push
mov
lea
dec
shrd
bsr
test
btr
btc
bswap
mov
test
sbb
neg
bt
mov
test
ror
btr
imul
mov
add
test
repz
mov
mov
fs
repz
sar
or
inc
xchg
shrd
repnz
imul
lea
imul
dec
mov
shld
bswap
dec
bts
neg
mov
xadd
shr
or
mov
or
not
repnz
mov
test
bt
test
mov
mov
ss
imul
bt
mov
imul
bsf
mov
bsf
imul
ror
bsf
mov
fs
btr
mov
imul
rcl
rcr
mov
not
or
bsf
bswap
btr
xadd
xadd
shrd
mov
bts
repnz
bsr
btr
bswap
mov
mov
mov
mov
inc
movzwl
movswl
btr
mov
bswap
repnz
xadd
lea
shld
lea
bswap
btr
bsr
bsf
imul
not
mov
bsr
test
imul
lea
bsf
lea
bsf
xadd
mov
test
mov
shld
xor
test
lea
mov
fs
bt
rol
test
shld
bswap
bsr
pop
jmp
add
add
jbe
mov
add
add
add
add
add
add
cwtl
add
addb
add
cmp
add
push
add
addb
add
push
add
add
add
addb
push
add
add
add
addb
add
jbe
mov
add
add
add
add
add
add
addb
add
clc
add
addb
add
adc
add
sub
add
inc
add
add
pop
add
add
jo
add
jbe
mov
add
add
xor
add
inc
sbb
andb
add
pop
sbb
adc
add
call
sbb
addb
add
sbb
add
xor
add
dec
push
add
pusha
push
add
js
add
nop
push
add
test
add
rolb
orb
add
sub
add
dec
sbb
orb
add
and
add
cmp
add
push
pop
add
push
sbb
addb
add
sbb
xorb
add
xor
add
push
sbb
cmp
add
adc
add
sub
add
inc
or
and
add
add
add
adc
add
and
andb
add
inc
sbb
adc
add
call
sbb
addb
add
sbb
add
xor
add
dec
or
adc
add
out
add
negb
adcb
add
push
sbb
add
fmuls
add
lock
sbbb
or
add
and
add
cmp
add
push
or
add
add
fcompl
add
cwtl
or
addb
xorb
add
xor
add
dec
push
add
bound
add
jp
add
xchg
push
add
stos
push
add
ret
xorb
sbb
add
repnz
add
or
add
and
add
cmp
add
push
pop
add
popw
add
jl
add
xchg
pop
add
test
add
mov
or
adc
add
ljmp
cmp
add
adc
add
sbb
add
sub
add
cmp
add
add
add
jbe
mov
add
add
add
add
add
or
add
jbe
mov
add
add
add
add
add
add
jbe
mov
add
add
add
sldt
push
sldt
orb
add
sldt
mov
add
enter
in
sldt
loopne
add
clc
or
add
adc
add
sub
add
inc
push
add
pop
push
add
jo
add
mov
add
mov
sldt
mov
sldt
rorb
add
call
sldt
add
add
sbb
add
xor
add
dec
sldt
pusha
sldt
js
add
nop
sldt
test
add
rorb
addb
add
jbe
mov
add
and
sbb
add
lock
or
add
and
add
cmp
add
jbe
mov
add
add
add
jg
add
add
push
jg
add
jg
add
jg
add
jg
add
adc
cmp
add
loopne
add
jbe
mov
add
add
add
adc
addb
add
jbe
mov
add
add
add
add
add
adc
add
add
add
mov
add
add
add
add
add
adc
add
add
add
mov
add
add
add
add
add
adc
add
add
add
mov
add
add
add
add
add
add
add
add
jbe
mov
add
add
add
add
add
add
add
add
jbe
mov
add
add
add
add
add
add
add
add
jbe
mov
add
add
add
add
add
add
add
add
jbe
mov
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
mov
add
add
add
add
add
adc
add
add
add
mov
add
add
add
add
add
adc
add
add
add
mov
add
add
add
add
add
adc
add
add
add
mov
add
add
add
add
add
adc
add
add
add
mov
add
add
add
add
add
adc
add
add
add
mov
add
add
add
add
add
adc
add
add
add
mov
add
add
add
add
add
adc
add
add
add
mov
add
add
add
add
add
adc
add
add
add
mov
add
add
add
add
add
add
add
add
jbe
mov
add
add
add
add
add
add
add
add
jbe
mov
add
add
add
add
add
add
add
add
jbe
mov
add
add
add
add
add
add
add
add
jbe
mov
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
mov
add
add
add
add
add
adc
add
add
add
mov
add
add
add
add
add
adc
add
add
add
mov
add
add
add
add
add
adc
add
add
add
mov
add
add
add
add
add
adc
add
add
add
mov
add
add
add
add
add
adc
add
add
add
mov
add
add
add
add
add
adc
add
add
add
mov
add
add
add
add
add
adc
add
add
add
mov
add
add
add
add
add
adc
add
add
add
mov
add
add
add
add
add
add
add
add
jbe
mov
add
add
add
add
add
add
add
add
jbe
mov
add
add
add
add
add
add
add
add
jbe
mov
add
add
add
add
add
add
add
add
jbe
mov
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
mov
add
add
add
add
add
adc
add
add
add
mov
add
add
add
add
add
adc
add
add
add
mov
add
add
add
add
add
adc
add
add
add
mov
add
add
add
add
add
adc
add
add
add
mov
add
add
add
add
add
adc
add
add
add
mov
add
add
add
add
add
adc
add
add
add
mov
add
add
add
add
add
adc
add
add
add
mov
add
add
add
add
add
adc
add
add
add
mov
add
add
add
add
add
add
add
add
jbe
mov
add
add
add
add
add
add
add
add
jbe
mov
add
add
add
add
add
add
add
add
jbe
mov
add
add
add
add
add
add
add
add
jbe
mov
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
mov
add
add
add
add
add
adc
add
add
add
mov
add
add
add
add
add
adc
add
add
add
mov
add
add
add
add
add
adc
add
add
add
mov
add
add
add
add
add
adc
add
add
add
mov
add
add
add
add
add
adc
add
jbe
mov
add
add
add
add
add
adc
add
jbe
mov
add
add
add
add
add
adc
add
jbe
mov
add
add
add
add
add
adc
add
jbe
mov
add
add
add
add
add
add
add
add
jbe
mov
add
add
add
add
add
add
add
add
jbe
mov
add
add
add
add
add
add
add
add
jbe
mov
add
add
add
add
add
add
add
add
jbe
mov
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
mov
add
add
add
add
add
adc
add
jbe
mov
add
add
add
add
add
adc
add
jbe
mov
add
add
add
add
add
adc
add
jbe
mov
add
add
add
add
add
adc
add
jbe
mov
add
add
add
add
add
push
add
add
add
jbe
mov
add
add
add
add
add
push
add
add
add
jbe
mov
add
add
add
add
add
push
add
add
add
jbe
mov
add
add
add
add
add
push
add
add
add
jbe
mov
add
add
add
add
add
add
add
add
jbe
mov
add
add
add
add
add
add
add
add
jbe
mov
add
add
add
add
add
add
add
add
jbe
mov
add
add
add
add
add
add
add
add
jbe
mov
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
mov
add
add
add
add
add
push
add
add
add
jbe
mov
add
add
add
add
add
push
add
add
add
jbe
mov
add
add
add
add
add
push
add
add
add
jbe
mov
add
add
add
add
add
push
add
add
add
jbe
mov
add
add
add
add
add
pop
add
add
add
jbe
mov
add
add
add
add
add
pop
add
add
add
jbe
mov
add
add
add
add
add
pop
add
add
add
jbe
mov
add
add
add
add
add
pop
add
add
add
jbe
mov
add
add
add
add
add
add
add
add
jbe
mov
add
add
add
add
add
add
add
add
jbe
mov
add
add
add
add
add
add
add
add
jbe
mov
add
add
add
add
add
add
add
add
jbe
mov
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
mov
add
add
add
add
add
pop
add
add
add
jbe
mov
add
add
add
add
add
pop
add
add
add
jbe
mov
add
add
add
add
add
pop
add
add
add
jbe
mov
add
add
add
add
add
pop
add
add
add
jbe
mov
add
add
add
add
add
sbb
add
add
add
mov
add
add
add
add
add
sbb
add
add
add
mov
add
add
add
add
add
sbb
add
add
add
mov
add
add
add
add
add
sbb
add
add
add
mov
add
add
add
add
add
add
add
add
jbe
mov
add
add
add
add
add
add
add
add
jbe
mov
add
add
add
add
add
add
add
add
jbe
mov
add
add
add
add
add
add
add
add
jbe
mov
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
mov
add
add
add
add
add
sbb
add
add
add
mov
add
add
add
add
add
sbb
add
add
add
mov
add
add
add
add
add
sbb
add
add
add
mov
add
add
add
add
add
sbb
add
add
add
mov
add
add
add
add
add
sbb
add
add
add
mov
add
add
add
add
add
sbb
add
add
add
mov
add
add
add
add
add
sbb
add
inc
push
add
add
cld
inc
push
add
add
xor
add
add
fs
push
add
add
cwtl
inc
push
add
add
int3
inc
push
add
add
add
add
add
xor
push
add
add
add
push
add
add
add
dec
push
add
add
add
add
add
add
add
push
add
add
add
push
push
add
add
add
push
push
add
add
add
push
push
add
add
add
add
add
push
add
add
add
add
add
nop
pusha
push
add
add
add
push
add
add
add
bound
add
add
add
arpl
add
add
add
gs
add
add
add
addr16
add
add
add
add
add
add
add
add
add
push
add
add
add
push
add
add
add
add
add
js
push
add
add
add
add
add
nop
jnp
add
add
add
add
add
test
push
add
add
add
add
add
rolb
add
js
push
add
add
add
add
add
xchg
push
add
add
add
add
add
cltd
push
add
add
add
add
add
push
add
add
add
add
add
cmpsl
push
add
add
add
add
add
lods
push
add
add
add
add
add
call
add
add
add
add
mov
add
add
add
add
add
in
mov
add
adc
push
add
add
add
add
add
cmp
push
add
add
add
add
or
push
add
add
add
add
add
and
push
add
add
add
push
add
add
add
add
add
add
pop
iret
push
add
add
add
add
add
push
add
add
add
add
add
add
push
aam
add
add
add
push
add
add
add
xlat
push
add
add
add
fsts
add
add
add
add
fstl
add
add
add
add
add
add
push
add
add
add
push
add
add
add
loopne
add
add
xor
push
add
add
mov
push
add
add
in
push
add
add
cmp
push
add
add
xchg
out
add
add
in
call
add
inc
ljmp
pushf
jmp
add
add
hlt
in
push
add
add
dec
out
push
add
add
movsb
out
push
add
add
cld
lock
add
add
push
repnz
add
add
lods
repz
add
add
add
push
add
add
pop
notb
add
add
mov
push
add
add
or
push
add
add
fs
push
add
add
mov
add
add
add
cld
std
push
add
add
add
add
add
and
pop
add
add
add
add
add
dec
or
add
add
add
add
add
or
add
add
clc
or
add
add
add
rcrb
add
cmp
add
inc
sbb
push
add
add
add
add
pop
dec
sbb
add
add
add
insb
dec
sbb
dec
add
add
add
mov
add
add
add
add
add
sbb
mov
add
enter
cld
add
add
pop
sbb
in
add
add
add
add
pop
sbb
lock
add
bound
add
add
add
add
add
add
pusha
sbb
mov
add
in
sbb
dec
add
add
push
add
add
add
outsb
sbb
enter
lock
add
add
add
add
add
add
add
sbb
lock
add
sbb
rolb
add
jnp
add
add
add
jle
add
add
add
sbb
xor
add
jo
sbb
adc
add
test
add
xchg
mov
add
add
add
add
dec
lea
add
or
add
sbb
enter
adc
add
pop
nop
pop
add
add
insb
nop
pop
add
add
adcb
add
add
test
pop
add
add
mov
add
add
nop
pop
add
add
loopne
and
adc
add
pop
add
inc
add
inc
add
push
add
add
inc
add
dec
add
add
inc
add
inc
add
inc
add
dec
add
add
inc
add
dec
add
push
add
push
add
inc
add
inc
add
add
add
inc
add
inc
add
dec
add
inc
add
inc
add
dec
add
add
inc
add
dec
add
pop
add
inc
add
inc
add
add
add
add
inc
add
pop
add
push
add
inc
add
inc
add
or
inc
add
pop
add
inc
add
inc
add
push
add
or
inc
add
pop
add
inc
add
push
add
or
inc
add
pop
add
push
add
push
add
pop
add
inc
add
add
push
add
inc
add
push
add
dec
add
inc
add
add
push
add
add
push
add
inc
add
push
add
dec
add
inc
add
dec
add
push
add
add
push
add
inc
add
push
add
dec
add
inc
add
push
add
push
add
or
inc
add
pop
add
push
add
push
add
pop
add
inc
add
add
push
add
inc
add
push
add
dec
add
dec
add
add
push
add
inc
add
push
add
dec
add
push
add
dec
add
inc
add
add
push
add
inc
add
push
add
dec
add
push
add
add
push
add
inc
add
add
dec
add
add
push
add
inc
add
add
inc
add
add
dec
add
add
adc
inc
add
pop
add
push
add
push
add
dec
add
add
dec
add
add
or
inc
add
pop
add
dec
add
push
add
pop
add
add
push
add
inc
add
inc
add
add
dec
add
pop
add
dec
add
adc
inc
add
pop
add
push
add
inc
add
dec
add
push
add
pop
add
dec
add
push
add
add
push
add
inc
add
inc
add
add
dec
add
pop
add
dec
add
push
add
add
push
add
inc
add
inc
add
add
inc
add
push
add
dec
add
adc
inc
add
pop
add
push
add
inc
add
push
add
push
add
add
dec
add
push
add
add
push
add
inc
add
inc
add
add
inc
add
push
add
dec
add
push
add
add
push
add
dec
add
push
add
add
push
add
dec
add
dec
add
add
push
add
dec
add
add
add
push
add
dec
add
push
add
add
add
add
push
add
dec
add
push
add
dec
add
dec
add
inc
add
pop
add
inc
add
inc
add
dec
add
add
or
inc
add
pop
add
inc
add
push
add
dec
add
push
add
or
inc
add
pop
add
inc
add
push
add
inc
add
push
add
add
dec
add
inc
add
inc
add
dec
add
add
or
inc
add
pop
add
inc
add
push
add
pop
add
push
add
push
add
dec
add
add
add
push
add
push
add
dec
add
add
add
push
add
push
add
dec
add
add
add
push
add
push
add
dec
add
pop
add
push
add
push
add
dec
add
add
add
push
add
push
add
dec
add
inc
add
push
add
push
add
push
add
push
add
dec
add
inc
add
push
add
inc
add
push
add
add
push
add
push
add
dec
add
inc
add
push
add
inc
add
push
add
add
add
push
add
push
add
dec
add
inc
add
push
add
inc
add
pop
add
inc
add
pop
add
dec
add
add
add
push
add
push
add
add
or
add
push
add
dec
add
push
add
dec
add
push
add
or
inc
add
pop
add
push
add
dec
add
pop
add
inc
add
push
add
push
add
push
add
dec
add
add
push
add
push
add
inc
add
add
xor
or
inc
add
pop
add
dec
add
inc
add
push
add
add
add
add
push
add
push
add
inc
add
add
xor
xor
or
inc
add
pop
add
dec
add
inc
add
push
add
add
add
add
push
add
push
add
inc
add
add
xor
xor
or
inc
add
pop
add
dec
add
inc
add
push
add
add
or
inc
add
pop
add
dec
add
inc
add
push
add
add
add
pop
add
dec
add
inc
add
push
add
add
add
add
push
add
push
add
inc
add
add
xor
aaa
add
add
push
add
push
add
inc
add
add
xor
cmp
or
inc
add
pop
add
dec
add
inc
add
push
add
add
add
add
push
add
push
add
inc
add
add
xor
or
inc
add
pop
add
dec
add
inc
add
push
add
add
add
add
push
add
push
add
inc
add
add
xor
xor
or
inc
add
pop
add
dec
add
inc
add
push
add
add
add
push
add
push
add
inc
add
add
xor
or
inc
add
pop
add
dec
add
inc
add
push
add
add
pop
add
dec
add
inc
add
push
add
add
add
push
add
push
add
inc
add
add
aaa
add
add
push
add
push
add
inc
add
add
cmp
or
inc
add
pop
add
dec
add
inc
add
push
add
add
add
push
add
push
add
add
or
inc
add
pop
add
push
add
inc
add
add
add
add
push
add
push
add
push
add
push
add
dec
add
add
push
add
push
add
add
push
add
inc
add
dec
add
push
add
dec
add
push
add
or
inc
add
add
add
push
add
add
add
add
add
dec
add
dec
add
add
inc
add
dec
add
inc
add
dec
add
inc
add
add
push
add
add
push
add
add
push
add
xor
push
add
add
push
add
xor
or
dec
add
dec
add
dec
add
dec
add
sub
add
les
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
or
add
or
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
or
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
daa
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
and
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
and
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cmp
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cmp
add
cmp
add
cmp
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
dec
add
add
add
dec
add
add
add
add
dec
add
add
add
dec
add
add
add
dec
add
add
add
dec
add
add
add
dec
add
add
add
dec
add
add
add
dec
add
add
add
dec
add
add
add
dec
add
add
add
dec
add
add
add
dec
add
add
add
dec
add
add
add
dec
add
add
add
dec
add
add
add
dec
add
add
add
dec
add
add
add
dec
add
add
add
dec
add
add
add
dec
add
add
add
dec
add
add
add
dec
add
add
add
dec
add
add
add
dec
add
add
add
dec
add
add
add
dec
add
add
add
dec
add
add
add
dec
add
add
add
dec
add
add
add
dec
add
add
add
dec
add
add
add
dec
add
add
add
dec
add
add
add
dec
add
add
add
dec
add
add
add
dec
add
add
add
dec
add
add
add
dec
add
add
add
dec
add
add
add
dec
add
add
add
dec
add
add
add
dec
add
add
add
dec
add
add
add
dec
add
add
add
dec
add
add
add
dec
add
add
add
dec
add
add
add
dec
add
add
add
dec
add
add
add
dec
add
add
add
dec
add
add
add
dec
add
add
add
dec
add
add
add
dec
add
add
add
dec
add
add
add
dec
add
add
add
dec
add
add
add
dec
add
add
add
dec
add
add
add
dec
add
add
add
dec
add
add
add
dec
add
add
add
dec
add
add
add
dec
add
add
add
dec
add
add
add
dec
add
add
add
dec
add
add
add
dec
add
add
add
dec
add
add
add
dec
add
add
add
dec
add
add
add
dec
add
add
add
add
add
dec
add
add
add
inc
add
add
add
aas
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
push
add
add
add
and
add
sub
add
xor
add
cmp
add
inc
add
add
add
dec
add
add
add
push
add
add
add
pop
add
add
add
pop
add
add
add
pop
add
add
add
pop
add
add
add
pop
add
add
add
pop
add
add
add
pop
add
add
add
pop
add
add
add
pop
add
add
add
pop
add
add
add
pop
add
add
add
pop
add
add
add
pop
add
add
add
pop
add
add
add
pop
add
add
add
pop
add
add
add
pop
add
add
add
pop
add
add
add
pop
add
add
add
pop
add
add
add
pop
add
add
add
pop
add
add
add
pop
add
add
add
pop
add
add
add
pop
add
add
add
pop
add
add
add
pop
add
add
add
pop
add
add
add
pop
add
add
add
pop
add
add
add
pop
add
add
add
pop
add
add
add
pop
add
add
add
pop
add
add
add
pop
add
add
add
pop
add
add
add
pop
add
add
add
pop
add
add
add
pop
add
add
add
pop
add
add
add
pop
add
add
add
pop
add
add
add
pop
add
add
add
pop
add
add
add
pop
add
add
add
pop
add
add
add
pop
add
add
add
pop
add
add
add
pop
add
add
add
pop
add
add
add
pop
add
add
add
pop
add
add
add
pop
add
add
add
pop
add
add
add
pop
add
add
add
pop
add
add
add
pop
add
add
add
pop
add
add
add
pop
add
add
add
pop
add
add
add
pop
add
add
add
pop
add
add
add
pop
add
add
add
pop
add
add
add
pop
add
add
add
pop
add
add
add
pop
add
add
add
pop
add
add
add
pop
add
add
add
pop
add
add
add
pop
add
add
add
pop
add
add
add
pop
add
add
add
pop
add
add
add
pop
add
add
add
pop
add
add
add
push
add
add
add
dec
add
add
add
cmp
add
xor
add
sub
add
and
add
sbb
add
push
add
add
add
add
add
or
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
push
add
add
add
popa
add
add
add
push
add
add
add
add
outsb
add
add
add
outsb
add
add
add
outsb
add
add
add
outsb
add
add
add
outsb
add
add
add
outsb
add
add
add
outsb
add
add
add
outsb
add
add
add
outsb
add
add
add
outsb
add
add
add
outsb
add
add
add
outsb
add
add
add
outsb
add
add
add
outsb
add
add
add
outsb
add
add
add
outsb
add
add
add
outsb
add
add
add
outsb
add
add
add
outsb
add
add
add
outsb
add
add
add
outsb
add
add
add
outsb
add
add
add
outsb
add
add
add
outsb
add
add
add
outsb
add
add
add
outsb
add
add
add
outsb
add
add
add
outsb
add
add
add
outsb
add
add
add
outsb
add
add
add
outsb
add
add
add
outsb
add
add
add
outsb
add
add
add
outsb
add
add
add
outsb
add
add
add
outsb
add
add
add
outsb
add
add
add
outsb
add
add
add
outsb
add
add
add
outsb
add
add
add
outsb
add
add
add
outsb
add
add
add
outsb
add
add
add
outsb
add
add
add
outsb
add
add
add
outsb
add
add
add
outsb
add
add
add
outsb
add
add
add
outsb
add
add
add
outsb
add
add
add
outsb
add
add
add
outsb
add
add
add
outsb
add
add
add
outsb
add
add
add
outsb
add
add
add
outsb
add
add
add
outsb
add
add
add
outsb
add
add
add
outsb
add
add
add
outsb
add
add
add
outsb
add
add
add
outsb
add
add
add
outsb
add
add
add
outsb
add
add
add
outsb
add
add
add
outsb
add
add
add
outsb
add
add
add
outsb
add
add
add
outsb
add
add
add
outsb
add
add
add
outsb
add
add
add
outsb
add
add
add
insl
add
add
add
add
push
add
add
add
pop
add
add
add
dec
add
add
add
cmp
add
xor
add
sub
add
and
add
sbb
add
adc
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
dec
add
add
add
bound
add
imul
add
je
add
js
add
jp
add
jl
add
jle
add
jle
add
jle
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jle
add
jle
add
jle
add
jl
add
jp
add
js
add
je
add
outsl
add
add
add
bound
add
pop
add
add
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
sbb
add
and
add
sub
add
add
add
add
dec
add
add
add
add
add
add
jbe
add
jge
add
addb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
outsb
add
add
add
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
das
add
add
add
add
add
push
add
add
add
outsb
add
add
add
addb
add
add
add
add
lcall
add
add
popf
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
lcall
add
add
mov
add
addb
add
add
outsb
add
add
add
push
add
add
add
cmp
add
das
add
add
add
sbb
add
adc
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
jbe
add
addb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
addb
add
add
push
add
pop
add
add
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
outsl
add
add
add
mov
add
xchg
add
add
add
test
add
lods
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
outsl
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
je
add
addb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
cmp
add
sub
add
and
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
js
add
xchg
add
xchg
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
cmp
add
sub
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
jmp
lock
jmp
lock
jmp
lock
jmp
lock
jmp
lock
jmp
lock
jmp
lock
jmp
lock
jmp
lock
jmp
lock
jmp
lock
jmp
lock
jmp
lock
jmp
lock
jmp
lock
jmp
lock
jmp
lock
jmp
lock
jmp
lock
jmp
lock
jmp
lock
jmp
lock
jmp
lock
jmp
lock
jmp
lock
jmp
lock
jmp
lock
jmp
lock
jmp
lock
jmp
lock
jmp
lock
jmp
lock
jmp
lock
jmp
lock
jmp
lock
jmp
lock
jmp
lock
jmp
lock
jmp
lock
jmp
lock
jmp
lock
jmp
lock
jmp
lock
jmp
lock
jmp
lock
jmp
lock
jmp
lock
jmp
lock
jmp
lock
jmp
lock
jmp
lock
jmp
lock
jmp
lock
jmp
lock
jmp
lock
jmp
lock
jmp
lock
jmp
lock
jmp
lock
jmp
lock
jmp
lock
jmp
lock
jmp
lock
jmp
lock
jmp
lock
jmp
lock
jmp
lock
jmp
lock
jmp
lock
jmp
lock
jmp
lock
jmp
lock
jmp
lock
jmp
lock
jmp
lock
jmp
lock
jmp
lock
jmp
lock
jmp
lock
jmp
lock
jmp
lock
jmp
lock
jmp
lock
add
mov
add
add
add
xchg
add
add
add
add
add
pop
add
add
add
cmp
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jmp
lock
jmp
lock
jmp
lock
jmp
lock
jmp
lock
jmp
lock
jmp
lock
jmp
lock
jmp
lock
jmp
lock
jmp
lock
jmp
lock
jmp
lock
jmp
lock
jmp
lock
jmp
lock
jmp
lock
jmp
lock
jmp
lock
jmp
lock
jmp
lock
jmp
lock
jmp
lock
jmp
lock
jmp
lock
jmp
lock
jmp
lock
jmp
lock
jmp
lock
jmp
lock
jmp
lock
jmp
lock
jmp
lock
jmp
lock
jmp
lock
jmp
lock
jmp
lock
jmp
lock
jmp
lock
jmp
lock
jmp
lock
jmp
lock
jmp
lock
jmp
lock
jmp
lock
jmp
lock
jmp
lock
jmp
lock
jmp
lock
jmp
lock
jmp
lock
jmp
lock
jmp
lock
jmp
lock
jmp
lock
jmp
lock
jmp
lock
jmp
out
lock
out
lock
jmp
out
lock
in
out
jmp
in
out
jmp
out
lock
out
lock
jmp
lock
jmp
lock
jmp
lock
jmp
lock
jmp
lock
jmp
lock
jmp
lock
jmp
lock
jmp
lock
jmp
lock
jmp
lock
jmp
lock
jmp
lock
jmp
lock
jmp
lock
jmp
lock
jmp
lock
jmp
lock
jmp
lock
jmp
lock
jmp
lock
jmp
add
mov
add
add
add
add
add
add
add
add
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jmp
lock
jmp
lock
jmp
lock
jmp
lock
jmp
lock
jmp
lock
jmp
lock
jmp
lock
jmp
lock
jmp
lock
jmp
lock
jmp
lock
jmp
lock
jmp
lock
jmp
lock
jmp
lock
jmp
lock
jmp
lock
jmp
lock
jmp
lock
jmp
lock
jmp
lock
jmp
lock
jmp
lock
jmp
lock
jmp
lock
jmp
lock
jmp
lock
jmp
lock
jmp
lock
jmp
lock
jmp
lock
jmp
lock
jmp
lock
jmp
lock
jmp
lock
jmp
lock
jmp
lock
jmp
lock
jmp
lock
jmp
lock
jmp
lock
jmp
lock
jmp
lock
jmp
lock
jmp
lock
jmp
lock
jmp
lock
jmp
lock
jmp
lock
jmp
lock
jmp
lock
jmp
lock
jmp
lock
jmp
lock
jmp
lock
jmp
out
lock
out
lock
in
out
jmp
in
out
jmp
ljmp
loope
ljmp
ljmp
jmp
lock
jmp
lock
jmp
lock
jmp
lock
jmp
lock
jmp
lock
jmp
lock
jmp
lock
jmp
lock
jmp
lock
jmp
lock
jmp
lock
jmp
lock
jmp
lock
jmp
lock
jmp
lock
jmp
lock
jmp
lock
jmp
lock
jmp
lock
jmp
lock
jmp
add
mov
add
add
add
add
add
add
add
outsb
add
add
add
dec
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jmp
lock
jmp
lock
jmp
lock
jmp
lock
jmp
lock
jmp
lock
jmp
lock
jmp
lock
jmp
lock
jmp
lock
jmp
lock
jmp
lock
jmp
lock
jmp
lock
jmp
lock
jmp
lock
jmp
lock
jmp
lock
jmp
lock
jmp
lock
jmp
lock
jmp
lock
jmp
lock
jmp
lock
jmp
lock
jmp
lock
jmp
lock
jmp
lock
jmp
lock
jmp
lock
jmp
lock
jmp
lock
jmp
lock
jmp
lock
jmp
lock
jmp
lock
jmp
lock
jmp
lock
jmp
lock
jmp
lock
jmp
lock
jmp
lock
jmp
lock
jmp
lock
jmp
lock
jmp
lock
jmp
lock
jmp
lock
jmp
lock
jmp
lock
jmp
lock
jmp
lock
jmp
lock
jmp
lock
jmp
lock
jmp
lock
jmp
in
out
jmp
call
call
call
fnclex
in
fucom
out
call
jmp
out
lock
out
lock
jmp
lock
jmp
lock
jmp
lock
jmp
lock
jmp
lock
jmp
lock
jmp
lock
jmp
lock
jmp
lock
jmp
lock
jmp
lock
jmp
lock
jmp
lock
jmp
lock
jmp
lock
jmp
lock
jmp
lock
jmp
lock
jmp
lock
jmp
lock
jmp
add
mov
add
add
add
add
add
add
add
outsb
add
add
add
dec
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jmp
lock
jmp
lock
jmp
lock
jmp
lock
jmp
lock
jmp
lock
jmp
lock
jmp
lock
jmp
lock
jmp
lock
jmp
lock
jmp
lock
jmp
lock
jmp
lock
jmp
lock
jmp
lock
jmp
lock
jmp
lock
jmp
lock
jmp
lock
jmp
lock
jmp
lock
jmp
lock
out
lock
out
lock
in
out
jmp
in
out
jmp
out
lock
out
lock
jmp
lock
jmp
lock
jmp
lock
jmp
lock
jmp
lock
jmp
lock
jmp
lock
jmp
lock
jmp
lock
jmp
lock
jmp
lock
jmp
lock
jmp
lock
jmp
lock
jmp
lock
jmp
lock
jmp
lock
jmp
lock
jmp
lock
jmp
lock
jmp
lock
jmp
lock
jmp
lock
jmp
lock
jmp
lock
jmp
lock
jmp
lock
jmp
lock
jmp
lock
jmp
out
lock
ljmp
fcomp
loopne
call
fcmovnu
call
call
fcmovnu
call
fcmovnu
fcomp
loopne
fchs
loop
call
jmp
in
out
jmp
in
out
jmp
lock
jmp
lock
jmp
lock
jmp
lock
jmp
lock
jmp
lock
jmp
lock
jmp
out
lock
out
lock
in
out
jmp
in
out
jmp
out
lock
jmp
lock
jmp
lock
jmp
lock
jmp
lock
jmp
lock
jmp
lock
jmp
lock
jmp
lock
jmp
lock
jmp
lock
add
mov
add
add
add
add
add
jle
add
outsb
add
add
add
dec
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jmp
lock
jmp
lock
jmp
lock
jmp
lock
jmp
lock
jmp
lock
jmp
lock
jmp
lock
out
lock
out
lock
out
lock
out
lock
jmp
out
lock
jmp
in
out
jmp
in
out
jmp
in
out
jmp
in
out
jmp
in
out
jmp
in
out
jmp
out
lock
out
lock
out
lock
jmp
out
lock
out
lock
in
out
jmp
in
out
jmp
in
out
jmp
out
lock
out
lock
out
lock
out
lock
jmp
out
lock
in
out
jmp
ljmp
fucom
out
fucom
out
fucom
out
loope
ljmp
out
lock
out
lock
jmp
lock
jmp
lock
jmp
out
lock
jmp
out
lock
out
lock
out
lock
out
lock
out
lock
jmp
lock
jmp
lock
jmp
lock
jmp
out
lock
out
lock
in
out
jmp
in
out
jmp
in
out
jmp
in
out
jmp
out
lock
out
lock
jmp
lock
jmp
lock
jmp
lock
jmp
lock
jmp
lock
jmp
lock
jmp
lock
jmp
lock
jmp
out
lock
in
out
jmp
in
out
jmp
in
out
jmp
in
out
jmp
out
lock
jmp
out
lock
jmp
lock
jmp
in
out
jmp
call
in
rcr
int3
rcl
dec
iret
sar
inc
int
dec
rcl
dec
rcl
dec
rcl
call
xlat
fcos
fchs
loop
fnclex
in
fucom
out
loope
ljmp
in
out
jmp
in
out
jmp
out
lock
out
lock
in
out
jmp
in
out
jmp
out
lock
jmp
out
lock
out
lock
jmp
out
lock
out
lock
call
call
fucom
out
call
jmp
in
out
jmp
in
out
jmp
lock
jmp
lock
jmp
lock
jmp
lock
jmp
lock
jmp
lock
jmp
lock
jmp
lock
jmp
add
rolb
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
xlat
xlat
xlat
xlat
fchs
dec
dec
fndisi(8087
dec
fucom
call
call
loop
fsub
jmp
fucomip
in
jmp
in
out
jmp
in
out
jmp
in
lock
out
lock
jmp
in
out
ljmp
jmp
jmp
jmp
in
jmp
jmp
call
jmp
call
lock
out
repnz
hlt
cmc
push
hlt
cmc
in
lock
ljmp
call
ljmp
call
out
out
out
repnz
in
icebp
repnz
out
repz
in
icebp
bnd
jmp
loop
fcomp
aam
fcos
aam
fcos
fdivrp
loopne
in
call
lock
push
hlt
cmc
push
div
push
div
push
div
push
clc
stc
push
div
in
icebp
repnz
in
icebp
repnz
jmp
lock
jmp
in
out
call
out
out
in
lock
push
hlt
cmc
out
repz
push
cmc
idiv
out
repz
push
cmc
idiv
out
repz
in
icebp
repz
call
jmp
jmp
jmp
out
loop
jmp
jmp
jmp
call
icebp
repz
out
repz
out
repz
push
cmc
idiv
lock
idiv
lock
idiv
lock
idiv
lock
idiv
lock
idiv
lock
idiv
lock
idiv
lock
idiv
repnz
push
div
push
div
push
hlt
cmc
in
icebp
repnz
jmp
lock
jmp
jmp
jmp
out
out
out
repnz
hlt
cmc
push
div
push
hlt
cmc
push
div
in
lock
jmp
call
fdivrp
into
rcl
inc
enter
mov
mov
leave
lret
int3
int
int3
rcl
call
aad
call
xlat
fdivr
xlat
fcmovnu
fdivrp
fsubp
jecxz
loop
out
in
jmp
jmp
ljmp
call
out
out
in
lock
in
lock
out
repnz
hlt
cmc
push
hlt
cmc
in
lock
jmp
ljmp
fdivrp
aad
rcl
fdivr
fdivrp
loopne
in
call
lock
push
div
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
incl
add
rolb
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
into
pushl
into
mov
rcr
mov
aam
inc
xlat
fchs
dec
fndisi(8087
dec
fsubp
call
loop
call
jecxz
call
call
loopne
call
fcomp
loop
xlat
fstp
fcomp
fdivrp
fcmovnu
call
fcmovu
call
aam
call
aam
dec
rcl
dec
rcl
dec
rcl
call
fdivr
xlat
fsub
jecxz
loopne
out
loop
jmp
fsub
jecxz
fcmovnu
loope
aad
fdivr
rcl
fdivr
rcl
call
fdivr
aad
fdivr
fcmovnu
loope
loopne
out
in
jmp
in
jmp
call
dec
lret
mov
mov
mov
mov
lret
rcl
xlat
in
out
in
in
icebp
repnz
out
repz
out
repz
in
icebp
repnz
jmp
jmp
in
fcmovnu
fdivrp
aad
xlat
fsub
jecxz
in
jmp
call
out
icebp
in
icebp
repz
in
out
jmp
ljmp
fcmovnu
call
aad
dec
rcl
dec
rcl
dec
rcl
call
rcl
call
fcmovnu
loop
jecxz
ljmp
repnz
in
repnz
in
repnz
in
repnz
in
repnz
in
repnz
in
repnz
out
repz
out
repz
push
cmc
idiv
lock
idiv
out
repz
call
jmp
jecxz
fdivrp
aad
aam
fcos
fcmovu
fcmovu
fucom
loop
in
ljmp
lock
ljmp
fdivrp
leave
int3
int
mov
scas
scas
jmp
mov
cmpsl
ljmp
mov
pushl
mov
pushl
mov
mov
inc
mov
lret
iret
sar
iret
rcl
call
xlat
call
aam
call
aam
call
aam
call
fcomp
fcomp
fucom
loop
loope
out
out
in
jmp
jmp
loop
rcl
xlat
inc
lret
mov
mov
pushl
mov
lret
call
xlat
fdivr
fsubp
jecxz
call
hlt
cmc
push
div
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
incl
add
rolb
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
scas
enter
sar
stos
iret
ljmp
sar
scas
leave
sar
mov
sar
mov
aad
mov
mov
rcr
inc
inc
aad
inc
aad
inc
rcl
inc
int
inc
lret
mov
rol
mov
mov
mov
ljmp
lods
scas
jmp
lods
scas
pushl
mov
enter
sar
into
rcl
call
rcl
dec
int
inc
mov
mov
ljmp
mov
mov
enter
sar
rcl
fdivr
rcl
fdivr
leave
int
pushl
cmpsl
test
xchg
cwtl
cwtl
decl
mov
jmp
mov
fcmovu
in
ljmp
jmp
jmp
out
fdivrp
into
rcl
inc
leave
lret
ret
mov
mov
mov
inc
lret
int3
call
aad
fneni(8087
loop
jecxz
in
jmp
in
out
jmp
out
loope
lret
mov
mov
ljmp
lods
scas
ljmp
mov
mov
int3
into
call
fcmovu
fninit
out
jecxz
out
jmp
out
bnd
out
bnd
out
bnd
out
repnz
ljmp
jmp
hlt
jmp
hlt
in
repnz
jmp
in
out
fsubp
in
rcr
enter
mov
mov
pushl
mov
mov
call
xlat
loopne
loope
out
loop
out
fdivrp
enter
mov
mov
lahf
mov
incl
addl
decl
xchg
decl
nop
decl
xchg
xchg
call
mov
stos
ljmp
mov
pushl
mov
pushl
mov
sar
lret
iret
rcl
call
fcmovu
call
fcomp
dec
int
mov
test
call
mov
call
cmpsl
test
mov
mov
fucom
loope
ljmp
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
incl
add
rolb
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
mov
leave
jmp
mov
lret
jmp
ret
int
stos
iret
pushl
lret
sar
mov
aam
mov
int
mov
ljmp
lods
mov
fwait
movsl
test
cwtl
mov
popf
call
xchg
xchg
decl
xchg
pushl
jge
jns
jle
jns
jle
addl
mov
pushl
mov
jmp
sahf
mov
incl
test
call
mov
mov
mov
mov
mov
cwtl
fwait
pushf
jle
cmp
jno
jae
imul
addr16
call
mov
dec
lret
xlat
fcmovnu
jmp
in
fsubp
jecxz
rcl
fdivr
rol
ljmp
mov
cwtl
decl
xchg
decl
popf
lahf
ljmp
mov
sar
aam
fdivrp
aad
rcr
fdivr
ret
lret
into
ljmp
mov
xchg
jge
test
js
jle
jp
cmp
xchg
xchg
lcall
mov
aam
loopne
fsub
jmp
jmp
jmp
jmp
in
out
jmp
in
out
jmp
in
lock
out
icebp
jmp
out
bnd
out
bnd
jmp
jecxz
int3
rcl
mov
stos
stos
call
lea
decl
xchg
xchg
jmp
mov
lret
xlat
call
aam
inc
enter
mov
call
jle
ljmp
insb
jmp
popa
lcall
lcall
pop
lcall
popa
jmp
jmp
jmp
arpl
pusha
popa
lcall
pusha
lcall
pusha
jmp
pushw
jb
jge
cmp
test
incl
xchg
decl
xchg
xchg
jmp
mov
mov
rol
scas
mov
call
jg
ljmp
outsb
pushl
jb
push
push
jle
xchg
xchg
cwtl
pushl
int
fucom
loop
in
icebp
repnz
div
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
incl
add
rolb
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xchg
mov
call
mov
call
mov
call
mov
jmp
ror
movsl
ror
movsl
mov
mov
decl
xchg
ljmp
jae
imul
arpl
pop
pop
pusha
call
pop
decl
push
decl
decl
push
call
pop
call
call
pop
jmp
pushw
js
test
cwtl
call
mov
jmp
lcall
pop
lcall
pop
lcall
jmp
insb
pushl
jge
mov
mov
decl
jbe
push
pop
pop
ljmp
outsb
pushl
mov
ljmp
outsl
call
pop
pushl
jae
xchg
xchg
xchg
pushl
sar
rcr
iret
rcl
mov
cmpsb
cmpsl
decl
jne
jmp
imul
pop
pusha
popa
jmp
pushw
jbe
addb
pushl
int
dec
rcl
inc
lret
stos
mov
decl
jl
jmp
outsb
lcall
pop
call
pop
call
pop
lcall
ljmp
incl
cmpsb
stos
pushl
aad
call
loopne
ljmp
out
fsub
jmp
fucomip
in
fucomip
in
jmp
ljmp
loopne
dec
rcl
pushl
mov
xchg
jo
je
pushw
pop
pop
pop
lcall
pop
jmp
imul
xchg
xchg
xchg
ljmp
rol
mov
mov
call
js
jmp
push
call
push
decl
dec
decl
dec
decl
dec
decl
dec
decl
dec
decl
dec
lcall
pop
incl
cmpsl
cmpsl
jmp
js
push
push
push
lcall
pop
lcall
pop
lcall
lcall
pop
lcall
pop
jmp
arpl
insb
outsb
jo
jge
cmp
xchg
xchg
jmp
mov
xchg
pushl
jbe
pop
pop
pop
ljmp
jo
mov
mov
mov
mov
insb
insl
insl
call
pop
pushl
jne
xchg
xchg
xchg
pushl
xlat
jmp
jmp
hlt
push
idiv
push
idiv
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
incl
add
rolb
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
mov
incl
mov
decl
mov
call
mov
call
mov
call
mov
xchg
ljmp
jns
pop
push
decl
push
decl
dec
lcall
pop
decl
pushl
cmp
xor
push
decl
test
pushf
decl
addb
popa
pushw
jbe
ljmp
ja
arpl
jl
cmp
cmpsl
cmpsl
ljmp
test
movsl
lcall
jle
push
outsl
jnp
cmp
addb
pop
pop
incl
in
in
in
in
in
dec
int
lcall
jo
pushl
jns
popf
mov
mov
mov
stos
stos
incl
jge
xchg
mov
xchg
mov
xchg
xchg
xchg
lcall
jg
jg
mov
lahf
cmpsl
stos
pushl
enter
mov
pushl
cmp
jp
ljmp
mov
mov
ljmp
lea
incl
mov
mov
lret
aad
dec
call
call
loope
call
loop
call
jecxz
call
jecxz
ljmp
aad
mov
cmpsb
test
pushl
jnp
fwait
pushf
popf
call
pusha
popa
incl
lcall
pusha
pushl
je
jne
js
xchg
xchg
xchg
ljmp
lods
scas
lcall
jge
decl
mov
lret
dec
lret
lret
dec
leave
leave
inc
mov
inc
mov
inc
call
aad
in
in
in
push
hlt
cmc
ljmp
cmp
ljmp
lcall
stos
stos
jmp
mov
popf
jnp
jl
jb
jne
addl
lcall
pusha
decl
mov
in
in
in
in
in
in
dec
lret
lret
lcall
jo
jns
jl
mov
int3
int
fsubp
jecxz
in
lock
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
incl
add
rolb
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
subl
mov
subb
incl
stos
mov
incl
scas
mov
incl
mov
lcall
call
mov
ljmp
mov
mov
mov
ljmp
sub
decl
jmp
loop
loopne
loope
lahf
mov
push
call
call
decl
push
ljmp
in
in
push
repnz
call
dec
iret
iret
lcall
pop
jmp
push
call
pop
ljmp
insl
call
aam
push
cmc
cmc
cli
cli
cli
cli
cli
cli
push
div
jmp
loopne
incl
fs
mov
mov
mov
call
outsb
jo
cltd
lcall
call
jmp
in
in
in
in
in
in
fcmovnu
fdivr
mov
jne
mov
mov
stos
mov
lcall
mov
call
out
push
hlt
hlt
push
cmc
cmc
push
hlt
hlt
push
icebp
icebp
inc
imul
xchg
lahf
mov
mov
aad
inc
fchs
dec
dec
dec
fndisi(8087
dec
fucom
dec
fsubp
dec
inc
into
sar
scas
mov
xchg
jmp
outsb
decl
aam
leave
leave
leave
pushl
jne
pusha
popa
popa
incl
nop
xchg
ljmp
outsb
jge
cmp
fwait
sahf
lahf
decl
push
jmp
out
out
stc
stc
stc
sti
sti
sti
sti
sti
sti
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
sti
sti
sti
std
std
std
push
cmc
cmc
pushl
das
das
ljmp
sub
ljmp
in
in
push
icebp
bnd
call
aam
into
into
into
call
pop
pop
ljmp
insb
ljmp
insb
lcall
pop
pushl
je
fcos
div
idiv
cli
cli
cli
stc
stc
stc
push
div
fcmovnu
jle
jg
imul
mov
call
hlt
cmc
push
div
push
div
push
idiv
push
idiv
push
idiv
push
idiv
push
idiv
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
incl
add
rolb
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
js
mov
ja
mov
ja
mov
jbe
mov
ja
mov
ja
mov
js
mov
jl
mov
jle
mov
jle
mov
jl
lods
pushl
lahf
jmp
test
dec
pusha
jmpw
imul
mov
out
repnz
icebp
icebp
jmp
loope
decl
and
lcall
xchg
jmp
loope
ljmp
push
repnz
lock
ret
ret
decl
push
incl
dec
incl
dec
incl
dec
pushl
div
clc
clc
clc
call
rcl
call
aam
jmp
inc
inc
decl
push
decl
push
aas
inc
inc
incl
jmp
cli
cli
cli
sti
sti
sti
sti
sti
sti
sti
sti
sti
jmp
in
incl
pop
incl
cmpsb
test
scas
mov
jmp
xchg
call
jmp
stc
stc
stc
sti
sti
sti
sti
sti
sti
stc
stc
stc
jmp
loopne
pushl
lcall
imul
xchg
movsl
stos
lcall
mov
decl
pop
call
icebp
icebp
sti
sti
sti
cli
cli
cli
sti
sti
sti
sti
sti
sti
dec
iret
sar
pop
pop
popa
lcall
insl
incl
scas
mov
lods
ror
mov
sar
mov
rcr
mov
aam
inc
ret
mov
ret
leave
lcall
mov
decl
loopne
call
aam
call
jg
call
xchg
xchg
lcall
popa
ljmp
decl
xchg
xchg
jl
cmp
pop
pop
ljmp
lock
stc
stc
stc
std
std
std
std
std
std
std
std
std
push
div
mov
sub
lcall
and
pushl
clc
clc
stc
stc
stc
jmp
int3
int3
call
rcl
lcall
dec
call
call
pop
incl
inc
call
out
sti
sti
sti
sti
sti
sti
cli
cli
cli
cld
cld
cld
call
jg
lcall
decl
mov
call
fdivr
in
jmp
out
repz
push
cmc
idiv
lock
idiv
repnz
push
div
push
div
push
idiv
push
idiv
push
idiv
push
idiv
push
clc
stc
push
clc
stc
push
clc
stc
incl
add
rolb
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jae
mov
jb
scas
ljmp
scas
ljmp
scas
ljmp
scas
pushl
scas
pushl
scas
pushl
mov
jbe
mov
je
lods
pushl
cmpsb
ljmp
xchg
call
jns
inc
push
push
cmp
nop
xchg
xchg
jmp
in
stc
stc
stc
push
hlt
hlt
mov
xor
incl
pop
pop
lcall
sbb
pushl
ja
int
into
ljmp
push
cmc
cmc
push
icebp
icebp
mov
ds
pushl
cmp
cmp
mov
mov
clc
clc
clc
stc
stc
stc
push
hlt
hlt
push
lock
out
jmp
cmp
ds
inc
aas
inc
inc
pushl
cmp
mov
hlt
hlt
cli
cli
cli
push
hlt
hlt
push
div
sti
sti
sti
out
out
out
lcall
push
push
js
cmp
mov
mov
xchg
sahf
mov
decl
push
lcall
icebp
icebp
sti
sti
sti
cli
cli
cli
dec
int
decl
push
call
arpl
ja
mov
lea
scas
incl
jae
incl
push
decl
hlt
hlt
std
std
std
call
rcl
decl
pop
call
pushl
mov
lea
ljmp
leave
sar
mov
sar
mov
sar
mov
aad
mov
pushl
leave
sar
cmpsb
mov
cmpsl
pushl
cmp
mov
dec
int3
int3
pushl
cmpsl
cmpsl
decl
mov
jmp
data16
jg
test
test
js
push
push
push
jmp
lock
stc
stc
stc
stc
stc
stc
cli
cli
cli
cld
cld
cld
cli
cli
cli
push
div
push
div
mov
sub
lcall
sbb
pushl
stc
cli
cli
cli
push
hlt
hlt
push
icebp
icebp
jmp
out
lcall
inc
incl
dec
incl
cmp
push
cmc
cmc
cli
cli
cli
push
repz
div
cld
cld
cld
in
in
out
call
pop
pop
incl
mov
call
aad
jmp
call
repnz
out
repz
out
repz
push
cmc
idiv
lock
idiv
lock
idiv
repnz
push
div
push
idiv
push
idiv
push
idiv
push
idiv
push
clc
stc
incl
add
rolb
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
outsb
popf
lods
ljmp
lods
ljmp
stos
ljmp
stos
ljmp
stos
ljmp
stos
ljmp
lods
ljmp
lods
ljmp
lods
ljmp
test
lcall
decl
jb
aaa
dec
dec
ljmp
aaa
cmp
lcall
std
std
std
clc
clc
clc
inc
enter
dec
decl
ud0
pop
sbb
pop
pop
pop
inc
ret
ret
jmp
out
push
repz
hlt
hlt
in
in
in
ljmp
aaa
cmp
xor
cmp
xor
cmp
xor
aaa
ljmp
div
cld
cld
cld
cld
cld
cld
stc
stc
stc
out
out
out
jmp
das
xor
xor
cmp
pushl
ss
mov
stc
stc
cli
cli
cli
push
repnz
clc
clc
clc
sti
sti
sti
in
in
in
lcall
push
push
pushl
cmp
popf
cmpsb
stos
decl
jb
incl
ljmp
div
std
std
std
std
std
std
std
std
std
stc
stc
stc
pushl
inc
inc
call
pop
pushl
xchg
test
movsl
pushl
xchg
lcall
cmp
decl
repz
std
std
std
dec
into
into
decl
push
decl
pop
ljmp
test
sbbl
lcall
lret
jmp
int3
jmp
test
ror
popf
mov
decl
je
incl
dec
decl
jmp
out
out
out
out
jmp
loope
mov
cltd
cltd
decl
push
lcall
pop
pushl
jge
test
insb
jno
decl
push
jmp
icebp
icebp
cld
cld
cld
cli
cli
cli
cli
cli
cli
cld
cld
cld
std
std
std
cld
cld
cld
push
div
push
cmc
cmc
push
cmc
cmc
push
lock
das
das
lcall
sbb
pushl
clc
clc
cld
cld
cld
cld
cld
cld
clc
clc
clc
in
in
in
lcall
cmp
cmp
cmp
inc
incl
inc
inc
mov
stc
stc
stc
push
repz
clc
clc
clc
sti
sti
sti
ljmp
call
pop
incl
mov
dec
rcl
fucom
call
jmp
hlt
in
repnz
in
repnz
out
repz
push
cmc
idiv
lock
idiv
lock
idiv
repnz
push
div
push
idiv
push
idiv
push
idiv
incl
add
rolb
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
stos
ljmp
stos
jmp
test
jmp
test
gs
test
cbtw
test
ljmp
stos
jmp
jmp
lcall
pop
imul
inc
dec
dec
dec
into
into
stc
stc
stc
std
std
std
cld
cld
cld
push
repnz
mov
xor
adc
data16
mov
fcomp
fdivr
fdivrp
mov
mov
dec
push
pop
pushl
cmp
ljmp
xor
ljmp
cmc
cmc
std
std
std
cli
cli
cli
push
icebp
icebp
jmp
sub
sub
xor
cmp
int3
stc
stc
stc
cld
cld
cld
stc
stc
stc
sti
sti
sti
push
div
dec
lret
lret
jmp
imul
jne
cmp
pushf
mov
incl
outsl
aas
inc
inc
ljmp
div
clc
clc
clc
push
cmc
cmc
clc
clc
clc
push
div
pushl
inc
inc
decl
ljmp
test
jl
popf
incl
xchg
pushl
xchg
cld
cld
cld
cld
cld
cld
dec
into
into
incl
push
incl
push
lcall
jle
js
sahf
incl
mov
call
mov
mov
leave
lcall
mov
mov
jge
cwtl
lcall
je
cmp
mov
cld
cld
cld
push
div
in
in
in
dec
int
ljmp
push
push
call
pop
ljmp
jns
js
cmp
insb
outsb
decl
dec
jmp
repnz
sti
sti
sti
push
div
push
div
push
cmc
cmc
push
icebp
icebp
jmp
jmp
loop
loop
ret
jge
jle
and
pop
and
mov
mov
div
idiv
std
std
std
cli
cli
cli
in
in
in
lcall
xor
pushl
aaa
cmp
xor
decl
dec
call
aad
stc
stc
stc
sti
sti
sti
stc
stc
stc
sti
sti
sti
push
cmc
cmc
dec
leave
leave
jmp
imul
test
mov
into
sar
xlat
loope
jmp
ljmp
out
repnz
ljmp
in
repnz
out
repz
push
cmc
idiv
lock
idiv
lock
idiv
repnz
push
div
push
idiv
incl
add
rolb
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cbtw
test
jmp
jmp
cmpsl
jmp
cmpsl
jmp
cmpsl
jmp
cmpsl
jmp
cmpsl
jmp
movsl
jmp
mov
decl
cmp
pop
ljmp
cmp
pusha
gs
jecxz
sti
sti
sti
cld
cld
cld
cld
cld
cld
stc
stc
stc
fdivrp
popa
bound
adc
cmp
decl
push
pushl
cmp
cmp
inc
lcall
popa
decl
mov
pushl
inc
ljmp
cmp
ljmp
div
std
std
std
cld
cld
cld
push
repz
and
jmp
sub
incl
dec
call
push
div
std
std
std
std
std
std
out
out
out
incl
cmp
call
pushl
test
mov
mov
lcall
push
cmp
ljmp
div
stc
stc
stc
push
div
push
div
push
hlt
hlt
pushl
aas
inc
decl
pop
jmp
pushl
lcall
orb
xor
inc
jl
cmp
in
in
cli
cli
cli
cld
cld
cld
dec
int3
int3
incl
dec
cmp
call
jbe
push
xchg
jnp
test
incl
mov
decl
mov
call
mov
call
mov
xchg
lcall
jo
cmp
test
lock
cld
cld
cld
push
div
jmp
out
fstp
vshufps
pop
pop
decl
push
ljmp
je
jae
jle
arpl
incl
dec
jmp
repnz
std
std
std
clc
clc
clc
push
icebp
icebp
in
in
in
inc
rol
xchg
xchg
xchg
incl
outsb
incl
dec
pushl
xor
jmp
sub
and
mov
div
idiv
std
std
std
sti
sti
sti
push
lock
cs
sub
xor
daa
sub
fcmovnu
clc
clc
clc
std
std
std
cld
cld
cld
in
in
in
decl
aas
inc
lcall
incl
mov
mov
fsub
fsub
out
fucomip
in
jmp
jmp
jmp
in
lock
out
bnd
out
repnz
jmp
hlt
in
repnz
in
repnz
out
repz
push
cmc
idiv
lock
idiv
repnz
incl
add
rolb
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
fs
cmpsl
jmp
cmpsl
jmp
cmpsb
jmp
cmpsb
jmp
cmpsb
jmp
movsl
jmp
movsl
jmp
movsl
lcall
mov
call
decl
jp
cmp
jmp
xor
pushl
jge
in
in
in
sti
sti
sti
cli
cli
cli
cld
cld
cld
cli
cli
cli
jmp
out
jl
jge
adc
sbb
sbb
and
ljmp
cmp
pushl
inc
inc
cmp
incl
pop
cmp
dec
push
ljmp
ds
ljmp
mov
clc
clc
clc
push
div
jmp
and
sbb
and
jmp
jmp
out
cli
cli
cli
std
std
std
jmp
loop
jmp
pushl
popa
pushl
test
test
pushf
pushl
mov
push
bound
ss
scas
clc
clc
clc
std
std
std
sti
sti
sti
push
div
ljmp
ds
incl
pop
lcall
jg
insl
mov
jmp
xchg
dec
pop
ljmp
xchg
cli
cli
cli
std
std
std
cld
cld
cld
dec
int3
int3
ds
dec
pushl
inc
dec
decl
imul
jg
ljmp
pushf
pushl
test
jle
mov
subb
incl
scas
mov
jl
cmpsl
ljmp
nop
call
insl
pushl
inc
incl
lock
cli
cli
cli
in
in
in
jmp
out
call
xlat
xlat
lcall
popa
decl
push
jmp
ljmp
lcall
imul
mov
out
out
clc
clc
clc
sti
sti
sti
std
std
std
std
std
std
push
cmc
cmc
jmp
decl
sub
sub
xor
ss
inc
cmp
ljmp
ss
sub
mov
cli
cli
push
cmc
cmc
lcall
sub
jmp
daa
sub
push
and
je
jbe
out
out
stc
stc
stc
std
std
std
cld
cld
cld
jmp
loope
ljmp
imul
inc
inc
lcall
imul
lea
pushl
rcr
dec
fsub
call
jecxz
ljmp
ljmp
out
icebp
jmp
out
repnz
jmp
hlt
in
repnz
in
repnz
push
cmc
idiv
lock
idiv
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
bound
cmpsb
jmp
cmpsb
jmp
movsl
lcall
movsb
lcall
movsb
lcall
movsb
lcall
movsb
lcall
mov
call
mov
inc
push
push
lcall
sub
pushf
push
repz
cli
cli
cli
push
div
cli
cli
cli
stc
stc
stc
jmp
in
incl
and
jmp
xor
pushl
inc
dec
cmp
pop
incl
arpl
inc
pop
incl
push
incl
push
pushl
inc
dec
ljmp
mov
push
div
stc
stc
stc
jmp
sbb
adc
sbb
incl
icebp
icebp
cld
cld
cld
std
std
std
cli
cli
cli
call
rcl
decl
push
pushl
inc
inc
call
ljmp
jnp
xchg
pushl
xchg
jmp
jg
dec
pop
pop
pushl
cmp
stos
lods
lods
push
div
sti
sti
sti
push
div
cli
cli
cli
push
div
ljmp
cmp
incl
pop
call
jge
xchg
lcall
cmp
pop
arpl
sub
decl
icebp
icebp
std
std
std
std
std
std
std
std
std
dec
lret
cmp
ljmp
cmp
cmp
imul
jge
jmp
ljmp
lahf
pushl
cmpsb
pushl
stos
jp
mov
jl
mov
jge
mov
jnp
mov
je
mov
decl
imul
test
lock
sti
sti
sti
push
cmc
cmc
pop
bound
dec
push
lcall
insl
jmp
jne
pop
arpl
inc
inc
dec
jmp
lock
div
clc
clc
clc
cli
cli
cli
sti
sti
sti
ljmp
incl
pop
pop
pushl
cmp
ds
dec
decl
pop
decl
pusha
incl
push
pushl
inc
inc
ljmp
xor
mov
cli
cli
push
cmc
cmc
lcall
and
sbb
and
sbb
and
nop
xchg
xchg
out
out
out
cld
cld
cld
std
std
std
stc
stc
stc
call
rcl
decl
push
ds
dec
lcall
outsl
jge
xchg
call
mov
sar
ret
aam
dec
fneni(8087
call
call
jecxz
ljmp
jmp
out
jmp
out
icebp
jmp
out
repnz
jmp
hlt
in
repnz
out
repz
incl
add
rolb
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
popa
xchg
cmpsb
jmp
movsl
lcall
movsb
lcall
movsb
lcall
lcall
lcall
lcall
lcall
lahf
call
decl
cmp
inc
dec
ljmp
ss
mov
div
stc
stc
stc
push
repz
clc
clc
clc
stc
stc
stc
dec
int3
int3
decl
push
lcall
sub
dec
incl
decl
jbe
push
jb
call
cmp
jne
call
jg
dec
insl
js
inc
pop
pushw
inc
dec
ljmp
aaa
cmp
scas
mov
push
cmc
cmc
sti
sti
sti
cld
cld
cld
clc
clc
clc
jmp
adc
decl
adc
ljmp
div
cld
cld
cld
sti
sti
sti
sti
sti
sti
push
div
mov
inc
inc
cmp
call
imul
outsb
test
pop
outsb
jne
inc
dec
push
ljmp
xor
push
div
push
cmc
cmc
jmp
loope
push
cmc
cmc
push
div
ljmp
cmp
cmp
call
jns
pop
orl
aas
pop
pusha
ljmp
cmp
push
repz
cli
cli
cli
inc
mov
lcall
sub
ljmp
inc
cmp
inc
arpl
push
jb
lcall
mov
pusha
xchg
ljmp
movsb
pushl
test
pushl
test
lcall
mov
inc
pop
ljmpw
cmp
test
lock
cld
cld
cld
jmp
jecxz
jmp
incw
dec
call
imul
push
pop
cmp
mov
icebp
cld
cld
cld
cld
cld
cld
cli
cli
cli
call
rcl
incl
inc
lcall
xor
cmp
decl
pop
call
call
outsb
decl
arpl
cmp
ljmp
mov
idiv
sti
sti
sti
cld
cld
cld
std
std
std
push
cmc
cmc
call
sbb
adc
ljmp
hlt
hlt
std
std
std
sti
sti
sti
cld
cld
cld
push
div
mov
inc
inc
incl
push
lcall
jno
js
nop
decl
mov
mov
rcr
inc
fcomp
dec
fucom
dec
call
jecxz
ljmp
jmp
out
jmp
out
icebp
jmp
out
repnz
jmp
hlt
incl
add
rolb
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pusha
xchg
movsl
lcall
movsb
lcall
lcall
lcall
lcall
mov
lcall
mov
call
xchg
decl
cmp
pop
push
incl
dec
call
aad
clc
clc
clc
push
icebp
icebp
fcmovnu
repnz
stc
stc
stc
pushl
das
xor
cmp
cmp
dec
insb
ja
push
jp
call
nop
lcall
xchg
lcall
xchg
call
mov
dec
je
incl
insl
pushl
dec
dec
ljmp
aaa
cmp
scas
mov
push
hlt
hlt
push
div
push
div
sti
sti
sti
push
div
lcall
push
ud0
or
pushl
cmp
call
rcl
cli
cli
cli
std
std
std
sti
sti
sti
sti
sti
sti
push
lock
cmp
cmp
decl
imul
bound
lcall
jge
dec
popa
push
jmp
sub
ljmp
div
push
repnz
iret
iret
push
icebp
icebp
push
div
ljmp
ss
xor
push
lcall
mov
pop
orb
push
pop
jmp
ss
xchg
repnz
std
std
std
clc
clc
clc
inc
mov
call
sbb
lcall
cmp
pushl
inc
dec
cmp
inc
pusha
push
dec
insl
js
push
jnp
lcall
xchg
jmp
jmp
mov
jmp
call
cmp
pop
ljmp
cmp
incl
lock
cld
cld
cld
jmp
loopne
lcall
pusha
cmp
call
lcall
outsl
decl
pusha
cmp
jmp
repnz
std
std
std
std
std
std
cli
cli
cli
inc
sub
and
ljmp
dec
push
decl
call
insb
call
outsb
incl
popa
pushl
xor
mov
div
clc
clc
clc
push
div
cli
cli
cli
push
hlt
hlt
call
adc
decl
or
cmp
int
cli
cli
cli
cld
cld
cld
sti
sti
sti
cld
cld
cld
push
icebp
icebp
lcall
cmp
inc
dec
push
lcall
jb
jo
mov
test
jmp
ret
lret
pushl
rcl
inc
dec
fndisi(8087
dec
call
loop
ljmp
ljmp
out
repnz
add
rolb
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
xchg
movsb
lcall
movsb
lcall
lcall
lcall
mov
lcall
mov
call
popf
call
xchg
incl
jg
aaa
push
arpl
and
gs
stc
stc
stc
call
aam
jmp
lock
clc
clc
clc
pushl
ljmp
ds
cmp
decl
cmp
adcb
pop
mov
call
xchg
decl
xchg
inc
arpl
cs
push
ljmp
aaa
cmp
lods
scas
scas
push
hlt
hlt
sti
sti
sti
stc
stc
stc
stc
stc
stc
clc
clc
clc
jmp
ud0
sbb
incl
in
in
cld
cld
cld
std
std
std
std
std
std
cli
cli
cli
jmp
loopne
ljmp
jae
sub
cmp
cmp
push
decl
insl
call
jns
push
jno
decl
outsl
ds
push
ljmp
aaa
cmp
sub
xor
mov
div
push
lock
enter
out
out
clc
clc
clc
ljmp
xor
pushl
inc
dec
incl
call
cmp
jnp
decl
jns
cmp
and
cmp
xchg
repnz
sti
sti
sti
test
call
pop
incl
dec
pushl
inc
ljmp
cmp
ljmp
dec
pushl
popa
imul
jno
call
lcall
cwtl
jmp
lcall
je
cmp
cmp
push
lock
cld
cld
cld
cld
cld
cld
cli
cli
cli
fcos
dec
dec
push
pushl
inc
dec
decl
arpl
push
gs
push
pop
pushl
inc
lcall
repnz
sti
sti
sti
stc
stc
stc
sti
sti
sti
cli
cli
cli
inc
rol
sub
sub
sbb
and
and
inc
inc
cmp
incl
pop
incl
pop
cmp
ljmp
xor
mov
div
sti
sti
sti
stc
stc
stc
clc
clc
clc
push
hlt
hlt
call
adc
lcall
push
incl
jmp
std
std
std
std
std
std
std
std
std
cli
cli
cli
jmp
loop
ljmp
outsl
ljmp
push
pop
lcall
js
outsb
mov
decl
mov
jmp
int
mov
sar
mov
mov
aad
inc
dec
fndisi(8087
dec
call
jecxz
ljmp
jmp
incl
add
rolb
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
xchg
movsb
lcall
lcall
lcall
mov
lcall
mov
call
popf
call
xchg
decl
mov
inc
outsb
jnp
xor
pop
jmp
cmp
pushl
jl
jmp
jmp
stc
stc
stc
mov
movsb
movsb
push
cmc
cmc
push
cmc
cmc
jmp
xor
ljmp
inc
dec
cmp
jbe
call
lcall
popf
lcall
lahf
lcall
lahf
call
decl
mov
bound
sub
xor
stos
push
repz
sti
sti
sti
cld
cld
cld
stc
stc
stc
dec
int3
int3
jge
jle
sahf
sahf
lahf
jmp
loope
cli
cli
cli
cld
cld
cld
push
repz
mov
inc
inc
ljmp
cmp
cmp
decl
insb
decl
jae
dec
outsb
aas
push
pop
ljmp
inc
inc
lcall
pop
pusha
fstp
clc
clc
clc
jmp
loope
ljmp
in
in
clc
clc
clc
pushl
xor
ljmp
cmp
decl
jp
dec
jne
incl
jne
ss
pop
jmp
xor
incl
repz
stc
stc
stc
push
lock
ljmp
call
rcl
mov
mov
ljmp
cmp
ljmp
pop
arpl
inc
imul
jp
call
nop
call
decl
cmp
es
addl
stc
stc
stc
push
icebp
icebp
in
in
in
push
hlt
hlt
call
aad
incl
dec
pushl
inc
inc
incl
popa
decl
incl
pop
pushl
cmp
lcall
repnz
cli
cli
cli
push
cmc
cmc
cli
cli
cli
stc
stc
stc
inc
mov
sub
sbb
sbb
daa
jmp
cs
sub
cmp
das
inc
inc
ljmp
inc
inc
ljmp
xor
jmp
sub
push
repz
cld
cld
cld
std
std
std
cld
cld
cld
clc
clc
clc
inc
jge
jle
mov
loope
cli
cli
cli
cld
cld
cld
push
hlt
hlt
pushl
cmp
incl
arpl
pop
jbe
ljmp
xchg
jns
mov
decl
mov
lcall
ret
test
lret
mov
aad
mov
aad
inc
dec
fucom
call
call
jecxz
ljmp
add
mov
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
xchg
mov
lcall
mov
lcall
mov
call
popf
call
fwait
call
xchg
decl
mov
inc
imul
push
pop
jmp
xor
test
out
out
out
stc
stc
stc
call
aam
fcmovu
div
idiv
repz
xor
arpl
dec
js
call
lcall
popf
lcall
mov
call
decl
mov
arpl
sub
dec
jmp
ss
stos
stos
lods
push
hlt
hlt
sti
sti
sti
std
std
std
push
div
push
lock
cmc
cmc
sti
sti
sti
sti
sti
sti
push
div
call
rcl
jmp
lcall
es
sub
inc
cmp
incl
push
cmp
pop
pushl
inc
dec
jmp
cs
xor
cmp
mov
mov
repz
div
pushl
jge
in
in
in
stc
stc
stc
dec
enter
cmp
pushl
dec
push
incl
outsl
incl
js
inc
fs
xor
pop
jmp
xor
incl
repnz
std
std
std
std
std
std
sti
sti
sti
stc
stc
stc
push
div
ljmp
incl
cmp
ljmp
inc
dec
cmp
incl
jbe
dec
jbe
decl
incl
ja
xor
xor
incl
in
in
push
div
in
in
in
fdivr
in
in
in
call
xlat
xlat
incl
push
pushl
inc
inc
incl
pop
incl
fs
cmp
push
ljmp
mov
repnz
cld
cld
cld
sti
sti
sti
std
std
std
cli
cli
cli
jmp
loope
lcall
mov
call
lcall
pop
bound
and
xor
lcall
daa
sub
mov
mov
hlt
hlt
hlt
sti
sti
sti
cld
cld
cld
push
div
push
lock
cmc
cmc
cli
cli
cli
sti
sti
sti
push
cmc
cmc
dec
into
into
call
lcall
inc
dec
incl
lcall
cmp
jb
mov
incl
mov
call
mov
leave
jmp
into
pushl
int
mov
leave
dec
fucom
call
loope
incl
add
rolb
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
xchg
mov
lcall
mov
lcall
mov
call
fwait
call
cltd
call
xchg
decl
mov
inc
push
pop
jmp
xor
jge
cmp
out
out
cli
cli
cli
push
repnz
div
cli
cli
cli
out
out
out
incl
xor
cs
push
aas
fs
dec
jns
call
xchg
call
lcall
mov
decl
test
cmp
inc
dec
jmp
ss
scas
mov
push
div
cld
cld
cld
cld
cld
cld
cli
cli
cli
jmp
loopne
ljmp
outsl
call
pop
sbb
sbb
sub
sub
inc
pushl
pop
cmp
ljmp
inc
dec
ljmp
push
push
lcall
call
clc
jmp
jecxz
jmp
jmpw
in
in
in
cli
cli
cli
jmp
out
ljmp
jb
sbb
sub
sub
cmp
bound
cmp
imul
dec
push
lcall
xor
incl
icebp
icebp
cli
cli
cli
sti
sti
sti
std
std
std
push
div
jmp
loop
call
ljmp
inc
dec
cmp
incl
jbe
inc
insl
jnp
inc
data16
xor
jmp
xor
incl
in
in
clc
clc
clc
clc
clc
clc
push
hlt
hlt
push
repz
fcos
inc
dec
push
ljmp
push
pop
incl
popa
pushl
dec
push
ljmp
aaa
cmp
popf
mov
repnz
std
std
std
sti
sti
sti
push
cmc
cmc
out
out
out
in
in
in
push
lock
repz
repnz
ljmp
jmp
xor
push
and
pushl
stc
stc
std
std
std
std
std
std
stc
stc
stc
fcmovnu
addr16
sbb
ljmp
inc
dec
incl
call
jle
pop
adcl
je
stos
jl
mov
subb
decl
mov
call
mov
int3
ljmp
lret
sar
mov
mov
xlat
leave
incl
add
rolb
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
xchg
mov
lcall
mov
lcall
lahf
call
fwait
call
cltd
call
xchg
call
nop
decl
test
inc
data16
xor
jmp
xor
jge
cmp
out
out
cld
cld
cld
cli
cli
cli
cld
cld
cld
stc
stc
stc
in
in
in
jg
test
sbb
dec
push
bound
dec
jbe
call
xchg
call
xchg
call
lcall
adcl
ljmp
inc
dec
jmp
xor
ljmp
cmc
cmc
stc
stc
stc
cld
cld
cld
std
std
std
cld
cld
cld
sti
sti
sti
fdivr
pop
popa
popa
call
sbb
call
and
jmp
xor
ljmp
dec
pushl
dec
push
ljmp
inc
dec
ljmp
ds
incl
rcl
out
out
out
sti
sti
sti
stc
stc
stc
call
rcl
decl
mov
push
icebp
icebp
sti
sti
sti
push
div
mov
inc
inc
jmp
xor
ljmp
dec
push
cmp
cmp
ljmp
dec
push
lcall
xor
incl
icebp
icebp
stc
stc
stc
push
repz
cli
cli
cli
std
std
std
std
std
std
std
std
std
std
std
std
cld
cld
cld
push
div
jmp
jecxz
incl
xor
push
cmp
aas
fs
cmp
ljmp
dec
push
lcall
jg
in
in
in
cld
cld
cld
sti
sti
sti
sti
sti
sti
stc
stc
stc
fdivr
dec
push
push
ljmp
cmp
cmp
cmp
pop
pushl
dec
push
jmp
ss
popf
lahf
mov
sti
sti
sti
push
div
push
div
push
cmc
cmc
push
hlt
hlt
stc
stc
stc
std
std
std
stc
stc
stc
inc
rol
and
xor
adc
and
mov
mov
cmc
cmc
cmc
stc
stc
stc
std
std
std
cld
cld
cld
cld
cld
cld
cli
cli
cli
fcomp
fdivr
pop
pop
pop
call
and
ljmp
cmp
cmp
dec
push
call
mov
popa
mov
pushl
stos
jns
mov
jle
mov
test
decl
mov
lcall
mov
int3
ljmp
lret
sar
mov
aad
incl
add
rolb
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
xchg
mov
lcall
mov
call
popf
call
fwait
call
xchg
call
xchg
decl
mov
dec
je
aas
fs
xor
lcall
xor
jnp
cmp
cld
cld
cld
sti
sti
sti
cld
cld
cld
sti
sti
sti
in
in
in
incl
sub
push
ds
outsb
decl
test
push
adcb
push
xchg
decl
mov
inc
jb
cmp
ljmp
inc
dec
jmp
xor
ljmp
jmp
call
repz
sti
sti
sti
std
std
std
cld
cld
cld
std
std
std
std
std
std
std
std
std
push
hlt
hlt
dec
lret
lret
ljmp
outsb
lcall
daa
sub
sbb
xor
and
aas
ljmp
ds
jmp
inc
pushl
inc
inc
jmp
in
push
div
cld
cld
cld
push
repnz
icebp
icebp
cli
cli
cli
sti
sti
sti
sti
sti
sti
push
lock
push
jmp
cmp
pop
pushl
pop
ljmp
inc
dec
lcall
xor
test
repnz
cld
cld
cld
push
div
stc
stc
stc
cld
cld
cld
push
hlt
hlt
jmp
loop
call
aad
fdivrp
repz
cli
cli
cli
sti
sti
sti
sti
sti
sti
push
div
call
rcl
call
arpl
and
pushl
dec
pop
cmp
pushl
push
popa
ljmp
inc
dec
lcall
sub
pushl
jnp
in
in
in
cld
cld
cld
std
std
std
std
std
std
sti
sti
sti
jmp
loopne
decl
push
jmp
cmp
xor
pushl
push
pop
pushl
inc
dec
jmp
lahf
mov
std
std
std
cli
cli
cli
push
div
clc
clc
clc
stc
stc
stc
cli
cli
cli
std
std
std
sti
sti
sti
inc
ret
and
call
sbb
lcall
pop
and
mov
mov
in
in
in
jmp
hlt
hlt
sti
sti
sti
std
std
std
cld
cld
cld
sti
sti
sti
std
std
std
push
repz
enter
lcallw
es
and
aaa
ljmp
dec
push
aas
pop
push
lcall
xchg
jmp
sahf
ljmp
test
jno
scas
pushl
mov
jnp
mov
jle
mov
test
decl
mov
lcall
mov
into
ljmp
into
incl
add
rolb
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
xchg
mov
lcall
mov
call
fwait
call
xchg
call
xchg
decl
decl
incl
jle
cmp
dec
push
lcall
xor
pushl
in
in
in
cli
cli
cli
push
div
clc
clc
clc
sti
sti
sti
push
lock
sub
ljmp
inc
dec
cmp
incl
cmp
jle
call
xchg
call
call
xchg
decl
incl
cmp
pop
imul
es
ljmp
out
out
out
out
out
out
out
push
icebp
icebp
push
cmc
cmc
in
in
in
call
call
aam
jmp
out
clc
clc
clc
std
std
std
cli
cli
cli
out
out
out
call
rcl
ljmp
outsl
lcall
es
sbb
ss
pop
xor
lcall
sub
call
pushl
hlt
hlt
cld
cld
cld
sti
sti
sti
std
std
std
std
std
std
cld
cld
cld
cld
cld
cld
cld
cld
cld
jmp
out
jge
test
and
dec
ljmp
dec
push
ljmp
inc
dec
lcall
sub
incl
repz
cld
cld
cld
sti
sti
sti
call
jmp
popa
cmp
cmp
push
push
push
pushl
out
out
stc
stc
stc
std
std
std
std
std
std
sti
sti
sti
in
in
in
lcall
aaa
cmp
sub
pushl
dec
pop
pushl
dec
push
jmp
ds
lcall
xchg
xchg
push
lock
cld
cld
cld
std
std
std
sti
sti
sti
jmp
loopne
decl
push
jmp
cmp
pushl
dec
push
pushl
pop
ljmp
xor
lcall
lock
cld
cld
cld
cld
cld
cld
sti
sti
sti
cld
cld
cld
sti
sti
sti
sti
sti
sti
clc
clc
clc
mov
sub
call
sbb
and
mov
mov
out
out
out
out
out
out
push
lock
lock
cmc
cmc
ljmp
call
aam
jmp
out
stc
stc
stc
cli
cli
cli
push
lock
iret
iret
ljmp
outsb
lcall
daa
sub
sub
pusha
incl
ja
push
jge
lcall
lcall
lcall
jae
mov
jbe
mov
jnp
mov
subb
decl
mov
call
mov
int3
ljmp
add
rolb
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
nop
mov
lcall
mov
call
fwait
call
xchg
call
xchg
decl
mov
dec
jbe
incl
cmp
ljmp
xor
jmp
jmp
out
cli
cli
cli
push
cmc
cmc
push
repz
sti
sti
sti
push
repz
xor
sub
cmp
inc
outsl
jle
dec
jl
call
xchg
call
xchg
call
xchg
decl
mov
inc
jo
cmp
sub
jmp
scas
mov
div
idiv
cld
cld
cld
cli
cli
cli
push
div
push
cmc
cmc
pushl
xor
ljmp
sub
jae
je
jecxz
jecxz
cli
cli
cli
sti
sti
sti
push
div
push
lock
mov
ds
call
and
xor
sbb
xor
push
and
jmp
daa
sub
mov
mov
div
idiv
div
idiv
repz
div
cli
cli
cli
push
lock
cmc
cmc
std
std
std
cli
cli
cli
out
out
out
call
xor
ljmp
inc
dec
jmp
cmp
xor
test
repnz
std
std
std
std
std
std
std
std
std
sti
sti
sti
inc
and
incl
pop
incl
pop
incl
inc
dec
into
into
push
cmc
cmc
push
div
stc
stc
stc
sti
sti
sti
push
div
inc
cmp
cmp
ljmp
push
ljmp
push
jmp
cmp
mov
push
cmc
cmc
cli
cli
cli
std
std
std
jmp
loopne
decl
push
jmp
aaa
cmp
pushl
dec
pop
ljmp
inc
dec
jmp
xor
lcall
icebp
cld
cld
cld
sti
sti
sti
out
out
out
call
rcl
dec
leave
leave
call
rcl
jmp
jecxz
in
in
in
xchg
sub
adc
and
push
div
sti
sti
sti
stc
stc
stc
push
div
push
repz
aaa
aaa
ljmp
pushl
cli
cli
cli
std
std
std
sti
sti
sti
push
div
push
lock
rol
cmp
and
pushl
dec
push
incl
jno
push
jns
lcall
xchg
jmp
mov
ljmp
stos
ljmp
lods
ljmp
scas
pushl
mov
ja
mov
jl
mov
subl
mov
lcall
mov
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
nop
mov
lcall
mov
call
fwait
call
xchg
call
xchg
decl
mov
dec
jae
incl
js
cmp
ljmp
xor
incl
push
fdivr
cli
cli
cli
push
div
push
repz
sti
sti
sti
push
div
pushl
cs
and
inc
pushl
imul
dec
jnp
decl
decl
decl
xchg
inc
imul
push
arpl
es
xor
test
clc
clc
std
std
std
push
div
call
add
pop
call
adc
lcall
icebp
icebp
cli
cli
cli
clc
clc
clc
stc
stc
stc
stc
stc
stc
jmp
out
pushl
jne
adc
and
sbb
sub
call
pop
and
xor
cmp
int
int
clc
clc
clc
stc
stc
stc
push
hlt
hlt
push
cmc
cmc
push
hlt
hlt
dec
lret
fdivr
cli
cli
cli
cli
cli
cli
push
cmc
cmc
out
out
out
jmp
das
xor
and
inc
jmp
inc
lcall
sub
push
repnz
std
std
std
cld
cld
cld
std
std
std
sti
sti
sti
inc
ret
ret
jmp
daa
incl
or
or
inc
inc
mov
in
in
in
out
out
out
out
out
out
push
cmc
cmc
fcos
push
pop
pusha
lcall
aas
dec
ljmp
inc
dec
jmp
xor
inc
pushl
jecxz
jmp
repz
clc
clc
clc
stc
stc
stc
fdivrp
dec
push
push
lcall
xor
ljmp
inc
dec
ljmp
dec
push
ljmp
inc
dec
jmp
xor
lcall
icebp
cld
cld
cld
std
std
std
clc
clc
clc
dec
int
incl
inc
jmp
and
cmp
pop
arpl
orl
ljmp
cmp
lcall
sub
sbb
and
push
div
cld
cld
cld
cld
cld
cld
cld
cld
cld
push
lock
or
incl
add
call
sbb
lcall
out
out
clc
clc
clc
push
div
push
div
clc
clc
clc
jmp
in
pushl
jnp
push
das
xor
cmp
ja
call
xchg
lcall
mov
jmp
jmp
test
ljmp
lods
pushl
scas
pushl
jnp
mov
jle
mov
test
mov
call
add
rolb
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
nop
mov
lcall
lahf
lcall
lahf
call
pushf
call
xchg
call
xchg
decl
mov
inc
jno
incl
jne
cmp
ljmp
xor
pushl
cmp
leave
lret
stc
stc
stc
cli
cli
cli
sti
sti
sti
sti
sti
sti
push
div
inc
ljmp
xor
lcall
xor
ljmp
dec
push
cmp
insb
incl
jl
dec
jbe
decl
decl
decl
cmp
addr16
xor
pop
jmp
inc
lcall
sub
lcall
repz
std
std
std
std
std
std
push
div
lcall
or
incl
or
ljmp
push
out
out
sti
sti
sti
std
std
std
std
std
std
std
std
std
push
cmc
cmc
jmp
call
and
and
inc
inc
dec
fdivr
sti
sti
sti
cld
cld
cld
sti
sti
sti
sti
sti
sti
push
icebp
icebp
decl
mov
clc
clc
clc
sti
sti
sti
clc
clc
clc
push
repz
mov
xor
xor
and
aas
jmp
xor
call
and
xchg
repnz
sti
sti
sti
inc
sub
sub
or
sbb
inc
dec
dec
ljmp
jmp
in
dec
lret
mov
out
out
jmp
jecxz
ljmp
outsl
lcall
sub
jmp
cmp
and
inc
lcall
xor
lcall
es
je
js
into
into
into
jmp
in
ljmp
push
icebp
icebp
fdivr
dec
push
push
lcall
xor
ljmp
inc
dec
jmp
ds
jmp
das
xor
fwait
popf
sahf
push
repnz
std
std
std
clc
clc
clc
inc
ret
and
sub
adc
sbb
lcall
cmp
and
aas
jmp
inc
jmp
xor
lcall
sub
call
and
cmpsb
cmpsl
cmpsl
push
cmc
cmc
cld
cld
cld
sti
sti
sti
cld
cld
cld
push
icebp
icebp
decl
push
ud0
or
or
jae
jecxz
jecxz
stc
stc
stc
sti
sti
sti
cld
cld
cld
sti
sti
sti
push
icebp
icebp
jmp
ss
sub
cmp
imul
jne
call
lcall
lahf
jmp
movsl
jmp
cmpsb
jmp
cmpsl
jmp
test
imul
lods
pushl
mov
ja
mov
jl
mov
subl
mov
rolb
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
nop
mov
lcall
lahf
lcall
lahf
call
lcall
adcl
inc
jno
incl
jno
cmp
ljmp
push
jmp
xor
sub
cmpsl
test
push
lock
clc
clc
clc
cld
cld
cld
sti
sti
sti
push
cmc
cmc
inc
mov
xor
cmp
sbb
xor
sub
pushl
fs
inc
outsb
jl
inc
jo
incl
jle
inc
insl
jnp
bound
xor
jmp
cmp
lcall
sub
jmp
hlt
sti
sti
sti
cli
cli
cli
sti
sti
sti
push
div
lcall
push
decl
or
and
jns
jp
in
in
clc
clc
clc
cld
cld
cld
cld
cld
cld
cld
cld
cld
clc
clc
clc
inc
daa
cs
adc
and
adc
and
adc
pop
call
push
jmp
loope
stc
stc
stc
sti
sti
sti
sti
sti
sti
stc
stc
stc
out
out
out
js
jns
addb
cli
cli
cli
stc
stc
stc
call
rcl
incl
dec
call
sub
xor
adc
and
jle
cmp
std
std
std
std
std
std
std
std
std
sti
sti
sti
call
rcl
cmp
adc
decl
adc
decl
adc
push
push
push
dec
into
into
jmp
loop
call
rcl
inc
mov
jmp
in
ljmp
je
pop
and
cmp
and
cmp
call
sbb
callw
rcl
jmp
out
jmp
out
jmp
out
jmp
fcmovu
decl
push
lcall
sub
jmp
cmp
daa
aas
dec
jmp
aaa
lcall
cltd
lcall
stc
stc
cld
cld
cld
cli
cli
cli
inc
ljmp
das
xor
push
and
lcall
cmp
sub
ljmp
inc
dec
ljmp
inc
dec
jmp
sub
and
push
div
stc
stc
stc
clc
clc
clc
stc
stc
stc
push
icebp
icebp
decl
adc
decl
push
adc
push
and
jle
jle
loopne
loopne
clc
clc
clc
std
std
std
cld
cld
cld
cld
cld
cld
push
div
inc
rol
xor
cmp
incl
cmp
pop
lea
lcall
movsb
jmp
cmpsb
jmp
cmpsb
jmp
jmp
test
ljmp
lods
pushl
scas
pushl
jnp
mov
subb
incl
add
rolb
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
nop
mov
lcall
lahf
lcall
lahf
call
pushf
call
cwtl
call
nop
decl
incl
jge
inc
data16
cmp
pushl
dec
push
jmp
cmp
push
and
js
jge
jecxz
jecxz
repnz
cli
cli
cli
std
std
std
push
repnz
and
and
and
cmp
sub
pushl
pop
cmp
cmp
outsb
arpl
cmp
outsb
pushl
pop
ljmp
xor
jmp
xor
mov
mov
clc
clc
clc
cld
cld
cld
cld
cld
cld
sti
sti
sti
push
cmc
cmc
lcall
push
ud0
or
jmp
mov
push
cmc
cmc
cli
cli
cli
cli
cli
cli
sti
sti
sti
clc
clc
clc
fcmovnu
cmp
inc
decl
sbb
decl
sbb
or
push
jns
jnp
in
in
in
cli
cli
cli
cld
cld
cld
cli
cli
cli
push
div
jmp
in
lcall
pop
call
push
jmp
loop
clc
clc
clc
cli
cli
cli
clc
clc
clc
jmp
jecxz
ljmp
jo
adc
and
push
and
sub
adc
push
incl
lock
cli
cli
cli
sti
sti
sti
cld
cld
cld
sti
sti
sti
call
rcl
cmp
decl
adc
decl
or
inc
dec
lret
fcmovu
loop
loop
loopne
loopne
in
in
in
jmp
loop
ljmp
outsl
call
pop
and
sbb
das
lcall
xor
pop
es
nopl
outsb
jo
call
xlat
xlat
jmp
loope
in
in
in
push
icebp
icebp
push
icebp
icebp
fcomp
fdivr
dec
push
push
call
and
lcall
xor
jmp
inc
lcall
and
xchg
call
cmc
cmc
sti
sti
sti
std
std
std
clc
clc
clc
inc
ret
sub
xor
adc
xor
jmp
ds
ljmp
inc
dec
ljmp
inc
dec
jmp
sub
jmp
sub
push
cmc
cmc
cli
cli
cli
stc
stc
stc
stc
stc
stc
push
lock
adc
incl
or
pushl
xor
mov
repz
clc
clc
clc
clc
clc
clc
stc
stc
stc
stc
stc
stc
call
decl
push
jmp
cmp
xor
outsb
jl
dec
jg
call
sahf
lcall
lcall
lcall
movsb
jmp
movsl
jmp
cmpsb
jmp
cmpsl
jmp
test
push
stos
ljmp
lods
ljmp
scas
pushl
mov
js
mov
jle
mov
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
mov
lcall
lahf
lcall
sahf
call
pushf
call
call
xchg
decl
decl
cmp
cmp
pushl
push
pop
jmp
inc
dec
lcall
push
push
dec
into
into
out
out
out
clc
clc
clc
clc
clc
clc
out
out
out
jmp
daa
sub
sbb
and
lcall
xor
jmp
cmp
dec
ljmp
dec
push
pushl
dec
push
pushl
dec
push
ljmp
dec
push
jmp
aas
dec
lcall
sub
aas
inc
icebp
icebp
icebp
push
hlt
hlt
sti
sti
sti
stc
stc
stc
push
lock
adc
incl
or
decl
or
mov
cli
cli
cli
push
div
clc
clc
clc
clc
clc
clc
jmp
loope
call
push
decl
adc
decl
adc
call
sbb
movsb
movsl
movsl
out
out
out
push
div
push
div
push
cmc
cmc
push
icebp
icebp
inc
ret
ret
ljmp
das
das
ljmp
push
icebp
icebp
push
cmc
cmc
push
div
push
lock
and
adc
and
push
pop
sbb
popf
sahf
lahf
push
repnz
cli
cli
cli
stc
stc
stc
cli
cli
cli
stc
stc
stc
inc
ret
ret
jmp
or
incl
or
or
push
aad
dec
int3
int3
fcomp
fdivr
xlat
xlat
xlat
jmp
fcomp
lcall
pop
decl
pop
and
adc
call
sbb
decl
adc
insb
outsb
outsl
call
aam
call
aad
jmp
out
out
out
out
out
fcmovu
dec
dec
dec
call
sbb
call
and
xor
pop
es
adc
and
mov
out
div
idiv
std
std
std
std
std
std
clc
clc
clc
inc
rol
and
pop
and
sbb
jmp
aaa
notrack
aas
inc
jmp
ds
jmp
xor
call
and
inc
dec
lret
lret
in
in
in
push
lock
cmc
cmc
push
div
jmp
jmp
xchg
xchg
xchg
call
pop
sbb
push
or
add
adc
ljmp
out
out
push
div
push
div
stc
stc
stc
push
div
fdivr
pop
bound
and
cmp
incl
jp
dec
jge
call
lcall
lahf
lcall
mov
lcall
jmp
movsl
jmp
cmpsb
jmp
cmpsl
jmp
test
imul
lods
pushl
mov
ja
mov
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
mov
lcall
lahf
lcall
sahf
lcall
sahf
call
lcall
jg
decl
test
inc
outsl
jle
inc
addr16
cmp
ljmp
dec
push
jmp
ss
xor
test
push
div
clc
clc
clc
push
icebp
icebp
jmp
inc
inc
cmp
sbb
call
push
and
pop
daa
sub
sbb
xor
and
cmp
and
notrack
inc
jmp
inc
jmp
xor
call
daa
sub
push
pop
pop
call
in
in
in
jmp
out
push
repnz
sti
sti
sti
push
icebp
icebp
call
or
incl
or
add
or
xor
push
div
cli
cli
cli
stc
stc
stc
stc
stc
stc
push
div
call
push
or
add
ds
dec
leave
leave
in
in
in
push
cmc
cmc
push
lock
in
in
in
jmp
loopne
incl
movups
sbb
sbb
stos
stos
stos
in
in
in
push
hlt
hlt
push
div
push
repz
int3
int3
cmp
decl
pop
decl
sub
mov
div
cld
cld
cld
sti
sti
sti
cld
cld
cld
stc
stc
stc
mov
and
incl
or
add
or
sub
sub
mov
mov
in
in
fdivrp
fcmovnu
fcos
jecxz
jecxz
mov
inc
decl
movups
adc
sbb
adc
sbb
decl
jne
fcmovu
call
jmp
ljmp
call
push
decl
adc
decl
sbb
adc
decl
sbb
incl
out
clc
clc
clc
stc
stc
stc
cli
cli
cli
push
div
inc
ret
ret
jmp
es
decl
adc
call
push
and
pop
es
sbb
xor
sbb
xor
sbb
xor
sbb
call
sbb
data16
fcmovu
call
in
push
icebp
icebp
push
repnz
in
incl
adc
add
or
add
or
cmp
cmp
out
out
out
push
div
push
div
push
div
push
div
jmp
in
pushl
ja
pop
xor
pushl
dec
pop
incl
jbe
dec
jle
call
xchg
call
fwait
lcall
lahf
lcall
mov
lcall
jmp
movsl
jmp
cmpsb
jmp
cmpsl
jmp
test
imul
lods
pushl
mov
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
mov
lcall
lahf
lcall
sahf
call
pushf
call
pushf
call
decl
decl
mov
dec
ja
incl
cmp
data16
ss
ljmp
inc
dec
lcall
insl
outsl
fcos
repnz
cmc
cmc
push
lock
inc
inc
decl
pushl
cmp
incl
inc
pushl
cmp
jmp
xor
cmp
pop
pop
cmp
lcall
sub
lcall
sub
lcall
call
in
in
in
jmp
loop
in
in
in
push
hlt
hlt
push
repnz
pop
or
add
decl
loopne
push
repz
clc
clc
clc
clc
clc
clc
cli
cli
cli
clc
clc
clc
jmp
out
ljmp
push
add
sub
mov
in
in
jmp
jmp
lock
jmp
jmp
lret
incl
dec
incl
adc
incl
jecxz
push
icebp
icebp
push
lock
hlt
hlt
jmp
loop
pushl
incl
or
adc
sub
xor
ret
ret
ret
push
hlt
hlt
cld
cld
cld
sti
sti
sti
clc
clc
clc
dec
lret
cmp
sbb
dec
jmp
in
push
repz
ljmp
jmp
jecxz
fdivrp
mov
daa
sub
dec
push
push
decl
cwtl
cwtl
call
xchg
xchg
mov
jmp
loop
jmp
jecxz
jmp
in
jmp
out
fstp
test
test
insb
outsb
outsb
ljmp
xor
or
adc
or
movups
ja
jns
in
in
div
idiv
icebp
icebp
icebp
jmp
loope
jmp
aad
incl
jo
pushl
jbe
je
jns
ja
jge
jbe
jge
pop
pop
popa
lcall
sub
decl
push
call
jmp
in
ljmp
decl
or
pop
jmp
sub
decl
aad
ljmp
push
repz
hlt
hlt
push
div
jmp
jecxz
pushl
jl
sbb
dec
push
aas
data16
dec
ja
call
cwtl
call
fwait
call
popf
lcall
mov
lcall
lcall
jmp
movsl
jmp
cmpsb
jmp
cmpsl
jmp
jmp
test
ljmp
lods
incl
add
rolb
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
mov
lcall
sahf
lcall
sahf
call
pushf
call
lcall
adcb
dec
jl
decl
xchg
inc
jo
ds
outsb
pushl
dec
pop
jmp
cmp
ljmp
cmp
sahf
mov
jecxz
in
in
in
in
in
in
lcall
cmp
inc
inc
inc
decl
dec
incl
movsb
ljmp
mov
call
xor
adc
and
adc
ljmp
xor
pushl
jmp
ljmp
push
repnz
rcl
incl
test
scas
scas
scas
call
aad
call
aam
dec
into
into
call
hlt
hlt
push
div
push
repnz
xlat
xlat
decl
dec
lcall
sbb
decl
rcl
fdivrp
fdivrp
in
in
call
jmp
and
adc
or
adc
gs
jmp
loopne
fstp
in
in
out
out
stos
stos
stos
lcall
or
decl
or
xchg
out
out
out
cli
cli
cli
push
div
jmp
jmp
ljmp
inc
mov
mov
out
out
out
push
div
push
repnz
out
out
out
jmp
out
jmp
jecxz
call
rcl
jmp
lcallw
sbb
lcall
fstp
loopne
loopne
fstp
fcos
fdivr
fdivrp
fdivr
loop
loop
loopne
loopne
fdivrp
leave
leave
leave
jmp
jmp
es
lcall
sbb
or
je
jne
loop
loop
cmc
cmc
cmc
in
in
in
jmp
loop
call
jmp
ljmp
jmp
out
jmp
out
jmp
out
jmp
loope
inc
ret
inc
dec
dec
decl
adc
xor
mov
in
jmp
loope
jmp
loope
jmp
in
jmp
jecxz
mov
jnp
jnp
jl
cmpsb
cmpsb
cmpsb
dec
leave
leave
inc
mov
fdivrp
in
in
in
push
repz
lock
aad
lcall
lcall
xor
cs
push
arpl
dec
ja
call
xchg
call
lcall
mov
lcall
mov
lcall
lcall
movsb
jmp
cmpsb
jmp
cmpsb
jmp
jmp
test
incl
add
rolb
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
mov
lcall
sahf
call
pushf
call
pushf
call
cwtl
call
xchg
call
xchg
call
xchg
call
decl
decl
test
inc
imul
sub
dec
lcall
das
incl
dec
pushl
jmp
loop
lcall
dec
dec
incl
inc
lcall
jge
mov
int3
int3
call
aad
fcos
rol
incl
dec
call
sbb
movhps
call
sbb
pushf
fdivrp
out
out
ljmp
push
repz
out
out
out
jmp
jecxz
jmp
loopne
jmp
loope
mov
xlat
push
lock
lock
in
in
in
pushl
and
call
adc
decl
aad
fdivr
fdivrp
loopne
loopne
loope
loope
rcl
sar
ja
jp
movhps
decl
pop
sbb
push
push
sbb
inc
dec
dec
mov
xlat
xlat
inc
ret
ret
mov
call
rcl
decl
sub
incl
pop
or
jno
jb
jmp
clc
clc
push
hlt
hlt
jmp
jecxz
fcmovu
int3
int3
int3
jmp
loop
push
lock
cmc
cmc
push
div
push
div
push
repz
icebp
icebp
jmp
jmp
jecxz
jecxz
mov
mov
es
daa
call
movsb
fcmovu
fdivrp
loopne
loopne
fdivrp
rcl
sar
fcmovu
fdivr
loopne
loopne
fdivrp
fcomp
fdivr
fstp
rcl
sar
mov
push
ljmp
xor
incl
or
jg
cmp
out
push
div
push
repz
div
push
repnz
lock
hlt
hlt
push
repnz
repz
repz
repz
in
in
in
call
aam
call
pop
decl
movhlps
adc
mov
fcos
fdivrp
loopne
loopne
fcos
rcl
sar
into
into
into
dec
int
dec
into
into
dec
into
into
mov
enter
in
in
in
in
jmp
in
pushl
aas
inc
lcall
sub
ljmp
pusha
insl
decl
cmp
jg
call
cwtl
call
lcall
mov
lcall
mov
lcall
lcall
movsb
jmp
cmpsb
jmp
cmpsb
jmp
jmp
test
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
mov
lcall
sahf
call
pushf
call
lcall
mov
call
xchg
call
xchg
call
decl
incl
jge
cmp
push
pop
jmp
cmp
das
decl
ljmp
int
lcall
push
push
incl
dec
jmp
daa
daa
lcall
leave
leave
dec
into
into
dec
into
into
call
rcl
inc
je
js
adc
sbb
call
pop
and
xchg
xchg
xchg
call
fdivr
jecxz
jecxz
in
in
in
push
icebp
icebp
push
lock
jmp
jmp
in
in
in
in
ljmp
jmp
out
jmp
lock
in
in
in
jmp
loope
ljmp
push
push
call
jnp
int
int
iret
iret
iret
call
rcl
call
xlat
xlat
call
rcl
mov
dec
push
decl
sbb
call
sbb
xor
mov
rcl
call
rcl
mov
lret
lret
fcomp
fdivr
call
push
incl
pop
or
insl
outsb
outsb
jmp
jecxz
push
hlt
hlt
push
div
push
cmc
cmc
jmp
in
dec
into
into
repnz
clc
clc
clc
push
div
push
div
push
icebp
icebp
out
out
out
jmp
decl
or
call
sbb
jmp
fcmovu
fcmovnu
aad
aad
mov
dec
into
into
call
rcl
call
fcmovu
rcl
sar
rcl
sar
fcomp
fdivr
rcl
sar
stos
stos
stos
jle
jg
inc
inc
inc
decl
or
incl
loop
push
repnz
repz
div
push
hlt
hlt
push
hlt
hlt
push
hlt
hlt
push
hlt
hlt
out
out
out
push
lock
out
out
out
jmp
in
dec
into
into
call
push
decl
adc
call
push
pop
lcall
iret
iret
dec
int
call
rcl
fcos
call
rcl
dec
int3
int3
inc
mov
call
rcl
call
rcl
call
rcl
call
jmp
loopne
jmp
jecxz
fstp
mov
mov
jmp
xor
push
cmp
incl
cmp
jle
call
xchg
call
lcall
lea
lcall
mov
lcall
lcall
lcall
movsb
jmp
movsl
jmp
cmpsb
jmp
cmpsl
incl
add
rolb
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
mov
lcall
sahf
call
pushf
call
cwtl
call
cltd
call
xchg
call
xchg
call
xchg
call
xchg
decl
decl
incl
cmp
cmp
sub
cmp
sbb
cs
aas
inc
dec
incl
js
pop
pop
pop
lcall
pop
lcall
pop
pushl
enter
ret
mov
rol
mov
mov
adc
push
lcall
and
nop
xchg
xchg
call
rcl
fdivr
loope
loope
call
ljmp
ljmp
in
in
in
jmp
out
jmp
jecxz
jmp
loopne
call
out
jmp
loop
fcos
ret
ret
ret
incl
ss
lret
lret
dec
int3
int3
dec
lret
rol
call
sub
and
call
and
call
and
jnp
jle
mov
call
rcl
call
aam
call
aad
fcomp
fdivr
mov
pop
incl
popa
call
aam
ljmp
push
repnz
repz
in
in
in
out
out
out
push
icebp
icebp
push
div
push
repnz
in
in
in
call
out
fdivrp
mov
mov
dec
dec
dec
incl
sbb
jmp
sar
aad
aad
rcl
sar
lret
lret
lret
inc
rol
ret
ret
ret
dec
lret
int
int
int
int
leave
leave
leave
dec
int3
int3
call
rcl
inc
ret
ret
lcall
insl
insl
incl
inc
call
adc
jl
jle
fdivr
in
in
in
in
in
in
in
in
in
out
out
out
push
lock
out
out
out
out
out
out
in
in
in
jmp
out
jmp
loop
fcmovnu
decl
push
decl
sbb
dec
leave
leave
dec
lret
int3
int3
int3
dec
into
into
dec
lret
mov
inc
mov
inc
dec
enter
rcl
call
fcos
aam
aam
mov
mov
sub
ljmp
dec
push
cmp
imul
jb
decl
mov
push
adcb
push
xchg
lcall
sahf
call
pushf
call
popf
lcall
mov
lcall
lcall
jmp
movsl
jmp
cmpsb
incl
add
rolb
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
mov
call
pushf
call
cwtl
call
call
xchg
call
xchg
call
xchg
call
xchg
decl
decl
mov
dec
ja
decl
cmp
insl
jp
cmp
push
pusha
ljmp
inc
dec
jmp
ss
daa
sub
and
pushl
cmp
inc
dec
dec
lcall
pusha
jg
jg
stos
stos
stos
pushl
mov
cltd
jmp
lahf
ljmp
jmp
sub
lcall
and
ljmp
je
mov
mov
leave
leave
leave
call
rcl
call
xlat
xlat
fcos
fdivr
fdivrp
fstp
fstp
fcomp
fdivr
xlat
xlat
xlat
call
aam
inc
mov
mov
sahf
incl
dec
aas
inc
inc
ljmp
rol
mov
rol
mov
scas
scas
ljmp
outsb
call
sbb
sub
sbb
xor
sbb
xor
adc
pop
pop
pushl
int3
int3
int3
dec
into
into
call
rcl
inc
ret
ret
jmp
decw
adc
aaa
cmp
pushf
inc
mov
fcmovu
loop
loop
in
in
in
in
loop
loop
out
out
out
out
in
in
fdivrp
fdivrp
ret
ret
ret
lcall
decl
movups
or
adc
sbb
and
xchg
xchg
xchg
inc
dec
enter
mov
pushl
mov
pushl
mov
mov
mov
mov
mov
mov
mov
mov
xchg
xchg
xchg
call
incl
inc
cmp
jmp
mov
rcl
call
call
xlat
xlat
fcomp
fdivr
fcos
fcos
fcos
rcl
sar
iret
iret
iret
dec
enter
rol
mov
inc
dec
call
sbb
call
and
imul
stos
stos
stos
pushl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pushl
mov
movsl
call
jmp
push
pop
cmp
jno
decl
decl
nop
call
xchg
call
call
xchg
call
lcall
mov
pop
mov
lcall
lcall
lcall
movsb
incl
add
rolb
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
mov
call
lcall
mov
call
xchg
call
decl
decl
mov
dec
js
decl
incl
cmp
outsb
jl
inc
push
push
ljmp
inc
dec
jmp
aaa
lcall
sub
call
and
ljmp
sub
inc
jmp
imul
ds
inc
ds
inc
decl
push
incl
ljmp
xor
lcall
sub
ljmp
ss
dec
push
pop
jmp
insl
js
jnp
addb
pushf
popf
sahf
lcall
xchg
xchg
call
jl
cmp
addl
cmp
inc
incl
pushl
aaa
cmp
push
adc
xor
jbe
jns
nop
nop
xchg
decl
cltd
jmp
test
call
and
sbb
xor
and
cmp
pop
xor
lcall
sub
ljmp
jb
xchg
xchg
xchg
ljmp
mov
mov
lcall
call
sbb
and
xor
call
lcall
pushw
jbe
test
jnp
jg
mov
lahf
ljmp
mov
leave
pushl
push
pop
call
sbb
decl
sbb
call
sbb
lcall
lods
lods
pushl
lods
lods
lcall
incl
jae
popa
arpl
push
push
push
decl
push
decl
dec
ljmp
xor
call
pop
and
sbb
sub
adc
and
daa
xor
call
pop
jmp
imul
imul
imul
push
gs
imul
push
pop
pop
call
pop
incl
dec
jmp
sub
call
es
adc
xor
dec
dec
push
lcall
pop
jmp
ljmp
imul
jo
pushl
ja
je
jbe
outsb
jno
pushl
jae
imul
bound
jmp
imul
cmp
inc
cmp
inc
decl
push
ds
dec
jmp
ss
pushl
gs
inc
jb
decl
call
call
xchg
call
xchg
call
xchg
call
call
cwtl
call
pushf
lcall
sahf
lcall
sahf
lcall
lahf
lcall
mov
lcall
incl
add
rolb
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
mov
call
cwtl
call
cltd
call
xchg
call
xchg
call
xchg
call
decl
mov
dec
jns
decl
decl
cmp
jo
incl
jl
inc
gs
cmp
pushl
push
pushl
dec
push
ljmp
inc
dec
jmp
cmp
lcall
das
xor
call
and
call
and
sbb
and
call
sbb
adc
call
and
adc
sub
lcall
xor
jmp
xor
lcall
xor
lcall
sub
lcall
daa
sub
sbb
sub
sbb
sub
sbb
sub
and
xor
and
lcall
sub
lcall
sub
lcall
daa
sub
pop
and
sub
sbb
sub
pop
and
sub
adc
and
adc
sub
sub
xor
and
daa
incl
inc
jmp
pushl
cmp
call
sbb
call
and
xor
jmp
ss
sbb
sub
ljmp
das
xor
push
pop
pop
jmp
imul
dec
push
pushl
cmp
lcall
lcall
sub
lcall
xor
lcall
xor
lcall
sub
das
lcall
sub
call
and
lcall
and
jmp
dec
dec
jl
cmp
inc
dec
dec
call
and
call
pop
and
sbb
pushl
cmp
ljmp
jo
xchg
xchg
xchg
decl
push
push
ljmp
cs
and
sbb
adc
sbb
adc
push
call
push
and
adc
and
adc
daa
sub
sbb
lcall
sub
lcall
sub
lcall
sub
xor
sbb
lcall
sub
lcall
sub
lcall
sub
lcall
sub
lcall
sub
lcall
sub
lcall
sub
lcall
sub
lcall
sub
lcall
sub
xor
lcall
xor
lcall
xor
lcall
sub
call
and
and
call
sbb
and
sbb
and
push
pop
and
adc
pop
call
sbb
pop
call
and
adc
and
adc
daa
sub
sbb
jmp
aaa
cmp
pushl
dec
pop
cmp
incl
jne
dec
jae
decl
mov
dec
jle
call
call
xchg
call
xchg
call
xchg
call
call
cltd
call
cwtl
call
pushf
lcall
sahf
lcall
lahf
lcall
mov
incl
add
rolb
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
lea
call
lcall
test
call
xchg
decl
decl
decl
decl
cmp
jo
incl
incl
jne
ds
cmp
cmp
pushl
push
pop
ljmp
inc
dec
jmp
inc
lcall
xor
lcall
xor
sbb
das
lcall
daa
sub
pop
es
pop
es
sbb
sub
sbb
lcall
cmp
and
notrack
inc
jmp
cmp
and
inc
jmp
aaa
notrack
ss
and
cmp
and
jmp
xor
cmp
and
cmp
jmp
inc
jmp
cmp
and
inc
jmp
inc
jmp
inc
jmp
ss
lcall
sub
call
and
call
sbb
sbb
adc
sbb
call
sbb
and
sbb
sub
jmp
ss
jmp
xor
lcall
sub
lcall
es
sbb
sub
pop
es
sbb
jmp
xor
jmp
cmp
ljmp
inc
dec
ljmp
inc
dec
ljmp
dec
ljmp
inc
dec
ljmp
inc
dec
ljmp
inc
dec
ljmp
aas
inc
jmp
cmp
inc
jmp
cmp
lcall
sub
jmp
xor
jmp
cs
sbb
xor
sbb
xor
sbb
call
sbb
ljmp
xor
ljmp
imul
and
sub
or
pop
call
sbb
adc
and
push
and
lcall
daa
sub
sbb
xor
sbb
xor
jmp
xor
jmp
cmp
jmp
cmp
and
ds
jmp
aas
inc
jmp
ds
jmp
aas
inc
jmp
inc
dec
jmp
aas
dec
jmp
ds
jmp
ds
jmp
cmp
inc
jmp
cmp
inc
jmp
cmp
jmp
ds
jmp
cmp
aas
jmp
xor
xor
lcall
sub
call
and
call
and
call
and
call
and
call
es
pop
daa
sub
sbb
lcall
sub
lcall
xor
jmp
xor
inc
ljmp
inc
dec
ljmp
dec
push
pushl
push
popa
cmp
imul
imul
dec
jbe
decl
decl
mov
push
jg
call
xchg
call
xchg
call
xchg
call
xchg
call
xchg
call
cltd
call
lcall
lea
incl
add
rolb
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
lea
call
call
xchg
call
xchg
call
xchg
call
decl
decl
decl
test
inc
jno
incl
incl
jbe
ds
cmp
insb
cmp
pushl
push
pop
ljmp
dec
push
ljmp
inc
dec
jmp
ds
jmp
inc
jmp
xor
aaa
lcall
sub
xor
sbb
xor
pop
xor
lcall
xor
jmp
aaa
cmp
jmp
cmp
dec
ljmp
inc
dec
ljmp
inc
dec
ljmp
inc
dec
ljmp
inc
dec
ljmp
inc
dec
ljmp
dec
ljmp
dec
push
ljmp
dec
push
ljmp
dec
push
ljmp
dec
push
ljmp
dec
push
ljmp
inc
dec
ljmp
inc
dec
ljmp
inc
inc
jmp
inc
jmp
xor
lcall
daa
sub
push
and
call
pop
and
adc
and
push
and
lcall
sub
lcall
xor
jmp
xor
cmp
and
cmp
sbb
cs
sbb
xor
sbb
xor
jmp
inc
ljmp
inc
dec
ljmp
dec
push
pushl
push
pop
pushl
push
pusha
pushl
push
pusha
pushl
pusha
pushl
push
pusha
pushl
pop
pushl
push
pop
pushl
dec
pop
ljmp
dec
push
ljmp
inc
dec
ljmp
inc
dec
jmp
cmp
jmp
aaa
cmp
jmp
cmp
jmp
ss
xor
lcall
sub
call
and
call
and
es
sub
xor
adc
sbb
lcall
daa
sub
sbb
lcall
xor
lcall
xor
jmp
aaa
notrack
cmp
dec
ljmp
inc
dec
ljmp
dec
ljmp
dec
push
pushl
dec
push
pushl
dec
pop
pushl
push
pop
pushl
push
pop
pushl
push
pop
pushl
dec
pop
pushl
dec
pop
ljmp
dec
pop
ljmp
dec
push
ljmp
inc
dec
ljmp
inc
dec
ljmp
inc
dec
ljmp
inc
dec
jmp
ds
jmp
inc
jmp
ss
lcall
sub
xor
sbb
das
lcall
sub
lcall
sub
lcall
sub
lcall
xor
jmp
xor
inc
jmp
ds
ljmp
inc
dec
ljmp
dec
push
pushl
push
pop
cmp
cmp
imul
dec
jb
decl
test
dec
js
decl
mov
push
jg
call
xchg
call
xchg
call
xchg
call
call
xchg
call
cltd
call
cltd
call
lcall
add
rolb
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
mov
push
xchg
call
xchg
call
decl
decl
decl
decl
cmp
inc
imul
gs
cmp
insb
cmp
pushl
push
pusha
pushl
push
pop
pushl
dec
push
ljmp
dec
ljmp
inc
dec
jmp
cmp
and
cmp
pop
xor
lcall
xor
lcall
cs
sbb
xor
jmp
xor
jmp
ss
jmp
aas
inc
ljmp
inc
dec
ljmp
inc
dec
ljmp
dec
push
pushl
dec
push
pushl
push
pop
pushl
push
pop
pushl
pop
pushl
push
pusha
pushl
push
pusha
pushl
push
popa
pushl
pop
pushl
pop
pushl
push
pop
pushl
dec
push
ljmp
dec
push
ljmp
inc
dec
jmp
aas
inc
jmp
inc
lcall
xor
lcall
sub
push
and
call
and
push
and
lcall
daa
sub
sbb
xor
sbb
xor
jmp
xor
lcall
xor
jmp
xor
lcall
xor
jmp
xor
cmp
ljmp
inc
dec
ljmp
dec
push
pushl
push
pop
pushl
push
popa
cmp
cmp
cmp
popa
insl
cmp
bound
cmp
pop
imul
xor
push
pop
ljmp
inc
dec
ljmp
inc
dec
ljmp
inc
dec
jmp
aas
inc
jmp
aaa
lcall
xor
lcall
sub
call
and
call
and
adc
and
adc
and
lcall
es
sbb
das
lcall
xor
jmp
xor
inc
jmp
cmp
inc
ljmp
inc
dec
ljmp
push
ljmp
dec
push
pushl
dec
pop
pushl
push
pop
pushl
push
pusha
pushl
push
popa
pushl
pop
fs
cmp
cmp
pushl
pop
pushl
push
popa
pushl
push
pop
pushl
push
pop
ljmp
dec
push
ljmp
inc
dec
ljmp
inc
dec
jmp
ds
jmp
aas
jmp
xor
cmp
sbb
sub
xor
sbb
xor
sbb
xor
sbb
lcall
xor
jmp
xor
inc
jmp
inc
dec
ljmp
push
pushl
dec
push
pushl
pop
cmp
cmp
insb
incl
jae
inc
imul
jo
decl
cmp
jbe
decl
decl
mov
push
jle
call
call
xchg
call
call
xchg
call
call
cwtl
call
cltd
call
cltd
incl
add
rolb
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
mov
call
xchg
call
xchg
call
xchg
decl
decl
decl
decl
cmp
jo
incl
js
inc
addr16
cmp
outsb
cmp
ss
pusha
pushl
push
pop
ljmp
dec
push
ljmp
dec
ljmp
inc
dec
jmp
cmp
jmp
cmp
jmp
xor
aaa
lcall
sub
xor
sbb
xor
sbb
lcall
xor
jmp
xor
jmp
aaa
notrack
inc
jmp
aas
inc
ljmp
inc
dec
ljmp
dec
ljmp
dec
push
pushl
dec
pop
pushl
push
pop
pushl
push
arpl
cmp
cmp
cmp
cmp
cmp
pushl
push
popa
pushl
push
pop
pushl
dec
push
ljmp
dec
push
ljmp
inc
dec
jmp
ds
jmp
inc
jmp
xor
lcall
xor
sbb
call
and
call
and
lcall
daa
sub
sbb
das
lcall
cs
sbb
xor
sbb
xor
jmp
xor
jmp
aaa
notrack
inc
ljmp
aas
dec
ljmp
inc
dec
pushl
dec
push
pushl
pop
fs
cmp
cmp
insl
aas
data16
inc
push
jne
inc
push
jb
ds
cmp
insl
cmp
ss
pushl
push
pop
ljmp
dec
push
ljmp
inc
dec
ljmp
inc
dec
jmp
cmp
jmp
aaa
notrack
xor
lcall
sub
lcall
sub
call
and
call
and
lcall
daa
sub
sbb
lcall
xor
sbb
xor
jmp
ss
jmp
cmp
dec
ljmp
inc
dec
ljmp
dec
push
pushl
dec
push
pushl
push
pop
pushl
pop
popa
cmp
cmp
cmp
cmp
cmp
cmp
pushl
pop
pushl
pop
pushl
push
pop
ljmp
dec
push
ljmp
inc
dec
jmp
cmp
inc
jmp
xor
aaa
lcall
sub
lcall
sub
lcall
sub
lcall
sub
lcall
xor
sbb
sub
xor
sbb
xor
jmp
xor
inc
jmp
aas
inc
ljmp
inc
dec
ljmp
dec
push
pushl
push
pop
pushl
push
arpl
cmp
cmp
imul
inc
jo
decl
cmp
ja
decl
mov
dec
jl
call
call
call
xchg
call
call
call
call
call
cwtl
incl
add
rolb
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
xchg
call
xchg
call
xchg
call
xchg
decl
mov
dec
jns
decl
test
inc
jno
incl
incl
jne
arpl
cmp
pushl
push
pusha
pushl
push
pop
ljmp
dec
push
ljmp
inc
jmp
cmp
sub
inc
ljmp
cmp
jmp
xor
das
lcall
sub
jmp
sub
xor
pop
cs
and
xor
ljmp
cmp
ljmp
inc
dec
jmp
aas
inc
ljmp
inc
dec
ljmp
dec
push
pushl
pop
pushl
pop
popa
cmp
cmp
cmp
cmp
pushl
pop
pushl
pop
pushl
dec
pop
ljmp
dec
push
ljmp
inc
dec
ljmp
inc
dec
jmp
cmp
ljmp
cmp
sub
inc
ljmp
cmp
jmp
xor
jmp
das
xor
push
sub
jmp
xor
ljmp
cmp
xor
inc
pushl
inc
inc
pushl
inc
inc
pushl
inc
inc
pushl
inc
dec
pushl
inc
pushl
dec
ljmp
inc
inc
ljmp
aas
inc
jmp
aas
inc
ljmp
inc
dec
ljmp
dec
push
pushl
push
pop
pushl
pop
cmp
cmp
insb
ds
inc
data16
inc
push
jbe
inc
imul
ds
cmp
imul
pop
pushl
pop
pushl
dec
push
ljmp
dec
push
ljmp
inc
dec
jmp
aas
inc
jmp
inc
jmp
cmp
sub
inc
ljmp
aaa
cmp
and
aaa
lcall
daa
sub
sbb
sub
sbb
sub
push
sub
lcall
sub
xor
pop
cs
and
cmp
sub
aas
ljmp
inc
ljmp
inc
inc
ljmp
inc
dec
ljmp
inc
dec
ljmp
dec
push
pushl
push
pop
pushl
pop
cmp
cmp
cmp
cmp
pushl
pop
arpl
xor
push
pop
ljmp
dec
push
ljmp
push
ljmp
inc
dec
jmp
ds
ljmp
cmp
ljmp
cmp
ljmp
cmp
sub
cmp
jmp
cs
and
xor
ljmp
cmp
xor
inc
pushl
inc
inc
pushl
inc
inc
pushl
inc
inc
pushl
inc
dec
pushl
inc
pushl
dec
pushl
inc
dec
ljmp
inc
dec
ljmp
dec
ljmp
dec
push
pushl
push
pop
pushl
pop
arpl
cmp
aas
data16
inc
imul
dec
jb
decl
test
dec
js
decl
mov
push
jge
call
call
call
xchg
call
xchg
call
call
call
incl
add
rolb
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
xchg
call
xchg
call
xchg
decl
decl
mov
dec
js
decl
cmp
jo
incl
js
ds
cmp
insb
pushl
pop
pushl
pop
pushl
dec
push
ljmp
inc
jmp
inc
inc
cmp
incl
push
incl
push
cmp
das
cmp
ljmp
cmp
xor
cmp
pushl
inc
inc
pushl
ds
pushl
cmp
cmp
incl
push
incl
pop
cmp
pushl
inc
dec
ljmp
aas
inc
ljmp
inc
dec
ljmp
dec
push
pushl
dec
pop
pushl
pop
pushl
push
pusha
pushl
pop
arpl
cmp
cmp
pushl
pop
arpl
ss
pusha
pushl
push
pop
ljmp
dec
push
ljmp
dec
ljmp
inc
dec
ljmp
cmp
inc
pushl
inc
dec
cmp
dec
incl
push
incl
dec
cmp
dec
pushl
aas
inc
cmp
decl
push
ljmp
outsl
incl
lea
jg
xchg
jnp
cmp
jge
jmp
outsl
incl
pop
pushl
dec
dec
ljmp
inc
dec
ljmp
inc
dec
ljmp
push
pop
pushl
push
pusha
cmp
cmp
imul
arpl
inc
data16
inc
push
jne
inc
push
jb
bound
cmp
pushl
pop
arpl
xor
ljmp
dec
push
ljmp
dec
jmp
inc
dec
jmp
ds
pushl
dec
push
incl
push
cmp
pushl
cmp
ljmp
xor
ljmp
xor
pushl
cmp
aaa
inc
inc
pushl
inc
inc
pushl
inc
pushl
cmp
pushl
inc
inc
incl
push
incl
push
ds
push
pushl
inc
dec
ljmp
inc
inc
ljmp
inc
dec
ljmp
dec
push
pushl
push
pop
pushl
push
pusha
pushl
pop
arpl
cmp
cmp
pushl
pop
arpl
ss
pusha
pushl
pop
pushl
dec
push
ljmp
inc
dec
ljmp
ds
ljmp
ds
pushl
inc
dec
cmp
incl
push
incl
push
aas
dec
dec
cmp
cmp
incl
dec
lcall
addr16
jg
test
mov
mov
jg
xchg
jl
test
ja
cmp
jno
decl
pusha
cmp
push
ljmp
inc
dec
ljmp
inc
dec
ljmp
push
pushl
dec
pop
pushl
pop
addr16
cmp
outsb
incl
je
inc
insb
jp
inc
jno
decl
cmp
ja
decl
mov
dec
jl
decl
mov
push
jg
call
xchg
call
call
xchg
call
xchg
call
incl
add
rolb
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
mov
call
xchg
call
xchg
decl
decl
decl
test
dec
jb
incl
jl
inc
imul
cmp
pushl
push
pusha
pushl
push
pop
ljmp
inc
dec
ljmp
cmp
dec
incl
push
jmp
outsb
jns
cmp
xchg
lcall
incw
decl
push
pushl
jge
jl
cmp
test
call
pop
lcall
ljmp
jbe
pop
gs
cmp
ljmp
ds
jmp
ds
ljmp
inc
dec
ljmp
dec
push
pushl
dec
pop
pushl
pop
pushl
push
pusha
pushl
push
pusha
pushl
push
pusha
pushl
push
pop
pushl
dec
push
ljmp
inc
dec
jmp
cmp
xor
incl
push
call
popa
jmp
imul
jae
pushl
js
mov
ljmp
int3
int3
fstp
fdivrp
fstp
fdivrp
fcmovnu
fdivr
xlat
fcomp
dec
iret
sar
mov
xchg
xchg
decl
pop
pushl
inc
dec
jmp
cmp
dec
ljmp
dec
push
pushl
push
pop
pushl
push
cmp
ds
insl
ds
inc
data16
inc
push
jb
ds
cmp
insb
cmp
pushl
push
pusha
pushl
push
pop
ljmp
dec
push
ljmp
inc
dec
ljmp
cmp
inc
cmp
call
pushl
jge
jl
cmp
jge
jmp
outsb
incl
dec
incl
dec
js
jle
ja
jl
addb
call
pop
lcall
ljmp
je
pop
addr16
pusha
push
incl
push
ljmp
inc
inc
jmp
cmp
dec
ljmp
dec
push
pushl
push
pop
pushl
push
pusha
pushl
push
pusha
pushl
push
pop
pushl
dec
pop
ljmp
dec
push
ljmp
inc
dec
jmp
ds
jmp
cmp
sub
dec
push
call
pop
lcall
ljmp
ljmp
jbe
addb
call
enter
jmp
loopne
fcos
rcl
sar
rol
lcall
addr16
cmp
jmp
cmp
dec
ljmp
dec
push
pushl
push
pop
pushl
pop
arpl
cmp
ds
inc
imul
dec
jae
decl
test
dec
jns
decl
decl
mov
dec
jle
decl
mov
push
jg
call
xchg
call
xchg
call
xchg
incl
add
rolb
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
mov
call
xchg
call
xchg
decl
mov
dec
jns
decl
cmp
jno
incl
incl
jae
cmp
insb
cmp
pushl
pop
ljmp
dec
push
ljmp
inc
dec
jmp
cmp
ljmp
cmp
cmp
dec
jmp
jno
mov
mov
lcall
inc
mov
mov
mov
pushl
rcl
jmp
stos
stos
decl
xchg
xchg
incl
jno
jmp
outsb
incl
push
ljmp
ds
jmp
inc
dec
ljmp
dec
ljmp
dec
push
pushl
push
pop
pushl
pop
pushl
pop
pushl
pop
pushl
push
pop
pushl
dec
push
ljmp
dec
push
ljmp
inc
dec
jmp
ds
jmp
aaa
ljmp
cmp
cmp
dec
push
pop
pushl
jnp
jae
jns
test
lods
pushl
mov
jmp
out
in
in
in
out
out
out
out
out
out
out
out
out
jmp
jmp
call
pushl
jae
cmp
jmp
cmp
ljmp
aas
inc
ljmp
dec
push
pushl
pop
gs
cmp
push
bound
ds
inc
gs
arpl
ds
insl
cmp
pushl
pop
arpl
xor
pop
ljmp
dec
push
ljmp
inc
jmp
inc
dec
call
arpl
xchg
pushf
popf
lcall
mov
mov
mov
incl
nop
ljmp
ljmp
test
lcall
mov
pusha
imul
xor
jmp
cmp
jmp
ds
ljmp
inc
dec
ljmp
dec
push
pushl
dec
pop
pushl
push
pop
pushl
pop
pushl
pop
pushl
push
pop
pushl
dec
pop
ljmp
dec
push
ljmp
inc
jmp
cmp
jmp
cmp
pushl
inc
inc
incl
push
ljmp
js
jle
jp
jg
test
mov
mov
rcl
jmp
loop
jmp
jmp
in
in
in
out
out
out
out
out
out
in
in
in
jmp
loop
inc
ret
incl
dec
push
jmp
ds
ljmp
push
pushl
pop
addr16
bound
inc
imul
inc
jo
decl
cmp
js
decl
decl
mov
dec
jge
decl
decl
mov
push
adcb
push
adcl
mov
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
xchg
call
xchg
decl
decl
mov
dec
js
decl
cmp
jo
incl
ja
ds
cmp
pushl
push
pushl
dec
pop
ljmp
aas
inc
jmp
cmp
ljmp
pop
incl
ret
ret
mov
lret
loopne
loopne
vshufpd
mov
inc
mov
enter
leave
leave
mov
mov
mov
mov
jg
insb
jae
incl
push
ljmp
cmp
jmp
ss
es
ljmp
inc
dec
ljmp
dec
push
pushl
push
pop
pushl
push
pop
pushl
push
pop
pushl
dec
push
ljmp
dec
push
ljmp
inc
jmp
cmp
jmp
xor
ljmp
cmp
call
pop
incl
xchg
xchg
lcall
mov
enter
fdivr
loopne
loopne
in
in
in
push
icebp
icebp
push
hlt
hlt
push
cmc
cmc
push
hlt
hlt
push
repnz
out
out
out
jmp
out
inc
incl
dec
dec
jmp
xor
inc
ljmp
inc
dec
ljmp
dec
push
pushl
push
pop
pushl
push
cmp
cmp
imul
bound
arpl
ds
insl
cmp
push
cmp
pushl
push
pusha
pushl
push
pop
ljmp
inc
dec
jmp
inc
jmp
dec
dec
jp
cmp
cmpsb
cmpsl
mov
iret
iret
call
aad
inc
enter
ret
ret
ret
inc
enter
lret
rol
mov
mov
lcall
addb
pop
arpl
xor
inc
jmp
xor
jmp
inc
dec
ljmp
dec
ljmp
dec
push
pushl
dec
pop
pushl
push
pop
pushl
push
pop
pushl
dec
pop
ljmp
dec
push
ljmp
dec
ljmp
inc
dec
jmp
xor
jmp
inc
decl
pop
jns
cmp
xchg
cwtl
call
mov
inc
rol
aam
aam
loope
loope
out
out
lock
hlt
hlt
push
cmc
cmc
push
cmc
cmc
push
repz
icebp
icebp
call
rcl
jmp
push
push
jmp
xor
inc
ljmp
inc
dec
ljmp
dec
push
pushl
push
pop
pushl
pop
arpl
cmp
imul
gs
inc
insb
jns
inc
outsl
jge
dec
je
decl
xchg
dec
js
decl
mov
dec
jge
decl
decl
call
nop
call
nop
call
nop
incl
add
rolb
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
test
call
xchg
decl
decl
mov
dec
ja
decl
cmp
inc
imul
cmp
xor
dec
push
ljmp
inc
dec
jmp
xor
inc
call
jmp
mov
aam
fdivrp
in
in
fstp
rcl
sar
aad
aad
fcmovnu
fcomp
fdivr
fcomp
fdivr
enter
int3
int
pushl
xchg
jnp
cmp
jge
incl
dec
jmp
xor
aaa
jmp
cmp
jmp
aas
inc
ljmp
inc
dec
ljmp
dec
push
pushl
dec
push
ljmp
dec
push
ljmp
dec
push
ljmp
dec
ljmp
inc
dec
jmp
ss
sbb
xor
dec
lcall
incl
xchg
xchg
call
mov
call
rcl
call
icebp
icebp
push
cmc
cmc
cld
cld
cld
push
hlt
hlt
jmp
iret
iret
decl
dec
dec
lcall
xor
jmp
cmp
ljmp
inc
dec
ljmp
dec
pop
pushl
pop
gs
cmp
cmp
insb
ds
insl
cmp
imul
pop
push
pushl
pop
pushl
dec
push
ljmp
inc
jmp
ss
and
cmp
inc
push
push
lcall
lods
lods
dec
lret
loop
loop
rcl
sar
aam
aam
rcl
sar
loopne
loopne
fcomp
fdivr
rcl
sar
enter
mov
mov
cmpsl
test
cmp
mov
sub
xor
jmp
aaa
notrack
cmp
dec
ljmp
dec
push
ljmp
dec
push
ljmp
dec
push
ljmp
dec
push
ljmp
inc
dec
jmp
ds
jmp
aaa
lcall
xor
jmp
xor
pushl
inc
inc
call
pop
jp
jg
xchg
xchg
xchg
call
movsb
movsl
dec
lret
lret
fcmovnu
ljmp
push
hlt
hlt
sti
sti
sti
clc
clc
clc
jmp
jmp
fcomp
fdivr
scas
mov
incl
push
jmp
xor
jmp
ss
daa
ds
ljmp
dec
pushl
dec
pop
pushl
push
pusha
cmp
ds
inc
imul
inc
jno
decl
xchg
dec
js
decl
mov
dec
jl
decl
mov
dec
jl
call
call
call
nop
incl
add
rolb
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
test
call
xchg
decl
mov
dec
jp
decl
test
inc
jno
incl
incl
jne
cmp
outsb
cmp
pushl
push
pop
ljmp
dec
push
ljmp
inc
dec
jmp
cmp
lcall
xor
ljmp
arpl
mov
mov
out
out
xlat
fcomp
jmp
in
fdivr
rcl
sar
aam
aam
fcos
fstp
rcl
sar
int
int
movsl
cmpsb
cmpsl
lcall
xchg
pushl
inc
inc
lcall
sub
xor
and
inc
ljmp
inc
dec
ljmp
dec
ljmp
dec
push
ljmp
dec
push
ljmp
dec
push
ljmp
inc
dec
jmp
ds
jmp
cmp
lcall
xor
lcall
sub
jmp
xor
incl
dec
pushl
jbe
jnp
jg
xchg
xchg
xchg
jl
jle
cltd
lcall
jecxz
jecxz
in
in
in
push
hlt
hlt
push
div
std
std
std
push
cmc
cmc
jmp
jmp
aad
aad
xchg
xchg
xchg
cmp
lcall
ss
es
ljmp
push
pushl
pop
pushl
pop
arpl
cmp
cmp
imul
popa
insb
cmp
push
cmp
pushl
push
pushl
push
pop
ljmp
dec
push
ljmp
inc
dec
jmp
xor
jmp
xor
decl
push
jmp
mov
jmp
out
jmp
loopne
fstp
aad
aad
rcl
sar
jmp
loop
fstp
xlat
xlat
xlat
dec
int
ljmp
mov
jns
jg
inc
dec
dec
jmp
xor
sbb
xor
and
cmp
and
aas
inc
ljmp
inc
dec
ljmp
dec
push
ljmp
dec
push
ljmp
inc
dec
ljmp
inc
dec
jmp
xor
lcall
cs
aaa
inc
inc
jmp
push
jae
js
xchg
xchg
xchg
incl
mov
in
in
in
push
lock
div
sti
sti
sti
clc
clc
clc
out
out
out
fstp
fdivrp
mov
mov
inc
push
push
lcall
das
xor
and
cmp
and
inc
dec
pushl
dec
push
pushl
pop
addr16
arpl
inc
push
jnp
inc
jno
decl
cmp
ja
decl
xchg
dec
jl
decl
mov
dec
jle
decl
mov
push
jg
call
incl
add
rolb
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
test
call
decl
mov
dec
jp
decl
test
inc
jno
incl
incl
jae
cmp
insb
pushl
pop
arpl
xor
ljmp
aas
inc
jmp
aaa
lcall
das
xor
jmp
imul
xlat
fcomp
fcmovnu
in
in
fstp
fdivr
lret
dec
int
call
xlat
xlat
fdivr
fdivrp
rcl
sar
int3
int3
int3
lcall
xchg
xchg
incl
pop
popa
pushl
xor
sbb
xor
pop
xor
jmp
inc
ljmp
aas
inc
ljmp
inc
dec
ljmp
dec
push
ljmp
inc
dec
ljmp
inc
dec
jmp
cmp
jmp
ss
sbb
sub
decl
push
jp
jle
lea
cwtl
pushl
jb
jl
jle
int
int
out
out
out
out
out
push
cmc
cmc
clc
clc
clc
push
div
in
in
in
call
xlat
fdivr
mov
dec
lcall
xor
and
cmp
and
inc
dec
ljmp
dec
push
pushl
push
pop
pushl
push
cmp
cmp
cmp
push
cmp
cmp
pushl
push
pusha
pushl
push
pop
ljmp
inc
dec
jmp
cmp
lcall
xor
jmp
xor
decl
push
pushl
fcos
in
in
fstp
aam
aam
lret
call
fcmovnu
fdivrp
fcos
into
into
into
jmp
xchg
decl
insb
outsb
cmp
xor
sbb
das
lcall
xor
jmp
aaa
notrack
ds
ljmp
inc
dec
ljmp
dec
ljmp
dec
push
ljmp
dec
ljmp
inc
dec
jmp
ds
jmp
cmp
lcall
xor
lcall
sub
jmp
cs
cmp
jo
incl
lahf
jp
jl
jo
jb
mov
mov
loop
loop
in
in
in
push
repz
div
cld
cld
cld
stc
stc
stc
out
out
out
jmp
loopne
pushl
dec
push
lcall
xor
jmp
inc
dec
ljmp
dec
push
pushl
pop
cmp
ds
insl
incl
je
inc
insl
jp
inc
jno
decl
cmp
ja
decl
xchg
dec
jnp
decl
mov
dec
jle
decl
mov
dec
jle
decl
mov
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
test
call
decl
mov
dec
jns
decl
test
inc
jno
incl
jns
inc
gs
cmp
pushl
push
pushl
dec
pop
ljmp
dec
jmp
ds
jmp
xor
lcall
cmp
jmp
imul
ret
fcomp
fdivr
jecxz
jecxz
jecxz
jecxz
rcl
sar
stos
stos
stos
mov
fcmovu
fdivrp
fdivrp
rcl
sar
int
int
stos
lods
lods
jmp
lcall
aas
inc
jmp
sub
das
lcall
xor
jmp
aaa
notrack
ds
ljmp
inc
dec
ljmp
dec
ljmp
dec
ljmp
inc
dec
ljmp
aas
inc
jmp
xor
lcall
sub
das
cmp
pop
fs
mov
pushl
jbe
pushl
jns
mov
call
lock
div
std
std
std
push
div
out
out
out
call
fcomp
decl
inc
lcall
sub
lcall
xor
jmp
inc
ljmp
inc
dec
ljmp
dec
push
pushl
push
pop
pushl
push
pusha
cmp
cmp
cmp
cmp
pushl
pop
arpl
xor
dec
push
ljmp
dec
jmp
ds
jmp
ss
sbb
xor
decl
pop
pushl
lret
loope
loope
jecxz
jecxz
loopne
loopne
fcmovu
mov
mov
mov
mov
aad
aad
fstp
fstp
fcos
into
into
into
pushl
movsb
movsl
lcall
jns
incl
dec
jmp
xor
lcall
ss
and
inc
dec
ljmp
inc
dec
ljmp
dec
ljmp
dec
ljmp
inc
dec
ljmp
inc
dec
jmp
ss
sbb
sub
decl
push
jle
cmp
cmpsl
test
mov
mov
jmp
loopne
out
out
out
push
hlt
hlt
cld
cld
cld
stc
stc
stc
push
icebp
icebp
jmp
loop
ljmp
dec
dec
lcall
sub
lcall
cmp
ljmp
inc
dec
ljmp
dec
push
pushl
pop
cmp
cmp
insb
incl
jae
inc
insb
jns
inc
jno
decl
cmp
ja
decl
xchg
dec
jnp
decl
mov
dec
jge
decl
mov
dec
jle
decl
mov
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
test
call
decl
mov
dec
jns
decl
test
inc
jo
incl
ja
ds
cmp
pushl
push
pusha
pushl
dec
push
ljmp
inc
dec
jmp
cmp
jmp
xor
lcall
sub
ljmp
cmp
mov
jmp
loope
jmp
loop
decl
mov
fcomp
fdivr
call
rcl
call
rcl
dec
enter
mov
mov
jp
incl
dec
jmp
das
xor
sbb
sub
sbb
ss
and
inc
dec
ljmp
inc
dec
ljmp
dec
ljmp
inc
dec
jmp
ds
jmp
cmp
lcall
xor
lcall
sub
lcall
inc
inc
js
jge
xchg
xchg
call
rcl
dec
iret
iret
call
xchg
xchg
dec
leave
leave
ljmp
clc
clc
clc
std
std
std
push
div
out
out
out
lea
inc
lcall
sub
push
xor
jmp
cmp
ljmp
inc
dec
ljmp
push
pop
pushl
push
pusha
cmp
cmp
cmp
cmp
pushl
pop
arpl
xor
pop
pushl
dec
push
ljmp
inc
jmp
xor
xor
xor
decl
push
ljmp
int3
int3
loope
loope
loopne
loopne
rcl
sar
cltd
cltd
cltd
incl
lret
lret
fcomp
fdivr
aad
aad
fcos
rcl
sar
leave
leave
leave
mov
ret
ret
incl
pop
pop
ljmp
xor
sub
sbb
xor
and
cmp
and
inc
jmp
aas
inc
ljmp
inc
dec
ljmp
inc
dec
ljmp
inc
dec
ljmp
inc
dec
jmp
aas
inc
jmp
inc
jmp
xor
lcall
sub
lcall
call
leave
leave
dec
iret
iret
ljmp
mov
jmp
jecxz
push
lock
div
cld
cld
cld
stc
stc
stc
push
lock
loop
pushl
dec
dec
lcall
sub
jmp
aaa
notrack
aas
inc
ljmp
push
pop
cmp
cmp
insb
incl
jae
inc
insb
jns
inc
jno
decl
cmp
jne
decl
xchg
dec
jnp
decl
mov
dec
jge
decl
mov
dec
jle
decl
mov
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
test
call
decl
mov
dec
js
decl
cmp
jo
incl
ja
ds
cmp
xor
dec
push
ljmp
inc
dec
jmp
xor
lcall
sub
ljmp
xor
pusha
mov
rcl
jmp
in
jmp
in
int
int
xchg
decl
mov
aam
rcl
sar
aad
aad
iret
iret
iret
inc
mov
call
push
pop
jmp
es
sbb
xor
and
cmp
and
aas
inc
ljmp
inc
dec
ljmp
inc
dec
ljmp
inc
dec
ljmp
aas
inc
jmp
ss
push
xor
lcall
sub
jmp
sub
dec
decl
lods
lods
dec
int
call
rcl
inc
ret
ret
inc
rol
loop
loop
out
out
out
push
cmc
cmc
stc
stc
stc
push
div
out
out
out
lea
inc
call
es
sbb
aaa
notrack
aas
inc
ljmp
dec
pushl
dec
pop
pushl
pop
arpl
cmp
cmp
cmp
pushl
push
pushl
push
pop
ljmp
dec
push
ljmp
inc
dec
jmp
xor
lcall
sub
jmp
das
xor
inc
dec
dec
jmp
enter
in
in
in
fcmovu
pushf
pushf
pushf
jmp
addr16
jns
jp
mov
mov
iret
iret
iret
fcomp
fdivr
rcl
sar
aam
aam
inc
rol
nop
xchg
ljmp
ljmp
cmp
push
and
lcall
sub
lcall
xor
jmp
cmp
jmp
ds
ljmp
inc
dec
ljmp
inc
dec
ljmp
inc
dec
ljmp
inc
dec
jmp
cmp
lcall
xor
lcall
sub
lcall
sub
js
jge
movsb
movsl
cmpsb
inc
mov
dec
enter
mov
fcos
in
in
in
push
repz
div
std
std
std
cli
cli
cli
push
lock
loop
pushl
dec
dec
lcall
daa
sub
sbb
xor
and
inc
ljmp
dec
pushl
push
pop
pushl
pop
arpl
cmp
imul
data16
inc
imul
outsl
jge
dec
jae
decl
test
dec
ja
decl
mov
dec
jnp
decl
mov
dec
jnp
decl
mov
dec
jge
incl
add
rolb
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
test
decl
mov
dec
jnp
decl
mov
dec
jne
incl
jle
inc
imul
cmp
xor
dec
push
ljmp
inc
dec
jmp
inc
lcall
xor
lcall
sub
call
pop
ljmp
rcl
out
out
out
jmp
out
jmp
out
fstp
scas
scas
scas
ljmp
insb
lcall
pop
pushl
je
mov
int3
call
rcl
call
rcl
call
aam
inc
mov
lcall
pop
jmp
xor
call
es
sbb
xor
and
cmp
and
inc
jmp
ds
ljmp
inc
dec
ljmp
inc
dec
ljmp
inc
dec
jmp
aas
inc
jmp
ss
sbb
sub
decl
push
lcall
rol
fcos
fcos
fdivr
in
in
in
push
repz
div
cld
cld
cld
std
std
std
std
std
std
std
std
std
std
std
std
push
div
out
out
out
fcos
nop
xchg
xchg
cmp
call
and
xor
and
cmp
daa
ds
ljmp
dec
pushl
dec
push
pushl
pop
pushl
pop
arpl
cmp
cmp
cmp
pushl
push
pusha
pushl
push
pop
ljmp
dec
push
ljmp
inc
dec
jmp
xor
lcall
sub
lcall
and
dec
lcall
lret
call
in
in
jmp
jecxz
jmp
loopne
inc
mov
jp
jnp
pop
pop
pop
ljmp
imul
lret
call
rcl
call
rcl
call
rcl
call
rcl
lcall
addb
push
and
lcall
sub
lcall
xor
jmp
aaa
notrack
cmp
dec
ljmp
inc
dec
ljmp
inc
dec
ljmp
aas
inc
jmp
cmp
jmp
aaa
lcall
xor
lcall
sub
lcall
daa
sub
cmp
call
mov
call
aad
fcmovnu
xlat
xlat
xlat
call
aam
jmp
jmp
repnz
cmc
cmc
cli
cli
cli
std
std
std
std
std
std
std
std
std
std
std
std
cli
cli
cli
out
out
out
jmp
loope
pushl
dec
dec
lcall
sub
sbb
xor
and
jmp
cmp
dec
pushl
push
pop
pushl
pop
arpl
cmp
push
inc
gs
inc
imul
outsl
jge
dec
jae
decl
test
dec
ja
decl
mov
dec
jnp
decl
mov
dec
jnp
decl
mov
dec
jge
incl
add
rolb
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
test
decl
mov
dec
jnp
decl
mov
dec
jae
incl
jle
inc
imul
cmp
pushl
dec
push
ljmp
inc
dec
jmp
cmp
lcall
daa
sub
and
push
ljmp
aam
in
in
in
jmp
out
ljmp
fcomp
fdivr
lods
lods
lods
ljmp
lcall
pop
jmp
call
call
rcl
fcos
xlat
xlat
xlat
dec
lret
lret
ljmp
bound
xor
pop
and
xor
pop
xor
jmp
cmp
jmp
cmp
dec
ljmp
inc
dec
ljmp
inc
dec
jmp
ds
jmp
inc
jmp
xor
lcall
daa
sub
and
pop
lcall
int3
fdivrp
fdivrp
loopne
loopne
in
in
icebp
icebp
icebp
push
cmc
cmc
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
cli
cli
cli
sti
sti
sti
push
div
out
out
out
fcos
xchg
xchg
xchg
pushl
inc
inc
call
and
lcall
cmp
es
ljmp
dec
pushl
dec
push
pushl
pop
pushl
push
cmp
cmp
pushl
pop
arpl
ss
pusha
pushl
push
pop
ljmp
dec
push
ljmp
inc
dec
jmp
xor
lcall
sub
lcall
and
inc
call
int
jmp
out
jmp
out
fdivrp
mov
jp
lcall
pop
lcall
pusha
incl
sar
call
rcl
call
aam
ljmp
xchg
call
and
lcall
sub
lcall
xor
jmp
ss
and
aas
inc
ljmp
inc
dec
ljmp
inc
dec
jmp
aas
inc
jmp
ss
sbb
sub
lcall
daa
sub
cmp
xchg
xchg
mov
jmp
loope
loopne
loopne
out
out
out
push
cmc
cmc
stc
stc
stc
cld
cld
cld
sti
sti
sti
sti
sti
sti
cli
cli
cli
cli
cli
cli
sti
sti
sti
stc
stc
stc
out
out
out
jmp
loope
pushl
dec
dec
lcall
sub
lcall
sub
jmp
xor
jmp
cmp
ljmp
pop
pushl
push
cmp
push
inc
gs
inc
imul
outsl
jge
dec
jae
decl
test
dec
ja
decl
mov
dec
jnp
decl
mov
dec
jnp
decl
mov
dec
jge
incl
add
rolb
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
adcl
dec
jl
decl
mov
dec
js
decl
cmp
outsl
jge
inc
imul
cmp
pushl
dec
push
ljmp
inc
dec
jmp
cmp
lcall
daa
sub
and
decl
push
pushl
push
lock
jmp
jmp
jmp
jmp
jmp
in
jmp
loope
inc
rol
mov
jl
xchg
xchg
xchg
dec
enter
fcmovnu
fcmovu
rcl
sar
mov
mov
pop
bound
xor
lcall
sub
lcall
xor
jmp
aaa
notrack
cmp
ljmp
aas
inc
ljmp
inc
dec
ljmp
inc
dec
jmp
ds
jmp
cmp
jmp
xor
lcall
sub
and
decl
push
lcall
leave
leave
fcmovnu
in
in
out
out
in
in
in
push
hlt
hlt
push
div
cld
cld
cld
sti
sti
sti
sti
sti
sti
sti
sti
sti
stc
stc
stc
clc
clc
clc
stc
stc
stc
push
div
in
in
in
fcos
xchg
xchg
xchg
pushl
aas
inc
call
and
lcall
cmp
es
ljmp
push
pushl
pop
pushl
push
cmp
cmp
pushl
pop
arpl
ss
pusha
pushl
push
pop
ljmp
dec
push
ljmp
inc
dec
jmp
xor
lcall
sub
lcall
and
cmp
inc
call
rcl
in
in
in
jmp
out
in
in
in
jmp
jmp
out
out
loop
loop
call
jl
decl
mov
fcomp
fdivr
fcomp
fdivr
mov
mov
xchg
lcall
and
lcall
ss
and
ds
ljmp
inc
dec
ljmp
inc
dec
jmp
ds
jmp
xor
xor
sbb
sub
cmp
incl
mov
jmp
in
jmp
out
jmp
repnz
div
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
out
out
out
jmp
loopne
pushl
dec
dec
lcall
sub
lcall
sub
jmp
xor
jmp
inc
dec
pushl
dec
pop
pushl
push
cmp
incl
jno
inc
push
incl
jl
dec
jae
decl
test
dec
ja
decl
mov
dec
jnp
decl
mov
dec
jnp
decl
mov
dec
jge
incl
add
rolb
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
adcl
dec
jl
decl
mov
dec
js
decl
cmp
inc
imul
cmp
pushl
pop
ljmp
dec
push
ljmp
inc
dec
jmp
cmp
lcall
daa
sub
and
call
push
pushl
fstp
call
in
in
push
repz
cmc
cmc
out
out
out
ljmp
fcmovu
leave
leave
leave
dec
lret
lret
fcos
fdivr
loopne
loopne
iret
iret
iret
pushl
ljmp
xor
pop
and
lcall
sub
lcall
xor
jmp
aaa
notrack
cmp
jmp
aas
inc
ljmp
inc
dec
ljmp
aas
inc
jmp
cmp
aas
jmp
xor
lcall
sub
pop
sub
call
rcl
jmp
jecxz
jmp
out
in
in
in
push
lock
div
clc
clc
clc
cld
cld
cld
sti
sti
sti
cli
cli
cli
clc
clc
clc
clc
clc
clc
clc
clc
clc
stc
stc
stc
push
div
in
in
in
fcomp
fdivr
lea
inc
call
and
lcall
xor
and
jmp
cmp
dec
pushl
dec
push
pushl
pop
pushl
push
cmp
cmp
pushl
pop
arpl
ss
pusha
pushl
push
pop
ljmp
dec
push
ljmp
inc
dec
jmp
inc
lcall
xor
lcall
sub
call
and
ds
dec
lcall
aam
jmp
in
in
in
in
push
icebp
icebp
clc
clc
clc
in
in
in
in
in
in
jmp
out
fcos
int3
int3
int3
inc
mov
fstp
fstp
aad
aad
mov
addb
sbb
lcall
sub
jmp
ss
and
ds
ljmp
inc
dec
ljmp
aas
inc
jmp
ds
jmp
xor
xor
sbb
sub
sbb
pushl
aas
pushl
jbe
mov
jmp
loope
jmp
in
jmp
jmp
out
out
out
push
hlt
hlt
clc
clc
clc
cld
cld
cld
sti
sti
sti
sti
sti
sti
stc
stc
stc
push
div
stc
stc
stc
clc
clc
clc
stc
stc
stc
out
out
out
jmp
loopne
pushl
dec
dec
lcall
es
sbb
das
lcall
xor
jmp
inc
dec
pushl
dec
pop
pushl
push
pusha
cmp
incl
jno
inc
push
incl
jl
dec
jae
decl
test
dec
ja
decl
mov
dec
jnp
decl
mov
dec
jnp
decl
mov
dec
jge
incl
add
rolb
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
adcl
dec
jl
decl
mov
dec
js
decl
cmp
inc
imul
cmp
pushl
pop
ljmp
dec
push
ljmp
inc
dec
jmp
cmp
lcall
es
and
call
pop
mov
loop
in
in
in
push
repnz
repz
cmc
cmc
push
repz
in
in
in
out
out
out
in
in
in
ljmp
jmp
in
jmp
loop
jmp
jecxz
call
aam
mov
pop
pop
jmp
xor
call
and
lcall
sub
lcall
xor
jmp
aaa
notrack
aas
inc
ljmp
aas
inc
jmp
aas
inc
jmp
cmp
jmp
cmp
lcall
xor
lcall
xor
pop
and
sub
xor
mov
in
in
jmp
jmp
lock
repz
div
clc
clc
clc
cld
cld
cld
stc
stc
stc
stc
stc
stc
push
hlt
hlt
push
div
push
div
stc
stc
stc
push
div
in
in
in
call
xlat
xlat
decl
cmp
sub
sbb
xor
and
jmp
cmp
dec
pushl
dec
push
pushl
pop
pushl
push
cmp
cmp
pushl
pop
arpl
ss
pusha
pushl
push
pop
ljmp
dec
push
ljmp
inc
dec
jmp
inc
lcall
xor
lcall
sub
aas
inc
dec
ljmp
xlat
xlat
call
lock
repz
div
push
repz
in
in
in
push
lock
jmp
jmp
ljmp
jmp
in
jmp
loopne
jmp
jecxz
fcos
jge
cmp
sbb
lcall
sub
sbb
xor
inc
jmp
ds
ljmp
aas
inc
jmp
aas
inc
jmp
ds
jmp
inc
jmp
xor
lcall
daa
sub
sbb
ljmp
xor
inc
loopne
loopne
ljmp
push
repz
cmc
cmc
clc
clc
clc
cld
cld
cld
cli
cli
cli
cli
cli
cli
push
div
push
div
push
div
clc
clc
clc
stc
stc
stc
in
in
in
jmp
loopne
ljmp
dec
dec
lcall
and
lcall
sub
lcall
xor
jmp
inc
dec
pushl
dec
pop
pushl
push
pusha
cmp
incl
jno
inc
push
incl
jl
dec
jae
decl
test
dec
ja
decl
mov
dec
jnp
decl
mov
dec
jnp
decl
mov
dec
jge
incl
add
rolb
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
adcl
dec
jl
decl
mov
dec
js
decl
cmp
inc
imul
cmp
pushl
pop
ljmp
dec
push
ljmp
inc
dec
jmp
cmp
lcall
es
and
call
inc
rol
jecxz
jecxz
in
in
in
push
hlt
hlt
push
div
push
div
push
div
push
repnz
repnz
lock
out
out
out
out
out
out
call
jmp
in
fcos
mov
mov
jmp
sub
daa
lcall
sub
lcall
xor
jmp
aaa
notrack
aas
inc
ljmp
aas
inc
jmp
aas
inc
jmp
cmp
jmp
aaa
lcall
xor
lcall
xor
pop
and
sub
ss
jle
cmp
in
in
in
in
in
push
repz
div
stc
stc
stc
cld
cld
cld
cli
cli
cli
sti
sti
sti
cli
cli
cli
push
repnz
div
push
div
clc
clc
clc
push
cmc
cmc
in
in
in
call
xlat
xlat
decl
cmp
call
and
lcall
sub
jmp
xor
inc
ljmp
inc
dec
pushl
dec
push
pushl
pop
pushl
push
cmp
cmp
pushl
pop
pushl
push
pushl
push
pop
ljmp
dec
push
ljmp
inc
dec
jmp
inc
lcall
xor
lcall
sub
incl
dec
ljmp
ljmp
push
div
push
div
push
div
push
repz
cmc
cmc
out
out
out
out
out
out
out
out
out
ljmp
jmp
in
rol
jp
jle
xor
cmp
adc
and
lcall
xor
inc
jmp
ds
ljmp
aas
inc
jmp
aas
inc
jmp
cmp
inc
jmp
xor
lcall
daa
sub
pop
and
ljmp
popa
mov
loopne
ljmp
push
cmc
cmc
push
div
sti
sti
sti
cld
cld
cld
cli
cli
cli
stc
stc
stc
push
div
push
div
push
div
push
div
push
div
in
in
in
lods
scas
scas
ds
dec
lcall
and
lcall
sub
lcall
xor
jmp
inc
dec
pushl
dec
push
pushl
push
pusha
cmp
ds
inc
push
incl
jl
dec
jae
decl
test
dec
ja
decl
mov
dec
jnp
decl
mov
dec
jnp
decl
mov
dec
jge
incl
add
rolb
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
adcl
dec
jl
decl
mov
dec
js
decl
cmp
outsl
jge
inc
imul
cmp
pushl
pop
ljmp
dec
push
ljmp
inc
dec
jmp
cmp
lcall
es
and
call
inc
rol
jecxz
jecxz
out
out
out
push
div
push
div
clc
clc
clc
clc
clc
clc
push
div
push
hlt
hlt
push
hlt
hlt
push
repnz
repnz
in
in
in
push
lock
in
fstp
mov
mov
jmp
sub
call
sub
lcall
xor
jmp
ss
and
ds
ljmp
inc
dec
jmp
aas
inc
jmp
cmp
lcall
xor
lcall
sub
call
and
sub
cmp
inc
decl
aam
jmp
out
push
lock
cmc
cmc
stc
stc
stc
cld
cld
cld
sti
sti
sti
sti
sti
sti
push
div
out
out
out
push
div
push
div
clc
clc
clc
push
cmc
cmc
in
in
in
call
aad
decl
cmp
call
and
lcall
sub
jmp
xor
inc
ljmp
dec
pushl
dec
push
pushl
pop
pushl
push
cmp
cmp
pushl
pop
pushl
push
pushl
push
pop
ljmp
dec
push
ljmp
inc
dec
jmp
inc
lcall
xor
lcall
sub
lcall
and
incl
dec
ljmp
fcmovu
jmp
jmp
cmc
cmc
cmc
push
div
clc
clc
clc
clc
clc
clc
push
div
push
cmc
cmc
push
repz
repnz
repnz
out
out
out
push
repz
out
jmp
loop
inc
js
jge
xor
cmp
adc
and
lcall
xor
inc
jmp
cmp
inc
jmp
aas
inc
jmp
cmp
aas
jmp
xor
lcall
sub
push
and
ljmp
aaa
ljmp
outsb
dec
leave
leave
jmp
loop
out
out
out
push
hlt
hlt
clc
clc
clc
cld
cld
cld
cld
cld
cld
sti
sti
sti
clc
clc
clc
push
lock
cmc
cmc
push
div
push
div
clc
clc
clc
in
in
in
stos
lods
lods
aas
inc
dec
lcall
and
lcall
sub
lcall
xor
jmp
inc
dec
pushl
dec
push
pushl
push
pusha
cmp
ds
inc
push
incl
jl
dec
jae
decl
test
dec
ja
decl
mov
dec
jnp
decl
mov
dec
jnp
decl
mov
dec
jge
incl
add
rolb
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
adcl
dec
jl
decl
mov
dec
js
decl
cmp
outsl
jge
inc
imul
cmp
pushl
pop
ljmp
dec
push
ljmp
inc
dec
jmp
cmp
lcall
es
and
call
inc
rol
jecxz
jecxz
in
in
in
push
repz
div
push
div
stc
stc
stc
push
div
push
div
push
hlt
hlt
push
repz
hlt
hlt
push
lock
repnz
in
mov
pop
pop
jmp
sub
call
sub
lcall
xor
jmp
ss
and
ds
jmp
aas
inc
jmp
ds
jmp
aaa
lcall
xor
lcall
sub
call
and
lcall
and
incl
dec
lcall
ljmp
push
div
sti
sti
sti
std
std
std
cld
cld
cld
sti
sti
sti
push
div
out
out
out
push
div
push
div
stc
stc
stc
push
cmc
cmc
in
in
in
call
aad
decl
cmp
call
and
lcall
sub
jmp
xor
jmp
cmp
dec
pushl
dec
pop
pushl
pop
arpl
cmp
cmp
cmp
pushl
push
pushl
push
pop
ljmp
dec
push
ljmp
inc
dec
jmp
inc
lcall
xor
lcall
sub
lcall
and
incl
dec
ljmp
fcmovu
jmp
jmp
repnz
cmc
cmc
push
div
clc
clc
clc
clc
clc
clc
push
div
push
hlt
hlt
push
repz
repz
icebp
icebp
push
repnz
ljmp
inc
mov
pushl
cmp
call
and
sbb
sub
jmp
xor
inc
jmp
cmp
dec
jmp
ds
jmp
cmp
jmp
cmp
jmp
xor
lcall
sub
push
and
js
jge
rcl
sar
out
out
lock
div
cli
cli
cli
std
std
std
cld
cld
cld
sti
sti
sti
clc
clc
clc
out
out
out
push
cmc
cmc
clc
clc
clc
clc
clc
clc
clc
clc
clc
in
in
in
stos
lods
lods
aas
inc
dec
lcall
and
lcall
sub
lcall
xor
jmp
inc
dec
pushl
dec
push
pushl
push
pusha
cmp
ds
inc
push
incl
jl
dec
jae
decl
test
dec
ja
decl
mov
dec
jnp
decl
mov
dec
jnp
decl
mov
dec
jge
incl
add
rolb
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
adcl
dec
jl
decl
mov
dec
js
decl
cmp
outsl
jge
inc
imul
cmp
pushl
pop
ljmp
dec
push
ljmp
inc
dec
jmp
cmp
lcall
es
and
call
inc
rol
jecxz
jecxz
in
in
in
push
lock
repz
cmc
cmc
push
div
clc
clc
clc
push
div
push
hlt
hlt
push
hlt
hlt
push
cmc
cmc
push
repnz
hlt
hlt
call
loopne
mov
pop
pop
jmp
sub
call
sub
lcall
xor
jmp
ss
and
ds
jmp
aas
inc
jmp
ds
jmp
aaa
lcall
xor
lcall
sub
call
and
lcall
es
inc
dec
dec
ljmp
ljmp
push
div
stc
stc
stc
sti
sti
sti
std
std
std
cld
cld
cld
sti
sti
sti
cli
cli
cli
push
repnz
div
push
div
stc
stc
stc
push
cmc
cmc
in
in
in
call
aad
decl
cmp
call
and
lcall
sub
jmp
xor
inc
ljmp
inc
dec
pushl
dec
pop
pushl
pop
fs
cmp
cmp
cmp
pushl
push
pushl
push
pop
pushl
dec
push
ljmp
inc
dec
jmp
inc
lcall
xor
lcall
sub
lcall
and
incl
dec
ljmp
fcos
ljmp
push
repnz
div
push
div
clc
clc
clc
push
div
push
cmc
cmc
push
repz
cmc
cmc
push
repz
repz
in
in
in
jmp
jecxz
dec
leave
leave
js
jge
xor
cmp
adc
and
sbb
sub
jmp
xor
inc
jmp
cmp
dec
jmp
aas
inc
jmp
cmp
jmp
cmp
and
lcall
sub
push
and
pushl
cmp
fcomp
fdivr
out
out
icebp
icebp
icebp
push
div
stc
stc
stc
cli
cli
cli
cld
cld
cld
std
std
std
sti
sti
sti
cli
cli
cli
push
div
push
div
clc
clc
clc
push
div
clc
clc
clc
in
in
in
stos
lods
lods
aas
inc
dec
lcall
and
lcall
sub
lcall
xor
jmp
inc
dec
pushl
dec
push
pushl
push
pusha
cmp
ds
inc
push
incl
jl
dec
jae
decl
test
dec
ja
decl
mov
dec
jnp
decl
mov
dec
jnp
decl
mov
dec
jge
incl
add
rolb
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
adcl
dec
jl
decl
mov
dec
js
decl
cmp
outsl
jge
inc
imul
cmp
pushl
pop
ljmp
dec
push
ljmp
inc
dec
jmp
cmp
lcall
es
and
call
pop
mov
loope
jmp
jmp
lock
repz
hlt
hlt
push
div
stc
stc
stc
clc
clc
clc
push
div
push
div
push
cmc
cmc
push
hlt
hlt
push
repnz
jmp
loop
mov
pop
pop
jmp
sub
call
sub
jmp
ss
and
ds
jmp
ds
jmp
ds
jmp
aaa
lcall
xor
lcall
sub
call
and
lcall
and
push
ljmp
fstp
out
out
out
push
repz
cmc
cmc
push
div
sti
sti
sti
cld
cld
cld
std
std
std
sti
sti
sti
sti
sti
sti
push
hlt
hlt
push
div
push
div
stc
stc
stc
push
cmc
cmc
in
in
in
call
aad
decl
cmp
call
and
lcall
sub
jmp
ss
daa
ds
ljmp
dec
pushl
dec
pop
pushl
pop
fs
cmp
cmp
cmp
pushl
pop
pushl
pop
pushl
dec
push
ljmp
inc
dec
jmp
xor
lcall
sub
lcall
and
aas
inc
dec
ljmp
xlat
xlat
call
in
in
push
repz
hlt
hlt
push
div
stc
stc
stc
clc
clc
clc
push
div
push
div
push
cmc
cmc
push
cmc
cmc
push
repnz
in
in
in
jmp
out
dec
int3
int3
jnp
cmp
cmp
call
daa
sub
sbb
xor
inc
jmp
cmp
inc
jmp
ds
jmp
cmp
pop
xor
lcall
sub
push
and
pushl
cmp
xchg
fcomp
fdivr
ljmp
push
cmc
cmc
push
div
cli
cli
cli
cld
cld
cld
std
std
std
sti
sti
sti
sti
sti
sti
push
div
push
div
push
div
push
div
clc
clc
clc
in
in
in
stos
lods
lods
aas
inc
dec
lcall
and
lcall
sub
lcall
xor
jmp
inc
dec
pushl
dec
push
pushl
push
pusha
cmp
ds
inc
push
incl
jl
dec
jae
decl
test
dec
ja
decl
mov
dec
jnp
decl
mov
dec
jnp
decl
mov
dec
jge
incl
add
rolb
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
adcl
dec
jl
decl
mov
dec
js
decl
cmp
outsl
jge
inc
imul
cmp
pushl
pop
ljmp
dec
push
ljmp
inc
dec
jmp
cmp
lcall
es
and
call
pop
mov
ljmp
out
out
out
push
hlt
hlt
push
div
stc
stc
stc
clc
clc
clc
push
div
push
div
push
div
push
div
push
repz
in
in
in
jmp
jecxz
inc
rol
push
pop
pop
jmp
sub
call
sub
jmp
ss
and
cmp
inc
jmp
ds
jmp
aaa
lcall
xor
lcall
sub
call
and
lcall
and
push
ljmp
ljmp
push
cmc
cmc
clc
clc
clc
sti
sti
sti
cld
cld
cld
std
std
std
cld
cld
cld
cli
cli
cli
push
div
clc
clc
clc
push
div
stc
stc
stc
push
cmc
cmc
in
in
in
call
xlat
xlat
decl
cmp
call
and
lcall
cmp
ljmp
dec
pop
pushl
pop
gs
cmp
cmp
cmp
cmp
pushl
dec
push
ljmp
dec
jmp
xor
lcall
sub
lcall
and
dec
jmp
aad
call
ljmp
repz
div
stc
stc
stc
clc
clc
clc
clc
clc
clc
push
div
push
div
push
div
push
repz
lock
call
int
jge
cmp
adc
daa
sub
sbb
xor
inc
jmp
cmp
inc
jmp
ds
jmp
cmp
inc
lcall
xor
lcall
xor
pop
es
push
and
pushl
ds
decl
fcmovu
jmp
out
push
repnz
cmc
cmc
clc
clc
clc
stc
stc
stc
cld
cld
cld
std
std
std
cld
cld
cld
sti
sti
sti
clc
clc
clc
push
div
clc
clc
clc
clc
clc
clc
clc
clc
clc
in
in
in
stos
lods
lods
aas
inc
dec
lcall
and
lcall
sub
lcall
xor
jmp
inc
dec
pushl
dec
push
pushl
push
pusha
cmp
incl
jno
inc
push
incl
jl
dec
jae
decl
test
dec
ja
decl
mov
dec
jnp
decl
mov
dec
jnp
decl
mov
dec
jge
incl
add
rolb
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
adcl
dec
jl
decl
mov
dec
js
decl
cmp
outsl
jge
inc
imul
cmp
pushl
dec
push
ljmp
inc
dec
jmp
cmp
lcall
es
and
call
pop
mov
jmp
jmp
jmp
repz
div
clc
clc
clc
stc
stc
stc
clc
clc
clc
clc
clc
clc
push
div
clc
clc
clc
clc
clc
clc
out
out
out
jmp
jecxz
inc
rol
pop
pop
pop
jmp
sub
call
sub
sbb
xor
inc
jmp
cmp
jmp
ds
jmp
cmp
inc
jmp
ss
lcall
sub
call
and
lcall
and
push
pushl
jmp
jmp
hlt
hlt
hlt
push
cmc
cmc
push
div
sti
sti
sti
cld
cld
cld
cld
cld
cld
cld
cld
cld
push
div
stc
stc
stc
clc
clc
clc
stc
stc
stc
push
div
in
in
in
call
decl
cmp
call
and
xor
and
cmp
ljmp
dec
pop
pushl
pop
addr16
cmp
cmp
push
cmp
cmp
pushl
dec
push
ljmp
dec
jmp
xor
lcall
sub
lcall
and
dec
jmp
rcl
jmp
out
call
ljmp
cmc
cmc
cmc
clc
clc
clc
stc
stc
stc
clc
clc
clc
stc
stc
stc
push
div
push
div
clc
clc
clc
push
repnz
call
int
jg
cmp
cmp
call
and
lcall
xor
and
jmp
inc
jmp
cmp
inc
jmp
ds
jmp
cmp
lcall
xor
lcall
xor
pop
and
and
call
fcmovnu
jmp
repnz
cmc
cmc
push
div
stc
stc
stc
cld
cld
cld
std
std
std
cld
cld
cld
stc
stc
stc
stc
stc
stc
stc
stc
stc
clc
clc
clc
stc
stc
stc
out
out
out
jmp
loopne
ljmp
inc
dec
lcall
and
lcall
sub
lcall
xor
jmp
inc
dec
pushl
dec
push
pushl
push
pusha
cmp
incl
jno
inc
push
incl
jl
dec
jae
decl
test
dec
ja
decl
mov
dec
jnp
decl
mov
dec
jnp
decl
mov
dec
jge
incl
add
rolb
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
adcl
push
jge
decl
mov
dec
js
decl
cmp
outsl
jge
inc
imul
cmp
pushl
dec
push
ljmp
inc
dec
jmp
cmp
lcall
es
and
call
pop
mov
fstp
call
jmp
jmp
push
cmc
cmc
push
div
clc
clc
clc
cld
cld
cld
cli
cli
cli
clc
clc
clc
push
div
push
cmc
cmc
in
in
in
jmp
jecxz
inc
ret
pop
pop
pop
jmp
sub
call
and
lcall
xor
jmp
cmp
jmp
cmp
jmp
cmp
and
xor
call
and
lcall
and
decl
push
pushl
loope
in
in
in
push
hlt
hlt
push
div
clc
clc
clc
cld
cld
cld
cld
cld
cld
std
std
std
std
std
std
sti
sti
sti
sti
sti
sti
stc
stc
stc
stc
stc
stc
push
div
in
in
in
call
decl
cmp
call
and
xor
and
cmp
ljmp
dec
push
pushl
pop
pushl
pop
cmp
cmp
imul
popa
insl
cmp
push
cmp
ss
pusha
pushl
dec
pop
ljmp
inc
jmp
xor
lcall
sub
lcall
and
dec
jmp
rcl
jmp
in
jmp
out
call
lock
hlt
hlt
push
div
clc
clc
clc
cli
cli
cli
stc
stc
stc
stc
stc
stc
push
div
push
div
push
lock
call
int
incl
cmp
call
and
sbb
sub
sbb
xor
and
jmp
inc
jmp
cmp
jmp
cmp
inc
jmp
aaa
lcall
xor
lcall
sub
call
and
call
and
call
fstp
jmp
jmp
repnz
cmc
cmc
clc
clc
clc
cli
cli
cli
cld
cld
cld
std
std
std
std
std
std
cld
cld
cld
cli
cli
cli
cli
cli
cli
stc
stc
stc
stc
stc
stc
out
out
out
stos
lods
lods
aas
inc
dec
lcall
and
lcall
sub
lcall
xor
jmp
inc
dec
pushl
dec
pop
pushl
push
pusha
cmp
incl
jno
inc
push
incl
jl
dec
jae
decl
test
dec
ja
decl
mov
dec
jnp
decl
mov
dec
jnp
decl
mov
dec
jge
incl
add
rolb
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
test
call
decl
mov
dec
js
decl
cmp
jo
incl
ja
ds
cmp
pushl
dec
push
ljmp
inc
dec
jmp
cmp
lcall
daa
sub
and
call
pop
mov
fstp
call
call
out
icebp
icebp
icebp
push
repz
hlt
hlt
push
div
clc
clc
clc
push
div
push
cmc
cmc
push
cmc
cmc
push
repnz
in
in
in
jmp
loope
inc
rol
push
pop
pop
jmp
sub
lcall
daa
sub
sbb
xor
and
cmp
and
notrack
cmp
and
cmp
jmp
xor
lcall
xor
lcall
sub
call
and
lcall
and
decl
push
pushl
loopne
out
out
out
push
cmc
cmc
push
div
stc
stc
stc
cld
cld
cld
std
std
std
std
std
std
std
std
std
cld
cld
cld
sti
sti
sti
stc
stc
stc
cli
cli
cli
push
div
in
in
in
call
xlat
xlat
decl
cmp
lcall
es
sbb
aaa
ljmp
inc
dec
ljmp
dec
push
pushl
pop
pushl
pop
fs
cmp
cmp
insb
cmp
pop
imul
pop
imul
xor
ljmp
dec
jmp
ds
jmp
xor
lcall
sub
lcall
es
inc
dec
dec
jmp
rcl
jmp
in
jmp
out
jmp
out
push
lock
icebp
icebp
push
repz
div
clc
clc
clc
push
div
push
cmc
cmc
push
hlt
hlt
push
repz
out
out
out
jmp
out
dec
int3
int3
jg
cmp
aaa
cmp
adc
and
sbb
sub
sbb
xor
and
cmp
and
aas
jmp
cmp
inc
jmp
aaa
cmp
lcall
sub
call
and
call
and
xor
xchg
xchg
fstp
jmp
jmp
hlt
hlt
hlt
push
div
clc
clc
clc
cli
cli
cli
std
std
std
std
std
std
cld
cld
cld
sti
sti
sti
cli
cli
cli
stc
stc
stc
stc
stc
stc
out
out
out
jmp
loopne
ljmp
inc
dec
lcall
and
lcall
sub
lcall
xor
jmp
inc
dec
pushl
dec
pop
pushl
push
pusha
cmp
incl
jno
inc
push
incl
jl
dec
jae
decl
test
dec
ja
decl
mov
dec
jnp
decl
mov
dec
jnp
decl
mov
dec
jge
incl
add
rolb
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
test
call
decl
mov
dec
js
decl
test
inc
jo
incl
ja
ds
cmp
xor
dec
push
ljmp
inc
dec
jmp
cmp
lcall
daa
sub
and
call
pop
mov
jmp
out
call
call
out
push
lock
repz
div
push
cmc
cmc
push
hlt
hlt
push
repz
repnz
lock
ljmp
mov
pop
pop
jmp
sub
adc
and
pop
and
xor
push
xor
jmp
ss
and
aas
jmp
inc
jmp
cmp
and
lcall
xor
lcall
sub
adc
and
decl
push
pushl
loope
out
out
out
push
div
push
div
sti
sti
sti
cld
cld
cld
std
std
std
std
std
std
sti
sti
sti
push
div
in
in
in
call
xlat
xlat
decl
cmp
sub
sbb
cmp
ljmp
inc
dec
ljmp
dec
push
pushl
pop
pushl
pop
fs
cmp
cmp
insb
cmp
pop
imul
pop
imul
xor
ljmp
push
jmp
ds
jmp
xor
xor
sbb
sub
inc
dec
dec
ljmp
into
into
jmp
in
jmp
out
jmp
out
out
out
out
out
push
repnz
cmc
cmc
push
div
push
cmc
cmc
push
hlt
hlt
push
repnz
repnz
jmp
jmp
in
in
enter
addl
call
and
xor
push
xor
jmp
ss
jmp
cmp
and
inc
jmp
xor
xor
call
and
call
and
aaa
cmp
xchg
fstp
in
in
in
push
cmc
cmc
push
div
cli
cli
cli
sti
sti
sti
std
std
std
std
std
std
std
std
std
sti
sti
sti
stc
stc
stc
out
out
out
jmp
loope
ljmp
inc
dec
lcall
and
lcall
sub
lcall
xor
jmp
inc
dec
pushl
dec
pop
pushl
push
pusha
cmp
incl
jno
inc
push
incl
jl
dec
jae
decl
test
dec
ja
decl
mov
dec
jnp
decl
mov
dec
jnp
decl
mov
dec
jge
incl
add
rolb
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
test
call
decl
mov
dec
jns
decl
test
inc
jo
incl
js
ds
cmp
xor
dec
push
ljmp
inc
dec
jmp
cmp
lcall
daa
sub
and
call
pop
mov
jmp
out
jmp
ljmp
out
out
out
push
repnz
hlt
hlt
push
hlt
hlt
push
repz
in
in
in
in
in
in
out
out
out
call
fstp
mov
pop
pop
jmp
sub
call
push
and
push
and
lcall
sub
lcall
xor
jmp
ss
and
notrack
aaa
notrack
xor
lcall
xor
lcall
sub
lcall
es
adc
and
sbb
daa
decl
pushl
loop
push
lock
stc
stc
stc
cli
cli
cli
cld
cld
cld
cld
cld
cld
std
std
std
std
std
std
push
div
in
in
in
call
xlat
xlat
decl
cmp
sub
sbb
cmp
ljmp
inc
dec
ljmp
dec
push
pushl
pop
cmp
cmp
cmp
bound
cmp
pop
imul
xor
ljmp
push
jmp
ds
jmp
xor
xor
sbb
sub
inc
inc
dec
ljmp
rcl
jmp
in
jmp
out
jmp
out
out
out
out
out
push
icebp
icebp
push
hlt
hlt
push
hlt
hlt
push
repz
out
out
out
jmp
jmp
out
out
out
ljmp
inc
mov
jp
jle
cs
and
pop
and
xor
pop
xor
jmp
ss
jmp
cmp
and
notrack
xor
lcall
sub
call
cmp
cltd
fdivrp
in
in
in
push
div
sti
sti
sti
cld
cld
cld
cld
cld
cld
std
std
std
std
std
std
stc
stc
stc
out
out
out
jmp
loope
ljmp
inc
dec
lcall
and
lcall
sub
lcall
xor
jmp
inc
dec
pushl
dec
pop
pushl
push
pusha
cmp
incl
jno
inc
push
incl
jl
dec
jae
decl
test
dec
ja
decl
mov
dec
jnp
decl
mov
dec
jnp
decl
mov
dec
jge
incl
add
rolb
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
test
call
decl
mov
dec
jns
decl
test
inc
jo
incl
js
ds
cmp
xor
dec
push
ljmp
inc
dec
jmp
cmp
lcall
daa
sub
and
pop
mov
fstp
call
ljmp
out
out
out
in
in
in
push
repnz
hlt
hlt
push
repnz
out
out
out
jmp
in
jmp
in
call
out
fcmovnu
mov
mov
lcall
daa
sub
adc
call
sub
sbb
xor
push
xor
jmp
xor
jmp
xor
cmp
pop
xor
lcall
sub
call
and
and
sbb
and
dec
push
push
pushl
jecxz
out
out
out
sti
sti
sti
sti
sti
sti
cli
cli
cli
cld
cld
cld
std
std
std
push
div
in
in
in
call
xlat
xlat
decl
cmp
sub
sbb
cmp
sub
ljmp
dec
push
pushl
pop
cmp
cmp
imul
popa
outsb
arpl
ds
outsb
cmp
pushl
pop
arpl
xor
ljmp
dec
push
jmp
aas
inc
jmp
xor
xor
sbb
sub
inc
dec
dec
ljmp
rcl
jmp
in
ljmp
out
out
out
out
out
out
push
icebp
icebp
push
hlt
hlt
push
repz
icebp
icebp
jmp
out
jmp
jecxz
jmp
out
jmp
out
jmp
loope
mov
jl
ljmp
xor
and
push
and
lcall
sub
lcall
xor
jmp
ss
jmp
aaa
notrack
ss
pop
xor
lcall
xor
sbb
sub
adc
and
pushl
cmp
lcall
in
in
in
clc
clc
clc
sti
sti
sti
cli
cli
cli
sti
sti
sti
std
std
std
std
std
std
stc
stc
stc
push
lock
loope
ljmp
inc
dec
lcall
and
lcall
sub
lcall
xor
jmp
inc
dec
pushl
dec
pop
pushl
push
pusha
cmp
incl
jno
inc
push
incl
jl
dec
jae
decl
test
dec
ja
decl
mov
dec
jnp
decl
mov
dec
jnp
decl
mov
dec
jge
incl
add
rolb
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
test
call
xchg
decl
mov
dec
jns
decl
test
inc
jo
incl
js
ds
cmp
pushl
dec
push
ljmp
inc
dec
jmp
cmp
lcall
daa
sub
and
pop
mov
fstp
jmp
out
in
in
in
jmp
jmp
out
out
out
in
in
in
push
icebp
icebp
push
repz
repnz
jmp
jmp
out
out
loopne
loopne
in
in
in
in
fcos
mov
mov
push
push
push
lcall
daa
sub
adc
push
call
and
pop
and
das
lcall
xor
lcall
xor
lcall
xor
lcall
sub
lcall
daa
sub
adc
sbb
and
dec
push
push
pushl
jecxz
push
lock
sti
sti
sti
sti
sti
sti
cli
cli
cli
cld
cld
cld
stc
stc
stc
std
std
std
push
div
out
out
out
call
xlat
xlat
decl
ds
lcall
daa
sub
sbb
cmp
sub
pushl
dec
push
pushl
pop
gs
cmp
outsl
aas
fs
bound
cmp
push
cmp
pushl
pop
ljmp
dec
push
ljmp
aas
dec
jmp
xor
xor
sbb
sub
inc
dec
dec
ljmp
rcl
jmp
in
call
in
in
out
out
out
in
in
in
push
lock
repz
repz
in
in
in
jmp
in
jmp
loop
jmp
in
jmp
in
mov
jnp
ljmp
call
sbb
call
and
lcall
xor
push
xor
jmp
xor
jmp
xor
jmp
xor
lcall
xor
lcall
sub
call
and
and
adc
pushl
cmp
call
in
in
in
stc
stc
stc
sti
sti
sti
stc
stc
stc
cld
cld
cld
stc
stc
stc
std
std
std
stc
stc
stc
push
lock
loope
ljmp
inc
dec
lcall
and
lcall
sub
lcall
xor
jmp
inc
dec
pushl
dec
pop
pushl
push
pusha
cmp
incl
jno
inc
push
incl
jl
dec
jae
decl
test
dec
ja
decl
mov
dec
jnp
decl
mov
dec
jnp
decl
mov
dec
jge
incl
add
rolb
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
test
call
xchg
decl
decl
decl
test
inc
jo
incl
js
aas
gs
cmp
pushl
dec
push
ljmp
inc
dec
jmp
cmp
lcall
daa
sub
and
pop
mov
call
ljmp
out
out
out
in
in
in
push
lock
repz
lock
out
out
out
in
in
in
jmp
jmp
in
in
loope
loope
ljmp
push
push
lcall
sbb
call
sbb
call
es
sbb
das
lcall
xor
sbb
xor
sbb
xor
sbb
xor
sbb
sub
call
pop
and
adc
push
call
pop
and
dec
dec
push
pushl
jecxz
push
icebp
icebp
sti
sti
sti
sti
sti
sti
cli
cli
cli
cld
cld
cld
push
div
cld
cld
cld
push
div
out
out
out
call
xlat
xlat
decl
ds
lcall
daa
sub
push
das
xor
ljmp
inc
dec
pushl
dec
push
pushl
pop
addr16
cmp
fs
aas
gs
arpl
cmp
insb
cmp
pushl
pop
ljmp
dec
push
ljmp
inc
dec
jmp
aaa
cmp
lcall
sub
ljmp
sar
in
in
jmp
in
in
out
out
out
out
out
out
push
lock
repz
repnz
lock
in
in
in
in
in
in
jmp
in
jmp
loop
fstp
mov
mov
jbe
jns
sub
xor
adc
sbb
adc
and
push
and
lcall
sub
lcall
xor
sbb
xor
lcall
xor
lcall
sub
lcall
daa
sub
adc
sbb
push
pushl
cmp
xchg
cwtl
cwtl
in
in
in
stc
stc
stc
sti
sti
sti
stc
stc
stc
cld
cld
cld
clc
clc
clc
sti
sti
sti
stc
stc
stc
push
lock
loope
ljmp
inc
dec
lcall
and
lcall
sub
lcall
xor
jmp
inc
dec
pushl
dec
pop
pushl
push
pusha
cmp
incl
jno
inc
push
incl
jl
dec
jae
decl
test
dec
ja
decl
mov
dec
jnp
decl
mov
dec
jnp
decl
mov
dec
jge
incl
add
rolb
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
test
call
xchg
call
decl
decl
test
dec
jno
incl
aas
gs
cmp
pushl
dec
push
ljmp
inc
dec
jmp
cmp
lcall
daa
sub
and
pop
mov
call
jmp
out
out
out
out
out
out
in
in
in
push
icebp
icebp
push
hlt
hlt
push
repnz
repnz
out
out
out
jmp
out
aad
aad
lods
lods
lods
decl
push
lcall
and
or
sbb
call
es
sbb
sub
lcall
sub
lcall
es
pop
and
call
and
decl
sbb
call
sbb
dec
pushl
jecxz
push
icebp
icebp
sti
sti
sti
sti
sti
sti
cli
cli
cli
cld
cld
cld
sti
sti
sti
std
std
std
push
div
out
out
out
fcomp
fdivr
mov
inc
lcall
daa
sub
push
das
xor
ljmp
inc
dec
pushl
dec
push
pushl
pop
addr16
cmp
fs
aas
gs
arpl
cmp
insb
cmp
pushl
pop
ljmp
dec
push
ljmp
inc
dec
jmp
aaa
lcall
sub
ljmp
rcl
jmp
out
jmp
jmp
in
in
in
out
out
out
out
out
out
push
lock
hlt
hlt
push
repz
repnz
lock
ljmp
jmp
loope
fcmovnu
mov
mov
jae
jbe
sub
xor
push
pop
sbb
adc
pop
call
and
pop
and
lcall
sub
lcall
xor
sbb
xor
sbb
das
lcall
daa
sub
push
and
call
pop
and
adc
sbb
pushl
cmp
xchg
xchg
xchg
in
in
in
stc
stc
stc
sti
sti
sti
stc
stc
stc
cld
cld
cld
sti
sti
sti
cld
cld
cld
stc
stc
stc
push
lock
loop
ljmp
inc
dec
lcall
and
lcall
sub
lcall
xor
jmp
inc
dec
pushl
dec
pop
pushl
push
pusha
cmp
incl
jno
inc
push
incl
jl
dec
jae
decl
test
dec
ja
decl
mov
dec
jnp
decl
mov
dec
jnp
decl
mov
dec
jle
incl
add
rolb
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
test
call
xchg
call
decl
decl
test
dec
jno
incl
jp
inc
gs
cmp
pushl
dec
push
ljmp
inc
dec
jmp
inc
lcall
xor
lcall
daa
sub
and
pop
mov
call
in
in
out
out
out
out
out
out
in
in
in
push
icebp
icebp
push
repz
cmc
cmc
push
repz
out
out
out
jmp
in
fstp
aam
aam
stos
stos
stos
decl
push
lcall
and
decl
push
decl
pop
sbb
adc
push
call
push
and
adc
and
call
and
sub
push
and
call
and
adc
sbb
or
sbb
pushl
loop
lock
sti
sti
sti
cld
cld
cld
cli
cli
cli
cld
cld
cld
std
std
std
std
std
std
push
div
out
out
out
fcomp
fdivr
mov
inc
lcall
daa
sub
push
das
jmp
inc
ljmp
inc
dec
pushl
dec
push
pushl
push
popa
cmp
arpl
inc
data16
aas
gs
arpl
cmp
insb
cmp
pushl
pop
ljmp
dec
push
ljmp
inc
dec
jmp
aaa
lcall
sub
ljmp
rcl
jmp
in
in
in
in
in
in
in
push
lock
out
out
out
push
lock
repz
hlt
hlt
push
repz
icebp
icebp
ljmp
jmp
loope
fcmovu
mov
mov
jo
jae
sub
pop
decl
sbb
call
sbb
call
and
lcall
es
sbb
sub
sbb
sub
sbb
sub
push
and
call
and
adc
decl
sbb
decl
push
sbb
xor
aaa
call
in
in
in
stc
stc
stc
std
std
std
cli
cli
cli
sti
sti
sti
std
std
std
std
std
std
stc
stc
stc
push
lock
loop
ljmp
inc
dec
lcall
and
lcall
sub
lcall
xor
jmp
inc
dec
pushl
dec
pop
pushl
push
pusha
cmp
incl
jno
inc
push
incl
jl
dec
jae
decl
test
dec
ja
decl
mov
dec
jnp
decl
mov
dec
jnp
decl
mov
dec
jle
incl
add
rolb
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
xchg
call
xchg
call
xchg
decl
mov
dec
ja
decl
cmp
insb
jp
inc
gs
cmp
pushl
push
popa
ljmp
dec
push
ljmp
inc
dec
jmp
inc
lcall
xor
lcall
daa
sub
and
decl
pushl
fstp
call
in
in
push
repz
out
out
out
out
out
out
push
icebp
icebp
push
repz
clc
clc
clc
push
repz
in
in
in
call
loop
fcmovnu
aam
aam
test
test
lcall
push
and
or
adc
or
pop
sbb
adc
push
call
sbb
and
adc
and
adc
and
adc
and
adc
call
sbb
decl
adc
incl
dec
pushl
jecxz
out
out
out
sti
sti
sti
cld
cld
cld
cld
cld
cld
std
std
std
push
div
out
out
out
fcomp
fdivr
mov
inc
lcall
daa
sub
push
das
jmp
inc
dec
pushl
dec
pop
pushl
push
popa
cmp
arpl
aas
gs
inc
addr16
aas
gs
cmp
pop
pushl
push
pop
ljmp
dec
push
ljmp
inc
dec
jmp
aaa
lcall
daa
sub
cmp
inc
lcall
rcl
jmp
in
in
in
in
push
lock
out
out
out
out
out
out
push
icebp
icebp
push
repz
div
push
hlt
hlt
push
icebp
icebp
jmp
jecxz
fdivrp
fcmovu
mov
mov
insl
outsb
outsl
jmp
sub
decl
sbb
adc
call
pop
and
adc
and
call
and
call
pop
and
adc
decl
sbb
decl
adc
pushl
xor
call
in
in
in
stc
stc
stc
std
std
std
cld
cld
cld
std
std
std
std
std
std
stc
stc
stc
push
lock
loop
ljmp
inc
dec
lcall
and
lcall
sub
lcall
xor
jmp
inc
dec
pushl
dec
push
pushl
push
pusha
cmp
ds
inc
push
incl
jl
dec
jae
decl
test
dec
ja
decl
mov
dec
jnp
decl
mov
dec
jl
decl
mov
dec
jle
incl
add
rolb
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
xchg
call
xchg
call
xchg
decl
decl
decl
cmp
inc
data16
cmp
pushl
push
popa
pushl
dec
push
ljmp
inc
dec
jmp
inc
lcall
xor
lcall
daa
sub
pop
sub
jmp
call
jmp
push
repnz
out
out
out
in
in
in
push
icebp
icebp
push
repz
clc
clc
clc
push
repnz
out
out
out
jmp
out
fdivrp
fcos
aad
aad
test
dec
dec
lcall
sbb
decl
push
adc
or
adc
or
push
decl
push
sbb
prefetcht2
call
sbb
call
sbb
decl
pop
sbb
push
push
sbb
or
adc
call
push
sbb
inc
inc
dec
pushl
jecxz
push
lock
clc
clc
clc
cli
cli
cli
sti
sti
sti
cld
cld
cld
std
std
std
push
div
out
out
out
fcomp
fdivr
mov
inc
lcall
sub
jmp
inc
dec
pushl
dec
pop
pushl
push
popa
cmp
arpl
aas
gs
inc
addr16
aas
gs
cmp
pop
pushl
push
pop
ljmp
dec
push
ljmp
inc
dec
jmp
cmp
lcall
daa
sub
ss
decl
into
into
jmp
jecxz
jmp
jmp
out
out
out
out
out
out
out
out
out
push
lock
repz
div
push
hlt
hlt
push
lock
call
fstp
fcmovu
mov
mov
push
insb
jmp
movups
or
adc
decl
sbb
call
sbb
call
sbb
and
adc
and
adc
sbb
decl
adc
or
adc
xor
call
in
in
in
push
div
stc
stc
stc
cli
cli
cli
cld
cld
cld
std
std
std
std
std
std
stc
stc
stc
push
lock
loope
ljmp
inc
dec
lcall
and
lcall
sub
lcall
xor
jmp
inc
dec
pushl
dec
push
pushl
push
pusha
cmp
ds
inc
push
incl
jl
dec
jae
decl
test
dec
ja
decl
mov
dec
jl
decl
mov
dec
jle
decl
call
incl
add
rolb
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
xchg
call
xchg
call
xchg
decl
decl
decl
cmp
inc
data16
cmp
imul
push
pushl
dec
push
ljmp
inc
dec
jmp
inc
lcall
xor
lcall
sub
cmp
lcall
aam
jmp
out
in
in
in
out
out
out
in
in
in
ljmp
push
repnz
div
push
repz
out
out
out
jmp
out
fcomp
fdivr
fcmovnu
fcomp
fdivr
stos
stos
stos
decl
dec
call
sbb
incl
or
decl
push
ud0
adc
decl
adc
or
push
decl
push
sbb
or
adc
push
decl
adc
or
adc
or
adc
pushl
jecxz
out
out
out
push
cmc
cmc
clc
clc
clc
stc
stc
stc
sti
sti
sti
sti
sti
sti
cld
cld
cld
push
div
out
out
out
call
xlat
xlat
decl
ds
lcall
sub
jmp
inc
dec
pushl
dec
push
pushl
push
popa
cmp
arpl
aas
gs
inc
addr16
aas
fs
cmp
pop
pushl
push
pop
ljmp
dec
push
ljmp
inc
dec
jmp
cmp
lcall
es
xor
cmp
jb
ja
aam
aam
loope
loope
jmp
jmp
in
in
in
out
out
out
in
in
in
in
in
in
push
repnz
cmc
cmc
push
hlt
hlt
push
icebp
icebp
jmp
fcomp
fdivr
fdivr
mov
imul
or
adc
or
adc
or
push
sbb
push
sbb
decl
sbb
decl
sbb
decl
sbb
decl
push
sbb
or
adc
decl
movups
or
adc
xor
call
loopne
in
in
in
push
hlt
hlt
push
div
stc
stc
stc
cli
cli
cli
sti
sti
sti
cld
cld
cld
std
std
std
stc
stc
stc
push
lock
loope
ljmp
inc
dec
lcall
and
lcall
sub
lcall
xor
jmp
inc
dec
pushl
dec
pop
pushl
push
cmp
ds
inc
imul
jo
decl
cmp
jbe
decl
mov
dec
jp
decl
mov
dec
jge
call
decl
call
nop
incl
add
rolb
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
xchg
call
xchg
call
xchg
decl
decl
decl
cmp
insl
jl
inc
data16
cmp
imul
push
pushl
dec
push
ljmp
inc
dec
jmp
inc
lcall
xor
lcall
sub
pushl
cmp
xchg
sar
out
out
in
in
in
out
out
out
ljmp
push
lock
repnz
hlt
hlt
push
hlt
hlt
push
lock
loop
fcomp
fdivr
fstp
fstp
mov
mov
dec
dec
dec
lcall
sbb
incl
or
or
call
adc
sbb
adc
sbb
unpckhps
decl
adc
decl
adc
decl
push
adc
or
or
adc
sbb
dec
dec
dec
mov
in
out
out
out
push
hlt
hlt
push
div
clc
clc
clc
cli
cli
cli
clc
clc
clc
sti
sti
sti
std
std
std
push
div
out
out
out
call
xlat
xlat
decl
ds
lcall
sub
jmp
inc
dec
pushl
dec
push
pushl
push
popa
cmp
cmp
gs
inc
data16
aas
fs
cmp
pop
pushw
dec
push
ljmp
inc
dec
jmp
cmp
lcall
daa
sub
daa
xor
dec
int3
int3
jmp
loope
ljmp
in
in
in
jmp
in
jmp
jmp
icebp
icebp
icebp
push
hlt
hlt
push
hlt
hlt
push
repnz
out
call
xlat
xlat
fcmovnu
loopne
loopne
ljmp
imul
sub
incl
or
or
adc
call
sbb
call
sbb
adc
sbb
adc
sbb
or
push
decl
adc
or
adc
or
adc
pop
or
decl
ss
lcall
loopne
out
out
out
push
repz
cmc
cmc
push
div
cli
cli
cli
clc
clc
clc
cli
cli
cli
std
std
std
stc
stc
stc
push
lock
loope
ljmp
inc
dec
lcall
and
lcall
sub
lcall
xor
jmp
inc
dec
pushl
dec
pop
pushl
push
cmp
ds
inc
imul
jo
decl
cmp
jbe
decl
mov
dec
jnp
decl
mov
dec
jge
call
decl
mov
push
adcb
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
xchg
call
xchg
call
xchg
decl
mov
dec
jp
decl
test
inc
jo
incl
jbe
cmp
imul
push
pushl
dec
pop
ljmp
inc
dec
jmp
inc
lcall
xor
lcall
sub
pushl
cmp
test
iret
jmp
out
in
in
in
out
out
out
jmp
call
icebp
icebp
push
hlt
hlt
push
hlt
hlt
push
lock
ljmp
jmp
loope
jmp
loop
inc
rol
pop
pop
pop
ljmp
sub
lcall
pop
lcall
and
jmp
es
ljmp
cs
pushl
xor
ljmp
xor
and
sub
sbb
and
adc
sbb
unpcklps
incl
or
adc
sub
push
into
into
jmp
out
out
out
out
push
hlt
hlt
push
hlt
hlt
push
repnz
clc
clc
clc
push
repz
cld
cld
cld
std
std
std
push
div
in
in
in
call
xlat
xlat
decl
ds
lcall
sub
push
xor
jmp
inc
ljmp
inc
dec
pushl
dec
push
pushl
push
pusha
cmp
cmp
gs
inc
data16
aas
fs
cmp
pop
pushw
dec
push
ljmp
inc
dec
jmp
cmp
lcall
and
xor
pop
arpl
leave
lret
ljmp
in
in
in
fdivrp
in
in
out
out
out
push
hlt
hlt
push
cmc
cmc
push
icebp
icebp
in
in
in
loopne
loopne
in
in
into
into
into
jle
jg
xor
lcall
and
jmp
and
das
pushl
xor
ljmp
xor
jmp
sub
call
sbb
decl
adc
pop
or
lcall
and
decl
push
mov
jecxz
out
out
out
push
repz
hlt
hlt
push
repnz
cmc
cmc
push
repz
cld
cld
cld
std
std
std
stc
stc
stc
out
out
out
jmp
loope
ljmp
inc
dec
lcall
and
lcall
sub
lcall
xor
jmp
inc
dec
pushl
dec
pop
pushl
push
cmp
ds
inc
push
incl
jge
dec
jae
decl
xchg
dec
jns
decl
decl
mov
dec
jle
decl
mov
push
adcl
rolb
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
mov
call
call
xchg
decl
mov
dec
jnp
decl
test
inc
jno
incl
ja
cmp
insb
pushl
push
pushl
dec
pop
ljmp
inc
dec
jmp
xor
lcall
sub
lcall
es
ss
xchg
dec
iret
iret
jmp
in
jmp
jmp
out
out
out
ljmp
jmp
loopne
push
repnz
hlt
hlt
push
cmc
cmc
push
repz
out
out
out
jmp
jmp
out
out
out
out
rcl
sar
xchg
xchg
xchg
decl
push
decl
dec
decl
dec
lcall
pop
ljmp
imul
jno
jmp
arpl
dec
push
push
pushl
cmp
ljmp
sub
sbb
call
adc
push
lcall
and
decl
ljmp
fcmovu
call
icebp
icebp
push
hlt
hlt
push
div
push
cmc
cmc
push
icebp
icebp
push
hlt
hlt
std
std
std
std
std
std
std
std
std
std
std
std
push
div
in
in
in
call
xlat
xlat
decl
ds
lcall
sub
push
xor
jmp
inc
ljmp
inc
dec
pushl
dec
push
pushl
push
pusha
cmp
cmp
insb
aas
fs
aas
gs
aas
arpl
cmp
insb
cmp
pushl
dec
push
ljmp
inc
dec
jmp
cmp
sbb
daa
sub
sub
cmp
imul
fdivrp
ljmp
in
in
in
jmp
loope
fdivr
lock
hlt
hlt
push
cmc
cmc
push
hlt
hlt
out
out
out
jmp
jmp
jmp
call
fcos
stos
stos
stos
lcall
incl
dec
decl
dec
call
push
jmp
ljmp
jno
imul
cmp
das
xor
push
and
call
pop
sbb
adc
sbb
call
aam
jmp
in
push
lock
repz
div
push
div
push
repnz
repz
cld
cld
cld
std
std
std
std
std
std
stc
stc
stc
out
out
out
jmp
loope
ljmp
inc
dec
lcall
and
lcall
sub
jmp
xor
jmp
inc
dec
pushl
dec
pop
pushl
push
cmp
aas
gs
inc
push
incl
jge
dec
jae
decl
test
dec
jns
decl
mov
dec
jl
call
call
call
call
incl
add
rolb
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
mov
call
call
xchg
call
decl
mov
dec
jbe
incl
cmp
imul
bound
aaa
pop
pushl
dec
pop
ljmp
dec
jmp
xor
lcall
sub
lcall
inc
inc
call
rcl
jmp
jecxz
ljmp
in
in
in
jecxz
jecxz
repnz
div
stc
stc
stc
push
div
push
repnz
icebp
icebp
in
in
in
in
in
in
jmp
loopne
dec
lret
lret
ljmp
mov
pushl
scas
scas
jmp
mov
test
jbe
js
jbe
ja
dec
dec
dec
ljmp
xor
lcall
and
pushl
cmp
call
rcl
in
in
in
push
repz
div
stc
stc
stc
sti
sti
sti
sti
sti
sti
sti
sti
sti
std
std
std
std
std
std
std
std
std
cli
cli
cli
push
cmc
cmc
in
in
in
call
xlat
xlat
decl
ds
lcall
daa
sub
push
das
xor
ljmp
inc
dec
pushl
dec
push
pushl
pop
data16
cmp
imul
arpl
aas
fs
arpl
cmp
imul
pop
pushw
pop
ljmp
dec
push
ljmp
inc
dec
jmp
cmp
lcall
daa
sub
xor
cmp
jne
jp
lret
int3
int3
fdivrp
call
in
in
in
in
in
jmp
out
lock
cmc
cmc
stc
stc
stc
push
div
push
repz
icebp
icebp
out
out
out
in
in
in
jmp
jecxz
call
aam
pushl
scas
scas
pushl
lods
lods
ljmp
movsb
movsb
call
ja
incl
push
push
pushl
cmp
jmp
and
lcall
pop
ljmp
das
xor
outsb
outsl
outsl
inc
mov
call
repnz
div
stc
stc
stc
cli
cli
cli
sti
sti
sti
cli
cli
cli
cld
cld
cld
std
std
std
std
std
std
cld
cld
cld
push
div
push
lock
loope
ljmp
inc
dec
lcall
and
das
jmp
xor
jmp
inc
dec
pushl
dec
push
pushl
push
cmp
incl
jno
inc
imul
dec
jae
decl
decl
decl
mov
dec
jl
call
call
call
call
xchg
incl
add
rolb
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
mov
call
call
xchg
call
nop
decl
decl
xchg
inc
jno
incl
jns
arpl
cmp
pushl
dec
pop
ljmp
dec
jmp
cmp
lcall
xor
lcall
sub
lcall
inc
inc
call
aad
fdivrp
jmp
jmp
out
out
out
in
in
in
jmp
loop
in
in
in
push
repnz
div
stc
stc
stc
push
div
push
cmc
cmc
push
hlt
hlt
push
repnz
lock
ljmp
fcmovu
xlat
xlat
xlat
call
rcl
call
rcl
inc
mov
jmp
rol
cmpsl
cmpsl
cmpsl
jmp
decw
push
ljmp
sub
xor
pop
pop
pop
pushl
rcl
jmp
in
push
lock
stc
stc
stc
sti
sti
sti
sti
sti
sti
sti
sti
sti
cld
cld
cld
std
std
std
std
std
std
cld
cld
cld
cli
cli
cli
push
cmc
cmc
in
in
in
call
xlat
xlat
decl
ds
lcall
daa
sub
push
das
xor
ljmp
inc
dec
ljmp
dec
push
pushl
pop
data16
cmp
imul
arpl
aas
fs
arpl
cmp
imul
pop
pushl
pop
ljmp
dec
push
ljmp
inc
dec
jmp
cmp
lcall
sub
xor
pushl
jl
enter
in
in
in
jmp
jmp
in
in
in
jmp
out
call
lock
cmc
cmc
stc
stc
stc
clc
clc
clc
push
div
push
cmc
cmc
push
repz
lock
in
in
in
jmp
in
fstp
xlat
xlat
xlat
call
rcl
call
dec
enter
lret
test
test
mov
mov
mov
jb
lcall
pop
pushl
xor
ljmp
dec
dec
lcall
int
jmp
loope
in
in
in
push
div
sti
sti
sti
sti
sti
sti
sti
sti
sti
cld
cld
cld
std
std
std
std
std
std
std
std
std
sti
sti
sti
push
div
push
lock
loope
ljmp
inc
dec
lcall
and
lcall
sub
jmp
xor
jmp
inc
dec
pushl
dec
pop
pushl
push
cmp
aas
gs
inc
push
incl
jl
dec
jae
decl
test
dec
js
decl
mov
dec
jl
call
call
call
xchg
call
xchg
incl
add
rolb
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
mov
call
call
xchg
call
nop
decl
decl
xchg
inc
jb
incl
jns
ds
cmp
pushl
push
pop
ljmp
dec
jmp
cmp
jmp
xor
lcall
sub
lcall
sub
cmp
decl
into
into
fstp
lock
out
out
out
ljmp
push
lock
hlt
hlt
push
div
stc
stc
stc
clc
clc
clc
push
div
push
div
push
div
push
hlt
hlt
out
out
out
jmp
out
jmp
loop
fdivrp
loop
loop
rcl
sar
int
int
rcl
sar
enter
addb
call
push
cmp
call
push
decl
mov
jmp
out
push
repnz
cld
cld
cld
std
std
std
std
std
std
cld
cld
cld
cli
cli
cli
push
cmc
cmc
in
in
in
call
xlat
xlat
decl
ds
lcall
daa
sub
sbb
cmp
ljmp
inc
dec
ljmp
dec
push
pushl
pop
cmp
cmp
imul
popa
insl
aas
arpl
cmp
pop
push
aaa
pop
pushl
pop
ljmp
dec
push
ljmp
inc
dec
jmp
aaa
aas
lcall
daa
sub
das
cmp
imul
vshufps
push
hlt
hlt
in
in
in
in
in
in
jmp
out
in
in
in
push
repz
div
clc
clc
clc
stc
stc
stc
push
div
push
div
push
div
push
div
push
lock
ljmp
jmp
in
fdivrp
in
in
xlat
xlat
xlat
call
rcl
inc
mov
decl
jnp
lcall
pop
cmp
inc
inc
pushl
js
rol
fcomp
fdivr
loop
loop
lock
stc
stc
stc
std
std
std
std
std
std
std
std
std
sti
sti
sti
push
div
push
lock
loope
ljmp
inc
dec
call
and
lcall
sub
jmp
xor
jmp
inc
dec
pushl
dec
push
pushl
push
pusha
cmp
aas
arpl
inc
imul
dec
jb
decl
test
dec
js
decl
mov
dec
jl
call
xchg
call
xchg
call
xchg
call
xchg
incl
add
rolb
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
mov
push
xchg
call
nop
decl
decl
xchg
dec
jae
incl
ds
cmp
pushl
push
pop
ljmp
push
jmp
cmp
cmp
sbb
lcall
and
ds
jg
cmp
int3
int3
fstp
in
in
in
out
out
out
ljmp
push
lock
hlt
hlt
stc
stc
stc
stc
stc
stc
push
div
stc
stc
stc
push
div
push
div
cli
cli
cli
push
repz
out
out
out
in
in
in
jmp
jmp
in
in
call
fcos
iret
iret
iret
mov
xchg
xchg
pushl
decl
dec
decl
dec
incl
scas
scas
dec
lret
fstp
out
out
repnz
sti
sti
sti
cld
cld
cld
cli
cli
cli
push
cmc
cmc
in
in
in
call
xlat
xlat
incl
cmp
sub
sbb
cmp
ljmp
inc
dec
ljmp
dec
push
pushl
pop
pushl
push
arpl
cmp
cmp
imul
popa
insb
cmp
insb
cmp
pushl
push
pushl
push
pop
ljmp
dec
push
ljmp
inc
dec
jmp
aaa
lcall
es
sub
lcall
arpl
rol
call
push
repnz
jmp
jmp
in
in
in
jmp
out
in
in
in
push
hlt
hlt
push
div
stc
stc
stc
stc
stc
stc
clc
clc
clc
push
div
push
div
cli
cli
cli
push
cmc
cmc
push
lock
in
in
in
in
in
in
jmp
out
call
fstp
enter
mov
pushf
jge
jle
push
push
push
incl
inc
pushl
jb
movsl
movsl
cmpsb
inc
ret
fcmovu
loope
loope
out
out
out
clc
clc
clc
std
std
std
sti
sti
sti
push
div
push
lock
loope
ljmp
inc
inc
lcall
and
lcall
sub
jmp
xor
jmp
inc
dec
pushl
dec
push
pushl
pop
addr16
bound
inc
push
jp
dec
je
decl
test
dec
jns
decl
mov
push
jle
call
xchg
call
xchg
call
xchg
call
xchg
incl
add
rolb
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
mov
push
xchg
call
xchg
decl
decl
decl
cmp
aas
gs
cmp
pushl
push
pop
ljmp
push
jmp
ds
jmp
xor
lcall
sub
call
and
cs
ja
jnp
leave
leave
leave
call
lock
ljmp
push
icebp
icebp
push
cmc
cmc
stc
stc
stc
clc
clc
clc
push
div
push
div
push
div
push
div
push
div
push
div
push
hlt
hlt
push
repnz
out
out
out
jmp
call
fcos
aad
aad
jmp
lea
cmp
cmp
push
push
push
call
mov
enter
fdivr
out
out
icebp
icebp
icebp
cli
cli
cli
std
std
std
cli
cli
cli
push
div
in
in
in
call
xlat
xlat
incl
cmp
call
es
sbb
xor
and
ljmp
inc
dec
ljmp
dec
push
pushl
push
pop
pushl
push
popa
cmp
cmp
imul
pusha
insb
cmp
cmp
ss
pushl
push
pop
ljmp
inc
dec
jmp
aaa
cmp
call
and
das
call
pop
mov
jmp
in
in
in
in
in
in
in
jmp
in
in
in
in
push
cmc
cmc
push
div
clc
clc
clc
push
div
push
div
push
div
push
div
push
div
stc
stc
stc
push
cmc
cmc
push
repz
out
out
out
ljmp
jmp
loopne
fcos
mov
pushl
xchg
xchg
ljmp
imul
cmp
incl
inc
jle
jg
mov
rol
aad
aad
loope
loope
out
out
out
push
div
std
std
std
cld
cld
cld
clc
clc
clc
out
out
out
jmp
loope
ljmp
inc
inc
call
and
lcall
sub
lcall
xor
jmp
inc
dec
pushl
dec
push
pushl
pop
imul
inc
push
incl
jge
dec
jae
decl
xchg
dec
jns
decl
mov
dec
jle
call
xchg
call
xchg
call
xchg
call
incl
add
rolb
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
mov
push
mov
call
xchg
decl
decl
decl
cmp
aas
fs
cmp
pushl
push
pop
ljmp
push
jmp
ds
jmp
xor
lcall
sub
call
and
pushl
jns
lret
jmp
in
in
in
in
push
lock
in
in
in
jmp
jecxz
push
icebp
icebp
push
cmc
cmc
stc
stc
stc
push
div
push
cmc
cmc
push
repnz
repnz
repnz
hlt
hlt
push
hlt
hlt
push
icebp
icebp
push
lock
in
in
in
jmp
jmp
call
fcmovu
call
aad
mov
jbe
decl
dec
ljmp
sub
decl
dec
call
mov
mov
jmp
in
push
icebp
icebp
stc
stc
stc
std
std
std
cld
cld
cld
std
std
std
std
std
std
push
div
in
in
in
call
xlat
xlat
incl
cmp
call
and
lcall
cmp
daa
aas
inc
ljmp
dec
pushl
dec
pop
pushl
pop
fs
cmp
cmp
cmp
cmp
pushl
push
pop
ljmp
aas
inc
jmp
ss
call
and
jmp
sub
call
pop
mov
ljmp
out
out
out
jmp
jecxz
in
in
in
push
cmc
cmc
push
div
push
div
push
div
push
repnz
repz
repz
repz
repz
repnz
icebp
icebp
out
out
out
jmp
jmp
in
in
jecxz
jecxz
fcos
ret
decl
push
push
cmp
cmp
sub
sub
ds
jle
jg
mov
mov
mov
enter
in
in
in
push
div
std
std
std
std
std
std
std
std
std
std
std
std
stc
stc
stc
out
out
out
jmp
loope
ljmp
inc
dec
call
and
lcall
sub
lcall
xor
jmp
inc
ljmp
inc
dec
ljmp
dec
push
pushl
pop
addr16
cmp
push
jnp
inc
jb
decl
test
dec
js
decl
mov
dec
jge
decl
mov
push
adcb
push
test
rolb
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
mov
push
mov
call
xchg
decl
decl
decl
cmp
aas
fs
cmp
xor
ljmp
push
jmp
ds
jmp
xor
lcall
sub
call
and
pushl
cmp
jle
cmp
out
out
in
in
in
push
icebp
icebp
in
in
in
jmp
in
push
repnz
div
push
div
push
cmc
cmc
push
repnz
out
out
out
jmp
out
in
in
in
out
out
out
in
in
in
jmp
jmp
call
out
jmp
out
jmp
out
fdivr
aad
aad
mov
arpl
sub
sub
sbb
sbb
and
and
inc
inc
inc
decl
mov
ljmp
mov
loope
out
out
out
clc
clc
clc
cli
cli
cli
cld
cld
cld
cld
cld
cld
std
std
std
push
div
in
in
in
call
incl
cmp
call
and
lcall
sub
jmp
xor
jmp
cmp
dec
pushl
dec
push
pushl
pop
pushl
push
cmp
cmp
cmp
pushl
pop
arpl
xor
dec
push
ljmp
push
jmp
ds
jmp
xor
xor
sbb
xor
pop
pop
pusha
inc
loopne
loopne
jmp
jmp
icebp
icebp
icebp
out
out
out
jmp
in
out
out
out
push
cmc
cmc
push
div
push
cmc
cmc
push
hlt
hlt
push
icebp
icebp
jmp
out
jmp
jmp
out
out
out
out
out
out
in
in
in
call
call
call
jmp
in
fcomp
fdivr
ret
ret
ret
jle
jg
xor
xor
sbb
sbb
sbb
sbb
aaa
aaa
aaa
jns
jp
stos
stos
stos
pushl
mov
fcmovu
jmp
jmp
cmc
cmc
cmc
sti
sti
sti
sti
sti
sti
cld
cld
cld
cld
cld
cld
stc
stc
stc
out
out
out
jmp
loopne
ljmp
inc
dec
call
and
lcall
sub
lcall
xor
jmp
inc
ljmp
inc
dec
ljmp
dec
push
pushl
pop
cmp
cmp
insb
incl
jae
inc
imul
jo
decl
cmp
ja
decl
decl
mov
push
jg
call
nop
call
xchg
call
xchg
incl
add
rolb
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
mov
push
mov
call
xchg
decl
decl
decl
cmp
outsb
jnp
inc
gs
cmp
xor
pop
ljmp
ds
jmp
xor
lcall
sub
lcall
sub
cmp
inc
call
aad
jmp
out
in
in
in
push
icebp
icebp
out
out
out
jmp
out
push
repnz
cmc
cmc
push
hlt
hlt
push
icebp
icebp
jmp
jmp
call
loopne
call
out
jmp
jecxz
jmp
loope
fstp
jecxz
jecxz
fdivr
rcl
sar
jmp
push
decl
or
lcall
ds
cltd
incl
movsb
fcmovnu
out
out
out
push
div
cli
cli
cli
sti
sti
sti
sti
sti
sti
cld
cld
cld
push
div
in
in
in
call
incl
cmp
call
and
lcall
sub
jmp
xor
jmp
inc
dec
ljmp
dec
push
pushl
push
pop
pushl
pop
arpl
aaa
pop
pushl
pop
arpl
xor
push
pop
pushl
dec
push
ljmp
inc
dec
jmp
cmp
cmp
sbb
daa
sub
das
aaa
cmp
insb
jo
call
rcl
jmp
loop
jmp
lock
icebp
icebp
jmp
out
out
out
out
push
hlt
hlt
push
cmc
cmc
push
repnz
in
in
in
call
loope
jmp
in
jmp
out
jmp
jecxz
jmp
loop
fstp
fcmovnu
in
in
aad
aad
mov
mov
xor
xor
adc
adc
adc
xor
pushl
lcall
mov
call
rcl
ljmp
sti
sti
sti
sti
sti
sti
sti
sti
sti
cld
cld
cld
stc
stc
stc
out
out
out
stos
lods
lods
aas
inc
dec
call
and
lcall
sub
lcall
xor
jmp
inc
ljmp
inc
dec
ljmp
dec
push
pushl
pop
cmp
cmp
aas
fs
inc
imul
dec
jb
decl
test
dec
js
decl
call
nop
call
xchg
call
xchg
call
xchg
incl
add
rolb
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
mov
push
mov
call
xchg
call
xchg
decl
decl
cmp
insl
jl
inc
gs
cmp
pushl
pop
ljmp
dec
push
jmp
ds
jmp
xor
lcall
sub
jmp
sub
incl
dec
jmp
fcmovu
ljmp
push
icebp
icebp
push
lock
out
out
out
push
repz
cmc
cmc
push
hlt
hlt
out
out
out
fdivrp
rcl
sar
aam
aam
xlat
xlat
xlat
dec
enter
pushl
scas
scas
dec
int3
int3
fcomp
fdivr
fcos
in
in
into
into
into
inc
mov
jg
cmp
sub
call
and
cmp
mov
lcall
pop
decl
aad
in
in
in
push
cmc
cmc
cli
cli
cli
sti
sti
sti
cli
cli
cli
cld
cld
cld
sti
sti
sti
push
div
in
in
in
call
aad
incl
cmp
lcall
sub
lcall
xor
jmp
inc
ljmp
inc
dec
ljmp
dec
push
pushl
dec
pop
pushl
pop
pushl
pop
arpl
ss
popa
pushl
push
pop
ljmp
dec
push
ljmp
inc
dec
jmp
xor
lcall
xor
sbb
sub
xor
mov
jmp
out
jmp
jmp
cmc
cmc
cmc
push
repnz
in
in
in
push
repnz
cmc
cmc
push
cmc
cmc
push
repnz
in
call
aam
call
rcl
fcos
lret
lret
lret
dec
leave
leave
dec
enter
lods
lods
inc
ret
xlat
xlat
xlat
call
jmp
loop
call
rcl
dec
int
lcall
cmp
lcall
sbb
lcall
sbb
xor
jae
call
pop
pop
pushl
js
mov
call
cli
cli
cli
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
std
std
std
stc
stc
stc
out
out
out
fdivrp
stos
lods
lods
cmp
and
lcall
sub
jmp
cmp
ljmp
inc
dec
ljmp
push
pop
pushl
pop
arpl
cmp
aas
fs
inc
push
jl
inc
jno
decl
cmp
ja
decl
mov
push
adcb
push
test
incl
add
rolb
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
mov
push
mov
call
xchg
call
xchg
decl
mov
dec
jne
incl
incl
jae
cmp
pushl
dec
push
jmp
ds
jmp
xor
lcall
sub
jmp
cs
dec
push
push
pushl
loopne
jmp
jmp
lock
repz
hlt
hlt
push
cmc
cmc
push
hlt
hlt
push
div
push
repz
repnz
jecxz
call
xlat
xlat
jmp
jecxz
call
aad
pushl
movsl
movsl
lcall
pop
lcall
jmp
rcl
call
aam
call
int3
int3
inc
mov
incl
inc
ljmp
sub
ss
dec
jg
cmp
jp
decl
jle
jg
rcl
sar
jmp
jmp
hlt
hlt
hlt
cli
cli
cli
sti
sti
sti
cld
cld
cld
cld
cld
cld
stc
stc
stc
sti
sti
sti
clc
clc
clc
push
cmc
cmc
jmp
jmp
rcl
sar
test
cmp
lcall
sub
lcall
xor
jmp
cmp
ljmp
inc
inc
ljmp
dec
ljmp
dec
push
pushl
dec
pop
pushl
push
pop
pushl
push
pop
pushl
dec
pop
ljmp
dec
push
ljmp
inc
dec
jmp
cmp
and
cmp
sbb
xor
sbb
inc
lcall
xlat
jmp
lock
icebp
icebp
push
repnz
hlt
hlt
push
hlt
hlt
push
div
push
cmc
cmc
push
repz
jmp
jmp
fcomp
fdivr
loop
loop
fdivr
rol
lcall
jge
call
push
incl
lret
fcos
fdivrp
iret
iret
iret
dec
into
into
ljmp
push
ljmp
xor
incl
inc
ljmp
jo
lea
dec
ljmp
push
rol
jmp
out
push
icebp
icebp
cli
cli
cli
sti
sti
sti
sti
sti
sti
cld
cld
cld
clc
clc
clc
std
std
std
cld
cld
cld
stc
stc
stc
push
div
in
in
in
fstp
cmpsl
test
inc
call
and
lcall
daa
sub
jmp
aaa
ljmp
inc
dec
ljmp
push
pop
pushl
push
popa
cmp
arpl
inc
push
jp
inc
jno
decl
cmp
jns
decl
mov
dec
jg
call
xchg
call
xchg
call
incl
add
rolb
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
mov
push
mov
call
xchg
call
xchg
decl
mov
dec
jbe
incl
incl
jae
cmp
pushl
dec
push
ljmp
aas
inc
jmp
xor
lcall
sub
jmp
xor
push
push
pop
mov
in
out
out
out
push
cmc
cmc
push
div
push
cmc
cmc
push
div
clc
clc
clc
clc
clc
clc
push
cmc
cmc
push
hlt
hlt
push
lock
jmp
ljmp
lret
incl
inc
inc
cmp
cmp
outsl
jo
dec
lret
lret
call
rcl
jmp
in
dec
lret
lret
inc
mov
mov
data16
pushl
js
jns
insb
insl
insl
call
call
lcall
rcl
jmp
repz
cli
cli
cli
cli
cli
cli
cld
cld
cld
cld
cld
cld
cli
cli
cli
std
std
std
stc
stc
stc
push
div
push
repnz
jmp
jmp
rcl
sar
addb
call
and
sbb
sub
push
das
xor
jmp
ds
ljmp
inc
dec
ljmp
dec
push
pushl
dec
pop
pushl
push
pop
pushl
pop
pushl
push
pop
pushl
push
pop
pushl
dec
push
ljmp
inc
dec
jmp
cmp
and
cmp
sbb
das
lcall
and
dec
ljmp
fcmovu
ljmp
push
div
push
div
push
div
clc
clc
clc
clc
clc
clc
push
div
push
cmc
cmc
push
repnz
ljmp
jmp
out
call
rcl
jmp
dec
dec
pushl
aaa
aaa
lcall
pop
pushl
rcl
fcmovu
int
int
int
int
mov
js
call
push
ljmp
outsl
pushl
pushl
lcall
pop
call
push
incl
mov
in
in
icebp
icebp
icebp
stc
stc
stc
cli
cli
cli
cld
cld
cld
cld
cld
cld
cli
cli
cli
std
std
std
sti
sti
sti
push
div
push
repz
in
in
in
fcmovnu
mov
inc
inc
call
and
lcall
daa
sub
sbb
ss
ljmp
dec
pushl
dec
push
pushl
pop
cmp
cmp
insb
aas
data16
inc
imul
jo
decl
cmp
js
decl
mov
push
jg
call
xchg
call
xchg
call
cwtl
incl
add
rolb
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
mov
push
mov
call
xchg
call
xchg
decl
mov
dec
jbe
incl
jle
inc
data16
cmp
pushl
dec
push
ljmp
aas
inc
jmp
xor
xor
and
xor
push
pop
pop
inc
ret
jmp
in
push
lock
clc
clc
clc
push
div
push
div
cli
cli
cli
cli
cli
cli
cli
cli
cli
stc
stc
stc
push
div
push
cmc
cmc
push
icebp
icebp
out
out
out
jmp
out
fdivr
scas
scas
scas
call
push
cmp
addr16
mov
lret
lret
jmp
loope
dec
leave
leave
dec
enter
mov
decl
addl
xchg
xchg
xchg
lcall
jnp
ljmp
inc
call
xlat
xlat
jmp
out
push
repz
cli
cli
cli
sti
sti
sti
sti
sti
sti
cld
cld
cld
std
std
std
cld
cld
cld
push
div
push
hlt
hlt
out
out
out
call
iret
iret
jp
jle
xor
cmp
adc
and
sbb
sub
sbb
xor
and
jmp
inc
dec
ljmp
dec
ljmp
dec
push
pushl
dec
pop
pushl
push
pop
pushl
push
pop
pushl
dec
pop
ljmp
dec
push
ljmp
inc
dec
jmp
xor
lcall
sub
lcall
and
incl
dec
ljmp
fcmovnu
jmp
jmp
div
idiv
div
idiv
div
idiv
stc
stc
stc
cli
cli
cli
cli
cli
cli
stc
stc
stc
clc
clc
clc
push
div
push
repnz
out
out
out
ljmp
dec
lret
imul
call
ljmp
lret
lret
fcomp
fdivr
int3
int3
int3
dec
lret
mov
cltd
lcall
xchg
lcall
test
lods
lods
lods
call
rcl
jmp
loop
push
lock
clc
clc
clc
sti
sti
sti
sti
sti
sti
cld
cld
cld
std
std
std
std
std
std
std
std
std
cli
cli
cli
push
div
push
repnz
call
fcmovu
lcall
inc
call
and
lcall
cmp
es
dec
pushl
dec
push
pushl
pop
cmp
cmp
gs
inc
push
jl
dec
jb
decl
test
dec
jns
decl
call
xchg
call
call
incl
add
rolb
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
mov
call
lcall
test
dec
jl
decl
test
inc
jo
incl
jne
cmp
imul
push
pop
ljmp
dec
push
ljmp
aas
inc
jmp
xor
xor
and
xor
push
pop
pop
inc
out
push
lock
sti
sti
sti
cli
cli
cli
sti
sti
sti
cld
cld
cld
sti
sti
sti
cld
cld
cld
sti
sti
sti
stc
stc
stc
clc
clc
clc
push
cmc
cmc
push
icebp
icebp
jmp
loope
dec
int
incl
pop
pop
incl
mov
jmp
loope
dec
leave
leave
fcomp
fdivr
scas
scas
scas
lcall
xchg
decl
test
decl
addb
rcl
sar
jecxz
jecxz
icebp
icebp
icebp
clc
clc
clc
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
push
div
push
hlt
hlt
push
lock
in
dec
into
into
pushl
ljmp
ss
adc
and
pop
and
xor
and
jmp
inc
ljmp
inc
dec
ljmp
dec
pushl
dec
push
pushl
push
pop
pushl
pop
pushl
dec
push
pushl
dec
push
ljmp
dec
push
ljmp
inc
jmp
notrack
xor
lcall
sub
incl
dec
ljmp
in
in
in
clc
clc
clc
sti
sti
sti
sti
sti
sti
cld
cld
cld
sti
sti
sti
cld
cld
cld
sti
sti
sti
cli
cli
cli
clc
clc
clc
push
div
push
icebp
icebp
jmp
jmp
in
in
rcl
sar
lahf
lahf
mov
pushl
jb
mov
mov
fdivrp
lret
call
aad
mov
test
decl
xchg
xchg
lcall
nop
nop
decl
mov
dec
lret
lret
out
out
out
push
div
cld
cld
cld
sti
sti
sti
std
std
std
std
std
std
cli
cli
cli
push
cmc
cmc
push
repnz
out
fcomp
fdivr
xchg
xchg
xchg
cmp
inc
call
and
pop
and
xor
and
jmp
cmp
ljmp
inc
dec
ljmp
dec
push
pushl
pop
fs
cmp
outsl
incl
jne
inc
insb
jp
dec
jb
decl
test
dec
jp
decl
call
nop
call
xchg
call
cwtl
incl
add
rolb
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
mov
call
fwait
call
xchg
call
xchg
call
xchg
decl
mov
dec
jbe
incl
jle
inc
push
imul
push
pop
ljmp
dec
push
ljmp
aas
inc
jmp
xor
lcall
sub
jmp
xor
push
pop
pop
inc
call
icebp
icebp
sti
sti
sti
std
std
std
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
sti
sti
sti
cli
cli
cli
push
div
push
lock
jmp
loope
dec
iret
iret
ljmp
mov
mov
enter
loope
mov
into
into
jmp
pushf
incl
mov
jnp
jl
test
jl
jmp
call
mov
out
out
out
clc
clc
clc
std
std
std
std
std
std
cld
cld
cld
push
div
push
repz
lock
in
dec
into
into
pushl
ja
cs
and
push
and
lcall
sub
lcall
xor
jmp
cmp
sub
inc
ljmp
inc
dec
pushl
dec
push
pushl
dec
pop
pushl
pop
pushl
dec
push
pushl
dec
push
ljmp
dec
push
ljmp
cmp
cmp
lcall
sub
incl
dec
ljmp
in
in
in
stc
stc
stc
std
std
std
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
sti
sti
sti
sti
sti
sti
push
div
push
repnz
in
in
in
jmp
jecxz
call
aad
pushl
mov
pushl
ret
fcmovu
ret
dec
leave
leave
pushl
stos
stos
incl
mov
call
xchg
incl
lods
lods
fcos
in
in
in
push
cmc
cmc
cld
cld
cld
std
std
std
std
std
std
cli
cli
cli
push
cmc
cmc
push
icebp
icebp
call
fcomp
call
inc
inc
call
and
lcall
and
xor
and
cmp
and
inc
dec
ljmp
dec
push
pushl
pop
cmp
ds
push
aas
bound
inc
addr16
inc
insb
jns
inc
jo
decl
cmp
js
decl
call
call
xchg
lcall
xchg
incl
add
rolb
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
lea
call
fwait
call
xchg
call
xchg
call
xchg
decl
mov
dec
ja
incl
jle
inc
imul
xor
dec
push
ljmp
inc
dec
jmp
xor
xor
and
xor
push
pop
pop
inc
call
icebp
icebp
sti
sti
sti
std
std
std
cld
cld
cld
std
std
std
cld
cld
cld
cld
cld
cld
cld
cld
cld
sti
sti
sti
clc
clc
clc
push
repz
jmp
jmp
loope
loope
fdivrp
int
int
stos
stos
stos
call
cmpsb
cmpsb
pushl
scas
scas
pushl
scas
scas
mov
xchg
xchg
decl
pop
pop
ljmp
push
push
data16
pusha
pushl
aaa
aaa
decl
dec
jmp
out
out
out
clc
clc
clc
std
std
std
std
std
std
std
std
std
cld
cld
cld
clc
clc
clc
push
repz
lock
in
dec
into
into
pushl
ja
cs
and
push
and
lcall
sub
lcall
xor
jmp
cmp
jmp
cmp
dec
ljmp
dec
push
pushl
dec
push
pushl
dec
push
pushl
dec
push
pushl
dec
push
pushl
dec
push
ljmp
cmp
cmp
lcall
daa
sub
sbb
incl
dec
ljmp
loopne
out
out
out
stc
stc
stc
std
std
std
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
sti
sti
sti
stc
stc
stc
push
cmc
cmc
jmp
jmp
out
out
fdivrp
pushl
xchg
xchg
jmp
mov
pushl
mov
ljmp
mov
jmp
arpl
addr16
imul
outsl
jo
pushl
aaa
aaa
aas
aas
aas
incl
aam
jmp
jmp
cmc
cmc
cmc
cld
cld
cld
std
std
std
std
std
std
cli
cli
cli
push
div
push
lock
jmp
jmp
fcomp
fdivr
xchg
xchg
xchg
cmp
inc
call
pop
and
pop
and
lcall
xor
and
cmp
and
inc
dec
ljmp
dec
push
pushl
push
pop
cmp
cmp
inc
bound
inc
data16
inc
imul
jo
decl
cmp
jnp
call
mov
push
adcl
incl
add
rolb
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
mov
call
popf
call
cltd
call
call
xchg
decl
mov
dec
ja
incl
jle
inc
imul
xor
dec
push
ljmp
inc
dec
jmp
xor
xor
and
pop
pop
inc
call
icebp
icebp
stc
stc
stc
cld
cld
cld
std
std
std
std
std
std
std
std
std
std
std
std
cld
cld
cld
sti
sti
sti
push
div
push
lock
in
in
in
fdivrp
iret
iret
iret
inc
rol
jle
jg
popa
bound
outsl
jo
incl
nop
inc
rol
xchg
mov
ljmp
outsl
cmp
cmp
cmp
cmp
cmp
cmp
das
das
das
jmp
and
lcall
push
push
pushl
xor
decl
fcomp
in
in
in
clc
clc
clc
std
std
std
std
std
std
std
std
std
std
std
std
stc
stc
stc
push
div
push
lock
out
call
rcl
jl
cmp
ss
adc
daa
lcall
sub
lcall
xor
jmp
aaa
ljmp
ds
ljmp
dec
push
pushl
dec
push
pushl
dec
push
pushl
dec
push
pushl
dec
push
ljmp
dec
push
ljmp
dec
ljmp
cmp
cmp
pop
das
xor
lcall
and
incl
dec
ljmp
loopne
out
out
out
clc
clc
clc
sti
sti
sti
std
std
std
std
std
std
std
std
std
std
std
std
cld
cld
cld
cld
cld
cld
stc
stc
stc
push
repnz
in
in
in
jmp
in
call
rcl
inc
call
arpl
push
imul
jl
decl
mov
decl
mov
incl
inc
inc
cmp
cmp
cmp
cmp
xor
xor
lcall
push
push
jmp
es
popa
dec
int
jmp
hlt
hlt
std
std
std
std
std
std
std
std
std
std
std
std
sti
sti
sti
push
div
push
repnz
jmp
fcmovu
lcall
aas
inc
call
and
lcall
xor
and
cmp
and
inc
dec
pushl
dec
push
pushl
push
pop
cmp
cmp
aas
popa
insl
incl
jae
inc
insb
js
dec
jno
decl
cmp
jns
call
call
call
xchg
lcall
cwtl
incl
add
rolb
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
mov
call
sahf
call
lcall
adcl
dec
js
incl
jg
inc
addr16
cmp
imul
push
pusha
ljmp
dec
push
ljmp
inc
dec
jmp
xor
xor
and
pop
pop
inc
call
icebp
icebp
push
div
stc
stc
stc
sti
sti
sti
std
std
std
std
std
std
cld
cld
cld
cli
cli
cli
push
div
out
out
out
jmp
jecxz
call
rcl
ljmp
mov
ljmp
das
xor
cs
xor
cmp
jns
jp
jns
jp
fs
pop
incl
jmp
and
jmp
and
jmp
and
lcall
pop
pop
call
adc
jmp
and
jns
jp
aam
aam
ljmp
sti
sti
sti
std
std
std
std
std
std
std
std
std
cld
cld
cld
push
div
push
repz
jmp
jmp
rcl
sar
addb
call
sbb
sub
sbb
xor
push
xor
jmp
cmp
sub
dec
push
pushl
push
pushl
push
pushl
dec
push
pushl
dec
push
pushl
dec
push
ljmp
dec
push
ljmp
inc
dec
ljmp
cmp
cmp
pop
das
xor
sbb
sub
sbb
es
aas
inc
dec
ljmp
loopne
out
out
out
push
cmc
cmc
stc
stc
stc
sti
sti
sti
cld
cld
cld
std
std
std
cld
cld
cld
sti
sti
sti
push
div
push
icebp
icebp
jmp
out
fcomp
fdivr
mov
mov
test
popa
pushl
xor
ljmp
cmp
decl
dec
ljmp
outsb
jle
jg
addr16
popa
call
push
ljmp
sub
lcall
and
jmp
and
lcall
and
lcall
sbb
call
adc
lcall
sbb
call
push
inc
out
out
repnz
cld
cld
cld
cld
cld
cld
std
std
std
std
std
std
std
std
std
clc
clc
clc
push
cmc
cmc
in
in
in
fdivr
mov
inc
inc
call
pop
and
pop
and
lcall
sub
jmp
xor
jmp
cmp
das
inc
dec
cmp
cmp
pop
ds
fs
ds
push
incl
jae
inc
imul
jno
decl
decl
xchg
push
jge
call
lcall
xchg
lcall
cwtl
incl
add
rolb
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
nop
mov
lcall
lahf
lcall
fwait
call
cwtl
call
xchg
call
decl
decl
cmp
push
insb
pushl
push
popa
pushl
dec
push
ljmp
inc
dec
jmp
ss
jmp
pop
pop
inc
call
icebp
icebp
push
div
stc
stc
stc
cli
cli
cli
cld
cld
cld
std
std
std
cld
cld
cld
cld
cld
cld
clc
clc
clc
push
div
in
in
in
jmp
in
inc
ret
ret
pushl
jae
cmp
cmp
call
pop
sbb
adc
adc
adc
pop
lcall
and
ljmp
xor
incl
dec
decl
push
ds
inc
jmp
sbb
sbb
sub
ljmp
sub
lcall
sbb
jmp
and
pushl
jb
rcl
sar
jmp
cmc
cmc
sti
sti
sti
cld
cld
cld
sti
sti
sti
cld
cld
cld
cld
cld
cld
push
cmc
cmc
jmp
jmp
aam
aam
addl
call
sbb
sub
sbb
xor
push
xor
ljmp
cmp
dec
pushl
dec
push
cmp
pushl
push
pop
pushl
dec
push
pushl
dec
push
pushl
dec
push
ljmp
inc
dec
ljmp
inc
dec
ljmp
cmp
cmp
pop
das
xor
sbb
sub
sbb
incl
dec
ljmp
out
out
out
push
cmc
cmc
clc
clc
clc
cli
cli
cli
cld
cld
cld
std
std
std
std
std
std
cld
cld
cld
stc
stc
stc
clc
clc
clc
out
out
out
call
rcl
decl
dec
dec
jmp
sub
lcall
sbb
call
adc
adc
ljmp
sub
incl
inc
call
push
incl
dec
ljmp
sub
push
lcall
sbb
ljmp
sub
jmp
and
call
sbb
decl
dec
mov
in
push
icebp
icebp
std
std
std
cld
cld
cld
sti
sti
sti
cld
cld
cld
cli
cli
cli
std
std
std
clc
clc
clc
in
in
in
fdivrp
test
test
call
and
lcall
and
lcall
sub
jmp
xor
ljmp
cmp
pushl
push
cmp
pop
aas
pop
pusha
incl
gs
aas
pop
imul
inc
data16
inc
imul
jno
decl
cmp
jns
call
mov
push
adcl
incl
add
rolb
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
xchg
movsb
lcall
mov
lcall
fwait
call
cltd
call
call
nop
decl
mov
dec
jae
incl
ja
cmp
insl
pushl
push
pushl
dec
push
ljmp
inc
dec
jmp
aaa
cmp
jmp
pop
pop
inc
call
icebp
icebp
push
div
cli
cli
cli
cli
cli
cli
sti
sti
sti
cld
cld
cld
cld
cld
cld
sti
sti
sti
clc
clc
clc
push
cmc
cmc
jmp
loope
pushl
test
adc
or
or
push
or
decl
or
sbb
sbb
and
pop
and
sbb
and
pop
sbb
call
sbb
ljmp
sub
cmp
incl
inc
ljmp
sbb
and
and
gs
into
into
call
repnz
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
sti
sti
sti
push
cmc
cmc
in
in
in
call
aam
incl
aaa
cmp
adc
sub
sbb
xor
and
cmp
sub
inc
pushl
inc
dec
pushl
push
pop
pushl
push
pop
pushl
dec
push
pushl
dec
push
pushl
dec
push
ljmp
dec
push
ljmp
cmp
cmp
and
xor
lcall
and
incl
dec
ljmp
fdivrp
out
out
out
push
repz
clc
clc
clc
stc
stc
stc
cli
cli
cli
cld
cld
cld
std
std
std
sti
sti
sti
clc
clc
clc
push
div
in
in
in
jmp
in
inc
mov
pushl
cmp
lcall
sbb
decl
adc
incl
or
decl
or
call
adc
and
and
and
push
and
lcall
sbb
pop
sbb
jmp
es
cmp
cmp
ds
inc
pushl
push
lcall
sbb
incl
pushl
in
out
out
out
stc
stc
stc
cld
cld
cld
sti
sti
sti
cld
cld
cld
cli
cli
cli
clc
clc
clc
in
in
in
test
test
call
and
lcall
and
lcall
xor
ljmp
ds
pushl
dec
push
cmp
incl
aas
pop
incw
push
inc
bound
inc
push
jp
dec
jb
decl
test
push
jnp
call
mov
push
adcl
pop
mov
rolb
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
bound
lcall
mov
call
lcall
adcb
dec
jae
incl
ja
cmp
pop
arpl
xor
sub
jmp
aaa
cmp
jmp
pop
pop
inc
call
out
out
push
cmc
cmc
clc
clc
clc
stc
stc
stc
cli
cli
cli
sti
sti
sti
cld
cld
cld
sti
sti
sti
clc
clc
clc
push
repnz
jmp
jmp
fcmovu
mov
xchg
xchg
jmp
and
pop
incl
or
pop
or
decl
or
ud0
movups
or
adc
or
adc
or
ud0
sbb
cmp
cmp
aas
cmp
lcall
and
lcall
pop
and
pop
pop
pop
dec
leave
leave
jmp
jecxz
push
repnz
sti
sti
sti
sti
sti
sti
cld
cld
cld
cld
cld
cld
cld
cld
cld
push
div
in
in
in
call
aad
incl
aaa
cmp
adc
and
pop
and
lcall
sub
lcall
xor
ljmp
cmp
pushl
inc
dec
cmp
pushl
push
pop
pushl
push
pop
pushl
dec
push
pushl
dec
push
pushl
dec
push
pushl
dec
push
ljmp
ds
jmp
xor
lcall
and
incl
dec
ljmp
fdivrp
in
in
in
push
repz
clc
clc
clc
clc
clc
clc
cli
cli
cli
sti
sti
sti
cld
cld
cld
sti
sti
sti
stc
stc
stc
push
hlt
hlt
in
in
in
fdivrp
mov
mov
xor
push
sbb
decl
or
decl
or
decl
push
ud0
push
adc
or
adc
or
adc
or
adc
or
adc
adc
pop
pushl
xor
inc
inc
inc
pushl
cmp
decl
dec
jmp
sbb
cmp
cmp
stos
stos
stos
fdivrp
out
out
out
stc
stc
stc
sti
sti
sti
sti
sti
sti
cld
cld
cld
sti
sti
sti
stc
stc
stc
out
out
out
test
test
call
and
lcall
and
xor
and
cmp
sub
inc
pushl
push
cmp
aas
pop
aas
pop
incw
push
inc
arpl
inc
push
decl
jl
dec
jae
decl
test
push
jl
call
nop
lcall
xchg
lcall
xchg
lcall
fwait
incl
add
rolb
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
addr16
test
arpl
mov
lcall
pushf
lcall
xchg
call
decl
mov
dec
je
incl
js
cmp
pop
arpl
xor
sub
jmp
aaa
cmp
jmp
pop
pop
inc
jmp
out
out
out
out
push
cmc
cmc
clc
clc
clc
stc
stc
stc
cli
cli
cli
sti
sti
sti
sti
sti
sti
sti
sti
sti
clc
clc
clc
push
repnz
out
call
aad
decl
aas
aas
jmp
sub
call
push
pop
decl
push
ud0
or
adc
or
adc
or
adc
or
adc
or
adc
or
adc
or
adc
sbb
inc
inc
ds
inc
pushl
cmp
decl
jmp
and
lcall
dec
inc
ret
jecxz
jecxz
lock
sti
sti
sti
sti
sti
sti
cld
cld
cld
cld
cld
cld
std
std
std
push
div
in
in
in
call
aad
incl
aaa
cmp
adc
and
pop
and
xor
and
jmp
inc
dec
pushl
dec
push
pushl
push
pushl
pop
pushl
pop
pushl
dec
pop
pushl
dec
push
pushl
dec
push
ljmp
inc
dec
ljmp
ds
jmp
xor
lcall
and
incl
dec
ljmp
in
in
in
push
repz
div
clc
clc
clc
cli
cli
cli
sti
sti
sti
sti
sti
sti
sti
sti
sti
stc
stc
stc
push
hlt
hlt
ljmp
ljmp
dec
dec
pushl
xor
sbb
or
adc
or
adc
or
adc
or
adc
decl
adc
decl
adc
call
cmp
decl
dec
pushl
xor
push
ljmp
sub
lcall
sbb
pushl
cmp
lcall
fstp
in
in
in
clc
clc
clc
cli
cli
cli
cld
cld
cld
cld
cld
cld
std
std
std
stc
stc
stc
out
out
out
jmp
loopne
ljmp
inc
inc
call
and
sbb
xor
and
ljmp
cmp
dec
pushl
push
pop
cmp
pusha
imul
data16
dec
imul
jo
decl
cmp
jns
call
call
xchg
lcall
xchg
lcall
lcall
fwait
incl
add
rolb
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
insb
fwait
stos
ljmp
cmpsl
jmp
movsl
jmp
mov
lcall
cwtl
call
xchg
call
mov
dec
jbe
incl
jns
inc
arpl
cmp
pushl
dec
push
ljmp
inc
dec
jmp
ss
jmp
pop
pop
inc
jmp
out
out
out
out
push
div
clc
clc
clc
stc
stc
stc
stc
stc
stc
stc
stc
stc
sti
sti
sti
sti
sti
sti
cli
cli
cli
push
repnz
out
call
rcl
incl
inc
inc
ljmp
das
call
adc
decl
adc
decl
adc
or
pop
decl
adc
sbb
push
push
sbb
or
adc
lcall
and
cmp
inc
ds
inc
pushl
xor
inc
lcall
and
lcall
sbb
dec
inc
ret
ret
jmp
loope
push
lock
div
cli
cli
cli
sti
sti
sti
cld
cld
cld
std
std
std
push
div
in
in
in
call
aad
incl
cmp
call
and
sbb
sub
sbb
ss
sub
dec
pushl
dec
push
pushl
dec
push
pushl
pop
pushl
push
pop
pushl
pop
pushl
dec
push
ljmp
inc
dec
ljmp
inc
dec
jmp
xor
lcall
sub
incl
dec
ljmp
in
in
in
push
cmc
cmc
clc
clc
clc
clc
clc
clc
stc
stc
stc
cli
cli
cli
sti
sti
sti
sti
sti
sti
sti
sti
sti
push
cmc
cmc
ljmp
jmp
dec
dec
cmp
decl
adc
decl
adc
decl
adc
push
adc
sbb
movhps
decl
pop
sbb
movhps
decl
adc
push
pushl
ss
dec
push
push
ljmp
xor
decl
dec
jmp
sbb
pushl
aaa
cmp
mov
fcmovnu
in
in
in
push
div
stc
stc
stc
sti
sti
sti
cld
cld
cld
std
std
std
stc
stc
stc
out
out
out
jmp
loopne
ljmp
inc
inc
call
and
lcall
cs
and
cmp
sub
inc
ljmp
inc
dec
pushl
push
cmp
cmp
popa
insl
incl
jae
dec
outsb
jp
dec
jae
decl
test
push
jl
call
mov
pop
adcl
pop
mov
incl
add
rolb
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jno
scas
ljmp
ljmp
cmpsl
jmp
jmp
lahf
lcall
lcall
jl
decl
incl
jns
inc
arpl
cmp
pushl
dec
pop
ljmp
inc
dec
jmp
lcall
xor
inc
jmp
out
out
out
out
push
div
push
div
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
clc
clc
clc
push
cmc
cmc
push
icebp
icebp
call
aad
decl
dec
dec
pushl
cmp
call
sbb
decl
push
decl
push
sbb
prefetcht2
adc
sbb
call
sbb
call
sbb
lcall
and
sub
cmp
pushl
cmp
xor
lcall
push
pop
lcall
and
call
push
inc
mov
loope
loope
lock
div
stc
stc
stc
sti
sti
sti
cld
cld
cld
std
std
std
push
div
in
in
in
call
incl
cmp
adc
and
sbb
sub
push
xor
ljmp
ds
ljmp
dec
push
pushl
dec
pop
pushl
push
pop
pushl
push
pop
pushl
push
pop
pushl
push
pop
pushl
dec
push
ljmp
inc
dec
ljmp
inc
dec
jmp
cmp
and
lcall
sub
incl
dec
ljmp
in
in
in
push
hlt
hlt
push
div
stc
stc
stc
clc
clc
clc
stc
stc
stc
stc
stc
stc
clc
clc
clc
push
div
push
repz
in
in
in
fcmovnu
lods
lods
lods
call
push
decl
push
lcall
sbb
decl
adc
call
sbb
adc
push
call
sbb
call
sbb
call
sbb
call
sbb
ljmp
cs
cmp
inc
pushl
aaa
cmp
xor
cmp
pop
and
lcall
sbb
cmp
cmpsl
fdivr
in
in
in
push
cmc
cmc
stc
stc
stc
cli
cli
cli
cld
cld
cld
std
std
std
stc
stc
stc
out
out
out
jmp
loopne
ljmp
inc
inc
lcall
and
lcall
sub
pop
das
xor
and
inc
dec
pushl
dec
push
pushl
push
pop
cmp
aas
pop
imul
inc
imul
dec
jae
call
xchg
push
jge
call
mov
pop
xchg
jmp
lcall
add
rolb
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jns
mov
jb
lods
ljmp
test
jmp
jmp
fwait
lcall
xchg
call
decl
test
dec
insl
jp
inc
arpl
cmp
pushl
dec
pop
ljmp
inc
dec
jmp
lcall
sub
call
pop
inc
jmp
out
out
out
out
push
div
push
div
stc
stc
stc
stc
stc
stc
push
div
push
div
push
cmc
cmc
push
hlt
hlt
push
lock
ljmp
jmp
push
push
cmp
pop
call
pop
sbb
movhps
call
sbb
call
and
adc
and
call
push
and
push
and
pop
daa
sub
sub
xor
sub
xor
sbb
sbb
lcall
and
lcall
pusha
dec
leave
leave
jmp
in
push
lock
div
stc
stc
stc
stc
stc
stc
cld
cld
cld
cld
cld
cld
push
div
in
in
in
call
xlat
xlat
incl
cmp
push
and
lcall
sub
jmp
xor
jmp
inc
dec
ljmp
inc
dec
pushl
dec
push
pushl
push
pop
cmp
cmp
cmp
pushl
push
pop
pushl
dec
push
ljmp
inc
dec
ljmp
dec
jmp
cmp
and
lcall
sub
incl
dec
ljmp
in
in
in
push
repz
stc
stc
stc
clc
clc
clc
clc
clc
clc
push
div
push
div
push
div
push
hlt
hlt
push
repz
in
in
in
fdivrp
mov
fs
push
lcall
push
and
adc
sbb
movhps
call
sbb
call
and
call
and
call
es
sub
xor
sub
xor
and
daa
call
sbb
sbb
sbb
inc
inc
inc
ljmp
loopne
in
in
in
push
cmc
cmc
stc
stc
stc
stc
stc
stc
sti
sti
sti
cld
cld
cld
std
std
std
stc
stc
stc
out
out
out
jmp
loope
ljmp
inc
inc
lcall
and
lcall
sub
jmp
cmp
sub
dec
pushl
dec
push
pushl
push
pop
cmp
incl
insb
incl
jae
dec
insb
jns
dec
jb
decl
test
push
jl
call
mov
pop
adcl
pop
mov
jmp
lahf
incl
add
rolb
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jg
mov
jp
mov
jae
lods
ljmp
test
push
popf
lcall
xchg
lcall
call
test
dec
outsb
jnp
inc
fs
cmp
pushl
pop
ljmp
dec
jmp
lcall
sub
call
pop
inc
ret
ret
jmp
out
out
out
out
push
div
push
div
push
div
push
div
push
cmc
cmc
push
cmc
cmc
push
repz
repz
icebp
icebp
in
in
in
fstp
mov
fs
cmp
lcall
pop
and
adc
sbb
adc
sbb
call
and
lcall
and
sub
sbb
daa
call
and
sbb
and
call
sbb
decl
or
and
bound
leave
leave
leave
jmp
in
push
repnz
cmc
cmc
clc
clc
clc
sti
sti
sti
cli
cli
cli
cld
cld
cld
std
std
std
sti
sti
sti
push
div
in
in
in
call
incl
cmp
lcall
sub
jmp
xor
jmp
cmp
sub
ljmp
dec
push
pushl
pop
pushl
push
pop
cmp
cmp
cmp
pushl
push
pop
pushl
dec
push
ljmp
dec
jmp
cmp
and
lcall
sub
incl
dec
ljmp
fdivr
in
in
in
push
hlt
hlt
clc
clc
clc
push
div
push
div
push
div
push
cmc
cmc
push
hlt
hlt
push
repnz
repz
out
out
out
jmp
loope
dec
lret
lret
jp
jl
dec
dec
dec
lcall
and
call
sbb
call
and
lcall
es
sbb
sub
sbb
sub
sbb
and
lcall
and
lcall
and
call
adc
push
sbb
incl
inc
pushl
loopne
out
out
out
push
cmc
cmc
clc
clc
clc
stc
stc
stc
cli
cli
cli
sti
sti
sti
std
std
std
cld
cld
cld
stc
stc
stc
out
out
out
jmp
loopne
ljmp
inc
inc
lcall
and
lcall
sub
jmp
xor
jmp
cmp
sub
dec
push
cmp
cmp
bound
inc
imul
dec
jae
call
xchg
push
jl
lcall
lcall
xchg
lcall
xchg
jmp
cltd
jmp
jmp
mov
rolb
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
mov
jnp
mov
jne
lods
ljmp
cmpsl
ljmp
mov
lcall
nop
call
xchg
dec
jb
incl
jno
cmp
push
pop
ljmp
cmp
lcall
cs
daa
xor
call
pop
inc
ret
ret
jmp
out
out
out
out
push
div
push
div
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
repnz
out
out
out
push
repnz
lock
in
in
in
jmp
loopne
dec
iret
iret
pushl
js
xor
pop
and
adc
sbb
adc
and
lcall
sub
lcall
xor
sbb
das
lcall
sub
call
and
call
sbb
decl
push
decl
movups
sbb
and
pop
pusha
popa
dec
enter
loop
push
repnz
div
stc
stc
stc
cli
cli
cli
sti
sti
sti
cld
cld
cld
std
std
std
std
std
std
cli
cli
cli
clc
clc
clc
push
hlt
hlt
in
in
in
call
aad
incl
cmp
call
and
lcall
xor
and
ljmp
cmp
ljmp
dec
push
pushl
push
pop
cmp
cmp
cmp
cmp
cmp
xor
dec
push
ljmp
dec
jmp
cmp
and
lcall
sub
incl
dec
ljmp
fcmovnu
in
in
in
push
cmc
cmc
clc
clc
clc
push
div
push
cmc
cmc
push
cmc
cmc
push
icebp
icebp
push
repnz
repz
lock
out
out
out
jmp
out
call
rcl
call
dec
dec
lcall
and
call
sbb
adc
call
and
sbb
sub
lcall
sub
lcall
das
lcall
sub
sbb
call
and
adc
sbb
decl
adc
call
sbb
inc
inc
inc
ljmp
in
in
in
push
div
clc
clc
clc
cli
cli
cli
cli
cli
cli
cld
cld
cld
std
std
std
std
std
std
sti
sti
sti
clc
clc
clc
push
div
out
out
out
fdivrp
stos
stos
stos
aas
inc
dec
lcall
and
xor
and
cmp
sub
inc
ljmp
inc
dec
pushl
push
cmp
aas
pop
push
incl
jbe
dec
outsl
jl
push
jbe
call
xchg
push
jle
lcall
lcall
xchg
jmp
xchg
jmp
fwait
jmp
sahf
ljmp
mov
rolb
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xchg
mov
decl
cmpsl
mov
jnp
mov
je
stos
ljmp
jmp
lcall
jl
call
jge
dec
push
pushw
push
pop
ljmp
inc
dec
jmp
cs
xor
inc
rol
out
out
out
out
out
clc
clc
clc
push
cmc
cmc
push
cmc
cmc
push
icebp
icebp
push
hlt
hlt
out
out
out
in
in
in
push
lock
lock
in
in
in
jmp
loop
call
aad
call
inc
inc
call
sbb
call
sbb
call
and
lcall
sub
lcall
das
xor
lcall
das
xor
lcall
sub
lcall
and
and
decl
push
sbb
or
adc
sbb
and
push
pop
pop
inc
mov
push
icebp
icebp
stc
stc
stc
stc
stc
stc
sti
sti
sti
sti
sti
sti
std
std
std
std
std
std
cld
cld
cld
cld
cld
cld
sti
sti
sti
clc
clc
clc
push
div
push
repz
in
in
in
call
aam
incl
cmp
lcall
and
xor
and
cmp
sub
inc
ljmp
inc
dec
pushl
dec
push
pushl
push
pop
cmp
cmp
fs
cmp
pop
arpl
cmp
pushl
push
pop
pushl
dec
push
ljmp
cmp
and
aaa
lcall
sub
ds
inc
jmp
fcmovnu
jmp
jmp
div
idiv
div
idiv
div
idiv
hlt
hlt
hlt
push
repz
jmp
jmp
icebp
icebp
icebp
push
lock
lock
out
out
out
jmp
in
fcos
stos
stos
stos
call
push
lcall
and
call
and
lcall
sub
lcall
das
xor
and
jmp
xor
lcall
cs
sbb
sub
call
sbb
or
sbb
cmp
test
fdivr
in
in
in
clc
clc
clc
clc
clc
clc
sti
sti
sti
sti
sti
sti
cld
cld
cld
std
std
std
cld
cld
cld
cld
cld
cld
sti
sti
sti
clc
clc
clc
push
div
push
hlt
hlt
in
in
in
fdivrp
stos
lods
lods
aas
inc
dec
lcall
es
sbb
xor
inc
pushl
inc
dec
pushl
pop
incl
push
inc
data16
dec
insb
jns
dec
jae
call
test
push
jl
call
lcall
nop
lcall
xchg
jmp
cwtl
jmp
popf
jmp
lahf
ljmp
movsb
incl
add
rolb
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
popf
mov
sar
scas
mov
jge
scas
pushl
movsl
ljmp
jmp
lcall
mov
push
jne
decl
je
inc
pop
push
ljmp
inc
dec
jmp
cmp
jmp
das
xor
and
push
push
pushl
in
out
out
out
push
div
push
cmc
cmc
push
cmc
cmc
in
in
in
in
in
in
push
lock
icebp
icebp
push
icebp
icebp
push
lock
div
jmp
in
call
xlat
xlat
ljmp
push
push
lcall
and
call
and
lcall
sub
push
sub
jmp
xor
jmp
xor
cmp
and
aaa
lcall
das
xor
sbb
das
lcall
and
and
adc
sbb
lcall
push
pop
call
push
inc
ret
ret
jmp
loope
push
lock
stc
stc
stc
stc
stc
stc
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
sti
sti
sti
cli
cli
cli
push
div
push
hlt
hlt
push
repnz
jmp
jmp
aad
aad
mov
inc
lcall
es
pop
cs
and
aas
inc
pushl
inc
push
pushl
push
pop
cmp
pop
addr16
aas
pop
addr16
cmp
push
pusha
pushl
push
pop
pushl
dec
push
ljmp
cmp
and
aaa
lcall
sub
cmp
lcall
fcmovnu
jmp
jmp
hlt
hlt
hlt
push
div
push
div
push
icebp
icebp
in
in
in
in
in
in
push
repz
repnz
repnz
cmc
cmc
jmp
out
fdivrp
mov
push
jmp
sub
pop
and
call
and
sbb
sub
push
sub
jmp
xor
jmp
xor
jmp
cmp
and
cmp
and
lcall
daa
sub
push
and
decl
push
sbb
adc
sbb
cmp
aas
jmp
fcmovnu
in
in
in
clc
clc
clc
clc
clc
clc
cld
cld
cld
cld
cld
cld
std
std
std
cld
cld
cld
cld
cld
cld
sti
sti
sti
stc
stc
stc
push
div
push
cmc
cmc
push
repz
in
in
in
fdivrp
stos
lods
lods
incl
dec
lcall
es
sbb
xor
inc
pushl
dec
push
pushl
push
pop
cmp
incl
insb
incl
jae
dec
outsl
jp
dec
je
call
test
push
jge
call
lcall
xchg
lcall
xchg
jmp
jmp
popf
ljmp
pushl
cmpsl
incl
add
rolb
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cmpsl
ret
int3
lcall
mov
incl
popf
stos
pushl
mov
jmp
call
cmp
inc
pop
push
pushl
inc
dec
ljmp
cmp
and
xor
and
xor
inc
dec
push
ljmp
in
in
in
push
hlt
hlt
push
hlt
hlt
push
cmc
cmc
ljmp
push
hlt
hlt
push
repz
hlt
hlt
push
repnz
lock
ljmp
inc
ret
bound
ljmp
xor
lcall
and
lcall
and
lcall
xor
and
jmp
xor
aas
jmp
cmp
daa
cmp
and
xor
lcall
das
xor
sbb
das
lcall
and
call
and
adc
sbb
sbb
and
dec
dec
dec
inc
rol
loopne
loopne
out
out
out
stc
stc
stc
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
sti
sti
sti
push
div
push
hlt
hlt
push
div
push
hlt
hlt
push
repnz
jmp
jmp
aad
aad
mov
inc
lcall
sub
and
xor
ljmp
dec
push
cmp
cmp
popa
ds
fs
aas
pop
addr16
aas
pop
addr16
ds
gs
cmp
popa
cmp
pushl
dec
push
ljmp
cmp
and
aaa
lcall
sub
sbb
daa
pushl
cmp
fcos
call
icebp
icebp
push
div
push
cmc
cmc
push
lock
in
push
repz
hlt
hlt
push
repz
repz
lock
ljmp
dec
into
into
incl
aaa
cmp
push
es
sbb
daa
lcall
jmp
das
xor
and
cmp
cmp
ljmp
cmp
sub
inc
jmp
cmp
jmp
cmp
and
lcall
es
adc
sbb
call
sbb
cmp
cmp
fcos
in
in
in
push
div
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
sti
sti
sti
clc
clc
clc
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
repz
in
in
in
fdivrp
stos
lods
lods
incl
dec
lcall
es
push
sub
cmp
sub
inc
pushl
dec
push
pushl
push
pop
cmp
bound
push
jnp
dec
jne
call
xchg
push
jl
lcall
lcall
xchg
jmp
xchg
jmp
pushf
ljmp
lahf
pushl
movsl
jns
stos
incl
add
rolb
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
sar
cmpsl
ret
lahf
mov
mov
incl
fwait
cmpsb
ljmp
fwait
jmp
nop
lcall
test
push
outsb
ja
inc
pusha
imul
xor
ljmp
cmp
and
xor
and
xor
inc
dec
dec
jmp
in
in
in
push
hlt
hlt
push
cmc
cmc
push
cmc
cmc
ljmp
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
hlt
hlt
push
repz
out
out
out
fstp
rcl
sar
jp
jle
xor
cmp
push
daa
sub
sbb
sub
pop
cs
and
jmp
cmp
sub
inc
ljmp
ds
ljmp
cmp
aas
jmp
xor
jmp
das
xor
sbb
sub
sbb
lcall
and
lcall
and
decl
dec
mov
out
out
out
stc
stc
stc
std
std
std
cld
cld
cld
sti
sti
sti
push
div
push
cmc
cmc
push
div
push
div
push
hlt
hlt
push
repnz
jmp
jmp
aad
aad
mov
inc
lcall
sub
ljmp
cmp
das
inc
dec
pushl
dec
push
cmp
cmp
aas
pop
incw
imul
ds
gs
cmp
popa
cmp
pushl
inc
dec
ljmp
cmp
and
lcall
sub
sbb
pushl
cmp
jge
jg
fcmovu
call
icebp
icebp
push
div
push
cmc
cmc
push
lock
in
push
repz
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
repz
out
out
out
jmp
in
fcmovu
popf
lahf
lahf
cmp
sub
lcall
es
pop
sub
cmp
cmp
ljmp
cmp
ljmp
aas
inc
ljmp
aas
inc
ljmp
cmp
inc
jmp
cmp
and
xor
call
and
call
and
lcall
and
cmp
call
in
in
in
push
div
std
std
std
std
std
std
cld
cld
cld
push
div
push
cmc
cmc
push
div
push
div
push
cmc
cmc
push
repz
in
in
in
fdivrp
stos
lods
lods
incl
dec
lcall
sub
push
cs
and
inc
dec
pushl
dec
push
cmp
ds
incl
outsl
decl
ja
dec
jno
call
cmp
jns
lcall
mov
pop
adcb
arpl
sahf
pushl
mov
jle
lods
incl
add
rolb
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
lret
test
mov
mov
incl
xchg
mov
jmp
xchg
push
jo
decl
imul
push
pop
pushl
cmp
and
xor
and
dec
dec
jmp
in
in
in
push
cmc
cmc
push
div
push
div
in
in
in
ljmp
push
cmc
cmc
clc
clc
clc
push
div
push
div
out
out
out
fcmovu
mov
inc
jmp
sub
lcall
sub
and
xor
and
cmp
ljmp
inc
ljmp
inc
dec
ljmp
inc
dec
ljmp
inc
dec
ljmp
ds
jmp
cmp
jmp
cmp
and
sub
sbb
daa
jmp
sub
decl
dec
pushl
fstp
in
in
in
push
div
std
std
std
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cli
cli
cli
clc
clc
clc
push
div
push
repz
in
in
in
call
aad
decl
aas
inc
lcall
sub
jmp
xor
ljmp
cmp
pushl
inc
dec
pushl
dec
push
cmp
inc
pop
incl
imul
inc
pusha
imul
pop
push
cmp
pushl
dec
push
pushl
inc
dec
ljmp
cmp
and
aaa
lcall
sub
sbb
daa
pushl
cmp
incl
fcmovu
call
icebp
icebp
push
div
push
div
push
icebp
icebp
ljmp
push
cmc
cmc
clc
clc
clc
clc
clc
clc
push
div
push
lock
out
jmp
loopne
ljmp
push
push
ljmp
xor
jmp
das
xor
and
cmp
sub
inc
dec
ljmp
inc
dec
ljmp
aas
inc
ljmp
cmp
and
cmp
pop
sub
sub
sbb
jmp
daa
sub
cmp
inc
decl
aad
jmp
jmp
hlt
hlt
hlt
std
std
std
std
std
std
cld
cld
cld
cld
cld
cld
cld
cld
cld
cli
cli
cli
stc
stc
stc
push
div
push
cmc
cmc
in
in
in
fdivrp
test
dec
dec
lcall
sub
pop
cs
and
inc
dec
pushl
dec
push
cmp
aas
pop
push
decl
ja
dec
jno
call
cmp
jl
lcall
lcall
xchg
jmp
xchg
jmp
lcall
lcall
xchg
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
ret
aad
mov
leave
sar
stos
ret
lret
mov
mov
jg
movsb
pushl
jmp
mov
pop
je
decl
insl
incl
pop
cmp
ljmp
inc
jmp
xor
xor
decl
push
pushl
jecxz
out
out
out
push
cmc
cmc
push
div
push
cmc
cmc
push
icebp
icebp
push
icebp
icebp
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
hlt
hlt
push
repz
out
out
out
jmp
loop
fstp
mov
dec
push
jmp
sub
jmp
xor
ljmp
cmp
ljmp
inc
ljmp
inc
dec
pushl
inc
dec
pushl
inc
dec
pushl
inc
dec
pushl
inc
dec
ljmp
inc
ljmp
cmp
jmp
sub
lcall
daa
sub
cmp
inc
incl
inc
jmp
fcmovu
in
in
in
push
hlt
hlt
std
std
std
std
std
std
std
std
std
std
std
std
cld
cld
cld
sti
sti
sti
cli
cli
cli
clc
clc
clc
push
cmc
cmc
jmp
jmp
aad
aad
xchg
inc
lcall
sub
jmp
ds
pushl
inc
dec
cmp
aas
pop
pusha
incl
incl
push
dec
outsb
incl
insb
incl
imul
ds
pop
cmp
pushl
inc
dec
ljmp
cmp
and
lcall
and
pushl
cmp
call
fcmovnu
ljmp
push
div
push
div
push
hlt
hlt
push
icebp
icebp
push
hlt
hlt
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
repz
lock
out
jmp
loop
mov
fs
cmp
lcall
sub
ljmp
cmp
ljmp
inc
dec
pushl
inc
dec
pushl
inc
dec
pushl
inc
dec
ljmp
ds
jmp
xor
lcall
sub
xor
cmp
cmp
call
rcl
call
repz
cli
cli
cli
std
std
std
std
std
std
std
std
std
cld
cld
cld
cld
cld
cld
cli
cli
cli
stc
stc
stc
push
div
in
in
in
cmpsl
test
dec
lcall
sub
pop
das
xor
cmp
sub
dec
pushl
dec
push
cmp
aas
pop
push
decl
js
dec
je
call
test
pop
jle
lcall
jmp
xchg
jmp
xchg
ljmp
pushf
pushl
jp
test
test
mov
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
lret
fneni(8087
inc
xlat
mov
leave
iret
ljmp
mov
call
mov
pushf
ljmp
jmp
jle
push
imul
cmp
ljmp
cmp
xor
call
push
mov
out
push
lock
clc
clc
clc
push
div
push
div
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
repz
repz
lock
lock
in
in
in
out
out
out
fcmovnu
stos
lods
lods
call
pop
ljmp
xor
jmp
cmp
pushl
inc
dec
pushl
inc
dec
pushl
dec
push
pushl
dec
push
pushl
dec
push
pushl
inc
dec
ljmp
xor
xor
and
jmp
inc
inc
call
jmp
repz
std
std
std
std
std
std
push
hlt
hlt
out
out
out
call
aad
incl
inc
inc
jmp
sub
cmp
xor
pushl
dec
push
ds
pop
incl
arpl
inc
pusha
imul
dec
outsw
decl
outsb
incl
imul
pop
incl
popa
cmp
pushl
dec
ljmp
cmp
aaa
lcall
sub
cmp
inc
jmp
in
in
in
push
div
push
div
push
div
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
hlt
hlt
push
repnz
lock
out
out
out
in
in
in
in
in
in
jmp
jecxz
mov
jb
pushl
sub
jmp
xor
ljmp
cmp
xor
pushl
inc
dec
pushl
dec
push
pushl
dec
push
pushl
inc
dec
ljmp
inc
dec
ljmp
cmp
and
cmp
push
sub
lcall
sub
pop
daa
sub
xor
cmp
jno
je
rcl
sar
jecxz
jecxz
icebp
icebp
icebp
cli
cli
cli
clc
clc
clc
out
out
out
jmp
loopne
jmp
inc
dec
lcall
das
xor
cmp
sub
dec
push
cmp
aas
pop
imul
dec
outsb
jns
push
je
call
test
pop
jg
lcall
xchg
jmp
xchg
ljmp
fwait
pushl
mov
incl
test
call
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
aam
in
iret
fucom
inc
aad
mov
enter
mov
mov
incl
xchg
ljmp
cmp
insl
je
dec
pop
ds
push
pushl
aas
inc
jmp
xor
ljmp
aaa
call
pop
inc
ret
call
icebp
icebp
cli
cli
cli
push
div
push
div
push
div
push
div
push
cmc
cmc
push
repnz
in
in
in
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
fcomp
fdivr
mov
mov
push
pop
pop
ljmp
xor
jmp
sub
cmp
sub
inc
dec
pushl
dec
push
cmp
cmp
push
pop
cmp
pushl
dec
dec
pushl
inc
inc
ljmp
ljmp
xor
jmp
das
jmp
cmp
incl
xlat
call
repz
std
std
std
std
std
std
push
cmc
cmc
in
in
in
call
decl
inc
inc
jmp
cs
sub
cmp
cmp
inc
push
pop
incl
decw
decl
jo
push
push
call
jb
dec
outsb
decl
imul
inc
push
pop
pushl
dec
dec
ljmp
ds
jmp
xor
jmp
sub
lcall
inc
inc
ljmp
in
in
in
clc
clc
clc
stc
stc
stc
clc
clc
clc
push
div
push
div
push
cmc
cmc
push
hlt
hlt
in
in
in
jmp
jmp
jmp
jmp
in
in
in
jmp
loopne
mov
jnp
cmp
jmp
cs
sub
cmp
cs
pushl
inc
dec
pushl
dec
push
cmp
pushl
dec
push
pushl
inc
dec
ljmp
ds
jmp
ss
and
xor
pop
sub
lcall
xor
pushw
lret
jmp
jecxz
push
lock
cli
cli
cli
clc
clc
clc
in
in
in
jmp
loopne
jmp
inc
dec
lcall
xor
ljmp
dec
push
cmp
incl
imul
addr16
dec
outsl
jnp
push
je
call
xchg
pop
orb
data16
pushl
jge
test
xchg
mov
fwait
mov
incl
add
rolb
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
frstpm(287
jmp
dec
fcmovnu
inc
rcr
mov
lret
mov
mov
mov
xchg
ljmp
lcall
jne
push
pop
incl
push
pushl
xor
ljmp
aaa
cmp
pop
pop
popa
inc
mov
push
icebp
icebp
sti
sti
sti
std
std
std
cli
cli
cli
cli
cli
cli
clc
clc
clc
push
hlt
hlt
push
icebp
icebp
fdivrp
fdivrp
call
jmp
jmp
out
fcos
mov
mov
ljmp
das
xor
sub
cmp
cmp
cmp
push
pop
incl
pop
incl
pop
incl
pop
cmp
push
cmp
pushl
aas
inc
ljmp
ss
and
das
xor
aaa
cmp
jbe
js
rcl
sar
in
in
lock
sti
sti
sti
push
div
in
in
in
call
decl
inc
inc
jmp
xor
cmp
incl
push
incl
pusha
decl
imul
push
imul
jbe
push
insb
jne
push
imul
inc
pop
incl
pop
cmp
pushl
inc
inc
ljmp
ss
and
lcall
es
inc
dec
dec
pushl
out
out
out
clc
clc
clc
cli
cli
cli
cli
cli
cli
stc
stc
stc
push
cmc
cmc
push
repz
loop
fdivr
in
in
ljmp
rol
jg
cmp
inc
inc
jmp
xor
sub
inc
inc
cmp
cmp
push
cmp
push
pop
cmp
pop
cmp
pushl
push
ljmp
inc
inc
ljmp
cmp
and
lcall
sub
ljmp
xor
lcall
pop
inc
out
out
out
push
div
stc
stc
stc
out
out
out
jmp
loopne
ljmp
dec
dec
lcall
sub
jmp
xor
ljmp
cmp
cs
dec
pushl
push
pop
cmp
popa
imul
imul
push
ja
call
mov
pop
orl
pushl
mov
incl
test
call
mov
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
loope
in
fucom
ljmp
fcomp
inc
rcl
mov
mov
mov
xchg
movsb
test
pushl
jmp
js
push
bound
inc
push
push
cmp
ljmp
cmp
fs
jmp
icebp
icebp
sti
sti
sti
sti
sti
sti
push
hlt
hlt
push
lock
rcl
call
rcl
jmp
out
jmp
in
call
xlat
xlat
pushl
popa
ljmp
cmp
jmp
xor
ljmp
inc
dec
cmp
push
incl
pop
incl
pusha
decl
decl
arpl
dec
pop
pop
incl
pop
aas
dec
push
cmp
xor
cmp
ljmp
cs
xor
fs
in
in
in
push
cmc
cmc
std
std
std
push
div
in
in
in
call
xlat
xlat
decl
dec
ljmp
xor
pushl
ds
cmp
dec
incl
pop
decl
call
insl
lcall
je
pop
jb
lcall
jl
pop
jb
lcall
jne
push
push
incw
pop
cmp
inc
inc
ljmp
sub
decl
push
mov
loopne
out
out
out
clc
clc
clc
cld
cld
cld
push
div
push
repnz
fcomp
fdivr
int
into
jmp
loopne
jmp
in
fstp
mov
addl
xor
pushl
cmp
pushl
inc
dec
cmp
push
incl
pop
incl
pop
incl
pop
incl
pop
cmp
dec
push
pushl
inc
dec
ljmp
cmp
pop
sub
lcall
cs
dec
push
push
pushl
fcomp
ljmp
sti
sti
sti
stc
stc
stc
out
out
out
jmp
loope
ljmp
dec
dec
lcall
sub
jmp
xor
ljmp
cmp
das
inc
dec
pushl
push
pop
cmp
bound
dec
push
decl
jge
push
js
lcall
mov
pop
adcl
imul
cmpsb
incl
mov
lcall
incl
add
rolb
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
out
out
jmp
jmp
fsub
in
rcr
int3
ret
mov
mov
lcall
pushf
jp
mov
push
jnp
pop
gs
cmp
xor
cmp
ds
inc
pushl
js
xlat
xlat
xlat
ljmp
cld
cld
cld
stc
stc
stc
push
repz
out
out
out
dec
enter
iret
iret
jmp
loop
jmp
in
jmp
loop
call
aam
pushl
pop
pusha
pushl
cmp
ljmp
xor
inc
cmp
incl
push
decl
pop
decl
call
imul
push
pusha
decw
incl
pop
incl
dec
pushl
ds
ljmp
ss
sub
das
pushl
ss
call
push
jmp
ljmp
push
div
cli
cli
cli
push
div
in
in
in
call
xlat
xlat
decl
inc
dec
pushl
cmp
pushl
inc
inc
incl
push
decl
pop
call
lcall
jae
pusha
je
jmp
jmp
cmp
jns
jmp
jnp
pop
outsb
jne
push
gs
pop
pusha
incl
cmp
pushl
cmp
pushl
cmp
lcall
pop
dec
enter
loopne
out
out
out
clc
clc
clc
sti
sti
sti
push
hlt
hlt
push
icebp
icebp
call
rcl
dec
leave
leave
fdivrp
jecxz
jecxz
in
in
fcmovu
rol
jg
cmp
inc
inc
ljmp
ss
ss
inc
cmp
dec
incl
push
incl
pop
decl
popa
decl
arpl
inc
pop
arpl
inc
pop
pop
ds
pop
cmp
pushl
inc
inc
ljmp
aaa
cmp
and
xor
push
daa
sub
pop
es
inc
dec
dec
decl
jmp
in
push
lock
cmc
cmc
stc
stc
stc
std
std
std
stc
stc
stc
out
out
out
jmp
loope
ljmp
dec
dec
lcall
sub
jmp
xor
ljmp
cmp
ljmp
inc
dec
pushl
push
pop
ds
incl
jo
dec
insb
ja
dec
jb
call
test
pop
jge
lcall
xchg
jmp
xchg
ljmp
pushf
pushl
movsb
jle
stos
decl
mov
jmp
ror
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jmp
in
out
fucom
call
call
fcmovu
inc
iret
sar
mov
mov
lods
call
mov
lcall
push
dec
push
pop
ds
dec
pushl
cmp
inc
dec
dec
decl
fstp
ljmp
sti
sti
sti
std
std
std
std
std
std
std
std
std
push
div
push
icebp
icebp
in
in
in
mov
mov
xlat
fstp
rcl
sar
mov
mov
pop
pop
pop
pushl
cmp
pushl
inc
inc
incl
push
decl
pop
call
lcallw
insb
lcall
outsl
lcall
outsl
lcall
imul
popa
decl
pop
incl
push
cmp
cmp
sub
xor
sub
sub
inc
inc
inc
incl
rcl
jmp
out
out
out
out
push
repz
cmc
cmc
stc
stc
stc
sti
sti
sti
cld
cld
cld
std
std
std
push
div
in
in
in
call
xlat
fdivr
nop
xchg
incl
dec
pushl
cmp
cmp
push
push
call
lcall
insl
jmp
jbe
push
jl
ljmp
xchg
insb
jge
ljmp
jg
arpl
lcall
call
decl
pop
aas
dec
dec
pushl
xor
cmp
outsb
dec
lret
jecxz
jecxz
out
out
out
clc
clc
clc
std
std
std
std
std
std
clc
clc
clc
push
repz
out
out
out
inc
mov
call
rcl
fcmovu
loopne
loopne
xlat
mov
jle
incl
inc
pushl
cmp
cmp
inc
dec
push
decl
pop
decl
decl
call
imul
dec
pop
incl
cmp
inc
dec
ljmp
cmp
aaa
lcall
sub
sbb
ljmp
addr16
mov
in
in
in
push
icebp
icebp
push
cmc
cmc
clc
clc
clc
cli
cli
cli
cld
cld
cld
std
std
std
std
std
std
stc
stc
stc
out
out
out
jmp
loopne
ljmp
dec
dec
jmp
sub
cmp
sub
dec
cmp
ds
incl
jo
dec
insl
jns
dec
je
call
mov
pop
orb
data16
pushl
movsl
incl
test
mov
pushl
add
rolb
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
in
icebp
repz
call
call
out
aam
fdivrp
int
inc
leave
int3
pushl
mov
xchg
sahf
mov
pushl
jmp
insb
call
pop
incl
dec
pushl
cmp
decl
jmp
jmp
repz
stc
stc
stc
cld
cld
cld
cld
cld
cld
cli
cli
cli
push
cmc
cmc
out
out
out
jmp
out
jmp
nop
nop
dec
enter
fcmovu
fcmovnu
enter
fwait
pushf
pushf
call
pop
pushl
cmp
cmp
push
push
call
call
push
pop
insl
jno
bound
jmp
jne
popa
insl
jno
pop
addr16
pusha
arpl
dec
push
pop
incl
cmp
inc
pushl
xor
jmp
sub
ds
inc
pushl
jb
mov
in
in
out
out
out
push
repz
div
clc
clc
clc
cli
cli
cli
std
std
std
std
std
std
sti
sti
sti
stc
stc
stc
push
hlt
hlt
in
in
in
call
xlat
xlat
call
dec
dec
pushl
cmp
dec
decl
pop
lcall
jmpw
jb
imul
pushl
pushl
mov
jbe
mov
jno
test
imul
bound
lcall
imul
inc
dec
dec
cmp
ljmp
xor
cmp
inc
pushl
jae
leave
lret
in
in
lock
div
sti
sti
sti
cld
cld
cld
sti
sti
sti
push
cmc
cmc
push
icebp
icebp
ljmp
decl
mov
fdivr
rcl
sar
cmpsl
cmpsl
cmpsl
pushl
jae
inc
inc
inc
pushl
inc
dec
incl
push
call
pop
call
call
imul
push
outsb
call
imul
inc
push
pop
cmp
push
pushl
inc
ljmp
aaa
cmp
and
lcall
cs
push
push
pop
pushl
fcomp
jmp
loope
jmp
jmp
repz
cmc
cmc
push
div
stc
stc
stc
cld
cld
cld
std
std
std
cld
cld
cld
stc
stc
stc
push
div
out
out
out
lods
scas
scas
incl
dec
jmp
sub
cmp
sub
inc
pushl
inc
dec
cmp
aas
pop
incw
jno
dec
insl
jns
push
je
call
mov
pop
orl
pushl
mov
incl
mov
popf
mov
ljmp
lret
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
in
icebp
repz
ljmp
fucom
in
fcmovu
loopne
rcl
fcos
mov
mov
lcall
nop
xchg
jns
cmp
push
pop
pop
incl
cmp
dec
incl
fcmovu
jmp
out
push
icebp
icebp
push
div
sti
sti
sti
sti
sti
sti
clc
clc
clc
push
hlt
hlt
out
out
out
fcos
xchg
xchg
xchg
js
js
mov
fcomp
call
rcl
pushl
nop
xchg
decl
dec
pushl
aas
inc
incl
dec
decl
pop
lcall
jmpw
jo
addr16
ljmp
jp
insb
ja
ljmp
ja
outsl
jb
pop
imul
pop
decl
push
ds
inc
pushl
aaa
cmp
dec
push
push
js
jns
rol
dec
leave
leave
dec
iret
iret
fcmovu
out
out
lock
div
cli
cli
cli
cld
cld
cld
sti
sti
sti
stc
stc
stc
push
div
push
repz
in
in
in
call
call
dec
push
cmp
inc
incl
dec
call
lcall
imul
je
pushl
cmp
jle
mov
orl
mov
je
cmp
jne
jmp
outsb
call
pusha
decl
push
ds
inc
pushl
aaa
cmp
aas
inc
inc
ljmp
insl
dec
lret
lret
loopne
in
in
in
push
cmc
cmc
stc
stc
stc
cli
cli
cli
cli
cli
cli
push
cmc
cmc
push
lock
jecxz
ljmp
jne
jmp
aam
fcos
mov
stos
stos
lcall
pop
aas
inc
inc
cmp
incl
decl
pop
call
arpl
pop
imul
pop
outsb
je
pop
outsl
je
pop
imul
dec
pop
popa
incl
push
cmp
pushl
cmp
jmp
das
xor
and
inc
inc
jmp
jmp
lret
lret
dec
int3
int3
call
aad
jmp
jecxz
in
in
in
push
cmc
cmc
clc
clc
clc
cli
cli
cli
sti
sti
sti
stc
stc
stc
clc
clc
clc
push
hlt
hlt
out
out
out
fdivrp
scas
scas
mov
inc
dec
dec
jmp
das
xor
daa
ss
sub
inc
pushl
dec
push
cmp
incl
imul
dec
outsl
jnp
push
ja
lcall
mov
pop
test
ljmp
sahf
pushl
movsl
jnp
stos
incl
mov
lcall
ret
mov
add
rolb
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
out
repnz
in
lock
jmp
jmp
jmp
in
fcmovnu
loope
rcl
xlat
dec
int
mov
mov
lcall
xchg
xchg
jnp
cmp
outsb
jo
pop
pop
pop
decl
dec
cmp
dec
dec
jle
jg
fcmovu
jecxz
jecxz
lock
cmc
cmc
push
div
clc
clc
clc
push
div
push
hlt
hlt
in
in
in
movsl
movsl
movsl
pushl
pushl
fdivr
enter
leave
leave
pushl
jne
inc
inc
inc
pushl
inc
inc
decl
push
call
pop
jmp
insb
jmp
jne
outsl
jns
pushl
cmp
jb
jle
insb
je
jmp
outsb
lcall
call
push
incl
cmp
inc
incl
jmp
arpl
mov
leave
leave
dec
int3
int3
inc
mov
into
into
into
jmp
in
push
repnz
cmc
cmc
clc
clc
clc
cli
cli
cli
cli
cli
cli
stc
stc
stc
clc
clc
clc
push
lock
in
in
in
call
aam
call
push
push
incl
inc
decl
lcall
pusha
jmp
outsb
pushl
jnp
jp
xchg
orl
incl
mov
pushl
jge
outsl
jb
pop
bound
dec
push
push
incl
inc
pushl
cmp
incl
inc
jmp
push
jmp
in
jmp
jmp
repz
div
push
div
stc
stc
stc
push
hlt
hlt
out
out
out
jmp
loop
mov
jno
jmp
rcl
call
rcl
dec
iret
iret
call
dec
dec
cmp
inc
aas
inc
inc
decl
push
call
lcall
push
jmp
jbe
push
jne
jmp
lcall
jo
push
pusha
decl
pop
incl
push
pushl
aas
inc
ljmp
cmp
dec
push
push
decl
rol
int3
int3
int3
inc
leave
leave
leave
fstp
out
out
out
push
hlt
hlt
push
div
stc
stc
stc
cli
cli
cli
clc
clc
clc
stc
stc
stc
push
repnz
in
in
in
fstp
lods
lods
scas
decl
push
jmp
aaa
cmp
pushl
push
pop
incl
push
dec
push
decl
jge
push
js
lcall
jmp
xchg
jmp
lcall
lcall
mov
mov
ljmp
iret
aad
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
out
repz
in
lock
call
out
fsub
jecxz
rcr
leave
int
mov
mov
jmp
xchg
xchg
jle
test
insl
jno
lcall
decl
dec
incl
call
push
decl
fstp
jmp
loop
in
in
in
push
lock
repz
repz
icebp
icebp
push
lock
jmp
jmp
in
in
mov
addb
xlat
xlat
dec
enter
rol
popa
arpl
cmp
cmp
inc
inc
dec
decl
push
lcall
jmp
jo
jo
jnp
jbe
cmp
test
jnp
test
jne
jle
insb
jb
jmp
imul
dec
dec
dec
incl
inc
decl
dec
jnp
jl
mov
mov
rcl
sar
fcmovu
fcomp
fdivr
loope
loope
out
lock
hlt
hlt
push
div
push
div
clc
clc
clc
clc
clc
clc
push
div
push
div
out
out
lock
ljmp
call
push
push
incl
decl
push
lcall
ljmp
jae
jbe
cmp
mov
decl
cltd
fwait
decl
xchg
xchg
incl
addb
pusha
pushw
push
pop
incl
dec
cmp
inc
decl
dec
pushl
jno
ret
ret
ret
jmp
loop
call
out
out
push
repnz
repz
repnz
lock
in
out
out
call
rcl
jl
jl
stos
stos
stos
call
rcl
call
rcl
dec
lret
lret
js
js
inc
inc
inc
pushl
cmp
incl
dec
decl
push
lcall
jmp
insb
ljmp
ja
outsl
jns
pushl
cmp
insb
js
jmp
lcall
insl
call
decl
push
cmp
dec
pushl
cmp
jmp
jmp
int
call
xlat
xlat
fcos
fcmovu
in
in
in
push
repnz
cmc
cmc
push
div
clc
clc
clc
clc
clc
clc
push
div
push
div
push
icebp
icebp
jmp
jmp
fdivr
lods
scas
scas
decl
push
jmp
xor
ljmp
cmp
pushl
inc
dec
pushl
dec
push
ds
popa
incl
decl
jbe
push
jae
call
xchg
pop
orl
pushl
movsl
js
test
decl
mov
enter
int
mov
add
rolb
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
out
repz
in
icebp
repnz
jmp
out
fsubp
jecxz
aad
lret
iret
sar
mov
mov
jmp
xchg
xchg
incl
jae
lcall
arpl
dec
push
push
decl
push
lcall
pop
ljmp
jmp
loope
jmp
out
out
push
lock
lock
out
out
out
in
in
in
jmp
in
dec
into
into
ljmp
lods
call
rcl
fcomp
fcos
lret
lret
lret
mov
addr16
cmp
inc
inc
decl
dec
call
pop
jmp
imul
ja
cmp
test
mov
orb
pushl
ljmp
outsl
lcall
call
push
decl
dec
call
push
decl
mov
fcos
loope
loope
in
in
jmp
lock
hlt
cmc
push
div
push
div
push
div
push
cmc
cmc
push
hlt
hlt
push
repnz
icebp
icebp
jmp
rcl
call
push
push
decl
dec
call
pop
jmp
pushl
ja
jge
test
xchg
cwtl
call
sahf
mov
call
nop
xchg
jg
xchg
je
jnp
imul
pop
decl
push
incl
dec
call
push
decl
ret
loope
loope
in
in
out
out
out
out
out
out
push
repnz
out
out
out
in
out
out
jmp
xlat
xlat
pushl
movsb
dec
enter
aad
call
aad
inc
jnp
jl
dec
dec
dec
cmp
dec
dec
call
pop
jmp
push
pushl
jge
js
test
jp
xchg
jns
xchg
jbe
test
jo
jge
data16
lcall
decl
pop
incl
cmp
incl
dec
ljmp
jb
mov
rcl
loop
loop
call
out
out
push
repnz
div
push
div
push
div
push
div
push
cmc
cmc
push
repz
lock
in
in
in
fcos
test
push
push
ljmp
ss
cs
dec
cmp
incl
decl
jo
dec
outsb
jp
push
jne
lcall
mov
pop
test
ljmp
mov
jnp
lods
incl
mov
lcall
ret
mov
sar
rcl
incl
add
rolb
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
out
repz
in
icebp
repnz
jmp
out
in
aad
int
sar
rol
pushl
test
xchg
cwtl
cwtl
incl
je
jmp
arpl
push
push
push
call
pop
ljmp
mov
fcomp
jmp
loope
jmp
out
jmp
jmp
in
in
in
in
in
in
jmp
call
loopne
xlat
xlat
xlat
call
rcl
call
jmp
loope
fcmovnu
aad
aad
mov
ja
decl
dec
incl
inc
decl
push
lcall
pusha
ljmp
outsl
pushl
jle
xchg
test
xchg
decl
incl
jle
pushl
jne
fs
decl
dec
call
push
jp
jnp
ret
ret
ret
call
xlat
xlat
jmp
out
jmp
jmp
out
out
out
push
icebp
icebp
push
cmc
cmc
push
cmc
idiv
cmc
cmc
idiv
repz
hlt
push
repz
icebp
icebp
out
lock
in
out
out
jmp
out
dec
int
decl
push
push
decl
lcall
pop
ljmp
insl
pushl
jl
addb
call
mov
cmpsl
lcall
popf
lahf
call
mov
ljmp
jo
pop
pop
popa
decl
push
decl
push
jmp
arpl
xchg
xchg
xchg
mov
loope
jmp
loopne
ljmp
in
in
in
in
in
in
ljmp
fcos
rcl
sar
aam
aam
xlat
xlat
xlat
fcmovnu
mov
xchg
call
push
incl
inc
decl
lcall
pop
jmp
imul
jbe
jns
cmp
test
incl
mov
ljmp
jp
fs
outsl
lcall
arpl
dec
push
push
aas
inc
inc
incl
dec
jmp
mov
int
jmp
in
ljmp
out
out
out
push
repz
cmc
cmc
push
cmc
cmc
push
repz
repnz
icebp
icebp
push
lock
out
out
out
jmp
xlat
xlat
jmp
push
push
ljmp
cmp
cmp
ds
pop
incl
push
call
jl
push
jns
lcall
jmp
xchg
ljmp
fwait
pushl
mov
incl
lods
mov
jmp
mov
aam
ret
aam
incl
add
mov
add
add
add
add
add
jle
add
outsb
add
add
add
dec
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
out
repz
in
icebp
repnz
jmp
out
in
fcomp
iret
rcl
inc
mov
mov
mov
lcall
mov
jmp
push
lcall
pop
incl
rol
jmp
loope
jmp
loope
jmp
out
jmp
in
in
ljmp
jmp
call
out
call
out
jmp
loop
fstp
fcmovu
mov
call
decl
dec
call
jmp
ljmpw
jne
jnp
cmp
lea
cltd
call
xchg
xchg
decl
test
ljmp
insb
lcall
decl
push
decl
push
ljmp
imul
fcomp
fdivr
jmp
lock
repnz
cmc
cmc
push
div
push
div
push
div
out
out
out
jmp
out
jmp
out
in
in
in
jmp
jmp
loopne
loopne
into
into
into
incl
pop
pop
call
push
lcall
ljmp
jb
jl
cmp
lea
lcall
cmpsl
cmpsl
jmp
test
lcall
lcall
addb
jmp
call
call
pop
ljmp
outsb
call
mov
loope
in
in
call
in
in
jmp
jmp
jmp
jmp
ljmp
call
call
jecxz
fdivr
fstp
mov
ljmp
pop
decl
call
push
jmp
ljmp
js
jle
addl
xchg
decl
mov
jns
cmp
je
jmp
imul
inc
dec
dec
incl
dec
call
pop
ljmp
rcl
jmp
in
in
in
in
push
lock
hlt
hlt
push
div
push
cmc
cmc
push
div
push
lock
out
jmp
jecxz
jmp
jmp
jmp
jmp
in
in
call
push
push
pushl
cmp
dec
cmp
pop
pusha
decl
imul
insb
jbe
push
je
lcall
mov
pusha
test
ljmp
mov
jnp
scas
incl
mov
lcall
ror
mov
sar
mov
incl
add
mov
add
add
add
add
add
add
add
outsb
add
add
add
dec
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
out
repnz
in
lock
call
out
in
fcomp
iret
rcl
inc
mov
mov
mov
lcall
mov
push
insb
lcall
pop
jmp
decl
mov
rcl
fdivr
loope
loope
out
out
jmp
jmp
in
in
in
out
lock
out
out
out
in
out
out
jmp
in
jmp
in
ljmp
call
fcmovu
mov
mov
arpl
push
push
push
lcall
pop
ljmp
insb
pushl
jp
addb
call
popf
lcall
cltd
fwait
call
mov
outsl
jno
jmp
call
decl
push
lcall
pop
ljmp
fcmovu
jmp
icebp
icebp
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
div
push
div
push
icebp
icebp
jmp
out
jmp
out
in
in
in
jmp
loop
call
incl
pop
pop
call
pop
jmp
push
incl
xchg
xchg
lcall
movsb
movsl
jmp
lods
scas
jmp
cmpsb
cmpsl
lcall
xchg
xchg
incl
jns
ljmp
push
pop
pop
pop
lcall
popa
js
jns
xchg
xchg
xchg
pushl
fcmovnu
call
call
in
in
in
in
out
out
out
out
out
out
in
in
in
jmp
jmp
in
in
in
jmp
jecxz
in
in
in
fcmovu
ret
mov
outsl
outsl
call
pop
lcall
pop
jmp
push
jle
cmp
mov
call
cwtl
lcall
xchg
incl
jl
ljmp
jno
pop
bound
push
push
incl
call
push
decl
jmp
jecxz
in
in
in
push
repz
hlt
hlt
push
cmc
cmc
push
cmc
cmc
push
cmc
cmc
push
repnz
call
jecxz
jmp
jmp
ljmp
fstp
xchg
xchg
xchg
decl
push
pushl
inc
inc
cmp
push
pop
decl
call
jo
push
jno
lcall
test
pusha
orl
jae
movsl
jp
stos
incl
lods
mov
lcall
iret
pushl
xlat
lret
incl
add
mov
add
add
add
add
add
add
add
outsb
add
add
add
dec
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
out
repnz
in
lock
call
out
in
fcomp
iret
rcl
inc
enter
mov
mov
sahf
mov
nop
jle
cmp
outsl
jo
arpl
insb
insl
insl
call
mov
xlat
xlat
xlat
fcomp
fdivr
fdivr
out
out
ljmp
out
lock
out
out
out
ljmp
call
out
jmp
loopne
push
hlt
hlt
fcos
mov
movsb
ljmp
jno
pop
pop
pop
jmp
ljmp
jno
jl
cmp
mov
lcall
mov
mov
call
nop
xchg
incl
js
ljmp
insb
lcall
pop
decl
push
lcall
pop
lcall
fcomp
jmp
repz
cmc
cmc
push
div
push
div
push
div
push
div
push
hlt
hlt
push
icebp
icebp
out
out
out
in
in
in
jmp
dec
lret
lret
decl
bound
pop
pop
pop
ljmp
insb
jp
jge
xchg
xchg
lcall
stos
lods
ljmp
mov
ljmp
stos
lods
jmp
cltd
lcall
jge
ljmp
jmp
jmp
imul
lea
sar
fcomp
fdivr
jmp
out
in
in
in
out
out
out
out
out
out
in
in
in
call
call
out
loope
loope
div
idiv
jecxz
jecxz
int
int
lods
lods
lods
incl
arpl
pop
popa
popa
ljmp
outsb
js
jl
test
xchg
call
lahf
mov
call
xchg
cwtl
decl
addl
push
lcall
pop
decl
dec
call
push
jle
jg
xlat
xlat
xlat
jmp
jecxz
out
out
out
push
hlt
hlt
push
div
push
div
push
cmc
cmc
push
hlt
hlt
push
hlt
hlt
push
lock
in
in
in
in
in
in
jmp
jecxz
call
rcl
lcall
pop
pop
ds
dec
incl
decl
popa
call
imul
outsb
jbe
pop
jbe
jmp
mov
push
lcall
popf
stos
incl
lods
mov
xchg
mov
lcall
ror
mov
sar
mov
fdivr
shl
out
add
add
add
scas
add
add
add
add
add
add
add
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
in
icebp
repz
ljmp
jmp
call
in
fcomp
rcl
aad
leave
lret
int3
mov
mov
jmp
xchg
xchg
incl
jne
ljmp
insb
pushl
jae
xchg
xchg
xchg
ljmp
mov
call
rcl
jmp
loopne
out
out
ljmp
jmp
out
call
in
jmp
loop
fstp
in
in
in
fcmovu
int3
int3
int3
jmp
js
jmp
ljmp
insb
pushl
jns
addl
lcall
movsb
movsl
jmp
cmpsl
test
mov
lahf
mov
decl
jg
pushl
jae
popa
arpl
pop
pop
pop
jmp
lcall
aad
jmp
repz
div
push
clc
clc
clc
clc
stc
clc
clc
stc
push
div
push
hlt
hlt
push
repz
repnz
out
out
out
jmp
jmp
jecxz
jecxz
ret
ret
ret
call
imul
jno
je
jg
cmp
cwtl
fwait
pushf
jmp
scas
scas
pushl
mov
pushl
mov
jmp
sahf
lahf
decl
test
push
outsb
outsb
jle
jg
xchg
sar
lret
lret
lret
lret
jmp
loop
fstp
in
in
call
in
in
ljmp
jmp
in
jmp
in
fdivr
in
in
in
jmp
in
call
rcl
ljmp
mov
pushw
jae
jne
jg
cmp
lea
lcall
movsl
jmp
mov
mov
decl
jg
ljmp
jae
popa
callw
pop
lcall
pop
incl
rcl
jmp
in
out
out
out
push
div
clc
clc
clc
push
div
clc
clc
clc
push
div
push
hlt
hlt
push
repnz
repnz
out
out
out
jmp
jmp
in
in
int3
int
jmp
arpl
inc
push
push
decl
pop
call
call
jno
pop
jne
jmp
mov
imul
pushl
mov
incl
stos
mov
xchg
mov
lcall
ror
mov
sar
mov
xlat
into
fsubp
call
jecxz
incl
add
mov
add
add
add
xchg
add
add
add
add
add
pop
add
add
add
cmp
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
in
icebp
repz
in
icebp
repz
jmp
jmp
out
jmp
in
fcmovnu
rcl
xlat
dec
int
mov
mov
jmp
cltd
lcall
jl
pushl
jb
je
jne
mov
mov
pushl
rcl
sar
jmp
jecxz
jmp
loop
jmp
out
jmp
jecxz
call
xlat
xlat
dec
int
fcmovu
loope
loope
fdivrp
inc
mov
js
jns
imul
jae
jle
cmp
xchg
cltd
lcall
test
ljmp
lods
scas
ljmp
cmpsl
test
pushf
lahf
lahf
call
xchg
ljmp
insl
jmp
ljmp
lcall
rcl
jmp
out
out
out
out
push
repnz
hlt
hlt
push
cmc
cmc
push
cmc
cmc
push
hlt
hlt
push
hlt
hlt
push
hlt
hlt
push
icebp
icebp
out
out
out
ljmp
inc
rol
xchg
xchg
xchg
ljmp
jo
insb
insl
outsb
jp
jl
mov
cwtl
lcall
lods
lods
ljmp
mov
pushl
mov
mov
stos
lods
scas
jmp
cwtl
cltd
decl
jge
pushl
jb
jo
jb
jl
jge
test
mov
mov
int3
int3
call
aad
jmp
in
fdivrp
call
out
fcmovnu
into
into
into
call
aad
jmp
loopne
fcos
rcl
sar
mov
xchg
ljmp
jo
jnp
jle
xchg
xchg
lcall
movsl
cmpsl
jmp
lods
lods
jmp
cmpsb
cmpsl
lcall
xchg
incl
jl
ljmp
jmp
jmp
incl
int3
jmp
loop
in
in
in
out
lock
repz
repz
hlt
hlt
push
repz
hlt
hlt
push
repnz
icebp
icebp
out
out
out
ljmp
dec
lret
lret
lcall
imul
push
bound
pop
insb
jo
arpl
ljmp
test
outsb
xchg
jnp
mov
incl
stos
mov
xchg
mov
lcall
mov
iret
pushl
aad
dec
fucom
call
loopne
ftst
call
mov
add
scas
add
add
add
add
add
add
add
push
add
add
add
cmp
add
sub
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
ljmp
call
jmp
out
fucom
loope
rcl
fdivr
int
sar
ret
mov
mov
scas
scas
lcall
xchg
xchg
incl
jns
pushl
jbe
addb
jl
jge
xchg
xchg
xchg
ljmp
mov
inc
fcmovnu
loop
loop
loopne
loopne
mov
mov
fstp
fcos
leave
leave
leave
mov
mov
pushl
je
jp
jl
xchg
xchg
lcall
test
ljmp
mov
mov
mov
scas
mov
ljmp
cmpsb
cmpsl
lcall
nop
xchg
incl
ja
ljmp
insb
pushl
jae
cltd
lcall
jecxz
jecxz
jmp
jmp
out
out
out
push
repnz
hlt
hlt
push
hlt
hlt
push
hlt
hlt
push
repz
repnz
out
out
out
jmp
jmp
out
out
fdivr
mov
addb
jne
ja
addl
lahf
jmp
mov
pushl
mov
sar
mov
mov
jmp
lahf
mov
incl
jns
pushl
pushl
js
jge
jle
jge
jle
test
cmpsb
decl
lods
lods
mov
xlat
xlat
jmp
loope
jmp
loope
mov
mov
fcmovu
fcmovu
iret
iret
iret
inc
rol
cltd
cltd
cltd
jp
jl
jae
jne
ja
jp
addb
fwait
popf
sahf
jmp
lods
ljmp
mov
ljmp
lods
scas
jmp
pushf
popf
decl
xchg
ljmp
insl
ljmp
imul
lea
fdivrp
jmp
out
out
push
icebp
icebp
push
repnz
repz
push
repz
push
repz
repnz
lock
in
in
in
jmp
call
loopne
test
outsb
lcall
jmp
outsl
jmp
jnp
insl
jle
pushl
jp
xchg
incl
mov
lods
call
mov
jmp
ror
mov
int
mov
aam
rcl
dec
fndisi(8087
call
call
in
fucomip
in
incl
add
mov
add
stos
add
add
add
add
add
add
add
add
push
add
add
add
cmp
add
sub
add
and
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
jmp
out
lock
jmp
jmp
jmp
jmp
call
dec
rcl
inc
enter
mov
mov
movsb
test
call
lea
pushl
jns
jno
jae
insl
outsb
outsl
ljmp
insb
jmp
push
jmp
jmp
pushl
jae
mov
mov
jnp
jl
data16
pop
ljmp
outsl
decl
mov
decl
jp
pushl
jns
jl
addl
lcall
cmpsl
test
lods
mov
pushl
mov
mov
pushl
lods
lods
jmp
cwtl
cwtl
decl
addb
jae
jne
jnp
jge
ljmp
mov
sar
rol
mov
mov
mov
inc
rol
ret
inc
rol
mov
mov
mov
jns
jp
jns
jnp
jge
jg
mov
jmp
mov
pushl
mov
ret
rol
mov
mov
mov
mov
fwait
pushf
decl
cmp
jns
pushl
je
insl
outsb
outsb
ljmp
insl
jmp
push
jmp
jmp
ljmp
incl
mov
ljmp
push
pop
pop
pop
jmp
push
lcall
mov
nop
jge
jle
jne
jbe
jns
jnp
addl
pushf
jmp
lods
scas
pushl
mov
mov
pushl
scas
scas
jmp
fwait
pushf
decl
addl
pushl
js
xchg
mov
mov
ret
mov
mov
mov
mov
ret
rol
mov
stos
stos
decl
jbe
ljmp
jno
data16
jno
insl
js
pushl
jns
incl
cltd
mov
call
scas
mov
popf
mov
jmp
lret
pushl
int
inc
aad
dec
call
call
in
fucomip
in
jmp
in
out
incl
add
test
add
mov
add
add
add
add
add
outsl
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
jmp
out
lock
ljmp
loop
jmp
fdivrp
rcl
xlat
dec
iret
sar
ret
pushl
scas
scas
lcall
xchg
xchg
incl
addb
imul
fs
popa
lcall
pop
call
push
call
push
call
push
lcall
pop
lcall
call
pop
call
push
call
push
lcall
pop
jmp
ljmpw
outsl
pushl
je
je
jne
je
jbe
jp
jl
addb
cwtl
fwait
pushf
jmp
scas
scas
pushl
mov
sar
rol
mov
mov
mov
test
mov
xchg
decl
addb
jae
jne
je
jne
jb
je
jae
je
jo
jno
insl
outsb
outsb
ljmp
insb
ljmp
imul
push
ljmp
insb
ljmp
outsb
ljmp
jo
jae
je
jne
ja
js
jp
jne
jbe
js
jnp
jl
jg
mov
xchg
lcall
lods
lods
pushl
mov
inc
enter
lret
inc
leave
lret
mov
mov
ljmp
mov
cwtl
decl
addb
outsb
jo
jmp
jmp
arpl
pop
pop
pop
call
push
call
push
call
push
call
pop
lcall
lcall
pop
call
push
decl
push
call
pop
jmp
arpl
imul
jb
pushl
pushl
pushl
jns
jle
cmp
xchg
cwtl
cwtl
jmp
stos
lods
pushl
mov
mov
mov
mov
mov
stos
lods
scas
jmp
cwtl
cltd
decl
addb
je
jbe
jb
jae
jae
je
jb
jae
jno
jb
insl
outsb
outsb
ljmp
ljmp
push
push
imul
insl
outsb
outsl
pushl
jb
jb
jne
jae
jbe
jno
jne
insl
jno
ljmp
jbe
jb
jl
jp
xchg
orl
call
lods
mov
sahf
mov
jmp
mov
lret
lret
mov
aam
dec
fneni(8087
call
loopne
call
in
fucom
jmp
loop
out
jmp
out
repnz
add
lahf
add
add
add
add
add
jbe
add
push
add
pop
add
add
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
jmp
repnz
jmp
bnd
in
out
jmp
jmp
jmp
jmp
jmp
in
fucom
loope
aad
iret
rcl
inc
lret
mov
mov
jmp
lahf
mov
incl
jle
pushl
ljmp
jmp
lcall
pop
lcall
pop
call
call
push
call
push
call
push
call
push
call
push
call
push
call
pop
lcall
pop
jmp
ljmp
insb
pushl
jae
js
jnp
addl
pushf
jmp
mov
pushl
mov
ret
enter
mov
mov
mov
cmpsl
stos
lods
lcall
xchg
xchg
decl
addl
jmp
imul
pop
pop
pop
lcall
pop
call
push
call
push
call
push
call
push
lcall
pop
lcall
jmp
jmp
imul
je
ja
jle
cmp
xchg
xchg
xchg
lcall
stos
lods
pushl
mov
inc
leave
lret
int3
int
lret
dec
into
iret
inc
leave
lret
mov
mov
ljmp
mov
xchg
decl
addl
jmp
lcall
pusha
lcall
pop
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
lcall
pop
jmp
arpl
push
jo
pushl
js
jle
cmp
xchg
xchg
xchg
lcall
lods
lods
pushl
mov
ret
ret
inc
enter
mov
mov
mov
stos
lods
scas
jmp
cwtl
cltd
decl
addl
jb
ljmp
imul
arpl
pop
pop
pusha
lcall
pop
call
pop
call
push
call
push
call
push
call
pop
lcall
pop
lcall
jmp
jmp
imul
jo
pushl
js
js
cmp
xchg
decl
lahf
mov
jmp
mov
ljmp
ret
mov
int
mov
rcr
inc
xlat
fdivr
int3
fndisi(8087
call
loope
ljmp
in
out
jmp
out
repnz
jmp
hlt
incl
add
xchg
add
add
add
add
add
add
add
bound
add
push
add
add
add
cmp
add
das
add
add
add
sbb
add
adc
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jmp
repnz
jmp
bnd
in
out
jmp
jmp
jmp
jmp
jmp
out
fsubp
jecxz
fdivrp
rcl
xlat
dec
iret
sar
enter
mov
jmp
lahf
mov
decl
test
pushl
je
insb
outsb
outsb
jmp
imul
popa
bound
pop
pusha
pusha
lcall
pop
lcall
pop
lcall
pusha
jmp
jmp
push
ljmp
jno
jbe
js
jge
jg
xchg
xchg
lcall
movsb
movsl
ljmp
mov
mov
ret
inc
leave
lret
int3
int
leave
int3
int
enter
enter
ret
mov
mov
test
mov
cwtl
decl
test
jp
jl
jae
jbe
insl
outsl
outsl
ljmp
push
data16
jmp
arpl
pusha
popa
popa
jmp
arpl
arpl
pushw
insb
outsb
outsb
pushl
je
jns
jnp
addl
xchg
lcall
test
mov
mov
ret
dec
lret
int3
rcl
dec
rcl
dec
rcl
call
rcl
dec
into
iret
dec
lret
ret
mov
mov
jmp
mov
cwtl
decl
xchg
pushl
jbe
insl
outsl
outsl
ljmp
push
data16
lcall
pusha
lcall
pop
lcall
pop
lcall
pusha
jmp
arpl
data16
push
insl
outsl
outsl
pushl
jbe
jp
jl
addl
call
mov
lods
pushl
mov
ret
enter
lret
dec
int3
int
enter
leave
lret
ret
mov
mov
ljmp
movsb
movsl
lcall
xchg
xchg
incl
jg
pushl
js
insl
outsl
jo
imul
jmp
arpl
pusha
popa
lcall
popa
lcall
popa
jmp
arpl
data16
insb
ljmp
jo
je
js
jns
jle
addl
xchg
call
movsb
cmpsl
jmp
mov
ljmp
rol
mov
lret
lret
rcl
inc
rcr
dec
fneni(8087
call
call
loop
fsub
jmp
fsubrp
jmp
in
lock
out
repnz
jmp
hlt
in
repnz
incl
add
xchg
add
addb
add
add
jbe
add
outsb
add
add
add
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jmp
bnd
in
out
call
in
out
jmp
out
jmp
in
fcmovnu
fcomp
rcl
aad
lret
inc
enter
mov
ljmp
mov
lcall
mov
jl
jle
js
jp
jne
ja
jb
je
jno
jae
insl
outsl
outsl
ljmp
jno
outsl
jno
pushl
jbe
jne
ja
jp
jl
jle
cmp
mov
xchg
lcall
test
stos
scas
scas
pushl
mov
enter
lret
dec
rcl
call
rcl
call
rcl
dec
rcl
dec
into
iret
inc
leave
lret
ret
mov
mov
ljmp
mov
pushf
call
mov
jge
jg
jns
jnp
jne
ja
jae
jbe
jb
je
jno
jae
jb
je
jne
ja
js
jp
jl
jle
addb
decl
cltd
lcall
test
mov
mov
leave
int3
int
int3
rcl
call
aad
call
xlat
fdivr
rcl
fdivr
aad
rcl
dec
rcl
dec
int3
int
ret
mov
mov
ljmp
movsb
movsl
lcall
xchg
xchg
decl
xchg
jns
jnp
jae
jbe
jae
jbe
outsb
jo
ljmp
jno
outsl
jno
ljmp
jno
jb
je
jae
jbe
jns
jnp
jge
jg
addl
call
pushf
popf
jmp
scas
scas
pushl
mov
inc
leave
lret
rcl
dec
rcl
call
rcl
dec
rcl
dec
rcl
dec
lret
enter
sar
mov
ljmp
test
pushf
sahf
lahf
call
incl
addb
jbe
js
jae
jbe
jb
je
outsl
jno
pushl
je
jae
jbe
jbe
jns
jp
jge
jl
cmp
xchg
call
lcall
mov
mov
ljmp
mov
leave
inc
lret
iret
inc
rcl
dec
aam
dec
fcomp
call
fsubp
call
loopne
frstpm(287
jmp
jmp
in
out
jmp
in
out
ljmp
in
repnz
push
cmc
idiv
add
add
add
je
add
outsl
add
add
add
bound
add
pop
add
add
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
lock
in
repnz
jmp
out
icebp
ljmp
jmp
call
out
fucom
loop
fcmovu
call
aad
dec
into
iret
inc
mov
mov
ljmp
test
lcall
cltd
lcall
decl
xchg
incl
addl
incl
mov
decl
xchg
xchg
lcall
mov
lods
ljmp
mov
ret
leave
lret
into
iret
call
rcl
call
xlat
fdivr
aad
aad
aad
rcl
dec
rcl
dec
into
iret
inc
enter
mov
ljmp
stos
lcall
cltd
lcall
nop
xchg
decl
xchg
incl
test
incl
mov
call
cltd
lcall
cmpsb
cmpsl
ljmp
mov
mov
enter
int
into
rcl
call
xlat
fdivr
xlat
fcmovnu
fdivrp
fdivrp
fcmovnu
xlat
fcmovnu
call
call
rcl
dec
into
iret
inc
enter
sar
mov
ljmp
stos
lcall
fwait
pushf
call
nop
xchg
decl
xchg
incl
addl
incl
xchg
decl
xchg
lcall
mov
stos
ljmp
mov
inc
enter
iret
dec
rcl
call
aad
call
call
call
xlat
fdivr
rcl
fdivr
rcl
aam
lret
inc
leave
lret
ret
mov
mov
jmp
movsb
movsl
lcall
xchg
xchg
decl
lea
incl
test
incl
xchg
decl
xchg
xchg
call
pushf
popf
lcall
test
ljmp
mov
pushl
ret
inc
leave
int3
inc
iret
sar
lret
dec
fcomp
call
fcmovnu
call
loopne
fsub
in
fsubrp
jmp
jecxz
out
jmp
in
out
jmp
in
lock
jmp
repnz
out
repz
push
cmc
idiv
lock
idiv
add
add
add
add
add
add
pop
add
add
add
dec
add
add
add
cmp
add
xor
add
sub
add
and
add
sbb
add
adc
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
lock
in
repnz
ljmp
ljmp
jmp
ljmp
in
loopne
xlat
fcmovnu
call
rcl
dec
into
iret
inc
enter
sar
mov
mov
lods
mov
jmp
mov
lahf
lcall
cwtl
cwtl
call
xchg
xchg
decl
xchg
xchg
call
xchg
xchg
call
pushf
popf
lcall
cmpsb
cmpsl
jmp
mov
pushl
mov
dec
lret
int3
rcl
call
aad
call
fdivrp
fcmovnu
fcmovnu
fcmovnu
xlat
fcmovnu
call
xlat
fdivr
rcl
dec
into
iret
inc
enter
ret
mov
mov
lods
mov
jmp
mov
mov
call
xchg
xchg
call
xchg
call
cwtl
cwtl
lcall
pushf
popf
jmp
test
ljmp
mov
pushl
rol
ret
dec
into
iret
call
rcl
call
fdivrp
fucom
loope
fucom
loope
fsubp
jecxz
fucom
loope
fucom
loope
fcmovnu
xlat
fcmovnu
call
aad
dec
into
iret
inc
enter
ret
mov
mov
lods
mov
jmp
movsb
movsl
lcall
fwait
pushf
call
xchg
xchg
call
xchg
xchg
call
xchg
xchg
call
cwtl
cwtl
lcall
sahf
lahf
jmp
test
mov
mov
mov
mov
rol
leave
lret
into
iret
call
aad
call
xlat
fdivr
fdivrp
xlat
fcmovnu
fcmovnu
fdivrp
fdivrp
aad
rcl
dec
rcl
dec
lret
rol
mov
mov
ljmp
stos
lods
jmp
lahf
mov
call
xchg
xchg
call
xchg
call
xchg
call
pushf
pushf
lcall
movsb
movsl
jmp
scas
mov
mov
mov
mov
mov
inc
enter
int3
int
lret
dec
fcos
aam
fdivrp
xlat
fsubp
fsub
jecxz
ljmp
jmp
call
lock
jmp
repnz
in
repnz
out
repz
push
cmc
idiv
lock
idiv
repnz
incl
add
pop
add
add
add
push
add
add
add
dec
add
add
add
cmp
add
xor
add
sub
add
and
add
sbb
add
push
add
add
add
add
add
or
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
in
icebp
repz
in
icebp
repz
out
repz
out
repz
in
icebp
repz
in
lock
ljmp
jmp
out
jmp
in
fcmovnu
xlat
fcmovnu
call
aad
dec
rcl
dec
lret
ret
mov
mov
mov
scas
mov
ljmp
stos
lods
jmp
cmpsb
cmpsl
jmp
mov
movsl
jmp
test
jmp
scas
scas
ljmp
mov
mov
mov
mov
enter
iret
call
rcl
call
xlat
fdivr
xlat
fcmovnu
fcmovnu
fucom
loope
fsubp
jecxz
fsubp
jecxz
fsubp
jecxz
fcmovnu
fdivrp
xlat
fcmovnu
call
aad
dec
rcl
dec
int3
int
ret
mov
mov
mov
scas
mov
ljmp
lods
jmp
test
mov
movsb
movsl
jmp
test
lods
ljmp
mov
pushl
mov
mov
dec
lret
int3
rcl
call
aad
call
fdivrp
fucom
loope
loopne
in
loopne
in
loop
out
loop
out
loopne
in
fsubp
jecxz
fcmovnu
xlat
fcmovnu
call
aad
dec
rcl
dec
int3
int
enter
sar
mov
mov
ljmp
lods
jmp
test
jmp
movsb
movsl
jmp
cmpsb
cmpsl
jmp
test
lods
ljmp
mov
pushl
mov
sar
leave
int3
int
into
rcl
call
xlat
fdivr
aad
fdivrp
fucom
loope
fsubp
jecxz
fsubp
jecxz
fsubp
jecxz
fucom
loope
fdivrp
xlat
fcmovnu
call
xlat
fdivr
rcl
aam
lret
inc
enter
ret
mov
mov
ljmp
lods
jmp
test
jmp
movsb
movsl
jmp
test
jmp
lods
lods
ljmp
mov
mov
mov
mov
enter
lret
dec
rcl
call
rcl
call
fcomp
fdivrp
fnclex
in
call
jmp
in
out
jmp
in
out
jmp
repnz
jmp
repnz
out
repz
out
repz
push
cmc
idiv
lock
idiv
repnz
push
div
push
idiv
incl
add
dec
add
add
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
lock
idiv
out
repz
push
cmc
idiv
out
repz
push
hlt
cmc
in
lock
in
icebp
repnz
jmp
jmp
jmp
call
in
fucom
loope
xlat
fcmovnu
call
xlat
fdivr
rcl
aam
lret
inc
leave
lret
enter
ret
mov
mov
pushl
mov
pushl
mov
pushl
mov
pushl
mov
pushl
mov
mov
inc
leave
lret
lret
int3
rcl
call
aad
call
fcmovnu
fdivrp
fucom
loope
loopne
in
loopne
in
in
jmp
jmp
call
in
fsubp
jecxz
fucom
loope
fdivrp
aad
rcl
aam
lret
dec
lret
enter
ret
mov
mov
pushl
mov
pushl
mov
pushl
mov
pushl
mov
mov
inc
leave
lret
into
iret
dec
rcl
call
xlat
fdivr
fdivrp
fcmovnu
fsubp
jecxz
loop
out
in
jmp
jmp
call
jmp
jmp
out
jmp
in
fucom
loope
fdivrp
rcl
fdivr
rcl
aam
int3
rcl
dec
lret
enter
mov
mov
mov
pushl
mov
pushl
mov
pushl
mov
pushl
mov
mov
mov
ret
enter
lret
dec
into
iret
call
rcl
call
fdivrp
fucom
loope
fsubp
jecxz
loop
out
loop
out
loop
out
in
jmp
fsubp
jecxz
fucom
loope
fcmovnu
aad
rcl
dec
rcl
dec
lret
leave
lret
ret
mov
mov
mov
pushl
mov
pushl
mov
pushl
mov
pushl
mov
sar
ret
dec
lret
int
sar
rcl
call
fcomp
call
fsub
jecxz
fsubp
in
loop
jmp
jmp
jmp
ljmp
out
repz
push
cmc
idiv
out
repz
push
cmc
idiv
repnz
push
div
push
idiv
push
idiv
push
idiv
incl
add
cmp
add
cmp
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
hlt
clc
stc
push
div
push
clc
stc
push
div
push
hlt
cmc
push
div
out
repnz
in
lock
ljmp
jmp
call
out
fsubp
jecxz
fcmovnu
xlat
fcmovnu
call
xlat
fdivr
rcl
aam
into
rcl
dec
into
iret
dec
lret
enter
inc
ret
mov
rol
mov
rol
mov
ret
inc
ret
inc
enter
lret
lret
int3
rcl
dec
rcl
call
rcl
call
fdivrp
fucom
loope
fsubp
jecxz
loopne
in
in
jmp
jmp
ljmp
out
jmp
in
jmp
jmp
out
fsubp
jecxz
fcmovnu
xlat
fcmovnu
call
xlat
fdivr
rcl
dec
rcl
dec
into
iret
dec
lret
enter
inc
ret
inc
ret
mov
rol
mov
ret
inc
ret
inc
enter
leave
int3
int
int3
rcl
call
rcl
call
aad
call
fcmovnu
fcmovnu
fsubp
jecxz
loop
out
loop
out
out
jmp
out
jmp
call
out
out
ljmp
jmp
ljmp
loop
out
fsubp
jecxz
fcmovnu
fdivrp
aad
rcl
aam
into
rcl
dec
rcl
dec
lret
leave
lret
rol
inc
ret
mov
rol
mov
rol
mov
ret
inc
enter
lret
dec
into
iret
dec
rcl
call
rcl
call
xlat
fdivr
xlat
fcmovnu
fcmovnu
fsubp
jecxz
loop
out
loop
out
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
loop
out
loop
out
loopne
in
fucom
loope
fdivrp
rcl
fdivr
rcl
dec
rcl
dec
into
iret
dec
int3
int
enter
inc
mov
ret
mov
ret
mov
ret
inc
leave
lret
int3
int
lret
call
rcl
call
aad
call
fdivrp
fsubp
jecxz
loopne
in
in
jmp
ljmp
out
repnz
hlt
cmc
push
hlt
cmc
push
clc
stc
push
div
push
div
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
incl
add
sub
add
add
add
add
add
add
add
and
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
clc
stc
push
clc
stc
push
div
push
div
push
clc
stc
push
hlt
cmc
push
div
out
repnz
out
repnz
in
lock
call
in
in
jmp
call
out
loopne
in
fcmovnu
xlat
fcmovnu
call
call
aad
call
aad
dec
rcl
dec
rcl
dec
rcl
dec
into
iret
dec
int3
int
leave
int3
int
leave
int3
int
leave
int3
int
int3
rcl
dec
rcl
dec
rcl
call
rcl
call
aad
call
call
fcmovnu
fdivrp
fsubp
jecxz
fsubp
jecxz
in
jmp
jmp
ljmp
ljmp
ljmp
call
in
in
call
call
out
fsubp
jecxz
fucom
loope
fcmovnu
aad
rcl
fdivr
rcl
aam
into
rcl
dec
rcl
dec
into
iret
dec
into
iret
dec
rcl
dec
into
iret
dec
rcl
dec
into
iret
dec
rcl
dec
rcl
call
rcl
call
aad
call
call
fcmovnu
fcmovnu
fsubp
jecxz
loopne
in
in
jmp
call
out
out
ljmp
in
lock
out
repnz
ljmp
ljmp
jmp
call
in
fsubp
jecxz
fucom
loope
xlat
fcmovnu
call
call
xlat
fdivr
rcl
call
rcl
dec
rcl
dec
rcl
dec
rcl
dec
int3
int
leave
int3
int
leave
int3
int
leave
int3
int
lret
dec
rcl
dec
rcl
dec
rcl
call
aad
call
xlat
fdivr
xlat
fcmovnu
fdivrp
fucom
loope
loopne
in
loop
out
out
jmp
out
jmp
call
out
out
in
lock
ljmp
ljmp
call
ljmp
loopne
in
fucom
loope
fcmovnu
xlat
fcmovnu
call
xlat
fdivr
rcl
dec
rcl
dec
rcl
dec
rcl
dec
into
iret
dec
rcl
dec
into
iret
dec
rcl
dec
into
iret
dec
rcl
dec
rcl
dec
rcl
call
aad
call
xlat
fdivr
xlat
fcmovnu
fcmovnu
fucom
loope
loop
out
in
jmp
ljmp
out
repnz
out
repnz
hlt
cmc
push
hlt
cmc
push
div
push
div
push
div
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
incl
add
and
add
and
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
std
sti
cld
cld
sti
cld
cld
sti
cld
cld
sti
cld
cld
stc
cli
cli
stc
cli
cli
stc
cli
cli
push
clc
clc
push
hlt
hlt
push
hlt
hlt
out
lock
in
out
out
in
out
out
jmp
call
call
jmp
in
jmp
loopne
jmp
loopne
loope
loop
loope
loop
loope
loop
in
out
in
out
out
call
in
out
out
out
lock
repnz
repnz
div
push
div
push
div
push
div
push
clc
clc
push
hlt
hlt
push
hlt
hlt
push
hlt
hlt
out
lock
out
lock
jmp
in
jmp
ljmp
in
out
loope
loop
loopne
loopne
loopne
loopne
loopne
loopne
loope
loop
jecxz
in
in
out
out
call
jmp
in
in
out
out
push
repnz
hlt
hlt
push
hlt
hlt
push
div
push
clc
clc
push
div
push
div
push
div
push
clc
clc
push
div
push
div
push
repnz
repnz
in
out
out
jmp
in
jmp
in
jmp
call
call
jmp
loop
jmp
loop
jmp
loopne
loopne
loopne
loopne
loopne
loopne
loopne
loopne
loopne
jecxz
in
jecxz
in
out
call
jmp
out
out
in
out
out
push
repnz
hlt
hlt
push
hlt
hlt
push
div
push
clc
clc
push
div
push
clc
clc
push
div
push
hlt
hlt
push
hlt
hlt
push
repnz
out
lock
in
out
out
jmp
call
call
jmp
in
jmp
loopne
jmp
loopne
jmp
loopne
loopne
loopne
loopne
loopne
loopne
loopne
jecxz
in
jecxz
in
out
call
jmp
out
out
out
lock
repnz
div
push
div
stc
cli
cli
stc
cli
cli
sti
cld
cld
sti
cld
cld
std
sti
cld
cld
std
std
std
std
std
std
std
std
incl
add
sbb
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
or
add
push
add
add
add
add
add
add
add
add
add
add
add
add
std
std
std
std
sti
cld
cld
sti
cld
cld
std
stc
cli
cli
sti
cld
cld
stc
cli
cli
push
clc
clc
push
clc
clc
push
div
push
hlt
hlt
push
repnz
out
lock
out
lock
in
out
out
jmp
in
in
jmp
call
ljmp
out
jmp
out
jmp
in
jmp
in
jmp
out
jmp
out
jmp
out
jmp
ljmp
in
out
out
in
out
out
in
out
out
push
repnz
repnz
div
push
div
push
div
stc
cli
cli
push
div
push
clc
clc
push
clc
clc
push
clc
clc
push
clc
clc
stc
cli
cli
push
clc
clc
push
div
push
hlt
hlt
push
repnz
out
lock
out
lock
jmp
in
jmp
in
jmp
call
ljmp
out
jmp
out
jmp
in
jmp
out
jmp
out
jmp
out
jmp
ljmp
in
out
out
in
out
out
in
out
out
push
repnz
hlt
hlt
push
div
push
div
push
clc
clc
push
clc
clc
stc
cli
cli
stc
cli
cli
stc
cli
cli
stc
cli
cli
stc
cli
cli
push
clc
clc
stc
cli
cli
push
div
push
div
push
hlt
hlt
push
repnz
repnz
in
out
out
in
out
out
jmp
in
jmp
ljmp
in
out
in
out
in
out
jecxz
in
jecxz
in
in
out
in
out
in
out
out
call
jmp
in
jmp
in
in
out
out
in
out
out
out
lock
repnz
hlt
hlt
push
div
push
div
push
clc
clc
push
div
push
clc
clc
push
clc
clc
push
clc
clc
push
clc
clc
stc
cli
cli
push
clc
clc
push
clc
clc
push
hlt
hlt
push
hlt
hlt
out
lock
in
out
out
in
out
out
jmp
in
jmp
in
jmp
call
ljmp
out
jmp
out
jmp
in
jmp
out
jmp
out
jmp
out
jmp
call
in
jmp
in
in
out
out
out
lock
out
lock
hlt
hlt
push
hlt
hlt
push
div
stc
cli
cli
stc
cli
cli
stc
cli
cli
sti
cld
cld
sti
cld
cld
sti
cld
cld
sti
cld
cld
std
std
std
std
std
std
std
std
std
incl
add
adc
add
adc
add
sldt
add
add
add
add
add
add
or
add
or
add
or
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
std
std
std
std
sti
cld
cld
sti
cld
cld
std
sti
cld
cld
stc
cli
cli
stc
cli
cli
push
clc
clc
push
clc
clc
push
div
push
div
push
div
push
hlt
hlt
push
hlt
hlt
out
lock
repnz
in
out
out
in
out
out
out
lock
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
in
out
out
out
lock
in
out
out
out
lock
repnz
repnz
repnz
hlt
hlt
push
hlt
hlt
push
div
push
clc
clc
stc
cli
cli
push
clc
clc
stc
cli
cli
sti
cld
cld
stc
cli
cli
stc
cli
cli
stc
cli
cli
sti
cld
cld
stc
cli
cli
push
clc
clc
push
clc
clc
push
div
push
div
push
div
push
hlt
hlt
push
hlt
hlt
push
repnz
repnz
out
lock
in
out
out
in
out
out
out
lock
in
out
out
jmp
in
in
out
out
in
out
out
in
out
out
in
out
out
push
repnz
out
lock
hlt
hlt
push
hlt
hlt
push
div
push
div
push
div
stc
cli
cli
push
clc
clc
stc
cli
cli
stc
cli
cli
stc
cli
cli
stc
cli
cli
stc
cli
cli
stc
cli
cli
stc
cli
cli
stc
cli
cli
sti
cld
cld
push
clc
clc
stc
cli
cli
push
div
push
div
push
hlt
hlt
push
hlt
hlt
push
hlt
hlt
push
repnz
repnz
out
lock
in
out
out
out
lock
in
out
out
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
out
lock
in
out
out
in
out
out
push
repnz
out
lock
hlt
hlt
push
hlt
hlt
push
div
push
div
push
div
stc
cli
cli
push
clc
clc
push
clc
clc
sti
cld
cld
stc
cli
cli
stc
cli
cli
stc
cli
cli
stc
cli
cli
stc
cli
cli
push
clc
clc
stc
cli
cli
push
div
push
clc
clc
push
hlt
hlt
push
hlt
hlt
push
repnz
repnz
out
lock
out
lock
in
out
out
in
out
out
out
lock
in
out
out
jmp
in
in
out
out
out
lock
in
out
out
in
out
out
out
lock
out
lock
repnz
hlt
hlt
push
div
push
hlt
hlt
push
clc
clc
push
clc
clc
push
clc
clc
stc
cli
cli
sti
cld
cld
sti
cld
cld
std
sti
cld
cld
sti
cld
cld
std
std
std
std
std
std
std
std
std
std
incl
add
or
add
or
add
or
add
or
add
or
add
or
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
push
add
add
push
add
add
push
add
add
push
add
add
push
add
add
push
add
add
push
add
add
push
add
add
push
add
add
push
add
add
push
add
add
push
add
add
push
add
add
push
add
add
push
add
add
push
add
add
clc
add
add
push
add
add
jmp
add
add
lock
add
inc
add
add
push
add
add
inc
add
add
push
add
add
incl
add
add
push
add
add
incl
add
add
push
add
add
add
push
add
add
add
push
add
add
add
push
add
add
add
push
add
add
add
push
add
add
add
push
add
add
add
push
add
add
add
push
add
add
add
push
add
add
add
push
add
add
add
push
add
add
add
push
add
add
add
push
add
add
add
push
add
add
add
push
add
add
add
push
add
add
add
push
add
add
add
push
add
add
add
push
add
add
add
push
add
add
add
push
add
add
add
push
add
add
add
push
add
add
add
push
add
add
add
push
add
add
add
push
add
add
add
push
add
add
add
push
add
add
add
push
add
add
add
push
add
add
add
push
add
add
add
push
add
add
add
push
add
add
add
push
add
add
add
push
add
add
add
push
add
add
add
push
add
add
add
push
add
add
add
push
add
add
add
push
add
add
add
push
add
add
add
push
add
add
add
push
add
add
add
push
add
add
add
push
add
add
add
push
add
add
add
push
add
add
add
push
add
add
add
push
add
add
add
push
add
add
add
push
add
add
add
push
add
add
add
push
add
add
add
push
add
add
add
push
add
add
add
push
add
add
add
push
add
add
add
push
add
add
add
push
add
add
add
push
add
add
add
push
add
add
add
push
add
add
add
push
add
add
add
push
add
add
add
push
add
add
add
push
add
add
add
push
add
add
add
push
add
add
add
push
add
add
add
push
add
add
add
push
add
add
add
push
add
add
add
push
add
add
add
push
add
add
add
push
add
add
add
push
add
add
add
push
add
add
add
push
add
add
add
push
add
add
add
push
add
add
add
push
add
add
add
push
add
add
add
push
add
add
add
push
add
add
add
push
add
add
add
push
add
add
add
push
add
add
add
push
add
add
add
push
add
add
add
push
add
add
add
push
add
add
add
push
add
add
add
push
add
add
add
push
add
add
add
push
add
add
add
push
add
add
add
push
add
add
add
push
add
add
add
push
add
add
add
push
add
add
add
push
add
add
add
push
add
add
add
push
add
add
add
push
add
add
add
push
add
add
add
push
add
add
add
push
add
add
add
push
add
add
add
push
add
add
add
push
add
add
add
push
add
add
add
push
add
add
add
push
add
add
add
push
add
add
add
push
add
add
add
push
add
add
add
push
add
add
add
push
add
add
add
push
add
add
add
push
add
add
add
push
add
add
add
push
add
add
add
push
add
add
add
push
add
add
add
push
add
add
add
push
add
add
add
push
add
add
add
push
add
add
add
push
add
add
add
push
add
add
add
push
add
add
add
push
add
add
add
push
add
add
add
push
add
add
add
push
add
add
add
push
add
add
add
push
add
add
add
push
add
add
add
lock
add
add
push
add
add
pop
push
add
add
pop
push
add
add
pop
push
add
add
pop
push
add
add
pop
push
add
add
pop
push
add
add
pop
push
add
add
pop
push
add
add
pop
push
add
add
pop
push
add
add
push
add
add
push
add
add
push
add
add
push
add
add
push
add
add
push
add
add
push
add
add
add
add
add
mov
add
add
add
cmp
add
add
add
adc
add
inc
outsl
adc
outsb
jo
roll
add
popa
insb
add
add
jb
stos
lea
sbb
and
popa
call
lcall
or
push
insl
fcoml
imul
cltd
add
pop
or
arpl
gs
jb
mov
shlb
add
jns
inc
push
test
add
push
outsl
jb
add
push
cwtl
pop
inc
int
fs
xchg
mov
nop
mov
xor
push
push
je
cs
push
sub
adc
or
repnz
je
mov
adc
add
mov
int3
sbb
or
mov
adc
dec
pop
addb
dec
bound
sbb
xor
fs
jns
inc
shrl
push
daa
adc
or
xorl
dec
mov
push
inc
sub
roll
int3
addl
jmp
or
mov
int3
mov
mov
dec
and
xor
inc
hlt
sbb
test
sbb
fcoms
adcb
cmp
rcrb
xchg
jge
movsl
xchg
fs
xchg
rolb
and
or
pop
out
ror
push
in
jb
cmp
mov
and
xchg
xor
xor
jo
sub
sub
mov
and
xchg
sbb
sbb
adc
adc
or
or
and
mov
clc
enter
jb
cmp
xor
mov
and
xchg
andb
jl
fs
fcompl
aam
push
nop
and
mov
xchg
mov
shlb
gs
xor
enter
push
js
adc
call
mulb
sub
pop
je
movzwl
mov
mov
sub
cltd
xor
dec
or
mov
lods
enter
xor
mov
cmpl
mov
push
push
insl
add
mov
test
jne
add
mov
add
rorb
lea
rcrb
sbb
push
add
cli
fs
out
iret
adc
push
pop
nop
in
mov
hlt
pop
je
repnz
pop
jno
fimull
mov
mov
or
push
add
or
adc
bound
adc
push
adc
mov
sbb
push
mov
push
sub
adc
xchg
ret
nop
pop
push
push
push
mov
repz
stos
call
add
push
pop
pop
nop
cmc
cmp
aaa
or
ret
and
add
mov
mov
jmp
add
or
and
or
fistpll
xor
jne
repnz
lahf
mov
push
mov
sub
mov
rcrl
into
add
insb
call
int
bound
add
or
jnp
sub
bound
jp
add
cmpsb
das
cmp
sub
or
fisubrl
in
jl
jmp
fs
or
inc
jb
jmp
xchg
cmp
xor
nop
push
xchg
mov
enter
sbb
add
pop
push
cli
push
cmp
mov
add
add
int
sbb
shl
mov
mov
test
je
lock
in
dec
mov
andb
or
push
stc
ljmp
mov
cs
in
popf
ret
push
push
jmp
insl
push
xchg
push
sub
jns
push
nop
and
loope
ja
sub
cli
dec
inc
adc
push
sti
nop
data16
push
cli
or
repnz
sahf
sub
aam
dec
adc
push
dec
repz
xchg
out
ja
in
add
je
push
xor
or
std
imul
jne
push
jae
xchg
movl
filds
cmpsl
fbld
in
adc
sub
psubsw
or
adc
sbb
adc
sub
mov
ljmp
add
in
fisttpll
and
loop
sub
sub
inc
jge
xor
pop
cmp
or
dec
sti
xchg
pop
jbe
sbb
mov
add
push
adc
add
fsts
and
roll
jmp
ss
jbe
or
xchg
cwtl
je
sub
mov
or
gs
sahf
jmp
jne
push
adc
or
sub
inc
movsl
test
cmp
idivl
ja
mov
mov
cmp
add
cmpsb
mov
sbb
aaa
adcl
cmc
pop
adc
xor
add
and
lret
pop
pop
cmpsl
pop
dec
inc
ja
push
cmc
inc
lea
push
inc
mov
leave
xchg
stos
and
in
mov
and
imul
call
aaa
sub
jmp
cli
popa
aas
push
xchg
lret
push
je
xchg
add
add
mov
or
movsb
push
mov
and
xor
or
sub
xchg
xor
jne
push
dec
mov
rorb
add
dec
test
inc
jne
dec
mov
test
rcrb
sbb
cmp
cmp
test
adc
inc
and
or
and
inc
pop
xor
xchg
lret
adcb
stc
lds
lea
inc
ss
mul
mov
jae
or
sub
inc
mov
fmul
ret
into
loopne
mov
pop
and
mov
ret
mov
dec
cmp
sub
or
adc
repnz
cmp
add
push
pop
mov
lea
in
mov
sbb
xor
mov
push
sub
add
push
jle
jb
clc
in
xchg
pusha
mov
test
int3
xchg
cmp
mov
adc
rolb
hlt
inc
cmp
jne
mov
jae
mov
add
mov
mov
adc
xchg
or
loopne
cwtl
dec
sub
mov
aaa
push
dec
iret
xchg
or
or
ss
sbb
enter
shll
fadds
adc
cmp
and
add
xchg
mov
pop
jo
push
pop
outsb
stos
jmp
xchg
in
jno
fistpl
loopne
cmp
or
adcl
pop
or
cmp
mov
pop
test
jns
add
enter
aad
int
mov
jmp
pop
dec
fisubl
sbb
sub
hlt
mov
out
sbb
lret
popf
sub
test
jb
ja
addr16
push
loope
cmp
jbe
and
pushf
mov
jmp
in
cli
add
jl
movl
mov
mov
xchg
add
or
sbb
or
or
decl
sub
stos
loop
cld
sbb
mov
pop
cmp
or
jne
sub
add
mov
mov
and
rolb
andl
adc
dec
fnstenv
loope
inc
or
push
je
sub
sub
push
and
scas
enter
sub
loop
and
divb
and
or
cmp
jo
push
and
sar
inc
add
popa
push
jb
sahf
out
mov
addr16
and
xlat
andl
jne
mov
out
fbld
or
pop
andl
movsb
mov
xchg
dec
or
mov
adc
lea
orb
call
aaa
sub
push
jg
aad
pushf
jl
cli
jmp
add
je
or
mov
scas
adc
jns
inc
stos
adc
insb
pop
and
aad
and
dec
lods
std
sub
or
lea
rclb
xor
add
xchg
imul
dec
ret
mov
xchg
add
mov
push
add
cs
sub
es
mov
add
fldenv
nop
dec
hlt
aam
adc
pop
cwtl
lahf
adc
jmp
dec
sti
inc
adc
mov
sbb
jg
add
push
cmp
clc
sbbl
test
mov
sbb
jle
or
pop
or
sub
adc
and
or
or
mov
icebp
enter
and
jmp
dec
wrmsr
dec
inc
or
or
cmp
and
add
in
add
add
add
jne
and
and
adc
adc
sbb
rclb
add
es
out
aam
outsl
int
or
sbbl
add
adc
pusha
xchg
mov
aam
inc
movsb
lods
daa
or
add
les
mov
or
fs
insb
pop
int3
jnp
dec
add
lds
in
aas
xor
dec
lcall
clc
add
push
aaa
je
imul
ljmp
mov
sbb
int
or
mov
test
leave
or
xor
mov
cli
inc
sub
je
std
or
arpl
pop
iret
dec
aad
jne
and
push
push
rcrb
cmp
movsb
sub
dec
jge
dec
insb
adc
mov
xchg
mov
add
icebp
xchg
addr16
out
popf
xor
adc
dec
cmc
dec
push
xchg
adc
mov
mov
add
int3
gs
std
push
repnz
in
cmp
sbb
push
pop
dec
xchg
pop
fldlg2
push
push
int
sub
popf
sbb
fwait
or
sti
pop
clc
jle,pt
mov
adc
add
push
push
inc
xor
test
add
into
jecxz
mov
sbb
mov
and
xchg
mov
dec
mov
test
jns
test
add
and
jne
sbb
enter
imul
es
cmp
or
dec
lods
or
mov
movsb
push
mov
sbb
in
adc
sbb
sub
or
xchg
lcall
jge
and
push
fadds
and
rorl
push
pop
xchg
mov
nop
push
mov
loopne
xchg
inc
pop
jge
push
clc
mov
mov
adc
and
xor
test
sub
inc
adc
cmp
cmp
ret
mov
xor
shlb
push
add
mov
popf
dec
push
or
stos
mul
call
or
popa
dec
sub
cmp
lods
sub
scas
rorb
clc
cmp
dec
test
test
push
sbb
sbb
pop
add
sub
testb
add
and
cli
add
push
or
aaa
sbb
sub
or
or
and
adc
inc
mov
cmp
xchg
imul
or
mov
or
nop
mov
in
xchg
fcomps
icebp
lds
dec
enter
push
stc
sbb
push
or
inc
xlat
sub
insb
call
jne
ret
jb
pop
cmp
add
mov
jge
push
xchg
inc
sub
testl
add
mov
add
sub
add
pop
xchg
adc
mov
or
inc
cmp
mov
mov
addr16
inc
notl
and
in
ss
sbb
stos
sub
adc
xor
adc
xor
and
mov
ret
lcall
dec
dec
add
stos
pop
pop
clts
cmp
adc
mov
icebp
fimull
mov
jmp
xor
shll
dec
cmpsb
shlb
clc
xor
dec
loop
push
jl
jb,pn
and
xchg
sub
lret
insb
test
les
or
test
cmpsl
mov
lods
xchg
sub
adc
pop
push
repnz
and
js
cmpsb
test
adc
add
ss
adc
fs
push
sub
sbb
jge
cmp
adc
mov
dec
sbb
cmp
sbb
push
daa
pop
leave
push
jle
decl
test
sbb
call
je
dec
ja
adc
mov
or
add
xchg
push
dec
sbb
sbb
add
enter
fdivs
xor
and
mov
adc
shl
xchg
inc
out
nop
and
ret
or
push
mov
or
mov
jne
lods
add
mov
sbb
mov
pop
or
stos
lcall
outsl
loop
add
inc
and
aaa
in
int3
add
dec
jecxz
adc
sahf
adc
adc
push
test
cmp
dec
ja
sbb
ret
lea
pop
les
pusha
int3
and
mov
push
push
push
jb
add
inc
inc
pop
jne
lock
xchg
or
mov
xchg
pop
call
dec
outsl
movsb
sub
mov
cmp
adc
xor
mov
std
stos
inc
sub
stos
sbb
mov
popf
push
mov
or
push
je
add
sbb
ret
sbb
rolb
cmpsl
jl
in
shr
add
mov
cmova
movsb
jmp
mov
xor
pop
in
mov
call
ret
sbb
push
lock
pushl
and
add
fadds
mov
pop
push
add
or
rorb
push
push
adc
push
nop
lret
lea
mov
sub
and
mov
mov
repz
push
pop
aad
adc
nop
stc
mov
hlt
movsl
cmp
sbb
mov
cmp
add
cmp
xlat
jp
cmp
ja
je
sahf
add
js
rep
sub
cld
sbb
je
xor
jl
push
sbb
push
std
sbb
movb
inc
lcall
jmp
pop
cwtl
mov
add
iret
add
cmpb
ret
sub
add
out
xor
mov
movb
push
xor
push
push
or
shrb
roll
ljmp
cvtpi2ps
daa
aam
mov
aad
das
ds
xchg
fistpll
push
xchg
jno
xor
adc
or
mov
mov
inc
inc
mov
ja
popa
in
and
mov
inc
dec
je
pop
addb
xchg
test
jne
inc
cmpsb
rorb
int
hlt
mov
aam
sarb
jmp
mov
das
rcll
push
push
addl
jmp
jnp
sarb
cmpl
ja
add
add
sub
loop
fldcw
sarl
pop
jbe
push
ljmp
fsubr
test
lock
call
xor
inc
fwait
pop
pop
fsts
int3
fiadds
add
test
std
insb
cwtl
or
and
repnz
pop
movsb
and
cmp
adc
int3
bound
pop
lock
sub
cmp
or
in
jbe
pop
mov
adc
ficomps
jo
and
loope
dec
mov
jbe
popa
sbb
movl
mov
call
adc
adc
bound
mov
insb
dec
leave
sbb
lcall
inc
jmp
dec
adc
or
lcall
clc
insl
roll
insl
push
lcall
cli
sbb
or
das
adc
adc
inc
mov
and
xor
xor
cli
int
clc
jne
add
xchg
pop
movsb
inc
lret
adc
in
jb
sbb
and
xor
das
adc
sbbl
adc
adc
xlat
sub
or
and
cs
mov
in
dec
push
xorb
mov
adc
mov
daa
sbb
inc
add
push
movups
cmpsl
sub
inc
sub
sbb
or
mov
mov
push
lea
aad
xor
or
mov
add
cmpsb
clc
test
fisttps
decl
push
stos
andl
xor
sub
call
push
and
and
loop
mov
xchg
mov
mov
pop
dec
movsb
test
add
shlb
cmpb
inc
or
out
push
sub
dec
enter
add
jbe
cmp
or
andb
ss
test
push
mov
in
call
sbb
repz
je
cmp
xor
cmp
pop
aaa
adc
stos
popa
sbb
lds
sbb
data16
mov
ljmp
pushf
xchg
xchg
cmovns
addl
call
and
sbb
fcmovnbe
pop
cmp
xchg
add
fwait
mov
mov
adc
sub
sub
sub
mov
das
inc
ja
loop
fists
or
popa
pop
sbb
sub
xchg
or
and
cmp
pop
add
push
nop
jp
or
xor
cmp
rcrb
inc
add
jb
cmp
ja
push
jge
add
mov
inc
add
push
lcall
divl
cltd
add
mov
inc
xchg
repnz
hlt
out
test
jno
mov
inc
inc
and
dec
push
adc
bound
cwtl
inc
inc
inc
rol
add
adc
ljmp
pop
cmp
push
jne
dec
ficoms
pop
loope
aaa
add
test
loop
jmp
push
add
outsl
pop
inc
add
push
cmp
pcmpeqw
push
adc
dec
add
dec
out
and
push
or
add
in
sbb
rolb
adc
rorl
jmp
sbb
push
or
pop
or
and
pop
or
add
ret
fsubp
test
mov
add
or
dec
dec
dec
adc
and
sub
iret
fdivl
xor
or
loopne
scas
push
or
sub
or
sub
adc
fldt
or
xor
mov
cmp
loop
rcrb
movsb
ret
sar
cmp
xor
sbb
sbb
pop
adc
mov
jne
lds
sub
cmp
js,pt
sbb
test
inc
pop
mov
sarl
cmp
adc
sbb
testl
adc
or
je
add
xor
mov
ret
popa
push
and
sbb
jb
xchg
mov
decl
sbb
jge
xor
int3
fs
push
xchg
push
push
je
pop
mov
pusha
jae
push
pop
mov
ljmp
add
jl
mov
inc
addr16
push
inc
or
push
stos
dec
or
ljmp
repnz
pop
ds
sbb
dec
sub
and
std
inc
push
mov
je
sub
clc
icebp
mov
push
clc
pop
mov
fs
out
mov
test
push
add
decl
and
lock
add
add
cmp
pushl
lods
sbb
loopne
xlat
push
lea
lcall
add
je
and
cmp
int
aad
jne
adc
xchg
and
xlat
cmp
xchg
or
push
movsl
dec
insb
nop
add
mov
mov
inc
addb
and
or
sub
sub
js
pop
sub
push
or
jne
push
sub
dec
sub
or
and
ja
and
shlb
cmp
push
nop
adc
dec
xor
jge
jmp
incb
neg
add
js
pop
sub
clc
inc
outsb
lds
pushf
mov
sub
je
test
add
xchg
and
jbe
and
adc
add
or
add
and
nop
fadd
lcall
cmp
inc
movsb
mov
cmpsl
inc
pop
ret
lods
lods
and
pop
es
cmp
mov
shufps
jnp
xor
out
dec
lods
sub
cmp
jg
add
je
test
pop
jmp
push
dec
adc
or
sahf
nop
or
xor
arpl
jle
mov
fidivl
and
icebp
loopne
inc
cwtl
aad
ret
and
or
xor
es
rcll
xor
je
sbb
jge
repnz
inc
xchg
mov
lock
adc
push
inc
add
cmp
iret
fs
jmp
test
cmp
test
mov
dec
inc
mov
sbb
repz
pop
sub
sbb
popa
push
sub
fldenv
pop
or
fistpll
jns
mov
cmp
or
adc
insb
lds
cmpsb
dec
bound
js
rolb
je
aaa
adc
mov
in
mov
ret
pop
pop
rclb
leave
pop
fiadds
jns
push
paddusw
sbb
je
lods
mov
inc
and
cmp
jmp
mov
dec
mov
inc
icebp
stc
or
push
pop
stc
jmp
fstp
shrl
bound
out
mov
adc
addb
sbb
and
inc
mov
add
out
pushf
inc
or
push
ret
psraw
adc
adcb
cwtl
push
andl
sub
imul
cmp
cld
mov
and
aam
popf
addr16
test
hlt
and
mov
sub
test
add
leave
adc
mov
lds
mov
hlt
jbe
sbb
add
mov
mov
adc
lds
jmp
lods
inc
add
xlat
and
inc
add
xchg
add
aas
push
push
in
int3
into
nop
rorl
mov
push
pop
in
push
hlt
enter
sub
cmp
push
add
mov
daa
lret
cmp
or
sbbl
pop
cmp
dec
addr16
leave
repnz
hlt
xchg
pop
and
cld
rcrb
test
lds
iret
or
mov
mov
push
stos
mov
cmp
jmp
xchg
jp
add
mov
inc
imul
negl
jo
jl
xor
cmp
call
xchg
mov
movsl
popf
sti
jmp
stos
add
mov
push
sbb
push
sarb
repnz
test
cmp
lahf
fiadds
adc
push
sbbl
mov
add
repz
loope
push
jp
iret
mov
mov
mov
xchg
push
cmpsb
scas
mov
adcl
int3
jbe
add
in
xchg
cmp
xor
push
in
cmp
sahf
add
and
push
shld
add
addr16
repz
mov
subb
xchg
and
pop
and
loopne
adc
ret
dec
fs
inc
push
xor
sub
sub
clc
pop
jne
mov
or
and
and
pop
mov
cs
movsl
inc
nop
mov
mov
sub
mov
int3
cld
push
fsubrs
push
or
xchg
bound
dec
xor
push
jne
ret
sub
mov
aaa
inc
hlt
xchg
or
or
sub
xor
mov
push
dec
push
push
mov
jbe
shr
mov
mov
clc
cli
shrl
lock
xchg
sbb
or
dec
inc
add
push
inc
pop
inc
outsl
pop
jb
popa
outsb
addl
push
push
dec
add
push
dec
popa
jae
je
adc
sbb
fwait
push
iret
lret
mov
jns
mov
and
xor
leave
mov
inc
jno
lods
enter
or
pop
mov
cmp
jne
jmp
xor
adc
cmpb
mov
xchg
sbb
inc
fsubl
add
sub
pop
pop
in
and
js
dec
sbb
adc
add
fdivrs
test
rorb
fadd
das
sub
xor
sub
add
xor
cmp
jle
or
sbb
fwait
or
call
jp
xchg
mov
xlat
stos
lds
ret
loopne
add
repz
pop
and
ror
loop
sub
mov
add
das
pop
faddl
pop
add
sbb
in
cmp
jle
repnz
add
jae
js
ds
add
mov
sub
sbb
fnstsw
push
jecxz
sub
scas
push
ss
jp
and
or
hlt
mov
data16
jmp
stc
mov
or
shr
inc
xchg
and
add
add
orl
push
jnp
or
cmp
pop
dec
mov
push
jne
pushl
adc
mov
add
mov
or
adc
adc
clc
and
mov
push
jnp
mov
lea
and
sub
xor
fmuls
dec
setne
xchg
pop
imul
pop
rep
fs
es
inc
mov
repz
xor
xor
jns
out
jo
loope
nop
adc
jae
add
sbb
test
inc
and
dec
jno
insb
std
xchg
mov
imul
std
xchg
adc
cwtl
cwtl
mov
sahf
sub
add
rol
push
mov
add
or
nop
push
xchg
jmp
xchg
data16
push
xor
add
repnz
adc
pop
and
dec
pop
pop
shrb
ret
je
cld
jbe
hlt
push
nop
int3
loope
data16
cwtl
jbe
jmp
addr16
sbb
xor
lret
fwait
sbb
lock
jne
push
sbb
add
rol
pusha
lea
js
leave
mov
test
cmp
cmpsb
or
push
pop
das
sar
xor
push
cmpsb
push
rcr
mov
pop
and
into
push
rorb
sbb
mov
popa
es
adc
clc
mov
sub
dec
jne
nop
jns
jmp
sbb
mov
sbbl
jecxz
out
push
cmp
inc
add
or
or
adc
rorb
push
xor
fisubs
nop
dec
fisttpll
ss
bound
push
push
aas
enter
popl
mov
orb
mov
addr16
pop
jmp
mov
xor
in
test
pop
sub
rclb
push
push
push
add
jl
shrl
ficoms
dec
adc
cmp
movl
dec
jmp
ret
fs
sub
sub
mov
push
loope
push
mov
push
dec
lcall
pusha
mov
add
lret
or
jg
mov
jns
or
pop
fsubs
cmp
jbe
push
push
das
add
cli
in
push
call
fs
push
pop
push
mov
push
pop
or
push
loopne
mov
sbb
pop
or
jae
ljmp
mov
push
push
dec
adc
inc
add
mov
jmp
mov
pop
pop
lock
mov
xor
insb
lods
cs
loope
pop
jecxz
enter
and
out
bound
adc
ja
outsl
inc
sub
inc
cmp
jne
xor
fiadds
push
sbb
cld
dec
vphaddwd
sbb
test
push
ljmp
xchg
adc
out
popf
ljmp
into
cli
out
push
sub
sbb
pop
add
dec
inc
sbb
lea
dec
ret
jl
clc
sbb
stos
adc
adc
sarb
nop
stos
sub
cmp
adc
or
fidivs
jo
dec
add
adc
xchg
and
sbb
and
je
sbb
inc
rcll
hlt
pop
sub
inc
mov
or
add
mov
ret
xchg
in
mov
jecxz
lods
inc
sub
adc
sbb
aaa
sub
push
cmp
outsl
test
inc
or
push
add
clc
cwtl
scas
jae
xchg
sub
or
pop
add
dec
lds
out
xchg
mov
push
add
cmp
dec
cltd
jne
fs
push
cmp
xchg
loopne
or
sub
and
imul
mov
mov
aam
mov
adc
mov
jmp
mov
jmp
pop
xchg
xchg
lods
lahf
test
adc
daa
pop
mov
insl
test
push
xchg
mov
lods
inc
pop
pop
mov
mov
mov
mov
aam
push
push
jl
jae
lahf
inc
mov
inc
push
fsubl
mov
cmp
xchg
xchg
clc
fdivrs
pop
push
or
push
push
adc
pop
aas
lds
cmp
dec
ret
shll
mov
mov
add
andl
xchg
cld
lcall
jo
dec
xor
out
adc
adc
pop
lds
mov
sub
cmpsl
dec
push
fs
shlb
sub
sbb
das
jo
loop
ret
xor
adc
cmp
add
lret
or
fs
cmp
jg
je
sub
push
sub
xchg
cmp
jmp
add
orl
add
iret
xor
push
cmp
cmp
sub
rcll
clts
and
cmp
std
nopl
push
cmp
mov
enter
leave
cmc
loope
icebp
and
iret
icebp
push
lahf
and
pop
xlat
pop
push
pop
into
pop
adc
jecxz
jecxz
jecxz
loop
pop
or
xor
push
leave
adc
or
pusha
pop
fdivs
fwait
and
mov
and
push
cmc
lods
lods
xchg
sub
aaa
cmp
and
adc
inc
mov
inc
popl
cwtl
nop
or
je
pushf
sbbl
cltd
mov
jbe
ss
sbb
das
sub
or
pushf
stos
pop
shll
xchg
mov
das
adc
les
lock
jl
andl
xchg
push
mov
jmp
push
icebp
fisttps
and
sbb
dec
cmp
jecxz
xchg
jp
sbbl
pushl
add
cmp
mov
and
insb
sbb
or
or
jo
stos
inc
inc
sub
dec
clc
xor
add
lcall
xor
jmp
pop
shll
mov
mov
ss
ret
nop
movsb
pusha
sub
xchg
xor
lahf
js
pop
sub
add
repz
sbb
sbb
shrl
push
in
pusha
mov
pushf
movsl
arpl
mov
mov
dec
fisttpl
push
cmp
add
in
ret
adc
loope
int
outsl
push
and
shlb
cs
jl
orb
pop
pop
pop
movsl
and
lods
ds
and
mov
or
or
lret
mov
mov
inc
loope
adc
ret
mov
idiv
add
add
mov
mov
adc
rcr
dec
sub
mov
add
sub
cs
mov
loope
xchg
push
push
loope
lods
inc
push
push
out
adc
sbb
fcomps
and
rol
pop
sbb
mov
sbb
and
aaa
mov
movsl
pop
pop
leave
test
jo
xorl
and
sub
hlt
sub
adc
in
cmpsb
dec
xor
popf
lret
mov
out
mov
cmc
xor
inc
sbb
xor
xor
dec
push
cmp
lods
cmp
and
mov
mov
xchg
mov
inc
mov
jnp
test
cmpl
mov
shlb
call
lds
jne
add
add
pop
xor
cltd
xor
xchg
icebp
shrl
or
jne
jl
xchg
add
fsubrs
add
add
xor
sbb
das
push
mov
jg
mov
or
or
push
cmpsb
mov
int3
xor
jne
loop
adc
push
jg
add
xchg
pop
in
mov
or
mov
push
fmuls
pop
adc
mov
or
lods
popl
dec
js
xchg
and
jne
mov
sbb
sbb
dec
lods
add
lods
inc
aaa
push
xorl
dec
lds
mov
jge
jge
xchg
nop
adc
mov
and
or
lret
shlb
ret
bound
pop
pop
aas
mov
adc
clc
rorl
and
add
or
or
push
in
jecxz
mov
cld
push
inc
xchg
mov
sbb
mov
adc
je
dec
orb
jl
xor
pop
push
lea
dec
jg
pop
inc
mov
movl
mov
push
cmp
dec
xchg
movsb
cwtl
push
and
inc
jg
sbb
roll
cmp
ret
sbb
sbb
shr
add
lret
jl
adc
mov
jle
sub
and
jne
adc
loopne
enter
movw
sub
nop
adc
and
xor
hlt
jo
pop
or
cwtl
aas
stc
scas
movl
mov
xchg
cmp
sub
pop
xchg
das
shr
shlb
xchg
les
ret
add
ja
cld
mov
jg
in
push
fs
lea
add
fdivrl
push
jp
xchg
or
mov
cmp
roll
in
scas
and
cltd
mov
pop
shll
ds
xchg
adc
xor
xor
jge
xor
addr16
adc
hlt
add
mov
push
push
mov
push
push
and
jne
pop
pop
test
add
add
jmp
inc
addl
rcrl
lcall
xor
bound
data16
or
or
jmp
sub
add
and
fdivl
cld
repnz
or
dec
in
nop
sub
fdivl
rcrl
add
jno
lcall
xchg
add
cmp
jl
mov
mov
inc
stc
cmp
jbe
test
lcall
in
aas
mov
jle
stos
jl
mov
ret
cmp
mov
dec
adc
inc
xchg
sbb
pop
mov
or
hlt
and
inc
cmp
cmp
clc
pop
call
js
cmp
mov
pop
sbb
xchg
into
mov
inc
mov
fsubs
mov
iret
lret
mov
push
cmovbe
xchg
pop
fmul
dec
clc
inc
mov
jmp
mov
test
dec
dec
sbb
cmp
pop
xchg
jmp
bound
sbb
or
ret
and
iret
jne
and
jne
in
movsl
pop
call
cld
lods
mov
add
xchg
rcrb
in
repnz
sbb
or
into
mov
dec
jne
js
or
out
xchg
dec
lds
xchg
pop
lea
lcall
popf
mov
cmp
and
xchg
dec
jne
pop
push
ljmp
mov
dec
jp
and
pop
ret
or
or
adc
sub
push
lret
jae
clc
sahf
push
and
sbb
xlat
push
stc
lods
jmp
clc
inc
sbb
xlat
shl
sbb
gs
js
mov
xchg
cmp
es
mov
in
loopne
push
lret
pop
adc
sbb
adc
sub
and
push
ret
sub
add
sbb
fidivrl
sub
lock
sbb
adc
xor
inc
in
mov
or
pop
jle
lods
jo
adc
cmp
lcall
xchg
jge
sbbb
sub
fidivl
add
stc
add
lea
pop
movsb
imul
cli
inc
loopne
cli
mov
dec
orl
inc
dec
jge
adc
lahf
lahf
imul
test
fadds
push
lea
adc
stc
cwtl
popl
loopne
inc
pop
jmp
pop
jecxz
mov
dec
xor
ret
mov
lds
sbb
adc
lods
sbb
mov
cmp
jmp
out
dec
pop
pushf
dec
outsl
addr16
mov
inc
pop
adc
dec
dec
je
scas
and
jne
xchg
call
push
repnz
inc
xchg
faddl
mov
imul
dec
sub
sar
stos
mov
icebp
lret
out
movsb
mov
and
jle
mulb
inc
adc
push
repz
pop
sub
adc
or
leave
sbb
dec
test
xchg
fisttpl
sub
roll
ficoml
out
adc
dec
jecxz
dec
mov
fstpt
mov
mov
dec
push
xor
xchg
pop
pop
add
rol
mov
sub
sbb
int3
hlt
mov
ljmp
daa
xchg
jl
and
mov
inc
adc
xchg
inc
testb
aam
pop
jl
pop
and
adc
inc
push
xor
inc
rclb
ds
and
push
mov
pop
int3
xor
nop
insl
and
movsb
incl
and
adc
xchg
add
or
mov
clc
les
call
mov
outsl
mov
inc
pop
dec
mov
xchg
adc
dec
adc
adc
lods
and
jle
jg
push
leave
rcl
mov
imul
ja
adc
and
xlat
pop
aas
les
and
clc
adc
mov
xchg
rcrb
fisubrl
into
or
xor
jno
jg
clc
jb
and
inc
adc
xchg
loope
dec
jne
sbb
push
ja
jge
ret
outsl
dec
outsb
inc
ficoms
dec
xchg
mov
je
mov
inc
inc
mov
lret
pop
or
into
push
pop
flds
sub
test
pop
or
or
rcll
jne
mov
and
mov
add
mov
ret
sub
mov
jle
xor
clc
and
shrb
or
mov
aam
test
ret
mov
lock
les
jl
imul
jmp
xchg
sub
clc
shlb
cld
adc
jns
scas
jmp
cmp
add
xor
inc
xchg
std
xor
sbb
push
sbb
xor
sbb
lret
inc
test
aad
in
fsubrs
pop
out
inc
jns
aas
int
leave
enter
adc
inc
fimull
push
sbb
push
rcrl
cmp
mov
in
adc
jl
push
xchg
inc
jno
add
pop
adc
inc
push
sub
out
mov
mov
dec
loop
jge
add
adc
in
dec
cmp
and
xor
dec
jl
in
icebp
adc
dec
mov
add
mov
jmp
mov
push
or
adc
push
adc
push
or
inc
mov
subb
mov
sbb
and
inc
and
mov
and
mov
lcall
or
adc
repnz
stc
push
in
loopne
push
dec
out
xchg
in
and
pop
adc
push
mov
sbb
adc
sbb
or
in
or
push
push
sub
repnz
repnz
aam
adc
adc
sub
adc
adc
or
sub
add
push
mov
cmp
or
add
jp
cltd
addr16
inc
lods
mov
mov
xor
inc
or
lea
pop
outsl
cld
call
push
or
sarl
sbb
add
xchg
fisubl
ljmp
or
test
sub
sbb
xchg
push
or
bsf
mov
xchg
adc
daa
xor
dec
add
jge
pop
nop
sbb
jge
adc
inc
adc
insb
loopne
cmp
adc
stc
pop
mov
add
or
dec
std
xchg
or
inc
insb
pop
jmp
stos
and
mov
popa
pop
push
rcrb
adc
inc
adc
je
or
test
or
mov
mov
insb
or
mov
negl
or
inc
popa
and
xchg
mov
mov
sbb
dec
jne
das
dec
push
mov
jp
aam
jmp
dec
jecxz
and
xchg
add
pushl
cwtl
incb
pop
in
lret
inc
ljmp
stc
stos
lds
inc
add
push
cmp
lea
cmp
jmp
xor
rorb
sub
and
inc
push
sub
scas
sub
push
icebp
imul
pushf
inc
lahf
inc
in
mov
or
int3
mov
dec
mov
scas
mov
inc
xchg
xchg
out
cld
das
popf
cwtl
add
sbb
pop
mov
hlt
into
stos
daa
mov
xor
push
pop
and
sub
jnp
inc
roll
cmp
pop
inc
and
adc
adcl
mov
push
pop
fs
dec
or
jno
sub
or
adc
lock
int
or
ret
and
or
shl
mov
sub
cmpb
xchg
mov
mov
sbbb
sub
add
add
push
mov
and
je
push
inc
lcall
rclb
cwtl
xor
mov
pop
and
push
sbb
inc
xor
repz
push
ljmp
pop
push
test
or
inc
sbb
in
clc
sbbl
xor
sbb
rorl
push
jb
jmp
stc
inc
andl
add
xor
mov
cltd
xchg
and
dec
movsb
rorl
add
pop
test
push
or
inc
xor
notb
mov
lahf
rorl
or
push
sbb
cmp
dec
popf
push
scas
rcll
and
dec
bound
adc
test
jg
mov
dec
stc
inc
lock
cmpsb
stos
inc
lcall
push
pop
xchg
hlt
and
sbb
xor
xchg
sarb
add
je
dec
xchg
xorl
fdiv
pop
and
dec
mov
mov
sub
inc
fwait
dec
inc
dec
jl
inc
inc
add
push
das
and
loopne
pop
dec
int
xchg
js
aam
scas
adc
insb
inc
cld
push
pop
push
dec
sbb
xor
or
mov
xchg
mov
mov
xchg
mov
pop
lock
sub
in
mov
mov
adc
sbb
inc
add
and
rcl
call
int
cmp
pop
mov
mulb
dec
in
mov
inc
fnstsw
out
je
pop
sbbl
cmp
jne
sbb
jge
dec
sbb
aam
add
xchg
add
inc
dec
lock
mov
lea
inc
loopne
push
in
and
in
jmp
aas
decl
stos
inc
cmovg
mov
in
mov
lret
or
adc
pop
and
and
dec
in
push
je
xchg
adc
into
push
push
push
cmpl
js
inc
out
insl
add
fs
mov
or
push
push
ret
insb
push
fiaddl
push
ret
push
add
cs
int
add
nop
dec
dec
dec
cmp
jl
inc
jl
cmp
pop
repz
lea
sub
clc
ret
or
jmp
dec
xor
lret
mov
and
popf
sbb
stos
push
mov
xor
xor
lock
clc
jne
test
dec
xor
push
adc
push
sub
pop
pushf
pop
leave
push
aaa
lock
inc
dec
dec
sbb
insl
sbb
and
adc
jle
push
push
mov
bound
bound
pop
mov
sbb
repz
cwtl
push
insb
sbbl
mov
imul
jo
push
es
jnp
jne
sub
in
add
hlt
sub
add
dec
fsub
scas
mov
xchg
sbb
fisttps
dec
mov
hlt
mov
imul
or
das
or
xchg
ret
mov
jecxz
jmp
cwtl
dec
mov
add
jne
movsl
mov
mov
dec
clc
mov
inc
push
dec
push
mov
cmpsb
loope
enter
xlat
cltd
inc
and
das
lods
lods
hlt
mov
ja
sarl
sub
lahf
adc
test
sub
fisttps
sbb
cmp
vmread
and
test
das
jmp
lock
jno
testl
cmc
jne
push
movb
fisubrs
orb
add
fs
pop
cmp
adc
add
add
inc
cmp
lahf
mov
push
movsb
xor
sbb
sub
pop
add
int3
call
dec
jmp
loop
lsl
inc
cmp
sub
nopl
ret
dec
xchg
dec
dec
gs
inc
inc
jmp
mull
fwait
daa
je
rclb
gs
int3
insb
xor
dec
mov
inc
mov
cmp
popf
push
inc
adc
mov
mov
lea
jecxz
pop
out
or
cltd
iret
push
mov
bound
or
fcompl
pop
mov
push
stc
add
and
inc
sub
jle
mov
inc
sub
pusha
sub
pushf
mov
push
jns
lds
and
mov
ljmp
mov
push
addr16
and
dec
rcl
push
loop
xchg
lds
or
dec
mov
sub
cmp
xchg
inc
es
sub
test
scas
repz
or
xor
cmpb
jmp
fs
mov
inc
ds
xor
xchg
push
dec
pop
add
add
cmp
mov
test
hlt
fsubrs
jne
or
insb
popf
and
sub
in
shlb
movaps
rclb
push
push
in
xor
push
jns
fs
sbb
inc
repz
ret
dec
dec
mov
add
outsl
data16
popa
jb
gs
xchg
rsqrtps
jg
jae
sub
out
inc
and
int
push
pop
fnstcw
jmp
inc
mov
out
mov
mov
and
leave
push
mov
adc
sub
rcll
jl
inc
cs
mov
addl
data16
icebp
incb
sub
add
je
jmp
mov
adc
mov
inc
pop
cmp
pop
arpl
pop
clc
xor
xchg
inc
in
adc
mov
into
mov
jne
popf
int3
adc
ss
push
push
mov
ror
test
cmpsb
lods
out
pop
pop
es
fcompl
adc
cmp
leave
repz
pop
mov
jne
mov
cmp
jne
or
push
mov
outsl
sub
ret
cmp
stc
add
iret
das
int
xchg
sub
cmpsb
and
add
nop
or
pusha
int
scas
inc
icebp
push
xor
inc
mov
test
inc
inc
stc
cwtl
or
mov
push
pusha
mov
insb
mov
ret
add
mov
mov
repz
jg
mov
add
adc
mov
aad
push
fs
dec
adc
icebp
pop
and
mov
add
mov
adc
shlb
jo
out
or
inc
mov
jne
scas
jmp
in
dec
jecxz
lahf
leave
sub
mov
leave
pop
into
xchg
xchg
divb
cmp
ja
jns
pop
xor
pop
cmpl
cmp
push
ja
fiaddl
shr
or
mov
xor
push
mul
outsb
aas
sbb
lahf
pop
sahf
add
push
rolb
std
or
and
test
es
shlb
add
cmp
dec
or
mov
inc
add
fnstenv
inc
test
test
sbb
dec
inc
jbe
mov
add
jb
sub
insb
rcr
mov
jg
fnstsw
sub
push
and
sbb
adc
mov
and
in
ss
push
clc
test
popa
test
hlt
add
mov
inc
testb
xorb
or
sbb
cmp
loope
and
je
aas
mov
add
in
aaa
sti
push
jne
inc
mov
int
popf
in
roll
push
or
mov
mov
int3
dec
dec
jbe
pop
mov
subl
inc
popf
jae
or
mov
or
cmp
xchg
inc
and
pop
sub
ret
xor
xor
adc
addr16
out
push
jne
test
push
jb
in
and
je
cwtl
js
loope
int
xor
adc
mov
je
dec
or
sub
inc
adc
pop
xor
adc
repnz
mov
adc
push
adc
cmp
and
test
adc
gs
cmp
mov
or
addb
dec
mov
stc
pop
lret
aas
aam
dec
pop
lods
rolb
inc
rcrb
movsb
in
jb
cmp
mov
sub
adc
jb
test
jnp
and
pop
sub
jo
sub
lret
push
pushf
icebp
push
jbe
cmc
movsl
fadd
cld
adc
xor
cmc
mov
ret
int
in
pop
add
adc
and
bound
mov
cmp
clc
cwtl
xor
xchg
mov
imul
cmc
push
push
rcrb
pop
sub
lret
cmp
mov
imul
dec
je
adc
mov
imul
mov
adc
xchg
imul
push
xchg
or
mov
jns
int
or
and
icebp
pop
or
pusha
cltd
sub
clc
xchg
and
rorl
xchg
push
adc
cld
insb
mov
mov
rcl
into
les
xor
faddl
cmp
push
mov
xlat
adc
jb
in
jae
roll
mov
jp
push
cmp
sbb
add
cltd
call
add
or
jp
aad
je
and
mov
mov
setl
scas
add
cli
subb
and
mov
popa
push
push
mov
js
cmp
dec
push
cmp
cmpl
test
sub
hlt
and
or
adc
mov
mov
fs
adc
test
jne
sbb
add
push
cmp
adcb
jo
aad
iret
mov
pop
dec
adc
mov
ds
jo
push
mov
sub
mov
push
mov
pop
inc
fstl
jecxz
pop
subb
mov
sub
insb
dec
mov
dec
or
inc
aas
push
dec
dec
sbb
mov
mov
cmp
lods
mov
dec
jecxz
or
imul
enter
push
jl
cmp
dec
mov
sti
call
repnz
and
cmp
pop
push
mov
je
or
push
inc
je
jo
add
cs
xor
insb
add
or
push
gs
inc
pusha
pop
or
push
inc
sbb
jns
movaps
inc
bound
or
push
inc
test
in
data16
xor
dec
out
pusha
dec
imul
outsl
popa
mov
dec
jnp
stc
xchg
scas
or
int
or
push
xorb
push
xor
xor
leave
insl
jbe
js
aas
js
pop
imul
ja
nop
and
lahf
push
push
dec
dec
push
inc
cltd
cmp
push
add
mov
lods
cmp
mov
and
sub
and
and
mov
dec
and
push
jo
or
add
movsl
inc
jle
and
mov
dec
sub
xor
cmpsb
or
and
xchg
add
and
jb
cmp
sbb
mov
and
xchg
loopne
fsub
fdivs
cmp
sbb
mov
and
mov
mov
jb
cmp
mov
enter
jb
cmp
andb
xchg
js
je
jo
insb
cmp
mov
and
fbld
in
jb
cmp
cmp
inc
cmp
xor
xor
sub
sub
cmp
sbb
mov
and
adc
or
or
cmp
mov
and
xchg
in
enter
jb
cmp
sbb
mov
and
xchg
int3
enter
ja
in
jno
mov
inc
mov
adc
jb
cmp
mov
and
fs
jb
cmp
jb
cmp
mov
and
cmp
cmp
xor
xor
sub
sub
xchg
sbb
sbb
adc
adc
or
or
and
mov
clc
enter
jb
cmp
sbb
mov
and
xchg
fmul
aam
shlb
cmp
sbb
mov
sbb
mov
jg
inc
mov
lods
xchg
test
movsb
in
jb
cmp
nop
and
xorb
js
je
inc
jo
insb
xchg
push
jb
cmp
cli
cmp
dec
mov
insb
mov
in
jb
cmp
pop
mov
sbb
mov
and
enter
jb
cmp
sbb
mov
and
and
sbb
sbb
cmp
sbb
mov
and
inc
adc
mov
clc
in
jb
cmp
sbb
mov
and
xchg
fmul
fsub
aam
sarb
int3
sbb
mov
jnp
inc
mov
enter
jb
cmp
and
in
jb
cmp
and
je
jo
insb
jb
cmp
mov
and
inc
and
dec
enter
jb
cmp
cmp
xchg
sub
sub
and
and
sbb
sbb
xchg
or
or
add
or
cld
mov
push
clc
or
hlt
xchg
lock
jl
mov
and
xchg
fmul
aam
shlb
cmp
sbb
mov
sbb
mov
and
test
movsb
cmp
cwtl
and
mov
cmp
js
je
jo
insb
cmp
mov
and
fbld
in
jb
cmp
cmp
inc
cmp
xor
xor
sub
sub
cmp
sbb
mov
and
adc
or
or
cmp
mov
and
xchg
in
enter
jb
cmp
sbb
mov
and
xchg
int3
enter
ja
in
jb
cmp
and
in
jb
cmp
mov
rol
loop
adc
ret
call
jnp
jnp
sbb
idiv
gs
or
xor
int3
dec
mov
xchg
pop
push
xor
out
sub
adc
pop
sub
push
push
push
nop
sbb
dec
sub
subl
insb
sbb
and
shrb
mov
mov
scas
push
stos
movswl
out
add
or
pop
jg
inc
sbbl
ds
cmp
shrb
dec
push
dec
loopne
in
and
mov
ds
daa
cli
aam
inc
sbb
lret
cmc
data16
inc
adc
sbb
sbb
and
xchg
sub
cld
das
push
push
sti
mov
pop
dec
subl
nop
mov
push
push
shll
ret
push
adc
lods
icebp
subl
jne
push
fs
and
addr16
pop
lds
setg
push
adc
jl
xchg
sbb
mov
outsl
and
addr16
nop
data16
jmp
mov
aas
and
pop
or
or
ffree
das
and
adc
popa
addr16
and
push
push
cmp
mov
xchg
xchg
adc
dec
cmp
sbb
push
scas
adc
push
push
testl
inc
es
int3
dec
dec
jle
lods
sbb
xchg
js
mov
mov
call
enter
or
jl
jb
dec
lock
or
mov
and
xchg
hlt
enter
jb
cmp
sbb
mov
and
xchg
cld
enter
ja
in
jb
cmp
sbb
mov
and
xchg
out
out
call
sbb
mov
and
xchg
out
enter
jb
cmp
sbb
mov
and
xchg
enter
jb
cmp
sbb
mov
and
xchg
fmulp
shlb
ret
mov
and
xchg
enter
jb
cmp
sbb
mov
and
xchg
into
enter
jb
cmp
mov
mov
mov
mov
mov
sbb
mov
and
in
jb
cmp
movsb
and
in
jb
cmp
lods
and
in
jb
cmp
inc
jg
adc
jg
inc
xorb
push
xor
or
push
and
xor
and
or
mov
push
or
aad
in
cmpsl
xor
pushf
loop
inc
xorb
scas
jg
fwait
test
js
push
loope
mov
xor
inc
js
gs
pop
imul
loopne
inc
push
rolb
inc
bound
pop
jnp
inc
and
scas
push
bound
dec
dec
and
jo
bound
mov
or
scas
add
dec
gs
insl
mov
lea
jp
inc
and
inc
or
or
dec
outsb
mov
push
cmp
mov
push
jp
shlb
pop
mov
sbb
scas
and
push
jo
orb
or
mov
add
and
aam
add
inc
inc
imul
outsl
sub
push
cmc
add
push
popa
outsb
xchg
sub
test
xchg
or
dec
jbe
add
outsl
ja
je
pop
pop
enter
mov
dec
pop
or
mov
cmp
mov
sbb
imul
pop
adc
out
push
fs
mov
shlb
cmp
adc
popa
movsb
subb
nop
in
push
or
outsb
fs
add
pop
imul
les
mov
push
outsl
cmp
test
cwtl
pop
fstps
or
pop
inc
aad
jnp
shl
scas
pop
fs
cmp
or
mov
push
xchg
xor
mov
loope
inc
jp
jns
sub
mov
mov
enter
int3
es
jb
xchg
insb
jmp
pop
nop
or
xchg
push
inc
rcr
arpl
push
nop
fs
pop
fs
or
jo
and
out
and
pop
fs
test
sbb
jne
enter
and
xchg
fs
enter
inc
js
push
andl
mov
ret
lret
pop
xor
enter
movsb
adc
mov
mov
adc
out
adc
xor
push
aaa
xor
fadds
dec
cmpsb
or
mov
insb
lods
xor
xchg
and
push
incl
imul
sub
stc
xchg
inc
inc
lret
add
pop
adc
jb
popa
dec
fs
jecxz
jne
add
add
mov
or
xor
test
jno
xor
test
dec
pop
xchg
popa
and
les
push
mov
jnp
sbb
fists
jno
cmp
sub
loopne
mov
loopne
or
xor
int3
pop
adc
add
movsb
inc
in
cli
dec
and
insb
aas
adc
jmp
jae
test
test
loop
aas
outsb
shl
inc
sahf
mov
mov
in
mov
adc
repz
ret
pop
mov
add
dec
adc
pop
lret
mov
mov
xchg
cmp
pop
adc
rclb
and
fcompl
fistpll
sub
in
jns
pop
pop
shlb
push
inc
out
fnsave
xor
mov
sbb
or
xchg
ror
or
dec
jne
jl
sarl
adc
mov
xor
push
mov
mov
mov
shll
and
call
aam
call
add
jg
mov
inc
inc
dec
sub
movsl
shlb
push
inc
inc
pop
addl
or
repnz
xor
sarl
shll
xchg
in
leave
add
cmpsb
je
movzbl
into
or
stos
push
fstpt
fdivs
pop
loop
nop
add
repz
jne
mov
push
arpl
inc
gs
inc
push
jnp
add
mov
xchg
push
or
int
hlt
pop
mov
and
loope
out
and
sti
je
int3
loop
push
xlat
lret
je
rcl
sbb
dec
cld
popf
repnz
xchg
ret
int3
push
add
or
cmp
movsb
add
jle
push
cmc
ljmp
aas
xor
xor
ljmp
xor
adc
clc
cmp
add
add
enter
cmp
add
and
cld
repnz
mov
fnstcw
aaa
mov
pushf
je
pop
ljmp
mov
inc
cld
aaa
push
pop
andb
and
leave
push
jge
ret
lds
dec
sub
dec
clc
insb
into
push
sub
inc
mov
pop
mov
cmpsl
popf
fistpl
daa
push
jl
bound
fildll
add
or
inc
or
jbe
mov
je
scas
scas
mov
jge
add
jne
outsl
cmp
or
or
int
ljmp
push
mov
push
sbb
fldl
mov
and
or
gs
ja
adc
cmp
lret
movq
lret
test
and
les
jge
sbb
xchg
and
adc
sub
jg
xor
or
cmp
xor
jge
adc
sbb
into
mov
outsl
pop
data16
enter
test
sbb
inc
mov
out
push
fdivrs
fs
sub
push
add
sub
cmp
ja
nop
adc
adc
cmp
sub
pop
mov
cmc
mov
adc
or
bound
sbb
and
inc
dec
daa
jne
fsubrl
leave
in
orb
xor
fcoms
sub
ret
mov
push
xor
div
cmp
xchg
cmp
adc
pop
mov
push
jne
push
pop
pop
sub
inc
lret
add
cmp
jmp
add
dec
jne
add
mov
sub
xor
push
jo
dec
mov
repnz
lea
adc
xor
xorb
jo
add
xorl
sub
pop
cld
adc
subl
dec
inc
jo
test
movsb
add
cs
mov
orw
sub
inc
mov
or
ret
adc
movb
jg
add
and
roll
roll
add
sub
add
clc
dec
out
cmc
xchg
fdivr
mov
xor
fadds
icebp
inc
xlat
push
add
fcom
fstsw
sahf
jae
loope
insb
add
cmp
ret
cmp
cmp
adc
out
jmp
out
cmp
out
enter
push
ret
xor
repnz
pop
sbb
dec
cli
push
dec
add
sub
push
mov
and
mov
mov
mov
js
pop
lock
push
adc
std
mov
fsubrl
inc
cmp
je
xor
std
adc
push
xor
scas
cltd
shr
dec
push
adc
mov
nop
and
dec
adc
mov
and
mov
loop
adc
sbbb
pop
mov
lea
and
sub
addr16
rolb
adc
icebp
adc
add
mov
jge
rclb
scas
adc
mov
int3
movb
xchg
repnz
jl
and
and
jle
jmp
add
push
and
mov
hlt
pushf
lret
loope
test
and
dec
inc
adc
push
insl
lock
or
xchg
add
cmp
pop
dec
mov
xor
inc
xor
movb
into
and
push
stc
push
and
subl
push
xor
add
sub
icebp
xchg
gs
jns
fstpt
dec
sub
jb
adc
sbb
jmp
adc
nop
leave
imul
inc
ljmp
test
or
jmp
sar
ja
aas
or
fldenv
mov
xor
add
or
and
cmp
lea
adc
test
or
inc
mov
in
rcll
lret
or
xor
ljmp
es
mov
or
dec
fisubl
pushf
enter
test
lods
imul
mov
lea
or
mov
mov
push
cld
imul
mov
test
cwtl
stc
inc
inc
or
ret
adc
shlb
sub
adc
call
xor
jg
mov
push
adc
insl
sub
cmpsl
idivb
xchg
rclb
enter
sbb
mov
and
in
and
sbb
icebp
fsub
push
xchg
inc
sub
mov
add
xor
std
ret
adc
or
xor
or
push
inc
mov
push
ret
add
clc
not
sbbl
push
mov
xlat
mov
sbb
and
inc
push
fwait
and
adc
pop
mov
mov
scas
je
or
push
jmp
fiaddl
ss
or
push
xor
dec
out
push
push
mov
cmp
mov
nop
pop
mov
xchg
je
or
je
testb
incl
int3
push
jns
enter
mov
jle
mov
leave
das
sbb
and
dec
ret
jne
dec
mov
jg
scas
mov
mov
lds
into
mov
cmp
mov
xchg
inc
fsubrs
nop
lret
or
jl
loopne
cmp
adc
mov
jmp
sub
pop
jne
fcoms
inc
xor
mov
jl
push
and
inc
addr16
gs
aaa
cs
lock
mov
xchg
repnz
ret
sbb
inc
mov
leave
fimull
inc
mov
mov
test
js
jne,pn
push
inc
dec
xchg
mov
adc
add
cs
mov
dec
push
stos
leave
push
pop
mov
enter
gs
sub
jbe
and
cwtl
ret
lcall
push
xchg
or
and
jl
test
jl
imull
adc
push
shr
push
in
sbb
mov
cmp
sti
jmp
sbb
lods
mov
mov
lock
imul
dec
je
mov
pop
jbe
and
movzwl
adc
shr
sbb
pop
dec
call
and
fnsave
mov
cld
sub
leave
push
jge
xor
sub
mov
into
push
or
shrd
ljmp
mov
pushf
dec
cld
in
and
inc
dec
imul
incb
xlat
test
mov
fwait
adc
jns
sub
das
test
es
sar
aas
out
mov
lret
clc
push
or
ja
movsb
pop
pop
ret
push
jl
popf
sbb
dec
cmc
xchg
ds
sub
sub
popf
loope
push
fstps
pop
bound
pop
or
add
pop
adc
xchg
pop
iret
add
iret
sub
inc
mov
push
mov
and
aas
clc
pop
shl
cmpsb
mov
jb
pop
mov
mov
and
je
dec
push
mov
cli
movsl
jmp
adc
and
jp
faddl
or
inc
das
adc
fsts
test
or
outsl
add
pop
inc
inc
adc
repnz
mov
add
cmp
mov
pop
cs
subl
jbe
pop
push
lea
xchg
lods
dec
pop
adc
cld
jg
jl
dec
in
mov
push
xchg
sub
cmpsl
test
adc
sbb
rep
or
lods
lea
inc
adc
jb
adc
stos
dec
or
cmp
roll
pushf
sub
sub
loopne
sahf
in
clc
inc
sti
pop
jbe
mov
rorl
add
or
add
push
cld
lret
call
add
sbb
repnz
fldcw
push
mov
push
pushf
sub
add
sub
cmp
or
sbb
pusha
testl
mov
push
dec
movl
mov
sub
or
lock
and
or
lods
cmp
in
stos
adc
repz
lret
sub
loopne
nop
daa
enter
mov
imul
inc
out
sub
lods
int
mov
xor
and
lods
jmp
les
mov
cs
mov
fsubl
fcoms
inc
or
dec
pop
sub
add
fildl
or
lret
adc
inc
cmp
and
stos
movsl
push
xor
jge
mov
out
push
mov
sahf
xlat
dec
mov
sub
ss
jb
pop
cmp
imul
movzbl
rolb
incl
inc
xchg
in
inc
sub
jmp
jg
adc
lods
adc
jl
cli
cmp
sbb
je
xchg
and
fisttps
or
pop
add
lea
flds
pushf
push
add
and
adc
or
fstpt
or
push
sahf
sbb
sbb
inc
or
adc
cltd
adc
adc
ja
les
mov
shl
shl
push
mov
lea
es
fsubl
push
sub
or
test
or
mov
bound
push
add
inc
jmp
insb
inc
cmpsl
mov
jo
adc
ss
icebp
xor
rorb
mov
test
cmp
test
cmpl
add
mov
jb
nop
inc
add
push
leave
and
inc
cwtl
repz
lods
adc
enter
inc
dec
sbb
sub
add
jne
and
imul
lahf
cld
or
jle
or
test
pop
dec
fdivl
jns
or
inc
jmp
arpl
and
dec
stc
stc
pusha
loope
enter
leave
pop
loop
inc
xlat
inc
hlt
adc
orb
loope
jo
sbb
inc
cmp
into
push
inc
out
cmp
add
inc
lahf
adc
testl
add
adc
sub
dec
mov
sbb
leave
adc
and
dec
mov
mov
and
push
repnz
iret
cwtl
movsl
xchg
pop
rcrb
cli
xchg
ret
inc
xor
or
xor
mov
dec
shlb
mov
ds
xchg
ret
rol
jle
inc
pusha
inc
push
dec
push
mov
pop
aas
adc
mov
mov
call
add
pop
clc
mov
push
inc
icebp
call
imul
or
push
jne
lahf
xchg
movsb
fwait
pop
int3
imull
mov
or
push
data16
jnp
cmp
es
fldcw
cld
lea
cmpsl
fbld
jmp
mov
les
fcomi
ret
inc
jmp
add
std
mov
rorb
mov
mov
jge
cld
push
xchg
sub
xchg
push
nop
dec
hlt
mov
push
xor
imulb
add
scas
jge
mov
sub
or
add
mov
stos
xchg
push
xor
jl
xor
daa
inc
dec
inc
add
add
dec
mov
stos
cmp
lock
pop
pop
pop
mov
mov
divl
mov
cli
and
mov
nop
repnz
cli
adc
aaa
jge
and
bound
jle
xchg
push
cwtl
and
sbb
dec
jge
adc
jb
ljmp
jl
or
cld
movzwl
sub
add
sbb
xor
dec
shlb
mov
out
jmp
pop
adc
add
lods
add
add
or
mov
jle
pusha
out
sbb
popf
lods
das
dec
pop
push
xor
or
shrl
movsl
and
lret
xor
jne
or
mov
jb
je
sub
xor
rorb
je
adc
stos
stos
jg
mov
aam
xor
jg
cmp
jl
and
sbb
dec
stos
cmpb
dec
cmp
fstps
jmp
sbb
int3
inc
lea
sub
clc
or
adc
mov
clc
sub
inc
pushf
jg
push
movsb
pop
addb
inc
add
push
jns
mov
xchg
mov
add
stos
leave
mov
inc
mov
push
mov
sub
lock
adc
add
dec
xchg
mov
push
cs
add
enter
div
adc
jecxz
push
orb
dec
jne
hlt
mov
xchg
xchg
in
ss
call
mov
stos
jecxz
jnp
in
inc
sub
das
jns,pt
test
jb
adc
or
cld
cmovo
push
lret
cwtl
mov
jo
lea
pushf
fwait
cmp
inc
cmp
je
push
push
fldenv
in
mov
aam
sahf
xchg
mov
jno
pop
pop
inc
loop
push
test
hlt
xchg
cmpsb
add
and
sub
dec
fisttpl
shll
jle
jmp
sub
sub
test
sbb
fimull
dec
shrb
sub
add
jle,pn
cmp
and
push
add
sub
sub
dec
aam
loopne
jg
cmp
test
test
sahf
xchg
repz
xchg
mov
or
mov
and
cmp
sbb
inc
push
fs
adc
dec
xchg
or
add
sbb
insl
xchg
aam
cs
sub
rclb
or
sar
inc
ret
hlt
pushf
and
fabs
push
mov
pop
sahf
es
fsub
not
cmp
je
fidivl
pop
fbstp
lea
add
adc
add
call
pcmpgtd
sahf
push
jmp
shrb
or
call
cmp
dec
pusha
or
daa
cmpb
lea
dec
js
or
cmp
jmp
sub
mov
xor
adc
movsb
sahf
xchg
sub
cs
or
mov
push
cs
dec
xchg
out
xchg
sbb
call
pop
cwtl
gs
add
mov
test
mov
push
dec
mov
test
daa
or
fdivl
jl
mov
sarb
fidivl
jae
dec
add
sbb
in
insl
or
cli
mov
or
fidivl
xchg
or
fwait
push
fisttps
sbb
sub
push
jo
and
ucomiss
dec
adc
enter
imul
cmove
jo
lea
dec
adc
sub
movb
call
imull
jmp
cmp
adc
push
and
sub
rcrl
rorl
sar
enter
and
dec
aam
xchg
mov
xchg
ljmp
sbb
or
mov
adc
xchg
mov
push
popa
cmp
or
lidtl
cmp
je
andb
fistpll
push
adc
ret
dec
xorb
shr
rol
sbb
xchg
sub
push
push
add
loopne
nop
mov
add
aas
jmp
fistl
test
mov
mov
mov
insl
xchg
cli
push
mov
and
fists
ret
fstps
or
fimull
dec
cmp
inc
jmp
ljmp
mov
popa
and
shr
inc
nop
cmp
jb
sbb
add
leave
shl
cmp
invd
jecxz
lcall
rol
sbb
lret
pushl
nop
xor
and
add
adc
dec
sbbb
addr16
lret
pop
xchg
shl
sahf
jne
dec
ss
adc
sub
xor
push
idivb
pop
pop
pop
lret
mov
repnz
jo
push
ret
push
fwait
jl
sub
inc
fnop
je
mov
cmovle
xor
sbbb
inc
or
inc
test
jle
mov
sbb
xor
or
add
mov
and
pop
xor
or
and
mov
jae
mov
cmp
inc
adc
sub
mov
lods
cmp
mov
sbb
out
xor
ror
and
xchg
add
and
sarl
mov
or
xchg
push
or
xor
ss
sbb
push
dec
pop
int
pusha
enter
dec
ja
cmp
popl
cltd
dec
or
cltd
push
and
mov
mov
clc
pop
xchg
sti
pop
scas
outsb
dec
push
hlt
inc
dec
nop
pop
pushl
int3
push
or
hlt
mov
in
dec
sub
movsb
cmpl
jo
into
and
rorl
cld
and
out
dec
dec
test
roll
and
inc
xchg
mov
shl
divb
test
nop
add
icebp
pop
je
insl
orb
gs
cli
xchg
in
cld
std
ret
sbb
lcall
inc
int3
xor
pop
in
insl
jle
jge
add
addb
or
inc
sub
lahf
or
int3
sbb
cmp
pop
inc
ja
adc
push
and
add
incb
jne
inc
sub
dec
sub
mov
aas
mov
ljmp
pop
fdiv
sub
inc
mov
inc
stc
std
repz
or
jne
dec
mov
push
arpl
pop
and
xchg
pop
lcall
push
add
pop
mov
dec
mov
cld
lock
scas
adc
xchg
mov
cmp
in
test
jg
aam
jb
sub
hlt
xchg
or
adc
pop
sub
inc
js
je
xchg
inc
je
stc
sbb
cmp
pop
jl
outsb
inc
in
mov
xor
push
add
sbb
ret
cmp
nop
enter
xchg
xor
add
ja
decl
subl
fs
xor
sub
mov
dec
sub
loopne
mov
dec
ss
jp
xchg
or
mov
inc
shlb
enter
fwait
or
xchg
arpl
adc
fs
jmp
pop
fs
sbb
or
push
hlt
das
dec
ret
mov
js
or
cmp
push
xchg
push
cwtl
out
xchg
mov
mov
mov
repz
out
adc
mov
cwtl
inc
imul
cmp
rolb
xchg
adc
sub
out
mov
cltd
pop
mov
inc
insl
fidivrl
sbb
pop
xchg
xchg
adc
lea
lret
jecxz
dec
and
add
adc
out
dec
std
or
popf
cmp
and
ret
insb
push
push
push
add
jg
popa
jo
xchg
subb
mov
sub
add
das
mov
pop
sar
jmp
insb
adc
loope
jp
mov
pop
cmp
je
mov
mov
inc
hlt
lods
js
push
cmpb
jne
jnp
faddl
push
loope
lea
inc
push
push
lock
dec
repnz
pushf
loopne
movb
add
jecxz
xor
pop
in
aas
nop
out
call
add
jecxz
out
and
incb
mov
fiaddl
inc
fcomp
scas
sub
gs
in
xchg
or
adc
xor
hlt
popa
insl
pop
cmp
push
test
movsl
push
push
jmp
pop
jns
or
jge
sub
xchg
mov
in
dec
ljmp
push
in
je
and
or
add
add
cwtl
loop
adc
mov
mov
subl
or
or
xor
or
aas
pop
rorl
gs
mov
xchg
movb
mov
ret
sbb
cmp
scas
adc
sub
out
mov
mov
adcb
jne
sbb
and
movsl
in
fistpl
jg
in
in
dec
mov
or
clc
push
popf
jbe
je
inc
jb
jne
inc
and
cmp
and
push
inc
push
enter
push
movsl
adc
add
pop
hlt
insb
clc
jns
ret
sbb
mov
jl
sub
xchg
push
fdivrl
cmpl
mov
mov
out
sub
mov
xchg
sub
or
and
pop
push
pop
outsb
les
aad
add
xabort
shlb
aam
and
sbb
mov
ret
ret
sub
push
push
or
pop
xchg
dec
push
add
push
push
cmp
sbb
subb
mov
push
jmp
test
add
or
push
inc
cmp
adc
add
push
or
and
or
xchg
add
or
inc
mov
mov
mov
adc
and
dec
and
inc
out
push
movsb
loope
in
pop
pop
cmp
hlt
sub
and
add
and
sbbb
and
dec
dec
es
dec
and
and
popa
lahf
clc
pop
enter
dec
pop
jmp
jmp
add
mov
in
icebp
pop
or
sbb
fdiv
sbb
pop
aad
push
ss
push
adc
jmp
movsl
divb
out
imul
xchg
sbb
sarb
daa
les
adc
cmp
enter
adc
fisubs
loope
out
jne
cld
xor
icebp
sbb
daa
jmp
add
push
rolb
jnp
jne
arpl
add
jecxz
jmp
ds
popa
aaa
pop
or
pusha
adcl
add
jne
mov
add
pop
sbb
or
mov
mov
mov
mov
inc
imul
loope
out
mov
or
pop
test
jno
push
xor
movb
lret
mov
loope
fdivl
sub
jle
sub
andl
mov
call
fdivs
jl
out
notb
add
xor
inc
xchg
out
icebp
jmp
jbe
adc
mov
dec
insb
mov
mov
js
in
out
inc
les
add
mov
dec
das
xchg
inc
cmp
js
xchg
mov
jae
dec
out
mov
jmp
movsb
adc
loop
pop
push
xor
adc
mov
xchg
mov
lea
popf
call
dec
fs
mov
cmp
and
call
rolb
cwtl
or
add
xorb
lea
imul
adc
cmpsb
dec
inc
cwtl
adc
scas
bts
ss
dec
or
add
hlt
faddl
or
test
aam
les
mov
mov
pop
push
jmp
xchg
or
ds
cli
clc
xorl
mov
lret
inc
mov
cmp
pushf
stos
into
xor
add
das
push
sahf
cmp
mov
sbb
adc
or
and
mov
mov
push
daa
and
cmp
adc
xchg
js
mov
pop
push
push
or
movsb
pop
mov
cmp
test
sarb
sbb
test
mov
rclb
pop
fsub
pop
sti
adc
jmp
les
je
mov
mov
je
cmpsb
jne
jmp
not
popf
out
xchg
dec
repnz
stos
enter
imul
pop
mov
rcrb
add
enter
pop
rol
xor
add
fld
mov
mov
add
sub
jae
mov
nop
mov
sbb
sbb
imul
add
mov
adc
mov
mov
fnstenv
movsl
loope
movsl
mov
movsl
push
sbb
xchg
or
mov
je
mov
xor
addr16
mov
lret
test
push
push
stc
sbb
push
add
mov
sub
mov
stos
popa
loope
mov
mov
dec
call
fimuls
pop
jl
movsl
add
push
cmp
jae
in
jge
inc
pop
stos
sub
gs
inc
ds
jmp
sub
je
dec
rorl
loop
ret
xor
or
push
jmp
cmp
push
dec
push
les
test
inc
pusha
pop
clc
jle
lret
ffreep
pop
test
pop
std
add
ss
mov
xchg
inc
iret
movsl
jl
and
pop
xchg
cmp
push
mov
mov
bound
mov
jo
sbbl
or
mov
push
jp
add
or
mov
mov
gs
mov
pushl
rorb
imul
adc
repnz
sbb
and
popf
sub
pusha
cltd
xor
sub
add
sbb
mov
imul
neg
cmp
js
or
push
adc
pop
pop
ret
and
cmp
dec
push
xor
add
mov
leave
fdivrs
ficompl
stos
jns
les
mov
aas
loope
ret
and
call
lcall
stos
rorb
scas
or
push
sbb
xchg
int3
frstor
jmp
mov
inc
es
lea
int3
stos
bound
sbb
xchg
push
mov
enter
lds
mov
mov
pop
je
hlt
push
lds
xor
or
sub
pop
stos
cwtl
mov
inc
ljmp
loope
jmp
stos
mov
inc
imulb
jb
pop
dec
and
cmp
push
mov
lret
negl
call
sub
jmp
dec
sbb
repnz
hlt
enter
loop
inc
lock
push
subl
pop
jo
jmp
jo
jge
add
inc
addr16
dec
push
lock
add
sub
and
in
push
pop
xchg
out
mov
cwtl
ljmp
cmp
cmpl
jle
mov
das
fwait
sub
nop
testb
adc
and
mov
add
push
ja
xchg
mov
test
movsb
sbb
fwait
adc
fistpll
mov
leave
adc
cmc
lcall
or
subb
icebp
idivb
mov
dec
fsubrl
xor
adc
push
fsubrl
sub
dec
and
js
mov
test
adc
push
out
jae
adc
xchg
movsl
and
add
xchg
sub
ret
lahf
into
dec
inc
and
imul
mov
pushf
repnz
call
shlb
out
stos
dec
or
adc
inc
sub
je
add
adc
sub
and
add
xor
ja
xchg
test
push
stos
inc
and
push
sbb
or
push
cwtl
data16
test
mov
sub
arpl
and
inc
enter
sbb
ret
and
push
sbb
and
ja
arpl
ja
ret
inc
add
pop
testb
movsl
ds
push
or
adc
test
and
outsb
push
xor
xchg
mov
pop
push
repnz
lods
push
movl
or
dec
add
push
fldl
adc
pop
push
dec
into
bound
cmp
sbb
sub
nop
push
fsubl
and
push
jo
bound
call
ss
movsb
dec
mov
and
adc
popf
lahf
js
test
pop
sbb
cmp
mov
testb
test
daa
fst
mov
scas
and
or
lods
or
fwait
jmp
or
mov
imulb
nop
pop
subl
dec
mov
sbb
rdmsr
arpl
add
mov
add
orb
jb
or
daa
lret
xchg
fldt
and
dec
pop
fstps
icebp
push
xor
clc
and
adc
ret
inc
mov
or
lods
or
hlt
dec
imul
mov
popa
inc
add
add
mov
cld
mov
jae
push
das
mov
decb
lods
scas
shl
mov
jl
not
inc
mov
dec
push
pop
add
les
jbe
mov
jle
inc
mov
fadd
or
or
mov
mov
inc
inc
dec
mov
mov
rep
cmc
and
lock
rorb
dec
and
or
sub
popa
es
ret
sub
pop
add
fcoms
inc
lock
mov
scas
bound
mov
or
xchg
sub
test
or
jne
inc
mov
push
mov
pop
mov
adc
xor
cmpsb
jmp
jle
pop
je
xchg
cmp
xchg
rorl
test
add
or
or
xchg
decl
jge
mov
inc
sub
insb
inc
incl
dec
push
scas
mov
adcb
pop
ds
mov
stc
pop
add
aam
ja
jle
mov
popa
push
sbb
mov
or
data16
lcall
std
out
loopne
cmp
sub
xor
push
push
adc
mov
dec
pop
aam
push
add
or
push
sub
cmp
cmp
stos
and
jb
push
cmp
call
lret
in
push
test
xor
fcmovne
ret
movl
clc
enter
xchg
inc
add
mov
xchg
sub
loop
pop
mov
add
shrl
sbb
in
aam
loop
les
jecxz
and
jle
sub
imul
push
subl
cs
mov
and
jne
call
xor
pop
cld
mov
dec
lea
loop
arpl
mov
pop
jmp
push
push
mov
adc
fs
add
jmp
cmc
insb
ds
and
xor
cmc
pop
je
xorb
aaa
test
and
in
xchg
or
decl
sub
add
daa
cmp
pop
xor
push
cmp
fistpl
cmc
mov
int
add
faddl
or
inc
sub
fmuls
les
in
push
sti
pop
xor
shrb
pusha
or
sbb
das
jne
outsb
neg
adc
std
cmp
dec
pop
rclb
lahf
stc
mov
inc
mov
jmp
sub
and
or
pop
aaa
leave
or
mov
inc
and
inc
outsb
pushf
loope
push
inc
mov
mov
push
dec
jg
les
clc
shrb
mul
cmp
push
inc
adc
sti
add
mov
fs
jg
ret
mov
inc
add
xchg
stos
mov
add
and
out
and
sub
or
xabort
lret
xchg
int3
es
inc
mov
mov
enter
mov
rorb
lahf
push
dec
mov
lea
ljmp
bound
mov
or
lcall
scas
xor
push
mov
daa
dec
add
ret
mov
sbb
mov
leave
push
xchg
or
test
ljmp
pop
or
ds
mov
jmp
loopne
mov
sti
inc
dec
cmp
add
out
adc
or
add
push
lock
stos
lods
sub
xlat
sbb
xchg
rcrb
add
in
pusha
or
dec
sub
and
jp
sub
or
sbb
jbe
fadds
aam
leave
mov
test
pop
jl
mov
dec
int3
rcr
or
push
iret
fisubrs
dec
int3
test
mov
ror
mov
xchg
lods
push
jge
pop
dec
xchg
int3
addb
inc
sub
ret
enter
or
clc
xchg
xchg
decl
xchg
or
cmp
popf
cld
mov
xor
jb
jmp
inc
lock
push
jg
or
xor
sub
push
jne
mov
or
sub
lock
inc
addb
in
sbb
movb
push
adc
js
pop
loopne
fmull
pop
sbb
int
pop
adc
jbe
push
loope
cs
adc
or
dec
addb
push
jb
jmp
loope
cwtl
sub
js
sub
pushf
and
pop
push
lea
icebp
pop
mov
jmp
adc
ret
inc
mov
and
mov
ljmp
ret
fisttpll
mov
mov
out
scas
mov
shlb
in
push
lock
add
xchg
fsub
lret
xchg
add
loopne
mov
push
cli
int3
xchg
imul
and
les
and
jae
and
fninit
mov
mov
pop
mov
ljmp
mov
dec
loopne
rcrl
sbb
push
mov
jo
xchg
cld
cmpsb
les
push
mov
and
jmp
or
xor
aaa
and
xor
jmp
das
and
mov
ret
fwait
add
push
add
or
or
or
or
jmp
sub
mov
jne
sub
or
xor
inc
sti
rorb
dec
shrb
cld
andl
adc
adc
and
movsb
mov
clc
pop
movl
jge
mov
jb
xor
mov
je
data16
mov
adc
mov
fldl
adc
push
lret
mov
adc
sub
cmp
cltd
sub
int3
jge
mov
or
and
add
mov
push
lea
push
lret
xor
vcvtsd2ss
xchg
xchg
sbb
sbb
test
xchg
nop
add
nop
or
shrb
add
inc
mov
xchg
xor
scas
jne
test
xchg
cmpsb
sub
mov
roll
rcrb
ret
ljmp
adc
jae
mov
rolb
or
inc
pop
pop
xor
xorl
scas
fs
lods
dec
mov
pop
in
inc
je
sub
sbb
in
lcall
out
into
pop
mov
ret
mov
in
or
push
adcb
and
lock
pushf
mov
fs
fistpl
or
rorl
xchg
sti
rolb
sub
test
mov
insb
stos
mov
cli
nop
test
dec
bound
ja
sbb
or
stos
or
arpl
inc
pushf
mov
xorb
inc
cmp
mov
mov
in
sub
push
adc
test
or
pop
jg
dec
sti
mov
mov
adc
rclb
adc
sbb
jne
and
outsb
mov
or
fmull
add
mov
mov
fiaddl
nop
or
lock
rorl
mov
jle
orb
clc
inc
mov
dec
leave
bound
mov
mov
cmp
push
stos
js
adc
jnp
out
adc
dec
xor
push
push
lods
js
jo
stc
and
pop
cmp
dec
sub
sbb
mov
xchg
sub
das
divb
mov
repnz
jp
jae
lcall
xchg
test
icebp
aaa
leave
ret
fadds
pusha
push
pushl
mov
cmpsb
mov
jmp
mov
jne
out
into
push
inc
pop
adc
loope
inc
or
sbb
sub
add
cmpb
dec
or
inc
jmp
in
mov
xchg
jecxz
mov
sahf
dec
inc
add
clc
hlt
mov
mov
mov
je
clc
jmp
jo
lock
push
sub
adc
add
sar
xor
and
dec
or
fdivr
popa
lret
lds
mov
jmp
das
cmp
pop
push
das
ss
inc
shrb
mov
adcl
or
push
sti
inc
inc
dec
aas
jge
sti
mov
enter
dec
jno
mov
inc
clc
add
cmpsb
jb
inc
dec
test
ret
jge
call
mov
jl
or
xchg
dec
hlt
pop
adc
add
sbb
sub
push
std
jp
scas
xchg
ret
dec
out
aas
aas
subl
cs
mov
jle
push
movsb
and
or
icebp
imull
pop
inc
xchg
or
or
stos
and
repnz
inc
fs
or
mov
shlb
pusha
mov
mov
or
inc
arpl
cmp
ret
sub
lahf
divb
mov
and
mov
dec
or
dec
mov
sub
sbb
and
push
pop
dec
in
bound
and
xor
cmp
clc
pop
push
and
adc
scas
sub
xor
nop
push
cmp
dec
cmpsl
jae
inc
cwtl
sbb
cmp
adc
out
adc
in
ficomps
inc
movsb
addr16
fimuls
pop
dec
or
insb
aas
add
inc
mov
mov
pop
mov
sub
enter
arpl
cmpsb
push
cmc
jg
out
movsb
ja
push
fisubs
mov
sub
adc
or
adc
mov
add
jmp
pop
int3
les
mov
mov
cmp
lret
movsl
adc
fldenv
andb
inc
mov
lods
sahf
nop
scas
iret
sbb
lock
test
jl
in
inc
js
jge
lahf
jb
mov
push
jae
xor
sarb
je
xchg
pop
mov
pop
push
rol
mov
push
fiadds
mov
push
xchg
rep
inc
clc
sub
sbb
pop
jne
inc
mov
add
call
mov
adc
test
cmp
and
mov
and
loop
pop
cmp
lret
sub
dec
adc
xchg
rolb
adc
sbb
repnz
enter
xlat
out
jb
dec
clc
pop
loope
mov
xlat
lcall
add
sbb
outsb
sbb
and
jne
pushf
dec
pop
les
insb
and
ret
push
hlt
and
hlt
push
sbb
pop
stc
mov
fiaddl
mov
or
inc
int3
and
push
inc
dec
push
clc
cmp
push
cmp
sub
jb
inc
mov
pushl
nop
stos
int
push
int3
lret
jne
ljmp
or
jmp
add
pop
cmpsb
lahf
sbb
pop
in
pop
lcall
mov
les
in
or
add
movsl
adc
or
adc
je
pop
or
xchg
adc
cli
adc
movzwl
sub
inc
or
fdivrl
push
pop
cltd
and
movsl
sahf
ja
add
test
nop
sub
push
pop
sbb
push
or
int3
std
mov
lret
pop
mov
pop
mov
frstor
ret
mov
or
xor
mov
xchg
inc
or
movsb
scas
or
lea
test
mov
sub
mov
lock
add
cmpw
cwtl
xchg
shrl
or
pop
ss
dec
pusha
jmp
dec
xchg
sarl
lcall
adc
imul
mov
mov
pop
jne
push
and
fildll
lret
sub
mov
int
in
mov
mov
jmp
xor
mov
pop
orb
test
in
test
adc
mov
pop
sub
mov
loop
sbb
sbb
or
mov
mov
je
mov
add
mov
dec
in
sbb
in
and
aaa
pop
lea
orl
mov
cmp
rclb
aam
pushf
adc
mov
mov
mov
mov
cwtl
rorb
mov
sub
bound
sub
or
mov
das
addr16
or
jb
and
xchg
lds
stos
push
lret
aas
and
xchg
aas
jne
and
shlb
mov
shl
movsl
xchg
fldl
imul
loopne
adc
hlt
mov
idivl
and
mov
stc
or
push
ja
jns
jb
mov
jmp
xchg
pop
pop
test
insl
das
fs
out
inc
pop
insl
ret
add
fs
mov
popa
insl
xchg
or
jo
dec
push
xchg
stc
mov
dec
adc
mov
mov
cmp
std
jae
test
aam
add
test
fcoms
jne
and
testb
je
cmp
jge
stos
rcrl
adc
adc
mov
or
lock
movsl
jge
repnz
stc
movsb
subl
fcomps
lock
adc
and
mov
and
fldenv
mov
out
xchg
mov
daa
pop
mov
clc
xchg
jnp
rcrb
loope
cmp
filds
mov
out
stos
lds
and
in
xchg
rcr
movsl
cmpsl
mov
mov
cmpsb
push
in
sub
pusha
clc
sub
xchg
inc
arpl
add
in
inc
dec
rclb
insb
push
push
pop
fcmovb
lahf
adc
push
scas
inc
jmp
imul
je
rorl
sti
dec
test
xor
jmp
lcall
add
sbb
push
inc
repz
mov
add
mov
adc
stos
dec
ja
inc
nop
ret
sub
push
add
push
or
or
shlb
and
lret
adc
or
or
push
or
hlt
jg
aam
xchg
push
mov
stos
subb
inc
loop
adc
test
jmp
mov
addr16
sbb
and
xor
lds
push
daa
xor
cmpsl
cli
stc
andl
fstl
or
inc
dec
inc
lods
cltd
loopne
mov
jl
xor
sti
int
std
cmp
lock
or
sub
sub
cmp
jne
add
pop
je
sbb
mov
adc
daa
pop
push
imulb
mov
push
js
scas
adc
mov
fs
sub
push
in
cmp
or
push
sub
movsb
push
mov
cmpsb
xchg
mov
push
pop
loopne
cmp
jl
cmp
mov
adc
mov
inc
jb
xchg
popa
arpl
inc
js
aas
mov
xchg
add
xadd
inc
scas
mov
ret
pop
pop
dec
and
xchg
cld
xchg
insb
jecxz
pop
cmp
adc
mov
mov
or
push
inc
lds
jne
inc
cmp
in
fidivs
fldenv
fstpt
test
and
ljmp
jbe
pop
jmp
cwtl
mov
push
mov
fsubs
scas
movsl
loope
add
add
fucomi
push
mov
jecxz
and
sbb
mov
cwtl
and
inc
movl
inc
adc
sarl
dec
cli
push
scas
icebp
add
fisttps
popf
psrld
xchg
daa
in
mov
pop
sbbl
inc
or
cmp
mov
jmp
fsubl
loop
pop
lcall
lret
cmp
inc
or
pop
test
enter
mov
popf
inc
or
adc
dec
sbb
ds
mov
cmp
lock
dec
fstps
mov
xor
push
xchg
and
adc
sbb
lahf
fs
xor
dec
adc
enter
sbb
jp
sbb
mov
adc
adc
ds
clc
and
add
je
jl
lret
aad
leave
outsl
sub
cmp
jge
push
movsb
seta
test
and
rcl
lea
push
push
lret
cmc
clc
loope
es
adc
and
cmp
cmp
ret
sub
pop
mov
or
in
fchs
push
sub
dec
cmp
sete
inc
sbb
pop
xor
push
push
xchg
in
push
inc
addl
jnp
mov
xor
inc
xchg
loope
ja
add
add
pop
aad
stos
jmp
loopne
ja
cwtl
sbb
mov
inc
xchg
rclb
inc
or
mov
fsubrs
add
jne
cwtl
lcall
jmp
les
fcoms
es
sub
in
mov
mov
stos
cltd
jb
je
or
and
mov
cmp
jmp
test
jnp
rol
mov
pop
lock
cmpsb
sbb
adc
cmc
and
and
scas
ss
std
dec
add
jg
add
sub
fwait
inc
call
mov
mov
in
loop
adc
iret
aad
sub
ret
pop
and
cld
std
cmpsb
ds
and
test
mov
sub
rclb
mov
data16
pop
lahf
or
pushf
inc
cs
adc
adc
sbb
dec
pop
in
sbb
pop
rolb
dec
mov
jne
repz
xor
les
push
out
sub
mov
xchg
or
aad
jo
bound
lock
xor
pop
fsubrs
adc
outsl
push
in
adc
in
mov
rclb
aam
inc
popa
int3
mov
add
mov
mov
push
and
and
dec
xchg
cltd
sub
mov
cld
and
icebp
xchg
xor
adc
popa
inc
insb
sbb
pop
mov
and
dec
adc
and
cmp
dec
cwtl
xor
or
adc
and
addr16
add
les
bound
and
xor
adc
cltd
sbb
pop
arpl
adc
mov
test
mov
cmpsb
dec
loope
push
cwtl
xor
xor
clc
sbb
hlt
and
sub
lock
cmp
in
sbb
or
in
add
cltd
loopne
and
mov
dec
js
mov
rorb
mov
sbb
mov
xor
cs
rclb
push
js
mov
aam
mov
pushf
in
dec
sbb
fs
sub
xchg
movsb
adc
mov
pushf
mov
popa
les
xchg
dec
shlb
nop
dec
test
in
and
pushf
push
cmc
into
mov
in
test
add
mov
mov
shlb
or
insb
mov
mov
inc
dec
int
roll
mov
sbb
int3
test
xor
adc
push
cmp
mov
dec
out
out
aaa
and
mov
insb
aas
sub
adc
jbe
or
push
call
mov
push
inc
xchg
enter
or
fdivl
mov
hlt
les
in
stos
insl
js
xor
and
sub
and
jecxz
sub
cmpsb
stos
push
xor
loope
or
inc
pusha
mov
pop
repnz
jns
les
ret
sarl
jae
lcall
dec
mov
xor
and
xchg
cltd
or
loope
jge
aas
inc
popf
je
mov
jmp
imul
or
mov
sub
adc
xor
daa
jle
enter
cmp
test
popf
adc
fsubrp
test
lret
mov
inc
or
sub
xlat
pop
push
or
ret
pop
pop
fs
in
mov
lea
pop
dec
out
xchg
cwtl
enter
out
pop
in
aas
mov
inc
lock
sub
or
mov
bound
stos
pop
movsl
xchg
movsl
pop
xchg
scas
adc
or
clc
push
jnp
in
call
xorl
mov
rorb
jg
icebp
jmp
mov
in
repnz
loop
adc
test
sbb
cwtl
adc
ret
jnp
jne
inc
sub
inc
bound
adc
nop
jo
lock
test
cs
jecxz
fs
gs
sti
or
lea
cwtl
movb
imul
xchg
lock
or
and
lret
hlt
xor
popf
jb
xor
cli
adc
and
shlb
ret
faddl
push
mov
xor
mov
xchg
pop
mov
sub
or
xchg
test
in
inc
lods
and
loop
sbb
hlt
mov
or
or
sarb
xchg
inc
enter
int3
push
and
shlb
js
xor
and
nop
test
lock
mov
bound
mov
loopne
enter
adc
les
dec
jl
mov
push
and
mov
icebp
nop
pushf
loop
sbb
hlt
fcoml
repnz
jmp
mov
dec
je
add
std
or
addr16
jns
call
stc
cli
scas
sbb
outsl
je
or
sbb
jne
or
or
test
inc
or
adc
inc
outsb
movsb
or
loope
pop
jnp
xchg
inc
insl
jo
dec
xor
jecxz
loope
je
mov
and
movl
adc
in
adc
and
inc
jae
adc
fcoml
adc
dec
and
enter
mov
cld
mov
cli
adc
ja
jae
nop
loop
or
les
or
and
lods
scas
or
mov
xchg
or
mov
mul
shlb
cmp
xor
notl
or
rcrb
xor
push
adc
dec
adc
push
and
test
adc
and
rorl
push
inc
jne
sub
and
push
sbb
sbb
mov
sub
and
cltd
push
jae
pop
or
idivl
inc
int3
pop
jo
stos
sub
lds
inc
xor
pop
test
lret
testb
adc
push
or
xchg
data16
fs
jp
ss
and
pop
dec
sub
inc
push
addr16
fs
inc
out
fs
adc
push
adc
gs
js
lret
testb
sbb
jns
rclb
lods
les
jle
inc
push
gs
cld
pushf
xchg
or
dec
insl
jo
addr16
jle
inc
int3
xlat
scas
hlt
push
jb
push
ja
pop
mov
jo
arpl
pushf
fwait
int3
scas
fs
cmp
adc
jo
adc
jno
xor
pop
test
cld
popa
sub
or
sbb
nop
mov
mov
dec
and
pop
pushf
add
mov
cmpsl
fmuls
in
mov
popf
cld
mov
push
dec
pop
std
mov
movsl
push
inc
call
das
std
xchg
mov
add
and
inc
hlt
push
pop
call
jg
xor
in
std
popa
dec
xchg
jge
or
test
in
add
les
inc
sub
std
sbb
enter
sti
in
loope
push
aam
jae
pop
jbe
xchg
js
ss
lock
decb
loope
sbb
stc
push
xor
sar
sbb
jmp
fildl
pop
inc
cmp
jg
cmp
xor
add
push
sub
clc
das
data16
mov
add
sub
aas
dec
int
dec
ud2
mov
jns
sub
icebp
dec
jl
add
sub
std
sub
dec
or
ficoml
xor
mov
bound
clc
mov
mov
pushw
xor
hlt
mov
les
stc
hlt
add
push
shr
add
test
test
jge
mov
xchg
add
mov
out
sub
and
bound
fildl
push
mov
cmp
enter
cltd
pop
rorb
aam
and
dec
push
and
repz
fstl
aam
outsl
mov
jo
cmp
incb
inc
inc
cli
ja
outsl
iret
sbb
test
ficomps
inc
out
aam
icebp
je
sub
push
sub
fdivrs
push
mov
xlat
call
adc
shlb
mov
pop
addr16
adc
nop
lds
inc
and
adc
jmp
and
test
push
inc
add
cmpsl
and
mov
insb
or
add
lock
lea
cmp
mov
popa
jne
rcrl
sbb
cmpsl
stos
push
jno
add
push
pusha
mov
shrb
lahf
ret
mov
and
sub
fdiv
incl
and
or
fnstenv
add
dec
adc
jmp
and
jmp
push
xor
subb
inc
adc
test
mov
imul
push
pop
arpl
sub
mov
or
inc
add
pop
pop
sbb
adc
xor
sub
out
xor
or
test
lahf
imul
inc
je
adc
fs
clc
inc
jmp
je
daa
adc
push
mov
mov
lock
popf
mov
cmc
add
jl
inc
xor
lea
xor
cmp
test
push
daa
push
add
lea
rclb
loop
xchg
popa
lea
test
inc
and
push
add
inc
adc
inc
mov
int3
xchg
sahf
jbe
sbb
mov
pop
xchg
enter
add
out
repz
lcall
pop
inc
xor
pop
in
scas
je
cs
ja
mov
pop
sub
xchg
push
aaa
mov
sub
sbb
jne
pop
push
mov
pop
adc
or
pop
xlat
jo
adc
jne
out
and
stos
adc
jmp
nop
sub
call
jp
and
idiv
pop
and
jmp
and
and
add
add
add
and
ljmp
push
outsb
je
test
mov
cmp
push
mov
mov
enter
clc
adc
ss
testb
inc
dec
add
xchg
jae
xchg
orb
in
xor
sbb
mov
in
aaa
nop
in
test
xchg
loopne
jbe
push
sub
cmp
mov
subb
push
es
or
leave
jno
adc
fldlg2
push
gs
sub
push
fwait
loop
xchg
push
popf
pop
and
adc
and
xchg
jmp
push
xor
enter
cli
movsb
jo
mov
mov
je
mov
pop
sti
les
or
push
push
push
cmp
jmp
adc
leave
or
or
push
movsb
stos
or
clc
sub
adc
mov
incl
adc
mov
in
xlat
imul
inc
add
jnp
loope
cwtl
push
cmc
dec
cmpb
and
adc
roll
popa
ficoml
jnp
pop
push
sub
cmp
je
scas
jne
push
push
push
mov
movsb
je
mov
adc
jae
cwtl
addr16
xor
notl
push
lock
inc
lahf
and
imul
mov
movsl
test
into
clc
sbb
add
sbb
sahf
iret
loop
sbb
cmpsl
or
iret
mov
shr
pop
pop
sub
jne
out
lds
cmc
sbb
jg
aad
mov
or
daa
lock
cmp
clc
xor
sub
lea
adc
mov
lock
test
lret
ja
gs
mov
ss
push
adc
sub
mov
test
scas
arpl
mov
fwait
lcall
adc
xor
mov
bound
sbb
mov
pop
popf
pop
cld
call
dec
std
iret
sub
inc
es
mov
lds
stc
xlat
xor
push
icebp
in
inc
sbb
and
sbb
jmp
inc
loop
loopne
sahf
hlt
push
lock
cmp
jne
mov
cmp
jne
xchg
sub
push
sub
popa
scas
rcll
ja
rolb
or
gs
or
mov
adc
and
add
dec
scas
xchg
les
cmp
xchg
mov
inc
data16
mov
pushf
sub
adc
testb
cmpb
test
shrb
fs
insb
fsubs
adc
or
add
mov
and
add
nop
cmp
movsb
test
jnp
fstps
fwait
das
inc
nop
sub
xor
xchg
and
cmp
push
aam
test
or
jb
mov
sub
mov
xchg
mov
and
adc
mov
jmp
test
add
jmp
xor
or
adc
push
rorl
push
push
sbb
inc
orb
xchg
mov
add
je
dec
icebp
mov
movsl
sahf
cld
leave
adc
push
fnstenv
lea
mov
les
les
mov
xchg
jp
xchg
in
fwait
mov
fldenv
andl
aas
adc
cmp
xor
clc
jg
jle
cld
adc
dec
es
sub
or
mov
sub
std
mov
xor
std
cmp
rcrb
dec
push
and
bound
xchg
push
imul
stos
mov
xchg
pop
sahf
popa
ret
mov
dec
in
addr16
mov
adc
imul
jns
mov
das
jnp
jmp
int3
cmp
shrb
mov
and
dec
mov
mov
xor
push
sbb
adc
test
mov
or
mov
adc
stos
sub
sub
mov
shll
cmpsl
nop
pop
in
or
mov
dec
push
xchg
pop
and
mov
jge
add
push
adc
add
and
dec
and
xchg
inc
jo
jmp
push
or
bound
xchg
movswl
dec
cmpsl
push
nop
fldenv
rorb
pop
adc
ret
inc
adc
lods
and
push
fmull
mov
ds
mov
cmc
mov
adc
in
test
sarb
push
or
lea
inc
xchg
mov
and
add
ret
je
pop
cmp
lret
jmp
mov
cmp
test
push
stos
stc
push
cmpsl
shlb
clc
movsb
and
xor
adc
dec
pop
mov
mov
mov
jo
test
mov
inc
cs
push
adc
rcrl
sub
into
aad
mov
dec
mov
jo
sub
pop
xchg
dec
and
rolb
cmp
inc
mov
jmp
push
enter
sub
or
push
incb
test
aaa
fwait
push
ret
add
lock
decb
adc
sbb
mov
leave
mov
mov
mov
scas
daa
faddl
add
dec
inc
mov
xor
sub
jb
xor
adc
cltd
es
dec
cs
jns
pcmpgtb
incb
icebp
into
lcall
dec
inc
in
sbb
ret
sub
sti
call
andl
mov
jb
mov
ret
pop
popf
cld
fs
jge
xchg
adc
dec
test
adc
xor
xchg
push
shrb
adc
lcall
imul
add
xchg
nop
add
sub
xchg
lods
and
dec
lret
add
ss
jp
xchg
dec
shlb
les
sbb
mov
in
or
adc
inc
popf
jecxz
inc
adc
and
sub
hlt
and
popf
gs
inc
xchg
std
addl
andl
inc
aam
cmpsl
out
xchg
adc
fmull
in
sbb
xchg
pop
dec
adc
and
inc
jp
jbe
push
mov
gs
jg
mov
bound
call
imul
adc
or
inc
test
int
imul
sarb
call
or
push
xor
jnp
les
cmp
cmp
cltd
stos
xchg
add
sub
adc
pop
ja
mov
jns
or
inc
std
mov
rcrb
adc
sub
xlat
add
sbb
jno
in
mov
hlt
test
sbb
stos
fscale
imul
sbb
scas
mov
mov
nop
hlt
in
mov
cltd
sbb
cld
jmp
popa
mov
movaps
data16
adc
cmp
int
adc
dec
sub
lods
filds
rcrb
mov
inc
sub
ja
cld
popf
fxam
loope
sbb
in
pushf
daa
mov
jp
fdivs
mov
inc
mov
add
jmp
or
inc
sbb
imul
mov
xchg
xchg
jno
xchg
pop
out
push
mov
and
adc
xchg
std
jbe
inc
add
ret
xchg
xchg
adc
adc
sahf
adc
xor
or
and
sbb
dec
cmp
push
and
test
dec
adc
adc
rorl
out
sti
es
sub
and
mov
push
inc
sub
and
push
hlt
adc
adc
inc
fnsave
sbb
xchg
push
pushf
adc
mov
or
pushf
jmp
int3
sbb
or
lods
daa
sub
push
lock
dec
mov
les
insl
imul
test
stos
sbb
sbb
adc
add
and
inc
inc
pop
jbe
mov
and
and
push
mov
lret
xchg
or
and
sub
movsl
ljmp
mov
sbb
fildll
xchg
repnz
pop
sub
jp
mov
mov
adc
sub
mov
push
fstl
adc
inc
hlt
jmp
dec
icebp
or
sbb
inc
incl
xchg
xchg
push
daa
sbb
adc
jo
sarl
jnp
lods
or
rcrl
mov
jns
jns
sbb
js
repnz
mov
adc
jp
mov
pop
mov
pop
inc
shlb
pushf
dec
push
or
dec
fwait
mov
push
push
cmpsl
cmpsl
dec
mov
mov
or
pop
jg
movsb
jg
bound
pop
call
out
cmp
inc
push
mov
out
adc
call
leave
out
jnp
inc
mov
pop
enter
pop
inc
test
repnz
ds
xorb
xor
cmpl
inc
and
mov
adc
push
dec
into
xchg
frstor
fs
mov
je
orl
sub
fldenv
or
pop
call
push
setne
mov
push
or
pop
add
and
jb
fstpl
jl
pop
inc
or
jne
xor
xor
xorb
push
aam
mov
dec
daa
loop
mov
sbb
and
pusha
dec
mov
adc
hlt
and
mov
arpl
mov
subb
add
sbbb
or
mov
adc
and
lret
or
add
sbb
xchg
xor
ds
dec
adc
or
cmp
jae
and
into
fsts
das
popa
fs
jg
sub
test
push
test
jmp
pop
sbbb
imul
stos
push
scas
jae
inc
xchg
sahf
pop
decb
add
xor
sbb
clc
pop
clc
aam
cmp
dec
jb
sbb
iret
popf
sti
pop
movsb
ss
outsl
cmp
fcomps
mov
test
cmp
in
inc
cmp
inc
jns
imull
movsb
xor
pop
fstpl
pop
xchg
xor
add
pusha
and
lods
fnstsw
push
inc
add
pop
mov
unpcklps
jmp
sbb
mov
push
dec
lret
or
and
adc
fsts
jecxz
adc
loopne
sub
and
mov
andb
push
inc
and
sub
dec
dec
xchg
pusha
and
and
gs
jmp
adc
add
xor
lcall
cmpsl
push
xor
dec
and
pop
rcll
lds
and
mov
mov
jmp
nop
fcomi
fstps
inc
mov
ss
imul
xchg
fmull
movswl
push
xor
or
pop
rsqrtps
mov
pop
inc
mov
mov
imul
call
rorl
adc
inc
adc
lahf
xchg
jl
mov
sub
push
push
sbb
lods
push
daa
add
mov
mov
fucomi
mov
popf
xor
sub
stc
or
mov
data16
dec
xchg
lods
in
jno
fisttpl
and
imul
push
push
and
fildll
pop
mov
sub
sti
push
inc
mov
adc
adc
cmp
imul
les
xor
jmp
movsb
rorl
and
mov
inc
cli
sahf
mov
sbb
or
mov
es
pop
popf
add
bound
jmp
or
cmpsb
inc
xchg
repz
push
sub
jb
or
stos
mov
mov
sbb
data16
hlt
or
sbb
or
outsl
ja
sub
sti
in
call
dec
xor
je
mov
cmova
xchg
les
hlt
and
jns
sbb
jmp
repnz
adc
gs
xchg
lock
push
pop
dec
push
leave
push
ja
sub
insl
fwait
inc
pushw
sbb
mov
add
adc
mov
aam
call
loop
test
arpl
cmp
pop
pop
mov
repz
dec
jae
add
lahf
icebp
lahf
les
dec
cld
bound
pop
pop
adc
icebp
outsl
sub
loopne
inc
push
movsl
mov
inc
jecxz
sahf
les
xchg
sbb
adc
push
int
jae
jge
push
hlt
push
pop
loop
test
frstor
cmp
inc
pop
push
push
pop
xlat
clc
insb
dec
sub
pop
jns
pop
fcmovb
sbb
sub
inc
loope
sub
pusha
inc
frndint
pop
stc
sbbl
sub
or
jbe
addb
sahf
xchg
mov
pop
sub
sbb
adc
ljmp
das
mov
loop
sbb
xchg
pop
mov
dec
pop
jo
sbb
xchg
push
pop
push
enter
mov
push
jo
sbb
mov
pop
sbb
test
sbb
pop
shrb
and
aam
mov
lret
sbb
or
pop
pop
adc
sub
add
and
dec
sub
adc
sub
mov
dec
adc
jbe
lea
mov
movsl
sahf
pop
and
sbb
jbe
cmp
xchg
lahf
and
sbb
inc
mov
jmp
loop
loop
xor
mov
cmpsl
in
cmp
sbb
movsl
stos
sahf
sbb
shrb
sub
popf
xor
and
and
loop
das
xor
hlt
fildll
push
enter
push
loope
insl
sbb
push
fiadds
mov
sub
les
popa
loope
push
adc
test
jo
and
jge
call
xchg
fildll
xchg
push
mov
xor
lods
or
inc
add
bound
and
dec
xor
cld
dec
ret
data16
jmp
rolb
pop
sbb
or
out
mov
inc
push
out
mov
mov
jbe
push
jecxz
and
pop
inc
repz
inc
adc
je
and
pop
pop
popa
imul
and
cli
loop
xor
jb
movsb
insl
and
test
loopne
cmp
jb
mov
mov
push
jle
pop
inc
xor
push
xor
xor
fsts
or
or
adc
add
cmp
mov
mov
and
push
cs
repnz
fxch
mov
test
fisubs
sbb
mov
and
and
imul
xor
cld
and
push
cli
lock
test
call
or
in
push
lret
mov
lds
pop
pop
mov
sti
sbb
lds
jnp
mov
lea
pop
test
stc
add
cs
mov
or
negb
sti
ret
jbe
test
mov
mov
cmp
dec
addb
es
je
and
add
adc
mov
mov
in
cmp
xchg
cld
dec
and
add
mov
sub
pushf
push
sti
and
inc
dec
push
or
pop
pop
push
or
and
loopne
xchg
cmpsb
arpl
rcrb
xlat
or
jg
testl
je
adc
mov
loopne
in
cmp
lea
scas
add
sub
mov
test
mov
test
inc
test
push
daa
push
repnz
adc
push
mov
stos
test
jb
mov
mov
cmpb
lock
lret
xorl
pop
test
xchg
inc
hlt
mov
and
xchg
or
sahf
mov
aaa
std
nop
jecxz
lret
push
mov
and
pop
daa
cmp
and
mov
cmp
jge
mov
mov
int3
dec
out
pop
cmp
sub
inc
inc
bound
cmp
loop
adc
enter
jmp
sbb
inc
add
sub
in
in
iret
imul
xor
fstps
sub
adcb
scas
fs
jae
clc
std
ja
mov
loop
pop
jmp
push
adc
loop
push
inc
lock
push
pushl
push
dec
or
cltd
jge
sbb
sti
stc
testb
sbb
adc
xchg
test
push
or
inc
in
lahf
jno
and
rcrl
fsubl
rcrb
and
int3
movsbl
mov
ret
sbb
js
nop
rorl
shll
rclb
mov
sarb
mov
shlb
les
or
ss
xchg
or
cmp
daa
or
and
xchg
in
mov
and
cmp
cs
dec
insl
xchg
nop
and
fisttps
add
enter
and
jo
mov
dec
dec
loop
pop
mov
adc
flds
push
and
fnsave
sbb
dec
mov
lods
outsb
push
sbb
mov
push
dec
cmp
scas
mov
movsb
cmp
jl
dec
call
ror
fildll
lds
jle
adc
cli
sbb
bound
cmp
jno
push
sbb
inc
mov
cld
ds
enter
cmc
sbb
imul
xor
mov
cmc
sbb
cmp
popf
xchg
xchg
dec
movsb
lods
les
in
xchg
xchg
or
sbb
cli
add
xchg
mov
sub
xchg
clc
leave
dec
cmc
and
cmp
rorl
ret
jne
gs
mov
mov
imul
dec
das
in
inc
ds
ds
ret
jle,pt
loopne
daa
sbb
jmp
aas
dec
inc
test
dec
cmp
hlt
jb
adc
std
or
sub
mov
ficompl
test
mov
pushf
cmpsl
daa
push
pop
sub
xor
enter
fisubl
cmc
and
inc
inc
xor
outsb
adc
xorb
sbb
adc
add
leave
sub
mov
or
outsl
mov
xor
jecxz
mov
adc
inc
push
sub
sub
mov
test
lods
or
or
inc
push
adc
pop
sub
and
in
es
fdivrl
mov
in
pop
xchg
fmull
mov
inc
sbb
aam
and
xchg
sbb
rcrb
mov
test
sub
jmp
enter
dec
xor
inc
mov
mov
hlt
sub
les
cmp
sbb
flds
mov
add
sub
data16
ljmp
adc
mov
and
dec
push
xchg
outsl
and
std
daa
dec
mov
hlt
mov
mov
fnsave
cli
adc
xchg
cmp
mov
pop
loop
xchg
cmp
inc
or
dec
sub
pop
sbb
test
sbb
hlt
fimuls
movsb
xor
std
pop
jmp
mov
sbb
std
xor
movsb
mov
and
cmp
cmp
push
movsb
mov
nop
cltd
dec
outsl
push
rcr
sbb
es
bound
add
jno
orb
aam
loop
leave
test
sub
cmp
int3
sbb
dec
mov
repnz
pop
mov
loop
mov
roll
cli
jne
jecxz
ret
pushf
xor
rclb
cmp
leave
inc
lahf
add
xor
dec
jmp
or
or
aas
jmp
sub
push
std
stc
cltd
sub
ss
dec
aaa
push
mov
pushf
jecxz
pop
inc
pop
mov
jae
sbb
add
mov
imulb
cld
sbb
dec
std
cmp
inc
inc
push
add
stos
jae
or
dec
int
dec
push
sub
aad
outsb
and
mov
mov
pop
xor
and
insl
cmp
test
dec
cmp
lea
test
or
add
add
mov
push
pop
lcall
ret
mov
mov
jmp
jmp
lods
jl
ja
pop
aas
mov
dec
std
mov
or
clc
jb
dec
mov
add
lret
pop
outsl
xor
push
and
stc
adc
enter
and
and
adc
and
jae
push
xchg
sub
es
gs
dec
popf
cmp
and
test
push
add
sub
push
mov
stc
or
sti
lahf
jb
cmp
jbe
int
ret
fnsave
fwait
testl
hlt
push
fistpll
mov
repnz
in
or
ds
jo
push
inc
mov
pop
push
lret
push
inc
scas
adc
in
sarl
mov
bound
fs
and
cmp
jbe
jbe
mov
mov
lcall
lods
fwait
shr
loop
aas
dec
sub
repnz
sbb
mov
add
or
jmp
push
add
xchg
cmp
shll
jbe
js
lret
out
cmp
iret
mov
daa
inc
xor
pop
loop
dec
adc
sbb
sub
inc
inc
dec
mov
movsb
scas
cmp
xchg
or
cli
xor
addr16
or
mov
and
add
je
dec
out
out
adc
orb
cmp
sub
ret
or
lret
adcl
nop
or
mov
fnstcw
and
mov
fcmovbe
outsb
mov
cwtl
mov
inc
pop
or
popa
lea
jmp
push
inc
jbe
and
negb
inc
or
and
fs
insb
adc
jmp
add
sbb
insb
inc
and
and
and
cld
or
jecxz
mov
dec
out
inc
call
fcoml
push
out
je
scas
mov
fcoml
hlt
or
jne
rcrl
xor
and
jbe
cmpsb
cmp
dec
jle
dec
or
adc
xor
adc
xchg
jbe
mov
popf
sub
insl
movb
or
fstps
gs
adc
jae
sub
push
push
popa
fidivl
rolb
jae
outsb
lret
sarb
aad
sbbl
mov
jl
pop
das
and
jp
jbe
jle
pop
in
pop
das
fsubrp
lret
xchg
bound
pop
fcom
mov
pop
or
xorb
xchg
ja
ret
lret
imul
and
mov
adc
xchg
jge
aad
rorl
or
popa
adc
xchg
xchg
inc
inc
cmc
dec
roll
cmp
int
adc
mov
nop
ljmp
mov
jb
lcall
repnz
es
cmp
inc
aam
mov
loop
jmp
push
andb
jmp
mov
and
lods
inc
sti
lcall
sub
adc
sbb
sbb
jl
pop
je
mov
fdivrs
cmp
testl
ljmp
xchg
cmpl
jmp
xchg
dec
mov
test
mov
xor
dec
mov
dec
fs
les
sbb
xchg
popf
rcll
mov
dec
dec
mov
jae
imul
dec
fdivrs
adc
pop
es
hlt
mov
cmp
cli
int3
pop
adc
lcall
dec
cld
push
add
pop
xchg
add
xor
pop
xchg
mov
adc
in
or
icebp
add
push
inc
and
sahf
filds
mov
leave
push
movsl
inc
test
movsl
movsl
lds
je
and
dec
sub
mov
dec
xchg
fsubl
or
jg
int
adc
mov
cli
push
mov
jle
repnz
jb
jg
in
and
sbb
mov
ja
fstps
repnz
popa
jg
lea
fistpll
in
clc
mov
ss
test
fdivrs
push
test
or
out
shlb
ljmp
jno
mov
push
aaa
movsb
cmc
leave
dec
cmpsl
adc
movsb
inc
push
push
xchg
stos
push
arpl
and
decl
sub
or
mov
or
xor
xor
cmp
out
fs
cmpsb
inc
inc
pop
inc
jo
ds
xchg
nop
pop
fs
jb
mov
adc
mov
leave
sarl
cld
adc
jo
inc
insl
jo
je
jge
jo
push
xchg
loope
adc
mov
mov
push
stos
mov
mov
insb
gs
adc
outsl
jne
sub
inc
inc
sti
jb
repnz
arpl
fsubr
call
dec
shll
adc
xchg
inc
in
leave
sub
mov
int
sbb
inc
adc
push
aas
imul
arpl
iret
mull
add
call
sbb
jmp
inc
inc
jns
adcl
push
clc
push
adc
add
pop
repz
fldl
or
push
out
pushf
inc
loope
mov
dec
enter
sub
push
pop
and
sbb
adc
mov
inc
add
lcall
shrl
cmpsl
push
inc
jmp
lea
int
sub
je
hlt
mov
xchg
out
scas
sti
divl
and
pop
adcb
shll
inc
dec
sub
xor
add
sub
dec
mov
nop
pop
test
add
ja
push
push
adc
add
test
sti
adc
xchg
inc
and
dec
test
cld
or
cs
mov
push
cmp
pop
inc
cmc
jns
sub
sti
and
and
sub
enter
pop
add
ss
je
stc
cwtl
leave
inc
bound
clc
es
add
aad
inc
dec
cmp
jmp
jge
clc
or
pop
popf
push
xchg
mov
add
pop
push
push
stos
xchg
adc
int3
inc
adc
fidivrs
aam
mov
ljmp
in
dec
adc
adc
data16
push
xchg
push
or
xchg
fisubrs
mov
sbb
xchg
mov
addl
xchg
cmp
and
lahf
push
or
ja
dec
dec
or
orb
nop
sbb
pop
push
jae
or
inc
in
mov
testb
setne
cmpsb
outsb
push
pop
mov
mov
or
adc
imul
xlat
xchg
les
mov
rorb
xchg
dec
sub
dec
adc
ret
rorl
and
inc
or
sub
arpl
add
xor
mov
clc
testb
and
lods
adc
mov
push
pop
fdiv
cmp
test
sub
scas
call
jl
push
add
cwtl
cmp
sbb
insb
xor
jne
xor
mov
adc
sbb
out
nop
bsr
adcb
leave
push
std
les
inc
shrb
cmc
popa
cmp
cmp
std
insb
pop
xchg
cmc
mov
pop
icebp
mov
cmp
je
mov
adc
lds
clc
push
pushf
pop
push
mov
mov
xor
outsb
sbb
add
ret
xor
pop
mov
stc
push
call
xlat
int3
shrb
push
or
std
adc
pop
les
cmp
cmp
and
adc
pop
scas
push
test
and
dec
add
and
dec
or
lahf
cld
jle
jmp
sub
cmp
mov
jmp
mov
push
or
pop
cs
leave
adc
add
mov
and
mov
lret
lock
xchg
sbb
mov
cmp
test
in
push
xor
dec
push
sub
sub
push
jl
mov
mov
xchg
out
lret
pusha
in
in
push
addl
jb
pop
ud0
cli
fstp
inc
scas
pop
fcomip
cmp
dec
nop
rclb
pop
pushf
repz
into
push
dec
sti
nop
popf
xchg
stc
jle
cmp
stos
lahf
cmp
inc
and
or
push
cmpl
or
fisubrs
jne
xchg
jno
fwait
les
imul
lock
outsb
mov
test
mov
mov
popf
nop
pop
lods
dec
popf
cli
jl
jl
inc
xor
popa
mov
js
cmp
xchg
mov
bound
lods
inc
inc
pop
cmp
sub
cmp
or
lea
inc
adc
jne
leave
mov
pop
cmp
and
pop
icebp
dec
inc
nop
xor
inc
hlt
mov
inc
xor
std
jno
popa
adc
jae
leave
jne
dec
jne
movsl
cmc
mov
mov
or
aad
xor
xor
adc
cmp
sub
in
mov
jne
and
subl
cmp
inc
jp
jg
cmp
adc
hlt
cmp
std
dec
adc
mov
mov
jb
push
sbb
in
sub
andl
cwtl
push
orb
adc
or
les
sub
jo
stos
xchg
les
pop
xchg
cmc
push
lock
xchg
or
xchg
in
jb
cmp
lcall
in
jb
cmp
andb
xchg
test
test
xchg
cmp
mov
mov
mov
cmp
jno
inc
jb
jae
xchg
call
mov
js
or
pop
inc
clc
inc
js
mov
in
xlat
flds
add
cld
sbb
xor
mov
lea
add
sbb
lock
push
pop
jnp
cmpb
add
aam
dec
jl
cmp
jo
or
ret
cmp
loope
js
mov
inc
mov
rorb
loop
test
sub
add
xor
clc
outsl
les
cmpsb
sub
lea
or
outsl
push
inc
add
bound
jne
pop
jno
cmpsb
shrl
bound
imul
cmc
in
or
rcll
add
dec
add
xor
lea
cmc
jl
pop
xor
les
ja
repnz
pop
adc
pushl
sbb
test
ret
add
push
int3
xor
xor
cmp
jle
mov
jo
cmpb
add
mov
inc
adcb
icebp
jo
add
jmp
pop
inc
loope
mov
bound
inc
lret
or
mov
fstpt
fisubl
rorl
mov
pushf
cwtl
sub
lods
lahf
fistl
push
je
add
pop
or
mov
es
or
add
orb
fistpll
lret
lcall
sbb
sbb
push
jne
mov
mov
in
jmp
enter
fistps
cmp
insb
adc
inc
sbb
test
out
dec
lcall
dec
adc
add
repz
jns
cmpl
lea
sbbb
sbb
cmp
mov
add
sbb
jmp
xchg
ss
push
push
add
test
pop
cmpb
clc
push
adc
or
out
mov
sbb
in
inc
mov
cli
mov
dec
jbe
cmp
aas
mov
addb
or
out
push
fcoms
adc
or
ja
jecxz
sbb
inc
push
add
mov
sti
add
add
pop
jae
pop
sub
mov
push
inc
pop
sbb
cli
in
out
inc
icebp
mov
mov
out
ds
pusha
xor
push
add
cmp
mov
lret
or
jg
jbe
sbb
jb
xor
adc
and
inc
out
lock
mov
cmp
sbb
add
pop
enter
ret
iret
pop
jle
jmp
sbb
jle
out
mov
popa
fiadds
pop
test
dec
xlat
or
mov
pusha
mov
cltd
ljmp
cmp
inc
xchg
push
popa
stos
imul
push
cwtl
dec
fldcw
adc
js
stos
sbb
xchg
aam
pop
ljmp
sub
cld
xchg
jg
cmp
int3
fwait
mov
push
shlb
inc
pop
call
and
mov
les
and
sub
push
push
mov
mov
push
andb
lods
add
clc
mov
mov
arpl
pop
mov
push
fdivrl
cmp
outsb
mov
pop
push
pop
mov
icebp
inc
and
push
sbb
mov
pop
mov
cmp
mov
sub
or
add
inc
adc
sbb
nop
push
test
inc
xchg
sub
inc
call
sbb
or
popa
push
adc
dec
addb
xor
cli
aad
sub
mov
gs
inc
add
enter
jmp
cmp
mov
fldt
jmp
icebp
test
cmp
nopl
adc
push
adc
lock
push
mov
cmp
ror
inc
hlt
jmp
or
jne
test
cmp
int3
scas
in
xchg
cmp
mov
push
aas
cmp
mov
mov
ficomps
dec
call
or
jmp
push
in
call
ljmp
sarb
repz
loop
mov
cmp
enter
inc
lret
adc
sub
aam
xor
push
pop
in
hlt
mov
leave
pop
or
dec
mov
lret
loope
stc
orl
mov
xchg
dec
dec
xchg
lock
jae
mov
clc
add
ja
aam
nop
data16
dec
and
dec
jo
js
flds
push
neg
dec
or
push
mov
inc
data16
jmp
fists
and
fdivs
push
jo
in
and
sub
pusha
cwtl
test
jnp,pt
shlb
add
push
and
adc
pop
jne
mov
mov
rcrb
cmp
or
stos
and
scas
push
test
popf
ja
bound
incb
cmpsb
cmp
mov
jnp
push
and
mov
cmp
or
jbe
mov
inc
fldt
fstps
xchg
adc
fisttpll
sub
loop
or
ret
mov
clc
push
sbb
pop
sbb
adc
jge
sub
inc
lret
xchg
sub
cld
adc
xor
push
pop
jg
xor
dec
xchg
push
jmp
add
sub
fs
adc
jnp
and
mov
fmuls
sub
lods
jmp
sub
xchg
je
leave
inc
jl
clc
and
adc
sti
adc
nop
xchg
inc
inc
test
or
loopne
add
call
test
shrl
rorl
pop
or
xchg
pop
pop
sub
pop
enter
pop
addb
jno
out
sub
cmp
adc
jbe
add
xor
int3
imul
jb
mov
enter
cmp
ja
stos
lds
and
push
adc
and
mov
dec
add
sub
or
sbbl
inc
fiaddl
popa
cmp
dec
loopne
inc
mov
fisubl
mov
jo
lret
and
sbb
push
cvtps2pd
icebp
stos
mov
jge
xchg
vpcmpeqb
push
lcall
sbb
cmp
stos
or
test
lret
test
sar
loopne
into
cli
shlb
and
imul
pop
adc
cmp
sbb
lods
dec
je
lcall
mov
popa
push
addr16
pop
inc
pusha
push
dec
dec
inc
dec
dec
and
data16
or
sbb
mov
fisubl
loop
les
out
adc
or
jecxz
mov
xchg
loop
fsubs
pop
insb
les
push
and
je
add
cmc
xlat
mov
insl
ljmp
test
xor
jne
pop
dec
test
cmp
jns
sbb
xchg
dec
push
inc
arpl
jmp
nop
rolb
jb
mov
add
lret
or
inc
push
outsl
lods
inc
sbb
adc
dec
push
lea
sbb
rcrb
insb
jns
enter
insl
loope
sub
xor
push
sub
and
cmp
push
adc
inc
fidivs
bndldx
es
or
js
dec
adc
rol
mov
or
push
jb
or
sub
inc
fwait
pushf
or
add
outsl
dec
idivb
add
cmp
inc
dec
nop
mov
sbb
jns
clc
nop
add
add
ja
shrb
cmp
push
or
mov
ss
cli
test
xor
test
or
mov
or
push
iret
adc
out
das
adc
pop
aaa
add
lods
outsl
adc
imul
fdivrs
and
sahf
xor
lods
adc
scas
adc
jle
cmp
mov
or
or
xchg
mov
xlat
outsb
test
enter
das
xchg
adc
jb
and
inc
jo
and
inc
das
dec
push
mov
pushf
mov
imul
push
inc
mov
movsb
lock
inc
adc
jno
pop
xor
aam
adc
rorb
lods
pop
testb
inc
push
je
add
out
xchg
inc
and
xchg
nop
pop
pop
fstps
lds
lea
pusha
mov
sbb
outsl
insl
jo
in
movsb
pop
sub
jae
rolb
adc
cmc
inc
fdivrl
les
stos
int
leave
jb
jl
scas
pop
fs
mov
adc
cwtl
mov
adc
scas
mov
rcrb
pop
lahf
andb
mov
adc
in
and
push
mov
or
nop
pop
in
nop
mov
icebp
lock
inc
lods
in
mov
jne
push
lock
cmp
or
push
mov
movsl
add
mov
jae
and
push
push
or
mov
or
jb
test
mov
push
add
iret
sub
pusha
or
cwtl
pop
xchg
push
lods
or
int3
add
dec
sub
sub
pop
jne
or
aam
push
gs
in
adc
add
cwtl
je
loopne
mov
lock
lcall
dec
adc
adc
push
out
inc
je
cmpsl
sbb
inc
or
cmp
nop
push
mov
popf
sbb
aam
dec
test
xchg
stos
les
mov
mov
and
push
sar
les
mov
adc
mov
int3
jbe
pop
enter
jb
insb
dec
ja
jno
xchg
sbb
dec
sbb
lods
sbb
sbb
inc
aam
or
mov
rcrb
int3
adc
adc
dec
sti
cltd
int3
inc
rclb
lods
push
xchg
hlt
and
or
les
sahf
mov
pop
adc
sbb
or
sub
jbe
ja
add
xor
xchg
jg
and
add
xor
cmpsb
sub
sbb
sub
add
fs
jo
addl
jae
push
shl
sahf
push
cmpsb
subl
jo
or
mov
je
xchg
add
lcall
mov
mov
jl
mov
jl
mov
les
and
pusha
and
add
inc
mov
xor
or
cmp
add
mov
sbb
imul
lret
xor
jo
les
or
xchg
or
dec
and
test
adc
push
jb
nop
xchg
fadds
pop
movntq
out
lret
add
or
or
cmp
and
lods
adc
mov
int3
mov
jl
or
inc
ret
add
push
les
add
add
mov
xor
adc
adc
cmp
test
cmp
sbb
outsb
xor
cwtl
jns
xor
lods
dec
cld
xor
or
cmp
loopne
pushf
adc
pop
jns
lods
push
dec
jnp
rclb
jnp
insb
mov
fsubrl
mov
adc
pop
or
push
int3
nop
shrb
sahf
add
inc
in
adc
lret
or
leave
or
mov
or
outsb
fs
push
pushf
add
jl
push
push
jl
and
lret
inc
inc
mov
jae
jl
lods
je
enter
in
ljmp
pop
icebp
sbb
xchg
aam
imul
sub
dec
xchg
inc
adc
pusha
jl
call
adc
push
push
xor
lret
movsb
jl
rorb
sbb
clc
cmp
sarb
push
mov
inc
jp
and
enter
sbb
adc
sbb
xchg
and
inc
sub
stc
aam
ljmp
mov
pop
adc
jge
fbld
sub
xchg
or
mov
or
pop
icebp
mov
mov
bound
ret
nop
ret
dec
mov
aam
inc
aam
xchg
or
and
inc
les
cmp
mov
adc
and
add
rolb
adc
and
or
push
or
mov
ljmp
mov
pop
push
and
je
mov
push
xor
or
js
pop
mov
sub
jg
aam
sub
movsb
data16
mov
lods
fadds
adc
test
inc
or
jo
cmp
pop
push
xchg
test
daa
add
cmpl
mov
sub
js
incl
xchg
adc
clc
inc
call
lds
jl
xchg
stc
test
sub
adc
pop
inc
test
int3
nop
imul
pusha
dec
je
outsl
in
xor
sub
insb
fprem
adc
faddl
sub
inc
scas
dec
sbb
pop
dec
addr16
cmpb
in
mov
scas
mov
dec
sub
nop
inc
mov
sbb
in
add
call
shr
stos
mov
rorl
outsl
mov
jl
cli
mov
xlat
cmc
jbe
rcrl
sub
test
sub
test
insl
and
ja
mov
pop
sbb
push
inc
int
dec
sbb
lcall
adc
mov
or
je
xchg
pusha
movb
mov
or
inc
arpl
les
or
sub
or
xor
adc
adc
das
sbb
add
adc
and
sbb
out
adc
or
add
ret
stc
aam
jl
repz
cmc
repz
sti
repz
sbb
icebp
jle
cbtw
andl
and
dec
int3
xchg
fdivs
test
cwtl
adc
mov
xor
and
fsubl
or
adc
adc
add
incl
daa
pop
sub
pop
push
ficoms
decl
add
pop
push
and
add
mov
repnz
push
stos
xor
in
or
add
dec
pop
xchg
mov
test
cmp
nop
inc
adc
add
pop
cmp
repz
imul
adc
cltd
sbb
push
mov
hlt
cmpb
nop
xor
pushf
jo
xchg
and
movsb
dec
cmp
inc
mov
out
ljmp
or
rorb
lods
pushf
gs
cmp
xchg
xchg
pop
add
lods
inc
test
test
dec
fs
dec
popa
jo
or
jb
idivl
jmp
pop
int3
repnz
jo
leave
or
push
xchg
nop
mov
je
jb
mov
push
sbb
lea
inc
in
sub
adc
pushl
les
add
je
lcall
cmpl
or
cmp
pop
cmp
adc
jl
jl
push
or
add
jb
jne
orb
dec
xchg
loopne
movsb
mov
or
inc
xchg
mov
jne
clc
inc
pop
mov
jg
lods
ds
or
in
lods
daa
cmp
pop
xchg
xlat
mov
shrl
ljmp
je
test
inc
or
adc
jmp
xchg
fs
mov
pop
dec
or
scas
ds
xor
lock
xchg
pop
adc
je
iret
sub
push
mov
cltd
jne
std
jmp
pop
and
push
sbb
mov
clc
enter
dec
add
push
leave
push
dec
xchg
add
mov
adc
xor
cmpsl
shrb
mov
mov
inc
or
inc
add
pop
in
jns
or
or
sbb
lea
jle
mov
ret
jge
rclb
fmuls
inc
rcll
or
or
xchg
iret
lods
jae
cmpsl
jl
scas
pop
orl
fisttpl
and
add
int3
aas
lret
imul
inc
nop
insb
dec
loop
inc
adc
jne
rcll
sbb
mov
mov
push
xor
dec
add
inc
cmpl
test
adc
arpl
pusha
inc
jmp
dec
call
mov
dec
shl
add
pop
ja
and
or
mov
sub
stos
push
jbe
or
xor
movsb
sub
xchg
sub
add
mov
dec
stos
mov
test
cmp
decb
aam
xor
fstpl
pushf
ficoml
orb
fdivrs
je
jne
in
dec
inc
push
jmp
mov
fs
or
jmp
loope
lods
dec
adc
xor
call
cmpsb
cmp
push
push
adc
fdivs
lea
xor
dec
ljmp
loopne
xor
sbb
ss
loopne
in
push
aad
mov
pop
dec
jns
add
mov
inc
ret
pop
fdivl
ja
add
pop
sub
pushf
lea
lcall
xchg
mov
add
sbb
mov
shr
mov
lea
mov
adc
icebp
dec
jo
jl
push
inc
mov
sbb
je
sub
inc
dec
jne
mov
pop
hlt
iret
inc
dec
in
int
and
jecxz
and
push
xchg
push
mov
ja
or
ljmp
or
inc
pushl
inc
mulb
test
add
je
xchg
add
ficoms
loop
adc
bound
adc
xchg
xchg
pop
out
add
adc
mov
xor
add
mov
sub
pop
int
mov
lea
aas
clc
or
call
imul
mov
lock
jo
adc
pop
push
cvtps2pi
lea
ja
inc
add
sbb
lret
or
inc
jl
push
ret
ret
sub
push
in
mov
je
incb
push
inc
sbb
sbb
jns
cmp
jne
sub
sbb
jmp
xchg
dec
dec
sbb
mov
dec
js
pop
xchg
mov
adc
les
out
stos
cmp
jmp
js
pop
jns
cs
jle
es
jp
out
out
out
je
adc
mov
pop
aad
pop
jge
lahf
test
int
adc
mov
enter
mov
mov
xor
push
popf
cs
arpl
jne
insb
out
dec
insb
sub
xor
xchg
hlt
jge
inc
call
imul
or
lods
push
jmp
lods
mov
jge
xor
mov
push
sub
mov
dec
or
mov
adc
sbb
addr16
in
xchg
jg
sub
scas
mov
adc
adcb
je
cmp
sub
jnp
sub
push
adcl
jle
mov
inc
lds
jb
and
movsb
imul
das
pop
mov
popf
fistps
xor
nop
loop
xchg
sub
sub
jmp
pop
add
xor
jmp
shlb
into
nop
repnz
in
jmp
and
mov
movsb
xchg
int3
jle
inc
xchg
pushf
xchg
pop
out
int
arpl
inc
mov
inc
test
out
bound
jg
cmpsw
jl
jecxz
push
dec
lret
xchg
mov
ret
push
icebp
pop
ret
inc
mov
shrl
test
or
mov
les
xchg
sub
push
sbb
cmp
mov
iret
frstor
aam
sbb
mov
xchg
xchg
and
xchg
rclb
adc
jo
jbe
or
movsb
dec
xchg
jge
or
je
dec
enter
and
adc
repnz
dec
pop
and
push
inc
outsb
sarl
repz
movsl
pop
or
pop
jne
aad
mov
adc
js
or
lock
mov
fisubl
dec
add
xchg
or
or
repz
sub
dec
scas
out
cmpb
add
aam
sti
pop
lods
les
xchg
clc
xlat
push
call
cld
mov
xchg
subb
in
mov
xor
pusha
fistpll
js
inc
mov
shrl
fldenv
sub
test
in
xor
push
int
mov
test
sbb
and
fsubp
jne
push
xchg
mov
and
jmp
aam
loope
mov
cmp
mov
jmp
test
xor
loope
sarb
sub
inc
nopl
pop
cmpsl
cmp
lds
ret
mov
daa
jbe
lock
or
mov
call
popa
shll
adc
repz
push
mov
or
push
mov
pushf
pop
dec
cmp
test
je
pushf
push
pop
pop
sub
push
and
inc
les
push
xlat
rcrb
call
les
in
pop
xor
test
or
push
jmp
jp
mov
aam
pop
les
mov
jp
pop
sbb
or
divps
pop
jae
xchg
dec
xor
push
xor
mov
jge
mov
in
sub
jbe
add
enter
pop
adc
inc
xchg
lds
mov
sub
call
mov
sub
aas
inc
sub
pop
and
xchg
and
adc
gs
loopne
or
enter
jl
das
addb
lea
lock
dec
sbb
cmp
or
or
nop
xor
mov
mov
push
js
inc
sti
aad
xor
adc
cmp
push
push
push
iret
jo
or
fisubs
test
cmpsb
fwait
notb
test
sub
add
orl
in
mov
pop
jae
or
cwtl
shll
test
lods
inc
cs
inc
sbb
sbb
and
adc
rclb
inc
testb
or
xor
xor
sub
mov
decb
lcall
je
jb
xor
sub
dec
push
insb
push
xchg
aam
je
lods
fdivrp
fs
orb
shrb
aad
stos
sbb
psubw
dec
test
test
icebp
pushf
sub
mov
push
lods
push
adc
inc
jmp
call
inc
sbb
pushf
cmpsl
int
adc
shrl
sahf
mov
jl
cmpsl
cmpsl
ja
push
mov
iret
scas
pop
aaa
outsb
lds
hlt
test
test
and
push
and
push
push
shlb
or
cmp
pop
jne
xchg
add
pop
mov
pop
sbb
or
loope
loop
repz
push
cmp
cmpsl
pop
jle
adc
mov
jns
mov
push
or
movsl
push
dec
mov
jae
jae
or
sub
fwait
addl
mov
outsl
or
xor
pop
mov
lret
int3
or
or
or
cld
push
test
add
jne
aad
pop
or
ljmp
dec
or
in
jge
sub
add
in
adc
push
sbb
addb
adc
jb
fiaddl
je
jge
xchg
jns
mov
jno
movsb
mov
dec
pop
jp
mull
xor
pushf
or
pop
xchg
xchg
loope
pop
into
iret
fnstcw
daa
pop
das
mov
or
into
inc
cmp
pop
insb
aam
inc
out
lods
pop
in
jl
mov
pushf
nop
add
inc
jle
clc
lret
cmp
jne
mov
adc
or
test
add
loope
shll
imul
mov
cmp
jge
addps
adc
jne
sbb
xchg
jl
or
adc
jg
jle
lea
and
mov
push
sub
or
dec
repnz
push
pushf
and
divl
cld
xlat
lret
xlat
mov
xchg
adc
aaa
adc
cmp
xchg
sub
add
sub
call
or
pop
lahf
xorl
shlb
shrb
in
or
fs
test
mov
cmpsb
jne
add
mov
leave
subl
inc
test
gs
add
lea
pushf
mov
lret
stos
inc
cmp
jle
jae
mov
jle
ret
dec
add
xchg
rcll
add
and
pop
sbb
sar
std
jg
dec
hlt
aad
cmpsb
or
inc
jne
loopne
pop
pop
cli
cmp
xor
jne
or
cmp
cld
cwtl
xor
sbb
inc
xchg
adc
or
inc
dec
mov
adc
repz
andb
mov
lea
dec
and
int
jne
jle
adc
fiadds
scas
mov
pushf
mov
cltd
scas
mov
add
je
pop
outsl
mov
push
adc
shrl
cmp
add
push
mov
xchg
add
xchg
daa
jge
aam
ret
cmp
add
nop
dec
test
hlt
mov
mov
mov
mov
push
push
inc
popf
movsb
outsl
shufps
inc
inc
stos
fisttpl
shlb
mov
inc
decl
jne
adc
mov
fs
sbb
lret
push
xor
inc
jne
cmpsb
adc
jmp
arpl
in
inc
cmp
cmpsl
jp
rcll
mulb
xchg
mov
inc
mov
mov
xor
push
adc
push
jns
lret
pop
inc
je
pop
xorb
nop
repz
adc
ret
lds
sub
jns
sub
mov
lods
dec
imul
sbb
mov
jmp
and
rcr
jge
mov
dec
inc
clc
jmp
xchg
or
mov
jo
lahf
xlat
aam
jns
jp
or
fidivrs
cmp
out
insl
test
mov
imul
xlat
enter
lods
push
mov
jne
je
xchg
mov
fsts
pop
inc
psubw
jmp
dec
sub
cmp
adc
inc
push
imul
inc
jnp
mov
leave
enter
mov
mov
pop
adc
sub
fiadds
dec
cmpsl
xchg
and
out
mov
clc
or
pop
and
xor
ds
in
lret
mov
inc
push
aas
adc
loop
or
stos
xchg
and
sub
je
pop
shl
cld
cmp
movhps
call
out
je
outsb
test
xchg
mov
pop
pop
ficomps
sub
xchg
lock
mov
jmp
mov
aad
inc
pop
jl
insl
xchg
xor
push
div
pcmpgtw
leave
je
movsb
stos
adc
mov
cmp
fwait
sbb
add
push
push
inc
mov
pop
or
jmp
pop
jns
adc
cmpsb
lods
test
jl
inc
inc
xchg
xor
iret
mov
adc
adc
jg
mov
mov
pop
ja
push
lods
roll
mov
sub
add
enter
sbb
adc
add
inc
cmp
jne
inc
cmp
xor
sbb
aad
call
fwait
lcall
cli
push
cmc
push
push
in
pop
cwtl
insb
addb
cwtl
adc
aad
push
jp
pop
jnp
cwtl
cmpsb
inc
gs
jno
in
fs
fldenv
lds
movl
test
inc
inc
shrb
mov
cltd
outsb
cmp
sub
rorb
popa
cmp
and
jmp
add
out
sub
mov
inc
cvtdq2ps
push
sbb
sbb
enter
fsubr
sbb
aaa
pop
jp
sub
adc
cmp
pop
jmp
aam
fimull
bound
mov
imul
dec
sub
mov
xchg
loop
mov
mov
jne
cmp
cmp
clc
bnd
sub
sti
daa
mov
push
mov
mov
cmpsl
mov
jge
xor
adc
pushf
mov
testb
lret
pusha
push
push
out
add
sub
daa
scas
sub
push
fsubl
adc
pop
xchg
jl
icebp
test
inc
and
inc
clc
adc
test
sbb
mov
scas
mov
adc
test
mov
fstl
rorl
push
adc
enter
mov
jge
and
jo
add
add
cmpl
lds
rcll
js
inc
cmp
pop
push
dec
ret
sub
cmp
ret
and
mov
dec
cli
leave
xor
xor
mov
jl
mov
iret
shlb
cmpl
cmp
aam
test
sub
jb
adc
xor
mov
mov
jmp
push
lea
sbb
jo
js
push
hlt
pop
jl
stc
add
and
pop
orb
cmp
sbb
subb
mov
data16
adc
stos
cwtl
pusha
jl
leave
jno
push
and
cmp
xor
xchg
pop
test
scas
mov
add
mov
xchg
mov
or
inc
or
sbb
outsl
xor
dec
inc
imul
lods
pop
and
cli
dec
cs
jmp
out
fcompl
daa
in
xchg
repnz
leave
dec
jbe
es
and
loopne
sub
cmp
sarb
sub
popf
and
add
push
jo
mov
mov
gs
aam
cmpsb
mov
xchg
mov
out
out
push
test
mov
sbb
pop
jbe
daa
inc
dec
push
jmp
sti
jmp
push
xor
and
dec
jg
fstpt
ret
xchg
fidivl
sbb
and
mov
in
pop
or
inc
sbbl
pop
in
and
nop
clc
jecxz
jle
mov
inc
lods
push
mov
mov
jae
inc
hlt
dec
daa
test
inc
mov
dec
pop
inc
sbb
pop
aas
dec
cmp
push
pop
mov
dec
mov
xor
scas
and
push
adc
call
imul
cmp
das
loopne
test
adc
or
aad
pop
mov
rcl
loope
xchg
xor
cli
mov
jp
jnp
adc
int
xor
dec
stos
inc
add
push
cmp
je
js
daa
aaa
inc
push
mov
xchg
jb
add
and
unpcklps
mov
push
loop
add
lea
mov
adc
int3
sub
in
scas
fdivrl
imul
sub
clc
and
dec
and
push
dec
pop
daa
fcomps
pusha
cltd
fs
mov
dec
adc
loop
xchg
sub
mov
inc
adc
cmp
mov
mov
sub
dec
dec
mov
pop
adc
ds
sub
xor
popa
lds
jmp
sarb
or
add
push
fstps
repz
adc
xchg
push
sub
inc
mov
add
xchg
clc
push
pop
or
adc
xchg
xor
ret
cmp
cltd
xor
mov
and
xor
xchg
inc
aam
mov
jl
lods
lods
dec
shrb
cmpsb
sbb
jmp
int
mov
pop
xchg
pusha
addr16
aam
cwtl
nop
cmp
pop
iret
sbb
inc
sarb
fdivrp
insl
in
xor
pop
mov
mov
repnz
xchg
jns
cs
fwait
sub
jg
das
arpl
pop
push
negl
imul
pop
or
cmp
xchg
sub
xchg
dec
mov
mov
sti
imul
adc
pop
lret
lea
cmp
adc
and
cld
and
inc
popf
call
nop
adc
frstor
add
mov
lds
cs
dec
cmpsl
mov
xchg
mov
jnp
lahf
jmp
cmpsb
lret
xor
dec
pop
idivb
stos
int3
sub
mov
shufps
sub
imul
fsubr
adc
sub
ret
stos
inc
pop
mov
fs
push
or
or
insb
pop
js
jle
mov
dec
push
dec
add
es
lods
mov
dec
dec
and
cmpsl
lret
and
daa
fdivrl
jg
and
mov
jns
ljmp
push
cmp
jne
inc
insl
inc
pop
inc
xor
dec
pop
fistps
and
xor
iret
push
mov
std
cmp
jne
or
xor
mov
imul
imul
mov
xor
mov
lea
sbb
push
push
mov
lcall
iret
mov
pushf
pop
push
mov
push
push
cli
mov
imul
cmp
pusha
adc
dec
das
imull
in
dec
test
mov
jno
sarl
in
and
pop
xchg
sub
mov
xchg
and
add
mov
mov
out
cmpsl
inc
shl
xchg
ljmp
ret
out
mov
scas
cwtl
out
test
jmp
fistpll
leave
dec
mov
dec
sahf
mov
or
push
test
mov
push
ja
lock
add
sbb
mov
or
pop
add
stc
pusha
mov
mov
clc
jp
std
aas
jecxz
sarl
mov
push
dec
and
stos
std
loope
or
test
mov
jl
je
fmul
js
mov
aas
mov
mov
mov
mov
cli
in
mov
and
inc
xchg
hlt
push
push
fcomps
sbb
cmc
enter
push
adc
faddl
in
dec
fs
cmp
mov
es
push
out
mov
xchg
out
pop
add
bound
push
fs
call
je
mov
loopne
add
in
sub
clc
enter
leave
cld
xor
jmp
mov
or
bound
dec
cld
xor
jne
mov
jns
mov
out
jo
mov
mov
cld
fucom
sti
pop
xchg
and
push
jbe
nop
addr16
mov
xchg
xchg
aaa
mov
adc
push
mov
or
je
xor
rclb
hlt
aaa
xchg
enter
enter
rorl
movsb
dec
lret
mov
cmpsb
aad
xchg
lock
ja
call
aad
push
sub
arpl
call
mov
add
movsb
mov
pushf
sbbb
mov
and
popf
jl
int3
push
push
push
sbb
inc
mov
push
outsb
in
and
mov
insb
movsl
lret
dec
loop
movsl
test
pop
mov
adc
and
rolb
pushf
adc
add
cmp
int3
sbb
bound
lea
cmp
xor
movsl
mov
into
sub
int
movsl
push
or
cmp
je
mov
inc
hlt
push
mov
clc
or
dec
push
mov
sti
pop
mov
sbb
pop
mov
and
fisubrs
pop
or
rcl
ret
call
push
popf
push
mov
cld
mov
cld
mov
push
lahf
bound
mov
and
sbb
mov
sub
rorl
fsubr
adc
dec
cwtl
dec
push
in
push
inc
mov
mov
ja
xor
lods
mov
ljmp
mov
out
lret
pop
xchg
cld
sbb
popf
daa
aaa
lea
popf
jnp
and
mov
push
dec
and
clc
ret
popf
cmc
xchg
sbb
aaa
mov
cmp
movsl
sahf
and
jo
mov
sbbb
inc
rcr
pop
mov
in
daa
inc
xor
cmp
stos
add
mov
test
and
add
lret
sub
ret
lds
cmp
or
jp
adc
out
mov
fildl
jle
fidivs
mov
adc
into
mov
ret
movsb
xlat
adc
adc
cld
pop
test
aaa
bound
stc
inc
xchg
inc
add
xchg
cmp
mov
mov
lock
aaa
testb
orb
mov
jmp
push
sub
and
and
and
or
or
inc
arpl
inc
pop
pushf
insb
enter
in
jns
inc
stc
jb
push
adc
jb
sub
push
mov
cmp
push
xchg
int3
sub
and
xchg
adc
ret
frstor
adc
sahf
sbb
add
aas
mov
add
jmp
fcmovbe
arpl
push
aas
rol
movsb
or
test
xchg
std
dec
or
imul
ret
add
mov
sub
cmpsb
or
inc
fildll
xchg
test
add
inc
inc
and
mov
lahf
stc
nop
imul
andnps
lea
pop
xchg
shrb
and
or
enter
leave
je
repnz
xor
adc
xchg
sub
mov
stc
adc
inc
and
lahf
jo
aaa
decl
dec
rep
fprem
js
jge
ret
push
das
xchg
sub
das
mov
or
je
jg
cld
pop
rorl
shr
test
inc
imul
loope
sahf
je
jge
lea
jmp
sbb
dec
negb
inc
inc
add
inc
fdiv
inc
aas
jle
loope
lea
scas
gs
data16
push
fisttpll
fnsave
cmp
std
push
jmp
outsb
add
mov
sbb
gs
mov
sar
cmp
sbb
sbb
pushf
pop
imul
je
or
aam
push
pop
les
cmp
dec
ficoml
int3
inc
cmp
push
popw
and
push
je
call
jb
jle
scas
icebp
gs
xchg
pop
dec
pop
stos
mov
dec
mov
xchg
inc
adc
dec
inc
lea
or
push
dec
and
fimuls
push
loope
mov
mov
fimull
jp
pop
cmpsb
sub
and
fs
lret
cmp
dec
jl
inc
inc
xchg
ljmp
jne
cmpl
jbe
shr
and
mov
mov
pop
inc
and
jl
popf
inc
or
leave
cmpsb
dec
add
pop
lock
mov
sahf
push
or
push
das
enter
clc
jle
adc
sarb
or
jl
hlt
test
ja
shl
lea
sbb
fsub
cmp
sbb
adc
mov
int
es
or
push
push
jmp
es
lret
push
dec
dec
mov
mov
dec
mov
jo
mov
addb
andb
mov
mov
and
dec
jle
les
cmp
push
push
stos
insl
mov
dec
push
sti
or
sti
shll
mov
das
xor
scas
pop
outsl
stos
dec
bsr
dec
nop
mov
cs
sub
lock
fdivs
gs
and
push
or
add
inc
inc
add
stos
daa
sbb
mov
movsb
and
ljmp
jmp
cmpl
sub
jb
pop
jmp
jl
daa
loope
xor
jg
jbe
es
sub
cmpb
popf
rclb
sub
lods
out
mov
mov
orb
in
in
repnz
mov
jnp
leave
lea
jp
imul
sub
sub
add
or
pop
data16
push
and
cmp
sti
inc
sub
push
mov
and
mov
push
add
call
or
dec
test
cltd
pop
push
push
mov
jle
call
movsl
sub
mov
lea
scas
imul
daa
test
es
sub
das
test
xchg
mov
cmp
inc
push
dec
pop
decb
adc
pushf
sbb
test
mov
or
sbb
pop
addr16
lods
and
adc
jg
dec
or
cmp
lock
inc
or
in
or
sub
lcall
enter
cmp
jmp
xchg
push
jne
pop
jno
lret
jge
mov
or
fisttpll
inc
insb
jp
cmpsb
test
jmp
mov
pop
cwtl
push
movsl
daa
jge
xor
loope
push
subl
jno
or
leave
push
jne
into
loopne
mov
leave
fadd
pop
rolb
or
mov
xor
cmp
cmp
test
push
pop
push
mov
xchg
aad
fildll
lcall
loope
ja
sub
and
faddl
inc
adc
test
movsb
scas
clc
call
pop
leave
xor
mov
sahf
cmc
cmp
and
enter
iret
pop
rcrl
fdiv
jmp
shll
xchg
dec
pop
xchg
pop
shl
cs
gs
call
xor
mov
int3
in
push
fcompl
in
sbb
call
sub
mov
jne
imul
popa
cmc
mov
jge
mov
rcll
dec
in
or
or
or
push
icebp
jg
stos
mov
adc
dec
loopne
sbb
imul
std
out
adc
pop
or
lea
mov
stos
gs
sbb
xchg
dec
outsl
dec
pop
sti
pop
sub
push
fcoml
fldt
and
fcmovne
imul
int3
mov
push
js
or
or
and
leave
cmp
pop
jae
sub
shl
jle
cmp
into
jge
push
cmpsb
pop
push
add
jg
repz
jae
mov
pop
xor
or
or
dec
or
adc
sahf
or
add
xlat
sbb
les
xchg
inc
inc
mov
pop
pop
mov
mov
int3
sbb
xor
int3
arpl
je
and
add
clc
les
add
lock
sub
out
dec
mov
add
pop
mov
push
out
jb
xlat
xor
stos
leave
and
stc
rorb
dec
adc
mov
adc
jl
mov
test
test
add
idivl
data16
bound
data16
outsb
movsl
cmp
cmp
sub
sub
push
aad
add
loopew
loopne
xchg
cli
pop
mov
test
mov
je
push
jne
cmpsb
loopne
imul
aas
mov
mov
movl
xor
shll
adc
sahf
and
movsb
sbb
or
mov
add
icebp
mov
and
cmp
ret
sarb
sub
cmp
mov
or
aad
data16
sub
mov
cmp
ljmp
xor
jecxz
add
adc
mov
and
fs
pop
mov
and
xchg
push
xor
sub
int
push
lods
adc
add
in
pop
dec
iret
mov
mov
fists
cmp
pop
sub
and
dec
adc
dec
xor
mov
and
and
adc
pusha
out
das
cli
popa
push
pop
cwtl
outsb
xchg
repnz
inc
mov
bound
cwtl
adc
imul
pop
adc
call
fdivrl
idiv
inc
mov
push
inc
loopne
inc
les
ja
stos
stc
mov
nop
lods
cwtl
lods
jp
adcb
pop
mov
cmp
adc
shrb
repnz
sub
sarb
xor
pushf
decb
push
jb
jo
sbb
rorb
adc
js
xchg
rorb
pop
dec
mov
nop
je
jl
popa
adc
call
lea
sbb
addr16
push
adc
push
enter
mov
ja
fidivrs
in
add
jne
jle
cmp
sub
mov
adc
inc
sbb
jmp
scas
std
xchg
xor
mov
mov
nop
mov
sub
xchg
rcl
insl
jmp
popf
pop
cs
pop
or
xor
sbb
nop
xchg
in
fmuls
std
xor
dec
add
dec
or
gs
pop
stc
fsubl
sarb
xchg
cmpsl
in
pop
daa
lret
aam
pop
inc
roll
xchg
dec
cld
inc
outsb
mov
pop
mov
ret
ljmp
dec
and
add
pushf
ds
mov
jg
mov
rcrl
xor
sub
mov
mov
cs
jbe
push
pop
hlt
sub
out
push
lahf
jne
cmp
call
push
fwait
xchg
push
mov
jl
sub
mov
cmp
adc
loop
cld
xchg
xchg
pop
pop
and
jge
clc
sbb
sahf
loopne
addr16
push
adc
dec
mov
bound
dec
jg
aad
dec
sbb
lret
adc
mov
icebp
aam
lock
imul
lret
pop
rolb
setns
jmp
mov
in
popa
mov
xor
adc
lahf
or
dec
push
or
or
mov
ja
jl
push
stos
das
clc
aam
fldenv
and
fs
mov
lahf
out
movsb
add
addr16
pushl
push
dec
aad
pusha
lods
sbb
imul
mov
xchg
je
jno
cmp
dec
cmp
push
xchg
mov
sub
movsl
mov
dec
lock
pop
std
jae
leave
xor
addr16
adc
out
fildll
cs
jb
xchg
push
adcb
adc
leave
jmp
push
xor
jno
je
dec
mov
sub
test
and
fs
sti
pusha
fs
outsl
inc
lea
xor
shr
test
orb
or
dec
xor
jns
mov
push
imul
add
push
push
fcoml
aad
mov
popf
dec
mov
pop
and
dec
pop
iret
hlt
inc
pop
out
cmp
fsubrs
adc
pop
push
sbb
lret
pop
mov
mov
data16
adc
addl
fidivl
jno
stc
fwait
aam
repz
cmp
mov
push
ds
outsb
and
je
or
decl
adc
xor
movb
dec
mov
mov
or
or
imul
add
or
sbb
push
jno
sbb
fdivrs
mov
stos
mov
dec
stos
fnstsw
xchg
loop
dec
adc
sub
jge
jbe
testl
lret
and
jmp
cmp
mov
dec
out
adc
cmpb
shll
pop
pop
sub
adc
mov
xor
xchg
arpl
push
mov
cmpsb
sbb
cmpb
add
pop
add
movsl
test
in
pop
ss
movsb
fsts
or
jae
xor
adc
jle
push
lods
or
push
and
jle
pop
mov
mov
sbb
int3
inc
xchg
adc
sbb
xchg
ret
dec
cs
fdivrs
pop
push
inc
xor
cmp
xchg
xor
or
xor
mov
rol
je
pop
push
sub
movb
cmp
leave
push
sbb
xlat
xchg
shll
cli
add
test
push
mov
test
lret
ficoml
cmp
push
sbb
add
les
adc
pop
xchg
mov
test
cmpsb
dec
sti
and
je
sub
pop
mov
mov
cmp
mov
xchg
jnp
xor
xchg
add
jle
dec
std
mov
inc
nop
inc
sbb
nop
mov
mov
pop
fnstenv
xor
adc
xchg
cs
fs
rcll
xor
loopne
int3
and
xchg
cmp
jmp
mov
inc
aad
mov
or
inc
test
xchg
pop
mov
pop
ljmp
sahf
and
pop
or
bound
xchg
test
repnz
adc
stos
loopne
lret
jmp
mov
sbbl
pop
cmp
in
pushf
je
push
sub
ret
jne
cmpsl
outsb
cmp
inc
lret
add
popf
pop
xchg
add
pop
stos
mov
call
jbe
imul
daa
out
cltd
push
mov
and
test
fsubrl
adc
pushf
cmp
jle
fldenv
mov
mov
jmp
jb
xor
ljmp
xchg
fucomp
jecxz
xchg
mov
mov
ss
add
add
sub
jae
xor
cwtl
push
fwait
mov
xchg
push
xchg
loop
push
test
fadds
lods
mov
loop
mov
movsb
shlb
mov
lahf
jo
lahf
jno
dec
sub
dec
arpl
cmp
mov
iret
mov
adc
cmp
int3
imul
mov
inc
push
cmp
mov
inc
pop
pop
mov
dec
xlat
mov
xor
adc
jmp
ret
ljmp
test
pushl
andb
sbb
jge
or
loope
cwtl
callw
call
gs
jmp
sbb
and
or
mov
les
testl
js
sub
adc
mov
inc
add
call
bound
sbb
cmp
loopne
pop
sbb
or
xchg
dec
sub
xor
inc
push
add
fs
cli
xchg
int
out
sub
les
mov
loope
ljmp
sub
adc
or
sbb
and
jo
xor
insb
sbbb
lret
in
jo
jno
rorb
mov
ljmp
dec
sbb
cmpsb
or
roll
test
lea
and
lret
push
dec
mov
mov
inc
cwtl
dec
scas
mov
data16
mov
sub
and
add
dec
xor
jne
cmp
call
sub
mov
xchg
ja
push
in
stc
je
ljmp
out
or
pop
or
in
dec
push
add
repz
lret
mov
enter
xchg
jno
and
in
and
mov
fstpt
or
adc
pop
sbb
lods
mov
sub
popf
repnz
pop
lock
mov
jecxz
sbb
loopne
push
negl
mov
rorb
adc
xchg
insb
cwtl
out
pusha
mov
jbe
or
movsl
jecxz
cld
mov
fidivrs
insb
push
divb
popf
mov
jmp
nop
cwtl
iret
pusha
repz
sbb
test
mov
or
sub
or
pop
push
mov
sbb
sti
jle
lahf
dec
dec
mov
rclb
inc
inc
pop
sub
repnz
lods
jns
ljmp
repnz
mov
dec
add
js
pop
mov
adc
sbb
push
les
nop
adc
sbb
lods
ss
insb
inc
sub
xchg
xor
xchg
mov
int
les
sbb
mov
repnz
fadds
cs
dec
pop
or
xchg
dec
cmp
sub
mov
jmp
sub
repnz
xor
out
daa
fmull
out
adc
mov
jmp
add
add
and
dec
dec
cld
out
xor
icebp
cs
inc
aam
and
leave
jg
shrl
das
inc
pop
pop
fnstenv
or
leave
arpl
dec
adc
ljmp
xor
sub
mov
or
in
mov
cld
cmp
xor
xchg
sub
aas
in
push
xor
adc
xor
test
mov
inc
int
sub
xor
dec
ss
inc
hlt
sub
jg
in
dec
leave
stos
add
mov
gs
push
sbb
mov
push
xlat
xchg
push
push
jne
loop
jg
xchg
insb
mov
xchg
mov
and
pop
or
sbb
jle
or
mov
adc
adc
cmc
loope
out
cli
xchg
mov
push
sub
sub
adc
jmp
sub
scas
out
orl
mov
xlat
or
mov
sbb
add
out
cwtd
sub
call
addb
push
mov
jp
std
sahf
fidivs
cmp
pop
cmp
sbb
mov
sbb
ficoms
inc
adc
sbb
ja
or
push
cmp
jno
mov
dec
or
negl
and
ss
inc
mov
movsbl
dec
cmpsl
xor
nop
mov
jge
sub
mov
scas
push
push
cmp
adc
ja
mov
pand
cmc
mov
jnp
push
outsb
les
or
dec
call
pop
popa
and
cmp
jne
fwait
pusha
jmp
cmp
testb
pop
ret
pop
push
in
and
dec
lods
imul
test
cmp
lea
cmp
sar
xchg
sub
jne
sub
xchg
scas
jl
mov
je
in
loopne
or
xor
or
lret
js
pop
lods
dec
loop
sbb
add
cmp
sbb
mov
jmp
into
adc
imul
adc
rorb
flds
inc
xchg
lods
je
cwtl
jge
inc
jmp
mov
in
inc
ljmp
mov
loope
das
fs
scas
stc
cmpb
or
sti
ja
dec
inc
or
addb
ljmp
jne
xor
mov
xlat
aaa
or
rolb
int
sub
jo
dec
enter
imul
jg
lret
scas
push
fsubrs
pop
icebp
mov
mov
call
cwtl
je
mov
or
dec
pop
push
cwtl
inc
inc
jmp
jle
or
push
xor
sbb
addr16
je
lcall
dec
mov
outsl
or
ljmp
ficompl
jmp
daa
repnz
and
js
and
leave
mov
sub
jmp
mov
cmp
rclb
movsl
mov
movb
stc
or
call
xor
in
outsb
outsl
sub
xor
jmp
pushf
je
idivl
push
negl
xchg
xchg
rolb
push
dec
xor
outsl
pop
push
rcrb
push
pop
and
inc
pop
enter
mov
in
push
in
inc
push
push
hlt
mov
pop
xchg
out
es
cmp
enter
daa
xchg
out
ljmp
or
test
mov
add
or
add
ss
enter
aas
daa
dec
pop
dec
decb
push
clc
or
mov
in
or
jne
mov
mov
xchg
cmc
mov
fucomip
aad
xchg
or
out
jno
push
gs
fists
cmp
mov
push
fucomi
sub
ds
das
jne
sub
or
push
adc
xchg
add
aas
test
in
push
mov
rclb
out
push
and
inc
inc
mov
out
xchg
and
adc
dec
nop
adc
adc
jl
mov
jns
dec
clc
rdmsr
dec
je
mov
dec
fs
push
mov
dec
xorb
sbb
int3
pushf
or
cli
icebp
sub
xchg
mov
ret
fcompl
push
popf
cld
shrl
push
add
inc
loopne
das
lgs
push
enter
sbb
inc
pop
out
push
lock
sbbb
or
jmp
imul
sub
stos
xor
inc
shlb
hlt
test
and
sahf
dec
in
jo
pop
cmpsl
outsb
movsb
call
mov
mov
jmp
mov
sbb
or
mov
fsubl
mov
pop
aaa
icebp
add
ds
push
jo
xlat
xchg
push
pushf
scas
mov
pop
xor
out
adc
out
out
inc
aam
or
xchg
mov
aam
lret
pop
leave
jl
push
scas
jecxz
pop
cmpsl
lahf
or
and
adc
mov
fnsave
cmpsb
icebp
iret
dec
adc
scas
and
xchg
shl
sar
pop
dec
out
xor
and
mov
in
sbb
push
fmull
fcoms
fsubr
fcompl
flds
and
dec
cmp
xchg
dec
mov
and
gs
add
hlt
fimuls
xchg
das
xlat
js
andl
sbb
fidivrl
push
in
jmp
sbb
pop
addr16
sbbl
jno
adc
jmp
sub
or
cmp
movsl
xor
fildll
popf
inc
in
inc
xor
daa
sarl
int
pop
js
das
je
and
inc
xor
lret
pop
and
pop
sub
push
or
adc
sub
dec
hlt
cwtl
jbe
dec
xor
les
lods
adc
es
or
add
pop
nop
sbb
dec
das
dec
dec
sti
dec
or
inc
ja
fadds
fpatan
outsb
jns
dec
cmp
mov
xchg
mov
jge
lods
xchg
fildll
enter
pop
je
ss
repnz
mov
je
pushf
ljmp
jl
mov
jo
mov
aam
fimull
xchg
push
movsl
popa
mov
sbb
inc
pop
and
mov
sarb
pop
lahf
dec
pop
push
sbb
fwait
sbb
sub
mov
pop
std
sub
lock
ret
das
test
fistpll
sub
and
jmp
adc
bts
daa
jmp
push
xchg
push
fistpll
movsl
aam
rcrb
mov
and
add
je
mov
adc
mov
pop
aas
into
xlat
aad
cli
insl
fsubrs
cwtl
xchg
cmc
lcall
add
add
pop
into
inc
sub
pop
cmc
mov
push
mov
sbb
je
or
jmp
pop
sub
nop
dec
fisubrs
cld
mov
inc
cmc
dec
ds
push
mov
and
inc
aas
aam
xchg
call
dec
push
or
idivb
adc
outsl
je
sti
imull
jmp
mov
inc
sub
pop
pop
test
rolb
leave
adc
sub
out
pushf
int
jae
cmp
fidivs
xchg
out
adc
mov
fucomip
mov
mov
pusha
sub
repnz
xchg
idiv
mov
insb
lods
jp
push
cld
jmp
xlat
add
mov
add
mov
jo
ret
push
test
imul
mov
test
inc
js
cmp
gs
mov
outsl
lahf
popa
jb
adc
mov
push
mov
cltd
iret
fcmovnbe
sub
orl
mull
dec
fcoml
fs
and
enter
lds
and
dec
pop
adc
outsl
xchg
jle
lea
mov
lds
jb
pop
test
and
and
adc
lods
add
or
pop
hlt
and
das
adc
rcrb
sub
dec
sbb
pop
mov
arpl
inc
push
or
mov
icebp
sub
mov
push
or
xchg
in
add
test
and
jmp
dec
mov
lahf
cltd
daa
mov
push
hlt
push
and
imul
sbb
pushf
and
frstor
mov
mov
loope
jo
jmp
ljmp
inc
rcrb
cmp
js
clc
pop
inc
mov
pop
lret
adc
cmp
adc
lods
mov
jne
and
xor
inc
push
push
lea
push
lods
mov
sbb
sbb
in
sub
fcomps
fs
inc
les
ss
and
jle
pop
lret
and
cmpsl
xor
mov
nop
cmp
mov
cmove
push
inc
mov
pop
int
sub
into
mov
sbb
in
sub
mov
icebp
xor
cmova
test
and
bound
push
mov
pusha
add
je
test
rolb
outsb
bnd
mov
nop
cs
sti
fsubrl
and
and
mov
sub
shrb
inc
adc
mov
rcr
adc
mov
call
ret
pop
push
mov
lahf
adc
fwait
scas
and
adc
movsb
xchg
xchg
lock
and
mov
and
mov
movsb
adc
and
mov
sarb
fs
and
cld
arpl
call
sbb
dec
mov
mov
cmp
es
jecxz
push
sbb
out
shlb
shll
jle
in
push
icebp
sub
popf
inc
sub
fnstenv
push
add
mov
outsb
repnz
cld
in
dec
mov
lods
int
enter
dec
cwtl
dec
adc
cld
test
mov
pop
sub
add
sbb
xor
pop
mov
rcl
inc
dec
pushl
out
add
fsubrs
orb
adc
and
and
mov
add
call
xor
push
mov
mov
pop
or
in
sbb
out
sub
push
rorb
xor
mov
mov
xor
adc
cmp
adc
je
mov
or
je
mov
cwtl
in
hlt
jmp
insl
adc
aaa
xchg
pusha
gs
jmp
push
call
ret
mov
inc
push
sbb
fists
fcompl
movsl
sub
and
adc
fs
stos
lods
daa
adc
push
jmp
jbe
jl
loopne
int3
mov
insb
loop
sub
sub
cld
cmpsl
dec
shlb
stos
les
or
or
lods
mov
adc
add
mov
mul
and
sub
sbb
enter
mov
dec
out
cmp
pop
test
adcb
or
mov
pop
repnz
or
dec
adc
adc
mov
mov
leave
mov
adc
sub
or
movsb
dec
rcrb
clc
push
ret
sub
push
loop
push
jo
dec
inc
enter
mov
lock
add
out
sub
mov
lods
xchg
dec
icebp
jae
jae
or
push
mov
adc
mov
xor
adc
pop
sbb
adc
or
mov
cld
mov
insb
mov
or
stos
or
cmp
fiaddl
xchg
xlat
in
dec
mov
ljmp
push
sahf
adc
sahf
pusha
xchg
mov
pop
in
sub
mov
push
mov
cmpsb
lds
cmp
ljmp
repnz
cli
xor
stc
add
cli
test
or
jg
ljmp
ret
sbb
out
jnp
cmp
std
pushf
xchg
out
das
sub
dec
and
xlat
sub
or
push
gs
loopne
jmp
xor
bound
lock
hlt
mov
push
push
adc
add
lods
cli
push
test
ret
loop
xor
loop
lret
push
sub
jl
adc
mov
push
xlat
inc
xrelease
mov
and
jp
pop
jg
jmp
aas
mov
lret
push
in
dec
inc
das
stos
push
push
push
sbb
sub
pop
fisubs
ljmp
xor
in
sub
push
pushf
mov
and
ret
sti
pop
int
or
pushf
inc
hlt
adc
lock
pushf
mov
add
jp
in
aam
push
rorb
test
mov
xchg
fdivr
addb
jg
fwait
adc
xor
inc
add
fiadds
and
gs
loopne
inc
call
movsl
scas
fs
neg
aad
stc
and
mov
xchg
jg
in
dec
daa
or
adc
push
jmp
xchg
add
orb
jmp
or
sahf
call
xor
test
xor
or
jge
and
sbb
jnp
push
and
iret
and
inc
add
dec
cmp
nop
xchg
cmpb
outsb
jb
or
sub
push
or
and
add
mov
or
push
shrb
inc
adc
cmp
movsb
adc
mov
inc
fwait
xchg
aam
aaa
add
add
jmp
lahf
inc
adc
cmpsb
testl
xchg
push
movsl
push
adc
stc
cmc
leave
je
pop
push
and
push
adcl
cmp
test
lret
cmp
xor
call
imul
lds
faddl
jnp
cmp
push
dec
lock
test
xchg
out
push
and
xchg
addr16
clc
push
push
push
sbb
orb
bound
sbb
mov
sub
push
push
mov
mov
faddl
xchg
out
cmp
xor
xchg
int3
call
shrl
sub
dec
ds
sahf
jo
and
insb
cmpsb
int
xor
in
int3
adc
movsb
insb
xchg
leave
mov
lret
insb
jae
imul
in
fwait
cmp
or
adc
lcall
jbe
sbb
loopne
lock
and
cld
pop
push
stc
cs
cmp
ficoml
je
rorl
or
sbb
sbb
sub
pop
repnz
jmp
dec
mov
add
or
push
pop
cli
mov
pmulhuw
fsubl
cmp
xor
inc
ja
or
mov
dec
xor
mov
inc
dec
sbb
or
mov
xor
inc
sub
mov
cmpsl
aas
imul
and
int3
cmp
and
cs
sub
clc
sub
push
cmpb
jg
sbb
sbb
hlt
sbb
cmpl
mov
xor
sbb
xchg
jmp
mov
xchg
sbb
dec
inc
dec
ljmp
and
adc
pop
push
inc
add
ljmp
adc
jns
test
test
xchg
mov
fbld
cmp
lock
lock
lea
fistps
divb
bound
fdivrs
movsb
xchg
cmp
mov
jnp
mov
pop
lock
or
lock
jne
out
lea
cmp
repnz
sub
and
push
sbb
dec
outsl
into
jp
cmp
hlt
mov
jno
fs
mov
sub
fisttpl
shrb
pop
jnp
movsl
xlat
gs
cmpsb
add
not
imul
jno
add
js
mov
or
lock
fcomps
cli
jb
adc
jp
push
je
cmp
xchg
pop
sarl
pop
fcmovb
scas
fstpt
lock
pop
adc
idivb
push
mov
jmp
sbb
fcomps
adc
jp
mov
pop
mov
inc
cmp
cmp
push
repnz
daa
or
mov
test
pop
or
cld
imul
xor
and
cmp
push
jo
inc
pusha
mov
fldcw
cvttps2pi
push
ret
inc
aas
pop
in
scas
sub
sub
popa
add
cmp
jne
cli
not
mov
call
pop
push
iret
push
inc
pop
test
popf
dec
stc
fistl
scas
cmp
aam
jnp
cmp
cmpsb
int3
lahf
sbb
decl
and
cmp
stc
jg
nop
les
mov
adc
push
inc
and
mov
cs
addr16
pop
xor
hlt
xor
jecxz
dec
and
cmp
out
inc
or
sbb
test
push
mov
or
fs
repnz
bound
insb
pop
mov
adc
dec
enter
push
pushf
xchg
loope
popf
sbb
repnz
dec
repz
dec
mov
insl
inc
dec
idiv
aad
sarb
lret
into
adc
js,pn
mov
leave
push
cmp
movsb
hlt
push
xchg
lfs
push
aas
lea
dec
lock
xchg
dec
pop
and
xor
adc
xor
add
inc
inc
mov
enter
cmp
and
xchg
dec
imul
xor
gs
pop
nop
inc
int3
scas
mov
pop
fistpll
sahf
pop
das
pop
repnz
popf
jne
icebp
mov
lea
out
xchg
sub
adc
push
cmp
push
mov
xlat
adc
pop
inc
adc
cmp
or
jmp
daa
or
mov
ret
adc
mov
mov
pop
in
fucom
sub
xchg
test
or
inc
xchg
cli
leave
scas
sti
push
or
mov
imul
cli
repnz
fmull
subb
movsl
aam
sbb
cmp
imul
test
push
mov
out
push
leave
push
xchg
es
inc
mov
inc
dec
sti
push
jp
cmp
out
inc
adc
out
loop
inc
stc
add
adc
movups
lret
add
add
lcall
movsb
jno
sti
jl
cmp
dec
test
test
cld
mov
xor
sub
jmp
adc
adc
adc
adc
xchg
push
dec
push
push
sub
dec
negl
dec
mov
add
push
jnp
movsb
add
shrb
fs
pop
bound
pop
leave
fs
and
adc
fisubrs
push
add
mov
lcall
add
mov
sar
xor
inc
cmpsl
jg
les
sti
and
aam
adc
xchg
les
adc
pop
loop
xlat
repz
sahf
cwtl
and
inc
mov
test
sub
xchg
sbb
iret
cmp
add
xchg
add
mov
mov
dec
add
cmp
add
mov
repnz
scas
scas
xor
cwtl
in
cmp
sub
add
sbb
shrb
jle
mov
pop
mov
xchg
cltd
popf
cmp
shl
scas
es
inc
sub
outsl
add
cld
lea
sbb
lods
mov
mov
xchg
or
or
sub
xorb
fbstp
add
shrb
pop
sub
icebp
push
std
sub
daa
ret
xchg
cmp
jne
stos
test
sub
push
jae
ret
adc
push
stc
sbb
daa
data16
sbb
jne
push
lock
pop
and
jno
push
jns
dec
inc
insl
je
pop
push
add
hlt
jo
adc
lock
cmp
cltd
push
cld
adc
movsl
fstl
arpl
nop
mov
std
call
jnp
inc
add
jne
cmc
loopne
shll
jmp
mov
jmp
mov
add
aad
dec
imul
and
inc
dec
sbb
jnp
pushl
in
das
jbe
pop
sti
mov
sbb
nop
pop
add
dec
inc
push
mov
mov
icebp
and
sbb
xchg
shll
ljmp
pushl
dec
sbb
push
pop
mov
mov
jecxz
and
out
jo
push
mov
push
push
outsl
mov
cld
xchg
out
xchg
sbb
adc
sbb
dec
jb
sbb
stos
inc
mov
out
stos
daa
repnz
rcll
repz
xchg
push
inc
inc
mov
xor
pop
out
xor
icebp
push
adc
lock
xchg
les
lds
ret
cmp
insl
sub
cli
pop
stos
mov
popf
in
push
dec
mov
dec
dec
mov
aam
fbstp
inc
mov
inc
cli
test
mov
push
lods
jl
hlt
sbb
cmpsl
mov
js
xor
cmp
dec
sbb
mov
cli
aad
xchg
pop
bound
loop
push
jg
cltd
sub
in
mov
fsubrs
inc
push
in
sbb
pop
xor
jne
iret
or
jmp
mov
cld
adc
repnz
call
repnz
out
loope
incb
xor
dec
sub
in
sbb
cmpsl
sbb
sub
mov
pop
stos
loopne
imul
push
xor
sub
je
pop
ret
int
cmp
lea
das
psrld
sub
in
or
nop
movsb
mov
pop
mov
or
jne
adc
stos
cmp
pop
lea
adc
lock
adc
mov
mov
enter
xchg
and
and
arpl
mov
cmp
mov
and
sti
dec
mov
out
jns
repnz
xchg
mov
or
in
dec
sub
fs
adc
add
inc
adc
mov
aas
add
adc
cmp
and
test
sub
pop
and
and
mov
adc
dec
mov
jns
or
fcmovne
jl
mov
xor
push
int3
jg
sbb
add
push
adc
and
push
inc
hlt
adc
push
inc
and
mov
sbb
dec
mov
add
pop
jg
and
inc
add
jne
lret
lea
sbb
enter
and
test
jge
mov
xor
dec
or
pushf
jle
and
mov
lock
fisttps
inc
jb
jmp
je
push
sbb
ja
add
cmp
loop
sbb
or
shlb
daa
lock
test
movsb
xor
mov
stc
push
fs
jl
pop
loopne
adc
lds
clc
xor
sbb
and
cmp
adc
outsb
mov
pop
mov
adc
fstpl
jl
dec
adc
insb
movntps
or
jp
sub
push
inc
fcomp
aaa
pushl
lcall
in
sub
jl
mov
and
adc
and
and
adc
repnz
negl
inc
cltd
sbb
enter
mov
mov
push
lds
inc
hlt
inc
lock
dec
movsb
nop
in
mov
jmp
iret
adc
call
cmp
inc
les
inc
pop
mov
lock
ljmp
inc
popa
jmp
icebp
loopne
out
sbb
cld
loop
cwtl
jno
or
call
dec
sbb
or
lahf
cmp
xchg
imul
lahf
out
inc
bnd
icebp
dec
inc
mov
imul
shrb
repnz
in
push
lret
lret
pop
or
pop
xchg
or
flds
cmpsb
and
jp
test
in
ret
xchg
iret
jl
lods
and
mov
cmp
mov
jle
push
jne
ljmp
push
mov
cmpsl
pop
int3
aad
shrb
mov
cwtl
lods
pop
xlat
lret
push
xor
cmp
aas
je
stos
push
or
inc
push
dec
test
dec
sub
fsubr
je
test
or
jle
cltd
movsl
sub
adc
and
mov
xor
pop
lock
push
jle
aam
mov
lds
xchg
lds
out
sub
adc
dec
add
jge
jge
adc
int3
icebp
sub
mov
mov
jmp
mov
adc
pop
aam
das
mov
push
fisttps
test
dec
jg
movsl
cli
jg
outsl
and
jmp
ret
push
jae
sbb
adc
jo
ljmp
sbb
or
add
inc
sub
add
push
cmpb
add
fwait
enter
sbb
and
pop
add
addl
test
cmpsb
cmpsl
adc
mov
or
add
rorb
jmp
dec
add
or
and
mov
loopne
int3
mov
and
mov
dec
cmpb
mov
sub
pop
jg
sub
rcl
test
inc
cli
push
ljmp
sub
mov
xchg
xor
pop
shlb
pop
cwtl
or
adc
out
pop
or
adc
inc
add
cmp
lock
push
pop
push
in
or
inc
mov
insb
mov
cmp
add
je
setg
lods
test
jl
sbb
orl
push
jmp
pop
and
sub
sahf
and
push
lret
or
cwtl
sarl
pop
popf
jno
pop
or
insl
mov
jecxz
add
pop
xor
out
xor
dec
jl
inc
or
mov
test
sub
adcl
or
push
or
sbb
sub
fwait
adc
mov
and
clc
xorb
push
jg
xchg
movsl
dec
push
pop
sti
jns
xor
sub
inc
inc
es
lods
je
or
icebp
and
add
xlat
adc
dec
add
dec
mov
jo
inc
inc
adc
cmp
inc
pop
xchg
sti
adc
mov
jo
cwtl
test
xchg
iret
les
int
adc
push
mov
or
je
add
mov
addb
push
push
push
clc
pop
sub
pusha
or
cmp
loopne
xor
repz
adc
fisubs
outsb
repz
out
or
out
lret
lcall
cltd
and
lret
in
loope
and
sbb
in
in
pop
sbb
push
rolb
sti
xor
push
data16
dec
stos
push
dec
adc
sti
lahf
mov
test
int
scas
nop
xor
mov
inc
mov
lods
cmp
jmp
mov
inc
outsb
or
or
adc
dec
xlat
push
es
ja
xor
addr16
inc
sbb
cltd
push
nop
test
jbe
sbb
sbb
adc
add
sub
add
cwtl
mov
std
fwait
inc
imul
push
rcrb
rcll
sub
js
pop
scas
sbb
cmpl
or
lods
je
dec
imull
mov
mov
mov
addr16
inc
jno
add
adc
icebp
cmp
std
scas
inc
push
pop
inc
sub
arpl
pop
ljmp
ljmp
push
imul
dec
loopne
adc
mov
ret
and
pop
jecxz
and
inc
or
jg
pop
and
add
pop
pop
push
mov
mov
lods
jp
setge
sbb
or
inc
push
jge
insb
xlat
xor
xor
aad
pushf
stos
pushf
lds
lods
mov
scas
sti
and
scas
fdivrs
bound
addr16
adc
or
inc
adc
bound
mov
setne
pop
xlat
fs
fistps
stos
or
incl
mov
pop
add
rolb
ficoms
inc
sub
sar
sub
or
or
fcoms
add
dec
jmp
clc
sub
mov
data16
push
add
sub
xlat
clc
push
or
rcrl
xchg
pop
scas
pop
out
adc
pop
push
in
jg
lea
adc
sbb
add
mov
sbb
mov
xchg
mov
add
leave
mov
leave
dec
dec
jne
lret
or
adc
leave
jge
push
aaa
cmp
pmovmskb
pop
das
notb
lret
leave
or
out
add
sbb
dec
sbb
aad
jecxz
nop
mov
pop
jl
pop
inc
adc
sbb
xchg
sub
xchg
sbb
xchg
mov
aam
jne
add
inc
movsb
pop
je
rclb
repnz
or
adc
mov
sahf
pusha
adc
and
in
push
xor
dec
and
mov
insb
testb
adc
orb
push
enter
jmp
cmp
jle
jmp
adc
sbb
outsl
loop
ret
inc
pop
push
dec
sbb
sbb
mov
ret
and
aam
cli
inc
or
shlb
xor
movsb
jmp
pop
sub
mov
dec
pop
leave
mov
push
nop
pop
test
push
loope
mov
adc
dec
loop
cmp
ja
dec
adc
xchg
or
adc
sbb
xchg
hlt
mov
pop
xchg
jl
ficoml
jne
mov
mov
add
or
mov
inc
cs
arpl
sub
mov
mov
dec
clc
mov
push
push
add
fdivrs
nop
pop
jge
dec
pop
scas
sub
push
mov
setge
cmc
inc
and
fwait
push
jns
test
mov
inc
loopne
cmp
adcl
add
int3
push
and
sbb
addb
and
dec
adc
cld
xor
stos
icebp
daa
das
iret
xor
push
outsl
jo
out
gs
es
out
push
or
sbb
clc
mov
out
fsts
sbb
mov
sub
push
mov
in
push
daa
inc
pop
insb
mov
cmp
test
pushf
xchg
sbb
and
jne
jae
and
jo
imul
jne
pushw
push
std
pushw
jl
xchg
or
and
mov
in
mov
xor
sbb
dec
ljmp
jbe
xor
or
repz
mov
fbld
dec
inc
mov
pop
dec
pop
or
mov
push
pop
cmpsl
push
pushf
movsb
mov
jge
sbb
outsl
shr
sub
and
and
mov
daa
jo
movsl
aam
jns
mov
push
xor
or
rdpmc
xchg
xchg
xor
push
pop
pop
decb
les
lret
adc
cmp
push
jnp
inc
adc
xor
dec
inc
or
jl
xor
popa
sbb
push
push
leave
xor
fstpt
dec
push
push
idivb
add
popf
pop
dec
rol
lock
xlat
mov
inc
xor
or
lret
cmc
cltd
mov
mov
xchg
push
dec
add
jmp
jns
out
out
xchg
icebp
mov
jbe
mov
test
mov
and
inc
dec
jne
popf
ficoms
cmc
adc
mov
jp
sub
cwtl
outsb
lods
es
inc
mov
sub
jmp
mov
mov
popf
je
divl
xchg
push
or
push
or
cmp
sbb
mov
jg
sub
imul
and
adc
bnd
repnz
cltd
xchg
jge
and
or
cmp
ficomps
scas
mov
adc
push
nop
sbb
jmp
lcall
mov
pop
and
mov
xchg
and
or
adc
les
out
out
movsb
scas
mov
xlat
xor
inc
hlt
push
add
pop
and
or
push
push
jbe
mov
push
adc
pusha
rcll
or
out
jmp
cmp
je
cmp
cmpsb
into
mov
cmp
jno
dec
and
sub
add
std
dec
pop
adc
jns
rolb
sbb
push
out
push
dec
clc
mov
mov
cmp
xlat
mov
daa
jmp
nop
and
and
ja
mov
inc
xor
mov
xchg
sub
fstl
pushf
mov
mov
add
cmp
stos
add
pop
xchg
xor
add
je
inc
clc
xchg
push
call
daa
sbbb
cmp
xchg
rclb
je
xchg
push
push
cwtl
je
mov
xor
xlat
movsl
sub
loopne
out
outsl
mov
imul
xchg
push
lret
icebp
cmp
rclb
cmp
cmp
inc
mov
ja
jl
insb
les
or
sbb
adc
sub
dec
jmp
fs
pop
pop
mov
xor
mov
test
pop
adc
pop
lods
add
mov
mov
int
inc
adc
dec
insl
imul
ret
and
inc
or
pusha
ficoml
aad
adc
leave
cld
push
or
add
test
push
jne
mov
fxch
inc
xor
call
loopne
add
lods
mov
and
add
dec
stos
int
jnp
pop
inc
push
mov
add
mov
cli
adc
mov
inc
pop
jl
mov
add
and
sub
repnz
jp
rcr
addr16
aas
dec
push
movsb
scas
adc
sbbl
das
push
cmp
dec
jle
pop
inc
stos
adc
int
jg
mov
mov
and
mov
pop
popf
bound
out
or
cmp
addr16
jo
sub
and
jae
lcall
fs
in
mov
sub
push
and
jae
mov
push
pop
popa
mov
fdivrs
mov
rcl
and
jp
aas
jns
pop
mov
pop
jne
cld
rdpmc
mov
jle
fistl
fs
cwtl
mov
xor
out
movsb
jecxz
movsb
in
in
mov
push
fwait
repnz
push
add
adc
push
in
mov
mov
sbb
push
xchg
stc
sub
or
xor
fsubrs
in
xchg
and
fildll
pop
dec
adc
shlb
repz
bound
push
test
iret
imul
xchg
and
rorb
inc
pop
jl
dec
sbb
popf
loopne
loopne
in
ds
call
xor
push
mov
mov
out
imul
sbb
push
mov
pop
andb
lret
icebp
insb
mov
sbb
adc
xchg
notb
pop
jo
pop
inc
mov
xor
mov
push
inc
rolb
mov
inc
and
and
xchg
scas
in
cmp
mov
jmp
stc
sbb
jno
mov
ret
inc
push
popf
jbe
repnz
aam
ret
bound
cmp
sbb
push
shl
das
push
mov
sub
into
xor
mov
mov
mov
add
adc
dec
pop
cld
xor
pop
xchg
cwtl
sbb
aas
pusha
or
call
mov
mov
mov
push
lea
mov
xchg
mov
sbb
cld
xchg
mov
sub
xor
jge
rclb
imul
inc
add
or
add
sub
or
cmp
adc
mov
pop
mov
pop
popf
lods
push
adc
pop
push
xchg
or
mov
xchg
and
or
stc
call
insb
push
ret
outsl
ja
adc
mov
adc
add
xor
je
adc
fs
mov
inc
mov
add
mov
xchg
push
adc
inc
das
outsl
push
into
mov
insl
test
mov
movsb
es
push
mov
adc
xor
jge
pusha
pop
cmpsb
mov
cld
push
mov
inc
inc
add
dec
mov
imul
or
adcl
xor
xchg
and
test
jne
jge
push
out
clc
dec
mov
sub
xchg
js
adc
lret
add
adc
sahf
xchg
dec
or
adc
or
push
push
lret
cmp
add
lods
std
fs
sub
inc
cmp
mov
mov
subl
dec
jp
pop
dec
add
int3
mov
push
popa
inc
sarb
add
rolb
add
mov
in
jae
xchg
sub
aad
add
enter
ja
in
jb
cmp
jp
inc
jnp
jl
jge
jle
jg
pusha
cmp
bound
xchg
gs
ja
in
jb
cmp
insb
mov
and
outsl
enter
jb
cmp
ljmp
inc
push
and
pop
enter
jb
cmp
pop
mov
and
inc
enter
jb
cmp
inc
mov
and
dec
enter
jb
cmp
dec
mov
and
xchg
xor
xor
xor
cmp
aaa
and
xchg
cmp
cmp
cmp
cmp
aas
and
xchg
and
and
and
cmp
daa
and
xchg
sub
sub
sub
cmp
das
and
xchg
adc
adc
adc
cmc
icebp
cmp
inc
inc
or
nop
inc
xor
inc
pop
and
push
xlat
shlb
shlb
mov
xor
jae
inc
stos
cmp
ljmp
jo
cmpsb
arpl
pop
roll
jge
test
and
inc
sbb
int3
arpl
aam
out
xor
or
inc
gs
popa
jne
je
or
push
xlat
xlat
push
scas
sbb
dec
arpl
ficoms
or
inc
mov
cmp
nop
mov
add
inc
arpl
jae
mov
nop
imul
fists
inc
mov
sbb
gs
sub
mov
arpl
adc
decb
sbb
bound
jne
jnp
movsb
push
loopne
or
dec
xor
clc
and
outsb
xchg
addr16
push
hlt
mov
jo
xchg
into
xchg
push
adc
add
dec
or
pop
int
inc
jle
lds
jnp
jnp
stos
jecxz
cld
aaa
pusha
inc
sar
dec
jge
lahf
bound
or
insl
push
insb
popa
arpl
adc
je
rolb
dec
outsl
lret
mov
jns
test
or
or
fsts
mov
or
and
cmpsb
sbb
dec
adc
push
xchg
and
pop
or
jecxz
cwtl
mov
adc
sbb
add
sbb
sub
les
inc
sbb
int
pop
add
adc
imul
int
push
fsub
mov
or
inc
inc
lahf
or
inc
adc
cmp
cmpsl
pop
sub
push
or
loope
inc
aaa
loopne
or
adc
int
hlt
or
mov
or
ret
std
jmp
bound
andps
and
pop
adc
jne
sub
xor
pop
movaps
jns
sub
mov
and
xchg
enter
pusha
adc
rcrb
movsl
adc
and
shr
aam
xor
pop
inc
addr16
push
addr16
sbb
test
push
or
out
xor
push
mov
add
push
shrb
repz
hlt
fdivrs
aad
in
in
pushf
mov
ret
pop
mov
lret
sbb
seto
into
cmp
sub
dec
gs
sbb
rclb
aad
dec
sub
inc
test
push
mov
fwait
cmp
jbe
pusha
aaa
xor
fisttpll
ret
inc
add
fdivrl
and
jns
push
add
mov
inc
push
loop
mov
inc
cmp
xchg
jl
and
sbb
dec
push
pop
or
fdivs
push
inc
cmp
out
ja
loope
or
inc
pop
fimull
xchg
add
leave
imul
aaa
js
aas
roll
pop
loope
and
pop
push
or
inc
pop
push
mov
mov
dec
lahf
add
mov
sbb
js
xchg
cmp
push
jbe
sub
push
add
add
out
sbb
jl
sbb
sub
add
push
nop
addr16
jno
pop
mov
sbb
mov
adc
nop
push
jno
sub
or
add
push
inc
popa
cmp
pop
or
rcr
inc
xchg
sub
mov
and
stos
repnz
sbb
xchg
pop
or
inc
cmp
adc
lods
inc
inc
add
and
adc
cmp
push
aam
stos
movsb
in
enter
gs
jae
jmp
out
mov
jo
adc
inc
mov
and
fldenv
int3
dec
push
sti
dec
dec
pop
sti
and
push
adc
jo
adc
mov
arpl
pop
mov
add
shrl
push
std
xchg
mov
or
add
jg
mov
add
dec
jae
push
std
inc
sbb
adc
leave
insb
sub
jmp
mov
int3
add
popf
push
pop
rcll
ret
pop
or
xchg
idivb
aam
out
push
mov
ret
adc
andb
es
sbb
sbb
mov
xor
jnp
mov
sbb
dec
dec
push
loope
dec
dec
or
mov
mov
mov
pop
jl
add
inc
or
xchg
test
sub
xchg
mov
adc
xchg
xor
xor
mov
rolb
or
cmpsb
and
mov
pop
adc
rolb
nop
pop
inc
mov
pop
push
cli
cmp
or
stos
push
cmp
int3
cwtl
add
cltd
or
adc
rolb
and
sub
cmp
mov
in
sbb
data16
sbb
or
push
scas
jg
and
add
or
hlt
inc
sbb
mov
lret
rcll
jae
icebp
je
xor
pop
adc
xchg
sub
rclb
mov
inc
or
lret
jo
and
cmp
or
dec
insl
lret
inc
mov
pusha
and
cmp
or
adc
andb
pop
adc
adc
pusha
adc
and
inc
add
mov
inc
rcrb
cwtl
enter
bound
bound
sahf
or
rorb
adc
fwait
rorb
popf
sbb
dec
add
mov
sub
shrb
lods
inc
pop
sub
or
enter
mov
cld
fs
inc
je
inc
icebp
push
cmpsl
add
je
insl
mov
adc
and
mov
hlt
mov
js
sbb
int3
jmp
xor
mov
inc
mov
inc
fsubr
jbe
push
nop
leave
pop
sub
aam
mov
dec
insb
int3
pop
or
lods
mov
xchg
xchg
inc
jnp
les
int3
inc
mov
lods
or
aam
adc
push
jle
xor
sbb
js
int
jl
or
push
dec
arpl
fwait
test
push
pop
adc
clc
inc
xor
inc
js
int
or
into
pushf
test
addr16
inc
out
iret
nop
jl
enter
jl
mov
int
inc
adc
shlb
mov
fsubs
or
push
add
test
movsb
or
cmpsl
call
xchg
cmp
lret
popa
add
ret
nop
adcb
lcall
in
adc
popa
outsb
das
dec
xor
mov
and
xor
data16
add
jne
sub
or
mov
ds
movsb
in
cmpsl
ds
cmpsl
js
scas
mov
dec
stos
cmp
sub
sub
mov
and
jmp
xchg
ret
testb
hlt
push
push
mov
and
push
aad
enter
cmp
jo
jne
dec
xchg
dec
mov
adc
int3
or
push
shll
jne
inc
push
inc
imul
shll
pop
mov
dec
stos
icebp
in
outsl
dec
push
adc
jnp
jmp
dec
dec
pop
jle
adc
jmp
inc
decb
mov
sbb
in
out
xor
and
rorl
leave
and
test
sub
lock
scas
jns
adc
sub
mov
or
imul
popf
adc
mov
jl
xchg
mov
sbb
inc
jbe
inc
bound
or
add
and
jnp
push
inc
cmpsl
sbb
mov
cmp
pop
adc
stos
sub
xlat
movsb
push
dec
inc
sub
and
or
sub
inc
jne
mov
xchg
sti
je
les
lods
jle
inc
imul
cli
push
push
pop
push
negl
inc
adc
xchg
dec
repz
jle
adc
jge
cs
push
jmp
inc
jne
scas
outsl
inc
hlt
out
scas
daa
dec
enter
mov
push
ja
add
dec
lahf
insb
dec
sbb
ljmp
or
mov
dec
stos
add
xlat
mov
inc
cwtl
cmc
fiaddl
icebp
test
adc
jnp
rclb
enter
pop
pop
fadd
shr
mov
stos
fstpl
jmp
in
inc
xchg
stos
test
jb
loop
fs
test
enter
outsb
adc
gs
pop
loopne
and
popa
jo
movsl
inc
xchg
push
push
mov
stos
mov
fsubrs
push
gs
cmpsl
adc
test
sahf
xor
push
imul
sbb
xlat
sub
imul
test
imul
or
call
push
pusha
inc
jno
popa
lods
loopne
fs
adc
dec
mov
pushf
sub
imul
or
inc
dec
popa
insl
dec
and
dec
mov
fisttpl
out
xchg
xor
inc
outsl
jb
or
sbb
xchg
sub
mov
push
pop
imul
fwait
rcr
cwtl
repnz
dec
stos
and
outsb
fs
rolb
inc
rclb
imulb
dec
dec
xchg
lea
ljmp
push
mov
sbb
lahf
js
dec
inc
or
sbb
xchg
pop
int3
mov
rcl
sbb
push
and
inc
mov
push
jns
fldt
mov
sub
outsl
sub
adc
loope
jp
sbb
adc
lret
or
sbb
inc
imul
push
push
fmull
jo
fwait
sbb
and
mov
add
js
or
dec
push
cwtl
and
pop
fisubl
inc
sub
loope
mov
enter
inc
sub
or
dec
adc
or
pop
or
rclb
jge
lods
mov
inc
sub
ret
push
sub
mov
adc
cmpsl
mov
fsubrs
frstor
cmp
lahf
jle
adc
xor
adc
xor
jl
dec
push
push
dec
pop
inc
dec
out
push
in
inc
movsb
dec
cmp
inc
addb
dec
push
mov
add
inc
dec
dec
xchg
xor
inc
cmp
adc
dec
cmp
pusha
out
sbb
inc
ret
inc
or
inc
sub
push
inc
xor
xor
adc
dec
xor
and
mov
xor
jge
dec
mov
push
dec
xchg
push
dec
fdivl
push
movsb
sbb
push
add
or
or
sbb
punpcklbw
push
repnz
inc
pusha
enter
and
adc
inc
push
dec
push
or
push
dec
push
xor
pop
ds
mov
mov
nop
adc
pop
mov
sti
mov
inc
adc
movsl
pop
clc
sub
mov
push
cli
leave
adc
jecxz
adc
orb
dec
sbb
ljmp
xor
dec
push
rorl
inc
in
pop
mov
inc
or
adc
and
sbb
mov
mov
in
das
dec
aam
xorb
inc
or
jp
into
or
adc
xor
mull
loope
shlb
mov
inc
and
lods
sbb
jmp
sbb
push
ficoms
inc
inc
jp
enter
and
lahf
lret
jo
repz
pop
sub
adc
lret
sub
lahf
jle
in
jp
mov
or
pop
inc
push
xlat
popa
lret
sbb
xchg
dec
lods
xchg
inc
lea
cld
and
mov
xchg
xchg
jmp
lret
cmp
pop
adc
repz
pop
mov
inc
repnz
mov
xchg
sbb
daa
xchg
mov
or
lea
adc
jbe
subb
add
ljmp
movsl
push
sub
mov
jbe
or
shrb
sbb
or
movsb
push
fs
sub
shlb
mov
sub
dec
pusha
dec
testb
nop
pop
test
add
sbb
mov
inc
and
out
mov
lret
cltd
adc
shrb
les
xor
inc
inc
je
add
sarb
push
add
test
jp
aam
and
aad
or
mov
dec
mov
sbb
mov
lock
test
test
mov
and
mov
je
pop
adc
cmpsl
cmp
stc
mov
js
jo
enter
fldenv
lds
or
jmp
sub
jbe
or
add
add
xor
push
mov
fsub
stos
dec
or
sub
add
cld
pop
pop
lcall
xchg
cmc
adc
inc
pop
cmp
test
cltd
mov
lea
mov
sub
lods
sar
add
in
sub
and
dec
out
icebp
lret
or
xchg
call
or
orb
and
decl
jno
inc
jmp
pop
or
leave
mov
adc
sub
fisubs
fldcw
dec
insl
push
cmp
add
xor
sub
sbb
nop
xchg
adc
loop
fidivl
mov
sbb
neg
sub
jns
stc
fld
dec
mov
xchg
cwtl
sub
add
sahf
mov
mov
or
xor
in
mov
push
lret
inc
add
or
insl
dec
and
or
pop
mov
mov
and
cld
mov
pop
add
clc
adc
ret
ds
in
mov
pop
cltd
scas
std
in
in
and
push
push
sub
push
cmp
in
shll
in
mov
inc
lock
inc
sub
push
inc
daa
adc
xchg
shl
insb
in
jne
pop
loopne
mov
jne
jmp
push
cmp
mov
push
call
fwait
mulw
stos
mov
cmp
xor
pusha
in
and
xchg
or
nop
les
xchg
lods
xchg
mov
and
jb
fsubl
or
cmp
xchg
adc
mov
adc
and
in
jno
and
adc
fsubrs
adc
je
js
mov
loope
gs
inc
insl
xchg
dec
out
into
adc
fisubs
es
mov
dec
call
jle
xchg
xchg
les
data16
mov
inc
outsb
mov
mov
popa
clc
adc
repnz
and
sub
add
cmpsb
sbb
js
in
lock
adc
xor
adc
hlt
mov
jnp
fisubrs
jp
mov
cmp
jmp
dec
pop
xorb
cmpsl
shrb
je
jmp
xchg
lock
ja
add
ja
mov
dec
xor
xor
xchg
xor
ror
dec
ja
mov
sbb
nop
sbb
or
aaa
add
add
sbb
push
nop
outsl
std
pushf
mov
jne
movsl
shrl
add
mov
push
fwait
jle
movl
dec
sti
jmp
mov
adc
ss
inc
aam
adc
insb
mov
leave
and
xchg
mov
mov
fcmovne
mov
mov
cmp
xchg
xchg
fbstp
outsb
lret
mov
adc
icebp
dec
loopne
lahf
fidivs
dec
nop
cli
insb
mov
or
push
push
jno
push
insb
imul
sbb
fstpt
adcl
fwait
add
invd
mov
or
or
aam
insb
push
push
fdivl
loop
sahf
xchg
push
pop
rclb
and
ret
xchg
pop
or
jmp
sbb
js
hlt
jo
clc
inc
inc
cmpb
lret
mov
mov
popf
mov
push
sub
cltd
push
in
inc
dec
ret
inc
adc
and
mov
jne
xchg
daa
cvttps2pi
add
imul
test
mov
dec
mov
jb
adc
mov
push
cmpsb
push
arpl
xchg
les
sarl
cwtl
xchg
push
mov
popa
and
adc
jl
aam
or
push
lods
inc
sub
call
and
push
jae
es
and
loope
inc
push
pop
or
int
mov
fildll
xor
movsl
pop
adc
mov
cwtl
push
sub
inc
sub
sarb
and
ljmp
bound
push
out
inc
adc
cltd
sbb
dec
push
mov
es
push
inc
movsb
leave
iret
xchg
mov
nop
mov
testb
je
movsl
int3
maxps
leave
lock
adc
icebp
mov
mov
pop
test
call
mov
add
movsl
pop
inc
inc
sbb
clc
push
cld
ret
mov
and
mov
gs
adc
rolb
xlat
sti
cltd
dec
clc
pop
cmp
in
push
inc
lea
pushf
adc
push
xchg
jg
cmpl
ficoms
nop
pushf
sbb
lret
idiv
dec
repnz
mov
out
inc
push
cltd
cwtl
add
cmp
mov
mov
inc
outsb
imul
add
rol
aaa
pop
mov
push
shlb
pop
repnz
fs
add
mov
pop
xchg
shlb
insl
je
mov
cmpl
test
clc
push
lret
pop
shll
xchg
dec
insl
rcll
cs
out
dec
mov
cmp
nop
dec
hlt
xor
push
or
or
lods
nop
lret
dec
outsl
inc
add
cmc
and
stos
fsubs
cwtl
xchg
mov
jns
cltd
sbb
clc
cwtl
outsl
mov
push
out
xorb
outsl
dec
lcall
add
add
shll
push
inc
jae
and
inc
not
and
mov
js
or
mov
punpckldq
movsb
sbb
popa
cmpsb
push
inc
test
cmp
cmp
inc
adc
and
dec
sarl
xchg
es
dec
xor
pop
sub
and
sbb
dec
pop
lock
adc
aas
add
sahf
lea
push
sbb
adc
pop
ljmp
or
shll
sbb
mov
cmp
je
mulb
xchg
hlt
mov
or
jle
add
and
sbb
jae
xor
pop
dec
mov
popa
push
sbb
inc
orb
or
or
test
or
xor
xor
dec
mov
and
orl
pop
dec
cmp
sbb
or
dec
cmp
lcall
clc
push
inc
ds
fs
loopne
and
xor
lods
or
cmpsb
and
mov
es
add
dec
in
pusha
lret
notb
and
adc
das
data16
add
sti
mov
mull
mov
in
mov
inc
decl
pop
loope
sub
sub
jge
movsb
in
nop
icebp
inc
dec
or
fsubl
dec
pop
adc
jae
loopne
in
dec
bound
int3
jb
mov
jae
xchg
je
cld
mov
test
popa
rcrb
xor
add
mov
stc
ds
or
and
adc
add
push
lea
xchg
inc
and
test
dec
sbb
test
lods
cmp
xlat
jae
cmpl
in
lea
arpl
jge
jo
sub
movsl
flds
negl
sarl
std
inc
jmp
movsb
iret
and
jne
add
mov
imul
push
sbb
add
jbe
hlt
repnz
dec
fs
in
xor
test
iret
adc
push
das
mov
xor
sub
gs
push
addr16
xchg
flds
fimull
xor
xchg
push
xchg
pop
in
jmp
push
aam
rcr
addl
dec
sub
lock
mov
sub
outsb
lret
jmp
add
dec
and
sti
xchg
sub
xchg
lcall
add
rcll
add
push
mov
enter
shll
loopne
sahf
xor
cmp
rcrl
push
pop
pop
stc
ja
add
jge
int3
cmp
movsl
pop
jg
pop
mov
cmpl
add
test
sub
test
jne
sbbl
dec
fdivr
and
repnz
inc
ret
dec
test
sub
sub
stos
sbb
dec
pop
push
sub
and
and
mov
xor
dec
mov
and
imul
push
icebp
rorb
pop
mov
pushf
adc
push
push
dec
mov
xchg
mov
cltd
sub
lods
push
sbb
xchg
adc
jne
scas
lds
daa
jmp
sbb
cmp
rcrb
sbb
xor
sbb
and
sbb
xchg
xor
mov
aas
loopne
sub
into
enter
mov
dec
je
or
add
xor
ret
cli
pop
mov
xchg
subb
push
mov
xchg
fisubrl
sub
pop
mov
xchg
out
pusha
push
push
push
mov
cmp
sbb
cmp
inc
add
scas
xorl
lret
cwtl
dec
or
mov
xchg
jl
inc
cmp
dec
aas
cld
notl
jle
jmp
divl
int3
adc
push
push
outsl
mov
push
shlb
hlt
inc
dec
daa
jne
addb
cmp
xor
pop
mov
aaa
pop
push
sbb
mov
pop
leave
mov
pop
xchg
push
xchg
int3
dec
aam
xchg
pop
cmp
xor
push
dec
xor
xor
xchg
pusha
adc
bswap
rcrl
or
bnd
push
xor
sbb
mov
cltd
jecxz
adc
stos
or
ret
mov
xor
push
adc
movw
adc
adcl
inc
stos
jne
mov
dec
in
cwtl
sahf
sarb
push
cmpsl
cmp
mov
adc
mov
ds
mov
or
pop
add
cmpl
dec
inc
stc
repnz
rcrb
and
push
mov
lea
push
loopne
pop
cmp
mov
sbb
inc
xor
jmp
xor
fcompl
or
cmp
sub
and
loop
lcall
dec
test
push
ljmp
xchg
or
push
add
jp
push
jne
hlt
mov
jl
dec
lea
repz
dec
fldenv
inc
add
sbb
mov
sbb
or
dec
mov
mov
mov
stos
adc
mov
mov
scas
push
push
push
bound
clc
xlat
jb
xchg
cltd
dec
cmp
adc
js
mov
add
inc
adc
jmp
and
dec
das
mov
dec
mov
loope
and
pop
mov
sub
dec
adc
push
inc
push
inc
les
inc
pop
and
fs
dec
movb
xchg
leave
push
push
dec
mov
mov
push
push
push
pop
cmp
sub
add
cmp
inc
pop
push
cmp
pushf
mov
ss
cmpsl
ja
enter
popa
shrl
mov
xchg
dec
mov
or
gs
das
notl
sbb
pop
adc
inc
sbb
sub
mov
hlt
mov
jo
or
sti
vpminsw
in
int3
ret
stos
dec
xlat
ret
or
dec
rcrl
jl
sub
or
cmp
sub
pop
in
rolb
sub
popf
inc
jl
hlt
mov
pop
out
mov
mov
lcall
pop
dec
iret
add
sarl
and
and
push
mov
pop
jae
jle
dec
mov
pop
cld
push
sub
jge
mov
test
shlb
dec
mov
sbb
ja
dec
lock
cmp
data16
mov
cs
inc
in
inc
leave
das
mov
pop
xor
or
pop
cmpsb
pop
addr16
sbb
mov
cmpb
xor
bound
inc
jg
jns
rcrl
dec
test
es
icebp
jl
loop
adc
gs
or
shlb
jnp
sahf
shr
sbb
mov
test
jno
jnp
add
xor
adcb
cltd
and
mov
das
dec
fs
popf
je
mov
or
icebp
jne
push
adc
push
cmp
or
or
scas
mov
sub
push
iret
lods
push
repz
fadds
or
push
xchg
fcomps
test
scas
lods
call
or
cwtl
adc
and
or
andl
fcoms
lea
aas
cmpl
icebp
insl
sub
add
hlt
mov
dec
inc
mov
fidivs
and
jg
add
push
xor
lea
int3
mov
pop
dec
add
add
into
mov
arpl
dec
mov
adc
inc
adc
push
shlb
mov
jne
pop
sbb
stos
arpl
aam
repz
sbb
push
push
cli
in
add
adc
or
mov
in
xlat
push
adc
dec
nop
push
pop
pop
in
test
ljmp
int3
pop
inc
inc
imul
adc
fwait
push
pushf
xor
xor
pushf
dec
cmp
cwtl
in
inc
mov
imull
mov
ljmp
ret
dec
and
mov
sub
lcall
add
push
push
pop
pusha
dec
outsl
push
imul
stos
or
subb
pusha
mov
jns
mov
add
sub
lahf
test
lea
call
adc
subb
nop
cwtl
mov
std
adc
dec
cs
or
aam
ret
and
orl
xchg
push
mov
mov
sarb
pop
adc
push
movsw
or
xchg
pushf
sarb
bound
xchg
lods
mov
call
push
push
cwtl
leave
jne
pop
mov
pusha
mov
dec
sbb
adc
add
lea
fmuls
aam
gs
sub
adc
mov
xchg
or
invd
addb
je
dec
or
movb
pop
jmp
movw
or
sub
pop
mov
mov
or
or
repz
test
jmp
test
xor
pop
daa
and
shll
mov
mov
add
push
push
pop
sub
enter
adc
cmp
ficoml
push
mov
notl
in
in
jae
jno
enter
push
adc
adc
mov
lods
pop
or
adc
jns
cs
add
jnp
add
loope
ret
and
add
nop
adc
stos
sub
dec
ret
push
jo
fs
xchg
adc
mov
je
test
xchg
insb
xor
out
lods
or
std
pop
push
mov
push
push
test
cmpb
int
cltd
push
cli
mov
js
push
dec
imul
xchg
dec
or
mov
rorb
mov
adc
pushf
aam
mov
cwtl
insl
dec
hlt
and
dec
push
lods
mov
push
daa
mov
adc
aam
mov
xchg
clc
dec
add
enter
adc
and
inc
hlt
int3
xchg
int
add
push
mov
into
push
out
xor
js
pop
rcll
loopne
aam
fdivrl
push
xorb
rcrb
insb
ljmp
enter
test
pop
push
add
lock
rorb
mov
add
nop
or
mov
pusha
out
mov
sbb
add
enter
mov
scas
mov
jl
push
fdivs
lods
mov
call
dec
flds
fcoml
sub
push
sarl
in
lock
test
fstpl
push
fs
push
fmull
cs
faddl
mov
mul
mov
inc
push
adc
lret
iret
sub
pop
mov
sub
inc
and
clc
mov
adc
pop
and
js
mov
stos
mov
aaa
movsb
or
push
xor
or
sbb
dec
shr
sub
add
lret
ds
xchg
push
mov
jae
xor
cmp
push
jne
out
addb
inc
test
or
sti
mov
fdivrl
pop
pop
mov
jmp
pop
clc
mov
je
rol
insl
cmp
out
or
cli
push
je
scas
push
testl
hlt
mov
sbb
int3
jnp
iret
call
mov
push
stc
sbb
adc
daa
mov
lcall
test
inc
outsb
or
fldenv
push
inc
and
adc
test
xchg
pop
lods
movl
pop
or
ficoms
fsubrs
pop
leave
sbb
push
pop
pop
ret
jg
adc
mov
jp
jl
stc
faddl
mov
dec
shr
xchg
sarl
pop
sbb
push
inc
outsl
jb
xor
lahf
fmul
pop
add
or
mov
inc
aas
adc
adc
dec
out
fiadds
and
scas
lods
dec
dec
cmp
imul
push
push
testb
inc
push
movsb
xorl
mov
xchg
clc
dec
sbb
jmp
fsubrl
push
cmp
mov
pusha
insb
add
dec
xor
adc
and
mov
nop
mov
lret
jmp
imul
mov
push
data16
gs
arpl
or
jo
pop
int3
jmp
lods
shlb
mov
mov
dec
je
dec
jne
ds
addb
sarb
subl
xor
xchg
pop
test
jnp
aas
loope
dec
inc
mov
pusha
dec
pop
ficomps
cmp
jge
nop
cs
nop
dec
or
iret
scas
xor
push
adc
mov
mov
shll
daa
divl
mov
lcall
cltd
xlat
or
push
test
push
or
cmp
test
std
xchg
sbb
jne
push
jmp
and
jmp
lahf
xor
ljmp
pop
stos
cmp
data16
dec
mov
lea
add
sbb
pop
xchg
and
mulb
mov
xlat
out
fs
pop
pop
mov
mov
shll
mov
rcrl
inc
adc
sub
test
lea
faddl
adc
insb
imul
fs
mov
ljmp
mov
add
addr16
rclb
and
ret
adc
sub
stos
std
sbb
push
andb
rcl
xor
mov
adc
movsb
mov
loope
jmp
std
mov
or
mov
andl
or
adc
adc
jne
stos
loop
xchg
jne
mov
mov
clc
add
push
adc
push
in
daa
dec
mov
sub
outsb
mov
or
mov
add
adc
inc
add
les
sub
ret
mov
test
nop
ss
pop
or
jnp
pop
in
mov
stos
loop
pop
pop
dec
jae
or
repz
ficoml
pushf
std
stc
mov
or
fsts
cmpsl
imul
test
push
dec
stos
mov
adc
pop
in
outsl
leave
xor
xor
sbb
cld
or
sbb
pop
lods
shlb
test
add
push
cltd
mov
dec
push
sbb
pop
sub
rorb
mov
mov
push
xchg
jp
cli
pop
mov
test
push
dec
sbb
stos
out
mov
push
lea
push
sahf
stos
das
pop
push
ds
clc
sbb
dec
mov
inc
mov
sub
mov
cmp
push
test
dec
adc
hlt
pusha
jp
mov
push
in
stos
cmp
cltd
jg
cmpsl
xchg
push
or
add
pop
dec
dec
jecxz
clc
cli
xchg
pop
and
clc
std
je
xor
setb
jp
push
stos
and
adc
pop
pop
push
cltd
das
push
cs
sarb
in
and
ret
sbb
jb
adc
mov
dec
cltd
stc
jns
or
and
add
mov
stc
inc
dec
aam
jb
in
pop
jnp
mov
addr16
fisubrs
jecxz
in
das
scas
cmp
jmp
es
mov
xchg
sbb
mov
mov
or
lret
xchg
mov
jno
std
push
into
cwtl
push
jmp
xchg
ds
push
or
lahf
loop
jg
cmp
js
pop
push
adc
pop
mov
jp
scas
cltd
subb
cltd
rolb
js
and
adc
cmp
xor
cmpl
andb
inc
sbb
iret
enter
and
and
lahf
test
mov
jge
imul
outsb
mov
mov
lret
packssdw
xor
lret
mov
lods
loope
inc
jb
nop
push
adc
xchg
movsl
mov
mov
leave
call
sbb
jbe
test
xchg
or
mov
movsl
scas
hlt
pusha
je
sbb
outsb
inc
cli
pop
shrl
or
les
mov
xlat
inc
cmp
xlat
dec
mov
inc
ret
mov
adc
adc
scas
fisubrl
imul
xchg
notb
or
adc
je
push
iret
jo
insl
sbb
inc
es
dec
adc
inc
mov
or
decl
rorb
jne
jmp
nop
ret
inc
xor
or
and
jnp
into
sbb
out
push
cmpsb
cs
dec
mov
leave
mov
rclb
mov
adc
aam
cli
push
inc
pop
adc
and
add
pop
mov
ret
inc
sub
cmp
and
addr16
jbe
pop
mov
adcl
ret
les
movsb
push
push
add
in
js
adc
xchg
dec
adc
push
sub
sub
jae
and
fs
sub
movsl
sub
mov
push
ret
clc
sub
inc
test
xchg
lcall
push
jg
in
gs
mov
cwtl
sub
cmp
inc
push
pop
in
test
pop
push
les
sti
sub
pop
mov
jmp
or
movsb
dec
lea
add
adc
subb
pop
ljmp
adc
adc
ljmp
xchg
cmpsl
sbb
pushf
pop
nop
jne
adc
mov
scas
mov
or
jmp
push
and
fs
arpl
push
mov
ljmp
jmp
jno
sub
push
div
dec
push
push
adc
mov
inc
jg
imul
pop
adc
mov
orl
or
notl
je
inc
mov
mov
mov
pop
movsb
mov
movsl
cmp
push
sub
sbb
adc
test
enter
xor
cmp
or
ffreep
je
popl
mov
jmp
icebp
xchg
adc
mov
sub
sbb
rol
sub
dec
movsb
cltd
inc
movsb
movsb
test
xor
lahf
pop
dec
stos
sub
push
inc
pushf
dec
push
add
pop
les
or
insb
pushf
lret
popf
jle
sets
xchg
stos
sub
daa
cwtl
push
sbb
mov
cwtl
mov
and
inc
dec
inc
je
jl
in
lds
cmpb
fwait
imul
xchg
jno
mov
mov
outsb
sub
shrb
test
lock
or
or
sbb
inc
cmp
adc
scas
sub
mov
fwait
jg
or
popf
xchg
out
fdiv
push
inc
inc
xlat
test
mov
lret
add
xlat
int
lcall
inc
jno
scas
out
inc
mov
test
das
popf
xchg
fsubp
dec
jg
in
shlb
and
dec
push
sub
mov
mov
fwait
sarw
push
in
ret
adc
cmp
ljmp
into
jl
scas
and
inc
fimull
test
sbb
clc
or
loopne
jecxz
shrb
sti
dec
inc
addr16
int3
dec
push
cwtl
dec
pushaw
mov
enter
jg
push
jg
push
and
popf
das
dec
dec
popf
jg
aam
pop
cmc
pop
ss
xchg
pop
lret
loop
popf
push
mov
in
sti
mov
mov
lods
inc
loop
add
lods
or
mov
pop
in
sbb
ja
pop
or
cmp
pushl
dec
cwtl
and
xor
push
sub
jne
out
cmpsl
cmp
sbb
fs
cs
mov
mov
fcoms
jbe
fst
cltd
pop
iret
nop
sarb
gs
not
cmp
inc
xchg
js
xor
push
inc
rorb
aas
nop
push
xor
or
add
cmp
xor
lods
mov
leave
jg
in
cmp
adc
pop
in
sub
imull
sbb
sbb
or
clc
cli
pop
lock
dec
test
cmpsl
js
out
movaps
pop
jl
orl
fs
inc
push
mov
repnz
mov
roll
push
sub
adc
or
lcall
jo
fcomps
or
shl
jmp
or
add
xchg
xchg
ficoml
and
sbb
pusha
cwtl
popf
mov
inc
lods
dec
adc
les
adc
sti
loope
adc
push
jne
and
out
icebp
fistps
pop
sub
movsl
sti
enter
insl
das
leave
cld
ja
pop
fxch
sbb
sub
ret
aaa
cmpb
repnz
stos
adc
and
adc
pop
push
dec
mov
sub
xlat
jno
out
jmp
jo
ret
jns
cmp
push
cltd
enter
jp
adc
mov
xlat
scas
sahf
mov
imul
jle
jb
mov
sbb
xchg
aam
dec
mov
push
or
ret
mov
fldcw
mov
jmp
and
adc
mov
lret
mov
adc
jle
cmp
and
fs
bound
fs
scas
mov
or
adc
pslld
and
nop
cmp
adc
lods
push
cmpsl
sub
xchg
mov
mov
aam
mov
pop
pushf
adc
or
push
aad
std
rclb
jae
shrl
pushf
pop
xor
mov
dec
xlat
lret
shlb
mov
loope
insb
inc
xchg
dec
xchg
cld
mov
mov
push
sbb
jo
mov
aaa
inc
adc
xchg
icebp
pop
pop
sti
mov
push
shlb
adc
dec
ja
mov
movsl
jg
int3
outsl
or
or
lds
add
adc
dec
lods
sar
shl
xor
cmp
add
jecxz
xchg
pop
decl
outsb
pop
jl
out
nop
dec
lods
adc
sub
xor
aaa
xchg
sbb
lea
sbb
decl
test
ret
in
push
lea
ficoms
ficoml
inc
push
xor
cli
sub
cmp
xchg
sbb
push
pop
jb
push
add
fisubrl
dec
jg
lods
roll
int3
add
cmpsl
jne
sbb
icebp
mov
nop
repnz
jns
imul
punpckldq
pop
and
xor
ja
js
pop
inc
fimull
or
pusha
das
punpckhdq
cmpsl
sbb
js
pop
xchg
mov
fs
push
rorl
repz
or
mov
xchg
pop
cmp
jne
test
mov
xor
mov
push
inc
int3
cli
pop
lds
stos
dec
or
pop
sub
jle
sub
cld
mov
adc
sub
or
orps
ror
out
pop
jmp
ljmp
adc
pop
out
sub
sub
push
cmp
cmp
sub
icebp
dec
jmp
xchg
clc
test
repz
nop
cld
push
pop
mov
push
je
fimuls
mov
int3
mov
je
dec
jae
jmp
movsl
call
popf
rcrl
sub
and
lcall
push
or
cmp
pop
rorb
xor
test
jl
mov
ljmp
ret
fucomip
std
mov
lock
test
sahf
inc
cmpw
testb
xchg
mov
imul
jp
ljmp
dec
negl
mov
inc
test
lea
sub
and
cwtl
sub
scas
inc
test
lock
ds
jae
ljmp
in
and
and
add
je
outsb
cmp
dec
jne
mov
es
jp
aas
pop
jmp
push
xchg
sbb
inc
loopne
pop
sbb
pop
and
jmp
cmp
jne
test
incl
aad
in
inc
push
hlt
das
mov
or
repz
dec
or
fisubl
and
cltd
inc
jne
add
add
and
and
add
push
pop
nop
xor
decl
push
add
jge
mov
test
dec
addr16
jl
js
xor
dec
pop
scas
repnz
subb
pop
mov
shll
inc
adc
add
cmpsl
movsb
and
mov
mov
adc
or
js
sub
pop
daa
xor
jne
push
pop
lods
xchg
or
dec
orb
clc
adc
inc
xchg
es
push
cmp
push
push
and
sub
mov
test
es
push
fmull
ds
pop
or
sbb
lret
add
and
or
sub
out
sub
or
xchg
jl
xchg
fsubl
jecxz
sbb
add
cltd
add
jge
jo
lds
cltd
sbb
in
xor
push
mov
cmc
push
dec
mov
sub
pusha
sub
sub
mov
mov
mov
mov
in
rcrb
loope
subb
sub
dec
cmp
clc
adc
adc
jecxz
push
adc
mov
mov
cld
inc
mov
xlat
add
push
into
in
fmul
call
mov
and
and
push
cwtl
pop
cmp
dec
movsl
iret
fstpl
pop
jbe
xor
push
or
jo
cmp
lahf
push
sub
pop
inc
lods
sub
inc
out
nop
jp
mov
pushf
adc
scas
mov
push
insb
inc
int3
ljmp
mov
in
loopne
int3
or
cmp
aas
inc
ficompl
js
mov
mov
xchg
negb
jmp
push
sbb
add
mov
jne
lods
push
test
fs
mov
in
push
inc
je
sbb
lea
lods
inc
and
aam
jnp
popf
mov
jmp
and
sahf
dec
xchg
in
cmp
sbb
out
adc
ret
inc
or
aad
mov
push
outsl
cld
lock
jb
loopne
fcomps
cmp
call
loopne
loopne
cmc
xchg
dec
xor
pusha
mov
adc
lret
repnz
dec
mov
imul
cmp
and
int3
into
pop
inc
sub
jecxz
cmc
push
insl
jno
je
and
adc
testb
push
push
scas
inc
sub
or
xor
or
mov
or
enter
dec
pusha
iret
shlb
clc
adc
dec
dec
testb
inc
pop
sub
xor
cs
push
sub
push
fistps
sub
aas
mov
pop
xchg
or
clc
mov
ljmp
add
push
lock
push
data16
sub
mov
dec
adc
fdivs
fwait
mov
call
pop
cwtl
xchg
pop
pop
xchg
testl
ds
lea
jnp
enter
incl
pop
dec
jne
lret
inc
xor
repz
aad
or
mov
mov
fcoml
movsb
cld
imul
mov
fwait
aad
test
dec
clc
popa
cltd
push
fsubr
add
cmp
out
insb
adc
out
shrb
cmpsl
push
fldcw
push
pop
pop
js
dec
xlat
repnz
sub
push
mov
mov
push
push
cli
insb
nop
subb
out
jp
aaa
imul
and
or
mov
cltd
inc
or
lods
fcomps
dec
or
mov
xchg
dec
jno
fs
andb
movsb
jbe
xor
stos
out
das
insb
popf
enter
fldpi
dec
or
paddb
fs
rcll
lcall
adc
mov
mov
mov
cmp
sub
add
mov
idiv
mov
and
adc
scas
adc
and
movsl
mov
imul
fisubrl
jge
lret
lods
in
pop
aaa
mov
or
dec
loop
rcll
loope
fcmovbe
jnp
or
or
adc
aad
and
movsb
and
lret
mov
popf
std
cltd
test
shll
out
negl
xor
pop
xchg
adc
jmp
xor
mov
test
ucomiss
stos
lea
mov
sbb
and
ja
pop
xchg
or
es
pop
lock
lahf
push
dec
out
mov
inc
movsl
push
cmpsl
sbb
dec
jno
add
xor
scas
mov
inc
jne
fists
sbb
jbe
jnp
lock
aam
lds
vpcmpgtd
sub
add
daa
sbb
pop
lods
in
adc
sbb
push
fmul
push
sbb
test
pop
test
mov
pop
adc
into
enter
dec
sbb
pop
mov
pop
and
and
setp
push
shr
dec
adc
push
bswap
pop
add
imul
jl
push
jg
and
dec
sub
sarl
ret
xchg
or
popa
js
test
enter
or
es
xor
jne
push
mov
enter
inc
mov
mov
mov
es
and
add
call
mov
sub
dec
adc
pusha
mov
mov
bound
or
aaa
sub
and
or
xor
inc
gs
sub
inc
outsb
sbb
mov
xor
pop
lods
rol
push
orb
clc
bound
mov
das
insb
mov
dec
inc
and
mov
jns
adc
mov
shl
pop
jne
lcall
ljmp
loopne
enter
sbb
jle
or
daa
loop
dec
sub
ja
repz
cmc
and
push
sbb
or
mov
mov
pop
in
sub
push
push
insl
sub
mov
loop
pop
mov
mov
flds
pushf
or
and
nop
subb
sub
xor
or
inc
je
adc
xchg
dec
cmp
loope
outsb
and
popf
xor
mov
test
icebp
or
test
dec
outsl
lret
mov
adc
mov
cmp
mov
xor
or
mov
jmp
icebp
xchg
add
repz
pop
sub
mov
cmp
mov
mov
add
pop
movlps
push
adc
cwtl
mov
push
lock
mov
mov
call
into
lea
push
inc
into
inc
mov
adc
adc
jg
push
jmp
add
push
aaa
jmp
push
decl
clc
cmp
test
xor
add
sub
scas
sub
jb
mov
sbb
sbb
dec
jge
add
or
xchg
xor
mov
pop
movsb
pop
vminss
jge
push
or
mov
test
inc
fldcw
add
clc
rolb
push
notl
pop
dec
sub
shrb
inc
sub
in
pop
dec
pop
mov
sbb
sub
mov
mov
test
xor
dec
push
ljmp
xchg
sbb
or
sbb
sbbl
insb
mov
adc
pop
push
inc
xor
lock
sbb
imul
dec
mov
or
or
mov
sbb
xchg
push
lahf
scas
adc
es
push
cmp
sub
dec
xchg
popa
test
mov
fs
rorb
lock
jae
aam
or
xchg
lea
push
out
push
pop
and
cwtl
lods
xor
or
or
call
mov
fidivrl
cmp
dec
dec
dec
cmc
lcall
sar
xchg
ljmp
sub
pusha
out
rcll
sub
mov
or
and
imul
push
fwait
cs
push
pop
jmp
lcall
ds
inc
xor
into
or
xchg
cli
jecxz
pop
in
sub
jg
add
sub
adc
test
mov
jne
jne
insl
das
dec
shll
cmp
rclb
sub
sub
daa
push
or
sti
cli
xchg
push
or
icebp
cmpb
idivl
ljmp
aad
mov
mov
adc
and
pusha
shrl
xchg
es
add
inc
xor
fstl
inc
inc
lods
fstp
cmpsl
les
add
inc
dec
out
mov
outsl
test
or
pop
out
dec
mov
dec
adc
jo
add
hlt
xor
test
dec
rclb
call
mov
cmp
mov
push
mov
adc
paddusw
lret
mov
enter
scas
xor
add
mov
movsl
jne
sub
icebp
and
fcoms
rorl
sub
lea
sahf
mov
push
mov
adcl
xchg
mov
adc
adc
test
call
rorb
out
mov
cli
mov
mov
xor
sub
testb
adc
mov
mov
pop
jge
xchg
xchg
inc
addb
imul
das
rorb
add
imul
mov
cmp
filds
cmpsl
out
out
jo
or
add
sub
sub
dec
ret
adc
push
and
inc
inc
dec
sarb
dec
arpl
pop
les
dec
sbb
sub
cld
sbb
mov
pop
rcrb
push
sub
push
je
scas
add
dec
loopne
inc
cmp
call
sub
push
les
mov
rcll
enter
das
mov
push
inc
call
push
adc
push
in
mov
pop
rcrb
es
dec
mov
cs
adc
or
nop
or
add
mov
adcl
pop
adc
push
imul
pop
popf
call
jmp
and
mov
xchg
jne
sub
xchg
outsb
push
aas
and
jnp
jbe
popa
pop
mov
mov
cwtl
mov
in
movsl
jg
jmp
gs
mov
pushl
inc
test
jp
cmp
jnp
fs
int
jp
jmp
orl
mov
jbe
cli
dec
or
jb
les
mov
or
fwait
ret
xchg
lahf
loope
add
or
test
lcall
lret
imul
adc
mov
scas
xchg
cmp
inc
add
adc
pop
aam
cmc
cltd
in
and
jbe
jb
pop
or
call
les
das
mov
enter
jg
rcll
mov
test
dec
add
sub
sbb
cmp
add
data16
clc
leave
jno
inc
aam
lods
jg
mov
sarb
dec
push
jbe
daa
out
xchg
loope
mov
mov
adc
mov
in
lods
movsb
enter
ret
pop
sahf
gs
xchg
imul
lods
mov
movsl
push
ja
inc
push
or
imull
test
int
decb
cmpsb
data16
imul
xchg
fcoms
test
sbb
add
xchg
push
enter
cld
ret
movsb
mov
call
inc
lock
repz
jne
or
test
fdivrs
mov
jno
imul
adc
aas
or
push
dec
and
jmp
sub
dec
loop
shll
and
mov
push
or
mov
xlat
sbb
adc
test
outsb
push
sub
sub
or
mov
jnp
imul
push
push
int3
add
dec
push
adc
sbb
cmpsl
or
xor
mov
les
xchg
out
lods
mov
mov
xchg
mov
push
loope
cmp
nop
test
or
fadd
adc
add
jle
cmpl
or
sbbl
scas
pop
pushf
mov
adc
push
sbb
movsl
jg
imul
mov
pop
test
sub
pop
add
pop
sbb
divl
int3
pushf
int
shrb
inc
lret
add
lea
sbb
sbb
adc
pop
negb
push
sub
add
pop
fs
leave
lea
xchg
push
or
pop
cmp
prefetcht0
imul
push
mov
add
push
xchg
leave
cmpsl
add
adc
add
dec
sub
out
push
aaa
dec
stc
push
and
xchg
xor
xchg
mov
and
inc
dec
cmp
add
movsl
cmc
sbb
movsb
mov
ja
lea
xchg
ret
or
or
negb
push
sahf
imul
icebp
xor
ret
outsb
pop
or
add
adc
andb
jge
rorb
adc
or
sbb
sbb
push
xchg
xchg
xchg
cmpsb
das
sbb
mov
jl
jmp
lea
mov
jns
iret
loop
loop
cmp
push
mov
test
mov
xchg
add
movb
lret
mov
push
test
xor
and
ret
sub
jb
inc
pop
je
jmp
push
mov
push
leave
insb
mov
adc
andl
jg
mov
cmp
in
pusha
push
mov
push
mov
cltd
sbb
add
xchg
aaa
cmp
xor
leave
xlat
inc
xchg
and
adc
je
dec
mov
dec
jae
clc
repnz
sti
lret
inc
fcoms
xchg
daa
imul
lret
insb
add
push
jecxz
clc
test
out
pop
test
pop
stos
mov
adc
enter
dec
push
addr16
out
inc
dec
clc
cltd
or
mov
movsl
ror
fs
mov
shll
mov
xorb
cmp
xor
push
add
or
aad
in
push
sbb
cmp
sub
mov
cmp
das
arpl
and
push
dec
pop
sarl
pop
rcrb
sbb
and
sbb
mov
add
mov
push
sti
mov
xchg
vcmpps
inc
pop
dec
nop
inc
push
test
pop
and
das
push
mov
iret
mov
insb
jbe
leave
fadds
dec
add
xor
xchg
popa
mov
leave
outsb
sub
jmp
inc
dec
sbb
lea
filds
fmull
and
and
repz
andl
ja
cs
xchg
scas
push
stc
jae
mov
or
xor
lock
or
rorb
dec
add
ja
pop
or
test
mov
popa
js
cmp
or
ss
or
cmp
mov
cmp
push
ss
loop
sub
aam
sub
pop
adc
jge
or
push
scas
jb
adc
mov
cmp
scas
aam
pop
sbb
popa
das
frstor
mov
in
xor
lahf
cwtl
mov
jae
daa
dec
xchg
fldl
or
pop
inc
pop
mov
inc
sub
mov
dec
adc
pop
push
xchg
pop
adc
mov
mov
and
or
shl
and
sub
pushf
ret
mov
cmp
jecxz
xor
sub
testb
je
xchg
cmp
in
lret
jp
rorb
add
gs
adc
jno
inc
xor
test
lcall
shl
sub
sbb
js
mov
xchg
aas
sub
mov
jle
sub
cltd
call
inc
es
lahf
sbb
or
push
jecxz
jmp
cmp
push
push
push
dec
adc
pop
adc
push
mov
inc
mov
cmc
and
mov
mov
nop
jp
nop
negb
hlt
hlt
rorl
or
sti
xchg
inc
cld
jle
dec
int
push
jg
aad
pop
xor
shl
or
mov
or
mov
jle
leave
xorb
sub
mov
inc
mov
pop
push
fdivrl
pop
lds
dec
pop
sub
mov
xlat
xor
adc
or
test
xlat
lret
repz
mov
popf
push
push
pop
dec
mov
mov
mov
dec
jge
add
aam
rorb
lods
jne
cmp
and
pop
lea
push
pop
mov
mov
push
call
outsb
dec
sbb
ror
aad
fildll
xchg
jne
push
bound
rclb
dec
sub
cmp
xor
notb
cli
mov
outsb
ss
sub
xor
cmp
pusha
loop
lods
jle
sbb
sahf
clc
dec
mov
movb
sub
cmp
add
test
xor
push
aad
inc
push
jge
push
xchg
clc
xchg
add
or
dec
mov
cltd
jmp
in
inc
xchg
scas
cmp
lea
and
jo
mov
or
pop
es
rclb
jmp
and
dec
dec
in
and
jecxz
je
pop
xor
pop
sahf
in
faddl
stos
mov
mov
or
test
stos
xor
cwtl
push
mov
cmpsl
pop
in
and
test
pop
push
rorb
mov
xchg
mov
mov
imul
push
dec
sub
add
daa
mov
aas
xchg
jo
or
popa
loopne
add
pop
and
imul
jbe
outsb
fcoms
pop
dec
jecxz
js
or
inc
andl
and
or
out
ret
icebp
add
jne
mov
mov
add
mov
cmp
lahf
insb
and
outsl
adcl
scas
pop
outsl
sub
adc
jmp
sub
push
popa
je
gs
mov
adc
pushf
jmp
xchg
je
jbe
pop
stos
fbld
loope
lods
xor
adc
hlt
stos
repnz
repnz
cmp
jne
ljmp
push
stc
ss
mov
mov
xor
pop
push
not
loope
les
inc
xchg
and
in
sub
adc
ja
ret
mov
inc
popf
jne
pusha
xorb
lock
xor
aad
push
mov
sub
les
xor
stos
pop
pop
in
mov
sbb
adc
jl
cld
inc
and
xor
push
cli
pop
push
hlt
lods
xchg
inc
xchg
loopne,pn
fistl
pop
cmpb
sbbl
incb
and
jg
push
inc
cmp
mov
std
movl
jne
inc
cltd
decb
pop
mov
imul
adc
popf
inc
pusha
lahf
or
mov
dec
hlt
mov
sbb
xchg
pop
shll
push
inc
jge
arpl
int
repz
adc
cwtl
mov
jmp
adc
and
ret
pop
or
shlb
xor
outsl
ljmp
icebp
push
and
xor
push
mov
fwait
xchg
adc
xor
in
jb
loopne
or
or
or
arpl
call
cmp
add
dec
aaa
push
mov
adc
adc
xor
ss
cli
sahf
les
cwtl
push
in
loopne
hlt
sub
pop
imul
pop
lds
or
sarl
or
data16
push
mov
dec
push
fcmovb
inc
test
xchg
lock
adc
in
jbe
hlt
lds
inc
adc
dec
mov
in
push
adc
pop
sbb
adc
mov
add
test
or
sbb
or
rorb
cld
faddl
jl
scas
loopne
sub
jecxz
enter
hlt
adc
inc
adc
jno
pop
adc
lcall
dec
or
outsl
hlt
mov
jg
movsb
inc
push
fiaddl
xchg
int3
adc
stos
xchg
xchg
scas
popa
aam
fstps
mov
test
les
into
mov
and
push
push
je
popa
arpl
jge
je
jne
or
fcmovu
jns
bound
enter
loope
jle
push
xchg
or
sti
add
or
das
stos
xor
pop
pop
stos
xor
or
jmp
mov
cmc
pop
sub
fndisi(8087
inc
add
test
mov
in
stc
dec
and
jae
aad
pop
pop
mov
lea
cs
je
scas
fstps
outsl
in
sub
mov
clc
shr
fiaddl
and
and
jne
push
inc
pop
fsubs
je
push
sbb
pop
loopne
addr16
ret
add
insl
xor
cs
imul
or
jmp
sub
sbb
cmpsb
lret
inc
add
or
adc
mov
fcomps
dec
adc
pushf
and
mov
sbb
sbb
mov
and
or
push
leave
and
call
in
add
jo
or
cld
mov
in
jb
cmp
sbb
mov
and
xchg
fmul
aam
shlb
cmp
or
cmp
dec
cmp
addr16
ret
push
push
cld
pop
movsl
push
ss
and
xchg
loopnew
imul
adc
sbb
and
adc
shlb
fs
sub
sub
mov
pop
test
fsubrl
lods
sbb
dec
ja
push
jmp
fbstp
xchg
outsb
or
mov
lock
push
jle
jno
cmp
inc
push
push
xchg
ror
adc
cli
sub
push
test
push
and
repnz
adc
and
sbb
adc
push
cld
jle
pop
mov
sbb
mov
sbb
inc
pop
mov
jbe
sbb
and
enter
dec
loopne
fmull
es
frstor
pushf
mov
adc
push
inc
cmp
sub
mov
dec
xchg
cmp
xchg
mov
in
imul
call
sub
cwtl
dec
inc
lock
fs
shll
mov
popa
loope
inc
rcl
imul
rorb
pop
cs
sub
mov
add
in
mov
cs
nop
mov
iret
insb
outsl
test
mov
and
ss
call
outsl
shrb
sbb
inc
es
mov
adc
adc
adc
scas
push
push
xor
add
les
cmp
adc
rorl
dec
add
dec
adc
adc
dec
cmp
pop
adc
clc
test
adc
clc
cmp
jge
mov
mov
or
mov
mov
adc
and
push
pop
or
or
pop
adc
leave
or
push
inc
or
rcrb
or
add
or
jle
or
jae
mov
adc
dec
adc
adc
mov
sbb
pushf
rol
jecxz
inc
cld
test
aam
bnd
arpl
ja
push
jge
mov
dec
and
jne
add
and
and
sub
mov
xchg
adc
mov
shrl
mov
pop
or
sub
mov
cmp
and
scas
sets
testl
add
mov
lds
out
mov
stos
cltd
xor
mov
inc
mov
jb
cld
cwtl
push
inc
mov
lds
dec
scas
or
or
ljmp
or
mov
dec
ret
ljmp
dec
mov
jmp
push
add
mov
outsb
enter
shrb
adc
insl
dec
leave
adc
sub
fists
lea
test
adc
mov
sbb
or
mov
xor
dec
add
les
iret
push
jle
movsl
push
push
pop
mov
jl
jl
push
add
inc
add
add
adc
pop
mov
pop
adc
das
clc
dec
pop
enter
xchg
and
xor
mov
adc
sbb
or
push
call
adc
mov
mov
clc
insl
inc
imul
data16
dec
and
iret
aam
push
push
gs
clc
ljmp
sbb
xchg
aad
mov
in
mov
xchg
xchg
sub
xchg
xor
enter
or
fbld
push
sbb
xchg
sub
cmp
and
mov
sub
inc
call
imul
movsl
shlb
and
lds
or
sahf
or
xor
ret
movsb
out
call
outsl
push
rclb
subl
in
adcl
sub
adc
repz
js
xor
andb
add
push
or
add
push
sbb
jle
leave
jne
cli
mov
and
pusha
ds
jb
sub
orl
add
mov
fistl
and
push
dec
inc
push
pop
aam
xor
inc
sbb
add
jl
mov
shlb
dec
aam
inc
adc
and
enter
test
mov
aam
aas
and
aaa
push
cs
inc
pop
adc
mov
push
adc
lds
fisubrl
test
test
lds
in
fsubrp
leave
mov
rolb
clc
movsb
or
mov
leave
clc
xchg
or
adc
or
inc
push
aas
mov
push
mov
loopne
jge
jbe
pop
xor
push
push
imul
and
fdivs
pop
in
loop
addb
insl
inc
add
jo
popa
jns
cmp
and
mov
movl
and
sub
adc
push
out
sbb
mov
nop
inc
call
jmp
inc
push
mov
addr16
clc
and
jns
sub
test
jns
ja
in
xchg
pushf
rclb
inc
and
insb
sub
cmp
xor
or
insb
jo
or
and
xchg
cld
cmpxchg
pop
shll
mov
lods
sub
or
pop
dec
les
data16
sub
xorb
xchg
ss
fs
dec
call
inc
jne
outsl
push
insl
sbb
imul
mov
bound
and
dec
inc
js
outsb
fs
mov
data16
add
pusha
inc
cmp
roll
cs
mov
test
in
jnp
add
sub
lods
in
data16
pop
add
and
stc
in
cmpsl
inc
jge
and
inc
inc
imul
jl
idivl
clc
sbb
test
sub
xchg
fs
pop
xor
cmpsl
push
adc
and
jmp
add
dec
push
sub
dec
outsl
and
or
repz
adc
or
dec
xlat
inc
lods
loopne
push
or
mov
dec
inc
aam
loope
or
inc
adc
call
push
cmp
mov
xlat
xor
or
and
dec
mov
mov
sbb
int3
and
or
mov
adc
es
xor
out
popf
jbe
push
inc
lds
cmp
sbb
movsb
sbb
inc
shll
int3
adc
cmp
inc
jmp
jo
and
adc
lods
adc
adc
repnz
cmc
imul
pop
jb
sub
clc
leave
pop
rorl
fbstp
fcmovb
adc
cmpl
test
out
or
push
mov
jg
jp
test
loopne
jne
or
push
rcrb
loopne
mov
xchg
fstpl
jecxz
jmp
test
test
rorb
lds
sti
mov
or
inc
sbb
cmpsl
outsb
fidivs
inc
loopne
lea
das
mov
mov
mov
cwtl
leave
jo
insl
lea
adc
sbb
pop
imul
fstl
cli
fstl
cmpsl
pop
inc
push
test
icebp
inc
jno
iret
mov
sbb
pop
xchg
sbb
and
adc
jmp
sarb
hlt
dec
gs
loop
fdiv
dec
jge
lcall
mov
fldl
pop
ds
hlt
stc
out
sbb
jmp
fidivl
icebp
or
int
and
stos
ja
add
mov
xchg
ret
and
mov
repz
lods
outsb
pop
inc
repz
fistpll
shl
dec
jg
adc
mov
je
int3
or
in
mov
inc
sbb
testb
dec
sub
inc
dec
jne
cld
cmpb
sti
daa
jge
xor
addl
jne
stos
lods
add
inc
mov
cmp
sbb
rcrl
sbb
out
outsl
mov
jae
test
sub
fnstsw
adc
mov
adc
xor
rorb
imul
jo
mov
jne
jge
repnz
or
lahf
inc
cmp
push
jge
lahf
inc
sbb
mov
outsb
adc
adc
sub
aam
repz
mov
pop
push
push
adc
pop
sbb
sbb
or
aam
imul
lret
lods
test
repz
bnd
push
bound
fists
out
sub
fldl
xchg
push
addl
hlt
cmc
push
cli
inc
out
dec
jne
push
fistpl
mov
loop
jmpw
in
je
mov
jo
mov
in
into
mov
andb
imul
or
adc
hlt
pop
ficompl
xlat
adc
fnstsw
in
sbb
stos
loop
xchg
cli
push
inc
xor
loopne
fnstcw
notl
jb
push
and
shll
adc
mov
adc
xchg
leave
mov
daa
xor
fisubl
imul
inc
fs
sub
pusha
ret
in
fadds
mov
mov
or
pop
pushl
lea
and
adc
das
imul
cmp
adc
lcall
fdivl
sbb
shlb
call
sbb
lret
push
es
jecxz
cmp
cli
out
lcall
dec
cltd
inc
imul
xor
in
orb
fsubs
in
cmp
mov
sub
out
mov
and
pop
es
clc
pop
mov
outsl
leave
push
xor
or
sub
imul
hlt
mov
adc
psubusw
lock
out
dec
pop
popl
jo
scas
int
sub
mov
int3
or
sub
fwait
adc
insl
popa
and
daa
inc
push
inc
imul
stos
lret
mov
leave
in
pop
xor
scas
pop
ja
push
and
mov
and
push
jg
jno
mov
es
sub
and
stc
lock
mov
sub
clc
insb
mov
in
mov
jmp
adc
xor
pop
sbb
jg
xchg
pop
pop
push
test
stc
cmc
int3
js
xchg
or
ret
sbb
and
xorb
inc
inc
add
or
adc
jb
and
mov
mov
sub
jnp
pop
pop
cld
xchg
int
sub
xchg
int
or
lcall
and
cli
mov
push
shl
sbb
cld
mov
movb
dec
je
inc
add
xor
mov
out
and
sbb
fsubrl
add
jecxz
mov
sub
and
cli
negl
mov
mov
inc
mov
adc
pop
test
and
add
js
jne
lcall
sbb
fbld
ss
push
jg
movsl
fcompl
cmpl
inc
gs
je
jp
cwtl
pop
test
or
jo
jns
jne
mov
cmp
cli
adc
mov
insb
mov
sub
les
cmp
mov
mov
test
in
loopne
in
sub
scas
js
sbb
je
mov
or
adc
mov
mov
xchg
push
sub
mov
lods
std
cmp
test
mov
mov
leave
sub
cmp
or
adc
or
xchg
je
cld
jno
or
xchg
mov
xor
mov
je
mov
cmpsl
and
pop
call
test
pop
lea
rorb
and
fs
inc
js
adc
lahf
mov
adc
sbb
sub
adcl
gs
pop
xchg
push
loop
xor
sub
or
pop
mov
xlat
xlat
leave
js
lcall
aas
adc
incl
xor
push
test
push
jmp
mov
inc
jae
mov
mov
inc
into
mov
inc
decb
clc
push
jo
sub
in
inc
dec
pop
dec
fidivrs
int3
pusha
inc
add
pop
aam
fcomps
fmull
push
push
push
jns
outsb
arpl
dec
mov
fs
les
mov
jmp
xchg
or
push
adc
hlt
arpl
cmc
adc
into
fldenv
mov
jg
mov
dec
popa
jmp
arpl
in
les
cmp
adc
lods
popf
roll
test
add
jl
mov
jp
and
lock
sub
dec
inc
jp
jle
push
or
xchg
or
cltd
test
mov
mov
bound
mov
mov
nop
mov
and
les
mov
inc
mov
mov
adc
mov
int3
shlb
aam
fmuls
in
call
xor
sbb
mov
jo
fsts
pop
and
adc
adc
adc
sbb
sbb
and
sub
xor
xor
cmp
cmp
inc
xchg
movsl
test
out
stos
mov
je
and
or
mov
inc
add
xor
adc
mov
inc
adc
mov
mov
push
test
mov
test
mov
movsb
inc
mov
movsb
and
inc
test
js
lods
or
lea
mov
adc
cmp
test
mov
test
mov
inc
jo
les
nop
push
mov
inc
mov
aam
inc
mov
push
pushf
mov
adc
xchg
in
and
inc
lock
hlt
and
clc
and
cld
and
jp
mov
and
pushf
cmpsl
enter
or
inc
mov
push
and
adc
mov
and
or
jns
or
lea
ret
inc
sub
pop
xor
xor
je
xor
mov
cmp
test
cmp
les
inc
insb
leave
xchg
push
gs
sub
sbb
push
push
push
add
je
gs
xchg
xacquire
dec
jo
outsb
push
push
das
push
mov
inc
insb
outsl
jae
dec
adc
jb
ja
lods
add
dec
adc
and
scas
adc
and
push
popa
jb
push
repz
adc
inc
mov
adc
fnstsw
cli
mov
jo
dec
fistpll
push
jae
in
mov
sti
cmp
inc
adc
dec
arpl
aam
mov
shlb
clc
fs
adc
inc
and
sahf
xchg
lea
rcrb
inc
int3
xchg
stos
xchg
clc
sub
adc
xor
cmp
outsl
shll
movsl
call
roll
jmp
sub
xchg
adc
inc
xor
stos
test
adc
adc
movsl
addr16
ljmp
push
adc
dec
lea
dec
stos
xor
adc
push
in
popa
les
sub
pop
adc
stos
push
xor
movsb
xor
sub
adc
inc
adc
mov
loope
mov
adc
push
inc
rcl
icebp
es
addr16
xchg
adc
hlt
prefetchnta
sub
mov
and
jae
imul
jle
adc
pop
dec
popa
rcrb
jne
xor
jno
test
push
xor
scas
movsb
cmp
cli
xorl
pop
adcl
xchg
mov
add
mov
test
rorl
push
and
mov
push
jg
mov
adc
inc
cmc
ljmp
jae
andb
call
inc
jo
xchg
in
repz
cwtl
or
cld
jno
dec
cmp
pop
inc
shrb
and
jmp
xor
or
sbb
xchg
les
inc
or
pop
cmp
pusha
shr
sub
pusha
nop
xchg
dec
enter
push
inc
mov
loope
in
push
aaa
fnsave
sub
ret
roll
scas
jae
mov
das
adc
xchg
test
jo
push
inc
pop
insb
adc
sub
imul
fs
xor
mov
pusha
or
push
sub
add
sbb
or
inc
nop
xchg
and
jne
pop
outsl
mov
icebp
lret
bound
mov
shlb
movsl
xor
pushf
rolb
cmpsb
or
sbb
xchg
pusha
inc
or
nop
or
inc
cmp
mov
xor
jns
je
orb
je
fdivs
xchg
xor
sub
inc
sbb
data16
pop
sbb
xor
sbb
pop
sub
or
sbb
inc
sbb
inc
sbb
mov
mov
or
les
in
das
or
jns
int3
adc
and
sbb
mov
data16
je
imul
xchg
add
add
dec
sub
inc
enter
and
inc
push
or
jae
inc
les
lods
pop
lods
adc
cmp
shlb
adc
in
xor
ljmp
add
inc
cwtl
insl
aaa
pusha
cmp
dec
and
add
push
lcall
mov
jmp
outsb
repnz
mov
inc
mov
outsl
in
pop
test
add
aam
cmc
ja
sub
mov
scas
das
add
inc
hlt
jle
push
mov
shll
loopne
lahf
in
adc
cmp
cmpl
je
jle
andb
adc
inc
cwtl
xchg
push
pop
sbbb
mov
dec
rol
fisttpl
xchg
cmp
pop
sbb
jg
push
lds
inc
xor
shlb
popf
or
jae
test
dec
mov
cwtl
movsb
mov
sti
sub
and
xchg
mov
push
pop
jge
insb
scas
imul
push
pop
xchg
mov
mov
fsubs
inc
out
pop
mov
dec
push
test
ret
cmp
ja
xor
lcall
cmpsl
jbe
fs
sarl
rorb
push
jmp
sbb
adc
and
adc
and
mov
adc
jge
daa
and
inc
mov
push
xchg
shrl
or
inc
fnclex
fldcw
xchg
inc
or
jae
mov
mov
xor
cwtl
cmpl
out
and
fldcw
clc
mov
jno
adc
push
add
dec
push
sti
adc
xor
mov
lea
inc
mov
inc
inc
cmp
push
jne
sub
popa
popa
push
push
imul
xchg
xchg
add
xlat
sbbb
out
insb
or
xor
adc
lods
adc
cld
inc
mov
inc
jae
push
or
dec
arpl
cmp
sub
arpl
sbb
sbb
xor
sbb
xor
sbb
sub
add
movsb
and
xor
cltd
xor
imul
inc
arpl
or
sub
fisttps
sbb
and
addl
insb
xchg
cmp
dec
sbb
xor
imul
adc
mov
int3
push
int
dec
inc
lods
outsl
cmp
and
or
cmp
sbb
add
clc
add
inc
add
sub
push
in
push
sbb
jo
mov
add
cmpsb
enter
pop
addl
mov
fwait
sub
add
or
dec
gs
popa
addr16
xlat
dec
mov
adc
xchg
loop
outsb
in
cmp
cwtl
adc
jae
add
add
and
push
lea
xchg
mov
adc
adc
jl
je
push
scas
cmpsb
insl
div
mov
outsb
in
pop
lods
sub
mov
and
add
adc
jno
sub
pop
cmp
or
xchg
mov
dec
push
push
add
adc
push
xor
repnz
rorb
scas
mov
imul
loope
adc
leave
decl
or
jge
mov
in
cmp
push
push
adc
scas
popa
icebp
call
icebp
nop
sbb
shrb
out
adc
push
sbb
adc
sbb
sbb
xor
jle
dec
shll
cmc
mov
outsb
mov
sar
sub
shl
jo
adc
pop
cmp
or
inc
dec
and
jns
movsl
bound
jae
jge
push
dec
mov
push
and
or
adc
ljmp
cmp
and
sub
jg
lret
mov
xor
pusha
xchg
add
clc
dec
inc
mov
jnp
jae
mov
loop,pn
test
inc
pop
je
test
loope
xorb
add
ret
and
and
mov
out
inc
dec
jne
mov
int
mov
sti
int3
push
sbb
pop
cmp
or
cwtl
or
nop
rcl
bound
push
and
cltd
sbb
lods
adc
movsl
or
or
xor
add
and
lods
and
fmuls
xchg
jle
inc
mov
nop
or
and
and
dec
or
lock
shl
leave
pop
pop
push
and
lahf
push
mov
xchg
es
adc
and
cs
mov
gs
mov
pop
or
pop
dec
stos
sub
jnp
lahf
arpl
push
cs
bound
inc
push
mov
xor
inc
gs
inc
insb
mov
out
addr16
lds
andb
inc
add
jmp
test
clc
cmp
xchg
sbbl
push
sti
sahf
dec
ret
push
pop
or
or
adc
add
xor
push
sti
cs
xor
jo
add
inc
and
sbb
or
hlt
pop
add
daa
movb
das
xor
xchg
sbb
dec
les
xchg
xor
push
movsb
push
mov
add
scas
adc
cmp
mov
push
scas
or
mov
test
inc
cmp
emms
pop
and
mov
inc
stc
cmp
push
pop
mov
movsl
jl
push
sbb
or
sbb
sbb
sti
mov
push
or
sbb
test
sub
mov
push
fbld
add
inc
cmpl
jae
or
xchg
adc
xchg
push
cmpsb
lret
movsl
ljmp
mov
xchg
mov
add
sar
jns
das
adc
or
dec
push
test
ss
xchg
sti
mov
jne
inc
pop
lods
push
or
call
stos
and
mov
inc
fistpl
dec
daa
and
xchg
ss
and
add
enter
xor
int3
mov
push
sbbb
add
mov
lcall
adcb
pusha
lock
int3
repz
fsubl
push
in
lret
rcll
sub
fidivrl
adc
sub
add
sub
dec
sub
inc
cmpb
je
nop
mov
cwtl
out
jl
test
cmp
inc
sub
sbb
inc
mov
cmp
sub
pop
jge
lds
clc
add
icebp
das
int
and
or
push
mov
pop
xorb
pop
push
or
add
jmp
push
cmp
xchg
cmp
adc
pop
sbb
inc
and
mov
clc
mov
mov
mov
adc
push
rorl
mov
mov
jp
jns
xchg
sub
sub
add
call
and
enter
cmc
dec
mov
cwtl
sahf
jae
and
jecxz
dec
mov
xchg
pushf
ficompl
test
xchg
and
cmp
mov
add
adc
add
jl
and
inc
ret
sbb
daa
les
daa
outsl
xchg
popa
leave
ret
cmp
es
sbb
jle
sbb
jmp
scas
inc
js
lock
mov
push
and
jae
xor
jb
xchg
lret
sub
insb
adc
mov
pop
ret
jne
sahf
adc
push
ret
cmpb
frstor
adc
fsts
jbe
and
addb
mov
push
push
sbb
and
and
lods
lcall
rorl
or
cs
arpl
lock
aad
scas
cmc
push
imul
and
xchg
mov
loop
data16
push
incb
or
mov
std
mov
push
repnz
adc
mov
lahf
dec
or
push
pop
shll
sbb
cmpsl
outsb
sbb
leave
cmp
adc
repz
clc
fwait
xchg
bound
insl
aas
xor
sbb
jge
mov
add
ret
pop
jno
or
xlat
cld
pop
jp
aam
mov
repz
cmpsl
enter
out
movsb
sahf
das
push
xchg
lock
add
fs
ret
and
add
shrb
pop
cmp
andb
pop
inc
mov
adcb
add
xor
sub
sub
xor
sbb
arpl
xor
arpl
cli
repnz
push
mov
jno
fs
addr16
push
push
inc
imul
arpl
lcall
cmp
add
sbb
insb
xor
pop
mov
and
push
sbb
adc
enter
les
cmp
pop
inc
mov
test
cmp
push
mov
mov
sbb
les
cld
out
sbb
cmp
clc
adc
cltd
dec
hlt
cmpsb
sbb
and
lock
cmpsl
dec
lods
and
les
jne
cmpw
cmp
sub
mov
cli
bound
ja
popa
in
and
ret
sub
xor
xor
or
enter
add
addb
add
mov
sbb
mov
shrl
rclb
js
xchg
nop
ds
push
inc
lahf
adc
inc
sub
inc
das
std
mov
and
insb
sbb
loop
loopne
jbe
rol
push
xor
xor
iret
loope
adc
orl
repnz
xchg
or
xor
xor
or
fcomps
adc
xor
jb
push
rcrb
push
fstp
mov
in
pop
shufps
cmp
fs
outsl
insb
jae
and
aaa
pop
pop
sbb
sub
or
inc
insb
imul
popa
lret
xchg
popf
mov
adc
mov
pop
inc
lret
inc
jno
cmpsl
into
ljmp
inc
add
stos
pushf
sbb
push
push
stos
inc
mov
jle
jb
aas
ja
lds
rol
pop
or
or
dec
frstor
xchg
jecxz
mov
cld
movsl
inc
or
jae
nop
cmp
mov
pop
daa
iret
repz
popl
dec
mov
xor
jl
adc
mov
push
aas
jmp
or
mov
stc
pop
inc
adc
div
cmpsl
gs
jp
aam
xor
fs
dec
sbbl
jbe
divl
in
and
pop
sti
cmp
adc
cmpl
dec
push
xor
movsl
in
sub
xor
je
insb
addl
nop
sub
pop
orb
outsl
cmp
pop
sti
pop
insb
fistpll
mov
daa
jo
sbb
mov
add
add
add
cltd
jo
test
enter
dec
xor
movsl
nop
and
bound
hlt
xor
sbb
jae
add
and
or
leave
sbb
mov
push
xlat
rorb
push
and
push
and
push
lahf
xchg
arpl
mov
mov
lds
cmp
shlb
xor
push
nop
inc
roll
push
add
sub
out
or
push
inc
fcoms
dec
xor
call
mov
and
cwtl
xor
xchg
repnz
jbe
mov
xlat
jmp
xchg
xor
subb
cld
test
and
sbb
pop
and
dec
jno
inc
dec
sarb
and
dec
dec
and
into
ja
mov
pop
and
or
inc
into
or
jecxz
jo
dec
arpl
imul
lcall
jo
lods
and
push
adc
mov
xchg
sub
movsb
push
loope
nop
and
pop
scas
orb
test
nop
add
bound
dec
jecxz
lock
push
hlt
jle
out
stos
scas
inc
add
pop
push
push
pop
xor
outsl
js
or
cld
mov
xchg
push
inc
mov
or
sbb
stos
or
ljmpw
mov
fnsave
outsb
les
std
cld
mov
mov
inc
movsb
insb
xchg
sub
add
or
int3
xor
xor
ss
cwtl
inc
nop
movsb
aam
pop
or
enter
sub
iret
fmul
or
push
sub
ja
arpl
push
xor
xchg
lea
shlw
xchg
cmp
adc
repz
test
nop
xor
fimuls
je
pushaw
sbb
or
stc
cmp
je
js
jecxz
in
sub
popa
mov
sub
inc
vfmadd132ps
sub
jl
pop
or
and
loop
jb
mov
imul
cmp
xchg
jle
inc
rclb
or
inc
pushf
jbe
insb
add
cld
inc
data16
xchg
and
jl
cld
add
or
pop
out
aam
leave
es
sbb
cmp
or
pop
add
loope
jp
adc
add
dec
ja
sub
xor
push
inc
arpl
sti
lret
aad
out
jp
loop
inc
dec
jo
inc
or
and
sahf
repnz
push
bound
js
rorl
ss
mov
push
mov
imul
pop
adc
int3
movsl
adc
or
sub
ret
inc
pop
outsl
or
jg
cld
cmp
pop
mov
aad
jb
dec
rol
pop
or
mov
enter
jo
sbb
dec
or
orb
jg
mov
movsb
sbb
rolb
pop
sub
add
jbe
and
les
cmp
add
cmpsl
dec
xchg
or
sbb
insl
inc
cld
inc
sahf
mov
and
lret
jmp
sbb
in
xchg
adc
and
repnz
in
adc
mov
clc
imul
lods
jns
adc
lods
inc
cmp
pop
xchg
xchg
je
movsl
adc
nop
movsl
xor
mov
rorb
adc
push
and
imul
and
pop
icebp
add
test
int3
adc
mov
movsb
out
mov
xchg
push
mov
insb
es
daa
or
sarb
mov
negb
hlt
aaa
mov
inc
scas
ficompl
clc
jne
lock
or
hlt
ljmp
push
jle
fnstcw
xor
outsb
and
sub
dec
ss
pop
adc
call
cmc
in
lea
fdivs
stc
dec
lds
dec
dec
or
decl
lock
dec
or
inc
lock
repnz
pusha
sub
mov
mov
pusha
mov
test
mov
push
or
dec
push
add
incl
sub
jg
inc
and
sub
or
lds
xchg
mov
cmc
jnp
add
lods
push
or
lahf
xor
adc
orl
xor
jle
shr
mov
pop
leave
sbbb
inc
adc
xor
and
data16
xchg
jbe
and
add
fs
cli
clc
cmpsl
std
sub
scas
out
mov
lcall
mov
mov
rorl
fs
mov
xlat
dec
xchg
std
jle
xchg
inc
aaa
sbb
cmpsl
test
pop
clc
cld
in
mov
fs
jge
je
xor
jg
ljmp
pop
or
je
jp
idivb
inc
incl
mov
and
fcmovnu
jl
inc
adc
call
pop
orb
cmp
jge
mov
les
inc
rclb
sbb
out
inc
push
jle
ss
dec
sbb
lock
adc
sbb
push
ficompl
adc
push
or
lcall
sub
out
inc
push
movb
loopne
sbb
scas
jecxz
dec
stos
xchg
add
jl
and
addr16
mov
adc
sub
sbb
pop
cmp
jle
pop
aam
and
jns
fs
sbb
aaa
stc
shlb
xor
mov
pop
cmpsl
push
data16
push
incb
xlat
dec
dec
pop
fsubrl
ret
ja
icebp
imul
inc
ret
call
dec
inc
jo
add
lds
sbb
jne
jae
jp
outsl
cmpb
imul
pop
in
out
inc
xchg
jmp
nop
add
mov
inc
jmp
imul
aaa
cmpb
push
mov
adcb
pop
mov
out
xchg
inc
sub
sub
in
pop
out
sub
mov
dec
jns
add
test
and
xchg
or
xchg
mov
sub
or
mov
inc
jp
mov
or
xchg
xlat
pusha
sbb
xchg
push
or
pop
repz
and
adc
nop
jns
adc
add
ret
and
mov
jecxz
push
js
icebp
sbb
ja
stc
jge
loop
mov
movsb
dec
testl
bound
fs
pop
sub
pop
pop
sbb
in
rcll
ret
out
push
mov
adc
imul
pop
mov
or
mov
inc
cmp
loop
or
pop
fdivl
jmp
out
inc
dec
jg
mov
fs
pop
cmp
pop
push
adc
dec
enter
mov
out
jmp
shlb
push
setbe
push
jl
sbb
movsl
lods
mov
jne
sbb
xlat
stc
xchg
sub
jmp
push
testb
lds
sub
push
pop
jmp
sub
jae
sub
mov
xor
movsl
xor
jl
idivb
inc
xor
jo
push
imul
mov
nop
test
dec
push
adc
xchg
xchg
push
pop
or
adc
jo
inc
imul
xlat
jnp
xchg
mov
bound
ds
push
repz
xchg
fadds
hlt
jbe
sub
xor
in
dec
adc
addr16
enter
rclb
inc
or
jbe
aam
xchg
jge
les
mov
sub
imul
addl
popf
push
sub
xchg
stos
sub
jnp
adc
lock
dec
iret
notb
dec
cmp
stc
pop
cmp
adc
mov
xor
cmpsb
and
sbbl
dec
mov
dec
push
push
jp
push
push
or
pop
mov
gs
mov
je
mov
xchg
clc
pop
sub
enter
pop
dec
add
and
xchg
scas
push
movsb
loop
inc
and
test
movsb
pop
bound
push
jecxz
movsb
or
push
hlt
inc
adc
outsl
push
and
nop
pop
popa
push
movzbl
clc
add
sub
xor
cmp
and
mov
dec
pop
xchg
int3
aad
jle
and
mov
push
jb
mov
push
cmp
pop
fsubl
jne
jno
pop
repz
push
xor
push
sti
cmp
pusha
push
pop
pop
dec
mov
ss
xor
push
dec
lret
cld
enter
pop
int
mov
outsl
push
movsl
ficompl
ficoml
aad
xchg
xor
cmp
call
dec
rcl
dec
scas
test
ds
insb
call
inc
add
shll
cs
adcl
cmp
int3
aaa
loopne
xor
mov
sbbl
jnp
xchg
idivb
mov
shrb
adc
pop
mov
cmp
mov
iret
cmpsb
in
mov
imul
hlt
pop
imul
inc
addr16
push
jo
cwtl
xchg
clc
dec
jae
add
adc
jmp
push
xor
push
mov
jb
and
mov
jns
or
orb
mov
xor
insb
xor
mov
or
xchg
lods
jne
xchg
and
mov
pop
lret
jle
pop
xchg
xor
in
xchg
add
jne
mov
movsw
repnz
cmpb
fs
inc
test
enter
incl
jg
xor
xchg
in
movsb
jnp
push
scas
inc
xor
mov
sub
adc
push
mov
sub
pop
adc
xor
fmuls
push
sahf
mov
jo
ljmp
repz
jae
mov
sub
adc
inc
mov
loope
cmp
xor
dec
jmp
or
jne
jo
push
pop
mov
dec
dec
xchg
add
pop
pop
pop
cli
and
push
jns
mov
seto
inc
xchg
cli
adc
inc
sub
jmp
adc
push
fldt
sbbb
je
push
cli
mov
mov
or
mov
mov
add
das
mulps
call
mov
enter
jl
xor
in
xor
mov
std
inc
push
push
hlt
fs
lock
lahf
pop
stos
data16
xchg
outsl
sub
out
adc
pop
jmp
or
pop
mov
aas
inc
adc
test
adc
je
addb
push
sbb
cmp
sbb
xlat
das
ret
mov
or
push
js
in
icebp
sub
and
and
jmp
or
sub
jg
cld
aas
into
and
adc
fbstp
adc
jl
sub
sbb
or
pushf
or
sbb
adc
jne
adc
filds
push
repz
push
or
mov
jge
and
loope
cmp
cltd
test
push
inc
add
fsubl
xchg
dec
fistpll
mov
int
adc
and
jecxz
jge
adc
dec
ret
addr16
out
adc
aam
pop
mov
not
enter
call
and
lods
test
xchg
nop
rclb
movsb
int3
push
cmp
inc
inc
insb
or
loop
xor
addr16
test
mov
push
pop
inc
add
xorl
in
iret
jl
mov
jns
das
xchg
sbb
decb
loopne
xchg
js
movsb
and
in
add
mov
inc
je
dec
dec
mov
ror
js,pn
mov
mov
das
mov
pop
int3
jp
popa
lds
mov
mov
xchg
sub
mov
cmpb
adc
push
jns
ds
ljmp
ss
sub
mov
mov
daa
mov
fs
outsb
and
insb
mov
cmpsb
push
inc
dec
enter
sbb
mov
xor
test
push
out
dec
inc
pop
mov
add
js
inc
mov
mov
clc
fsubrl
push
les
orb
in
cwtl
bound
xchg
stc
addr16
leave
sarb
mov
ds
adc
adc
or
cmovb
je
sub
and
loope
sbb
or
rcll
pop
cmp
pop
adc
mov
insl
push
and
inc
inc
push
xchg
push
dec
dec
add
xchg
jb
shlb
subb
adc
push
cmp
mov
xchg
xchg
inc
test
js
insb
rcll
dec
sbb
fisttpl
cmpl
rorl
push
jge
push
lret
or
mov
lahf
ret
mov
mov
jno
test
xchg
mov
cwtl
sbb
cmp
mov
jmp
mov
add
jmp
dec
adc
sub
mov
push
cmp
test
pop
cmp
sub
jge
rorl
adc
and
mov
cmp
add
pop
je
xlat
aam
add
sub
mov
enter
add
adc
pusha
adcb
movsb
jmp
and
fcoml
rclb
jge
lret
push
into
xchg
push
setns
testb
je
into
jo
ficoml
into
or
xchg
cmpsl
jg
imulb
xchg
lods
mov
lods
sub
lret
and
lods
bnd
and
mov
xor
jmp
shll
cmpl
xchg
sbb
jg
cmp
insb
shlb
adc
jne
pop
mov
sbb
xor
xchg
pushf
mov
xchg
adc
pop
dec
mov
and
pop
adc
and
test
pop
mov
mov
jae
xor
fstps
pushf
or
mov
push
xchg
subb
sbb
mov
loop
jne
lods
sbb
fcoms
cmpsb
or
and
sbb
ja
in
jb
cmp
sbb
mov
and
xchg
pop
enter
jb
cmp
sbb
mov
and
xchg
pinsrw
cmp
sbb
mov
and
xchg
test
in
jb
cmp
sbb
mov
and
mov
loopne
loope
loop
jecxz
in
in
inc
out
out
das
shrl
cmp
sbb
inc
icebp
call
mov
adc
cmp
aam
lock
int3
xchg
call
mov
and
dec
lods
xchg
enter
rcrb
dec
mov
mov
je
nop
dec
insb
xchg
mov
fs
sbbb
test
jo
dec
inc
push
cmp
pop
dec
xor
push
and
dec
and
inc
adc
cmp
xchg
xor
or
sub
and
cld
inc
add
and
dec
adc
in
and
inc
clc
cmp
aam
lock
inc
call
mov
xchg
shlb
lods
inc
enter
adc
mov
mov
mov
jo
lods
dec
sbb
mov
adc
pop
das
call
dec
lods
push
and
hlt
inc
ficomps
out
sub
in
sub
fwait
add
jmp
jmp
in
cmp
sbb
mov
and
xchg
ror
shl
rcll
les
cmp
das
fcomi
in
xor
dec
push
sub
adc
adc
pusha
push
sbb
dec
or
or
mov
dec
dec
in
dec
xor
daa
or
xchg
fcoms
fs
movsl
adc
inc
dec
pop
adc
and
rclb
mov
fmull
push
dec
push
fists
push
xor
fs
mov
jnp
xor
adc
jo
dec
jne
aaa
jl
movb
pop
out
mov
and
stc
dec
mov
stos
arpl
push
aad
test
sub
push
sbb
sbb
inc
xor
xor
push
adc
daa
add
dec
jo
and
or
xchg
pop
ljmp
push
lods
repnz
into
test
mov
add
loope
das
sub
cmp
cmp
push
or
mov
popf
cmc
lcall
cmpsb
pop
adc
mov
imul
push
pop
pop
out
iret
sbb
cli
lea
sarl
fiadds
data16
jns
fst
jg
lods
andl
lds
and
lcall
or
push
lds
xorb
xor
jmp
inc
and
mov
jmp
in
dec
dec
cs
pop
loop
mov
cli
cmp
or
nop
fdivs
subl
dec
inc
pop
pop
scas
lea
in
stos
repnz
pop
mov
sub
mov
xchg
and
adc
pop
and
cmp
shl
mov
cmp
mov
je
sbb
mov
sbb
mov
xchg
pushf
jge
xchg
xchg
lock
fs
stc
dec
jnp
stc
adc
inc
lock
push
push
ja
arpl
imul
xor
inc
push
ret
xlat
cld
int3
stc
mov
or
fcoml
in
mov
sub
push
sub
aam
test
jle
ds
daa
ds
adc
shlb
dec
test
sbb
push
test
jb
add
inc
fwait
out
les
out
inc
push
add
adc
scas
jl
mov
loope
hlt
dec
shrb
bound
jmp
sbb
or
adcl
lret
cmp
cmpl
orb
subb
mov
and
cs
nop
or
sub
gs
dec
and
adc
mov
inc
add
adc
pop
add
cmp
cmp
outsb
jne
pop
sahf
jl
push
aaa
sbb
mov
lds
cmp
adc
int3
push
lahf
pop
and
push
dec
ljmp
pop
ljmp
push
movsl
js
mov
and
xor
xorb
dec
je
sub
push
xchg
les
mov
mov
mov
push
mov
push
lret
jne
repnz
or
in
enter
hlt
bound
xor
dec
cmp
adc
arpl
sub
and
inc
sub
push
je
and
and
sbb
and
sbb
shlb
xchg
enter
add
xlat
pop
sub
js
inc
enter
jl
arpl
aad
fistpll
jb
addr16
add
push
inc
cmp
test
or
push
inc
add
add
sub
add
arpl
dec
push
and
test
push
pop
inc
insb
aam
sbb
cld
or
inc
pop
mov
pop
adc
pop
je
fcoms
jns
add
pop
xchg
mov
hlt
test
push
push
ffree
pop
popf
clc
xchg
xchg
sar
test
push
or
popa
jae
dec
sbbl
adc
ds
fcomps
xor
or
inc
gs
xor
xchg
sbb
xchg
or
decb
icebp
inc
pusha
lcall
js
inc
adc
push
xor
and
aad
mov
xor
inc
cmp
in
jns
mov
and
lahf
sub
les
je
add
mov
adcb
les
inc
mov
lds
sub
int3
jno
adc
inc
sarb
imul
mov
or
jo
les
lock
pusha
adc
adc
mov
lods
dec
data16
cmpl
fs
dec
stc
filds
or
pop
movsl
sbb
inc
fdivrl
es
cltd
push
jl
pop
add
xchg
inc
or
nop
push
and
mulb
jl
es
test
sbb
mov
andl
dec
std
xor
adc
hlt
in
ds
xor
stos
fwait
push
pop
and
jne
or
and
loop
and
push
fdiv
dec
lahf
mov
add
mov
nop
push
mov
mov
rolb
sub
dec
or
pusha
push
cmpl
cmp
jne
movups
xchg
loope
aam
jne
es
mov
shlb
hlt
or
cmp
or
pop
jae
push
inc
adc
xlat
icebp
push
jb
stc
and
adc
mov
ds
push
mov
and
xor
fdivrs
xor
imul
icebp
mov
sbb
shrb
or
xchg
imul
mov
lock
jns
pop
mov
icebp
or
lods
hlt
xchg
scas
hlt
imul
or
xor
ds
int3
dec
mov
dec
fstpl
fwait
repnz
adc
test
nop
ret
sub
pop
sbb
pop
adc
pop
imul
jle
jb
mov
xchg
div
mov
sbb
push
pop
arpl
les
cmp
cld
jmp
fiadds
and
push
lock
mov
pop
push
adc
pop
cmp
inc
repz
sub
jl
add
xchg
mov
test
or
movsl
test
arpl
adc
push
stc
or
or
inc
xchg
in
fs
into
aas
lds
pop
cmp
and
push
cs
dec
adc
dec
xor
add
mov
sub
sbb
inc
jo
push
xchg
pop
cmp
hlt
outsl
lahf
mov
scas
inc
testb
cmp
sti
stc
mov
jmp
popf
push
ss
adcl
jb
xchg
testb
push
pop
dec
scas
mov
lahf
in
or
xchg
and
sbb
and
cmp
push
lods
jp,pt
test
inc
add
add
adc
or
push
sub
cmp
push
add
rol
cltd
push
push
xor
pop
fwait
inc
cmp
push
shlb
adc
enter
mov
xchg
sub
iret
adcl
inc
loope
jno
jmp
jno
adc
test
dec
mov
mov
mul
fsubrl
jno
xchg
add
ljmp
sbb
pop
mov
lea
nop
push
into
out
dec
in
fcoms
imul
or
filds
js
daa
push
or
dec
stos
daa
ja
je
dec
pop
fisubs
fdivs
adc
sub
push
pop
or
dec
test
rol
and
cmpsb
inc
adc
je
pop
pop
daa
push
fisubrl
test
outsl
out
dec
adc
lock
aad
mov
push
lods
jno
aad
dec
dec
adc
inc
aas
pop
xchg
test
xor
idivl
pop
add
mov
dec
pusha
scas
es
pusha
sahf
nop
push
dec
and
mov
cmp
dec
jmp
rclb
mov
inc
push
and
sub
fldenv
push
add
and
pop
pop
test
es
cmp
out
mov
inc
dec
clc
xlat
rclb
out
sub
fs
dec
push
dec
ret
jge
or
push
add
scas
imul
out
bound
ret
xchg
lea
inc
jg
inc
inc
push
stos
out
pop
cli
or
in
test
stos
mov
mov
xchg
jle
sbb
shl
xor
push
or
call
push
mov
flds
jne
fs
mov
icebp
push
jo
repnz
adc
mov
scas
cwtl
movb
cmp
cmp
test
mov
add
loop
in
lods
mov
add
addl
outsb
mov
call
pushf
in
dec
decl
push
push
inc
orl
insl
xchg
or
inc
les
cmp
xor
shrb
jmp
sbb
mov
sub
test
mov
mov
push
inc
nop
and
pop
xor
add
sti
pop
xchg
mov
nop
cld
mov
je
dec
pop
inc
mov
enter
dec
in
shll
movsb
daa
into
fcomp
mov
jp
and
jne
push
cmp
jmp
adc
cld
inc
mov
push
jp
testl
das
jecxz
leave
clc
xor
dec
jecxz
dec
mov
jo
mulb
jno
and
and
and
xor
pop
nop
xor
ret
divb
mull
pop
or
sub
inc
idiv
pop
out
add
into
insb
cmp
dec
lock
push
lret
inc
inc
out
jne
cmpl
dec
cld
add
imul
inc
loopne
or
inc
jge
push
and
daa
push
sbb
or
jo
xchg
lcall
sub
repnz
pop
stc
jle
or
inc
sbb
or
sti
push
dec
int3
mov
and
repz
pop
std
sub
sub
mov
int3
lock
push
push
mov
jle
sbb
xchg
aad
mov
jecxz
mov
jbe
dec
push
fs
jl
sub
adc
pushl
cmpsl
and
mov
jno
cmp
xchg
in
sti
xchg
or
outsl
sbb
dec
stos
insb
leave
lret
mov
push
imul
jne
push
pop
std
inc
hlt
inc
sbb
mov
cmc
mov
mov
mov
es
and
mov
and
pop
push
in
mov
adc
outsl
pop
adc
lods
and
push
mov
mov
mov
dec
and
push
lea
test
xchg
in
fs
xchg
scas
and
sarl
das
mov
mov
fcmovnbe
iret
push
xchg
loopne
aam
mov
jg
int3
jno
sbb
mov
les
mov
addr16
inc
test
mov
cmp
mov
gs
imul
mov
dec
lret
sarb
xchg
jbe
pop
inc
into
imul
adc
into
adc
jg
movsl
int3
scas
push
sub
jne
push
add
jne
cmp
test
lods
imul
das
out
daa
fsubs
ljmp
roll
push
shlb
mov
repnz
dec
push
out
or
test
sub
jae
push
scas
sub
adc
not
inc
pop
clc
push
shl
inc
pop
jb
popf
jno
dec
xchg
add
ret
imul
pop
or
aam
add
jno
mov
push
push
pushl
leave
fdivl
mov
adc
test
push
iret
roll
and
adc
enter
pop
xchg
push
adc
adc
mov
call
sbb
sub
jne
mov
jl
add
pop
jne
xchg
aad
testl
dec
cwtl
repnz
and
lcall
out
add
push
ljmp
stos
mov
mov
movsb
mov
leave
xchg
pop
js
dec
mov
faddl
push
loopne
sub
imul
or
sbb
daa
inc
aam
mov
xchg
inc
in
mov
iret
push
mov
int
cmp
test
xorl
pop
or
hlt
mov
fistl
fdivs
test
aam
std
mov
je
xchg
xchg
cmp
scas
sub
lods
jge
stc
clc
pop
mov
lcall
shll
jp
mov
dec
dec
outsl
enter
and
xlat
fcmovbe
imul
jge
std
dec
push
cmp
mov
mov
in
scas
mov
ljmp
inc
cmp
mov
mov
fs
dec
jb
fs
push
sbb
mov
pop
loopne
test
or
mov
lds
sub
sbb
lret
stos
or
out
cmp
pop
jle
sbb
mov
pop
inc
or
sbb
inc
adc
jns
mov
loop
mov
mov
bound
ficomps
push
push
and
cmp
jp
mov
mov
push
xchg
stos
cltd
sbb
or
or
and
in
or
cmp
and
cld
xchg
nop
mov
mov
push
mov
scas
or
cmp
arpl
xchg
pop
test
mov
cld
aad
test
sbbl
inc
sub
xor
or
mov
movsb
sbb
fdivrl
push
insl
leave
push
jg
inc
les
scas
lret
jb
fsubrs
cmp
jb
push
mov
je
movsl
paddusb
nop
sub
adc
leave
insl
jg
and
adc
add
jge
or
mov
sbb
adc
push
pop
std
or
movsl
sbb
add
cmp
outsl
daa
enter
push
adc
ja
fsub
in
cmp
sbb
and
adc
shlb
fsubrs
aad
mov
jl
xchg
sbb
mov
add
enter
aad
xlat
leave
add
push
lret
sub
test
mov
insb
cld
or
xchg
jne
dec
addb
dec
outsb
xchg
xchg
xchg
int3
pushf
and
lock
inc
fs
insb
sub
mov
pop
dec
mov
adc
dec
adc
jle
sbb
cmc
mov
sbbl
push
dec
adc
leave
pushf
loope
pop
dec
les
pop
popf
adc
push
dec
or
dec
mov
loopne
and
jno
lock
adc
adc
int3
call
sub
push
inc
movsb
or
jo
inc
xor
adc
mov
jo
xchg
out
sub
xor
movsb
dec
loopne
pop
push
push
pop
cwtl
fs
or
inc
les
test
aam
or
adcl
and
xlat
add
dec
inc
fwait
clc
imul
xchg
pop
popa
and
adc
inc
push
imul
daa
lods
inc
inc
add
mov
pop
call
xor
fsubr
and
add
mov
push
repnz
mov
addb
mov
adc
and
dec
fs
jl
mov
leave
or
ljmp
movsl
sbb
mov
jge
mov
xchg
mov
ja
or
push
mov
fs
push
inc
pop
outsl
sbb
push
mov
das
mov
xchg
mov
dec
cmp
incb
add
and
pop
cmp
pop
daa
dec
in
xlat
adc
push
stos
nop
clc
inc
pop
int
mov
xchg
ret
sbb
inc
test
jge
add
icebp
and
dec
sbb
in
push
mov
xor
or
aas
xchg
xor
jae
fs
inc
xchg
push
push
push
add
cmp
jns
adc
cld
mov
or
mov
push
jae
mov
mov
cmp
je
mov
addr16
push
push
mov
jns
lcall
mov
adc
jle
nop
lds
mov
sub
adc
push
add
int3
jne
or
jns
xor
or
sub
mov
adc
movsb
adc
mov
call
mov
cwtl
push
aad
adc
int
adc
pop
sbb
mov
xchg
mov
ja
icebp
lods
pop
adc
xchg
pop
loopne
scas
or
inc
jge
les
int3
mov
les
adc
mov
pop
sbb
pop
adc
and
cmc
inc
mov
lock
add
add
cld
or
or
dec
in
hlt
call
xchg
jb
pmulhw
sbb
inc
jne
inc
adc
in
int3
pop
jp
dec
fmuls
fs
nop
mov
dec
and
cmpsb
clc
adcb
fs
rclb
xor
cmp
nop
jo
bound
sbb
xchg
mov
popa
in
and
and
sbb
xor
fsubs
adc
mov
or
or
hlt
cltd
clc
or
icebp
cltd
loope
or
adc
add
inc
andps
imul
fisubl
add
enter
jg
leave
sub
fdiv
dec
pop
out
lea
push
ds
jnp
sbb
xrelease
jae
sbb
push
sbb
adcl
das
pop
jnp
mov
dec
adc
fstps
xor
mov
and
xchg
aaa
pop
sbb
inc
test
cltd
mov
cmp
pop
jmp
lahf
push
movsl
pop
xor
cltd
mov
icebp
les
je
sbb
imul
mov
push
or
sbb
movsl
das
insl
stos
ret
lcall
sub
sub
mov
addb
mov
or
mov
sbbb
or
enter
test
adc
insb
jnp
cmp
imul
ffree
xor
ret
cmpb
cs
inc
mov
push
lods
xchg
call
or
vcvtdq2ps
push
push
mov
mov
inc
mov
lock
mov
pushf
mov
faddp
and
mov
pop
pop
xchg
idivb
mov
pop
scas
add
call
inc
int3
dec
movsb
rcll
or
jl
dec
adc
or
jg
cmp
jl
out
cmpsl
sub
cmp
imul
addr16
or
sbb
inc
dec
dec
jge
ret
jle
push
repnz
dec
into
stos
gs
pop
and
fisubs
hlt
jl
scas
mov
jmp
add
cmp
je
mov
dec
add
in
cmp
or
int3
mov
outsb
dec
jae
mov
outsl
or
fwait
je
or
mov
push
push
add
mov
mov
pop
mov
or
jo
cs
hlt
call
test
and
test
jecxz
adc
adcb
cld
inc
test
iret
adc
mov
dec
sub
lret
adc
pop
loop
inc
xchg
ss
dec
mov
test
pop
sarl
inc
add
mov
inc
dec
sbb
cmp
je
xchg
addr16
and
push
cs
pop
cld
cmp
pushf
jg
lods
ret
and
sti
ljmp
rol
push
inc
and
out
in
out
mov
cwtl
cmpsl
movsb
fs
adc
sub
pop
mov
cmp
fsincos
jno
and
fsubrs
mov
or
lcall
daa
test
sbb
out
xor
add
inc
ja
add
lods
xchg
dec
xor
popa
adc
adc
movsb
sti
mov
mov
and
mov
sbb
es
test
xor
incb
in
mov
xchg
xor
andb
in
ror
mov
hlt
cmp
test
mov
adc
cli
ret
and
rclb
test
scas
mov
or
test
orb
mov
dec
cmp
adc
mov
or
push
mov
lret
inc
mov
or
dec
orb
stos
pop
cmp
loop
add
enter
push
js
ja
pop
xchg
clc
adc
mov
push
out
pop
shrb
xchg
ret
xchg
movsl
mov
adc
test
xchg
xchg
push
leave
movsl
ja
push
xchg
mulb
icebp
hlt
cmp
push
mov
push
cmp
jge
push
negl
dec
cmpl
lcall
xchg
test
push
lock
or
addr16
test
mov
in
jmp
mov
mov
fsubs
mov
ret
cmc
mov
das
or
dec
lds
lock
mov
in
in
js
sub
or
dec
test
in
fsubr
je
mov
movl
adc
addr16
sbb
shrl
push
adc
lds
scas
jns
gs
cmp
fs
pop
mov
mov
pop
or
and
sbb
sub
mov
jmp
dec
inc
insb
push
test
subb
daa
lods
xchg
pop
and
or
fistl
in
fs
add
inc
dec
jne
out
adcb
je
sub
insb
xchg
sbb
inc
cmp
mov
dec
jmp
adc
jae
xor
pop
lds
push
mov
inc
daa
lahf
fdivs
imulb
or
adc
loope
xchg
lret
nop
mov
test
push
stos
mov
bound
lahf
lds
dec
inc
push
dec
xor
arpl
adc
jmp
inc
and
movsl
pop
les
daa
sub
movsb
push
lods
jp
sbb
and
inc
adc
cmpsl
and
cmp
dec
icebp
adc
cmp
lods
test
jecxz
push
stos
push
ljmp
sbb
aam
inc
test
cmpsb
int3
mov
outsb
sub
jne
cmp
push
inc
mov
loopne
mov
sub
ficomps
lea
stos
addb
push
ds
andb
lods
adc
cmp
test
scas
cmpsb
stos
pop
jp
xor
sub
mov
fcmovb
adc
xlat
and
pop
call
dec
add
push
fisubrl
cmpl
inc
mov
jl
inc
rorb
pop
sbb
int
mov
adc
out
out
and
mulb
cmpl
adc
jne
lods
sub
orl
and
pop
adc
je
ret
icebp
clc
cmpsl
jge
xchg
icebp
cli
push
pop
lea
dec
xor
xchg
inc
push
aad
dec
and
push
inc
or
cltd
lret
jge
push
mov
iret
add
push
inc
das
lds
inc
shlb
stc
adc
lcall
in
inc
inc
lret
pop
imul
push
repnz
test
and
into
leave
shll
lcall
pusha
cmpl
pop
mov
ja
outsb
inc
cmp
or
jmp
bound
loopne
jae
push
std
ret
pop
fs
dec
pusha
add
je
and
scas
fstpl
dec
cld
cmpsb
insb
and
jge
shrb
jmp
lods
into
cld
pop
adc
gs
sbb
rclb
cmpsl
pop
test
jb
xchg
sub
fisttpl
push
jmp
les
xchg
lock
scas
push
adc
adc
inc
or
stos
cmp
adc
negl
loopne
test
jnp
adc
popa
bound
mov
outsb
jns
push
cli
mov
fldl
imulb
nop
pop
adc
cltd
xchg
jbe
ret
aaa
add
fwait
or
in
out
push
adc
jecxz
push
mov
shrl
or
dec
push
push
sub
mov
xor
lea
or
and
mov
test
mov
mov
imul
mov
or
jle
rclb
add
push
repz
shl
loope
inc
outsl
sub
cld
and
inc
dec
out
ret
xchg
scas
ds
imul
dec
jnp
sahf
or
ret
rorb
add
nop
dec
push
hlt
mov
aam
adc
mov
fmul
inc
arpl
or
adc
pusha
lds
js
stos
into
hlt
mov
rcrb
jle
lock
shlb
mov
mov
push
fs
mov
icebp
or
jl
and
and
popa
in
pop
push
pop
ror
shl
push
cmp
dec
mov
adc
or
push
clc
mov
mov
mov
je
cmp
enter
shlb
adc
lods
ret
mov
sub
or
push
inc
sbb
sbb
jo
pop
pop
test
fsubs
or
dec
lea
insb
sbb
push
mov
repnz
dec
mov
in
lods
dec
lods
incl
or
mov
push
enter
loopne
cmp
add
lret
mov
nop
adc
sub
imul
xor
pop
sete
push
xorb
stc
mov
cmc
xchg
cmp
mov
inc
inc
loop
iret
or
dec
lock
arpl
or
js
nop
andl
movsl
sub
popf
jne
aam
les
aas
nop
scas
and
push
test
add
bound
adc
inc
test
adc
int
adc
int3
hlt
add
les
leave
js
xchg
inc
add
and
dec
outsb
xlat
addr16
insl
add
dec
xchg
mov
adc
test
mov
xchg
pop
ss
adc
imul
dec
ljmp
lods
fdivl
push
mov
add
mov
mov
mov
inc
rorb
pushf
add
dec
push
mov
xchg
inc
pop
sbb
repz
repz
aas
jmp
sbb
sbb
mov
mov
mov
sbb
cld
push
test
jb
and
pop
dec
stc
pop
roll
js
outsl
and
dec
pop
pop
or
mov
mov
aas
sbb
and
and
and
inc
movsl
ljmp
pop
pop
and
dec
mov
and
aas
adc
bound
fsubs
xchg
sbb
pop
sbb
mov
dec
fadds
int
daa
sbb
cmp
jne
add
inc
xor
sbb
xorb
adc
or
repz
add
mov
rolb
add
jo
mov
inc
cmp
cmp
ds
xor
movsb
adc
adc
adc
adc
and
icebp
cltd
add
lock
or
or
dec
rcr
shr
push
mov
lea
test
enter
sub
rcrb
rol
imul
inc
inc
outsl
repz
repnz
nop
or
sbbb
or
aam
jns
add
inc
in
dec
pop
mov
test
inc
outsl
push
pop
or
mov
popa
enter
adc
adc
decb
or
jg
mov
enter
push
inc
into
shrl
xchg
push
adc
inc
inc
mov
push
rolb
and
mov
dec
jne
nop
les
int3
or
sbb
dec
mov
ja
pop
jb
or
pusha
inc
insb
cmpsl
lock
nop
sub
test
sbb
mov
mov
or
or
add
cmpsl
mov
mov
imul
cmp
lret
ljmp
mov
repnz
int3
bound
les
sarb
stos
sub
pushf
mov
fsts
jecxz
mov
in
xchg
jo
xchg
sbb
xchg
insl
lret
and
push
xchg
stc
and
in
shll
outsl
mov
mov
test
rorl
fbld
in
out
aaa
dec
mov
xor
sub
push
test
lret
xchg
push
je
and
inc
cmp
cld
sub
cld
and
sub
loop
repnz
pushf
inc
inc
outsl
loop
repnz
pushf
push
jle
cs
loop
pop
jmp
or
lahf
dec
nop
xor
les
sub
xor
push
cmp
pusha
stos
jmp
and
xchg
and
in
test
orb
dec
outsl
aas
lret
jbe
cmp
cmp
cld
loop
cmp
sub
lock
repnz
push
mov
dec
sub
or
mov
xchg
and
ja
movsb
jo
fimull
mov
sbb
dec
call
aad
inc
inc
or
jb
addr16
imulb
pop
cpuid
jo
fistps
movsl
gs
sub
and
jmp
out
sbb
repz
or
jae
push
adc
adc
rorb
insl
inc
ds
inc
outsl
dec
scas
push
add
jnp
nop
hlt
pop
outsl
mov
adc
xor
mov
clc
loopne
add
je
mov
aam
and
lock
push
inc
inc
mov
addb
push
pop
push
push
or
les
cld
inc
fdivr
adc
test
mov
fsubs
mov
add
inc
in
pop
add
sbb
test
pop
or
int3
and
adc
dec
and
or
daa
das
pusha
cmp
add
sarl
jmp
out
fldcw
icebp
lods
stc
fdivr
stos
stc
stos
stc
aad
ret
mov
in
mov
or
loopne
cmp
andl
nop
hlt
adc
test
fs
sbb
dec
push
mov
push
sbb
mov
mov
or
mov
dec
push
aam
mov
adc
jp
cwtl
mov
and
inc
aad
enter
mov
or
jae
cmpl
adc
jbe
dec
jg
in
pusha
push
add
add
dec
jb
pop
pop
shrl
hlt
aas
push
pop
cmpsb
cmp
fs
ja
aaa
lret
push
add
movsb
dec
adc
push
push
mov
xor
ret
mov
sbb
hlt
icebp
ss
and
in
lock
or
data16
adc
mov
or
add
daa
enter
cld
call
adc
call
inc
adc
or
ljmp
int3
cmp
insb
pop
or
or
xchg
stos
mov
mov
and
add
xor
inc
sbb
cmp
inc
inc
mov
shll
dec
nop
push
add
dec
popa
js
outsl
mov
ds
add
dec
imull
sar
pop
les
call
adc
or
sub
leave
add
shll
or
mov
mov
je
mov
mov
hlt
cmc
mov
sub
call
or
jp
or
xchg
pop
adc
ja
out
nop
jl
movsb
xor
les
scas
or
xor
xor
and
add
cmovne
test
pop
movsb
ficomps
adc
and
aaa
test
cmp
ja
push
nop
push
pop
movsl
adc
xchg
jl
rcrb
jl
rorb
in
lods
sub
sub
pop
mov
sbb
sub
push
inc
sbb
push
push
push
imul
popa
or
sqrtps
scas
dec
push
movsl
pushf
mov
cmc
adc
inc
inc
lret
pop
mov
pop
adc
push
jecxz
adc
add
mov
fists
and
test
add
mov
loope
in
jns
push
cmpsb
aam
push
adc
cmp
xchg
lcall
xchg
dec
ss
mov
dec
adc
add
jnp
lods
sahf
jmp
cmpsl
or
or
jp
or
adc
inc
or
adc
and
call
push
xchg
inc
jo
rorb
mov
call
fs
lcall
adc
jae
mov
push
push
sbb
popa
insb
push
in
femms
push
gs
jb
dec
xor
cltd
or
xchg
sbb
add
icebp
xchg
inc
xor
jae
jnp
push
adc
jae
dec
aas
ret
jge
gs
mov
test
add
bound
hlt
jle
or
inc
dec
test
in
inc
add
sub
sahf
rorb
push
icebp
mov
push
pop
rclb
push
ds
cmp
add
sub
xchg
pop
push
xchg
es
push
mov
pop
popa
inc
pop
push
popa
adc
mov
and
dec
add
pop
pop
in
imul
outsl
push
sbb
add
inc
sbb
push
push
dec
and
push
hlt
inc
push
inc
mov
js
stos
movsl
adc
stos
sbb
add
mov
pop
add
out
mov
cli
inc
cmp
mov
cmp
in
vmulps
xor
ljmp
in
inc
jg
inc
push
or
aam
data16
adcb
cmp
pop
clc
mov
lods
pop
or
dec
loopne
add
push
push
enter
jns
nop
inc
jl
addl
or
add
mov
rorl
sbb
adc
lock
pushl
ljmp
lods
out
in
loopne
cld
in
push
add
push
adcb
add
jae
mov
cwtl
sbb
push
mov
jbe
mov
lret
mov
addr16
lock
ficomps
cmp
imul
mov
push
notb
bound
dec
adc
pop
pop
dec
dec
test
loop
mov
mov
mov
pop
repz
les
and
sub
adc
adc
test
dec
cmp
pop
addl
lods
pop
or
test
fmul
or
and
cwtl
mov
daa
xchg
inc
js
pop
mov
xchg
mov
add
xor
cld
add
addr16
add
push
xchg
mov
and
leave
adc
pushf
pop
insb
popa
jns
rcrb
cmc
xor
adc
dec
inc
sub
scas
js
mov
sub
fcoml
je
inc
stos
cmp
call
and
pop
adc
leave
sarb
clc
scas
movsb
mov
adc
and
pop
mov
mov
or
xchg
lods
js
inc
mov
xchg
mov
jo
mov
adc
mov
fmulp
or
int
mov
xor
es
lahf
shlb
jg
mov
insb
push
int3
mov
divl
push
js
sub
lds
and
pop
xchg
sbb
inc
mov
movsl
test
cmp
and
sbb
push
xor
pop
and
xchg
pop
hlt
and
xchg
add
fsubl
mov
repnz
xchg
pop
mov
mov
pop
movsb
xchg
stc
adc
enter
rorb
insb
add
sub
or
mov
bound
dec
add
sar
add
cltd
adc
cltd
or
push
cmp
dec
or
pop
and
mov
sub
sub
mov
add
xchg
es
push
add
cmpsb
mov
sbb
cmp
dec
pushf
pop
movsl
pop
dec
ret
inc
xor
inc
sub
mov
add
in
cmpsb
shl
xorb
and
or
cmc
lret
rcrb
dec
cli
popa
int3
jb
cs
sub
ds
aam
decl
mov
scas
jg
orl
sbb
inc
test
in
inc
lret
aam
sub
mov
or
jo
inc
punpcklbw
cmp
add
mov
sbb
jl
mov
out
dec
dec
imul
subb
mov
dec
dec
add
pop
sub
ljmp
mov
sbb
xlat
and
jmp
or
cmp
push
pop
shlb
mov
mov
and
mov
mov
mov
inc
test
jl
jmp
sbb
mov
cmp
repnz
mov
int
loopne
arpl
xor
repnz
xor
mov
fmul
jns
push
scas
imul
shrl
inc
pop
cmp
or
movsb
dec
jns
fisttpll
lret
pusha
jno
cmp
shrb
pop
shlb
inc
adc
inc
adc
addr16
dec
test
das
adc
push
fstl
daa
or
inc
mov
sub
mov
cld
sub
push
jl
push
push
or
sub
clc
mov
sub
mov
cmp
push
in
movsb
sub
lahf
sbb
rcll
dec
mov
add
sub
fldl
mov
or
sub
pop
nop
mov
mov
addl
cmp
mov
inc
in
cmp
jno
add
push
mov
inc
inc
pop
andb
add
mov
test
mov
mov
or
mov
mov
xor
mov
scas
int3
repz
dec
cmc
adc
clc
fbld
jbe
pop
fstp
rclb
clc
bound
dec
inc
mov
jecxz
in
and
movsb
mov
in
or
aam
fsubrs
lock
xor
movsl
mov
pop
stos
lcall
xor
loopne
fcompl
cs
fs
add
stos
jp
dec
in
fmull
call
xchg
mov
movsl
ss
jle
push
fistl
xchg
test
mov
sub
test
mov
sub
sub
xor
cmpsl
add
mov
and
jns
or
mov
jnp
jle
mov
mov
sub
leave
jp
push
or
stc
fs
jl
xor
and
movsl
jge
in
or
movsl
daa
les
xor
jecxz
test
nop
mov
test
ljmp
cwtl
and
xchg
out
jae
fnsave
pop
adc
clc
cmp
stc
push
int3
or
mov
push
mov
mov
pushf
pop
inc
movsl
xor
adc
mov
loop
push
stc
add
xchg
sub
adc
push
insl
push
cmpsb
shl
stc
cld
push
ljmp
das
push
add
imul
adc
dec
dec
or
movsb
and
mov
xor
mov
mov
mov
mov
push
mov
cmpsl
push
push
mov
rorb
test
sbb
fwait
nop
int
rolb
or
push
adc
test
lret
inc
mov
mov
cmpb
pop
orl
sbb
mov
outsl
test
xor
xchg
sbb
mov
mov
xchg
push
dec
adc
xor
inc
push
and
dec
or
inc
shlb
hlt
aaa
mov
scas
sub
xor
mov
mov
jno
ret
or
push
das
push
jl
sub
adcl
stc
push
inc
sub
mov
xchg
fs
mov
enter
jle
mov
aam
xchg
sub
xchg
sbb
xor
sbb
je
stos
loop
inc
or
dec
scas
pop
pusha
sbb
dec
dec
or
mov
cld
shl
sbbb
pop
cmc
into
fdivrl
inc
hlt
mov
sub
mov
and
cmp
push
jle
inc
jecxz
bound
fs
imul
or
mov
insb
inc
or
sbb
mov
cmp
or
cmp
sub
stos
jbe
push
lret
lods
arpl
shr
cmp
aad
call
sti
cmp
test
dec
fwait
and
push
pop
xor
mov
push
cmp
push
test
out
adc
adc
jmp
add
xor
stos
mov
jns
push
dec
add
mov
xor
adc
xchg
mov
add
mov
dec
lea
inc
add
mov
xchg
aaa
sbbb
xchg
jle
pop
adc
popf
fchs
pop
ffree
cwtl
scas
pop
xchg
lret
xlat
sbb
nop
mov
int3
sub
test
sbb
sbb
or
mov
mov
and
adc
js
adc
scas
cmp
push
adc
sbb
and
leave
sub
and
pop
inc
push
mov
jae
or
ret
fs
shrl
inc
outsb
imul
hlt
decb
xchg
sub
mov
cmp
and
mov
test
mov
mov
inc
inc
adc
pop
fs
push
push
mov
push
mov
testl
hlt
jne
out
pop
mov
bound
in
js
icebp
ja
or
imul
push
adc
sub
jns
dec
cli
stos
sbb
or
push
retw
stc
ja
or
ret
daa
sbb
mov
pop
shlb
ret
jmp
and
inc
ret
push
push
or
inc
cs
mov
dec
add
push
dec
shl
or
stos
fwait
xchg
add
cs
call
push
sub
test
insb
cwtl
faddl
enter
ret
fnstenv
loopne
and
repnz
addb
mov
mov
fiaddl
jne
mov
fsubrl
dec
fdivs
lahf
jns
xchg
enter
fstpl
iret
fistpl
dec
xchg
neg
inc
loopne
pop
and
xchg
inc
scas
pop
jo
mul
les
shl
out
das
mov
xchg
shr
mov
stos
cltd
dec
in
dec
mov
pop
push
mov
or
push
push
sbb
loope
fs
push
push
push
add
nop
pop
ret
pop
cmpb
inc
sub
sbb
lea
sbb
or
inc
push
lcall
cmp
dec
pop
fcoml
mov
lret
movl
xchg
in
add
mov
mov
cmp
popf
jle
jg
test
lock
pop
sub
loop
dec
aaa
subb
pcmpgtd
lock
pop
cmp
in
adc
push
add
push
sub
mov
ret
jp
xchg
inc
push
pop
xor
cmp
xchg
xor
std
cmp
mov
into
test
lret
dec
inc
cmp
fstpl
sub
adc
jo,pt
lods
jl
lock
xchg
jne
movl
lock
dec
add
inc
dec
or
cmp
sub
lods
xor
pop
xchg
mov
jmp
movl
mov
xor
sub
pop
mov
xor
xchg
inc
andb
imul
inc
xchg
pop
data16
push
out
mov
rcll
mov
and
add
mov
jbe
xor
mov
sbb
push
adc
daa
jne
jg
add
sbb
test
adc
and
pop
jge
inc
daa
sub
outsb
decb
sbb
sub
adc
cwtl
cmpsl
xchg
jo
movl
mov
mov
mov
int
xor
mov
and
fistpl
push
or
scas
and
mov
cmpsb
loopne
movsl
les
int3
mov
enter
jg
scas
xchg
stc
add
jbe
fmul
dec
add
sti
fiaddl
cmp
jne
lds
sbb
ret
inc
push
dec
mov
xchg
sbb
sbb
and
and
pop
mov
inc
clc
or
jle
mov
mov
mov
push
add
in
cmpb
dec
jmp
push
pop
or
and
mov
ds
add
adc
mov
inc
dec
jne
fisttps
adc
rcll
or
mov
push
xchg
int3
arpl
cld
pop
push
insb
iret
lea
test
dec
jle
mov
sub
add
nop
mov
mov
jbe
or
mov
les
addl
xchg
and
xchg
call
or
dec
shl
cmp
loopne
cmp
jge
mov
outsb
sbb
cmp
pop
xor
adc
push
push
push
mov
inc
imul
mov
or
ss
into
add
mov
sub
push
sbbl
and
dec
in
dec
aaa
test
or
call
mov
jmp
inc
mov
xchg
pop
das
mov
ja
popa
add
xchg
cltd
orb
inc
adc
out
push
push
dec
push
sbb
nop
mov
fs
fstpl
andb
shll
mov
pop
outsb
xor
jne
or
adc
lods
sub
inc
sbbl
mov
lret
lock
xor
sbb
adc
ret
fdivrs
and
imul
in
in
aam
inc
adc
jbe
out
test
mov
ljmp
push
adc
fildll
std
mov
push
xor
in
jge
cs
sub
scas
xor
shll
or
pop
and
lea
dec
fdivs
loopne
inc
in
clc
push
rorl
hlt
sbb
cmp
adc
cmp
subb
xchg
push
or
or
cmp
add
in
movsl
icebp
dec
adc
lret
ret
cmp
push
jmp
lret
push
daa
cli
ret
shrl
push
add
int
imul
and
xchg
rcrb
or
fsubl
jb
pop
scas
hlt
push
fbld
add
out
cs
decb
mov
fmuls
and
add
sub
sbb
xchg
push
pop
adc
or
jne
fstpl
or
add
std
cmp
repnz
push
pop
mov
test
imulb
lods
jnp
pop
sbb
push
out
and
adc
adc
dec
subl
testb
cmp
stos
inc
mov
cmp
insb
cmp
fwait
and
movsl
jmp
movsb
push
cmpl
xchg
and
cmp
pop
mov
je
aas
xor
xchg
sub
mov
sub
dec
fst
cmp
jmp
jae
pop
dec
mov
or
add
mov
and
inc
scas
inc
aad
insl
xchg
pop
andb
and
mov
dec
mov
nop
stos
and
mov
clc
pop
and
ret
xchg
sbb
xchg
lahf
and
roll
pop
xchg
sub
fiadds
sub
cmp
fisubs
adc
or
sti
repz
and
lock
mov
in
push
fdivl
xor
sbb
bound
ds
mov
jp
dec
out
cmp
add
mov
mov
mov
add
je
test
or
mov
sub
das
jmp
jp
sti
sbb
decl
decl
xchg
sahf
jmp
ss
fists
adc
inc
pop
xchg
pop
fmull
push
jmp
test
es
sub
sub
cvtdq2ps
push
cmp
inc
mov
jne
call
gs
mov
sub
or
shlb
or
sti
pop
mov
xchg
out
mov
fcoms
inc
bound
cmpsb
push
sub
pop
jmp
xor
clc
sub
dec
push
xchg
jmp
sub
dec
jmp
cltd
sub
inc
dec
jmp
inc
jle
add
call
jne
fistl
sub
pop
adc
pop
jmp
dec
push
pop
adcb
cmp
sub
cmp
inc
xor
movsl
popf
mov
in
addr16
cmp
dec
fcom
fists
das
cld
dec
test
add
inc
or
or
lods
popa
pop
mov
pop
iret
rcll
movsl
pop
mov
cmp
dec
adc
insb
scas
loop
xchg
push
daa
sahf
or
mov
or
ret
and
adc
mov
mov
in
mull
xchg
xor
cli
mov
bound
sbb
cmc
lahf
jmp
fsubr
mov
sub
cmp
out
add
xor
push
fistpll
in
ljmp
jne
dec
popa
cs
ss
fbstp
rcr
jp
push
stc
adc
lret
scas
shl
cmp
push
sbb
adc
ja
and
dec
dec
stos
fsubs
mov
int3
sbb
cmp
sbb
js
stc
pop
test
sub
mov
or
clc
cmpsb
mov
inc
jmp
pop
sbb
cwtl
xor
shlb
mov
dec
imul
sub
in
xchg
sti
enter
mov
push
inc
xchg
lea
mov
cmp
lock
cmp
in
stos
testl
ljmp
adc
or
mov
lahf
icebp
and
or
inc
outsl
out
inc
xchg
dec
mov
enter
and
or
jg
mov
js
jg
push
adc
scas
je
nop
or
adc
pop
flds
adc
mov
xchg
mov
jp
dec
pop
enter
mov
add
or
push
mov
es
adc
popf
ret
jge
in
inc
inc
fisttpll
mov
cld
aam
lods
in
test
sub
sti
and
cld
adc
lods
std
movsb
jns
dec
mov
xchg
dec
mov
inc
lock
out
push
dec
adc
out
pop
scas
sub
mov
lods
mov
ret
jns
dec
inc
push
sbb
fs
ja
mov
xor
out
les
mov
mov
scas
push
push
stc
mov
adc
xor
add
cltd
lret
mov
xor
les
xlat
int
cmp
fistpll
movsb
and
dec
mov
xlat
sti
adc
mov
and
sub
leave
fistps
stc
rclb
call
sub
jmp
fnstcw
push
and
cwtl
sub
sub
mov
stc
xchg
add
ljmp
or
sub
dec
lea
cmpl
xchg
push
dec
xchg
push
scas
pop
sub
or
cmp
daa
inc
dec
and
bound
fcomp
imul
xchg
mov
mov
jno
mov
loop
push
inc
pop
xchg
cld
mov
in
bound
lea
movsl
cmp
cs
xor
inc
push
inc
or
push
push
xchg
outsl
xchg
cmp
dec
mov
aas
xor
adc
rclb
push
add
lock
out
ret
cli
and
enter
div
jge
mov
or
sbb
roll
call
inc
xchg
incb
jo
xor
test
inc
popf
scas
ljmp
mov
or
adc
leave
dec
rolb
jne
cld
push
inc
inc
pushf
loope
push
mov
mov
js
lret
add
xchg
xor
das
adc
jo
jge
mov
adc
jmp
cmpb
into
fists
xchg
pop
cli
js
and
in
push
pop
movl
jne
inc
pop
xor
lret
mov
xor
push
imul
sbb
lock
or
and
mov
jmp
pop
clc
cmp
or
imul
dec
loopne
dec
popf
inc
mov
sahf
mov
push
mov
push
and
ja
jnp
je
jl
mov
testb
addr16
movb
lcall
aad
jbe
pop
or
test
dec
push
mov
out
rcrl
add
cmpb
ss
mov
inc
je
mov
push
pop
or
iret
mov
outsl
adc
rolb
pusha
out
adc
test
subb
xchg
movntps
lret
movsb
pop
mov
xchg
add
hlt
cltd
cmp
cmp
repnz
sub
orb
sbb
arpl
xchg
mov
add
sub
js
add
adc
fnstenv
fwait
cmp
sbb
rorb
sub
xorl
in
cmp
in
mov
jle
or
dec
xchg
enter
lret
mov
ret
pop
dec
dec
add
jbe
xor
cmpsb
and
cwtl
in
adc
xor
ja
fidivrl
adc
sub
arpl
mov
rorb
pop
hlt
mov
mov
push
xor
sub
pop
mov
xchg
mov
js
mov
or
inc
inc
and
pop
inc
ljmp
cwtl
scas
dec
push
test
inc
ja
faddl
xchg
or
jl
testb
pop
jmp
test
add
sbb
add
adc
lds
or
xchg
pop
rorl
xchg
gs
jbe
sti
push
ret
movb
fsubp
mov
adc
sub
mov
mov
adc
or
add
and
or
and
sbb
jmp
push
daa
fwait
mov
stos
movsb
or
nop
mov
inc
ret
jp
nop
adc
push
push
push
in
and
sbb
int
inc
fimull
pop
in
test
pop
rcrl
sbb
and
das
and
fs
ljmp
add
les
loopne
jae
xchg
mov
imul
push
in
inc
lds
fdivrs
cld
sub
imul
mov
dec
push
jno
or
lea
mov
rcl
mov
fisttpl
mov
or
or
idivl
aad
hlt
dec
mov
add
mov
cmp
mov
or
fsts
or
addl
adc
enter
cmpsb
sub
push
and
push
cmp
stos
and
and
scas
data16
mov
je
push
orb
shlb
jne
xor
insb
jae
shlb
mov
je
idivl
jne
je
or
cmp
enter
out
scas
call
negb
and
cs
or
or
sbb
movsbl
dec
hlt
je
adc
das
push
adc
and
loope
cmp
fcompl
lret
iret
push
or
push
add
adc
stos
fcoml
roll
sbb
or
roll
or
leave
pop
dec
ja
cmpsl
xor
mov
cmp
xchg
dec
adc
popa
inc
jne
xor
and
rclb
push
shlb
push
and
cmpsb
sbb
into
sbb
lret
sub
xor
jle
cmpsb
adc
mov
test
cmp
stos
mov
push
and
inc
jg
push
lret
fldt
jne
test
jge
or
xor
push
cs
loope
jmp
sbb
push
mov
fmul
ljmp
ja
inc
mov
xchg
scas
loopne
cmpl
and
mov
nop
dec
mov
mov
imul
gs
test
test
je
mov
sbb
cmp
xchg
packssdw
ljmp
xchg
pop
cmp
and
fiadds
mov
adc
and
popl
rclb
lea
or
ret
rcll
mov
dec
jns
sbb
test
ss
xor
push
pop
xchg
pop
adc
pop
adc
xchg
pop
shl
mov
adc
xor
lock
adc
bound
dec
xchg
inc
xor
insb
dec
jle
rcrb
inc
loopne
sbb
sub
scas
pop
rorb
hlt
jo
adc
cmp
adc
rorb
das
aad
xchg
xchg
enter
mov
mov
adc
or
dec
jge
test
push
xchg
mov
xlat
push
fisubs
je
push
and
imul
pop
pop
mov
jb
xchg
inc
cmp
ljmp
lods
out
fimuls
test
pop
and
mov
les
jbe
xchg
or
in
stos
addr16
jle
or
adc
mov
out
push
cld
add
add
pop
jbe
dec
jge
loop
pcmpeqd
sarb
rorl
xor
int
js
lret
sbb
fs
pusha
push
jae
mov
je
jmp
mov
shl
cmp
cwtl
sbb
dec
pusha
stos
aad
out
mull
test
movsb
mov
ret
pop
mov
pop
dec
cmp
jl
sbb
and
loopne
jns
sbb
aaa
es
in
fcom
hlt
daa
mov
dec
dec
out
push
push
stc
inc
mov
rcll
inc
movsb
imul
inc
sbb
dec
xchg
sahf
add
loop
pop
inc
dec
adc
sub
out
aaa
adc
mov
xorl
mov
pop
das
in
lret
xchg
lock
adc
dec
test
and
mov
xor
pop
sti
jge
adc
dec
out
jmp
imul
aad
mov
mov
cltd
xchg
das
or
dec
or
aaa
lds
sub
cmp
shlb
lret
add
cmp
loopne
push
push
mov
mov
pop
sub
arpl
or
int3
pushf
sub
sbb
sti
int
fidivs
lcall
mov
nop
xchg
xchg
mov
push
pop
pop
or
rolb
add
inc
mov
inc
sub
lock
sbb
out
shr
mov
jbe
das
inc
aad
pop
leave
push
adc
leave
xchg
lcall
shr
mov
or
pop
hlt
test
xchg
sar
jbe
push
and
jg
cwtl
sahf
or
add
sbb
imul
push
je
repz
lsl
lret
nop
fstpt
sbb
mov
outsb
cld
xor
imul
add
repz
mov
add
xor
inc
dec
rolb
push
sbb
inc
xchg
inc
pop
and
or
je
adc
jne
call
cmp
and
jne
sub
mov
mov
push
pushf
loop
leave
jg
push
fwait
int3
rorb
or
sbbl
or
enter
in
rcrl
test
clc
cmpsb
inc
inc
adc
jo
inc
mov
and
xchg
mov
xchg
out
sbb
adc
or
cmp
je
loop
xlat
int
js,pn
jge
stc
jmp
leave
sub
sub
mov
fldl
inc
dec
clc
gs
push
sbb
out
lods
out
jnp
push
inc
pop
sub
push
inc
add
nop
or
adc
sub
cs
hlt
stc
jae
jnp
fists
iret
mov
dec
sub
lods
mov
sub
das
dec
in
stos
sub
dec
mov
icebp
mov
pusha
cmp
ljmp
mov
cmc
sub
lea
popf
pop
pop
mov
cmp
fs
push
cmp
sbb
add
pop
and
nop
jl
xchg
or
pushf
enter
dec
adc
jne
dec
das
out
out
pushf
and
push
jnp
rcrl
cmc
in
mov
adc
rcr
cmp
dec
jne
pop
pop
mov
dec
ja
cmp
test
mov
cmpsb
mov
popf
xchg
cltd
insl
fsubp
les
cli
sarl
jp
daa
mov
mov
inc
lds
mov
jecxz
test
mov
inc
xor
out
pop
push
ret
or
mov
out
add
push
js
xchg
ljmp
push
inc
das
divb
fildll
nop
add
sub
lcall
daa
clc
dec
dec
adc
loopne
enter
mov
pop
push
and
mov
adc
cmpl
clc
ret
inc
cli
repz
and
pop
hlt
sbb
inc
outsb
dec
sub
shll
cmp
inc
push
or
cmpsl
sbb
jg
and
and
xor
xlat
jmp
rol
test
scas
mov
push
adc
jo
icebp
in
cmp
or
mov
xchg
repz
in
loop
test
pushf
mov
xchg
mov
lods
adc
fstl
jp
call
nop
pop
inc
xorb
adc
cmove
addb
jbe
clc
ljmp
and
mov
lea
and
jge
ds
cmpsl
adc
xchg
mov
pop
int3
out
add
jl
sti
mov
cmp
mov
mov
push
dec
insl
arpl
pop
inc
xchg
fmul
loopne
in
and
inc
and
daa
incb
and
inc
aam
dec
push
sbb
xchg
cli
bound
mov
and
add
adcl
adc
scas
jecxz
or
adc
xchg
or
pop
jbe
cmpb
aam
cltd
aas
push
xorb
mov
jne
sub
push
mov
faddl
es
pushf
jo
dec
xchg
dec
mov
adc
out
std
and
repnz
adc
mov
sbb
lret
xchg
push
sub
shl
dec
jg
pop
fmull
add
nop
jne
lcall
sbb
and
aad
test
daa
or
xchg
and
in
clc
mov
clc
inc
xchg
mov
mov
out
pop
out
hlt
sbb
mov
xchg
inc
cld
pop
mov
repnz
clc
mov
xchg
mov
dec
xchg
push
lods
ficompl
push
adc
cmp
movsl
sarb
ss
pop
xchg
shrl
inc
incl
lret
add
idivb
sahf
loopne
out
dec
or
test
decl
cmpl
loope
adc
out
mov
cmp
and
in
bound
push
and
jle
in
jno
inc
add
test
or
inc
hlt
hlt
mov
leave
pop
jne
xor
xlat
les
lock
xchg
push
hlt
shr
pop
jmp
aad
push
inc
mov
enter
das
inc
and
adc
mov
lahf
imul
and
pop
lret
lds
fdivs
ss
cs
push
mov
into
and
ljmp
xchg
movsb
adc
add
or
adc
xchg
in
ljmp
lahf
push
ds
push
je
daa
stc
jecxz
dec
mov
repz
mov
movb
add
cmc
sub
sbb
out
and
or
leave
cmpsb
xor
leave
jle
loop
sbb
loope
push
fcmovnu
mov
jo
or
jne
sub
enter
jmp
ret
repz
cmp
mov
nop
enter
lcall
push
movsl
popa
jg
and
scas
dec
lock
popf
out
cmp
sub
mulb
cmp
mov
pop
movsl
jb
dec
out
ss
mov
push
cmpsb
sub
pusha
loopne
pop
jae
jnp
les
bnd
enter
and
sbb
loope
pusha
inc
jb
sarl
and
or
and
xor
lret
das
dec
pop
inc
in
pop
shlb
ret
lds
and
mov
inc
outsb
nop
sub
movsb
stos
and
sub
and
push
mov
add
std
pop
mov
mov
xor
orb
sbb
dec
out
jb
mov
push
cltd
or
pop
mov
and
push
mov
mov
push
dec
add
cltd
cld
jg
xchg
cltd
hlt
ds
mov
mov
jne
or
dec
in
icebp
sbb
push
xor
and
pusha
mov
add
cmc
inc
ret
push
adc
sahf
push
nop
xchg
and
lods
incb
push
in
jl
fsubrl
scas
sti
repz
cmp
push
inc
push
enter
dec
adc
add
adc
and
lods
jae
fs
out
cmp
or
push
js
adc
add
sbb
cmp
sub
outsl
push
inc
sub
or
jbe
ret
movsb
stos
jno
mov
mov
push
pushf
cli
mov
sub
cld
mov
mov
nop
push
or
int3
and
les
xor
sbb
mov
and
in
sub
in
popa
dec
pop
xchg
sbb
dec
test
enter
cmp
or
cltd
cvtps2pi
adc
inc
inc
and
out
cmpb
mov
xor
adc
dec
es
jne
andl
out
dec
dec
or
popl
outsb
dec
test
dec
jmp
inc
daa
rcll
adc
inc
mov
scas
int
push
sub
pop
rcrl
inc
push
lods
push
cmp
comiss
xlat
xchg
outsl
rolb
push
cld
push
insl
nop
pop
sbb
mov
fwait
sub
xchg
push
icebp
loop
jg
jb
repnz
pop
xchg
and
jl
inc
fs
bound
adc
push
inc
dec
icebp
cmp
ss
popa
adc
pusha
sub
sub
jmp
mov
inc
mov
cli
aam
push
xor
dec
mov
insl
pop
or
sub
or
xchg
jae
mov
dec
shr
out
pop
pop
sub
inc
pusha
and
les
mov
pop
cli
fistps
in
popa
jmp
cld
inc
adc
imul
mov
in
leave
shll
mov
cltd
or
push
ljmp
jno
movsl
sbb
imul
test
jecxz
xchg
mov
xor
loop
push
jmp
dec
nop
jl
js
xchg
lret
inc
sub
js
adc
xor
sub
movsl
sub
push
fwait
sbb
sub
mov
cld
inc
mov
ss
push
inc
dec
dec
pop
mov
iret
lahf
jbe
jns
insl
hlt
test
cmp
push
je
sub
cmp
cmp
sbb
ja
mov
push
or
pop
ds
add
cltd
test
out
cmpsb
sbb
jmp
lods
sbb
xlat
aam
push
enter
addr16
es
icebp
and
and
adc
std
pop
rorl
or
sub
sarl
inc
int3
lods
mov
inc
ret
iret
jmp
mov
fidivs
cmpsb
shrb
pop
inc
inc
hlt
pop
cmp
or
push
aaa
js
out
test
dec
mov
ds
popf
xchg
repnz
dec
pusha
xor
ja
aaa
dec
lret
lock
adc
cmpsl
in
test
lods
fsts
test
loope
inc
push
mov
jae
cmpsl
test
daa
pop
pushf
jnp
ficoml
rcll
daa
jne
fnstcw
pop
add
ret
pop
ljmp
je
push
dec
and
mov
adc
add
nop
pop
scas
cltd
int3
loop
add
push
mov
and
ficoms
cmp
roll
aas
rorb
adcl
cld
mov
pop
adc
jl
stc
pop
push
xor
add
jl
jle
pop
and
test
add
or
adc
jbe
ret
stc
or
inc
sbb
int
push
sbb
in
gs
and
and
pop
add
xor
sbb
enter
inc
or
sbb
or
or
or
fsubrl
leave
clc
sub
pushf
xor
xchg
mov
shll
test
shlb
fs
rolb
inc
push
mov
repz
lret
jo
insb
mov
cmp
outsb
sub
fld1
xchg
sbb
rolb
shlb
imul
in
xor
hlt
jnp
lfs
enter
roll
and
pop
mov
fldpi
add
insb
xorb
addl
inc
stos
or
cmp
sbb
bound
jno
ret
xchg
xchg
xchg
xchg
in
cmpsb
push
pop
insb
mov
pop
ret
push
or
push
cmp
das
or
shlb
push
push
cmpb
rol
outsb
mov
push
pop
pop
out
dec
or
or
push
push
movsl
jae
lahf
enter
add
mov
addps
push
inc
inc
mov
pop
or
mov
jg
addb
push
rsm
or
adc
add
push
mov
sbb
push
adc
fs
jo
adc
sub
sbb
xchg
push
add
and
and
adc
sub
dec
or
pop
lahf
xor
arpl
orl
mov
push
test
or
jae
add
or
lea
mov
or
jne
fidivrl
sbb
inc
or
je
test
dec
jo
pop
inc
jp
leave
cli
push
xchg
xor
fnstsw
dec
loopne
ljmp
jmp
add
mov
testl
enter
rclb
mov
out
jno
inc
repnz
leave
aad
pop
loopne
jae
and
imul
xorl
sahf
or
push
push
mov
lods
adc
dec
or
and
and
mov
push
push
mov
sbb
and
xchg
mov
inc
xor
shrb
add
and
pop
movsb
sub
cmp
mov
ja
xor
inc
and
sbb
hlt
add
ds
push
jb
icebp
sub
cmc
and
xchg
xchg
mov
dec
je
das
push
xchg
pop
mov
icebp
inc
push
or
sbb
and
popa
mov
mov
or
insb
push
pop
mov
mov
or
inc
int
add
je
adc
int3
add
cmp
dec
push
or
or
pop
push
movsb
stc
mov
and
in
inc
es
lods
stos
sub
dec
or
insl
and
mov
push
mov
out
mov
xchg
aam
mov
push
and
nop
orl
ljmp
pop
popa
push
cmc
lret
mov
dec
mov
mov
bound
inc
adc
jge
ja
sbb
jae
test
call
add
lea
push
push
xor
les
dec
les
inc
sub
xor
mov
mov
cmpsl
mov
lret
mov
nop
mov
rcrb
stos
bound
or
and
sub
pop
je
and
add
and
test
push
jb
add
push
cmp
les
pop
push
sbb
lahf
enter
mov
lea
cmp
nop
mov
xchg
jne
pushl
pop
fs
xchg
jno
in
cmp
xchg
pop
add
js
xchg
push
add
mov
and
push
push
fsubrl
jno
adc
jnp
mov
bound
sub
stos
leave
dec
sbb
pop
or
mov
or
sbb
jge
push
scas
pop
femms
dec
ss
xchg
xor
xchg
sbb
mov
outsl
sub
add
das
push
pop
sub
popf
xorl
cmp
rcrl
adc
inc
rclb
inc
daa
cmp
lea
cmp
jbe
sub
lea
dec
js
dec
les
mov
inc
cmp
scas
mov
cmp
mov
and
cmpsb
mov
adc
push
mov
insb
sub
sbb
add
in
repnz
pop
inc
dec
popa
out
test
jo
mov
mov
push
add
test
inc
and
mov
lret
pusha
mov
stc
inc
inc
inc
mov
cmp
je
xchg
mull
fcomps
adc
adc
jle
push
mov
enter
adc
jnp
sub
add
repnz
or
jno
mov
cmpsl
pop
push
xchg
in
adc
repz
mov
ljmp
push
cwtl
sub
inc
cmp
dec
inc
and
sub
outsb
or
jnp
and
fs
js
jmp
sub
mov
sub
pop
fs
push
push
xchg
imul
xchg
shrl
push
push
lods
ljmp
fwait
das
fldt
jne
clc
ds
or
adc
pop
jne
or
sbb
add
mov
es
mov
ret
cmp
mov
or
cmpsb
mov
xchg
cmp
cmpl
stos
mov
decb
dec
mov
lods
daa
mov
dec
lods
stos
flds
rcl
mov
cmpl
or
sub
movsl
pop
ret
cmc
sbb
scas
xchg
cmp
or
push
imul
push
je
ficompl
rcrl
inc
pop
loop
inc
add
ds
into
leave
cmpsl
ss
or
add
push
inc
imul
mov
mov
scas
push
jno
fists
pop
mov
add
enter
push
adc
pop
mov
push
push
sub
lods
and
stos
popa
pushf
sub
xor
in
mov
repz
je
fxam
std
rorb
ja
movsl
xchg
dec
cli
push
mov
scas
lds
add
push
mov
je
shll
popa
inc
mov
mov
push
adc
and
lods
push
xchg
out
popa
or
add
adc
loope
sbb
sub
and
and
ja
mov
loop
sbb
pop
sub
sub
addl
out
or
sbb
inc
adc
scas
mov
or
movsb
mov
lods
push
mov
mov
push
sbb
push
sbb
daa
cmp
push
mov
in
or
xchg
sbb
pop
adc
add
adc
adc
out
push
ret
les
popa
dec
lret
sub
es
enter
sub
ds
cld
and
dec
hlt
in
sar
or
in
adc
dec
imul
adc
cmp
pop
movsb
xlat
mov
cmpsb
push
out
mov
adc
add
fsubl
mov
cs
sub
jmp
and
iret
lods
rorb
repz
mov
pop
push
push
mov
cld
cmp
fwait
sub
es
int3
adc
std
std
insb
jnp
mov
lret
in
cld
enter
pop
pushf
arpl
frstor
das
popf
mov
daa
iret
inc
and
repz
fcmovnbe
mov
mov
sub
or
push
inc
flds
mov
adc
or
mov
sub
push
out
mov
popf
pop
xchg
push
popf
stc
cld
jns
add
jno
fs
pusha
insb
je
pop
test
loope
xor
mov
mov
rcrb
pop
xor
dec
test
cmpsb
or
fcmovnb
inc
pushf
imul
ljmp
movsb
aaa
pop
enter
pusha
cmp
testl
mov
sub
cltd
inc
les
mov
jbe
inc
jbe
jmp
cmp
pop
in
daa
sbb
fidivrl
push
mov
pop
push
or
notb
push
add
cmp
aaa
stc
js
shlb
andb
mov
imul
sub
mov
leave
iret
pusha
jns
cltd
dec
xor
mov
insb
sub
sbbb
jne
mov
dec
mov
dec
xor
rcrl
or
fwait
xchg
popa
xor
cmpb
sbb
popf
xor
cmpsl
mov
lea
add
sbb
push
and
pushf
lea
dec
repnz
jecxz
repz
arpl
stos
shlb
sarw
or
cmp
lahf
jb
jno
sahf
pop
pop
jmp
mov
push
or
movsb
in
ljmp
repz
xchg
stos
pop
push
cmpsb
sbbl
xor
fimull
ss
popf
loop
pop
into
in
mov
out
dec
std
xor
adc
sbbb
test
or
aas
dec
pushf
adc
adc
xchg
scas
dec
fdivs
mov
inc
xor
push
fiadds
jl
push
push
jge
xchg
loop
lret
test
add
fisttpl
sub
or
mov
adcb
cmp
clc
jg
xlat
dec
lea
inc
cmp
or
pop
adc
es
sub
adc
imul
xchg
lea
pop
adc
push
out
dec
lret
push
jb
mov
fadds
iret
or
xor
lods
aas
iret
add
test
jne
in
cli
jecxz
sbb
iret
inc
loop
dec
fs
enter
imul
and
xor
cmp
aaa
adc
test
fs
jbe
popf
aad
out
sbb
aas
push
push
bound
dec
push
xlat
mov
lods
orl
or
push
push
jno
mov
cwtl
mov
or
dec
mov
mov
ficoms
movb
xchg
or
push
es
xchg
push
lea
lahf
cld
jns
xchg
movsl
push
loopne
jno
sbb
push
and
icebp
std
push
sub
movsb
xchg
mov
mov
dec
mov
xchg
fcomps
jl
je
bound
pop
enter
stos
xor
cld
repz
pop
mov
adc
lds
lock
mov
and
push
in
mov
pop
sysexit
ret
mov
or
sbb
lock
sbb
pusha
imul
lods
jae
aam
sbb
or
js
mov
or
ret
and
inc
sti
jo
test
popf
cwtl
mov
sbb
lods
les
sbb
inc
inc
das
or
pop
mov
enter
rclb
inc
dec
jle
cmp
lret
icebp
jmp
stos
cmp
jge
push
lods
sbb
andl
and
cs
stos
and
shl
frstor
lcall
dec
and
subb
out
push
fsubs
xor
and
fsubr
cmpsb
stc
inc
mov
enter
add
lock
push
movsl
adc
jbe
jmp
and
or
or
test
sub
mov
rolb
adc
daa
je
nop
repnz
and
push
or
insb
mov
jb
adc
mov
push
movsl
stos
jp
popa
mov
xchg
jne
dec
jmp
add
imul
sub
je
arpl
cltd
mov
mov
test
in
arpl
aas
push
jge
inc
and
and
or
xchg
sub
jp
sbb
cmp
ret
mov
negl
dec
fdivs
sub
xchg
mov
pop
xchg
js
outsl
jle
in
movsl
aaa
mov
in
cmp
add
xchg
sbb
fstl
daa
adc
lret
inc
mov
sub
cmp
push
mov
push
add
push
or
imul
and
dec
mov
sbb
sbb
inc
test
cmc
or
es
in
imul
xchg
xlat
jbe
daa
inc
sbb
push
dec
push
dec
or
rorb
or
pushf
repnz
xlat
xchg
cwtl
decb
add
mov
jp
xor
test
dec
cmpsb
sub
aas
mov
test
mov
pop
cld
je
dec
stos
popa
push
jns
movsl
jo
mov
outsl
push
pop
pop
cmp
iret
jecxz
es
or
sub
js
pop
sbb
or
adc
dec
or
push
jmp
xchg
push
lahf
push
xchg
adc
sub
add
xchg
inc
add
fs
nop
pop
mov
sub
pop
in
cmp
or
mov
xlat
jo
movsl
push
adc
fisubs
push
sbb
hlt
pop
jne
adc
or
out
push
and
mov
jbe
dec
xchg
ror
cmovbe
inc
imul
shrb
das
xchg
insb
lods
lret
movsb
mov
rcr
mov
cmpb
jge
sbb
dec
popf
inc
jp
mov
sub
sub
daa
jne
shrl
scas
adc
cmpsl
jg
out
push
jns
fisttps
cld
inc
stc
cmp
and
mov
js
je
xchg
push
ds
xchg
or
bound
sub
cld
push
movsb
and
lret
rcrl
push
test
rclb
faddp
jmp
inc
pop
rorl
or
mov
loopne
mov
and
and
in
sbb
add
fisttpll
fsubrp
and
rorb
aas
mov
cmp
outsb
xor
repz
leave
push
les
jle
xchg
aad
cmp
add
mov
call
notb
stc
and
and
and
mov
pushl
loop
imul
and
movsl
fdiv
shll
pop
mov
loop
push
notb
pop
cmpsb
jb
aas
mov
sub
dec
sub
js
or
scas
pop
jmp
ljmp
xchg
enter
jge
sbb
xor
cmpsb
out
dec
clc
mov
out
daa
push
and
test
inc
hlt
pushf
push
clc
xor
in
movsl
ds
gs
mov
pushf
sub
mov
or
arpl
push
add
out
in
jb
push
mov
jnp
push
scas
cmp
sub
jp
cs
rclb
cmp
movsb
sub
push
inc
rolb
inc
jns
enter
cmpsl
jle
pop
sbb
push
pop
test
mov
sub
sbb
cmp
and
dec
and
rclb
mov
enter
lds
xor
mov
das
mov
adc
test
jmp
popa
ljmp
cmpsl
push
xchg
jg
jno
pop
stc
xchg
nop
adc
adc
clc
fdivrl
loop
stos
leave
or
les
pushf
cld
loope
icebp
into
jbe
dec
out
pop
xchg
and
push
cmp
scas
or
or
cmp
movl
push
inc
dec
push
and
or
imulb
and
sbb
mov
sub
das
subl
ficompl
mov
out
mull
or
popa
bound
xchg
bound
and
cltd
dec
loop
adc
clc
sti
sub
dec
cmp
imul
icebp
push
xchg
or
add
sahf
shll
sbb
repnz
or
pop
je
in
push
scas
enter
jo
inc
outsl
lods
mov
pop
lcall
adc
cltd
pop
sbb
adcb
xor
cmc
and
or
fs
adc
xchg
push
mov
dec
jmp
dec
jo
jne
popfw
ds
and
daa
je
and
xor
sarb
xor
popa
cwtl
xchg
adc
dec
adc
fisubl
jl
jmp
out
mov
add
adc
pop
mov
and
inc
daa
shll
rcll
icebp
movsb
cmp
daa
xchg
scas
pushf
mov
xchg
dec
cmp
mov
cld
rclb
bound
sbb
mov
add
add
mov
jmp
lock
sub
mov
cltd
js
cmp
pusha
pop
mov
cwtl
push
mov
dec
adc
add
shlb
jmp
insb
cmp
movsb
repnz
adc
mov
adc
mov
sub
jecxz
adc
sub
or
fldenv
or
scas
pop
mov
sub
adc
fsubl
and
jp
arpl
stc
mov
lods
adc
pop
inc
cmpsl
jle
push
ja
fsubrl
xchg
adc
pop
pop
fs
in
push
mov
gs
mov
mov
lock
mov
xor
imul
and
sbb
sarl
test
push
jl
loop
fstpt
mov
push
cmp
jge
int
mov
bound
pop
or
fs
sbb
mov
xor
lds
ljmp
inc
cmp
or
or
or
mov
nop
test
mov
or
adc
or
ret
nop
and
popf
popa
dec
fists
rorb
or
push
xchg
adc
adc
es
sub
or
sbb
jp
hlt
adc
jp
hlt
sbb
jnp
cmp
xchg
pop
add
fistps
pop
js
dec
or
cmp
push
or
and
adc
les
sub
imul
imul
jle
jmp
or
leave
scas
lret
inc
mov
aam
mov
int3
jae
lret
fcoml
push
cli
jge
sub
jmp
rcl
sub
sbbb
sub
xchg
lods
dec
rcll
sub
pop
ret
fcmovnb
pop
leave
sub
roll
xchg
sbb
sbb
and
pop
inc
sub
dec
adc
mov
inc
dec
jne
daa
push
sub
xchg
pop
push
ficompl
pop
xchg
js
xlat
aaa
jo
and
sbb
mov
movsb
add
sbb
jmp
pusha
and
lds
pop
sub
mov
lods
idivl
loope
mov
adc
fmul
mov
scas
lods
push
and
in
xchg
push
leave
xchg
rorb
or
cmp
sar
mov
push
and
pop
sarb
mov
sub
jmp
mov
imul
dec
adc
cmp
mov
or
inc
fmuls
in
or
les
das
stos
mov
xor
adc
out
jno
or
jg
aam
shlb
mov
mov
push
jne
bound
pop
xchg
adc
ljmp
mov
test
cli
mov
sub
sub
movsb
fiaddl
imul
push
add
sbb
ffree
lods
xor
aas
and
sbb
inc
shl
daa
mov
mov
mov
sub
mov
bound
sub
xor
push
sbb
mov
jnp
inc
out
lahf
daa
push
sub
xchg
xchg
add
sbb
pop
rcl
fnstsw
fstps
js
mov
rcrb
sbb
shl
arpl
das
xor
push
inc
insb
sbb
repz
mov
adc
add
sub
push
mov
push
pop
ja
pop
into
sub
pop
jl
fcoms
sub
or
stc
sub
nop
cmp
or
cwtl
jae
loopne
dec
add
stos
aas
pop
mov
insb
test
fwait
cli
lea
ljmp
sub
roll
mov
mov
lahf
push
fisttpl
and
test
mov
jmp
mov
pop
dec
ror
pop
sbb
jl
add
xchg
mov
fistpll
sub
out
pusha
mov
cwtl
mov
mov
stos
cmp
mov
xor
inc
jne
push
lods
push
imul
jg
fmull
ret
mov
cmc
icebp
pushf
lret
xchg
adc
mov
xor
pop
sub
mov
repz
mov
fwait
stos
cli
lret
movsb
push
enter
aam
mov
or
dec
cmp
mov
and
jle
xor
xchg
mov
mov
sub
xor
sub
add
cmpsb
adc
sbbb
and
push
and
pop
jg
movsl
cmp
popa
int3
or
mov
inc
pop
leave
pop
pop
mov
jge
xor
xor
sar
cmpsb
es
ret
inc
subb
add
notrack
sub
inc
gs
mov
push
aam
pop
aas
pop
and
pop
adc
and
xor
fistpll
or
xchg
loopne
bound
and
dec
rclb
mov
xor
addr16
inc
cli
mov
mov
cli
iret
mov
outsb
dec
mov
mov
ljmp
dec
or
popf
fnstcw
and
xchg
sbb
or
xor
cmc
or
test
cmc
lcall
cmp
jne
and
or
mov
int3
in
push
pusha
sbb
test
jne
push
pushl
mov
stos
test
cmpsb
mov
and
inc
mov
test
lret
repz
les
lock
jg
dec
jbe
pop
push
sub
jp
xor
or
cmp
mov
push
pop
mov
or
dec
xchg
sbb
sub
adc
sahf
push
pop
push
insb
fwait
nop
popa
adc
mov
adc
jb
push
push
insl
xor
jp
cmp
dec
adc
adc
mov
sub
jle
iret
out
and
add
pop
push
pop
movsb
es
insb
stc
das
jo
and
mov
mov
idivb
and
aas
cmpsl
pop
fildl
mov
cltd
add
mov
iret
fs
lret
sub
cld
inc
movsl
movsl
scas
in
mov
call
mov
int
cltd
jp
mov
and
xchg
aam
push
frstpm(287
inc
and
dec
fs
push
sub
and
addr16
push
je
mov
and
mov
stc
cld
insl
jl
push
xor
push
nop
loopne
jl
or
ja
gs
push
hlt
cwtl
out
cli
or
sub
lock
mov
sbb
dec
push
sub
mov
nop
call
jmp
jmp
ret
cmp
sbb
jecxz
loop
fstpl
popa
xchg
rorl
pop
aam
aaa
in
in
add
daa
aam
int
ss
rolb
imul
test
fsts
call
leave
mov
push
pusha
sub
gs
inc
sbb
imul
les
shlb
lret
or
jo
xor
shr
sahf
lock
pop
jp
testl
sbb
outsb
mov
add
push
cmp
ljmp
dec
sbb
int
xor
in
jge
loop
pop
jns
xchg
xor
sub
int3
call
add
stos
xchg
jnp
daa
dec
xor
sbb
je
or
cmp
je
fs
mov
repnz
das
repnz
adc
loopne
hlt
and
jp
and
jno
adc
pop
push
push
lods
shll
movb
adc
mov
inc
inc
dec
jmp
jge
mov
inc
gs
dec
cmpsl
test
je
mov
sbb
inc
insl
xchg
pop
orb
inc
mov
ficompl
or
lcallw
push
leave
fld
adc
mov
adc
lods
adc
daa
lods
pop
out
popf
test
in
fstl
jo
pop
xchg
insl
loopne
dec
je
lods
jmp
dec
sti
imul
jae
sbb
dec
push
adc
cmp
sbb
inc
pop
int
fcoms
inc
push
pusha
ds
add
sub
cmp
pop
dec
push
mov
fdivrs
push
fsubrs
into
lcall
mov
ja
sub
cmpsl
inc
jnp
ss
in
jp
inc
sbb
xor
cld
adcl
jmp
lea
sub
into
rorb
push
xchg
push
cmp
mov
leave
mov
popa
dec
xchg
xor
pop
fiadds
ret
adc
cld
call
push
pop
daa
loopne
and
dec
or
inc
and
dec
pop
dec
xor
cmp
loopne
add
fs
inc
lea
fmull
ret
fistps
xchg
push
inc
jo
ss
hlt
jg
dec
sarl
mov
fisubl
leave
add
push
lock
andb
inc
adc
into
adc
mov
cmp
sub
out
inc
and
xchg
aas
sub
dec
mov
cmp
fsts
sbb
cmpsl
sub
popf
mov
mov
pop
fisttpl
mov
fsubl
mov
inc
add
fstpt
rol
mov
ds
ljmp
sub
or
inc
xchg
aam
iret
nop
shrl
mov
add
std
xchg
xor
cmc
inc
dec
enter
push
cmp
sub
sbb
cs
lcall
cwtl
inc
das
inc
sbb
jg
mov
lods
sub
push
add
int3
adc
and
jae
test
push
and
roll
int3
xor
mov
lock
jmp
sub
and
fcompl
lock
leave
imulb
enter
adc
sbb
cmp
add
loopne
add
push
or
sbb
or
inc
adc
inc
adc
push
xchg
ljmp
aam
sub
mov
pop
and
and
mov
out
mov
and
push
xchg
call
ret
gs
sub
xor
inc
mov
or
fsubrl
sarb
xlat
xchg
mov
inc
push
fsubrs
inc
es
adc
pop
adc
mov
shll
cmpsb
daa
mov
in
xchg
inc
xor
in
mov
cld
inc
adc
sbb
testb
or
pop
aad
push
sbb
jae
jno
jnp
push
lahf
lret
dec
and
jnp
jb
pop
lods
pop
icebp
or
dec
lods
push
sub
mov
add
mov
sub
push
cmp
or
enter
mov
or
lods
imul
scas
sub
xor
frstor
in
and
nop
and
cwtl
aam
fnstcw
cmp
ret
jg
nop
cli
repnz
adc
and
dec
pop
sub
pop
addr16
and
bound
or
mov
stc
adc
sbb
and
jge
cld
jl
test
add
dec
mov
mov
and
clc
xchg
clc
xor
inc
scas
xor
mov
push
sbb
inc
inc
nop
in
xchg
rorb
and
mov
and
push
push
stc
inc
lret
mov
dec
pop
pop
das
loop
loop
push
and
push
enter
outsl
jno
jge
jo
lret
dec
xchg
xlat
cltd
lret
inc
adc
sub
xchg
inc
loop
sbb
dec
mov
pop
xor
mov
push
push
hlt
cli
insb
xor
adc
cmp
test
sti
push
popa
inc
mov
mov
inc
inc
xchg
das
mov
adc
mov
xor
int
mov
dec
or
push
jle
cmovbe
and
mov
or
sbb
bound
push
test
jb
sub
cvtpi2ps
test
push
aas
jo
je
cmpl
inc
push
jb
xchg
fld
jno
push
xchg
inc
sbb
jae
cmpsb
mov
in
les
and
jge
pop
mov
lret
lds
mov
mov
and
clc
inc
cld
xchg
fsub
cmp
xor
int3
cmc
push
jg
incl
xchg
mov
js
bound
scas
pushf
mov
xchg
out
je
mov
jg
insl
xchg
cmpsb
xchg
in
adc
cmc
jo
push
inc
jle
mov
imul
adc
push
int3
add
inc
xor
or
mov
sti
jecxz
sbb
sbb
out
dec
dec
sahf
fsubl
inc
repnz
mov
mov
rorl
fs
sub
das
mov
xchg
out
cmp
pop
inc
in
ss
scas
je
dec
hlt
xorl
inc
sub
clc
mov
loopne
ret
clc
adc
icebp
sbb
test
mov
sbb
nop
sbb
add
xchg
pop
out
dec
push
or
repz
inc
mov
push
adc
mov
sub
push
mov
sub
or
dec
dec
mov
lgs
icebp
sub
ret
aas
mul
sbb
mov
js
mov
push
enter
sbb
sub
adc
push
or
pop
push
xlat
xor
sbb
adc
sbb
pop
push
adc
push
js
dec
mov
adc
aaa
in
mov
enter
mov
mov
adc
jge
or
jg
jmp
pop
call
pop
xor
xlat
stc
inc
mov
push
roll
adc
push
push
in
pop
mov
adc
sbb
cs
push
push
or
sbb
call
mov
dec
adc
push
xchg
xchg
mov
push
xchg
dec
fs
xchg
sti
sub
lods
dec
xchg
aam
enter
sbbb
sbb
xchg
inc
cmp
xchg
xchg
incb
bound
movl
outsb
test
add
scas
in
xor
andb
mov
into
mov
cld
lret
mov
pop
ljmp
inc
inc
mov
into
and
dec
mov
jne
and
je
jne
and
aas
and
jp
rclb
negb
add
push
jno
push
in
inc
pop
cmp
cmp
fidivl
andl
cmp
shll
mov
add
ja
frstor
add
loop
mov
or
jp
inc
and
dec
push
std
push
inc
xor
adc
sub
cmpl
mov
sbb
and
mov
cmp
sub
and
dec
cmp
push
popf
push
je
add
jo
ljmp
flds
ja
pop
cld
adc
push
fcoms
orl
rcl
in
dec
sub
adc
sub
pop
and
sti
jmp
pop
pop
or
push
adc
push
es
or
inc
in
or
mov
je
dec
xchg
mov
mov
test
je
jo
test
sbb
adc
dec
lea
sub
sub
scas
and
mov
test
adc
mov
inc
ds
push
xchg
xor
scas
andb
adc
lds
sub
repz
js
cmpsl
pop
mov
sahf
inc
sbb
sbb
sub
movsl
xlat
mov
inc
jp
movsl
push
xchg
adc
and
sub
test
and
gs
inc
shlb
xor
jnp
inc
fisttps
aam
mov
sbb
nop
and
enter
out
popf
jns
lock
loopne
outsb
pushf
popf
jns
jo
clc
movsl
push
ret
negl
or
or
lret
sub
and
popf
rcll
es
mov
jo
cmp
sub
jmp
pop
fidivs
jmp
xor
push
clc
bound
cmp
inc
xchg
pop
mov
xchg
and
cmp
nop
jne
add
push
clc
mov
pop
sub
notl
insb
sub
push
xchg
xchg
jg
rorb
testb
lret
aaa
or
pop
movsl
xchg
cmp
jl
mov
xor
bndldx
and
pop
ficoms
sti
lds
inc
xchg
cltd
addb
push
cli
sarb
inc
mov
sub
lahf
inc
dec
lahf
push
leave
imul
cmp
ljmp
dec
xor
gs
js
push
decb
dec
clc
pop
stos
int
out
pop
addr16
mov
jne
push
fdivrl
pop
fistps
or
mov
lock
xchg
sbb
pop
in
cli
gs
cmpsl
cmpl
andl
adc
jg
mov
jp
shrl
or
pusha
repnz
push
push
push
push
stc
insb
leave
sbb
dec
movsl
or
mov
cltd
sub
lret
dec
pop
mov
bound
or
dec
gs
fs
xchg
add
cmpb
xchg
jmp
rolb
es
pop
or
sub
adc
bound
mov
push
push
das
orl
dec
jo
cmp
jns
sbb
fdivrl
mov
xchg
adc
mov
adc
mov
add
cmp
imul
mov
sti
add
dec
adc
mov
and
push
int3
and
call
jecxz
and
adc
add
test
fld1
pusha
cmpw
ja
xor
push
sub
or
mov
subb
xchg
fucomi
sub
insl
out
aaa
ja
ficompl
jne
cwtl
fisttpll
mov
jb
lds
dec
add
sub
xchg
adc
sub
xor
or
adc
mov
or
or
mov
call
or
clc
and
push
mov
inc
adc
je
mov
xor
std
adc
or
mov
in
sbb
inc
jo
sub
test
je
shll
inc
sub
or
mov
mov
add
lret
fs
add
adc
and
js
adc
lods
jno
inc
add
mov
rcr
dec
ret
scas
and
jge
lret
or
dec
sub
jecxz
sbb
bound
xor
lods
sbb
jecxz
test
push
add
pop
sub
les
data16
xlat
pop
mov
gs
mov
cmp
add
out
pushf
or
mov
or
daa
add
outsb
insb
ret
je
mov
out
add
je
xchg
mull
xchg
xor
xchg
sbb
and
adc
lahf
push
sahf
adc
std
dec
or
stos
lea
gs
mov
ret
inc
pop
cmpsl
icebp
enter
pop
and
pusha
xchg
test
aaa
add
cld
out
adc
add
cmpsl
xchg
test
add
cmpb
jecxz
mov
cmp
xchg
add
add
add
les
add
or
vpabsb
in
out
cmp
or
and
das
outsl
lea
in
inc
or
jmp
push
mov
or
push
add
adc
add
pop
pop
icebp
or
rcrl
rorl
mov
cwtl
dec
push
orb
daa
jns
test
clc
pushf
jg
sub
mov
inc
cwtl
pop
movsb
sub
pop
adc
lret
loop
hlt
ja
xchg
popf
stc
push
adc
jns
cmpsb
and
jae
adc
push
add
lahf
cmpsl
push
sub
mov
inc
sarl
sub
fs
out
push
jno
cmc
dec
loop
lahf
cmp
movsb
adc
cli
cltd
lods
leave
or
adc
mov
loopne
test
or
pop
and
adc
ljmp
mov
movups
loope
pop
or
mov
jno
or
add
mull
pop
cmp
das
or
leave
sub
sbb
and
pop
and
sbb
dec
cmp
mov
jle
pop
lea
sbb
add
push
pop
mov
leave
and
cmp
iret
and
adc
cmovb
add
sbb
test
and
hlt
add
xchg
inc
out
jae
xchg
mov
xlat
clc
pop
and
or
jb
pop
movsb
mov
dec
mov
cwtl
repnz
push
stc
or
nop
das
dec
mov
jge
ret
and
push
dec
dec
sarb
push
ja
xchg
mov
mov
push
adc
sub
movsb
cltd
imul
sub
dec
dec
cmp
fsubp
cltd
ret
mov
popf
icebp
sbb
and
add
test
stos
adc
bound
add
cmpsl
imul
pop
std
ret
mov
add
mov
cli
lcall
repnz
inc
xor
cld
and
mov
iret
jb
in
int3
nop
pushf
in
stos
adc
mov
jne
adc
pop
cltd
adcb
loop
inc
xor
enter
pop
es
or
add
xchg
mov
dec
push
and
mov
inc
add
test
pop
sub
add
mov
jne
dec
pop
jo
push
ja
mov
add
push
jmp
gs
cli
sahf
shrl
or
mov
test
cli
fwait
imul
dec
inc
or
xor
jl
push
lret
jae
push
adc
pop
orb
pop
aad
add
or
add
xchg
inc
adc
les
sbb
push
mov
mov
cltd
dec
mov
dec
mov
lea
xchg
add
push
sarb
lods
adc
cmp
xlat
adc
add
and
xor
xlat
movsb
jnp
pop
in
cmpsb
adc
or
stc
inc
and
push
and
inc
stos
mov
pop
lret
sbb
cli
inc
add
cmp
movsb
mov
stos
test
jg
es
daa
int3
push
jae
mov
repnz
pop
arpl
mulb
mov
dec
pop
cmc
cmp
xchg
pop
dec
mov
adc
stos
test
sbb
in
xorb
test
dec
shlb
xor
ja
xchg
ja
xchg
and
sbb
add
cmp
mov
je
jmp
inc
mov
jnp
cld
adc
or
dec
xchg
int3
fdivrl
lods
aas
hlt
xor
adc
fldl
je
or
push
push
adc
adc
push
lods
test
dec
addr16
add
mov
repz
push
negb
mov
scas
ret
incb
inc
or
enter
in
sbb
or
cmc
push
sub
xchg
mov
aas
cmc
inc
into
xor
adc
push
inc
pop
aam
cmpsb
mov
and
enter
lea
mov
add
sbb
mov
push
sbb
insl
sub
push
mov
dec
sub
inc
in
or
ds
clc
dec
mov
push
loope
and
loope
ret
popa
stos
inc
and
sbb
adc
sahf
pop
push
pop
cld
mov
insb
pop
and
push
adc
xorl
orb
bound
gs
aam
nopl
decb
lods
xchg
or
jl
jge
leave
push
xor
adc
andb
test
inc
inc
xor
lea
test
ror
jmp
out
jne
sti
sahf
mov
inc
movsb
push
testb
dec
lods
jo
cld
loope
cmp
pop
mov
sbb
sbb
or
mov
daa
push
pop
test
sbb
mov
dec
rcr
mov
push
jecxz
mov
cs
rcrb
aaa
cwtl
jmp
lods
and
push
in
dec
loopne
mov
decl
pusha
in
or
xchg
jns
daa
ja
movsl
add
addr16
jbe
mov
push
divl
sub
or
fstps
xor
popf
sbb
popf
stc
sbb
dec
je
push
or
sub
adc
sbb
and
sub
adc
das
sbb
dec
mov
push
inc
and
fs
push
mov
fs
inc
sub
pop
sub
ljmp
xor
sub
jmp
inc
add
inc
add
inc
fidivrl
jbe
jno
leave
inc
or
inc
daa
push
adc
push
push
lret
push
lret
mov
inc
scas
int3
fstpt
push
cmp
fbstp
pop
cwtl
lret
addr16
lods
dec
icebp
xchg
or
iret
cbtw
sub
stc
jno
lock
dec
mov
orl
jp
decb
aaa
push
and
hlt
outsl
sarl
add
push
and
cmp
jnp
rolb
fmuls
xchg
mov
dec
in
addr16
std
mov
xchg
push
jo
fstl
inc
and
pop
pop
std
inc
mov
mov
cmc
sub
aam
pop
jo
dec
adc
out
andb
inc
pop
push
testl
inc
call
fwait
lahf
fstps
and
xor
adc
push
cmp
or
sti
cmp
movsb
fwait
mov
jno
dec
add
xchg
loop
cmp
jne
lods
cmpsl
hlt
rclb
mov
nop
aas
mov
mov
dec
call
sub
push
dec
das
jmp
cmpsl
or
and
in
rcrb
test
push
sti
dec
leave
sub
hlt
mov
inc
add
pop
pusha
rcll
push
or
pop
and
fistpl
pop
sub
mov
insl
and
mov
sub
and
cmp
xor
sbb
xchg
xchg
hlt
jno
fidivs
std
out
daa
je
rcr
lahf
fsubrs
ficompl
inc
cmc
mov
cmp
mov
test
sbb
inc
sbb
push
push
cmpsb
imul
insl
lahf
mov
jle
pop
inc
push
sub
sub
mov
sti
and
inc
imul
cmp
das
mov
sub
sub
ljmp
insl
call
icebp
push
jae
jle
xor
pop
xchg
mov
mov
pop
and
sbb
por
xchg
gs
leave
push
or
enter
cltd
jbe
adc
ret
jge
mov
mov
xor
xchg
jl
inc
sbb
xchg
popa
dec
or
repnz
lcall
inc
sub
mov
shrb
jo
sbb
xchg
jae
jg
mov
insb
pop
and
icebp
mov
movsb
out
repnz
popf
movsb
scas
jae
inc
inc
push
nop
mov
jae
decb
dec
and
sub
mov
adc
aas
ficomps
lret
push
inc
addr16
mov
pop
push
xchg
adc
rorb
mov
or
scas
adc
jno
jmp
xor
pop
pop
test
fs
sub
and
inc
leave
andl
xchg
sarl
ss
dec
jne
repz
inc
push
and
in
inc
sub
mov
lock
mov
jo
das
adc
xchg
sti
popf
push
xchg
sbb
test
sbb
call
or
enter
nop
enter
cmp
mov
sub
sbb
mov
and
inc
dec
out
or
cmp
or
and
dec
jae
mov
xchg
push
add
adc
orl
nop
or
scas
add
or
testb
xchg
imul
jg
aam
add
and
jns
xlat
daa
dec
push
stos
or
jge
pop
push
jl
jmp
das
mov
sbb
fisttpll
or
les
adc
int3
jle
mov
movsl
pop
pop
in
mov
push
pop
outsb
enter
data16
scas
jbe
sbb
in
jmp
mov
daa
mov
addr16
sbb
int
iret
rcrb
jl
xor
stos
adc
xchg
mov
leave
jnp
pop
test
je
mov
and
dec
xorl
mov
and
fmull
and
out
lret
inc
and
adc
sbb
adc
call
mov
or
mov
je
out
xor
es
flds
add
mov
test
negl
nop
leave
imul
and
sbb
sub
dec
or
fs
out
shr
dec
and
cwtl
mov
sbb
xor
scas
xchg
or
out
cmp
inc
jmp
and
sub
inc
adc
mov
and
hlt
or
mov
add
sub
repz
outsl
push
mov
xchg
push
in
cli
mov
xchg
jnp
xchg
mov
push
and
mov
add
push
idivb
or
mov
mov
dec
test
sbb
or
cld
ss
or
daa
fwait
pop
mov
in
jno
shlw
lds
xor
aam
cld
push
add
aas
je
insb
jge
or
aaa
fdivrs
fisubrl
mov
sub
mov
push
and
or
std
stc
mov
and
outsb
pop
daa
xor
or
daa
push
mov
dec
xlat
fs
sub
test
sub
into
rcrl
and
jg
iret
mov
cld
jne
testl
sahf
daa
push
ret
jmp
push
xchg
xor
xor
lret
fstl
mov
loope
mov
jg
or
mov
or
jecxz
sub
xor
enter
testl
jge
adc
lock
dec
pop
cld
mov
shrl
mov
js
jno
ja
repnz
movsb
jno
aas
and
fidivrs
mov
mov
ret
mov
xchg
xor
or
xchg
pop
xchg
xlat
sbb
push
cs
int
and
sbb
in
jle
cli
jge
mov
loop
popa
push
sbb
pop
inc
dec
sbb
adc
outsl
mov
int
xchg
jge
add
push
mov
mov
lahf
je
push
inc
fs
adc
adc
sub
jle
or
dec
daa
push
pop
lea
push
sbb
rcrb
and
push
cmp
fisttpl
adc
addr16
test
jns
pop
aam
fidivrl
pop
push
lods
data16
dec
aad
aam
mov
ljmp
scas
jbe
add
dec
pop
clc
xor
push
pop
imul
shll
sbb
stos
pop
test
stos
xchg
sub
enter
or
push
fs
jmp
mov
movsl
sub
xchg
inc
scas
jb
mov
test
adc
push
pop
sbb
sbb
imul
hlt
sbb
sbb
test
or
xchg
mov
clc
les
and
pop
jns,pt
das
cli
jne
sti
les
outsl
testl
lahf
or
out
inc
add
adc
pop
mov
sub
pop
scas
loop
shr
int3
inc
icebp
daa
lea
sub
cmp
movsb
lods
sub
cwtl
lock
rcr
adc
xor
mov
lcall
and
ret
push
hlt
sbb
pop
aam
pop
sti
movsb
dec
jne
lods
aaa
push
xchg
into
pop
daa
sbb
outsl
iret
and
pop
mov
insb
and
pop
sbb
fdivrs
xor
mov
pop
or
aad
decb
mov
daa
hlt
icebp
pop
xchg
nop
test
jne
sub
mov
or
js
jecxz
mov
jp
neg
lods
mov
clc
sahf
inc
popf
push
jnp
jge
leave
jb
hlt
stos
imul
lock
pushl
cmp
lea
or
jge
add
xchg
dec
mov
fs
cli
test
mov
arpl
orb
decl
xchg
push
cmp
cmc
adc
jl
jnp
dec
into
mov
lret
xor
aad
dec
les
out
hlt
add
jge
jne
call
sub
push
dec
sub
ret
daa
iret
jb
int
xchg
cmp
bound
push
add
cmp
call
sub
pushf
sub
loopne
cmc
lea
ljmp
fs
sbb
hlt
jp
clc
or
js
xor
xor
and
adc
hlt
push
or
rolb
arpl
fwait
or
or
or
mov
push
arpl
mov
je
inc
clc
mov
movsl
mov
mov
add
pop
in
or
adc
das
fdivrs
popa
xlat
mov
jne
mov
fcomps
incb
xchg
rcll
add
push
xchg
test
mov
outsb
idivl
inc
ja
push
inc
ss
xchg
dec
mov
es
xor
push
in
dec
pop
mov
add
filds
dec
aad
cmp
push
and
dec
mov
fs
sub
mov
jecxz
je
idivb
mov
push
jge
ret
mov
push
cmp
pop
dec
pop
sbb
add
push
mov
lods
pop
jo
xor
aam
lock
mov
pop
stc
fsubs
and
pop
fnstsw
movsb
stos
js
jl
inc
mov
rcll
inc
iret
mov
push
pop
jg
cltd
stc
adc
idiv
pop
fs
add
movsl
std
inc
sbb
out
movl
movsb
and
stos
decl
mov
push
cmp
or
or
fmull
pop
xchg
or
inc
shll
enter
mov
lcall
push
aas
fsubrl
mov
int3
cmp
fdivrs
daa
je
cli
lea
call
pop
ljmp
lods
jecxz
cli
pop
cmp
jo
and
add
push
outsl
out
adc
push
ja
jns
dec
add
popf
add
imul
stc
cmp
add
fidivrs
push
push
les
sbb
pop
repnz
daa
insl
aam
loopne
and
push
add
addb
mov
or
sbb
stos
add
add
insb
add
xor
push
pusha
lahf
shlb
push
sbb
xchg
jle
push
jb
je
push
xchg
push
xor
mov
pop
jbe
in
stos
aam
and
sub
bound
add
bound
sbb
cmpb
cmc
dec
jo
and
ret
mov
xchg
sub
push
push
xchg
data16
aam
std
repz
fsubl
mov
bound
ds
pop
pop
push
int3
lods
pusha
adc
pop
mov
outsb
scas
mov
dec
call
addr16
and
in
sbb
add
jne
adc
inc
clc
mov
in
sti
cmc
push
xor
fcoml
dec
in
xchg
and
jge
jae
or
daa
sahf
inc
mov
test
fcomps
in
lods
xchg
test
mov
lret
push
or
cmp
dec
pop
cmp
icebp
sbb
inc
adc
mov
pop
mov
dec
and
push
push
jmp
dec
sbb
jno
out
icebp
mov
or
pop
test
mov
mov
push
int3
cmc
test
or
loope
jmp
jmp
movsl
mov
pop
sub
and
andl
adc
inc
jl
cmp
xchg
xchg
mov
fstps
inc
outsb
jne
gs
je
rcrb
xchg
jb
int3
in
jo
mov
xchg
in
add
jl
adc
mov
fldt
subl
addr16
adc
mov
pop
pusha
inc
adc
mov
pop
movb
xchg
subb
daa
movb
push
xchg
fdivs
gs
and
adc
mov
cmp
push
lret
cmp
aad
adcb
pop
in
mov
or
gs
xchg
mov
imul
xor
cmp
lea
mov
dec
call
mov
test
sub
popf
adc
mov
jmp
jo
inc
scas
xchg
sbb
adc
and
xchg
xchg
pop
ret
lods
aam
pop
cmc
insl
int3
mov
cwtl
test
repz
push
mov
mov
push
inc
pusha
or
mov
out
roll
lods
stc
or
test
pusha
or
sub
xchg
and
loopne
fisttps
in
pop
cmpsl
test
es
outsb
push
push
sub
lock
testb
gs
stc
and
adcb
xchg
repnz
inc
push
pop
test
clc
sbb
and
push
pop
scas
xchg
or
xchg
nop
dec
mov
mov
dec
add
xchg
into
inc
mov
push
in
jae
pop
mov
mov
xor
xor
in
out
test
ljmp
jnp
and
icebp
sbb
js
out
push
mov
inc
xchg
mov
sub
lret
inc
ss
dec
aaa
xlat
icebp
fwait
fs
outsb
or
or
out
xchg
jo
test
leave
push
inc
sub
leave
pop
aam
ss
xchg
sub
orl
in
jle
mov
outsl
lock
mov
xchg
inc
pop
orb
fs
pushl
out
pop
mov
mov
xchg
mov
xchg
or
hlt
sbbb
jnp
outsb
repnz
les
add
stos
mov
shrb
orb
jo
push
push
jmp
fdivl
loope
jne
fdivl
addr16
mov
mov
orb
cmpsb
lods
mov
push
gs
imul
push
sbb
cmp
or
inc
adc
dec
xor
in
inc
adc
push
inc
inc
or
push
shlb
inc
sub
push
inc
dec
cmp
test
inc
shrl
rcl
pop
cs
addr16
push
and
adc
mov
xchg
in
sbb
sti
gs
insb
xchg
sub
leave
push
cmp
jge
cmpsb
es
cmp
add
repnz
cmp
or
push
cmp
and
cmp
cmp
nop
in
cmpsb
pop
adc
jge
mov
inc
xchg
xchg
lcall
cmp
dec
push
xor
push
mov
les
xchg
lea
test
xchg
cmp
jmp
ljmp
inc
jne
push
cmc
aas
std
and
push
jg
push
or
adc
sub
mov
fstpl
add
mov
bound
mov
rclb
movsl
xor
sti
jno
bound
jno
es
mov
sub
stos
inc
or
xor
jle
cmp
scas
mov
fdivrl
add
cmp
ja
addl
push
and
or
inc
clc
movb
lret
sub
push
hlt
dec
push
js
nop
cs
pop
cld
aam
mov
inc
xorb
fsubs
mov
insl
and
push
mov
sub
dec
stos
dec
int3
adc
xlat
push
or
mov
aas
repz
xor
mov
and
mov
pop
xchg
rcll
scas
lds
sub
je
and
daa
xchg
adc
inc
inc
and
jo
mov
clc
daa
inc
mulb
push
nop
dec
stc
push
mov
mov
push
xchg
scas
push
enter
lahf
cld
push
into
push
fcomps
idivl
insb
sub
mov
pop
es
push
popa
adc
jge
notb
add
aas
ret
inc
add
mov
jne
inc
adc
inc
and
inc
inc
jne
push
bound
xchg
repnz
xchg
jecxz
cld
lret
shlb
adc
pop
pop
inc
lahf
sub
loope
dec
enter
aaa
rclb
mov
jnp
dec
dec
sub
adc
cmpsl
test
sbb
pop
mov
test
xlat
test
mov
fsubl
xchg
push
lret
xchg
in
fnsave
mov
adc
mov
pop
test
sub
dec
das
dec
sti
push
in
sarb
test
and
hlt
into
mov
loopne
inc
adc
mov
in
lods
mov
movsb
js
mov
rcrl
mov
fbstp
test
xchg
inc
sub
in
shlb
mov
push
stos
xor
fcom
mov
sub
pop
xchg
imul
inc
push
cld
inc
jge
xor
inc
inc
sbb
adc
enter
or
mov
stc
and
mov
dec
sub
mov
xchg
stos
repz
adc
cmpl
or
js
insl
cmp
mov
xchg
icebp
test
mov
cld
mov
dec
lods
aad
jge
ret
add
mov
jmp
cs
fbstp
inc
push
mov
sub
and
jae
pop
out
mov
rolb
sbb
gs
xchg
cli
cli
mov
dec
scas
les
dec
nop
mov
jo
inc
mov
fs
repz
xor
rcrl
or
adc
mov
les
int3
xchg
pop
push
pop
mov
into
push
mov
cld
sahf
mov
or
xchg
in
gs
mov
pop
adc
sbb
push
adc
jp
adc
stos
cmp
scas
in
sub
and
jg
jne
cld
outsl
xchg
inc
inc
in
test
sbb
mov
push
add
das
into
fs
out
push
rcr
scas
xchg
jle
movsb
sub
sbb
adc
push
iret
lret
adc
outsb
pop
mov
add
ror
jnp
sahf
into
shl
movsb
cmp
daa
xor
jno
and
pop
lahf
push
lcall
outsl
pop
les
sub
lods
repnz
push
cmp
dec
bound
test
push
outsb
mov
adc
dec
sti
cmp
inc
sub
or
push
sub
add
lea
movsb
repnz
lcall
push
cmp
test
or
jecxz
add
add
cmp
jge
fdivrl
enter
fistl
je
xor
mov
xor
jmp
repnz
imul
fists
adc
fmuls
scas
out
daa
jle
call
or
ljmp
xor
or
cmpsb
test
cwtl
inc
inc
enter
dec
cmpl
mov
sub
mov
cmp
cmp
xor
roll
pop
adc
les
cwtl
adc
sub
push
mov
push
sti
lahf
pusha
xchg
lcall
cmp
push
cli
sbb
gs
popf
push
add
imul
xor
mov
and
outsb
es
sub
sub
repz
dec
imul
arpl
adc
incl
in
jo
push
outsb
test
arpl
insb
sbb
insl
inc
mov
add
and
sub
sub
xor
sbb
popa
sqrtps
push
mov
jae
jo
icebp
adc
adc
adc
cltd
jo
addr16
or
jle
stos
push
jb
stos
adc
sbb
arpl
test
sub
rcr
cs
aad
and
insb
sbb
or
push
add
bound
dec
rcrb
lods
adc
jb
outsb
loopne
hlt
data16
lret
adc
xor
adc
jns
outsl
test
sbb
fisttpl
imul
jne
ret
out
or
push
add
adc
roll
adcb
bnd
inc
add
jbe
loopne
aaa
popf
shlb
sbb
xchg
lock
push
pop
push
push
cltd
mov
mov
repnz
xchg
cld
in
push
dec
daa
mov
subl
xchg
adc
sbb
sti
dec
out
xchg
je
aam
arpl
inc
mov
les
and
jb
or
jg
or
je
add
fcoms
push
imull
inc
push
sub
adc
push
mov
jo
pop
inc
cmp
sbb
cli
insl
cwtl
add
mov
int
lea
jmp
mov
or
mov
mov
push
hlt
inc
icebp
mov
mov
adcl
mov
inc
and
jb
pop
pushf
lods
addb
sub
push
mov
loop
xchg
mov
pop
jecxz
dec
mov
outsl
mov
inc
ja
xchg
inc
and
dec
sbb
add
repnz
add
sbb
inc
in
or
in
sub
outsl
adc
inc
pop
xchg
dec
and
or
inc
mov
ret
js
mov
sub
in
cmpl
fisubs
lret
enter
add
add
add
pop
and
push
or
in
fs
or
je
andb
inc
sahf
lods
mov
push
mov
jmp
mov
sbb
imul
nop
add
dec
push
inc
sbb
aas
and
and
adc
adc
adc
or
xchg
adc
pop
sub
bound
push
adc
cmp
or
push
pop
cmp
or
dec
adc
adc
adc
dec
sbb
sbb
sbb
and
and
push
lahf
and
daa
inc
cmp
pop
adc
jl
lea
rcl
loop
repz
add
dec
es
aaa
and
pop
push
jnp
mov
and
inc
loope
mov
sbb
sub
push
bound
ja
add
inc
or
mov
adc
push
jmp
or
xchg
or
std
sbb
or
sbb
test
enter
cmp
cltd
ss
adc
push
and
inc
mov
in
and
inc
adc
xor
adc
xor
inc
adc
cmp
adc
cmp
inc
adc
and
pop
and
sbb
dec
push
out
or
nop
sbb
pop
xchg
sbb
inc
push
and
inc
pop
and
and
arpl
and
fs
and
gs
and
inc
and
addr16
and
dec
dec
mov
aas
push
ficoml
ja
in
add
ja
das
sbb
rcr
test
fwait
sub
sub
cli
sahf
frstor
clc
add
mov
jne
fmuls
repnz
daa
pop
add
push
pop
outsl
sub
je
mov
pop
push
outsl
xor
clc
lret
or
ds
pop
cwtl
sar
jmp
hlt
lahf
repz
cld
sbb
ljmp
add
iret
mov
cmp
rclb
cli
mov
fs
js
xchg
js
lret
pop
inc
fsub
shlb
xor
and
mov
add
movsb
mov
pop
rclb
stos
sub
imul
and
cmpb
outsb
mov
es
stc
aam
inc
dec
push
decb
inc
pop
mov
jne
repnz
mov
std
dec
ljmp
xor
pop
sub
decb
add
outsl
jne
sti
sub
insb
sub
pop
add
fcom
adc
push
dec
fs
mov
movsb
xchg
adc
sbb
or
gs
les
pop
mov
and
enter
jecxz
or
test
aam
mov
add
push
xor
loopne
xor
cmpb
enter
les
shl
inc
push
xor
push
clc
or
insb
xchg
adc
loopne
pusha
dec
fisttps
sar
mov
push
je
jbe
js
sbb
inc
xchg
loopne
aaa
cld
or
in
mov
aam
test
or
fdivr
popa
add
gs
lea
or
cmpsl
adc
push
decl
mov
fs
and
movsl
inc
icebp
enter
mov
cwtl
jl
jge
push
push
cmpsb
std
push
nop
fsubrs
pop
or
dec
and
sbb
jo
xchg
xlat
lahf
aad
or
jo
aad
lds
pushl
push
jle
pop
push
pop
stc
push
cmp
out
insl
cmp
push
and
and
sub
cmp
inc
inc
ret
or
insb
sub
inc
adc
into
inc
outsl
insb
mov
xchg
xlat
lahf
cmp
adc
adc
inc
push
xor
add
and
inc
outsl
arpl
imul
dec
jmp
mov
je
pop
push
je
cmp
sbb
dec
xchg
xlat
cmp
add
dec
push
cwtl
data16
jecxz
loope
rep
scas
jne
aad
pop
scas
mov
dec
sub
and
inc
jecxz
inc
xchg
inc
push
jo
popf
jne
repz
and
jne
daa
les
sub
xchg
push
pop
inc
fs
fisubrl
decl
and
add
mov
scas
xor
dec
push
pop
dec
dec
pop
jno
icebp
and
sub
pop
sub
and
push
inc
adc
scas
lods
clc
daa
test
sub
out
jns
sub
pop
inc
sub
mov
pop
fs
enter
push
nop
dec
xchg
stc
cs
push
or
push
js
xchg
repnz
mov
jbe
xlat
pop
jno
xor
stos
loopne
or
data16
pop
testb
adc
addr16
or
arpl
cld
dec
or
enter
sbb
and
mov
shrb
adc
and
pop
push
fs
xchg
in
inc
mov
mov
xchg
fists
in
clc
and
inc
notb
shl
jmp
mov
enter
push
inc
push
or
jl
mov
popa
out
add
inc
sbb
les
push
push
add
adc
jnp
mov
int3
xchg
or
or
es
inc
and
dec
les
or
sub
lods
push
pop
adc
lds
add
or
pop
lods
js
scas
lods
adc
lods
push
mov
push
pop
add
mov
inc
sbb
or
jle
ss
stos
enter
add
add
push
stos
pop
or
stos
mov
mov
jae
xchg
pop
bound
lock
mov
or
push
addr16
sbb
arpl
lods
sbb
out
xchg
adc
push
fistpl
xchg
sti
adc
push
inc
xchg
push
ss
or
push
mov
adc
dec
xchg
rcll
jo
loope
orb
aam
int
xchg
adc
cmpsb
xor
mov
adc
dec
clc
jp
fldcw
push
jns
jns
xchg
and
lahf
mov
in
inc
fdivr
push
cld
xchg
iret
pusha
mov
inc
mov
jle
sbb
sbb
sbb
mul
incb
mov
mov
in
inc
dec
imul
mov
hlt
dec
addr16
add
gs
mov
inc
cmp
popf
and
and
popa
or
or
xchg
add
dec
outsb
addr16
xchg
pop
mov
push
pop
and
and
out
dec
push
je
dec
dec
cmp
nop
add
adc
sub
pop
pop
nop
es
xchg
push
or
loop
arpl
cmp
cmpsb
ja
movsb
mov
inc
test
sub
xchg
nop
stc
sub
insl
push
mov
into
or
insb
jns
and
cmp
cli
ds
and
inc
and
int
xchg
add
pop
imul
xchg
test
les
push
nop
xor
and
je
xor
xor
shll
idivb
nop
aaa
stos
and
inc
and
fdivrs
movsl
or
fisubl
gs
fidivs
insb
dec
loopne
xchg
repz
shlb
test
xchg
repz
mov
in
cmp
pop
aas
std
and
jbe
inc
shl
mov
or
movsl
and
jo
push
and
dec
cwtl
push
xor
or
scas
test
mov
xchg
cmc
xor
dec
aas
ret
icebp
add
or
cmp
sub
push
and
dec
mov
test
repz
pop
hlt
cs
mov
cmpsb
fdivrl
jo
jo
jo
push
mov
negb
enter
mov
gs
mov
jge
and
mov
sahf
jbe
adc
push
sbb
mov
mov
jle
scas
shlb
push
es
adc
xor
inc
inc
data16
and
fcmove
pop
and
fdiv
insl
mov
mov
fcomp
mov
jle
adc
pop
jg
sbb
mov
or
mov
pop
shrb
fld1
mov
add
sub
pop
scas
nop
sub
pop
and
outsl
rcll
lret
in
jae
sarl
mov
pop
sub
scas
jmp
lds
jae
cmp
dec
mov
fiaddl
outsl
cmp
das
inc
mov
or
not
loop
aam
fcmovu
and
or
xor
xor
adc
inc
aaa
mov
or
sub
cmp
adc
inc
aas
in
inc
test
or
roll
push
push
sbb
leave
dec
cli
mov
imul
jg
test
sti
test
mov
clc
test
adc
ret
adc
push
pop
jae
add
mov
push
add
mov
bnd
rep
int
sub
testl
or
or
mov
clc
fs
test
jecxz
jo
shlb
mov
jl
pushf
sub
inc
in
push
xchg
fnsave
mov
fnsave
dec
sbb
cltd
out
insb
daa
mov
in
or
xor
adc
les
sbb
and
je
sub
jp
adc
repnz
cld
mulb
mov
and
inc
pop
adc
and
int3
in
mov
mov
adc
sti
or
cld
dec
or
or
adc
mov
ljmp
pop
orb
daa
mov
dec
and
push
inc
pop
sub
dec
dec
enter
or
shrb
cmp
dec
pop
idivl
lds
and
pop
gs
pop
add
inc
mov
add
add
sbb
mov
dec
out
into
pushf
adc
add
adc
push
sbb
or
mov
inc
lret
enter
pop
mov
pop
fadd
shlb
or
jl
rcl
ftst
inc
int3
test
or
xchg
dec
movsl
testl
adc
mov
pop
and
fisttps
pop
hlt
dec
je
or
jno
movb
or
xorb
pop
aaa
jae
or
inc
loop
ret
lret
cld
addb
clc
xor
jb
data16
fmull
and
fs
adc
dec
mov
push
int3
pop
js
pop
xchg
jns
shrb
dec
aas
push
rsqrtps
jl
xor
adc
push
and
das
cmp
dec
and
repz
add
sub
mov
mov
aam
push
int3
inc
popa
mov
inc
psrld
mov
pop
lods
xchg
loopne
inc
gs
popa
jne
je
mov
adc
loop
adc
push
lds
and
cli
hlt
data16
popa
insb
push
sub
rclb
sti
loop
clc
sbb
sbb
rcll
sbb
jl
sbb
mov
ss
or
dec
pop
sbb
and
int
and
leave
and
clc
jl
and
and
jmp
nop
and
inc
daa
lods
sub
sub
inc
sub
enter
sub
inc
das
in
xor
or
push
push
inc
push
inc
popa
sub
cmp
or
push
outsb
dec
pop
sub
sbb
sbb
or
addl
popf
and
dec
or
xchg
loop
enter
cmp
insb
push
shl
divb
adc
mov
gs
adc
push
lret
inc
imul
adc
inc
and
inc
iret
jg
inc
inc
gs
push
inc
into
cmp
add
xor
cmp
mov
rcrb
mov
jmp
or
aaa
movsb
ljmp
adc
mov
inc
lret
mov
lds
adc
lods
xchg
mov
ljmp
daa
pushf
rclb
sub
movsl
adc
scas
and
and
jne
in
test
out
fcomps
mov
pop
and
fs
mov
or
or
mov
push
fdiv
adc
enter
jo
out
xor
and
or
or
and
or
xchg
out
neg
mov
leave
mov
mov
adcl
mov
mov
pop
pushl
loop
pop
shlb
cmpsb
mov
mov
mov
pop
sub
popf
in
sbb
sbb
xchg
pop
and
int3
or
mov
push
adc
enter
ficoml
in
sti
push
nop
rcrb
int3
rclb
adc
sbb
inc
and
outsb
mov
and
rorl
sub
dec
mov
cmp
aaa
sbb
aas
push
in
xchg
in
sbb
test
aaa
jo
mov
xchg
push
jne
negb
lret
adc
inc
adc
mov
push
nop
adc
inc
fcomps
inc
ss
adc
xchg
lea
push
daa
mov
or
jge
jl
lahf
xchg
sbb
in
mov
push
adc
and
cmc
push
cmp
fistps
or
inc
imul
and
and
cmp
mov
add
insb
jne
xlat
push
js
dec
mov
aas
push
sub
inc
mov
and
or
jnp
shl
dec
aas
scas
inc
cmp
mov
jno
imul
in
in
mov
and
jbe
sub
sub
sub
inc
push
jl
sub
dec
mov
shrl
adc
cmp
pushf
or
push
ljmp
js
fs
xor
das
fldcw
adc
aam
loop
jne
dec
push
adc
mov
inc
scas
cmpb
jne
loope
jo
inc
push
cmp
push
orb
jp
fs
dec
jo
and
ss
mov
enter
cmp
rcl
call
and
ljmp
in
sub
ds
adc
scas
and
inc
inc
fmull
ret
roll
add
adc
inc
test
inc
or
cs
shlb
add
test
inc
inc
xor
pop
add
ret
lock
and
fnsave
dec
les
adc
adc
xor
sbb
inc
rclb
in
icebp
in
dec
lods
fmul
sub
out
das
and
inc
lock
testb
fistpl
and
pop
adc
ss
mov
adc
add
or
inc
data16
ds
pop
mov
adc
or
adc
nop
pop
or
xor
add
inc
adc
sub
jl
lea
xchg
push
stos
xchg
test
push
pop
adc
hlt
scas
lods
add
cli
dec
sar
sti
inc
filds
mov
insb
icebp
adc
in
xchg
xorb
jo
pushl
jns
shrb
sub
or
inc
mov
or
push
add
push
mov
dec
subb
das
icebp
pop
dec
pusha
push
push
mov
jge
lods
and
je
mov
cmpb
jmp
cmp
jne
push
or
es
or
enter
cmp
fs
mov
mov
push
push
outsb
out
dec
test
mov
and
push
add
push
data16
mov
jo
jo
mov
addr16
cwtl
enter
repz
arpl
mov
daa
push
scas
stc
arpl
loopne
jns
repnz
aaa
push
dec
and
and
inc
shr
cmp
sub
push
jo
mov
push
cs
jge
pop
mov
mov
and
sti
or
outsl
mov
inc
js
push
adc
iret
inc
mov
xorl
nop
inc
outsb
or
pop
fadds
jl
adc
movsl
add
mov
or
adc
mov
add
inc
dec
mov
push
push
xlat
icebp
adc
pop
sub
sbb
adc
jns
adc
dec
sbb
dec
mov
gs
mov
inc
sbb
call
mov
testb
popa
add
bound
inc
mov
jo
cmpsb
lcall
push
pop
fs
xchg
rcll
xchg
jne
pop
in
fs
add
jl
add
rolb
inc
repnz
cmp
pop
mov
pop
push
push
dec
addr16
mov
enter
pop
push
dec
xlat
adc
popf
fxch
adc
push
dec
nop
cmpb
lock
icebp
out
add
hlt
or
cmp
cltd
sti
cmpb
jb
adc
jg
dec
cmp
push
mov
ds
nop
je
cmp
push
mov
dec
or
testb
xlat
jp
ret
sbb
clc
jmp
and
jb
jo
les
bnd
inc
push
cmp
je
jb
or
push
or
fisubrl
push
push
and
mov
adc
rclb
clc
cmp
push
mov
add
sub
cmp
nop
lahf
mov
inc
or
stc
clc
enter
push
push
push
rorl
dec
sub
into
pusha
and
add
in
je
test
push
outsl
imul
pop
inc
rorl
ljmp
out
ret
xchg
xchg
fistps
mov
inc
outsl
lods
mov
movsb
dec
pop
push
popf
faddl
jns
scas
lea
inc
fistpl
hlt
mov
and
xchg
mov
lret
or
cwtl
in
jmp
or
or
mov
xchg
and
sub
int3
inc
popl
add
adc
pop
mov
les
and
inc
fmull
outsb
push
jo
test
mov
push
push
mov
adc
add
or
mov
cmp
jle
xor
or
std
in
push
adc
js
je
pop
adc
cmp
mov
daa
fisubs
or
cmpsb
lcall
adc
lds
inc
lock
cmpsl
push
pop
sbb
mov
xchg
pop
cmp
xchg
ja
push
cmc
popf
test
cmp
xchg
sbb
fs
mov
mov
ret
inc
push
inc
or
push
clc
lret
xchg
adcl
xchg
cmp
aam
adc
out
leave
sub
jge
lock
push
sub
mov
jmp
pop
sbb
call
gs
out
mov
cmp
dec
and
adc
inc
inc
cmovns
pop
pop
pop
jae
dec
xor
or
xor
mov
adc
cmp
add
mov
push
xor
cli
jecxz
add
cmp
push
xchg
mov
cmp
shlb
add
in
outsl
and
call
mov
cs
cld
jo
push
sbb
out
sub
sub
mov
jo
andb
in
fsubrl
fld
bnd
data16
xor
jge
jg
dec
insb
mov
add
stos
cltd
dec
rorb
jmp
mov
decl
scas
fdivrp
jae
cli
mov
mov
cmc
sub
mov
mov
adc
repnz
adc
dec
test
push
shr
mov
fistl
xchg
adc
sbb
mov
ljmp
lods
xchg
in
pop
xchg
cli
mov
jmp
aam
jo
add
or
mov
call
push
or
pop
inc
and
addb
cmovbe
and
in
bound
push
and
test
push
or
lret
sti
xchg
inc
mov
inc
dec
pop
pop
xor
cmp
imul
inc
in
sbb
mov
jbe
push
aaa
loopne
xor
xorl
sub
loope
mov
rolb
xor
cwtl
push
jmp
pop
and
mov
lahf
fisttpl
loope
adcb
in
or
insb
xchg
add
pop
adc
xchg
pop
ljmp
or
popa
pop
mov
test
rolb
lea
adc
push
movzbl
fstpt
inc
xor
dec
mov
mov
xchg
inc
jne
add
cmp
shld
pop
or
les
mov
xor
enter
cmp
inc
push
or
mov
mov
push
push
push
enter
inc
push
punpckldq
clc
mov
sbb
push
adc
jne
sub
and
mov
and
add
push
dec
gs
pushl
je
cmp
out
cmp
sbb
shl
test
shll
jle
jmp
shl
and
jo
pop
in
roll
sbb
mov
cld
pop
in
les
call
das
scas
inc
mov
adc
mov
adc
mov
shlb
sub
addr16
pop
gs
test
jne
xlat
cmp
jmp
or
fwait
inc
dec
sti
cmp
das
mov
push
cwtl
aam
adc
dec
mov
or
mov
adc
sub
nop
aaa
inc
adc
dec
or
jb
pop
pop
stc
push
nop
adcb
ss
cmpb
test
test
push
adc
mov
loope
or
cmp
jp
mov
mov
adc
adc
mov
sbb
dec
pop
add
and
and
out
mov
add
mov
shll
mov
sar
repz
mov
bound
ret
push
push
push
push
enter
mov
aas
jecxz
xchg
test
das
test
xchg
addr16
inc
cmp
mov
xchg
sbb
dec
mov
jl
mov
inc
sub
adc
test
jl
push
xchg
adc
scas
rcrl
loopne
mov
cwtl
jge
lods
xor
dec
pop
dec
lahf
das
cltd
pop
cmp
lds
jo
inc
xor
fcoms
adc
xor
mov
movsl
or
push
push
mov
xchg
negl
dec
add
xchg
add
shr
push
jle
js
inc
sbb
and
sbb
push
inc
popf
inc
mov
fwait
lret
jge
mov
repz
fsub
cmp
mov
inc
xchg
fs
jmp
sar
cmpsl
cmc
daa
nop
cld
mov
aad
xchg
sbb
inc
lea
daa
jle
outsb
add
repz
sbb
dec
daa
fbstp
xlat
rorb
push
sub
inc
push
popa
and
inc
outsb
in
fsubs
call
inc
xor
cld
scas
jns
aas
jecxz
sahf
cmp
and
cmpsl
xlat
xor
clc
mov
mov
dec
nop
scas
xor
andl
adc
daa
or
cmpsb
movsb
faddl
mov
in
pop
push
adc
dec
out
les
lcall
cmpsl
aad
movsb
cmpsl
cltd
dec
mov
dec
mov
mov
sti
and
out
je
cli
mov
or
fadd
cmp
shll
nop
or
xchg
negl
mov
pop
lcall
data16
testb
sub
daa
and
fs
adc
xchg
sbb
add
iret
sbb
cmpb
dec
xchg
ja
pop
imul
je
dec
enter
lods
xchg
mov
insb
push
mov
shlb
sub
roll
movzwl
mov
gs
rclb
push
leave
pop
xchg
xchg
jno
ljmp
test
dec
push
out
cmp
xchg
or
push
or
movsb
gs
mov
das
out
cmp
xchg
shl
fsubl
and
inc
leave
push
xchg
sub
and
sub
ja
jnp
lret
imul
mull
mov
or
jmp
popf
cwtd
std
es
or
or
jne
and
repz
cmpb
sub
cs
add
push
add
test
loope
add
jne
loopne
popf
xor
and
testl
and
loope
sub
jmp
or
add
or
push
xchg
imul
ja
dec
add
pop
pop
lret
mov
dec
pop
imul
and
inc
cli
xchg
jne
mov
push
int
nop
push
dec
lods
jmp
or
pop
mov
cwtl
mov
pop
test
cs
pop
and
rclb
mov
and
jp
pop
je
dec
jp
pop
push
dec
sti
fidivl
rcrb
daa
sub
xchg
pop
xchg
add
jl
push
daa
cmc
aas
and
stc
nop
inc
mov
mov
mov
stos
mov
inc
out
hlt
popf
adc
adcl
sub
mov
cld
enter
adc
pop
adc
ljmp
testl
push
mov
sti
repnz
push
lahf
jle
push
dec
dec
or
nop
dec
mov
sub
std
aaa
lret
jb
push
mov
addl
repnz
inc
or
dec
push
cmpsb
dec
sub
xchg
jno
inc
add
rorl
fstps
test
es
sarl
ljmp
cmpsb
imul
push
sbb
sub
inc
jl
sub
jp
xchg
xchg
cs
push
and
or
leave
jno
inc
cmp
je
cltd
icebp
or
inc
pop
outsb
addb
cmp
cmpl
adc
rcr
mov
cmp
pop
adc
mov
imul
ds
pop
fdivrs
aas
inc
or
sbb
fs
test
js
xchg
pop
push
loope
adc
ret
je
pop
int3
in
cmpsl
push
je
sbb
jb
out
or
emms
and
push
sarb
inc
lock
cld
sbb
scas
pop
fwait
xchg
aam
adc
lods
addr16
sbb
push
sub
je
aaa
sub
sbb
add
mov
push
jle
mov
xor
pop
mov
imul
out
mov
push
lahf
pop
sbb
nop
or
pop
xor
pop
out
inc
sahf
lahf
pop
add
xchg
push
adc
adc
mov
mov
lock
sub
outsb
out
repnz
xor
mov
and
add
jge
aaa
adc
test
cmp
push
push
push
insb
mov
loope
sub
or
test
add
add
sub
mov
mov
push
mov
sti
leave
xchg
pop
leave
call
xchg
loop
add
mov
and
mov
push
adc
test
out
push
inc
shrb
sbb
mov
call
mov
or
add
adc
hlt
loope
rcrb
push
sub
adc
jns
loop
test
cmp
int3
mov
and
or
and
or
clc
push
lea
sbb
mov
mov
dec
adc
and
stos
mov
dec
nop
mov
test
and
jmp
movsl
push
inc
jmp
jge
int3
imul
or
adc
je
or
mov
push
call
out
mov
mov
dec
movsb
stos
testl
xor
outsl
mov
pop
adc
lret
out
push
lock
in
je
cmp
rcrb
sub
cltd
adc
cmpb
in
mov
jnp
addr16
push
rclb
mov
jb
je
sbb
xchg
jmp
arpl
pop
je
mov
adc
push
push
adc
xchg
sub
insl
fsts
lds
inc
and
add
movaps
or
shr
dec
cmc
add
or
inc
in
sbb
add
sub
leave
cmpsb
pop
sub
adc
imul
pop
mov
cltd
jb
rcrb
cmpb
sub
add
jne
xorl
inc
pop
les
inc
and
sub
rolb
adc
jmp
jle
jmp
jg
push
inc
cmp
xchg
jbe
mov
add
fisubs
adc
push
rorl
lret
pop
and
out
leave
sub
je
ss
loop
sbb
or
cltd
xchg
sub
xchg
pop
shlb
mov
dec
mov
clc
shl
addr16
or
mov
xor
xor
xor
das
cli
jb
adc
mov
aam
mov
xchg
ss
push
divl
leave
pop
jmp
sub
fsubrs
sub
add
add
mov
movb
add
fsubp
xlat
mov
inc
outsb
mov
std
push
add
mov
inc
dec
xchg
xchg
jne
pop
in
sti
frstor
jnp
ror
xchg
or
lret
push
mov
xchg
jecxz
pushf
leave
mov
dec
or
xor
cwtl
andl
test
repnz
mov
inc
mov
imul
pop
mov
cmp
or
lock
pop
pop
sti
jl
mov
push
mov
jne
cmpsl
push
inc
dec
int
dec
cltd
inc
or
xchg
std
test
bound
xchg
aad
into
decl
dec
nop
js
xchg
mov
xchg
push
dec
xchg
pushf
add
movsl
nop
out
adc
xor
call
xor
scas
test
test
dec
inc
pusha
pop
cmp
imul
into
fcompl
data16
orl
or
push
rolb
xor
mov
int3
xor
push
inc
sub
rol
outsl
jmp
dec
lret
in
adc
pop
pop
xchg
ljmp
jae
jo
dec
inc
inc
enter
adc
sub
andl
dec
add
stos
or
int
daa
pop
gs
mov
mov
sbb
dec
cmp
mov
inc
inc
xor
dec
mov
cmp
je
adc
or
les
xchg
jl
and
mov
stos
mov
loop
lock
imul
stos
sub
das
js
mov
and
mov
adc
call
les
negb
push
and
adc
cs
mov
imul
dec
jmp
insb
dec
jle
out
xchg
in
add
pop
leave
fcmovu
push
cmp
repz
xor
mov
inc
jnp
das
mov
dec
push
and
and
and
add
in
dec
lds
nop
pop
pop
pop
push
mov
dec
lods
adc
jecxz
fistl
outsl
and
mov
divl
mov
lret
fs
cmc
call
loopne
sub
inc
lds
call
dec
dec
cs
mov
mov
outsl
mov
lods
pop
pop
mov
jg
or
cmp
adc
ja
inc
adc
je
out
test
adc
shlb
jne
push
cmp
push
push
sar
mov
movsb
stc
rclb
inc
jge
jle
in
call
sub
cli
fiaddl
pop
lds
xchg
rclb
rorb
xor
jmp
imul
std
iret
lret
shl
cwtl
frstor
sub
shlb
out
aas
cmp
inc
or
inc
jo
jae
and
add
jbe
clc
push
xchg
pop
cmp
add
outsb
hlt
inc
mov
roll
lahf
popa
imul
xchg
sub
push
loope
jb
mov
dec
mov
sti
mov
mov
stc
mov
lret
jno
add
sbb
sbb
jmp
sbb
sbb
push
add
movsl
xchg
ljmp
cs
mov
inc
adc
pop
outsb
lcall
or
sbb
and
dec
stos
xor
mov
pop
insl
sub
ljmp
loop
pop
pop
xchg
push
leave
add
pushl
leave
adc
cmp
jb
lods
pop
mov
pop
jb
cmp
in
push
or
es
leave
jb
loop
cld
xchg
push
cmpb
clc
aas
test
mov
enter
mov
ja
xchg
inc
and
or
mov
orl
mov
dec
dec
test
pushf
call
lods
sub
int3
inc
dec
dec
scas
ds
mov
mov
push
hlt
mov
cmp
fdivr
psrad
loop
xchg
js
orb
xchg
add
mov
test
lods
rcl
les
cmp
xchg
xor
lock
test
xlat
or
enter
int
xchg
mov
or
adc
loope
jne
pop
push
and
and
jl
mov
xchg
dec
mov
mov
jmp
dec
mov
lock
icebp
aad
mov
scas
cmp
jl
loopne
or
mov
mov
pop
push
pop
in
xchg
mov
and
push
sarl
je
and
lods
or
xor
dec
fsubr
dec
xchg
aad
and
pusha
mov
xchg
jb
jno
in
mov
mov
dec
jmp
inc
ljmp
adc
xor
adc
call
adcl
mov
test
push
dec
sbb
mov
pop
xor
cltd
push
cmp
xchg
xor
adc
cltd
add
or
adc
fsubp
loop
sub
push
popl
mov
mov
xchg
jns
cmc
stc
sub
rcrb
aas
adc
mov
xchg
mov
notl
cmp
sbbl
sub
adc
mov
sbb
hlt
in
cltd
test
movsb
das
pop
xchg
lcall
ss
pop
jmp
adc
addl
push
enter
adc
sbbb
sbb
mov
mov
sbb
stc
jg
push
addb
jne
jmp
js
xchg
sahf
mov
rorb
add
sub
pop
inc
adc
dec
jo
dec
ljmp
pop
mulb
or
mov
and
lock
cmp
and
cmp
pop
and
inc
faddp
mov
out
xchg
push
cmpsb
les
cmp
dec
cmp
push
pusha
and
mov
push
out
les
and
ret
or
mov
inc
outsl
adc
in
mov
shll
xchg
dec
jbe
dec
jne
nop
ret
cld
xchg
sahf
in
sti
cmovb
scas
cmp
xor
inc
in
dec
leave
or
jge
mov
xchg
mov
sbb
mov
cmpsl
inc
pushf
mov
xchg
push
jg
mov
mov
aaa
pop
xchg
add
mov
mov
xchg
cmp
cmp
jmp
jne
mov
call
and
nop
mov
add
std
sti
sbb
jge
mov
jmp
nop
out
fdiv
jp
or
pop
movsb
testl
inc
xchg
cmp
movsl
cmp
pusha
icebp
cvtps2pd
jge
test
loop
adc
movsb
dec
sar
fs
mov
fwait
sub
and
mov
mov
add
or
scas
dec
inc
push
adc
nop
cmp
mov
inc
fldenv
jge
xor
and
aaa
xor
xchg
or
and
mov
adc
inc
xchg
and
addb
je
ja
inc
push
mov
mov
mov
popa
pop
aas
push
sub
inc
jne
jp
test
dec
push
or
push
mov
pop
or
jge
push
or
add
shll
and
cmp
cmp
cwtl
jl
dec
sub
dec
and
adc
rcll
out
or
imul
mov
repz
sbb
lret
cli
jne
cmp
add
int
cmpsl
mov
pop
cmp
sarb
jnp
adc
stc
out
popf
lcall
scas
ja
fisttpll
fimuls
mov
jns
or
sbb
pop
mov
lret
or
aas
xchg
cmp
sub
shrl
add
out
mov
or
enter
enter
mov
cmp
sub
add
adc
inc
ret
xlat
push
mov
pop
mov
outsb
cld
inc
fcoms
xchg
rclb
call
fsubl
or
fbstp
std
jle
xlat
push
loopne
int
adc
dec
in
adc
pop
jg
mov
add
or
mov
addb
stc
cmp
cs
test
dec
add
ret
jle
lret
push
jo
xor
sub
dec
dec
push
jae
inc
jecxz
cwtl
add
push
jbe
adc
inc
mov
pop
cmp
fs
hlt
lods
pop
xchg
js
xchg
add
ds
je
or
sbb
mov
xchg
xor
xor
jb
add
push
add
mov
inc
lods
call
mov
invd
sbb
test
dec
jg
pushf
out
adc
cmp
and
push
enter
push
je
jbe
and
adc
mov
js
jns
add
not
and
mov
push
push
inc
dec
pop
mov
js
jae
test
pop
adc
orl
or
outsl
fcmovu
sub
xchg
xchg
stos
or
add
cltd
mov
inc
in
mov
test
mov
mov
push
pop
sub
mov
pop
mov
xchg
enter
mov
dec
inc
jno
or
xchg
sbb
adcb
xchg
lret
dec
jne
jle
cmp
adc
adc
and
sbb
clc
jnp
dec
mov
fstl
jo
jle
jg
and
adc
inc
pop
lahf
jle
pop
xchg
xlat
xchg
loopne
cmp
jge
mov
hlt
rcll
test
lret
add
lret
jge
repz
pop
ja
jl,pt
lods
aad
rorb
sti
cmp
jmp
cs
push
outsl
or
or
xor
fmul
push
movsb
xchg
cmp
decl
push
jmp
and
cmp
or
sti
push
cld
mov
jge
add
cld
mov
xchg
sub
jae
mov
cmp
pop
int3
adc
cs
test
push
mov
push
sbb
mov
fildl
std
jb
lods
mov
fsubrs
inc
adc
fsubrl
in
add
xchg
xor
or
fistps
scas
push
xchg
aad
popa
pop
cmp
add
dec
or
cmc
jne
jge
pop
cwtl
sub
sarb
jge
scas
adc
es
pop
jp
fldenv
inc
sbb
sub
mov
aam
mov
test
and
jmp
loop
push
je
dec
decb
pop
loopne
push
adc
fdivrs
popf
aam
bound
cwtl
xor
jne
mov
and
ja
call
loope
add
enter
out
cpuid
pop
ja
fwait
pop
lret
sub
mov
pop
out
or
loopne
jmp
and
sbb
jge
push
mov
mov
push
das
mov
sbb
sub
mov
clc
aam
stos
jecxz
dec
fdivr
clc
inc
and
push
jl
aas
push
dec
out
sub
add
or
loop
subl
mov
and
mov
sbbl
cld
inc
xor
mov
xchg
inc
insl
lock
jmp
inc
or
lea
insb
cmp
xchg
iret
scas
and
push
dec
inc
repz
sub
clc
jmp
ficompl
pop
notl
inc
adc
lods
adc
ret
pop
adcl
iret
les
mov
add
push
scas
les
lea
sbb
and
jg
add
test
sub
jge
movsl
es
mov
xor
adc
dec
sbb
cmc
cmp
loope
mov
and
inc
jno
inc
adc
divb
out
das
arpl
into
push
lcall
dec
xor
lds
ret
das
jne
in
sub
mov
cwtl
pop
mov
jle
xor
inc
and
adc
mov
ss
push
xchg
fcompl
leave
cld
icebp
shlb
sbb
push
rcll
sti
int3
mov
bound
jmp
cltd
sbb
popl
movsl
pusha
sub
sbb
cmpb
dec
mov
xchg
mov
arpl
dec
hlt
and
cld
je
and
mov
aaa
mov
je
repnz
ret
adc
jnp
mov
out
ftst
outsb
pop
add
push
fadds
dec
pop
enter
daa
dec
and
cmc
fsubrs
push
pop
repz
mov
jmp
adc
andb
cmp
insb
add
inc
and
mov
cmp
je
test
or
add
mov
push
jmp
lea
cltd
out
and
popa
sub
mov
pop
out
pop
aaa
mov
cmpb
mov
jne
mov
aam
in
push
mov
pop
int
and
adc
jmp
xchg
dec
shlb
cmpsb
adc
dec
scas
push
cmp
pusha
sbb
ret
sti
pop
sbb
cmp
push
and
btcl
test
js
mov
dec
add
mov
sub
sti
mov
mov
fstpl
shr
outsb
cld
ljmp
pop
mov
dec
in
sub
jne
dec
or
cltd
cs
daa
jb
mov
ds
lock
jg
inc
mov
xor
test
jl
inc
arpl
popa
pop
push
in
pop
sub
adc
shll
jge
cltd
mov
lock
sub
mov
hlt
scas
lods
test
push
adc
and
fistps
mov
xchg
cmp
bound
in
ds
mov
inc
test
lock
pop
xchg
mov
sub
dec
sub
cmp
lods
lods
adc
inc
pushf
jge
mov
iret
nop
mov
push
cwtl
inc
movsb
or
sarl
ljmp
xor
adc
sbb
je
push
subl
cmp
lock
pop
cwtl
pop
or
inc
pop
or
mov
rcrb
inc
lods
dec
push
cltd
sti
and
adc
add
and
jmp
xor
inc
lea
jbe
fsubrl
pushf
les
mov
adc
loop
xor
pop
sub
or
and
xorl
loopne
add
and
pop
xchg
les
sbb
xchg
xchg
test
cmp
cmp
inc
and
lock
cmp
test
aam
frstor
icebp
xchg
mov
dec
mov
mov
aad
jne
jge
test
xchg
insl
pop
andb
mov
add
rcll
mov
jns
jle
leave
xor
mov
fs
inc
dec
nop
mov
add
enter
jne
dec
or
xchg
cmp
pushf
in
cwtl
outsb
fs
push
call
pop
jo
sbb
mov
mov
lds
test
pop
jbe
test
adc
cmp
inc
shlb
jmp
xchg
std
xor
cmp
xchg
jg
in
push
bound
mov
and
les
mov
shll
cld
mov
in
jle
addr16
int3
sub
xchg
xchg
icebp
adc
pop
mov
or
adc
push
inc
or
adc
adc
jg
mov
call
adc
inc
shrb
jmp
push
cmp
sub
shr
or
sbb
ds
test
xor
mov
mov
lret
je
lock
loop
sbb
mov
push
cmp
cmp
inc
fmuls
inc
test
push
daa
push
xchg
mov
mov
dec
dec
mov
fwait
scas
xrelease
and
mov
cld
in
push
cmc
xor
adc
and
movb
stos
mov
xor
stos
or
cmp
inc
and
add
add
or
or
sbb
inc
in
cwtl
outsb
repnz
jne
and
inc
mov
mov
aam
mov
orl
or
lea
int
nop
sub
dec
dec
inc
and
or
cmp
enter
pop
lret
xor
stc
jbe
cmp
shlb
xor
cltd
lret
pop
jns
mov
ret
das
adc
jg
cmpsb
dec
add
js
aaa
adc
sbb
inc
dec
and
sub
sbb
sbb
cmp
or
xor
or
xor
int
lret
test
inc
adc
nop
xchg
add
insl
xor
adc
xor
lds
xchg
push
or
mov
pushf
push
popf
mov
inc
lds
int3
inc
inc
enter
mov
xor
and
jecxz
stc
inc
add
or
stos
sub
mov
xor
clc
aam
aad
mov
mov
cld
mov
nop
js
sbb
push
push
pop
lret
sbb
adc
int
inc
adc
cltd
ficoms
xor
outsl
and
lahf
and
shll
sub
pop
mov
dec
jne
jo
inc
nop
cmc
loop
xchg
clc
sbb
and
cmp
test
ljmp
inc
adc
inc
xor
xor
cmp
pop
testl
push
ljmp
and
lea
push
and
add
pop
mov
mov
fstl
fwait
popf
jg
adc
aad
das
cld
dec
hlt
xor
mov
sub
syscall
adc
jge
stc
sbb
popf
or
adc
or
xor
dec
in
sbb
mov
movzwl
in
adc
mov
sub
sar
mov
inc
cld
inc
lcall
into
mov
or
das
xchg
or
in
inc
sbb
cmpl
xor
pop
jbe
dec
negb
ljmp
stos
dec
jmp
sahf
fs
sbb
daa
mov
or
andl
xor
ret
fwait
adc
and
nop
jp
add
pop
or
jae
xor
jmp
cmc
sbb
dec
push
add
dec
dec
dec
inc
dec
push
loope
pop
repnz
inc
mov
aaa
rorb
js
and
cmp
aaa
mov
adc
inc
or
or
push
mov
and
int3
in
shl
into
push
les
xor
dec
add
test
fadd
incl
add
pop
adc
in
jmp
cmp
test
aaa
jl
cmp
or
cmpl
sbb
sub
sub
mov
sub
in
jnp
jg
fiaddl
cmp
mov
lock
dec
icebp
pop
and
cmpb
je
sbb
sarb
xor
push
jp
xor
pusha
push
test
and
push
or
xchg
or
mov
xor
sub
les
inc
mov
pop
sub
cmp
jmp
imul
xor
jnp
jp
dec
fidivl
cs
xor
sbb
cli
imul
cwtl
lock
fidivl
inc
aaa
mov
jne
mov
mov
or
inc
xchg
or
inc
and
test
and
bound
nop
xor
push
and
sub
push
cwtl
and
inc
adc
es
rorl
aas
mov
shlb
add
cmp
in
js
ret
or
lods
push
add
pusha
lods
jg
movsb
mov
shrl
inc
fs
push
scas
mov
ljmp
rorb
dec
push
mov
fwait
pop
or
push
ret
sahf
bound
xor
je
outsb
or
rcrl
xchg
inc
fsubs
mov
inc
xor
lods
loopne
pushf
data16
or
push
pop
mov
aam
xor
int
adc
loope
add
fmull
xor
and
cmp
or
add
mov
pusha
mov
mov
fbld
cmp
mov
inc
cmp
adc
jle
push
and
addr16
ror
pop
fs
or
jae
gs
inc
mov
sbb
sbb
mov
ret
lret
enter
mov
mov
je
push
cmp
inc
test
push
rclb
inc
cmp
jl
loope
or
lds
ror
in
nop
mov
cmp
jo
sbb
sub
sbb
pop
push
les
cltd
adc
mov
mov
popf
sbb
pop
pop
adc
cmp
movsb
push
and
les
imul
popa
pushf
aas
and
mov
dec
inc
mov
push
rolb
or
cld
adc
xor
mov
xor
push
ja
ja
jne
sbbb
test
adc
dec
pusha
add
sbb
in
clc
pusha
inc
cmp
pop
inc
mov
jge
or
inc
pop
pop
repz
cmp
js
mov
cld
push
adc
xchg
jmp
inc
nop
push
js
add
jl
imul
cli
sti
test
push
insl
bound
lods
cmp
dec
cmp
gs
mov
mov
jl
add
jae
mov
xor
fs
dec
test
xorl
outsl
neg
out
arpl
inc
cmp
sbb
insl
je
lock
push
jmp
or
frstor
fcmovbe
push
ds
out
push
daa
mov
mov
js
ss
int
add
testl
xor
or
movl
or
mov
add
and
push
xchg
in
pop
or
aad
aas
inc
jbe
int3
icebp
in
or
cmp
cwtl
les
popa
lret
add
jg
es
aas
jl
mov
and
cwtl
repz
les
xor
sbb
jl
sbb
adc
mov
sbb
mov
jne
push
shrl
push
hlt
mov
sub
bound
ffree
xchg
andl
adc
dec
outsb
mov
xchg
imul
ja
mov
push
inc
mov
dec
or
xchg
scas
xor
stos
adc
mov
fldl2t
es
dec
push
push
je
movsb
insb
int3
pop
xchg
push
dec
out
push
or
ret
sbb
dec
stos
sub
pcmpgtb
mov
and
jle
mov
xlat
loop
cmc
out
orb
add
push
push
test
push
xchg
adc
nop
jo
dec
push
dec
pop
xchg
notl
push
add
addb
mov
sub
lods
movsb
cmp
pop
sub
cmp
push
test
jecxz
sub
add
mov
or
or
arpl
or
popa
adc
imul
test
call
lods
aam
push
lahf
and
and
jp
push
fmull
pop
push
mov
cmpsl
mov
loop
cmpsl
loop
inc
dec
add
fldenv
call
cmp
or
movsl
push
push
mov
mov
push
outsb
mov
xor
clc
cmpsb
cmp
gs
push
das
add
cmp
push
ja
les
and
int3
iret
or
adc
test
adc
dec
jl
push
inc
gs
adc
or
outsw
aas
cmpsb
adc
or
inc
rol
or
es
adc
into
push
mov
ret
inc
sbbb
lods
mov
je
sbb
mov
jp
mov
add
and
mov
push
fldt
mov
ljmp
mov
mov
fs
js
add
js
and
nop
and
inc
xlat
sub
je
inc
cli
xor
out
insb
sub
std
jb
loop
cmpsb
xor
sbb
xchg
mov
es
mov
inc
inc
push
cmpsl
mov
sbb
pop
sbb
jo
pop
jmp
shrb
push
stc
or
gs
inc
call
xor
cltd
mov
add
hlt
addb
in
fidivrs
mov
push
jmp
in
icebp
addl
pop
imul
xorb
push
cmpsl
lret
movsl
add
sahf
add
push
fwait
or
add
jle
or
mov
pop
cmp
or
or
and
xor
or
insb
sbb
cmp
cmp
cmp
add
out
leave
in
shr
fldpi
loope
ljmp
out
in
in
jecxz
loop
loope
loopne
fmulp
fmul
fcmovne
fcmove
fxch
fmul
xlat
iret
iret
aad
aam
ror
ror
ror
ror
iret
iret
clc
iret
into
iret
int
int3
iret
lret
iret
lret
iret
icebp
iret
leave
iret
enter
pop
out
nop
test
loopne
pushf
and
mov
pusha
or
add
dec
loopne
and
dec
lods
xorl
lods
add
dec
mov
pop
mov
mov
aam
adc
or
adc
add
add
xor
mov
sub
pop
inc
xchg
adc
mov
in
movsl
sbb
cmpsb
add
test
xor
adc
mov
lock
lcall
sbb
fs
mov
xchg
mov
movsb
inc
mov
inc
mov
push
js
xor
fdivs
or
push
jl
xor
sbb
and
xchg
icebp
xor
or
gs
nop
xor
into
inc
lock
insb
clc
mov
mov
add
and
cli
pop
add
or
inc
into
add
push
mov
cmp
fisttpl
and
jl
loopne
mov
xchg
js
mov
cmpsl
add
popf
xchg
mov
in
pop
push
popf
dec
pop
mov
cltd
push
jb
scas
or
pop
movsl
add
adcl
cmp
or
inc
dec
sti
adc
and
pop
ja
fs
xchg
pop
dec
sbb
roll
and
bound
cwtl
cmp
adcb
mov
inc
idivb
mov
lods
mov
jns
leave
pop
inc
test
xor
jle
and
xor
jae
pop
jae
jne
pop
adc
mov
filds
pop
sbb
xor
xchg
inc
jle
sbb
push
push
inc
nop
sub
or
cmpsb
adc
nopl
push
je
pop
arpl
xchg
push
add
addr16
arpl
xchg
xchg
pushf
pop
pop
dec
lods
jne
or
and
aam
jno
movsb
bound
popa
inc
nop
js
cmp
or
jp
cmp
je
fidivrl
jbe
mov
scas
repnz
push
popa
iret
enter
push
jo
arpl
or
lret
imull
xor
and
sub
or
and
sub
add
dec
push
or
inc
jae
add
dec
pop
dec
fidivrl
sbb
sub
movsl
xor
push
imul
inc
cmc
popa
fiadds
cwtl
pusha
push
pop
dec
dec
push
dec
std
inc
rorl
mov
jns
sbb
leave
stos
pusha
jbe
add
xor
dec
pop
fmull
mov
cs
dec
adc
mov
add
dec
inc
out
das
pop
mov
lods
inc
sarb
sub
mov
dec
stos
cmp
cmp
pusha
cmp
sub
es
aas
je
cmp
sub
dec
sbb
add
scas
cs
cmpsb
add
ret
adc
das
inc
and
sub
js
adc
sbb
sbb
rolb
jnp
aaa
cmp
dec
mov
or
xchg
movswl
and
sbb
sbb
inc
and
push
pop
and
lahf
das
mov
add
sub
xor
cmp
dec
pop
in
xchg
mov
ret
repz
repnz
jle
jle
jle
dec
mov
stc
roll
mov
mov
mov
mov
sub
test
xchg
or
adc
and
pop
orb
inc
je
add
fimuls
test
push
out
or
cmp
imul
adc
add
xchg
inc
incl
xor
jmp
int3
or
sbb
xor
cld
or
ror
xor
or
daa
or
cmp
or
and
mov
jo
or
xchg
mov
lock
sub
mov
or
insb
out
sbb
cmp
push
inc
jo
add
icebp
or
repnz
neg
in
sbb
imul
lcall
stc
adc
or
mov
add
sbb
or
push
mov
mov
imul
jecxz
les
call
int3
sub
testl
push
fs
inc
cld
pop
iret
lret
dec
movsb
mov
adc
vpsubq
or
adc
mov
push
adc
adc
fmull
outsb
nop
pop
jg
or
or
bound
jge
outsb
test
push
inc
jb
jo
sub
stc
mov
in
or
in
fadds
test
push
cmp
cld
pop
scas
or
pusha
test
adc
push
pop
test
adc
ja
xor
and
insl
adc
push
pop
hlt
mov
pop
ret
sbb
adc
or
xchg
pop
jg
or
cmpxchg
pop
adc
fcoms
cmp
in
sub
and
adc
movsl
loopne
or
enter
xchg
xor
fs
ja
sub
adc
and
push
xor
mov
push
push
adc
hlt
and
sub
fcomps
adcb
aam
adc
push
hlt
adc
das
add
pop
adc
gs
js
or
jb
nop
jae
jo
or
dec
insl
das
or
je
nop
nop
mov
adc
orl
mov
rclb
int3
pop
mov
push
enter
or
inc
lods
xor
or
les
adc
mov
xlat
lret
inc
xchg
pop
inc
jmp
mov
and
or
inc
imul
outsb
cmp
or
pop
stc
flds
arpl
cld
pop
inc
sub
scas
mov
dec
les
ja
and
dec
adc
adc
popa
daa
mov
out
dec
push
push
aaa
inc
inc
dec
pushl
or
xlat
xlat
cmp
fwait
inc
inc
pop
or
add
jae
gs
int
pusha
cmp
mov
call
push
add
inc
pop
sub
loope
push
mov
gs
xchg
jae
mov
mov
or
ret
push
js
andl
cmpsl
sbb
pop
sub
pop
pop
adc
inc
lods
cmp
mov
or
or
hlt
inc
push
mov
inc
inc
or
or
push
mov
gs
es
daa
cmp
aam
ljmp
xchg
or
sub
mov
and
inc
call
dec
wbinvd
sbb
and
orb
je
sub
popf
dec
jl
push
fsubl
push
add
or
sti
add
cmp
punpckhbw
or
or
das
xor
arpl
or
cld
inc
sub
inc
repz
rol
insb
pop
pop
ret
push
inc
daa
mov
out
sub
pop
mov
inc
mov
xchg
aam
jne
pushf
sub
inc
add
pusha
sub
or
sti
sub
enter
lods
inc
push
pop
js
push
pop
adc
mov
sbb
push
ret
cmpsb
cmp
push
adc
xchg
dec
pop
lahf
lock
cmpb
push
jmp
mov
mov
mov
out
or
push
jp
mov
push
push
push
je
push
sar
xchg
leave
add
push
push
pop
adc
addb
pusha
adc
sti
add
pop
adc
mov
ss
jne
push
adc
or
or
movl
stc
out
add
xchg
xor
bound
data16
je
adcb
js
add
jne
adc
nop
mov
push
mov
aas
jle
push
outsl
imul
sub
test
xchg
mov
cmp
push
or
mov
add
dec
pop
mov
sub
sbb
jae
push
pusha
or
push
adc
push
mov
dec
mov
ljmp
arpl
lcall
adc
xchg
subb
push
jae
adc
inc
adc
insl
enter
shrl
adc
adc
pop
sbb
and
addr16
fs
sub
push
inc
movsb
popa
xchg
push
jo
orb
or
inc
sub
nop
push
rcl
iret
cmp
outsl
movsl
lods
mov
push
jo
and
les
or
roll
mov
dec
adc
imul
aam
inc
jo
bnd
cwtl
cmpsl
ljmp
jns
and
cmpsl
mov
cmp
sbb
push
adc
add
adc
xor
cmp
adc
das
ret
aam
inc
or
mov
mov
sbb
dec
rorb
pop
divl
adc
add
imul
test
sub
xchg
ret
cmpl
adc
xor
movsl
add
push
addr16
and
xchg
sub
sti
out
je
shlb
push
mov
jle
add
mov
ja
sub
inc
adc
mov
cmp
or
pushf
or
lahf
in
imul
xchg
scas
cltd
cwtl
imul
mov
or
adc
and
js
ds
int3
adc
adcl
call
jge
fdivrs
adc
jae
and
pop
fsubrl
adc
or
pop
jge
divb
add
push
pusha
pop
cld
clc
idivb
add
lods
sub
test
cmp
pop
xor
mov
popf
jns
out
jb
pop
dec
or
fnstsw
icebp
jns
mov
lods
addr16
jl
jp
or
aaa
cld
call
xor
mov
pop
icebp
insb
adc
or
insb
mov
jmp
imul
fsubrs
es
scas
fs
xchg
or
mov
push
or
add
inc
cmpb
ljmp
mov
dec
decb
or
add
sbb
inc
adc
add
sbb
inc
sbb
add
sbb
inc
and
add
sbb
inc
sub
cwtl
fcoms
ljmp
loopne
lods
and
dec
dec
aad
and
inc
lods
mov
mov
push
mov
inc
sub
add
cmp
pop
lods
test
ret
dec
xchg
std
nop
mov
mov
add
push
sbb
sbb
mov
inc
sahf
or
ds
loop
pop
push
dec
call
sbb
je
mov
lods
sub
xchg
aad
xor
pop
dec
sbb
xor
pop
dec
mov
movsb
or
adc
mov
rorb
sub
push
enter
pop
or
pop
call
sbb
inc
xchg
je
push
push
sub
jnp
pop
pop
lods
aam
mov
push
sub
mov
fldl
pushw
mov
or
repz
test
sbb
pop
push
dec
push
cmp
cmp
and
dec
data16
cmc
jmp
repnz
cltd
sbb
mov
hlt
cmp
add
dec
dec
scas
fcmove
or
sub
cmp
push
testl
pushf
das
push
pop
xchg
cmp
insb
inc
data16
jge
push
push
cmpb
leave
outsb
inc
xchg
dec
fists
xor
xorb
pop
fst
sub
and
inc
leave
xchg
jp
inc
and
cmp
punpckhwd
pop
or
mov
add
pop
or
je
enter
stos
adc
jmp
sahf
inc
inc
inc
add
add
mov
mov
aas
add
lret
fnsave
movsb
push
mov
inc
inc
push
mov
xlat
stc
pop
repnz
mov
rolb
and
mov
mov
sbb
repnz
push
lea
int
int
cltd
add
pop
pop
cmp
mov
xchg
xor
push
mov
mov
in
pop
mov
enter
xor
sub
xchg
push
ret
or
fwait
jge
sub
and
cmp
push
or
pop
cmp
jl
dec
ja
inc
jle
sub
sub
jmp
add
xchg
adc
daa
or
inc
adc
xor
jmp
movd
jae
push
fmulp
inc
dec
inc
and
out
mov
mov
cltd
mov
jl
adc
add
shll
js
aad
mov
xchg
jle
sti
cmp
add
dec
adc
scas
cmp
out
fwait
jo
push
or
cmp
ja
cmp
jo
movb
jmp
cmc
xor
or
mov
dec
or
add
fadd
adc
adc
add
or
mov
mov
add
loope
loopne
loope
fstl
pushf
fisubs
cmp
xchg
mov
clc
push
push
and
dec
decl
imull
jge
outsb
cmpl
and
sub
mov
and
out
jns
insb
cmp
pop
xchg
push
mov
je
xlat
or
push
pop
adc
jmp
sub
popl
je
adc
xor
lar
clc
stos
push
movsb
ds
bound
or
hlt
lea
push
pop
cmpb
xor
clc
stos
cmpsb
jmp
adc
pop
out
gs
or
out
dec
mov
dec
xchg
push
mov
dec
notl
adc
add
cmpl
lods
adc
addb
mov
fisubrl
adc
jg
cmp
or
jmp
and
idivl
inc
pusha
out
lea
dec
pop
fmuls
lock
jge
testl
cmp
imulb
add
and
roll
push
xor
or
mov
mov
pop
jp
sbb
mov
xlat
push
pushf
ds
ja
dec
and
pop
lock
mov
xchg
sub
push
mov
push
pop
adc
jne
and
xor
cs
ror
dec
jle
xor
cmp
fldcw
in
lock
leave
push
divl
loope
adc
or
popl
push
mov
jne
adc
jmp
cmp
fidivrl
add
jmp
lea
dec
and
leave
adc
dec
dec
loop
adc
jns
les
push
in
out
add
adc
pop
dec
adc
mov
adc
jmp
xor
iret
dec
cmp
push
xor
call
mov
enter
sub
xor
or
xor
xor
and
or
cmpb
xchg
rorl
push
out
subl
or
push
pop
shl
test
adc
test
inc
sub
and
adc
adc
cwtl
or
or
lcall
cmc
nop
and
jo
add
xor
sar
pop
and
pop
adc
inc
dec
or
mov
jmp
roll
je
shlb
push
jmp
or
add
inc
jmp
ds
push
cmp
mov
out
sub
mov
xor
jb
in
and
mov
xchg
or
push
rcl
gs
fnstenv
or
mov
mov
jae
xchg
js
or
pop
or
jne
fdivs
xchg
add
jnp
inc
ja
push
cmp
imul
mov
cwtl
push
rorb
dec
das
jmp
mov
fstl
ret
pop
pop
mov
loop
test
sub
pop
out
mov
sbb
add
mov
pushf
mov
add
push
mov
mov
repnz
bound
mov
sbb
fs
cmp
cwtl
or
inc
addb
push
cmp
sub
adc
add
and
add
fisttpll
testb
jae
out
mov
mov
in
push
or
push
push
add
mov
and
arpl
lea
jnp
cmpsl
and
jecxz
add
repnz
movsb
or
push
adc
or
sbb
xchg
ret
test
loop
mov
stos
adc
push
and
push
push
push
addl
testb
inc
inc
mov
xchg
call
cmpb
push
call
pop
mov
test
xor
adc
test
pop
scas
or
clc
movswl
add
pop
sub
cwtl
xchg
rclb
xchg
imul
push
sub
in
adc
test
pop
cmc
sbb
inc
leave
mov
and
lea
pop
fmul
xor
dec
and
jne
jnp
movsl
daa
dec
js
add
mov
js
dec
mov
les
dec
std
je
movsb
imul
xor
adc
out
daa
hlt
cmp
cmc
adc
rcll
xorb
fcomps
jmp
test
adc
xor
jl
sbb
leave
hlt
imul
inc
ret
sub
in
pop
stc
test
jle
mov
or
adc
fisttpl
xchg
mov
mov
fdivrp
fstpl
fwait
sub
sbb
push
sub
test
jle
clc
into
cld
jns
adc
ss
xchg
out
jl
push
push
aaa
adc
add
inc
movb
sub
loope
cmp
pop
pop
incb
adc
sub
cmp
mov
push
pop
push
push
xor
or
leave
inc
les
inc
jle
outsb
andb
xorl
xchg
mov
inc
fidivl
push
cmp
movsl
jne
dec
inc
js
cmpb
push
jmp
leave
push
pusha
pop
jne
cmp
adcl
mov
test
or
test
daa
sub
adc
pop
cmp
push
les
mov
adc
jo
fildll
das
adc
sti
imul
xor
sub
fisubl
fldt
and
and
dec
push
xchg
inc
or
add
sub
enter
jne
stc
mov
push
xchg
sub
jne
push
push
aam
add
add
stc
inc
inc
flds
jno
or
cld
ljmp
dec
aaa
jge
xor
xchg
les
add
push
push
or
xor
xor
ss
and
push
ljmp
mov
call
jne
mov
movsl
loop
push
push
cltd
cmp
mov
insl
push
sub
dec
and
mov
lds
scas
or
dec
test
mov
hlt
push
mov
xor
fcmovnb
mov
mov
add
xor
inc
dec
and
dec
sbb
xchg
js
sbb
mov
mov
push
sbb
pop
jl
icebp
push
add
shrb
and
pop
and
in
cmp
cmp
ffreep
push
inc
insb
xchg
sti
pop
sub
cwtl
enter
les
cmpsb
xor
adc
push
testb
cli
sub
adc
nop
or
adc
and
jge
out
insb
xchg
mov
adc
jge
push
push
xchg
ljmp
xor
sub
cmp
push
xchg
or
aad
adc
cmp
mov
sub
sbbl
cltd
lahf
aas
mov
sub
stc
push
or
xor
ja
adc
jbe
jbe
cs
mov
mov
movsb
xchg
jg
lret
or
fs
or
mov
ret
sub
sbb
pop
in
sub
mov
leave
ja
icebp
jl
cmpsl
test
sub
cli
push
mov
sbb
lock
or
mov
scas
pop
and
jns
fisttpll
popa
push
xor
test
mov
adc
mov
cmpsl
negb
or
adc
mov
fwait
xor
xchg
enter
xor
mov
outsl
and
sub
imul
inc
jecxz
dec
bound
push
imul
and
cmc
push
shll
lds
sbb
push
fsts
mov
cmp
push
aas
or
add
dec
push
outsb
and
daa
in
mov
or
push
pop
nop
movsl
pop
ja
push
jg
pop
lock
mov
dec
pop
hlt
push
cmp
repnz
in
add
ja
xchg
orb
inc
jp
stos
mov
sub
cmp
cmp
cli
cld
in
popf
push
cmp
in
inc
lock
or
add
and
movsl
jnp
xor
stc
cmp
inc
inc
negb
sti
into
cwtl
jge
inc
popa
dec
hlt
jne
pop
and
dec
in
je
mov
mov
popf
cmpl
mov
hlt
sbb
inc
xor
dec
xchg
aaa
push
hlt
mov
test
push
aaa
mov
stos
lods
ret
jbe
jne
es
mov
cmpsl
mov
rcll
push
jecxz
orl
push
push
inc
pop
cmpsl
stc
and
jl
jae
movsb
xor
bound
iret
pop
pop
in
out
add
ja
mov
push
test
lds
pop
jb
fs
test
movsb
sti
popf
test
aam
daa
je
out
andl
clc
inc
xor
pusha
out
inc
push
sub
cmp
pop
movsl
es
push
sbb
xlat
adc
jb
inc
and
hlt
cwtl
orb
dec
push
pop
and
lret
lods
daa
push
in
pop
cmpsb
cmpl
xor
push
adc
or
sbb
pop
adc
cs
or
jns
xor
mov
xchg
pushf
xchg
pop
mov
xlat
js
pop
or
es
hlt
xor
pop
jmp
pop
cmp
dec
jno
or
sbb
jae
sbb
frstor
dec
je
cmp
cmp
fimuls
je
sbb
shlb
push
rcrl
push
adc
je
xor
inc
rcrb
sahf
loope
ja
pop
das
js
pop
mov
ja
int3
pop
pop
imul
xchg
sbb
push
mov
xlat
xchg
mov
add
icebp
add
inc
adc
ss
jbe
imul
and
les
mov
popa
cmp
hlt
dec
lret
aas
daa
or
mov
mov
sbb
in
and
push
jne
xlat
cmp
and
and
jle
dec
xor
adc
xor
xchg
jno
out
xchg
loop
shrb
and
or
cli
jecxz
ret
inc
push
adc
inc
or
je
mov
jae
das
ficoms
jb
or
je
cmc
xchg
stc
sub
gs
std
adc
andl
mov
jle
icebp
mov
sbb
nop
xor
adcb
mov
mov
or
xchg
sbb
mov
adc
inc
push
mov
popa
add
test
adc
sub
cmp
cmpsl
pop
sub
and
push
or
cmp
loopne
stos
cmp
sbb
inc
sbb
mov
movaps
lds
fs
mov
jg
cmc
push
mov
inc
or
movsl
shll
and
and
fisttps
aad
cmp
orl
sbb
xchg
jne
lods
push
push
js
xchg
push
jne
xchg
aas
loopne
jo
xchg
cmp
test
lea
xchg
hlt
mov
xor
and
test
mov
lret
add
xchg
adc
pop
cmpsb
mov
mov
xor
xchg
inc
inc
add
mov
pusha
xchg
mov
test
das
inc
popa
ljmp
insb
push
shlb
sbb
cmpl
inc
int3
push
add
pop
mov
pop
add
pop
pusha
or
data16
hlt
jmp
call
inc
mov
mov
outsl
fsts
xor
mov
das
clc
out
sub
and
push
in
jge
mov
push
pop
hlt
pop
cmp
rcl
frstor
push
push
dec
dec
push
mov
js
xchg
popa
and
jmp
sub
inc
insb
rcrl
mov
xchg
add
adc
mov
inc
sbb
aaa
mov
cli
sub
mov
test
pop
orl
adc
lahf
gs
sub
outsb
loop
mov
xchg
and
ljmp
daa
hlt
addps
mov
xlat
xchg
mov
sbb
lds
cmp
cmp
push
push
shll
js
dec
or
mov
dec
sbb
pop
mov
push
dec
xchg
scas
hlt
je
popf
push
cltd
lds
je
xchg
sbb
mov
or
orb
adc
mov
jne
lods
sub
insb
adc
adc
incl
dec
out
and
subl
fstps
adc
push
xchg
push
pop
lds
adc
mov
testb
add
xor
cmp
xor
jae
pop
fs
inc
cmc
jo
dec
xchg
out
mov
mov
data16
test
sbb
cli
and
cld
test
test
dec
push
or
sub
dec
pushf
mov
jmp
mov
add
hlt
push
adc
imul
jg
push
pop
dec
movsb
or
adc
inc
xor
pop
pusha
out
inc
lock
xlat
inc
repnz
sbb
and
jle
ljmp
push
cmp
or
or
lds
inc
push
mov
sub
aas
cmpb
je
xchg
les
xchg
cmp
lds
and
int
inc
repz
push
aaa
cmpl
pop
fsub
fistl
cmp
xchg
or
dec
clc
dec
cmc
add
shlb
in
push
cmp
xor
daa
sub
andb
cmp
sub
adc
fadds
push
and
dec
cmp
inc
scas
mov
in
xor
dec
popf
insb
cmp
push
orl
and
subb
arpl
jnp
jle
jmp
cli
inc
pop
dec
aam
jns
dec
popa
adc
mov
test
test
outsb
mov
jns
cmpl
dec
test
push
xchg
jl
inc
test
sti
xchg
xchg
or
test
divb
js
jno
xor
lcall
pop
popa
mov
cmp
mov
ffree
adc
xchg
adc
jb
push
outsb
in
sbb
or
mov
xor
inc
mov
sub
pop
adc
and
adc
lcall
inc
adc
clc
imul
add
xchg
sbb
and
pop
and
adc
inc
xor
inc
sub
sub
sbbb
dec
lcall
out
lea
pop
aad
pop
jmp
mov
and
addl
xor
push
inc
mov
dec
add
dec
and
lds
dec
push
cmpsl
and
or
xchg
ret
mov
and
je
dec
pop
mov
cs
adc
push
or
push
in
je
xchg
push
pop
sbb
sub
sub
sbb
mov
mov
dec
mov
dec
add
cmpsl
scas
mov
inc
xor
lahf
push
scas
push
shll
mov
mov
jno
fdivr
push
clc
and
nop
insb
aad
mov
fs
sub
sub
call
xchg
lea
push
push
sti
fmuls
mov
fs
stc
mov
and
test
adc
mov
cltd
dec
or
bound
imul
and
inc
movsl
cmp
adc
shlb
push
not
mov
imul
mov
add
cld
adc
fstps
adc
je
leave
push
fstps
adc
cmc
jbe
loopne
push
repnz
xchg
and
jno
cmp
leave
xchg
mov
dec
sahf
dec
pusha
stos
lret
aam
cltd
fldt
jb
mov
int3
push
sar
int3
xchg
adc
inc
or
pop
pop
xlat
outsb
call
call
pop
popf
pop
shr
jg
repz
cltd
jno
imul
xor
fdivrl
js
and
imul
ljmp
mov
lret
out
mov
nop
cmpsb
mov
push
add
mov
testb
inc
addr16
flds
mov
or
es
or
lret
mov
pop
das
idiv
xchg
inc
jne
incl
xchg
lock
cmpsl
xchg
shlb
lahf
xor
aaa
add
mov
test
loope
and
and
test
xchg
adc
mov
lret
jo
movsb
add
pop
dec
lret
lock
cmc
out
cmp
adc
test
into
je
or
push
loopne
jo
mov
mov
icebp
push
push
pop
inc
pop
rorl
jmp
scas
outsb
mov
cltd
adc
sbb
xchg
adc
pop
pop
pop
or
cmpsb
push
cwtl
adc
inc
sbb
cs
sbb
dec
popa
sbb
scas
inc
inc
or
int3
pop
daa
mov
ficoml
ret
jne
movsb
adc
push
xor
mov
mov
or
mov
or
sbb
sub
xchg
xchg
mov
lock
cmp
sub
inc
cs
dec
insl
sbb
jl
inc
xchg
cmp
pop
nop
les
mov
mov
pop
push
xchg
inc
xchg
rorb
lahf
xchg
mov
cwtl
dec
cltd
shll
add
add
push
pop
je
mov
cmp
ret
xchg
je
push
sti
or
inc
popl
je
cmp
test
decl
jne
daa
ja
data16
mov
dec
or
sarb
loop
pop
in
or
movsb
lret
jne
xor
shll
dec
call
fsubrs
inc
dec
and
adc
and
sbb
mov
inc
fs
out
repnz
mov
jns
add
and
sbb
mov
out
enter
stos
fldenv
pop
cmp
add
mov
pop
out
je
sub
int
mov
sahf
sbb
inc
xor
mov
mov
adc
or
pop
nop
push
adc
test
cli
or
imul
ret
inc
dec
nop
pusha
nop
test
adc
dec
ljmp
mov
mov
in
std
outsb
sub
aam
aaa
clc
or
jg
mov
lods
push
xchg
aad
jmp
sarb
lret
jmp
xchg
add
or
dec
inc
rclb
dec
sbb
gs
bound
pop
push
stc
pop
movsl
loop
jbe
daa
ja
mov
cmp
pushl
pop
je
jne
jo
cmpsb
mov
cmp
in
aam
xor
add
push
cmp
orb
mov
daa
push
cltd
enter
sub
pop
js
ss
or
pop
je
ss
jg
xchg
daa
mov
and
push
mov
mov
add
je
sbb
aam
shlb
mov
mov
lea
sbb
test
pop
and
and
or
stc
adc
push
jo
xor
pop
les
cmp
daa
fcoms
or
push
pusha
sbb
push
xor
js
dec
mov
in
push
sbb
mov
mov
pop
clc
push
cmp
ffreep
push
call
sbb
xchg
je
insb
xchg
ud2
push
sub
in
mov
xchg
xor
js
adc
movsb
cli
je
int3
jge
testb
dec
mov
mov
jl
pop
iret
xor
mov
ja
cmp
jg
into
fs
jecxz
je
mov
pop
sbb
sbb
lret
cmp
orl
pop
or
out
dec
jecxz
push
add
or
inc
or
test
leave
je
mov
test
push
or
jno
and
ret
in
mov
mov
xorb
stos
dec
mov
or
dec
mov
adc
mov
outsl
imul
add
mov
cmc
imul
daa
mov
push
in
jns
xchg
test
push
jle
dec
mov
test
xlat
test
push
inc
in
xor
jp
pop
mov
in
leave
pop
out
hlt
daa
push
lahf
bound
jge
cmp
out
or
nop
push
and
icebp
imul
pusha
and
repz
dec
mov
addl
pop
and
pop
lahf
push
or
xor
je
mov
xchg
sbb
xchg
fnstcw
mov
push
adc
xchg
dec
xchg
fidivs
adc
fiadds
in
and
leave
mov
cmpsb
dec
pop
add
inc
cmp
mov
inc
or
cmp
jp
jecxz
pop
hlt
ficoml
into
push
jl
leave
pop
lds
scas
lcall
sbb
and
push
movsb
add
aam
dec
or
xor
mov
mov
sub
faddp
dec
out
fs
and
leave
add
xchg
and
add
in
push
dec
inc
ret
sub
add
push
push
xor
cli
enter
cmc
push
sti
out
jbe
dec
xchg
jmp
mov
jmp
xchg
test
fcomi
xchg
jecxz
mov
jl
test
mov
mov
jp
and
mov
jne
sbb
or
adc
and
adc
push
jnp
mov
das
push
add
lods
dec
push
pop
jmp
jg
das
cmp
jecxz
imul
xchg
mov
sub
or
jne
stos
popa
mov
inc
sti
and
jle
mov
xchg
imull
test
mov
lcall
js
add
rolb
pop
and
inc
mov
jo
lahf
add
repnz
daa
sbb
push
dec
out
pop
push
mov
lock
adc
xor
jns
gs
dec
sub
rolb
in
cmc
lret
lret
and
mov
cmpsb
push
lea
sub
sbb
dec
movsl
xlat
out
dec
fidivl
rcrb
insl
pop
adc
clc
dec
or
test
mov
adc
cmpb
pop
or
loope
sbb
fwait
mov
sub
gs
lea
lock
and
sbb
cld
mov
movsb
ja
or
xchg
push
jle
scas
outsb
push
stc
test
cvttps2pi
inc
xchg
mov
fdivrl
je
int
jl
sbb
outsl
sub
jns
cli
cmp
xor
and
shlb
xlat
sub
pop
jo
add
or
ss
add
mov
test
xchg
mov
inc
mulb
cmc
mov
push
aad
popa
not
inc
divb
cmp
xchg
cmp
cmpb
jne
in
movsb
inc
jmp
test
cvttps2pi
pop
testb
pop
adc
leave
stc
pop
mov
adc
dec
rorl
loope
mov
push
loopne
jle
inc
xor
js
jge
mov
push
and
sbb
hlt
cmp
mov
fdiv
test
or
mov
cltd
mov
addr16
or
aas
sub
insb
mov
or
push
pop
xchg
outsb
ja
inc
dec
mov
sub
ss
repnz
cmp
fdivrs
adc
loopne
add
pop
jmp
sbb
in
inc
dec
ljmp
cmp
xor
and
adc
push
mov
push
hlt
andb
jo
lock
push
jns
call
dec
ret
cmp
in
clc
add
jb
sbb
aas
push
in
push
sbb
cmc
jns
add
pushf
adc
xor
or
test
inc
push
push
sbb
xchg
sub
hlt
cmp
addr16
lret
xchg
mov
rcrb
bound
sbb
xlat
and
outsl
or
jne
jge
out
leave
lds
cmp
sbb
jl
lods
xor
jo
mov
das
jbe
ds
mov
sub
jb
je
mov
fimull
add
and
sti
loopne
or
and
adc
cltd
inc
cmc
inc
xchg
jae
adc
and
xor
mov
jmp
movsl
sbb
and
arpl
xor
leave
pop
inc
movsl
in
pusha
inc
int3
xchg
loope
and
stos
cmpps
pop
cmp
pop
sub
sarl
rclb
inc
jbe
push
in
dec
xor
cwtl
and
cmp
push
fmull
in
stc
shrl
xor
sbb
xchg
pop
nop
dec
add
into
ret
gs
push
mov
int3
lahf
ds
ss
inc
insl
push
xor
scas
out
sti
decl
insl
adcl
jno
jmp
ret
pop
cwtl
fs
mov
sub
cltd
sub
jg
test
jno
gs
xchg
cmp
xchg
mov
repz
mov
mov
jnp
dec
push
pop
or
outsl
int
or
and
or
dec
fwait
or
pusha
jns
sbb
pop
push
cwtl
pop
adc
pop
js
sub
test
add
xor
jp
mov
push
push
cmpsl
int
sbbb
aaa
mov
mov
ss
add
pop
movsl
push
or
push
push
jnp
or
xor
xchg
adc
dec
or
dec
mov
adc
jmp
ljmp
ljmp
fcmovu
and
inc
jmp
fsub
push
push
dec
sbb
and
rorb
pusha
sbb
addb
mov
test
dec
or
inc
xchg
movsb
or
xor
push
pop
cmpsb
sub
jae
adc
adc
sarl
clc
ljmp
mov
hlt
or
sub
popa
mov
push
push
xor
aad
adc
nop
fistps
xchg
inc
lret
dec
sbb
cmp
movb
inc
int3
dec
stos
pop
aam
sub
lods
sarb
iret
repz
int3
dec
test
add
flds
and
push
loope
cli
call
data16
and
or
push
or
pop
ret
pop
dec
gs
lock
rclb
shlb
xchg
aaa
mov
mov
adc
in
dec
jmp
sub
or
xchg
or
or
adc
mov
rclb
outsl
push
and
aaa
cmpl
lds
out
aaa
stc
mov
adc
sub
or
loope
pop
push
or
pop
mov
xor
adc
or
pop
mov
dec
xchg
mov
adc
stos
lea
push
sub
stos
popf
je
pop
push
mov
or
mov
dec
and
test
scas
sub
inc
jns
inc
pushf
add
push
mov
add
fiaddl
jmp
dec
and
and
std
xchg
mov
sbb
or
les
enter
sub
inc
adc
dec
fidivrs
add
outsl
jnp
lea
iret
test
and
pusha
shll
ret
push
add
sub
ret
push
andb
gs
lock
test
and
add
loop
and
adc
fcoml
pop
xor
cmpl
pop
das
xor
mov
popa
lods
jb
or
and
orb
dec
or
jne
mov
sub
sbb
jmp
cmp
push
ja
mov
in
adc
add
dec
push
add
jle
push
pusha
fnsave
inc
addl
or
stc
or
add
test
cmp
jo
test
mov
out
aas
mov
sbb
pop
sahf
imul
and
dec
push
mov
das
dec
add
or
jl
adc
push
sub
daa
cmc
mov
or
push
dec
aad
ret
push
sub
addr16
inc
fs
xor
cmpl
lcall
nop
add
or
sbb
mov
push
in
pop
push
xor
jb
and
imul
cltd
or
pop
xchg
sub
mov
jmp
sbb
int3
mov
pop
xor
imul
jmp
mov
or
inc
rep
adc
into
inc
and
dec
das
sti
sub
and
push
push
mul
pusha
movsl
adc
imul
stc
sahf
and
stc
xor
lods
cmp
mov
and
stos
loopne
and
cmp
pop
shlb
and
add
pop
outsl
mov
mov
rol
shrl
cwtl
lret
sbb
scas
dec
push
push
xor
call
sbb
enter
dec
shlb
pop
push
lds
jg
arpl
adc
test
adc
inc
push
cltd
add
cmpl
or
dec
or
das
fcoml
xchg
dec
xor
shll
inc
sub
les
aad
and
or
outsb
daa
dec
cli
popf
push
pop
call
jl
push
sti
cwtl
cmpsl
inc
lahf
ret
repz
mov
addb
jl
inc
mov
leave
push
sbb
push
lock
push
je
jb
sbb
mov
xchg
xchg
cli
push
mov
sub
mov
xor
jmp
pop
jns
daa
inc
das
test
jl
fildl
gs
mov
adc
sbb
or
cmp
inc
fs
inc
out
ficompl
mov
popa
pop
sbb
gs
jne
je
mov
mov
fs
xchg
mov
inc
in
test
test
cmp
mov
hlt
js
faddl
add
mov
push
notb
sub
mov
fidivrl
and
in
or
sbb
mov
jae
test
xchg
inc
mov
cmpl
insb
popa
nop
mov
insb
xchg
mov
shrb
aam
scas
pop
fwait
test
dec
or
imul
loop
and
nop
loopne
ficomps
and
jbe
push
cmp
rorl
dec
cmpsb
and
shlb
push
dec
cmp
push
pop
pop
adc
mov
or
xchg
or
mov
push
inc
inc
idivb
and
je
add
mov
add
divb
dec
inc
int3
or
movb
mov
push
and
xor
lods
lods
add
adc
leave
pusha
cmpl
outsb
or
daa
push
cmp
ljmp
fsubs
push
or
lahf
add
pop
push
das
out
push
daa
pop
jp
pop
or
inc
lods
pop
xor
inc
out
xor
xchg
je
push
sar
jle
adc
jge
add
mov
mov
adc
or
adc
decl
adc
mov
pop
dec
pop
mov
push
add
sbb
cmpl
fs
nop
adc
clc
adc
pop
xor
sbb
bound
popa
repnz
add
clc
negb
fiaddl
xchg
nop
or
pop
add
cmpl
test
fdivs
push
sub
mov
sub
sub
arpl
adc
mov
pop
sub
jo
xchg
scas
rorl
movsl
xchg
aam
into
mov
add
mov
inc
lds
mov
mov
ja
inc
jmp
sub
arpl
mov
movsl
jns
xchg
push
sti
fsubr
or
jne
imul
sar
cwtl
in
loope
pop
test
mov
cmp
pop
sub
jnp
clc
push
and
shr
jbe
pop
sub
add
pushl
mov
nop
movl
packssdw
aaa
ret
jle
cmp
sbb
adc
movsl
fldenv
jle
push
daa
xor
cltd
and
pop
pop
cmpsb
or
clc
mov
fisubrs
dec
adc
or
movsb
imulb
lock
adc
cli
adc
dec
or
lds
or
xor
jp
adc
jno
xor
loopne
lods
lods
lea
mov
or
jmp
clc
adc
push
dec
dec
lea
imul
jb
je
aaa
adc
inc
push
push
jmp
xchg
faddp
or
dec
push
scas
pop
testl
cld
cs
mov
xchg
scas
push
loopne
pop
jo
mov
rcl
mov
inc
outsl
adc
outsb
and
cwtl
ds
ljmp
les
lcall
icebp
in
xchg
push
ljmp
jns
fldcw
mov
test
out
sahf
dec
add
daa
lea
mov
and
pop
js
xchg
subl
cli
push
push
fs
xor
imul
movsb
sbb
add
mov
push
mov
adc
mov
insb
arpl
hlt
getsec
push
cmpb
or
pop
or
jg
das
xor
data16
or
inc
ja
sbb
adc
repz
stos
out
movsl
stos
cmp
cmp
cmp
jne
movsb
xchg
cmp
and
hlt
jmp
adc
lret
pop
jne
add
ds
pop
enter
xor
inc
aas
nop
or
mov
or
mov
clc
jp
xchg
roll
ret
push
popf
idivb
fsts
dec
push
or
repnz
push
inc
mov
add
dec
lock
jecxz
rcll
inc
push
lods
mov
lret
jb
outsb
test
mov
int3
sbb
and
je
mull
pop
and
mov
add
sub
add
sbb
fcomp
loopne
arpl
fiadds
daa
dec
jne
mov
mov
mov
jo
movsl
js
mov
sub
or
pop
mov
add
cmp
jmp
pop
dec
or
sbb
clc
insl
xor
cli
adc
shlb
jp
mov
mov
fisubs
je
sub
shlb
test
mov
cmc
xor
dec
mov
push
dec
push
add
test
fmuls
mov
push
xlat
add
into
xchg
lods
cmp
loop
jae
xchg
sbb
ja
xchg
xchg
push
cmpb
mov
push
or
outsl
out
jge
in
hlt
leave
inc
mov
jnp
inc
sbb
cmp
add
add
std
jmp
test
add
pushf
add
or
pop
cli
repz
pop
jmp
jne
stos
xor
pop
mov
jl
mov
mov
ret
mov
js
dec
pop
cli
xor
pop
std
pushf
int3
jns
inc
ljmp
or
mov
mov
inc
gs
jle
add
and
sti
inc
ret
mov
rolb
push
or
push
push
fsubrl
jne
bound
jne
mov
out
mov
cmpl
jne
sbb
xchg
and
popa
icebp
cmp
lea
test
mov
enter
jmp
movl
cmc
aad
mov
jle
fs
ret
xchg
sarl
or
mov
loop
and
pushf
dec
imul
inc
pushf
cli
divl
inc
jp
movsl
and
push
push
cld
push
jb
fsubr
mov
sbb
xor
jno
push
push
fcomp
mov
or
push
fidivl
push
jbe
aaa
subl
jns
pop
mov
test
test
pop
adc
lea
add
test
sub
mov
icebp
or
xor
js
cs
mov
arpl
add
fs
pushw
jle
pop
lds
mov
in
lret
jl
xchg
xchg
or
outsl
int
outsl
mov
mov
add
pop
mov
or
sbb
adc
adcl
fidivrl
or
insb
mov
xor
mov
push
cmpb
sub
mov
push
aad
sub
sub
adc
in
gs
pop
mov
sub
jne
and
jo
push
mov
inc
mov
jb
xchg
push
mov
pushf
add
ret
int
pop
mov
adc
xor
adc
jl
popa
push
subb
popf
mov
les
and
sub
adcb
jl
cmp
jge
enter
lea
cmp
sbb
sbb
stos
std
adc
pop
xchg
dec
out
rolb
test
lret
jns
mov
mov
lahf
hlt
inc
ret
mov
sub
adc
adc
leave
push
fisubrl
sbb
fs
or
rcll
mov
pop
cmp
ja
shlb
mov
aas
mov
pop
and
sub
cmp
setg
jmp
push
aaa
faddl
dec
movsb
outsb
jge
cmp
setle
xor
push
jo
es
sbb
inc
scas
dec
cld
xchg
xchg
xchg
call
xchg
lea
inc
fadd
xlat
mov
rorb
xor
sti
xchg
push
mov
jmp
fucomip
aam
imul
notb
cmp
adc
xchg
bound
pop
fwait
sub
and
inc
dec
in
xchg
call
sbb
movsb
adc
enter
int3
or
sub
pop
sub
das
inc
dec
in
sub
sub
sbb
test
dec
nop
xor
sub
in
mov
in
sub
push
sbb
hlt
jmp
xor
mov
les
loopne
push
mov
in
sar
mov
sub
shrb
lods
fxch
imul
les
jb
adc
mov
in
call
lods
jg
add
xchg
adc
mov
movb
xchg
mov
lea
icebp
adc
jmp
ret
mov
shl
cld
fcmovbe
scas
lds
aad
mov
negb
jl
push
add
xlat
out
addb
or
mov
inc
add
sbb
sub
push
or
dec
push
xor
cmp
std
movsl
hlt
call
in
lock
andl
inc
and
shlb
or
push
outsb
mov
adc
mov
cmp
add
push
jle
aas
sub
or
insb
scas
jmp
sbb
in
add
stos
push
or
repz
lods
sbb
pop
js
test
pop
rorb
dec
lods
mov
pop
hlt
sbb
sbb
stos
push
adc
adc
punpcklbw
xlat
das
sub
insl
rorb
add
xor
or
ja
mov
movsl
or
les
bound
pop
adc
add
aad
adc
adc
xor
pop
jbe
sub
and
dec
inc
push
xchg
cmp
pop
call
hlt
mov
das
js
push
sbb
sbb
clc
push
sbb
enter
or
ret
std
and
pop
pop
notb
popf
fcmovnu
and
in
sbb
mov
fisttps
pushf
ret
test
popf
add
dec
xor
mov
js
jg
in
mov
and
mov
sub
dec
mov
icebp
dec
and
inc
xor
jmp
inc
sbb
cmp
dec
jge
mov
cwtl
xchg
sar
lret
pushf
and
or
outsl
shll
sbb
sub
das
pop
clc
jne
sbb
jecxz
sub
push
hlt
jbe
dec
inc
or
or
push
rorl
push
and
push
add
negl
mov
inc
pop
lock
pop
test
or
insl
and
sbb
or
cmp
jne
popf
push
incl
ret
imul
cs
cmpsb
les
pop
cmp
jecxz
adc
repnz
jne
jbe
xchg
test
and
xor
es
cmp
das
cmpsl
leave
ja
aam
aam
pop
adc
sub
test
add
clc
push
push
sbb
inc
shlb
mov
cmp
ret
lret
aad
sbb
movsb
outsb
jae
adc
cwtl
jbe
cwtl
test
xor
pusha
rorl
push
cmp
push
iret
adc
shll
inc
out
jne
mov
shrl
push
out
mov
cmp
incl
mov
sbb
fs
adc
push
push
sub
jae
daa
and
popf
jg
mov
inc
mov
pop
leave
xchg
dec
popf
jo
xchg
cltd
sub
inc
sub
pop
mov
sbb
lcall
push
inc
sbb
js
mov
sbb
cmp
xchg
xor
push
mov
jle,pt
in
push
in
or
ret
leave
cmp
adc
jo
movsl
fwait
lods
sub
or
mov
mov
sbbb
sti
cmp
ljmp
movsl
pop
mov
loopne,pn
inc
dec
jne
int3
sub
fwait
pusha
out
mov
dec
fmull
jno
in
mov
scas
ja
jmp
jle
or
and
mov
out
sub
in
mov
les
fildll
dec
push
into
xchg
mov
mov
into
inc
push
cmc
add
dec
call
adc
clc
sub
sbb
or
sub
sub
fcoms
jns
cmp
push
xchg
movsb
and
xchg
ret
jmp
and
cwtl
rorl
rorb
or
sub
push
iret
mov
cmpsl
sti
jb
pop
xor
mov
push
pop
repz
into
mov
sar
call
jne
outsb
dec
mov
fisubrs
jb
mov
in
aad
xorb
fwait
mov
pop
popf
pop
sbb
mov
idiv
stc
iret
lods
inc
gs
mov
iret
and
mov
mov
pop
aad
mov
testb
hlt
fldcw
mov
adc
xchg
and
insl
inc
test
loop
ja
iret
aam
cmpb
jle
pop
out
xchg
xlat
xor
movhps
rol
pushf
lahf
pop
push
mov
mov
leave
cmp
push
or
pushf
movaps
pop
cmp
ljmp
jmp
cmc
inc
adc
lret
sbb
call
sbbb
add
loopne
loop
stos
pusha
push
lea
xchg
jae
push
or
je
inc
adc
sbb
ret
push
pop
call
inc
and
push
push
mov
fnsave
stos
mov
adc
adc
push
adc
mov
iret
sub
push
xchg
push
xor
aaa
mov
mov
add
xchg
push
pop
sti
mov
push
push
orl
xchg
adc
dec
iret
dec
sub
cmovb
xchg
bound
adc
sub
mov
pop
or
orl
fmull
mov
xor
movsl
bound
push
dec
ret
andl
and
movl
push
sub
xchg
add
je
orl
pop
adc
xchg
leave
fidivl
pop
or
cmpb
fsts
movsb
inc
jnp
ret
or
add
leave
dec
iret
or
mov
dec
std
or
sbb
add
pop
orl
test
inc
pop
sub
jg
sbb
cmp
lds
inc
ss
adc
jmp
mov
push
mov
cmp
dec
pop
mov
inc
dec
enter
lahf
repz
sub
inc
jmp
xchg
xchg
or
adc
lret
push
je
ds
inc
pop
mov
add
testb
add
out
in
cli
sbb
aas
cmpsl
aam
inc
nop
jmp
cld
mov
xor
dec
adc
pop
in
adc
lea
addl
std
mov
dec
and
pop
rorb
test
jae
out
shl
mov
sbb
lea
dec
push
sub
sbb
mov
mov
adc
dec
les
mov
mov
sahf
aaa
dec
and
push
orb
mov
adc
adc
fidivl
and
sub
scas
dec
ret
loop
fcomip
icebp
and
mov
dec
jg
add
cmp
loope
lret
add
xchg
iret
mov
pop
dec
in
bound
mov
or
lahf
pop
dec
mov
add
cld
xchg
pop
jne
xchg
pop
sub
mov
mov
add
pop
mov
out
cmp
inc
xchg
xor
jno
stc
fs
sbb
hlt
dec
and
test
or
flds
cmp
stc
rclb
sub
lods
xchg
mov
inc
dec
mov
mov
rol
mov
pop
jb
mov
sub
cmp
jns
das
jg
add
mov
adc
dec
add
pushf
mov
xchg
pushf
mov
fisubs
popf
dec
cmp
pop
ffree
add
ds
inc
jns
mov
test
sub
pop
filds
add
imul
jg
push
fs
mov
fiadds
inc
fs
lea
inc
or
pop
lea
and
cmp
shrl
rorb
xchg
mov
fxch
mov
adc
fdivs
and
pop
std
or
gs
cmp
pop
jns
push
or
add
inc
jp
fdivrp
lret
push
jb
sub
loope
xchg
push
in
inc
jl
loopne
addb
inc
adc
inc
repz
ljmp
addr16
push
jp
dec
nop
adc
and
mov
pushf
jmp
lock
arpl
loop
push
push
in
pop
jl
adc
es
daa
add
dec
jne
mov
cmp
int
loop
pop
imul
loopne
mov
xchg
js
lock
pop
adc
xchg
mov
fdivrs
mov
loope
cmpl
into
push
mov
mov
push
sahf
xchg
leave
jo
pop
adc
movsl
or
lret
push
ficomps
repz
lcall
je
psrld
loop
or
xor
jbe
dec
push
xor
and
push
pusha
mov
xchg
mov
mov
dec
adc
mov
shll
push
push
push
lock
adc
mov
mov
fcomip
imul
rcrl
jo
andb
aaa
pushf
dec
es
jmp
jbe
xchg
cmpsb
out
pop
in
inc
fsubrl
inc
ret
pop
or
pushf
insb
mov
cmp
sub
push
lods
xor
outsl
adc
push
mov
mov
cmpl
jl
mov
shl
sub
shlb
add
or
shll
daa
add
mov
sbb
fwait
xor
mov
cmc
icebp
mov
lods
rolb
xlat
mov
dec
shll
sbb
add
mov
xchg
out
sti
cmp
in
aam
cli
dec
pop
clc
push
rclb
push
dec
inc
jbe
shlb
push
outsb
xlat
add
pushl
jg
popf
fsubrs
dec
test
jnp
lcall
das
repnz
inc
xchg
shl
repz
xor
dec
add
daa
divb
repz
adc
jbe
or
xchg
sub
dec
cwtl
aad
push
pop
in
jge
cmp
rolb
mov
stos
decb
or
cmpl
xchg
addr16
rol
xchg
pop
mov
loop
xor
jne
push
in
jp
inc
daa
lock
das
push
clc
sbbb
into
lds
mov
xor
push
sbb
xor
cmp
mov
imul
test
mov
push
push
mov
mov
sahf
scas
lock
lret
push
push
shl
inc
or
adc
pop
outsl
lods
hlt
cmpsl
inc
push
cmp
sbb
mov
pop
adcb
je
cmp
dec
pop
mov
adc
loop
push
or
and
jge
adc
sarl
pop
mov
jo
jg
sub
fwait
and
adc
les
in
ljmp
add
mov
scas
insb
mov
sub
ja
xchg
icebp
ret
lods
mov
inc
mov
clc
andl
jmp
inc
ljmp
sbb
mov
sub
sub
leave
add
nop
scas
and
cmp
call
jnp
and
push
xor
jecxz
add
xlat
xchg
aas
rolb
mov
test
orb
sub
add
pop
cmp
inc
or
sbb
pop
mov
push
mov
mov
scas
int3
push
xchg
sub
xchg
xchg
mov
dec
pop
inc
or
xchg
or
xchg
jg
das
cmp
add
mov
mov
push
out
fs
je
xor
and
movsl
jne
scas
jge
jp
aaa
jnp
xchg
fstl
xor
repnz
dec
in
loope
push
and
insb
fwait
sub
ss
mov
inc
mov
mov
cmpsb
sub
pop
jae
pop
add
dec
mov
jbe
js
sbb
insb
push
adc
mov
push
cmpsl
adc
push
movsb
clc
arpl
lock
cltd
hlt
add
je
daa
dec
push
add
lret
imul
adc
xor
xor
sub
xchg
mov
pop
push
int
mov
xor
bound
add
ja
sbb
dec
jne
test
pop
icebp
into
adc
bound
xchg
je
jmp
jae
lods
push
outsb
mov
fs
mov
lods
add
notb
adc
sbb
or
jno
xchg
pop
out
jb
push
add
xor
lods
xchg
cmp
aad
dec
and
ret
xor
jmp
frstor
push
shlb
xchg
lea
out
adc
pushf
jns
rcll
icebp
das
movsl
sub
add
andb
divl
pusha
dec
and
dec
jle
xor
push
xor
sub
push
clc
lock
xorb
mov
push
cltd
int
icebp
cs
dec
xchg
cmp
in
sub
push
enter
mov
int
imul
int3
mov
xchg
jg
hlt
inc
dec
mov
dec
dec
rcrl
pushf
pop
in
clc
mov
out
xor
mov
or
and
loope
movsl
data16
mov
and
lcall
mov
pop
mov
je
and
mov
jno
and
adc
fs
out
fmull
adc
mov
inc
jns
or
inc
ljmp
sbb
loop
and
not
xchg
xor
leave
clc
out
das
dec
or
sub
icebp
int3
jno
cmp
call
addb
inc
or
jmp
mov
lods
or
dec
add
dec
cmpsl
popa
daa
rolb
push
push
jl
push
pop
jae
dec
imulb
dec
mov
movsl
jmp
inc
push
push
inc
imul
mov
lcall
in
xor
push
mov
lahf
mov
sbb
dec
inc
mov
mov
mov
sbb
adc
cmpsb
push
dec
xchg
testb
rorb
sub
das
xor
mov
addb
lds
out
mulb
xchg
cmp
lret
sub
sbb
addr16
out
dec
and
mov
mov
push
push
adc
gs
inc
test
sub
mov
sub
rolb
lcall
cwtl
in
call
or
int3
jge
sbb
adc
lret
fldenv
or
fistl
loope
test
or
in
cmpsb
push
and
movsl
in
push
inc
sub
fsts
or
iret
or
pop
mov
sbb
push
daa
inc
add
call
xlat
mov
add
and
sub
daa
movsl
adc
xchg
fiadds
movsl
and
nop
outsl
and
cmpsl
inc
pop
mov
adc
daa
mov
lret
test
lods
mov
cmc
and
or
ror
push
xor
jge
jne
jg
fsts
sub
decb
fs
out
sahf
fs
imul
adc
leave
popa
insb
push
mov
jb
ljmp
adc
cwtl
xchg
dec
lahf
pop
call
rorb
data16
repnz
sahf
mov
call
jmp
cmp
mov
icebp
lret
in
jb
pop
fistps
loopne
mov
xchg
popl
jne
inc
push
adc
daa
push
adc
loop
add
loop
nop
dec
das
or
cmp
sub
mov
test
stc
cli
mov
and
sahf
xchg
adc
jne
pop
lret
call
mov
adc
enter
jae
xor
js
sar
test
loope
fnstcw
jp
dec
je
popa
mov
mov
sub
jnp
pop
jg
pop
xlat
test
lods
daa
jmp
cmpw
xchg
sub
and
inc
fldenv
js
popf
rorb
adc
push
sbb
xchg
ja
mov
adc
pop
sub
rcrb
pop
adc
roll
daa
xchg
rcrb
sbb
cmp
js
mov
movsl
mov
mov
dec
fincstp
out
and
push
cld
sar
outsl
mov
cmp
sub
pop
adc
aas
or
outsb
inc
jo
andb
xor
sub
push
inc
mov
xlat
mov
mov
les
mov
push
js
xor
add
sbb
push
loope
mov
push
pop
out
xor
mov
push
inc
cmp
push
xchg
inc
aad
jne
fwait
iret
mov
xchg
pushf
and
dec
out
dec
sbb
cltd
mov
mov
pop
ret
pop
inc
les
rorb
lret
sbb
jg
jl
sub
dec
pop
jo
adc
mov
jl
xchg
and
jl
dec
jge
and
mov
cmp
sbb
jae
fs
mov
imul
dec
call
addr16
movsl
push
sub
sbb
pop
jae
mov
mov
je
addr16
push
xor
xchg
test
jg
loope
cmp
push
loope
cmp
inc
push
cmc
push
fistpll
add
daa
sub
and
mov
inc
nop
or
push
sbb
je
mov
imul
mov
enter
mov
pop
jge
movsl
xor
mov
sahf
inc
jno
shrb
add
or
mov
scas
sub
rolb
sub
ss
shll
and
and
fistpll
and
sbb
out
movsl
inc
push
cli
dec
popf
adc
out
clc
das
mov
shl
cmp
mov
popa
mov
or
adc
gs
inc
ror
push
and
cmc
mov
mov
jbe
aas
push
or
xchg
push
xor
clc
cmpsb
das
ds
push
pop
loop
xlat
les
jns
and
in
adc
lahf
ja
je
mov
cmpsl
push
adc
das
pop
fs
and
int3
je
stos
or
jmp
cmpl
test
adc
bound
ficomps
mov
inc
in
pushf
fstl
fsubl
pop
push
jmp
jp
mov
cmp
push
lret
lcall
add
or
out
in
push
cmp
dec
cmp
lret
orb
enter
dec
xor
pop
push
pop
mov
or
mov
shlb
sub
and
push
adc
movsl
movl
xchg
stos
and
bound
mov
rol
or
sub
cmc
ljmp
xchg
mov
dec
sbb
mov
adc
stos
add
cmc
sub
repnz
xchg
jecxz
pop
dec
enter
mov
ljmp
in
loopne
push
mov
xor
mov
scas
lret
faddl
sahf
repnz
push
xor
popa
or
jg
mov
cmp
push
mov
inc
push
mov
out
das
jne
push
xor
stos
inc
lea
lea
xlat
mov
leave
out
jg
add
in
pop
pop
pop
repnz
movsb
fs
mov
iret
dec
push
out
das
stc
in
adc
cmp
ljmp
popf
xchg
aam
mov
lea
mov
loop
mov
enter
fs
dec
sub
mov
mov
xrelease
xor
ret
scas
inc
nop
xchg
sbb
daa
jns
imul
lcall
fistps
mov
outsl
sub
out
movsl
lock
add
and
imul
repz
and
stc
push
sub
inc
and
xor
pop
and
mov
stc
xchg
mov
outsl
in
fdiv
push
mov
daa
sbb
shl
or
and
and
je
or
add
data16
pop
cmp
inc
xchg
adc
fsubrs
sub
mov
icebp
mov
mov
xchg
in
mov
sub
scas
lret
hlt
xchg
xchg
movsl
push
mov
jmp
sub
test
push
or
xor
mov
rcll
or
cld
lahf
mov
mov
pop
xchg
xor
jo
sbb
fiaddl
mov
imul
sbb
push
dec
ja
pop
xchg
mov
fs
xor
mov
mov
and
xor
fcoml
addl
sbb
jne
mov
pop
mov
mov
insl
jl
call
add
ljmp
jg
push
dec
repz
xor
das
pop
dec
mov
or
cmpsb
bound
pop
iret
mov
sahf
call
mov
push
jecxz
adc
dec
sub
gs
cmp
jecxz
in
mov
jmp
es
cmp
pop
out
lock
and
ret
push
sub
push
shll
repnz
xor
sbb
repnz
cmp
scas
jns
lcall
movsl
sub
sub
hlt
xchg
dec
pop
cmp
mov
xchg
push
mov
cld
sbb
pop
test
inc
mov
leave
daa
and
das
push
add
jb
jnp
xorb
fadd
jmp
and
pop
mov
push
ja
vprotd
pop
push
pushf
cmpb
jl
test
mov
js
mov
mov
enter
xlat
fs
clc
bound
mov
jnp
dec
jne
dec
fnstsw
nop
nop
and
pop
pop
cmp
push
sbb
fstps
cmp
scas
lahf
pop
pop
xchg
mov
sub
daa
sub
rol
iret
leave
dec
test
jno
out
inc
rclb
lahf
and
test
mov
xchg
or
push
mov
fsubr
dec
adc
mov
movsl
add
mov
xchg
sbb
inc
and
jle
push
add
jnp
mov
add
sub
adc
cmp
xor
xchg
arpl
jmp
cli
lret
out
mov
jne
add
xlat
pop
pop
lods
and
je
lods
gs
or
mov
ljmp
cltd
adc
dec
mov
scas
inc
adc
bound
insl
jno
inc
mov
push
stos
sub
icebp
loope
sarl
pop
scas
fmuls
sub
es
sbb
jmp
inc
dec
dec
in
in
pop
js
mov
test
sub
add
enter
fdivl
popa
mov
loop
jp
pusha
push
scas
dec
add
cs
push
mov
xor
xor
add
clc
sbb
je
xchg
cli
jmp
adc
mov
jmp
loope
fistl
or
stc
adc
or
js
andb
inc
push
pop
push
lea
jne
push
or
sub
clc
mov
adc
add
mov
jb
pop
scas
insl
test
std
js
lret
movsl
les
and
adc
mov
and
mov
push
mov
cmp
test
and
push
pushf
hlt
push
sbb
js
mov
and
jo
sub
pop
mov
jb
dec
and
das
cmp
mov
xor
loop
mov
pop
sbb
inc
jne
sbb
or
adc
or
test
sub
mov
popf
cmc
mov
push
aas
les
cmp
jmp
pop
cld
cmp
adc
movl
fnstsw
ss
or
jne
jne
dec
xor
sub
push
xlat
addr16
mov
cltd
andb
cli
jmp
inc
call
mov
jns
and
in
stos
cltd
arpl
js
jecxz
mov
std
push
mov
inc
hlt
test
jecxz
cmp
je
cmp
test
cmp
pop
cmpb
xchg
inc
cli
add
xchg
ret
push
orb
sbb
and
test
jl
incb
pop
hlt
sub
push
dec
push
xlat
sub
hlt
movsl
hlt
sub
or
xor
pop
push
lret
or
and
cmp
jl
pop
cmp
sub
pop
das
fdivrs
and
imul
pop
jne
pop
test
jecxz
push
sub
xor
jne
pop
mov
stos
push
sti
test
leave
add
or
adc
xchg
xchg
fadds
sub
addr16
mov
ja
clc
mov
push
ds
cwtl
lea
pop
lock
call
mov
cwtl
pop
add
dec
jb
cs
cmp
cmp
inc
push
pop
inc
in
xor
nop
lock
ret
in
xor
fbstp
je
push
pop
mov
inc
test
aam
dec
cmp
sbb
nop
jge
lea
mov
repz
or
jmp
sub
and
adc
popf
je
lcall
cmc
push
shl
xchg
test
dec
or
mov
mov
notb
ljmp
mov
rorb
mov
pop
subl
and
bound
imul
adc
popl
psrad
push
aad
sub
inc
jb
xchg
jno
mov
cmpsb
jp
shlb
stos
pushf
fcompl
fs
stos
push
adc
mov
or
and
pop
mov
xchg
pop
int
or
outsb
movsl
clc
sti
mov
or
cmp
popa
jbe
or
psubsw
mov
sub
cmp
or
or
je
mov
jl
mov
mov
jg
in
mov
lea
add
ljmp
xor
stc
enter
sbb
dec
mov
sbb
xchg
push
xchg
jne
call
or
iret
and
out
dec
rclb
sub
out
jb
paddw
ss
pop
xchg
sub
test
mov
out
out
sub
inc
jne
dec
xchg
push
add
xchg
or
sub
jbe
jno
pop
test
sub
add
sub
cs
or
dec
test
adc
fs
mov
lock
add
sbb
cmp
rclb
stos
addr16
jle
dec
or
repnz
sub
mov
sub
ficoml
stc
test
adc
mov
rolb
xor
xor
push
mov
sbb
scas
lcall
push
adc
rcll
cwtl
or
mov
add
cmp
inc
or
daa
subb
sub
xor
or
add
jmp
jbe
adc
sbb
xor
pop
xchg
inc
xchg
or
mov
jge
ljmp
sub
stos
xor
cs
int3
xor
sub
dec
adc
mov
sub
int
adc
lret
push
add
cli
or
xchg
cwtl
and
movsb
lret
inc
dec
mov
sub
data16
popa
cmp
into
out
or
push
sbb
hlt
ficompl
pop
aam
shl
and
adc
xchg
cmpsl
jno
das
mov
shll
rclb
inc
pop
imulb
mov
mov
dec
out
pop
out
pop
xchg
sbb
je
xchg
loop
jno
xor
out
shr
add
mov
hlt
mov
sub
push
aas
pop
mov
ret
clc
pushf
adc
ljmp
inc
or
dec
aaa
pop
js
invd
sub
dec
and
out
lret
mov
cmp
pop
or
icebp
add
add
test
mov
cmp
mov
dec
ja
aad
mov
outsb
mov
inc
mov
in
andl
push
adc
loop
mov
dec
loop
gs
sti
insl
subl
adc
call
push
fistpl
inc
test
dec
mov
rcrb
ss
sbb
cmpl
jne
lods
xchg
pop
sub
xchg
push
pop
stos
sbb
or
or
jmp
mov
sub
dec
ret
pop
dec
jecxz
pop
mov
pop
daa
or
ljmp
shrb
push
cmp
lret
fcmovnb
hlt
mov
rcl
std
aas
loop
pop
repz
adc
rcll
mov
movsb
mov
std
lock
repnz
enter
cmp
int
xchg
das
pop
pop
mov
jnp
xor
and
adc
pop
sub
sbb
int
jg
mov
and
push
add
mov
or
cmp
mov
mov
rcr
mov
jmp
bound
pop
dec
push
scas
insl
les
jno
andl
adc
jmp
sbb
inc
je
fisubrl
mov
inc
adc
jbe
sub
push
iret
in
aaa
push
mov
pop
loope
adc
jns
sbb
cltd
xor
orb
imul
stos
cwtl
pop
cmp
jno
imul
in
cmpl
jne
pushl
sub
pop
pop
and
mov
or
mov
lods
xorb
jb
xchg
push
stos
sub
dec
mov
push
dec
scas
std
int
stc
shrl
repnz
xor
or
mulb
pushf
cmp
jle
xor
hlt
sub
rcll
fisubs
inc
lock
inc
in
test
sbb
out
inc
daa
adc
inc
cmp
loopne
rolb
fmuls
adcb
mov
xor
jo
mov
std
cmp
inc
adc
adc
movsl
inc
loopne
mov
shrl
out
int3
cld
out
add
jb
mov
or
push
jmp
movb
push
fisttps
popa
and
adc
jne
xor
xor
shlb
pusha
mov
rorl
jae
sub
mov
sub
or
in
add
or
fldl2e
je
push
mov
enter
sub
push
leave
mov
loopne
push
dec
or
mov
enter
pop
popl
pushl
xor
in
jmp
push
es
divb
pop
aas
pop
test
in
adc
inc
or
cmpsl
or
adc
inc
mov
mov
sbb
dec
xor
xor
fdivrl
stos
sbb
push
xchg
pusha
push
push
dec
jge
rolb
sub
push
pop
push
push
hlt
rorb
cltd
adc
ss
xchg
int
mov
sbb
shlb
or
push
or
aam
rcrb
dec
add
jmp
adc
mov
jge
jle
xorl
add
or
cmp
dec
and
mov
int3
aas
push
es
or
inc
mov
enter
or
inc
inc
or
les
call
jb
mov
sub
enter
pop
arpl
ret
jmp
and
mov
aas
test
lods
add
ja
aas
out
xlat
adc
xchg
pop
cmp
jg
clc
test
inc
test
mov
sbb
adc
sub
jl
mov
and
xchg
jle
jb
dec
jg
or
adc
test
clc
or
add
dec
cwtl
xchg
jmp
and
sbb
xchg
rcr
ret
and
or
enter
or
mov
xchg
push
psrad
inc
daa
adc
xchg
aad
mov
enter
rorl
push
imul
fidivrs
dec
xor
sub
imul
or
inc
fdivr
leave
int3
mov
mov
push
mov
popf
sbb
ja
insl
in
adc
sub
push
inc
add
mov
mov
ret
imul
popa
inc
jnp
jne
es
rol
enter
adc
cmp
and
mov
sbb
dec
sub
add
sbb
aam
test
and
jno
or
xchg
dec
sub
sbb
jmp
cmp
xor
adc
std
pop
je
test
repnz
adc
mov
push
cmp
jno
pop
mov
mulb
push
gs
imul
push
mov
jbe
xchg
hlt
pop
adc
neg
pusha
or
push
sub
mov
mov
push
xchg
xor
add
loop
fs
fs
xchg
mov
push
or
push
and
shrb
aam
popf
loope
mulb
mov
scas
jae
jmp
inc
orl
inc
bound
hlt
or
and
inc
lods
clc
cld
inc
adc
les
out
pop
push
fdivr
insl
xor
push
inc
sub
std
lock
xchg
xor
jne
jnp
ja
mov
and
sbb
int3
or
call
jae
xor
adc
cwtl
push
fs
out
adc
testb
aam
lar
fadds
fdivl
test
in
adc
sub
add
and
adc
or
movzbl
dec
int
adc
and
add
sub
aas
push
adc
or
inc
arpl
add
or
sub
and
adc
inc
inc
arpl
cltd
sbb
xchg
or
inc
sbb
popa
clc
mov
xchg
popf
mov
mov
js
and
hlt
ds
push
dec
mov
jmp
inc
rsqrtps
sub
pop
cmpsb
xor
jno
cmp
mov
push
aas
das
push
pop
inc
adc
call
stos
adc
jnp
mov
or
mov
sub
sub
push
mov
lcall
adc
pop
cmp
jmp
mov
or
fmul
sbb
ds
jl
pop
jp
add
movsl
inc
or
clc
mov
lds
xchg
lds
and
cmpsl
push
push
fldcw
js
ja
pop
or
inc
out
jecxz
sub
or
mov
fdivl
imulb
jno
idivl
xchg
mov
jne
cwtl
mov
xor
out
jno
mov
nop
or
cli
ja
shlb
mov
cmp
dec
adc
cltd
testl
mov
pop
jecxz
and
and
xchg
in
imul
fdivl
push
add
xorb
adcb
jbe
addb
idivl
mov
jo
les
push
cwtl
stos
lods
add
sub
test
push
mov
mov
orl
pop
cs
sbbl
inc
xor
pop
mov
movsl
jle
pop
pop
iret
movl
dec
mov
xor
mov
lret
sub
push
ljmp
mov
pushf
rcll
sbbb
mov
aad
int3
adc
or
movsb
mov
adcb
cmp
jmp
mov
loope
call
in
mov
dec
sbb
push
in
cmp
sub
fwait
dec
pop
mov
outsl
mov
and
mov
jbe
push
cmp
inc
nop
adc
cmp
jp
push
test
xor
inc
sub
push
and
jb
cld
mov
or
mov
adc
mov
test
or
ret
cmpb
dec
push
lds
std
xchg
push
arpl
lock
js
insb
lods
test
and
pusha
mov
nop
mov
adc
push
xchg
stos
jno,pn
pop
scas
lods
pop
pop
jns
jnp
decl
and
adc
stos
arpl
rolb
outsl
jns
and
roll
xchg
mov
push
pop
jbe
add
push
adc
sub
mov
adc
movsb
and
pop
popa
les
cmpxchg
mov
sarl
dec
sbb
movsb
push
inc
popf
and
inc
inc
pop
adc
mov
pop
dec
cmp
movsb
test
lcall
or
lds
cli
in
jecxz
cltd
inc
subb
jp
cmp
inc
jno
test
int3
sbb
push
adc
outsl
or
pop
sbb
lea
or
loopne
cmp
xor
or
jle
mov
pop
inc
jp
mov
cmpsl
mov
fs
sahf
sub
adc
xor
add
fnstcw
cmpsl
ret
push
fcmovne
shrb
xchg
push
cld
xor
out
loopne
movsb
mov
or
mov
or
push
dec
scas
cmp
lcall
movsl
push
iret
out
mov
jnp
push
je
int3
addb
push
or
add
or
scas
mov
stos
dec
dec
scas
pop
pushf
xor
adc
in
mov
push
arpl
jmp
pop
lahf
repnz
push
mul
clc
push
fildl
test
xchg
xchg
les
jecxz
fwait
inc
xlat
mov
outsb
enter
adc
shll
mov
jne
or
cmc
push
frstor
push
jg
mov
cli
in
bound
sbb
in
mov
mov
adc
adc
pop
mov
mov
jnp
lcall
and
or
addb
xchg
or
cmp
xchg
xchg
add
adc
movswl
outsl
ja,pn
shrb
push
int3
pop
sbb
jle
cmp
lea
push
xor
mov
pop
add
movsb
dec
pop
or
pushf
mov
rorb
push
adc
push
jl
shlb
jnp
jo
cmp
or
push
push
inc
inc
cld
xchg
pusha
into
inc
push
int3
jmp
cmp
shlb
mov
js
xchg
shl
adc
add
addb
aam
arpl
push
cmpb
push
scas
mov
xor
add
cmpb
xor
dec
adcb
adc
cmp
scas
adc
pop
enter
pusha
mov
mov
ret
fwait
and
movl
xor
adc
data16
std
mov
add
sub
inc
insb
xchg
pop
xchg
or
leave
cmpsb
add
inc
push
das
adc
inc
inc
push
test
daa
xor
jne
inc
push
jae
push
je
dec
inc
or
je
or
sbb
sbb
mov
clc
call
jmp
sub
push
test
mov
dec
lret
mov
popa
int
inc
movsb
xor
stos
dec
adc
push
push
inc
cmpsl
out
lock
shr
stos
mov
mov
pop
cmp
mov
mov
dec
test
pop
scas
mov
or
pushf
xchg
mov
shrb
test
push
dec
roll
xchg
and
inc
outsb
push
cmp
add
push
xchg
push
mov
pop
or
mov
sbb
pop
xor
mov
in
add
adc
or
sbb
cmp
xor
sub
fnstcw
xor
sbb
push
test
jmp
adc
xchg
and
xor
or
add
sbb
cmc
add
jmp
mov
stos
sub
xor
test
jmp
lahf
push
inc
outsl
sub
mov
cmp
fiaddl
hlt
pusha
ret
and
jne
mov
adc
leave
cli
loop
test
dec
in
or
lcall
xchg
out
test
jmp
xchg
gs
inc
cmp
andl
sbb
inc
and
or
jmp
ds
ret
jno
xchg
pop
inc
xor
adc
mov
mov
daa
js
push
popa
mov
imul
dec
cwtl
xchg
movsl
jge
lret
xchg
and
pusha
inc
lcall
fidivs
test
jne
stos
in
inc
xchg
cmp
xchg
dec
jne
addb
push
mov
pushf
insb
jmp
dec
flds
and
push
or
dec
push
add
sub
jmp
mov
jle
in
mov
push
push
stos
repnz
add
ret
mov
out
sub
xchg
lods
jmp
sbb
std
cmp
dec
push
lock
pop
div
or
jmp
nop
orl
movups
stos
xor
pop
xchg
pop
mov
cltd
idiv
lahf
push
lret
loop
dec
stos
xor
or
in
fs
add
adc
pop
mov
mov
or
mov
xlat
mov
dec
pop
adc
sti
mov
xor
inc
xor
shll
or
hlt
pop
lods
out
rcl
adc
pop
sbb
mov
js
mov
dec
add
setne
int3
lods
inc
ret
pop
cmp
adc
imul
dec
test
lds
je
xchg
in
push
pop
cmp
repnz
jg
lods
lods
jl
lods
jnp
or
pop
popa
dec
imul
test
imul
sbb
pop
lretw
mov
add
cmpsb
push
inc
add
push
dec
cmc
adc
cmpl
test
test
das
cmp
or
movsl
aam
fsubr
add
jo
push
rcll
sbbb
cli
and
adc
cmpsb
mov
pop
or
or
mov
test
inc
jp
xor
mov
adc
rolb
or
adc
xor
adc
subb
sbb
clc
dec
jno
push
adc
cmp
jge
je
jo
movsl
sub
fldpi
rcpps
div
sbb
lret
pop
pop
cld
out
lds
push
xor
shlb
sbb
adc
daa
cli
add
push
add
dec
sbb
adc
or
mov
mov
out
dec
and
adc
mov
ds
pop
fwait
mov
pop
push
fiaddl
pop
or
xchg
and
xchg
cmp
mov
and
jne
lahf
lds
ds
xor
cmpsb
adc
movsl
adc
mov
or
mov
aaa
in
ret
paddusb
mov
pop
pusha
dec
leave
js
lret
pushf
pop
jo
pop
sbb
lods
das
inc
aam
sub
movsb
cmpsb
popa
test
decl
incb
mov
leave
mov
ja
inc
adc
adc
adc
adc
or
sbb
mov
add
or
adc
pop
inc
mov
clc
fsubrl
mov
sbb
popa
adc
test
cltd
in
movsl
lods
add
push
inc
jmp
rcl
cmpsl
sar
imul
mov
lods
xchg
cli
adc
sbb
rcll
inc
push
xchg
pop
and
push
pop
dec
push
sub
mov
dec
xor
add
add
xor
fsubrs
dec
cs
imul
pop
fstl
jge
push
mov
xchg
aas
xchg
jbe
out
add
mov
pop
inc
or
lahf
fwait
negb
inc
add
add
roll
or
incl
or
icebp
js
cmpl
jae
mov
jne
pop
lods
fwait
bound
inc
jne
jbe
and
mov
iret
or
iret
mov
jo
inc
and
sbb
movsl
sbb
ret
pop
pop
scas
cmp
xchg
fyl2xp1
loop
les
or
adc
divl
lea
mov
call
xlat
pushf
fwait
movsl
jp
subl
movsb
push
jo
gs
and
je
mov
icebp
mov
xchg
test
stos
in
int
jmp
jbe
and
mov
pop
adc
mov
test
mov
test
lea
dec
fdivr
mov
addb
push
mov
sbb
pop
cltd
or
imul
test
inc
mov
cmp
add
sti
jmp
sub
movsb
and
das
inc
adc
jns
out
fistpll
sub
mov
bound
negl
xor
scas
mov
vpaddb
movaps
mov
pop
adc
test
xchg
loopne
rcll
shrb
test
das
ficomps
sbb
cltd
adc
sub
fbld
loop
cmp
rol
push
loop
sti
mov
add
sbb
jl
dec
imul
xor
and
jnp
xorl
inc
adc
popa
jae
jmp
enter
out
movsl
dec
ss
outsb
mov
mov
pop
mov
push
add
cmova
xchg
lret
dec
leave
ljmp
jmp
push
call
testl
mov
or
push
sub
jmp
sbb
notl
push
or
mov
mov
push
rorl
push
pusha
dec
push
popf
push
inc
xchg
into
dec
pop
xchg
fdivr
add
mov
mov
and
push
push
adc
add
dec
jb
pop
inc
cwtl
inc
dec
loopne
popf
inc
push
push
rolb
pop
mov
inc
sbb
fs
cmp
pop
add
or
mov
mov
orl
ss
add
int3
xor
pop
mov
jns
push
sub
lea
push
sub
aas
jmp
sti
iret
out
or
cmp
scas
mov
jl
mov
dec
ljmp
pop
scas
fldl
sbb
push
outsb
or
fs
xchg
cmp
aam
adc
or
ss
out
test
adc
xchg
xor
pop
sbb
pop
test
stos
cmp
push
inc
sarl
and
rcrl
cmp
and
sbb
xchg
or
das
and
je
int
cmp
leave
inc
into
stc
lcall
jl
adc
mov
loop
pop
fldl
jo
dec
adc
mov
cmpsl
mov
test
add
push
or
jl
dec
jbe
add
mov
imul
scas
cmp
sub
sub
imul
inc
movq
hlt
js
add
cmp
enter
repz
xchg
ror
adc
mov
pusha
int3
sub
cmpsb
and
jge
mov
enter
or
jns
ret
mov
jp
jg
dec
lods
jnp
dec
cmp
add
sbb
inc
jle
enter
inc
add
cmpps
pushf
jle
jmp
jnp
ja
frstor
ret
jns
lret
adc
lock
pop
test
adc
pop
insb
and
das
pop
xchg
and
call
adc
xchg
sub
mov
jns
outsb
lret
jmp
mov
mov
pop
dec
adc
mov
cli
mov
out
fiadds
out
xor
in
test
fstl
xchg
vrcpps
dec
mov
cs
or
sub
loopne
adc
jl
inc
jne
jge
adc
xchg
mov
loope
cltd
jmp
and
inc
push
xchg
xchg
adc
adc
cmp
dec
data16
fisubrs
and
and
stos
cld
pop
dec
inc
nop
jle
push
aad
xchg
scas
ds
jmp
dec
sbb
mov
in
dec
or
leave
aam
mov
imul
adc
stos
rorb
sub
mov
xchg
and
mov
jge
jg
sub
ja
cltd
ja
pop
push
pop
daa
lock
repnz
je
mov
les
mov
dec
and
lret
xchg
pop
out
adc
mov
imul
sub
jo
xchg
sbb
add
xchg
loop
dec
pusha
adc
or
dec
lahf
orl
inc
push
inc
and
adc
fisubs
push
mov
leave
sub
jmp
jge
lods
movsb
sub
push
jne
lea
hlt
pop
or
jae
sbb
inc
pop
jmp
and
jle
pop
cmp
and
xor
lock
sahf
decb
add
jle
xchg
sub
jmp
test
test
popa
loopne
repz
rorl
icebp
insl
shll
jno
fdivrl
sub
pop
out
loopne
movl
mov
add
jmp
jne
hlt
pop
dec
pop
pop
lret
arpl
and
out
mov
pop
or
leave
adc
fldt
imul
in
cmp
xlat
and
cmp
lods
adc
subl
and
or
dec
adc
dec
mov
dec
les
sahf
js
mov
pop
cmp
cmp
add
cmp
mov
sbb
push
shrb
inc
and
push
sbb
enter
outsl
shlb
push
xor
popa
rorb
lahf
pop
pusha
jne
inc
mov
scas
fs
xchg
jbe
push
adc
es
and
stos
pop
enter
sub
push
jmp
cld
das
inc
mov
inc
test
push
sub
mov
mov
push
xor
and
sbb
adc
xchg
and
inc
clc
push
jns
loop
hlt
bound
xor
pop
push
mov
mov
mov
inc
or
adc
cmp
lock
iret
xchg
in
ret
push
and
call
lret
and
aas
int3
scas
adc
mov
jne
stos
mov
mov
out
sub
inc
sub
sbb
fldcw
fstps
shll
adc
in
xchg
xchg
out
rcr
add
pop
lea
jp
push
mov
sbb
std
mov
xor
subb
adc
xor
push
aam
outsl
mov
xchg
insl
xchg
xchg
in
sub
inc
rcrl
mov
or
inc
mov
in
add
jmp
adc
addl
mov
cmpsb
cld
cli
mov
mov
pop
jns
cwtl
or
sar
or
adc
or
xor
movsb
pop
sub
subl
jge
clc
pop
fisubs
ss
or
decl
ljmp
inc
clc
ret
pop
push
cmp
push
dec
das
shr
cltd
mov
fnstcw
inc
aam
and
jns
mov
adc
sub
sbb
scas
jmp
les
pop
push
lret
dec
sbb
sbbl
or
cs
jge
sub
add
fdiv
mov
adc
adc
movb
divl
push
pop
mov
inc
cmp
dec
cmp
lods
ljmp
mov
adc
jmp
adc
push
push
mov
mov
bound
lock
sub
test
movsb
jo
mov
push
rolb
mov
and
sub
fadds
inc
lods
outsl
pop
jnp
ret
pop
in
dec
pop
xchg
mov
popf
shlb
bound
jno
js
stos
mov
or
lods
pop
lods
push
jmp
mov
imul
push
imul
aam
das
adc
scas
sub
nop
push
fnsave
daa
inc
leave
pop
sub
or
jb
jl
inc
or
mov
or
lods
and
test
jae
mov
nop
scas
sbbb
unpcklps
mov
movsb
push
jne
out
mov
inc
es
xchg
ja
enter
sub
dec
cs
adc
sbb
add
or
mov
jo
jmp
sbb
adc
and
lock
pop
scas
xchg
nop
mov
ja
cmp
adc
mov
cli
lea
cmp
sub
inc
mov
clc
mov
sbb
sbb
daa
subl
sbb
add
push
adc
lret
or
sbb
xor
jp
pop
inc
adc
pop
scas
fnstenv
sbb
jp
xorl
pop
jle
xor
push
es
jg
insb
cmovp
int3
movl
or
xchg
insl
mov
cmpl
push
push
sarb
dec
inc
jg
fsts
push
std
test
movsl
push
dec
xorl
inc
stos
iret
pop
adc
pusha
ljmp
sub
push
and
pop
cld
ja
clc
dec
stc
pop
cmpsb
test
je
push
mov
push
and
push
add
xor
jmp
rcl
fcmovne
sub
add
and
ss
or
push
or
scas
inc
test
or
mov
xor
clc
lea
mov
xor
lea
js
adc
cld
push
push
xor
test
enter
repnz
xchg
scas
lds
cli
mov
mov
imull
es
inc
cmp
cmc
sub
cmpsl
ja
adc
hlt
push
and
pop
push
xchg
and
ljmp
fmull
push
xchg
inc
cmc
mov
adc
fs
test
push
xchg
mov
jno
test
jbe
sub
or
pop
pop
ds
mov
mov
add
cmp
jne
cltd
adc
jb
jmp
mov
adc
outsb
dec
ficoml
and
insb
and
xchg
les
mov
test
imul
mov
mov
cmp
lods
push
test
jb
ret
dec
mov
inc
icebp
out
jecxz
or
cmp
ficoml
fldt
lock
push
test
repnz
jle
ret
push
push
pop
daa
daa
rcrb
push
push
test
dec
pop
adc
aaa
mov
cli
ss
adc
call
in
sbbb
fxch
rcl
push
push
cmp
push
adc
or
adcb
inc
pmaxsw
push
push
data16
scas
dec
lds
mov
pop
rcpps
mov
pop
xchg
movsl
jne
cwtl
mov
mov
pop
mov
pusha
fstl
pop
shll
push
xchg
hlt
mov
ret
inc
scas
sub
imul
out
xchg
jbe
push
ficoms
pop
or
inc
xor
push
adc
mov
push
test
cs
push
xchg
pop
lcall
xchg
mov
jmp
scas
xor
push
in
lret
xchg
inc
cmp
mov
push
xor
jg
mov
test
je
xor
fwait
mov
inc
mov
pop
pop
sbb
imul
jae
in
adc
sbb
addb
jmp
ficomps
sub
clc
popf
jno
ret
jo
je
xchg
in
xorb
lds
and
pop
lods
add
push
jecxz
inc
pop
imul
lahf
inc
pushf
add
mov
daa
cmc
sbb
fdivrl
cmpsl
je
xor
jg
xchg
mov
in
jge
fadds
leave
sub
jne
lcall
cmp
cmp
jmp
sub
push
shr
sub
sbb
add
icebp
adc
fsts
adc
stc
and
ljmp
mov
movsl
shr
dec
shl
adc
sub
inc
or
imul
sub
ret
data16
stos
dec
jne
in
pushf
imul
mov
cs
imul
nop
mov
sbb
ror
gs
sub
repnz
pushf
rcrl
pusha
sbb
inc
or
add
xchg
scas
xchg
popf
xor
or
sub
push
and
nop
rorl
dec
mov
outsb
hlt
adc
adc
mov
jmp
sbb
in
xor
inc
xor
inc
scas
inc
inc
or
mov
je
call
mov
int3
push
movsl
aaa
les
decb
jnp
pop
and
pushf
and
xchg
or
cs
pop
xchg
mov
loopne
inc
cmp
out
xchg
push
push
jnp
mov
mov
clc
pop
xchg
enter
popf
cld
mov
sub
mov
or
add
pop
push
pusha
xchg
mov
jbe
out
pop
add
pop
or
mov
mov
mov
adc
sub
mov
jmp
insl
inc
add
std
jg
sbb
mov
sahf
sub
inc
inc
inc
mov
inc
and
test
data16
add
xor
cmp
test
sbb
lock
mov
cs
adc
add
lock
xor
aaa
or
dec
pop
rep
sub
sarb
adc
add
add
rolb
jnp
sbb
push
sbb
rolb
dec
xchg
sub
or
push
mov
lahf
dec
ja
pop
push
mov
mov
or
sub
jbe
fsubl
add
add
stc
and
hlt
mov
rcrl
inc
adc
xchg
cmp
sub
push
lods
cmp
pop
dec
mov
jae
push
and
cltd
push
sub
bound
adc
jne
out
lods
push
mov
dec
and
push
aad
sub
lea
sub
inc
push
cs
pop
cmc
lahf
xchg
jne
daa
inc
adc
mov
add
adc
lods
dec
adc
jns
jle
daa
or
inc
sub
imul
mov
pop
cmpsb
push
adc
ljmp
and
sbb
mov
cmc
das
aas
sub
cmpsl
mov
dec
add
sub
out
icebp
mov
sbb
negl
adc
mov
pop
pop
mov
lods
sbb
inc
xor
push
stc
sub
xchg
in
push
xchg
dec
mov
push
mov
mov
leave
push
adc
or
jge
aam
fisubrs
shrl
sub
imul
sub
js
in
push
inc
sahf
and
or
icebp
push
and
cmpsb
cwtl
pop
mov
or
inc
lea
int
sub
lods
mov
xor
movsl
sarl
pop
and
xor
mov
in
mov
push
fildl
rorl
cs
jmp
shrl
or
roll
lods
adc
jg
or
push
sbb
or
jge
imull
addb
xor
mov
movsl
shll
outsb
mov
rclb
out
je
or
lock
or
pop
xor
sbb
mov
std
insl
cmp
lock
sahf
sbb
pop
and
inc
adc
push
xchg
push
xchg
call
and
fstl
mov
inc
adcl
pop
adc
je
push
xor
imul
xlat
dec
or
mov
or
and
push
push
xor
out
adc
and
cmp
xor
or
sub
xor
dec
sahf
inc
js
adc
pop
das
ficoms
aad
adc
push
pop
pop
call
add
sbb
into
test
inc
sub
mov
inc
mov
xchg
pop
enter
lret
or
xor
aas
adc
out
and
nop
sub
push
inc
dec
add
xor
adc
mov
mov
cli
ds
mov
insb
in
and
in
and
enter
in
inc
int3
and
in
scas
call
imul
push
inc
scas
sub
jle
in
add
inc
push
xor
add
dec
loop
lret
sbb
ret
inc
fisttpl
add
mov
das
cs
cmpsb
nop
dec
sbb
inc
gs
int
or
push
cmc
dec
popa
jae
adc
and
mov
jae
xlat
push
inc
xor
pop
sbb
jo
jo
pop
adc
sub
jae
ficoms
pop
cli
mov
inc
sub
inc
je
sbb
notl
adc
dec
jae
inc
or
dec
outsl
inc
data16
adc
pop
pop
add
sbb
push
fisttps
mov
test
mov
adc
int3
fisttpl
mov
xchg
xor
mov
dec
push
and
mov
sti
and
push
push
nop
cs
ret
jl
rorl
sub
or
xor
push
push
and
pusha
inc
mov
xchg
push
and
jb
ret
in
pop
cs
and
out
push
xorb
loop
or
pop
dec
test
push
or
popf
dec
adc
in
aad
jmp
adc
mulb
ss
pop
cmp
mov
or
mov
pushf
scas
pop
cmp
loopne
sub
or
mov
pop
js
hlt
fcomip
mov
leave
mov
bound
cld
mov
test
movsb
xchg
stc
repnz
test
cltd
xorb
xchg
std
daa
sub
mov
aam
sub
inc
push
test
push
and
adcb
push
cwtl
test
adc
cmp
inc
insl
pop
clc
scas
dec
adc
inc
push
cmp
xor
outsl
clc
jno
sub
mov
mov
mov
mov
test
dec
in
movsl
loop
pusha
out
push
dec
xchg
add
ds
stos
or
push
pop
stc
cmp
sti
sub
insb
add
imul
xchg
jg
scas
data16
sbb
sbb
cmp
inc
outsb
mov
test
gs
scas
ret
enter
loopne
loop
xchg
lods
lret
mov
fisttpl
pop
pop
adc
and
push
ss
push
push
mov
xor
inc
inc
cltd
pop
leave
sbb
test
xchg
loop
jmp
popa
inc
push
subl
insl
pop
sbb
cmp
or
xchg
add
xchg
dec
mov
addb
flds
inc
or
dec
cmp
cwtl
dec
mov
xor
nop
rcrb
add
cmp
push
adc
pusha
pop
aam
inc
out
fildl
dec
add
pop
ds
das
inc
mov
xor
lds
push
jle
sti
lods
adc
clc
out
xchg
push
cmpsb
in
data16
loope
add
push
cltd
add
stc
xchg
sub
xchg
push
pop
sbb
ljmp
call
inc
add
lock
dec
sti
orb
cmp
loope
in
mov
xchg
adc
sbb
or
cmpb
or
pop
pop
push
push
inc
out
vprotb
aam
adc
stc
popf
repz
les
call
fnstenv
out
xlat
adc
movl
mov
dec
js
insb
push
dec
adc
in
jns
fidivs
faddl
mov
inc
test
mov
and
add
inc
mov
add
rcrb
cltd
mov
and
shlb
xor
or
cwtl
test
adc
cltd
or
les
mov
cwtl
cltd
jns
or
cwtl
ror
or
leave
adc
out
jge
cmp
in
pop
adc
jp
test
decb
mov
data16
pop
or
shrl
jmp
push
push
fdivrl
lods
sub
xor
sbb
dec
mov
movsl
adc
mov
das
shlb
cs
bound
fs
or
inc
jl
daa
out
mov
mov
or
dec
mov
inc
rorb
repz
dec
jmp
and
sbb
mov
jno
sub
je
je
stc
or
stc
repnz
push
inc
int
or
scas
jae
insb
and
adcb
in
aam
enter
nop
int3
in
call
sub
cld
sbb
or
repnz
je
push
notl
in
mov
inc
mov
and
repnz
mov
shlb
xchg
add
iret
out
xchg
lcall
push
popf
arpl
les
movsl
incl
xchg
xlat
inc
mov
hlt
scas
mov
or
test
mov
adc
jge
inc
push
pop
icebp
jp
aas
cld
sbb
or
mov
mov
mov
pop
bound
fidivs
inc
std
daa
add
pop
pop
sub
lods
sbb
sbb
pop
inc
loop
cmp
rcrl
mov
xchg
leave
adc
ror
out
popa
jnp
pushl
cld
out
repz
pop
jne
xor
nop
or
gs
pop
adc
pop
inc
mov
adc
bswap
xor
or
aas
push
fstpl
bnd
or
xor
pushf
and
dec
and
mov
out
and
jg
dec
cli
sub
inc
dec
xor
scas
pop
enter
lea
jl
ja
cmpl
jg
jns
mov
mov
push
adc
inc
pop
and
and
sbb
in
popf
icebp
inc
jno
jp
cld
xchg
stos
sub
adc
jmp
inc
dec
adc
mov
popf
hlt
rclb
sub
push
cltd
push
les
mov
push
pop
pop
xchg
mov
xchg
ret
stos
fdivrs
es
int
imul
clc
sub
xorb
lret
sahf
cltd
push
imul
leave
mov
stos
pop
pop
aad
sub
shrb
pop
cli
les
adc
stos
addl
jo
ljmp
dec
mov
cld
ds
clc
mov
ss
cwtl
ficoml
jmp
adc
mov
or
adc
lret
pushl
push
inc
ffreep
inc
shr
loope
xor
jge
fsubrs
inc
jge
push
and
ret
popf
jae
pusha
sub
cmp
jg
push
daa
cwtl
inc
push
inc
sub
addb
inc
inc
sub
mov
mov
hlt
scas
fstps
in
xchg
jo
js
mov
ret
sub
dec
mov
into
nop
mov
inc
push
enter
in
mov
nop
lea
unpcklps
add
dec
popl
add
pushf
add
pop
xchg
mov
mov
jl
pop
ds
xchg
push
or
pop
push
nop
or
cwtl
test
adc
movsb
cmc
sti
sub
cmp
jbe
cmp
imul
inc
dec
je
int
xchg
adc
adc
dec
lock
push
data16
push
lods
mov
push
gs
push
dec
inc
mov
sub
rorb
or
cmp
cmp
pushf
jmp
and
std
inc
mov
and
fmul
out
pushf
mov
push
into
add
imul
dec
mov
mov
sbb
mull
sub
adc
scas
jo
cmpb
add
out
cmpsb
idivl
rolb
test
inc
xchg
je
push
cmp
imul
cwtl
push
aas
mov
sub
adc
pop
das
jmp
push
shrb
mov
cmpl
je
dec
ds
xchg
mov
push
pop
jge
push
dec
pop
and
cmp
je
mov
push
adc
mov
cs
shll
or
sub
lock
sub
mov
rcll
sub
push
pop
int3
sbb
pop
ror
or
dec
sbb
or
add
push
or
inc
pop
jle
std
fmul
ljmp
les
bound
adc
scas
and
jmp
mov
pop
aad
gs
movsb
cmc
rolb
out
scas
lret
dec
mov
inc
je
aas
cltd
inc
testb
jne
adc
mov
fstl
push
mov
je
dec
pop
repnz
xchg
mov
push
cmp
pop
mov
cmc
imul
sbb
jo
fisttpl
mov
je
cmc
outsb
mov
lods
mov
faddl
jmp
xor
roll
dec
mov
xlat
xchg
sti
mov
jbe
adc
out
mov
or
movsb
out
pop
sti
dec
cwtl
adc
mov
and
add
cmc
data16
outsl
cld
mov
sbb
xchg
mov
or
imul
pop
push
out
inc
pop
dec
lods
cmc
dec
inc
mov
xchg
xchg
inc
cltd
pop
push
imul
mov
push
lahf
clc
dec
fwait
movsb
mov
inc
dec
adc
sub
cmpsb
hlt
cmp
je
inc
cmp
dec
sti
sub
sub
sub
adc
loopne
sti
fs
fbld
cmpsl
std
test
mov
sbb
ja
movzwl
loop
std
stc
mov
pushf
rcrb
inc
cld
test
movsl
jecxz
ljmp
ret
testl
call
and
es
ds
push
cmp
inc
pop
gs
sub
add
imul
and
jge,pt
cmp
jnp
sbb
xchg
std
xchg
lahf
les
call
rclb
push
mov
adc
add
adc
or
out
dec
xchg
pop
or
leave
adc
or
xchg
mov
mov
outsl
cmp
mov
adc
mov
push
dec
outsl
jb
insl
popa
xor
outsb
cmp
cmpsb
pop
dec
insl
addr16
cltd
call
mov
std
lcall
xor
imul
xchg
mov
mov
add
cltd
sbb
outsb
fs
enter
add
push
pop
xchg
adc
sbb
dec
icebp
or
jne
jo
les
and
imul
adc
testb
or
pushf
pop
scas
sbb
adc
loope
inc
fdivrl
mov
ljmp
sbbl
test
sbb
or
je
and
sub
clc
xchg
shl
inc
xor
push
xor
xor
insb
xor
scas
pop
sbb
mov
ja
test
sub
cmc
roll
jge
lods
push
push
sub
jmp
xchg
mov
aad
sar
push
and
inc
out
mov
std
push
push
push
movsb
push
pop
dec
pushl
test
push
out
xor
test
scas
dec
stos
jo
jno
inc
mov
shlb
lods
sub
jl
cmp
jo
xor
jge
and
cmp
inc
arpl
and
lods
and
jae
cltd
lea
mov
out
aaa
pop
mov
inc
and
outsl
adc
inc
cmp
daa
aam
pop
mov
mov
mov
push
fistps
fsubr
mov
frstor
or
fdivr
je
icebp
fiadds
inc
fdivs
dec
popa
in
xor
xlat
sar
mov
fmuls
dec
mov
std
test
cmp
in
addl
pop
xchg
inc
and
setno
jnp
mov
lcall
call
cmp
or
daa
jbe
jns
push
jns
mov
addr16
int3
mull
ret
xchg
and
push
mov
int3
dec
dec
mov
daa
xor
lahf
xor
sub
pop
pop
out
xor
xor
cmp
or
fwait
lahf
bound
cmp
inc
inc
push
mov
and
ljmp
cmc
movsl
jno
leave
or
pusha
and
push
mov
jae
fnsave
pushf
push
push
sub
push
test
lods
daa
stc
aam
pop
inc
das
inc
jnp
imul
rcll
jmp
sub
and
es
adc
or
pop
sbb
repz
int
adc
or
scas
dec
inc
lcall
arpl
jae
push
jecxz
mov
adcl
nop
mov
and
pop
pushf
int
sbb
jne
daa
mov
cmp
int
loopne
pop
jbe
repnz
push
cmc
insb
ficompl
fldcw
fs
jp
sbb
imul
lock
mov
lock
popf
fisttpll
repz
push
inc
mov
pop
lret
scas
adc
stos
sub
inc
hlt
ficoml
mov
sub
mov
or
daa
fstl
das
jns
dec
pop
inc
movsb
inc
inc
cmp
rclb
jnp
js
shlb
dec
or
xlat
and
hlt
mov
fs
push
test
xor
push
cvtps2pi
mov
lock
pop
inc
ljmp
lock
iret
clc
arpl
push
pushf
addr16
in
arpl
sub
push
dec
gs
cmp
cmp
je
cmc
pushf
add
leave
cwtl
push
dec
js
jae
cmp
mov
inc
xchg
les
les
jl
int
leave
fcomps
inc
test
mov
fcmovb
gs
dec
xor
mov
flds
adc
adc
enter
in
cld
lret
in
adcb
andl
dec
dec
push
repz
jle
mov
loop
jbe
inc
adc
xor
inc
push
push
mov
xchg
push
js
lock
dec
xor
xchg
sbbb
out
test
sbb
jle
ret
push
call
mov
push
adc
pop
cmp
out
inc
mov
adc
je
adc
lahf
and
push
or
loop
lcall
sub
adc
adc
movsl
xor
and
adc
insb
repz
or
pop
mov
pop
shrb
mov
push
and
sbb
test
push
adc
adc
xor
out
or
lods
cmpsb
leave
pop
dec
sbb
mov
or
movsl
imul
jmp
in
hlt
insb
adc
in
in
sub
pop
inc
inc
jle
mov
xchg
or
mov
jle
add
insb
int
push
cld
mov
ret
mov
xchg
push
dec
dec
push
pop
inc
fdiv
in
dec
das
sbb
loope
add
xor
lods
push
adc
in
out
push
adc
jl
and
imul
and
lret
movsb
jle
cli
int3
dec
and
inc
nop
mov
jecxz
das
pop
fsub
pop
adc
or
xor
pushf
cmp
rclb
inc
inc
cld
inc
out
or
push
inc
imul
cmp
int3
add
clc
test
adc
in
bound
mov
sbb
in
push
daa
pop
mov
inc
or
negl
and
inc
ret
repnz
mov
out
div
rcrb
movsl
dec
mov
cmp
fdivrs
or
add
ds
add
in
cmp
rorl
fcmovb
and
aas
xchg
lret
sub
mov
pop
stos
or
imul
xor
sub
xchg
mov
addl
pusha
bound
fs
dec
pop
filds
dec
mov
cltd
cld
or
or
adc
rcll
jmp
popa
push
fnstsw
popa
loopne
inc
cltd
xor
jle
push
insb
rcl
das
jge
sbb
adc
aaa
sub
cmpsl
jne
imul
sbb
adcb
inc
ja
dec
shl
or
dec
shlb
or
std
bound
pop
mov
adc
leave
je
das
loope
cmp
scas
pop
mov
sbb
into
or
pop
adc
aad
pop
fdivrl
mov
mov
xor
inc
fists
daa
mov
inc
cmp
out
xchg
pop
mov
cs
insl
pop
ficoms
clc
lea
sub
fstpl
sbb
aaa
pop
mov
je
sbb
sar
jmp
test
adc
sbb
add
fsts
add
or
stos
cmc
mov
jmp
rcl
inc
insb
outsb
inc
inc
mov
aad
nop
inc
push
nop
mov
insl
popa
jo
dec
mov
sub
lea
mov
cs
nop
setb
lods
jo
aam
add
mov
call
and
adc
pop
mov
aas
push
shrl
mov
mov
in
pop
popf
popa
int
cli
ss
sub
movsb
mov
and
sarb
lods
ss
jne
dec
xor
xor
inc
inc
call
or
negb
jne
data16
xor
inc
dec
pop
mov
mov
sub
popf
mov
pusha
mov
sbb
adc
cld
adc
and
clc
adc
int3
out
push
xchg
shlb
adc
lahf
inc
inc
lock
pushf
dec
out
xor
add
inc
dec
jne
cltd
sbb
adc
sub
cwtl
vpshufd
mov
loopne
and
movsl
lahf
jo
pushl
dec
es
daa
push
mov
pushf
stc
fs
cwtl
in
and
push
add
jno
lods
and
addl
iret
shrb
pushl
push
adc
jo
jno
cmp
dec
adc
lock
sahf
jb
dec
sub
fstpt
std
int
pop
push
push
out
xchg
jnp
xor
mov
dec
adc
repnz
cmp
out
lret
addl
repnz
lahf
dec
das
repnz
or
xchg
ret
fsub
push
test
addr16
mov
imul
js
jb
push
dec
jp
ss
jb
and
addr16
outsl
inc
cmp
lock
daa
imul
lea
aam
mov
inc
adc
jecxz
jp
sbb
call
or
or
mov
xlat
rcr
add
aad
popf
inc
dec
or
nop
ds
sub
pop
je
cmp
lods
jmp
cmc
or
cmp
add
adc
add
push
mov
xor
xchg
dec
test
mov
inc
push
je
enter
je
idiv
inc
test
push
out
fisubrs
call
add
sbb
lea
jmp
cmp
adc
inc
stos
mov
mov
jecxz
movsb
cmpsl
add
or
arpl
lret
je
pop
dec
push
adc
push
jb
cli
xor
sub
inc
pop
daa
ret
push
push
mov
dec
mov
sbb
out
lret
push
mov
daa
inc
add
and
xor
xor
das
stos
or
fdivrs
hlt
incb
or
lods
jecxz
les
or
daa
xchg
jne
je
add
or
push
jg
clc
clc
stos
add
inc
dec
outsb
rol
lds
nop
movsb
jno
push
add
inc
notl
imul
out
xor
push
insl
out
loopne
pop
rorl
sbb
or
outsl
xor
push
jae
in
dec
or
push
inc
jecxz
dec
ljmp
sub
sub
jle
insl
pop
pop
push
sahf
bound
jae
mov
cmp
enter
jp
xorb
je
jl
inc
xchg
std
adc
inc
and
or
add
dec
mov
pop
cmp
adc
dec
xchg
cmp
xlat
nop
test
insb
sbb
fs
sbb
and
cvtps2pd
inc
push
lods
sbb
inc
insl
and
icebp
adc
mov
jns
jae
add
dec
push
out
mov
iret
adc
inc
pop
inc
dec
nop
mov
add
push
adcl
repz
test
mov
notl
mov
xchg
es
loopne
js
mov
les
jg
fs
mov
push
push
mov
pushf
lea
mov
xor
or
and
sbb
sub
dec
adc
and
or
mov
adc
ds
cld
dec
mov
int3
sbb
xchg
jl
pop
mov
adc
sub
jns
push
enter
das
lods
lds
inc
mov
xchg
cmpb
pushf
xchg
movsl
mov
stos
imul
nop
and
test
les
lock
pop
sub
xor
xlat
stos
mov
clc
mov
sbb
jne
sbb
fdivl
adc
sahf
or
pop
movsl
movups
pop
shlb
dec
fstpl
loop
xor
mov
push
cltd
sub
pop
xor
stos
lcall
popa
cs
imul
mov
dec
add
inc
and
in
imul
jae
inc
cmp
inc
rorb
xchg
gs
fs
jbe
enter
inc
xchg
push
xor
lods
fadds
fwait
sub
lods
and
daa
xchg
add
fmull
inc
int3
or
popa
jo
inc
cmp
xchg
mov
inc
xchg
orb
inc
pushf
mov
test
loopne
adc
bound
movsb
mov
dec
cmp
xchg
scas
pop
mov
xchg
scas
in
sbb
and
lock
inc
addr16
aas
mov
scas
lods
inc
sbb
add
inc
jb
jne
xchg
inc
icebp
xchg
aad
aam
dec
addb
cmpsl
mov
push
cli
jecxz
mov
movsl
cmp
and
jno
int3
aad
xor
mov
adc
aam
pop
mov
mov
cs
icebp
adc
pop
push
and
fs
inc
in
dec
mov
test
jo
mov
adc
inc
inc
ds
dec
adc
clc
push
push
imul
mov
lods
jns
addb
insb
loopne
imul
jbe
cmp
sub
loope
and
jmp
adc
adc
es
xchg
mov
pop
sbb
out
and
out
sbb
and
and
sub
hlt
leave
movsl
aad
xor
les
ret
lret
js
mov
outsb
leave
jbe
adc
int3
inc
sub
adc
movb
pop
or
add
jno
adc
mov
dec
inc
or
jle
lock
fnstenv
and
jl
cmp
mov
iret
add
movsl
int
outsl
test
mov
pop
movsl
adc
mov
or
cmpsb
adc
inc
aam
into
or
cmpsl
xchg
imul
cmpl
inc
pop
lock
sub
add
jb
push
mov
cmp
jmp
sbb
mov
or
inc
xor
inc
push
mov
sbb
in
aam
in
and
dec
into
inc
and
lods
push
jecxz
inc
outsb
adc
jne
push
jmp
ja
roll
jg
dec
add
push
mov
xchg
sbb
subl
int3
ret
jo
jne
pop
mov
push
jp
data16
inc
inc
orb
orl
daa
push
inc
cwtl
lods
shrb
sub
test
insl
or
xchg
or
test
dec
insl
movsb
lcall
inc
insl
xor
sbb
xchg
push
adc
rolb
sti
mov
dec
and
jmp
mov
push
in
sbb
lds
adc
js
in
and
clc
mov
aad
jecxz
sbb
popl
sub
mov
lods
in
adc
or
mov
rorl
test
test
add
or
int3
adc
pop
push
dec
dec
lds
je
lock
xchg
lds
aaa
inc
or
mov
leave
outsb
imul
push
repnz
and
pop
inc
or
mov
push
or
psubsw
movsb
divl
movsl
insb
and
xchg
imull
scas
cmpl
adc
mov
fwait
and
xchg
mov
pop
insb
mov
inc
or
insb
icebp
push
fidivl
orb
jnp
mov
adc
xchg
xor
xor
cmp
inc
inc
inc
inc
inc
add
dec
dec
dec
dec
dec
dec
add
push
push
push
push
push
push
add
pop
pop
js
adc
in
push
in
dec
scas
adc
mov
orps
scas
repz
and
fadds
xlat
fs
dec
dec
xchg
dec
mov
mov
std
jns
xor
clc
mov
sbb
jmp
dec
aaa
and
add
movsl
dec
ljmp
in
fiaddl
fldenv
add
pusha
push
sbb
shl
adc
inc
lea
sbb
sbb
pop
out
iret
loope
test
lea
xchg
push
jbe
dec
xchg
pop
mov
and
jge
daa
repz
xchg
addb
gs
push
mov
sti
or
orb
pop
inc
jge
or
mov
xchg
es
adc
or
mov
cmp
stos
or
sbbl
jne
movsl
push
enter
and
cmp
adc
mov
or
sub
sbb
or
jmp
jno
sub
int
iret
add
cmp
sbbl
sub
outsl
pop
ljmp
dec
mov
push
cmp
in
sbb
jne
mov
dec
sbb
or
cmpsb
xorl
inc
mov
mov
daa
adcb
cmpsb
sbb
test
pop
clc
cmpb
dec
repz
mov
pop
in
mov
aam
adc
sarb
or
cmp
adc
movd
xchg
jbe
add
das
loop
xchg
les
movsl
jno
mov
dec
out
sahf
adc
pop
push
imul
sbbl
xor
and
pusha
sbb
jmp
push
and
lock
jns
pop
sub
mov
dec
jne
aas
cmpsl
ret
dec
jmp
sbb
dec
add
or
jmp
outsb
inc
fs
push
add
fmuls
cli
ds
std
cmp
jns
incl
jnp
addb
adc
push
movzwl
mov
adc
sbb
hlt
adc
addl
movsl
jno
mov
inc
push
aas
mov
pushl
sbb
call
mov
mov
out
or
xchg
jg
mov
call
pop
cli
jmp
in
call
xchg
and
lods
icebp
mov
pop
out
test
push
lock
mov
or
rorl
jne
or
pop
lock
mov
mov
mov
jne
jle
sub
push
cmp
data16
or
ja
cmp
js
aam
xor
jmp
fnstsw
ss
inc
in
js
hlt
sbb
gs
sbb
cmp
jbe
sbb
in
insb
adc
add
ljmp
decl
inc
sub
xchg
aam
or
outsl
ficomps
outsl
enter
cmp
dec
shl
test
and
pop
in
and
mov
xchg
test
leave
loopne
std
dec
mov
sbb
js
add
inc
cmp
movsl
xor
push
cmp
jecxz
dec
popa
test
dec
mov
jbe
inc
pop
dec
mov
add
cmpb
and
xchg
cmp
test
movzbl
push
aas
cmp
jo
push
xchg
xor
sub
adc
xor
test
movsb
leave
push
stc
jnp
imul
lds
ds
into
mov
ficoml
in
in
sub
cmp
pusha
push
and
inc
popf
dec
push
incb
sub
jl
xor
jo
stos
cld
pushf
mov
pop
sub
and
sahf
int3
mov
lret
push
inc
inc
test
call
mov
test
jg
push
movb
or
std
add
int
js
data16
ds
movsl
inc
sub
stc
js
fadds
jg
adc
mov
dec
stos
mov
sbb
mov
mov
jge
cs
leave
imul
cmpl
enter
cmpb
arpl
sub
pop
sub
bound
lock
xor
xor
rorl
mov
xor
xchg
add
dec
mov
ss
in
mov
sarb
xor
stos
adc
push
xchg
inc
loope
jnp
sub
hlt
push
push
dec
xor
jle
dec
or
dec
xchg
shrl
mov
push
iret
repnz
jmp
add
jbe
test
jne
cmc
rorb
push
ljmp
pop
sub
mov
cmpsl
xchg
test
jb
jo
mov
dec
mov
and
popa
cmpb
and
daa
lcall
sbbl
jp
pop
or
adc
push
test
and
stos
andb
cmp
or
leave
cmovnp
test
xor
cmp
negl
cmc
adc
test
inc
xchg
cmp
and
cltd
cmp
xor
or
mov
daa
roll
inc
push
and
or
mov
and
or
adc
push
push
int3
add
dec
data16
mov
xor
adc
sbb
mov
aas
cmpsl
xchg
sbb
sbb
or
mov
rolb
or
jmp
mov
mov
call
pop
fnstenv
pop
ds
aad
or
mov
push
sti
mov
xchg
jle
dec
jmp
in
imul
in
jge
xlat
int3
mov
push
stos
pusha
or
ljmp
add
sti
push
or
mov
dec
xor
push
jne
les
jp
and
in
nop
bound
popf
int3
adc
daa
xchg
pop
mov
pop
ja
testb
jne
inc
outsb
push
and
dec
andl
or
xchg
fsubl
pop
sbb
xor
adc
push
in
mov
xor
imul
jmp
hlt
shl
inc
or
jne
add
and
lcall
adc
data16
and
or
push
push
and
adc
push
addr16
add
and
pop
dec
cmpl
xor
jo
mov
and
inc
je
leave
adc
jmp
test
sbbl
jns
in
ljmp
add
jl
inc
xor
cmp
and
sbb
aad
fidivrs
add
jae
mov
xorb
sbb
jbe
push
nop
mov
inc
dec
jne
int3
or
cmp
test
js
sbbl
in
bound
mov
xor
sbb
jne
das
in
or
and
mov
dec
outsb
mov
pop
out
sbb
and
pop
xchg
push
scas
xor
scas
test
mov
mov
mov
jl
adc
xchg
xor
scas
dec
xor
fsubs
jmp
xchg
add
jecxz
cwtl
lret
add
pop
adc
and
cmpl
cmp
test
je
js
mov
addl
cwtl
mov
loopne
pop
sbb
xor
and
in
xor
lock
lahf
addl
add
add
lods
hlt
fsubrp
push
dec
imul
sub
les
add
push
rorb
adc
addr16
cmp
xchg
loope
mov
dec
push
add
sub
inc
pop
or
or
push
push
dec
fs
lods
push
lcall
sbb
cmp
push
je
mov
enter
xchg
ljmp
je
jge
sub
xchg
mov
dec
clc
ret
sbb
and
sub
mov
adc
dec
idiv
adc
hlt
push
mov
insl
addr16
or
mov
push
cltd
aas
or
lahf
pop
inc
or
push
adc
outsl
test
inc
or
mov
jo
incl
inc
decb
test
jmp
inc
mov
adc
idivb
inc
xlat
or
push
loopne
xor
pushf
adc
movb
movsl
adc
adc
pusha
sub
inc
das
inc
sbb
repz
or
enter
mov
shlb
xchg
test
adc
cld
push
jne
jl
mov
popf
rolb
cltd
dec
pop
sar
sti
jle
fimull
adc
aas
cwtl
push
jl
sub
inc
jecxz
sbbl
dec
adc
jne
or
mov
shrb
and
fisttpl
test
movl
xor
sti
adc
adc
mov
lock
add
stos
cltd
mov
mov
xor
jmp
dec
sub
sub
adc
enter
cmp
test
mov
mov
or
fimuls
je
cmp
inc
sbb
es
lret
std
test
and
and
loop
and
inc
adc
hlt
imul
dec
dec
sub
lock
and
and
int
pop
add
jno
or
xor
sahf
jmp
cmp
sub
neg
scas
ss
pushf
push
dec
pop
lods
rcrb
in
mov
push
adc
fwait
mulb
mov
inc
mov
mov
das
mov
mov
sbb
adc
xor
cwtl
mov
sub
dec
or
hlt
sub
mov
jg
inc
push
sub
sub
inc
clc
add
lock
insl
stc
inc
dec
imul
adc
or
js
mov
inc
pushf
and
in
inc
adc
sbb
jo
jp
movsl
add
mov
clc
stc
push
dec
push
movsb
insl
xchg
inc
jmp
jge
and
lock
mov
jae
xchg
hlt
push
push
xor
shl
xor
mov
mov
insb
cli
push
movsb
add
sbb
cli
xchg
imul
dec
clc
push
cmpsb
jns
pop
sub
jne
mov
sbb
xor
lock
xchg
hlt
sub
cmpsl
adc
and
addb
mov
push
daa
sub
dec
jmp
addl
mov
roll
dec
push
or
push
loopne
and
jmp
insb
lret
and
aas
outsb
movsl
pushf
adc
movsl
cmp
adc
loopne
mov
stos
sbb
dec
add
sbb
mov
jae
and
jne
aam
jbe
mov
xchg
iret
clc
sbb
dec
pop
sub
or
movzwl
test
enter
add
or
xchg
orl
lret
loopne
jb
mov
je
bound
mov
ljmp
or
fs
add
adc
cs
xor
cwtl
dec
or
test
fs
int
push
test
in
sub
jnp
or
adc
dec
and
adc
lret
in
popf
inc
xchg
test
pusha
jmp
xchg
sbb
and
bound
sbb
bound
int
dec
dec
mov
cmc
mov
sbb
cmpsl
xchg
or
clc
test
nop
adc
cmpsl
popf
adc
call
in
bound
test
pop
lcall
xchg
shlb
clc
rcrl
addr16
push
and
inc
lock
clc
jbe
adc
leave
out
inc
mov
les
or
test
outsb
mov
cmp
scas
and
xchg
cltd
inc
jmp
xor
lahf
adc
scas
jl
sbb
inc
in
adc
sbb
clc
lock
dec
sub
cmp
aad
adc
leave
movsb
out
mov
shll
or
sbb
pop
testb
push
in
hlt
movsl
leave
xchg
loopne
cmc
test
movsl
cmp
adc
fs
pop
loopne
xor
xor
sub
ljmp
cwtl
jbe
loopne
mov
out
fldt
push
rcrb
lcall
or
fmull
sub
loopne
test
inc
mov
out
gs
mov
rorl
jge
in
sbb
mov
xor
push
push
inc
rcrb
or
lcall
mov
mov
das
lahf
movsl
ja
sub
je
inc
enter
stc
pop
adc
xor
sbbl
and
adc
push
push
pop
xchg
sub
adc
jmp
pop
pop
jb
sbb
xchg
jmp
inc
aaa
mov
dec
xor
add
movl
or
mov
sub
and
mov
mov
xchg
xchg
fidivl
cs
jo
dec
and
dec
xor
push
jbe
nop
call
popa
add
lods
inc
je
xchg
jns
xor
cltd
fmuls
mov
add
adc
jl
and
mulb
adc
hlt
jecxz
cli
mov
inc
push
loopne
mov
mov
xchg
mov
sub
jg
inc
nop
in
mov
sbb
push
mov
xor
movsl
seto
or
and
aaa
push
mov
mov
stos
dec
in
mov
inc
or
sbb
lods
imul
setno
or
add
push
fld
lret
inc
data16
lret
mov
sub
in
negl
jg
dec
sbb
mov
aam
inc
pop
push
xor
xor
mov
dec
test
lock
insb
jbe
or
pop
pop
mov
add
cld
xchg
cmc
les
or
mov
add
add
je
inc
std
scas
mov
xchg
inc
jo
lods
subl
fmul
push
inc
lock
ret
mov
incl
cmp
inc
sbb
aad
adc
inc
xor
fisttps
adc
sub
es
shll
scas
out
dec
cmp
inc
sub
iret
cli
inc
movsb
inc
add
cmp
ret
nop
lods
jp
push
jb
mov
jmp
mov
pop
stos
mov
push
lock
cmp
out
pop
pop
xchg
daa
incb
cmp
jne
jne
adc
push
adc
sub
or
std
cmp
clc
or
ror
lods
add
in
and
je
jne
cs
jl
push
hlt
inc
adc
imul
gs
cmp
inc
andl
cmp
xchg
push
xchg
dec
ret
je
xchg
dec
std
loop
and
mov
es
test
sub
mov
cmp
mov
inc
pop
imulb
mov
pop
adc
adc
or
mov
enter
or
fistl
fiadds
aas
repnz
pusha
inc
frstor
or
fidivs
dec
mov
inc
insl
inc
and
cmp
mov
sub
mov
and
inc
jp
dec
xor
xchg
sti
into
mov
fdivr
call
mov
subb
daa
jge
mov
cmp
scas
hlt
mov
jmp
sti
dec
ss
cld
mov
ljmp
lock
in
and
hlt
cmc
test
cmp
je
pop
sbb
ljmp
data16
outsl
inc
and
test
cwtl
cmp
adc
shrl
test
push
mov
push
add
push
mov
jle
orb
imul
fildl
and
out
dec
test
jl
and
cmp
push
aad
movsb
popf
dec
ss
int3
jbe
movsl
adc
sbb
das
inc
xor
into
fistpll
pop
pusha
in
sahf
xchg
ljmp
mov
jle
pop
repnz
shrb
mov
notb
jmp
std
nop
hlt
andb
mov
jl
jbe
clc
lods
or
cs
xor
inc
or
test
je
adc
jne
ss
das
cmpb
test
sbb
adc
sbb
pop
xchg
lret
push
sbb
lahf
push
inc
lods
sub
cmpw
sub
and
mov
test
adc
xor
mov
push
xor
adc
jo
ret
les
enter
ret
das
xrelease
into
or
cmpsb
sub
lret
mov
addr16
sub
loop
push
clc
jl
pushf
insl
out
pushf
mov
push
repz
xchg
push
call
je
jns
pop
push
fs
jbe
in
insb
xchg
mov
cwtl
lahf
or
shll
mov
jae
and
or
xchg
inc
enter
dec
jmp
push
push
or
imul
inc
call
xchg
fsubl
pop
and
jge
adc
aam
adc
lods
inc
insl
dec
push
or
testl
ja
mov
and
ljmp
cli
push
mov
nop
or
jo
jb
lods
and
dec
sbb
dec
pop
inc
xchg
cli
dec
mov
inc
into
icebp
xor
pop
mov
mov
cwtl
rcrl
push
cmp
adc
jo
enter
cmp
or
push
or
inc
and
movsl
xchg
xchg
aad
in
xchg
pop
cmp
jo
loope
xor
mov
mov
xchg
stos
stos
stc
lret
xchg
mov
jns
sub
pop
or
inc
add
push
mov
push
mov
insb
cmp
adc
pop
or
in
mov
aas
push
xchg
insb
je
and
inc
cmp
cmp
stc
sahf
int3
mov
pop
data16
pop
push
sti
xor
sub
movsb
inc
dec
ds
mov
xor
stos
cld
cs
mov
es
cmp
adc
clc
xchg
jne
or
push
mov
fwait
movsb
lods
outsl
and
and
pop
enter
cmp
xor
xchg
cmp
inc
out
jno
or
mov
push
and
sub
pop
or
inc
jmp
imul
sbb
ret
mov
in
mov
daa
or
push
mov
rcr
pusha
push
cmpsl
pushf
jmp
push
and
or
pop
pusha
scas
push
test
enter
sbb
xchg
jl
cmp
test
arpl
add
imul
int3
into
push
push
sbb
lods
xchg
int3
mov
imul
add
push
and
outsb
clc
push
aas
adc
rcl
ret
in
sub
pop
in
lahf
gs
les
repnz
sti
xor
sub
mov
in
adc
mov
hlt
xchg
clc
mov
jg
mov
adc
lock
aas
repz
mov
dec
adc
sub
out
mov
pop
push
shll
xchg
xchg
sub
dec
popf
daa
cmp
sub
push
cmp
das
into
imul
and
nop
aad
jle
mov
mov
call
or
loop
add
bt
jae
mov
sub
clc
mov
sub
aad
cmpsb
ljmp
jmp
dec
dec
cmp
inc
clc
jmp
sub
enter
sbb
fs
push
or
sbb
test
dec
cmp
push
add
jmp
pushl
dec
daa
cltd
inc
add
and
movmskps
jmp
test
dec
test
mov
in
add
je
add
mov
push
mov
es
sub
or
imul
adc
add
mov
cmp
js
inc
mov
pop
test
out
sbb
or
cmpsl
mov
xor
pop
pop
mov
jg
ljmp
decl
out
cltd
fbstp
push
adc
icebp
loopne
sub
fimull
sub
scas
cltd
cld
insb
test
jmp
insb
sbb
movsb
mov
das
fmuls
leave
clc
js
push
aam
jmp
adc
push
das
push
dec
xor
out
fs
xor
loope
pop
push
push
or
rolb
xor
rol
adc
lret
and
pop
xlat
rorw
dec
enter
and
dec
insb
push
nop
sbb
enter
inc
push
int3
xchg
and
pop
xchg
in
je
int3
loopne
sti
loop
xlat
mov
and
and
mov
in
out
xor
inc
shlb
in
jno
and
or
inc
jmp
mov
pop
decl
pop
dec
mov
je
outsl
clc
shll
movl
push
cmc
adc
addb
push
adc
jmp
inc
dec
outsb
xor
mov
mov
cmp
cmp
adc
cwtl
jle
jle
sub
dec
and
jl
mov
jo
fneni(8087
mov
fcoms
dec
xchg
adc
iret
xor
in
or
clc
mov
lahf
or
cmp
clc
sbb
add
xchg
mov
nop
cs
test
nop
cmp
sub
stc
ljmp
xchg
pop
cwtl
in
cmpsb
push
adcb
sub
mov
jp
mov
xchg
mov
les
cli
adc
mov
cli
ljmp
fcoms
push
push
test
aad
pop
mov
add
stos
mov
cmpsl
pop
test
mov
popf
push
data16
cmp
pop
insb
mov
xchg
or
pop
pop
fisttps
rclb
jmp
lds
stos
ror
or
pop
add
mov
jb
xor
mov
mov
je
sbbb
inc
adc
mov
or
jg
lods
scas
and
inc
inc
aad
jmp
mov
sub
scas
push
nop
pop
in
inc
pop
fnstsw
test
andb
or
inc
dec
inc
sbb
daa
pop
subb
adc
add
and
fbld
and
adc
mov
adc
jne
lret
jmp
add
roll
scas
dec
pop
decl
or
dec
jmp
adcb
jg
add
jne
cmpl
daa
adc
lds
adc
dec
or
cmp
mov
aam
pop
xor
pop
stc
loop
pop
loop
adc
js
push
jge
cmc
out
xchg
adc
jne
nop
pop
cmp
pop
jo
imul
or
mov
fists
addl
stc
mov
dec
pop
decb
ficoms
inc
stc
or
cmp
leave
push
cmc
sub
dec
std
mov
pop
and
fstpt
imul
ret
push
mov
sbb
xchg
nop
mov
xchg
push
popf
imull
pop
adc
bound
jne
sarl
xorb
xor
movsb
pop
lahf
pop
aas
sub
sub
pusha
cld
or
mov
hlt
cltd
xchg
cmp
and
ljmp
mov
ret
xchg
jle
mov
std
sbb
sbb
mov
icebp
loopne
dec
lcall
scas
outsl
test
mov
jb
push
fcomip
lahf
cli
ljmp
stos
aad
lods
pop
dec
add
jae
in
scas
fcoms
enter
clc
jmp
and
aad
xchg
mov
ret
pop
mov
mov
repz
jge
add
push
hlt
shrb
loopne
mov
jecxz
push
xchg
mov
dec
dec
jle
in
xchg
stos
mov
mov
stc
leave
xchg
inc
out
mov
stos
jle
push
fmuls
dec
push
and
and
push
sub
cmp
mov
push
mov
subl
lock
loope
xor
pop
mov
shlb
lret
adc
and
sub
test
push
xor
cwtl
ret
scas
in
adc
or
add
aad
mov
sbb
sarb
lds
mov
mov
push
cmp
lods
mov
adc
add
shlb
inc
jmp
pushf
inc
add
sub
xchg
adc
dec
push
inc
leave
jbe
pop
fdivr
das
ffree
in
ficomps
pop
testl
int3
fwait
mov
add
lods
adc
mov
mov
jb
mov
add
pushf
or
fs
pop
cli
and
out
clc
and
inc
out
lret
ljmp
insl
cmp
jne
push
and
add
into
negb
shlb
andl
mov
pop
sub
and
push
mul
cmp
push
call
cmp
std
sarb
fbld
add
rolb
movsl
dec
lret
cmc
mov
jns
pop
and
cmpb
aaa
addl
adc
inc
testb
je
inc
cmp
sar
daa
jg
fisubs
pusha
adcb
jmp
icebp
repz
mov
mov
cld
xchg
pop
push
sbb
int3
bound
out
test
dec
adc
mov
in
sbb
inc
adc
adc
call
sahf
push
and
repz
push
nop
sub
sbb
mov
aad
stos
xor
outsb
jmp
inc
inc
xor
mov
std
xchg
out
lods
jecxz
addl
push
xchg
pop
and
and
ja
pushf
ficoms
adc
ljmp
push
push
push
sbb
gs
mov
mov
cmp
cli
add
add
inc
cmp
je
lcall
or
inc
lcall
jl
lods
bound
or
lods
ss
add
jne
cmp
icebp
mov
lea
inc
sti
test
pusha
push
sbb
sub
ret
push
push
or
inc
pop
into
and
push
mov
mov
js
and
test
bound
movb
inc
fmull
cmp
or
test
gs
cmp
pop
inc
pop
jge
mov
clc
jb
lahf
call
push
mov
push
cwtl
inc
adcb
push
push
or
mov
hlt
pop
push
push
cmp
sbb
cmp
pop
mov
test
sub
cmp
sbb
mov
dec
pop
cmp
dec
or
push
fs
repnz
inc
xor
dec
push
push
adc
inc
cwtl
mov
cwtl
leave
dec
loopne
or
pop
add
or
cmp
or
jl
lahf
pop
mov
sti
sbb
mov
out
inc
outsb
xchg
inc
das
mov
jp
mov
ds
inc
jp
or
mov
sub
sub
jle
dec
push
push
cmp
bound
inc
loop
roll
mov
aad
outsb
imul
sbb
xchg
xor
add
mov
cmp
jne
add
inc
dec
mov
enter
sub
popf
xchg
mov
xchg
mov
dec
cmp
mov
pop
mov
lods
jge
enter
cmp
dec
mov
je
push
int
cs
je
add
add
jmp
sbb
clc
arpl
adc
sub
push
test
mov
push
xor
daa
out
mov
mov
jge
insb
inc
push
jne
inc
icebp
push
adc
cmc
xor
and
push
fcomp
jmp
sub
xchg
in
add
push
gs
outsl
push
aam
call
sbb
mov
cmp
movsb
adc
adc
fists
mov
fsubrs
push
inc
mov
leave
jl
push
bound
xchg
je
or
je
add
imul
je
daa
frstor
sub
in
xchg
push
lock
dec
loopne
mov
in
cmp
repz
outsl
mov
cwtl
adc
mov
add
scas
and
add
add
movl
cmp
sub
ucomiss
sbb
lock
popf
fs
adc
pop
pop
addb
push
xor
or
in
push
cmp
imul
ret
mov
pop
xchg
jno
and
test
sub
dec
mov
popa
xchg
xlat
cltd
xchg
stos
or
shlb
pop
jecxz
movsl
adc
sbb
add
adc
sbb
es
lcall
mov
and
bound
xchg
mov
pusha
movsb
mov
clc
push
dec
cltd
xlat
sub
xchg
add
push
push
xor
push
mov
push
xor
xchg
adc
ret
test
or
mov
or
fsubr
pop
sarb
adc
repz
xor
xor
div
sbbb
mov
movb
adc
mov
mov
adc
xor
xchg
cmc
adc
insl
push
add
fsubrs
inc
call
jmp
xchg
inc
sub
mov
jo
or
mov
and
pushf
mov
xor
sub
ret
and
cmp
cmp
ret
movsb
pop
nop
cmp
adc
pop
cmp
or
scas
jle
pusha
icebp
mov
adc
je
mov
adc
repnz
cmp
in
dec
sbbb
adc
bound
aaa
fcmovne
subl
push
shlb
iret
cmp
push
or
pop
scas
es
mov
adc
stos
mov
push
sbb
dec
pop
scas
jo
push
mov
in
sub
sarb
and
cli
rcll
shlb
cmpsb
push
and
bound
cmp
inc
je
sub
cvttps2pi
add
sub
mov
pop
adc
or
inc
pop
add
sbb
xchg
cmc
repz
push
xchg
add
xchg
leave
sbb
xchg
imul
sub
pop
jle
inc
dec
sub
les
xor
mov
imul
inc
repz
inc
add
push
or
je
jg
sbb
aam
inc
adc
mov
xchg
lret
fs
xor
cmc
xor
lea
inc
add
or
dec
repz
gs
push
int
sub
clc
add
mov
test
mov
xchg
adc
xor
inc
fcmovnb
addl
push
loopne
es
or
and
imul
jno
or
imul
imul
xor
mov
mov
xchg
sahf
mov
es
insb
push
xchg
pop
or
xorb
notb
sub
push
fistps
xchg
mov
pop
enter
std
adc
xorb
xchg
adc
or
std
in
cmpsl
add
fdiv
jg
or
lcall
xor
inc
in
adc
inc
sbb
int
fiadds
sbb
scas
lds
scas
mov
and
add
lock
dec
sbb
mov
mov
stos
rolb
jge
out
cmp
insb
mov
das
loop
aad
ja
fsubrs
or
adc
add
or
cli
pop
cmp
adc
repz
inc
rcl
hlt
or
sub
lods
aam
in
and
ljmp
shlb
ja
or
imul
dec
aam
mov
loope
xor
divb
out
jbe
push
in
inc
fiaddl
jmp
ds
lea
sub
add
mov
push
inc
mov
test
mov
arpl
test
inc
or
pop
bound
cs
dec
sub
andl
or
loopne
fmul
mov
jmp
inc
adc
pop
xchg
roll
out
lea
inc
inc
sub
pop
jle
clc
loopne
mov
sbbl
fildll
stc
test
in
imul
pop
and
popa
out
dec
ret
dec
and
lds
and
and
daa
mov
in
dec
leave
jl
add
cli
or
outsl
adc
push
pop
nop
adc
in
das
loop
jns
add
lea
jle
dec
js
jle
call
cs
inc
mov
or
ss
xchg
sub
test
or
mov
jmp
xchg
test
adc
and
xchg
in
and
xlat
stos
arpl
ret
incb
fbld
mov
jl
rcll
inc
xor
push
mov
test
mov
sub
les
les
inc
je
fsubrs
sub
test
or
sub
adc
imul
push
inc
jo
insl
xor
push
push
push
shrl
nop
jnp
push
cmpsb
xor
cli
leave
sbb
test
mov
adc
push
es
bound
sub
adc
shr
adc
pop
stos
lret
call
xchg
aad
stos
jle
and
dec
mov
cmp
dec
mov
popa
or
je
aas
jmp
pop
and
cld
sbb
adc
or
push
or
jmp
cmpsb
jnp
insl
jbe
enter
adc
sub
sbb
pop
cmp
mov
lcall
jecxz
out
dec
sti
lret
cmpsb
pop
das
shll
adc
jo
lret
mov
das
and
add
es
cld
sbb
sti
add
pop
sahf
ret
lock
xchg
sbb
or
or
mov
add
pushf
cmpsl
jmp
push
std
jg
lcall
fdivrs
inc
mov
xor
mov
inc
sbb
cmp
int3
push
call
lcall
in
js
inc
pcmpeqb
mov
inc
jp
jge
loopne
push
pop
fimull
enter
cmpsl
add
adc
push
push
jle
outsl
lds
inc
fcmovu
pop
mov
adc
xor
or
adc
bound
dec
xor
loopne
addr16
fdivl
adc
adc
adc
and
jno
or
mov
xchg
mov
shlb
adc
enter
mov
mov
lock
or
pop
std
int3
test
cmp
mov
lahf
sbb
insl
pop
cs
dec
jmp
mov
mov
roll
jg
xchg
pop
shrl
cwtl
aas
ja
or
ror
cmp
sub
ljmp
xor
pop
aam
call
mov
inc
dec
je
jg
mov
addl
in
loopne
add
or
mov
mov
push
adcb
outsl
insb
jecxz
mov
dec
adc
fs
sub
aam
cmp
bound
adc
jp
subl
xor
add
nop
sbb
inc
sub
or
rolb
adc
jg
xor
cmp
adc
xor
cmp
sbb
insb
cmp
mov
add
mov
nop
popa
test
fdivr
fistl
dec
dec
mov
mov
movsb
or
inc
add
push
pop
stc
lcall
adc
sbb
jne
or
hlt
andl
cmp
dec
inc
in
dec
cmpsb
add
call
xor
inc
repz
dec
jl
adc
int3
sbb
xor
push
mov
xor
dec
inc
jb
lahf
repnz
pop
daa
cld
in
sub
dec
cltd
daa
addr16
cwtl
gs
or
add
or
int
adc
and
add
call
mov
inc
adc
nop
mov
daa
dec
push
imulb
mov
and
outsl
mov
pop
sub
or
roll
push
dec
out
xor
aas
mov
pop
gs
scas
cwtl
mov
lods
and
sbb
bound
dec
stc
or
and
sbb
and
adc
or
mov
xchg
inc
hlt
int3
fiadds
mov
iret
xchg
sub
enter
ja
mov
dec
jb
cmc
xchg
mull
popa
js
fs
xorl
test
sub
xor
sbb
sbb
lods
nop
dec
inc
aad
inc
inc
adc
inc
or
or
fmul
sub
adc
addb
mov
stos
jl
dec
popa
xor
imul
inc
stc
xchg
or
js
sub
fimuls
adc
mov
nop
ja
inc
xchg
or
lods
shlb
inc
int3
imul
push
insb
adc
jl
rclb
or
int
ret
adc
and
and
data16
aam
and
clc
pop
rcll
sub
sbb
and
sbb
or
dec
cmp
dec
add
in
inc
dec
pop
and
or
xor
gs
pop
adc
and
push
xchg
jb
nop
inc
dec
push
pop
sbb
and
push
inc
mov
push
push
loopne
dec
js
push
insl
cmp
or
leave
loopne
enter
or
mov
sbb
in
ret
adc
fmuls
fs
call
and
outsb
or
push
stos
popf
sub
or
nop
sbb
testl
outsl
addr16
push
insl
movsb
sub
and
adc
mov
rep
je
and
push
prefetchw
push
push
xor
sbb
inc
imul
add
sbb
out
dec
mov
das
mov
dec
xor
push
insb
rcll
mov
or
add
add
loope
int
cmp
cmpsb
add
mov
insb
pop
leave
loopne
add
cmpsb
hlt
xchg
jl
rcr
mov
or
adc
out
inc
dec
inc
push
or
add
or
inc
pop
jns
pop
inc
push
jo
mov
loop
mov
arpl
jae
sub
xor
jns
or
push
cmpsb
sbb
sbb
lea
push
push
or
insb
mov
push
lds
add
push
add
or
or
cmp
scas
or
jbe
imul
add
push
or
or
fwait
pop
call
sahf
imul
mov
adc
test
and
add
push
mov
xor
pop
bound
add
or
pop
xor
xorb
test
push
pop
mov
rorb
movsl
popa
push
sbb
xchg
push
roll
pusha
xchg
adc
or
push
xor
mov
jl
inc
test
push
gs
mov
mov
popa
cmovs
or
adc
push
test
sbb
inc
or
mov
out
icebp
add
dec
popa
movd
rcll
and
xor
lret
dec
jl
or
cmpsb
add
or
out
xor
inc
add
add
addr16
push
push
in
dec
jns
add
dec
bound
pop
cmp
faddl
cld
mov
cmp
inc
push
pop
jo
insl
jecxz
pop
add
scas
jno
sahf
inc
out
sub
xchg
daa
sub
mov
add
add
pop
in
adc
je
dec
lods
mov
aad
adc
or
add
or
push
xchg
and
sub
in
and
pop
push
xchg
sbb
mov
sbb
and
or
or
movsb
and
inc
pop
adc
and
adc
inc
adc
and
sub
in
and
sub
cmp
in
nop
mov
inc
repnz
ds
push
inc
iret
int3
jo
or
outsl
test
mov
inc
cld
adc
push
sbb
mov
or
add
xchg
fs
adc
call
sbb
sbb
push
mov
pop
xchg
and
sar
rcll
sbb
and
outsb
sub
push
inc
mov
ret
push
push
pop
mov
add
aas
push
aas
adc
aas
and
adc
sub
cmp
push
mov
mov
in
mov
iret
mov
std
ds
aas
scas
aas
std
aas
lods
aas
lods
aas
sarl
sarb
stc
aas
in
int
int3
aas
stos
aas
leave
adc
ret
rolb
adc
inc
push
nop
or
and
xorb
lods
mov
nop
mov
fadds
or
cmpl
pusha
dec
push
push
pop
sbb
mov
pop
mov
hlt
inc
sub
fcompl
adc
clc
xor
xor
xor
adc
sub
or
mov
xchg
adc
push
nop
sub
inc
aas
sbb
sbb
and
add
xor
rcrl
xchg
xor
les
mov
or
adc
test
or
or
pop
cmp
and
push
insb
loopne
adc
pushf
jmp
loope
add
jmp
js
data16
xor
scas
clc
add
cmp
or
xchg
or
push
cmc
les
loopne
adc
inc
mov
adc
xor
and
or
jmp
or
ret
mov
inc
les
dec
rorl
add
fldenv
xchg
mov
xchg
inc
push
jo
popa
inc
mov
mov
dec
loope
mov
jge
adc
jg
jne
loopne
into
call
mov
adc
jmp
inc
outsb
arpl
jae
jno
mov
or
stos
cmp
loop
jae
lcall
xchg
rol
sbb
push
and
xchg
pop
mov
inc
aam
xlat
and
push
adc
sahf
sbb
xlat
adc
xchg
and
leave
dec
push
xor
cmp
hlt
popf
sub
dec
inc
jnp
dec
pop
push
jns
or
test
mov
mov
sbb
das
jbe
inc
mov
mov
jo
or
sub
les
and
sbb
pusha
stos
adc
test
daa
mov
pusha
jl
rcr
daa
xchg
outsl
dec
xchg
xchg
jo
push
xchg
scas
popf
xchg
cmp
xchg
mov
xchg
inc
call
fstpl
ret
push
in
push
enter
adc
mov
psllw
test
mov
pushf
mov
add
fmuls
cld
or
sub
mov
inc
and
push
and
push
push
jae
push
inc
outsl
arpl
clc
in
cmpsl
dec
dec
pop
xor
inc
pop
lcall
adc
and
dec
gs
movsl
push
fwait
mov
and
inc
mov
addr16
xor
cmp
pusha
cmp
dec
and
pop
inc
imul
mov
fldt
es
push
push
and
sub
xchg
mov
daa
ljmp
loopne
inc
outsl
mov
xor
sub
pop
pop
dec
mov
hlt
xchg
cmp
push
cmc
mov
frstor
inc
dec
xchg
nop
mov
repz
xchg
insb
int
shlb
jb
xor
jne
or
dec
loopne
mov
gs
adc
sub
mov
dec
inc
sub
sub
repz
push
push
cmc
jbe
mov
fmuls
test
push
xor
add
xchg
scas
repnz
jmp
insb
xor
inc
mov
pop
clc
cltd
pusha
dec
cmp
jg
push
lea
loop
lcall
into
mov
or
and
jo
outsb
insb
or
mov
add
push
imul
jl
sahf
push
inc
fwait
ds
xor
xchg
loop
xor
dec
xor
pop
outsb
xor
add
sarb
rclb
stos
xor
pushf
loopw
test
repz
mov
clc
imul
es
enter
test
inc
inc
std
aaa
in
dec
dec
pop
or
cmp
movsl
gs
cmp
cs
mov
jo
xchg
rolb
mov
jo
cmp
mov
inc
ljmp
xor
mov
mov
cmp
into
jmp
add
pop
xchg
pop
repnz
dec
fists
xchg
add
xchg
je
cmp
dec
outsb
es
sub
mov
loope
mov
and
dec
loopne
push
xchg
xchg
dec
or
add
je
pop
ds
in
mov
insl
push
aas
and
out
pop
inc
cwtl
mov
stc
aaa
gs
xchg
enter
out
sbbl
and
and
xor
mov
push
imul
sbbl
mov
inc
or
cmpsb
pop
push
movsl
jl
inc
xchg
xor
enter
inc
and
dec
push
gs
sahf
outsl
jns
and
cs
hlt
xchg
inc
or
cmp
inc
xorl
mov
arpl
mov
dec
leave
jbe
daa
inc
pushf
dec
call
lret
dec
cmc
mov
addr16
dec
test
add
je
lods
and
dec
fcomps
outsl
dec
movsb
fisttps
inc
jb
jmp
dec
shlb
dec
adc
push
shrb
outsl
xchg
pop
adc
sbb
push
push
xchg
xchg
fmuls
test
pop
repz
stos
and
fmul
rorb
xchg
dec
mov
ja
insb
dec
loopne
xchg
repz
orb
loope
jae
test
pop
and
push
add
xor
inc
push
inc
aad
sub
stc
push
bound
or
jne
xchg
xor
mov
repnz
push
into
or
dec
and
jmp
or
cmp
push
orb
push
push
enter
inc
lret
push
mov
jb
pushf
add
dec
pop
and
push
add
push
mov
adc
daa
push
test
and
and
ret
pop
inc
or
jns
pushf
mov
pushf
pop
adc
dec
popf
roll
enter
push
pop
adc
cwtl
pop
dec
and
pop
and
push
dec
sub
and
pop
sub
push
pusha
mov
and
mov
enter
sbb
je
xchg
aaa
mov
or
aad
or
mov
inc
je
jbe
sbb
mov
bound
sub
or
and
arpl
fs
ucomiss
and
cmc
pushf
dec
js
scas
adc
dec
lds
cld
or
imul
sahf
rcl
and
or
fcoms
pop
xchg
push
das
daa
inc
aam
clc
sbb
test
movsb
dec
push
mov
pusha
inc
jge
jo
mov
in
or
gs
cmp
inc
cmp
dec
push
xor
test
daa
mov
bswap
jmp
mov
pop
mov
mov
push
or
ljmp
or
cmpsl
sub
repz
adc
mov
or
pop
cmp
push
dec
stc
and
mov
or
sahf
xor
sub
test
ja
test
jne
push
xchg
jmp
inc
dec
adc
mov
cmpsl
inc
jo
ret
fs
push
nop
mov
pop
adc
sub
mov
dec
sub
mov
je
cmp
lahf
daa
jg
pop
clc
les
jne
sub
outsl
add
or
sbb
lock
out
movsb
and
loopne
adc
bnd
fistl
xor
loop
push
rclb
ds
add
xchg
hlt
loopne
or
sbb
dec
ss
push
or
sub
test
adc
adc
add
or
add
enter
mov
hlt
test
xchg
daa
xchg
clc
aaa
cmp
xor
test
cmpsl
sti
push
add
jo
mov
push
into
add
inc
inc
cld
jge
push
pop
inc
jg
jne
xchg
jg
push
xor
push
xor
outsb
xchg
adc
jge
ljmp
dec
xchg
ficoms
mov
decl
inc
loope
xor
xchg
pop
xor
aam
fsts
dec
cmp
dec
pop
outsl
cmpsl
pop
xor
test
jecxz
test
jne
sbb
xchg
pop
mov
nop
and
push
test
in
mov
and
sti
sbb
sbb
push
push
mov
fwait
pusha
mov
imul
adc
fmulp
cmp
stc
arpl
rorb
enter
mov
subb
shufps
ljmp
pop
cwtl
sub
xor
add
les
mov
cmpsl
jp
mov
pop
pop
xchg
pop
mov
call
lahf
pop
mov
sub
sub
jb
mov
sbb
or
mov
das
cmp
das
push
fisubl
pop
and
mov
fcomps
push
xor
push
loopne
adc
push
xchg
cmp
data16
leave
pop
and
jecxz
inc
or
loopne
sub
cwtl
test
or
add
jecxz
add
or
mov
xchg
adc
movsb
pop
adc
test
pop
add
sti
mov
inc
push
and
push
and
add
adc
fistl
cmp
mov
notb
adc
adcl
or
and
adc
xor
mov
les
inc
push
inc
jne
mov
fbld
inc
cli
pop
comiss
push
movsl
icebp
rclb
incl
movsb
or
jl
in
popf
test
adc
test
add
fisttps
mov
test
mov
push
xchg
clc
sub
ljmp
cmpsb
xchg
out
enter
xor
rclb
clc
das
or
adc
pusha
xchg
cmc
push
stos
jge
xchg
cmc
mov
inc
pop
mov
scas
lret
rorb
les
xor
jecxz
push
ja
mov
sbb
push
ret
cmpsl
loop
or
pop
shr
fidivl
and
mov
and
adc
les
adc
incl
add
inc
dec
aad
sti
inc
mov
jle
and
repnz
sbb
ret
and
adc
inc
or
dec
mul
leave
add
push
mov
cli
lret
adc
cmpb
lock
leave
cltd
and
add
xchg
cs
dec
or
jmp
or
adc
lock
pop
adc
out
cmp
daa
add
and
jmp
cs
add
mov
and
adc
cmp
jne
ja
lea
cmp
push
in
dec
mov
dec
stc
xor
sub
cmc
jo
dec
add
insb
dec
adc
jb
add
and
inc
lods
mov
lea
mov
xchg
mov
push
pop
mov
sub
test
aad
inc
and
xor
push
adc
sub
cmp
cmpb
sub
push
pop
sub
lock
jmp
adc
scas
lock
leave
mov
inc
push
addl
cld
xlat
lcall
pop
jno
inc
fdivrs
sbb
jne
pop
and
sbb
and
mov
movsl
das
std
push
xchg
jb
xchg
aam
jb
dec
mov
add
or
pop
push
sbb
dec
fsubr
jp
call
outsl
mov
pusha
test
sub
push
arpl
pop
push
sub
cmp
push
add
pop
hlt
neg
jmp
dec
xor
and
jl
ret
sti
sub
in
cli
mov
dec
test
ret
cld
add
xchg
cld
push
jp
add
push
mov
daa
andb
shrl
jmp
jg
js
test
inc
mov
jne
xchg
fmul
into
add
inc
adc
pushf
jne
outsl
lods
in
movl
into
inc
hlt
push
mov
inc
pop
dec
pushl
gs
sarb
mov
push
mov
mov
mov
stc
jo
js
push
inc
or
test
je
je
push
lea
rorl
sbb
push
xchg
jmp
addr16
xchg
fadd
out
rol
inc
sub
dec
aam
pop
loopne
icebp
sub
xor
and
or
cmpsb
dec
cmp
repz
sbb
dec
or
int3
pop
inc
add
lcall
call
mov
push
sub
pop
push
push
and
shlb
roll
mov
pop
push
je
pop
decl
pop
sub
dec
adc
sub
cmpsl
mov
push
aaa
adc
add
and
and
pop
mov
push
aad
dec
inc
fwait
gs
ja
mov
pop
inc
xchg
and
xchg
jg
arpl
lock
push
pop
add
shrb
push
out
cmpsb
in
pop
sbb
xchg
push
ret
lcall
mov
adc
add
push
dec
xchg
xchg
xchg
dec
inc
imul
nop
lahf
cmpsb
mov
sbb
xchg
pop
lock
sub
push
daa
mov
push
mov
jmp
stos
daa
rclb
adc
push
int3
mov
shrl
or
in
xor
adc
adc
mov
cmp
cmp
add
mov
mov
test
and
mov
inc
movb
jae
or
sub
orl
adc
sub
or
add
push
sub
adc
or
or
jg
cmpb
js
lahf
out
rcr
or
hlt
cmp
pop
insl
out
inc
dec
jle
loopne
jmp
test
jge
shll
jmp
push
dec
mov
push
je
pop
mov
adc
push
push
outsl
jg,pn
mov
in
enter
shrl
inc
pop
or
je
pop
jae
adc
test
or
mov
rcll
scas
repnz
aam
sbb
test
push
movsl
push
mov
push
test
inc
xor
call
xor
inc
inc
cmp
sbb
xor
or
dec
adc
sarb
scas
sbb
jp
movb
add
mov
adcb
xchg
push
sbb
pop
stos
gs
sbbb
pop
sti
add
incl
outsl
xor
mov
sbb
mov
in
and
sub
mov
mov
ljmp
cmc
sbb
rcl
sub
mov
dec
lock
push
xchg
mov
pop
lods
insb
dec
sub
lea
pop
adc
dec
sub
and
adc
and
fcoml
rcrl
fstl
lret
cmp
sbb
add
dec
cmp
and
loop
xlat
cmovp
out
inc
adc
or
ljmp
cltd
inc
and
inc
and
repnz
push
negb
xor
inc
mov
mov
adc
pusha
data16
addr16
aad
push
dec
push
fidivs
and
les
clts
mov
int3
mov
sbb
xchg
fnstcw
dec
lret
xor
or
call
pushf
or
lods
or
or
lods
enter
xor
pop
mov
inc
fsubrl
js
or
fisubl
add
jg
sub
scas
xor
xor
xor
pop
xor
cld
scas
clc
js
sub
lahf
test
add
popf
fcompl
and
shlb
inc
std
test
hlt
or
loopne
mov
in
lret
xchg
jne
bound
loopne
push
push
popf
jge
xor
or
cwtl
movsb
clc
mov
adc
xor
fnstenv
testl
sub
shlb
inc
popf
jge
dec
clc
mov
dec
mov
dec
xor
js
sub
pop
ret
test
popf
jge
pop
lret
test
mov
lds
lock
xchg
hlt
cli
cli
std
jns
roll
jg
mov
mov
or
push
mov
xor
stos
or
or
mov
bound
stc
push
cmp
dec
sbb
dec
mov
adc
cmp
sbb
adc
test
rorb
lret
sbb
js
orb
pause
jno
repz
inc
add
js
cli
push
xor
dec
mov
imul
pop
or
sub
push
mov
cmovs
out
repz
push
das
adc
mov
mov
and
call
cld
inc
roll
mov
pop
inc
sbb
repz
or
add
xchg
pop
test
sbb
mov
mov
push
mov
into
or
sub
push
push
aaa
add
jns
out
sahf
shll
sub
or
lds
cmpsb
push
xor
out
sbb
add
mov
nop
sub
sahf
mov
ja
dec
pop
or
adc
adc
ss
inc
and
test
clc
jae
test
pop
xor
jge
dec
mov
ror
imul
adcb
or
sahf
stos
inc
and
outsl
push
add
push
jg
out
push
pop
test
enter
mov
ja
or
pop
ljmp
or
cmpsl
jge
int3
mov
adcb
pop
dec
sub
adc
pop
pop
mov
pushf
sub
xchg
inc
pop
mov
push
mov
in
cmpsl
xchg
dec
push
xchg
push
ljmp
ret
adc
aad
jmp
test
adc
or
adc
pop
mov
jne
inc
pop
dec
pop
mov
cmp
or
rorl
or
movsb
hlt
dec
inc
or
les
popf
push
mov
xchg
sbb
les
call
xor
aam
es
sbb
imull
or
mov
decb
add
xchg
jle
lahf
pop
sahf
push
dec
hlt
clc
sub
and
out
addr16
out
xor
push
or
and
fmull
dec
mov
adc
cwtl
xor
push
add
mov
mov
je
xchg
in
ficoml
adcl
cmpb
or
inc
push
inc
adc
mov
cmp
xlat
pop
sbb
pop
push
js
lret
and
stos
call
pushf
pop
incb
andb
cli
test
or
xchg
xor
adc
lods
push
mov
aas
inc
add
adc
inc
pop
ret
mov
mov
xchg
jne
adc
ds
xchg
roll
gs
jb
lea
jno
int
rcr
or
xchg
cmpb
adc
ss
insl
dec
add
sbb
xchg
in
and
out
sahf
inc
in
aas
cmp
in
mov
push
test
ds
xor
or
sbbl
es
mov
sub
sub
mov
cmc
inc
push
and
loope
sbb
inc
adc
icebp
insb
icebp
lock
nop
and
dec
and
adc
mov
inc
mov
xchg
sbb
xchg
fs
inc
push
dec
adc
addl
xor
or
mov
add
adc
push
stos
out
mov
shlb
andl
sub
fs
inc
xchg
loop
dec
sti
xchg
cmc
pop
dec
sub
pop
insb
sub
push
mov
or
ret
pop
adc
jno
xorb
adc
mov
lret
jmp
sub
pop
and
and
add
loope
mov
je
stos
sti
adc
push
adc
syscall
push
clc
sub
lods
sub
pop
inc
and
add
cmpl
push
vpaddusw
lds
imul
add
fcoms
adc
bnd
or
test
pop
pop
dec
hlt
mov
mov
dec
jno
test
xor
and
outsl
jb
push
cmp
lret
cmp
and
inc
inc
lds
les
addr16
movsl
les
ds
or
cs
and
ljmp
push
mov
mov
push
sbb
adc
pusha
fs
arpl
fldenv
mov
pop
add
testb
or
stc
sarb
sbb
lds
xor
pop
imul
mov
in
or
insb
andb
frstor
push
push
mov
push
negb
test
sub
fidivrl
sub
scas
aaa
ja
push
or
sub
dec
out
lahf
test
mov
test
ds
outsb
dec
sbb
cmp
divb
and
pop
lock
imulb
xchg
jl
or
testw
cmp
in
jae
and
pop
add
insb
cmp
jge
in
xchg
pop
pop
in
lock
jns
dec
xlat
stc
insl
sbb
sbb
insb
push
and
fisttpl
mov
scas
jecxz
ja
adc
dec
xor
sti
pop
inc
je
and
and
lret
je
xor
adc
dec
sub
das
mov
sahf
push
cmpsl
imul
xchg
movntps
mov
pop
or
add
fucomp
loop
dec
call
pushf
pop
and
xchg
mov
icebp
jecxz
dec
pushf
or
and
loop
push
cmpsl
or
mov
sbb
das
or
xor
and
cs
int
and
sub
ror
dec
push
int3
adc
adc
jne
movsb
xchg
mov
popa
dec
push
mov
jge
mov
pop
in
adc
inc
jmp
mov
out
adc
push
mov
orb
jle
adc
pop
or
dec
push
and
inc
push
mov
out
adc
pop
out
jb
or
test
sbb
and
outsb
cltd
mov
cld
lahf
dec
subb
xlat
sub
jns
sub
mov
inc
sub
test
dec
out
cltd
lock
fwait
cs
shrb
xor
sbb
and
sbb
sbb
aam
aad
or
mov
scas
mov
mov
adc
dec
mov
xorl
gs
movsl
xchg
enter
push
adc
nop
pop
push
imul
add
xchg
push
cmp
sub
adc
cmpb
bound
out
aas
cmpb
ss
add
mov
cmp
out
mov
nop
mov
js
cmp
sub
pop
add
push
enter
rolb
notb
ret
stc
jae
dec
mov
cmp
push
or
test
andl
gs
add
lds
adcl
out
insb
pop
std
dec
and
and
xchg
loope
lcall
and
mov
adc
movsl
in
nop
xchg
adc
enter
in
out
adc
xor
outsb
les
test
mov
rolb
dec
sub
add
mov
dec
cmp
rclb
push
test
jmp
mov
adc
and
pop
cmp
fdivrp
mov
add
and
jmp
inc
mov
sbb
and
inc
jne
sub
adc
jge
aaa
fs
cld
mov
jmp
and
adc
leave
fisttpll
mov
push
jns
mov
shl
nop
mov
xchg
jg
jmp
push
mov
jge
inc
movsb
orb
test
pop
inc
or
sbb
or
bound
dec
pushf
sarb
aaa
cmc
dec
jge
mov
mov
sbb
test
add
dec
enter
or
xchg
jg
push
jbe
inc
cmp
je
insb
fmulp
cwtl
fst
jne
adc
fisubrs
testb
je
mov
mov
loopne
or
push
cmp
jp
mov
mov
mov
mov
nop
or
xchg
inc
push
orb
push
cmpsb
or
stos
mov
das
or
pop
push
scas
aaa
sub
nop
test
stos
mov
xchg
ror
pop
and
dec
dec
and
mov
mov
std
dec
lods
mov
and
xchg
pusha
inc
lahf
jno
xor
dec
scas
dec
dec
cli
mov
dec
lock
pop
popf
fstl
xchg
push
pushf
popa
adc
pop
add
inc
mov
xorl
dec
test
ret
add
add
inc
jg
je
ret
push
xchg
jb
or
and
push
dec
push
imul
or
nop
mov
jg
adc
cmp
adc
cmp
xchg
test
stos
pop
sbb
push
or
leave
jne
and
cmp
sub
ffreep
mov
inc
and
inc
mov
adc
dec
lods
xchg
cmc
sub
mov
movsb
je
mov
ret
and
mov
daa
and
pop
or
shlb
mov
lock
adc
aaa
add
orl
jno
sub
sub
jg
insb
mov
sub
es
popf
jo
aam
test
add
dec
adc
ds
or
adcb
inc
aad
mov
pop
add
rolb
or
inc
pop
in
mov
aas
rcrl
hlt
ret
sub
xor
rcl
cmp
ds
cmpsl
je
flds
cltd
stos
rolb
jne
hlt
dec
in
jmp
push
lahf
jbe
push
dec
jae
sub
sti
je
adc
adc
push
clc
clc
arpl
loope
stos
jl
lock
frstor
mov
dec
pop
pop
and
lock
adc
inc
sbb
lock
adc
test
lea
cmp
mov
or
sbb
jge
jecxz
mov
lock
cmp
cmp
jne
mov
mov
jb
hlt
xlat
push
sbb
inc
xor
or
xchg
mov
adc
sub
push
or
add
adc
xchg
mov
pop
je
shlb
cmp
mov
mul
pop
add
lods
je
push
sub
nop
jb
jne
add
jg
outsl
loop
out
mov
mov
je
add
jae
scas
adc
es
imul
pop
sbb
popf
pop
xchg
movsl
add
xchg
cmpsl
or
inc
in
in
xor
scas
js
push
dec
xchg
scas
popf
shl
push
and
sahf
iret
inc
ds
push
test
je
push
movsb
sub
push
add
mov
shrl
andl
test
jl
mov
sqrtps
push
and
nop
cmc
mov
cs
xor
cmpsl
in
into
xchg
jge
cmp
cli
mov
xchg
aas
arpl
leave
cmp
inc
add
or
or
movsl
les
mov
push
movsb
jge
mov
aas
insb
mov
nop
iret
or
mov
neg
cwtl
std
aad
cmp
mov
test
dec
sub
ror
pusha
sub
lea
jbe
in
sub
and
jb
icebp
sub
cltd
xchg
cld
mov
push
data16
inc
push
sub
cmpl
adc
push
push
push
lret
push
push
pop
cld
and
pop
mov
and
xchg
outsl
xchg
je
dec
adc
dec
jne
cmpb
mov
in
lds
push
and
or
adc
sti
mov
adcb
sahf
cs
ffreep
rolb
pop
gs
cli
lcall
daa
dec
jg
lret
pop
int3
imul
nop
inc
test
mov
mov
inc
sbb
cmpb
loope
lods
popa
jb
daa
jne
inc
std
popf
lock
les
inc
pop
xchg
adc
or
insb
push
mov
scas
imulb
jbe
push
jle
inc
je
and
mov
pop
add
xchg
push
sub
mov
das
dec
out
int3
sub
inc
cmp
or
jle
int3
lcall
mov
mov
js
xchg
fists
sbb
jle
or
scas
sbb
lcall
movsb
and
and
and
mov
jl
test
adc
lock
test
cmpsl
or
inc
jns
test
push
push
and
sbb
iret
fnsave
imul
push
xor
mov
cs
sbb
sub
inc
jmp
xchg
cmpsl
movsl
cli
bound
inc
xor
and
mov
lock
adc
sub
pop
push
or
or
push
lea
test
mov
hlt
push
gs
mov
dec
out
inc
ja
lods
lea
inc
adc
jo
js
les
mov
xchg
cmpsl
test
and
mov
xchg
pop
cs
push
push
xchg
or
adcl
jl
test
dec
sub
cmp
in
fidivrs
pop
orb
cmp
jg
mov
pop
test
xchg
mov
mov
jns
cmpsb
mov
mov
std
inc
enter
jo
das
inc
je
xlat
leave
mov
mov
xchg
or
pop
and
mov
xor
scas
mov
movsl
add
adc
shlb
adcb
sbb
adc
adc
cmpb
mov
or
mov
xchg
xchg
es
shr
and
pushf
in
dec
dec
sub
ret
push
sub
mov
dec
scas
adc
das
sub
ficoml
cwtl
pusha
push
fs
adc
inc
imul
outsl
popa
negl
cmp
mov
ret
ljmp
inc
lret
push
scas
pop
push
mov
inc
cmp
jo
add
cld
outsb
out
sub
loop
je
cltd
outsl
hlt
add
cs
les
jge
pusha
inc
decl
pop
jne
and
inc
push
push
nop
inc
mov
or
mov
xchg
cmc
flds
and
inc
mov
scas
je
push
aam
mov
test
call
push
and
cmpsb
ja
push
push
sub
sub
sub
cmpsb
aas
mov
push
fnstenv
in
out
clc
mov
cwtl
mov
aas
mov
in
sub
sahf
xor
inc
xchg
jle
xor
in
iret
xchg
icebp
mov
mov
inc
mov
pop
scas
das
lcall
mov
imul
cmp
add
adc
or
push
pop
cmp
fsubl
dec
nop
xchg
xchg
call
loop
and
cmp
das
xchg
cmc
cmp
mov
jmp
xchg
ret
mov
das
fsubr
fisttpll
push
and
ljmp
push
jo
mov
ss
fcoms
out
sbb
mov
mov
fdivl
jo
jne
xlat
sub
nop
cmpl
sbb
mov
test
mov
xchg
mov
mov
pop
jl
sub
mov
and
cmpsb
and
and
inc
adcl
popf
xchg
push
gs
les
jl
add
adc
jp
xor
and
adc
movsl
xchg
adc
push
ja
adc
or
cmp
cmp
jne
mov
mov
jo
lock
sub
dec
cmp
sbb
jo
nop
rolb
dec
test
push
test
inc
mov
movsl
add
xor
pop
jmp
cmp
cmp
jne
and
or
aas
dec
out
int3
pop
jo
mov
inc
or
cmpsb
js
icebp
pop
inc
inc
cmp
xor
icebp
jne
aas
adc
sub
imul
jp
sub
rcrl
sub
ss
pop
mov
inc
mov
mov
mov
aad
cli
pop
aam
ljmp
xchg
test
cmp
jle
and
add
daa
xor
loop
push
mov
lret
cmpsl
lds
jb
sub
sub
sub
add
dec
orb
pop
sbb
rorb
xchg
push
lret
mov
push
dec
pop
test
std
icebp
adc
cs
sub
cwtl
xor
inc
stc
cmpsl
cmp
bound
test
sub
inc
mov
mov
lock
cmpl
sbb
mov
adc
jb
mov
mov
popaw
add
cld
mov
mov
adc
push
or
dec
mov
add
push
mov
push
data16
orb
adc
mov
sub
mov
mov
xchg
xor
jp
std
pop
in
mov
add
cmp
add
adc
or
or
mov
or
jg
movsl
lods
adc
mov
aad
pop
bound
cmp
jns
xadd
inc
jo
les
sbb
fcmovnb
daa
pop
inc
xchg
adc
sahf
sbb
jmp
dec
in
xor
imul
add
xchg
adc
and
loop
sub
hlt
or
sub
mov
jnp
and
sub
add
pushf
mov
fwait
sub
bnd
inc
push
mov
xchg
sbb
fldt
sbb
push
dec
cwtl
or
shll
adc
jmp
add
pop
and
and
movsb
es
sbb
movsb
mov
add
inc
dec
mov
push
and
add
dec
xor
push
ret
notb
push
cmp
cmp
sbb
sbb
das
mov
dec
das
mov
add
cmpsl
cwtl
fsubrs
dec
cltd
call
pop
incl
mov
out
dec
or
and
adc
push
stos
out
pop
test
in
or
testl
sarb
pusha
leave
mov
repnz
das
test
les
js
push
push
daa
pop
gs
mov
sub
shrl
aam
adc
mov
pop
xchg
inc
cmpsl
fwait
pushf
dec
les
push
in
nop
movl
push
or
cltd
hlt
inc
push
testl
adc
xorl
mov
inc
push
imul
or
mov
or
mov
inc
or
or
and
inc
in
adc
lock
add
or
clc
and
xor
ds
pop
add
mov
mov
jns
adc
sbbb
std
mov
movsl
adcl
sub
bound
out
xor
dec
enter
fdivrl
sub
sub
fcom
enter
and
and
lcall
mov
loopne
aad
mov
in
add
adc
mov
jmp
sbb
and
adc
adc
daa
push
int3
fldenv
cmp
test
inc
inc
fisttps
lds
fdivs
cmp
xor
mov
inc
repnz
xchg
sbb
call
outsl
lods
test
push
cmp
das
out
cmp
push
xchg
and
jns
pop
mov
xlat
adc
xor
push
and
xchg
jmp
mov
mov
daa
mov
sub
stc
sahf
add
add
xor
jge
test
lcall
push
imul
lret
push
pop
repnz
movsl
push
out
xchg
les
mov
pop
iret
inc
out
add
pop
adc
clc
mov
cmp
dec
cmp
or
stos
xchg
inc
call
sbb
add
dec
jl
rorb
add
mov
shll
dec
das
js
call
or
js
mov
in
nop
jge
pushf
lret
inc
in
jmp
mov
mov
es
sub
sub
mov
dec
mov
xor
adc
mov
cmpsb
push
sbb
mov
inc
adc
push
ficomps
sub
mov
xchg
addb
sbb
xrelease
inc
sbb
inc
xchg
les
mov
mov
adc
call
xchg
jg
fsubr
jbe
dec
jne
mov
or
call
pop
adc
lret
sub
frstor
nop
bound
not
mov
push
push
adc
mov
jmp
mov
stos
cmpsb
outsl
jo
and
leave
jno
xchg
or
add
fiaddl
push
frstor
loop
lret
and
leave
pop
sub
mov
xchg
lret
mov
insl
xorb
mov
repnz
daa
sbb
les
call
xchg
mov
xor
pop
cmpsb
sti
push
sbb
repz
dec
or
push
xchg
nop
add
lods
sbb
dec
popf
push
lock
mov
or
mov
clc
xchg
mov
or
or
adc
dec
inc
cmpl
inc
cmp
in
imul
jno
cmpb
dec
test
and
xor
testl
jns
and
cmp
lret
cli
fnstsw
push
daa
test
mov
stc
pusha
daa
call
mov
lret
cmpsl
fcmovne
out
push
sub
sti
xchg
xchg
pushf
xchg
push
fidivl
mov
and
sub
or
xchg
test
mov
cmp
inc
xor
add
push
and
mov
mov
lcall
js
lods
mov
xor
and
xchg
push
push
in
je
ljmp
jmp
ret
mov
push
mov
jge
cld
adc
and
cld
jb
push
inc
jp
add
sub
xchg
xor
lea
clc
into
xor
jl
xchg
cmpsl
mov
push
fnstsw
fsubs
dec
add
jbe
es
pop
push
jne
int3
dec
and
mov
repz
or
jge
or
into
xor
add
ret
fdivl
aad
mov
xchg
lds
mov
sbb
push
push
cmp
test
pop
test
cmp
xor
cmp
push
lods
pushf
sub
iret
fnsave
inc
repz
pop
add
add
inc
bound
xor
cmp
ds
cltd
int
lods
mov
mov
int3
in
push
add
movl
lock
dec
cmpsl
mov
lret
dec
push
loope
adcb
sub
neg
loope
push
adc
xor
cltd
add
int3
or
fldenv
mov
jl
pop
push
inc
mov
jne
dec
push
arpl
lcall
enter
cmpsb
sbb
pushf
and
jno
jmp
pop
cmpsl
jae
jne
push
cmp
fs
add
inc
xor
pop
pop
in
shlb
nop
dec
sti
sub
dec
test
mov
sbb
sbb
adc
test
insb
sbb
outsb
mov
pop
aaa
call
dec
mov
cmpsl
icebp
das
and
push
push
xor
dec
cmp
xchg
xchg
daa
xchg
cmpb
in
das
lahf
mov
push
lea
je
push
jae
sbb
dec
xchg
adc
mov
arpl
dec
in
sub
jne
inc
mov
fistps
mov
daa
mov
jg
leave
mov
mov
mov
roll
mov
mov
adc
or
cli
call
sub
xchg
aas
je
xor
cmpw
and
xchg
sub
negb
mov
nop
insb
clc
or
andb
dec
xchg
sbb
dec
cwtl
inc
cmc
mov
pop
test
or
and
dec
xchg
pop
das
cmpsb
inc
pop
imul
test
mov
xchg
ret
das
xchg
pushf
add
cltd
sub
dec
loopne
je
or
lret
aaa
pop
repnz
int
mov
mov
xchg
in
cltd
inc
or
mov
cmc
cmp
xchg
ja
xor
daa
push
cmp
adc
cs
cmpb
sbb
jl
xor
loop
push
aaa
dec
mull
lret
je
scas
repz
mov
leave
inc
cmc
pop
dec
popf
and
cmpsb
inc
das
loopne
xchg
xor
je
sub
sub
sbb
fsubl
sub
sub
fsts
push
fucomi
mov
pop
xor
xchg
or
pop
mov
ja
dec
movsl
orl
subl
sub
and
les
pop
or
add
add
jle
and
mov
test
xor
push
test
loope
mov
ljmp
cmpb
mov
inc
or
xchg
xchg
sbb
sub
and
adc
sub
popa
and
or
mov
push
les
mov
ds
sbb
leave
pop
cmc
push
nop
fcoms
in
pop
int3
insb
in
gs
fsubr
divl
push
cmp
mov
adc
ljmp
lods
mov
mov
pop
popa
or
dec
sbb
pop
out
sub
push
add
or
mov
cs
sub
xor
cld
mov
cmp
add
xor
cmp
mov
movsl
sbb
dec
xchg
inc
xor
out
xchg
fdivrl
fnstsw
stc
push
dec
inc
inc
dec
sti
and
rorb
js
leave
mov
sbb
or
jge
mov
cmp
jp
sbb
clc
loope
testl
aad
xchg
fildll
push
in
sbb
enter
xchg
imul
add
bound
push
pop
into
mov
jl
adc
dec
and
push
testb
mov
test
rorb
loope
inc
xchg
mov
push
sub
pop
mov
adc
adc
subl
movsb
sub
pop
pop
dec
mov
sti
lret
mov
imul
mov
sub
lea
pop
mov
xor
mov
xchg
adc
cmp
cltd
pop
add
and
or
inc
or
or
dec
sbb
outsb
dec
shr
lea
cltd
or
pop
sti
cmp
xor
sub
cltd
xor
xlat
xchg
mov
cmpb
icebp
mov
popf
inc
pop
pop
fcompl
mov
mov
inc
dec
lock
lcall
ljmp
push
jno
adc
push
fcom
adc
inc
inc
mov
aam
and
sbb
dec
jecxz
xor
pushf
adc
clc
mov
jmp
andb
loope
jnp
lcall
in
and
mov
jnp
rcrl
jmp
push
cmp
sub
or
or
adc
jb
jmp
addr16
and
pop
mov
xlat
xchg
and
setge
jne
sbbl
movsl
mov
ret
xchg
cli
daa
or
insl
jmp
add
xor
fstl
nop
imul
push
inc
xchg
lret
add
stos
nop
mov
or
cli
ds
rclb
push
xor
sub
xchg
out
daa
fxch
mov
lock
inc
dec
aam
and
push
push
and
and
and
adc
jne
cld
jnp
test
pop
inc
add
sub
rcrl
ret
int
test
sbb
popf
push
xchg
jae
out
xor
mov
xor
repnz
sub
mov
pop
ret
cmp
scas
daa
scas
sub
nop
dec
ds
pop
adc
xchg
add
int
dec
clc
cmpl
cli
cmpsl
ljmp
jle
push
inc
test
jne
pop
int3
push
xchg
mov
push
push
adc
xor
mov
inc
pop
inc
mov
dec
mov
or
in
inc
mov
clc
cmp
nop
movsb
inc
popf
stos
and
push
mov
dec
mov
nop
mov
sub
add
ss
xchg
arpl
ret
jne
xchg
shr
push
popf
jge
mov
roll
jne
mov
cwtl
add
loop
or
sub
add
cmpsl
fldenv
mov
aad
cmp
inc
shll
sub
lea
jp
jle
xchg
or
movsl
movsl
sub
or
lock
dec
shl
add
mov
push
outsl
scas
and
daa
fs
ja
mov
push
das
mov
push
movlps
adc
push
and
ds
loop
lock
stos
mov
sti
test
stos
hlt
mov
inc
std
cmc
mov
shr
or
pop
jge
int3
cmpsl
cli
xchg
push
xor
cmp
dec
cmp
cmpl
or
int3
push
jne
les
pushf
inc
dec
cmp
mov
insb
pop
sub
push
xchg
jmp
xchg
out
test
test
dec
fdivl
push
push
inc
cld
inc
in
enter
cmp
pop
pop
lret
mov
inc
cli
cld
int
je
jge
xchg
mov
cmp
push
jnp
dec
pop
testl
stc
jg
imul
push
xchg
adc
mov
add
insl
or
add
dec
enter
ja
cs
gs
mov
lock
xchg
push
mov
add
or
xchg
and
inc
push
push
pop
jns
imul
sbb
in
add
pushl
mov
and
dec
mov
sbb
sbbl
jecxz
mov
jge
ljmp
sub
adc
daa
add
out
xor
inc
mov
adc
pop
fisttpl
int
jae
call
jbe
int3
xchg
adc
cltd
shrb
mov
loop
pop
bound
call
inc
push
xchg
notb
dec
mov
or
jae
scas
gs
jb
xor
push
push
inc
jmp
add
mov
xchg
repnz
push
dec
loopne
cmp
in
loop
pop
adc
pop
imul
fcompp
mov
pushf
test
mov
gs
sti
or
or
pop
adc
sub
ror
or
popa
sub
das
pop
push
sahf
xor
int
add
xlat
adc
js
cmp
lret
fnstcw
sbb
xchg
cmc
dec
pop
out
popf
inc
or
dec
scas
xlat
push
ja
mov
cmp
push
inc
aam
or
fwait
dec
xorb
inc
sub
enter
stos
or
and
imul
mov
out
lock
inc
pop
cs
dec
xor
mov
inc
add
out
je
xor
sbb
scas
push
lret
int3
jl
push
js
adcb
cmp
adc
adc
cmp
jmp
or
movsb
scas
mov
xor
jle
ljmp
orl
test
mov
out
mov
popa
fldcw
cld
insb
lret
sub
and
negl
fs
dec
push
andb
push
sub
push
inc
and
imul
jg
int3
xchg
shlb
popf
push
je
inc
inc
push
push
xchg
movsl
cmc
dec
or
inc
or
je
sbb
call
xchg
or
dec
pop
pop
movsb
mov
mov
jbe
les
mov
hlt
scas
jmp
ljmp
push
clc
xor
xlat
xchg
imulb
inc
adc
fwait
aad
rclb
adc
mov
add
js
add
leave
das
jne
pop
repnz
jle
pop
jge
xlat
pop
push
sbb
or
sub
cmp
outsb
mov
dec
and
xchg
cmc
xor
inc
sub
and
dec
mov
movsb
inc
je
xchg
ja
repnz
dec
push
push
nop
jl
adc
push
xor
sbb
movsl
imul
hlt
sub
lock
and
dec
mov
lahf
arpl
cmc
xor
lock
and
into
pop
fmulp
push
adc
mov
push
mov
sub
stos
dec
ja
enter
xchg
jle
pop
ja
in
testl
or
push
lea
std
cmpsb
ss
cmpsb
dec
xchg
roll
repnz
jmp
cwtl
dec
and
sar
imul
mov
test
dec
je
cld
dec
push
imull
adc
enter
outsl
xchg
mov
scas
or
xchg
test
push
push
aaa
mov
cli
loop
es
mov
add
and
stc
sub
or
adc
dec
mov
xorb
mov
jbe
cmpsl
out
enter
sbb
mov
xlat
out
push
xchg
xchg
cmp
movsl
inc
push
pop
and
add
loopne
fwait
mov
adc
imul
push
or
ljmp
or
jg
shlb
xchg
call
adc
push
sub
loope
mov
loop
adc
and
push
cmp
xchg
addr16
nop
jb
mov
mov
das
mov
ret
enter
adc
mov
fisubs
or
test
adc
and
and
je
adc
cmpsl
cwtl
mov
or
cmc
dec
jge
fsubl
cmpsb
xchg
pop
lea
loopne
mov
loop
add
inc
mov
in
push
adc
cmp
sti
jnp
dec
mov
mov
inc
mov
inc
rolb
outsb
jecxz
andb
inc
lea
nop
imul
hlt
scas
mov
pop
sbb
cmpl
push
hlt
mov
incl
ljmp
lea
ds
jmp
inc
int
fiadds
jno
loopne
mov
adc
mov
jne
icebp
into
outsb
mov
punpckldq
sub
push
in
loop
mov
pop
lret
das
mov
mov
shlb
shr
repz
pop
mov
aam
mov
push
movsl
aad
sbb
pusha
sahf
int3
mov
inc
dec
jne
dec
mov
in
mov
cwtl
nop
cmp
jge
mov
sbb
jo
xchg
rorl
fstpt
mov
filds
or
icebp
cwtl
les
je
xor
adc
push
std
mov
int3
xchg
dec
mov
cmp
pop
xor
dec
xchg
scas
popa
aam
lods
imul
push
or
int3
and
and
xchg
rorb
mov
aam
call
fwait
jne
dec
dec
pop
std
pop
mov
mov
divl
ret
xchg
or
push
sub
jge
mov
aaa
adc
jmp
hlt
push
mov
cmpsl
cwtl
push
dec
push
test
cld
mov
dec
xorl
mov
cwtl
in
sbb
lret
out
test
sub
and
es
ret
sbb
push
push
adc
jg
andb
mov
aam
les
adc
inc
sbb
cmp
lea
inc
or
mov
add
and
sub
xchg
push
std
push
adc
sti
ja
cmc
leave
dec
sub
into
cmp
outsl
lods
inc
clc
mov
mov
lods
push
push
adc
les
mov
xchg
jne
jnp
movups
push
cmp
pop
mov
fs
adc
inc
int
adc
mov
xchg
negb
xchg
scas
mov
sbb
and
pop
pop
ja
stos
xor
fmull
shrb
pop
insb
adc
mov
daa
hlt
sahf
in
adc
mov
jb
test
sub
or
xor
cmp
sahf
pop
adc
cli
bound
push
jmp
dec
movsb
cmpsl
lcall
loop
and
lret
xor
jle
add
aas
mov
daa
lds
and
or
dec
add
outsb
cmpsl
out
pushf
sub
dec
cmp
xchg
mov
idivl
fdiv
push
in
add
push
sub
xchg
adc
mov
lods
in
lods
push
rcrb
and
xor
sub
or
movsb
push
loope
inc
add
lods
dec
xchg
jb
jns
inc
pop
js
mov
cli
pushf
and
lahf
dec
outsl
sub
cmp
adc
test
push
adc
lret
mov
pop
push
xor
inc
push
push
gs
mov
shr
dec
sbb
sub
pop
push
mov
pusha
mov
mov
sbb
jl
or
jle
jmp
lock
cmp
push
xchg
test
push
push
push
das
mov
dec
push
sarb
add
dec
pushl
pop
jb
shl
push
icebp
pop
js
and
lret
rorb
or
je
inc
stos
int3
mov
lahf
pop
xor
stc
fiadds
or
repz
pusha
cmp
je
push
push
sub
mov
jae
lcall
push
xchg
cli
push
lds
test
adc
xchg
mov
dec
imul
daa
js
cld
xchg
daa
push
cmp
mov
pop
ja
std
cmpsl
jle
imul
inc
sbb
imul
lock
sbb
lods
out
jg
xor
sub
lret
hlt
xor
bound
mov
aas
mov
test
or
mov
lods
fcoms
mov
xchg
gs
aaa
pop
inc
iret
xor
fsubs
or
or
inc
pop
jbe
stc
outsl
xor
push
out
push
pop
mov
mov
scas
jne
fs
mov
rorb
jge
mov
cmp
jne
fs
jns
sub
mov
push
mov
decl
mov
not
repz
mov
out
loope
xorb
jo
sub
inc
xchg
push
inc
sahf
dec
test
mov
add
jb
jno
and
movsl
pop
aaa
or
mov
mov
iret
lock
jae
or
insb
push
and
jne
pop
sub
movsb
jge
push
cmp
insb
test
mov
test
jo
cmp
andb
mov
sub
push
dec
stos
mov
stc
or
or
cmp
fldl
add
or
add
jne
cmc
adc
add
dec
orb
xor
aam
mov
mov
mov
fmuls
sbb
shr
inc
mov
mov
add
cmp
jne
test
and
inc
test
daa
push
jno
jmp
add
arpl
mov
sub
pop
add
adc
mov
in
sub
inc
dec
pop
pop
out
lret
mov
decb
and
xchg
mov
pushf
sub
and
push
lods
push
ret
xchg
cmp
pop
mov
pushf
lds
sbb
sbb
mov
push
insb
jmp
push
les
sub
call
sub
lcall
addb
mov
and
or
push
xchg
js
xchg
pop
decl
xchg
jle
lods
ja
jecxz
xor
dec
push
add
cmp
daa
fisubl
incw
adc
ret
push
testb
sbb
dec
pop
stos
adc
mov
dec
and
dec
and
cmp
sbb
adc
sub
cmp
push
arpl
lahf
rcr
fisttpl
add
iret
mov
lret
pushf
es
inc
inc
into
adc
pop
mov
faddl
out
xchg
stos
clc
dec
repnz
shll
xchg
mov
xor
push
or
std
jo
nop
test
dec
xchg
out
jle
ja
fldcw
inc
dec
add
mov
lcall
sub
imul
dec
and
dec
jae
sbb
xor
push
lahf
roll
dec
push
imul
clc
pop
int3
stos
hlt
lahf
loopne
push
enter
or
inc
and
lock
add
cmp
aas
sub
or
insb
ja
push
pop
push
push
add
xchg
adc
push
iret
stc
rcll
mov
mov
dec
cli
push
mov
hlt
sub
scas
sbb
push
xchg
das
je
push
sub
or
ja
pusha
and
add
nop
bnd
sbb
sub
inc
push
xchg
mov
mov
or
inc
adc
inc
pop
or
xor
sub
or
add
xor
loop
sub
push
inc
out
xchg
popa
jb
imul
adc
mov
push
cmp
or
jne
xchg
push
cs
mov
and
adc
je
sti
into
push
dec
xor
sbb
push
shrb
xchg
test
sbb
mov
xchg
pop
pop
pop
jmp
daa
dec
jnp
cmp
inc
cmp
lock
shlb
pop
movsb
clc
push
cmp
jge
sbb
rorb
pop
lcall
sbb
enter
sub
adc
xchg
xchg
inc
dec
push
mov
dec
aaa
fildll
dec
fst
and
mov
mov
popf
jge
jmp
cmpsb
aad
dec
dec
sbb
adc
nopl
daa
xor
mov
sbb
jne
dec
hlt
gs
adc
addr16
lcall
jl
mov
push
pusha
js
enter
add
and
add
popf
subb
out
out
xchg
cli
arpl
mov
mov
adc
pop
jp
addr16
cmp
sbb
mov
jmp
in
mov
popf
dec
dec
mov
push
sbb
adc
cltd
cltd
mov
push
inc
xchg
in
push
add
inc
xlat
lock
or
cmpl
pop
pusha
push
adc
sub
fadds
mov
mov
jmp
fdivp
push
xchg
cltd
sbb
lahf
rcrl
push
cmpsl
test
cmp
adc
mov
mov
and
mov
repnz
dec
mov
or
mov
sub
cmpl
and
add
das
movsb
dec
sbb
test
stos
push
xchg
mov
int3
push
mov
orb
add
lcall
inc
cmp
pop
stc
xchg
or
or
out
dec
sub
and
jge
dec
adc
mov
arpl
or
xchg
dec
push
jnp
adc
addl
sbb
je
in
mov
sbb
popf
mov
push
sbb
out
jae
pushf
call
mov
adc
lds
scas
push
mov
dec
cmc
adc
lock
cmp
push
jmp
or
pop
sbbb
push
insl
loopne
or
insb
cmp
dec
cmp
or
movsl
mov
or
test
push
cmp
adc
or
cmp
mov
cltd
test
gs
lahf
pop
adc
inc
orb
js
adc
test
mov
fstpt
xchg
out
icebp
andb
jmp
or
out
insb
lea
adc
data16
popl
movb
fistl
dec
incb
jne
in
mov
mov
pop
sbb
decl
js
imul
jl
sbb
or
jno
xor
popf
and
or
cwtl
sub
ja
sahf
cmp
mov
les
cmp
jge
xor
xchg
cmp
mov
push
xor
or
or
mov
pop
sbb
fsubrs
add
and
and
jo
mov
lods
pop
dec
inc
dec
adc
xchg
es
dec
bound
adc
hlt
cli
sub
call
push
cmpl
je
loop
lock
imul
insl
pusha
dec
inc
dec
dec
in
je
adc
and
sub
mov
jne
push
int
xorb
sbb
pop
push
push
das
inc
or
cmp
shl
dec
outsl
pop
dec
mov
xchg
sahf
and
push
mov
mov
inc
out
xor
test
loopne
push
and
jnp
jmp
andb
movsb
xchg
and
mov
adc
mov
popaw
push
cmpsb
dec
mov
jp
cmp
xchg
ljmp
gs
in
in
sub
xchg
aas
notb
movsl
mov
dec
lods
and
aam
dec
cmc
ficompl
push
xchg
jp
and
nop
imul
fistpl
inc
push
push
out
inc
inc
mov
mov
lea
xchg
xchg
fisttpll
push
xor
mov
ds
xorb
sbb
xor
lock
jge
int3
jb
inc
mov
xlat
mov
xchg
je
es
mov
aam
scas
inc
cli
lret
xchg
adc
and
pop
or
mov
mov
or
jnp
xchg
jb
jne
pop
adc
aad
rcrl
mov
adc
mov
push
lret
jle
lods
sti
data16
adc
test
jp
dec
aam
fwait
cmp
in
mov
inc
das
jne
popa
and
jl
sub
cmp
fs
lcall
push
jle
inc
push
jns
pop
push
insb
adc
xchg
jbe
cmp
movsb
sub
fcomps
test
ljmp
add
adc
mov
or
jne
push
lds
or
cwtl
mov
jne
adc
jp
pop
add
mov
jne
imul
nop
jbe
shll
ja
pop
lea
sbb
jg
leave
pop
fnstenv
or
mov
pop
scas
adc
fisubrl
xorl
add
test
jp
jnp
push
fs
and
in
xor
je
call
scas
xor
xor
push
push
movsl
test
pop
push
out
jbe
xor
loop
rorl
add
push
mov
and
jb
pop
dec
jns
lods
adc
aad
jle
dec
pop
adc
add
add
loop
cli
arpl
test
pop
inc
mov
sbb
or
je
call
or
pop
dec
adc
jle
cmpsl
and
sub
js
call
mov
imul
cmp
xor
insb
sbb
in
sbb
pop
cmc
cltd
mov
sbb
ja
movsl
punpckhbw
push
in
pusha
arpl
or
mov
or
mov
jne
adc
jmp
enter
fstpt
fnstsw
sbb
add
and
rolb
push
pop
cmp
stos
inc
flds
scas
push
and
cmpsb
cmp
add
cmp
and
in
jp
decl
test
mov
test
ffreep
pop
stos
pop
xor
sbb
xchg
sbb
addr16
or
stc
fs
push
push
insb
jno
jg
xor
std
xlat
adc
test
mov
addb
and
rcll
fstps
sbb
add
pop
push
stos
adc
jmp
add
sar
popf
cwtl
cld
insl
sub
cld
les
in
jg
jae
add
push
loopne
test
adc
sbb
xchg
xchg
sbb
orb
xchg
je
lods
adc
mov
cltd
fidivs
jp
sbb
adc
xchg
sbb
mov
sbb
cmpl
add
mov
lret
stos
mov
add
and
ja
shl
fs
jb
daa
lds
cld
pop
and
dec
in
outsl
adc
and
adc
sbb
insl
sbb
icebp
sbb
sub
inc
add
push
repnz
sbb
add
push
inc
sub
call
dec
jns
jne
sub
or
movsb
inc
insl
sub
pop
sbb
cwtl
mov
scas
jo
test
pop
xor
xor
sub
xor
cmp
pop
cmc
mov
push
dec
mov
jmp
repz
adc
or
sub
sbb
mov
rolb
inc
popf
or
adc
mov
mov
ja
sub
adc
movsb
mov
lods
mov
fs
and
out
rclb
mov
lods
test
adc
pop
or
lods
imul
adc
test
mov
xchg
mov
sarl
iret
aam
in
lcall
mov
xor
cmpl
jg
mov
mov
fisubs
push
jns
jne
mov
push
xor
fdivrs
nop
xor
je
inc
fbld
in
push
pop
mov
dec
repz
inc
dec
mov
loope
imul
mov
sub
or
push
sub
inc
dec
insb
mov
mov
jno
js
les
jns
mov
dec
jmp
xor
sub
ljmp
or
jno
movb
gs
and
enter
dec
scas
add
mov
fs
push
pop
cmp
push
or
add
mov
adc
sahf
sub
and
in
xor
push
cltd
outsb
ljmp
dec
inc
xor
sti
xchg
adc
mov
lahf
and
imul
clc
test
add
ret
insl
push
cmp
sbb
ud0
aam
and
or
adc
pop
cmp
and
pop
mov
shlb
push
pop
jmp
xor
out
mov
ret
xor
mull
pushf
ss
cmp
sub
adc
pop
daa
or
push
pop
icebp
push
or
add
repnz
cmpsb
sub
xchg
insl
inc
adc
push
adcl
jbe
insb
je
jae
xor
scas
arpl
push
jmp
movsl
jb
dec
mov
sbb
sub
cld
sub
jmp
or
inc
xchg
xchg
in
lods
or
push
pop
fdivrl
mov
seta
mov
in
lret
lea
es
shll
lret
inc
cwtl
inc
dec
push
fisttpll
loop
inc
sbb
pop
xor
int3
lds
test
or
mov
daa
lods
test
and
and
inc
or
test
cmp
inc
cmp
jmp
or
repz
lds
out
call
pop
mov
and
pop
bound
aad
jo,pt
in
or
or
and
and
inc
and
leave
sub
mov
jg
cmp
xor
sbb
out
out
adc
push
push
jge
sar
rcl
mov
sub
and
movsl
mov
or
aam
lds
cltd
rclb
jge
sbb
dec
jo
mov
cmp
pop
ja
mov
mov
push
push
and
lahf
cltd
push
sub
cmp
inc
pop
xor
in
or
jno
push
mov
cmp
fidivl
dec
push
push
leave
jo
pop
shlb
sub
mov
xor
push
inc
insb
and
clc
sbbb
jecxz
adc
jne
inc
adc
dec
movsb
mov
cli
sbb
inc
pop
cmp
adcb
xchg
cs
dec
jne
cmp
es
sbb
sbb
test
dec
test
aaa
into
jmp
sar
in
xor
call
add
imul
add
arpl
or
pop
imul
test
mov
mov
xor
mov
sub
or
cmp
sbb
adc
cli
loopne
mov
pop
xchg
push
pop
or
je
dec
js
xlat
fs
adc
ljmp
mov
enter
popa
sbb
or
dec
dec
jnp
mov
mov
adc
add
or
jl
mov
jns
les
add
pop
jg
imul
and
xchg
jae
xchg
mov
rolb
fsubrs
gs
inc
aaa
xchg
dec
adc
call
rclb
adc
add
arpl
jmp
cmp
and
popa
add
cmp
xor
jp
pop
repz
and
sbb
cmpl
movsb
stos
fwait
ret
and
add
lea
in
pop
aam
push
dec
test
mov
sub
mov
mov
shlb
les
aad
inc
pop
enter
push
cmp
mov
dec
cwtl
adc
data16
and
sbb
orb
pop
fs
mov
push
gs
stos
pop
mov
mov
call
pop
pop
clc
in
dec
or
adc
ret
call
inc
sahf
pop
sbb
test
mov
mov
mov
push
sub
cld
mov
std
jnp
fadd
cmpl
loop
ret
notb
adc
sti
mov
rorl
inc
push
enter
movsl
push
mov
or
mov
pushf
mov
adc
sub
je
sub
imul
xchg
int
ficoms
mov
call
dec
mov
fistl
data16
loop
or
clc
and
jecxz
sbb
mov
lea
xchg
out
mov
mov
cltd
lods
xor
xor
fidivrs
pop
in
pop
jmp
jg
pop
mov
mov
and
pop
xchg
push
enter
aam
lock
rorb
in
out
jg
pop
push
fcoml
pop
sbb
test
xor
mov
leave
lods
jle
lret
pop
ljmp
jmp
repnz
or
nop
adc
jle
je
in
mov
push
push
shll
mov
lods
mov
jb
out
hlt
add
sbb
sub
daa
sar
push
stos
mov
push
popa
or
jnp
xchg
fnstsw
push
push
cmp
jge
jmp
movsb
les
ljmp
and
push
or
push
inc
fsts
or
andb
sub
jns
lock
inc
dec
mov
mov
add
scas
jb
in
fwait
sub
pop
xor
jle
in
decl
or
test
movsb
mov
cmp
push
dec
cmpsb
jg
adc
lahf
lods
out
sub
sub
pushf
and
dec
jbe
jno
cmp
cmp
push
bound
call
in
cmpsl
icebp
je
ret
pop
cmp
es
lea
dec
mov
out
das
add
jbe
pop
fcoml
cmp
sbbb
mov
push
lods
mov
imul
xlat
xchg
das
call
xor
es
mov
pop
sbb
hlt
and
xchg
lock
movsl
sub
enter
imul
js
jne
adc
stc
in
xor
fisubs
adc
and
cmpb
insb
stos
mov
lcall
stos
enter
pusha
cmp
sub
int3
sbb
xlat
adc
inc
cmpb
adc
shrl
cmp
data16
push
aas
jo
lcall
pop
inc
mov
icebp
dec
cmp
sub
sub
mov
nop
or
addr16
shr
cmp
lock
cld
xchg
inc
mov
xor
lret
mov
cmp
pop
sub
outsb
xchg
push
mov
push
out
mov
xchg
inc
scas
insl
shrb
in
inc
push
enter
push
xchg
mov
dec
fistpl
mov
jp
ret
aas
sahf
ret
cmpsl
cltd
clc
and
pop
jns
add
call
jle
hlt
loop
loop
xlat
int3
es
daa
cmp
dec
repz
cmpsl
mov
push
shrb
frstor
add
shlb
outsb
ret
imul
pop
mov
ja
xchg
push
fdivrs
int
jecxz
scas
and
push
mov
dec
je
push
add
rorl
wbinvd
push
cmp
jne
out
mov
adc
jle
mov
in
dec
daa
clc
adc
pop
je
push
xlat
into
xor
hlt
push
xlat
sti
sub
enter
mov
outsb
std
xchg
stos
push
jne
push
std
xor
mov
pop
arpl
lahf
jle
hlt
test
adc
call
pop
and
jo
inc
add
pop
sti
xchg
mov
sub
or
dec
push
sbb
pop
cld
lret
or
test
add
add
pop
jg
aam
mov
and
sub
iret
xchg
adc
shll
fdivl
stc
pop
adc
mov
and
inc
sub
inc
xor
jle
mov
ja
jmp
jno
leave
pop
daa
mov
dec
test
test
pop
rorl
fstpl
mov
dec
or
cli
int3
dec
xchg
pop
outsl
cld
or
or
cld
sub
cmpsl
lds
hlt
mov
mov
std
xchg
cmpsb
rcrb
scas
clc
add
xchg
rorl
jb
mov
mov
data16
pop
push
cmp
xor
sbb
pop
adc
inc
pushf
and
jp
cmp
push
loop
dec
imul
pop
sarl
push
sub
jno
aaa
or
nop
add
mov
dec
sub
push
mov
pusha
test
xor
jle
pusha
xchg
jmp
or
test
mov
jmp
mov
outsl
xor
shlb
mov
cmp
pop
push
push
pop
mov
call
xchg
imul
test
xchg
dec
lds
test
dec
adc
jne
push
aas
stc
test
push
pop
in
add
loopne
mov
sub
arpl
rolb
fsubp
imul
enter
iret
arpl
xchg
xor
mov
dec
jge
pop
jg
fadds
mov
xor
dec
mov
adc
add
add
cmp
cwtl
pop
mov
add
xchg
push
push
loop
fists
aas
std
cmp
js
cld
mov
js
ret
mov
mov
push
shlb
and
mov
dec
stos
add
ljmp
scas
mov
mov
xchg
scas
testb
nop
push
scas
sub
push
jns
in
mov
mov
mov
mov
and
stc
shll
stos
sub
xor
fxch
sub
mov
js
fsubrs
xchg
jne
or
adc
mov
ss
dec
cld
fs
clc
xchg
inc
movsb
push
cmp
pop
repz
xchg
enter
clc
xorb
push
add
xchg
push
pop
gs
rcrb
add
mov
sub
mov
adc
jb
test
imul
inc
inc
jnp
mov
mov
mov
add
lcall
dec
shlb
loopne
js
push
add
dec
inc
pop
nop
nop
insb
jl
call
ret
loop
test
insb
lds
pop
sar
mov
shlb
jbe
rorb
sbb
imul
lret
adc
inc
mov
jl
subb
movsb
xlat
pop
and
or
inc
sub
lahf
xchg
xor
test
and
adc
in
aaa
leave
popa
movsl
pushf
in
or
in
shr
or
sbb
adc
adc
dec
xor
cld
sub
dec
cltd
and
loope
sub
sub
andl
jno
fs
scas
lea
inc
imul
push
cld
xor
jmp
or
call
pop
mov
outsl
or
dec
xorl
jae
and
popf
in
lock
sub
and
add
sahf
addb
add
or
mov
bound
push
lods
dec
pop
push
jae
xchg
jo
sub
je
inc
or
popa
movsl
hlt
jge
jno
cltd
insl
lahf
mov
mov
xchg
pop
enter
lahf
leave
add
cmp
or
or
mov
movsb
mov
sbb
lods
imul
sbb
lcall
inc
pusha
jne
in
mov
fs
or
or
sbb
adc
pop
sub
mov
inc
pop
mov
fstl
xor
popf
jp
scas
jne
mov
mov
or
in
aaa
xchg
mov
repnz
or
in
pop
out
mov
das
xor
hlt
stos
fwait
shll
mov
leave
jle
jle
and
mov
xchg
sub
fs
in
in
cld
mov
movsb
js
xor
push
hlt
xchg
mov
test
adc
lea
xchg
jo
and
fs
pop
addr16
rclb
or
lret
sbb
insb
test
adc
push
inc
lock
xor
adcl
dec
inc
xor
sbb
popa
lds
xchg
sub
xchg
xor
test
adc
mov
dec
lret
js
dec
mov
fmul
adc
cli
inc
mov
pushf
pop
stos
jp
scas
add
dec
jo
fcoml
adc
mov
xor
pop
mov
test
push
xor
pop
jmp
inc
dec
jne
fadds
add
cwtl
sub
test
pop
sbb
adc
lods
daa
inc
shlb
lds
loop
inc
mov
mov
adcb
adc
test
inc
jle
jne
push
xchg
mov
jp
aam
sub
and
cmp
orb
push
pop
fwait
push
gs
pushf
cwtl
ficompl
fs
in
jnp
pop
dec
push
pop
dec
nop
imul
or
push
push
push
or
js
hlt
dec
clc
mov
js
insb
mov
movsl
inc
stc
push
int3
cld
pop
dec
or
outsb
xchg
std
jno
test
dec
sbb
lds
loop
sub
fisubrs
sbb
mov
rcl
emms
push
adc
fdivl
sub
inc
push
inc
mov
fldenv
popa
and
cs
sub
sub
cmp
lret
ret
and
inc
push
negl
inc
cmpsl
mov
sbb
stos
jae
dec
jb
cltd
outsl
lds
mov
jmp
inc
jecxz
leave
bound
sbb
sub
dec
and
js
enter
sbb
add
mov
enter
jae
sbb
xor
add
mov
dec
sub
lcall
addr16
in
sub
pop
sbb
mov
add
lods
mov
imull
subl
mov
rclb
je
dec
packuswb
sbb
pop
sub
popa
jae
bound
sbb
adcl
sti
adc
ret
and
mov
xor
and
insb
js
xor
cs
lock
outsl
jo
jns
ss
jno
xor
dec
cmp
outsl
jne
cmpsl
inc
xchg
imul
xor
pop
rclb
adc
bound
mov
call
lcall
inc
sub
and
mov
sub
clc
shr
sarl
lahf
push
add
jmp
in
leave
jbe
inc
cmp
jae
add
add
jl
jbe
pop
push
add
and
inc
dec
cwtl
sbb
mov
mov
idiv
das
add
or
or
xorb
and
test
ret
sti
cmpsb
js
fstps
mov
out
xor
mov
pop
adc
xor
and
in
mov
and
mov
jno
or
inc
js
sbb
sbb
sbb
xor
cmp
adc
jae
xchg
hlt
dec
ljmp
sbb
add
mov
cmpl
je
mov
adcl
and
cmp
mov
jno
sub
and
xorl
lcall
inc
fs
in
pop
lahf
cwtl
or
hlt
add
adc
jl
or
adc
or
pop
sbb
sbb
mov
or
adc
jbe
and
jle
incb
push
xchg
fcoml
and
or
or
inc
cld
adc
mov
shll
xchg
test
and
sahf
or
aad
sub
shl
and
sbb
sub
ss
rolb
xor
inc
dec
dec
js
into
xor
mov
cltd
inc
push
fildl
ret
je
imul
cmp
mov
sub
mov
mov
sbb
mov
mov
add
shl
sub
into
adc
cmp
push
mov
push
and
jp
add
or
jmp
aas
aas
add
ljmp
cwtl
popa
fimull
push
or
push
adc
js
adc
jl
ret
clc
mov
repz
das
adc
nop
mov
rcrl
push
cmp
jo
push
rcr
mov
mov
and
fldenv
or
or
call
add
push
adc
inc
adc
into
movsl
cmc
adc
xlat
add
adc
or
jno
pop
adc
push
insb
sub
add
lods
into
aam
pop
cltd
push
movsb
sub
imul
or
add
pop
mov
incl
adc
xchg
adc
and
mov
cmp
jbe
mov
mov
scas
xchg
in
pop
sti
int
out
push
or
sub
rclb
jns
push
jle
sbb
jecxz
dec
and
xchg
andl
cwtl
subl
rclb
subb
jnp
lcall
je
daa
js
adc
enter
sbb
dec
and
imul
jnp
andl
dec
adc
jmp
shl
hlt
fimuls
dec
shr
cmp
jbe
dec
cmpsl
or
add
movsl
mov
cmp
cmpb
or
sub
add
cmp
pop
dec
roll
mov
push
xor
ljmp
cmpl
stos
lea
fdivrs
les
and
leave
inc
hlt
and
out
jl
out
inc
shl
sub
mov
shlb
push
shr
push
movsb
orl
or
adc
xlat
call
pop
cmp
xor
add
sub
and
adc
stos
inc
pop
xchg
stos
or
push
movsl
daa
je
loopne
enter
push
jge
or
fsubrs
mov
int3
data16
cltd
push
incb
stos
subl
sub
in
es
mov
pop
jmp
movsb
cli
pushf
jne
dec
xor
xchg
pop
scas
hlt
mov
dec
enter
push
ds
lods
push
sbb
jno
xor
sub
je
jno
andl
or
cmp
inc
cmp
xor
inc
or
mov
mov
pop
icebp
outsl
cmp
cmp
jae
adc
pop
and
sub
js
or
es
push
sbb
adc
sub
pop
lds
sbbl
ret
fucom
adc
inc
mov
mov
stc
dec
fs
xor
bound
outsl
cmp
inc
jmp
push
test
inc
or
rcrb
add
inc
aam
test
in
and
popl
ja
mov
inc
pop
aas
cs
ja
inc
sti
mov
je
mov
jo
fs
ret
pop
xor
clc
cwtl
mov
and
js
sbbl
mov
cmc
jbe
or
fisubrs
or
adc
xor
or
xor
movups
dec
adc
cmpb
or
mov
lock
cwtl
nopl
jo
push
cwtl
les
jb
shrl
fadd
cmp
jae
mov
int
mov
cmp
inc
ds
xor
test
inc
mov
add
loop
jl
es
inc
cltd
sbb
sbb
or
inc
sub
and
sbb
adc
or
add
iret
jb
mov
adc
fnstcw
ljmp
cmp
hlt
enter
mov
jp
cmpsl
cld
cmp
and
cltd
cmp
and
pop
mov
push
mov
cmp
in
test
add
jmp
jb
adc
jge
call
xor
xorb
sub
dec
pop
adc
sbb
mov
movsb
pop
xor
roll
dec
or
lea
aas
sub
jb
jae
xor
cmp
fwait
or
cwtl
mov
jnp
push
push
insb
jo
ss
sub
inc
mov
lcall
je
cmp
iret
xchg
mov
adc
scas
dec
popa
fsub
lahf
push
cmp
xchg
stos
mov
fcoml
jge
out
fisttpll
adcl
cltd
add
adc
or
jb
cmpsl
mov
icebp
scas
sub
dec
insb
popa
inc
push
shl
mov
push
and
push
adc
xor
and
int
adcl
push
push
xor
inc
sub
jbe
xchg
loopne
adc
xchg
enter
mov
add
xor
and
fistl
leave
shlb
outsb
in
pop
int3
test
or
sarl
and
jle
cmp
sub
inc
aaa
fwait
jl
fistpl
call
ss
mov
je
xchg
sub
fsts
lods
mov
jg
adc
sub
mov
mov
dec
mov
cwtl
movsb
dec
adc
adc
and
add
insl
mov
std
add
aam
cmp
fsubrs
xchg
mov
mov
or
jb
shr
nop
xlat
mov
cltd
dec
aas
adc
addb
test
ficoms
inc
lahf
sbb
je
pop
mov
push
fs
xchg
mov
es
push
mov
sub
mov
bound
push
jl
pop
fcompl
xchg
adc
push
cltd
cld
jo
pop
fmull
xchg
jb
cmp
scas
push
mov
test
hlt
lds
ja
imul
decl
hlt
mov
imull
dec
push
pop
leave
inc
push
mov
in
or
gs
xor
sbb
daa
aam
push
or
dec
push
fstl
fwait
jle
jbe
out
inc
mov
push
imul
sub
xor
or
test
push
stos
cs
mov
cmpl
xchg
jo
inc
lret
or
or
and
inc
push
enter
xor
cmp
mov
or
add
mov
je
sub
jo
xchg
inc
jae
test
gs
inc
ss
xchg
xor
push
sub
jl
sub
xor
add
out
cmp
push
pop
ss
mov
mov
push
jp
mov
ljmp
sub
pop
xchg
leave
and
insb
push
dec
push
sub
xorl
add
xchg
cltd
or
lock
shlb
mov
jg
jmp
loopne
inc
pusha
adc
ficoml
sbb
movl
jg
je
cmp
dec
add
lret
aad
dec
xor
bound
sbb
pop
lret
sbb
inc
xor
dec
xchg
test
hlt
scas
sbb
sub
repz
dec
or
sbb
hlt
sub
pop
pusha
jb
or
cmc
cltd
pop
push
or
mov
ficompl
add
fisttpll
rorb
cmpb
pop
mov
lock
arpl
sub
in
xor
push
xor
sti
push
adc
mov
cmp
jle
pop
insl
adc
stc
mov
data16
and
ret
jmp
je
mov
and
in
mov
imul
stos
inc
shl
in
sbb
dec
sbb
mov
dec
pop
scas
cltd
aam
dec
sub
mov
cmp
jmp
rol
jp
mov
pop
pop
fstpt
cli
andl
pop
pop
sub
bswap
jae
ja
testl
shlb
sub
dec
sahf
pop
push
adc
inc
push
push
loop
inc
add
or
mov
mov
dec
mov
inc
mov
divb
cmpb
mov
mov
jae
mov
std
jmp
sarl
stos
addl
add
sub
add
push
jle
xchg
mov
and
int3
cmp
lods
mov
into
xchg
mov
pop
add
mov
push
cmpsb
dec
lock
mov
aaa
pop
dec
add
mov
mov
ret
mov
cmp
mov
btsl
rcll
or
push
dec
push
inc
cmp
dec
arpl
sub
je
adc
stos
and
push
push
dec
inc
sub
adc
xchg
sbb
test
das
rorl
mov
inc
in
cmp
lret
xor
add
mov
lea
mov
int
xchg
jecxz
mov
lcall
rorl
push
leave
sbb
jg
decb
les
mov
and
xor
cld
push
imul
add
inc
push
cmp
add
cmc
cmc
imul
jae
je
jmp
movl
ret
fwait
or
sub
inc
enter
push
stos
andl
xor
sbb
test
pop
xchg
neg
and
insl
lret
gs
or
or
adc
mov
dec
mov
dec
sub
movsb
and
sbb
xor
adc
sbb
xchg
sti
sub
stos
cmc
xchg
push
xchg
or
mov
dec
pop
mov
pushf
mov
mul
push
jg
dec
jbe
mov
jge
inc
pop
test
ret
jl
and
daa
insb
xchg
mov
pop
adc
jae
loopne
pop
inc
add
dec
lret
aas
cwtl
not
xchg
dec
jo
fimuls
imul
loope,pn
mov
cmp
xor
jle
push
ss
sti
or
jb
adc
mov
leave
dec
xor
jb
adc
sti
pop
mov
adc
je
dec
push
jecxz
adc
sbb
sbb
push
cwtl
jo
inc
dec
xor
decl
sbb
dec
jne
inc
outsb
add
cmp
add
movsl
shll
testl
je
jae
sbb
jb
das
rclb
in
xchg
dec
mov
dec
and
inc
loop
add
add
sub
addb
and
lcall
push
subb
adc
mov
jo
or
jmp
push
mov
push
push
adc
test
roll
dec
movsl
push
push
mov
or
roll
add
sarb
bnd
pop
cmpsl
adc
test
mov
ss
sbb
mov
sbb
push
or
ret
dec
nop
jmp
sbb
jb
xor
jne
or
jae
into
adc
push
push
pop
push
cmp
xchg
jmp
mov
js
popa
lds
repz
ror
decb
mov
andb
and
xchg
popa
movsb
fldl
lea
sub
mov
or
xor
cli
jmp
cwtl
jnp
sahf
cwtl
movsb
xchg
inc
add
adc
mov
sub
inc
pop
cltd
add
adc
je
add
test
mov
or
cmp
scas
mov
iret
pop
ret
scas
icebp
xlat
jns
fwait
hlt
in
mov
test
iret
mov
cmp
je
or
scas
or
mov
push
lods
inc
jmp
pop
mov
add
jle
dec
adc
outsb
jbe
insb
test
and
outsl
cmp
add
and
push
add
and
outsb
addr16
jae
dec
inc
and
insl
popa
outsb
jns
sbb
pop
cld
fs
sarb
bound
sti
push
sub
pushf
jo
je
das
fnstcw
or
sarb
pop
sub
sub
push
ror
jl
or
lods
add
scas
xchg
push
adc
and
adc
xchg
cmp
sub
add
addr16
inc
movsb
or
nop
jnp
popa
xor
push
bound
or
jmp
adcb
cmp
or
ret
or
les
imul
addl
pop
xchg
arpl
es
cmpsb
push
jns
sbb
cmp
add
test
mov
inc
sbb
inc
adc
sub
dec
adc
xchg
cmp
mov
mov
fbld
or
insl
adc
fsubrs
test
jg
xor
adc
push
or
add
and
mov
js
mov
iret
addr16
dec
mov
push
cmpsl
ja
push
pop
pop
cmp
jns
or
loopne
add
cmc
cmp
subl
adc
mov
or
lea
adc
push
bndldx
add
jne
xchg
pop
enter
lea
ret
and
je
and
ficompl
or
in
rcl
addb
push
dec
add
aad
outsb
or
enter
sbb
push
dec
mov
jns
sbb
sbb
movsbl
or
lret
adc
xlat
movsl
mov
sbb
pusha
adc
push
sub
dec
bound
mov
ja
dec
daa
mov
aam
jo
jno
stos
add
mov
adc
or
ret
mov
jnp
jp
push
push
test
dec
int
outsl
xor
adc
add
negl
inc
inc
xor
sub
add
jbe
adc
xor
dec
sub
dec
mov
stos
inc
dec
hlt
jg
aad
cli
sub
lds
or
sub
ljmp
cmp
xor
cmp
pop
stc
loopne
dec
and
mov
dec
sbb
mov
and
and
jbe
sub
jns
or
mov
inc
cmp
sub
add
xchg
adc
cwtl
les
outsl
fs
adc
mov
jne
or
mov
aam
sbb
cld
adc
add
and
fs
and
test
test
dec
sysenter
pop
call
xor
cmp
jbe
cmp
sub
dec
mov
jmp
or
dec
inc
sahf
icebp
notb
das
cmc
lcall
sti
adc
pop
decl
mov
shll
add
lock
add
or
jb
jl
bound
pop
push
clc
pop
adc
xor
sub
xor
insl
lock
lret
xchg
add
dec
fs
andb
out
fs
push
lret
loop
sub
test
je
loopne
cmp
cwtl
dec
dec
lock
rcll
lcall
in
or
adc
rorb
jns
adc
adc
sub
addr16
inc
add
pop
dec
xor
rcll
arpl
ja
push
pop
sbb
jge
iret
inc
daa
fcomps
mov
pushl
jmp
pop
repz
fdivs
xlat
pop
out
fwait
cmp
out
out
add
jmp
xchg
jge
mov
xor
cmp
jae
and
shlb
pop
cmp
jge
rdmsr
push
es
popf
rcl
dec
pop
movb
mov
ja
sub
inc
sbb
jp
movsl
push
xor
sub
mov
cmp
out
dec
inc
mov
add
call
add
add
sbb
bnd
jp
push
mov
fstl
lea
jnp
push
in
sub
sbb
sub
lmsw
or
inc
call
stc
xor
leave
int3
rclb
rcrb
sub
pop
sbb
xor
push
pop
mov
dec
mov
push
and
jmp
addl
mov
test
imul
and
cmc
push
test
fs
test
fists
push
in
ja
pop
inc
or
movups
dec
jp
rcrb
shll
mov
rcrb
fldenv
aam
out
dec
dec
and
push
mov
adc
sub
dec
scas
push
dec
clc
rorl
pop
sarb
mov
xorl
sarl
xchg
or
jnp
out
pop
mov
loope
add
fcoms
mov
jge
neg
adc
or
adc
jle
movsb
lds
gs
mov
sarb
adc
mov
jmp
xchg
sbb
xchg
pop
mov
cwtl
mov
pop
nop
cld
mov
push
inc
js
fmuls
push
ja
ret
push
mov
lret
cld
cmpsl
sbb
push
mov
cmp
jne
mov
adc
fidivrl
popf
dec
clc
mov
add
adc
xchg
in
xchg
and
and
shlb
jp
in
or
add
dec
jl
scas
xor
das
dec
pop
and
popl
aad
hlt
push
icebp
cs
mov
and
std
jne
lds
or
adc
xchg
scas
in
not
xor
add
fwait
xchg
popa
sbb
lea
push
cmp
or
flds
ds
cltd
or
dec
cmp
decl
leave
and
jne
pusha
push
sbb
push
xor
test
adc
push
inc
or
hlt
sub
jae
divb
pop
dec
cltd
adc
sub
mov
in
jp
xchg
and
sub
push
inc
test
hlt
lods
aas
inc
popa
pop
and
dec
cli
fs
rcl
in
and
shll
ret
xchg
adc
push
sub
movsb
mov
scas
adc
out
imul
mov
and
in
out
aad
inc
arpl
bound
xor
push
fidivl
add
in
std
ficompl
in
aas
enter
add
push
push
mov
adc
call
pushf
pop
push
xor
or
adc
add
cld
dec
adc
mov
cmp
inc
sbb
cli
push
inc
xchg
sbb
jne
stc
sbb
push
insl
jo
dec
jae
imul
push
adc
mov
insb
jo
push
pusha
jnp
mov
fs
jns
sub
mov
popa
jb
pop
cwtl
adc
incl
xchg
int
jp
sub
and
orb
adc
inc
scas
push
xor
ficoml
dec
jne
in
xchg
cmp
sarb
std
inc
scas
sbb
pop
mov
lods
sbb
xor
lea
sub
inc
jae
clc
adc
repnz
fdivl
jbe
iret
inc
gs
dec
and
inc
or
dec
inc
rol
jge
sbb
loopne
xlat
out
arpl
cmp
jnp
cmp
repnz
push
les
mov
sub
mov
sahf
scas
call
or
jb
or
sub
pop
and
lcall
or
das
adc
mov
in
fstl
mov
and
pop
aam
add
mov
mov
cmp
xor
lret
jge
mov
add
inc
pop
mov
mov
loop
scas
adc
dec
cltd
inc
fiaddl
fstl
xchg
test
scas
jmp
xchg
int3
iret
mov
fdiv
ficomps
adc
fstenv
sarb
je
inc
call
sbb
fcmovu
dec
cmp
out
jnp
mov
in
inc
fadd
dec
fdivs
add
cmp
dec
inc
push
jno
dec
pop
nop
shlb
mov
rorb
inc
cmp
pushf
sbb
cmp
test
adc
pop
mov
sbb
or
fmuls
sub
xchg
jl
pop
inc
testb
lret
stc
cli
or
sub
push
pop
sbb
sbb
insb
pushl
in
outsl
das
pushf
aam
cwtl
aaa
add
mov
sbb
loopne
or
jae
mov
notl
loopne
call
inc
and
jmp
ljmp
mov
cmp
mov
sbb
or
mov
mov
mov
int3
adc
fadds
movb
fmull
mov
aad
sbb
mov
mov
scas
lock
add
cmp
ja
lods
rclb
fisubrs
stc
lock
jae
jne
movsb
out
inc
pop
add
add
or
jmp
ds
jo
mov
inc
mov
xchg
xchg
test
fldenv
in
mov
push
pop
xchg
sbb
xchg
xor
imul
xor
shr
test
jne
rcll
jmp
shll
and
mov
xor
test
mov
adc
adc
je
fisttps
add
addr16
xchg
xor
iret
insb
pop
loop
test
mov
cmpsl
adc
mov
scas
add
push
push
fstpl
aad
pop
call
sbbb
or
lea
in
inc
push
adc
bound
xchg
pmuludq
jmp
sub
je
or
adc
fs
mov
jnp
xor
jb
adc
xchg
daa
pop
outsl
jbe
loopne
jne
lcall
jns
shrb
div
dec
jb
adc
mov
insl
jo
jb
lods
sub
pop
gs
cs
sub
inc
add
push
or
cli
push
inc
sbb
jns
icebp
push
sbb
mov
gs
and
mov
dec
or
ljmp
push
pop
test
cld
je
daa
fcoms
daa
and
adc
test
push
cmp
loopne
pop
mov
pushf
es
push
nop
add
lcall
sub
aam
jbe
xchg
pop
inc
xor
jne
test
stos
jns
sbb
mov
and
pop
jns
push
cmpsl
in
cwtl
mov
cmp
xchg
out
jno
les
jns
and
mov
sub
popa
cmpb
bound
aam
movsb
add
push
das
pop
cmove
ljmp
shlb
je
sub
cmpsb
movl
cmp
icebp
mov
outsb
or
outsb
sbb
sbb
icebp
nop
cmp
and
mov
cmp
cmp
sbb
jl
pop
mov
and
mov
js
enter
clc
push
jne
xchg
mov
inc
adc
pusha
cmpsl
in
or
pop
aam
push
lea
add
pop
movb
sbb
clc
enter
hlt
or
in
or
lahf
and
pop
nop
cmpsl
std
mov
pop
or
lret
xor
push
xor
add
shlb
loopne
sub
aas
jmp
lcall
pushf
mov
popa
mov
aam
or
aad
push
or
sub
or
sarb
cmp
jne
dec
call
mov
or
xor
jge
iret
in
jnp
pop
adc
pusha
sti
cmp
clc
jne
insl
in
sub
inc
add
sub
je,pt
mov
add
lock
push
or
mov
fcoms
dec
mov
cmp
jle
arpl
xchg
repnz
or
xlat
xor
pop
jo
rol
push
sub
loope
pop
aas
outsl
jo
test
or
mov
scas
pop
testl
shr
mov
adc
push
cwtl
adc
loop
ret
adc
push
cs
and
or
shr
jnp
popf
test
jg
test
dec
push
mov
dec
into
add
fstps
insl
adc
or
add
sbb
into
or
shrb
subb
test
test
pop
mov
dec
dec
sbb
inc
es
aam
int
jne
sarb
add
xor
daa
out
orb
add
push
imul
pop
loope
fwait
lods
cmc
sub
and
and
mov
fistpl
push
orb
cmc
and
orl
inc
xchg
outsb
xchg
cmp
xchg
into
pop
push
mov
inc
ja
and
jl
popa
adc
mov
mov
out
or
sbb
mov
and
sub
mov
clc
in
mov
xchg
lea
es
and
jp
pusha
cltd
fsubrs
iret
xor
pop
mov
aam
add
jb
rorb
xchg
jge
mov
cmp
shll
push
sbb
out
sbb
sbbl
add
ja
inc
and
loop
dec
mov
xor
je
pop
or
and
mov
push
cwtl
pop
or
mov
aaa
and
mov
jne
rcll
xchg
dec
add
in
shr
loope
fs
pop
mov
add
push
adc
fwait
cmp
lods
pop
and
or
inc
add
adc
inc
xchg
ljmp
cli
cmp
jg
sbb
lea
mov
imul
add
mov
cmp
jle
adc
dec
and
cmp
repnz
outsb
aam
inc
sbb
add
or
adc
mov
mov
test
adc
mov
scas
pop
fidivl
pushf
xchg
aad
sbb
stos
sbb
dec
add
adc
sub
and
flds
outsl
and
pushaw
adc
add
mov
mov
sbbl
add
inc
jg
test
push
add
cmp
jl
push
lea
gs
jo
or
js
pop
imul
lea
and
push
fidivrl
sub
sbb
inc
mov
mov
sub
or
jecxz
sub
sub
aas
mov
int3
cmp
xor
ficoml
mov
leave
adcl
or
pop
jl
les
les
add
cmp
ds
mov
xor
mov
mov
dec
pop
add
mov
inc
inc
sbb
rcll
lar
mov
mov
cltd
pop
mov
adc
dec
gs
adc
add
add
sub
loop
adc
andl
jl
xchg
shll
sub
hlt
and
inc
mov
xchg
scas
jbe
mov
dec
adc
mov
dec
xchg
in
push
js
inc
adc
mov
ljmp
aaa
cmc
js
adc
or
roll
shlb
jp
scas
mov
xor
loop
mov
inc
js
cmpsb
faddl
mov
insb
xchg
aam
dec
jns
stos
jbe
scas
mov
icebp
test
lea
xchg
mov
test
cs
push
mov
sbb
shrb
outsl
push
mov
jne
test
and
int
outsl
loope
sub
sub
cmp
clc
or
pop
adc
scas
xchg
mov
sub
rolb
or
mov
mov
stos
call
xchg
insl
mov
xor
lea
push
cli
xchg
mov
cmp
sbb
inc
lea
out
cwtl
lock
leave
adc
or
mov
xchg
inc
jmp
dec
jle
aaa
cmp
push
or
sbb
in
push
inc
or
mov
and
jge
loopne
or
adc
jle
or
mov
clc
lcall
out
and
lret
xor
es
shl
add
mov
rorb
sbb
jg
or
xor
inc
mov
sub
dec
add
ret
insb
neg
push
jo
cmp
dec
ret
or
push
inc
push
inc
sub
outsl
or
jnp
inc
jo
pushf
pop
push
dec
addb
test
xchg
push
pop
inc
push
pop
xor
in
mov
mov
xchg
mov
sbb
popa
xor
mov
and
xchg
cmp
push
xor
mov
nop
mov
push
push
xor
mov
test
or
add
shlb
cltd
mov
bound
insb
pop
pop
sarb
lea
mov
aam
xor
jl
or
les
or
lret
jl
xor
adc
pop
leave
or
pop
dec
dec
loope
add
ljmp
xchg
jo
mov
xlat
fists
outsb
mov
cs
scas
movsl
inc
add
or
testl
push
push
cmp
adc
sti
incl
and
js
xchg
cs
movl
jne
xchg
pop
dec
test
xchg
xor
adc
aad
cs
adc
loope
sub
test
cmp
or
aad
loope
loopne
cwtl
mov
inc
jecxz
mov
adc
mov
jmp
js
xor
nop
sbb
adc
mov
pushf
lret
pop
sub
xchg
fbld
lahf
xchg
dec
out
clc
inc
push
push
test
movntps
pop
nop
orl
push
loopne
shlb
lcall
add
pop
mov
not
push
leave
lock
mov
lcall
mov
daa
inc
mov
pop
adc
pushf
pop
pop
sub
xchg
xchg
pop
iret
xchg
leave
aaa
inc
fldl
jle
mul
pop
clc
popa
inc
inc
add
xchg
imul
repnz
scas
mov
fcoms
loope
jne
push
cmc
das
cmp
xchg
jl
sub
nop
je
aam
pop
jb
test
xor
ljmp
mov
pop
dec
push
lock
fildll
sub
sbb
imul
xor
dec
mov
mov
sub
in
mov
lret
pusha
pushf
push
call
inc
roll
sbb
sbbb
repz
adc
add
and
loopne
test
shr
cmp
jbe
das
inc
sbb
aam
add
push
or
mov
fs
adc
add
cld
lea
mov
cmp
dec
inc
scas
dec
dec
and
jge
ret
nop
add
fsub
dec
fcmovnb
xchg
les
mov
dec
ret
mov
push
push
cmpsb
or
sub
mov
dec
dec
aam
inc
adc
sub
push
sub
pushf
mov
enter
and
add
or
cwtl
add
add
adc
add
and
push
xchg
mov
cmc
ret
bound
sbb
enter
sub
cld
test
addb
add
dec
movsb
push
andb
stos
fnstsw
sti
aaa
mov
cwtl
push
rclb
pop
jle
andb
imul
lods
add
push
lea
sbb
push
inc
pop
dec
shlb
pushf
push
ds
cmc
xchg
mov
addl
cmp
jmp
lea
mov
cmp
jl
aas
repnz
and
ret
cs
clc
dec
mov
pusha
lds
lea
mov
pushf
mov
inc
add
dec
sbb
and
and
test
or
push
xchg
sub
jnp
or
mov
popa
shr
pop
dec
fs
sub
inc
or
shlb
push
inc
jbe
and
mov
outsl
mov
cmpsb
pop
pop
out
leave
push
dec
add
xchg
and
mov
cwtl
xchg
cmp
mov
and
mov
push
fimuls
xchg
adcb
or
or
push
push
inc
jmp
and
test
dec
test
ret
adc
adc
ret
pop
adc
mov
xlat
adc
mov
xchg
xor
outsl
ds
pop
cmp
setbe
scas
jae
xor
or
out
aad
inc
and
or
mov
sbb
pusha
out
inc
punpckldq
sub
mov
aam
add
mov
lods
xor
std
outsl
mov
dec
mov
adc
xor
lcall
arpl
mov
rcll
mov
imul
dec
out
sub
add
insb
out
loop
test
inc
insb
js
repz
or
or
sarb
nop
enter
in
and
hlt
ret
push
enter
idivb
push
inc
arpl
dec
insb
adc
add
or
pop
or
inc
adc
mov
nop
mov
jecxz
out
les
les
inc
cmp
and
icebp
pop
pusha
pushf
adc
out
adc
inc
push
sbb
in
subl
push
scas
dec
out
cmp
ret
push
inc
add
adc
and
in
adc
cmp
scas
jg
pop
mov
mov
jns
fst
movsb
or
pop
icebp
jo
adc
adc
aam
mov
ljmp
in
rclb
cli
pusha
movsl
loope
lea
push
mov
and
into
sub
dec
push
xlat
push
call
daa
push
mov
pop
xchg
dec
sub
inc
ud0
gs
mov
movsb
jmp
mov
clc
push
fcomip
cmp
sbb
int
or
stc
repz
call
mov
pop
or
je
pop
add
add
lahf
pop
int
and
jmp
adc
movsb
enter
pushf
and
shrb
add
movl
mov
or
or
js
inc
push
mov
jns
cmp
adc
enter
pop
sub
push
inc
repz
xchg
cwtl
mov
xchg
mov
pop
jg
jo
mov
repz
pop
jp
sub
sbb
in
lods
dec
idiv
lds
das
int3
mov
js
dec
sbb
dec
inc
xchg
data16
dec
sub
and
adc
cmp
push
notb
jnp
add
lea
lcall
and
out
rcrl
and
mov
jmp
emms
mov
jge
xchg
mov
stc
add
or
je
push
fsubrl
fdivrl
fiadds
stos
dec
xlat
scas
mov
cmp
mov
inc
cli
imul
cwtl
test
fwait
lds
sar
scas
push
mov
stos
sub
push
je
mov
pop
xchg
lret
push
and
sub
bound
daa
push
jno
adc
cmp
imul
xor
dec
dec
sub
jmp
xor
jne
mov
inc
inc
sbb
je
mov
jb
hlt
mov
add
push
jmp
push
xorb
je
sbb
ficomps
fs
sub
add
or
jnp
push
cmp
sub
leave
dec
sub
adc
inc
sub
sbb
sub
idivb
mov
incb
jns
add
dec
or
jle
adc
or
data16
and
or
leave
push
xchg
inc
rolb
shr
mov
pop
rcr
mov
and
lock
fcoms
add
jecxz
xlat
dec
dec
and
dec
ja
jbe
adc
hlt
out
lea
mov
push
negl
dec
das
sub
cld
cli
cltd
cmp
adc
cld
in
mov
mov
add
lea
mov
lods
hlt
xor
adc
pushf
mov
xchg
mov
push
sarl
out
dec
clc
dec
mov
sub
push
adc
scas
jle
cmp
mov
sbb
add
push
bound
outsb
addr16
outsl
imul
int3
mov
adc
and
add
pop
or
and
pop
insb
test
cmp
aaa
fs
dec
or
inc
test
testb
add
in
inc
or
je
xor
cmp
pop
jo
or
cli
cld
gs
and
loopne
lock
cmp
push
pop
clc
mov
adc
mov
sbb
cmp
xchg
push
jae
inc
dec
leave
mov
mov
fld
popf
push
add
call
adc
clc
xor
inc
sbb
adc
jnp
aaa
sahf
cmp
inc
mov
mov
adcb
jmp
jo
je
dec
push
inc
cld
icebp
adc
add
les
and
popl
insb
cld
jle
addb
jo
mov
adc
sub
loopne
dec
inc
fsubl
lods
or
jo
js
or
pushf
adc
add
sbb
add
xor
aas
jecxz
xchg
mov
push
mov
repz
dec
or
mov
mulb
mov
push
je
dec
push
mov
shr
xor
jmp
add
dec
jne
mov
add
cmp
enter
movb
sub
cmp
fsubs
mov
and
or
je
mov
push
insb
daa
ret
xchg
flds
jne
fs
mov
push
add
and
fstl
dec
lock
sub
dec
mov
dec
pop
clc
and
rcr
hlt
sub
cmp
jl
rol
rcrb
mov
icebp
xor
xchg
mov
inc
bswap
lea
fprem
mov
cmp
ja
mov
sub
or
and
or
ficoml
xchg
lock
arpl
daa
scas
shlb
xlat
mov
popa
lea
inc
jmp
mov
adc
push
iret
movsl
loopne
cmp
out
std
shll
xor
sub
popa
repz
add
out
add
mov
cmp
pop
jo
and
cmp
sbb
mov
popa
sub
mov
jbe
and
movsl
mov
inc
out
or
pop
stc
pop
or
cli
sub
int3
xor
and
adc
nop
or
sbb
sar
mov
dec
fcompl
xchg
xlat
into
and
repz
mov
inc
cmp
jae
cmp
xchg
outsl
pushf
push
scas
inc
idivb
and
lea
jle
adc
cli
repnz
icebp
push
mov
test
pop
mov
jnp
out
or
adc
xchg
xabort
mov
cmp
popa
xchg
movsl
sub
xacquire
cmp
xor
aas
pop
adc
mov
das
mov
popf
inc
or
push
cld
sub
push
adc
lds
int3
push
add
pop
cld
cmp
sbb
dec
and
cmp
std
test
rclb
xchg
and
inc
cmp
rcrb
icebp
arpl
int3
pushf
adc
shlb
sti
or
mov
lret
jg
or
aam
push
cld
aas
iret
pop
or
aaa
roll
or
repz
outsl
add
sub
movb
das
push
jbe
into
and
fsubrs
cmp
test
cmovnp
test
push
mov
movsl
pop
mov
mov
push
jp
outsb
sub
mov
dec
mov
sub
mov
aam
add
inc
mov
add
testl
and
test
mov
lret
dec
or
mov
dec
imul
rep
add
int3
xor
mov
clc
and
rclb
and
in
xor
xor
or
test
mov
inc
mull
cmp
subb
testb
xchg
push
mov
add
mov
testl
dec
insb
or
cmp
cmp
nop
push
aas
mov
int
dec
ja
movsb
dec
pop
mov
int
sub
es
add
jmp
dec
shr
in
jl
hlt
aad
sbb
mov
jle
jge,pt
sub
or
adc
lods
dec
or
or
pop
xchg
mov
sbb
inc
xchg
mov
dec
addr16
sbb
dec
dec
movsb
or
sub
orl
pop
nop
jle
cs
cmp
ja
es
fstpt
add
jne
rorb
sub
inc
lds
jbe
mov
or
inc
adc
int
lea
in
jmp
or
mov
aas
jne
cmp
or
fsubrp
or
xor
mov
xor
stos
cmc
inc
rcll
sub
mov
aad
adc
dec
mov
dec
or
repz
lcall
sbb
jnp
xchg
jp
xor
test
pop
std
inc
xor
push
ret
es
sub
sub
daa
push
mov
push
or
pop
and
sub
cltd
push
mov
mov
and
adc
lahf
inc
and
add
inc
inc
int
pusha
int3
ja
or
mov
push
sub
lods
es
in
repz
dec
adc
mov
outsl
or
push
insb
pop
inc
std
add
and
std
shrl
stc
adc
xor
add
jle
test
paddb
xor
sbb
cltd
hlt
push
daa
mov
pop
rcr
stos
test
mov
je
push
sbb
mov
jae
cmpsl
shlb
iret
aas
push
add
enter
enter
in
int3
xor
inc
adc
pop
and
mov
cmpsb
mov
xor
pop
scas
neg
jmp
xor
or
xchg
dec
dec
out
rcrl
dec
aas
ret
xchg
es
xchg
fimull
jecxz
xor
xchg
xchg
ret
pop
clc
notb
sbb
cmpsl
adc
xchg
jno
insb
pop
jne
or
mov
les
push
cmpl
jne
push
movzbl
sbb
dec
in
adcl
add
cwtl
mov
xlat
das
mov
mov
or
and
mov
add
and
dec
lock
lret
fistl
xchg
pop
cmp
in
pop
sbb
inc
sbb
add
sbb
pop
push
sbb
in
lods
pop
mov
mov
adc
lea
xchg
xchg
push
adc
mov
adcl
jb
add
jb
add
push
popa
idivl
dec
jmp
dec
sub
movsb
loop
adc
or
scas
inc
mov
pushf
jmp
xchg
adc
test
sub
sbb
cmp
xchg
push
rolb
jmp
or
add
push
dec
jle
xchg
and
jne
pop
ljmp
xchg
xor
sub
sub
add
dec
loop
lea
pop
repz
and
popf
push
inc
test
clc
push
decl
leave
aas
dec
out
in
mov
outsb
movq
je
fdivrl
lock
jnp
scas
aam
scas
hlt
pop
or
mov
cmp
jne
les
or
xchg
push
dec
mov
xor
mov
sbb
je
jmp
mov
dec
cmp
sub
push
dec
mov
lock
pop
cmp
or
sbb
sbb
int
xor
jno
test
and
xchg
subl
scas
nop
cs
out
leave
xor
jno
and
loop
daa
dec
mov
dec
push
fldenv
and
inc
xchg
out
pop
xor
jle
cmp
dec
jl
push
xchg
dec
and
shlb
jg
xor
or
jl
sahf
movsl
cmc
and
fdivl
pop
adc
inc
enter
dec
adc
fnstenv
sub
clc
dec
inc
lahf
mov
je
and
inc
je
inc
out
xor
add
lahf
out
mov
sbb
or
cmc
lods
jg
enter
decb
xchg
inc
push
loope
movsb
push
dec
inc
inc
cld
sti
rclw
and
out
enter
pop
mov
mov
mov
std
lcall
xchg
mov
in
and
mov
xchg
scas
negb
pop
stc
inc
pop
jne
xor
lea
xchg
movsl
add
cld
dec
add
loope
daa
imul
pop
pmuludq
or
icebp
pop
dec
push
and
cwtl
scas
ja
out
out
lods
xchg
rep
test
out
pop
std
sbb
out
mov
dec
and
jns
inc
sbb
bound
jno
dec
jb
mov
add
push
fs
adc
xor
fsts
les
lock
fsts
sub
mov
jle
or
pop
or
push
lea
sbb
cmpsb
in
shll
add
movsb
lret
or
pop
jae
movsb
push
jmp
cmpb
or
fs
or
add
adc
fmull
xchg
test
dec
test
pop
cmp
imul
orl
adc
push
jae
inc
aam
mov
int3
nop
scas
sub
lcall
aad
or
jmp
mov
dec
aad
shrb
rolb
mov
addl
xchg
sbb
outsb
mov
or
add
xchg
add
clc
sarl
sahf
ss
push
adc
push
lea
cwtl
sub
jge
lret
jnp
mul
push
ret
add
push
lret
mov
add
ret
add
dec
jne
rclb
lahf
push
mov
or
mov
out
add
push
testl
or
dec
and
dec
inc
decl
inc
add
in
cmp
in
dec
or
mov
cmc
sbb
movl
sbb
leave
aad
repnz
pop
or
or
add
fidivrl
fsts
pop
ds
movsl
push
loope
and
sub
and
incl
gs
bswap
je
dec
sub
ljmp
jno
push
jge
pusha
mov
sarb
ret
adc
dec
dec
mov
push
push
andl
xor
pushf
sub
or
jle
xchg
push
jle
dec
pusha
xorb
push
roll
adc
jp
or
push
sarb
cli
mov
inc
das
ret
stos
xchg
loopne
mov
aam
test
mov
adc
sbb
cmp
xchg
sbbb
xor
xorl
adc
jl
nop
pop
sahf
lods
scas
outsb
daa
movb
dec
in
movsb
inc
inc
push
push
lret
or
arpl
pop
push
sbb
xlat
xor
xchg
adc
stc
xor
lret
imul
jb
adc
dec
sub
fmuls
and
insl
nop
std
push
data16
adc
sbb
dec
das
pushl
push
inc
ss
out
sahf
sbb
and
jno
bound
or
cmp
sbb
pop
test
clc
sahf
xlat
add
and
mov
mov
adc
movsl
ds
xor
pop
jmp
xor
notl
dec
ja
pop
lea
xchg
hlt
add
rclb
into
fs
daa
js
adc
sub
push
mov
adc
cmp
cs
jl
xlat
pushf
int3
mov
pop
adc
sub
inc
adc
dec
xor
pusha
push
dec
jle
dec
pop
gs
or
orl
faddl
xchg
daa
cld
mov
sub
xorb
add
sub
pop
repnz
add
fnstcw
pop
lret
adc
xchg
dec
pop
je
test
das
xchg
cwtl
mov
mov
pop
or
lds
sub
out
xchg
mov
in
inc
sbb
mov
aad
ret
push
xchg
jae
add
dec
jne
insl
sub
leave
roll
adc
stos
js
rorb
icebp
add
inc
or
push
das
pop
pop
inc
or
xor
sarl
mov
cmp
in
scas
cmp
and
xchg
test
jl
xlat
aam
cli
pop
push
xor
xor
cmp
ret
mov
hlt
sub
jbe
imul
les
and
sub
inc
dec
dec
jge
mov
sub
clc
insb
mov
sub
push
adc
add
shrb
loopne
or
jae
jmp
mov
mov
or
jmp
movsb
adc
roll
adc
mov
ret
xorb
xchg
push
inc
sub
and
faddl
std
ret
aas
fs
inc
sub
dec
bound
pop
out
sub
lret
sub
dec
je
les
hlt
sarl
imul
adc
call
push
ds
aas
repz
fnstcw
adc
mov
adc
add
pushf
pop
xor
inc
xchg
sub
in
daa
lds
cmp
xorl
add
pop
add
sbb
and
cmp
sub
loop
out
jle
adc
jl
scas
cmpsl
xor
int3
or
ss
test
mov
mov
mov
adc
adc
adc
or
push
je
add
mov
lahf
das
xor
or
push
fldcw
push
rcr
or
mov
push
mov
fwait
xchg
or
adc
mov
into
and
or
sbb
dec
adc
ds
xchg
shr
and
insl
imul
and
jns
dec
or
inc
je
xor
jecxz
lock
xchg
mov
in
add
loopne
lods
jno
sub
mov
mov
mov
dec
jo
mov
jns
mov
fs
sub
andb
xchg
mov
arpl
shl
jae
lods
mov
dec
or
inc
push
arpl
sub
xchg
adc
sbb
add
add
xchg
nop
or
mov
cmp
dec
jo
adc
pop
test
popl
les
movsb
xchg
push
add
add
bound
lock
icebp
xor
jge
or
addb
roll
sbb
mov
mov
dec
shl
movsb
sub
das
movsb
ffreep
cld
push
xchg
fisttps
or
sbb
cltd
cwtl
mov
jg
add
cwtl
xchg
mov
or
jmp
or
xchg
sub
movsl
idivb
push
cmovge
jae
sbbb
pusha
cmp
sar
test
push
insl
add
es
adc
xchg
rolb
sbb
mov
and
sbb
mov
les
aad
mov
out
or
inc
mov
pop
cwtl
cmp
adc
gs
inc
ss
cmpsb
xor
jno
sbb
push
in
add
outsl
cmp
lret
push
ja
jmp
sbb
sbb
cltd
or
dec
adc
sub
or
adc
and
or
stos
dec
call
ret
mov
mov
xor
xor
xorb
fdivp
clc
jb
addr16
dec
bound
jg
adc
sbb
cli
add
and
lock
or
inc
sbb
inc
cld
sub
fs
inc
push
jmp
nop
sbb
sbb
test
sub
push
ret
and
popa
xor
fmull
and
aam
mov
les
xor
pop
sbb
loopne
add
dec
xchg
fisttpll
mov
popf
adc
sbbb
dec
xor
addl
inc
lods
incb
imul
sbb
dec
sbb
sub
xlat
imul
pop
lret
xchg
sbb
shr
outsl
nop
cmpl
out
roll
lock
push
add
jl
jb
andb
mov
dec
jmp
and
iret
int
das
test
test
add
or
adc
inc
in
aaa
dec
lock
sub
popf
lea
in
call
test
mov
lcall
sub
sub
cltd
adc
pop
hlt
jo
sbb
jl
push
sub
sub
jl
mov
test
notl
push
inc
mov
hlt
sbb
push
inc
adc
jp
out
dec
jne
lods
mov
mov
fisttpl
mov
sub
mov
popa
testb
lret
jge
sub
jb
pop
dec
pop
fs
mov
or
cmp
test
nop
add
test
and
and
or
mov
inc
int
mov
cli
adc
inc
mov
inc
add
sub
cli
cmp
shr
add
fucomip
jmp
push
mov
add
and
adc
aam
call
inc
or
pop
jbe
sbb
adc
aam
aam
test
mov
clc
ficoms
dec
xlat
dec
mov
fwait
aaa
and
adc
repnz
scas
test
xchg
jb
cmp
std
or
out
lea
mov
nop
dec
in
bound
adc
or
fs
sub
insb
repnz
mov
sbb
xorb
jno
xor
or
loopne
aam
mov
sahf
mov
adc
adc
xor
or
or
adc
adc
xor
sub
jmp
mov
or
xchg
push
xor
dec
movups
dec
fcmovb
int3
ret
adc
lock
insl
or
and
enter
xor
shlb
jmp
xchg
mov
jmp
pop
or
clc
pop
test
loop
adc
jmp
inc
push
pop
xor
cmp
or
scas
sub
sub
push
sub
lahf
adc
or
add
sub
clc
adc
dec
sahf
lock
icebp
add
imul
enter
aas
incb
mov
call
mov
js
adc
or
imul
push
adc
push
fadds
loope
or
sbb
push
adcb
orl
adc
mov
sub
jb
fisubs
mov
pop
stos
xor
adc
clc
xor
or
dec
adc
cmp
jo
call
jbe
or
das
push
and
xchg
xchg
jnp
les
or
sbb
and
inc
shrb
shlb
js
cmp
cmp
in
jmp
sbb
sub
xor
sub
add
loopne
add
and
decl
and
subb
fs
jae
jmp
outsl
adc
cmp
jb
dec
pop
xor
adc
fistl
sub
or
mov
repnz
fisubrs
out
std
inc
fcoms
pop
dec
pop
sub
pushf
jmp
jge
inc
out
adc
mov
mov
pop
cmpb
int3
das
or
and
ds
or
xchg
mov
roll
push
pop
xor
je
inc
mov
out
push
out
hlt
std
in
add
and
or
shlb
inc
and
punpckhwd
movb
mov
sbb
sub
adc
jecxz
jg
adc
jmp
push
push
or
stos
notb
icebp
adc
pop
jl
or
xchg
jo
xorl
popw
cmp
test
ljmp
xchg
outsb
scas
imul
stc
and
pop
push
and
mov
sub
shrb
adc
insl
pop
push
aaa
std
mov
sub
push
pop
inc
sub
add
je
and
mov
sbb
xor
or
jle
hlt
stc
scas
lock
pop
dec
in
push
push
cmp
aas
lock
insb
lods
lock
sbb
and
or
mov
addr16
cld
sahf
adc
sub
mov
adc
jns
sbb
xchg
adc
xchg
les
sub
hlt
outsl
ja
nop
lock
stos
mov
xchg
dec
scas
fldl
jl
pop
and
rclb
out
xor
adc
cmpsl
clc
loop
sbb
xchg
rol
xchg
adc
and
add
das
lahf
xor
xchg
cli
jl
xchg
jne
pop
orl
pop
pop
xchg
sub
cmp
pop
adc
scas
mov
pop
mov
push
sbb
or
xorb
inc
xor
jmp
xor
jne
mov
sub
jnp
sar
icebp
jbe
or
or
adc
mov
mov
rcrb
cmp
cmpsl
and
lret
aam
in
ret
je
add
cltd
rorb
cmp
dec
xor
test
inc
pop
adc
push
xor
test
lds
inc
push
mov
xor
sub
xchg
inc
stos
dec
cmp
sbb
push
scas
mov
xchg
iret
or
mov
insl
fs
paddusw
or
sbb
and
mov
imul
inc
pop
jmp
call
dec
pop
xchg
movsb
out
shrb
cmp
or
loope
xchg
and
jae
add
sub
push
sbb
push
sbb
arpl
mov
sub
adc
int3
push
adc
dec
xor
add
jnp
add
sub
xchg
push
pop
cmpsl
test
and
mov
enter
sub
or
pop
sbb
fistl
inc
dec
cmp
inc
adcb
repnz
pop
out
dec
cmp
push
daa
pop
sbb
adc
data16
add
dec
and
mov
sbbb
adcl
rcr
shll
shrl
push
movsl
xor
sbb
test
mov
lods
and
inc
lret
xchg
push
test
je
jb
push
je
js
iret
mov
adc
jo
or
cmpsl
or
lods
lock
inc
adc
cmpsl
jl
jmp
xchg
push
popf
scas
leave
or
fs
cld
fucom
mov
sbbb
mov
push
cli
xor
lea
mov
insb
push
dec
mov
stc
test
inc
pop
fisubrl
add
lret
clc
inc
sub
rorl
add
sbb
mov
mov
sti
mov
aas
jge
xchg
mov
shll
dec
mov
sub
add
shlb
push
dec
xor
ret
imul
pushl
ret
inc
push
add
aas
or
jne
pop
nop
adc
mov
push
mov
mov
fld
dec
mov
push
mov
dec
pop
stos
pop
into
lcall
add
lahf
xchg
mov
outsl
xchg
nop
or
or
mov
movsb
mov
inc
push
push
subb
xchg
or
mov
xchg
inc
or
add
sbb
adc
in
outsl
push
daa
sti
jmp
xchg
shrb
pushf
mov
lods
stos
mov
enter
xchg
jmp
fcomps
mov
mov
ret
add
xor
enter
repnz
sub
and
and
shlb
cs
nop
js
and
sub
add
aas
and
mov
hlt
pop
in
popa
push
shrb
push
jle
shll
pop
inc
inc
add
and
sub
sub
sbb
xor
and
inc
pusha
das
mov
and
mov
cmpsl
in
mov
clc
icebp
mov
call
inc
ja
imul
lcall
nop
inc
ret
xor
out
sbb
decl
xor
xor
imul
xchg
adc
sbb
ds
push
ret
sbb
add
out
aad
or
sbb
aas
imul
sub
inc
pop
or
push
sbb
sahf
aad
or
or
and
shll
pop
packssdw
jmp
sub
cmp
imul
fs
mov
inc
in
iret
sub
fcoms
shrl
rclb
cmp
mov
jo
test
sbb
mov
push
sub
hlt
sbb
inc
dec
adc
sbb
sub
sub
or
xor
push
cmpsb
sub
outsb
repnz
or
rolb
jb
call
sbb
addr16
ret
sbb
mov
pop
cmp
push
ret
push
or
sbb
movsb
mov
add
pop
outsb
mov
mov
or
adc
outsl
inc
cmp
scas
and
and
adc
cmp
mov
mov
xor
jne
or
add
adc
pop
mov
mov
cmp
ja
pop
decb
mov
fmuls
dec
lea
sbb
stos
sbb
sbb
inc
mov
jmp
rolb
sub
jb
inc
mov
sub
adc
mov
adc
addr16
push
cmp
lods
adc
jne
ljmp
cmpsl
inc
scas
dec
scas
xor
jbe
rclb
inc
cmp
andb
or
aas
dec
comiss
mov
sti
imul
jae
mov
mov
fs
aam
scas
andb
xchg
push
push
cmp
aam
add
daa
sub
sbb
rcl
test
insl
es
mov
mov
bnd
and
xchg
dec
stos
dec
inc
xchg
cmpsl
pop
xchg
cmp
jle
adc
sbb
pop
lcall
add
movb
lods
leave
dec
mov
mov
cmp
dec
adc
cmp
mov
rolb
aas
mov
dec
scas
dec
dec
or
repnz
inc
stos
lds
movsb
adc
sub
shll
daa
xor
ss
js
inc
adc
add
rcll
and
shlb
rep
pop
inc
mov
cmp
inc
inc
mov
lret
add
mov
inc
lds
movaps
push
adc
sbb
int
pop
jne
idivl
push
loopne
dec
xchg
and
cli
les
xchg
gs
sbb
inc
adc
inc
cmp
adc
or
pushf
out
mov
jns
sub
mov
in
shrb
pop
jge
lods
cmpsl
rcll
inc
adc
mov
inc
push
ja
call
fldt
fcomps
add
adc
enter
push
pop
andb
clc
aas
jmp
inc
inc
adc
adc
jo
data16
jmp
push
fldln2
daa
leave
inc
icebp
dec
pop
fiadds
sbb
mov
sbb
decl
sub
cmp
jge
ret
add
and
or
adc
mov
fmuls
xor
mov
cmp
fwait
adc
jne
mov
fildll
xor
mov
sub
aas
ds
jp
fmuls
cld
mov
pop
pop
in
inc
orl
dec
push
cli
mov
jg
cwtl
mov
int3
add
cmpb
out
loopne
mov
sbb
sub
push
jo
add
adc
imul
cmpsl
jl
cmc
push
pop
push
popa
xchg
pop
sbb
jecxz
and
xchg
xchg
test
int
mov
cmp
and
sbb
add
dec
sub
imul
push
movsb
cmp
fs
and
push
dec
bound
cmp
mov
jmp
cmp
and
es
inc
push
adc
inc
pop
enter
or
xchg
fists
or
jae
xor
sub
cmp
xor
lahf
mov
idiv
in
inc
adc
clc
jne
lcall
dec
cmp
mov
or
sbbl
push
insb
lods
sub
cltd
inc
mov
dec
jg
int3
sbb
or
and
lods
scas
and
pop
dec
jb
mov
or
dec
adc
cmp
inc
or
inc
inc
stc
sbb
fwait
dec
clc
int3
mov
xchg
sub
test
test
dec
clc
iret
mov
mov
and
pop
inc
repnz
lods
aaa
shlb
add
loope
xchg
mov
dec
and
xchg
sbb
or
leave
ja
adc
nop
pop
xor
adc
push
inc
jb
popa
jns
data16
pop
pop
add
jne
or
or
sti
sbb
pop
sbb
in
sbb
and
push
ret
test
jmp
aas
push
lods
cld
or
adc
dec
and
adc
mov
inc
imul
dec
cmovb
mov
enter
add
test
or
filds
or
jo
inc
sub
stos
inc
lret
adc
jns
lds
mov
pusha
mulb
xor
je
xchg
and
push
adc
inc
and
incl
push
adc
mov
jbe
shll
inc
or
shll
jne
or
or
or
lock
jo
mov
push
sar
scas
jg
dec
sub
jg
lock
movsb
adc
pop
adc
xor
subb
inc
jae
data16
push
loopne
test
and
sub
ja
mov
xlat
stc
sbb
ja
pushf
imul
leave
mov
je
sbb
stos
test
sarl
cmpsb
mov
and
sbb
mov
js
inc
sbb
jg
or
cld
in
add
push
sub
add
sub
sahf
push
mov
mov
adc
mov
pop
xchg
mov
ja
rclb
and
das
adc
inc
cmpsb
sbb
addb
pop
pop
pop
add
es
cmp
andb
insb
test
orb
leave
dec
test
cs
add
push
inc
dec
cmp
ja
and
mov
out
out
pushf
je
scas
in
stc
test
add
adc
push
cltd
or
jmp
pop
mov
dec
sahf
leave
aaa
dec
inc
mov
pop
int3
adc
sbb
or
pop
or
or
aam
jecxz
mov
mov
dec
les
inc
enter
cmp
jb
das
inc
push
test
and
cmp
lods
inc
test
add
xchg
mov
mov
or
adc
sub
push
rorb
out
inc
aad
loop
sbb
nop
lret
cmp
push
test
cmp
push
sbb
or
dec
mov
push
in
dec
add
pop
pop
mov
loopne
xor
pop
mov
cli
mov
andl
in
int
jnp
jno
inc
cmp
mov
or
stc
add
lods
dec
jge
fdivl
sti
mov
outsl
xchg
fs
push
nop
lock
pop
ljmp
dec
test
int3
jns
lret
loope
adc
ja
dec
int3
stos
lds
divb
hlt
lea
lret
call
iret
fwait
push
mov
mov
wbinvd
mov
jo
push
mov
lahf
mov
push
and
xchg
bound
push
cld
sub
jb
inc
ret
mov
fisubrs
ficompl
or
add
xchg
aaa
pusha
pop
scas
or
or
inc
mov
and
scas
pop
jmp
mov
adc
neg
cltd
sbb
inc
add
or
call
lock
arpl
mov
test
pop
pusha
lods
fldcw
lods
adc
mov
push
bound
loop
jne
cmc
call
pop
and
cli
push
lret
mov
dec
cmp
into
push
clc
ret
and
jle
xor
dec
and
popa
push
outsb
daa
je
scas
insb
and
arpl
mov
or
mov
jmp
xor
cld
nop
sub
fildll
insb
pop
inc
lock
cs
cmpsl
cmp
or
std
ljmp
sete
push
aaa
dec
pop
sub
sbb
mov
pop
mov
inc
push
imull
jmp
mov
loopne
cmpb
jbe
adc
or
jae
ds
add
or
and
decl
xchg
fsincos
mov
pushl
and
sbb
lods
inc
imul
or
push
and
call
cltd
sub
or
pushf
lea
pusha
and
push
lods
ja
loopne
hlt
xor
jl
mov
fnstenv
bound
les
sub
adc
test
mov
and
test
xchg
repz
push
in
test
inc
in
daa
xchg
lock
adc
xlat
add
dec
es
maxps
fildl
pusha
or
add
int
arpl
aam
mov
push
cld
push
adc
mov
pusha
fs
daa
cmpsb
icebp
adc
imul
pop
pop
lods
bound
in
dec
clc
sbb
xchg
inc
arpl
ss
in
or
xor
mov
popa
push
hlt
jno
cmp
sbb
xor
inc
push
movsl
sub
cltd
dec
cmp
or
aaa
shrb
mov
iret
xor
dec
loopne
imul
push
dec
mov
enter
aas
inc
cmc
xchg
pusha
push
dec
pop
lods
and
hlt
sti
aad
add
adc
push
cmp
int3
leave
fdivrs
jl
sub
lea
xor
xchg
nop
adcl
test
cmp
pop
nop
and
sbb
test
mov
pop
test
and
cmpsb
mov
xlat
cltd
push
insb
sbb
mov
pop
mov
push
xchg
xor
and
adc
mov
or
and
or
int
mov
adc
inc
pop
push
insb
cs
dec
xchg
jge
in
mov
pop
out
insb
jp
push
lock
inc
and
sahf
fildll
mov
jl
nop
add
jne
jae
add
call
or
into
adc
jmp
loopne
inc
mov
adc
and
sbb
mov
and
test
or
dec
int3
daa
std
fldenv
enter
mov
bswap
pop
inc
roll
js
jb
je
cld
cmp
je
rep
stos
mov
mov
leave
js
and
pop
sub
ret
mov
rolb
in
push
pop
sub
loopne
push
push
push
push
arpl
xor
xchg
shlb
jecxz
inc
sbb
dec
add
mov
test
js
and
jnp
jnp
dec
sbb
arpl
pop
add
add
dec
cmp
fucompp
and
ja
mov
inc
mov
inc
mov
loop
pop
in
mov
je
sub
adc
mov
dec
sarl
in
cwtl
dec
dec
cmp
test
mov
loop
prefetcht1
and
loop,pt
and
sti
inc
pop
and
add
and
or
xor
xor
mov
lcall
shll
and
sbbl
shl
dec
rolb
loope
mov
cltd
or
inc
fs
cmpl
ljmp
jle
fisttps
dec
jne
repnz
push
mov
lea
cmp
je
or
inc
xor
loop
push
cmp
sarb
rcrb
out
fistpl
mov
enter
arpl
stc
ret
sar
repnz
push
rcrb
cmp
test
jmp
jmp
das
dec
and
cmpb
pop
push
pop
movsl
jl
pop
pop
movl
adc
dec
js
inc
dec
adc
rcll
clc
dec
popf
bound
xor
adc
inc
mov
pop
mov
mov
dec
pop
sbb
ror
call
std
iret
ja
xor
hlt
xchg
pop
or
push
test
pusha
inc
push
xor
push
cwtl
push
push
mov
mov
test
jl
xor
sbb
xchg
inc
popa
pop
mov
inc
adc
vmwrite
imul
add
adc
out
arpl
adc
or
xchg
inc
inc
out
out
and
or
dec
sarb
adc
xchg
lods
sbb
pop
dec
adc
into
pop
sbb
cwtl
repz
cltd
mov
mov
cmp
and
or
jns
mov
sbb
or
in
dec
rorl
sbb
inc
adc
sbb
inc
adcl
lock
and
arpl
adc
push
xor
les
xchg
popa
pop
jbe
lock
in
aam
rcrb
enter
shr
pop
hlt
or
push
add
repz
push
mov
addr16
pushf
inc
dec
or
je
test
fldl
sub
or
mov
shl
out
outsb
bound
adc
cwtl
sub
dec
imull
insl
adc
lods
fldcw
and
aaa
mov
lock
or
cmc
mov
mov
int3
adc
outsb
call
push
in
aam
jmp
adc
aam
cmp
push
lods
inc
xchg
push
mov
inc
add
outsl
cmp
push
and
inc
jmp
incl
mov
mov
adc
es
dec
shl
es
inc
data16
cmp
add
and
mov
inc
adc
pushf
push
add
xor
lods
mov
and
pop
mov
sub
loope
lcall
sub
popf
cmp
jae
cwtl
add
and
rcr
sbb
stos
mov
cmpsb
ljmp
movsb
adc
mov
add
lret
jne
jnp
or
mov
mov
xchg
add
mov
inc
repnz
xor
shl
les
lock
push
dec
push
dec
loopne
add
bndldx
jle
cmpsl
shrb
push
push
pop
lock
push
fdivrp
fstps
pop
les
push
fiaddl
ss
nop
inc
push
pushf
rorl
psubusb
xor
sbb
ror
cld
pop
mov
fmuls
push
cld
add
int
adc
push
dec
xchg
scas
mov
add
pop
add
sub
hlt
stc
in
or
scas
repnz
js
ret
xchg
mov
inc
cwtl
fdivr
push
cmp
test
scas
mov
dec
addr16
daa
jge
data16
inc
nop
popa
fs
adc
cmpsl
ss
and
cmp
mov
push
xor
push
int3
dec
push
inc
sub
mov
or
push
add
mov
hlt
xchg
adc
and
enter
call
pop
enter
pop
insb
mov
sbb
xchg
lods
fsubrs
scas
sbb
push
out
loope
cmpsb
and
mov
cmp
arpl
fildl
std
mov
mov
pop
les
mov
inc
push
mov
dec
push
mull
sbb
lahf
fbld
fs
xor
sub
lahf
jns
add
inc
nop
mov
and
test
in
and
test
lahf
jmp
ds
pop
sub
adc
std
or
mov
mov
dec
aaa
es
and
and
dec
fadd
cmp
es
insb
roll
jbe
inc
rorb
dec
ds
push
and
pop
mov
in
mov
lea
shr
or
rorl
les
cmp
pushf
les
mov
lcall
mov
xchg
imul
les
inc
mov
mov
fs
pop
lea
pop
adc
and
or
xchg
sarb
add
testb
add
out
je
push
imul
cmp
mov
ja
jo
popa
stos
jb
adc
inc
jmp
adc
sarb
popaw
in
insb
jnp
sti
mov
js
cltd
cmp
push
mov
adc
rol
or
fwait
push
inc
xchg
enter
push
and
daa
repz
pop
fldt
or
inc
loopne
je
outsb
jmp
inc
push
and
pusha
push
sub
bound
sub
mov
in
xor
sub
mov
sub
sbbl
inc
popa
sub
xchg
scas
les
fwait
jns
pop
jnp
push
lea
adc
dec
sub
sarb
or
in
decb
xchg
xchg
hlt
sub
jmp
aas
bound
fisubs
mov
add
adc
lods
jg
mov
adc
mov
or
mov
aas
xchg
mov
lods
pop
or
fs
fcoms
cmp
addr16
pop
dec
add
mov
sahf
pop
dec
lcall
sub
test
inc
pop
in
mov
movsl
add
mov
xchg
sbb
mov
sbb
push
lods
xchg
loopne
dec
fs
mov
push
sbb
xchg
xchg
pushf
mov
push
dec
int3
fidivl
mov
sub
xchg
leave
push
mov
inc
mov
sbb
jae
hlt
and
and
or
xor
aaa
test
loope
imul
sub
shrl
popl
sahf
sub
test
inc
insb
in
jl
imul
push
mov
stos
mov
imul
mov
pop
cmp
xchg
or
mov
imul
aam
mov
popf
mov
hlt
addr16
inc
jo
les
xor
icebp
jns
or
enter
xor
ja
inc
or
subb
shrb
fadds
xchg
push
sbb
outsl
inc
dec
adc
lods
daa
iret
mov
fsubrs
scas
or
cld
jns
insl
arpl
sbb
popf
ja
push
push
in
int3
pop
pop
pop
mov
pop
mov
sbb
mov
add
mov
movl
fs
fldl
hlt
adc
cmp
cmp
or
or
push
push
test
jo
mov
or
pop
test
inc
pop
and
mov
in
mov
jl
xor
and
test
cmp
or
push
add
leave
cmpl
or
loope
jmp
jae
pop
pop
lcall
cmp
cmp
hlt
sbb
push
jnp
icebp
or
popa
es
cmovs
insl
test
inc
adc
push
shrb
or
push
mov
scas
outsl
mov
out
cmp
lock
push
adcb
loop
push
dec
cmpl
inc
test
movsb
fidivl
inc
pop
test
add
into
sarb
xchg
xchg
or
dec
mov
hlt
sub
pop
dec
leave
hlt
inc
repz
jg
and
dec
xor
loope
lea
xchg
out
lods
xor
pop
add
mov
cmpl
fidivrs
mov
lahf
and
push
mov
xchg
lahf
arpl
xrelease
sbb
iret
lods
fistpl
in
add
stc
dec
testl
mov
jo
sbb
inc
mov
movsl
push
mov
inc
push
mov
add
outsb
in
pop
es
out
mov
clc
jle
arpl
dec
push
pop
in
cmp
hlt
fstl
xchg
jo
rclb
push
scas
int3
mov
push
test
and
daa
push
fcompl
mov
push
jno
clc
fcomi
aaa
push
cmp
xchg
adc
pop
fisubrl
push
jmp
popa
orb
or
push
mov
sbb
add
push
dec
inc
pop
pop
xchg
add
imul
adc
jmp
dec
mov
bound
jo
dec
pop
repz
mov
cmp
xchg
fcomps
xchg
jae
or
add
jbe
fs
sbb
xchg
mov
jg
jle
loopne
adc
lahf
clc
scas
dec
add
outsl
fadds
and
daa
imul
and
out
and
aam
sub
fsubl
push
xchg
xor
loopne
mov
inc
add
inc
rcr
adc
mov
in
sbb
push
dec
or
je
add
cmpsl
jp
pop
out
dec
jle
in
faddl
push
sti
fcmovne
in
mov
enter
sub
adc
and
call
jo
adc
cwtl
sbb
jbe
cmp
mov
mov
mov
pop
push
push
mov
cmpb
movsb
cmp
lds
mov
and
and
inc
xlat
sub
or
sbb
fldl
sub
push
jl
or
cmp
jne
ss
cmp
or
lods
jo
jmp
outsb
in
rcrb
mov
adc
or
andl
mov
fcoms
mov
mov
xchg
adc
cmpsl
fdivs
add
arpl
mov
arpl
mov
test
jne
and
shr
aad
or
clc
loope
das
mov
push
xchg
pushf
test
repz
movsb
push
jae
lret
cmp
xor
movsb
outsl
inc
and
pop
mov
mov
jle
cltd
xor
nop
idiv
mov
in
mov
adc
call
mov
add
rcr
adc
outsb
lcall
data16
rol
rcl
mov
pop
adc
pop
pop
sub
lea
mov
and
stos
popf
push
inc
repz
sbb
sahf
sub
ret
mov
and
inc
adc
cmc
bound
push
jnp
xchg
or
loopne
inc
mov
jl
or
or
stc
sbb
dec
cmp
ret
jno
je
jl
xchg
lods
stos
jne
fwait
icebp
lods
sub
sub
iret
and
mov
mov
cmpl
mov
or
mov
xchg
jl
inc
inc
andl
mov
andb
aad
lods
scas
icebp
add
sbb
lods
cmp
lret
pushf
lock
xchg
push
and
cmc
rorl
jae
andb
adc
pop
mov
xor
and
add
add
xchg
xor
test
xchg
mov
and
jle
pand
fdivrs
pop
sub
ljmp
les
ret
adc
sub
sbbl
movsb
xchg
push
lea
outsb
hlt
jle
and
cld
aam
andl
xor
les
sub
sub
sahf
dec
imul
cli
jecxz
dec
out
dec
push
jmp
adc
xchg
add
cmp
jg
lea
and
xor
or
cmp
aas
ret
aas
bound
pop
ret
adc
mov
aaa
push
fdivrs
and
out
mov
inc
loopne
test
cmpsl
sahf
leave
jmp
xchg
stc
cmovnp
and
fs
and
and
dec
cmc
mov
dec
fdiv
pop
jmp
mov
fmul
sbb
sbb
cmp
fists
adc
fdivs
aam
pusha
test
orl
push
sbb
jl
popf
sbb
in
insl
mov
in
nop
in
test
test
xchg
and
movsb
inc
out
adc
lahf
idiv
mov
clc
xchg
inc
fcoms
test
add
jmp
dec
inc
test
lea
ja
push
dec
dec
ja
imul
nop
push
ja
xor
mov
mov
shl
sbb
in
inc
hlt
cmp
push
push
pushf
lea
jbe
bound
pop
jnp
jb
mov
sub
push
jae
mov
adc
push
sub
cmp
mov
das
dec
sub
icebp
pop
fs
or
bound
inc
mov
cmp
nop
ds
xchg
repz
add
in
sbb
jns
adc
sub
dec
mov
in
das
push
in
adc
adc
and
push
ljmp
pushf
out
leave
in
cld
fistl
or
xor
mov
mov
adc
movsb
int
not
mov
mov
enter
sub
lea
cwtl
jl
ret
out
ds
jmp
or
enter
sbb
cmp
cmp
mov
add
inc
pushf
lock
mov
xor
push
inc
lock
xor
aaa
pushf
leave
lock
push
push
adc
jne
repnz
sbb
inc
cmp
ret
inc
push
aam
cmpsb
cmp
push
cmp
cmpb
jbe
outsb
adc
jmp
sbb
jae
add
jne
mov
sbb
push
adc
les
mov
adcl
and
lock
loopne
push
cltd
add
xlat
mov
sbb
adc
sti
stc
push
adc
xchg
jns
popa
je
mov
in
cltd
mov
sbb
bound
adc
sub
push
sbb
jmp
and
mov
add
jge
aas
std
sbb
loopne
adc
bound
pushf
dec
dec
loopne
repnz
xorl
sub
jmp
and
in
test
dec
enter
mov
lret
push
sbb
lret
sbb
shlb
mov
push
adcl
push
push
inc
into
and
push
rcrl
shll
mov
push
int
ret
rorb
inc
inc
fisttps
leave
test
and
cmp
enter
into
cmp
push
cmpsl
mov
addr16
fdivs
subb
fs
xchg
xlat
inc
aam
fdivrp
adc
and
dec
sub
push
aam
call
push
inc
call
fmull
jno
ret
jp
add
and
loopne
mov
add
rclb
xchg
mov
movsb
daa
xchg
sbb
daa
mov
int
aas
inc
enter
sub
and
jns
out
inc
fcoml
sub
xchg
sbb
out
in
lret
sbbb
aaa
mov
clc
popa
test
bound
mov
jne
mov
test
in
aam
into
mov
mov
lret
inc
jne
push
shll
imul
bound
add
cmc
xor
mov
aad
popa
mov
loop
in
gs
jae
jle
imull
push
lret
clc
and
inc
int
negb
or
adc
je
and
push
push
popa
and
cmp
sub
faddl
call
shr
dec
or
xchg
adcb
push
mov
daa
sarl
daa
ret
scas
test
jno
idivl
bound
dec
ljmp
add
jne
hlt
adc
fmull
and
sub
push
les
enter
mov
add
cwtl
adc
and
sbb
popf
pop
les
or
movsb
data16
repnz
dec
hlt
adc
mov
cmp
and
mov
add
imulb
xchg
movsb
xchg
push
lea
movsb
cmpl
push
jns
add
dec
mov
es
mov
adc
push
pop
lcall
aam
test
rclb
adc
sub
and
fdivl
adc
cwtl
enter
and
fs
dec
mov
fsubl
and
test
fs
dec
jg
andb
dec
mov
aam
je
inc
shlb
jo
cwtl
sub
enter
dec
lods
sub
fdivr
cmc
xor
dec
je
cwtl
pop
nop
xchg
mov
inc
mov
int3
movsb
fisubl
stc
xchg
jl
outsl
int3
adc
jmp
mov
push
cmp
adc
jnp
mov
je
lret
inc
and
stos
sbb
pop
pop
stos
test
inc
mov
mov
sbb
int3
and
lock
sub
insb
fadd
sub
mov
mov
aas
sub
jle
leave
inc
push
add
leave
xor
aam
mov
mov
clc
mov
stc
jno
sbb
add
test
mov
xchg
inc
sahf
pusha
xchg
jmp
mov
aam
test
xchg
sub
hlt
dec
mov
and
push
inc
push
add
xor
insb
or
and
push
gs
add
loop
or
push
sahf
shlb
test
int3
adc
and
in
stos
pop
xchg
aad
incb
repnz
mov
outsl
jns
mov
mov
enter
and
adc
and
enter
xor
cld
xor
push
fmull
jns
jae
bound
sub
adc
mov
loop,pn
loopne
adc
and
or
loopne
fnsave
inc
les
push
test
lods
add
and
sub
mov
iret
mov
or
jge
xchg
fsubr
bound
xlat
xchg
ss
shl
outsl
lock
add
dec
jmp
stos
push
xchg
xchg
hlt
cli
add
cmp
clc
lahf
fists
cmp
pop
mov
add
mov
lea
mov
pop
andl
jbe
mov
out
xor
push
adc
mov
jns
or
inc
repz
stc
push
pushf
or
sub
mov
lods
xor
mov
add
out
mov
push
jnp
and
pop
mov
jnp
and
add
lods
iret
jno
aas
xor
mov
pop
inc
js
mov
inc
xor
cmp
jb
stos
fcoms
clc
push
fs
mov
push
cmp
out
pop
mov
mov
pop
bound
lock
hlt
fcmovnb
cmp
clc
cmc
jbe
mov
add
sub
es
and
and
out
pop
push
adc
lea
xchg
push
aam
mov
test
cld
xor
pushf
ja
add
fst
push
lret
jp
gs
nop
mov
popa
xor
in
sub
imul
bound
or
ffreep
orl
movsl
out
inc
rcrb
and
int3
mov
mov
addr16
pop
cmp
adc
shll
or
cltd
sbb
test
clc
xlat
dec
mov
lods
in
in
sub
in
call
adc
jae
adc
dec
fldcw
dec
mov
lods
pushf
mov
inc
xchg
insl
fistl
sbb
int3
sub
mov
stos
and
xor
int3
inc
shll
push
jl
adc
mov
or
lock
call
in
add
mov
lea
pop
and
mov
inc
dec
aad
into
cltd
inc
and
add
xor
and
xchg
add
test
scas
cmp
jb
push
test
pop
pop
adc
loopne
inc
call
fsubl
loopne
shlb
sbb
loop
xor
fistps
insl
test
pushf
enter
fs
xorl
mov
mov
sub
jbe
cmp
xor
pop
sub
hlt
pop
rolb
lcall
ficompl
jl
mov
loope
loop
pop
aaa
cld
mov
mov
xor
mov
cwtl
sub
inc
leave
xchg
cltd
push
pop
repnz
fwait
shrb
pop
inc
pushf
fucomi
jne
cltd
inc
cwtl
mov
dec
sub
loope
pop
in
jmp
sbb
add
in
jbe
sub
fmuls
in
and
data16
les
cmp
jb
cwtl
add
sbbl
leave
cmpsl
sub
cmp
int3
andl
dec
add
add
scas
xor
dec
daa
fs
das
inc
pop
fldt
sbb
pop
shrb
adc
jns
pop
adc
je
mov
test
es
out
dec
enter
add
lahf
test
int3
mov
push
mov
xor
mov
je
mov
addb
jecxz
in
test
xor
aas
mov
push
jp
dec
mov
sub
xchg
int
daa
lds
jg
in
lahf
pushf
inc
adcb
fwait
sub
out
or
add
daa
or
in
and
out
out
in
mov
push
stos
adc
xor
mov
je
cmp
leave
push
add
sbb
jne
mov
and
stc
dec
sbb
outsl
push
dec
ret
sbb
xchg
jne
jb
and
sub
stos
mov
xchg
test
push
aas
rolb
or
ret
movsb
dec
add
or
jae
gs
out
gs
mov
inc
fs
push
or
mov
sbb
pop
adc
add
mov
mov
adc
or
jmp
outsb
and
inc
jle
addb
ds
pop
jne
sub
and
jle
mov
add
bswap
ljmp
cmp
and
add
adc
jge
inc
push
inc
and
mov
cltd
inc
and
cmp
jne
mov
jmp
push
in
das
je
mov
mov
or
sbb
or
in
push
inc
add
xor
and
adc
push
xchg
aaa
sub
or
and
adc
mov
test
out
notl
mov
push
lcall
and
das
cmp
and
pop
or
jmp
das
ds
sbb
popa
and
adc
jecxz
and
std
dec
adc
push
das
cmp
push
push
lret
pushf
psllw
jne
mov
mov
inc
dec
sti
ret
push
or
lcall
out
jnp
and
rorb
setle
adcl
adc
ret
andb
jmp
sarb
dec
jne
cli
xchg
dec
cld
mov
mov
stos
fld
and
mov
cmc
cltd
push
mov
icebp
pushf
sbb
dec
testb
ret
xlat
pop
push
and
out
jecxz
xchg
push
loop
and
adc
add
int3
lock
push
add
insl
cmp
popl
xor
or
mov
mov
pusha
dec
add
enter
inc
sbb
push
mov
and
jmp
add
sub
lret
mov
and
mov
mov
inc
mov
pop
push
inc
pop
sahf
mov
inc
int3
xchg
xor
mov
jecxz
call
jne
test
aam
pushf
jecxz
pop
int3
mov
mov
inc
mov
fsubl
and
lret
shll
xor
jmp
pop
dec
cmp
les
outsb
adc
scas
imul
and
les
out
movsb
mov
test
arpl
adc
fstps
and
push
jne
test
jge
clc
cmpsb
mov
sti
dec
fstpt
xchg
mov
jl
out
or
rorb
jge
cmp
or
pop
sbb
mov
adc
ds
inc
int3
movlps
shrb
sarb
xor
mov
mov
push
cmp
xor
inc
pop
enter
inc
sbb
mov
lret
ret
pop
pop
xchg
fistps
jmp
mov
mov
out
xchg
mov
ss
jle
sub
je
add
and
ljmp
in
and
lahf
inc
add
iret
mov
push
xchg
out
out
lret
pop
lea
repz
lahf
shrb
scas
push
inc
cwtl
daa
cld
jne
xor
push
mov
sub
adc
push
sarb
ret
jge
nop
jmp
xor
in
mov
push
fcoms
jecxz
in
bound
in
decl
jl
cmp
add
jne
mov
es
dec
pusha
mov
btrl
inc
adc
xchg
ret
and
mov
fbld
jno
jne
adc
adc
sub
xor
adc
lea
idivl
adc
jecxz
inc
push
or
lret
cmp
jp
jbe
push
xchg
jle
sbb
or
pushf
out
into
mov
sub
inc
enter
sub
dec
mov
mov
xchg
or
mov
ds
dec
pop
sub
push
adc
stos
fadd
clc
push
dec
mov
pop
int3
mov
inc
loopne
ds
cmp
fcoml
sbb
and
or
xlat
xchg
jge
push
adc
adcb
pop
daa
ret
cmp
cld
movb
fsub
adc
cmpsb
add
into
jge
clc
push
call
movsl
adc
sarb
add
adc
lret
inc
call
inc
clts
sub
jl
es
push
bound
and
adc
jl
xorb
jge
jmp
dec
inc
xchg
sub
hlt
jge
dec
sub
sub
je
stos
mov
call
mov
iret
scas
or
mov
ror
dec
hlt
push
clc
mov
dec
test
cmp
aas
sbb
jnp
mov
push
sub
mov
fmuls
ds
and
es
push
adc
and
adc
cld
add
cmp
mov
mov
and
int3
mov
jae
mov
add
add
std
mov
jecxz
ficoms
mov
cwtl
xchg
sbb
inc
scas
mov
lock
inc
pop
inc
push
popa
scas
xchg
adc
jo
xchg
nop
fucomip
repz
adc
or
sbb
mov
inc
test
pop
sub
or
and
inc
popa
call
add
xor
lret
adc
inc
mov
test
mov
or
add
les
cld
cs
sbb
mov
xor
loopne
sub
or
sbbl
stc
enter
js
adc
adc
or
in
mov
nop
or
or
xchg
or
int3
imul
fs
int
mov
jmp
int3
shlb
addr16
mov
or
in
and
adcb
sub
sbb
and
popa
out
add
inc
enter
push
jmp
or
loopne
and
daa
test
std
sbb
pop
mov
and
jle
xchg
cmp
adc
pop
adc
in
cmp
push
push
mov
test
mov
mov
mov
clc
movl
enter
adc
sbb
nop
xchg
or
mov
push
les
pushf
xchg
pop
adc
lods
inc
lret
adc
stos
cmpsb
mov
add
clc
xor
sub
pop
push
adc
add
adc
subb
and
jne
ds
mov
les
adc
xchg
and
ds
mov
testb
int
nop
adc
je
push
or
mov
cwtl
cmp
mov
je
add
mov
movw
sub
sub
adc
and
and
dec
aas
cmp
push
and
cmp
adc
or
pop
pop
jle
inc
call
or
xor
sbb
test
mov
lahf
pop
mov
xlat
lods
pop
je
movsb
fsubr
negb
jl
push
cmpsl
ja
int3
fdivrs
inc
andb
sbb
adc
adc
mov
pushf
jo
sarl
mov
movswl
or
sbb
mov
pop
pop
lcall
hlt
fcmovnbe
test
scas
jo
inc
xchg
insb
inc
xor
xchg
push
dec
jp
sbb
mov
pop
pop
pop
pop
mov
iret
int3
cmp
fisttpl
mov
popa
sbb
mov
mov
sub
mov
dec
scas
add
mov
lods
add
xorb
lds
jne
je
test
or
mov
inc
je
mov
adc
leave
sbb
int
mov
inc
clc
gs
stos
mov
sub
add
and
jno
or
loopne
or
lds
cmp
lea
mov
jg
xchg
and
lods
and
pop
jmp
adc
lock
jg
adc
dec
mov
lock
aad
inc
aaa
cmp
push
in
xor
lea
sub
lock
and
xchg
or
add
int3
mov
cmpl
pop
jne
test
xchg
stos
repnz
fistl
jne
fmuls
adc
sub
sub
fdivs
mov
mov
jge
fs
cld
lds
mov
and
pop
sbb
jle
add
mov
or
mov
cmp
pop
in
or
lock
mov
mov
clc
gs
mov
sub
imul
dec
push
xchg
xchg
test
push
or
xor
mov
sub
xchg
and
xchg
mov
enter
mov
xchg
rclb
jmp
mov
fists
test
cld
dec
cmp
and
shll
mov
sahf
rorb
lahf
push
or
pop
movsb
aaa
stc
hlt
or
testl
ror
mov
pushf
test
push
xchg
test
or
and
adc
test
xor
mov
mov
cmpsl
cltd
jmp
sub
jne
orb
add
iret
adc
push
dec
sub
jle
sar
or
shlb
and
mov
add
cs
adc
cwtl
or
pop
xchg
test
jne
fbld
jle
push
inc
push
sarl
sub
xor
in
jg
xchg
mov
pop
sub
mov
ja
add
std
xchg
xlat
xor
mov
in
and
xchg
hlt
push
mov
idivb
cmp
dec
jl
sub
cmp
gs
jb
dec
mov
mov
stc
and
cmp
inc
test
insl
add
fdivrs
lea
push
mov
inc
sbb
mov
mov
bt
jae
inc
push
inc
dec
sub
push
pop
dec
push
mov
cmp
scas
xchg
cmp
int3
cld
in
pop
lea
popf
ja
popf
cmp
push
add
cwtl
stos
adc
cmp
std
data16
mov
jg
mov
shlb
add
xor
dec
fmuls
push
movb
xchg
push
cmpsl
inc
imul
hlt
imul
sahf
lea
jg
int
out
cmp
or
dec
nop
inc
imul
jns
pop
call
xchg
cmp
sbb
in
mov
mov
push
mov
pop
pop
roll
addr16
movsl
ffree
xchg
es
sub
aas
pushf
cmpsb
xor
jne
in
dec
fs
js
cld
dec
pop
scas
fs
adc
sub
push
and
dec
sub
enter
je
ret
adc
movb
inc
sbb
cmp
jg
cmp
sub
sbb
imul
cmpb
int3
xchg
or
inc
pop
adc
adc
ja
xchg
pop
jle
daa
rorl
and
pop
and
mov
jp
fs
push
fldcw
mov
loop
cwtl
and
fcmove
or
and
movsl
std
int3
inc
dec
pmaxub
fcoms
or
mov
mov
xor
dec
movsb
dec
adc
jl
in
cmpb
test
popf
pop
cwtl
dec
mov
mov
adc
je
dec
xchg
mov
pop
push
fcoml
jl
mov
mov
cmp
add
movsl
mov
xchg
jmp
xor
inc
and
dec
pusha
cli
ret
jl
test
mov
les
aam
push
push
leave
pop
xchg
push
loop
lahf
hlt
sub
pop
pop
mov
movsl
lock
push
lock
push
aam
dec
lds
xchg
bound
lods
nop
mov
das
add
or
daa
jne
std
insb
mov
in
sbb
pop
adc
adc
ja
rorl
cmp
jge
push
lea
cmpl
inc
and
test
adc
push
rorb
sub
mov
mov
and
ja
and
or
jne
lahf
push
lock
push
adc
cli
jne
dec
mov
mov
dec
sub
pop
pusha
inc
lds
xchg
lds
imul
inc
xor
mov
dec
push
inc
xchg
in
test
jge
jmp
mov
call
in
fcmovb
sarb
sbb
in
test
jnp
cmp
add
fistps
rcrb
ret
jns
mov
sub
imul
jmp
inc
cmp
xlat
test
insb
push
jne
out
push
test
and
ljmp
jge
hlt
and
adc
cmpsb
into
pop
aam
or
fs
ja
pop
or
pop
adc
jmp
xor
mov
adc
or
cmpsl
lock
mov
nop
ss
mov
mov
pop
dec
dec
cmp
adc
andb
fidivl
int
es
pop
dec
lds
pushf
xchg
lea
and
call
and
imul
xlat
xchg
jmp
dec
jg
and
aaa
dec
pop
mov
cmp
pop
lcall
bound
test
xor
push
dec
js
and
dec
inc
popf
dec
fldenv
out
insb
adc
hlt
and
push
pop
jle
jle
cmpsb
or
lds
dec
out
out
push
mov
iret
dec
pop
jnp
lret
inc
inc
cld
dec
cmp
push
push
shr
cmpl
fwait
notb
hlt
cwtl
repnz
xor
sbb
push
mov
movsl
lods
sub
jecxz
mov
xchg
pop
in
adc
orb
and
sub
mov
ljmp
shlb
and
sub
sub
dec
jl
xchg
add
jle
sbb
xchg
sbb
rolb
inc
or
addl
pop
inc
inc
lahf
mov
outsb
pop
scas
push
xchg
xor
fsubrl
test
dec
ljmp
push
lret
and
ja
push
lahf
mov
les
lods
stos
xchg
scas
subb
testb
orb
mov
inc
adc
hlt
movsl
or
fwait
mov
nop
dec
push
mov
mov
push
movb
push
sub
mov
inc
fdivl
pop
pop
das
cld
pop
hlt
mov
or
into
jne
push
mov
and
mov
adc
pop
vmovhps
fldt
xchg
stos
repz
rol
xor
fmuls
outsb
int3
push
pop
jl
push
fldenv
pop
das
mov
hlt
push
ret
push
out
mov
fsubr
inc
mov
mov
push
mov
jae
ds
iret
inc
hlt
sbb
pop
push
lods
fidivl
fidivs
sub
xlat
es
hlt
outsl
jnp
or
lea
in
mov
inc
adc
shrb
icebp
jae
xchg
ret
jo
push
movsl
lods
adc
pushf
loop
xor
mov
inc
cmp
inc
aad
orb
or
cmpl
sub
pushf
inc
inc
sbb
push
popa
dec
jmp
lods
xor
jae
enter
and
xbegin
push
mov
mov
ds
shrl
and
je
mov
mov
mov
sub
clc
jg
daa
xchg
fiaddl
nop
int3
xchg
hlt
push
mov
jmp
fcompl
mov
shrb
rcll
mov
pop
adc
lods
adc
jo
xor
es
shll
adc
lahf
sub
out
and
iret
sub
test
lock
lods
in
jmp
sbb
or
xor
xchg
mov
or
cmpl
jne
rcrb
and
jb
gs
xorb
data16
dec
dec
fcomip
je
mov
or
cld
fiaddl
inc
clc
jle
ja
je
push
test
mov
push
insb
sbb
push
pop
pop
cmp
jne,pn
or
sub
sbb
cmc
hlt
push
add
sbb
stc
push
je
xor
cwtl
jp
fiadds
rcll
adc
insb
ret
cmp
pop
fdivl
jae
sbb
nop
fldt
adc
aaa
mov
fidivl
cmpsl
mov
mov
adc
addr16
xorl
and
test
fmull
call
or
jmp
or
cmp
adc
test
insb
push
push
sbb
loope
and
jb
or
sbb
xchg
icebp
mov
xchg
dec
or
adc
xor
loop
mov
les
mov
or
dec
dec
mov
test
xor
adc
rorb
cmp
repz
add
sti
scas
push
sbb
jge
adc
jmp
cmp
mov
push
in
cmp
cmpb
adc
addb
xchg
mov
jp
add
ret
jp
mov
sub
dec
lret
push
jne
mov
and
inc
je
pop
adc
popa
jne
ss
add
inc
inc
add
cmp
jno
dec
push
nop
sbb
sbb
leave
shlb
loopne
add
lahf
pop
mov
aad
push
std
icebp
test
mov
mov
test
xchg
stc
fsts
mov
dec
push
int3
inc
aad
add
mov
dec
cmpb
dec
mov
add
mov
cmp
inc
adc
adc
and
pop
dec
dec
sbb
cli
inc
sub
loopne
mov
inc
aas
add
push
push
inc
or
xor
lret
in
xchg
aam
jb
push
xchg
dec
movsb
push
outsb
in
ja
add
lods
mov
inc
jno
nop
mov
shlb
inc
dec
xchg
icebp
add
sub
pop
push
jecxz
add
movsl
adc
mov
mov
sbb
test
jmp
add
ret
xchg
push
std
cwtl
mov
imul
cmp
mov
out
mov
push
scas
je
es
push
daa
in
cmp
or
sub
lea
xor
fwait
sub
mov
addb
jae
cmpsl
imul
out
xor
lret
cmp
push
sub
push
sub
jae
cltd
in
xchg
xor
adc
in
push
or
pop
sub
dec
nop
cmp
mov
push
inc
inc
jmp
cmp
mov
pop
into
iret
xchg
test
in
das
fsts
adc
jmp
push
inc
fistl
push
sub
pop
cmp
xor
ret
jl
inc
cli
xchg
jle
and
movaps
rorb
pop
dec
stos
pop
sbb
jnp
cltd
sbb
fcompl
sub
ret
push
adc
or
and
push
mov
push
aam
xchg
insl
notb
push
push
pop
popf
and
fadd
jmp
cli
jge
aaa
push
out
jle
gs
mov
sbb
fwait
inc
pop
mov
rcll
cld
xchg
data16
push
add
movsl
fwait
bound
int3
jne
push
xchg
mov
pop
fidivrl
xchg
mov
fldt
push
rorl
mov
inc
mov
xchg
inc
jle
dec
ret
jg
fiaddl
xchg
cltd
arpl
es
inc
jno
adc
add
les
sub
pushf
mov
mov
mov
or
arpl
inc
jbe
outsb
je
add
push
push
aas
adc
pop
push
dec
mov
dec
lahf
shll
mov
decl
adc
in
and
shl
sub
fdivs
mov
fcoml
mov
dec
inc
repnz
fistl
cmpsb
adc
cs
in
pop
data16
les
arpl
and
das
movsb
scas
sub
adc
fidivl
rolb
mov
push
out
mov
cmp
pop
shr
jb
je
dec
in
stos
js
ljmp
adc
mov
and
dec
hlt
xchg
or
jb
jns
arpl
outsb
and
enter
enter
and
adc
aad
add
mul
and
or
addr16
jbe
or
push
pop
lock
in
je
icebp
push
or
sub
dec
inc
movsb
in
lcall
jae
and
out
pop
dec
sub
imul
or
dec
stos
aad
stc
insb
inc
push
xor
add
das
and
push
push
fldl
outsb
popa
bound
lcall
lock
imul
in
or
or
adc
and
sbb
mov
or
adc
add
stos
mov
cmp
or
xchg
leave
dec
push
inc
dec
addb
inc
or
sbb
jo
xchg
dec
sbb
dec
shlb
mov
cmp
jns
shlb
sub
push
mov
dec
imul
pop
dec
adcb
jb
pop
xchg
mov
lcall
cltd
push
pop
add
mov
stc
adc
jno
xchg
inc
insb
imul
xchg
repnz
and
inc
or
and
aaa
je
lods
and
dec
dec
outsl
or
gs
xor
and
pop
and
adc
xchg
mov
shlb
imul
or
inc
lods
es
adc
and
push
adcb
inc
mov
leave
push
or
mov
ds
cmp
push
mov
xor
or
pop
popf
orb
addr16
mov
pop
pushf
mov
movl
loopne
sub
in
ss
mov
sub
ss
adc
add
or
rorb
jo
push
mov
pop
enter
fs
in
sub
add
inc
sub
mov
hlt
je
add
mov
xchg
xchg
jno
mov
mov
adc
inc
test
lea
xlat
fs
out
dec
adcl
adc
push
mov
test
repnz
rclb
dec
subb
mov
test
daa
shll
int
push
adc
sbb
cmc
pop
pop
pop
xchg
std
xchg
dec
lods
aad
in
mov
or
mov
xor
push
mov
popf
adc
push
ss
add
pushf
and
cmp
scas
mov
pop
stos
imul
add
in
push
or
cmpb
sbb
sub
inc
aad
fisttps
xchg
aaa
popf
jne
dec
js
push
or
push
fidivrs
jnp
push
stos
repnz
mov
idivb
add
mov
sub
test
ja
cmc
or
add
jns
mov
push
inc
push
inc
lods
inc
in
fnsave
lcall
push
push
pop
xor
push
lds
xchg
inc
dec
jne
sub
lods
icebp
push
or
adc
imul
or
and
add
test
jmp
clc
jnp
add
pop
adc
dec
fwait
add
mov
call
cltd
jmp
sub
or
scas
insl
addr16
ret
xor
mov
sbb
adc
push
loope
xchg
in
cmp
jg
push
pop
aam
outsb
mov
mov
cmp
add
cmp
mov
sub
cmp
dec
out
pop
sub
rcll
sbb
pop
lret
dec
push
insb
and
or
mov
shll
mov
mov
and
dec
dec
nop
test
and
fidivrl
jnp
xchg
push
lods
lcall
add
jne
xchg
adc
ret
push
movsl
xchg
adc
adc
sub
xchg
mov
cmp
bound
jmp
loope
push
pusha
int
sub
mov
mov
push
push
pop
sbb
jge
xor
test
adc
movsb
inc
cmp
and
fs
or
es
pop
sub
sbb
mov
imulb
inc
mov
push
or
inc
jge
bswap
add
adc
jno
std
adc
sub
mov
push
les
test
cmp
mov
xor
adc
out
inc
xchg
cmp
push
inc
loopne
loope
sbb
aaa
jge
and
inc
add
push
rorl
and
push
ljmp
std
test
push
dec
sbb
dec
xchg
inc
pop
xlat
nop
inc
push
ljmp
push
push
ds
daa
rolb
or
jno
cmpsl
lods
cmpsb
jno
ljmp
add
add
mov
cmp
add
aas
sarl
mov
xor
mov
outsl
mov
and
and
aas
test
push
test
mov
cmp
fiadds
shlb
jns
pusha
sub
mov
hlt
jg
js
adc
sub
and
adc
cmpsl
or
add
mov
xor
loope
push
xor
mov
push
and
or
testb
mov
cmpb
adc
adc
inc
push
sahf
dec
push
outsb
add
ret
xor
inc
mov
jbe
push
rcll
xchg
push
cmc
adcb
cmp
or
and
adcl
leave
xchg
ds
or
or
xor
jne,pn
daa
movl
push
cmp
xchg
push
stos
test
shlb
fisttps
test
ror
add
mov
xchg
les
test
pop
jnp
xor
sti
xor
movsb
xlat
sbb
adc
aam
dec
shll
enter
lret
mov
inc
shll
rcrb
sub
shr
inc
cmpl
mov
stc
out
add
lock
xchg
dec
mov
mov
sub
push
dec
loope
pop
dec
mov
xlat
les
sbb
loopne
sub
mov
add
aaa
movsl
gs
or
in
lret
fs
mov
push
sub
and
je
cmpb
and
push
mov
or
inc
inc
rcrb
mov
arpl
and
fbstp
repz
cmp
mov
jmp
lea
popa
fidivrl
movsl
dec
int
pop
fld
or
ljmp
lock
movb
jmp
sub
sbb
jmp
jmp
jnp
and
sbb
inc
jmp
pop
and
jl
push
add
hlt
sub
and
push
ja
sub
xor
mov
inc
in
dec
dec
shrb
cmp
push
inc
xor
les
scas
sub
mov
lods
and
ljmp
xor
jecxz
xchg
adc
xchg
or
sarb
adc
xor
jae
sbb
jns
fisttpl
rorl
jne
imul
inc
mov
pop
push
in
test
test
cmpl
je
stos
mov
push
pop
sub
fs
pusha
xor
inc
jb
outsl
mov
sti
sbb
or
push
dec
push
lret
xorl
xor
nop
jl
js
rcll
mov
jle
sub
push
xorl
lods
stos
popf
rclb
sbb
xor
jmp
or
lret
mov
mov
pop
std
mov
inc
lds
into
call
loop
int3
hlt
cmpsb
mov
das
adc
mov
lret
xchg
or
ret
sbb
dec
xorl
ret
sbb
adcl
test
xchg
push
inc
fistpl
jno
cmp
xor
sub
cmp
les
inc
mov
push
mov
xor
cmpsb
sub
daa
pop
out
je
sbb
and
ljmp
xchg
and
or
je
movsl
adc
push
and
and
repnz
lea
mov
pushf
movsl
aam
fsubr
test
xor
pop
fs
jo
iret
mov
or
mov
orl
stc
push
les
mov
clc
adc
insb
xchg
fcoms
or
inc
lahf
mov
or
pushl
cmp
hlt
stc
clc
dec
adc
imul
insl
popa
adc
gs
clc
mov
pop
cli
nop
push
nop
and
xchg
sub
or
rclb
insb
testb
push
imul
sub
add
dec
nop
pusha
das
aam
pop
mov
adc
sbb
test
mov
lea
clc
xchg
pop
pop
cmp
mov
push
in
sub
cmc
sarb
insb
mov
stc
xchg
sub
and
adc
rclb
jb
in
rol
pushl
push
add
adc
inc
hlt
mov
xchg
or
add
insb
outsl
ja
in
bound
xchg
and
pop
sbb
dec
dec
mov
xor
and
cltd
add
or
sbb
push
or
adc
lock
mov
push
cmp
xchg
mov
jo
inc
pop
cwtl
mov
div
push
rorb
pop
insb
ret
fmull
sbb
pop
cmp
inc
outsl
arpl
inc
jmp
dec
jb
inc
loope
pushf
dec
cmp
add
sbb
inc
arpl
int
repnz
push
jb
fwait
mov
jge
xor
jb
pushf
lret
and
nop
adc
repz
sbb
flds
clc
movsb
jne
jno
popf
aad
bound
xlat
push
mov
sbb
and
mov
in
cmp
lods
rcrl
sbb
jb
inc
je
cmpl
push
inc
test
xchg
addr16
loopne
test
add
test
adc
or
jb
mov
and
dec
sub
aam
inc
imul
aas
int3
je,pn
test
fstpl
adc
push
inc
repnz
idivl
sbb
and
aas
cmp
hlt
xchg
not
mov
inc
inc
addr16
jne
ficoms
fwait
mov
inc
fsubl
mov
sub
inc
fcoml
and
push
aas
jmp
or
sbb
mov
and
inc
subb
dec
shlb
inc
stc
lods
xchg
enter
cmp
incb
sbb
out
cmp
subl
bound
inc
es
mov
push
insb
addl
inc
mov
fcoml
cltd
pop
or
enter
sub
pop
cltd
inc
push
adc
popl
sub
dec
fisubl
lgs
and
and
dec
mov
inc
sub
or
push
inc
inc
jp
mov
pop
sub
xor
call
and
cwtl
test
xchg
dec
lock
nop
sub
hlt
fdivs
xchg
or
dec
outsl
fldcw
outsb
push
imul
mov
or
lea
sarb
pop
xor
fcom
ds
xor
mov
and
or
flds
movsb
jl
movsl
and
push
clc
push
gs
mov
inc
adc
cmpb
rorl
in
cmpl
or
mov
push
sbb
in
mov
mov
mov
mov
test
cmp
push
cmpb
add
movl
sub
add
mov
pop
pop
push
mov
pushl
ret
cmp
dec
mov
rorl
mov
xchg
cmp
es
cmpl
sbb
mov
and
in
inc
sbb
or
or
or
je
inc
mov
cmpsl
std
aaa
in
or
insb
mov
not
and
or
adc
js
mov
or
nop
arpl
push
pushf
les
mov
movsb
or
jg
insb
mov
and
cmp
mov
scas
movsl
mov
pop
push
je
xchg
ret
or
push
mov
or
mov
push
jmp
inc
mov
shrd
mov
cs
insb
popa
sub
imul
fcoms
xchg
data16
xchg
cmc
divl
outsl
cmp
xor
sub
sbb
dec
mov
lock
sub
or
sub
cmc
dec
and
push
push
or
mov
adc
mov
jle
pop
das
pop
cmc
fbstp
jmp
hlt
push
push
adc
mov
jns
pusha
cld
insb
enter
xchg
hlt
inc
cwtl
jge
mov
subb
push
jge
pop
dec
dec
hlt
into
stos
scas
hlt
adc
rcll
or
mov
sbb
push
adc
into
inc
inc
adc
adc
add
and
mov
and
mov
repz
ja
push
enter
test
xor
daa
jne
jp
mov
push
dec
enter
add
cmp
test
push
or
cs
add
cli
xchg
push
bound
mov
test
lea
push
mov
xor
jle
leave
push
and
or
jmp
cmp
xor
sub
pop
ret
testb
clc
cli
into
mov
lods
sbb
in
clc
testb
mov
cmpb
xchg
daa
push
fmuls
out
mov
cltd
lret
and
jmp
pusha
test
cmp
inc
mov
mov
add
dec
and
mov
daa
ds
js
in
sub
push
test
pop
inc
xchg
cmp
cmp
inc
test
dec
nop
sub
mov
aaa
inc
repz
inc
addb
ret
sahf
or
bsr
mov
sbb
sti
cmpsl
push
rcrl
movsl
stos
stos
dec
sbb
cmp
cwtl
mov
inc
int3
push
xor
or
ss
xchg
daa
daa
test
jp
push
mov
gs
pushf
aaa
dec
mov
and
lcall
sub
or
jge
sbb
aam
or
je
inc
mov
mov
aam
or
inc
jl
dec
fidivl
sbb
fldl
nop
fadds
cmpl
xor
dec
mov
inc
jnp
adc
in
out
movsb
int3
push
jl
iret
inc
test
inc
xchg
adc
les
xlat
push
ja
xchg
stc
shll
jl
js
or
cwtl
ret
xor
push
sbb
pop
ret
out
push
adc
xchg
test
shrb
xchg
xor
cmc
stc
xchg
lods
mov
lods
arpl
sbb
jb
cmp
sbb
mov
and
xchg
fmul
fucom
fidivs
cmp
sbb
mov
and
xchg
enter
jb
cmp
sbb
mov
and
xchg
int3
enter
jb
cmp
mov
mov
mov
mov
mov
mov
mov
mov
enter
jb
cmp
mov
enter
jb
cmp
stos
and
sti
les
mov
and
and
cld
mov
xor
lods
je
inc
popa
jbe
into
pop
and
add
xor
or
imul
insl
hlt
jbe
rcrb
in
pop
rorb
adc
enter
outsl
insb
adc
adc
adc
jae
and
mov
lock
lds
in
add
hlt
rcrb
or
push
xchg
les
or
add
add
iret
inc
jae
push
outsb
ss
jle
adc
push
add
mov
inc
cmp
mov
cmp
pop
adc
stos
xor
popf
int3
push
xchg
addb
inc
dec
popa
insl
into
out
push
lods
jb
addr16
movsb
push
mov
or
imul
addr16
adc
pop
lds
lods
xchg
inc
cmp
mov
add
dec
mov
repnz
push
pop
or
pop
ja
add
pop
lods
or
xor
cmc
push
dec
or
add
out
popf
push
sbb
icebp
inc
adc
in
hlt
mov
and
addr16
sub
adc
sbb
inc
xor
je
sbb
cmp
outsl
add
adc
or
dec
data16
pop
and
nop
je
inc
pop
dec
dec
outsb
xchg
faddl
dec
ljmp
adc
cmp
mov
orl
add
enter
fcoms
jge
fsubs
and
pop
sbb
and
or
daa
add
je
cwtl
dec
rcrb
push
fldt
and
mov
repz
sub
test
ficoms
dec
pop
mov
or
or
xor
hlt
or
lods
test
movsb
xor
les
mov
fs
test
dec
sahf
sub
jp
push
and
sub
les
push
lods
and
xor
pop
mov
hlt
nop
mov
je
cmp
les
call
popa
mov
cmp
test
adc
aas
and
push
jmp
push
add
inc
mov
add
mov
push
jg
sbbl
jg
xorb
mov
cld
outsb
mov
adc
cwtl
add
stc
dec
lods
mov
sub
add
mov
test
and
pop
lods
clc
adc
dec
lret
jnp
les
sbbl
mov
cld
rolb
aam
popa
cld
enter
int3
and
sbb
sub
xchg
loop
cs
dec
push
jge
push
nop
les
add
push
mov
cs
in
gs
or
imul
shlb
test
dec
ret
xchg
cmp
fsubs
push
lock
push
js
dec
jle
loope
jnp
and
mov
push
lcall
or
adc
lahf
cmp
shrl
add
or
add
jns
sub
sub
leave
addr16
pop
mov
add
xor
adc
sbb
pop
aaa
mov
push
or
xlat
xchg
inc
adc
jg
idivb
orb
dec
pop
and
les
and
add
enter
inc
xor
repnz
adc
mov
mov
lods
or
dec
hlt
mov
sub
pushf
sbb
inc
pop
rolb
or
fmul
fsub
loopne
in
or
add
adc
cmp
sarl
aam
pushf
loope
addl
xchg
mov
cmp
or
or
sbb
adc
lcall
pop
dec
nop
mov
jmp
call
ret
push
xlat
sbb
add
ret
arpl
add
fistpl
and
mov
or
pop
outsb
dec
pop
push
inc
mov
or
imul
shrl
or
dec
popa
add
je
imul
mov
jae
mov
xchg
pop
notb
pop
fwait
sub
push
jbe
cs
mov
sbb
adc
cmpb
insb
adc
mov
push
mov
jnp
fmul
jle
adc
mov
ljmp
mov
sarb
pop
dec
outsb
mov
inc
daa
nop
mov
fs
inc
inc
je
lods
daa
xchg
and
push
push
cmp
xchg
and
and
and
enter
and
inc
and
or
add
nop
inc
mov
mov
adc
fisttpll
inc
jo
mov
cmpsb
pop
cs
add
pop
sbb
imul
adc
mov
lret
fsts
fists
dec
sbb
in
sbb
dec
mov
fadds
mov
push
insb
adc
xchg
sbb
and
in
repnz
inc
or
xchg
jge
add
xor
sub
mov
adc
push
dec
mov
push
pop
pop
je
lods
daa
lcall
push
dec
in
push
call
push
push
dec
jne
mov
out
insb
stc
shlb
adc
cld
jg
stos
dec
in
imul
mov
mov
mov
or
js
xor
pop
push
jg
subw
dec
pop
outsl
adc
int
or
es
aaa
jl
dec
daa
rclb
lret
mov
pushf
mov
jae
sub
or
pop
push
jg
cmp
dec
inc
mov
movsb
push
mov
mov
les
lret
je
xchg
lahf
outsb
jle
xchg
push
mov
inc
sub
stos
push
fildll
into
push
or
leave
jnp
push
arpl
movsl
js
seto
xchg
inc
jb
mov
sub
lods
sub
adc
mov
adc
enter
cwtl
fwait
jecxz
xchg
inc
das
lods
push
adc
adc
lods
pop
jo
popa
inc
pop
dec
mov
jle
push
in
and
xchg
xchg
and
inc
jle
sub
nop
adc
sub
std
mov
cmp
cwtl
pop
dec
jle
push
push
push
repnz
xor
bound
cltd
cs
mov
clc
inc
lods
lcall
cmove
jae
mov
xchg
sbb
mov
add
cmp
and
pop
imul
xor
icebp
sbb
mov
xor
inc
push
and
sub
sub
rcrb
mov
jo
inc
adc
mov
fs
in
shrb
adc
or
hlt
xchg
push
shlb
iret
mov
dec
pop
mov
mull
inc
or
xchg
adc
mov
jns
lock
sahf
insl
aam
or
lods
ret
or
in
les
inc
push
faddl
sbb
pop
pmulhuw
mov
dec
in
fcoml
dec
loope
push
mov
jbe
nop
ret
in
and
and
jl
loopne
xchg
shll
push
movsl
insb
jo
loopne
mov
lods
pop
andl
mov
dec
lret
mov
sub
inc
mov
pop
dec
cs
adc
pop
add
sub
and
outsb
or
arpl
push
and
sub
or
pop
movsl
dec
mov
rcrb
xchg
cld
iret
jecxz
and
jmp
push
daa
out
cmpsl
and
loopne
and
cmpsb
push
or
adc
sub
sub
cs
repnz
arpl
es
inc
cmp
cld
dec
xor
sarb
jo
inc
adc
arpl
mov
aad
push
xor
cmp
test
sub
xor
mov
ds
xor
loop
mov
mov
push
cmpsl
lea
cmpsl
call
arpl
adc
pushf
adc
lret
adc
and
jmp
or
sbb
test
pusha
je
xchg
cmp
mov
push
mov
cmp
insb
sub
push
inc
or
jo,pt
dec
adc
movsl
mov
ja
test
inc
int
mov
out
mov
mov
inc
lret
and
addr16
sbb
mov
push
pushf
and
ds
lret
jno
mov
or
daa
mov
lahf
push
insl
add
mov
xor
inc
pop
sub
pop
sub
insb
sub
cmpsl
mov
and
jo
push
or
jmp
pushf
adc
pushf
in
jg
arpl
addr16
mov
out
inc
push
adc
adc
in
push
cmp
inc
and
lahf
pop
dec
ret
or
pop
or
sar
pop
movsl
adc
inc
xchg
jp
loope
xchg
cmp
push
sbb
lret
or
and
sub
sbb
cmp
xor
xchg
fs
daa
dec
repnz
add
daa
and
popa
pop
imul
pop
pop
sarb
insl
inc
stos
mov
or
rcll
data16
fs
bound
jne
mov
or
push
cmp
mov
testb
cltd
add
popf
cmp
xchg
add
ljmp
imul
mov
rorb
dec
xor
adc
and
dec
mov
mov
inc
dec
mov
test
popa
pusha
jl
push
in
imul
mov
cmp
xchg
dec
mov
dec
cltd
les
lock
or
mov
mov
adc
sbb
push
test
aam
stc
data16
jo
mov
inc
test
inc
xchg
test
and
or
test
enter
xor
inc
jmp
rcll
xchg
mov
adc
pop
dec
push
dec
enter
xor
ljmp
movsb
mov
xchg
push
mov
dec
cs
repnz
in
cwtl
sbb
add
xchg
pop
and
sbb
movsb
cmc
and
xchg
repnz
add
xchg
pop
and
sbb
cmc
adc
xor
xlat
leave
fcmovnbe
imul
or
int3
sub
sbb
hlt
pushf
bound
enter
jmp
mov
pop
dec
mov
mov
repnz
jg
xchg
and
test
add
inc
dec
cmc
mov
dec
push
and
and
nop
es
and
imul
movsb
aas
ret
lds
xlat
xor
or
sbb
add
inc
push
xchg
jno
inc
movsb
add
lds
mov
lahf
or
cmp
push
and
dec
mov
and
pop
sbb
cmp
sub
cld
push
cmp
call
sub
push
jo
dec
sahf
xorl
jno
xchg
xchg
pop
pop
or
mov
mov
rcl
inc
xor
loopne
enter
xor
ljmp
inc
test
call
xchg
mov
inc
cmp
jns
pop
and
aas
and
xor
inc
xor
aaa
or
cmp
test
dec
cmp
lret
enter
lods
inc
cmpl
inc
mov
push
ds
dec
in
dec
and
cld
cmp
fnstcw
outsb
clc
inc
xchg
mov
lods
pop
scas
stc
inc
or
cwtl
push
nop
roll
outsl
push
push
xlat
mov
nop
inc
test
pushf
add
mov
lcall
inc
add
mov
add
mov
aaa
cs
jbe
es
sub
std
push
lods
sbb
jmp
mov
xor
imul
inc
pop
sbb
pop
adc
sub
sbb
xlat
sbb
nop
or
adc
scas
jmp
sbb
dec
int
mov
inc
mov
in
rcl
xchg
dec
push
es
sub
cmp
adc
adc
xor
movsl
stos
fsubp
push
mov
lods
movb
add
outsl
cmpsl
aam
stos
cld
ret
mov
std
lock
or
pop
insl
lock
das
clc
and
push
dec
add
mov
sub
push
or
inc
or
cld
jno
lea
jnp
add
movsl
xor
pop
sbb
sbb
or
insl
or
add
jle
and
pushl
and
stos
int3
cmpb
js
jge
push
ljmp
cmp
jmp
mov
pop
int3
cmp
mov
jne
enter
test
add
sbb
push
adc
push
inc
jl
clc
adcl
std
pop
call
jnp
jnp
lock
test
cmp
outsb
mov
add
push
pop
jne
pop
sbb
jl
divb
test
jle
outsb
shrb
pop
push
scas
push
jge
ficoms
test
scas
push
xor
es
xor
push
cmp
jg
cmpsb
or
and
sbb
or
iret
dec
mov
or
lock
push
mov
leave
stos
leave
lcall
movsl
testl
xchg
mov
adc
sub
std
or
sbb
xchg
or
loopne
inc
scas
lods
int
cmp
ds
dec
mov
orb
or
in
test
and
mov
stc
inc
xor
fcomps
mov
pop
pop
mov
imul
xchg
roll
pop
aas
mov
fmuls
jle
adc
or
sbb
imul
das
or
sub
lcall
scas
and
cmp
rorb
mov
cmp
sbb
repz
sub
mov
adc
sub
sbb
mov
pop
into
notb
xchg
sub
nop
or
and
clc
out
push
pop
int3
jl
inc
adc
inc
xchg
mov
nop
test
add
ja
lret
jecxz
mov
sbb
lds
neg
inc
cmp
push
xchg
insb
cmp
cli
sarb
int3
ja
jno
sbb
bound
pushf
push
push
sub
add
dec
stos
int
ds
add
sbb
aam
cli
push
call
bound
sub
sub
or
push
fs
xchg
sar
bound
cmp
dec
mov
xchg
and
rcll
mov
cmc
pop
mov
pop
adc
insb
pop
inc
loope
pop
cmp
adc
xor
or
stc
outsl
fnstcw
imul
or
and
xor
push
fnstsw
cmp
sbb
fnstsw
sahf
jb
inc
adc
xor
ja
mov
add
mov
jae
sbb
sub
xchg
adc
clc
fstpl
fwait
push
outsb
addl
adc
int
add
sub
jecxz
ljmp
jno
das
das
ja
add
xor
ss
lock
repz
dec
and
cmp
sti
xor
dec
or
xchg
enter
gs
out
sub
inc
sub
xor
pop
adc
mov
inc
xchg
jno
call
push
icebp
jmp
pop
inc
loop
ds
xchg
jmp
movsl
fsts
add
xor
dec
or
xlat
stos
aad
popf
test
pusha
stos
popf
jl
leave
pushf
repnz
or
outsl
mov
xchg
xor
xor
rcrb
mov
daa
dec
unpcklps
push
pop
aam
sub
sbb
pop
daa
in
mov
adc
fldl
mov
je
lcall
les
inc
cmp
lahf
jo
test
imul
xchg
jno
adc
add
pusha
enter
mov
jp
scas
in
sbb
lock
push
clc
clc
rorl
pop
pop
out
std
sub
or
andb
sub
dec
mov
arpl
cmc
sub
pop
pop
pop
stc
cwtl
add
mov
outsb
std
jp
jo
loope
lea
sbb
test
dec
call
sub
daa
ret
pushl
cmp
or
andl
add
dec
jmp
or
fsubr
cmp
sub
adc
adc
inc
pop
pusha
mov
dec
pop
pushf
lds
fs
mov
sub
pop
adc
cld
mov
cltd
jl
clc
add
or
sub
or
xor
test
or
sbb
inc
or
mov
loop
fldcw
mov
pushf
mov
in
js
ret
ljmp
xchg
rolb
lcall
mov
mov
pusha
enter
sbb
incb
sub
test
push
or
cmp
pushf
daa
mov
movsb
or
mov
movsl
add
ja
cltd
mov
jmp
and
lea
mov
aam
nop
movsb
enter
xor
mov
popf
inc
outsl
add
and
aad
in
in
mov
pop
mov
or
pop
outsb
loop
adc
sahf
pusha
inc
cmp
xor
xor
cmp
loop
jns
xchg
xor
nop
out
fs
sub
test
push
sbb
sbb
sbb
or
andb
mov
add
ret
xor
clc
lods
fidivs
mov
les
jl
mov
fld
pop
inc
sub
sarb
mov
add
dec
xchg
rcll
loope
int
jle
mov
and
and
fs
mov
xor
sub
and
xlat
in
pushf
ljmp
push
sub
test
loop
inc
pop
mov
or
test
daa
or
jmp
cltd
mov
mov
leave
pop
insb
sbb
sbb
jo
adc
or
push
xchg
xchg
fmuls
mov
sub
jge
mov
jne
dec
inc
ret
inc
outsb
and
push
mov
cmp
xchg
mov
xchg
sbb
or
xor
lock
push
sub
pop
add
sub
test
push
testb
test
dec
jns
inc
adc
mov
or
jmp
cltd
cmc
mov
mov
out
divb
push
and
xchg
adc
jl
ja
mov
aam
fsts
rorb
or
add
and
sub
cmp
fmuls
jne
add
inc
pop
and
je
dec
xchg
pushf
xchg
sahf
bound
sbb
mov
xchg
std
stos
lds
inc
fldpi
test
test
sbb
mov
jae
push
das
and
imul
dec
jns
gs
pop
jne
sub
imul
pop
cmpsl
pop
ja
pop
lods
push
nop
jg
je
mov
or
nop
rolb
or
adcb
nop
mov
cli
or
jge
mov
mov
xchg
ret
mov
out
hlt
xchg
out
cmp
jl
adcb
and
mov
cs
inc
push
ret
xorb
xor
pop
mov
or
das
and
jmp
xchg
sub
xor
mov
mov
pusha
lcall
xchg
cmpsb
mov
jmp
test
and
and
add
xchg
dec
hlt
jno
jmp
push
cs
ret
and
pop
cmp
jae
add
sub
adc
xchg
loope
lods
fisubrs
adc
dec
dec
sub
sub
das
popa
sbb
or
dec
arpl
push
push
adc
movsb
test
mov
insl
push
mov
inc
xchg
inc
xchg
jnp
dec
mov
xor
out
stc
mov
inc
stc
mov
adc
fstpt
and
xchg
sbb
sbb
sub
clc
xchg
mov
cwtl
xchg
xchg
dec
fadd
or
sub
bndldx
jmp
out
pushf
mov
push
adc
mov
or
stc
je
and
inc
popf
dec
push
xchg
sub
shl
push
sub
jb
push
push
shll
bound
dec
dec
nop
mov
cmp
fwait
xor
push
push
xchg
push
pop
dec
xchg
repz
sub
mov
add
push
and
pop
scas
pop
int
or
dec
and
sbb
lds
out
sub
adc
xchg
fwait
popa
jg
lods
push
in
test
mov
nop
adc
jg
xor
xor
pusha
sub
inc
dec
mov
dec
pop
mov
rclb
mul
mov
push
push
lea
jbe
push
fmuls
pop
fistps
inc
mov
imul
xor
nop
mov
fstl
test
movsb
pop
rolb
pop
mov
imul
mov
out
fsubl
les
and
adcl
xchg
mov
stc
addr16
dec
std
xchg
xor
xor
ja
lcall
or
fcoms
pushf
dec
dec
push
jp
adc
roll
dec
mov
mov
dec
nop
rol
lods
jb
cmp
movsl
pop
inc
or
shr
aad
push
mov
inc
push
mov
shlb
xor
xor
and
inc
or
dec
jmp
fwait
sbb
fs
shlb
divl
in
sub
jmp
sub
adc
sub
add
popf
mov
sub
out
and
xlat
repz
das
jbe
ficoml
push
rdpmc
sbbb
lods
adc
fs
jbe
leave
xchg
mov
sbb
subl
cltd
test
mov
mov
int
and
jmp
mov
leave
adc
faddl
pop
mov
xchg
jns
sub
sub
and
xchg
or
jle
iret
mov
fs
push
mov
test
jecxz
jg
decb
in
jbe
gs
test
mov
adc
cmpsl
adc
mov
or
popf
xchg
cmp
mov
jmp
pop
adc
repnz
stc
adc
pop
jmp
xor
push
aas
xchg
and
stc
inc
pop
and
adc
push
mov
dec
sbb
orl
push
xchg
enter
sub
inc
sub
and
stos
jle
adc
fdivrs
inc
pop
adc
sahf
out
xchg
sbb
xor
cmpsl
sbb
clc
dec
pop
mov
mov
aad
sub
inc
arpl
in
push
or
sbb
fdivl
sbb
in
mov
or
fldenv
push
add
adc
push
mov
test
pop
jl
hlt
dec
pop
cmp
call
jno
inc
sbb
xchg
sub
xchg
shll
add
add
xor
std
daa
aad
in
add
mov
inc
inc
adc
or
xchg
sahf
sbb
stos
jmp
mov
and
mov
and
sbb
or
adc
mov
sub
push
in
stos
inc
fisttpll
movsb
mov
mov
sbb
es
xchg
inc
clc
mov
sub
inc
js
movsw
jge
lock
sub
xor
movsl
cmp
mov
loopne
lods
jmp
movsl
push
ret
popa
xchg
push
insl
xor
pop
je
pusha
xchg
or
jmp
test
inc
dec
cs
fiadds
adc
and
inc
int3
jg
sti
xchg
jl
mov
std
mov
mov
xor
je
mov
push
clc
xor
push
cld
xor
arpl
mov
sbb
es
xor
push
and
pop
push
mov
and
xor
and
lods
dec
cs
popf
inc
scas
push
gs
mov
pop
xchg
push
lods
sbb
xchg
mov
sub
xor
mov
lea
sbb
cmp
adc
mov
mov
stc
and
pop
loop
popf
and
xchg
addr16
ror
and
xchg
out
xchg
in
xchg
mov
data16
push
sub
and
mov
jge
fsubl
adc
in
lret
adc
mov
xchg
data16
adc
test
test
cld
cmpsb
sbb
mov
in
shl
pop
comiss
jmp
inc
sub
inc
and
or
sub
inc
repz
popl
stc
inc
inc
lods
popa
rolb
in
jo
test
sub
cmp
push
mov
lret
les
ret
out
push
jbe
xchg
loopne
bound
dec
sub
aas
cmp
jns
jle
cmp
inc
fwait
icebp
xchg
idivl
dec
cli
rclb
cmp
in
cmp
cld
cmp
rcll
mov
mov
test
inc
jmp
outsb
cmp
cmp
repz
cmp
outsl
int3
je,pt
notb
sub
in
jle
cmp
in
mov
nop
xchg
hlt
jae
cmpsl
out
pop
or
push
fnstenv
fs
nop
ret
test
outsl
xorl
aad
xor
daa
inc
and
sub
mov
sub
mov
cwtl
mov
test
loopne
sub
leave
fwait
adc
cmp
imul
pop
imul
rdtsc
pop
je
call
orl
cwtl
jmp
mov
mov
mov
pop
popf
test
jo
jecxz
gs
jge
repz
jecxz
fnstenv
add
jg
inc
js
mov
sub
or
nop
ror
lods
in
inc
pop
mov
das
and
push
in
mov
inc
call
mov
inc
aam
cld
and
sub
and
adc
shll
lret
nop
icebp
into
std
adc
sbb
and
repnz
cmc
sbb
push
clc
sbb
push
or
sbb
sbb
xor
cmp
repnz
or
test
adc
inc
or
xchg
ds
dec
sbb
outsb
adc
or
jns
add
je
ret
push
adc
inc
adc
mov
adc
mov
clc
sbb
out
pop
mov
jle
fimuls
pop
cmp
aaa
daa
pop
jns
call
lock
cmp
sub
adc
inc
or
or
sub
jmp
add
loope
out
mov
inc
add
sub
mov
push
jl
sbb
cwtl
push
or
dec
mov
jo
adc
fsubs
xchg
ja
cli
adc
in
mov
push
xor
xchg
loopne
fiadds
sbb
adc
xor
in
rorl
pop
inc
mov
or
sarl
jne
inc
cmpsb
icebp
add
loopne
lea
enter
jo
xchg
push
dec
dec
and
movd
clc
and
repnz
jnp
fidivrl
imul
and
xor
push
lea
jb
or
in
ja
jge
add
jbe
decl
ret
jl
ret
arpl
je
dec
aas
and
outsl
xchg
mov
adc
aas
adc
pop
repz
stos
repnz
inc
js
popf
mov
shld
out
xchg
bound
inc
push
mov
aad
mov
dec
std
mov
add
cltd
inc
lock
pusha
mov
popa
je
hlt
je
mov
cmp
in
and
aam
sub
or
sub
adc
sar
pushf
xchg
shll
filds
aam
or
adc
lea
repnz
or
adc
aas
hlt
xchg
dec
clc
mov
xor
sub
xchg
inc
add
pop
push
dec
lea
jp
add
push
shlb
call
inc
or
inc
add
push
icebp
xchg
cmp
in
enter
fisubrs
inc
inc
sub
aaa
js
xchg
into
jns
jne
inc
lcall
cltd
xchg
clc
mov
or
shl
push
nop
lea
dec
dec
stos
adc
push
fnsave
sbb
mov
or
test
or
iret
pop
in
adc
or
movsb
pop
lods
mov
jb
add
push
adc
or
mov
sbb
icebp
or
or
or
cmp
adc
jns
xor
ret
scas
add
inc
ja
and
lcall
adc
ret
movsl
or
test
mov
fs
aaa
in
sub
sub
test
add
sbb
mov
add
nop
xchg
jle
jecxz
enter
sti
push
and
es
adc
or
fs
push
aam
sbb
sub
inc
int3
shrl
sub
test
cmp
jle
imul
pop
sub
mov
fwait
popf
outsb
je
cmp
inc
ds
xor
or
adc
sbb
cmovne
dec
mov
push
or
mov
daa
jns
mov
cmp
cs
mov
push
dec
hlt
mov
fs
std
pop
test
sub
inc
xlat
mov
xchg
and
cmp
mov
adc
mov
mov
popa
cli
mov
enter
push
data16
dec
mov
or
mov
stc
xchg
sub
push
loopne
sar
cmp
loope
dec
out
divl
xchg
add
incb
xchg
xor
push
xor
and
sbb
and
or
test
addl
and
adc
and
aaa
pop
adc
or
sub
cwtl
loopne
cld
jmp
movsl
pop
pop
jno
inc
xchg
push
adc
inc
cmp
xor
enter
sbb
mov
cmp
enter
insl
or
and
jp
inc
cwtl
pop
pushf
xchg
clc
mov
add
add
aad
xchg
inc
or
clc
jle
pop
sbb
or
mov
cltd
notl
daa
add
sub
roll
ret
nop
dec
or
pop
sbb
ret
add
push
jmp
xchg
pop
inc
sub
adc
or
jmp
add
inc
and
dec
jl
push
or
adc
test
hlt
rcrb
rol
push
xchg
scas
push
sbb
cmp
cmpl
mov
dec
and
in
lock
into
daa
sub
inc
sbbl
rcr
addb
inc
or
sbb
sub
jp
jge
bound
nop
cwtl
das
adc
push
or
sbb
and
jo
repz
leave
mov
cmp
aam
cwtl
push
pop
cwtl
mov
or
xor
ret
mov
stos
stc
push
aad
fldl
in
mov
jbe
iret
sub
push
movsb
xchg
jo
test
and
insb
ds
popf
adc
mov
pop
push
popa
dec
pusha
xor
adc
mov
jnp
lahf
xor
jbe
push
and
and
clc
sub
adc
int3
push
imul
fmull
jle
push
scas
imul
addr16
cltd
pop
push
mov
scas
test
insl
dec
imul
push
or
rcll
mov
add
in
mov
pop
andl
insl
jp
mov
adc
dec
adc
push
mov
and
jns
imul
adc
test
mov
adc
mov
cmpsb
fisubl
jb
add
xor
scas
and
dec
int3
xchg
ljmp
lret
pusha
cmpb
inc
push
aas
or
test
jle
jmp
or
rorb
cwtl
sub
incb
scas
adcl
in
jl
rcrb
push
or
and
xlat
mov
dec
mov
ret
vunpcklpd
cmp
mov
or
push
sub
sub
push
sbb
inc
xor
adc
cmp
sub
imul
sbb
fcomip
or
in
ds
jo
xor
dec
mov
and
scas
jmp
nop
lret
mov
jo
imul
xchg
inc
pop
sbb
jae
lods
push
fldt
enter
adc
add
data16
xchg
or
pushf
sub
dec
or
es
mov
pushf
jg
jae
lcall
lahf
ds
mov
push
pop
out
and
add
pop
sub
adc
cld
pop
push
or
jle
mov
xchg
in
and
test
adc
jae
enter
push
mov
push
xchg
jg
mov
inc
adcl
pusha
lods
dec
or
or
inc
xor
add
movsb
rcl
adc
adc
push
inc
dec
aam
sub
add
fldl
fcomps
outsl
testl
ja
gs
and
mov
enter
xor
push
fsubs
sbb
rcl
test
dec
mov
inc
lods
outsl
into
push
and
nop
sbb
mov
pop
bound
jmp
sbb
and
and
nop
pop
repnz
movsl
test
scas
adc
cmc
shr
mov
nop
andb
jno
dec
mov
inc
inc
xchg
pop
dec
xor
cs
lock
js
dec
adc
fisubl
jbe
fisttpl
repz
fbld
ret
or
cmp
or
je
jno
cs
push
mov
cmp
mov
jno
or
pop
dec
mov
jno
add
je
es
adc
pop
mov
sub
push
inc
pop
mov
or
sub
pop
adc
jmp
mov
pop
dec
pop
or
pop
mov
sbb
xor
in
jno
add
xor
bound
imul
ss
sub
es
jo
pop
fwait
clc
das
popa
adc
push
and
mov
or
and
test
pop
jo
test
daa
sbb
sbb
xchg
in
xor
push
clc
push
lds
and
push
popf
out
or
push
sub
xchg
out
sub
aam
sarb
inc
or
daa
jne
jae
push
xchg
enter
test
adc
jb
test
dec
sbb
adc
lcall
push
loope
sub
or
sahf
lds
lcall
fs
mov
sub
sbb
sbb
pop
pop
je
cld
inc
loop
push
lea
and
jle
adc
or
pop
roll
or
ds
inc
das
sti
add
or
mov
nop
lods
or
dec
fistl
fs
pushl
sbb
sbb
pusha
scas
mov
push
mov
adc
push
lods
mov
jmp
jb
clc
push
inc
push
movsl
mov
sub
adc
push
xchg
stc
or
cld
or
push
pop
movsl
jg
mov
mov
cmpsl
sbb
xchg
sbb
fsubs
movsb
and
movsb
lret
xor
push
xchg
or
push
hlt
adc
pop
jmp
adc
dec
pop
in
shlb
and
inc
movsl
sbb
je
popf
pop
cltd
lods
xor
rcll
dec
mov
adc
xor
cmpsb
repz
mov
push
jg
cltd
lahf
lds
xor
notb
dec
lret
jb
mov
lods
push
sahf
daa
jno
dec
push
mov
dec
das
lret
scas
jmp
ds
push
mov
nop
popa
xor
inc
xchg
mov
push
sbb
jb
xchg
and
icebp
je
dec
movsl
adc
fs
or
mov
cld
jmp
shll
inc
sti
jne
mov
sbb
mov
mov
adcl
adc
fcompl
push
inc
push
icebp
jnp
dec
sbb
xlat
push
adc
into
mov
movsl
or
std
or
fsub
mov
into
pop
push
cmp
mov
inc
inc
push
or
rcl
jno
imul
sbb
lret
xchg
jl
xchg
fs
inc
mov
xchg
jl
mov
testb
test
mov
imul
shlb
xchg
push
fucomi
jbe
enter
inc
mov
mov
xchg
jl
mov
push
nop
movsl
lret
pop
mov
mov
rorb
or
jle
jo
sub
jbe
jae
and
xchg
or
sub
mov
lods
inc
xor
jl
mov
push
clc
jne
outsb
or
and
js
inc
xor
xchg
pop
mov
icebp
xchg
jno
jmp
jns
sub
add
leave
pop
jbe
ret
push
rcl
repz
out
xchg
mov
sub
imul
inc
clc
in
js
xchg
cmc
add
inc
xor
movsl
adc
hlt
insb
loope
add
or
dec
pop
jmp
out
adc
sub
scas
pop
mov
sbb
pusha
inc
dec
jne
push
jl
popa
call
push
and
call
les
xor
inc
adc
push
leave
push
test
mov
push
in
out
jecxz
pop
fsubl
mov
mov
mov
nop
push
mov
loop
push
push
mov
clc
mov
push
cmp
movsl
aas
inc
fsubr
mov
movsl
or
and
push
imulb
xlat
imul
sub
or
sbb
jns
clc
push
fimuls
cmp
jl
xchg
sbb
rcll
and
inc
pop
mov
mov
jne
mov
push
dec
es
mov
stc
and
inc
mov
sbb
clc
clc
pop
lea
lods
xchg
out
adc
cmpsb
adc
fs
jne
adc
dec
jae
jmp
xchg
les
pop
out
loop
js
push
outsb
out
and
push
pop
dec
pop
scas
dec
inc
jmp
fmuls
xor
les
cmp
jle
aas
movb
gs
lea
xchg
mov
imul
mov
dec
pop
andb
in
mov
cmp
mov
stos
cmp
mov
xchg
dec
cmp
je
sti
pop
sub
rclb
inc
in
iret
loop
fldt
push
in
mov
enter
adc
jne
xor
test
sbb
sbb
inc
sbb
stos
lods
jge
stc
pop
shlb
and
sbb
inc
daa
sub
xor
or
ret
xor
xor
xor
ret
xor
testl
cwtl
es
cwtl
push
lock
dec
stos
jmp
loopne
xchg
dec
rcrl
lock
lret
notl
dec
movb
lretw
fwait
inc
mov
popa
cmpw
xor
pcmpgtb
sub
enter
xchg
jmp
mov
inc
negb
adc
inc
in
push
fs
pop
push
push
mov
imul
mov
adc
mov
je
pop
shlb
clc
add
mov
test
pop
add
je
sbb
cmp
inc
push
xor
push
mov
jmp
push
lcall
mov
add
adc
test
push
icebp
mov
mov
out
mov
pushl
push
aam
je
lods
imul
lods
cmp
dec
and
or
and
int3
dec
mov
and
cmc
nop
dec
or
and
fld
fimull
cmp
enter
sub
sub
dec
clc
jae
adc
pop
sbb
lahf
xor
repnz
or
jbe
dec
dec
xbegin
xchg
dec
clc
inc
xchg
inc
repnz
sbb
inc
jp
sbb
mov
adc
mov
dec
and
lea
out
test
cwtl
push
and
scas
in
inc
movsb
and
cmpsb
es
or
fdivrs
inc
loopne
lahf
pop
mov
and
jl
call
pushf
xchg
pop
xchg
rcl
mov
sbb
push
ja
nop
xchg
lds
and
cmp
inc
into
loopne
repz
loope
call
push
mov
stos
cmp
minps
movsl
pop
mov
stos
sub
shl
or
shlb
jge
pop
in
outsl
dec
mov
or
sbb
push
cmc
test
mov
pop
add
inc
stos
adc
mov
roll
stc
rclb
bound
jne
xor
clc
xor
sub
add
cmp
jle
or
pop
mov
and
pop
imul
jge
jmp
ror
ljmp
push
and
jle
out
or
lcall
mov
xor
mov
jne
std
jb
push
loope
mov
cmpl
std
leave
test
lods
add
push
ss
addr16
dec
jecxz
inc
loopne
push
ret
jmp
inc
xor
fs
cmp
mov
jnp
xor
inc
jb
hlt
or
lret
or
inc
xor
les
dec
fisttpll
adc
nop
adc
and
leave
xchg
popf
dec
sub
pop
push
cmp
cmp
push
and
jnp
lock
jns
xor
mov
lods
adc
or
xchg
dec
and
je
mov
sub
mov
dec
adc
mov
inc
dec
movsl
mov
outsb
leave
cmp
adc
mov
inc
adc
jbe
enter
jno
ljmp
fucomp
repz
aad
jp
outsl
cmp
xchg
xchg
sub
jns
pop
shrb
fdivs
jae
mov
jno
dec
jns
and
inc
mov
xchg
adc
call
add
adc
mov
adc
cmp
das
test
dec
mov
mov
xchg
jle
mov
adc
ljmp
or
test
mov
and
inc
sbb
ret
adc
cmpsl
inc
mov
push
faddl
cltd
dec
push
fnstcw
xchg
cmpsl
push
jo
adc
mov
inc
xor
adc
inc
popf
push
or
ja
jmp
mov
or
or
cld
jle
daa
stos
jle
cmp
stos
imul
or
pop
cmc
xchg
or
push
xchg
mov
repz
xchg
adc
sub
cltd
call
daa
and
sbbb
adcl
pop
adc
andb
mov
jmp
dec
test
cmpsl
adc
add
in
fs
mov
pop
mov
movsb
xor
adc
mov
pop
mov
mov
jne
cmp
or
add
ja
mov
aas
mov
pop
pop
sbb
add
lods
cltd
and
xor
add
sub
rclb
sahf
mov
push
insb
and
movsb
or
rorb
je
lods
addb
loop
cmp
fadds
fidivl
fbstp
push
clc
push
call
add
test
push
bound
push
push
pop
cmp
or
inc
adc
fcompl
jmp
push
mov
adc
jl
push
xchg
sbb
adc
mov
mov
lea
mov
test
test
stos
sbb
sub
and
or
fcomps
jmp
lock
aam
jb
out
push
or
mov
and
push
sub
or
and
inc
js
scas
flds
aam
rcr
jns
xchg
fsubr
xchg
or
scas
rol
mov
push
mov
fdivr
push
xor
ds
sub
dec
lds
ljmp
add
mov
cmpsl
nop
xchg
sbb
stos
push
bound
in
inc
lds
add
jne
cmpl
adc
decl
dec
lret
and
xor
je
or
mov
pop
mov
xchg
pop
mov
sbb
sub
adc
mov
and
sbb
dec
or
or
inc
stos
les
pop
shr
outsl
mov
int3
mov
jae
xchg
jne
adc
pop
push
jle
mov
mov
insb
ret
dec
lods
cmp
or
bnd
dec
push
lock
repnz
adc
mov
xor
xchg
jae
pop
in
loop
leave
ficoml
jb
xor
loop
sahf
sbb
cmpb
push
insb
jne
sbb
lahf
les
xchg
inc
ret
pop
xor
adc
mov
and
push
mov
adc
stos
add
cmp
rclb
xchg
push
jae
push
add
xlat
inc
jns
lret
mov
adc
xor
xor
sbb
out
inc
inc
dec
rol
cs
xchg
jmp
lea
cmp
adc
jb
pusha
push
aad
testl
sbb
mov
pop
je
mov
cmp
dec
add
fdiv
cld
aas
fistl
push
mov
sub
enter
cmp
inc
dec
pminub
mov
push
out
mov
cltd
dec
aad
mov
nop
inc
in
sbb
mov
push
sbb
fdivrl
pop
dec
adc
xchg
in
loopne
andb
sub
insl
mov
pop
jno
inc
inc
and
ret
jp
add
and
inc
sbb
popa
js
or
jge
pop
mov
sbb
mov
xor
shlb
fs
sub
in
xor
pop
out
lret
or
jne
mov
cmp
or
dec
jo
add
mov
jae
out
fwait
int3
push
and
test
and
dec
dec
cli
into
mov
andl
loop
jg
call
pushf
sti
cs
sub
das
out
mov
out
fs
enter
jmp
adc
test
sbb
mov
add
add
rcrl
pop
or
movl
xor
lcall
mov
push
and
pop
mov
and
xlat
inc
mov
leave
sub
mov
ret
mov
mov
cmp
cmp
and
and
xlat
lods
les
test
push
mov
xchg
mov
push
test
xor
adc
sarb
loop
mov
xor
mov
mov
push
lret
sub
stos
clc
outsb
cmp
push
and
push
jl
push
jno
xchg
inc
in
es
xlat
aaa
test
sbb
lock
and
mov
dec
mov
xor
imul
cltd
mov
xchg
inc
inc
mov
xchg
push
sbb
or
push
add
in
dec
jecxz
xor
pop
cli
clc
cmp
push
repz
stos
dec
cmpb
cltd
ret
dec
lea
push
add
bnd
pop
xor
inc
or
or
adc
jl
std
stc
xchg
cmpsb
xor
xlat
sarb
dec
and
and
cltd
pop
inc
add
popf
adc
inc
hlt
pop
xchg
sti
pop
jg
and
or
in
movsl
mov
outsl
or
push
pop
in
jnp
push
sub
add
mov
jmp
enter
sti
test
xchg
lods
std
orb
and
mov
sbb
fisubl
test
test
inc
mov
jmp
push
adcb
inc
and
or
pop
jge
and
aad
dec
sub
jl
inc
scas
mov
adc
and
and
mov
rclb
cmp
jl
dec
xorb
jge
mov
push
dec
pop
jmp
inc
push
movsb
jge
into
mov
and
mov
xor
add
mov
inc
repz
and
lods
pushf
push
xchg
mov
icebp
mov
and
in
xor
insl
dec
test
test
jle,pt
sub
mov
dec
sub
cmc
push
sub
xchg
mov
sub
mov
adc
pop
fsubrs
jne
imul
add
incl
jne
mov
out
inc
sub
xchg
cmp
inc
push
decb
xchg
cmp
mov
rclb
inc
cmpsl
dec
jne
dec
sub
mov
xchg
xchg
dec
das
sub
ret
mov
in
ja
idivl
je
mov
xchg
push
and
scas
lea
lea
push
add
pop
bound
dec
jo
and
ret
flds
sarb
lods
sbb
push
pop
and
movsl
repnz
das
test
call
jne
popf
xchg
adc
movsb
mov
jnp
cs
inc
jns
movl
sub
and
xor
sub
rorb
mov
jg
mov
dec
les
mov
in
mov
clc
repnz
call
jmp
pop
stos
adc
xchg
pop
call
lock
pop
xchg
add
pop
cmc
aad
and
ss
xchg
jmp
jo
imul
mov
dec
and
mov
std
jmp
cmp
adc
push
decl
xchg
push
insl
je
jp
popf
xor
add
push
add
pop
dec
adc
push
mov
je
dec
xchg
push
pushf
push
inc
push
mov
push
sub
icebp
cmpsb
adc
jno,pn
adc
and
cmpb
adc
inc
stos
xor
inc
cmp
inc
adc
hlt
jle
jp
push
mov
push
adc
lahf
push
xor
and
outsl
fs
fs
mov
push
pop
xor
sbb
add
pop
xchg
cmp
push
inc
inc
movsb
shrl
lods
lock
les
lcall
pop
rep
nop
push
and
xchg
or
jnp
data16
mov
pop
jmp
push
in
clc
push
pushf
cmp
mov
dec
and
bound
jae
ret
push
into
dec
fstl
icebp
xchg
cmp
jmp
push
add
cmp
nop
pop
and
les
adc
or
mov
cmp
or
cmp
inc
loopne
inc
mov
adc
dec
adc
and
outsl
roll
sub
jmp
add
sbb
xor
daa
ljmp
dec
jns
push
hlt
or
cmc
adc
ficompl
lcall
xsha1
cmpsb
or
xor
jmp
imul
inc
dec
ficoms
sub
add
jge
sub
xchg
je
xlat
je
jecxz
pop
xchg
adc
cmpb
cmc
rclb
popa
or
scas
or
cs
mov
pop
dec
fwait
jmp
fs
aas
out
out
add
jae
movl
dec
add
adc
xchg
adc
dec
push
xchg
test
sub
in
pushf
adc
mov
xchg
insb
sub
les
add
push
cmp
ljmp
es
xchg
mov
push
or
add
jmp
outsb
adc
shl
mov
cmpl
imul
imul
dec
push
jl
mov
xchg
jecxz
sub
cmpsl
aam
and
test
lahf
sub
dec
mov
les
sbb
cmpsl
fistps
jle
add
lcall
or
stc
shlb
leave
mov
stos
loop
andnps
dec
dec
mov
lahf
es
and
enter
call
gs
ret
rclb
and
push
pop
mov
ret
dec
test
leave
adc
or
push
fdivrs
inc
dec
push
push
mov
jle
pop
cmp
push
aas
jne
dec
adc
or
ljmp
cli
lret
jl
jne
sub
xor
lahf
or
pop
xchg
sahf
hlt
ja
xor
xor
mov
adc
cmp
xorl
imul
inc
dec
mov
adc
scas
xchg
jne
xchg
adc
out
mov
xchg
or
adc
sbb
cmp
test
test
push
cmpsl
inc
dec
xchg
adc
pop
lret
push
pop
loopne
nop
mov
js
or
fcomi
inc
lods
add
ss
mov
push
pop
cwtl
add
pop
sub
dec
or
sbb
orl
and
inc
xchg
mov
cmp
and
stc
aam
loopne
mov
scas
xor
or
and
add
pop
ss
cmpsb
adc
cmp
cmp
mov
les
fs
cmpl
das
dec
pop
testb
inc
je
cmp
aaa
jae
jmp
inc
mov
sbb
lock
flds
jecxz
jg
xchg
out
enter
inc
stos
push
adc
fsub
ja
jg
cmp
pop
and
and
and
cmp
push
dec
movl
mov
cltd
fmuls
sti
fsts
sbb
inc
sub
jno
into
sub
cltd
pop
xor
xor
in
rorl
cmp
nop
push
mov
adc
xchg
gs
dec
gs
enter
pushf
lret
outsb
mov
xchg
test
pop
fsin
das
lds
adc
mov
clc
mov
or
aas
ljmp
adc
js
jge
dec
cmc
or
orb
pop
inc
sub
lea
xchg
repz
lds
add
shlb
rolb
sbbl
les
scas
jbe
dec
mov
jns
sub
inc
bound
cs
cmp
push
xor
je
std
mov
mov
mov
mov
push
es
mov
aaa
icebp
or
mov
and
bound
mov
ljmp
jne
ss
adc
sbb
enter
test
push
loope
bound
es
pop
pop
xor
jne
push
xor
or
add
jmp
push
in
cmp
jne
daa
dec
or
jle
jb
dec
inc
push
pop
jbe
stos
pop
aam
hlt
pop
arpl
or
notb
lcall
push
sbb
in
sahf
push
dec
push
psubd
rcl
out
jo
jmp
jbe
push
add
lcall
int3
lahf
dec
push
bound
or
and
push
ja
mov
mov
jb
cld
sub
dec
popf
dec
jo
dec
lds
sbb
mov
lret
push
dec
stc
out
cltd
inc
adc
sbb
push
mov
dec
jmp
imul
scas
push
sbb
hlt
movsl
push
daa
ror
or
xchg
jno
adc
out
adc
push
or
xor
inc
jg
jne
lods
xchg
jns
fsubl
mov
jg
dec
loop
push
mov
repz
ret
mul
test
jne
cmpsl
loopne
sbb
insl
jmp
ss
popf
xchg
jge
adc
dec
hlt
mov
lock
jmp
leave
cmc
lock
fs
mov
or
cmp
inc
inc
or
cmp
or
stc
pushf
dec
jge
je
push
lahf
xlat
test
sbb
pop
and
stos
xor
dec
mov
and
adc
xlat
scas
ljmp
jo
test
mov
cmp
dec
cmp
cmp
sti
sbb
inc
pop
adc
pop
inc
and
pop
mov
pop
and
repnz
sti
dec
xor
cmp
and
insb
xchg
decb
je
gs
int3
mov
jl
out
jge
test
and
jle
sti
and
xor
mov
sub
push
or
and
cmp
test
movsb
and
movsb
xor
lcall
push
pushf
adc
push
cwtl
cmp
sub
ret
mov
or
cmp
movsb
cmp
adc
pop
cmp
dec
and
adc
lock
clc
sub
ljmp
enter
mov
add
xchg
fdivl
adc
sbb
aaa
mov
fstps
sbb
sbb
mov
das
mov
adc
mov
mov
enter
mov
fcmovbe
mov
aaa
imul
ret
cmp
sub
enter
mov
add
mov
aam
or
add
add
inc
int3
sub
cmp
movsl
or
or
or
idiv
sbb
les
into
into
das
jmp
shl
das
push
dec
sub
ret
mov
in
repnz
add
add
adc
sub
sbb
and
mov
jo
pop
scas
and
popa
rolb
mov
jb
stc
inc
les
or
xchg
scas
movsl
test
dec
out
jmp
shrl
push
scas
pop
push
push
pop
sub
cmp
sbb
add
adc
sub
sub
lock
and
push
sub
ss
inc
shl
sbb
vmwrite
js
inc
jl
cmp
or
cmp
jl
sub
pusha
push
cmp
inc
adc
xor
mov
add
jp
add
inc
outsb
cmp
movsb
cmp
je
rolb
jne
xor
sbb
mov
pop
sbb
std
rcrb
push
fstpl
add
mov
add
cmp
or
inc
pop
enter
push
mov
scas
aaa
adc
and
sbb
push
iret
cli
or
ljmp
orb
in
hlt
cmp
xchg
clc
loope
add
and
cmp
xchg
shlb
mov
xchg
lahf
pop
sbb
adc
stc
ret
jne
stos
mov
jle
xchg
cmpb
addl
inc
jp
out
xchg
sbb
inc
enter
cmpb
jle
mov
xchg
jns
push
cltd
shrb
pushf
xor
lds
dec
cmp
mov
mov
mov
mov
inc
cmp
std
out
mov
adc
stos
adc
aad
add
push
push
adc
inc
xchg
ja
stos
inc
inc
inc
shll
lods
pop
push
push
xchg
pop
xchg
push
mov
and
inc
mov
sub
shll
rclb
mov
jmp
pop
xchg
in
pop
aad
sbb
sti
hlt
xor
pop
call
shlb
cmp
inc
xor
mov
imull
shlb
repnz
or
xchg
add
stc
mov
mov
adc
and
mov
dec
ja
aad
sub
sbb
lcall
xchg
and
popf
insb
mov
enter
inc
xchg
adc
mov
std
les
scas
pop
push
add
mov
mov
popa
cmp
xor
loope
jne
jbe
es
jmp
call
jmp
adc
mov
xchg
or
lods
sbb
test
push
sub
cmp
sbb
je
aaa
das
xchg
out
int
pop
adc
loope
sahf
pop
cmpsl
adc
jmp
mov
enter
pop
test
imull
push
aas
aaa
jne
int3
enter
movsb
in
adc
js
rolb
and
mov
daa
in
jle
hlt
scas
dec
inc
movsl
repnz
sub
dec
movsl
aad
dec
cmpsb
cld
push
sbb
enter
cld
jl
adc
dec
mov
and
pop
icebp
and
push
cmp
push
inc
add
jae
xorl
adc
jp
inc
cmpsb
mov
mov
movsl
mov
mov
out
or
ljmp
popf
xchg
enter
xchg
ss
sub
and
sbb
ss
daa
enter
lock
mov
in
jge
scas
sub
sbb
js
imul
shl
push
test
mov
nop
imull
sub
inc
inc
lcall
inc
sub
lods
dec
xchg
movsb
lods
lahf
rolb
mov
out
push
inc
cli
loop
xor
js
mov
icebp
inc
sub
nop
mov
jnp
inc
loope
aas
fcomps
pushf
js
push
repz
adc
mov
and
push
pop
sub
dec
sub
and
iret
fistl
lcall
inc
jle
push
mov
shlb
mov
ret
lds
xor
mov
xor
and
mov
fists
lea
or
popf
inc
pop
pop
subl
sarb
mov
push
sbb
inc
xchg
sbb
mov
mov
inc
adc
cmp
xchg
imul
xor
push
push
andl
mov
or
int3
lahf
push
test
push
mov
mov
rol
adcb
adc
pop
pop
mov
dec
repnz
mov
sti
or
push
xlat
in
dec
adc
orl
push
xchg
cmpsl
std
xchg
cmpsl
xor
icebp
or
push
sub
rorb
or
push
aaa
push
xchg
xor
or
cmpl
pop
pop
sbb
pop
jg
sub
mov
and
or
dec
sbb
bswap
mov
push
push
or
jecxz
or
jle
jecxz
in
movb
js
enter
adc
xchg
or
pop
dec
pop
icebp
insl
cmp
sbb
sub
mov
jne
cmp
lcall
in
mov
aam
test
stos
sub
mov
push
jo
inc
nop
add
push
inc
inc
dec
sbb
dec
inc
les
push
sti
lret
jo
mov
push
mov
dec
mov
std
je
mov
das
mov
je
inc
cmpsl
or
xchg
adc
notb
xchg
hlt
pop
mov
push
and
push
jo
xchg
mov
mov
out
inc
hlt
sahf
popa
fs
je
in
dec
inc
ret
pop
pop
jbe
pop
scas
inc
push
aad
pop
fistpl
pushf
fsubr
daa
or
sbb
lods
xor
add
scas
jbe
rep
cmp
sub
aas
cmp
bound
inc
xor
pop
push
test
pop
int3
ljmp
pop
and
jge
adc
orb
es
mov
pop
jmp
dec
jno
sbb
xor
push
dec
and
inc
mov
hlt
xor
in
xchg
scas
cmpsb
dec
dec
subb
push
cmpl
lods
adc
cmp
sub
adc
sti
add
adc
or
adc
inc
cld
sub
scas
pop
cmp
pop
je
xchg
mov
je
fmul
inc
xchg
aam
inc
inc
push
and
lods
nop
adc
cmp
loopne
hlt
cltd
mov
dec
xchg
fcomip
nop
pop
xor
shlb
jle
mov
mov
mov
enter
jb
pusha
pop
push
adc
mov
xchg
into
dec
mov
clc
out
sub
pop
push
fs
jbe
sahf
and
pusha
or
stc
or
mov
fdivrl
mov
add
clc
cmp
or
adc
xchg
or
movsb
mov
hlt
shl
movsb
mov
mov
dec
xor
sub
or
xchg
xor
jno
mov
fisttpll
jne
mov
jl
scas
mov
fiadds
jne
xchg
mov
pop
mov
test
movsl
lret
and
xchg
repnz
and
adc
dec
loope
sub
cmpb
dec
in
js
gs
lock
loope
mov
adc
xchg
xchg
dec
dec
inc
sub
sub
pop
je
adc
inc
inc
movsb
stos
in
xor
push
mov
cmp
or
and
mov
mov
push
dec
jl
cmpsl
sbb
xchg
popf
js
call
les
xor
test
and
adc
or
pop
xor
sbb
iret
clc
mov
ret
add
push
fbstp
clc
cmpsl
rcr
xchg
das
icebp
int
rclb
cld
lods
xor
aam
adc
xor
jmp
imul
mov
repnz
sub
jne
jns
jno
or
inc
fwait
call
jbe
rorb
aas
inc
dec
push
test
stos
push
inc
and
mov
arpl
movsl
aad
nop
cli
nop
shlb
xor
mov
pop
ret
jns
flds
dec
notb
je
jg
in
jge
inc
fcmovnu
lds
sbb
mov
insb
loope
call
cmp
jne
stc
insb
push
cmpb
dec
xchg
dec
test
sti
sub
ds
add
xchg
cmpsb
or
jbe
pop
fisubs
push
cmpb
test
loop
pop
add
or
jo
lcall
ret
pusha
mov
gs
jg
cmp
mov
cmp
or
pop
insb
shlb
adc
jg
jmp
mov
fcomps
inc
in
cltd
jmp
inc
inc
xorb
mov
add
decl
test
andl
vmovdqu
push
adc
call
mov
jmp
mov
in
addr16
mov
inc
inc
test
adc
out
jo
adc
cmp
leave
je,pt
xchg
push
js
pop
mov
jns
push
fs
sub
push
jne
inc
xchg
imul
je
xchg
mov
sti
push
adc
test
and
add
add
push
mov
push
inc
or
add
xchg
test
notb
fwait
shlb
sub
adc
pop
ret
enter
in
adc
movsb
aam
or
inc
and
cmpsl
pop
rcl
test
jle,pn
cmp
dec
adc
mov
mov
mov
nop
pop
and
mov
and
fcomp
cmp
nop
daa
lret
lock
pop
mov
push
mov
xor
lock
mov
mov
xchg
movsb
out
pop
lods
fsubs
rcrl
xchg
in
xlat
xchg
mov
lcall
hlt
jnp
mov
clc
push
cmp
nop
and
outsl
or
push
hlt
mov
jae
lock
les
daa
and
sub
xlat
ss
call
pop
lods
pop
leave
pop
push
inc
adc
add
pop
inc
dec
xchg
add
inc
call
dec
push
and
hlt
fs
ja
js
daa
xchg
fisubrs
ret
push
xor
or
ficompl
ret
add
dec
loop
xlat
mov
je
test
in
and
pop
xlat
clc
mov
and
push
lds
jne
sbb
mov
cs
push
xchg
fwait
jecxz
pop
cli
jb
loopne
sub
test
xchg
xchg
lods
movsb
into
fcoms
inc
sbb
mov
mov
daa
fs
std
pop
jbe
mov
ds
adc
cltd
mov
inc
das
mov
adc
pop
push
mov
pop
jno
mov
add
add
test
add
test
cltd
adc
sub
inc
and
and
cmp
cwtl
mov
dec
in
mov
or
lret
mov
jae
cmc
adc
loope
add
inc
jle
adc
lahf
jns
mov
in
mov
xchg
in
fcompl
mov
js
dec
test
outsl
fwait
mov
jmp
push
cmp
icebp
pop
clc
cmp
dec
push
loopne
insb
sbb
sbb
ljmp
inc
cwtl
stos
mov
mov
in
scas
mov
sub
movsl
xchg
and
repnz
mov
or
mov
sub
adc
fldt
and
adc
in
fninit
xor
add
add
fstl
cmpl
push
adc
jmp
xor
inc
outsb
outsl
push
pop
mov
fsts
je
jecxz
dec
clc
push
push
pop
cmp
rorb
mov
aad
sbb
fdivr
test
mov
outsl
cli
or
fistl
pop
daa
jle
push
xchg
sub
xor
add
pop
add
and
and
xor
das
xor
xor
repz
sub
mov
lea
sub
cmpsl
jle
das
jle
imul
loop
dec
loope
test
rcrb
mov
lret
outsl
push
and
lret
cmp
cmpl
or
scas
les
dec
cmpl
sarb
shll
data16
test
mov
and
int
inc
xor
out
xor
rcrb
sub
sub
out
mov
pop
sub
mov
rolb
ss
sub
cmp
adc
mov
mov
cmp
fstl
jle
inc
orl
lret
clc
adc
scas
movsb
dec
mov
ljmp
pushf
mov
leave
pop
lcall
pop
inc
and
or
in
mov
jecxz
ficomps
jns
lds
and
popf
leave
jp
stos
dec
shll
sub
xchg
pop
cmp
stos
pop
push
in
scas
xor
std
add
add
pop
push
stc
add
pop
das
movsb
pop
adc
in
add
pop
mov
loopne
loopne
or
add
mov
cs
daa
xchg
lret
leave
pop
push
mov
dec
xor
je
adc
mov
push
adc
xor
adc
cvtdq2ps
cmp
loope
out
adc
mov
mov
sub
jnp
cwtl
mov
in
and
aas
pop
in
xchg
std
sub
repnz
jge
mov
call
jmp
aam
dec
xchg
dec
adc
lahf
dec
lea
lds
in
nop
sbb
insb
in
or
mov
sub
cmp
mov
adc
mov
lcall
sub
or
sbb
and
adcb
inc
xor
xchg
add
cmp
ret
nop
mov
sbb
fisubrs
inc
push
mov
scas
inc
xchg
dec
pop
mov
dec
out
jns
cmp
lahf
das
sbb
call
mov
jo
clc
sub
dec
gs
push
bound
mov
dec
sbb
call
subb
push
adc
sub
and
into
add
sub
sbb
lret
rorb
dec
jne
fnstcw
mov
push
mov
mov
mov
or
popa
lahf
adc
shlb
mov
pop
pop
pusha
addr16
jns
pop
mov
add
cld
jle
mov
adc
shrl
jp,pn
movsl
xchg
dec
lock
das
lea
dec
push
and
cmp
movups
fldt
dec
or
xchg
add
xchg
pop
mov
or
mov
xchg
add
sbb
shl
hlt
jp
dec
loop
push
push
push
movsbl
fists
or
mov
sub
jo
sub
sbb
test
movb
mov
ljmp
test
mov
in
mov
imul
push
dec
inc
xchg
mov
jge
and
sub
aas
shll
sbb
ret
push
pusha
cld
lock
mov
xchg
xchg
out
dec
xor
adc
ret
cmc
xchg
fisubrs
mov
pop
push
jne
cmpl
ds
int3
pop
mov
lock
sahf
and
xchg
shll
into
cmpsb
dec
movsl
dec
in
sbb
not
and
dec
dec
adc
xor
mov
adc
inc
sbb
xor
aaa
mov
jne
sbb
pop
dec
ret
out
bound
push
jae
and
or
and
dec
xor
pusha
inc
and
stc
mov
not
test
mov
je
mov
jo
mov
fistpl
sbb
lods
push
jl
push
inc
dec
mov
adc
pop
pop
aam
mov
jmp
jl
push
clc
mov
loopne
jl,pt
std
mov
mov
dec
shlb
sbb
fidivrs
lret
loop
and
pop
rcll
xchg
cmp
or
dec
inc
pop
mov
lret
out
pop
test
jae
cmp
push
lcall
arpl
push
inc
add
jl
or
nop
rorb
les
jg
push
push
and
cld
and
pop
push
es
and
mov
pop
cli
adc
mov
and
xor
sarl
adc
mov
and
jbe
pop
stos
or
or
inc
test
or
jle
adc
test
xchg
xchg
fcoms
test
jle
dec
test
test
aam
sbb
cmp
xchg
push
push
adc
adc
adc
adc
jb
adc
add
int3
aad
or
aad
and
fs
je
outsl
cmp
adc
push
ja
mov
sahf
test
adc
push
cmp
mov
inc
or
inc
dec
dec
lret
setns
adc
sbb
sub
loopne
sub
xor
push
mov
je
pop
push
lock
cltd
fs
adc
clc
sub
arpl
addb
or
popa
test
pop
xor
adc
andb
push
fdivl
clc
pop
mov
mov
xchg
inc
sub
out
dec
jo
movsl
fiadds
test
or
fmuls
fildl
sub
inc
or
push
jecxz
enter
arpl
inc
pop
adc
pop
adc
jne
or
add
inc
dec
jne
in
add
push
outsl
sbb
mov
dec
add
lea
pop
push
add
mov
xor
and
rorb
cmp
sbb
xor
xchg
aas
and
sub
jl
mov
hlt
into
push
xchg
push
pop
mov
call
pop
jns
or
bound
dec
cmpsl
push
ret
rorl
enter
cld
imul
mov
or
jo
mov
xchg
cli
hlt
mov
pop
lcall
cmpsl
fistl
pop
and
fcmovnbe
inc
adc
lock
fcoml
fsubr
dec
lds
push
dec
inc
and
jmp
clc
les
pop
les
and
or
mov
jns
movsb
dec
lods
xor
jns
leave
pushf
mov
lret
lods
cld
xchg
call
in
and
jo
fldl
clc
dec
inc
mov
cld
dec
inc
fdivp
test
aas
mov
clc
push
fiadds
and
fsubrs
xchg
jl
test
cmpsl
or
pop
call
and
jns
push
test
test
or
dec
loopne
scas
pop
jg
les
loope
adc
loope
test
loope
js
adc
pushl
inc
enter
js
stos
mov
test
test
loop
push
cmpsl
sub
jp
fcompl
jbe
dec
jecxz
enter
pop
stos
cltd
test
stos
xor
inc
xor
fnstcw
test
pushl
push
lcall
push
inc
int3
mov
outsl
jo
rol
popa
into
test
push
nop
cs
adc
adc
mov
out
adc
cmp
inc
sbb
nop
in
out
mov
ret
jge
cmp
inc
out
mov
push
jbe
sub
adcl
in
cs
xchg
cld
cmp
pop
pop
lods
inc
iret
lods
into
lahf
xchg
loopne
cmpl
cs
rcll
enter
sub
inc
dec
clc
jne
xchg
adc
cld
sub
mov
aas
mov
cs
inc
mov
lds
mov
cwtl
pop
jg
mov
xor
xchg
or
rcll
push
mov
push
sarl
inc
inc
je
je
fs
inc
dec
inc
nop
adc
jecxz
inc
lret
lret
push
jo
dec
lock
insl
dec
int3
mov
test
and
xlat
fs
ljmp
add
pop
push
mov
dec
or
mov
lret
adc
cmc
jmp
push
or
aam
pop
incl
mov
cmp
jge
shr
cmpl
jae
stc
or
mov
add
lret
das
mov
jnp
pop
fdivrl
adc
push
mov
adc
lret
mov
jle
sbb
adc
pop
sub
inc
pop
sub
out
sbb
hlt
aam
add
adc
sbb
imul
gs
push
cmp
adc
daa
pop
fisubl
adc
jmp
sub
fwait
mov
and
fadds
cmp
sub
lods
rol
jmp
sbb
lds
and
sarb
add
inc
inc
mov
mov
sub
and
sbbl
jne
mov
push
adc
push
push
push
mov
pop
push
or
out
sub
and
pop
int3
stc
das
mov
sbb
cmp
jle
sti
movsb
stos
pop
xor
mov
in
gs
xchg
paddd
inc
sub
cli
push
pop
adc
fld
out
shrl
sbb
shrb
push
adc
shlb
addr16
scas
mov
mov
dec
mov
pop
mov
mov
das
scas
dec
sbb
adc
loope
inc
or
add
xor
scas
sbb
mov
sub
mov
es
pop
pop
fistpl
xchg
imul
and
add
cmp
or
or
idivb
sbb
fcoms
xchg
je
xchg
insl
mov
mov
adc
repnz
inc
or
or
jg
mov
icebp
into
dec
cmp
in
cmp
mov
mov
xchg
pop
fwait
jl
sti
or
adc
mov
les
and
mov
cmp
push
pop
dec
push
sbb
pop
inc
imul
fs
dec
out
cs
loope
adc
and
adc
mov
push
mov
mov
inc
orb
adcl
nop
or
out
js
addl
jo
gs
push
dec
push
stc
aaa
xchg
jmp
aas
movb
inc
xor
pop
sub
ljmp
mov
rcrl
push
cmp
jle
insb
fidivrl
call
dec
jg
xor
inc
test
jle
push
and
push
inc
pop
and
inc
inc
sub
dec
repz
lods
fcoms
jge
mov
xchg
repz
adc
jmp
xchg
enter
sbb
or
xchg
jo
sub
and
pop
lods
sub
and
ljmp
out
fildll
das
je
jbe
leave
stos
into
mov
out
nop
adc
mov
leave
xchg
shlb
in
fs
mov
sub
push
cmc
mov
sub
push
adc
mov
cmpsb
imul
xlat
adc
mov
mov
inc
inc
and
or
and
push
lds
nop
dec
lcall
test
inc
pop
and
and
mov
and
mov
or
decb
or
xchg
sbb
jmp
mov
push
out
push
xor
sbb
push
movsb
das
jge
sub
pop
lds
adc
jecxz
pop
jmp
sub
sbb
jnp
dec
push
fcmovnb
fisttpl
movsb
pop
mov
sub
pop
das
adc
or
push
xor
pop
inc
lds
or
adc
or
adc
mov
cltd
iret
adc
mov
push
adc
outsl
popa
dec
push
scas
cmp
push
pop
push
repz
dec
loopne
push
andb
sub
add
call
cmpb
pop
fsubl
out
push
mov
or
shlb
pop
jg
add
lods
pop
lcall
daa
pop
ja
add
xchg
in
test
or
mov
sub
xor
or
add
mov
mov
stc
sbb
jae
je
movzwl
or
frstor
jmp
pop
mov
push
dec
in
push
je
movsb
and
add
or
pop
jne
test
inc
sbb
lods
xchg
lahf
ror
and
mov
mov
jge
pop
sbb
sub
jne
pop
mov
adc
sub
js
jno
cmpsl
cld
daa
and
jns
mov
adc
adc
push
or
inc
inc
ljmp
push
xchg
adc
adc
loopne
adc
sbb
adc
sbb
xor
jmp
popf
jo
adc
mov
or
or
inc
xchg
cld
mov
dec
cs
xor
xchg
lds
sub
add
into
stos
lret
and
fs
adc
sub
repz
pop
movsl
xlat
enter
inc
or
sbb
mov
icebp
icebp
jns
test
and
inc
inc
imul
sbb
sub
mov
adc
rclb
mov
aaa
xchg
or
sbb
mov
lea
cs
lds
pop
pusha
sub
sbb
and
mov
rorl
stos
mov
sub
dec
nop
arpl
dec
adc
or
pop
inc
push
sub
cmp
sarl
mov
add
int3
push
ret
pop
xchg
mov
mov
dec
enter
add
xchg
jns
dec
push
repnz
scas
sarl
and
inc
test
vucomiss
sub
stos
mov
push
dec
push
and
into
add
cmp
ljmp
lock
add
dec
movsb
lods
jo
mov
mov
addb
and
aam
rolb
mov
cmp
mov
adc
add
jle
and
jae
jo
inc
sbb
inc
mov
cmp
xchg
jae
or
sbb
fsubl
js
jns
ret
lods
lods
cmp
and
cmp
and
push
shrl
jmp
dec
xor
push
pop
inc
ss
das
dec
in
dec
sub
test
aam
jno
test
jnp
pop
cmpsb
mov
jecxz
pop
out
adc
jecxz
push
shlb
lcall
pop
jns
mov
add
lret
iret
and
stos
ss
mov
sbb
cmpb
push
flds
cwtl
pop
or
cmp
xor
jp
inc
jl
js
dec
cmp
jae
cmp
jle
int3
imul
dec
and
push
adc
dec
aad
sub
jl
mov
std
inc
push
test
je
out
fcomps
lahf
inc
ja
sub
jmp
sti
mov
pop
pop
dec
and
xchg
cmp
inc
push
shrl
fsubl
faddl
push
mov
pushf
push
adc
adcl
jno
je
and
mov
movsl
stos
sub
mov
int3
xlat
jnp
scas
pop
les
push
push
jmp
shll
dec
lcall
mov
or
fcoms
jo
test
std
int
and
fists
negb
push
or
add
aad
cltd
add
inc
pop
sti
push
je
inc
xchg
cld
add
lea
pop
mov
pop
or
ljmp
adc
scas
dec
xchg
dec
mov
mov
and
or
leave
adc
and
dec
cmpsb
mov
xchg
mov
cmp
mov
hlt
insl
dec
loop
inc
aam
hlt
stc
lock
jg
adc
mov
in
in
cwtl
dec
and
in
sub
or
and
dec
idiv
jmp
add
sbb
cmp
xchg
in
test
cmpsl
enter
lea
jl
cmp
out
fs
loopne
push
xchg
loopne
jge
test
out
jnp
lret
inc
loop
ds
std
xorl
and
ljmp
sbb
es
pop
and
sub
sub
or
sub
sub
and
shlb
cmp
jnp
mov
ljmp
or
nop
fdiv
fldenv
dec
fadds
push
fsubs
leave
aam
inc
xchg
aam
rcrb
jbe
int3
and
and
in
enter
or
les
in
les
cld
pusha
add
sti
xchg
shll
enter
push
push
enter
cmc
sbb
push
push
jnp
dec
pop
dec
clc
aad
das
into
adc
mov
sbb
sbb
adc
xor
imul
sub
in
sbb
cmc
push
or
and
je
rorb
cmp
dec
mov
pop
xor
rorb
in
sub
pushf
outsl
das
lcall
jmp
fwait
xchg
pop
loopne
mov
test
xchg
pop
add
hlt
jmp
or
cltd
mov
dec
ljmp
cmp
jne
scas
aam
mov
adc
je
fisttpll
and
mov
push
cmp
jne
pop
cmp
pop
stos
rorb
mov
mov
jno
or
adc
adc
aad
push
add
and
loope
add
mov
push
int3
aas
xchg
mov
inc
cmp
xchg
sbb
jo
dec
sub
inc
push
xchg
pop
pop
adc
and
push
jmp
xchg
arpl
mov
or
or
ret
out
xchg
mov
mov
inc
jmp
dec
lahf
sbb
enter
dec
mov
jne
inc
xchg
mov
xor
sbb
test
inc
mov
mov
pushf
cld
xchg
dec
ljmp
fcmovbe
dec
test
pop
cmp
pop
mov
mov
fwait
sub
push
pop
hlt
repz
mov
insl
clc
jnp
add
xor
mov
loopne
enter
jge
test
or
jl
jno
orl
pop
pop
push
add
or
and
adc
xchg
sbb
sub
jl
lods
or
dec
xor
adc
jmp
and
inc
sbb
xor
stos
pop
lret
lock
mov
mov
add
test
inc
cli
test
in
inc
pop
mov
add
and
fsubl
arpl
in
push
mov
add
xor
push
cmp
push
or
xor
dec
add
sub
cmp
jle
pop
adc
cmp
sub
dec
enter
cld
jge
sub
ror
xchg
jg
in
or
icebp
adc
mov
fisubrs
sub
and
inc
addr16
nop
and
mov
ret
push
push
dec
or
or
adc
enter
or
xor
pop
movsl
cmp
and
icebp
orl
jb
mov
or
xchg
cmc
xchg
push
cmp
data16
dec
mov
mov
add
std
xorl
cld
cs
bnd
je
inc
jno
jg,pt
js
jno
scas
ret
pop
ds
sbb
jo
cld
das
adc
data16
pop
and
lock
mov
inc
xor
jmp
loope
cli
cmpsb
jnp
addr16
hlt
mov
fs
clc
cmp
xchg
jne
imul
hlt
cmp
and
sub
add
shlb
cli
std
add
mov
pop
dec
inc
cmp
daa
xor
addr16
cmp
cmp
nop
inc
dec
shrb
jmp
inc
or
sbb
psubw
loope
gs
push
stos
movb
or
and
pop
mov
adc
cli
cmp
dec
lods
nop
cmpsl
ljmp
inc
mov
cmp
das
jne
fldcw
sar
icebp
dec
xchg
sub
add
push
adc
pop
sbb
adc
jp
sti
xchg
sbb
mov
mov
jecxz
ficoms
or
je
out
test
sub
test
daa
out
out
dec
scas
nop
and
add
pop
hlt
imul
push
pop
or
and
sub
ljmp
mov
push
push
mov
and
mov
dec
sub
outsl
mov
ret
jl
fneni(8087
mov
jle
jnp
dec
hlt
loop
fnstsw
or
int
hlt
jo
cmp
jne
adc
jbe
pop
or
pushf
fs
push
xchg
sti
jmp
rcrl
imul
mov
sub
aad
popl
xchg
push
test
ficompl
sub
cmp
sub
out
and
les
pop
nop
dec
and
flds
or
xchg
data16
jmp
test
outsb
das
or
and
inc
or
inc
push
imul
pop
sbb
dec
pop
out
cmp
cmp
cmp
inc
cs
cld
daa
in
or
mov
mov
rorb
or
mov
add
jl
mov
xor
mov
addr16
mov
pop
sub
jno
scas
ss
or
mov
xor
jl
mov
add
xor
xlat
mov
dec
jge
push
dec
cmp
jg
or
cli
int3
insb
pop
inc
mov
imul
enter
xorl
or
out
xchg
or
mov
pop
out
or
inc
mov
cli
rcr
sub
push
xchg
mov
or
mov
mov
mov
push
adc
push
js
mov
mov
lcall
mov
cmp
in
adc
sub
adc
clc
add
jne
inc
dec
jle
xchg
dec
lods
xchg
adc
mov
xchg
popa
into
dec
inc
jg
hlt
and
cmp
xchg
inc
clc
loop
das
mov
inc
sub
insb
jmp
arpl
pushw
popf
in
adc
adc
xchg
das
movsb
sub
je
adc
jle
push
stos
mov
cmp
mov
sbb
xor
test
inc
gs
push
loop
cmp
or
orb
push
push
mov
cmp
or
and
adcb
jnp
lret
push
mov
adc
nop
cmp
sub
mov
in
sar
leave
adc
ror
adc
mov
inc
cmp
mov
scas
and
pop
xor
sub
push
movsl
jmp
sub
or
fxch
inc
sbb
add
daa
clc
dec
or
jmp
pop
fsubrs
faddl
pushf
aam
inc
mov
inc
rclb
adc
shlb
and
xchg
xchg
fisubs
cmp
mov
aam
jno
leave
cld
addr16
pop
push
push
mov
xchg
add
jp
and
add
sub
testl
lock
js
xchg
xor
lock
cmpsb
cmc
inc
lea
rol
mov
sbb
add
js
ss
dec
imull
cmp
xchg
mov
inc
adc
loop
adc
push
mov
scas
and
adc
ja
xor
adc
mov
cwtl
and
bound
or
sub
js
cs
cli
sahf
adc
or
incl
pop
mov
jns
jl
mov
lds
jns
adc
mov
adc
movb
and
cmp
repz
dec
add
dec
or
or
test
repnz
cmp
pop
leave
in
js
inc
enter
jae
push
ror
dec
mov
lock
xor
adc
mov
inc
test
adc
push
and
loop
add
cmp
mov
jl
pop
loopne
into
cld
and
cmp
cmpsl
rclb
adc
lea
dec
mov
and
push
notb
and
inc
inc
adc
pop
mov
or
ret
dec
adc
sbb
xchg
jbe
daa
fstps
push
rorl
lds
mov
mov
jl
or
sbb
sub
test
insb
and
out
repz
pop
push
sar
js
outsl
subl
or
push
das
mov
shl
loop
dec
pop
xor
in
xor
pop
mov
pusha
icebp
lret
xchg
mov
adc
push
les
stos
sub
cmp
out
mov
imull
ljmp
mov
mov
mov
inc
nop
movsb
xor
lcall
sbb
mov
inc
shlb
and
xchg
mov
ja
lahf
sub
pop
jo
push
adc
or
pop
out
bound
popf
push
adc
clc
and
cli
pop
mov
mov
or
pop
xor
negb
mov
les
test
pop
push
call
cs
push
sub
daa
xchg
add
ret
and
mov
push
std
dec
rcll
fsub
or
cs
xchg
mov
mov
dec
xor
fisttpll
cmp
or
pop
push
movsb
pop
cmp
push
jnp
js
fs
orb
jne
je
ret
jl
pop
cmp
pcmpeqw
push
mov
das
cld
pop
sub
push
sarl
push
mov
pop
pop
pop
sti
fidivrl
add
mov
mov
sbb
mov
or
in
into
in
push
subl
leave
sbb
fs
jle
jbe
cmp
inc
or
pop
sbb
and
push
mov
dec
orb
or
sbb
or
lea
cwtl
xor
in
or
inc
mov
inc
jl
movsb
xchg
mov
enter
jno
pop
mov
xchg
punpckldq
test
scas
js
xchg
negl
pop
pop
mov
dec
mov
push
jecxz
xchg
mov
mov
mov
jl
decl
and
and
mov
in
mov
sub
sub
fs
dec
pop
scas
cmp
sub
xchg
and
mov
es
jge
adc
mov
int3
mov
ficoml
or
std
inc
lahf
cmp
mov
arpl
mov
pushl
mov
sub
cld
pop
xchg
mov
xlat
stc
test
mov
sarb
lea
arpl
jmp
jge
les
add
mov
nop
cld
and
nop
shlb
int3
add
mov
sbb
daa
push
and
inc
enter
pop
mov
test
inc
and
imul
dec
cmp
pop
lea
sbb
dec
mov
pop
mov
std
sahf
sub
and
mov
js
xchg
sbb
loope
dec
jp
dec
test
xor
pop
repnz
leave
xchg
xor
xorb
mov
mov
xchg
mov
adc
or
or
pusha
and
lods
adc
mov
push
sub
in
adc
mov
mov
push
cmpsl
sbb
js
mov
pop
and
xor
pop
enter
push
cmp
inc
and
cmp
enter
rclb
push
int3
sbb
test
aam
mov
out
mov
adc
ljmp
into
fnstsw
push
fistl
lret
rcll
lods
sub
and
lods
add
daa
icebp
or
push
jl
scas
test
inc
and
shrb
stos
cwtl
inc
jns
das
push
imul
xchg
cld
mov
push
or
pop
pop
inc
cs
jns
mov
daa
dec
movsb
ret
mov
adc
addl
sub
inc
xlat
gs
push
pop
pop
jle
sbb
add
popf
mov
push
sbb
inc
mov
sub
push
nop
dec
lret
hlt
ja
sub
sbb
out
xchg
pop
loope
ficoml
mov
sub
xor
lods
movsb
jge
push
or
mov
push
xchg
mov
scas
jecxz
mov
in
jl
call
sahf
fs
js
out
test
test
cli
push
jmp
push
nop
pushf
or
sbb
pop
mov
push
je
adc
cli
orb
lahf
sbb
fs
aas
pop
pop
lods
out
xchg
and
int3
pop
inc
movsl
enter
mov
in
or
xchg
loope
imul
ret
jns
je,pn
insb
addr16
mov
scas
insl
jmp
inc
adc
and
scas
in
cmp
leave
enter
jo
repnz
in
fs
dec
dec
adc
add
cmpl
xchg
cmpb
lods
sub
xchg
les
pop
dec
mov
sahf
sti
popf
xchg
xchg
ds
mov
insb
mov
sbb
fldcw
sbb
mov
or
inc
sub
insl
xchg
or
test
mov
mov
out
push
test
inc
and
push
outsb
and
out
pop
fisubrs
dec
ficoml
stos
push
jmp
ljmp
je
cltd
movsb
or
and
addb
es
xchg
fldcw
neg
inc
and
imul
mov
rorl
and
adc
fisubs
pop
pop
insl
add
test
xor
lods
dec
ss
shr
push
inc
mov
jne
js
mov
cltd
cld
mov
insb
add
push
movsb
stos
call
dec
insb
sarl
mov
dec
iret
mull
jne
mov
aam
push
dec
sub
hlt
or
adc
shlb
fildll
mov
or
stos
pop
imul
or
mov
add
in
daa
pop
adc
push
mov
push
mov
xor
or
push
mov
sub
es
pop
push
mov
cmp
adc
pop
imul
popa
nop
lock
inc
xchg
add
repz
xchg
loop
dec
adc
push
sti
rcrl
push
inc
xor
sahf
xor
mov
inc
dec
pop
jmp
mov
stc
push
lds
adc
andb
aad
aas
sarl
repnz
je
xor
call
icebp
in
movsl
push
int
mov
add
lcall
push
pushf
xchg
xchg
xor
gs
scas
mov
push
sub
sub
jnp
pop
stos
arpl
xor
xchg
pop
cld
lret
idiv
repz
inc
sbb
sub
push
sub
xchg
push
mov
jmp
jne,pt
fst
cmc
mov
xchg
movsl
mov
xchg
push
sub
loopne
out
inc
push
jl
inc
mov
pop
pop
test
mov
clc
out
xor
mov
call
xchg
repz
test
dec
fs
xor
je
sub
ss
mov
sub
push
sub
pop
push
dec
cmp
cmc
test
ds
rorl
dec
mov
aam
cmp
pop
scas
fmull
dec
mov
xor
and
push
and
mov
fwait
jge
pop
into
adc
adc
fwait
cli
icebp
and
jno
cmpsb
adc
cli
add
lods
and
and
and
xor
ficomps
cmp
dec
push
pop
daa
xlat
scas
jns
andnps
sub
dec
dec
add
test
mov
adc
jbe
or
xchg
push
add
sub
jle
ss
pop
leave
das
inc
aad
setno
cld
outsl
jmp
out
rolb
push
and
adc
inc
clc
and
addr16
xchg
out
mov
andb
mov
mov
mov
xor
or
mov
bound
lds
popa
jp
sbb
cwtl
inc
into
mov
icebp
fs
and
gs
push
pop
notl
lret
xor
add
jne
mov
sub
mov
xchg
mov
mov
cli
or
leave
jl
inc
push
mov
mov
inc
in
test
sub
fbld
or
movsl
adc
mov
xchg
sub
dec
mov
aam
mov
push
jl
enter
or
mov
inc
test
dec
inc
andb
xor
push
int
mov
push
adcb
or
and
cmpl
ret
adc
leave
dec
aad
mov
aad
das
decb
jle
push
mov
dec
ds
jmp
or
pop
jne
cmp
pop
inc
leave
mov
movsb
scas
mov
push
fs
inc
sub
and
mov
push
cli
and
cmp
cmp
adc
loop
addl
fisttpl
push
or
push
and
add
adc
test
and
and
pusha
push
nop
cmp
call
sbb
push
dec
call
fiaddl
cmp
scas
cmp
jp
fisttpll
sub
jb
clc
dec
xor
jmp
jns
or
clc
jl
cli
and
jb
dec
test
xchg
dec
inc
pop
mov
fdivl
adc
add
sub
in
sub
movb
jno
jno
or
nop
in
add
xchg
sub
push
lret
roll
jno
pop
test
pop
xchg
inc
xchg
xor
je
dec
nop
loopne
faddl
in
dec
sbb
ss
add
jl
xchg
les
jl
mov
mov
push
mov
test
inc
adc
xor
cmp
or
sub
insb
pop
mov
js
sbb
movsl
xchg
mov
jne
push
or
xor
pop
push
sub
bound
addr16
sub
sbb
jle
out
fsubrs
aad
cmp
sub
rep
cmp
inc
jl
pop
adc
inc
inc
jmp
adc
cwtl
adc
or
hlt
sub
loop
clc
negl
fmull
pop
sub
sub
add
mov
and
sub
mov
in
xchg
decb
adc
lcall
adc
mov
sbb
nop
adc
mov
jg
mov
sahf
dec
inc
xchg
pop
cmp
sahf
dec
push
cltd
and
dec
push
pop
and
mov
mov
sbb
dec
repz
scas
inc
adc
mov
movsl
mov
mov
xchg
mov
nop
addl
nop
mov
inc
pop
repnz
in
mov
and
outsb
xor
pushf
rorb
les
xor
cmp
cmp
xlat
out
inc
in
lds
ja
mov
xor
mov
mov
cmpl
popf
add
fimull
jp
cld
and
mov
aam
movb
jmp
lock
inc
mov
or
jge
add
xchg
shlb
ret
js
push
shlb
in
jo
lds
inc
lea
je
ds
add
xchg
xor
pop
test
fimuls
daa
dec
jg
pop
rdpmc
pand
inc
or
sub
mov
inc
pop
mov
in
pop
je
push
dec
xchg
sub
jo
arpl
mov
push
mov
add
xchg
dec
cmc
data16
adc
cmp
cmpsl
sub
lahf
jg
mov
mov
andl
pop
pop
and
xchg
adc
popf
les
and
jg
in
imul
sub
pop
xchg
shlb
bnd
or
jnp
cmp
cmp
call
mov
push
add
add
and
enter
and
jmp
push
or
sbb
or
daa
xchg
dec
dec
push
push
bnd
dec
mov
in
push
jne
push
jno
push
sub
stc
lds
dec
or
lahf
sarb
add
xchg
fmull
aam
and
xor
pop
into
jle
adc
mov
hlt
out
mov
dec
or
sub
or
jne
and
adc
sahf
dec
dec
push
inc
mov
sub
and
mov
mov
jl
jl
jb
daa
adc
xor
mov
or
xchg
push
cmp
push
fwait
xor
jnp
ja
inc
mov
sarb
jl
loopne
imul
push
mov
jle
inc
sub
repz
dec
repnz
and
in
dec
mov
or
xchg
jmp
push
dec
repnz
mov
icebp
std
mov
add
or
jo
cld
adc
xorl
adc
lods
mov
movb
repz
mov
xchg
push
sub
cmc
insb
lcall
divb
dec
divb
adc
fsubp
jp
mov
or
jmp
lret
sbb
mov
sbb
push
loop
pop
les
sub
fstpt
push
stos
enter
cmp
shlb
xor
fwait
lods
mul
xor
enter
dec
lods
inc
lea
mov
cld
mov
push
cmp
push
inc
sahf
adc
adc
adc
jne
inc
jl
mov
sub
push
or
stos
push
add
add
inc
sbb
sbb
jmp
sar
inc
andl
jg
stos
test
adc
cmpb
jae
and
cmp
add
mov
sub
adc
add
push
sub
add
mov
pop
iret
and
cli
leave
mov
or
or
bound
or
add
mov
or
notl
into
or
and
popa
push
add
test
sub
or
adc
mov
mov
fbld
pop
push
xor
orb
sub
or
cmpb
push
or
cmp
dec
add
xor
adc
repz
and
and
jle
shlb
lret
cmp
inc
push
imul
mov
mov
push
and
fstps
mov
shll
adc
jle
mov
dec
jne
dec
icebp
cmp
enter
mov
ficomps
adc
push
lcall
aas
mov
xor
xor
or
cmp
or
mov
or
push
mov
iret
or
jl
add
jae
or
jns
insl
mov
daa
in
mov
cmp
shrl
movb
add
mov
shll
mov
cmpsl
push
and
or
xchg
popf
pop
cmpsb
sub
xor
dec
ljmp
inc
push
hlt
rorb
sub
nop
or
pop
cmp
in
test
jp
les
test
pusha
mov
adc
jbe
dec
dec
mov
mov
pop
jne
dec
push
ret
hlt
cmp
or
cmp
sbb
sub
xchg
and
mov
in
cmp
mov
add
mov
add
cmp
jne
add
xor
pushf
dec
xlat
pop
xor
xchg
mov
fcomps
jns
iret
imul
xchg
lods
mov
dec
rorl
mov
jmp
xor
outsb
imul
mov
inc
sub
ja
pop
jno
inc
repnz
and
or
sub
adc
jl
data16
mov
sbb
jnp
push
adc
adc
mov
add
inc
dec
push
mov
in
cmc
fabs
int3
lea
adc
das
inc
adc
sub
mov
lds
xor
insb
insb
or
jbe
push
aad
sub
jl
jmp
sbbl
pop
adc
sub
enter
sbb
dec
pop
jno
icebp
xchg
dec
daa
notl
mov
pop
mov
fimuls
or
jmp
push
movb
jmp
adc
sbb
arpl
mov
and
push
loop
push
xchg
mov
or
fcom
dec
lret
mov
sub
xchg
std
psrad
scas
sbb
or
data16
adc
add
jne
push
mov
xchg
push
cmp
loope
xchg
mov
adc
icebp
sbb
mov
or
sub
adc
dec
sub
test
inc
push
push
data16
xchg
push
push
mov
nop
jo
test
sbb
test
adc
or
adc
or
int
push
sub
jmp
lea
sub
das
repnz
inc
daa
mov
maskmovq
idivl
sahf
fldenv
or
pop
mov
out
jmp
push
into
sub
fs
out
fmull
nop
insb
adc
push
mov
dec
adc
rolb
xor
cmp
and
ret
stos
cmpl
insl
cmpb
rcrl
inc
pop
and
xor
rol
cld
mov
aas
rolb
in
ret
inc
mov
ljmp
mov
push
xchg
popf
sub
cltd
inc
adcl
aas
cltd
sbb
ss
pop
xchg
mov
and
hlt
enter
sub
loope
inc
inc
aaa
cmp
push
ficomps
mov
or
out
jne
insb
arpl
jns
inc
aaa
mov
inc
or
fisubl
or
jo
push
dec
add
adc
out
jno
pop
pop
add
or
adc
push
push
xor
push
pop
or
push
ret
shl
add
or
insb
pop
js
repz
xor
xor
inc
pop
pop
lods
xor
arpl
lods
lock
iret
jb
sub
adc
mov
cwtl
mov
mov
repnz
xchg
inc
jle
mov
sarb
dec
push
dec
pop
cmpsl
mov
dec
dec
outsl
rclb
dec
rcrb
inc
ret
or
fdivl
xor
sbb
pop
inc
pop
pop
mov
clc
outsb
or
lds
mov
mov
dec
in
sbb
imul
sub
es
xor
js
xchg
loop
push
push
adc
jno
fsubl
xchg
dec
call
adcb
xlat
fs
dec
insb
test
dec
cmp
push
dec
push
in
out
jno
dec
mov
mov
or
pop
add
or
shrb
pusha
or
lods
in
mov
mov
loopne
pop
sub
mov
sub
inc
rcll
lahf
std
push
rcl
stos
je
add
idivl
das
sub
insb
movsl
jbe
push
cmc
clc
icebp
in
cld
sub
testb
dec
mov
push
imul
repz
adc
add
jb
std
insl
inc
mov
dec
fwait
pop
dec
and
mov
lds
pop
fdiv
dec
cld
cltd
ret
outsb
cmp
fcomps
inc
dec
jl
dec
adc
dec
ret
mov
std
pushf
mov
jns
xor
movsl
loop
cld
adc
push
in
test
mov
pop
sub
pop
fstpt
lcall
jno
add
popa
sub
adc
pop
fistl
adc
cmp
decl
test
cmp
pop
sti
adc
inc
mov
test
scas
ja
hlt
cmpb
or
outsl
mov
push
push
sub
inc
or
and
or
rolb
or
adc
push
xchg
sbbb
mov
and
push
add
sub
xor
insl
or
testl
sbb
test
or
and
sbb
pop
fcoms
cs
push
adc
cld
daa
sahf
int
or
dec
adc
mov
sti
cmp
mov
cmpsl
pop
nop
xchg
xlat
lret
or
cli
mov
movsl
cmc
lods
sub
test
das
psubw
lahf
pop
xor
jne
popf
adc
sub
mov
cmp
sub
sub
mov
and
push
mov
push
push
cltd
add
or
push
mov
aas
push
sbb
cli
inc
xor
dec
xlat
test
mov
movsl
and
dec
mov
xchg
mov
mov
popf
jne
dec
loop
lahf
adc
jl
push
xor
sub
pop
daa
arpl
inc
adc
xor
xchg
pop
subl
iret
dec
and
sub
pop
mov
adc
je
mov
jmp
xchg
mov
push
sub
sbb
mov
mov
lea
ret
repz
pop
jne
cwtl
mov
rolb
jb
inc
push
ja
mov
push
pushf
dec
pop
js
push
mov
inc
add
fsts
clc
lods
lret
mov
mov
icebp
out
aaa
dec
dec
inc
repz
xchg
mov
sub
sbb
and
aas
jae
pop
sub
inc
and
mov
pop
jge
pop
or
repnz
and
add
mov
inc
push
cmp
push
daa
mov
mov
jae
loopne
fisubrl
cli
popf
dec
in
outsb
or
mov
mov
jne
pop
call
mov
cmp
jne
cmpsb
js
stos
push
loopne
cmp
push
add
int
cmp
stc
cmc
enter
jl
add
push
cli
in
jnp
cmp
adc
xor
or
stc
pop
les
scas
stc
in
xchg
pushf
pop
xchg
dec
lock
cwtl
imul
and
mov
sub
sub
and
scas
inc
in
cld
mov
clc
lahf
xlat
cwtl
ljmp
sbb
int3
sbb
mov
dec
xbegin
push
push
xor
adc
and
mov
fs
les
rclb
and
and
add
ja
mov
or
iret
xchg
jl
sbb
repnz
cmp
jne
in
das
mov
add
adc
inc
fwait
je
loopne
add
and
dec
orb
insb
adc
dec
pop
sub
lahf
push
cmc
push
cmp
xchg
jg
and
movsl
xor
push
in
jle
pop
movb
inc
loope
arpl
jge
sub
or
subl
test
std
enter
or
cltd
sbb
stos
fldl
daa
insl
cmp
inc
cmp
inc
cmp
inc
push
ss
xchg
imul
xchg
stos
lret
and
pop
mov
aas
test
mov
test
mov
and
mov
inc
or
adc
or
dec
add
das
push
and
imul
xchg
imul
stc
sbb
notl
popa
fisttpll
fwait
dec
aas
lret
in
imull
arpl
jmp
mov
cs
push
insl
in
rorl
popa
cmc
lock
mov
enter
daa
mov
jne
scas
dec
inc
dec
mov
inc
pop
sub
push
pop
adc
mov
sbb
rcl
aas
mov
or
jmp
lea
ret
pusha
clc
and
adc
rcrl
movsb
add
push
lcall
and
mov
aas
jno
je
nop
insl
xor
lahf
hlt
test
push
add
in
push
movsl
insl
sub
mov
add
inc
add
cmpsb
xchg
push
lea
bnd
push
push
rcrl
xchg
sbb
and
adc
mov
les
out
loop
outsl
push
enter
clc
xor
sbb
mov
mov
add
push
jl
pop
jbe
inc
jle
xor
adcl
and
dec
mov
dec
and
popa
xor
aad
mov
cmpsl
es
add
dec
and
mov
test
inc
or
mov
fwait
cmp
hlt
xchg
ljmp
mov
cmp
adc
in
inc
push
adc
adc
or
gs
pop
jno
ja
add
mov
adc
push
nop
push
pushf
sbb
push
inc
or
out
xchg
xchg
mov
cmc
or
adc
xor
push
mov
shrb
add
jne
insl
add
lods
dec
sub
gs
xor
mov
scas
mov
mov
lcall
pop
test
cmp
mov
push
out
cli
sub
pop
loope
ja
adc
mov
cmp
out
mov
fwait
adcl
mov
mov
inc
fwait
or
ss
subb
aam
leave
mov
mov
out
rol
pop
adc
jle
aam
insl
adc
xor
jmp
sbb
dec
jge
mov
cmp
mov
inc
lock
jmp
adc
into
or
push
sti
incb
or
test
icebp
loopne
cld
test
call
daa
xor
add
ret
mov
pop
pushf
mov
dec
add
fildl
sbb
xchg
stos
mov
or
jne
or
cmp
or
dec
and
test
mov
pop
push
dec
xabort
movsb
mov
fs
ret
pushf
jns
xchg
shrl
inc
mov
mov
in
outsb
std
sub
in
push
pop
mov
je
jnp
mov
mov
outsl
lods
inc
mov
push
sbb
xchg
add
push
outsb
and
jle
inc
cli
sbb
pop
push
dec
shll
test
pop
mov
adc
sub
mov
out
or
pop
sub
and
dec
sahf
mov
jmp
dec
pop
and
pop
dec
sbb
stos
sbb
cmc
mov
mov
inc
xchg
xor
adc
test
lret
xchg
inc
jb
addb
shlb
scas
test
ljmp
xor
or
add
nop
lahf
xor
sub
adc
xchg
pop
xchg
scas
sbbl
xor
mov
cmp
xchg
push
and
jne
mov
imul
lea
jl
daa
pop
insb
pop
inc
out
mov
mov
push
adc
and
sbb
lods
cmc
sbb
mov
mov
rorb
pop
iret
dec
ret
movsl
jl
inc
dec
and
and
jp
inc
adc
mov
push
adc
mov
push
into
mov
pop
sub
icebp
pop
xor
and
daa
dec
jg
invd
lea
cwtl
add
push
dec
sub
arpl
add
sub
adc
sbb
cmp
cmp
xchg
xor
and
inc
outsl
int
jnp
in
sarb
or
lock
xchg
push
lret
fs
fs
cltd
xorb
je
das
mov
adc
scas
je
das
xor
insb
cmp
cmp
xor
jp
adc
dec
or
inc
or
sbb
mov
inc
push
sti
mov
das
dec
jp
push
mov
mov
push
and
dec
push
mov
cwtl
pop
xor
sub
pop
cli
jb
inc
inc
push
push
push
cltd
mov
mov
ss
push
andb
jl
sub
push
push
xor
jo
je
fs
ja
xor
add
js
add
inc
push
pop
dec
pop
inc
xchg
outsb
enter
sahf
and
and
lods
les
inc
push
test
mov
xorl
jp
sbb
jb
shr
sbb
push
insb
out
sub
xor
sti
repnz
sub
fs
dec
sarb
mov
dec
cmp
or
pop
inc
test
add
inc
sbb
xor
adc
and
xchg
mov
repnz
jmp
insl
ficoml
and
into
xor
or
and
ja
jp
sub
rcll
sahf
mov
lock
xor
les
aam
xor
loopne
xor
mov
test
dec
pop
adc
jnp
push
hlt
sub
bound
in
jns
sbb
mov
cmpsl
in
fbld
pop
jge
jno
inc
mov
mov
sub
xor
lea
mov
addr16
imul
call
mov
lods
sub
xor
adcl
jbe
adc
inc
pusha
pusha
out
inc
or
mov
bound
mov
adcb
int3
lods
and
inc
xchg
enter
nop
adc
ret
int3
xor
mov
push
jl
inc
sbb
cwtl
jmp
pop
inc
inc
mov
jae
mov
pop
or
imul
rorl
loopne
pop
and
inc
sbb
xor
xchg
bound
mov
inc
push
sub
and
inc
sub
xchg
pusha
push
movups
jg
shrb
aas
inc
jnp
dec
sub
inc
sbb
out
inc
pop
mov
lret
pop
mov
shlb
sarb
iret
dec
mov
pop
adc
or
jmp
pusha
jb
adcb
lea
mov
adc
or
test
daa
sbb
xchg
push
inc
cmp
aaa
pop
pusha
ret
jle
xor
xor
outsl
shlb
add
arpl
nop
fcomps
xchg
fists
mov
cmpsl
push
lods
mov
adc
jl
and
enter
mov
inc
mov
cmp
scas
aam
mov
cmp
push
xor
cs
jg
outsb
or
dec
xchg
push
push
rclb
jae
inc
sub
out
xor
xor
aad
push
push
in
enter
lods
mov
cld
xor
dec
stc
pop
and
mov
lock
adc
call
sbb
add
nop
imul
jnp
nop
pusha
or
xor
add
lea
or
adc
std
xor
xchg
mov
mov
fcompl
and
sbb
int3
les
data16
inc
int3
dec
push
mov
je
shll
add
lock
rclb
adc
or
lock
jp
inc
outsl
add
fs
loopne
popf
or
dec
test
in
adc
push
sub
and
adc
xor
and
adc
ljmp
inc
sbb
and
or
or
sysenter
addr16
out
mov
push
cwtl
xor
inc
sub
stc
mov
xor
js
xor
mov
push
mov
adc
mov
push
push
and
idivb
xchg
or
mov
or
xchg
jb
clc
cmp
ja
rclb
test
dec
xchg
mov
push
enter
mov
nop
xchg
loop
adc
push
and
cmpb
add
sub
lock
inc
lods
mov
pop
aas
aam
xchg
nop
out
out
dec
pusha
sahf
cmp
mov
jl
out
cmpsb
xchg
mov
inc
jp
cmp
cmp
pop
outsb
enter
dec
and
mov
or
lea
mov
insl
cmpl
cltd
fwait
nop
push
leave
dec
cltd
mov
adc
adc
push
push
fs
and
and
xor
orb
vmovmskpd
push
adc
cmpsb
push
lods
push
nop
fdivr
and
jmp
inc
fs
aas
mov
leave
popf
mov
inc
jnp
mov
mov
jbe
add
aam
adc
cmp
adc
aam
mov
sub
pop
push
mov
jno
push
shlb
sahf
loope
in
sarl
xchg
and
dec
adc
rclb
sbb
sub
cmp
jmp
and
maxps
loop
or
aam
enter
stc
sbb
inc
mov
push
incb
pop
in
stos
out
or
and
in
inc
int3
cmp
inc
mov
in
icebp
push
jl
int3
sahf
aam
in
dec
xchg
jecxz
mov
ljmp
popa
cmpsb
mov
mov
hlt
inc
xchg
push
sbb
orl
dec
mov
mov
movsb
or
test
gs
dec
inc
dec
cltd
add
xchg
sbb
and
jle
jecxz
nop
loop
mov
jge
adc
dec
xchg
rol
test
mov
lret
xor
adc
mov
jl
cld
fbstp
mov
and
scas
dec
push
pop
cs
pop
ficomps
and
test
mov
add
test
ds
mov
mov
mov
popa
jne
jg
xchg
test
xchg
dec
xchg
test
and
jp
das
mov
adc
sub
push
xor
inc
sbb
push
and
in
mov
jg
cmc
imul
jne
or
outsb
push
xchg
fwait
cmc
stc
sbb
pushf
je
jns
cltd
jle
mov
or
dec
or
jne
adc
je
mov
lods
imul
dec
into
push
test
nop
adc
mov
int
jne
std
subl
fildll
pop
xchg
bound
enter
and
jae
mov
inc
mov
xchg
sbb
je
emms
sbb
and
inc
subb
call
mov
jg
pop
or
mov
sub
dec
dec
xor
sub
sbb
dec
mov
aad
and
or
insl
push
sbb
push
xlat
mov
inc
lock
mov
pop
clc
inc
notb
subb
das
xchg
ljmp
stos
jo
cmp
mov
shl
pop
mov
insb
cmpsl
test
scas
mov
ficoms
sub
dec
test
ret
dec
ja
jnp
testb
clc
cwtl
jno
add
movsb
inc
mov
sbb
popf
dec
sub
lret
cmp
pusha
pop
xlat
sbb
lret
pop
inc
jnp
cmp
aaa
mov
inc
in
inc
push
inc
xor
pop
fsubl
cmp
push
lahf
popa
or
pop
xchg
cli
or
test
dec
into
dec
repnz
adc
js
flds
enter
addb
movsb
mov
xor
test
daa
xor
mov
dec
pop
dec
cmpl
add
xor
psrad
test
js
pushf
jae
imul
stc
sbb
mov
xor
inc
je
sub
std
or
aam
jno
aas
in
inc
hlt
scas
or
stos
rcl
push
out
sbb
push
ret
test
or
das
aam
pushf
insb
mov
into
insb
daa
cltd
fdivs
loope
je
jnp
jmp
cmc
dec
cli
inc
pop
pop
psubusw
imul
push
push
cltd
std
sub
xor
testl
add
rcrb
jae
adc
jmp
lds
xchg
inc
inc
pop
cld
pop
rcl
jb
fwait
stos
adc
push
add
lea
out
mov
sbb
mov
out
mov
lea
das
movsl
in
mov
inc
fmuls
aam
lret
jne
dec
movb
add
xor
shll
push
inc
outsb
cwtl
jmp
mov
andl
hlt
mov
jle
dec
shrl
cmp
fidivs
lret
sub
xchg
pusha
jmp
adc
push
aam
sub
inc
cmp
ret
sub
mov
sub
outsl
cld
pop
dec
mov
and
je
cmpsl
adc
mov
sub
add
test
mov
call
addb
mov
jmp
mov
jge
mov
or
shrl
push
je
loope
dec
dec
jbe
xor
or
je
jge
dec
sub
outsb
cmpsl
or
icebp
xlat
xor
mov
pop
inc
je
jns
and
adc
jno
jne
inc
scas
sub
es
int
add
fisttpll
sbb
mov
sbb
or
jno
or
ja
adc
aad
call
xchg
js
cwtl
cmp
test
je
jns
and
pop
ss
movsb
xchg
xchg
inc
test
lea
repz
repnz
pop
lds
lret
adc
movsl
fistl
inc
out
in
dec
out
mov
sub
add
push
push
pop
and
shll
dec
fldl2t
push
mov
mov
adc
push
inc
jp
inc
fadd
out
sahf
dec
lods
lret
push
dec
dec
jb
out
mov
mov
push
test
or
idivb
notb
cs
inc
pop
mov
sbb
or
cli
into
dec
add
das
sbb
pop
dec
push
mov
pop
ret
jp
push
push
dec
push
ljmp
xlat
adc
and
sub
lea
xor
fisubl
xchg
call
popf
cli
iret
mov
cmpsl
cmp
ja
fwait
popa
mov
push
add
dec
mov
xor
jns
lahf
xchg
or
and
adcb
sahf
cmp
pop
fcomps
mov
aas
fstpl
sub
mov
mov
mov
jne
popf
fistpll
adc
mov
mov
xchg
jl
jo
jp
jp
xchg
out
sub
sub
mov
dec
nop
dec
orb
addr16
cmp
inc
or
fistl
xchg
pop
xor
mov
mov
outsb
xor
aad
push
ds
mov
mov
xchg
out
lret
lods
loope
mov
nop
lret
je
push
int
push
cmp
ja
call
pop
and
and
push
push
add
movsl
iret
dec
out
fists
jge
push
sub
mov
cwtl
popa
push
jne
movb
mov
ds
jne
test
je
or
xor
xchg
sub
inc
loope
push
leave
push
jns
xchg
das
adc
mov
test
sbb
fisubrs
inc
fs
int3
jae
xchg
mov
fs
cmpsl
ja
lods
mov
cli
lret
arpl
movsb
adc
movd
out
sub
jns
xor
pop
adc
cltd
or
jo
adc
clc
mov
jle
or
popa
jge
ficoml
xor
loope
addr16
xchg
push
outsl
int3
js
mov
ficomps
cmp
sahf
xchg
fdivrs
mov
ljmp
mov
pop
mov
jae
sbb
js
lock
mov
mov
sbb
rclb
cmp
inc
pop
rolb
inc
pushf
add
out
inc
call
rorl
test
sbb
cmpl
ss
inc
xchg
nop
xchg
lods
sbb
hlt
jo
cmp
jne
xor
sub
jnp
cmp
insb
test
adc
push
push
ret
push
adc
mov
mov
mov
sub
inc
lock
dec
and
mov
aaa
mov
or
rclb
pop
int3
lock
lds
neg
sub
aas
mul
or
push
icebp
mov
and
cmc
sahf
adc
add
mov
fcoml
enter
stos
test
mov
pop
inc
xor
sbb
faddl
mov
xor
pop
push
xchg
in
mov
xchg
adc
pop
jo
cld
movsl
mov
jp
inc
lds
mov
adc
hlt
enter
and
mov
shlb
mov
and
sub
les
xor
sbb
xchg
xor
jbe
inc
out
and
xor
testb
adc
lea
and
in
xor
adc
test
add
inc
sub
addb
enter
xor
inc
js
xchg
nop
jl
cwtl
xorb
sbb
cwtl
movsb
nop
jno
add
loope
test
dec
nop
fxch
test
stos
stos
sbb
or
xchg
and
jb
imul
das
fdiv
adc
enter
sub
mov
jecxz
int3
push
mov
mov
jns
pusha
lret
inc
add
xchg
xor
push
lret
dec
mov
rolb
imul
jge
cmp
das
mov
cmpsl
adc
and
fwait
sub
inc
xor
push
adc
fs
mov
and
xchg
ja
pop
push
data16
sub
sub
xchg
pop
rcll
add
push
dec
dec
or
mov
sti
pushf
popf
push
jae
or
fisubrl
das
push
notl
add
xchg
push
sahf
aaa
pop
stos
dec
xchg
cmp
jmp
push
arpl
push
and
push
push
adc
cmp
notb
je
loop
rcr
fst
dec
loop
frstor
pushf
ljmp
sub
mov
ret
or
insb
inc
pushf
sbb
in
dec
add
stos
jg
and
enter
enter
or
xor
xor
sub
sub
repz
jecxz
gs
lock
add
push
cmp
adc
cmp
inc
das
lret
arpl
add
loope
mov
lea
push
pop
adc
jne
pop
popa
mov
mov
js
xor
push
inc
dec
dec
dec
or
adc
lea
xchg
aad
sbb
out
inc
cmp
jl
out
dec
push
adc
stc
loope
ror
xchg
push
xchg
jmp
pusha
ds
sub
hlt
cmp
sahf
push
ljmp
dec
pop
movsb
sub
sub
mov
push
lea
cld
mov
inc
push
mov
inc
dec
lock
fmuls
leave
pop
xor
in
pushl
mov
jl
stos
cmp
nop
lods
push
faddl
xor
cmpl
xchg
sub
pop
xor
push
cmpb
scas
or
add
hlt
mov
pop
outsl
ret
push
mov
fldl
iret
pop
xor
out
jg
cld
cmp
mov
mov
lret
push
pushf
out
js
xchg
out
xchg
inc
aas
test
ljmp
dec
adc
xchg
nop
lds
sub
pop
xor
pop
repnz
cmpsl
or
mov
addr16
iret
cli
roll
sar
aam
push
inc
in
hlt
or
pop
push
out
int
push
or
inc
dec
ljmp
cmp
loop
aaa
mov
fstps
adc
cmp
arpl
xlat
in
lock
cs
lret
or
dec
lods
mov
push
cmp
or
push
imul
mov
loopne
push
iret
jo
cmp
movsb
into
shll
pop
xlat
aad
push
outsl
xchg
add
enter
aad
mov
scas
push
pusha
cmp
jge
jne
call
sahf
adc
lea
clc
mov
jl
sbb
mov
scas
or
pop
inc
clc
aas
nop
mov
add
cmp
mov
push
mov
les
test
or
fsts
inc
jp
adc
mov
dec
das
dec
mov
bound
gs
ds
cli
insb
add
xor
sub
arpl
jns
push
orl
popa
jo
insb
mov
outsl
outsb
icebp
jne
gs
xor
push
jge
outsl
inc
and
outsb
jg
push
imul
subb
inc
dec
and
add
and
mov
mov
leave
clc
jbe
mov
jae
and
push
nop
mov
sbb
or
call
xor
inc
or
sub
enter
int3
sub
adc
or
mov
inc
or
lret
push
mov
mov
addb
inc
mov
jns
das
or
cld
arpl
in
mov
xor
cwtl
imul
inc
stc
or
inc
idivb
adc
inc
mov
mov
or
nop
fisttpll
inc
xchg
or
int3
imul
mov
cmp
or
mov
and
push
enterw
aam
mov
add
inc
lods
clc
adcl
or
cmc
xor
sbb
mov
sbb
fs
adc
adc
or
or
and
call
push
bound
arpl
je
or
outsl
ja
cmp
dec
pop
xchg
arpl
or
sbb
mov
sbb
mov
pop
and
hlt
addb
pop
mov
inc
rcrl
jl
in
fs
sub
adc
das
stc
and
mov
aad
lods
adc
xchg
pop
sub
leave
call
pop
adc
mov
pop
sub
inc
adc
add
add
adc
add
cmp
dec
dec
ret
cmp
jo
jb
in
ret
sub
dec
and
inc
sub
outsb
inc
dec
pop
xor
and
push
sub
arpl
or
and
inc
je
insb
xchg
add
mov
test
dec
inc
pop
dec
stc
push
rorl
cmp
push
jne
inc
mov
sub
movsl
fs
or
dec
push
push
scas
sahf
xchg
or
adc
popa
jne
insb
je
dec
movsl
or
inc
int3
or
in
iret
xor
fwait
call
or
push
push
das
push
sti
or
and
xchg
imul
lret
mov
xor
mov
cmc
push
dec
add
divb
pop
mov
mov
xor
imul
push
xchg
adc
nop
adc
scas
pop
stc
addr16
into
mov
pusha
dec
lea
fbld
aad
setno
clc
je
xchg
adc
or
or
js
adc
push
scas
xchg
ret
scas
popl
nop
sbb
or
and
push
or
fimuls
push
or
sub
mov
xor
sbb
push
jl
loop
orl
or
xchg
setno
sbb
push
jmp
testb
je
push
push
outsl
ret
mov
clc
jp
pop
sub
sbb
cmc
scas
xchg
pop
fdivl
shr
in
push
test
pop
cli
fdivrs
or
sahf
in
ret
divb
jle
xchg
adc
xchg
aam
and
fsts
or
mov
arpl
pushf
rolb
mov
add
mov
cmp
jmp
push
addr16
nop
addr16
or
jo
movsb
dec
lret
test
sbb
pop
pop
test
push
cmp
cmp
add
jmp
cltd
js
fidivrl
mov
adc
mov
adc
xchg
mov
push
mov
push
xor
push
xchg
jmp
inc
dec
dec
mull
std
ljmp
sbb
xchg
jo
dec
or
inc
inc
cld
jb
push
clc
enter
push
enter
ja
test
or
sbb
adc
add
add
mov
add
ffreep
mov
push
pop
ror
mov
push
out
or
cmp
aam
jle
in
mov
neg
imul
cltd
scas
sti
add
fmuls
mov
leave
mov
je
shlb
loopne
xchg
jg
jbe
push
sub
pop
push
mov
push
inc
xor
jle
pusha
insb
adc
sub
jmp
pop
into
xchg
push
xor
cli
jge
inc
call
js
dec
inc
js
cmp
xor
rcr
inc
in
adc
nop
sub
das
mov
add
jg
aad
sahf
sbb
jmp
cmp
inc
and
sti
sub
push
cmp
add
inc
inc
mov
adc
or
imul
xchg
add
inc
cmp
dec
sub
inc
jne
cmp
and
inc
pushf
xor
xchg
jg
in
nop
fs
clc
push
xor
test
xchg
pop
pop
adc
cmp
and
jg
je
pop
mov
mov
cmpsl
or
notb
mov
imul
add
rclb
ret
lock
sub
clc
or
cmp
sbb
clc
push
add
add
and
add
adc
jge
mov
jns,pt
adc
fwait
lds
cmp
scas
lret
mov
aam
in
repnz
or
pop
je
jb
sbb
jge
mov
adc
int3
jecxz
test
mov
jno
sub
ljmp
sub
cmp
xor
and
sub
movsb
dec
add
jge
or
push
hlt
inc
sbb
add
clc
inc
push
sbb
adc
jle
jbe
movsl
fistpll
sbb
out
sarb
inc
sub
lods
add
lahf
jle
add
add
imul
mov
add
cmp
push
std
mov
ljmp
xchg
inc
pop
js
adc
outsl
les
lods
pop
push
call
cmpsl
pop
add
sub
lcall
rorl
and
lock
ss
outsl
adc
mov
not
int3
adc
test
add
cmp
jge
inc
inc
jle
dec
and
in
sub
push
and
mov
dec
and
jge
shl
or
out
sbb
mov
or
sub
xchg
in
loopne
sbb
sub
in
add
loopne
adc
inc
or
bound
or
or
rclb
data16
aam
xor
and
mov
and
adc
cmp
sub
cltd
test
inc
mov
inc
mov
popf
sbb
mov
js
adc
sbb
xchg
out
and
popw
xchg
push
lds
scas
mov
inc
loopne
and
xchg
cld
leave
ret
mov
dec
loopne
mov
sbb
xchg
push
pop
addr16
clc
sub
add
dec
hlt
shlb
hlt
enter
sub
push
jge
and
mov
pop
inc
lock
inc
sub
hlt
xchg
push
hlt
mov
enter
or
faddl
lock
and
or
cmp
sub
push
xchg
es
inc
xchg
push
adc
scas
out
lcall
cli
cmp
arpl
add
movsb
addb
mov
mov
test
cmp
in
cs
lds
ficoms
int3
xchg
sbb
dec
out
mov
push
add
push
cmpl
in
xchg
data16
in
or
push
mov
repz
cli
pop
adc
notb
or
pushf
sbb
dec
int3
push
or
js
inc
in
mov
sub
pop
push
insb
shlb
dec
mov
mov
xchg
or
inc
xor
ljmp
mov
test
xlat
xchg
cld
in
clc
mov
mov
sbb
insb
popf
in
mov
inc
dec
push
repnz
iret
lret
stos
enter
hlt
repnz
pop
ret
xor
lock
jmp
test
roll
imul
or
dec
and
test
jno
imul
mov
push
mov
in
mov
imul
inc
sub
adcl
jp
dec
mov
pop
xor
ljmp
test
xchg
jmp
rcll
or
subl
mov
test
mov
sbb
lds
clc
sbb
and
imul
std
pop
dec
jmp
dec
lea
dec
jp
inc
out
push
sarb
sbb
push
adc
dec
rolb
pop
int3
jmp
push
iret
xchg
test
mov
push
lea
mov
adc
push
fcoms
xor
sub
adc
mov
ds
mov
xchg
out
sbb
shl
xchg
fnstsw
inc
inc
cmp
or
jl
cmp
adc
jmp
bnd
mov
sub
and
mov
dec
popa
dec
mov
daa
mov
insb
lods
lret
mov
scas
push
adc
lcall
pop
insb
add
mov
pop
fmuls
xor
popa
adc
add
push
push
cmp
jge
push
jno
mov
cli
jle
or
test
shlb
rclb
clc
fdivrs
cmp
adc
pusha
or
inc
xor
pusha
jle
scas
in
or
ret
sbb
pop
aaa
mov
push
xor
cmp
loope
sbb
add
dec
mov
notl
pushf
adc
test
push
dec
fsubrp
push
dec
mov
dec
inc
aam
nop
mov
mov
jne
push
xchg
mov
lock
lock
add
mov
dec
mov
xlat
jmp
cmc
push
lret
movsb
mov
cmc
or
roll
sub
dec
cmp
dec
cmp
lods
mov
mov
idiv
hlt
pop
pop
fidivs
ret
pop
hlt
xor
arpl
les
lcall
mov
jge
aaa
pop
jns
pop
and
mov
lcall
pop
lods
jmp
jge
pushl
pop
fwait
or
lock
push
nop
lods
mov
pop
xchg
imul
dec
inc
mov
jp
insl
pop
mov
push
xor
mov
repnz
pop
sub
or
mov
xlat
xor
outsl
xchg
pop
je
int3
shlb
leave
mov
add
mov
aam
aam
pop
inc
aam
mov
in
mov
lea
add
mov
inc
rorl
fldenv
in
shlb
mov
cld
mov
inc
sbb
cltd
jns
sub
cld
daa
lret
hlt
scas
jp
mov
jae
iret
popf
cmc
mov
into
lea
sbb
cmc
in
sub
jbe
mov
enter
inc
in
jmp
mov
rol
mov
add
add
sbb
pop
or
hlt
and
into
rorb
cmp
imul
cmp
mulb
inc
lahf
dec
or
jae
stos
leave
sbb
dec
stos
inc
outsl
insl
mov
dec
adc
xor
mov
out
jl
repnz
push
mov
sbb
mov
jmp
jp
dec
ret
lcall
xchg
adc
fidivrs
inc
jl
lock
inc
popf
inc
jp
dec
cmpsb
or
sti
lret
sti
mov
insb
add
mov
or
ja
cmp
daa
xchg
jns
inc
push
cmp
das
cmp
jp
jo
jbe
jno
das
jbe
sbb
hlt
dec
mov
ja
fucomi
shll
cmp
cmc
pop
pop
or
mov
mov
inc
pop
dec
jne
out
rclb
movsb
jl
jno
mov
bound
cmp
cmp
pop
xchg
xchg
xor
sbb
add
mov
dec
mov
push
push
dec
adc
arpl
xor
cmpsb
mov
aaa
mov
push
jnp
xchg
cmpw
test
pop
pop
xor
jbe
xor
push
xor
clc
adcl
xchg
cli
mov
scas
jnp
push
xlat
les
fdivs
push
lods
sarb
push
or
jl
lcall
les
or
or
jb
dec
sbb
or
pop
mov
mov
add
or
sbb
cli
push
jae
cmpsb
shlb
push
lock
js
push
add
insl
je
xchg
shr
pop
mov
add
cwtl
loop
test
out
jp
pop
sar
jmp
jge
mov
sub
pop
mov
das
or
mov
orb
jno
add
cmp
jl
les
sub
push
mov
fwait
into
cltd
cltd
mull
sub
mov
xchg
mov
and
cs
jl
in
jb
cmp
call
cmp
das
dec
fdivrp
lret
nop
pushl
add
mov
cmc
jmp
es
jl
push
das
sub
into
mov
dec
push
scas
mov
inc
mov
xchg
out
ss
sbb
lods
xlat
push
cmp
clc
push
bnd
adc
push
sub
popf
xchg
push
incl
stos
in
pop
stc
mov
push
call
mov
repnz
dec
inc
dec
mov
adc
mov
push
mov
inc
xchg
shr
mov
inc
jne
ljmp
or
in
jp
dec
ss
sbb
jnp
sub
outsl
sbbb
ss
cmpsl
es
jmp
xchg
add
loopne
or
xor
inc
xor
xchg
shll
movsb
ljmp
arpl
xlat
and
daa
push
pusha
stc
dec
je
insl
push
cwtl
pusha
lds
sbb
mov
sahf
or
test
aas
addb
aaa
jo
dec
xchg
cwtl
push
into
sbb
or
clc
push
adc
sar
pusha
test
enter
adc
out
aam
adc
jo
xchg
jmp
cli
test
xor
sbb
fcoml
sahf
sbb
adc
dec
adc
adc
pushf
cs
or
mov
enter
sub
or
mov
mov
push
lock
add
movsb
loop
leave
mov
inc
adc
mov
adcb
mov
inc
lea
xor
xor
cmp
dec
and
or
push
pop
xorl
dec
outsl
and
push
pop
sbb
mov
push
adc
shl
dec
mov
orb
adc
cmp
mov
and
xchg
push
dec
inc
cmp
or
adc
sbb
sbb
and
inc
jbe
iret
mov
dec
test
movsb
or
in
adc
xchg
stos
xor
or
or
dec
push
pop
xchg
add
xchg
and
hlt
popf
dec
push
insl
popa
addr16
sub
or
mov
enter
ss
sbb
xchg
and
decl
sti
daa
push
push
push
out
enter
inc
fbld
push
dec
gs
fs
xchg
in
dec
hlt
and
pop
inc
daa
popa
jo
pop
mov
add
ja
or
cmp
push
jo
push
or
jne
outsb
int3
js
sahf
sbb
int3
sahf
push
lcall
mov
cmp
push
rclb
int3
mov
mov
hlt
xchg
pushf
sti
repnz
sbb
lods
sbb
mov
sbb
inc
and
inc
scas
fmuls
adc
fdivs
test
xchg
addb
sbb
test
mov
jnp
dec
int3
rol
int
data16
inc
or
sub
cmp
dec
lods
pop
inc
pop
clc
in
push
pusha
pop
or
xchg
movsb
mov
cmp
shrl
mov
or
inc
xor
ss
sbb
aam
in
shlb
sbb
in
mov
hlt
mov
mov
leave
and
cmp
dec
sbb
cmp
pusha
adc
mov
nop
or
call
adc
aas
mov
mov
or
dec
inc
add
les
stc
out
movsb
int3
xchg
pop
and
test
jae
lret
sahf
mov
pushl
sub
push
stos
addr16
dec
dec
push
push
or
xor
inc
outsb
mov
in
outsb
movsl
inc
cmc
mov
cmpsl
loopne
mov
dec
movsb
and
jne
outsb
jae
push
rorb
sub
dec
insb
daa
or
je
xchg
lcall
insb
leave
arpl
fs
movb
pop
and
or
cmp
mov
test
sti
xchg
pop
bound
push
lods
add
movsb
jl
xchg
shlb
dec
push
loope
sbb
mov
js
pushf
sbb
mov
stc
adc
inc
movsb
mov
out
clc
pop
inc
mov
sbb
sub
lret
mov
pop
das
jno
enter
and
addb
add
xchg
jae
dec
pusha
bound
je
cmp
add
enter
or
inc
clc
jns
inc
or
push
ljmp
sub
ret
das
push
mov
incl
ret
nop
jl
or
sub
jg
push
add
je
cmp
fstl
inc
clc
shlb
add
dec
divb
and
cs
sti
nop
cmp
adc
sub
jae
add
push
jmp
mov
xor
jne
inc
and
in
dec
push
lret
loopne
cmp
adc
or
data16
cs
jmp
adc
in
je
xchg
jle
scas
dec
pop
das
std
adc
xchg
jno
call
arpl
inc
or
sub
out
test
and
data16
inc
sbb
push
adc
adc
out
mov
in
xor
mov
icebp
jmp
xor
es
outsb
inc
or
or
fidivl
aam
pop
jmp
dec
adc
xchg
ljmp
push
mov
or
xor
push
push
push
inc
int3
mov
add
std
xor
inc
inc
cmp
cli
push
xchg
mov
repnz
cmp
lret
out
sub
lock
scas
ljmp
ret
cmp
out
pop
sub
adc
pop
mov
jns
imul
lock
test
add
adc
and
xor
pop
add
cmpb
or
mov
push
rcrl
jmp
jmp
pop
cmp
scas
mov
sub
xor
stos
int
pusha
mov
mov
je
icebp
xchg
sub
dec
int3
jne
inc
cmpl
add
sahf
or
sub
or
sub
add
mov
and
je
push
fldl
fcomps
fnstsw
sahf
jb
enter
les
pop
stc
or
push
cmpsl
sbb
je
mov
or
lods
pop
mov
dec
push
adc
rol
cmc
aas
popf
fildl
push
popa
or
je
fcmovnbe
sbb
lret
jo
mov
clc
test
fwait
les
pop
sbb
cmp
sub
pushf
pop
add
add
dec
lds
stc
jmp
inc
popf
cmp
adc
or
sbb
or
inc
mov
sarl
xor
jnp
stos
mov
jle
or
adcb
xor
or
fsubl
cltd
cmp
sub
je
or
daa
rol
test
mov
sbb
jecxz
ficoms
jmp
xor
adc
les
je
and
mov
sub
pop
js
adc
or
inc
cmp
popa
outsl
fsubr
call
sub
sbb
aaa
cmp
arpl
xchg
or
dec
jnp
cmc
lret
test
pop
jmp
jo
fiaddl
call
cld
lds
inc
inc
ret
cmp
nop
xchg
dec
push
adc
out
flds
adc
jg
je
push
and
js
fmuls
mov
or
jne
sub
push
inc
es
cmpsb
jno
nop
test
int
xchg
scas
adc
adc
cwtl
scas
les
fildl
mov
jo
cmova
jge
imul
and
test
das
pop
add
test
push
cli
loop
lea
xchg
sbb
movb
push
or
mov
inc
sub
lret
out
outsb
fadds
dec
mov
dec
add
cmp
ret
mov
push
mov
mov
int3
faddl
clc
xor
cmpsb
pushf
cmp
sbb
cs
pop
lea
notl
fidivl
mov
jp
pop
or
mov
xchg
outsl
in
popa
inc
sbb
and
cmpsl
jg
ret
jmp
jmp
jg
dec
pop
push
mov
adc
pop
xchg
jg
out
mov
push
mov
mov
fs
and
xor
mov
aas
dec
sahf
pop
mov
cmp
stos
fisubrl
sti
call
je
add
mov
xchg
mov
inc
out
mov
add
mov
fsubr
or
nop
loopne
jne
imul
int3
arpl
adc
sbb
inc
and
sub
mov
xchg
inc
es
sub
push
sbb
cmp
test
push
push
ds
add
xlat
inc
jecxz
sbb
pushf
xor
cmpl
sub
in
aas
sub
jl
and
iret
sub
xor
loope
and
xchg
sub
inc
xchg
mov
adc
cli
lahf
mov
popa
inc
jle
rcrb
pop
sub
xchg
cmp
inc
xchg
cmpsl
and
mov
ljmp
adc
or
adc
sahf
or
ja
push
enter
cmp
mov
and
inc
push
and
mov
add
idiv
xchg
negl
mov
inc
test
mov
xchg
xor
test
push
clc
jb
dec
arpl
mov
mov
out
push
pop
int3
std
jno
sbb
lret
jge
je
push
adc
fldcw
int
icebp
jnp
insl
sar
mov
lcall
inc
and
inc
mov
lds
push
jge
jae
or
sbb
jle
repnz
popf
inc
dec
mov
adc
mov
jp
out
pop
cmp
xchg
dec
out
sub
inc
jae
and
subl
add
dec
sub
outsl
jecxz
xor
jge
add
push
push
fucom
cld
and
or
testb
add
imul
push
dec
jecxz
dec
mov
pop
aam
inc
jl
mov
push
push
lahf
and
in
sbb
dec
mov
cwtl
jb
je
insl
jnp,pn
inc
inc
pop
push
outsb
inc
xchg
mov
jo
lcall
jno
iret
mov
les
cld
test
test
mov
adc
and
and
sbb
push
in
ror
mov
xor
fs
xchg
inc
lea
mov
mov
lea
mov
mov
dec
adc
in
push
jns
cmp
in
inc
mov
add
or
shl
insl
je
mov
out
dec
adc
mov
add
test
jmp
cmp
mov
cmp
jb
xchg
cwtl
iret
jg
pushf
xchg
js
xchg
inc
and
stos
and
sbb
sub
in
scas
mov
stos
in
insb
mov
xchg
scas
cmpsb
and
stos
clc
dec
mov
pop
scas
sub
je
adc
mov
inc
add
sti
pop
out
cmpsl
jge
sbbl
inc
xchg
lods
scas
nop
out
mov
fdivp
jne
pop
xor
xor
mov
adc
mov
cli
std
dec
push
lods
ss
pop
push
lods
fimuls
jle
push
push
in
out
jg
and
push
or
push
sub
cmc
inc
and
or
mov
test
negb
push
shrl
xor
clc
lods
clc
test
sub
mov
repnz
iret
pop
fsubr
fcompl
pushf
or
mov
or
jmp
push
jo
push
mov
fstps
mov
mov
push
push
and
mov
mov
mov
jns
outsl
mov
lock
xor
xor
xchg
add
sub
iret
sbb
add
add
enter
repz
add
lock
incl
cli
inc
inc
hlt
fisubs
sbb
das
pop
in
sbb
sbb
add
cmp
stos
cmp
xor
sbb
ret
sbb
sbb
inc
incb
mov
inc
in
test
or
test
je
push
lcall
sbb
shr
and
scas
sbb
adcl
test
in
sub
mov
jmp
mov
stos
sub
or
decb
int
adc
cmp
jmp
push
scas
insl
sahf
insb
and
adc
loope
add
lods
push
push
cwtl
test
lret
sbb
loopne
lods
hlt
jg
jge
sbb
andb
dec
dec
rol
cmpsl
cmp
add
into
fisttpll
xor
mov
mov
mov
mov
andb
test
jmp
push
dec
xlat
iret
clc
imul
fs
jb
sahf
sub
fcomi
mov
cmpsb
jbe
xchg
xlat
ret
data16
jae
and
mov
cmovns
xchg
jnp
xchg
inc
je
sub
dec
test
enter
stc
adc
mov
adc
xchg
scas
int3
jecxz
jo
fs
jmp
cmp
mov
les
inc
dec
xchg
jnp
cmp
dec
mov
dec
lock
loopne
jae
in
cwtl
fstpt
dec
sarl
popf
test
lret
cli
pop
loopne
orb
lret
icebp
iret
add
cmp
fisttpl
int3
xchg
pop
fsqrt
hlt
cs
xor
mov
mov
cmc
sbb
ret
in
mov
push
fbstp
stos
ljmp
mov
test
add
sub
or
cmpsl
xchg
das
sub
jae
inc
shl
mov
psubusw
rol
jmp
pop
fldcw
es
mov
add
xchg
rcrl
sarl
push
icebp
jmp
aaa
lcall
out
mov
cli
call
dec
push
or
xchg
ss
xor
inc
dec
nop
shlb
mov
and
adc
ret
es
inc
mov
mov
test
xlat
lds
je
push
fdiv
mov
decb
pop
push
push
dec
xchg
into
dec
popa
fisttps
ficoms
push
xchg
aaa
inc
and
pushf
fimuls
test
inc
jns
pop
sub
inc
dec
icebp
loop
pop
and
cmp
jae
test
popf
movsl
dec
sub
in
mov
push
mov
dec
lock
mov
in
test
mov
cmp
repz
mov
loopne
dec
jl
stos
inc
inc
enter
ds
cmp
adc
dec
aam
and
sub
push
in
cmp
and
stos
imul
cmp
mov
xchg
fimull
push
and
insb
idivl
sbb
adc
test
jne
push
lods
repz
add
cmp
mov
cld
mov
mov
mov
pop
mov
icebp
movsb
dec
push
dec
pop
popf
outsb
jg
push
fbstp
push
mov
cmp
cmpsl
push
lds
push
mov
jne
imul
xor
cmp
adc
jmp
fcompl
inc
cwtl
andl
adc
push
das
mov
inc
call
inc
add
and
push
hlt
xchg
mov
in
std
ret
pop
sbb
je
gs
inc
jne
xchg
adc
dec
loopne
adc
loop
push
jmp
gs
jp
mov
cs
in
xlat
mov
in
or
repz
xchg
stos
popf
int
jg
dec
into
sar
sub
jne
xor
in
stos
movsb
cli
icebp
dec
insb
lods
mov
cmp
jle
mov
jp
cltd
idivl
inc
inc
lret
mov
imul
add
push
cmp
movb
sub
ret
add
loop
push
xchg
out
adc
enter
stos
les
mov
pusha
push
imul
add
pop
xchg
xor
push
jbe
mov
fstpl
jecxz
dec
mov
sub
cs
mov
stos
mov
sti
lret
jns
or
in
das
daa
or
add
push
leave
dec
jns
or
push
dec
push
adc
jo
lea
inc
pusha
or
in
and
fwait
adcb
pop
push
je
inc
jo
lret
push
pop
and
inc
nop
pop
adcb
or
xchg
xlat
mov
sub
xorb
jl
scas
dec
ss
popf
add
or
orb
sahf
les
mov
lock
hlt
jge
xchg
push
mov
mov
cmp
insl
lret
sti
cwtl
subl
jge
xchg
and
imul
push
pop
pop
jne
and
js
jne
push
xor
dec
xchg
mov
sub
cmp
push
test
aaa
cmpsb
inc
test
insl
jl
jno
movzbl
dec
mov
cmp
push
or
xchg
fsubs
in
push
add
adc
mov
xor
adc
jmp
loopnew
jmp
test
jb
cmp
jmp
adc
adc
or
shrb
mov
push
dec
clc
dec
push
and
push
jl
dec
mov
inc
dec
pop
mov
mov
stos
mov
sarb
push
or
push
cmc
dec
jp
jg
int
addb
or
push
ficoml
sti
jbe
repnz
loope
jl
push
scas
in
movsb
adcb
sub
push
sbb
push
cmp
and
adc
test
jl
call
je
push
addr16
dec
jle
jg
adc
push
mov
and
movsb
and
fs
pop
cli
adc
es
imul
and
pop
dec
loop
lret
xor
je
fsts
or
pusha
sub
mov
jb
daa
in
ficomps
add
adc
and
mov
aad
sbb
ljmp
dec
xchg
sahf
aam
or
jnp
shlb
fdivl
lds
cmp
push
mov
pop
test
jo
mov
in
adc
movsl
rorl
int3
dec
adc
adc
enter
push
push
xchg
loop
dec
in
fldenv
lret
cmp
or
xchg
xchg
addr16
and
cmp
cmpl
sub
mov
dec
and
test
mov
js
mov
dec
or
por
subl
sbb
xchg
adc
or
inc
dec
mov
xor
setl
cmpsl
fs
push
stos
and
dec
popa
mov
es
sub
hlt
movsl
lret
or
aaa
aaa
shr
cld
cli
sub
ret
mov
mov
pop
in
inc
leave
fdivrl
dec
add
pop
mov
push
insb
mov
adc
and
aam
sahf
sub
mov
xchg
jne
add
and
inc
repnz
push
xor
xchg
sbb
push
cmp
push
negl
or
mov
push
dec
mov
fstps
sbb
mov
sbb
xchg
jno
sbb
sub
lea
test
sbb
mov
lahf
sbb
lret
or
test
addl
inc
notl
cmp
or
roll
adc
dec
test
push
ljmp
mov
jmp
inc
lahf
jnp
pop
stos
fs
pop
in
fdiv
dec
adc
pop
jnp
adcl
or
inc
jmp
lods
or
in
xor
or
orb
jge
add
sbb
pop
sub
add
jge
pop
int3
mov
pop
in
mov
ror
lea
mov
pop
call
out
sub
inc
inc
push
push
movsb
jbe
sub
mov
mov
std
sbb
inc
lret
add
bnd
lret
mov
add
xchg
xlat
adc
sub
sar
inc
orb
dec
jge
xchg
stc
inc
ret
data16
push
dec
adc
and
push
mov
or
xor
or
dec
xor
or
xchg
sahf
adc
aam
sbb
movsb
xchg
dec
pop
add
and
call
cmp
jge
mov
xor
pop
std
push
pusha
pop
int
std
add
sbb
add
and
js
div
adcb
lret
jl
cmp
mov
jne
or
or
sbb
and
xor
adc
jno
inc
mov
inc
xor
xchg
cmpsb
mov
popf
cmpps
sarb
or
jl
inc
and
lods
loop
int3
adc
adc
pop
lock
xor
mov
dec
lods
and
les
sub
lock
hlt
stos
call
dec
inc
mov
cmp
js
je
fldl
jle
movsl
mov
xchg
or
and
adc
inc
lret
pop
pop
mov
pop
fbstp
inc
pop
sub
mov
and
dec
adc
mov
out
cld
xchg
sbb
push
sbb
aaa
mov
push
add
clc
pushl
dec
adc
xlat
push
add
adc
jp
dec
and
push
push
int3
xor
push
or
mov
push
xchg
adc
mov
lret
push
cmp
push
inc
and
sbb
nop
pop
mov
and
test
mov
xor
nop
cmp
or
jno
sub
in
cmp
data16
data16
add
xor
push
movsl
sbbb
rorb
jl
sbb
mov
adc
dec
movl
into
jb
add
pop
pop
dec
lea
ja
push
fisubrs
adc
mov
mov
mov
fwait
add
push
jae
cmp
shl
mov
pop
arpl
xrelease
pop
mov
imulb
subps
add
push
jo
add
into
out
xchg
dec
mov
cltd
and
jnp
or
lock
into
or
icebp
hlt
and
pop
inc
push
cmp
sub
dec
pop
xchg
inc
repnz
call
test
xor
xor
xor
jae
xor
add
mov
imul
push
out
cld
xchg
adc
push
or
dec
mov
pop
test
push
sub
sub
xchg
xchg
scas
fsubl
xchg
popf
sahf
dec
test
jno
xchg
loop
xchg
test
push
dec
les
scas
rorb
or
or
pop
jg
ds
dec
adc
sbb
cmp
je
ficoml
add
in
cwtl
add
dec
jne
pop
jnp
xchg
fmuls
jne
inc
push
lea
push
sbb
or
sub
xchg
mov
inc
frstor
pop
xor
cmp
inc
test
enter
push
dec
or
fsts
or
jne
jae
je
nop
in
jl
das
push
adc
aad
enter
test
fstl
xchg
rorb
popf
test
sub
or
xor
cmp
inc
inc
inc
into
std
jo
imul
add
cmp
imul
cmp
sub
mov
jp
jl
fstpl
sbb
adc
dec
dec
dec
xchg
dec
jae
push
push
filds
fldcw
jg
mov
push
jg
cmpl
dec
adc
sub
enter
int
lcall
inc
dec
sub
dec
dec
std
lds
fsts
cmp
pop
or
ds
push
add
call
test
xchg
cmc
push
lods
or
dec
in
test
jmp
test
push
dec
mov
aas
push
dec
jnp
cld
sahf
leave
dec
jp
fs
fbld
dec
cmc
jmp
or
scas
jmp
lea
push
cmp
dec
out
gs
std
sbb
pop
hlt
add
aam
push
pop
or
xchg
push
or
sbb
into
mov
inc
es
ret
test
shlb
sbb
inc
dec
sub
jl
mov
mov
into
cmp
je
pushf
aas
into
push
mov
adc
add
mov
mov
inc
or
pop
mov
comiss
test
xor
jbe
and
sti
mov
or
js
scas
testb
icebp
lea
aam
js
push
movsl
jle
push
add
inc
xor
fidivrs
dec
in
cmovnp
mov
mov
outsl
inc
ss
and
sub
pop
fldl
mov
into
hlt
rcr
adc
inc
dec
dec
lods
cmp
cmp
xor
mov
jnp
push
mov
or
pushf
aad
xchg
adc
pop
stc
jge
or
aad
mov
aaa
push
and
adc
pushf
push
insb
mov
adc
dec
adc
add
fs
test
sahf
cwtl
sub
fdivl
adc
pop
adc
add
xchg
and
xor
roll
sub
ret
jmp
lea
shrl
test
sbb
mov
nop
adc
movb
xlat
stos
enter
inc
lock
or
stc
je
mov
xchg
push
mov
loope
pop
adc
dec
push
movb
dec
out
daa
negl
nop
cltd
pop
ljmp
mov
outsw
enter
adc
adc
add
cmp
lret
std
orl
mov
jne
in
fdivr
inc
push
hlt
loop
dec
pop
out
push
clc
push
adc
ljmp
xchg
das
mov
popa
pop
stos
mov
pop
out
mov
inc
and
test
push
jl
fucom
popa
fsubr
sbb
xchg
pop
dec
inc
divb
and
les
dec
je
sbb
das
mov
rorb
movsb
jns
cmp
add
adc
xchg
mov
test
mov
int3
sub
or
or
add
je
ds
inc
insl
jge
lods
es
jne
dec
sub
jl
inc
loop
xchg
and
pop
lar
imul
adc
adc
cmpsl
pusha
push
in
lds
gs
mov
les
mov
enter
sub
sub
scas
xchg
inc
jo
ss
jno
dec
adc
mov
ficoml
shrl
lcall
adc
cvtps2pi
rcll
adc
incb
aam
dec
or
sub
sub
dec
ds
inc
adc
daa
fs
mov
push
sbb
xchg
iret
push
rorb
cmpsl
sub
sub
adc
cmpsl
cmp
cmp
dec
test
ss
sbb
nop
xor
cmp
jnp
out
hlt
rcll
cmp
inc
inc
subb
cmp
fdivrl
cmpsb
pop
scas
addr16
pop
sub
repnz
daa
inc
sub
xchg
cld
into
fsubl
stos
mov
adc
ss
and
mov
imul
adc
or
or
scas
fld
inc
nop
mul
mov
push
adc
or
add
test
and
ja
cmp
aas
inc
cmp
adc
mov
and
std
inc
or
jns
das
sub
or
adcb
or
mov
add
dec
loopne
push
xchg
sti
pusha
lret
sti
idivl
ret
sbb
xchg
or
test
inc
sbb
call
sbb
and
inc
inc
mov
add
sti
jl
inc
jge
ja
ret
pop
adc
stos
and
test
pop
outsb
push
mov
and
icebp
lock
adc
sti
sub
inc
in
sub
push
mov
push
loopne
ret
xchg
adc
scas
bound
imul
mov
mov
add
pop
mov
sub
xor
shr
ret
stos
dec
fists
mov
sub
pushf
sbb
push
xchg
arpl
jnp
xchg
and
dec
bound
push
mov
cmp
call
mov
in
jne
pop
mov
jp
daa
pop
pop
jg
enter
int3
jo
dec
mov
mov
fs
sbb
adc
jae
mov
jnp
jbe
jmp
jp
dec
call
push
inc
and
adc
std
lret
movsb
cmp
inc
xchg
sbb
jb
xor
stos
or
push
sbb
dec
xchg
outsb
and
jbe
cmpb
inc
add
mov
add
push
adc
fsts
leave
dec
mov
xor
xchg
mov
inc
loope,pn
jne,pt
je
mov
adc
sarb
cli
and
fstps
add
sub
jge
sub
inc
add
sub
and
mov
add
cs
push
or
lock
push
jb
in
shrl
lret
mov
jmp
pop
in
jne
or
mov
repnz
push
jle
pop
shrb
or
pushf
mov
out
cmp
daa
ficoms
ja
pop
cld
add
jne
subb
sub
jne
jle
or
xor
push
movsb
sar
push
push
xchg
push
mov
lcall
sub
jne
in
cmp
or
orb
pusha
test
jge
testl
jne
in
insl
rcr
shr
cmpsl
adc
aad
cmp
pop
push
cmp
mov
xchg
mov
ljmp
inc
push
movb
add
hlt
adc
lahf
out
fsubrs
dec
cmp
data16
lods
in
push
adc
inc
jb
jmp
inc
inc
fimull
or
pop
add
push
dec
cwtl
cmpl
stos
lods
mov
ret
sub
push
mov
adc
sub
and
push
je
mov
pop
fists
mov
sti
lret
popf
orb
inc
pop
lea
cmp
jle
push
pop
loopne
lcall
mov
dec
mov
mov
fsts
add
sub
in
ljmp
jb
jge
push
inc
les
icebp
mov
push
push
pop
mov
push
out
inc
lock
inc
mov
push
or
test
idivl
divb
test
mov
add
or
mulps
sbb
inc
xor
aam
jb
ret
stc
inc
inc
sbb
jl
adc
lret
add
inc
or
cmovs
into
xor
gs
inc
addr16
jp
mov
push
lcall
jae
jmp
adc
push
xchg
xor
mov
jne
outsl
testl
fwait
pop
test
push
imul
inc
jg
xchg
mov
insl
mov
sbb
mov
add
movzbl
sbb
lods
pop
jmp
stos
pop
imul
ret
or
repz
mov
sub
shll
rorl
jl
xchg
or
and
sub
xor
aaa
xchg
mov
les
out
push
xor
addr16
sub
and
jg
movb
xchg
lods
add
and
popa
pop
mov
sub
nop
pop
mov
ljmp
adc
push
and
ljmp
adc
dec
fbld
mov
adc
pop
mov
push
dec
dec
adc
jo
std
orb
jb
inc
out
daa
cli
and
push
icebp
movsb
xchg
fsubs
mov
push
std
jnp
inc
mov
adc
jns
add
idiv
out
jb
inc
sti
nop
cmp
repz
push
out
xchg
sti
jge
add
ljmp
add
out
add
sub
jl
inc
push
call
inc
in
fucomp
mov
sub
jge
leave
jns
addr16
cmpsl
jo
lea
xchg
enter
or
mov
or
add
sub
dec
cmp
pop
mov
sbb
dec
lds
mov
mov
mov
add
xchg
inc
or
inc
std
pop
shrb
insb
stos
cld
jne
or
xor
or
fs
arpl
push
and
cs
push
shr
mov
std
push
mov
and
inc
sub
and
adc
stos
repz
std
jae
or
mov
mov
mov
inc
std
push
fnsave
and
sub
stos
push
pop
mov
jmp
and
push
xchg
mov
xor
pop
jge
imul
dec
hlt
stos
and
shll
faddl
leave
fiadds
lea
and
and
cmpb
fisubs
ljmp
les
push
lock
xchg
cld
mov
test
push
mov
ficompl
pushf
cs
push
fmul
les
test
pop
mov
je
pop
les
aas
dec
push
inc
cmpsb
movsb
mov
dec
jmp
in
push
xor
mov
and
ss
sub
out
add
sbb
cmpsl
pusha
in
sub
test
cmp
pusha
enter
repnz
cmpsb
cmp
je
pop
sub
mov
adc
adcl
imul
mov
into
lcall
repz
cmpb
mov
lock
push
inc
repnz
push
bound
and
sbb
inc
xchg
js
and
mov
jne
jmp
divl
dec
cmp
das
test
add
pushf
das
dec
jge
sub
jmp
jp
outsb
lahf
dec
add
cmp
mov
in
cmp
testb
sub
sub
mov
insl
xchg
xor
divb
inc
jle
fiaddl
push
or
sub
movsb
mov
fwait
jne
lcall
jg
nop
cmpsb
cld
mov
push
insb
mov
xor
or
adc
xchg
std
icebp
mov
into
mov
push
xor
stos
cmpsl
add
dec
add
fistps
hlt
add
pop
sti
dec
das
sahf
pusha
sub
adc
mov
inc
cmc
xor
lret
repnz
cmp
jns
inc
cwtl
fbstp
movsl
cld
push
imul
je
imul
aad
cltd
pop
cmp
or
inc
out
dec
into
stos
xor
add
xchg
inc
adc
lcall
out
and
movsb
cmp
jo
mov
adc
sub
add
inc
dec
jne
lock
repz
in
int3
inc
lret
out
adc
scas
jne
cmp
inc
xchg
bound
dec
dec
cltd
cmc
sbb
jo
push
scas
add
pop
push
mov
std
xchg
lea
sti
dec
inc
dec
cmp
test
adc
sbb
dec
hlt
and
xor
push
push
mov
inc
cmp
dec
cs
fldt
int
test
adc
lds
test
lcall
mov
test
cmp
mov
mov
mov
xlat
and
shll
faddl
cmp
sbb
inc
xor
jae
xlat
jle
aas
dec
and
scas
xchg
xor
sub
mov
sbb
in
adcl
loopne
test
jb
inc
fisubl
mov
push
xor
mov
jle
test
sub
adc
inc
or
in
clc
jne
cld
jnp
inc
movsl
mov
pusha
clc
pop
fs
mov
or
enter
mov
dec
sub
cmp
mov
xchg
push
inc
adc
and
inc
sbb
and
scas
jp
mov
pop
add
pop
es
push
push
lods
into
adc
mov
push
aam
sar
dec
movsl
jg
je
and
and
jmp
imul
sub
xchg
adc
scas
decb
adc
aad
xchg
adc
rolb
jg
mov
xchg
pop
in
std
sub
jg
dec
inc
leave
jg
scas
and
lock
dec
inc
jne
test
cmpsl
imul
or
cmpsl
mov
cltd
cmpsl
jb
sbb
xlat
nop
scas
or
push
or
and
ja
and
and
jle
cld
xor
inc
and
lcall
les
les
adc
inc
into
test
or
or
pop
dec
jne
sbb
ja
faddp
push
lds
jbe
xchg
lea
mov
pop
sbb
lret
enter
cwtl
and
js
dec
leave
jl
addr16
aad
inc
dec
fnsave
adcb
mov
pop
cmc
fs
ret
test
sbb
pop
jno
subb
inc
jmp
xchg
mov
add
xor
test
jne
fstpt
xchg
adc
int3
fiaddl
and
lcall
lcall
sub
and
and
pop
pusha
add
notb
push
repz
sub
dec
or
and
xchg
add
jb
flds
push
imul
lds
ja
aad
test
loop
pop
mov
js
inc
adc
stos
and
push
push
nop
adc
dec
push
rorb
cmp
lods
leave
mov
dec
adc
sbb
adc
out
xchg
call
jb
out
sarb
jg
pop
outsl
shlb
add
fcomps
mov
stos
and
xor
pop
pop
scas
inc
dec
push
aas
mov
js
dec
popf
push
dec
jbe
inc
into
jmp
push
push
in
fiadds
in
js
test
xchg
mov
sub
mov
inc
push
mov
cmc
bound
aam
jmp
sub
adc
jmp
cmp
mov
dec
bound
mov
mov
aam
and
pop
cmc
or
add
aaa
das
fildll
fists
jg
xor
cmp
imul
adcb
clc
add
or
mov
pop
cmp
loop
cltd
or
das
mov
fs
mov
mov
es
mov
int
add
hlt
mov
mov
iret
and
and
or
dec
or
push
add
pop
or
lcall
scas
shrb
mov
jo
loop
add
lcall
movsl
inc
stc
pop
test
stos
mov
add
sbb
cli
jns
sbb
sub
add
hlt
lret
dec
cmp
cltd
push
cmp
jno
mov
inc
push
je
dec
lods
mov
mov
enter
jge
mov
repz
cmpb
ret
mov
inc
mov
or
sub
test
add
js
dec
sbb
cld
pushf
pop
cld
roll
ud2
sub
lahf
pop
push
lret
test
jg
inc
mov
je
push
je
loop
xor
mov
xchg
js
test
mov
rcrb
mov
lret
ret
xchg
fs
xor
aas
pusha
and
jne
dec
or
orb
sbb
sub
test
xor
in
and
test
push
sub
test
aas
jnp,pn
and
adc
stc
sub
lods
push
and
xor
shufps
cld
xor
cmp
test
loop
adc
test
pushf
jp
shl
push
xor
xor
mov
push
fisubs
mov
xor
jle
add
sub
call
lcall
fsubrp
ds
inc
xchg
popf
xor
sbb
adc
mov
mov
sbb
inc
or
cmp
cmp
insb
push
pop
push
pop
outsb
pop
and
pop
leave
jne
mov
xor
xchg
pop
lds
aam
dec
outsb
adc
and
in
sub
enter
lods
in
jge
xchg
push
gs
push
cmpsb
ss
push
adc
iret
mov
pop
push
and
pop
pop
hlt
and
stc
dec
mov
pusha
jg
lods
jmp
neg
leave
jo
xchg
dec
jl
xor
and
cmpb
test
or
popf
js
adc
pusha
push
xchg
mov
cmp
jge
xchg
inc
adc
sbb
pushf
jae,pt
jne
and
lods
ret
scas
movsb
jae
fs
mov
inc
in
mov
sub
xor
pop
mov
test
add
dec
daa
das
inc
jp
nop
or
mov
inc
push
or
push
mov
movsb
mov
lods
or
shrb
jge
jmp
aaa
push
or
dec
mov
jne
outsb
testl
push
and
xchg
sbb
or
sub
adc
jmp
inc
sub
xor
push
pop
mov
scas
dec
add
cs
sub
rcrl
push
pop
add
xchg
ret
cli
push
rcrl
and
insl
fs
add
add
mov
add
inc
inc
cmc
dec
data16
or
sbb
and
enter
lcall
and
test
or
adc
adc
movsl
jb
dec
je
push
pop
xor
fadds
lock
jne
sub
sub
insl
jmp
push
or
call
pushf
sti
les
pop
int
mov
push
dec
mov
cmp
mov
or
xor
or
loopne
aam
rcrl
test
adc
in
jmp
xchg
inc
movb
loope
mov
xor
movsb
pop
inc
rcll
xor
test
pop
mov
lods
inc
in
in
stos
cmp
adc
insb
mov
mov
inc
dec
mov
sub
subb
fdivrs
push
mov
adc
mov
inc
and
adc
data16
pop
ret
fsubrp
cmp
inc
add
push
jl
lcall
sub
ja
dec
dec
mov
dec
movsl
mov
test
sub
xchg
xor
jmp
mov
ja
les
out
ss
xchg
sbb
incb
xchg
inc
dec
lods
jmp
push
xor
clc
rorb
xchg
cmp
test
scas
mov
sub
add
cmp
jle
and
push
dec
ljmp
outsl
je
ljmp
lea
inc
and
les
jnp
movsl
ffreep
push
add
or
adc
push
mov
outsl
sub
fs
insb
mov
cmp
cmpsl
jne
adcb
jns
inc
sub
push
inc
dec
pop
les
and
and
popa
mov
fcompl
scas
mov
rol
dec
ljmp
push
dec
cmc
jnp
adc
jmp
scas
mov
cltd
dec
and
or
push
aaa
bound
into
bound
mov
mov
add
cmp
jle
popa
and
popf
repz
dec
dec
sub
ja
adc
add
pop
clc
add
push
rorb
les
pop
sbb
sub
adc
xchg
loopne
add
hlt
or
scas
into
loopne
in
fdivl
adc
fsubl
pop
in
jmp
fprem
push
or
push
lea
xor
and
call
dec
and
sub
pop
pop
add
pop
mov
icebp
pop
call
adc
movsl
repz
inc
pop
aaa
adc
mov
out
xchg
mov
inc
and
mov
jg
mov
xchg
xchg
jne
fistpl
stos
push
xchg
out
movsl
fdivs
dec
mul
es
adc
mov
mov
insl
bound
cli
xchg
xor
jl
inc
sub
dec
mov
loop
mov
shrl
adc
pushf
inc
or
xchg
and
les
cmp
rcr
pop
and
dec
lock
sbb
fs
jns
icebp
pop
mov
dec
mov
movsb
jg
and
dec
insl
pushf
jg
outsl
cli
aaa
ja
and
and
xor
jmp
sbb
scas
jecxz
or
mov
ja
adc
aas
dec
xchg
push
mov
je
xabort
mov
adc
inc
xor
in
sub
bound
dec
adc
mov
xchg
scas
adc
jnp
jne
xchg
xchg
sbbb
jecxz
adc
dec
add
inc
xchg
je
dec
adc
xchg
clc
sub
xorb
sbb
test
push
xor
sbb
cmp
dec
cmp
jne
dec
push
fistps
aas
mov
push
jne
pusha
sub
cmpsb
mov
inc
and
orb
push
sbb
sub
adc
jno
call
loop
cs
leave
cmpsl
pop
or
push
das
je
mov
xor
out
push
inc
out
mov
push
pop
loop
push
sbb
and
cmp
movsl
je
adc
je
mov
into
out
or
ret
inc
adc
sbb
je
add
mov
cmc
arpl
rorb
adc
into
sarl
inc
jl
daa
and
jnp
xor
imul
pop
cld
mov
jbe
inc
dec
pop
loop
jne
sbbb
dec
js
mov
push
add
sbb
dec
jmp
insb
jp
jmp
fisubrl
cmp
jb
mov
sbb
add
xchg
jmp
lret
dec
fnstsw
sub
lds
das
out
mov
iret
and
push
pop
mov
pusha
jno
mov
pop
sbb
sti
jmp
adc
pop
jecxz
dec
scas
jne
mov
shr
mov
inc
mov
cmp
xor
sub
nop
push
xlat
in
aam
adc
mov
and
call
addb
int3
push
pop
inc
test
or
push
inc
xchg
inc
cld
sahf
xlat
xchg
roll
daa
push
lods
mov
push
test
icebp
ret
mov
test
sub
gs
jo
mov
mov
outsl
and
stc
loope
rcrb
notb
cmpb
movsb
or
jne
sub
aam
je
pop
dec
jle
push
clc
ja
scas
jp
shlb
movsb
mov
xor
push
and
pop
call
xchg
mov
dec
dec
jp
and
cmp
out
jnp
dec
push
lock
or
roll
xchg
add
stos
mov
sbb
push
scas
lcall
inc
adc
call
xchg
imul
scas
aaa
mov
mov
fucom
push
lret
cmc
mov
in
push
jg
sub
dec
push
pop
lods
push
mov
inc
adc
pushf
xchg
adc
das
rcrb
push
and
aad
ja
xor
mov
inc
bndstx
sbb
rcrl
push
mov
mov
pop
add
jmp
pop
jle
repnz
lds
mov
dec
js
aad
dec
xchg
fmull
faddl
inc
sti
std
pop
cmp
sub
mov
fimuls
stos
fldenv
inc
inc
call
mov
out
inc
stos
outsb
mov
int
bound
jl
loopne
inc
jmp
mov
jno
jle
push
aas
push
fistpll
dec
stos
cltd
or
outsb
push
push
leave
push
jge
mov
into
sub
mov
mov
fnsave
and
add
jle
dec
inc
push
xor
cmpsl
mov
xor
cwtl
pop
sbbl
test
push
mov
inc
dec
and
pop
pop
sub
jecxz
pop
loope
imul
icebp
xchg
pop
fwait
sub
out
sub
xchg
fidivrl
jo
outsb
sti
imul
cmpl
pop
adc
in
cmp
or
push
aam
pop
jmp
mov
or
xlat
xchg
ds
mov
xor
xlat
fstp
pop
and
adc
mov
mov
xor
sub
dec
push
sub
adc
xchg
stos
pop
test
xchg
test
sub
out
adc
jns
push
enter
enter
sbb
cmp
or
repnz
ja
movsl
inc
nop
inc
mov
push
inc
cmp
jbe
dec
and
inc
push
and
je
and
adc
mov
je
andb
jmp
mov
dec
or
mov
or
mov
pop
lahf
jno
and
inc
test
divl
cmp
lret
xchg
ds
scas
sub
movb
xchg
jp
add
loop
adc
testb
or
and
pop
dec
or
imul
mov
mov
flds
loope
mov
es
lock
out
cmp
xchg
popf
adc
mov
clc
aam
nop
xchg
lds
add
or
test
cmp
jmp
pop
pop
popf
out
lods
xlat
xor
inc
aaa
add
jnp
das
stc
hlt
leave
aad
test
std
xchg
idivl
ret
push
sub
out
jne
xor
mov
pop
hlt
out
sub
add
cmp
xchg
mov
fsubl
aaa
and
orb
aam
or
dec
std
clc
cmp
mov
inc
adc
call
enter
sahf
mov
sub
pop
mov
jle
sub
cmc
sub
xor
dec
mov
xor
adc
jb
jnp
sbb
inc
adc
fdivl
jg
sub
add
push
and
inc
cmpsl
xor
inc
pop
imul
lods
xorl
pop
xor
stc
or
popf
pop
das
pushl
and
cmp
cmp
jle
sarb
jle
dec
or
es
hlt
push
jbe
test
rorb
mov
jne
leave
mov
cli
test
scas
add
or
dec
sti
pushf
xor
cwtl
pop
sbb
rclb
inc
cs
jo
lods
inc
dec
mov
dec
pusha
ljmp
jne
pusha
jns
push
mov
stos
xor
lock
hlt
data16
pushf
or
pop
fildl
xor
push
or
shl
xchg
pop
movsb
adc
cwtl
pop
test
loope
pop
and
dec
adc
inc
jae
cmp
insb
nop
and
adc
push
xchg
jo
push
or
addr16
xchg
or
jmp
or
dec
dec
je
push
out
jne
enter
inc
int
hlt
add
mov
pop
or
mov
jo
in
cmp
mov
inc
jne
xchg
add
mov
and
inc
outsb
arpl
outsl
jb
jo
xor
cli
or
add
bound
ret
push
mov
rorb
sub
mov
in
mov
dec
ds
mov
cmp
mov
push
and
insl
xchg
push
cmpsb
fwait
and
jl
adc
dec
dec
outsb
dec
outsl
jne
jae
inc
filds
add
sub
xchg
repnz
jb
cmp
mov
pop
dec
repz
in
pusha
mov
inc
rcr
inc
add
iret
sub
lock
pop
ret
sbb
dec
stos
adc
call
or
mov
sub
movsb
xor
mov
pop
ret
gs
pop
adc
jne
test
xor
xchg
sbb
dec
push
sbb
push
dec
add
dec
loopne
dec
xchg
mov
test
fnsave
dec
adc
and
in
adc
mov
dec
cmp
popa
push
or
dec
out
imul
lea
shrb
xchg
sbb
iret
addb
bound
jecxz
cmp
mov
xor
mov
xor
movsb
xchg
sbb
pshufw
or
in
test
xor
sbb
or
cmp
les
mov
clc
mov
adc
mov
les
jl
or
push
iret
push
mov
or
mov
pop
int3
ds
push
adc
daa
ljmp
out
and
imul
or
mov
cltd
jl
inc
nop
xchg
mov
imul
or
mov
adc
je
jns
inc
xor
shlb
push
inc
pop
bound
inc
jb
or
adc
cwtl
js
or
dec
outsl
ja
push
adc
add
loop
push
add
cwtl
push
push
popa
sarb
jne
inc
ljmp
xor
es
mov
cld
test
ret
in
je
nop
dec
add
enter
imul
dec
or
imul
gs
rclb
enter
pop
mov
test
mov
aaa
or
nop
hlt
les
mov
std
sbb
incl
ds
bound
std
out
or
or
pop
nop
test
imul
adc
add
xor
dec
lea
and
add
dec
cmp
jmp
pop
dec
adc
cs
in
ss
jecxz
flds
inc
icebp
fisubs
sbb
ficoml
orb
jb
ret
dec
or
or
into
pop
mov
sarb
sbb
mov
sbb
insb
push
sbb
adc
add
add
sub
sbb
popa
dec
insb
sub
adc
inc
sub
inc
jne
or
outsb
popa
ror
sub
mov
adc
repnz
inc
and
push
push
sub
cltd
in
xchg
dec
mov
and
sbb
jo
insb
inc
dec
in
push
repz
cmp
sahf
outsb
jl
xchg
stc
data16
dec
cld
js
and
stc
mov
cltd
negl
or
hlt
lods
pop
sbb
sub
mov
inc
inc
push
lea
or
or
mov
dec
and
push
jo
and
cld
lea
xchg
or
gs
clc
adc
shl
daa
lds
mov
xchg
inc
mov
sub
or
adc
mov
dec
sub
push
dec
adc
mov
mov
nop
loopne
or
stos
popf
mov
daa
pop
or
dec
dec
out
sub
out
mov
shlb
mov
jb
inc
test
cmpsl
addr16
sub
sbb
inc
addl
aam
mov
dec
and
test
sub
imul
in
inc
shlb
inc
outsl
add
xchg
dec
or
hlt
fsubrs
das
pop
xor
inc
jne
jae
mov
cmp
fiaddl
dec
mov
or
mov
inc
inc
pop
pusha
scas
aam
xor
xchg
movsl
mov
or
mov
mov
xor
call
and
cmpsl
mov
or
sub
test
sub
subl
xor
stos
stos
popf
scas
add
adc
enter
xor
fldenv
and
repnz
fdivl
and
jmp
sub
outsb
call
cmp
cmp
add
cltd
sub
lret
inc
rol
mov
or
cmp
or
adc
pop
or
add
cmp
out
xor
xchg
enter
cmp
sahf
adc
inc
lcall
jo
imul
ljmp
dec
stc
cmp
bound
add
and
xor
popf
xor
call
test
or
movsl
insb
and
data16
outsl
and
orl
or
mov
inc
cltd
mov
shr
and
push
dec
in
sbb
cmp
loopne
mov
jno
cmc
xchg
into
shlb
sub
or
gs
xchg
dec
in
outsl
aaa
inc
inc
push
or
or
and
dec
fcomps
in
sub
dec
inc
loopne
jo,pt
inc
or
inc
mov
and
dec
rorl
lcall
xchg
dec
insl
dec
xchg
cmp
dec
mov
xchg
dec
movsl
dec
dec
sub
lock
xor
pop
add
call
adc
mov
das
movsb
mov
xor
adc
xor
adc
bound
or
shll
enter
clc
jmp
push
inc
add
cwtl
inc
jo
pusha
pop
mov
mov
test
inc
add
mov
test
inc
jb
jo
test
and
jno
enter
or
add
filds
sub
imul
sbb
fdivrs
inc
dec
jbe
sbb
or
adc
xchg
mov
sbb
jecxz
jo
sbb
add
adc
mov
dec
daa
sbb
cld
and
pushf
and
movsb
sbb
mov
nop
and
sarb
pop
sbb
or
pop
loop
or
mov
or
fldl
and
dec
add
je
push
adc
and
sub
out
and
mov
inc
call
push
inc
in
xor
insl
gs
xchg
push
sub
mov
push
push
repz
and
mov
rorl
sub
scas
dec
or
sub
pop
and
push
test
sub
jne
mov
test
mov
xchg
lret
or
jno
adc
sub
cmp
or
xchg
adc
cwtl
xor
push
pusha
loope
insb
mov
mov
clc
pop
daa
push
pop
mov
add
and
stc
pop
and
xchg
call
inc
imul
sub
rclb
and
mov
sbb
xchg
mov
out
sub
jg
inc
rcrb
xchg
push
adc
cmc
cwtl
xchg
dec
lea
adc
adc
and
cli
or
and
add
es
adc
bound
arpl
add
int
jae
xor
adc
push
add
adc
xchg
inc
pop
dec
shlb
jg
ss
cld
repnz
dec
adc
ja
fnsave
sub
cli
adc
shlb
adc
je
inc
xchg
test
into
sbb
lods
jbe
xor
movsl
adc
mov
add
push
pop
xor
test
and
aaa
or
ret
pop
test
dec
cmp
or
dec
pop
mov
call
cmp
subl
fsubs
sub
or
xor
pusha
loopne
sub
rorl
pop
out
inc
or
test
js
jp
popf
hlt
mov
out
cmp
jb
jg
dec
or
pop
mov
mov
lods
aam
mov
and
mov
fmuls
lods
in
or
out
mov
or
bound
mov
dec
or
adc
mov
jbe
popf
sbb
pop
push
test
sbb
sbb
cmp
lret
sbb
xchg
mov
call
or
mov
push
inc
insb
ja
and
dec
adc
sti
lods
sbb
pop
movsl
insb
xor
and
inc
repz
imul
out
push
repz
sub
popf
and
call
jo
lock
pop
adc
and
pushf
sbb
fdivl
or
pop
sar
and
repnz
mov
repnz
shll
cmpsb
mov
inc
test
pop
arpl
aas
fs
lcall
test
outsl
mov
inc
movsb
or
adc
in
xchg
or
xchg
mov
sarb
sub
shl
jae
sub
xchg
cmpsb
sti
sbb
and
xlat
les
jmp
dec
ret
and
in
jmp
enter
cmp
sub
dec
mov
lods
inc
sub
mov
jl
iret
sub
cwtl
in
in
xchg
es
shll
stc
das
cmovnp
inc
enter
or
mov
mov
xchg
pop
adc
test
xchg
out
test
push
inc
lret
xor
push
sub
or
push
psrld
xor
fldl
fyl2xp1
xor
sub
xchg
cmpsl
sbb
cmp
test
or
sub
cmp
inc
enter
inc
mov
inc
add
xchg
insb
and
jmp
or
test
pop
and
cmp
pop
xor
mov
dec
repnz
mov
shlb
mov
inc
jle
jmp
inc
jl
mov
enter
dec
or
adc
dec
xor
loop
mov
push
dec
aad
mov
push
pushf
js
dec
push
stc
mov
adc
pop
aaa
repnz
or
mul
jae
les
dec
or
nop
jo
decl
and
nop
nop
push
mov
or
movsb
pop
pusha
test
or
pop
les
movsb
dec
add
or
fmul
adc
mov
jl
xchg
inc
lods
cmpsl
push
fs
dec
adc
lds
and
ficoml
sbb
cld
adc
dec
icebp
or
sbb
pop
pushf
notl
or
jns
sub
jo
fisttpl
jl
mov
pop
aam
faddl
cmp
sbb
imul
ror
in
mov
jl
ror
lock
pop
lds
and
enter
and
pusha
dec
les
loop
mov
aam
test
mov
mov
jb
sub
and
call
fwait
inc
movsb
lahf
aas
daa
daa
adc
push
mov
xchg
lcall
mov
mov
pop
fs
das
push
adc
scas
and
je
xor
pop
nop
or
dec
or
xchg
sbb
adc
xchg
ja
and
rolb
dec
xor
and
sub
aam
fs
nop
les
push
call
xor
mov
test
arpl
pushl
int3
fists
je
scas
push
push
adc
adc
ss
push
xlat
std
push
js
jmp
jbe
rolb
jns
and
or
fisubs
xor
xor
int3
das
lds
inc
and
popa
sub
jp
push
and
push
scas
ret
push
sub
insb
ret
jo
movsb
jl
and
push
mov
jbe
shrb
and
movsl
push
sbb
add
xor
mov
adc
cmp
dec
clc
dec
das
push
jecxz
adc
push
pop
mov
dec
inc
fsts
and
push
gs
cmpsl
pop
sub
pop
or
mov
jo
mov
in
jns
xchg
bound
xlat
repz
sbb
mov
adc
jl
push
xchg
cmp
faddl
push
imul
or
sub
inc
pop
dec
and
xchg
leave
push
mov
mov
and
push
xchg
and
enter
les
and
es
inc
daa
mov
pop
adc
scas
and
jmp
cs
sub
cs
das
sbb
dec
mov
inc
insb
pop
sbb
adc
pushf
mov
int3
cmp
xor
dec
je
fimull
sub
adc
sbb
aam
seta
adc
sub
int3
jl
mov
xor
sahf
or
and
pop
dec
insb
enter
int3
pop
dec
sub
pop
dec
notb
shl
inc
sti
sbb
loopne
dec
fucomip
sub
test
push
adc
js
pop
mov
push
addr16
mov
adc
dec
popa
mov
leave
mov
sub
jns
dec
mov
pop
mov
xor
cld
dec
gs
dec
dec
hlt
xchg
movsl
je
xchg
or
leave
inc
mov
les
hlt
inc
pushf
shlb
loop
xor
adc
and
mov
nop
nop
push
cmc
mov
loop
push
sub
in
ret
push
xchg
pop
insb
dec
and
and
into
dec
jge
sar
loop
fcoms
clc
xor
mov
sub
cld
pop
xchg
or
cmp
adc
jecxz
dec
repz
or
jl
and
aas
and
and
inc
insb
jecxz
fldenv
sbb
inc
and
push
mov
sub
gs
sub
mov
sub
cs
nop
das
mov
xor
dec
mov
nop
xchg
xchg
sbb
xchg
adc
mov
pusha
pop
dec
mov
pop
dec
pop
test
dec
cmp
mov
jnp
jo
data16
sub
gs
or
int3
arpl
sub
notb
add
lahf
daa
ljmp
push
lock
sarb
sub
int
add
or
xchg
add
mov
cmp
xchg
clc
push
in
and
scas
push
jo
mov
pop
cli
mov
xchg
xor
sbb
in
in
notb
test
add
pusha
xor
fcmovnb
add
outsl
fstpl
jl
xchg
aas
hlt
repz
push
imul
mov
call
mov
pop
adc
jbe
pop
inc
sbb
or
push
and
dec
addr16
in
jno
or
mov
and
mov
cmp
push
clc
nop
xchg
popf
mov
negl
cmp
pop
add
ret
and
and
inc
dec
jns
jle
loop
je
or
lods
xchg
call
jmp
insb
iret
mov
mov
pop
and
pop
dec
ret
aad
sbb
dec
xlat
or
ds
fidivrl
or
mov
or
xchg
jae
movsl
daa
sub
push
dec
mov
mov
sub
add
pop
push
sub
xchg
repnz
test
out
adc
or
xchg
sub
inc
das
sub
test
xor
mov
jle
push
adc
in
mov
and
lods
movsl
adc
mov
xchg
mov
mov
loopne
pop
xchg
mov
dec
xor
mov
cli
sub
mov
pop
or
clc
add
pushl
push
pop
je
or
pop
pop
lret
enter
sbb
dec
shll
adc
addr16
mov
sub
jb
mov
or
sub
lods
mov
lret
sbb
mov
mov
push
repnz
jns
or
sbbb
push
jmp
inc
ss
inc
add
add
mov
fisubs
pop
nop
out
mov
lea
orb
movsb
out
inc
sub
sub
dec
stc
pop
push
adc
inc
ss
cld
inc
jl
enter
sarb
adc
mov
and
pop
dec
inc
sbb
mov
and
sbb
repz
push
cmp
add
and
scas
sub
and
mov
call
rolb
lds
mov
pop
sbb
inc
mov
and
int3
mov
push
pushf
mov
jae
sbb
or
rclb
insb
test
xchg
xchg
cmpsb
and
test
fsubl
enter
push
or
mov
mov
or
inc
jbe
in
jg
call
and
data16
and
cmp
int3
pop
clc
adc
and
push
and
and
js
and
nop
or
cmpl
inc
test
push
popf
jl,pt
jl
sbb
push
cli
enter
add
loopne
mov
xchg
cmpsb
or
xchg
adc
and
movsb
out
loop
movsl
mov
cmp
stos
das
add
rcrb
movsb
cmp
nop
mov
mov
in
pop
je
ret
pop
lock
mov
jo
or
pusha
or
movl
or
jo,pn
cli
and
push
sbb
fstl
push
or
decl
stos
int
inc
movsl
or
push
sbb
xlat
decl
scas
leave
xorps
pop
push
or
insb
das
insb
mov
pop
hlt
sub
adc
pop
and
mov
lock
pushf
les
mov
mov
dec
or
adc
sahf
adc
icebp
sbb
test
sbb
sub
xchg
pop
and
rorl
jae
cwtl
inc
add
and
xor
adc
enter
push
sub
jae
cld
push
pop
mov
add
mov
mov
adc
inc
add
cmp
jle
adc
ret
mov
insb
ret
adc
loop
rcrb
mov
fcoml
les
or
in
adc
sbb
or
lret
sahf
sub
cwtl
add
sub
jl
add
xor
andl
mov
or
adc
mov
adc
adc
mov
nop
xchg
dec
adc
sbb
dec
dec
cmp
mov
jg
pop
cmp
andl
mov
ja
sbb
sub
and
jmp
push
adc
push
divl
shrb
and
sub
push
cs
adc
enter
dec
mov
inc
or
and
xor
jecxz
sarb
es
and
cmpsb
enter
leave
and
push
nop
and
pop
pop
outsl
xchg
mov
jl
dec
cld
pop
jle
pop
aas
aam
cmp
addr16
repnz
icebp
adc
fstpl
mov
iret
icebp
sub
mov
stc
sub
mov
push
es
pusha
into
iret
mov
mov
push
fs
das
push
xor
loopne
mov
jno
xchg
mov
dec
notl
or
jge
notl
inc
xor
jecxz
repnz
fs
xchg
aaa
mov
cmpsl
sub
js
cmp
sub
aas
or
je
push
xchg
imul
or
test
cmpsl
idivb
sub
mov
sbb
or
pop
and
mov
rcl
dec
sbb
nop
lock
repz
nop
pop
xor
stc
push
ret
dec
sbb
dec
int3
fdivrs
cmp
int
and
ret
adc
xchg
sub
push
push
xchg
dec
xchg
cmp
les
pop
adc
into
adc
pusha
add
push
icebp
js
cmp
ja
and
js
pushf
cmp
or
into
dec
mov
push
cmp
std
mov
loope
jecxz
jecxz
adcb
push
sub
or
stc
cmp
adc
pop
dec
ret
dec
or
xor
jp
push
pop
dec
aas
movsb
sub
lods
into
or
aad
ss
dec
dec
jl
jle
aas
xchg
sbb
adc
repnz
mov
jmp
insl
addb
inc
or
add
sbb
leave
cmp
xor
ljmp
sub
pop
mov
mov
add
filds
dec
xlat
cmpsb
test
ja
adcb
adcl
mov
gs
daa
push
or
mov
popf
push
jne
test
and
and
and
sub
test
sub
into
mov
stc
jge
nop
nop
dec
call
das
out
mov
shrl
push
aas
repz
pushf
adc
hlt
xlat
lret
hlt
scas
sub
dec
lods
cmp
and
mov
jmp
cmc
push
or
and
xchg
jne
jno
xor
or
xor
cmpb
or
sub
std
lcall
cli
jnp
dec
xor
or
add
loop
lods
sub
bound
arpl
or
mov
cmpsl
jb
cmpsb
lock
call
add
cmc
pusha
push
adc
loope
add
pop
pop
and
out
mov
jge
jne
xchg
push
inc
aaa
add
inc
mov
lahf
mov
pop
or
inc
or
xor
and
pop
mov
shr
sti
psrlq
cltd
or
in
jb
push
lock
push
ljmp
aad
push
pop
push
rcr
jge
push
lock
and
imul
jbe
es
mov
and
mov
decb
bound
inc
pop
sbb
mov
xchg
add
inc
dec
jne
decb
rorl
test
sub
scas
and
lea
inc
xor
xchg
hlt
mov
sbb
test
enter
mov
int3
daa
add
test
sub
lahf
js
xchg
stos
outsb
aam
test
pop
adc
mov
imul
xchg
sbb
test
push
clc
push
lret
or
xor
or
push
inc
jno
out
out
jg
rorb
xchg
push
rorl
sub
pop
push
or
xchg
push
int3
mov
cmp
add
inc
xor
pop
ljmp
dec
inc
aaa
adcb
push
bound
idivl
dec
sbb
roll
xchg
sbb
add
xchg
dec
jae
adc
int
cli
adc
xor
mov
add
out
and
add
or
lock
inc
test
push
xchg
dec
call
lea
mov
push
cmp
inc
xchg
xor
cmpsl
fstpl
adc
rolb
mov
inc
mov
xor
popa
clc
cmpb
xor
xor
or
rcll
dec
movq
adc
dec
adc
adc
sub
jb
je
dec
int
testl
sub
in
mov
insb
sbb
in
xor
stos
mov
rcll
and
xor
jg
xor
outsb
cmp
dec
xchg
scas
aad
fmuls
add
cmp
movl
imul
lods
ss
jge
pushl
into
sub
stc
mov
and
dec
in
push
and
test
mov
mov
inc
xor
mov
add
lret
shl
inc
dec
int
mov
pop
sbb
push
insb
mov
mov
jl
inc
shrb
mov
outsl
xor
popf
mov
test
sub
mov
repz
into
mov
pop
out
pop
xchg
push
cmc
lds
sbb
sbb
loop
inc
add
sub
xchg
es
pop
daa
cmc
push
and
dec
dec
sub
pop
popa
inc
vpshld
bound
or
jmp
xchg
cmc
xor
dec
xchg
pop
cltd
mov
push
jg
cmp
xor
cmp
or
bnd
mov
dec
jg
xchg
cmpsl
adc
push
into
bound
jg
adc
add
and
fsubr
cmc
idivb
push
lahf
rcl
bound
inc
repz
xorl
mov
clc
and
inc
inc
inc
or
dec
mov
notb
sub
hlt
movsb
es
cmp
or
jns
clc
xor
fucomi
add
cltd
adc
int
dec
decb
cmp
xchg
je
scas
mov
jmp
push
add
inc
mov
sub
nop
std
mov
aam
inc
mov
clc
xchg
adc
stos
lret
and
and
inc
cmp
jne
or
mov
mov
sub
or
cmp
xchg
hlt
mov
inc
int3
mov
lea
add
xchg
jle
lock
adc
mov
add
mov
xchg
push
call
cmp
mov
lods
sub
xchg
mov
fmull
jb
pop
push
mull
test
and
test
fildll
sarb
lea
sahf
cmp
repnz
incb
xor
bound
jne
lock
adc
dec
mov
push
aas
fidivs
adc
push
enter
pop
dec
je
xor
test
mov
prefetcht2
fists
test
xor
xorl
add
mov
faddl
mov
hlt
fs
sub
xchg
gs
popaw
pop
sub
mov
mov
pop
or
inc
add
adc
adc
inc
add
jp
test
test
call
sarl
test
xchg
jp
adc
pop
daa
add
sub
loope
mulb
pop
add
mov
adc
sub
inc
dec
rorb
adc
cmpsl
nop
lea
sub
mov
sbb
cwtl
sbb
fnstsw
dec
push
insl
mov
call
sub
das
xchg
cld
add
sub
mov
sub
loopne
insb
sub
pop
mov
movsb
lea
stos
pop
lods
push
sub
roll
push
rclb
rcr
push
xchg
jmp
sub
jnp
imul
aad
ss
aam
inc
xor
dec
adc
push
mov
push
loop
cmp
and
dec
and
adc
sbb
ss
and
jne
sub
pop
sbb
popa
mov
add
leave
or
dec
popa
lea
xor
or
mov
clc
sbb
or
pop
out
daa
int3
add
add
xchg
adc
inc
lds
in
sub
test
xor
outsb
mov
jmp
jg
inc
and
pop
lret
pop
jmp
xchg
xor
jl
sbb
fdivrs
push
jae
inc
out
aaa
add
cltd
jnp
scas
jne
add
cwtl
push
dec
repnz
jnp
dec
fadds
in
mov
push
int3
push
rclb
mov
cmpsb
dec
dec
pop
cmp
cmp
and
scas
xchg
mov
insb
outsl
stc
xor
xchg
aas
test
popa
mov
and
mov
pop
xor
pop
and
dec
mov
mov
mov
and
fsubs
aas
dec
pop
out
rcrl
nop
mov
and
push
dec
push
adc
repz
lea
and
xchg
push
and
repnz
sub
pop
jp
or
jge
lock
stos
jg
addr16
shl
sbb
add
jmp
pop
divb
cmp
push
test
clc
jge
push
sbb
bound
cmp
cld
inc
gs
dec
or
or
adc
dec
push
popa
mov
mov
movsl
ffreep
shlb
test
adc
mov
aaa
test
mov
loopne
inc
and
xchg
pop
xchg
pop
xchg
popa
xchg
xchg
imul
jno
adc
inc
push
mov
enter
adc
enter
enter
enter
enter
inc
mov
pushf
inc
xchg
jg
pop
les
or
fwait
cwtl
cmc
xor
mov
jmp
push
and
fs
fs
scas
cmpsb
les
paddsw
pop
xchg
mov
xchg
push
mov
enter
and
test
inc
es
enter
push
hlt
push
and
cmp
cmpsb
xchg
sahf
and
les
and
sarl
mov
clc
ss
push
pop
jae
adc
fmuls
movl
sub
popf
testb
test
ja
call
push
mov
popf
or
popf
stos
and
jne
xor
dec
sti
xor
xor
je
sub
push
cltd
sahf
xor
cltd
int3
daa
ds
sbb
dec
push
jmp
inc
mov
out
xor
int3
fcoml
or
ss
dec
dec
movq
push
xchg
daa
fcoms
dec
dec
flds
hlt
das
repz
mov
mov
clc
movsb
xor
or
sbb
adc
mov
jg
test
std
imul
sub
dec
sub
add
adc
pop
inc
adc
mov
pop
loop
xlat
or
nop
pop
daa
sbb
out
je
xchg
xchg
and
add
adc
adc
movsl
push
sub
xchg
dec
mov
or
orl
test
push
icebp
dec
push
sbb
sub
inc
lods
in
dec
push
mov
inc
push
fdivl
or
sbb
cld
mov
sub
and
or
popf
lock
mov
mov
cmc
test
mov
pop
int3
into
js
ud2
jne
pushl
ds
jno
dec
jecxz
in
add
fdivrs
adc
adc
sub
fwait
pop
shl
out
and
in
rorb
scas
mov
or
jbe
inc
adc
add
xchg
in
inc
fsubl
mov
sub
test
or
ret
pop
push
sbb
lret
clc
adc
mov
mov
das
cli
xor
sub
xor
or
stc
in
cmp
mov
jge
ficomps
xor
mov
fs
mov
hlt
and
lahf
dec
push
lock
sub
lcall
mov
mov
adc
jecxz
mov
inc
sub
cmp
loope
or
xchg
cmc
and
cmp
fs
aaa
hlt
cmp
daa
int3
inc
dec
fildl
push
stos
nop
dec
mov
jnp
xor
push
mov
push
aaa
mov
pop
xchg
into
leave
dec
add
add
roll
shlb
enter
jle
sub
outsl
sarb
shrb
cmc
and
adc
dec
jg
fimuls
mov
out
adc
dec
test
jecxz
mov
xor
dec
mov
cmpsl
fdivs
xlat
out
int
and
pop
repz
sti
mov
loope
dec
sub
ds
aad
sub
dec
or
das
mov
or
pop
jne
jbe
adc
mov
mov
je
push
mov
popf
mov
jle
inc
in
rorb
inc
adc
adc
xor
into
dec
nop
mov
shlb
inc
jp
xlat
or
lret
daa
mov
and
sbb
xchg
sub
or
stc
jle
mov
mov
rolb
repz
inc
push
das
xchg
dec
les
jmp
push
or
stos
fwait
push
daa
mov
loopne
jle
rclb
lret
bound
xchg
fst
mov
or
xor
jle
or
lret
popa
pop
xchg
loopne
nop
sbb
out
int
cmp
aam
addb
js
repnz
cmp
push
inc
jg
push
xchg
jl
ficoml
daa
jle
xchg
out
mov
jo
jl
mov
or
jg
pop
sub
xor
call
jp
mov
mov
push
icebp
pop
in
mov
mov
cli
cld
pop
mov
aaa
cmp
dec
adc
aam
jp
outsl
add
mov
cmpl
cmp
jae
xchg
in
pop
imul
push
push
test
and
adc
scas
sub
roll
sub
dec
stos
jl
mov
clc
adc
mov
and
sub
and
dec
mov
push
nop
outsb
pop
push
cmp
jle
mov
sbb
mov
inc
xchg
adc
dec
mov
nop
adc
mov
xchg
cmp
or
lds
inc
notb
add
ret
je
xor
dec
mov
jmp
push
adc
xchg
lods
aas
lods
xor
fmuls
sbb
push
sub
pop
fstpl
iret
xor
cmp
xor
sbb
jbe
enter
jmp
lret
push
and
sub
aas
lcall
enter
movsl
aaa
xchg
je
repnz
roll
inc
pop
or
pop
mov
xor
pushf
gs
test
mov
dec
jmp
mov
rcl
mov
lods
jl
cli
adc
cmpw
or
sbb
movl
and
push
xchg
jno
xor
inc
or
jne
adc
in
cmp
mov
mov
dec
and
push
xlat
mov
int
dec
add
add
fisttpl
clc
mov
inc
repnz
jne
or
and
pushf
mov
sub
jge
ja
push
sub
in
out
and
movb
and
dec
and
inc
ds
xor
repz
inc
mov
or
inc
add
lcall
mov
sbb
pop
or
jae
mov
xor
lret
or
inc
and
xorl
cmp
xor
adc
xchg
xor
ljmp
xchg
cmp
gs
jmp
dec
in
js
push
xchg
int3
pop
xor
test
sub
adc
loop
push
dec
daa
pop
or
pop
fwait
nop
pushf
jecxz
cmpb
int3
add
imul
les
lret
lods
jno
and
sbb
test
xchg
pop
xchg
sub
les
leave
mov
push
scas
mov
mov
or
movsb
mov
movsb
ljmp
cld
sub
sub
xlat
xor
add
in
pop
sbb
sbb
adc
sbb
inc
push
inc
roll
xchg
jno
mov
pusha
inc
ret
mov
iret
outsl
and
dec
push
and
movsb
mov
sbb
xlat
popa
or
fwait
cmpsl
cmpsl
ja
inc
leave
mov
rorl
xchg
clc
mov
xor
sbb
adc
xchg
inc
adc
pop
call
mov
loopne
les
les
shrb
sti
loope
pop
or
jl,pn
mov
adc
pop
cmp
sbb
and
sub
daa
sar
ret
outsl
adc
add
sub
push
mov
pop
fadds
repnz
inc
xchg
adcb
xchg
popf
repnz
xor
dec
in
ret
xchg
dec
shlb
jnp
jb
pop
or
data16
pop
jbe
nop
test
dec
xor
cmpsl
xor
and
ror
dec
adc
outsl
rorl
jmp
ret
adc
dec
adc
lods
ljmp
out
cwtl
je
mov
int
xchg
adc
lcall
in
sub
mov
xor
in
pusha
xor
add
push
push
fsubr
jmp
mov
lahf
pop
mov
add
adc
cwtl
inc
pop
xor
sbbb
and
hlt
js
mov
mov
cmp
adc
jg
int3
pop
jl
cmp
pop
inc
pop
mov
add
xchg
sbb
push
mov
inc
sbb
cwtl
sub
push
mov
pop
cmp
icebp
loop
jb
pop
sub
mov
fldenv
adc
cmp
xor
cwtl
inc
adc
sub
movsb
dec
loope
out
xchg
jno
je
or
and
push
jne
fmull
aam
xor
pop
and
sbb
cmp
xor
cmp
cmpl
jmp
popf
loope
cmpsl
das
test
rolb
sub
cmpb
push
and
mov
sub
ja
cmp
jle
movsl
sbb
cltd
idivl
addl
mov
int
scas
popf
shrl
idivl
stos
xor
xchg
mov
jmp
inc
push
dec
push
inc
cmp
mov
xchg
cli
scas
cmp
mov
inc
pop
pop
cli
imul
pushf
in
sbb
in
aas
adc
icebp
pop
add
xlat
fcoml
push
pop
cmpl
outsb
repnz
nop
mov
mov
fs
inc
inc
repnz
lret
aam
inc
mov
repz
cmp
nop
pusha
jae
fsubp
adc
sbb
mov
and
push
flds
sub
push
push
lock
cmp
popf
xchg
or
movsb
jbe
and
loop
mov
int3
dec
or
fs
addr16
mov
lea
les
xor
movsb
shlb
into
xor
or
movsl
jnp
icebp
lret
pop
add
adc
cvtpi2ps
and
iret
insb
test
and
add
das
push
or
push
out
sbb
pusha
mov
xchg
sahf
test
dec
push
addb
sbb
or
sbb
and
and
sub
xchg
and
nop
xor
sub
xor
xor
cmp
pop
cs
sub
lcall
jle
in
or
mov
out
fs
add
sub
icebp
jno
sbb
cld
les
pushf
mov
decb
sbb
adc
jbe
rcr
xor
leave
lods
adc
adc
jmp
in
adc
sbb
add
in
jns
int3
mov
outsl
adc
cs
and
daa
mov
and
lea
push
sub
ds
inc
imul
jne
jmp
mov
shlb
je
or
loop
hlt
test
jmp
mov
mov
adc
inc
lods
pop
test
jmp
xor
and
leave
mov
dec
fcomps
pusha
sub
jge
inc
pop
test
sub
sbbl
call
dec
jge
stc
pop
out
stc
mov
sbb
cltd
repz
sub
sbb
push
xchg
jl
test
push
jo
pusha
xor
jae
bound
xlat
xchg
insb
xchg
pop
dec
and
pop
push
sub
xor
out
sub
add
cmpl
sub
add
sub
push
out
test
pop
cmp
push
xchg
adc
imul
push
inc
popf
or
nop
test
sbb
and
cmpsl
push
xlat
int
pop
movb
loope
cmp
mov
pop
and
dec
enter
sbb
adc
stc
sti
inc
shrl
pop
hlt
mov
test
sub
push
or
lock
sti
push
orl
adc
sub
push
adc
mov
or
mov
jns
and
or
insb
adc
cmc
es
xor
sub
push
movaps
shlb
mov
xlat
daa
mov
push
or
mov
movups
jp
jp
les
sub
das
jns
jmp
js
rolb
jle
cmp
and
push
or
lret
push
aam
inc
pop
mov
sub
add
loopne
mov
adc
ret
sti
pusha
dec
fidivrs
pop
dec
imul
les
in
and
in
outsb
jle
and
mov
cltd
pop
imul
cs
pop
outsb
aaa
xor
and
test
hlt
lret
pop
les
xchg
test
xchg
cmp
mov
mov
sbb
jae
shll
mov
inc
in
mov
jmp
push
icebp
loopne
jp
aam
mov
xlat
loop
in
loopne
hlt
out
call
dec
js
rolb
clc
mov
mov
or
call
je
out
cltd
ret
inc
sub
jbe
stos
in
test
mov
jle
xchg
popf
gs
inc
xchg
je
icebp
out
dec
scas
cs
sub
add
gs
inc
cs
xorb
ds
jnp
out
or
ljmp
lds
and
sbb
jp
xor
bound
dec
test
and
cli
pop
mull
lret
xor
orl
mov
insl
push
jg
fwait
aas
scas
and
inc
shlb
mov
bound
push
mov
pop
aam
and
jb
aas
adc
movsb
scas
fs
inc
out
aam
repz
xlat
sti
lret
or
les
mov
adc
rolb
scas
test
imul
in
mov
mov
jmp
lahf
and
clc
pop
mov
mov
xlat
lods
jb
sahf
mov
mov
mov
adc
or
mov
mov
and
jbe
das
jge
out
push
clc
push
test
sub
repnz
xchg
cld
cmp
ret
inc
stc
je
cmp
rcll
nop
popf
pop
scas
cs
mov
mov
int
pop
in
pushf
sarl
inc
adc
jmp
lea
dec
mov
and
ljmp
or
mov
popf
gs
xchg
aaa
sub
and
jno
jmp
cmpsl
sbb
jmp
push
shll
dec
push
sarl
xor
sarl
pop
push
xlat
out
test
cmp
and
xor
outsl
jmp
inc
add
sbb
sbb
xchg
add
mov
fistpl
inc
mov
leave
cmpsb
add
rolb
xor
xor
push
movsb
ds
jno
jne
dec
nop
and
outsl
push
adc
sbb
es
lret
mov
push
fwait
cwtl
call
mov
pop
f2xm1
lret
cmc
mov
clc
push
sub
mov
xor
repz
sub
or
xorb
sbb
adc
xchg
daa
gs
pop
ficoms
repz
gs
jno
push
push
mov
shl
mov
adc
pop
pushf
call
sbb
pushf
push
bsf
flds
jg
pop
push
sahf
outsl
dec
inc
push
sbb
inc
and
out
sarb
movsb
cli
bnd
mov
jge
jp
jl
out
divb
adc
or
fcoml
jo
mov
mov
xor
out
jl
inc
adc
mov
dec
xchg
add
and
hlt
dec
mov
xor
test
sub
adc
scas
jo
pop
popf
sub
fadds
jmp
pop
sbb
movsb
adc
ljmp
inc
mov
mov
je
inc
mov
mov
pop
scas
inc
inc
dec
xor
inc
xchg
fld
clc
ds
inc
push
cmp
ljmp
bound
inc
push
mov
jmp
xchg
cmpsl
dec
aaa
add
pop
adc
or
movsl
cmpl
shlb
xchg
outsb
call
sahf
adc
xchg
ret
mov
mov
lock
mov
mov
mov
jg
cmpsl
daa
push
inc
stc
xchg
xchg
mov
mov
xor
enter
call
xchg
mov
pop
lds
dec
cmp
cld
mov
sbb
cmpsl
xor
pusha
fs
dec
push
adc
stc
leave
add
xchg
clc
fcmovbe
cmp
xor
xor
sbb
cmpsb
or
push
in
jb
jnp
dec
imul
push
jo
and
daa
repz
clc
scas
lret
popf
lock
jge
and
add
das
mov
pop
cmpsb
es
pop
xchg
bound
sub
add
inc
adc
stos
cmpsb
dec
lcall
mov
and
inc
xchg
pop
sub
adc
push
or
pop
dec
cmpsl
pop
push
xor
cmp
nop
sbb
or
sbb
popa
lock
push
out
rcll
mov
pop
jecxz
mov
push
cld
inc
repnz
inc
ret
mov
jl
fs
aaa
jb
adc
cmp
lea
xor
cmp
nop
push
adc
in
scas
mov
in
aam
xchg
daa
in
aad
cmp
std
in
fs
mov
movsb
sbb
xorb
andl
dec
call
lds
jbe
shlb
jb
dec
fsubrs
push
adc
mov
mov
dec
jne
adc
mov
pop
aas
sahf
rcl
mov
cmp
sar
add
xchg
in
and
cmp
js
add
insb
adc
or
outsb
xor
pop
mov
fsubrs
sti
test
inc
mov
xchg
xor
clc
or
or
imul
push
scas
iret
es
or
loop
add
loopne
nop
leave
fists
test
dec
cmp
enter
xor
push
ja
sub
inc
stos
and
cmp
cmp
gs
repnz
pop
in
or
mov
sbb
dec
sub
dec
cmp
cwtl
and
mov
pop
xchg
or
jns
inc
mov
mov
push
call
and
daa
ljmp
das
xchg
lods
sub
dec
mov
icebp
mov
cmp
inc
je
add
push
inc
gs
jmp
cmp
push
enter
or
cmp
aam
xchg
je
or
or
push
scas
xchg
xchg
and
das
lahf
inc
push
loope
cvtdq2ps
pop
dec
push
pushf
mov
jp
inc
out
and
cmpw
push
insl
sub
or
cmp
fsubr
mov
or
aas
mov
fildl
inc
fs
test
jge
mov
imul
mov
jnp
and
add
inc
adc
std
cld
sbb
xchg
pop
ficoms
jnp
push
push
pop
cmp
or
flds
imul
lock
mov
cltd
das
imul
sub
les
lock
adc
jl
dec
sarb
in
lea
sub
mov
enter
leave
mov
loope
cmp
push
insb
dec
je
cmpsl
and
roll
imul
pop
and
and
mov
cmp
mov
push
in
rclb
mov
xchg
inc
sub
inc
cmp
js
test
idivb
int
pop
test
cmpsl
and
jge
popf
xor
cmp
notl
or
insl
in
add
adc
nop
sub
testb
cmp
mov
and
test
mov
adc
push
sbb
dec
in
mov
lcall
and
pop
shlb
sub
adc
cmp
and
sub
xor
push
lock
inc
ja
push
jp
test
inc
cmp
fmull
or
sbb
pop
aaa
mov
mov
pop
push
xchg
sbb
test
lret
jbe
lahf
test
scas
je
ljmp
xchg
cltd
push
pushf
fwait
adc
rorb
cmpsl
out
mov
dec
out
mov
mov
je
je
cmpl
adc
push
inc
dec
leave
inc
outsb
fcoml
daa
aad
jge
add
in
dec
sub
mov
jns
mov
sub
mov
mov
or
xchg
xlat
insl
sbb
gs
cmpsl
pop
movsb
dec
jo
fisubs
xor
js
test
pop
mov
fcoml
jecxz
pusha
mov
push
add
mov
jmp
mov
jo
daa
sbbl
mov
movl
shrl
test
and
ds
sub
pop
jne
adc
jmp
pop
or
cmp
icebp
or
xchg
test
pop
xor
push
or
fsubrl
loopne
pop
or
and
inc
adc
jl
leave
cwtl
and
xor
insl
push
cmp
je
test
sbb
add
inc
fwait
mov
test
rorb
add
mov
cmpl
add
ret
scas
or
mov
push
add
pushf
or
and
inc
or
in
js
mov
push
dec
sbb
push
in
mov
ja
mov
test
dec
scas
dec
pushf
jge
pusha
dec
jle
pop
sti
ret
adc
jns
ret
lock
add
lds
imul
bound
add
pop
inc
jo
and
cld
mov
and
or
xor
lcall
pop
sahf
dec
inc
mov
mov
mov
mov
and
int3
mov
sbb
fs
push
xchg
and
mov
add
mov
xor
cmpsb
aaa
repnz
mov
inc
or
lret
je
gs
or
add
cmc
jmp
dec
sub
push
add
mov
dec
pop
or
addl
into
rcrb
sbb
or
fdivl
inc
dec
loop
adc
mov
and
mov
nop
adcl
loopne
sub
lea
pop
push
jge
fs
ljmp
out
or
pushf
fcoms
push
push
daa
add
push
pop
js
subl
fnstenv
iret
dec
rorb
sti
fwait
int3
dec
mov
push
stc
das
into
push
lcall
and
jmp
mov
cmp
add
mov
rol
cltd
cld
push
or
mov
jge
cmc
sub
add
push
jl
adc
mov
inc
sbb
test
pop
and
testl
pop
adc
push
inc
lahf
les
mov
scas
fnsave
test
mov
mov
sub
pop
xor
loop
xchg
adc
cmp
sub
add
sub
dec
in
push
enter
sbb
mov
adc
jle
pop
push
xchg
adc
dec
leave
hlt
adc
push
xlat
pop
mov
addr16
xor
cmc
aaa
aam
mov
mov
push
aaa
mov
push
enter
mov
les
std
nop
ds
mov
ljmp
cmpb
test
jb
cmp
push
mov
imul
pop
sti
sub
in
jne
sub
lods
sbb
ss
das
mov
call
movsb
aas
test
lds
cmp
sub
mov
enter
into
or
ret
xchg
xchg
and
sbb
or
aaa
nop
outsb
cmp
movsl
adc
andl
rolb
cmp
movsb
mov
pop
add
inc
push
fists
or
add
enter
mov
or
inc
sbb
repz
mov
pop
dec
stc
test
inc
scas
and
jbe
push
lahf
cmc
sbb
xchg
push
mov
dec
ljmp
js
rcrb
dec
jmp
pop
fnstenv
mov
lret
jne
inc
push
pop
or
je
sbb
ret
and
push
jmp
call
push
sub
cmp
add
mov
call
call
pop
or
loopne
arpl
pop
sub
inc
faddl
enter
inc
enter
popa
call
fsubrl
dec
mov
xchg
lods
and
jge
fisubs
xchg
jno
jb
les
test
iret
ds
mov
sub
sbb
lock
xlat
xorl
and
add
mov
mov
mov
in
mov
or
imul
test
mov
lea
dec
pushf
dec
test
adc
rolb
enter
mov
add
aam
dec
or
daa
add
fcomps
in
mov
xchg
adc
inc
pop
lock
jl
cmovge
shll
rclb
in
jp
hlt
imul
add
cmp
sub
pop
xchg
push
add
pop
loopne
mov
loopne
push
xchg
or
push
cs
call
dec
cmpb
lea
ds
call
xor
cmp
mov
and
inc
test
mov
es
adc
pop
imul
add
dec
sbb
adc
sbb
sub
or
push
mov
jno
addb
aam
pop
adc
fldcw
fadds
mov
dec
outsl
aam
scas
pop
aad
test
push
pop
cmpsb
xchg
inc
fisubl
mov
shrb
test
pop
fcomps
nop
xchg
push
jge
rorb
pop
sbb
and
jge
pop
or
jg
jo
inc
into
lock
orb
mov
loop
negl
xchg
cld
int3
hlt
mov
stc
ja
adc
inc
push
notl
xchg
movsb
inc
adc
mov
xor
adc
fs
outsl
into
sbb
add
pop
dec
or
out
or
test
mov
inc
cli
and
sbb
cmpl
jno
push
dec
and
aam
push
cmovp
test
packssdw
cmp
push
cmc
shl
xchg
push
pop
dec
cmpsl
sbb
add
popf
mov
push
sahf
xor
ss
mov
push
push
push
pop
and
addr16
rolb
cmp
addr16
imul
dec
jecxz
pop
add
sub
stc
adc
daa
repz
or
in
mov
lcall
aas
test
lods
or
inc
shlb
mov
push
test
add
inc
inc
and
xchg
inc
enter
sub
mov
pop
push
adc
add
pop
or
add
sti
and
ret
push
imull
push
fwait
cmp
jmp
pop
push
icebp
repnz
cmovno
call
rcl
movsb
test
nop
or
adc
mov
xor
push
out
lahf
scas
mov
ret
dec
adc
xchg
dec
outsl
push
out
push
sub
xchg
mov
add
int
jb
inc
mov
push
inc
test
jmp
jl
pop
inc
xor
cld
add
loope
js
push
pop
lcall
stc
or
push
outsb
cmpsb
add
les
js
xchg
and
mov
inc
fs
jns
sbb
sub
shll
dec
mov
and
xchg
imul
aad
mov
jo
push
cmc
push
xchg
push
push
test
push
aad
cmp
sti
push
inc
pop
mov
inc
setae
enter
sub
jnp
inc
cmp
inc
leave
dec
push
ficoml
pushf
clc
sub
adc
xchg
nop
movsl
testl
jmp
js
pop
cmp
pop
push
jo
dec
pop
sbb
mov
in
rcrb
mov
xchg
sbb
push
fisubs
insb
fstl
xchg
push
daa
sar
push
jmp
push
sub
ljmp
push
mov
sub
mov
push
test
add
movsb
or
adcl
adc
cld
popa
in
sbb
test
or
xchg
loope
inc
in
cmp
jecxz
fdivr
iretw
jno
insb
push
jne
imul
pushf
adc
insl
cmp
mov
comiss
dec
in
icebp
cmp
mov
insl
lahf
xor
pop
clc
pop
mov
test
push
fsubrs
lcall
mov
push
pop
cwtl
and
pop
adc
lcall
imull
movsb
xor
sbb
dec
loopne
enter
fwait
es
xchg
pop
xchg
inc
movsb
add
mov
and
mov
repnz
pop
xchg
insb
icebp
test
test
int3
loope
imul
xor
cmp
push
fdiv
dec
xchg
jmp
call
addr16
adc
sub
pop
xlat
sub
xor
in
or
push
lods
dec
mov
std
es
in
jne
inc
jae
decl
dec
test
mov
xlat
xchg
scas
mov
inc
and
nop
cmp
mov
or
push
pushl
mov
rcrb
inc
dec
scas
fimuls
adc
icebp
mov
xchg
fstpt
push
inc
xchg
clc
mov
jg
and
and
dec
dec
inc
dec
mov
clc
imul
mov
ret
shll
loop
mov
sbb
sbb
nop
sahf
test
test
inc
imul
fidivrl
inc
fisttpll
mov
mov
dec
cmp
clc
cmpsb
addr16
imul
xor
or
notl
or
leave
pop
xchg
jl
rorl
mov
xchg
adc
jle
mov
or
xchg
sar
push
mov
and
cmpsl
dec
add
mov
sar
mov
stos
sbb
mov
loop
mov
repz
andl
dec
lahf
push
mov
fildll
xchg
jl
inc
dec
xlat
mov
ret
mov
movsl
inc
fcoms
addr16
js
arpl
enter
inc
add
mov
ret
dec
adc
leave
lods
inc
cmpsb
xor
add
and
es
sub
rorb
and
cs
int3
lcall
lahf
and
cltd
call
aad
pop
adc
loopne
xor
cltd
or
sbb
mov
pop
or
je
push
insb
in
xor
mov
rolb
push
or
inc
cmp
add
sub
sbb
loope
stc
stos
mov
adc
pusha
sbb
test
out
cmp
out
in
roll
loope
insb
and
add
xchg
push
add
loope
call
or
into
sub
nop
testl
adc
es
pop
daa
jnp
mov
adc
sahf
adc
dec
dec
in
add
inc
jg
inc
lods
pop
mov
or
mov
stos
icebp
sbb
mov
or
divb
xchg
pusha
in
mov
dec
aas
pop
lret
dec
and
xor
repz
push
in
push
push
dec
fs
or
inc
push
or
mov
xlat
adc
clc
cmp
lock
jecxz
push
jle
cmpl
or
orb
adc
rorb
mov
cmpb
mov
or
xor
test
xchg
out
dec
popf
hlt
xchg
mov
cmpsb
std
cs
jge
or
lret
or
push
adc
notl
mov
cmp
xchg
popa
lods
leave
jp
push
xchg
outsb
mov
adc
lea
xor
mov
and
neg
push
push
jp
sub
cmp
adc
mov
fnstsw
std
gs
push
mov
jmp
out
jbe
scas
dec
dec
je
movsl
leave
add
mov
sub
es
mov
pop
push
cld
aad
mov
repnz
loope
movsl
sbb
fdivr
dec
stc
outsl
jmp
neg
xor
inc
jp
push
mov
inc
shlb
flds
mov
sbb
int3
jb
out
loop
arpl
and
in
mov
xchg
push
xchg
fs
add
cmc
cmp
jge
cmc
roll
repnz
test
and
pop
pop
push
inc
dec
rclb
or
dec
adc
pmuludq
aam
notl
cmp
cmovnp
jmp
and
xchg
rcrb
cmc
inc
or
or
or
stos
rclb
dec
or
mov
adc
inc
dec
push
inc
adc
push
push
leave
jne
push
lds
mov
jge
sub
cmp
jecxz
pop
rol
dec
pop
or
sub
push
imul
jo
or
test
in
dec
aam
mov
pushf
and
or
ror
aam
fcoms
pop
or
mov
add
je
jmp
test
or
sub
adc
sbb
out
fnstsw
adc
jmp
pop
movl
xchg
adc
or
push
cwtl
les
test
out
inc
or
jmp
xor
mov
leave
and
adc
fldcw
push
cld
jno
jmp
pop
pushf
adc
add
mov
aam
jmp
inc
mov
je
cmp
mov
aam
aas
orb
sub
mov
or
imul
jg
push
leave
jle
adc
dec
inc
je
cmp
mov
lret
add
or
sub
adc
push
sbb
push
lcall
lods
lret
dec
dec
test
iret
into
iret
mov
sub
mov
es
mov
inc
or
dec
or
mov
xlat
dec
cmpsb
dec
or
mov
cld
lret
xchg
pop
mov
adc
or
ja
xor
mov
mov
pop
cwtl
jne
dec
insb
aaa
stos
ss
nop
xchg
mov
ja
mov
xor
xchg
loop
ret
test
mov
xchg
lea
inc
sub
rcrb
repnz
adc
add
std
cs
stos
add
les
cld
cmp
mov
cld
mov
push
dec
xor
push
das
es
push
push
mov
push
gs
lret
mov
pop
xchg
push
arpl
cmp
aam
ficompl
fmull
adc
mov
xchg
add
scas
je
cmp
mov
int
sub
sbb
aas
jno
je
aaa
adc
push
sub
pop
test
dec
lods
sbb
lret
lods
jl
mov
mov
in
push
andl
mov
sub
out
repz
ret
adc
mov
clc
lea
pop
mov
test
sub
pop
ljmp
je
sub
test
in
je
and
push
or
lods
jns
es
mov
ja
adc
dec
lahf
dec
pop
adc
mov
xlat
aam
stos
lods
loopne
in
cltd
mov
pusha
fs
pop
inc
or
leave
cmp
ret
mov
push
adc
shlb
xchg
inc
push
mov
push
pop
das
es
jo
or
lods
jmp
push
xchg
shlb
mov
cld
lcall
mov
mov
sahf
jp
in
enter
outsb
in
push
std
jle
jl
jae
and
sti
inc
adc
push
insb
cli
pop
mov
addb
mov
mov
nop
in
mov
and
hlt
push
dec
subb
lea
push
push
dec
in
sbb
dec
mov
adc
mov
leave
cltd
sub
daa
xor
push
cmpsl
mov
cmpb
adc
das
or
push
in
sub
ds
add
and
scas
mov
and
mov
addr16
pop
fwait
mov
pop
test
mov
inc
shl
scas
je
sub
and
test
or
jb
sbb
mov
mov
adc
sub
mov
jae
push
mov
mov
mov
data16
es
sbb
dec
sub
adc
and
cmp
cmp
sub
sbb
or
into
cli
insl
dec
pop
xor
cmp
enter
fmul
lahf
push
pop
push
inc
mov
js
mov
ja
or
inc
sbb
fldcw
loopne
lods
xor
outsb
sti
popf
insb
xchg
pop
adc
mov
pop
notb
stc
out
xchg
ss
jns
adc
and
insb
or
xor
xchg
test
test
adc
jmp
push
jae
cmp
std
sbb
sub
mov
cmp
add
push
dec
push
cltd
jg
mov
lock
xchg
mov
mov
imul
out
mov
inc
shlb
add
mov
or
cmpb
dec
mov
and
mov
fists
sub
mov
add
subl
inc
cmp
sub
and
das
lock
shlb
xlat
push
out
lret
test
or
mov
xor
sbb
stos
pusha
test
and
frstor
and
sbb
movsb
sti
mov
hlt
xchg
pop
adc
repz
dec
jecxz
mov
mov
test
add
lea
adc
mov
test
push
in
xlat
stos
xchg
push
sbb
mov
fstpl
push
insb
adc
mov
hlt
rcr
push
aad
sub
in
jns
rcrb
inc
xor
or
pop
test
mov
sbb
sub
hlt
sub
adc
hlt
jmp
mov
shlb
mov
mov
mov
adc
or
rclb
iret
je
loop
jle
push
cli
xor
jp
cmp
aas
jb
call
jg
mov
sbb
add
push
pushf
cli
jno
cli
xor
bound
addr16
xchg
inc
sbb
xchg
insl
outsb
xchg
jle
sub
std
or
sbb
pop
cmp
jno
fs
sbb
sti
push
imul
pop
js
or
and
fs
or
cmpsb
xchg
mov
jmp
sub
mov
or
test
or
lahf
std
pop
nop
imul
fildll
and
mov
mov
popf
sti
adc
xor
pusha
clc
movsb
xchg
sbb
push
and
xor
fldl
sbb
adc
inc
dec
jne
in
lods
outsl
fsub
enter
jl
xorl
pop
cmp
movsl
sub
push
fwait
and
xchg
cld
das
cmp
sub
pop
push
push
mov
das
dec
cmp
sub
pusha
insb
or
dec
lret
pop
sbb
push
adc
and
mov
es
or
dec
lea
push
sbb
mov
cmp
and
cmpsb
mov
loope
jne
mov
pushf
lmsw
mov
push
push
pop
adc
push
mov
sub
pop
xlat
dec
adc
test
jmp
sbb
push
push
xchg
push
push
push
sarl
jecxz
outsb
jecxz
mov
xchg
mov
mov
in
sub
xor
add
and
mov
fstp
movsl
push
loopne
pop
cli
jle
subb
je
mov
das
je
mov
jo
nop
jbe
mov
mov
aaa
adc
pop
outsl
out
rolb
jmp
jg
pop
xchg
adc
push
cld
jbe
sbb
xchg
pop
dec
lods
jp
xor
rcr
je
pop
fadds
mov
out
adc
movsl
mov
mov
test
pop
mov
loopne
jmp
das
rorl
inc
or
xchg
shl
push
xchg
ret
test
pop
ret
fistpll
push
push
insb
push
xor
mov
pop
jge
push
lahf
hlt
fxch
sub
ds
cmp
inc
lods
sub
loope
cltd
sub
enter
sub
pop
mov
push
xchg
pop
sub
or
mov
leave
ds
sbb
xchg
xchg
xorb
mov
sahf
clc
je
mov
mov
mov
notb
or
jg
jo
mov
pop
xchg
scas
in
cld
inc
ss
jecxz
and
jns
adc
test
hlt
test
mov
fistpl
in
sbb
out
xchg
xor
fs
out
pop
test
push
add
fadds
jmp
cmc
std
pop
mov
jg
pop
mov
test
and
sub
adc
sub
fs
mov
ret
and
cmp
mov
mov
and
rclb
shr
push
lret
int3
aam
xor
enter
sbb
pop
dec
mov
adc
mov
mov
inc
test
mov
and
dec
leave
je
adc
xchg
mov
and
push
push
loopne
cld
std
adc
mov
test
int
adc
mov
mov
mov
xchg
push
sahf
enter
xchg
iret
std
lds
mov
push
push
jnp
lods
scas
lcall
sub
cmpb
mov
dec
push
add
fadds
and
call
ja
fcoms
dec
lods
jbe
stos
mov
dec
lods
js
jecxz,pn
scas
leave
in
adc
pop
or
inc
in
push
cmpsb
and
and
push
or
and
inc
pop
mov
sub
or
in
out
loope
cmp
inc
je
and
and
pop
jp
push
sub
add
dec
ljmp
pop
cmp
fwait
pop
test
xor
and
outsl
push
jbe
pop
and
lret
in
jb
inc
fadds
mov
lahf
movsl
xchg
sbb
iret
fdivrs
inc
sbb
and
mov
jno
dec
jne
mov
dec
shr
pop
dec
or
aaa
pop
jbe
mov
or
or
sub
fldt
mov
sub
inc
pop
cmp
les
mov
pop
mov
loope
jge
loopne
cs
pop
mov
jmp
or
push
rclb
mov
sbb
scas
adc
jle
hlt
stc
and
cs
in
lods
sbb
push
xchg
sub
lods
sub
sbb
jl
jle
jmp
out
and
in
and
sarb
int3
jge
mov
inc
movsb
sub
inc
mov
cmp
cmpsl
push
sub
jae
loope
cmc
sbb
stc
lret
sbb
testl
notl
xchg
shl
out
and
push
push
push
cmp
inc
dec
subl
enter
leave
adc
mov
jp
addr16
mov
imul
push
outsl
stc
in
repz
loop,pt
xchg
cmp
repz
push
push
mov
lods
movsl
imul
ja
pusha
daa
xlat
insl
push
and
loopne
inc
push
xchg
lea
mov
jp
inc
jmp
xlat
mov
out
push
and
lcall
cld
inc
stc
rorb
adc
sbb
jl
rolb
inc
or
pushf
xchg
fisttpl
clc
leave
add
mov
dec
and
cmpsb
add
mov
mov
cmp
jno
fbstp
dec
push
pop
and
lea
push
je
and
icebp
jmp
sbb
lret
and
xor
add
outsl
addb
aad
push
cmp
rolb
xor
push
mov
enter
dec
xor
mov
sbb
dec
stos
xor
and
mov
shld
mov
sbb
popa
jle
scas
dec
pushf
in
sub
inc
dec
xor
xor
adc
dec
lock
call
fcoms
jle
adc
push
lea
mov
jne
aam
sub
int
dec
pusha
dec
mov
lock
hlt
sub
sub
int
pop
bound
sbb
xor
stc
pop
xchg
jne
adc
mov
cpuid
movsb
adc
loop
xor
push
pop
xor
push
sub
mov
je
fcoml
xchg
xchg
stos
push
sub
popf
enter
push
cwtl
mov
ret
inc
push
pop
cmp
xlat
jmp
adc
xchg
faddl
arpl
ret
js
andl
js
or
adc
jmp
sub
fmull
mov
jge
lods
xchg
jo
fcomp
xchg
and
lret
pop
stos
mov
add
push
das
xor
or
inc
fsubrs
cmp
and
adc
sub
xchg
insb
xchg
mov
push
jmp
mov
xchg
jno
xchg
js
xchg
imul
and
cmpl
leave
sti
je
xchg
int3
push
in
test
jmp
sub
mov
outsl
mov
and
pop
sub
jb
xchg
arpl
lods
mov
xor
jbe
sub
mov
scas
mov
jge
les
psubd
or
lods
sti
je
cld
stos
cmpsb
inc
in
dec
iret
inc
or
cld
adc
aaa
in
aas
ret
xchg
sbb
adc
idivl
and
or
or
adc
and
inc
or
or
cmp
pushl
and
mov
or
push
sbb
ss
jbe
lock
pop
xchg
add
pop
mov
jb
shll
dec
sbb
cmp
pop
loope
cmp
lret
std
inc
fs
ret
sub
and
imul
scas
test
sub
lods
out
jle
mov
dec
pop
test
or
mov
mov
push
jle
in
stc
in
mov
insb
mov
test
add
pop
ret
mov
dec
ucomiss
mov
jno
lea
add
ret
cld
cmp
push
dec
aas
and
jo
push
or
mov
mov
bnd
in
je
popa
popf
aas
aam
call
dec
xor
inc
addr16
jno
push
pop
inc
mov
inc
pop
mov
cmp
and
daa
notl
push
sti
int3
xor
and
divl
adc
daa
rcrl
pop
mov
andb
dec
pop
movsb
inc
orb
orl
sub
mov
xchg
stc
daa
sbb
add
mov
pop
cwtl
sub
pop
mov
sub
ss
xor
adc
mov
fists
sbbb
push
mov
cmp
out
dec
fcoml
orb
in
push
out
in
mov
mov
fs
fisttpll
adc
mov
adc
xchg
pop
daa
cmp
jle
push
push
pop
aam
ret
jns
lret
sbb
test
mov
orb
and
pop
mov
push
addr16
std
filds
mov
jl
add
mov
mov
or
into
xorb
shlb
adc
ror
rcl
adc
pop
xchg
pop
inc
mov
xor
pop
sbb
icebp
sar
lret
in
mov
xchg
pop
mov
std
lods
pop
aam
test
add
rclb
rcrb
rclb
out
cmp
push
jne
jmp
insb
or
sbb
add
sti
lahf
fisubs
xor
cmp
mov
mov
and
inc
sahf
filds
repnz
ja
loope
push
lods
test
and
adc
and
cwtl
xlat
xlat
inc
jmp
inc
mov
lock
xchg
mov
loop
sbb
xor
hlt
jb
mov
les
sbb
xor
sub
sub
sbb
roll
test
and
sbb
sbb
jnp
test
pop
mov
xor
mov
loope
mov
sbb
pop
lret
cmovnp
fisttpl
je
adc
scas
mov
je
ja
mov
push
adc
in
or
test
sbb
sbb
sbb
pop
inc
movsb
sub
cltd
dec
fistps
nop
imul
mov
sub
jecxz
fists
push
sub
fcompl
ficoml
cmpl
sub
xchg
cmp
fisubl
pop
push
xor
shlb
cmovp
mov
loop
cmc
insb
and
cmp
cmp
dec
adc
push
aam
pop
mov
adc
testl
rcr
in
jmp
inc
in
or
dec
das
xchg
lock
addr16
lret
jns
fcmovbe
and
mov
jl
sbb
daa
jnp
jbe
lret
out
inc
loopne
hlt
int3
pop
das
inc
dec
inc
lock
pop
sub
stos
repnz
mov
clc
loopne
inc
loopne
and
mov
jae
mov
mov
lret
lods
ret
fdivrl
jmp
cltd
std
inc
pop
mov
int
add
and
and
and
in
push
pop
and
sub
adc
int3
pop
cld
nop
mov
mov
nop
scas
pop
movb
mov
add
xor
test
lods
jno
dec
xchg
loop
fbld
jmp
movsb
std
into
movsb
mov
pop
js
fadds
sub
in
out
dec
mov
js
mov
jg
sub
daa
cld
cmp
sbb
xchg
jmp
inc
dec
jge
sub
addr16
add
mov
push
or
add
sub
xchg
addr16
and
adc
inc
cmp
jne
inc
inc
mov
enter
push
pop
push
dec
aad
sub
jnp
inc
mov
sti
sbb
push
lock
or
adc
and
jmp
and
xchg
out
fcoms
fistps
outsb
cmp
sbb
xchg
dec
push
test
jle
jge
sub
mov
das
pop
inc
add
es
xchg
js
cwtl
in
xchg
add
or
push
or
adc
orl
repz
aas
fdivrl
and
ret
pusha
scas
adc
xchg
loop
test
fnsave
sbb
loop
stc
lods
pop
push
push
fs
mov
xor
pusha
xchg
push
arpl
pop
add
jp
nop
adc
mov
test
jle
and
xchg
sub
adc
mov
sbb
push
fwait
push
adc
push
cwtl
lods
lock
sbb
push
call
js
orl
pushf
jno
scas
das
pop
cmp
decl
ret
ds
cmp
test
mov
nop
xor
sub
sub
inc
mov
sub
and
stos
push
xor
mov
jp
jle
mov
push
bnd
xchg
inc
daa
test
xlat
jns
gs
fs
mov
inc
push
mov
pop
mov
inc
mov
mov
repnz
and
or
xchg
add
push
xchg
xchg
push
push
jmp
mov
push
popf
leave
fs
lea
jae
inc
rol
inc
cmp
xchg
xlat
jb
outsl
ds
and
nop
sub
mov
mov
and
out
push
repnz
and
mov
test
xor
je
xchg
xchg
ljmp
sub
scas
and
and
fadds
fcompl
stos
dec
dec
add
in
rclb
and
adc
sbb
mov
in
dec
addps
dec
mov
in
je
sub
enter
inc
adc
adc
dec
add
or
or
mov
xchg
mov
adc
mov
bound
je
push
jae
xchg
cmpb
jb
stc
dec
jo
popf
stc
or
out
iret
fcoms
add
pop
adc
jne
movsl
and
pusha
rorl
xorl
test
mov
sbb
inc
xchg
repz
sbb
in
enter
ds
mov
popl
js
pop
pop
sbb
nop
in
sub
ja
adc
mov
pop
sbb
les
and
and
data16
mov
shlb
adcb
sbb
flds
ficoml
inc
movsl
sub
dec
cmp
adc
gs
xchg
bnd
push
je
subl
jle
xchg
mov
xchg
fstpl
pop
xor
xchg
popf
inc
adc
push
add
ja
jae
jae
daa
lret
jo
and
add
lods
mov
add
daa
loopne
mov
ljmp
pop
daa
in
and
add
or
inc
test
add
and
je
fdivrl
ds
push
push
mov
repz
push
adc
cmpsb
pop
inc
push
and
addr16
icebp
push
fildl
enter
sub
cwtl
xchg
add
inc
test
adc
inc
mov
out
fdivrl
pop
and
pop
xchg
sbb
adc
fsubs
sub
ds
xor
inc
in
xor
xor
pop
and
and
mov
cld
xchg
push
inc
mov
insb
daa
cmp
sbb
jo
lret
xorb
out
nop
jne
xchg
add
and
and
mov
add
add
xor
mov
shr
gs
test
sbb
xchg
dec
xchg
and
in
fs
cmpsb
in
or
pop
push
sbb
lret
sub
inc
outsb
inc
cmp
jg
mov
sub
scas
cmp
mov
stos
popa
aam
fcomip
mov
outsb
mov
adc
idiv
jecxz
mov
rolb
push
fmuls
sub
inc
or
add
mov
ljmp
push
pop
adc
les
or
aaa
pushf
add
and
or
push
sub
mov
adc
add
les
mov
out
cmp
test
sub
mov
pop
push
enter
sti
cltd
cmc
movsl
sbb
jnp
dec
scas
cmp
dec
push
xchg
int3
cld
movsb
daa
ljmp
mov
mov
inc
int
adc
sbb
cmpb
aad
incb
adc
adc
inc
cwtl
xchg
xor
test
lea
mov
xchg
lods
shl
cmp
sbb
call
lea
loope
mov
jae
and
orb
xor
xor
inc
call
dec
mov
add
xchg
inc
jecxz
nop
repz
xor
adc
add
add
and
test
insb
mov
xchg
push
icebp
adc
bound
pop
insb
mov
push
pop
sbb
inc
data16
cld
mov
std
insl
setbe
std
out
or
mov
mov
sbb
test
std
dec
fldt
fiaddl
out
div
xor
shr
neg
lret
mov
aas
push
into
sahf
xchg
push
in
loope
cmp
push
dec
jbe
mov
dec
mov
test
ret
add
cmp
outsb
mov
ret
mov
lret
pop
adc
and
inc
and
sub
push
adc
and
in
add
xorb
sbb
shrb
jl
pop
sbb
pop
mov
cmp
pop
loop
mov
or
ret
cmpsl
roll
rclb
call
pop
popl
jns
xor
ja
gs
adc
mov
mov
scas
ret
cmp
movsl
or
sub
fwait
pop
xor
lcall
movsb
dec
inc
cld
push
sub
mov
mov
push
adc
adc
xchg
push
dec
sbb
adc
and
cmp
sbb
mov
imul
add
dec
xchg
pop
aam
mov
and
mov
enter
cmpl
js
lcall
add
dec
sbb
mov
and
jo
add
adc
fsub
push
adc
xchg
cmp
jne
and
movsl
adc
push
sbb
lds
cmp
pop
push
or
movsb
and
xor
mov
jmp
mov
jl
jl
inc
adc
call
sbb
fwait
lret
mov
das
mov
rolb
movhps
sub
popa
mov
lcall
inc
jg
dec
push
dec
scas
int
push
shr
sahf
lods
dec
mov
je
and
movsb
sub
pusha
push
dec
cli
out
or
adc
sbb
adc
sub
add
add
mov
not
and
loopne
and
mov
jle
stos
xchg
and
out
sti
ret
or
adc
dec
insb
sbb
outsb
cld
push
lock
lods
addr16
jnp
push
sbb
into
aad
jle
sub
jl
dec
lock
cli
sbb
cli
stos
and
sub
mov
mov
test
stos
subb
inc
test
xchg
stos
dec
xchg
adc
rcrl
cltd
adc
mov
scas
or
lods
lock
mov
ret
sub
test
or
fimull
xchg
sub
jns
push
repnz
ss
loope
adc
jnp
out
je
mov
dec
orb
and
sbb
mov
dec
jl
jnp
movsb
aaa
and
mov
cmp
and
in
cmp
add
gs
jb
xchg
scas
adc
xchg
out
ljmp
enter
jmp
leave
jle
inc
mov
cmp
lock
clc
or
popf
mov
enter
mov
add
mov
clc
test
scas
mov
js
mov
mov
mov
lock
inc
sbb
xchg
sbb
imul
adc
add
mov
in
adc
out
mov
jle
je
sbb
adc
add
enter
adcb
jns
int
dec
nop
leave
sbb
pop
gs
inc
lock
xacquire
sub
mov
push
je
int3
cmpsl
fdivl
sub
dec
adc
sub
cmp
mov
in
out
movsl
xchg
push
imul
bound
iret
sbb
push
inc
loop
stos
loop
add
push
clc
testb
mov
adc
add
loop
inc
stos
and
inc
cs
push
fstl
sub
pop
in
or
xchg
es
daa
pop
push
jno
ror
inc
mov
dec
loop
out
adc
pop
scas
mov
jg
call
pop
ficoms
das
bound
lds
aad
add
sub
nop
outsb
je
push
mov
sub
xchg
movsb
or
outsb
adc
in
push
mov
pop
mov
cmp
jge
out
cwtl
fistpll
insb
cmpsb
mov
gs
jae
jmp
cmpsb
inc
inc
cmp
jle
nop
inc
enter
and
jbe
sub
add
and
push
or
call
sbb
push
es
adc
or
jmp
xchg
push
cmp
push
rclb
scas
js
sub
iret
sub
mov
xlat
out
dec
mov
imul
add
sbb
xchg
or
cmpsb
ds
jae
test
or
jmp
nop
and
enter
loope
push
or
mov
cmp
mov
loop
test
inc
lds
jle
daa
cmp
pop
xchg
inc
cmp
push
lret
pop
cli
gs
faddl
gs
xor
sub
jge
mov
scas
jbe
add
aas
lret
adc
icebp
jge
or
repnz
mov
lea
sbb
hlt
xor
pop
and
std
sbb
xchg
sub
repnz
ljmp
filds
fidivrs
push
sub
lds
push
ss
pop
orl
add
stc
sar
jg
and
fnstcw
inc
lock
jmp
xchg
push
rcll
push
adc
sbb
xchg
outsb
loopne
scas
cld
jl
icebp
mov
insb
inc
fisttpl
cmp
int3
pushl
imul
push
aam
rolb
mov
out
mov
push
out
or
mov
xlat
loop
pop
insb
cmp
or
sub
mov
xchg
push
add
add
push
mov
fdivrs
mov
jns
inc
mov
in
mov
jnp
das
inc
faddp
dec
ret
ds
daa
push
and
and
inc
adc
pushfw
or
xchg
imul
lcall
add
push
sbb
inc
push
aam
or
xchg
dec
jnp
je
js
jmp
dec
lods
mov
dec
out
push
rcrb
push
pop
stos
jl
test
xchg
fistl
repz
xchg
and
test
and
sbb
stos
sub
adc
mov
sub
inc
mov
sbb
or
mov
jmp
fcomps
jecxz
sahf
sub
sbb
cli
jb
push
in
cmp
xchg
xchg
xchg
fisubrl
jo
xchg
js
inc
jne
lea
ror
jnp
push
xchg
mov
sub
sub
sub
nop
hlt
hlt
stos
loop
jae
test
test
mov
decb
jbe
and
not
stc
mov
cld
mov
mov
mov
fnsave
cmc
sub
dec
mov
fmull
mov
jne
cmp
repnz
add
push
lret
outsb
pop
dec
rcrb
or
sub
and
push
push
push
push
mov
inc
loopne
fnstenv
pop
data16
cmp
xchg
xchg
xchg
inc
jmp
and
std
cltd
dec
push
cmpsl
jbe
adc
fs
out
imul
dec
xor
mov
jl
or
or
ficoml
add
mov
and
fwait
push
jge
push
inc
sbb
mov
xchg
bound
xchg
loop
or
and
inc
add
dec
lock
xchg
cld
lret
sbb
adc
lcall
sbbl
cld
mov
dec
dec
scas
jb
adc
inc
add
cmpb
pusha
push
sbbb
das
cmp
and
js
pop
mov
adc
lods
testb
pushf
test
mov
xchg
mov
jmp
lods
je
xor
lods
cli
push
aam
jno
dec
and
js
test
and
push
mov
lea
mov
jg
into
inc
sbb
adc
jae
inc
or
leave
fs
mov
inc
pop
cli
or
icebp
mov
dec
or
cmp
cmp
cmp
lcall
bound
and
iret
shrb
adc
adc
arpl
add
jmp
add
sbb
and
ret
je
enter
insb
fs
xor
lds
pop
xchg
ret
repnz
adc
jns
jmp
jo
lahf
bnd
adc
sub
fimull
lahf
rcll
or
or
sahf
xor
dec
sub
xchg
pop
imul
arpl
stos
sub
data16
je
pop
icebp
jle
push
xchg
push
sbb
sub
cmp
sub
add
push
or
mov
mov
cltd
add
cld
rolb
popf
outsb
in
fs
adc
adc
cld
pop
mov
daa
enter
hlt
loopne
loope
dec
or
lock
scas
jo
add
je
mov
dec
sub
sub
adc
and
hlt
xchg
adc
adc
or
sub
push
xchg
mov
cmc
ljmp
not
and
push
mov
jmp
push
punpckhdq
or
sub
xor
in
or
jne
adc
or
test
push
cwtl
xor
in
push
dec
stos
xor
jo
push
fisttpl
and
adc
cmp
je
add
jne
inc
das
ja
out
mov
and
das
out
pop
mov
jmp
adc
and
in
sbb
faddl
in
imul
xchg
inc
mov
adc
sbb
mov
sbbb
cmp
movsb
cli
sbb
inc
ja
out
bound
add
or
add
or
mov
nop
add
push
and
popf
cmp
mov
xchg
inc
out
scas
in
dec
test
sbb
in
sbb
jge
xor
add
aad
jmp
push
push
data16
pusha
add
mov
lock
test
adc
mov
mov
out
push
clc
call
daa
aam
jmp
lea
sbb
xchg
fldt
sbb
sub
ljmp
ret
push
xchg
xorl
test
iret
or
in
adc
in
js
xor
cmp
aam
scas
mov
or
aam
test
jo
test
ljmp
push
in
or
dec
sahf
sbb
push
jmp
pop
xor
xchg
or
inc
int3
popa
adc
fmuls
movsl
xor
or
insb
dec
rcrb
aam
jnp
mov
enter
adc
insb
in
push
sbb
inc
hlt
inc
cli
push
loope
fs
imul
push
rclb
push
adc
jo
jae
int3
jae
int3
jae
int3
jae
int3
jb
fstl
adc
nop
xchg
mov
les
and
lock
ljmp
hlt
mov
fwait
clc
sub
test
cli
mov
or
fs
or
inc
xchg
mov
enter
or
mov
dec
mov
movsb
xchg
or
jne
mov
lods
clc
mov
pop
xchg
clc
and
in
daa
or
test
pusha
jmp
mov
sar
fld
push
out
jmp
out
adc
pop
ja
inc
add
cmp
inc
rcll
inc
add
repnz
mov
push
push
addr16
or
adc
or
call
andl
jo
je
gs
je
inc
ja
dec
add
popl
call
sbb
xor
cmp
inc
add
or
cmp
mov
push
and
jge
je
add
nop
lahf
notb
push
jg
test
imul
insl
dec
and
xchg
ret
sbb
inc
xchg
cltd
sbbl
mov
jecxz
dec
addb
mov
je
sub
mulb
or
xchg
cwtl
in
and
dec
xor
push
sub
sbb
adc
push
jmp
dec
xchg
int
xor
or
pop
dec
add
xor
cltd
pop
call
push
mov
sarb
ret
xorl
jne
jp
adc
fisubl
int3
cmp
cmp
movsb
adc
adc
cmp
mov
out
add
mov
lds
mov
incb
add
or
sub
sbb
add
adc
cmp
inc
jne
ss
mov
or
cltd
hlt
in
mov
test
add
sbb
pop
or
push
repz
and
xchg
les
add
test
nopl
pop
shl
mov
js
les
inc
push
mov
mov
jle
cmp
jg
das
mov
push
popf
fs
cltd
cmp
or
rcr
pop
pop
jae
jmp
xchg
or
dec
fsts
inc
push
rolb
mov
dec
insb
xor
pop
inc
cmp
push
xchg
mov
mull
pxor
mov
stos
or
in
int3
lahf
mov
les
pop
inc
lret
enter
sbb
dec
jle
fidivrl
cltd
pop
sbb
ret
xchg
fs
sub
jmp
lcall
jns
push
movl
cmovb
adc
push
pusha
jmp
cmpsl
icebp
xchg
sbb
lock
mov
add
ljmp
sub
sub
or
and
nop
jl
mov
pop
lods
add
xchg
mov
pop
cld
pop
fadds
jmp
add
arpl
cmp
add
pop
lea
or
xchg
adc
clc
jmp
push
jo
push
push
push
in
jl
test
sbbb
pushf
dec
pop
mov
and
mov
sub
fcmovb
jnp
pcmpgtb
mov
cmp
xchg
mov
pop
and
scas
fucomip
rorb
jae
push
enter
lods
in
mov
push
daa
push
pop
out
sub
aad
mov
es
mov
push
pop
xchg
mov
xchg
out
repnz
pop
fsubs
mov
sbb
aaa
mov
dec
test
rolb
mov
cwtl
inc
add
ret
push
push
push
lea
les
sbb
repz
repz
repz
repz
repz
repz
repz
test
cwtl
shll
sbb
repz
repz
repz
adc
les
sub
mov
sbb
repz
jns
stos
inc
je
cmc
or
popa
out
push
add
cmp
adc
cltd
cmp
sbb
orl
and
clc
les
jmp
clc
cmc
pop
mov
mov
repz
adc
sahf
mov
lods
jecxz
push
test
adc
test
cmp
sbb
mov
mov
dec
add
xlat
ret
mov
dec
lods
or
jno
jb
mov
mov
shll
xchg
mov
dec
sub
dec
scas
ficoml
pop
data16
popa
mov
rcrb
xchg
shrl
cwtl
cmp
inc
cmp
jg
out
ss
add
mov
sbb
pop
adc
jnp
xorl
sub
sub
or
leave
scas
push
or
test
std
xor
int3
subl
add
xchg
in
add
in
das
and
dec
pop
scas
pop
xchg
ret
pop
icebp
nop
in
xor
dec
push
stc
or
mov
inc
ret
fmuls
inc
hlt
xchg
in
dec
jecxz
dec
sbb
and
add
out
mov
cmp
and
fs
int3
add
dec
inc
mov
test
aam
jno
push
xchg
mov
mov
dec
sbb
adc
js
rcrl
enter
lea
cmpb
xchg
shr
xchg
xchg
jl
sbb
jns
repnz
sub
addl
adc
loopne
fcompl
sub
sbb
sub
mov
inc
aad
leave
int
fcoms
mov
sti
push
dec
pop
mov
and
out
cmp
mov
pop
cmpsl
push
adc
add
sbb
adc
inc
sbb
and
push
imul
sub
adc
push
movsb
inc
mov
stc
and
aam
jb
orl
or
dec
lret
sbb
jbe
addr16
pop
out
dec
mov
mov
out
push
pop
cmpl
sbb
lcall
mov
mov
aam
lret
inc
fsubrl
gs
xchg
xor
inc
xor
push
xor
cmp
lods
lret
jle
dec
xor
cmc
inc
dec
mov
inc
or
enter
or
jmp
cli
or
cmp
imul
or
xor
jmp
scas
int
fsubrl
mov
add
add
jge
sti
push
loopne
dec
out
pop
lret
or
sub
pushf
xchg
push
stos
imul
pop
pop
push
faddl
cmp
push
stos
call
loopne
pop
push
pushf
xchg
jno
jg
sub
rclb
fcom
sti
mov
enter
cwtl
pop
sub
xchg
lock
cmpsl
cmp
jmp
sub
icebp
jmp
mov
push
dec
inc
cwtl
mov
cmp
ja
clc
or
adcl
and
pop
pusha
push
push
mov
cmpsl
cld
jl
je
enter
pop
xchg
mov
or
shlb
inc
adc
cs
ss
mov
in
push
adc
iret
pop
dec
mov
test
std
repnz
mov
push
test
popa
repnz
cld
gs
out
xor
aam
dec
xchg
dec
add
and
jne
lods
add
cmp
lret
mov
mov
push
dec
adc
lea
adc
push
out
mov
adc
data16
das
test
mov
les
clc
imul
orb
subb
ds
test
and
add
mov
inc
inc
jle
int3
ljmp
lahf
sarb
push
hlt
cmp
pop
sbb
pop
push
mov
sarb
sbb
push
stos
push
adc
add
cmp
negl
mov
test
mov
sub
xlat
and
les
jle
loope
mov
movsb
lahf
js
mov
data16
fst
xchg
xchg
shr
loop
enter
push
mov
enter
xlat
and
pop
pushl
adc
lret
into
mov
int3
jbe
xchg
in
rorb
rclb
lock
add
cmc
sub
xchg
aad
and
fsubs
test
push
test
enter
push
xor
cmp
and
mov
pop
in
mov
nop
int3
xor
into
push
aaa
push
pusha
out
jnp
dec
mov
into
jno
lods
stc
mov
dec
inc
jg
cmp
fbld
mov
dec
nop
shrb
cltd
and
cmp
sub
cmp
mov
mov
push
inc
sbb
js
sbb
and
sub
mov
data16
push
clc
movsl
lret
and
ret
adc
ljmp
add
and
adc
sbb
adc
push
sbb
daa
cmp
cltd
in
gs
addr16
inc
push
sbb
sub
sbb
jge
push
out
mov
push
fwait
nop
push
mov
mov
pushf
enter
fs
mov
addr16
mov
xor
into
pop
pop
xchg
adc
ja
int
jb
xor
xor
addr16
or
push
hlt
ja
push
daa
jno
cmp
sub
daa
in
rorl
inc
or
mov
shr
in
mov
in
outsb
mov
incb
ret
orb
inc
sbb
out
loop
add
nop
sbb
add
inc
aas
mov
pop
loope
add
push
out
dec
or
push
ljmp
je
dec
imul
test
js
jne
orl
icebp
inc
push
sub
mov
add
push
xor
mov
jmp
lods
dec
pop
stos
mov
xchg
or
mov
out
jnp
push
fsts
add
xchg
shlb
lds
adc
adc
mov
jmp
and
cmpb
scas
jb
cmp
in
sub
mov
jl
push
mov
or
adc
dec
mov
push
adc
mov
or
fsubl
insb
mov
xchg
mov
mov
add
adc
fbld
sbb
jb
adcl
dec
cmpsb
add
push
andl
pop
adc
pop
lret
mov
push
cmpsl
mov
xor
mov
fbld
xchg
test
das
pop
sahf
inc
or
inc
cs
inc
enter
jo
and
and
enter
sub
popf
hlt
imul
add
and
lock
int
fs
lods
ffree
mov
and
mov
loope
aaa
das
pop
outsb
adc
inc
mov
push
dec
cld
les
test
mov
sub
and
popf
push
fnsave
loope
ds
in
cld
push
mov
push
mov
adc
dec
mov
std
loop
scas
adc
mov
jne
pop
stos
stc
pop
lret
sbb
push
dec
cld
int3
loope
sub
sbb
inc
dec
cmp
inc
adc
cmp
and
mov
daa
gs
pop
test
pop
in
xchg
push
mov
push
jmp
aas
jb
push
push
pop
cmp
dec
or
fldl
mov
loope
cmp
inc
sub
xor
jmp
xchg
mov
aas
lds
mov
jg
add
dec
gs
fs
jb
xor
lea
adcl
mov
or
pop
sub
add
je
push
cs
xchg
jns
lods
xchg
popf
nop
inc
mov
adc
loopne
cmpb
add
or
mov
repnz
or
movb
pushf
cmpsl
mov
inc
xor
adc
or
jp
popa
sarb
mov
and
adc
fs
or
fildl
cltd
das
idiv
push
dec
das
inc
push
bswap
rcrb
inc
dec
cwtl
push
xchg
xchg
or
cmp
notb
mov
add
cmp
setne
mov
test
mov
inc
mov
inc
xchg
dec
adc
clc
mov
aad
or
pushf
rcr
nop
mov
mov
pushf
enter
mov
enter
jl
mov
jle
sbb
or
cmp
adc
pushf
in
pop
enter
std
mov
cwtl
scas
bound
mov
mov
clc
jmp
dec
and
push
stc
dec
ficoms
lds
jne
xor
jl
rcrb
xchg
test
sub
xor
or
sbb
jmp
fs
ret
addr16
cld
aas
imul
xor
sahf
pop
mov
cmp
subb
pop
dec
pop
loop
pop
mov
fs
sub
pushf
push
dec
jbe
cmp
xor
inc
push
mov
cld
sbb
push
mov
movsl
sbb
outsb
cmpsl
add
cmp
lret
and
push
inc
mov
jbe
lcall
inc
mov
mov
mov
dec
repnz
lret
and
std
test
jecxz
dec
cld
lods
iret
sub
add
cmp
divl
js
lods
ljmp
imul
scas
cmp
mov
inc
jge
repz
or
jne
and
inc
test
std
test
sub
repnz
jle
push
push
sbb
add
push
push
push
out
dec
jne
fucomip
xchg
sbb
sub
push
inc
or
loop
xor
sbb
in
jbe
dec
mov
leave
movsl
mov
sbb
int
add
xor
sbb
into
and
adc
mov
and
mov
add
add
into
lret
cmp
inc
sti
in
jl
test
nop
nop
hlt
adc
jo
mov
pop
inc
js
movsb
in
orl
call
mov
pop
sub
repz
insb
jle
inc
add
cwtl
mov
mov
jle
pop
out
bound
push
push
movsb
adc
pop
mov
adc
push
sbb
adc
pop
popf
subl
sub
pop
je
cmp
cmp
jle
pop
insb
aad
jnp
movsb
cwtl
add
jg
lret
movb
dec
sbb
mov
inc
jmp
cwtl
mov
and
scas
aam
std
pop
loop
test
inc
pop
js
inc
movsb
cmp
movsb
iret
icebp
testl
aam
notb
add
test
mov
push
xchg
lea
mov
push
incb
test
test
mov
or
mov
mov
sti
sbb
xchg
scas
loop
mov
fisttps
popf
jo
inc
mov
jl
js
movl
mov
push
icebp
jl
push
jo
out
push
adc
cmp
and
mov
adc
mov
test
loope
push
lahf
leave
or
dec
mov
mov
out
pop
mov
cmpsl
insb
pop
adcl
ret
outsb
clc
cwtl
add
sbb
push
jmp
mov
push
ret
mov
sbbl
inc
and
cwtl
push
sub
or
mov
sbb
adc
adc
xchg
jne
or
sub
lods
and
ret
movsl
pop
inc
sub
cwtl
add
mov
or
shr
push
push
sub
pushf
nop
cmp
mov
ret
lods
cmp
ja
add
cmp
push
push
mov
mov
nop
xchg
pop
cmp
or
ret
outsb
adc
push
inc
xor
xchg
add
bound
sub
jns
cmp
add
loope
sbb
add
jecxz
add
mov
dec
dec
push
push
add
scas
mov
loope
test
in
sbb
cmc
ret
jmp
xor
enter
sbb
sarb
sub
mov
pop
add
sarl
sbb
jg
loope
adc
ljmp
lock
and
ja
scas
add
adc
idiv
sub
pop
out
or
add
inc
cmpsl
and
shl
jne
mov
test
dec
dec
ficoml
add
add
or
xchg
or
icebp
adc
and
cld
les
popa
mov
sub
aas
add
adc
std
fstpt
int
pop
fstpl
in
inc
in
and
adc
xchg
stos
repnz
sbb
inc
sbb
xchg
mov
pop
xchg
sbb
movsl
testl
mov
cld
repz
inc
sbb
hlt
dec
cvtpi2ps
cmp
adcl
sub
sbb
dec
scas
into
hlt
pop
test
mov
mov
mov
test
test
sarl
adc
jnp
add
popf
inc
mov
test
mov
cmp
mov
mov
int
rcrl
outsl
fdivl
inc
sbb
das
sbb
sub
push
mov
lods
fcomps
jmp
test
mov
mov
cld
push
or
movsb
lods
in
add
push
cmp
jno
inc
daa
inc
test
or
cmp
inc
dec
insb
and
dec
shrl
sub
inc
push
fs
push
and
push
lea
enter
mov
push
push
pop
and
push
dec
xchg
cld
pop
stc
pop
adc
pop
jbe
pusha
sub
mov
push
ss
pop
adc
fsubs
sub
inc
xor
xor
jns
mov
ret
rcr
jl
cmpl
or
ror
and
jns
jecxz
push
rcr
dec
and
mov
pop
stos
repnz
adc
rorb
cli
hlt
roll
stos
or
mov
les
adc
sub
or
xor
adc
loopne
loopne
mov
pop
outsl
nop
shr
mov
pop
ret
aas
cmpsl
adc
xor
sbb
sub
fidivs
add
cs
clc
cmpsl
out
sbb
jbe
mov
hlt
dec
out
adc
pop
xchg
sub
test
enter
call
nop
mov
and
test
cmp
inc
inc
insb
cwtl
push
adc
push
or
lods
fists
je
dec
sub
add
push
cmp
inc
or
jl
scas
lea
mov
cmp
cmp
sub
cli
sbb
or
jne
cld
mov
daa
xchg
mov
call
add
loop
pop
pop
jae
and
sbb
mov
lahf
cmp
push
xchg
decl
xor
push
jns
inc
cld
or
mov
jp
loope
and
les
and
test
dec
adc
sbb
inc
cs
adc
mov
or
push
mov
gs
mov
mov
shr
push
cmp
sub
adc
fs
dec
jg
fs
jg
cmp
sub
jg
cmp
in
dec
dec
es
in
cmp
pop
and
or
je
mov
push
adc
adc
and
inc
adc
mov
mov
add
pop
rcrl
cmpsl
xchg
adc
cmp
mov
movsl
jo
cltd
pop
mov
mov
fnstcw
cmp
pop
adc
mov
adc
jmp
nop
or
inc
xor
mov
sub
dec
mov
ret
stc
xchg
inc
sbb
dec
adc
lea
adc
mov
pop
pop
sub
jp
and
push
add
push
mov
ds
push
cmc
mov
pop
lods
jmp
mov
mov
lock
mov
ficompl
and
mov
adc
fcomps
ja
sbb
sub
pop
fstpl
xchg
adc
mov
jne
loop
lret
pop
pop
int
cmp
jecxz
inc
push
mov
xchg
xchg
inc
mov
add
ds
leave
push
jo
adc
fistpll
js
mov
or
mov
push
aaa
popf
negb
leave
setne
mov
cwtl
and
xchg
shll
in
mov
jg
test
and
mov
loope
and
push
push
xor
jo
push
inc
loop
adc
ret
rclb
test
gs
stos
bound
stos
dec
gs
mov
movsb
dec
es
xor
adc
fwait
pop
sbb
jecxz
add
loope
add
pop
push
or
inc
fdiv
push
js
loop
adc
adc
loop
xchg
or
sub
leave
insb
outsl
cld
in
fisubs
cmp
push
and
fs
sti
ret
andb
xchg
mulb
xchg
jmp
mov
pop
movswl
xchg
adc
hlt
sub
in
mov
sub
adc
ret
aaa
jp
push
stos
mov
lds
xchg
jl
pusha
add
out
ret
mov
add
pop
clc
repz
repnz
or
out
ret
or
lret
out
test
lds
imul
cwtl
mov
mov
lahf
out
inc
loopne
mov
xchg
sbb
and
cli
std
xor
dec
jmp
pop
les
stos
mov
xchg
pushf
mov
add
pushf
out
arpl
mov
sub
les
movsl
mov
mov
or
shlb
cmp
mov
sub
adc
cmc
mov
in
loope
pop
out
adc
pop
sbb
out
test
jo
test
jne
inc
mov
adc
test
add
mov
xchg
and
or
test
mov
lods
jne
test
hlt
in
dec
push
mov
flds
mov
push
jle
jg
and
or
cwtl
adc
adc
and
add
pusha
add
adc
test
jo
into
xor
clc
jb
inc
out
test
sbb
xchg
out
add
lea
cld
pop
loop
sbb
cli
aas
pop
daa
sub
mov
pop
push
arpl
add
pusha
in
dec
test
cmp
xor
pop
ljmp
rclb
sub
repnz
gs
mov
ljmp
das
jne
aad
movsb
mov
jns
jmp
pop
adc
cli
flds
sub
cwtl
mov
mov
cs
adc
lods
loope
sbb
jle
cld
mov
orb
pop
push
inc
jp
out
into
xchg
cmp
add
mov
icebp
lods
dec
pop
pop
mov
adc
cmp
jle
xchg
sbb
sub
mov
mov
xchg
ljmp
nop
fildl
sub
xchg
sbb
inc
orl
and
or
jp
xor
aad
insl
xchg
jns
mov
jns
mov
pop
popa
adc
sti
test
xor
inc
std
add
push
or
imul
negl
sbb
push
int3
sub
mov
mov
ficompl
or
sub
or
jnp
and
movsb
or
push
dec
mov
push
xchg
test
xor
popf
repz
push
push
loop
push
cmp
pushf
lahf
test
jns
xchg
enter
jl
testl
adc
imul
mov
push
xlat
std
jg
ficoml
mov
iret
sub
pop
mov
clc
test
pop
cli
std
jno
bound
fdivr
xor
lcall
fcoml
dec
std
gs
xchg
out
je,pt
repnz
int3
lea
mov
aad
xchg
cs
sbb
fiadds
enter
push
pop
mov
sarl
cltd
rclb
cmp
lcall
and
sub
les
hlt
cmp
jmp
pop
xchg
cmp
stos
inc
fdiv
lods
fmul
aam
data16
inc
clc
pushf
pop
loop
jg
push
cmc
out
xchg
int3
scas
bound
adc
loop
scas
or
xor
std
iret
je
jge
and
adc
loop
lret
arpl
in
pop
pushl
ja
cwtl
add
movsl
lret
jg
shrl
std
out
rcll
push
bound
jecxz
xchg
xchg
int3
js
lea
lahf
mov
mov
daa
das
cmc
popf
ret
scas
idivl
int3
or
dec
ljmp
mov
xchg
push
or
pop
por
pop
sbb
adc
mov
inc
mov
je
lret
mov
dec
ret
dec
imul
ds
mov
adc
clc
lret
inc
xchg
imul
pop
test
loop
dec
test
lods
adc
xor
in
cmp
or
jl
lahf
xor
test
dec
daa
imul
xor
push
mov
push
sbb
push
sti
icebp
lods
mov
sbb
jne
push
pop
nop
int
out
xorb
out
jle
out
jns
or
and
stos
mov
adcb
call
outsb
cmp
cmpsl
test
xor
inc
subl
fwait
pop
in
into
enterw
mov
or
mov
imull
negl
or
push
into
push
gs
push
je
pushf
push
outsb
test
pop
imul
inc
pop
movsl
mov
loop
imul
dec
shlb
dec
fstpt
sbb
insl
sub
push
inc
sbb
lret
add
mov
mov
repnz
imulb
shll
cmpsl
arpl
or
scas
std
xchg
cmp
push
cld
pop
xchg
fidivl
in
ret
out
sbb
fs
xchg
jge
xchg
inc
lods
lcall
orb
pop
sti
jno
xlat
ret
xchg
sbb
sbb
jmp
sub
dec
jmp
sub
dec
jmp
sub
or
push
in
movsl
lcall
mov
push
pop
sbb
call
mov
mov
mov
jo
sub
gs
mov
jne
adcb
mov
js
negl
ret
pop
inc
xor
xor
or
ja
xchg
jbe
xchg
ja
sbb
cwtl
add
lods
xor
cltd
sti
sub
fisubs
dec
and
sub
daa
and
or
mov
scas
mov
inc
cmpsl
jno
ljmp
je
xchg
mov
jmp
rclb
mov
pushf
mov
imul
pop
mov
push
mov
and
xchg
jno
daa
mov
aam
daa
pop
cli
sbb
mov
add
jmp
xchg
cmp
cltd
cli
inc
paddsw
lock
lcall
int3
stc
adc
or
lret
fs
ds
mov
or
cmpb
pop
inc
pop
or
add
and
sub
mov
dec
in
xor
push
sbb
fcompl
xlat
fs
add
lea
or
inc
pop
mov
adc
adc
add
xor
xor
inc
mov
cmpsb
pop
test
mov
pop
adc
jne
je
xor
icebp
and
daa
sbb
repnz
gs
clc
shrb
jo
test
mov
popa
out
ret
inc
mov
pop
mov
inc
not
jo
mov
movsl
xchg
adc
subb
adc
inc
sub
jmp
sbb
pop
adc
mov
les
sahf
inc
push
sbb
mov
inc
dec
mov
push
outsb
xchg
test
bound
push
inc
fs
xor
jmp
sub
or
and
sbb
adc
mov
fs
xor
test
clc
mov
insb
jb
add
sub
lahf
in
int3
and
icebp
gs
and
pop
pop
rorl
popa
and
stos
repnz
out
das
cmp
or
aam
xor
nop
ret
repnz
and
stos
daa
push
stos
cmpsb
fs
cs
jo
add
lcall
jle
cmc
enter
pop
push
loop
std
cmp
mov
jne
cli
jge
cli
xor
mov
push
and
int
outsb
lahf
test
and
sub
in
movsb
mov
ret
inc
and
sbb
add
out
jno
dec
loopne
push
xor
push
xor
fsubs
cmp
cmp
out
jno
inc
aam
mov
mov
scas
repz
addl
jae
movsb
stos
cmpsl
add
je
xchg
sub
insl
test
fidivl
and
cwtl
push
cmp
scas
sub
xor
fsts
and
loop
call
ss
roll
out
sub
rol
adc
imul
xchg
jmp
jmp
pop
clc
movsb
pop
ja
test
cmp
repz
and
pop
lock
test
mov
cmpb
shl
inc
inc
testl
stos
lret
mov
mov
sarb
mov
in
mov
cli
mov
test
adc
xor
inc
adc
sub
sub
or
les
xlat
dec
mov
xlat
mov
sub
mov
xor
int
or
inc
xor
sub
cmc
push
cs
mov
fnstcw
gs
sub
lds
mov
xchg
insl
xchg
sub
or
and
imul
pop
mov
adc
mov
lret
aad
pop
xchg
je
out
test
push
imul
cld
inc
dec
movsb
std
sti
inc
outsb
fldt
xlat
jbe
mov
or
and
shl
imul
push
sub
imul
push
adc
dec
cmc
lds
js
inc
repz
jmp
and
pop
xchg
jbe
or
jmp
dec
add
sub
and
and
sbb
loopne
inc
subl
shlb
or
movsb
jmp
jmp
sub
push
cwtl
mov
pushf
test
loopne
push
bound
inc
loopne
adc
loopne
xchg
mov
stos
xor
adc
stos
jb
adc
scas
xchg
push
mov
jge
subb
pushf
push
dec
and
adc
lea
push
and
push
xor
push
popa
dec
push
scas
inc
mov
xchg
out
cmp
or
cmpsl
jbe
popa
inc
xor
mov
inc
push
mov
cmp
xor
inc
fisubl
inc
push
les
movl
adcb
mov
rorb
ret
je
inc
repnz
and
and
and
inc
aad
jg
inc
fcmovbe
jo
incl
mov
push
je
add
cmp
xchg
insl
adc
sbb
push
fcomps
xor
andl
jmp
movsl
push
leave
push
aad
ret
pop
mov
cli
dec
hlt
rcrl
pop
stos
sub
mov
icebp
and
mov
or
push
les
into
or
cltd
and
daa
fstl
lods
sbb
or
pop
jmp
push
cld
or
in
mov
xlat
mov
mov
jg
lea
mov
sub
jmp
jge
adc
lods
movsl
lods
cmpb
jmp
mov
xor
mov
jno
cli
jne
call
into
cli
pop
jecxz
mov
jns
pop
adc
add
cmp
imul
in
sub
and
pop
sub
pop
lods
add
jge
inc
inc
sbb
insb
xor
jae
push
sub
ljmp
adc
push
cld
sbb
test
push
pop
push
inc
in
jge
add
lods
adcb
jo
in
repnz
jb
push
adc
repz
mov
fdivs
xchg
mov
cmp
xchg
insl
ror
xor
ret
xchg
inc
mov
outsl
mov
xor
imul
xchg
std
xchg
mov
jmp
shlb
cld
jmp
pop
xchg
sbb
pop
xchg
dec
xor
pusha
sahf
bound
repz
in
sub
lea
jecxz
ljmp
rcrl
aaa
iret
fsubrl
fsubrl
xchg
jno
or
xchg
movb
xchg
sbb
lea
xchg
mov
push
xchg
sbb
mov
mov
popa
inc
xchg
and
iret
icebp
mov
cmp
sbb
repnz
xchg
enter
mov
in
and
xchg
mov
jns
or
adc
das
decl
inc
in
jmp
dec
xor
sbb
cmpsl
jne
jmp
movsl
push
leave
dec
repz
call
xchg
and
lods
or
lret
xor
xor
push
jmp
xor
popf
xchg
inc
and
xchg
mov
loop
adc
mov
sbb
sub
sub
out
add
das
push
adc
mov
in
jl
xor
outsb
stc
lods
inc
xor
or
pop
mov
enter
cmp
sub
dec
cmpsl
pop
das
adc
jl
popf
cwtl
dec
jno
mov
adc
andb
and
adc
shl
push
sub
adc
and
adc
mov
xor
sahf
xor
inc
stos
sub
inc
xchg
flds
jnp
sub
sub
dec
adc
jmp
ret
int3
popa
and
lret
push
stos
and
cmp
xor
push
xor
cs
xchg
inc
mov
cmpsl
push
jge
cmp
outsb
iret
test
push
mov
faddl
mov
adc
in
mov
mov
movsl
push
mov
adc
cmp
nop
sub
repnz
enter
sub
in
mov
arpl
dec
fldcw
cmp
enter
aam
inc
push
mov
xchg
mov
incb
movsl
xor
and
xchg
push
int3
adc
and
dec
mov
cmp
hlt
decl
and
push
xchg
push
in
mov
mov
push
je
fsqrt
out
push
out
xchg
loop
mov
les
mov
inc
test
dec
jp
mov
mov
jne
pop
fstl
ljmp
mov
xchg
scas
sub
pop
lret
shlb
push
scas
dec
int3
lods
dec
push
test
and
nop
sahf
cld
inc
jo
inc
lcall
imul
jne
arpl
les
nop
xor
fld
pop
pop
out
loop
xor
outsl
lcall
and
insl
lret
jno
jp
shll
or
mov
outsl
mov
mov
sbb
std
inc
movsb
test
jl
add
mov
fldl
mov
sti
push
jmp
clc
mov
sub
sub
dec
sub
daa
out
stc
inc
push
mov
aas
jle
push
movsb
adc
dec
xchg
fisttpl
enter
xchg
add
int
and
xor
xchg
or
mov
pop
js
inc
mov
adc
mov
add
fsubrl
jb
in
and
mov
mov
mov
outsl
lret
or
rol
in
xor
daa
fmuls
cmp
rcll
sub
cmp
in
lea
add
push
xchg
repz
fyl2xp1
dec
push
outsl
addr16
fcomps
jns
cmp
xchg
mov
addr16
dec
push
mov
add
inc
jmp
pop
jne
inc
mov
ja
add
or
mov
call
pop
adc
xor
adc
xchg
mov
cli
cmc
sar
jb
enter
adc
add
mov
sbb
test
add
sbb
mov
jmp
in
stos
cmp
jge
xchg
or
aam
mov
je
adc
adc
sbb
mov
cmc
adc
xchg
xchg
and
add
jne
subl
jmp
nop
or
and
les
std
add
cli
jb
cmp
adc
stc
adc
push
ret
lahf
rorl
push
jb
xchg
or
xlat
lahf
push
jge
or
xchg
pushf
popa
in
loop
jmp
test
mov
pushf
dec
icebp
lods
push
leave
xchg
cld
or
das
shl
je
or
shr
dec
jae
sub
inc
popa
loop
adc
jmp
aam
fnsave
fs
push
mov
pop
inc
pop
adc
in
push
pop
and
test
lock
or
jmp
adc
inc
sbb
das
mov
or
shlb
sbb
jmp
push
sbb
call
push
pop
mov
in
dec
call
pop
dec
loop
jne
push
cmp
add
cmp
jle
xchg
xchg
jmp
fdivrl
cmpsb
cmp
inc
std
cmpsl
or
inc
xor
test
insb
sub
test
rclb
lea
sbb
rorb
cmc
push
or
jecxz
pop
xchg
nop
hlt
test
cltd
in
push
scas
lds
and
imul
sbb
out
dec
loop
sahf
mov
enter
inc
xor
jne,pt
insb
in
cmp
xor
mul
cmp
repz
lahf
cli
and
adc
ds
mov
push
add
orl
dec
hlt
testb
push
mov
cmp
sbb
mov
pop
xchg
in
cmp
inc
push
dec
faddl
xchg
lret
xor
dec
daa
pop
jns
inc
call
je
lahf
cmpsb
loope
inc
cmp
rclb
std
clc
lcall
add
in
cmpsl
push
shl
xchg
popl
and
cld
jno
lods
jg
mov
inc
jnp
hlt
sbb
xchg
vpsrlw
cmp
ljmp
cs
cld
pop
lds
mov
dec
repz
cld
ss
or
sti
pop
sti
or
hlt
jno
cs
xchg
sti
mov
leave
loope
mov
stc
jbe
dec
pop
jle
sub
jp
jmp
pop
dec
in
insl
jae
xchg
fs
addr16
xchg
inc
mov
lods
sub
pop
sbb
ds
pop
fs
fdivs
cmpsb
pop
pushf
popf
in
repnz
and
hlt
test
leave
nop
out
bound
mov
or
sbb
sbb
and
mov
sti
test
xchg
cltd
and
cmp
cltd
je
adc
cmp
pop
mov
sbb
xlat
mov
cmp
sarb
add
adc
xchg
lds
xchg
je
pushf
sub
das
cmc
push
pop
mov
push
jl
add
xor
ret
dec
mov
daa
jmp
hlt
and
pop
cmpsl
jl
sub
jmp
and
dec
mov
mov
in
lahf
pop
sub
jmp
adc
jg
mov
adc
insb
jo
sub
shrb
jge
mov
inc
adc
mov
shl
cmp
push
dec
mov
cmp
inc
inc
xor
push
push
inc
das
and
sbb
or
jmp
cmpsl
ljmp
jle
push
imul
or
int
jae
xor
es
push
sbb
aad
in
inc
dec
lret
aam
push
sub
push
sbb
mov
and
add
mov
cwtl
jmp
add
mov
or
aad
sarb
je
and
les
sub
xchg
sbb
mov
dec
repz
xchg
and
or
je
aas
mov
pop
test
push
cmp
ret
sub
sub
aad
inc
adc
int
adcb
mov
imull
sbb
loop
push
push
push
jl
or
rorb
cli
ljmp
pop
cmpb
fnstsw
ja
sbb
adcb
insb
adc
push
test
dec
les
mov
mov
jmp
cmp
lds
lds
lret
in
leave
mov
cmpsl
in
ret
jge
lock
scas
pop
lock
mov
or
bound
lcall
je
stos
lds
pop
sbb
jmp
mov
push
adc
adc
or
push
fstps
mov
insl
mov
mov
in
sar
inc
and
cs
mov
add
and
mov
mov
adc
insb
or
nop
rorb
add
in
jns
and
sub
dec
mov
and
movl
jo
mov
mov
xorl
aaa
aam
xor
mov
out
or
xchg
mov
sbb
inc
jl
je
lret
out
leave
nop
pusha
leave
xorl
pop
je
mov
jne
nop
insb
mov
push
inc
insb
enter
sbb
push
push
nop
insb
repnz
jmp
fildll
push
mov
hlt
sub
sub
push
sub
push
adc
inc
subb
mov
xor
mov
mov
jp
stc
xor
js
test
nop
mov
jns
adc
inc
test
test
je
repz
and
jle
jg
addr16
add
jp
icebp
lahf
cld
adc
dec
test
pushf
jl
mov
jnp
cmpsl
pop
sahf
jmp
dec
jecxz
aaa
xchg
xor
pop
push
fists
mov
inc
adc
orb
mov
add
xorb
push
jnp
movsl
add
ljmp
leave
jle
cli
dec
adc
in
xor
or
inc
and
ds
movsb
jne
lock
shll
push
jmp
rclb
into
cmpsb
pop
xchg
push
lret
xor
adc
test
dec
sti
insl
int3
cmp
mov
adc
enter
inc
mov
dec
push
pop
push
test
ret
xlat
xchg
mov
rorl
add
or
xchg
mov
or
enter
xchg
imul
stos
or
add
mov
add
jne
cmpsb
mov
das
pop
push
or
dec
div
aad
mov
hlt
jns
or
fstp
fcomps
cli
aaa
fmull
nop
testb
js
xor
rolb
xchg
cmp
mov
mov
jae
sahf
ljmp
pop
push
loop
js
and
ficompl
inc
test
insl
adc
mov
mov
and
shl
fistpl
jmp
ljmp
cli
mov
repnz
pop
cwtl
xchg
movsl
xchg
lea
ss
movl
adc
js
jmp
jmp
in
jg
mov
xchg
and
mov
dec
stos
aaa
cmp
jae
pop
push
std
and
rol
sub
loope
aam
jbe
pop
jle
fcmovu
ljmp
xchg
mov
iret
mov
mov
sub
mov
jo
popa
or
inc
mov
mov
jo
inc
js
je
js
fidivl
arpl
push
push
pop
fisubs
jo
loop
and
les
push
and
std
inc
mov
out
frstor
das
jmp
xchg
or
mov
add
sbb
stos
in
fwait
xchg
mov
add
imul
or
ljmp
or
adc
and
inc
rclb
or
fbld
cld
and
xor
jl
xor
pop
or
hlt
mov
aaa
sbb
andl
push
inc
out
mov
sar
fsts
lock
pop
sub
push
fiaddl
test
pop
fsubrs
cmp
enter
rcrl
push
jb
mov
imul
push
jp
push
push
or
pop
mov
fs
ljmp
jp
push
cmpsb
or
mov
aam
lahf
xor
lods
sbb
dec
add
mov
xchg
mov
mov
dec
mov
decl
xor
and
scas
and
gs
sub
hlt
test
lret
into
call
jb
enter
cmp
lret
or
jg
cmp
mov
xchg
and
add
dec
mov
mov
in
adc
dec
pop
aaa
mov
add
dec
jmp
sub
icebp
mov
movzbl
add
cmp
bound
xor
pop
and
dec
decl
inc
imul
pushf
loop
frstor
and
pop
xchg
push
hlt
dec
or
xor
push
gs
dec
cmp
pop
jae
test
rorl
push
into
shrb
out
movsb
and
pop
pop
movl
mov
ss
push
dec
lret
cld
enter
pop
int
mov
outsl
push
mov
je
fimull
xor
add
rorb
dec
xor
mov
and
push
add
cmp
iret
push
pushf
and
sbb
fdivrl
or
dec
adc
mov
push
stc
arpl
adc
and
pop
sub
adc
adc
insb
mov
je
and
mov
and
push
or
test
xchg
fcompl
mov
mov
mov
aad
aaa
jl
lock
sbb
repz
out
arpl
iret
or
or
push
adc
push
adc
push
test
mov
mov
lods
negb
pop
pop
pop
inc
movsb
mov
add
add
mov
lahf
clc
js
xchg
jl
sbb
pop
mov
out
mov
js
cmpsl
sbb
ja
xchg
out
mov
mov
adc
rorb
int3
sarb
test
cmp
outsb
adc
mov
mov
sbb
js
popf
mov
and
jbe
pop
sub
jns
ficoms
xor
cmp
test
xchg
frstor
add
inc
mov
adc
sub
jne
inc
les
push
lret
stos
push
jge
add
xor
enter
aam
dec
adc
sub
inc
movsb
mov
cmpsl
push
add
sub
add
xor
clc
clc
bound
subl
xor
jae
jb
ja
call
gs
inc
jbe
jle
push
or
call
jae
push
in
popa
fmull
cld
jo
add
js
or
inc
cmp
or
pop
push
imul
dec
mov
push
jle
js
push
jge
js
mov
xor
psubsb
outsb
sarl
je
adc
adc
dec
inc
mov
add
sbb
adc
push
add
inc
adc
or
dec
sbb
mov
cmp
pop
sub
adc
xchg
adc
or
mov
inc
sbb
inc
loopne
cmp
adc
mov
cwtl
mov
sbb
add
mov
cld
sbb
inc
mov
xor
int3
imul
inc
stc
and
pusha
and
push
cmp
mov
push
mov
nop
or
xor
lods
rolb
in
sbb
test
cmp
sbb
mov
cmp
or
cmpsl
cmp
or
data16
aam
jge
xorb
and
orb
test
cmc
or
and
popa
inc
out
ljmpw
lock
jmp
je
loopne
add
add
add
roll
or
adc
adc
incl
pop
add
adc
and
add
idivl
mov
push
sub
xchg
or
adc
lods
sub
mov
mov
call
and
or
mov
add
data16
jns
sub
js
fs
or
int3
je
cwtl
arpl
imul
nop
out
in
mov
pop
nop
clc
inc
outsl
dec
js
dec
sti
add
push
mov
add
or
es
mov
in
mov
and
xchg
push
cwtl
mov
js
mov
inc
mov
std
mov
in
inc
es
push
divb
sbb
mov
mov
enter
loopne
or
inc
lods
movsb
mov
adc
push
es
aam
inc
push
mov
jmp
inc
xchg
cwtl
ret
pop
aam
adc
adc
test
xorb
pop
dec
xor
pop
ret
xor
or
rol
push
sub
push
cmp
xchg
inc
lods
push
pop
jns
movsb
or
jo
jo
jo
pop
dec
mov
mov
int3
lret
dec
test
fidivs
push
pop
rdmsr
adc
sbb
and
rolb
mov
sub
mov
add
jo
and
inc
mov
inc
rclb
sbbb
aaa
or
aam
add
xchg
pop
sbb
or
int3
sub
inc
push
inc
rolb
add
inc
lret
and
mov
cmp
jns
dec
add
insl
rclb
test
or
inc
dec
aam
add
gs
jne
sbb
pop
jb
mov
clc
les
mov
daa
les
icebp
jae
xchg
cld
rorb
inc
mov
add
jns
and
xorl
cmpsl
adc
xchg
stc
adc
or
jne
shrb
mov
or
xchg
fimuls
fs
rorb
fcomps
and
xchg
pop
inc
popa
je
cmp
mov
sbb
dec
call
pop
movb
jmp
imul
sarb
push
jb
lock
mov
mov
mov
push
daa
xchg
adc
cwtl
xor
fs
insb
jns
aaa
ret
sbb
and
les
sbb
add
jo
aam
add
pop
cmp
loopne
loopne
test
push
mov
xchg
add
inc
bound
es
aas
cmc
test
mov
es
add
arpl
pushl
test
cs
or
sbb
outsl
push
gs
insb
sbb
pop
jo
gs
push
push
mov
dec
mov
adc
mov
pop
inc
inc
push
push
sbb
lea
cwtl
inc
nop
mov
adc
sbb
push
xchg
jp
or
add
xchg
mov
pop
adc
mov
test
scas
pop
adc
inc
and
mov
and
dec
pusha
sbb
add
mov
int
aas
jmp
or
mov
cld
pop
and
push
inc
jmp
bound
test
adc
out
add
and
aad
push
sahf
push
inc
mov
sbb
add
dec
nop
cmpsl
subb
inc
mov
cmovo
stos
and
pop
or
mov
mov
dec
sub
or
js
push
outsb
addr16
cmp
hlt
or
inc
dec
and
mov
xchg
pusha
cli
and
pop
sub
and
xor
pop
inc
je
fiadds
sub
push
or
cli
jb
or
and
or
cltd
fcoml
lcall
dec
and
adc
lcall
lcall
jl
cli
nop
outsl
sub
das
add
outsl
jo
leave
dec
mov
mov
xor
inc
jo
daa
push
xor
mov
mov
xchg
inc
push
add
dec
jb
add
fisubs
cwtl
movb
fdivl
ret
popl
sub
movsb
sub
adcb
jae
inc
sub
and
adc
mov
mov
addb
sti
inc
mov
xchg
cli
cmp
inc
dec
jl
nop
pop
mov
and
inc
adc
xchg
xor
dec
outsl
mov
sbb
stc
xor
sub
nop
daa
push
outsb
sub
into
aaa
add
push
mov
and
int
scas
or
inc
test
cmp
sub
fwait
sub
or
loop
sbb
outsb
xchg
mov
negb
adc
imul
jmp
rcrl
inc
sub
cmp
cmp
pop
sbb
and
jmp
xor
andb
add
dec
mov
loop
inc
out
dec
dec
inc
aaa
sub
aas
mov
sbb
inc
jbe
add
movsl
faddp
je
inc
and
jns
test
dec
lock
out
xor
xchg
or
outsl
xchg
inc
sbb
dec
rol
and
fsubl
inc
lcall
stc
inc
ret
inc
stc
sbb
cmp
mov
sub
outsb
fdivrs
xchg
and
gs
jmp
cs
repz
orb
push
cmp
out
sbb
call
adc
rcll
inc
pushf
inc
shlb
jmp
mov
insl
mov
jl
test
dec
loopne
inc
into
dec
or
in
loopne
inc
inc
and
jmp
pop
xchg
sub
xchg
jb
adc
adc
cs
repnz
xchg
es
push
je
scas
push
push
adc
fs
sbb
adc
jle
xor
nop
mov
mov
bnd
add
divb
or
jmp
lock
push
adc
mov
enter
and
js
xor
dec
sbb
add
aaa
inc
repz
das
mov
ss
cmp
xor
mov
bound
pop
adc
nop
cmp
subb
enter
cltd
je
or
enter
or
cmp
mov
repz
jns
mov
les
jns
and
mov
push
inc
jl
inc
test
mov
push
loopne
lock
outsl
jl
xchg
nop
mov
loopne
shl
cli
movsb
add
xchg
fistpll
and
adc
cmpsl
adc
gs
dec
aam
ja
mov
movsl
loope
jo
inc
fsts
inc
lock
jns
in
pop
push
decb
inc
and
push
and
or
frstor
inc
dec
out
enter
enter
mov
pop
dec
iret
adc
scas
and
inc
sbb
or
clc
push
test
in
sub
push
pop
sbb
mov
push
adc
scas
and
imul
in
gs
repnz
enter
jns
inc
enter
cmc
inc
and
out
bound
inc
and
ss
mov
mov
and
and
mov
sub
sub
sub
pop
aas
dec
and
add
dec
fisubrs
popa
inc
xchg
enter
ljmp
ljmp
and
xor
fs
or
jo
or
xor
mov
push
nop
xor
and
aaa
test
or
cmp
cmp
cmp
and
aas
test
inc
or
inc
pop
fs
insl
dec
dec
pop
inc
add
adc
xchg
dec
loopne
ror
pop
fwait
insb
adc
pop
adc
sbb
push
mov
pop
pop
adc
inc
inc
cld
mov
sti
clc
cmpb
xor
dec
or
jl
xchg
insb
cld
dec
lods
bound
and
push
enter
shlb
stc
or
and
arpl
inc
lock
inc
adc
inc
adc
adc
dec
and
pop
pusha
pushf
pop
inc
push
pop
adc
and
or
cmp
or
jo
sbb
call
popf
aam
dec
pop
jmp
sbb
mov
test
rcl
enter
mov
xor
or
decb
mov
fdivl
in
cmp
es
or
dec
test
je
ret
cwtl
adc
adc
adcb
pop
ret
add
sbb
add
xor
xor
xchg
aam
mov
clc
sbb
popa
mov
dec
or
lods
jl
lea
mov
enter
in
adc
scas
in
or
stos
sub
xor
or
pushf
sbb
data16
ret
dec
icebp
test
and
loopne
adc
mov
arpl
clc
xor
adc
lock
or
jno
sbb
and
add
insb
add
inc
or
xor
jb
sub
or
adc
outsb
mov
mov
lock
nop
sbb
inc
and
lock
mov
rorb
and
inc
call
dec
adc
sbb
pusha
ja
test
imul
stos
push
mov
xor
call
adc
or
mov
mov
inc
dec
aam
daa
or
sbb
sbb
inc
sbb
shll
insb
gs
dec
outsl
xor
adc
mov
outsl
sub
loope
sub
lods
push
sbb
dec
outsl
push
jb
jp
push
popa
insb
inc
imul
loop
cmp
pop
sub
sbb
jne
outsb
js
mov
xchg
pusha
and
outsl
ja
jne
mov
adc
enter
pop
push
adc
movsb
mov
adc
repnz
enter
scas
inc
pushf
insb
and
inc
insb
jns
push
in
enter
and
dec
sub
lock
mov
push
jo
arpl
addr16
xchg
loope
fldcw
pop
and
mov
imul
es
and
or
dec
enter
das
pushf
adc
in
int
dec
ja
pop
push
inc
and
adc
mov
xchg
imul
sub
out
xor
gs
fcompl
sub
int3
push
cmp
and
jl
xor
xor
clc
movsb
jns
or
dec
fldt
sbb
adc
or
mov
and
or
loopne
push
cmp
es
sub
inc
mov
sub
sub
shrl
fwait
xchg
xor
repnz
mov
pop
and
xchg
dec
push
sub
movsl
imul
push
jo
into
xor
adc
jbe
test
mov
xor
pop
inc
movsb
and
sub
movsb
and
mov
mov
pop
and
sub
jbe
test
hlt
or
mov
push
cmc
test
push
pop
mov
jae
mov
mov
jns
loopne
lods
out
repz
mov
sub
sar
aaa
sbb
aas
sub
or
and
cmp
or
adc
imul
cmp
cmp
cmp
xor
jne,pt
aas
scas
and
inc
pmulhuw
add
push
cmp
or
push
enter
inc
push
mov
or
push
jo
push
icebp
or
inc
rcrb
lahf
adc
je
nop
inc
addl
inc
inc
sub
push
shlb
or
das
push
sub
add
loopne
enter
inc
adcb
fistpl
test
test
and
and
dec
dec
mov
and
pushf
dec
mov
test
jle
dec
call
or
sub
dec
push
nop
push
mov
cs
repnz
cld
aaa
test
je
lds
dec
outsl
popl
push
mov
inc
clc
inc
jmp
and
lods
call
mov
cltd
inc
lock
push
pop
outsl
push
lcall
dec
icebp
pop
jo
dec
mov
jmp
sarb
jo
push
adc
dec
push
cmpsl
test
mov
jo
inc
adc
pop
mov
je
lods
sub
gs
enter
fstps
push
sbb
adc
shlb
repz
sub
inc
adc
push
shlb
push
nop
orb
popa
jmp
imul
popf
pop
shlb
les
xor
nop
adcb
sub
xchg
xor
push
add
pusha
pop
sub
outsb
ja
inc
dec
dec
mov
mov
ja
inc
nop
sahf
out
lock
jo
sbb
aam
clc
xchg
or
xchg
scas
xor
dec
ss
pushf
inc
les
aas
xchg
movsb
adc
cltd
sbb
adc
cwtl
xchg
movsb
movsb
mov
leave
pop
rcrb
or
xor
mov
cmp
mov
sub
test
dec
enter
adc
sbb
xor
adc
mov
push
or
push
mov
fcmovnbe
fcoml
sbb
add
shl
pusha
cwtl
lods
and
fisubrs
inc
jle
imul
fldcw
xchg
cmpsl
lea
sub
cs
jnp
movsl
xchg
fs
mov
sbb
pop
test
and
loop
adc
xchg
mov
outsb
mov
add
repnz
jne
and
xchg
daa
repnz
pop
xchg
sub
sahf
sub
sub
sub
sub
mov
pop
adc
scas
and
pop
inc
xor
repnz
enter
cmp
cmp
cmp
cmp
xchg
lret
push
dec
inc
cs
repz
subl
clc
mov
jnp
std
rolb
mov
push
in
mov
dec
mov
mov
or
dec
popa
and
inc
scas
js
fs
inc
push
movsl
add
jbe
shlb
ja
data16
jl
pop
inc
ret
push
test
je
or
or
add
fistl
je
pop
adc
bound
jge
mov
adc
je
movsl
adc
and
xchg
outsb
mov
and
jo
inc
mov
cmp
mov
in
dec
push
ds
inc
lods
adc
test
add
xchg
sbb
xchg
clc
push
add
dec
mov
or
add
sub
fsubl
inc
add
hlt
add
add
hlt
xor
mov
test
add
cmp
cmpsb
cli
cld
jbe
push
sub
loop
xchg
xor
insl
and
insb
and
data16
adc
loopne
xor
sbb
dec
push
pop
and
and
push
push
je
adc
call
or
or
test
or
stc
sbb
or
pop
mov
mov
inc
push
ja
ja
mov
xchg
test
adc
and
inc
xchg
mov
mov
inc
mov
mov
xchg
addl
inc
push
insb
jo
popa
inc
inc
cmp
fs
sti
pop
and
sbb
test
jne
inc
cli
sarb
pop
sbb
mov
dec
test
pusha
push
loope
pop
lahf
dec
pop
popf
icebp
aas
lods
or
test
lods
sub
cmpl
popf
subb
pop
mov
enter
and
jns
cmp
popa
shrb
add
in
fcompl
mov
jo
push
pop
rcll
add
cmp
lahf
cltd
inc
xchg
mov
inc
hlt
shl
mov
inc
xchg
xchg
lds
push
mov
fcoms
in
shlb
ficompl
pop
fidivl
rclb
cld
sbb
xchg
cmp
jp
jecxz
cmp
sbb
std
dec
in
xchg
sub
mov
mov
or
sub
ds
clc
andb
push
add
lret
xor
pop
push
pop
movsl
push
pop
xor
cmc
out
mov
repnz
nop
jge
pusha
sbb
mov
call
mov
add
lods
inc
pushf
adc
pop
les
fsubs
push
xor
push
and
jle
cmp
mov
outsb
mov
push
in
lret
sub
stc
mov
and
cmp
jge
add
adc
pop
mov
mov
outsb
das
lcall
cmc
mov
outsl
push
cs
inc
or
fxch
inc
push
nop
inc
mov
xchg
push
ret
jnp
bound
test
add
and
cwtl
mov
popa
clc
lods
dec
sbb
aam
repz
mov
mov
sbb
and
sar
rorb
pop
mov
push
sub
xchg
or
inc
xchg
cld
int3
and
cmp
xor
pop
adc
pop
and
cs
clc
mov
loopne
pushf
jae
ret
ret
out
jno
adc
and
popf
mov
mov
test
cmp
sub
and
sbb
sub
push
adc
xchg
push
dec
imul
cmc
xor
mov
incb
ds
and
add
nop
test
cmova
mov
push
lahf
and
cmp
add
or
push
mov
ljmp
sbb
adc
and
inc
and
nop
sub
xchg
rclb
dec
xchg
cmpsb
sub
dec
push
test
insb
aam
mov
fdivs
inc
dec
inc
in
lods
dec
push
xor
mov
mov
rclb
mov
mov
add
les
xchg
or
cmp
dec
pushf
jge
xchg
sbb
test
mov
sub
ljmp
mov
shll
rcrl
orb
sub
xorl
mov
and
cmp
mov
or
into
lea
nop
xor
xchg
stc
pop
jns
fcoms
movsb
lods
outsl
jge
sub
stos
pop
sub
ret
pop
dec
push
xchg
ret
mov
or
outsb
jnp
sbb
arpl
sbb
popa
enter
push
inc
js
lods
imul
push
or
sub
xor
and
cwtl
push
lods
repnz
jns
insl
mov
push
dec
or
sbb
and
in
mov
pushf
mov
fistpl
fldenv
mov
loopne
lahf
lods
nop
sub
adc
leave
outsl
call
mov
dec
jmp
and
inc
icebp
sub
mul
xchg
call
imull
inc
das
lods
xor
xor
inc
xor
enter
xor
inc
aaa
mov
or
cs
cmp
jge
lock
mov
cmc
inc
inc
mov
fcomps
xchg
cmp
mov
fs
mov
and
lds
int3
push
add
aad
jecxz
jae
or
or
or
rclb
jne
mov
and
jo
xchg
pop
xchg
aad
js
fsubs
je
cmpb
in
nop
pushf
adc
mov
mov
lods
or
push
ja
je
or
adc
dec
ret
cltd
adc
movsb
in
adc
mov
je
mov
mov
fldt
test
add
sbb
test
nop
loopne
into
test
loop
lret
mov
movl
lcall
fwait
pop
push
lea
cmpb
mov
roll
stc
cld
in
inc
ss
cmp
push
cmpsl
out
ficompl
rclb
dec
adc
xor
dec
xchg
mov
sbb
bswap
insb
fcom
lcall
jne
push
popa
fmuls
xchg
push
cmp
loop
mov
lock
lcall
lods
pop
sarl
mov
sub
xchg
aad
ret
push
sub
jmp
ds
mov
and
outsb
loop
jnp
sub
push
dec
aad
out
sbb
xor
adc
mov
and
cmp
cmp
cmpsl
in
push
xor
pop
out
leave
dec
xor
addr16
and
leave
jmp
jns
dec
dec
stos
cmp
xchg
push
pop
stos
fcomi
fs
mov
cmp
xlat
inc
je
cltd
cmp
sub
push
sub
inc
jmp
jl
mov
outsl
push
mov
adc
int
adc
lretw
ss
and
testl
pop
push
mov
pop
enter
cmp
push
sub
je
adc
jmp
imul
fs
stc
stos
daa
xchg
push
mov
push
lcall
or
insb
jo
or
std
ret
sub
inc
das
in
scas
lods
xchg
add
loopne
lea
pop
xchg
jmp
jl
push
mov
adc
cmp
adc
mov
imul
adc
push
test
dec
cli
jge
xchg
fs
push
cmp
in
or
xchg
jg
xchg
xor
stos
sub
mov
das
inc
pop
sub
jle
into
jg
or
sub
or
pushf
push
popf
fnsave
rcrb
in
add
je
lcall
aad
lret
adc
inc
xor
mov
pop
das
and
push
sahf
push
mov
les
sub
cmp
enter
gs
repz
xchg
ja
fistl
and
loop
mov
sbb
test
or
dec
push
mov
dec
mov
nop
outsl
mov
pop
and
xchg
jne
stos
jo
or
xchg
insb
mov
adc
pop
mov
stos
push
inc
loope
movb
and
mov
or
cmpsb
adc
dec
mov
mov
mov
js
insl
cwtl
or
fisttpll
dec
rolb
adcb
popf
stos
cmovg
cltd
fsubs
cli
mov
inc
aam
mov
int
das
scas
sub
hlt
xchg
sub
cli
cwtl
cmpb
adc
fstl
adc
jne
jge
inc
or
cwtl
pop
test
add
pop
or
add
and
fwait
inc
xchg
cmc
cmp
xchg
add
dec
jmp
fidivl
mov
in
xor
clc
or
add
movsb
repnz
mov
adc
rclb
fcom
push
jp
pop
inc
pop
sub
cwtl
mov
lea
test
adc
int
data16
dec
ljmp
or
ret
filds
xor
mov
pop
fucompp
rorl
ret
shll
pop
inc
call
xor
sub
lret
inc
and
cmc
mov
es
aad
test
push
jo
jge
inc
ljmp
sbb
push
aam
pop
mov
test
mov
je
popf
fstpl
adc
ja
xchg
das
pop
sub
jge
pop
lods
jne
push
fidivl
jae
jno
and
in
inc
lcall
jmp
movsl
cmp
je
insl
movsb
or
shrb
mov
pop
test
imul
jp
mov
leave
and
push
xor
dec
pop
pop
adc
fs
sti
bnd
or
jge
or
cmpb
xchg
fcoms
pop
lds
dec
pop
scas
xorb
adc
adcl
xor
pop
xchg
fbld
in
ret
jo
test
sub
dec
movsl
dec
std
iret
mov
adc
mov
xchg
nop
push
leave
pusha
jg
in
mov
add
ds
nop
push
sahf
jecxz
xorb
mov
xor
jge
add
pop
push
push
cltd
seto
push
inc
pop
repnz
push
inc
repnz
xor
ds
jle
clc
je
imull
insb
mov
jns
nop
lods
xchg
movsb
cmp
lret
xchg
and
xchg
adc
sbb
xor
jmp
and
mov
mov
xlat
popf
das
fistpll
loopne
xor
jle
aad
push
mov
push
xchg
lahf
les
mov
add
sahf
dec
std
xchg
jmp
ljmp
inc
cld
pop
push
inc
or
add
add
or
dec
rolb
and
xor
push
sbb
dec
and
enter
fmull
adc
sub
aam
movl
push
or
lds
lds
jmp
call
push
cs
lds
or
sahf
js
inc
dec
add
or
push
pop
cmc
popa
adc
das
jnp
xlat
xorb
in
std
push
lock
adc
cmpsb
cmp
jne
test
lea
mov
test
push
xorl
xchg
inc
mov
cmp
and
and
cli
xchg
pop
cmp
and
or
inc
cmp
push
cmpsb
pop
xor
xchg
jo
testl
push
inc
daa
mov
sbb
xchg
lds
test
scas
cmpsb
sti
and
dec
ret
jno
shll
mov
iret
pop
jp
cmp
pushl
in
mov
sub
sub
hlt
lock
pop
adc
cli
or
pop
jne
in
sub
add
jle
and
push
add
adc
lcall
lods
aas
ficoms
rcrb
jo
jl
pop
dec
pop
cli
fisttpll
or
and
jb
aam
cmp
pop
cli
iret
das
pop
call
stos
clc
and
sbbl
jns
out
sbb
push
add
xor
fmull
arpl
inc
jns
clc
xchg
or
mov
sub
mov
fmuls
inc
dec
test
sbb
cld
ds
test
and
test
and
pop
xchg
adc
stos
fwait
xorb
nop
or
jp
iret
sbb
mov
jb
sub
dec
jp
push
cld
inc
jbe
scas
jo
cmp
clc
setl
pop
lds
hlt
push
daa
mov
or
push
mov
jge
popa
or
nop
sub
mov
in
mov
mov
push
xchg
out
das
aaa
mov
shlb
adc
repnz
xor
les
test
pop
aam
leave
mov
fsubs
adc
andb
pop
push
dec
or
lea
aaa
mov
stc
push
sub
mov
fs
dec
sub
pop
and
bound
pop
imul
mov
js
mov
jge
enter
sbb
mov
xlat
or
pushf
fsubr
pop
nop
sbb
cld
outsb
push
pop
add
mov
ficompl
insl
cwtl
and
dec
xchg
rcll
sbb
xor
mov
dec
xor
dec
push
mov
push
pop
and
push
or
mov
jne
or
scas
dec
jno,pn
imul
push
mov
xlat
inc
in
xor
xchg
lahf
dec
mov
orb
decl
in
mov
repz
pop
loopne
adc
idiv
push
adc
xchg
pop
xorb
add
aas
in
fsubrs
cmp
sbb
and
push
adc
cmpsl
clc
jnp
mov
leave
scas
ljmp
out
or
mov
cmp
adc
shr
xchg
loop
repnz
mov
or
mov
bound
pushf
aam
jg
dec
mov
mov
push
pop
push
dec
in
dec
cmpsb
adc
add
and
xor
inc
dec
push
pop
sbb
lods
adc
push
inc
push
jl
and
dec
popf
sahf
dec
xor
jmp
xor
adc
push
ja
jne
in
cmpsl
and
mov
test
cmp
fucomi
in
call
inc
nop
mov
fmulp
and
fldl
pushf
mov
out
fcomps
bound
in
mov
pop
xchg
addl
cmp
push
loop
ret
mov
orl
sbb
pushf
push
mov
mov
xchg
push
test
rolb
ljmp
and
mov
mov
ret
repz
sbb
jae
xor
or
pmulhrw
dec
add
add
fs
jmp
adcb
inc
sub
cltd
out
mov
divl
cs
sub
push
rcrl
bound
mov
or
rorb
inc
pop
popa
rorb
mov
inc
out
out
and
or
xchg
mov
mov
push
lods
testb
je
jnp
adc
std
mov
and
jnp
pop
push
sbb
dec
xor
adc
imul
unpcklps
lock
sub
push
or
in
mov
push
xor
mov
add
repz
loopne
inc
jmp
xchg
out
mov
and
pop
in
mov
and
pop
data16
xchg
inc
jno
pop
jecxz
jp
cs
adc
push
sub
pop
test
mov
lret
aad
xor
into
mov
jne
or
int3
sub
mov
jmp
jmp
and
nop
fisttpl
dec
xlat
sbb
fdivrp
sub
outsl
or
or
ja
jmp
popa
sub
sar
jge
inc
das
xchg
mov
nop
aad
or
pop
div
cmc
xchg
add
insl
jl
push
mov
sub
push
ret
or
adc
xchg
mov
or
and
movsl
mov
jns
lret
and
adc
jl
jo
test
movb
ret
inc
test
mov
loop
xchg
scas
pushf
iret
push
mov
mov
push
and
hlt
lcall
rolb
sbb
and
stos
sub
jp
adc
jl
js
add
cld
sbb
inc
cmp
jne
sbb
pop
inc
inc
cmp
jne
adc
test
xor
and
pop
gs
and
mov
or
pop
mov
imul
add
xchg
loop
leave
jb
es
nop
push
adc
inc
rorb
leave
mov
push
fadds
aam
push
ret
jmp
inc
mov
cld
subb
jge
mov
movsl
pop
mov
loopne
popa
lcall
bts
sbb
and
sti
and
xchg
or
cmp
mov
inc
sub
je
adc
std
xchg
or
mov
xor
and
je
mov
dec
inc
cs
fsubrl
sub
cmp
lods
xor
jbe
das
xor
rolb
mov
test
cmp
adc
movsb
in
xchg
push
cmp
jmp
xchg
shrb
mov
and
or
es
aaa
and
scas
push
sar
int3
cmp
cmpsb
or
cmp
loopne
mov
fsts
incl
inc
hlt
jecxz
xlat
out
sub
sub
dec
mov
fadds
and
movl
mov
outsb
fwait
sbb
cli
es
adc
mov
jl
out
les
adc
outsb
pop
adc
aad
aam
dec
loopne
jno
test
adc
clc
mov
xor
in
lcall
sub
sahf
clc
xor
mov
mov
jo
movl
pop
sub
add
lret
nop
or
adc
push
adc
or
test
inc
and
call
push
lret
sub
dec
pop
and
and
mov
lcall
mov
ret
idivb
cli
sbb
and
xchg
je
fiaddl
cmp
or
fldl
les
adc
test
mov
xchg
inc
insl
add
mov
dec
mov
inc
sbb
adc
push
or
pop
ret
mov
sbb
les
pop
sbb
adc
fisubs
xchg
and
and
pop
enter
mov
mov
mov
jne
inc
fnstcw
fdivrl
xchg
or
inc
test
jo
lds
out
lret
jno
or
sbb
and
jns
push
cmc
fldenv
mov
test
add
jne
ljmp
mov
stc
push
and
jge
cmpl
push
idiv
mov
addr16
push
movsl
scas
mov
je
in
and
mov
mov
je
sub
or
pushf
insb
testl
sbb
sub
sbb
sbb
adc
inc
add
adc
lcall
das
lret
in
mov
push
inc
mov
mov
nop
mov
sbb
fwait
or
lcall
sbb
test
and
mov
jg
enter
jb
sub
fs
sub
mov
sub
sub
or
shll
pop
in
enter
dec
cs
fs
les
out
in
adc
pop
sub
mov
shlb
adc
mov
push
lock
movsb
cmp
clc
jne
dec
jge
mov
and
pushf
lcall
les
push
ret
inc
je
arpl
aaa
nop
cwtl
mov
sbb
ljmp
or
enter
add
popf
je
imul
sbb
mov
mov
xor
scas
cwtl
mov
mov
pminsw
pop
and
add
cmp
dec
jo
iret
repz
sub
mov
je
push
sub
adc
mov
pop
das
inc
xor
fisubs
jge
imulb
fsubs
lea
sub
push
or
sub
dec
arpl
sbb
jne
inc
push
fidivrs
rcl
mov
mov
sbb
sub
mov
cmp
test
inc
jne
mov
std
and
test
nop
hlt
sbb
enter
scas
cltd
and
and
dec
les
mov
push
push
adcl
push
dec
adc
push
repz
orl
mov
jg
jmp
lea
inc
fcomps
in
or
sub
outsb
jae
push
pop
enter
pop
mov
scas
push
xchg
cmpsl
xchg
push
sub
jmp
orl
addb
adc
out
sub
js
xchg
mov
mov
ds
sub
movq
les
and
js
inc
add
push
aas
ret
push
adc
je
and
mov
in
adc
fs
sbbl
jb
pop
add
inc
sbb
sbb
and
test
or
xchg
add
push
stos
sub
sub
mov
mov
push
mov
sub
inc
push
stc
add
adc
movsl
adc
mov
xor
stos
push
cmp
dec
xor
adc
mov
xchg
lods
push
shll
sbbl
xor
cmp
sub
jns
mov
and
mov
ret
sbb
xor
iret
push
or
mov
inc
les
adc
sbb
jno
adc
loop
xchg
fs
shr
repnz
out
xchg
jo
mov
xchg
add
push
sub
fadd
sub
xorl
pop
jl
sbb
sbb
add
add
test
daa
pop
cmp
mov
sub
clc
jge
inc
jle
cmpsb
sub
lods
imul
imul
shlb
into
jne
jne,pn
pop
add
shrl
lcall
adc
push
dec
xlat
jns
fisubrs
jle
and
rclb
mov
enter
dec
and
test
out
cmp
popa
mov
sbb
xchg
or
or
push
and
xor
jne
pop
and
cmp
or
fnstenv
pop
push
mov
xchg
add
sub
dec
xchg
mov
push
aad
or
push
data16
cmp
xor
imul
jmp
and
jne
push
testb
mov
shll
movsb
and
loop
lods
inc
xor
sub
rcrl
test
jbe
jb
jmp
push
xchg
push
cmp
ss
pop
call
pop
sub
scas
cmpsl
inc
rolb
sub
xor
mov
insb
insl
mov
mov
pop
movsl
mov
fs
addr16
std
les
adc
jp
sub
cmpb
inc
push
cmpl
shl
or
dec
jns
lahf
jne
cli
dec
in
nop
test
sbb
cmp
inc
cmpsl
out
out
xchg
sbb
mov
mov
rorl
fmull
js
jp
adc
daa
fldenv
movsl
inc
xchg
xor
rcr
sub
imul
test
pop
inc
mov
adc
mov
loope
mov
scas
cmpsb
orb
or
push
inc
jl
push
jl
push
rol
js
test
push
and
dec
push
jbe
adc
loop
sbb
fildl
hlt
sbb
aaa
adc
into
rcrl
sub
push
rcll
mov
leave
repnz
and
xchg
lock
rol
scas
cmpsl
pop
nop
aad
jne
jbe
les
dec
loop
jo
lock
in
xor
ja
daa
or
gs
loopne
sub
adc
hlt
mov
xchg
sbb
lea
jb
jnp
aam
stc
cmp
push
cs
mull
fldt
sbb
inc
add
push
push
aam
pop
ret
adc
test
pop
cmp
nop
movsb
cli
mov
int
sub
in
jo,pt
cld
inc
add
bound
or
sub
mov
lock
or
sub
test
inc
dec
add
test
dec
sti
in
sub
or
mov
loopne
sbb
xchg
mov
fs
mov
fists
dec
jmp
push
pop
mov
mov
ljmp
inc
outsb
push
mov
cltd
adc
xchg
cmp
jmp
xor
ja
mov
test
adcl
jp
inc
sbb
inc
push
pushl
std
xchg
mov
jo
push
xchg
mov
sub
jl
jo
jle
dec
out
or
dec
push
xchg
or
js
xchg
outsb
nop
mov
xchg
movsb
andl
xor
pop
and
mov
dec
mov
out
xchg
pop
push
push
push
mov
xchg
jg
lock
outsl
xchg
mov
inc
pop
cli
add
pop
cld
sbb
adc
dec
adc
push
pusha
shlb
aam
cltd
ds
pop
mov
movsb
out
mov
push
insb
xchg
jmp
dec
jnp
xchg
pop
mov
push
shll
pop
gs
xor
sahf
mov
mov
xchg
lret
fisttpl
sub
jmp
xlat
sub
out
xor
sub
xor
adc
dec
dec
or
daa
sub
add
shl
cmpsb
loope
sub
orl
and
stos
and
insl
icebp
notb
bound
xchg
aam
adc
scas
decb
jmp
push
stos
test
xchg
inc
lret
lahf
shll
imul
mov
inc
sbb
mov
pop
mov
xlat
int
xchg
xchg
dec
test
repnz
or
cmp
inc
jle
pop
mov
jp
cltd
jb
xor
outsl
fisubrs
and
inc
or
lds
les
mov
sbb
adc
jp
test
das
int
cmpsl
loop
fcoms
movsl
inc
push
mov
inc
jo
pop
icebp
push
dec
das
cmp
pusha
movsl
cmp
mov
adc
sub
or
sbb
sbb
in
push
ljmp
mov
or
and
lret
outsb
fisttps
adc
push
mov
arpl
cmp
js
cld
hlt
mov
push
sbb
lahf
aam
jle
loopne
daa
dec
sti
sbb
inc
or
popf
cmp
loope
movsb
ljmp
sbb
xchg
fnstenv
push
lods
movsl
mov
pop
xchg
cmp
or
enter
aas
stc
cs
push
leave
jge
ljmp
shrb
dec
pop
jne
imul
xchg
fidivl
add
adc
push
xchg
sbb
and
popf
sarl
jl
jge
jl
imull
inc
adc
pop
push
lods
les
sbb
mull
daa
or
mov
dec
dec
dec
enter
inc
lret
sub
cmp
outsb
testb
dec
adc
imul
popa
or
loopne
push
push
mov
push
stos
test
mov
cmp
mov
in
jb
call
jmp
les
mov
test
jae
cli
js
leave
push
sub
fs
popf
mov
fwait
rclb
inc
in
movsb
aam
orl
dec
jmp
mov
daa
push
cs
nop
unpcklps
push
jl
gs
pop
pushf
inc
jp
push
loop
pop
push
repnz
sub
dec
cmp
test
test
xchg
push
sbb
inc
ret
rcrb
jo
in
inc
jns
cmp
daa
cmp
jne
push
outsl
jae
orb
icebp
dec
cmpsl
cmc
add
in
cmp
pop
dec
jb
cwtl
movsl
or
std
lds
push
mov
imul
rolb
sbb
xchg
adc
push
mov
xchg
dec
mov
jbe
xlat
inc
mov
xlat
std
js
rorb
movsl
push
data16
mov
hlt
jle
lods
mov
rcll
imul
in
pop
add
test
loope
or
sbb
and
aaa
push
leave
test
shr
sbb
ljmp
xchg
sar
jge
clc
ja
fisubl
cmpsl
movl
xchg
mov
mov
ja
sbb
cld
pop
and
shl
cmpl
mov
enter
sub
iret
dec
fxch
xchg
movsb
pop
inc
ret
imul
sub
or
stos
adc
shrb
or
mov
imul
mov
mov
inc
inc
xchg
lret
adc
aam
cmp
xchg
and
lcall
xor
or
lret
mov
push
inc
ret
and
cmp
or
outsl
pop
cwtl
jmp
lret
and
push
and
and
add
xor
inc
lcall
cmc
data16
push
pop
dec
push
inc
inc
push
jl
and
pop
xchg
fcoml
mov
cmc
das
fucomp
orl
sbb
in
push
and
inc
ror
es
aam
lods
pop
pop
push
adc
ret
loopne
test
jge
mov
lret
pop
hlt
and
cli
pop
push
shrb
jmp
jmp
dec
jmp
xor
sub
and
mov
inc
ljmp
test
out
mov
and
data16
xchg
sub
adc
add
aaa
ds
test
pop
addb
nop
gs
sub
mov
mov
mov
mov
add
cwtl
or
dec
add
add
addl
sub
lods
movsb
cld
fdivs
mov
sub
add
push
push
aas
jge
inc
repz
jl
fs
jmp
push
sub
and
sar
fsts
sub
inc
cmp
adc
xor
xlat
inc
lcall
adc
jmp
xor
xchg
stos
xor
scas
in
int
std
jmp
addl
xlat
dec
sbb
pop
test
fsubl
push
push
sbb
push
xchg
jb
pop
jne
or
sub
pop
pop
xchg
adc
dec
scas
mov
add
sub
add
add
add
loop
push
and
pop
ja
pop
popf
leave
mov
jo
sbb
cli
dec
mov
sub
nop
je
mov
dec
mov
mov
cmpsl
sub
jl
inc
lock
icebp
out
jp
dec
mov
adc
insl
gs
outsl
shrl
inc
fisttpll
stos
fmul
into
dec
jmp
or
je
mov
push
out
sub
lock
incb
cmp
push
test
imul
sub
inc
adc
xor
jno
or
xor
fiaddl
enter
hlt
fstps
lret
lock
mov
test
inc
mov
adcl
out
and
mov
inc
mov
icebp
or
pop
pusha
pusha
xchg
mov
clc
cmp
cmp
xchg
cmp
clc
cltd
idiv
sahf
mov
and
push
mov
daa
xchg
std
je
add
push
jno
and
pushf
mov
and
dec
hlt
popa
aaa
and
movlps
push
push
or
sbb
hlt
jne
mov
addl
dec
cmp
inc
inc
sbb
fs
and
and
jg
into
or
movsl
jne
xor
pop
or
add
adc
mov
cmovl
cmp
insb
mov
into
repz
js
jne
nop
mov
push
clc
adc
xchg
inc
leave
pop
out
cmp
mov
inc
aas
and
adc
inc
inc
adc
sbb
cwtl
cmpsb
and
and
push
jl
or
dec
inc
sbb
sbb
sbb
push
int
xchg
inc
movsl
lock
adc
repnz
movsb
pop
into
sub
adc
and
xchg
add
out
out
sub
jne
in
push
jp
lahf
push
fs
or
adc
call
push
push
movzbl
jl
jp
mov
aad
mov
sahf
arpl
dec
pusha
cmp
and
decl
jne
mov
movsl
test
arpl
scas
pop
sub
mov
sbb
xor
test
and
jg
lcall
dec
pop
in
and
cmpb
mov
push
mov
pop
fdivrl
and
rorl
fimull
mov
mov
jecxz
adc
out
mov
fistpl
and
mov
or
push
cld
dec
jne
bnd
loope
movsl
das
add
cmp
nop
sbb
repnz
pushf
push
push
cwtl
cmp
sbb
inc
lods
dec
std
in
popf
loopne
test
adc
outsb
call
xor
mov
push
mov
mov
sbb
jnp
sub
inc
or
inc
pop
pop
sbb
cltd
push
or
jle
subl
mov
mov
dec
push
in
mov
sub
sub
xchg
sti
cltd
outsb
andb
adc
sub
shr
xchg
imul
sub
pop
pushf
popa
dec
jle
sub
aas
and
cli
sbb
inc
pop
pop
and
scas
sbb
js
mov
pop
push
mov
push
pop
dec
pop
mov
or
push
dec
loope
dec
dec
push
pop
mov
xchg
sub
daa
enter
je
jne
xchg
add
cmpsb
or
std
insb
and
push
mov
shrb
pop
inc
jne
mov
push
or
jmp
pop
sub
push
add
push
fiaddl
out
sub
sub
xchg
adc
cmp
jle
fidivrs
iret
jmp
loopne
xor
ret
shrl
mov
aaa
movsl
mov
jp
stos
dec
mov
jl
out
ljmp
mov
mov
mov
inc
xchg
nop
adc
les
imul
push
dec
and
sub
imul
test
dec
aad
into
xor
ficompl
mov
xor
push
into
je
adc
stos
je
xor
bound
xor
push
jle
pop
pop
aas
sbb
stos
fs
cmp
lock
icebp
and
addr16
jmp
iret
shll
adc
mov
xor
jmp
ss
lock
in
sarb
ljmp
push
jo
jae
stos
mov
lahf
mov
cmc
inc
shlb
movsl
jl
fs
jl
movsl
cmpsb
stos
dec
ret
ss
test
push
setg
fs
pushf
push
xchg
push
rorl
or
rcrl
xchg
dec
aam
insb
add
push
clc
scas
popf
ret
pop
mov
sub
leave
push
cli
in
outsb
cmpsl
fnsave
pop
pop
imul
dec
in
les
test
push
insb
push
cmpl
push
add
push
mov
mov
push
int
mov
mov
mov
rcrl
loopne
mov
sub
lret
sbb
dec
in
push
call
and
out
sbb
cmp
and
adc
in
lret
fldenv
add
cmp
enter
notl
call
fisubs
lcall
pop
mov
pop
stc
loopne
loop
xchg
fcomi
je
cmp
pusha
pop
repnz
xor
dec
clc
push
mov
xchg
mov
inc
int3
adc
scas
mov
inc
enter
int3
ljmp
adc
sub
fs
ds
sub
cli
enter
imul
fldl
in
sub
mov
inc
mov
call
sub
dec
es
daa
jg
mov
jle
sahf
xchg
mov
stc
mov
mov
mov
test
sbb
xchg
xor
repz
dec
lcall
stos
xor
int3
cs
xchg
jnp
jmp
pop
xor
sub
jge
xchg
test
je
jle
mov
ljmp
lds
and
mov
orb
dec
add
pop
adc
jae
jl
test
sub
jmpw
adc
cmp
insb
in
adc
jmp
loope
push
scas
sub
dec
mov
mov
or
pop
push
sbb
push
pop
fdivr
icebp
inc
or
icebp
insb
repnz
jge
ds
push
fdivr
and
push
bound
std
push
xchg
inc
cs
adc
jmp
adc
lods
and
sarb
add
insb
bound
jnp
mov
ret
cmp
mov
fisubrs
jecxz
dec
jne
inc
or
pop
xchg
dec
inc
inc
shlb
mov
sub
pop
and
dec
clc
mov
jb
in
mov
es
push
mov
mov
push
hlt
dec
call
mov
push
retw
jne
leave
jo
mov
pop
push
cmp
push
nop
adc
shlb
cld
nop
mov
das
jne
sbb
add
jp
fisttps
pop
ror
std
subb
icebp
mov
or
mov
jns
push
and
lcall
pusha
sub
enter
mov
cld
pop
xor
dec
imul
jl
sbb
aad
or
mov
inc
or
ss
pop
sub
push
dec
xchg
repnz
das
inc
insb
jae
mov
call
sub
and
iret
loopne
fiadds
loop
aas
sub
adcb
cmc
adc
adc
or
xchg
xchg
inc
enter
or
xchg
push
mov
jo
mov
or
fcompl
adc
scas
dec
mov
and
inc
cmp
inc
push
dec
xchg
inc
inc
jbe
cmp
pop
roll
inc
sub
inc
dec
loop
push
cmc
or
icebp
lods
in
sbb
xor
add
sub
cwtl
adc
pushf
and
mov
scas
js
aam
add
dec
pushf
mov
imul
xchg
out
cwtl
ljmp
adc
out
or
lock
xor
sti
xchg
mov
test
push
mov
add
out
push
mov
adc
mov
pop
lahf
push
push
mov
js
insl
test
jns
xchg
in
lahf
aam
int3
cmp
xchg
cwtl
data16
jae
gs
dec
push
mov
sub
mov
inc
inc
sub
sbb
popf
pop
adc
sarl
push
movsb
xchg
cltd
stos
jle
and
xlat
sahf
xchg
daa
push
out
mov
mov
push
mov
mov
pop
xchg
fiaddl
loop
cmp
jmp
jbe
insl
mov
xcrypt-ofb
cmpsl
insb
ss
pop
stos
jb
in
push
insl
insb
test
in
push
lea
notb
lods
cmp
fs
sbb
cmp
cmp
and
inc
mov
sub
loop
xor
mov
mov
cmp
pushf
loope
js
push
pop
andb
mov
xor
inc
pusha
mov
insb
sbb
jo
popa
aas
and
je
pop
lea
xchg
je
jl
inc
pop
enter
pop
mull
adc
jne
jo
add
jne
stos
sahf
cmp
or
std
orb
cmp
jo
pop
popf
pop
or
test
jne
movsb
popa
daa
pop
dec
push
cmp
shlb
inc
dec
cmp
je
cmpl
sub
stos
sahf
mov
or
into
das
rolb
or
cmp
add
xor
insb
pop
xor
mov
into
ret
test
and
inc
and
shrb
sub
mov
or
mov
jne
xchg
push
pop
push
fs
inc
pop
push
mov
fwait
test
les
sbb
or
mov
pop
add
jo
cmpl
xor
aam
dec
push
aas
into
iret
xor
mov
popf
lahf
lods
and
movl
jae
jne
cmp
and
cwtl
cli
adc
test
mov
inc
or
pop
sbb
cmpsb
mov
mov
xor
leave
jno
xchg
in
sub
jl
movsb
cwtl
daa
fdivrs
pop
adc
pop
outsb
fwait
shlb
aaa
xor
arpl
push
xor
cmpsl
pushf
inc
enter
lea
enter
mov
cltd
idiv
arpl
data16
jmp
lock
jl
out
aam
mov
nop
sub
xor
pop
inc
xor
hlt
xor
testl
jle
and
ret
jmp
lret
or
sub
imul
add
loopne
dec
or
xor
call
jne
add
lahf
push
daa
inc
mov
mov
mov
sub
jno
cmpb
add
mov
dec
clc
pop
pop
push
cmp
push
gs
push
xlat
pop
cwtl
or
dec
das
lods
inc
hlt
and
xchg
in
decl
and
bound
lahf
pop
or
mov
dec
and
lahf
inc
pop
mov
cmp
shr
sarb
jne
data16
mov
movl
xor
or
es
aaa
dec
sbb
or
push
or
pop
pop
and
pop
add
in
jb
outsl
jno
xlat
cli
je
cltd
rcrl
xor
std
cli
ficompl
nop
je
out
adc
jmp
lods
jo
stc
mov
inc
frstor
fs
out
insl
cwtl
outsl
mov
popf
scas
stc
sub
pop
js
ds
pop
daa
lret
sub
xchg
or
xchg
testl
in
adcl
inc
dec
sub
mov
sub
clc
jl
inc
jle
adc
jae
or
sbbb
movsl
sub
lock
stos
jae
pop
add
sbb
cs
sbb
clc
mov
push
sbb
dec
jne
mov
add
xor
dec
faddl
clc
mov
fwait
sub
hlt
mov
insb
push
or
cmc
stc
xor
add
and
mov
mov
out
sub
sbb
and
outsl
mov
push
or
inc
adc
sbb
xchg
loopne
xlat
inc
adc
sbb
push
adc
lahf
sbb
sbb
dec
add
jp
push
push
cmp
jge
push
sub
fs
dec
xchg
fwait
jle
dec
inc
mov
sbb
ror
dec
or
fxch
adc
imul
in
cli
sub
sti
dec
push
or
sarl
push
sbbl
aaa
les
stc
arpl
icebp
mov
repnz
mov
pop
mov
dec
xchg
pop
call
adc
mov
fidivl
cmpl
imul
pop
push
add
push
and
mov
hlt
movsl
mov
push
mov
mov
movsb
dec
lods
out
ja
dec
mov
jl
xor
dec
stc
mov
mov
cmc
fldt
dec
and
cmc
enter
imul
test
mov
inc
shr
inc
lahf
dec
or
jo
or
jmp
nop
cmpsl
movsb
cwtl
jno
adc
js
inc
inc
or
sbb
push
dec
into
jle
sbb
add
cmp
ss
and
fwait
cmp
mov
jns
inc
xor
or
int3
xchg
ss
pop
cld
adc
inc
add
in
rol
push
shlb
mov
test
cmp
adc
shrb
add
stos
or
fistpll
jo
jmp
hlt
aad
mov
push
mull
add
jge
in
das
push
mov
pop
scas
mov
call
inc
jns
movsb
sub
xor
and
or
add
lods
push
ss
sub
adc
outsb
imul
ja
inc
lcall
fdivrl
cli
inc
into
sub
stos
dec
test
and
xchg
mov
sub
mul
adc
xor
fadds
xor
call
inc
mov
pop
cmp
cmp
cmpsl
aam
and
mov
inc
arpl
push
inc
lock
sub
xchg
pop
fldenv
bound
mov
cmp
xchg
test
out
lret
lods
cmp
xchg
aam
test
or
les
out
jg
cmpsl
fsubrs
xor
jne
inc
aam
sbb
mov
sub
xchg
test
mov
adc
push
lea
xor
push
fildl
in
sbb
xchg
aas
lret
daa
shl
sub
and
cmp
jb
sbb
or
jl
and
pop
lock
push
push
sub
add
jae
mov
pop
mov
inc
lret
mov
dec
adc
mov
nop
outsl
mov
nop
add
adc
cld
notl
shlb
xchg
push
sbbl
jno
and
xor
lea
lea
sub
repnz
xor
dec
cmp
xchg
arpl
std
add
test
or
iret
ret
xor
adc
dec
cmp
xor
push
xor
das
or
mov
dec
imul
in
lret
out
push
mov
in
xor
adc
mov
aad
sbb
mov
adc
lods
push
and
sub
nop
fsubs
aam
cmp
mov
ljmp
int
movsl
xchg
pop
push
push
ljmp
mov
cmp
pop
in
mov
mov
clc
wbinvd
jle
mov
hlt
add
mov
mov
sbb
pop
clc
aad
idivb
or
fcmovbe
sahf
push
or
sub
dec
push
fsubr
add
test
add
xor
or
xor
xor
xor
ss
aaa
cmp
lods
sbb
mov
sbb
xchg
adc
mov
inc
pushf
jl
cs
dec
scas
aam
add
cmp
jge
pop
arpl
clc
push
pop
clc
test
decb
dec
mov
inc
add
dec
pushl
adc
out
inc
or
jle
mov
jne
add
or
rep
mov
sbb
and
ret
pop
push
ljmp
ret
push
push
push
hlt
pop
mov
mov
adc
jns
xchg
adc
xchg
xchg
pop
mov
inc
xlat
enter
mov
js
hlt
push
mov
nop
jns
hlt
xchg
lods
iret
pop
mov
test
sub
dec
and
out
das
jne
out
imul
sub
cmp
push
aam
stc
adcb
push
mov
pop
imul
xchg
stos
inc
xor
sbb
in
sarl
push
sub
hlt
sbb
xor
daa
jmp
pop
adc
fnstcw
les
loopne
add
pushf
sbb
pop
in
bt
incb
xchg
sbb
in
push
repnz
mov
adc
scas
fstl
push
or
mov
and
dec
dec
add
jo
push
fwait
push
popa
jle
es
sbb
dec
ror
push
add
xor
jb
and
fnstenv
cmp
pop
lea
sbb
cmpsb
dec
or
das
or
pop
push
xchg
test
sub
das
hlt
inc
ss
xchg
mov
mov
or
cmpb
addr16
push
lret
mov
mov
push
cmp
push
je
sub
xchg
cmp
pop
add
sbb
cld
addb
xor
or
out
inc
dec
mov
das
je
fistpl
push
int3
enter
inc
rcrb
shl
sub
add
dec
or
pushf
mov
je
and
mov
xchg
inc
test
and
test
push
push
xor
jmp
mov
fimuls
fsubrs
xchg
adc
pop
mov
icebp
adc
sbb
loop
push
push
add
adc
sub
pop
mov
mov
or
andl
add
inc
inc
ret
and
loopne
dec
mov
in
std
clc
sub
sub
pop
xchg
inc
push
and
xor
out
std
gs
and
ret
sbb
in
daa
mov
enter
cwtl
pop
xor
mov
adc
or
nop
mov
push
aad
and
inc
call
das
ret
gs
sub
cmp
sbb
adc
jl
inc
lock
incb
sbbb
jmp
or
movsb
leave
pop
sahf
cmp
dec
inc
add
xchg
addl
xchg
test
add
shll
sub
sub
repnz
movsl
or
insb
mov
dec
mov
and
dec
jmp
dec
int
dec
jmp
push
lret
mov
in
pop
adc
mov
push
outsl
test
daa
nop
fcomps
mov
sbb
inc
xor
add
out
jb
imul
push
clc
add
jp
pushf
dec
lret
mov
adc
dec
and
adc
sbb
or
or
sbb
daa
dec
add
jo
sbb
adcl
clc
xchg
cmp
and
inc
adc
cmp
inc
cmp
inc
mov
test
inc
in
mov
adc
in
nop
ljmp
lock
sub
xlat
mov
and
lret
push
aam
and
xchg
outsb
fmuls
dec
pusha
xchg
mov
adc
push
pop
push
sub
hlt
call
call
inc
fmull
sub
jecxz
and
insb
xor
xchg
enter
pushf
ret
inc
hlt
dec
icebp
ja
push
push
or
mov
insb
movb
ficompl
sub
xchg
sbb
mov
cmp
adc
mov
mov
daa
add
repz
hlt
bound
add
or
jge
or
xchg
adc
mov
insb
in
call
push
pushfw
shr
stos
lahf
in
cmpsl
clc
push
inc
in
sahf
popa
inc
push
or
or
adc
and
das
pop
pop
es
mov
and
or
pusha
sub
adc
xchg
inc
leave
pop
call
sub
adc
xchg
jbe
outsl
and
lret
and
ret
mov
pop
pop
xchg
test
daa
xchg
stos
lret
cmc
ret
icebp
stos
cmp
and
jg
xor
loop
sti
mov
mov
mov
mov
addr16
xor
xor
ret
pop
lcall
adcl
hlt
scas
mov
adc
or
dec
mov
and
xchg
movsl
pop
je
lea
adc
jne
test
jl
or
dec
daa
popf
loop
push
push
loopne
jle
push
or
test
test
scas
mov
arpl
add
dec
mov
sbb
push
mov
repnz
inc
jne
in
push
adc
jg
mov
sub
cmp
sub
nop
adc
fadds
jmp
push
xchg
pop
push
add
sbb
and
xchg
sub
sbb
ds
js
adc
sbb
or
lds
jmp
repnz
inc
push
pop
and
adc
or
and
mov
push
pop
ret
mov
add
jmp
sub
inc
mov
mov
or
mov
cltd
aam
inc
cltd
add
or
or
jmp
xchg
loop
fists
das
adc
sbb
sbb
add
xor
decl
or
push
sub
and
test
das
data16
xchg
mov
pop
or
xchg
je
and
dec
lods
shr
hlt
and
lret
cmp
pop
movsl
jne
cmp
cmp
mov
xchg
inc
push
mov
or
jmp
add
push
and
or
and
mov
ljmp
add
into
and
xor
and
inc
jnp
xchg
lret
mov
pop
xor
adc
sti
add
jno
out
and
or
sub
adc
idivb
cmp
add
dec
mov
shrl
scas
ret
adc
lods
pop
dec
cld
rorl
addr16
je
enter
je
dec
stos
mov
bnd
or
in
adc
jg
dec
pushf
add
push
mov
cmp
xchg
jmp
dec
inc
sbb
int3
ss
push
sbb
and
adc
enter
insl
sub
inc
cmpsl
js
aad
or
dec
outsl
push
xchg
or
ret
xor
and
mov
and
xchg
fsubl
jle
ret
cmp
push
jno
mov
stos
cwtl
outsb
xchg
and
in
stos
int
sub
jo
popf
push
inc
das
cmpsb
mov
aas
sbb
sub
jne
xor
pusha
sar
mov
push
sub
cmp
sub
scas
cld
fnstsw
push
jns
xchg
jl
jmp
lock
out
fldz
sbb
cmp
hlt
jl
and
lock
adc
adc
aad
popa
pop
jmp
push
adc
inc
inc
adc
aaa
and
adc
leave
aad
loope
jp
and
mov
imul
mov
out
scas
sub
mov
mov
add
popa
push
xchg
push
adc
sbbb
cmpsb
sbb
cmp
repnz
push
xor
xchg
jge
add
xchg
adc
hlt
je
xor
cld
push
out
cmp
cld
xchg
jge
adc
push
out
and
add
dec
lods
aas
sbb
jb
sub
adc
scas
cs
daa
fcomp
cmpsw
aad
movsb
mov
repnz
mulb
addb
divl
ret
xchg
addl
aam
jns
add
sbb
cmp
jbe
pop
inc
dec
movsl
sbb
add
xchg
lret
jg
ds
xor
adc
or
mov
mov
pop
xchg
mov
mov
and
adc
aad
stos
jb
push
sub
inc
pop
cmp
push
xchg
push
bound
inc
mov
jbe
pusha
add
jmp
stos
and
nop
insb
add
icebp
int3
and
cwtl
mov
dec
mov
mov
insl
push
pop
adc
int
in
add
and
mov
push
add
inc
outsb
sub
mov
mov
adc
aaa
mov
and
adc
xchg
push
adcb
js
inc
sub
movsl
pop
scas
je
pop
push
and
jmp
adc
and
jo
fstl
pop
or
cmpsb
cmp
in
dec
jle
addb
xor
sbb
call
sbb
call
inc
divb
adc
add
scas
bound
sub
mov
cmp
or
das
test
push
sti
imull
lea
sub
pusha
mov
adc
push
clc
cmc
or
xchg
mov
in
in
jns
cli
sub
je
sbb
rcll
jo
pop
add
xchg
adc
mov
test
iret
pop
fbld
sub
or
in
sub
sbb
xchg
lea
pop
cmp
ret
lret
push
mov
mov
pop
push
inc
call
add
xchg
inc
enter
fstl
sub
inc
sbb
ret
inc
sbb
das
aad
jbe
in
icebp
arpl
xchg
inc
inc
xor
mov
and
sbb
outsb
test
xor
or
or
jbe
and
mov
mov
hlt
cmp
jl
inc
inc
lock
adc
cs
loop
pop
faddp
mov
pop
sub
mov
adc
adc
jmp
jp,pn
sub
imul
insb
outsl
adc
stc
out
jns
ja
cs
adc
sub
jb
je,pn
sbb
jae
int
cmp
aas
mull
or
mov
pop
add
lcall
mov
xchg
in
adc
mov
loop
jmp
fwait
push
imul
scas
stc
dec
test
clc
pop
pop
pop
aaa
in
dec
lret
in
test
add
push
in
add
add
gs
jno
xlat
inc
and
popa
xor
lds
inc
lods
pusha
push
jae
cmp
sub
inc
ficoml
jmp
stos
faddl
pop
mov
jns
adc
repnz
add
cld
push
loope
test
and
or
add
lahf
add
adc
dec
int
push
cmp
and
das
aas
inc
mov
pushf
sbb
lahf
sbb
popf
xchg
xlat
lods
push
les
lds
mov
out
clc
rorb
scas
xor
outsl
and
jmp
lock
out
and
int3
inc
test
xor
imul
leave
mov
inc
dec
ljmp
jp
jle
push
testl
aam
aaa
mov
pop
pop
gs
or
cmp
add
jecxz
pusha
pop
sbb
into
fwait
push
out
rcll
mov
sub
pop
adc
add
or
add
pusha
cmp
pop
clc
in
cmpl
orl
dec
mov
or
or
popf
xchg
or
mov
shrl
lahf
mov
loopne
jle
leave
pop
aam
dec
sub
xor
iret
mov
mov
int3
sti
shrb
inc
dec
or
dec
in
iret
fdivrl
or
divl
hlt
push
mov
or
outsb
lret
inc
push
in
xchg
insb
orb
mov
imul
movl
push
dec
inc
mov
sub
xchg
ja
pop
push
sbb
mov
and
inc
aam
andl
shlb
sub
mov
inc
add
cs
in
or
lea
insb
cwtl
add
or
push
push
sarl
pop
push
adc
adc
addr16
js
mov
push
push
in
repnz
or
cmp
and
inc
mov
sub
test
jns
sbb
push
cwtl
int
sbb
xchg
and
sahf
loope
ret
mov
aas
adc
fsubrl
inc
dec
add
leave
and
pop
and
in
mov
or
inc
imul
js
mov
push
mov
sub
mov
push
sub
loop
and
xchg
loopne
dec
fimull
lods
and
jnp
shlb
dec
mov
cmp
mov
inc
mov
and
stos
inc
lods
xor
cmc
mov
dec
mov
sbb
fdivl
addr16
mov
sahf
test
mov
jnp
movzbl
andl
rclb
int3
enter
sub
addb
inc
or
jge
jae
jne
into
mov
cmpb
xor
cmp
ds
lcall
negl
mov
mov
inc
sub
nop
sub
test
pop
clc
ret
sahf
pop
mov
cmp
xlat
clc
cmp
sbb
push
out
pop
dec
repz
sbb
mov
push
xchg
pop
jp
mov
sbbb
ficompl
add
pop
sbb
fmull
jle
add
and
addb
dec
out
push
dec
scas
fdivrs
je
lea
dec
sub
fcoms
dec
cmc
add
inc
scas
lods
or
mov
dec
stos
jb
sahf
pop
dec
mov
jmp
lods
sbb
test
and
pusha
movsb
jmp
imul
fs
pop
nop
inc
lret
hlt
div
inc
sbb
orl
cs
std
scas
cltd
arpl
adc
dec
dec
insb
rorb
loope
sub
push
dec
dec
jmp
mov
aaa
sbb
sub
dec
cmc
xchg
pop
and
mov
add
xchg
adc
inc
xchg
inc
mov
lods
or
mov
inc
lock
pop
inc
inc
mov
movsl
sub
mov
inc
xchg
testb
adc
addr16
inc
outsb
inc
push
ljmp
push
xor
and
inc
dec
pusha
in
pop
cmp
lock
push
jmp
cmp
repz
mov
and
rcll
xchg
push
cmp
fs
int3
xor
aad
pop
lret
icebp
pop
pop
pop
dec
sbbl
dec
sub
xchg
or
fisubrs
jmp
les
clc
mov
pop
xchg
cmp
add
mov
sub
push
int
out
ds
mov
aaa
add
jnp
int3
xchg
adc
mov
call
sbb
xor
or
je
mov
cmp
in
pop
xchg
sbb
sub
cli
mov
enter
cmp
mov
scas
fcoml
lods
enter
xor
mov
pop
xchg
ss
dec
orl
mov
fs
rcrb
je
or
sbb
inc
fadds
call
clc
lret
push
dec
pop
stos
cmp
in
or
sub
push
inc
sub
int3
push
dec
jno
mov
cmp
fs
cmp
xchg
sahf
jecxz
in
xor
and
adcb
and
fs
jo
pop
cmp
add
jb
fsubr
and
pop
lods
fmuls
movsl
or
movb
and
cmp
nop
test
inc
pop
jmp
popf
inc
pop
bound
or
add
out
shl
cmpsl
xlat
data16
mov
lcall
fcoms
sbb
or
outsl
mulb
aas
mov
sub
lret
inc
jecxz
mov
pop
xchg
iret
inc
loop
add
mov
push
lock
in
xor
fcoms
mov
push
adc
push
xchg
or
shl
pusha
push
popf
xlat
adc
pushf
cmp
in
push
out
movsl
pop
sbbb
dec
movsl
ljmp
cltd
dec
cld
or
mov
bound
nop
jge
mov
aas
lea
hlt
cld
lahf
mov
pop
js
test
ficoms
pop
hlt
mov
jl
imul
rol
mov
test
mov
push
push
adc
add
sub
jle
dec
jb
sbb
inc
mov
jbe
or
xor
call
xchg
in
cmp
mov
mov
xor
mov
adc
clc
jo
hlt
pop
stos
mov
sbb
inc
gs
push
test
mov
push
add
mov
stos
pop
sarl
xchg
or
and
fimuls
cmpsl
icebp
imul
outsb
movsl
jne
dec
hlt
jmp
ficompl
rorl
sub
xor
and
das
inc
lock
pop
xchg
mov
add
iret
mov
dec
pop
sub
stos
sub
enter
test
pop
fstpt
or
cmp
daa
push
dec
push
xor
nop
out
mov
fisubl
xlat
xor
add
sub
lods
lahf
nop
jo
push
shll
inc
scas
lret
sub
cld
les
psubw
inc
pop
dec
jne
jle
mov
mov
mov
repz
hlt
xor
xor
les
push
push
adc
out
jne
cmp
inc
jo
fwait
cmc
adc
push
sbb
je
shlb
and
sbb
dec
sbb
cwtl
xor
jle
xchg
and
fadds
leave
ss
add
mov
aaa
xchg
and
cmpsb
lock
dec
mov
adc
jge
cmp
dec
push
adc
call
mov
jge
and
aas
fistps
cld
fsubl
push
flds
and
and
int3
mov
push
xchg
pop
loopne
mov
push
add
xor
dec
imull
repnz
mov
ja
movsb
lret
cs
cli
js
stc
and
and
inc
jg
loope
int
mov
inc
jmp
push
jne
pushf
ljmp
sub
inc
cld
stos
jae
and
or
stos
jno
clc
jne
lea
and
fnstcw
jp
dec
or
cld
fbld
jle
es
xchg
push
mov
mov
test
mov
cmp
inc
test
pop
mov
rcrb
inc
cmp
fcompl
jno
add
push
and
test
adc
xor
inc
mov
out
mov
inc
push
mov
aad
inc
mov
sbb
mov
int3
mov
das
pop
add
pop
incb
jno
xchg
in
cltd
adc
aas
test
mov
and
xchg
push
icebp
adc
icebp
test
mov
mov
pop
inc
and
pop
push
ds
inc
fsubl
repnz
sbb
sbb
xchg
int
xor
and
int3
nopl
mov
jbe
sbb
jnp
sbb
jne
pop
adc
lods
inc
cmc
mov
mov
mov
adc
adc
mov
push
lahf
je
sub
mov
mov
pop
xchg
cltd
xchg
ret
mov
jnp
push
inc
in
xchg
mov
mov
mov
adc
test
xor
xchg
pop
add
clc
popf
stc
fsubrl
and
or
cs
push
dec
xor
hlt
andb
outsb
or
repnz
mov
stc
inc
dec
stos
adc
dec
mov
push
ret
pop
dec
push
les
add
pop
cli
je
and
sbb
and
in
cmp
push
lds
icebp
nop
aas
in
xchg
movsl
in
or
stos
mov
cwtl
sub
inc
mov
jnp
xchg
push
mov
push
lea
push
sbb
fcoms
adc
hlt
push
sbb
sysenter
dec
jae
ret
inc
mov
xchg
fs
mov
pop
pop
xchg
fidivrs
lret
stc
lea
and
jmp
lea
rep
int
push
jnp
xchg
ds
xchg
icebp
xchg
push
or
xchg
and
fdivrs
pop
test
aad
js
sub
mov
and
add
test
push
add
js
call
push
arpl
sbbl
pop
adc
mov
adc
enter
xchg
repz
pop
call
test
loope
inc
repz
xchg
shl
mov
jmp
jbe
push
cmc
sbb
pushl
xchg
inc
cmpsl
xor
dec
imul
sbb
mov
rcrb
ds
js
dec
shlb
sbb
inc
dec
sub
jmp
mov
mov
loop
int3
bound
fldcw
mov
in
xor
daa
cli
ret
pop
jb
lea
jb
mov
adc
push
or
rclb
aam
arpl
xchg
pop
push
mov
popf
xor
jmp
sub
ljmp
aas
pop
sbb
xchg
les
pop
pop
cmp
jno
insb
dec
or
fstpl
fdivrs
push
xchg
sahf
push
rorl
clc
pop
push
jae
jmp
fs
or
cmc
fcoml
icebp
loopne
sbb
fsubr
nop
scas
inc
imul
adc
cmpsb
lret
pop
subb
mov
push
cwtl
inc
sub
test
call
or
mov
adcb
insb
push
mov
fsubl
dec
nop
out
sub
sbbl
mov
push
in
cmp
jns
movsb
fs
dec
js
call
or
jmp
sub
inc
add
sbb
pop
repz
pop
push
adc
outsl
or
mov
mov
mov
mov
frstor
cmc
or
imull
or
inc
pop
je
lock
cmpsl
aam
stc
xor
cmp
hlt
mov
popf
mov
push
inc
addr16
mov
cmp
pusha
lock
mov
inc
push
and
hlt
and
repnz
xorl
mov
jg
jl
sub
fmul
jmp
cmc
xchg
dec
cmp
pop
xchg
and
pop
push
and
or
jl
call
adc
outsl
pop
mov
jbe
test
push
pushf
or
push
sbb
adc
ret
mov
mov
dec
add
popf
addr16
jl
add
pop
pop
push
aas
stc
das
mov
mov
or
mov
sub
and
pushf
notl
sahf
fiaddl
cmp
mov
dec
test
adcb
and
inc
sub
popa
les
mov
rcll
cmp
or
test
mov
scas
xor
lods
es
addr16
xlat
jmp
outsl
call
das
mov
xchg
sbb
add
insl
xchg
jno
jmp
cmc
rorb
dec
adc
es
cmc
ljmp
push
jge
je
and
mov
out
adc
mov
movsl
sub
fiaddl
in
insl
and
lretw
popf
idiv
pop
add
jns
lret
pop
push
sub
add
sub
cmp
push
cmp
sahf
clc
sbb
xchg
xchg
push
fwait
xor
jmp
cmp
add
dec
add
add
mov
push
dec
xchg
or
and
inc
testb
je
sbb
xchg
mov
dec
jmp
jmp
jge
xchg
mov
dec
sub
jo
pop
mov
sub
lods
sub
push
inc
or
push
sti
inc
aaa
cmp
and
mov
mov
mov
jmp
jne
xchg
jp
int
and
adc
icebp
xchg
sub
pop
lret
dec
mov
xchg
xchg
enter
fstl
push
xchg
data16
dec
sti
mov
cld
pop
mov
loopne
xchg
and
pop
push
mov
aaa
xchg
jle
xor
and
js
sbb
mov
pop
idivb
stc
pop
sbb
add
push
cli
adc
aam
pop
fsubrl
sar
mov
xchg
mov
rolb
jecxz
in
fsubrs
out
bound
decb
mov
scas
and
push
enter
push
and
xchg
adc
mov
xor
adc
test
nop
sbb
enter
add
ss
bnd
sti
pop
cwtl
cmpsl
je
adc
ds
or
pop
push
repz
xor
pop
dec
mov
or
nop
ljmp
inc
sub
outsl
hlt
cs
dec
cld
pop
pop
out
mov
imul
xchg
sub
jmp
add
or
out
dec
out
inc
je
xchg
or
cs
add
out
mov
pop
addr16
lret
fstpl
and
inc
or
lahf
imul
xor
push
and
lods
jge
pop
jg
add
rorl
push
cmp
sub
loopne
sub
pop
pop
je
dec
into
sbb
enter
jnp
mov
dec
in
cmp
je
lcall
xor
test
xchg
sub
arpl
or
ret
and
jp
push
add
test
adc
or
mov
adc
or
cmp
out
or
lret
call
fstpl
imul
jp
lock
or
fcomps
cmpb
adc
xchg
or
or
mov
orl
sub
or
mov
mov
jge
gs
jns
add
mov
add
movsl
inc
cmp
or
dec
insl
adc
add
xchg
add
nop
sbb
les
sub
mov
dec
jno
cmp
or
pxor
mov
add
mov
push
in
cltd
inc
in
dec
cs
adc
fcoms
cmp
leave
jg
jg
cmp
inc
scas
sub
leave
jge
das
lds
jae
push
lret
rolb
mov
cmp
cmp
or
clc
jle
sbb
pop
dec
imul
add
mov
sub
push
xor
rcll
jmp
mov
jbe
movhps
sub
stc
adc
cltd
push
lahf
sub
ret
test
inc
add
push
stc
adc
mov
and
jmp
jae
xlat
cmovb
sahf
dec
decb
push
imul
jo
fidivrl
mov
or
pop
cmp
inc
push
dec
mov
xchg
jbe
mov
add
push
aaa
cmpl
cmp
xchg
js
and
add
and
stos
enter
out
outsl
jb
dec
in
sub
scas
jo
xor
push
mov
and
cmp
push
jmp
stc
or
xchg
push
test
cmp
imul
xchg
lret
sub
nop
mov
sub
aam
aaa
imul
xchg
add
fisttpl
ljmp
cmp
je
sub
push
ds
adc
cmp
cld
fucomip
loop
add
daa
dec
push
or
jmp
test
out
and
add
dec
push
xchg
mov
mov
or
movl
push
bound
call
fstps
xchg
adc
xchg
mov
lea
mov
sti
cmp
mov
in
mov
xchg
dec
mov
ficompl
jno
fidivl
mov
inc
mov
jbe
jo
inc
and
js
mov
mov
repz
sarb
mov
jnp
push
dec
loopne
sub
pop
sbb
push
pop
adc
xchg
adc
daa
pop
lock
dec
sbb
stos
jb
or
adc
popf
push
xchg
jno
arpl
cmc
cmp
iret
test
cmp
repz
xchg
push
pushf
bound
mov
into
shlb
test
fs
ss
leave
hlt
push
jae
imul
push
scas
iret
cli
and
pop
push
xchg
and
lcall
pop
in
mov
je
lret
es
push
cltd
pop
mov
cmp
das
mov
xor
test
sbb
lock
jo
inc
cmp
push
adc
mov
movsb
mov
bound
pop
push
push
sarb
pop
push
xchg
pop
push
cmp
sti
mov
jmp
in
es
dec
lods
jl
pop
leave
loop
mov
dec
scas
mov
out
rol
fsubrs
les
jp
movsl
std
into
mov
inc
sbb
lods
cmpsb
pop
adc
imul
out
sub
and
lock
mov
je
sub
mov
in
push
xchg
out
fcomps
mov
mov
insb
adc
or
test
mov
mov
shr
jle
mov
cmp
stos
lock
push
xchg
lret
mov
add
dec
jmp
lahf
cmp
in
mov
jmp
xlat
roll
das
sbb
nop
add
flds
imul
mov
adc
cmp
ret
push
lahf
rcrl
or
loopne
pop
fdivs
movsl
lods
rcll
test
mov
mov
lret
sbb
in
cmp
dec
mov
test
call
cmp
mov
fldl
cmp
pop
or
imul
loopne
inc
xchg
pop
push
aam
repnz
adc
daa
xor
mov
arpl
xor
enter
adc
or
inc
fistps
mov
mov
and
jne
into
adc
out
inc
daa
mov
mov
xor
or
add
and
js
or
dec
pushf
ror
mov
jecxz
data16
push
xor
jo
shll
pop
std
push
and
xchg
out
mov
shrb
or
insl
hlt
arpl
and
mov
xchg
mov
xor
ret
adc
or
mov
jne
sbb
fs
negb
outsl
adc
rcl
hlt
mov
jl
dec
mov
mov
adc
sub
cmp
inc
aam
inc
leave
nop
jae
lods
xchg
out
sub
cmp
cltd
or
inc
adc
adc
mov
movsl
mov
pop
add
mov
mov
ds
jae
mov
decl
dec
imul
adc
mov
push
or
imulb
add
fcomps
dec
js
xor
call
ret
mov
dec
mov
push
dec
imul
and
pop
pop
loope
jl
imul
sbb
add
test
xor
or
arpl
mov
add
adc
xchg
sbb
xchg
test
push
push
mov
pop
imul
sti
lret
adc
cwtl
dec
jne
push
mov
into
nop
ljmp
mov
inc
bound
loopne
stc
test
xchg
push
push
pop
mov
xchg
in
loope
or
pushf
sub
mov
mov
fnstenv
pop
imul
dec
xchg
cmpl
inc
cwtl
insb
movsb
ss
and
add
cld
xchg
lahf
mov
adc
and
loopne
test
and
push
fisttpl
jne
fmul
aas
scas
xor
cmp
in
or
pushf
inc
push
cwtl
add
sub
sub
dec
aas
movsb
pop
inc
inc
mov
and
adc
dec
cmp
pop
mov
inc
movsb
and
sub
xor
jne
xchg
inc
adc
push
cmc
xchg
xor
div
fcmovnu
clc
jb
lods
pop
es
test
js
test
int3
lea
adc
nop
push
mov
and
les
or
lcall
sub
cld
push
add
mov
lea
mov
dec
xorb
jb
mov
stc
push
adc
mov
xchg
cmpsl
or
push
bound
mov
pop
dec
cmp
inc
inc
xchg
xchg
mov
test
xchg
xchg
push
loop
adc
cmp
push
das
cltd
cmp
cmp
call
addr16
hlt
push
je
in
pop
test
and
test
pusha
pop
mov
push
shrl
dec
push
lods
inc
pop
and
push
jo
add
lea
dec
ds
and
roll
sbb
jmp
ds
icebp
adc
icebp
test
adc
sbb
insl
mov
aam
cmc
jnp
insl
and
and
cmc
push
lret
adc
xchg
mov
mov
stc
lds
jns
inc
xchg
jge
cltd
xchg
pop
cmp
push
mov
pop
and
jbe
xchg
sub
dec
push
movsl
pop
adc
mov
sti
addr16
mov
daa
xchg
or
cwtl
jbe
push
mul
cmp
loop
adc
inc
mov
stc
sbb
mov
iret
scas
or
outsb
mov
pop
aad
cmp
pop
inc
aam
inc
cmp
push
and
and
out
mul
test
mov
lods
push
ja
mov
ja
mov
jne
int3
cmpsl
pop
mov
aad
mov
icebp
stos
cmp
out
cmpl
ljmp
mov
mov
popf
aam
fldenv
add
add
pop
fisubl
cmc
push
jnp,pt
add
aas
jo
add
push
ja
lock
out
sub
sub
inc
js
and
mov
dec
js
addl
adcl
cltd
inc
dec
fsubrl
push
push
enter
push
and
inc
or
inc
cli
xor
enter
aad
std
sbbb
mov
sti
addb
sbb
rcll
sbb
adc
pop
lods
xchg
and
lahf
pop
push
in
jmp
cmp
dec
adc
leave
pop
adc
repnz
add
add
jmp
mov
mov
rolb
lea
push
cmp
pop
call
in
and
fcompl
loopne
outsb
mov
xor
mov
stc
cmp
loope
sub
xchg
jno
push
push
data16
bound
mov
jb
fisttpll
dec
je
loope
fisubs
out
mov
or
cli
shrd
gs
xor
das
jge
jle
outsl
loop
jbe
cmp
push
sub
jo
mov
imul
inc
es
sub
push
std
pop
lods
popa
in
dec
push
sbb
cmp
pushf
dec
cmp
xchg
mov
dec
les
adc
cmp
add
cmp
rolb
popa
int3
pop
mov
adc
and
sbb
mov
mov
mov
mov
push
dec
js
rorl
int3
sbb
mov
js
jle,pn
mov
loop
mov
int
cli
jle
and
or
xchg
mov
test
push
mov
and
cmpsb
sti
fbld
std
loope
mov
sahf
ljmp
daa
and
fadds
and
out
mov
inc
mov
lahf
lahf
gs
sbb
mov
fiaddl
xchg
sbb
or
int3
jnp
add
dec
ljmp
cld
imul
out
xor
mov
xor
icebp
mov
shrb
jge
test
xchg
xchg
scas
scas
sbb
fwait
adc
shl
shl
sbb
push
data16
ja
and
fmuls
cmp
mov
adc
mov
cwtl
mov
loopne
adc
cmp
dec
sbb
daa
xchg
cs
pop
push
adc
lret
nop
mov
test
shrl
adc
mov
mov
pushf
sbb
sub
adc
daa
shrl
popf
in
and
mov
sbb
xchg
in
fdivl
les
push
sub
nop
nop
mov
cltd
incb
mov
xchg
cmpsl
push
inc
hlt
rolb
mov
add
jg
fcom
hlt
pop
adc
jne
fnsave
add
insb
mov
in
shl
sbb
ror
jmp
xor
in
sub
out
hlt
pop
inc
fsub
jne
and
inc
out
in
sbb
f2xm1
push
enter
fsubrs
out
adc
out
pop
out
fsubs
call
mov
ljmp
cmp
pop
cmpsb
arpl
nop
adc
daa
mov
push
popl
add
adc
les
sub
inc
leave
hlt
jg
es
mov
lret
dec
pop
rorl
iret
and
test
shlb
jno,pn
shll
pop
mov
call
jnp
imul
mov
popf
outsb
inc
push
sbb
inc
rorb
xor
mov
xchg
in
push
daa
inc
aam
mov
je
fsubrl
in
mov
adc
mov
jge
test
xchg
je
mov
jne
in
in
or
fsubl
push
fnstsw
in
jge
das
xorb
enter
pop
arpl
or
aam
adc
icebp
je
or
les
pop
pop
inc
aam
xchg
fdivr
call
in
or
aam
adc
das
lock
xchg
sbb
sahf
in
sbb
inc
test
mov
sub
adcb
jmp
inc
mov
pop
out
test
clc
test
popa
loopne
mov
and
je
stos
xchg
out
mov
mov
pop
inc
in
scas
repz
jae
hlt
into
mov
adc
pop
xchg
mov
pop
lds
sub
mov
xchg
mov
in
aaa
dec
dec
push
and
mov
pop
lock
xor
std
adc
and
pop
pop
mov
push
pushf
ficompl
aas
mov
clc
pop
movsl
xchg
mov
scas
mov
movsl
inc
jnp
inc
jne
push
loope
imull
xchg
push
pop
dec
push
cwtl
dec
mov
and
ds
inc
ljmp
lret
fnop
push
inc
xor
pop
add
cmc
test
jl
ficompl
in
mov
jmp
dec
cltd
and
gs
adc
xlat
and
inc
dec
icebp
xchg
cmp
mov
aas
mov
arpl
std
imul
call
xchg
cld
lret
mov
sbbl
cmc
inc
stos
mov
sub
push
cmp
adc
rcrb
es
push
xor
dec
mov
je
inc
and
out
push
adc
sti
and
sub
cmp
push
je
mov
mov
es
pop
inc
dec
push
out
dec
mov
lahf
push
xor
rcl
sub
sti
mov
or
jle
pop
shl
cmpsl
xchg
mov
mov
mov
in
loop
mov
pop
mov
data16
movsb
mov
xchg
dec
lcall
arpl
sbb
icebp
fcoml
stos
xchg
mov
out
insb
jmp
inc
aam
dec
int
sub
xor
je
fnstcw
fdivr
lret
mov
rclb
sub
xchg
test
jnp
fnsave
inc
xchg
pop
inc
mov
rorb
jmp
mov
inc
xchg
pop
out
lahf
pop
xchg
and
mov
add
aas
ljmp
aad
or
pop
inc
imul
imul
ficomps
faddl
clc
lea
ret
hlt
mov
cmp
clc
sub
cli
xor
sbb
push
int
adc
movsb
out
and
in
cmp
test
or
sub
sub
mov
sub
mov
lods
push
popf
sbb
sub
iret
scas
iret
mov
xchg
in
mov
cmp
nop
into
jl
sub
dec
dec
loope
loop
jge
and
inc
dec
notb
mov
bound
inc
mov
xor
and
pop
add
adc
xchg
sbb
xchg
mov
loope
mov
xor
xor
rol
adc
mov
or
adc
sub
fsts
adc
pushw
sub
aam
test
mov
xchg
jmp
dec
loopne
xchg
pop
xchg
aam
adc
dec
scas
sub
lret
scas
or
lret
js
push
lods
fistl
pop
mov
test
jns
and
cwtl
or
ja
dec
mov
adc
inc
lds
mov
bound
call
or
rolb
push
aaa
sub
leave
nop
mov
and
daa
in
lods
and
push
dec
adc
xchg
popf
push
nop
shl
mov
test
insb
out
dec
push
xor
xor
cmpsl
cmp
sbb
push
lods
adc
imul
imul
fisubs
xchg
mov
adc
mov
xchg
mov
pop
call
outsb
clc
inc
in
outsb
andb
mov
mov
outsb
dec
stos
nop
mov
outsb
fcoms
int3
pop
cmp
xchg
sub
daa
and
sbb
nop
inc
clc
pop
xchg
fsubrl
mov
push
add
daa
mov
push
and
push
or
push
pop
bound
stos
or
jo
data16
imul
adc
jno
lds
jne
mov
inc
push
push
andl
push
inc
jbe
mov
jmp
pop
inc
adc
insb
lea
mov
or
xor
daa
xchg
mov
in
cmp
dec
and
arpl
insb
push
xchg
dec
xchg
push
mov
or
xlat
xor
adc
mov
mov
loope
mov
je
inc
lds
les
out
mov
dec
jo
stos
mov
or
pop
add
xchg
pop
dec
sub
or
mov
xchg
movsl
xchg
stos
add
xchg
dec
lea
cmp
jge
push
sbb
iret
jno
cmc
jno
jne
sub
or
inc
dec
inc
insl
add
pop
pop
dec
pushf
adc
je
les
sub
push
shrl
loopne
xchg
dec
mov
ja
fsubs
out
in
int
or
cmp
sbb
mov
and
enter
sbb
xor
test
stos
popa
xchg
mov
rorb
nop
pop
shrl
and
dec
jae
xchg
lret
shrl
jmp
pusha
xchg
lods
inc
rcr
jg
sub
les
orb
add
test
mov
pop
xchg
pop
cs
shl
inc
das
in
or
mov
fs
icebp
adc
push
jns
enter
cmp
and
outsl
pop
nop
push
and
adc
in
adc
dec
push
in
and
push
aad
test
adc
stos
xor
or
mov
sbb
mov
in
out
mov
inc
fwait
ret
xor
pop
push
jno
lods
sub
movsl
xor
adc
ja
lcall
out
cmp
push
sub
cld
jg
or
fisttpll
cwtl
rclb
push
out
sub
adc
xor
std
insb
rorl
mov
nop
xor
mov
xor
fsub
in
mov
xor
pop
in
cmp
rcll
push
dec
and
jl
mov
mov
cli
std
jb
inc
hlt
mov
xchg
pop
xchg
pop
imul
or
popf
popa
mov
push
addr16
loop
pop
test
shr
cmp
jmp
jp
popf
jbe
push
fmull
jp
mov
jl
ret
in
cmp
lret
push
call
sbb
and
pop
sti
jne
je
jmp
call
inc
cmp
sbb
rcrb
loop
imul
adc
loope
aaa
or
push
push
call
fdivl
jns
pop
mov
test
clc
xor
das
jb
movb
clc
sbbl
enter
pop
and
in
movsl
aad
adc
push
lods
jae
dec
cmp
jge
scas
addl
push
ds
sub
sub
jle
jle
xor
roll
daa
add
cmp
jge
mov
push
stc
xchg
jge
mov
loop
dec
sub
push
lcall
je
push
xchg
inc
sbb
xor
push
fmull
xor
xchg
cmp
pop
dec
jne
add
dec
cmp
adc
mov
or
fsubrs
cmp
ret
test
outsb
outsl
lret
call
adcb
sbb
sbb
ds
lock
adc
jmp
and
xor
je
adc
ret
pop
adc
adc
xor
push
repnz
out
adc
rolb
or
xor
adc
adc
jmp
sub
jne
mov
cmp
xchg
pop
xor
je
movb
push
clc
adc
inc
stos
test
fidivs
inc
inc
sbb
addb
das
inc
xor
mov
out
orb
inc
sub
adc
sbb
sbb
sbbl
popa
shr
fidivl
out
push
adc
hlt
mov
jge
aam
pop
retw
je
xor
and
neg
incl
sub
pushf
shll
push
jle
cmpsl
rcl
dec
sbb
int3
xor
es
subl
cli
sub
aas
pop
add
or
pushl
aas
leave
pusha
icebp
into
sbb
add
stos
dec
pop
test
lods
daa
int3
jnp
test
aam
push
mov
xchg
mov
push
and
adc
mov
pop
inc
push
or
fs
push
arpl
push
adc
and
mov
mov
and
enter
mov
nop
or
mov
loopne
std
inc
sbb
mov
fstl
jmp
sub
cmc
dec
mov
cwtl
rcrl
add
aad
sub
jnp
les
loop
xchg
stos
cltd
mov
cmpl
ss
icebp
shl
clc
jge
push
test
or
popf
icebp
push
cmp
rorb
mov
pop
fbstp
mov
lock
notb
push
mov
repnz
pop
stos
fistps
ret
lds
insl
cmpsb
leave
sbb
mov
sbb
dec
or
or
cmp
sub
mov
out
adc
test
das
outsl
adc
cmp
sub
ficoml
mov
lea
dec
aam
cmp
arpl
push
mov
dec
mov
inc
push
xchg
mov
lods
cmp
adc
sub
test
jp,pn
enter
push
lods
lret
adc
jae
inc
mov
subl
lods
fwait
add
es
xor
jecxz
mov
pop
lds
stos
jecxz
push
push
xchg
cld
push
shlb
inc
adc
push
mov
lcall
enter
inc
pop
sub
dec
sub
divl
fistpll
leave
sbb
negl
gs
gs
sub
sbb
insl
or
imul
push
in
adcb
test
repz
mov
inc
cmp
xor
pop
cmpsl
loope
stc
sub
jno
inc
jno
out
mov
shll
xor
sbb
inc
pop
and
push
ljmp
mov
push
cmpsb
adc
xlat
stos
xor
pop
add
jmp
insl
into
lods
pop
xchg
int3
push
movl
rcll
call
sahf
mov
aad
pop
addr16
mov
mov
mov
rol
lds
mov
mov
adc
dec
push
push
pop
dec
call
popa
clc
sub
mov
push
rcrl
loopne
rorl
xor
xchg
cmp
and
loop
and
jno
pop
insb
push
sub
jns
inc
push
mov
scas
sub
imul
inc
into
pop
test
xor
xlat
outsb
jbe
in
in
arpl
inc
add
push
scas
cmpsl
rorl
sahf
push
mov
xor
dec
inc
jne
jnp
movl
rorb
dec
push
inc
lods
stos
and
dec
dec
roll
in
jl
inc
mov
cmc
arpl
vmovlps
inc
lods
int
inc
or
fisttpl
ds
aam
adc
mov
sub
and
inc
sbb
push
xor
notl
or
mov
xchg
jns
repz
jne
jle
ret
xchg
pop
adc
xor
pop
insb
mov
jae
mov
leave
aam
jp
pop
xor
loopne
stos
jne
bound
add
stc
mov
add
cmp
loop
jle
mov
cmc
adc
mov
pop
mov
popf
fsubl
pop
inc
mov
shrl
mov
fcomip
mov
sub
aaa
fsubl
fwait
pop
rcll
aaa
mov
xchg
xchg
push
orb
mov
dec
jno
pop
insb
or
hlt
jl
pop
jns
rclb
sub
pop
in
das
and
xchg
int
repnz
mov
inc
xor
test
int3
lret
cmp
and
xor
test
test
cmpsl
movsb
cmpsb
push
loopne
xchg
mov
push
and
push
push
mov
lods
fs
mov
stos
cmp
std
jns
cmp
adc
ret
ljmp
push
jne
push
repnz
sbb
cli
fstp
mov
and
ret
sbbl
cli
add
hlt
ljmp
mov
js
or
mov
sbb
aas
mov
stos
sahf
fcoml
jno
pop
test
adc
fistps
cmp
sub
inc
icebp
sub
pop
into
jmp
xchg
add
mov
mov
gs
mov
lods
dec
rcrb
pushf
leave
mov
aas
in
mov
das
lods
test
pop
cmp
ds
fsubr
xor
xchg
adc
sbb
rcrl
rorb
in
loop
lea
adc
cmp
filds
mov
lea
mov
jo
sub
cmp
std
sbb
push
mov
cmp
in
fisubs
aam
pop
pop
jecxz
xchg
mov
inc
icebp
fadd
inc
hlt
repnz
inc
cmp
cmp
inc
adc
sbb
roll
adc
adc
sub
mov
inc
xchg
xchg
sbb
mov
gs
cmp
in
pop
jnp
jnp
lret
adc
dec
jo
dec
scas
cmp
aam
push
ficoml
xchg
push
jp
inc
dec
push
adc
xchg
int
sub
cmp
inc
adc
add
push
xchg
push
scas
out
or
xorb
iret
daa
sub
lret
hlt
mov
xchg
leave
pusha
push
pushf
jnp
mov
mov
mov
stos
sbb
icebp
shrl
mov
pop
pop
rcrb
lea
ss
popf
dec
inc
daa
mov
lds
sbb
inc
stos
repnz
lahf
std
xor
pushf
decl
and
add
add
test
iret
int3
xor
adc
cmp
lods
dec
dec
sub
iret
loopne
arpl
push
insb
nop
loopne
in
les
mov
adc
mov
aad
arpl
cld
pop
lods
loope
jno
cwtl
es
adc
mov
cwtl
icebp
lock
test
ljmp
in
mov
cmp
clc
jg
cmpsb
and
sub
sbb
add
loopne
sub
or
sbb
clc
adc
icebp
hlt
push
nop
and
loopne
sub
cmp
jle
mov
lret
or
jmp
adc
cmp
sti
fldcw
sbb
test
in
inc
mov
mov
loop
int3
jmp
mov
jp
dec
adc
mov
jle
jo
test
mov
ret
mov
std
cmp
aad
jmp
jge
or
cli
inc
pop
incl
out
or
sbb
clc
pop
outsb
mov
ljmp
dec
push
adc
std
pop
cmpsl
inc
add
sub
sub
mov
push
test
jmp
xorl
ficoms
mov
rclb
cwtl
mov
dec
mov
pop
scas
inc
jmp
or
decb
cmp
ljmp
inc
push
stos
push
push
imul
in
test
mov
or
daa
jg
sbbb
adc
or
sbb
pop
dec
fdivrl
pop
lds
call
sub
test
lahf
or
mov
and
lds
inc
mov
sub
push
pushf
hlt
inc
xor
sub
adc
xchg
and
jmp
lret
sbb
testb
sub
lods
push
inc
das
nop
sbb
stos
adc
sbb
dec
je
jo
add
imul
mov
mov
jbe
lods
xchg
jmp
filds
cmp
data16
jne,pn
dec
inc
rorl
es
and
repz
popf
or
mov
repz
addr16
out
mov
jge
cmp
jb
or
jbe
je
andl
mov
mov
inc
sub
sub
or
clc
shlb
bound
adc
outsb
lcall
add
jo
ja
stc
mov
cmp
and
adc
push
or
push
push
pop
mov
insb
mov
jge
out
mov
jne
jle
add
xchg
mov
dec
sbb
add
mov
mov
mov
jg
pop
lods
je
aam
cmp
dec
mov
cmpsb
ror
inc
scas
testb
sbb
and
and
jmp
xchg
insl
scas
pop
lret
loope
push
add
cld
out
and
aam
fdivl
lds
cmpsb
add
sub
inc
sbb
adc
mov
int
ljmp
push
mov
jg
cli
push
or
fs
sarb
mov
xchg
jge
xchg
mov
jb
pop
out
xlat
call
dec
mov
and
xchg
nop
test
pop
lret
or
cmpl
jmp
mov
js
aam
lfs
inc
negl
in
sbbb
sbb
movsl
adc
jg
xlat
cs
ficompl
adc
clc
stc
mov
mov
call
inc
or
in
add
data16
mov
popf
lods
je
bound
sbb
mov
or
or
add
and
daa
xchg
jp
xchg
fadd
inc
orl
push
and
dec
clc
cwtl
das
dec
mov
mov
ficoml
mov
push
push
push
aam
aaa
stos
adc
xchg
inc
or
hlt
cmp
fmuls
dec
dec
inc
or
add
mov
out
jmp
popa
lret
cltd
cmp
loopne
lock
add
push
mov
add
cmp
jne
ret
int
and
sbb
out
loop
jno
jbe
shlb
jl
pushf
jle
or
xchg
or
push
lock
and
sub
inc
repnz
push
mov
pop
push
cli
inc
aaa
jp
popf
adc
cmp
mov
aad
scas
popf
test
mov
mov
cwtl
out
mov
cs
hlt
or
mov
call
and
mov
sbb
mov
push
cltd
pop
add
xor
jnp
inc
rorb
adc
push
add
setne
test
fdivs
and
lcall
mov
inc
in
mov
stos
imul
mov
inc
or
cmpb
movsl
mov
sbb
enter
sarl
push
int
enter
mov
aad
out
cmp
and
aam
dec
enter
adc
dec
rolb
cld
pop
mov
jl
and
adc
xor
xchg
mov
mov
sub
roll
enter
les
push
mov
jo
enter
hlt
stos
mov
cwtl
and
clc
jge
mov
cmpsb
in
iret
mov
aam
pop
sbb
ret
pop
mov
dec
mov
inc
push
fldcw
push
or
lods
and
xorl
mov
arpl
push
and
dec
ret
cli
lea
sub
push
inc
insl
jae
and
and
fidivrl
or
xor
and
pop
and
inc
or
mov
scas
int
cli
xchg
mov
loopne
cmp
sbb
adc
bound
inc
inc
out
jmp
insl
mov
int3
sub
cmp
adc
sub
sub
ljmp
test
xor
call
pop
arpl
and
aas
lods
cmp
mov
leave
ja
jle
mov
mov
mov
mov
jmp
xchg
std
add
pushf
enter
and
inc
mov
mov
or
inc
out
push
shrb
in
stos
xorb
jb
and
cmp
add
dec
mov
mov
lds
in
loop
sbb
jns
pop
mov
js
popa
cli
jo
pop
lea
lcall
rorl
sub
dec
shlb
out
call
pop
push
aam
rcrb
cs
cmp
or
push
sub
jnp
shlb
mov
sbb
gs
dec
repnz
cmc
inc
mov
orl
pushf
int3
xchg
mov
fcoms
hlt
aas
inc
push
inc
and
std
inc
jl
or
decb
mov
ret
roll
mov
and
xchg
push
push
loop
mov
test
lret
movsl
dec
cld
data16
stc
mov
push
or
sbb
sub
lea
stc
xchg
dec
sub
mov
enter
mov
or
and
js
stc
xlat
adc
or
subb
in
or
ret
mov
in
jl
cmpsb
inc
dec
mov
ret
xchg
mov
and
jmp
push
movsb
pop
push
fcoml
sbb
push
or
pushf
adc
fs
in
xor
xor
les
mov
test
les
mov
daa
cmp
clc
sbb
ja
add
or
hlt
adc
and
mov
pop
bound
ror
adc
cmp
nop
clc
sub
mov
nop
je
mov
pop
rolb
ret
push
pop
jge
sub
adc
jmp
in
iret
or
mov
xlat
or
lret
adc
popa
sbb
test
pop
pop
inc
scas
mov
pop
mov
push
cltd
xor
sub
pop
test
or
mov
lods
pop
pop
pop
insb
popl
dec
lds
and
lds
inc
je
mov
adc
jmp
sahf
jecxz
dec
mov
fimuls
lret
jmp
cmp
mov
into
jmp
mov
enter
sbb
fxch
nop
add
cli
and
movlps
test
push
or
mov
or
addw
jno
xchg
push
aad
or
sub
mov
sub
adc
xor
adc
dec
insb
jecxz
sub
loop
lea
test
jl
push
sub
and
xor
clc
je
adc
inc
mov
call
jle
adc
jg
aam
idivl
mov
jns
pop
adc
mov
sub
fs
mov
cmp
mov
xchg
es
jle
pop
adc
push
dec
imul
leave
std
xor
mov
dec
push
imul
daa
hlt
mov
test
pop
scas
sub
in
orl
mov
mov
pushf
inc
push
nop
sub
pop
into
adc
mov
popf
pop
add
mov
nop
hlt
into
jg
test
subl
pop
imul
leave
dec
or
mov
les
inc
ret
lea
jbe
fisubs
pop
fidivl
mov
test
or
leave
inc
aad
sarb
xchg
repnz
mov
fimull
arpl
insl
and
leave
xor
or
fnstcw
mov
cmc
and
xor
cmpsl
sbb
pushf
mov
sub
xor
cmp
test
sub
fisubrl
pop
or
insb
pop
push
inc
jo
jb
mov
lret
add
adc
pushf
enter
inc
loop
mov
dec
lea
loop
fsubl
push
dec
pop
lcall
push
cmp
xrelease
mov
or
popf
jge
inc
pop
popa
inc
jbe
fnsave
or
sbb
or
leave
add
add
repnz
or
push
inc
or
push
pop
inc
fiadds
loop
push
dec
mov
pusha
adc
add
clc
jbe
jae
push
fstl
ljmp
add
inc
cltd
mov
adc
pusha
cltd
int3
stc
or
inc
jbe
add
push
push
mov
dec
bound
roll
or
sub
xchg
inc
mov
jo
int
jns
adc
and
enter
or
push
movsb
lock
in
add
or
hlt
add
jmp
fs
nop
inc
loop
or
or
or
clc
movb
jl
xchg
mov
dec
xchg
jl
inc
sub
adc
pop
pop
rcll
or
adc
aad
out
lcall
fcoms
or
fdivrl
sbb
add
rcll
mov
hlt
jge
js
ljmp
stos
cld
std
xor
adc
js
mov
sub
or
notl
and
or
sbb
add
jne
or
outsl
inc
lret
cmc
mov
repnz
aam
test
xchg
or
xlat
lret
enter
in
push
pop
adc
and
mov
cmp
adc
inc
jb
in
dec
mov
add
mov
movsl
push
stos
mov
adc
jmp
add
push
inc
rclb
leave
pop
fnstsw
and
push
dec
sub
cltd
push
inc
inc
sbb
jo
mov
lods
cmp
inc
cli
cltd
sub
cmp
ds
inc
imul
inc
mov
lock
jmp
and
add
movsb
push
adc
dec
push
inc
popa
je
jae
jmp
or
and
loope
pop
inc
repz
xlat
mov
shll
or
and
out
lods
sti
clc
or
popf
jne
call
insb
out
pop
inc
inc
mov
dec
aam
mov
inc
test
fs
ret
cld
jge
les
sub
scas
and
pop
inc
adc
mov
sbb
or
adc
adc
je
mov
inc
and
mov
mov
sub
outsb
inc
cs
mov
insb
cmpsl
stos
mov
cltd
push
dec
gs
mov
pop
adc
repnz
sbb
adc
inc
inc
inc
pop
fisubrl
es
dec
inc
jo
pop
out
mov
ja
xchg
adc
jecxz
loop
sbb
cmp
cs
and
rol
out
std
push
dec
popa
xchg
scas
mov
loop
sbb
mov
jle
in
xchg
and
push
and
les
sub
mov
xchg
test
icebp
daa
push
imul
dec
shrl
push
loope
gs
nop
mov
out
imul
and
shll
cmp
or
inc
inc
imul
dec
pop
dec
stc
sub
out
sub
sahf
dec
sbb
dec
lahf
push
or
pop
adc
and
push
sub
sub
or
dec
into
jge
addr16
sub
sub
inc
aam
loopne
pop
mov
loope
fnsave
mov
inc
xor
mov
adc
push
mov
jo
inc
cmova
gs
lds
daa
aad
nop
les
das
enter
cmp
cmp
or
call
push
daa
and
dec
enter
and
dec
adc
arpl
or
or
push
bound
test
stc
dec
jecxz
push
pop
in
sar
int3
orb
gs
mov
hlt
mov
cmc
xchg
test
iret
cld
or
fdivrl
push
test
push
scas
cmp
leave
imul
notb
ret
mov
orb
jnp
fsts
push
or
std
in
cmp
adc
xor
cmp
fs
mov
adc
add
xor
jg
xchg
fistpl
xor
xor
push
xor
cmpb
add
jecxz
xor
inc
clc
inc
shr
scas
sbb
push
or
lock
xlat
push
cmp
bound
xlat
push
xchg
mov
dec
out
clc
pop
jbe
out
or
pop
aam
repz
ret
icebp
ds
and
inc
imul
dec
sbb
adc
jns
daa
stc
call
lods
mov
or
xor
push
adc
lret
jg
lods
jns
xchg
push
stos
cmp
or
test
add
mov
clc
psrad
fidivrs
adc
mov
shlb
add
and
scas
fldl
xchg
mov
mov
out
imul
and
push
cmp
mov
mull
add
add
mov
mov
xchg
cmp
xor
orb
cmpl
nop
repz
mov
adc
mov
ret
pop
push
inc
pop
cmp
std
adc
jle
sbb
inc
pop
ljmp
sahf
jle
cmp
imul
cwtl
outsl
jmp
add
stc
jns
push
test
push
inc
xchg
or
ret
jmp
and
inc
mov
loope
inc
outsb
mov
xor
jl
inc
repnz
repnz
sbb
or
push
adc
pushl
imul
movsl
push
lods
jnp
cmp
inc
dec
jne
int
lea
inc
lock
rcrb
mov
xor
or
cmpb
xchg
jp
adcb
in
inc
or
and
mov
aad
jmp
inc
data16
add
cmp
adc
add
addr16
adc
inc
sub
popf
or
lods
mov
out
jns
lock
dec
mov
or
gs
or
shl
dec
call
sti
xor
dec
dec
out
push
mov
inc
fldl
data16
jge
jnp
iret
jnp
xchg
inc
xor
negl
shll
enter
shll
dec
repnz
xchg
xor
sub
fsubrs
andb
stos
jl
xchg
shll
sub
clc
dec
xchg
fs
push
icebp
rclb
leave
xchg
test
pop
mov
fst
adc
mov
or
lea
xorl
jae
and
adc
sub
lahf
addr16
imul
push
mov
cld
dec
into
push
cmp
xchg
inc
cmp
jl
inc
pop
es
lret
add
mov
xor
andl
mov
mov
cmc
xchg
mov
aaa
push
or
loopne
mov
push
xor
push
xor
roll
call
inc
out
adc
jae
xchg
lock
mov
iret
xchg
adc
cs
imul
aas
shll
or
iret
pop
into
inc
adc
adc
cmp
pop
into
mov
xchg
inc
jmp
cmc
sub
ss
pushf
push
adc
dec
cmp
or
push
daa
leave
pop
mov
mov
adc
lret
cmp
ljmp
addl
test
dec
int3
and
les
mov
dec
mull
inc
mov
dec
js
or
mov
push
mov
sbb
cmp
add
js
scas
aad
adc
mov
lret
stos
fs
ljmp
sub
dec
stos
sub
adc
cmp
nop
cmp
mov
fs
hlt
mov
lods
lods
sub
and
cmp
adc
imul
sbb
test
lods
push
dec
mov
mov
add
inc
mov
cmpsl
push
pop
dec
cmpsl
nop
lea
fwait
or
xchg
flds
dec
imul
adc
js
xchg
shrl
cltd
add
out
xchg
jno
test
ret
lret
ljmp
xlat
adc
sub
add
movswl
inc
cs
inc
xchg
into
enter
pmullw
lds
rolb
or
sub
push
xchg
or
adc
xor
outsb
xchg
sub
insb
scas
sub
mov
bound
push
mov
push
sbbb
gs
outsl
adc
in
pusha
popf
or
or
nop
xchg
rolb
mov
xchg
or
add
adc
adc
aam
mov
cmp
lret
sub
int3
jnp
mov
mov
push
test
repnz
jne
jmp
cld
iret
je
add
inc
sub
hlt
je
xchg
loop
mov
scas
fmull
cmp
sbb
dec
cmp
dec
scas
xor
mov
int3
mov
sbb
mov
repz
fs
fldt
push
test
push
shll
dec
fsubrl
into
sub
and
movsb
paddq
ds
dec
dec
or
cmp
cmp
ss
popa
in
sub
pushl
inc
cld
icebp
mov
daa
jmp
inc
adcb
fs
in
mov
xchg
test
adc
xchg
xor
les
popa
xchg
or
test
fidivrs
mov
xchg
jo
xchg
lea
test
inc
inc
inc
insb
and
subb
fdivrs
nop
dec
and
pop
lea
test
imul
or
shrb
adc
test
cli
xchg
es
mov
enter
jge
mov
xchg
sub
cmp
sar
ljmp
and
shrl
loopne
xchg
push
lret
push
arpl
mov
pop
add
push
jmp
cltd
cmpb
pop
mov
xlat
scas
sub
pop
inc
adc
xor
and
cmp
jne
pop
mov
hlt
mov
dec
call
dec
lods
mov
dec
jno
insb
inc
hlt
rcrl
and
out
loope
and
lea
enter
add
mov
fiaddl
or
loope
scas
and
hlt
xlat
stos
cltd
sub
inc
sub
add
mov
inc
dec
cmp
daa
mov
lods
or
dec
decb
cs
fistl
and
jnp
int3
aad
adc
rcll
sub
enter
dec
dec
int3
stos
cmp
sar
push
push
xchg
or
push
inc
xchg
aas
and
and
js
jmp
stos
cmp
jne
cwtl
cs
fnstcw
mov
cmp
lods
or
test
push
cmp
or
mov
xor
pop
inc
jno
inc
movntps
outsl
movsl
jno
cwtl
or
xchg
mov
push
sbb
out
dec
add
cmp
and
mov
dec
das
out
sub
dec
sbb
mov
lret
cmp
or
sub
ljmp
addr16
lahf
push
cs
rcr
push
sub
jmp
add
gs
and
push
pushf
je
rcl
sahf
out
dec
mov
mov
xor
popa
ss
inc
cs
shlb
test
fstl
mov
push
sub
jmp
push
les
cmp
sub
xor
pop
sub
and
sub
cmp
mov
fcompl
xor
sub
mov
mov
xchg
movsb
xor
xor
jno
mov
in
cmp
add
fdivrl
or
test
and
test
mov
std
pop
mov
mov
dec
add
outsb
jns
mov
jg
sbb
inc
add
mov
push
inc
mov
out
mov
out
jno
inc
and
cmpsl
dec
outsl
and
dec
add
mov
ficoml
pop
cmp
aam
in
mov
add
notb
fidivl
cli
push
inc
or
and
and
add
pop
stc
push
adc
mov
mov
test
sub
clc
std
cmp
xchg
and
pop
out
jns
dec
mov
or
loope
insb
sar
das
and
pop
shll
jecxz
or
fstpt
add
ss
out
ljmp
mov
inc
push
fistpl
je
xchg
adc
xor
pop
iret
loope
xor
pop
and
pop
jle
repz
mov
sbb
push
pop
pop
gs
cmp
xor
sub
mov
mov
pop
mov
fiadds
clc
testl
jne
cli
repnz
dec
fistl
fmuls
pop
sbb
cltd
or
arpl
mov
push
or
push
lret
in
iret
test
out
fwait
or
inc
movsl
shrb
js
pusha
movsl
std
dec
nop
nop
and
cltd
inc
outsl
call
jb
mov
insb
enter
add
xor
and
and
adc
jl
mov
lods
mov
movsb
xchg
scas
stc
mov
and
out
test
jne
xchg
enter
icebp
xchg
sub
mov
adcl
xor
mov
inc
mov
jb
sbb
mov
mov
cmpsb
mov
and
loope
mov
lds
dec
or
je
sbb
repz
push
and
push
out
push
push
das
rorl
add
jmp
scas
sbb
out
cmc
adc
scas
pop
frstor
xchg
dec
ljmp
sbb
icebp
fsubrl
and
add
cmp
push
pop
adc
jmp
cs
cmpsl
aam
addr16
cmc
int
stos
push
fcoms
out
and
inc
fnstenv
adc
jecxz
dec
cmc
lods
aas
mov
adc
test
icebp
mov
xchg
dec
push
cltd
inc
in
lret
mov
mov
lret
mov
in
pop
out
jo
push
mov
test
ljmp
loop
jmp
dec
inc
subl
or
or
or
xor
push
pop
divb
jb
hlt
int
ljmp
dec
xchg
xor
or
inc
fstl
cs
or
mov
push
stos
inc
push
sahf
mov
popa
add
cmc
test
cmp
and
adc
mov
jp
cmp
bound
sbb
or
push
stc
pop
mov
mov
push
mov
shr
add
in
leave
adc
stc
movsl
aam
shr
jmp
lds
jle
xor
jne
or
dec
enter
inc
hlt
xchg
mov
pushf
push
icebp
fnstsw
outsb
popa
pop
jne
adc
inc
scas
inc
sub
dec
out
inc
popf
push
filds
insb
rcrb
daa
jo
pop
lock
dec
rorb
das
pop
add
nop
orb
jge
inc
fsubs
cld
add
dec
adc
adc
nop
mov
mov
push
and
sub
nop
or
and
xchg
aad
stc
adc
mov
add
std
dec
adc
aam
clc
cmp
shlb
movsl
or
shll
jne
in
or
sbb
int
and
fmuls
fwait
jp
add
aam
rorb
adc
push
std
inc
sub
shrb
fnstcw
inc
cld
mov
mov
das
pusha
faddl
mov
mov
pop
orb
or
sarb
add
ret
mov
out
add
ficompl
pop
je
int3
mov
add
fidivrs
enter
lss
add
sub
inc
xor
out
cmp
fs
cmp
aaa
push
fs
inc
adc
pop
jo
test
popf
hlt
adc
mov
fs
out
mov
nop
nop
enter
xor
xchg
and
movsb
xor
add
bound
adc
xchg
int3
or
mov
and
sub
les
sbb
enter
les
je
jno
or
test
test
adc
bound
call
in
or
fxch
out
fidivl
out
sbb
or
xchg
and
nop
icebp
lods
ror
ret
mov
xchg
push
and
nop
clc
repnz
sbb
add
scas
mov
sub
and
enter
sub
test
add
sbb
mov
push
int
cmpsb
lods
popf
adc
fstpt
push
jl
adc
inc
adc
adc
aas
mov
pop
adc
shrb
mov
cmp
inc
outsl
divl
mov
sbb
push
pop
cwtl
mov
sub
sub
leave
int3
push
jae
or
xchg
enter
mov
enter
loope
jg
in
inc
sub
enter
jne
jmp
and
pop
cmpsl
jmp
push
push
push
in
lret
cli
jae
imul
orb
mov
mov
xchg
or
push
hlt
out
push
lods
push
and
adc
add
outsl
push
out
pop
aad
mov
in
xchg
fs
mov
std
xchg
mov
inc
clc
add
aam
cld
xchg
sub
stc
addl
add
sub
repnz
sbb
add
or
lock
cs
es
mov
iretw
gs
xor
lods
test
jo
mov
int
cmp
jge
pop
cltd
test
push
stc
cmp
xchg
cmc
fwait
mov
inc
cmp
mov
or
dec
sbb
xchg
cwtl
imul
or
xor
fldl
push
inc
mov
les
clc
jns
ds
and
in
lcall
stos
xor
fs
stc
iret
movsl
mov
dec
jmp
sub
or
les
dec
rclb
sbb
sub
sub
cmp
and
push
in
sbb
mov
push
or
sub
daa
mov
pushf
call
mov
test
pop
aad
movsb
pop
outsb
xor
mov
lods
ss
sbb
stos
dec
push
popf
lcall
adc
dec
cmpsl
and
cmp
lds
lea
push
cmc
dec
dec
mov
add
dec
push
popf
fidivrs
jle
add
push
test
add
mov
adc
mov
ss
mov
popf
mov
sbb
int3
cmp
adc
hlt
outsl
aam
ja
jb
cmp
xor
dec
xchg
inc
jo
jns
or
and
pop
call
lods
mov
jae
sub
xchg
or
push
cmp
add
jle
xchg
imul
pop
dec
adc
dec
xchg
pop
orl
loope
pop
fbld
ljmp
xchg
mov
push
test
jae
mov
mov
push
js
add
inc
adc
clc
movsb
int3
jmp
jmp
lds
sbb
fs
cmc
push
fldt
sbb
sub
stos
add
sbb
add
mov
cmc
add
jne
daa
sahf
pop
push
jo
js
je
xchg
popa
sub
sub
call
popl
push
add
loope
xor
icebp
inc
gs
sbb
jne
pop
mov
dec
adc
popf
aad
mov
inc
or
xorl
sub
pop
sbb
mov
test
mov
stos
mov
xchg
inc
add
add
test
dec
xor
cmp
mov
mov
dec
pop
call
inc
add
jl
push
dec
lea
or
ds
sbbl
sbb
and
sub
lods
or
or
xor
jo
mov
inc
add
jmp
cmpsb
and
sub
movsl
outsb
mov
hlt
cmpl
add
shrl
pop
xlat
pop
pushf
mov
push
test
xchg
bound
sub
outsl
add
cmp
pop
cmp
lea
inc
mov
and
and
add
dec
xchg
test
ljmp
adc
test
pop
push
add
movsb
sub
inc
push
jg
mov
dec
add
inc
cli
mov
push
push
in
dec
movsl
ds
pminsw
sar
mov
and
add
adc
bound
ss
and
loopne
xor
dec
xor
or
inc
jo
add
mov
jmp
dec
lret
sub
sub
lcall
pop
enter
pushf
push
pusha
out
inc
lahf
xor
pop
dec
mov
lock
or
jne
mov
add
pop
pop
pop
pop
insb
sar
sub
sahf
pop
push
xchg
push
lcall
test
jne
or
daa
incl
push
cld
in
inc
or
push
imul
and
pop
fs
roll
mov
loope
das
out
dec
sti
lret
jne
ljmp
or
xchg
fildl
inc
inc
popa
test
xchg
pop
cmpsb
outsl
js
shrb
or
dec
imul
dec
inc
pop
mov
adc
sbb
loop
movsb
clc
pop
dec
je
sti
push
cmp
and
ret
sbb
in
lret
lds
add
push
dec
push
dec
xchg
mov
add
dec
jne
movsl
mov
aad
cmpb
lret
pusha
les
inc
test
aad
mov
cmpsb
ds
popf
sbb
mov
mov
sbb
sub
xchg
movsb
sub
lret
mov
dec
mov
shrl
movsb
jle
aad
jge
sub
loopne
ret
or
jns
lods
test
push
dec
add
mov
popa
pop
cmpb
mov
add
inc
push
pop
jne
mov
jbe
ss
das
les
cmp
aaa
jo
repnz
push
add
ljmp
mov
push
clc
dec
push
mov
fld
dec
popf
movsb
pusha
clc
cmp
dec
mov
push
sahf
rorl
rclb
mov
or
dec
xor
and
imul
orl
jmp
cmp
sub
mov
sbb
sbbl
mov
and
fisubrs
int
dec
mov
shlb
push
or
jmp
pop
xchg
add
jg
or
jmp
dec
pop
dec
hlt
xor
or
das
lret
push
push
xor
adc
hlt
or
test
lds
sub
mov
shll
ficompl
idivl
insl
xchg
int
outsb
repz
lock
push
and
ja
leave
test
mov
js
and
push
cmc
mov
lock
jo
mov
mov
jp
aaa
and
mov
push
test
dec
enter
imul
xor
and
mov
jmp
xchg
gs
mov
xchg
dec
xchg
std
jo
leave
unpcklps
rolb
test
shlb
inc
push
xor
dec
ja
adc
lods
pop
movsl
roll
xchg
leave
pop
sbb
popf
push
pop
sbb
pop
pop
push
lcall
mov
enter
or
sub
inc
cmp
inc
icebp
mov
dec
fs
inc
sub
aad
lret
cs
js
or
jmp
test
loope
jp
movsl
sub
int
sbb
pop
or
int
dec
mov
cmova
es
inc
add
and
xchg
jo
into
mov
sub
push
xor
sub
jmp
push
addr16
dec
dec
mov
fst
xor
inc
out
iret
cmp
push
inc
sbb
imul
push
inc
xchg
mov
adc
push
outsl
loop
jl
gs
je
in
sbb
xchg
and
mov
cmp
pop
lea
dec
dec
and
mov
jle
jns
cmp
loopne
mov
push
sub
jmp
aas
jmp
adc
popa
adc
cmc
mov
jne
es
idivb
add
in
dec
xor
fstpl
sahf
inc
pop
mov
in
in
hlt
push
shll
rcll
mov
mov
jnp
and
xor
mov
adc
mov
ja
sub
sti
mov
lock
jno
test
cmp
dec
adc
adc
pushl
out
inc
or
aaa
mov
push
in
push
movsl
sbb
rorl
aaa
dec
inc
jno
xchg
pushf
sub
inc
stos
pop
or
jns
xchg
fisubrs
in
ja
inc
test
call
mov
and
or
or
add
xor
popa
lock
and
shrl
je
mov
loopne
pandn
mov
xchg
or
dec
and
decl
and
cmp
push
out
inc
xor
jmp
inc
and
add
and
bound
and
inc
es
rclb
and
and
sarl
idivl
pop
sar
lods
mov
frstor
shlb
adc
stc
iret
cltd
adc
dec
dec
jmp
pop
push
enter
pop
in
rorb
mov
sbb
int3
xchg
xchg
je
cmpsb
adc
inc
andl
pop
dec
dec
lods
sahf
push
mov
es
pop
mov
das
in
xchg
iret
fcompl
call
lret
lods
add
mov
fsubl
or
les
adc
push
shll
leave
pop
int
nop
fdivl
jg
jl
or
mov
xor
mov
xor
and
push
repnz
rorb
xchg
sbb
int3
fidivl
push
enter
mov
dec
sub
mov
dec
xchg
jl
testb
ja,pn
pop
test
imul
mov
inc
mov
dec
fstpl
insl
adc
fucomi
add
inc
inc
or
movsb
cli
cld
orb
cli
fbld
jns
lret
jae
sbb
inc
mov
push
in
or
inc
xchg
testb
int
pop
icebp
push
js
push
inc
cmpsl
test
mov
cmp
dec
xor
jle
repz
inc
sar
sub
repz
das
shr
subl
pop
mov
out
jns
or
into
jmp
xor
mov
mov
mov
jb
cmc
mov
pop
mov
inc
adc
mov
adc
in
das
xor
mov
enter
jae
cmpsl
shlb
out
ret
dec
mov
sub
test
pop
mov
fldenv
sbb
or
jl
mov
jmp
sub
or
inc
sbb
les
adcb
cmp
and
mov
pop
jne
stos
test
cld
mov
repz
les
sahf
and
mov
outsl
loopne
cli
into
cli
xlat
ss
cmp
into
dec
fs
and
adc
rorb
xor
inc
mov
adc
cmp
sbb
xchg
rcll
inc
adc
mov
or
dec
sub
xchg
and
pop
add
ficompl
and
mov
mov
lcall
adc
ret
inc
aad
cmp
test
xchg
cs
je
ljmp
int3
cli
mov
pop
and
int3
sarb
inc
inc
dec
jne
mov
jnp
test
lods
sbb
xchg
xchg
mov
sar
dec
jle
or
or
sub
push
pusha
xchg
and
stc
cmp
leave
scas
dec
mov
mov
jnp
insb
hlt
ljmp
rorl
pop
or
popa
mov
push
or
adc
push
rorb
cld
mov
out
xchg
mov
hlt
ljmp
shlb
mov
insb
mov
nop
jns
test
push
stc
movsb
and
xor
inc
mov
mov
xchg
and
jbe
xchg
sub
mov
jb
cmp
aaa
aam
movsb
jnp
xor
aaa
xor
js
adc
loop
push
inc
mov
mov
add
shll
mov
push
inc
mov
mov
rolb
sahf
mov
mov
cld
insb
hlt
lcall
enter
add
adc
adc
xor
adc
push
inc
dec
enter
mov
in
cmp
xchg
insb
js
and
xchg
in
inc
mov
cmp
and
dec
cmpsl
xor
nop
pop
or
xchg
cmp
xchg
pushf
pusha
inc
xchg
enter
cmp
xor
xchg
in
push
mov
sub
rcl
shl
aam
add
adc
or
test
mov
and
test
nop
mov
popf
xlat
sahf
xchg
dec
enter
insb
fs
jo
xchg
les
mov
hlt
ret
cmpsl
mov
movsb
adc
jg
ljmp
adc
push
lods
and
push
pushf
cwtl
dec
shlb
outsl
leave
les
pop
fucomp
sub
sbb
push
push
pop
aam
pop
out
movsb
xor
testb
sub
mov
mov
jl
or
adc
pop
sub
enter
cld
nop
mov
xchg
je
fdivl
std
cld
mov
outsb
mov
push
xchg
sbb
cli
xor
je
sbb
sbb
jle
and
jbe
jae
adc
jbe
mov
popf
push
push
dec
xchg
push
lret
into
ljmp
xlat
rcr
in
push
add
or
lock
inc
add
mov
in
or
hlt
add
mov
push
push
inc
shl
cmp
cld
cmp
inc
sbb
cmpsb
dec
inc
jge
and
pop
aam
pop
pop
mov
inc
sbb
sbb
movsl
jnp
test
xchg
add
cld
and
dec
in
aaa
inc
xor
lea
enter
adc
adc
sbb
and
dec
mov
aam
sub
add
imul
jno
or
and
lock
insb
jns
jns
std
call
xchg
sbb
mov
add
adc
xlat
out
sub
cmp
xor
je
or
push
jbe
or
or
dec
or
mov
lock
ret
xchg
adc
cmp
or
inc
outsb
cmpsl
cwtl
mov
sarl
mov
les
or
inc
frstor
xor
ret
inc
ss
pop
and
xor
jo
sub
andl
or
pop
adc
push
jo
ret
sub
shlb
hlt
orb
lods
sub
cmpsb
dec
or
cs
pop
in
adc
adc
das
or
xor
jne
ja
push
pop
adc
subl
add
inc
add
inc
jge
orb
mov
xchg
dec
cli
fsubrs
movsb
ret
xchg
push
xchg
cmovbe
jl
xor
mov
jnp
pop
stos
lret
nop
loopne
mov
movsb
mov
adc
and
mov
push
sub
mov
pop
movb
add
fdivs
dec
clts
add
inc
scas
xor
jns
cs
aas
lds
sti
mov
test
popf
pop
pop
jl
leave
shlb
cmpsb
sbb
jnp
mov
mov
aas
xor
add
insb
and
and
ret
enter
xor
scas
push
dec
xor
ret
xchg
lret
add
cld
or
popf
jae
mov
inc
pop
cmpl
or
push
sub
adc
inc
and
pop
mov
xchg
xor
call
das
fmuls
inc
icebp
sbb
mov
sbb
nop
lds
in
adc
pusha
fldenv
mov
call
cmp
pop
push
and
add
sub
mov
daa
xor
dec
sub
jmp
call
jb
je
adc
inc
or
sub
shrb
addr16
jno
xor
sub
xchg
mov
fidivrs
dec
outsl
jp
add
sub
or
mov
cmp
sbb
and
push
adc
and
in
sub
and
sbb
inc
cmp
and
or
inc
por
pusha
add
fidivl
sbb
testb
into
sbb
push
push
xor
test
sub
mov
mov
or
ljmp
xchg
adc
sub
hlt
cmp
shrb
lret
andb
dec
sbb
fnstsw
jg
inc
inc
loope
add
jnp
xor
cmpb
arpl
jnp
dec
in
mov
push
in
popa
cmp
pusha
rorb
notl
adc
cli
and
push
xor
mov
ds
push
hlt
fwait
inc
std
outsb
inc
jl
xlat
and
cmp
pop
cwtl
mov
pop
add
adc
and
pop
sbb
and
in
add
cmp
orl
mov
push
mov
int3
aam
adc
or
mov
cmpb
xor
and
and
mov
hlt
mov
sub
out
fsubrs
int
rorb
decl
mov
push
or
or
adc
pop
add
cmp
jne
sarb
sub
popf
add
push
lahf
out
jns
jns
rol
or
dec
or
icebp
scas
inc
pop
dec
pushf
mov
lea
push
in
bound
jle
pop
push
rorb
mov
or
push
loopne
in
shrl
push
je
inc
lock
lock
inc
shll
inc
cmpb
bnd
mov
enter
dec
scas
icebp
test
sub
repnz
cmp
adc
ret
inc
mov
xor
adc
push
add
add
jge
outsb
and
push
test
mov
out
inc
push
dec
scas
daa
adc
and
and
les
cmpsb
adc
adc
int3
sub
push
enter
sbb
sbb
xchg
sbb
jmp
or
je
test
cmp
pop
hlt
in
fdivs
out
aam
mov
fists
xorb
mov
push
mov
sbb
das
ret
and
cmpsb
or
and
xor
and
or
ds
hlt
mov
or
movsb
in
jmp
idivb
out
pop
sub
jno
or
mov
jge
inc
int3
mov
add
xor
or
jmp
sbb
mov
hlt
enter
mov
imul
cmp
sbb
in
adc
mov
arpl
inc
adc
loopne
fsubr
and
jns
in
dec
shlb
lock
dec
inc
call
adc
shrb
jne
push
jg
int3
dec
adc
fmul
xchg
loopne
or
xchg
cld
and
mov
fwait
iret
and
je
and
cmp
and
cltd
inc
aas
imul
xchg
nop
cmp
dec
aaa
std
or
nop
xor
push
mov
inc
enter
push
pop
les
ljmp
sbb
test
push
push
addr16
test
mov
orb
cld
push
mov
sub
es
jno
sbb
push
sub
add
inc
add
dec
mov
fdivl
cmpl
test
mov
js
xor
and
inc
movsb
fnstenv
stos
int
cmp
xor
inc
push
mov
inc
shrb
push
xor
cmp
dec
mov
inc
push
cmc
inc
pop
pop
addr16
xchg
add
nop
adc
inc
adc
add
hlt
push
adc
movsl
movsb
outsl
in
mov
mov
mov
clc
push
movsl
or
cmc
lcall
lods
lahf
sbb
cmp
inc
mov
in
pop
andb
push
dec
sub
and
xor
test
jo
lods
xor
and
sub
das
iret
addr16
xchg
decl
jg
pop
mov
in
sub
push
test
push
inc
inc
hlt
dec
jge
pop
jle
add
push
pop
popf
insb
scas
push
sti
test
mov
cmp
adc
jno
test
push
call
inc
sub
mov
insb
pop
aam
cmpsb
frstor
out
aaa
test
jo
test
stos
and
movsb
fs
push
addr16
shrb
lret
adc
inc
cmp
push
outsb
inc
mov
dec
jecxz
xor
dec
pop
dec
cmp
lods
test
jg
test
std
inc
jge
mov
not
mov
push
push
adc
mov
mov
dec
mov
or
xor
dec
sbb
mov
daa
repnz
or
adc
int3
cmp
fstps
xor
and
aam
pushf
xchg
lea
pop
lods
or
pop
mov
rol
pusha
loop
inc
xor
ja
pushf
outsb
imul
je
pushf
lea
js
bound
sbb
and
pop
pop
popa
shrl
nop
jmp
sub
or
lea
pushf
mov
adc
and
jg
fadds
mov
lock
pop
out
mov
enter
or
xchg
out
scas
pop
jmp
ret
ljmp
dec
mov
repnz
xchg
inc
inc
xchg
leave
lock
push
or
add
mov
clc
jge
mov
into
pop
dec
xor
adc
lret
movsb
inc
insl
cs
push
and
or
mov
inc
sbb
leave
outsb
mov
mov
clc
insl
sub
loop
push
leave
cs
add
daa
inc
lods
adc
dec
mov
in
jp
sbb
add
and
jle
mov
sti
rorl
push
inc
dec
and
adc
cmp
into
test
and
test
add
lock
add
sarb
ret
and
jg
fs
clc
loopne
jge
lcall
cmp
and
and
in
push
or
lahf
sub
in
adc
mov
test
xlat
adc
fldl
mov
sbb
jmp
push
les
aam
cmp
add
lret
scas
fwait
cld
dec
mov
mov
or
xchg
scas
push
push
mov
movsb
add
jl
sub
push
jl
sub
aas
xor
sub
dec
stos
lcall
popf
adc
jmp
repz
pop
pusha
xchg
bound
dec
xor
pop
inc
ret
mov
add
sub
ffreep
aam
push
pop
fcompl
leave
ja
ficoms
sbb
call
push
cwtl
fucomip
outsb
mov
je
arpl
lahf
fs
jl
xchg
adc
pop
int
lret
fst
pop
rcr
testb
sti
notl
dec
stos
addb
pop
or
jbe
sbb
sbb
rcrl
pusha
mov
xor
imul
maxps
dec
jmp
in
cmpsl
fildl
jmp
test
adc
std
add
inc
pop
adc
cwtl
inc
add
jl
mov
pause
imul
adc
std
or
mov
or
xor
xchg
push
mov
inc
sub
push
cmpsl
mov
imul
imul
or
adc
jo
sbb
inc
or
test
scas
aam
stc
pushf
das
jle
jp
inc
push
push
push
jb
loop
rcll
inc
mov
push
negb
jge
test
notl
mov
push
shlb
ret
sub
pop
pushf
sbb
out
mov
imul
loopne
pushf
sahf
cmp
push
rcrl
sbb
add
jne
xchg
inc
cli
add
mov
or
fs
xor
cmp
inc
inc
cmpl
push
push
lahf
or
decl
cs
and
data16
or
sub
push
ljmp
adc
or
jp
into
das
stc
xlat
dec
stos
lock
jns
pop
sub
int
sub
inc
fidivrs
adc
int3
sbb
loopne
adc
rcl
push
mov
ss
mov
int
mov
jg
sbb
or
movsl
adc
jg
or
mov
jb
add
add
icebp
scas
stc
mov
or
push
push
and
add
repnz
icebp
inc
mov
add
dec
in
add
push
mov
into
xchg
out
adc
push
push
sub
in
sbb
jb
cmp
dec
shr
pop
dec
cli
repz
fistpl
push
pop
inc
sbb
xor
and
xchg
dec
outsl
sbb
call
and
xlat
sub
mov
adc
dec
jne
push
decb
mov
aad
and
sub
mov
jl
ljmp
cmpl
cmc
addl
pusha
push
sub
xchg
ja
dec
clc
mov
inc
movsb
dec
jle
xchg
inc
in
iret
hlt
cmp
ret
mov
push
pop
xchg
xchg
and
add
push
or
int3
xchg
lahf
push
xchg
push
test
cmp
in
cmpsb
jecxz
loopne
inc
mov
stos
loop
loop
cmp
push
les
pop
out
sub
mov
out
outsb
enter
lret
dec
inc
loopne
fistpll
cmp
pop
inc
push
push
dec
leave
clc
push
dec
ficoms
cmp
js
icebp
decl
adc
pop
in
push
adc
sbb
in
add
ret
std
mov
movsl
push
sub
jne
dec
mov
dec
aad
ja
mov
adc
inc
lods
movsl
mov
jl
dec
fucom
sbb
xchg
sub
add
push
jnp
loop
fs
and
push
pop
inc
add
jo
andl
addr16
jl
push
or
dec
sete
nop
jle
cli
lret
leave
sahf
gs
sahf
mov
popl
cmp
in
insb
icebp
mov
sbb
lock
or
inc
push
fcomps
nop
lea
inc
mov
rcr
sbb
sub
loope
addr16
adc
aaa
jne
jmp
pop
imull
push
mov
push
bound
fs
stos
pushf
movsb
or
popa
insb
cmp
add
jne
or
add
je
adc
gs
cmp
enter
pop
sti
daa
loopne
jb
push
cmp
inc
hlt
les
mov
mov
lock
stc
sbb
nop
das
and
je
sbb
lret
cmp
lods
js
xchg
jl
dec
pop
out
pop
mov
mov
push
and
and
adcl
daa
dec
das
push
gs
add
lret
arpl
sub
int3
inc
aam
loopne
fmull
push
aam
hlt
sub
mov
jae
sub
add
cmpb
insb
sarb
cmpl
lret
outsl
jno
out
test
adc
sarl
outsl
test
sub
jp
push
or
mov
jb
fiadds
je
add
loope
in
hlt
inc
call
out
lock
jno
dec
mov
push
cmp
jnp
push
hlt
scas
imull
sub
pop
mov
lds
enter
cmp
mov
jge
mov
cmp
add
xchg
enter
or
sub
test
nop
cmp
cmp
pop
outsb
adc
jge
leave
dec
pop
jl
testb
je
sbb
clc
ret
je
ja
mov
lock
add
add
loop
pop
push
inc
or
and
xchg
arpl
js
xlat
pusha
ljmp
fs
pushf
xchg
cmp
jmp
pushf
cld
mov
jo
adc
add
mov
jmp
test
in
movsb
les
and
shll
mov
arpl
or
addl
mov
sub
mov
xchg
lods
push
adc
jae
adc
cmp
jmp
test
adc
dec
into
shrb
pop
aas
mov
ds
sbb
push
test
sub
sbb
pop
cmp
pop
shr
imull
push
push
xchg
test
adc
inc
push
xchg
push
sbb
adc
lea
and
add
cld
imull
inc
lret
pop
adc
inc
push
movl
push
sbb
push
add
sbb
neg
adc
data16
dec
inc
in
andb
sbb
mov
jae
xor
mov
movsl
in
mov
push
push
adc
arpl
pusha
enter
divl
inc
lock
sbb
addr16
or
fsubl
and
cmp
mov
adc
fiaddl
dec
jecxz
mov
imul
and
daa
pop
jl
mov
sub
clc
fcoml
add
adc
cmpsl
and
push
inc
adc
inc
inc
push
adc
or
adc
xor
sbb
adc
in
imul
inc
test
add
mov
add
repz
decl
jae
lret
out
bound
inc
mov
mov
adc
add
pop
iret
xor
imul
ret
movsb
scas
stc
dec
dec
loop
test
add
mov
pop
inc
xor
xor
cmovnp
inc
add
mov
mov
mov
add
in
test
movsb
adc
aad
dec
sbb
loope
jg
cmpsl
or
dec
into
in
cmp
fucomi
lods
lret
inc
aas
or
add
or
in
aaa
xchg
xor
inc
mov
sub
pop
popl
add
dec
cmp
jg
mov
mov
xchg
mov
aaa
hlt
les
dec
int
xchg
lcall
data16
rcrb
rclb
mov
fdivrs
add
xchg
add
inc
cmp
inc
out
and
adc
lcall
pop
jge
push
ja
and
out
adc
adc
in
add
adc
adc
or
test
mov
or
inc
sub
or
and
mov
dec
and
or
ja
lods
mov
adc
pop
mov
mov
mov
xor
xchg
jbe
jle
lret
sbbb
xor
addl
jne
shrb
xchg
pop
xchg
cmc
and
pushf
and
jp
lods
imul
inc
call
push
movsb
in
or
std
pop
sbb
pushf
nop
mov
dec
xor
fadds
pop
clc
ret
dec
xchg
cld
inc
mov
lcall
rol
cwtl
sahf
cwtl
aam
jge
adc
test
xchg
sbb
sti
or
fdivr
mov
dec
out
mov
lods
test
or
or
lods
inc
sbb
das
je
daa
ja
mov
jae
or
jg
and
mov
cmp
jno
loopne
sbb
popa
xor
test
je
mov
daa
pop
jbe
loopne
iret
mov
std
cmp
mov
imul
and
pop
mov
push
cli
pop
mov
in
cld
js
in
jbe
repnz
dec
out
sahf
ss
rclb
mov
mov
cs
lcall
add
mov
shlb
test
xchg
or
loopne
stc
loopne
sub
or
and
dec
jb
push
dec
fdivs
lock
sti
jge
fs
push
pop
push
mov
scas
lock
jne
sub
imul
add
xchg
inc
cmp
jge
movsl
sbb
jge
xchg
ja
push
dec
repnz
inc
test
sarb
xor
lret
inc
notl
imul
jno
add
divl
bnd
lock
adcb
leave
adc
addr16
jl
sub
in
and
call
test
dec
and
sbb
arpl
sub
mov
inc
in
dec
add
adc
pop
in
and
sub
shrl
iret
ftst
or
enter
les
out
bound
iret
mov
inc
fwait
pusha
hlt
xor
lods
cmp
adc
adc
pop
mov
in
sub
inc
call
sub
in
or
adc
xchg
or
pop
mov
mov
ret
imul
loopne
stos
das
hlt
sub
fisttpll
insl
lahf
loopne
in
inc
sub
ja
mov
mov
fists
adc
push
mov
jb
insb
mov
jmp
cwtl
ss
rclb
stc
imul
inc
push
imul
inc
leave
or
test
cmc
or
insl
loop
cmp
aad
xor
dec
ret
and
loope
dec
int
arpl
pop
fwait
mov
add
shlb
mov
xor
cmp
sub
cwtl
test
or
rorb
dec
sbb
dec
sub
lahf
movsl
loopne
imul
xchg
in
clc
lds
push
sub
pushf
xor
fldenv
and
pop
test
push
xchg
cs
and
sbb
xchg
xor
mov
loope
dec
xor
inc
xchg
clc
sbb
sbb
rorb
xchg
sub
das
mov
mov
fiadds
sub
and
xchg
adc
sti
add
mov
testl
or
dec
test
popf
call
in
js
cmp
pusha
xchg
dec
mov
lret
dec
mov
out
je
and
xchg
into
cs
jecxz
xor
adc
sub
add
adcl
and
xchg
ret
jb
test
lea
or
and
push
sub
push
inc
or
insb
shlb
fsubs
push
adc
fisubl
dec
mov
and
rolb
enter
adc
add
enter
sarb
xchg
push
repz
xchg
or
adc
jno
push
inc
sbb
test
mov
xchg
lea
repnz
xor
test
imul
dec
dec
scas
sub
mov
mov
loop
sbb
xchg
mov
bound
inc
mov
in
enter
stc
popf
jo
pop
jne
xchg
lcall
adc
nop
mov
mov
into
adc
sub
or
imul
mov
cmp
adc
and
leave
movsb
xor
scas
sbb
and
or
sbb
fldl
mov
sub
mov
inc
xchg
mov
mov
sub
popa
pop
push
jmp
fs
in
or
lods
jl
int3
test
mov
orb
jne
sub
movsb
test
xchg
mov
aam
inc
xchg
add
out
cmp
les
cmpl
jmp
xor
push
movsb
dec
push
xchg
in
push
mov
movsb
cwtl
mov
cmp
addr16
adc
mov
movsl
inc
in
nop
in
jle
push
movsl
mov
xor
xchg
lods
dec
aas
pop
pop
scas
xchg
mov
jnp
adc
fsubs
and
push
inc
mov
xor
data16
xchg
jp
insl
cli
sbb
scas
js
lock
sub
xchg
adc
xchg
dec
rclb
cltd
mov
pop
xor
inc
xchg
ficoml
ficoml
and
dec
push
mov
call
dec
push
dec
insb
mov
aad
push
gs
inc
mov
dec
ss
adc
push
mov
in
stos
cmp
or
push
xorb
dec
push
punpckldq
xchg
or
mov
mov
in
or
test
imul
addr16
subb
mov
mov
mov
jo
and
sbb
iret
cmc
ror
movsl
add
xchg
adc
jmp
mov
lahf
data16
push
mov
adc
sbb
std
jmp
sahf
cmpsb
xchg
pop
mov
mov
jmp
aad
rcl
sbb
add
and
fwait
jnp
and
mov
add
xchg
fildl
jl
flds
dec
sbb
notl
in
mov
pop
test
ror
fdivs
into
jb
movsl
loope
dec
lock
cmp
xchg
mov
push
cmp
and
and
xor
xchg
sti
adc
xor
je
sbb
insb
adc
hlt
lods
daa
mov
jg
cwtl
and
add
sbb
sbb
xchg
hlt
sti
xor
cmp
pop
insl
add
mov
nop
push
popf
int3
lods
ret
popa
cmp
or
mov
lods
add
addr16
rclb
pop
mov
sub
mov
lods
mov
shll
dec
mov
ljmp
dec
test
repz
ret
push
jno
je
nop
sub
loop
lret
dec
pop
add
mov
sbb
xor
dec
daa
mov
enter
push
in
jns
mov
lds
xor
mov
push
test
cs
test
negl
loopne
ror
mov
test
aas
cmpsl
bound
xor
pop
mov
sahf
in
gs
call
and
dec
and
push
enter
notl
mov
jne
inc
into
nop
xchg
leave
cmp
pop
int3
xlat
stos
out
cltd
shlb
repz
mov
xchg
js
lods
inc
add
mov
lcall
inc
sarl
pusha
lret
gs
fmuls
push
mov
cwtl
cmp
push
aaa
nop
xchg
lcall
test
jl
xor
movsb
mov
and
std
add
xchg
mov
fdivl
fmuls
mov
repnz
mov
dec
loop
push
jno
sub
mov
mov
mov
adc
lea
insl
push
push
sub
adc
push
sbb
insb
gs
fcomps
fadds
sub
ss
and
jle
dec
or
subl
in
cmp
push
mov
xor
rcll
dec
lods
popl
insl
nop
or
in
xchg
or
pop
or
call
add
pop
loopne
mov
add
stos
jb
faddl
sbb
stos
mov
lcall
and
jmp
les
insb
adc
outsl
leave
mov
cmp
sbb
push
push
inc
push
dec
mov
jge
cs
push
lods
push
inc
inc
mov
scas
lret
or
push
repz
cld
lcall
loop
adc
and
and
icebp
adc
loope
subb
enter
push
popf
xchg
mov
jmp
sbb
rclb
pushf
out
std
adc
scas
and
jns
bswap
adc
jae
cmpsl
gs
insl
add
stos
push
mov
enter
dec
leave
mov
cs
and
and
test
je
stos
mov
mov
shll
test
jno
fldenv
jbe
rcll
or
and
lea
enter
rcr
jbe
rcll
or
and
les
sub
popa
daa
cmpsb
dec
addr16
insl
cmpsb
push
je
outsb
fidivl
testb
adc
repnz
xchg
outsb
jl
cwtl
inc
add
repz
or
and
sbb
movsb
pop
mov
in
jle
cmpsl
dec
inc
and
test
sub
pop
cmp
cld
mov
movsb
test
xchg
js
cli
sbb
les
fmull
jno
repnz
or
enter
loop
jl
lds
push
repnz
mov
into
repnz
mov
pop
les
insl
ret
hlt
xchg
fsub
test
loop
insl
pop
mov
cmpsl
enter
xor
push
cli
or
and
mov
push
andb
mov
lods
push
xchg
lahf
mov
and
lret
xchg
mov
scas
mov
fs
sbbl
pop
sahf
icebp
xor
mov
push
push
jns
or
sahf
leave
xor
jno
add
lahf
push
cmp
sahf
fiadds
mov
movsb
dec
push
xchg
mov
xchg
jo
aas
dec
adc
or
outsb
fwait
dec
iret
cwtl
and
push
movsl
mov
lods
mov
mov
sar
lock
adc
adc
repnz
fistl
sbb
sar
sbb
push
sbb
inc
call
lea
cmp
mov
sub
div
pop
fiadds
clc
adc
testb
push
cmp
add
sub
pop
mov
and
jp
mov
out
sbb
adc
lods
insb
and
sub
sti
sbb
lea
pop
cs
xor
push
jg
xor
mov
jl
and
push
addr16
mov
nop
lret
lds
mov
test
mov
jge
xor
cmp
ret
or
jbe
xlat
mov
adc
ds
push
pushf
js
or
mov
mov
sub
ja
sbb
jp
nop
nop
and
sahf
xor
xlat
mov
adc
je
sub
and
xchg
xor
xor
cmp
test
xchg
das
xor
pop
test
dec
inc
mov
mov
sub
mov
and
jne
nop
je
test
mul
scas
mov
test
jmp
xchg
lea
testb
in
sub
inc
lea
movsw
push
sbb
add
in
xor
imul
adc
dec
inc
lods
into
lock
jecxz
arpl
dec
pop
adc
sub
and
xor
je
and
movl
add
mov
inc
cld
mov
bound
insb
inc
mov
shrb
xorl
repnz
test
test
xchg
enter
movsl
mov
mov
sahf
jecxz
in
hlt
sbb
mov
adc
inc
mov
adc
in
mov
mov
mov
shll
hlt
mov
ljmp
mov
rcrl
rorb
and
inc
insb
nop
lods
in
stos
and
sub
fsubrp
ljmp
mov
test
inc
sbb
or
and
mov
xrelease
fcoml
ljmp
push
jae
jmp
inc
sarb
inc
jle
sub
pop
iret
es
dec
lods
xchg
xchg
clc
mov
leave
into
dec
cmp
mov
pop
add
cwtl
push
imul
xor
cwtl
mov
mov
aam
sbb
es
rcrb
inc
cltd
mov
popf
fs
and
loope
lahf
mov
pop
aam
mov
xchg
and
popf
push
enter
xchg
enter
cmp
and
jp
push
nop
cmp
test
out
ljmp
mov
movsb
in
cmp
mov
mov
nop
and
call
push
mov
enter
pop
stc
in
adc
scas
shll
sub
xchg
push
xchg
lock
push
ret
xchg
in
repnz
mov
xor
sbb
jl
pop
out
jb
cmp
in
xor
dec
lret
adc
les
and
int3
adc
aam
ret
sub
fdivrl
les
in
and
xchg
fsts
sbb
adc
add
jle
adcb
mov
mov
or
push
sub
cmove
nop
nop
mov
push
int
dec
movsb
std
dec
or
jns
loop
jl
test
sahf
in
pop
add
cmp
cltd
aam
lock
push
and
adc
cmp
pop
dec
cmp
sbb
cs
mov
dec
pop
inc
movsb
mov
cmp
sbb
sub
pop
mov
add
inc
cmp
rolb
mov
adc
xchg
fs
mov
mov
clc
pushf
cld
outsl
loopne
pop
xchg
xlat
xchg
push
movsl
movsb
sub
test
andl
arpl
jb
test
repz
push
inc
adc
aaa
mov
adc
bswap
mov
sub
or
daa
mov
pushf
sbb
in
sarb
and
jno
adc
or
lock
aad
js
mov
rcll
lock
imul
call
fmul
dec
negl
cmpsb
das
test
inc
sarb
mov
in
pop
lret
push
cltd
xchg
clc
mov
push
and
inc
and
pop
jno
in
cmp
sti
xchg
subl
mov
lss
mov
jo
xchg
movsb
rep
push
and
xor
cmc
es
aaa
jne
cmp
mov
and
jg
gs
inc
test
ret
mov
js
pop
out
inc
pop
xchg
adc
std
adc
mov
mov
sub
and
stc
test
or
leave
iret
icebp
mov
sbb
out
mov
test
decl
lret
mov
xchg
xor
jo
sbb
sub
aad
push
and
stos
and
into
jb
mov
lcall
clc
ret
inc
test
mov
inc
mov
xchg
imul
call
in
fdivrl
in
addr16
lret
add
sub
loopne
call
mov
outsb
push
into
insb
into
or
int3
dec
jae
or
shl
push
call
icebp
cltd
into
shlb
cmp
lcall
sbb
sbb
lea
faddl
and
xchg
cwtl
cmp
scas
andb
inc
enter
movsb
je
jge
cs
insl
into
outsl
testb
and
or
adc
enter
xor
add
and
cmp
jp
mov
std
je,pn
icebp
jge
mov
test
aas
lods
imul
pop
test
push
and
repnz
fbstp
xchg
into
adc
hlt
mov
cmp
mov
hlt
mov
fwait
ror
cmpsl
stc
jnp
xchg
adc
fsubp
cmp
add
sub
addb
xchg
xor
aam
in
or
shrb
push
pop
je
into
fildl
je
stc
in
jb
mov
test
cld
cmpsl
xchg
out
leave
jl
fiaddl
into
mov
rcll
out
and
jae
test
dec
sbb
movsb
stos
mov
sub
adc
jo
push
and
jne
xchg
mov
ja
add
clc
sbb
add
adc
sbb
test
mov
fs
cmc
inc
in
jmp
inc
sbb
addr16
aas
stc
sub
test
adc
sub
fs
mov
in
xor
aaa
es
enter
or
pop
or
hlt
xchg
jmp
imul
xchg
add
in
pop
sub
repnz
mov
nop
xlat
out
rorl
xlat
out
cmp
or
mov
sbb
les
lea
or
movsl
xor
push
mov
pop
clc
scas
les
or
insb
jle
out
insl
mov
inc
fwait
pop
divb
fists
push
pop
adc
or
inc
jp
adc
mov
lret
icebp
jg
push
inc
cs
aas
ficomps
inc
or
pop
inc
into
and
adc
in
pop
xor
mov
push
mov
lret
rclb
loop
add
sub
ljmp
sbb
add
add
and
shrl
sbb
sbb
push
mov
lea
mov
pop
adc
push
xor
add
pop
dec
inc
pop
pop
or
jb,pt
clc
and
rolb
dec
jle
cmpl
add
lahf
pop
adc
fisubrl
cmp
ljmp
ret
mov
mov
pop
push
adc
push
push
push
mov
push
leave
ja
rclb
shld
call
sbb
sub
xchg
or
cmp
fucomi
inc
vunpckhps
adc
mov
stos
sub
inc
sbb
jnp
pushf
pop
mov
xor
push
popf
push
jnp
and
data16
mov
je
mov
xor
xchg
movsl
inc
push
push
orl
sar
and
int3
clc
add
xor
push
addb
cmp
cmp
and
ja
mov
fs
push
into
fs
dec
mov
jne
pop
mov
in
fisubl
je
push
or
loopne
fcoms
movb
dec
imul
cmp
mov
lcall
stos
sub
or
test
gs
adc
out
or
das
shll
in
cwtl
xchg
mov
jp
cltd
nop
mov
loopne
adc
lock
inc
icebp
sub
xchg
int
sbb
mov
lcall
faddl
inc
fildll
clc
mov
ficoms
or
inc
inc
ljmp
lock
gs
push
mov
int
aam
je
mov
sub
mov
xchg
push
inc
or
hlt
xchg
adc
push
and
insl
aam
paddd
in
sub
dec
fcoms
sub
daa
aad
push
nop
cmc
jl
xchg
in
push
pop
sub
mov
imul
loopne
push
in
adc
aam
je
and
adc
add
mov
cmp
xchg
add
lock
es
out
add
outsb
imul
push
push
xor
inc
inc
gs
pop
mov
adc
and
inc
popa
push
adc
ret
shrb
scas
xchg
mov
and
inc
lcall
sahf
dec
bound
gs
je
fs
rclb
pop
testl
fs
clc
leave
pop
lds
sub
ja
pushf
pop
or
cmp
pop
aam
or
cmp
add
adc
and
jle
sub
inc
mov
je
inc
sub
cwtl
pop
jl
push
or
movsl
push
inc
gs
push
xchg
je
out
sub
push
xor
adc
loop
and
cmp
push
out
shll
hlt
push
push
mov
inc
insb
jl
jge
add
adcl
insb
mov
push
enter
in
sub
mov
or
mov
stos
cmp
sbb
mov
test
inc
mov
pusha
inc
push
push
out
push
push
mov
nop
mov
or
hlt
fisttpll
rolb
xor
xchg
xor
cmp
cmp
test
push
pushf
repz
or
pop
jne
dec
jl
push
mov
xor
adc
dec
mov
lret
and
add
test
or
and
fiaddl
aam
fsubrl
test
divb
test
sbb
add
adc
pop
inc
jl
fs
mov
push
pop
mov
rolb
call
pop
dec
imull
adc
inc
int3
repnz
mov
adc
scas
sbb
dec
pushf
add
loopne
xchg
lret
nop
mov
cmp
inc
mov
loope
loopne
sub
bound
idivl
xchg
adc
jo
mov
jl
lret
pop
adc
add
cli
movsb
lahf
aam
mov
jl
test
fwait
inc
stos
js
hlt
sub
sbb
xor
test
sub
test
pushf
inc
out
pop
out
jl
mov
push
fs
adc
xchg
gs
inc
enter
mov
repz
hlt
and
push
shrb
ja
cmpsb
outsl
sub
insb
sarl
inc
dec
das
or
roll
fs
or
cmp
dec
movsb
jo
lods
dec
jl
mov
jle
jl
fmuls
push
jo
or
xorb
xchg
xor
jno
xchg
sub
test
inc
cmp
or
mov
and
inc
fadd
xchg
add
enter
mov
outsl
dec
outsb
nop
sub
insb
inc
sbb
nop
lods
cs
ret
les
pop
nop
cmp
cmp
gs
lds
test
mov
push
ds
aas
adc
call
sbb
xchg
jo
and
fs
adc
dec
fs
nop
mov
jge
jl
mov
in
int3
inc
push
cmp
push
lock
adc
gs
les
test
les
mov
or
std
rol
cltd
rol
nop
js
jo
cmpb
sub
pop
mov
sbb
mov
mov
lock
loopne
mov
push
or
push
jne
cmc
in
lds
jno
xchg
sub
hlt
mov
fs
sbb
mov
push
mul
dec
fmull
inc
clc
pop
mov
fsubr
sub
inc
jp
sub
jo
mov
hlt
push
dec
insb
fdiv
push
cmp
enter
shr
adc
imul
add
hlt
popa
test
leave
adc
inc
mov
pusha
and
fbld
jno
xchg
sub
jo
icebp
mov
mov
and
inc
adc
dec
outsl
loopne
lock
call
icebp
or
inc
or
push
ret
data16
mov
orb
sbb
lret
shlb
pop
lret
or
sub
cwtl
mov
xchg
adc
pushf
inc
jge
nop
sub
add
inc
sub
in
and
les
xchg
inc
insl
push
dec
gs
add
incb
cmp
mov
mov
lret
and
dec
mov
mov
cltd
sub
dec
fs
jo
xchg
sub
fs
pop
dec
and
dec
push
int
jne
xchg
push
push
lret
add
enter
cltd
jo
mov
lret
jmp
inc
shlb
pop
js
jo
lret
cltd
inc
fsubl
clc
movsl
and
jo
adc
dec
lds
lock
lret
jle
inc
cmpb
mov
add
pusha
int3
sub
out
pop
fs
sbb
add
or
or
inc
xchg
jbe
adc
jo
or
xor
fs
mov
out
sbb
adc
lods
movsb
mov
push
repnz
movsb
xchg
add
gs
xor
out
or
test
pop
pop
repnz
lock
imul
ljmp
jo
xor
inc
test
imul
mov
or
insb
dec
gs
les
jno
call
add
inc
xchg
sub
into
js
mov
cmp
nop
out
leave
jg
icebp
inc
test
nop
pop
outsl
jne
arpl
and
addb
sbb
test
aaa
and
sbb
mov
rcl
aaa
jecxz
insb
cmpl
out
jo
inc
xchg
adc
adc
inc
push
in
iret
and
enter
mov
enter
aam
sbb
shrb
mov
inc
add
pop
add
lret
push
imul
enter
mov
and
add
cmp
sbb
mov
dec
push
jns
adc
les
in
les
imul
mov
push
movsb
pop
inc
andb
test
cmp
movsb
push
sub
inc
and
sbb
lods
jae
sub
cs
hlt
sbbb
push
ds
les
jb
in
das
dec
mov
sbb
sub
call
lds
xchg
adc
push
dec
lret
test
iret
pushl
movq
mov
and
inc
push
lret
or
cmp
push
and
push
push
xchg
call
rorl
adc
cmp
inc
shr
or
cmp
inc
cmp
int3
pop
adc
mov
and
mov
pop
dec
push
dec
enter
enter
jae
test
stos
test
rcrb
adc
out
mov
xchg
ja
or
or
inc
adc
cwtl
es
cmpsb
or
sbb
pop
or
xor
add
pop
insb
mov
cmp
push
mov
int3
nop
sbb
hlt
aas
insb
mov
movsb
or
sbb
and
adc
shrb
sbb
push
aam
and
cmp
in
adc
cli
adc
dec
push
insb
sbb
push
aam
mov
pop
adc
call
push
sti
xor
adc
jmp
mov
xor
sbb
lods
pop
sarl
xchg
or
adc
sarb
sub
dec
dec
jmp
dec
inc
pop
shlb
adc
xor
mov
mov
ja
fdivs
stos
negl
dec
dec
dec
mov
rolb
push
push
das
inc
push
hlt
test
inc
dec
or
or
mov
push
dec
and
dec
inc
dec
inc
pop
ljmp
inc
cwtl
push
push
call
addr16
push
pop
test
test
adc
jmp
inc
pushf
cmp
and
cmp
mov
add
sub
adc
xor
add
sub
popa
pop
clc
mov
imul
and
or
or
imul
cmp
add
jns
add
cltd
push
mov
sub
sub
and
in
stc
xchg
cmp
jne
sub
sbb
pop
pop
inc
leave
xlat
push
jnp
xchg
loopne
xor
je
inc
xlat
mov
or
xor
dec
adc
fsubs
lea
sub
movsl
adc
outsl
rcl
jle
stos
fdiv
insl
and
mov
dec
pop
fs
cmp
je
mov
cmp
xchg
js
xor
movsl
fisubl
fcom
sub
adc
bound
loop
popf
mov
add
adc
fldcw
mov
adc
jmp
repnz
adc
cmp
ljmp
inc
cmp
stos
ficompl
cmpsl
add
nop
cmp
dec
adc
nop
adc
push
fdivrs
in
fs
in
push
dec
stos
cmp
enter
adc
fisubl
clc
push
push
ja
test
aaa
pop
or
mov
mov
fistl
inc
pop
sub
nop
dec
mov
pop
cmp
dec
test
sbb
je
nop
or
out
or
cltd
sub
jb
lahf
mov
mov
sbb
and
faddl
inc
add
cli
arpl
fimull
mov
or
xchg
jle
clc
push
lea
jle
notl
sub
sbb
mov
cmp
dec
scas
fstps
sbb
mov
icebp
jle
jge
push
push
or
pop
add
adc
lea
sub
pop
mov
push
and
jo
arpl
gs
rep
and
adc
sbb
or
es
arpl
dec
and
ljmp
mov
call
es
fmuls
test
movsb
sub
cwtl
jg
std
adc
iret
fldl
xor
dec
js
add
dec
sbb
dec
cmp
push
adc
fnstsw
mov
fnstenv
in
xor
push
dec
jne
dec
push
xor
jle
inc
fbstp
cmp
xchg
mov
lock
mov
bound
jo
mov
out
adc
dec
xor
test
pcmpeqw
nop
mov
adc
jb
loopne
lods
js
add
pop
faddl
js
addl
xchg
inc
xchg
sub
lock
mov
addb
dec
sub
mov
dec
filds
mov
push
xchg
imul
push
jo
arpl
jae
fldcw
bound
frstor
js
or
push
inc
sbb
mov
ljmp
push
pop
jo
xchg
test
inc
gs
arpl
data16
pushf
mov
lahf
and
lahf
loope
and
mov
loope
movsb
out
mov
inc
dec
loope
insl
mov
sbb
es
and
pop
and
js
inc
adc
or
xchg
es
pop
nop
es
and
imul
mov
push
mov
leave
cld
mull
fists
pop
fnstcw
pop
push
mov
js
and
xchg
mov
or
lods
xchg
int3
lea
fwait
sbb
lahf
in
or
and
unpcklps
xor
enter
das
and
pop
cmp
int
mov
jnp
scas
inc
sbb
sbb
jo
xchg
je
or
adc
dec
xor
pop
add
cmp
dec
sbb
xor
adc
mov
or
push
repnz
lock
int3
loope
add
cltd
xor
sub
icebp
sub
sub
inc
xor
adc
aad
mov
or
sub
sbb
repnz
mov
cs
in
shll
es
js
sub
xorl
fs
jl
xchg
enter
insl
dec
mov
mov
xchg
mov
arpl
or
adc
lea
nop
cmp
cwtl
lret
adc
fiaddl
lods
lret
jle
push
lret
or
int3
shll
push
sub
dec
jno
or
xchg
je
xchg
pop
push
xchg
test
test
stos
inc
ljmp
inc
ljmp
das
and
in
das
daa
js
out
mov
divb
xchg
ss
das
inc
sbb
mov
pop
mov
push
cmp
orl
pop
hlt
push
sub
inc
mov
jno
sub
repnz
xchg
pop
mov
lret
push
fmull
enter
add
cmp
pop
fcomps
pushf
mov
shlb
and
push
and
adc
xchg
mov
pop
in
jno
or
test
jno
nop
pop
xchg
clc
mov
pop
mov
das
and
fs
and
outsb
or
pop
inc
cmp
sbb
dec
enter
pop
xchg
cmp
dec
outsl
pop
arpl
orl
and
loopne
push
add
jo
mov
inc
add
jb
hlt
xchg
cmpsb
mov
out
imul
inc
mov
fldlg2
dec
ret
nop
scas
js
sbb
and
outsw
lds
sub
adc
jp
stc
imul
shl
les
push
js
imul
dec
push
inc
and
jns
out
adc
in
nop
movsb
fsubrs
sbb
rolb
xor
mov
cmpsl
sbb
fwait
inc
sbb
and
sbb
cmpsl
push
pop
sbb
xor
xchg
push
popf
push
push
sbb
push
push
inc
cmp
adc
jno
adc
fsubrl
popa
push
jb
adc
adc
sub
push
sbb
bound
pushf
xor
adc
inc
xor
or
and
cmc
loop
mov
or
in
in
mov
mov
dec
adc
ret
ret
push
scas
rolb
sbb
sub
enter
imul
adc
loop
int3
add
xor
sub
push
fs
in
lcall
xor
repnz
and
mov
repnz
int3
or
inc
repnz
bound
mov
inc
fcoms
jl
fndisi(8087
ja
push
xchg
push
enter
jl
inc
add
int3
in
xor
ds
sub
add
loop
sbb
pop
and
cmp
pop
sbb
push
je
pop
push
push
and
movsb
mov
xor
push
xchg
rcrb
pop
nop
fdivl
aam
stc
test
lea
push
jp
and
cli
push
or
out
jmp
loopne
push
gs
addr16
cmp
pushf
push
or
rcll
xchg
xchg
and
mov
mov
cwtl
add
cmp
lcall
popa
inc
fimuls
or
sbb
test
test
lock
movsb
adc
sahf
push
cmc
imull
in
aaa
sub
sub
dec
mov
dec
or
fisubs
sub
inc
xor
faddl
mov
jnp
dec
adc
decl
pushf
xchg
stos
mov
popf
aam
mov
inc
clc
loope
clc
or
mov
cld
clc
jp,pn
adc
stc
in
sub
icebp
inc
stc
push
les
aas
adc
call
cwtl
mov
sar
adc
stc
in
call
cli
cs
fsubrs
inc
cli
leave
adcl
cli
out
in
and
inc
enter
inc
fmul
je
testl
pop
cmp
xor
inc
stc
and
jmp
and
clc
xor
mov
loopne
push
mov
loopne
sahf
cmp
dec
aas
add
aas
xor
or
imul
jns
dec
orb
call
pop
adc
jne
call
das
adc
mov
int3
adc
imul
cmp
and
aam
or
nop
cld
lods
sar
test
std
cmp
xor
call
pusha
std
push
test
adc
std
cmpsl
fs
cmp
enter
lods
lcall
push
nop
fadd
adc
repnz
icebp
sub
pop
fcoml
or
test
lret
cmpsb
pop
pop
lcall
push
lret
mov
fdivs
enter
mov
mov
shlb
hlt
sahf
inc
pop
or
je
movl
xor
cmp
sti
das
nop
and
push
stos
aas
sub
push
sbb
fs
insb
xor
mov
sbb
jo
dec
push
sub
nop
mov
sub
xchg
sub
add
cwtl
and
and
inc
pushf
mov
inc
mov
sub
movsb
and
bound
fxch
insl
clc
movsb
fisubl
insl
inc
and
cmp
ds
or
fcoms
xor
cwtl
mov
lcall
xor
push
lock
fidivrl
cmp
je
int3
add
mov
xor
inc
insb
clc
cmpsl
es
jl
or
xor
stos
out
sub
rcl
or
lods
push
nop
cwtl
enter
or
lea
or
cmp
call
les
fcompl
rcrb
pop
push
leave
sbb
and
fisttps
push
inc
dec
add
jmp
mov
sub
xlat
dec
ds
test
int3
pop
cmp
adc
aaa
and
test
and
xchg
sbb
je
inc
and
lret
stc
pusha
nop
sub
jno
ror
pop
movsb
fs
jg
jg
xchg
adc
enter
bound
jbe
or
movsl
mov
andl
dec
jle
cli
rcll
and
and
les
or
ds
add
enter
fcompl
fwait
mov
hlt
mov
and
add
daa
imull
lods
pop
icebp
and
insl
and
inc
and
inc
insb
mov
cmp
repnz
jmp
sub
or
and
adc
dec
test
or
inc
inc
fs
or
mov
dec
xor
int
leave
adc
xor
in
lahf
sbb
xor
mov
pop
leavew
shrl
pushf
cmp
mov
push
in
loope
push
clc
xor
adc
cmp
jnp
mov
or
and
lret
pop
mov
sub
sub
shl
push
pop
nop
or
adc
push
hlt
ficompl
inc
or
loopne
sub
and
lods
es
hlt
sbb
rorb
jne
xor
or
inc
aam
dec
lods
mov
orb
cmp
inc
or
dec
inc
or
pop
mov
or
test
mov
cmp
or
adc
or
mov
or
sub
orb
test
sub
push
mov
clc
push
sbb
std
sbb
sbb
sub
xor
mov
pop
push
call
fdivl
lods
lock
movzwl
adc
adc
adc
or
mov
scas
push
inc
ljmp
mov
aam
mov
mov
ret
pop
enter
in
xchg
pushf
xor
int
add
sar
push
sub
add
daa
push
decl
push
or
adc
pop
test
and
lret
inc
adc
insb
xor
dec
xchg
pop
and
push
and
jns
push
and
jns
cmp
fcoms
cmp
out
push
ss
nop
test
test
pop
in
dec
test
adc
push
test
and
and
inc
cmp
or
in
push
push
push
jns
cmp
insb
push
or
and
mov
mov
and
fsubs
enter
fdivrl
inc
fisubl
hlt
in
and
push
and
adc
leave
inc
add
and
sub
int
dec
lahf
xor
test
arpl
scas
cmp
and
jo
sub
stc
dec
int
pop
jle
xor
and
xor
pop
and
cmpsl
rcll
in
xchg
repz
int
dec
or
adc
rcrb
and
jg
adc
fidivs
in
and
out
fnstenv
enter
mov
test
test
lahf
sbb
cld
mov
pop
adc
push
mov
cs
loope
popa
bound
cmp
sub
jae
mov
jmp
cmpsl
cs
enter
and
pop
insb
mov
add
jmp
mov
jo
sbb
aam
sbb
bound
xor
mov
dec
push
cmpsl
std
push
pushf
pop
bound
xor
mov
movsb
mov
popf
mov
sarb
adc
push
insl
push
shlb
sbb
inc
lret
push
mov
jo
jg
in
je
adc
mov
lods
ljmp
pop
mov
js
popf
sbb
jns
je
test
in
imul
dec
negl
nop
and
pop
xchg
jecxz
xlat
mov
jne
out
cmp
jmp
les
sub
and
fs
or
ja
out
xchg
sbb
pop
rolb
dec
sub
inc
nop
std
mov
pushf
xor
mov
push
and
int3
cmp
in
test
inc
jo
cld
mov
lahf
dec
outsl
sub
nop
fmul
sub
or
nop
fcmove
push
stc
fisttpl
nop
fmul
test
fisttpll
xchg
loop
sbb
mov
adc
lods
or
cmpsl
pop
adc
lods
rol
in
sbb
mov
mov
shlb
in
xor
inc
mov
push
fistl
mov
sbb
fimuls
sub
enter
insl
add
xchg
adc
jbe
pop
mov
rcrb
push
call
mov
adc
test
sbb
jns
adc
adc
sub
into
into
mov
sbb
dec
out
mov
mov
jns
testl
fcmovnbe
and
sbb
lea
xorb
popf
mov
std
adc
push
push
inc
insb
test
pop
sub
mov
pop
xchg
jo
mov
in
insb
pop
orb
or
push
jge
inc
sbb
int3
jl
xchg
pop
and
xchg
mov
bound
and
xchg
add
test
push
pushf
xchg
mov
aas
inc
cwtl
shlb
mov
xchg
movsb
mov
stc
lods
adc
push
sbb
cmp
mov
lret
js
and
adc
xchg
in
add
gs
insb
ds
jae
and
sbb
sbb
dec
xchg
push
push
mov
outsb
jnp
lret
js
and
sub
jb
ficompl
inc
imul
jae
int3
jb
xchg
cli
repz
stos
insb
and
pop
push
test
mov
sbb
pusha
adc
xchg
lods
movsb
cli
aas
insb
xlat
pushf
test
mov
daa
or
test
insl
mov
push
in
push
add
enter
cmp
cmp
insb
and
sub
and
cmp
fcmovnbe
and
test
hlt
inc
pop
push
js
enter
imul
dec
sub
mov
jne
mov
xchg
ficoms
cld
jne
loopne
sub
mov
icebp
dec
jo
sub
or
inc
sub
push
pop
sub
mov
jo
pop
pop
mov
mov
lods
imul
cmp
je
test
lds
ja
sub
fnclex
hlt
pop
inc
lds
cmp
clc
xchg
or
sbb
cmp
cmp
enter
sub
sub
ljmp
dec
test
push
sbb
push
adc
dec
push
xchg
push
mov
sub
cld
and
push
mov
add
sub
dec
rcrb
mov
or
or
sub
sub
popa
jno
sbb
cmp
xchg
jmp
or
outsl
insl
movsl
sbb
insb
dec
sub
fadds
push
mov
mov
lods
adc
push
mov
fmull
pop
adcl
shlb
sbb
mov
decl
dec
sub
sbbl
in
mov
inc
xor
cs
and
inc
sbb
inc
adc
hlt
mov
es
icebp
dec
pop
pop
mov
add
jl
orl
enter
stos
xchg
mov
call
out
inc
push
das
xchg
cmp
ljmp
or
dec
inc
push
je
jl
pop
js
mov
das
sub
cmp
pop
pop
inc
sub
cmp
out
inc
and
out
je
lods
dec
sahf
mov
test
insb
inc
or
nop
xor
insb
adc
mov
pop
sub
in
mov
jle
add
mov
and
mov
nop
push
mov
mov
and
ljmp
jmp
add
test
adc
cld
xor
push
test
jb
adc
push
and
fs
fdivl
js
xor
adc
xor
js
sbb
mov
add
insl
outsl
jno
dec
xor
insb
lahf
nop
xchg
push
enter
jl
xchg
pop
and
xchg
mov
rcrb
aam
pop
mov
ljmp
xor
cmp
aaa
rolw
sub
mov
sbb
add
adc
aaa
lods
xor
cmp
mov
aaa
or
aaa
mov
lods
aaa
push
test
aaa
sub
aaa
sub
mov
or
aaa
pop
cli
outsl
pusha
dec
fsubp
imul
popf
cwtl
cmp
test
cmp
and
pop
test
test
cmp
and
cmp
ljmp
insb
repnz
hlt
je
sub
and
jno
rol
mov
push
fimull
or
cmp
insb
test
mov
das
std
nop
lods
or
mov
sub
pop
or
cmp
sbb
hlt
das
push
aad
test
std
sarl
or
or
xchg
js
cmp
jo
cmp
jns
lea
cmp
ljmp
push
push
cmp
mov
cmc
daa
stc
loopne
mov
cmp
push
and
cmp
ficompl
mov
pop
mov
les
dec
hlt
inc
pop
xchg
ds
dec
sbb
sub
test
cwtl
aas
js
adc
and
aas
outsl
movsl
and
iret
dec
aas
pop
jl
imul
inc
js
pusha
orb
adc
inc
mov
inc
popf
clc
and
mov
inc
je
jmp
or
xchg
cmp
xchg
cmp
loope
and
add
inc
int
or
xor
lds
movsb
scas
mov
rolb
cmp
mov
mov
or
push
dec
jnp
inc
push
push
lret
pop
inc
test
pop
je
mov
enter
inc
fmuls
dec
push
adc
adc
sub
adc
mov
cld
sub
or
cmp
adc
inc
push
and
lret
inc
pop
jl
mov
add
adc
mov
pop
jno
movsb
mov
jbe
icebp
or
mov
dec
mov
mov
andb
inc
xor
mov
xor
mov
push
inc
sbb
iret
sbb
adc
das
gs
enter
mov
push
sub
movsb
push
ss
inc
or
fisttps
mov
jbe
sbb
add
icebp
adc
rcrl
mov
roll
mov
inc
and
dec
jmp
xor
pop
mov
mov
mov
or
nop
fmul
mov
mov
addl
in
insb
iret
inc
cld
jbe
push
xchg
mov
popa
loop
dec
aas
fwait
push
and
xor
roll
lret
inc
and
dec
xchg
shlb
dec
scas
adc
in
xor
addl
into
sub
sub
out
xchg
stos
das
test
xlat
dec
jecxz
mov
or
jle
stos
je
sub
push
cs
movb
loope
pushf
loope
adc
dec
mov
sarb
lock
sbb
rorl
inc
dec
mov
add
adc
mov
cltd
mov
fs
dec
insb
sbb
cmp
dec
dec
repnz
jb
cmp
mov
bound
dec
adc
and
push
mov
test
dec
cmpsl
nop
cltd
lret
jp
cmp
dec
xchg
inc
jp
push
push
ja
addr16
aas
dec
xchg
inc
pop
push
push
mov
dec
sbb
mov
aam
call
ss
insb
repz
into
mov
in
cwtl
fcompl
gs
push
adc
pop
jbe
mov
push
adc
inc
push
loopne
dec
into
inc
nop
pushf
mov
xchg
dec
jnp
aam
cmp
div
dec
mov
test
or
sarl
mov
adc
xchg
xchg
mov
pushf
pop
popf
pop
xchg
push
bound
xor
and
push
lock
lea
nop
sub
push
push
lea
sub
insb
push
js
js
push
nop
repz
push
addl
mov
push
mov
bound
mov
push
in
adc
in
popa
mov
and
push
or
push
inc
lahf
shll
hlt
pop
jbe
xchg
push
inc
out
stc
pop
sub
push
adc
repnz
xchg
pop
rclb
addr16
inc
sub
and
imul
push
int
imul
outsl
lods
push
cmp
xlat
jge
fdivp
mov
imul
fldcw
jp
mov
push
mov
adc
in
cmp
mov
das
iret
fsubs
adc
fs
push
in
push
fcmovb
adc
sbb
jmp
xchg
xchg
mov
inc
and
jb
jle
or
add
adcb
enter
push
sub
sub
aad
movsl
repz
and
add
push
mov
sahf
adc
lea
in
hlt
ljmp
sbb
mov
jmp
jno
mov
cwtl
out
cmp
nop
adc
shrb
xor
mov
inc
pushf
jo
pop
xchg
or
hlt
pop
in
in
rol
xor
scas
das
dec
adc
mov
stos
mov
cwtl
inc
fxch
or
lods
push
nop
ror
call
pop
pop
lret
rcl
outsl
lock
fneni(8087
ljmp
pop
mov
dec
nop
sbb
nop
push
lock
pop
pop
insb
add
ret
clc
insl
cmpb
push
or
sahf
inc
inc
movsb
cs
les
xchg
inc
pop
mov
sahf
fsubl
mov
dec
or
in
repnz
and
icebp
cmp
pop
loope
pop
insl
adc
fsubr
sbb
hlt
mov
or
lods
and
pop
mov
mov
jne
pop
pop
lods
mov
shlb
lods
cwtl
lea
mov
inc
enter
inc
in
fdivs
inc
cld
idivl
clc
insb
cmp
push
or
sbb
js
enter
or
cmp
mov
enter
or
pop
fldlg2
or
push
les
sub
in
insb
dec
test
cwtl
sub
pusha
popa
mov
jo
adc
test
or
lock
add
mov
shlb
push
mov
bound
jb
sbb
mov
sbb
jns
sbb
jbe
xchg
push
xlat
test
mov
dec
sub
push
mov
mov
push
fidivl
sbb
jp
popa
rcrl
push
jne
push
adc
test
sbb
hlt
sub
adc
popf
ds
push
sbb
pop
hlt
loop
xchg
and
mov
jbe
mov
jbe
jbe
enter
jbe
jbe
jmp
xchg
push
scas
lahf
loopne
adc
sub
popf
popf
inc
and
pop
pop
mov
cmp
mov
cmp
js
dec
mov
jl
mov
push
icebp
adc
dec
fdivrl
inc
les
cmp
sarb
dec
sub
and
sub
push
pop
cmp
gs
icebp
or
rclb
mov
xchg
mov
jecxz
data16
das
sbb
movsb
pop
push
and
shl
sbb
pop
and
cwtl
xor
ss
addl
xor
ja
xchg
and
dec
imul
pop
addr16
cmpsl
xchg
xchg
push
sub
fs
pop
mov
iret
xchg
pop
aam
out
pop
les
inc
xchg
outsb
cmp
addb
movsb
push
ljmp
ds
mov
mov
jl
dec
inc
push
mov
xor
push
ds
jb
lea
test
out
adc
xor
xchg
in
mov
lds
pop
xor
js
or
pop
into
cmpsb
repz
pop
inc
insb
pushf
sbb
inc
imul
je
inc
imul
pop
es
lea
lahf
push
les
sub
xor
int3
imul
repnz
mov
pop
pop
and
sbb
sarl
jp
inc
dec
insb
sti
or
or
push
imul
inc
or
push
xor
das
pop
test
dec
cmc
sbb
les
jb
in
notb
adc
or
push
prefetcht0
sub
adc
imul
jge
repz
jmp
xor
mov
mov
pusha
test
cmp
hlt
adc
outsb
std
int
je
xor
cmp
jo
inc
outsb
mov
pop
outsb
jle
pop
and
rorb
outsb
sbb
jns
sarb
cmc
outsb
push
pushf
sbb
testb
mov
fs
xor
pop
js
xchg
adc
addr16
dec
lods
clc
lea
dec
iret
xchg
add
test
push
mov
pop
enter
jle
sub
push
lds
inc
add
inc
xchg
jo
sbb
sbb
cld
mov
push
push
xlat
cwtl
and
nop
jae
lds
mov
ds
insb
in
popl
andl
out
daa
add
cmp
dec
in
mov
push
sbb
test
inc
xor
nop
ss
dec
repnz
mov
inc
jl
shlb
pushf
repnz
inc
mov
fdiv
lock
test
dec
or
shll
or
adc
inc
cmp
xor
inc
loopne
and
xchg
in
les
mov
outsl
add
pop
adc
jl
mov
popf
inc
fsubr
mov
mov
mov
mov
js
and
pop
mov
and
push
jp
in
lea
orb
mov
pop
sbb
insl
orl
lahf
mov
fs
cwtl
les
sub
ja
dec
ja
les
testb
add
je
jp
nop
mov
insb
movsb
lea
ja
inc
lea
fdivs
sbb
lock
adc
call
repnz
pop
mov
inc
loopne
js
lock
inc
mov
insb
mov
lahf
insl
adc
loop
cld
std
pop
push
mov
push
and
jno
jno
jnp
les
aas
xchg
in
xor
inc
jns
scas
ret
sbb
shrb
or
lea
ret
adc
movsb
stos
repnz
movsb
cs
pop
das
rol
jnp
cmp
xchg
aam
test
mov
loop
fnstcw
xchg
dec
pop
mov
mov
fs
jbe
clc
and
or
and
sub
xor
xor
divb
mov
mov
out
adc
jle
or
jg
sbb
mov
jg
test
adc
mov
test
mov
test
je
fwait
adc
jg
test
enter
adcb
xchg
movsl
or
dec
fistps
mov
int3
jl
inc
dec
mov
jl
jo
sbbb
jo
test
mov
shlb
pushf
jns
pop
shll
mov
and
jns
sbb
lock
pushf
lret
and
ret
das
push
adc
pop
mov
xor
and
mov
and
and
ds
and
int3
in
in
ds
xor
or
loop
and
daa
sub
in
mov
add
jle
mov
mov
std
jmp
mov
jmp
ss
sub
aam
dec
xchg
sbb
inc
fs
xor
lret
sub
nop
pop
repnz
cmpsl
pop
mov
mov
in
add
jne
cld
mov
data16
out
push
insb
ficoml
mov
lock
sbb
xlat
lods
xor
daa
jb
ss
pushf
mov
lds
and
inc
jae
or
sar
mov
sbb
inc
mov
sub
mov
or
movsb
insl
mov
test
and
or
sbb
data16
ss
fsubrs
ret
ja
loope
in
clc
inc
test
and
lret
dec
test
sub
fs
js
lea
and
mov
lods
push
fldenv
enter
aas
fdivrs
inc
mov
push
or
mov
mov
and
cmp
and
xchg
shll
js
pop
mov
loope
xchg
push
mov
sbb
int3
lcall
in
pop
push
push
xchg
sbb
sub
and
mov
insb
jl
xchg
enter
jl
xchg
enter
jge
sbb
mov
fdivrl
mov
jmp
fdivr
push
add
fmull
jmp
jge,pn
push
xor
fstpt
adc
cmpsl
xchg
popa
sbb
inc
cmp
xchg
or
lock
dec
inc
and
push
mov
pop
cmpsb
jg
jecxz
stos
fidivl
mov
and
xchg
mov
sbb
mov
xor
rorb
divl
stos
cld
mov
lds
loop
les
mov
adc
sbb
nop
cmp
mov
pop
dec
mov
sub
cmpsl
jle
sbb
pop
pop
mov
fldcw
int3
pop
das
pop
sbb
inc
pop
lahf
pop
orb
pop
cwtl
dec
call
enter
dec
xchg
mov
cltd
or
dec
and
jge
pushf
jp
jl
adc
cmp
mov
pop
adc
mov
jnp
push
lahf
push
xor
lea
mov
add
mov
dec
sarb
fadds
or
fistpl
sbb
cmp
shlb
mov
dec
add
cmp
mov
nop
mov
es
mov
adc
pop
andl
mov
sti
hlt
std
or
aas
js
jnp
or
mov
xchg
jns
and
notb
cmp
and
cmp
add
and
adc
adc
sbb
sbb
and
je
xor
cmc
push
or
sbb
and
sbb
bound
adc
push
xor
sbb
or
push
or
push
arpl
lods
and
adc
and
adc
and
or
sbb
ret
adc
xor
dec
xor
and
insb
shlb
adc
push
rcr
cwtl
dec
sti
and
dec
xchg
push
iret
or
jp
int3
mov
arpl
leave
xor
mov
inc
adc
inc
mov
jbe
jo
mov
sub
adc
movsl
out
cmp
or
jae
lods
xlat
sahf
sbb
clc
fldt
leave
mov
mov
dec
clc
ja
xor
add
cld
or
sbb
sbb
and
adc
xchg
jns
mov
inc
or
and
mov
jno
jge
mov
add
nop
xchg
push
mov
nop
sub
cwtl
fmull
pop
lods
push
mov
xor
nop
ds
call
or
xchg
repnz
and
fdivs
sub
and
xchg
jns
inc
xchg
sub
adc
dec
rcl
xor
movsb
scas
adc
inc
mov
sahf
adc
inc
mov
mov
inc
or
or
push
fs
cmp
push
push
inc
sbb
lods
aam
aad
mull
leave
push
fcompl
outsb
xchg
push
fcoml
sbb
out
mov
pop
test
std
outsb
mov
pop
ljmp
xor
scas
xlat
mov
mov
pop
sub
jne
mov
or
repz
sahf
adc
adc
inc
dec
std
into
and
or
dec
imul
ja
push
sti
xchg
test
mov
mov
inc
jge
into
test
clc
clc
lods
inc
sbb
nop
or
adc
and
js
adc
sbb
sbb
or
xchg
sub
or
repnz
das
icebp
jb
subb
push
icebp
jae
call
pop
push
mov
decb
adc
xchg
inc
adc
xchg
mov
rcrl
dec
mov
dec
mov
and
adc
dec
test
jge
push
push
cmp
push
inc
adcb
xchg
jp
and
pop
dec
jg
push
sub
test
rorl
adc
add
arpl
xchg
xchg
mov
lods
popf
ja
sbb
jo
fdivrl
inc
clc
or
inc
sahf
lock
jb
xor
sbb
and
push
adc
and
insb
sahf
mov
xchg
xor
mov
mov
and
or
xchg
les
cs
and
cmp
fdivrs
pop
xchg
fmull
mov
loopne
adc
adc
test
and
inc
fabs
dec
mov
es
lret
push
inc
repnz
xorl
hlt
sub
cmp
sbb
or
and
and
xor
cmpl
pop
push
and
enter
and
jbe
cmc
rdmsr
adc
and
xor
in
mov
mov
hlt
ljmp
shlb
clc
dec
dec
stos
cmp
mov
xor
cmp
dec
xchg
insl
int3
das
fisubs
enter
and
adc
pop
adc
adc
loop
scas
sub
test
jne
push
mov
cmpsb
arpl
adc
push
das
mov
mov
hlt
jmp
outsl
mov
cmp
cmp
push
daa
inc
cwtl
and
or
cmp
push
and
add
adc
push
push
sub
adc
inc
mov
jg
out
pop
cmp
je
cmp
push
dec
dec
and
mov
dec
inc
ja
pop
mov
pop
pop
mov
mov
xchg
test
dec
frstor
bound
movsb
mov
inc
les
cmp
lods
pop
mov
gs
insb
push
lds
and
mov
scas
test
loopne
fmuls
ficoml
pop
or
pop
inc
loope
cmp
pop
mov
loop
movsb
movsl
mov
lods
push
mov
add
adc
fs
inc
loopne
pop
fwait
cmp
mov
inc
cmpsl
mov
sub
mov
test
dec
mov
mov
xor
pop
inc
jo
std
push
dec
test
jb
push
and
push
and
pop
xor
sarb
mov
and
movsb
mov
fcomps
movsl
cmp
or
test
sbb
mov
shrb
std
in
les
icebp
call
in
in
aas
dec
pop
mov
pusha
hlt
pushf
fcoml
sub
mov
ret
jns
push
in
stos
lea
fldenv
shrl
stos
test
test
inc
stos
mov
cmp
icebp
jl
and
mov
stos
cmp
jl
scas
mov
test
mov
cmp
mov
sbb
pop
mov
stos
cs
pop
nop
rcr
lods
daa
aad
add
ja
adc
cld
jle
mov
xchg
out
pop
pusha
clc
sti
test
dec
lods
mov
arpl
aaa
adc
lods
mov
and
lods
outsb
lret
fcoml
sub
outsl
mov
mov
add
jo
or
pusha
loop
lods
push
mov
subb
test
fsubrl
sbb
scas
aad
imul
and
mov
aam
sub
inc
sub
inc
cmp
add
dec
test
mov
and
scas
loope
jmp
or
add
or
jno
or
pop
lahf
push
pop
mov
rorl
enter
test
rcrb
outsl
lret
jno
adc
sub
xor
push
mov
push
xchg
and
outsb
leave
lea
jp
lock
shr
addb
add
mov
xor
sbb
xor
add
cmp
sub
scas
test
or
cwtl
out
ds
stc
imul
and
sub
in
push
pop
adc
pop
insl
hlt
adc
adc
fs
cs
js
sub
leave
or
fstl
scas
push
jae
sub
hlt
jne
sub
ja
xor
adc
cli
sub
nopl
xor
push
adc
nop
mov
shll
adc
push
sub
and
imul
push
jo
xor
and
and
js
jg
pop
or
shlb
mov
mov
insb
cmp
and
movsb
push
adc
add
inc
add
int3
popa
xor
sbb
test
push
push
or
mov
inc
and
out
cmpsl
push
jg
xor
sbb
xchg
jp
inc
xchg
cwtl
outsb
cli
iret
xchg
pop
xchg
jl
xchg
cmp
dec
nop
call
or
xchg
jns
pop
sbb
mov
inc
cmp
movb
push
mov
icebp
les
insb
push
sub
push
mov
push
inc
mov
clc
les
insb
and
insl
mov
add
pop
inc
call
and
sub
js
jmp
sub
fsubl
adc
in
xchg
inc
bound
adc
add
in
mov
nop
insb
mov
mov
mov
sub
sub
xchg
sub
and
fsts
jnp
idivb
pop
fcomps
and
jno
or
test
cmp
mov
inc
mov
pop
and
jb
xchg
je
stc
cmpsl
leave
push
xor
arpl
insb
sub
stos
cmp
daa
mov
push
lods
pop
dec
pop
js
xchg
fistpll
mov
mov
fs
enter
fldenv
fcomps
push
in
cmp
insb
into
or
adc
push
jb
test
mov
pushf
mov
xchg
cli
xor
movsb
adc
dec
sub
mov
das
sarb
pop
push
and
js
mov
cmpsb
mov
xchg
jo
cli
cmpb
loopne
xor
jle
inc
mov
pop
mov
or
push
and
mov
pop
cmp
jge
rol
hlt
mov
mov
aam
mov
push
in
ljmp
jl
adc
sahf
mov
je
and
pop
ds
mov
inc
sahf
push
push
cmpb
mov
call
int3
stos
mov
xchg
in
js
cld
jl
xchg
adc
lock
rcrb
mov
ss
sbb
jl
xchg
enter
jl
xchg
xlat
ljmp
aam
outsb
or
inc
call
sarl
and
or
adc
adc
dec
pop
push
and
push
dec
fiadds
mov
hlt
jge
aas
test
mov
sbb
mov
je
mov
scas
mov
xchg
cmpsb
loop
sbb
scas
imul
scas
das
mov
stc
sbb
shl
mov
insb
dec
cwtl
jmp
xor
imul
pop
cmp
sbb
inc
xchg
dec
xor
mov
lea
movsb
push
xchg
xor
sub
out
shll
mov
jb
insb
adc
in
pushf
mov
sbb
push
sbb
imul
push
inc
lds
push
das
jnp
int3
xor
lds
and
les
icebp
push
fistpl
lds
fwait
sub
in
mov
ljmp
loopne
or
jnp
scas
or
scas
bnd
and
decb
mov
in
and
sahf
fldcw
xlat
scas
cmp
sbbb
out
call
mov
lahf
push
in
sub
aad
in
call
clc
repnz
adc
adc
adc
icebp
adc
and
adc
hlt
adc
and
adc
popa
or
sub
mov
mov
inc
rcr
adc
enter
push
adc
sub
enter
pop
mov
stc
adc
push
test
in
xchg
addr16
or
mov
call
push
clc
add
mov
pop
nop
xor
add
push
cmp
dec
iret
or
mov
inc
outsb
ret
ja
sbb
adc
movsb
lods
mov
xchg
and
mov
xor
cwtl
cwtl
addr16
jns
imul
scas
jl
adc
leave
dec
or
addl
into
xchg
jg
inc
inc
xor
lret
or
js
mov
ret
int3
xchg
sbb
inc
mov
push
push
and
dec
dec
jns
in
aas
mov
lods
sbb
insb
push
movsb
push
and
adc
sbb
inc
sbb
mov
roll
loopne
lahf
jle
inc
or
mov
neg
addr16
jecxz
mov
sbb
jne
cmpl
je
jns
loopne
mov
inc
lock
add
jle
adc
aas
cli
rclb
or
jmp
sub
sub
cmp
je
add
mov
push
jmp
test
jl
dec
inc
jge
out
mov
xlat
lods
push
scas
daa
stos
cmp
cmp
sbb
testb
or
mov
sarl
fnstcw
in
sub
add
sbb
dec
cmp
push
clc
mov
dec
cmovo
pop
lods
cld
hlt
push
push
cmp
push
cmp
js
stc
or
ret
and
inc
mov
cli
add
pusha
jmp
aas
and
repnz
lods
out
adc
ss
pushl
sti
push
scas
jb
xchg
fists
jg
sbb
jmp
dec
xchg
sbb
inc
inc
xor
push
push
and
add
test
shll
dec
inc
and
jne
ret
lds
push
xlat
ljmp
int3
inc
movl
xchg
insl
bound
xchg
andb
ss
adc
mov
add
sub
pop
clc
jmp
daa
iret
fstl
and
jae
mov
fistl
int
movsb
sub
movsb
and
pop
fstps
or
fstpt
xor
adc
bound
jne
cwtl
push
adc
cmp
push
xor
movsb
fldenv
push
test
stos
les
aaa
mull
test
pushf
or
inc
inc
into
in
dec
js
xchg
push
cwtl
xor
sarb
xor
scas
lods
jl
or
mov
cwtl
mov
pop
xchg
push
xor
mov
sahf
lahf
and
into
inc
mov
xor
adc
xor
cmp
rolb
mov
cld
andb
mov
loope
inc
pushl
ja
add
and
rorb
sub
lea
mov
xchg
into
and
into
jb
leave
pop
icebp
cld
inc
xor
push
push
add
xlat
aam
cmp
jne
mov
popa
popa
jl
lahf
jne
push
mov
push
test
and
pop
popa
mov
lds
cli
mov
dec
cwtl
inc
and
hlt
jae
mov
mov
int3
and
xchg
or
adc
bound
inc
push
xchg
adcl
add
les
and
cmp
and
mov
sub
push
clc
pop
test
lds
pop
fs
jo
jp
ret
adc
mov
addb
loop
adc
cmp
icebp
test
mov
sbb
adc
adc
pop
clc
int3
test
mov
adc
test
inc
mov
lret
add
pushf
adc
clc
test
mov
insb
loope
pop
adc
and
push
pop
and
sub
xor
addr16
jl
inc
mov
and
nop
icebp
pop
or
push
pop
sbb
inc
pusha
loop
adc
cmp
popa
icebp
nop
or
enter
test
mov
adc
mov
mov
xchg
int3
sub
and
or
push
or
jmp
popf
push
cli
inc
fmull
push
sbb
notb
sti
cmp
les
push
or
lret
hlt
call
in
add
dec
jne
pop
or
aam
sub
dec
xchg
lds
push
push
mov
sub
jo
outsb
gs
and
stos
js
dec
out
push
mov
push
call
fldl
leave
mov
pop
and
pop
inc
jno
sub
xchg
aas
mov
je
pop
nop
aas
insb
mov
je
adc
std
gs
add
fs
add
je
bound
outsb
mov
jb
push
decl
or
push
mov
into
dec
je
sbb
in
sti
lea
jnp
les
adc
add
insl
mov
sarb
sbbb
jp
and
loop
je
inc
ja
bound
insb
das
cmp
js
movsb
and
cmp
inc
jo
and
aaa
fincstp
mov
mov
add
les
popa
pusha
fstps
test
test
lret
and
mov
push
mov
test
fs
and
mov
test
and
push
cld
fs
push
mov
adc
rcl
pusha
out
pop
sub
pushaw
and
loop
xchg
sub
pusha
mov
fnstenv
ljmp
or
dec
jns
leave
sahf
nop
mov
cltd
call
adc
push
inc
pop
pop
in
call
clc
dec
hlt
mov
jae
and
cwtl
push
sub
jg
jmp
adc
shlb
add
fs
jbe
mov
pushf
sbb
sbb
xor
sbb
sub
lock
lock
cmp
ljmp
mov
sahf
test
xor
sub
int3
adc
xor
push
in
outsb
and
jns
scas
pop
nop
and
and
and
ficoms
fmul
inc
andl
nop
and
rclb
and
loopne
roll
das
and
fs
andb
and
xchg
mov
and
stc
or
std
ljmp
leave
rorb
in
stc
shrl
repz
and
jmp
ret
adc
inc
sub
mov
aad
xchg
and
inc
jle
sbb
or
sub
jae
adc
mov
fcoms
dec
fcmovbe
push
mov
pop
jno
inc
daa
and
fs
xor
mov
inc
mov
enter
imul
les
and
test
in
lods
shll
and
test
aaa
in
rolb
shl
pusha
jmp
int3
push
fcoms
mov
inc
sub
add
adc
sbb
dec
repz
or
cmp
sbb
jno
mov
test
jb
xchg
int
dec
mov
sub
cmp
lods
inc
gs
push
adc
and
imul
test
sbb
mov
fisubrs
sub
mov
mov
inc
sub
shr
sub
mov
insb
dec
lods
adc
dec
lods
and
xlat
mov
pusha
in
jns
mov
sub
or
adc
lods
jp
lret
add
add
adc
subb
call
mov
push
mov
mov
movsl
mov
test
jne
je
fistpl
cmpsb
dec
nop
sbb
push
pop
mov
outsl
jb
adc
ja
test
data16
mov
push
cwtl
lods
push
sahf
test
and
incb
fsts
scas
push
stc
inc
lret
shlb
repnz
dec
lock
adc
and
xlat
hlt
jne
mov
stc
xchg
je
jns
cmp
sub
pop
mov
jl
mov
inc
cld
lea
aas
mov
js
jp
mov
data16
pop
clc
call
addr16
or
cmpl
jle
jle
bound
insb
fdivs
repz
jge
ret
aam
shr
push
mov
and
inc
push
push
and
stc
mov
inc
lods
add
jne
addr16
mov
mov
xchg
inc
or
stos
jb
push
popf
sub
stc
sub
pushf
in
movd
jge
cmp
jo
pop
xlat
pop
or
inc
dec
das
jne
int
or
sbb
or
insb
or
cmp
and
cmp
push
and
xchg
pop
mov
push
xchg
inc
out
imul
sub
and
in
sub
inc
loopne
test
xor
faddl
loopne
adc
and
inc
fcomps
and
lea
lea
aam
or
cmp
mov
jno
push
xor
lea
adcl
int3
mov
xchg
pop
and
mov
push
ret
lret
adc
adc
js
inc
sbb
inc
sub
daa
nop
nop
or
mov
mov
xchg
sub
xor
cmp
mov
cmp
test
or
dec
mov
sub
push
push
test
and
lcall
shl
and
gs
cmp
dec
insb
cmp
add
push
fs
mov
fs
idivl
lret
in
setle
pop
cmpsl
pmaxub
sub
shrl
inc
cmp
xor
adc
dec
mov
jo
movsb
movsl
sbb
pop
adc
sbb
cmp
jne
jl
add
xchg
shr
call
jbe
cmpsl
or
push
movsl
std
jo
je
or
divps
pushf
mov
rclb
scas
div
dec
ret
push
std
push
flds
jmp
and
xor
jne
mov
and
jmp
fdiv
mov
and
jmp
pop
add
or
push
insb
cmpxchg
mov
testb
or
movsb
scas
clc
xlat
movsb
scas
cld
xchg
mov
or
mov
xchg
xchg
pop
out
cli
lock
or
or
adc
daa
call
aad
in
out
sbb
inc
clc
ficoml
push
cmp
pinsrw
int
pop
pushf
in
inc
push
lock
data16
js
mov
xchg
and
mov
push
ficomps
mov
repz
cmpsb
ss
mov
add
add
sub
popa
lock
xchg
sbb
mov
dec
jmp
ret
or
out
clc
pop
sbbl
xchg
mov
adc
cmpb
and
push
pop
push
sbb
inc
pusha
jle
push
inc
fdiv
les
pop
or
repnz
sub
dec
jne
rcr
push
dec
adc
outsb
fcompl
nop
incb
jle
inc
in
dec
push
test
jl
inc
inc
dec
shrb
push
dec
adc
cmp
or
xor
cmp
xchg
mov
jne
arpl
push
mov
push
pop
cmp
pop
out
mov
pop
mov
imul
cmpsb
sti
lock
mov
lock
pop
shr
jns
jae
out
dec
out
int
aas
xor
stos
lcall
int3
or
mov
dec
mov
nop
jmp
and
inc
aaa
jg
sub
xchg
adc
cltd
push
pop
rorl
mov
aam
ret
and
xchg
in
imul
movsb
fcoms
xchg
pop
test
and
and
jle
les
jg
gs
mov
fadd
add
outsb
das
dec
aam
movsb
cmpsb
sbb
mov
push
or
les
outsb
fmuls
mov
xor
xchg
mov
inc
xor
mov
mov
pop
int3
inc
xor
mov
cmpsb
imul
add
fisttpl
mov
out
adc
ret
xor
cmp
mov
clc
test
dec
xchg
xchg
pusha
sub
sbb
movsb
pop
sub
inc
push
mov
ret
pop
jae
cmp
ja
lret
lea
mov
xor
cmp
inc
add
mov
push
pop
and
imul
aad
cmp
mov
mul
cmp
pop
lea
jl
pushf
xor
enter
adc
xchg
pusha
sbb
js
xchg
push
mov
xchg
inc
pusha
mov
mov
inc
cli
enter
sbb
pop
inc
je
test
adc
mov
sub
pop
push
mov
pushf
adc
repnz
inc
mov
sbb
les
sar
and
inc
dec
push
mov
test
cmp
lea
pop
mov
mov
dec
mov
inc
test
cmp
jne
adc
mov
mov
les
add
add
and
dec
sbb
push
lea
les
add
icebp
mov
mov
inc
clc
push
jecxz
push
push
mov
popf
push
add
clc
rcll
jo
mov
lea
call
and
adc
fs
test
adc
repnz
inc
push
mov
pushf
sbb
mov
lea
adc
jns
sbb
inc
inc
pop
push
mov
lds
test
pop
add
dec
inc
inc
push
push
pop
ret
mov
decb
and
pop
test
mov
inc
arpl
es
call
loop
fiaddl
adc
push
dec
shlb
xchg
stos
je
dec
and
test
dec
adc
inc
pop
mov
arpl
es
clc
test
push
dec
dec
les
lods
sub
mov
loopne
inc
push
push
mov
aad
jns
pop
fadds
inc
and
lods
dec
popa
pop
test
mov
mov
push
mov
adc
dec
push
push
and
insl
and
lock
dec
xchg
inc
sub
inc
dec
push
pop
push
aad
add
sbb
inc
dec
push
pop
lds
jo
call
push
movsb
fdivl
inc
sbb
inc
fisubrl
cmp
inc
js
sbb
cmp
call
ja
push
inc
repnz
ret
aas
push
arpl
ja
pop
orb
pop
inc
push
mov
xchg
pop
les
rorb
push
sarl
sub
sbb
dec
dec
cmp
enter
pop
pushf
hlt
in
add
popa
outsb
arpl
clc
int3
in
and
test
push
in
mul
pusha
add
sub
push
push
xlat
lcall
jns
inc
shll
mov
and
mov
andb
mov
xor
push
out
movsb
or
jne
inc
and
and
sbb
or
and
aam
movsb
bound
xchg
push
inc
in
inc
loopne
xchg
sbb
ficompl
push
jbe
jo
inc
sbb
jb
push
scas
mov
hlt
push
pop
xchg
cmp
sbb
sub
inc
inc
inc
dec
imul
dec
imul
inc
bound
push
imul
outsb
adc
nop
data16
repz
sub
inc
or
add
outsl
sbb
sahf
and
mov
lcall
push
dec
push
and
xor
sbb
and
lock
inc
dec
mov
scas
inc
insb
das
and
jmp
and
popa
inc
dec
dec
xor
insb
inc
cmp
sub
and
push
pop
push
sbb
ss
enter
mov
push
cmpsb
getsec
xchg
lret
and
je
sub
int3
inc
dec
pop
inc
ret
push
pusha
jb
addr16
xor
dec
sbb
and
insb
mov
dec
std
rclb
mov
aas
pop
sub
test
jb
xor
imul
cmp
and
mov
and
xchg
dec
notb
jne
ja
je,pn
dec
lret
jbe
mov
imul
adc
stc
data16
aas
movsl
orb
mov
push
dec
clc
cmp
divb
mov
or
fs
pushf
fwait
cld
inc
sbb
dec
jl
mov
outsb
data16
pop
xchg
cmp
fs
mov
push
pop
out
imul
dec
dec
and
ret
lret
aad
fdivl
loopne
push
test
adc
cmp
jo
call
insb
arpl
je
mov
sbb
inc
sub
inc
xor
scas
and
and
push
dec
sub
sub
mov
jecxz
das
dec
and
fsubl
dec
cmp
mov
adc
inc
dec
clc
inc
aaa
cmp
enter
int
out
data16
sbb
push
dec
pop
sbb
push
addps
outsl
out
jle
dec
cmp
inc
pop
cmp
push
outsl
jle
js
inc
test
pop
inc
mov
std
or
test
sbbb
lret
cld
xchg
cmp
inc
inc
dec
inc
xorb
ret
pop
xchg
mov
adc
lret
inc
dec
push
dec
mov
imul
mov
cmp
dec
daa
cmp
cs
push
push
push
cs
aas
dec
lea
out
inc
test
or
cwtl
je
popa
fs
mov
and
push
mov
and
push
jb
inc
popa
es
sub
cmp
movsb
push
sbb
rcrb
sbb
sub
test
outsb
mov
inc
sbb
not
outsl
lea
lods
cmp
and
loopne
xchg
sbbl
ss
out
and
cwtl
jbe
inc
mov
ja
scas
cmp
cmp
dec
lods
push
and
outsl
xor
and
adc
xchg
sbb
push
inc
outsl
inc
inc
shr
sbb
jo
into
inc
xor
dec
mov
call
shlb
pop
and
and
and
mull
xlat
push
cmpsl
inc
xor
and
fs
daa
leave
cmp
or
in
push
movsb
adcb
cmp
dec
mov
jp
test
sbb
addr16
mov
mov
shr
inc
sahf
xchg
inc
ret
xchg
push
and
addr16
mov
dec
les
sbb
and
push
push
dec
and
jne
bound
arpl
cmp
imul
adc
lods
fsub
xor
in
cmp
lods
inc
jmp
or
and
in
ds
dec
pop
xchg
adc
in
pop
cmpsl
dec
adc
in
movsl
xchg
test
sbb
xchg
adc
cmp
cmp
cmp
rclb
xchg
jb
sbb
lea
push
imul
sub
enter
adc
enter
nop
mov
fs
mov
inc
in
mov
cmp
mov
popf
outsb
mov
cli
adc
xor
dec
push
data16
cmp
jno
dec
sbb
dec
inc
pop
add
jb
inc
xchg
aaa
sub
and
out
rcll
push
es
ret
bound
in
imul
cli
test
icebp
adc
test
int3
frstor
mov
js
insb
and
adc
in
test
dec
dec
push
scas
ficomps
sub
jne
int3
and
es
mov
sub
dec
pop
aaa
mov
and
xchg
jp
sub
xchg
loopne
pop
push
mov
sub
insb
mov
add
ret
cwtl
sbb
push
cmp
test
xorb
xchg
pusha
mov
and
mov
imul
lea
push
test
and
cs
jge
or
jbe
cs
jge
jae
inc
and
jne
inc
or
pop
outsl
and
push
outsl
movl
outsb
movsl
jns
loopne
cmp
cld
push
ret
insl
inc
dec
jno
and
xchg
imul
dec
or
sub
sbb
xor
sbb
pop
xor
icebp
add
pushf
clc
pop
dec
pop
out
mov
inc
out
xor
inc
dec
push
or
aaa
pop
test
xchg
arpl
xor
mov
fcomps
inc
inc
dec
inc
pop
push
push
rcl
push
sbb
inc
mov
push
push
mov
xor
adc
lahf
or
push
push
sbb
pop
inc
sbb
cmpsl
leave
inc
pop
sbb
xchg
into
cmp
sbb
shrl
xchg
pop
or
adc
push
popa
add
and
or
pop
pop
loope
cld
mov
jecxz
inc
push
pop
int3
mov
and
push
nop
mov
out
ret
rorl
lds
or
xor
aaa
and
pushf
lods
pop
jns
loop
hlt
sti
xor
mov
inc
nop
int3
scas
sbb
sbb
fwait
jno
cmpb
mov
test
out
mov
and
xlat
mov
add
dec
scas
sub
dec
mov
cmp
jns
iret
sub
adc
mov
pusha
lock
clc
mov
or
or
sti
pop
and
lcall
in
inc
lea
push
sbb
in
inc
xchg
or
leave
aad
in
pop
add
sub
or
mov
or
je
mov
and
push
or
cmpsl
sbb
adc
jmp
inc
adc
or
iret
adc
xchg
in
mov
jno
loop
adc
mov
push
inc
mov
pop
add
xchg
mov
hlt
out
mov
shll
dec
in
adc
fcoml
jge
in
push
in
jmp
mov
rorl
fdivrp
shrl
pop
movsb
bound
leave
or
add
loopne
or
mov
subl
jbe
or
decb
and
or
cld
push
cld
sbb
xor
jno
xchg
inc
sbb
add
inc
jg
adc
bswap
push
cmp
or
dec
push
inc
inc
mov
pop
fmuls
lods
adc
cmp
dec
sub
pop
add
cmpsl
inc
cmp
mov
je
xor
push
hlt
xor
in
push
pop
adc
adc
pop
mov
sbb
les
pushf
xchg
sbb
and
inc
pop
or
and
mov
or
enter
andl
dec
xchg
adc
lahf
imul
movsl
adc
inc
inc
add
jo
addr16
push
les
or
pop
pop
test
adc
pop
push
mov
sub
repnz
jb
and
mov
push
dec
push
sbb
mov
or
scas
shll
sbb
adc
adc
nop
sbb
out
push
mov
lcall
adc
das
enter
push
loopne
add
or
add
inc
ljmp
setb
sub
inc
inc
inc
sarb
sbb
pushf
leave
mov
dec
sarb
push
adc
add
cmp
lcall
push
push
pop
pusha
outsb
push
mov
cli
jl
sti
lcall
and
inc
mov
push
sarl
add
mov
insb
jo
inc
adc
and
xor
pop
lds
sub
push
fsubl
sub
pop
add
push
hlt
mov
mov
ljmp
add
inc
and
inc
ds
inc
add
inc
add
add
test
jo
shlb
and
sub
sub
cmp
sub
xchg
xor
adc
mov
mov
sub
and
cmp
cmpsl
inc
movsl
mov
or
pusha
push
dec
xchg
pop
mov
mov
sbb
addl
sbb
sub
or
lds
aas
in
xor
mov
sarb
fnstcw
push
mov
push
insb
dec
mov
rcll
sbb
push
mov
jge
lret
sub
sbbl
jl
push
and
mov
iret
sub
xor
mov
dec
add
icebp
dec
jo
push
loop
pop
stos
mov
inc
clc
jge
nop
add
je
sbb
adc
push
es
mov
cld
push
or
fdivrp
or
rcr
and
adc
push
adc
fstpt
je
mov
push
cli
xchg
mov
arpl
adc
dec
or
add
add
popf
rorb
add
sbb
sub
sub
add
inc
and
mov
and
lret
std
sub
adc
xchg
push
and
sub
xchg
and
movsl
sbb
push
mov
add
mov
and
cwtl
lea
mov
insb
dec
xor
push
mov
dec
cmp
mov
sub
mov
pop
jnp
lods
popa
lds
or
call
pop
aam
sti
orb
rcll
in
mov
cmc
sbb
dec
adc
push
mov
ss
es
je
or
or
adc
dec
pop
or
rclb
or
inc
inc
inc
and
lds
lods
or
adc
in
es
push
adc
add
xorb
stos
xchg
push
push
sub
mov
sbb
push
jle
fcomi
jmp
je
das
pop
dec
and
adc
mov
add
xor
add
xchg
cmp
mov
lea
add
mov
dec
inc
adc
push
inc
call
mov
inc
push
cs
divl
repnz
test
add
test
inc
xchg
outsl
push
push
adc
test
jb
in
sbb
fmul
push
push
movsl
mov
imul
shlb
sahf
and
mov
movsl
js
mov
rclb
test
and
movl
in
test
nop
cmpsl
repz
or
je
es
pop
mov
cmpsb
out
fsubs
inc
mov
cmp
aad
je
or
jne
mov
cli
ss
mov
cmc
inc
mov
jne
inc
sub
mov
in
lds
sub
test
insl
and
iret
hlt
inc
xchg
inc
mov
repz
and
or
ret
dec
add
lock
sbb
rolb
push
xlat
and
push
mov
push
mov
dec
aam
int
xor
adc
or
and
shrb
js
xchg
sbb
pushf
les
cwtl
xchg
iret
push
inc
and
or
push
test
into
enter
add
pop
hlt
cmpb
adc
movnti
jne
aam
fmuls
jmp
pop
or
out
push
fiaddl
inc
aaa
mov
lods
sub
sub
lret
or
imul
aad
jmp
icebp
inc
or
aas
sbb
cmp
xor
rorl
scas
clc
sub
idiv
sub
orl
int
stos
mov
mov
mov
test
mov
hlt
fcompl
dec
cvttps2pi
out
push
and
js
inc
mov
movsb
push
stos
push
in
mov
xlat
xor
cli
cmp
xchg
mov
aas
enter
js
insb
pushf
mov
leave
or
inc
shl
push
iret
and
push
in
xchg
adc
or
push
add
pcmpgtw
leave
pop
imul
daa
sub
fstpl
mov
mov
mov
idiv
sti
sbb
pop
add
xchg
imul
push
cmc
add
push
cs
push
movzwl
std
cmp
insb
dec
leave
mov
mov
xchg
dec
or
push
in
in
xor
inc
add
loop
inc
cmpsb
das
inc
cmp
xor
lahf
and
cmp
or
mov
dec
xor
pushf
fcomip
inc
adc
add
push
stos
in
loop
daa
push
push
or
mov
lock
jle
js
push
into
xor
jbe
mov
push
decb
or
jl
inc
mov
aas
aas
sub
or
adc
add
dec
add
pop
sbb
inc
add
test
and
sub
lock
loopne
sub
fucomip
lods
push
dec
push
outsb
rclb
imulb
sub
pop
repz
es
or
les
daa
iret
push
xlat
imul
imul
dec
add
mov
cwtl
and
or
dec
sahf
mov
dec
mov
jp
jne
sub
jl
or
faddl
pop
pop
cli
sar
push
inc
loope
fisttpll
mov
leave
fs
cmp
sbb
ret
xchg
nop
pop
xor
sbb
xchg
hlt
and
lds
out
mov
and
cwtl
xchg
push
mov
sub
or
fstpt
cmpb
ret
cmp
js
pop
test
je
lods
rol
test
scas
ret
notl
gs
dec
mov
or
pop
jnp
and
add
sbb
pop
sub
lods
fs
and
push
sub
add
clc
add
inc
dec
rclb
in
adc
sub
sub
inc
js
sub
in
jl
adc
in
or
or
xchg
fwait
cmc
je
test
bound
xchg
cli
push
dec
jmp
dec
fbld
call
and
sbb
pop
div
xor
mov
mov
sub
shr
sbb
jbe
lcall
sbbl
test
dec
stos
lret
push
pop
adcb
movsl
test
push
mov
dec
mov
xor
ret
rolb
sahf
adcl
cmp
xchg
nop
sub
push
add
clc
leave
or
adc
and
or
popa
pusha
cmp
jg
mov
lock
fisttpll
addr16
pop
xlat
xchg
inc
mov
or
lods
std
xchg
and
testl
bound
add
push
xor
pop
lea
enter
pop
aam
mov
inc
mov
add
jns
movsl
add
xchg
or
mov
dec
sub
pop
test
sbb
fidivrl
sahf
jae
adc
lahf
sbb
pop
sub
adc
dec
push
push
nop
leave
in
adc
popf
mov
test
popa
inc
sub
push
outsl
fucom
add
sub
or
push
and
pusha
sub
repz
mov
test
mov
add
dec
clc
mov
mov
adc
mov
sub
jbe
clc
mov
mov
sahf
inc
mov
lea
aad
mov
add
jle
sub
std
test
movsb
std
and
mov
and
stos
mov
xor
mov
push
mov
sbb
sub
or
adc
mov
adc
cmp
xlat
rcrb
inc
stc
sbb
and
sbb
and
in
mov
addr16
adc
xchg
cmp
dec
add
mov
and
pusha
es
add
jae
mov
test
adc
sub
hlt
jecxz
inc
out
dec
add
inc
and
bound
movsb
movsb
adc
pusha
mov
and
pop
ljmp
cmp
pop
xchg
hlt
or
and
sbb
jne
jl
push
bound
dec
pop
mov
or
dec
inc
mov
adc
inc
leave
movsl
mull
hlt
test
lds
test
push
mov
inc
adc
or
xbegin
mov
mov
das
cmpl
gs
daa
xor
and
mov
lock
sub
sub
or
movb
pop
dec
or
push
ja
inc
inc
xchg
jo
mov
inc
cmp
xor
sbb
adc
cmp
and
ds
add
lods
test
and
jo
fnstenv
loopne
or
push
adc
std
mov
or
jb
sub
inc
fxch
mov
cmpl
dec
insb
sbb
and
or
repz
xor
adc
adc
sbb
cmp
pop
xchg
dec
sub
aam
sub
ds
imul
or
adc
loopne
cmp
dec
jg
sbb
pop
push
je
or
movsb
jb
inc
add
add
cmpl
sub
cltd
adc
dec
mov
xor
add
push
jmp
dec
add
and
test
xor
inc
sbb
stos
movsb
dec
inc
add
sub
push
lea
xchg
mov
jne
xchg
stc
add
sub
inc
xor
and
inc
enter
xorl
in
jne
and
or
and
insb
inc
loop
xor
lret
addb
lret
jmp
enter
mov
adc
mov
daa
pop
cmp
adc
dec
int
aas
adc
loopne
sub
xor
xor
adc
mov
inc
cmp
sbb
aas
dec
inc
inc
inc
orb
push
dec
sub
push
les
xchg
push
pop
sbb
jmp
lcall
push
mov
les
or
cmp
jne
or
adc
sbb
test
rcl
orl
je
add
es
cmp
mov
add
inc
adc
inc
and
dec
dec
sub
push
sub
cmp
sbbb
subb
test
add
add
push
or
or
data16
or
fstl
nop
xchg
movsl
sbb
adc
sub
cmpsb
call
cmp
adc
lret
sub
sub
data16
dec
adc
shlb
jle
in
pop
push
or
xor
xchg
sub
mov
sub
es
inc
or
dec
pop
xchg
nop
push
cmp
dec
jae
and
leave
les
pop
add
loop
test
inc
cmpl
adc
xor
je
sub
or
or
cmpl
loop
bound
sub
js
or
push
sbb
sub
push
pushf
loope
jle
jl
mov
loop
lcall
mov
mov
and
inc
pop
and
pop
fdivl
push
inc
and
sub
add
dec
movsl
jl
into
or
pop
nop
push
lcall
mov
and
in
adc
nop
xor
je
cmp
or
mov
repz
cmpxchg
in
loope
jne
pop
int3
sbb
dec
test
scas
ret
addb
test
xchg
mov
lcall
push
mov
rolb
push
xchg
and
and
cmp
sub
mov
fnstsw
jmp
arpl
xchg
fidivrs
mov
scas
dec
ljmp
add
es
add
jmp
flds
xchg
push
out
jl
add
push
sub
pop
jnp
xchg
push
ret
sbb
and
add
lds
loope
mov
and
and
test
jge
sub
xor
into
add
or
push
mov
pop
push
xchg
adc
jae
aaa
dec
or
mov
add
mov
jmp
nop
mov
lcall
mov
mov
pusha
jg
or
and
xchg
addl
or
rolb
cmc
mov
mov
sbb
loope,pt
dec
out
inc
mov
adc
cmp
jae
loopne
pop
sub
push
pop
xor
add
and
inc
loopne
scas
outsl
popa
jmp
lahf
pop
jmp
jg
add
jbe
mov
lock
push
dec
and
je
cmp
and
cmc
dec
xchg
aam
shlb
or
roll
cmc
lret
inc
and
adc
and
loopne
inc
adc
jecxz
adc
inc
in
lea
lret
pusha
das
cmp
ja
je
adc
sub
mov
cld
mov
xlat
fldt
and
dec
or
push
dec
sbb
cld
pop
in
mov
sbb
and
sub
sub
in
insb
cltd
into
or
push
ret
nop
clc
push
push
call
repnz
add
call
push
pop
add
xor
sti
sub
cmp
mov
loope
mov
jne
pop
inc
dec
sub
loop
pop
jne
push
rcl
jge
adc
add
xor
mov
add
dec
clc
push
xor
dec
jl
mov
adc
rcrl
jg
mov
inc
xchg
and
pop
shll
dec
inc
xorb
cmp
jl
adc
jmp
pop
into
fildll
cmpsb
arpl
aas
adc
push
xor
cwtl
mov
enter
push
push
sub
mov
repnz
dec
addr16
sbb
push
sbb
fnsave
xchg
mov
outsb
or
jb
and
inc
repnz
sbb
pop
xchg
pop
sub
mov
sbb
or
enter
or
sub
cmp
jle
jne
stc
fwait
or
push
push
inc
jo
rcrb
lret
jl
daa
adc
push
fwait
push
sahf
pusha
mov
cmp
dec
fldl2e
jg
mov
pop
pop
shll
loop
pusha
dec
mov
pushf
call
xor
mov
sti
cltd
sbb
add
int
data16
jae
stos
xlat
add
add
aas
lods
dec
in
inc
scas
sti
pushf
gs
pop
push
pop
adc
iret
or
mov
jnp
ja
inc
mov
hlt
lds
sbb
adc
ja
aad
mov
jnp
sub
or
xor
lods
adc
icebp
mov
sbb
jle
sbb
es
push
sbb
cwtl
add
jge
fisubrl
push
lods
bswap
jae
loope
push
cmpl
inc
imul
xor
sbb
and
mov
out
andl
lock
jbe
xchg
xor
add
xor
mov
mov
and
out
jmp
inc
xor
mov
push
push
mov
dec
sarl
add
clc
test
add
pop
pop
retw
inc
inc
clc
clc
clc
mov
sbb
inc
negb
call
out
xor
pop
or
cld
sbb
sub
xchg
xchg
sub
inc
add
jne
and
mov
push
and
js
or
inc
or
cmp
push
fs
dec
dec
sub
dec
dec
lea
add
mov
insb
out
gs
shlb
and
add
add
rolb
std
dec
pop
and
mov
jne
and
xchg
xor
or
mov
stc
dec
fisttps
pop
lods
test
xor
add
inc
adc
push
adc
stos
mov
das
mov
lock
xchg
dec
jmp
in
movsb
cmp
xchg
add
cmp
mov
call
pop
mov
insb
mov
sbb
enter
xchg
jbe
inc
movl
lds
sub
invd
xor
adc
call
inc
sbb
or
in
das
inc
and
xor
sub
inc
xor
lahf
xchg
pop
jbe
lea
sub
and
sar
adc
jge
mov
and
dec
inc
push
hlt
pop
add
lds
jns
test
adc
in
shll
aas
mov
xlat
or
sub
jg
adc
daa
jle
xchg
popa
sub
xor
adc
mov
xor
sbb
xchg
pop
adc
or
push
nop
sbb
sbb
xchg
and
xorl
xor
cmp
jmp
jmp
xchg
les
dec
jg
jmp
popf
or
int3
lods
out
enter
add
dec
or
std
push
push
dec
mov
adcb
mov
dec
push
mov
inc
pop
add
add
cmp
or
or
loop
insb
mov
imul
scas
leave
sbbb
sbb
and
ja
dec
imull
outsb
or
and
sub
sub
xchg
cmp
sub
rorb
mov
mov
mov
fwait
pop
inc
mov
adc
inc
adc
dec
les
dec
inc
or
fcoml
or
mov
or
or
cmpsl
inc
jnp
pop
fcompl
push
pop
cmp
sbb
dec
pop
arpl
and
and
add
inc
xor
jle
adc
xor
inc
sbb
aad
or
js
pushf
jp
jne
and
dec
adc
fs
xchg
pop
push
cld
stos
and
mov
xchg
inc
sbb
add
lods
and
xor
in
fisttpl
lea
add
lock
je
or
or
add
push
out
outsb
fnstcw
push
xchg
imull
xchg
test
pop
stc
fwait
jns
std
jb
movl
push
mov
and
push
push
or
mov
leave
incl
mov
jmp
jl
shrl
push
movsb
push
clc
cmpsb
cmp
xlat
add
jmp
mov
cmp
pop
jne
jbe
adc
add
jne
sbb
mov
xor
xor
les
test
xor
push
or
mov
xor
adc
dec
lcall
cmp
mov
and
and
jmp
mov
addr16
xor
add
add
sbbb
push
adc
xlat
or
adc
rorl
jle
ret
vpmadcswd
clc
sub
je
dec
int3
xor
fs
sbb
push
jp
and
pop
cmp
aam
je
in
in
int3
lock
pushf
jmp
xor
adc
cmp
xchg
pop
pop
jp
clc
and
jmp
out
and
cmp
orb
sbb
sub
in
cwtl
lock
fnstenv
mov
movsl
mov
mov
jbe
push
mov
jo
jnp
push
mov
addb
cmp
or
or
aam
insb
and
pop
sbb
test
xchg
mov
pop
sbb
adc
add
push
and
mov
mov
pushf
inc
push
ja
sahf
repz
adc
push
xchg
and
dec
pop
ds
and
fistps
into
loope
fldenv
jg
notl
mov
and
cmp
and
test
in
ja
sbb
jmp
sub
cmp
push
xor
push
lret
dec
add
test
cli
mov
bound
pop
add
jge
mov
mov
insl
sub
mov
push
mov
or
out
or
std
or
inc
xor
sbb
pop
movsl
loop
les
jne
mov
xor
loopne
popl
popa
fisttpl
xor
pop
jne
jb,pt
adc
dec
pusha
inc
or
lahf
das
inc
or
icebp
data16
add
push
jnp
in
das
jne
pusha
mov
dec
dec
inc
jns
cmp
jl
sahf
inc
pop
cmp
jmp
mov
xor
add
cwtl
cld
push
lret
jecxz
push
mov
cmp
cs
test
mov
mov
lds
mov
push
adc
push
fistpll
cmpsl
mov
mov
mov
call
sbb
lret
jb
repz
nop
jno
and
add
int3
jae
mov
addl
adc
pop
rorb
ret
pop
sbb
repnz
inc
pop
cmp
notb
dec
and
jle
pop
leave
and
push
movsb
and
adc
dec
dec
scas
xchg
icebp
add
nop
mov
fisttpl
or
jg
xorl
and
adc
adc
ljmp
jns
scas
out
cmp
cmc
jbe
inc
and
xlat
adc
or
push
jmp
cli
inc
mov
pop
aam
iret
mov
fcoml
cmpsl
repnz
nop
in
mov
push
mov
jnp
test
insb
mov
test
adc
mov
pop
rcr
mov
xor
and
outsb
xor
aam
test
scas
dec
push
mov
fucomip
mov
pop
cmpb
jne
enter
or
sub
adc
jge
dec
sbb
shrb
sub
sbb
push
or
adc
jg
or
out
sub
cmp
pop
and
jbe
cmpl
jne
mov
cmpsl
mov
scas
je
in
es
ds
xor
loope
add
das
mov
je
pusha
mov
and
je
adc
and
movsb
cmp
and
add
nop
add
add
add
and
add
inc
add
sbb
int
mov
xor
adc
pop
add
rolb
or
sti
push
lods
icebp
out
cmc
sarb
fistl
les
xor
cmp
add
mov
mov
lret
cmp
xor
outsb
jae
sub
mov
push
lcall
cmp
push
sub
push
pop
dec
clc
dec
cmp
or
add
add
shrl
add
add
pop
adc
xchg
push
icebp
faddl
fmul
test
and
jo
jl
call
mov
mov
inc
or
or
xchg
mov
addb
mov
and
mov
lea
sub
add
inc
inc
cmp
cmc
bound
lea
call
cmp
orb
mov
cmpsb
sub
push
and
pop
add
ret
icebp
jmp
cs
test
jo
inc
js
sarb
ret
jb
inc
cmp
or
dec
or
mov
or
sub
mov
push
mov
dec
sahf
fs
push
inc
push
je
stos
and
insl
sub
adc
popf
jne
adcl
imul
and
sbb
pop
push
sbb
dec
cmp
sub
adc
sbb
sub
mov
popa
sbb
mov
sub
nop
or
pop
popf
enter
cmp
mov
pop
adc
or
xchg
pop
mov
loopne
out
xor
or
sbb
int3
mov
mov
bound
dec
and
mov
and
mov
mov
or
mov
jle
movsl
out
sub
sbb
int3
daa
or
push
in
and
or
lea
push
es
dec
lock
xchg
xchg
mov
push
inc
xor
imul
or
adc
add
mov
ret
les
scas
fs
adc
loope
xor
roll
xchg
mov
xor
fs
mov
test
mov
es
or
inc
pushf
mov
dec
ds
lret
lods
fsubrs
jne
mov
test
mov
mov
test
jmp
xor
cs
out
aam
push
ja,pn
addb
pop
enter
push
sub
mov
inc
imull
add
xchg
xor
cmp
stos
or
mov
cli
inc
inc
dec
adc
adc
or
and
adc
popf
loopne
or
js
out
movsb
stc
fwait
sbb
cltd
inc
or
or
notb
inc
shlb
sub
gs
aaa
lds
js
push
push
mov
mov
mov
data16
sti
adc
sbb
pop
mov
insb
movl
daa
mov
mov
lock
fsubs
repnz
inc
cmp
inc
mov
xor
adc
cmp
or
sub
es
inc
adc
in
inc
xor
add
leave
sbb
daa
jecxz
cwtl
pop
jne
push
pushf
mov
fs
push
dec
xchg
xor
adc
push
sbb
sbb
inc
nop
and
and
dec
jmp
mov
loopne
push
sub
push
or
out
add
mov
je
enter
ds
jge
adc
dec
fbstp
outsb
pop
add
dec
iret
repnz
lea
dec
loop
jge
push
cmp
pop
or
add
ficomps
mov
xchg
icebp
cmp
xor
test
aad
ds
test
ret
push
push
movsl
mov
gs
add
inc
add
inc
push
sbbl
xchg
push
sbb
test
dec
pop
mov
in
test
mov
pop
movsl
sub
popa
add
or
into
lea
push
and
push
inc
js
sbb
pop
sbb
inc
adc
mov
sti
and
adc
add
sahf
mov
jl
fstps
pusha
mov
dec
idivb
cmp
sub
pop
push
es
and
je
sbb
sub
dec
lods
fidivl
jmp
cs
mov
mov
sub
nop
imul
loope
add
lods
int
lods
push
rolb
dec
test
jnp
or
je
mov
or
jp
xchg
push
testl
gs
ja
sahf
jne
jmp
and
jge
mov
mov
inc
sub
js
xor
jo
or
fldl
jno
rep
or
sahf
mov
cltd
pop
mov
int3
arpl
cmp
cwtl
jns
dec
imul
fistpll
or
adc
lcall
js
jge
fmull
pop
xlat
test
fsubrs
xchg
xor
sbb
dec
sbb
or
lea
fnstenv
and
xchg
pop
andb
push
pop
sbb
stc
or
fisttpl
sub
cmp
or
popf
pop
xor
push
imul
fsubrp
sub
out
sahf
add
test
push
cmp
jle
push
dec
sahf
mov
nop
mov
loop
dec
and
cmp
jge
and
mov
add
sub
push
es
mov
cmp
mov
xchg
shll
mov
xchg
or
and
dec
adc
and
cmpsb
outsl
enter
mov
dec
sub
sbb
or
mov
orl
mov
dec
sub
pop
lcall
out
inc
jl
aaa
fistpll
xorl
jbe
dec
cmpl
fwait
jp
sub
push
ret
xchg
sbb
add
in
jl
loopne
and
call
mov
pop
xor
jae
mov
and
jb
out
pop
or
push
out
push
jge
repz
dec
cmp
sbb
mov
gs
add
sbb
mov
cs
pushf
inc
lret
xchg
aad
stos
adc
scas
add
pop
jne
pop
xor
lds
es
xchg
mov
ficoms
add
mov
add
es
push
push
xor
and
push
sar
or
pop
pop
pushl
cmp
push
cltd
push
or
fistpll
das
iret
shll
cmp
enter
loope
push
xchg
xorb
fs
mov
push
movsb
mov
cmp
jmp
subl
pop
mov
dec
xchg
adc
mov
xlat
add
cmp
jle
push
dec
mov
xchg
stc
lds
dec
dec
push
pop
and
aad
mov
jmp
mov
imul
mov
adc
stos
mov
test
adc
fldenv
add
add
adc
decl
cmp
xor
imul
ja
cmp
cmp
xor
into
and
xchg
ret
loope
cwtl
popa
inc
and
inc
pop
sbb
dec
adc
lahf
dec
pop
push
inc
mov
bound
pop
and
mov
hlt
push
cli
sbb
pop
or
cmp
push
lea
dec
pop
adc
dec
and
dec
lret
addr16
sub
jge
mov
dec
out
add
or
mov
lods
cmp
jl
xor
mov
xchg
inc
push
lock
add
clc
push
mov
mov
ss
cmp
mov
xchg
xchg
enter
sbb
xor
push
or
adc
cmpl
js
inc
inc
roll
inc
xchg
ret
test
cmp
jns
bound
adc
xor
scas
adc
adc
sub
lret
lds
push
xor
stc
adc
or
leave
cmpsl
fwait
addr16
sti
cmp
add
sub
je
and
push
xchg
inc
xor
cld
lods
data16
in
inc
ffree
push
and
mov
sub
cmpsb
mov
jl
push
out
sar
mov
dec
int
dec
aad
dec
stos
jbe
int3
xor
in
add
push
stos
and
shll
adc
inc
das
or
pop
cmp
std
pcmpeqb
int
mov
add
pop
cmp
or
add
xchg
mov
jbe
adc
push
dec
cs
cmpsb
lods
stos
gs
and
orw
pusha
cmpsl
push
jl
xchg
pop
cmp
push
lahf
jne
bound
push
jb
repz
sub
adc
xor
adc
sbb
add
dec
js
call
les
sub
mov
push
mov
dec
aas
sbb
mov
shll
jp
add
mov
std
add
cmp
mov
inc
dec
leave
lea
dec
ljmp
cmp
das
in
jne,pn
and
push
loopne
or
adc
xor
cmp
jmp
sbb
mov
sbb
fwait
push
sar
mov
inc
sub
jg
nop
test
jg
test
pop
popf
sbb
jo
lea
and
add
inc
fdivs
lea
je
shl
sbb
and
sub
push
xor
push
add
outsl
lock
pop
inc
sub
jmp
push
jle
aad
addr16
push
jg
in
jmp
xchg
dec
inc
fdivrs
push
sbb
xchg
adc
ja
or
les
pop
jp
sti
daa
rcl
lock
lea
add
jg
or
cli
frstor
push
es
cmp
jp
add
lea
push
mov
lahf
lea
iret
jbe
lret
iret
into
scas
fnstcw
adc
push
mov
cld
pushf
fistpll
sbb
dec
out
in
ss
mov
xchg
jne
int3
sarb
sub
cld
lods
js
cwtl
push
xor
add
lahf
ret
test
pop
popf
testl
rolb
fcomps
addr16
jg
xlat
stos
adcb
and
xchg
js
mov
or
adc
in
push
enter
in
je
icebp
or
test
pop
xor
push
imul
dec
xor
clc
or
mov
test
sbb
mov
mov
cmpsl
mov
add
add
push
cmp
adc
daa
mov
mov
cld
xchg
mov
mov
hlt
lret
adc
pop
add
mov
sbb
mov
pop
push
in
jns
cmp
mov
xor
in
rolb
hlt
mov
mov
xor
addl
sub
fists
adc
add
xor
movb
es
in
mov
repz
sub
dec
lea
cmp
add
mov
aam
or
inc
pop
or
cmp
je
mov
roll
ds
jg
stc
push
push
mov
adc
test
and
lock
lret
icebp
mov
cmp
stos
mov
sbb
jbe
xchg
sbb
sub
mov
daa
js
add
lds
inc
inc
sbb
es
push
and
loope
shl
test
and
adc
out
xchg
inc
push
add
sub
inc
fildll
xchg
scas
outsb
fsub
outsl
lret
fdivl
repz
sbb
dec
sbb
inc
xor
pop
aam
gs
cmp
xchg
xchg
xlat
dec
mov
daa
mov
icebp
and
aam
mov
mov
inc
inc
jg
out
incl
shl
and
sub
cltd
adc
jge
inc
and
rol
adc
jo
popf
jbe
mov
xor
add
movzbl
cmpsl
jle
mov
leave
lcall
jo
lock
pushl
or
mov
mov
test
sbb
loope
je
mov
and
mov
mov
mov
mov
inc
or
xor
je
and
or
jmp
inc
mov
mov
loope
or
repz
mov
sbb
push
mov
pop
mov
push
daa
je
sbb
sbb
ss
ss
adc
mov
add
shll
fisttps
xchg
or
add
xchg
inc
jecxz
imul
lahf
in
fsubs
pop
aam
and
dec
loop
or
inc
sub
lret
stos
sub
push
or
test
mov
pop
or
dec
sbb
lret
dec
pop
sbb
or
push
orb
inc
add
cmp
and
push
adc
mov
inc
add
or
lock
sub
ret
add
xor
mov
jle
daa
call
lret
aad
pop
or
sbb
inc
adc
movsl
stc
or
popf
and
mov
mov
mov
subl
xchg
dec
mov
pop
pop
inc
push
sar
or
or
xchg
test
push
cmp
dec
mov
pushf
cmp
mov
sub
xor
pop
js
pop
dec
enter
lods
mov
lea
adc
movsb
das
dec
xor
inc
jne
jns
stos
pop
repnz
iret
add
pushf
arpl
sub
xchg
xor
xlat
enter
xor
sbb
jl
movl
adc
adc
xor
lods
test
mov
mov
or
sub
cmp
push
cmp
js
enter
or
push
popa
and
inc
mov
in
mov
jns,pt
jp
stos
sub
xor
adc
lea
adc
sub
popf
pop
arpl
and
or
mov
add
cmovs
add
sub
test
repnz
sbb
xor
jmp
or
fdivr
fisubrs
lds
dec
std
inc
sub
decb
pusha
adc
outsb
sub
fisubs
pop
sbb
and
hlt
inc
sub
jne
dec
out
daa
sbb
adc
sahf
test
jp
mov
cmpsl
gs
mov
dec
sub
push
inc
jbe
sub
and
fdivs
fbld
decl
cwtl
in
push
mov
dec
stos
enter
inc
pop
push
enter
pop
pop
mov
inc
mov
cli
out
repz
cwtl
mov
sti
mov
les
inc
les
pop
pop
repnz
mov
and
push
inc
sub
imul
add
jae
cs
pop
or
xchg
mov
push
cs
xchg
sbb
sbb
push
sbb
xor
inc
push
sbb
scas
das
and
negb
or
sub
jns
bnd
sbb
cwtl
mov
jle
inc
sub
daa
nop
inc
jbe
xor
or
add
shr
adc
lods
add
push
xchg
dec
leave
pop
shlb
cmp
jp
loop
imul
enter
iret
sbb
call
sub
popa
into
in
jbe
and
mov
ljmp
popf
mov
sub
xchg
fldl
sub
test
xchg
xor
int3
dec
xor
push
fcmovu
repnz
dec
adc
imul
mov
mov
int
adc
stc
pop
sbb
or
data16
cwtl
addb
inc
fcoml
or
adc
loope
sbb
fadds
aas
adc
adc
call
jns
daa
dec
in
cmp
aas
dec
jo
adc
jmp
jge
popf
aaa
cmc
call
popf
cmp
pop
in
sbb
sbb
pop
clc
dec
pop
jge
xor
mov
aam
int3
mov
incb
inc
cltd
sub
loop
pop
clc
lea
mov
cmp
sbb
xor
add
hlt
cld
jns
xchg
test
sub
jmp
and
cmp
pop
stc
lods
movsb
push
or
in
cmp
push
shll
jb
pop
pop
jne
aaa
js
inc
dec
int3
pop
dec
or
sbbb
dec
add
popa
shlb
loopne
jle
int3
or
add
ret
cmpsl
sbb
pop
les
jo
xor
in
inc
loop
aas
loopne
inc
fcmovbe
push
divb
jg
es
adc
mov
inc
pop
call
shr
xchg
push
aam
jae
xchg
xorl
or
in
ficomps
imul
nop
hlt
and
stc
add
adc
repnz
in
cmp
add
lea
inc
jmp
hlt
iret
adc
inc
xor
lock
sbb
lahf
sub
loopne
push
mov
das
adc
or
adc
ss
xor
push
pop
scas
ss
sub
ljmp
cli
test
xchg
sbb
pop
cmp
subb
idivb
mov
sbb
lea
out
lahf
xor
ficomps
push
and
ss
or
das
or
js
insb
xchg
xor
pop
jno
jp
movl
inc
jmp
pop
push
jo
and
cmpl
and
insl
cwtl
cmp
xchg
or
popa
leave
sbb
sub
adc
push
sbb
lock
stos
sub
loope
jg
lahf
dec
pushf
in
inc
enter
inc
or
adc
nop
adc
or
push
inc
adc
int3
jo
mov
add
daa
bound
push
arpl
or
imul
adc
adc
aas
arpl
lcall
adc
dec
cwtl
or
pushl
jmp
dec
nop
and
outsb
xchg
mov
push
jecxz
jae
insl
pop
and
push
mov
pop
int3
sub
mov
lcall
jge
adc
xor
in
adc
and
loopne
sarl
xor
out
xchg
push
int3
loop
inc
jo
jb
add
or
mov
push
outsl
popl
add
les
mov
lods
and
mov
adc
rorb
jge
mov
cmpsl
popf
push
roll
fiaddl
jbe
mov
cmpsb
push
inc
push
xor
dec
and
xchg
in
adc
add
cmpb
cli
adc
jns
jb
loope
fsubs
xlat
push
mov
and
and
cmc
jl
mov
pop
jmp
xchg
inc
bound
xchg
dec
inc
dec
dec
adc
jge
or
mov
adc
adc
inc
inc
mov
jb
push
iret
in
cwtl
fisubs
push
lods
loopne
in
loopne
fmull
xchg
inc
jnp
je
in
mov
or
out
enter
pop
and
and
popf
sub
repnz
hlt
or
push
sub
jns
or
loopne
mov
sub
fisubrs
xor
leave
cs
incb
adc
xchg
add
add
adc
mov
pusha
or
mov
push
add
lret
adc
adcb
enter
sub
sbb
or
stos
sub
push
sub
cmpsl
loope
enter
push
nop
addr16
dec
je
in
orb
push
add
lock
and
adc
jmp
das
adc
je
lods
rcll
add
sub
adc
hlt
out
and
adc
push
gs
xchg
fiadds
and
inc
enter
daa
je
adc
add
call
test
push
out
popf
rclb
inc
mov
xchg
xor
add
inc
inc
pop
or
sbb
mov
push
adc
nop
nop
mov
sub
or
test
xor
jne
or
inc
data16
add
jne
bound
jmp
dec
add
mov
fxch
dec
add
push
push
lahf
jmp
sub
aaa
mov
xor
jne
lea
xchg
les
mov
mov
idiv
into
insb
pop
call
push
js
or
shl
mov
push
mov
jge
movd
jbe
rolb
dec
cmp
add
mov
adc
out
popf
mov
sbb
out
imul
push
sbb
jle
jo
shrb
rcr
clc
pop
add
mov
push
dec
jnp
add
adc
ftst
xchg
pop
xor
pop
pop
pop
cli
cltd
imull
lcall
push
sbb
jne
gs
inc
mov
mov
xchg
xchg
fidivrs
les
cld
mov
icebp
rcll
or
sar
call
mov
iret
stos
leave
es
push
arpl
add
xchg
fildl
shl
js
rorb
inc
int3
nop
add
leave
mov
mov
jne
sub
sarb
mov
dec
push
ficoml
les
or
inc
dec
jmp
bound
rcll
and
vmaxps
or
and
gs
xchg
dec
add
mov
adc
xor
rcrl
dec
and
int3
sbb
xchg
adc
mov
pop
dec
lret
jp
pop
sbb
lea
lahf
repnz
mov
pop
pop
push
clc
loop
daa
scas
imul
rcrb
jge
mov
pop
jle
push
sbb
flds
subl
cmp
jg
mov
sbb
es
idivb
popa
mov
addl
push
repz
dec
js
push
adc
dec
incl
xchg
xchg
in
mov
or
dec
loopne
lods
dec
mov
inc
mov
xchg
xor
pop
dec
push
lret
and
sub
jb
pop
xchg
push
jb
sbb
aad
arpl
inc
sbb
adc
dec
jecxz
xchg
or
jle
negl
lea
das
lea
into
push
pop
lods
or
call
xor
mov
mul
sub
mov
mov
dec
or
push
adc
jl
push
fcomi
push
xchg
push
aaa
ret
push
jge
mov
out
jbe
xor
jecxz
and
adcb
adc
dec
loope
sti
push
inc
ss
add
fdiv
fiaddl
push
lret
xchg
cmp
adc
xchg
xor
adc
cmp
xchg
sbb
jne
js
jl
les
push
outsb
inc
cmp
mov
inc
aam
call
addb
in
daa
add
test
or
and
jl
cmpsb
lret
dec
or
rcl
sub
iret
xchg
fsub
or
mov
rolb
repnz
daa
test
arpl
neg
and
or
add
leave
lret
inc
push
shlb
jl
jae
movsb
xor
inc
scas
in
sub
dec
adc
clc
adc
pshufw
cmp
ds
leave
sbb
aas
nop
rolb
cmp
cmpsl
pop
fbstp
adc
push
insb
testb
mov
inc
test
movb
pop
jmp
fs
out
cld
mov
sub
pop
pop
xorl
leave
pop
sub
or
orl
popa
lds
or
jo
adc
clc
or
inc
lock
xor
cld
jmp
adc
mov
nop
push
inc
movzbl
pop
add
sub
popa
jp
mov
cmp
jae
dec
xor
mov
mov
jmp
jo
fadd
ret
lahf
pop
fsubrl
jae
add
mov
clc
pop
or
pop
hlt
inc
adcb
and
inc
in
or
push
or
add
test
jbe
push
sahf
or
mov
inc
xchg
adc
inc
movsb
xlat
sbb
sahf
rcrl
or
hlt
dec
push
and
lret
pusha
ja
xchg
lock
xchg
popf
or
sub
lods
pop
jmp
pushf
cmpsb
cmp
inc
xchg
loopne
mov
jp
inc
jge
xchg
xchg
loopne
and
adc
xor
xor
push
shlb
or
aam
int3
mov
nop
adc
jge
push
pop
lods
sub
fimull
imul
pop
or
add
mov
lock
mov
ret
xchg
mov
sub
cmc
dec
and
inc
out
mov
dec
xor
pop
out
or
push
loop
dec
lahf
push
sbb
or
add
push
in
jl
lret
mov
fimuls
push
xor
int3
xchg
or
or
cmpsb
cwtl
push
inc
xor
insl
adc
or
pop
cmovle
xor
jne
add
or
sbb
scas
lock
adc
add
sbb
es
xor
adc
hlt
dec
cmp
mov
shl
fldcw
dec
cmp
call
inc
repnz
arpl
mov
fstl
hlt
or
or
sbb
fimull
sbb
mov
call
dec
lret
cld
mov
sbb
roll
sbb
call
ja
aad
and
fistpll
sbb
mov
movsb
sbb
sub
mov
and
fmull
inc
les
mov
out
hlt
punpckldq
adc
enter
adc
adc
push
mov
push
mov
mov
sub
inc
adc
or
inc
jae
pop
ret
shrb
sub
enter
dec
xor
push
scas
scas
add
das
repz
jg
xor
lret
aaa
jnp
jmp
push
xor
dec
sbb
mov
shl
fwait
push
in
adc
adc
dec
testb
movswl
xor
add
loop
jbe
push
adc
js
dec
add
adc
loopne
adc
mov
rorb
cmpsb
sbb
rorb
fmuls
and
sbb
mov
lock
enter
mov
cwtl
or
push
lret
ja
shlb
negb
sub
mov
mov
add
faddl
out
incb
lods
lods
pop
pop
lock
sarb
cld
xor
push
adc
pop
loope
mov
mov
push
pop
cmpl
jo
sub
xor
sarb
inc
das
jmp
pop
orb
mov
popf
stos
pusha
test
in
outsb
pushf
xchg
xchg
mov
adc
scas
aaa
xor
push
adc
xchg
test
dec
pop
addl
add
je
dec
int
cmp
fs
loop
and
cli
sbb
outsb
cmp
or
repnz
jo
out
and
cmpl
jne
int3
inc
pop
fs
sbb
push
pop
test
dec
push
sub
sub
loope
aaa
inc
mov
arpl
mov
inc
inc
add
testl
loope
push
in
aad
push
movl
pushf
xchg
scas
pushf
insb
xchg
mov
pop
sbb
stos
cmp
pop
sub
lcall
cld
inc
fs
or
xchg
add
bound
cmpl
stos
inc
cmp
add
or
pop
push
mov
add
push
hlt
add
pop
sbb
insl
cmc
jg
dec
mov
push
cmp
clc
sbb
jo
pop
fadds
incb
mov
push
ds
sbb
icebp
in
push
callw
push
cld
push
or
test
mov
scas
into
and
cld
add
fildl
cmpsb
inc
lret
out
fisubs
insb
js
lds
leave
les
mov
push
enter
adc
sbb
es
sbb
testb
xchg
fsts
bnd
cwtl
movsl
popf
in
mov
mov
fildll
leave
xlat
dec
jmp
jecxz
gs
and
jle
push
leave
xchg
mov
jg
mov
jnp
loope
mov
adc
aas
icebp
xorb
ret
shl
push
sub
sbb
and
mov
push
cmp
mov
shr
push
fcompl
inc
ss
in
aas
or
inc
fstps
and
mov
dec
jne
dec
daa
frstor
aad
sub
dec
adc
jle
mov
mov
dec
or
mov
jg
in
rorb
cld
adc
adc
adc
imul
popa
inc
pop
test
inc
jp
movsl
jne
inc
jne
inc
or
and
adc
faddl
inc
jl
xor
aam
enter
repnz
dec
adc
jge
cli
je
outsb
push
imul
cmp
inc
and
push
or
lret
sbb
xchg
sbb
loop
or
fnstcw
jmp
inc
or
xchg
cmp
xchg
mov
cmp
in
adc
gs
popf
pop
insl
or
sbb
mov
mov
mov
adc
xchg
xchg
dec
sbb
pop
fmuls
scas
aas
inc
loop
sub
rcrb
lods
loope
adc
mov
imul
pop
shll
xor
fiaddl
pop
bound
es
repz
xor
hlt
xor
ss
test
push
adc
inc
xchg
popf
dec
or
xor
lret
lret
bound
into
rol
js
mov
icebp
mov
cmp
add
ret
mov
mov
aas
mov
add
data16
or
lret
fiadds
add
testb
push
movsl
dec
fbld
sbb
adc
add
mov
adc
sahf
inc
sub
bound
fimuls
into
mov
fstpl
and
and
hlt
mov
ss
cli
add
les
je
addl
arpl
sub
jg
rcr
adc
jmp
pop
mov
sub
lods
sub
adc
rorl
lds
testl
mov
dec
popf
mov
imulb
cmp
ss
pop
or
stc
enter
adc
mov
ds
xor
in
mov
mov
add
jg
sbb
sbb
cltd
pop
daa
add
repnz
inc
jl
pop
add
movzwl
mov
xor
adc
cmp
push
dec
in
sbb
cmpsb
inc
add
out
and
ljmp
jge
inc
mov
inc
leave
xor
mov
sti
inc
rcl
jbe
and
and
xchg
lcall
push
iret
dec
xor
hlt
adc
test
jnp
movsl
jbe
movl
cwtl
xchg
mov
movsl
and
add
lea
cmp
sub
pop
xor
sbb
adc
push
mov
sbb
or
int
fwait
shl
push
lds
fldt
lret
ret
push
add
xor
mov
mov
test
mov
rorb
sbb
jecxz
sub
mov
adc
cli
call
inc
scas
rcrl
xorb
cmp
sub
in
or
orl
idivl
lea
push
and
aam
cltd
jg
fadds
inc
push
xchg
mov
rorb
sub
int3
mov
xchg
or
aam
sarl
adc
lock
adc
pop
cld
lock
ret
cmp
inc
ficomps
or
fwait
jmp
sarb
mov
sbb
test
pop
das
mov
mov
cmp
inc
push
ja
jmp
pop
lock
repnz
dec
mov
inc
inc
in
jle
fiadds
cmp
and
pop
lods
adc
or
fmul
adc
mov
or
call
inc
bnd
mov
and
fdivrl
cmp
push
pop
and
adc
push
dec
aam
out
mov
and
into
in
popa
mov
jl
and
test
push
or
inc
lods
aam
pop
mov
inc
inc
shrb
jl
pop
pop
rorl
inc
sarb
xorl
lea
sbb
and
xchg
pusha
dec
sub
in
cmp
push
or
fidivl
dec
enter
in
inc
and
cmp
xchg
xor
xchg
push
lret
add
test
clc
pop
sub
sbb
test
mov
in
sub
adc
inc
sahf
inc
sub
jnp
imul
dec
or
inc
dec
inc
push
arpl
inc
adc
je
and
enter
or
fisttps
ja
xchg
xchg
add
jne
sub
rclb
out
xor
push
dec
fimull
in
inc
pop
sbb
scas
mov
jge
or
add
mov
add
fdivrl
or
dec
jl
sbb
jb
add
jle
or
aam
adc
insb
mov
jbe
jo
test
into
add
loop
push
and
aas
inc
push
js
inc
push
repz
mov
mov
incb
add
sarl
rorl
sbb
movsl
inc
mov
scas
cmpsl
out
aaa
out
inc
cmp
mov
add
repz
ret
or
push
xchg
sub
dec
sbb
push
cld
pushf
inc
push
repz
mov
sbb
pop
and
jbe
lcall
andb
mov
or
cmpsb
xor
mov
loopne
add
in
out
dec
inc
mov
in
pop
push
dec
mov
nop
fmull
je
leave
inc
outsl
aas
test
bsf
jae
or
lcall
xor
or
cltd
fs
out
mov
pop
dec
push
out
fidivs
cmp
jbe
cli
add
mov
iret
adc
add
leave
lret
push
data16
sub
call
stc
jno
mov
popf
scas
xor
shl
or
fs
stc
inc
outsl
pop
jb
ret
adc
in
int3
imul
les
sti
stc
sub
inc
mov
xorl
test
mov
movsb
push
mov
pop
lret
pushf
and
nop
adc
xchg
jno
and
mov
adc
or
dec
aas
push
daa
enter
jns
cltd
xor
and
pop
add
popf
dec
cli
es
incl
mov
mov
inc
orl
aam
stos
out
mov
lock
sbb
and
lods
xor
int
or
movl
pop
and
stc
xchg
dec
fsubl
aam
inc
fcomp
in
and
pop
scas
outsb
mov
xchg
mov
bndstx
cli
lahf
sbb
or
or
adc
ficompl
test
sar
pop
ret
lods
mov
fnstcw
repz
sti
add
lds
out
mov
rorb
dec
mov
xchg
in
push
lods
lea
xor
cmp
cmp
les
xor
sub
jo
lahf
imul
add
xor
adc
adc
das
push
testl
mov
adc
or
dec
pop
pop
jno
xchg
and
add
mov
rcrb
movsb
scas
js
mov
or
fistpll
or
jge
fisubs
pop
fadd
int
scas
loopne
sbb
adc
adc
xor
cs
dec
cmp
jge
jne
push
fmuls
adc
sbb
push
leave
lods
ret
dec
sub
pop
xchg
aam
fmuls
rorl
and
imul
push
add
imul
mov
cwtl
fisttpll
mov
data16
push
js
mov
mov
xchg
xchg
jmp
nop
mov
inc
xchg
out
sbb
test
mov
dec
les
dec
nop
or
add
or
push
push
sbb
fiadds
cmp
inc
rolb
mov
jl
lea
xchg
xor
cmp
aaa
fidivrs
adc
mov
jmp
lcall
fistpl
mov
das
mov
jle
xchg
fildl
sub
add
ficoms
inc
mov
mov
test
fsin
das
jecxz
or
sahf
mov
rolb
outsl
cmp
add
push
out
or
xchg
xor
call
push
out
inc
lods
cmpb
xor
sub
subl
mov
outsl
sbb
shlb
cmp
adc
or
jge
push
push
pop
sbb
orb
shll
jle
aas
cmp
adc
xchg
jns
lahf
lret
add
xchg
push
out
jns
and
jnp
mov
mov
mov
adc
sbbb
adc
decl
cltd
cmp
je
and
mov
das
lret
jne
mov
push
insb
adc
or
xchg
push
mov
add
push
sub
fldcw
cmp
clc
pop
dec
mov
test
pop
xchg
sub
xchg
xlat
push
xchg
out
cmc
cwtl
loopne
inc
movsb
lcall
xchg
rorb
test
pusha
sub
xchg
dec
inc
add
into
fmulp
les
lcall
jle
jmp
les
test
shll
dec
jo
sub
leave
scas
dec
mov
mov
pop
sub
add
cmp
sub
cmp
scas
xchg
push
mov
cmp
adc
sub
aas
adc
pop
loopne
leave
or
fsubs
push
mov
jo
mov
mov
dec
push
pop
hlt
aad
mov
pop
pop
aad
enter
lock
cmp
sti
dec
pop
shrl
dec
add
sub
mov
jae
jl
lahf
icebp
js
push
add
fcompl
test
or
adc
xorb
imul
jp
lcall
subl
xor
ret
push
xor
inc
call
sub
cmp
mov
test
cmc
adc
stc
push
adc
jmp
jbe
std
sub
hlt
inc
and
mov
adc
push
arpl
xchg
orb
cmp
jl
sarb
jecxz
xor
and
add
sbb
je
xor
pop
mov
sbb
or
push
sbb
push
pop
sub
cmp
arpl
xchg
in
shlb
push
lods
push
sub
lahf
call
sbb
int
adc
push
js
cmp
stos
xor
cmc
dec
mov
or
xchg
mov
ljmp
sahf
daa
push
inc
sti
ret
jle
test
add
pushl
jp
sub
and
icebp
dec
adc
mov
fstl
pop
adc
mov
or
pop
and
and
cmc
sbbb
mov
test
lahf
mov
sub
pop
in
hlt
dec
pop
fwait
adc
pop
jmp
repnz
cmp
out
stc
push
sbb
pop
dec
ds
sub
repz
cmp
addr16
aaa
cmpl
push
lea
mov
pop
imul
cmpb
and
jge
xchg
lea
cld
jmp
in
cmp
sbb
push
out
ret
mov
sbb
or
sub
jb
sub
ds
stos
xor
sbb
lea
decb
xchg
inc
xchg
cmp
dec
mov
jbe
push
xor
xor
pushf
daa
orb
enter
jb
clc
pop
jp
cld
pop
gs
push
je
xchg
push
sbb
xlat
pushf
xor
ret
inc
mov
sbb
lret
push
push
cli
lret
into
push
push
lcall
jecxz
xor
rorb
xor
lds
or
mov
aaa
pop
sub
clc
mov
fs
sub
aad
dec
jnp
cmp
je
sub
jmp
and
jb
je
dec
jne
inc
dec
cli
das
nop
push
or
push
xchg
xchg
mov
outsl
loope
or
sbbb
fcompl
add
mov
mov
xchg
je
fimuls
pop
dec
cmp
leave
sub
addb
scas
dec
shrl
mov
out
xchg
jb
aam
dec
add
jp
lods
jae
add
xor
xor
dec
mov
rcr
sub
ja
cwtl
push
push
mov
dec
or
test
pop
imul
outsl
push
pop
mov
mov
or
pop
js
adc
orb
fisubs
add
cmc
addl
xchg
jge
mov
jb
mov
cmpsb
movsl
inc
ret
jp
mov
push
xchg
and
in
pop
sahf
push
xchg
push
cmp
pusha
aaa
imul
cs
xchg
add
std
mov
cmpsl
arpl
decl
ret
adc
cmp
jl
mov
inc
in
mov
sbb
jle
cwtl
mov
sub
and
dec
cmp
cld
orb
icebp
mov
jmp
cmp
adc
dec
mov
adc
sbb
js
nop
xchg
mov
jg
test
inc
pop
mov
test
cmp
xchg
out
fmull
inc
or
xchg
icebp
cmpl
cmp
cmpsb
jecxz
into
mov
xchg
inc
popa
sbbl
stos
repnz
pop
je
push
sbb
call
sbb
adc
into
mov
sub
xchg
push
inc
mov
push
xlat
dec
call
lret
ror
cld
fadds
mov
push
jne
notb
stos
out
out
push
fists
orb
leave
sub
jne
cmc
lea
addl
cmpsl
fwait
sbb
add
loop
sbb
mov
in
push
andl
add
or
sub
sub
inc
mov
inc
push
cmp
fnstenv
sub
xor
divl
xchg
les
and
gs
daa
xchg
jno
mov
xchg
in
xor
jge
ret
divb
pop
xor
push
cmpsl
and
aaa
adc
ljmp
cmp
jnp
inc
mov
mov
dec
ja
arpl
sub
cmc
pop
xor
sbb
mov
movsb
gs
mov
add
xchg
rorl
jbe
dec
push
adc
popf
xchg
pop
lret
push
and
push
sahf
in
daa
ret
lcall
in
jae
mov
ljmp
push
in
pop
ds
cmp
fcom
push
dec
mov
and
push
into
xchg
inc
mov
lea
testb
jae
xor
jp
push
and
add
add
inc
leave
dec
iret
cmp
sbb
add
push
and
out
movsb
ret
add
or
dec
scas
cmpsb
fbld
xchg
out
cmp
lds
inc
hlt
add
fnstenv
fistl
xor
cltd
scas
and
testb
bound
addb
lds
push
xor
pushf
adc
cmp
inc
rcrb
mov
mov
sbb
jge
scas
mov
leave
inc
add
lea
mov
add
ret
shlb
cmp
mov
inc
pop
cmp
mov
mov
xor
dec
add
jae
dec
adc
out
bound
or
loopne
outsl
call
dec
lahf
insb
jne
or
mov
mov
sbb
leave
int3
ficoms
inc
xchg
sub
mov
ljmp
mov
lods
inc
sub
imulb
jmp
cmp
test
mov
or
or
push
xchg
or
mov
sahf
mov
lret
in
pop
cltd
addr16
lods
sub
lds
test
adc
jle
shll
sub
jns
adc
xor
add
andb
mov
data16
imul
outsl
adc
testb
shlb
je
int3
xchg
idivl
mov
add
ja
mov
das
lds
call
lret
xor
inc
or
pop
cwtl
stc
into
push
push
push
mov
lahf
out
cld
imul
int3
push
cmpsb
out
or
stos
or
add
mov
sub
shrl
adc
stos
out
jl
adc
hlt
in
dec
test
loop
jbe
push
mov
sub
repnz
sbb
daa
into
and
sahf
daa
cmpl
xchg
pop
cmpsl
orb
xchg
sbb
stos
dec
xchg
sub
dec
loop
frstor
jae
push
orl
adc
pop
or
cmpw
and
or
add
inc
sbb
adcl
daa
add
pop
gs
loop
and
or
ret
jge
or
jl
push
movsb
mov
cmp
enter
cld
ret
shlb
jle
jecxz
adc
inc
mov
pop
rorb
imul
js
orl
and
adc
arpl
stos
cwtl
xchg
dec
cmp
fsubrp
jbe
loope
xchg
jmp
xchg
sbb
aaa
sub
fbld
fisubl
and
cmp
ja
cmp
icebp
arpl
dec
jmp
jbe
cli
clc
sbb
incb
cltd
or
mov
push
xchg
and
sbb
and
add
mov
mov
cmp
and
dec
mov
adc
jg
movsb
or
cmp
in
xor
add
push
and
test
jbe
popa
fwait
add
jl
cmp
dec
dec
mov
push
sbb
mov
nop
sbb
pop
add
test
aas
imul
sbb
sub
dec
dec
adcb
addr16
mov
inc
cmp
mov
mov
fwait
nop
jo
cltd
fst
push
stos
stos
pop
inc
dec
pop
sti
mov
imul
or
add
pop
rolb
mov
adc
pop
sub
adc
push
stc
sbb
fadds
nop
movsb
cli
inc
cmpsb
mov
sub
or
lret
xchg
cltd
add
push
setnp
dec
dec
xchg
sub
imul
jle
sbb
push
sub
jge
jmp
popa
and
xor
adc
xchg
sbb
push
push
mov
xor
push
fs
stos
inc
xor
xor
mov
inc
je
mov
xchg
movsb
andb
mov
repnz
adc
or
pop
jb
cmp
mov
adc
cmp
ja
add
xchg
add
lea
cwtl
and
sbb
cmp
dec
leave
dec
hlt
jno
jae
pop
mov
js
lds
popf
xor
and
lret
insl
addr16
mov
add
dec
fcmovnb
xor
mov
aas
test
into
sub
jmp
pop
hlt
pop
or
leave
test
jl
mov
mov
daa
sub
jne
or
mov
out
mov
scas
pushf
adc
cwtl
pop
lea
nop
sub
mov
push
fiaddl
or
xchg
enter
cwtl
push
je
sub
push
fs
push
movsl
mov
and
in
inc
jl
add
ret
test
sarb
pop
sbb
adc
pushf
sbb
mov
sbb
or
test
xchg
inc
scas
mov
andb
jmp
push
stos
mov
clc
mov
mov
int
inc
push
shrb
ret
xchg
movsl
negb
mov
movsl
mov
inc
push
lea
leave
imul
je
les
lea
cmp
or
test
add
mov
popf
loope
orl
jb
mov
add
cmp
push
adc
sbb
in
pop
test
xor
hlt
cli
nop
sbb
fnstsw
xor
mov
xchg
sbb
filds
scas
into
insb
and
jo
je
jns
mov
sub
movl
mov
fdiv
mov
rorl
mov
dec
mov
inc
pop
hlt
push
in
xchg
mov
and
dec
sub
or
push
mov
nop
push
dec
test
or
jg
cmpsb
subl
mov
ljmp
adc
mov
add
mov
lea
out
xor
mov
mov
enter
add
xchg
sbb
pop
les
mov
xor
jl
sbbl
nop
lahf
je
adc
nop
dec
aam
in
fwait
adc
pop
push
cmp
adc
jle
jae
and
sub
or
jne
mov
pop
push
pop
jo
test
push
mov
pop
cld
xchg
ja
shrb
pop
or
add
xchg
xor
add
sub
xchg
sbb
stc
add
imull
or
cwtl
mov
adc
pushl
or
push
movsb
loop
pop
pop
pop
pxor
jno
leave
push
adc
push
xchg
or
lea
loop
mov
sbb
enter
es
or
or
fwait
mov
sub
cmpsb
cmp
imull
mov
in
fsubl
pop
add
cwtl
adc
sbb
jmp
dec
loopne
push
movsb
mov
push
mov
xchg
mov
sbb
cmp
sub
or
inc
scas
sbb
add
int3
push
in
add
loopne
push
lods
xchg
inc
lock
fnstsw
data16
cmc
loope
ds
jbe
jns
jmp
shrb
jo
decb
cld
sahf
lret
mov
mov
adc
cmp
mov
cmovo
adc
push
mov
shlb
mov
daa
int3
in
adc
cmp
lret
cwtl
pop
xchg
shr
cmpsl
insb
sarb
dec
call
pop
mov
jmp
and
mov
jbe
xor
test
stos
leave
cmp
mov
xchg
and
sbb
jne
and
push
mov
push
sti
adc
inc
adc
and
mov
sbb
gs
cmpsl
pop
cwtl
daa
inc
dec
cwtl
arpl
test
mov
sbb
shrb
xchg
sti
mov
sub
pusha
dec
xchg
aas
mov
je
or
pop
sub
scas
shrl
std
and
in
mov
enter
mov
shlb
adc
mov
sbb
and
add
je
jp
std
out
mov
call
stc
das
cmp
adc
inc
lods
and
adc
mov
cmp
shlb
cwtl
cmp
inc
jns
daa
dec
fdivl
sbb
leave
sbb
or
repnz
or
pop
das
add
cmp
push
out
aaa
sub
dec
data16
gs
mull
sub
push
int
push
ficompl
lret
wbinvd
mov
mov
idivb
and
mov
out
mov
inc
sbb
xchg
sub
leave
mov
add
je
sar
rolb
inc
push
cmp
jmp
test
inc
sbb
outsl
xchg
int3
lcall
cmpb
repnz
sbb
cltd
inc
ret
lock
cmp
or
mov
jle
lock
stc
dec
vpmacswd
mov
adc
pop
dec
leave
data16
repz
repz
add
xor
out
mov
shrb
and
pop
sub
pop
cltd
pop
jnp
dec
scas
or
nop
movsl
xchg
cld
mov
mov
pop
ljmp
adc
push
and
pop
dec
jbe
mov
les
mov
pop
in
or
mov
pop
cmp
mov
in
jle
data16
pop
in
sbb
call
adc
bnd
rorb
push
popf
pop
or
call
add
lcall
call
imul
sbb
adc
mov
add
sub
pusha
cmp
jae
or
sub
jbe
gs
mov
add
mov
enter
mov
adc
sub
movsl
pop
test
mov
add
sub
je
mov
dec
lock
pushf
jno
sub
mov
or
mov
sub
pop
add
je
mov
nop
in
hlt
iret
push
test
dec
test
or
inc
and
scas
xchg
rolb
nop
and
jp
std
ret
pop
call
push
inc
push
hlt
test
sbb
or
jg
sub
sahf
add
or
or
dec
push
adc
push
lahf
lahf
in
das
leave
test
mov
add
fxch
mov
dec
inc
or
aam
icebp
hlt
pop
mov
das
aam
mov
in
mov
loopne
xchg
test
jns
mov
cmp
jbe
and
sbb
iret
arpl
fs
jg
mov
icebp
mov
adc
xor
movsb
add
addl
or
dec
mov
mov
fcmovb
push
or
mov
mov
mov
sbb
xchg
inc
sub
add
jmp
xlat
xor
in
or
loope
jg
cmp
addl
lock
ljmp
push
out
hlt
or
push
add
xchg
idivb
mov
incb
dec
addr16
decb
push
add
inc
mov
sbb
bound
mov
push
jbe
pop
xor
xor
adc
loopne
ds
mov
adc
cmc
js
mov
mov
push
dec
test
adc
popf
movsb
cmpsl
loopne
cmp
in
xchg
jmp
xor
shll
fmul
push
add
aad
loopne
jne
mov
jo
or
and
adc
out
daa
mov
int
test
lea
imul
sub
movsl
cmp
cmp
add
dec
sbb
mov
xor
add
jbe
popf
loope
pop
push
push
test
push
into
inc
sub
pop
call
add
cli
mov
fildl
int3
aaa
js
pop
in
jae
fs
sahf
sti
adc
inc
inc
dec
mov
lods
mov
cmp
ja
mov
jb
xor
jbe
xchg
sti
push
in
jl
pop
dec
call
push
or
push
or
jp
pushf
xor
icebp
xor
ret
in
xorl
add
movsl
push
cmp
ficoml
in
or
pop
nop
in
cmpl
and
scas
ret
into
cmp
or
or
lds
dec
cwtl
mov
lea
fwait
mov
jg
jno
fs
push
pushf
mov
stc
div
pop
mov
sti
call
inc
enter
jnp
cmp
adc
push
popa
mov
jg
xcrypt-cbc
cmpsl
adc
inc
sar
cmpsb
cmp
push
jg
insb
pusha
and
and
in
and
mov
rorl
pop
jne
dec
and
les
lret
add
adc
test
sub
mov
add
mov
std
jne
rcl
lods
aas
jb
mov
and
and
test
jmp
aaa
daa
and
push
std
mov
pop
adc
stc
pop
xor
or
sbb
add
in
outsl
jge
inc
or
xor
es
enter
mov
dec
xchg
push
jmp
jb
rcl
sub
mov
mov
outsl
push
mov
mov
aam
sub
mov
adc
push
or
push
popf
adc
xchg
nop
mov
in
pop
push
enter
jp
inc
jae
jnp
and
inc
inc
gs
sbbl
jo
push
fists
xchg
fdivr
inc
aaa
fstps
sbb
lret
add
nop
inc
enter
inc
or
loopne
ret
sbbb
cld
out
inc
js
je
enter
jns
xchg
and
hlt
inc
pusha
rolb
popa
arpl
mov
lock
or
lea
adc
fnstenv
adc
or
js
adc
gs
mov
in
push
xor
inc
pusha
call
mov
and
enter
mov
enter
loopne
les
and
shl
and
sub
lea
rcrb
or
incb
dec
and
in
int3
cmc
adc
enter
mov
int3
fwait
mov
stos
outsb
shrb
call
inc
add
add
adc
dec
pop
and
pop
bound
fwait
shlb
inc
adc
mov
sbb
lock
or
add
and
cmp
roll
xor
jg
mov
adc
sti
push
and
lds
es
sbb
movsb
aad
inc
leave
sub
adc
adc
jp
data16
adc
dec
or
cltd
adc
enter
and
push
dec
adc
xchg
push
push
xchg
dec
jmp
dec
hlt
sub
dec
mov
and
cmpb
es
inc
push
mov
pop
es
pop
loop
dec
mov
pushf
les
jmp
mov
pop
cmp
and
vminps
fcoms
inc
jecxz
test
push
das
inc
mov
ljmp
inc
and
add
aas
hlt
sub
aam
mov
ror
fidivl
aad
imul
xor
call
in
lea
dec
int3
lea
mov
popf
sub
adc
inc
out
and
inc
mov
dec
adc
inc
dec
jo
cmp
jle
mov
daa
scas
or
and
inc
add
mov
nop
ror
movsl
push
movsl
dec
mull
inc
mov
cmp
cmpsb
sbb
and
in
sbb
inc
dec
call
rclb
push
jne
add
in
cmp
jge
ret
imulb
je
decb
add
dec
sbb
push
lock
pop
rorb
push
lea
sti
into
sub
in
push
adc
lret
aas
xor
sbb
and
jb
sub
insl
mov
mov
and
jo
lahf
mov
xchg
sub
cli
stc
add
cmp
out
lods
cli
rcl
lea
sbb
adc
adc
leave
jl
add
test
popf
inc
sti
shl
xor
fisttps
add
nop
ds
sti
repz
xchg
aam
jae
pop
ljmp
add
ss
outsl
pop
cmp
dec
push
loopne
add
fmul
sbb
adc
push
cwtl
xchg
cmc
push
fmulp
pop
and
sub
xchg
fldenv
fs
adc
or
movsb
loopne
xchg
sbb
sub
pop
les
push
stc
stos
ljmp
dec
and
jecxz
adc
ljmp
mov
dec
xchg
ficomps
xchg
dec
enter
or
adc
sbb
sbb
mov
loope
aad
sbb
mov
cmp
push
add
add
or
cli
mov
pusha
fildll
fsts
fisubs
sbb
jl
mov
cmpsb
leave
out
rorb
mov
fld
icebp
ja
jge
jae
ss
or
push
orb
enter
sub
pushf
sbb
pop
xchg
popf
or
ficoms
roll
and
fs
or
sbb
sub
and
jne
dec
les
xchg
dec
mov
inc
shrb
data16
sub
stos
outsl
das
sbb
inc
les
pop
imulb
dec
add
lcall
jno
cmpsl
xor
and
inc
push
adc
pop
pop
and
fdivl
mov
je
add
or
mov
cmp
xor
dec
push
adc
and
and
sbb
inc
adc
or
mov
and
inc
add
or
and
sbb
nop
mov
dec
inc
fwait
adc
pusha
movsl
adc
test
icebp
shl
mov
push
lea
pop
add
aas
neg
lahf
xor
ds
or
push
add
divb
and
cld
sarl
push
pushf
push
jo
sbbb
sbb
and
mov
xchg
push
pusha
sbb
and
bound
add
movsb
das
lret
fimull
xchg
repnz
jne
xlat
push
sub
in
and
mov
push
call
add
sahf
adc
hlt
dec
neg
push
jne
ret
pop
daa
mov
mov
shr
sub
or
ja
adc
mov
or
xor
sub
mov
add
add
and
dec
and
ret
xchg
test
sbbl
fdivl
or
xor
inc
enter
mov
xor
mov
mov
push
mov
ljmp
push
xchg
push
add
in
test
ret
je
movsb
fnstenv
outsl
jo
lret
mov
sar
neg
add
inc
mov
push
lods
js
dec
mov
test
mov
test
mov
into
clc
or
sub
in
sbb
repnz
lret
or
push
icebp
mov
fldenv
xchg
or
push
mov
sbb
int
adc
pop
adc
sbb
fstps
and
nop
adc
cmpsb
loopne
sbb
lods
cmp
inc
clc
and
add
mov
ret
inc
mov
shl
pop
sbb
or
andb
pop
mov
push
cwtl
lods
mov
lods
icebp
pop
push
ds
push
push
lcall
inc
add
lea
sub
xor
and
push
and
cld
dec
sbb
adc
sbb
pop
and
adc
cli
push
mov
sub
push
pop
outsb
jo
insb
jge
sahf
mov
add
out
call
inc
adc
mov
sbb
sub
add
xchg
inc
xlat
lcall
push
adc
and
inc
add
or
or
add
movsb
imul
mov
test
test
mov
sbb
clc
and
call
adc
dec
les
std
popa
jne
or
fwait
int3
adc
xor
xor
inc
shlb
mov
sbbb
push
push
dec
jno
xorl
mov
in
sbb
jmp
dec
pusha
ljmp
jo
sbb
inc
sahf
xchg
and
ficoms
mov
rcr
or
into
sub
sbb
fdivrp
ss
or
adc
movsl
mov
ja
pop
stos
lock
dec
mov
test
popa
adc
pop
ret
imul
std
dec
push
nop
cmp
lcall
pop
fs
jo
mov
ficoml
out
or
jb
cmp
and
sbb
add
or
add
call
mov
mov
bound
fidivs
xchg
sub
or
sbbl
pop
push
sbb
imul
and
add
and
jp
inc
and
jg
push
sub
or
data16
sub
inc
adc
adc
rol
mov
mov
adc
icebp
je
inc
ret
call
mov
sbb
add
dec
movzbl
or
jp
sub
popf
sub
sub
push
xor
mov
dec
inc
in
inc
inc
leave
inc
push
and
add
push
pop
stos
and
inc
sbb
sbbl
xchg
pop
mov
xchg
mov
dec
pop
sbb
inc
daa
push
push
out
sbb
or
pusha
xchg
sub
adc
sbb
pop
jbe
lods
xchg
jbe
push
or
add
in
in
enter
sub
mov
in
jecxz
or
rcll
pop
ds
pushf
test
or
push
and
inc
add
lcall
jg
mov
cli
shl
fisttpl
adcb
or
push
push
cmp
add
jmp
cmp
push
adc
pusha
push
and
dec
or
ret
cli
fstl
enter
aam
adc
incl
lods
inc
cltd
xchg
inc
push
sub
cli
popl
jge
and
cwtl
jns
mov
jge
cmp
mov
loope
xchg
mov
cmp
xorl
sub
mov
lock
sub
pop
inc
jle
dec
adc
addr16
nop
sub
rclb
jne
mov
call
or
jle
in
xchg
fisubs
std
imul
in
push
test
repnz
les
das
mov
adc
repz
pop
jecxz
add
je
inc
add
dec
aam
out
cmpsb
in
add
sub
mov
adc
fldcw
jg
fbstp
jbe
xor
add
pop
mov
xchg
dec
dec
sub
dec
push
inc
lea
ljmp
add
mov
push
jmp
imul
xchg
pop
sub
or
es
jp
xchg
sbb
loope
out
leave
outsb
cmpsl
and
add
or
into
mov
test
nop
fs
cmpb
test
call
daa
aam
cwtl
inc
sub
sbb
or
call
jo
ret
mov
push
push
loop
jmp
or
mov
mov
ret
push
inc
subl
mov
mov
xchg
insl
jne
cmp
push
jnp
cmp
sbbl
adc
pop
or
adc
sbb
enter
inc
inc
enter
dec
xchg
call
mov
jle
mov
adc
stos
popf
shrb
dec
icebp
xchg
inc
sbb
adc
popf
mov
xchg
or
adcl
and
mov
icebp
stos
shll
xchg
and
and
or
adc
daa
mov
aam
adc
or
push
pop
cmp
arpl
notb
sbb
jge
mov
mov
add
adc
push
cmp
jl
and
sub
xchg
inc
adcb
sbb
subl
or
repz
out
add
movups
adc
in
notb
cmpsb
ret
call
xor
or
mov
push
lea
loop
dec
and
push
xchg
fsubs
xor
xchg
or
leave
sbb
lea
aad
test
cmc
xorb
jb
jo
or
sub
mov
call
add
jno
sbb
sub
dec
jge
std
and
xor
popf
xor
pop
loopne
mov
push
jg
dec
ret
dec
gs
sub
jmp
pop
sbb
mov
into
cmp
jbe
and
inc
jae
mov
push
sub
mov
dec
jae
mov
dec
mov
and
cmpsl
mov
push
mov
out
dec
adc
adc
add
inc
jmp
popf
pop
inc
inc
pop
pop
adc
loope
incb
sbb
mov
leave
outsl
mov
cmc
sarb
jl
xchg
out
subl
mov
popa
mov
mov
push
lcall
or
roll
or
dec
or
sbb
jle
inc
push
pop
sub
lds
test
pop
jp
lahf
dec
aad
xor
notb
dec
inc
loopne
and
outsb
sahf
xorl
outsb
lahf
in
cmp
cltd
or
sub
mov
repnz
mov
out
ja
add
xor
outsb
jecxz
lds
mov
and
mov
xchg
push
orl
mov
jmp
scas
pop
mov
inc
jecxz
sub
inc
fstl
push
cmp
lds
adc
pop
loope
pop
in
cs
int3
enter
faddl
in
xor
jb
cmp
add
jnp
inc
adc
xchg
add
dec
xor
sub
ret
push
adc
adc
xchg
mov
inc
add
dec
in
push
push
notb
dec
jnp
sub
inc
or
push
or
data16
pop
jb
aad
shlb
inc
or
or
loope
sub
or
inc
cmp
je
mov
lods
addl
mov
xlat
mov
inc
mov
and
mov
adc
dec
xor
xchg
push
push
adc
push
cmp
movsb
and
pop
nop
or
xor
pop
test
mov
or
je
push
or
dec
out
addb
cmp
adc
test
dec
sub
cs
sbbl
xchg
sub
mov
nop
push
ja
sbb
loope
cmp
jo
xchg
push
inc
pop
jb
cmpsb
mov
add
inc
dec
and
add
push
insb
sbb
outsb
sbb
mov
cmp
mov
dec
push
in
sarb
cmp
push
sbb
dec
fidivl
add
xchg
stc
or
jmp
and
inc
inc
mov
adc
adc
sbbb
dec
push
add
add
add
lcall
pop
clc
or
orl
add
inc
cld
and
xchg
hlt
jle
jo
repz
ds
andl
or
mov
daa
js
push
add
mov
inc
imul
cmp
lret
push
cmp
jb
int
pop
data16
shlb
in
gs
aaa
fisttps
out
add
pop
mov
pop
mov
jle
or
fmuls
or
nop
cmpsl
dec
leave
mov
insb
push
mov
jae
pop
mov
or
insb
xchg
pusha
xchg
jb
rclb
xchg
and
ljmp
loope
aam
jmp
xor
pop
call
mov
mov
or
sbb
mov
adc
sti
xchg
testb
mov
out
lods
pushf
push
sub
xor
dec
pushf
inc
and
in
xlat
in
addr16
rorl
pop
movsb
stos
sub
cli
or
clc
pop
leave
adc
sbb
clc
int3
dec
pop
jbe
jne
fucomi
adc
mov
ficoms
cli
mov
cmp
dec
cltd
fistpl
dec
jns
xor
dec
mov
scas
mov
cmp
popa
in
dec
pusha
jg
ret
push
or
shrb
outsl
cmp
or
insb
dec
andl
xlat
outsb
ret
in
ljmp
sbbb
jb
into
sub
ja
mov
ret
cmc
mov
decb
jmp
cmp
sarb
mov
cmpl
stc
sbb
mov
xor
cmpsb
std
mov
push
imul
nop
outsb
fs
xor
bound
push
stos
mov
adc
dec
insb
dec
xchg
xchg
dec
inc
push
dec
add
xchg
ja
or
jb
mov
dec
mov
and
mov
adc
sbb
or
push
in
in
and
add
adc
jle
leave
lods
lea
fwait
xchg
dec
aad
adc
dec
pop
out
mov
adc
lret
aad
in
inc
dec
sbb
push
dec
jecxz
xor
iret
xchg
pop
sub
fs
push
test
scas
fistpl
dec
and
aaa
cld
js
inc
sbb
mov
mov
imul
cmp
xchg
rclb
mov
jae
dec
xor
push
and
xor
inc
push
roll
push
push
mov
xchg
scas
dec
dec
aad
lret
push
aad
dec
cmp
jle
xlat
adc
popf
repnz
jbe
jns
sub
stos
adc
lods
rorb
sub
sbb
cmp
xchg
sub
pop
mov
pop
pop
adc
dec
es
arpl
orl
fs
shll
call
sub
leave
push
sbb
mov
jne
push
mov
lret
cwtl
in
test
mov
mov
dec
pop
sbb
ljmp
enter
push
push
clc
pop
movsb
mov
or
jp
jo
xorb
gs
popa
push
mov
test
pushf
push
pop
pushf
lds
sub
cmp
mov
mov
adcl
mov
stc
testl
lds
inc
add
das
loop
je
push
push
add
dec
ret
and
lock
ja
xor
sub
daa
sbb
ret
add
pop
ja
and
not
push
sbbl
out
sub
or
addl
push
inc
test
adc
test
aam
add
lahf
and
inc
cmp
stos
fcompl
cmpsl
sbb
mov
adc
push
sub
mov
sub
packssdw
fisttpll
adc
fmull
xchg
test
inc
insb
mov
push
cmp
xor
rolb
imul
mov
dec
xor
scas
pop
sub
mov
sub
push
sub
arpl
and
insb
sti
xchg
or
jbe
mov
mov
mov
inc
xchg
les
pop
xchg
pop
fucomp
fs
mov
mov
push
movsl
popa
cmpsb
xor
push
mov
sub
out
pop
in
mov
sbb
cs
dec
mov
ret
push
lods
hlt
shrl
pfsubr
gs
out
ret
sub
sub
cmp
jne
pop
push
ja
rcl
push
push
push
cwtl
mov
push
adc
out
pop
addl
dec
pop
push
xlat
xchg
mov
addr16
test
fistpll
aaa
dec
xor
cmpsl
fwait
or
sti
shlb
sbb
mov
enter
jl
adc
mov
add
cmpl
add
adc
push
add
cwtl
mov
fidivl
es
sub
adc
in
arpl
ss
scas
lea
js
mov
dec
je
nop
push
pop
and
pop
sahf
es
les
xchg
pop
out
out
adc
sahf
cmp
sbb
xchg
pop
cmp
nop
mov
adc
add
adc
pushf
and
int3
inc
xlat
adc
xor
shrb
push
push
add
in
xlat
testl
pop
or
or
inc
sbb
rcrl
lcall
or
inc
inc
pop
adc
jl
in
inc
and
pop
pop
sbb
in
pop
and
jbe
add
sub
cmp
icebp
jge
inc
into
test
je
mov
adc
sbb
xchg
push
jae
pop
mov
sub
mov
add
and
mov
or
bound
incb
cld
mov
and
out
jg
adc
mov
scas
inc
push
sub
mov
pop
sti
pusha
mov
mov
push
sbb
and
mov
mov
inc
filds
sbb
and
mov
inc
out
add
or
dec
ret
imul
push
stos
sbb
push
push
adc
pop
sahf
icebp
sahf
repnz
jle
xchg
or
mov
mov
dec
mov
jg
cmc
insb
cmp
cwtl
shl
xchg
sbb
scas
lret
mov
jl
xor
fidivrl
push
and
test
jg
icebp
in
dec
xchg
test
dec
jmp
and
mov
push
or
enter
jg
jge
rorb
ljmp
cwtl
fdivrl
es
push
nop
inc
pop
sbbb
lahf
adc
das
aam
in
inc
pop
sbb
mov
clc
mov
xlat
cmp
xor
adc
ljmp
xor
es
push
and
sbb
sub
dec
lods
push
push
mov
add
push
push
push
sarb
lock
mov
mov
in
pop
pop
jmp
push
mov
mov
jp
lock
adc
pop
xor
push
data16
rolb
test
sbb
add
out
sub
add
cli
loopne
jnp
jbe
pop
add
fmull
aas
add
orb
jge
fwait
or
ret
push
xor
aad
mov
ficompl
insl
mov
adc
xor
incl
and
repz
mov
sub
adc
jns
push
jge
data16
dec
add
stc
inc
jl
and
push
ficompl
sbb
nop
push
out
mov
adc
xchg
sbb
pop
inc
es
or
jg
jle
cmpsb
fs
jmp
in
mov
rol
jmp
add
std
xor
jmp
shll
pushf
dec
movsl
into
push
mov
sub
inc
and
lods
movsb
movl
mov
imul
lea
inc
mov
adc
add
xchg
inc
mov
dec
add
mov
daa
into
or
dec
xchg
pop
dec
xchg
push
in
adc
dec
insb
stos
test
or
add
mov
lock
or
in
push
xchg
repnz
and
nop
pop
mov
lock
and
adc
aas
dec
cmp
jo
dec
add
jo
push
adc
scas
pushf
xchg
mov
int3
rclb
int
lods
push
mov
lret
mov
in
and
jg
xchg
and
xchg
mov
sbb
or
mov
in
pop
dec
mov
add
les
or
enter
aad
and
shrb
je
xchg
aam
fs
xor
cmpsl
into
int3
pop
mov
dec
popa
cli
add
and
fisubs
sub
repz
or
sbb
inc
pop
imul
xchg
or
cmpb
or
sar
mov
xchg
jbe
leave
jae
imul
push
xchg
xor
xchg
add
loope
test
jl
or
adc
or
fs
mov
loope
jecxz
dec
mov
add
nop
adc
adc
pop
mov
fisubrl
rclb
js
mov
jne
aaa
nop
je
mov
jle
cmp
sbb
xchg
push
inc
arpl
and
add
inc
lods
push
enter
cs
enter
cmc
gs
pop
mov
pop
pop
pop
adc
cmp
xor
ss
bound
stc
dec
sub
sub
aam
xchg
std
and
push
push
stos
sub
test
cld
dec
push
inc
dec
lods
sbb
loope
push
cli
nop
xor
cld
xchg
add
jmp
push
cmp
or
testb
dec
stos
push
je
or
or
mov
and
mov
inc
cmp
call
push
mov
xor
add
icebp
dec
cmpsl
fbstp
xchg
test
and
es
imul
cmp
jle
dec
xor
test
inc
mov
mov
pop
rol
int
lret
hlt
aaa
push
jg
mov
lea
test
mov
out
mov
pusha
push
shlb
and
add
push
push
push
je
mov
and
call
push
daa
cmpl
mov
movsb
imul
push
xchg
cmp
inc
cmp
or
movl
sbb
inc
jle
mov
add
std
xchg
rorb
hlt
repnz
jg
inc
bound
mov
xchg
jo
cmp
adc
jge
fmuls
outsb
sbb
test
sub
and
cltd
orl
movl
push
out
into
ds
imul
test
push
inc
jecxz
push
rcrl
aam
in
dec
add
sub
icebp
and
jnp
sub
sub
add
inc
xchg
jo
inc
xor
xor
fstp
mov
push
and
stos
sub
jp
inc
sub
pop
jg
xchg
push
sbb
imulb
je
scas
mov
js
inc
ds
mov
mov
nop
dec
fildll
xchg
mov
lret
fstpl
cmp
cmpxchg
xchg
dec
icebp
cli
aas
in
cmp
jo
and
adc
out
imul
cmp
jo
inc
and
mov
loopne
or
and
push
adcl
mov
push
xlat
aad
or
mov
aam
out
cmpsb
lahf
cmp
jo
daa
jge
mov
cli
sub
pop
pop
insl
outsb
mov
mov
pop
adc
out
mov
fists
popf
hlt
mov
fmull
adc
dec
out
and
and
ret
mov
dec
inc
lea
xor
aam
push
sub
dec
daa
movsl
fldcw
scas
test
xor
aas
push
test
jne
inc
adc
xchg
pop
inc
mov
mov
mov
jmp
pop
inc
mov
test
lds
adc
leave
dec
ficoms
fsub
mov
scas
add
lahf
push
cmp
scas
lret
sbb
dec
popa
or
jns
or
es
or
jmp
adc
stc
cmp
clc
pop
repz
orb
push
add
bnd
loop
or
inc
cmp
jnp
inc
sub
adc
cwtl
adc
or
xchg
adc
xchg
jns
dec
push
sub
es
add
jne
in
in
pop
pop
sbb
addr16
cmpsb
or
xlat
pop
dec
push
mov
xchg
orl
addb
push
mov
ret
notrack
inc
adc
addl
cld
notl
in
pop
jno
adc
jno
pop
mov
jo
xor
push
sbb
mov
pop
and
dec
xchg
adc
rorb
jne
mov
nop
pop
or
and
mov
loop
repz
push
adc
adc
xor
cs
xor
mov
arpl
addr16
pop
sub
mov
out
nop
mov
ja
shll
mov
xchg
fsubrs
daa
dec
add
mov
lock
enter
gs
mov
pusha
lret
imul
das
push
xor
sar
or
cmp
packssdw
aam
hlt
mov
call
xchg
cmp
xor
fldt
cmp
xor
fcomi
lds
cmpw
aas
xor
inc
mov
lock
pop
or
gs
out
xorl
in
xlat
jns
shl
add
mov
fdivr
jo
rcll
dec
jo
xchg
enter
xchg
inc
lcall
push
push
hlt
out
enter
xchg
arpl
scas
lcall
or
xor
adc
adc
xchg
xor
cmpl
test
xorb
mov
inc
mov
sub
or
inc
loopne
sub
adc
and
inc
jmp
pop
cmp
das
inc
or
sbb
dec
les
das
jg
movl
or
icebp
add
or
test
pushf
enter
mov
xor
out
mov
or
and
std
mov
int3
sub
ljmp
cltd
js
dec
and
dec
sbb
in
bound
xor
jae
jmp
daa
push
push
adc
push
testb
adc
adc
cmpsl
aad
test
jl
aam
sub
add
ficompl
lock
scas
flds
fcom
in
lea
mov
mov
push
movsb
pop
xor
ret
mov
pop
inc
jne
clc
inc
testl
jne
push
push
add
sub
loopne
push
rclb
inc
hlt
cmp
cmp
jl
cmpsb
imul
pushf
or
jnp
inc
fwait
xchg
cmpsl
jne
int3
and
loopne
jns
push
jl
dec
mov
mov
popf
sbb
mov
or
test
xchg
shl
pop
push
arpl
aam
je
sbb
pop
nop
mov
out
push
inc
push
enter
mov
in
cmp
gs
xor
cmc
cmp
out
dec
or
jmp
add
pop
test
cld
add
adc
icebp
sub
or
cmp
in
mov
lea
push
add
lcall
mov
mov
nop
lock
dec
sbb
sub
cmp
cmp
mov
adc
sub
push
jg
adc
and
inc
ljmp
sub
mov
dec
or
jmp
mov
test
jle
jg
into
sbb
push
add
add
sbb
push
pop
je
cmp
xor
dec
sti
pop
daa
jns
movsl
xor
sub
xor
ret
lea
repnz
adc
lea
sub
les
insb
dec
pushf
sub
insl
jno
pop
dec
xor
pop
xor
pop
into
pusha
repnz
xor
sub
pushf
cwtl
xchg
mov
push
sbb
xchg
sbb
popf
and
lret
adc
or
jo
mov
adc
and
clc
xor
cwtl
lea
sub
adc
lret
imul
xor
mov
xchg
jno
push
push
scas
fnstcw
rcl
call
test
and
fs
xor
lock
push
icebp
pop
or
or
and
bound
mov
setb
ficoms
pop
test
adc
cmp
jle
mov
add
xchg
push
dec
pop
aad
pushl
jmp
imul
aam
sbb
push
std
lods
daa
loop
je
cld
cli
orl
jge
scas
push
lahf
cmp
push
adc
cmp
jo
cmp
loope
daa
call
sbb
dec
jl
inc
and
test
insl
mov
push
out
pop
jo
loope
fidivrs
push
adc
in
sti
add
repz
inc
jns
mov
sub
in
mov
dec
add
cmpl
fwait
push
lahf
fldl
sub
and
add
mov
aas
scas
ficoml
or
je
and
loopne
loopne
pop
and
popf
fistpl
adc
icebp
sbb
add
add
and
add
neg
xor
cmp
xchg
loop
mov
loopne
dec
int3
sub
or
or
sbbl
sub
in
stos
je
stos
push
sbb
hlt
jl
or
pop
add
sbb
aaa
push
push
mov
push
xor
xlat
insb
mov
jo
jge
rcrb
test
jl,pt
xor
les
out
movsb
icebp
push
cmp
mov
xchg
push
add
jg
and
and
xor
or
sbb
adc
jb
stos
cwtl
hlt
push
sbb
hlt
jmp
orl
mov
jno
jge
sub
and
add
test
fistl
fdivr
or
push
and
mov
jle
lds
das
mov
cwtl
jne
sub
je
jmp
aas
or
je
push
in
sub
or
sbb
inc
jge
imul
sub
add
jo
je
fdivrl
adc
dec
in
cmp
add
add
sub
repnz
cmp
adcl
in
sbb
inc
xchg
or
pop
push
jle
mov
flds
jmp
es
and
sbb
fmull
leave
push
and
cmp
adc
xchg
sbb
or
sbb
orb
icebp
pusha
mov
cld
test
nop
call
lods
sub
jo
mov
jecxz
sub
sbb
fldpi
ja
scas
imul
pop
test
mov
sub
xlat
adc
add
pop
call
adc
mov
hlt
cmp
les
fdivrl
shl
adc
loope
lock
cmp
out
lea
jl
push
add
add
add
jnp
mov
sub
call
inc
adc
mov
sti
insb
mov
popa
sub
mov
inc
jmp
push
lahf
inc
add
add
in
dec
fisubs
test
lret
nop
add
mov
lcall
inc
icebp
jge
xor
push
jae
movsb
sub
aas
mov
loopne
mov
push
add
decl
inc
test
lods
mov
fadd
push
inc
or
or
inc
adc
jmp
cmp
jo
addr16
adc
add
scas
test
call
lods
hlt
sbb
mov
popf
fdivrl
xor
add
inc
aad
lods
fiadds
mov
sbb
cmp
xchg
enter
sub
stos
ficoml
cmp
add
adc
and
or
push
ror
cs
cltd
cmp
repnz
mov
call
inc
and
and
nop
pusha
shll
adc
and
xchg
mov
jns
push
xchg
cmp
in
push
sbb
ret
jg
jae
dec
mov
lock
mov
mov
and
sar
fisttpll
push
shlb
outsb
mov
xchg
pushl
mov
inc
push
inc
hlt
push
into
mov
mov
or
or
mov
xor
jg
dec
sbb
or
sbb
or
xchg
push
mov
mov
mov
daa
movsl
testb
dec
fsub
lock
xchg
les
test
mov
and
xor
inc
xor
cmpl
inc
sub
inc
pop
sbb
je
enter
cmp
cwtl
out
cli
mov
xchg
jg
mov
sti
sbb
insb
push
std
pop
or
das
jmp
mov
mov
mov
add
in
loop
or
js
movl
mov
je
adc
xchg
mov
movsl
mov
add
mov
test
sub
or
add
popa
outsl
inc
jae
call
dec
pop
test
jmp
pop
pop
or
add
mov
cs
clc
out
lret
sbb
scas
mov
imul
mov
in
mov
push
dec
stc
adc
mov
andb
aam
jnp
call
jp
decl
mov
mov
adc
ljmp
add
ret
or
repz
push
cltd
cmp
testl
adc
mov
pop
movsl
inc
mov
sbb
mov
dec
outsb
adc
adc
dec
jmp
fwait
lea
mov
lods
test
and
lods
mov
fisttpll
push
in
xor
adc
xchg
xchg
and
lock
adc
repz
scas
sub
and
adc
and
call
fs
out
enter
sbb
loopne
lea
push
call
into
sub
jl
xchg
lds
daa
push
mov
inc
mov
pop
or
mov
dec
xor
shlb
ret
aad
and
mov
or
sub
lea
in
adc
adc
sub
sub
data16
add
mov
sub
xor
cmp
aas
lret
jno
in
js
pop
xor
les
xor
push
adc
leave
ss
push
inc
cmpl
hlt
add
push
mov
mov
js
loope
and
adc
lret
jge
xor
pusha
jnp
adc
and
push
repz
jo
shlb
dec
adcl
cmp
sub
stos
jne
lret
or
or
enter
lahf
dec
in
mov
adc
push
add
shll
jmp
sbb
jo
movsb
adc
push
xchg
lods
sub
das
or
mov
jbe
daa
pop
sar
cwtl
xor
adc
insb
rclb
es
ljmp
subl
jle
jb
push
jo
and
cli
inc
inc
jle
dec
adc
sub
xchg
mov
imul
cmp
xor
stos
shr
lea
imul
jmp
fprem1
mov
cmp
sbb
xlat
adc
ficoml
xor
push
sbb
push
mov
sub
inc
daa
cmp
mov
shlb
in
push
cmp
lock
mov
jecxz
push
push
sbb
xor
pop
inc
test
test
cmp
jae
in
int
jg
addr16
sbb
cmp
push
adcl
lock
jne
xchg
pop
adc
push
std
push
sub
or
push
push
mov
inc
xchg
jl
lock
mov
xlat
rep
es
sub
sub
dec
stos
nop
rcl
shlb
jmp
inc
push
mov
jb
dec
mov
sar
les
pop
xchg
adc
push
frstor
inc
jge
lahf
sbb
dec
jnp
xchg
pusha
ret
jnp
add
hlt
or
pop
jl
das
hlt
dec
outsl
or
mov
daa
ss
jnp
into
das
push
or
movsl
and
lcall
inc
into
leave
jo
fcompl
pop
sarb
fmul
outsl
xchg
inc
jle
lea
test
adc
inc
push
pop
xchg
fists
stc
cmp
dec
into
cmp
push
pop
jns
lret
lods
int3
adc
mov
mov
mov
cmp
dec
xchg
add
call
pop
or
mov
repz
mov
push
and
xchg
pusha
ficoms
adc
call
or
nop
jmp
and
or
xor
dec
sbb
mov
lcall
lock
push
push
cli
cwtl
rclb
inc
es
loope
and
std
dec
int
ret
test
adc
push
adc
aad
lods
xlat
and
push
mov
pop
call
cmc
loope
out
std
jb
dec
je
inc
push
and
pop
push
cwtl
pop
mov
inc
or
push
push
sub
in
inc
mov
xchg
ret
sub
repnz
in
xchg
int3
scas
cmp
mov
aaa
mov
out
ljmp
xor
push
into
testl
or
cltd
out
jno
ja
test
adc
sbb
hlt
jo
inc
xor
test
add
xor
ret
adc
imull
std
dec
mov
sub
sub
jp
adc
inc
and
or
push
dec
jge
jnp
mov
pop
sbb
xchg
sbb
push
shll
xor
sub
sti
lret
ljmp
adc
inc
jns
xchg
inc
stos
shrb
inc
or
std
gs
or
insl
inc
inc
sahf
dec
pop
or
mov
cmp
aaa
js
inc
adc
fs
lea
adc
inc
int3
push
sbb
or
call
imul
gs
jl
push
xor
jne
lock
stos
outsb
lock
inc
decb
adc
adc
mov
les
jmp
dec
imul
xchg
outsl
mov
xchg
das
and
inc
fwait
out
add
pop
push
or
lods
aas
mov
fisttpl
cmp
nop
test
or
in
lds
inc
inc
sti
mov
lret
push
mov
xor
mov
lahf
lahf
push
stos
xchg
inc
mov
stos
cwtl
xor
xlat
scas
jb
sub
mov
cmp
jae
dec
xor
and
scas
pop
mov
mov
cmp
fdivs
in
dec
jge
mov
ds
icebp
ds
xor
idivb
shr
xchg
push
or
xlat
xor
inc
cmp
cmp
repnz
and
movsb
leave
dec
ljmp
ja
pop
dec
cmc
and
or
sub
cmp
mov
aaa
pop
add
aam
adc
fs
xchg
mov
fs
or
mov
inc
dec
inc
mov
repnz
popf
das
cmc
push
sub
les
je
je
add
mov
pop
cld
mov
ljmp
mov
mov
jne
and
inc
dec
and
addr16
bnd
pop
jae
das
or
mov
sub
fsubs
loop
or
mov
lock
movsb
pop
mov
rolb
dec
jns
push
sti
adc
push
sub
inc
mov
jne
scas
int3
pusha
cmp
repz
and
dec
out
lret
inc
pop
mov
sbb
cmp
mov
and
dec
or
fisubl
inc
jns
ret
test
xor
sbb
inc
pop
and
cld
jbe,pt
hlt
loope
test
f2xm1
ret
test
inc
mov
jle
idivl
jno
adc
inc
add
enter
outsb
lret
inc
xchg
dec
adc
sub
jg
in
mov
loopne
test
outsl
add
fcomps
push
ss
in
jmp
aaa
test
dec
std
push
pop
mov
sub
sub
inc
inc
leave
addr16
jg
fidivl
pop
push
cld
dec
mov
stc
push
pop
xlat
dec
push
adc
pop
test
in
and
push
mov
or
mov
mov
inc
sub
shrl
and
or
mov
and
sbb
and
aam
jb
or
xor
add
movq
jg
adc
rcll
dec
or
adc
adc
cli
mov
cmp
stos
inc
mov
rcl
in
imul
xchg
adc
or
adc
mov
dec
int
pop
sbb
cltd
mov
sbb
bound
sbb
pushl
mov
hlt
loope
push
sbb
fnstenv
insl
mov
mov
mov
roll
or
add
fidivs
pushf
mov
cltd
push
mov
call
pop
icebp
std
xchg
ret
and
adc
in
xchg
cmpl
add
std
or
sbb
loopne
cli
sub
dec
jns
in
sub
bound
cmp
pop
hlt
push
pop
adc
jmp
cs
xor
lods
call
inc
mov
pop
add
mov
ret
add
adc
push
sbb
cmp
movsl
dec
out
and
sahf
xchg
mov
out
les
sbb
jb
push
xchg
jns
dec
mov
and
push
sbb
cmp
xchg
dec
xchg
cli
inc
pop
bswap
mov
or
ljmp
xchg
in
shlb
stos
mov
sub
or
pop
sub
push
mov
push
pop
cld
lret
movsb
call
sbb
pop
jb
sbb
pop
push
xchg
dec
into
mov
incb
repnz
in
pop
mov
out
mov
push
rcll
adc
out
sub
and
or
push
and
and
push
xor
mov
or
or
add
sbb
add
sbb
jns
jmp
in
pop
cmp
cwtl
clc
sbb
das
push
cmp
mov
jge
data16
rol
mov
push
sbb
xor
and
inc
ds
sbb
sbb
lcall
mov
lret
jmp
scas
sahf
nop
popf
fdivrp
pop
or
test
adc
jo
inc
or
adc
or
ret
or
inc
das
cmp
sbb
ja
adc
xor
sbbb
adc
dec
cltd
adc
and
adcb
iret
outsb
daa
ja
scas
icebp
ds
jmp
sub
and
jnp
mov
adc
pushf
mov
fidivrl
cltd
and
aaa
sbb
lea
test
and
add
mov
fbld
test
mov
adc
add
orb
and
out
mov
nop
cmp
loop
gs
out
icebp
pusha
lods
adc
sub
jo
nop
lahf
ds
cld
cmp
mov
and
add
outsl
lock
adc
inc
dec
push
jg
inc
jo
lds
loopne
aad
mov
inc
mov
pusha
imul
stos
daa
rorb
ja
xchg
popf
je
scas
push
inc
popa
lock
ds
dec
repnz
and
add
cmc
adc
or
xchg
lahf
rcll
ret
call
push
outsl
in
or
stos
and
mov
movsl
or
in
mov
fsubrl
enter
repnz
sbb
lret
sbb
or
inc
mov
insb
mov
sub
or
mov
fcmovne
leave
push
into
pop
ror
and
sub
push
mov
dec
sbb
and
push
rolb
dec
icebp
or
inc
int3
jmp
pop
pop
cs
leave
xor
and
cmp
fnstcw
lea
push
outsb
andb
call
or
add
add
adcb
fadd
mov
mov
mov
inc
inc
sbb
inc
dec
flds
loopne
shrl
rclb
add
jmp
lods
bound
in
orl
test
aam
adc
mov
and
js
push
sbb
and
push
das
aaa
aam
out
lock
push
lahf
adc
out
test
dec
mov
fisttps
test
xchg
insl
push
add
pop
sarb
in
push
cld
sub
cmp
ret
cwtl
and
aam
mov
cmc
push
in
cmp
adc
daa
and
sbb
daa
fildl
and
pop
fucomip
dec
aas
icebp
adc
mov
inc
pop
cmp
stos
adc
loop
clc
jg
mov
xchg
xchg
nop
lock
dec
rol
in
jmp
or
jl
dec
sub
fstpl
lret
pop
mov
jae
lods
mov
cmp
andl
ficoms
sti
aad
hlt
or
mov
mov
xchg
ja
lock
aam
fdivrs
lea
stos
stos
and
mov
mov
dec
decb
int3
sub
loopne
lea
xchg
lods
in
ja
mov
clc
xor
jle
or
fsubr
push
or
pop
jnp
or
jb
push
push
subb
or
adc
fisttpl
flds
add
call
sbb
adc
add
cmp
push
or
xor
sbb
aaa
push
push
shll
aad
aad
inc
adc
andl
out
subl
adc
sub
xchg
pop
xchg
sub
sbb
pop
xchg
stos
jmp
jp
mov
mov
lods
out
lcall
push
xchg
data16
stc
cmp
bound
inc
sbb
jg
ficoml
mov
push
xor
push
pushl
jmp
rclb
in
mov
lahf
movsb
pop
mov
push
mov
lahf
inc
cli
adc
mov
jb
and
sub
xor
outsl
movsb
fsub
add
or
mov
int3
in
inc
or
and
aaa
pop
xor
cld
ss
cld
xorl
add
ljmp
in
add
data16
shlb
insl
xor
xor
repz
or
fisubrl
xchg
daa
lds
decb
and
add
sti
jge
mov
sub
xchg
test
scas
mov
sub
lret
mov
sarb
or
sti
mov
adc
push
sub
cmp
imull
je
imul
jge
jp
cmp
mov
sarl
daa
fnsave
xchg
mov
ret
inc
xor
fstpl
loop
adc
fcoml
push
iret
xor
mov
lahf
inc
push
jae
xor
or
pushf
mov
cmp
jne
mov
jl
sbb
sbb
sbb
xorl
and
lds
shlb
sbb
push
lea
or
jbe
jno
pop
aad
xor
and
pop
sbb
jmp
and
or
jae
cld
adc
inc
adc
mov
inc
mov
sbb
adc
lods
cld
test
mov
cs
mov
xlat
dec
into
mov
xchg
inc
fcoms
dec
imul
push
popf
roll
pop
cld
mov
jl
in
sbb
jge
aas
adc
cwtl
inc
and
xor
fsts
or
inc
cltd
lret
sub
or
addr16
dec
movsb
data16
orl
fcomi
dec
addl
or
and
fs
push
xor
pop
mov
stos
adc
cmp
or
movsb
add
push
decb
cmpsl
or
inc
adc
jl
bound
xchg
xchg
and
and
dec
mov
sbb
mov
pop
je
rclb
adcl
jo
cmp
pop
lods
adc
mov
or
mov
sbb
mov
sti
cltd
jl
imul
ja
jb
and
mov
jg
cmp
test
int3
inc
push
sbbb
je
in
xor
std
adcb
stos
mov
inc
nop
or
push
mov
into
divb
add
test
std
pop
pop
orl
adc
xchg
aas
jns
enter
stos
add
or
or
mov
mov
enter
push
add
ja
pop
xchg
dec
lock
out
pop
adc
inc
in
mov
cmp
sbb
adc
jge
jp
or
mull
clc
add
cmp
incl
jne
dec
jmp
xlat
cs
xchg
sbb
pop
push
sbb
push
ret
ret
fadd
sbb
or
inc
pop
in
add
jne
adc
enter
sbb
and
enter
or
or
mov
adc
loope
fstps
and
loopne
inc
ja
test
js
inc
fdivs
inc
aam
js
inc
shlb
inc
int3
addr16
movsl
mov
cmpsl
mov
push
and
mov
xor
out
mov
sbb
in
sub
push
je
dec
jle
add
jmp
xchg
test
lea
adc
out
dec
ljmp
mov
addb
push
mov
rep
or
add
sbb
and
je
ret
jmp
cld
mov
push
or
sub
jmp
les
adc
and
das
mov
sub
xor
fisttps
leave
inc
jle
ret
mov
out
dec
out
out
cltd
jo
xchg
mov
fldcw
jecxz
jnp
lods
nop
cmpl
cmp
test
xchg
fnsave
xchg
je
lods
jno
scas
jo
je
sbb
int3
and
and
push
xor
test
sub
les
mov
rolb
mov
in
leave
or
sub
out
fmuls
orl
hlt
repnz
and
adc
into
lds
icebp
add
lcall
push
or
sbb
dec
out
sub
pop
mov
xor
out
adc
xchg
aad
xchg
add
stos
lcall
sub
mov
fs
loope
mov
push
lods
andl
out
enter
xor
fdivl
or
push
movsl
icebp
out
nop
cmp
sbb
sbb
xchg
les
mov
dec
dec
sub
std
out
sub
pop
jecxz
sub
or
jge
push
pop
sub
shlb
nop
pop
stc
jnp
insb
imul
repnz
stos
mov
outsb
mov
ds
add
push
mov
sub
xchg
or
cmp
movsl
dec
mov
pop
push
in
lcall
mov
out
cmpb
mov
dec
adc
jne
and
adc
pop
push
mov
dec
sbb
cmp
loope
jge
mov
insb
push
add
jg
lcall
sbb
jmp
mov
imul
imul
mov
pop
lret
xor
mov
fisubrl
cmpl
sbb
sbb
push
adc
and
inc
in
ja
sbb
dec
cmp
pop
jbe
clc
aam
add
clc
jne
and
push
dec
jle
lods
inc
ret
mov
push
rcll
dec
xorb
lods
push
pop
or
nop
and
les
mov
pushf
call
lret
inc
jo
and
ss
pusha
das
add
mov
sbb
push
and
sbb
mov
and
xchg
lock
xor
inc
iret
mov
adc
sti
mov
scas
ds
xchg
or
sbb
adc
or
adc
push
dec
das
and
adc
lea
cltd
shll
dec
pop
push
push
mov
fidivrs
xchg
mov
jp
movswl
adc
loope
clc
sub
or
add
xor
fistl
je
and
lcall
jle
jne
push
clc
sbb
scas
test
jns
das
mov
push
adc
cmp
cwtl
dec
inc
fs
and
mov
in
punpckhbw
lods
fistpll
mov
fmuls
mov
dec
pop
lods
xchg
shr
imul
cwtl
push
mov
push
dec
dec
and
dec
sbb
test
les
sbb
fs
or
outsl
dec
push
scas
fs
mov
lea
xchg
and
ret
jne
adc
adc
pop
cmp
jle
mov
sbb
adc
arpl
fists
xor
jne
jmp
movsb
adc
add
insl
mov
cmp
cltd
xchg
movd
dec
mov
xorl
adc
jg
test
adc
decl
std
or
mov
push
in
cld
xor
adc
cmp
aaa
push
cs
loop
add
adc
and
cmp
pushf
sbb
mov
mov
push
stos
nop
dec
adc
add
and
lods
pop
jnp
inc
sbbl
cmc
mov
dec
mov
leave
sbbl
xor
cli
mov
adc
dec
clc
call
test
iret
fs
rcrl
rcl
xlat
test
les
dec
ficoml
pop
sub
xor
pop
dec
pop
push
loopne
loopne
cld
mov
inc
push
adc
mov
leave
dec
rorl
and
sbb
dec
mov
lds
adc
push
dec
repnz
jl
mov
or
imul
ljmp
dec
jl
xchg
jno
icebp
adc
jge
negl
rcrl
mov
add
dec
adc
out
aam
popa
dec
jle
inc
jb
inc
add
cmp
xor
jp
push
and
pop
inc
sbb
adc
lods
fistps
aam
xor
sbb
add
jne
inc
push
and
adcb
aam
pushl
rorb
cltd
insb
dec
dec
enter
push
mov
xchg
and
mov
xor
xor
iret
xchg
mov
lods
outsl
fwait
jns
cmpw
cld
sub
mov
jns
add
pushf
jmp
dec
add
mov
test
jmp
and
push
cmp
je
adc
test
add
nop
dec
mov
sbb
pop
dec
dec
sahf
cltd
dec
inc
mov
nop
xchg
nop
sahf
mov
dec
imul
in
nop
addb
mov
adc
jle
lock
adc
mov
ja
hlt
mov
pusha
cwtl
cmp
xchg
mov
sbb
or
xchg
ss
ret
sarl
push
ret
sahf
push
jmp
or
sub
sbb
and
or
mov
cwtl
cltd
sub
mov
std
or
inc
lds
mov
call
cmp
dec
sbb
icebp
enter
movsb
shlb
sbb
push
mov
inc
out
fildl
sbb
pop
adc
inc
cld
in
and
loope
cmp
repnz
subb
add
jg
push
in
bound
or
mov
or
mov
adc
icebp
js
sub
std
or
xor
popa
insl
stc
bound
jp
inc
push
lea
xchg
subl
ds
pop
mov
or
xchg
sar
pop
or
sub
iret
jge
pop
outsb
iret
stos
mov
xlat
inc
scas
aas
sub
dec
push
data16
sub
movsb
std
clc
sub
ror
ficoml
or
jmp
add
cmp
add
mov
fucomi
sti
fsubrl
aam
mov
stc
push
repz
cmpsb
cmp
bnd
pop
int3
ja
adc
mov
adc
sbb
rcrb
cld
js
dec
call
hlt
in
lock
stos
push
cmpsb
sbb
icebp
jg
xor
sub
push
adc
mov
or
js
pusha
and
mov
xchg
xor
cmp
mov
push
mov
adc
jne
sbb
inc
sbb
mov
lock
insb
xor
stos
rcr
out
add
add
inc
sbb
xchg
and
adc
mov
and
adc
std
add
and
adc
inc
or
hlt
or
sub
mov
or
test
fs
and
sbb
jge
enter
aam
xchg
fnstenv
sub
push
or
adc
pop
sub
sub
or
enter
inc
mov
pop
or
nop
mov
cltd
adc
lret
popa
outsl
sbb
sbb
popa
lds
inc
mov
fmuls
fs
sub
jge
scas
jle
cmp
sbb
or
xchg
shll
sbbb
or
das
mov
movsb
or
mov
and
leave
addb
movsl
push
jp
mov
cltd
add
or
nop
sbb
inc
xor
xor
inc
or
pusha
and
adc
or
push
adc
repnz
push
push
lcall
adc
mov
pop
lcall
lret
insb
sbb
dec
insl
in
repz
aas
adc
cmp
or
jne
cmpsl
xchg
imull
xchg
test
je
jecxz
stos
cmp
inc
or
and
inc
sbb
and
sub
xchg
mov
add
adc
mov
adc
in
and
push
or
scas
mov
loope
rclb
push
or
js
mull
pushl
sbb
test
or
or
dec
push
mov
mov
pop
adc
mov
add
cmp
cmp
js
jmp
lea
xchg
sub
iret
mov
js
fisubl
aad
xchg
roll
mov
das
jg
stos
mov
lock
mov
and
xchg
fcoms
inc
sub
sar
stos
mov
sub
push
pop
mov
mov
xchg
jo
bound
mov
cmc
jns
jl
or
je
test
ljmp
mov
test
or
out
gs
mov
sbb
icebp
and
in
into
and
mov
inc
jle
cmp
shlb
inc
mov
pusha
stos
movsbl
mov
jbe
fsubrp
inc
lea
andb
inc
fimuls
sub
xchg
pop
adc
rep
ret
pop
sbb
int3
call
adc
jmp
ret
dec
dec
lock
add
xchg
frstor
xsaveopt
call
inc
in
lea
xchg
repz
faddl
test
lea
jge
test
aaa
dec
adc
jne
jg
cltd
fdivp
int3
xor
mov
add
or
mov
fmuls
testb
movsb
int3
fdiv
lods
scas
jne
or
popf
or
mov
dec
loop
rorb
push
fs
or
jmp
inc
push
adc
pop
lock
jbe
pinsrw
lea
pop
cmpsl
push
inc
bound
push
stos
cmp
repz
cmp
jmp
or
repnz
mov
pop
mov
cmp
jnp
rcr
mov
push
cs
sar
inc
push
xchg
mov
call
mov
add
mov
in
mov
adc
cmp
mov
adc
add
mov
out
push
pop
icebp
shll
das
jecxz
insl
adc
xor
mov
push
inc
add
sti
movd
xchg
jge
xor
mov
dec
add
test
push
or
jmp
pop
jg
rorb
pop
jne
push
inc
or
decl
pop
lahf
call
bound
lds
cmp
add
jmp
movsl
leave
dec
adc
mov
sub
fstpt
inc
push
push
popl
test
jle
xchg
mov
sbb
cmpsl
ss
add
jmp
jo
sub
dec
loopne
in
adc
adc
push
inc
sbb
or
pop
add
fs
sub
dec
xlat
push
call
push
xlat
dec
sub
aam
dec
dec
fimull
xchg
in
cmc
pop
cmpsl
add
push
lea
out
mov
repz
movsl
pop
mov
mov
sbb
xchg
push
push
sub
dec
movsb
mov
cmp
xchg
add
dec
sub
jp
mov
mov
push
loopne
xchg
das
sub
aad
xor
sbb
and
lret
popa
push
ljmp
push
or
and
push
cmp
mov
outsb
mov
mov
mov
mov
and
inc
in
and
pop
bound
repz
push
sub
dec
sub
sbb
es
mov
or
rclb
ror
and
sbbl
mov
jle
xchg
add
sbb
dec
mov
out
sub
pop
sub
hlt
mov
add
fsubs
xor
out
inc
inc
push
decb
stos
sub
push
xchg
pop
mov
mov
push
xchg
cmp
add
inc
mov
sub
xchg
mov
mov
aaa
push
or
shl
sub
leave
shlb
cltd
repnz
cmpsb
adc
jns
sub
in
dec
mov
enter
push
xchg
and
dec
lahf
and
rolb
and
mov
mov
pushf
test
test
cli
or
stc
in
cli
jmp
repnz
xor
mov
xchg
xchg
popa
sbbl
push
mov
lds
sub
rcl
and
sub
mov
cmp
sbbb
or
lods
fucomi
or
aad
adc
jmp
lea
cmp
adc
push
testl
mov
mov
push
movl
fcoms
lret
jmp
push
in
hlt
stc
jl
xchg
movsb
les
mov
push
ja
out
lret
dec
sub
jl
pop
ret
and
leave
roll
rcll
dec
es
or
xchg
add
sbb
notl
test
ret
mov
iret
mov
sub
sub
push
rorb
inc
dec
lret
rorb
sub
rorb
fs
sarb
cmp
and
adc
and
aam
jo
cmp
in
inc
inc
mov
cmp
jmp
pop
fbld
and
add
cmpb
divl
cmp
sahf
inc
inc
inc
add
add
dec
jg
jo
or
dec
dec
addl
inc
dec
cmpb
cmp
mov
sahf
out
fimuls
xor
pop
mov
inc
lret
and
cmp
daa
add
sub
inc
xchg
sti
test
mov
daa
cmp
aam
aam
jmp
cmp
push
movsb
jmp
out
dec
hlt
cwtl
dec
ja
lret
add
js
cmp
or
push
mov
mov
sub
lcall
bound
lods
sbb
stos
fs
and
xor
jmp
in
jns
imul
mov
rorb
xchg
mov
out
jg
adc
jp
push
fimull
push
clc
sbbb
pusha
pop
call
push
test
pop
aas
push
mov
xchg
adc
mov
bound
push
cmp
gs
cmpsl
jne
cwtl
addl
add
mov
inc
dec
push
lea
cld
lcall
mov
pop
push
les
mov
and
xchg
fists
xchg
mov
mov
ss
clc
and
mov
xchg
adc
jb
cmp
js
je
jo
insb
in
jb
sbb
adc
ret
xor
mov
xchg
xor
gs
jb
push
popa
outsl
arpl
je
insb
cmovge
pop
mov
mov
insl
inc
sbb
addr16
push
and
daa
push
push
adc
dec
inc
jae
nop
sbb
adc
push
jne
mov
inc
or
outsb
mov
inc
inc
xchg
outsb
ficoms
push
popf
lock
push
dec
bound
arpl
adc
xor
pop
pop
jl
and
adc
lods
add
inc
jne
or
outsb
jae
imul
inc
sub
js
push
pop
scas
xor
push
dec
add
push
adc
dec
mov
cmp
das
mov
or
dec
push
nop
pop
inc
nop
lea
enter
or
inc
jge
add
or
movsl
imul
and
adc
int3
cmp
and
hlt
andb
xor
pop
pop
sub
sub
xor
push
pushf
cmpsb
les
cs
mov
dec
and
and
das
int3
or
add
adc
and
sbb
dec
mov
inc
movsb
pusha
int
call
cmp
out
cmp
xor
pop
and
and
or
jae
mov
adc
rcrl
and
xor
fsubl
inc
dec
push
inc
or
adc
mov
cmpsb
sub
mov
and
mov
inc
xchg
adc
and
aam
add
sub
jbe
add
inc
jae
pop
sub
je
xchg
js
jl
or
mov
adc
xor
nop
push
mov
adc
sub
jg
and
jl
fmull
xor
push
inc
andps
lods
sub
sub
cwtl
inc
pop
jns
or
test
rclb
enter
adc
xchg
push
adc
xchg
xchg
pop
dec
adc
sub
nop
push
push
lret
rcll
dec
in
or
gs
add
adcb
push
inc
pop
pop
adc
xor
inc
adc
dec
sub
addl
cmp
add
inc
outsl
outsb
loop
fcoml
decl
dec
call
gs
outsl
inc
leave
sub
pusha
adc
push
adc
cmp
addb
push
pop
outsb
mov
jo
insb
repz
sub
xchg
repnz
sbb
gs
xchg
sub
mov
pop
sub
rcl
ret
shlb
nop
jmp
xor
daa
inc
jo
mov
lds
sub
push
imul
cmpsb
lahf
enter
sarb
dec
or
aas
pop
cld
mov
in
inc
nop
ror
or
lret
xor
add
hlt
and
mov
lret
sub
inc
pop
gs
push
dec
or
push
adc
adc
adc
sbb
pusha
xchg
pushl
sub
call
pushl
shll
ja
or
inc
ds
int3
mov
inc
mov
inc
or
mov
mov
cli
mov
loopne
xchg
pop
rorb
cmp
pop
scas
xlat
push
data16
xor
push
ret
mov
push
test
pop
mov
je
lods
aaa
inc
sbb
movl
cmp
mov
cld
sbb
stc
enter
or
pop
push
adc
cmpb
ja
inc
dec
xor
mov
dec
jo
sub
push
pop
mov
pushf
xor
push
lret
addb
filds
xor
add
aaa
inc
insb
push
cli
adc
jne
lcall
cld
push
in
ficoml
ds
gs
and
sbb
and
inc
out
or
or
mov
cmp
leave
add
in
pop
iret
cmp
je
movsl
sub
data16
mov
aaa
test
cmp
ss
lea
jo
data16
js
js
daa
jl
outsl
iret
fs
ljmp
insb
mov
aad
outsl
daa
aad
or
jbe
xor
add
dec
jge
cmc
rcll
cmp
stos
and
jno
fstpt
sbb
sub
sub
gs
aas
jmp
lods
mov
or
jns
in
scas
cmp
push
push
and
cld
ljmp
add
sub
jae
mov
je
and
shll
jno
mov
inc
cmc
push
je
std
cmp
jg
add
or
xchg
mov
push
sbb
adc
mov
adc
and
xchg
mov
mov
add
push
out
push
sub
and
ljmp
or
sub
jno
rclb
sahf
sub
mov
in
adc
mov
inc
or
out
in
jmp
or
sbbb
stos
int
cmp
dec
push
in
sub
add
lods
je
cli
stc
mov
pop
fsubrs
js
lahf
xor
jl
in
and
or
dec
mov
cmp
inc
dec
in
lock
cmp
xchg
mov
adc
dec
push
nop
xchg
ds
mov
add
pusha
sbbb
cmp
mov
push
mov
mov
xchg
push
xchg
call
daa
and
and
xchg
ret
mov
xor
inc
mov
outsb
xor
and
add
mov
addl
cld
pop
into
cmp
pop
lret
lods
rorb
imul
mov
jae
jle
icebp
adc
pop
xchg
cltd
inc
xchg
sbb
xchg
nop
nop
mov
mov
mov
push
enter
adc
popf
push
xchg
and
int3
nop
or
sbb
popa
jb
jne
ss
js
fcomps
insb
gs
inc
outsb
dec
cwtl
adc
mov
popf
jne
fwait
ds
inc
pop
dec
lods
imul
lods
subl
sub
sbb
push
sbb
and
hlt
cmp
test
gs
in
dec
gs
jnp
and
sahf
sub
inc
lods
adc
pop
stc
movsl
imul
int3
popf
aad
repnz
hlt
gs
adc
fs
dec
pop
push
xlat
ror
loop
jmp
mov
adc
stos
mov
daa
ja
push
in
loopne
test
mov
xchg
out
cmp
push
push
or
aad
lock
xor
xchg
cmp
xchg
and
in
jb
cmp
popf
and
in
jb
cmp
test
xchg
mov
cmp
lea
mov
jno
jb
jae
je
inc
jne
mov
and
jns
jp
jnp
jl
jge
lds
imul
jo
sub
mov
nop
stc
repz
sub
loop
sbb
stc
push
ret
in
icebp
popf
into
cltd
or
punpckhdq
inc
jne
bound
popf
and
scas
mov
jmp
and
xchg
push
or
lea
or
lock
or
rolb
aaa
clc
mov
add
push
adc
push
push
jae
mov
xor
pop
and
test
jne
sub
ficoml
jbe
push
ret
push
cmpb
mov
mov
push
scas
push
jbe
enter
and
or
pop
push
inc
or
inc
and
push
mov
push
sbb
ret
mov
pop
js
loopne
fdivrl
add
add
xchg
add
pop
enter
pop
and
in
jl
xchg
or
bswap
adc
adc
jp
xchg
adc
adc
inc
adc
pop
and
out
jno
sbb
inc
sbb
sbb
sbb
pop
jl
xchg
and
and
inc
and
and
and
daa
jl
xchg
sub
sub
inc
sub
sub
sub
das
jl
xchg
xor
xor
inc
xor
xor
xor
aaa
jl
xchg
cmp
cmp
inc
cmp
cmp
cmp
aas
jge
ds
inc
enter
pop
and
jl
xchg
inc
repnz
ds
dec
enter
pop
and
jl
xchg
dec
repnz
ds
and
push
jl
xchg
push
repnz
ds
push
enter
pop
and
pop
jl
xchg
pop
repnz
ds
pop
enter
pop
and
arpl
xchg
gs
addr16
pop
and
imul
insl
repnz
ds
outsl
xchg
adc
arpl
adc
decl
ret
cld
out
cld
popf
jb
leave
dec
adc
jo
imul
or
lock
outsb
adc
inc
push
push
or
mov
jb
or
jae
popa
mov
pop
popa
lds
or
push
xor
insb
mov
xor
push
xor
jbe
dec
or
out
adc
add
fs
or
adc
punpckhbw
movsl
ja
push
and
js
bound
orb
test
scas
or
cmp
outsl
cmc
sbb
adc
sub
jo
and
or
and
dec
icebp
jae
or
adc
inc
out
lret
repz
push
repz
sbbb
adc
dec
sbb
mov
xor
shrl
jmp
je
pop
outsl
sbb
sub
test
subb
leave
in
out
cli
jecxz
sbb
push
inc
lea
adc
mov
mov
movsl
lods
or
lahf
in
dec
lods
jp
push
push
xorl
adc
mov
cmp
pop
adc
out
inc
push
test
in
mov
xchg
push
or
out
inc
sbb
xor
and
xlat
cmpsb
mov
push
or
mov
orb
xor
sbb
inc
clc
inc
out
cmc
sub
push
mov
loopne
dec
es
cmp
cli
push
fs
push
mov
dec
je
fs
js
lret
sbb
inc
xlat
dec
inc
xlat
test
xchg
pop
sbb
or
lcall
jl
adc
pop
inc
xor
dec
sbb
pop
sbb
push
cmp
push
dec
outsl
js
es
xor
iret
popa
imul
in
bound
gs
dec
and
outsl
neg
sahf
movsl
cli
adc
push
push
push
push
or
xchg
dec
adc
sub
dec
std
test
xchg
mov
inc
frstor
inc
push
cmp
and
test
js
mov
in
cwtl
and
nop
sahf
pop
je
inc
adc
inc
mov
insb
ret
inc
add
pop
loope
add
adc
fisttpl
sbb
cmp
mov
jns
fs
imull
sub
jb
daa
or
inc
fs
and
push
ja
pop
negb
xor
jbe
lods
adcb
ljmp
jae
test
cmpsb
rol
js
or
sbb
and
xchg
movsb
push
and
xchg
cmp
aaa
push
clc
adc
sbb
popf
jge
mov
and
cmpl
inc
push
loope
sub
cld
or
popl
fists
xor
in
push
shlb
mov
test
in
sbb
jl
adcb
hlt
sbb
rclb
push
pop
loopne
cmpb
mov
xchg
xchg
xchg
lock
popf
jge
dec
sub
inc
xor
sahf
jbe
cmp
add
adc
dec
jne
outsb
jae
lock
push
mov
das
test
dec
arpl
jne
xor
add
mov
jmp
mov
arpl
lcall
push
mov
in
and
xchg
pop
out
lods
push
js
push
jle
push
or
or
adc
push
sub
mov
arpl
sahf
fnsave
les
pop
jae
sbb
inc
dec
addr16
mov
jmp
arpl
xchg
jle
ret
push
and
test
dec
leave
xchg
shrb
pusha
and
sub
fnstcw
xchg
inc
add
fcoms
repnz
sub
pop
add
or
dec
mov
call
sbb
lods
sub
sub
insb
push
mov
adc
push
adc
add
xor
pop
pushf
push
and
dec
or
dec
repnz
repz
imul
adc
jmp
testb
xor
mov
outsb
test
jp
lods
outsb
cmp
fidivrl
dec
pushw
loop
adc
ds
insl
imul
lret
decl
adc
ret
sub
dec
lret
stc
rolb
fildl
das
jns
xchg
insb
loope
push
push
out
pop
stos
adc
xchg
cmpsl
dec
xlat
cmp
jne
mov
jmp
sar
dec
shr
pop
jle
insb
jle
hlt
ret
mov
shlb
push
addr16
lea
jg
or
mov
push
inc
mov
dec
sbb
inc
dec
out
mov
jp
in
dec
out
aad
adc
adcl
mov
ljmp
imul
repz
add
into
add
ja
test
out
jo
adc
push
xorl
add
mov
lds
inc
add
pop
out
or
adc
imul
mov
pop
and
dec
adcb
les
testl
xchg
cmp
dec
inc
pop
push
and
dec
mov
inc
lret
shll
in
dec
sbb
and
stc
dec
pop
and
mov
icebp
mov
sub
push
lock
sub
lcall
sub
les
xchg
ja
stos
lds
or
push
adc
arpl
sub
adc
and
in
js
cmp
lretw
icebp
inc
pop
xor
rclb
mov
sbb
inc
outsb
pusha
inc
addr16
mov
push
and
inc
inc
frstor
and
push
adc
and
inc
or
mov
in
jmp
or
push
sub
sub
push
xor
mov
push
enter
loope
inc
xchg
mov
les
jmp
movsb
shr
cmpsb
mov
lahf
shll
inc
imul
sub
mov
dec
sub
mov
adc
xchg
scas
loop
test
imul
lea
lock
dec
insb
clc
pop
les
add
arpl
jnp
in
jp
call
adc
and
push
js
push
daa
inc
insl
cwtl
sub
scas
je
adc
sbb
or
in
sub
call
inc
jo
lock
jne
fcoms
sub
and
int3
or
and
shlb
inc
jae
int3
cmp
rorb
xor
in
or
fldenv
mov
mov
add
jmp
jp
out
insl
push
lea
cmp
add
test
insl
push
push
push
push
addl
dec
add
cmp
nop
dec
gs
or
cli
insl
cmc
iret
sahf
add
lcall
jmp
adc
adc
pop
cmp
push
jle
dec
std
jmp
ficoml
shrb
loope
add
push
aam
jne
push
inc
add
enter
fisubs
insb
jg
mov
pop
popf
dec
or
adc
outsb
dec
into
push
mov
fsubs
add
in
mov
dec
xor
imul
push
and
dec
stos
repz
push
mov
mov
cltd
in
mov
out
xchg
inc
cmp
cltd
mov
add
push
mov
movzwl
cmp
mov
push
and
push
in
mov
xchg
push
push
push
dec
call
or
cmpsl
decb
pusha
mov
and
pop
test
jmp
sub
lret
dec
jl
insl
out
push
ficoml
in
push
push
adc
adc
clc
jne
adc
int
nop
push
push
jp
shrl
dec
inc
or
in
sbb
inc
hlt
mov
adc
push
or
cmp
incl
mov
icebp
and
mov
xchg
or
mov
pop
push
pop
pusha
lods
in
inc
mov
bound
push
ljmp
pop
aas
pop
inc
add
jmp
jmp
stc
mov
pop
les
mov
pop
lea
stos
pop
xor
jmp
fists
or
push
adc
jne
cwtl
ljmp
cli
xor
xor
inc
adc
movsb
push
aad
mov
add
jo
jne
mov
push
lret
out
ljmp
jno
fisttps
cld
shll
sbb
jno
mov
xchg
mov
loop
pop
clc
pop
and
mov
add
adc
addb
cwtl
push
mov
mov
daa
icebp
pop
jno
in
mov
dec
enter
jb
lods
pop
addl
nop
into
mov
push
mov
cld
stos
mov
ja
mov
or
xor
popf
bound
mov
push
jmp
inc
or
xor
loop
enter
mov
xchg
leave
or
or
test
sbbb
test
xchg
pop
hlt
sub
adc
and
and
std
push
in
cld
lcall
sub
adc
fwait
inc
or
sbbb
push
dec
inc
push
movsb
pop
out
dec
jae
or
mov
and
inc
lret
daa
pop
in
cltd
idiv
cmp
sbb
or
dec
cld
adc
dec
std
setns
popa
lock
mov
sbb
ret
mov
pop
cmp
xor
or
ret
into
and
pop
cmp
sub
push
mov
in
test
enter
mov
or
cli
pop
sub
jne
xchg
and
sub
les
out
jns
mov
scas
push
insb
xchg
test
or
sub
daa
les
jne
mov
sbb
push
or
adc
jbe
or
imul
fcoms
out
or
test
push
cmp
jmp
or
xchg
push
inc
cmp
mov
mov
adc
cmp
push
ljmp
or
cs
dec
push
xchg
add
cmpsl
push
add
in
jbe
lods
jnp
xchg
pusha
mov
sub
sub
rol
cli
adc
adc
or
int3
dec
mov
pop
jecxz
push
mov
jmp
inc
jmp
cmpsb
fisttpl
or
push
aam
mov
sub
mov
xor
xchg
jne
and
adc
fcos
dec
bound
sbb
xchg
mov
mov
jnp
cmp
cwtl
push
inc
sar
and
int3
shlb
fisubs
or
fimuls
xlat
push
fstl
dec
out
cmpb
dec
xchg
or
call
fisubl
mov
xor
dec
mov
push
stc
sbb
pop
lret
ret
rcrb
pop
or
jo
test
xchg
js
pushf
pop
xchg
clc
in
push
add
add
cmc
mov
or
ss
jne
xor
adc
gs
mov
lea
test
or
xor
jp
sbb
pop
ret
out
scas
push
inc
cltd
js
mov
xchg
nop
dec
stos
sub
mov
and
dec
mov
mov
mov
mov
xor
pop
hlt
or
test
lock
nop
add
sub
shlb
jns
in
mov
push
pop
mov
push
pop
xor
in
jecxz
stc
jbe
loop
jp
addr16
and
cmp
cmp
rcrl
test
mov
cwtl
fs
jne
cmp
cmpsl
fadds
iret
in
mulb
outsl
adc
jp
call
xchg
pop
ficoml
push
loop
sbb
shll
sbb
data16
lea
testb
inc
jnp
xor
add
jl
scas
cld
sbb
leave
push
add
push
mov
mov
es
jnp
pop
lahf
sub
push
pop
jl
add
cmp
jge
add
jmp
jb
push
or
lods
jo
imul
push
mov
test
ror
mov
pop
lods
stos
jecxz
adc
dec
jne
push
dec
fs
into
mov
jl
add
sub
xor
daa
mov
or
das
movlps
test
mov
fsubl
cwtl
jl
jns
enter
sub
and
adc
mov
push
and
xchg
ss
js
jae
mov
dec
cld
xchg
dec
cli
sbb
jne
xor
pushf
test
or
jo
inc
jge
jl
dec
loop
jge
adc
cmp
push
jne
test
dec
outsl
push
or
pop
push
in
or
push
push
inc
imul
jl
movsl
dec
add
bound
inc
jo
sub
jns
xchg
dec
nop
negb
inc
insb
iret
inc
mov
push
gs
jo
dec
arpl
dec
outsl
jbe
inc
gs
js
jle
mov
pusha
jl
popf
xchg
xor
lds
dec
mov
int3
add
xor
adc
xchg
or
mov
cltd
dec
sub
popa
jb
sub
sarl
ficoms
pusha
push
inc
insb
outsl
bound
sub
and
add
xor
aas
and
inc
movsb
xchg
outsl
int3
sub
xchg
pop
mov
inc
subb
add
add
push
and
pop
fsubrl
mov
sbb
int3
lock
bound
fistps
bound
adc
addl
lods
jne
sub
imul
movsb
lock
and
push
xchg
dec
sbb
cld
mov
pop
pop
call
push
and
repnz
and
into
dec
lahf
jle
push
and
push
push
dec
fnstenv
rolb
cmp
and
jg
push
push
shrl
das
or
push
into
adc
sbb
or
ja
cmpsl
adc
fildl
or
mov
jmp
or
subb
and
xor
pop
adc
and
inc
xlat
push
ret
push
mov
jo
fisttpll
mov
mov
adc
mov
sub
lcall
orb
cmpl
xlat
lock
adc
test
sub
mov
nop
movsb
xor
test
xor
jle
adc
push
cmp
pop
jb
mov
lret
fs
test
sub
popf
jns
stos
sbb
inc
xchg
shl
xor
or
insb
and
and
dec
jge
movsb
or
movl
mov
mov
mov
ret
mov
inc
adc
mov
xchg
pop
and
int3
push
nop
aam
cmpsb
cmpl
ret
inc
call
jae
inc
dec
sub
adc
push
cld
and
push
adcb
push
addb
in
push
int3
xchg
popa
adc
inc
outsl
insl
jo
outsb
jne
cmp
pop
sbb
sub
sub
sbb
mov
test
test
push
test
mov
fldcw
xor
in
add
cld
mov
dec
push
or
test
arpl
inc
jl
xchg
adc
repnz
add
sub
mov
adc
sbb
inc
jl
movsl
adc
jl
xchg
out
lds
jle
sub
sub
mov
push
icebp
decl
pop
push
rcl
loope
xchg
dec
loop
les
sub
stos
jno
pop
mov
push
es
adc
in
xchg
xchg
xor
mov
mov
cmp
call
lock
mov
mov
xchg
push
cmp
xor
push
xor
or
pop
lods
pop
mov
dec
fsubs
jl
push
adc
sub
popf
enter
sbb
dec
xor
dec
push
mov
or
push
icebp
pusha
mov
test
adc
cwtl
test
sbb
incl
xor
adc
dec
faddl
or
pop
dec
stc
add
dec
out
xor
jg
xor
subl
pop
loop
pop
pop
add
inc
cmp
popa
mov
stos
dec
add
cmovo
jmp
fsubr
mov
in
mov
das
fidivrs
pushf
mov
mov
sbb
mov
addl
mov
shlb
inc
sub
imul
adc
adc
push
in
loop
cmpl
frstor
inc
cmp
cld
adc
sbb
inc
xor
negb
testl
mov
cmp
cwtl
xchg
jne
cmp
aaa
and
popa
mov
pop
cmp
push
cmp
ret
and
test
cmp
sbb
adc
sbb
push
das
popf
data16
add
sbb
dec
push
pusha
push
push
pop
inc
lods
adc
or
pop
push
add
pushf
mov
mov
fsubs
gs
fildl
mov
push
shrb
push
adc
shl
jmp
jmp
pop
sbb
jecxz
or
test
jb
xor
add
shlb
inc
and
cmp
std
pop
pop
dec
xchg
pop
adc
lret
cmp
shrb
hlt
out
cltd
insb
jle
cmpsb
mov
mov
cmp
das
adc
sbb
stos
aad
in
inc
cmp
push
out
lock
add
cmp
jge
shl
testb
arpl
xchg
lea
gs
jmp
nop
fidivl
in
xor
hlt
aas
or
lods
aam
pop
mov
fs
xor
cmpsl
pop
sub
mov
xor
jl
inc
or
xor
dec
add
mov
out
push
cld
movsb
jmp
xchg
int
add
mov
mov
call
xchg
ret
int3
mov
dec
jg
xor
outsb
jle
movl
add
xor
push
cmp
adc
sbb
push
cmpsl
lea
xlat
add
lock
not
pop
fdivrp
repz
pushf
xchg
sub
xor
dec
ds
loope
fcmovb
jmp
and
cld
jle
mov
aaa
or
aad
pop
mov
fnstenv
push
jl
enter
adc
mov
push
imul
and
test
dec
adc
and
and
and
add
scas
and
and
cmp
mov
fs
and
lea
pop
mov
mov
js
mov
pop
lock
pop
dec
cmc
lret
rclb
adc
xchg
je
push
push
inc
inc
inc
inc
clc
inc
inc
dec
add
dec
dec
dec
dec
dec
add
push
push
inc
mov
or
popa
bound
data16
imul
outsl
jo
jb
je
jbe
ja
jns
xor
xor
add
sub
movsb
out
push
loopne
lea
loope
test
mov
mov
cmp
mov
add
mov
xchg
mov
xchg
inc
jae
mov
je
sub
xor
mov
or
aad
cmc
inc
je
jb
popa
sbb
or
xor
xchg
mov
jns
or
in
inc
or
push
stc
aad
and
push
outsl
insb
jne
orb
adc
shl
out
mov
subl
dec
or
insl
popa
insb
or
fildl
das
or
mov
push
movsl
cmpb
jns
adc
js
xor
nop
addr16
push
xchg
sbb
and
add
dec
gs
popa
adc
inc
or
mov
jo
adc
lret
inc
xor
and
movsb
or
es
push
arpl
inc
xor
loopne
sub
or
sbbl
stc
enter
js
adc
adc
or
mov
xchg
or
cmpl
inc
xchg
or
int3
imul
add
mov
int
mov
lret
data16
aam
and
clc
adcl
sbb
or
mov
cmp
stos
sbb
or
or
sbb
or
nop
lret
sbb
or
mov
in
pop
ret
dec
icebp
test
xor
loopne
adc
aam
lahf
fsubrs
ss
xor
adc
or
sbb
or
jno
sbb
or
dec
dec
bound
shlb
jb
add
dec
mov
and
mov
js
cmp
aam
popf
adc
mov
adc
adc
pop
xchg
jp
test
pop
int
sub
add
outsb
xor
xor
inc
add
cmp
add
push
mov
mov
sub
leave
cwtl
cmp
inc
jb
popa
addr16
jne
mov
dec
pop
mov
pushf
addr16
push
or
push
aas
lods
or
push
mov
inc
sub
nop
insb
fs
dec
inc
push
inc
stc
jmp
fldenv
mov
je
xor
dec
les
mov
addr16
mov
or
inc
inc
jg
cmp
xor
mov
or
aaa
sbbb
outsl
outsb
je
mov
incl
iret
nop
icebp
mov
dec
adc
mov
stos
mov
sub
mov
adc
xchg
rol
popa
jae
dec
ljmp
sbb
jo
pop
or
or
repz
jns
addl
inc
sbb
aas
pop
or
stc
jne
dec
mov
mov
aaa
cltd
dec
add
or
int3
jnp
sub
push
or
jo
or
jmp
push
inc
xchg
dec
push
adc
test
inc
movsb
int
int3
cli
mov
pop
inc
push
je
fsubl
push
rcl
popl
mov
pushf
and
dec
push
pop
jb
popf
xor
pop
pop
lods
repz
inc
in
or
mov
out
xchg
xchg
je
sbb
sbb
or
scas
jp
cld
and
xchg
fs
pop
test
movsl
das
loopne
push
dec
xchg
in
dec
lods
and
movl
and
add
or
cld
dec
fdivrs
or
subb
push
hlt
fsubl
cld
lock
or
clc
cmpsb
lret
cmp
pushf
or
hlt
jno
dec
call
pop
dec
sbb
jg
mov
jo
mov
jo
inc
jo
xchg
sub
insb
movsb
and
and
cmp
insb
inc
xor
and
mov
int3
popa
lods
mov
add
stc
push
cld
xchg
cmp
dec
rorl
fimull
dec
jb
nop
inc
dec
imul
sub
cmp
xchg
insl
les
aad
jno
pushl
mov
movsl
nop
mov
addb
push
mov
push
cmp
dec
mov
push
dec
or
xor
je
and
or
push
add
popa
jb
in
jge
out
test
push
pop
and
bound
fcoml
inc
es
mov
and
jno
adc
data16
mov
or
lahf
shr
add
je
adc
jmp
inc
mov
adc
sub
and
clc
cwtl
add
int3
sbb
sbb
mov
stos
fnstsw
idiv
cwtl
or
in
adc
inc
push
mov
pop
inc
fisttpl
into
cmp
push
cmpsl
sarl
fs
cmp
xchg
stos
fldcw
mov
fistps
and
dec
jo
mov
ret
into
test
add
cli
pop
jne
inc
push
mov
pop
pop
sbb
lods
ja
enter
sbb
mov
inc
cmp
sbb
daa
rorl
or
mov
push
sbb
ja
fmulp
sbb
push
or
jl
sbb
jne
adc
sub
mov
xor
adc
or
or
les
orb
pop
les
fdivs
test
inc
pop
clc
shlb
jne
std
add
outsb
popa
pop
jmp
pop
and
jle
mov
dec
xor
mov
mulb
repnz
push
fld1
add
jb
pop
jle
fnstsw
mov
insl
mov
inc
movsb
adc
jg
and
faddl
mov
pop
dec
jg
and
jecxz
push
add
push
cs
inc
sub
adc
or
div
push
das
jmp
out
subb
jns
mov
cs
push
jmp
into
imul
leave
aas
push
cwtl
jo
push
sbb
add
test
mov
sbb
ljmp
xchg
mov
cmp
xchg
pusha
add
adc
lods
xchg
pop
inc
cmp
push
movsb
ret
mov
add
and
popf
jbe
pop
pop
loop
ret
insb
jne
pop
je
sub
jb
inc
mov
test
int
lods
dec
lods
cld
cltd
push
adc
incb
mov
nop
cwtl
xchg
mov
pushf
sbb
inc
dec
or
incl
cmp
imul
out
xor
in
movaps
add
xor
sti
add
ja
and
bt
insb
jae
mov
bound
dec
not
shl
cmp
push
jne
jns
adcb
add
pop
aam
jmp
xor
inc
shlb
aad
lahf
popf
shll
in
je
decb
clc
lock
and
mov
inc
push
ljmp
xor
lds
dec
or
movzwl
test
xchg
sbb
sub
mov
subb
sbb
test
daa
test
mov
jp
and
test
mov
nop
or
or
int3
lahf
fnsave
or
es
nop
pop
sub
jmp
lea
push
aam
adc
pop
jecxz
adc
cwtl
rclb
xchg
jo
adcl
dec
push
sbb
stc
movsb
inc
enter
test
in
adc
add
add
inc
jl
dec
movsb
in
cmpsl
loop
stos
cmpsb
arpl
mov
lods
jl
popa
xchg
xor
outsl
aam
lahf
andb
ja
mov
call
and
aas
pop
mov
jg
and
ret
mov
xorl
rolb
scas
popa
push
test
out
test
jp
cli
cltd
pop
push
xchg
int
dec
adc
adc
orl
ret
jmp
dec
jne
sub
sbb
or
lods
inc
pop
dec
loope
xchg
cs
push
call
mov
mov
clc
rcl
inc
cli
mov
scas
jl
movsb
or
push
adc
je
or
and
pop
and
es
iret
aas
cmp
sub
xor
jle
mov
aam
arpl
inc
sub
xor
ds
xor
jmp
shlb
pusha
cmp
test
nop
and
sbb
daa
out
inc
mov
dec
xchg
push
cmpl
adc
push
adc
adc
mov
mov
stc
pop
sbb
xorl
fnsave
jns
lret
popf
push
lods
jp
pop
push
mov
test
cmp
je
fimuls
push
mov
or
and
test
lds
aam
bound
lea
in
mov
jge
xor
mov
adc
movsb
jecxz
pop
jns
sbb
andb
cmc
into
adc
push
pop
loope
scas
insb
xchg
push
mov
push
push
or
inc
and
add
inc
cmpb
ss
std
mov
mov
fadd
mov
repz
call
movsl
dec
hlt
mov
movsb
sub
push
dec
in
mov
mov
lds
arpl
adc
or
dec
call
cmp
daa
and
fsubrs
pop
aad
test
or
dec
sbb
mov
outsl
in
push
dec
dec
sub
mov
enter
sbb
push
jae
jb
in
push
xlat
movsb
xchg
insl
pop
xor
lahf
fisttpl
bound
popf
test
outsl
leave
shrl
loope
cmp
orb
cmp
or
cmp
xchg
mov
or
and
sub
push
adc
or
scas
out
dec
sbb
or
xchg
mov
jmp
mov
jnp
jp
xor
mov
aas
and
jecxz
aad
sbb
in
and
xchg
nop
xchg
xchg
cmpsl
dec
sub
or
cmpsb
divb
mov
loop
add
pop
sub
out
adc
bound
cmp
arpl
mov
adc
out
in
and
divb
add
sbb
jge
or
in
sub
cmc
and
jl
or
mov
and
xchg
imul
roll
lods
pop
and
mul
xchg
mov
dec
test
mov
xor
and
addr16
mov
mov
pop
mov
or
dec
rcrl
and
int3
stc
shlb
pop
lret
cmp
and
xchg
adc
sbb
push
cli
rclb
repz
mov
pop
jmp
sub
push
inc
test
clc
fistpl
jns
lret
jl
andb
data16
into
inc
cmp
inc
fadds
cmp
cmp
mov
xor
out
adc
adc
and
les
sub
test
mov
push
test
and
jecxz
test
test
cmp
sbb
mov
daa
popa
fmull
pop
jno
pop
and
inc
js
and
mov
test
inc
cli
cmp
or
insb
gs
sti
dec
or
stos
cld
andl
shr
scas
imul
xchg
test
push
sbb
sti
sahf
mov
jg
daa
xchg
push
adc
aas
inc
dec
mov
mov
inc
jb
js
adc
inc
outsl
je
or
pop
adc
jne
mov
lcall
xchg
push
std
xor
jle
repnz
pop
sub
mov
sbb
mov
sub
cmp
or
jae
scas
bound
add
sti
into
push
mov
out
push
and
cmpsb
xchg
das
aam
mov
notl
jp
push
hlt
mov
sbb
inc
lock
out
jl
les
call
jo
icebp
fwait
and
out
stos
sti
fistl
or
jl
test
test
and
push
sbbl
fwait
or
inc
adc
push
adc
or
mov
out
test
pushl
mov
dec
mov
test
xor
lods
mov
sbb
pop
pop
sub
jmp
test
pusha
cmpsl
lods
mov
inc
je
push
jge
adc
xchg
adc
and
sbb
movsb
and
sbb
lods
mov
and
scas
and
das
repnz
je
arpl
inc
adc
mov
nop
adc
decl
notl
data16
leave
push
xlat
decb
jae
cmp
sub
push
insl
pushl
mov
jne
jo
adc
sub
jp
in
cmp
jmp
add
xchg
lea
push
mov
and
addl
cld
cwtl
xchg
mov
int3
lea
unpcklps
rcrl
push
and
test
fsts
in
push
xor
sub
negl
xor
mull
cmp
or
xlat
scas
test
sub
adc
shll
cwtl
mov
stc
pop
and
mov
mov
adcl
mov
mov
test
push
pop
clc
les
jne
or
mov
mov
pop
inc
test
or
nop
sbb
add
adc
test
jae
call
push
adc
mov
and
pop
cltd
orl
ljmp
sbb
mov
movl
add
adc
mov
sub
lea
in
dec
or
push
jl
dec
add
in
add
add
jo
or
stos
gs
clc
jmp
sub
shrl
sbb
popa
jp
sub
xchg
sub
jp
iret
jmp
std
or
and
pop
add
push
and
mov
jbe
cli
test
hlt
or
sub
mov
or
addb
test
sbb
loopne
sub
inc
jne
or
jmp
pop
test
outsl
loopne
or
in
push
or
inc
or
in
sbb
jmp
mov
cmpsl
xchg
mov
adc
psubd
mov
mov
inc
popf
pusha
test
push
inc
decb
jmp
rcl
lds
xor
fsubrl
push
sbbl
push
adcl
jne
lods
lea
push
and
or
jne
call
add
aam
inc
mov
pop
cld
outsl
mov
xchg
xor
jo
dec
pop
mov
pop
out
shl
enter
popf
arpl
ret
inc
lods
mov
fs
movsb
hlt
mov
pop
lock
cmp
rcl
lock
xchg
fidivrs
pop
inc
mov
les
aam
and
dec
loop
push
aad
sbb
out
daa
push
and
mov
adc
dec
and
popf
je
repnz
and
inc
sbb
pop
push
push
mov
dec
adc
inc
les
fcompl
cli
je
pop
jo
dec
outsl
imul
sbb
hlt
inc
or
loopne
sub
rcrl
out
and
pop
mov
addl
and
inc
push
cwtl
addr16
nop
xchg
sub
cld
cs
call
stos
stos
mov
xchg
sub
push
cld
enter
cmpb
movsb
or
add
push
push
fiadds
pusha
add
xchg
mov
pop
in
mov
jmp
int3
sub
push
xchg
andl
cmpsl
mov
sti
and
les
and
and
xchg
sbbl
loop
jnp
cs
jbe
jb
xor
jae
cmp
dec
push
enter
mov
ficomps
out
push
lea
jg
mov
adc
lahf
or
inc
jne
inc
push
add
cmp
adc
fcoms
cs
and
loopne
shld
shl
rcrb
mov
inc
cmp
loopne
sbb
sahf
mov
test
and
xor
inc
adc
lock
arpl
mov
sub
and
sub
adc
mov
loope
inc
aam
inc
mov
pop
out
les
push
xor
rclb
xchg
jnp
cmpsl
xchg
pushf
inc
rolb
or
jo
out
movzbl
bound
ret
and
test
add
cmp
je
rolb
pop
ja
pushl
mov
push
push
push
add
jmp
sbb
mov
xorb
jg
out
xchg
push
and
mov
lock
lret
movsl
and
xchg
mov
sbb
xchg
clc
push
shrl
sbb
push
push
xorl
or
or
lds
or
rcr
sub
in
int3
adc
push
sub
ret
test
daa
pop
sbb
rcrl
enter
mov
shll
add
dec
in
mov
mov
sbb
inc
push
shrb
rclb
mov
xchg
xchg
adc
adc
xor
inc
add
pop
fsubrl
enter
icebp
mov
dec
xchg
ljmp
cmp
or
pop
and
outsl
dec
adc
and
fldl
push
fildll
mov
push
mov
mov
jmp
cmpsb
adc
les
adc
daa
fsubs
mov
cs
and
or
xor
adc
pop
sbb
xchg
cli
inc
jecxz
call
inc
pusha
repz
dec
and
pushf
lds
inc
mov
inc
or
inc
add
mov
js
dec
mov
inc
jge
add
or
cld
cmp
add
jmp
pop
in
sub
sub
mov
mov
jne
ficoml
inc
ret
xor
or
cwtl
hlt
pop
mov
adc
bound
shlb
cmpb
pusha
dec
hlt
enter
lret
jle
jl
xchg
mov
nop
subl
mov
add
mov
insl
pop
sub
dec
ror
mov
pop
sbb
pop
pop
out
icebp
movlps
pop
pushf
mov
mov
out
fists
mov
push
inc
push
sbb
scas
pop
fs
jno
adc
xchg
push
sub
jo
lock
add
or
push
push
push
clc
rolb
xor
xchg
mov
and
inc
in
mov
xchg
xlat
stc
dec
pop
or
movb
test
add
mov
xlat
mov
movsl
or
insb
pop
xor
inc
xchg
shrb
int3
jg
andb
je
or
incl
or
jle
or
ja
test
push
pop
xor
lods
in
ret
daa
les
mov
or
sbb
pop
sub
jmp
add
dec
je
cli
icebp
enter
les
inc
in
sbb
sub
dec
push
and
dec
adc
pop
push
pop
cmp
mov
xlat
xchg
or
clc
lea
dec
pop
sub
xor
ret
sbb
or
inc
add
in
pop
stos
mov
cmp
push
add
decl
shlb
or
mov
xchg
or
jge
loope
xchg
mov
enter
sbb
jae
ss
mov
jne
push
into
mov
jmp
int
mov
jbe
loope
pop
push
fcomps
pusha
jb
inc
mov
decb
push
mov
addb
stos
push
mov
jmp
mov
sbb
jns
xchg
xchg
ss
mov
pop
jne
cmpsb
jnp
jne
add
mov
loope
sbb
stc
cmp
mov
sub
pop
inc
das
mov
into
xchg
add
adc
push
popa
inc
jmp
and
or
pusha
leave
or
outsb
jmp
inc
xor
add
push
mov
xorl
jg
push
aas
xor
dec
jno
inc
test
add
rcr
mov
clc
xor
mov
rolb
shl
push
es
inc
inc
mov
in
cs
mov
lret
adc
push
clc
addb
mov
pop
sub
movsb
cmp
mov
pop
mov
sub
xchg
xchg
and
mov
out
orb
cmp
test
mov
cltd
cmp
add
cmpb
add
mov
sub
addr16
or
enter
cmp
cmpb
adc
mov
jecxz
imul
mov
and
mov
push
add
aad
pop
pop
cmpsb
fs
adc
jne
jmp
aaa
test
push
and
and
xchg
loopne
inc
add
sbb
pmulhuw
or
sbb
push
adc
cmp
repnz
xchg
sub
fs
cwtl
or
inc
dec
jmp
pop
add
xchg
outsl
push
and
mov
sbb
pop
sub
sub
and
nop
shl
das
in
nop
test
dec
hlt
rsm
xchg
mov
scas
sub
aas
inc
mov
dec
xchg
insb
cld
and
xchg
and
mov
mov
icebp
test
loopne
ror
inc
into
adcl
pop
push
mov
das
adc
push
lea
mov
xor
and
pop
test
nop
add
inc
lea
or
in
decl
mov
mov
push
or
jne
pop
pop
jge
hlt
popf
ss
xchg
pushf
jg
inc
popf
adc
stos
and
clc
push
mov
call
cwtl
sahf
lahf
test
dec
loope
sbb
cmp
dec
stc
adc
add
add
jge
dec
jns
mov
mov
pop
fcmovne
jp
cmpsl
popa
dec
xlat
inc
add
inc
cs
ret
cmp
mov
fcmovu
adc
mov
add
in
xor
mov
pop
lds
add
das
jo
popf
mov
pop
add
sbb
cmp
ret
sbb
xor
sbb
mov
dec
mov
popa
dec
les
inc
push
lahf
jmp
sbb
add
add
stos
fsts
sbb
pop
push
rcll
in
push
dec
lock
push
sub
inc
add
nop
add
and
lock
fsubl
and
adc
call
or
rcrb
sub
stc
or
and
and
in
adc
and
or
add
jno
movsb
and
sbb
adc
incb
inc
mov
and
cwtl
insb
xchg
cmp
jmp
sbb
repnz
xor
sbb
lods
cmp
icebp
aas
lret
in
and
inc
in
in
bound
jo
movsb
mov
sub
enter
mov
inc
cld
adc
push
sbb
mov
sub
nop
adc
pop
adc
inc
jae
mov
push
or
scas
inc
or
xchg
popf
sbb
and
icebp
scas
xchg
and
sub
mov
lock
push
mov
cmp
aad
add
adc
mov
rcpps
int
jl
mov
pop
mov
mov
inc
addr16
test
rcrb
and
pop
dec
push
adc
out
mov
inc
popf
inc
add
add
jo
popa
inc
lods
test
inc
and
pusha
aas
adc
imul
dec
cs
repnz
mov
cs
and
rorb
xor
dec
stc
pop
rorl
getsec
inc
sahf
sub
mov
add
sub
xchg
imul
or
mov
out
push
jmp
and
outsb
out
inc
bound
rcrb
and
rcl
ss
jo
in
add
popaw
jne
jmp
pop
cmp
adc
xchg
dec
je
test
sbb
clc
and
xor
push
pop
adc
inc
arpl
pop
outsb
mov
sub
mov
outsl
test
dec
dec
sbb
mov
in
jns
bound
fucomp
fs
arpl
jb
test
xor
outsb
inc
gs
xchg
dec
mov
mov
push
lret
or
or
jp
int3
dec
fidivrl
mov
dec
pushf
adc
pop
cmc
add
adc
ret
pop
clc
or
sub
pop
ljmp
sbb
das
dec
inc
xchg
push
and
jns
mov
inc
mov
mov
pop
clc
daa
adc
jg
lret
jo
inc
loop
pop
nop
sub
js
pop
xor
addr16
adc
mov
pushf
shll
mov
inc
and
xor
adc
jle
shll
out
das
mov
push
inc
cld
inc
push
je
cmp
inc
mov
dec
or
hlt
adc
adc
inc
inc
rcrl
or
dec
push
out
sbb
pop
call
insl
in
xor
pushf
xchg
sbb
xlat
xchg
bound
adc
inc
or
dec
movsl
adc
xor
dec
ja
popf
xchg
jno
sub
bnd
sub
enter
or
and
inc
dec
pop
mov
dec
xchg
and
sub
mov
sbb
or
popa
jnp
insl
call
push
mov
repnz
inc
mov
mov
adc
insb
pop
inc
fbstp
jl
push
jbe
pop
dec
je
sub
cmp
mov
push
mov
adc
and
sub
rorb
and
pusha
xor
jne
push
popf
adcb
das
add
pushf
shlb
mov
sahf
clc
xlat
pop
adc
aam
test
adc
cmp
bswap
mov
inc
or
dec
mov
sbb
stos
xchg
jmp
incb
cmpl
cltd
addr16
sbb
js
or
pop
jp
aad
inc
adc
pushl
pop
lea
sbb
pop
rclb
stc
or
clc
aam
mov
xor
inc
sbb
xchg
mov
inc
adc
hlt
aaa
jmp
push
sbb
pop
or
push
lock
roll
pop
and
sbbb
jae
add
cmp
jne
cmp
xchg
daa
test
out
clc
or
or
mov
add
inc
cltd
dec
int3
stos
out
aad
pushf
mov
fsts
sbb
cmp
je
lock
mov
outsl
ss
mov
dec
mov
stos
sahf
addb
ss
sub
add
or
mov
and
mov
mov
push
or
dec
sarb
push
popa
popf
sbb
or
pop
cld
xlat
stos
push
sbb
mov
vmread
mov
or
inc
jno
inc
add
dec
ds
cmp
dec
pusha
pushf
inc
lahf
adc
inc
or
push
clc
or
push
enter
rclb
es
sbb
sbbb
or
mov
pop
inc
dec
sar
jns
adc
and
ljmp
fmull
in
mov
inc
jp
and
add
popf
cmc
nop
inc
push
hlt
adc
ret
pushf
leave
push
dec
adc
pop
adc
mov
movq
sub
pusha
xor
or
adc
pop
and
mov
nop
aam
aam
dec
test
mov
inc
add
mov
inc
iret
cmpsb
fdivr
push
movsb
sbbb
push
pushf
adc
or
pop
mov
and
cltd
and
test
cltd
xchg
cmp
xchg
aam
jns
sub
pop
or
hlt
in
and
fs
pop
xlat
js
jae
xchg
les
out
loope
enter
insb
jle
mov
shlb
mov
insb
cwtl
popa
xor
mov
adc
pop
enter
in
jo
mov
and
cwtl
ficoms
sti
daa
sbb
sub
movsb
lds
cmp
popf
inc
pop
shl
inc
in
jae
into
mov
call
and
and
mov
jp
or
minps
xchg
push
xchg
fisubs
xchg
fcomps
cmp
jge
push
adc
shr
inc
test
and
push
fmull
pop
cmp
testb
jge
rcrl
add
nop
sbb
fdivrl
xor
or
add
add
push
mov
mov
push
lahf
and
or
enter
push
shlb
and
pop
cmp
or
sub
xchg
xor
jne
dec
or
cmp
subl
fistpll
adc
adc
dec
ret
clc
es
cmpsl
loope
mov
mov
std
imul
jne
adcb
or
add
pop
jecxz
or
push
loop
sbb
orb
cmp
bound
hlt
subb
test
sub
gs
jnp
sub
xchg
cmp
test
adc
dec
movsb
and
bound
or
xchg
jg
cltd
add
mov
push
jno
xor
ds
lock
shll
mov
adc
xorl
jp
cvtps2pi
or
insb
and
or
mov
aaa
adc
xor
mov
in
int3
pop
cmp
adc
inc
xchg
mov
dec
insl
mov
arpl
out
das
bound
insb
cmpsl
xor
xchg
clc
mov
inc
dec
iret
xchg
mov
into
pop
push
xor
pop
add
or
mov
add
sbb
inc
mov
pop
add
mov
inc
hlt
add
sbb
mov
fs
in
dec
pop
inc
leave
lret
mov
adc
xchg
sbb
push
test
nop
pop
mov
daa
mov
dec
xor
cmp
xor
enter
or
push
and
les
leave
pop
sar
dec
andl
dec
dec
ds
mov
sbb
inc
cwtl
xchg
lods
or
inc
addb
fmull
sbb
xor
mov
icebp
mul
xor
or
adc
sbb
cwtl
push
inc
test
cmp
and
mov
jae
fs
xchg
sub
sahf
fsubs
scas
xor
repz
sub
frstor
gs
mov
xor
inc
xor
cmp
cmp
jecxz
inc
les
dec
xor
dec
mov
es
xchg
rcrb
mov
movsb
insb
rorb
mov
and
mov
sbb
ds
in
test
and
shlb
add
cltd
pop
pop
xor
sbb
mov
cmpsl
jge
fmuls
cwtl
lods
push
xchg
adc
lock
adc
adc
mov
or
ja
xor
xchg
mov
cltd
sysenter
sbb
out
lret
xor
mov
loop
and
mov
fisubrl
mov
mov
inc
enter
xchg
pop
rcr
add
dec
stos
sub
jo
xchg
sub
and
bound
mov
inc
cwtl
data16
cmp
sbb
adc
adc
mov
add
sub
inc
or
add
ss
gs
cld
nop
mov
test
and
lcall
add
or
xor
aam
or
sbb
sbb
or
fs
jg
cs
rcll
clc
xor
dec
jns
in
and
mov
das
cli
cltd
subl
inc
imul
shll
sbb
pop
adc
sbb
lods
sbb
popa
call
mov
cltd
push
movhlps
lret
adc
cld
ret
pusha
insb
push
popa
mov
push
push
mov
push
inc
popa
jbe
push
imul
lahf
das
mov
fs
push
adc
cwtl
jno
or
sbb
or
mov
nop
inc
or
shrl
push
insl
push
or
les
fsubr
dec
adc
mov
push
mov
xor
nop
dec
aad
and
adc
ret
adc
out
mov
xor
jae
adc
mov
add
lea
push
xor
imul
pop
push
adc
add
dec
scas
jle
and
jmp
jno
push
pop
sub
sub
sub
push
add
push
movsb
mov
or
jg
and
jecxz
xor
or
jg
push
adc
pop
sbb
and
out
sub
mov
lods
pop
mov
inc
push
xor
xlat
add
or
dec
push
sbb
cltd
mov
adc
sub
test
int
and
adc
adc
adc
or
pop
sbb
or
cmp
adc
fwait
sbb
jns
or
push
push
nop
aam
inc
mov
dec
fsubs
sbb
mov
sub
sbbl
sub
push
push
push
scas
fisubrs
inc
inc
and
nop
xchg
je
rcrb
jl
ror
and
sub
adc
push
sti
les
sub
sbb
movsb
out
leave
rorl
stos
push
cmp
xor
nop
pushf
sub
and
fdivrs
testl
adc
mov
stos
sub
mov
mov
test
cmp
mov
into
in
dec
test
inc
aam
inc
mov
xchg
insl
imul
add
mov
lods
pop
mov
or
jo
arpl
push
scas
or
add
int3
daa
mov
pop
addr16
xchg
fidivrl
xchg
andps
sti
into
pop
iret
or
inc
and
xlat
sub
adc
pop
inc
cwtl
dec
stos
adc
xor
in
orb
mov
adc
pusha
mov
sbb
xor
je
mov
adc
cmp
and
data16
in
test
cmpsl
pusha
inc
jb
jge
jbe
xor
or
mov
es
add
in
sbb
rcrb
mov
cltd
xor
loop
inc
or
dec
pop
iret
inc
inc
fsubrl
push
sbb
pop
and
cs
mov
popa
dec
push
inc
or
clc
or
or
mov
xchg
dec
popa
jl
push
sbb
adc
push
arpl
insb
cld
arpl
sarb
adc
or
cmp
push
clc
or
bound
sbb
cmpsl
test
mov
or
and
les
add
int3
sbb
cmp
push
push
ds
and
or
mov
mov
jb
je
jbe
js
jp
dec
mov
adc
or
xor
or
mov
pop
pop
adc
mov
ja
push
mov
faddl
lcall
and
inc
sti
adc
xor
leave
push
movsb
sbb
stos
sti
push
sti
idivb
int3
jno
sti
orb
mov
sub
jno
popf
xor
outsb
out
arpl
and
es
mov
jecxz
fistpll
adc
xor
lcall
je
roll
adc
enter
enter
out
das
mov
scas
adc
test
loope
jg
call
add
add
mov
xchg
jle
sarb
cmp
pop
arpl
adc
loopne
add
add
js
and
nop
sbb
jl
cmpl
cwtl
push
or
inc
ja
dec
pop
dec
daa
dec
mov
xchg
mov
movsb
or
and
enter
xchg
es
mov
xchg
xchg
pop
dec
in
bound
pop
xchg
lods
cs
and
loopne
rolb
cmpsl
pop
push
inc
push
pushf
insl
xchg
ret
pop
mov
test
mov
inc
insb
loopne
sahf
aam
icebp
xor
mov
jne
out
mov
test
adc
sbb
jmp
loope,pt
xchg
test
add
dec
das
in
cmp
dec
sbb
sbb
add
dec
push
arpl
popf
inc
popa
test
inc
pushf
or
nop
or
mov
mov
or
inc
icebp
adc
pushl
jb
jmp
add
push
or
sub
xor
pop
lods
rcll
sbb
sub
adc
sub
sbb
lret
adc
adc
sbb
popa
call
clc
gs
rclb
in
pop
lcall
mov
mov
adc
lods
les
cld
pop
js
loopne
xchg
stc
rorb
lods
repnz
fwait
jmp
call
sub
cwtl
xchg
aas
pushf
push
sbb
or
push
push
push
add
fs
lock
mov
jp
sbb
outsb
mov
push
ja
adc
sbb
sbb
loope
loope
add
inc
loopne
inc
adc
sbb
rol
xor
push
je
jbe
popf
pop
xor
sbb
or
sub
hlt
stc
sbb
insl
cld
jne
jge
xchg
and
or
aam
xchg
lock
test
adc
push
xor
insb
push
and
and
fsts
push
nop
aam
push
xor
inc
out
frstor
and
popf
push
adc
and
add
adc
js
in
add
jb
fs
outsb
gs
rorb
mov
gs
aas
fidivs
sub
mov
test
jl
xor
sahf
lahf
inc
call
add
arpl
dec
jo
sbb
xchg
push
and
icebp
movsb
popf
add
clc
in
inc
hlt
xchg
ds
out
fcmovbe
inc
es
int3
pop
xchg
sub
fstpl
adc
test
and
aad
lods
loop
icebp
aad
mov
inc
enter
sub
or
imul
shlb
sub
aas
mov
xor
es
or
and
mov
mov
inc
push
jb
and
cs
repz
je
sub
decl
stc
push
xor
pop
icebp
aad
xchg
push
loope
xor
lea
je
nop
xor
or
xor
gs
fists
pop
scas
sub
adc
enter
inc
into
or
sti
inc
xor
xlat
dec
xchg
stc
aaa
inc
dec
ret
test
inc
xchg
xchg
mov
ds
cmp
or
mov
pushf
cmp
or
push
jo
lret
stc
rolb
push
popf
jno
jns
or
scas
jle
cmp
and
loop
add
fs
iret
rcrb
adc
popf
xchg
int3
or
jns
stc
inc
or
inc
adc
mov
pop
add
out
dec
or
and
mov
inc
adc
dec
jns
mov
mov
daa
push
push
xorb
call
and
test
pop
mov
adc
es
jno
cmc
mov
mov
cmp
push
popf
and
dec
add
mov
mov
push
sbb
jmp
pushf
xor
and
and
fucomip
pusha
arpl
dec
inc
rcrl
mov
and
xchg
stos
les
mov
cmpsb
fmul
or
or
dec
xchg
cli
inc
js
movsl
mov
sbb
out
sub
mov
adc
and
inc
stos
mov
enter
aam
adc
adc
rclb
jne
pushf
nop
inc
jo
xchg
adc
neg
mov
daa
push
xchg
nop
dec
adc
adc
fs
mov
popa
mov
push
sbb
pop
shll
in
mov
ret
bnd
aam
clc
leave
inc
push
ret
push
sbb
or
data16
test
lahf
inc
mov
lods
add
cmp
push
fcoms
jmp
add
aam
xorl
loop
out
outsl
js
inc
out
adc
sub
push
les
push
lcall
push
sbb
sub
mov
dec
xor
stc
xchg
sarl
js
sbb
sti
fldl
and
or
cli
mov
inc
lods
inc
pusha
push
sbb
shll
dec
jle
inc
popa
jo
xchg
test
dec
js
fstps
rcll
pop
push
outsl
xlat
sub
daa
dec
orb
pop
or
ljmp
pushf
and
sbb
xor
push
xor
xlat
shrb
shlb
and
imul
lret
xor
and
pop
pop
rcrl
insl
gs
les
xlat
or
shll
dec
dec
jecxz
nop
sub
hlt
inc
mov
sbb
sbb
test
pop
call
and
xlat
xchg
es
arpl
in
dec
sbbl
cs
push
popf
dec
into
push
out
or
punpcklbw
sub
xor
sub
and
inc
lret
lods
lock
mov
pop
push
xchg
ds
sub
mov
loop
lods
mov
inc
push
dec
sub
aam
das
push
das
sbb
imul
xchg
sub
mov
repnz
fwait
mov
cs
xor
fs
dec
jle
das
mov
add
js
cmp
cwtl
pop
or
or
dec
in
sub
xor
int3
nop
xor
shl
xor
ss
cmp
xor
stc
cmp
mov
sbb
dec
call
adc
orl
inc
enter
inc
xchg
repz
repnz
push
xchg
pop
nop
inc
stos
and
or
inc
sub
inc
pop
adc
fcoml
dec
test
clc
test
cld
inc
lea
adc
xchg
aam
in
add
clc
not
int3
imulb
test
jb
push
out
xchg
std
dec
mov
icebp
sbb
fsubrs
pop
inc
insb
lods
add
pop
lods
pop
mov
not
sbb
pop
in
popf
je
mov
jno
mov
or
cmp
repnz
cld
test
or
push
and
push
jb
inc
cltd
or
mov
and
lods
sbb
jne
push
outsl
addr16
mov
fists
jno
push
jbe
gs
inc
mov
dec
int3
incl
dec
das
pop
dec
push
push
push
xchg
bound
das
mov
sahf
add
pop
jmp
push
xchg
xorb
aaa
mov
cli
into
call
mov
lret
push
add
mov
pop
out
jo
push
fcompl
dec
pop
xchg
inc
es
sub
call
dec
es
push
je
les
pop
mov
test
adc
mov
jecxz
daa
push
inc
movsb
inc
mov
pop
jae
insl
int
dec
shlb
icebp
mov
dec
mov
cwtl
dec
xchg
sub
cltd
inc
jmp
lret
pop
shll
inc
sub
cmp
cmove
and
imul
jmp
pop
cs
insl
out
insb
pop
movsl
insb
xor
mov
inc
mov
fs
xchg
das
mov
divl
pop
pop
adc
dec
xlat
mov
ret
test
push
jp
in
inc
lahf
xor
dec
push
clc
decl
inc
lret
fists
lds
outsl
jae
jmp
push
shll
in
adc
js
sbb
push
xor
lret
and
addr16
mov
push
xrelease
mov
lret
xchg
leave
sbb
nop
les
xlat
inc
mov
shll
jae
loopne
std
sahf
mov
adc
cmp
adc
ja
jp
popa
jbe
xchg
mov
dec
sbb
dec
inc
and
pushf
adc
mov
cwtl
lcall
stos
and
sub
add
popf
or
and
jb
out
push
pop
sub
sbb
mov
sub
ret
hlt
mov
and
pushf
mov
pop
and
mov
jo
test
add
jb
cmp
mov
cmp
test
nop
mov
or
sub
sbb
mov
sahf
jmp
sahf
dec
lds
sahf
leave
addr16
imul
gs
les
and
or
scas
pop
lcall
scas
dec
das
add
and
cs
jmp
mov
or
mov
cs
sti
dec
das
and
dec
das
test
js
pop
mov
mov
cmp
les
and
sarb
pop
adcb
fcmovnb
xchg
lret
sahf
enter
sbb
mov
aas
in
bound
or
fs
dec
jo
add
sub
call
inc
lock
mov
mov
je
cmp
push
out
popf
stc
aas
bnd
stos
addl
push
and
and
out
lock
mov
jge
ret
jecxz
pop
mov
adc
jmp
jmp
lret
repz
movl
xor
jmp
push
inc
sbb
mov
add
mov
dec
fldl
lahf
test
jne
mov
aad
jo
xor
or
mov
cmc
pusha
mov
into
xor
mov
jmp
in
call
xchg
lds
add
pushf
adc
and
xchg
out
or
shll
mov
xchg
lret
jecxz
repnz
xor
std
mov
pop
mov
and
push
adc
inc
and
jb
xchg
jmp
push
or
lock
jg
mov
es
push
push
call
inc
dec
clc
ss
and
lret
push
sbb
add
pusha
adc
xor
sub
push
jbe
or
dec
add
jl
inc
xor
repz
inc
dec
inc
data16
mov
pop
pop
mov
fwait
int3
aam
cmpsl
hlt
mov
hlt
mov
mov
adc
jnp
je
jmp
punpcklwd
mov
out
jge
cld
aad
jbe
jb
push
and
or
mov
pop
stos
and
mov
xchg
mov
fmull
xchg
pop
ds
mov
fdivrl
and
cmp
dec
cld
push
xchg
mov
or
add
lock
jl
test
xchg
clc
insb
test
movsb
adc
adc
xchg
clc
dec
sbb
push
sbb
or
push
insb
push
push
pop
mov
out
cmpsb
sub
shll
adc
dec
xor
push
fcoms
les
mov
mov
mov
das
into
add
insl
add
add
pusha
call
and
cmc
les
add
in
stc
push
sbbl
xchg
mov
and
inc
mov
mov
ja
dec
scas
dec
ret
fucomi
push
inc
push
push
hlt
lahf
aam
ret
push
loopne
add
mov
add
adc
push
and
adc
out
dec
or
fldenv
or
sbb
iret
les
outsb
xchg
fsts
push
stc
loop
loop
adc
xchg
xchg
cwtl
sbb
je
popf
jmp
mov
or
adcl
sahf
add
add
jmp
adc
xchg
mov
pop
loopne
xchg
adc
mov
adc
jns
sbb
xchg
or
nop
in
and
insl
sbb
testb
xchg
push
fstl
push
pop
jg
mull
mov
std
jbe
pop
les
adc
gs
mov
mov
xor
fidivl
dec
add
sti
mov
je
outsl
into
aas
pop
jmp
inc
add
fsubl
inc
mov
subb
icebp
cmpsl
adc
cmpsl
enter
leave
push
mov
cltd
lret
cmp
add
xchg
jle
stc
xor
out
lea
mov
imul
add
adc
test
out
ret
jo
sub
loope
xor
push
mov
popf
mov
dec
fadd
iret
pusha
push
inc
push
mov
adc
nop
jmp
cmc
str
push
sub
sub
xchg
sbb
sbb
mov
ret
xlat
insb
int
cmp
jmp
sarl
jle
adc
aas
xor
push
mov
mov
cwtl
test
mov
cltd
pop
test
lea
fsubs
popa
rcrb
rcl
adc
cmp
aas
pop
jne
inc
leave
pop
in
lods
jge
fsubp
cli
xchg
sbb
add
rolb
jne
das
jl
inc
sbb
push
sbb
or
cmpsb
dec
mov
push
mov
dec
jg
adc
mov
movsb
nop
pop
push
aas
sbb
jns
adc
push
shlb
in
mul
lea
adc
rcr
push
and
dec
call
jnp
push
mov
and
testb
add
clc
sbb
adc
or
fists
pop
xor
enter
or
sub
mov
lea
dec
push
test
adc
mulb
clc
push
aad
sahf
das
mov
or
sbb
mov
mov
pop
and
jmp
scas
test
call
daa
push
adc
cmp
nop
xor
mov
push
out
xchg
fcmove
call
insb
dec
daa
mov
ret
decl
push
aas
xchg
shlb
aas
negl
inc
dec
mov
mov
pop
pop
xchg
out
mov
xchg
jne
dec
push
mov
stos
mov
je
xchg
loopne
lcall
outsl
test
cwtl
sbb
jmp
add
and
push
addb
fs
andb
jne
bound
push
inc
sbb
shrb
shrb
add
adc
outsl
cmc
push
stos
lods
mov
xchg
rcll
dec
adc
fdivl
test
lret
scas
adc
jb
fcomps
out
mov
mov
repz
cmp
jmp
mov
and
jo
imul
aam
repz
es
dec
fsubs
fsub
inc
loopne
test
push
jae
shrb
jb
cmc
outsl
imul
jle
mov
into
dec
mov
subb
cmp
mov
mov
cld
mov
dec
pop
fisubrs
xchg
adc
inc
sbb
lods
push
lods
pop
sub
adc
jb
and
cmpsl
push
push
dec
aad
pop
addr16
mov
inc
or
inc
hlt
cmp
daa
pop
pop
push
fadds
adc
and
arpl
arpl
sahf
sbb
jne
loope
mov
cmpl
jl
addb
ret
pop
adc
inc
movsl
sbb
int
hlt
cs
mov
adc
movsb
sub
shl
mov
test
or
pop
lret
or
jmp
push
jae
inc
clc
mov
xor
lret
daa
jle
pop
test
jae
and
call
fdivrp
push
stc
inc
rcl
push
sbb
mov
xchg
adc
mov
int3
xor
aad
hlt
mov
and
cmp
enter
arpl
gs
xchg
cmp
and
in
push
push
test
cmp
fcompl
dec
or
test
dec
rolb
shl
and
dec
xchg
es
and
rcll
inc
push
mov
imul
add
or
out
popf
scas
jg
rol
dec
in
xchg
inc
stos
test
mov
xchg
push
imul
je
out
push
pop
fistl
and
cmpsb
or
cmc
sbb
repz
icebp
and
loop,pt
xchg
ljmp
ds
mov
mov
jae
adc
sub
xor
lahf
xchg
shlb
sub
adc
mov
call
mov
js
add
sub
inc
push
rclb
adc
andb
mov
or
mov
and
xor
adc
notb
sbb
xchg
jmp
daa
stos
stc
jns
lahf
and
pop
dec
dec
sub
sub
and
das
mov
jg
popa
jae
movsb
orb
orl
je
pop
jae
pop
sbb
ljmp
in
xchg
aaa
push
or
ss
push
cmpb
gs
xor
mov
movsb
das
sub
add
sbb
adc
decb
movsl
or
jg
inc
mov
push
xchg
inc
dec
scas
les
cld
ret
adc
mov
cmpsl
and
and
adc
add
add
jnp
xchg
mov
in
xchg
stos
pop
cs
inc
sub
clc
inc
adc
orl
mov
pushf
js
xchg
jmp
or
pop
iret
dec
sbb
push
push
pop
hlt
xor
das
sub
bound
dec
mov
out
jne
xlat
mov
adc
push
lods
jne
cmp
cli
pop
pop
in
pop
fdivs
js
inc
sbb
repz
or
fucomip
in
clc
popa
dec
xchg
sarl
repz
xchg
lret
aad
inc
adc
daa
inc
push
pop
pushf
jl
pop
adc
fldt
jne
test
ljmp
movsl
fs
xchg
and
jbe
mov
push
imul
fstl
adc
sahf
int3
inc
mov
sub
inc
ret
test
mov
dec
cltd
or
neg
add
push
lret
or
or
bound
nop
xchg
orb
jl
out
sub
sbb
pop
xor
movsl
mov
lock
xchg
ficompl
cmp
inc
push
adc
dec
sbb
jo
fldl
jmp
sub
xor
fstl
insb
mov
or
shrb
jbe
pop
mov
mov
inc
sbb
dec
je
and
push
inc
inc
pop
sub
mov
mov
or
pushf
pusha
inc
add
in
xchg
push
in
mov
in
and
mov
cmp
sub
pusha
lahf
sbbb
sbb
fwait
test
adc
sbb
sbb
xchg
sbb
nop
push
pop
ficoml
jle
inc
icebp
lock
jno
test
jne
add
push
push
push
xchg
clc
cmpsb
sbb
xchg
push
xor
xchg
push
sub
pop
adc
mov
std
arpl
std
ficoml
sti
fsubs
ret
lds
mov
pop
sub
dec
fists
dec
xlat
call
lock
mov
xchg
sub
add
or
mov
fidivrs
aad
or
or
test
dec
cmp
dec
push
push
push
add
sub
xor
pusha
rorl
cmpsb
inc
lock
sbb
lock
adc
sets
outsb
mov
or
or
jle
push
dec
sub
inc
and
adc
popf
xchg
inc
and
jl
jns
fs
push
pushf
cli
mov
fsts
ret
adc
mov
gs
or
out
sub
dec
adc
cmp
lods
gs
cmp
in
or
jno
lret
pop
inc
loop
pop
adc
ds
xor
das
push
sete
jnp
test
fs
adc
scas
add
lock
movsl
ret
jmp
jbe
adc
add
cli
js
jnp
jecxz
mov
push
icebp
xor
sbb
stc
cmpb
and
push
nop
ret
mov
adc
out
int
cmp
cwtl
xchg
test
and
loop
push
cmc
sbb
inc
pushf
jnp
aaa
xor
jae
pop
xchg
push
enter
mov
xchg
mov
scas
mov
and
dec
xor
mov
push
dec
inc
add
and
outsl
push
xchg
mov
jno
jg
inc
test
xchg
stc
lods
sahf
push
sub
insl
stos
jg
adc
or
or
add
or
pop
inc
mov
es
loopne
xchg
sbb
pop
jmp
int
popf
push
cltd
dec
mov
sub
ja
or
out
xchg
scas
popf
adc
cmpsl
in
cwtl
scas
in
mov
movsl
fs
push
mov
cmp
aam
push
rcl
lcall
xor
jle
xchg
movswl
leave
inc
cwtl
xor
or
push
dec
sarb
or
inc
or
rol
jge
pusha
aam
outsb
wrmsr
not
mov
mov
mov
and
sbb
jb
jecxz
mov
fidivl
das
add
ret
cmp
xor
sbb
enter
test
or
test
or
test
or
test
xchg
lock
notl
loopne
jns
mov
ror
and
push
xor
and
add
sbb
fisttpll
add
push
xor
out
dec
xor
xor
mov
mov
outsl
sti
mov
repnz
pop
int
jmp
cmp
and
lods
mov
jns
cmpsb
pop
xlat
in
mov
push
outsb
jb
outsl
lods
mov
loop
in
lahf
mov
push
movsl
push
push
pusha
dec
lock
jge
ss
jne
lea
xchg
push
pop
pop
push
stc
movsb
push
xchg
je
sbb
push
adc
push
test
inc
repz
xchg
enter
cli
dec
jmp
dec
jmp
fisubrl
mov
cmp
lahf
mov
js
sbbl
adc
push
fbld
jp
xlat
push
adc
mov
fcoms
push
push
adc
jg
dec
in
test
adc
je
mov
add
sbb
dec
xchg
pop
aaa
decl
add
ja
inc
sbb
fwait
pusha
dec
into
push
push
add
mov
sub
lcall
inc
inc
popf
push
je
icebp
cmpsb
cmp
les
out
lret
jnp
pop
sub
mov
fmuls
dec
xchg
push
pusha
cld
mov
inc
pop
push
cmpb
jmp
mul
mov
cld
inc
mov
mov
out
adc
js
inc
frstor
and
sbb
lahf
fldl
stos
hlt
lcall
cmp
dec
push
in
mov
arpl
xchg
ret
fnstsw
jp
in
stc
sub
fld
iret
inc
inc
test
or
pop
fsub
push
ljmp
daa
inc
push
jnp
jecxz
popaw
bound
jo
mov
xchg
xchg
push
inc
pop
fsubr
xchg
cmp
adc
pop
stc
pop
bound
pop
cmp
adc
adc
or
int3
lea
andl
mov
lret
jg
insb
inc
sbb
add
sub
sub
xchg
inc
dec
fiaddl
push
jb
or
mov
adc
and
inc
jle
lods
es
or
inc
shrb
cld
mov
mov
push
mov
dec
xchg
pop
test
lret
mov
dec
fcoml
and
or
adc
std
jb
test
outsb
xor
add
faddl
and
mov
subb
or
jecxz
rorb
outsl
sub
xchg
mov
cmp
dec
xor
adc
movsb
mov
ds
inc
xor
loop
inc
push
add
int3
xchg
inc
dec
jne
dec
push
and
lret
pop
jbe
jecxz
fs
shr
test
imull
hlt
aaa
es
pusha
sbb
cmpl
or
inc
push
adc
cmpb
adc
add
dec
pusha
adc
adc
or
hlt
pop
dec
enter
or
or
mov
std
or
in
pop
fsubrl
icebp
and
or
test
repz
xchg
push
sahf
or
sahf
jge
push
dec
and
jnp
xchg
pop
xchg
leave
pop
sahf
test
aad
dec
imul
mov
in
or
dec
pop
inc
adc
and
adc
mov
and
cmp
pop
gs
lcall
mov
stc
sub
fsub
mov
cmpsb
sbb
pushf
mov
jne
add
sub
mov
lock
or
push
jecxz
nop
clc
ret
xchg
push
mov
or
dec
and
sbb
sub
subb
mov
jo
push
xchg
jne
das
outsb
sub
dec
adc
and
lcall
cmc
push
cmpsb
test
mov
xchg
dec
sbb
sub
ret
sub
cmpsl
incb
cmc
jns
pop
sahf
pop
mov
sub
lock
add
inc
pop
xchg
add
xchg
push
cld
pop
sbb
aaa
or
mov
pop
sub
or
lahf
test
mov
jno
cs
xor
or
data16
leave
push
in
ret
outsl
adc
xchg
fs
xchg
ret
jnp
je,pn
test
test
inc
or
int3
cli
cmc
dec
and
cmpb
sbbl
or
shlb
xor
xor
sub
and
or
adc
add
and
xchg
cmpl
sub
mov
les
bound
push
addb
xor
and
xchg
or
repz
dec
xchg
push
pop
les
mov
loop
cmp
inc
in
jmp
dec
and
push
cmp
scas
inc
ljmp
rolb
add
xor
bound
adcb
dec
cld
push
leave
clc
cltd
inc
adc
lret
adc
dec
ja
pop
in
adc
jmp
jmp
xor
roll
and
xchg
xchg
adc
clc
or
fisttps
push
mov
cwtl
dec
sbb
inc
je
incl
mov
cmp
fcmovb
and
das
mov
aam
mov
ljmp
xor
adc
idivb
mov
adc
xchg
push
jno
push
xor
sub
testb
add
test
ja
jecxz
mov
add
bound
test
inc
add
sbbb
jp
jmp
ss
bound
in
or
cmp
dec
adc
iret
pop
lahf
sbb
movb
adc
xor
or
sbb
jp
inc
or
sbb
push
mov
push
push
push
and
dec
cmp
lock
xor
and
push
lret
push
mov
fnsave
xor
mov
popf
mov
jae
xor
roll
test
repz
fisubs
adc
or
pop
clc
ret
jbe
xchg
mov
lahf
or
pop
inc
pop
dec
mov
adc
xchg
lahf
out
add
fsubl
or
fs
pop
call
dec
cmp
fs
call
lret
daa
aaa
mov
fdivrl
out
bound
nop
pop
movsb
push
and
shlb
push
xor
mov
xchg
jne
mull
sub
push
sub
fimuls
sub
xchg
mov
in
iret
jne
lcall
push
in
push
adc
movsl
and
sub
jno
fsubl
daa
out
and
out
pop
push
mov
adc
lahf
loopne
cld
hlt
xlat
xchg
aam
inc
push
add
fimuls
je
and
mov
into
push
ljmp
sbb
das
clc
cwtl
ss
sub
test
adc
and
push
fldz
movsb
jns
mov
fdivl
clc
adc
aam
mov
pop
gs
cmpsb
notl
dec
lock
or
jbe
lcall
xlat
les
loop
adc
adc
xchg
mov
xchg
mov
cmc
adc
jne
lea
xchg
xor
je
popa
andl
or
mov
gs
and
and
cltd
insl
mov
shrb
movsl
xlat
outsb
shlb
and
xor
xchg
fs
les
push
filds
jg
push
jne
test
jmp
test
fs
cmp
lock
insl
bound
xor
pushf
scas
dec
xchg
fcoml
jns
xchg
adc
gs
outsl
pop
xchg
jbe
push
push
fdiv
push
pop
cmp
mov
insb
pop
cmpl
cmpsb
inc
add
call
mov
cmp
lods
lcall
push
pop
push
adc
sbb
daa
inc
sti
dec
adc
adc
sbb
and
dec
int
fidivrl
pop
push
inc
lret
xchg
inc
push
nop
idivl
popa
sbb
repz
call
lods
fstps
pop
adc
cmp
add
pop
or
sbb
xor
rcrl
movsb
or
pop
inc
sub
popa
mov
sub
xlat
insb
pusha
mov
hlt
pop
xlat
pop
push
lea
pushf
movl
pop
ret
cmp
add
push
inc
test
xchg
in
sahf
arpl
pop
leave
xchg
or
xor
pop
and
mov
mov
xor
into
mov
mov
cmpl
sub
arpl
xchg
repnz
or
sub
in
pushf
movsl
mov
das
repnz
inc
jb
dec
les
jnp
ds
xor
into
int3
loop
enter
or
pop
lret
pop
jns
imul
sub
mov
push
mov
icebp
ret
or
pusha
and
xchg
aas
int3
mov
idiv
cmpsb
das
pop
ljmp
test
or
rcl
jo
mov
imulb
cwtl
mov
and
in
pop
or
mov
dec
cmp
mov
sub
adc
adc
mov
cmp
movsl
in
mov
shll
and
inc
mov
imulb
xchg
sbb
fwait
mov
push
cli
je
mov
in
scas
call
adc
mov
inc
inc
fadd
inc
mov
pop
mov
movsb
loop
mov
enter
push
je
imul
movsl
rorl
dec
les
fst
cmp
push
das
pushf
sub
xchg
mov
adc
or
pop
imul
cmp
shlb
cs
pusha
mov
adc
repnz
test
lea
jno
push
cmp
loopne
xchg
jb
repz
push
mov
inc
shll
and
daa
in
pop
dec
jb
lds
xor
dec
xchg
gs
cs
lods
test
adc
ss
lret
pop
lcall
testl
lret
fsubrs
jo
jmp
hlt
add
xor
cli
lret
mov
fsubrs
call
dec
jne
push
pop
fsubrs
xchg
shlb
int
pop
or
xor
ret
pop
mov
mov
in
dec
push
loopne
insl
add
lock
jecxz
es
xchg
adc
push
lods
das
mov
xchg
nop
cltd
fwait
cmp
or
adc
lods
push
xchg
gs
xchg
aas
aad
ljmp
mov
or
adc
xor
sub
ljmp
push
push
into
or
xor
sbb
out
push
add
and
jne
loopne
xchg
sub
inc
cmp
jne
jl
loop
das
out
cwtl
cmp
jmp
testl
push
push
inc
mov
or
sub
cmp
addr16
nop
pop
mov
aad
fnstsw
push
xchg
sub
pop
or
sub
or
or
lods
fsubs
test
xchg
dec
inc
mov
enter
jg
jno
imul
ret
lock
adc
ret
adc
repnz
cli
lret
or
and
cmpsl
and
arpl
repnz
movsl
sbb
subb
jb
lods
sbb
aas
push
ret
dec
popa
test
jmp
call
rorb
out
mov
aam
outsl
movsl
push
mov
movsb
pop
int
mov
mov
iret
jl
testb
scas
cmpsb
xlat
jnp
mov
adc
and
cmp
cmp
mov
xor
adc
xchg
mov
xchg
xor
lds
inc
mov
js
lahf
and
cmpl
xchg
push
or
and
inc
int3
jmp
cmp
andl
push
iret
icebp
rorb
lea
cld
inc
mov
mov
mov
mov
std
jecxz
inc
scas
icebp
lea
cltd
push
xchg
sbb
add
test
das
xchg
push
cmovb
pop
xor
mov
bound
xchg
cwtl
inc
mov
test
adc
dec
iret
popa
add
rclb
jl
out
enter
ja
loope
xlat
xchg
push
jl
or
enter
jmp
inc
inc
mov
xchg
or
test
cld
cmpsb
clc
or
inc
dec
sahf
xchg
shr
lret
xchg
decl
sti
or
sub
ror
pushf
cmpb
jnp
imul
out
mov
inc
adc
pop
mov
leave
aas
jmp
sub
mov
nop
xor
mov
dec
jl
push
inc
inc
mov
cltd
shr
sub
ret
dec
fmuls
cmc
insl
add
xlat
lret
or
add
dec
jne
mov
int
sti
push
inc
cmpsl
out
fidivrl
push
xchg
push
lret
inc
sti
dec
leave
push
or
lds
aaa
adc
push
push
call
daa
push
mov
xchg
mov
inc
cmp
push
inc
or
imul
loopne
test
das
js
inc
add
jg
push
push
xor
sbb
aad
dec
xor
or
das
int3
bound
pop
dec
mov
xorb
lods
sahf
adc
or
aam
insl
or
lock
call
jl
test
and
inc
in
sbb
adc
fwait
sbbl
add
jl
pop
test
subb
das
test
arpl
inc
cmp
lods
xchg
jmp
daa
lods
rol
aas
mov
pop
inc
or
addl
out
push
and
cwtl
and
pop
or
or
xchg
and
push
xchg
scas
mov
cli
mov
rorb
xlat
inc
mov
cmpsb
call
cmpsl
push
mov
fildl
mov
or
and
pop
inc
arpl
test
je
mov
daa
repz
mov
xchg
adcb
das
gs
js
mov
jmp
cli
insb
mov
add
or
adc
cmp
fld
or
or
xchg
fiadds
or
std
loope
push
enter
xchg
sub
push
adc
mov
jg
add
pop
out
mov
dec
mov
sbb
and
dec
in
push
ljmp
in
pop
je
movsl
cmp
lcall
sbb
xchg
and
or
fldl
pop
adc
int3
pop
fmuls
xchg
dec
dec
adc
xlat
cwtl
and
push
jmp
lea
ret
sub
adc
mov
pop
clc
sbb
nop
pushf
jmp
lcall
push
sbb
inc
sbb
enter
and
bound
jo
aas
or
cmp
mov
decl
or
and
adc
jno
pop
enter
push
jmp
jle
popl
pop
aad
xchg
add
outsb
adc
pop
cmp
sar
fwait
dec
mov
pop
fdivr
cmp
fdivrl
push
fisttps
inc
push
adc
lcall
je
add
fisubrs
xlat
inc
dec
and
and
xchg
xor
int
jp
push
dec
ljmp
xchg
int3
xchg
cmp
stc
repz
lods
insl
mov
sbb
pushf
in
cmp
add
xchg
mul
cltd
in
xchg
xor
testl
push
fld
sub
adc
js
cmp
add
inc
je
jl
dec
aas
mov
orb
jmp
mov
jnp
pop
jne
aam
mov
mov
sti
jne
or
mov
and
mov
ljmp
sub
test
dec
cmpb
test
adc
mov
cmp
sub
add
jp
xchg
mov
push
fcompl
in
or
mov
dec
cmpl
ljmp
add
out
fwait
dec
int3
sub
sbb
or
imul
add
cmp
sub
test
mov
pop
test
inc
ja
pop
and
and
jnp
outsl
xchg
pop
enter
dec
les
fmull
push
fmuls
pop
push
sub
dec
xchg
lock
addl
dec
popf
mov
xor
dec
pop
fimull
adc
pop
push
ja
mov
xor
push
icebp
jge
sub
pushf
xor
sbb
mov
and
mov
mov
enter
cmp
enter
adc
rorl
sbb
add
sbb
cmp
call
cmp
xchg
fsubrs
jne
lods
inc
adc
loop
pop
fcom
jb
push
xchg
adc
int
popa
insl
sbb
outsb
adcb
mov
leave
cld
mov
pop
xchg
xchg
push
jl
sub
mov
dec
lods
out
jo
push
or
les
add
jne
mov
sub
xchg
repnz
adc
outsb
add
icebp
stos
repz
lds
sahf
call
cld
cmpb
pop
push
clc
rcr
push
sti
push
mov
imulb
inc
push
mov
xchg
and
lahf
je
loop
add
push
imul
dec
mov
sub
daa
and
push
dec
cmc
out
arpl
inc
clc
xchg
inc
add
lea
sub
xchg
inc
nop
mov
in
xchg
mov
cwtl
loopne
sub
das
cltd
loop
push
inc
mov
pushf
stos
daa
enter
sbb
ds
pusha
pop
pop
cmpw
lods
ret
jl
pushf
pop
mov
xchg
mov
sbb
test
scas
inc
sub
pop
pop
push
lds
das
dec
out
and
lods
push
mov
dec
pop
lret
les
xor
stos
outsl
push
sub
pushf
push
movsb
lahf
and
push
dec
cmp
mov
shlb
icebp
mov
pop
out
jl
lcall
jb
ljmp
lock
pop
cwtl
lods
mov
add
cmp
test
mov
and
insl
dec
sub
inc
lcall
push
or
lret
nop
je
pop
dec
pop
ljmp
lea
push
cwtl
fwait
pop
addb
and
ror
repnz
mov
jle
and
cmp
jge
icebp
jle
cmp
enter
repnz
push
out
leave
pop
pop
lds
insl
jbe
push
iret
ss
in
mov
or
and
xor
adc
xchg
rcll
cmc
stos
dec
fisttpll
dec
cld
push
mov
xchg
add
xchg
je
or
xchg
std
sbb
inc
push
xchg
hlt
adc
adc
push
adc
cmc
and
push
in
scas
push
inc
jp
fmul
imul
push
pop
fwait
inc
xor
loop
sahf
std
movl
shll
xor
pop
ss
mov
idiv
xchg
mov
lock
and
push
arpl
sub
push
mov
jl
mov
sbb
cmp
cmp
movaps
mov
mov
cld
pop
int3
aas
clc
push
ret
add
sbb
aaa
add
das
adc
ret
pop
inc
test
test
sbb
lahf
adc
dec
adc
mov
adc
or
dec
cld
jle
mov
xchg
fdivl
mov
test
inc
inc
or
js
dec
jne
loope
mov
push
jnp
add
or
ror
dec
mul
mov
cmpl
jne
sub
jbe
dec
cmp
dec
mov
xchg
or
mov
or
jno
jbe
dec
sti
ret
loopne
adc
cmp
push
or
and
orl
push
sar
jb
stos
and
dec
cmp
jg
jne
xchg
aas
cmp
hlt
mov
fistps
imul
sub
push
dec
inc
pop
fadds
popa
roll
int3
sub
jle
daa
inc
add
sti
dec
xchg
push
clc
jle
lods
pop
sub
xchg
push
and
mov
ds
and
xchg
jle
or
xchg
push
mov
add
divl
xor
les
fs
iret
je
pop
pop
or
sahf
sbb
xchg
icebp
xchg
gs
sbb
aas
sub
and
and
addb
adc
scas
push
out
repnz
loope
ds
mov
leave
je
leave
je
inc
xchg
pop
mov
loop
aam
lock
push
iret
sahf
inc
call
xchg
lds
sbb
jecxz
test
xchg
icebp
or
hlt
pop
sub
sbb
mov
notb
cmpsl
fs
dec
add
or
mov
add
jbe
clc
ljmp
nop
pop
rorb
in
stc
lea
inc
sub
rol
mov
das
mov
aad
into
xchg
adc
bound
push
cmpsb
xor
add
mov
ds
sbb
cmp
sbb
jne
mov
sbb
popl
or
mov
call
mov
inc
pop
rcrb
imul
int
rclb
add
int
and
dec
push
cmp
dec
lret
push
xchg
stos
lcall
pushf
test
sti
outsl
xor
and
shr
lcall
inc
sub
es
lea
jg
sarb
mov
lds
xchg
push
and
and
scas
sbb
xchg
imul
add
inc
mov
adc
mov
mov
push
adc
dec
pop
pop
add
sub
xchg
lods
sbbl
push
cmp
and
inc
add
hlt
test
hlt
xchg
mov
mov
and
push
enter
mov
sub
inc
and
ljmp
sbb
call
cmp
mov
fsubrl
sti
dec
scas
xchg
es
jge
pushf
movsb
inc
pop
jl
test
mov
push
inc
sbb
pop
dec
inc
mov
or
pop
push
adc
mov
cmp
cmp
dec
jb
inc
mov
int3
pop
fsubrl
lock
leave
daa
fstps
mov
cmp
call
xchg
imul
cmp
xchg
push
fdiv
dec
jle
sbb
or
jbe
sub
mov
adc
cwtl
inc
and
stos
xchg
jmp
xchg
sub
dec
cmc
repnz
xchg
pop
fistl
push
mov
loopne
sahf
cmp
aas
popa
adc
setne
adc
cwtl
stos
dec
xor
pop
inc
or
push
pop
jmp
jo
pop
addb
subb
mov
jo
mov
lds
inc
sub
adc
push
push
mov
mov
jmp
or
add
sub
js
mov
sub
mov
mov
and
icebp
pop
cmp
mov
and
inc
xor
adc
sarw
push
int3
sub
or
or
or
push
cmp
les
in
add
dec
data16
mov
jmp
mov
das
ds
mov
push
jge
shr
xor
add
mov
jno
daa
jmp
xor
aam
jmp
cmp
jne
inc
adc
pusha
addr16
pop
and
jle
xor
and
lock
mov
add
adc
xchg
sbb
and
and
xor
mov
ljmp
sub
add
orl
pop
push
mov
inc
xchg
adc
lods
in
movsb
xorb
decb
jne
sti
lcall
clc
add
cmp
adc
or
and
add
rep
aas
and
mov
mov
push
push
push
hlt
xor
sub
outsb
xlat
xchg
pmaxub
mov
adc
xchg
movsb
loop
enter
popa
push
and
and
les
adc
sbb
sub
jle
mov
xor
jle
pop
adc
mov
lahf
cmp
xchg
push
imul
pop
sbb
and
sbb
fldt
iret
xor
add
roll
mov
shlb
aam
adc
mov
push
cmp
push
inc
mov
loop
adc
pop
push
sub
leave
and
bound
xor
and
cmp
rclb
out
mov
jmp
test
je
cmpsl
sub
or
adc
aas
mov
leave
bound
bound
hlt
push
jp
inc
pop
out
imul
jge
inc
xchg
push
out
into
mov
ss
adc
jbe
or
dec
dec
cmpsb
cmc
xchg
out
aad
sbb
adc
add
inc
adc
sub
xor
ja
sbb
push
cli
in
inc
lcall
inc
testb
adc
adc
or
daa
mov
dec
pop
or
mov
add
pusha
and
pushf
fsubl
pushf
lods
movb
adc
mov
aad
xor
js
sub
or
or
mov
push
mov
test
nop
push
cmp
inc
pop
cmpsl
push
dec
cmpsb
roll
cmp
mov
out
jg
xchg
pop
lock
mov
jge
sub
inc
insb
and
push
dec
enter
adc
stos
lods
icebp
sbb
pop
lea
les
mov
mov
xchg
pusha
xor
ja
pusha
lods
or
mov
xchg
mov
adcb
lods
push
test
pop
sub
sti
sbb
stos
sub
pop
hlt
jmp
push
xchg
or
or
cwtl
sbb
push
or
mov
leave
add
pop
push
sbb
mov
pop
and
jnp
mov
push
xchg
fstpl
arpl
ja
dec
jae
adc
in
mov
scas
jp
push
int
fstpt
inc
fsts
enter
and
or
adc
adc
js
add
jge
mov
xor
dec
loopne
push
fs
push
pushf
fsubl
sub
xchg
or
sbb
daa
cmp
jbe
xchg
inc
xor
mov
insb
frstor
sbb
adc
in
push
sti
push
test
fs
push
xchg
lahf
loope
int3
mov
mov
mov
sbb
dec
lock
adc
jo
adc
nop
adc
lods
and
sub
and
jno
addr16
mov
jno
arpl
and
adc
mov
adc
mov
in
push
or
mov
adc
rolb
dec
ds
and
xor
push
push
ficoml
or
dec
inc
or
insb
add
xor
push
mov
and
movsl
xchg
or
mov
inc
loop
sbb
shlb
dec
lock
push
and
adc
push
hlt
mov
add
je
mov
daa
or
adc
sub
push
pusha
mov
pop
pop
xchg
and
adc
das
enter
push
test
add
add
xor
xor
push
call
sub
sarl
and
sub
add
les
and
adc
in
xchg
aam
adc
xor
test
adc
sub
and
mov
je
sti
sbb
and
push
in
loopne
call
scas
xchg
ds
cmc
xor
add
dec
mov
xchg
or
xchg
imul
inc
or
mov
popf
add
sub
adc
imul
adc
je
test
sbb
inc
push
adc
xchg
cmp
jbe
fs
cld
add
test
pop
popf
push
pop
push
cmpl
pop
push
subb
xorl
push
jb
sti
dec
inc
inc
dec
mov
mov
cmp
das
and
iret
testb
fdivs
xor
cwtl
sub
fldenv
ljmp
insb
sahf
mov
xor
xor
cld
jns
pusha
mov
xchg
mov
mov
mov
test
sub
or
sbbl
add
mov
mov
movsb
and
mov
fbld
pop
ljmp
jp
jle
dec
jbe
mov
cwtl
mov
shrl
mov
sub
mov
icebp
adcb
or
mov
cmpl
mov
rcrl
shrb
out
pushf
popf
scas
call
dec
dec
xchg
adc
sub
inc
movb
sbb
push
pop
lds
dec
dec
adc
cmpsl
ja
sbb
adc
test
sub
les
idivl
sub
sub
push
clc
inc
push
push
inc
dec
dec
inc
leave
push
sti
jl
push
xor
repz
dec
dec
jmp
mov
sub
sbb
xor
mov
fldt
push
inc
dec
pop
cmp
inc
cld
add
outsb
jne
add
or
pop
xorb
inc
adc
adc
and
or
add
jae
jb
inc
bound
adc
jbe
pop
cmpsl
jge
push
les
push
xor
frstor
sbb
mov
cld
or
xchg
imul
pop
testb
or
mov
lahf
jnp
popf
push
shl
stc
les
sub
sbb
sub
cwtl
pop
xor
cld
aam
fildll
push
add
call
rorl
lret
jae
cmpsl
cmc
cmp
cld
filds
push
xor
sbb
fdivs
dec
add
test
add
mov
popf
cld
mov
adc
jg
push
in
jmp
xchg
pop
clc
mov
mov
add
incb
jle
stos
test
xor
dec
jo
push
call
jnp
shr
jb
cmp
in
xchg
mov
lds
in
jne
or
sub
loope
cmp
mov
hlt
out
jp
movsb
pop
cli
xorb
cwtl
shll
cmc
push
rclb
jecxz
jno
daa
fsubr
hlt
sbb
aas
cmp
and
jmp
icebp
mov
je
in
imul
add
xchg
or
inc
and
sub
sub
add
push
add
push
cmpb
dec
mov
cmpsb
into
aas
push
popf
push
or
add
sbb
je
popf
outsb
call
dec
dec
aam
negb
and
les
mov
rcrb
cmp
xchg
ret
push
jmp
add
mov
fistpl
inc
mov
and
aad
jp
or
cmp
cli
xchg
mov
int3
rcll
movsb
pop
sbb
cmpb
push
jmp
mov
je
int3
adc
leave
pop
test
add
jp
sub
testl
in
loop
popf
dec
js
add
aas
cld
adc
mov
jle
inc
xchg
mov
inc
push
fidivl
dec
fisubrs
fistpll
pop
test
testb
adc
cmpb
jne
enter
test
mov
cs
sub
loop
cs
xchg
mov
cwtl
sub
cmp
inc
scas
push
loop
daa
ljmp
nop
mov
xor
mov
sbb
sub
repnz
stos
add
and
jne
jno
add
jp
and
jns
leave
adc
and
mov
test
jne
cmp
mov
jae
lcall
clc
mov
jmp
pop
sub
and
dec
inc
inc
in
in
add
cmp
push
cmp
lods
fbstp
push
push
in
sub
dec
push
adc
jns
or
jl
lret
bound
inc
add
sub
and
pusha
ret
fsubrl
jb
out
jp
mov
test
movsb
push
adc
and
lret
mov
mov
rcpps
pop
clc
add
mov
fs
popf
jo
push
push
xor
fxch
push
je
xchg
mov
mov
push
xlat
mov
loope
xor
mov
and
sbb
pushf
pop
ficoms
pop
in
scas
popa
push
jmp
pop
or
fstpl
push
add
lahf
add
dec
in
add
shlb
shrb
stos
xor
int3
sahf
inc
lret
lds
les
js
add
enter
push
jnp
inc
rcrb
add
lods
stos
or
adc
loopne
sbb
inc
push
adc
shlb
mov
add
adc
push
xor
mov
sbb
inc
mov
adc
and
data16
xor
mov
jno
jne
xchg
xchg
add
mov
mov
movl
es
outsb
cs
xchg
xchg
lahf
mov
mov
mov
adc
fs
dec
mov
and
fidivrl
sbb
movsl
jae
cs
pop
adc
popl
mov
push
cmp
mov
lods
jl
movsl
fbld
dec
and
movsb
mov
out
test
mov
adc
push
jmp
or
enter
rclb
jno
dec
or
push
fnstenv
leave
dec
cmp
sbb
push
push
mov
rcrl
dec
mov
dec
jns
jg
push
cmc
mov
aad
dec
jmp
mov
pop
inc
and
sahf
pop
xchg
repz
jo
xchg
cmp
es
xor
jno
pop
jne
jns
push
jns
call
pop
daa
sarl
xchg
ficoms
cmpb
xor
ljmp
in
les
inc
cmp
stos
out
mov
inc
int3
sbbb
cld
test
subb
mov
cmp
xor
std
xor
iret
jbe
mov
xchg
es
sti
hlt
adc
mov
cmp
hlt
out
test
subl
mov
adc
ljmp
adcl
or
add
and
cmp
insb
push
inc
fsts
imul
adc
dec
call
push
cltd
hlt
push
xchg
in
leave
test
sbb
sbb
pop
sbb
push
lock
aam
add
loope
sbb
pop
out
pop
xchg
xchg
dec
popa
in
cmp
daa
lock
popl
sti
and
fs
and
xor
push
popa
les
and
mov
jns
ss
fidivrs
mov
and
dec
inc
test
inc
daa
lret
xor
pusha
add
fiaddl
xor
dec
insb
mov
xor
lcall
xchg
push
popf
dec
pop
pushf
movsb
adc
je
les
dec
mov
add
mov
sub
loopne
negb
cli
mov
in
fs
ret
mov
push
nop
and
add
inc
pop
push
push
pop
or
add
dec
push
mov
adc
jb
jae
jp
in
ljmp
mull
std
pop
std
rcll
out
lret
sub
sub
inc
jno
test
testb
cmp
dec
jo
jnp
pop
xor
gs
jne
pop
mov
xchg
jb
xor
xchg
int3
push
mov
mov
fs
sbb
mov
sbb
cmpsl
insb
jp
je
push
popf
lds
xchg
adc
mov
mov
andb
adc
xorb
call
into
jmp
out
mov
test
orl
pop
add
call
daa
sub
push
adc
pop
mov
inc
mov
vmwrite
or
ljmp
and
mov
push
cwtl
add
cmpl
xor
dec
jo
push
inc
jg
jne
sarb
std
ret
push
xchg
cmc
cwtl
jle
jne
test
or
mov
or
cmp
mov
aam
push
sar
leave
cwtl
add
ss
enter
adc
mov
push
sbb
add
mov
or
jae
xor
mov
loope
stos
xchg
enter
or
push
add
xor
xchg
xchg
ss
inc
jns
mov
test
pushf
push
inc
lods
and
and
cmp
or
repnz
nop
sub
or
pop
xor
add
jb
je
dec
roll
test
adc
inc
pop
daa
bound
jmp
test
and
insb
push
inc
and
xor
add
xchg
jne
pushf
nop
xchg
xlat
in
lods
pop
and
lret
ret
jnp
jns
dec
inc
mov
jne
daa
fsub
out
lea
and
cmp
adc
push
pop
nop
mov
repz
mov
sub
sub
aam
les
adc
pop
aas
clc
mov
push
xor
test
insb
imul
or
popa
aas
mov
test
adc
mov
sbb
cwtl
test
mov
adc
dec
xchg
xor
xchg
xchg
adc
movsb
pop
xchg
dec
dec
sbb
inc
cmpsl
jg
sbb
enter
les
ja,pt
lds
dec
int
adc
sub
xchg
icebp
pop
dec
pop
mov
inc
push
loop
lahf
xchg
pop
call
mov
je
cmp
mov
cli
mov
cmp
dec
push
ret
dec
cltd
pop
inc
jp
in
std
pusha
and
add
nop
dec
enter
and
add
in
fwait
cs
xor
fmull
cmp
jge
adc
inc
cwtl
adc
pop
and
aad
jl
pop
loop
repz
adc
dec
insl
cmpsl
xchg
subl
shrb
xchg
ret
sbb
es
mov
jge
pop
jl
jmp
pusha
fisttps
cwtl
mull
in
xor
std
icebp
adcl
dec
push
and
inc
dec
mov
pop
shlb
addb
mov
test
lds
clc
dec
xchg
lret
sub
adc
pushf
insl
xor
push
mov
xlat
es
je
pop
jle
pop
mov
js
mov
mov
and
mov
addr16
push
cmpsl
push
scas
xchg
mov
loop
mov
fmuls
insl
xchg
js
sbb
icebp
xor
nop
mov
mov
and
cmp
inc
lods
das
mov
mov
inc
bound
adc
mov
sbb
lds
jmp
jnp
pushf
push
sub
inc
cmp
addb
cli
int
imul
jnp
cmp
shll
mov
pushf
mov
int3
pop
sahf
sarb
enter
scas
mov
les
icebp
add
mov
cld
mov
rclb
pop
lea
je
fmuls
movsb
pop
add
cwtl
stos
and
xchg
pop
cmpsl
sub
sbb
or
lahf
cmpsl
adc
mov
sub
daa
cld
jae
inc
outsl
rcl
insl
or
jo
adc
inc
aas
lret
repz
js
push
and
add
enter
loop
inc
cwtl
xchg
adc
lret
inc
mov
or
fadds
and
add
jne
fadds
jbe
adc
adc
lods
xor
push
dec
test
mov
push
xor
sub
mov
test
addb
int
or
mov
repz
mov
test
jne
sub
push
cmp
nop
xchg
stos
bound
inc
adc
js
and
sub
je
jp
pop
hlt
loop
mov
xchg
clc
xchg
cmc
stos
das
clc
and
mov
icebp
and
mov
fdivs
inc
and
push
mov
loope
mov
nop
mov
ljmp
cld
cmc
stos
cmp
push
cmpsb
mov
mov
dec
push
cld
ja
push
movsb
pop
inc
aam
fdivrs
mov
out
and
pusha
repnz
mov
imul
adc
fidivs
mov
push
pop
enter
arpl
clc
mov
pusha
lods
jg
dec
adc
cmp
iret
lock
cld
sti
push
test
mov
imul
push
movsl
pusha
and
mov
inc
lock
add
data16
adc
mov
dec
xor
pop
add
aaa
sub
push
mov
mov
xchg
lods
ljmp
hlt
enter
mov
add
mov
push
sbb
xchg
mov
pop
adc
cmpsl
clc
je
and
jno
lahf
in
movsl
lahf
dec
sub
mov
adc
xchg
push
pop
cld
adc
or
mov
push
call
jmp
stos
insb
jmp
mov
pop
rcll
les
jle
lods
jmp
lods
test
and
scas
in
js
inc
mov
xor
and
sub
xor
mov
mov
clc
sbb
loop
test
rcl
mov
adc
lret
sbb
lods
into
push
shr
push
pop
aad
mov
mov
dec
and
aad
mov
mov
inc
inc
mov
pop
mov
mov
lahf
mov
sbb
adc
stos
out
out
mov
jno
sbb
sub
loop
pop
jmp
mov
inc
or
xchg
mov
in
scas
cmp
sbb
pop
out
mov
cmp
mov
xchg
mov
adc
mov
and
jle
cld
jbe
inc
and
push
test
pop
fldcw
push
mov
inc
dec
adc
adc
xor
sbb
xor
mov
stos
sub
inc
add
inc
aaa
xor
das
xor
rorl
jg
adc
or
add
xchg
dec
xchg
xchg
mov
mov
or
nop
cli
int
loope
outsl
test
mov
js
imul
sub
xchg
cld
mov
pop
mov
sbb
pop
aad
inc
xchg
add
push
inc
in
jge
cwtl
hlt
sub
inc
icebp
add
sbb
sub
cmpsb
pop
inc
sub
adc
inc
sub
jl
sub
jl
jecxz
xor
or
inc
mov
pop
lds
sub
adc
cli
pop
fwait
sub
pop
pop
mov
mov
in
sub
and
cmpsl
jno
push
les
cmpsl
in
das
dec
adc
test
sub
or
test
inc
sub
sub
sub
jne
test
sub
xchg
sub
sub
test
xchg
dec
clc
jmp
iret
icebp
cmpsl
add
outsb
and
inc
or
aaa
adc
mov
xor
xor
mov
in
test
lock
jb
xor
jle
sub
je
inc
sub
and
lock
scas
adc
cmp
push
sub
adc
scas
mov
cmp
cmpsl
or
pop
pop
loop
mov
or
les
test
scas
push
hlt
scas
cld
adc
daa
push
pop
adc
sub
enter
sub
push
push
adc
scas
cmp
adc
icebp
sahf
ss
lods
xchg
lods
fbstp
xchg
dec
in
jnp
mov
imul
testb
xorb
shl
hlt
aad
or
stos
mov
enter
and
les
test
inc
fwait
xor
jge
and
lahf
cmp
dec
in
mov
inc
mov
cwtl
test
cmpb
cmpl
es
cmp
out
ret
inc
fs
cwtl
test
xchg
imul
jp
xor
mov
nop
xchg
xchg
loop
push
xchg
jne
enter
pop
into
cmp
jge
into
mov
mov
jle
mov
adc
sub
lods
adc
shl
mov
inc
lock
xchg
sub
insb
adc
fdiv
mov
or
and
jle
sbb
aad
cmpsl
in
and
mov
test
bound
adc
cmp
sub
inc
xchg
mov
stos
and
inc
sub
sub
inc
push
sbb
dec
or
push
outsb
sahf
or
nop
xchg
push
add
mov
mov
and
inc
lea
mov
xchg
subl
fs
or
in
ds
inc
js
rorl
lods
jo
mov
mov
push
mov
setbe
in
jnp
pop
testb
adc
ds
mov
add
sub
bound
cmp
or
ja
push
jl
mov
inc
imul
shrb
fstpl
adc
shrl
pop
jbe
inc
outsb
push
and
je
outsb
mov
and
pop
dec
pminub
psrad
mov
inc
fs
imul
push
jecxz
pop
popf
loope
push
js
loopne
or
inc
inc
cmp
jnp
lret
pop
pop
push
cmp
test
or
pop
js
incb
insb
enter
xchg
mov
mov
das
inc
test
mov
icebp
sbb
and
pop
jne
scas
sub
pop
cmpsl
adc
jns
xchg
dec
adc
mov
mov
jmp
iret
stc
mov
inc
and
aam
inc
out
pop
adc
das
mov
test
mov
pop
sub
fs
mov
adc
sub
xchg
sbb
mov
adc
adc
sub
pushf
arpl
stos
inc
sarb
js
mov
movsb
hlt
les
adc
push
sbb
es
adc
lea
pop
es
enter
push
dec
lods
jns
pop
sub
adc
mov
jl
mov
and
cwtl
and
sub
xchg
jne
scas
imul
adc
mov
nop
xchg
push
or
lret
inc
xchg
sbb
sbb
pop
inc
dec
ds
pop
mov
flds
pop
jnp
ss
push
and
push
sub
in
repnz
fnsave
pop
call
das
cli
sub
pop
xor
lahf
in
and
pop
ret
or
es
add
nop
adc
adc
nop
adc
adc
inc
cmc
bound
sbb
cmp
jl
les
jmp
mov
fldenv
inc
push
pop
pushf
sbb
and
xor
mov
adc
jg
add
int3
pop
fstl
test
adc
popa
out
fstpt
nop
and
xlat
lods
mov
and
jbe
push
popf
loope
jl
and
sub
adc
cld
mov
jb
pushf
in
mov
mov
mov
bound
cmp
mov
aas
sbbl
in
pop
mov
push
inc
and
adc
out
into
nop
xor
rcrb
outsb
lret
xchg
jl
push
inc
xor
inc
jl
pop
xchg
xor
xor
xor
in
jp
add
std
sarl
mov
adc
mov
pop
or
scas
std
mov
mov
add
push
xor
inc
push
daa
add
fistps
xchg
mov
push
mov
pop
jbe
sub
in
adc
or
das
inc
inc
mov
ret
jg
fs
mov
mov
push
adc
mov
lcall
shl
add
dec
sti
jnp
or
xor
jl
mov
std
xchg
bound
inc
les
xchg
addl
push
push
inc
and
cmp
dec
lods
bound
shlb
pusha
es
push
cmp
sbb
push
dec
test
push
inc
adc
or
jo
out
add
fwait
enter
xchg
mov
std
mov
mov
adc
mov
call
lea
jge
movsl
add
pushf
bound
adc
cmpl
enter
jne
in
inc
inc
roll
jns
adc
lahf
out
scas
ret
stos
mov
into
icebp
mov
adc
jg
out
xor
and
dec
loope
sbb
lret
in
push
add
in
lock
hlt
outsb
test
add
and
mov
ljmp
mov
lock
sbb
aaa
adc
enter
ret
aam
push
mov
or
daa
cmc
ss
dec
adc
icebp
push
addr16
dec
ficompl
pop
movsb
jl
js
adc
scas
mov
xor
in
sub
dec
xchg
xor
cli
nop
sarb
xor
ss
add
cmp
fucom
push
adc
mov
cmp
jmp
in
jo
test
mov
jp
inc
call
pushl
push
stc
inc
cmp
jne
xor
shll
push
and
pop
ss
stos
imul
push
sbb
mov
enter
mov
or
cmp
pop
out
testb
jae
mov
imul
aad
je
mov
mov
sub
cltd
dec
mov
jne
je
cmp
mov
push
adc
testb
adc
inc
dec
sub
dec
in
sub
test
stos
sub
push
add
fwait
push
pop
lods
push
icebp
sub
das
mov
jp
aad
rorb
dec
leave
mov
inc
lea
inc
sub
lds
xor
inc
leave
dec
or
jge
sub
and
push
int3
sub
add
push
enter
jg
mov
clc
lds
mov
fdivrs
mov
enter
cmpb
push
insl
xchg
xlat
inc
fimull
push
sub
inc
and
cmc
iret
push
test
popf
push
mov
push
xchg
mov
add
std
mov
adc
xchg
popa
adc
orl
mov
inc
and
and
mov
mov
adc
es
aas
mov
faddl
insb
ja
inc
inc
jle
pop
or
shlb
push
xchg
out
cltd
pusha
outsb
loop
xor
movb
aaa
lret
add
xchg
or
cmp
dec
jge
cwtl
inc
pop
lret
push
jge
dec
inc
js
mov
mov
cwtl
lds
adc
mov
nop
push
push
or
sahf
add
inc
sbb
add
mov
scas
adc
ljmp
mov
shlb
jle
shll
imul
mov
daa
jg
cs
lret
cmc
pushf
jge
cld
scas
cmpsl
frstor
jg
test
in
lret
cli
into
arpl
lret
xor
out
cmpl
adc
sbb
dec
xchg
scas
lds
mov
lock
hlt
adc
int
lahf
and
pusha
add
das
push
call
sbb
pushf
les
decl
mov
inc
adc
jne
imul
ds
mov
push
ss
adc
inc
and
cmp
push
jno
test
mov
pusha
cmp
ljmp
mov
movsl
loopne
xor
dec
inc
cmp
push
mov
adc
inc
and
adc
in
xor
sbb
push
or
call
adc
cwtl
sub
imul
mov
inc
fcmovnb
mov
scas
jecxz
mov
je
mov
aaa
into
xor
mov
ficomps
rorb
into
stos
mov
adc
xchg
pop
adc
adc
xlat
mov
inc
push
jl
inc
push
mov
ficoms
addr16
adc
or
cld
hlt
ljmp
les
sub
xor
shrb
push
sub
add
push
xchg
test
sub
jo
lea
dec
clc
inc
push
in
ret
out
test
adc
push
call
xchg
iret
xchg
cmc
pop
mov
out
int
hlt
in
bound
stc
sbb
pushl
mov
test
dec
sarb
xchg
pop
lret
dec
xchg
inc
rolb
wrmsr
xchg
sub
or
mov
mov
scas
rcl
sub
jo
shll
vunpcklps
and
call
xchg
sbb
dec
xchg
stos
inc
lock
dec
jne
int3
loopne
push
mov
mov
dec
xor
pop
add
pop
jo
aam
mov
mov
jne
test
add
sbb
mov
imul
sbb
and
pop
testb
pop
add
aad
pop
imul
sub
xchg
shl
out
xor
mov
xchg
mov
outsl
lret
cmp
or
mov
add
or
mov
adc
mov
lcall
adc
dec
sub
outsb
jmp
adc
notb
and
out
lret
std
dec
sub
inc
cmp
adcl
and
scas
push
push
and
cli
dec
pop
adc
pop
pop
sub
sbb
pop
sbb
adc
and
xor
cmp
mov
es
sbb
aas
enter
pop
lds
push
mov
test
stc
insb
push
xchg
cld
push
sub
inc
inc
pop
or
adc
ss
cltd
push
aas
and
lea
lods
push
and
dec
sub
das
clc
sbb
jg
push
pop
inc
sub
cmovg
ret
mov
mov
push
and
mov
ss
clc
fimull
je
mov
push
out
mov
movsb
dec
cli
cmp
push
ss
clc
rorb
rorb
aam
lea
subb
pop
clc
and
inc
shlb
add
and
push
sbb
xlat
cmpsl
mov
sub
and
push
bound
and
cmpl
mov
sti
mov
rolb
adc
repnz
push
sub
and
cmp
pop
jo
loope
dec
or
pop
mov
mov
stc
jo
sbb
roll
nop
je
fdivs
push
jp
das
push
gs
adc
popa
mov
xor
and
xchg
sub
sarl
icebp
leave
jmp
xor
leave
lods
shll
lret
inc
pop
pop
aad
push
inc
add
push
rcrl
and
or
push
add
adc
sbb
sub
ret
scas
and
arpl
cmpl
xchg
rclb
or
add
pop
test
cmp
clc
jae
sub
hlt
sarl
xor
adc
mov
xchg
xor
movsl
or
loopne
mov
xor
mov
sub
cmp
lods
mov
sub
push
sbb
push
adc
or
add
push
xor
and
adc
sub
sbb
cmp
or
jp
sub
xor
pop
cli
push
icebp
jle
fstpt
enter
or
push
shl
and
cmpsl
adc
aas
jmp
fwait
and
sub
ss
les
lahf
jne
adc
dec
or
repnz
out
daa
movzwl
xchg
add
or
xchg
sbb
or
cmp
mov
inc
incb
sti
lods
and
pop
ret
in
cli
adc
xor
mov
dec
pusha
push
out
in
lret
pop
imul
es
inc
adc
adc
dec
mov
icebp
and
adc
rcrl
dec
inc
add
imul
add
adc
int
in
fsubl
sub
mov
inc
inc
adc
or
mov
push
or
or
pop
loopne
imul
mov
jle
mov
or
push
add
loopne
jl
fs
test
pushl
js
je
push
adc
add
inc
add
add
decl
jne
jmp
cmp
cmp
cmp
mov
push
sbb
add
or
and
push
sub
int
xchg
xor
fldcw
cmp
jl
jecxz
leave
hlt
xchg
and
mov
fs
sub
lods
mov
ret
xchg
loope
cltd
sub
sbb
rcrl
push
sarb
mov
mov
test
xchg
and
cmpsl
jo
dec
mov
adc
or
mov
imul
sbb
subl
add
sahf
cmp
cld
jbe
lahf
fsubl
mov
shrb
scas
mov
aas
sbb
dec
mov
dec
push
or
sahf
jecxz
roll
cwtl
into
sub
lods
jg
jnp
jno
push
or
fcmovne
into
es
push
pop
jae
mov
adc
xor
pop
jmp
test
push
setg
mov
lret
pop
inc
cmpsl
adc
mov
push
cmpl
outsl
sbb
xchg
pop
or
mov
and
rcrl
decb
jbe
repnz
cmp
stc
ljmp
adc
xor
adc
lret
jbe
cmpsb
sbb
cmpsb
adc
push
push
sub
dec
lret
pop
fwait
dec
ret
sbb
jmp
or
hlt
fcmovnu
sti
ret
jne
nop
fnstenv
ret
test
sub
sub
mov
jne
lahf
mov
xor
mov
lret
pop
dec
les
ja
mov
mov
pop
aad
sbb
jnp
ss
adc
or
xor
pushf
scas
out
mov
das
jmp
stos
pop
xchg
inc
test
sub
pop
pop
mov
jno
clc
mov
and
flds
fistl
jae
rclb
sti
ret
dec
fst
in
daa
sub
sub
bound
mov
stos
cmp
inc
and
mov
lock
or
sbb
adc
cmpsb
xchg
adc
fisubs
fimuls
pop
push
ljmp
pushl
pushf
mov
dec
hlt
jmp
push
fisubrl
jo
jno
mov
js
jecxz
sub
mov
mov
adc
aas
popf
ja
sbb
adc
lods
add
lds
fisubrs
clc
lahf
das
push
jo
pop
clc
clc
loopne
insl
popa
je
popf
loop
xchg
and
in
fiadds
dec
loopne
add
push
push
sbb
xor
mov
inc
shll
xorl
cmp
sar
cwtl
ret
dec
mov
lcall
mov
jne
ret
fs
and
fdivrs
mov
lock
incb
mov
and
mov
add
dec
push
or
cmp
jae
lret
and
rclb
pop
sub
mov
aad
push
into
pop
pop
or
jne
ljmp
das
lods
ret
sbb
dec
lds
scas
xlat
rcrl
pusha
je
mov
push
test
and
xchg
hlt
mov
mov
or
xchg
loope
sbb
or
mov
mov
mov
and
lods
aad
mov
js
iret
aad
adc
cmpsb
in
leave
xchg
push
mov
mov
inc
hlt
clc
xchg
add
mov
add
sbb
dec
dec
cmp
xor
or
cmp
and
xor
sbb
hlt
jno
or
or
sbb
adc
adc
in
adc
or
dec
jae
cmovge
dec
sbbl
pop
sbbl
and
lock
in
cmp
push
cmp
mov
and
mov
outsl
lods
adc
add
pop
lret
cs
jle
adc
sbb
mov
sbb
insb
adc
xor
cs
mov
imul
shl
inc
fidivrl
pop
dec
and
daa
push
imul
aam
test
sbb
or
inc
fwait
lahf
sti
ja
jg
loop
add
jg
clc
push
hlt
sub
cmp
adc
pop
cmpsb
sub
mov
xchg
fldt
push
mov
add
cmp
jnp
fs
jo
dec
loopne
or
lcall
jp
mov
enter
iret
and
mov
dec
fisubl
das
fdivrl
jne
sbb
je
pop
jb
dec
add
jns
adc
imul
lcall
cmp
fcomps
cmc
mov
jo
jecxz
aam
xchg
xchg
adc
mov
mov
lods
test
jecxz
lea
jmp
roll
pop
insl
add
cmp
in
or
push
sub
es
sbb
out
add
imul
test
aam
cmc
mov
jmp
and
adc
jne
lock
movzwl
cmp
xchg
in
cmpsb
adc
out
fmul
addl
out
loopne
mov
aam
inc
or
test
je
mov
in
call
pop
jne
push
dec
aas
add
sub
das
je
mov
pop
push
pop
int
das
scas
push
xor
test
mov
xchg
test
dec
out
sub
jmp
mov
cmpsl
mov
push
dec
popf
js
cmpb
cmpw
pop
adcl
inc
cmp
loope
fdivp
cmp
inc
je
add
lret
or
mov
dec
and
rcll
movsl
mov
clc
or
pop
fdivrl
or
std
arpl
shl
addl
mov
aad
push
ror
xorl
cmp
inc
add
xchg
jl
sbb
mov
aam
mov
mov
mov
add
dec
rolb
outsl
shll
lea
jno
mov
push
roll
xchg
jbe
mov
dec
test
push
or
iret
push
and
adc
inc
adc
add
mov
xchg
dec
mov
or
movsl
adc
mov
lods
mov
sub
inc
dec
lret
xchg
jne
in
adc
fcoms
sub
xchg
test
rol
mov
jns
add
shr
dec
test
jb
push
inc
rorb
add
test
fidivl
sbb
call
roll
testl
orb
or
jb
lea
sbb
ret
mov
mov
scas
or
rclb
and
or
mov
es
inc
cmp
adc
mov
and
jne
add
inc
pushf
imul
adc
cmpsl
je
cmc
in
movl
test
dec
xchg
and
dec
fnstcw
or
mov
cmpsl
inc
ror
hlt
jle
inc
dec
leave
call
rep
ds
arpl
rol
adc
adc
ficoms
add
out
fwait
hlt
dec
adc
cmp
testl
insl
adc
jge
xor
or
icebp
cmpsl
or
imulb
cwtl
imulb
mov
cmc
pusha
xchg
push
sub
adc
adc
fiadds
sub
jp
and
add
jle
cld
jo
inc
dec
sbb
xchg
mov
mov
cltd
test
inc
and
lahf
adc
and
fidivrs
sub
adc
stos
jge
lahf
adc
jge
add
mov
sub
gs
or
aas
daa
fmull
in
push
cmp
loope
pusha
push
leave
mov
ret
pusha
or
cmp
jbe
mov
or
or
adc
and
push
and
ljmp
adc
in
sbb
inc
decl
jne
inc
enter
enter
or
add
stc
adc
mov
mov
push
mov
cmp
adcb
cmp
je
and
xor
push
jbe
sub
add
mov
mov
orb
push
xchg
das
scas
js
push
pop
xchg
mov
sbb
sbb
cltd
imull
pop
jae
add
shlb
jle
xor
cmc
and
cmp
shlb
ret
inc
call
push
sbb
out
sbb
pop
roll
dec
nop
cld
dec
hlt
xchg
mov
cltd
push
push
mov
shll
add
aam
stc
mov
jnp
and
notb
pop
mov
je
adc
loopne
sbb
dec
mov
jg
adc
xor
call
jmp
jbe
cmc
in
pusha
cltd
dec
jle
cmp
daa
push
int3
mov
shl
adc
int3
xchg
imul
lcall
stc
inc
cmp
pop
clc
mov
or
push
inc
pop
xchg
or
pop
daa
pushl
out
popa
jmp
aam
insl
adc
xchg
mov
jne
xor
in
jle
lret
adc
xlat
and
inc
adc
adc
inc
push
and
cmpl
push
shll
adc
sbb
jo
sbb
sbb
js
push
test
jle
xchg
mov
jmp
inc
pop
sbb
dec
sbb
iret
or
lea
cmp
rol
ss
mov
test
std
daa
pop
mov
movsb
repz
int
add
cmp
jl
mov
rol
imul
add
and
and
insb
xor
and
cmp
jne
xor
fistps
mov
xlat
or
ror
rsqrtps
mov
cmp
jbe
add
fmul
repz
dec
or
sub
jo
sub
push
push
mov
in
out
call
lret
or
jl
cmpsl
test
mull
shr
inc
adc
out
dec
jl
xchg
jg
pop
subl
jle
aaa
dec
pop
pop
jle
hlt
inc
inc
imul
inc
aas
push
push
fisubl
int3
adcb
fcompl
add
dec
add
and
mov
in
pop
push
jo
aam
pop
ss
int
mov
fimull
fiadds
lea
add
mov
xchg
iret
das
add
or
dec
inc
loope
cltd
or
push
and
fsub
test
mov
mov
sub
mov
sbb
jb
sbb
dec
add
add
push
aas
add
dec
jne
flds
fs
out
out
movsb
jmp
lock
fldenv
xchg
ss
fnstenv
lock
xorl
rolb
fld
out
adc
addr16
or
adc
adc
cmp
sbb
ret
test
adc
idiv
mov
jne
lea
popa
adc
lock
and
cmp
das
sbb
cmp
xor
jl
aas
loopne
in
call
jg
pop
stos
cmp
or
movsb
ret
nop
inc
jmp
movsb
ds
or
jl
xchg
in
add
and
dec
jle
inc
pop
outsb
and
push
push
stos
mov
xor
mov
pop
sbbb
or
sub
sub
pop
daa
sbb
aaa
mov
cwtl
sub
daa
xchg
push
and
adc
fcomps
flds
lret
aaa
stos
sbb
push
add
adc
xchg
push
in
int3
je
fisubs
push
mov
popf
pop
test
cmp
pop
orb
adc
das
test
or
lods
mov
insb
xchg
inc
es
adcb
rclb
mov
popf
dec
inc
mov
xor
je
xchg
shll
dec
adcl
or
cld
notb
cmpb
mov
adc
jmp
push
xchg
sti
cltd
inc
stc
or
sub
and
adc
ss
cs
sbb
pop
or
dec
jbe
push
inc
sub
in
mov
out
jg
add
sbb
and
icebp
inc
mov
add
xor
dec
mov
jne
imul
imul
pop
xchg
hlt
mov
inc
jp
sub
sarb
xchg
pop
add
inc
jno,pt
xchg
cld
call
notb
nop
dec
push
cmc
xchg
adcl
aad
push
adc
add
cmp
aas
sbb
adc
pushf
mov
pop
pop
push
cli
lds
mov
in
in
rorb
in
dec
loope
les
mov
jp
aam
int3
adc
xchg
sub
xchg
dec
mov
in
mov
call
cmp
add
pop
cld
sub
fucomip
pop
ja
ja
pop
jbe
aam
stos
add
rorb
int
pop
aam
and
or
mov
cli
mov
mov
lea
mov
decl
inc
out
mov
mov
aad
sub
fcoms
xchg
mov
shl
jmp
dec
in
cld
mov
inc
push
adc
sbb
adc
adc
nop
or
or
push
or
test
je
jns
and
nop
adc
clc
and
test
or
in
dec
stc
outsl
mov
das
push
mov
cs
cmp
and
stos
sub
js
std
adc
fwait
hlt
or
xchg
in
les
cmp
nop
aad
or
mov
jp
sub
lock
jno
leave
ja
mov
mov
cmc
dec
sbb
xchg
sub
cmp
dec
jnp
xchg
jns
dec
ds
xchg
aas
push
fcmovne
icebp
cld
pop
outsl
xchg
aas
mov
sahf
aas
test
pop
loopne
push
sahf
fildl
orb
mov
add
test
or
cmc
pop
mov
jmp
in
cmp
mov
adc
mov
add
or
push
inc
js
sbb
cli
lcall
push
adc
cmpsl
sbb
xchg
cmc
adc
adc
lods
cmpsb
xor
gs
mov
cld
das
sarl
fdivl
inc
insb
outsl
ja
pushf
cmp
add
nopl
mov
or
or
push
adc
jae
into
cs
push
pop
jmp
lret
xor
push
addl
add
rolb
dec
dec
mov
push
in
pop
push
movsb
add
sbb
sbb
add
movsl
lcall
push
mov
insl
dec
or
push
inc
cmpb
inc
xchg
add
pop
stc
sub
mov
adc
xchg
dec
divl
dec
cmp
dec
dec
mov
and
mov
xor
and
ret
inc
or
inc
popa
add
xor
sbb
movsb
adc
push
popa
addr16
loopne
xor
dec
add
dec
push
clc
ja
push
and
mov
inc
xchg
jo
inc
js
std
bound
add
jns
mov
or
sbb
or
jne
ljmp
scas
sbb
jo
and
jmp
std
push
popa
shrl
aaa
ss
xor
sub
aaa
xor
adcb
xor
pop
xor
push
jo
cmp
or
inc
mov
je
xor
ret
daa
or
adc
dec
adc
xor
dec
mov
add
pop
subb
push
test
test
sti
xchg
dec
outsb
dec
push
shrb
pop
pop
icebp
xor
les
cmp
xor
arpl
xor
insb
cltd
fisttpll
dec
xlat
pop
in
jge
movsb
adc
xor
sahf
aad
sub
and
push
js
mov
xor
xor
or
mov
mov
xor
stos
or
test
imul
sub
jo
pusha
and
sbb
mov
mov
xor
movsb
ss
je
cltd
push
test
jg
xor
dec
imul
mov
pop
adc
push
push
mov
nop
nop
mov
jb
mov
lcall
mov
adc
inc
xchg
les
and
push
sbb
push
int3
xchg
je
push
gs
out
xor
rclb
je
xor
das
or
outsl
xor
sbb
sub
mov
adc
loopne
incl
adc
call
mov
jb
xchg
data16
lock
shlb
xor
mov
push
xor
xor
dec
lret
or
clc
fdivs
add
aas
push
cwtl
jmp
xor
or
cli
or
sbb
jmp
xor
add
outsb
test
sbb
push
mov
pop
dec
push
rclb
adc
push
inc
iret
mov
pop
sub
movsb
in
sbb
cmp
adc
and
mov
sbb
pushf
repnz
les
and
pushf
adc
fsubs
adc
or
or
rcrl
mov
and
mov
and
stc
xor
inc
or
inc
inc
adc
mov
xchg
and
sbb
nop
push
xor
test
dec
or
or
or
mov
push
xor
push
lret
setl
mov
lods
sub
xor
and
call
test
dec
or
mov
mov
mov
enter
jne
out
sub
nop
int3
dec
dec
sub
iret
or
dec
xorl
repz
mov
pop
std
gs
in
mov
xor
dec
push
sub
xor
test
clc
jmp
cmpl
stos
inc
mov
std
adc
dec
cmp
xor
repnz
push
mov
inc
push
add
fcoms
push
adc
sub
aam
mov
or
pop
inc
mov
push
shrb
add
fsubrs
insb
add
mov
mov
rorl
pop
and
or
mov
jl
push
and
clc
xchg
mov
popa
inc
push
xchg
cmp
enter
sbb
outsl
je
mov
sbb
jne
push
push
cmpb
mov
insb
jmp
push
adc
and
aas
push
pusha
lods
push
pop
mov
xchg
iret
insb
pop
jecxz
fdiv
imul
pushl
pushf
inc
push
push
push
and
push
push
push
test
dec
mov
sub
and
add
cmp
sbb
dec
adc
shrl
ret
push
cmp
das
inc
cli
jl
inc
dec
push
inc
adc
mov
jge
xchg
push
popa
mov
cli
dec
fdivr
cmp
inc
shll
sti
lret
in
add
dec
icebp
mov
or
add
outsl
or
jo
inc
and
inc
movsl
or
xor
aad
jo
pushf
mov
jo
pop
dec
je
fcomps
jns
cld
shl
xchg
mov
fstpl
inc
and
das
mov
cwtl
shll
loop
push
popa
xchg
int3
inc
jno
stos
mov
adc
aas
pop
sbb
nop
dec
or
xor
pushf
mov
call
nop
pushf
or
rcrl
jns
cmp
dec
inc
daa
inc
or
adc
in
or
popf
xor
lcall
push
mov
sbb
loop
dec
sbb
mov
lods
xor
mov
sbb
enter
push
xchg
lock
xchg
mov
loop
xor
mov
sbb
enter
les
or
inc
sbb
mov
pop
push
and
push
jne
sub
push
lahf
pop
daa
leave
cmp
orb
push
xlat
sbb
mov
inc
push
xchg
push
mov
mov
mov
adc
mov
rcrb
push
ret
add
adc
mov
jne
or
pop
mov
push
push
in
dec
shlb
rcrb
sbb
cwtl
mov
mov
fdivrl
rcr
push
xchg
xchg
dec
ret
pop
vcvtsd2si
imul
sub
into
imul
in
in
fdivrl
fmul
je
push
dec
in
popf
sti
insl
mov
aam
pop
dec
aam
je
jmp
lods
mov
and
das
sub
js
inc
dec
and
je
je
cmp
insb
adcl
bound
push
arpl
mov
dec
outsl
lock
dec
push
pop
das
inc
jo
mov
orl
insb
mov
and
bound
dec
sbb
mov
js
push
test
inc
outsb
cld
push
dec
sub
mov
push
push
push
sub
dec
inc
dec
dec
aam
mov
xor
xor
test
xchg
push
push
orb
popl
pop
add
cmp
jb
mov
sbb
push
sahf
or
and
lahf
sub
adc
sub
xor
daa
cltd
fstl
cld
sub
add
xchg
jmp
mov
adc
enter
adc
cld
adc
cwtl
push
in
mov
xchg
xor
hlt
cmp
sbb
mov
lahf
outsb
scas
jb
mov
xchg
in
leave
pop
cmp
lcall
inc
sub
into
sub
and
cmp
imul
jne
outsb
fs
jb
sbb
pop
ljmp
lods
jae
push
adc
adc
and
mov
jae
xchg
mov
or
in
xchg
or
add
cmp
fistl
xor
and
lock
sbb
inc
push
dec
pop
xor
loop
aaa
rep
adc
test
loop
mov
pushf
mov
mov
in
dec
inc
out
aaa
dec
push
js
xor
push
adc
xchg
xchg
les
sub
insb
or
push
inc
je
js
adc
xor
test
je
sub
cmp
cmp
loop
inc
inc
mov
push
sbb
push
push
or
lea
andb
and
shlb
xchg
jl
out
dec
sbb
clc
fwait
jl
mull
movsb
test
push
mulps
gs
xlat
or
adc
sub
mov
push
dec
mov
call
loop
dec
or
push
in
push
dec
std
or
lock
shll
cmovs
xchg
rorb
call
clc
gs
inc
dec
aaa
sub
inc
in
cmp
cmc
insl
xorl
and
mov
jl
dec
fdivrs
pop
test
pop
cmc
xchg
lcall
push
inc
xor
je
inc
jl
and
addb
je
mov
addl
mov
int3
mov
fistpll
mov
adc
add
push
outsl
data16
popa
cmp
gs
dec
jne
xchg
xchg
push
lods
adc
popa
jno
sbb
xor
inc
in
outsl
dec
je
arpl
arpl
mov
ja
or
int
dec
adc
mov
add
popf
push
jg
push
clc
jnp
or
mov
inc
sbb
and
ja
xchg
push
xor
and
test
mov
repz
mov
popf
lock
rorl
jl
jmp
inc
pop
inc
dec
jne
xor
loope
stos
scas
push
out
push
cmc
xchg
in
mov
orb
rorb
sbb
mov
enter
xor
movsl
ds
and
xchg
enter
cmp
xchg
sub
repz
xor
sub
icebp
mov
cs
xlat
push
shrl
cmp
sbb
pop
sub
mov
pushf
out
cmp
je
sub
jge
insb
mov
adc
int3
push
cmp
sub
inc
pop
push
pop
pop
enter
pop
cli
add
push
lcall
mov
outsb
pop
cld
mov
push
outsb
mov
lahf
mov
push
jle
popa
sbb
cmpb
jl
or
js
mov
cmp
inc
adc
in
lret
cmp
mov
std
nop
cmp
loopne
jne
cltd
popf
pusha
enter
movsb
or
adc
mov
les
or
addr16
mov
pop
mov
in
into
in
lods
test
lods
cmp
ljmp
std
add
mov
dec
mov
loopne
or
cli
and
xor
jne
jo
je
mov
cmc
insb
je
xchg
jne
cmp
sahf
je
cmp
out
lahf
inc
mov
loopne
xchg
and
jmp
adc
loope
in
and
lds
add
mov
inc
adc
add
jo
inc
adc
and
in
loopne
push
add
push
std
or
inc
sarl
pop
pop
mov
sbb
sub
xor
adc
jne
pop
addl
xchg
push
xor
push
and
xchg
or
ret
xchg
push
push
leave
pop
sbb
push
sbb
pusha
sub
aad
mov
inc
sbb
out
nop
stos
sbb
xchg
lahf
adc
mov
cmpsl
pop
inc
pop
test
xchg
jge
leave
std
nop
loope
in
movsb
scas
dec
fmuls
lahf
mov
cmpsb
mov
pop
mov
xchg
int3
cmp
inc
out
imul
adc
fildll
das
push
test
pop
pop
jae
out
adc
test
orb
test
and
repnz
dec
cmpsl
jle
xchg
xchg
adc
or
dec
js
xor
mov
hlt
jmp
int
enter
hlt
mov
in
test
dec
test
mov
jns
jecxz
sbb
xchg
mov
test
shll
inc
cmp
repnz
xor
cwtl
out
sub
test
popa
lods
mov
lcall
add
cmp
test
hlt
aam
pop
cld
ja
outsb
enter
je
jnp
das
xor
fwait
mov
lods
pmulhw
sub
adc
and
and
test
push
pushf
jne
or
loop
jl
inc
mov
cs
add
xor
jecxz
sbb
outsb
stos
push
jle
mov
cmc
sbb
sbb
dec
sub
mov
jns
push
cli
and
inc
jne
repz
lcall
push
push
push
inc
adc
inc
loope
cmp
mov
sbb
mov
outsl
sbb
push
cli
inc
mov
repnz
xor
xorb
jg
cmp
mov
popa
arpl
add
mov
mov
and
les
push
lods
push
imul
jle
loopne
dec
fcoml
dec
fadds
xchg
je
arpl
cmp
cmp
and
repz
fs
fcomps
inc
pop
aam
dec
rol
or
aam
lods
loopne
add
negb
clc
and
mov
mov
mov
lods
in
jb
cmp
in
pusha
lods
gs
xchg
mov
jle
mov
pop
and
sub
or
faddl
test
jecxz
dec
mov
or
xor
adc
sbb
mov
rol
pop
sub
adc
shlb
cmp
in
add
fiaddl
mov
shr
mov
jnp
adc
sbb
sbb
mov
call
cmpsb
sub
aam
les
repz
test
cltd
jecxz
push
fsubrs
lock
cmp
push
ds
mov
or
mov
sub
sti
ds
test
and
cmpsl
jle
sbb
sbb
mov
pusha
inc
les
mov
popa
aad
dec
aas
out
add
inc
adc
lods
sub
and
pushl
push
sbb
mov
adc
sub
insb
mov
jno
imul
cmp
movsb
mov
push
insl
aaa
pop
mov
mov
mov
sbb
mov
cwtl
sbb
and
mov
mov
or
mov
les
cmp
nop
je
add
sub
test
xor
dec
and
cmp
jo
push
call
pushf
pop
pusha
aas
xchg
pushf
or
test
test
cltd
fistpl
pop
sub
push
adc
pusha
jb
cwtl
fs
cmp
mov
test
loop
mov
repnz
inc
cmp
push
mov
xchg
mov
mov
pusha
pop
adcb
push
pop
mov
push
movsb
mov
xor
sahf
mov
inc
sub
jg
lret
and
xchg
adc
sub
pop
inc
push
add
and
dec
dec
dec
in
pop
adc
and
push
lock
cs
push
std
leave
push
scas
and
jo
inc
mov
xor
fs
xchg
pop
push
inc
jae
outsb
and
jo
and
cmp
rol
inc
ds
push
push
adc
push
data16
cmp
je
jo
xor
das
push
xor
cmp
es
pop
push
cs
jp
jl
outsb
aas
jbe
cmp
popf
bound
xor
jp
xorb
cmp
arpl
jne
and
and
mov
xchg
cli
cmp
inc
inc
adc
jns
jo
cmp
ds
push
sbb
jno
movsl
cmp
notb
addr16
imul
cmp
and
test
jne
push
jo
cmp
lods
sub
dec
xchg
xchg
je
lea
xchg
push
push
push
push
loopne
cs
push
nop
cwtl
mov
sub
ljmp
jecxz
leave
and
add
or
pusha
mov
dec
push
inc
sub
adc
fisubs
or
push
pop
adc
nop
mov
and
push
xchg
cld
pop
adc
pop
mov
and
notb
pop
xchg
shrb
les
mov
jnp
stos
inc
mov
jmp
clc
add
or
sub
sub
sub
mov
and
and
nop
mov
aas
jl
or
add
test
adc
cmp
and
adc
and
ror
ficomps
and
clc
xor
mov
mov
clc
ja
and
clc
scas
repnz
or
clc
jo
test
icebp
mov
divl
pop
rolb
add
rorb
jl
cmp
jne
jg
popa
add
dec
jmp
aas
sbb
add
adc
jae
adc
movzbl
rorb
divl
fisttpl
add
lea
test
or
jg
xor
lret
mov
int3
ret
push
pop
jecxz
inc
mov
repnz
pushf
pop
bound
mov
xchg
push
cmc
rcll
aas
mov
jne
sbb
loop
int3
mov
mov
sub
push
and
pop
int3
jmp
mov
xchg
cmpsb
aas
mov
call
jecxz,pt
xor
aas
mov
adc
xchg
and
loopne
xchg
enter
adc
adcb
lock
push
push
push
insb
sub
repz
xor
jle
and
and
jo
lret
sbbl
adc
or
imull
or
push
lret
push
xchg
sbb
inc
fistl
push
call
jg
add
xor
dec
add
movb
dec
es
xchg
or
push
xor
aam
cli
sbbl
loop
pop
aad
adc
pushl
xor
cmpl
pop
daa
push
or
and
adc
inc
sbb
mov
jmp
adc
add
xlat
enter
push
and
and
gs
shrb
dec
inc
add
cmp
xor
sbb
inc
adc
loope
pop
mov
sbb
mov
lods
sub
cltd
mov
sub
inc
adc
cmp
mov
or
add
ljmp
adc
shll
push
mov
cmpl
mov
pop
mov
push
je
shlb
out
mov
and
daa
sub
out
sub
lock
hlt
mov
and
nop
mov
add
test
and
dec
dec
dec
and
dec
popa
xchg
sbb
je
jno
inc
xor
mov
sbb
and
sub
stos
push
movsl
push
dec
out
lcall
sub
inc
imul
lea
xor
mov
dec
mov
mov
mov
pop
int
lret
jbe
loope
sub
pop
movsb
sub
mov
push
in
sti
dec
push
in
pusha
loope
sub
xor
xor
and
sbb
push
bound
js
or
insb
and
nop
jnp
pusha
enter
push
or
jg
sbb
jle
inc
in
adc
cld
inc
cmc
int3
or
cmp
movsb
pop
or
add
pop
add
imul
xchg
add
or
or
mov
adc
adc
jmp
mov
cmp
push
or
mov
or
inc
fnop
or
dec
arpl
dec
fistpl
sbb
fimull
test
or
js
push
inc
or
inc
or
inc
or
fs
xor
sub
cld
dec
adc
add
or
add
add
mov
hlt
ret
sub
test
in
test
dec
push
sbb
or
loope
mov
aam
movsb
or
inc
dec
cld
mov
push
add
int3
sbb
or
insb
push
pop
or
call
insl
sbb
and
rolb
dec
dec
mov
inc
nop
xchg
or
push
mov
dec
in
jl
or
or
sub
js
bound
or
incb
inc
mov
or
sub
mov
cmp
stos
and
lds
sbb
lock
sbb
lahf
or
pusha
inc
xchg
fst
add
sub
sbb
inc
xchg
enter
or
cli
mov
sar
xor
mov
add
lahf
mov
pop
dec
shll
inc
dec
nop
pop
fmull
or
dec
push
xor
or
adc
cwtl
nop
testl
xor
and
or
ret
adc
push
bound
addb
in
add
push
or
inc
inc
jge
mov
and
inc
hlt
imul
in
or
lea
loopne
test
adc
adc
and
or
xor
mov
xor
sbb
aas
mov
inc
mov
or
es
push
cltd
adc
adc
or
clc
add
testl
sbb
dec
xor
mov
mov
fstl
loop
jnp
or
mov
pop
ja
loopne
cmp
rclb
pop
fisttps
sbb
xor
hlt
les
sbb
dec
jl
insb
mov
imul
gs
insb
int
ret
aam
add
add
add
movsl
add
je
xor
mov
add
add
add
mov
sbb
sbb
or
int3
enter
iret
add
into
fcmovnu
fcmovu
lret
fstp
fnstsw
loope
and
jb
outsl
js
push
jne
outsb
je
insl
and
ds
je
xor
xor
xor
inc
inc
inc
or
add
aaa
out
mov
enter
or
dec
sbb
add
in
push
mov
test
xchg
add
andb
add
add
inc
sarb
fsubr
pop
xorb
or
inc
cwtl
or
lret
movsb
dec
sbbb
and
jge
rorb
enter
adc
and
dec
lock
clc
jo
jle
or
mov
adc
and
dec
xor
adc
pop
dec
pusha
xchg
push
orb
dec
mov
inc
mov
shlb
dec
loopne
add
lret
fs
add
mov
or
inc
shlb
sbbl
mov
xor
adc
xor
mov
adc
or
mov
popa
rolb
mov
inc
lock
je
jmp
js
pop
add
in
ret
inc
mov
idivl
and
ret
je
aas
push
loopne
pop
xorb
push
adc
bound
xchg
add
add
add
inc
cmp
or
add
das
dec
pushf
adc
dec
push
adc
adc
cmp
lock
sub
dec
xchg
orl
add
add
mov
iret
push
mov
xor
jnp
lcall
sub
inc
jg
ficoml
lret
jbe
mov
inc
mov
adc
or
inc
clc
or
sbb
dec
dec
pop
xchg
jo
addb
mov
shlb
loopne
lock
push
adc
or
add
push
add
inc
lock
xor
or
sbb
loopne
push
inc
jo
mov
dec
add
push
subl
repnz
cmpsl
add
or
or
xor
aad
inc
lds
jmp
inc
mov
inc
push
push
and
or
imul
mov
enter
outsb
fmull
adc
pop
and
push
mov
std
adc
rolb
sbb
adc
rcll
adc
and
je
adc
cwtl
and
adc
int3
cmpsb
es
and
fs
adc
dec
mov
push
adc
gs
inc
add
or
dec
and
dec
fs
mov
inc
adc
mov
adc
xchg
or
rol
add
call
cld
dec
sbb
adc
adc
or
and
sbb
and
dec
mov
adc
int3
inc
sbb
mov
adc
dec
or
adc
mov
sbb
xchg
push
inc
lock
js
cmpsb
mov
je
adc
inc
mov
push
and
dec
or
pop
lock
cmp
or
sbb
adc
movsb
and
dec
mov
inc
sub
xchg
add
add
xchg
cmp
mov
push
dec
mov
inc
mov
mov
adc
and
dec
call
sbb
xor
xchg
push
test
fsubrs
adc
or
xor
dec
or
bswap
gs
pushf
pop
adc
insl
popa
jns
addb
jb
and
and
addl
imul
dec
rolb
or
jmp
in
ljmp
mov
inc
hlt
rorb
rcll
mov
jns
shr
lods
and
ja
rclb
and
bound
inc
lods
mov
sbb
nop
or
pushf
jg
add
or
pop
inc
loopne
enter
xchg
and
adc
and
inc
add
or
xchg
mov
or
inc
fsub
mov
adc
and
dec
enter
daa
pop
mov
dec
or
dec
or
call
or
jmp
outsl
cmc
sbb
mov
or
sbb
push
hlt
adc
hlt
sub
hlt
or
hlt
or
fs
add
nopl
inc
adc
adc
sub
adc
or
cmp
sbb
mov
and
pop
shll
push
inc
push
and
push
sub
and
or
or
xchg
adc
sbb
mov
adc
and
inc
inc
pop
ret
add
movsb
insb
and
shrl
adc
or
lods
adc
push
mov
sarb
dec
add
lret
pop
in
add
add
shll
mov
or
add
add
gs
mov
cmp
inc
dec
pusha
inc
lea
jo
add
rorl
dec
dec
jge
andl
add
or
and
xchg
sub
add
in
movsb
loop
dec
jmp
and
or
dec
sbbb
enter
in
clc
add
cltd
sbb
sub
inc
and
dec
pop
xchg
insb
and
mov
and
dec
fcoml
or
inc
and
mov
jmp
xor
adc
and
mov
cwtl
lock
icebp
rclb
in
adc
dec
xor
xchg
add
mov
sahf
add
add
add
and
or
pop
inc
add
or
push
nop
adc
pusha
mov
xor
std
dec
inc
xchg
cld
and
cli
and
dec
je
clc
and
notb
mov
cmc
dec
les
repz
and
inc
adc
lock
and
out
inc
cmp
mov
and
dec
in
xchg
jo
jmp
sub
xchg
sbb
mov
add
push
add
pop
add
mov
enter
adc
nop
int3
sahf
rclb
mov
mov
or
or
add
add
shrl
add
push
test
insb
imul
popf
test
add
pop
or
mov
iret
das
mov
mov
cld
jnp
jo
mov
aad
in
lds
daa
mov
fs
add
add
xor
inc
xchg
push
cmp
add
iret
sbb
adc
mov
adc
fsub
jmp
xchg
or
push
jo
pop
cmp
cmpsb
push
rolb
or
cli
mov
adc
and
dec
call
inc
and
adcl
test
and
fdivl
mov
add
xor
nop
movd
fs
imul
mov
jns
or
outsl
gs
insl
and
fs
negb
data16
imul
inc
nop
sbb
or
je
sub
adc
jae
iretw
mov
loopne
and
in
movsb
mov
or
sub
cs
adc
arpl
insl
jo
mov
in
jbe
cmp
inc
lcall
lods
daa
pop
lcall
cmp
mov
and
dec
setno
and
mov
shll
jecxz
lods
mov
mov
lcall
and
lret
xor
add
scas
int
ljmp
push
enter
rcrl
or
add
sbb
test
cs
int3
or
cs
or
imul
imul
push
sub
cmpsl
sahf
clc
pop
or
xor
adc
mov
or
and
cmp
inc
dec
push
xchg
arpl
jae
andl
mov
add
add
inc
add
add
add
sbb
mov
in
and
inc
and
mov
popa
and
dec
shll
add
push
dec
or
sbb
mov
adc
pusha
outsb
in
aam
sub
and
mov
test
lods
dec
mov
movsl
mov
push
out
xor
inc
int3
sub
lods
adc
dec
sbb
pushf
and
cmp
mov
dec
add
ret
mov
dec
adc
shlb
mov
dec
or
lret
stos
adc
ljmp
inc
fidivrl
mov
dec
push
xchg
xchg
inc
inc
mov
dec
push
xchg
xchg
and
mov
dec
push
xchg
mov
dec
inc
into
mov
dec
push
xchg
sahf
and
fidivrs
mov
dec
add
shll
mov
dec
adc
shll
mov
dec
or
leave
sub
jmp
and
fnstcw
mov
dec
add
inc
lds
and
dec
adc
inc
aad
mov
dec
or
inc
int
mov
dec
sbb
inc
fnstsw
and
dec
adc
mov
test
push
pop
dec
xchg
shll
pop
dec
xchg
mov
mov
dec
xchg
repz
or
dec
xchg
mov
pop
dec
xchg
lret
je
sub
dec
xchg
stos
je
imul
xchg
jmp
mov
pop
dec
xchg
fwait
je
pop
pop
dec
xchg
pop
dec
xchg
mov
dec
xchg
sti
je
pop
pop
dec
xchg
xchg
pop
dec
xchg
je
daa
pop
dec
xchg
cmpsl
je
addr16
dec
xchg
out
mov
pop
dec
xchg
xchg
je
push
pop
dec
xchg
xlat
je
aaa
pop
dec
xchg
mov
mov
dec
xchg
divl
pop
dec
xchg
je
dec
pop
dec
xchg
iret
je
das
pop
dec
xchg
scas
je
outsl
pop
dec
xchg
out
je
pop
pop
dec
xchg
lahf
je
pop
pop
dec
xchg
fbstp
pop
dec
xchg
mov
dec
xchg
pushl
cmp
and
xchg
adc
push
inc
xor
or
dec
and
dec
push
inc
cmp
add
inc
and
dec
fs
adc
push
inc
xor
mov
cltd
test
and
dec
mov
scas
imul
mov
je
dec
or
add
adc
dec
sbb
push
push
mov
adc
and
dec
sbb
or
and
inc
or
mov
adc
sub
cmp
cli
push
enter
or
or
or
xchg
or
or
enter
add
mov
add
xchg
sbb
sbb
inc
sbb
sbb
xchg
sbb
and
jecxz
in
cmp
enter
pop
adc
adc
adc
pop
jl
in
jg
cmp
loope
lock
cmp
repnz
pop
push
fmul
adc
fwait
rolb
sub
das
cmp
pop
jo
lock
or
jo
add
jo
or
adc
into
push
push
inc
push
sub
jnp
inc
pop
mov
cmc
leave
out
aam
popl
flds
jl
in
and
repnz
push
or
or
seto
nop
push
je
mov
inc
push
push
xchg
add
dec
lcall
negb
inc
add
dec
adc
adc
push
or
aas
ret
sub
sbb
or
and
add
sub
sbb
loope
cwtl
pop
pop
daa
pop
in
enter
inc
sub
inc
cld
addl
cmp
xor
and
jmp
sbb
mov
mov
and
daa
loope
push
push
shr
or
and
inc
clc
sbb
clc
inc
lcall
mov
cmp
dec
add
xor
and
mov
outsb
jae
mov
push
loope
or
xchg
andl
cld
inc
clc
lock
adc
and
adc
lock
add
add
xor
bswap
add
incl
dec
add
dec
add
shrb
add
and
adc
das
out
add
fbld
insb
add
scas
outsl
add
clc
add
add
or
cmp
pop
movl
mov
mov
mov
jnp
inc
add
fsubs
add
sub
sbb
daa
out
pop
xlat
test
cwtl
pop
movsb
add
cmpsl
add
ret
push
into
add
incb
shll
or
addb
mov
mov
jno
dec
add
shrb
out
add
fisubs
loope
shrl
mov
outsb
add
push
lods
insl
add
cli
push
movb
testb
cmp
add
mov
jp
inc
add
jns
inc
add
fisubl
out
push
sub
sbb
and
stos
push
pop
cmpsb
data16
pop
movsl
gs
test
add
pop
lahf
push
inc
dec
add
dec
xor
sbb
jnp
jae
push
or
jle
sbb
sbb
sbb
bound
mov
shrb
sbb
pop
adc
cmp
mov
rep
or
push
mov
adc
loopne
sub
jo
mov
sbb
adc
mov
jo
fnstcw
sbb
addr16
add
aas
out
popa
dec
mov
cmp
testb
outsl
dec
xchg
scas
out
lock
add
insb
out
shl
lds
cmp
and
add
cmp
loope
pop
stos
jb
push
test
xchg
repnz
les
mov
sbb
jb
or
or
sbb
inc
dec
jb
sub
jmp
les
mov
push
adc
idivb
cmp
popf
xor
adc
pop
xchg
mov
and
adc
cmpsb
mov
xor
sub
mov
adc
xchg
and
inc
aaa
ds
mov
aas
add
adc
sub
xchg
enter
sub
cmp
mov
inc
cmp
adc
dec
or
pop
push
cmp
nop
push
daa
adc
xor
adc
dec
xor
insb
inc
adc
push
je
or
dec
pop
push
js
gs
cmpsb
sub
mov
lds
arpl
das
cmpsb
adc
add
adc
sbb
sbb
cmp
dec
sbb
add
in
ds
movsl
icebp
imul
pop
xchg
cmpsl
decb
xor
adc
adc
add
inc
push
adc
pop
and
jno
xor
add
rcll
xor
xorb
pop
sbb
sbb
sub
icebp
jne
cmp
je
inc
dec
dec
dec
push
push
push
add
pop
pop
pop
arpl
addr16
jae
jne
jbe
js
jp
test
mov
xchg
xchg
xchg
cwtl
cltd
lcall
cmpsl
test
stos
mov
mov
mov
mov
mov
enter
rcl
aam
xlat
fadds
loope
jecxz
in
add
call
repz
add
div
clc
stc
cli
xchg
mov
mov
cmp
ja
rclb
inc
roll
mov
adc
pop
or
adc
add
mov
add
and
push
lock
and
loope
push
icebp
mov
mov
mov
subb
mov
mov
jp
push
jmp
enter
dec
push
bound
into
mov
bound
pop
enter
push
push
add
xor
sbb
lock
adc
add
and
dec
adc
sbb
mov
dec
rclb
cmp
js
enter
mov
cwtl
rorb
aam
fs
mov
enter
js
fmuls
xchg
andb
inc
in
mov
adc
and
inc
or
in
xchg
pushf
and
inc
lock
mov
adc
and
dec
cmp
dec
cld
mov
adc
or
add
mov
or
dec
mov
cwtl
adc
dec
adc
adc
mov
enter
xor
fcoms
call
clc
xchg
sub
and
push
inc
sub
mov
adc
and
dec
sub
cmp
and
dec
dec
xchg
cmp
rolb
mov
adc
inc
pop
adc
js
dec
sbb
mov
dec
and
dec
cwtl
xchg
push
and
ljmp
and
pop
mov
nop
xchg
call
clc
mov
lods
and
push
add
dec
mov
inc
shrb
mov
in
cmp
xchg
cld
and
adcb
pop
jmp
adc
mov
xchg
js
nop
inc
dec
mov
cwtl
je
push
dec
je
mov
enter
mov
dec
test
cwtl
and
inc
lods
movsb
mov
adc
pop
or
mov
mov
xchg
shlb
inc
dec
les
enter
and
int3
adc
sbb
mov
cwtl
fmull
loopne
loop
mov
enter
adcb
call
mov
les
or
add
fcoml
hlt
sub
add
and
dec
and
cmp
and
push
and
dec
and
inc
js
sub
andb
xor
cmp
and
dec
mov
popa
enter
adc
dec
push
xchg
and
call
clc
sbb
adc
jae
sbb
in
out
sbb
adc
cmp
cld
xchg
or
cld
pop
lret
in
push
xor
xor
ror
inc
mov
cwtl
sbb
test
test
test
cmp
mov
enter
shll
fadds
mov
add
push
jge
xchg
or
je
orb
dec
mov
inc
loopne
mov
adc
add
and
dec
sub
enter
xchg
xor
cmp
dec
push
mov
insb
and
dec
test
test
mov
adc
and
dec
in
inc
mov
jb
dec
add
andb
rolb
stos
lods
fs
dec
call
sbb
sub
mov
and
dec
adcb
bnd
jmp
insb
mov
or
jl
sbb
pop
push
mov
leave
jl
in
out
sub
pusha
xchg
add
rolb
movsl
insb
xchg
or
add
imul
rolb
loopne
jl
pop
pop
mov
xchg
mov
cwtl
sti
dec
out
daa
lods
test
fs
scas
and
dec
sub
push
sbb
inc
inc
test
or
or
pop
fs
jno
sub
fmull
in
fs
in
adc
sub
adc
push
mov
push
xor
cli
mov
mov
je
cltd
inc
js
cwtl
mov
mov
jo
mov
jns
dec
inc
popa
dec
xor
add
int3
and
fmul
shrl
data16
js
jmp
jo
mov
sub
push
repz
mov
imul
adc
data16
jo
and
xchg
bound
and
and
mov
inc
inc
and
nop
jno
push
in
lods
cmpsb
rclb
notl
lock
mov
inc
dec
mov
sub
pop
push
rcrb
mov
imul
push
sbb
sbb
mov
pushf
cld
jns
or
jne
pop
hlt
in
dec
enter
rclb
in
mov
pop
sub
nop
sbb
or
sub
inc
cmp
and
mov
leave
or
das
sub
aam
adc
mov
clc
sbb
pop
push
add
cltd
sbb
sub
or
inc
in
sahf
mov
pushf
mov
shll
adc
sbb
xor
dec
adc
iret
sub
mov
enter
xchg
push
push
mov
pop
inc
jl
pop
in
imul
mov
pop
dec
pop
and
pop
shrb
or
pop
shrb
lock
xor
sbb
xchg
jo
loopne
push
fmul
sbb
jmp
dec
ret
clc
sub
or
dec
lea
test
mov
js
cmc
sub
fs
int
enter
xchg
fcoml
pop
jnp
movsl
and
dec
rorb
pop
sub
clc
int3
rcll
enter
xchg
sub
cltd
nop
push
cmp
inc
in
add
mov
xor
dec
loopne
inc
int
mov
xor
adc
adc
fsubrs
hlt
adc
adc
mov
inc
adc
and
pop
push
mov
data16
sbb
xor
repz
adc
push
mov
xchg
cmp
mov
pop
push
sub
push
jmp
int3
or
rcrb
or
jns
cltd
mov
lock
jle
sub
push
les
jp
fmull
sub
leave
sub
data16
and
push
push
and
shll
mov
fxch
xor
adc
dec
adc
jnp
sbb
int3
mov
int3
shl
push
int3
popa
jo
xor
test
test
push
sbb
mov
mov
shlb
xchg
in
mov
popa
xor
nop
sub
sbb
dec
push
pop
lcall
xor
xchg
mov
mov
gs
loope
or
sub
mov
pop
in
and
int3
or
fcompl
leave
cltd
loopne
pusha
mov
sub
mov
cmp
rcrl
lcall
enter
dec
sbbb
cltd
dec
call
or
or
leave
sub
stc
push
mov
mov
dec
mov
mov
jge
xor
inc
mov
pop
fmuls
or
call
dec
inc
fcomps
dec
mov
sbb
es
imul
or
scas
cld
jne
xor
push
mov
push
je
int3
cmp
dec
test
aam
sub
xor
lret
mov
cmp
test
dec
jo
inc
mov
sbb
mov
xor
dec
cld
xor
and
sbb
pop
int3
leave
dec
jge
adc
repnz
mov
mov
int3
pusha
push
mov
push
nop
adc
dec
mov
push
rorl
adc
shlw
mov
push
data16
or
sub
mov
push
rorb
inc
mov
pushf
gs
mov
xchg
mov
mov
out
add
add
add
adc
movsb
mov
or
xchg
mov
adc
push
dec
js
xchg
adc
adc
and
cmp
mov
outsb
xchg
dec
icebp
mov
push
adc
loop
and
jl
inc
xlat
mov
mov
enter
fisubrl
mov
repnz
and
jl
inc
in
pushf
call
xor
add
add
add
loopne
xor
or
add
out
add
add
add
add
mov
roll
or
enter
add
cmp
add
and
dec
or
jge
push
adc
sub
pop
or
inc
add
clc
inc
adc
adc
popl
mov
pop
mov
cmp
or
sbb
data16
inc
adc
mov
dec
outsb
xchg
call
orl
and
mov
mov
dec
nop
xchg
in
test
test
push
sbb
lock
dec
mov
pop
adc
and
mov
dec
push
ficoms
cwtl
and
dec
mov
and
adc
and
loopne
mov
adc
adc
add
dec
sub
loop
mov
xorl
and
mov
pop
and
dec
jbe
and
inc
nop
sbb
les
xchg
and
out
mov
adc
pop
adc
dec
rclb
lock
or
fcoms
cmp
and
dec
fdivrl
adc
mov
adc
and
dec
xor
clc
bound
adc
and
dec
inc
xchg
stos
and
ret
ficoml
mov
dec
mov
mov
cmp
or
data16
inc
jl
mov
dec
pusha
xchg
mov
nop
mov
adc
mov
and
fsubs
sbb
lock
adc
push
js
add
adc
push
popa
push
adc
cvttps2pi
call
jmp
mov
jmp
enter
loopne
in
clc
mov
adc
push
add
and
dec
lock
inc
and
inc
pop
repnz
repz
dec
hlt
xchg
mov
testb
dec
clc
mov
sbb
dec
xor
cld
pusha
mov
adc
decb
xchg
jmp
test
lea
adc
and
jmp
inc
xor
movsb
push
xor
or
add
inc
cmp
mov
xor
cli
adc
sti
pop
bound
mov
adc
xchg
cmp
dec
js
mov
clc
adc
adc
test
sbb
xchg
xor
and
push
bswap
pusha
jle
jo
sbbb
nop
cld
mov
and
stc
rorb
enter
lock
and
les
add
xor
inc
dec
mov
popf
sbb
in
aas
and
mov
inc
shl
pop
nop
loopne
lock
or
jl
adc
and
nop
xor
inc
xchg
push
aas
and
jo
enter
nop
repnz
rolb
sbb
loopne
jbe
lock
adc
and
enter
inc
repnz
pop
nop
pusha
cld
jo
in
aas
and
mov
movsb
push
push
rcrb
rcrb
in
lock
or
and
nop
xor
inc
xchg
push
aas
and
jo
enter
nop
repnz
rolb
stc
lock
push
clc
adc
xor
inc
or
and
popf
sbb
sbb
and
mov
sarb
rcrb
fchs
bswap
lock
pop
xchg
adc
and
stc
xor
enter
push
repnz
pop
nop
jo
addb
stc
mov
enter
shl
loopne
nop
lock
rcrl
mov
jle
and
xor
nop
inc
cld
push
xchg
pusha
aas
and
inc
rclb
xor
mov
sarb
sar
loopne
enter
cmc
cmpsl
and
lock
xor
jmp
add
xor
or
cwtl
inc
repz
dec
adc
and
loop
dec
mov
sub
push
cmp
pop
push
ret
cmp
clc
push
ret
cmp
cwtl
pop
ret
add
add
jo
xchg
push
popa
lock
call
adc
gs
enter
imul
insl
cmp
push
mov
push
sbb
mov
shrb
rolb
js
lods
adc
and
or
lock
jo
call
nop
dec
mov
loope
mov
xor
adc
push
adc
cmp
inc
test
add
and
pop
and
int3
push
test
lds
iret
test
js
inc
rolb
and
adc
fabs
xchg
fistpl
adc
dec
ficomps
adc
loope
loopne
mov
mov
inc
loop
adc
loope
out
adc
adc
pushf
jmp
adc
in
loope
out
push
adc
adc
lods
repz
adc
adc
adc
mov
std
js
cld
dec
std
nop
loopne
add
cmpsl
adc
imul
push
loopne
and
sbb
add
push
fwait
add
and
or
ret
add
and
dec
or
mov
addl
and
nop
rcll
and
and
cmp
add
inc
pop
cld
movsl
adc
imul
mov
push
fsubl
test
adc
test
faddl
pusha
data16
inc
adc
dec
jecxz
push
mov
or
adc
jno
mov
js
pop
push
jns
test
adc
or
and
sub
and
roll
adc
sub
and
test
inc
mov
loope
and
lea
inc
xor
shr
loope
cmp
mov
nop
cmp
adc
mov
pop
and
xchg
shl
in
jo
inc
add
mov
push
sub
or
inc
xor
and
outsl
sbb
push
xchg
and
sbb
push
xor
dec
loopne
pusha
dec
gs
pop
adc
dec
inc
mov
pop
aaa
jb
and
sbb
or
sbbb
jecxz
or
popf
or
out
cmc
push
or
ss
and
push
sbb
rcll
stc
dec
fcoml
movsl
and
or
mov
xchg
add
call
jbe
movsl
xchg
test
stos
inc
sbb
dec
adc
in
mov
inc
fs
push
push
and
or
inc
dec
inc
push
add
inc
inc
inc
add
rcrb
dec
test
mov
int3
adc
push
sub
xor
xchg
es
adc
pop
sbb
xchg
out
inc
push
mov
in
push
ljmp
and
push
mov
cmpsb
push
dec
enter
movsl
push
xchg
push
insl
push
push
sbb
pop
gs
sub
enter
xchg
pop
jb
or
push
xchg
xor
ss
sub
adc
xor
xor
inc
xor
or
fiaddl
aam
sahf
cmpsb
sbb
jp
mov
or
or
or
cmp
push
lcall
mov
and
dec
mov
cli
xchg
dec
inc
push
dec
adc
int
data16
sub
push
jns
dec
sbb
mov
xor
xor
xor
aaa
xchg
cmp
and
push
jbe
mov
sbb
das
inc
sub
push
jns
push
enter
ss
sbb
loopne
push
pop
push
inc
lret
pop
push
pop
cltd
inc
popa
add
dec
es
in
or
push
ss
sbb
sbb
inc
pushf
inc
pop
push
push
xor
inc
sbb
xor
test
or
push
xor
adc
mov
insb
pop
cmp
mov
xchg
add
int3
push
lds
xchg
mov
adc
xor
cmp
or
inc
cltd
lock
jb
dec
sub
or
jmp
sub
jns
pop
or
incb
add
test
add
rorb
incb
mov
cltd
pop
mov
sbbb
test
add
mov
sar
or
cli
clc
xchg
inc
lock
and
inc
shlb
inc
cld
adc
aas
xor
popa
or
add
push
xor
sbbb
and
or
or
jo
add
rorl
bound
add
btsl
inc
dec
adc
xor
out
and
sbb
ficompl
out
or
cmp
push
add
loopne
loope
pop
add
clzero
pop
add
aas
push
push
sbb
inc
inc
inc
add
xor
les
lock
xor
mov
sbb
push
inc
cmp
lods
add
aaa
nop
jl
inc
jne
and
jbe
jle
inc
rolb
fs
jo
pusha
mov
rolb
jo
mov
in
inc
and
or
pop
fwait
adc
xchg
in
dec
pop
xchg
aas
sub
aaa
aas
add
inc
pop
jns
push
add
iret
push
or
int
cmp
mov
pop
adc
inc
push
xor
add
dec
add
std
and
clc
and
jg
loopne
rclb
addr16
add
pop
and
pusha
or
clc
cmpsb
dec
test
pushf
adc
push
sub
and
loopne
enter
lods
add
stos
add
add
sub
xor
sbb
xor
inc
lea
and
in
add
adc
test
nop
ret
cmpl
sbb
inc
xor
push
add
adcl
adc
cld
add
cmp
push
fmull
and
lock
jle
xchg
push
sbb
push
or
push
sbb
inc
add
add
out
inc
orl
xor
push
movsb
sub
addr16
incl
mov
mov
roll
in
add
clc
push
adc
or
sbb
jne
sbbb
orb
orb
or
addb
adc
sbb
push
repnz
sbb
adc
mov
adc
or
inc
add
and
lds
jge
ret
and
mov
cmp
adc
repz
adc
dec
sbb
ss
xor
push
adc
jg
push
push
mov
and
push
mov
or
lods
sub
daa
pop
sub
movsb
daa
subl
push
mov
push
mov
mov
and
push
mov
adc
dec
mov
dec
adc
enter
into
mov
sub
adc
and
loope
sub
cmp
jg
push
mov
adc
inc
adc
mov
push
mov
in
cmp
inc
pop
inc
and
cmpl
mov
xor
movsb
inc
jp,pn
adc
or
mov
sub
sub
push
aas
sub
xor
mov
cmp
mov
jg
inc
aas
insl
jns
stos
sub
inc
repz
adcb
mov
sub
cmp
xchg
xchg
test
data16
push
cli
subl
and
push
mov
xchg
insb
lcall
inc
sub
fwait
and
xchg
movsl
xchg
aaa
push
mov
sub
cli
cmp
mov
push
jecxz
clc
adc
shll
mov
push
and
adc
xor
xor
or
push
rorb
adc
out
data16
dec
push
pop
sub
fsubrs
mov
setno
sub
daa
inc
aas
dec
sub
bound
out
in
xchg
js
decb
pop
sub
jmp
aas
xchg
xchg
push
adc
repz
adc
stos
push
mov
enter
aas
repz
loop
inc
arpl
call
inc
lret
imul
nop
clc
in
lods
sub
dec
sbb
inc
jno
repz
cltd
sub
ficoml
push
and
sub
ja
adc
xor
cltd
sub
sbb
adc
xchg
in
sub
inc
adc
push
mov
add
mov
dec
adc
out
adc
ja
pushf
sub
sub
fs
inc
dec
add
mov
outsl
mov
idivl
aad
adc
inc
sub
xor
mov
sbb
arpl
hlt
sbb
and
nop
adc
movsb
cmp
inc
insl
les
hlt
xor
stos
and
dec
or
rep
push
sub
addl
stos
inc
push
cmp
lahf
into
mov
and
adc
sub
inc
mov
clc
adc
or
enter
sub
sub
aas
xchg
addb
pop
in
dec
mov
dec
sahf
outsb
push
aas
xor
adc
stos
jae
data16
xorb
inc
lcall
jecxz
sbb
xchg
adc
or
sub
enter
adc
cltd
sub
dec
les
xchg
sbb
mov
sub
xchg
or
cmc
inc
adc
ja
jg
sub
or
sub
daa
or
in
push
stos
xchg
adc
dec
stos
adc
dec
cmpsb
adc
dec
adc
dec
sbb
daa
adc
in
dec
jle
adc
mov
aad
stos
daa
dec
jle
lock
daa
and
dec
clc
and
mov
sbb
mov
cli
dec
xor
cltd
adc
dec
inc
mov
cltd
scas
add
dec
or
in
adc
mov
jge
pop
mov
test
push
sarb
rcll
out
xchg
mov
rcl
mov
sub
loop
push
and
adc
cmp
cmp
dec
mov
inc
xchg
jb
sub
sub
pop
sbb
jo
sbb
lods
and
daa
mov
insl
sub
cmpsb
sbb
sub
aas
sbb
sub
sbbl
mov
fcompl
pop
inc
in
dec
mov
adc
mov
sbb
pop
movsl
jns
xor
add
xor
nop
mov
sub
mov
cmc
clc
dec
adc
in
sbb
decl
stos
test
mov
stc
decb
mov
repnz
test
orb
mov
add
or
ret
in
xor
dec
dec
xchg
push
and
fwait
popa
arpl
in
jnp
mov
xchg
inc
pushf
movsl
mov
lods
aaa
jae
int3
adc
adc
pushf
shll
adc
sbb
stc
adc
sbb
or
mov
int
lea
pushf
cmp
mov
movsl
inc
adc
and
jl
andb
addl
or
adc
mov
or
pop
sub
inc
test
xor
arpl
and
lret
or
imul
cmp
or
or
or
andb
mov
pop
add
adc
ficomps
ret
mov
pop
call
mov
sub
mov
pushf
aas
sbb
fidivrs
inc
cmp
jb
out
loope
incl
lahf
insb
add
mulb
mov
or
out
fnsave
add
les
or
add
or
cmc
in
pop
loope
or
adc
inc
add
comiss
pop
sbb
and
adc
and
adc
pop
pop
inc
je
daa
and
add
pop
sbb
dec
add
and
push
cmp
push
std
add
add
push
cmp
dec
adc
inc
xor
popa
rolb
push
cmp
add
push
cmp
add
sbb
or
pop
push
push
or
es
inc
inc
sub
adc
addb
cmp
inc
sub
dec
je
data16
and
aam
push
pop
dec
ds
sbb
dec
shll
dec
add
inc
inc
cmp
push
cmp
xchg
and
sub
add
cmp
pop
outsl
push
dec
cmp
jg
or
add
clc
stos
cmp
push
or
xchg
rorl
fwait
mov
adc
xchg
push
or
cs
cmc
inc
lods
or
stos
inc
cwtl
nop
test
sub
push
call
pop
test
rol
cwtl
jne
mov
add
in
popf
inc
add
or
lock
outsl
clc
xor
xor
inc
sbb
xor
sbb
or
cltd
xor
clc
sarb
stos
xlat
mov
repnz
xchg
sbb
sub
jge
xor
push
sbb
stos
inc
sbb
call
repnz
std
dec
sbb
lret
aam
dec
call
das
pusha
inc
sbb
sub
stc
dec
call
dec
sub
pop
dec
ds
sub
stc
sub
std
sub
stc
or
stos
dec
outsl
mov
mov
mov
das
shrb
mov
hlt
sub
push
call
or
mov
out
xchg
mov
or
pusha
and
cmp
adc
and
inc
mov
mov
pop
dec
mov
inc
or
fs
or
and
pop
loop
pop
iret
and
addb
or
inc
repnz
adc
sub
xchg
jl
in
and
adc
aad
and
xor
loope
add
adc
mov
push
std
lahf
mov
andb
cmpb
pop
bound
decl
mov
pop
and
pop
enter
inc
sti
and
xor
push
jle
or
enter
sub
jns
adcb
sub
das
repnz
call
andb
pop
enter
das
xchg
jl
mov
inc
xchg
or
inc
ficompl
and
pop
call
iret
jle
mov
adc
andb
pop
enter
cs
adc
mov
call
xchg
jle
in
arpl
xor
or
and
pop
enter
jns
adcb
sub
xchg
dec
imul
and
rcl
adc
sbb
adcb
mov
cmpb
adcb
mov
call
andb
pop
enter
inc
or
adc
sub
xchg
jl
in
and
adc
add
mov
sbb
push
add
mov
or
in
and
adc
dec
inc
fisttpll
loop
adc
andb
pop
call
xchg
jle
insb
jne
inc
or
add
mov
mov
cmp
inc
mov
add
dec
je
fiadds
jbe
imul
xor
add
outsb
dec
insl
dec
inc
push
or
mov
push
adc
xor
jo
pushf
aas
sti
jbe
mov
mov
movsl
sarl
sbb
and
into
and
sahf
mov
ret
push
adc
xchg
xor
xor
xchg
jecxz
add
xor
cli
cmp
stc
push
adc
and
add
mov
in
adc
adc
shll
xchg
adc
cmc
adc
mov
xchg
cli
and
test
test
stc
pop
xchg
mov
test
cmp
add
sbb
pop
jl
lea
fdivrl
pop
and
push
mov
xor
ss
adc
mov
sub
jno
out
xchg
fwait
sbb
mov
scas
mov
pop
insl
xchg
xchg
mov
repz
cld
mov
sbb
push
shrb
imul
mov
mov
and
add
mov
and
and
jmp
js
xchg
es
dec
arpl
jmp
dec
add
adc
cli
push
outsb
jae
and
pop
push
outsb
repz
add
inc
adcb
xchg
inc
inc
rcll
loopne
incl
pop
movsb
cmpsl
sub
and
cmp
incl
dec
or
pop
add
sbb
loop
inc
fadd
pop
add
sbb
enter
mov
jo
test
cltd
sbb
nop
dec
aam
int3
xor
add
outsl
jo
rcrw
push
sbb
dec
jo
inc
sub
jmp
adc
push
sbb
pop
sbb
pop
push
adc
adc
femms
or
or
pop
push
add
cmovb
stos
test
test
cli
rolb
mov
add
into
jo
add
adc
adc
jo
inc
insb
shll
pop
sbb
push
jo
dec
sub
push
sbb
add
or
or
adc
adc
aam
add
stc
push
pop
aad
sahf
cs
js
push
add
sbb
sub
sub
rolb
loopne
addl
and
sub
inc
add
add
test
test
sbb
add
scas
gs
add
add
push
add
push
push
add
mov
push
or
mov
scas
inc
lahf
lods
sub
push
rol
sarl
aad
ds
mov
mov
sti
scas
inc
add
add
inc
add
scas
push
loopne
mov
out
stc
scas
push
loopne
mov
mov
loopne
mov
mov
in
push
push
movsb
cmp
inc
test
loopne
mov
add
out
inc
aad
roll
lods
pop
mov
imul
sti
mov
inc
or
lods
push
xchg
cwtl
push
das
xlat
cs
jbe
push
ficoml
mov
call
jbe
sub
add
in
pop
jle
jecxz
jmp
test
daa
lock
les
and
and
xlat
and
mov
add
cmp
ja
and
dec
fldt
pop
sbb
mov
adc
jno
mov
adc
jo
cs
sub
mov
sub
and
xor
adc
je
jnp
push
fldl
ret
lret
jg
cltd
xchg
add
addb
cmp
shrb
repnz
sbb
sarb
sbbb
clc
or
fildll
jg
or
inc
mov
jno
sbb
add
xchg
sbb
fnstsw
and
ficomps
ficomps
mov
or
arpl
test
jmp
xchg
or
movsl
xor
mov
mov
or
imulb
xor
sub
add
mov
add
and
add
push
repz
or
inc
adc
into
add
adc
or
je
pop
pop
and
dec
add
repz
clc
cmpsl
pop
or
roll
adc
dec
pop
stc
or
inc
inc
jle
mov
xor
pop
cmp
fwait
pop
fstpl
fmull
lock
and
dec
xchg
shl
push
fs
jecxz
je
jl
fists
pusha
int
icebp
mov
inc
pusha
cs
js
in
and
pop
enter
jno
stc
lea
loop
stc
pop
mov
mov
pop
and
pop
enter
cs
jnp
cld
pop
and
pop
enter
jno,pn
mov
pop
loop
pop
enter
or
xor
mov
pop
fstpt
fwait
inc
in
and
pop
enter
das
mov
mov
pop
sti
pop
clc
mov
pop
and
pop
enter
das
icebp
jg
movsb
pop
and
pop
enter
das
xchg
jnp
cld
pop
and
pop
enter
das
xchg
ja
fcompl
stc
pop
enter
das
xchg
jae
mov
enter
das
nop
push
lock
and
mov
es
pop
es
mov
and
pop
mov
jg
in
pusha
mov
jl
in
and
pop
clc
mov
jge
in
pop
sti
pop
mov
xchg
jl
in
and
pop
js
xchg
jl
in
and
pop
cmp
jl
in
and
add
aas
shll
xor
mov
pop
jmp
das
xchg
jg
in
and
shrb
adc
pop
and
pop
enter
mov
pop
and
pop
enter
das
icebp
je
les
stc
pop
enter
das
jno
mov
pop
and
pop
enter
das
mov
mov
pop
sti
push
imul
lcall
movsb
push
rcrl
push
std
add
pop
push
call
lods
xor
mov
xor
pop
aas
sbb
push
add
mov
int
or
iret
into
and
incl
and
cmp
ja
and
dec
fistpl
iret
push
adc
es
jnp
mov
inc
xor
notb
xchg
push
dec
dec
addr16
push
sbb
and
inc
sub
xor
imul
pushf
cld
or
jae
mov
jnp
or
mov
xor
sub
sbb
or
sub
arpl
adc
adc
and
out
inc
test
mov
movsl
js
add
fistl
loop
mov
add
mov
push
pop
and
addl
sub
popa
sub
and
cmp
cmc
and
std
dec
adc
adc
and
stc
and
inc
adc
enter
inc
sarl
fwait
xsave
data16
adc
sbb
mov
and
sbb
je
roll
daa
sub
and
arpl
sbb
and
and
or
cmp
xchg
add
sbb
adc
add
cmp
lret
lcall
add
ss
into
and
daa
jle
notl
lea
mov
lea
lea
or
lea
mov
shlb
xchg
push
push
sbb
mov
orb
fbld
sbb
sbb
or
dec
sbb
call
mov
adc
movsb
mov
cli
inc
add
mov
dec
dec
push
hlt
nop
add
inc
pushl
cmp
clc
jnp
hlt
cs
inc
mov
push
sub
jle
in
dec
xchg
xchg
test
jmp
test
push
xchg
jmp
xchg
ljmp
sub
xchg
dec
mov
test
cmc
iret
pop
hlt
test
and
pop
xor
jmp
aas
mov
xchg
call
sbb
push
ljmp
aaa
sbb
aad
mov
sbb
pop
push
jb
rcrb
cmp
cmpsb
or
std
mov
jo
std
and
mov
imul
decl
stos
repnz
fsts
clc
mov
inc
fsubrs
cmp
pop
xchg
lcall
mov
pop
xchg
mov
mov
iret
mull
imul
cmp
inc
call
xchg
add
clc
mov
adc
or
inc
pop
xlat
sub
jo
orb
add
pop
xor
insb
xor
inc
sbb
mov
shr
pop
test
mov
xchg
adc
add
in
divl
test
sbb
sub
insl
xor
pop
or
sub
sbb
in
pop
fists
in
clc
in
popf
sbb
test
xor
inc
outsb
aam
mov
or
lock
jo
nop
loop
xchg
or
adc
jno
test
jg,pn
sub
push
enter
pop
jge
xchg
test
call
jo
jle
xchg
popa
movl
jo
push
stos
mov
das
rclb
arpl
bnd
or
pop
sbb
mull
mov
and
packuswb
jg
js
and
test
enter
loopne
sarl
sbb
outsb
fidivl
adc
lea
cs
out
xchg
mov
dec
lock
mov
out
movsb
or
cmp
pop
and
jmp
pusha
or
dec
nop
jp
mov
cmpsb
dec
push
inc
sub
mov
push
jb
testl
or
nop
nop
cmc
sub
cmp
add
xchg
sbb
xor
or
sbb
xor
sbb
add
dec
sbb
xchg
pop
push
test
cltd
enter
jo
jb
sbb
in
or
or
sbb
das
gs
mov
sub
shlb
mov
or
scas
dec
mov
mov
xchg
push
or
xor
push
or
mov
mov
cs
push
lds
sub
outsb
or
mov
dec
js
sbb
lock
mov
pop
mov
imull
cmp
or
in
loopne
cmp
cmpsl
mov
ja
jl
adc
mov
in
dec
rorl
mov
fstps
or
jo
sbb
popa
insl
or
push
inc
pushf
jmp
lock
mov
mov
push
jle
xchg
popa
movl
test
xchg
int3
pop
lea
daa
out
cmpsl
in
sub
out
push
ror
or
imul
mov
sahf
hlt
jp
or
sbb
xchg
mov
pushf
pop
divl
cwtl
xchg
xlat
loope
or
sbb
out
frstor
in
xchg
push
adc
sbb
outsl
cs
movsb
cmp
mov
dec
repnz
and
lea
dec
push
popf
push
xor
or
jo
sub
sbb
xchg
jb
jo
xchg
jmp
lock
cmp
cmp
lea
fistpl
div
in
mov
mov
adc
add
aaa
adc
mov
push
adc
adc
stc
jecxz
dec
or
and
lahf
stos
jo
pop
mov
cli
ja
mov
arpl
cmpsl
jne
mov
sbb
jl
test
add
shrb
jo
in
into
ret
bound
jae
sub
inc
pushf
and
inc
movsl
and
pop
cmp
decb
not
fiadds
fiadds
mov
adcl
jae
jnp
out
mov
cmp
jnp
test
inc
inc
pushf
jnp
mov
xchg
in
adc
jne
and
loopne
adc
lods
adc
sub
pop
add
xor
das
leave
sub
adc
adc
xor
add
pop
and
sbb
pop
pop
xor
stos
sbb
and
loop,pn
add
sub
add
adc
xor
shll
add
mov
add
add
add
adc
mov
loopne
or
adc
es
aam
and
das
and
fisttpll
sub
or
jo
sub
or
loop
stc
nop
cld
popf
icebp
mov
adc
mov
dec
or
fists
xchg
or
push
sub
add
jg
dec
jno
add
std
adc
push
cmc
jg
add
adc
lods
sub
clc
or
orb
adc
daa
cltd
sub
cli
sbb
push
shl
inc
mov
icebp
in
push
cmp
jmp
add
das
int3
pop
lock
xor
inc
roll
adc
js
xor
adc
mov
jo
or
xorb
xor
out
lock
push
add
mov
adc
or
je
jo
cmc
dec
call
test
lods
add
push
add
in
xor
mov
add
std
cmpsb
sbb
dec
popf
add
dec
lahf
sbb
lahf
or
jl
add
add
add
stc
add
or
dec
or
es
mov
add
inc
pop
out
cld
push
test
mov
cltd
sbb
jge
add
add
mov
outsl
call
or
xlat
stc
or
and
in
lahf
sub
sbb
lret
adc
xor
add
xor
xor
enter
add
setno
and
nop
adc
pop
xor
adc
pop
or
repnz
movsl
xor
roll
add
scas
test
adc
mov
adc
and
dec
sbb
sbb
scas
enter
fsubl
je
adc
test
sbb
sbb
add
sbb
or
scas
xchg
inc
sbb
mov
dec
and
jmp
and
fwait
fs
pop
jb
sbb
dec
push
xchg
shrl
sbb
adc
add
cmpsb
adc
inc
or
cltd
jl
adc
mov
and
dec
sub
fs
sub
enter
aaa
fs
faddl
jb
push
outsb
mov
adc
lahf
adc
sbb
dec
sbb
mov
xchg
es
enter
and
inc
cmp
mov
adc
adc
cmp
push
dec
cmp
mov
es
in
fsubl
and
cmpsb
adc
icebp
xor
xchg
or
sbb
xor
mov
adc
inc
dec
dec
xchg
dec
and
dec
add
dec
pop
jle
dec
es
push
in
fsubl
je
cmp
xor
dec
and
dec
adc
dec
xchg
pop
push
jl
and
nop
xor
sub
xchg
dec
and
push
pop
mov
pop
and
dec
pop
xchg
pop
add
mov
jb
pop
outsb
fs
push
je
dec
mov
sub
fwait
les
hlt
mov
xchg
adc
xchg
xor
rolb
push
push
mov
popa
inc
gs
and
dec
outsb
add
std
xchg
insl
jb
push
pop
dec
gs
leave
pop
mov
es
in
fsubrl
and
add
scas
dec
das
sub
pop
mov
push
sbb
push
cwtl
movsb
xor
dec
inc
pop
bound
je
js
jp
jl
jle
enter
nop
jle
jl
push
dec
js
lret
outsl
cmp
bound
test
dec
xchg
in
fsubl
and
aaa
aam
sub
fldt
adc
ss
dec
pop
mov
xchg
jbe
jge
addb
lea
add
std
xchg
lea
mov
dec
subb
jl
aaa
mov
dec
pushf
in
mov
mov
mov
addr16
or
loop
and
dec
das
in
rorb
test
mov
mov
xchg
dec
lcall
pushf
jb
cmp
insb
in
fdivrl
mov
outsb
lods
dec
and
rcr
xor
mov
pop
mov
sbb
sub
imul
jb
lcall
and
test
test
cmpsb
aaa
dec
mov
insb
mov
cmp
fwait
pushf
xchg
inc
jb
daa
shll
adc
dec
cld
lfs
mov
push
fcom
outsl
xchg
mov
cmp
mov
scas
adc
add
fstl
outsb
push
dec
test
leave
pushf
mov
outsl
xchg
in
frstor
les
adc
inc
adc
mov
adc
and
dec
inc
xchg
push
das
gs
subb
stos
jb
mov
mov
mov
add
jbe
mov
push
mov
fs
test
xchg
push
jb
cmp
dec
and
leave
adc
cld
or
cwtl
adc
pop
adc
js
loopne
xchg
pop
sahf
mov
enter
mov
shrb
mov
fs
cmpsb
cmp
xchg
test
js
xchg
pop
fwait
movsb
xchg
cmp
and
xchg
int3
push
or
sub
add
in
xor
mov
cmp
bound
jp
inc
and
dec
cwtl
push
cs
xchg
sbb
add
stos
pop
out
push
mov
in
aad
push
sbb
repnz
out
daa
cltd
dec
int3
inc
jl
xchg
xor
cmp
adc
lock
add
add
call
adc
mov
bound
and
dec
jle
js
pop
and
adc
and
pop
xchg
push
add
cld
mov
in
stos
adc
fucomip
mov
jl
into
adc
repnz
cmp
pop
ljmp
sub
fdivrs
fsubp
sbb
aam
mov
or
or
jg
loop
adc
xor
xor
jne
popf
adc
jge
mov
das
adc
dec
jne
sbb
add
sub
add
jno
pop
rorb
xor
ds
dec
jne
push
in
or
add
lock
cmp
xchg
add
cltd
mov
and
inc
cmp
adc
add
add
int3
shrl
enter
clc
out
clc
lret
rolb
sarl
xlat
pop
fldcw
push
sbb
jbe
js
or
push
jns
shrl
insb
movsb
iret
adc
shl
stos
enter
pushf
adc
inc
ds
add
inc
xlat
frstor
cmp
fimull
lret
loope
int
inc
or
mov
cmp
or
in
aas
lahf
in
out
sbb
or
out
dec
xor
or
cltd
and
int
push
or
jmp
or
aas
mov
js
lock
pop
out
repnz
adc
sub
out
add
and
sub
sub
push
or
xchg
fcomp
mov
mov
add
loopne
in
pusha
add
div
scas
add
clc
push
stc
or
out
mov
out
stos
add
push
scas
cwtl
ljmp
dec
fsub
jne
cmpsb
fsubl
in
sub
repz
call
and
pop
inc
xchg
add
sbb
out
in
push
or
mov
mov
mov
shlb
enter
mov
shl
enter
int
popa
and
rcl
clc
shrb
fcomps
adc
jecxz
adc
je
shll
push
inc
aad
ficoml
push
xchg
jo
add
outsl
adc
add
into
pop
add
adc
shlb
shrb
and
sbb
into
fsubp
xor
mov
sbb
loopne
xlat
loop
cwtl
outsl
or
adc
dec
fidivl
aam
add
iret
rcr
push
jge
rorl
xchg
nop
xchg
test
loope
gs
mov
inc
adc
fistps
dec
dec
push
cmp
mov
inc
xor
js
pop
push
mov
sub
lret
movsb
ds
jle
mov
push
test
lret
push
rolb
in
push
cltd
inc
dec
xchg
dec
xchg
pusha
cltd
dec
mov
dec
aam
daa
xchg
int
or
pop
inc
loopne
out
xchg
xchg
mov
out
es
subb
mov
ja
aad
cwtl
inc
fisubl
ljmp
add
sub
imul
inc
xchg
push
fstp
mov
mov
adc
or
and
mov
jno
clc
mov
pop
popf
iret
cmpsb
cmpsl
xchg
mov
xchg
mov
sub
mov
mov
lret
mov
int
movb
je
pop
add
jl
insb
pop
js
in
sbb
and
push
push
mov
nop
xor
sbb
mov
scas
pop
enter
push
sbb
add
scas
leave
in
or
es
and
stc
or
adc
push
cmp
ror
pop
ret
loopne
leave
fisttps
les
mov
pop
jo
std
and
mov
movsb
dec
mov
jne
cmpsl
jmp
adc
mov
xchg
push
std
cmp
or
sbb
cmp
push
mov
mov
xchg
clc
or
or
int
and
fadds
xchg
cwtl
pop
mov
xchg
xchg
mov
lret
dec
stos
les
ret
adc
mov
adc
ret
mov
push
or
sub
es
daa
xchg
nop
pop
cld
mull
mov
pop
lret
mov
mov
sbb
cmpsb
rclb
loopne
mov
pusha
call
jecxz
add
or
out
repnz
ljmp
hlt
xchg
in
dec
cmp
jo
or
in
fdivs
mov
mov
mov
adc
popa
loopne
mov
dec
test
ret
lahf
mov
loope
test
loope
add
mov
nop
xchg
or
xchg
clc
stc
out
pushl
inc
cmp
pop
stos
stos
or
mov
pop
fs
lock
xor
push
and
aam
jno
cmpsb
sub
or
mov
cmp
loopne
lea
mov
mov
movsl
ret
cmpsb
ret
int
sub
lret
and
mov
sub
nop
xchg
clc
mov
fwait
movsl
mov
nop
xchg
lcall
mov
and
xchg
jnp
pop
ja
jge
jns
jle
jle
xchg
xchg
hlt
dec
pop
ret
mov
inc
mov
mov
push
adc
test
test
int3
and
cltd
fs
cwtl
fwait
pushf
les
clc
push
insl
clc
jno
jae
imul
gs
clc
xchg
imul
dec
and
dec
rcrl
mov
subb
xchg
mov
scas
inc
aam
jne
jo
aam
xor
aad
dec
roll
movsb
ret
lret
into
dec
jo
sub
or
adc
jp
jge
mov
add
adc
cltd
and
sub
test
out
dec
loope
sbb
add
pop
sub
pop
out
icebp
bound
ficompl
pop
int3
movsb
push
mov
mov
cwtl
mov
xchg
sub
lock
sbb
enter
fwait
int3
inc
pusha
enter
mov
add
clc
pop
ds
pop
cmp
clc
pop
fistps
push
arpl
jp
jmp
cmp
pop
idiv
pop
aam
sub
data16
adc
jno
enter
rclb
je
mov
icebp
test
sbb
fmull
cltd
cwtl
push
mov
mov
xchg
cltd
lcall
fadds
icebp
data16
mov
jnp
adc
sbb
adc
xor
les
ret
test
mov
movsb
sarl
xchg
and
loope
xchg
xor
jno
add
imul
pop
arpl
inc
mov
rorl
lock
push
jecxz
adc
and
iret
lds
inc
sbb
orb
lock
inc
mov
sbb
ja
fs
pop
faddl
pop
leave
xchg
addr16
ja
rorb
es
sbb
jbe
mov
test
xchg
jle
mov
sub
add
in
outsl
bound
shll
orl
pop
pop
and
icebp
lods
sub
mov
in
jae
cmp
and
lcall
test
lods
adc
test
pop
cld
mov
dec
and
stos
mov
mov
ds
cltd
es
xor
es
pop
pop
loopne
jns
ljmp
mov
popf
cwtl
rcrl
or
xor
sub
add
fsub
jmp
js
add
loopne
or
mov
cmpsb
or
addb
mov
shlb
pusha
arpl
xor
imul
stos
scas
mov
cwtl
mov
mov
sub
shrl
aas
push
dec
dec
aas
sbb
jnp
or
dec
fwait
adc
fs
cmpsl
or
sbb
jb
ja
push
push
push
inc
int3
lret
mov
pop
repz
je
bound
add
jo
clc
stos
dec
movb
andb
jae
cld
aam
mov
jl
mov
xchg
sbb
imul
xor
lods
int3
idiv
stos
add
adc
mov
xchg
mov
mov
and
repz
jns
clc
mov
hlt
or
xchg
sbbb
jns
push
stos
imul
push
dec
push
dec
push
js
dec
dec
push
enter
std
clc
xor
aaa
cmp
xor
push
pusha
and
test
pushf
cmp
sbbb
fs
int3
popa
leavew
or
xchg
pop
or
xchg
cmpsb
inc
lods
scas
scas
sbb
stos
xchg
mov
pushf
popf
cmp
leave
js
xor
sub
jnp
test
mov
mov
les
cmpl
into
outsb
in
aas
sbb
add
mov
sub
pushf
adc
lds
mov
jle
jns
jge
adc
cmpsb
xchg
dec
xchg
or
cltd
jns
xchg
lock
inc
xorb
inc
nop
pop
add
sahf
mov
mov
es
hlt
pushf
mov
nop
jmp
cwtl
mov
lea
ret
test
mov
inc
push
or
jns
add
loope
test
movsb
adc
sub
loop
sub
inc
cmp
test
cld
aam
sub
and
push
loopne
inc
inc
inc
test
sbb
jecxz
dec
clc
rorb
lods
scas
cmpsb
add
push
mov
mov
add
leave
add
ret
add
add
sbb
pop
add
push
pusha
cmp
cmp
sbb
cmp
cmpsb
in
lahf
mov
data16
add
out
jl
cwtl
in
test
jno
jae
pusha
dec
cmp
cld
jno
push
push
in
jecxz
mov
les
jl
dec
imul
cwtl
pop
and
aam
jge
xor
cli
test
test
sub
test
mov
adc
stos
mov
andb
xchg
bound
adc
les
scas
mov
icebp
mov
push
mov
imul
fdivs
clc
loop
sbb
cld
pop
loopne
pop
fs
dec
xchg
xchg
or
sbb
lods
fs
data16
call
add
add
pop
inc
and
arpl
sub
push
lret
inc
sub
add
mov
mov
shrl
or
sbbl
and
mov
pushf
mov
andl
loop
inc
clc
insb
faddl
enter
dec
dec
rolb
mov
imul
js
lcall
mov
sbb
mov
clc
xchg
xchg
cmp
dec
add
jl
or
add
bound
push
jo
jle
dec
lahf
dec
xor
ljmp
aad
icebp
lods
dec
fnstenv
sub
mov
sub
add
mov
leave
js
mov
lcall
in
adc
nop
adc
repnz
xchg
cltd
mov
inc
sahf
lahf
repnz
inc
arpl
cmpsl
test
out
add
stc
and
or
sbb
add
std
jl
inc
decb
mov
or
cs
aas
push
sub
aas
sbb
icebp
pop
loopne
call
add
xchg
mov
adc
xor
push
arpl
push
xor
inc
or
add
in
or
imul
xchg
or
in
cmpsb
sbb
es
inc
js
inc
clc
ja
push
mov
jbe
mov
sub
cmpsl
add
jle
mov
xor
xchg
inc
xchg
add
sub
cbtw
je
sbb
mov
xchg
les
lea
and
cmp
adc
nop
inc
jmp
mov
lock
add
inc
inc
in
lock
dec
jl
pop
inc
inc
dec
adc
add
clc
dec
adc
rcl
icebp
in
push
cwtl
mov
jl
pop
dec
xor
cmp
aas
inc
filds
stos
nop
xchg
add
add
loopne
test
adc
das
pop
pop
nop
lods
mov
lock
mov
push
pop
pop
xchg
jl
cwtl
cmp
inc
test
ja
cwtl
clc
jg
mov
push
xchg
movsl
stos
or
mov
fs
dec
push
pop
xchg
sbb
insl
imul
test
pop
gs
js
subl
lods
ror
je
mov
cmp
mov
ret
sub
mov
dec
sahf
lods
scas
inc
pusha
shlb
sbb
pop
fcoms
dec
nop
fsubrp
shlb
sub
daa
insb
test
or
jecxz
daa
push
lock
xchg
lock
inc
add
add
movsl
adc
add
add
jmp
add
mov
dec
dec
jo
pop
dec
pop
cmp
inc
inc
sbb
aam
cld
push
or
and
icebp
js
clc
mov
fsub
cmp
push
test
jmp
adc
pushl
adcb
and
sbb
and
je
test
cmpsb
ret
inc
or
jo
jns
cmp
adc
inc
inc
icebp
lods
jecxz
push
add
hlt
add
inc
aaa
xor
les
pop
push
sbb
sbb
loope
into
mov
mov
mov
ds
xchg
pop
cmp
add
inc
xchg
mov
insb
cmpsl
movsb
cmp
mov
ds
inc
or
inc
call
mov
push
mov
push
loopne
pushf
out
filds
adc
push
push
shlb
mov
cmpsl
scas
rclb
sarb
jl
fcoms
push
leave
pushf
and
xchg
sub
add
shlb
dec
sbb
mov
mov
fcomps
or
adcb
sub
mov
adc
dec
insb
movsb
mov
fiaddl
js
les
push
pop
rolb
lods
sarb
mov
int
lods
or
cwtl
mov
mov
leave
push
mov
jge
pushf
adc
mov
loopne
data16
pushf
mov
add
push
mov
addl
js
insb
nop
lea
sbb
insl
add
or
mov
sbb
scas
rorb
adc
sbb
rcrl
cmp
out
or
je
inc
lock
dec
mov
icebp
cmp
xor
add
adc
push
pop
in
sub
sbb
les
loopne
rcl
pop
xlat
enter
lock
cwtl
dec
mov
inc
outsb
popf
pusha
in
insl
pushf
nop
rclb
stos
add
sbb
adc
jo
push
pop
addl
loope
dec
fninit
lods
shlb
adc
int3
gs
test
aaa
dec
add
push
jg
pusha
xchg
test
mov
out
add
stos
stos
fwait
mov
add
xor
loopne
ss
mov
mov
lock
xor
or
cmp
ss
mov
repnz
add
adc
loop
leave
adc
or
xchg
movsl
mov
xchg
lcall
scas
rolb
mov
adc
inc
jl
sub
mov
jo
xchg
test
adc
mov
add
insb
jno
add
inc
dec
test
xor
inc
pop
dec
push
push
loopne
push
pop
clc
imul
popf
jo
scas
mov
adc
lds
les
cmpsl
roll
mov
je
or
dec
bound
call
mov
loop
test
pop
popa
inc
je
or
adc
sub
mov
inc
cmp
cwtl
cltd
add
mov
inc
enter
insb
data16
sub
sbb
sub
mov
pushf
add
xor
inc
inc
stc
fnstcw
xlat
out
inc
sbb
xchg
mov
dec
or
jl
ljmp
inc
xor
addb
lret
xchg
or
xchg
call
test
sbb
adc
dec
adc
imul
gs
test
adc
sbb
fs
mov
ret
pusha
sub
imul
adc
xor
mov
pushf
mov
ss
adc
adcb
adcb
in
fadds
clc
fiadds
and
cmp
nop
xchg
pop
sbb
cs
lods
scas
jecxz
lods
imul
mov
sub
pop
xor
test
int3
stos
js
jmp
lret
fsubs
cmp
dec
push
mov
es
pushf
sub
xchg
addl
test
repnz
dec
jbe
loope
or
test
cmp
adc
je
jle
jo
xchg
xor
push
lcall
push
data16
aam
inc
cvttps2pi
dec
icebp
je
and
inc
pop
inc
pop
inc
push
push
pop
pop
jbe
ret
rclb
jl
and
adc
adc
adc
mov
mov
fcoml
je
cmp
xchg
push
or
in
rolb
mov
test
mov
ds
pop
or
jns
cld
pop
adc
fisttps
sub
js
and
xchg
adc
or
cwtl
pop
dec
sub
add
mov
lock
movsb
daa
sub
mov
add
or
cli
adc
lcall
xor
test
movsb
xor
loopne
aad
inc
je
or
pusha
mov
pop
push
mov
mov
jl
adc
loope
loop
pop
test
mov
outsl
adc
cltd
add
fs
pusha
cmp
movsl
add
xchg
ret
pop
sbb
pop
xchg
ds
sub
loopne
pusha
gs
in
push
add
imul
bound
xchg
and
cmp
mov
cs
pusha
lods
fs
pop
andb
add
mov
lock
pop
inc
or
loope
in
push
insb
scas
dec
scas
sub
push
orb
jae
sub
cmpb
pop
insb
dec
call
xchg
dec
pop
xchg
or
push
pop
pusha
add
addl
jge
ljmp
inc
inc
js
shrl
sub
add
dec
add
ret
ss
inc
loope
pop
add
les
sub
ds
push
icebp
add
movsb
scas
test
test
dec
adcl
jl
sub
mov
pop
test
jl
or
xchg
xchg
or
sub
mov
sbbb
jo
pushf
mov
lcall
push
push
int3
add
mov
jnp
int3
arpl
movsb
inc
dec
dec
mov
adc
add
adc
shlb
dec
pop
cwtl
cwtl
jnp
dec
loopne
and
adcb
es
mov
lret
aam
mov
sub
xor
das
xor
daa
nop
sbbb
pop
lods
test
fs
and
cmp
adc
xchg
test
mov
sarl
fsub
or
jecxz
pop
push
lcall
out
call
dec
xchg
or
iret
pusha
mov
jo
pop
mov
or
add
outsb
jp
in
pop
and
outsb
and
xchg
sbb
push
nop
or
sbb
adc
jl
dec
sbb
pop
cs
sub
xor
das
dec
mov
add
inc
push
pop
cmp
dec
push
sbb
sub
cmp
mov
push
sub
and
xor
sbb
adc
roll
pop
clc
mov
pop
adc
popa
adc
cmp
test
cld
xchg
mov
mov
push
bound
lods
popa
enter
sbb
movsb
jl
scas
xchg
adc
and
inc
sahf
hlt
pop
pop
jbe
shrl
mov
lea
shll
mov
and
add
ds
push
xor
or
mov
lock
mov
adc
scas
repnz
or
stos
mov
stos
pop
mov
or
scas
or
jl
cmpsl
push
out
pop
push
in
mov
inc
inc
push
adc
push
lcall
push
push
and
outsb
jl
adc
loop
sub
lds
mov
add
jl
rorb
in
sub
into
xor
test
cmpb
inc
inc
jl
inc
or
sub
cs
lods
jl
inc
mov
and
sub
nopl
and
je
jbe
jl
dec
lods
add
mov
pop
popf
add
lea
js
leave
add
fchs
into
fsub
mov
push
subb
mov
sbb
push
push
insl
or
add
mov
cs
mov
or
addb
push
nop
xchg
and
sub
sub
mov
xchg
mov
xorl
in
nop
jo
xor
or
js
out
nop
rorb
inc
pusha
push
or
es
dec
insb
or
cmp
enter
xchg
inc
push
jns
or
int
lock
repz
sbb
sub
filds
push
dec
lock
aaa
dec
inc
pop
sbb
insb
cmp
or
xchg
in
push
data16
mov
xor
rcl
mov
popf
or
inc
lods
push
xor
push
mov
jns
int3
inc
pop
mov
or
icebp
cmpsb
pushf
lret
sub
inc
xor
cmp
push
pop
clc
dec
imul
jge
sbb
push
jl
and
lcall
sbb
enter
mov
jnp
add
je
mov
dec
bound
addb
rcll
dec
cwtl
filds
popa
cwtl
xor
inc
inc
lock
pop
dec
push
rcrb
loopne
inc
dec
mov
dec
imul
out
sbb
andl
cmp
jo
lock
popa
push
sbb
pusha
lock
push
pop
push
sbb
sub
xor
mov
mov
rcrb
and
or
push
lods
xor
rclb
xlat
add
subb
outsl
inc
loopne
or
test
add
aaa
mov
lret
fneni(8087
mov
jmp
mov
sub
adc
imul
dec
rorb
push
xchg
mov
and
dec
clc
adc
pop
sarb
mov
dec
orb
stc
leave
inc
mov
pop
add
imul
push
jb
fs
push
add
jne
sbb
mov
cmp
data16
das
aaa
cmp
fsubrs
mov
adc
adc
push
sbb
mov
orb
hlt
adcb
mov
cmp
dec
shlb
jns
outsb
test
mov
pushf
inc
or
add
test
insb
lret
or
dec
dec
mov
xor
subb
or
add
test
lods
aas
pop
jmp
sub
cmp
push
movsb
dec
inc
movl
sub
and
aas
inc
mov
fldenv
mov
xor
xchg
pop
data16
mov
pusha
adc
pushf
jae
lahf
lods
or
insb
xchg
sahf
sarb
cwtl
pushf
xor
clc
cmp
adc
imul
dec
and
icebp
inc
fcompl
jb
cwtl
bound
adcb
and
movsb
push
inc
mov
add
xchg
inc
add
pop
pop
sub
or
push
add
cmp
les
xchg
and
mov
pop
sbb
adc
clc
and
mov
inc
hlt
add
xchg
mov
adc
jo
adc
nop
mov
mov
pop
cmp
mov
mov
das
fcomp
inc
cmpb
mov
or
adc
add
push
xchg
or
or
sbb
jo
dec
dec
mov
lcall
test
es
xor
cmp
pop
cmp
ja
jp
push
push
xorb
xchg
test
push
jg
mov
mov
xor
dec
dec
mov
dec
cmp
mov
insb
mov
jmp
jb
sarb
jle
dec
lock
outsl
fwait
push
xchg
cmp
in
cwtl
xor
pop
jne
add
or
clc
and
sub
arpl
lea
mov
iret
add
sub
sbbb
push
cltd
enter
add
dec
jno
cmpb
xchg
adc
call
fdivrl
adc
xor
cmp
jg
inc
dec
add
push
cld
push
dec
jnp
adc
add
popf
jecxz
mov
sub
adc
pop
inc
pop
bound
addb
push
in
aam
bound
pushf
imul
add
adc
inc
ror
xor
shrb
adc
dec
push
lods
dec
pop
shr
gs
or
adc
popa
mov
sub
mov
mov
xchg
mov
adc
cmp
imul
mov
sahf
jecxz
hlt
xchg
and
jb
mov
mov
lods
mov
mov
ret
mov
add
adcb
xor
adc
loop
testl
lods
sub
hlt
lret
pop
pusha
sbb
mov
xchg
pop
les
ret
loopne
and
pop
gs
sbb
add
mov
mov
mov
add
xor
sub
xchg
sub
pop
add
dec
jb
pusha
or
xchg
lds
je
mov
jns
and
inc
arpl
cs
push
pop
lcall
pusha
rorb
test
and
pop
add
mov
add
dec
xor
outsb
jb
pop
mov
dec
gs
push
add
push
push
push
fs
test
sbb
add
jl
pop
push
xor
loope
bound
jbe
mov
push
les
dec
outsb
jns
fsubs
cmp
rcll
arpl
pop
je
inc
dec
dec
enter
cmp
push
sub
add
cld
popa
imul
dec
lea
mov
adc
cmp
addl
loopne
push
adc
or
aam
pop
inc
test
cwtl
inc
push
rcrb
or
pusha
and
insb
roll
sub
sbb
and
js
dec
nop
dec
xor
inc
push
pop
pushf
or
mov
in
lcall
mov
aas
pop
sub
sbb
jmp
mov
test
push
outsb
outsl
cwtl
push
and
inc
push
pop
into
dec
jno
cld
jmp
lcall
adc
mov
int
and
pushl
rcl
mov
imul
adc
cltd
or
add
mov
or
mov
pop
rorb
inc
outsb
jnp
adcb
cmp
in
idivb
in
mov
push
fmull
cmp
adc
inc
pop
cmp
dec
jbe
sbb
xchg
adc
leave
jl
roll
pusha
ds
loopne
sub
daa
insb
sbb
stos
addr16
mov
sub
sbb
orl
loopne
fdiv
adc
sarb
and
inc
test
lods
lock
add
dec
push
xor
sarb
movsb
xor
inc
cmp
and
fldl
lock
scas
mov
nop
jo
xor
cwtl
les
cmp
das
and
jne
adc
jne
clc
ss
push
call
divb
xor
fnstenv
jmp
pusha
dec
shll
inc
imul
cld
push
adcb
inc
outsl
jnp
jo
es
adc
mov
cwtl
pop
mov
inc
subb
inc
xchg
fadds
pusha
repz
xor
lock
mov
mov
test
test
sub
sbb
fmuls
adc
outsl
insb
inc
nop
sub
mov
cld
rcr
pop
lcall
xor
mov
mov
int3
xor
jb
mov
add
jbe
clc
pusha
test
rcll
pusha
adc
cld
pop
ror
outsl
push
test
orb
int
ss
dec
das
adc
inc
adc
dec
or
rorb
mov
imul
xor
mov
push
add
addb
fiaddl
leave
je
push
mov
mov
xor
sub
clc
ds
cmp
and
push
sub
cltd
adc
mov
or
and
sub
dec
adcb
or
movsb
xchg
and
xor
in
movsl
push
push
dec
into
cmp
add
sub
ds
mov
xchg
mov
cmp
push
pop
sbbb
and
cmp
aam
dec
sti
push
scas
loop
jbe
dec
sub
dec
sub
and
and
xor
pop
dec
push
icebp
inc
push
pushf
inc
mov
inc
clc
dec
pop
cmpsl
xor
xchg
ds
push
mov
andb
mov
inc
mov
cmp
xchg
inc
imul
add
push
and
and
lock
lcall
mov
pusha
test
call
faddl
push
fdivl
pop
adc
and
jmp
insl
jns
adc
add
mov
gs
nop
movsb
sub
sub
push
push
daa
mov
aam
jl
mov
jl
adc
aam
scas
push
int3
or
push
mov
mov
xor
xchg
subb
loope
xchg
add
mov
push
lahf
mov
push
sahf
dec
movsl
clc
in
sbb
push
imul
enter
xchg
int3
sub
add
xor
mov
jge
xorl
je
jmp
test
pop
push
cs
addr16
push
sarl
jo
hlt
cmp
sub
add
inc
movsb
adc
and
insl
popa
dec
dec
adc
insl
pusha
scas
or
movsl
rorb
pop
sbb
pop
adc
ror
cmp
lock
cmp
adc
inc
mov
sub
test
mov
lahf
mov
clc
xchg
sub
add
push
push
jl
test
jb
pop
mov
adc
or
cmp
imul
popa
sub
adc
add
sub
imull
aad
dec
and
cltd
clc
sub
dec
mov
inc
insl
jnp
pop
data16
dec
push
loopne
xor
mov
push
lcall
push
sub
ds
daa
cmp
add
jl
cmp
dec
jmp
xor
mov
push
xchg
sub
push
push
aam
inc
sub
movsb
cs
or
and
sub
les
mov
push
xchg
movsb
xor
jno
clc
adc
sbb
inc
dec
je
inc
push
jae
lock
xorl
add
je
mov
and
jp
test
je
aam
mov
mov
lret
xor
mov
cltd
sbb
adc
dec
cmp
inc
enter
mov
data16
xor
cmpb
loopne
fsubl
sub
cs
or
mov
ret
adc
or
dec
int3
je
dec
insb
push
and
dec
aam
inc
lods
scas
jbe
imul
adc
pop
in
add
adc
in
push
and
paddq
test
in
insb
sub
mov
xchg
mov
repnz
sbb
mov
jno
mov
push
insb
dec
bnd
cmp
inc
in
nop
das
pop
dec
inc
or
pop
fs
cs
pop
fs
xor
in
push
movsb
push
cld
sub
adc
inc
xchg
mov
xchg
andb
pop
addr16
or
pop
imul
add
jg
int
cmpsl
imul
nop
aam
cmp
mov
adc
xor
jae
push
popf
lahf
cmp
sub
lcall
pop
pop
and
xor
adc
and
es
popa
mov
fcom
lds
lods
mov
sub
mov
popf
and
pushf
mov
inc
packssdw
adcl
mov
nop
sbb
movsb
xor
stos
shrb
inc
cltd
adc
int
adc
or
push
in
or
dec
add
je
sub
xchg
or
push
inc
sub
aad
inc
or
pop
movsb
fcompl
xor
add
push
xchg
pop
push
push
or
mov
dec
or
cmp
lods
scas
pop
scas
and
add
xchg
lock
lret
add
je
clc
sbb
in
and
lods
sub
inc
lahf
adc
ss
sbb
and
xchg
xchg
sub
call
mov
adc
inc
dec
add
es
jl
xor
sub
adc
dec
push
push
loop
mov
inc
fiadds
cltd
sub
pop
jb
adc
mov
pusha
arpl
pop
fs
sub
push
rorb
sub
sbb
add
jns
mov
lret
adc
xchg
cmp
or
push
and
call
aam
repnz
sub
in
mov
sub
ds
adc
jle
adc
xchg
mov
cmp
mov
arpl
sub
adc
addb
lods
adc
push
push
test
adc
add
nop
sbb
pop
mov
in
cltd
and
fiadds
and
pop
es
push
inc
and
ret
jns
cmovbe
loop
or
dec
push
sbb
je
mov
test
sub
lcall
inc
mov
pop
inc
imul
pusha
push
jle
rcrb
adc
or
fsubrs
adc
sub
and
lcall
sbb
add
lds
lahf
stos
test
adc
and
sbb
mov
pop
pop
mov
add
call
mov
pop
add
push
fs
js
and
icebp
int3
or
sub
mov
dec
or
shlb
adc
cmp
sbb
jae
mov
add
pusha
fcoms
lock
cmp
push
xor
or
sub
ds
or
lods
lods
js
xchg
in
and
adc
adc
xor
aam
sub
je
mov
xchg
in
dec
or
mov
rclb
das
mov
add
and
sbb
dec
sbb
xlat
add
cmp
sub
sbb
sub
pop
cmp
push
and
test
pop
jmp
hlt
gs
movsb
jecxz
mov
jg
xor
mov
pusha
cmc
adc
enter
or
adc
inc
je
aam
xchg
sarl
hlt
or
cmpb
adc
imul
rolb
les
cmp
inc
outsl
jle
pop
lea
fstpl
orl
pop
jnp
inc
jo
imul
and
adc
and
push
xor
aas
add
and
cmp
aam
xchg
mov
jo
pop
and
or
and
mov
jecxz
lret
movsb
imul
cmpsl
jno
inc
push
dec
adc
in
add
xor
sub
pop
inc
in
push
adc
das
dec
mov
mov
add
in
push
add
inc
push
insb
dec
mov
and
loopne
cmp
rol
inc
inc
add
cmp
xor
lds
cmpsl
sahf
mov
push
mov
cmp
dec
pop
insb
push
xchg
adc
call
inc
enter
jmp
push
pop
pop
xchg
fistps
inc
mov
and
inc
aas
imul
sub
aaa
enter
lret
mov
dec
jns
ljmp
ret
fdivs
mov
loope
jns
sub
xchg
add
pusha
nop
sbbl
xor
loope
xor
pop
mov
outsb
enter
stos
mov
dec
jge
xor
mov
xchg
dec
jae
roll
insb
lock
test
adc
dec
mov
dec
sbb
fs
xchg
and
push
test
or
and
xor
inc
imul
dec
adc
sbb
add
xchg
loop
inc
insb
inc
mov
xor
jo
mov
pop
frstor
xor
rorl
dec
add
in
cmp
rolb
mov
pop
adc
and
sbb
sub
adc
adc
scas
das
cmp
out
lods
mov
enter
mov
fs
movsl
rclb
das
or
pop
or
adc
and
inc
lea
aas
adc
sub
cld
jecxz
push
mov
loopne
daa
jecxz
push
or
or
aaa
loop
xor
add
inc
pusha
sub
push
pop
pusha
shll
dec
and
mov
xor
xchg
cmp
mov
sahf
hlt
sahf
test
add
das
bound
and
bound
mov
and
hlt
addl
adc
mov
push
jns
in
in
mov
aam
and
and
mov
iret
insb
inc
add
call
or
clc
add
add
pop
sbb
push
or
or
dec
add
in
push
movsl
aam
xchg
loopne
fmull
dec
ja
dec
cmp
pop
push
pusha
mov
dec
mov
push
sub
pusha
push
je
mov
sub
adc
add
mov
pop
inc
orb
adc
xor
test
leave
jno
mov
push
dec
adc
adc
sub
pop
mov
push
jo
jl
adc
jl
push
or
subb
and
add
sahf
lahf
repnz
enter
or
sbb
cmp
into
es
adc
enter
pop
adc
sub
adc
dec
int
cmp
mov
nop
mov
js
lock
mov
sub
enter
cmp
xchg
xchg
and
sar
sbb
or
add
dec
dec
mov
and
enter
add
mov
push
rolb
xchg
add
mov
ljmp
data16
dec
or
mov
pop
or
test
inc
pusha
dec
enter
and
sbb
adc
sbb
add
or
test
sub
jo
push
dec
and
js
mov
add
jl
pop
or
sbb
jae
shrb
mov
xchg
or
fsts
bound
fs
bound
inc
dec
inc
sub
inc
dec
inc
sub
xchg
adc
and
dec
xor
xchg
pop
fs
rcrb
dec
mov
sub
xchg
or
sub
push
pusha
cmp
dec
inc
ret
and
add
insl
dec
jnp
jl
pop
push
mov
int3
loop
divl
add
je
add
and
int3
xor
icebp
int
mov
sbb
lock
jl
dec
adc
sub
sbb
or
push
fmull
insb
cmp
int3
in
push
or
je
pop
sbb
nop
inc
inc
dec
mov
xchg
sbb
insb
add
addb
rcll
xor
adc
xor
jl
arpl
push
push
mov
fsub
roll
and
lret
sarb
pusha
mov
mov
fmull
mov
out
int
add
movsb
sub
add
xchg
and
inc
mov
xchg
add
add
lods
mov
xchg
int3
pop
cwtl
shrb
and
inc
arpl
inc
je
add
pop
mov
daa
push
cmp
gs
cmp
add
push
adc
jle
jns
xor
cmp
rcr
or
adc
pop
mov
int
sub
icebp
clc
mov
dec
outsl
sub
je
mov
adc
push
or
jge
and
sbb
in
sbb
and
cmp
je
js
jl
sub
sub
loop
pop
movsb
and
dec
cli
pushf
pop
sub
sub
mov
dec
arpl
pusha
adc
dec
adc
push
and
xor
hlt
dec
in
lret
lahf
add
or
or
sub
lock
mov
imul
je
push
sbb
or
sbb
or
push
add
jnp
cld
mov
pushf
shlb
push
push
sbb
test
fsubrs
loope
adc
sub
lock
sbb
ja
lods
push
cmp
xchg
les
adc
sub
testl
dec
jns
and
pusha
and
jbe
inc
pop
es
mov
jo
xchg
xchg
shrb
sub
xchg
add
lret
lret
mov
loopne
cmp
sbbb
xchg
jno
in
inc
les
inc
sub
sbb
aam
xor
sub
cmp
movsb
dec
je
or
adc
sub
cmp
xchg
les
push
or
xor
dec
xor
test
xchg
adcl
xor
add
jg
out
and
aam
lret
adc
jge
jns
hlt
stos
les
cli
xchg
mov
xlat
mov
dec
adc
push
xchg
push
adcb
or
ja
push
add
pushf
test
popf
mov
push
adc
pushf
xchg
sbb
je
enter
xchg
pop
das
test
push
xor
pop
nop
sbb
rorl
lods
dec
les
out
mov
lret
push
cld
stc
les
xchg
adc
cmp
into
and
lods
nop
andb
or
adc
cwtl
pop
icebp
test
inc
adc
or
dec
push
push
dec
pusha
sub
jecxz
aam
sub
push
or
mov
and
and
or
lock
pop
popf
sahf
lahf
sub
or
dec
or
cmp
lods
sbb
imul
sbb
dec
call
pop
das
mov
sbb
adc
es
sbb
mov
adc
mov
cmp
fs
push
dec
dec
dec
xor
aam
mov
daa
pop
add
adc
out
mov
fiaddl
add
sub
mov
je
mov
leave
adc
or
mov
mov
subb
pusha
push
sub
cld
xor
add
adc
mov
aam
sub
push
dec
popf
sub
or
aam
and
xor
ror
imul
mov
lods
push
mov
js
sbb
scas
dec
adc
mov
lds
sub
dec
add
inc
in
and
inc
add
cmp
lods
and
ss
movaps
cmp
je
and
xchg
addb
adc
sbb
sahf
mov
jnp
xor
arpl
pop
je
add
pop
pop
jle
dec
jbe
jmp
sbb
or
scas
lds
mov
xor
xor
jmp
and
bound
xchg
push
test
xchg
in
pop
loop
nop
fs
lods
and
mov
mov
sub
je
mov
jg
cmp
pop
cltd
mov
scas
mov
lods
inc
mov
cmpb
push
or
mov
push
sub
xchg
sbb
add
inc
and
xchg
js
mov
xorl
sbb
rorl
dec
cld
filds
or
hlt
mov
adc
enter
jno
adc
stos
xor
je
in
lcall
or
addr16
sub
add
sbb
jb
sbb
push
je
xchg
add
test
and
push
inc
cmp
mov
sub
adc
push
stos
pop
push
mov
dec
mov
mov
lock
pop
adc
push
stos
or
xchg
push
or
adc
mov
rorb
or
xchg
push
aas
cmpb
clc
dec
dec
sub
adc
outsl
xor
jo
rolb
dec
cmp
pop
pop
nop
mov
jl
pop
xor
push
daa
xor
xlat
adc
pop
mov
das
popf
adc
bound
mov
dec
add
cmp
add
in
sub
aam
lcall
mov
rcll
mov
sbb
mov
push
hlt
cltd
cmp
sbb
imul
pusha
cmp
and
mov
insl
cmp
fisubl
icebp
push
cmpsb
jl
cld
cmp
sbb
mov
movsb
xchg
shlb
sbb
mov
movsl
xor
sbb
dec
hlt
dec
lcall
xor
aam
fldl
xchg
nop
mov
sub
dec
xor
cld
or
and
sub
jmp
hlt
jmp
xor
test
je
jns
leave
aam
or
pop
pop
popa
add
sub
call
jl
adc
data16
lea
enter
mov
daa
jno
clc
roll
pop
dec
fucomp
adc
mov
jbe
jl
lods
adc
dec
push
xor
clc
pop
pop
and
enter
mov
jns
hlt
lret
adc
sub
or
fidivs
adc
mov
add
inc
jo
push
nop
je
dec
pop
pop
lea
pop
push
sahf
mov
movsl
add
int3
cmpb
add
push
inc
push
dec
dec
ss
xchg
in
add
lods
insl
xchg
test
movsb
cwtl
xchg
mov
xorl
in
or
xor
push
sub
mov
cwtl
cltd
adc
roll
test
sbb
scas
add
mov
sub
dec
dec
enter
jecxz
or
rolb
xor
adc
mov
lods
je
and
or
test
push
cld
mov
dec
push
dec
mov
and
arpl
dec
aad
scas
pop
adc
xor
test
je
pop
add
fimull
xchg
xchg
cmp
int3
xchg
jmp
lcall
js
cmp
inc
add
xor
xor
movsl
in
xchg
andb
add
sbb
jo
mov
lret
mov
stc
cmp
jecxz
fadds
mov
pop
cmp
mov
cmp
add
rolb
cmpsb
roll
stos
sub
sbb
adc
lods
dec
cwtl
pop
mov
aam
jmp
mov
adc
mov
dec
adc
sub
dec
iret
push
sub
mov
loop
sub
xchg
dec
pusha
dec
jge
lea
loopne
pushf
or
aaa
pop
fsubrs
sub
das
ss
leave
mov
push
or
fcomps
inc
dec
add
xchg
lea
push
adc
aam
xor
hlt
xchg
hlt
rolb
adc
sbb
movhps
into
fs
push
lea
int3
and
mov
xacquire
mov
inc
mov
cwtl
push
fsubrl
mov
cmp
adc
push
sbb
js
addb
sbb
in
lea
test
lods
les
shlb
je
and
cld
insb
andb
popf
fadds
sub
jl
pop
shrb
mov
sub
mov
push
sbb
movsb
mov
inc
cwtl
mov
ficomps
jg
orb
mov
call
xor
sub
push
std
and
adc
test
inc
je
pushf
lret
jl
stc
adc
int
sub
add
mov
cmp
jb
dec
aaa
mov
xor
movsl
jo
pop
dec
sbbb
push
add
xchg
sub
inc
xor
mov
pop
push
lahf
insb
fcompl
xchg
dec
adc
dec
js
jo
cmpl
ret
dec
mov
lods
lret
xor
and
mov
pop
sub
add
sbb
and
es
or
sub
inc
jo
dec
cmpsl
adc
stos
je
add
sub
cmpsl
into
mov
cli
in
cmp
int
jno
aam
dec
nop
iret
rolb
xor
xchg
in
push
or
int3
lock
adc
daa
enter
dec
movsb
and
push
mov
mov
push
mov
js
xchg
xchg
push
sub
dec
or
out
rolb
stos
sub
mov
lret
add
sbb
mov
fildl
xor
test
sbb
sbb
mov
rolb
icebp
in
daa
je
and
loopne
and
mov
movsb
clc
push
inc
icebp
mov
push
sub
mov
shr
dec
rorb
dec
out
pop
pop
mov
sub
or
orb
stos
in
sbb
subb
or
adc
data16
lock
sub
push
add
pusha
imul
jae
sbb
cmp
dec
adc
cmp
hlt
lret
dec
adc
or
xchg
lea
jl
mov
xorb
xchg
lods
push
movsl
insb
sub
add
das
aas
pusha
clc
test
xchg
sbb
pop
jecxz
sahf
adc
add
dec
ret
adc
shlb
or
sub
xor
sbb
and
leave
lods
and
fmull
hlt
xchg
clc
jae
out
add
jo
jbe
cmp
jmp
sbb
outsl
xchg
js
mov
sub
jp
pop
xchg
mov
loope
and
lods
or
and
notl
lock
in
sub
jns
daa
cld
adc
sbb
nop
jg
inc
orb
mov
sahf
sub
sub
lea
pop
dec
enter
sbb
cmp
js
jo
sbb
les
and
shlb
add
rol
adc
mov
mov
ds
shrl
test
cmpsb
jl
les
mov
or
mov
push
push
or
inc
sub
adc
or
and
push
shrb
int3
movsl
push
js
shlb
and
sub
out
adc
rcr
jl
sub
xchg
push
nop
dec
sub
das
mov
dec
xchg
or
push
xchg
and
jp
push
scas
push
pop
mov
outsl
icebp
insb
pop
sub
mov
daa
sbb
cmp
or
sbb
inc
dec
dec
xor
xor
test
sub
aas
and
sahf
ficoms
mov
xchg
and
movsb
lahf
pop
cmpsb
cwtl
stos
cld
in
mov
jns
lods
add
rclb
lods
mov
shrb
dec
mov
and
lcall
and
imul
sbb
sbb
xor
adc
sub
aam
pop
jbe
dec
mov
mov
test
sub
or
adc
aaa
incb
mov
mov
cmpsl
adc
in
add
sub
dec
add
or
movsb
lods
xchg
loop
cltd
pop
imul
xor
stos
pop
push
mov
mov
add
xchg
lds
sub
push
sbb
stos
and
mov
inc
push
sub
cmpsb
and
sbb
add
jb
adc
inc
dec
andb
outsl
dec
jno
js
inc
add
add
adc
or
add
push
lods
mov
push
pop
in
mov
pop
xor
dec
hlt
mov
sub
nop
sub
mov
aad
clc
pop
mov
xchg
andb
inc
mov
sbb
push
jg
outsb
mov
jns
daa
dec
push
inc
push
xor
pop
leave
pop
aas
test
scas
and
fildll
pushf
addl
sbb
add
lods
inc
push
sub
mov
sub
outsl
xchg
test
cmp
loop
pop
gs
cld
js
jnp
fs
push
loopne
pushf
in
test
sbb
jae
xchg
lea
incb
jle
cmp
mov
sbb
aas
inc
test
mov
adc
xorb
jg
sbb
add
mov
cmp
sub
sbb
xor
mov
nop
sbb
cmpsb
xchg
cmp
mov
lods
aam
lock
pop
and
dec
dec
dec
mov
pop
and
xchg
clc
pop
lahf
icebp
pushf
push
pop
dec
sub
mov
out
fcomps
jnp
enter
xor
sti
test
sub
loopne
in
push
test
xor
mov
fs
icebp
insb
jp
shlb
inc
aam
loopne
inc
inc
jno
jae
dec
rclb
out
enter
test
inc
xor
and
adc
lock
pop
mov
push
insb
jecxz
or
push
bound
cmp
pop
inc
in
fcoml
inc
scas
or
and
pop
lods
clc
mov
aam
xor
daa
dec
push
cld
int3
dec
xchg
pusha
imul
fs
jno
pop
js
insl
or
gs
aad
fdivr
cld
inc
cmp
jge
mov
ss
nop
adc
gs
movsb
xchg
or
mov
imul
je
insb
leave
test
je
lret
sub
lods
cmp
mov
mov
push
and
inc
gs
cmp
adc
push
bound
or
aam
pop
dec
lock
aas
popf
inc
aam
bound
xchg
mov
and
fdivrl
adc
and
mov
dec
xchg
popf
and
push
xor
mov
arpl
or
in
and
sbb
sub
inc
jp
xchg
daa
sub
mov
and
out
and
xchg
sub
inc
inc
inc
pop
xchg
jle
aaa
add
not
popa
sbb
jl
ss
repnz
sbb
jl
push
xchg
in
dec
data16
dec
mov
cli
and
test
mov
dec
cld
fs
mov
dec
enter
sub
pop
fadds
popa
jg
or
dec
add
inc
jge
xchg
adc
adc
adc
and
cmp
pop
xchg
mov
es
add
movsb
ficoms
loopne
adc
sbb
xor
push
xchg
andb
adc
movsl
cs
pop
cmp
or
mov
and
movsb
lea
add
mov
bound
sub
or
pusha
xor
mov
mov
or
lcall
aad
or
and
fcoml
and
sub
bound
mov
cmpb
sub
outsb
mov
cmp
cld
mov
jne
xchg
or
inc
mov
loopne
adc
push
pop
xor
test
xor
jle
mov
fs
imull
lds
or
je
pop
lock
lds
inc
push
imul
adc
mov
dec
loope
cs
and
push
xor
dec
inc
add
or
fisubrl
jne
pop
dec
dec
inc
push
and
pusha
xchg
fdivs
and
xor
xor
sbb
mov
inc
cmp
fmul
imul
fsubl
or
hlt
dec
rcll
andb
inc
and
and
inc
push
sarl
add
dec
leave
repnz
pop
pushf
mov
mov
inc
sub
imul
cmp
push
les
pushf
or
sub
dec
sti
and
adc
aas
inc
aad
sbb
enter
in
test
adc
jp
js
imul
xor
clc
dec
popf
cmp
mov
leave
sub
push
cmp
pop
or
in
xchg
xchg
jo
enter
mov
movsl
dec
cld
and
xchg
dec
je
push
or
inc
dec
and
sbb
sub
and
push
int3
xchg
or
imul
les
mov
add
aaa
hlt
dec
push
sub
cmpsb
enter
or
cltd
add
and
and
dec
or
nop
push
ss
popa
popf
sar
imul
enter
lods
test
mov
inc
add
sbb
orb
fists
jmp
cmp
sbb
adc
int
cmp
mov
movsl
imul
insb
push
mov
xor
push
dec
pop
addb
call
inc
sub
data16
mov
or
xchg
sub
jb
cmp
mov
clc
sub
add
inc
insb
jne
jo
js
add
test
rclb
add
icebp
clc
dec
jl
call
inc
push
dec
jl
nop
fsubs
push
xor
inc
xchg
dec
leave
xchg
cmp
xchg
aam
in
pushf
nop
mov
dec
adc
int3
fwait
sbb
xor
aad
clc
sub
and
sbb
sub
clc
outsl
or
js
sbb
in
jo
sbb
cwtl
xchg
stc
and
dec
lcall
dec
call
insb
cmp
xchg
xchg
jo
bound
cs
cld
insb
lds
and
and
xor
or
push
inc
sub
sub
xchg
sub
xchg
pop
xor
pop
jae
js
add
lods
jl
insb
or
movsb
cwtl
sub
and
bound
jno
sub
test
mov
das
xor
mov
push
sub
and
imul
dec
inc
lock
pop
inc
and
cmp
rcll
inc
orb
insb
es
adcl
sbb
adc
dec
pop
dec
jmp
das
cmp
aam
outsl
dec
jge
fs
les
int3
or
mov
cwtl
xorb
repz
sub
adc
ss
or
in
mov
cmp
loop
in
and
test
rcl
xor
push
ss
subb
adc
xor
orb
mov
movsb
dec
cmp
shlb
ret
fstl
jl
je
xor
or
or
xor
les
mov
mov
pop
cmp
adc
cmp
pop
in
cmp
insl
push
or
pop
insb
loop
pop
and
data16
mov
push
xor
mov
pushf
inc
xchg
aam
test
jo
js
cwtl
data16
mov
mov
dec
add
movsb
cmp
jl
lret
or
js
cmpsb
inc
int3
push
push
push
or
push
xorl
pop
gs
add
sbb
xchg
inc
xor
push
push
mov
call
sub
fsubs
xchg
cmp
int3
adc
push
or
push
hlt
ss
test
mov
dec
data16
and
inc
imul
push
jle
adc
sub
adc
xchg
js
adc
or
sbb
insb
imul
cltd
or
addr16
cld
pop
mov
xchg
pusha
cmpsb
or
sbb
xor
lds
cwtl
insb
sbb
inc
and
imul
imul
shlb
ja
pop
mov
dec
pop
sub
js
insb
push
dec
mov
and
xor
mov
bound
or
fdivrl
pop
and
jo
or
xchg
hlt
mov
xor
in
bound
leave
enter
test
dec
adc
xchg
in
inc
push
pop
push
je
adc
data16
and
push
in
mov
jb
inc
dec
cmp
push
repz
jns
dec
push
xchg
rolb
dec
and
and
pop
xor
loop
je
pop
sbb
pop
js
shll
fsubrl
and
inc
cwtl
leave
bound
sbb
xor
loopne
popa
dec
sbb
add
addl
push
xor
cmp
enter
inc
push
inc
dec
mov
xor
cld
cltd
mov
mov
push
movsb
and
mov
mov
add
pop
lea
and
leave
push
dec
aad
ljmp
mov
adc
sbb
push
xor
dec
mov
jb
or
stos
and
scas
test
leave
test
cld
das
xchg
pop
popf
clc
sarb
add
dec
lods
sub
inc
cmp
outsb
in
xchg
or
xchg
pop
pop
or
and
aaa
cs
stos
test
nop
cltd
and
sub
dec
in
sbb
cs
dec
sbb
dec
jns
and
fmuls
call
clc
xchg
cwtl
int3
cld
bound
repnz
push
movsb
rcr
xchg
and
cmp
mov
cmp
test
cmp
in
push
test
xchg
je
cmp
int3
sbb
inc
inc
or
mov
dec
sub
or
adc
inc
or
mov
nop
popf
sub
dec
pusha
dec
adc
je
in
pop
adc
insb
cld
bound
into
adc
imul
adc
popa
imul
and
imul
cld
jne
incl
and
pop
sbb
or
push
push
xor
sbb
or
and
shlb
inc
into
nop
sub
xor
enter
xor
and
sub
xor
pop
mov
shlb
jmp
cmp
and
and
pushf
in
cwtl
in
fs
or
inc
sbb
adc
mov
sub
dec
xchg
rcll
pop
je
cmp
shlb
sarl
inc
dec
dec
dec
dec
xchg
adc
jge
movsb
ficompl
dec
adc
lcall
js
dec
je
sbb
into
xor
loop
inc
test
and
or
repnz
das
inc
adc
fisttpl
push
mov
sbb
das
incb
loopne
xor
pop
xchg
call
sub
pop
jnp
sbb
xchg
pop
cmp
add
inc
dec
pusha
inc
sub
inc
xor
mov
pop
sub
cmpsl
adc
or
test
or
pop
push
xchg
leave
dec
mov
fsubl
ljmp
mov
aaa
dec
aas
clc
dec
mov
cmp
push
sub
fisttps
sbb
adc
imul
jne
xlat
ret
bound
inc
push
pop
pusha
dec
jo
inc
pop
lcall
jmp
dec
mov
inc
xchg
lock
add
inc
push
je
cmp
je
xor
movsb
dec
push
enter
mov
sub
xor
xor
pushf
inc
dec
mov
mov
je
sub
out
daa
jl
inc
inc
inc
sub
adc
cmp
lcall
push
sub
push
rorb
xor
test
adc
cmp
lods
xchg
mov
push
xorb
fcoml
insl
hlt
dec
adc
xor
mov
dec
mov
repnz
xor
cmp
and
cmpsl
jbe
and
mov
dec
sbb
addl
jmp
ja
dec
addb
xor
mov
inc
mov
imul
dec
sub
movsl
push
subb
pop
adc
xorl
dec
jl
mov
push
xlat
pop
dec
adc
adc
shl
fs
jno
dec
jns
icebp
lock
roll
imul
test
data16
mov
es
push
dec
adc
add
sbb
xor
je
push
inc
dec
add
push
sub
mov
mov
mov
inc
jo
je
inc
pop
vxorps
sbb
test
inc
test
movsb
cmp
das
mov
mov
sbb
or
mov
mov
jo
hlt
aam
mov
cwtl
xchg
pop
popa
jnp
hlt
or
jne
xchg
lock
scas
hlt
mov
xor
cld
fcompl
std
icebp
xlat
jnp
into
iret
rclb
aam
mov
int
cmp
add
pop
and
ds
insl
dec
jo
mov
pop
gs
je
aam
cwtl
test
cmp
sbb
mov
mov
cmpsb
test
sub
dec
imul
xorb
inc
sbbb
outsl
adc
sub
pop
pusha
call
pop
fldl
fistpll
test
loopne
je
and
das
sahf
push
pop
pop
movsb
dec
ret
mov
aas
sub
pop
arpl
mov
jbe
js
jle
fcompl
enter
inc
loopne
cmpsb
xor
ja
je
rol
ret
clc
xor
mov
mov
sub
xchg
clc
pusha
mov
inc
and
jae
pop
jns
enter
xor
mov
adc
mov
sahf
sub
sub
adc
nop
faddl
xchg
cmp
pusha
dec
sbb
lea
test
mov
gs
test
mov
mov
loope
out
fs
das
ljmp
test
mov
cmpsl
mov
nop
fmuls
in
push
shlb
adc
push
mov
adc
insb
mov
and
pop
mov
sub
or
mov
adc
clc
cmp
xor
jae
jnp
or
nop
cmp
sbb
mov
jnp
movsl
jo
mov
je
clc
and
mov
mov
xchg
jae
cwtl
daa
inc
dec
and
je
mov
or
aaa
adc
jno
xor
or
lcall
inc
dec
loopne
and
xor
and
popf
into
addr16
mov
ret
mov
aas
loop
dec
call
pop
hlt
in
scas
adc
pusha
or
jge
dec
jmp
pusha
test
add
pop
movsl
bound
sub
and
pop
fcmovu
inc
xor
mov
fsubrs
inc
push
push
xor
enter
jg
rcl
and
sub
loop
xchg
jns
dec
sub
xchg
cmp
mov
cmp
loop
vfrczpd
pusha
std
mov
loopne
mov
mov
push
mov
dec
and
xchg
mov
add
adc
push
adcb
adc
sub
inc
mov
inc
imul
sbb
pusha
sbb
pop
mov
addb
lea
insb
arpl
fdivrl
mov
mov
pushf
dec
js
pushf
mov
nop
mov
and
sub
and
insb
or
adc
or
in
mov
xchg
js
adc
pop
xchg
les
xchg
xchg
mov
mov
cwtl
aad
pop
mov
xchg
lods
xchg
dec
mov
mov
mov
dec
dec
cmp
and
and
icebp
cmp
adc
or
push
and
sbb
and
js
jbe
or
dec
add
jp
adc
daa
cmpsb
cmpsl
fdivp
dec
pop
inc
xchg
aad
mov
adc
or
aam
mov
sub
sbb
ret
pusha
mov
cmpb
pop
fdivr
or
xor
inc
pop
sub
mov
and
or
inc
xchg
inc
dec
out
sub
mov
fcomps
dec
push
inc
jns
pop
and
cmp
and
adc
jge
sub
sub
cmp
iret
adc
mov
push
clc
and
push
aaa
pop
add
inc
insb
jns
xchg
movsb
jne
fmull
pop
xchg
cmc
cmp
je
adc
push
adc
jle
mov
or
push
fs
push
jno
and
mov
loope
mov
mov
aam
pop
fldl
das
mov
xchg
push
nop
add
adc
scas
adc
or
ret
jmp
inc
and
xchg
or
xor
popf
mov
inc
fmuls
jo
in
int
mov
sub
adc
dec
test
pusha
bound
adc
xchg
fdivrl
mov
mov
les
push
js
rcrl
clc
sbb
into
xor
mov
xchg
adc
mov
dec
je
and
pop
popa
cld
pop
gs
xchg
les
fmull
mov
jmp
inc
test
inc
icebp
mov
lock
nop
push
sub
and
mov
sub
aam
sub
lods
push
dec
and
sub
aas
add
cmp
cld
cld
xchg
les
repz
and
dec
sbb
aam
mov
nop
xor
and
movsb
inc
pop
add
pop
pop
mov
daa
xchg
jo
cmp
movsb
movsl
mov
ljmp
jmp
aam
rolb
movsb
rolb
mov
xor
mov
jo
pop
outsl
adc
cmp
lret
or
adc
adc
int
aaa
adc
dec
or
adc
jl
or
imul
leave
sbb
adc
mov
shlb
pop
dec
imul
adc
adcl
pop
ja
mov
clc
outsl
hlt
cwtl
addr16
insl
outsb
inc
lock
sub
insb
mov
js
in
jmp
mov
and
sarb
jbe
xchg
dec
xchg
gs
ds
add
test
int
lds
jmp
jl
test
lcall
dec
ror
jp
lock
push
dec
mov
cmp
mov
clc
dec
sub
mov
adc
mov
push
js
daa
test
jns
and
test
mov
jmp
xchg
xor
push
add
pop
hlt
dec
mov
mov
inc
pusha
mov
int3
or
pop
sub
mov
xor
and
xchg
out
cmp
aam
and
mov
repz
sub
xchg
adc
xor
mov
dec
lods
test
pop
lds
adc
mov
push
loopne
xor
pushf
rcrl
cmpsl
clc
or
push
inc
outsb
jnp
adc
and
adc
adc
jnp
adc
xchg
gs
push
add
test
mov
and
mov
call
adc
mov
dec
and
jmp
gs
ja
in
les
cmp
mov
xchg
andb
xchg
and
push
lea
in
cwtl
and
dec
fs
mov
dec
and
hlt
lea
jo
jb
adc
test
out
lcall
daa
testb
lods
sbb
rclb
mov
test
xor
mov
clc
fisubl
jnp
addr16
pop
mov
loopne
daa
xor
mov
adc
xchg
push
sbb
shr
mov
rcll
aad
inc
and
roll
clc
adc
xchg
sbb
pusha
dec
push
cmpsb
mov
das
rclb
shlb
mov
out
imul
push
rcrb
adc
sbb
sub
sub
pop
add
jo
add
mov
and
daa
dec
push
jl
dec
pusha
es
je
sub
cmp
lret
test
jb
xor
stos
add
adc
std
mov
xchg
inc
imul
movsl
push
fs
test
adc
imul
xor
add
call
add
mov
add
rolb
xor
scas
mov
loope,pn
cmp
xchg
aaa
dec
aas
adc
sbb
daa
call
dec
push
clc
dec
sub
mov
hlt
test
sub
mov
pop
das
fs
mov
mov
cs
out
pop
mov
add
xchg
push
hlt
mov
mov
xor
and
inc
push
inc
mov
insb
sbb
inc
dec
sub
pop
push
lea
dec
adc
test
in
iret
push
mov
sbb
lods
lea
cld
shlb
and
pop
add
enter
mov
push
sbb
add
dec
xchg
mov
or
testl
xchg
mov
pop
rorb
xor
int
inc
and
sub
xchg
sbb
inc
push
and
pop
loop
jg
and
cmpsl
pop
test
enter
mov
aaa
in
sbb
aas
repnz
hlt
mov
pop
mov
scas
bound
fstps
dec
pop
aam
sbb
lahf
adc
adc
jecxz
mov
mov
pop
jb
dec
nop
push
ss
pusha
mov
repz
cmp
mov
movsb
das
cs
enter
push
aad
push
call
dec
dec
jl
cmpsb
pushf
mov
mov
in
sti
js
xchg
sbb
add
sbb
clc
js
jbe
jnp
call
ret
xor
ds
sub
sbb
cmp
pop
push
mov
aas
enter
add
enter
adc
ficompl
xchg
push
cmp
xchg
out
dec
adc
test
iret
pop
pop
into
cmp
clc
int
cmp
push
push
lock
and
out
add
cwtl
lcall
and
jecxz
std
push
xlat
or
pusha
dec
pop
sub
movsl
push
sub
rorb
sub
sub
nop
pop
mov
lock
mov
mov
bound
shrl
imul
or
dec
pop
scas
and
push
dec
dec
mov
cmp
jne
jmp
adc
lods
loop
adc
hlt
imul
dec
push
data16
das
and
mov
rcl
ss
sbb
push
lock
mov
xchg
mov
cmpb
popf
sbb
add
or
push
push
pop
mov
insl
imul
lret
hlt
dec
lods
xchg
mov
pop
inc
shrb
lods
pop
lods
repnz
mov
cmpsb
inc
roll
mov
call
movsl
cmp
adc
stos
pushf
call
je
pop
in
cld
rcll
or
sub
aaa
push
clc
in
shl
je
sub
sub
and
dec
dec
mov
cmp
inc
stos
sub
xor
pusha
cmp
subb
push
sbb
push
movsl
mov
int3
cwtl
daa
adc
inc
aam
ret
pop
jae
movsl
xchg
dec
ret
and
add
sub
insb
mov
bound
movsl
xchg
pushf
lock
cmpsb
sub
pop
test
in
add
movsl
scas
mov
into
cli
cmp
adc
add
daa
sub
mov
add
insb
test
mov
cmpsl
inc
or
push
fadds
outsl
jge
and
add
adc
test
imul
xchg
pop
or
xor
mov
sti
sub
jle
pop
aad
sub
add
cmp
pop
sub
dec
fcompl
mov
sub
insl
mov
sub
jp
cwtl
jg
pop
jae
adc
dec
hlt
mov
push
push
test
pop
loop
xchg
test
cmp
adc
jno
leave
mov
and
cmp
inc
dec
pop
push
imul
out
pop
das
dec
je
push
movsb
clc
jo
dec
cmp
xchg
inc
sub
mov
mov
dec
fimuls
push
clc
nop
xchg
xchg
push
rorb
mov
roll
adc
lods
clc
or
cmp
jle
dec
mov
push
xchg
fs
daa
cmp
gs
and
inc
sbb
dec
sub
cmpsl
xchg
mov
jo
jo
xchg
jno
dec
sub
sub
jae
movsl
sub
pop
push
cltd
call
cwtl
lods
mov
imul
adc
adc
lock
jle
lea
orb
push
push
sub
and
sub
cli
leave
enter
in
dec
add
pushf
in
add
xlat
test
fs
imul
movsb
js
mov
nop
lock
bound
lock
inc
sbb
out
stos
call
cmp
cltd
les
and
mov
sbb
nop
pop
sub
je
mov
ljmp
or
and
inc
mov
out
call
jle
shlb
cmp
les
jmp
orb
test
dec
leave
fsubrs
notl
rolb
mov
pop
pop
pop
loopne
pusha
jecxz
mov
rcl
xor
aad
xor
test
adc
pop
and
pop
dec
in
rcrl
sub
cmp
sub
mov
adc
push
pop
mov
mov
mov
lcall
mov
popa
adc
arpl
les
mov
and
and
popf
adc
and
inc
jge
and
sub
arpl
sbb
mov
adc
test
cmp
imul
jp
adc
add
cwtl
fimull
jmp
cwtl
jbe
mov
adc
adc
call
test
and
inc
in
dec
push
dec
push
and
sub
and
push
in
or
lods
hlt
jmp
clc
test
pop
push
and
xlat
testb
mov
xor
sbb
push
movl
sub
add
sbb
push
add
add
add
mov
loope
xor
push
sub
adc
aaa
adc
inc
sbb
insb
adc
sbb
mov
xchg
mov
mov
mov
pushf
dec
adc
fs
cmp
cltd
adc
inc
icebp
and
pop
imul
es
jns
mov
adc
aad
mov
push
sub
inc
fldl
pushf
or
scas
add
push
push
sub
xchg
dec
xchg
or
xor
je
fsubl
cmpsb
add
imul
jbe
lahf
mov
pop
cmp
in
add
cmp
lret
pop
stc
clc
inc
and
fsubrl
cmpsl
jl
push
test
mov
popf
pop
loopne
xchg
adc
dec
repnz
ss
popa
adc
cmp
mov
adc
sub
aam
daa
dec
or
pop
xor
add
add
inc
mov
sbb
imul
dec
jo
or
aam
xor
in
jl
into
adc
sub
test
test
sub
imul
dec
inc
test
lds
dec
sub
sub
xlat
out
lods
cmp
adc
dec
cld
test
and
in
mov
and
adc
dec
adc
mov
mov
mov
pop
lea
fs
adc
jl
push
dec
adc
dec
cmpsl
or
push
inc
and
pop
cmp
fidivl
or
or
dec
cltd
pop
data16
mov
dec
and
and
sti
les
pusha
in
in
pop
movsb
ficoml
pop
in
cmpsl
xor
cmp
or
xor
lods
mov
mov
inc
pop
data16
push
sub
adc
push
adc
mov
push
adc
rcll
sub
ror
dec
mov
ds
clc
xor
or
cmp
xchg
cld
int
dec
sub
pop
outsb
push
xor
pop
dec
mov
mov
sub
and
jmp
in
aas
icebp
shlb
inc
mov
adc
sub
nop
pusha
pop
adcb
mov
jp
ficoml
insb
pop
cld
dec
mov
fcompl
push
jge
in
cmpsb
and
into
test
adc
call
cmp
mov
and
outsl
adc
ss
das
clc
lock
ss
pop
mov
fldl
aad
pop
sub
out
inc
test
sub
push
or
adc
and
ds
xor
insb
dec
popf
adc
std
add
stos
inc
je
dec
scas
and
into
adc
daa
push
sub
push
insb
and
push
loopne
sub
xchg
and
adc
push
sub
pop
mov
mov
outsl
mov
aaa
adc
lret
pop
cmp
sub
cltd
adc
push
loopne
and
mov
call
mov
int3
clc
xor
int3
cltd
adc
fs
out
pop
sub
adc
stos
enter
dec
or
cmpsb
xor
sub
or
cmpsl
int3
dec
mov
push
lret
xchg
and
push
inc
test
jno
imul
xchg
mov
xor
or
lock
out
add
ds
xchg
mov
dec
jo
clc
mov
adc
cwtl
mov
sub
dec
pop
enter
inc
roll
xor
scas
mov
lcall
dec
sbb
movsl
sub
ja
dec
stc
push
shrb
xor
test
daa
cmp
and
adc
fildll
hlt
pushf
sub
adc
imul
fnstcw
sbb
add
xor
fstl
adc
push
fwait
adc
loop
outsb
pop
push
scas
xchg
push
pop
or
jl
adc
cmp
and
jno
pop
mov
js
adc
add
sub
loop
push
and
sub
mov
fdiv
sub
call
pushf
mov
push
insl
adc
xor
pusha
inc
pop
dec
fiadds
mov
dec
and
mov
inc
adc
into
fmuls
sub
dec
jmp
mov
dec
mov
pop
and
repnz
pop
das
adc
pushaw
mov
pop
stc
push
xor
cmp
cmp
test
pusha
dec
xchg
adc
cmpsl
xchg
dec
rorl
adc
push
movsl
xchg
cld
mov
lods
call
in
or
movsl
add
adc
sar
inc
mov
stos
stos
pop
test
test
ficoms
xor
xchg
adc
dec
and
fs
nop
mov
adc
xor
loope
xor
rcr
xor
add
mov
test
rorl
xchg
popf
pop
push
pusha
leave
aam
adc
rclb
in
cmp
int3
dec
sub
mov
jp
cmp
movsl
add
js
je
sub
xor
mov
arpl
or
loope
mov
hlt
xchg
lock
pop
jecxz
call
nop
mov
es
dec
adc
fisubs
fs
xor
les
sub
and
mov
sub
cs
dec
fists
adc
and
sub
in
nop
xchg
out
sub
adc
js
mov
and
pop
lods
adc
dec
mov
mov
test
fldcw
xchg
sub
jne
mov
xor
sub
cmp
cmc
daa
sub
pop
loopne
inc
mov
ret
aas
jg
fcomps
jnp
jmp
nop
imul
in
pusha
mov
push
pusha
cmp
push
dec
call
sub
sub
adc
cmp
cld
adc
dec
dec
mov
push
mov
xor
push
push
dec
xchg
and
xlat
xchg
popa
cmp
jle
nop
and
pop
adc
cld
shlb
cmp
popa
xor
add
mov
sbb
pop
imul
mov
fcom
mov
jmp
fs
xor
adc
mov
cmp
fadds
mov
mov
jo
inc
popf
inc
in
fiaddl
ja
nop
movsl
sub
jns
aad
dec
imul
pusha
scas
dec
repz
sub
pop
lret
sahf
and
mov
jmp
jmp
repz
or
adc
pop
pop
pop
data16
and
inc
aad
push
mov
bound
adc
mov
test
subb
repz
imul
adc
and
popa
pop
sbb
push
cmp
xchg
outsb
adc
xor
and
test
dec
xor
dec
add
nop
movsb
gs
nop
imul
andl
pushaw
inc
daa
das
cmc
inc
jp
clc
arpl
mov
andb
inc
aas
aaa
adc
and
xchg
loop
imul
dec
lods
scas
xor
xchg
push
jl
adc
xor
mov
andb
lea
out
xor
in
nop
movsb
aad
sub
aam
cmp
adc
cmp
das
sub
sub
jo
fs
fs
in
stos
nop
ja
jo
adc
rorl
out
cmp
adc
xor
jno
adc
cmp
pusha
dec
imul
add
pop
es
dec
pushf
imul
xor
xor
add
jno
sbb
xchg
and
andb
xchg
inc
les
xor
lods
lock
cmp
les
aaa
mov
adc
sub
jl
sub
mov
push
mov
inc
pop
jmp
test
jo
adc
or
mov
or
test
dec
cmc
push
jo
sbb
mov
pop
mov
fisubrs
add
cltd
lods
sub
dec
add
call
jmp
mov
test
dec
mov
lcall
cltd
adc
push
push
mov
sub
adc
push
or
xchg
fs
mov
outsb
pop
and
fdivs
xchg
mov
adc
test
sub
pop
mov
or
addb
aaa
cmp
es
xor
cmp
cmp
xchg
aaa
mov
cmp
ret
mov
sub
loopne
lret
lahf
in
test
sahf
xor
mov
scas
lret
shrb
imul
ljmp
data16
and
sub
and
fnstenv
inc
je
adc
sbb
pop
shlb
adc
adc
shll
mov
sub
or
mov
rcrb
push
inc
mov
sbb
inc
aas
std
xor
sub
loope
cmp
mov
pop
lods
pop
hlt
mov
ficoml
fidivs
mov
sub
and
adc
sub
and
cmp
jno
dec
fmul
mov
sub
cltd
adc
aaa
test
stos
test
adc
add
fcoms
movsb
jmp
shlb
adc
dec
and
aad
jl
je
js
jmp
mov
in
adc
movsl
call
imul
lcall
mull
insb
and
sub
repz
out
dec
mov
testl
sbb
sbb
data16
sub
add
push
push
fstl
dec
fucomip
int3
lahf
push
inc
lahf
out
scas
shrl
jmp
add
adc
or
jno
aas
daa
push
jbe
push
push
push
sub
sub
or
and
sbb
xor
sbb
dec
xor
dec
add
insb
xchg
sub
lods
enter
pop
sub
das
mov
popf
subb
test
mov
sub
adc
movsb
and
cmp
xchg
aam
loop
jne
int3
mov
cmp
pop
fcoms
xchg
cltd
sbb
int
sub
rcrl
cmpsb
xor
inc
imul
xorb
not
dec
jmp
mov
aam
or
add
cmpsl
push
xor
add
and
push
push
pop
mov
mov
in
fs
call
int
and
adc
cld
xor
and
dec
push
push
scas
inc
lods
dec
push
push
jno
and
loop
movsl
push
in
lahf
add
add
test
pushl
aam
jg
dec
pop
popf
jae
adc
mov
leave
and
movsb
scas
xor
or
or
lahf
call
dec
repnz
dec
adc
or
lret
mov
push
sbb
int3
jnp
sbb
out
push
or
xchg
les
xchg
aaa
pushl
adc
xor
cmp
mov
push
and
sarb
stos
adc
adcb
cld
pop
mov
dec
adc
lds
mov
or
pop
imul
cmp
sub
push
in
clc
xchg
call
stc
rcl
cmp
adc
add
adc
push
push
hlt
and
movsl
sbb
sub
sbb
jl
xchg
sahf
sub
mov
sbb
enter
push
push
dec
jnp
lock
movsl
push
enter
repnz
xchg
sub
ds
inc
mov
das
mov
nop
inc
pop
test
std
insb
cmp
outsl
or
pop
fs
in
ds
int
ds
adc
mov
push
scas
imul
push
pushf
dec
icebp
enter
stos
sbb
insl
nop
sub
aas
add
jnp
out
in
adc
nop
in
mov
lcall
pop
cmp
cs
xor
cmp
xchg
and
shr
cmp
ficoms
stos
imul
shrb
jno
and
pop
inc
pop
push
pusha
sub
movsl
cmp
dec
mov
inc
adc
sbb
hlt
xchg
cmc
sarb
pusha
push
push
push
popf
divb
lods
hlt
push
and
imul
imul
lock
fstps
dec
inc
sbb
inc
dec
pop
push
or
js
je
lret
push
lock
adc
nop
loope
pusha
das
and
int
outsl
mov
leave
insb
std
adc
sub
dec
adc
iret
sbb
adc
adc
cmpsl
or
call
and
sbb
push
or
and
mov
jnp
cs
push
sub
scas
xchg
movsb
push
jmp
in
loop
dec
pusha
dec
adc
sub
dec
mov
cli
pop
mov
movsl
mov
dec
sub
dec
test
adc
pop
fndisi(8087
sub
dec
adc
jo
or
jne
and
in
outsl
hlt
sub
and
or
test
in
push
add
adc
ror
test
mov
jnp
sbb
and
enter
sbb
inc
and
insl
sbb
and
adc
xor
adc
push
pop
mov
mov
xchg
push
dec
lret
cld
dec
sub
hlt
mov
xchg
jl
pop
dec
std
les
jae
jbe
push
sbb
mov
push
sbb
dec
sub
adc
sub
inc
sbb
adc
add
cmp
jp
adc
inc
jnp
scas
jg
in
adc
jb
adc
push
pusha
mov
jne
cli
jo
push
push
pop
mov
subb
add
in
adc
xchg
pushf
xchg
insl
nop
adc
movsl
add
jl
std
sub
inc
les
and
push
xor
popf
scas
fsubrl
sub
clc
daa
cltd
add
lock
and
or
call
lcall
fdivrs
in
xor
loop
adc
push
popa
stos
xor
outsb
sub
or
inc
dec
hlt
lock
dec
and
push
and
inc
cmpsb
adc
push
lcall
sahf
das
pop
lret
or
pop
cwtl
mov
sub
add
movsl
sub
adc
dec
mov
sub
and
push
cmp
hlt
fistl
mov
scas
test
xchg
xor
mov
push
popa
mov
xlat
lods
and
mov
push
dec
movsb
clc
pop
push
adc
xor
pop
jecxz
jno
cld
pushf
test
push
and
xor
cli
jne
xchg
in
lret
push
sbb
lock
push
sbb
or
adc
inc
dec
dec
int
sub
cmp
pushf
add
inc
ficoml
dec
or
inc
addr16
adc
adc
jl
mov
lret
sbb
jle
cmpsb
adc
dec
pop
lds
sub
sub
xor
mov
push
scas
inc
orb
adc
or
paddsw
pop
and
mov
add
adc
xchg
xor
or
xchg
push
sub
in
std
or
mov
insb
cltd
adc
repz
push
lret
pop
mov
insb
adc
mov
sbb
insb
out
data16
adc
cmc
out
dec
test
loopne
cmpsb
cmpsl
jecxz
mov
repnz
fs
add
mov
test
nop
sbb
shrb
adc
lcall
mov
int3
hlt
xchg
jbe
dec
cmp
les
adc
rcrb
or
push
adc
jmp
adc
sahf
adc
xchg
jmp
jns
and
cli
adc
mov
cmpsb
adc
add
push
imul
std
or
sbb
adc
sub
inc
movsl
ljmp
fwait
or
dec
inc
or
or
xor
push
xchg
adc
mov
xchg
call
push
enter
bound
in
dec
inc
jne
jp
ljmp
inc
dec
jmp
adc
sub
shl
pop
aaa
sub
bound
movl
inc
pop
scas
add
cwtl
cltd
lcall
movsl
mov
jno
dec
sub
insb
dec
sub
xchg
sub
stos
add
jno
and
sbb
push
bswap
call
sbb
sbb
pop
pop
or
sbb
shufps
pop
jnp
cwtl
sbb
inc
inc
inc
jmp
xchg
insb
stos
imul
lcall
imul
mov
jbe
jg
inc
sub
xor
pushf
dec
mov
and
add
mov
push
std
fs
clc
push
xchg
push
jl
or
mov
montmul
cmpsb
add
or
sub
adc
cs
cmp
push
dec
fsts
adc
xor
in
or
jo
jg
in
test
push
adc
sar
dec
xchg
adc
pushf
adc
les
mov
les
xor
inc
test
int
add
adc
mov
ficoml
stos
sub
xlat
add
int3
pop
sub
rorb
add
adc
cld
dec
jb
xchg
sub
fadd
sub
dec
dec
adc
push
popa
adc
cmp
mov
adc
scas
sub
pop
jmp
je
xor
push
pop
cmp
ficompl
je
test
addr16
mov
popf
inc
xor
push
xor
mov
pop
cmp
inc
pushf
movsl
mov
aas
add
sub
cltd
sub
mov
cwtl
cmp
jo
je
mov
sub
inc
or
lret
sbb
inc
lahf
movsl
add
fmuls
movsb
lock
mov
cmp
imul
stos
mov
dec
adc
or
dec
imul
dec
jg
mov
test
clc
xchg
xchg
fwait
push
adc
dec
pop
call
sub
insb
xor
loope,pn
push
sub
add
adc
fs
call
mov
add
pop
pop
cld
sub
push
pop
andb
xchg
push
fadds
mov
sub
add
or
push
and
sbb
push
ljmp
jnp
nop
clc
leave
sub
enter
inc
push
test
cmpsb
adc
adc
cltd
adc
ret
or
adc
das
push
pop
jno
cmpsb
adc
outsl
and
mov
les
in
push
sbb
jne
stos
popf
and
mov
cmp
sbb
inc
xor
jle
popa
aam
push
push
and
pop
add
and
cltd
sub
pop
or
mov
push
sub
or
adc
pusha
pusha
adc
sbb
pop
xor
push
xchg
push
adc
push
and
mov
adc
cmp
push
shll
dec
and
xor
xchg
xchg
movsb
sub
mov
mov
cmp
int3
test
sub
xchg
adc
jnp
mov
jno
mov
das
adc
insb
adc
pop
nop
push
push
jno
in
mov
xchg
popf
and
cmpsl
push
push
insb
dec
call
je
or
repnz
ja
cmp
pop
xor
push
fidivrl
cmp
scas
and
les
pop
and
pop
sbb
sub
insl
subb
and
and
mov
jno
adc
adc
leave
adc
arpl
sub
adc
imull
cmp
ss
imul
jnp
lods
into
fs
pop
cmpsb
sub
sub
sti
test
pop
mov
sub
flds
mov
dec
ffree
test
sub
xor
sub
andb
nop
outsl
jo
jno
pop
adc
push
pop
xlat
push
roll
or
cmp
rcl
jl
cmp
push
cli
enter
scas
push
mov
add
sbb
adc
fwait
adc
and
stc
pusha
icebp
push
bound
xchg
mov
das
test
lret
adc
push
dec
fmuls
pop
dec
dec
xlat
mov
adc
mov
adcl
orb
xor
test
int3
adc
inc
das
inc
in
cltd
adc
sbb
inc
frstor
cld
clc
lret
xor
mov
popf
je
jmp
and
les
sub
das
mov
roll
je
ja
dec
cwtl
std
mov
inc
sbb
test
and
and
add
cmpsl
aad
or
or
dec
movsl
imul
adcb
xchg
sub
adc
adc
lcall
adc
xchg
jo
add
xor
sti
adc
loopne
lret
out
xor
stos
iret
add
sub
sub
je
mov
add
lods
pop
add
lds
pop
repnz
sbb
and
and
je
and
les
subb
loopne
je
jp
pop
in
xor
inc
xchg
mov
nop
xchg
inc
cwtl
xor
xchg
js
movsl
fadds
test
inc
cmpsl
ja
mov
xor
jl
or
or
in
int3
shrl
adc
adcl
pop
xchg
fs
and
cmp
sbb
scas
adc
cmpsb
rorb
shr
cmp
sarl
insb
xor
add
lods
test
ret
add
mov
mov
xchg
dec
cmp
je
sub
and
xchg
sbb
nop
in
add
enter
std
cmpsb
cmp
pop
and
adc
mov
adc
cmp
push
andb
xchg
xor
cmp
mov
movsb
out
sub
jnp
xchg
out
add
or
sub
push
and
dec
mov
mov
cmp
test
rcr
mov
inc
xor
das
lods
rcrb
insb
mov
inc
push
sub
xchg
cmp
fnstsw
and
mov
jne
xlat
mov
shrb
and
popf
jae
fs
jno
outsb
sbb
mov
xchg
nop
mov
mov
lret
adc
jb
xor
or
push
or
inc
and
sbb
cmp
xchg
fsubrl
sub
gs
das
stc
dec
sti
dec
or
sbb
xor
cli
gs
test
adc
mov
xor
cmp
mov
add
dec
pop
push
jge
pusha
lcall
inc
jle
adc
xchg
mov
sahf
loopne
pop
or
imul
jo
das
add
adc
and
aas
mov
mov
test
ficompl
and
imul
notb
mov
inc
inc
mov
sub
jno
popf
push
rorb
xor
add
imul
enter
and
mov
push
inc
dec
into
pop
and
and
inc
stos
jecxz
enter
jo
int
and
mov
adc
jae
inc
insb
jp
push
pop
orb
inc
clc
mov
push
clc
call
aam
sti
mov
dec
adc
cld
pop
je
xchg
mov
mov
lock
je
iret
add
pop
push
fs
xorb
jns
pushf
xchg
enter
add
mov
iret
mov
xchg
aas
push
lock
jl
in
push
out
and
arpl
inc
lods
divb
out
dec
aad
inc
push
insb
fs
mov
addb
mov
ja
loopne
adc
data16
and
sub
jno
movsb
xchg
out
fcoms
loop
mov
fcompl
dec
add
sub
mov
fiaddl
je
push
push
shrl
adc
adc
cwtl
adc
fdivrs
pop
addr16
lock
push
pushf
incl
dec
je
jg
les
jns
push
adcb
xchg
aas
adc
cmpsl
dec
nop
loope
xchg
or
mov
inc
insl
jnp
in
xor
mov
les
clc
data16
cmp
hlt
lods
leave
xlat
add
xor
les
out
xchg
push
pop
clc
lods
cmpsl
and
inc
daa
cmpsb
mov
add
push
mov
adc
roll
or
xchg
lods
xchg
sub
out
flds
and
lods
loopne
add
push
mov
icebp
inc
call
xor
xlat
inc
mov
xor
dec
mov
cs
cmpsb
pusha
pop
push
popa
lret
or
and
stos
mov
dec
pushl
popa
adc
dec
xchg
pusha
push
push
push
daa
pop
pop
fldenv
cmp
or
outsl
movsb
mov
inc
sahf
inc
push
lds
popf
push
lock
add
cld
cwtl
lea
icebp
inc
add
xchg
lea
push
dec
int3
aad
pop
out
das
test
movsl
scas
repz
lcall
rcrl
cmp
adc
enter
nop
leave
js
pusha
les
sarl
lds
lock
cli
cltd
cmp
adc
sbb
jle
mov
in
and
and
mov
add
leave
mov
mov
pop
push
push
and
dec
sbb
ficoml
cmp
dec
adc
mov
icebp
dec
movsb
add
out
hlt
pushf
dec
rolb
xorb
fidivs
add
rcr
mov
dec
sti
cmp
adc
sti
outsb
mov
sub
or
out
xor
data16
mov
cmp
daa
xchg
and
test
and
jmp
aad
dec
adc
adc
outsb
movsb
mov
ja
loopne
ret
sub
sub
or
sub
nop
mov
add
adc
gs
lret
rcll
loopne
sub
std
cmp
adc
test
and
xor
leave
adc
aam
mov
out
or
pop
jg
mov
and
test
xchg
mov
jle
inc
push
mov
dec
fmul
adc
ret
sbb
mov
mov
test
sub
nop
mov
in
nop
dec
sub
push
mov
cld
xchg
rorb
and
iret
mov
mov
outsb
fldl
add
fmull
int
add
bound
and
xor
add
dec
add
dec
fs
cmp
cwtl
mov
cs
and
adc
jno
jmp
orb
shlb
xchg
test
ljmp
dec
jmp
sub
pop
jp
inc
adc
mov
sbb
subb
adc
dec
adc
out
fs
push
lock
div
xchg
test
cmc
push
or
xor
push
xor
xchg
cmpsb
or
and
movsb
add
xor
cmpl
cwtl
add
add
clc
cmpsl
jbe
jp
add
insl
and
push
js
lods
mov
xchg
and
insb
cmp
and
xchg
inc
test
jae
int3
add
dec
jle
xor
mov
push
jg
mov
dec
push
test
test
inc
gs
push
sbb
and
mov
aas
inc
imul
mov
hlt
sub
sub
scas
adc
dec
fsubrs
jle
push
std
outsb
mov
xor
and
loop
js
mov
cmp
call
mov
mov
lcall
pop
movsl
call
jl
and
fxch
push
pop
mov
mov
ss
add
xor
lea
aam
adc
sbb
aaa
or
cmp
cmpsl
add
and
das
mov
xchg
stos
sbb
xchg
jo
adc
xchg
or
sub
scas
adc
push
mov
adc
adc
mov
lcall
lods
jl
test
sub
sub
cltd
adc
adc
push
adc
mov
sbb
mov
test
push
jbe
addr16
dec
xor
dec
or
push
adcl
mov
dec
adc
and
adc
and
inc
dec
dec
scas
leave
cmp
aas
mov
or
je
dec
pusha
daa
or
add
test
mov
fdivl
push
push
scas
popf
adc
jne
mov
jg
cmp
aam
in
and
icebp
cmp
mov
scas
test
negl
imul
push
push
fstpl
in
adc
adc
mov
ret
cmp
sbb
and
or
fs
pop
cs
mov
pop
fldt
push
lock
mov
xor
add
inc
jo
sbb
jl
push
cld
stos
sub
or
test
lods
add
xchg
inc
pop
call
fcomps
pusha
sbb
lods
add
lods
incl
pop
cmpsl
add
cmp
xlat
in
dec
bound
sub
xchg
xor
sub
mov
dec
ljmp
inc
loop
das
jl
loopne
dec
jae
outsb
or
xchg
pop
movsb
and
imul
xchg
dec
jl
sbb
data16
xor
loope,pn
dec
jp
mov
xchg
add
addr16
cmc
sahf
sbb
enter
jl
or
lods
notb
pop
pop
xor
pop
push
mov
mov
lcall
imul
les
pushf
or
dec
add
xchg
inc
stos
call
popf
adc
dec
loopne
cmp
lods
pop
lods
mov
adc
test
mov
cwtl
push
or
or
push
pop
dec
cmp
cmp
sbb
sbb
pop
mov
xchg
cld
dec
imul
hlt
push
mov
sbb
aam
std
sub
lcall
cmp
xchg
test
arpl
lods
repnz
xor
outsl
jo
and
dec
add
loop,pn
xchg
fisttps
or
adc
enter
call
sarl
sbb
cmp
xchg
mov
add
inc
scas
loope
das
test
mov
movsb
movsb
insb
das
sbb
adc
fisttps
dec
jbe
in
gs
and
aas
inc
cs
dec
adc
and
xor
xchg
mov
loop
flds
jg
mov
or
test
in
cmpsb
aam
orl
cmp
dec
mov
sub
mov
jnp
mov
in
cmp
fisubrs
add
push
xor
mov
inc
incb
xor
sub
scas
nop
je
and
adc
mov
xchg
cld
and
dec
push
roll
push
js
add
pop
shrl
inc
dec
out
nop
add
xor
xchg
stc
nop
adc
mov
cmp
aam
jmp
mov
xchg
nop
dec
stos
cmp
mov
mov
push
and
xor
out
mov
xor
add
test
push
sub
or
lcall
movb
gs
sub
movsl
sub
xchg
pusha
cmpsl
out
insb
mov
in
mov
call
fisubrs
aad
insb
daa
push
pop
mov
push
fmul
dec
je
leave
push
mov
xor
test
jle
dec
inc
push
jge
and
lret
iret
push
dec
xchg
dec
std
fsubl
push
cmp
movsb
xchg
cld
repnz
push
insl
adc
dec
stos
or
and
test
cmpb
movsb
pop
and
sbb
les
jb
dec
cmp
mov
add
out
inc
xchg
cmp
mov
xchg
mov
push
sti
hlt
xor
inc
scas
push
int3
and
xor
dec
push
pop
or
mov
sub
cmp
scas
dec
xor
shrb
jo
test
dec
xor
xchg
push
xchg
sub
sarl
and
add
mov
aad
js
scas
add
sub
inc
test
lods
mov
mov
mov
stc
test
mov
sub
mov
inc
cli
push
push
mov
cld
rclb
popf
jno
and
imul
negb
mov
xor
xchg
hlt
fsubl
push
mov
in
js
push
test
mov
mov
adc
in
push
adc
sub
xor
les
stos
pop
pop
dec
xor
adc
lcall
add
push
fmuls
cmp
test
aad
dec
adc
xor
xchg
mov
mov
arpl
xor
add
jge
inc
stos
loopne
adc
scas
adc
push
je
js
dec
or
pop
and
adc
xchg
or
pushf
or
sarb
or
dec
dec
adc
in
push
and
lods
enter
add
ds
or
cmp
ss
and
sub
mov
inc
mov
jp
loopne
xchg
cmpb
sarb
lds
xchg
push
or
xor
and
mov
insl
in
xorb
xor
int
xor
sub
xchg
popf
mov
jmp
push
das
and
fs
jo
fwait
adc
cmp
push
inc
sub
inc
xor
pop
dec
adc
push
outsl
subb
inc
call
fsubrs
adc
jecxz
dec
icebp
lods
das
stc
xor
rcll
sti
fisubrl
xchg
test
imul
push
mov
and
test
mov
pop
push
pop
scas
mov
rolb
orb
push
add
pop
clc
dec
mov
add
rolb
xor
push
or
xor
or
sbb
or
call
push
dec
or
dec
xchg
xchg
dec
sub
adc
xor
stc
clc
mov
xlat
in
out
xchg
add
mov
push
xor
pop
adc
mov
push
or
sub
and
lret
insb
xor
adc
stos
cmp
popf
mov
int3
and
mov
sub
lret
pop
dec
sbb
cmp
and
dec
add
jmp
gs
inc
dec
inc
sub
pop
and
imul
aam
fwait
adc
insb
lock
adc
adc
xchg
hlt
sbb
cmp
jae
xchg
stos
jl
adc
cmp
pop
arpl
ds
and
bound
lock
jo
je
popf
xchg
fs
and
test
mov
pop
inc
mov
das
pop
jg
adc
fadd
imul
mov
xor
lods
jecxz
test
xchg
test
adc
xchg
lock
lcall
pusha
cmpsb
add
lcall
mov
sbb
pop
pop
enter
lock
daa
push
mull
les
pop
lcall
cmpsb
adc
mov
and
idivl
aaa
and
adc
loop
xchg
lea
cld
dec
dec
push
xor
les
and
adc
dec
add
stc
mov
pop
js
lcall
mov
inc
lret
mov
dec
fmull
adc
jge
in
adc
adc
add
xchg
sub
jl
push
sub
dec
test
xchg
sbb
sahf
xor
test
xchg
adc
sub
loop
dec
test
divl
inc
dec
lcall
cmpb
test
inc
in
insb
andb
jo
dec
dec
pop
adc
jbe
or
mov
imul
and
out
or
mov
inc
add
cltd
cs
fistl
xchg
mov
arpl
xchg
cltd
adc
enter
add
sub
das
sub
rcl
mov
mov
adc
pop
or
movsl
inc
and
and
dec
je
or
push
xor
add
jl
push
add
je
cmp
test
xchg
push
push
sbb
or
in
sub
in
pop
das
clc
fmull
das
ss
sbb
daa
mov
imul
add
bound
and
je
xor
das
dec
push
out
mov
das
cld
dec
or
cmp
adc
ds
mov
fisubl
inc
cwtl
sub
enter
add
sbb
jno
cltd
in
scas
or
sbb
add
sbb
and
and
cmp
cld
dec
cmp
mov
xor
and
add
add
je
shlb
mov
out
fld1
xchg
fisubs
xchg
call
popf
or
xor
ss
push
push
cmp
adc
test
and
nop
int3
and
jno
adc
and
add
push
adcl
and
mov
adc
clc
lods
pop
mov
sub
je
adc
rcll
pop
mov
jl
sub
inc
imul
cmp
dec
and
fs
fs
dec
inc
or
add
and
fsubs
push
pop
cmp
pop
adc
mov
push
dec
outsl
sub
xor
sub
pop
adcl
and
sbb
mov
xor
inc
dec
bound
or
and
cltd
adc
clc
cmpsb
cld
cltd
adc
sub
repnz
and
adc
mov
adc
mov
pop
sub
in
movsb
int3
imul
les
dec
pop
dec
mov
mov
movsl
inc
jge
int3
sub
push
sub
call
pusha
adc
adc
sub
mov
jo
sub
cmpsl
stc
jle
je
inc
cli
sti
cld
lcall
movsb
movsl
jmp
sbb
and
mov
and
sahf
scas
xor
cmp
and
inc
mov
mov
je
in
fs
imul
adc
pause
loopne
test
cli
fbld
cmp
mov
xchg
mov
mov
sub
mov
js
adc
xchg
cld
sahf
xor
xchg
cmp
mov
inc
sub
cmp
int3
loopne
push
aam
pop
adc
pop
and
nop
clc
inc
dec
pop
dec
loop
cs
xor
daa
lea
loope
out
pop
push
mov
cli
xlat
jb
imul
shrb
movsl
inc
mov
out
jmp
and
aaa
cmp
sub
xchg
inc
dec
aaa
cmp
add
push
pop
popf
adc
cltd
sbb
add
adc
sub
dec
adc
and
or
mov
cli
push
sbb
cmp
hlt
movsl
xchg
cmp
cltd
clc
sbb
mov
and
outsl
mov
sub
push
push
mov
xchg
out
cmp
sbb
pop
sub
sbb
xor
imul
xchg
hlt
jle
in
icebp
pop
and
xchg
cmp
and
fsubl
fwait
inc
lcall
jl
dec
push
add
sub
sbb
imul
dec
lock
jle
adc
xchg
pop
mov
xchg
movsb
lcall
stos
lock
mov
cmpsl
xchg
xor
movsb
push
in
dec
pop
clc
push
dec
jae
stos
and
cmp
insl
xchg
les
mov
lock
out
rclb
mov
xchg
aad
icebp
clc
arpl
sbb
pop
insl
aad
mov
or
outsb
stc
inc
jbe
sbb
sbb
cld
jae
and
scas
sub
sbb
add
sub
xchg
cmp
imul
sbb
lock
test
testl
xor
cwtl
pop
out
je
fistl
dec
fsts
or
sub
inc
sbb
xor
inc
jl
push
pop
stc
inc
push
xor
and
mov
xor
and
adc
adc
mov
xchg
cmpsl
mov
jae
dec
add
xor
jno
mov
add
push
adc
cwtl
sub
inc
or
std
sub
and
dec
sub
cmpsl
pop
sbb
sbb
sub
leave
or
push
inc
push
sbb
fldcw
xor
adc
xchg
pushl
cmpsb
adc
add
mov
sarb
and
sub
ret
sub
dec
push
dec
clc
add
inc
pop
sarb
pop
lds
pop
push
inc
or
or
fcoms
jne
push
jnp
cmpb
adcl
lcall
pop
or
pop
mov
pop
xchg
adc
std
xchg
xor
arpl
dec
test
sub
xor
movsb
scas
fucomip
dec
fistpll
xor
clc
dec
dec
andb
orb
pop
adc
add
lcall
std
rclb
leave
or
sbb
cmp
inc
cmp
in
mov
mov
push
lcall
daa
mov
into
js
clc
sar
roll
jb
cmp
hlt
pushf
sub
mov
sar
xor
sahf
or
sbb
shlb
arpl
dec
dec
or
xor
in
xchg
cmp
pop
sub
jl
push
adc
sub
dec
fisttpll
pop
mov
sbb
xor
movsl
pusha
or
cmp
adc
or
in
push
inc
adc
movsb
xor
and
ret
inc
inc
lea
lods
les
aad
or
ja
pusha
repnz
imul
mov
gs
and
and
cmp
cmp
adc
mov
icebp
sbb
jbe
dec
fnstsw
jae
adc
push
xlat
mov
shll
pop
test
or
add
pop
mov
addr16
test
arpl
mov
jns
daa
dec
lock
sbbb
and
int
push
xchg
adc
cmpsl
pop
shll
inc
pushf
cmp
and
or
pxor
pop
testl
xchg
add
ds
add
lods
xchg
call
pop
and
cmp
das
sub
jl
dec
std
mov
jp
adc
xorb
cmpsb
inc
lock
ret
aam
in
adc
dec
push
test
cs
pop
dec
adc
outsb
pop
subb
adc
notl
fdivl
xor
jmp
dec
dec
hlt
or
out
movsl
add
xor
outsl
mov
aaa
jno
pop
fcoms
push
mov
and
aaa
cmp
mov
or
mov
cmc
mov
mov
jbe
xchg
push
scas
push
insb
sub
inc
xor
out
cmpb
adc
movups
inc
data16
cwtl
dec
push
dec
jo
jge
nop
nop
push
jns
mov
sbb
jo
pop
dec
sub
es
inc
insb
fwait
stos
jmp
mov
and
push
add
add
inc
insl
jns
inc
enter
jmp
and
stos
and
xor
adc
pop
aad
mov
je
adc
add
or
inc
adc
or
adc
adc
xchg
stc
mov
pop
les
push
mov
pop
sbb
sub
std
scas
jmp
pusha
xor
call
shlb
adc
and
in
lret
cmp
in
xor
and
scas
shll
ss
call
mov
fs
xor
arpl
inc
sub
fsubs
adc
rol
cmp
inc
xor
shl
inc
dec
daa
dec
dec
adc
pop
xor
sub
and
sbb
or
out
xchg
xor
push
push
loope
xor
add
lods
das
jo
cwtl
sbb
outsl
jmp
ss
adc
lods
movsb
movsl
sub
inc
ds
enter
lahf
les
pop
cs
sub
dec
or
dec
add
adc
adc
pop
dec
and
jg
scas
add
sub
pop
inc
pop
pop
mov
sahf
addr16
pop
mov
and
cwtl
cmpsl
xchg
std
and
rclb
xchg
push
and
jo
add
mov
std
jl
sbb
push
pop
mov
and
push
clc
not
xchg
and
daa
and
outsb
clc
pusha
dec
lock
in
dec
pop
ljmp
jo
mov
or
xchg
lods
jnp
adc
imul
aaa
sbb
inc
cmp
push
lds
mov
pop
repz
cli
adc
adc
add
hlt
sub
insb
lds
stc
mov
xlat
lods
or
repnz
xor
push
rorl
es
inc
clc
xor
in
and
mov
and
movsb
dec
lods
sub
sbb
adc
sbb
stos
pop
enter
or
sbb
adc
pop
sub
xor
cmp
lret
sub
mov
js
js
jno
dec
cmpsl
out
jne
push
cwtl
mov
xchg
adc
sub
stos
add
cmp
adc
cmp
mov
and
inc
lods
pushf
cmp
jl
mov
pop
push
loopne
push
xchg
sbb
push
in
adc
pop
sarl
mov
bound
in
int3
and
sub
movsl
adc
xchg
mov
lods
push
jle
push
mov
dec
adc
or
xchg
insl
jg
mov
inc
cmpsl
addr16
push
sbb
cmp
aam
in
rclb
imul
fs
out
and
int3
leave
sub
stos
movsb
ja
dec
jge
sbb
adc
push
ss
leave
add
lret
icebp
mov
inc
pop
mov
loopne
cmp
push
sbb
loopne
int
xor
das
xor
cltd
test
das
xchg
pushf
mov
adc
xor
and
cmp
add
xor
pop
je
cld
pop
jp
in
and
fs
push
push
mov
lea
and
and
rcll
adc
js
sub
xor
pop
jbe
das
xchg
je
scas
add
pop
push
pop
int3
dec
jg
nop
jecxz
stos
mov
call
mov
and
sub
aaa
shlb
andb
sbb
dec
je
or
jbe
push
jnp
jl
pop
pop
add
pop
xchg
pop
mov
nop
lahf
jle
mov
test
xchg
cmc
and
popf
loopne
insl
cltd
sti
pusha
adc
inc
movsb
sti
pusha
lods
mov
test
repz
js
test
loopne
sbb
cmp
adc
adc
sub
daa
inc
xor
ret
insl
dec
pop
outsl
or
insb
xchg
je
jp
dec
js
sbb
fs
mov
in
adc
and
and
ljmp
adc
data16
push
imul
ljmp
cltd
ss
cld
nop
cmc
xchg
cld
mov
fbstp
and
jo
inc
cmpsl
shrb
or
push
cwtl
cmpsb
or
add
or
sbb
push
adc
adc
mov
into
fdivrl
imul
icebp
cmp
ficomps
jp
or
and
mov
jg
mov
push
and
mov
adc
xor
sbb
andl
or
fwait
fs
mov
inc
dec
and
imul
and
add
inc
dec
push
sbb
xchg
int
push
or
sbb
outsb
inc
jnp
clc
push
sub
xchg
popa
pop
orl
cltd
data16
addr16
mov
mov
addl
jne
pop
outsb
add
imul
mov
hlt
add
jl
adc
jno
adc
xor
es
push
pop
adc
dec
or
lret
test
hlt
mov
ret
into
adc
arpl
push
in
dec
sub
mov
hlt
in
sbb
cmp
in
lret
pop
mov
adc
push
or
clc
dec
fidivrs
sar
call
cmp
mov
sub
adc
in
xchg
leave
sbb
xor
xor
xchg
pop
adc
repnz
push
sbb
cltd
or
cmp
push
or
dec
int3
inc
fcmovnbe
add
cmp
sub
or
push
sub
add
movsb
and
cmp
or
sbb
and
xchg
sbb
hlt
in
xchg
sub
fsubrs
ret
and
fs
pop
dec
das
testl
mul
push
push
fdivrs
or
mov
inc
mov
mov
and
test
sub
cs
dec
lods
dec
sbb
pusha
inc
testb
adc
pop
mov
sbbb
push
jle
mov
mov
add
bound
mov
jl
mov
mov
and
loopne
xchg
int
cwtl
enter
or
mov
jl
dec
push
and
pop
cmp
inc
and
lods
fsubl
and
adc
push
pop
lods
jmp
fldl
push
and
sbb
jno
add
jo
and
and
ret
sbb
add
xor
cmc
pop
cmp
xchg
movsl
pop
xchg
push
and
hlt
fs
roll
pop
imul
mov
mov
loop
incl
call
and
rorb
or
test
sub
aaa
test
movsb
les
xchg
sub
incl
xor
lahf
in
dec
out
mov
out
sub
inc
in
dec
jl
mov
dec
loopne
push
and
sub
and
sbb
jnp
xor
cs
sbb
sbb
dec
mov
push
or
or
dec
ret
hlt
in
jg
clc
cmpsl
sub
or
fnstsw
mov
or
jo
and
xor
pop
add
aam
inc
inc
data16
sub
dec
jae
push
js
push
mov
adc
xchg
mov
xchg
lahf
loopne
xchg
movsb
mov
cmc
mov
mov
adc
mov
jge
mov
movsl
or
es
jg
or
pop
add
imul
xchg
das
dec
adc
xor
shlb
push
push
fists
inc
push
adc
cmpsb
or
push
dec
stos
pop
pop
gs
sub
and
and
pushf
mov
je
push
nop
sub
mov
cmp
xor
pop
jl
adcb
jbe
shl
cmp
imulb
movsb
jmp
rclb
xor
and
and
aas
inc
sbbl
pop
arpl
addr16
or
cmp
adc
sub
daa
mov
popf
lds
lods
icebp
adc
sbb
add
inc
popf
gs
sub
imul
andl
cli
xor
or
and
xor
in
sbb
mov
sbb
cmp
and
cmp
aas
outsl
leave
pop
adc
fistl
push
sbb
or
mov
fistl
or
dec
in
cmp
push
and
dec
outsl
jp
sub
xorb
pop
mov
scas
mov
lcall
jb
cmpsl
addr16
or
fcomps
xchg
mov
push
lea
xchg
stos
adcl
and
jbe
sbbl
inc
pop
push
xor
lock
sub
push
cwtl
stc
adc
sub
loop
fstps
dec
or
sub
xor
cmc
push
call
xor
gs
fcomps
sbb
xor
mov
test
fistpl
lret
pop
adc
inc
adc
sbb
rolb
mov
lods
jnp
dec
or
mov
adc
and
popa
and
xor
inc
dec
or
dec
push
ja
add
cmp
mov
adc
sbb
sbbb
push
adc
xor
and
cmp
dec
add
mov
mov
int3
shrb
test
sub
sbb
in
movsb
mov
sub
cmp
cmp
nop
add
mov
sbb
push
sub
dec
js
pop
cmp
xchg
and
clc
inc
push
cmp
cmp
in
sub
lcall
inc
inc
inc
dec
or
inc
insb
xor
aaa
mov
cmp
inc
bound
mov
pop
jb
pop
dec
jne
mov
out
mov
ret
test
cwtl
movsl
adcb
dec
adc
xorb
ret
lahf
mov
mov
roll
jl
cmp
shrb
jp
addb
aam
cmp
mov
inc
dec
mov
mov
and
adc
cmc
repnz
push
dec
imul
jno
das
push
nop
xchg
cmc
add
push
pop
mov
fidivrl
rclb
push
adc
adc
add
or
mov
inc
dec
jo
dec
push
add
int3
js
dec
add
mov
call
mov
cmp
in
cmp
mov
inc
inc
xchg
adc
pop
dec
adc
or
cs
dec
cmp
sbb
add
sbb
jg
incb
jl
aam
call
aaa
loop
or
das
cltd
test
insb
push
or
xor
sbb
cmp
sub
je
or
xor
enter
dec
and
sbb
sub
xchg
xchg
mov
xorb
test
cmp
sub
pop
cmp
pop
iret
xlat
push
sub
xchg
or
ja
push
shlb
pop
adcl
pop
fcomps
pop
cvttps2pi
xchg
mov
imul
clc
js
pushf
test
jle
lods
adc
popa
mov
inc
mov
adc
mov
clc
sbbl
jle
insb
mov
orps
test
out
push
lock
inc
pop
je
adc
lds
insb
je
xor
cmpsl
fstl
dec
ja
and
sub
iret
mov
mov
mov
les
and
das
xor
pop
int3
sub
mov
roll
movsb
xor
push
les
loopne
and
mull
lock
push
test
or
sub
sbb
mov
mov
sub
cmpsb
rcll
push
xchg
mov
pop
lock
jnp
test
aas
inc
mov
and
cmp
xor
sbb
mov
adc
sbb
pop
outsb
add
add
dec
aas
shlb
cmp
dec
push
cmpb
jns
adc
imul
mov
je
jb
test
sub
gs
scas
mov
stos
mov
sub
xor
mov
movsb
dec
nop
sub
sub
inc
lods
test
repnz
inc
cmp
mov
jns
cmp
fistps
pop
add
or
ror
xor
adc
xor
mov
pop
bound
aas
insb
dec
sbb
lcall
adc
sbb
and
add
mov
pop
outsl
xchg
mov
ret
jl
or
adc
aad
rolb
add
mov
mov
sarl
lock
dec
cwtl
out
xchg
inc
pop
int
int3
dec
gs
or
loopne
cmp
push
in
push
push
mov
test
aad
js
or
jno
inc
mov
nop
and
and
cmp
xchg
loopne
cld
and
xor
xchg
xor
ja
add
sar
and
inc
push
daa
pop
sub
mov
push
cwtl
pushf
jecxz
je
jne
push
fsubrl
cld
imul
pushf
push
mov
lock
inc
sbb
test
pop
mov
cwtl
test
pop
mov
mov
pop
mov
push
andb
arpl
sbb
inc
inc
and
push
in
je
push
shrb
enter
lock
ds
pop
adc
push
push
sub
fdivrs
lods
inc
xchg
rcrb
sub
inc
sub
ror
push
xor
adc
mov
hlt
cltd
pusha
das
jnp
call
inc
xor
cmp
dec
test
movsl
push
dec
adc
cmp
shlb
or
jno
dec
sti
insb
cmpsb
adc
pushf
pop
dec
lock
mov
add
in
pop
dec
or
xchg
pcmpgtd
pushf
pop
push
sub
jp
sbb
mov
mov
adc
mov
fildl
nop
mov
mov
cld
pop
stos
ror
lahf
mov
xchg
xchg
mov
mov
subb
jl
pop
push
imul
cmp
mov
mov
push
push
scas
mov
push
mov
mov
pop
lods
or
movsb
add
popa
stos
lods
lods
ds
clc
cs
test
sub
int3
test
es
cld
imul
or
dec
push
adc
mov
daa
test
aad
mov
sbb
xchg
xchg
xchg
cmp
scas
aam
in
movsb
mov
mov
dec
adc
fcompl
or
ss
inc
clc
nop
or
push
pop
xchg
xlat
sub
dec
cmp
fsubp
and
mov
inc
popa
imul
and
pop
repz
jo
enter
xchg
cs
stos
in
jl
sub
inc
and
cmpsb
or
lods
xor
fdivrl
in
mov
cmp
mov
cmp
js
inc
dec
jg
js
loopne
xor
push
mov
test
xor
cmp
dec
mov
mov
jno
jae
jno
xor
cli
lcall
mov
data16
sbb
inc
xor
dec
popa
inc
inc
add
jns
loopne
adc
test
pop
popf
pop
movsb
pop
je
mov
packssdw
loopne
ja
les
test
clc
xchg
sub
mov
loope
ljmp
iret
fnstsw
vpminub
mov
filds
stos
mov
loopne
xchg
cmpsb
cwtl
movsb
sub
mov
or
insl
add
pop
bound
adc
cwtl
pushf
push
xor
inc
bnd
sub
aaa
lock
adc
popf
fidivs
clc
scas
test
add
fadds
xchg
pusha
dec
hlt
js
pusha
xor
daa
call
adc
or
aaa
and
cmp
cwtl
push
xchg
insb
adc
dec
push
stos
in
xor
inc
inc
xorb
push
sub
test
xchg
aam
repnz
cmc
das
and
into
and
mov
fsubs
xor
lock
inc
mov
xor
push
cmp
add
loopnew
push
push
jae
imul
andl
xchg
movsb
mov
jle
xchg
sbb
inc
stos
and
pop
dec
mov
lcall
pop
inc
xorb
sarb
pushf
lods
ja
shr
ret
leave
mov
and
int3
jl
gs
and
mov
es
pop
mov
sub
pusha
mov
mov
rcll
sti
cs
xchg
mov
mov
cmpsl
rcrl
sub
xor
push
enter
imul
xor
xchg
mov
or
xchg
push
and
out
test
xchg
mov
fwait
sub
mov
in
cmp
dec
pop
into
sub
jg
or
mov
les
and
mov
mov
movsb
sub
jle
rcrl
inc
aam
outsl
lods
dec
cmp
dec
jne
js
pop
pop
popa
mov
push
mov
imul
cmp
lods
cld
sbb
cmpsl
add
mov
pop
pop
pusha
stos
mov
and
rdtsc
inc
inc
mov
scas
lock
push
pop
pop
inc
cmp
inc
icebp
mov
push
pop
jl
push
cmp
push
cmp
dec
cwtl
sub
and
call
cmp
loopne
jle
jp
inc
cld
cli
pop
push
rcrb
jp
cmp
inc
daa
push
push
adc
dec
bound
or
push
imul
js
insb
sbb
imul
pop
lock
push
mov
xor
and
sub
pop
addl
mov
dec
push
into
test
cmpsl
jge
adc
pop
data16
pop
es
dec
sub
inc
inc
inc
dec
clc
cmp
add
jl
add
xor
push
mov
mov
mov
sub
pop
pop
pop
jle
orb
dec
nop
nop
add
inc
dec
dec
xchg
adc
int3
das
insb
mov
mov
or
inc
imul
pop
orl
push
andl
push
ret
mov
cld
test
fucom
or
pusha
sub
fcoms
or
mov
mov
shrb
xchg
enter
mov
lods
mov
ja
inc
cmp
jle
and
xor
cmp
jmp
adc
jge
sub
mov
popa
mov
test
popa
lds
es
mov
xchg
inc
or
mov
xor
mov
pop
addr16
sub
aas
dec
xchg
adc
cmc
test
mov
sub
xor
mov
mov
clc
pop
dec
fs
and
mov
bound
inc
addr16
mov
ds
inc
mov
xor
xchg
dec
pop
rcll
icebp
pop
cmp
pop
jb
mov
or
pop
adc
outsb
adc
push
push
dec
inc
andb
xor
or
lcall
push
or
push
push
xchg
or
fsub
jmp
into
push
sub
repz
xchg
shlb
addl
cld
enter
mov
stos
and
inc
mov
mov
xchg
xor
dec
inc
xor
mov
and
mov
out
push
xor
jne
pop
lods
jbe
pop
scas
push
inc
shrl
cmpsb
adc
xor
or
mov
push
pop
or
xchg
inc
test
push
push
or
cmp
mov
or
xchg
add
mov
jns
int3
add
movsb
scas
mov
setp
vmovsd
sub
in
fsubrs
jecxz
sbb
fsub
add
fsubl
int3
mov
adc
shl
mov
jbe
clc
pushf
pop
test
sbb
jp
enter
jnp
fsubl
loopne
push
pop
popf
jge
rcrb
inc
xor
dec
push
pop
sti
cs
dec
fsubl
rolb
mov
mov
adc
sub
push
lods
pop
add
adc
inc
push
push
movb
dec
popa
addr16
or
mov
inc
das
push
pop
push
and
ss
push
in
sbb
enter
push
push
js
lods
mov
mov
movsb
lret
sarb
or
sbb
pop
shll
sbbb
lock
pop
je
jnp
js
and
stos
addb
je
push
pop
dec
adc
test
and
inc
mov
xor
dec
adc
cmp
mov
lods
cmp
jno
daa
or
stc
jo
rol
and
jo
out
test
sub
lea
pop
data16
pop
or
pop
cmp
and
push
cmp
aaa
cmp
icebp
lods
daa
cli
cwtl
xchg
mov
sarb
adc
xor
xchg
call
jmp
inc
dec
adc
jo
pop
xchg
push
add
xchg
pop
dec
inc
jne
movsb
lock
jl
adc
push
mov
lcall
add
in
cmpl
iret
fndisi(8087
mov
pop
mov
lock
loope
jp
aam
addr16
fcoml
in
inc
dec
sub
mov
pop
lret
mov
mov
sbbb
mov
aas
mov
lock
pop
pop
aam
inc
cmp
mov
lea
push
movsb
les
test
addb
insb
movl
out
xorb
insb
dec
xor
inc
push
cwtl
test
cmp
sub
xor
xchg
jl
or
inc
sarl
test
shr
cmp
mov
xchg
mov
js
inc
mov
xor
mov
in
mov
mov
gs
bound
popa
jo
jbe
push
mov
shrb
nop
and
arpl
inc
pop
push
mov
mov
fs
lods
sahf
cmp
dec
mov
insb
in
mov
fnstcw
dec
cmpb
mov
std
sbb
xlat
cs
sbb
jle
xchg
mov
xorb
or
xorl
jb
out
std
fiadds
dec
mov
cmpb
cmp
and
das
outsl
loop
push
loopne
sub
mov
addr16
clc
or
push
mov
enter
lock
scas
scas
mov
lock
and
mov
dec
xchg
adc
dec
insl
jns
pop
or
mov
cmp
xchg
mov
and
xor
test
fdivrl
movsb
cmpsb
ret
or
int
adc
icebp
dec
repz
shll
in
lahf
push
and
int
loop
popa
mov
mov
sub
scas
mov
pusha
lea
hlt
bound
or
pop
pop
je
aaa
cmp
mov
rclb
cmp
pushf
inc
movsl
add
nop
and
xchg
pop
mov
add
pushf
mov
test
inc
dec
rcrl
push
addb
je
je
jne
nop
sbb
addr16
push
pusha
rcll
add
xchg
inc
test
cmp
pop
inc
call
sub
xchg
sub
ret
xchg
or
mov
in
xor
push
in
cmc
ljmp
lods
nop
xchg
push
fisubl
dec
aaa
enter
lret
rcrl
lret
clc
fwait
outsb
or
sbb
sbb
push
jbe
mov
inc
test
jg
imul
bound
push
sub
cmp
pop
cwtl
jbe
xchg
nop
clc
das
xor
ss
cmp
jno
jb
adc
mov
sub
mov
stos
sub
mov
or
mov
or
ffree
pop
xor
pop
and
xchg
test
inc
ljmp
push
inc
push
pop
mov
fcoml
push
pop
sub
push
outsb
les
dec
pop
mov
inc
jo
out
js
add
aaa
stc
rclb
mov
das
pushf
sub
and
sub
lods
call
shrb
adc
inc
dec
dec
loop
sub
adc
stc
mov
inc
lods
jno
fs
and
cmp
mov
mov
push
pop
js
cmpsl
push
fs
lods
mov
popf
aaa
mov
pushf
mov
iret
addr16
sbb
call
xchg
push
fiadds
hlt
rcl
fnstcw
and
test
lahf
jl
pop
mov
addl
test
adc
icebp
lock
dec
lock
lret
mov
dec
sarl
xchg
push
add
add
mov
add
cs
test
dec
in
pop
or
jae
mov
andl
jp
out
jnp
nop
ret
outsl
jb
mov
push
pop
pop
mov
inc
jg
and
mov
and
mov
jne
and
aaa
mov
pushf
jnp
nop
cmp
popl
lock
dec
push
mov
aam
mov
push
clc
jno
and
jp
or
nop
fdiv
int
xchg
adc
add
jne
fsubl
and
dec
xchg
mov
xor
aam
insb
insl
popf
fldt
push
loopne
test
loop
sbb
and
or
cmp
mov
sub
mov
aas
inc
inc
test
popf
movsb
sub
sar
pop
pop
mov
ljmp
push
pop
push
adc
pop
popa
les
or
cmp
fisttps
xlat
jmp
push
xor
adc
stos
stc
adc
test
jmp
rclb
in
mov
cli
jo
scas
scas
mov
xlat
and
daa
das
cmp
cmp
fsubs
inc
push
dec
pop
jg
mov
and
call
lods
nop
mov
pushf
sbb
jae
dec
mov
popf
shlb
int3
shll
repnz
lock
jmp
inc
dec
in
pop
fcmovnu
add
test
les
mov
lea
mov
outsb
jo
mov
pop
lret
push
arpl
mov
mov
iret
push
pop
js
shlb
mov
loop
pop
mov
sub
dec
xor
xor
dec
jb
pop
hlt
or
insb
or
adc
jns
jge
mov
jnp
popa
sbb
gs
js
bound
push
push
fists
dec
cmp
sbb
arpl
call
scas
cmpsb
pushf
dec
adc
stos
ffree
cmp
inc
pop
fstl
sbbb
dec
pop
add
inc
mov
add
jo
js
fdivrl
jo
sbbl
xchg
sub
mov
adc
les
mov
lods
add
adc
inc
stos
mov
aas
shlb
addr16
jecxz
xor
sub
mov
add
dec
ja
sbbb
cmp
sub
ds
push
aas
pushf
xor
lods
mov
pop
mov
ss
adc
bound
imul
mov
dec
cmc
mov
xor
mov
push
jno
daa
inc
mov
sub
pushf
xor
fldl
mov
pushf
dec
push
xor
and
inc
lods
push
lock
lods
lods
pop
scas
nop
daa
push
rcr
add
lock
jmp
pop
aad
mov
orl
mov
bound
outsb
frstor
mov
xchg
rcrb
idivb
lret
mov
adc
or
repz
addr16
add
loope
sti
test
iret
cmpsl
or
mov
xchg
pop
add
mov
push
in
push
sbb
cmp
in
test
push
cli
mov
sub
pop
fnsave
movsb
call
mov
or
addb
dec
xchg
and
fmull
pop
push
loopne
in
sub
andb
jbe
rorb
mov
in
pop
jne
adc
jb
inc
lods
inc
or
pop
nop
gs
xchg
or
dec
sbb
xchg
mov
cmpsl
add
fiaddl
lds
out
mov
jns
das
repz
inc
ljmp
ds
cmp
dec
and
imul
jbe
add
cmp
add
xchg
jecxz
mov
xchg
inc
loopne
je
adcl
insl
ret
clc
sub
dec
dec
arpl
jo
jecxz
lea
call
adc
sub
jmp
fs
add
add
jnp
lcall
dec
js
daa
fs
jp
cmpsb
je
pop
pusha
bound
ja
cmp
jo
add
sbb
pop
popa
cmp
cld
or
push
cmc
lret
sub
dec
xor
sbb
pop
stos
jae
fsts
xor
pushf
cmc
cmp
dec
mov
lods
jno
pushf
or
cwtl
sub
pop
xor
cld
hlt
pop
dec
popa
scas
rcr
dec
lcall
jnp
mov
add
movsl
sbb
movsb
mov
and
mov
arpl
int
adc
cld
jmp
add
flds
lret
iret
popa
dec
mov
sub
mov
andb
xchg
mov
icebp
pop
sub
fcmove
nop
mov
mov
push
dec
and
ljmp
lock
or
jg
jo
fsubrs
dec
stc
pusha
sbb
inc
fs
inc
insl
adc
imull
bound
outsl
daa
jne
jg
fcoml
xor
xchg
push
push
orb
je
jp
push
outsl
push
int3
es
mov
scas
aam
out
test
mov
or
sub
fdivrl
nop
jmp
sbb
insb
dec
imul
and
and
mov
lock
mov
push
push
xchg
popf
mov
push
inc
jg
xchg
shlb
pushf
dec
adc
adc
ljmp
ret
xchg
mov
out
lods
add
adc
in
std
dec
pop
xchg
pushf
xchg
inc
inc
movsb
add
es
add
xlat
xchg
rclb
popa
jl
lods
fmull
sbb
call
jbe
xchg
movsl
add
xchg
adc
fcomps
pop
pop
fcom
inc
mov
outsl
inc
fsubl
int3
xchg
cmc
xor
stos
mov
mov
stos
sub
sbb
lock
enter
push
push
inc
push
dec
dec
dec
mov
and
mov
outsb
dec
jp
aam
scas
adc
dec
ret
dec
jb
ret
push
jnp
lods
aad
push
nop
sub
nop
popf
mov
ret
mov
clc
or
rcr
adc
out
sbb
adc
rolb
sarl
cmpsl
dec
test
aam
scas
roll
mov
and
push
push
pop
pop
mov
push
test
divl
xor
in
dec
xor
push
add
into
mov
xor
dec
out
pushf
cwtl
mov
dec
rorb
mov
add
outsl
xor
adcb
test
xchg
pop
cmp
dec
jp
lods
push
jmp
out
mov
or
les
in
call
adc
dec
add
je
mov
hlt
xchg
inc
adc
testb
dec
sbb
cmp
nop
or
cmpsb
xor
adc
dec
dec
dec
mov
cld
jbe
jl
scas
push
or
cmp
popf
lahf
mov
movsb
cmpsl
leave
push
add
nop
call
mov
stc
test
int3
das
or
in
imul
mov
popf
vcomiss
sub
loopne
rorb
push
fiaddl
insb
sub
shrb
jno
js
xchg
insb
jg
mov
test
enter
aam
pop
adcl
pop
dec
pop
xor
push
fs
imul
sub
pop
rep
movsl
fldcw
stos
and
add
mov
mov
dec
inc
inc
inc
stc
fucomip
add
push
pop
out
pop
in
loopne
addr16
push
jno
xor
mov
fidivs
dec
sbb
or
lods
mov
aam
jl
jae
mov
adc
enter
enter
jb
xor
fisttpll
nop
adc
movb
mov
mov
fwait
pop
pushf
mov
pop
lods
pop
or
push
dec
pop
mov
in
sti
bound
out
adc
in
dec
adc
mov
push
xor
enter
mov
push
mov
push
pop
mov
adc
ret
xchg
test
xchg
scas
lds
bound
and
imul
rcrb
outsl
imul
and
mov
notb
sub
sub
and
jmp
or
enter
popa
bound
dec
jl
call
aad
adc
loopne
stos
stos
rclb
in
les
popf
and
mov
aas
adc
fs
sub
iret
test
fwait
outsb
mov
or
mov
fs
mov
mov
push
push
sub
movb
pusha
dec
clc
loopne
call
mov
movsb
inc
js
inc
cmpl
add
mov
ljmp
addr16
sub
pop
or
jns
pop
pop
push
pop
das
shl
daa
loop
data16
jmp
call
mov
in
pop
xor
cmp
jns
fmull
xchg
push
subl
pop
adc
mov
addr16
int3
cmp
fwait
test
in
xchg
sbb
xchg
mov
test
mov
lret
inc
mov
xor
and
jb
and
das
and
bound
inc
dec
popf
adc
mov
lock
test
fs
and
adcb
pop
daa
gs
push
or
add
insb
mov
lock
or
and
cmpsb
adc
jne
jle
push
push
jno
xchg
nop
imul
xorb
movsb
test
xchg
popf
dec
add
shlb
test
xor
mov
xor
cmp
xchg
in
out
push
push
mov
xor
movsl
xor
pusha
pop
cmp
jns
in
data16
mov
sub
ret
rorb
lcall
sub
scas
push
or
cmpsb
cwtl
xchg
fcomps
xor
jg
aam
lock
push
out
mov
dec
hlt
dec
adc
push
inc
xchg
imul
inc
int3
dec
clc
les
sarb
in
lods
dec
fldt
pop
pushf
test
jbe
movsb
jl
and
pop
xchg
cmp
add
mov
shll
ja
xor
sub
or
and
add
nop
lea
out
sub
dec
pushf
mov
mov
jmp
inc
xchg
xchg
xchg
mov
test
cmp
daa
pop
jg
inc
pop
and
push
jno
outsl
mov
dec
subl
bound
add
xchg
mov
mov
jp
xlat
test
fcmovu
bound
mov
nop
cld
mov
cli
or
out
fld
outsl
or
mov
pop
mov
push
sbb
les
pop
subb
out
sahf
sub
xchg
xchg
xor
enter
pop
into
in
adc
cld
rcll
and
sbb
loop
mov
dec
scas
outsb
push
pop
adc
xor
outsb
pop
sbb
clc
xchg
nop
fcomps
dec
or
or
subb
pushf
xchg
dec
inc
popf
sub
cltd
or
divl
sub
in
mov
lods
pop
and
sti
test
in
adc
or
jge
mov
mov
dec
scas
fdivl
mov
or
movsl
cwtl
dec
inc
inc
jnp
jg
and
pop
sub
cmp
scas
add
mov
lret
mov
movsb
repz
push
pusha
mov
push
mov
enter
xchg
nop
popa
jmp
clc
in
lods
loopne
test
xchg
xchg
pop
movsb
cmp
and
mov
dec
mov
sub
movsl
daa
xchg
pop
jp
cmp
lret
leave
xor
adc
mov
lods
inc
hlt
scas
iret
in
dec
mov
inc
pushf
dec
sub
cmp
movsl
aam
sub
ds
dec
test
ds
push
xchg
push
outsl
fs
movsb
pop
cmp
shlb
xor
mov
push
aam
les
orb
mov
ret
xchg
sbb
mov
fdivl
rol
or
mov
dec
jl
insb
and
dec
cmp
adc
in
mov
adc
call
in
popa
rcl
aad
leave
lret
pop
int3
nop
adc
jg
test
xchg
xchg
xchg
mov
imul
out
call
jp
js
test
mov
add
lods
fcom
les
sub
sub
add
ja
mov
jno
cmpsl
mov
mov
je
inc
nop
xchg
cmpsl
test
add
push
mov
hlt
and
in
dec
mov
cmp
mov
dec
and
pop
inc
cmp
stos
je
clc
fmuls
sub
stos
add
and
cmp
mov
add
mov
push
sbb
orl
add
or
mov
jl
inc
lods
leave
pop
sub
mov
subl
lock
mov
or
inc
pop
imul
or
idivl
push
jge
test
movsl
idivl
cmpsl
add
dec
jne
adc
pop
sbb
je
pushf
pop
addl
xchg
mov
mov
and
mov
sub
mov
pusha
dec
mov
xor
add
mov
fisttpl
rclb
pushf
bnd
cld
lock
adc
dec
pop
scas
popf
loope
imul
data16
lock
nop
arpl
popf
add
jbe
sti
xor
mov
add
mov
in
push
mov
das
js
test
aad
sbb
fsubp
ja
in
xor
adc
mov
jp
push
mov
cmp
adc
je
and
out
fcmovnu
test
shrb
test
mov
shlb
xchg
xchg
inc
jo
mov
cmc
out
sbb
es
mov
popf
icebp
or
mov
imul
scas
cld
cmp
dec
jl
jbe
leave
stos
add
adc
subb
dec
imul
push
mov
lods
pop
push
add
dec
shlb
mov
cmp
insl
xchg
mov
inc
sub
stc
sti
lcall
jl
jnp
dec
mov
dec
loope
xor
pop
cld
cwtl
gs
outsb
xor
xor
mov
or
mov
insl
xchg
push
mov
sete
mov
cltd
mov
jge
xor
jl
outsl
in
mov
push
scas
add
mov
in
shrb
sbb
pop
push
fldcw
das
push
test
fs
mov
mov
or
cmpsl
lods
andl
mov
pop
call
js
cmc
test
test
lret
ja
rclb
in
lahf
hlt
push
sub
ret
mov
dec
pop
pop
call
lock
xchg
inc
xor
jo
outsb
dec
xchg
jae
xchg
movsb
out
addb
in
outsb
inc
insb
popf
mov
cmp
popf
mov
hlt
cmp
mov
ftst
call
scas
mov
xchg
and
pop
adc
cmp
cmp
sbb
and
xchg
sbb
adc
push
mov
jne
adc
rcl
stc
inc
and
scas
jecxz
cld
cld
and
sub
xor
pop
cmp
xor
test
mov
xor
mov
inc
sbb
scas
arpl
leave
dec
add
dec
ja
rcrb
adcb
adc
or
mov
je
add
mov
mov
test
hlt
out
inc
pop
push
insb
pop
adc
cltd
lcall
dec
sti
jge
sub
cmp
lcall
dec
test
test
fs
jbe
sub
gs
icebp
add
add
mov
dec
push
mov
or
sub
xchg
js
dec
je
jl
dec
loop
sub
sbb
loop
pop
fimuls
add
sbb
pop
or
jl
xchg
shlb
mov
cmp
ret
movsb
mov
xlat
adc
adc
sub
pop
bound
jge
add
fcoml
mov
int3
push
out
arpl
dec
and
hlt
and
jl
jp
sub
fsubs
loope
pop
jg
andb
pop
addr16
insl
jle
dec
mov
mov
mov
inc
addb
inc
call
cltd
mov
cld
cwtl
xchg
stc
mov
adc
rcr
mov
xlat
iret
push
mov
mov
stos
mov
and
je
gs
dec
inc
xchg
cmp
sub
mov
adc
int
stc
push
cmp
outsl
mov
loope
lcall
mov
cld
movsb
test
push
mov
mov
inc
pop
mov
dec
and
stos
mov
fs
mov
or
cmp
lods
bound
in
add
dec
add
inc
fisttpl
mov
call
mov
mov
dec
cwtl
inc
add
mov
test
inc
xchg
cwtl
lea
xchg
jle
sbbl
sub
andb
imul
sbb
mov
adc
roll
and
sub
sub
jnp
leave
add
pop
test
xchg
sub
mov
popa
aam
mov
cwtl
jno
lds
leave
cwtl
mov
cmpsb
test
mov
call
xor
aam
repnz
add
data16
fcoml
das
jle
and
adc
add
add
sub
cld
xchg
pop
out
test
pushf
xor
push
cwtl
xchg
mov
pushf
push
mov
scas
xchg
sub
jg
mov
mov
pop
mov
mov
mov
xchg
shr
lods
pop
mov
cmp
xchg
xor
mov
jb
mov
outsb
jno
or
add
je
xorl
xchg
push
xor
mov
adc
xchg
scas
jle
sbb
pop
test
and
enter
or
scas
adc
sbb
adc
xchg
popa
and
inc
mov
adc
and
dec
adc
or
dec
je
in
in
mov
fstp
mov
inc
lret
iret
rolb
test
xor
cmpsl
and
xchg
xchg
xchg
push
push
push
pop
cs
ljmp
push
pop
pop
ss
fsubl
or
and
jp
cmp
iret
mov
scas
aad
in
sub
cwtl
dec
jae
jecxz
divb
and
push
in
mov
call
mov
lea
adc
xchg
dec
sub
pop
jae
test
stos
adc
nop
sbb
adc
orb
jo
and
xchg
sbb
cwtl
mov
leave
insb
adc
xor
enter
mov
dec
lret
dec
leave
mov
inc
sbb
mov
xchg
mov
jl
js
outsb
jo
mov
push
adc
inc
cwtl
push
push
sbb
insb
test
adc
mov
sub
mov
push
jg
loopne
call
insb
adc
xchg
xor
enter
mov
int3
inc
mov
xchg
or
add
sbb
cltd
adc
xchg
lea
sub
outsl
push
test
insl
scas
push
jns
cs
nop
adcl
xor
lods
mov
in
mov
adc
push
mov
test
mov
lret
pusha
xchg
inc
test
push
xchg
and
adc
out
lahf
pop
sbb
dec
lahf
bound
xchg
and
mov
das
jbe
cmp
adc
inc
dec
xor
adc
inc
add
jmp
clc
add
in
out
sub
lcall
cmp
lret
rclb
rcll
nop
ret
jg
fcoms
insb
dec
inc
arpl
adc
pop
arpl
push
cmp
mov
mov
stos
das
or
xor
fidivrs
and
lock
xchg
shlb
sub
nop
cld
shlb
adc
test
enter
jno
adc
inc
subb
pop
cwtl
lcall
fimull
and
pop
stos
repz
pusha
dec
pop
inc
imul
jo
loopne
call
mov
lea
mov
ds
int
sub
iret
add
adc
xchg
test
xchg
xor
mov
jns
jbe
es
pop
pusha
int
jnp
hlt
push
push
imul
add
adc
sarb
orb
shlb
sub
xchg
sahf
fsubs
adc
movsb
jo
js
int3
in
les
jg
add
mov
dec
mov
xor
inc
cmpsl
lret
imul
and
inc
xchg
scas
and
jne
rorb
lahf
mov
sub
scas
call
stos
cmc
xchg
nop
aas
and
xor
mov
xlat
fmull
cs
out
mov
xchg
and
fwait
hlt
in
or
adc
push
in
cmp
cmp
jl
mov
adc
into
adc
sub
or
outsl
adc
and
fimuls
movsb
adc
adc
test
aam
or
les
insb
xchg
pop
sbb
stos
enter
cld
add
or
es
sub
jbe
jecxz
xchg
xchg
push
jl
pushf
xor
sbb
movsb
pop
add
xchg
nop
aad
dec
add
xchg
dec
xorb
xchg
sub
in
in
push
dec
test
andb
pusha
scas
push
mov
mov
mov
dec
jo
or
mov
xor
and
into
rcl
push
add
jmp
sbb
sub
mov
imul
push
pushf
sbb
dec
sub
push
loopne
inc
sbb
adc
push
mov
stos
push
cmpsb
pop
sahf
cmp
lcall
pop
or
jne
xor
mov
gs
lods
xchg
and
dec
or
clc
and
xchg
je
adc
add
jo
out
jl
push
fwait
movsb
cmpsl
sbb
lret
mov
clc
lods
xor
clc
push
lds
rcrb
repnz
and
loope
jg
test
pop
adc
fsubrp
or
in
lock
outsl
jbe
adc
bound
outsb
and
dec
pop
push
cwtl
lds
sub
and
lds
fwait
adc
add
lods
push
inc
add
cmp
push
lock
adc
aam
test
dec
rcl
push
dec
lock
sbb
pusha
adc
cld
inc
add
fcoms
fcompl
aam
and
loopne
adc
das
adc
jmp
inc
add
test
xchg
in
inc
xchg
fidivl
xchg
push
sbb
jo
call
sub
mov
xlat
adc
sub
or
fs
mov
rcl
jns
and
dec
and
mov
xchg
orb
xchg
insb
dec
sub
aam
xchg
mov
movsl
and
or
pushf
xor
mov
ss
xor
pushf
cltd
movsb
insl
adc
je
mov
dec
push
push
orb
movsb
push
sub
mov
mov
push
test
in
into
leave
pop
popf
inc
in
or
scas
ds
jae
popf
cwtl
add
lret
test
cwtl
inc
addl
ficomps
stc
sub
mov
adc
popa
or
icebp
repz
lock
mul
in
dec
mov
dec
push
sbb
dec
dec
inc
fistpl
xor
cs
cld
insb
hlt
lret
lods
push
test
jns
dec
test
mov
fstpl
add
fcmovu
lock
insb
movsl
push
pop
mov
sbb
push
pusha
xor
aam
lea
or
fadds
stos
faddl
lcall
in
sub
test
faddl
mov
fwait
orb
xchg
in
mov
les
lock
adcb
fisubrl
sbb
xor
jo
sub
daa
mov
fcmovnu
jno
and
push
adc
mov
subb
xchg
push
xchg
movsl
sub
push
sub
cmp
movsb
dec
fstp
mov
pushf
aad
push
and
sub
push
pop
sub
clc
push
jo
lods
push
mov
mov
sub
outsb
xchg
push
jne
dec
xchg
mov
movsl
nop
movsb
mov
scas
pop
mov
xchg
ret
pop
mov
or
jp
pop
je
aad
pop
and
cld
cwtl
xchg
xchg
adc
adc
fwait
test
or
adc
push
bound
push
sti
xor
inc
out
and
sbb
sub
cmp
dec
cmp
adc
ror
pop
je
push
loopne
lock
in
movsl
push
pop
and
aam
je
mov
inc
add
clc
and
push
js
je
test
repz
push
aam
mov
js
add
nop
dec
in
mov
scas
adc
lea
adcb
cmpsb
sub
cmp
call
cwtl
test
or
call
and
push
adc
add
pushf
dec
push
mov
out
and
cmp
mov
and
jmp
stos
or
or
js
add
outsb
es
xchg
movsb
or
mov
mov
and
iret
fnstcw
pop
loope
mov
je
es
call
out
lds
in
testb
bound
jbe
lds
xor
push
and
mov
xchg
lret
sub
ds
mov
inc
nop
adc
push
adc
sub
cmp
in
imul
insl
sub
pushf
movsl
pop
movsb
dec
test
in
mov
inc
addb
sub
sub
xchg
js
call
in
movsl
xor
movsl
fsubl
push
xor
sub
rcrl
xchg
shrb
adc
jl
or
mov
mov
inc
xchg
xchg
push
insb
xor
push
fsubrs
inc
mov
add
out
xchg
sbb
adcb
or
sbb
orb
push
cwtl
pushf
mov
cwtl
sub
or
sub
sub
sub
push
aam
push
jo
rcll
sub
sbb
in
mov
and
sub
adc
or
in
or
out
out
xchg
jno
sub
movsb
je
or
add
std
clc
repnz
add
cwtl
push
aas
xchg
xor
imul
outsl
bound
sbb
in
cli
adc
mov
rorl
ds
pop
adc
jmp
mov
pop
lods
mov
or
xor
xchg
pop
push
add
push
or
js
xchg
insl
jl
sarl
mov
rclb
sub
push
push
fdivrs
xchg
mov
mov
stc
cwtl
rorl
mov
mov
movsl
adc
shr
test
test
sub
les
icebp
sub
add
cwtl
pushf
mov
mov
lock
call
inc
or
dec
sub
mov
pop
inc
jmp
sub
aas
adc
repnz
ret
mov
mov
dec
adc
mov
in
mov
enter
je
fwait
jo
or
fs
or
add
xor
dec
mov
in
xor
fs
or
sbb
xor
lret
adc
hlt
clc
stc
cmpsb
mov
out
negb
imul
pop
cmpsb
sbb
dec
xor
mov
fdivl
xor
xor
mov
push
jo
orb
dec
lock
xchg
movsb
imul
lods
mov
dec
xor
test
or
lods
xchg
in
mov
pushf
inc
cwtl
shrl
movsl
mov
sbb
shll
cmp
sub
imul
inc
insb
mov
mov
cmpb
dec
inc
push
out
hlt
xchg
jo
sub
rcrb
add
sub
test
xchg
or
daa
test
cmp
sbb
or
pmuludq
adc
mov
in
add
or
ljmp
nop
aad
inc
add
xor
test
push
imul
xchg
nop
dec
or
movsb
fidivl
push
pushf
xchg
and
mov
lea
ss
lahf
les
xchg
pop
dec
leave
sub
sbb
sub
imul
mov
mov
cmc
sub
cmpsb
dec
sbb
lds
push
lods
sub
push
mov
in
mov
inc
inc
cmpsb
or
pop
pop
gs
outsb
adc
cmpsb
test
push
push
push
pop
cmp
adc
sbb
fwait
adc
std
mov
sti
cld
sbb
stc
cli
jecxz
dec
mov
scas
or
dec
add
fdiv
xchg
inc
int3
addb
jecxz
loopne
add
popa
mov
fnsave
mov
sbb
adc
in
sbb
sub
or
dec
and
cmc
test
nop
movsb
sub
sub
int
sbb
nop
mov
push
mov
jo
test
xchg
push
xor
mov
push
xor
sub
mov
xor
sub
dec
adc
pushf
xchg
or
shrb
cltd
sub
imul
insb
or
add
popf
insb
pushf
pop
pop
add
adc
xor
mov
or
add
mov
xor
hlt
dec
mov
sub
add
cmp
push
dec
fidivl
and
sbb
shll
xchg
lods
adc
lret
and
movsb
cmp
mov
fwait
xor
cmpsb
adc
jnp
or
cwtl
mov
xchg
push
push
mov
mov
sub
movsl
sub
lcall
ret
adc
adc
in
popf
add
add
or
or
rorl
sub
inc
aam
adc
or
clc
imul
sub
fs
xchg
test
sbb
mov
sub
xchg
push
inc
add
push
cwtl
cmp
inc
xchg
cmpsb
adc
inc
cmp
lods
dec
sbb
nop
aad
jmp
test
xchg
dec
push
addr16
outsb
adc
testl
repnz
or
or
mov
mov
jo
cltd
add
or
pop
pop
fists
add
add
mov
sub
into
adc
push
dec
sbb
cmp
pop
sub
or
or
add
sbb
sbb
repnz
xlat
jbe
add
inc
push
lock
lret
loop
sbb
loopne
loopne
mov
repnz
adc
pop
push
jo
loope
ljmp
jg
add
sbb
mov
pop
cmp
push
psubsw
jecxz
or
dec
pop
push
push
and
jo
jo
push
jae
gs
loopne
loopne
cmpsb
and
inc
sqrtps
ret
sbb
mov
loopne
loopne
stos
sub
cmp
dec
fs
outsl
or
mov
stos
adc
push
mov
arpl
cli
sub
inc
dec
insl
adc
pop
push
or
shrl
arpl
aaa
inc
mov
lret
and
insl
cmp
adc
lcall
jo
lret
adc
shrb
into
ss
xor
dec
push
or
push
inc
popa
push
subb
pop
ret
out
adc
inc
xchg
inc
fs
or
imul
jo
insb
and
sbb
lret
bswap
adc
inc
push
cmp
dec
dec
out
repz
or
popa
mov
dec
or
subb
insl
push
inc
dec
jle
adc
push
dec
push
sub
test
pop
xchg
sub
in
js
jo
loopne
cmpsl
mov
cmp
mov
push
dec
jo
imul
jns
cld
jb
xchg
loopne
mov
adc
cmp
out
jo
xchg
int3
cmpsl
mulb
shr
xchg
cs
mov
pop
data16
pop
test
push
cmpsb
sub
dec
pop
and
sub
dec
jns
in
xchg
pop
sub
mov
xchg
imul
cmpsb
mov
or
add
pop
adc
js
jne
enter
insb
cwtl
shlb
cmp
mov
jns
bound
pop
or
clc
jae
outsb
inc
mov
fsubrl
addr16
or
dec
sub
ja
cmp
orb
mov
xchg
outsb
lds
xor
push
aam
mov
fisubl
icebp
jo
lret
push
push
pop
ljmp
out
fisubrs
lods
jp
icebp
push
adc
add
push
push
and
push
es
out
jge
push
repz
xchg
cmp
dec
cmp
mov
xchg
xor
dec
jae
fnstenv
daa
arpl
jbe
sbbb
jns
lock
pop
add
dec
test
mov
pop
rcll
mov
inc
ja
jb
and
sbb
sahf
gs
test
adc
inc
push
popa
mov
jo
in
or
movsl
mov
push
push
jae
pusha
sbb
cli
sbb
lea
and
ss
outsb
dec
inc
or
lret
pop
dec
data16
and
jns
test
add
jle
cmp
sub
inc
jo
jle
dec
pop
bound
hlt
cltd
lods
data16
push
jns
repnz
cmp
addr16
jno
inc
cltd
mov
popa
pusha
jnp
test
and
sbb
ja
scas
imul
in
cmp
dec
xchg
inc
lcall
xchg
or
outsl
lea
scas
stc
les
lret
mov
and
gs
je
int3
mov
dec
dec
jl
test
aaa
dec
adc
cmpsl
jmp
into
int3
insl
aad
lret
dec
bound
jno
inc
jbe
ds
lock
add
jb
jb
into
inc
or
mov
sub
cli
mov
into
inc
xor
imul
in
xchg
and
flds
call
sub
dec
sbb
pushf
fisttpl
sbb
ss
xor
jno
leave
mov
and
or
sbb
cmpsb
sub
dec
inc
mov
enter
rclb
sub
xchg
into
jno
adc
fcomps
push
outsb
pusha
push
sub
fs
add
js
scas
inc
cltd
sbb
adc
sbb
push
adc
addr16
xlat
test
mov
xchg
mov
dec
mov
insb
ja
js
sub
repnz
ja
or
repnz
xchg
lods
inc
jl
ds
pop
lahf
stos
jl
dec
push
sub
pop
inc
outsb
fcmovb
xorb
sbb
mov
or
rcrb
push
inc
js
movsb
jecxz
or
mov
sbb
gs
mov
shrb
or
add
cld
dec
xor
mov
lret
pop
mov
and
inc
mov
stos
xchg
and
jns
jo
and
mov
or
jp
fcomps
addr16
xchg
and
or
cltd
add
daa
mov
scas
outsl
movsb
insb
data16
es
or
arpl
mov
idivb
imul
leave
dec
ret
clc
inc
dec
pop
insl
sahf
in
sub
cmpsb
lods
inc
cvttps2pi
dec
scas
xor
insb
dec
mov
and
dec
imul
insl
sbb
jbe
push
scas
inc
cli
dec
loope
in
outsl
jbe
inc
add
or
pop
xchg
pop
mov
dec
mov
jo
or
popf
xchg
add
test
dec
push
lret
sub
sub
sub
push
xchg
mov
or
push
xchg
and
mov
fdivl
inc
mov
mov
mov
sub
or
sbb
nop
jne
cmpsb
movsb
test
cmp
sbb
push
xchg
or
jp
inc
mov
das
jbe
pop
outsl
sbb
or
dec
jne
mov
adc
mov
sbb
add
imul
jle
add
cmpb
jp
inc
cltd
jo
add
or
adc
inc
lret
fs
mov
push
push
xchg
arpl
inc
negb
dec
add
or
xor
cmp
sub
add
push
pop
int3
hlt
pop
into
sbb
sub
cmpsb
pop
popl
les
mov
sub
mov
inc
imul
sbb
sub
movsl
sub
outsb
dec
shrb
loop
into
fs
dec
inc
fsts
js
jb
jne
je
and
es
jne
jmp
jp
stc
sub
fs
cmp
dec
add
mov
pop
inc
fs
lods
enter
mov
dec
test
aam
mov
out
push
sub
inc
xchg
test
dec
or
loopne
int
inc
adc
push
push
push
jns
js
mov
les
cmp
xchg
js
mov
outsb
pop
insl
adc
popa
inc
js
push
inc
and
hlt
fistps
sub
dec
push
push
pushf
add
rclb
mov
or
inc
js
add
shll
flds
xchg
or
mulb
cmp
shll
inc
mov
xchg
push
dec
js
jno
aas
pop
push
pop
cs
push
dec
mov
dec
adc
fs
and
fsubrs
or
and
inc
lds
or
mov
cmpsb
sbb
dec
mov
arpl
lcall
cmp
cmp
jl
dec
dec
adc
mov
and
pop
cmp
sarl
dec
pop
shrb
jg
jae
sbb
pop
mov
jae
into
cmp
dec
test
fmul
adc
jne
or
push
movsb
push
loopne
pushf
and
adc
mov
xor
jo
and
mov
push
adc
adc
xor
sub
inc
pushf
nop
add
imul
jb
inc
push
mov
dec
scas
xchg
mov
and
sub
or
jo
jo
cld
sbb
sub
enter
sbb
push
inc
je
sub
movsl
xchg
lahf
pusha
adc
sub
dec
xchg
popa
cmpsb
decb
mov
cmp
mov
mov
outsb
repnz
lods
in
sub
test
cs
sub
aam
mov
insb
fdivrs
xchg
enter
sbb
insl
adc
pop
ret
mov
movsb
mov
es
loopne
rcll
les
popa
leave
xor
adc
movsb
mov
or
test
movsl
cltd
sub
xchg
in
imul
sub
insl
ss
dec
lods
cmp
xchg
or
lods
gs
sub
cltd
mov
sub
sbb
xchg
lock
outsb
nop
push
jp
jp
loop
outsb
int3
mov
sbb
insl
lret
es
das
push
decb
or
js
and
mov
inc
clc
daa
movsb
lret
nop
out
push
pushf
jns
insb
mov
jbe
lods
inc
je
in
xchg
xchg
mulb
adc
dec
and
mov
inc
test
movsl
test
ds
mov
iret
andb
jns
ja
imul
roll
and
xor
push
mov
mov
push
cmpsl
insb
sub
test
js
sub
and
dec
movsl
mov
cld
adc
mov
subb
adc
adcb
sub
add
push
push
sahf
sub
pop
jnp
sbb
insb
lcall
es
xor
dec
dec
add
dec
pop
mov
scas
das
inc
xor
rorl
loop
push
sub
movsb
xchg
imul
in
fwait
xor
int
loop
push
adc
push
dec
iret
mov
icebp
movsb
and
adc
or
pop
in
rcr
jb
and
xchg
in
push
push
arpl
jo
stos
sbb
dec
xchg
test
dec
stc
pop
pop
cld
out
stc
dec
sub
mov
popf
push
lcall
xchg
push
in
sahf
xchg
out
je
pop
xchg
popa
jb
imul
fsubrs
push
jnp
testb
in
aad
mov
push
pop
pop
sub
or
hlt
jb
mov
call
and
enter
pop
in
push
test
daa
push
mov
mov
add
or
out
push
dec
push
inc
or
dec
fmull
test
add
daa
push
arpl
mov
xchg
xor
fs
icebp
js
inc
or
outsb
stos
xor
loop
cmp
outsl
mov
test
in
hlt
stos
inc
dec
push
fs
gs
pop
leave
add
dec
inc
push
leave
insl
lcall
dec
xor
xchg
sub
sub
cltd
es
xor
stos
jle
int3
std
sub
push
pop
push
inc
jbe
inc
lcall
rcrb
cmpsl
inc
movsl
int
jmp
sub
push
movsl
push
or
les
push
inc
cwtl
mov
xchg
dec
out
movsl
cltd
insb
insb
push
fisubrl
lret
bound
mov
arpl
dec
jae
pushf
push
xchg
xchg
push
jo
shlb
insb
mov
daa
addr16
xor
dec
dec
sbb
roll
dec
dec
in
push
cs
jbe
in
pushf
sub
inc
das
adc
xchg
cmp
notb
data16
xor
popf
fsubrs
jb
ljmp
scas
cli
adc
mov
ds
cmp
mov
ror
pop
cltd
outsb
jb
add
pusha
jmp
cmp
sub
int3
xchg
pop
and
and
sub
push
sub
sti
dec
xor
jae
push
mov
push
pop
mov
ss
push
dec
popa
sbb
and
in
adc
xchg
jo
ja
or
push
fidivl
sub
dec
ficoms
sub
aam
mov
jl
outsl
sub
imul
out
cmpsl
cmp
sbb
imul
lock
repz
imul
fs
addr16
rclb
sbb
leave
xor
sub
in
jmp
bnd
xchg
xchg
dec
js
and
sbb
pop
push
xchg
fldl
mov
fsts
cwtl
jns
mov
sub
sahf
mov
sbb
mov
rcrb
dec
add
sub
sub
jge
test
push
dec
shr
pop
cmp
and
mov
pop
sbb
outsb
xor
xchg
imul
sub
js
adc
and
xor
push
sub
fldz
movsl
lock
jb
out
or
inc
xor
xchg
imul
inc
pop
jmp
dec
push
outsb
fidivrl
mov
and
sub
adc
mov
sub
js
lds
sub
fsub
insb
cld
push
movsb
mov
mov
pop
outsb
mov
mov
sahf
sbb
cmp
test
pop
movsb
scas
cmp
lret
cmp
sub
sbb
cs
aam
ffreep
shrb
sub
repz
sub
xchg
arpl
cld
popa
popf
xchg
fcoms
adc
add
hlt
push
push
insl
jl
mov
sub
dec
inc
and
daa
ja
test
push
test
xchg
in
lret
inc
sub
sub
adc
cmp
mov
dec
lahf
dec
pushf
test
xchg
adc
mov
inc
sbb
cmp
cmp
outsb
adc
cmp
sub
movsl
outsb
sahf
mov
sub
inc
jo
int3
dec
je
imul
pop
sub
mov
mov
insb
xchg
adc
mov
sub
mov
sub
xchg
pop
push
mov
call
inc
pop
std
sub
imul
daa
insl
insb
xor
outsb
test
sbb
ja
inc
cmpsb
pop
jb
ds
lock
aas
les
roll
xor
push
push
adc
lock
fs
add
pop
imul
xchg
pop
test
jo
dec
inc
repnz
xchg
test
das
test
push
mov
fimuls
and
jo
pop
inc
sub
jb
mov
je
sbb
sub
sbb
sub
push
inc
leave
xor
je
dec
pop
mov
add
pushf
arpl
jns
cmp
mov
mov
dec
inc
xchg
push
into
sbbb
inc
inc
xchg
les
push
dec
mov
fwait
xor
mov
cmp
cmp
mov
xchg
nop
xchg
sahf
sub
jne
dec
dec
repz
cmp
sub
mov
dec
xor
lds
adc
sbb
cli
lret
adc
mov
pop
mov
repnz
xor
sub
mov
mov
inc
cmp
pusha
dec
inc
xchg
or
sahf
jo
hlt
adc
nop
mov
or
adc
shlb
push
mov
insl
adc
inc
pop
mov
loop
dec
lds
sub
cltd
adc
sahf
js
es
push
in
xor
jge
in
xor
or
adc
sub
lcall
dec
xor
dec
je
push
or
adc
adc
mov
out
adc
mov
leave
jne
je
or
inc
xor
add
xchg
repnz
jb
cltd
or
mov
shlb
pop
mov
and
xlat
mov
pop
xorb
pop
sub
inc
mov
dec
test
mov
mov
daa
jo
fmuls
xchg
add
lret
sbb
fmul
pop
cld
dec
jno
aas
lret
mov
sbb
cld
insb
mov
int3
or
in
cmp
adc
adc
lock
mov
push
leave
test
or
arpl
push
icebp
aas
aas
sahf
mov
lahf
outsl
inc
ds
mov
out
dec
jo
aam
mov
pop
cs
inc
leave
sbb
shl
push
nop
std
jle
nop
movsb
fdivrs
scas
rorb
repnz
xchg
push
cld
mov
lds
cmp
push
out
mov
fcmovu
cmp
mov
inc
push
fisubrs
out
push
je
sub
lea
fs
mov
hlt
ljmp
leave
ds
aam
dec
sbb
jae
dec
test
bnd
lcall
lock
add
push
fxch
sub
shl
mov
mov
pushf
sub
sub
pop
das
add
pop
push
jge
add
insb
jecxz
mov
popf
out
imul
sbb
pop
mov
xor
dec
dec
push
loop
inc
ds
lds
sub
mov
xchg
mov
adc
test
data16
sbb
jl
mov
mov
push
test
loopne
cmpsb
push
dec
sub
jl
hlt
imul
mov
xchg
mov
sub
xchg
add
scas
test
lahf
xchg
and
jp
push
jo
dec
push
mov
xchg
bnd
sub
mov
movsl
ss
stos
push
test
fwait
xchg
dec
xchg
in
push
into
pop
or
ficoms
enter
inc
mov
xor
jne
ljmp
xchg
xor
push
mov
test
cmp
leave
xor
pop
inc
pop
push
adc
push
stc
push
adc
add
ss
sub
je
in
loope
pop
cmpsb
insb
fwait
sub
fs
outsb
in
and
sub
shrb
rol
int
or
inc
out
sub
out
mov
cmp
jle
daa
and
orb
sti
mov
adc
mov
sub
and
adc
inc
sbb
xor
push
pop
xchg
and
mov
pop
xchg
mov
and
enter
shl
cmp
test
cmp
lahf
aaa
jb
or
das
scas
inc
icebp
sub
mov
stc
adc
negb
pop
mov
pop
mov
push
ljmp
mov
clc
cmp
xchg
pop
ss
or
fld
cmp
dec
lret
sub
stos
fldenv
lret
jl
add
cmp
xorb
repz
add
fwait
cmp
sbb
push
loopne
dec
popa
add
push
push
cmp
jecxz
adc
sbb
xor
sbb
push
clc
sub
ja
fwait
add
jns
mov
int
dec
cmp
inc
jo
ss
adc
arpl
jne
pop
out
dec
jno
bound
jae
imul
gs
loop
cmp
dec
sbb
mov
xlat
adc
outsl
sbb
clc
lret
jno
adc
outsb
jae
fwait
push
push
popa
jb
jle
mov
inc
and
lock
inc
arpl
stos
sub
dec
cmp
sub
sbbb
testb
sub
dec
popa
jbe
push
push
or
cmp
push
shlb
fs
icebp
xchg
sbb
ret
adc
sub
pusha
sbb
insl
or
inc
gs
out
mov
insb
lods
hlt
dec
movntps
inc
jo
imul
mov
stc
jle
adc
xor
mov
mov
jmp
mov
sbb
jo
pop
insb
push
adc
int
cs
inc
popl
nop
dec
push
inc
adc
lret
out
cltd
outsb
imul
or
es
sbb
adcb
jno
jge
imul
cmp
js
xor
jo
push
inc
xchg
dec
lcall
jne
xchg
stos
aam
int
insl
movsb
sbb
fldl
inc
inc
mov
outsl
addr16
inc
in
test
jbe
test
and
fiadds
mov
mov
push
xchg
jp
xor
push
push
mov
nop
ds
in
outsl
dec
cwtl
cmp
popa
out
jns
push
frstor
les
iret
and
add
mov
fstl
inc
xor
xchg
ret
test
mov
in
movsl
dec
jne
stc
incb
lret
cmp
es
dec
insl
push
jo
std
push
ja
into
push
mov
pop
lods
subl
lock
jmp
and
or
lods
cmp
adc
cwtl
incl
in
pop
or
and
insl
and
jb
stos
popa
test
scas
dec
xchg
dec
rorl
inc
or
push
add
adc
maxps
dec
bt
pop
mov
test
cs
sbb
jns
arpl
push
inc
dec
and
dec
data16
arpl
popa
lods
dec
fs
icebp
leave
inc
nop
sbb
xor
bound
xor
push
cltd
xor
sbb
and
fiadds
push
jl
sbb
jae
std
push
and
mov
and
adc
cmpsb
inc
push
sub
and
xor
sbb
leave
iret
mov
fisttpl
mov
push
or
cmp
jle
adc
xchg
sbb
test
mov
dec
aaa
fs
dec
aad
xchg
test
pop
out
pop
mov
adc
pop
push
negl
adc
sbb
mov
pop
mov
int
mov
nop
pushw
add
and
rcll
popa
cmp
jb
jne
lods
push
gs
out
ljmp
add
xor
xchg
add
push
inc
or
loopne
adc
mov
add
jo
dec
mov
sub
lock
sbb
mov
or
pop
add
mov
add
add
lcall
and
dec
adc
mov
das
scas
rorl
pop
arpl
aaa
test
sbb
gs
sub
jb
mov
cmpsb
std
sub
imul
inc
add
insl
cmp
push
sub
add
adc
and
cmpsb
xor
sarb
mov
and
sub
push
adc
adc
test
or
test
mov
bound
dec
xor
add
pop
push
dec
inc
jo
je
pusha
push
xor
mov
jae
arpl
ljmp
out
mov
hlt
lea
xor
testb
inc
xchg
add
gs
outsb
add
pop
xor
pusha
push
jne
lea
and
push
push
aaa
inc
sub
pop
mov
popa
imul
and
cmp
jg
xor
pop
xor
push
jae
stc
lahf
lods
sub
repz
inc
ja
in
cltd
sbb
or
adc
and
inc
push
rclb
push
lds
lods
or
pushf
dec
fadd
daa
dec
nop
cltd
jb
cmp
rcl
aam
rolb
mov
gs
test
inc
add
clc
jmp
or
sti
bound
int
mov
dec
push
dec
xor
sub
pop
je
lods
clc
enter
inc
pusha
adc
push
int3
nop
jecxz
in
adc
lret
lret
jmp
jo
insb
jb
cmp
mov
and
push
enter
jno
and
dec
cmpsb
adc
or
fcomps
xchg
inc
enter
xor
xor
xor
mov
jg
inc
and
sbb
sbb
adc
aam
push
or
cmpsb
or
sub
mov
sbb
cld
jb
cmp
or
or
and
push
call
mov
je
movzwl
xor
pop
shrb
cmpsb
xor
in
or
call
push
cmpsb
xchg
push
and
pop
lds
jp
cmp
xor
xchg
push
imul
push
jmp
aaa
or
and
outsl
data16
push
pop
jl
push
sbb
pushf
inc
inc
xlat
jbe
xchg
jo
in
lock
mov
ret
mov
or
dec
ja
cmc
popf
adc
mov
and
das
nop
inc
adc
mov
insl
cmp
inc
out
adc
inc
sbb
push
rolb
or
push
adc
fwait
and
lahf
idivl
push
decb
cmp
jg
sbbl
filds
repnz
xor
jo
push
push
hlt
fstps
xor
inc
gs
test
and
out
cmp
pusha
roll
enter
fnstcw
filds
fwait
insb
out
xor
jl
or
add
sub
adc
push
mov
mov
or
orl
mov
es
xchg
addb
shl
fcoml
and
ret
stc
lret
add
or
or
shlb
xor
push
adc
sbb
and
sbbl
shll
adc
add
sbb
and
push
ret
sub
add
lret
mov
scas
add
inc
movb
cmp
mov
add
fs
push
lds
bound
mov
adc
testb
add
sti
adc
sbb
sub
lea
mov
clc
cmp
push
cmpsb
mov
lock
sub
pop
add
call
sbb
mov
inc
push
sbb
push
fsubr
mov
adc
push
adc
cld
mov
test
or
loopne
mov
adc
or
mov
repnz
sub
inc
mov
lret
mov
rcll
ret
sbb
sub
sbb
sbb
add
nop
cmpb
xor
and
mov
add
rcrb
push
ficoml
sbb
adc
inc
test
push
push
fsubr
lea
dec
add
and
es
cmpsl
or
je
sti
add
into
add
and
xor
or
inc
cmp
movb
push
out
adc
pop
pop
fs
test
dec
insl
jl
int3
xchg
js
adcb
sti
xchg
and
jle
sbbb
inc
inc
lea
push
add
cmp
push
mov
sti
and
test
decl
mov
sbb
inc
mov
pusha
push
mov
mov
mov
fidivl
sbbl
dec
inc
mov
push
sub
flds
dec
adc
dec
add
add
cmp
ja
mov
mov
dec
and
adc
sub
and
jne
je
inc
shll
xchg
push
inc
xchg
fildll
dec
inc
sub
out
cli
inc
adc
adc
sbb
sub
pop
push
scas
mov
es
dec
leave
sti
and
jns
call
inc
popf
and
adc
mov
sbb
jo,pt
mov
jb
adc
and
xor
mov
cmp
xor
ja
or
lds
push
cmp
lds
mov
and
sbb
jle
loopne
pusha
or
add
and
jnp
sbb
or
cmp
pop
in
push
xchg
xor
mov
pop
cmp
jb
mov
sub
sub
xchg
sbb
lret
sahf
sbb
sub
stos
and
push
push
jmp
popl
sbb
orl
or
mov
inc
aam
andb
lea
cmp
sbb
push
sbb
or
or
shll
cli
and
roll
adc
popf
push
or
jnp
or
test
or
nop
cmp
dec
aas
cmp
sub
ds
add
xor
movl
inc
jne
lea
xchg
shl
and
andb
push
or
loopne
gs
pop
test
rorb
jmp
pop
nop
adc
aam
inc
rcrb
fs
mov
rol
add
mov
sbb
ficoms
xor
xor
aas
jmp
pop
das
adc
sti
dec
ljmp
sbb
mov
cmp
cmp
mov
adc
test
pop
xorb
cmp
or
inc
push
push
jo
ficoms
pop
cwtl
shld
push
xchg
adc
ret
shll
movl
orl
dec
pop
sbb
push
flds
push
pop
aam
int
mov
dec
adc
test
push
mov
pop
xor
xchg
sbb
rcll
push
adc
xchg
ret
jb
into
sub
cmp
jne
cwtl
jbe
outsb
sub
mov
push
data16
add
xchg
jp
xor
or
into
nop
mov
inc
mull
xor
out
and
add
mov
push
pusha
xchg
jne
or
arpl
dec
jle
pop
xor
adc
inc
stc
jecxz
inc
cmp
push
lea
scas
and
pop
xor
xor
or
call
adc
mov
add
lret
cmp
out
clc
mov
sub
into
pop
cltd
mov
call
add
sub
sub
mov
xchg
lods
mov
sbb
add
data16
lea
addb
add
sbb
push
xchg
icebp
and
cmp
cmp
shrb
adc
roll
imull
pop
sbb
xorb
jb
repnz
sbb
das
scas
outsl
lret
jg
cmp
call
push
cli
fsin
ret
test
repnz
lea
push
xlat
in
sub
adc
and
add
insb
dec
lds
push
enter
cmp
js
push
call
nop
mov
or
adc
add
ucomiss
lret
xchg
adc
or
pop
pop
xor
inc
fisubrs
jae
cwtl
adc
imul
popf
and
enter
lea
cmp
xor
jae
cmp
and
xor
cmc
sbbl
xor
mov
popf
and
or
mov
or
and
jne
or
sub
push
jmp
or
clc
mov
xlat
into
jae
add
mov
enter
cs
inc
and
dec
or
lcall
and
mov
sbb
xchg
lds
jle
call
imul
fld
inc
jl
and
add
adc
and
lock
nop
sbb
ljmp
movb
hlt
dec
sbb
mov
inc
hlt
sub
loopne
pusha
mov
ja
cmp
xor
pop
mulb
call
clc
sub
rolb
aas
test
and
push
shlb
push
add
ja
call
js
and
push
test
mov
add
xor
rol
jno
pop
add
or
lahf
or
mov
dec
or
adc
out
mov
xchg
imull
sub
push
dec
clc
xor
inc
sti
rorb
add
mov
xor
sbb
dec
jbe
inc
mov
je
lods
jmp
mov
stos
inc
push
dec
mov
call
loope
fdiv
shll
xchg
jb
imul
xchg
xor
fstps
adc
mov
push
push
inc
pop
xorb
mul
ror
adc
sub
lret
inc
add
neg
fldz
add
adc
add
js
pushf
or
xchg
rcl
sti
out
adc
ret
lods
push
add
shl
sub
mov
jb
mov
out
xchg
adc
push
add
jg
je
enter
inc
mov
sahf
mov
adcb
jae
aas
jne
cmp
out
aas
jbe
mov
jmp
sbb
int3
add
sub
mov
fs
hlt
or
pop
add
idivb
dec
mul
pop
mov
repz
sbb
add
xchg
add
xor
jge
hlt
fbld
inc
sbb
and
or
xchg
dec
xor
or
xchg
add
fstps
or
mov
inc
push
and
icebp
adc
sbb
adc
pop
icebp
leave
fcmovbe
rcr
into
call
adc
add
xor
bnd
aaa
lret
mov
inc
and
adc
cmp
dec
mov
pop
pop
add
lock
cmp
jae
push
aam
pusha
sbb
push
js
or
dec
pop
dec
pop
sti
cmp
jge
cmp
push
pop
inc
lock
daa
sub
mov
sbb
cmp
xchg
je
or
stc
mov
sbb
add
and
loopne
loop
orl
push
add
call
xor
jne
sub
adc
push
popa
sbb
inc
lock
push
repz
call
push
fistpl
out
push
pop
call
out
adc
gs
sbb
xchg
jne
aad
mov
mov
loope
add
ja
pop
mov
setne
test
cmpl
sub
add
mov
push
adc
cmpb
inc
xchg
das
and
rcrl
jb
int3
call
mov
or
dec
add
es
mov
je
add
pop
icebp
fwait
add
sbb
adc
lods
or
and
sbb
or
jne
fstl
add
xor
loopne
xchg
cld
in
pop
add
sub
and
or
add
fmull
cmc
cmc
call
add
jmp
repnz
mov
mov
dec
psubw
xchg
nop
and
ret
or
cmp
inc
jbe
add
aam
psubb
and
mov
mov
mov
jge
sub
mov
inc
add
or
jnp
xchg
or
mov
add
pop
hlt
fistps
jle
sbb
cmpb
adc
and
nop
cmp
jb
stos
or
mov
jmp
cwtl
dec
loopne
push
fldenv
aaa
xchg
clc
das
mov
sub
shrb
je
mov
or
ss
inc
aas
jle
and
jg
mov
mov
fstpt
add
mov
xchg
inc
dec
popf
push
push
dec
push
mov
les
es
jne
fldcw
or
lea
dec
mov
push
bound
fadds
xor
add
push
inc
mov
mov
cmp
in
pop
mov
xor
cli
xchg
mov
jb
push
inc
nop
xor
test
adc
and
xor
sub
mov
mov
out
mov
add
mov
fsubs
ret
fs
or
adc
jne
mov
jg
sbbl
movsl
sub
jmp
mov
adc
sub
jae
or
inc
mov
sti
mov
cmpsb
loopne
mov
stc
push
cmp
fs
mull
lea
mov
mov
inc
sti
nop
cltd
movl
xchg
inc
push
mov
jecxz
loopne
adc
cs
in
pop
inc
test
and
sub
xlat
ds
or
dec
cmpl
addl
xorl
mov
mov
and
enter
movb
inc
testb
movb
inc
cmp
or
mov
stc
xchg
add
xor
xchg
xor
mov
xor
testb
xor
inc
mov
pop
jmp
sub
and
jmp
mov
bound
xor
sub
adc
shrb
mov
jno
dec
inc
or
and
push
das
aad
test
mov
or
adc
scas
xchg
orb
xchg
xorl
and
jp
push
lcall
xchg
xor
or
mov
sbb
xor
inc
icebp
and
inc
mov
daa
mov
or
and
aas
ja
push
cmp
pop
dec
jne
mov
add
fdivr
fisttpl
sub
push
inc
lcall
inc
testb
jbe
fs
in
sub
popa
imul
call
lds
push
jmp
rolb
lods
mov
insl
popa
insb
mov
cmpsb
dec
push
imul
pop
popa
push
cmp
jns
out
push
xor
push
outsb
imul
pop
adc
dec
jp
mov
inc
or
jmp
xchg
outsb
and
pop
inc
pop
inc
push
mov
test
aaa
dec
lods
mov
dec
lods
xor
sub
adc
mov
decb
dec
roll
sbb
shr
mov
ss
add
cmp
jbe
mov
ficoml
cmc
pusha
pop
inc
cmpl
and
adc
or
mov
les
push
movl
xchg
mov
das
mov
lock
in
leave
jne
mov
out
rolb
outsb
sub
push
mov
xchg
roll
or
dec
and
ror
call
loop
mov
shl
add
xor
out
movl
andl
movsl
jae
push
mov
xorl
sbb
loopne
xor
shl
icebp
data16
out
jne
ja
mov
pop
xchg
dec
mov
fisubrl
movl
mov
in
cmp
mov
inc
mov
or
inc
bound
test
pop
int3
and
cmp
jmp
stos
outsl
jle
loopne
call
std
add
sti
jne
mov
inc
add
mov
mov
or
sbb
movsl
and
jne
cmp
mov
shll
or
aad
or
push
push
call
cmp
push
mov
inc
jbe
repnz
or
je
push
mov
adc
test
and
inc
aad
call
stc
sbb
call
shl
or
mov
adc
notb
or
add
ret
mov
jno
cmp
sbb
adc
xor
inc
in
xor
and
inc
jne
and
leave
pop
mov
test
mov
enter
pop
or
sbb
and
xor
and
push
jmp
nop
mov
adc
fbstp
fs
pushf
push
call
pop
sbb
je
cld
xor
sbb
outsb
pop
xchg
mov
xor
lds
and
cld
or
rolb
out
es
cmpsb
orb
call
cwtl
inc
cmp
jo
or
mov
push
cwtl
cmp
out
adc
scas
push
adc
addb
and
test
push
xor
mov
inc
pop
pop
pop
jne
pushf
addl
fmuls
jae
cwtl
sub
pop
fistpll
xchg
movsl
test
adc
lock
jl
or
or
push
je
out
jle
cmp
jg
adc
rolb
daa
jl
mov
mov
cmova
movsb
jmp
mov
xor
arpl
mov
clc
call
push
test
das
pop
xor
mov
or
cmp
je
xor
test
or
pop
jmp
shll
or
jle
rcrb
push
cmp
popf
jle
adc
mov
out
or
mov
adc
das
add
xchg
xor
push
mov
cmp
adc
neg
adcl
or
mov
jae
adc
jle
xchg
ja
sub
or
lea
jbe
dec
mov
outsb
outsl
shll
clc
sub
cmc
pop
sbbb
or
or
in
popa
mov
or
inc
add
jle
sbb
adc
adc
sub
mov
push
jge
mov
popa
jb
mov
sub
aad
sub
sbbl
fscale
insb
cwtl
or
and
repnz
pop
cs
pop
cld
movsb
pop
adc
leave
push
mov
mov
mov
nop
out
add
cmp
or
mov
jbe
mov
inc
adc
sub
mov
cmpb
ret
pop
xorl
inc
ret
inc
dec
xchg
call
push
loope
cmc
data16
popw
mov
mov
xor
sbb
cmp
adc
push
jg
push
jle
or
adc
add
scas
int
or
loop
mov
movsl
push
add
clc
dec
call
js
and
imul
push
push
inc
les
adc
inc
cmp
or
mov
cmp
sbb
xchg
movsl
hlt
cmp
xlat
jb
loopne
fistpl
jb
jl
and
cmp
inc
or
adc
test
sub
dec
fwait
and
cs
mov
enterw
movl
jmp
sbb
sbb
mov
mov
les
sbb
and
xchg
mov
jle
pop
je
push
push
add
lea
adc
loopne
or
xchg
mov
movsb
cmpl
ret
mov
aaa
push
push
ss
inc
out
sub
add
mov
mov
mov
xchg
xchg
inc
push
sbb
movsb
test
out
dec
roll
jae
cmpb
inc
or
xor
add
xor
sbb
add
xchg
sub
faddp
and
push
sub
sub
push
je
idivb
loopne
jo
iret
sbb
cwtl
pushf
cmc
call
mov
mov
popw
mov
adc
aad
or
xor
loope
ret
xchg
aaa
xorl
imul
or
or
cmpsl
mov
insl
dec
add
orl
out
addl
and
call
mov
adc
dec
pop
loopne
lods
andl
inc
add
xor
inc
rcrl
sub
sub
pusha
loopne
cwtl
mov
shl
jmp
sbb
fildl
pop
cmp
or
in
ret
and
rcrl
fcoml
aas
push
sbb
mov
push
sbb
and
insb
push
mov
cli
xlat
pop
inc
xchg
loopne
and
cmp
ret
pop
repnz
cld
and
inc
repz
push
or
icebp
adc
ret
cmc
xlat
mov
inc
push
cld
jmp
mov
sub
aam
test
mov
ret
jge
add
jne
negb
push
dec
or
inc
xor
inc
stos
dec
in
inc
adc
pusha
sbbb
ret
es
cmp
add
add
push
mov
add
je
mov
divb
adc
clc
and
or
aad
popa
mov
or
and
sbb
scas
mov
adc
cmp
inc
xorl
sub
mov
add
shr
je
push
or
sbb
fnstenv
dec
ficoml
cmp
cmp
sbb
jmp
push
add
aaa
pop
lock
je
add
xor
adc
lods
js
push
or
add
sti
dec
sbb
or
cmp
xchg
jmp
sbb
nop
mov
jbe
or
and
pop
test
fstl
mov
sub
xchg
popa
push
jae
lock
inc
clc
dec
inc
push
cli
and
jno
rep
cli
or
add
xchg
adc
aad
int
std
sar
pop
xchg
and
shrb
neg
pop
mov
hlt
adc
cmc
mov
mov
sub
incb
js
xor
xchg
sbb
inc
sbb
mov
adc
adc
xchg
push
and
cmp
xchg
ret
int3
les
jp
movsb
stc
jl
loopne
jnp
xchg
sbb
fisubrl
push
test
xchg
cltd
js,pt
je
and
mov
ss
pop
mov
rol
cmp
adc
xchg
testl
mov
add
xor
mov
cmp
stos
dec
hlt
dec
stos
adc
pop
sub
je
sbbb
or
loop
inc
cwtl
push
call
pop
mov
mov
fs
nop
and
je
inc
test
ret
ret
popa
cwtl
push
pusha
orl
add
jl
mov
add
repnz
rorl
push
add
adc
rolb
repnz
pop
ds
cmp
fmuls
pop
xchg
adc
clc
or
sub
sbb
je
sub
icebp
icebp
imul
push
inc
call
mov
xor
out
pop
jl
sub
add
in
jmp
loop
test
dec
adc
jns
jb
sbb
cmp
cwtl
and
xor
js
loopne
push
aas
cmpsl
push
insb
dec
mov
xor
ficoms
add
xor
les
xlat
fwait
adc
cmp
sub
aad
jne
sub
xchg
and
xlat
cltd
sub
int
adc
or
pop
mov
mov
xchg
xor
rorb
add
sub
cwtl
stos
or
dec
xor
xor
sbb
push
or
mov
aaa
fs
je
mov
or
shr
add
data16
sub
out
test
and
ljmp
push
dec
sub
daa
or
xor
or
inc
inc
test
flds
je
mov
jmp
mov
stc
sub
xchg
xchg
xor
jns
daa
fidivrs
in
call
xchg
imul
jns
xchg
add
or
add
add
mov
xchg
and
adc
push
fisttps
jb
fstpt
add
inc
cmp
je
mov
icebp
pop
add
js
pop
add
addr16
or
xor
sub
popa
adc
and
addr16
sub
or
cmp
clc
mov
add
add
fcoms
xor
out
int
or
sbb
int3
aad
neg
jle
js
pop
aas
sub
or
fcompl
mov
popa
push
jb
jmp
and
jbe
adc
add
pusha
or
lods
push
inc
aad
test
lcall
lock
enter
or
adc
shrl
rclb
jg
mov
inc
hlt
xchg
and
enter
vmwrite
sub
bound
idiv
xor
add
sbb
push
or
jge
cmp
jg
add
xchg
je
rep
into
rolb
jmp
ljmp
add
jbe
int3
adc
xchg
mov
fs
out
mov
mov
pop
xor
dec
inc
aad
ret
push
and
in
test
leave
jg
and
testb
sbb
pop
and
roll
or
pushf
xor
mov
inc
aaa
push
and
or
decb
xchg
outsl
mov
push
cmpl
repz
inc
pop
jmp
imul
dec
je
mov
movsb
ja
pop
ret
pop
loopne
fldt
fmulp
mov
push
jns
push
pcmpeqw
sbb
je
xor
and
cmp
fisubl
dec
sub
inc
stc
and
adc
mov
stc
jmp
push
fstp
dec
stos
imul
mov
out
cmp
or
aas
jo
add
and
add
mov
and
je
adcb
mov
imul
sbb
jns
xchg
and
jg
mov
mov
aam
inc
es
sub
test
and
and
test
add
leave
sbb
or
jbe
imul
movsb
inc
call
and
lods
inc
add
xlat
fadds
lods
outsb
xor
xchg
or
push
push
add
int3
into
sbb
rorl
mov
popa
push
pop
sahf
push
or
shrl
push
call
hlt
daa
lret
into
pop
call
clc
js
aas
sbbl
xlat
pop
mov
pop
addr16
leave
repnz
bound
jl
outsl
cld
sbbb
pop
lds
iret
decl
outsl
js
inc
mov
add
loopne
jmp
mov
pop
out
jg
mov
imul
daa
cmp
hlt
xor
leave
cmp
call
mov
jmp
stos
push
inc
mov
das
push
sbb
sarb
int3
repnz
test
nop
fcmovnb
daa
movsb
jbe
hlt
pop
add
hlt
pop
push
pushf
mov
pop
orb
repz
loope
jp
iret
hlt
bound
add
ds
xchg
push
cmpsb
scas
mov
pop
push
or
addl
xchg
cmp
xor
push
in
cmp
sahf
xchg
pop
cmpsb
add
mov
mov
jle
stc
pusha
push
and
repz
push
mov
subb
and
mov
push
pusha
les
aad
bound
xor
jle
dec
int3
mov
adc
fcomi
pop
out
incl
ljmp
lret
mov
inc
or
loop
fwait
pop
mov
and
hlt
je
hlt
movzwl
mov
imul
dec
mov
call
cmpsl
dec
je
sbb
dec
sub
mov
sbb
inc
hlt
xchg
shl
out
push
into
or
xchg
sarl
mov
pop
pop
pop
jecxz
push
adc
push
mov
jmp
jmp
jb
and
sarb
pop
or
aam
adc
dec
inc
add
push
inc
pop
jg
sbb
inc
filds
jmp
pop
add
dec
mov
test
and
sub
gs
fistl
jo
aam
leave
mov
inc
rep
mov
cld
decb
je
push
dec
scas
test
aad
dec
aas
adc
lea
mov
adc
dec
adc
xchg
frstor
pushf
adc
xor
adc
mov
lods
xchg
jge
in
sarb
add
xchg
ret
xchg
add
lds
addb
pop
sub
sarb
adc
mov
testl
in
and
dec
pop
xchg
mov
aad
rorb
rcr
addb
call
sbb
xchg
arpl
sbb
pop
xchg
gs
mov
xchg
inc
push
mov
adc
mov
add
call
jle
rolb
dec
fcoms
xor
push
mov
add
loope
mov
mov
in
leave
sub
lock
cmp
push
sub
js
xchg
pusha
loop
in
cmp
aam
sbb
ret
sbb
adc
jnp
mov
xchg
sbb
jne
call
iret
scas
pop
sub
inc
jbe
xchg
pop
call
mov
jmp
cmp
adc
add
ret
xchg
leave
mov
addl
paddb
test
pop
xlat
icebp
push
push
xchg
stc
adc
or
aaa
sbb
lea
das
aam
arpl
push
inc
movsb
push
adc
add
mov
rclb
and
push
mov
ljmp
dec
mov
das
call
sbb
or
xchg
cmp
adc
jne
test
push
gs
outsl
lds
xchg
in
ret
sub
nop
cmp
cmp
addr16
jb
out
jo
sbb
adc
pop
aas
sbb
lea
dec
pop
vpsraw
adc
dec
or
pop
stos
mov
enter
add
cmp
xchg
jmp
add
jle
test
dec
cwtl
xor
push
add
scas
loope
pop
and
divb
ret
pop
add
sub
cld
je
inc
cld
push
outsl
dec
push
or
jb
nop
pop
out
out
jmp
pop
dec
rclb
xchg
cmp
mov
adc
test
sbb
rorb
pavgw
pop
cmp
push
and
mov
pop
and
lock
insb
mov
dec
jns
int3
push
lcall
mov
cmp
or
dec
jne
and
jmp
fstl
mov
add
xor
addb
fbstp
dec
cmp
or
push
inc
push
or
nop
adc
push
ret
inc
fadds
xchg
pushf
repnz
push
pop
jmp
push
fnsave
in
adc
pop
add
mov
push
adc
div
xor
dec
and
pop
mov
mov
and
movl
add
or
jmp
nop
rorb
loope
mov
sub
mov
or
add
es
call
sub
mov
mov
push
call
gs
mov
mov
inc
and
xor
mov
or
xchg
or
sbb
xor
mov
adc
fldl
imul
add
aad
cmp
call
adc
pop
add
push
inc
arpl
in
push
call
sbb
mov
push
je
mov
push
in
fstpl
test
push
and
loopne
sbb
inc
pop
sub
fmull
add
shlb
push
jmp
xor
sbb
mov
cmpb
ret
or
or
jne
movsbl
xor
jle
roll
sub
pop
test
pop
lea
adc
and
loop
pop
push
out
push
mov
mov
enter
testl
test
and
cmp
mov
push
pop
jae
adc
outsb
orb
test
gs
test
push
lcall
cltd
rclb
mov
or
dec
addb
push
je
call
loopne
mov
inc
ja
roll
xor
sbb
push
mov
stos
mov
or
xor
stos
push
pop
cmp
or
int3
stos
cmp
dec
add
add
js
mov
and
jl
sbb
mov
pop
jl
sub
test
add
pushf
pop
add
jae
pusha
adcb
add
enter
push
add
into
les
mov
popa
adc
or
push
cli
inc
lods
aam
sub
outsl
test
pop
adc
push
add
lods
pop
js
out
sub
or
sub
add
lds
xor
inc
lock
mov
pop
aas
cmp
clc
and
add
fdivrs
dec
xor
cmp
sub
sarb
inc
call
mov
fsubrl
jne
subl
mov
adc
mov
mov
or
xor
sbb
cmpsl
pop
sub
or
adc
daa
outsl
mov
lret
leave
insl
or
push
and
pop
inc
mov
jb
pop
scas
xchg
lret
cld
xchg
xchg
sub
aaa
cli
inc
dec
and
clc
loope
movsb
or
mov
adc
add
stos
xchg
or
pushf
push
out
dec
clc
dec
add
xchg
mov
and
leave
adc
xor
sub
jmp
jmp
and
dec
adc
and
je
test
inc
cld
movl
mov
push
xchg
xor
fs
push
cs
push
xchg
mov
pop
and
shll
mov
adc
mov
andl
mov
push
push
mov
insl
mov
andl
cwtl
adc
push
dec
dec
je
mov
fs
sub
or
fmull
shr
add
dec
ljmp
ret
xchg
mov
add
jg
je
lret
or
push
and
xchg
mov
cmp
pusha
add
sub
jb
ss
adc
cmp
cmp
xor
push
and
cmp
std
mov
cmp
mov
inc
sub
pop
pop
int
and
iret
sbb
and
icebp
xlat
icebp
push
icebp
into
icebp
adc
fdiv
push
icebp
or
fyl2x
push
icebp
lret
and
movzbl
mov
test
int3
into
mov
dec
call
add
insb
enter
push
jno
xor
cmc
inc
hlt
push
lret
mov
mov
pop
sar
cmp
jns
push
cmp
sbb
sub
cli
mov
sub
inc
subb
stc
or
lock
xchg
cmp
out
mov
or
in
xchg
dec
or
add
or
aaa
je
mov
mov
shll
mov
sbb
cmp
sbb
xor
cmp
sub
cmp
jne
cmc
and
dec
popf
fs
push
mov
sbb
cld
jp
and
jle
ja
movsb
sbb
je
add
adc
jmp
test
movsb
mov
sbb
std
adc
sub
pop
loop
shll
aas
cmpsl
cmp
mov
andb
adc
cmp
jle
enter
push
inc
insb
inc
push
xchg
push
adc
imul
rcll
fcoml
mov
in
sub
dec
adc
adc
bound
xchg
jne
movb
mov
dec
mov
loopne
loopne
push
repz
popf
pop
pop
in
or
jmp
pop
popf
lcall
or
sub
jl
xorb
xchg
pop
mov
idiv
adc
or
xor
jne
pop
dec
add
mov
and
xchg
sbbb
pop
mov
movsl
and
test
add
sbb
inc
mov
mov
pushl
push
jl
sbb
mov
lret
push
leave
xor
les
xor
shll
jno
adc
fwait
and
mull
cld
sub
and
clc
push
adc
jg
adc
sbb
inc
test
and
pop
ret
rol
shll
adc
mov
push
addr16
sub
les
or
jnp
or
jnp
dec
movsb
clc
xor
jne
inc
lahf
add
adc
dec
stos
scas
jne
cmp
xor
jne
jo
test
inc
push
inc
adc
inc
xor
xchg
pop
je
mov
adc
and
sbb
imul
xor
call
into
cld
dec
aaa
jne
add
xor
loope
dec
add
xchg
and
outsb
pop
orl
repnz
add
or
sti
cmp
imul
inc
and
sbb
orb
lcall
or
inc
cld
lds
scas
push
push
jmp
add
dec
clc
dec
jl
adc
decl
jne
pop
push
lea
call
pop
pushf
pop
mov
push
sbb
add
and
xchg
or
and
pop
push
dec
in
stc
pushf
push
and
push
inc
jg
ret
loope
pop
cmp
mov
dec
sbb
jmp
mov
outsb
xchg
mov
or
jle
sub
cmpl
xor
nop
and
rcr
ret
movw
cmp
shll
xchg
dec
dec
and
nop
lods
cld
mov
fistpl
pop
hlt
insb
or
dec
xchg
or
inc
aas
fbld
fdivrs
xchg
cmp
movsb
movsl
mov
push
dec
push
hlt
add
xchg
imul
push
inc
sbb
insl
push
daa
fsts
sbb
icebp
xchg
clc
fisubl
jg
sbb
or
jo,pt
adc
push
aad
sarb
jae
jge
lea
clc
lret
xor
inc
daa
jmp
in
fldl
imul
or
sbb
sub
xor
adc
imul
push
mov
mov
mov
nop
xor
push
pop
and
or
clc
test
or
hlt
or
add
jmp
inc
add
mov
int3
xor
sub
bound
or
rorl
xchg
or
jmp
or
movsb
add
cld
cmp
mov
inc
ljmp
sub
mov
scas
jo
push
rcrl
shll
imul
les
pop
pop
cld
pop
sub
adc
fnstcw
add
cltd
fnsave
daa
movb
test
inc
ror
pop
aas
jl
lods
clc
sbb
pop
ljmp
add
cmp
mov
flds
mov
adc
push
fwait
xchg
out
cwtl
pop
nop
or
popa
inc
cmp
call
xchg
imul
lcall
push
add
cld
add
jmp
lcall
ljmp
push
push
inc
out
pop
and
mov
jecxz
jno
mov
jmp
dec
arpl
xor
adc
je
dec
cmp
inc
xchg
jmp
loop
sbb
or
ret
and
iret
jne
and
jne
in
movsl
pop
call
sbb
sub
jp
movsl
aaa
sbb
dec
jmp
imul
mov
sahf
mov
in
repnz
fs
cwtl
js
add
call
jne
sbb
js
or
out
xchg
dec
call
xchg
pop
pop
lea
movsl
loopne
mov
mov
xor
push
shrl
shlb
add
push
rorl
repz
in
mov
mov
pop
adc
inc
mov
dec
xchg
pop
mov
push
and
addl
cmp
sbb
and
push
push
jae
add
ja
sbb
pop
or
subb
clc
inc
jb
dec
fisttpl
faddl
in
sarb
mov
cmp
ret
jg
fnsave
adc
inc
pop
fildl
pop
adc
inc
and
pop
mov
repnz
das
mov
xchg
lock
mov
sub
es
jl
add
fidivrl
sub
jne
xor
add
jg
test
loop
xor
shl
xor
mov
aaa
lods
je
call
adc
jl
cwtl
xchg
and
es
add
sub
inc
fidivl
add
lea
test
mov
sub
dec
test
dec
add
hlt
ficoml
dec
mov
cld
test
cmp
sub
cmp
add
in
aaa
mov
fsubrs
xor
fisttpl
mov
std
sbb
mov
cltd
jge
sbb
add
or
in
inc
test
mov
jb
into
or
jmp
and
and
sbb
es
mov
add
pop
les
xchg
ss
push
push
sbb
mov
push
mov
cltd
and
push
mov
daa
mov
enter
jo
pop
or
add
fsubs
jl
jbe
sbb
call
sub
icebp
mov
popf
add
inc
sub
mov
dec
jmp
sbb
jle
cmpl
rol
xor
xorb
cld
mov
xchg
sub
stc
call
adc
inc
dec
cmp
xlat
xchg
inc
call
test
xchg
jo
push
shrb
lret
fistl
roll
add
ficompl
pop
jmp
outsl
and
inc
adc
xchg
and
lcall
add
push
call
mov
and
inc
pop
pop
lea
inc
fwait
daa
or
mov
pushf
xchg
iret
push
repz
cs
pop
and
add
push
lods
adc
mov
mov
mov
mov
jl
lcall
les
inc
lock
bound
push
cmp
frstor
xchg
mov
sub
icebp
ret
adc
mov
call
jmp
mov
pop
push
xor
mov
and
dec
add
push
jmp
inc
add
or
mov
xor
add
call
jb
adc
mov
inc
shll
cltd
pop
or
and
pop
fldt
inc
and
xchg
sbb
pop
test
or
cli
movsl
pop
push
push
das
fwait
cmp
add
call
and
or
dec
cmp
or
fwait
lcall
pop
sahf
or
lea
clc
and
add
lret
dec
or
xchg
call
xchg
lcall
clc
jbe
into
jle
fwait
sub
adc
mov
sbb
lock
leave
mov
and
mov
cmpsb
bound
push
adc
mov
mov
push
xorl
jl
push
movsl
inc
roll
dec
adc
insb
daa
test
push
jg
adc
xor
lret
cmp
into
adc
adc
sbb
je
adc
and
xor
mov
pop
dec
add
fwait
mov
or
ja
cmp
pop
pop
push
pop
jbe
cvtps2pd
adc
xchg
inc
push
add
sub
lea
jge
inc
inc
or
mov
cld
add
ja
xor
sub
loopne
movsl
repz
pop
push
add
or
jp
mov
bound
mov
repnz
test
lds
sbb
push
cmp
adc
adc
jmp
or
clc
outsl
adc
aam
cmp
loopne
sbb
je
adc
int3
jno
aam
mov
rol
inc
add
or
dec
clc
pusha
push
or
sarl
mov
add
lods
sub
mov
inc
add
dec
jne
or
stc
sub
xor
xchg
dec
test
das
push
or
sbb
int
nop
adc
and
inc
mov
xor
call
mov
adc
jge
test
sti
sub
aas
push
les
test
adc
stc
dec
add
adc
or
xchg
and
test
pop
jmp
pop
and
add
les
jnp
and
pop
xor
test
inc
inc
adc
adc
add
and
dec
jne
ljmp
call
lret
cmp
push
and
subb
shld
nop
inc
mov
popa
and
xchg
or
pushf
ret
push
mov
scas
adc
inc
cltd
dec
jne
jmp
adc
cli
icebp
jmp
and
or
push
adc
adc
push
data16
xchg
cltd
sub
add
ja
hlt
arpl
aaa
ret
jmp
mov
mov
in
xor
add
cmp
add
je
or
in
sub
push
adc
adc
jle
movsl
push
adc
scas
xchg
nop
inc
nop
push
call
pop
pop
adc
pusha
mov
in
js
pop
inc
and
idivl
test
cmpsb
or
adc
mov
ret
addb
lret
push
lock
pop
outsb
or
sbb
or
sub
or
sbb
jmp
adc
clc
jp
mov
push
jbe
sbb
add
jl
jl
iret
push
mov
and
and
sub
mov
add
repnz
adc
movsb
lahf
xor
and
adc
sbb
mov
dec
adc
roll
sub
jb
into
stc
into
push
iret
adc
imul
sub
loope
push
or
ret
push
in
jl
cmpsb
jne
mov
inc
jmp
out
andl
jmp
xor
or
push
add
shld
pop
adc
test
inc
mov
jns
fldl
int3
or
pop
test
fisubrl
sbb
mov
push
incl
sbb
push
sub
lahf
mov
inc
dec
jl
popf
jne
adc
or
jg
pop
cmp
xchg
xchg
or
mov
mov
xchg
xchg
bound
lea
je
and
or
setb
ljmp
inc
addr16
cli
pop
xchg
rcll
adc
dec
push
loopne
add
call
sub
sbb
inc
out
popf
cld
sub
jmp
inc
call
mov
mov
dec
xchg
jle
dec
sarb
test
jg
sbb
jge
mov
add
dec
push
jno
or
leave
adc
pop
and
add
push
adc
jno
dec
or
add
call
mov
xor
and
xor
dec
jae
cltd
cmp
cmp
sbb
into
or
or
jne
xor
jge
and
loopne
sbb
xlat
imul
dec
lock
push
cmpb
inc
loopne
push
in
icebp
push
int
mov
pop
in
or
fdivs
adc
int3
in
jae
in
xchg
or
mov
cmpsl
add
aad
lret
in
push
xchg
imul
call
mov
push
dec
adc
les
out
punpckhdq
clc
xchg
mov
mov
mov
push
lock
inc
ret
mov
fiaddl
ret
xchg
test
clc
add
pop
int
add
or
mov
jl
ds
insb
fcoml
lea
ret
fwait
mov
xchg
and
dec
jne
lret
ljmp
push
adcl
and
xor
sbb
jne
mov
lock
and
adc
push
mov
xchg
inc
pop
ror
clc
mov
enter
scas
dec
sbb
and
adc
jle
push
push
mov
repnz
popf
mov
sti
pop
dec
pop
cmp
js
push
in
sbb
xlat
mov
sbbl
stos
pop
int
sbb
pushf
popl
or
jnp
jne
sub
add
jecxz
sbb
fidivs
les
dec
cmp
in
test
xchg
lret
dec
outsl
xchg
pop
std
outsl
or
js
stos
inc
insb
test
mov
cwtl
and
jae
sbb
xchg
or
stos
ret
pop
mov
loop
jmp
push
dec
mov
cwtl
xor
outsb
sub
call
jge
mov
test
das
cmp
aas
jne
sub
and
fstps
cmc
clc
push
dec
orb
js
fisubrs
jb
inc
lahf
nop
push
cwtl
sbb
mov
dec
and
mov
or
ret
mov
lods
adcl
ja
roll
sbb
cmc
sub
call
sub
sbb
mov
jg
into
adc
call
sbbb
and
pop
lea
adc
aas
adc
lods
jne
jbe
sub
sub
lea
push
pop
push
sub
cmpsl
cmp
sub
pusha
fs
cmp
adc
push
dec
xor
ss
shrl
xchg
mov
sbb
clc
je
cmpsb
out
push
xor
fiadds
add
jg
movb
ret
dec
sub
xchg
push
and
shrl
test
aam
sub
adc
mov
gs
pusha
insb
xor
cs
sarb
add
outsb
addr16
jg
push
dec
shrl
inc
inc
adc
loopne
or
jb
jecxz
outsl
loopne
cmpsl
scas
add
insb
out
and
push
inc
xchg
fs
or
dec
sub
push
cmp
inc
add
ret
adc
mov
or
inc
adc
call
mov
std
jb
dec
xchg
ljmp
movsb
mov
and
push
push
inc
sbb
repnz
cwtl
mov
adc
ret
jmp
xchg
out
decb
mov
popa
call
push
scas
repz
adc
inc
and
jge
aas
or
out
and
sub
dec
mov
jmp
add
cmp
test
adc
or
inc
add
shrl
shrb
ret
push
call
sub
cmp
jns
je
sbb
shl
adc
testl
cmc
sub
lock
lods
dec
dec
cld
jo
xlat
mov
nop
push
jg
repz
std
or
sbb
popf
dec
js
and
add
push
and
dec
lock
mov
rcll
adc
pop
add
inc
or
in
mov
and
sub
mov
es
call
in
je
daa
xor
sub
push
mov
daa
mov
inc
push
int3
jmp
cs
pop
enter
imul
pop
cmp
fildl
orb
sub
sub
or
jmp
loop
mov
cmp
jne
pop
mov
cld
mov
adc
setbe
les
popa
icebp
jo
sbb
call
ret
sbb
add
pushf
sbb
test
pop
mov
and
push
cld
jne
jno
and
dec
ljmp
andb
shll
sbb
inc
je
and
jb
popl
leave
jne
mov
out
es
mov
orl
outsb
xor
xchg
add
add
mov
xor
xchg
rol
ret
push
dec
adc
or
pop
and
add
mov
shll
mov
stos
lret
add
xchg
jnp
rcr
ret
stos
aaa
scas
and
xchg
pop
cmova
jno
test
lahf
leave
sub
dec
js
mov
pop
notb
xchg
adc
cmpb
adc
inc
addl
jg
push
mov
jnp
popf
and
xor
pop
cld
ja
stos
fcmovb
jmp
addb
ud2
push
data16
sbb
stc
pop
stc
add
loop
adc
cmp
movb
and
or
and
addl
mov
add
add
pop
dec
xor
test
sbb
dec
or
test
add
add
jb
pop
dec
push
ret
inc
fmull
push
dec
in
dec
pop
pop
dec
and
jmp
adc
int
push
in
ss
cld
clc
mov
hlt
divb
test
je
mov
xlat
fnsave
dec
loope
and
sub
inc
adc
mov
sti
mov
adc
mov
lret
rol
loope
push
or
mov
sub
lea
dec
cmp
or
push
xchg
or
inc
xchg
cmp
aam
xor
fwait
adc
pop
jp
push
inc
lahf
dec
mov
notb
movsb
fisubl
jae
push
adc
cli
movsl
jne
or
inc
addr16
fimull
jae
mov
jmp
xchg
stos
xor
ja
aad
or
hlt
in
push
inc
sub
sbbl
arpl
repnz
ret
adc
jge
push
aaa
jmp
cmp
and
mov
push
shll
adc
mov
out
loop
cmp
xchg
cmp
roll
add
sti
ljmp
in
add
repnz
mov
push
mov
rcrl
sbb
mov
push
lahf
fs
imul
xchg
push
ret
mov
xchg
mov
mov
xchg
in
push
inc
mov
jb
pop
pop
stc
mov
in
mov
and
repnz
ljmp
scas
fs
cmp
adc
lods
movsl
adc
icebp
jmp
mov
pop
push
pop
sbb
inc
andb
movsl
pop
clc
rcll
lret
sub
pop
xchg
sub
mov
push
fdivrs
ljmp
or
in
pushf
inc
in
in
imul
and
inc
aam
dec
add
jne
mov
sub
push
leave
cmp
loopne
adc
pop
and
sub
loop
in
push
sarl
clc
xchg
enter
and
xchg
adc
xor
dec
call
mov
js
int3
data16
into
cmp
lret
lock
loope
ret
mov
jne
xchg
adc
push
mov
cld
and
or
sbb
adc
andb
mov
adc
andb
popf
xchg
outsb
dec
je
add
mov
sub
push
fcmovne
mov
stc
mov
adc
xor
clc
sub
lock
pop
push
add
cmp
call
aas
dec
test
or
test
orb
jl
js
je
jo
push
pusha
and
enter
jb
cmp
inc
mov
and
cmp
xor
xor
cmp
sbb
mov
and
sbb
adc
adc
cmp
sbb
mov
sbb
inc
and
clc
xchg
hlt
enter
jb
cmp
sbb
mov
and
xchg
aam
shl
int3
jb
cmp
sbb
mov
mov
lods
enter
jb
cmp
inc
sti
outsb
cmp
inc
imull
cmpl
je
mov
jnp
lock
outsl
dec
daa
adc
fcoms
pop
repnz
enter
mov
outsl
cmc
loop
in
mov
add
movzbl
pop
cmp
xchg
push
push
sub
fidivs
test
push
adc
nop
pop
fisubrs
scas
xlat
pop
insl
xor
push
lds
xchg
testb
dec
jo
das
jno
mov
sub
pop
ds
ret
shlb
sti
and
mov
sbb
loop
xor
mov
repz
sbb
aas
pop
dec
repz
mov
sbb
inc
jno
dec
push
cmp
jge
fs
dec
jne
xor
ret
or
inc
inc
mov
sarb
fldl
sub
fidivl
mov
out
xchg
adc
aas
or
adc
loop
cs
xchg
jp
rorb
cmpsl
rorb
push
push
mov
adc
fcoms
mov
push
cltd
adc
jg
push
pop
and
adc
and
iret
pop
cmp
mov
push
xor
dec
cs
or
inc
aas
orl
or
addr16
call
add
shrb
mov
fcoml
enter
and
cmp
ficoms
int3
jb
adc
inc
jae
xor
pop
mov
and
pop
adc
sbb
test
and
std
sti
nop
fs
and
pusha
enter
and
or
adc
je
nop
mov
mov
and
test
and
test
je
pop
push
lods
jp
mov
stc
inc
push
popa
je
fucomp
ret
jo,pn
push
outsb
incl
mov
dec
ss
and
xor
or
dec
hlt
js
ret
sbb
sbb
fs
xchg
arpl
dec
push
sbb
or
inc
cmp
enter
mov
scas
aas
mov
xchg
loopne
jge
jne,pt
push
and
push
aas
lds
sti
ret
std
stc
fistpl
or
aas
xor
cltd
cmp
and
inc
pusha
repnz
inc
fs
daa
xor
rolb
mov
and
xchg
cmc
enter
enter
jb
cmp
sbb
mov
and
mov
loope
loop
jecxz
in
in
out
inc
out
call
in
jb
cmp
sbb
mov
and
xchg
ror
shl
shll
cmp
sbb
mov
and
xchg
fxch
cmp
sbb
mov
and
xchg
ror
in
jb
cmp
sbb
mov
and
xchg
leave
enter
jb
cmp
sbb
mov
and
in
jb
cmp
mov
mov
in
jb
cmp
mov
enter
jb
cmp
cmpsl
and
in
inc
pop
ja
mov
les
mov
push
outsl
out
dec
out
test
xchg
and
les
sbb
andl
push
cs
mov
and
jp
adc
js
loope
inc
dec
jne
xlat
data16
mov
jl
pop
fs
dec
fisubs
dec
outsb
jbe
jno
lret
pop
testb
inc
or
pusha
sub
jg
sub
pop
shrb
mov
mov
inc
adc
insb
loop
mov
and
adc
in
in
mov
push
add
inc
inc
imul
or
cmp
pop
hlt
and
fsubl
outsb
addr16
testb
or
or
dec
jbe
add
outsl
ja
mov
sbb
or
push
mov
ret
jnp
pop
or
ret
pop
dec
mov
jbe
sbb
dec
jo
push
mov
ljmp
mov
clc
pop
in
clc
xchg
insb
xchg
popa
xchg
add
push
or
push
outsb
and
test
pop
enter
mov
pusha
pop
push
outsl
mov
pop
pop
nop
and
or
pop
xchg
or
mov
or
pop
and
or
mov
sub
int3
movsl
out
xchg
andl
mov
roll
sub
push
jb
jns
cmc
inc
fists
je
lds
inc
out
leave
jmp
addl
fdivrs
insb
adc
jg
test
pop
dec
sub
xchg
test
xchg
enter
sub
or
and
lea
pusha
mov
sbb
test
jb
jae
mov
pop
inc
inc
sbbb
cmc
sub
test
pop
fs
jg
pushf
inc
adc
or
rorl
in
hlt
cmpsl
mov
adc
andb
gs
enter
add
add
aaa
sub
dec
dec
or
mov
push
xor
cmp
fiadds
cmpsl
cmpsb
repnz
and
xor
mov
data16
jne
add
int3
add
jmp
or
movl
or
test
xorb
or
and
dec
lds
les
push
mov
jnp
sbb
fists
jno
cmp
sub
loopne
xorb
enter
adc
jnp
fsubrs
and
mov
insl
scas
xchg
pop
pop
jae
jne
push
adc
pop
mov
sahf
mov
mov
lock
shr
div
cld
lea
jle
add
adc
js
in
xor
mov
mov
mov
call
sub
and
sub
rcr
test
adc
test
outsl
rclb
js
or
lods
in
aaa
push
and
ret
mov
pop
rorb
lret
lmsw
addr16
pusha
je
mov
shll
call
mov
mov
adc
cld
push
pop
jmp
or
add
mov
xor
push
mov
shrb
aad
xor
mov
push
iret
sahf
jmp
jge
es
or
jmp
xor
pushf
imull
push
mov
leave
enter
or
inc
mov
sahf
pop
shrl
repz
xor
or
jecxz
dec
jo
pusha
add
inc
cld
idivl
fists
add
rclb
out
push
sub
mov
add
lea
xlat
and
arpl
mov
add
or
cmp
push
cmp
sub
jge
push
pusha
and
jg
hlt
orb
sbb
rorb
or
fdivs
pusha
xor
cld
je
and
pop
cs
pop
loopne
add
adc
pop
pop
jmp
mov
push
stos
add
cmp
jne
call
add
mov
pop
cmp
imul
clc
push
sahf
cmc
fdecstp
pop
out
add
add
call
push
push
scas
or
and
jbe
add
les
sahf
lret
lock
fwait
adc
scas
or
lcall
and
push
jge
les
pop
dec
and
aaa
pusha
clc
je
sub
inc
ljmp
cmpsb
mov
mov
cmp
adc
adc
pop
mov
jmp
and
add
mov
adc
add
je
sbb
adc
xor
jmp
add
icebp
ja
push
xor
clc
inc
mov
inc
sahf
mov
inc
mov
inc
mov
dec
cli
push
je,pn
cmp
adc
mov
or
jae
add
jne
jmp
mov
inc
sub
rcl
and
dec
fisubl
and
test
jns
push
and
call
add
ret
sti
and
bound
cli
cmp
add
pop
mov
adcb
pop
pop
sub
in
add
add
mov
rcl
jmp
sbb
subb
out
in
adc
xor
push
jo
fs
bnd
and
mov
lret
pop
lahf
mull
pushl
cwtl
xor
and
push
cmp
or
and
mov
sub
or
shr
cmp
data16
or
fcomi
sub
adc
and
lea
jg
add
and
roll
rcll
jle
outsl
add
mov
clc
pop
stc
outsl
mov
in
cmp
fadds
adc
xor
cs
fwait
pop
fnstsw
sahf
jae
lods
insb
add
pop
add
ret
xchg
ret
mov
pop
pop
jmp
out
jmp
inc
jmp
in
or
and
loope
push
pop
repnz
ret
sbb
and
rolb
mov
in
call
loopne
pop
fsubl
push
ror
xchg
push
adc
pop
sub
xor
in
hlt
daa
mov
push
mov
call
mov
or
mov
or
inc
cmp
mov
fcompl
add
call
bound
sarb
push
mov
jb
stc
das
xlat
dec
xor
sti
pusha
cmp
fdivrl
mov
mov
jne
add
mov
fistps
cmp
jno
and
and
or
mov
jl
in
andb
add
sbb
sub
mov
xchg
mov
call
add
sub
sub
aaa
adc
aam
xchg
sbb
sub
insb
nop
xchg
mov
imul
das
icebp
adcb
xor
or
add
push
sbb
imul
movb
pusha
loope
push
inc
lds
outsb
movsb
sar
jmp
in
sahf
jne
addr16
in
or
lcall
out
cmpb
fisttps
call
push
cmp
sub
push
pop
jecxz
subb
push
roll
sti
sbb
jne
ret
xchg
std
scas
fidivrl
xchg
pusha
mov
out
call
pop
rclb
lock
and
jmp
call
xchg
dec
or
shll
and
fmull
pop
xor
sarb
xor
or
scas
and
xchg
ret
mov
xchg
xor
add
xor
fmuls
out
cmp
into
adc
movb
jno
into
or
adc
xchg
mov
psraw
loope
xchg
inc
mov
rcl
call
ret
dec
loop
jge
mov
incb
ja
aas
or
fnstenv
sbb
xor
add
xorb
pop
shll
push
adc
call
or
jns
movsl
and
push
repz
test
sbb
adc
data16
pop
fsubs
shlb
jl
pop
mov
inc
sub
pop
pop
das
into
sbbb
ds
sbb
je
loop
stc
movsl
lock
lock
adc
mov
mov
cli
xchg
data16
jo
xchg
sti
push
mov
mov
rcrb
inc
inc
sub
xchg
repz
insl
cwtl
pop
mov
mov
mov
xchg
mov
push
jge
outsl
xlat
cmpsb
dec
cmp
pop
cmp
jne
dec
sbb
jg
and
fistps
mov
push
cltd
fwait
pop
test
or
add
fwait
mov
pop
cmp
dec
enter
lods
imul
arpl
enter
enter
clc
and
cmpsl
sbb
aas
dec
cmp
call
dec
loope
and
push
mov
lahf
cld
xor
push
add
imull
clc
xor
or
push
jns
sbb
hlt
push
cmp
or
into
inc
dec
nop
jb
add
les
or
mov
js
nop
lock
push
shll
xor
loopne
and
mov
mov
lock
xchg
call
xchg
pop
dec
repz
scas
cmp
pusha
pop
jne
inc
sub
std
test
stos
push
nop
rep
push
xchg
cli
nop
dec
movsb
test
or
pop
xor
xlat
insl
or
xor
or
xorl
fldenv
push
mov
stos
sub
cmp
sbb
or
and
shlb
inc
mov
lcall
adc
push
or
inc
in
push
push
cmp
fcomi
sub
or
inc
xchg
inc
stos
push
adc
inc
shll
rorl
dec
cs
subl
jbe
pop
push
lea
xchg
lods
mov
adc
push
andb
test
mov
dec
push
or
or
clc
dec
jne
int3
pop
in
aaa
rclb
fdiv
inc
xchg
mov
insl
or
mov
mov
jbe
mov
bound
or
imul
cld
lret
call
imul
sbb
cmp
inc
sub
sub
jne
push
out
inc
mov
insb
sti
repz
popa
mov
dec
cmp
sbb
call
test
pop
stos
imul
faddl
jle
mov
adc
dec
addb
cli
mov
pop
hlt
lods
jns
sub
dec
or
lods
cmp
or
stos
pop
add
mov
sub
jmp
das
repnz
inc
cmp
orl
sub
fsubrl
cld
or
xor
and
sbb
xchg
jo
cmp
sub
daa
mov
jae
das
jne
rolb
mov
cld
push
inc
fistpl
cmpb
or
lret
adc
sub
and
stos
push
push
pop
xor
shlb
or
and
sbb
mov
mov
cmp
xor
pop
cmp
imul
pusha
push
rolb
ret
incl
add
int3
dec
hlt
pop
cmp
jg
notb
adc
jl
fidivrs
sbb
je
xchg
and
fisttps
or
pop
add
lea
flds
pushf
push
add
and
push
nop
and
enter
pop
xchg
sbb
inc
cmpsl
cltd
inc
nop
mov
mov
or
xchg
cs
adc
ja
in
xor
sub
loop
xchg
int3
stos
inc
insb
jne
es
fsubl
es
or
xor
mov
sbb
or
xchg
ret
mov
insb
cmpsl
fstps
adc
adc
jp
sbb
insb
inc
lea
outsl
mov
test
loop
sub
cmove
jae
xchg
daa
sbb
mov
leave
xchg
and
ret
inc
adc
jmp
cmp
cmp
add
test
ja
mov
pop
jp
stc
jle
push
sbb
test
mov
rcrb
fmull
mov
mov
decb
mov
mov
stc
or
pop
inc
push
or
xor
inc
hlt
jmp
mov
in
jo
jo
fildl
stc
inc
je
mov
cmp
add
add
dec
div
inc
dec
mov
jg
add
adc
ret
je
dec
cmp
sbb
adc
outsb
mov
mov
fldl
push
push
xor
xchg
xor
movsl
mov
inc
ret
sub
cli
xchg
ret
xor
jecxz
adc
addr16
jmp
mov
jno
ds
lods
pop
movsb
call
test
mov
jle
mov
or
or
xor
add
call
inc
add
adcl
scas
and
sti
jne
sub
hlt
mov
ret
popf
rorl
mov
and
cmp
dec
adc
insl
inc
jbe
cld
lea
xchg
fldenv
add
pop
or
dec
cmp
jg
dec
jmp
mov
mov
rcl
out
dec
mov
pop
xchg
and
pop
loop
adc
inc
imul
filds
outsl
lret
mov
and
xchg
cmp
xor
stos
or
jne
rol
or
jge
push
mov
neg
scas
lds
in
rorl
mov
xor
and
loopne
mov
and
in
ror
jg
jmp
cmp
lock
pop
dec
pop
mulb
stos
data16
mov
stos
sti
loope
push
or
mov
mov
adc
adc
sarl
jo
jne
popf
movsb
add
add
dec
or
jbe
nop
adc
dec
jge
add
add
dec
add
icebp
jge
mov
jg
xor
jae
pusha
and
jo
lea
xchg
mov
adc
jmp
sub
es
pop
adc
add
jle
mov
mov
jle
mov
sbb
inc
int3
es
pop
sbb
or
rcll
jmp
aaa
push
xchg
or
and
sbb
dec
inc
popf
inc
or
mov
cmp
xor
stos
xor
dec
aam
xor
sbb
jl
dec
sbb
xor
and
in
fxch
sbb
in
sbb
pop
loop
clc
orl
inc
stos
or
pop
inc
clc
inc
sub
mov
mov
sbb
mov
jo
pop
dec
lods
ret
mov
lcall
leave
mov
mov
in
mov
call
lcall
cli
adc
mov
mov
or
call
mov
repz
inc
sub
and
add
cmovnp
test
std
mov
jmp
mov
add
dec
orl
mov
sbb
hlt
repz
adc
iret
sbb
les
add
cmp
push
cwtl
mov
fwait
pop
xchg
xchg
push
addl
je
push
jbe
push
and
sub
or
xor
fdivrs
pop
inc
loop
mov
inc
icebp
mov
mov
sub
add
pop
std
sub
jg
push
sub
add
mov
add
cs
inc
cmp
fisubl
adc
xor
daa
sub
in
dec
xchg
aam
loopne
clc
sub
test
test
call
or
negb
test
add
mov
and
cmp
divw
inc
push
fs
adc
cmpl
rcrl
inc
insb
int
fldt
sub
imul
jbe
pop
inc
adc
inc
enter
dec
or
mov
fs
clc
fwait
jl
je
into
mov
je
fidivl
pop
fbstp
push
lea
mov
mov
ret
loopne
and
paddb
jmp
xor
stos
mov
add
or
clc
gs
decb
dec
iret
or
cmpb
cld
and
add
or
add
ja
jmp
movw
gs
and
xor
je
inc
cld
push
or
fadd
ljmp
add
je
out
xchg
negb
adcb
cmp
xchg
add
or
je
inc
mov
jle
cmpsb
dec
adc
mov
push
or
call
or
pop
mov
sarb
fidivl
jae
dec
add
sbb
in
insl
or
cli
mov
or
fidivl
mov
fwait
xor
loopne
mov
inc
sub
jne
pop
iret
and
bound
dec
loopne
jmp
test
add
inc
and
xchg
inc
ljmp
sub
movb
adc
aas
in
idivl
cmp
sbb
sub
sbb
jo
mov
fwait
dec
fnstcw
cmp
loop
sub
out
call
movsb
ljmp
xlat
or
sub
xchg
jl
ret
mov
push
cmp
bound
inc
in
insl
pop
inc
pop
cmp
je
dec
es
cmp
pop
jne
inc
push
call
add
jle
adc
jne
mov
jne
popa
subl
les
mov
fchs
xor
mov
fistpll
jmp
mov
mov
push
cmp
insl
xchg
cmc
push
jb
or
and
sub
and
aas
lahf
sub
orl
xor
jns
push
or
ljmp
adc
sub
popf
imul
nop
push
cmp
ljmp
lods
lcall
gs
movl
daa
js
xchg
subl
jo
xor
add
inc
jl
or
cmp
jbe
mov
hlt
cmpsl
inc
push
test
inc
sbb
aam
push
cs
int3
fldt
fstpl
dec
fwait
les
sub
lock
sub
sbb
and
adc
je
and
fldl
or
inc
sub
inc
mov
pop
in
xchg
adc
int
mov
or
pop
xchg
pusha
sub
add
sub
clc
mov
shll
mov
jae
mov
cmp
inc
adc
ds
pop
mov
movzwl
xorl
adc
repnz
pusha
mov
push
rorl
call
fs
fcmovnb
push
fdivs
push
or
sbb
xchg
cmpsl
add
or
movsb
dec
rcll
sub
jo
int3
push
or
hlt
nop
add
mov
mov
lcall
mov
sbb
loopne
iret
enter
clc
and
or
sub
shll
loopne
cs
and
nop
aaa
pop
mov
adc
jo
popa
adc
mov
xorl
cmpsl
mov
insl
shl
mov
call
cmpsb
jg
sbb
iret
xor
les
incb
addb
xchg
ja
es
js
or
sti
sbb
mov
ja
adc
dec
push
and
pop
add
inc
dec
jne
inc
sub
dec
sub
mov
aas
mov
cwtl
jns
pop
jae
sbb
repnz
inc
xchg
xor
adc
sub
imul
ror
mov
mov
call
dec
in
or
xchg
cmp
or
sbb
add
inc
jmp
adc
mov
movsb
je
mov
mov
add
jl
ret
or
ret
movsl
inc
adc
jge
ret
sub
lock
add
mov
add
dec
std
xor
subl
fs
pop
push
fsubrs
dec
stos
xlat
pusha
adc
call
sbb
mov
sub
imulb
push
pop
push
inc
sbb
dec
rolb
ret
pop
sbb
js
push
dec
and
mov
dec
and
adc
adc
sbb
inc
jmp
test
mov
or
addl
push
hlt
in
ret
dec
dec
les
adc
lods
push
pop
xchg
scas
es
loope
pop
fldenv
push
call
mov
cwtl
inc
data16
dec
add
iret
and
add
xchg
sbb
mov
mov
cltd
cld
mov
mov
popa
in
inc
adc
lea
call
bound
cwtl
mov
fistpll
cmp
sti
jno
dec
pop
push
ss
jns
leave
fistl
cmp
test
in
mov
fistpll
sub
mov
mov
outsb
daa
pop
lret
leave
mov
cmpsl
pop
xchg
lds
popl
dec
xchg
popf
add
dec
outsb
push
or
sub
shrl
pop
cmp
dec
sti
je
mov
inc
call
hlt
pop
pop
repz
cmpb
jne
mov
sbb
jo
fiadds
jo
lea
mov
dec
bnd
add
in
add
cmp
jecxz
xor
call
aas
and
nop
call
sti
xor
jecxz
out
pop
in
inc
lret
sub
jle
pop
inc
mov
push
dec
xor
lea
pop
test
inc
or
lock
out
ja
bnd
mov
pop
scas
xchg
pop
push
in
mov
nop
repz
mov
adc
push
icebp
xchg
jle
ds
pop
lea
test
pop
xor
pop
stc
sarl
cltd
or
pop
add
and
xor
ret
jmp
xorl
push
arpl
jne
xlat
cs
sbb
ret
push
pop
pop
fs
push
pop
mov
sbb
jb
test
lret
lock
shll
xchg
adc
gs
mov
leave
ljmp
jb
ret
aaa
xchg
lods
imul
adc
inc
sub
lods
xlat
fs
adcl
jmp
pop
in
test
jecxz
mov
sub
mov
mov
lods
push
lods
inc
out
repz
mov
lds
or
xchg
push
mov
or
or
xchg
xor
and
cmp
xor
into
dec
aad
push
test
mov
stos
and
push
or
jns
das
inc
inc
sbb
adc
mov
icebp
add
fidivs
sbb
adc
cmpl
dec
and
pop
xchg
xlat
push
mov
add
adc
dec
scas
sbb
and
arpl
or
jo
sbb
stc
push
cmp
lock
add
lret
jae
cmp
pop
call
rclb
xchg
sti
mov
adc
iret
and
mov
adc
sub
sub
pop
jae
cmp
pop
mov
mov
loop
aam
pop
dec
mov
dec
jg
cmpsb
fisubs
cmp
xchg
jg
add
inc
ret
test
inc
test
mov
test
or
add
or
push
pop
push
or
push
add
fldt
dec
movsb
and
jne
mov
mov
sbb
inc
in
test
dec
imul
call
inc
xchg
dec
cmpb
inc
add
incb
xor
mov
mov
push
sbb
dec
inc
aaa
inc
es
notb
adc
call
stos
mov
inc
and
in
and
cld
or
dec
or
mov
xchg
hlt
dec
cld
scas
lods
or
lock
dec
xor
add
lods
sbb
or
fmull
testl
push
cmpsl
pop
and
popa
dec
push
insl
jmp
xchg
xor
xchg
cmp
out
imul
mov
jmp
sub
int
sarb
mov
test
popa
jno
xchg
dec
cltd
incb
sub
adc
xor
and
and
sbb
dec
aaa
jmp
es
sarb
cmp
or
imul
je
jnp
and
arpl
or
push
jmp
push
jl
outsb
pop
or
jl
push
mov
cwtl
jne
mov
xchg
stc
pop
test
xor
mov
fldcw
push
sbb
add
inc
bound
enter
pop
adc
loopne
sbb
adc
popa
test
int3
add
je
icebp
xchg
jmp
fimull
mov
and
jmp
push
jbe
push
insl
addb
fimuls
and
clc
test
leave
fwait
push
lods
adc
xor
and
jno
into
aam
out
xchg
roll
adc
sub
add
inc
xchg
adc
test
test
sahf
test
push
xchg
in
lcall
inc
sarl
inc
in
jne
dec
push
ljmp
aas
les
inc
pop
pop
add
push
jmp
icebp
pop
cmp
add
add
jmp
push
les
or
push
adc
and
jmp
adc
movsb
adc
dec
mov
mov
xor
daa
jmp
add
add
insb
jno
dec
sub
pop
inc
push
dec
lret
in
inc
loope
or
mov
sub
test
pop
add
sahf
adc
cmc
out
fstps
nop
insl
or
mov
adc
inc
nop
adc
dec
out
pop
lret
mov
dec
jle
dec
cld
adc
mov
xchg
and
xchg
lcall
dec
nop
inc
pushf
test
pop
and
pusha
arpl
mov
flds
jo
sbb
aas
js
cmpb
jle
and
and
pop
sub
and
sub
sbb
push
jmp
xchg
add
rorl
mov
icebp
adc
and
pop
aam
icebp
icebp
mov
popf
mov
dec
cmp
push
out
cmp
or
and
pushf
lret
mov
mov
adc
cmc
fldt
cld
inc
sbb
mov
mov
lods
inc
das
xor
adc
cmp
sub
inc
int3
add
or
pop
aam
and
and
movsl
adc
fdivrs
adc
add
in
mov
push
adc
mov
stc
nop
mov
in
adc
call
adc
xor
xor
push
mov
rorl
sub
es
lret
pop
inc
adc
inc
cmp
shlb
jb
cwtl
cld
cmp
sub
les
pusha
or
sbb
mov
dec
loope
pop
pop
jno
dec
leave
shlb
bound
fstps
cmpsl
and
sub
jne
mov
adc
bound
adc
push
dec
inc
cmpsl
scas
es
and
jge
cs
xor
cmpsb
aam
cmp
lret
mov
test
shll
stos
into
mov
mov
inc
adc
ret
sarb
leave
pop
in
mov
and
pop
xchg
mov
cmp
jl
fs
cmove
cmp
and
fildll
push
sahf
movsl
jnp
mov
adc
sub
jmp
fildll
je
dec
fisttps
or
push
jmp
mov
call
push
and
mov
lret
or
clc
jle
jmp
movsb
imul
dec
cmp
lds
sbb
sbb
or
sub
js
push
mov
lcall
pop
mov
je
testb
jns
in
add
int
mov
in
ret
xchg
push
adc
or
dec
test
pop
and
pop
dec
mov
cmp
jne
nop
sti
arpl
nop
sbbb
enter
cltd
xor
sub
add
sbb
mov
imul
neg
cmp
js
or
push
adc
jns
xor
push
adc
dec
loop
xor
ret
dec
pop
lret
fcomps
adc
push
clc
mov
fidivs
imul
int
jo
xchg
push
bound
or
mov
mov
add
jne
mov
xchg
cs
aaa
sub
dec
or
inc
das
movsb
movsb
loopne
push
popa
leave
pop
xlat
push
cltd
fwait
ret
mov
jns
ret
xchg
mov
sahf
sbb
and
cmp
lcall
xor
inc
mov
stos
std
xor
push
pusha
inc
out
xchg
and
in
jae
test
in
in
xor
sti
sbb
pop
add
fstpt
es
adc
inc
pop
cmp
push
inc
jns
in
lret
repnz
in
or
xchg
ljmp
cmp
out
mov
and
cmc
adc
cmp
in
adc
mov
and
clc
jmp
addb
in
ja
call
mov
add
sub
xchg
push
sub
pop
dec
data16
pop
je
aaa
dec
and
shlb
cmpl
jle
mov
das
call
clc
rcll
xchg
dec
sbb
mov
xchg
xor
or
cltd
inc
mov
mov
xchg
mov
pushf
fimuls
ret
push
adc
lret
mov
xchg
xchg
outsb
cmp
js
nop
or
sbb
or
jne
es
lds
cvtdq2ps
fsubr
xor
and
jno
lds
push
fsubl
sbb
push
fdivrs
push
js
fsubs
pop
test
xchg
ret
cmpsb
cld
push
call
cltd
mov
repz
in
mov
fadd
ret
es
popf
mov
push
xchg
or
mov
and
inc
jecxz
mov
inc
xor
roll
xor
call
pushf
repnz
call
clc
mov
and
shl
cmp
xor
mov
adc
xchg
sub
inc
movsb
and
cld
addr16
stc
xor
mov
xchg
sub
dec
loopne
or
mov
jo
mov
inc
stc
fwait
mov
dec
dec
movsl
gs
and
or
or
dec
test
addb
or
and
push
les
sbb
clc
mov
mov
and
adc
mov
test
push
sbb
inc
or
sbb
loop
adc
stc
or
lds
or
mov
jg
add
nop
lock
decl
push
inc
test
scas
add
jne
cmc
ret
aas
pop
xor
mov
ret
push
adc
fs
push
xchg
xor
into
jge
test
jae
adc
sbb
les
dec
jge
jle
pop
call
add
notb
or
aad
aam
adc
jp
sarb
jge
sbb
sbb
xor
jmp
rolw
jmp
fst
add
shlb
push
or
add
fwait
jmp
movsb
or
sbb
pop
daa
aam
fildl
fisubrl
mov
push
int3
push
push
sbb
rdmsr
add
mov
leave
adc
psraw
add
and
sbb
jb
or
lret
push
xchg
call
jmp
repnz
inc
dec
dec
repnz
pushf
js
lods
push
test
ror
dec
mov
lret
cmpl
fidivrl
les
or
mov
clc
push
and
call
mov
adc
add
push
mov
cld
mov
dec
repnz
or
pusha
sti
xor
int
shrl
aas
or
mov
mov
shrl
mov
add
mov
call
mov
inc
mov
loopne
or
or
push
xor
dec
xchg
les
dec
nop
adc
mov
test
cmp
push
pop
lock
xchg
out
cwtl
or
or
enter
sub
popa
or
stc
fwait
sub
sub
sahf
pushl
cwtl
push
ror
cwtl
xor
shlb
or
in
es
cmc
add
cmp
adc
jecxz
fidivs
out
xor
or
mov
adc
mov
call
dec
ret
jmp
cwtl
push
lahf
add
jmp
xchg
je
xchg
and
jne
incl
or
or
call
mov
push
jge
adc
sub
inc
jo
mov
dec
mov
shll
pop
inc
mov
mov
repz
and
mov
mov
inc
mov
cmp
xchg
dec
sarb
adc
dec
std
push
imul
aaa
xchg
fisttpll
clc
xchg
pop
cmp
add
jbe
popa
adc
clc
pop
roll
mov
cmpsl
cs
sbb
push
add
dec
jne
push
push
and
mov
xor
inc
sbb
stos
adc
test
and
in
cmpsl
lock
xor
mov
xor
ss
mov
inc
mov
in
or
cmp
rcl
xor
jb
adc
or
repz
adc
mov
cmp
sub
ljmp
negb
call
fstps
loopne
dec
mov
cwtl
or
inc
cmpsb
loop
jle
ss
pop
push
sub
and
dec
jo
mov
inc
push
cmp
lret
mov
sub
out
mov
adc
pop
cld
xor
stos
jg
dec
push
enter
cld
icebp
mov
dec
xor
dec
cmpl
bound
add
cld
aam
inc
adc
inc
adc
pop
ljmp
jns
faddl
xor
pop
and
jne
cmp
dec
pop
in
sbb
inc
xchg
jge
mov
mov
test
jle
lret
in
inc
adc
xchg
xchg
cmpsl
dec
ficoml
push
in
mov
lret
push
outsl
sbb
mov
xchg
cmpsl
fdivs
add
pop
in
lds
pop
adc
jno
jmp
adc
out
or
in
add
cwtl
test
adc
push
push
or
cmpl
sbb
out
std
popf
mov
aam
or
or
dec
mov
mov
test
jge
jmp
sub
adc
mov
push
call
inc
les
repz
pop
pop
add
call
mov
mov
scas
jp
adc
pop
xchg
sar
pop
dec
cwtl
aaa
jbe
fcmovbe
shl
daa
rolb
add
or
mov
mov
add
xchg
je
push
movsl
mov
and
lea
cmpsb
adc
sbb
mov
jl
lods
or
inc
mov
mov
push
and
xor
movsb
or
mov
lea
mov
xchg
sub
jbe
vmovups
shr
cmp
add
push
or
dec
popa
lods
dec
xor
test
mov
jo
je
adc
mov
jne
dec
jb
rclb
movsl
mov
lret
or
jne
pop
or
hlt
mov
sub
and
add
in
sub
je
arpl
or
dec
cmp
sub
hlt
mov
in
adc
mov
out
sub
sub
repz
mov
xchg
xchg
icebp
jmp
add
repz
jo
jnp
dec
push
int
clc
pop
mov
mov
sbb
inc
pop
mov
pop
roll
mov
xchg
push
pop
mov
ret
push
test
mov
inc
lods
mov
sbb
mov
rcl
sarl
jnp
test
sub
mov
mov
xor
dec
mov
mov
push
or
clc
xchg
aad
leave
xchg
or
addl
sbb
mov
jns
popl
add
test
and
push
arpl
lods
xor
nop
pop
test
test
jo
popf
psubw
sti
push
jg
cmp
xor
sub
push
jne
inc
push
adc
mov
add
xor
adc
mov
xor
xchg
xor
cmp
or
inc
ljmp
enter
orb
call
push
inc
sub
dec
ret
lret
add
adc
ljmp
adc
sub
adc
lea
hlt
push
xor
pushl
adc
jmp
repnz
inc
or
pop
insb
push
loopne
addr16
sub
adc
mov
or
es
sbb
movl
arpl
movsb
mov
cltd
jne
push
lock
add
dec
mov
gs
adcb
xor
and
and
inc
idivb
jg
lcall
into
xchg
mov
loopne
in
push
sbb
mov
loop
mov
mov
jmp
and
xchg
call
rcl
cli
mov
adc
test
pop
push
mov
jo
pop
xchg
push
sbb
xchg
jmp
sub
pushf
mov
xchg
and
das
adc
mov
ret
int
nop
push
add
or
or
or
lods
nop
jns
mov
sub
pusha
loop
adc
mov
lods
xor
mov
adc
and
cld
cmpl
jnp
setne
fldcw
pop
lret
jae
push
fnstcw
or
lods
mov
mov
cvtpi2ps
ret
sub
in
inc
pop
lods
mov
addr16
inc
mov
lea
mov
or
mov
pop
xchg
inc
mov
dec
xorl
sarb
mov
xor
jp
enter
cli
mov
rorb
fs
xor
xchg
mov
push
mov
and
loopne
xchg
adc
xchg
inc
pop
pushf
xchg
and
add
nop
inc
test
movsb
cli
insb
xchg
mov
call
in
imul
cmpsl
ss
js
mov
mov
jnp
fmuls
sub
dec
mov
jge
int3
outsb
ja
std
incl
xor
or
sbb
jae
mov
xlat
stc
cmpsb
in
dec
cmp
push
xor
std
xor
popf
loopne
add
mov
inc
test
mov
js
push
cmp
mov
cmc
jle
lea
and
bound
insb
mov
pop
scas
loop
cmp
ljmp
hlt
adc
xor
aam
ja
lret
shll
ret
les
filds
or
leave
shll
shll
test
mov
adc
lea
sbb
mov
sub
and
stos
mov
stos
dec
or
frstor
sbb
sub
or
xchg
adc
pop
xchg
adc
or
test
and
cli
test
movsl
and
add
xchg
inc
push
call
xchg
ljmp
xor
add
aam
or
fmuls
add
and
outsb
xor
inc
adc
mov
adc
adc
push
mov
xor
pop
pop
test
cmpb
pop
xor
pop
adc
xchg
and
jp
jmp
mov
dec
xlat
mov
adc
xor
xor
fs
cmp
and
mov
sub
and
add
incb
shlb
adc
cmp
and
or
lods
pop
mov
repz
je
mov
out
dec
mov
dec
pop
in
xor
push
push
pop
call
das
shr
enter
syscall
cmp
jle
not
jne
xlat
dec
call
mov
or
test
jg
js
adc
cmp
fdiv
movsb
cmp
cmc
lods
bound
cmp
jmp
and
add
push
xor
jp
mov
push
in
inc
arpl
jge
rol
aad
lods
das
inc
jl
imul
jmp
inc
pop
call
pop
hlt
jge
dec
mov
mov
js
or
inc
imul
test
out
adc
cmp
mov
xchg
std
nop
loop
xor
cmpl
repz
adc
dec
mov
and
dec
cmp
adc
cmpsb
setle
xchg
inc
pop
jmp
cmp
pop
sar
pop
pop
lahf
lds
pop
sarb
test
jge
dec
addps
leave
add
out
sub
adc
dec
jb
leave
jge
pusha
mov
or
call
ret
xor
mov
mov
and
pop
xor
rolb
adc
mov
inc
movsb
pop
lea
movsl
sbb
and
call
subl
andl
jg
popf
aas
and
cli
adc
mov
jno
push
loope
stc
imul
pop
jl
or
cmp
mov
rcll
cmp
dec
mov
and
dec
mov
add
xor
pop
int
adc
notl
pop
inc
repnz
es
inc
adc
decl
ljmp
imul
in
and
jb
xchg
aad
adc
adc
sub
arpl
mov
and
ret
xorb
aaa
je
mov
push
push
cld
movsl
les
daa
mov
adc
addl
mov
hlt
sub
cmc
and
aam
cmp
cli
jbe
cmc
or
push
test
and
inc
adc
lds
and
and
adc
push
sbb
adc
jne
fcomps
nop
sbb
cmpsb
scas
mov
xlat
cmpsb
les
pop
mov
jbe
inc
mov
xchg
cwtl
and
jne
and
mov
jbe
cmp
and
pop
inc
loop
daa
aaa
loope
pop
aad
in
fdivs
sbb
inc
scas
sub
xor
stos
sbb
mov
jmp
cmpsb
cmp
adc
xor
or
jne
scas
stos
cmp
mov
push
dec
or
jbe
inc
out
ret
or
and
dec
dec
fstl
add
push
dec
ja
and
sbb
sarl
out
push
jns
lret
mov
adc
cmp
adc
int
jg
aam
inc
or
adc
jp
xchg
outsl
mov
sub
jnp
addr16
repnz
or
dec
pop
push
daa
call
or
les
dec
jne
push
jmp
mov
sbb
lods
push
clc
pop
xor
in
daa
jne
and
dec
nop
outsl
xor
mov
add
and
mov
js
rcrb
lahf
xchg
fwait
sub
lcall
or
adc
enter
aaa
js
mov
setno
inc
adc
mov
sub
sbb
mov
adc
xor
or
push
adc
sbb
mov
shr
rorb
mov
or
andl
aam
fsubs
push
cwtl
sub
sub
adc
rolb
and
adc
cld
addl
mov
push
int3
mov
push
and
or
or
and
inc
enter
lea
int
cmpb
jle
mov
les
xchg
inc
mov
and
xchg
shlb
xor
hlt
mov
sbbl
mov
xor
int3
and
rcrb
mov
test
mov
pop
out
push
stc
cld
fnsave
mov
out
fiaddl
jns
jge
les
inc
insl
das
fs
stc
call
add
fs
aas
cmp
add
adc
dec
sub
outsl
lahf
gs
pop
and
cltd
jne
adc
mov
enter
into
test
aad
push
in
adc
out
dec
popa
jae
cmp
negb
dec
nop
mov
push
enter
ret
or
push
mov
cli
and
int
adc
or
mov
adc
outsl
or
xchg
add
push
add
jne
loope
sub
mov
pop
cltd
cli
js
adc
cwtl
addr16
pop
rolb
mov
jl
or
xor
xchg
inc
jle
adc
mov
xor
push
lea
mov
sbbb
je
adc
adc
dec
pop
adc
mov
pop
mov
and
leave
clc
or
xor
mov
and
movntq
test
push
sub
xchg
shr
or
in
int3
xchg
movsb
xchg
out
or
mov
andb
je
mov
add
shr
dec
rcrl
dec
add
mov
fsubrp
push
inc
add
push
je
add
add
sub
cli
ss
jo
jns
mov
or
mov
push
adc
lea
xlat
imul
shll
cmp
adc
push
jae
xchg
sub
add
xlat
es
popf
add
jne
adc
jmp
shrl
or
fcomps
push
sub
sub
popf
pop
cmp
xchg
xchg
pop
int3
call
cmp
in
pop
sub
xchg
cmp
lea
sti
xchg
sbb
sub
jle
cs
mov
clc
orb
adc
sub
les
or
cmp
mov
jecxz
test
ds
jge
test
nop
push
push
data16
push
sti
mov
xchg
mov
mov
push
testb
rorb
leave
pop
das
jp
dec
jmp
xor
enter
or
sarb
lret
dec
push
or
xor
in
negb
jle
push
movsl
in
sti
cwtl
lods
mov
adcl
push
push
adc
mov
mov
add
mov
xchg
sbb
and
loopne
add
call
push
leave
dec
pushf
bound
mov
add
inc
push
inc
dec
jb
mov
gs
push
mov
sti
inc
std
das
inc
bsr
or
sbb
cmp
sysret
je
push
jb
pop
and
cmp
adc
clc
adc
push
jne
or
cli
aaa
sub
mov
or
add
or
outsb
loop
loop
or
shlb
sbb
test
and
cmpsb
mov
mov
cmp
ret
rorb
cmc
ljmp
imul
xchg
popa
arpl
inc
js
mov
xchg
add
xadd
inc
ret
in
mov
xchg
sub
mov
cmpsb
jo
mov
pushl
inc
addr16
mov
or
xchg
addr16
mov
push
push
icebp
cmp
cmpl
sub
xor
loop
mov
or
insb
std
ret
jle
xor
or
loope
jg
pop
shrl
xor
icebp
and
pop
pop
popf
and
and
clc
xchg
ja
adc
fstl
je
mov
add
add
cs
pop
add
mov
fnstenv
xchg
push
dec
daa
mov
dec
mov
xchg
and
or
jg
inc
inc
mov
aad
adc
jbe
sub
into
add
xrstor
or
push
lds
repz
lea
or
call
pop
or
cltd
cmpsl
inc
add
pop
push
mov
scas
shrb
movsb
and
xchg
xor
lea
movl
add
inc
inc
adc
icebp
cwtl
or
adc
sbb
lds
push
imul
mov
mov
cwtl
je
cmc
cmpsb
insl
int
jp
in
shll
nop
data16
jnp
cmpsb
aaa
or
inc
jl
and
sub
movsb
stos
test
dec
popa
outsb
jmp
cmp
inc
push
push
mov
test
jae
fwait
or
sbb
sub
xchg
inc
xchg
xchg
pushf
call
nop
insb
idivb
das
jge
insl
imul
inc
sub
aam
add
add
mov
mov
jecxz
jecxz
fsubr
dec
std
sub
leave
adc
pusha
pop
pop
clc
fildl
add
xor
cmp
and
cmp
xchg
inc
sbb
jge
insb
sub
pop
dec
popa
cmp
sete
call
jno
cmp
lods
lock
orl
jnp
xchg
std
xor
inc
fdivl
jge
jecxz
popf
ret
lret
pop
xchg
in
in
xchg
cmp
and
test
adc
sub
test
add
push
pop
xor
je
cmpsb
or
test
xor
mov
pop
dec
int3
cltd
pop
aaa
mov
adc
jl
mov
xchg
daa
adc
lock
int
pop
rol
cld
and
cmp
movsb
sbb
sbb
ljmp
aad
lods
repz
jns
adcl
adc
sbb
sarl
xorl
aaa
add
sub
sub
adc
push
pop
pop
jbe
cli
add
push
mov
xchg
ja
in
push
or
popl
fisttpl
cld
jnp
cmp
adc
ds
or
fbstp
xlat
mov
test
mov
mov
mov
inc
push
xchg
aaa
jno
outsb
pop
jno
adc
sub
xor
int3
shl
movsb
enter
or
movsl
test
insl
arpl
cld
ret
mov
adc
data16
inc
fcompl
adc
es
push
inc
int3
adc
les
dec
and
mov
dec
rclb
mov
movsb
and
xchg
cltd
mov
adc
test
jl
nop
adc
xchg
popa
insb
and
js
adc
xor
adcb
fmuls
xor
pop
popa
sub
enter
and
and
addl
rol
inc
rol
bound
and
and
ret
dec
add
fs
shlb
dec
in
dec
test
adc
or
mov
mov
sbb
je
sbb
cmpsb
or
in
mov
cmp
call
in
cmpsb
js
loopne
lock
fsubl
and
and
and
and
jb
and
and
and
and
xchg
cmp
mov
push
dec
enter
enter
enter
xor
movsb
xchg
in
enter
and
pushf
xchg
pop
or
cwtl
xchg
push
and
xchg
mov
push
mov
and
insb
and
inc
or
mov
cmp
test
mov
add
movsl
xor
adc
lret
cmp
out
dec
int3
xor
and
adc
mov
or
inc
jb
daa
cmp
or
xchg
mov
inc
cwtl
and
adc
movsb
and
adc
daa
pop
inc
mov
mov
test
jge
and
stc
dec
pop
jo
jl
sub
and
adc
lret
adc
notl
mov
adc
inc
out
cmp
sbb
inc
stc
cmp
add
aas
enter
mov
mov
pusha
mov
mov
or
or
imul
dec
mov
and
pop
jbe
and
jle
mov
in
mov
decl
dec
call
xor
dec
mov
test
imul
push
mov
jmp
adc
add
mov
aas
jl
mov
jge
cmp
es
adc
mov
mov
test
jnp
push
sub
mov
push
icebp
inc
ret
les
or
pop
stc
call
mov
call
push
mov
call
lcall
fimull
adc
adc
adcb
test
mov
fdivrl
lods
adc
mov
adc
call
inc
cmp
ds
and
sbb
xchg
lds
sub
daa
jns
scas
icebp
or
and
stos
adc
ficoms
sbb
nop
test
mov
jg
movsb
sbb
xchg
inc
xchg
outsb
inc
loopne
lea
adc
nop
cmpb
ret
xor
hlt
jge
inc
jb
xchg
mov
fs
xor
push
and
fcoms
mov
dec
mov
push
in
push
rol
mov
mov
sbb
fbstp
movups
or
mov
xor
dec
cmpl
stc
shr
sti
sub
inc
dec
sub
push
adc
or
int3
xor
fsubr
jne
mov
and
inc
loope
enter
pop
std
fmuls
sarl
cmpsl
xchg
jb
and
mov
dec
add
xor
bound
push
fsubl
mov
push
fistpl
hlt
fisubs
mov
push
scas
test
push
and
ret
test
cltd
mov
xchg
inc
pusha
xchg
adc
mov
push
out
push
or
adc
or
lock
sub
clc
inc
sbb
inc
mov
push
sbb
and
cmp
dec
xor
inc
jno
xchg
inc
test
push
and
push
mov
pop
mov
loope
cwtl
insb
test
mov
jmp
mov
xlat
push
cs
mov
mov
in
ret
jne
mov
dec
adc
push
adc
xlat
je
add
adc
push
ss
rclb
inc
mov
enter
xor
adc
xchg
jno
mov
push
jecxz
sarb
cltd
and
sub
sub
xchg
adc
clc
mov
sub
or
sub
push
outsl
add
adc
nop
rolb
push
lea
and
cltd
pop
sbb
je
xchg
mov
repnz
push
rclb
add
mov
lahf
or
sbb
outsb
dec
mov
mov
insb
dec
pop
inc
jne
clc
push
in
mov
pop
inc
jecxz
mov
call
cwtl
les
fisubl
loopne
out
push
insb
pop
push
cmp
push
fdivrs
inc
call
push
aam
pop
and
adc
dec
ljmp
pop
cmp
pop
jne
lock
pop
addps
jmp
or
add
add
add
sbbb
cmp
pop
push
call
mov
js
jp
imul
pop
mov
jae
bound
sbb
push
in
out
outsb
je
sub
pop
push
test
pop
in
add
lahf
jns
xchg
add
insb
inc
and
jb
xchg
mov
pop
mov
cwtl
push
dec
inc
jo
cmpsb
or
dec
push
or
push
dec
dec
in
pop
or
gs
and
mull
in
imul
sub
jge
lock
insl
push
cmp
frstor
into
fistl
ja
and
aas
bound
data16
xchg
mov
outsl
pusha
insl
xor
das
gs
adc
adc
je
data16
fistpll
push
lret
iret
iret
outsl
jne
mov
in
in
ror
shl
mov
mov
dec
cmpsl
nop
mov
divb
xchg
or
mov
filds
cli
sub
lret
in
hlt
jle
addr16
cli
lret
popa
cmp
xchg
or
inc
cmp
dec
outsl
je
sub
les
lock
data16
in
jmp
jbe
or
inc
out
or
add
xchg
pop
dec
out
jo
addr16
inc
pusha
pop
outsl
inc
nop
sub
fs
outsl
cli
lods
push
les
adc
jl
mov
cmp
dec
pop
testl
out
mov
out
cli
or
adc
sbb
test
mov
cmp
iret
inc
adc
data16
push
pop
mov
push
adc
imul
lcall
outsl
xchg
dec
push
xchg
movsl
insl
xor
push
inc
adc
cmp
std
adc
sbb
out
enter
or
test
or
jbe
mov
lea
and
mov
pop
rclb
mov
call
cmp
sbb
or
inc
repz
stc
enter
xor
in
sub
scas
repz
lock
jge
dec
cltd
pop
jo
call
mov
push
fcoms
jo
cmp
bound
pusha
insl
jo
mov
or
push
pusha
pop
js
push
imul
jno
cmp
lods
jne
jns
adc
inc
xor
movsb
shlb
mov
bnd
adc
jp
inc
mov
push
or
inc
xchg
and
jl
test
and
xchg
enter
inc
test
fs
push
push
mov
mov
push
push
xor
fsubp
and
add
aas
pop
or
lahf
or
xor
xchg
push
movsb
add
sbb
sbb
or
fildll
ret
pusha
test
and
movsb
inc
out
cmpsb
mov
dec
ret
stos
push
call
lods
sbb
mov
dec
inc
cwtl
jge
std
pop
sbb
add
rcl
push
xchg
or
sub
pop
ret
dec
daa
cmpsl
push
test
or
or
adc
adc
lret
mov
xchg
insl
gs
push
adc
jbe
adc
test
push
add
jmp
push
or
push
inc
sub
lcall
scas
mov
cmp
xchg
movl
bound
in
ret
adc
adc
loope
push
enter
xor
push
or
fmuls
dec
xchg
insb
movsl
fs
push
in
in
inc
jb
in
bswap
sub
dec
aaa
mov
mov
lock
sbb
sub
in
sub
or
push
cmp
lret
mov
shlb
rorb
and
inc
sbb
popf
and
rolb
mov
int
jmp
lds
dec
jae
pop
xor
jo
inc
out
bswap
sbb
sub
mov
dec
out
test
imul
mov
pop
ljmp
or
fwait
call
jbe
mov
xchg
mov
enter
imul
pop
mov
jns
cld
cli
adc
mov
xor
jle
jmp
or
xchg
cmp
push
push
or
or
addb
sbb
adc
dec
test
subl
popf
enter
or
mov
nop
mov
dec
adc
repnz
push
and
mov
or
xchg
pusha
mov
les
push
enter
in
decb
int3
xchg
js
xlat
sarb
addb
mov
sbb
or
fdivrl
and
loopne
lods
inc
mov
imul
in
rolb
and
adc
mov
inc
daa
xor
sbb
mov
and
sbb
or
test
repnz
std
test
adc
adc
in
cld
movsl
mov
aad
add
je
push
and
push
cli
add
adc
lahf
stos
sbb
outsl
push
je
inc
jno
xchg
push
jne
xlat
stos
adc
or
mov
or
adc
sahf
outsl
popa
mov
or
scas
adc
pop
outsl
mov
or
ds
pop
cli
push
sbb
push
cmp
adc
jns
and
inc
push
inc
jae
push
adc
dec
adc
push
adc
imul
repnz
jo
add
outsl
imul
jnp
das
push
xchg
dec
or
or
or
inc
push
dec
push
gs
enter
push
xchg
dec
or
jae
mov
jmp
push
mov
adcl
mov
nop
pop
add
es
dec
adc
aaa
test
lret
sub
add
adc
test
adc
nop
gs
stc
pop
sub
inc
mov
mov
mov
cmpb
adc
push
mov
mov
inc
xor
pop
in
add
hlt
jle
inc
fs
adc
lret
xchg
subb
ljmp
nop
in
and
sub
inc
cmc
addr16
dec
cmc
pop
test
imul
in
fs
lods
in
cmp
adc
gs
sub
inc
mul
adc
push
loop
adc
les
mov
gs
js
dec
mov
loopne
nop
loopne
and
subb
and
inc
inc
int3
mov
bound
aas
nop
lods
out
and
dec
pop
in
and
adc
add
dec
clc
fs
dec
lock
cmpsl
xchg
aam
clc
jecxz
mov
fcomp
adc
or
xrelease
dec
push
xor
clc
bound
push
sbb
imul
sub
xor
jge
dec
test
or
dec
fcompl
mov
mov
loop
and
inc
hlt
push
dec
call
ljmp
mov
inc
aaa
xchg
fcoms
or
lea
adc
inc
in
push
lret
and
sbb
dec
mov
or
adc
sub
insb
or
ret
dec
movups
test
or
sti
ds
sbb
sbb
push
jno
and
and
push
xor
adc
lock
in
adc
jo
sub
adc
pcmpeqd
adc
cmp
hlt
inc
jmp
mov
cmp
jg
mov
ret
add
jge
dec
mov
jnp
mov
add
jmp
xchg
aas
dec
aaa
cmc
imul
or
mov
ds
dec
fwait
jl
add
sub
xchg
std
inc
jmp
add
test
adc
dec
push
pop
mov
and
pop
or
clc
inc
push
aaa
mov
loopne
adc
outsl
or
inc
data16
xor
lret
es
mov
outsl
mov
pusha
cmc
and
popa
lock
sti
pop
clc
inc
pop
and
loop
adc
mov
jl
mov
test
dec
jge
xor
inc
push
pop
bound
and
adc
mov
and
mov
jmp
jmp
roll
fadd
adc
testl
push
mov
and
or
out
pop
data16
aam
dec
les
imull
cltd
enter
shlb
test
adc
jle
mov
xchg
dec
cltd
cmp
hlt
cld
mov
jns
sbb
loopne
or
insb
mov
mov
fidivrs
dec
stos
hlt
sbb
mov
pusha
push
sub
les
adc
or
xchg
roll
sti
xchg
imul
adc
push
mov
cmp
sbb
pop
rcll
outsb
mov
mov
adc
test
sbb
stos
rcl
add
rcrl
movsb
xchg
push
faddl
jnp
xchg
js
adc
xchg
and
movlps
sub
and
sub
ss
addr16
test
mov
ds
jne
add
cmp
xchg
xor
and
add
leave
repz
mov
dec
and
scas
mov
pop
pop
imul
push
ja
push
nop
sub
add
lock
jo
es
andb
mov
jle
outsl
ss
test
scas
dec
fs
xor
xchg
and
and
adc
inc
dec
push
lock
push
dec
clc
fisttpl
jl
inc
xor
sub
call
pop
push
lea
sub
das
shl
pop
push
adc
mov
push
sbb
and
idiv
cmp
adc
add
adc
mov
push
mov
pop
test
ret
lds
push
xor
fistps
test
je
mov
inc
ja
mov
and
mov
mov
jne
xor
push
adc
and
fldenv
fdivr
sub
pop
push
paddd
or
and
sub
jp
jne
imul
dec
pop
dec
jg
sub
mov
imul
add
and
inc
add
inc
push
add
das
mov
enter
or
sub
cmp
je
mov
fwait
dec
jl
inc
call
and
cld
lret
mov
clc
inc
fcmovu
test
dec
inc
mov
dec
add
or
enter
sbb
shl
or
adc
hlt
and
adc
ja
mov
loopne
mov
sbb
push
call
ds
add
jbe
pop
dec
xorl
or
and
inc
mov
out
adc
movsl
pop
test
rorl
sbb
mov
mov
adc
cli
std
mov
xchg
jmp
push
xchg
out
jb
mov
test
lods
dec
sar
fs
test
addb
lea
rorb
push
push
and
jns
sub
jnp
or
ja
imul
pop
push
adc
fwait
dec
xor
add
adc
cmp
ret
mov
and
movl
inc
mov
pop
sub
fists
lea
push
jnp
jne
and
popa
daa
nop
divl
mov
fs
pop
lods
inc
loopne
repz
ss
sbb
push
push
dec
mov
push
add
into
or
mov
roll
pushl
pop
mov
push
sub
hlt
leave
stc
dec
mov
mov
inc
jne
in
pop
pop
test
movsb
and
pop
pop
or
roll
add
ss
pushf
fdivs
add
ret
xchg
dec
or
adc
dec
jno
add
clc
add
mov
jl
xlat
xor
dec
je
cmc
add
jmp
lods
hlt
daa
adc
cld
lret
gs
mov
jmp
and
inc
aaa
jp
hlt
in
test
test
adc
leave
xor
xchg
pop
lret
mov
popf
dec
test
jmp
je
adc
fcoml
aas
and
and
data16
adc
push
and
mov
bound
sub
add
sbb
shll
push
daa
mov
out
and
push
adc
mov
add
cli
xchg
lods
push
or
mov
sahf
stos
outsb
repnz
inc
pop
icebp
push
sub
jmp
mov
pop
es
adc
mov
add
xchg
test
mov
pop
push
xor
nop
bound
xchg
std
lret
ljmp
adc
jge
das
je
fisubrl
mov
mov
mov
fs
sub
push
mov
add
dec
push
mov
test
daa
sbb
pop
stos
xor
fcompl
xchg
xchg
push
rcrb
cmp
dec
xchg
sub
cmc
push
sbb
or
dec
cli
mov
push
inc
jno
mov
mov
ja
adc
add
and
push
inc
and
pop
adc
mov
xor
cmp
mov
ljmp
icebp
dec
call
xor
and
cmovle
jecxz
xchg
push
sbb
call
inc
adc
out
xor
cs
aas
fstpt
sub
xchg
mov
adc
inc
and
inc
fst
shrl
and
adc
adc
push
or
es
sti
adcb
enter
call
and
and
rorb
movsb
les
dec
test
mov
loopne
je
mov
and
fmull
mov
ds
cmp
xchg
frstor
aaa
enter
hlt
add
aam
push
xchg
pop
sbb
inc
add
ljmp
add
loop
int3
hlt
inc
mov
call
lret
dec
cmp
subb
std
and
movsl
inc
out
aaa
mov
xchg
mov
test
ljmp
lret
jmp
mov
mov
cwtl
addb
push
pop
sysenter
test
adc
mov
das
aam
xchg
mov
add
test
cli
or
xlat
or
dec
or
imul
inc
stos
int
in
adc
or
xor
leave
xchg
adc
and
dec
nop
xchg
lods
pop
test
push
inc
fwait
push
inc
and
cmpsl
test
dec
pop
sbb
inc
mov
fsts
sub
mov
and
and
and
fisttpll
or
je
dec
xchg
scas
xchg
xchg
or
adc
mov
sub
call
push
or
xchg
pop
push
loope
stc
and
xchg
xchg
cmp
mov
call
sbb
or
dec
rcll
jmp
and
adc
mov
xchg
pushf
push
adc
push
cwtl
adc
sahf
and
inc
jmp
pushf
rcll
mov
jmp
xor
arpl
sbb
rclb
lahf
fwait
mov
dec
push
and
sub
hlt
inc
xchg
testb
mov
mov
xchg
daa
pop
push
mov
popf
out
fldl
test
inc
adc
dec
or
adc
cltd
out
movsl
xor
inc
or
cmp
dec
icebp
and
or
fidivs
add
out
lock
push
push
push
xchg
out
iret
dec
or
push
dec
test
or
fdiv
test
cmp
sbb
scas
test
loopne
pop
movsl
nop
xorb
in
lea
xlat
andl
fs
loopne
mov
pop
in
imul
or
testl
fstl
sub
hlt
xchg
pop
loopne
hlt
daa
movsl
dec
scas
sbb
jns
icebp
loop
or
repnz
or
sub
loopne
call
cmp
and
pop
popf
inc
adc
sub
xchg
cltd
movsl
in
icebp
adc
push
add
dec
dec
outsl
xchg
nop
and
btr
inc
adc
std
enter
xor
dec
inc
insb
push
subb
pop
or
or
inc
ljmp
lahf
js
adc
sbb
repz
mov
loop
movsl
test
mov
sub
dec
mov
mov
lcall
inc
adc
and
hlt
inc
or
sbb
sbb
mov
adc
adc
hlt
pushf
sub
adc
xchg
mov
inc
pushf
adc
or
dec
ja
sub
mov
bound
fwait
inc
iret
adc
jae
mov
iret
adc
shr
ss
das
mov
iret
adc
ret
loop
and
aaa
test
and
and
inc
fs
push
and
jbe
or
sub
adc
pusha
sbb
or
decb
sbb
or
dec
adc
dec
mov
test
dec
mov
adc
push
jbe
movsb
insb
inc
pushf
adc
sbb
dec
jbe
cs
inc
cmp
call
mov
adc
call
adc
inc
mov
mov
and
adc
icebp
jb
or
mov
jg
lods
jno
repnz
mov
mov
das
mov
movsb
les
out
adc
adc
mov
das
daa
inc
inc
adc
std
jne
xor
or
jle,pn
pushf
adc
sbb
mov
sub
xchg
nop
daa
push
adc
dec
test
adc
nop
push
mov
add
test
xor
push
movsb
sbb
sbb
xor
aaa
xchg
rorb
sbb
mov
xor
xor
movsl
nop
das
jne
cli
lea
mov
pop
les
in
mov
inc
inc
and
jnp
ret
add
pop
sub
sbb
mov
ja
pop
dec
mov
ss
std
cmp
push
inc
pop
push
dec
int
or
pop
pop
lret
lcall
sub
or
cmp
sub
mov
push
cmp
add
pop
lods
shll
or
xchg
pop
jns
sbb
mov
imul
nop
or
jmp
shll
add
and
aad
xchg
and
test
roll
scas
mov
add
cmp
jb
mov
das
movsb
es
test
out
pop
mov
dec
inc
or
je
push
and
cmpsb
pop
mov
or
insl
popa
or
imul
stos
mov
dec
test
mov
insb
gs
adc
outsl
jne
sub
inc
inc
neg
lock
outsb
arpl
sbb
pop
adc
sub
shlb
test
xor
out
dec
sti
cmp
xchg
cmp
mov
xchg
adc
mov
inc
adc
dec
lods
cmp
call
push
sub
mov
adc
inc
fs
sub
xchg
add
outsl
loop
mov
dec
fidivrs
xchg
lea
dec
jno
xchg
or
mov
and
mov
pop
xchg
mov
fs
and
inc
sti
lahf
push
and
cmp
mov
inc
sbb
and
and
jmp
lea
and
add
cmc
lcall
imul
add
cwtl
cmp
mov
les
mov
sbb
hlt
in
sub
dec
mov
nop
int3
xchg
pop
cmpsb
aam
les
push
inc
mov
adc
and
xchg
mov
inc
nop
enter
inc
bound
dec
call
and
movsb
loop
sub
int3
fsubs
jns
sub
mov
and
push
data16
xor
pop
mov
dec
rolb
add
clc
std
add
add
xor
add
inc
or
repz
mov
pushf
lds
arpl
call
rolb
mov
pop
adc
add
jg
movsl
mov
dec
addl
jl
push
hlt
add
cwtl
cmp
jne
xorl
ljmp
dec
inc
enter
das
adc
mov
movsl
outsl
cs
enter
out
xchg
mov
sbb
int3
adc
inc
dec
add
or
sbb
xchg
or
outsl
jg
inc
imul
aaa
pop
jge
add
jnp
je
shrb
xchg
adc
inc
sub
inc
inc
xor
in
call
cmp
lea
xor
mov
fisttpll
or
push
mov
add
pop
xlat
inc
test
testb
cwtl
jl
push
xor
std
adc
dec
lds
mov
cmpb
inc
sub
adc
or
int
pop
sbb
bound
xchg
jg
repz
ss
inc
add
fs
fstl
xchg
sbb
push
mov
inc
xorb
adc
sbb
jp
inc
push
adc
cs
mov
rcrb
xchg
call
in
jle
or
stc
inc
sub
mov
lcall
mov
nop
push
push
sbb
sbb
mov
push
inc
lahf
cli
loope
mov
xlat
push
lcall
imul
jl
mov
pop
jge
test
fsubl
xor
mov
jp
int3
daa
jb
pop
syscall
jmp
sti
mull
cmp
ret
push
and
sbb
mov
mov
adc
push
popf
xchg
pop
cwtl
ds
test
and
mov
mov
outsb
adc
dec
in
mov
push
push
aaa
pop
sbb
jno
fstl
in
inc
ljmp
pop
push
in
out
pop
adc
inc
shlb
push
mov
xor
adc
pop
rorb
inc
jp
lods
cmpsb
daa
sbb
xlat
add
pop
xor
add
ret
and
or
xor
jecxz
scas
mov
or
in
jmp
or
jne
int
cmp
test
inc
adc
sub
push
sub
pop
lods
and
call
dec
rolb
add
dec
call
pusha
test
add
push
in
enter
scas
movsl
mov
mov
dec
in
inc
adc
jecxz
lcall
out
push
xchg
scas
dec
xor
or
scas
xchg
scas
enter
jb
cmp
xchg
and
in
jb
cmp
popf
and
in
push
out
fidivrs
dec
mov
je
shlb
mov
lea
leave
aad
mov
xchg
dec
add
into
ret
push
adc
jl
pop
xor
aam
mov
pop
pop
adc
ret
fisttps
jmp
xor
inc
dec
xor
cmp
clc
jle
dec
jg
push
addr16
cmpb
xchg
dec
pop
in
xor
cmpl
jge
js
int3
adc
bound
mov
xor
out
push
xchg
xchg
hlt
mov
xchg
cld
mov
or
rorl
mov
or
orl
fistl
push
je
add
pop
or
xor
lcall
push
in
or
orb
fistpll
lret
lcall
sbb
sbb
pop
jne
sbb
mov
inc
in
jmp
xchg
jp
outsl
loop
test
out
sbb
test
push
out
push
xlat
inc
push
ret
daa
cmp
adcb
je
scas
aad
add
add
pop
jo
adc
das
ja
push
adc
shll
sbb
lret
cmp
or
add
push
pop
jae
pop
sub
cs
and
fcmove
subb
std
adc
popf
dec
jp
lods
cmp
xor
out
adc
fcompl
inc
push
push
sbb
cmp
mov
cmp
or
jg
inc
or
xor
xor
push
movsb
adc
mov
sbb
fisubrs
out
fsts
cmp
test
sub
pop
je
jmp
mov
imull
sbb
adc
icebp
jmp
jl
sbb
aaa
fsubrs
jge
dec
aaa
cli
sub
pop
lret
dec
out
ss
dec
das
hlt
xor
xchg
adc
or
cli
in
in
inc
test
inc
pop
dec
mov
dec
daa
mov
sarb
pop
out
jle
adc
mov
out
incl
cmp
pop
push
js
xlat
or
cmp
jo
mov
ret
dec
or
lods
cmp
out
mov
stos
out
mov
movsl
pop
mov
stc
repnz
mov
push
mov
jnp
test
je
repz
call
inc
pushf
mov
mov
mov
mov
in
xchg
cld
xchg
or
mov
jl
dec
xchg
fs
clc
cli
icebp
andl
xor
scas
es
mov
loopne
mov
adc
mov
push
sub
adc
out
adc
mov
adc
cli
mov
mov
test
fisttps
lcall
and
jp
push
mov
sahf
movsl
push
lds
adcl
xor
and
bound
fimuls
cmp
add
xchg
push
xchg
test
es
icebp
mov
shr
add
inc
sbb
ret
repnz
adc
xor
xor
push
pop
pop
mov
test
hlt
call
and
dec
fs
lock
or
sti
stos
pop
mov
stos
shll
mov
cmp
test
fs
or
inc
pop
and
pop
xchg
sub
fldt
fstps
fwait
jmp
or
mov
lods
push
and
add
pushw
adc
sub
pusha
and
fistpll
adc
or
mov
dec
or
pop
sbb
adc
jge
sub
xor
xchg
movaps
enter
mov
int
loop
inc
stc
cld
or
sbb
fwait
xor
jmp
sahf
std
inc
mov
mov
mov
adc
daa
rclb
lret
loop
cmp
jo
cmpsl
mov
sub
ja
jp
add
and
xor
xchg
push
and
xchg
inc
jmp
xchg
nop
or
cmp
mov
push
cmpsl
xchg
insb
js
add
inc
sbb
arpl
ret
push
pop
and
dec
pop
add
pushl
lcall
sbb
adc
loope
add
adc
pop
pop
add
push
fildll
pop
pop
aaa
pusha
dec
or
shll
lcall
adc
dec
or
dec
add
hlt
lock
jns
fldenv
push
inc
xor
cmp
mov
jnp
test
dec
jmp
cmp
scas
pusha
and
call
cmp
into
aad
xor
movsb
enter
and
or
mov
adc
jp
outsl
aam
pop
sub
test
mov
inc
out
cmp
mov
insl
pop
adc
rcrb
js
icebp
or
adc
pusha
mov
and
bound
or
adcb
out
and
or
outsb
pop
xchg
aam
in
aam
inc
sbb
push
adc
mov
or
ret
adc
clc
mov
scas
pop
test
shlb
cmp
pop
pop
enter
push
inc
jne
cmp
scas
add
pop
xor
mov
in
or
lds
or
pop
testb
and
das
xor
jae
lea
pusha
mov
sbb
push
cmp
pop
mov
hlt
gs
inc
adc
sub
mov
adc
cmp
or
xor
xor
scas
fs
stos
adc
cmp
or
or
mov
adc
and
push
add
lods
cmp
cmp
push
dec
push
sbb
int3
or
adc
push
jb,pt
mov
push
fbstp
mov
dec
adc
jp
in
pop
xchg
pop
xor
das
pextrw
dec
es
jae
fs
jo
xor
adcb
das
pushf
jae
add
cmpsb
rorb
aaa
inc
jbe
rcr
icebp
pop
sub
test
and
mov
sub
sub
jg
mov
inc
or
jl
aam
orb
and
add
inc
dec
dec
push
xor
int3
jns
or
inc
repnz
mov
les
inc
or
or
sbb
mov
and
adc
or
mov
xor
inc
or
ficoms
les
nop
movsb
loopne
pop
cmovb
xor
inc
adc
adc
or
dec
add
movsl
inc
add
adc
daa
sub
adc
and
test
cmp
pusha
push
or
cmp
adc
sbb
ficoml
pushaw
adc
or
add
cmp
cmp
pop
push
xchg
cmp
clc
push
jo
push
fnstsw
cmp
data16
xchg
or
dec
faddl
or
loop
sbb
loopne
pop
adc
adc
subb
lret
sub
lahf
jl
dec
sub
cmp
dec
push
cmp
or
push
sub
pushf
inc
push
and
pop
dec
push
xor
and
cmp
sub
in
mov
pushf
enter
dec
inc
jo
rclb
push
dec
popa
outsb
dec
fs
andl
xor
inc
cs
and
push
sub
pop
mov
cmpsb
aam
lret
dec
sub
cs
add
inc
dec
adc
out
push
jo
mov
mov
adc
gs
xor
and
das
sub
jle
push
jl,pn
ds
ret
cmp
inc
xchg
enter
xor
push
xchg
jl
movsb
and
lret
les
shr
dec
pusha
in
add
sbb
nop
push
clc
fs
and
enter
sub
adc
popa
fs
adc
les
int3
gs
bound
or
adc
and
jae
push
inc
andb
cmp
sbb
push
cmp
scas
lock
fsubr
add
stos
fmuls
push
sub
jmp
hlt
shll
mov
mov
adc
mov
ret
imul
adc
jg
lea
pop
sbb
add
dec
add
xor
ds
test
xor
mov
cli
cmpsl
rcrl
dec
xor
je
xchg
push
mov
fs
or
mov
pop
rclb
lods
sub
adc
lea
mov
fmul
jns
adc
int3
or
sbb
dec
mov
xor
dec
push
push
std
cld
push
mov
stc
sar
jecxz
repz
cmc
repz
sti
repz
jle
jle
data16
mov
or
mov
adc
and
dec
fcoms
movsb
xor
jo
shlb
and
dec
or
pop
sub
jp
add
lcall
pop
lret
inc
add
out
pop
adc
push
add
xchg
aad
add
xchg
pusha
test
addr16
or
adc
adc
or
adc
inc
jb
inc
jb
jne
jo
jo
xor
inc
sahf
push
pop
mov
adc
cmc
mov
and
push
in
sub
stos
leave
out
shrb
andl
mul
adc
std
push
jmp
jge
jae
mov
sti
dec
repz
mov
stc
lgs
sub
or
add
dec
push
or
fwait
adc
test
push
stos
arpl
outsb
imul
xor
cwtl
push
pop
inc
xchg
cmc
sub
push
pop
jl
inc
xor
mov
sub
ds
addr16
mov
shlb
dec
mov
popa
sbb
sbb
push
mov
std
inc
adc
dec
data16
ss
icebp
je
mov
out
sub
cmp
jge
repnz
test
pop
or
cli
inc
and
lret
adc
or
nop
adc
dec
pushl
pop
stos
xchg
cs
xor
sub
push
mov
sub
pop
outsl
add
cmp
jb
mov
mov
adc
dec
int3
adc
or
rcrb
xchg
test
leave
mov
in
data16
cmp
mov
xor
std
mov
daa
adc
inc
adc
sti
cltd
or
call
push
lret
and
aaa
repz
push
out
jo
or
xor
push
inc
xor
and
add
in
daa
cmp
lds
and
or
push
data16
mov
movsb
inc
stos
push
mov
dec
pop
inc
xchg
testb
cmpsb
inc
ret
js
cld
mov
std
xlat
in
pop
sbb
fisubrs
in
push
rclb
pop
or
cmp
mov
lock
test
xor
out
cld
push
or
lcall
cmpl
jne
fbld
adc
inc
and
lret
pop
scas
call
std
stc
shll
loopne
mov
jnp
push
sbb
shll
test
hlt
and
jne
push
sbb
jmp
std
nop
adc
fiaddl
cmp
cs
ret
jmp
out
adc
pop
add
mov
movsb
lahf
push
ljmp
aaa
dec
dec
pop
push
xor
sbb
or
mov
xor
into
loope
daa
inc
add
test
adc
cmp
push
pop
aaa
mov
cltd
inc
push
push
fisttpl
jmp
movsl
arpl
lret
xchg
fnsave
sbb
sub
push
push
fs
mov
mov
and
push
inc
push
and
repnz
xor
mov
rdmsr
cmp
pop
pop
mov
cld
mov
xchg
mov
adc
pop
bound
loop
inc
sbb
add
or
and
jbe
inc
and
je
insl
cmp
adc
mull
inc
js
addb
pop
sub
jbe
pop
push
sbb
mov
add
popa
call
jnp
dec
push
movsl
gs
or
sub
jmp
pop
or
xor
mov
jae
cmp
je
inc
das
adc
cmp
mov
jnp
push
or
leave
push
mov
push
cs
inc
or
add
jae
repnz
cmp
stos
je
cld
into
push
push
sbb
cmp
jp
int3
or
enter
jge
sub
rclb
add
lea
mov
inc
in
pusha
ffreep
dec
hlt
addb
inc
add
je
xlat
mov
nop
call
je
dec
push
inc
and
inc
lret
movsb
test
and
add
push
push
sbbb
sbb
cmpb
mov
cmp
pop
bound
xor
ret
repnz
xchg
dec
sbb
adc
jp
nop
and
or
repz
roll
mov
or
inc
aas
jle
mov
test
cmpxchg
jl
stc
add
adc
or
mov
lret
mov
adc
add
adc
jge
cs
add
adc
jne
jne
int3
jl
mov
stos
push
ljmp
and
and
and
ja
and
xor
call
jge
sub
clc
push
jns
mov
sbb
pop
cmp
cmpl
imul
shll
lea
ja
icebp
dec
sub
or
stos
sub
clc
inc
ret
adc
jae
xchg
mov
sub
jle
push
ret
or
clc
sbb
add
add
mov
call
jmp
mov
dec
lahf
subb
jg
pop
dec
in
cld
jae
push
dec
inc
jne
loopne
or
xor
je
out
out
push
out
cmp
mov
sbb
dec
xor
lods
inc
add
pop
out
loope
out
adc
pop
lods
cs
mov
inc
pop
movsl
std
adc
jmp
lret
nop
bound
jnp
dec
jge
push
imul
lcall
int
sub
mov
xchg
stos
jmp
das
mov
inc
push
pop
cmp
fidivl
jbe
adc
test
je
and
mov
bnd
movups
sti
mov
dec
sub
mov
ja
fsubrs
test
imul
mov
add
call
hlt
pop
call
push
push
outsb
pushf
hlt
and
mov
and
data16
and
loop
lock
cmp
cld
dec
mov
pop
mov
inc
dec
dec
adc
xchg
addl
add
bound
outsl
dec
pop
in
adc
push
jbe
gs
jp
xchg
test
clc
movsb
jne
sub
or
sbb
and
cmp
es
adc
or
iret
outsb
imul
sbb
xchg
xchg
push
fisttpll
or
sbb
enter
ret
mov
adc
adc
xor
add
rcrb
incb
cmc
add
mov
je
push
jmp
inc
sbb
jp
sbb
adc
nop
push
lahf
popa
cmpsb
cmp
pop
mov
pop
mov
in
push
push
sbb
pop
mov
fidivrs
ss
dec
xchg
xchg
test
hlt
add
dec
pushl
adc
nop
fildl
test
jne
insb
lahf
inc
jae
pop
pusha
jnp
jg
mulps
and
adc
rorb
call
es
pop
jo
std
test
js
data16
push
xor
dec
mov
sub
sarb
pop
iret
pushf
int
mov
pop
push
lret
dec
mov
jp
call
xchg
dec
push
sub
jp
and
sub
es
das
or
adc
push
dec
push
insb
mov
enter
sbb
adc
sub
popf
inc
inc
sbb
mov
push
fbstp
and
ss
lds
dec
ret
xor
jecxz
dec
js
test
sbb
push
nop
faddl
inc
inc
shlb
cmpb
mov
adc
or
mov
mov
add
icebp
dec
add
dec
fldl
pop
jne
lods
into
jo
test
movl
add
scas
xor
push
mov
sub
lahf
outsl
dec
jo
add
mov
add
scas
fcoml
movsb
adc
daa
adc
sub
lock
fsubr
repz
cmpsb
xchg
cwtl
ds
test
mov
pop
arpl
incb
inc
dec
push
xchg
inc
or
mov
mov
pop
xor
pop
sub
add
or
xchg
lods
rcr
decl
loope
cmp
adc
fdivrs
push
cmp
jne
inc
mov
xor
dec
aas
fbld
sbb
inc
push
pop
push
inc
pop
call
or
rcll
inc
inc
inc
dec
jecxz
adc
push
jge
inc
add
ja
xchg
pop
nop
das
insb
sub
js
out
hlt
mov
inc
cmp
daa
shrl
iret
push
ret
fwait
insb
adc
test
and
pop
mov
int3
xor
cld
xchg
pushf
jge
movsb
sub
inc
push
clc
aam
mulb
jne
or
cld
jp
push
jl
inc
dec
push
sbb
daa
in
xchg
mov
call
and
xchg
or
pop
and
adc
xor
test
nop
push
in
add
inc
inc
add
call
cmp
push
and
mov
repnz
outsb
xchg
push
lods
dec
and
inc
dec
cltd
adc
xor
add
pop
sbb
dec
push
jle
int3
inc
xor
bound
jg
out
xchg
sbb
xchg
cld
xchg
pop
xchg
lock
pcmpgtw
std
enter
fwait
mov
xor
lret
or
ja
test
fs
lret
jl
jne
xor
sti
rclb
mov
lods
mov
mov
dec
scas
jo
add
add
add
leave
sti
dec
bound
mov
fwait
outsl
xchg
loopne
and
cld
insl
outsb
idivb
roll
sub
mov
sub
testl
and
adc
and
test
sub
add
sbb
stc
pop
fs
sbb
or
add
hlt
mov
xchg
test
sub
call
clc
hlt
sbb
ret
addr16
bound
dec
cld
xor
test
test
out
or
mov
shll
gs
sbb
and
sbb
jge
incb
inc
bound
jl
cmc
push
jge
dec
hlt
push
mov
out
xchg
mov
shl
push
fldl
loop
jo
das
incb
xor
push
xchg
dec
filds
or
or
adc
enter
aad
inc
jne
mov
inc
push
addr16
es
clc
mov
or
sub
cmp
rcll
cmp
pop
lock
mov
call
fucomi
or
and
xchg
push
add
data16
pop
fs
sbb
xor
sahf
push
jge
cltd
adc
mov
add
lret
sub
pop
pop
mov
sbb
sub
bound
dec
lret
dec
int3
mov
sub
mov
neg
jp
movsl
sub
push
rorl
and
or
mov
cmp
add
int3
sbb
fs
nop
cmp
sub
mov
adc
mov
enter
sub
add
leave
ljmp
insb
inc
jno
dec
xchg
mov
jae
lods
mov
push
dec
aas
dec
aas
imull
push
and
xchg
lds
arpl
std
sbb
js
sahf
adc
mov
mov
adc
jmp
mov
nop
or
imul
cmpsl
xchg
test
movsl
lock
dec
xchg
popl
sub
cltd
mul
cmp
dec
mov
add
mov
ret
mov
adc
lret
sbb
inc
fisubrs
cmp
sbb
popa
and
daa
dec
sub
fadd
pop
jmp
aam
add
aam
xchg
xchg
sti
sbb
aam
xchg
or
pop
scas
dec
test
mov
jl
and
and
push
cmc
pop
in
ret
pop
aas
shl
movsl
xor
rorl
mov
dec
dec
pushf
test
add
push
test
inc
or
jbe
dec
js
in
and
jae
lea
call
sbb
jl
sbb
pop
push
daa
fldenv
enter
push
and
jb
test
call
sahf
mov
sub
xchg
push
xor
push
push
in
and
pop
sub
cmpsb
cmc
push
pop
mov
dec
pop
jns
xchg
inc
stos
ret
jne
pop
subl
in
mov
sbb
push
lret
popa
std
stos
push
and
stos
adc
inc
add
sub
mov
add
sub
lods
mov
xadd
cmpb
insb
jne
or
xchg
lock
imul
adc
lcall
or
or
mov
daa
loope
dec
inc
orb
and
clc
das
add
fldenv
sub
jmp
sbbl
adc
cmp
fsubs
xchg
scas
inc
mov
dec
xor
xor
bound
mov
xor
fistpl
test
pop
js
mov
mov
icebp
add
dec
add
adc
mov
push
mov
or
in
or
cmp
mov
leave
dec
cwtl
push
cmpsb
xchg
inc
imul
testb
sbb
or
adc
call
xchg
sbb
sub
adc
je
in
add
push
orb
lea
jo
mov
pop
cli
cli
push
je
decl
mov
popa
enter
ret
or
push
xchg
jp
jl
pop
out
cmpsb
addl
or
cmpsl
push
in
lock
lods
inc
sub
dec
xor
sbb
inc
lock
sbb
dec
adc
in
lock
and
push
sbb
rcrb
xchg
sub
inc
or
hlt
push
daa
stos
leave
sbb
imul
scas
int3
mov
inc
es
movsl
enter
mov
mov
mov
sbb
loopne
es
pop
add
sti
xchg
in
mov
aam
in
mov
mov
shlb
gs
sbb
push
push
ds
pushw
sub
filds
push
sub
xor
add
sbb
lea
xor
push
inc
add
out
pushf
or
test
inc
sub
xorb
inc
sbb
mov
and
lock
or
sub
fstpt
adc
or
jmp
push
sub
sti
mov
repnz
mov
push
push
test
pop
push
dec
inc
addr16
stc
shll
add
in
and
movsb
test
dec
aaa
decl
dec
repz
nop
sti
icebp
adc
mov
mov
sbb
mov
or
arpl
dec
repz
push
or
jmp
mov
repz
push
jp
popa
xor
adc
jge
lea
jmp
sar
xor
or
jg
and
sub
and
jle
xor
push
rol
mov
js
add
scas
icebp
xorl
push
cmc
repnz
aad
and
sbb
outsb
lods
sub
stos
testl
test
repnz
imul
adc
mov
pushf
dec
adc
pop
jne
les
fs
lcall
push
mov
out
mov
jl
loope
xor
out
xor
push
stos
hlt
lds
or
lock
xchg
jle
mov
aas
lods
xchg
lcall
lret
fs
push
dec
xchg
movsb
xchg
hlt
js
jb
xchg
adc
inc
inc
lea
push
mov
lahf
add
pop
call
popf
int3
bound
xor
dec
mov
daa
cmp
dec
pop
movsl
jg
cmp
int
out
pop
lods
push
mov
popa
sahf
mov
nop
adc
push
lahf
inc
test
inc
jnp
test
out
lock
jne
das
lahf
add
adc
call
cs
jl
dec
adc
or
jg
in
and
into
and
call
pop
push
lock
mov
or
jp
jp
push
inc
dec
dec
xor
sbb
jle
mov
xchg
les
out
hlt
movsb
test
inc
mov
sbb
call
mov
lcall
mov
mov
bound
int3
add
mov
lods
sub
pop
sub
add
add
jae
ss
das
dec
les
jns
insl
pusha
sar
js
and
cmp
std
decb
cmp
mov
aaa
lods
cmp
pop
xchg
and
sub
fsubs
sbb
push
mov
pop
out
xor
mov
and
out
lock
push
ret
cmp
xor
dec
adc
aad
adcl
jb
sbb
push
out
inc
fs
leave
sub
mov
cmpl
or
add
jmp
jl
jo
xchg
sbb
jle
mov
mov
jns
imul
shl
dec
or
push
xlat
out
pop
mov
data16
data16
lds
xor
add
sbb
mov
sub
dec
pop
inc
jp
in
sbb
dec
in
das
out
mov
jbe
adc
mov
xchg
insl
adcb
jle
pusha
dec
jg
rorb
orl
ss
xor
xor
repnz
pop
mov
xor
cmp
or
dec
adc
mull
hlt
ret
adc
cmpsb
or
sbb
movsb
bnd
lods
sub
lcall
lret
fwait
out
adc
jne
mov
mov
fldenv
xchg
jo
mov
and
mov
shl
inc
add
adc
push
pop
test
adc
ret
or
adc
mov
ljmp
andb
ja
cs
in
jle
test
cli
loop
xor
negl
xchg
lahf
fsubp
jae
loop
inc
pop
adc
cli
rcrb
icebp
or
ret
das
test
rcrl
sbb
fsts
adc
mov
cmpsb
mov
add
jmp
bound
mov
mov
ret
inc
pop
or
ljmp
fsub
loopne
in
call
xchg
test
mov
ja
repz
inc
aaa
inc
pop
mov
jmp
push
mov
cmc
adc
lret
cmc
dec
ret
scas
adc
fisubrs
mov
shl
lea
test
fmuls
xor
aas
aam
mov
adc
cmpsl
call
pop
adc
mov
sub
les
and
xor
cmpsb
jmp
scas
xor
xchg
and
jge
test
pop
mov
fsub
rcrb
icebp
pop
adc
les
es
mov
pop
mov
pop
jp
xchg
addr16
cmp
and
mov
fucomi
mov
mov
loope
stos
in
in
mov
sub
scas
jne
pop
jl
nop
sub
test
in
fucomi
lahf
gs
push
mov
fisttpll
insb
lock
inc
sbb
into
jae
sub
pop
idivb
cmp
jge
aam
andl
call
add
cli
outsb
mov
add
add
je
loope
leave
lea
jmp
sahf
mov
or
popl
add
sbb
movsb
out
stc
insb
adc
cwtl
cmpsb
divb
mov
in
cmp
ret
test
add
lods
aam
mov
shrb
push
pop
mov
push
repnz
lret
test
call
add
idivl
data16
mov
xchg
jle
into
xchg
arpl
mov
scas
xchg
jno
ret
fdivrl
adc
jle
sub
or
je
push
sub
pcmpeqw
rolb
fcoml
rolb
call
sbb
xchg
repz
mov
movsb
sub
pusha
push
int3
imul
jmp
ljmp
cmp
les
cs
incb
jnp
aad
sahf
or
mov
xlat
mov
es
push
and
mov
out
dec
rcrb
sub
xor
xor
lea
dec
mov
push
call
inc
sbb
out
test
push
add
popf
out
dec
and
fisubs
into
iret
and
loopne
test
stc
repnz
imul
out
pop
mov
or
or
push
jb
pop
jo
imul
pop
xlat
aas
sbb
js
lock
adc
mov
jl
bound
push
adc
adc
xlat
mov
adc
xor
lock
int3
int3
adc
or
cmp
in
or
hlt
lret
jge
jbe
xchg
fidivs
add
jne
movsb
xchg
push
mov
sub
or
inc
pop
mov
sub
sbb
sbb
sub
repnz
push
out
jp
dec
nop
sahf
and
out
pop
lock
mov
addr16
pop
nop
adc
push
test
push
mov
pop
hlt
inc
dec
js
in
or
inc
mov
les
xchg
insb
mov
mov
or
cmp
dec
sahf
pop
and
cmpsl
mov
inc
dec
loop
dec
add
mov
jmp
xchg
pop
bound
add
sub
jae
mov
shll
out
popf
xchg
add
push
das
loope
lods
pop
adcl
xor
scas
jl
mov
dec
mov
sub
rcrb
clc
movsl
mov
lods
pop
roll
xchg
and
push
sub
jb
out
cmp
jl
cmp
je
or
jle,pn
push
pop
mov
test
inc
and
lock
dec
jbe
dec
cmp
jbe
inc
sbb
sti
call
xor
add
out
push
call
out
xor
mov
test
fsub
add
out
pop
pop
jmp
pop
sub
xor
jno
je
dec
das
mov
enter
fsts
push
test
and
inc
xlat
sub
test
xlat
data16
lret
jno
fwait
pop
adc
out
subl
push
jg
mov
dec
nop
or
and
ss
or
leave
test
cld
push
mov
add
xchg
pop
daa
call
popf
xchg
cmc
adc
mov
cwtl
jmp
cmp
adc
mov
les
in
test
dec
adc
push
aad
js
cwtl
jg
sbbb
sbb
adc
add
push
adc
lds
lock
imull
push
nop
inc
ret
adc
fsubs
xchg
or
mov
repz
or
xchg
ret
adc
lret
movb
mov
cs
addl
or
bound
jo
sub
insl
in
jnp
clc
jge
les
arpl
sbb
xchg
fnsave
lret
or
decb
or
add
out
int
outsb
in
in
les
mov
dec
daa
daa
adc
mov
fidivrs
and
stc
data16
stos
adc
rorl
les
rcl
dec
sbb
jnp
addb
sbb
scas
int3
cmpl
and
popa
test
fimuls
push
sbb
adc
sbb
out
shl
push
lret
or
push
mov
das
inc
test
inc
jmp
mov
xor
int3
das
mov
imul
testb
xchg
scas
hlt
movsb
ja
shr
push
and
les
jb
jge
jl
xchg
mov
test
adcb
mov
in
inc
cmp
scas
cmp
mov
pop
jmp
and
stc
cmovge
fadds
les
and
sub
inc
mov
cmp
jne
adc
iret
ret
rcr
pop
push
sahf
aam
xchg
iret
mov
out
mov
mov
or
cmp
stos
hlt
lock
fwait
mov
inc
in
xor
repz
xchg
mov
or
and
mulb
mov
push
adc
xchg
inc
jmp
and
pop
lock
jb
popf
push
sbb
jne
sarb
dec
adc
adc
pop
mov
jmp
inc
jl
lods
push
js
sub
cmp
jbe
xor
mov
and
mov
cvtps2pi
lahf
imul
sub
or
adc
add
test
sahf
push
es
fcmovnb
push
mov
outsl
push
inc
mov
push
insl
loope
cld
shlb
call
inc
rorl
out
or
mov
jo
dec
testb
sub
sub
pop
movsb
fsts
mov
fldenv
scas
mov
lret
xor
push
lret
call
in
jmp
inc
addl
dec
xor
movswl
mov
jl
mov
or
xchg
repnz
call
jne
into
xor
loopne
shrb
dec
jl
mov
xchg
mov
movsl
or
iret
xchg
les
movsl
shlb
nop
xchg
aam
lds
xchg
out
xor
int
outsl
mov
cmpsb
xchg
rep
push
fs
sbb
les
cli
mov
mov
or
js
adc
or
push
cmp
cs
jo
push
sub
or
add
cmp
popf
xlat
cmpb
rep
hlt
shll
or
jne
pop
popf
jbe
in
loop
test
dec
cmc
test
lea
and
or
push
jnp
xchg
pop
adc
jmp
mov
or
rol
ret
out
dec
jle
jb
stc
out
mov
dec
sbb
mov
sbb
inc
out
push
ret
adc
xchg
inc
pusha
cmp
mov
hlt
loop
pop
pop
clc
sbb
mov
cmp
sbb
in
adc
fisubrs
scas
sarl
daa
leave
js
pop
gs
add
add
sub
cmp
sub
jae
shrl
inc
or
lock
xchg
or
sbb
in
mov
rorb
push
enter
xchg
mov
cmpsl
jns
bound
shl
inc
hlt
xor
ss
clc
xor
lret
sarb
into
adcb
rolb
cmpsl
dec
iret
daa
adc
jae
or
xchg
stos
fsubs
xlat
and
xchg
out
es
test
mov
les
add
inc
cltd
pop
popa
pop
jne
scas
mov
pop
scas
xor
push
inc
incb
inc
and
xor
hlt
outsl
push
negb
xchg
popf
roll
sub
dec
jae
mov
std
data16
cltd
add
or
inc
mov
je
ret
mov
add
inc
sbb
or
pop
sahf
gs
jmp
sbb
and
sbb
iret
ret
call
testl
js
lock
test
pop
mov
call
ret
loop
push
repz
loope
cmp
jno
out
fucom
mov
dec
aad
xor
sbbl
add
jmp
lods
adc
movsb
xchg
call
push
jmp
sub
pushf
mov
movsb
adc
sbb
dec
jo
push
xor
je
jg
lret
pop
in
jl
jno
loop
hlt
xlat
repnz
mov
mov
or
sbbl
fisubl
scas
dec
sub
call
lods
fbld
or
call
mov
and
loope
xor
sbb
addr16
pushf
pop
cmp
rorl
pop
and
mov
adc
xchg
int3
les
lea
dec
in
stos
sbb
sub
adc
je
and
pop
int3
jp
idivb
nop
add
enter
push
and
loop
and
sub
mov
pop
imul
enter
pushf
xchg
dec
adc
mov
shl
add
fcoms
fistpl
mov
arpl
sahf
mov
popa
std
adc
aas
cmp
adc
popf
inc
insl
inc
in
lock
sub
pop
lea
xor
pop
xor
sub
fmul
daa
inc
adc
jmp
fmull
sbb
in
imulb
cld
ss
dec
jge
push
push
testb
fsubs
cmp
mov
pop
std
mov
cmp
data16
jo
popf
sti
fiaddl
dec
xor
push
mov
stos
adc
call
push
shrl
push
push
call
jmp
jmp
sbb
lahf
mov
dec
enter
and
in
bound
pusha
sbb
push
mov
jb
push
adc
push
lods
adc
adc
imul
and
outsb
sub
in
mov
pop
call
shlb
xchg
cli
mov
or
sbb
xchg
ja
sub
fistpl
jmp
jmp
adc
xor
add
inc
aad
inc
mov
or
jmp
and
adc
jmp
out
daa
das
outsl
sub
cmc
test
fdivrp
and
dec
pusha
inc
add
mov
sar
sub
inc
xor
dec
jl
loop
rcrb
dec
add
lahf
inc
outsl
xlat
mov
and
clc
xor
mov
dec
adc
and
xchg
mov
test
adc
or
test
add
cmp
mov
or
stos
add
xchg
gs
dec
or
push
hlt
jmp
mov
pushf
nop
sub
jbe
sub
xchg
and
in
inc
sub
aas
in
push
xor
adc
xor
pop
scas
pushl
test
push
int
jge
movsb
dec
test
add
dec
out
mov
jg
fs
rcr
mov
pop
inc
imul
pop
push
sbb
jb
call
loope
nop
jle
and
push
jg
adc
and
add
mov
sbb
insb
adc
mov
adc
jl
cmp
loope
dec
inc
and
lock
idiv
adc
xor
popf
inc
and
fmuls
cmc
push
shr
dec
mov
inc
push
nop
cmpsl
mov
rorl
xchg
adc
jnp
push
fmuls
or
pop
jmp
popf
jbe
cmp
ljmp
sbb
add
arpl
or
or
gs
jae
addl
les
adc
mov
push
mov
stos
and
cmp
jno
fsts
cld
das
enter
lret
and
and
and
adc
pop
out
in
mov
stc
js
stos
jge
das
xor
inc
mov
sbb
sub
jle
inc
and
adc
jmp
cli
leave
and
lret
ficoms
mov
movsb
xor
and
repz
mov
adc
iret
repz
movsb
fsubr
mov
nop
scas
insb
pusha
cmp
jne
leave
pop
lock
mov
xor
inc
cltd
xchg
dec
lods
test
adc
pop
movsb
sbb
rclb
in
cmp
scas
addl
jb
xor
sbb
xor
sub
jg
lds
add
mov
cld
mov
in
and
lahf
adc
push
int
mov
pusha
outsb
push
shr
jp
data16
and
jbe
lret
mov
fmull
mov
or
push
sub
or
test
jp
sub
and
nop
add
ss
mov
inc
xlat
or
je
add
fsin
adc
sub
pop
mov
hlt
test
sub
or
test
jns
dec
data16
xchg
stos
aam
pop
ret
adc
daa
pop
xchg
call
cli
pop
pop
jbe
outsl
je
stos
std
xchg
ljmp
div
in
mov
mov
in
or
push
addb
ljmp
jne
dec
cmp
lods
cmp
clc
call
dec
outsl
lret
stos
test
xchg
xchg
inc
sub
shll
adc
mov
icebp
fcomi
out
pop
sbb
push
sbb
jg
adc
mov
adc
dec
lret
mov
pop
cmp
lds
push
fldt
shll
or
iret
pop
xchg
call
cmp
xlat
cmpsl
data16
in
inc
in
cwtl
adc
add
dec
lock
iret
daa
add
adcb
mov
cmpb
or
cltd
cmpb
pop
jp
sbb
test
dec
mov
inc
jbe
pop
add
inc
shr
es
cmp
jmp
pusha
out
shr
into
and
repz
mov
dec
out
adc
xor
jmp
das
mov
push
push
push
sti
repnz
pop
inc
or
out
shrb
test
les
mov
xor
xlat
test
push
mov
int3
xor
jmp
pushf
sub
shlb
jo
mov
out
pusha
iret
push
jae
std
cmp
add
js
sbb
mov
jne
packsswb
test
imul
clc
xchg
lods
sub
leave
mov
mov
aas
dec
xchg
lds
ja
test
push
mov
xchg
js
sahf
add
inc
repz
nop
push
mov
and
mov
lret
adc
push
mov
hlt
jbe
inc
inc
adc
ret
dec
sub
inc
sbb
and
and
mov
movsb
and
jl
mov
repz
lcall
inc
inc
sbb
in
cmp
lds
test
daa
jns
je
imul
scas
or
inc
or
or
xchg
and
lret
adc
dec
gs
popa
je
add
and
push
and
in
add
lahf
push
out
cld
jmp
jnp
scas
xchg
and
jmp
aaa
pop
stc
leave
call
movsb
lds
and
adc
out
and
sub
js
fwait
cmp
neg
movb
push
lock
mov
push
out
fs
xor
outsb
cmpsl
adc
inc
loopne
jb
sahf
push
dec
jmp
nop
sub
faddl
add
fdivl
adc
aas
inc
sbb
inc
mov
inc
in
sub
or
xchg
insb
xor
stos
xchg
lds
sub
mov
xchg
add
ss
clc
dec
mov
in
filds
mov
ja
and
divb
dec
mov
add
orl
jmp
lret
sbb
mov
push
or
test
jmp
cmc
nop
cmp
mov
pop
or
iret
adc
xchg
or
xchg
test
sub
cmp
testl
lods
or
andl
jnp
pop
jae
jle
les
mov
int3
imul
lret
pop
mov
pop
loop
les
sub
push
sub
mov
cld
in
push
push
mov
or
xor
jno
call
notl
push
addb
ja
wbinvd
stos
ret
jmp
jns
ret
adc
bound
cmpsl
push
stc
push
xchg
or
int3
inc
jbe
popa
jl
xchg
and
and
jbe
pop
jnp
mov
addr16
sbb
loope
outsl
jns
jg
lret
imul
jnp
stos
ja
and
cld
sub
mov
push
xchg
sahf
and
stos
and
pop
inc
push
int3
xor
sub
push
insl
bound
adc
jo
push
cld
nop
test
jmp
cld
cmp
fsubrp
xchg
out
pop
shrb
movsl
pop
push
xchg
push
lods
loop
or
jmp
jge
inc
fdivr
inc
leave
fistpll
push
lock
cmp
mov
push
je
inc
hlt
push
pop
mov
xchg
push
ja
and
jo
mov
adc
mov
clc
dec
test
mov
test
xor
sub
push
and
xchg
dec
pop
aas
hlt
cld
sti
sub
ret
adc
loop
fimuls
mov
iret
xor
enter
leave
push
cmp
arpl
jnp
fcoml
cwtl
jle
call
pop
fisubrs
nop
lahf
push
or
and
mov
or
testb
pop
jl
mov
sub
je
adc
ret
hlt
and
dec
ret
xor
xor
mov
imul
xchg
mov
insl
das
pop
adc
push
int
mov
cltd
sbb
gs
aaa
int
adc
cld
xor
setp
inc
mov
dec
mov
xlat
push
mov
std
sbbb
imul
test
mov
push
hlt
or
dec
in
int3
adc
or
int3
sbb
mov
out
inc
push
popa
mov
adc
adcb
and
dec
scas
xchg
mov
jmp
sbb
in
pop
icebp
out
scas
sbb
inc
pop
shrl
fldl
add
dec
or
test
and
adc
and
xchg
and
jmp
sbb
jno
imul
sbb
push
aas
sub
inc
jge
push
gs
add
push
push
or
and
adc
mov
cmp
xchg
sub
xor
std
or
jle
or
in
int3
adc
movb
inc
orl
adc
sbbl
lods
jle
enter
hlt
movsb
push
inc
call
sub
sti
xor
icebp
and
cli
sahf
clc
mov
xlat
sub
pop
push
mov
insl
push
fdiv
aaa
xchg
jno
cmp
and
sahf
enter
mov
sub
ljmp
mov
into
push
popf
cmpb
int3
jle
jae
rcr
sub
outsb
or
pop
sti
push
xchg
inc
lods
imul
pop
cli
xor
push
pop
sbb
cld
out
lds
lahf
fs
dec
mov
inc
mov
mov
test
mov
mov
rolb
push
jle
pop
lret
and
stc
add
call
prefetch
ds
dec
call
loop
jge
cmp
movsl
cmp
aam
mov
sbb
xlat
xchg
fs
cmova
test
push
xchg
out
push
or
nop
insb
sub
sub
mov
adc
jns
mov
pop
mov
cs
loop
pop
stos
fs
jmp
add
mov
mov
jne
push
jge
sub
sub
sub
fs
pop
jg
jne
xchg
jmp
lcall
or
pusha
mov
call
sbb
xchg
dec
mov
mov
adc
mov
das
call
jmp
xchg
lret
ss
loop
inc
lret
scas
jb
pop
sbb
xchg
push
xor
call
sbb
pop
out
and
cwtl
in
imul
in
adc
cmp
daa
jecxz
je
int3
and
adc
js
sarb
mov
out
sbb
mov
and
stc
cmp
pusha
icebp
lret
aaa
adc
ret
mov
inc
mov
mov
nop
mov
mov
adc
fcmovb
mov
ret
mov
or
push
mov
repnz
inc
pop
or
and
pushf
sub
add
sub
add
sbb
xor
mov
cmp
adc
pop
loope
daa
pop
lcall
or
popa
sub
fs
or
js
fcompl
lret
and
mov
sub
mov
xchg
or
xor
add
jmp
mov
ss
push
and
mov
clc
insb
mov
aaa
sbb
xchg
adc
stc
push
or
cmp
xor
sbbl
or
add
out
push
mov
aam
inc
insb
and
les
dec
sub
cwtl
xchg
les
pushf
vpmaddwd
int
xchg
xor
pop
jmp
cld
clc
cwtl
data16
or
push
adc
testl
ret
mulb
das
inc
push
hlt
call
push
cmp
jnp
sub
test
sub
andb
xor
js
xchg
loop
or
into
lods
test
xor
in
jb
inc
mov
jae
test
imul
lret
loopne
inc
or
adc
cmp
xchg
iret
xchg
adc
scas
bound
iret
fsts
aas
mov
jl
or
imul
test
adc
mov
adcb
ja
outsb
jg
arpl
mov
jge
movsb
sub
add
inc
mov
pop
and
aas
sub
fsub
call
call
sub
inc
imul
addr16
add
mov
stos
into
out
mov
scas
je
jno
incb
push
lret
pop
push
mov
ret
adc
push
lods
and
ja
enter
bound
pop
pop
pop
sub
cmpsb
cmc
lret
test
popf
loop
pushf
divl
shlb
les
mov
loopne
mov
mov
dec
pop
and
push
sahf
inc
xlat
int
ds
test
jle
add
cmp
hlt
push
xchg
jo
mov
push
mov
cmpsl
push
push
cmp
fists
pop
adcl
iret
or
cmpsl
stc
arpl
ret
leave
call
cmp
test
stc
xchg
push
decb
sub
mov
xchg
ds
lods
rcr
js
cwtl
jae
roll
dec
jle
cmc
and
call
insb
mov
pop
fists
sbb
cmp
sbb
mov
inc
dec
mov
aam
xor
cs
inc
jb
pop
mov
jbe
and
add
sub
push
pop
imul
shr
faddp
pop
movntq
adc
fwait
ret
lods
dec
jmp
adc
inc
stc
inc
pop
les
imul
dec
movsb
mov
mov
cmc
pop
inc
mov
in
inc
hlt
les
xor
cs
into
and
pop
jns
adc
scas
or
or
adc
or
daa
addb
push
out
add
pusha
or
adc
add
out
cld
mov
arpl
push
cmp
rcrb
add
cmp
enter
cmp
jne
cltd
push
cltd
xchg
jns
sbb
mov
loop
pop
adc
mov
gs
add
mov
dec
aad
and
out
xlat
adc
call
iret
scas
jne
push
fstp
xor
xlat
fld
add
cltd
sbb
adc
int
ficompl
ljmp
jge
push
xor
or
lds
inc
xchg
mov
ds
insb
ja
call
outsl
xlat
dec
in
loop
adc
cmp
or
jge
xlat
pop
pop
sti
fiaddl
aaa
inc
and
rcll
mov
inc
xchg
or
push
inc
and
or
and
add
cmp
and
adc
xchg
and
pushf
daa
je
lret
sub
rcr
rorb
lea
push
outsl
jo
jge
and
in
orb
sarb
inc
sub
push
xor
int3
stos
fnstenv
sbb
mov
sub
lds
les
mov
call
xchg
cwtl
sbb
cmp
ljmp
mov
mov
testb
in
jl
sbb
movsl
mov
in
outsl
xlat
xchg
bound
push
push
sub
lret
pop
and
lock
hlt
add
mov
cli
clc
cmp
imul
adc
sub
jl
inc
xor
mov
stos
mov
and
fistps
mov
push
inc
dec
mov
pop
stos
mov
sub
in
mov
or
mov
jmp
xor
pop
xor
std
mov
jnp
sub
mov
shl
cs
mov
adc
sbb
xchg
ret
push
bswap
pushf
mov
adc
test
in
je
lcall
sub
fsts
jg
es
or
push
aad
adc
hlt
mov
xlat
imul
fidivl
pop
nop
cmc
dec
dec
jle
jmp
push
iret
je
movsb
fs
daa
out
mov
cmp
inc
and
stc
arpl
and
jne
imul
aaa
adc
dec
sub
outsl
les
cmp
add
in
sbb
mov
adc
or
cmp
push
lret
int
scas
fprem
movsl
fdiv
lds
sbb
push
or
inc
inc
xchg
mov
cmp
or
and
out
mov
shrl
push
mov
outsb
in
push
cltd
xchg
jge
sbb
or
in
jnp
pop
dec
sbb
test
pop
popf
leave
or
jae
and
inc
jbe,pn
cwtl
das
int3
dec
andl
addl
mov
xchg
inc
or
sub
stos
mul
adc
adc
call
adc
mov
cli
jae
js
mov
jmp
cmp
mov
movsl
std
addr16
jl
jno
or
inc
inc
mov
hlt
dec
shlb
mov
hlt
mov
fldenv
int
mov
inc
mov
lea
lahf
and
pop
test
hlt
cmp
ds
rcrb
adc
ja
or
testl
and
test
xchg
sbbl
aas
test
mov
inc
push
inc
inc
xchg
dec
pop
inc
xchg
dec
ds
mov
fs
mov
and
cmp
lea
lahf
dec
xchg
cmp
mov
add
xchg
dec
sbb
sbb
add
jne
movl
movsb
mov
sub
mov
movsb
loope
xor
cli
negl
sub
xchg
lods
cld
jae
insl
dec
in
sub
lds
jecxz
sti
sub
mov
sbb
sbb
add
add
mov
xchg
pop
dec
lea
and
mov
sbb
cmc
daa
dec
cmp
sub
adc
lods
add
insb
cs
adc
sti
das
repz
or
out
adc
or
sub
mov
jno
and
popa
incb
idivb
test
cld
xor
pop
in
and
cmp
test
and
fsubs
movsb
mov
aam
subb
pop
sti
or
xchg
mov
popa
sarb
sti
adc
xor
idivb
sar
mov
xchg
ja
mov
mov
fidivrl
mov
cli
rclb
push
inc
fisubrl
push
es
shr
sbb
jmp
and
lcall
orl
xlat
pop
cmp
inc
cmpsb
mov
daa
xchg
mov
jno
mov
cmp
sti
adc
push
push
fidivl
in
cld
adc
stos
pop
in
and
mov
out
mov
movsb
lret
push
sbb
inc
mov
or
xchg
iret
pushf
enter
inc
adc
and
fdivrl
les
mov
lahf
arpl
and
dec
cwtl
outsl
mov
sbb
repnz
inc
mov
push
les
push
pop
pop
idivb
test
inc
push
adc
loope
adc
andb
mov
out
sub
inc
sub
and
adc
inc
and
sub
cmp
and
pop
inc
push
sbb
pop
je
and
lds
pop
and
pop
sub
mov
test
das
inc
insb
and
adc
mov
repz
add
insl
nop
push
cltd
cwtl
push
jle
jnp
loopne
push
or
dec
sub
inc
and
cmc
inc
adc
and
inc
pop
inc
sub
and
pop
ficomps
xchg
push
and
pop
sub
inc
inc
and
push
mov
sbb
or
xor
jecxz
test
push
dec
shl
xchg
dec
and
xor
dec
xchg
loope
mov
and
push
pop
sub
xchg
xchg
dec
mov
add
icebp
inc
pop
and
inc
mov
inc
xor
dec
cmp
mov
inc
or
push
xor
mov
movsl
push
cmp
sub
inc
push
inc
adc
xor
xor
ret
sub
inc
fsubs
push
xchg
sub
sub
sub
push
mov
inc
call
and
and
sbb
ss
and
rclb
sbb
adc
enter
push
push
sbb
inc
clc
and
test
or
inc
push
and
ret
adc
xor
dec
or
cmpsl
push
pop
loopne
test
adc
lahf
mov
lods
push
push
add
test
sub
push
and
cld
and
inc
push
notb
xchg
and
dec
enter
xchg
hlt
sbb
pop
out
fs
lods
dec
push
std
cmove
xor
inc
and
adc
test
aas
and
sbb
arpl
and
xlat
sub
cmp
pop
fs
mov
adc
dec
sub
inc
loopne
hlt
cmc
and
adc
xchg
adc
mov
mov
incb
fcoms
inc
aam
nop
pop
sub
ds
adc
mov
inc
mov
rolb
inc
fsubl
mov
nop
and
adc
sbb
test
mov
sbb
aad
loop
push
inc
enter
rclb
fmuls
and
hlt
adc
outsl
and
cmp
and
repz
and
inc
mov
jl
push
shrb
test
xchg
and
inc
xchg
mov
loop
sbb
and
les
test
sti
mov
aad
loop
push
inc
movsb
and
adc
movsb
les
mov
pushf
adc
or
test
xchg
push
adc
or
mov
cmp
inc
cwtl
and
push
and
nop
mov
adc
outsl
fs
aaa
icebp
fcomps
and
pop
js
mov
push
dec
js
mov
lret
repnz
xchg
test
movsl
mov
ljmp
subb
inc
cmp
adcb
mov
or
xchg
push
outsb
enter
jb
scas
outsl
shl
push
push
dec
je
mov
movsb
outsl
je
jo
inc
push
jo
in
icebp
adc
lret
xchg
insb
scas
daa
call
adc
dec
adc
test
adc
cmp
iret
sub
pusha
adc
sub
ror
lock
in
aaa
call
pop
push
pop
lcall
js
or
jno
dec
out
xchg
push
bound
push
loop
scas
adc
jns
stos
or
push
sub
push
les
xchg
test
push
mov
cmp
jno
outsl
shl
nop
push
dec
inc
push
mov
cmp
inc
mov
jno
and
sub
sbb
cmp
loopne
jnp
xchg
cmp
stc
lods
daa
call
xchg
push
gs
dec
js
les
sub
mov
and
xor
xchg
or
and
nop
mov
mov
dec
sub
mov
cmp
sub
push
sub
mov
inc
or
xchg
push
bound
sbb
mov
push
and
sbb
clc
or
inc
sbb
sbb
or
nop
sub
sbb
out
test
sub
and
and
adc
pop
sbb
adc
les
daa
call
mov
and
and
inc
or
je
pop
mov
and
adc
mov
dec
inc
add
jo
in
test
or
test
and
mov
das
cld
std
mov
push
hlt
enter
stos
adc
mov
test
clc
mov
add
test
push
std
mov
hlt
ret
ss
std
or
outsb
or
gs
inc
and
movsb
lock
adc
std
mov
js
dec
test
js
cmp
and
or
nop
popa
enter
in
and
test
inc
xor
xchg
popa
cli
fdivr
insl
mov
fdivr
sbb
mov
fsubrs
inc
xor
cmpsl
adc
aam
pinsrw
and
mov
rorb
pop
test
shlb
int3
dec
rorb
mov
enter
jno
inc
enter
or
cmp
push
mov
les
ds
cmp
and
rorb
cmpsb
jmp
mov
movsb
outsl
mov
js
inc
cmpsb
mov
test
sbb
xor
xchg
aaa
jmp
icebp
push
mov
les
or
js
lods
out
push
dec
js
les
test
mov
push
push
sbb
mov
cltd
test
inc
test
out
in
inc
mov
or
inc
xor
pushf
ret
ss
cwtl
les
and
call
xchg
out
insb
dec
js
les
nop
test
jmp
push
xor
mov
dec
out
in
mov
scas
xchg
or
js
test
xor
test
test
shlb
and
sbb
inc
fcompl
out
mov
inc
or
mov
adc
stos
mov
pop
sub
test
jo
pusha
test
dec
imul
mov
dec
cltd
nop
insb
mov
and
cmpsb
dec
shl
cmpsl
mov
shll
adc
test
adc
push
and
in
test
adc
enter
or
mov
adc
frstor
inc
nop
pop
loope
out
and
sub
sbb
push
adc
jbe
push
out
and
and
pop
test
add
sahf
dec
adc
test
and
enter
nop
and
mov
mov
mov
inc
adc
movsb
lahf
stos
mov
add
mov
xor
sbb
xchg
popf
out
xor
outsl
stc
das
or
inc
ja
or
js
xor
mov
adc
les
das
adc
sub
test
and
mov
mov
cmpsl
dec
addb
and
and
adc
adc
mov
jle
or
sbb
adc
mov
lock
cmpsb
mov
and
adc
inc
adc
test
xor
push
jge
or
or
mov
adc
mov
loop
mov
add
sub
push
add
lock
lahf
test
inc
sub
inc
add
test
cmp
les
pop
in
sub
les
and
adc
and
lret
xchg
clc
inc
jle
hlt
shlb
cmpsb
push
inc
mov
sub
jle
inc
lock
adc
jp
lock
in
sub
jp
push
daa
aad
xchg
cli
test
test
cmp
mov
inc
lock
nop
in
test
adc
into
adc
inc
mov
movsb
sahf
adc
fadd
shrb
fdivl
fmuls
and
inc
mov
adcl
xor
gs
xchg
or
rorb
sub
push
rorb
or
inc
dec
mov
mov
and
mov
mov
mov
xchg
mov
mov
icebp
sub
or
mov
inc
mov
sub
mov
xchg
pop
enter
outsl
mov
ret
js
test
adc
xor
loope
loope
test
fwait
adc
test
xchg
lahf
adc
js
pop
pushf
out
xchg
movsb
and
movsb
ss
in
and
pop
adc
fildll
lahf
cmp
and
loopne
jle
dec
cwtl
nop
mov
sub
xchg
fistps
fwait
test
push
leave
adc
test
and
push
pop
mov
orl
mov
jbe
into
sub
call
sub
test
cmp
xchg
inc
sub
adcb
xor
mov
jl
inc
js
dec
fs
lret
inc
fbld
in
pop
daa
push
outsl
je
movsl
popf
test
push
adc
lcall
sub
sub
lret
insb
sbb
push
pusha
pop
mov
cmp
orl
xchg
xor
adc
mov
jne
or
and
pushf
aas
inc
mov
icebp
pop
or
cmp
mov
mov
mov
and
test
test
and
cmp
daa
adc
dec
adc
inc
sbb
dec
enter
loope
cltd
jle
jl
mov
mov
mov
inc
and
adc
imul
clc
fstl
inc
test
loope
push
outsl
xchg
inc
rcrb
cwtl
test
cmp
sbb
test
dec
push
test
mov
in
inc
xor
arpl
hlt
js
test
or
mov
and
cmp
xchg
and
adc
sub
hlt
lcall
and
aas
sbb
and
and
stos
fmull
sbb
and
inc
pop
and
ret
jle
or
shlb
and
dec
mov
add
outsl
nop
adc
adc
sbb
xchg
push
and
xchg
and
adc
cmp
inc
add
int3
mov
fs
cmpsl
cltd
or
cmp
xchg
dec
adc
xor
mov
lret
or
jecxz
mov
sti
mov
outsl
fbld
inc
sti
mov
lock
inc
dec
insb
movsb
outsl
lock
inc
fisubl
in
adc
fs
jno
cwtl
or
cmp
xchg
test
icebp
mov
inc
nop
and
and
in
cmp
and
adc
test
and
loopne
pop
or
enter
and
in
mov
adc
in
insl
xchg
aam
jmp
daa
call
shlb
shlb
int3
or
dec
pop
push
outsl
int3
sbb
mov
js
and
enter
std
push
adc
and
and
les
mov
or
xchg
xor
mov
sbb
and
mov
sbb
inc
mov
fsubs
mov
xor
mov
or
mov
sahf
xchg
aas
inc
test
mov
and
test
push
inc
dec
rorb
and
movsb
mov
sbb
xchg
push
and
mov
mov
mov
pushf
cmp
inc
xlat
and
xchg
cwtl
rclb
test
xchg
mov
sbb
out
hlt
and
nop
loop
sbb
push
fiadds
and
inc
mov
mov
adc
and
or
xchg
or
popa
adc
xorb
or
cmp
add
jl
sub
js
mov
push
enter
test
and
or
pop
inc
je
jae
hlt
js
inc
xchg
mov
mov
and
test
inc
sub
push
xchg
push
icebp
and
and
xor
or
cmp
pusha
sbb
mov
xchg
inc
pop
xor
xchg
test
push
adc
loopne
adc
push
inc
les
leave
push
or
dec
enter
and
inc
es
cmp
das
pop
and
inc
insb
push
sbb
imul
and
adc
xchg
dec
sbb
xor
movsb
cmp
adc
inc
aam
inc
adc
and
xchg
pop
fistps
insl
mov
push
cmp
adc
mov
out
adc
inc
xor
mov
cltd
sbb
adc
and
add
fcoms
popa
push
and
mov
sub
lock
sub
loope
mov
movsb
sub
or
and
or
mov
sbb
and
jns
shll
sbb
push
and
aad
fisubs
push
fbld
test
bound
jl
xchg
adc
mov
data16
mov
in
aas
inc
sahf
mov
xchg
and
adc
mov
or
fwait
inc
shlb
add
adc
mov
sbb
jne
hlt
js
jmp
jo
mov
sbb
test
cli
dec
xor
adc
outsl
sub
push
clc
adc
outsl
clc
cli
bound
sbb
call
hlt
cli
mov
outsl
lock
or
xchg
test
clc
or
xchg
adc
mov
insl
fisttpll
sbb
cli
adc
and
loopne
adc
and
xchg
jno
or
test
and
push
fcomps
inc
mov
mov
in
aas
inc
mov
insb
xchg
test
shlb
jo
sbb
xchg
pushf
and
int3
mov
outsl
int3
jb
sbb
js
stc
es
enter
test
mov
inc
fwait
sbb
les
rolb
cmp
and
adc
and
mov
inc
mov
inc
cmp
or
mov
mov
and
nop
mov
mov
push
mov
lods
test
adc
and
sbb
lods
loope
iret
or
mov
push
test
mov
movsb
and
mov
mov
push
mov
push
test
pushf
les
or
xchg
mov
mov
repnz
adc
pop
adc
jle
or
mov
mov
test
pushf
or
cmp
sahf
popa
adc
mov
subb
nop
xor
jl
scas
pop
dec
shl
int
bound
mov
pop
stc
push
test
and
test
push
and
and
cmp
mov
push
outsl
adc
aas
outsl
shl
pop
push
inc
insb
enter
bound
dec
inc
dec
jae
outsl
push
and
mov
fs
mov
cli
cmp
out
xchg
push
pop
dec
pusha
nop
test
mov
cmc
adc
test
je
mov
mov
push
and
adc
nop
adc
mov
push
push
mov
adc
fs
dec
movsl
mov
dec
sub
xchg
and
mov
inc
cmp
or
out
nop
or
inc
js
cmp
stos
xchg
sub
or
cmpsl
loope
xchg
lret
add
xor
inc
mov
and
xor
mov
xor
js
test
sub
sub
sub
mov
inc
mov
sbb
daa
call
test
filds
and
push
sbb
fsubs
test
xchg
sbb
push
sbb
and
out
adc
aaa
and
adc
sbb
and
shl
push
sub
std
xchg
push
xor
mov
enter
cmp
cmpsb
pop
lret
add
js
outsl
hlt
js
dec
test
mov
pop
mov
popf
adc
adc
adc
xor
test
push
and
scas
mov
inc
adc
hlt
sub
lock
inc
stc
adc
xchg
cmp
movsb
sub
adc
inc
test
cli
adc
adc
pop
outsl
flds
and
nop
push
fbld
icebp
loopne
or
popf
pop
aad
and
fcoml
rorb
jl
adc
fcoml
fmuls
cmp
stos
mov
mov
sbb
inc
inc
or
xchg
and
cmp
sbb
cmp
les
mov
mov
lock
int3
xor
or
flds
and
les
adc
outsl
in
aaa
call
and
test
and
or
rcrl
xchg
inc
mov
mov
loope
or
and
and
push
mov
mov
test
dec
shl
mov
lret
lods
or
and
movsb
test
sub
loop
cltd
mov
or
inc
icebp
jno
and
adc
sbb
pushf
sbb
inc
cmpl
icebp
adcb
mov
and
dec
adc
mov
mov
adc
in
xchg
std
sbb
or
enter
push
test
and
push
and
test
mov
jbe
test
orb
cmp
adc
popa
fs
xor
test
and
les
js
add
repnz
xchg
jns
std
push
adc
inc
aaa
rorb
jo
fld
mov
push
cmp
insb
test
or
nop
push
fbld
outsb
push
es
lret
fs
in
je
cmp
inc
ret
and
and
add
mov
out
adc
fs
cmpl
push
or
stos
or
push
push
out
lods
mov
test
mov
test
sub
push
dec
mov
cmc
ret
adc
or
and
mov
inc
or
nop
xor
inc
loop
adcb
js
dec
jge
mov
aaa
std
or
inc
mov
sub
pop
inc
out
and
push
pusha
and
mov
fidivrs
nop
inc
fbld
test
and
inc
test
ja
xor
adc
rorl
sbb
aam
jg
ss
inc
sub
sbb
sub
movsl
ljmp
rclb
sbb
aam
xchg
xor
arpl
pop
lods
aad
or
inc
adc
adc
inc
mov
push
jle
ret
jmp
jmp
stos
repnz
mov
adcb
gs
add
dec
adc
adcb
pop
inc
add
pop
dec
push
cmp
je
addr16
cli
cmp
and
ja
mov
push
jmp
loop
into
inc
inc
or
lods
pusha
push
cmp
xor
mov
test
je
or
and
add
push
xor
gs
js
fbld
push
adc
movsb
jb
push
mov
jmp
jnp
idivb
outsb
imul
dec
dec
inc
popa
outsb
les
std
in
cmp
imul
pop
aad
push
lds
insb
data16
adc
cmp
ja
leave
push
bound
dec
and
jae
inc
jbe
jp
les
inc
inc
dec
mov
popa
pusha
xor
pop
es
mov
push
pushf
add
ror
or
xor
push
mov
mov
mov
cmp
testl
int
sub
pop
pop
jo
mov
rcrb
test
xor
nop
ss
xchg
and
outsb
cmp
jp
sbb
popf
pushf
lock
jbe
mov
pusha
mov
add
bound
inc
or
mov
test
outsb
jnp
dec
dec
pop
imul
jb
ret
test
fwait
rorb
loopne
outsb
jno
mov
cmp
adc
push
sbb
js
out
jns
cld
push
fs
es
fidivl
fs
rcrl
dec
test
or
xor
sahf
dec
xchg
mov
rcll
movsb
and
push
pushf
push
ljmp
ss
sub
and
outsl
and
xchg
mov
dec
and
fstps
jbe
test
push
mov
aaa
pushf
dec
sbb
js
sub
dec
outsl
fs
xor
lods
insb
outsb
dec
outsl
pop
pop
dec
lea
jae
das
mov
jne
push
xor
je
and
sbb
push
je,pt
aaa
cmpl
cmp
dec
sbb
and
hlt
push
xor
dec
cmp
lcall
xor
cs
cmp
mov
mov
pop
inc
inc
push
dec
adc
xor
sbb
mov
sti
arpl
shll
and
pop
mov
call
out
sub
int3
mov
or
fwait
mov
jne
mov
xor
mov
nop
pusha
cld
xor
adc
int
xor
gs
aam
sbb
push
push
lods
jg
insl
mov
mov
xchg
fsubr
pop
cmp
das
push
inc
popa
cmp
pusha
push
outsb
pushf
movsl
adc
aad
les
adc
push
adc
xchg
sbb
cmp
cs
enter
cmp
ss
aaa
sub
mov
enter
and
data16
push
dec
and
insb
ret
inc
ss
pop
call
inc
push
and
and
jno
iret
inc
inc
ficompl
and
rcr
sub
or
int3
insb
stos
mov
xchg
cld
in
imul
push
das
test
stos
rcl
and
call
push
mov
stos
dec
sahf
adc
dec
gs
cmp
pop
test
insl
nop
sbb
jp
call
or
dec
insl
and
inc
test
sahf
je
in
jbe
add
bound
mov
sub
jno
xchg
and
cs
insl
dec
xchg
into
pop
push
gs
jnp
cmp
test
xor
sub
mov
push
inc
and
int
or
pop
adc
or
or
sahf
es
cmp
or
ja
cmp
and
faddl
test
test
dec
inc
pop
test
inc
jo
insl
jo
gs
ja
mov
pop
push
xchg
sub
test
and
dec
inc
adc
dec
cmp
push
jbe
js
addr16
jno
cmp
add
and
int3
loop
jnp
and
pop
test
outsb
push
mov
xor
je
mov
cmp
or
xor
mov
mull
data16
data16
inc
fwait
outsl
push
and
in
and
orl
cwtl
pop
rorl
ds
jo
int3
mov
cs
xor
cmp
jne
or
cmp
inc
cmp
dec
inc
dec
inc
jl
inc
cmp
and
je
hlt
xchg
lods
call
dec
push
inc
dec
les
fwait
mov
inc
mov
or
es
shlb
lret
push
gs
push
mov
push
bound
dec
js
cmp
adc
cltd
clc
mov
jns
insl
xor
xchg
scas
jle
out
cmp
into
xchg
cmp
adc
adc
sub
inc
pcmpeqb
inc
leave
inc
add
xor
push
stos
cmp
insb
jb
and
xor
je
imul
sub
mov
push
inc
outsb
pop
sub
dec
push
fsubr
inc
jle
dec
xchg
dec
push
movsb
sar
push
push
sub
insl
xor
mov
cmpsb
push
js
lods
push
in
cmp
test
pop
movsl
inc
push
idivl
movsb
pop
mov
es
adc
js
cmp
xor
push
test
cmp
and
adc
call
or
ss
inc
cmp
leave
mov
movsb
mov
cld
fistpll
inc
enter
test
je
imul
mov
test
bound
jns
pop
pop
fsub
and
adc
imul
adc
jo
dec
into
mov
jmp
pop
push
stos
adc
inc
ss
push
sbb
xor
aam
bound
cltd
jg
pusha
mov
fistl
mov
aaa
clc
cmp
xor
fimull
fdivrs
ss
jno
cmc
push
shrb
and
ljmp
push
in
cmp
mov
push
push
test
push
sub
or
sbb
clc
dec
xchg
inc
jb
push
inc
jns
test
je
dec
fs
je
dec
dec
cmp
jns
push
push
and
in
iret
sbb
add
imull
lods
adc
push
nop
mov
jbe
lock
mov
push
push
pop
inc
int3
cmp
addr16
enter
cmp
sbb
and
loope
shl
push
xor
sub
insb
mov
cmpsb
sti
bound
insb
adc
sub
and
push
test
push
cmp
xchg
pusha
xchg
les
xor
sbb
sub
dec
jl
scas
fs
jne
pop
out
bound
pop
je
mov
daa
cwtl
and
lods
lds
or
jbe
and
xchg
test
fidivl
add
gs
test
pop
mov
sahf
push
push
bound
shlb
movsl
test
mov
inc
sbb
pop
pop
mov
dec
mov
mov
sub
pop
pop
mov
inc
repz
sub
pop
push
inc
jo
pushf
sub
daa
lret
jno
dec
pop
push
adc
icebp
rep
dec
xchg
pop
xchg
mov
sbb
xchg
imul
mov
lods
inc
mov
adc
fildll
adc
dec
dec
les
bound
clc
xlat
out
push
mov
mov
mov
xor
dec
xchg
jnp
cwtl
mov
loope
cmp
int
dec
sub
movsb
lods
or
xchg
outsl
stc
sbb
xchg
hlt
enter
iret
mov
loop
adc
or
je
or
push
movsb
mov
jae
movsb
fisttpll
mov
adc
inc
adc
gs
popa
insb
dec
and
pop
dec
enter
outsb
sub
imul
pop
jbe
jl
and
lods
jmp
imul
scas
into
mov
dec
push
dec
pop
add
dec
rcrb
in
test
adc
icebp
stc
jmp
push
inc
leave
jbe
inc
addr16
xorb
dec
push
imul
xchg
aam
cmp
test
dec
and
pop
push
push
movsl
hlt
addb
fs
sbb
push
inc
pop
push
sub
push
xor
jno
in
das
dec
inc
inc
xchg
loope
xor
and
ret
jae
pop
jl
loope
cmp
sub
cmp
xor
mov
fs
imul
xchg
js
repnz
and
dec
mov
mov
movl
inc
daa
in
mov
xor
cld
inc
inc
lahf
jb
aas
jo
push
shlb
pop
leave
into
sub
adc
lods
repnz
lret
jne
es
jp
pop
mov
mov
cmp
out
sbb
insb
jo
aas
jbe
pop
mov
and
pop
xor
aam
out
xchg
outsb
mov
inc
pop
hlt
iret
push
das
or
add
pop
cld
lods
inc
mov
je
mov
pushf
push
jl
je
cmp
push
les
mov
insl
and
inc
dec
je
adc
aam
insb
clc
pop
cmp
mov
mov
addr16
movsl
outsb
mov
xor
cmp
add
or
rclb
and
pushf
ficoml
insb
cmp
loop
sbb
pop
inc
cmp
das
and
das
push
push
jp
pop
out
inc
hlt
mov
xchg
pop
jmp
jb
in
or
cld
mov
lock
stos
jne
push
or
sub
or
sbb
mov
mov
pop
pop
mov
xor
jp
pushl
mov
add
in
pop
inc
cmp
hlt
and
xor
pop
test
or
out
daa
sarb
ja
test
dec
pop
push
jno
ds
adc
jmp
jmp
jne
bound
inc
push
push
inc
push
and
pop
js
dec
jo
imul
inc
sub
aaa
or
pop
jno
call
xor
stos
mov
pmuludq
loop
rcrl
insb
push
repz
call
ret
mov
arpl
mov
xor
mov
decl
dec
sahf
push
pop
mov
sbb
push
repz
adc
mov
jp
test
push
mov
mov
push
mov
mov
icebp
add
mov
mov
dec
lea
test
lock
adc
jmp
mov
xchg
dec
push
mov
js
in
fsubs
mov
xchg
adc
pop
lahf
popa
adc
daa
sbb
in
jo
je
inc
movsb
jge
inc
dec
adc
ja
jmp
and
scas
enter
bound
in
and
stos
adc
cwtl
sbb
mov
xchg
and
mov
mov
pop
mov
sub
inc
pop
and
fbld
lods
enter
sub
adc
mov
iret
pop
ds
nop
push
leave
dec
push
or
fsubp
adc
dec
lds
inc
fidivl
inc
adc
or
inc
adc
popa
adc
enter
and
aam
loope
cmp
cmp
xor
fadds
pop
adc
xor
xor
xor
push
test
ds
mov
mov
ss
test
sbb
push
and
adc
and
sub
lods
sbb
das
out
sub
inc
ret
adc
mov
xchg
nop
mov
test
and
aam
bound
xor
icebp
pop
xchg
and
les
and
int3
xor
or
push
fsubl
and
enter
adc
sbb
arpl
jae
or
add
mov
xor
mov
cmp
sub
dec
insb
addr16
and
fstps
jno
stc
push
pop
push
push
xchg
repz
adc
sub
cld
lret
pop
ret
xor
sbb
in
pop
dec
mov
outsb
push
cmpsb
xor
sbb
jne
push
and
test
xchg
clc
mov
push
loope
mov
loop
ret
cld
jecxz
sbb
sub
inc
bound
push
push
xchg
icebp
cmp
jne
xchg
pop
dec
xchg
or
jmp
add
addb
jb
inc
lock
xorb
pop
or
es
lock
add
or
mov
and
adc
inc
lods
and
mov
sarl
mov
pop
rcrb
add
lea
movsl
fdivr
adc
mov
test
or
inc
lock
adc
pop
sub
fidivrl
pop
cmc
decl
loop
call
shlb
cmp
and
mov
sbb
test
and
out
mov
inc
add
es
jo
jmp
push
test
push
sub
inc
inc
pop
dec
mov
in
push
inc
enter
fistpll
mov
sti
fisttpl
push
roll
mov
push
cmp
xchg
hlt
popa
push
add
push
sbb
or
dec
inc
lock
pushf
aaa
cwtl
out
sarb
inc
xchg
hlt
mov
or
mov
xor
ret
sahf
nop
push
test
ljmp
sub
shrl
in
jl
inc
push
jne
cmp
cmp
jge
xlat
push
xchg
sti
stc
cmp
lcall
arpl
adc
lea
xchg
sub
xor
push
xchg
cwtl
in
sub
jo
push
xchg
and
inc
insb
adc
add
xor
adc
jne
shlb
and
inc
adc
mov
scas
fwait
xchg
fsub
sub
cmpsb
adc
out
mov
cwtl
or
fs
xor
insl
lcall
adc
adc
and
cmc
call
lock
mov
xchg
notb
mov
lahf
pop
dec
pop
jae
subl
mov
aam
les
mov
adc
je
sub
add
fs
xor
dec
sub
or
and
adc
push
xor
sub
or
sbb
lret
sbb
dec
xor
adc
dec
push
inc
pusha
dec
outsl
mov
lock
sub
je
aaa
xor
lret
ljmp
pop
call
les
pop
data16
xlat
das
inc
bound
mov
in
adc
mov
aam
or
adc
or
pop
add
jno
xchg
mov
mov
imul
outsl
addr16
jae
push
movl
dec
popf
scas
xchg
shlb
push
inc
insb
dec
addr16
jns
and
and
je
das
mov
push
popa
stc
push
or
gs
enter
pop
sub
adc
or
sub
mov
push
sub
sub
call
insb
inc
hlt
int3
push
push
dec
jno
adc
inc
jne
pop
add
mov
pushf
adc
pop
and
inc
ret
and
jne
fs
insb
scas
or
sub
mov
push
pop
dec
sub
inc
outsb
adc
ja
push
xlat
stos
fs
ljmp
jmp
dec
mov
or
rorl
addl
cs
dec
xor
jge
add
pop
sub
jl
inc
loope
add
jmp
cmp
push
cli
jbe
gs
stc
sbb
mov
stos
ss
inc
and
insb
cmpsl
sbb
js
inc
dec
jne
or
adc
or
loopne
xorb
or
jl
dec
push
add
lret
pop
stc
popa
or
or
jge
cld
dec
mov
dec
or
mov
pop
sbb
ret
test
dec
mov
stc
pop
jmp
inc
add
stos
pop
cli
pusha
xor
fidivrl
push
pop
push
mov
shlb
stos
ret
mov
jle
push
lock
mov
cwtl
xchg
mov
xchg
adc
mov
addr16
pusha
push
xor
das
cmpsb
leave
cmp
pop
mov
test
mov
in
or
call
push
jns
or
call
test
pop
mov
enter
lock
dec
pandn
and
lods
push
dec
mov
xchg
adc
test
inc
and
repz
push
dec
lods
dec
movsb
add
cmp
sub
cmpsl
stc
je
adc
pop
cmp
lods
adc
scas
lret
addr16
inc
push
pop
cld
popf
xlat
push
int3
pop
and
pop
dec
inc
enter
or
mov
out
inc
sarl
shlb
pop
push
adc
jle
add
clc
add
adc
xor
popf
push
and
test
jle
daa
in
jne
aaa
aaa
dec
add
and
lea
iret
mov
push
jno
or
sub
dec
icebp
shlb
je
dec
sar
or
jb
inc
stc
sti
ret
cli
and
jmp
mov
aad
incl
sub
jne
jg
pusha
add
aas
inc
dec
jne
pop
fbld
adc
or
rorl
add
loope
or
mov
mul
negl
nop
sub
jl
or
mov
int3
loop
push
hlt
aas
and
xor
inc
notl
dec
mov
adc
xor
jbe
pop
paddsw
hlt
or
adc
fiadds
movsl
fisttps
jge
cmp
test
jbe
inc
push
inc
inc
shl
shr
loop
or
int
cmc
xor
sbb
push
loopne
loope
das
jmp
adcl
cmpsb
test
mov
and
notb
js
xor
jne
sub
pop
idiv
pop
xchg
lods
inc
sbb
shll
fmull
inc
dec
jl
fmuls
stos
pmulhuw
aam
not
xchg
fbstp
dec
popf
sbb
adc
inc
cs
ret
push
push
and
jg
movsb
loop
popa
rol
xor
cmp
dec
outsb
arpl
cmp
xchg
jae
xlat
pop
jbe
push
aas
insl
popa
pop
fmul
add
jmp
jl
jle
xlat
pop
ret
call
mov
test
call
popa
and
mov
pop
sbb
jnp
dec
jnp
mov
mov
dec
in
mov
adc
cli
pop
out
xchg
sti
dec
adc
sbb
mov
aam
enter
rcr
push
lock
xchg
push
pusha
dec
ret
mov
dec
dec
pop
icebp
test
or
popf
cwtl
testl
pop
aam
or
hlt
jo
pop
pop
divb
clc
push
arpl
insb
je
inc
push
inc
popf
int
inc
or
icebp
sbb
xchg
insb
cmp
inc
lds
push
add
movsl
xor
or
jge
inc
xor
repz
testb
in
adc
test
sbb
mov
jb
or
ret
aaa
fstps
cmp
test
inc
mov
test
movsb
push
xor
inc
test
push
pop
adc
inc
inc
cmp
adc
dec
push
dec
popa
or
push
inc
sarb
call
mov
pop
and
mov
cwtl
pop
dec
pop
dec
mov
jg
movsb
sbb
frstor
mov
push
int3
xchg
push
xchg
inc
aam
jg
aas
imul
pop
mov
pushf
test
call
popf
lock
mov
inc
ja
arpl
scas
test
das
cld
and
popa
or
xchg
lret
cld
cmc
int3
fcom
jmp
mov
jg
mov
pop
inc
jg
mov
push
rclb
int3
push
andb
adc
mov
sub
in
pop
cmp
push
test
inc
or
or
mov
inc
sbb
lret
bound
hlt
bound
sbb
fstpt
in
dec
jmp
adc
sbb
aad
cld
std
data16
and
add
or
loope
je
mov
and
ficoms
xor
and
pop
adc
push
dec
and
adc
xor
pop
pushf
or
inc
jne
out
xchg
cmp
movsb
or
mov
dec
dec
in
repnz
or
dec
out
negb
outsl
push
xor
rorb
push
decl
and
and
popa
ja
test
or
push
push
loope
and
adc
int3
les
lods
clc
xchg
out
xor
mov
cld
int3
or
push
mov
std
push
jecxz
xchg
cmp
cmp
aad
mov
inc
and
or
cmp
lcall
gs
jp
sub
sub
stc
iret
mulb
lcall
push
shll
jo
push
rcl
jp
adc
insl
fs
outsl
lea
push
loopne
into
cs
and
dec
repnz
push
iret
pop
scas
adc
mov
or
test
and
lods
loopne
jge
adc
mov
enter
xor
push
adcl
lds
jl
cmp
stos
lock
lahf
inc
xor
int3
jae
mov
js
push
movsb
sub
loopne
les
jecxz
enter
sub
out
shr
push
jns
roll
mov
inc
das
jg
inc
mov
mov
rorb
movsb
jae
or
push
out
jae
or
mov
mov
or
jbe
jmp
cmp
aam
adc
addb
icebp
adc
inc
push
dec
scas
mov
lret
enter
mov
mov
mov
inc
adc
inc
and
in
mov
cwtl
jmp
mov
mov
add
dec
xor
or
adc
movb
hlt
ljmp
sbb
sbb
xor
mov
test
cwtl
inc
cmpl
cwtl
xchg
ret
jns
std
jae
adc
xchg
sub
xchg
jbe
leave
inc
sti
lock
sub
mov
dec
push
nop
fs
mov
inc
mov
lahf
sbb
nop
inc
in
dec
xchg
mov
ja
inc
leave
movsb
in
jns
dec
ret
test
cld
push
sahf
or
cs
or
adc
mov
inc
pop
rol
out
cmp
push
push
imul
sti
adc
fiaddl
sti
mov
inc
jo
inc
popa
je
dec
adc
push
pop
xor
pop
dec
imul
cmp
sahf
ja
pop
jg
inc
js
dec
jge
repnz
jne
mov
int
xor
pop
jo,pn
mov
cwtl
popa
arpl
jecxz
pop
je
js,pn
jmp
jo
les
insb
ds
outsl
xor
or
das
sub
cmp
iret
mov
ds
in
push
ret
push
jae
jb
adc
insb
xchg
popa
jno
push
ja
fs
jo,pt
adc
fidivrl
mov
mov
mov
adc
and
or
jns
and
sub
int
ffree
push
jno
aas
sbb
push
movsb
inc
les
cmp
sar
aas
jae
mov
mov
cmp
adc
cmp
test
ficoml
mov
fwait
ds
sub
js
test
sub
xor
inc
cmp
cmp
mov
out
or
sahf
mov
ret
or
mov
sub
inc
mov
adc
cmp
test
outsl
mov
adc
push
mov
movsl
inc
jmp
push
arpl
cmc
xchg
sbb
jno
xchg
shlb
enter
dec
pop
pusha
call
les
dec
xor
mov
xor
adc
test
pop
xchg
int3
shr
daa
xlat
lret
cld
and
adc
adc
dec
flds
push
sub
pop
aaa
dec
push
or
mov
mov
push
push
inc
cmp
mov
xchg
out
lret
mov
mov
cwtl
jbe
push
into
cld
sub
or
jnp
or
cmp
and
cmp
dec
decl
pop
or
imul
lds
xor
call
ret
or
xchg
inc
sbb
fcos
int3
adc
sub
mov
add
imul
test
cld
mov
call
jne
cld
add
sbb
cmp
inc
hlt
lret
cmp
test
or
adc
orb
push
jbe
insb
mov
dec
add
stos
pop
xor
in
add
or
cmp
in
mov
adc
sub
shl
mov
xor
sub
in
jp
xchg
inc
loopne
mov
ss
push
adc
or
lahf
aaa
mov
inc
dec
xchg
cmpb
xchg
mov
sbb
loopne
mov
inc
ljmp
test
push
xchg
jmp
sbb
xor
xor
std
mov
mov
ret
das
gs
dec
sbb
out
daa
jns
pop
adc
mov
xor
adc
mov
sub
nop
lret
enter
js
lret
sbb
stc
int3
mov
std
rorl
or
sbb
mov
mov
sbb
or
rorl
push
sbb
mov
or
pushf
pop
fs
pusha
xor
sub
xchg
push
mov
jns
icebp
jae
mov
test
gs
sub
popf
mov
imul
inc
hlt
adc
sbb
adc
clc
test
xor
sbb
call
out
and
pop
mov
pop
xlat
ds
push
push
sub
cli
inc
pop
adc
pop
or
cmp
xchg
sbb
pop
sub
test
rolb
lret
adc
dec
jne
lods
cmpb
pushf
dec
xor
sbb
jbe
adc
test
test
movsb
xchg
jns
in
aam
push
adc
mov
xor
xchg
faddl
push
hlt
jge
lds
inc
adc
test
push
out
push
sub
fs
test
adc
mov
bound
insb
jbe
mov
and
adc
adc
cs
inc
adc
mov
loope
and
orl
les
mov
or
out
xchg
aam
fs
inc
cmp
pop
xchg
cmp
rolb
adc
adc
mov
pop
cld
jb
test
and
add
and
dec
push
mov
xor
or
or
mov
adc
adc
orb
repz
add
lock
lea
mov
or
cmpsl
in
xchg
sbb
loop
xor
lods
sbb
sub
lret
add
push
jne
push
push
mov
call
push
xor
or
and
and
inc
insl
push
mov
das
jg
jae
pushf
nop
js
imul
sbb
pushf
inc
push
enter
pop
in
into
das
dec
sbb
inc
pop
cmp
test
inc
movsb
adc
adc
mov
sub
iret
imul
je
test
pop
mov
dec
pushf
sbb
lods
or
sahf
sbb
xchg
adc
inc
adc
into
adc
pop
pop
mov
ss
out
and
mov
mov
cmp
int3
adc
xchg
mov
clc
mov
enter
mov
lea
xlat
lods
pop
dec
sub
daa
adc
dec
icebp
sbb
addr16
dec
sbb
mov
inc
fidivrs
das
ja
test
and
daa
les
jl
call
inc
test
xor
mov
nop
add
inc
and
es
xor
xor
push
add
jb
movsl
jl
adcl
inc
ret
lock
mov
mov
inc
push
repz
dec
aas
push
mov
cld
cld
push
leave
or
fistpll
xor
insb
cmp
adc
adc
add
or
mov
push
test
pop
jp
fs
or
sahf
outsl
mov
push
mov
mov
adc
and
xor
pop
sbb
rcrb
push
jl
nop
pop
lea
inc
xchg
push
es
leave
push
xchg
jns
adc
mov
jo
push
inc
je
stos
insl
cmp
push
pop
push
loopne
push
les
inc
jo
push
imul
pop
mov
jns
sub
and
nop
xchg
and
adc
enter
pop
adc
cld
inc
iret
push
push
stos
inc
pop
lret
and
enter
aam
dec
or
cmp
xor
sbb
mov
and
xchg
call
jb
cmp
sbb
mov
adc
and
pop
fwait
lfs
inc
insb
cmovge
fs
add
ds
or
cwtl
loopne
sbb
int3
sbb
bound
adc
std
les
inc
or
mov
inc
push
mov
call
or
jbe
out
or
inc
jbe
mov
or
popf
js
fs
or
push
push
mov
and
repz
and
pop
add
repnz
push
inc
outsb
jae
inc
push
pop
sub
dec
inc
les
inc
add
adc
call
adc
push
dec
pop
mov
push
push
or
dec
hlt
push
dec
nop
rclb
sub
movsb
inc
movsb
sub
push
cltd
jo
test
std
fnsetpm(287
shrb
sub
inc
cmp
sub
or
cltd
adc
aam
and
add
out
out
dec
in
mov
mov
push
push
or
pop
adc
sub
jmp
add
add
and
inc
mov
jl
push
sub
sub
rcll
incl
lock
sbb
xchg
and
add
movsb
sub
adc
mov
adc
js
jl
or
pop
lret
or
xor
nop
sub
fadd
je
adc
cwtl
adc
and
call
mov
and
mov
psubq
insb
imul
pop
adc
dec
in
call
lods
adc
xor
cwtl
sub
and
push
sub
in
and
notl
mov
or
push
cltd
std
stc
sub
out
or
inc
test
jmp
xor
sub
inc
adc
mov
outsl
outsb
sub
aaa
inc
or
mov
add
insl
outsl
roll
pushf
pusha
ljmp
sub
and
cmp
mov
inc
dec
add
cmp
sub
addb
mov
push
inc
fidivs
mov
shll
ret
or
mov
fcomps
daa
adc
and
pop
sub
dec
add
add
push
sbb
dec
jmp
pop
fnstsw
sub
fs
aas
sub
xchg
sbb
pusha
out
leave
inc
or
mov
add
pcmpgtd
mov
imul
sub
dec
push
dec
or
push
adc
adc
adc
add
test
xrelease
hlt
adc
mov
pop
inc
imul
push
aas
cmpsl
inc
jne
in
adcb
jne
femms
mov
ds
scas
mov
inc
mov
or
mov
mov
loope
shrb
sub
add
mov
inc
cli
mov
test
xor
jne
movl
push
mov
enter
and
inc
xor
add
mov
push
test
pop
jmp
push
sub
inc
xor
jo
mov
sub
dec
sbb
jl
pop
mov
enter
int3
cmp
ljmp
loop
pop
sti
xor
dec
add
xor
loop
daa
or
push
mov
xchg
bound
or
sbb
dec
inc
fs
hlt
push
push
add
push
or
insb
subl
inc
jne
inc
lcall
xlat
lds
mov
adc
shll
lods
movsb
xchg
push
cmp
inc
inc
cmp
testb
testb
add
and
leave
add
cwtl
jo
hlt
xor
je
sub
cmpsb
es
mov
pop
xchg
add
lea
lods
adc
and
sahf
jl
cmpsb
and
and
test
out
hlt
xchg
scas
and
mov
dec
pop
shll
jo
or
push
add
mov
fcomi
sbb
sub
cmc
or
xlat
add
leave
cmp
inc
sub
xchg
sub
lret
mov
pusha
and
pop
pop
or
push
adcl
jmp
jmp
mov
cli
jne
ret
cmp
mov
dec
roll
add
sub
jae
vpand
inc
je
xchg
inc
shll
sbb
insl
aaa
rorb
jl
adc
fists
inc
mov
pop
mov
cli
arpl
inc
add
sbb
adc
add
test
mov
ret
inc
decl
data16
gs
test
push
ljmp
rcl
icebp
nop
shll
sub
test
divb
push
sub
sub
test
push
pusha
rolb
sbb
push
cmc
sbb
or
jl
add
mov
dec
clc
and
and
ret
adc
sub
adc
je
push
lods
dec
pop
es
scas
inc
jge
dec
js
mov
jecxz
push
jge
adc
pop
test
sbb
repnz
insb
mov
cmp
movsl
and
test
leave
pop
in
jb
sbb
jo
adc
mov
cld
xchg
xchg
hlt
fbstp
nop
or
mov
and
adc
push
test
cli
les
inc
fnstcw
push
sub
js
in
pop
shrl
mov
sarl
mov
mov
test
inc
mov
mov
repz
push
jae
adc
push
sbb
push
in
lods
ja
ror
nop
push
and
xor
mov
adc
call
xchg
enter
xchg
or
test
push
ja
adc
repnz
push
adcb
adc
jg
out
test
out
add
mov
pop
sbb
ret
push
out
push
push
inc
inc
je
jb
arpl
adc
icebp
enter
or
inc
pop
or
dec
imul
aad
push
push
inc
testl
add
fdivs
dec
or
xor
inc
dec
fs
js
gs
jo
xor
xor
aas
or
ret
mov
les
enter
dec
xchg
scas
or
int3
push
push
movaps
and
das
int3
lods
pop
push
xlat
ror
into
sub
daa
add
ja
shll
mov
sbb
adc
push
jns,pn
cltd
icebp
idivl
je
cltd
or
and
in
jb
cmp
and
in
jb
cmp
mov
and
js
jns
jp
jnp
jl
jge
inc
jle
jg
pusha
enter
jb
cmp
mov
and
push
jb
cmp
mov
and
push
enter
xor
xor
sub
gs
fists
push
sysexit
xor
jne
inc
les
int3
and
sub
in
mov
nop
mov
xor
das
ja
call
mov
divb
repnz
jne
lret
sub
xchg
enter
fildl
movsl
in
subl
lret
pop
sbb
cmp
sub
xchg
rclb
and
sbb
adc
push
xchg
ljmp
shrl
insb
faddl
enter
push
outsl
mov
ret
mov
or
xchg
out
mov
jbe
adc
jg
data16
push
add
inc
xchg
add
or
xchg
pop
mov
jno
or
xchg
or
inc
out
or
ljmp
mov
push
adc
xchg
loop
adc
jbe
adc
pushw
and
adc
adc
inc
push
and
adc
push
and
adc
loop
adc
push
and
or
or
or
xchg
sbb
movb
push
or
xchg
jno
or
jbe
and
xchg
and
inc
xchg
and
or
sbb
daa
and
les
and
sbb
sub
testb
sub
out
and
adc
loop
adc
push
and
adc
xchg
loop
adc
jbe
xor
pushw
and
adc
xor
inc
push
and
inc
cmp
test
mov
inc
push
cmp
test
testb
cmp
out
inc
cmp
les
sbb
cmp
and
xchg
into
jo
xchg
or
adc
data16
or
adc
jno
or
xchg
inc
mov
jno
or
xchg
dec
mov
jno
or
inc
or
dec
inc
out
dec
test
mov
cmp
inc
mov
dec
inc
cmpsb
cmp
inc
xchg
mov
xchg
push
test
mov
data16
inc
push
mov
cmp
inc
mov
cmp
inc
push
mov
push
cmp
and
pop
fs
and
sbb
pop
and
les
sbb
pop
and
sbb
pop
and
sbb
popa
and
bound
data16
arpl
push
les
sbb
and
les
es
and
and
sbb
imul
adc
push
and
loop
adc
push
and
mov
outsb
adc
xchg
mov
cwtl
fstl
aas
bound
jo
insb
sbb
jae
lods
xchg
popa
test
pop
pushf
sbb
ljmp
jo
push
push
mov
or
inc
dec
push
adc
jae
mov
cmp
mov
or
xor
cs
pop
push
xor
ljmp
outsl
les
mov
or
adc
loope
jne
jne
ret
and
js
bound
orb
test
lods
lea
ja
dec
sub
jge
inc
sbb
inc
scas
xor
mov
dec
xlat
rcrl
and
inc
inc
iret
dec
xchg
mov
jo
xor
mov
dec
sbb
xchg
sub
mov
sub
sbb
xchg
sub
push
jae
xor
inc
idivl
inc
sbb
std
movb
clc
add
or
inc
sbb
movsl
xor
fs
sbb
jp
push
push
xorl
adc
mov
cmp
pop
adc
out
inc
push
test
in
inc
rclb
xchg
je
push
or
jae
sbb
shrb
sti
mov
adc
push
adc
mov
loop
test
sbb
adc
xchg
adc
push
shlb
mov
jb
insb
popa
jo
sub
jae
push
sbb
push
mov
dec
cmp
xor
js
gs
sbb
dec
stc
and
dec
mov
dec
lret
sbb
or
int
xor
sbb
imul
les
cmp
or
push
outsl
lret
js
ss
dec
push
adc
repz
inc
nop
inc
push
dec
in
out
mov
fcomip
mov
stos
test
lahf
jmp
push
pop
or
sbb
dec
lcall
inc
jbe
inc
rclb
call
adc
mov
fs
fnstenv
pop
sub
fsts
insb
adc
adc
out
xchg
add
adc
fistpl
jbe
pushf
leave
das
xor
mov
inc
fs
testl
jns
pop
sarl
cld
push
mov
or
adc
mov
daa
addr16
push
loopne
decl
adc
pop
and
rorl
js
xor
fs
enter
mov
xchg
stos
lds
inc
inc
mov
inc
les
cmpl
das
push
data16
mov
imul
or
scas
or
xor
sbb
out
dec
das
jne
mov
pcmpeqd
sub
sub
dec
in
xchg
sub
mov
mov
lods
xchg
arpl
inc
or
sbb
je
pop
mov
dec
push
mov
pop
add
adc
or
jne
outsb
jb
lock
pop
arpl
inc
inc
inc
inc
int
jne
sub
call
stos
cmp
inc
xor
inc
daa
push
xchg
ljmp
xchg
cmp
popf
jge
or
in
pop
call
inc
lock
test
push
lret
pop
or
inc
or
in
std
adc
pop
sub
inc
inc
inc
popf
enter
push
add
xchg
mov
xor
pop
xor
repz
adc
clc
xor
or
cmpb
and
movb
xor
sub
or
repnz
sub
icebp
scas
inc
or
inc
clc
adc
sub
das
aam
adc
push
je,pt
scas
in
mov
lock
js
add
push
and
loopne
inc
cmp
dec
push
dec
adc
add
insb
lods
pop
imul
repnz
inc
aas
pop
xor
cld
and
and
lds
js
jno
or
mov
sti
sbb
and
inc
aas
xor
cmp
push
jmp
jne
mov
push
lret
test
xchg
imul
subb
dec
and
add
test
es
add
inc
jne
fidivs
jmp
xor
or
ret
rorl
cmp
jne
pop
popw
adc
xchg
fimuls
out
mov
sub
inc
neg
sub
ds
inc
mov
addr16
push
mov
mov
fstl
std
cmp
mov
inc
add
push
mov
mov
repz
lea
sub
adc
jno
sub
jae
push
clc
aam
mov
push
dec
mov
mov
aam
fadd
repnz
ja
xchg
dec
or
dec
push
sub
push
fldt
mov
add
cmpsb
and
sub
adc
and
dec
push
xchg
arpl
je
test
and
dec
ficoml
or
mov
push
and
dec
jae
test
xchg
inc
mov
lret
dec
out
hlt
sub
addb
mov
insb
and
xchg
std
adc
adc
fs
adc
and
xor
nop
inc
and
adc
sbb
test
and
or
adc
adc
push
or
add
add
cmc
and
adc
or
adc
mov
cmp
adc
test
adc
lcall
mov
xchg
or
popl
loopne
jle
mov
push
insl
test
sub
adc
mov
xor
inc
adc
or
mov
insb
les
and
adc
ja
sbb
add
lock
clc
andb
pop
and
test
in
adc
lds
push
aam
adc
push
adc
adc
inc
and
nop
sub
jl
orl
adc
je
int3
pusha
sbb
pop
out
sbb
test
inc
ret
dec
test
mov
mov
inc
inc
adc
adc
adc
or
mov
into
jle
test
and
pop
jns
in
cmpsb
adc
lret
call
lret
jnp
jle
imul
inc
push
inc
add
dec
cld
jmp
pop
lret
in
cmp
jecxz
jle
cmp
scas
lock
mov
mov
add
lds
roll
or
mov
mov
push
xchg
mov
pop
push
add
imul
cmpl
jne
or
xor
data16
nop
and
fcompl
leave
adc
mov
cwtl
rcll
adc
movsl
xchg
shrl
xchg
decl
xor
add
mov
lcall
dec
inc
aam
cmp
insb
pop
or
xchg
inc
scas
jns
cmp
pop
add
jns
and
mov
pop
fdivl
and
xchg
lock
fldcw
xchg
xchg
dec
and
or
call
das
inc
sub
inc
cwtl
out
jnp
push
loop
jge
add
add
ss
sbb
xor
and
adc
fbstp
enter
push
and
or
les
out
shrb
ret
adc
push
data16
mov
call
jmp
in
add
jno
std
sbb
push
rclb
and
call
adc
adc
mov
add
jo
mov
je
dec
push
jnp
push
mov
insb
aaa
testb
fucomip
pop
mov
lahf
loop
sub
jb
mov
adc
and
adc
sbb
adc
add
or
pushf
mov
inc
mov
or
fnstcw
mov
sbb
inc
adc
push
mov
pop
add
push
cmp
sub
cmpb
pop
pop
mov
dec
or
mov
dec
stc
cmp
pop
adc
cltd
push
jecxz
gs
fmuls
cmp
inc
or
fucomp
lret
std
dec
pop
jl
stc
or
push
inc
adcb
ljmp
push
lea
movsl
movsl
cli
movsl
jae
lahf
adc
int3
sbb
testb
mov
sahf
xor
les
inc
add
pushf
pop
dec
bound
add
push
cwtl
adc
imul
test
inc
je
andb
xchg
pop
adc
cmp
adc
xor
or
mov
push
mov
or
je
adc
int3
orl
push
fs
pop
orb
enter
aam
xor
aam
je
or
xchg
test
xor
and
rep
mov
or
jg
pop
orb
sbbl
pop
push
adc
fs
and
add
cmp
jne
lea
push
dec
shlb
jne
lahf
je
inc
mov
std
sbb
mov
or
mov
mov
cmc
adc
add
pop
popa
push
mov
sti
cltd
add
shl
xchg
in
stc
popl
push
pop
leave
add
cwtl
jg
decl
adc
cmc
cli
sub
ljmp
push
lea
pushl
push
inc
add
sub
adc
or
add
loop
aam
xor
adc
xchg
mov
fdivl
jge
aad
std
pushf
repz
rcrb
call
inc
dec
fldcw
shrl
inc
ja
hlt
popf
call
out
mov
pop
dec
in
or
mov
mov
xor
ljmp
sub
mov
or
jbe
fimull
sub
push
fwait
nop
pop
mov
cmp
movsl
nop
cmpsl
pop
mov
cli
jge
xor
adc
mov
adc
or
and
sub
ds
jne
push
adc
xor
inc
shll
je
out
les
lock
pop
nop
in
jae
hlt
or
repnz
lock
push
mov
dec
or
jg
and
call
je
ret
and
dec
or
or
cs
aad
fiadds
adc
push
add
add
js
jmp
dec
insl
pop
pop
mov
stc
fistl
xchg
mov
push
add
jle
push
adc
std
cmp
dec
scas
sub
dec
or
dec
mov
push
testb
cmp
addr16
cld
add
xchg
pop
xor
push
in
test
call
push
int3
and
mov
lcall
push
adcl
jne
loop
daa
push
dec
adc
lock
mov
dec
jl
pop
inc
push
testb
enter
ret
mov
or
or
push
ret
adc
lock
adc
and
dec
or
push
mov
sti
add
adc
neg
test
cmp
addb
icebp
jne
sbbb
push
clc
or
lods
pop
cmpl
inc
jle
and
mov
adc
fst
popf
xor
inc
pop
stc
fs
push
sbb
dec
pop
ja
mov
shrl
stos
ja
inc
jecxz
jae
shll
jl
jmp
inc
or
push
cld
loop
inc
push
and
dec
loop
inc
out
and
push
add
lods
inc
pop
or
cmp
outsl
jg
and
adc
in
inc
cld
mov
xchg
adc
cwtl
or
sbb
inc
fwait
stc
push
decb
jmp
sbb
es
fistpll
movsl
cld
jnp
cmp
shlb
mov
inc
add
mov
cltd
idiv
mov
or
fs
int
pop
dec
rcrb
and
xchg
push
pop
ljmp
daa
mov
js
mov
clc
jl
loop
faddl
data16
cmp
add
test
sub
sub
push
mov
es
jg
nop
dec
mov
adc
out
pop
pop
adc
xchg
pop
dec
test
std
add
or
mov
mov
pusha
push
fsts
push
push
cltd
sbb
daa
push
inc
icebp
lahf
push
movsl
or
pop
push
xlat
push
cltd
or
stc
nop
or
mov
test
inc
push
imul
fcompl
sbb
or
pusha
cs
pop
push
and
inc
jmp
xchg
inc
adc
inc
test
mov
mov
test
mov
adc
jne
movsl
mov
xor
fwait
repnz
jp
imul
les
call
or
in
dec
ljmp
adc
cs
fdivrl
mov
ja
mov
les
sub
adc
imul
add
mov
dec
push
imul
test
std
lock
jecxz
push
call
sti
mov
cmp
fistl
popa
sbb
push
push
out
jmp
mov
shrb
out
xor
xchg
jne
and
adc
dec
xchg
dec
leave
inc
call
dec
in
sbb
mov
xor
mov
ret
fstp
jns
leave
and
into
sub
movsb
inc
shrl
inc
pop
mov
cmpsl
or
cld
push
gs
loop
cmp
in
mov
jmp
mov
xor
cli
sbb
cli
pop
pop
leave
adc
jne
out
fisubrl
mov
cmpl
cmp
sbb
mov
mov
pop
push
insb
jmp
addb
rcrb
dec
or
iret
dec
pop
sub
and
std
mov
pop
fstpl
mov
enter
dec
lock
mov
mov
icebp
pop
inc
cmc
and
xor
test
addb
xchg
hlt
sub
or
jmp
mov
mov
ret
cmp
out
pop
push
adc
fcomi
or
fldt
dec
pop
push
xor
dec
sar
adc
mov
rorl
add
push
mov
call
dec
jne
jge
rol
and
inc
and
pop
jnp
pop
sbb
cmp
xor
dec
or
jb
pop
leave
xchg
dec
mov
daa
add
and
push
mov
bound
push
adc
out
jnp
in
or
jmp
jmp
mov
arpl
in
push
cmpsl
mov
jge
and
lock
out
mov
call
leave
xor
das
mov
mov
shlb
test
pop
mov
out
adc
mov
ret
sbb
adc
mov
mov
js
inc
jl
jp
cld
or
or
sahf
mov
inc
jg
lock
push
mov
outsl
inc
hlt
mov
pop
xor
pop
inc
cmc
dec
push
mov
lock
cmp
jge
mov
pop
nop
or
jb
push
push
and
jnp
and
in
adc
outsl
xchg
test
imul
cmp
jne
jmp
cld
ror
mov
pop
lods
stos
jecxz
faddl
dec
jne
push
dec
fs
jae
pusha
movsb
cmp
loopne
push
aas
dec
pushf
ret
or
and
cmp
mov
push
and
xor
in
sahf
fisubs
loopne
out
adc
jecxz
push
out
stos
pop
pushf
insb
and
mov
adc
mov
push
sub
inc
or
fs
out
in
xor
pop
inc
or
inc
adc
pushl
in
inc
pop
stos
in
xchg
insb
jnp
and
in
bound
out
dec
js
mov
push
outsb
or
dec
outsl
loopne
jne
test
push
push
jb
sub
and
addr16
les
inc
and
popa
dec
popa
jb
adc
out
inc
jns
dec
nop
jnp
sbb
les
push
and
popa
dec
arpl
dec
outsl
jbe
inc
gs
jae
popf
cmp
ret
pop
jle
aad
enter
dec
xchg
loope
popa
rcrb
push
jno
cmpsl
mov
and
adcl
rorb
je
and
xor
and
mov
stos
mov
movsl
out
mov
das
rclb
fdivrp
fs
inc
mov
push
and
daa
pop
jne
jno
dec
and
pop
fcomip
pop
in
enter
pop
outsb
aas
xchg
movsl
cld
mov
jmp
daa
xor
gs
mov
in
and
das
loop
push
out
repz
dec
pushl
mov
test
mov
mov
or
out
adc
jmp
insb
test
sbb
cmp
adc
xchg
or
push
cmc
call
in
cmp
xor
jmp
sub
test
dec
out
mov
adc
in
and
sbb
inc
or
lea
ds
call
pop
cmp
push
loope
cld
xchg
cmc
mov
mov
jecxz
repnz
push
clc
pop
mov
jmp
fstpt
out
in
mov
jmp
or
sbb
adc
out
inc
dec
sahf
sti
adc
iret
or
lods
in
leave
sub
test
ret
or
mov
jmp
push
xor
test
adc
or
sti
mov
mov
div
push
xor
mov
aad
lods
nop
mov
addr16
sub
adc
mov
mov
fldcw
jb
xchg
ss
add
or
push
or
fsubrs
dec
arpl
jg
clc
and
inc
jo
outsl
adc
jp
mov
pop
push
and
and
lock
xchg
mov
xchg
lahf
and
lock
lods
adc
add
xor
and
adc
sub
or
pop
mov
outsb
lea
sbb
in
rcrb
push
int3
les
mov
aad
rcr
push
or
popf
inc
mov
inc
jl
xchg
adc
adc
sub
lds
mov
mov
adc
jl
pop
adc
and
jg
sub
and
bound
popf
push
daa
out
cmp
fdivrp
inc
cld
ljmp
stos
push
sbb
out
es
pop
push
push
call
add
push
sbb
je
inc
sbb
test
rcl
dec
sub
mov
push
pop
outsb
inc
jle
icebp
xor
push
inc
fisttpll
xor
movsb
and
mov
add
xchg
dec
bound
add
dec
xor
rorl
cwtl
add
insb
sub
dec
xor
sub
daa
js
jecxz
cmc
es
nop
imul
fcoms
enter
and
sbb
loop
insb
sub
xor
xor
adc
push
add
or
aam
loop
scas
jmp
shlb
mov
fld
add
stc
mov
jle
mov
pop
add
decl
add
mov
inc
dec
jne
in
pushf
mov
inc
xchg
shrl
inc
adc
xor
insl
popf
pushf
shll
loop
in
fsubs
pop
std
mov
inc
mov
inc
pop
dec
inc
cmp
adc
mov
inc
iret
cmp
add
cli
outsl
out
loopne
add
mov
in
cmp
loop
and
and
add
out
sub
out
or
in
stos
enter
out
inc
ljmp
sbb
aam
in
call
stc
inc
pop
pop
jecxz
jmp
mov
popa
fdivl
movsb
xchg
cli
fsubl
lret
sbb
fsubs
sbb
mov
cld
cmp
je
mov
in
and
movsl
jmp
insl
adc
mov
ljmp
bound
cmp
icebp
ficoms
push
fadds
push
das
shl
les
pop
std
xchg
int
push
sbb
or
rcrl
nop
jmp
inc
not
test
inc
and
cmp
std
mov
adc
and
adc
ret
dec
clc
or
inc
hlt
aas
cwtl
and
jno
loopne
call
sbb
or
das
mov
add
adc
mov
daa
fcoms
out
and
imul
mov
sub
call
add
repz
mov
lea
push
xchg
cmp
and
in
lahf
adc
je
jmp
inc
pop
push
into
dec
imul
mov
cmp
cmp
rorb
cwtl
sbb
sub
adc
and
mov
movsb
xlat
mov
int3
and
or
dec
xor
xor
mov
dec
out
cmp
out
and
or
loopne
cmp
or
dec
fldcw
cmp
mov
and
fmull
jb
ret
push
push
std
nop
mov
push
jmp
sahf
rcl
mov
in
xor
int3
ret
mov
push
pop
push
stos
adc
push
stc
xchg
cltd
adc
pop
adc
mov
sbb
mov
and
sub
adc
lea
cmp
addr16
adc
mov
inc
or
sbb
inc
in
push
xor
cmp
add
or
ss
jo
lea
mov
or
add
rcrb
js
and
jb
pop
push
push
cmp
stos
push
test
test
fs
adc
adc
add
cwtl
adc
xchg
pusha
sar
xor
dec
out
hlt
mov
jp
rcr
movb
dec
data16
xor
jge
fwait
sbb
pusha
lea
test
cmp
dec
xchg
cs
cmp
mov
in
fsub
sti
out
iret
rep
addr16
push
iret
sub
adc
sti
icebp
je
int3
movl
sub
popa
pop
mov
or
movsl
push
jl
pop
arpl
sub
lea
pushf
outsl
and
or
pop
outsl
out
mov
hlt
mov
clc
cmp
xlat
jne
imul
insb
xchg
into
push
sub
inc
adc
int3
cli
jne
outsl
mov
loopne
imul
fs
or
sbb
mov
aas
xchg
fdivrl
cs
pusha
fcmovb
jmp
pop
and
mov
sbb
pop
mov
lcall
xor
loope
sub
ss
pop
adc
mov
mov
cmp
xor
sbb
or
cmp
stc
lahf
adc
fcoms
add
mov
xchg
call
jge
roll
sub
adc
cmp
divb
je
icebp
and
repz
xlat
das
dec
nop
addb
adc
push
or
push
or
sub
inc
inc
inc
inc
loopne
inc
dec
dec
dec
add
dec
dec
dec
dec
cld
stc
or
push
add
pop
xor
rcrb
imul
cmpsb
jo
jb
add
add
jp
xor
xor
xor
sub
test
popa
into
std
push
pop
jno
and
orl
flds
icebp
xor
fcomps
inc
into
movsl
repnz
test
je
mov
jne
push
mov
insl
lcall
lahf
adc
daa
and
and
or
sbb
mov
and
or
mov
lahf
stc
push
shll
or
icebp
loop
push
push
or
dec
sbb
loope
or
lock
sahf
loope
push
js
sub
leave
push
sbb
test
cmpsb
lahf
lock
cmp
mov
rcrb
fsubs
push
or
out
jp
neg
stos
push
mov
jg
push
mov
xchg
mov
mov
and
fidivrl
mov
mov
sbb
or
fcomps
jo
mov
stos
cmp
push
jge
imul
les
mov
adc
test
test
add
pushf
xchg
pushl
test
mov
sbb
push
les
mov
popa
lods
nop
adc
rorb
xchg
mov
inc
mov
adc
xor
movsb
mov
mov
sbb
xor
repnz
adc
mov
lahf
xchg
push
push
sub
push
and
mov
inc
fdivl
mov
jae
and
orb
test
test
add
sub
ja
scas
push
sbb
aad
stc
xor
and
jo
adc
pop
or
stos
popa
and
icebp
push
xchg
cmp
and
mov
mov
lret
imul
dec
mov
clc
cmpsb
mov
int3
call
ljmp
cli
add
lea
jecxz
test
sbbb
aad
inc
lods
sarl
lcall
mov
sub
pushf
aam
inc
push
push
dec
and
dec
cmp
push
adc
dec
inc
lahf
dec
xchg
push
test
jmp
nop
xchg
repz
and
push
fs
notl
or
cmc
adc
cmp
adc
and
sub
jmp
cmp
adc
dec
dec
sbb
xor
dec
imul
int3
xor
pop
cs
dec
cmp
ror
push
jns
jo
jg
dec
jl
sbb
decl
xchg
and
cmp
and
cmp
cmp
sub
stos
cmp
dec
and
sbb
dec
data16
jl
cmp
sub
mov
ds
jl
jb
cmp
add
jne
sbb
sub
cmp
negl
sub
outsl
data16
xor
mov
push
aas
dec
push
add
push
dec
dec
and
dec
mov
jo
cwtl
repnz
jl
cli
fs
sbb
pusha
leave
mov
pop
roll
data16
or
cmp
inc
mov
hlt
sub
insl
pop
jp
jo
inc
rcll
mov
add
mov
repz
push
movsl
mov
sbb
jnp
cmp
push
enter
and
pusha
or
cmpb
and
xchg
push
jbe
mov
in
xor
pop
das
test
xlat
cwtl
data16
cwtl
mov
sbb
inc
mov
sub
cmp
adc
stc
movsb
xchg
stos
cmpsb
test
dec
push
fs
cs
fsts
ljmp
xchg
fsts
fwait
or
sub
out
sbb
jl
loope
mov
rcl
ret
ja
or
and
adc
xor
test
je
dec
adc
pop
or
enter
sub
add
and
test
jbe
mov
add
push
push
pop
add
jne
fimuls
jge
add
dec
jmp
dec
sbb
rcrl
out
adc
xor
jne
or
pop
add
lea
push
lret
sub
adc
push
jg
mov
inc
dec
jne
fdiv
sub
popa
dec
or
or
lret
dec
lcall
pushf
aad
dec
jge
cmp
push
cmc
out
sub
adc
push
xor
idivl
mov
push
cmp
jge
sahf
rclb
loopne
xchg
inc
push
cmpsb
sub
jns
enter
pop
call
sbb
stc
or
pop
rolb
call
repnz
xor
in
jne
adc
mov
inc
in
cmp
out
and
lods
mov
lock
push
push
sub
pop
stos
adc
push
out
xchg
mov
adc
iret
and
cmp
cmp
inc
or
jae
sbbl
adc
or
neg
dec
divb
lea
sbb
fsubrs
call
jg
add
or
shlb
add
jmp
jle
cmpsl
sbb
std
mov
in
push
mov
xchg
push
xchg
sub
ds
js
addb
lcall
cwtl
sub
addl
jne
xchg
push
clc
mov
mov
add
sbb
mov
adc
or
add
xlat
sub
mov
push
and
and
mov
cli
xor
dec
enter
cmpsl
or
lea
mov
and
outsl
pushf
push
dec
add
inc
test
sbb
pusha
mov
call
addr16
scas
inc
or
mov
lock
movsb
bound
xor
test
mov
adc
scas
fstl
fs
xchg
lods
mov
xor
mov
dec
pop
mov
mov
or
addr16
pop
nop
inc
mov
pop
add
add
ljmp
or
push
push
pop
or
pusha
sub
sti
mov
sti
cmpsl
push
inc
imul
sub
xor
jne
mov
rorb
dec
fwait
lock
dec
sub
ret
adc
movb
adc
add
dec
dec
and
pusha
dec
outsl
outsb
sbb
insl
pop
je
dec
les
xor
mov
sbb
dec
out
and
test
xor
mov
push
repz
push
loop
shll
sbb
ret
and
imul
jae
jo
and
idivl
fidivrl
fcoml
cmp
mov
adc
orl
pop
add
sbb
pusha
or
movsl
dec
xchg
pusha
bound
sti
nop
mov
jb
mov
test
daa
notl
or
subb
out
and
shrb
adc
or
cld
xor
xchg
push
cwtl
fimull
mov
enter
sub
mov
enter
jl
fcoms
push
and
dec
out
xor
jmp
inc
jl
xor
pusha
add
and
test
and
pushw
sbb
cwtl
jns
mov
adc
dec
xor
adc
pop
pop
or
push
prefetchnta
lcall
ja
xor
push
fcoml
xor
xchg
adc
and
iret
ss
push
fsubl
and
lods
bound
adc
dec
scas
mov
cmc
dec
mov
inc
rclb
in
sub
sbbl
rcll
test
fiaddl
dec
jne
adc
pop
mov
cwtl
clc
inc
divl
loopne
mov
xor
jg
inc
adc
cmpsb
sub
lret
mov
sub
or
call
and
push
xchg
fcoms
push
mov
mov
push
faddl
hlt
mov
sti
loope
sbb
test
sbb
mov
iretw
and
adc
mov
fidivs
inc
aas
xchg
and
std
or
xchg
stc
push
sbb
inc
adc
in
sbb
inc
mov
shlb
adc
loopne
mov
jl
fcoml
sub
xor
ja
out
test
or
and
jl
lcall
aam
push
ret
or
adc
mov
mov
inc
sub
int3
mov
fnstsw
clc
inc
aaa
jle
int
mov
enter
sbb
sbb
adc
or
and
jl
stc
mov
xor
sarb
or
dec
lret
popa
mov
xchg
and
mov
or
inc
inc
push
jge
lcall
or
flds
mov
lods
icebp
fs
mov
mov
aam
dec
icebp
dec
stos
cmp
ds
mov
and
xor
fsubs
jno
push
test
jno
je
jb
push
arpl
inc
sub
push
sbb
gs
jns
push
push
dec
xchg
das
into
pusha
into
dec
sbb
sbb
loop
cmp
lock
test
adc
inc
js
outsb
jae
xchg
push
jb
push
sahf
aad
xor
inc
loopew
dec
outsl
lcall
sbb
jb
push
push
push
and
or
imul
pushf
or
inc
scas
adc
pusha
insb
inc
pop
adc
es
inc
fdivs
icebp
dec
adc
and
addr16
sbb
jae
fidivs
inc
push
push
cmpsb
push
dec
dec
clc
xchg
cmp
gs
inc
lods
cmp
lret
dec
push
decb
dec
sub
rorb
dec
adc
adc
insl
mov
dec
sbb
nop
adcl
mov
jno
mov
cwtl
stc
inc
jae
mov
clc
mov
mov
xchg
adc
in
test
mov
mov
enter
sub
into
xchg
iret
pop
push
or
aam
lret
sbb
mov
pop
cmpsl
jl
push
xor
mov
out
add
fs
xor
sub
sbb
add
call
lock
mov
mov
mov
sbbb
incl
ret
nop
mov
pusha
pop
adc
sbb
mov
sbb
cmp
cmp
inc
int3
xor
inc
outsl
fst
imul
ret
adc
push
lds
xchg
popa
call
pop
xor
into
outsb
incl
inc
add
cmp
push
inc
cli
sub
aam
daa
push
in
inc
pop
mov
push
daa
or
lret
or
and
jecxz
and
cmp
test
or
jns
or
pusha
mov
addl
adc
or
popf
in
push
xchg
adc
lods
cmp
cmp
mov
movsl
inc
add
mov
or
mov
push
dec
js
xchg
and
adc
adc
aam
inc
cmpl
cmp
inc
pushf
push
pop
lods
mov
pop
sbb
adc
dec
jecxz
and
and
cwtl
jno,pn
inc
sbb
ret
mov
mov
and
mov
mov
fadd
int3
inc
mov
and
cmp
or
movl
mov
add
push
pop
xchg
clc
pop
je
popa
dec
arpl
jbe
std
test
sbb
or
loop
adc
and
inc
rclb
mov
or
outsb
inc
mov
mov
cmpsb
dec
dec
sub
inc
inc
dec
push
inc
push
pop
push
push
push
loope
or
adc
sbb
jno
adc
bound
or
daa
mov
enter
leave
dec
cwtl
push
mov
in
movsb
push
mov
jl
dec
dec
scas
xlat
cmp
adc
jge
xchg
mov
pop
adc
push
add
cmp
xchg
mov
test
loopne
test
and
inc
or
in
in
daa
sarb
fcoms
mov
sbb
add
xor
or
adc
rclb
push
cmpsl
test
rorb
aam
lahf
xor
ss
test
inc
xor
add
sub
enter
jo
and
rclb
mov
les
inc
or
and
mov
dec
jne
imul
mov
ficompl
and
test
sub
inc
sub
xor
fisttpl
ficoml
pop
xor
test
and
mov
jb
addr16
xchg
sub
jae
inc
ja
je
dec
mov
add
adc
pop
xchg
mov
inc
dec
enter
cmp
test
not
and
dec
push
inc
out
lea
je
cltd
or
or
cmpsb
mov
call
adc
and
stos
pop
int3
js
xchg
mov
jno
add
xchg
inc
and
sub
das
mov
dec
jb
jno
mov
and
dec
add
sub
iret
in
jp
jae
pop
mov
icebp
lods
inc
mov
mov
jp
ret
add
addb
pop
aam
jg
pushf
sbb
daa
adc
daa
bound
fcomp
ror
cmp
dec
sub
aaa
hlt
inc
into
mov
xchg
dec
push
cli
into
push
and
or
jle
pop
pop
mov
loop
shlb
and
xchg
test
jbe
jno
and
jle
mov
and
iret
nop
fisubrs
stos
shrb
add
xchg
push
push
mov
cmp
mov
push
aas
call
dec
int3
xor
mov
inc
xchg
inc
mov
ds
push
cli
mov
lods
mov
adc
and
jae
in
js
lret
hlt
movsl
mov
mov
shr
pop
push
call
or
sbb
fildl
xchg
mov
adc
adc
cmpsb
and
cmp
sub
adc
mov
leave
cmp
mov
mov
push
dec
cmp
movsw
adcb
jge
orb
mov
sub
adc
lahf
popa
and
or
pop
mov
psubsb
xchg
decl
xchg
jo
arpl
test
test
dec
test
push
and
test
rcll
xchg
jnp
jns
or
adc
inc
nop
pop
icebp
cmp
cltd
aad
and
pop
inc
xchg
iret
and
pop
loop
clc
test
lcall
loope
inc
push
lret
xchg
push
js
dec
adc
dec
mov
and
pop
jno
dec
fcoms
cld
cmp
adc
inc
jge
movsb
and
sub
mov
call
pushf
loope
jg
cmp
cmpsl
and
xor
xor
xchg
sub
daa
mov
ljmp
mov
mov
push
and
cmpsb
and
pop
dec
and
cltd
jl
sbb
xor
mov
lods
std
dec
xor
push
and
outsl
pushf
cmp
mov
lock
inc
adc
or
clc
xchg
test
or
lret
movsb
sbb
inc
inc
xor
cmp
inc
adc
imul
test
insb
and
cmp
dec
imul
push
inc
jle
pop
stos
mov
or
es
push
mov
push
std
lea
mov
scas
movsb
and
test
or
xchg
sub
jecxz
and
cld
shrl
add
adc
popa
stos
pop
decl
or
cld
stos
test
mov
adc
or
mov
shrb
push
inc
adc
jb
mov
movsb
or
enter
mov
push
mov
scas
dec
push
mov
mov
js
or
adc
sar
mov
iret
push
jecxz
test
sbb
sbb
jmp
jmp
jb
hlt
sub
lds
push
test
jb
call
push
inc
push
les
ja
popf
push
mov
lods
test
xchg
jmp
addr16
out
add
outsl
outsb
addr16
push
jge
shl
jecxz
call
or
rcrb
shll
sbb
dec
bound
jo
aas
outsl
inc
fistpll
push
pop
cmp
nop
adc
test
dec
lock
jb
in
das
and
and
adc
xor
xor
or
dec
push
dec
pop
push
add
push
or
dec
push
inc
sbb
inc
inc
dec
fisubrs
and
dec
ficoms
in
add
dec
dec
push
pop
add
pop
ret
mov
test
pop
fisttpll
lahf
jmp
pop
push
push
gs
jae
sub
xor
sub
inc
js
add
jge
and
fwait
mov
adc
dec
fs
mov
xor
adc
push
outsb
outsl
aas
or
add
xor
mov
out
push
loopne
mov
sub
adc
lret
xchg
sbb
in
sbb
sbb
sbb
xor
pop
pop
or
enter
mov
push
pop
and
cld
jo
in
jg
cmp
pop
enter
cwtl
repnz
rorb
stc
lock
fcoml
add
adc
xor
inc
pop
enter
xor
aas
xchg
sar
loop
add
adc
jo
in
jg
loopne
and
pop
jo
and
clc
and
les
pusha
add
adc
clc
adc
loop
aas
mov
or
xor
xchg
and
sbb
or
sbb
je
or
orb
or
enter
iret
add
into
fcmovnu
fcmovu
lret
fstp
fnstsw
loope
and
add
jns
adc
ds
push
movsl
faddl
add
outsb
je
push
scas
and
mov
xor
fiaddl
xchg
pop
mov
lcall
xor
sbb
or
mov
mov
and
adc
mov
jne
dec
movsb
loop
add
imul
cmpsl
cli
xchg
sub
aas
shlb
movsb
jo
add
and
int3
dec
call
pop
push
jbe
enter
sbb
and
mov
pop
call
inc
pop
pusha
mov
jo
js
adcb
mov
and
dec
rclb
loopne
call
pop
adc
or
add
gs
in
adcb
dec
sub
cmp
or
xchg
les
bound
inc
jl
add
mov
sbb
mov
sub
inc
test
sub
mov
adc
push
and
mov
shl
out
inc
shlb
add
fidivs
push
loopne
sahf
xor
insl
sbb
cld
fmul
or
sub
or
adc
fcom
enter
cmp
dec
inc
pop
insb
mov
dec
mov
les
aam
in
mov
and
dec
inc
xchg
pop
push
push
add
rcrb
inc
mov
mov
dec
add
mov
mov
adc
and
dec
or
mov
adc
adc
dec
adc
ret
out
ret
loop
jmp
and
cmp
sub
in
mov
hlt
mov
adc
cld
dec
and
inc
ja
mov
adc
xchg
and
push
inc
mov
adc
dec
dec
xor
jo
dec
inc
inc
orb
dec
push
xchg
push
and
mov
mov
pusha
jo
rclb
fs
dec
loopne
push
insb
mov
enter
adc
je
pushf
and
xor
xchg
lods
and
cmpb
les
xchg
mov
int3
inc
jo
mov
adc
mov
adc
cmp
and
inc
shlb
movsb
dec
cmp
loopne
test
dec
lock
adcl
and
mov
xchg
mov
rorb
dec
loopne
pusha
and
inc
clc
jo
int3
adc
add
xchg
nop
and
inc
inc
mov
and
dec
fcoml
loopne
mov
adc
and
dec
loopne
call
in
mov
sbb
enter
adc
and
push
adc
pop
sbb
add
or
add
dec
or
sbb
pusha
inc
adc
jo
adc
inc
dec
adcb
sbb
pusha
adc
xchg
mov
and
js
mov
adc
nop
and
inc
xor
movsb
pop
adc
jg
mov
dec
les
aam
mov
and
dec
dec
xchg
lock
dec
cld
mov
push
and
inc
add
dec
push
xchg
adc
addb
nop
adc
cmp
mov
inc
mov
mov
and
dec
js
sarb
mov
loopne
jl
movsb
xchg
lock
mov
dec
adc
and
dec
cwtl
xchg
sbb
inc
inc
mov
movsb
and
dec
pusha
xchg
test
mov
mov
js
adcb
mov
and
dec
aam
mov
enter
mov
adc
fmull
rclb
loopne
fwait
sub
adc
cmp
cmp
and
and
je
adc
xor
sbbb
cld
gs
sbb
lods
int3
cltd
jo
mov
les
nop
sub
shrb
adc
fmull
mov
fsubl
inc
inc
shl
dec
adc
and
dec
mov
nop
popa
jbe
or
bound
and
xor
push
pusha
mov
and
dec
nop
xchg
pushf
and
int3
adc
add
inc
enter
adc
and
inc
add
or
xchg
sbb
sub
mov
das
icebp
and
jl
mov
shll
mov
xchg
test
xor
sahf
rorb
sbb
pop
test
cld
and
xchg
sbb
shrb
adc
int3
xor
xchg
cwtl
sub
or
xchg
or
mov
cmp
pop
or
adc
dec
fs
mov
cmp
hlt
add
gs
jo
mov
xor
pop
loopne
or
shlb
mov
inc
int
clc
or
iret
sub
xchg
mov
fsubs
mov
aam
xor
test
xchg
xor
inc
nop
cmp
jns
xchg
int
sub
in
mov
or
loope
or
sbb
dec
push
lcall
mov
xchg
xchg
mov
mov
data16
rorb
loopne
sarl
adc
inc
mov
inc
clc
cltd
data16
pushf
mov
dec
data16
rclb
or
add
xor
sub
push
inc
xor
xor
rcrb
pop
adc
sbb
inc
add
fcom
mov
movsb
inc
mov
sub
xchg
dec
push
mov
sbb
fsubrl
xor
sub
mov
adc
sub
adc
xor
lods
lret
test
cmp
popf
jmp
and
and
mov
dec
enter
sbb
mov
xchg
enter
lcall
push
int3
add
inc
mov
or
je
enter
sbb
cld
push
loopne
shrb
inc
and
or
mov
xor
sub
push
xchg
lods
jno
and
sbb
loop
xor
push
cmpsb
sub
fs
sbb
xor
dec
xorb
rol
lods
sbb
push
push
shlb
xor
daa
cld
dec
inc
sbb
pusha
or
scas
and
hlt
shr
sbb
stc
lock
rorb
mov
mov
mov
das
push
jne
inc
adc
and
sub
subb
je
mov
mov
adc
or
inc
in
and
adc
and
fmull
nop
sub
xor
mov
sub
push
and
and
ret
add
dec
adc
xor
xchg
and
cmp
mov
test
push
movups
and
inc
mov
out
or
shll
dec
or
and
cmpsb
cmpsb
adc
mov
adc
sub
sbb
or
adc
and
dec
pop
xchg
jbe
mov
mov
adc
and
dec
hlt
mov
sub
sbb
sub
mov
jbe
mov
xchg
test
mov
ret
loopne
cld
and
sub
dec
sub
pop
mov
sub
sbb
mov
call
sub
and
add
inc
adc
bound
mov
dec
mov
inc
repnz
inc
sub
mov
adc
pop
dec
push
inc
cmpsb
mov
and
inc
add
push
xchg
and
cmp
mov
nop
and
dec
mov
inc
ljmp
adc
and
dec
push
xchg
insb
and
mov
fs
or
dec
in
xchg
cli
adc
cs
sub
fs
dec
pop
or
test
xchg
and
dec
mov
in
bound
das
push
adc
inc
es
and
adc
pop
adc
jle
mov
lods
mov
and
or
sbb
or
adc
and
dec
cmp
mov
or
filds
fs
push
jb
jecxz
jecxz
inc
adc
push
mov
cmp
dec
adc
xchg
push
ss
popa
fs
jo
dec
dec
push
cmp
pop
jb
push
popa
cld
push
inc
sub
adc
dec
jo
dec
out
jns
adc
and
and
loopne
lret
ds
std
inc
jbe
sub
popa
jb
push
lret
pop
dec
and
imul
dec
cmp
out
jbe
add
cmp
popa
pop
dec
inc
outsl
pop
movsl
cld
loope
fdivrl
imul
ret
push
lcall
push
pop
imul
hlt
or
inc
faddl
dec
mov
jecxz
dec
push
push
aas
mov
das
cmc
mov
sbb
or
inc
push
push
adc
add
fs
movsb
push
outsl
jg
sbbb
or
and
add
outsb
inc
push
or
arpl
sbb
shrb
push
dec
dec
call
arpl
movsb
adc
mov
jb
jnp
nop
inc
ss
dec
outsl
hlt
idivb
adc
inc
imul
inc
pop
inc
dec
jo
push
sbb
shrl
xchg
sbbl
cmpsb
rorb
push
mov
mov
push
adc
sti
dec
popf
sbb
in
jecxz
ss
sbb
push
xor
cmp
enter
pop
push
clc
mov
mov
dec
push
cmp
jg
lahf
xorb
test
stc
mov
mov
fs
adc
das
jl
mov
inc
iret
test
and
mov
dec
push
leave
inc
xchg
xor
inc
push
and
arpl
sub
cmp
fwait
adc
mov
sbb
cmp
sbb
dec
push
imul
sbb
stc
sub
negl
cld
inc
aam
jbe
mov
imul
fldt
cmp
outsb
adc
inc
stos
adc
outsb
inc
pop
lahf
movsb
sub
mov
push
movsb
pop
repz
mov
pop
pop
and
out
dec
inc
inc
adc
push
je
inc
mov
pop
push
and
jo
push
xchg
addr16
xchg
pusha
xor
jbe
sbb
outsb
sarb
inc
adc
mov
cltd
mov
inc
mov
inc
xchg
cs
bound
mov
stos
jbe
fisttpll
cmp
mov
pop
push
inc
mov
dec
imul
adc
cmc
dec
push
inc
xchg
xor
test
es
int3
cs
jb
mov
pop
cmp
imul
movsb
xor
mov
jne
mov
inc
cs
push
sub
push
inc
and
sub
mov
inc
mov
jmp
aad
pop
push
enter
xchg
in
mov
and
inc
push
cmpsb
fstpl
imul
push
push
incb
cmpsb
in
push
xchg
or
or
pop
inc
mov
jns
mov
fs
js
in
push
adc
push
jo
push
nop
dec
mov
dec
push
adc
mov
outsl
cld
jns
push
mov
adc
jp
xchg
or
iret
sarl
add
and
movsb
cs
pop
dec
adc
adc
sbb
pusha
lret
ret
push
cmp
stc
into
adc
jle
sti
test
jecxz
shrb
stc
loop
push
in
cs
jle
jae
scas
mov
subb
ljmp
in
inc
or
push
in
lcall
adc
mov
orb
lahf
es
adc
push
xor
xor
leave
sub
cmp
push
loope
jmp
nop
stc
xchg
stc
cwtl
stc
pushf
stc
mov
stc
mov
sar
clc
and
sub
jp
jl
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
sbb
xor
popf
push
sbb
jge
ss
ds
inc
lahf
dec
lahf
push
lahf
pop
lahf
data16
outsb
lahf
jbe
jle
xchg
sahf
lahf
cmpsb
lahf
scas
lahf
mov
mov
lahf
lahf
ficomps
negb
mov
cmp
dec
xor
cwtl
addr16
enter
fsubp
jmp
ss
imul
fwait
jmp
ret
stc
in
mov
aaa
inc
dec
dec
mov
xchg
fxrstor
pop
ret
jo
adcb
bswap
dec
jmp
hlt
ret
sub
xor
dec
mov
adc
jecxz
lock
aaa
in
call
data16
insb
clc
cmp
mov
icebp
cld
adc
cmp
sarl
push
xor
mov
jecxz
pause
or
jo
mov
lock
aas
mov
xor
push
test
bswap
xor
dec
in
icebp
iret
cld
add
jae
mov
rcl
jecxz
repz
repz
add
call
ss
cmp
aaa
xor
mov
ret
or
mov
das
cmp
xor
cmp
push
push
cmp
mov
push
test
sahf
lahf
ret
lahf
out
xchg
cmp
das
std
sbb
pop
lahf
imul
lahf
xchg
lahf
mov
rcrl
ss
dec
inc
pop
addr16
dec
dec
sahf
je
cmp
cmp
mov
mov
nop
push
push
jae
rcrl
shll
dec
fimull
jb
test
cmpsb
and
or
dec
mov
cmp
push
and
push
inc
dec
cmp
pop
mov
testl
lock
icebp
push
pop
ds
cmp
cmp
xchg
or
inc
and
sbb
xor
mov
xor
mov
xchg
in
lods
lock
hlt
rclb
ss
inc
sbb
jae
mov
xchg
xor
push
addr16
leave
mov
insl
rcll
jmp
dec
aaa
jb
je
sbb
cmp
xchg
inc
into
lock
arpl
insl
lock
mov
enter
cmc
cld
sub
cmp
cmp
cmp
aas
push
aas
pop
aas
mov
aas
clc
adc
push
xor
push
iret
pop
packuswb
mov
cs
out
out
out
out
out
loope
cmp
sbb
mov
mov
sbb
xor
mov
mov
xor
ss
cmp
ret
sub
decb
sub
xor
xor
and
xor
leave
jno
xchg
fsubrs
xor
push
iret
pop
shrd
inc
add
mov
iret
dec
sqrtps
cmp
nop
cmp
cmp
jp
xchg
xchg
cmp
cmp
mov
aas
ljmp
cmp
dec
pop
mov
lahf
cltd
pop
stos
lahf
mov
mov
lahf
into
lahf
fcomps
cli
xchg
cmp
sbb
xor
cmp
push
lahf
pop
lahf
bound
jp
add
xchg
aas
lcall
aas
mov
aas
sarb
fidivrl
loop
ljmp
or
mov
iret
and
sub
orl
pop
leave
bound
jp
or
iret
xchg
iret
lcall
iret
mov
iret
fcmovne
jecxz
test
aas
imul
push
fadds
sbb
xor
mov
loopne
out
out
lahf
negb
incb
sbb
movl
xchg
mov
or
repz
sar
loopne
in
repnz
idiv
add
xor
in
sub
sub
cld
dec
cld
push
mov
jo
jne
cmpb
xchg
jle
pop
jecxz
add
daa
xor
addr16
xchg
push
les
sub
jo
js
xor
pause
repz
repz
repz
imul
stc
lock
clc
sti
xorl
sub
xor
cmp
inc
stc
dec
xor
pop
cld
pusha
cld
push
cld
cmp
cld
nop
mov
test
mov
mov
sarb
fdivrs
loopne
call
jo
or
adc
sbb
cmp
cmp
inc
aas
dec
aas
push
aas
pop
aas
pusha
aas
push
aas
cmpb
aas
nop
aas
cwtl
aas
mov
aas
mov
shlb
xchg
lock
lods
push
aaa
or
mov
xor
cmp
addb
cmpsl
orb
push
out
out
out
out
out
out
out
jmp
pop
mov
mov
mov
out
out
out
out
pop
cmp
or
adc
sbb
sbb
xor
push
out
out
out
out
out
out
jmp
mov
mov
test
mov
mov
mov
out
out
out
out
out
out
pop
cmp
daa
or
adc
xchg
cmpsl
sbb
and
inc
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
in
nop
push
adc
sbb
sbb
and
pusha
pop
sub
xor
cmp
jle
jle
pop
je
jl,pn
lahf
test
nop
lahf
movsb
lahf
les
aam
fcomps
in
call
jl
push
sub
sub
xor
pop
and
mov
lahf
sbbb
lahf
nop
lahf
xchg
lahf
cwtl
lahf
pushf
lahf
lods
lahf
int3
lahf
aam
fcomps
in
call
hlt
ret
add
and
sub
xor
add
jle
pop
dec
adc
pop
aas
jl
test
jle
jle
jle
jle
jle
jle
pop
mov
in
call
hlt
lahf
clc
lahf
cld
cmpsb
cltd
sbb
popf
xor
idivb
jp
jl
jle
jle
dec
push
pop
iret
jo
nop
iret
cwtl
iret
pushf
iret
mov
iret
lods
iret
mov
mov
mov
iret
clc
iret
cld
fmull
ds
or
adc
sbb
push
iret
push
iret
pop
iret
pop
iret
pusha
lret
movsb
shrb
test
movsb
cld
lods
cld
mov
mov
mov
cld
cld
enter
ljmp
or
adc
sbb
and
and
movsl
repz
repz
repz
repz
js
jl
xor
repz
repz
shl
aam
fdiv
fdiv
loopne
hlt
hlt
cli
dec
cs
xor
and
jmp
add
daa
cmp
test
jo
js
jl
mov
test
enter
xchg
fsubrs
test
in
lahf
lock
xor
cmp
pop
les
mov
fcoml
xor
jl
mov
adc
adc
sub
cmp
cmp
pop
iret
pusha
iret
fs
push
je
js
jl
and
loope
cmp
leave
jmp
cmp
test
lahf
cmp
sub
xchg
loope
cmp
ret
xchg
loop
cmp
push
xor
pop
mov
popa
pcmpgtw
insl
iret
jno
jne
jns
xor
out
out
out
cmp
xor
sub
shll
std
jo
jb
je
jbe
js
jp
pop
int3
enter
lahf
faddl
imul
cmp
pop
add
sbb
and
cmp
idivb
loopne
pushf
fs
and
pop
leave
test
push
loopne
pop
loop
popa
xor
popf
jl
mov
lahf
lds
leave
lahf
int
enter
jle
jle
jle
jle
jle
jle
jle
pop
fisubs
push
push
xor
movsl
iret
add
mov
rol
fadds
cmp
je
dec
js
pop
xchg
pop
aas
stc
pop
inc
cmp
dec
sub
inc
cmpsb
ds
pushf
push
or
jle
sbb
cmp
ficomps
cs
mov
xchg
mov
sub
mov
out
repz
ljmp
or
push
xchg
outsb
dec
ret
les
dec
and
movsb
or
mov
shlb
add
pop
xchg
jle
mov
sbb
jp
jl
jle
jle
sbb
aaa
and
hlt
jbe
js
arpl
jb
xorb
jecxz
lock
out
sahf
ss
cmp
mov
test
loopne
movsb
in
lods
lock
sub
jno
pushf
cmp
mov
pop
out
in
push
hlt
push
ljmp
mov
mov
inc
in
stc
dec
std
push
leave
lock
ja
leave
inc
mov
leave
dec
rorl
sub
cmp
ja
into
xlat
movsl
add
lcall
scas
jle
pop
mov
enter
stc
loope
out
stos
aas
hlt
aas
stc
jmp
xor
dec
adc
sub
aas
stc
inc
stc
dec
stc
push
stc
stc
addr16
jo
jns
cmp
stc
xchg
stc
mov
aam
cwtl
dec
lock
push
sub
mov
xor
mov
mov
aad
add
cmp
js
sbb
cmp
add
mov
jmp
daa
sbb
dec
push
lock
outsb
clc
cld
fwait
cld
mov
cld
out
cld
std
cld
adc
cmp
cmp
pusha
cmp
cmp
aas
aas
sarb
fidivrl
out
aas
negl
and
loopne
lock
jns
jnp
test
add
aas
sub
push
cmp
icebp
cmpsb
mov
push
xor
je
dec
push
push
mov
push
mov
into
add
popa
loop
stc
leave
sub
dec
dec
cmp
and
push
xchg
inc
ret
ret
pop
enter
sbb
aaa
sub
lods
push
int3
cmpl
repz
fdiv
loopne
in
call
push
call
aas
and
aas
sub
jl
pusha
std
inc
cld
inc
cld
dec
cld
dec
xchg
add
push
lret
add
sub
aas
mov
nop
aas
xchg
aas
cwtl
aas
pushf
aas
mov
lods
in
xor
adc
cld
aam
fcoml
in
dec
enter
add
sub
and
xor
cli
dec
cmp
and
add
sub
and
es
and
nop
dec
xchg
lock
mov
and
cs
sub
in
call
cld
std
ret
xchg
or
adc
sbb
and
addb
push
jle
jle
dec
pusha
or
insb
imul
push
stos
addl
repz
jecxz
mov
or
in
sub
xor
addr16
jb
xor
xchg
pop
sub
jle
jle
dec
rcl
and
loope
cmp
leave
inc
sub
cmp
push
sub
mov
popa
mov
call
cmp
inc
dec
push
mov
nop
adc
loopne
lock
or
push
daa
test
popa
sbb
arpl
cltd
ror
fsubrs
xor
xor
test
and
inc
push
orb
pminub
xor
test
sbb
cmp
jb
xor
pushf
loopne
call
loopne
cwtl
in
mov
shl
sub
nop
mov
test
inc
je
jbe
js
jp
arpl
adc
push
jb
jp
nop
push
adc
and
xchg
loopne
stc
pop
loopne
daa
gs
mov
test
xchg
xchg
ss
sahf
jbe
js
jp
sbb
imul
dec
sbb
daa
in
call
inc
hlt
dec
clc
push
xchg
dec
pop
arpl
jns
jg
test
lcall
xchg
mov
shl
xlat
pop
dec
jle
jle
jle
jle
loope
in
add
push
add
or
push
ret
sub
das
pop
push
jle
jle
dec
dec
or
or
sub
aas
xchg
aas
popf
aas
mov
aas
mov
aas
into
and
es
in
repnz
sub
loopne
and
lock
xchg
clc
mov
cld
enter
sarb
clc
loopne
in
call
daa
cld
clc
out
out
or
pop
decb
inc
or
adc
sbb
and
and
cmp
push
out
in
test
dec
clc
aas
cwtl
aas
pushf
aas
mov
xchg
out
in
roll
clc
repz
testl
mov
adc
sbb
add
pop
pop
or
fs
imulb
sub
in
mov
enter
loopne
cld
push
sbb
and
out
sub
lock
sub
in
mov
in
xchg
mov
push
movsb
xor
repz
in
shr
pop
hlt
or
cld
inc
in
add
out
cmp
sub
dec
sub
mov
push
insb
sub
repz
repz
mov
or
int3
inc
in
xor
fdivl
mov
mov
push
xor
out
cld
sbbb
dec
xchg
and
stc
in
div
xor
enter
gs
jle
dec
loop
and
das
xchg
mov
ret
rcl
jecxz
lock
pop
pushf
push
rcr
sub
dec
dec
dec
ret
rolb
fmull
les
div
or
in
mov
push
imul
lahf
stc
pop
pop
cmp
pushf
aas
aad
loop
test
nop
dec
insb
lret
push
outsb
js
dec
pop
cmp
scas
cmp
gs
xchg
mov
pop
sbb
push
and
shl
jbe
fs
jle
aas
xchg
mov
mov
stc
sahf
xor
cmpsb
cld
stos
cld
scas
cld
mov
jle
mov
aam
idivb
jb
je
dec
add
sbb
mov
iret
adc
push
dec
sbb
es
sub
cs
ss
cmpsb
adc
inc
lcall
pop
mov
inc
push
cmpsb
sbb
fildl
daa
mov
xchg
out
out
in
xchg
ret
mov
mov
jle
jle
jle
jle
jle
jle
jle
dec
loope
push
and
nop
cwtl
lret
adc
sbb
mov
dec
cld
dec
mov
adc
pop
push
cs
call
cmp
and
fisubs
or
push
xchg
and
push
inc
stos
outsl
and
scas
cmpl
in
testb
data16
loopne
cmp
dec
cmp
setae
scas
iret
mov
ret
and
daa
xchg
inc
mov
sahf
mov
sub
and
mov
lock
mov
cmp
daa
adc
and
enter
pop
dec
xchg
push
dec
clc
pusha
iret
push
pop
addb
cmp
cmp
pusha
add
inc
xor
rorb
jbe
fabs
sbb
sub
es
jne
jns
jge
addl
add
loop
in
mov
ret
in
dec
cmp
iret
dec
dec
dec
loope
push
jl
es
lahf
je
xchg
sub
lods
mov
in
mov
addr16
sahf
adc
adc
ljmp
lods
js
mov
mov
xchg
loop
jl
cmp
cmp
out
in
xchg
add
repz
bnd
call
nop
das
mov
loop
or
cmp
mov
clc
aas
inc
and
movsb
xchg
enter
fcoms
shlb
xchg
sbb
pop
enter
lret
int3
inc
fs
mov
movsb
pop
pop
mov
and
sub
mov
les
jp
dec
push
or
inc
and
pop
mov
pushf
sub
in
mov
cld
enter
jle
jle
pop
clc
sbb
push
cmp
push
test
iret
adc
adc
sbb
push
jno
stc
dec
cli
je
lahf
pop
xchg
retw
cmpsb
xor
repnz
rcrb
dec
fdivrs
leave
hlt
movsb
cmp
sarb
add
inc
or
inc
adc
inc
dec
sbb
aas
and
sub
leave
add
push
rclb
push
fs
insb
lcall
and
test
sub
leave
and
cmp
adc
sbb
and
and
sub
sub
xor
dec
cmp
sub
jl
sub
cld
mov
mov
cmp
call
test
mov
and
add
sub
pop
aas
push
daa
jo
jl
xchg
lahf
cwtl
lahf
pushf
xchg
mov
xor
in
stc
hlt
stc
clc
sub
adc
mov
or
jle
jle
dec
push
add
mov
ficoml
mov
and
in
call
hlt
lock
leave
xor
and
add
fidivrs
cs
mov
lods
repz
mov
mov
jl
cmp
or
sbb
and
sub
cld
cmp
cmp
inc
xchg
xchg
dec
out
in
cld
hlt
pop
lret
pusha
popa
add
stc
insb
stc
jo
sldt
iret
mov
mov
jle
jle
jle
jle
jle
jle
dec
fadd
hlt
in
call
push
jbe
mov
leave
pop
push
bound
mov
dec
nop
ret
call
push
pop
mov
aam
dec
lahf
shlb
xor
xor
jge
jle
leave
adc
aaa
sbb
data16
or
xchg
popa
push
cld
jecxz
pop
add
cmp
clc
mov
cmp
cmp
js
sbb
cmp
jmp
mov
out
add
adc
loopne
jno
hlt
dec
daa
aas
jns
mov
add
mov
mov
ret
push
mov
pop
xor
adc
lock
pushf
mov
sbb
xchg
mov
xor
and
inc
ret
movsl
xchg
mov
xchg
xchg
xchg
inc
fs
in
out
cmp
dec
cmp
test
arpl
fcmovb
add
in
xchg
mov
cmp
roll
aas
lret
adc
mov
and
jo
mov
pusha
adc
and
call
scas
xchg
orl
pop
aam
sbb
in
pushf
cmp
shlb
cwtl
int3
mov
adc
icebp
push
loop
call
push
xchg
rcrl
mov
pop
pushf
scas
clc
xor
shrb
orb
and
leave
das
shll
fsts
push
mov
and
insl
cmp
popf
jl
pop
xchg
je
mov
mov
imul
cmp
xlat
adc
mov
xchg
in
xchg
inc
pop
aas
cmp
and
and
mov
xor
loope
scas
sbb
popf
pop
sbb
jo
mov
pop
inc
jge
cmc
pop
mov
push
xor
clc
sub
sbb
cmp
jmp
jbe
mov
xor
dec
lcall
or
js
pop
jl
xor
sbb
push
cmp
je
jbe
sbb
cmp
xchg
daa
loopne
das
lock
and
cmp
aas
cld
inc
xchg
sahf
jle
jle
jle
jle
jle
jle
jle
jle
sbb
cmp
sbb
mov
leave
es
or
mov
jmp
cmp
cmp
mov
scas
out
in
mov
mov
xchg
mov
iret
pop
rorl
xchg
iret
jecxz
stos
dec
inc
pushf
push
bound
outsw
or
popa
jns,pt
lock
xchg
add
std
lock
test
push
sbb
cmp
sub
stc
stc
lret
stc
shrb
or
loop
out
ljmp
pop
cli
adcb
in
call
dec
fs
mov
xchg
sbb
cld
lds
cmp
roll
add
push
pusha
mov
pop
pop
mov
xor
stos
inc
mov
in
xor
lahf
xchg
lcall
adc
push
cmp
inc
aas
or
lock
cld
push
mov
mov
jl
adc
popf
cmp
push
jnp
xchg
ret
test
repnz
mov
bound
test
add
adc
sub
xchg
out
in
lock
lods
push
scas
xchg
lret
adc
sub
sbb
mov
xorl
insb
pop
movsb
dec
leave
addb
xorl
ret
rcl
push
sbb
and
les
add
mov
sub
icebp
pop
sub
scas
test
xchg
les
cmpl
and
dec
mov
test
fists
adc
dec
rclb
call
xchg
addr16
lret
push
xchg
or
test
sbb
dec
hlt
ret
aam
pop
jp
mov
dec
repnz
shlb
popa
andl
pop
lock
xchg
test
out
sbb
ds
stos
xchg
ffreep
dec
ret
js
pop
xchg
mov
pop
mov
imul
cmp
dec
jp
add
cmp
ror
push
pop
add
pop
cld
jle
popf
jecxz
test
arpl
add
jns
or
mov
aam
outsb
push
cmpsb
data16
sahf
or
lock
sbb
cmp
cmp
sub
xor
push
xchg
lss
addl
es
ret
cs
push
or
fsts
lock
fcompl
fsubl
add
jmp
or
mov
imul
xchg
dec
push
leave
inc
mov
xlat
add
push
jl
push
loop
mov
push
xlat
aas
ret
je
out
dec
lret
mov
inc
js
shll
inc
sub
js
cmp
data16
xchg
mov
in
aam
js
daa
mov
rorb
call
jp
xor
and
jle
rcr
push
sbbb
dec
popf
outsb
adc
adc
sub
push
andl
or
popa
loopne
cltd
lock
les
jl
dec
or
lcall
into
pop
fistpl
mov
xchg
xchg
mov
in
mov
insb
cli
cmp
jbe
xchg
into
mov
push
xchg
test
pop
xchg
subb
ret
sub
call
or
rolb
shr
jecxz
lock
js
jp
jl
aas
es
adc
or
inc
jbe
js
dec
mov
adc
loopne
shll
into
inc
dec
popa
inc
sahf
inc
mov
push
and
aas
js
mov
out
dec
inc
lahf
mov
fildl
pop
enter
ljmp
cmp
lea
jbe
adc
subb
sbb
dec
and
clc
ds
cmp
sbb
cmp
jne
xchg
cmp
cmp
xchg
mov
jl
inc
cmp
cld
cmp
xor
lods
leave
fsubs
rep
cmp
adc
sbb
sahf
inc
push
pop
xchg
bound
jo
jne
mov
pushf
inc
push
mov
mov
in
add
pop
lret
movsl
flds
inc
leave
jne
test
xchg
add
mov
fdivrl
insl
jne
xor
std
clc
jb
cld
push
das
add
mov
xlat
push
in
xchg
sub
mov
mov
cwtl
sub
xchg
jbe
mov
jnp
or
loope
subl
lret
xchg
push
and
pop
add
mov
cmp
and
xor
cmc
sub
cmp
dec
mov
and
inc
popf
les
sbb
mov
cmp
inc
dec
xor
xchg
add
push
clc
shlb
in
fmuls
ds
push
ret
sarb
dec
or
subl
shr
out
adc
aad
sub
adc
movsb
jp
in
sahf
pop
and
push
lret
xor
pusha
inc
mov
adc
and
ret
inc
clc
dec
sub
push
sahf
mov
leave
das
push
push
pop
mov
pop
push
cmp
sar
cmp
pop
and
jnp
sbbb
cmp
pfrcp
subb
les
clc
les
add
adc
push
sti
shrb
jnp
push
sbb
scas
lods
or
sub
nop
jle
pop
cmpsl
or
fnstsw
sub
sub
mov
jo
dec
movsb
fsubs
mov
cld
ss
enter
ds
sub
dec
and
subb
sub
sub
add
inc
mov
dec
lret
dec
fdivs
push
dec
pop
into
inc
dec
xchg
inc
xor
and
adc
cmp
in
xchg
lock
das
or
xor
cmovbe
and
jb
push
gs
inc
aas
insb
aas
jp
addb
das
mov
inc
fdivr
call
jae
and
and
dec
adc
mov
imul
dec
push
fdivs
cld
test
mov
pushf
cld
lods
cld
mov
loopne
in
jbe
notb
hlt
lock
xchg
add
add
jp
cs
xchg
pusha
adc
test
lea
out
out
in
xchg
mov
imul
jmp
testl
cmp
adc
mov
or
sti
ret
fmull
push
sub
xor
jbe
pop
lods
adc
xchg
sarb
pop
int3
enter
xchg
and
and
pop
dec
invd
je
js
or
or
popa
clc
adc
cli
and
ljmp
bound
push
addb
fidivs
je
or
mov
jl
push
inc
scas
stc
int3
js
mov
rorl
js
sub
inc
xchg
adc
repnz
sub
xor
sbb
inc
dec
dec
ret
dec
pop
repnz
mov
dec
xchg
fimuls
cs
push
bound
adc
daa
jp
imul
fsubrl
das
or
rcrl
out
into
xor
pop
in
push
xchg
addr16
andl
stc
ret
sub
js
pop
lock
pop
orl
and
test
in
pusha
in
call
or
cld
movsb
xor
xor
lock
inc
cltd
push
fnstenv
js
jl
orb
adcb
mov
es
xchg
fadd
push
cmp
dec
test
stc
jp
xchg
lock
mov
sahf
aas
lods
es
xchg
hlt
das
sbb
into
nop
rorl
out
fdivrs
test
sub
jge
sub
mov
cmp
imul
aas
jl
pop
fs
mov
nop
xchg
stos
loopne
int
and
out
loopne
adc
xor
push
in
jle
jle
pop
stos
sbb
jo
jle
jle
pop
adc
pop
cmp
gs
jbe
jbe
xchg
push
pop
mov
mov
jmp
dec
push
orb
dec
sbb
lods
and
sub
dec
xchg
push
rclb
fcoml
add
cs
sub
shrb
lock
int3
data16
jecxz
add
sbb
lock
mov
hlt
sbb
ljmp
popa
dec
lods
fld
outsl
push
ljmp
xor
jmp
and
xchg
or
das
mov
sub
sub
loopne
mov
inc
jbe
jl
push
push
mov
xor
mov
add
push
sub
dec
xchg
pop
movsb
pop
mov
mov
dec
cmp
jle
bound
cmpsb
aas
jp
sbb
sbb
adc
loopne
jle
pop
je
test
mov
pop
das
ds
mov
sub
cmp
es
push
jg
mov
or
jmp
int3
adc
ret
push
mov
sti
xchg
popa
sub
and
dec
in
push
lock
mov
pop
jnp
stos
xchg
mov
fcmove
repz
shlb
lock
cli
push
sub
xor
mov
test
outsb
mov
and
nop
add
sub
ljmp
adc
push
rcl
js,pn
dec
loop,pt
es
ret
loop
and
rorb
mov
cs
xor
mov
push
dec
fdivr
rclb
hlt
or
sbb
out
mov
fiaddl
into
lock
sub
add
add
roll
and
stc
cwtl
cmp
leave
int3
fsts
clc
xchg
push
mov
insb
or
cmp
js
cmp
test
push
aas
mov
mov
mov
aam
mov
cmp
in
call
ljmp
les
ror
decb
in
pop
js
ud2
xor
sahf
xlat
push
out
lret
xchg
inc
and
xchg
xchg
push
and
in
mov
cmpsb
leave
outsb
xchg
dec
in
add
jo
lahf
hlt
sub
mov
push
hlt
fidivrs
mulb
push
cld
xchg
xchg
mov
cmp
xchg
adc
rclb
jmp
cwtl
push
push
pop
mov
xchg
in
mov
cmp
jle
sahf
iret
push
sti
test
cmp
add
mov
inc
out
std
loopne
add
cmp
mov
cmpsb
imul
test
loopne
jbe
add
xchg
lods
pushf
aas
mov
mov
push
loopne
and
dec
in
call
ret
or
mov
sarb
nop
mov
jnp
movsl
jmp
sub
sub
and
pop
sub
and
scas
sub
das
adc
repnz
das
mov
pop
add
sbb
and
inc
dec
push
stc
pop
push
nop
xchg
mov
int
jp
cld
adc
mov
jne
jge
xchg
mov
es
pop
mov
stc
das
add
inc
pushf
sub
xorl
and
mov
sbb
inc
mov
je
dec
push
mov
and
mov
fstpt
jecxz
in
shll
cmp
or
ss
loope
adc
ret
js
jle
dec
xor
push
ds
inc
and
popl
test
lock
push
insb
adc
dec
cmpsb
repz
dec
adc
sbb
xor
inc
loope
jmp
cmp
addl
mov
js
fs
mov
dec
jmp
xor
in
call
je
jmp
mov
clc
push
rorb
ljmp
or
sub
inc
mov
jno
xchg
in
mov
icebp
sarl
jg
inc
sub
punpcklwd
mov
inc
dec
lock
rcrb
ljmp
cmp
cmp
popf
add
cmp
push
pop
cmp
fdivrl
xchg
lods
leave
fcoms
xor
sbb
xor
roll
dec
repz
repnz
push
dec
adc
nop
mov
jb
mov
push
in
or
das
pop
inc
lock
xchg
rol
stc
jg
mov
fwait
sub
and
xor
loopne
repnz
mov
fmuls
jle
jle
jle
dec
test
call
cmpsl
push
pop
pop
mov
fs
outsl
or
in
clc
dec
sub
in
clc
dec
dec
jbe
adc
hlt
cmpsb
jp
push
xchg
addr16
xchg
mov
sar
es
jp
adc
sbb
or
pop
jns
ret
popf
inc
sbb
nop
iret
test
push
iret
xchg
inc
add
cmp
je
leave
sahf
ret
aas
loop
add
adc
push
and
ds
daa
dec
js
jle
jle
dec
outsl
lock
xchg
xchg
in
xchg
mov
repnz
xorb
or
rcrl
or
sbb
repnz
fcmovbe
push
adc
ss
pop
cmp
jl
and
lods
mov
stos
and
push
xchg
pusha
loopne
enter
fs
mov
dec
lods
subb
sarl
mov
pop
les
pop
xchg
mov
lods
orb
fcompl
les
pop
int3
in
aam
rorb
repnz
add
mov
and
in
push
aas
push
je
sub
mov
lret
les
or
in
mov
fadd
xchg
in
call
loopne
xor
mov
inc
leave
inc
aam
adc
mov
dec
jle
jns
cs
js
dec
loopne
push
call
repnz
inc
cld
inc
popf
xchg
dec
out
in
scas
or
pop
aam
pop
mov
xor
pop
test
xor
repnz
cmp
mov
jns
xchg
add
push
sub
jbe
inc
cmc
stc
jl
pusha
add
push
insb
mov
je
inc
les
mov
bound
mov
jle
pop
clc
lret
das
movsb
mov
mov
in
cld
lock
or
jne
xor
sbb
adc
cld
xor
sbb
inc
and
sub
fcomps
pop
push
pop
mov
lock
test
mov
inc
adc
mov
push
cmp
adc
adc
xchg
adc
push
mov
data16
daa
insb
lahf
dec
jb
jle
dec
aam
js
jle
dec
call
xchg
cwtl
and
cmp
jp
cs
inc
sbbb
movsb
push
dec
dec
lods
or
mov
testl
pushf
je
pop
add
scas
sbb
mov
push
push
lods
iret
movb
and
or
test
notl
rorb
fsubs
stc
inc
lock
mov
add
cld
dec
cmp
push
mov
push
stos
je
int3
xor
mov
pop
mov
fcoml
add
adc
xor
inc
bswap
push
jle
pusha
bnd
nop
cmp
xchg
mov
jg
ret
xchg
and
adc
lcall
mov
mov
mov
js
or
mov
xor
hlt
test
cmp
and
aas
notb
shlb
int3
inc
add
roll
push
inc
or
sbb
mov
inc
rorl
roll
pushf
push
push
sbb
sbb
sbb
sbb
dec
adc
cmp
imul
push
adc
arpl
outsl
xor
daa
push
pop
je
jb
jo
jo
jo
push
push
ds
in
pop
ds
pop
dec
dec
je
adc
data16
sbb
outsb
stos
data16
inc
push
imul
mov
gs
xchg
sbb
inc
sbb
cmp
push
lret
dec
mov
inc
and
sub
xor
jns
aaa
sahf
sub
mov
jne
push
push
push
or
jo
mov
push
bound
or
or
sbb
scas
inc
push
imul
jae
sub
add
inc
fs
cmp
sub
popf
xor
and
jae
scas
fs
inc
arpl
jbe
mov
inc
sub
and
pop
and
sbb
sub
push
jns
push
or
pop
mov
sub
nop
lea
push
and
push
or
test
adc
lock
pushf
and
xchg
adc
sub
mov
insl
data16
pusha
clc
push
jae
inc
loope
stos
cmp
sub
or
cltd
addr16
or
dec
sub
and
cmp
jb
les
push
jb
test
fisubl
icebp
jo
xchg
sub
push
scas
pop
aam
into
sbb
dec
fwait
mov
jnp
xor
lret
jo
xchg
addr16
and
push
xchg
movsb
xchg
push
xchg
les
fists
mov
or
sbb
outsb
cmp
hlt
scas
push
in
jno
sub
or
insb
pop
addr16
pushf
cli
add
je
jbe
dec
cmp
loopne
cmpsb
and
and
mov
dec
and
cmpsb
xorb
inc
mov
pop
dec
inc
in
or
push
repnz
out
rol
sub
sbb
aaa
adc
imul
xor
sub
lods
jns
xor
dec
lock
jo
dec
inc
pushf
hlt
das
cmp
sub
dec
inc
repnz
pusha
aad
ljmp
outsb
cmp
cltd
mov
jns
xchg
test
fmuls
imul
pop
cmpsl
and
jle
call
ljmp
mov
cmpsb
mov
cmc
mov
push
js
xchg
sbb
lcall
cmp
push
cmpsb
or
adc
add
fcomps
sub
es
inc
cmp
cs
bound
mov
mov
nop
sub
scas
out
sub
sub
stos
pop
test
jle
xor
cmp
rorb
xlat
cmp
movsl
push
imul
mov
add
popf
push
sub
or
in
mov
fs
mov
xchg
jns
sbb
insb
or
sbb
or
push
xchg
sbb
xchg
je
mov
or
jle
inc
js
mov
push
hlt
xchg
xchg
jp
jne
sahf
jbe
push
xchg
sbb
bound
aad
push
clc
push
mov
or
mov
sbb
test
ss
mov
mov
or
xchg
mov
xchg
cmpsb
sahf
dec
add
loopne
sahf
cmpsb
leave
inc
into
sub
jbe
gs
xchg
fs
into
sbb
or
mov
popf
push
sub
sbb
daa
cmp
xchg
jbe
mov
sub
fbstp
sub
mov
insb
andb
cwtl
lret
mov
dec
and
xor
and
daa
roll
js
inc
push
push
mov
lret
push
stc
dec
push
pop
adc
jne
mov
xchg
dec
push
lods
xor
imul
cmp
bound
mov
inc
cmp
push
clc
or
sub
insl
pop
rcr
dec
ja
push
or
outsb
mov
jae
jle
sbb
sbb
sub
sbb
cmp
mov
leave
adc
mov
cli
sub
inc
cs
add
imul
mov
inc
and
and
cltd
adc
iret
sbb
xchg
mov
cmp
adc
sbb
cmp
jne
inc
sbb
push
push
pushw
push
adc
or
pop
dec
inc
jae
adc
dec
sub
or
pop
jb
adc
dec
bound
and
push
sbb
inc
lret
je
jmp
dec
gs
sbb
sub
test
insl
insb
sub
and
mov
sbb
sbb
lea
sub
jl
dec
cmp
and
dec
dec
mov
or
inc
xor
add
pop
xchg
inc
arpl
dec
testb
inc
test
insb
xor
dec
adc
or
xchg
lea
lock
fsts
cwtl
test
adc
mov
aaa
or
adc
cltd
scas
imul
nop
outsb
rclb
je
xchg
mov
outsl
hlt
adc
fsubrs
iret
xchg
lret
xor
mov
leave
loop
jp
or
mov
push
shlb
pop
mov
mov
jns
out
leave
jl
xor
cmp
mov
ss
push
adc
es
fsts
movsb
fs
inc
shlb
hlt
xor
push
sub
movsl
bound
movsb
push
out
adc
mov
and
and
out
adc
mov
sub
mov
cs
push
stc
push
xchg
popa
jl
xor
push
call
in
adc
loop
xchg
push
mov
lds
dec
xchg
push
mov
jl
arpl
mov
sbb
gs
and
or
mov
jb
repnz
inc
nop
pusha
mov
mov
and
push
pushf
cmp
xchg
mov
inc
jp
jbe
or
jl
inc
adc
adc
push
dec
adc
jmp
pop
dec
icebp
sbb
fs
loope
cmp
data16
iret
call
add
xchg
push
and
stos
and
js
cmp
jb
pop
cs
pop
pushf
dec
dec
lretw
mov
sbb
inc
xchg
insb
stos
sbbb
inc
es
outsl
ljmp
rcrb
scas
loop
jne
aam
loop
fldcw
inc
popa
mov
cmp
pop
sub
cmpsb
adc
xor
mov
push
mov
jo
pushf
push
or
les
cmp
insl
and
in
push
data16
jbe
leave
addr16
testb
add
xchg
mov
int3
int
or
inc
out
sub
adc
mov
addb
insl
xor
repnz
leave
imul
xlat
popf
test
push
bound
sub
sahf
pop
pop
sbb
ljmp
and
pop
bound
sahf
adc
add
push
int3
pusha
jo
dec
push
mov
and
in
push
add
fdivl
jl
and
xor
fneni(8087
shrl
sbb
push
scas
xchg
test
outsb
lret
xor
cmpsl
sbb
imul
lcall
dec
pushf
push
adc
sub
popa
xchg
mov
adc
sub
and
adc
pushf
adcb
lret
or
xor
xchg
pop
out
dec
xor
jb
stos
sub
xor
or
inc
cmp
fcom
jecxz
sub
into
and
or
fs
cmp
mov
test
xchg
in
loop
movsl
cs
pop
sub
push
pop
icebp
fs
enter
testb
cmp
aaa
mov
add
fwait
cmp
popl
add
imul
call
pop
lock
add
in
push
je
imul
aam
push
dec
icebp
lret
aas
in
lahf
fldcw
push
cmp
jo
push
adcl
hlt
push
insb
ss
fsts
xchg
outsb
mov
push
jne
shll
push
push
adc
cmpsl
inc
dec
cld
or
mov
or
inc
inc
dec
nop
push
sub
push
xor
loopne
stos
mov
dec
and
pop
outsb
mov
sub
lods
jmp
push
movsb
inc
cli
cltd
add
loop
cmp
push
push
inc
shrb
ss
pushl
lret
fnstcw
leave
pop
mov
xor
push
adc
push
stos
js
adc
scas
popa
scas
sbb
pop
mov
push
insl
icebp
ds
imul
pushl
in
and
adcl
iret
repnz
insl
xchg
mov
ds
fistpl
subl
push
push
sbb
hlt
or
xor
gs
cmp
add
jne
inc
push
sub
dec
dec
arpl
jl
dec
push
and
jns
inc
or
or
lcall
call
out
push
push
dec
scas
push
xchg
out
dec
aam
inc
inc
ret
xor
jb
push
xor
xchg
or
mov
inc
cmc
arpl
jge
sub
or
sub
jle
jg
adc
add
pop
cmp
arpl
inc
je
inc
test
gs
les
inc
ljmp
add
inc
push
dec
push
pop
cmp
lahf
push
push
cmp
or
and
or
shll
test
or
inc
data16
cmc
or
cmpsl
fadd
addb
dec
push
nop
aas
lcall
xchg
inc
sbb
add
push
dec
mov
jge
jae
dec
jecxz
mov
inc
or
imul
dec
and
push
mov
cli
or
inc
ja
push
mov
mov
in
aad
dec
das
clc
pop
push
mov
cld
into
testb
or
push
and
dec
push
fisubl
or
dec
loop
rorb
or
xor
xchg
pop
pop
or
dec
jmp
orl
jne
mov
and
or
inc
mov
add
dec
push
inc
inc
test
fmuls
xchg
dec
inc
dec
cs
pop
add
dec
mov
sub
or
loop
mov
adc
jecxz
sbb
add
test
mov
ja
add
mov
sbb
dec
and
mov
ret
mov
sbb
jb
xor
adc
mov
int3
movsb
or
mov
push
daa
adc
inc
inc
leave
bound
and
test
addr16
jo
inc
push
xor
in
push
xor
daa
cmp
inc
xor
mov
adc
push
cmp
cmp
test
adcl
enter
lahf
shll
cmpsl
aas
cmc
push
iret
cs
pop
lds
stos
xor
lcall
jb
loop
sbb
inc
mov
adc
jo
subb
inc
or
or
mov
sahf
inc
adc
or
xchg
pushf
sbb
jl
push
fistpll
outsl
push
add
pop
adc
jae
adc
movsl
sbb
sub
inc
add
or
sbb
icebp
fistps
push
icebp
aas
push
cmpsb
test
pop
add
adc
add
push
lods
stos
sbb
sbb
cwtl
pop
leave
add
in
xor
cmp
cmp
pop
adc
inc
push
popa
adc
jno
add
push
adc
mov
and
push
shll
jb
adc
pop
and
loope
arpl
push
mov
inc
xchg
push
fs
ret
je
pop
rclb
gs
mov
ret
shll
repz
xchg
movsb
test
hlt
movsl
mov
aad
add
push
data16
xchg
cmpsb
mov
out
aaa
inc
push
add
xchg
cmpsl
mov
xlat
out
notl
in
scas
mov
aad
dec
andl
xor
add
add
adc
adc
rcll
xor
push
loope
xchg
cwtl
jb
adc
push
movsb
addl
pop
add
pop
loop
orl
decl
mov
mov
repnz
push
and
mov
mov
xor
scas
add
aam
mov
in
jo
add
dec
cmova
movsl
je
in
pusha
in
mov
xchg
loope
test
cmpsl
movsb
adc
cli
stos
prefetchwt1
js
pop
xorb
push
out
es
bound
mov
andb
add
loop
jmp
pop
test
cmc
push
and
or
loopne
idiv
pop
incb
mov
jns
jle
add
sub
aas
push
add
movsl
cmp
xor
lds
addr16
jg
fildl
xchg
fsubs
int3
or
dec
add
sbb
out
xorps
add
fdivrl
jns
fidivl
xor
js
adc
add
add
dec
das
push
pusha
imul
lret
push
add
sbb
loopne
xchg
add
mov
and
pop
mov
sahf
out
insl
lea
arpl
int3
push
les
cmp
jl
sarl
lahf
push
sti
add
fnsave
add
out
jecxz
and
jp
das
aad
arpl
in
xchg
sbb
lock
mov
inc
add
cli
mov
sub
mov
mov
add
int
pop
loop
lret
mov
xor
pop
add
lods
sahf
movsl
shll
add
mov
fisubrl
and
mov
mov
insl
arpl
decb
or
pop
add
out
or
mov
aas
mov
add
pop
xor
or
add
divb
insl
add
xor
jnp
out
xor
enter
pop
push
jmp
or
lcall
jnp
sbbl
add
xor
mov
jmp
cwtl
fmull
add
movsl
mov
cmp
rolb
test
mov
das
dec
adc
add
loop
out
sbb
cmp
jno
mov
cs
jg
rep
dec
arpl
fsubrp
lods
adc
test
lret
add
pop
ret
iret
jns
mov
shl
cmp
add
sbb
bound
push
inc
add
ljmp
sbb
fldt
jno
out
repz
mov
stos
xor
cmpsl
test
push
pop
sub
lea
dec
sub
and
insl
mov
add
js
xlat
loope
mov
mov
mov
mov
arpl
pop
cmp
ffreep
imul
mov
dec
add
sbb
stc
jne
mov
add
mov
fbld
cmc
xor
and
pushf
or
mov
dec
add
dec
enter
in
imul
push
out
mov
mov
mov
add
xor
incb
out
push
xor
xorb
push
sti
adc
and
pop
add
lret
add
pop
pop
sarb
sbb
sbb
add
mov
adc
add
dec
dec
sub
inc
cmp
stos
or
mov
mov
mov
fldt
or
add
loop
inc
xor
mov
sbb
dec
in
and
test
add
inc
or
jbe
sbb
cmpb
movsl
ret
pop
pop
push
add
sub
popa
add
hlt
pop
mov
cltd
add
add
out
mov
jg
out
std
add
xchg
ljmp
dec
xor
js
xchg
mov
arpl
fadds
mov
out
xor
jle
call
sbb
out
shll
pop
or
jl
testl
or
test
verw
sub
shll
popa
cli
push
cmp
repnz
cli
jp
push
push
insl
jns
or
xor
aam
and
mov
cli
in
sarl
jno
jne
add
mov
je
into
pushf
sub
push
lret
jb
fbld
push
in
push
lods
mov
cmp
adc
sbb
out
jae
push
mov
lea
push
insl
outsl
sub
cmp
dec
sti
jno
and
push
mov
jne
jmp
stc
mov
outsl
mov
pop
pop
test
mov
xor
popa
hlt
add
sub
ss
xchg
fcomps
sbb
sbb
jne
xor
fildll
divl
rcr
cmp
inc
mov
clc
int
incb
dec
js
ja
jge
repz
ret
xchg
adc
cmp
lcall
xor
jmp
jp
jne
sbb
out
pop
test
mov
pop
mov
mov
not
sti
mov
cli
cvttps2pi
or
add
inc
inc
popa
scas
outsb
fldcw
jbe
cmp
add
nop
loop
pop
sti
push
add
inc
fcmove
int
dec
ret
cld
or
sub
sbb
pop
add
insl
cmp
jp
xor
scas
cmp
inc
cwtl
push
inc
pop
or
call
cli
lea
int3
pusha
adc
fimuls
add
into
sub
addr16
pop
dec
lea
mov
add
jg
rolb
out
fmull
push
push
jbe
dec
loope
add
addr16
dec
jge
mov
lds
xchg
add
cmp
push
pop
cli
pop
jg
outsl
and
outsb
in
add
fcmovbe
insl
pop
das
ljmp
fisttps
add
lods
mov
xor
pop
pusha
sbb
add
lock
test
sbb
je
lds
pop
sti
add
stos
gs
mov
popa
fsubr
jge
imul
lock
hlt
mov
dec
mov
cmpsl
add
xchg
cli
aas
mov
nop
or
mov
mov
jp
add
mov
pop
push
and
push
popa
xor
rcr
ljmp
push
mov
cmp
stos
inc
mov
jg
jnp
add
lods
add
add
push
pusha
mov
pop
add
outsl
repnz
pop
sub
xor
test
add
popa
aam
ljmp
insl
ja
rcr
and
scas
cmpsb
sti
mov
jno
or
inc
dec
add
fstpl
xor
push
mov
mov
pop
gs
dec
rclb
ljmp
in
sub
cli
add
push
popf
pop
call
jl
pop
dec
lock
or
push
out
xor
mov
sti
stos
outsb
pop
mov
push
xchg
xor
nop
arpl
out
add
dec
pushf
popa
inc
fcomps
ljmp
mov
add
fldenv
add
mov
dec
add
cvttps2pi
movsb
fistps
jge
scas
aam
xchg
jg
clc
mov
xor
sub
jge
add
movsl
cmpsb
mov
out
lock
in
add
cmpsl
test
mov
arpl
cld
es
cmp
adc
cmp
mov
mov
iret
add
xchg
inc
sbb
dec
pop
add
cmc
paddusw
das
xor
fildl
jno
insl
enter
add
cli
inc
xor
clc
ds
clc
add
push
hlt
cmp
adc
xchg
fdiv
sbb
stos
int
xlat
push
data16
add
sub
xchg
jge
sub
add
adc
xor
rorl
hlt
mov
data16
add
mov
nop
out
movsb
add
pop
es
xor
and
and
repz
cmp
rclb
sub
lret
mov
scas
ljmp
popa
mov
pop
xor
add
sbb
sbb
dec
and
sbb
fadds
add
xor
pop
inc
into
jle
sti
pop
pop
pop
add
mov
or
add
sub
rolb
pop
jmp
dec
xor
rolb
fdivr
stos
and
and
add
pop
cld
cs
pop
add
dec
shrl
in
fsub
punpckldq
xchg
jne
or
mov
add
and
out
scas
dec
shlb
fwait
or
xor
add
in
faddl
ljmp
movsb
add
pop
mov
push
pop
ljmp
fcomp
jmp
std
mov
add
bound
js
stos
mov
dec
cmc
ret
in
hlt
push
mov
sarb
mov
push
add
imul
and
iret
adc
dec
inc
ja
scas
ficomps
lret
cwtl
mov
repnz
arpl
cli
push
jle
add
mov
fdivs
cs
rcr
add
xchg
mov
dec
xchg
or
lods
add
enter
push
outsb
int
inc
scas
ss
jae
mov
sahf
xchg
jno
add
jg
mov
xor
add
xor
sub
add
or
pop
cli
pushf
ficompl
or
addr16
cld
lret
cs
or
add
hlt
push
jnp
xchg
mov
cmp
or
cmpb
add
lods
xchg
js
enter
ss
xor
mov
mov
add
pop
cltd
xchg
inc
js
pop
in
and
dec
and
xchg
popf
xor
hlt
push
in
out
xchg
dec
fists
neg
pop
sub
sub
fs
sub
inc
or
push
dec
push
push
xchg
mov
rcll
jo
movsl
and
inc
aas
pushl
pop
in
adc
gs
xor
xor
cmp
imul
and
test
xchg
test
adc
add
sub
push
adc
arpl
adc
nop
dec
or
icebp
push
mov
dec
mov
jb
es
push
aas
subb
or
nop
sbb
xor
mov
add
or
adc
add
xchg
data16
insb
lret
ss
lcall
sbb
xor
push
and
cltd
jo
decl
movl
aad
hlt
mov
dec
sub
sbb
lret
xchg
or
inc
add
cmp
push
insb
dec
sbb
add
xorl
in
mov
shr
xor
xor
call
mov
iret
ret
inc
sbb
insb
movsb
into
jae
aam
arpl
inc
push
ret
xchg
mov
insb
adc
in
push
adc
inc
jge
insl
inc
xchg
mov
stos
imul
lcall
sbb
adc
dec
inc
pop
mov
lret
popf
jo
adc
divb
imul
insl
sbb
xor
and
inc
cmp
mov
or
cltd
rorb
and
aad
add
clc
push
inc
jae
xchg
jge
adc
dec
jae
addr16
push
popa
insb
je
shll
adc
push
mov
dec
cmp
xchg
dec
dec
mov
incl
or
or
out
adc
sub
mov
pop
bound
pop
fs
xor
or
jbe
xor
lods
jp
int3
je
das
popa
or
ds
mov
inc
inc
sbb
outsb
or
and
jo
pop
lcall
xchg
dec
push
xchg
or
jg
push
sbb
das
repnz
push
sub
inc
sti
adc
lock
add
test
and
mov
loopne
pop
or
or
fisttps
in
and
push
mov
inc
psubd
xor
bound
out
or
pop
lds
or
adc
push
adc
mov
pop
add
loope
sbb
push
das
adc
cs
mov
scas
iret
js
jo
xor
sbb
cmp
jle
dec
mov
and
xor
xchg
cmp
mov
adc
dec
jb
pshufw
movsl
dec
jp
xchg
loope
int3
cmp
aas
and
cmp
insl
jo
sahf
insb
popa
repz
sbb
pop
pop
popf
sbb
pop
das
inc
mov
jmp
lahf
pop
dec
push
dec
or
add
sub
jae
hlt
xor
in
jecxz
fmuls
outsb
incb
bound
xor
negl
push
aaa
or
cmp
out
cmp
cltd
add
and
data16
push
inc
jno
sbb
into
add
mov
jns
addr16
aam
jne
cmp
xor
sub
jns
mov
lret
inc
ret
inc
gs
ret
adc
and
scas
in
mov
arpl
and
sub
gs
jb
pop
sub
inc
pop
scas
pop
dec
sub
mov
cs
adc
data16
jae
scas
mov
test
pop
cmp
sbb
mov
jno
add
cmp
gs
imul
pop
xor
and
fiaddl
es
dec
push
or
enter
inc
imul
sub
aas
sub
ficoms
test
subb
sub
outsl
fs
push
sub
xor
sub
dec
cmp
stos
add
cmp
call
out
push
inc
inc
inc
xor
pop
fbstp
mov
sub
leave
aaa
mov
sub
pushl
adc
inc
cmp
in
mov
sub
imulb
lods
inc
fdivs
jae
add
and
inc
ss
lods
or
jo
imul
fistl
daa
cmp
sub
push
imul
sub
adc
insb
jne
adc
les
pop
rcrb
movsb
jmp
add
dec
shll
mov
push
xor
aaa
and
dec
cmp
incb
cmp
adc
xor
or
outsb
sbb
lahf
pusha
or
es
or
pusha
xor
sub
or
mov
adc
xor
cmp
inc
jmp
iret
addl
addr16
ljmp
adc
jae
inc
inc
jno
fwait
adc
pop
mov
xlat
push
xor
xor
movsl
push
lods
hlt
sub
pop
shrl
ja
dec
hlt
into
test
mov
push
ja
adc
push
xor
fisubl
ss
push
js
in
push
and
xor
inc
xor
insl
ss
into
scas
push
ror
cmp
xor
xor
hlt
xor
xor
pop
xor
xchg
std
push
push
test
adc
fadds
xor
mov
and
xor
push
in
and
xor
mov
or
xchg
or
sbb
xor
sbb
or
movsb
jns
aas
push
iret
mov
int
mov
nop
mov
sbbb
fnsave
popf
push
xor
xchg
cmp
xchg
and
xor
push
dec
sub
and
cmp
inc
mov
inc
imul
pop
jl
idiv
pop
push
xor
dec
scas
jns
cs
pushl
gs
mov
mov
mov
and
test
ss
lret
cmp
das
stos
xchg
test
adc
lret
sbb
dec
pop
pushf
outsb
imul
jp
loop
pop
pop
add
pop
push
push
dec
inc
lock
dec
inc
enter
dec
loopne
outsl
xor
adc
adc
pop
pop
pop
test
into
scas
or
or
lret
add
inc
fstpl
mov
cmp
in
or
sbb
add
je
push
sbb
dec
fs
sbb
jo
lock
imul
sbb
and
sub
and
or
adc
cmp
push
mov
call
jbe
adc
dec
adc
and
inc
and
jne
cli
and
dec
adc
gs
jae
add
and
loope
push
jb
push
inc
inc
cmp
or
addr16
in
pusha
ds
das
in
or
sub
js
loop
repnz
leave
fsubrl
and
push
xchg
xchg
xor
and
in
fstps
outsb
jns
xor
and
adc
inc
sbb
fcoml
adc
push
aaa
mov
push
int3
mov
aam
outsl
mov
add
cltd
adc
loope
mov
mov
dec
shlb
push
xor
push
cmp
push
test
pop
push
jo
cs
pop
ficoms
and
inc
arpl
mov
sub
std
js
repz
outsb
es
lods
lock
in
cmp
aaa
jbe
add
movsb
dec
adc
push
popa
iret
rolb
in
int3
shll
sahf
xor
dec
or
les
push
pop
out
clc
mov
jne
jae
inc
cmp
push
push
sbb
push
jo
xchg
add
pushf
aam
sbb
pop
and
iret
daa
sub
jo
mov
mov
jo
pop
dec
mov
pop
loopne
mov
icebp
lods
add
test
xchg
sbbl
test
pop
pop
mov
add
aad
fisttpl
loopne
in
jmp
push
push
testb
add
je
jbe
js
jp
jl
jle
jg
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
sbb
add
popf
or
adc
sbb
pop
cmp
sub
jno
jp
test
mov
lahf
rcrl
lahf
jmp
cmc
add
and
sub
lahf
dec
lahf
pop
lahf
data16
jb
jle
mov
scas
lahf
mov
lahf
loopne
in
test
add
xchg
and
xchg
cmpsl
dec
push
out
out
out
out
out
out
out
out
out
out
out
loope
add
sub
cmp
dec
jmp
ja
xchg
xchg
stc
cmpsb
stc
mov
vpmullw
in
testb
add
mov
iret
aaa
cmovs
out
mov
popf
iret
scas
iret
ror
iret
jecxz
cmc
pop
push
sbb
dec
dec
popa
je
xchg
cltd
iret
lods
iret
mov
ret
clc
or
xchg
pop
mov
pop
shrl
xor
rep
repz
lock
or
in
call
fs
jns
cld
movsb
cld
mov
cld
sti
cmp
adc
daa
cmp
cmpl
lds
fcoml
repz
and
cmp
cmp
cwtl
aas
mov
enter
stc
or
dec
sub
jne
mov
fld
repz
iret
pop
pcmpeqb
vphaddbq
faddp
clc
push
adc
fs
jg
fwait
jecxz
repz
out
wbinvd
in
call
jp
xchg
clc
mov
iret
cld
in
mov
inc
mov
ret
jle
fwait
jecxz
repz
lock
adc
in
call
mov
stos
clc
leave
cld
call
cmp
fs
ret
push
jecxz
add
mov
arpl
orl
adc
xchg
daa
mov
mov
lods
jecxz
lock
push
in
js
fwait
hlt
mov
in
mov
hlt
mov
cld
cli
cmp
sbb
cmp
cmp
negl
sbb
lahf
mov
ds
cli
sbb
dec
inc
mov
xchg
movzwl
sbb
sub
sahf
rol
loopne
sbb
cmp
arpl
mov
mov
fidivrl
sbb
cmp
cmp
jnp
mov
sbb
jo
cltd
movnti
outsl
push
scas
inc
out
push
xchg
movsbl
pop
adc
iret
movswl
and
mov
ret
shl
and
dec
call
into
hlt
sti
cmp
daa
cmp
cmpb
frstor
or
mov
xchg
cmpps
pop
xchg
dec
mov
fiaddl
xchg
cmp
shl
es
in
call
call
cli
jp
stos
lock
sub
cmp
push
aam
push
dec
cmp
shrb
add
fwait
ror
jmp
mov
shrl
addr16
sub
jbe
stos
loopne
jb,pn
je
jbe
js
sbb
das
and
pop
sbb
xor
popa
adc
dec
roll
xor
je
jbe
sbb
xor
sahf
mov
daa
gs
sahf
popa
fdivs
xchg
ret
ss
je
jbe
ja
jns
jnp
jge
pop
xlat
mov
mov
enter
inc
mov
mov
xchg
je
mov
out
cmp
in
call
cmp
popa
sbb
push
dec
pusha
mov
sbb
loop
and
fs
cmpsb
popa
out
sub
push
lods
fsubr
inc
jb
je
jbe
sbb
inc
cmp
add
inc
inc
mov
adc
push
inc
lcall
shrl
xor
dec
add
xchg
dec
sbb
popa
lock
aaa
leave
jge
les
or
push
jbe
sbb
dec
sub
add
dec
inc
xchg
popa
fmull
leave
outsb
shll
shl
popa
fstl
leave
jno
mov
rcrl
xor
push
adc
notb
popl
push
sub
jne
ret
pcmpeqb
sbb
push
inc
popf
xchg
pop
loopne
das
daa
jge
lret
pop
sbb
imul
je
jbe
sbb
pop
inc
popf
xchg
pop
in
xor
pop
daa
leave
js
leave
pop
jb
je
sbb
pop
setge
mov
add
addr16
mov
xlat
mov
leave
pushf
shl
arpl
je
push
jmp
leave
xchg
shr
gs
je
cmp
data16
shr
addr16
leave
xchg
shr
push
sbb
imul
dec
daa
lahf
inc
imull
leave
cmpsl
sar
insb
jb
sbb
insl
or
adc
std
pop
les
daa
js
shll
leave
xchg
loopne
jb
je
sbb
jb
xchg
inc
mov
push
int3
jne
dec
test
fwait
mov
mov
js
cmp
int3
jns
dec
mov
movsl
jnp
in
call
cmp
inc
mov
mov
test
in
addb
sbb
cmp
int
xor
xor
push
nop
mov
call
push
stos
xchg
dec
jb
xlat
xchg
nop
lahf
mov
imul
cmp
inc
lret
xchg
xchg
mov
call
call
push
into
ss
sahf
nop
push
xchg
outsb
mov
test
xchg
adc
jp
jecxz
cmp
mov
and
xor
pop
nop
leave
xchg
xor
lahf
cmp
loopne
dec
inc
mov
mov
aad
fwait
inc
push
scas
pushf
sbb
mov
rcrb
lahf
sbb
mov
inc
nop
mov
es
cmp
out
push
inc
movsl
cmp
mov
std
cmp
push
dec
out
aaa
pop
into
stos
sbb
stos
add
pop
in
cmp
sub
xchg
mov
ljmp
dec
push
ret
inc
scas
mov
nop
pushf
mov
in
cmp
lock
inc
loopne
sub
mov
mov
cs
cmpsl
mov
imul
mov
jo
in
shll
ret
fstpt
ret
pop
push
aam
push
inc
into
lds
enter
cld
movl
mov
mov
lret
ss
mov
xor
in
into
repz
ret
iret
aaa
nop
mov
cmp
cmp
mov
roll
aam
in
cmp
dec
push
rcl
push
inc
fcom
pop
xchg
loopne
fs
icebp
cmp
jbe
sti
fildl
fstl
in
cmp
sbb
mov
loopne
nop
mov
cmp
push
push
fninit
arpl
in
nop
cld
in
cmp
or
inc
test
jmp
ljmp
sti
in
xchg
adc
pushf
cmp
sub
mov
inc
inc
int3
lock
nop
in
jb
decl
repnz
sbb
hlt
xor
ret
in
cmp
insl
add
testl
cmp
push
aas
out
ja
pop
inc
cwtl
std
sub
fdivrl
ljmp
popf
out
adc
push
jne
add
add
xchg
mov
add
popa
addl
adc
cmp
loopne
or
push
add
loopne
fildll
push
test
xor
add
add
add
daa
jp
filds
out
push
xchg
xchg
sahf
lds
or
pushf
push
adc
pop
adc
add
xor
xor
and
popa
and
xor
push
jno
sbb
add
es
add
sbb
shll
ss
mov
inc
inc
aaa
inc
arpl
pop
push
push
sbb
repnz
mov
sub
add
jne
cmp
dec
dec
pop
dec
pop
lods
scas
test
movsb
pop
test
xchg
xchg
xchg
xchg
cwtl
add
cmpsl
test
shlb
mov
mov
leave
lret
add
fcomp
in
out
call
div
clc
adc
cli
adc
xchg
add
int
insl
mov
adc
fdivr
xor
andb
inc
add
xor
jno
inc
adc
bound
xor
mov
mov
lock
loope
xor
add
sbb
icebp
mov
sbb
add
or
xchg
inc
je
mov
add
push
aaa
test
or
xchg
movsb
mov
arpl
sub
data16
out
dec
pop
push
test
enter
cmp
pop
imul
fldl2t
add
sub
dec
pop
push
mov
lcall
cmp
lea
sarb
sub
add
dec
xchg
std
add
jg
inc
sahf
mov
out
fnstsw
inc
negl
fidivrs
out
mov
push
lret
scas
xchg
add
push
call
cmp
pop
mov
add
imul
inc
inc
fidivl
dec
scas
cs
adc
jle
mov
mov
push
sub
add
cmp
pop
add
jbe
dec
pop
loope
mov
mov
inc
jno
je
mov
cmpsb
scas
add
mov
dec
add
repnz
test
push
insl
pop
std
and
add
pushf
fisttpl
jb
push
add
mov
stos
add
mov
in
test
add
cmp
imul
mov
push
jb
add
loope
mov
cwtl
sbb
iret
dec
add
xchg
xor
lcall
ljmp
inc
test
enter
sub
addl
dec
testb
fisttpl
jmp
xchg
movsb
in
sbb
sbb
jg
jl
and
jo
ljmp
push
mov
je
add
or
jno
add
pop
lock
std
stos
add
lcall
cmovle
jp
jo
jae
cmp
mov
push
add
movsl
lods
lcall
jno
mov
aas
dec
imul
insb
test
sub
mov
and
fiaddl
outsl
push
mov
mov
imul
jecxz
sbb
mov
add
xchg
int
inc
jp
add
stc
outsl
fldenv
add
adc
ret
inc
xor
fs
cmpsb
mov
dec
gs
and
add
jp
or
ror
jmp
pop
pusha
dec
sub
or
sahf
sbb
or
mov
xor
or
fnstenv
ss
mov
add
pop
xchg
inc
adc
push
mov
ret
cmp
xchg
add
sbb
es
movb
jg
lods
mov
sbb
rcrb
insb
add
nop
mov
das
aam
cwtl
cmc
push
testl
dec
sahf
inc
loopne
je
jmp
adc
mov
pusha
jo
cli
shlb
push
test
dec
aam
data16
sub
and
jg
inc
sbb
push
data16
pop
dec
mov
xchg
xchg
or
movsb
roll
push
sti
adc
jle
dec
jns
gs
dec
mov
or
lds
fcomp
fucom
inc
jne
orb
fwait
dec
jnp
lcall
sarl
add
int3
jge
movl
cmpb
in
and
sub
mov
pop
add
in
and
xor
add
test
aas
add
jmp
outsl
testl
pusha
shll
xchg
jle
sbb
xchg
mov
push
add
inc
xor
mov
cmp
push
mov
sub
enter
dec
fwait
push
rcrb
out
lds
push
addr16
push
push
shlb
lcall
inc
push
push
push
and
push
sub
mov
inc
pop
push
cmp
es
sti
jg
mov
lods
jbe
jae
cmpsb
xor
pop
test
ds
bswap
popl
pop
add
fistpl
push
popf
pusha
movl
add
rorb
add
int
sub
hlt
add
push
popf
add
mov
pop
mov
dec
insl
xor
mov
sub
add
and
dec
shlb
and
add
add
adc
pop
fsubrs
bnd
mov
inc
jmp
daa
cmp
xor
lods
sbb
push
cmpsb
mov
push
cli
rcrb
cld
xchg
nop
or
shlb
sub
add
addl
in
inc
mov
push
pop
push
das
subb
add
js
fs
mov
add
jmp
add
movsb
push
iret
test
add
pushf
xchg
sbb
mov
sub
addb
dec
out
mov
pop
int3
mov
dec
adc
xchg
lock
inc
xor
lcall
fsubs
cmp
or
inc
mov
setp
rorl
or
aas
hlt
add
lret
lock
add
dec
push
xchg
dec
test
icebp
cmpb
xchg
aad
sub
pushf
mov
scas
cmpb
cmp
das
add
addb
push
add
add
pop
add
leave
sbb
test
call
rolb
inc
xchg
aam
cmpb
or
push
fst
mov
pop
pop
inc
and
add
mov
and
add
cmpsb
add
mov
lods
ret
jno
sbb
dec
pop
inc
push
cmp
adc
add
sbb
xchg
jns
inc
add
nop
inc
cld
popa
jge
add
scas
jbe
lods
add
adc
js
jo
add
movsl
mov
aaa
push
add
fcmove
scas
imul
add
lret
pop
aam
psadbw
filds
cli
pop
add
mov
add
fcomi
mov
add
xchg
fistl
pushf
rcll
add
dec
mov
lcall
jnp
sti
pop
jmp
aaa
xor
negl
outsl
xor
pop
pushf
subb
jns
imul
push
add
lods
fdivrl
mov
push
jg
fidivrs
jns
cltd
mov
sahf
sub
mov
add
sub
clts
loope
xor
mov
insb
lds
je
xchg
pop
sbb
in
push
push
xchg
add
mov
dec
rcll
add
push
pushf
subps
dec
dec
pusha
sbb
nop
push
add
pop
add
fisubrs
lea
push
and
cmp
xor
cmp
sbb
mov
repnz
push
loop
ds
loope
inc
clc
push
add
jnp
sarb
add
movsl
lods
mov
xchg
mov
or
or
shll
cmpb
repz
lret
cmp
jb
mov
loopne
jnp
imul
jmp
sahf
xor
call
push
mov
cli
cmp
push
jae
sbb
push
xchg
fsubr
add
dec
fdivs
add
cwtl
jl
fbld
push
add
add
or
mov
cmpsl
dec
xchg
mov
lods
sahf
add
cltd
cmp
sti
xchg
outsb
and
ret
add
add
sub
add
ret
loopne
add
rclb
mov
mov
int
mov
in
adc
mov
out
xchg
xchg
mov
mov
pop
sub
add
repz
jl
ss
mov
jbe
dec
add
aaa
mov
add
xchg
inc
dec
stc
add
inc
iret
or
mov
inc
rorb
jne
lods
add
dec
data16
int3
add
mov
mov
loopne
pop
push
xchg
or
mov
xchg
adc
and
gs
add
ljmp
add
jnp
ss
int3
mov
mov
lret
mov
loopne
icebp
mov
inc
mov
rorl
add
mov
ljmp
call
add
leave
lcall
fwait
jae
lods
dec
in
adc
stos
push
aas
xchg
int3
call
rolb
arpl
sbb
aam
roll
sbb
icebp
add
adc
add
test
add
in
mov
dec
adc
sub
xchg
repnz
add
mov
cmp
lock
inc
lock
add
add
xor
xchg
sub
dec
sub
arpl
pop
cmp
stos
inc
mov
sub
jg
std
or
cld
sti
addr16
jno
add
push
and
movsb
inc
orb
mov
test
icebp
add
call
xchg
push
xchg
data16
mov
cwtl
xor
movsl
stc
jmp
out
out
fiaddl
repz
subb
outsb
fadds
mov
imul
add
jp
out
daa
enter
add
push
push
mov
inc
rclb
add
sti
mov
add
test
cwtl
in
xchg
mov
push
inc
cmp
jmp
inc
adc
adc
ret
out
jg
inc
dec
cli
cmp
xchg
xchg
cmp
push
mov
add
jecxz
mov
dec
mov
push
adc
movsl
pop
out
add
lods
xchg
cmpsb
mov
in
adc
add
push
add
inc
jo
pop
mov
dec
sbb
je
dec
mov
imul
cmp
sub
push
ss
mov
fcom
mov
pop
out
in
movsb
shrl
dec
test
imul
xor
add
xor
sub
mov
and
push
lds
lahf
dec
add
test
or
lock
cmp
mov
add
jmp
loopne
or
inc
xchg
stc
mov
or
pop
inc
push
stc
add
xor
dec
aad
mov
insb
push
jae
pop
shlb
xchg
andb
dec
add
movb
add
xchg
push
aad
dec
push
aas
icebp
pop
mov
cmpsl
repz
cld
inc
and
outsb
in
dec
rcrl
mov
out
ljmp
dec
push
mov
rcll
lcall
outsb
enter
add
loope
xlat
add
push
sbbl
jb
add
xor
inc
jmp
mov
lret
xor
add
sub
aam
dec
or
leave
mov
jbe
sbb
add
push
inc
rorl
add
subl
in
add
jae
pop
jbe
pop
mov
movsl
test
inc
mov
in
lock
incb
and
mov
divb
fsubrp
adc
call
adc
scas
jne
inc
iret
aas
sti
out
add
loope
add
sbb
add
xor
imul
pop
ljmp
cmp
in
adc
cmp
pop
add
into
shlb
lret
sbb
add
mov
das
mov
loope
and
daa
cmp
lret
movsb
push
sbb
pop
aam
jle
pop
lret
mov
xchg
iret
add
nop
cli
xchg
aad
push
mov
xor
cs
push
imul
insb
mov
add
notb
mov
add
mov
scas
add
jge
dec
xor
cmp
inc
loop
rolb
push
aas
push
outsl
pop
sub
pop
inc
jle
mov
add
dec
lsl
scas
lock
js
mov
mov
aad
aaa
in
loope
roll
pop
in
lods
add
mov
out
sbb
jp
fs
out
add
jo
push
add
movsl
jno
add
rcll
mov
and
mov
add
cmp
mov
jb
pop
mov
add
bound
jns
dec
add
test
add
dec
dec
mov
popf
jge
mov
jg
out
ja
hlt
jne
mov
add
ds
cmp
movsl
sarb
popf
pop
jle
xlat
add
cmp
fwait
add
stc
cmp
adc
add
mov
jg
out
pop
jl
lock
and
add
push
pusha
mov
push
add
ret
lahf
ds
add
out
insl
pop
xchg
add
or
sti
jnp
popf
ret
sub
or
icebp
fadd
jo
mov
sub
push
or
inc
mov
int
bound
jg
mov
jbe
cmp
stc
outsl
inc
dec
outsb
fsubl
aaa
loop
cmp
xchg
out
add
cmpsb
pop
pop
sub
cmp
sar
lods
aaa
and
or
add
mov
jge
and
cvttps2pi
dec
out
testl
lcall
out
outsb
mov
cmp
jle
filds
imul
imul
pushf
scas
add
iret
jl
jbe
pop
add
cmpsl
xchg
xchg
fs
imul
call
roll
and
push
pop
ret
lock
mov
add
in
fwait
out
pop
mov
shl
pop
add
inc
jne
add
gs
jb
jmp
jp
cmp
mov
out
adc
or
xor
je
xor
or
test
std
cld
pop
sbb
ret
mov
xchg
add
mov
push
inc
or
sub
in
mov
sub
add
add
inc
inc
push
pop
jns
popl
add
mov
add
mov
pop
popf
sub
and
xor
jl
jp
sbb
and
xchg
cmp
push
add
imul
add
sub
pop
mov
add
lahf
jmp
lods
rolb
xor
pop
loopne
lock
dec
xor
jmp
pop
rcr
out
ds
cmpsb
mov
jecxz
push
cmp
mov
xlat
xchg
popf
fcompl
add
arpl
mov
inc
or
sbb
xlat
int
fsubrl
mov
insl
dec
push
mov
andl
push
add
xor
out
sub
add
fsub
leave
mov
repz
xor
xchg
clc
add
dec
enter
lret
outsl
add
mov
adc
cld
movsl
dec
enter
cmp
subb
arpl
mov
scas
mov
iret
dec
push
xor
jl
xor
add
jae
mov
testl
mov
add
jge
cmp
adc
cmp
scas
pop
sti
mov
adcl
loopne
xchg
scas
pop
aad
movsb
mov
adc
pop
push
mulb
fwait
in
test
in
or
repnz
movsl
xchg
add
mov
fcoml
das
fwait
movhps
lahf
test
and
mov
inc
in
cmpsl
cmp
push
aaa
jle
repnz
rep
dec
iret
popa
add
or
gs
les
mov
add
inc
push
movsl
add
mov
adcl
sbbb
adc
pop
outsb
xor
sbb
sar
add
mov
test
enter
jns
pop
mov
pop
in
popf
jmp
ljmp
jns
xlat
sarb
push
dec
and
clc
mov
roll
adc
xor
push
lock
pop
add
mov
fiadds
xchg
inc
repz
jb
xor
sbb
rolb
es
sbb
popf
repz
out
xchg
fs
add
sub
fstp
push
sbb
adc
mov
not
mov
inc
adc
inc
roll
jecxz
enter
gs
mov
mov
js
pop
stos
dec
add
and
leave
add
mov
arpl
add
jnp
mov
int3
outsb
call
add
xchg
dec
xchg
rol
jl
jl
call
hlt
ljmp
inc
pop
je
mov
jnp
pop
sarl
pusha
and
add
js
push
out
aas
les
imul
mov
faddl
repnz
sbb
xchg
shrl
adc
mov
or
je
xchg
dec
mov
add
rorl
sti
jns
orb
jo
out
pop
push
mov
jnp
shlb
pop
sub
pop
movsl
bound
mov
sti
push
dec
dec
outsb
add
jmp
jecxz
leave
and
add
sub
imul
repz
mov
add
inc
mov
fwait
pop
add
and
lret
ficoml
movsl
inc
adc
aaa
or
mov
stos
call
mov
add
mov
mov
push
mov
and
xlat
in
into
push
mov
push
lods
ja
loope
pop
xchg
aad
push
add
sub
aaa
mov
scas
push
je
push
insb
lea
xor
jecxz
pusha
xorl
pushf
add
and
jnp
mov
sbb
lds
mov
add
mov
or
aaa
je
pop
lds
je
and
dec
outsl
mov
fcomp
aam
pop
bound
add
imul
push
into
hlt
jno
pop
stos
mov
xchg
add
mov
repnz
cmp
push
in
pop
lahf
add
jbe
add
push
cwtl
xchg
mov
aam
jno
and
ss
inc
fistpll
rol
cmp
add
sub
add
pop
adc
add
icebp
movsb
js
in
sar
add
xchg
dec
dec
mov
in
add
push
and
xchg
inc
scas
add
adc
cmp
ja
jg
rorl
pushf
and
xor
jbe
fsubs
imul
push
add
sti
aad
and
das
push
add
fwait
jbe
dec
add
sarl
fildl
mov
and
sub
add
shr
mov
popf
cmp
cmp
movb
inc
imul
mov
lds
sub
addr16
fs
add
mov
xor
dec
push
adc
xchg
repnz
mov
add
enter
ror
sbb
mov
fbstp
xchg
xchg
out
out
add
xor
xchg
add
outsb
xchg
and
loopne
push
aas
jne
pop
mov
fiaddl
out
inc
or
sub
pop
pop
je
inc
add
sub
add
mov
xsaves
push
iret
andl
add
inc
pop
movsl
ficomps
add
stos
ja
push
gs
pop
pushf
xchg
sub
enter
sub
in
xchg
fimuls
cwtl
mov
pop
xchg
int3
fwait
mov
outsb
sbb
je
xchg
mov
lea
xor
shl
and
push
je
mov
mov
jo
loopne
lret
jns
or
adc
testb
jae
clc
push
add
cmp
lcall
les
orb
iret
add
lret
gs
xchg
mov
cmp
sub
stos
imul
loop
add
xor
mov
add
add
ds
addr16
inc
out
and
xchg
lret
divb
loop
jg
fiaddl
cmp
jno
movsl
add
ds
add
out
cmp
insb
jl
loopne
pop
movsl
mulb
inc
pop
or
cmpl
mov
push
aaa
mov
adc
stos
xchg
push
dec
test
mov
mov
add
add
lcall
add
jmp
into
sub
cmp
aas
mov
lea
push
stc
mov
out
fwait
ja
pop
jmp
mov
add
xchg
daa
push
jo
add
dec
clc
arpl
fsubp
jmp
test
fldcw
mov
add
jge
push
jle
ljmp
push
cs
cwtl
rorl
std
in
mov
jae
add
cmp
push
mov
xor
adc
testb
shl
rolb
les
or
jnp
add
pushf
scas
imul
add
aad
ljmp
out
iret
and
stc
xchg
xor
sahf
cmp
or
fsubrs
push
aaa
lea
gs
mov
sahf
cmp
mov
aas
add
and
dec
shll
ljmp
cmpb
repz
dec
rcr
fwait
xor
mov
mov
cltd
mov
mov
inc
sub
btrl
cmp
daa
jo
enter
mov
jmpw
and
pop
mov
add
ja
and
or
jne
xchg
add
fidivrs
jns
arpl
fs
mov
fdivrs
push
ja
outsl
jno
shl
push
pop
mov
xlat
jns
arpl
fmulp
add
push
ss
adc
rorl
into
faddl
fadds
es
in
jbe
mov
orb
mov
add
add
sbb
aas
or
dec
and
push
pop
add
cld
mov
fdivr
add
lret
insl
int3
push
sahf
inc
add
push
mov
add
sbb
mov
xor
pop
shlb
lret
add
pop
fldln2
fucomi
das
sbb
popf
mov
add
mov
xchg
add
das
insl
mov
gs
out
aad
jae
xchg
pop
lods
inc
add
jne
adc
mov
xchg
data16
and
add
jp
dec
add
test
rolb
push
sbb
mov
dec
sbb
lcall
jb
mov
mov
mov
sub
shrl
sbb
rclb
cli
pop
das
fldlg2
out
dec
push
addl
popa
fldt
xchg
sbb
add
in
decb
push
scas
jg
popf
inc
fstps
cmp
push
in
xor
sbb
add
and
sbb
mov
fs
sub
cltd
mov
test
sarl
push
pop
jl
daa
fsubl
add
int3
mov
mov
or
fidivs
imul
dec
add
cmp
movl
outsb
fdivrl
fs
sahf
lret
push
aaa
dec
popa
ds
pop
mov
rcrl
pop
add
hlt
scas
add
ret
dec
aad
adc
aas
pop
pop
push
xchg
push
bound
sbb
xor
dec
stos
add
push
pusha
or
cmp
cmc
lcall
lea
and
mov
push
push
add
pushf
push
add
xchg
adc
or
std
add
mov
imul
nop
sbb
push
mov
push
jle
add
jne
cmc
add
mov
test
pop
inc
sbb
aaa
xlat
cld
add
mov
mov
mov
mov
icebp
mov
and
add
mov
and
adc
outsb
inc
mov
pusha
jns
dec
cmp
push
mov
arpl
stos
add
cmp
cltd
inc
mov
lcall
inc
dec
push
pop
add
cli
dec
jnp
add
jl
and
cmp
test
sarl
sub
xor
add
jmp
jbe
xor
inc
js
inc
xor
or
push
shl
xor
jo
pop
sub
hlt
fstl
mov
mov
sarl
rorb
jle
jl
roll
stos
ret
pop
adc
inc
add
xchg
mov
pop
pop
mov
fidivs
nop
in
je
add
xchg
lds
les
and
cmp
inc
or
int
jae
cld
add
shl
in
pop
dec
and
add
inc
jns
orl
sarb
cltd
adc
pop
cmp
cmp
das
push
add
add
push
cmp
sbb
jmp
xorb
cmpb
stc
add
xor
out
aaa
test
add
lods
push
push
lcall
cmp
add
es
sub
stos
dec
cmp
sbbb
fiaddl
loop
pop
push
mov
and
outsb
mov
push
loop
add
add
push
data16
cmp
add
pop
xchg
insl
iret
pop
sbb
sbb
subb
lock
roll
sbb
aas
or
pop
mov
jne
sbb
out
fnsave
stos
mov
pop
sbb
pop
cltd
loope
mov
lock
mov
scas
in
mov
xchg
imull
dec
pusha
push
xchg
insl
ja
add
mov
leave
mov
cmp
inc
sbb
fiadds
cmp
inc
inc
cmp
xor
hlt
push
leave
ds
jb
pop
push
dec
jg
pusha
lock
jo
push
xor
xor
das
adc
push
std
sub
add
xchg
movsl
mov
or
mov
pushf
sti
mov
in
int
mov
or
repnz
xlat
rorl
ds
mov
call
xchg
add
rcrb
in
mov
add
stc
int3
jne
add
mov
jae
iret
in
sti
cltd
mov
movl
fistps
add
in
xchg
repz
dec
add
insb
cmp
mov
sahf
loop
lret
or
in
and
inc
dec
or
jbe
ljmp
sti
sbb
add
lret
mov
push
add
in
cmp
addr16
pusha
test
xchg
and
cltd
jp
outsb
insl
add
jecxz
testl
fistpll
dec
negb
iret
insb
sahf
add
inc
mov
popa
mov
addb
or
mov
mov
jbe
fdivrp
cltd
out
add
xlat
mov
dec
adc
mov
popf
mov
shufps
push
cmp
inc
stos
lahf
mov
xorb
dec
lea
mov
xchg
aam
pop
sbb
inc
dec
shl
push
inc
inc
cwtl
add
fnstenv
pop
repnz
pop
and
rclb
arpl
jns
mov
sarb
and
fcompl
fldt
out
idivb
dec
push
add
dec
mov
lds
dec
cmp
cmp
inc
add
std
mov
pop
add
adc
add
in
add
shll
add
pop
sbb
les
cli
stc
rcr
and
mov
daa
push
mov
push
push
data16
jmp
add
pushf
lds
and
add
dec
mov
inc
or
subl
push
pop
adc
xchg
pop
jbe
pop
push
pop
lahf
pop
cld
outsb
pop
sarb
aaa
or
add
out
pop
xor
jg
imul
xlat
and
arpl
outsl
push
data16
mov
cli
sbb
add
pop
add
add
adc
and
mov
inc
pop
mov
jne
or
mov
testb
in
ds
rcr
inc
inc
lea
leave
or
mov
lret
negl
subb
sahf
inc
cmc
add
inc
xchg
ja
cmpsl
fdivl
in
fstpt
add
insl
gs
jno
outsb
xchg
add
mov
mov
dec
jb
stos
inc
loop
add
dec
sbb
xchg
fwait
add
fxch
push
xchg
push
add
sub
mov
add
adc
or
add
sub
movsb
add
mov
pop
cmp
adc
jle
add
aas
ja
fadd
sbb
les
pop
jns
repnz
out
push
add
push
lds
jle
adc
cmc
jp
mov
dec
mov
push
imul
lret
shlb
mov
int
push
inc
xchg
jge
add
push
pop
pop
lahf
and
cmp
icebp
sub
jnp
std
scas
cmp
arpl
insb
inc
fwait
add
rcrb
add
jge
adc
lea
add
push
in
xchg
add
rorb
add
or
js
add
jne
lahf
sub
jbe
ret
jecxz
loop
insb
adc
add
call
lahf
adc
leave
push
push
or
add
add
in
push
sti
mov
fucomi
mov
jmp
xchg
xchg
outsl
push
fsts
repnz
ret
jns
aas
mov
and
sbb
popf
pop
xor
sti
add
mov
jecxz
nop
and
fildl
sub
inc
ret
imul
pop
and
jno
add
leave
and
aaa
mov
cmpl
add
jg
add
aam
cld
jp
add
sbb
insb
add
insl
filds
adc
add
sub
inc
pop
mov
add
aad
mov
sbb
andl
xor
mov
pusha
push
sub
dec
rcrb
and
jns
cmp
out
xor
repz
int3
xor
mov
imul
mov
testl
jns
cwtl
insb
add
fstpl
add
stos
es
mov
les
sarb
add
movl
xor
add
mov
popf
inc
enter
add
push
fsubrl
push
add
insl
cmpsl
fiadds
ss
lret
repz
rolb
out
lods
loope
fsubrs
ret
add
cmp
fistl
sub
sub
mov
mov
mov
je
add
lret
hlt
push
jecxz
lock
cmc
and
cmpsl
xor
adc
push
out
les
add
push
adcb
mov
les
mov
add
jle
fdivs
stos
ja
rclb
popf
mov
add
xchg
cmp
fsubrl
notl
lahf
insl
fnstcw
add
es
pop
mov
pop
xorb
fistpll
push
push
mov
mov
dec
cld
pop
add
out
int
icebp
jg
out
shll
jb
in
movb
add
repnz
xchg
add
inc
shr
add
adc
jl
clc
addr16
pusha
inc
ret
cmp
cld
out
push
push
insl
and
pop
fucom
movl
sbb
xor
xor
testl
jmp
mov
mov
loopne
add
sbb
aam
icebp
xchg
xchg
xchg
jl
add
movsl
cmp
pop
add
mov
cmp
add
in
mov
mov
adc
inc
mov
shrl
mov
and
dec
add
pop
lea
xchg
arpl
mov
xor
pop
pop
mov
addr16
lock
sub
pop
les
nop
mov
jge
jo
add
fidivrl
add
cmp
pop
pop
mov
pop
and
mov
aaa
leave
or
mov
out
jge
fdiv
jle
add
in
outsl
mov
fisubrs
adc
mov
and
xchg
hlt
loope
adc
push
adc
dec
xchg
mov
mov
cmp
shlb
add
add
gs
push
add
popf
lds
mov
bound
addb
daa
mov
jp
adc
movsl
mov
xlat
dec
jb
cvtps2pi
push
and
loopne
sahf
lcall
sbb
addr16
sarb
scas
cmp
add
jns
in
add
mov
test
add
mov
bound
adc
sbb
mov
test
add
jb
es
lods
fstps
add
rorb
add
ds
bound
add
xchg
inc
add
xor
jmp
cmp
cmp
jle
pusha
neg
xchg
sahf
movsl
mull
xchg
cmp
out
add
mov
dec
and
add
inc
cli
std
stos
add
int3
cmpb
inc
scas
mov
pop
subb
shll
add
insl
pop
gs
das
ret
sub
int
push
inc
movsb
add
cmp
sti
aaa
dec
bound
movb
fidivrl
pop
mov
pop
xchg
fbstp
xor
add
push
jne
cli
test
xor
lcall
add
push
lods
mov
ret
and
fadd
add
pop
js
scas
push
cmp
outsb
orb
mov
fisubl
nop
and
xlat
or
insb
mov
add
arpl
inc
xchg
mov
iret
mov
mov
das
jns
add
hlt
xor
int
add
push
fbstp
dec
jns
js
mov
aam
clc
inc
dec
or
repz
ficompl
lahf
jmp
inc
add
fcomps
adc
jecxz
push
xor
scas
test
flds
mov
jo
mov
xchg
mov
push
clc
push
add
movsl
je
arpl
das
mov
into
fwait
xchg
ja,pn
add
mov
xchg
cmp
xchg
inc
push
fisubl
add
call
out
jbe
out
scas
fwait
outsb
stc
imul
stos
ljmp
pop
dec
dec
push
dec
xorb
dec
adc
js
jle
and
jae
arpl
fidivrl
add
xchg
clc
popf
cwtl
fstp
stos
add
shrb
xor
or
push
insb
push
ja
jne
cmc
imul
xchg
sbb
js
push
subb
add
aaa
dec
out
mov
fnstenv
pop
push
pop
pop
mov
mov
lcallw
mov
cmc
inc
test
rcr
xchg
fcomp
mov
add
pop
dec
cmpsb
mov
pop
fdivrl
jg
idivb
add
sahf
fsubrp
add
jle
jmp
mov
ljmp
pop
pop
insl
int
cwtl
stos
xor
cmp
rorb
xlat
add
and
inc
or
dec
sub
jg
pop
imul
add
or
fxch
ss
shll
scas
fsubs
mov
push
pop
and
jl
ljmp
mov
xlat
add
data16
orb
sbbb
xor
jo
push
inc
in
mov
shl
ret
lahf
test
sti
mov
fdivs
jp
ret
in
mov
rcrl
lret
sbb
cmp
lahf
pop
add
cmpsl
mov
mov
loopne
arpl
into
dec
add
daa
sbb
psubb
mov
pop
repnz
fiadds
cmpsl
sbb
push
fwait
dec
cmpsb
mov
movsb
aam
adc
mov
in
xchg
pop
add
data16
mov
nop
stos
xor
pop
sub
aas
mov
in
add
inc
xlat
daa
xor
imul
outsl
fwait
sub
cmp
ss
sarb
loopne
mov
icebp
sub
sti
enter
sbb
push
add
or
fucomi
xchg
mov
lea
lods
out
enter
faddl
jl
and
test
push
push
scas
leave
jle
pusha
loop
aas
popa
popl
iret
cmpsb
jo
or
push
ss
shlb
inc
add
arpl
leave
push
dec
xor
sub
ds
add
jo
int3
pop
je
pop
outsl
sbbb
add
add
and
incb
daa
jb
cmp
test
dec
jmp
idivl
popf
mov
cmc
scas
sbb
sub
inc
mov
testl
cmp
jmp
dec
addb
mov
cmc
add
jnp
pop
fdivrl
arpl
xor
lahf
sbb
add
shlb
add
mov
jecxz
add
jno
fdivrs
cmp
xchg
cmp
aam
fadd
cmp
xorl
arpl
add
xor
jne
pusha
mov
mov
jno
test
test
cmp
imul
or
js
and
dec
jae
cmovb
add
repnz
fistpll
out
aas
sub
in
or
fdivrs
xor
inc
dec
push
xchg
add
mov
rorl
outsl
je
or
jns
loopne
jbe
fildl
ficompl
loop
xchg
fdivrl
cli
xchg
add
jecxz
add
into
add
dec
mov
pop
pop
jg
or
out
jae
ficoms
add
addr16
fbstp
decb
pop
test
insb
loopne
mov
cmp
scas
xchg
sbb
outsb
add
xor
add
lods
and
js
or
outsl
inc
stc
add
lret
jno
fldt
sub
pop
insl
add
inc
es
test
add
dec
fs
dec
add
mov
out
pop
add
push
aam
push
inc
add
jbe
cli
xor
mov
and
xlat
add
in
push
loope
out
add
addb
out
mov
movl
xor
dec
and
fidivrl
mov
orb
add
or
add
push
sbbl
jl
mov
sub
sub
ss
sub
out
and
les
add
or
in
aam
je
out
ffree
lock
outsb
dec
mov
js
add
inc
or
in
fisubs
cld
add
es
jmp
leave
stos
int
sbb
mov
mov
sbb
jge
lods
sub
mov
fsubrl
mov
cmp
pop
aam
xchg
add
out
iret
xor
push
cmp
add
or
add
cmp
mov
leave
popa
subb
sbb
add
sbb
enter
and
nop
or
int3
jne
in
mov
mov
cs
fldenv
cmp
add
jb
push
add
enter
inc
pop
dec
aas
sub
lds
mov
or
fisttpll
lods
jns
xchg
fildl
dec
push
scas
and
outsb
push
popf
sbb
push
mov
xchg
les
loopne
incb
jbe
sahf
ljmp
lret
fldt
paddsb
sub
shlb
add
inc
cmp
subb
push
add
jb
imul
dec
insl
push
adc
add
inc
daa
cmp
add
ret
sub
add
push
adc
aas
sbb
mov
xchg
inc
iret
fadd
mov
fnstsw
mov
ja
jg
add
flds
add
mov
push
xchg
add
mov
jb
pop
ret
fistpll
mov
mov
pop
rorb
mov
add
add
push
inc
dec
adc
pop
nop
in
mov
out
cltd
sbbb
push
insb
dec
add
fdivr
sub
daa
xchg
mov
mov
or
push
jle
and
fucom
test
jo
cmc
add
js
cmp
enter
add
jne
fdivrl
fdivl
push
add
xchg
dec
add
pop
xchg
xor
inc
cld
mov
lret
fwait
lret
xchg
cwtl
pop
jmp
pop
scas
rcr
mov
jbe
adc
test
mov
mov
pop
in
repnz
push
and
xchg
scas
cmpsl
in
add
xchg
arpl
cmp
in
sti
test
aaa
push
or
fcoml
popa
dec
xchg
xor
push
movd
add
insb
adc
push
lahf
mov
aas
sarb
ss
mov
aaa
inc
negb
push
stos
jb
jnp
sub
pop
and
shlb
insb
cmpsb
jp
sbb
fidivrl
add
in
aad
fimuls
das
mov
das
pop
outsl
sti
push
out
and
fisubs
add
imul
insb
add
ja
out
xlat
mov
imull
push
xchg
outsb
jbe
mov
add
sub
sbb
or
andb
add
scas
pop
in
xor
mov
add
out
pop
cmc
mov
xchg
inc
jmp
fiaddl
clc
lods
jmp
cmpsb
lcall
popl
adc
sub
push
sub
stos
or
notb
out
cmp
sahf
iret
mov
sub
pop
scas
or
mov
out
fldl
jbe
push
fcomi
or
aam
int3
rclb
pop
insl
jle
je
mov
neg
cmpsb
mov
divl
add
sub
and
insl
xor
push
add
addr16
or
mov
and
push
add
add
lods
scas
fdivrs
xchg
jmp
out
dec
xor
add
xchg
lahf
adc
leave
sbb
and
push
ljmp
and
ja,pt
in
mov
add
outsl
dec
dec
into
fiadds
add
xchg
push
lret
arpl
mov
add
and
int3
dec
incb
mov
imul
cli
xorb
in
lods
sbb
jo
adc
or
sub
and
mov
add
sub
call
add
sbb
add
cmp
xchg
iret
mov
sbb
rorl
stc
je
cmp
in
jbe
repnz
inc
xchg
mov
xor
jge
imul
xchg
dec
xorb
fwait
pushf
pop
jl
pop
push
xor
repnz
add
mov
add
jb
and
shrl
adc
mov
add
push
and
div
mov
push
add
in
mov
pop
out
cmpsl
cltd
and
fistl
fcomps
adc
add
fmul
dec
add
scas
fistps
pop
in
pop
pop
add
mov
aas
sub
sub
push
mov
jnp
dec
in
imul
out
and
or
outsl
stc
lods
imul
add
fnstsw
fmul
das
notb
pop
bnd
jg
paddb
xchg
adc
mov
lahf
movsl
mov
jg
out
ljmp
xchg
add
pop
ljmp
cs
scas
mov
ljmp
add
nop
push
add
dec
push
push
cmp
sbb
fwait
adc
push
cwtl
pop
push
cmp
and
inc
inc
xchg
cs
mov
mov
pop
ficoms
ret
negb
lods
xchg
out
inc
aad
je,pn
add
mov
sub
aas
cmc
js
mov
stos
int3
sbb
les
iret
fwait
xorb
xorl
inc
fsubl
adc
push
push
test
daa
lea
jb
addl
xchg
sub
pop
jmp
scas
outsb
shrb
repz
mov
in
into
loopne
xor
mov
add
dec
cltd
pop
dec
sbb
xchg
xchg
mov
clc
and
fmull
enter
mov
repnz
sbb
add
jb
loope
xchg
add
enter
data16
cmpsb
sub
mov
mov
aad
movsb
pusha
icebp
cmp
push
cmp
jne
cmp
pop
xor
addb
mov
out
mov
aaa
inc
xchg
lock
out
add
fwait
mov
jae
add
and
les
lcall
pop
xor
xchg
fs
nop
scas
inc
out
dec
sbb
cs
sarb
add
pop
mov
in
xchg
dec
pslld
test
mov
pop
out
mov
jmp
pop
daa
fdivs
add
dec
xor
inc
add
addw
ljmp
xor
add
jne
outsl
scas
mov
push
xor
xchg
inc
add
js
outsb
inc
jnp
in
jle
sbb
mov
inc
and
cwtl
mov
push
mov
jo
add
dec
fstp
data16
jnp
lret
pushf
pusha
mov
lret
ja
add
jae
cmp
sbbb
add
sub
arpl
push
sti
add
push
fiadds
add
push
insl
sbb
lcall
pop
shll
push
add
sahf
inc
adc
add
insl
fnstcw
add
xchg
jp
mov
ja
dec
outsb
mov
add
pushf
sbb
pop
ds
adc
jl
mov
sbbb
ds
cmp
aaa
cli
add
xchg
pop
ljmp
adc
xor
sbb
subl
enter
pop
cld
xchg
mov
lret
ja
icebp
xor
cs
pop
mov
lret
scas
adc
or
pop
adcb
xor
xchg
sahf
fadds
shll
mov
cld
add
loopne
or
sbb
cmp
in
add
xor
add
cmp
add
and
out
mov
fnstcw
and
or
add
xchg
add
into
loope
mov
mov
call
jge
push
lock
add
loopne
data16
insb
cmp
insl
mov
add
push
in
jae
add
mov
fs
inc
decb
add
pusha
ljmp
out
scas
adcl
dec
pop
cmpsl
out
push
add
out
shll
push
sbb
jns
pop
xchg
cmpsl
add
lods
sub
xor
sub
lds
fwait
jo
add
das
jnp
cs
neg
push
pop
jmp
adc
or
add
insl
jb
mov
mov
cmc
in
sub
add
in
pop
out
pop
mov
xor
int
js
xor
add
ja
sbb
lea
fnstenv
mov
push
add
mov
stc
mov
loope
stc
mov
stc
jne
fdivrl
into
vpacksswb
add
mov
ret
xor
jecxz
or
cmpsb
sarb
dec
daa
add
cmp
push
fcmovnu
add
mov
scas
pop
out
jnp
add
inc
lea
dec
add
mov
fdivrl
jecxz
add
hlt
int3
out
fadd
and
mov
sti
out
and
jnp
enter
and
popf
movsl
movsb
jle
loope
call
cli
xchg
xor
add
jns
mov
sbb
inc
cld
jl
xchg
add
ret
insb
scas
pop
daa
xchg
push
pusha
outsb
cld
sbb
add
dec
dec
xor
shlb
sbb
inc
dec
cltd
arpl
loopne
inc
add
testl
nop
aas
sbb
jl
and
pop
negb
dec
and
xchg
lods
push
add
add
and
in
add
outsl
fstpl
add
iret
jno
sbb
arpl
ret
loop
add
jne
movb
pop
add
ja
jecxz
fsubrp
dec
mov
fsts
xchg
ficompl
cs
fcmovnu
testb
fstps
ret
pop
xor
or
adc
xor
add
outsb
dec
in
push
mov
loop
pop
out
add
mov
fdiv
lret
xchg
frstor
ror
in
lahf
pop
loopne
nop
mov
push
lea
int
xor
pop
popa
idivl
jno
mov
subl
fs
fisttpl
data16
xlat
push
push
dec
shl
sub
and
push
ja
pop
dec
mov
mov
fdivs
or
jg
pop
inc
sbb
mov
repz
xchg
out
fwait
mov
cs
pop
daa
cltd
loopne
add
dec
pushf
add
pusha
push
mov
es
inc
pop
mov
and
clc
imul
lods
sbb
push
out
arpl
gs
xchg
xor
mov
add
dec
pop
inc
add
pop
cmpsl
inc
push
inc
sub
pop
or
add
and
cmp
xchg
pop
and
mov
fildl
adc
cmp
cld
inc
add
mov
ret
mov
add
xor
out
repnz
or
pop
xchg
mov
add
fsubs
fyl2xp1
ficoms
mov
add
pop
inc
pop
dec
xchg
or
outsl
jo
cltd
push
shlb
sbb
mov
jbe
add
push
sbb
int
mov
adc
dec
les
push
aaa
sarb
fistl
repnz
jbe
ffree
ds
mov
jns
out
loopne
fcompl
jmp
cli
xchg
mov
psllw
mov
flds
add
cwtl
roll
into
mov
mov
mov
negl
mov
push
adc
cmp
shll
scas
ljmp
pop
push
mov
sbb
out
jecxz
jl
add
cmp
xchg
sub
and
add
rclb
add
fbld
mov
pop
out
scas
add
sbb
dec
add
frstor
paddusb
fidivrl
inc
iret
push
mov
icebp
add
push
outsb
dec
cmp
and
test
jecxz
xchg
sub
js
popa
mov
sbb
mov
sbb
outsl
addr16
mov
in
fdivp
js
insl
jecxz
pop
add
and
aaa
cmp
mov
je
sub
jl
insl
movsl
and
cwtl
sub
and
testb
and
das
in
cmp
sarl
xchg
sti
jno
mov
mov
pop
add
push
inc
and
add
xchg
add
mov
repnz
pop
shl
in
inc
pop
mov
lea
pusha
fcomp
aas
mov
mov
movsb
fwait
cwtl
es
add
scas
inc
out
mov
add
mov
mov
mov
sahf
dec
mov
negl
call
cmp
pop
out
push
adc
dec
gs
movb
fmuls
sbb
lret
xlat
outsl
in
mov
imul
mov
xchg
add
or
subl
inc
stos
addl
jb
scas
lahf
loopne
clc
in
js
sbb
or
enter
jmp
cmc
mov
xchg
cwtl
mov
in
xor
shl
add
and
lea
ja
add
mov
add
xlat
sub
add
lcall
cmc
jb
add
bound
mov
pop
mov
add
jb
mov
repnz
pop
out
pop
adc
add
lods
mov
lret
push
adc
rolb
loop
or
cmc
leave
test
jge
cmp
mov
dec
ror
pop
lea
or
jle
cld
add
mov
inc
jns
inc
insb
shlb
adc
add
cld
jo
mov
gs
pop
mov
xlat
sbb
jp
mov
mov
sti
into
xor
xchg
sbb
outsb
insb
nop
mov
sbb
lahf
or
add
cmpl
cs
cmp
dec
cmp
lds
xchg
jbe
add
aad
push
xor
cs
jnp
in
mov
xlat
enter
fstp
pop
into
add
mov
stos
add
js
call
cmp
push
push
rol
add
push
mov
lahf
mov
jnp
stc
orb
iret
xor
sarl
stos
add
add
add
aam
jl
mov
add
mov
lret
in
cld
add
ds
in
fdivrl
add
lret
test
jne
and
mov
cmpsb
stos
js
daa
sub
roll
icebp
addr16
testl
out
pop
call
xchg
imul
and
mov
add
rcll
rol
push
or
sbb
and
fistpll
pop
sti
jae
and
leave
mov
aad
fstpt
rcrb
movsb
inc
add
lods
push
jg
dec
and
sbb
add
or
ja
xchg
xchg
xchg
negl
fistps
stos
add
cmp
add
mov
add
pop
mov
repz
hlt
lock
push
jge
jl
add
mov
pop
outsb
fistpll
sbbl
push
add
mov
fists
mov
add
pop
or
je
les
adc
sbb
in
divb
push
scas
fcmovbe
cmp
icebp
cwtl
jns
push
les
jno
xchg
cld
pop
adc
test
loope
mov
pop
cmpsb
fstl
int3
pop
jbe
pop
test
aas
xor
jae
add
stos
and
popf
xchg
mov
add
out
mov
add
leave
mov
mov
ds
mov
push
fwait
or
sub
adc
add
adc
movsb
test
push
add
int3
push
stc
repz
es
ret
pop
xor
ss
out
adc
outsl
test
push
int
xchg
dec
and
mov
mov
xor
lea
gs
xchg
call
push
add
push
mov
std
add
or
and
inc
mov
sub
into
ret
outsb
add
sub
inc
loope
cmpsb
fwait
dec
mov
add
xchg
in
dec
mov
aas
add
mov
repnz
cmp
xchg
cs
jecxz
xchg
dec
loope
mov
inc
test
add
add
cmp
arpl
jp
push
das
ds
inc
out
push
jae
push
sbb
gs
cli
test
add
add
mov
add
rolb
outsb
aas
lcall
push
push
xor
add
sahf
dec
cli
add
mov
jb
add
in
loopne
mov
mov
sub
mov
cmp
push
mov
scas
adc
pop
dec
push
andb
rep
aas
add
sbb
mov
sub
test
loopne
mov
nopl
and
sbb
mov
inc
sub
add
enter
shll
popf
sbb
mov
dec
out
mov
adc
lret
mov
add
sti
int
lds
xchg
xchg
lahf
and
add
lret
adc
push
mov
pop
jmp
sbb
dec
inc
out
cld
cmp
dec
imul
xchg
outsb
jl
lods
pop
in
fisttpll
add
insl
lret
lahf
mov
dec
arpl
cwtl
fildl
adc
or
cmp
push
add
push
dec
add
push
sub
push
inc
push
je
and
loope
add
sub
outsb
iret
mov
shlb
aad
ss
add
cli
leave
fcomi
cmpsl
fcoml
jno
add
pop
adc
dec
insl
mov
dec
add
div
out
in
lods
add
mov
add
mov
imul
add
xor
add
or
pop
or
sbb
mov
jp
add
loope
xchg
out
lock
adc
add
or
or
jne
mov
push
nop
xchg
jnp
movsb
dec
add
xchg
outsl
jmp
fidivrs
mov
inc
push
scas
cwtl
lea
jmp
test
xchg
add
jg
std
pop
lahf
dec
mov
mov
add
dec
pusha
test
xor
vprotq
cmpsl
mov
sub
sbb
pop
mov
ljmp
fstpl
inc
cmp
jns
sub
mov
orb
mov
aas
fimuls
in
jbe
push
stos
in
rcrb
mov
imul
sbb
dec
and
mov
outsl
sti
ror
add
jb
pop
in
and
cli
mov
mov
add
lahf
add
call
imul
jb
mov
jge
cmp
out
aaa
add
in
jecxz
idivb
mov
and
stos
pop
lods
and
lret
sbb
pop
add
push
or
add
mov
in
pop
out
das
repz
xor
outsb
jns
add
addr16
add
jmp
movsb
xchg
test
sub
or
nop
lods
cmp
xchg
fwait
mov
int
xor
xchg
mov
addr16
js
or
xchg
aam
xor
cmp
cld
das
pop
orb
sbb
pop
test
sub
popf
pop
pop
push
das
xchg
push
xchg
add
xor
dec
not
stc
sbb
push
mov
mov
adc
xor
jecxz
and
lahf
mov
rep
cmp
add
jae
scas
out
add
int3
sub
add
mov
imul
add
sahf
pop
jge
add
repz
jmp
mov
jbe
dec
jae
insb
push
movsl
xchg
adc
adc
icebp
popa
xchg
imul
leave
xor
xchg
dec
push
add
pop
sbb
mov
cmpsl
jg
dec
inc
push
ja
push
pop
xchg
ret
fisubl
mov
dec
push
dec
mov
orb
nop
dec
mov
test
xchg
movsb
pop
jae
adc
arpl
out
sub
xchg
outsb
in
lods
ret
add
mov
out
and
test
add
mov
jmp
xor
cmp
add
pop
in
ja
loop
jno
mov
adc
and
jle
sbb
in
mov
cmpb
cmc
push
add
xor
jmp
lods
pop
movsl
inc
xchg
ss
inc
push
push
hlt
data16
rcr
in
adc
add
xchg
sbb
pushf
xchg
inc
nop
js
add
scas
dec
cmp
mov
mov
push
push
out
jg
add
xor
dec
add
pop
xchg
jge
fildl
es
adc
add
inc
jg
cld
pop
pop
fstpl
int
pop
pop
and
jb
dec
pushf
mov
insb
lods
test
repnz
mov
mov
in
icebp
mov
and
das
mov
mov
xchg
cmpsb
cli
test
vmwrite
shlb
arpl
mov
jb
repz
inc
cli
insl
mov
pop
idivb
inc
ret
into
and
or
inc
add
movsb
pop
jmp
mov
pop
neg
pop
jne
push
add
cmpb
cmp
pop
mov
mov
xchg
inc
add
and
push
out
sbbb
xlat
and
add
ss
xchg
js
or
lods
clc
cmp
sub
ss
loop
pop
inc
and
outsb
sub
add
icebp
mov
aaa
sti
pop
sub
mov
out
outsb
loopne
and
add
js
xor
cmp
mov
das
popa
outsl
dec
xchg
mov
imul
pop
pusha
push
imul
xchg
dec
mov
in
xor
lds
dec
jbe
add
bound
adc
add
push
or
or
mov
pmulhw
dec
lahf
add
addr16
xchg
shrb
jno
mov
push
ljmp
scas
and
jbe
fwait
cmc
sbb
les
adc
mov
xor
add
int3
fwait
sar
insb
jnp
add
push
lret
pop
outsb
data16
inc
sbb
scas
xor
mov
inc
jbe
add
and
popa
add
outsl
fldl
jmp
sub
add
ret
cmp
or
sahf
pop
addl
mov
dec
or
add
cmpxchg
stos
popl
and
pop
call
das
outsb
ljmp
add
insb
punpcklbw
xchg
jl
xlat
stos
daa
test
in
sub
jb
shll
adc
push
cld
in
xchg
pop
xchg
movsb
mov
adc
jle
mov
idivb
popf
add
jo
sahf
pusha
mov
add
fs
push
add
movsb
call
inc
cmp
lret
cmp
repnz
push
add
push
mov
dec
add
lods
jb
inc
inc
call
bnd
cld
in
in
mov
out
sbb
bsr
fdivrs
cmp
outsb
inc
mov
adc
add
or
bound
cmpsb
repnz
and
cmp
adcb
mov
ds
mov
lgs
xorb
jae
sub
push
sub
int
sarb
cmp
add
jno
or
jnp
notl
repz
scas
cmp
int3
jb
add
les
xor
dec
dec
xor
add
imul
jns
add
stc
add
mov
or
push
pop
das
add
push
add
addr16
dec
aas
fucom
add
push
adc
add
out
daa
xchg
popl
mov
idivl
sub
es
mov
nop
pop
and
aaa
xchg
sarb
mov
cmp
cltd
mov
dec
cmp
lret
pop
or
cmp
in
pop
in
movl
notb
in
movsb
dec
mov
adc
pop
push
xor
sub
popf
adc
imul
add
rcr
sub
jbe
fdivrs
filds
xlat
out
sub
push
aam
insb
faddl
xchg
stos
cmp
and
push
push
and
ret
std
fiaddl
mov
mov
add
dec
insl
add
push
push
pop
add
fs
clc
xorb
cmp
cmp
add
inc
iret
mov
inc
add
mov
jmp
lods
repnz
fcoml
inc
and
bound
inc
xor
mov
dec
aas
pop
icebp
push
cmc
cmp
fs
into
leave
fistpl
xchg
push
mov
rcll
or
add
jbe
nop
mov
jge
iret
or
mov
add
ret
and
cwtl
pop
xchg
mov
in
pop
mov
mull
outsl
enter
mov
into
imul
les
and
mov
or
pop
enter
add
mov
lcall
pop
push
faddl
jns
jno
and
fiaddl
out
mov
adc
xor
cmpsb
push
sub
inc
xchg
or
add
mov
cld
pop
jecxz
ds
mov
pop
cltd
stos
mov
or
nop
pop
outsb
mov
movsb
xchg
pop
jae
mov
scas
cmp
sarl
cltd
repz
xor
and
dec
sub
icebp
sarb
push
push
cmpl
stc
cmp
out
sub
add
ret
sub
test
addl
int
out
push
mov
xchg
fdivrl
mov
sahf
pop
ljmp
lcall
mov
test
sar
scas
idiv
mov
add
arpl
sbb
lods
ss
insl
orl
add
mov
push
adc
add
aad
xchg
repz
adc
jmp
in
lcall
pusha
andl
add
enter
mov
es
iret
sub
loope
dec
pusha
mov
and
lods
pop
mov
rolb
add
push
push
leave
dec
lock
pushf
jne
push
mov
add
divl
mov
cmp
roll
inc
out
in
push
cwtl
jb
sub
adc
cld
add
and
jp
testb
gs
test
mov
lock
cmp
cld
push
xchg
scas
fmuls
in
rcrb
shl
mov
pop
sbb
mov
sub
inc
and
jg
test
ss
xchg
xor
lods
add
inc
pop
lcall
xor
xchg
js
inc
xor
pop
xchg
cmp
sbb
cwtl
shr
push
add
test
mov
dec
out
mov
cmpsl
popf
add
sti
xchg
lods
add
adc
test
movsb
add
sbb
pop
loope
dec
mov
outsl
add
addr16
into
ror
fwait
add
sbb
and
rorb
add
cwtl
cmp
inc
xchg
push
or
mov
sbb
lods
pop
rolb
sbb
andl
stos
loopne
lock
sub
bound
lsl
mov
inc
sbb
dec
xor
cmp
add
jecxz
rolb
rcl
mov
insl
pop
and
adc
xchg
fcmovnu
xchg
push
lret
leave
cmp
pop
inc
add
xor
cmp
push
mov
push
shll
adc
mov
sub
add
shrb
cmp
mov
mov
lret
out
ds
out
jns
add
cs
jo
adc
in
mov
push
dec
test
outsb
shlb
mov
testb
inc
mov
add
push
jg
jp
xor
or
jbe
add
jecxz
ficomps
xchg
ss
cwtl
lret
jl
hlt
daa
push
jb
push
mov
inc
mov
add
xchg
jge
je
fiadds
fisubl
or
out
jns
cmp
in
add
jl
add
sti
jecxz
jbe
js
add
mov
popa
filds
aad
inc
adc
lea
and
cltd
and
and
mov
mov
mov
sbb
aad
jl
xchg
jnp
in
jle
fistps
negl
in
push
in
enter
push
test
sbb
ja
in
sub
rcrl
xchg
mov
inc
push
inc
ljmp
jb
ss
enter
in
idivb
add
inc
sub
mov
xor
adc
dec
leave
adc
fcoms
add
sahf
mov
add
dec
xlat
xchg
aaa
pop
outsl
jns
data16
mov
shr
mov
add
insl
sbb
sbb
or
add
dec
xchg
mov
ds
xchg
aam
mov
stc
test
fnsave
inc
jbe
fildll
test
call
sbb
js
mov
ror
or
add
mov
jmp
add
mov
jecxz
in
ljmp
enter
hlt
cmc
add
push
pop
cmp
dec
adc
add
adc
cli
add
sbb
push
shr
lods
add
gs
mov
xchg
inc
and
add
sbb
sbb
stos
jb
out
sub
repz
cmp
mov
je
lret
push
push
push
sbb
imul
in
ds
roll
lahf
push
add
adc
push
cmp
dec
add
pop
fdivrl
in
jns
cmp
adc
mov
leave
fcmovu
ljmp
dec
pop
mov
popl
insb
rcl
add
cmpsl
dec
out
jns
push
mov
repz
subb
jb
in
push
mov
cmp
enter
pop
popf
rorl
mov
push
cs
adc
xchg
sbb
add
loop
repnz
sahf
pop
notb
sub
cmpsb
mov
repz
jl
stc
in
sarb
leave
roll
shlb
lret
xchg
adc
arpl
mov
aaa
outsb
xchg
ret
cmc
push
add
popa
jmp
pop
daa
sysret
lret
sbb
cltd
mov
inc
xor
push
and
jb
add
pop
push
add
inc
mov
call
inc
and
into
mov
imul
add
mov
sti
jae
sarl
and
push
movsl
adcb
sub
dec
in
pop
ljmp
fdivrl
cmp
cltd
jbe
fistpl
sub
enter
push
out
mov
sbb
mov
mov
iret
stc
add
pop
pop
sti
add
mov
or
dec
fildl
pushf
add
add
jo
mov
cmpsb
test
ret
push
add
les
fildl
cli
dec
add
jnp
testl
add
pop
sub
lcall
flds
inc
sub
addr16
pop
adc
dec
dec
mov
mov
pop
xchg
data16
pop
sti
int
out
add
sbb
push
fidivrs
scas
xor
and
test
push
add
movsl
jl
xlat
shlb
stos
iret
sahf
into
push
add
mov
xor
lds
rcrl
xchg
add
hlt
add
ljmp
repnz
popa
dec
push
test
or
or
pop
insl
aas
add
xchg
fisttpl
fisubrl
jae
pop
add
push
cli
add
adc
add
push
pop
and
or
inc
shll
mov
add
fadds
dec
xchg
sub
iret
push
mov
inc
add
sub
insl
add
lret
idivl
mov
push
jmp
pop
xchg
add
data16
es
add
and
mov
loope,pt
enter
push
add
mov
push
add
xor
scas
dec
adc
add
jmp
fbstp
dec
fnstsw
outsb
inc
cmpb
out
add
test
outsl
sub
xchg
xchg
es
jne
das
mov
or
out
pop
int
enter
adc
insl
cs
jmp
xor
and
mov
pushf
adc
add
outsl
dec
roll
xor
cmp
push
decl
mov
pop
dec
jl
add
push
adc
sbb
add
jge
out
in
lret
out
cmp
adc
pop
loopne
fwait
cmp
stos
rorb
aas
aad
xchg
mov
mov
cmp
add
push
fcomps
ret
inc
mov
aam
inc
xchg
ficoms
add
xchg
inc
mov
add
cwtl
push
cmp
cltd
or
fldl
pop
sahf
mov
inc
and
xchg
test
dec
push
or
nop
sbbb
mov
xor
scas
and
jno
add
nop
pop
push
lods
mov
cmp
fs
and
dec
clc
sbb
push
cwtl
nop
fiaddl
cltd
lret
cmp
sbb
cmp
push
aam
add
les
cmp
addb
cmp
adc
xorl
std
xchg
pop
cmc
hlt
add
lcall
scas
shll
mov
jle
fisubl
sbb
in
mov
negl
push
ss
gs
clc
sbb
mov
int3
mov
ud2
push
xor
pusha
mov
loopne
inc
dec
jecxz
xchg
jbe
cmp
sub
or
rcr
add
pop
xor
fwait
cmp
add
out
adc
notb
add
xchg
movb
popf
add
jae
sub
fwait
jg
add
popa
shl
call
mov
je
filds
jnp
cmp
xlat
test
add
ss
sub
add
ret
aaa
stc
cmp
aad
adc
sti
mov
out
mov
mov
mov
jae
int
mov
pusha
ret
insl
jb
je
push
jnp
movsb
xchg
and
stos
rol
sbb
subb
add
jmp
jns
arpl
dec
ds
cwtl
ss
dec
adc
jg
fsubrs
out
fiadds
mov
ffreep
add
sub
lahf
sbbl
imul
push
popa
cmp
pusha
repnz
push
sbb
outsb
or
xchg
stc
es
xchg
mov
loop
loopne
xchg
add
call
cld
sub
testl
cli
ja
xor
jno
mov
in
lock
pushf
hlt
test
xchg
sub
mov
and
repz
xchg
loopne
sbb
mov
dec
cmpsl
push
iret
movsb
add
stos
jno
icebp
xor
jl
or
mov
jmp
mov
insl
loope
xchg
cmp
mov
loopne,pt
mov
add
int3
sub
jne
mov
loopne
jb
cwtl
jl
add
dec
imul
sub
add
add
xor
std
hlt
and
cmp
pop
jno
movl
add
push
out
aas
out
push
fisttps
pusha
and
xor
int3
ficoml
add
xchg
xor
enter
dec
imul
xchg
js
mov
add
aam
xchg
cmp
ljmp
insb
cwtl
mov
jb
fucomp
cmp
adc
cs
mov
xor
cmp
test
lock
add
rorl
test
xor
cmovb
push
mov
jbe
in
sub
mov
cs
add
jge
and
icebp
mov
jmp
std
inc
adc
loopne
push
add
movaps
push
pusha
ss
jg
xor
sti
aaa
fsubl
fldl
ds
jno
mov
cwtl
loop
add
mov
push
mov
loop
jp
dec
jb
cwtl
add
dec
out
hlt
fsubrs
in
push
rcr
sub
inc
outsb
cmp
mov
in
xor
aam
xchg
les
add
mov
add
dec
aad
add
stc
fidivrl
in
movsl
cmp
lds
pop
xlat
pop
pop
int3
imulb
cmp
cmp
sbb
add
mov
loop
cmp
and
into
jl
mov
ds
add
std
mov
sub
dec
scas
ss
adc
cmpsl
ror
dec
sti
insb
repz
pop
and
jl
mov
add
call
add
out
mov
xchg
rcrl
test
addr16
dec
add
adc
into
xor
and
pop
or
inc
jne
mov
lock
icebp
pop
scas
stos
add
imul
add
fiadds
stc
dec
and
shll
add
loopne
add
mov
xor
rcr
fs
adc
push
out
ja
jnp
mov
or
aad
sbb
add
clc
data16
add
sahf
jns
add
cmp
push
mov
add
str
or
xchg
mov
insl
dec
loopne
fsubrp
rolb
gs
jns
fcmovb
cmp
pop
pop
pop
shlb
add
std
ret
mov
test
pop
inc
add
mov
fmull
add
cmp
xchg
stos
inc
enter
xchg
adc
jl
add
cmc
add
add
sub
loope
xor
enter
pop
xchg
and
pop
roll
mov
xor
std
mov
mov
popa
in
xchg
jbe
ss
sbb
daa
jp
push
push
cmp
jbe
in
add
dec
dec
inc
push
xchg
jae
inc
mov
das
lds
cli
push
ret
in
mov
add
lcall
add
pop
inc
bound
push
in
push
div
sbb
mov
jg
push
jp
xchg
insb
add
add
call
mov
xchg
imulb
jbe
pop
loop
sahf
xor
mov
ljmp
jo
lahf
sbb
add
sahf
loopne
jle
pop
in
jg
add
ja
mov
arpl
mov
mov
inc
cmp
add
push
mov
lods
fstl
xchg
cltd
jno
add
push
sub
push
sti
ljmp
push
cltd
aaa
adc
push
jbe
cmp
add
ja
sub
dec
jae
add
jecxz
sub
pop
fcmovne
push
mov
adc
cmp
add
inc
mov
add
lods
xchg
pop
je
add
arpl
and
add
inc
mov
push
mov
mov
shll
fcompl
mov
xor
adc
xchg
mov
je
xchg
mov
in
xlat
andl
adc
mov
jbe
jb
mov
xchg
pop
daa
adc
cld
cmpsl
add
inc
inc
femms
inc
loopne
and
lock
jl
pop
adc
shl
insl
cld
arpl
mov
cmp
flds
pop
and
shlb
push
fadd
sahf
test
pushf
push
mov
in
and
xchg
push
mov
jo
sbb
or
loopne
pop
mov
pop
sti
sbb
mov
inc
mov
psllq
test
push
clc
loop
fcoms
dec
mov
dec
and
cld
fcompl
nop
push
sub
add
push
cld
lds
mov
loopne
xchg
add
movsl
mov
setp
pop
repnz
nop
aas
jmp
xor
dec
and
pop
dec
jnp
add
aad
pushl
or
arpl
push
jg
jo
and
lods
jae
pop
gs
fdiv
out
and
mov
add
sbb
jle
and
cs
outsb
lods
adc
shll
fldl
subb
or
inc
add
mov
data16
fimull
add
jge
out
fiadds
popa
mov
xchg
out
adc
insb
cmpsb
mov
xor
stos
movl
xchg
adc
out
test
sti
jecxz
shlb
inc
sar
scas
cltd
add
inc
dec
jns
hlt
jbe
jo
fucom
xchg
in
out
sub
dec
push
add
sbb
mov
nop
rcl
push
add
loope
pop
icebp
stos
add
cwtl
popa
jb
cmp
jns
fcmovnu
jle
fdivp
std
add
mov
mov
ret
and
lea
and
add
std
fidivs
add
pop
fisttpll
rcrl
cld
pop
inc
dec
outsb
xor
pusha
data16
lret
jno
pop
and
inc
enter
mov
xchg
inc
jo
jo
das
pop
testb
push
mov
mov
dec
add
add
cmp
repnz
je
movsl
add
or
lret
push
sub
add
and
jo
hlt
cld
jge
xlat
testb
pop
xor
ret
pushf
clc
nop
les
pop
sub
shr
pusha
mov
cmp
cltd
adc
and
xchg
sti
jae
fs
add
xchg
mov
jno
dec
paddq
sub
mov
fmull
push
adc
and
add
rol
inc
cli
addb
xchg
and
adc
add
pop
dec
xchg
add
mov
and
push
xchg
out
int3
mov
mov
jl
ljmp
xor
cmp
lret
rcrb
push
sub
in
stos
dec
call
pop
fdivr
sbb
jbe
add
mov
cmpsb
rol
cs
fldl
xlat
mov
addr16
mov
push
fsubrp
int
push
adc
lcall
add
add
cmp
imul
out
sarb
sbb
cmp
pop
sbbb
or
lock
movsl
adc
aad
lret
push
out
push
ret
fistpl
lret
jns
mov
hlt
rorb
iret
jne
mov
cmp
stos
icebp
cwtl
xor
enter
lcall
sbbb
pop
test
add
sub
sub
add
jne
fcomi
add
out
lret
mov
xchg
sub
js
sub
push
sub
out
lods
cmp
sbb
pop
fsubp
stc
aam
add
fistpll
dec
and
shlb
ret
add
mov
or
xor
addb
ja
lods
xlat
cmpb
xchg
add
jno
mov
and
out
sbb
popf
add
jg
push
add
pop
inc
push
push
push
jecxz
mov
cmp
dec
mov
repnz
xchg
test
pop
and
outsl
cmpsb
rolb
jnp
lret
mov
cmc
pop
fstpl
jo
fnstenv
and
cmp
scas
push
cmp
jne
pushf
or
in
jle
push
test
insb
pop
jnp
fs
in
cmpl
leave
jbe
mov
pop
sub
push
xchg
psadbw
pusha
ficompl
rcr
aam
push
adc
or
jl
idiv
lfs
xor
xchg
leave
add
dec
aam
mov
adc
xorb
xchg
mov
roll
sti
inc
in
xchg
out
int
add
pop
jae
ss
jns
add
xor
dec
add
cmp
lock
lret
in
mov
loopne
outsl
mov
ror
pop
rcrb
js
add
scas
mov
cmpb
js
jbe
sbb
sub
sub
add
out
mov
scas
push
push
adc
bound
and
jo
add
xor
sti
lahf
jecxz
jbe
add
cli
in
imul
insl
dec
inc
notb
loope
sbb
xorb
fucomp
xchg
jno
inc
push
dec
and
jne
xchg
add
add
stc
dec
xchg
cmp
cltd
jecxz
nop
cmc
jle
decb
pop
test
arpl
sbb
add
lret
jmp
dec
add
leave
adc
add
jo
adc
lea
mov
in
cmpsl
test
scas
add
ror
popf
inc
and
cld
lahf
add
cmc
repz
add
dec
testl
jge
adc
add
imul
or
push
mov
xor
cli
sbb
imul
idivb
je
sub
mov
imull
and
adc
add
jmp
icebp
faddl
push
mov
xchg
mov
pop
pusha
add
jbe
mov
add
mov
mov
call
add
ret
push
clc
cmc
ret
orl
orb
push
cmp
push
dec
xchg
aaa
add
dec
les
mov
pop
fcomps
outsb
popa
in
dec
out
aaa
adc
stc
nop
insl
jecxz
and
imul
mov
rcl
test
pop
jae
cs
fcompl
call
mov
jnp
or
cli
lock
push
add
in
sbb
push
add
push
insl
mov
xchg
gs
push
xchg
pusha
add
xorl
frstor
xchg
fldenv
loopne
pop
imul
sub
in
daa
cmpsl
adc
inc
enter
push
and
movb
out
and
dec
in
or
jo
popa
xor
scas
insb
data16
inc
mov
sbb
outsb
pusha
and
add
shl
sahf
enter
addl
movsb
sti
mov
add
repz
ret
pop
cmp
sahf
out
add
sub
mov
mov
add
xlat
and
sub
mov
push
sbb
xchg
dec
cmpsb
push
gs
mov
incb
je
sbb
or
es
jb
add
call
and
add
fstl
adc
sub
adc
add
push
xlat
popf
gs
add
sbb
mov
xchg
lods
int
or
jge
cmp
jmp
xchg
sarb
lods
scas
pushf
add
popa
imull
js
jno
adc
cmc
pop
pop
jnp
sbb
dec
mov
jne
int
push
add
sub
pop
sti
or
lret
cmp
out
jb
fidivrs
xchg
add
mov
mov
jno
jp
lcall
nop
jo
aas
sub
in
pop
pop
fwait
push
cmp
mov
aas
sti
push
cmp
testl
rcl
dec
ret
out
add
cmp
jecxz
lods
cmp
mov
pushf
int3
loopne
sub
cli
jge
fdivrs
jle
lods
aad
int
push
ds
jbe
mov
mov
and
sbb
pop
aaa
mov
sbb
fimull
sbb
mov
sbb
add
testb
mov
sub
rol
inc
xchg
sbb
aam
inc
add
scas
push
add
jg
outsl
loopne
jnp
pop
or
and
push
aas
push
add
sub
imul
add
inc
mov
push
inc
dec
lock
sbb
pop
je
scas
pusha
ja
inc
outsl
pushf
push
es
and
loopne
sbb
mov
fimuls
dec
hlt
aad
orl
lcall
cld
ds
loopne
mov
mov
xor
rolb
movsl
mov
add
dec
lret
icebp
adc
push
mov
fcompl
add
std
mov
sbb
jae
mov
add
fnstsw
lea
mov
mov
sahf
pushf
sub
adc
in
out
add
inc
cwtl
stc
add
sti
ss
add
int
jnp
jg
testl
inc
jo
add
add
push
push
add
sub
js
pop
push
mov
adcb
jnp
add
mov
inc
in
xor
jl
pusha
lret
cmpsb
jb
add
jg
lods
add
jbe
xchg
rcr
insb
pop
aaa
std
xlat
adcb
add
push
xor
jb
pop
pop
sub
hlt
fldl
dec
insb
or
jns
inc
int
lock
fcmovbe
lds
push
pop
xchg
jo
imul
xorb
fisubrs
add
insb
enter
add
adc
sbb
mov
fsubp
cmp
push
out
aad
call
add
mov
jnp
inc
jno
push
jmp
jb
in
push
imul
loope
add
mov
inc
fistps
and
jle
mov
pop
rolb
add
pop
or
inc
jecxz
pop
sbb
xchg
mov
int
inc
mov
test
out
shrl
addl
lods
sahf
test
push
add
fidivrl
push
ljmp
mov
ljmp
int3
jl
mov
cmpl
outsl
mov
mov
inc
sub
push
lcall
cmp
shlb
or
out
push
add
cmp
ja
addb
int
pushf
mov
sbb
add
fists
add
push
imul
add
add
push
repnz
push
pop
stos
mulb
loopne
shll
pusha
push
push
movsb
mov
rep
insl
ds
add
xchg
mov
lahf
adc
sub
mull
test
dec
push
out
ljmp
mov
mov
sbb
pop
out
sub
jbe
push
lock
out
fidivrl
inc
les
push
mulb
lsl
cmp
lret
xchg
out
movsb
out
push
testb
loopne
jecxz
repnz
add
imul
jo
add
mov
cmpsl
adc
push
jl
stc
and
mov
int
cmp
mov
or
test
or
sub
dec
mov
xchg
mov
pop
or
dec
pop
pop
push
lods
outsb
add
out
clc
cmpsb
je
shlb
shll
sub
push
aam
mov
or
sub
jo
add
sbb
push
add
xchg
imul
sbb
push
xor
push
inc
test
out
movl
lods
add
jp
insl
jbe
pop
rorb
add
ja
inc
sarl
pop
sti
mov
adc
xor
pop
arpl
mov
inc
fwait
lods
adc
cli
add
inc
fdivs
repz
aad
inc
pop
sti
push
mov
jecxz
sarl
int3
fldt
loop
je
add
jo
dec
mov
mov
and
ret
cmp
mov
add
imul
je
jae
ja
cmp
repz
fldt
lret
pop
rcrb
sti
xchg
test
push
sbb
pop
jge
dec
cmpb
add
ret
add
dec
adc
push
push
xchg
dec
push
add
cmp
add
or
add
jae
xchg
jae
jno
jbe
add
sub
mov
in
stos
pop
push
push
jmp
test
add
xchg
mov
pop
in
sbb
push
movl
and
mov
hlt
or
insl
add
mov
test
fwait
mov
roll
mov
or
xchg
pop
sbb
cmp
and
ret
adc
js
mov
push
nop
push
pushf
add
nop
add
xorl
in
and
in
mov
sub
sub
pop
adc
mov
into
cmc
flds
jbe
loop
mov
ljmp
sub
dec
mov
xlat
pop
mov
add
lahf
add
cmp
lret
or
popf
adc
jne
add
rolb
push
adc
push
jecxz
sbb
dec
lea
jae
mov
out
sbb
mov
adc
add
jae
or
pop
fidivrs
adc
cmpsl
xchg
lods
mov
icebp
add
movq
sti
xor
insb
outsb
dec
xchg
jge
mov
lock
pop
aad
loop
dec
movsl
push
xchg
popa
mov
add
jns
ljmp
mov
dec
adc
ds
test
out
enter
fistpll
jnp
aad
sbb
mov
js
add
cs
test
mov
pop
les
shlb
mov
jb
mov
push
scas
sub
dec
inc
notb
sbb
jl
fwait
add
mov
out
pushf
cmc
and
cld
addb
add
push
es
sbb
adc
outsb
jne
iret
add
xor
and
push
jg
andb
fidivrl
jae
ffree
inc
enter
mov
fldt
mov
testl
pop
mov
or
ret
popa
push
xchg
xor
in
scas
add
divb
jns
jno
fldcw
dec
mov
pop
adc
jnp
loopne
stos
ljmp
sbb
jb
add
orb
divl
mov
shll
gs
lret
add
sahf
dec
movsl
ljmp
pop
jp
lcall
aaa
cmp
or
subb
add
lods
imulb
ret
fs
aas
mov
sbb
mov
es
push
mov
aad
dec
pop
das
mov
out
cmp
jbe
in
mov
loopne
or
adc
clc
add
dec
rcl
ljmp
jp
sahf
inc
add
xchg
aas
scas
cld
std
jg
jno
shll
push
repnz
psllw
pop
mov
divl
push
and
nopl
call
push
mov
insb
and
subb
push
push
pop
push
push
xor
cmp
push
jno
add
mov
or
fucomip
add
imul
insl
in
pop
push
push
mov
xchg
pusha
cld
jmp
sub
cwtl
sbb
sbb
sub
jb
stc
aam
add
adc
inc
aas
jbe
mov
add
sbb
cmp
fidivrl
lods
cmpsl
enter
es
mov
add
push
cmp
lahf
hlt
xorb
sarb
cmp
nop
add
fisubrl
stc
add
pop
pop
and
push
shl
in
fstpt
dec
and
dec
add
in
adc
xor
add
mov
popf
sub
or
lret
and
int
clc
insl
pop
pop
inc
cmp
push
inc
and
sub
fldpi
push
add
mov
outsb
dec
jp
push
mov
imul
cmp
and
enter
mov
orl
adc
add
sub
add
das
insl
pusha
jns
mov
adc
pop
mov
aad
jge
pusha
negb
mov
cmp
xchg
push
roll
jmp
ja
xor
inc
add
mov
pop
push
andl
or
cmp
in
jno
in
sub
rcrb
cs
jbe
shll
cmp
add
sub
pop
dec
lret
mov
ret
jg
cmpsb
xchg
sbb
mov
inc
movsb
mov
pop
rorl
mov
add
pop
cmp
jne
add
xchg
leave
or
inc
cmp
mov
vcvttps2dq
or
in
xchg
scas
fadds
pop
aaa
jb
fisubl
add
mov
pop
jb
lret
pop
lock
sbb
pop
inc
mov
call
mov
or
sbb
cmpsl
pop
xchg
setg
lcall
sahf
sub
lods
add
pop
cmpsl
push
fwait
sub
clc
push
add
scas
ljmp
and
mov
add
pop
outsb
jl
jmp
add
imul
inc
push
add
mov
sti
cmp
push
std
addb
add
andl
xlat
std
xchg
incb
ret
pop
push
dec
clc
jbe
mov
add
shll
les
add
xchg
lea
aas
add
jno
in
jg
add
shlb
das
nop
ljmp
jge
add
jne
repz
mov
sahf
rcl
or
rcr
pop
push
pop
cmpsb
aas
popf
pop
stc
cmp
sbbb
add
mov
cmp
xor
mov
imul
cmp
jne
outsb
add
xchg
jno
push
xchg
add
fsubrs
out
inc
sub
sub
add
sbb
xor
xchg
loopne
cltd
mov
movsb
pusha
add
lcall
sbb
cld
or
sub
xor
mov
inc
test
hlt
mov
repnz
xchg
test
push
pop
pop
addb
lahf
mov
lret
mov
xor
dec
daa
pushf
pop
rolb
ljmp
cld
pusha
int3
add
inc
jl
das
daa
int3
jnp
add
xchg
fs
add
add
cmc
out
xchg
cmp
mov
mov
add
ret
je
jp
clc
push
dec
shll
into
fisubl
outsb
pop
sbb
dec
lcall
je
add
sub
add
pop
dec
in
cltd
mov
inc
adc
les
std
jae
fcmovnb
in
add
cmpsl
fistps
push
fidivs
insl
clc
outsb
xchg
add
aad
fwait
and
lret
xor
jb
cmp
jge
nop
out
shlb
add
rcrl
jns
add
cmpl
push
xchg
push
push
shrb
clc
inc
add
push
add
cmpsl
fadds
jae
mov
pop
add
repz
add
push
sub
push
xchg
ret
pop
aad
iret
loope
cld
in
mov
dec
pop
xlat
mov
mov
or
push
pop
outsb
add
push
sbb
das
lahf
popa
dec
lret
dec
sbb
add
xchg
insb
dec
and
es
add
jns
bound
mov
aas
adc
addr16
mov
pop
in
mov
ds
mov
cld
int
pusha
sub
jne
shl
insl
sub
mov
fcmove
and
sbbl
push
add
adc
rsm
faddl
xor
ret
jb
filds
repz
fcmovnu
add
jne
or
xor
sub
inc
je
jl
add
push
inc
mov
xor
test
cmp
push
mov
dec
movq
mov
cs
add
pusha
mov
inc
inc
loope
or
mov
mov
add
data16
dec
xlat
add
push
mov
testl
adcb
ljmp
aad
fmuls
mov
ljmp
adc
push
ret
add
loope
jns
pop
scas
add
add
pop
dec
sub
lods
dec
rcl
xchg
jecxz
les
push
xchg
adc
adc
mov
out
add
out
test
inc
dec
rolb
jecxz
repz
add
inc
push
xlat
push
sub
sub
dec
pop
shll
cli
or
sub
pop
sbb
jae
inc
dec
add
sub
add
out
jne
fcmovb
add
xchg
jg
pushf
pop
jbe
add
pop
sub
dec
sbb
or
jge
add
jle
add
lea
add
jg
shlb
sbb
mov
push
sbb
lock
aas
push
jne
lahf
jb
dec
lret
iret
xchg
xor
and
xchg
xor
push
in
loop
imul
inc
pop
pop
push
cmp
fdivp
inc
add
or
pusha
addb
xchg
adc
scas
mov
je
sti
cmpsl
aam
push
add
addr16
push
push
shlb
ds
mov
and
mov
cmpsb
add
push
shl
xchg
push
add
stc
ja
push
xchg
dec
pop
outsl
es
cmp
sbb
cltd
mov
inc
pop
dec
add
enter
dec
sub
fcmovu
pop
jb
std
stos
fsubrl
adc
adcb
push
cmp
and
add
jo
mov
add
cmpsl
adc
add
jns
gs
mov
inc
pop
add
sti
lcall
stos
cmpl
rorb
fldt
sbb
dec
cmpsl
clc
pop
add
mov
and
add
adc
sub
add
test
outsb
data16
jg
add
nop
int3
es
push
xchg
add
and
test
adc
call
test
lods
fadds
std
outsl
cs
insb
and
mov
ja
call
xor
sub
add
add
pop
pop
lahf
dec
mov
pop
add
insl
arpl
aas
icebp
push
enter
and
ltr
aad
imul
ja
push
push
mov
jns
pop
mov
adc
mov
repnz
cmp
and
xchg
loopne
add
inc
mov
and
xchg
mov
xor
arpl
jmp
test
in
mov
add
sub
pop
add
sbb
cs
or
fsubrs
mov
out
imul
xchg
pop
or
xorl
sbb
cltd
inc
mov
or
sub
aam
jnp
fidivrs
leave
inc
neg
in
pop
inc
pop
mov
sbbb
add
push
and
lock
in
nop
das
cmpsb
push
and
add
mov
aam
sahf
xchg
pop
or
cmpb
xor
mov
sub
lods
shll
fmull
in
sub
jge
hlt
hlt
inc
mov
mov
pusha
sbb
aam
pop
lcall
mov
xlat
push
aad
pop
mov
inc
push
push
stos
or
and
pop
fstps
jle
lahf
scas
add
inc
mov
loop
cmp
mov
jl
push
cmp
sub
mov
mov
pop
imull
imul
push
scas
dec
in
addb
mov
sub
push
inc
mov
sahf
or
es
inc
movsl
fimuls
mov
iret
mov
mov
mov
in
and
icebp
add
dec
jo
mov
aad
cli
loope
aas
pop
scas
dec
pop
mov
mov
sbb
pusha
mov
scas
mov
and
dec
imul
sub
push
pop
loopne
out
mov
inc
jecxz
mov
inc
or
dec
or
jge
lods
fwait
add
loopne
in
cmpsl
pop
add
push
jmp
dec
gs
jnp
jl
jne
mov
sar
jle
jno
add
xlat
add
add
cmp
push
add
jp
pop
xchg
repz
in
fsubs
jmp
dec
aaa
testl
cmp
filds
lcall
dec
pop
mov
jnp
xor
out
jg
insl
pushf
adc
mov
ja
test
pop
push
icebp
xor
mov
mov
icebp
sahf
sbb
xlat
mov
cmc
notl
sub
enter
jne
xchg
push
jae
repnz
or
sar
jge
pop
mov
push
add
xchg
call
loop
cld
sarb
cmp
jno
testl
or
xchg
jp
jno
shlb
fisubrs
std
mov
shl
std
icebp
rcrb
mov
jge
mov
push
aaa
ss
orb
push
push
push
pop
ret
or
add
in
mov
lock
lea
xchg
pop
iret
sbb
aam
loop
pop
jecxz
mov
fdivs
jmp
add
sbb
fs
lock
mov
cld
sbb
push
or
cmp
xchg
push
lea
rcrl
andb
add
pushf
outsl
add
cwtl
iret
mov
add
cmpb
mov
or
mov
inc
xor
outsb
lret
cwtl
daa
xor
call
inc
adc
dec
sub
cli
mov
jecxz
sti
or
add
mov
ljmp
add
mov
lock
loop
notl
adc
add
test
loopne
add
lock
inc
aas
sub
xor
inc
pop
mov
and
cli
fimuls
xchg
sti
pop
cld
lret
add
negl
notb
and
cmp
ja
add
inc
push
shll
pop
xor
mull
jnp
inc
int3
push
test
xchg
add
pop
pop
xchg
push
shll
scas
mov
cmpsl
sar
adcb
mov
jle
jo
add
add
sub
and
adcb
push
nop
pop
fsts
mov
cmp
xchg
sub
push
and
dec
push
xor
les
add
push
xchg
inc
push
push
xor
inc
or
jp
add
iret
push
int
jle
into
mov
inc
sub
jecxz
xlat
test
call
cmp
add
std
sub
lods
int3
sbb
pop
add
mov
repnz
imul
pusha
or
push
add
add
mov
lods
add
je
stc
pop
push
or
cmp
add
add
clc
cli
jg
mov
inc
mov
nop
cmp
jne
lahf
add
movsl
lods
aas
xchg
xor
push
and
cmpsb
push
sub
mov
pop
mov
adc
xor
in
addb
movsl
adc
sub
lcall
scas
add
xor
pop
mov
jg
push
leave
sub
mov
pop
dec
sbbl
sub
mul
insl
inc
mov
mov
push
dec
sbb
add
cmpsb
lods
xor
add
push
in
pop
mov
jo
into
jnp
add
mov
sub
and
mov
bound
hlt
sbbb
push
test
fldcw
sti
inc
jmp
dec
shl
xchg
or
cmp
sbb
out
movsl
add
xor
push
dec
pop
xchg
adc
repnz
jp
pop
inc
sbb
sub
push
scas
jge
sub
add
rcll
mov
mul
nop
or
cmpsb
lcall
and
jecxz
or
push
cmp
xor
add
cmpb
pop
jge
jl
mov
in
jo
push
jno
cmpb
add
mov
jp
pop
cmpsb
shrb
stos
mov
mov
add
movsl
mov
mov
cld
sti
popf
insl
cmp
in
or
aas
jmp
in
mov
fldt
add
dec
mov
and
ljmp
imul
sar
imul
fisubrl
or
add
cs
sbb
cmpl
loopne
sbbb
cld
loop
mov
loope
cmpsl
cld
inc
add
and
push
push
add
sbb
addr16
pop
movsb
cld
mov
mov
aad
loopne
hlt
mov
sbb
adc
daa
out
cmp
cmp
fsubrl
push
sub
je
stos
xor
jmp
lods
lock
xchg
add
test
add
fs
pop
iret
cwtl
test
jne
xorb
cltd
and
int3
adc
mov
or
outsl
fs
xlat
xchg
shlb
fbstp
add
imul
lea
pop
shr
push
push
ficoml
cmp
cmp
rcr
inc
pop
addr16
cmp
lods
pop
rcrb
xor
add
mov
push
stos
ret
add
hlt
out
sub
jge
rolb
lcall
push
inc
mov
aas
mov
add
sub
add
push
pop
ljmp
dec
cmp
rorl
push
add
lods
js
jmp
mov
jae
cld
insl
add
aas
je
or
ljmp
outsl
push
mov
mov
in
sahf
push
mov
adc
mov
jl
sqrtps
and
add
movb
lret
imul
out
inc
out
add
pop
push
fidivrl
pusha
insb
and
lods
aaa
or
cmp
add
gs
pop
sub
stc
cmpsb
add
push
je
mov
pop
inc
mov
sbb
jg
in
add
stos
xor
mov
in
jo
jo
cmpsb
add
inc
add
movsb
scas
adc
add
or
into
and
in
fwait
add
sbb
cmp
inc
cmp
inc
add
pop
negl
pushf
js
dec
in
pop
add
lods
jo
and
add
dec
loopne
sbb
inc
or
lods
mov
pop
testl
dec
popf
lds
cmp
sbb
cmp
insl
movsl
dec
sbb
lcall
xchg
jp
pushf
fadds
jne
xchg
push
sub
ret
add
xor
ds
into
outsb
mov
jge
add
jns
stc
sub
test
movsl
add
adc
xchg
loopne
incb
jne
mov
cmp
mov
or
fidivrs
js
and
js
add
pminsw
sbb
add
jmp
xchg
aam
or
cmp
pop
aad
jl
shl
lret
dec
cmp
jg
add
stc
push
cmp
pop
lods
fidivrs
pop
icebp
and
dec
push
pop
daa
cwtl
jns
mov
mov
cmp
jno
push
and
ret
jmp
fldt
adc
add
std
lret
cli
sbb
mov
jnp
push
movsl
add
mov
push
pop
pop
test
inc
inc
imul
mov
mov
pop
lcall
jge
je
aad
rcll
sti
add
add
mov
loopne
and
jb
ljmp
insb
inc
cmc
push
add
mov
dec
incb
out
mov
xchg
mov
cmp
mov
movl
add
mov
mov
imul
leave
lock
inc
fisttpl
mov
lahf
enter
pop
mov
jns
pop
ror
push
mov
adcb
xlat
push
imul
popf
and
icebp
cmc
mov
and
mov
ss
popa
orb
add
mov
and
add
push
sbb
add
and
jnp
sub
dec
mov
lret
sti
add
cmp
pop
hlt
mov
es
add
adc
test
icebp
push
movzwl
xor
push
mov
lahf
pop
mov
mov
loop
add
data16
mov
sub
lcall
js
lea
mov
orb
int3
or
jle
js
sub
inc
jo
cmp
and
mov
movsb
cmp
cli
ret
fstl
add
pop
andl
add
ja
subb
scas
push
xchg
adc
aas
jne
mov
clc
xor
jbe
mov
incb
daa
mov
mov
jnp
add
xchg
mov
push
andb
scas
in
lock
xchg
pop
jmp
sti
out
gs
push
dec
push
sbbb
xchg
in
imul
push
andb
mov
insb
dec
push
cmp
arpl
xchg
nop
outsl
out
and
testb
popa
jg
maskmovq
idivl
xchg
mov
jge
jbe
bnd
push
and
jb
push
add
xor
push
xor
inc
ja
cld
hlt
push
shl
ret
fs
pop
dec
leave
adc
add
sub
popf
or
std
add
cmp
in
lea
lahf
push
pop
mov
push
in
sub
jns
aaa
mov
adc
das
push
dec
and
jmp
inc
test
sub
mov
loope
testl
ljmp
iret
add
xchg
int
mov
jae
add
adc
fs
call
mov
mov
call
jge
int
mov
sub
loopne
sbb
add
dec
inc
xchg
pop
hlt
mov
cmp
mov
sti
add
sub
add
aaa
jge
jg
pop
sub
cld
scas
and
fs
adc
cmpsb
leave
jle
add
pop
sbb
add
mov
add
push
xor
dec
xor
insb
lahf
mov
cmp
fidivs
test
xor
mov
pop
pop
faddp
sub
push
add
insb
jnp
mov
stos
je
add
mov
dec
cs
xor
fisubs
add
xor
jno
cwtl
out
and
mov
or
es
cmc
mov
mov
fistpl
dec
sbb
bound
xchg
dec
lret
mov
aas
mov
add
mov
mov
fmul
rolb
mov
xchg
faddl
lods
add
pcmpeqw
xor
push
fldcw
int
pop
add
inc
adc
pop
add
gs
fwait
sub
imul
xlat
dec
push
xchg
jmp
add
je
mov
stos
xchg
imul
add
sbb
jno
lds
add
inc
jbe
pop
fiadds
cmp
test
mov
mov
mov
pop
or
inc
pop
int3
push
push
jno
add
fs
mov
pop
shrl
sub
push
lods
in
int
sarb
mov
gs
shr
mov
add
outsb
pop
jo
pushf
lret
sbb
sahf
sbb
fsubrl
add
rolb
bound
sub
nop
cmpb
add
in
popf
iret
mov
add
jle
imul
sbb
test
mov
jne
js
xchg
sbb
adc
sub
add
mov
push
mov
data16
ss
jmp
sub
add
add
add
fs
mov
ret
jp
mov
add
aam
les
loope
mov
cmp
mov
add
loopne
lods
mov
in
leave
add
xchg
push
and
mov
aaa
add
jae
clc
jecxz
or
ja
xchg
adcb
roll
enter
fstpt
or
jno
add
into
addr16
ret
add
lret
leave
out
add
mov
mov
inc
sub
pop
and
push
xchg
sarl
in
dec
int3
jp
add
jmp
ficomps
ss
outsl
sbb
push
push
cltd
dec
mov
pop
lods
imul
push
mov
outsl
pop
fldenv
xor
dec
add
mov
xor
jno
sub
sub
aas
cwtl
cmp
movl
pop
stos
push
pop
pusha
notb
add
mov
sub
cmp
negl
jo
mov
data16
dec
xchg
push
mov
jo
sbb
addr16
add
pop
fwait
pop
jb
xchg
inc
out
cld
cs
dec
cltd
lods
pop
sbb
mov
cld
cmp
jl
aaa
add
test
pop
mov
inc
add
mov
mov
ret
mov
fildll
pop
cmpb
jae
xchg
cmp
fstpl
js
push
add
add
outsl
jp
pusha
into
add
ret
add
arpl
lahf
in
lret
shrl
add
test
nop
sbb
xor
add
stos
xchg
mov
add
test
test
adc
mov
inc
push
xchg
fs
mov
mov
gs
xor
pop
xchg
cmpsl
movl
mov
add
push
jg
jge
sub
jecxz
out
lret
ret
inc
sbb
into
gs
icebp
pop
rolb
mov
aam
mov
repnz
jno
loopne
out
add
cld
sub
sbb
lret
pop
popa
dec
int3
pop
push
insl
je
outsl
out
pusha
enterw
std
mov
aad
aam
insl
lods
xchg
je
push
mov
movnti
add
mov
loopne
xchg
dec
add
jnp
std
cwtl
jbe
iret
cmp
lahf
aaa
test
ss
leave
mov
in
insl
pop
pop
arpl
push
pop
adc
std
test
mov
jne
out
out
cli
add
mov
inc
shrb
pop
add
les
hlt
push
mov
pop
out
enter
shlb
test
add
data16
js
xchg
or
mov
js
cmp
subb
push
hlt
insb
sarb
lods
orb
loope,pt
push
jbe
jae
add
xor
pop
iret
imul
movsl
sub
add
orl
xor
add
sub
and
js
test
std
stos
lcall
add
mov
sbb
add
jl
jb
out
bnd
dec
js
out
add
loop
gs
pushw
in
xor
add
rcl
ret
xchg
and
pop
push
mov
inc
or
add
rclb
xor
add
fwait
outsl
xor
cmp
lret
fdivs
mov
ffree
mov
add
inc
sti
xlat
push
mov
cmpsb
add
dec
outsb
mov
mov
mov
aam
push
inc
xor
sti
mov
int
lret
cmp
xor
into
fdivl
nop
or
adc
add
hlt
jmp
fstps
int
or
ss
pop
xor
idiv
leave
fcoml
ljmp
roll
xor
jge
sbb
orb
xchg
and
lock
test
lret
imul
mov
push
leave
aaa
and
decb
aam
pop
jns
test
add
shrl
dec
movsl
negl
fldt
mov
xor
cs
das
mov
xchg
pop
lcall
stc
pmullw
jmp
mov
fsubl
lret
mov
pop
xor
mov
sbb
and
pop
sub
dec
jg
xorb
push
int3
adc
roll
pop
cmp
jo
dec
mov
neg
insb
jns
sbb
ja
scas
and
mov
lea
inc
jae
add
sub
xor
in
std
stc
mov
mov
scas
popa
rcrb
ltr
stos
adc
or
cmpsb
movsb
xor
cmp
and
mov
icebp
push
iret
mov
mov
sbb
mov
add
movsl
insl
cvtpi2ps
xlat
pop
call
movsb
pop
add
push
sub
inc
jge
stos
or
movsb
sahf
shl
xchg
add
fdivr
test
mov
cmp
push
sti
mov
add
mov
or
dec
cmp
lahf
rcr
push
cmp
rol
sbb
and
sti
push
std
sahf
mov
add
fcomip
inc
fsts
sbb
icebp
in
mov
adc
mov
mov
xchg
or
push
add
sbb
pop
addb
adc
inc
xchg
inc
daa
pop
hlt
data16
push
in
fdivl
das
mov
and
jecxz
xchg
lock
sbb
add
jl
push
jns
fiaddl
add
lods
movsb
cmpsl
jp
sub
and
dec
lods
out
push
fdivs
mov
jmp
pushf
mov
jb
add
mov
int
add
cli
notl
mov
inc
test
add
js,pn
cmp
sub
cmc
xchg
sub
xor
pop
jo
jne
in
cmc
arpl
push
mov
pop
out
pop
in
adc
mov
mov
mov
cmc
popa
mov
push
shl
dec
inc
cmp
in
mov
aam
enter
add
and
jecxz
js
add
jb
mov
pushf
add
jle
repz
mov
dec
hlt
cmp
mov
ret
add
fidivrl
in
stos
sub
mov
addr16
dec
xlat
add
pushf
cltd
jl
pop
jnp
sbb
dec
add
mov
sbb
sub
rol
add
pop
outsb
push
mov
add
pop
fwait
sub
jecxz
and
xchg
dec
push
add
pop
sbb
jnp
add
inc
pop
add
ds
jmp
xlat
jnp
mov
stc
inc
pop
sbb
mov
mov
test
xor
xchg
add
sbb
pop
jb
cmp
pop
pop
fucomip
jns
xchg
add
ss
add
stos
roll
xor
lahf
scas
notl
hlt
jnp
addr16
add
jo
pop
js
pop
mov
xor
add
sbb
aam
push
cmp
mov
add
mov
rcr
cmp
ret
in
xchg
inc
out
pop
shlb
add
imul
lods
pop
or
mov
je
divl
leave
in
outsb
add
es
inc
stos
mov
or
xchg
out
push
add
fidivrl
fwait
pop
fidivs
add
pop
push
mov
icebp
jno
scas
call
outsl
sbb
xchg
jge
orl
adc
add
xor
pop
or
xchg
ja
add
lock
push
jnp
out
rolb
xchg
fdivl
add
ret
sbb
imul
mov
out
shr
jl
into
cld
or
enter
xchg
add
xor
je
repnz
in
arpl
or
add
push
stos
cmpsb
add
mov
sti
ss
int
sub
in
push
jecxz
push
cmc
popf
push
mov
add
dec
and
scas
mov
icebp
loopne
mov
stos
aam
sub
hlt
and
mov
mov
jnp
das
add
popa
cld
sub
popf
mov
cs
adc
push
sbb
push
les
jne
loop
in
js
out
pop
fiaddl
mov
outsl
and
add
popf
mov
add
fidivrl
pop
xchg
pop
mov
mov
add
outsl
outsb
mov
xlat
nop
dec
xchg
stos
add
gs
out
scas
xor
push
scas
mov
dec
test
jmp
and
cmp
lods
mov
call
push
in
inc
mov
int
out
xchg
rcl
dec
roll
jmp
js
mov
roll
clc
mov
or
in
lds
inc
or
in
add
fistl
lahf
cmp
lahf
inc
inc
pop
and
lods
or
rolb
pop
ss
insl
and
add
es
push
test
hlt
add
mov
ja
push
fists
in
inc
scas
add
mov
cmp
add
in
aaa
ds
lret
mov
call
sbb
pop
out
clc
loopne
ficomps
dec
cmp
movlps
pop
xlat
inc
xchg
int3
fistps
movsl
push
inc
sbb
jae
or
or
sub
add
mov
and
or
idivl
out
fwait
sub
jl
jecxz
push
fidivs
insl
les
jno
mov
mov
lea
ret
test
inc
inc
mov
add
sub
add
outsl
mov
jg
pop
pop
mov
add
mov
jo
add
popa
dec
xchg
les
pop
jl
andl
jp
in
xor
jnp
cmp
add
add
mov
mov
movsl
fstpt
int
add
mov
ret
sub
pop
lea
dec
and
movsb
fsubrs
repnz
mov
lods
int3
imul
rclb
pop
add
mov
add
push
lret
jne
pop
adcb
dec
add
pop
inc
jg
loope
es
mov
mov
fdivs
repnz
adc
adc
mov
ja
push
test
in
repz
add
push
mov
ja
xchg
pop
cmpsl
push
rorb
lods
or
mov
mov
outsl
mov
dec
add
je
mov
and
mov
lahf
les
aas
adc
test
pop
sti
pop
jnp
jno
fimuls
aas
es
inc
stc
push
lea
add
stos
adc
jle
fwait
out
add
mov
push
sbb
daa
mov
aam
movsl
mov
test
add
cmp
in
dec
rcr
pop
adc
adc
shl
sub
add
push
lret
imul
push
ja
notb
dec
mov
insl
sbb
and
add
jbe
or
cmp
inc
cmpsl
in
sarl
xchg
jg
add
inc
pop
in
je
dec
add
sbb
mov
icebp
ficoml
pop
sub
add
inc
hlt
jecxz
lahf
paddb
jne
loopne
push
sbb
sarl
shrb
mov
fcoml
inc
inc
ss
jl
xor
cli
xor
call
pop
rcrb
push
popf
popf
adc
xlat
mov
add
push
fldt
nop
jecxz
jb
sub
inc
jne
jbe
mov
ljmp
mov
nop
push
enter
or
sbb
jb
hlt
pop
jae
push
out
cmpl
sahf
and
icebp
or
hlt
inc
pop
xchg
arpl
cli
mov
cmp
fucomip
pop
mov
movl
loopne
out
pandn
in
arpl
in
test
push
dec
add
dec
clc
lret
insl
push
add
test
inc
jge
add
mov
mov
sbb
in
sar
js
add
lret
push
xor
lds
jo
fs
fsubr
test
adc
aas
pop
pushf
mov
mov
mov
cltd
in
loope
ds
sub
jb
sbb
mov
xchg
jmp
jae
sbb
ret
in
iret
cmpl
mov
out
in
jo
add
xor
push
mov
mov
pop
jnp
inc
lds
inc
push
add
lcall
or
jae
call
sti
repz
out
mull
into
sub
ss
xchg
shl
cmp
lcall
and
mov
add
movsb
outsb
adc
add
cmpsb
out
mov
loopne
xchg
sbb
add
inc
jne
xchg
mull
lcall
cmp
add
pop
outsb
mov
jmp
pop
pop
xchg
cmp
popa
lock
fmuls
or
xchg
enter
iret
mov
ljmp
add
pop
push
push
inc
lods
pusha
test
test
adcb
mov
jnp
fwait
add
in
fbstp
lret
sbb
mov
dec
sub
mov
loopne
push
add
js
mov
in
or
push
mov
dec
add
pop
pop
popa
mov
adc
aas
push
dec
mov
fisubl
aaa
add
mov
push
inc
hlt
gs
out
ret
xchg
hlt
mov
add
pusha
lock
cmp
int
add
cmpsb
sbb
push
aad
inc
xor
push
out
mov
jae
pusha
fildll
dec
xchg
push
xchg
mov
jns
add
inc
sub
pop
loopne
cmp
enter
pusha
xchg
pop
jmp
sahf
cmp
imul
divl
push
loope
daa
xchg
or
shlb
add
cli
sbb
shr
add
cwtl
adc
mov
stc
fimull
jg
mov
loopne
inc
adc
data16
lds
add
pop
repz
cmp
add
mov
add
mov
inc
inc
jbe
push
scas
aad
in
fiaddl
add
cmpsl
adc
std
pop
push
stos
pop
shlb
mov
add
movsb
inc
inc
cmp
outsl
cli
or
adc
cmp
add
add
outsb
or
sbb
inc
and
sub
std
dec
adc
mov
call
mov
imul
xchg
xor
sbb
cmp
inc
add
rorb
and
or
xor
std
cltd
lock
jmp
add
in
sbb
sahf
mov
jns
inc
cmpsl
jne
std
rcrb
cmp
xchg
addr16
out
sub
shr
adc
add
test
and
add
xor
cmpsl
add
sub
push
and
hlt
mov
jnp
adc
pop
iret
add
mov
call
add
mov
add
stos
outsl
mov
inc
jno
jo
add
adc
test
lods
cwtl
inc
cld
rorl
out
aam
sub
cs
add
or
cmp
fcomps
aas
mov
dec
cmp
mov
sbb
sub
lahf
rcrb
mov
add
loopne
insb
mov
jle
xchg
xchg
inc
lock
sbb
add
mov
repnz
push
mov
adcb
mov
lds
nop
push
pop
mov
inc
sub
dec
js
lods
jbe
adc
add
and
loopne
lret
jb
xor
movsb
add
adc
adc
iret
das
jae
fsubrs
testl
daa
add
xor
push
add
aam
imul
adc
mov
icebp
adc
mov
inc
imul
push
add
in
int
or
cmp
push
rcll
add
sub
ds
mov
lods
jnp
pop
rolb
inc
jns
ds
ljmp
imul
cmpsl
add
pop
inc
loope
jge
add
ljmp
xchg
cmp
fcompl
mov
outsb
jnp
add
pop
sbb
or
int3
sbb
or
add
push
cmc
into
cwtl
loop
rcll
shl
stos
sub
dec
add
sbb
adc
adc
dec
ret
add
mov
pop
fcoms
sbb
sbb
fcmovne
repnz
out
dec
push
dec
add
xorl
add
cmp
dec
repz
movl
mov
add
xchg
test
mov
cmp
cmc
cmp
sarl
push
cmpsb
pop
add
or
pop
mov
cmp
add
push
enter
add
sbb
dec
mov
test
out
pop
subb
scas
add
cltd
mov
push
add
and
cmp
or
shll
imul
dec
mov
mov
cmp
addb
dec
or
jmp
mov
scas
or
fisubrs
inc
pop
lea
add
inc
mov
jge
in
xor
pop
out
icebp
popa
mov
loopne
add
les
je
fbld
mov
in
and
xchg
leave
cmp
sbb
enter
lods
dec
adcb
add
jge
or
mov
mov
rcrl
pop
sbb
es
xor
call
rcl
push
xchg
jecxz
push
mov
adc
paddusw
adcl
fdivrl
mov
or
outsb
inc
orb
ret
add
andb
stc
inc
jl
leave
mov
add
adc
inc
xor
loopne
je
and
push
dec
add
in
dec
sbb
mov
pop
sub
ljmp
add
xchg
pop
icebp
shlb
add
sbb
shr
adc
es
adc
test
lahf
xchg
add
add
in
inc
pusha
jno
add
scas
and
jp
add
shrl
in
pop
lcall
mov
mov
movsl
xchg
cmpsl
lcall
sub
add
scas
notl
out
add
insl
in
out
call
scas
fcomps
adc
mov
add
mov
test
jmp
mov
inc
dec
mov
sahf
mov
repnz
std
aas
jecxz
mov
add
arpl
pop
cs
inc
pusha
sbb
pusha
inc
rol
add
mov
mov
mov
or
inc
and
add
clc
scas
xchg
les
in
cmp
stos
clc
leave
push
jg
iret
add
or
aad
arpl
xchg
in
lret
jge
andb
jle
fimull
testb
stc
daa
fs
cmpsb
cwtl
mov
scas
das
add
shlb
pop
adc
sub
push
xor
xchg
imul
outsb
out
iret
je
add
dec
jmp
add
ficompl
pop
in
subl
pop
loop
push
mov
cmpsl
jno
add
push
addl
cmp
add
cmp
sbb
insb
mov
jb
add
leave
and
andb
xor
in
pop
fst
mov
dec
dec
iret
pop
and
pop
mov
hlt
cmp
sti
aaa
jno
repz
out
mov
mov
testb
and
fimull
xchg
xchg
dec
add
and
push
cmp
ljmp
es
jo
jns
fistpll
jge
rcr
add
outsb
divb
add
popa
xor
add
pop
or
hlt
adc
inc
xor
das
ror
pop
lock
aas
mov
outsb
ds
mov
jns
das
push
or
cmpb
inc
pop
xchg
aam
xchg
adc
and
xor
cs
and
jno
jl
add
push
xlat
jb
cmp
repz
cmp
mov
loope
lret
and
sahf
lcall
xor
mov
push
adc
lock
add
dec
fwait
mov
jb
xor
cmc
stos
inc
mov
bswap
sbb
and
ljmp
rdtsc
mov
sub
dec
push
jbe
aaa
add
inc
mov
lods
sub
enter
or
cmp
push
sub
sub
verr
jecxz
daa
cmpb
enter
mov
adc
pop
dec
flds
js
add
mov
sbb
add
inc
or
xlat
lods
addb
dec
fstpt
mov
fwait
cltd
bound
inc
cmpsb
stos
ljmp
xor
popl
mov
mov
jg
fstp
sbbb
pop
add
mov
std
add
fwait
pop
mov
add
cld
imul
mov
jge
cmc
push
out
and
push
xor
rcr
inc
arpl
pop
out
jne
jmp
jo
mov
ds
add
insb
mov
idivb
pop
xchg
dec
and
xchg
roll
add
xchg
movb
add
push
dec
scas
mov
push
fyl2xp1
out
fsubr
inc
lcall
notb
cs
pop
xchg
and
pop
fisubs
add
stos
and
shl
mov
jmp
lods
int
ds
cmpb
ss
in
add
add
fldcw
sti
pop
sub
ljmp
fidivrl
push
xchg
dec
dec
subl
sub
jge
fidivs
mov
fcmovnu
add
fs
sbb
mov
xorb
pop
lret
lcall
xchg
sub
inc
and
pop
sbb
je
idivb
cli
mov
fldl
mov
jne
inc
add
test
cmp
sbb
rcrb
sbb
add
cmp
add
mov
incb
rcr
shrl
add
pop
push
idivl
sub
inc
xor
in
inc
add
lret
jle
add
addr16
in
dec
arpl
jnp
sbb
fadds
sbb
rcrb
jge
pop
ja
add
loop
sahf
add
pop
push
and
add
mov
pop
sub
out
daa
fld
and
pusha
mov
mov
add
pop
ljmp
pusha
dec
pop
dec
push
push
test
call
cltd
fisttpl
mov
loopne
movsl
fimull
fwait
pop
adc
imul
mov
sbb
mov
add
mov
mov
lock
add
insl
push
or
hlt
leave
sbb
mov
push
cmp
push
mov
jae
hlt
mul
or
sbb
out
add
in
jecxz
xchg
mov
push
pop
add
enter
outsb
mov
add
fwait
sub
or
ja
cmp
mov
xchg
pusha
adc
pop
xor
jno
sarl
jae
sahf
jmp
fs
subl
je
jge
mov
inc
pop
subl
in
push
hlt
pop
aam
push
push
mov
divb
mov
into
mov
sbb
push
adc
pop
int
int3
div
fsubrp
sbb
pop
cmp
push
imul
add
dec
pusha
adc
xchg
cmp
jae
add
xchg
inc
dec
scas
push
and
sbb
mov
push
popa
and
xchg
xor
dec
add
fdivrl
cmp
out
enter
cmp
sbb
inc
mov
fiadds
arpl
sub
add
icebp
lret
iret
sub
sbb
add
hlt
notl
mov
pop
insb
push
add
sti
mov
out
or
into
jo
mov
adc
xchg
shl
lods
xchg
jo
test
mov
subl
xchg
mov
jl
jnp
add
divb
and
jb
add
stos
inc
sub
xchg
outsb
lcall
les
scas
jne
test
or
sti
ret
push
add
in
push
outsb
push
stos
in
xchg
jns
fs
xor
xchg
cmp
adcl
cmpsb
andl
into
add
pusha
stos
and
pop
ds
lahf
and
daa
repz
or
sahf
fcomi
or
es
aaa
rcrb
mov
outsl
or
mov
scas
leave
fcmovu
mov
add
lahf
mov
jb
inc
rolb
mov
sub
add
add
mov
add
jne
inc
jle
add
ss
pop
into
cld
push
jb
in
filds
add
fdivr
sub
test
cmpsl
imul
push
mov
sub
adc
mov
lret
addr16
add
or
pminsw
jl
loopne
pushf
fistps
add
pop
arpl
sub
mov
sti
imul
test
pusha
xchg
rolb
outsl
mull
mov
add
adc
loope
sub
scas
sti
sbb
or
test
jae
xor
scas
xchg
sub
out
add
mov
in
mov
mov
push
inc
add
mov
mov
pop
add
cmp
sbb
pop
dec
lea
lret
add
mov
mov
out
shlb
xchg
mov
and
repnz
jp
jl
cmp
add
rolb
test
xchg
lcall
mov
cmpsl
arpl
add
dec
cmp
repz
add
mov
mov
loop
cmpsb
add
insl
fcmovu
lods
imul
out
mov
repnz
bound
jb
pop
or
aad
mov
sub
xor
hlt
lods
add
loop
pop
in
sahf
sbb
pop
js
mov
inc
adc
in
pop
fldcw
pop
xchg
sub
rcrl
lock
add
addb
and
xor
ljmp
inc
out
ret
jne
jns
outsl
mov
fildl
inc
les
loop
aad
push
orb
roll
mov
ljmp
push
pop
out
push
out
add
lds
push
sub
rclb
cmp
add
push
inc
cwtl
add
or
and
lods
loop
fldcw
jle
add
jg
test
inc
dec
hlt
inc
add
sub
push
dec
or
je
xchg
fs
pop
sbb
sahf
incl
outsb
cs
dec
sbb
xor
pop
push
sub
or
push
mov
push
jl
fdivrl
add
sbb
push
aaa
push
fistpll
pop
test
and
gs
inc
sbb
add
dec
mov
xchg
aas
mov
and
or
cmpl
sar
pusha
cwtl
adc
bound
sbb
imul
mov
jne
mov
pop
cmp
pop
sbb
mov
ss
jne
clc
add
stos
jl
lds
dec
jbe
jb
adc
cmp
xchg
mov
xor
lcall
xor
rclb
in
push
jge
fsub
inc
and
negb
jne
add
mov
push
add
pop
sti
rclb
push
inc
mov
pop
mov
pop
negb
sbb
push
shll
sub
clc
xor
dec
pop
or
mov
inc
or
jmp
pop
ljmp
and
dec
orl
imul
cmp
cmp
ret
pop
sti
int3
xor
repz
imul
dec
adc
push
inc
or
shrb
js
or
cvtps2pd
push
scas
int3
addr16
movsb
ja
adc
adc
lret
add
sarl
mov
add
outsb
in
mov
pop
pop
fdivrs
mov
push
lea
pop
std
mov
aam
pop
jnp
add
cmpsl
test
add
xor
jle
cwtl
mov
jns
loopne
mov
scas
imul
mov
pop
jbe
mov
add
icebp
mov
shll
add
adcb
pop
cmp
jo
lahf
add
and
ljmp
addb
xchg
add
or
pop
pop
add
push
cwtl
ljmp
fs
movb
test
filds
popa
push
loopne
sub
push
andb
bound
add
xor
stos
call
loop
sub
push
cmp
shr
mov
loopne
testl
adc
arpl
stos
xorb
out
movq
mov
data16
frstpm(287
jb
jno
push
add
cmp
subl
fucom
xchg
movsb
jno
insl
add
rcrb
add
and
cwtl
cmc
rclb
loop
imull
test
fistpl
pop
int3
jecxz
je
add
in
mov
xor
movsb
pop
push
in
pop
pop
scas
cmp
lret
push
add
push
xchg
dec
sub
add
in
mov
fisttps
dec
mov
dec
fdivrp
ret
mov
shl
jo
iret
mov
sbb
push
xor
flds
xchg
jge
sub
adc
es
sub
dec
aaa
fisttpl
mov
mov
cmc
inc
jne
int
add
adc
jbe
jo
fs
xchg
push
testb
mov
pop
mov
sbbl
or
fwait
test
ss
or
iret
sbb
add
jge
call
lock
mov
mov
push
lea
loop
ret
popf
jns
test
add
mov
mov
shrl
and
cmp
pop
rol
call
add
outsl
negb
add
cs
cmp
sbb
es
rolb
jp
fprem
lods
scas
fildl
outsl
in
das
fs
ds
fnstsw
inc
mov
pop
mov
mov
jae
or
leave
push
cmp
xchg
or
mov
or
in
fneni(8087
div
jbe
subl
push
mov
insl
fcomps
scas
ret
mov
arpl
pop
xor
inc
add
jg
cmp
insl
inc
and
pop
add
js
and
icebp
test
add
push
xchg
fldl
or
jge
hlt
es
push
mov
pop
xchg
xchg
inc
adc
rorb
or
xor
cld
faddl
insl
sbb
mov
push
inc
add
push
xchg
roll
pusha
or
push
add
mul
jge
jmp
mov
ror
lock
push
ret
add
fwait
mov
cmp
jo
sub
fildll
add
fisubl
mov
jnp
add
or
xchg
inc
sbb
fiadds
enter
add
mov
cltd
pop
xchg
enter
jecxz
popa
sarl
enter
xor
add
outsb
bswap
push
inc
add
xchg
addb
xchg
jns
cmc
leave
dec
push
jnp
add
testl
xchg
loop
dec
jmp
outsl
imul
fldl
test
pop
jle
lods
add
push
test
add
and
pop
lods
sbb
aad
jge
or
cmp
lods
push
mov
mov
adcb
outsl
cmp
and
arpl
jno
int
push
out
mov
mov
sahf
and
jp
pop
imul
mov
mov
push
sub
loopne
loop
cmp
and
xchg
cmp
testb
mov
fidivl
fucomp
xor
faddp
jge
push
xchg
adc
ss
add
push
push
ficompl
jae
sub
add
mov
fisttpl
jo
in
imul
out
in
mov
add
xlat
pop
push
nop
mov
pop
adc
xchg
add
mov
out
lods
xchg
lock
cmpsl
sub
inc
push
aaa
mov
test
sub
xchg
lods
mov
xchg
sbb
fnstsw
xorb
add
rorl
xor
mov
sbb
add
arpl
in
mov
mov
mov
mov
cmp
cltd
movsl
push
xor
add
adc
add
mov
fmulp
push
imul
add
pop
adc
les
sbb
or
fisubrs
enter
jp
loop
add
and
sub
mov
movsl
loope
sti
mov
mov
jl
add
sub
sbb
add
cmp
mov
sbbl
aas
jp
sub
call
adc
cmp
jp
xchg
add
shlb
test
ljmp
insb
xchg
imul
add
data16
add
mov
pop
andb
add
push
ss
mov
in
popa
jmp
pop
outsl
lods
pop
mov
add
mov
rclb
lods
outsb
cmp
add
lahf
scas
mov
roll
aas
aaa
push
xchg
xchg
test
stos
inc
add
pop
jg
rclb
fdivr
out
outsb
lds
jo
fldl
fwait
dec
mov
rorb
test
pop
and
negb
mov
push
int
or
daa
cmpsl
mov
and
leave
in
push
fldcw
hlt
movsl
mov
push
inc
or
add
pop
ret
aam
sbb
sub
shrb
add
sahf
mov
sub
mov
in
out
cs
dec
aas
notl
pop
jae
fsubrl
cmp
inc
add
inc
push
aam
push
xchg
push
cmp
jmp
in
out
cmp
es
mov
jp
push
cld
dec
jnp
pop
mov
cmpsl
mov
sub
arpl
lret
push
dec
lods
xor
pop
inc
add
cld
or
mov
add
lret
add
scas
aas
daa
sub
nop
imul
lds
mov
in
lock
mov
and
test
pop
cmp
add
mov
shrl
and
rorl
rclb
xchg
mov
add
ljmp
cwtl
push
mov
icebp
push
mov
addb
xchg
jbe
sti
add
jo
lret
mov
imul
xchg
lret
movsl
cmp
aaa
cmpl
fsubrl
jge
sti
rcrl
rolb
insb
out
jbe
rorl
mov
cmpsb
aaa
jns
flds
hlt
inc
pop
icebp
cld
je
add
push
dec
testl
add
ret
dec
ret
mov
cmp
sub
or
adc
jmp
mov
cmp
xchg
add
cli
test
negb
clc
daa
add
dec
mov
sbb
cmp
xchg
addr16
test
pushf
movsb
adc
pop
mov
std
add
mov
dec
mov
xor
push
add
add
sbb
fistps
add
stos
add
pushf
imul
add
dec
push
out
out
pop
arpl
ret
push
push
enter
pop
jb
rclb
fcompl
add
xchg
jns
repz
std
lahf
xchg
test
stos
sub
out
pop
add
and
adc
int3
add
jmp
cs
dec
pusha
mov
cmp
cmpsl
fildl
pop
aas
pop
fiaddl
es
push
xchg
sbb
lcall
shlb
aas
stos
add
lds
mov
daa
jno
cmpsl
fstpt
int3
fidivrs
jae
fwait
add
add
sbb
subb
jne
shrl
addl
roll
sbb
push
push
xchg
jo
lahf
popa
ficoms
push
lea
and
jl
mov
xchg
out
inc
fwait
jle
int
testb
push
call
push
add
rcrb
cmp
inc
add
jmp
std
add
repnz
jecxz
mov
xchg
and
inc
jns
sub
mov
jmp
shlb
xchg
add
mov
push
rcrb
icebp
jae
xor
or
aam
dec
mov
add
cltd
cmpsb
pop
leave
roll
push
xor
jge
push
add
mov
xchg
mov
adc
inc
pop
faddl
jo
pop
pop
nop
ds
jae
add
mov
sti
cmp
cmpsb
add
clc
pop
mov
icebp
sub
lea
fcmovnb
dec
movsl
push
add
popf
add
ret
add
bound
push
outsl
out
imul
jmp
adcl
in
inc
and
pop
push
lcall
popf
sub
mov
xor
mov
inc
mov
add
lret
pop
xchg
movl
mov
out
jg
mov
in
lock
inc
xchg
rclb
push
call
clc
roll
cmpsl
jnp,pt
out
xchg
lahf
add
jbe
dec
fidivrs
call
adc
mov
mov
jbe
push
pop
mov
jg
loope
xor
sbb
adc
or
test
cmp
mov
push
mov
cmp
xchg
ret
push
add
mov
in
rcrb
xchg
mov
dec
push
je
push
jbe
add
insb
in
jg
xchg
mov
daa
mov
jmp
js
sub
scas
add
dec
pusha
jmp
nop
add
xchg
xlat
imul
mov
add
popf
shlb
ja
pop
scas
loopne
mov
fs
scas
add
cmpb
mov
inc
mov
cmpsl
adc
sub
add
jp
fldcw
testl
arpl
popl
dec
loope
sbb
xchg
adc
mov
lock
mov
fdivr
cmp
mov
pop
mov
ds
add
add
test
sbb
and
dec
pop
pop
cmp
xor
insl
cs
cmp
add
out
test
outsl
stc
jmp
mov
add
out
mov
fwait
sbbl
leave
sbb
or
xchg
add
fdivrp
inc
mov
es
add
push
and
out
data16
xchg
add
adc
aam
stos
imul
pop
add
ss
add
inc
mov
dec
pop
ret
flds
fcmovbe
adc
dec
cwtl
fdivrl
add
cld
mov
add
dec
inc
lods
mov
add
stos
and
idivl
mov
sbb
xor
sbb
xlat
add
gs
fsubl
pop
ret
flds
insl
jo
pop
push
add
fcompl
in
fmuls
push
loope
mov
imul
dec
or
lods
or
inc
add
stos
mov
mov
add
jl
in
arpl
fwait
xchg
add
mov
add
push
mov
sbb
xor
inc
cmp
dec
push
and
pop
cli
lcall
shlb
fdivrs
sub
outsb
pop
inc
adc
push
out
in
pushf
filds
add
loop
std
add
bound
add
add
subb
pop
cmp
mov
mov
dec
pop
dec
or
mov
sub
cmpsl
sbb
sub
or
cwtl
add
jg
test
jnp
je
ffree
jge
or
dec
pop
pop
orl
add
call
dec
dec
lods
clc
add
fnstenv
inc
push
add
mov
sbb
jbe
sbb
cwtl
arpl
out
sub
fcmovu
jbe
add
xchg
xchg
jbe
out
mov
pop
insb
scas
cs
in
popa
add
inc
loop
or
and
cmp
add
fcompl
cmpsb
or
adc
in
cld
std
mov
xchg
fists
fstpl
jns
into
cwtl
out
add
mov
or
pop
and
jbe
jp
mov
pop
repnz
ffree
add
loope
cmp
daa
aaa
sbb
add
sbb
insb
xchg
js
in
je
cmc
nop
xchg
adc
ret
or
or
sarb
ds
fistps
fcoml
aad
inc
test
xchg
lods
jl
add
ficoms
ret
sbb
add
adc
and
outsb
sub
dec
aaa
cmp
notl
or
push
flds
mov
in
adc
imull
loope
and
rclb
movsl
ret
loopne
push
push
jmp
subl
daa
rolb
xorb
push
add
dec
dec
push
add
add
rcrl
icebp
fcomps
stos
cmp
cmc
adcl
mov
push
push
lret
pushf
fmul
jo
stos
add
mov
mov
bswap
pop
pop
fiadds
dec
jns
cmp
xorl
aas
cmpsl
test
sub
cli
add
jle
fdivrl
clc
add
jae
dec
mov
xor
xor
push
loop
add
cmp
adc
sbb
inc
in
inc
loope
stc
lea
jbe
out
mov
xchg
aam
lock
ja
cmpsb
orl
jno
jp
add
lcall
fisubs
push
enter
ffreep
in
fwait
ss
push
pushf
fxch
mov
outsl
jno
lea
insb
mov
outsb
rolb
scas
loope
mov
imul
mov
dec
data16
add
out
add
lret
jbe
add
jb
sti
clc
xchg
rcl
mov
and
add
or
enter
lea
call
push
loop
call
test
push
loopne
cs
stc
jno
adc
test
jmp
leave
es
dec
add
aad
mov
fimull
aas
or
js
jp
push
mov
or
in
or
add
inc
outsl
lret
add
xchg
sarl
jno
out
xchg
loop
movsl
mov
in
das
add
dec
sbb
mov
nop
ret
adc
jb
loopne
idivl
add
mov
cmpsb
lret
mov
outsl
rolb
sub
sub
xchg
fiadds
add
add
xor
orb
scas
fucomp
mov
in
outsb
cmp
call
sub
add
pop
cltd
faddl
lret
rol
xor
popf
pop
fmulp
jns
int
pop
mov
push
nop
lcall
inc
imul
in
dec
cmc
pop
fwait
adc
add
mov
sti
dec
shll
add
push
or
add
add
movsb
add
pop
stos
xor
aad
andb
stos
cmpsb
sub
jo
imul
mov
aas
fdivr
aaa
out
push
cmpsl
fidivs
mov
rcpps
imul
add
hlt
xchg
push
bound
pop
popa
outsb
sbb
jbe
icebp
in
fiaddl
add
or
mov
das
loopne
jo
pop
pop
loope
xchg
sbb
ds
scas
pop
test
adc
nop
xchg
stos
sub
xor
lret
ror
out
daa
add
jecxz
in
into
push
out
test
xchg
daa
lahf
outsl
mov
imul
xchg
mov
jmp
in
cs
add
sbb
mov
push
mov
pusha
and
push
push
add
scas
dec
mov
mov
out
sti
cmp
mov
les
inc
and
push
mov
sub
cwtl
jmp
and
ja
mov
dec
scas
xor
lock
mov
push
add
or
fsts
leave
test
push
and
pusha
outsb
fdivr
add
xchg
arpl
aaa
punpcklbw
mov
mov
jp
mov
mov
add
leave
sub
cwtl
loopne
mov
add
mov
xlat
xchg
add
and
pop
outsb
cmp
or
testl
push
lret
add
imul
xor
out
and
cmpl
jle
into
hlt
mull
pop
add
in
jbe
jmp
or
sub
xor
movsl
add
xor
inc
xlat
pop
xor
negl
insl
xchg
sti
cmp
sahf
pop
jno
add
lods
addr16
mov
out
mov
fistpll
hlt
add
or
mov
icebp
adc
scas
add
cmp
add
shr
icebp
push
cs
out
push
sbb
jmp
add
mov
sbb
ja
pop
outsb
add
mov
cmp
lods
les
jge
mov
in
leave
push
insl
add
insb
mov
xor
pop
jge
or
aam
pop
fs
call
or
fbstp
pop
mov
ds
and
fcmovnu
movsb
adc
inc
jne
hlt
dec
adc
rcrb
test
nop
xchg
jnp
mov
test
loope
inc
or
inc
sbb
dec
inc
jb
movsl
add
mov
pop
adc
test
mov
mov
cmp
inc
and
call
mov
add
fucomip
sub
sti
add
in
add
xor
pop
or
out
test
lret
mov
scas
ja
fldenv
js
mov
push
dec
lret
or
cwtl
outsb
xor
aas
add
imul
mov
fcmovnbe
cmp
test
mov
arpl
dec
xchg
fcmove
iret
fdivrs
add
jnp
movsb
lret
mov
jne
imul
loopne
jg
xchg
xor
cmp
push
add
mov
stc
dec
push
pop
fnstsw
emms
adc
andb
jp
out
adc
mov
loop
add
jge
popa
cmp
jne
jb
add
loopne
divl
sub
rcr
daa
mov
add
cld
cmp
repnz
incb
mov
jge
std
add
xchg
addb
fldcw
fucomi
div
push
aaa
mov
dec
loopne
cmp
mov
xchg
mov
inc
push
test
and
scas
pop
or
fcomp
sub
adc
pop
mov
mov
jmp
stc
imul
inc
pop
cmpsb
mov
inc
mov
cmpsl
add
xchg
adcl
add
daa
jb
sahf
loop
dec
add
mov
leave
add
aam
divl
xchg
xlat
jo
inc
pop
push
jmp
andb
into
rclb
add
les
aaa
add
das
outsl
testl
dec
aad
in
andb
pop
mov
jl
fnstsw
push
icebp
rep
cli
ljmp
xlat
in
mov
jbe
jle
pusha
ljmp
cli
mov
xchg
andb
add
push
push
and
push
cmp
push
add
dec
roll
test
mov
dec
mov
pop
sub
iret
mov
jae
add
pop
out
lock
sub
pop
xchg
cmp
add
mov
add
mov
scas
mov
in
cmp
pop
std
iret
out
jb
mov
imul
popl
inc
jmp
jo
cmp
jne
dec
push
add
mov
add
gs
mov
mov
out
cmp
jo
cltd
ljmp
mov
adc
out
dec
add
test
cmpsl
cmpb
lods
jmp
xchg
dec
stos
jp
xchg
jo
xchg
lods
jne
push
mov
repz
fbld
add
cmp
aaa
jmp
add
fnstcw
xor
mov
mov
and
adc
xchg
add
stc
inc
lahf
imull
pop
js
imul
movsb
test
pusha
movb
je
rol
stos
cltd
mov
push
mov
lret
in
rcl
add
xchg
jbe
int3
add
jge
push
dec
std
icebp
ror
repnz
xchg
andb
sub
xchg
dec
les
aaa
negl
add
jns
cwtl
shll
out
insb
daa
sbbb
inc
xor
outsl
pop
inc
fstpt
dec
int3
dec
nop
cmpsl
add
push
mov
mov
loope
shll
xchg
jge
add
jae
jno
pop
push
out
mov
in
cmp
stc
aam
lock
pop
popa
xor
es
in
pushf
rorb
push
enter
repz
jbe
neg
cmc
push
leave
cmp
add
and
push
sbb
loopne
add
add
inc
mov
jnp
lahf
lret
jb
in
add
mov
push
add
outsl
push
in
in
jno
pusha
cwtl
mov
roll
pop
fmull
xor
ret
stos
or
lods
fwait
test
jae
outsl
mov
insl
fdivs
add
mov
or
xor
pop
sub
or
and
ljmp
mov
sub
std
sarl
movsb
into
out
jae
mov
addr16
fldl2t
ljmp
pop
pop
pop
xchg
mov
jecxz
add
mov
xor
sbb
insl
leave
adc
cpuid
mov
sbb
push
pextrw
sub
mov
add
sbb
xor
xor
xor
loopne
mov
stc
aas
add
jae
aam
jmp
loope
sub
and
sub
test
inc
dec
pusha
addr16
sbb
push
pop
jmp
sti
add
jecxz
pop
add
js
mov
aam
jnp
adc
subb
add
lret
inc
rcrb
pop
cmp
push
lock
add
jne
cmp
push
sbb
and
mov
add
push
insl
or
add
push
adc
cmpsl
loope
adc
pusha
sub
lret
xchg
sbb
jecxz
repnz
shr
sub
mov
jb
add
add
pop
add
dec
sub
push
cli
lock
jno
push
mov
xor
loopne
shrl
add
stos
clc
cmc
std
add
mov
jne
cmpsb
dec
mov
outsl
push
arpl
add
test
sbb
mov
adc
push
add
xchg
cmc
pop
jb
sbb
out
fwait
add
mov
repz
push
outsb
rcr
outsl
push
add
out
pop
insl
ret
adc
xor
jo
push
shl
outsb
and
cwtl
cmp
scas
push
xchg
mov
cmp
add
je
jl
mov
and
pop
arpl
jne
add
daa
popa
loop
cmp
fs
add
cli
pop
insb
lret
push
xor
mov
sub
adc
pop
xchg
xchg
push
inc
mov
xchg
xchg
mov
cmp
add
repz
int
bswap
cmp
enter
les
leave
lods
mov
imul
add
jle
rolb
add
add
sbb
pusha
add
cwtl
outsb
stc
jle
lds
ja
dec
in
enter
inc
aam
insb
adc
pop
push
push
dec
cmp
sub
cmp
lods
rorl
ds
inc
mov
mov
dec
add
jo
stos
or
rsqrtps
mov
pop
cmpsl
sbb
mov
add
dec
stos
lods
imul
and
int3
sti
test
lret
testl
insl
into
pop
mov
inc
insb
rcrl
mov
and
nop
add
cmp
sti
xchg
and
add
fcompl
cwtl
xchg
add
test
mov
push
dec
fidivl
dec
movsb
scas
cmpsl
pop
clc
add
ljmp
mov
add
insl
fucomp
int3
mov
pmulhuw
dec
inc
or
rcrb
ljmp
mov
repnz
mov
mov
jl
into
rclb
add
mov
jno
outsb
push
cmc
stos
and
inc
mov
push
xor
dec
sbb
or
jmp
xchg
xor
cli
fwait
add
test
add
dec
in
out
mov
adc
scas
inc
sahf
inc
add
add
add
and
lock
aad
dec
test
dec
out
pop
cmp
stc
add
imul
mov
add
add
mov
dec
dec
sub
in
xchg
pop
out
push
loopne
fcomps
movsb
jl
xchg
test
bound
lret
sar
mov
xor
jmp
mov
or
pop
add
inc
in
clc
icebp
push
pandn
cmp
add
add
loop
xchg
dec
mov
mov
sub
mov
movsb
push
push
les
mov
outsb
push
mov
in
sti
cwtl
ljmp
sbb
jns
pop
movsb
adc
mov
or
sub
es
jmp
out
loopne
mov
leave
inc
iret
add
jo
jbe
sahf
xchg
xor
add
xor
pop
aas
push
mov
pop
icebp
cltd
cmp
jp
mov
add
mov
repz
adc
pusha
aaa
cmp
fsubp
movsb
add
mov
dec
insl
sub
dec
outsl
add
mov
test
sub
or
leave
sbb
adc
push
push
xlat
stos
lods
and
repnz
xchg
xor
jae
cmpsb
xchg
in
mov
add
stos
addl
mov
sbb
jecxz
bound
adc
add
testl
push
push
push
dec
add
into
add
jnp
mov
andl
push
push
inc
sub
mov
pop
add
sbb
mov
out
out
aaa
xor
add
lods
mov
dec
loope
stos
mov
sub
jne
inc
cld
jb
aas
mov
test
cmp
fisttpll
jge
int3
dec
add
cld
push
add
pop
push
xor
or
or
xchg
mov
pop
adc
xor
nopl
ss
mov
xchg
mov
clc
mov
jge
add
adc
mov
enter
and
pop
mov
scas
xchg
mov
xchg
ja
sbb
lods
and
test
pop
lcall
and
jmp
shlb
das
sub
fadds
jae
cli
pop
repz
int3
pop
or
and
movsb
gs
lds
ljmp
stos
xchg
and
adc
add
sub
dec
mov
push
ljmp
dec
xchg
jo
mov
fsubr
ret
out
mov
push
add
mov
adc
push
inc
pop
sub
les
xchg
and
mov
scas
sbb
int
test
xlat
les
pop
add
sub
mov
out
cwtl
xor
add
jb
in
outsb
out
sub
sbb
mov
pop
push
push
aad
lods
leave
andb
cmc
movsl
push
push
mov
cs
add
ret
lods
data16
orb
sub
add
cmpsl
mov
sbb
add
test
xchg
sub
in
add
aad
xchg
mov
fldenv
pusha
gs
pop
cmp
daa
subl
pop
stc
lret
sub
add
les
add
gs
mov
pop
jp
mov
sahf
and
mov
call
imul
cmpsl
shl
push
push
mov
adc
ret
add
hlt
je
jbe
jge
imul
dec
stos
xchg
andl
add
js
in
test
or
jb
xor
inc
loopne
mov
add
stc
or
int
add
jbe
out
aad
je
add
imul
add
pop
mov
mov
out
fwait
pop
add
xchg
dec
xchg
nop
add
rcr
inc
mov
movsl
fs
inc
mov
jae
inc
fucomi
hlt
out
add
into
push
push
dec
rcrl
sti
push
scas
sub
mov
cmpsb
add
int
inc
loopne,pn
fstpt
add
ja
cmpsb
movsb
pop
cmp
push
rcll
ret
add
xchg
mov
idivl
jnp
jns
add
sbb
xchg
sbb
push
fiaddl
and
mov
sub
movb
pop
shll
stos
loopne
les
jno
ds
fisubrs
daa
add
sets
pop
mov
dec
rorb
xor
jno
cmp
lea
push
jg
xorb
push
lods
ja
scas
jecxz
push
xor
leave
add
fcom
loop
add
cmpsl
add
sub
mov
jnp
ds
jns
mov
cli
and
mov
out
gs
cmp
sub
ja
test
cmpsl
lea
push
mulb
xor
mov
inc
or
add
xor
fsubrs
dec
sbb
jo
mov
icebp
int
push
add
mov
pusha
scas
and
add
jecxz
negl
in
add
fsubp
fstps
mov
movsb
ljmp
in
dec
movsl
rclb
sbb
loop
cs
ficompl
dec
mov
movsl
call
push
gs
add
mov
mov
fbstp
add
mov
arpl
cltd
fsubl
pop
pop
aaa
aas
pop
lea
movsl
pusha
test
push
punpckldq
xchg
sti
add
mull
jmp
dec
in
add
or
dec
incb
sub
mov
push
pop
test
mov
jne
pop
daa
xchg
movsb
iret
adc
fimull
sbb
fsubr
sti
lds
push
imul
scas
sbb
mov
push
push
pop
add
jecxz
shlb
loop
bound
mov
cwtl
cwtl
push
add
fucomip
std
nop
lods
add
xchg
cmpsl
push
cmp
jg
fdivs
xchg
out
add
jge
repnz
lret
arpl
scas
cli
fadd
or
notl
add
jmp
add
mov
add
jge
or
sbb
or
js
add
and
add
iret
xchg
lret
sub
in
push
add
std
and
jo
xor
xor
out
hlt
repz
mov
mov
ffreep
sub
add
inc
and
lahf
mov
cltd
jge
in
pop
mov
fadd
push
shrb
loopne
xchg
inc
add
mov
xor
lods
push
jle
jge
mov
ret
in
sahf
add
adc
outsl
pusha
aam
in
push
dec
jno
clc
sahf
add
ss
imul
and
inc
pop
xor
bound
add
leave
and
fistl
xchg
sarl
js
add
push
daa
mov
ret
add
add
cmp
inc
inc
xchg
or
test
stc
sarb
sti
jb
jmp
fldl
daa
cwtl
js
jno
movups
pop
pusha
cmp
lods
xor
or
je
sub
out
repnz
mov
aas
and
ds
fs
cmc
mov
sahf
sbb
mov
fistpl
or
jnp
stos
aaa
adc
ss
pop
ret
inc
imul
push
and
adc
cmpsl
push
add
jge
not
pop
ja
sbb
jnp
out
mov
xlat
mov
iret
xchg
xchg
les
cwtl
imulb
aaa
add
insl
shr
push
in
add
sub
pop
int
add
nop
xor
mov
fistps
out
fildl
fstl
hlt
fmul
pop
inc
add
mov
filds
fs
add
or
je
inc
in
dec
lods
push
adc
sbb
outsl
mov
mul
jmp
sub
data16
cmpb
test
shlb
jno
adc
imul
icebp
push
and
in
and
and
lods
rcrb
sub
mov
mov
packsswb
fcompl
mov
fdivr
divl
aad
hlt
dec
sbb
sub
pop
push
mov
fcmovnbe
sub
sbbb
ret
push
add
mov
pop
lcall
in
test
cmp
sahf
mov
aad
cmpsl
mov
pusha
ja
push
loop
js
add
int3
sbb
lret
dec
and
cmpsl
xchg
leave
clc
push
sbb
or
add
fdivr
cmp
xchg
mov
imul
fdivs
adc
fdivrl
test
int3
mov
push
sarb
jg
fndisi(8087
aaa
jnp
fisttpll
call
xor
mov
jmp
add
mov
mov
add
jns
xchg
imul
fiaddl
outsl
push
mov
das
jecxz
packsswb
pusha
sub
sub
or
popf
pop
mov
pop
push
cld
xor
in
ljmp
roll
addr16
ret
adc
iret
or
jo
aaa
add
loope
mov
popf
add
in
pop
xchg
xchg
addl
xchg
insl
std
jo
fadds
ds
fnstsw
imul
mov
add
lret
xchg
imul
or
xchg
push
mov
xchg
mov
cwtl
inc
xor
jbe
lods
jns
mov
pushf
movsb
sub
cltd
add
insl
inc
sbb
dec
repnz
xor
and
pop
push
loope
jae
jle
roll
loop
in
jb
imul
in
stos
mov
cmp
je
add
hlt
mov
int3
loop
pop
add
push
push
enter
cmpsb
test
lcall
popa
fimull
jns
ficoms
out
add
mov
mov
or
add
mov
or
cmp
in
jno
xchg
add
cmp
sti
popl
sub
psrlq
xchg
push
icebp
adc
mov
add
cli
push
je
add
outsb
ffree
add
mov
icebp
push
pop
push
mov
cmp
ljmp
mov
lock
dec
stos
dec
add
push
xor
sbb
or
lcall
lea
mov
mov
inc
mov
dec
push
add
addr16
sub
dec
addb
adc
push
add
test
mov
jae
push
cmp
adc
repz
pop
inc
mov
inc
int
adc
xchg
inc
add
and
xor
cwtl
aam
sbb
out
pop
loope
push
pop
pop
insb
push
stc
adcb
ljmp
adcb
pop
push
std
clc
sbb
sarl
js
enter
adcl
pop
add
inc
push
faddp
pushf
cltd
add
out
mov
enter
lock
pop
sbb
cmpsb
insl
ret
and
xchg
imul
push
arpl
inc
sarl
add
add
pusha
loopne
add
das
cwtl
sbb
xlat
add
cmpsb
dec
loop
fmull
pop
movsl
or
pop
cmpsb
xor
lcall
lahf
and
add
xchg
icebp
add
mov
dec
fadds
test
inc
lock
stos
add
push
shr
mov
or
add
pop
mov
cmpsb
ret
xchg
fsubrl
and
pop
dec
fbstp
add
fwait
push
fucom
pop
dec
pop
pop
push
mov
cmp
mov
popa
inc
mov
add
pop
test
xor
add
cwtl
sub
add
cmp
xlat
or
fs
xor
jae
add
loopne
push
stc
add
or
add
lods
push
fwait
insl
and
add
mov
aas
ds
push
das
mov
in
sub
inc
adc
jae
add
sub
imul
add
add
iret
pop
mov
call
push
cmp
es
pop
shrb
push
add
sbb
push
add
aad
jnp
mov
subl
pop
lcall
adc
rorb
or
and
movsb
aaa
clc
pop
mov
pop
int
sub
dec
xlat
add
pop
and
fistps
jmp
add
push
in
jge
inc
mov
dec
rolb
add
inc
popf
ss
pop
arpl
mov
xchg
mov
and
movsb
mov
pop
flds
iret
sbb
jbe
or
fdivrl
insb
add
jle
add
inc
outsl
insl
and
mov
rclb
clc
setle
xor
arpl
add
push
mov
icebp
ds
fiadds
push
mov
jmp
dec
or
pushf
loopne
cmc
jb
pop
or
xchg
sbb
loop
mov
sub
ja
pop
add
fnsave
mov
cmp
popf
add
jne
dec
add
lcall
or
mov
addr16
cs
sub
push
xchg
add
pop
mov
add
jg
in
gs
cmp
add
popf
push
mov
push
cmpsl
dec
pop
jl
gs
mov
shrb
add
pop
jo
pop
add
add
negb
ja
add
jmp
leave
into
jecxz
or
xchg
sub
mov
cld
sbb
test
mov
inc
mov
push
xor
or
out
test
inc
push
jo
add
fcmovu
leave
imul
scas
add
inc
add
adcl
aam
pop
imul
vandps
leave
mov
iret
xor
out
or
lds
sarb
cmp
in
cmp
subb
mov
leave
and
xchg
es
cwtl
fadds
imul
cld
cld
add
outsl
pop
mov
mov
stos
mov
jno
add
clc
enter
mov
pcmpeqw
cmp
mov
stc
jo
scas
add
pop
fsub
cmpsl
adc
jne
mov
test
lods
or
pop
fiadds
in
push
ret
lock
ja
nop
loopne
pop
jmp
scas
dec
pop
dec
movsl
aaa
je
addr16
xor
inc
sbb
sti
outsb
sbb
enter
xchg
lea
cmp
xor
add
es
push
imul
std
add
ja
movb
pop
push
or
movsl
mov
add
mov
into
out
das
nop
outsl
in
popa
scas
add
mov
cmp
daa
fisttpl
xor
jb
dec
sbb
mov
adc
loopne
insl
mov
jge
mov
fnstenv
add
adc
std
add
jle
inc
dec
cmp
test
xchg
jmp
and
sti
in
lock
sub
ljmp
xchg
add
sahf
mov
jbe
push
pop
xor
add
add
clc
sub
add
jne
dec
and
xchg
xchg
add
add
xchg
pop
push
add
jns
sahf
testl
mov
xchg
pmaxsw
push
fwait
add
outsb
xchg
loopne
movl
add
lods
lcall
or
xchg
sbb
or
cmp
jge
xchg
call
out
lock
in
pop
add
mov
jge
pop
enter
sbb
xchg
mov
add
pavgb
outsl
add
dec
add
popa
xor
sub
inc
js
call
pop
adc
lods
and
add
mov
cmpsl
inc
lret
jg
mov
data16
bound
and
test
jno
mov
add
repnz
inc
inc
push
fs
lcall
xchg
fisttpll
test
jae
add
pusha
or
xchg
mov
cmpsl
les
xchg
hlt
movb
lock
jno
dec
mov
add
adc
loope
mov
jge
adc
std
add
mov
add
or
cmp
mov
add
push
shlb
mov
movl
stos
dec
pop
test
push
mov
cmp
mov
mov
add
jl
sub
testb
add
lret
dec
mov
inc
xchg
add
mov
sbb
push
test
cwtl
jns
push
popa
add
lods
mov
sub
push
mov
pop
add
pop
add
mov
shr
dec
lahf
addr16
pop
cltd
test
push
xor
lods
cld
add
and
jnp
add
dec
inc
pop
orb
daa
fsubl
jle
fstpl
mov
add
pop
es
or
dec
cmpsb
test
sbb
cmp
dec
adc
add
xlat
sub
outsb
adc
dec
mov
mov
js
add
cld
sub
imul
iret
inc
pop
aaa
fcomps
xchg
add
mov
daa
cmp
insb
push
movsl
pop
add
cltd
add
or
int3
lods
xchg
leave
dec
add
sbb
jge
inc
pop
fdivrl
ljmp
push
xchg
jg
les
pop
fisubl
or
add
sub
test
bound
orb
data16
add
ss
sbb
call
push
push
and
xor
add
lcall
ja
int3
in
lds
and
xchg
adc
add
outsb
aaa
xlat
pop
mov
js
das
daa
add
jae
test
and
leave
cmpsl
pop
inc
bound
pop
push
filds
test
xchg
mov
adc
shlb
dec
jmp
jle
cld
sti
adc
xor
lret
mov
inc
bound
and
xor
aas
sahf
jp
inc
pop
and
cmpsb
mov
inc
aaa
enter
add
xor
sarb
rorb
jno
in
cs
roll
cmc
testb
cmp
xor
stos
sub
cmpsb
mov
add
inc
and
and
and
mov
pop
push
pop
add
cmc
add
jg
adc
push
xlat
fdivr
iret
test
and
inc
xchg
mov
les
rolb
xlat
test
divb
out
pop
cwtl
fwait
xchg
dec
leave
pop
daa
sahf
jns
div
add
leave
rclb
and
xchg
leave
mov
daa
mov
jmp
adc
mov
fidivs
testl
cmpsb
jo
cmp
aaa
add
std
je
add
divl
out
jl
jp
cmp
mov
cmpsl
mov
push
mov
add
idiv
imul
cmp
mov
adc
flds
add
jno
loope
push
pextrw
inc
pop
or
sub
std
aas
xlat
mov
jb
adc
jle
pop
push
fisubrs
add
xor
xchg
xchg
cmp
test
cmp
imul
jge
in
in
icebp
mov
xchg
ror
lret
dec
ret
sbb
add
cmc
pusha
mov
in
cmp
xor
mov
ret
push
loopne
roll
pop
add
dec
sti
stos
jmp
fisubrl
mov
in
sbb
dec
sub
mov
int3
sbb
add
push
mov
add
adcb
add
mov
mov
add
adc
js
fmuls
mov
xor
mov
pusha
cmp
bound
or
sbbb
add
inc
testb
dec
and
jne
inc
add
lock
inc
mov
push
jg
jmp
loop
lds
cmp
xchg
scas
dec
add
fiaddl
add
mov
sbb
push
bound
lret
aad
add
mov
lcall
insb
out
add
movsb
mov
xlat
aas
pop
xor
icebp
shll
add
or
fcomp
pop
mull
jmp
icebp
add
cmp
jge
scas
add
imul
pop
or
push
stc
pop
jne
aad
sub
xchg
push
out
popa
mov
push
sub
push
xor
inc
into
test
ja
inc
add
mov
pop
xchg
push
jno
cmpsl
add
jb
testl
sti
mov
jne
push
push
roll
ficoml
scas
jp
add
jbe
jb
gs
ficomps
loopne
jmp
and
push
jns
outsb
popa
mov
pushf
cmp
sbb
enter
add
cmpsb
psubb
ja
add
stos
mov
dec
sub
jne
add
and
push
push
push
pop
es
add
cmp
lahf
addb
jbe
fs
inc
or
iret
jns
or
mov
aaa
sbb
dec
add
loopne
add
mov
div
test
add
xchg
stos
add
insl
sub
sbb
lea
push
push
mov
sahf
loopne
push
mov
add
and
out
add
jne
mov
fistl
add
jp
shl
jb
push
pushf
lcall
sbb
add
fldenv
cmp
cmp
add
pop
clc
adc
xor
xor
xchg
cmpsl
xor
inc
jbe
insl
add
add
xchg
in
shlb
add
push
mov
xor
pop
jge
mov
jbe
dec
mov
insl
lods
adcb
sub
lcall
adc
sub
adc
add
add
ljmp
cmp
mov
jbe
pop
data16
fcomps
push
sar
xchg
rcr
xchg
adc
add
lcall
imul
mov
push
int
pop
xchg
add
mov
mov
out
lods
out
test
dec
scas
and
imul
mov
lea
inc
cmp
arpl
push
testb
mov
iret
loop
arpl
cmpb
cmc
rolb
add
setno
in
add
add
out
cs
inc
neg
adc
push
fisttpl
xchg
scas
mov
jl
hlt
repnz
xor
lods
sbb
loopne
sti
jnp
or
fdivrl
test
or
or
add
test
pushf
arpl
aam
and
lret
add
out
fwait
sub
lods
sbbb
outsb
ljmp
stos
je
xchg
or
lds
repz
cmp
mov
sub
fadds
adc
call
mov
mov
jge
add
or
clc
add
fsubr
adc
xchg
add
jmp
lods
add
in
mov
ljmp
shll
add
adc
cmpsb
pushf
cmp
push
loopne
sbb
jb
pop
add
and
adc
inc
daa
pusha
aas
fdivrs
fidivrl
fnsave
add
xor
and
push
add
je
imul
sbb
xchg
push
push
xor
xchg
jl
add
fcompl
inc
mov
out
sti
out
fldl
mov
das
cmp
mov
es
jne
push
outsb
dec
mov
inc
adc
xchg
mov
mov
stc
add
jmp
add
xor
add
mov
addb
add
lret
xchg
dec
add
scas
dec
jg
add
mov
adc
or
sbb
sub
mov
push
mov
jns
mov
js
add
les
push
cwtl
inc
xor
add
sub
xor
and
jns
xorb
mov
mov
cmp
loopne
in
xor
js
inc
or
inc
mov
add
das
xchg
push
mov
lods
sub
push
arpl
addl
push
and
sbb
push
out
roll
out
sub
adc
sbb
les
push
pop
pop
pop
add
insl
push
mov
push
call
daa
loope
filds
push
lahf
adc
ss
in
fdivr
add
mov
mov
jbe
into
int3
enter
out
and
xchg
loopne
arpl
aaa
pop
hlt
jp
fdivrp
imul
aaa
or
mov
xlat
dec
aad
loopne
aas
movsl
cmp
jg
pop
leave
popa
imul
adc
data16
jg
subl
sbb
enter
mov
fdiv
out
add
mov
pop
mov
cmp
jb
push
add
call
imul
stc
cmc
or
iret
rolb
repz
cld
pop
fs
ds
cld
rorl
movl
lea
ja
push
xor
adc
cltd
pop
xor
ret
dec
push
and
jae
mov
pop
mov
jmp
testb
mov
fstl
aad
jmp
or
add
dec
or
test
das
pop
pop
outsb
fwait
cmpsb
add
pop
div
dec
or
sub
dec
push
cmc
fcomps
cli
jecxz
mov
mov
inc
je
mov
add
xchg
repnz
sbb
sti
or
sub
push
iret
rcrb
jle
sbb
cmpsl
cvtps2pd
enter
pop
and
sbb
jnp
stmxcsr
cmp
cmp
ljmp
scas
rcrb
jne
inc
in
jmp
lahf
pop
outsl
pop
mull
pop
and
or
icebp
aas
pusha
xor
xor
cmpsl
dec
iret
clc
jp
idivl
mov
decb
lods
jmp
jecxz
ds
sti
or
pop
lret
mov
clc
aaa
cld
dec
mov
ret
sub
test
int
mov
cmpsl
pusha
in
adc
pop
iret
out
incb
jp
enter
add
dec
clc
jle
pop
in
ja
xchg
hlt
pop
mov
xchg
aas
stos
sub
mov
loope
and
loopne
adc
cmp
or
fistps
mov
rolb
cs
mov
cmpb
repnz
cli
mov
js
add
cmc
out
jp
sahf
jmp
xor
jnp
lea
add
shll
aas
flds
popa
push
add
sti
pop
push
add
jmp
cli
scas
cld
sbb
push
sub
int
xchg
in
cmc
add
aas
icebp
dec
ja
bound
jmp
jge
sar
or
push
mov
pop
shrl
add
ficomps
testl
in
andl
mov
pop
jnp
cmp
pop
push
mov
pop
imul
mov
push
fcompl
std
out
push
pop
iret
sti
out
leave
testb
aas
pmulhw
mov
add
and
pop
or
jp
andb
push
cli
mov
outsl
scas
cs
add
and
mull
pop
mov
aas
mov
fnstsw
jno
cltd
cld
xchg
push
mov
dec
jmp
addr16
sub
insl
ljmp
das
rcll
cli
bts
jp
lret
add
test
jle
jne
jge
jp
call
lret
add
cmpsl
sub
aam
add
mov
push
pushf
adcb
sti
add
sbb
ds
pop
cmp
and
sbb
scas
inc
add
dec
aas
sarb
loopne
push
popa
lcall
jo
loopne
xchg
jne
mov
gs
outsl
out
jb
insb
adc
cmpsb
test
inc
mov
pop
xchg
jmp
mov
xor
mov
push
out
out
push
push
pop
in
aam
or
cli
push
jmp
add
insb
stos
lods
loope
fsubr
jb
mov
shr
scas
movsl
out
lods
or
pop
jae
outsb
inc
aaa
int
or
sbb
addl
ja
xchg
je
jo
or
mov
xlat
inc
addr16
sbb
dec
or
mov
ss
and
pushf
sbb
adc
dec
inc
fidivl
push
call
or
mov
adc
dec
lds
adc
scas
mov
mov
or
adc
scas
dec
push
xchg
in
movsb
xor
push
mov
addr16
stc
sbb
ds
mov
inc
call
xchg
jb
add
push
inc
jbe
add
push
cmp
mov
and
push
mov
cmpsb
or
mov
bound
xchg
cmc
and
xchg
push
xchg
or
shr
rol
sub
mov
or
push
cli
cmc
test
bnd
xor
icebp
dec
outsl
and
cmp
cmp
or
cwtl
scas
adc
outsb
adc
sub
lcall
clc
arpl
and
or
or
std
imul
or
dec
jne
mov
and
jae
leave
push
push
fscale
out
and
dec
or
and
aaa
ljmp
es
mov
dec
jne
inc
sti
jns
push
pop
push
xlat
arpl
jnp
pop
arpl
inc
mov
jl
dec
inc
shlb
or
inc
push
les
adc
and
stc
sbb
dec
orl
jnp
cmc
sbb
or
lcall
fwait
cld
hlt
iret
xor
cmc
test
push
fildl
out
pop
test
dec
fs
std
pop
or
cmp
cmp
or
inc
ds
outsb
stos
xchg
cmp
aas
mulb
push
sbb
inc
push
movsb
mov
push
or
push
cmp
and
sbb
inc
sbb
sti
jno
std
cmpsb
or
jno
or
mov
stc
loope
mov
dec
inc
mov
inc
or
inc
inc
stos
test
mov
sti
pop
jmp
imul
mov
or
into
or
sub
push
xchg
xchg
xchg
mov
adc
dec
adc
test
adc
cmpb
adc
inc
cmp
adc
and
or
sahf
stos
and
ss
ljmp
mov
push
dec
popa
or
icebp
cmp
adc
xchg
pop
test
adc
addr16
and
arpl
sti
mov
cmp
inc
insb
push
mov
push
dec
jns
sub
repz
outsb
jmp
xor
sbb
insb
inc
or
movsl
dec
movsl
sbb
jo
or
lret
das
arpl
lods
les
mov
icebp
jmp
dec
movsl
adc
pop
or
and
push
pop
xchg
es
imul
mov
jb
xor
insl
js
sbb
adc
into
xor
dec
inc
or
pop
add
push
repz
sbb
or
pusha
sbb
add
jne
jmp
mov
push
sar
inc
xor
inc
push
ja
dec
xchg
adc
and
loope
push
insl
sub
and
xchg
pop
mov
jbe
dec
push
inc
adc
and
das
cmp
push
hlt
and
dec
sbb
lcall
fsts
or
xchg
pop
in
sub
dec
jb
adc
and
dec
fidivs
jcxz
insb
in
jg
adc
sbb
and
sub
push
and
cs
pop
jl
icebp
lahf
inc
cli
xlat
into
sbb
test
negl
or
sbb
in
push
mov
inc
adc
aam
jp
adc
into
xor
push
scas
xchg
cmp
sbb
sub
pop
pop
js
xchg
xor
js
push
xchg
xor
add
cli
mov
mulb
jae
cmpb
addb
jno
pushf
leave
les
sbb
outsb
xchg
jb
in
popf
sar
inc
insb
ja
jns
jae
dec
rclb
cld
jb
fs
xor
mov
jo
jge
cs
push
or
mov
lahf
add
or
jo
in
add
dec
ds
mulb
mov
xor
cmc
xor
ror
clc
and
div
pop
std
and
icebp
adc
sbb
bound
or
out
and
movsl
ljmp
cli
movsl
cmpsl
sbb
push
add
je
and
icebp
jnp
dec
sub
rorb
arpl
mov
dec
push
cmp
arpl
pusha
mov
dec
sub
and
loope
inc
cli
inc
decl
lret
mov
xchg
aam
incb
aam
inc
or
aas
jge
xor
add
ror
mov
mov
push
out
sub
and
and
jae
jb
dec
dec
mov
adc
lret
or
notl
and
stos
pop
cli
mov
lock
flds
es
ds
adc
sti
lods
add
xchg
fimull
mov
fsubr
or
mov
xchg
pusha
or
inc
xchg
mov
jae
jmp
sub
pop
call
pop
xor
mov
sub
and
and
lret
sbb
lret
sti
mul
repnz
add
loope
out
mov
add
adc
inc
test
nop
mov
dec
jno
das
pop
dec
jb
push
jnp
push
fmuls
push
leave
fs
mov
dec
stc
xor
in
aas
ja
or
jne
stos
mov
and
adc
jns
and
cld
jne
cmp
push
cmp
test
rcrb
test
jnp
and
push
inc
ss
push
mov
outsb
adc
lods
or
les
ss
dec
in
icebp
pop
test
xchg
mov
adc
dec
mov
test
or
dec
arpl
dec
mov
sub
enter
seta
inc
and
xchg
inc
mov
mov
inc
into
cmp
sub
xor
xor
fisttpll
mov
jl
pop
imul
stos
xchg
mov
push
and
xor
jmp
add
movsl
jnp
outsl
aam
in
pop
test
add
adc
mov
fbld
mov
xor
xchg
fsubrl
adc
je
pcmpgtb
xor
lret
or
dec
jne
xchg
adc
dec
xor
xor
cmp
addr16
mov
jno
in
flds
pop
mov
cwtl
adc
mov
mov
add
pop
into
stos
dec
jns
mov
lret
inc
mov
mov
leave
inc
sub
aam
hlt
dec
or
leave
push
lea
pop
aas
and
xchg
sbb
mov
sbb
mov
popf
fnstsw
adc
or
es
dec
dec
cld
mov
jo
ss
aas
push
lock
add
cmp
adc
ja
push
loopne
xchg
imull
inc
and
jne
mov
xchg
cmp
add
push
dec
and
xlat
cmp
or
cltd
lcall
inc
aas
jb
test
jbe
pop
stc
mov
jp
leave
xor
je
cmp
std
subb
stos
cmp
aaa
add
fdiv
xchg
jmp
add
out
iret
cld
adc
inc
cmp
std
add
add
popa
adc
mov
rcll
sbb
fists
add
push
mov
pop
jl
pop
add
stos
movsl
hlt
ficoms
jge
ss
jnp
out
inc
pop
aas
cltd
add
in
outsl
cli
inc
enter
pop
or
leave
dec
push
pushf
inc
les
in
and
clc
xchg
sub
cmp
xchg
scas
decl
inc
shl
push
mov
cmp
dec
add
scas
inc
add
xchg
lock
mov
mulb
idivl
repz
cs
dec
loope
cwtl
js
mov
inc
or
ds
fwait
jg
add
jge
cmp
outsl
incb
jno
cmpsb
pop
push
int3
jmp
les
mov
xor
ljmp
inc
lret
into
call
xchg
in
xor
lahf
add
aaa
negl
int3
push
push
jle
fadds
sbb
out
sub
cmp
hlt
add
ja
xchg
out
jg
fnstenv
jae
add
pushf
in
mov
jb
sub
out
loopne
mov
sbb
cld
jp
add
psrad
push
jmp
cmovg
pop
ljmp
add
mov
test
in
clc
mov
mov
lret
adc
xor
imul
daa
pop
das
add
mov
aas
add
mov
jmp
pop
and
push
pop
xchg
call
nop
scas
in
ret
inc
scas
dec
cmpsb
push
add
fisubl
sbb
hlt
jmp
nop
push
xchg
xchg
sbb
jecxz
or
mov
test
sbb
sbb
jne
mov
call
das
rcrl
mov
lds
xor
jo
and
jmp
sbb
rclb
mov
or
xor
add
icebp
mov
pop
jne
jae
adc
cmc
and
fldenv
rclb
dec
mov
cmp
cmp
ljmp
jge
mov
mov
sbb
push
scas
call
jbe
std
inc
int3
ds
push
cmp
aaa
decl
scas
lahf
lods
sahf
adc
dec
fnstenv
nop
sub
lods
add
ss
xor
inc
roll
cmp
lret
scas
cmp
mov
movsb
imul
inc
mov
bound
mov
addr16
inc
cmpl
xchg
ljmp
inc
nop
inc
fs
sbb
mov
imull
insl
or
dec
fsubp
jo
ljmp
lods
int
cmp
inc
inc
fs
and
iret
cmp
aas
jl
pusha
jb
popa
imul
adc
mov
es
pop
popf
stos
jmp
inc
test
stos
mov
cmp
into
stos
jmp
into
or
stc
or
jmp
xlat
push
fsub
mov
test
aam
sbb
in
movsl
add
aas
sbb
nop
scas
pop
lods
lcall
stos
les
mov
sub
loopne
add
stos
stc
and
sarb
xchg
inc
or
sub
add
js
jle
dec
jnp
sbb
sub
mov
mov
mov
imul
push
adc
mov
dec
inc
data16
mov
hlt
cmp
sarl
jp
outsl
icebp
add
lds
ss
sub
jb
dec
pop
push
dec
xchg
or
aad
mov
or
sbb
mov
jecxz
sahf
dec
mov
cli
addr16
adc
mov
hlt
roll
pop
aas
popa
xor
jmp
jbe
mov
jne
out
aam
aaa
push
xor
xchg
and
repnz
pop
dec
popa
fcmovnu
push
add
lahf
and
or
jge
push
fdivrl
cmp
jle
add
inc
fldl
xor
add
sub
push
cltd
sub
ds
jbe
cmp
pop
adc
mov
jecxz,pn
clc
out
aad
pop
sbb
jno
push
or
sbb
cmp
enter
mov
ja
mov
add
and
add
sahf
xchg
mov
out
mull
push
inc
les
filds
jge
adc
inc
mov
mov
or
in
test
sbb
popa
out
pop
dec
addr16
pop
shll
xor
loop
in
push
lret
add
mov
add
xchg
fs
test
sbb
fistpll
cmp
push
mov
xchg
dec
xchg
test
add
lcall
out
dec
jns
or
fistpll
in
loopne
add
dec
mov
test
add
addr16
pop
add
or
xor
sbb
test
subb
jg
fdivrp
add
nop
js
mov
cmp
stos
andb
pop
jbe
pop
cmp
lcall
stos
mov
cmp
jbe
mov
xchg
jmp
shl
xchg
adc
fldt
fiadds
xchg
cwtl
call
cmp
aas
lock
aam
arpl
repz
or
pop
loop
cld
leave
add
mov
add
or
pop
lahf
mov
add
aad
aaa
xchg
add
lcall
adc
cmpsl
test
pop
mov
mov
push
data16
jg
xchg
leave
outsl
mov
aad
mov
push
add
cli
xor
or
lret
xor
jne
add
mov
stos
ja
nop
outsb
addl
inc
scas
dec
mov
sub
cmp
sahf
stc
add
in
jno
bnd
and
and
dec
jb
push
leave
lock
push
in
sub
xor
cmpsb
pusha
adc
call
push
shlb
dec
jne
jno
paddq
mov
cmp
push
add
cltd
and
and
and
adc
mov
cmp
negl
cmp
add
lock
out
inc
cmpsl
add
scas
imul
mov
jb
jmp
fwait
outsl
mov
jge
push
add
mov
addb
xchg
dec
je
in
xlat
call
outsb
and
icebp
lock
shl
xor
add
cmp
add
inc
jb
lcall
fistps
icebp
dec
mov
sbb
add
sbb
cmpsb
bswap
dec
popa
mov
jo
nop
mov
jg
inc
add
adc
mov
add
lds
jp
add
cltd
mov
add
dec
pop
mov
push
add
shlb
mov
xchg
sbb
xorb
sbb
add
int
mov
add
push
inc
stc
add
orb
pop
pop
inc
jl
jae
jl
push
cld
andl
sub
loopne
roll
mov
mov
outsb
add
fildll
jb
ja
mov
fildl
cmpsb
mov
lock
sbb
loopne
mov
mov
je
add
adc
aas
xor
testl
mov
clc
push
xchg
mov
sub
add
sbb
xchg
mov
sub
xchg
mov
mov
loopne,pt
loopne
mov
lahf
or
push
loope
dec
inc
lods
inc
sub
pop
mov
lods
out
cmp
in
das
mov
gs
add
lds
and
jnp
ds
mov
adc
je
add
jo
xor
pop
sbb
and
negb
js
cvtpi2ps
jp
das
and
xchg
dec
add
clc
lea
aam
or
add
xor
ljmp
mov
add
jnp
mov
sti
inc
jmp
pop
jecxz
sub
cmp
push
shlb
xorb
stos
add
and
divl
nop
pand
pop
jno
push
xchg
inc
pop
insb
subl
pop
cmpsb
add
add
sub
mov
sub
add
movsb
or
repz
lahf
cmovg
xor
mov
adc
xor
dec
xchg
inc
test
cmp
or
xchg
pop
mov
repnz
fisubl
dec
inc
fildl
and
loop
xchg
xlat
pusha
adc
aas
add
jge
arpl
lds
jno
dec
testl
mov
bound
iret
mov
sbb
mov
cli
les
incb
call
iret
jle
sar
sbbl
push
push
mov
aam
iret
sbb
mov
xchg
dec
nop
fstpt
push
daa
fst
ja
adc
pusha
test
cmc
repnz
add
adc
sub
push
cmp
push
aaa
lea
and
fcomps
mov
cltd
and
xorl
cmc
push
call
popl
stos
testl
pop
mov
arpl
pop
or
xor
xchg
inc
mov
and
cltd
stos
bound
pop
loop
sahf
xor
loopne
addr16
cmp
out
jle
in
adc
cwtl
ffree
xchg
and
mov
in
ror
andb
jge
es
cmp
push
push
pop
pop
dec
jmp
dec
add
movsl
mov
lea
adc
lock
jne
dec
and
jo
push
cmp
repnz
xlat
push
cmp
dec
in
pop
inc
fnstcw
add
xchg
and
call
lods
and
insw
pop
and
and
shll
push
add
lahf
aas
add
inc
je
push
jne
and
gs
dec
in
fdivrs
cwtl
dec
cmp
gs
arpl
add
int3
sti
filds
je
jno
leave
mov
adcb
sahf
cmpsb
bswap
mov
orl
push
jecxz
xor
jbe
imul
shrb
lcall
sub
cmpsb
mov
out
add
mov
lods
out
mov
inc
mov
cmp
add
insb
ficoml
daa
xchg
nop
mov
add
cmpsb
ja
sahf
pop
in
out
fidivrl
jne
add
call
mov
cwtl
loop
adc
jb
add
std
lea
add
and
sub
mov
mov
mul
int
stc
loopne
aad
mov
add
xor
nop
dec
sub
sbb
outsb
ss
and
jmp
dec
mov
jmp
pusha
clc
adc
jmp
in
cmp
movl
mulb
mov
inc
cmc
add
out
mov
add
hlt
shlb
xlat
push
jg
inc
dec
add
testl
add
lock
or
sti
or
fidivrs
pop
lods
jp
mov
push
out
lods
les
add
push
adc
cmp
je
loop
fprem1
xchg
loope
xor
loope
adc
push
add
jmp
mov
push
testl
inc
femms
dec
jmp
jnp
jp
mov
sbbb
mov
fisubrs
xor
int3
or
adc
xchg
inc
dec
ja
or
jne
jb
bound
mov
idivb
xchg
mov
andl
aam
adc
xchg
rolb
xor
test
push
arpl
push
ljmp
pop
fildl
repz
sti
or
repnz
adc
int3
sarb
hlt
add
cmp
mov
out
push
push
fwait
pop
jle
push
mov
jne
xor
pop
js
jns
hlt
outsl
add
lcall
add
push
lds
aam
icebp
in
addr16
into
cld
add
sbbl
add
mov
sbb
arpl
add
hlt
movb
cmp
jo
xor
and
cmpb
jo
faddl
xchg
pop
mov
jo
std
cs
add
mov
and
xchg
scas
add
icebp
repnz
cmpsb
add
pop
rcrb
or
std
es
xor
cmp
jo
repnz
jno
and
add
sub
lock
jmp
xchg
mov
add
dec
cmp
jp
jne
mov
sbb
add
in
inc
jmp
ljmp
outsl
xchg
lods
push
ljmp
cld
xor
data16
jne
out
jp
push
movsl
mov
mov
push
ja
sti
std
cmp
jg
cmp
cmp
repz
jecxz
inc
movsl
or
inc
pop
pop
sub
scas
jmp
call
sub
mov
les
mov
in
jg
xor
push
repnz
outsl
out
int3
cmpsl
imul
fnstcw
dec
or
mov
daa
add
jge
andb
mov
sti
dec
repnz
je
add
shll
and
add
das
pushf
mov
xlat
ds
add
repz
sar
add
mov
iret
jp
lock
mov
jne
mov
mov
sbb
cmp
push
ja
mov
push
push
sub
mov
insl
sub
lock
adc
cmpl
scas
add
or
cmp
mov
out
arpl
dec
lods
fists
sbb
leave
insl
mov
inc
lods
incl
xor
jp
xchg
and
jns
jmp
or
out
mov
test
out
test
xchg
faddl
mov
mov
call
movb
enter
popf
xor
and
xor
out
pop
jne
sarl
add
fs
add
mov
sarb
iret
movsb
pop
mov
dec
in
scas
test
ds
loopne
pop
pop
pop
adc
stc
dec
repnz
outsb
bound
testl
rcrb
mov
pop
arpl
repnz
mov
aad
into
mov
aas
sub
jg
push
lret
mov
jge
lods
mov
add
out
ds
sbb
or
xor
lods
scas
push
add
add
jp
xor
fsubs
sbb
aam
add
mov
insb
into
or
nop
sbb
xlat
cmp
icebp
fldt
and
mov
sub
clc
push
lahf
and
or
lods
xchg
aad
jg
out
out
lods
lahf
stc
stos
cld
add
popf
add
lret
insl
dec
add
push
shl
sar
pop
nop
sub
dec
loope
lret
jnp
call
stos
outsb
or
add
fistpl
mov
test
adc
lret
add
out
inc
and
mov
aam
in
jge
push
xchg
mov
fmull
mov
jb
pop
loope
add
add
push
fwait
into
mov
in
pop
lret
lds
inc
jo
hlt
rolb
sub
and
pop
jno
adc
cmp
add
ja
mov
test
outsb
jne
fimuls
add
imul
ja
jo
add
scas
out
data16
mov
add
mov
subb
lods
add
and
loop
add
jge
cmp
outsb
mov
pop
mov
pop
xor
xor
rolb
lock
outsb
out
add
adc
mov
neg
push
jle
pop
mov
ss
pusha
aam
lret
iret
aaa
icebp
sbb
insl
sbb
ja
push
sbb
jge
dec
inc
add
mov
lock
or
jns
sbb
or
cmp
mov
add
test
pop
mov
sahf
push
dec
stos
xchg
or
inc
sti
call
pop
repnz
add
pop
imul
call
mov
add
aaa
inc
sub
mov
xchg
sahf
mov
adc
jp
inc
push
jnp
into
jle
repnz
ret
imul
in
ds
in
inc
jmp
adc
rorb
pop
sbbl
in
das
xchg
mov
insl
repz
loop
jnp
add
xchg
mov
clc
xchg
jb
lahf
add
cmp
adc
ss
mov
out
rolb
sub
movsb
add
fdivrl
mov
mov
scas
jbe
imul
jecxz
mov
pop
sbb
mov
leave
inc
xchg
jle
insl
adc
adc
cwtl
hlt
cmpsl
adc
fistpll
cmp
add
fs
out
push
adcb
aad
dec
call
push
loope
std
add
roll
push
repnz
mov
lea
adc
push
dec
mov
rcll
and
movsb
adcb
sub
mov
and
std
ret
jle
sbb
mov
mov
fdivl
mov
adc
ss
jge
add
rcrb
add
push
adc
dec
add
cmp
das
jbe
inc
rcrl
aaa
mov
add
sbb
cmp
shlb
jmp
push
out
add
mov
icebp
mov
ss
jmp
or
pop
pop
cmp
pusha
movl
mov
pushf
fstpt
and
nop
aad
jns
mov
loopne
pusha
enter
fwait
and
jae
push
lret
loope
cmpsb
xor
lcall
inc
add
movsb
mov
test
test
in
and
aaa
mov
mov
mov
test
sub
adc
adcl
xor
shrl
cmp
xor
cmp
nop
pop
loop
out
adc
imul
aad
ficoml
fnstsw
out
mov
add
imull
arpl
and
pop
adc
mov
aam
in
mov
lods
jge
movsl
in
pop
push
jae
add
negl
pop
sbb
mov
add
or
add
jnp
dec
jge
repz
xor
xor
loopne
lock
mov
imulb
add
mov
jae
daa
repz
adc
xchg
inc
mov
xchg
dec
and
push
xchg
mov
dec
mull
flds
movb
sbb
pushf
fwait
add
add
faddl
mov
jae
sti
je
pop
lcall
je
add
stos
push
sbbl
xchg
cld
add
mov
mov
add
adc
add
cld
aad
pop
loopne
mov
jmp
add
jbe
push
add
mov
mov
fbld
inc
insl
test
mov
in
fldenv
xchg
inc
xchg
dec
sahf
dec
xchg
pushf
xchg
push
add
nop
js
insl
pop
add
cmc
sbbb
outsl
jmp
sahf
ds
repnz
jno
out
pop
lret
ja
ficompl
sub
or
aam
cmp
push
out
jle
push
and
mov
or
inc
bound
dec
jge
fisubs
mov
inc
insb
mov
fcmovnbe
pop
push
pop
push
paddsb
push
adc
data16
jno
add
sub
dec
sbbb
jnp
mov
or
leave
loope
rolb
pop
mov
insb
mov
ror
adc
mov
xor
adc
pop
shrl
pop
xlat
and
aam
xor
pusha
push
data16
jge
leave
cmp
fsubp
outsb
fildl
arpl
idivb
jp
add
push
andl
add
push
les
push
aam
or
pop
jae
ja
pop
fmull
inc
cmc
and
add
sub
sahf
popf
in
loopne
addr16
xchg
push
mov
add
push
nop
call
sbb
sub
jmp
sarl
leave
mov
popa
mov
scas
add
mov
sbb
flds
ffreep
daa
mov
dec
popa
add
xchg
ljmp
nop
loopne
shr
add
lods
mov
or
xchg
lret
in
arpl
scas
ret
mov
ficompl
cmp
cli
xor
lock
xlat
add
jno
push
cmpb
sub
in
scas
aad
pop
in
ss
into
rclb
xchg
sub
sarb
or
addb
add
mov
lcall
shr
loop
out
add
and
mov
xorb
test
push
add
add
add
mov
data16
jmp
mov
sti
loopne
arpl
divb
cmpsl
shr
in
sbb
pushf
clc
add
lret
test
push
add
mov
dec
mov
pop
inc
sub
and
mov
push
pop
outsl
mul
add
loopne
sbb
push
or
aas
or
xor
jmp
mov
cmp
adc
ja
jb
popa
add
loope
push
icebp
or
pop
and
add
xchg
inc
jno
pop
jg
in
add
test
mov
jecxz
add
fstpl
imul
mov
in
outsl
add
dec
sbbb
add
dec
lock
and
notb
das
sub
jb
out
imul
and
rclb
pop
in
adc
stos
rclb
or
inc
loopne
add
stos
push
mov
je
adc
sbb
dec
cltd
xchg
testl
sbb
imul
test
mov
loop
cmpsb
inc
addl
les
dec
shll
dec
add
jne
pop
add
mov
idivl
jmp
fldl
das
negb
int3
inc
rorb
jns
xor
add
cltd
pminsw
mov
out
adc
pop
movsb
inc
ret
pop
pop
pusha
pop
in
das
pop
sub
roll
add
dec
inc
mov
imul
inc
add
arpl
jb
add
sbb
mov
sub
je
test
rcl
jmp
leave
mov
add
mov
xor
inc
roll
and
push
stos
pusha
push
push
fiaddl
xchg
add
test
xor
add
into
dec
pop
and
mov
rorb
pop
cmp
sbb
stos
and
add
into
mov
bnd
jbe
in
lds
shr
add
xchg
mov
add
mov
add
mov
pop
insl
aam
or
add
out
mov
clc
repz
mov
cmpsb
inc
jns
add
jecxz
out
out
add
in
idivb
sbb
shrl
cmc
enter
add
mov
je
sbb
test
daa
dec
mov
fiaddl
fnsave
pop
add
loopne
adc
inc
adc
push
fsubrl
push
pop
mov
jecxz
xchg
mov
cs
ja
call
mov
sub
shl
mov
xchg
xchg
sub
rcr
add
push
lahf
add
leave
sub
pop
add
imul
leave
add
test
mov
and
in
aas
jnp
inc
ss
cmpsb
test
rolb
mov
add
fildl
mov
mov
mov
xchg
dec
inc
adc
ret
inc
sahf
enter
add
mov
data16
add
pop
jmp
rcr
lock
push
sti
stos
imul
clc
mov
add
sub
xchg
mov
aas
add
stos
or
sub
ljmp
inc
in
mov
dec
pop
pop
push
add
mov
mov
ret
into
add
pop
xor
lea
arpl
sub
aam
test
push
xor
or
xchg
sbb
and
std
jns
cld
fs
mov
testb
hlt
jb
add
enter
push
add
add
and
test
sbb
nop
je
roll
add
fwait
stc
es
ret
mov
lods
add
jg
cwtl
add
add
cmp
and
cmpsl
add
repnz
pop
cmp
sub
out
dec
std
lods
outsb
cli
insb
pop
pop
jecxz
fstpt
mov
stos
push
fwait
xor
dec
mov
push
add
test
lcall
add
mov
sti
xchg
clc
out
add
mov
xchg
mov
dec
aad
dec
shlb
xchg
hlt
adc
scas
cmpb
add
lret
fldt
pop
insl
sti
cli
int3
add
jge
call
add
adc
aad
jbe
jl
mov
fldenv
dec
xchg
jg
mov
push
adc
popa
xchg
stc
sbb
mov
sub
fdivp
add
addr16
rcrl
movb
outsl
mov
adc
mov
inc
add
ds
cmp
lahf
add
imul
loope
mov
icebp
sahf
ljmp
enter
mov
pusha
push
daa
add
movsl
test
inc
pusha
pop
in
add
fdivs
push
fstpl
addl
pop
jno
out
lret
dec
add
out
aam
xor
out
pop
push
sbb
outsl
popa
adc
push
push
adc
sti
pop
pop
or
outsl
mov
add
mov
mov
push
rcrl
cmc
add
jp
imul
mov
xor
aas
jne
mov
sbb
dec
test
mov
add
out
gs
jae
arpl
sub
in
enter
daa
push
xor
aas
xchg
mov
jmp
into
add
pop
or
cmp
stc
ds
jb
fistl
adc
stos
scas
test
pop
and
js
xor
add
dec
mov
lods
add
mov
xlat
sub
or
into
arpl
mov
adc
xchg
push
xor
push
clc
je
stc
mov
sar
add
mov
mov
and
pop
sbb
add
loope
mov
mov
inc
add
scas
hlt
lahf
shlb
mov
cld
pushf
xchg
push
add
mov
jns
add
sahf
dec
mov
mov
xor
cmp
outsb
xlat
cli
js
xor
fistpl
mov
es
xor
scas
add
add
les
pop
cmp
loopne
test
mov
xchg
xchg
add
cmp
mov
xchg
int3
out
in
les
xchg
cmp
sub
jbe
mov
bswap
dec
push
ja
xchg
add
fcmovnb
jne
xchg
and
jecxz
test
stos
push
aaa
xor
xor
aas
lods
cmp
push
sbb
int
cmp
scas
push
pop
aaa
incb
stc
xor
je
icebp
and
mov
cmpsl
lea
inc
sub
mov
lcall
popa
cmp
dec
mov
add
insb
mov
enter
sbb
out
add
in
ret
cmpsl
adc
mov
js
lods
lds
cmpsb
mull
jecxz
ret
adc
repnz
pop
dec
add
push
fidivl
push
nop
mov
sbb
ja
xchg
js
jne
cmp
add
xor
into
mov
repz
pop
shl
add
leave
icebp
add
push
fsubl
xor
pop
call
add
sahf
lcall
add
orb
sbb
mov
dec
outsb
jecxz
bound
push
and
int3
adc
inc
push
dec
add
stos
ret
xchg
rcrb
push
adc
add
pushf
mov
sbb
jl
fdivr
clc
add
rcrl
fadds
sti
ficoml
push
add
insl
jl
pop
icebp
clc
add
xchg
adc
pop
stos
or
in
xor
add
jg
or
mov
ss
fwait
sbb
js
mov
jo
test
pop
mov
ret
push
pop
or
stos
add
pop
outsl
jge
add
mov
fadds
mov
jl
add
pop
push
add
mov
cmp
sbb
cmp
cld
imul
mov
dec
pop
lock
xchg
add
lret
lock
negl
shlb
push
add
mov
inc
push
add
fnsave
mov
cmpsb
int
sbb
pop
mov
sub
insl
cmpl
jge
idiv
das
ret
popa
jnp
xchg
or
aam
add
gs
shl
and
push
nop
ret
enter
clc
dec
push
mov
jns
out
rcrb
mov
gs
mov
arpl
stos
push
add
cmp
jge
subl
jnp
add
sub
jae
stos
ljmp
lahf
adc
add
test
mov
lds
subl
pop
loopne
or
out
sti
pop
mov
xchg
out
and
adc
sbb
inc
shll
mov
imul
nop
pushf
add
jnp
repz
jo
cmp
lea
add
addb
push
xchg
data16
hlt
lret
push
mov
and
int
ds
cmpl
hlt
cmp
enter
dec
adc
pop
cwtl
and
mov
add
aad
test
mov
pop
push
popa
fnsave
jbe
cwtl
jl
jp
mov
and
sub
xchg
test
mov
add
adc
push
stos
shl
ljmp
iret
nop
shlb
add
divb
adc
push
inc
inc
lock
in
mov
push
rolb
jae
ret
lods
push
fiadds
popa
lcall
enter
arpl
icebp
jnp
add
jne
jg
repz
mov
jae
fwait
dec
push
pop
pop
add
push
aas
inc
mov
add
adc
and
mov
dec
lods
xchg
jg
fiadds
adc
out
sub
mov
add
divl
ljmp
insl
lds
push
ds
inc
pop
aaa
lock
inc
out
sub
jecxz
push
rolb
cmp
xlat
movaps
clc
jp
push
add
jge
data16
add
dec
xchg
pop
mov
imul
mov
ret
or
jnp
outsl
mov
sahf
call
jge
aas
add
test
add
sub
dec
push
jb
inc
add
fisttpl
leave
loope
add
and
aas
and
stos
mov
and
cmpl
sarb
cwtl
cmpsl
test
cmp
iret
xor
mov
dec
and
ret
and
pop
jmp
mov
inc
into
testb
xchg
jns
cltd
jbe
dec
add
lea
pop
or
inc
sub
push
andps
cmp
adc
push
sbbl
add
sbb
ret
add
xchg
pop
jl
call
add
push
das
arpl
sub
jb
add
cs
jmp
iret
mov
jno
pop
in
xchg
mov
add
jg
repnz
cmpsb
and
push
bndstx
hlt
and
scas
mov
sbb
imul
lods
out
cmp
addb
lret
add
shlb
mov
mov
lock
and
in
out
pop
push
std
fbld
sub
xchg
inc
stos
loope
add
pop
dec
andl
mov
dec
xor
mov
xor
nop
push
leave
or
pop
lcall
xor
and
push
cltd
dec
cmpb
aad
shr
add
sub
pop
pop
jns
push
in
inc
sti
in
ret
imul
int3
sahf
daa
ret
loopne
xchg
sub
stos
cmp
cmp
lahf
xchg
mov
imul
add
mov
mov
dec
inc
add
cmp
or
aas
add
inc
aaa
lcall
pushf
leave
xor
repnz
mov
jbe
or
add
int3
mov
scas
repnz
enter
add
cmp
push
add
jmp
mov
outsb
call
cmp
jl
out
xor
xchg
testl
das
jp
out
xchg
in
add
cmp
push
or
jmp
mov
out
xor
and
mov
fbstp
add
jnp
imull
aad
mov
adc
mov
or
push
fnsave
jnp
aad
jmp
sub
push
xchg
ret
imul
adc
push
fs
jg
mov
sbb
jo
xchg
and
jno
aad
adc
pushf
sbb
xor
cli
xor
and
jbe
in
xor
add
in
adc
jno
sbb
lea
pxor
movsb
rorl
inc
sub
stos
or
ret
sbb
std
sti
loop
aaa
xchg
pop
mov
adc
icebp
sub
pop
fadd
jle
lods
lret
aaa
mull
mov
lods
daa
add
enter
adc
pop
dec
inc
andl
loop
xor
sub
and
enter
icebp
ss
lea
repz
cmpsb
cmpsl
adc
and
stc
dec
out
pop
sti
into
fsubl
pop
int
ja
or
neg
hlt
dec
xor
adc
sti
mov
stos
test
sahf
and
add
and
jb
push
adc
sbb
lahf
or
cmpsb
pop
lock
dec
cs
dec
xor
adc
mov
or
ja
addb
data16
mov
sub
repnz
leave
mov
adc
mov
das
jecxz
adc
inc
dec
ficompl
xchg
or
test
cs
scas
push
ret
push
movsb
add
pop
mov
rorb
push
inc
pop
aam
addb
or
cwtl
sbb
xor
or
push
fwait
adc
shr
jae
pop
rorb
lret
cwtl
adc
loopne
inc
loopne
outsb
pop
and
and
lret
hlt
imulb
mov
add
add
and
sbb
adc
adc
ret
inc
adc
jl
inc
push
adc
pop
adc
sbb
adc
or
adc
or
sub
adc
dec
pop
or
add
test
add
imul
sub
mov
add
add
out
pop
scas
cmp
mov
test
out
or
and
fisttps
pop
repnz
in
sub
rolw
popf
mov
mov
mov
adc
mov
pop
cltd
or
adc
push
mov
into
or
inc
pop
or
mov
sub
arpl
mov
inc
add
add
dec
fimuls
arpl
sub
pop
lea
mov
dec
add
iret
mov
or
jo
jnp
dec
pop
add
add
add
mov
outsb
imul
jnp
or
movb
inc
pushf
jae
add
xchg
lahf
or
and
pushl
mov
dec
and
into
cs
or
ret
xchg
jne
iret
or
nop
and
inc
out
incl
pushf
fildl
cmp
sub
cmpb
testb
les
call
dec
ficomps
mov
jbe
or
and
ficomps
lds
imull
mov
fdivrp
test
iret
jecxz
xor
out
mov
ficomps
mov
or
mov
sbb
add
inc
mov
xor
sti
adc
mov
int3
out
mov
or
or
cmp
push
sbb
cmp
mov
inc
dec
push
pop
cmp
or
sub
lahf
dec
inc
pop
inc
cmp
ret
push
xor
and
push
xor
pop
or
lahf
adcl
shlb
pop
aaa
imul
and
cmp
data16
adc
sbb
iret
test
add
pop
ss
adc
adc
pop
sbb
or
pop
pop
push
push
pop
outsl
push
adc
sub
mov
dec
or
adc
inc
imul
pop
cmp
add
packuswb
pop
add
adc
filds
push
xor
dec
inc
add
pop
sbb
push
sbb
bound
ss
das
sbb
pop
xchg
sbb
and
inc
cmp
addr16
adc
mov
aas
pop
mov
arpl
pop
loop
push
ja
xor
push
push
dec
gs
dec
popa
jb
push
and
add
dec
mov
into
das
scas
addl
pop
or
sbb
mov
ret
and
add
pop
or
add
aam
loopne
ljmp
jbe
add
jp
xchg
in
push
paddusb
sub
enter
pminub
sarb
test
mov
dec
add
add
push
inc
add
add
sahf
loopne
or
lret
dec
hlt
adc
xor
or
sub
repnz
xchg
jbe
or
test
mov
imul
or
adc
cmpsb
lahf
shl
subl
and
dec
jne
repnz
sbb
inc
dec
pop
adc
mov
cmpsl
nop
out
testb
inc
dec
ds
dec
xchg
inc
rclb
push
js
dec
int
jae
ss
dec
flds
movsb
sub
push
or
push
and
adc
cs
fstpl
mov
lock
push
or
aad
cmp
sub
push
mov
dec
dec
sub
adcb
arpl
or
inc
inc
lret
arpl
xchg
inc
or
inc
popa
popa
inc
ds
sub
or
pop
mov
and
cmp
ja
cmp
enter
popf
shlb
arpl
lcall
sbb
adc
sbb
push
push
xchg
pusha
scas
or
add
xchg
scas
cmpsb
adc
adc
xchg
adc
mov
or
and
mov
dec
mov
stc
or
or
pop
sbb
mov
and
mov
ret
inc
adc
popf
nop
pop
lds
sub
adc
pop
push
pop
and
ret
mov
repnz
mov
xchg
insl
cmpsb
movsb
movsb
jmp
aam
lret
or
frstor
cs
pop
dec
sbb
adc
inc
or
cmp
xchg
and
jae
or
imul
xor
lea
push
outsl
aaa
cmp
fsincos
scas
fcoms
test
mov
cmp
pop
push
xor
movsl
mov
gs
push
sub
sub
cmp
add
in
mov
movl
fsts
add
pop
sub
fdivs
nop
sbb
sub
dec
add
dec
mov
mov
xchg
sbb
inc
mov
add
hlt
adc
and
xchg
popf
add
jno
sbb
mov
add
es
scas
loop
inc
jbe
pushf
sbb
dec
hlt
jle
enter
jnp
cmpsl
push
add
adc
cmc
pop
aam
push
jne
arpl
pop
ja
add
mov
ds
and
jg
clc
imul
mov
iret
add
pushl
inc
mov
mov
or
std
jnp
orps
pop
and
add
add
and
bndldx
fiadds
je
shrb
scas
mov
adc
sub
jb
inc
push
pushf
ja
jp
stos
mov
adc
dec
test
mov
adc
jbe
or
cmp
mov
mov
inc
fsubrs
dec
sbb
mov
sbb
sbb
mov
xchg
adc
rcll
data16
mov
jno
bound
xor
bound
xor
push
xlat
cmp
test
xor
aad
cmp
sbb
ds
mov
push
adc
loop
mov
or
rolb
push
ds
sbb
les
pop
mov
add
cmpsl
mov
test
adc
les
mov
push
pop
cmp
repnz
sub
sub
stos
ret
mov
pop
outsl
push
in
jae
inc
data16
addb
lods
pop
adc
imul
pop
xor
inc
shl
out
and
jnp
jbe
jl
scas
mov
inc
mov
pop
clc
loope
lock
cwtl
cmp
add
dec
adc
scas
cmpsb
ficoml
test
shrb
mov
xlat
add
adc
mov
jmp
add
xor
aam
mov
clc
mov
aas
or
jl
inc
sub
add
clc
lcall
mov
std
dec
repz
cmpsb
or
lea
pop
arpl
mov
inc
hlt
push
mov
loopne
jbe
pop
ret
sbb
jecxz
add
mov
adc
sar
mov
fcoms
mov
mov
push
std
in
clc
pusha
js
cmp
ffreep
sbb
sbb
add
push
pop
mov
incl
xor
mov
std
jl
push
sbb
push
sti
lcall
or
pusha
bound
sub
xchg
cmpsl
xor
fidivs
outsl
rorl
fisttpl
fidivrs
fcoml
cld
mov
sarl
outsl
add
sub
shl
mov
xor
inc
push
jmp
sub
and
rorl
dec
sbb
inc
stc
and
lahf
ds
cmp
js
adc
sub
mov
sbb
cli
xor
incl
pop
aam
neg
jmp
jne
repnz
pop
mov
jl
mov
pop
insl
movsb
adc
ret
inc
and
hlt
in
xor
negb
and
inc
or
aad
popf
mov
and
cli
push
push
mov
inc
stc
push
mov
or
push
imul
aam
push
push
jmp
xor
sbb
dec
out
insl
icebp
aad
xor
daa
xor
and
add
adc
or
cmpsb
xchg
add
push
orl
inc
sbb
and
or
rcrl
lahf
ss
enter
les
or
push
mov
jne
cmpsb
push
jge
paddw
out
loopne
outsl
ljmp
jnp
jae
add
es
dec
jl
sbb
adc
movl
ds
add
jl
cmpb
push
mov
push
test
add
push
cld
imul
add
sbb
lock
adc
pop
xchg
xchg
add
data16
js
outsl
sti
cmpb
or
mov
xor
leave
add
daa
inc
pop
dec
xchg
adc
add
neg
add
icebp
inc
out
mov
pop
lds
push
pmaxub
pop
or
mov
ja
aad
jl
add
imul
out
cltd
cld
mov
in
and
push
lock
enter
add
idivb
lret
add
jnp
je
cmc
sub
add
insb
jns
push
mov
nop
cmp
mov
pusha
les
sbb
into
movsb
sbb
mov
mov
push
push
add
loopne
call
add
jne
adc
cld
pop
sub
xor
icebp
fildl
add
movsl
adc
xor
sub
add
inc
cmc
ljmp
filds
pop
into
aad
lods
pusha
daa
dec
cmc
int
or
dec
pop
add
mov
rcll
icebp
scas
and
xor
inc
jae
outsb
repz
lods
add
add
imul
mov
sub
loopne
cmp
loop
add
add
push
enter
add
jecxz
mov
loopne
sub
sbb
xor
mov
ljmp
push
test
dec
lds
dec
insb
shll
mov
add
push
xchg
sbb
dec
pop
int3
add
jns,pt
sarb
mov
imul
xchg
in
inc
add
adc
das
pusha
adc
and
rclb
push
add
jnp
jp
and
das
add
inc
sbb
adc
mov
adc
adc
les
ffree
pop
in
pop
push
clc
push
cld
jmp
xchg
add
jecxz
cltd
stc
adcl
pop
sub
or
or
stc
jl
add
rorl
aam
daa
mov
and
mov
test
sub
or
lret
aas
cltd
call
jnp
cmpsb
rorb
divl
jmp
loopne
in
mov
push
cmp
inc
cld
xor
pushf
add
and
sbbb
pop
bound
adc
xchg
cwtl
jo
scas
or
mov
add
cs
lods
pop
bnd
sbb
lret
and
jg
lret
pushf
and
push
jnp
adc
jp
fmuls
lods
push
cmp
mov
into
xchg
xchg
or
mov
add
aas
xchg
lock
out
cmc
add
negb
cmpb
pop
aas
lret
sub
dec
jns
les
xor
dec
cmp
cwtl
loopne
bnd
punpckldq
pop
pop
jp
test
sub
pop
mov
push
dec
add
jge
popa
ds
sti
inc
mov
sub
xlat
pop
rorb
ds
dec
add
scas
test
std
test
or
mov
out
scas
sub
dec
jnp
push
inc
push
sti
movsb
neg
ds
inc
sub
movb
outsl
clc
dec
mov
lock
mov
cmp
int
test
in
jp
and
stc
sub
std
xor
push
icebp
out
jl
cmp
in
mov
mov
xlat
xorb
dec
bnd
cld
add
clc
xchg
les
add
xchg
fcomip
jg
adc
mov
and
push
int
xchg
into
in
repnz
ja
std
sbb
xchg
jne
jb
loop
add
push
jmp
xchg
mov
sub
and
decl
lahf
repnz
enter
repz
add
pop
sti
scas
iret
loop
add
jp
vunpcklps
pop
xchg
shl
add
adc
jg
add
fs
mov
cli
push
ficomps
cld
xlat
mov
cmp
test
xchg
adc
or
ss
rclb
popf
sub
cmc
add
pop
cmpsb
push
lret
adc
mov
lds
sbb
sbb
imul
sahf
sub
add
out
fiaddl
in
cld
add
sub
xor
mov
add
cmp
pop
repnz
icebp
push
jle
loop
add
jno
xorl
enter
icebp
mov
shrb
add
sti
subb
xchg
xor
and
sub
jle
cmpsb
push
dec
pop
sub
call
es
inc
dec
mov
mov
movsl
testb
mov
add
dec
cmp
push
mov
mov
pop
rolb
jno
add
lods
xchg
je
mov
insl
add
push
jl
fadd
mov
adc
mov
and
mov
add
scas
mov
add
cwtl
add
loop
xor
mov
jne
lret
add
mov
dec
dec
fidivrl
clc
loope
stos
aam
push
cmpsb
ja
jnp
adc
shlb
icebp
xor
fstl
sub
repz
test
rclb
add
sarl
bnd
adc
pop
idiv
lds
mov
ds
add
xchg
rcr
add
pusha
or
lret
push
add
imul
loopne
dec
jmp
cmp
loop
pushf
inc
mov
dec
in
add
lock
push
testb
leave
je
mov
xor
xchg
fsts
andl
cmp
pop
pushf
jne
dec
xor
dec
mov
test
push
inc
mov
pop
mov
imul
clc
adcb
push
mov
mov
adc
sub
push
xchg
movsb
icebp
lret
cwtl
fcomps
pop
xor
test
ljmp
pop
xlat
sbb
lret
je
or
add
push
sub
mov
mov
jb
lock
das
pop
jecxz
dec
test
dec
inc
adc
in
or
push
pop
loop
dec
cld
fs
jne
mov
jo
scas
jns
xchg
imul
cmp
xor
mov
push
adc
xchg
add
adc
pop
loop
rolb
scas
add
xchg
push
sub
mov
dec
push
shr
movsl
cmp
adc
fnstsw
inc
les
push
xlat
cmpb
daa
mov
mov
mov
clc
addl
in
cmp
mov
aas
fnstsw
dec
mov
jne
in
and
xchg
outsb
icebp
add
jmp
mov
cltd
es
pushf
xor
mov
out
dec
arpl
fldcw
imulb
pop
xchg
andb
dec
add
movsb
ffreep
daa
sarb
cmp
mov
pop
cld
loope
mov
or
adc
xor
jg
dec
push
test
jp
and
adcb
cmc
sbbb
dec
mov
mov
pushf
jno
add
sub
xor
es
test
xchg
adc
inc
std
xor
sti
les
movsl
add
mov
hlt
add
std
ljmp
mov
mov
into
inc
fnstcw
mov
stc
ret
pusha
lahf
xlat
xchg
pop
mov
adc
xor
pop
repz
scas
cmp
sub
ss
xchg
add
imul
jle
push
pushf
call
repnz
or
into
jle
xor
mov
mov
pop
xor
adc
add
mov
scas
sbb
adc
lret
mov
lahf
add
mov
sub
cmc
iret
sbb
add
fdivl
lods
bound
xchg
repnz
adc
jbe
cmp
icebp
outsl
int3
mov
dec
out
js
jle
subb
mov
data16
movsb
adc
mov
fs
mov
lds
xor
mov
push
add
mov
cltd
test
rcl
js
cmp
jge
sub
outsb
sub
stc
or
mov
bnd
cmp
fstpt
fsts
dec
xchg
div
cmp
sbb
mov
xchg
xchg
stc
push
sbb
shrb
fsubs
ret
pusha
jnp
cltd
xchg
jb
dec
out
mov
ds
mov
fsubr
xlat
xor
jp
sub
jmp
mov
xor
add
ljmp
fidivrs
mov
jbe
cmp
fistpll
outsb
cmp
mov
pusha
add
sub
sub
mov
ficoms
or
in
add
push
js
cld
mov
imul
fst
xchg
add
repz
jne
add
pop
in
out
xor
and
inc
mov
cmc
and
ret
add
mov
dec
cmp
xlat
dec
cltd
fdivs
test
icebp
rcl
out
rcl
lcall
movsl
xchg
add
aaa
in
inc
add
sub
cltd
mov
lea
sub
into
fsubs
xor
fimuls
mov
aam
cmpsl
sub
lret
js
jnp
push
out
enter
add
xchg
pop
adc
int3
cld
add
jmp
or
sbb
cmpsb
or
and
arpl
cmp
mov
ficompl
jmp
jl
adc
add
dec
in
clc
mov
test
add
cmc
jno
es
sti
add
pop
cmpsl
pushf
adc
shll
add
cmp
jg
mov
xchg
jae
incb
jno
mov
adc
jp
xchg
push
jge
add
pop
xor
jnp
in
pop
mov
and
lahf
mov
pop
sbb
cld
pop
cmp
xchg
jbe
mov
bound
je
adc
call
test
arpl
notl
pop
jg
adc
sbb
daa
xor
es
es
and
loop
repz
cmpsl
sub
jg
add
rolb
and
loope
stc
mov
or
andb
cmp
pop
lods
out
add
pop
push
dec
push
dec
pop
mov
loopne
ja
pop
rorl
icebp
push
outsb
mov
mov
shlb
jle
je
push
loop
fcoml
data16
jl
mov
add
push
ret
sti
and
cmp
add
adc
pop
std
lods
inc
aad
bnd
mov
push
pop
xchg
mov
add
pop
rcll
lret
add
xchg
incb
por
add
lahf
jecxz
scas
ds
dec
repz
je
dec
cmp
les
pushf
shlb
mov
movsb
cld
sbb
cs
aam
push
inc
xlat
and
clc
inc
xor
dec
in
test
gs
xor
cmp
shlb
scas
jl
mov
inc
jbe
push
xchg
lahf
fs
cltd
sub
dec
add
cmp
xor
cwtl
daa
es
pop
or
xor
cltd
pop
xlat
dec
add
ja
out
shlb
xchg
add
adc
pushf
mov
subb
dec
scas
xchg
sbb
data16
or
add
adc
mov
in
add
out
push
call
mov
mov
pop
xchg
pusha
lcall
test
xchg
imul
in
sar
call
int3
lea
repnz
xlat
jle
mov
js
pusha
lret
jp
in
enter
lds
lea
adcl
aaa
xlat
adc
push
add
inc
cmp
pop
aas
outsl
add
iret
lahf
enter
add
call
add
lcall
sbb
bound
sti
xchg
stos
outsl
mov
push
add
add
leave
ficoml
js
rcrb
lgs
popf
mov
sub
mov
outsl
fs
clc
add
fucomi
jbe
dec
and
mov
std
out
add
aaa
adc
pop
jge
add
inc
xlat
lds
test
cld
cmpsb
inc
mov
imul
ss
xchg
mulb
add
pop
pop
pop
adc
test
adc
fs
sar
ja
incb
dec
test
mov
loopne,pn
daa
js
or
scas
adc
lahf
mov
push
mov
iret
loop
sbb
xchg
add
cmp
add
mov
daa
jmp
sbb
jg
mov
dec
fbstp
mov
gs
jno
mov
cmpsl
out
add
or
mov
or
lret
mov
loopne
push
pop
pop
pop
sub
js
dec
jge
pop
test
mov
lods
adc
imul
sbb
add
push
fsubrl
add
xor
mov
add
ret
mov
movb
mov
mov
push
sbbb
push
adc
xchg
test
inc
rol
fdiv
inc
dec
std
pop
mov
rcr
xchg
popf
pop
cltd
sub
arpl
xor
sbb
push
leave
ret
call
insb
orb
scas
das
push
enter
nop
aas
push
xchg
test
mov
mov
xor
pusha
mov
pop
ja
mov
in
cmpsl
gs
sub
add
push
jns
adc
nop
dec
inc
xchg
imul
call
pop
pop
cmp
roll
test
loopne
or
xlat
jne
jmp
das
push
pop
aad
xchg
adc
jle
movsb
rcrb
add
lods
pop
add
pop
cmc
pop
mov
add
int
orb
mov
xor
xchg
pop
sbb
jecxz
insl
fmull
lea
shll
movb
js
pop
sbb
bound
jge
xchg
push
or
add
mov
mov
subl
pop
stos
lods
mov
call
scas
mov
mov
adc
jmp
repnz
push
add
push
sub
and
cmp
cmp
xor
push
dec
inc
shrd
shlb
dec
iret
jle
outsl
inc
adc
mov
push
negb
or
push
xor
xchg
dec
loope
test
inc
dec
add
dec
xchg
mov
jecxz
aaa
push
pop
dec
pusha
cltd
sub
add
mov
push
call
je
test
jae
add
pop
ds
stc
mov
fnsave
and
testb
lret
cmp
mov
pop
aam
insl
pop
mov
adc
cmp
test
and
xchg
scas
add
push
sbb
rcll
mov
mov
cs
sbb
dec
stos
mov
ds
mov
sub
dec
jne
outsb
sub
add
pop
test
aad
xchg
add
sahf
aaa
jae
fxch
dec
pusha
pop
mov
scas
add
pavgb
mov
pusha
and
add
push
mov
lcall
adc
rolb
out
xchg
ja
cmp
mov
cmp
out
pop
gs
in
pop
or
mov
roll
test
cmp
fiaddl
add
repnz
arpl
mov
add
xchg
ret
jmp
je
push
sub
inc
inc
inc
adc
cmp
add
fs
add
and
sub
jmp
addl
ja
shlb
loopne
mov
in
mov
out
fiadds
fisubl
cmpb
dec
jecxz
lea
divl
mov
pop
xor
push
loop
sbb
add
test
push
jge
sub
push
mov
jno
imul
add
out
sbb
add
fmuls
xor
mov
mov
push
stos
adc
add
sbb
inc
nop
add
es
push
bound
sti
nop
or
addl
mov
jae
popf
cmp
add
ficoms
mov
inc
add
jae
adc
mov
dec
dec
sub
inc
inc
and
mov
adcl
test
dec
jo
or
mov
add
add
rclb
adc
cmp
inc
movsb
pop
sub
mov
fprem
sbb
test
and
ror
or
jmp
add
xchg
adc
xchg
into
lock
shrd
sub
sub
dec
add
pop
jnp
das
fiadds
in
pop
push
xor
inc
jae
mov
mov
aad
adc
add
fiaddl
out
pop
jno
jnp
or
pop
test
sarb
sub
mov
cli
inc
or
inc
add
and
in
add
je
repnz
sub
sbb
push
xchg
push
and
adc
sbb
sbb
loopne
fisubs
add
inc
dec
mov
jp
andl
pushf
test
pop
mov
xchg
leave
inc
jbe
dec
cld
lret
add
call
pop
cmp
sbb
decb
adc
add
push
notl
ja
adc
mov
inc
and
add
and
pop
mov
orl
cmpl
push
xchg
in
sub
es
add
xchg
add
add
jne
sub
into
add
mov
into
jmp
push
lock
insb
std
test
xorl
cld
mov
cltd
mov
mov
out
insl
cmpsl
das
dec
push
es
jne
stos
add
sub
sub
loop
cwtl
add
sbb
stc
lds
inc
aad
leave
int3
and
mov
addb
lret
les
add
xchg
add
add
jge
inc
shrb
lcall
stos
lret
dec
add
pop
inc
jne
jae
add
xchg
xor
or
lcall
jbe
add
jnp
ret
add
cs
insb
push
add
fsubl
inc
or
push
add
lahf
int
pop
rcrl
pop
pop
push
or
mov
jecxz
add
lods
inc
cmpsb
int3
push
mov
ljmp
fsubrl
loop
fs
mov
xor
scas
test
push
mov
jne
push
rorb
xorb
add
xor
push
sahf
stos
jmp
fistpll
xor
ljmp
push
mov
repnz
sbb
pusha
mov
push
enter
stos
jnp
call
loop
iret
or
pusha
mov
jb
seta
and
pop
in
loop
js
sub
adc
mov
je
add
adc
xor
cmp
push
mov
mov
outsl
in
add
mov
push
xorl
loopne
addr16
sbb
out
add
shll
or
mov
shlb
add
mov
inc
jae
movsb
sub
cmp
pop
in
into
inc
daa
cmp
fstpt
add
test
add
in
pop
jmp
cmpl
or
sahf
mov
jl
xor
sti
mov
in
loopne
daa
add
push
push
inc
cmp
pushf
cli
inc
inc
fimuls
imul
out
and
add
sbb
add
aas
stos
mov
dec
pop
mov
flds
mov
or
test
int
dec
add
movsb
mov
sub
inc
xchg
or
lock
es
jne
lea
mov
mov
push
mov
xchg
adc
xor
push
pop
add
jne
mov
iret
jle
rorb
cmp
call
js
pop
lds
or
inc
add
add
ja
fbstp
lods
sbb
jmp
xchg
sub
pop
xor
mov
in
inc
sub
into
mov
add
push
clc
lods
or
adc
in
add
inc
pop
dec
and
pop
sbb
mov
mov
mov
jp
fidivs
std
sub
rcr
add
or
cmp
add
call
add
cs
ficoml
leave
mov
outsb
dec
xchg
pop
and
mov
and
test
lea
loope
sbb
sub
add
push
mov
fcmovbe
flds
rcl
pop
adc
pop
adc
jge
add
mov
pop
xchg
sti
ja
ds
hlt
or
loope
test
cmp
xor
jge
jne
lea
outsb
pop
jo
shr
andl
cmp
xor
jno
fmuls
inc
insb
call
add
sti
lea
push
shlb
iret
pop
cmp
xlat
aas
andl
and
sbb
xlat
clc
mov
jnp
out
insb
sub
add
fdivrs
xor
xchg
or
stc
xor
and
fnstcw
adc
rcrb
jnp
mov
gs
mov
out
and
lea
xor
add
fwait
cmp
or
push
nop
movsb
ljmp
xorl
xchg
rolb
jae
pop
jle
es
mov
mov
jb
mov
mov
push
fadds
mov
add
pop
test
movsl
or
shr
enter
and
cmpl
dec
fnstenv
jne
add
and
fsubrp
pusha
cmp
dec
fistpll
pusha
sub
loop
push
clc
fwait
or
leave
test
cld
ret
push
call
and
xor
sub
repnz
inc
loope
jo
movsl
add
repz
add
mov
push
mov
fsub
sbb
mov
loop
or
xchg
pop
fldl
daa
mov
push
shrb
sahf
test
pop
daa
mov
inc
xchg
pop
pop
jne
xlat
sbb
stc
sarl
sti
dec
mov
mov
pop
mov
enter
aad
cld
xchg
fs
or
pop
pop
or
jne
or
roll
icebp
ljmp
xchg
and
cmpl
loop
xchg
xor
ret
and
and
cltd
pop
mov
xor
nop
cmp
jno
adc
pop
addr16
push
jns
jmp
popf
aaa
cmp
add
add
mov
gs
cmp
mov
repz
sbb
jle
lods
cli
add
sbb
in
jnp
sbb
fstl
pop
sbb
pop
dec
mov
push
dec
add
inc
xor
movsl
imul
pop
mov
jbe
popf
sar
add
jp
aad
add
xor
cmpsb
jae
mov
push
shl
enter
vmaxss
push
cmp
xchg
pop
inc
pop
loopne
add
jnp
xchg
in
mov
push
jbe
in
jl
icebp
jle
add
in
fsubrl
imul
add
pop
xor
push
popa
shll
out
stos
mov
cmp
cltd
adc
add
dec
jb
mov
aas
sarb
cmp
nop
mov
gs
data16
pop
lds
fcom
mov
mov
int3
xlat
adc
sub
push
sahf
sub
inc
add
fstps
ret
push
push
mov
add
and
popf
sub
inc
cld
hlt
or
fwait
jle
xchg
movb
cmpsl
add
inc
dec
scas
add
jp
call
loopne
arpl
bound
es
nop
scas
xchg
cs
and
rol
ret
inc
mov
pop
call
mov
xchg
jae
ds
jnp
jno
mov
add
popf
jg
add
and
not
add
jge
and
aas
sub
push
ds
pop
scas
pushf
sar
les
lret
sub
xor
inc
leave
mov
es
icebp
add
xchg
out
popf
push
pop
mov
outsb
push
jb
cwtl
cltd
icebp
xorb
xor
and
in
into
adc
and
jne
push
inc
add
jns
push
lock
sbbl
inc
test
mov
jecxz
adcl
dec
add
popf
jns
ret
adc
scas
cwtl
add
out
inc
fcompl
or
or
jmp
xchg
and
enter
add
jb
sub
mov
fsts
cmc
popa
adc
xchg
mov
shlb
jnp
jbe
out
push
or
jle
decl
jecxz
add
in
xchg
stos
fs
sub
add
xor
scas
cs
and
enter
add
out
stos
jo
jbe
jo
sti
add
mov
pushf
inc
jns
cs
add
adc
mov
jae
xchg
inc
pop
adc
mov
pop
cwtl
ret
ret
sar
rcll
push
fisttps
shlb
add
push
test
mov
fs
fstps
and
fwait
dec
ret
inc
dec
or
sbb
mov
sub
adc
mov
nop
gs
rolb
out
xor
add
sahf
subl
mov
add
mov
fcomip
popa
cmpsl
inc
push
leave
and
add
mov
inc
sbb
hlt
push
xchg
lds
es
shll
xor
or
nop
outsb
lret
mov
and
adc
getsec
push
lods
add
enter
xor
push
add
repz
pushf
daa
cwtl
mov
in
pop
cs
push
add
inc
sub
nop
mov
popa
push
cltd
out
and
int3
xchg
lds
int3
cmp
repz
or
iret
inc
enter
jno
ds
cmp
xlat
repnz
cs
mov
loopne
je
add
adc
xor
rolb
jl
sub
add
mov
dec
cli
in
mov
sub
mov
mov
loopne
lea
clc
sahf
cmp
iret
add
mov
mov
add
mov
lret
aam
aaa
aad
mov
aas
ja
adc
test
dec
mov
xchg
and
outsl
inc
fiaddl
stc
mov
test
sbb
mov
pop
add
lods
int
sbb
jle
repnz
add
insb
in
fwait
sub
add
les
add
and
enter
imul
sbb
xchg
mov
push
mov
loopne
jbe
popa
scas
in
pop
pop
cmp
jle
jmp
jmp
sub
jo
jmp
and
aad
fxch
shlb
pop
dec
add
sub
and
inc
add
xlat
xchg
shll
jae
pop
fdivr
mov
and
loopne
fs
jno
add
pop
aas
mov
jbe
jp
outsl
or
repnz
sbb
dec
xchg
mov
test
cltd
inc
test
das
fadds
jp
movsb
cmpsb
cmp
insl
dec
mov
add
cli
mov
mov
stc
icebp
es
test
add
mov
and
pop
dec
push
add
jecxz
dec
mov
sbb
xchg
imull
xor
pusha
cmpsl
add
testb
je
xlat
jne
xor
jnp
jbe
pop
pop
add
adcb
stc
add
sub
mov
inc
out
xchg
add
nop
dec
aaa
mov
xchg
sbb
jne
in
push
out
push
sbb
jns
sub
inc
ud2
test
inc
nop
sbb
fwait
add
sub
sbb
adc
sub
or
jp
sbb
movl
bound
push
scas
or
out
jno
das
mov
lods
popl
icebp
cmp
inc
mov
lret
mov
notl
fsubrs
cmc
push
lods
xor
mov
mov
sbb
pusha
jo
lock
jle
std
mov
add
sar
add
push
in
push
into
ja
addr16
inc
push
inc
data16
xchg
movsl
cmp
mov
clc
stos
pop
mov
mov
dec
fidivl
cmp
mov
lret
stc
add
add
sbbl
ret
xchg
stc
loopne
lret
frstor
loop
fsubs
jl
call
pop
sbbb
or
add
dec
notl
rcll
push
rcrl
arpl
pop
add
aam
xchg
fstps
negb
in
repnz
sbb
xchg
iret
lahf
mov
push
add
dec
jecxz
lods
enter
cmpsb
iret
scas
inc
leavew
push
mov
dec
cli
orb
xchg
pop
add
sub
adc
mov
inc
jno
mov
imul
ret
add
xor
pop
jae
loope
add
jno
mov
add
iret
mov
outsb
adc
jb
jle
add
inc
mov
xor
iret
inc
dec
cmp
cwtl
cwtl
xchg
adc
adc
int
iret
add
rorb
sbbl
call
xlat
push
fyl2xp1
xchg
enter
add
aam
sub
gs
add
cli
mov
dec
jae
inc
rol
leave
pop
push
ljmp
pushf
sub
int
gs
add
add
and
mov
repnz
rolb
cmpsb
adc
lods
sub
or
and
xor
stos
dec
stos
stos
adc
inc
lret
add
mov
mov
inc
lea
or
sbb
in
jle
dec
jne
add
cmp
push
shll
shll
mov
pop
xchg
jno
mov
rcrl
cwtl
or
inc
mov
pop
jg
and
pop
je
lea
add
pop
call
test
ficompl
nop
sbb
test
jns
add
cld
addr16
cmp
pop
xlat
add
pop
rcr
cmp
mov
lods
pop
call
cmp
out
dec
jb
or
movsl
repz
test
push
add
aaa
or
cmp
mov
aas
cld
clc
mov
imul
call
add
push
adcb
bound
or
cmp
push
xchg
movsb
lds
in
xchg
add
pop
push
loop
fs
std
fimull
mov
or
dec
test
mov
or
push
int3
ss
jl
add
icebp
adc
dec
pop
aaa
addl
daa
je
push
adc
sub
push
clc
out
mov
nop
sbb
popf
add
push
jnp
mov
dec
dec
insl
inc
and
leave
push
fs
dec
mov
add
pop
ja
js
push
pop
and
mov
stc
dec
push
add
in
fisttpll
pop
xor
dec
repnz
loopne
xlat
aam
adc
lds
add
add
mov
add
inc
or
xorb
pop
movsb
sub
push
shrb
lret
cmpsl
push
xor
xor
movsl
sub
sbbb
insb
mov
mov
push
pop
and
je
popa
les
cltd
cmp
add
inc
clc
dec
lods
sub
add
jne
leave
add
lea
dec
jp
sub
cmpsl
fsubrl
xchg
add
and
xchg
es
pop
fidivs
add
outsb
mov
stos
ret
mov
inc
shlb
or
mov
mov
dec
add
and
xchg
sub
loop
sub
jno
adcb
and
cltd
jle
test
mov
test
add
jl
mov
add
mov
ret
jb
loop
sub
adcb
ret
push
icebp
mov
ret
pop
xchg
data16
adc
les
clc
and
iret
push
mov
nop
and
cmp
lcall
inc
iret
pop
cmp
xchg
mov
push
mov
cmp
mov
add
sub
adc
leave
hlt
xchg
sti
or
fsubrl
add
mov
cmp
push
adc
add
fidivrs
enter
or
inc
and
adc
or
xor
aam
out
mov
into
ror
outsl
je
or
aad
in
lock
xor
fcmovnbe
bnd
pusha
mov
rorb
sahf
imul
mov
filds
mov
inc
jle
nopl
jecxz
add
bound
data16
dec
or
fistps
loope
fcomps
pop
mov
iret
lea
adc
xchg
pushf
ds
or
scas
pop
imul
in
cmp
add
in
popa
dec
mov
pop
push
lea
stos
shl
xchg
mov
sbb
xchg
jae
add
push
cmpb
adcl
das
sub
bound
in
out
add
cmpsl
xchg
jae
lock
jl
out
fcoms
jbe
out
dec
in
aam
jns
dec
jecxz
xchg
sbb
add
cmp
adc
add
aaa
push
sbb
das
sub
insl
sub
inc
iret
inc
stos
mov
rolb
xor
add
xchg
sti
dec
cmp
push
add
xor
test
mov
sahf
inc
jbe
lods
sbb
das
out
aad
lahf
mov
sub
cwtl
repnz
orb
scas
popl
xchg
dec
xlat
cmpsl
add
mov
add
cld
ljmp
add
xchg
je
movsl
rcrl
in
iret
stos
inc
add
mov
dec
mov
out
add
test
ficoml
das
pushf
push
add
xor
sub
sbb
movsl
inc
je
push
flds
in
and
mov
in
nop
incl
jmp
adc
mov
aaa
fdivs
out
nop
mov
sbb
sub
das
push
jnp
popf
shrl
pop
pop
xchg
push
loop
push
pusha
dec
test
xor
into
dec
sahf
inc
pusha
dec
jmp
pop
imul
jmp
add
jle
test
xchg
imul
pop
dec
leave
cmp
add
cmp
and
add
sbb
push
daa
pop
aas
mov
mov
ficoms
push
stos
xchg
sbb
push
push
pop
xchg
in
add
or
xor
or
fsts
push
out
add
in
dec
ja
imul
sub
mov
or
int3
sbb
push
and
mov
js
rorb
bound
mov
mov
or
add
ljmp
mov
stos
xchg
add
sbbb
add
jae
popf
sub
mov
addr16
sbb
lret
imul
movsl
xchg
test
or
loope
cmp
iret
inc
or
jo
add
ret
sub
mov
std
mov
add
push
push
pop
jge
aam
test
cwtl
adc
addb
inc
xor
sbb
jge
add
imul
les
test
loope,pt
aad
push
lock
test
push
nop
sbb
cmp
jns
ds
jne
int3
mov
cmp
push
outsl
pop
xchg
arpl
lods
adc
inc
test
jmp
pop
and
xchg
out
dec
pop
scas
addb
mov
mov
jecxz
mov
add
xchg
out
aad
jns
fnstsw
jecxz
mov
mov
insl
in
testb
add
push
js
ss
add
rorb
out
jbe
loop
loope
push
es
rol
stos
xchg
cmc
push
bound
push
andl
dec
dec
je
mov
adc
push
mov
cmp
lahf
pop
fidivs
xchg
or
push
jecxz
xor
add
xchg
adc
in
fimuls
test
adc
inc
pusha
popa
xchg
cld
iret
ds
xchg
loopne
shll
scas
cld
inc
bound
add
push
xor
or
sub
sbb
add
out
mov
pop
fbstp
rol
and
mov
fcom
loopne
insl
inc
in
call
int
clc
add
sub
fnstenv
nop
fstpl
mov
mov
cltd
pop
cltd
test
mov
cmpsl
inc
cwtl
or
insl
mov
mov
or
sub
jb
iret
add
cmpl
mov
popa
aaa
outsl
roll
out
das
lock
jge
or
fdiv
daa
sbb
test
std
xchg
add
repz
push
mov
mov
cmp
sbb
jbe
nop
or
fcmovbe
rol
movsl
pop
jge
push
imull
mov
das
jbe
add
dec
fnstsw
cltd
xor
xchg
pop
xchg
push
pop
mov
mul
dec
jp
push
data16
int
out
mov
in
fnstenv
xchg
jmp
dec
cmc
cwtl
loop
dec
xchg
aaa
fs
out
push
adc
movsl
adcb
std
and
ljmp
insl
sbb
loope
inc
xor
jmp
nop
jo
clc
dec
in
mov
add
jge
mov
xor
js
jp
decb
mov
or
stc
sbb
mov
mov
add
ja
mov
std
dec
or
fwait
dec
xor
xchg
cltd
mov
xor
clc
in
sbb
loopne
sbb
pop
pop
xchg
aas
inc
jmp
jecxz
mov
repz
test
shll
jns
outsl
pop
inc
sbb
fs
xchg
mov
sbb
add
pop
fstpl
cs
or
lcall
cmp
nop
jg
pop
jl
clc
mov
dec
repnz
sub
mov
das
inc
pop
pushf
or
lahf
cwtl
xor
mov
repnz
rcr
les
repz
out
jle
add
push
mov
out
mov
rorb
add
xchg
sbb
cwtl
pop
push
mov
ds
cld
cwtl
cs
dec
mov
sub
or
repnz
pop
ss
ficoml
mov
xor
sahf
pusha
push
push
fildl
pop
mov
ljmp
ljmp
icebp
mov
sub
add
ljmp
lahf
fidivs
fadds
mov
add
adcl
adc
cli
imul
cmp
mov
mov
inc
xchg
out
xchg
adc
lret
xchg
and
cli
mov
xchg
gs
call
jecxz
lods
mov
les
mov
push
ret
inc
gs
decb
sub
insl
shlb
arpl
pop
push
dec
add
lahf
inc
jl
cmp
inc
imul
data16
jno
js
ds
dec
inc
mov
ficomps
int
in
inc
lret
or
testl
jl
pop
in
sub
cmp
in
out
in
adcl
sbb
cmp
add
pop
insb
ret
sti
pop
add
xor
out
div
push
idivb
fs
adc
push
call
mov
add
dec
mov
flds
jmp
jecxz
jp
cmp
pusha
pandn
orb
xchg
xchg
lahf
sbb
add
shlb
ficompl
mov
sub
adc
test
dec
inc
imul
jae
adc
add
cmp
sbb
cld
jmp
pop
mov
xchg
jne
and
xor
nop
jp
notl
into
mov
push
pop
pop
leave
cmp
outsb
jp
gs
add
adcb
jle
in
dec
cwtl
gs
mov
test
and
lods
popf
or
adc
mov
mov
xchg
cmp
adc
mov
in
inc
shrl
addw
mov
push
sbb
xchg
aaa
xor
cld
sbbl
add
iret
sub
cs
sti
hlt
add
and
out
fisubl
pusha
ret
sti
push
test
add
cmp
sub
out
cltd
and
addr16
ja
mov
sbb
mov
rolb
jp
inc
subb
push
add
mov
xchg
ja
insl
fisttpll
cmp
roll
clc
jle
xchg
lods
sbbb
add
insb
leave
mov
popa
ret
push
and
dec
add
daa
jbe,pt
enter
add
add
and
pop
icebp
cmp
jnp
stos
subl
ss
mov
push
mov
xchg
lret
jb
add
lds
or
inc
sub
test
pop
icebp
inc
xor
ss
rcrl
xchg
sahf
rolb
rcrb
sbb
rcrl
loope
fnstsw
mov
cli
add
pusha
mov
loopne
in
jle
cmp
leave
adc
push
les
adc
jl
mov
aas
cld
or
mov
scas
les
add
add
out
jae
push
cmp
xor
out
mov
cwtl
push
mov
add
pop
test
adc
cmc
fldl
sarb
sahf
jp
sbb
stc
pop
vmovapd
stos
and
inc
push
xchg
enter
fildl
enter
mov
adc
mov
js
dec
pop
nop
cmpsb
pop
adc
and
cld
mov
repnz
push
rolb
mov
add
xlat
in
pop
xchg
aam
mov
mov
push
fildl
sbb
aaa
jg
pop
test
fidivs
es
add
in
adcl
inc
cmp
movsl
inc
lock
cwtl
shr
add
jge
rolb
or
adc
or
jnp
outsl
ret
mov
ljmp
pop
int3
add
or
pop
cmp
addb
pushl
cmc
jmp
subl
lods
and
jno
sub
mov
sbb
jb
xlat
dec
imul
shrb
and
add
in
rol
push
out
cmp
mov
cltd
inc
orl
mov
mov
inc
inc
and
es
push
mov
jl
lock
pop
pop
lods
xchg
cmp
test
push
cmpsl
push
sbb
out
mov
cs
add
add
pop
xlat
and
pop
adc
inc
dec
add
pusha
sub
shlb
aas
add
mov
mov
xchg
cmp
fs
shlb
xor
cmp
jmp
inc
sbb
pusha
push
fldl
jne
divb
add
das
inc
iret
mov
loope
adc
std
sub
xchg
inc
cmp
int3
inc
pop
jmp
cmp
jg
push
xchg
and
out
add
insb
dec
lock
pand
add
sbb
aam
into
mov
dec
and
hlt
sub
xor
fadds
in
mov
mov
sahf
cmp
push
dec
xlat
mov
je
gs
out
mov
das
pop
daa
stos
adcl
cltd
add
and
inc
mov
loop
cmp
push
jae
insl
outsb
mov
mov
jmp
stc
test
cld
data16
roll
aam
lods
jmp
das
mov
xor
fsubrs
repnz
pushf
cmp
sbb
or
add
mov
lcall
cmpsl
mov
jecxz
rorl
pop
loopne
mov
cmp
jno
cmp
sahf
sub
inc
and
jne
ret
sbb
jo
add
add
cld
xchg
add
mov
adc
loopne
pushf
js
add
fisttps
mov
rcl
loop
push
call
push
out
frstor
cmpxchg
shr
and
lods
mov
add
mov
xchg
shl
adc
xor
mov
movsb
lahf
test
pop
cmpsb
add
cmp
xor
scas
addl
lret
jmp
fstl
inc
mov
inc
cmp
mov
clc
cld
mov
push
dec
push
movsb
or
lds
test
mov
in
mov
inc
out
mov
mov
movsb
lret
scas
roll
push
adc
mov
test
jns
xor
inc
sub
xchg
push
sbbl
add
or
pop
aas
mov
add
cmp
and
pop
jb
add
sub
jno
xor
jle
inc
sub
dec
add
andb
iret
or
insb
xor
test
mov
inc
push
test
movsb
aam
cmpsl
rorb
lds
test
jb
adc
xchg
inc
add
jns
pop
loopne
jle
add
test
pop
adc
int
push
add
sub
xchg
cmp
sbbb
cmp
rolb
jbe
push
mov
and
dec
and
cltd
mov
mov
add
cmp
and
xlat
aad
or
mov
mov
cmp
add
call
int
and
jl
jg
mov
sahf
jo
sbb
or
and
stos
adcb
add
sub
xor
pop
pop
sbb
or
in
mov
mov
lcall
leave
addl
imul
mov
add
mov
out
inc
sbb
cmpsb
int3
and
fmuls
and
inc
pop
dec
pop
mov
jmp
push
adc
aas
test
and
hlt
mov
jl
in
mov
pop
and
cmp
add
sub
es
aaa
icebp
sbb
inc
xor
jo
cmp
or
outsb
push
add
adc
daa
outsl
lods
rorb
loopne
icebp
xor
ret
inc
dec
mov
jle
lcall
bound
and
bound
subb
sbb
orl
pushf
add
dec
sbb
mov
sbb
in
mov
sbb
mov
push
call
pushf
mov
scas
sub
aas
inc
dec
sbb
mov
adc
xchg
mov
xchg
xor
inc
dec
add
cmpsb
pop
daa
push
jecxz
and
sarl
add
push
sahf
and
sub
or
jo
fisttpll
add
dec
adc
dec
test
mov
xlat
push
stos
xchg
sub
fwait
or
int
xchg
lock
add
fcompl
mov
adc
inc
dec
and
add
jecxz
aaa
cmp
sarl
push
or
movsb
add
add
mov
add
mov
cltd
call
add
pop
cmp
sub
xchg
insb
mov
addb
sbb
pop
pop
fnstcw
enter
adc
jp
or
stos
enter
test
cmp
cmpsl
adc
pop
pop
xor
fwait
loopne
pusha
add
mov
cmp
les
ret
and
add
adc
js
pop
stos
ret
or
push
mov
adc
test
fisubrs
loope
or
je
pushf
add
mov
sub
and
mov
jo
sub
xchg
adcb
lods
or
fiaddl
inc
decb
dec
movsl
sti
adc
mov
push
cmpsl
or
adc
inc
adc
add
sbb
movsb
sub
push
xchg
xor
insb
adc
add
sarl
sub
andl
inc
inc
xchg
cld
cmp
cmp
test
outsb
or
outsb
adcb
pop
aas
sbb
out
jle
mov
push
test
dec
pop
xor
dec
adc
push
popf
int3
adc
je
add
gs
jb
add
adc
lahf
mov
lds
cmpb
or
and
popf
xchg
stos
pop
add
mov
sbb
repnz
xor
dec
pop
xchg
in
sbb
ficoml
jo
in
add
push
mov
fwait
pop
push
add
push
int
cwtl
lds
psubb
fbld
addl
pushf
sbb
es
shlb
in
jb
aam
arpl
adc
xor
and
negb
es
jb
rol
lods
test
aam
into
dec
jge
inc
outsl
add
aas
add
repz
jmp
repnz
or
xorl
cmp
andl
loop
lret
jns
sbbb
test
test
xchg
and
mov
add
push
add
sub
rolb
jae
mov
push
shll
mov
jge
and
xchg
jmp
movsb
roll
mov
adc
and
mov
pop
mov
dec
adc
inc
data16
movsl
in
mov
sahf
ds
cmp
enter
or
dec
mov
mov
dec
lret
mov
add
sbb
cmc
outsl
ficoms
xchg
mov
popa
mov
inc
push
mov
add
nop
stos
arpl
cmpb
test
dec
rcll
ds
bound
je
xor
roll
pop
push
out
fisttps
mov
cmp
mov
inc
stos
daa
dec
loopne
jns
adc
in
mov
aaa
sub
mov
inc
jecxz
out
push
or
add
addb
les
sti
xchg
push
fisubs
add
adc
out
and
xchg
test
sbb
xchg
popf
mov
inc
fsub
mov
push
push
pop
pop
inc
and
dec
jno
xchg
adc
sub
or
jbe
sbb
adc
dec
dec
dec
filds
repz
xchg
inc
cmc
ds
jb
outsl
fnstsw
daa
mov
imul
jo
fiadds
insb
into
fwait
popf
mov
sbb
mov
add
cmpsb
mov
add
hlt
sbb
push
das
mov
inc
add
pop
adc
dec
jmp
or
fsubs
dec
je
lahf
xor
dec
mov
mov
cwtl
lods
or
adc
stos
inc
push
xor
rcll
xchg
push
mov
sbb
lods
insb
outsb
xchg
lcall
mov
xchg
enter
js
sti
ljmp
test
ja
jecxz
je
cmp
shr
adc
scas
lds
add
dec
jno
mov
insl
addl
adc
and
rol
pop
sti
sub
and
movsb
sbb
shrb
dec
inc
loope
cld
jns
cltd
lcall
sub
stos
mov
jb
pop
fiaddl
dec
cltd
cmpsl
add
push
push
adc
mov
add
jg
lods
ret
add
mov
mov
cmpsl
icebp
add
push
add
pop
jno
and
push
cld
faddl
cmpsl
negb
clc
in
test
aad
pop
pusha
push
xor
mov
add
hlt
cmp
jg
out
iret
pop
mov
adc
cmpsl
daa
dec
cmp
les
sub
stc
sbb
or
dec
add
mov
jle
adc
shlb
lods
add
fwait
add
xchg
push
adc
test
stos
xchg
jge
xchg
push
add
xchg
add
outsl
rolb
movsb
add
out
adc
in
push
dec
int3
pop
mov
les
jae
lea
jecxz
inc
lcall
iret
mov
mov
push
ret
mov
imul
jmp
mov
add
scas
sbb
jge
add
lahf
add
adc
cmpsl
je
inc
sarb
in
push
loop
jno
stos
int
inc
and
lahf
xchg
out
push
sahf
or
adc
and
loopne
xchg
add
imul
add
jmp
sbb
jno
gs
jno
add
in
or
add
pop
pop
inc
sahf
pop
xchg
mov
cs
pop
mov
outsb
dec
adc
outsl
std
sbbb
hlt
add
adc
cmpsb
mov
and
les
xor
mov
imul
or
mov
pop
sarl
lret
jmp
add
loop
insb
addb
adc
jne
or
cld
cmp
fucomip
pop
jle
xchg
adc
add
cmp
fimuls
ljmp
sbb
aaa
xchg
inc
mov
shlb
add
repnz
dec
xchg
pop
push
xor
dec
adc
cmp
add
outsl
cld
add
push
cmp
dec
stos
mov
lods
mov
mov
add
cmpsb
sbb
pop
mov
xor
ror
lock
sti
pop
lods
add
push
xchg
and
adc
popa
jecxz
adc
fsts
and
arpl
and
add
sti
inc
push
cmpsl
cli
add
mov
or
and
pop
test
clgi
and
bound
cwtl
aad
xchg
bnd
mov
push
adcl
mov
xchg
jl
or
mov
sub
adc
or
pop
or
out
and
or
pop
mov
leave
jne
les
cmp
fiaddl
push
int3
xchg
xchg
push
inc
push
testb
sbb
idivl
out
loopne
add
push
jbe
inc
mov
aaa
add
push
xorb
pop
cmc
mov
std
imul
dec
adc
sub
adc
cmp
imul
fildl
aaa
fisttps
xchg
imul
popf
xchg
push
pop
mov
loope
or
or
pop
add
mov
jbe
adc
lock
mov
cmpsl
or
cwtl
repz
xor
popf
push
fwait
jnp
mov
movsb
testb
mov
cmp
imul
jl
outsb
movsb
and
pop
loopne
or
mov
daa
loop
enter
jno
fildl
mov
jl
sub
jb
popf
pop
ret
lock
inc
fisubrl
add
popf
push
add
sbb
mov
mov
in
daa
sbb
fidivs
out
xor
movsl
cmp
fwait
dec
add
je
add
cld
jp
movsb
pop
hlt
aam
inc
jbe
fsubrs
xor
dec
jae
pcmpeqb
nop
xchg
mov
add
mov
jle
add
sbb
add
outsb
loope
lahf
pushf
int3
sti
sub
inc
mov
push
js
xchg
mov
gs
sbb
push
bnd
scas
pop
clc
imul
pop
fiaddl
mov
and
inc
jno
add
clc
loopne
mov
cmpb
ret
outsb
fidivrs
pop
and
data16
movsl
es
sbb
and
incl
mov
aad
jbe
flds
cmp
xchg
cmp
daa
and
in
adc
stos
cmp
call
sbb
mov
dec
lods
hlt
ljmp
add
ret
inc
notl
mov
jno
jg
ret
in
mov
dec
les
add
inc
test
es
daa
or
or
xchg
mov
inc
push
dec
pop
int
jns
mov
call
fsubr
daa
add
mov
mov
jbe
outsb
faddl
mov
imul
add
push
mov
add
fidivrs
cld
decl
cltd
and
mov
into
pop
data16
and
mov
dec
cmpsl
loopne
lret
mov
mov
shlb
pop
inc
mov
xchg
xchg
inc
lds
inc
icebp
push
ret
out
stc
sub
loopne
out
repz
push
or
bswap
xor
std
add
xchg
push
and
int3
pop
add
mov
ficomps
into
add
stos
mov
out
dec
cmp
and
stc
mov
fnstsw
iret
cmp
cmp
adc
inc
js
jmp
mov
mov
cmc
scas
pop
mov
jo
cmp
cwtl
mov
inc
mov
cmpsl
div
fmul
loope
and
xor
ret
pop
arpl
out
test
add
sbb
mov
imul
mov
lods
push
xor
js
daa
pop
movsl
xchg
jp
pushf
in
out
fsubp
lret
std
cmp
pop
aas
movsb
nop
dec
arpl
cltd
sti
in
adc
mov
ljmp
imulb
inc
pop
or
mov
dec
xchg
js
jno
repnz
fisttpl
je
xchg
lock
out
mov
sbb
push
push
inc
push
pop
clc
sub
aas
pmovmskb
iret
rol
call
push
jl
adc
aaa
mov
lret
jmp
mov
pop
cld
aad
stc
in
lahf
mov
sbb
rorb
std
in
test
pop
movsb
mov
push
adc
loop
xchg
or
lret
cmp
cwtl
or
jo
push
xorb
jle
add
jmp
xrelease
jo
xchg
outsl
pop
jmp
mov
xchg
das
sub
mov
cmp
fnstcw
jp
add
and
pop
int3
cmpsl
sub
cmp
rcrb
jmp
pop
jg
xor
je
fimuls
pusha
out
jnp
mov
lret
aam
and
pop
int
imul
and
jo
inc
leave
pop
mov
adc
xor
sar
cwtl
xor
orl
xor
cmc
sub
sbb
push
cld
sbb
iret
xlat
adc
enter
inc
movb
mov
mov
roll
iret
lret
test
xchg
mov
add
or
pop
aas
jns
idivl
xor
int3
dec
jne
aam
nop
mov
es
fwait
cmp
pop
mulb
fimuls
xor
scas
ret
in
stc
sbb
ss
push
repnz
jae
mov
hlt
stos
mov
mov
iret
repz
xchg
call
scas
aas
dec
pop
add
inc
cwtl
inc
insb
sahf
mov
pop
push
sbb
cs
das
jl
hlt
stc
lods
add
inc
push
repz
add
inc
ret
inc
iret
pop
jbe
and
lods
scas
inc
js
sub
jg
icebp
adc
out
push
xchg
pushf
or
jecxz
std
cmpb
push
test
add
dec
mov
shlb
shll
stos
leave
jae
cld
ret
add
jle
push
jmp
sub
pop
hlt
in
add
jne
fcomps
idivb
and
lea
add
fildl
cli
adc
dec
lods
in
sahf
je
add
mov
sahf
pop
cmpsl
arpl
adc
mov
rcr
and
shll
cmp
mov
jne
mov
les
fsubl
add
je
pusha
aaa
jo
fiaddl
add
dec
loope
add
mov
cli
fs
sub
jecxz
dec
dec
sar
pop
push
push
or
in
inc
pusha
dec
pop
dec
in
push
std
xabort
sub
mov
inc
loop
add
arpl
out
test
inc
lock
mov
push
mov
movsl
or
sbb
lret
aam
popa
jmp
and
jmp
mov
pop
testl
mov
pop
fcoms
pop
sbb
inc
jns
dec
xor
cmpsb
push
mov
adc
push
pop
sbb
stos
add
jle
rcll
popa
je
sub
sub
add
int3
aad
clc
push
ds
mov
add
mov
add
fdivrp
lods
mov
and
repz
aam
jge
aam
push
mov
sub
fidivrs
in
fldt
add
adc
insl
push
dec
ja
sbb
ror
scas
jnp
and
in
mov
lock
addr16
sub
ss
aam
inc
repnz
or
repnz
add
add
sub
pop
push
fwait
sti
aaa
outsl
xor
jg
nopl
xor
mov
add
imull
mov
push
int3
sbbb
das
fistps
stc
add
decb
pop
repz
sbb
gs
or
inc
cmpsb
lahf
stc
add
pop
add
movsb
imul
and
mov
mov
inc
cmovle
cmpsw
and
adc
negl
push
and
and
sub
add
sbb
aaa
jno
or
repnz
out
or
lret
sarb
cwtl
or
push
shlb
add
pusha
push
sub
lods
adc
test
sar
popf
enter
sbb
jne
shlb
add
dec
or
jp,pt
rorb
inc
nop
xchg
xor
xor
ret
cwtl
in
aad
jl
clc
fmul
pop
jecxz
adc
xor
xchg
popa
insl
mov
in
pop
sub
lods
mov
push
or
push
and
repnz
lret
and
mov
add
sub
xchg
movsl
cmp
jp
ljmp
pop
loopne
jbe
jmp
pop
movsb
lds
int3
test
pminub
xchg
shll
imul
xchg
out
sub
gs
add
dec
add
mov
xchg
imul
cmpsl
adc
add
les
pop
fwait
pop
cmp
cmp
adc
in
pop
aaa
fwait
sar
addb
rcrb
push
addb
rclb
push
dec
add
cmc
mov
dec
adc
inc
enter
adc
push
lods
push
adc
jno
add
inc
imul
sub
add
in
out
fldt
in
mov
jg
xchg
add
cs
jns
dec
mov
rolb
lods
sub
test
cs
mov
mov
push
mov
add
test
add
cwtl
xchg
push
ficompl
ss
fdivrl
notb
xchg
push
inc
xorb
sub
add
sub
lret
addb
popl
mov
pushf
sarb
fiaddl
ret
mov
mov
cmc
and
fwait
mov
mov
pop
int
loop
sub
repnz
ret
cs
mov
mov
add
sbb
pop
jae
add
adc
sub
jmp
loopne
mov
push
sbbb
inc
loop
push
xor
fdivs
add
scas
les
adc
sbb
sbb
clc
loop
or
jg
fsts
int3
fildl
push
loope
jns
jmp
das
mov
add
rclb
push
add
or
pop
sbb
sbb
popf
test
rcl
ds
nop
jl
or
cmp
shl
inc
add
je
dec
test
lahf
pop
pop
jl
scas
iret
add
or
cmpl
sahf
cmp
mov
push
inc
xor
test
addr16
subb
inc
dec
loopne
hlt
punpcklwd
dec
mov
sub
mov
sarb
popa
into
shrb
fwait
lods
jp
add
std
cld
jns
in
and
add
pop
jg
test
jb
add
cmp
dec
cs
inc
add
adc
test
push
jge
push
insl
lods
pop
mov
and
mov
pop
mov
inc
shlb
repnz
addl
mov
jo
insl
push
iret
add
cld
sbb
imul
orb
add
mov
mov
add
call
out
push
ljmp
fs
push
popa
int
add
pop
pop
add
mov
push
add
lds
jnp
icebp
idivb
and
mov
pusha
xor
mov
add
outsl
inc
or
mov
cmp
add
cmp
jecxz
inc
pop
js
xlat
hlt
movl
ja
icebp
mov
jo
sub
insb
xchg
jg
pusha
mov
nop
add
repz
or
jmp
adc
loope
mov
lods
mov
or
gs
cmpb
add
mov
rcr
cmp
movsb
imul
sbb
sub
mov
call
add
mov
into
xor
add
addb
add
push
xlat
testb
xor
sti
jp
lds
dec
es
add
outsl
xchg
data16
or
ds
mov
xor
lds
dec
mov
aaa
gs
nop
add
and
push
int
mov
sub
xor
call
xchg
xchg
int
mov
lea
sar
pop
or
cmc
add
and
xchg
pop
push
adc
mov
or
pushf
add
cmp
ja
fadd
insl
out
or
adc
cwtl
and
lods
jg
icebp
aam
dec
or
mov
pop
push
mov
mov
subb
mov
adc
jo
mov
mov
loope
add
push
push
cmp
out
add
pop
mov
test
popa
fimuls
aas
sub
mov
int3
add
in
add
das
lods
jl
out
dec
mov
mov
shrl
pop
push
loope
and
dec
fwait
add
lods
in
push
or
adc
shl
out
lahf
adc
xchg
and
mov
cmp
add
enter
insb
movsb
andl
sbb
out
and
adc
push
pop
mov
shlb
fiaddl
dec
loopne
stc
addr16
inc
xor
das
add
cmp
cld
push
enter
or
pop
mov
fcompl
pop
adc
mov
inc
mov
adc
add
sub
cmp
add
add
int
jp
mov
ror
lock
pop
cmpsl
inc
sbb
out
orl
pop
sub
push
xlat
cs
in
xchg
cmp
popa
push
fsubrs
hlt
or
data16
cmp
mov
xchg
jle,pt
sbb
outsb
dec
and
loope
and
mov
mov
ljmp
das
push
ret
aam
popa
sbb
push
cwtl
pusha
sbb
fdivl
hlt
jmp
add
into
nop
add
xor
insl
cmp
or
xlat
repnz
jae
movsl
lahf
orb
lret
or
or
hlt
outsl
jbe
xchg
sbb
adc
add
jns
push
into
icebp
dec
mov
push
lods
subl
pop
mov
and
inc
push
cs
int
loopne
adc
mov
std
mov
loope
add
cmp
int3
jno
mov
in
push
fstpl
xor
add
movsl
push
mov
and
push
mov
xor
push
cmp
xlat
cmp
add
faddp
fistpll
sub
dec
pop
jns
aam
add
sbb
sub
into
mov
testb
js
push
inc
out
nop
pop
mov
cmp
and
or
insl
pop
mov
lods
add
xchg
rcr
sbb
stos
add
pushf
movsl
fidivl
scas
fstl
pop
add
outsb
and
pop
jnp
dec
sahf
ret
add
test
jl
add
cmp
inc
jg
adcb
sbb
sarl
add
rclb
movsb
mov
cwtl
leave
mov
bound
mov
inc
and
add
push
pop
xor
inc
push
adc
add
mov
dec
das
push
xor
and
and
lret
dec
or
lcall
lock
push
dec
repnz
add
cmp
cmc
loope
push
lahf
or
les
out
fidivrl
rcll
pop
xchg
shl
jmp
jp
je
test
jns
mov
mov
jae
add
push
mov
mov
mov
imulb
mov
mov
sub
jae
push
insl
pop
fmuls
sbb
sbb
std
inc
and
add
roll
repz
into
stos
faddl
add
push
clc
push
idivb
or
inc
adc
jmp
out
sar
pop
scas
adc
add
jno
push
mov
lea
cmc
jo
mov
add
jns
js
cmp
loope
addl
jnp
ja
pop
dec
add
add
cld
psubq
xchg
xor
sub
out
sbb
pop
insl
fstpt
xorl
imul
imul
mov
jl
notb
test
repz
inc
sti
hlt
push
or
mov
add
ljmp
mov
add
pop
mov
js
push
add
icebp
sub
or
jbe
pusha
imull
jl
jnp
and
dec
orl
stc
loop
dec
add
and
mov
enter
and
in
add
sbb
addl
jl
and
cmpsl
add
mov
ljmp
js
jmp
in
fnstcw
cmp
cwtl
gs
out
ja
add
mov
sub
add
shll
leave
xor
in
adc
les
xchg
enter
sbb
popa
jae
and
inc
jecxz
or
mov
movsb
add
andb
verw
push
into
testb
pusha
pop
mov
cmc
dec
icebp
add
sub
jecxz
mov
inc
leave
cmpsl
cmpsb
add
mov
xchg
or
add
mov
add
stc
pusha
loop
aas
popa
or
and
rcrb
popf
loop
outsl
mov
dec
add
jbe
iret
jp
add
mov
cmp
subl
rcrl
jecxz
addl
outsb
jmp
movl
in
fdivs
addr16
add
mov
rolb
cmp
aad
jp
ds
and
mov
into
mov
imul
lods
cmp
movsb
jne
dec
or
int
scas
cmp
add
cmp
add
in
orb
les
pop
xor
test
add
pop
lods
pop
add
pop
add
lcall
jbe
add
adc
xlat
add
fildll
adc
jns
lock
std
clc
out
add
cmp
mov
sub
adc
push
out
in
mov
add
or
in
dec
lods
inc
inc
fwait
xchg
add
pop
mov
scas
cli
cmp
es
div
int3
inc
scas
into
add
mov
dec
rol
mov
and
push
ja
mov
adc
cmpsl
loopne
mov
xchg
xchg
ret
mov
mov
pop
push
jecxz
push
loop
incb
inc
imul
pop
mov
adc
jmp
je
rcr
mov
in
pop
icebp
sbb
pop
pop
fcmovnu
subb
add
adc
xor
addr16
insb
pusha
add
shll
xchg
add
loopne
cltd
mov
jle
push
push
xchg
adc
lds
push
xor
test
mov
mov
in
mov
arpl
adc
cmp
jmp
push
bound
cmp
rorb
fwait
mov
add
push
loope
inc
pop
gs
sbb
pop
cmp
adcb
repnz
mov
call
xor
lds
lea
jl
push
cmpsb
cmc
movb
mov
int
mov
icebp
add
movsl
mov
xchg
cmp
cmp
fnstsw
xor
cmpsl
add
mov
in
jg
mov
mov
or
andb
sub
popa
lahf
jo
push
cmpl
stc
jae
push
scas
sub
daa
and
js
mov
lods
int3
adc
stos
out
add
loop
nop
push
iret
add
lahf
xchg
fldl
jno
cmp
popf
mov
adc
lea
pop
mov
inc
scas
rol
and
es
dec
mov
xor
pop
sbb
fisubs
scas
jge
cmpsb
lods
dec
xor
add
lds
hlt
xchg
or
inc
std
add
dec
int
dec
xchg
jnp
or
pop
adc
inc
lea
or
adc
xor
inc
outsb
cmp
sbb
aas
lret
in
in
jo
movsb
xchg
scas
push
frstor
or
sub
inc
mov
pop
push
add
movsl
jae
dec
fsubrl
loop
jne
push
ljmp
adcl
or
mov
add
mov
mov
pop
leave
sub
mov
pusha
dec
lret
xor
mov
xor
in
lret
inc
mov
fs
in
mov
inc
dec
sbb
roll
or
notl
sub
stc
scas
fistpll
andl
scas
loopne
loop
clc
and
jecxz
add
add
lods
adcb
push
ret
jnp
add
adc
movsl
xchg
jo
add
je
pop
sub
push
subb
cmp
mov
add
lods
mov
and
xor
adc
loop
add
and
popf
je
pop
loopne
clc
mov
add
or
xor
fdivrl
pop
add
popa
and
jb
int3
mov
add
lock
push
and
clc
sti
testl
in
js
or
and
pop
subb
subb
mov
pop
jle
add
mov
sbb
rol
stos
jo
push
frstor
push
scas
in
add
mov
imul
add
mov
and
add
sbb
sbb
jb,pt
aaa
fimuls
xor
fildl
pop
daa
mov
ljmp
pop
insb
hlt
add
and
adc
popf
xorb
mov
stos
sbb
nop
sbb
cmc
sbb
fsubl
push
jns
and
lds
cltd
jnp,pn
mov
mov
fimull
into
add
pushf
xor
dec
mov
add
enter
cmpb
cs
es
pop
pop
sbb
enter
fnstcw
je
orb
jle
add
cld
addr16
pop
add
mov
jo
add
push
hlt
aam
adc
push
faddl
push
roll
pop
cmpl
aam
lock
or
xorb
jno
incb
out
jecxz
inc
push
pop
mov
or
jb
push
rclb
xchg
add
mov
xor
push
incb
loop
mov
repnz
mov
sbb
sbb
cwtl
loopne
dec
sbb
lahf
and
jae
loopne
fnstcw
jno
push
xchg
add
mov
mov
ljmp
ss
sti
rolb
std
movsl
mov
mov
out
push
bound
cmp
addr16
out
mov
add
mov
fsubs
jb
pop
push
xchg
pxor
loop
cmp
xchg
pop
add
mov
call
xor
aad
pusha
lods
xor
sarb
jae
or
pop
adcb
mov
shrl
jo
sub
cs
mov
cmp
mov
push
fidivrl
aaa
adc
xchg
push
inc
es
or
jo
and
pushf
mov
sub
pop
into
ss
lds
push
mov
mov
lret
aaa
notb
lahf
add
push
sahf
js
xor
repnz
pop
addb
out
adc
cmp
mov
sub
sbb
and
adc
orb
fdivl
pop
sti
add
insl
scas
sub
add
sub
cmpps
sbb
add
pop
andb
mov
stc
enterw
adc
shrb
push
imul
and
outsb
sub
jmp
add
jle
call
xor
ja
pop
pop
adcb
cmp
sub
add
mov
dec
adc
js
add
loopne
loopne
mov
scas
sub
scas
dec
das
clc
imul
std
dec
out
aas
out
pop
js
lods
mov
icebp
roll
mov
xchg
sbb
and
add
pop
inc
add
out
cmp
lods
scas
add
enter
sub
pop
mov
add
push
sbb
cmp
fadds
pop
pop
xchg
lahf
cld
xchg
shlb
fcomps
fnstsw
sbb
icebp
ljmp
mov
fstl
mov
bound
aas
mov
mov
notb
inc
jle
pop
sub
sti
fcomps
sti
aad
insb
cld
jb
pop
es
add
xchg
jmp
xchg
mov
mov
mov
roll
scas
add
iret
imul
jge
popf
xchg
push
pop
cld
ret
rolb
lock
fbstp
rclb
add
sbb
pop
int
mov
xor
add
dec
pop
movsl
ljmp
or
mov
scas
je
les
jle
imul
pop
in
neg
jae
int3
mov
xchg
inc
pop
aad
loop
xchg
inc
mov
pusha
jle
outsl
lcall
lock
jge
pop
popa
or
fisubrl
in
fists
push
test
shrl
inc
mov
jno
adcl
nop
sbb
jl
inc
cmp
sbb
mull
outsb
pop
addr16
lret
xor
pushf
add
in
pop
ret
stos
mov
dec
aas
repz
sti
mov
mov
mov
mov
loopne
rcrb
dec
xchg
mov
roll
add
xchg
loopne
cmp
repnz
push
lock
leave
jnp
mov
daa
fiaddl
nop
xchg
outsl
and
add
fldenv
mov
add
inc
and
das
or
shlb
xchg
jecxz
and
and
jmp
pop
pop
sub
adc
pop
sub
add
adc
add
mov
imul
pop
cmp
add
jp
push
rorb
push
hlt
fnstenv
add
popa
xor
mov
pop
push
pop
xchg
add
cmp
mov
ja
pop
dec
xor
and
push
mov
test
lock
nop
cltd
pop
arpl
sbb
ret
sbb
mov
repz
fwait
cmpsl
rolb
sub
pop
jl
sub
mov
testl
sbb
cs
out
insl
jp
repz
nop
adc
in
mov
and
pop
cmp
sbb
push
xchg
xor
cmp
int
cmp
pusha
add
jns
push
je
cmpsb
cltd
mov
sub
mov
dec
xchg
xorl
incb
lods
ja
add
int3
test
jp
rclb
push
mov
jecxz
pop
enter
xchg
loope
xchg
xor
cwtl
icebp
adc
ror
pop
add
sub
rolb
lea
or
fisubrl
mov
cltd
adc
jle
add
push
sar
push
stc
fmull
pop
sbbb
shl
add
push
sub
mov
add
dec
ljmp
cli
mov
or
pushf
fildll
lock
dec
inc
and
jne
vrsqrt28pd
sub
mov
lock
push
or
add
mov
jg
repz
pop
sub
lret
pop
sbb
jo
mov
mov
mov
in
dec
mov
add
das
pop
jno
and
add
or
add
sub
mov
cmp
inc
rorb
aam
in
sub
pop
in
adc
add
add
std
sub
iret
sub
mov
adc
xchg
inc
mov
or
hlt
jl
ljmp
push
sbbb
jo
dec
in
xchg
rclb
pop
outsb
not
add
je
jmp
test
faddl
pusha
or
imul
insl
outsl
jns
scas
fiaddl
in
out
push
mov
gs
int3
shll
sbbb
adc
in
pop
and
add
sti
pop
mov
mov
add
add
push
je
sbb
lock
in
movsl
sbb
mov
cmp
xor
leave
bound
push
push
daa
push
ret
fistps
andl
add
pop
or
or
cmpsl
xor
pusha
lods
pop
dec
jne
shl
adc
add
jne
xor
cltd
add
jae
stos
push
jb
ret
mov
pop
xor
popf
add
les
push
mov
xchg
sub
addr16
outsl
testl
popf
test
adcl
pop
lret
pop
pop
pop
mov
insl
mov
cmp
inc
push
and
push
push
fsubrs
out
mov
pushf
stc
add
xchg
icebp
mov
cwtl
mov
lods
adcl
out
sub
fnstcw
and
add
or
pop
and
xor
out
xlat
pop
pop
cmpps
xchg
sub
mov
aam
out
dec
imul
aas
add
cltd
filds
out
xor
jne
xchg
mov
sub
add
movsb
movsb
fidivs
sub
sub
sub
push
jp
fdivrp
pusha
loope
pop
lret
cmp
mov
outsb
push
call
dec
pop
and
pslld
cmc
add
out
xor
into
scas
sub
out
add
jle
sbb
sbb
hlt
aaa
mov
push
push
cs
icebp
add
sbb
xchg
repnz
pop
imul
dec
je
or
fldl2t
sub
test
fmull
or
inc
movsl
push
in
lea
jne
mov
orl
lret
mov
loopne
adc
mov
mov
pop
push
in
xor
mov
cmp
loopne
repz
pop
dec
jp
jle
dec
add
imul
inc
mov
je
mov
repz
lea
push
push
insl
loopne
into
xor
dec
lock
sbb
pop
andl
stc
jle
add
lock
aas
jmp
mov
and
cwtl
mov
pop
hlt
decb
jbe
mov
aaa
mov
mov
dec
scas
rcrb
sti
dec
sbb
sub
ds
xchg
jecxz
add
pushf
jne
jge
mov
fcoms
lcall
inc
movsb
add
js
xor
les
add
test
div
pop
add
or
cli
jo
xor
jmp
and
scas
fildl
clc
add
jp
fs
dec
es
jno
mov
cltd
cmp
sub
lock
add
sub
adcb
xchg
hlt
ja
inc
push
xor
adcb
pop
jnp
loopne
and
jbe
fbstp
add
shrb
push
loop
lret
iret
scas
in
out
and
push
mov
jne
jp
pop
scas
call
push
pop
sbb
ja
add
push
scas
mov
cmp
xor
clc
pop
and
xor
subb
inc
ret
add
imul
mov
pushl
pusha
loopne
mov
adc
push
test
mov
inc
enter
add
aad
cmp
mov
pop
je
sub
cmp
cli
pop
add
mov
fwait
add
outsb
pop
shll
adc
fiaddl
mov
cmp
push
xor
addb
js
add
popl
add
push
stc
mov
std
lret
add
sbb
mov
aam
adc
sub
fs
or
xchg
mov
mov
test
nop
add
int
jnp
je
insb
outsb
outsl
add
movl
cmpsb
cmpl
sub
repnz
cltd
aaa
pop
pushf
lret
inc
ss
push
rclb
jl
cli
add
sub
pop
mov
repnz
inc
jge
jmp
ret
add
jb
add
arpl
loope
les
sbb
pop
inc
insl
adc
push
fmuls
add
and
xchg
xorb
loop
sbbl
push
shll
or
sbb
xchg
mov
xor
les
cld
jne
les
xchg
cs
dec
cmp
pop
imul
movsl
fcmovb
jns
mov
pop
popa
jne
test
movsb
add
test
mov
mov
xor
xchg
orl
sbb
add
or
xchg
xchg
lods
jno
pop
jmp
das
push
jbe
adc
jo
paddb
pop
add
pop
jmp
xchg
push
xchg
fisubrs
in
and
loop
lret
add
sbb
repnz
aam
mov
dec
dec
xor
clc
mov
mov
cmpsb
shrl
push
pop
adc
and
aad
lea
jmp
loope
mov
cmp
pop
sbb
pop
out
mov
aas
add
ljmp
add
mov
loop
pusha
jnp
add
lods
sbb
lret
mov
hlt
and
and
jae
add
sti
inc
popl
mov
addb
mov
xor
cmp
cmp
stc
inc
push
fbld
add
ss
and
inc
pop
ja
jnp
add
inc
out
lea
stc
add
icebp
xchg
dec
mov
dec
sub
add
xchg
pop
dec
cmp
jmp
xor
cmp
data16
movsb
testl
add
cmp
adcb
push
add
dec
inc
cmc
and
icebp
rcrl
or
xchg
subl
add
cmp
push
gs
pusha
into
jl
adc
sub
jbe
je
mov
jmp
sbb
popf
addl
adc
std
pop
jnp
sbb
mov
pop
mov
add
clc
mov
add
mov
cmp
cmp
adc
aaa
mov
in
hlt
push
test
mov
mov
or
dec
sbb
loopne
shl
mov
push
push
add
push
nop
add
lods
fwait
push
add
mov
xor
jo
lcall
add
lahf
sbb
push
push
icebp
mov
lock
dec
jecxz
lahf
cmp
test
mov
mov
imul
jb
push
fdivp
xchg
and
pusha
mov
sahf
adc
dec
fcmovbe
xlat
mov
pop
addr16
mov
dec
test
into
pop
jp
sub
negl
adc
push
lock
cli
jae
cmp
clc
mov
sbb
mov
pop
mov
sbbl
add
inc
mov
mov
sbb
fidivrs
mov
jle
test
ds
test
cmc
cmpsb
lea
stos
dec
addr16
lcall
xchg
push
mov
mov
xor
add
sbb
mov
stos
dec
roll
nop
aaa
mov
or
push
andb
xor
push
xlat
or
mov
lods
fldl
inc
cwtl
jmp
jmp
add
js
stc
pop
out
jg
inc
cmpb
ds
jns
repnz
icebp
xchg
push
pop
xor
dec
jb
inc
dec
cmpl
mov
push
xor
ret
sbb
cmpsl
incl
mov
pop
cmp
rorl
mov
sbb
jbe
add
enter
and
add
and
mov
or
add
sahf
xchg
cmpsb
jnp
ja
dec
and
add
test
xor
add
icebp
addl
inc
nop
loopne
jge
add
sub
add
or
insb
cmp
add
pop
and
call
cmp
cmpb
fisttps
repnz
out
sub
cmp
stos
xor
mov
add
movsl
xlat
pop
jnp
in
push
jp
add
sbb
lods
loop
pusha
jo
mov
fiaddl
pop
jg
sbb
push
sub
add
mov
or
push
js
push
ljmp
or
add
cld
call
or
or
cmp
fsubs
mov
stos
adc
idivb
mov
in
enter
cmp
add
push
popf
and
insb
adc
rolb
mov
popa
pop
loope
movsl
xchg
ret
dec
mov
push
adc
add
xchg
or
push
xchg
outsb
pop
rolb
shl
notb
xor
inc
and
movb
dec
roll
xchg
jle
add
test
cmpsb
cmp
fcompl
cltd
jne
cmp
arpl
pushf
xlat
repnz
jns
sbbl
sti
das
pop
mov
dec
sub
jo
xchg
xchg
or
fadds
push
cli
inc
jg
pop
fists
shrl
pushf
mov
adc
arpl
mov
inc
or
mov
inc
in
subb
aas
inc
sbbl
mov
and
jge
xor
jbe
add
std
mov
loope
andb
jge
in
mov
sub
add
in
mov
rol
out
cs
cmpsb
add
lds
cltd
and
push
in
imul
ds
add
out
push
or
push
int3
outsb
rorb
mov
idivb
sahf
dec
arpl
or
jns
lret
or
push
call
mov
filds
pop
mov
aas
repz
sub
mov
or
jno
cltd
in
inc
hlt
ret
test
sub
cld
daa
push
mov
cld
mov
cmp
or
jbe
movsb
or
cmp
push
cmp
fcomps
jb
cmp
mov
gs
add
cmp
push
sbb
add
fs
mov
pop
arpl
sub
xchg
xor
pop
and
clc
xchg
jle
ja
and
dec
push
inc
xchg
dec
mov
das
cld
clc
ficompl
icebp
sti
jg
aaa
ds
lds
pop
add
fadds
jg
adc
fcoml
add
inc
adc
add
and
inc
mov
lds
add
cltd
daa
adc
nop
outsb
addb
dec
mov
sbb
insl
cmpl
adc
xor
or
mov
pop
jle
add
xlat
jb
cmp
test
dec
sahf
add
and
imul
hlt
fsubl
aas
mov
outsl
sti
sar
icebp
imul
in
ret
std
add
lahf
insb
scas
aas
sbb
test
cli
lock
push
push
std
adcb
leave
dec
inc
pop
notb
iret
mov
fstps
out
je
pop
xor
or
ret
out
mov
add
xchg
jmp
jmp
add
hlt
cwtl
test
or
loop
add
fdivl
jp
negb
jae
mov
xor
cld
adc
hlt
out
mov
mov
jg
in
mov
inc
loop
push
test
rcll
mov
inc
sub
stc
push
mov
sti
lods
jp
cltd
xorl
mov
fucomp
mov
loope
nop
mov
stos
cmpps
scas
push
add
cwtl
jge
or
mov
cli
add
sub
push
and
je
mov
add
inc
vpmacsww
jae
aaa
add
pushf
fisubrl
stos
cmp
lods
push
pop
test
ss
repnz
inc
and
add
insb
jge
push
out
add
mov
sbb
pop
rorb
mov
movsb
cmp
leave
or
cmp
js
aad
dec
scas
add
jp
jnp
add
scas
movsl
mov
aad
ljmp
ja
roll
stc
out
jg
idivl
fldt
loope
fdivrp
psubsb
jle
add
lahf
push
aas
call
dec
dec
sbb
pop
or
adc
pop
insl
insb
orl
mov
rol
inc
addb
push
pusha
xor
xchg
mov
or
fsubr
jg
popa
mov
pop
jae
and
add
fimuls
add
or
mov
aad
ret
movb
leave
mov
sbb
inc
pushf
push
in
cmp
and
scas
push
insb
inc
aas
stos
pop
mov
cltd
dec
add
mov
jg
add
clc
clc
ficomps
add
movsl
push
scas
mov
out
decl
sarl
sti
fbld
std
cli
adc
in
push
jmp
mov
das
jg
cltd
pop
add
xor
ja
jge
pop
cld
test
addb
sub
fucom
dec
iret
aaa
mov
daa
add
lahf
mov
fdivr
add
pop
cmpsl
inc
cmc
jge
cmc
fcomp
push
xchg
cmp
lds
addr16
push
push
stc
mov
and
jns
mov
add
xchg
scas
inc
jmp
mov
cwtl
jno
add
xor
mov
imul
ja
fwait
xchg
inc
nop
xchg
pusha
inc
dec
stos
popl
test
orl
aaa
mov
pop
repz
std
sbbl
clc
mov
ret
inc
push
movntq
ds
add
cmp
nop
push
add
xchg
lret
fisubl
add
cmp
mov
jne
pop
pop
test
clc
filds
insb
or
inc
cmp
sub
pop
movsb
imul
jno
aas
mov
icebp
pop
out
repz
stc
mov
mov
mov
orb
aas
pusha
aaa
loopne
mov
mov
push
stos
subl
shl
mov
adc
lock
es
adc
ret
push
in
push
add
push
imul
or
inc
aas
dec
hlt
mov
pop
faddl
mov
lcall
mov
imulb
mov
filds
pop
movsl
dec
cmp
out
push
sub
aas
add
jg
aad
dec
dec
aaa
dec
insb
or
ret
mov
loope
mov
and
sbb
add
push
sub
jnp
add
dec
into
mov
xor
pop
mov
mov
fadds
aaa
out
rcrl
daa
sbb
jl
cli
adc
mov
fidivrl
adc
mov
inc
adc
or
jno
movsb
cwtl
push
mov
sub
aam
cld
imul
cmp
xchg
cmpsl
xlat
out
xor
repnz
pop
push
stos
pop
mov
mov
xor
push
add
ret
push
in
lds
adc
arpl
ret
dec
adc
push
push
mov
push
int
shrb
mov
mov
fsub
ja
push
or
mov
add
push
mov
dec
jbe
add
add
aad
fdivp
mov
add
orl
pop
xchg
int3
rcrb
jmp
mov
clc
out
inc
add
jo
push
daa
add
pushf
add
dec
ret
outsl
adc
or
ficoml
and
cli
inc
mov
ret
idivb
cmp
jb
and
add
pusha
mov
cld
negl
xchg
orb
cmp
mov
or
shl
std
jge
push
outsb
rol
inc
cli
frstpm(287
mov
xchg
test
lock
outsl
mov
ljmp
iret
lock
cmpsl
xlat
pusha
jmp
cld
rolb
cmp
lods
imul
stc
into
cmc
mov
mull
outsl
add
xchg
das
sbb
jno
push
decl
ja
mov
lods
jns
add
popf
in
iret
mov
imul
test
divb
add
mov
pop
jmp
xlat
xor
pop
bound
mov
mov
daa
sarb
pop
mov
adc
repnz
pop
shll
clc
test
fstps
hlt
add
lret
xchg
xchg
pop
mov
outsb
add
out
gs
cmp
add
jmp
je
in
sub
pop
repz
ffree
addr16
jae
stc
shlb
andnps
push
add
jmp
xor
xchg
outsl
jbe
pop
ja
loopne
cmp
push
sub
test
add
push
fbstp
jnp
mov
outsl
lods
jne
ss
cwtl
jle
aaa
mov
sarb
pop
mov
jo
jp
add
shll
inc
in
jae
pusha
addr16
in
jne
ss
imul
dec
adc
hlt
sub
iret
sub
aas
jmp
add
lods
idivb
into
ljmp
subb
mov
or
insl
jne
decb
dec
aam
sti
add
ljmp
mov
sbb
mov
loopne
mov
sub
jnp
add
pop
pushf
inc
jg
add
fsubrp
mov
mov
lahf
sahf
sub
cmp
je
sbb
xchg
xor
ret
xchg
jne
dec
imul
and
repz
lods
or
cmpsb
add
add
mull
cld
movsb
faddp
mov
call
mov
into
cli
jp
inc
out
add
mov
aam
pop
imul
std
cmpsl
test
mov
sub
insb
out
subl
aaa
dec
loop
mov
pop
add
adc
in
jbe
div
idiv
add
movsl
cmc
popf
cmp
cmp
js
pop
mov
add
sahf
out
sbb
lret
das
fidivrs
or
inc
cltd
sbb
adc
clc
imul
icebp
aad
test
arpl
jle
cmc
ja
jp
fdivs
add
dec
bound
mov
adc
gs
xchg
and
mov
add
mov
inc
sbb
mov
and
sub
test
adc
jno
add
cld
mov
mov
inc
xchg
sbb
stc
ret
test
inc
cli
pop
add
fs
sub
or
pop
and
insb
shld
push
fucomi
test
ds
into
aas
loop
std
ror
stos
jl
add
fs
mov
sbb
fdivrp
clc
xchg
cmp
add
fwait
insb
pop
push
push
ds
fildl
jno
add
sub
outsl
int
cld
stos
xchg
add
jmp
icebp
inc
push
movsl
add
jb
push
aaa
jmp
sub
sub
bound
sub
push
push
mov
mov
dec
in
sub
or
in
fnstsw
jge,pt
ficomps
adc
fcmovu
jmp
pop
ljmp
add
iret
test
inc
into
cmp
fbstp
jg
das
jmp
add
pop
sub
add
out
xor
dec
loopne
pop
sub
lods
fisubrs
cmp
fdivr
pop
movswl
adcb
dec
js
shll
push
lods
xchg
mov
ret
lret
pusha
pop
mov
test
add
je
push
jge
cmc
and
mov
add
xor
dec
add
pop
in
stos
sub
dec
pop
cmp
lds
gs
mov
jbe
pop
jmp
cwtl
dec
pusha
rcrl
add
jecxz
xor
adc
mov
std
mov
jbe
dec
pmulhw
mov
popf
mov
aaa
add
aam
push
imul
push
dec
xchg
std
shl
mov
into
jne
mov
out
jb
xchg
mov
ljmp
sub
xor
aaa
add
jb
in
pop
inc
loope
pusha
lret
cmpsb
add
push
sub
lock
addr16
dec
out
pop
mov
add
inc
cmp
rol
xor
add
fucomp
sbb
jl
mov
int3
aad
stc
push
lea
pop
cmp
lods
imul
aaa
sub
in
movsl
fucomp
and
loopne
xchg
addr16
dec
fiaddl
jl
jp
jns
es
push
iret
insb
inc
pop
test
outsb
or
fistpll
push
mov
test
imul
add
lods
sti
jge
cmp
push
jb
xchg
xchg
mov
sub
xchg
mov
mov
push
push
xchg
cmp
leave
xor
dec
bound
xor
add
dec
and
cmpsl
je
mov
leave
outsb
int
mov
notl
ja
mov
mov
add
mov
add
push
jecxz
mull
cmp
or
jle
ja
add
bound
add
mov
out
push
add
push
pop
ret
stos
outsb
cmp
lods
push
add
insb
and
out
rcl
aam
and
and
stc
add
dec
gs
mov
aad
lahf
sarb
sbb
inc
add
pop
xor
sub
das
divl
dec
out
add
inc
xchg
aas
xchg
or
cmp
mov
test
fmull
xchg
add
or
das
cmp
scas
lds
pop
ljmp
sub
pop
add
movsl
sbb
sub
jns
es
inc
sub
sub
xchg
aam
jmp
pop
add
fmull
flds
fucomip
insb
mov
pop
stos
movsl
out
add
dec
je
sbb
add
sub
jne
cmc
outsl
add
cmp
mov
scas
ja
add
jb
jnp
in
cmpsl
out
in
loop
add
lret
loope
push
lcall
xchg
cmp
dec
js
sahf
jne
pusha
mov
pop
das
nop
xchg
in
mov
cmpsb
into
add
inc
repz
inc
mov
xchg
into
sbb
xchg
cld
jg
fcmove
mov
mov
add
subb
popf
inc
out
add
mov
gs
movsl
cmp
cmpl
iret
fcomps
add
push
fwait
xchg
add
pop
movb
movsb
rolb
xor
lock
cmp
sub
xchg
ss
add
pushf
cmp
fs
sub
cmp
aaa
add
and
mov
cwtl
cmp
lock
add
lret
mov
xchg
add
ds
sbb
icebp
shlb
add
fsubl
pop
je
add
and
in
mov
in
popl
xor
jbe
add
dec
cmp
addl
jns
scas
cmp
mov
pop
js
mov
inc
test
push
aaa
jge
cmp
fisubrs
mov
lahf
in
jmp
andb
lret
and
add
cli
fisubrs
outsl
je
sbb
daa
mov
jecxz
call
add
mov
sub
dec
push
je
divb
ficoms
jge
fwait
add
jne
xchg
add
inc
mov
hlt
add
inc
ficomps
push
andb
mov
jb
cwtl
imul
stos
popa
sub
out
jne
inc
sbb
loopne
dec
repnz
pop
sub
dec
imul
inc
cmp
cltd
add
inc
mov
es
sbb
jns
es
adc
sti
inc
into
pusha
test
jle
pop
pop
lods
sub
push
push
add
push
ret
and
xchg
outsl
mov
imul
jae,pn
dec
sbb
xchg
inc
jl
dec
dec
lret
xor
or
mov
int3
sbb
mov
movsl
adc
in
out
add
dec
cmp
wrmsr
push
pop
inc
scas
gs
mov
rorb
pop
xor
push
push
mov
mov
xor
je
stc
and
push
add
shlb
flds
cmp
imul
push
mov
stos
shl
inc
adc
push
sahf
jns
cmp
bswap
rcll
and
push
nop
pushf
stos
fmuls
cmp
mov
add
sbb
stos
pop
lock
add
ret
and
jmp
stos
sub
mov
jnp
inc
sub
mov
xchg
push
and
cmp
mov
sbb
mov
shrl
inc
add
and
jne
push
dec
sub
pop
out
add
jg
les
add
and
imul
push
sub
and
iret
sysret
in
jne
and
push
popf
loopne
mov
inc
sbb
inc
scas
pop
add
in
sbb
stos
add
test
push
mov
pop
cwtl
pop
testb
push
cmp
sbbl
loope
ss
insl
in
xlat
mov
jmp
lret
sahf
xchg
fs
shll
cmc
add
push
scas
mov
mov
paddsb
dec
sub
add
fs
faddl
xchg
outsb
add
push
scas
adc
in
cmp
or
sub
cmc
or
insl
add
outsl
xchg
fcoml
dec
cli
inc
lds
neg
xchg
add
sub
aad
sbb
sub
push
stos
faddp
jb
push
sti
es
add
mov
push
cmp
xor
enter
inc
shl
lahf
add
add
cmp
test
dec
dec
repz
lods
sbb
add
push
jne
mov
push
push
mov
jns
cli
fisubrl
mov
mov
xor
xchg
jbe
popf
pop
push
ljmp
jp
lods
enter
cmp
mov
repnz
sub
pop
adc
std
mov
mov
jl
or
pop
xchg
sub
loopne
js
xorb
jb
out
add
int
imul
loopne
cltd
push
stos
fildll
scas
packuswb
in
mov
mov
je
cmpsb
repz
dec
add
shll
add
es
lock
mov
push
xchg
dec
inc
imul
cmp
orl
test
arpl
jb
mov
push
sbb
movsl
icebp
pop
push
adc
ret
inc
rolb
pop
fidivrl
loopne
cmp
ss
xchg
cld
nop
int3
stos
addb
push
jle
and
add
inc
xchg
pusha
inc
ja
add
cmp
sahf
ds
subb
mov
clc
fnstcw
push
fnstsw
cmpsl
adcb
imul
gs
push
sbb
in
xchg
push
pop
inc
add
add
and
add
stos
enter
push
cmc
jp
cli
xchg
pusha
fsub
adc
mov
data16
lsl
lods
fstp
call
cmp
test
jb
add
ret
int3
cmp
xchg
lods
lahf
push
psubusw
mov
bnd
in
daa
subl
inc
dec
popf
jb
add
dec
lods
and
leave
sarb
push
add
es
js
add
leave
add
and
aas
xor
adc
sbb
repz
add
lret
dec
xlat
mov
jns
mov
cmp
sub
push
add
dec
fdivl
push
test
mov
stos
mov
dec
adc
sbb
addr16
add
sbb
pop
mov
add
push
into
in
inc
xor
push
fistps
mov
xor
inc
add
outsl
scas
mov
xchg
push
jl
lds
sarb
lret
adc
and
daa
scas
mov
fsubrs
and
fcoml
push
das
addb
sbb
loope
inc
jb
pop
and
hlt
add
data16
jbe
insb
loop
add
fdiv
xor
jp
sbb
es
add
mov
mov
jecxz
inc
stos
add
push
and
pop
inc
sub
xor
mov
cltd
mov
mov
mov
xchg
cmpsb
inc
mov
add
and
roll
xchg
push
xor
add
cmp
inc
outsl
mov
hlt
jp
pshufw
add
js
fwait
add
mov
enter
sbb
mov
and
or
add
and
iret
cmpsl
cs
jno
jmp
out
inc
add
inc
dec
adcb
cmc
pop
int
xlat
fstl
xchg
add
repnz
cmp
fisubrl
cmp
jno
push
push
mov
cmp
mov
xchg
cwtl
pop
sahf
into
fisubs
jo
cmp
out
jae
out
sbb
rclb
push
cld
cmp
jle
popf
pop
sub
in
mull
jmp
xchg
lods
sub
mov
mov
add
mov
je
aad
iret
xchg
lea
lds
add
xchg
lock
add
mov
cmpsl
lock
repnz
adc
lret
xchg
imul
jp
cmp
sbb
lcall
rcrb
mov
cmpsb
lahf
add
mov
inc
lods
divb
add
pop
push
lret
js
enter
aad
mov
pop
inc
add
pop
pop
mov
insl
pusha
jo
divl
lret
in
fidivl
sti
sub
add
mov
push
sbb
rclb
xchg
add
pop
push
fsubrl
lcall
lret
jg
push
mov
test
negb
pop
jp
pop
int3
add
fdivp
dec
push
in
cmp
jo
xor
loopne
lahf
cmp
adc
in
add
lret
mov
sbb
roll
movb
bound
loop
add
int3
xchg
push
scas
cmp
add
inc
xor
add
fmuls
mov
jge
packsswb
mov
jnp
popa
add
ret
out
andl
add
hlt
pop
jmp
xchg
mov
mov
and
out
add
pop
scas
cmp
dec
aas
negb
add
cs
ja
pop
shll
jno
insl
mov
dec
pop
nopl
in
jecxz
mov
pushf
subb
arpl
add
rorl
mov
dec
push
dec
inc
jg
out
add
insb
sub
add
insl
push
adc
movsl
jns
lods
cmp
xchg
hlt
insb
filds
jecxz
cltd
dec
mov
mov
stos
lods
jg
add
mov
stc
ret
adc
aas
sti
movsb
add
iret
outsl
in
pop
adc
repnz
jl
sbbl
cltd
shl
dec
jno
and
mov
out
shrb
add
sub
out
pop
btc
loopne
pop
fiaddl
ja
cli
outsb
cwtl
daa
xor
push
in
sbb
add
out
add
cld
in
dec
fsubrs
outsl
je
and
out
outsb
cmp
dec
jbe
aas
xchg
and
pop
es
sbb
push
scas
inc
mov
push
mov
rolb
inc
fmull
pop
fwait
or
pop
subl
add
and
test
les
add
pushf
in
sbb
pop
and
out
sub
sbb
mov
and
xor
push
lods
mov
jle
push
sbbb
inc
out
sti
mov
add
rolb
add
cmc
in
repnz
add
or
xchg
xor
mov
mov
lret
add
sub
pop
xchg
or
std
mov
je
mov
sbb
in
lcall
mov
inc
sbb
sub
adc
add
mov
repnz
mov
loope
fcomp
roll
int
ja
movsl
push
insl
add
push
mov
fmul
push
mov
out
repz
sbb
and
je
sbb
imul
dec
add
nop
fprem1
and
loope
cmp
jne
arpl
add
iret
bound
jge
inc
add
mov
mov
pop
mov
aas
loopne
jns
and
pop
xchg
pop
add
scas
aam
cld
mov
cmpsb
test
dec
lahf
xcrypt-ofb
cmpsl
lods
add
push
fbld
cltd
add
pushf
cmpb
xchg
inc
push
or
fiadds
divb
cmp
lahf
test
lcall
mov
movsl
dec
and
xor
out
repz
add
fadds
lret
jae
inc
adc
jmp
push
sbb
mov
insb
out
pop
std
add
mov
jecxz
and
mov
mov
jb
add
fsubr
mov
jb
fistl
adc
loop
lock
movsl
push
sub
add
fwait
leave
lock
movl
cmp
inc
fidivl
xor
inc
add
mov
in
cmpsl
cld
cmpb
in
hlt
add
rorb
cmpsb
pop
test
repnz
xor
in
jl
add
mov
insl
cmpsl
loopne
adc
pop
jecxz
pop
push
loopne
out
cmp
or
add
sub
iret
jge
pop
pop
jmp
popl
sbb
dec
mov
repz
adc
push
push
mov
dec
sbb
bound
sti
push
adc
int
loope
cmp
orb
enter
ss
repnz
mov
jbe
inc
add
sbb
cmpsb
add
mov
imul
lea
int
in
in
leave
subb
mov
inc
push
jle
cmp
into
scas
mov
lds
push
ljmp
add
stos
sbb
add
push
std
jge
add
and
gs
mov
add
jbe
aas
add
out
addr16
mov
ljmp
pop
lcall
rclb
arpl
mov
sbb
cld
add
push
add
sbb
fdivrs
push
jl
jecxz
loope
shll
enter
sti
add
xor
popa
push
pop
neg
hlt
mov
push
arpl
les
or
dec
stc
xor
adcb
les
cwtl
lret
lock
repnz
lret
cwtl
nop
sbb
xlat
inc
or
cs
push
dec
add
aaa
add
test
movsl
cmpsb
adc
dec
pop
bound
nop
xchg
inc
sti
or
or
hlt
jg
imul
ja
fdivs
enter
popa
dec
xor
into
sahf
inc
das
jo
test
xchg
filds
cmpsl
add
xchg
loop
cltd
enter
nop
cwtl
das
add
pop
aam
sub
jne
xchg
imul
adc
pusha
xchg
loopne
dec
ljmp
jecxz
adc
mov
ja
orl
xor
add
or
inc
out
sbb
pop
xor
ljmp
jo
enter
add
fxam
mov
and
cmp
inc
cmp
sbb
pushf
jl
add
dec
adc
xchg
push
mov
in
movsl
pusha
rclb
xchg
cmp
jo
testl
add
push
xor
ret
cmp
mov
loope
into
ficoms
jne
xchg
add
jae
cld
flds
mov
call
ja
test
sbb
jno
xchg
sti
xor
mov
add
pushf
xor
cld
xchg
push
scas
scas
inc
fimuls
jnp
or
add
clc
cmpb
mov
sub
sahf
iret
in
push
jnp
pop
or
shll
jb
ja
adc
add
inc
outsb
insl
jno
dec
das
call
aas
cs
call
jecxz
mov
push
je
cli
push
add
insl
hlt
mov
add
imul
fs
lret
add
adc
out
mov
loop
xlat
mov
add
divl
mov
cmp
and
jge
pop
mov
mov
add
dec
xchg
addr16
in
jg
out
out
add
mov
adc
test
jbe
xor
arpl
inc
jg
pop
aas
jae
jo
add
lods
scas
cmpsl
cmp
mov
jbe
test
push
inc
sbb
push
xchg
out
add
movsb
shlb
out
fwait
aam
mov
mov
dec
ljmp
divb
movsl
add
mov
enter
inc
out
popa
les
xchg
and
andb
sub
lret
add
jae
mov
cmp
test
fs
mov
push
es
popa
sbbb
aas
iret
into
inc
call
pop
mov
out
je
aaa
add
sub
ljmp
mov
cwtl
outsl
pop
and
add
outsb
ljmp
push
in
das
pop
fisttps
pop
fucomi
outsb
inc
cwtl
push
add
shrb
iret
add
push
pushf
pop
ljmp
pop
leave
mov
cmpsl
add
adc
sub
mov
cld
fldl
jae
scas
sbb
add
xor
pop
mov
add
and
add
adc
mov
add
rclb
pop
fstl
add
xor
ret
xchg
and
repnz
imul
cmc
pop
mov
fistps
test
shrb
mov
push
rorl
js
lea
gs
push
inc
lods
push
enter
pushf
fwait
subb
fs
mov
movsb
push
test
rcrl
cmp
xchg
clc
add
leave
pusha
xchg
mov
push
cmp
inc
fstpl
cmc
xchg
push
ficomps
mov
sahf
lret
dec
adc
sbb
clc
push
loop
or
ror
in
jno
add
imul
pop
lea
push
mov
add
inc
mov
and
push
pop
add
or
shr
mov
hlt
sahf
sub
xchg
sbb
push
xor
xchg
mov
fs
mov
addl
jns
call
add
cmp
arpl
dec
leave
icebp
int
or
mov
insb
inc
mov
pusha
adc
jb
lea
enter
mov
in
jp
sbb
pushf
inc
negl
push
mov
pop
add
xor
mov
int
push
inc
not
add
imul
sahf
popf
dec
mov
sub
xchg
mov
jo
pop
mov
cmpsb
mov
aas
fsubp
lods
add
adc
cs
and
mov
jne
mov
xlat
insb
cmpsl
and
das
mov
test
int3
lea
and
push
stos
pop
xor
sbb
in
mov
and
inc
mov
gs
inc
cmp
sbb
jnp
js
xor
cmpsb
test
inc
or
mov
pop
inc
js
out
cmp
aaa
add
lcall
mull
pushf
adc
test
pop
gs
outsl
mov
jns
pop
aas
es
add
in
mov
add
jo
cmc
add
and
cmp
jge
scas
sbb
stos
fbstp
mov
into
pop
repnz
lret
jne
negb
sahf
inc
int
pop
incb
ljmp
in
pop
mov
cli
add
dec
rorl
add
pop
out
push
or
lret
inc
sub
xor
mov
mov
movsl
cmp
mov
cmp
mov
dec
gs
dec
push
loopne
icebp
sbb
push
pushf
push
mov
and
mov
add
xchg
aaa
orl
mov
fisubrl
cltd
arpl
cmc
mov
dec
imul
add
test
adc
xor
aam
cwtl
mov
mov
xchg
push
cmp
mov
insb
movsl
cmp
mov
adc
xor
imul
lock
bnd
gs
rcrl
inc
lock
es
clc
mov
adc
iret
sbbb
add
sub
mov
xor
cmp
std
fimull
movsl
lret
dec
hlt
add
and
adc
sbb
and
and
addr16
push
cwtl
add
sahf
or
pop
rep
pusha
push
pop
sub
int
add
test
bound
test
mul
mov
cmpsl
add
iret
mov
dec
inc
add
lret
xchg
cli
dec
out
and
or
mov
stos
pop
scas
add
xchg
shll
mov
rorb
add
out
enter
pop
cmp
fwait
jmp
addl
dec
sti
repnz
inc
sub
fistpll
jl
shlb
mov
outsb
and
fiaddl
xchg
fdivl
and
nop
xor
daa
ja
push
xlat
or
shrb
fstpl
int3
cwtl
push
mov
insb
or
add
cmp
sub
enter
ja
insb
add
xorb
rcll
xchg
mov
xor
add
xor
jo
xchg
jno
add
cltd
xor
cmc
jb
inc
add
mov
jecxz
outsl
push
fbstp
xchg
add
jb
mov
add
inc
cmc
loopne
pop
lret
add
rorb
nop
or
out
andb
add
rclb
jle
fmuls
and
cld
in
ret
add
add
sbb
orb
xchg
xor
adc
add
test
aad
inc
popf
xor
lea
js
scas
dec
xorb
jl
add
int
loope
sbb
in
popf
pop
xor
sbb
add
mov
cmpsl
and
add
push
pushf
add
ljmp
jmp
cli
add
jge
addl
lahf
es
or
xchg
cltd
lds
lcall
dec
add
psubd
repz
shrb
fsubs
pop
xlat
das
add
add
into
add
lahf
push
push
in
adc
sub
adc
pop
fnstcw
add
div
or
cs
xorb
add
aam
js
mov
stc
ds
jnp
dec
push
mov
pop
decl
xlat
in
and
or
jmp
xchg
in
enter
stos
or
adc
arpl
adc
in
fisttps
and
cmc
sub
sub
test
sbb
call
add
push
dec
ljmp
sbbl
jo
pop
stos
xor
inc
repz
adc
sbb
in
xor
xchg
ds
xor
inc
fldcw
or
aad
popf
xor
push
dec
jbe
divl
imul
inc
mov
dec
scas
bound
xchg
minps
inc
pcmpeqb
bound
emms
pop
push
je
js
jae
xor
fnstsw
dec
fldcw
push
into
inc
frstor
shrb
fisubl
mov
das
js
push
inc
test
dec
cmp
adc
dec
cmp
loope
pop
imul
dec
push
mov
test
stc
xchg
fisubs
jns
and
test
sar
into
push
rclb
sbb
ljmp
imul
inc
and
jb
xchg
lea
or
and
sub
bound
cmp
or
ja
push
jl
mov
inc
test
sub
cmp
pop
adc
sub
imul
idivl
lcall
sti
repz
int3
inc
and
xchg
pop
jbe
cmpsl
sbb
mov
dec
cmc
inc
add
adc
dec
mov
jns
fs
ljmp
jl
or
dec
into
mov
adc
xchg
inc
in
inc
icebp
add
adc
mov
adc
dec
dec
cmc
dec
cli
dec
pop
dec
into
call
inc
xor
jp
sub
sar
pop
imul
dec
aam
mov
cwtl
or
sti
jns
jg
jmp
mov
xchg
rolb
inc
popa
shll
lret
cmc
test
inc
loopne
notl
cmp
rclb
or
mov
push
arpl
mov
mov
sbb
ds
imul
roll
push
mov
repz
jmp
fcompl
or
cltd
mov
add
leave
add
jbe
and
cwtl
mov
mov
popf
mov
mov
rcl
data16
push
insl
sub
lods
mov
outsb
imul
outsl
pop
test
es
inc
in
and
fiadds
fildl
sbb
cmpsl
jns
xor
adc
outsb
or
sbb
inc
jbe
push
add
sbb
xor
adc
dec
push
adc
pop
push
dec
sub
dec
pop
adc
xor
xchg
xor
and
std
xor
jecxz
jp
or
push
insb
dec
add
push
in
ljmp
push
add
gs
inc
jo
addr16
or
mov
aaa
sbb
ds
lods
arpl
jp
cwtl
mov
mov
lds
mov
push
out
jns
mov
addr16
dec
popa
push
push
pop
movsl
push
dec
xlat
ja
dec
arpl
ss
lcall
sbb
jge
mov
cmp
jae
jns
sbb
pusha
std
fs
and
dec
adc
std
xor
ja
sbb
loop
popa
push
cmp
or
push
dec
mov
data16
xor
cs
push
inc
andl
data16
jns
dec
jae
inc
fisttps
jl
jge
pusha
dec
stos
and
add
jno
xchg
adc
ret
fwait
imul
andb
leave
arpl
in
pop
nop
xor
jle
push
leave
jns
mov
imul
fnstenv
imul
lahf
fsubrl
push
jge
repz
out
call
xor
mul
add
cmc
inc
adc
popa
cmc
test
adc
and
jne
add
enter
ljmp
scas
std
adc
cmp
inc
jnp
inc
aad
xor
push
or
mov
loope
jb
mov
cwtl
lcall
push
xor
add
cmp
cmpsl
lea
bound
inc
ja
mov
ljmp
bound
and
jecxz
or
lcall
loop
inc
push
arpl
adc
inc
outsl
int
dec
daa
or
ds
and
mov
sbb
sbb
and
or
or
movsl
mov
adc
scas
xor
xor
sti
sub
popa
imul
mov
xor
stos
rcrl
push
push
lock
es
push
int3
mov
and
lret
pop
repnz
sub
pop
popf
aam
push
rolb
xor
mov
push
add
rolb
push
and
xor
test
repnz
nop
add
and
jns
ret
test
les
and
add
add
add
add
mov
push
leave
das
xorb
jbe
sbb
mov
jmp
pop
mov
sbb
pop
scas
enter
jp
sbb
or
pop
imul
adc
dec
pop
movsb
js
arpl
cs
stc
lahf
fisttps
ficomps
ficoml
xchg
xor
ret
jge
or
pusha
xor
loop
call
add
mov
call
call
call
cmpl
jne
mov
mov
jmp
mov
mov
call
jmp
and
add
pop
and
add
add
add
call
jmp
sub
mov
pushl
add
pushl
add
call
add
add
cmpl
jne
cmpl
je
cmpl
je
call
lea
call
mov
or
je
add
call
cmpl
jne
mov
jmp
add
cmpl
jne
jmp
add
mov
mov
add
call
add
push
push
push
push
push
call
mov
pop
pushl
push
call
add
call
call
cmpl
je
cmpl
je
call
call
mov
mov
jmp
inc
cmpb
jne
inc
mov
mov
cmp
je
cmpl
jbe
cmpl
jne
add
sub
add
add
mov
call
call
call
call
jmp
call
push
call
test
je
mov
mov
jmp
mov
mov
call
push
pushl
call
test
je
call
call
add
mov
mov
addl
mov
cmpl
jne
jmp
inc
cmpb
jne
inc
add
mov
mov
cmp
je
cmpl
jbe
cmpl
jne
add
sub
add
movl
add
mov
cmpb
jne
call
push
push
pushl
call
jmp
and
add
int3
xor
add
fisttps
add
call
cmpl
je
jmp
jmp
popa
jmp
nop
pusha
push
push
push
push
call
mov
push
lea
lea
push
push
call
add
add
jmp
dec
cmpb
je
sub
inc
mov
mov
lea
rep
pop
push
push
push
call
popa
ret
add
push
add
loopne
add
push
add
je
and
jl
sub
mov
xor
movsb
mov
call
jae
xor
call
jae
xor
call
jae
mov
inc
mov
call
adc
jae
jne
stos
jmp
call
sub
jne
call
jmp
lods
shr
je
adc
jmp
xchg
dec
shl
lods
call
cmp
jae
cmp
jae
cmp
ja
inc
inc
xchg
mov
mov
push
mov
sub
rep
pop
jmp
add
jne
mov
inc
adc
ret
xor
inc
call
adc
call
jb
ret
sub
mov
popa
ret
and
add
sub
add
jb
gs
xor
cs
insb
add
add
add
add
sub
add
add
add
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
dec
outsl
popa
fs
imul
add
inc
gs
jb
arpl
fs
jae
add
push
imul
insb
insb
outsl
arpl
add
jb
jne
insb
push
jb
je
arpl
push
imul
jb
add
add
add
or
add
ret
loope
add
mov
mov
cmpl
or
mov
jbe
pusha
jle
pop
ret
push
adcl
or
mov
popf
mov
pusha
mov
ja
mov
sbb
movl
jmp
repz
nop
inc
add
and
push
call
xor
addl
or
cmp
mov
cmp
loopne
adc
add
xchg
ret
mov
addl
add
cmp
sbb
pop
sbb
shll
and
sbb
inc
dec
jb
mov
add
popa
dec
test
add
mov
pop
pop
decb
mov
mov
xor
sub
add
pop
lea
sub
test
testb
mov
bswap
sub
add
sub
mov
jge
jae
lock
lock
loopne
push
shr
sub
adc
sub
daa
js
sub
stc
jbe
cmp
mov
dec
or
das
mov
pop
or
mov
pop
and
push
dec
cmp
push
sub
lcall
cltd
xor
sbb
jne
mov
push
push
push
push
and
scas
sbb
add
add
data16
add
mov
or
iret
and
push
push
dec
aaa
jg
xchg
dec
mov
mov
jne
xchg
pop
pusha
ficoms
nop
sub
pop
nop
xor
push
or
jo
out
out
lea
adcb
jne
or
jmp
clc
adc
jne
adc
inc
or
sub
add
scas
mov
push
mov
subb
add
cmp
notb
mov
pop
ljmp
jnp
orb
cmp
xorb
enter
sarl
jbe
mov
out
add
lock
mov
sbb
push
mov
std
add
jno
cmpl
jne
pop
pushl
inc
call
ret
into
inc
xlat
lock
or
sbb
ds
adc
add
jne
push
lea
mov
sbb
add
jmp
scas
rolb
pop
push
enter
dec
das
pop
add
jmp
or
int3
and
push
push
xor
fnstsw
popf
add
popa
xor
decl
jns
sbb
sbbl
mov
sub
sbb
rclb
cmp
and
fstl
and
and
fists
push
jmp
je
aaa
movsl
xchg
insl
fsubrp
and
adc
popl
push
ret
push
mov
inc
inc
adc
inc
fwait
add
mov
fsub
xchg
add
xchg
into
outsl
and
adc
and
mov
inc
adcl
je
adc
inc
test
out
xchg
dec
jecxz
pop
inc
or
inc
or
push
adc
test
push
add
inc
aaa
or
repz
ficoml
xchg
cmc
cltd
es
cmpsb
pusha
mov
or
add
ret
and
std
invlpg
lods
pusha
or
mov
inc
xor
and
dec
or
repz
mov
adc
rorb
cmp
jmp
push
pusha
or
jne
sbb
in
ljmp
xchg
pop
push
sub
and
mov
fadds
cmpl
or
mov
push
adc
icebp
xlat
mov
jmp
inc
daa
cmpb
xor
int3
sbb
pop
div
jl
add
movzbl
mov
inc
nop
xor
sub
inc
and
and
popa
int3
jne
push
into
adc
and
and
xor
sub
mov
sub
add
shrl
into
cmp
jmp
shr
fistpl
push
popf
nop
sbb
cmp
push
cltd
incl
inc
lods
lea
enter
or
xchg
dec
cmp
add
int
lods
ror
xor
push
jne
add
ret
dec
pusha
and
call
push
gs
clc
or
add
add
por
add
negl
or
aaa
repnz
imul
fstpt
jne
jmp
addl
adc
call
fnstsw
xor
adc
es
test
scas
fimuls
repz
jo
or
or
lock
mov
jno
dec
jne
pop
addr16
or
or
mov
pop
add
leave
jmp
mov
and
je
or
or
add
or
inc
repnz
sub
jb
iret
mov
leave
push
add
mov
xlat
sub
ficompl
jbe
lea
add
js
jne
ljmp
jmp
lahf
je
jp
xor
push
pop
adc
subb
out
push
movb
jmp
adc
add
pusha
jmp
mov
add
ret
sub
mov
lcall
out
mov
xchg
lahf
popa
aad
push
mov
add
cli
loop
sub
xorl
xor
pop
fs
mov
or
in
dec
or
pop
sub
cld
pushf
lea
sbb
les
std
ss
add
dec
lock
pop
dec
je
addr16
mov
xor
sbb
xor
inc
fdivl
jg
mov
adc
push
push
call
pusha
mov
lcall
aad
cwtl
push
adc
mov
adc
into
fwait
clc
dec
mov
add
lods
roll
leave
or
jno
aas
jmp
shr
sbb
and
mov
jb
jg
ja
xor
nop
daa
aas
push
and
pmulhw
jg
icebp
inc
daa
sbb
inc
sbb
cmp
fldl
cmpsb
and
ret
ljmp
jmp
mov
push
pop
mov
inc
inc
shll
sub
je
jge
clc
sbb
movb
mov
lea
add
cmpsl
mov
iret
jbe
pop
mov
inc
in
dec
dec
movsl
add
sahf
lret
cwtl
pop
jnp
mov
jbe
or
mov
adc
add
out
mov
es
flds
cmp
add
int
or
cld
ret
cwtl
insb
ljmp
or
mov
xchg
and
push
sub
or
push
sub
xor
mov
in
xor
adc
xor
decl
pop
mov
xor
inc
xor
cmp
arpl
je
inc
int3
call
xchg
cmp
pop
movb
push
test
je
mov
jne
mov
add
jbe
sbb
or
je
popa
pop
shl
popf
sub
pop
push
jmp
js
ljmp
mov
shlb
and
push
or
cmp
jne
sarb
adc
test
das
repnz
cwtl
dec
das
mov
pusha
xor
add
xchg
push
ret
push
cmc
add
add
into
cmp
das
or
xor
inc
push
dec
in
jbe
mov
add
or
les
ret
xor
sub
jmp
adc
and
push
or
mov
add
xor
movzbl
mov
fsubl
add
inc
and
adc
add
sti
add
or
cmp
pop
aam
in
xor
or
sub
xor
push
sub
pop
cmp
mov
xchg
popf
dec
adc
fsubs
shlb
and
xor
inc
outsl
dec
xchg
nop
fisubs
dec
jg
je
adc
push
out
mov
pop
and
cmp
pusha
xor
insl
xor
adc
rcrb
cmp
inc
stc
addl
push
call
mov
push
mov
leave
or
ret
fmuls
in
cmp
cmp
jge
sub
inc
and
or
sub
inc
push
and
sarb
mov
mov
or
jne
add
pop
rol
xor
nop
in
clc
out
stc
aam
sti
or
jae
add
jmp
xchg
insb
xor
pop
or
sbb
sbb
sbb
jnp
repnz
test
cmp
movsb
inc
inc
lret
loope
into
popa
pushl
add
loop
fistpl
test
xchg
in
cmpsl
sub
sbb
pop
dec
xor
jle
jecxz
adc
loope
loop
push
mov
jbe
scas
into
stc
mov
or
push
xchg
imul
sbb
push
push
fildl
test
mov
ss
jbe
iret
imul
xor
pop
lea
fistps
pop
sub
push
jmp
movb
and
lods
cltd
rorb
inc
or
pop
or
sbb
ljmp
adc
pushf
mov
addl
lea
mov
adc
je
add
lea
mov
push
jmp
xor
sub
adc
hlt
popa
test
sub
hlt
int
adc
fwait
push
inc
or
or
mov
sbb
mov
sub
outsb
inc
rep
es
lret
inc
ret
movsl
call
sub
cmp
xor
jne
jns
movsb
subl
jae
add
mov
xor
rol
inc
rorb
rdtsc
pop
and
adc
cmp
or
jbe
or
or
popf
nop
sbb
lret
mov
jmp
pushf
jmp
pop
mov
sbb
add
or
or
pusha
pushf
popl
test
sbbb
mov
sub
repz
push
push
sbb
inc
cmp
push
or
dec
xor
adc
jbe
sbb
aas
or
push
xchg
imul
rol
xor
and
test
push
pusha
in
xchg
jno
xchg
push
loop
stos
or
push
ss
inc
cmp
data16
test
stc
jno
ret
incb
jmp
lret
add
cmp
js
frndint
jnp
and
stc
xor
lea
sti
adc
ror
rolb
xor
inc
cmpb
dec
cmc
cmp
sub
out
jo
sbb
leave
xor
add
and
inc
movzwl
push
inc
rol
nop
or
or
mov
inc
es
add
dec
cmc
or
js
jl
adc
movsl
mov
repz
jbe
push
and
rcrl
and
xorb
inc
adc
or
aad
jp,pt
out
mov
sub
inc
ja
icebp
add
or
jg
mov
aad
jb,pt
sub
pushf
xchg
js
or
daa
push
scas
push
pop
add
jb
xor
cmp
jns
hlt
outsl
stc
jo
inc
jl
pop
and
daa
addr16
aaa
and
arpl
bound
jbe
jb
and
inc
outsl
in
insb
into
and
je
std
xor
and
mov
imul
or
mov
data16
push
xor
pop
lock
int3
stos
je
jae
fs
dec
cmp
data16
mov
popa
insb
ds
inc
clc
inc
jno
iret
sbb
je
outsl
outsb
pop
fmuls
jb
mov
aas
icebp
int3
push
addr16
dec
mov
push
inc
pop
pmulhuw
push
bnd
ja
rcrl
imul
push
push
outsb
divl
mov
popa
sbb
out
inc
mov
cmp
pop
sbb
out
mov
pusha
data16
ja
and
or
or
roll
dec
push
xchg
mov
push
mov
dec
insl
sbb
push
lcall
int3
add
push
pop
stos
lahf
jg
test
leave
mov
shll
push
in
dec
xor
push
bound
and
and
and
jbe
push
push
xor
int
mov
sbb
jae
push
arpl
neg
mov
add
push
sbb
mov
sub
jo
and
rcrb
dec
outsb
sub
jbe
dec
ja
add
ljmp
jb
stos
jo
ret
into
nop
sub
dec
cmpxchg
jne
je
mov
push
mull
ja
push
lds
hlt
push
and
roll
sti
xchg
jge
add
mov
mov
add
les
cmp
dec
xor
inc
add
inc
cmp
lret
das
xorb
xor
ss
sub
jae
or
inc
inc
or
push
loop
mov
adc
jb
lods
or
push
pop
inc
cmovbe
mov
loop
mov
push
or
pop
sti
and
gs
jne
jp
adcl
fwait
int3
adc
xor
test
fldenv
and
jmp
cmp
sub
inc
test
in
repnz
aaa
or
outsb
fisttps
cmp
mov
dec
cwtl
mov
das
push
outsl
data16
insl
jl
cmp
xor
jmp
insl
jp
or
jns
bound
je
test
cmpsl
lods
cld
scas
test
punpckhdq
and
pop
sti
add
xor
pop
imul
mov
movsl
out
test
and
cmp
or
inc
cld
call
mov
cltd
and
lock
mov
ja
pop
or
inc
or
test
cmp
sbb
jbe
dec
imul
ja
insb
inc
jecxz
push
out
arpl
ljmp
imul
scas
cmovo
enter
sbb
push
cmp
sbb
cmp
dec
sti
sbb
jge
arpl
pop
fistpl
xor
movsb
enter
stos
mov
jo
frstor
inc
inc
inc
push
jo
and
xor
add
negl
adc
push
adc
sbb
and
jmp
xor
fs
adc
or
inc
and
mov
adc
sub
xor
pop
pop
push
adc
ds
or
dec
sub
mov
jnp
loopne
or
test
ret
adc
jb
nop
rcll
add
les
movsb
or
outsl
jne,pt
inc
add
fcomip
add
jg
call
jle
add
jl
cwtl
fisubl
push
fs
dec
out
aaa
jb
add
cmp
push
out
int
add
jae
insb
outsl
mov
gs
add
fidivrs
fsub
pushf
add
cmp
push
arpl
cmp
pop
xchg
dec
and
jle
pop
je
lock
adc
adc
sbb
enter
push
repz
push
jo
repnz
inc
add
shrb
imul
inc
jge
pop
add
scas
dec
xorb
pop
movsbl
in
inc
stos
cmp
std
sbb
inc
dec
xor
lods
int
add
dec
imul
or
xchg
cmp
test
add
adc
mov
xor
popf
adc
add
jle
dec
jno
and
flds
out
stos
xchg
imul
pop
loopne
jg
dec
es
aas
xor
fwait
incb
in
out
fisubrl
lahf
or
ljmp
xchg
inc
sub
lahf
outsb
dec
imul
or
add
sub
add
jns
mov
hlt
mov
test
xchg
xchg
push
in
inc
cmpsb
insb
or
cmp
cli
sub
jo
add
in
push
mov
aam
xchg
sub
inc
cmp
stos
sbb
push
in
add
cmc
les
mov
mov
lret
push
pop
xor
adcl
dec
call
pop
jecxz
hlt
outsb
push
and
lahf
ret
out
pop
add
mov
jecxz
arpl
daa
xor
pop
xlat
xor
mov
enter
add
sub
lret
pop
cmp
and
xchg
outsb
dec
jg
out
jle
out
mov
addb
pop
and
jmp
or
ds
loope
inc
scas
pop
sub
push
lea
outsl
jge
mov
cmp
add
dec
flds
out
cmc
ss
outsb
xchg
push
xorb
fcoms
aad
pop
mov
movsb
push
sub
cmp
mov
outsb
shrl
pusha
cltd
subl
xchg
in
inc
lret
pop
out
bndstx
mov
xchg
in
add
inc
mov
cmp
lea
outsl
rclb
aas
add
jno
stos
aad
add
or
sbb
cmp
cmp
out
sub
cltd
sahf
pop
push
outsb
add
xchg
or
push
nop
or
scas
sbb
fdivrl
pusha
popa
loopne
and
or
add
cmp
mov
adc
add
mov
in
xor
pushf
cltd
pop
add
js
add
std
mov
test
inc
xchg
stc
aad
mov
ds
push
sahf
inc
stc
and
call
xorb
add
pop
shrb
mov
add
test
mov
call
sub
pop
add
and
das
inc
pop
sbb
cli
addr16
rolb
or
and
hlt
add
mov
xchg
lods
and
push
sbbb
fsubrs
or
lods
pop
test
pop
enter
sub
es
cmc
in
mov
push
jb
cmp
push
mov
je
add
cmp
inc
push
sbb
pop
push
es
orb
mov
je
add
mov
and
add
jae
mov
out
sti
jns
add
push
mov
push
jo
add
fiaddl
sbb
pop
adc
dec
push
add
and
sti
xchg
test
roll
ret
testl
js
aam
pop
add
cmp
insb
out
adc
dec
mov
mov
mov
movsbl
in
loopne
cs
jb
sbbb
jo
into
aas
add
push
sub
lret
mov
inc
movsb
pusha
enter
add
fbld
inc
or
ds
adc
lods
movsl
or
aaa
jnp
iret
mov
bound
add
imul
jl
dec
mov
xor
movsb
orl
pop
mov
mov
add
imulb
add
out
mov
mov
mov
add
pop
push
cli
lcall
xchg
aaa
cmpsb
dec
clc
cld
add
xchg
lods
add
jae
in
mov
or
pop
out
into
push
mov
loop
ds
mov
dec
add
xor
hlt
mov
mov
cmp
push
pushf
sbb
repz
jns
add
sbb
test
daa
mov
aad
cwtl
aaa
ret
mov
jl
jge
xor
outsl
test
adc
or
jp
sbb
lods
add
mov
pop
dec
push
fcmove
pop
push
add
imul
inc
loop
in
mov
pop
aad
jl
sar
pop
mov
add
lods
insb
inc
cs
add
dec
xor
loope
aad
inc
jno
sahf
mov
mov
push
hlt
cld
add
mov
mov
add
insl
adc
push
mov
pop
sub
jb
push
push
adc
xchg
add
push
push
fdivrs
in
xchg
mov
stc
add
test
jg
mov
ds
add
cmp
pop
cwtl
out
cli
adcl
add
mov
fnsave
rolb
loope
pusha
cwtl
push
bound
push
xor
fisttpl
rcrb
push
mov
add
add
and
pop
jo
add
cmp
pop
testl
push
mov
mov
test
enter
add
pop
hlt
sbb
add
dec
push
pop
leave
test
inc
aad
loopne
add
and
inc
add
mov
cmpsl
add
movsl
inc
jmp
pop
add
mov
out
les
rolb
cmp
mov
push
inc
or
addb
add
xor
not
add
xchg
xor
rcrl
cmpsl
add
ret
cwtl
xor
mov
add
leave
sub
pop
add
inc
cmp
mov
add
aad
std
ljmp
sub
add
jp
fdivs
out
addb
inc
add
or
sbb
xchg
pop
std
stos
pusha
inc
pop
add
andl
sbb
xor
xor
sbb
cmpsb
ds
pop
mov
mov
push
mov
sbb
dec
or
fcmovbe
inc
pusha
outsl
str
scas
and
inc
add
sbb
mov
imul
lods
push
mov
enter
je
inc
mov
icebp
pop
jle
adc
and
add
ret
sub
push
mov
movsb
popa
pop
lock
and
jnp
leave
mov
xchg
push
sbb
add
cld
jns
sbb
lcall
inc
aam
imul
andb
int
add
mov
add
sbb
fiadds
push
jl
cmp
in
lea
inc
loopne
add
dec
adc
out
and
pop
mov
cmpsl
sub
scas
and
or
add
xlat
pop
je
lods
test
cmp
push
out
fiadds
cmp
mov
hlt
inc
mov
adc
add
mov
mov
pushf
push
les
pusha
std
add
jne
mov
stos
fsubl
daa
mov
jnp
sbb
push
push
subb
add
push
push
jnp
sbb
lcall
jb
xchg
or
dec
adc
inc
sub
push
sti
mov
fldl
ficompl
leave
mov
add
cvtpi2ps
sarl
mov
push
cmp
xlat
rolb
add
imull
arpl
sar
jo
lret
pop
cld
jecxz
jmp
sub
and
jno
inc
pop
cmp
dec
add
pop
js
in
mov
ret
dec
add
adc
xor
adc
mov
jp
imul
cmpsl
es
and
jno
int
inc
jp
mov
dec
loope
sbb
xchg
add
loopne
add
test
and
add
adc
add
dec
pop
adc
or
inc
inc
aam
icebp
ret
popf
sub
ss
and
mov
push
add
ds
les
adc
lods
and
pop
and
pop
sbb
mov
adcb
adcb
and
test
