add
inc
add
add
jns
add
add
add
add
add
or
jae
jb
outsb
addr16
inc
add
or
fs
je
imul
inc
add
xor
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
push
add
mov
push
call
testb
je
movzwl
mov
add
pop
ret
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
call
add
inc
popa
jae
dec
dec
and
jb
popa
outsb
and
imul
xor
xor
and
xor
xor
jb
and
push
imul
push
jb
data16
imul
outsl
data16
popa
jb
and
gs
outsl
jo
outsb
je
lock
ret
lea
mov
mov
mov
mov
mov
mov
ret
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
ret
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
ret
lea
fildll
fildll
fildll
fildll
mov
mov
fistpll
fistpll
fistpll
fistpll
ret
lea
fildll
fildll
fildll
fildll
fildll
mov
mov
fistpll
fistpll
fistpll
fistpll
fistpll
ret
nop
fildll
fildll
fildll
fildll
fildll
fildll
mov
mov
fistpll
fistpll
fistpll
fistpll
fistpll
fistpll
ret
lea
fildll
fildll
fildll
fildll
fildll
fildll
fildll
mov
mov
fistpll
fistpll
fistpll
fistpll
fistpll
fistpll
fistpll
ret
nop
fildll
fildll
fildll
fildll
fildll
fildll
fildll
fildll
mov
mov
fistpll
fistpll
fistpll
fistpll
fistpll
fistpll
fistpll
fistpll
ret
lea
sub
add
add
neg
jns
fildll
fildll
fistpll
fistpll
add
js
fildll
fistpll
mov
mov
ret
lea
sub
add
add
neg
fildll
fistpll
add
js
mov
mov
ret
nop
mov
mov
cmp
mov
mov
je
ret
nop
sub
mov
shr
movzbl
mov
rol
and
jne
mov
mov
rol
and
ret
mov
sub
shr
sub
sbb
and
add
lea
mov
cmp
mov
mov
mov
mov
je
ret
nop
nop
sub
mov
shr
movzbl
mov
shl
or
mov
mov
shl
or
ret
cmpl
jne
ret
nop
nop
mov
testb
jne
orl
mov
sub
lea
mov
mov
cmp
jae
ret
nop
nop
mov
and
cmp
jb
call
mov
mov
and
mov
sub
add
jmp
ret
nop
push
mov
call
push
push
push
push
call
test
je
mov
mov
movl
mov
mov
mov
mov
add
mov
sub
movl
mov
sub
mov
sub
mov
mov
or
mov
sub
mov
pop
ret
xor
mov
xor
pop
ret
nop
cmpb
je
jmp
push
call
mov
mov
xor
call
test
je
push
call
mov
mov
xor
call
test
jne
ret
mov
push
push
push
push
mov
lea
dec
add
and
push
push
push
push
call
mov
test
je
mov
mov
or
mov
call
mov
movl
mov
mov
mov
movb
add
mov
pop
pop
pop
pop
ret
mov
push
push
push
mov
sub
call
mov
mov
mov
push
push
push
call
test
je
mov
mov
xor
jmp
or
movb
pop
pop
pop
ret
lea
shr
cmp
push
mov
ja
test
movzbl
lea
jne
mov
mov
mov
cmp
je
addl
and
mov
mov
je
movb
pop
ret
nop
nop
nop
mov
movzwl
add
cmp
ja
addl
mov
movb
mov
pop
ret
nop
nop
nop
mov
mov
mov
movb
pop
ret
nop
nop
mov
lock
je
add
mov
lock
je
add
mov
lock
je
sub
push
call
mov
lock
je
push
call
jmp
nop
nop
nop
push
push
cmpb
je
mov
lock
je
push
call
mov
lock
je
push
call
jmp
nop
nop
nop
movsbl
and
je
bsf
lea
mov
bsf
lea
lea
mov
mov
mov
mov
cmp
jne
mov
rol
and
jne
btr
mov
and
cmp
jb
mov
movzwl
sub
lea
lea
mov
mov
call
jmp
movzwl
mov
cmp
jb
mov
movzwl
lea
cmp
jb
mov
sub
sub
mov
jmp
movzwl
mov
call
mov
test
jne
mov
mov
pop
pop
pop
ret
andb
lea
mov
xor
mov
mov
mov
movl
mov
lea
movzwl
lea
mov
add
sub
mov
movb
mov
pop
pop
pop
ret
nop
mov
lock
je
push
call
mov
lock
je
push
call
jmp
nop
nop
cmp
ja
lea
and
add
test
jne
lea
mov
shr
shr
mov
shl
and
je
and
bsf
or
jmp
nop
nop
mov
mov
shl
and
je
bsf
mov
bsf
mov
shl
or
jmp
nop
mov
sub
jb
mov
sub
mov
mov
or
mov
jmp
mov
call
movb
pop
ret
push
push
lea
mov
mov
mov
mov
cmp
jne
mov
rol
and
jne
btr
mov
and
mov
sub
je
lea
lea
mov
mov
cmp
jb
call
jmp
nop
nop
nop
andb
lea
mov
movb
mov
pop
pop
pop
ret
pop
test
jns
xor
ret
mov
test
mov
push
mov
jne
test
mov
jne
subl
mov
je
test
mov
lea
mov
je
xor
mov
pop
ret
nop
mov
mov
mov
mov
mov
movb
xor
pop
ret
nop
nop
test
je
mov
mov
mov
mov
xor
cmp
jne
mov
mov
mov
mov
mov
jmp
nop
nop
nop
mov
lock
je
push
push
push
call
pop
pop
mov
lock
je
push
push
push
call
pop
pop
jmp
nop
nop
mov
lock
je
push
call
mov
lock
je
push
call
jmp
nop
nop
test
jne
and
test
mov
push
mov
jne
testl
mov
jne
or
mov
testb
jne
cmp
je
lea
mov
mov
mov
mov
call
movb
xor
pop
pop
ret
nop
lea
and
add
cmp
jb
call
jmp
nop
mov
sub
add
cmp
jb
mov
call
jmp
cmpl
jne
sub
mov
mov
mov
mov
movb
push
push
push
call
cmp
sbb
pop
pop
ret
nop
nop
nop
lea
call
movl
movl
mov
movb
xor
pop
pop
ret
nop
nop
pop
test
je
mov
ret
mov
test
push
push
mov
jne
mov
movzwl
sub
cmp
jb
lea
cmp
jb
pop
pop
ret
nop
mov
mov
call
test
je
mov
mov
mov
mov
call
mov
call
mov
pop
pop
ret
nop
nop
lea
push
mov
xor
sub
adc
and
add
call
test
je
cmp
jbe
mov
movzwl
sub
mov
mov
mov
call
mov
call
mov
pop
pop
pop
ret
nop
test
jne
mov
and
push
lea
sub
and
cmp
push
ja
lea
cmp
jb
pop
pop
pop
pop
ret
nop
nop
nop
cmp
jae
cmp
jb
mov
lea
and
add
add
sub
cmpb
je
mov
lock
je
push
push
call
pop
mov
lock
je
push
push
call
pop
jmp
mov
and
or
mov
mov
mov
test
jne
or
mov
jmp
nop
mov
and
add
add
cmp
jb
call
mov
lea
mov
cmp
jb
lea
mov
call
movb
mov
pop
pop
pop
pop
ret
mov
mov
call
test
je
mov
mov
mov
mov
call
mov
call
mov
pop
pop
pop
pop
ret
mov
test
je
and
lea
cmp
ja
cmpb
je
mov
lock
je
push
push
push
call
pop
pop
mov
lock
je
push
push
push
call
pop
pop
jmp
mov
and
mov
test
je
and
lea
cmp
ja
cmp
jb
mov
push
push
call
pop
pop
mov
shr
add
xor
sub
adc
and
lea
and
add
lea
sub
ja
andl
add
jmp
nop
nop
mov
lea
mov
mov
cmp
jb
add
call
or
mov
movb
mov
pop
pop
pop
pop
ret
nop
nop
movb
mov
shr
add
xor
sub
adc
and
add
mov
mov
push
call
pop
test
je
cmp
jbe
mov
mov
mov
mov
mov
call
mov
call
mov
pop
pop
pop
pop
ret
nop
test
jne
sub
cmp
jbe
mov
shr
add
xor
sub
adc
and
add
mov
push
call
pop
test
je
cmp
jbe
mov
mov
mov
mov
mov
call
mov
call
mov
pop
pop
ret
shr
cmp
jb
mov
pop
pop
ret
mov
mov
call
test
je
cmp
jbe
mov
mov
mov
mov
mov
call
mov
call
mov
pop
pop
ret
nop
nop
nop
xor
pop
pop
ret
lea
push
lea
and
call
cmp
sbb
lea
or
cmp
jae
neg
fldz
fstl
add
js
mov
ffree
pop
ret
mov
mov
sub
mov
and
add
mov
mov
sub
mov
and
test
jne
xor
ret
lea
cmpl
je
mov
cmp
jb
mov
add
cmp
jae
add
ret
cmpl
je
mov
jmp
xor
ret
lea
push
push
mov
add
mov
mov
cmp
jne
mov
cmp
jbe
mov
mov
sub
mov
and
add
movzwl
sub
mov
pop
pop
ret
mov
dec
mov
pop
pop
ret
mov
push
mov
add
mov
mul
shr
mov
and
shr
lea
add
mov
or
mov
mov
cmp
sbb
shr
and
or
or
mov
lea
lea
cmp
sbb
shr
and
or
or
mov
lea
lea
cmp
sbb
shr
and
or
or
mov
lea
lea
cmp
sbb
shr
and
or
or
mov
lea
lea
cmp
sbb
shr
and
or
or
mov
lea
lea
cmp
sbb
shr
and
or
or
mov
lea
lea
cmp
sbb
shr
and
or
or
mov
lea
lea
cmp
sbb
shr
and
or
or
mov
lea
cmp
sbb
shr
or
mov
lea
pop
ret
lea
push
push
mov
mov
mov
mov
call
mov
add
pop
pop
ret
mov
push
mov
push
push
mov
mov
mov
mov
add
mov
mov
cmp
jb
mov
mov
add
add
cmp
jae
push
mov
add
push
mov
add
push
call
cmp
jge
mov
mov
mov
add
mov
add
cmp
jbe
mov
cmpl
jne
mov
testb
je
mov
testb
jne
mov
add
cmp
je
xor
jmp
mov
test
je
add
mov
test
je
mov
push
lea
mov
sub
call
pop
test
jne
xor
jmp
mov
pop
pop
pop
ret
lea
push
mov
add
push
mov
xor
mov
cmp
jb
push
xor
mov
call
pop
test
jne
xor
mov
pop
mov
pop
ret
mov
cmpb
je
jmp
push
call
mov
mov
xor
call
test
je
push
call
mov
mov
xor
call
test
jne
cmpl
jne
push
push
push
push
call
mov
cmpl
setne
ret
lea
push
mov
call
test
je
mov
cmpl
jge
mov
mov
mov
mov
mov
incl
mov
jmp
xor
movb
pop
ret
push
push
push
mov
mov
xor
cmpl
je
call
test
je
mov
mov
dec
test
jl
inc
xor
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
decl
mov
jmp
inc
dec
jne
movb
mov
pop
pop
pop
ret
mov
push
mov
add
push
push
push
mov
mov
mov
sub
shr
shl
mov
lea
lea
lea
mov
call
jmp
mov
sub
testb
jne
mov
call
test
jne
mov
movb
xor
mov
call
mov
test
jne
mov
cmpl
jae
mov
add
mov
mov
cmpl
jle
mov
mov
movzwl
sub
cmp
jle
mov
add
mov
movb
mov
test
jle
mov
cmpb
je
mov
cmpb
jb
mov
cmpb
jb
xor
jmp
mov
mov
incl
decl
jne
cmpb
je
mov
cmpb
jne
mov
jmp
mov
cmp
je
cmpl
je
inc
cmp
jle
cmp
jg
mov
jmp
xor
incl
mov
mov
movzwl
add
mov
cmp
jbe
pop
pop
pop
mov
pop
ret
mov
push
mov
push
mov
add
push
dec
jne
mov
add
push
push
push
lea
xor
mov
call
lea
xor
mov
call
xor
mov
movb
mov
jmp
mov
call
mov
test
je
mov
sub
mov
test
jne
test
je
push
mov
call
pop
jmp
cmpl
jge
and
sub
mov
mov
call
test
jne
movb
mov
mov
mov
incl
mov
call
mov
test
jne
mov
cmp
jne
mov
jmp
mov
add
call
test
jne
movb
mov
and
sub
sub
mov
mov
incl
mov
cmp
je
cmpl
jl
cmpb
jne
movb
xor
mov
lea
mov
mov
call
mov
movl
movl
lea
mov
mov
movzwl
sub
mov
movb
mov
mov
mov
lea
cmp
ja
cmpl
jbe
cmpb
jne
mov
mov
mov
call
mov
movb
cmpb
jne
movb
inc
movb
inc
mov
inc
mov
call
mov
movb
inc
movb
inc
movb
inc
mov
mov
call
mov
mov
mov
mov
call
mov
movb
jmp
movb
inc
movb
inc
mov
sub
jb
je
jmp
mov
mov
mov
call
mov
jmp
mov
mov
mov
call
mov
jmp
lea
mov
call
movzbl
lea
mov
call
mov
movb
inc
movb
inc
movb
inc
mov
mov
call
mov
dec
sub
cmp
jne
mov
mov
addl
addl
decl
jne
cmpl
jle
cmpb
je
movb
inc
movb
inc
movb
inc
movb
inc
mov
mov
mov
call
mov
mov
dec
test
jb
inc
movl
lea
cmpl
je
movb
inc
movb
inc
mov
mov
call
mov
lea
cmp
ja
incl
add
dec
jne
mov
mov
mov
call
push
push
lea
push
push
call
pop
pop
pop
mov
pop
ret
add
inc
outsb
and
gs
arpl
and
insl
outsl
jb
and
imul
popa
jae
outsl
arpl
jb
gs
add
add
and
gs
arpl
and
popa
insb
insb
and
outsl
arpl
insb
gs
imul
jb
cmp
jns
gs
and
add
add
imul
outsb
add
jb
outsb
add
push
push
jp
jae
outsl
data16
gs
arpl
and
imul
insl
gs
and
and
outsl
arpl
and
cmp
add
add
or
outsb
gs
arpl
and
insl
outsl
jb
and
imul
push
push
xor
xor
mov
cmpb
je
testb
jne
movzwl
shr
mov
add
add
cmp
jbe
mov
inc
cmp
ja
mov
inc
add
cmp
jne
pop
pop
ret
mov
push
push
push
mov
mov
cmpl
jne
movl
lea
mov
lea
mov
xor
mov
movl
movzwl
add
add
lea
add
and
add
cmp
jae
mov
add
shr
cmp
jbe
mov
mov
mov
shl
mov
shl
add
mov
movzwl
movzwl
mov
shl
lea
add
and
add
cmp
jae
mov
cmp
jbe
mov
mov
sub
movzwl
mov
xor
div
imul
add
and
add
mov
add
dec
jne
call
movl
movl
mov
mov
mov
mov
mov
add
dec
jne
movl
movl
pop
pop
pop
ret
lea
push
push
push
push
mov
mov
mov
jmp
mov
push
push
push
call
mov
cmp
jne
mov
mov
mov
mov
mov
mov
movl
xor
mov
add
dec
jne
mov
mov
mov
mov
mov
mov
mov
add
dec
jne
mov
jmp
mov
push
push
push
call
mov
cmp
jne
mov
mov
pop
pop
pop
pop
ret
cmpl
je
mov
push
call
xor
mov
cmpb
je
call
cmpl
je
push
push
mov
push
call
xor
mov
call
ret
lea
test
jle
call
test
je
repz
mov
jmp
xor
repz
nop
test
je
call
test
jne
repz
mov
jmp
ret
mov
test
je
test
je
push
mov
call
pop
or
je
mov
ret
mov
jmp
mov
mov
call
or
jne
ret
mov
jmp
test
je
push
mov
call
pop
or
je
mov
ret
lea
mov
call
ret
push
push
mov
mov
and
cmpl
je
mov
mov
call
test
jne
call
mov
jmp
cmp
ja
movzbl
movzbl
movzbl
mov
call
pop
pop
ret
lea
and
mov
jmp
ret
push
mov
call
mov
pop
ret
cmp
je
cmp
ja
sub
jg
jmp
fildll
fildll
cmp
jle
fildll
cmp
jle
fildll
fistpll
fistpll
fistpll
fistpll
ret
nop
nop
sub
out
inc
add
sub
repz
add
add
sub
add
sub
add
sub
dec
or
fildll
push
neg
and
lea
pop
fildll
fistpll
add
jl
fistpll
pop
fistpll
ret
jle
cmp
ja
sub
cmp
lea
jbe
sub
push
fildll
fildll
add
and
sub
fildll
fistpll
sub
jg
pop
fistpll
fistpll
ret
movzbl
mov
ret
movzwl
mov
ret
mov
mov
mov
mov
ret
mov
mov
ret
mov
mov
mov
mov
ret
mov
mov
mov
mov
ret
mov
mov
mov
mov
ret
fildll
fistpll
ret
lea
push
push
mov
xor
movzwl
cmp
jb
cmp
ja
and
cmp
jne
mov
call
mov
test
jne
mov
call
mov
test
je
mov
call
jmp
cmp
je
mov
call
mov
pop
pop
ret
mov
cmp
mov
jl
mov
mov
mov
mov
sub
fldl
fstl
fstl
mov
and
sub
sub
add
add
neg
fstl
fstl
add
jl
ffree
ret
nop
nop
nop
test
jle
mov
and
neg
lea
jmp
nop
nop
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
ret
ret
lea
jmp
mov
push
xor
push
call
cmp
jne
push
call
and
cmp
je
cmp
jne
mov
mov
pop
ret
nop
push
mov
add
movzwl
mov
lea
push
push
push
push
push
call
test
jne
xor
push
push
pushl
mov
movl
lea
push
lea
push
push
push
push
mov
push
call
xor
pop
pop
pop
mov
push
mov
push
call
ret
jmp
jmp
movzwl
and
movzwl
and
or
mov
mov
pop
ret
push
dec
inc
push
push
inc
push
inc
pop
inc
outsl
jb
popa
outsb
fs
inc
gs
jo
imul
push
dec
popa
jae
push
popa
insb
jne
add
add
fninit
fldcw
ret
mov
push
push
mov
mov
xor
mov
inc
rep
pop
pop
ret
lea
test
je
mov
mov
call
ret
cmpb
jbe
push
push
push
push
call
ret
nop
cmpb
je
push
push
push
push
push
push
push
call
add
pop
ret
lea
push
push
push
push
call
add
pop
ret
lea
cmpb
jbe
push
push
jmp
ret
lea
test
je
mov
cmpb
je
cmpb
jne
movsbl
inc
inc
jmp
add
add
ret
mov
cmpb
jbe
push
push
push
call
push
push
push
push
push
call
pop
pop
pop
pop
ret
nop
cmpb
jbe
push
push
push
push
push
call
pop
ret
push
push
cmpb
jbe
push
push
push
push
call
pop
pop
ret
mov
mov
testl
jne
cmpl
mov
mov
je
cld
call
mov
test
je
call
test
je
mov
mov
cmpl
je
call
cmpb
jbe
cmpb
ja
lea
push
push
call
cmp
pop
je
mov
mov
mov
jmp
mov
mov
mov
cmpb
jbe
cmpb
ja
push
lea
push
push
push
call
cmp
pop
pop
pop
je
orl
push
xor
push
push
push
mov
push
push
push
push
mov
push
push
push
push
call
mov
call
pushl
mov
mov
mov
movl
add
call
jmp
jmp
call
mov
mov
mov
mov
jmp
mov
ret
mov
mov
testl
je
push
xor
push
push
push
push
push
pushl
mov
mov
mov
mov
push
push
push
push
mov
call
pushl
mov
mov
mov
movl
add
call
call
call
mov
mov
mov
add
xor
pop
pop
pop
mov
pop
pop
pop
pop
jmp
jmp
call
mov
mov
mov
mov
jmp
mov
ret
mov
mov
mov
testl
je
mov
movl
push
push
push
push
mov
add
call
call
pop
pop
pop
pop
mov
ret
mov
mov
movl
call
mov
mov
mov
mov
andl
cmpl
je
mov
call
call
xor
add
mov
pop
mov
mov
pop
pop
pop
pop
mov
ret
lea
call
mov
mov
mov
mov
call
pop
mov
xor
pop
mov
pop
pop
call
jmp
ret
push
mov
mov
mov
cmp
jg
je
cmp
jg
je
sub
je
sub
je
dec
je
jmp
add
sub
jb
je
jmp
cmp
jg
je
sub
je
dec
je
dec
je
jmp
sub
je
sub
je
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
movzbl
mov
call
pop
ret
mov
mov
testl
jne
cmpb
ja
lea
push
call
cmp
je
mov
cld
call
mov
push
push
push
push
call
mov
cmpl
mov
mov
je
mov
test
je
mov
call
test
je
mov
call
mov
test
je
call
mov
mov
mov
mov
jmp
xor
ret
lea
xor
lea
mov
mov
mov
movl
mov
mov
ret
lea
xor
mov
test
je
mov
cmp
jne
mov
mov
ret
mov
cmp
je
cmp
jne
mov
mov
ret
push
mov
push
push
push
mov
test
je
mov
mov
xor
push
push
pushl
mov
test
jle
dec
mov
mov
test
je
call
test
jg
xor
pop
pop
pop
mov
jmp
jmp
call
call
call
pop
pop
pop
pop
ret
mov
push
mov
push
push
push
push
mov
test
je
mov
xor
mov
mov
xor
push
push
pushl
mov
cmp
jle
mov
mov
inc
mov
test
je
call
cmp
jg
xor
pop
pop
pop
mov
jmp
jmp
call
call
call
pop
pop
pop
pop
pop
ret
nop
movl
movl
mov
xor
mov
mov
mov
mov
call
movb
call
ret
push
push
push
mov
mov
mov
mov
mov
cltd
idiv
add
movzbl
mov
mov
mov
cltd
idiv
mov
dec
test
jne
mov
mov
mov
and
movzbl
movzbl
mov
mov
mov
xor
div
mov
dec
test
jne
pop
pop
pop
ret
xor
xchg
neg
sbb
inc
mov
mov
mov
pushl
pushl
mov
mov
rep
pop
pop
leave
ret
ret
mov
push
cmpb
je
cmpw
jne
cmpl
jbe
mov
call
push
lea
push
push
push
push
call
push
call
push
lea
push
push
push
push
call
push
call
pop
ret
cmpb
jne
push
push
push
push
call
pop
ret
add
incl
add
add
push
push
push
mov
mov
cmpb
jne
cmpl
je
mov
mov
xor
mov
call
cmpl
jne
cmpl
je
call
call
xor
mov
cmpb
jne
cmpl
jne
xor
mov
call
cmpb
jbe
cmpl
je
mov
test
je
mov
call
mov
mov
cmp
je
test
je
push
call
call
cmpb
jne
call
cmpb
je
call
cmpl
jne
cmpl
je
call
mov
push
call
mov
mov
mov
mov
rep
jmp
pop
pop
pop
pop
ret
mov
call
ret
nop
popl
jmp
ret
mov
test
je
movl
mov
dec
jl
lock
jne
push
lea
call
pop
ret
nop
push
push
mov
mov
mov
test
je
movl
mov
dec
jl
lock
jne
lea
call
add
dec
jne
pop
pop
ret
nop
test
je
mov
inc
jg
push
push
mov
call
mov
pop
push
mov
call
pop
pop
jmp
lock
xchg
test
je
mov
dec
jl
lock
jne
lea
call
ret
nop
test
je
mov
inc
jle
lock
xchg
test
je
mov
dec
jl
lock
jne
lea
call
ret
lea
test
jle
push
add
and
push
call
pop
movw
add
pop
mov
movl
ret
xor
ret
nop
push
push
push
mov
mov
mov
mov
call
mov
mov
test
je
mov
mov
call
mov
call
mov
pop
pop
pop
ret
mov
push
mov
push
push
push
push
mov
push
push
push
mov
push
call
pop
ret
nop
push
mov
push
push
mov
push
push
push
mov
push
call
pop
ret
nop
push
push
push
push
add
push
add
mov
mov
mov
test
jg
mov
call
jmp
lea
cmp
jge
push
lea
mov
mov
call
mov
test
jl
lea
mov
mov
call
jmp
mov
add
mov
mov
call
push
mov
mov
mov
call
mov
test
jge
xor
mov
mov
call
add
pop
pop
pop
pop
ret
push
mov
mov
call
pop
ret
nop
xor
test
je
push
cmp
je
cmp
je
cmp
je
cmp
je
add
jmp
inc
inc
inc
mov
pop
sub
jmp
ret
lea
xor
mov
inc
jmp
ret
nop
xor
test
je
mov
shr
jmp
ret
lea
test
je
mov
test
je
push
push
push
mov
mov
mov
mov
add
cmp
je
call
mov
mov
mov
add
call
pop
pop
pop
ret
call
mov
mov
jmp
ret
push
push
push
mov
mov
cmp
je
test
je
test
je
mov
mov
sub
ja
add
push
shr
je
mov
mov
cmp
jne
dec
je
mov
mov
cmp
jne
add
add
dec
jne
jmp
add
add
pop
and
je
mov
mov
cmp
jne
dec
je
cmp
jne
dec
je
and
and
cmp
jne
add
jmp
mov
sub
jmp
mov
sub
jmp
pop
cmp
jne
cmp
jne
shr
shr
cmp
jne
cmp
pop
pop
pop
ret
mov
test
je
mov
inc
jle
lock
ret
nop
test
je
ret
add
ret
mov
test
je
mov
dec
je
push
mov
mov
call
mov
mov
mov
push
mov
call
pop
mov
dec
jl
lock
jne
lea
call
mov
pop
mov
ret
lea
jmp
ret
mov
jmp
ret
mov
push
test
je
mov
test
je
dec
jl
cmp
jge
sub
test
jl
cmp
jg
add
mov
call
jmp
xor
jmp
mov
jmp
mov
call
pop
ret
ret
push
push
push
mov
mov
mov
call
mov
test
je
mov
dec
jl
cmp
jge
test
jle
sub
cmp
jle
mov
sub
add
lea
call
mov
mov
mov
sub
call
pop
pop
pop
ret
push
push
add
test
je
test
je
mov
mov
cmp
jl
test
jle
dec
add
add
mov
add
mov
neg
movzbl
mov
jne
sub
mov
cmp
je
cmp
je
add
cmp
jb
cmp
jb
xor
jmp
cmp
je
cmp
je
cmp
je
cmp
je
add
cmp
jb
cmp
jb
xor
jmp
add
inc
mov
sub
add
pop
pop
ret
add
add
xor
cmp
ja
mov
sub
add
pop
pop
ret
cmp
je
cmp
je
cmp
je
cmp
je
add
cmp
jb
cmp
jb
xor
jmp
sub
mov
cmp
je
cmp
je
add
cmp
jb
cmp
jb
xor
jmp
add
mov
movzwl
cmp
jne
add
jl
add
xor
cmp
ja
mov
sub
add
pop
pop
ret
add
mov
movzwl
cmp
jne
add
jl
inc
mov
sub
add
pop
pop
ret
nop
push
push
push
mov
mov
xor
test
jle
mov
test
je
cmpl
jne
sub
add
push
mov
call
pop
add
mov
mov
movb
jmp
mov
call
mov
mov
test
je
mov
mov
cmp
jl
mov
call
mov
call
mov
pop
pop
pop
ret
mov
mov
jmp
ret
test
je
push
push
call
test
je
ret
lea
xchg
test
je
push
call
ret
lea
mov
test
je
movl
push
push
call
pop
ret
lea
push
push
mov
mov
mov
test
je
movl
push
call
add
dec
jne
pop
pop
ret
lea
cmp
je
test
je
mov
shr
je
push
push
push
call
test
je
ret
push
push
push
push
add
push
add
mov
mov
mov
test
jg
mov
call
jmp
lea
cmp
jge
push
lea
mov
mov
call
mov
test
jle
lea
mov
mov
call
jmp
mov
mov
mov
call
push
mov
mov
mov
call
mov
test
jge
xor
mov
mov
call
add
pop
pop
pop
pop
ret
mov
test
je
push
push
push
call
test
je
pop
pushl
mov
call
ret
nop
xor
test
je
mov
jmp
ret
nop
test
je
mov
shr
ret
mov
push
push
push
mov
mov
xor
test
jle
mov
call
mov
mov
call
test
jle
cmp
jge
mov
mov
add
mov
mov
call
mov
mov
call
pop
pop
pop
ret
lea
xor
push
mov
push
push
mov
lea
mov
mov
mov
add
mov
mov
call
add
dec
jg
mov
pop
pop
pop
ret
lea
cmpl
je
call
ret
mov
call
ret
cmp
je
push
push
push
push
mov
mov
mov
xor
mov
mov
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
jmp
cmp
mov
jg
call
jmp
mov
call
jmp
cmp
mov
jg
call
jmp
mov
call
jmp
mov
add
call
dec
jg
jmp
push
mov
mov
mov
add
mov
mov
call
dec
jg
pop
jmp
push
mov
mov
add
mov
call
dec
jg
pop
jmp
mov
add
call
dec
jg
jmp
mov
mov
add
call
dec
jg
jmp
pop
pop
pop
pop
mov
jmp
pop
pop
pop
pop
ret
mov
cmpl
je
call
ret
mov
call
ret
push
push
push
push
mov
mov
xor
mov
lea
mov
xor
mov
push
mov
sub
jle
mov
add
add
call
mov
mov
mov
mov
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
mov
pop
pop
pop
pop
jmp
mov
add
call
mov
jmp
mov
add
call
mov
jmp
lea
add
call
mov
jmp
xor
mov
pushl
pushl
mov
mov
lea
add
call
pop
jmp
xor
mov
mov
push
mov
lea
add
call
pop
jmp
mov
add
call
mov
jmp
mov
mov
add
call
mov
add
add
dec
jne
pop
sub
jle
lea
add
call
pop
pop
pop
pop
ret
mov
push
push
push
push
mov
mov
mov
mov
mov
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
mov
pop
pop
pop
pop
jmp
mov
mov
call
add
add
dec
jne
jmp
mov
mov
call
add
add
dec
jne
jmp
mov
mov
call
add
add
dec
jne
jmp
xor
mov
lea
mov
mov
mov
pushl
call
add
add
dec
jne
jmp
mov
mov
mov
call
xor
mov
add
add
dec
jne
jmp
mov
mov
call
add
add
dec
jne
jmp
mov
mov
mov
call
add
add
dec
jne
pop
pop
pop
pop
ret
ret
nop
mov
jmp
ret
push
mov
pushl
call
pop
ret
nop
jmp
ret
mov
call
ret
mov
push
mov
add
push
push
push
mov
mov
mov
mov
mov
mov
mov
test
jg
test
jge
mov
call
mov
mov
call
jmp
xor
mov
test
je
sub
mov
mov
sub
movzbl
add
mov
mov
mov
mov
test
je
mov
jmp
xor
mov
imull
mov
mov
cltd
idiv
cmp
je
mov
call
addl
test
je
cmpl
jne
mov
cmp
jge
test
je
mov
add
mov
imul
add
mov
sub
mov
call
lea
mov
call
mov
jmp
decl
mov
call
mov
mov
mov
cmp
jge
mov
test
je
mov
imul
mov
add
xor
call
mov
push
mov
mov
mov
add
mov
call
jmp
mov
imul
mov
add
mov
mov
call
movl
add
mov
add
mov
sub
imul
mov
imul
add
xor
call
cmpl
jle
addl
decl
dec
test
jl
inc
movl
mov
push
mov
lea
mov
mov
call
incl
dec
jne
mov
mov
pop
pop
pop
mov
pop
ret
nop
push
addl
call
ret
nop
mov
test
je
movl
lock
jne
push
mov
xor
mov
mov
test
je
mov
test
je
mov
call
sub
call
pop
ret
mov
push
mov
test
je
lock
test
je
lock
jne
push
push
mov
incl
call
pop
pop
mov
pop
ret
nop
push
mov
add
push
push
push
mov
mov
mov
cmpl
je
xor
push
push
pushl
mov
mov
mov
call
xor
pop
pop
pop
mov
jmp
jmp
call
mov
mov
mov
cmpl
jne
pop
pop
pop
pop
pop
pop
ret
mov
mov
mov
mov
ret
mov
push
mov
push
mov
xor
push
push
pushl
mov
mov
mov
call
xor
pop
pop
pop
mov
push
mov
cmp
jne
mov
mov
mov
jmp
mov
test
je
mov
cmp
jne
mov
mov
mov
jmp
mov
test
jne
ret
jmp
jmp
pop
pop
ret
mov
mov
test
je
movl
push
push
mov
call
pop
ret
lea
test
je
push
push
mov
push
call
pop
mov
popl
test
jne
ret
mov
push
call
ret
mov
test
mov
je
mov
push
call
ret
jmp
mov
push
mov
xor
push
push
pushl
mov
incl
jne
mov
call
mov
call
mov
call
call
mov
call
xor
pop
pop
pop
mov
push
ret
jmp
jmp
pop
ret
lea
jmp
mov
jmp
mov
jmp
mov
jmp
mov
push
push
call
ret
lea
mov
ret
mov
push
call
mov
test
je
cmpl
jne
mov
call
mov
call
test
jne
mov
call
jmp
push
mov
push
call
pop
ret
mov
mov
test
jne
mov
mov
ret
call
mov
push
call
test
je
ret
mov
ret
push
call
test
je
ret
mov
call
ret
nop
push
mov
xor
mov
push
call
mov
mov
mov
xor
mov
xor
mov
call
mov
mov
call
pop
ret
lea
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
xchg
call
ret
nop
push
mov
xor
push
push
pushl
mov
incl
jne
cmpl
je
mov
push
call
xor
pop
pop
pop
mov
push
ret
jmp
jmp
pop
ret
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
mov
inc
add
or
je
inc
jb
popa
jns
add
add
add
add
add
add
adc
or
jne
arpl
outsb
jae
push
push
push
mov
xor
movb
call
mov
call
xor
push
push
mov
cltd
sub
sbb
pop
pop
push
push
mov
cltd
cmp
jne
cmp
pop
pop
jae
jmp
pop
pop
jge
movb
mov
test
je
pop
pop
pop
ret
nop
push
push
push
push
push
mov
mov
mov
mov
call
mov
mov
call
mov
call
push
push
push
call
push
push
push
call
mov
push
push
mov
push
call
mov
test
je
push
mov
push
call
mov
mov
push
mov
push
call
mov
push
call
mov
test
je
push
call
jmp
inc
cmp
jne
mov
pop
pop
pop
pop
pop
ret
add
jmp
add
add
cmp
xor
xor
xor
xor
xor
aaa
xor
xor
cmp
xor
cmp
xor
xor
add
add
cmp
xor
xor
add
add
add
xor
xor
add
add
push
push
push
push
push
mov
mov
mov
mov
call
mov
mov
call
mov
mov
call
push
push
push
call
push
push
push
call
mov
call
mov
push
mov
mov
mov
rep
pop
mov
mov
call
mov
mov
call
push
push
push
push
push
call
push
push
push
call
push
push
mov
push
call
mov
test
je
mov
mov
call
push
push
mov
mov
mov
rep
movsw
movsb
pop
pop
push
push
push
call
push
push
call
push
mov
push
call
mov
push
mov
push
call
mov
push
call
mov
test
je
push
call
mov
mov
call
mov
mov
mov
test
je
sub
mov
mov
call
mov
mov
mov
call
jmp
mov
call
inc
cmp
jne
pop
pop
pop
pop
pop
ret
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
xor
aaa
add
add
add
add
add
add
xor
xor
add
add
incl
add
add
add
add
add
ja
jae
add
add
xchg
xor
cmp
xor
cmp
outsl
pop
aaa
popa
sub
popa
jnp
imul
ds
sub
gs
popa
and
and
gs
cmp
aaa
imul
popa
and
imul
sub
gs
outsl
pop
outsl
and
outsl
and
gs
xor
and
popa
pop
xor
xor
pop
xor
aaa
outsl
pop
cmp
ss
sub
sub
gs
cmp
cmp
xor
pusha
xor
xor
xor
jl
gs
gs
add
add
add
add
add
add
add
add
add
add
add
xor
xor
xor
xor
xor
aaa
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
xor
xor
add
add
add
xor
add
decl
add
add
sub
imul
cmp
xor
cmp
xor
cmp
xor
cmp
aaa
xor
xor
xor
xor
pop
or
jns
neg
call
mov
inc
dec
mov
ret
mov
push
push
xor
div
dec
add
cmp
jb
add
mov
or
jne
pop
pop
sub
sub
jbe
add
mov
sub
jmp
mov
dec
jne
mov
ret
push
mov
sub
xor
push
xor
call
mov
pop
call
add
pop
ret
lea
test
je
sub
mov
ret
lea
push
mov
add
push
push
push
xor
mov
mov
call
xor
push
push
pushl
mov
mov
mov
call
mov
mov
call
push
push
call
push
push
push
push
call
mov
call
mov
lea
call
mov
lea
mov
call
cmpl
jbe
mov
jmp
mov
lea
push
sub
push
lea
call
add
push
mov
push
lea
call
push
push
call
lea
mov
call
mov
mov
call
xor
pop
pop
pop
mov
push
lea
call
lea
call
ret
jmp
jmp
pop
pop
pop
pop
pop
pop
ret
add
add
add
aaa
add
add
add
add
add
add
add
add
xor
xor
add
add
add
add
add
add
cmp
aaa
add
add
add
xor
cmp
add
cmp
xor
add
aaa
add
aaa
add
incl
add
cmp
xor
pop
xor
aaa
popa
sub
imul
cmp
popa
das
xor
xor
and
imul
popa
pop
xor
and
and
cmp
imul
in
add
push
push
mov
mov
call
mov
mov
movsl
movsl
movsw
push
push
call
push
call
xor
sidtl
movzbl
cmp
je
cmp
jne
mov
mov
pop
pop
mov
pop
ret
add
add
lcall
add
add
xor
xor
xor
cmp
xor
xor
xor
xor
cmp
xor
cmp
xor
xor
ss
mov
call
mov
mov
call
call
push
push
call
call
ret
add
jl
add
xor
popa
add
add
xor
popa
add
add
xor
add
xor
outsl
add
add
xor
add
aaa
add
add
xor
add
cmp
popa
add
add
cmp
outsl
add
add
xor
popa
add
add
xor
add
add
xor
add
aaa
add
cmp
add
add
xor
imul
xor
imul
add
add
push
push
push
mov
mov
mov
rep
movsb
mov
mov
movsl
movsl
movsl
movsb
push
push
push
call
push
push
call
xor
push
push
push
push
call
test
je
mov
mov
pop
pop
pop
ret
add
sub
xor
js
imul
outsl
cmp
aaa
popa
sub
insl
aaa
popa
pop
jae
popa
and
jge
xor
imul
aaa
xor
cmp
xor
add
add
in
add
push
push
push
xor
mov
mov
mov
mov
call
mov
call
xor
push
push
pushl
mov
mov
mov
call
mov
mov
call
push
call
push
call
mov
call
push
call
mov
mov
add
add
mov
add
mov
xor
push
mov
mov
movsl
movsl
movsb
pop
push
mov
mov
mov
rep
movsb
pop
push
push
push
call
push
call
mov
mov
add
mov
add
add
add
mov
add
mov
lea
mov
call
mov
mov
call
jne
push
mov
mov
mov
rep
movsb
pop
push
mov
mov
movsl
movsl
movsl
movsb
pop
push
call
push
call
mov
mov
add
mov
add
add
movzwl
mov
mov
add
add
mov
mov
mov
add
xor
push
push
mov
cltd
add
adc
add
add
mov
mov
jmp
inc
jmp
xor
pop
pop
pop
mov
push
lea
call
lea
mov
call
ret
jmp
jmp
mov
pop
pop
pop
mov
pop
ret
add
incl
das
outsl
and
gs
imul
imul
popa
pop
xor
cmp
xor
ss
cmp
xor
pusha
aaa
popa
aas
xor
aaa
outsl
and
gs
gs
xor
xor
and
gs
gs
popa
pop
xor
sub
and
imul
cmp
cmp
aaa
imul
popa
aas
cmp
aaa
gs
gs
outsl
cmp
cmp
add
add
ljmp
add
xor
xor
sub
imul
gs
cmp
imul
popa
pop
xor
sub
imul
popa
cmp
popa
cmp
cmp
and
popa
and
outsl
and
outsl
inc
aaa
gs
cmp
xor
cmp
aaa
gs
outsl
pop
xor
xor
pop
aaa
popa
and
add
or
fs
imul
add
pusha
push
aas
ja
push
jae
and
ja
imul
insb
pusha
addr16
fs
sub
jns
js
arpl
data16
fs
pusha
arpl
sub
imul
cmp
arpl
push
push
js
push
pop
push
insl
jge
and
sub
outsb
sub
outsb
pop
jo
bound
add
dec
push
jle
sub
cmp
pusha
fs
and
arpl
sub
pop
fs
js
jb
jae
fs
ja
jns
arpl
jbe
push
sub
js
push
arpl
aas
jb
insb
cmp
insl
cmp
add
or
imul
outsb
imul
insb
add
add
in
add
push
push
push
xor
mov
mov
mov
mov
mov
mov
call
mov
call
xor
push
push
pushl
mov
mov
mov
call
mov
call
push
push
push
call
push
push
push
push
call
mov
test
je
sub
mov
cmp
jle
mov
mov
mov
mov
call
push
push
push
call
push
push
call
push
lea
mov
mov
call
add
lea
call
mov
mov
mov
call
jmp
mov
mov
call
mov
mov
call
push
push
push
push
call
push
push
push
call
mov
test
je
sub
mov
push
lea
mov
mov
call
add
mov
test
je
sub
mov
lea
call
mov
mov
mov
call
xor
lea
mov
inc
add
cmp
jne
xor
xor
cmp
jge
mov
mov
call
mov
mov
call
push
call
push
push
push
call
mov
test
je
sub
mov
mov
cltd
idiv
mov
movzbl
add
add
and
jns
dec
or
inc
mov
movzbl
mov
mov
mov
movzbl
mov
inc
cmp
jl
xor
xor
mov
test
je
sub
mov
push
lea
mov
mov
call
add
mov
test
je
sub
mov
lea
call
mov
mov
mov
call
mov
test
je
sub
mov
dec
test
jl
inc
mov
xor
mov
mov
call
mov
call
push
push
push
push
push
call
push
push
call
inc
and
jns
dec
or
inc
add
and
jns
dec
or
inc
movzbl
mov
mov
mov
movzbl
mov
mov
add
and
jns
dec
or
inc
movzbl
mov
xor
inc
decl
jne
mov
test
je
sub
mov
mov
xchg
call
mov
test
je
sub
mov
mov
call
mov
mov
call
xor
pop
pop
pop
mov
push
lea
mov
mov
call
lea
mov
call
ret
jmp
jmp
pop
pop
pop
mov
pop
ret
pop
add
add
add
insb
add
jo
je
push
add
jns
js
data16
add
add
jb
jae
outsb
add
jbe
js
insb
add
insl
add
jb
je
je
push
outsb
add
jb
jo
data16
jb
insl
add
push
add
add
xor
cmp
aaa
xor
xor
cmp
xor
xor
cmp
add
add
call
add
add
jnp
popa
jl
and
cmp
add
decl
popa
aas
cmp
cmp
xor
cmp
cmp
xor
ss
pop
aaa
imul
das
xor
sub
imul
xor
xor
cmp
aaa
gs
outsl
pop
cmp
cmp
xor
cmp
cmp
xor
jnp
imul
gs
ss
pop
xor
cmp
outsl
pop
xor
inc
xor
aaa
outsl
cmp
cmp
cmp
xor
and
imul
das
xor
add
xor
add
cmp
cmp
xor
aaa
add
add
add
add
add
add
add
cmp
xor
xor
add
add
add
add
add
add
add
add
add
add
decl
add
outsl
xor
outsl
xor
imul
popa
xor
outsl
cmp
outsl
cmp
imul
outsl
xor
outsl
xor
gs
popa
xor
xor
cmp
cmp
popa
xor
popa
xor
xor
outsl
xor
add
add
jmp
add
add
cmp
xor
xor
xor
xor
xor
xor
xor
aaa
xor
xor
aaa
xor
cmp
add
add
add
push
jbe
jb
jb
insl
add
imul
add
push
ja
data16
add
in
add
push
push
push
xor
mov
mov
mov
mov
mov
mov
call
xor
push
push
pushl
mov
mov
mov
call
mov
mov
call
push
push
push
call
push
push
push
push
call
mov
call
lea
mov
call
xor
xor
mov
mov
test
je
sub
mov
mov
test
jle
movl
mov
call
push
push
push
push
push
push
push
push
push
call
push
push
push
push
push
call
lea
mov
mov
movzbl
call
mov
mov
call
mov
dec
test
jl
mov
mov
call
push
push
push
push
push
push
push
push
push
call
push
call
mov
shl
add
mov
add
cmp
jl
mov
call
push
push
call
push
push
push
push
push
push
call
sub
mov
mov
shr
mov
mov
shl
mov
mov
cltd
idiv
mov
mov
mov
cltd
idiv
mov
lea
mov
call
mov
mov
call
mov
incl
dec
jne
xor
pop
pop
pop
mov
push
lea
mov
call
lea
mov
call
ret
jmp
jmp
pop
pop
pop
mov
pop
ret
add
lcall
add
add
xor
cmp
xor
xor
cmp
cmp
xor
cmp
cmp
xor
xor
xor
xor
add
cmp
add
ss
imul
imul
xor
popa
xor
imul
popa
cmp
outsl
xor
outsl
cmp
popa
cmp
imul
cmp
add
incl
add
xor
xor
xor
ss
cmp
inc
inc
inc
inc
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
push
push
push
push
push
push
push
push
pop
pop
pop
popa
bound
gs
imul
jo
jb
je
jbe
js
jp
das
add
add
add
add
bound
xor
popa
add
add
cmp
outsl
add
add
cmp
add
add
xor
outsl
add
imul
add
sub
add
add
xor
add
outsb
add
add
cmp
jae
xor
popa
add
arpl
add
das
add
xor
outsl
add
js
add
add
add
cmp
add
sub
jo
cmp
imul
xor
popa
add
data16
popa
add
add
jl
js
xor
outsl
add
add
add
sub
add
jnp
js
xor
outsl
add
add
xor
add
add
xor
add
xor
add
cmp
add
add
cmp
popa
add
add
xor
add
add
cmp
outsl
add
push
xor
popa
add
add
add
sub
add
sub
add
fdivrs
call
push
push
push
push
call
push
push
push
push
push
push
push
push
push
call
lea
movzwl
add
pop
ret
push
mov
add
push
push
push
mov
mov
call
xor
push
push
pushl
mov
mov
mov
call
push
push
push
call
push
call
mov
xor
mov
call
mov
xor
mov
call
mov
test
je
sub
mov
call
mov
mov
test
je
sub
mov
lea
call
mov
mov
call
push
lea
push
push
call
push
push
push
push
push
push
push
push
call
push
lea
push
call
movl
push
mov
push
call
lea
push
push
lea
push
mov
add
push
mov
push
call
mov
push
mov
push
call
mov
mov
add
mov
push
push
mov
mov
push
mov
mov
push
mov
push
call
mov
lea
push
mov
mov
push
mov
push
mov
push
mov
push
call
mov
call
mov
mov
movzwl
dec
test
jb
inc
mov
xor
lea
push
lea
mov
push
mov
add
push
mov
add
push
mov
push
call
test
je
lea
push
push
mov
push
mov
add
push
mov
push
call
inc
decl
jne
lea
push
push
lea
push
mov
add
push
mov
push
call
mov
mov
add
mov
push
mov
push
call
cmp
sbb
inc
test
je
mov
push
call
jmp
push
mov
push
call
xor
pop
pop
pop
mov
push
lea
call
ret
jmp
jmp
pop
pop
pop
mov
pop
ret
add
push
add
add
xor
popa
add
add
aaa
add
sub
add
cmp
js
xor
outsl
add
add
add
aas
add
add
add
cmp
add
add
cmp
outsl
add
jo
cmp
outsl
add
jbe
aaa
add
das
add
add
add
in
xor
push
push
pushl
mov
incl
jne
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
xor
pop
pop
pop
mov
push
ret
jmp
jmp
pop
ret
lea
push
mov
xor
push
push
pushl
mov
xor
pop
pop
pop
mov
push
ret
jmp
jmp
pop
ret
pop
add
add
pusha
inc
add
jo
add
add
add
add
cwtl
jo
add
inc
add
inc
add
add
.byte
xchg
pusha
inc
subl
jae
call
movb
movl
movl
movb
movl
call
test
je
call
call
movw
movw
movw
call
mov
call
mov
call
mov
call
mov
ret
lea
subl
jae
xor
mov
ret
lea
subl
ret
push
mov
mov
push
push
dec
jne
push
push
push
push
mov
call
mov
xor
push
push
pushl
mov
mov
mov
call
mov
mov
call
mov
cmpb
je
lea
mov
call
mov
lea
mov
call
mov
mov
call
mov
mov
mov
call
push
mov
mov
call
mov
dec
mov
xor
call
mov
mov
mov
test
je
sub
mov
mov
test
je
sub
mov
sub
cmp
jle
mov
mov
call
mov
mov
mov
call
cmpl
je
mov
mov
call
add
dec
jne
lea
mov
call
mov
push
lea
mov
call
mov
pop
call
mov
mov
lea
mov
call
mov
push
lea
mov
call
mov
pop
call
mov
mov
lea
mov
call
mov
push
lea
mov
call
mov
pop
call
mov
mov
lea
mov
call
mov
push
lea
mov
call
mov
pop
call
mov
mov
lea
mov
call
mov
push
lea
mov
call
mov
pop
call
mov
mov
lea
mov
call
mov
push
lea
mov
call
mov
pop
call
mov
mov
lea
mov
call
mov
push
lea
mov
call
mov
pop
call
mov
mov
lea
mov
call
mov
push
lea
mov
call
mov
pop
call
mov
mov
lea
mov
call
mov
push
lea
mov
call
mov
pop
call
mov
mov
lea
mov
call
mov
push
lea
mov
call
mov
pop
call
mov
mov
lea
mov
call
mov
push
lea
mov
call
mov
pop
call
mov
mov
lea
mov
call
mov
push
lea
mov
call
mov
pop
call
mov
mov
lea
mov
call
mov
push
lea
mov
call
mov
pop
call
mov
mov
lea
mov
call
mov
push
lea
mov
call
mov
pop
call
mov
mov
lea
mov
call
mov
push
lea
mov
call
mov
pop
call
mov
mov
lea
mov
call
mov
push
lea
mov
call
mov
pop
call
mov
mov
lea
mov
call
mov
push
lea
mov
call
mov
pop
call
mov
mov
lea
mov
call
mov
push
lea
mov
call
mov
pop
call
mov
mov
lea
mov
call
mov
push
lea
mov
call
mov
pop
call
mov
mov
lea
mov
call
mov
push
lea
mov
call
mov
pop
call
mov
mov
lea
mov
call
mov
push
lea
mov
call
mov
pop
call
mov
mov
mov
mov
call
mov
mov
call
cmpb
je
push
push
push
mov
mov
call
test
jne
call
test
jne
cmpb
je
call
test
jne
cmpb
je
call
test
jne
xor
lea
mov
call
lea
push
lea
mov
call
mov
pop
call
mov
call
lea
call
mov
mov
call
cmpl
je
mov
mov
call
inc
cmp
jne
lea
mov
call
mov
lea
mov
call
mov
mov
call
cmpb
je
mov
push
lea
push
call
mov
mov
call
mov
mov
call
xor
pop
pop
pop
mov
push
lea
mov
call
lea
mov
call
ret
jmp
jmp
pop
pop
pop
call
add
jmp
add
add
jb
jp
aaa
xor
xor
push
jns
aaa
xor
js
insl
imul
push
bound
jb
push
xor
dec
ja
outsl
addr16
jbe
inc
jns
dec
popa
dec
push
push
sub
xor
push
push
jns
jp
jp
dec
jo
pop
push
push
push
gs
inc
inc
push
xor
dec
push
jns
inc
dec
cmp
dec
arpl
dec
dec
xor
pop
pop
push
push
arpl
dec
jno
jbe
dec
popa
push
pop
xor
push
jns
jo
inc
jo
dec
inc
js
bound
push
push
insb
dec
push
inc
jb
inc
cmp
insb
cmp
push
push
xor
arpl
ja
pop
push
js
inc
jbe
insl
push
push
jno
dec
addr16
push
xor
pop
inc
cmp
popa
das
inc
cmp
xor
xor
jp
arpl
ja
inc
outsl
arpl
xor
push
aaa
inc
dec
jo
xor
push
push
push
inc
inc
ja
push
das
inc
imul
push
pop
inc
cmp
outsb
arpl
inc
jo
dec
jp
xor
push
inc
popa
jo
jbe
push
popa
xor
insl
xor
dec
cmp
sub
inc
dec
ja
pushw
xor
xor
inc
das
dec
dec
dec
push
inc
dec
push
pop
jno
ja
push
jne
dec
inc
ja
jbe
outsb
jp
pop
insb
dec
dec
jbe
push
dec
jb
push
push
push
imul
insb
dec
push
inc
data16
xor
gs
push
dec
xor
sub
jo
inc
push
xor
inc
push
sub
fs
cmp
dec
jno
je
sub
fs
push
xor
push
push
imul
ss
jp
jne
jbe
inc
push
inc
push
inc
jb
dec
xor
dec
jo
jo
push
imul
xor
dec
bound
dec
fs
add
decl
add
add
imul
data16
incl
add
add
add
push
add
add
add
add
add
pop
add
add
add
orb
add
mov
add
add
add
add
add
dec
add
add
add
orb
add
rolb
add
call
push
add
mov
add
add
add
rorb
add
fmull
add
call
add
xor
add
add
add
or
add
push
sldt
and
add
sldt
cmp
add
inc
sldt
push
sldt
pop
sldt
push
add
jbe
add
orb
xorb
add
cwtl
sldt
movsb
sldt
mov
add
mov
add
add
aam
add
loopne
add
in
sldt
clc
sldt
add
add
adc
add
sbb
add
adc
addb
add
sbb
add
xor
add
dec
push
add
pusha
push
add
js
add
nop
push
add
test
add
rolb
adcb
add
lock
add
or
add
and
add
cmp
add
push
pop
add
push
adc
addb
add
cld
adc
xorb
add
adc
add
push
adc
cmp
add
adc
add
sub
add
inc
or
orb
sbbb
sbbb
xorb
andb
orb
add
jle
add
mov
add
xchg
adc
sub
add
add
add
sbb
add
xor
add
dec
or
adc
add
fcoml
add
out
add
add
add
add
add
lock
subb
add
add
add
add
add
add
add
add
add
rorb
add
add
add
add
add
add
rorb
add
add
add
add
add
add
add
loopne
add
add
add
add
add
add
add
lock
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
and
add
add
add
add
add
add
add
xor
add
add
add
add
add
add
add
inc
or
add
add
add
add
add
add
push
or
add
add
add
add
add
add
pusha
or
add
add
add
add
add
add
jo
add
add
add
add
add
add
add
orb
add
add
add
add
add
add
nop
or
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
rorb
add
add
add
add
add
add
rorb
add
add
add
add
add
add
add
loopne
add
add
add
add
add
add
add
lock
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
and
add
add
add
add
add
add
add
xor
add
add
add
add
add
add
add
inc
or
add
add
add
add
add
add
push
or
add
add
add
add
add
add
pusha
or
add
add
add
add
add
add
jo
add
add
add
add
add
add
add
orb
add
add
add
add
add
add
nop
or
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
rorb
add
add
add
add
add
add
rorb
add
add
add
add
add
add
add
loopne
add
add
add
add
add
add
add
lock
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
and
add
add
add
add
add
add
xor
add
add
add
add
add
add
inc
or
add
add
add
add
add
add
push
or
add
add
add
add
add
add
pusha
or
add
add
add
add
add
add
jo
add
add
add
add
add
add
add
orb
add
add
add
add
add
add
nop
or
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
rorb
add
add
add
add
add
add
rorb
add
add
add
add
add
add
loopne
add
add
add
add
add
add
add
lock
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
and
add
add
add
add
add
add
add
add
add
xor
add
add
add
add
add
add
add
add
add
inc
or
add
add
add
add
add
add
add
add
add
push
or
add
add
add
add
add
add
add
add
add
pusha
or
add
add
add
add
add
add
add
add
add
jo
add
add
add
add
add
add
add
orb
add
add
add
add
add
add
add
add
nop
or
add
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
rorb
add
add
add
add
add
add
add
add
rorb
add
add
add
add
add
add
add
add
add
loopne
add
add
add
add
add
add
add
lock
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
and
add
add
add
add
add
add
add
xor
add
add
add
add
add
add
add
inc
push
add
add
add
add
add
add
add
push
push
add
add
add
add
add
add
add
pusha
push
add
add
add
add
add
add
add
jo
add
hlt
addl
add
add
add
add
add
add
push
add
add
add
add
add
add
add
in
add
add
add
lock
add
add
in
add
add
add
inc
popl
add
add
in
add
add
add
cwtl
xchg
add
push
add
add
add
add
add
add
xchg
add
push
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
in
add
add
add
call
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
test
add
in
add
add
add
cmp
add
in
add
add
add
mov
add
in
add
add
add
loopne
add
push
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
mov
add
in
add
add
add
xor
add
push
add
add
add
add
add
add
add
in
add
add
add
fadd
add
push
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
roll
add
add
in
add
add
add
sub
add
push
add
add
add
add
add
add
add
add
in
add
add
add
rcr
add
push
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
push
add
add
add
add
add
add
in
add
add
in
add
add
add
and
add
push
add
add
add
add
add
add
add
add
in
add
add
add
enter
push
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
push
add
add
add
add
add
add
stc
add
push
add
add
add
add
add
add
std
add
push
add
add
add
add
add
add
add
add
in
add
add
add
rolb
add
add
in
add
add
add
adc
add
push
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
in
add
add
add
adc
add
push
add
add
add
add
add
add
add
add
in
add
add
add
mov
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
in
add
add
add
or
add
in
add
add
add
pop
sub
add
add
in
add
add
add
mov
add
push
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
in
add
add
add
add
add
push
add
add
add
add
add
add
add
add
in
add
add
add
test
add
push
add
add
add
add
add
add
inc
add
push
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
in
add
add
add
clc
dec
add
push
add
add
add
add
add
add
add
add
in
add
add
add
mov
add
add
add
add
add
add
push
add
push
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
in
add
add
add
lock
add
push
add
add
add
add
add
add
add
add
in
add
add
add
cwtl
add
push
add
add
add
add
add
add
push
add
add
in
add
add
add
inc
outsb
add
push
add
add
add
add
add
add
add
in
add
add
add
mov
add
add
add
add
add
add
add
in
add
add
add
pusha
js
add
add
in
add
add
add
add
push
add
inc
add
add
push
add
inc
add
add
add
xor
xor
add
add
xor
xor
add
add
xor
xor
add
add
xor
xor
add
add
xor
xor
add
add
xor
xor
add
inc
add
add
add
add
xor
aaa
add
add
xor
cmp
add
add
xor
cmp
add
push
add
inc
add
add
add
xor
xor
add
add
xor
xor
add
add
xor
xor
add
add
xor
xor
add
add
xor
xor
add
add
xor
xor
add
inc
add
add
add
add
xor
aaa
add
add
xor
cmp
add
add
xor
cmp
add
push
add
inc
add
add
add
xor
xor
add
add
xor
xor
add
add
xor
xor
add
add
xor
xor
add
add
xor
xor
add
add
xor
xor
add
inc
add
add
add
add
xor
aaa
add
add
xor
cmp
add
add
xor
cmp
add
push
add
inc
add
add
add
xor
xor
add
add
xor
xor
add
add
xor
xor
add
add
xor
xor
add
add
xor
xor
add
add
xor
xor
add
inc
add
add
add
xor
aaa
add
add
xor
cmp
add
add
xor
cmp
add
push
add
inc
add
add
inc
add
add
inc
add
xor
add
inc
add
xor
add
inc
add
xor
add
inc
add
xor
add
inc
add
xor
add
inc
add
xor
add
inc
add
xor
add
inc
add
xor
add
inc
add
xor
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
push
add
inc
add
add
add
aaa
add
add
add
aaa
add
add
add
aaa
add
add
add
aaa
add
add
add
aaa
add
add
push
add
inc
add
add
push
add
inc
add
add
add
push
inc
push
shrb
mov
fdiv
in
fists
inc
ret
insb
cmpsl
sahf
fildl
daa
inc
and
xor
jle
movsb
sub
lret
xchg
adc
cmpsb
loop
jnp
jmp
inc
push
int
sbb
sub
push
cld
or
mov
or
xchg
ret
lret
cmpsl
lahf
inc
push
cmp
push
xchg
push
jmp
sbb
inc
pop
sbb
and
incb
sti
fs
mov
mov
test
inc
xor
inc
jl
mov
ljmp
sbbb
aas
pop
fwait
or
adc
dec
inc
stos
cmp
cmp
cmp
loope
sub
mov
mov
lret
cs
sar
jae
xchg
test
mov
fildl
adc
ret
imul
out
aas
or
out
mov
jp
jnp
push
jno
in
pop
push
ss
lahf
push
adc
xchg
add
xchg
mov
lret
jg
into
ret
fmull
pop
adc
sub
inc
push
dec
repz
mov
mov
cmp
add
insb
xor
testb
xchg
stos
push
xor
cwtl
sub
add
push
mov
jl
xchg
or
xor
sbb
pushf
iret
dec
pusha
inc
dec
jb
jns
and
mov
xchg
cmp
cmpsl
mov
mov
xchg
sub
mov
and
cmpsb
inc
pop
push
dec
push
bound
std
fstps
cmp
loopnew
pop
inc
dec
ror
jecxz
test
out
pop
stc
inc
roll
xor
ljmp
psrld
adc
movsb
xchg
ror
and
pop
jmp
mov
and
sub
xor
hlt
std
xchg
xchg
lret
xchg
sbb
stc
fistl
push
hlt
jb
adcb
adc
push
dec
ds
xchg
sbb
mov
push
les
sbb
push
push
ljmp
or
push
mov
into
in
or
pop
xor
bound
icebp
pop
push
mov
add
jae
adc
ss
sub
sub
and
jbe
out
roll
movsb
movl
loope
inc
lcall
sbb
mov
pop
jb
cmp
testl
rorl
mov
in
jb
push
outsl
jmp
scas
and
inc
inc
mov
leave
lret
cltd
xchg
sub
inc
fwait
adc
sar
ljmp
sub
test
mov
sbbl
xchg
fstpl
rorb
and
adc
insl
data16
pop
popa
ret
arpl
inc
loop
or
cmp
cmp
and
mov
mov
or
outsl
stos
jmp
cwtl
int3
adc
xor
cmp
dec
cmp
in
roll
push
sbb
ja
in
cwtl
je
addr16
add
clc
mov
dec
in
stc
inc
js
sbb
insl
lds
sarb
out
lods
push
pop
push
pop
out
std
mov
inc
push
push
aaa
lret
sub
fbld
dec
xor
adc
pop
scas
ret
and
lcall
cmp
mov
loope
xchg
push
stos
adc
enter
lea
addb
scas
xor
ret
sti
adc
clc
jp
sub
xchg
test
mov
ss
sbb
jge
inc
and
loop
jae
jne
jp
sub
and
ja
data16
and
sahf
xchg
mov
lock
mov
dec
add
sub
lcall
shlb
xchg
out
jle
xlat
test
mov
adc
and
shll
push
pop
adc
nop
mov
push
jb
ljmp
cmp
push
adc
and
sbb
xor
daa
push
test
aaa
push
push
test
adc
test
fmulp
push
pop
gs
enter
adc
add
mov
hlt
fdivrs
add
sbbb
adc
ret
sbbl
or
imul
add
jno
jecxz
mov
mov
dec
enter
arpl
pop
and
and
jge
js
push
jge
add
rol
jl
or
sub
cmp
das
les
sahf
mov
pop
sub
mov
dec
pushf
cmp
jbe
pop
data16
idivb
loop
cmp
cld
hlt
or
es
and
aaa
cmp
pop
call
out
mov
ja
dec
jno
push
sub
xchg
pop
call
push
mov
xor
jns
inc
adc
adc
mov
sub
mov
jno
lea
push
push
mov
dec
in
je
imull
subb
iret
pop
mov
cmp
fxch
pop
scas
jp
jmp
mov
dec
rcrb
repnz
mov
inc
cmpsl
mov
mov
and
push
mov
xor
mov
hlt
adc
stc
jmp
pop
push
test
ret
add
jge
mov
xchg
loope
test
dec
idivb
xor
addr16
mov
pop
call
add
xchg
idivb
pop
pop
pop
dec
mov
xchg
ljmp
pusha
mov
insb
lret
loop
sbb
iret
insb
push
adc
fmuls
das
mov
add
not
dec
out
cli
mov
daa
cmp
mov
movsb
sarl
push
add
out
add
movsl
fildll
adc
int3
loope
cmpsb
mov
cmpsb
addr16
std
mov
jg
sbb
jge
push
xor
fucomi
lds
shl
in
xor
mov
call
lret
add
cmp
addr16
in
stc
and
aad
packssdw
push
fs
or
add
add
jbe
sub
cld
add
push
sub
fwait
push
jge
xchg
aam
lcall
mov
mov
adc
adc
xlat
ljmp
mov
xor
add
lds
mov
rorb
es
cmc
jge
imul
aam
push
sbb
mov
repnz
fstpl
jle
popa
std
daa
movsl
sub
scas
lods
push
cmp
lods
fdivl
push
out
in
adc
push
mov
push
inc
jp
mov
inc
aam
xchg
shrb
ljmp
sbb
es
mov
pop
imul
xchg
fdiv
int3
push
jne
jo
mov
mov
idivl
inc
fwait
pusha
inc
mov
cmp
jge
sbb
inc
dec
mov
xchg
popa
jno
cmpsb
push
fisubrl
das
ja
enter
jmp
inc
ret
mov
add
jp
sbb
out
adc
test
mov
pop
loop
push
dec
repz
js
and
add
scas
xchg
movsl
js
adc
mov
sub
movsl
cmp
cwtl
or
push
mov
repz
push
cmp
sbb
mov
mov
sahf
jnp
mov
and
pop
in
fildl
js
inc
mov
popf
mov
fdivp
jbe
jbe
xor
xchg
jno
gs
lcall
cmp
xor
aas
sti
xlat
pop
push
push
fldl2t
push
movsb
add
sbb
mov
stos
mov
adc
aam
add
xor
nop
push
loope
mov
pop
sbb
adc
xchg
sbbl
pop
dec
dec
xlat
and
dec
xor
repnz
addr16
pop
mov
xor
int
out
mov
push
into
inc
or
push
movsl
out
mov
xchg
jb
gs
dec
adc
lret
add
out
cwtl
ljmp
pop
xchg
mov
test
not
repz
jo
popf
icebp
aaa
mov
mov
leave
xchg
push
into
inc
ljmpw
loop
fmuls
sub
cltd
jle
pop
and
mov
movsb
sub
loopne
mov
xchg
add
aas
cmp
push
adc
ds
mov
cmpsb
mov
out
or
fsub
vmwrite
mov
lret
sbbb
mov
xor
aad
arpl
int3
repnz
jno
out
in
inc
inc
je
add
or
into
stos
cmc
cmp
pop
out
aas
push
jbe
dec
push
dec
sbb
test
sub
movsl
add
fstps
pop
loope
adc
test
and
mov
stos
mov
stos
jl
and
pop
fadds
into
lret
in
data16
push
daa
or
neg
cmp
mov
mov
cmc
mov
jmp
pop
fiadds
jle
sbb
aam
je
push
std
pop
fildl
lods
push
cmp
dec
daa
adc
scas
aaa
push
pusha
in
or
inc
sub
mov
push
into
jns
in
adc
psubq
push
jecxz
cs
arpl
xchg
jle
mov
test
rclb
mov
inc
lods
adc
inc
cs
xchg
aaa
cmp
jns
fnstenv
gs
iret
jb
mov
or
outsl
xchg
repnz
pushf
mov
pop
push
popa
mov
xor
lods
js
adc
loope
jl
or
lods
adc
rcrl
sub
push
adc
in
pushf
popf
cli
adc
add
push
imulb
add
daa
pop
inc
and
xor
cmc
bound
ret
mov
aam
push
xchg
mov
popf
inc
test
cmp
jbe,pt
aas
popa
sbb
scas
sub
lea
rclb
fstpt
mov
flds
test
leave
cmc
ja
and
adc
xor
nop
adc
inc
jne
jecxz
sub
add
push
cli
aaa
in
sahf
sbb
repnz
clc
roll
dec
push
jns
call
inc
scas
push
jecxz
xchg
xchg
lcall
stc
xlat
sbb
icebp
xchg
data16
divb
imul
mov
mov
scas
and
push
pop
cltd
or
cmp
es
cs
jg
cli
pop
mov
fdivrl
mov
stc
push
or
stc
xor
lcall
imul
enter
fld
sbb
pop
and
push
jns
hlt
push
push
dec
pop
jge
mov
jmp
mov
int3
jo
mov
mov
push
and
cmp
ss
dec
lret
cs
aad
stos
sbb
push
xorl
loopne
jmp
movsb
cwtl
mov
xor
enter
or
scas
push
push
lock
jecxz
ret
cmpsl
cwtl
pop
lds
mov
jecxz
add
add
pop
jns
and
test
sbb
pop
std
mov
scas
call
in
jno
inc
out
push
inc
add
dec
sub
and
ljmp
ds
loope
push
clc
leave
out
int3
lods
dec
xor
jb
push
into
sbb
adc
gs
in
xlat
xchg
movsl
cmp
scas
bound
pushf
xchg
mov
mov
arpl
decl
fisubl
sbb
leave
mov
sub
movsl
mov
into
imul
andl
add
js
xchg
mov
fucomi
fists
loope
dec
mov
cmp
or
pop
aas
cltd
cwtl
filds
scas
cmc
lahf
clc
push
popf
fcoms
imul
inc
jns
pop
mov
ret
add
mov
fisubrl
ret
in
popf
cmpsb
mov
movl
insb
jl
pushf
mov
sub
lods
xor
add
fdivrl
lea
rcrl
rcrl
aad
test
negb
pop
mov
lds
ds
addr16
mov
lods
ljmp
push
sbb
std
int3
sahf
sbb
jg
dec
js
into
lds
push
push
aas
mov
pmaxub
dec
test
popf
adcb
mov
maxps
and
repnz
jo
lods
mov
mov
js
jmp
subb
mov
cmp
dec
pop
push
jae
xor
sbb
test
dec
stos
lret
leave
cmp
js
ljmp
in
loopne
mov
in
add
dec
add
mov
pop
loopw
push
or
rorb
sar
jae
add
inc
in
loop
jle
imul
loope
imul
sbb
pop
adc
mov
test
imul
mov
in
dec
stc
es
xlat
adc
mov
inc
loope
lret
aas
fwait
adc
and
jl
fnstenv
hlt
les
ret
push
ss
daa
cs
push
mov
add
jne
ret
stc
push
jecxz
dec
fidivs
mov
xchg
outsb
repz
cld
imul
jno
sub
mov
xchg
fildll
mov
jbe
dec
mov
into
push
xor
insl
cmp
xlat
ss
and
rolb
pop
jl
sbb
aas
adc
mov
iret
cmp
push
fstp
cmpsb
mov
lret
rcrl
sub
stos
dec
test
int
dec
adc
das
mov
imul
nop
jo
lods
xchg
aaa
mov
lret
fs
fbstp
mov
cmp
jne
outsl
stc
adc
mov
jbe
dec
xchg
xchg
xor
repnz
sarb
inc
vmread
das
mov
leave
mov
mov
int
xor
stos
mov
cltd
dec
fstp
out
mov
mov
push
daa
jno
add
enter
adc
dec
and
add
test
scas
jne
cmp
or
stos
xchg
ficomps
cmp
adc
in
pusha
in
inc
arpl
dec
loope
bnd
andl
cmp
in
sub
in
sub
icebp
bound
into
gs
jno
mov
cli
or
sbbl
fcomp
and
repz
xlat
xor
fldcw
push
sub
enter
push
jg
dec
pop
cld
mov
adc
sub
lock
shlb
movsb
or
push
xchg
jl
imul
jo
jmp
xor
push
enter
sub
cwtl
fsubr
cli
mov
adc
mov
sbb
sbb
icebp
pop
mov
cld
clc
addr16
adc
xor
xchg
fsts
add
sub
lcall
hlt
jne
inc
dec
xchg
das
jbe
pop
or
dec
mov
mov
cmp
test
insl
decl
jo
sbb
jbe
add
jp
mov
cmp
je
lahf
or
xchg
adc
push
in
push
aaa
cmp
fisttps
push
enter
cmp
dec
pop
xor
andl
movsl
jno
jecxz
inc
adc
xchg
sub
incl
cmp
cltd
orl
scas
roll
mov
cmp
or
inc
adc
call
add
outsb
mov
cld
das
outsl
sarl
dec
xchg
mov
cmp
or
xchg
int3
mov
pop
sub
cmp
mov
sub
cmp
jle
pop
insb
je
gs
jmp
scas
pop
mov
stos
xor
cmpsb
mov
xor
js
fsubr
mov
jg
mov
mov
mov
decb
sub
subb
cmp
adc
inc
cmp
sbb
ljmp
inc
js
ja
xchg
loope
pop
sbb
or
jmp
cmp
dec
in
sub
cmpsb
adc
shll
and
shrl
fidivrs
mov
sti
lcall
mov
mov
jp
test
mov
shrb
mov
mov
push
dec
fdivs
xchg
call
add
test
xor
and
and
sahf
jno
loope
push
mov
cmp
mov
rcrb
mov
cs
cmpsl
test
or
inc
mov
push
jp
cmp
pop
pop
cmp
inc
into
add
add
out
dec
mov
pop
daa
pop
pop
push
mov
pop
scas
jb
stos
push
sbb
dec
dec
pop
std
sub
jg
mov
jg
cmpsb
push
gs
dec
jg
mov
push
stc
push
notb
inc
mov
push
xor
call
mov
push
pop
sbb
mov
pop
iret
lods
push
ja
pop
imul
sbb
pusha
call
xchg
test
cli
push
xchg
or
sub
je
mov
mov
testb
pop
loopne
mov
and
mov
inc
shl
sub
aam
call
add
mov
mov
xchg
sbb
jmp
mov
ss
enter
shlb
aas
add
mov
ljmp
push
out
shrb
lds
lahf
cmp
xlat
adc
push
shrl
xchg
xor
xchg
push
or
jge
fbstp
xor
mov
out
movsb
and
jne
into
stc
loope
shrb
dec
fmuls
mov
inc
inc
stos
test
push
lds
sub
int
mov
add
pop
or
sbb
jae
and
mov
push
sub
cmpsb
mov
dec
shr
dec
adc
xchg
ret
dec
ja
movsb
ja
pop
mov
sbb
jb
addr16
sub
sub
cmp
jecxz
filds
sub
sub
arpl
adc
into
and
mov
cmp
stc
mov
orb
push
or
xchg
je
imul
pop
pop
fists
pop
add
cmp
jmp
gs
cmp
sbb
stos
jno
xchg
pop
push
pushf
lods
add
std
and
jl
fdecstp
outsb
push
push
sahf
arpl
nop
pop
push
roll
sub
hlt
jmp
dec
xchg
jb
dec
negl
mov
lds
pop
es
push
mov
pop
sbb
lods
cli
nop
and
push
xor
loope
call
jl
sub
jo
jnp
inc
inc
cmp
shl
sbb
mov
jbe
lret
adc
jge
andb
insb
out
pop
ss
ljmp
and
and
in
mov
inc
gs
mov
sahf
push
loopne
leave
jl
xchg
cld
loopne
xor
push
loope
xchg
cmpsb
pop
sub
xchg
mov
in
test
rclb
addr16
repz
mov
roll
test
xor
jl
jecxz
jp
fidivs
lretw
movsb
adc
dec
das
xchg
add
add
inc
push
outsb
and
cmp
outsb
iret
jp
out
mov
das
bnd
pop
movsl
mov
pop
xchg
shl
aaa
test
je
sbb
leave
scas
cmp
jo
mov
add
push
outsb
out
push
outsb
sbb
fnstenv
dec
aas
push
pop
add
jo
cwtl
fdivl
out
lods
arpl
lret
in
cmp
cmp
adc
add
or
mov
inc
pop
repnz
adcb
mov
xchg
icebp
pop
shrb
mov
push
addb
inc
test
pop
push
shr
jbe
lea
xchg
cmp
ret
sbb
test
sahf
adc
nop
mov
pop
jno
jge
daa
push
stc
mov
stc
or
add
lods
xchg
or
or
cltd
repz
jmp
daa
out
jns
cwtl
iret
ror
push
mov
push
sbb
scas
call
iret
std
aaa
lea
testl
int3
sub
dec
shrl
out
or
test
test
and
adc
add
adc
cld
jmp
rcrl
xor
fldcw
jnp
insb
or
xchg
stc
mov
das
push
in
adc
aas
add
sub
xor
jmp
insb
test
or
ret
ss
fdivrs
sarb
orl
mov
xor
mov
shrb
adcb
jl
mov
push
stos
mov
or
aam
lahf
or
sub
andl
jns
jbe
adc
mov
mov
hlt
sbb
jne
test
mov
lods
add
mov
mov
sahf
popf
cs
cmp
lcall
mov
jae
rcrb
pop
sub
fiaddl
mov
stos
jne
dec
lcall
cmp
add
jp
and
mov
out
sahf
cwtl
divl
cwtl
loopne
jb
xor
fwait
pop
or
int
lret
outsl
lds
pop
add
xor
lcall
or
and
pop
push
pop
cltd
or
enter
shll
adc
xchg
das
pushf
sbb
ret
loope
mov
dec
and
int3
mov
dec
stos
cmc
rcrl
mov
push
fnstenv
xchg
jg
mov
xchg
dec
rdpmc
push
xchg
cs
dec
push
adc
ss
ret
insb
out
xor
lea
ljmp
lds
push
icebp
pop
test
mov
push
je
pop
cmp
into
fisubrs
jo
int
inc
lods
mov
sbb
and
xchg
cltd
xchg
sbb
sbb
test
lret
jno
in
fbstp
scas
mov
pop
cmpsb
xchg
hlt
mov
cli
adc
sbb
test
lods
adc
mov
xor
scas
in
int
push
mov
pushf
es
in
pop
setg
cld
jmp
dec
or
cmp
push
inc
dec
xor
push
fnsave
push
outsl
es
pop
ds
fnstsw
sbbb
sti
mov
mov
js
pusha
les
pop
scas
jl
inc
jo
inc
mov
frstor
popa
push
out
ret
dec
push
cmp
cli
add
fistl
es
or
cmp
cmpl
pop
or
incb
xchg
std
das
cmc
mov
es
dec
call
inc
or
int3
xchg
mov
shl
jbe
adc
xchg
add
movsl
inc
sarb
ret
jbe
sub
fscale
outsb
arpl
leave
mov
lahf
adc
inc
fsubs
fcoms
xchg
jmp
lahf
mov
fidivrs
xchg
lcall
popa
aas
jmpw
pusha
cmp
pop
popf
pop
inc
scas
mov
dec
das
mov
outsl
cmp
movsl
pop
dec
mov
inc
imul
rcll
test
add
arpl
fildl
push
sub
test
and
pop
aam
aad
mov
inc
and
lds
mov
daa
loopne
sub
pusha
call
or
xor
movsl
fbstp
popa
dec
or
jb
mov
scas
xor
popa
lahf
mov
dec
jp
cmpl
cmp
stos
xor
stc
push
rcrb
into
jb
test
pushf
pop
xor
cmc
dec
imul
loope
aaa
aad
adc
add
mov
cmpsl
pop
lods
pop
push
scas
mov
loope
inc
fs
sbb
push
sbb
mull
mov
sub
mov
in
push
sub
push
loopne
movsb
push
stc
out
jge
push
in
and
dec
insl
cmp
sbb
scas
icebp
pop
sbb
je
inc
fnstsw
dec
out
mov
mov
cmpsb
adc
push
cmp
cmpsb
xchg
jmp
in
cmp
psubd
cld
and
adc
adc
add
cmp
pop
gs
jno
push
and
lcall
jecxz
cmp
ljmp
add
insl
lea
hlt
roll
mov
jecxz
xor
out
shl
adc
jecxz
in
mov
cmpsl
lahf
mov
fnstenv
sbb
push
or
pop
popa
mov
cltd
gs
mov
aam
sub
xchg
daa
int3
jae
lahf
or
dec
and
insb
jns
cwtl
or
or
push
xchg
lods
insb
cmp
jns
xor
add
dec
mov
adc
iret
adc
jbe
lret
push
outsb
push
ret
mov
mov
mov
push
nop
hlt
pop
rclb
imul
inc
sbb
stc
cli
mov
fwait
sub
lahf
ret
lahf
in
push
dec
inc
cltd
dec
je
add
test
jl
loop
notl
lock
lret
or
inc
mov
push
call
or
pop
das
mov
mov
mov
ljmp
pop
mov
nop
leave
jl
in
mov
pop
orl
cmp
mov
sub
or
popa
mov
lcall
pop
jmp
repz
jnp
iretw
pop
jl
out
fstl
lcall
rcrb
inc
loop
dec
mov
sub
jae,pn
int
fstl
and
and
je
add
psraw
or
cmp
lret
in
mov
mov
push
mov
cli
lods
dec
test
mov
ficoml
pop
hlt
inc
pop
inc
ret
add
repz
cmpsl
shlb
addr16
mov
add
imul
cmp
xchg
jge
inc
xorl
stos
mov
push
and
stc
dec
pop
or
jmp
sbb
fcomps
pop
mov
out
xor
mov
xchg
mov
leave
mov
das
push
inc
cwtl
cld
sbb
cmp
jl
jge
and
movsb
push
dec
aad
rcr
mov
dec
pop
in
jb
shlb
rcr
xchg
fcoml
pop
add
ftst
scas
js
sahf
pusha
jo
adc
cwtl
xor
xchg
shll
jmp
mov
pusha
aad
cmp
mov
repnz
or
hlt
pushf
jbe
mov
or
mov
sbb
lock
lcall
loopne
mov
xchg
test
xchg
cld
xchg
sbb
mov
hlt
or
lret
sbb
jp
mov
mov
jno
push
dec
cmp
mov
sub
mov
pop
cmpsb
insb
pusha
js
sub
mov
enter
es
out
pop
sub
and
fimuls
fdivrl
rorl
fisttps
in
pop
jae
mov
pop
add
stc
gs
rcr
xor
jge
mov
adc
and
ret
movsb
addr16
xchg
add
test
pop
add
adc
stos
sbb
nop
or
shl
mov
sub
push
mov
inc
jecxz
pusha
psrld
cmc
jb
dec
dec
push
xchg
push
imul
clc
mov
pop
lods
xchg
and
incl
ret
mov
push
adc
pop
adc
dec
jecxz
push
adc
insb
ds
aad
or
inc
call
xchg
jbe
test
into
xchg
mov
xchg
push
mov
fld
jae
push
inc
int3
mov
sbb
daa
fwait
jne
add
inc
iret
mov
hlt
movsl
orb
xor
adc
cmp
xchg
inc
dec
xchg
lods
fdivr
or
aad
out
test
or
fidivl
addl
dec
fwait
xchg
es
mov
inc
sub
adcb
mov
in
cmp
jge
fisubrs
lock
je
fisttpll
lds
mov
add
hlt
test
cmp
es
cwtl
loope
hlt
and
call
out
and
jns
pop
xor
in
push
in
dec
cmc
out
fidivl
pop
and
pop
fnstcw
xor
jp
es
jl
das
mov
mov
pop
imul
mov
cmpsl
pop
dec
ret
cmp
ret
jae
jae
add
loop
in
test
pop
ret
mov
cmp
add
pop
test
add
sbb
mov
mov
dec
mov
lahf
cmp
stos
xchg
pop
stc
jg
push
mov
inc
dec
call
mov
and
test
sar
je
sub
arpl
add
in
sbb
jns
sbb
cld
scas
push
jle
jecxz
cmp
loop,pt
out
push
sub
push
inc
sbb
scas
or
mov
push
mov
xor
inc
jecxz
addr16
mov
inc
addr16
mov
mov
mov
shl
in
es
ja
sub
jnp
push
push
shll
imull
or
ljmp
xchg
adc
mov
notb
lahf
in
ret
stos
xchg
sub
push
into
push
pop
rcrb
sub
mov
mov
insb
dec
and
std
jg
dec
je
shlb
sbb
ret
pop
das
and
test
addr16
cltd
in
test
enter
mov
xlat
sub
adc
mov
rorb
pop
add
mov
sbb
ret
pushf
cs
pop
std
outsb
sub
movb
dec
fildl
push
pop
ficoms
fcmovnbe
aam
rcl
rorb
xchg
frstor
leave
xchg
jb
xor
mov
int3
mov
imul
fldl
lcall
arpl
inc
mov
popf
xor
test
in
sbb
xchg
dec
ficomps
lahf
push
popf
ret
daa
sub
rcrl
cwtl
fdivr
mov
or
daa
aam
add
adc
cmp
movsl
test
mov
fnstsw
adc
mov
cld
fidivrs
mov
lcall
fistpl
loopne
inc
test
inc
ljmp
pop
sub
xor
les
xor
roll
push
jmp
push
mov
mov
mov
pop
sbb
mov
inc
jge
pop
or
es
add
pop
inc
in
outsl
lods
enter
pop
ds
jecxz
mov
test
jge
mov
xchg
adc
fsub
push
imul
mov
into
mov
mov
in
leave
gs
inc
movsl
or
xchg
pop
imul
push
sahf
xlat
xchg
ret
roll
mov
pop
aam
jne
stos
xchg
mov
xor
push
adc
data16
movsl
pop
add
addr16
test
rorl
mov
inc
xchg
mov
test
push
push
jg
sub
and
test
mov
enter
add
mov
rcl
sub
in
cs
aad
jns
in
xchg
out
jbe
jo
adc
push
xchg
cmp
insl
in
icebp
cmp
cmp
sub
cmp
or
cmp
dec
push
sub
ljmp
out
bound
out
aas
pop
call
lahf
jb
pop
fiaddl
and
jle
mov
push
jae
insb
add
leave
sbb
fwait
jmp
sub
or
pop
mov
popa
mov
nop
push
in
adcl
dec
jp
enter
sub
sub
adc
mov
add
inc
add
xor
dec
gs
mov
inc
pop
shll
lock
adc
jg
mov
dec
shlb
movsl
repnz
out
cmp
mov
pop
adc
add
xchg
sub
cmp
es
fisttpl
mov
adc
cmp
adc
mov
xchg
mov
cmc
and
popa
jno
push
and
stos
and
mov
jns
dec
fldt
jo
sbb
jecxz
imul
repnz
notb
sub
stc
dec
jle
scas
test
jnp
pop
aad
cld
fsubrs
data16
dec
imul
inc
jae
sar
aad
and
mov
fsubrs
inc
cmc
cmp
imul
sti
push
lea
jnp
xor
or
mov
sub
and
inc
lds
in
or
dec
adc
aaa
mov
mov
repz
cmp
and
fwait
nop
xor
mov
insb
out
xchg
pop
dec
je
rcrb
pusha
and
mov
andb
mov
ret
out
pop
shll
mov
xchg
mov
out
test
pusha
sub
mov
adc
mov
call
ret
jecxz
push
jno
mov
xor
loope
fdivr
adc
fwait
pushf
and
scas
and
fmul
mov
mov
push
pop
loop
add
jp
xor
mov
pop
jl
rcl
inc
pop
add
cwtl
sub
es
inc
imul
in
loop
mov
rcrb
mov
and
scas
push
jb
mov
inc
xchg
ds
lret
ss
adc
outsb
mov
dec
jnp
mov
lods
cltd
push
rcrb
popf
jge
out
push
push
hlt
cwtl
rep
or
repz
mov
enter
xor
pop
test
and
dec
outsb
and
cmc
out
sbbl
cmp
jno
or
cmp
popf
or
das
inc
and
xchg
push
push
cmp
and
jmp
mov
jno
std
dec
sbb
adc
lea
nop
jl
in
fdivs
xchg
mov
push
cld
pop
pop
adc
push
shr
mov
pop
jb
fstl
shll
pop
pop
and
sarb
push
or
fsts
and
in
mov
mov
out
or
inc
in
mov
jp
out
cwtl
cs
stc
jle
insb
popa
add
inc
inc
hlt
push
or
mov
arpl
test
mov
mov
sti
ret
push
or
fsts
adc
add
enter
sbb
loope
test
xchg
scas
adcb
adc
insl
cmpsl
sbb
cmpsb
push
lahf
test
out
ss
fisttpll
pop
sahf
addb
cmp
xchg
inc
mov
sbb
pushf
jne
push
dec
loopne
fisttpl
mov
push
inc
rcrb
push
jne
mov
pop
test
or
lahf
jno
inc
adc
stos
rclb
and
int3
andb
xor
lock
jg
inc
shlb
xchg
pop
ljmp
popf
nop
lahf
das
dec
or
repz
jg
repnz
aam
sub
std
mov
push
scas
cmp
test
push
sbb
fisubrl
mov
jle
fimull
xchg
cli
jmp
or
aaa
lods
jmp
pusha
xchg
mov
sahf
imul
jp
imul
mov
iret
cld
inc
int3
out
cli
scas
mov
push
daa
lods
pop
sub
push
gs
outsl
nop
xor
cmpsl
mov
dec
push
mov
and
in
inc
mov
mov
xor
adc
shl
or
jns
inc
pop
popa
out
lock
sahf
les
js
sub
mov
rclb
in
mov
ret
mov
sub
xchg
xor
aam
sarb
bswap
rorb
out
cli
sbb
mov
xor
icebp
inc
sub
inc
mov
das
inc
sarb
jo
subb
mov
mov
cmpsl
icebp
stos
pushf
daa
insb
sbb
or
stos
and
xlat
push
push
lcall
fcompl
jecxz
add
sub
lret
xor
lret
cmpl
dec
jl
and
cmp
into
ss
or
scas
pushf
mov
adc
cmpsb
mov
pop
push
fs
fsubrl
or
cmpsl
and
jb
xor
shlb
sbb
in
cmp
aam
jne
sub
dec
mov
adc
daa
mov
ljmp
lods
sub
pusha
xchg
int
sbb
and
inc
jne
fildll
in
repnz
xchg
xorl
push
ja
inc
add
inc
pop
mov
into
outsl
enter
insl
xlat
movsl
jl
or
jo
cmpsl
xchg
xor
js
dec
rcrb
add
lretw
jbe
inc
fisubrl
add
xor
and
sub
jae
xor
mov
sbb
pop
mov
xor
sub
push
rol
cmpsl
out
add
pop
mov
xchg
push
lea
add
ss
pusha
xorb
movsl
std
lds
pop
and
inc
pop
es
adc
mov
sti
je
mov
int3
dec
push
mov
sbb
lcall
cmp
mov
pop
je
mov
sub
pop
shlb
or
outsb
leave
int
orl
jae
sbb
mov
add
enter
pop
xor
negl
nop
cmp
repnz
call
imul
lahf
out
lahf
inc
or
das
mov
xor
mov
stc
sub
sbb
and
jno
aaa
jns
cmp
movsb
pop
mov
add
js
insb
mov
fcmove
lods
sbb
loope
fimuls
pop
movsb
mov
push
mov
hlt
mov
xchg
push
cmpsl
mov
cmp
insl
inc
es
push
pop
cltd
fmul
and
in
aas
cmp
enter
out
mov
push
and
imul
dec
inc
pushf
or
pop
cmp
adc
push
mov
push
jno
test
jge
jmp
popa
dec
fwait
or
mov
xchg
xchg
push
cmpl
lahf
mov
movsb
es
xlat
mov
push
xlat
lahf
lret
into
pop
lods
xlat
scas
sqrtps
push
push
iret
mov
cwtl
inc
jmp
sbb
add
ss
pop
dec
cs
add
dec
mov
pop
out
cli
popa
in
sbb
cmp
cmp
fwait
mov
push
je
fwait
nop
cwtl
jp
xor
pop
mov
imull
stos
inc
mov
or
gs
push
fisubrl
aaa
xor
filds
je
dec
xor
leave
pop
inc
aam
clc
adcl
fwait
jp
add
push
xor
pop
sti
inc
bound
cmpsl
xor
loope
add
seta
pop
test
stc
jns
pop
or
movsb
inc
scas
jecxz
clc
mov
out
add
mov
mov
fsubrs
pop
cld
int
and
addb
je
ret
ror
mov
dec
out
clc
scas
neg
shlb
inc
ficomps
call
push
ret
mov
jle
jge
enter
aaa
cmp
jge
daa
arpl
inc
rolb
sbb
jae
push
inc
mov
xchg
xor
imul
jg
sub
dec
fmuls
nop
or
xchg
cmp
bound
movsb
add
mov
mov
mov
dec
aad
movsb
mov
insl
or
mov
sbb
cmpb
and
and
or
cld
out
sbb
inc
aas
in
and
int
subl
enter
pop
xlat
add
mov
outsb
icebp
mov
int
aaa
aaa
insb
mov
or
jle
xor
cld
mov
inc
jecxz
repnz
dec
clc
int3
jmp
mov
add
les
dec
nop
xchg
sti
fimuls
push
add
scas
clc
cli
sbb
loope
sbbl
cmp
divb
pop
dec
es
cwtl
sub
rclb
or
cmpsl
pop
pop
cmpsb
sub
add
aam
xchg
pop
sub
xchg
test
mov
pop
push
pop
test
loop
mov
xchg
fadd
dec
mov
xor
push
lods
rorb
push
mov
xor
xor
xchg
adc
les
push
jmp
in
lods
fildl
arpl
jge
or
and
push
into
push
sub
cmpsl
cmp
popa
lds
negl
push
stos
popfw
sti
lods
jbe
push
xor
addr16
repz
adc
xchg
xchg
and
jne
mov
fwait
repnz
in
mov
xor
pop
xor
loope
or
pushf
mov
mov
cmp
adc
into
daa
ds
add
shlb
add
cs
dec
xchg
sub
test
daa
add
xchg
andnps
pushf
fldl
call
xlat
lock
fidivrs
sarb
dec
je
int3
mov
dec
push
aam
and
mov
cs
jecxz
xor
sub
push
pop
les
and
in
pop
add
iret
std
adc
xchg
cs
shrl
ljmp
xchg
adc
cld
lret
add
dec
fistl
inc
ljmp
sbbl
cs
cld
sbb
ret
sarl
stos
mov
or
add
or
sahf
iret
and
jg
aaa
lret
fsubrl
pop
iret
and
out
repnz
in
cli
inc
mov
lea
iret
pop
pop
sbb
mov
lret
mov
adc
addr16
xor
ljmp
rcl
jns
or
movl
stos
outsl
scas
aas
inc
or
mov
jno
pop
jg
mov
xchg
arpl
rcr
sbb
push
sbb
lret
mov
insl
aas
dec
dec
sub
bound
jb
inc
mov
sahf
push
jmp
mov
xchg
jne
xchg
xchg
adc
xor
enter
pop
clc
cmp
pop
mov
das
cmpsl
jo
pop
pushf
add
cmpsb
mov
data16
lret
es
jl
shll
push
jns
adc
mov
adc
daa
mov
sbb
dec
je
push
mov
ja
popa
icebp
mov
mov
lods
out
dec
ja
or
je
mov
cmp
add
ljmp
push
mov
rol
es
movsb
aam
and
push
dec
xchg
sub
inc
inc
push
mov
outsl
xor
ds
int3
pop
xchg
test
adc
pop
cmp
cs
xchg
sub
dec
xor
adc
fnstsw
mov
and
test
jmp
gs
add
jmp
fwait
clc
outsl
rcr
loope
mov
lods
push
sub
scas
scas
add
das
sub
mov
push
gs
es
sbb
pop
jge
inc
mov
mov
dec
test
cmp
dec
test
es
test
lods
lds
fidivs
dec
sahf
pop
into
or
insl
lret
in
aad
pop
jne
lods
jg
scas
filds
dec
mov
movsl
mov
lock
pop
lret
pop
or
negb
jmp
mov
add
sahf
lcall
xor
add
xor
jge
pop
scas
mov
mov
inc
or
jae
push
in
push
add
pop
and
mov
push
popf
je
orb
mov
push
sbb
clc
push
sarb
jg
sti
daa
mov
repnz
push
sbb
push
insl
aad
xchg
movsb
cmp
lock
mov
in
mov
outsb
fmulp
sub
xchg
jb
sub
dec
test
sarl
daa
aad
insl
inc
rcrl
xor
or
and
xchg
lods
popf
imul
aam
repz
enter
cmpl
fwait
inc
in
lret
jns
pop
pop
sub
lret
push
enter
in
ljmp
jns
addr16
scas
sub
shlb
fbld
and
sub
or
into
fldenv
xchg
cmp
aad
cmp
popf
in
call
aaa
mov
inc
mov
rorl
or
popf
and
ds
xchg
aaa
and
push
iret
xchg
sti
lock
lcall
push
sarl
loop
jecxz
xchg
lret
fs
popf
scas
xorb
loop
cmpsb
mov
xor
rcrl
inc
push
orb
jne
jo
jno
nop
jle
inc
push
dec
fnstcw
loopne
mov
arpl
pop
xchg
aaa
clc
fisttpl
mov
div
xchg
jo
ret
jmp
test
pop
lds
popa
dec
mov
pop
les
dec
rclb
pop
into
cmp
xchg
mov
lds
in
mov
bound
jb
sarl
mov
cmp
and
and
cmpsl
cmp
scas
xor
ret
outsl
jle
fwait
ss
loopne
lea
mov
cli
and
sub
push
jo
sti
orl
into
ja
pop
inc
adc
nop
xor
scas
adc
add
insl
outsl
or
jp
test
jb
shrb
fsubrl
jo
pop
jo
nop
inc
push
test
jo
js
sti
filds
fcomps
lds
pop
adc
push
or
es
repz
pop
mov
cmp
pop
xchg
jp
movsb
lret
jb
dec
in
inc
es
pop
out
lds
pop
ret
icebp
repnz
or
fidivrs
push
ja
push
dec
pop
inc
js
push
cmp
popa
leave
test
in
and
int3
jl
scas
or
mov
adc
adc
adc
sahf
adc
dec
mov
stos
outsb
add
lds
repz
das
xor
adc
add
sbb
mov
mov
int
int3
inc
adc
sbb
enter
add
out
loop
pop
mov
jns
inc
or
jb
stos
mov
aad
insl
mov
loop
movsl
cmc
stos
dec
sbb
js
lds
pop
fwait
loopne
movsb
mov
out
pop
cmpb
scas
nop
leave
movsl
push
mov
mov
js
and
clc
pushf
lretw
jae
pop
add
fsubrp
and
test
sub
je
mov
xlat
daa
dec
jp
mov
adc
jmp
in
enter
in
fsubrl
rclb
test
loope
andl
fisubrl
mov
outsb
leave
jmp
sarb
lret
ds
xchg
sbb
sahf
insb
mov
adcl
push
mov
dec
xchg
push
nop
aas
mov
int
call
mov
repz
or
outsb
sbb
subl
cmpl
das
sub
mov
pop
fstps
stos
jno
pop
faddl
or
jo
or
loop
push
or
mov
fldt
sub
push
mov
dec
leave
lds
rcr
cld
xor
outsb
push
shlb
xchg
jp
lar
xchg
stc
add
add
push
xlat
leave
shl
cmc
or
jecxz
ja
mov
rcrb
fadd
rorl
jge
dec
pop
xchg
test
jns
mov
pusha
out
test
shl
test
imul
cmp
testl
mov
int3
fs
in
cltd
aad
xor
mov
arpl
xor
mov
mov
pop
aam
out
inc
lods
mov
sbb
pop
sbb
lods
sbb
loopne
pop
push
outsl
adc
add
adc
dec
and
xor
jmp
loop
stos
pop
out
xor
add
mov
sub
lea
sub
sub
ljmp
out
xchg
rcrb
pop
enter
pop
jne
cli
sahf
shl
xor
mov
and
add
or
sahf
jecxz
or
outsb
push
imul
add
add
into
es
jo
or
ss
pop
and
xor
add
cmpsb
int
add
adc
cmp
in
dec
or
mov
sub
pop
test
and
test
lcall
dec
lds
dec
and
add
mov
add
add
push
popa
inc
push
pop
lock
push
or
lods
or
fsubrl
in
cmp
xchg
fsts
stos
push
ret
fisttpl
cmp
je
cltd
mov
into
jge
idivl
jmp
flds
cmp
push
and
xor
adcl
pop
jb
scas
js
out
scas
je
hlt
mov
out
scas
jg
nop
fistl
je
or
pushf
cmp
cwtl
imul
cmpsl
sbb
shrb
roll
inc
aad
add
shll
xor
sbb
mov
sbb
push
test
dec
mov
sbb
inc
push
leave
lahf
push
xor
inc
cli
aam
daa
dec
cmc
ret
pusha
test
lds
sub
enter
orb
fisttpll
adc
dec
mov
mov
dec
test
ficoms
pushl
mov
dec
xchg
in
lcall
and
sbb
lret
add
in
ja
inc
inc
out
lds
addr16
sbb
cld
sub
shll
aam
testl
or
dec
inc
test
cs
add
pop
jmp
push
inc
add
mov
ja
or
mov
out
data16
insl
mov
xchg
insl
in
inc
push
sbb
stc
popf
loop
movsb
xchg
std
cltd
lods
jmp
mov
enter
sti
lret
imul
add
or
xchg
es
jns
shll
adc
sbb
jns
dec
push
lock
inc
sbb
aaa
arpl
cmp
xchg
mov
jecxz
out
out
hlt
mov
mov
into
and
cmpsb
sbb
loopne
push
test
out
negw
mov
movsl
xor
pop
cmpsb
daa
inc
and
lret
sbb
movsb
xchg
in
adc
cwtl
push
fisttps
or
out
cmp
sti
mov
movsb
mov
and
popa
xchg
fwait
push
lret
shll
inc
mov
sbb
cmpsw
push
insl
cmp
sbb
and
sub
cs
clc
jbe
mov
lret
inc
outsb
dec
sbb
mov
pop
aaa
push
push
inc
xchg
mov
loop
adc
lcall
inc
in
insl
xchg
repz
scas
adcb
xchg
popf
or
inc
mov
sub
mov
adc
or
xchg
xchg
xchg
mov
scas
sti
and
ljmp
jae
mov
dec
jbe
or
rol
push
push
inc
fcoml
rclb
lods
sti
push
cs
dec
out
rol
pushf
sbb
push
loope
and
xchg
addl
pop
mul
add
dec
fwait
stos
jno
pop
fldcw
jo
repnz
jno
inc
out
mov
enter
mov
icebp
shrl
mov
fs
mov
shrb
pop
jge
jae
push
push
xchg
adc
or
hlt
push
repz
mov
outsl
jmp
pop
and
add
loopne
mov
popf
add
mov
cmp
cmp
je
cmpl
adc
mov
subb
div
jge
and
push
jecxz
sbb
and
imul
or
call
jge
pusha
mov
jbe
push
xor
ds
enter
gs
in
pop
out
mov
arpl
sbb
repz
jnp
fcoml
cmpsb
push
push
cmc
and
jnp
or
fcoml
and
xchg
xchg
jmp
push
repz
jmp
xor
out
dec
repz
sbb
lods
inc
stos
jnp
lret
mov
lock
xchg
push
out
fs
lods
pusha
pop
test
xchg
nop
pcmpgtb
mov
fldt
mov
add
les
mov
test
mov
dec
mov
mov
adc
or
mov
call
pop
repnz
dec
repz
dec
xchg
add
dec
inc
jae
dec
ja
jno
cmp
cwtl
or
rol
lret
sub
push
sub
mov
and
lock
jae
xchg
ljmp
cmc
mov
cmpsl
sub
icebp
jecxz
in
push
add
popa
push
jecxz
lcall
push
movsb
rolb
cmp
loopne
adc
adc
mov
fsub
ja
stos
mov
bound
mov
in
xchg
sahf
loope
cmp
mov
shlb
mov
mov
fisttpll
push
rol
adc
pusha
pop
push
pop
jmp
sub
pop
or
in
adcl
xor
aad
mov
jmp
sbbb
daa
fwait
in
cmc
and
jbe
mov
pop
adc
jb
sbb
mov
mov
paddq
rolb
push
cmc
jnp
jns
outsl
incb
cmp
das
outsl
push
dec
xchg
mov
push
jmp
sarl
gs
xlat
icebp
repnz
pop
pop
aam
sti
cltd
xchg
mov
clflush
movsl
push
pop
adc
inc
insb
jno
mov
jl
sarb
sub
aaa
loope
sbb
adc
jno
lods
mov
push
pushf
ret
fdivl
imul
pop
and
mov
xor
in
loope
xor
dec
gs
or
loope
jl
jge
cmpsb
dec
sub
outsl
gs
inc
in
jae
das
ljmp
out
xchg
inc
mov
push
push
adc
hlt
ss
xchg
outsl
jle
fistpl
push
jns
xchg
in
out
loopne
mov
mov
xchg
inc
and
lcall
xor
pop
xchg
inc
sarl
cld
fwait
in
xor
push
sub
mov
aaa
lds
push
pminsw
hlt
lcall
test
rclb
xchg
out
shr
aas
shrb
or
movsl
push
adc
es
adcl
ret
pop
sub
les
or
cmp
xor
jb
inc
push
mov
push
push
in
push
jbe
packuswb
fnsave
aas
inc
inc
add
testl
test
mov
jns
mov
jbe
lret
jnp
popa
add
inc
xor
dec
xor
adc
fwait
adc
lods
inc
xchg
je
inc
add
daa
aas
dec
lea
popa
ljmp
ja
push
sahf
hlt
arpl
in
sub
outsb
xrelease
push
xchg
sbb
out
jns
ror
repnz
clc
xchg
orl
or
push
decl
inc
imul
mov
fisttps
int3
mov
jb
or
fwait
inc
aas
and
dec
jns
push
mov
mov
aaa
mov
dec
mov
push
xor
shl
loopne
push
stos
adc
push
push
shl
xor
adc
push
push
add
aad
fucomp
mov
dec
std
nop
cmpsl
add
out
call
icebp
ds
in
jecxz
icebp
xchg
lods
jge
ds
int3
cmpsb
int
cmc
xor
fisttps
jnp
out
adc
xchg
call
rorl
dec
rorb
outsb
xor
cwtl
cmc
in
pop
cmp
pop
dec
sub
or
pop
push
fs
fdivr
dec
inc
dec
inc
movsl
nop
sbb
dec
dec
xor
mov
cmp
movsl
loope
push
xor
push
mov
data16
pop
ficoms
ret
cld
push
push
mov
or
cmp
out
test
lret
lock
xor
movl
nop
out
sbb
jecxz
or
push
cmp
and
mov
nop
push
xchg
dec
push
inc
or
pop
mov
cmp
dec
pop
jecxz
xorl
jge
shr
iret
or
or
adc
push
loopne
rcll
push
subb
inc
cmpsl
jno
popf
xchg
xchg
dec
inc
cli
shll
or
push
mov
mov
adc
push
jno
loope
add
fisubl
jno
jl
jecxz
push
xor
cmpsl
mov
xor
cmp
inc
fbld
or
cmpsb
andl
pop
enter
cmp
mov
add
inc
test
mov
push
mov
push
adc
pop
mov
cmpsb
cmp
fidivrs
mov
add
lret
sahf
cwtl
jmp
sbb
xor
loopne
fcoml
mov
mov
xor
or
sub
mov
stos
stos
std
mov
sbb
fnsave
cmp
incl
jns
bound
xchg
jno
jne
adc
inc
mov
rcl
adc
movsl
cltd
xchg
ret
data16
or
cmpsl
xor
lods
sarl
addb
shlb
jb
jecxz
ret
popf
movsb
xchg
roll
out
push
jmp
dec
xor
flds
lcall
mov
insl
mov
xchg
iret
imul
and
incb
mov
movsl
scas
in
mov
loope
push
xchg
mov
jo
dec
mov
outsb
lock
addr16
inc
mov
inc
hlt
xchg
pushf
mov
loop
add
add
bound
lea
inc
mov
push
and
divl
stos
xchg
mov
and
jge
jns
cltd
jb
and
fsubs
mov
clc
and
pop
xchg
pop
fwait
xor
clc
cmpsb
sbb
sbbl
mov
xchg
xchg
cmp
pop
movsb
pushf
mov
dec
push
popf
and
fadds
sti
test
pop
sub
clc
daa
xchg
jns
mov
sub
int3
addb
icebp
cmp
adc
adc
add
xor
dec
or
mov
movsl
inc
popf
sbb
mov
or
xchg
int
repnz
aas
jo
into
sbb
ficoml
outsl
int3
je
into
mov
mov
add
inc
ja
add
or
hlt
mov
loopne
xor
rcrb
pushf
add
push
push
xchg
xchg
loopne
nop
aas
sbbl
shlb
lds
mov
jl
xchg
fdivr
jnp
xor
out
inc
outsb
mov
movsl
adc
leave
mov
inc
mov
mov
mov
shl
aaa
aas
mov
arpl
iret
mov
flds
mov
add
nop
cwtl
adc
adc
ss
jns
lret
xor
out
pop
mov
bound
inc
mov
jl
iret
push
jo
popf
scas
sbb
inc
jne
rcrb
fnstcw
std
dec
imul
lock
sub
jle
lahf
push
pop
jp,pt
movsb
arpl
push
adc
pop
lds
xchg
inc
mov
push
inc
scas
xor
js
jmp
roll
mov
xor
es
idivl
movsl
cmpl
mov
imul
jnp
jbe
mov
jmp
or
cwtl
jne
adc
add
pop
jecxz
add
into
movsb
dec
jns
movsb
gs
mov
sub
adc
xchg
scas
push
inc
cmp
mov
xchg
sbb
mov
pop
in
fcomip
pop
inc
jg
ret
mov
pop
mov
mov
cli
sarb
push
xchg
rolb
nop
in
out
ret
inc
mov
test
add
dec
in
int
xorl
stc
or
and
push
mov
leave
cmp
xchg
mov
xchg
sub
movsl
addr16
mov
jg
std
andl
cmp
inc
fimull
or
in
stc
xor
mov
roll
sbb
push
sarl
mov
pop
andb
popf
add
jnp
sub
pop
add
rorb
jbe
jl
pop
test
jecxz
fwait
pop
std
inc
push
test
sti
insb
nop
popf
ret
ljmp
lahf
push
mov
jecxz
lret
call
rorb
lods
push
dec
out
xchg
inc
out
dec
loopne
mov
cmp
and
stos
dec
daa
push
scas
sahf
aam
jecxz
mov
xor
in
dec
rcrl
mov
pop
or
int3
loope
movsb
sbb
and
fistpll
adc
in
mov
pop
xchg
cs
shrl
xor
pop
jo
pop
ret
sub
mov
sub
mov
push
movsl
call
cmpb
imul
mov
mov
lahf
sahf
jb
push
mov
in
in
or
inc
je
out
jb
popf
out
aas
out
mov
daa
in
dec
add
cld
push
xchg
ret
jnp
rcrb
cmpb
aad
gs
mov
inc
add
in
clc
aaa
cltd
add
jb
inc
sub
mov
and
fs
dec
xor
mov
sub
jmp
test
cwtl
adc
fs
xchg
jecxz
jb
pop
loop
lret
das
popf
loope
sahf
adc
inc
outsb
sbb
push
pop
jmp
cli
bound
sub
daa
pop
mov
loop
add
sbb
lods
xchg
outsb
xchg
inc
inc
sti
sbb
xchg
mov
mov
push
mov
sub
jmp
scas
xchg
sahf
adc
fdivs
movsb
push
sar
cmpsl
push
lret
xor
dec
or
cli
mov
sub
xchg
sub
call
scas
sbb
test
jbe
push
and
out
fcmovbe
mov
cmc
popf
mov
jle
adc
pop
mov
jns
dec
cli
test
stc
ret
aaa
push
mov
mov
addb
xchg
ds
mov
fistpl
hlt
inc
or
pusha
cli
inc
inc
loopne
mov
ret
sbb
data16
scas
mov
pop
jbe
push
or
arpl
jb
shl
mov
push
sbb
popa
enter
lock
imul
or
and
imul
cmp
jb
fstpl
roll
ja
mov
cwtl
mov
ljmp
dec
mov
dec
sbb
aad
xchg
jno
mov
pusha
add
inc
stos
add
sbb
xor
push
into
sub
lret
xchg
aad
jns
es
dec
aam
mov
pop
cld
hlt
push
fbld
push
push
mov
es
jb
push
nop
push
test
ja
fldl
mov
sarb
das
mov
fnstenv
pop
ss
dec
cmc
mov
jmp
xchg
xchg
jno
xor
pop
adc
scas
inc
push
roll
sub
and
push
mov
repz
movsb
aam
mov
and
fcmovnbe
sub
lahf
dec
and
aaa
sbb
sbb
div
sbb
aas
fwait
push
fidivs
fs
dec
aam
inc
push
mov
sbb
or
imul
jbe
ret
sbb
out
jno
aas
jp
outsl
stc
push
xchg
inc
and
scas
pushf
add
loope
cmpsl
mov
repz
push
into
inc
jge
leave
push
inc
or
ficompl
das
mov
jp
sbb
shll
or
push
xor
test
and
push
inc
inc
adc
mov
xchg
iret
adcb
lcall
xchg
adc
addr16
xor
push
test
jns
je
int3
xchg
pop
inc
lea
xor
mov
pop
push
aam
lds
sbb
sti
fdivl
dec
jle
lret
lods
and
mov
adc
add
cmpl
pop
jecxz
das
loopne
int
loopne
movsb
insl
in
inc
dec
rcrl
fidivs
dec
mov
xchg
dec
leave
dec
or
pop
pop
jo
mov
in
mov
lahf
sbb
enter
fisubrs
dec
notb
cmp
xchg
sub
pushf
xchg
rep
gs
pop
cs
mov
sub
pop
sarb
jne
out
test
pop
cltd
jle
cmpsb
push
out
xor
jno
fistps
in
cmpsb
xchg
aas
mov
scas
call
idivb
adc
sbb
lgdtl
or
cmp
jg
pop
sub
xchg
fcomps
and
movsl
lods
add
test
jo
mov
dec
pop
ficomps
jnp
mov
sub
or
cwtl
xor
adc
xlat
sbb
adc
mov
aaa
dec
mov
les
ds
pushl
add
mov
leave
mov
scas
or
adc
mov
cmc
fiadds
test
mov
cmp
hlt
pop
int3
cli
je
insl
sub
cmc
fcmovbe
mov
leave
push
imul
jp
lret
sub
arpl
jmp
push
loop
and
aaa
and
add
xchg
push
or
inc
xor
jmp
flds
jb
sbb
fimull
lret
cmp
jo
mov
xchg
mov
arpl
cmpsb
int
pop
jae
xor
jecxz
jns
mov
outsb
movsb
pop
or
fwait
in
inc
inc
add
sub
cwtl
js
mov
cmp
test
jmp
and
cmp
fs
shrl
clc
roll
inc
inc
icebp
push
aas
dec
dec
scas
xchg
jo
ja
lret
push
push
sub
loop
mov
lcall
jge
mov
mov
sbb
movsl
dec
and
xor
fstp
xor
das
cmp
mov
push
jecxz
rol
cmp
cmp
hlt
leave
xlat
cli
inc
pop
mov
fprem1
pop
jecxz
or
arpl
push
sbb
dec
or
sub
pusha
dec
pop
std
xor
imul
push
mov
jbe
paddsb
mov
inc
jle
fsubrl
sbb
fwait
dec
dec
sbb
fstp
scas
sahf
int
repz
loope
addr16
js
mov
inc
cmpsb
and
call
filds
jbe
cmc
push
pusha
negl
jae
shr
sbb
les
scas
shr
push
xor
mov
mov
mov
lcall
add
je
dec
inc
addb
aam
decl
sbb
les
jg
pop
test
adc
or
adc
dec
xor
mov
pop
push
loopne
sub
add
jb
sub
cmp
jg
sahf
lods
fcmovu
mov
mov
ret
cmp
lret
and
pop
ret
xlat
mov
ret
sub
fwait
xchg
inc
jns
mov
and
sbb
and
pop
leave
arpl
cmp
cmpsb
mov
mov
jmp
push
nop
cmpsb
sbb
test
mov
push
jecxz
testb
push
inc
shll
dec
in
xchg
andl
fcompl
fildl
cmpsb
pusha
adc
hlt
or
cltd
jbe
adc
jno
mov
dec
adc
xchg
mov
leave
in
push
or
idivb
lret
lret
push
cmpsl
enter
mov
push
rorl
mov
sbb
adcb
xchg
inc
xchg
dec
inc
jb
stos
xor
dec
push
out
mov
lods
jl
outsb
xor
aaa
repz
pop
sub
mov
clc
push
adc
std
test
push
adc
jbe
xor
jl
ss
inc
and
xor
fistpll
je
call
cwtl
in
shll
xor
scas
jmp
lods
pop
cs
ss
rcrb
jns
enter
test
xchg
inc
or
loop
mov
iret
xchg
inc
push
jb
fs
fildl
xor
pop
jl
rorl
cli
push
add
rcrb
push
dec
insb
xchg
scas
inc
push
fwait
and
add
lahf
xchg
cld
add
out
inc
mov
push
pushf
pop
mov
les
xchg
pushf
cmp
mov
stc
xlat
jo
add
inc
mov
lret
adc
lock
cmp
gs
in
stos
stos
or
mov
imul
xor
sbb
sbb
and
mov
int
movsl
loop
mov
pop
loop
fwait
dec
ret
setae
lods
adc
pop
mov
jl
mov
pop
cltd
in
and
inc
cmp
cmc
mov
js
insb
jbe
lods
adc
in
mov
jnp
iret
cmpsl
nop
test
lods
icebp
mov
sub
sbb
push
loop
dec
ds
mov
and
inc
jmp
lea
sbb
rolb
dec
and
jo
xchg
push
xchg
add
pop
mov
jo
sbb
xchg
xor
in
jo
and
insb
movsl
in
lea
lret
movsb
std
and
push
std
xchg
dec
push
fldl
xchg
sub
sub
xor
mov
cmp
enter
test
mov
idivb
or
mov
mov
mov
jp
pop
lcall
mov
add
add
das
popa
inc
and
add
inc
cmpl
lret
add
jne
jb
inc
jno
ret
shr
xchg
stos
jp
mov
push
fists
xchg
mov
leave
xchg
and
mov
add
jecxz
push
pushf
push
xor
pop
aas
pop
sar
dec
inc
lahf
cwtl
push
imul
arpl
lods
out
and
mov
aas
imul
test
test
repnz
and
sbb
mov
mov
inc
or
sahf
or
movd
aad
subl
movsl
pop
mov
mov
dec
lcall
sub
lret
imul
add
cmp
sbb
or
int3
adc
popf
cmp
pop
dec
test
mov
mov
jecxz
in
leave
sub
es
xor
fs
push
pop
push
mov
test
cli
fildll
pop
rorl
movsb
ja
aaa
adc
sbb
stc
test
outsb
ret
jbe
loopne
add
es
in
sbb
xchg
lock
jbe
adc
xor
inc
push
les
mov
sahf
test
out
imulb
add
scas
push
sub
call
push
pop
rcrb
inc
push
insl
js
jecxz
daa
dec
je
movsb
push
fisttpl
rcll
shll
cli
and
rol
test
fld1
pop
push
shlb
inc
mov
pusha
fiaddl
repz
iret
js
mov
jle
xchg
pop
and
push
icebp
mov
dec
pushf
arpl
rolb
jbe
lods
push
jg
push
loop
push
lods
stos
jp
adc
jmp
xor
and
lods
push
pop
pop
sub
sub
test
arpl
psubb
ret
or
lret
outsb
or
ficomps
xor
lock
cmp
jae
and
and
jp
push
pop
repz
cmpsb
jo
push
jecxz
cltd
addr16
xor
inc
stos
loop
stc
stc
pop
sarb
lds
test
mov
lods
repz
insl
cmpsb
aam
dec
and
or
enter
inc
pop
shll
push
mov
sahf
dec
and
outsb
adc
sub
sbbl
cmpl
mov
adc
popa
push
dec
pushf
lock
mov
movsl
imul
lret
push
arpl
daa
adc
jno
daa
insb
sahf
mov
aas
cmp
imul
dec
rol
sub
sub
cmp
in
cmpsl
pop
push
je
mov
int3
mov
mov
ljmp
fstl
mov
xchg
rclb
xchg
sbb
push
test
push
lds
mov
arpl
ss
mov
inc
xor
xor
in
es
jns
mov
pushl
fidivrs
in
ss
out
enter
ret
cmp
mov
jecxz
add
xchg
push
popa
outsl
adc
push
mov
fnstcw
frstors
pop
ds
mov
repnz
xchg
fxch
shrb
jmp
cmp
pusha
sbbl
add
and
add
sub
adc
xchg
jl
in
cmp
mov
comiss
mov
rorb
and
fldl
dec
push
or
ret
pop
jo
inc
lods
les
rorb
outsl
in
fistps
clc
jns
add
dec
inc
xor
inc
dec
inc
subb
repnz
mov
cmpsb
mov
andl
ja
pop
fwait
mov
or
and
sub
push
std
repz
and
jg
out
adc
stos
shlb
jno
jmp
imul
inc
icebp
xchg
sub
out
and
rclb
and
sbb
mov
sub
imul
sbb
lret
mov
adc
cmp
adc
adc
je
pop
in
inc
outsl
sbb
adc
subb
and
pop
bound
insb
adc
adc
ret
mov
rcr
and
jno
mov
xor
push
cld
fsts
sub
and
adc
cwtl
xor
add
jbe
scas
xchg
int
pop
out
mov
loope
and
jmp
scas
cmpsb
loop
or
mov
pop
pop
sub
les
das
jns
dec
insb
add
aaa
adc
sbb
and
repz
xor
inc
push
in
inc
mov
inc
mov
mov
mov
ds
pop
inc
push
int3
push
stos
jmp
lods
cmp
push
cmp
sub
fstpl
pop
ficoml
add
movsl
push
mulps
sub
sti
mov
cwtl
pop
ds
sbb
data16
call
fcoml
testl
and
lods
mov
and
sbb
lock
and
fcompl
or
movsl
hlt
push
jns
leave
lock
test
cmpsb
add
daa
sbb
mov
fstpl
sub
mov
mov
jmp
pop
leave
test
outsl
jl
lret
dec
stos
jmp
sbb
sbb
xchg
insl
sub
lods
and
out
ret
ss
add
push
inc
data16
and
jb
xchg
cmp
ss
mov
notb
mov
pop
mov
pusha
icebp
xchg
out
aas
sub
cmp
pcmpgtw
push
aaa
jb
adc
mov
sbbl
fsubl
test
shll
add
ret
xor
ss
dec
rclb
mov
dec
xchg
test
icebp
add
and
sub
sub
xor
sahf
jae
insl
and
inc
mov
add
jnp
popf
pop
hlt
movsb
add
ror
cmp
dec
adc
jle
int
lods
mov
test
stos
xchg
insl
mov
push
jo
sub
movsl
clc
cmpsl
stos
mov
inc
lods
scas
lahf
xchg
fwait
cmp
push
cmc
or
sub
xchg
faddl
mov
outsb
adc
mov
mov
push
xchg
psadbw
js
incl
lahf
ret
mov
sbb
dec
cld
add
insb
pop
push
push
or
sub
adc
pushf
pop
mov
push
jno
xchg
fisubrl
xor
outsl
sub
pop
sahf
jo
loopne
cmpsb
lock
in
insb
mov
add
pop
mov
sbb
sbb
loope
fsubrs
sbb
mov
mov
sub
pushf
setl
cmpsl
pop
push
aaa
dec
out
dec
fldenv
fwait
sub
ss
xor
addr16
jl
pop
push
push
jb
repz
dec
dec
and
push
inc
sti
mov
stos
fwait
notl
mov
adc
pop
adcb
pop
clc
jnp
jmp
sbb
sbb
xchg
ret
mov
xor
push
push
cmc
fsts
push
jp
jge
mov
notl
cltd
outsl
mov
and
scas
aas
shlb
repz
jle
jp
test
mov
sub
scas
xchg
sahf
ds
mov
sbb
pop
ljmp
fs
mov
hlt
mov
push
test
sahf
test
jns
inc
or
xor
sbb
testl
push
das
lods
fwait
stc
add
pusha
mov
arpl
repz
mov
sub
daa
ljmpw
gs
sahf
mov
lret
push
pop
nop
jno
fidivrl
popa
repz
test
mov
sub
leave
sbb
lds
pop
cld
gs
cmp
add
cmc
adc
push
push
cmp
je
ret
lods
dec
fadds
std
dec
pushf
cld
cmp
push
lods
mov
clc
push
pop
aaa
pop
xchg
fcmove
xor
adc
out
test
adc
mov
rol
add
dec
daa
xchg
iret
push
sbb
pop
call
clc
scas
in
pop
subb
and
mov
inc
pop
fwait
push
xchg
and
pop
or
ror
mov
movsb
jb
push
push
xchg
lock
dec
jb
adc
fistpll
fcmovnu
movsb
dec
ja
dec
dec
clc
subb
push
stos
push
add
ljmp
ds
ret
in
jbe
or
rorl
sub
add
cmpl
hlt
adc
les
lret
or
add
cmp
jns
fsubrs
mov
sbbb
mov
adc
pop
loopne
pop
clc
mov
push
sti
adc
adc
or
out
jmp
xor
mov
sub
movsl
vcvtdq2ps
push
jmp
push
pop
inc
mov
lods
jg
js
imul
lods
test
mov
popl
push
jno
test
lret
push
stc
sub
xor
out
mov
gs
mulb
hlt
popf
and
xor
sbb
pushf
jmp
cli
xadd
xchg
mov
adcb
mov
lret
push
gs
imul
add
mov
inc
insl
xchg
decb
jne
push
sub
xchg
push
stc
icebp
in
push
lock
jne
sbb
inc
ret
xchg
out
cmp
xchg
sub
insl
mov
dec
cwtl
sti
incl
fbstp
pop
add
adc
dec
sbb
xchg
insl
or
add
lcall
jns
jno
mov
xchg
fs
dec
sbb
sbb
sbb
aas
adc
xor
jg
aas
sub
frstor
lahf
addr16
out
insb
sub
pop
in
in
lret
sbb
and
xlat
call
flds
sub
cmp
lds
mov
ret
movsl
sub
jns
stos
jmp
nop
push
dec
lds
add
jg
cld
jbe
sbb
imul
outsb
sub
sbb
jns
mov
jmp
push
jne
mull
cmp
mov
in
les
shll
shrb
test
pop
lea
inc
inc
and
jl
or
dec
cmpsl
mov
adcb
aad
inc
sub
and
adc
pop
add
je
inc
into
mov
push
jnp
or
and
xor
testl
mov
into
fildl
push
scas
jns
call
inc
out
loop
jnp
sbb
adc
push
add
cwtl
xor
iret
repnz
std
fwait
and
pop
in
jge
add
icebp
loope
clc
add
jle
lds
mov
lret
fadds
je
movsb
pop
cs
je
dec
imulb
imul
fistpll
xchg
mov
js
les
ss
shll
out
add
cmp
lret
sti
pushf
cld
cmpsl
mov
xchg
lods
push
enter
jl
dec
cld
iret
jp
and
es
enter
lods
ss
cltd
mov
sub
xchg
and
jo
rcrl
jmp
mov
movsb
push
cmp
cmp
fnstenv
lea
or
jmp
shll
sbb
shll
cwtl
mov
sub
clc
cs
stc
stos
and
pop
or
out
xor
fsts
or
test
fldcw
xchg
adc
inc
out
sub
idiv
fistpll
jmp
imul
adc
lods
imul
cltd
jae
and
cmpsb
ljmp
scas
in
jno
stos
sub
sbb
sbb
test
int
roll
out
push
inc
std
xor
scas
xor
jbe
bound
sahf
pop
scas
daa
sub
and
leave
pop
xlat
dec
dec
jne
pusha
jg
test
jo
into
dec
loope
push
repz
pop
push
mov
iret
push
mov
lcall
adcl
xchg
xor
pop
xchg
mov
out
pop
inc
sbb
cmp
push
stos
loope
mov
insb
and
dec
pop
mov
cmc
adc
jnp
popa
and
xor
mov
fdivs
push
test
loope
mov
dec
or
cmp
repz
xchg
ret
sbb
out
jl
dec
xor
mov
xlat
fstpt
jb
xchg
xlat
test
pop
cli
out
xchg
push
or
imul
fistl
cmc
popa
jb
pop
add
mov
aaa
or
fs
or
mov
push
fsts
jns
mov
addr16
bound
fstps
cmpsb
pop
jbe,pn
cltd
dec
dec
pusha
jae
fcoms
or
in
test
in
repz
test
cmp
into
xchg
cmp
clc
cltd
push
popf
loopne
push
sbbb
cwtl
cwtl
mov
sub
aaa
addr16
add
in
xchg
sub
popf
sub
scas
repz
pop
ffreep
cmp
xor
sbb
es
mov
or
jecxz
jo
fnstenv
xor
lcall
vmulpd
test
cmp
sub
xlat
jo
ds
aas
jno
orb
jp
or
stc
and
int
mov
jbe
jne
stos
aaa
int3
xor
or
dec
and
add
jne
hlt
and
js
pop
mov
test
mov
xlat
fsubs
jl
jns
and
push
gs
aaa
cmpsl
rcrb
dec
sub
aam
pusha
stc
mov
mov
loop
scas
push
les
repz
and
adc
sub
push
jge
xor
int3
lods
push
inc
jnp
pop
testl
in
cli
inc
mov
es
mov
dec
repz
lcall
cmp
in
sub
shll
adc
pop
mov
jmp
push
out
subb
mov
and
pop
fwait
loopne
sbb
out
sbb
push
mov
scas
aam
mov
shl
iret
sbb
push
data16
pop
jns
xchg
sbb
pop
adc
push
stos
ljmp
xor
cld
sub
das
mov
int
push
and
frndint
xor
dec
mov
ja
push
mov
sbb
into
and
bound
mov
loopne
ljmp
notl
push
xchg
aas
nop
xchg
dec
in
adc
or
out
fs
and
jl
mov
cld
addr16
in
mov
or
shlb
fucomi
mov
out
cmp
cmp
aas
push
mov
int3
fstpl
hlt
imulb
jmp
xor
notl
jmp
add
daa
mov
shrl
lds
and
ss
jae
mov
nop
cli
inc
addr16
addr16
stc
mov
cmp
rclb
jne
lcall
push
dec
and
push
add
aam
mov
stc
mov
icebp
mov
ljmp
sti
jae
pop
test
pop
stos
in
mov
dec
les
ljmp
jge
or
fcoms
stos
sbb
inc
fistpll
mov
inc
aaa
lods
push
filds
sbb
cwtl
stos
iret
sbb
xchg
popa
mov
xchg
sbb
mov
mov
in
push
cmpb
or
out
outsb
and
add
mov
imul
sahf
inc
sbbl
xchg
stos
mov
into
aas
mov
shll
push
push
push
sbb
in
gs
adc
fisttpl
jo
mov
in
sub
mov
call
or
stos
xchg
mov
push
dec
jb
or
xchg
or
decl
sar
xor
add
leave
fucom
shl
inc
add
fcmovnb
lods
sbbl
dec
jbe
lcall
xorl
std
test
hlt
in
out
nop
pop
push
shr
push
cwtl
insl
mov
notl
xor
daa
ljmp
sbb
in
and
mov
in
or
sub
in
or
add
nop
scas
nop
xchg
cld
mov
in
aaa
mov
stos
mov
mov
lret
mov
xchg
mov
mov
cmp
int
mov
outsl
push
fucomp
jo
or
test
xchg
inc
push
xchg
cmpsl
jbe
shll
sbb
lret
cld
adc
ja
mov
cmp
inc
and
icebp
out
ljmp
shll
pop
cmp
lahf
inc
popa
in
xor
mov
xchg
sub
jns
cs
push
incl
and
fwait
pop
pop
lret
and
xor
sbb
or
add
mov
std
and
rorb
cmp
push
fwait
ss
stos
out
addr16
dec
movsl
sbb
int3
lret
push
inc
rorl
int3
xor
clc
jne
push
scas
aad
out
push
jle
imull
inc
daa
int3
add
and
fdivl
test
iret
cld
add
clc
out
loopne
roll
gs
inc
and
pop
scas
shll
sub
mov
cmp
int3
stos
pusha
dec
dec
fucomp
sti
mov
lahf
cmpsb
push
mov
sbb
inc
push
stos
jnp
sub
mov
push
push
push
mov
pop
pop
inc
cwtl
rorl
xchg
enter
dec
test
fistpll
scas
jge
dec
cmp
cmc
inc
inc
dec
xchg
aad
jnp
mov
and
push
push
lock
sub
cmpsb
loopne
fs
icebp
out
sarb
out
test
arpl
lahf
hlt
cli
push
movsl
in
jnp
jb
mov
jmp
fidivrl
mov
out
sub
rcrb
fimull
dec
mov
clc
xchg
sub
into
leave
into
cmp
cmpsl
push
int
and
test
push
add
js
xchg
add
cmp
inc
imul
filds
mov
popf
push
aas
xor
and
cltd
push
mov
cwtl
adcb
data16
inc
pop
pushf
jmp
and
lds
aas
mov
jp
or
es
loopne
lods
cmp
sub
stc
lahf
fiadds
jb
sbb
push
out
xor
add
mov
xchg
cli
xchg
add
cmp
push
lods
add
movsl
std
call
lahf
inc
jae
push
sbb
cltd
int
jnp
xor
cmp
jbe
push
popf
fildl
xor
dec
scas
out
into
aad
loop
add
icebp
xchg
jno
mov
div
cmpb
jg
mov
push
scas
cmpsb
and
xchg
mov
dec
icebp
pusha
mov
push
or
ds
jle
and
rcr
cwtl
pusha
call
mov
jp
hlt
dec
push
nop
setg
sbb
sti
adc
fidivl
add
jae
inc
push
les
dec
or
mov
jmp
mov
mov
adc
xchg
mov
pop
repnz
push
and
and
xchg
pop
cmp
cmpsl
jle
xlat
and
fs
mov
and
or
adc
aam
inc
stos
mov
inc
iret
cmp
je
shlb
decb
sub
outsb
stc
or
xor
lock
test
adc
lock
cmpsl
test
and
movsl
inc
inc
sarl
xchg
rorl
lods
setb
rcr
in
sbb
adc
in
mov
negl
decl
pop
aad
aam
repnz
mov
test
adc
inc
jp
stos
outsb
stos
loop
call
push
sbb
lret
mov
shll
fimull
sbb
jnp
fs
movsb
dec
xchg
sub
inc
movsb
fs
stc
insl
ret
jl
dec
jbe
adc
out
cmc
addr16
call
mov
jno
test
jg
rolb
hlt
clc
rcrb
shlb
cmp
jbe
jmp
cld
pop
insb
mov
repz
shl
out
xchg
aaa
lock
sub
fldt
cs
xchg
inc
cmpsb
lds
cmp
adc
in
xchg
adc
xor
jb
pusha
and
aas
xor
fiadds
jmp
in
xor
test
or
xlat
jae
fucomp
cli
push
or
scas
iret
shrb
jg
xor
push
enter
pop
cmp
xchg
or
push
sbb
push
and
jl
sti
pop
xlat
fistpl
mov
shll
ljmp
xchg
shll
in
fistl
jmp
das
xor
iret
mov
sbbl
nop
testl
stos
jg
jb
push
mov
les
lods
inc
add
mov
xor
or
sti
sbb
jb
sahf
add
mov
mov
outsl
add
add
in
out
fstps
insb
es
das
imul
ja
data16
xchg
jbe
lretw
fld
rcll
mov
cmp
cltd
jmp
sbb
je
mov
pop
push
sbb
xor
icebp
aas
into
pop
or
cmp
cwtl
mov
inc
mov
pop
mov
push
sub
pop
push
and
clc
mov
fidivl
xchg
push
xor
xchg
cltd
fsubs
daa
push
rolb
xor
sbb
pop
sub
mov
repz
pop
dec
fbstp
or
add
std
mov
push
or
xchg
incb
mov
pop
dec
loopne
imul
xchg
jbe
loopne
add
xchg
inc
mov
mov
aaa
sub
xchg
ret
sub
testb
cmp
push
fiadds
push
jmp
imul
subl
push
add
pop
enter
in
jo
jbe
subl
imul
les
jecxz
lahf
mov
int
cmc
mov
sbb
repz
mov
int3
mov
loopne
mov
inc
in
and
out
sbb
aam
xor
sbb
push
cmc
pop
out
hlt
and
pop
push
cmp
fstps
ds
jnp
ret
xor
or
mov
fnstcw
out
xor
mov
or
ljmp
ljmp
lahf
leave
shrl
daa
jp
loop
stc
jb
nop
test
call
out
in
dec
adc
out
imul
insl
out
mov
adc
movsb
jnp
sti
adc
mov
lret
insb
loopne
pop
lock
nop
pop
pop
and
pop
and
pop
nop
es
int
out
fldcw
aaa
notb
fstpt
inc
call
sbb
int3
mov
and
sub
test
push
cld
roll
add
inc
inc
jae,pn
idivb
mov
sbb
mov
jg
sub
cmp
and
xchg
in
and
adc
cmpsl
rcrl
sub
in
mov
adc
sbb
movsl
hlt
faddl
dec
sbb
sbb
xorb
inc
insl
mov
insl
and
cmpsb
pop
out
and
cltd
jno
vdivpd
int3
xchg
mov
insb
ffreep
popf
ljmp
xchg
jecxz
movsb
lds
fnstenv
and
sbb
jmp
popf
push
lcall
in
add
mov
test
fistl
jns
imul
repnz
and
clc
incb
sub
inc
cmp
fcoml
ret
int3
mov
or
test
and
sub
or
jle
xchg
jb
out
push
sub
mov
iret
add
xchg
xchg
cmpsl
aaa
dec
xchg
enter
sbb
mov
ljmp
add
add
shrb
mov
adc
into
adc
xlat
and
pop
pop
push
jae,pt
mov
sub
leave
cmp
movsl
call
sbb
push
mov
jae
add
movsl
cli
lcall
movsl
shl
rol
lock
cmp
out
xlat
aas
push
pop
cmp
and
scas
cmp
pop
add
lock
adc
mov
xor
sbb
je
push
inc
xchg
outsl
repnz
push
lret
jne
sbb
adc
pop
outsb
mov
sahf
cwtl
lret
out
and
rorl
roll
leave
mull
rcrl
mov
aam
pop
and
sbb
pop
add
dec
lods
lret
dec
fisubs
in
les
push
xor
adc
in
mov
rol
mov
jg
dec
roll
cmp
fwait
bound
inc
dec
loop
lods
ret
arpl
adc
insl
fsubrl
pop
adc
cltd
imul
or
rcll
mov
sti
imul
add
xchg
inc
int3
ret
mov
int3
mov
insb
pop
and
jns
jb
push
cmp
rclb
cwtl
add
test
int3
push
repz
xor
sub
cmp
push
push
mov
lret
xchg
dec
push
jb,pt
adc
test
mov
cmpsb
sbbl
lret
dec
push
inc
aas
ds
in
test
aaa
imul
dec
fnstcw
mov
sbb
sbb
dec
push
bound
mov
inc
jb
pop
jo
mov
inc
xchg
dec
pop
xchg
and
outsl
xchg
xchg
pop
les
imul
aad
cmp
sar
xor
dec
or
dec
xchg
cmp
outsb
sbb
dec
mov
into
mov
adc
add
scas
fldcw
and
loope
loopne
cltd
fs
cmp
ss
sbb
popa
bound
jecxz
stc
test
inc
out
add
popf
mov
cli
jecxz
add
xor
jl
mov
dec
lcall
dec
mov
adc
loopne
inc
and
jae
cmp
repnz
je
inc
dec
imul
inc
nop
call
push
jae
mov
rcrl
mov
or
add
pop
push
adc
xchg
mov
lahf
loope
lock
cmp
mov
pop
xor
jns
jmp
fwait
hlt
xchg
outsb
pop
lods
xor
xor
mov
cmp
cmp
jp
push
inc
lret
push
xor
xlat
das
push
or
andl
fmuls
add
mov
lahf
sbb
jmp
mov
cmpb
mov
mov
call
je
pop
adc
xchg
fcompl
out
aaa
orl
sub
xchg
cmp
jmp
mov
fstpl
jne
cmc
aas
shll
loop
mov
cmp
and
xlat
daa
jp
or
addr16
scas
repnz
popa
aam
fcomi
xlat
cltd
iret
xor
pop
pop
cld
mov
insl
nop
push
in
mov
lret
dec
out
idivb
adc
subl
in
mov
sub
jl
imul
jg
adc
clc
mov
pop
insl
xchg
mov
loop
scas
add
arpl
or
xchg
add
xor
and
pop
pop
pop
lds
ljmp
lock
mov
in
jg
lock
mov
dec
xchg
mov
dec
cwtl
add
mov
sub
sbb
fwait
xor
sbb
ss
insb
ljmp
pushf
fcoms
into
dec
jnp
in
daa
and
ds
cld
ss
test
xor
and
sbb
lahf
je
ljmp
imul
add
data16
andl
test
lret
sbb
mov
mov
xchg
and
ds
lcall
into
test
inc
into
xor
mov
scas
int3
idivl
andl
fisttpl
stc
mov
jo
mov
xor
push
fldl
in
inc
jo
and
sub
inc
gs
or
push
cmpsl
inc
dec
mov
jge
xchg
mov
vfnmsubsd
jo
popa
mov
jo
dec
repnz
arpl
dec
fsubs
lea
sub
js
or
jno
push
xchg
frstor
add
mov
xor
psubusw
inc
stc
push
mov
and
jns
paddsb
cmpsb
mov
dec
sub
fcompl
jp
cmc
idivb
dec
cmp
dec
sub
pop
aam
add
stos
push
inc
stos
movsb
ds
lods
sahf
inc
out
push
pusha
adc
fdivrs
dec
inc
not
add
addl
sbb
data16
jle
aas
daa
and
mov
hlt
push
loop
mov
int
sub
adc
add
sti
cwtl
add
js
je
lcall
cmp
cmp
mov
mov
push
adcb
bound
sub
fnstsw
push
mov
imul
mov
xor
outsb
addr16
icebp
cli
sti
les
sbb
ds
pop
clc
sahf
ja
xchg
jecxz
leave
fwait
ss
gs
dec
ret
cmpsb
pop
cmp
pop
in
add
mov
sahf
add
or
add
fisubrl
flds
adc
mov
or
movsb
lock
test
in
jl
addr16
adc
push
pop
sbb
push
ja
pushl
nop
adc
in
sub
xchg
sub
pop
and
dec
xchg
std
push
ret
sub
and
push
in
sahf
ds
call
insb
or
mov
outsb
sub
imul
xor
pop
mov
dec
xor
jl
inc
cmp
fwait
push
sbb
jns
aaa
sub
or
mov
xchg
int
cs
stos
int
fidivrl
aas
subl
inc
rcll
cmp
mov
lds
sbb
cld
mov
popa
sub
and
pusha
lods
leave
cmp
and
mov
insl
xor
test
mov
int3
cmc
push
inc
add
sahf
iret
xchg
or
movsl
pop
cmpsb
xchg
pusha
and
dec
push
cmp
mov
pop
pop
nop
push
out
sub
out
cmp
cmpsb
dec
mov
arpl
mov
mov
clc
xor
loopne
cmp
movsb
data16
pop
mov
out
std
ja
adc
push
mov
adc
mov
movsl
lea
xchg
fisubrl
lea
imul
xchg
mov
and
repz
xchg
lds
xor
es
xor
mov
xchg
fwait
pop
adc
push
imul
xchg
subb
and
jl
lcall
stos
faddp
jo
enter
push
and
scas
xor
outsl
stos
in
jb
lea
sbb
push
jne
aaa
cwtl
dec
repz
and
sbb
or
popa
jle
inc
stos
push
ds
call
es
into
push
sub
test
add
lcall
pop
and
or
cwtl
mov
pop
mov
lcall
dec
into
clc
cmc
and
movsb
sahf
mov
fdivs
ljmp
push
jle
mov
les
adc
int3
jl
imul
mov
rorb
jb
pop
push
shll
mov
mov
int3
stc
clc
push
mov
pop
frstor
mov
lods
jo
inc
or
jnp
enter
mov
cmpsl
test
jo
push
mov
jle
call
add
in
sbb
andb
pusha
xadd
sub
xor
jns
jg
into
sbb
fdivs
lods
cwtl
xchg
inc
mov
mov
subb
jb
mov
jns
pop
aad
data16
fsubrs
mov
in
jo
xor
lods
stos
cli
pop
inc
push
and
movsb
enter
stos
sbb
sbb
rorl
jo
sub
pop
add
sub
and
hlt
adc
hlt
jge
sbb
mov
popa
ror
pusha
iret
and
dec
push
cmp
mov
test
pusha
push
sub
out
push
dec
sbb
aas
daa
add
cwtl
fpatan
xchg
cmpsb
cmp
or
pop
outsb
sub
dec
mov
push
loope
mov
cwtl
notb
push
nop
sarb
aam
push
cmp
shll
in
jns
xlat
in
sti
loopne
adc
sub
scas
dec
iret
adc
sbb
mov
test
sub
cli
xchg
testl
jae
pop
ss
mov
pop
fldenv
ss
lods
ret
jne
mov
xchg
add
mov
mov
sarb
aas
fbld
ret
scas
in
insb
jl
or
pop
out
test
roll
mov
xchg
and
and
push
call
shll
jae
out
mov
xlat
xchg
aas
clc
dec
stc
jo
rcll
arpl
insl
mov
cmp
fsin
pop
and
mov
mov
mov
push
push
hlt
scas
xor
cmp
mov
mov
ljmp
nop
into
xchg
mov
aad
icebp
cld
aad
mov
mov
pop
cmp
cwtl
bound
stc
add
test
cs
xchg
mov
bound
sbb
ret
cmpsl
cmp
sbb
cmpsl
jne
xchg
test
rclb
movsl
pushf
ja
jnp
repnz
mov
out
decl
movsb
inc
push
inc
push
sub
cmp
xor
xchg
clc
sbb
dec
sub
dec
scas
psrld
xlat
jge
in
lock
es
push
mov
test
push
or
cmpsb
jmp
pop
xor
lret
push
insl
out
dec
mov
mov
into
mov
push
stos
mov
clc
jg
or
and
lahf
pop
test
dec
adc
adc
jecxz
enter
xor
jae,pn
stos
ljmp
sbb
arpl
arpl
ja
cmp
lods
pop
stos
gs
xchg
sub
mov
sti
xorb
sbb
mov
hlt
fiadds
lods
and
aam
xchg
inc
aaa
lock
ret
cmpsl
cmp
xor
dec
daa
push
pop
out
or
test
mov
jbe
push
xor
sub
cltd
stc
and
pushf
push
lahf
loope
jge
test
mov
sub
sbb
xchg
push
jb
nop
loope
aaa
movsb
insb
dec
lahf
in
movsb
daa
xor
push
aas
mov
cmpsb
cmp
xchg
inc
xor
cmp
push
loopne
jmp
adc
add
les
sub
mov
popa
lcall
xor
ret
xorb
test
xor
es
and
push
pop
stos
lock
jo
cmp
jo
addb
and
mov
mov
xchg
cmp
lahf
adc
add
pop
mov
les
std
addr16
and
clc
mov
or
call
fwait
adc
push
mov
out
xor
insl
push
cltd
mov
xchg
in
sbb
jecxz
enter
cmpb
or
movsl
js
cs
fcomip
lea
fsubr
mov
int
sub
rol
dec
cmp
dec
pushf
fbld
sti
sub
jae
loopne
add
dec
xchg
dec
xor
sahf
push
das
stos
pop
daa
add
adc
push
div
xchg
cmp
add
mov
or
lock
adc
fs
dec
jmp
aas
fcmove
fisubrl
adc
adc
or
ror
movsb
xor
jno
or
mov
fnstcw
add
and
iret
xlat
pop
and
xchg
cmp
push
xchg
aas
movsl
and
stos
jnp
jge
outsb
fisubrl
stc
ljmp
div
jmp
dec
pushf
pop
fbstp
jp
cli
daa
ficoml
pop
cs
call
mov
rolb
pop
cs
in
pop
iret
lods
mov
sbb
inc
mov
sbb
jg
jnp
push
jo
cli
adcl
mov
sub
mov
mov
fcompl
ljmp
sbb
ss
fisttpll
or
cmp
sbb
pop
out
fimuls
aas
es
pop
cmp
std
jle
insl
xchg
movsl
scas
inc
adc
jmp
leave
push
mov
cmp
fbstp
mov
outsl
test
jne
pop
or
hlt
push
push
ja
dec
insl
inc
pop
mov
jmp
movsl
in
out
sar
out
insl
in
mov
shlb
fists
cmpb
push
das
xchg
jp
stc
repz
mov
add
lea
outsb
aaa
imul
sbb
bound
push
pop
dec
ret
adc
mov
stc
dec
pusha
sub
aam
push
mov
adc
fwait
add
pop
adc
lret
and
pop
jns
and
sub
stos
clc
outsb
mov
dec
xor
repz
outsb
outsl
rol
xor
inc
push
and
cmp
pop
mov
sub
call
das
mov
xchg
rorb
adc
mov
stos
xchg
int3
inc
jecxz
cmp
or
fcompl
jnp
cmp
mov
cmp
push
jg
sti
data16
mov
popa
xchg
add
loope
loop
daa
stc
sub
mov
mov
aas
data16
xor
stc
jl
iret
cmp
xchg
push
data16
data16
outsb
add
push
inc
push
sbb
cmp
adc
push
mov
sub
xor
jg
out
and
jne
xor
pop
iret
loope
mov
test
test
daa
and
adc
fsub
xor
in
rcrb
pop
inc
push
pop
xor
mov
lahf
icebp
fldl
xor
mov
adc
addr16
orl
or
or
adc
jecxz
dec
les
inc
mov
sub
enter
in
imulb
sbb
pop
dec
imul
clc
ss
adc
inc
es
fucomi
and
add
lahf
xor
popa
xchg
rolb
pusha
int
lds
jns
scas
sub
popf
call
test
sar
push
fmul
mov
sarb
dec
sbb
shrl
adc
pop
and
mov
jo
in
cmp
pop
pop
adc
pushf
xchg
xor
stos
push
push
in
das
xchg
mov
push
sub
inc
xchg
mov
jmp
lret
call
pop
cmpsb
cmpsl
and
push
mov
jne
bound
jae
sbb
fwait
adc
mov
sbb
fiadds
bound
sbb
loope
jae
popf
mov
out
add
push
cmp
jg
sbb
movsl
push
aaa
pop
jbe
shlb
fisubrl
aaa
jo
jne
enter
xor
fnstcw
xor
mov
inc
jne
or
mov
add
mov
push
dec
xchg
push
imul
push
xadd
jno
addr16
fwait
add
inc
sbb
aaa
and
addb
fldenv
cmp
mov
mov
int
xor
js
fcmovne
xchg
lret
mov
cmpsl
outsb
fcom
icebp
push
loopne
xlat
cmp
cmc
sbb
popf
test
xor
addb
add
test
push
adc
subb
aas
ja
cmpsb
jp
loop
xor
das
addr16
jae
xchg
aas
in
push
pop
icebp
pop
test
scas
jp
mov
xchg
nop
aaa
push
sbb
iret
dec
cmpsb
and
sub
jo
add
insl
out
xchg
and
int3
and
mov
fldcw
push
neg
nop
lods
xor
mov
gs
xor
ret
mov
mov
mov
push
pop
add
shr
cmpsl
and
cmc
mov
ja
pop
mov
fs
outsb
xor
xorl
add
sub
jp
icebp
mov
std
outsl
push
lea
inc
adc
jb
jbe
inc
outsw
add
cmp
aam
fsubrs
mov
mov
mov
in
jle
je
inc
xchg
xchg
dec
inc
push
pmaxub
xchg
subl
pop
cmpsb
std
fsubrs
outsl
push
mov
adc
insb
icebp
in
mov
test
in
jb
shrb
push
dec
jnp
jle
push
int
cmp
inc
pop
push
dec
push
call
xor
cltd
lret
jnp
test
rcr
dec
pushf
sarb
xchg
mov
fsubrl
ds
or
enter
xor
or
mov
nop
cmpl
addr16
xlat
dec
jg
lea
sahf
mov
adc
xchg
or
fnstenv
jb
in
gs
loope
test
jge
jnp
inc
xchg
cmp
inc
sub
xchg
dec
aas
loop
push
in
jecxz
nop
pop
out
in
sub
lea
dec
mov
lea
mov
test
cli
or
xchg
lock
push
sahf
sub
add
fsubs
add
loop
ds
sbb
leave
sarb
jb
and
push
add
cmp
jae
popa
dec
or
lahf
aas
xchg
inc
pop
nop
inc
test
sbb
mov
mov
mov
sbb
or
scas
iret
inc
dec
adc
xchg
jo
dec
scas
jle
sub
push
mov
scas
imul
inc
jecxz
inc
loop
dec
xchg
test
jge
sbb
jnp
mov
pushf
xor
mov
or
cs
imul
xor
jb
mov
inc
sub
and
mov
cmp
imul
dec
mov
pop
inc
push
bound
jp
or
in
xchg
pop
sub
fidivs
dec
movsl
xor
aaa
pop
inc
ss
pop
push
xchg
mov
and
stc
push
mov
push
ss
inc
ret
mov
in
cmpsb
mov
int
lret
cld
imul
loop
push
pop
xchg
xor
aaa
mov
cs
add
cmpl
mov
ljmp
push
in
adc
mov
addr16
mov
push
ja
int
data16
or
xchg
mov
and
push
adc
subl
hlt
sarl
stos
movsl
fstl
mov
mov
hlt
insb
push
add
rcll
dec
movsb
pusha
icebp
loopne
subb
mov
mov
sub
push
mov
out
iret
ret
jecxz
mov
fdiv
inc
sti
and
imul
xchg
pop
ret
sbb
out
cs
mov
std
xchg
pop
les
stos
or
loope
pop
cs
sar
ficomps
leave
add
fiaddl
xorl
sub
inc
dec
pop
pop
inc
das
orb
outsl
aam
jl
sbb
and
mov
inc
negl
pop
dec
je
jmp
lret
lret
daa
dec
add
adc
shl
clc
insb
outsb
adc
mov
lcall
lret
and
jo
mov
adc
pop
pop
sbb
mov
lret
mov
bound
pop
push
mov
cmp
xchg
and
and
addr16
mov
cmp
xor
mov
mov
loop
js,pn
and
xchg
inc
shl
daa
add
addl
fwait
xor
pop
jle
sbb
sub
add
and
dec
cmp
and
inc
push
ds
mov
push
add
out
jns
js
pop
stos
or
jecxz
mov
xor
xor
faddl
xchg
mov
sti
cld
aas
fnstsw
jb
rolb
cmpl
in
xchg
adc
into
imul
jne
divb
xor
call
divb
stos
stc
inc
fists
add
mov
les
xchg
dec
mov
xor
sub
in
ljmp
jnp
dec
sbb
sub
or
fdivrs
aaa
xchg
pop
in
mov
shr
repnz
mov
shlb
add
sbb
movsl
addl
cmp
mov
mov
test
pop
icebp
sub
pop
add
lods
mov
push
push
mov
insl
inc
std
lahf
dec
dec
xorl
push
int
or
and
pop
adc
fwait
push
insb
and
movsl
cmpsb
movsb
and
pop
sub
cmp
pop
adc
pop
dec
jb
and
cmpsl
ljmp
ret
mov
xor
xchg
dec
ljmp
mov
aam
sbbb
mov
inc
out
pop
pop
jno
sub
inc
aam
push
mov
mov
stc
lods
in
dec
bound
movsl
dec
aas
subl
jecxz
add
mov
shrl
mov
push
test
xor
lea
xlat
mov
pop
inc
ds
pop
int3
sub
adc
jb
inc
lret
jae
lock
adc
cmp
push
divb
dec
mov
enter
es
scas
cmpsb
jae
cmp
insl
inc
icebp
fcmovnu
mov
gs
popa
inc
cwtl
mov
xchg
mov
popf
jge
sub
test
push
jg
lock
sti
subl
int3
lahf
xchg
xor
pop
rcrb
xor
iret
sub
clc
jb
and
jp
cmovo
and
push
push
in
test
loop
push
or
lea
fistps
out
out
mov
cmp
or
inc
jmp
imul
push
sub
inc
shll
js
hlt
lret
mov
scas
dec
push
pop
iret
in
addl
aam
jne
xchg
add
cmp
jmp
loop
push
lret
push
insl
rcrl
test
mov
and
imul
jp
sbb
sbb
sarl
sub
hlt
dec
lods
push
mov
pop
mov
adc
negl
iret
pop
repnz
aas
push
pop
sub
fisttpl
ss
scas
or
pop
add
sub
arpl
mov
imul
mov
cltd
adc
push
xchg
inc
pop
mov
pop
lods
aaa
inc
out
and
out
out
ja
sbb
lahf
sub
out
dec
dec
es
pusha
out
imul
xor
sbb
das
hlt
ja
push
lods
ret
out
sub
mov
mov
jbe
cmpsb
aaa
repz
sbbb
jg
add
sub
loope
mov
pop
in
push
push
sbbl
jle
sahf
test
imul
outsl
mov
jne
nop
mov
xor
dec
pop
mov
fs
mov
and
xchg
inc
and
fisubl
jnp
xchg
mov
or
dec
sbb
clc
stos
out
mov
adcb
jno
cmc
and
xchg
insl
lahf
push
gs
js
push
push
stos
ret
mov
add
and
push
insb
and
cmpb
push
pop
xor
dec
sbb
out
fstps
rep
rolb
or
sub
nop
imul
popf
fdecstp
lea
popf
ret
xchg
and
sbb
pusha
push
dec
adc
xor
push
xchg
enter
cmp
pop
popl
xchg
int3
cmp
pop
sub
and
into
push
sub
jbe
cmc
pop
and
popa
push
adc
imul
mov
jo
mov
sub
in
incl
enter
xchg
in
push
and
fldenv
lds
sub
ret
push
or
mov
add
xchg
int3
sub
scas
cmp
pushf
js
daa
mov
xchg
or
ljmp
pop
out
cli
cmp
sti
adc
int3
sub
fstl
arpl
rcrl
pusha
mov
lret
jb
cwtl
jae
aad
shrl
sub
dec
lret
outsb
mov
sar
fcompl
cmp
jb
push
jnp
pop
fidivl
or
data16
sub
sub
mov
pop
jecxz
imul
jp
fistpll
pushf
ror
sub
sarb
dec
es
or
pop
add
sbb
mov
xchg
or
adc
jno
xor
xchg
inc
out
pop
dec
out
jb
popf
xchg
cmp
inc
cmp
or
add
pop
stc
mov
lds
arpl
ret
cmpsl
int3
mov
adcb
mov
pop
mov
sub
lret
jns
adc
aaa
mov
sub
inc
jmp
mov
push
sbb
pop
xchg
inc
stos
sub
adc
idiv
sbb
sbb
mov
or
push
or
adc
mov
mov
mov
ljmp
inc
pop
sbbl
or
mov
dec
jae
icebp
loope
push
nop
jbe
rol
pushf
ret
or
inc
jae
jge
addr16
adc
out
popa
mov
jmp
sbb
fildll
adc
lret
cld
out
adc
xor
and
adc
aad
scas
ds
jmp
jle
fdivrs
sti
adc
cmc
cmp
or
cmp
aas
mov
xchg
outsl
jle
sarb
sub
pushf
popf
fcmove
cmp
push
inc
cmpsb
mull
es
jnp
pop
xchg
push
inc
aad
loop
adc
add
stos
push
test
push
leave
lds
fsubrl
fsubs
and
add
adc
pop
pop
xor
pop
pop
jae
push
cmp
movsl
out
jbe
and
aam
inc
pushf
subl
int
cld
jnp
stos
arpl
sub
daa
mov
int3
mov
rclb
mov
mov
in
testb
push
pop
leave
xor
setbe
add
enter
test
xor
lret
xchg
pusha
cltd
push
das
and
mov
add
mov
mov
push
push
add
inc
dec
xor
mov
outsl
insl
dec
clc
mov
inc
dec
sahf
adc
bound
out
jl
outsl
test
test
mov
sub
dec
sbb
negb
xchg
xchg
loope
test
adc
pushf
jno
cmp
aaa
cmp
push
popf
inc
xlat
add
xchg
mov
inc
jns
jg
ja
lahf
xlat
push
daa
sti
out
adc
xchg
stos
in
sbb
arpl
fcmovnbe
gs
insl
mov
jp
adc
dec
mov
cwtl
out
mov
daa
insl
pop
pop
adc
not
push
mov
bound
dec
jns
lods
gs
pop
inc
xchg
cmp
call
jno
lea
push
jmp
loop
out
mov
out
int
mov
daa
add
sbb
add
add
or
mov
es
jns
dec
aad
popf
cwtl
mov
add
mov
ret
scas
ret
cs
lods
pop
xchg
jl
fstpt
loopne
int
test
xor
push
iret
pop
mov
test
push
data16
push
xchg
test
fcmovnu
adc
adc
loop
int3
push
xchg
insb
scas
test
test
test
cld
inc
xor
push
jb
mov
dec
and
xor
pop
xchg
das
adc
cmc
in
push
jo
cltd
hlt
neg
divl
fbld
and
mov
incl
xor
adc
dec
adc
lahf
push
mov
pop
aad
push
mov
push
jo
xor
mov
aas
mov
out
out
sub
xchg
imul
adc
lcall
inc
bound
xchg
add
cmp
test
xchg
adc
loop
imul
sbb
insl
mov
out
add
push
je
in
shrb
movsl
repnz
mov
testb
addb
lods
inc
rolb
mov
jl
call
push
scas
cmpsb
hlt
and
repnz
add
daa
lret
sbb
icebp
or
mov
faddl
mov
mov
mov
xor
cmpsl
xchg
out
out
jno
pop
mov
sub
dec
or
in
in
in
mov
loop
test
adc
js
jno
sub
push
notl
lret
sbb
push
lods
sub
cmp
shll
pop
pop
stos
in
push
lcall
cmp
icebp
cmpsb
and
je
clc
push
add
stos
pusha
mov
and
push
xchg
mov
out
pushf
cwtl
jns
loope
mov
sub
repnz
ret
lret
aas
mov
enter
pusha
mov
mov
xchg
xor
add
sub
popa
push
jbe
lea
mov
dec
push
fcoml
mov
es
cmc
lock
xor
xchg
cli
xor
push
jno
inc
es
icebp
scas
andb
ja
das
jle
in
adc
lea
mov
leave
jne
adc
imul
cmp
fadd
and
popa
sahf
or
fsubrl
inc
sub
pop
add
jecxz
ds
jbe
mov
jbe
popa
orb
jno
sbb
add
nop
pop
xor
cmp
fwait
imul
in
sbb
clc
popf
jbe
out
arpl
add
test
imul
lods
xchg
or
adc
fcmovbe
jecxz
data16
loop
pop
inc
test
je
sti
cmp
inc
std
cmp
push
clc
cmp
and
mov
out
repnz
aaa
movsb
mov
enter
add
shrl
jb
xchg
xlat
fldln2
jo
ret
in
sahf
insb
icebp
or
pusha
ja
pop
xchg
or
pop
push
clc
leave
and
sub
pop
gs
cmpb
pop
xchg
inc
lods
jo
inc
and
stc
mov
sbb
repz
clc
jno
loopne
push
xchg
lock
inc
addr16
mov
out
sahf
sub
xor
test
mov
cmp
dec
scas
pop
mov
iret
in
mov
xchg
xor
mov
cld
push
outsb
jl
jg
loop
inc
stc
dec
je
xor
push
jle
jb
push
pop
fiadds
in
fcomp
and
dec
push
insl
sbb
dec
jecxz
repz
inc
xor
stos
jns
push
jno
dec
ja
aam
adc
lds
aaa
and
aad
pop
adc
pop
rcrb
jb
jmp
jmp
add
mov
mov
jnp
imul
sub
or
add
dec
pop
mov
leave
mov
mov
adc
mov
xchg
add
adc
loop
daa
jae
adc
xor
mov
cmp
pushf
xchg
adc
je
jbe
popf
std
mov
pushl
jg
xor
je
out
and
adc
xchg
fucom
loop
and
sbb
sub
cs
cld
jmp
dec
push
cmp
dec
xchg
sub
inc
popa
mov
cwtl
std
sub
jmp
fistpll
mov
idiv
shr
clc
pop
dec
sarb
pusha
repz
imul
mov
dec
sti
inc
in
iret
jae
or
pop
icebp
out
std
jno
jmp
adc
adc
xlat
push
and
les
pop
cld
inc
dec
xchg
ret
cmc
mov
xchg
pop
insb
add
sub
mov
in
movsl
push
adc
xor
and
lods
fildl
pop
sub
movsb
and
xor
test
and
dec
lea
frstor
mov
stos
fidivrl
dec
dec
xchg
pop
mov
xchg
je
clc
mov
in
lock
shrl
cltd
jp
xlat
fmuls
outsl
cs
inc
loope
jae
hlt
test
pop
sbb
aaa
mov
loopne
push
xchg
inc
jmp
xor
scas
fadds
mov
mov
ja
bound
xchg
mov
imul
frstor
stos
pop
jmp
lret
cmp
adc
sbb
push
inc
in
aaa
outsb
imul
orb
pop
pop
sub
cmp
jnp
adc
cmp
pop
test
inc
pop
push
jmp
xor
xor
push
cltd
adc
fdivr
mov
aaa
leave
movsb
push
fwait
dec
jb
xchg
pop
es
jb
jle
ljmp
jne
xchg
mov
daa
xor
out
mov
ret
or
jns
lods
adc
lock
mov
xchg
les
add
mov
or
dec
sub
es
test
add
jge
xor
and
xor
hlt
pop
fistps
icebp
mov
jg
pop
inc
or
idivl
faddl
jle
jo
push
dec
idivl
shl
adc
mov
gs
cmp
mov
dec
pusha
ja
hlt
lds
and
dec
or
pushw
int3
xor
in
repz
mov
push
xchg
sub
orb
adc
pop
shll
lret
and
add
es
and
adc
sbb
dec
sbbl
mov
cmpsb
add
cmp
cmp
fwait
xchg
test
xor
test
mov
xchg
cmp
subl
cmpsl
push
in
and
rorl
lock
stos
mov
dec
mov
jb
mov
mov
jmp
lds
sbbb
add
push
mov
inc
sbb
scas
mov
mov
insl
push
mov
fwait
imul
dec
cs
int
mov
jecxz
clc
int3
and
xchg
nop
movsl
aaa
test
ds
lock
xor
arpl
test
lods
mov
addl
push
lods
mov
cmpsb
xchg
lea
push
sbb
out
dec
je,pt
sahf
stc
jnp
mov
pop
dec
add
push
push
das
sbb
shl
popf
scas
cmc
iret
jp
fnstenv
dec
push
cld
sahf
jne
or
sub
and
loope
fcoms
dec
sub
and
add
fidivrs
jo
bound
dec
jns
push
mov
jmp
aad
add
hlt
ret
pop
ret
fists
pop
loope
mov
dec
in
int
adc
jb
mov
ret
mov
data16
sub
xor
into
mov
mov
adc
lea
ss
imul
dec
scas
jp
pushf
sub
lcall
popa
xchg
jl
adc
jle
push
inc
jl
jge
sbbw
and
das
and
xchg
xchg
and
jl
stos
adc
pop
insl
or
cmp
mov
outsl
jns
mov
push
jae
xchg
pop
push
nop
inc
jae
iret
das
mov
outsl
xchg
xor
jp
and
sahf
push
mov
lods
clc
mov
dec
or
xchg
jae
mov
daa
orl
pop
aaa
pop
mov
adcb
push
sbb
rcl
lret
jmp
or
adc
jp
mov
pop
in
add
mov
sub
dec
adc
lahf
jns
jb
lret
gs
xor
cli
ret
in
inc
out
repnz
lcall
fsincos
mov
fdivr
jno
push
inc
jp
das
out
and
das
enter
jnp
aas
and
add
iret
sub
ja
popf
pop
invd
stos
mov
and
or
jl
push
lcall
dec
xchg
jecxz
mov
adc
jle
callw
lods
add
scas
packssdw
or
or
mov
push
mov
sbb
sbbb
dec
pop
inc
pop
add
push
push
pop
xor
sub
fildll
fs
test
loopne
neg
lret
mov
or
in
push
stos
jg
push
sbb
pop
mov
sub
out
mov
call
xor
add
xor
hlt
mov
nop
mov
scas
xor
popf
fmul
arpl
test
movsb
daa
sub
int3
arpl
aas
jo
dec
pusha
and
ret
push
mov
ss
insb
xor
or
fwait
xchg
popf
cmc
add
test
inc
mov
inc
aam
dec
push
adc
add
hlt
jns
aas
rcr
mov
xchg
negl
push
sti
inc
stos
test
cmp
jp
jecxz
daa
arpl
sbb
push
daa
scas
cltd
outsl
mov
push
jns
mov
fbstp
pop
loop
enter
mov
addl
push
test
test
arpl
movsl
jl
push
mov
popf
fs
ret
pushf
aas
push
jp
jno
es
imulb
xchg
in
jbe
mov
mov
inc
pop
ret
sahf
mov
xchg
xor
cli
ljmp
sti
outsb
and
ret
test
and
mulb
movl
std
out
mov
sub
stc
dec
std
out
mov
mov
inc
jmp
xchg
shlb
ficoml
xchg
outsb
out
lods
fnsave
dec
dec
mov
gs
ds
lock
add
stc
xor
jp
std
xor
les
leave
movsb
int
lcall
stc
xor
pop
push
jns
lods
leave
fsubl
pop
mov
lods
sbb
or
repz
imul
xor
sbb
mov
cmpsw
jp
and
and
xor
stos
pop
dec
addr16
insb
and
nop
cmpsb
push
mov
inc
mov
push
mov
scas
pop
push
mov
sbb
adc
inc
outsl
cmp
cltd
scas
in
cmc
out
sahf
test
dec
adc
test
test
xor
clc
iret
pop
out
das
push
xor
push
int3
movsb
stc
ds
mov
ss
imul
mov
subb
fadds
mov
dec
popf
push
xchg
pop
es
ljmp
lods
jne
out
cmp
inc
cs
add
in
iret
sub
jo
hlt
adc
cld
xchg
lcall
add
jmp
jno
shlb
das
jb
sbb
aad
ss
dec
adc
daa
or
rolb
rcr
sbb
xchg
or
adc
xor
dec
lock
xchg
lods
sti
jbe
test
dec
mov
or
sub
dec
mov
fcomp
fwait
push
fidivs
sbb
mov
jno
int3
mov
xchg
pop
mov
xor
and
mov
std
cmp
dec
mov
insl
das
out
cmp
xor
push
mov
stc
or
movsb
in
lods
fbld
lods
test
jl
fistpl
scas
stos
inc
pop
mov
icebp
incl
icebp
sbb
imul
dec
neg
mov
jge
mov
push
mov
inc
dec
iret
push
jl
in
imul
bound
dec
sbb
out
and
cwtl
mov
das
setno
lahf
mov
inc
pop
dec
out
lret
in
pop
rorb
cmp
push
or
pop
repnz
jae
jmp
or
mov
push
mov
leave
xor
mov
cmp
cmp
repnz
cmp
dec
pop
push
push
cld
add
or
movsb
outsb
xor
xchg
or
in
cwtl
or
adc
dec
and
xor
xchg
popf
lock
movsl
mov
or
addl
lea
stos
jmp
mov
lods
mov
push
push
ja
add
jge
mov
adc
dec
dec
lods
aaa
subl
mov
sbb
sahf
xor
addr16
ja
movsb
mov
ret
shr
adc
leave
xchg
rcrl
inc
sbb
enter
jg
push
mov
mov
addr16
xchg
xchg
jo
pop
out
lods
sbb
jp
jae
xor
mov
and
fisubl
push
pop
call
ljmp
mov
sahf
cmp
in
mov
into
sbb
fsubs
mov
ss
popf
out
test
cmpsb
insb
movsb
pop
js
jo
jo
shrl
stc
adc
cmpsb
inc
inc
out
fwait
daa
cs
mov
push
cmp
negb
jg
and
in
lods
push
xchg
jp
add
xor
sbb
pop
or
mov
pop
pcmpgtd
out
mov
cmp
push
xchg
int3
pop
js
sbb
pop
enter
icebp
pop
nop
xor
sti
mov
cli
cmp
mov
sbb
icebp
loope
gs
test
je
sbbl
in
es
sub
fsub
lods
iret
mov
mov
cmp
mov
fistpl
sti
cmp
xor
popa
lcall
dec
int
fmuls
arpl
dec
test
cmpsl
push
jbe
in
push
mov
pop
loope
sarl
cmc
inc
sub
inc
pop
pop
xchg
andl
jno
pop
mov
je
xchg
push
mov
or
dec
mov
dec
insb
incl
frstor
test
flds
jnp
push
popa
mulb
fbld
rclb
inc
mov
pop
xlat
add
popf
ret
mov
mov
and
mov
clc
sub
popf
repnz
clc
and
fbstp
pop
mov
jne
inc
mov
int3
inc
lcall
loope
jmp
out
outsb
cmpsl
xchg
and
or
push
pop
jl
and
inc
mov
inc
shll
lock
repz
pusha
and
push
adc
adc
push
scas
repz
fisttpll
clc
out
and
inc
fucom
xchg
sbb
cmp
dec
mov
sti
sub
pop
in
mov
jno
xchg
icebp
push
xchg
and
js
pop
cmp
cmp
add
cmp
mov
shlb
gs
xchg
int
jo
mov
push
sbb
stos
jle
or
sti
js
pop
fstpt
mov
adc
add
push
fldenv
jo
out
xchg
pop
cmp
dec
or
and
jmp
out
iret
test
loopne
loop
dec
enter
in
cmp
call
dec
into
pop
hlt
push
and
cmp
insb
or
pop
mov
loop
jl
not
xchg
and
mov
adc
xor
into
lret
loopne
inc
stc
fsubr
and
fimuls
lock
mov
mov
sub
std
pop
pop
sbb
push
mov
insl
mov
lea
les
in
test
xchg
xchg
pop
lret
test
cmp
test
pop
sti
filds
imul
pushf
xor
lret
int
lahf
push
lret
das
sbb
cs
mov
pop
popa
xor
popf
and
es
loop
xchg
adc
cmp
push
repz
or
xchg
push
out
xchg
xchg
sbb
out
stc
xlat
xor
std
push
loope
bound
mov
pop
shll
pop
int3
mov
or
mov
or
lea
xchg
dec
movsb
lds
xchg
push
test
dec
mov
xorb
rcr
and
or
jns
enter
or
inc
pushf
clc
outsb
enter
rclb
mov
in
xchg
leave
sub
jns
xor
in
adc
insl
mov
dec
sbb
out
inc
push
dec
cmp
xchg
and
xor
movsb
iret
pop
and
and
mov
sub
fnstcw
shr
or
sub
push
sub
dec
leave
mov
sbb
arpl
mov
dec
sbb
xchg
bound
jne
add
push
movlps
lods
scas
aas
stc
dec
mov
sub
lret
sti
push
add
shrl
pop
ja
pop
jl
xor
cmpsb
movsb
push
das
int
adc
loopne
in
sub
mov
jmp
mov
movsl
stc
popa
mov
mov
lods
mov
lcall
addb
scas
es
mov
pushf
inc
pop
inc
jnp
cmp
test
jb
lret
adc
dec
xchg
notb
adc
jne
in
jmp
shlb
and
in
or
mov
adc
sbb
jl
test
js
stos
icebp
das
sbb
xchg
fcmovu
add
cmovg
xor
imul
pop
cs
cli
adc
pop
lahf
jns
punpcklbw
dec
adc
lcall
push
add
or
leave
cwtl
into
dec
sti
xchg
scas
dec
shrb
push
add
jo
pop
hlt
sbb
or
push
fs
push
aas
cmpsb
movsl
iret
insl
xlat
in
sbb
adc
fwait
mov
push
add
incl
pop
jg
inc
cmp
jno
or
mov
stos
xor
mov
push
es
add
mov
mov
push
je
adc
jae
dec
in
andb
jge
shlb
int
push
adc
test
jne
xchg
push
cmp
fcmove
and
movsb
sbb
ss
nop
jb
sbb
in
icebp
cwtl
xchg
ret
sub
mov
ret
jl
jecxz
bound
mov
out
cltd
out
ds
aaa
call
aas
aam
ret
sub
mov
js
inc
cmp
jae
divb
dec
incl
mov
inc
sbb
xor
add
outsb
adc
push
mov
or
frstor
xchg
arpl
call
jo
stc
stos
cltd
ss
cwtl
push
daa
jo
add
jo
addr16
xchg
pop
adcb
and
lock
cmp
jbe
sbbl
imull
flds
mov
cmp
add
sbb
cs
jbe
add
lods
cltd
xchg
mov
movsb
mov
dec
rol
cld
push
jb
aas
mov
repz
mov
adc
lods
ds
out
in
sbbl
fwait
jb
mov
scas
jg
xor
adc
sbb
jge
ljmp
aam
dec
cltd
xor
cmp
push
or
fldt
lods
into
loop
or
push
adc
xchg
je
mov
fbld
fildll
out
fcoms
add
ficompl
out
js
pusha
push
add
or
sbb
popa
int3
pop
cmp
mov
mov
fdivrl
stos
adc
dec
xor
adc
sub
xchg
test
push
popl
notl
dec
fs
mov
fstpt
xor
pushf
inc
ja
mov
ja
ljmp
fsubs
xor
fadd
arpl
lcall
mov
cwtl
insb
xor
sahf
popa
inc
jno
push
shr
add
cmp
adc
icebp
mov
jp
shl
sub
jb
xchg
adc
cmc
jge
cmc
mov
sbb
or
scas
adc
dec
add
lods
cltd
pushf
sbb
repnz
cmpsb
push
mov
dec
inc
pop
ret
sbb
aas
mov
movsl
cwtl
cmp
ss
fnstsw
sarb
push
outsb
fadd
mov
pushf
jnp
data16
bound
call
xchg
cmc
sbb
and
sbb
pop
cmp
nop
dec
imul
or
push
adcb
mov
dec
cmp
sub
outsl
data16
sub
xchg
dec
je
pop
mov
dec
sub
int
xor
test
adc
sbb
pop
inc
adc
xor
dec
xchg
in
shlb
push
xor
pop
mov
adc
pop
mov
dec
mov
out
adc
fiadds
xchg
jne
lahf
jo
dec
add
lods
into
xor
cmpsl
out
test
outsl
or
iret
mov
cwtl
lds
dec
pop
popf
cmpl
adc
mov
cmpsb
data16
and
mov
popa
mov
subl
fidivrs
insl
das
sti
stos
mov
shl
add
call
push
loope
aas
inc
shr
rcll
aad
adc
or
push
out
push
xchg
or
test
outsl
xchg
in
gs
in
xchg
jno
outsl
flds
pop
jnp
pop
add
xor
xchg
xchg
xchg
int
cmp
sbb
mov
xchg
mov
aas
test
iret
enter
add
push
stos
push
pop
pop
hlt
out
negl
cmp
cmpsb
sahf
fidivl
and
sbb
out
outsb
mov
push
stos
pushf
push
jno
fstps
mov
xchg
add
sbb
outsb
xor
dec
inc
or
mov
js
add
push
loope
adc
test
and
jnp
iret
dec
in
push
lods
scas
iret
mov
or
sub
sbb
inc
popfw
pop
lods
sub
lds
adc
pushf
cli
mov
mov
arpl
push
xchg
mov
ret
pop
mov
in
xchg
shl
fldt
sub
je
and
xchg
cmc
addr16
and
sbb
pop
add
jl
sub
cmp
jge
ja
mov
idivl
lret
gs
std
xchg
bound
lea
clc
int
lret
nop
addb
lcall
add
add
xor
in
mov
loopne
rcrb
cwtl
ds
sbb
test
jecxz
cmp
mov
jno
pop
xor
inc
xchg
xchg
in
mov
lds
push
bound
pop
jbe
cmp
jp
xchg
push
jo
pop
decl
idiv
in
jbe
stc
fldt
shl
dec
jg
sbb
adc
sahf
insb
scas
or
shr
push
adc
int
insb
cmpsb
lcall
orb
inc
mov
jmp
push
sbb
loop
aas
adc
or
in
outsl
sub
jno
xchg
imul
lahf
test
xor
ljmp
xchg
mov
out
fimull
iret
xor
sti
dec
dec
add
inc
mov
sahf
std
and
sbb
mov
mov
addb
fdivrs
gs
xchg
push
test
push
fstps
dec
xchg
imul
mov
in
popa
out
bnd
shlb
lea
mov
and
aad
mov
inc
sub
ficoms
mov
xchg
xchg
mov
insb
xor
or
xor
sbb
addr16
cld
int3
mov
lea
sbb
add
dec
shlb
roll
adc
and
or
xchg
sub
xchg
push
and
adc
inc
adc
int3
fcmovbe
cwtl
lock
out
mov
mov
addr16
mov
int3
insb
mov
sarl
imul
dec
mov
jl
adc
mov
mov
mov
sbb
adc
scas
idivb
mov
xchg
dec
rorl
sbb
mov
adc
mov
das
jb
shll
loopne
pusha
and
pop
and
xor
xchg
jne
ljmp
adcb
mov
sar
xchg
inc
sbb
mov
sbb
mov
outsb
mov
cmp
cs
fdivs
lcall
or
xor
mov
scas
xor
sub
push
mov
int3
push
jo
je
push
adc
sub
or
lret
pop
imul
xchg
lea
adc
mov
cmpsl
pop
sbb
or
cmpsb
mov
or
aaa
add
dec
sarb
out
inc
fwait
jnp
push
jge
or
into
ljmp
int3
ss
leave
repz
std
xlat
pop
js
into
mov
or
in
ljmp
pop
pop
dec
add
stos
sbb
imul
cltd
add
adc
jnp
insb
repnz
mov
out
add
insl
add
sub
xor
iret
outsb
mov
enter
loopne
mov
subl
jnp
xchg
mov
les
outsl
push
fsubs
push
adc
lock
fisubrs
lahf
je
mov
cmpsl
out
scas
call
push
xchg
adc
decl
icebp
xchg
mov
dec
or
clc
subb
sbb
scas
mov
sar
cmp
inc
ficompl
xchg
das
adc
dec
rcr
adc
inc
lods
pushf
adc
dec
mov
ret
fmuls
arpl
in
pusha
xchg
shll
push
cmp
mov
je
int
jmp
adc
fs
dec
pop
scas
rorl
imul
les
imul
cltd
fldlg2
pop
cmpsb
cltd
sub
int3
jb
sub
fnstsw
test
aaa
pop
sub
xchg
cmp
xorl
leave
mov
cmp
adc
and
cs
das
imul
iret
lea
xor
pop
mov
jnp
sbb
out
mov
cmc
in
aas
push
adc
hlt
push
addr16
xor
fildll
mov
cmpsb
inc
or
sti
add
ret
xchg
mov
frstor
or
dec
call
icebp
sbb
pop
aaa
pop
pop
jg
dec
lock
scas
or
shlb
js
inc
mov
adc
jns
jbe
mov
adc
lcall
adc
pop
push
cmp
sub
rcl
add
jbe
adc
mov
fcmovne
outsl
add
fcoml
push
mov
ret
sbb
jle
mov
sub
rcrl
or
jbe
and
pushf
hlt
lahf
aad
clc
push
add
jmp
bound
ds
mov
or
xchg
repz
sbb
mov
lcall
loop,pn
addr16
adcl
xchg
ja
mov
scas
sbb
mov
pushf
fildll
pop
out
xchg
movsl
inc
aaa
fcoms
jae
and
scas
daa
adc
data16
mov
icebp
adc
flds
xchg
call
je
mov
cwtl
add
cmp
dec
fwait
push
int3
hlt
push
les
in
mov
in
imul
add
sub
or
and
imul
dec
rorb
and
xchg
and
lods
jb
and
fisttps
adc
adc
mov
incb
push
sub
cmc
add
jo
inc
adc
or
into
call
leave
or
mov
mov
xchg
pop
movsb
sbb
mov
sub
dec
sbb
gs
mov
in
in
cmp
or
ds
call
imul
sbb
mov
enter
mov
loopne
into
cwtl
and
jle
inc
xlat
and
aam
outsl
sti
cmc
fs
aaa
sub
je
sub
les
push
leave
stc
dec
inc
pop
xchg
push
jnp
mov
out
addr16
sti
and
lahf
daa
les
test
sbb
int3
pmaddwd
adc
out
mov
mov
mov
bound
jmp
cli
lods
sub
xchg
xchg
jne
mov
aaa
sbb
jl
cmpsb
jnp
arpl
int3
fbld
fisttps
iret
outsl
movsb
jb
jns
mov
imulb
xor
out
jns
mov
xor
lret
xchg
loop
sub
cli
int3
jg
sahf
push
mov
cmp
adc
aaa
add
sub
fnsave
in
lcall
mov
mov
and
adc
ret
jo
gs
pop
repz
loop
and
xchg
mov
enter
je
loope
dec
pop
movsl
mov
loope
inc
mov
outsl
lea
and
add
sbb
push
jg
dec
or
outsl
add
mov
cmpsb
out
div
push
xchg
lds
leave
adc
jbe
aam
sub
cmp
add
std
cmp
push
roll
cltd
cmpsl
shrb
je
lcall
xor
push
xlat
mov
hlt
fmull
divb
sub
stos
insb
and
dec
cmp
mov
pop
jb
test
enter
add
int3
data16
add
fmul
mov
jnp
fnsave
sbb
mov
out
xchg
pop
sbb
sbb
push
stc
ret
aaa
mov
pop
fstps
pop
add
cld
in
addr16
dec
add
xchg
xchg
sbb
xchg
push
cmp
cmp
sti
aaa
popa
js,pt
das
mov
imul
xchg
jge
les
xchg
sbb
imul
lock
dec
das
inc
sbb
mov
shr
data16
and
int3
jmp
fmull
arpl
mov
mov
and
test
inc
mov
in
lahf
mov
inc
jl
outsl
cmc
mov
scas
pop
or
addb
rolb
sbbl
cmpsb
test
dec
sahf
das
jl
repz
xor
ret
add
pop
ficomps
mov
lods
aam
mov
xorb
pop
and
jb
and
adc
xlat
js
push
jae
sub
add
test
mov
dec
lock
push
and
sbb
dec
sbb
adc
push
jno
pop
dec
stos
push
aad
repnz
xchg
cmc
xchg
jecxz
dec
div
sbb
scas
into
inc
xchg
decb
out
imull
lcall
and
ret
shlb
xchg
int
arpl
ljmp
push
jecxz
fcoml
ljmp
add
mov
addl
sbb
push
mov
mov
rcrb
push
add
mov
add
sbb
sti
xchg
lods
jnp
std
pop
push
out
sub
mov
sub
pushf
mov
and
lods
or
lret
mov
dec
pop
xorb
sti
ret
out
daa
cwtl
test
outsl
or
cmpsb
and
push
loope
bound
popa
shll
mov
insl
std
pop
lock
jmp
adc
pop
sub
lods
outsb
push
push
aas
and
out
in
sti
aas
or
ljmp
scas
dec
iret
lds
jmp
repnz
addr16
rcll
jl
push
sahf
and
xor
mov
mov
mov
jle
rorb
pusha
dec
outsl
lret
mov
repz
jl
pop
js
js
fs
sbb
stc
test
in
inc
cmc
daa
and
out
adc
repnz
int
int3
lea
cmp
fld
das
mov
cmp
cltd
mov
test
push
int3
cmp
jne
jns
push
subl
inc
xor
cmpsl
int
ss
add
cld
aad
and
jo
lcall
and
sbb
fists
cmc
sbb
lds
std
push
pop
cmp
lds
pop
jno
add
sub
add
daa
ss
sbb
dec
sub
mov
ret
sbb
inc
and
push
xor
mov
ds
out
shlb
inc
mov
mov
dec
or
xchg
stc
icebp
mov
jnp
mov
stc
pop
mov
repnz
shlb
insb
stc
dec
mov
sub
mov
jp
mov
gs
dec
into
sbb
cmp
or
adc
popa
fchs
xchg
xchg
aam
and
lret
or
jmp
movsl
and
repz
inc
fimull
lea
shrb
fistpll
sub
sub
sub
mov
aas
rcll
fs
jb
mov
insl
hlt
enter
sub
sbb
sub
ss
js
inc
dec
loopne
mov
jecxz
dec
imul
adc
hlt
xchg
scas
push
push
test
cld
sbb
add
xchg
mov
pop
int3
cmp
mov
roll
jnp
aam
sbb
add
cli
and
fwait
movsb
sub
cmpb
lea
jns
jge
pop
and
cmp
dec
daa
std
ja
pop
in
push
mulb
and
xor
and
nop
or
jo
outsb
decl
sub
imul
jle
aad
inc
dec
xchg
aam
popf
rcrl
dec
push
dec
sbb
cmp
cmp
loop
xor
and
out
les
lods
call
mov
and
out
inc
aaa
je
jecxz
stc
jb
jg
int3
mov
repz
add
push
mov
and
inc
enter
xchg
adc
jne
lds
lock
cmp
push
mov
push
ljmp
je
add
arpl
lock
cvtpi2ps
dec
inc
and
pop
xor
scas
insb
mov
cmp
sbb
daa
push
dec
lods
push
pop
inc
imul
stos
xor
pusha
and
mov
imul
lock
xchg
das
sbb
add
inc
cs
cvtps2pd
xor
cwtl
loop
mov
cli
add
sti
shrb
outsl
lret
mov
sub
iret
sahf
sbb
rorl
jnp
push
arpl
adc
xor
xchg
rol
ror
push
je
mov
mov
gs
aam
shr
jae
daa
and
lock
adc
sub
dec
fistps
dec
inc
xchg
add
sbb
inc
dec
jno
pop
mov
xorb
loopne
xor
mov
mov
push
cmp
push
dec
mov
or
sub
mov
loopne
decl
cmc
in
movsl
les
in
push
xor
or
repnz
std
sbb
stos
jbe
cs
es
lds
andl
dec
xchg
enter
mov
int3
fcomp
mov
sbb
push
lret
jl
and
lahf
jl
rorl
or
and
test
icebp
stc
and
dec
fnstenv
cmpsl
ljmp
sub
sub
jbe
sub
mov
leave
ds
aaa
pop
out
pop
jb
mov
xor
sub
jge
mov
add
mov
jecxz
aas
mov
bound
xor
mov
mov
sbb
sub
inc
and
dec
dec
daa
mov
out
jecxz
int3
shl
push
lds
in
fwait
inc
xor
pop
imul
aam
cmpsl
test
pop
loopne
inc
mov
scas
lret
mov
inc
inc
imulb
daa
popf
or
ljmp
dec
xor
pop
shrl
push
jecxz
pusha
mov
scas
mov
stc
sbb
daa
bound
pop
test
mov
dec
cmpl
and
mov
jg
dec
test
js
addr16
or
addr16
dec
xchg
dec
rorl
aas
and
pop
rolb
ret
inc
fdivs
imul
and
sbb
fdivrl
xor
lock
ss
sub
xchg
jns
mov
rcrb
push
and
jb
cs
add
mov
push
cli
mov
sbb
out
and
and
pop
jge
test
arpl
int3
shr
popf
push
add
mov
push
inc
rcl
clc
adc
hlt
mov
subl
lock
dec
fidivrs
and
push
push
adc
xchg
push
sub
out
into
mov
dec
jno
scas
inc
pand
dec
dec
shlb
sbb
jno
neg
mov
addr16
jmp
in
mov
ja
add
sbb
call
cmpsl
xor
mov
mull
inc
je
xor
imul
outsl
stos
cwtl
push
lret
loopne
das
gs
xchg
jnp
push
mov
popl
inc
mov
stc
pop
rclb
or
sub
jmp
shll
jne
and
imul
paddusw
scas
inc
aad
idivl
pop
inc
movl
add
xchg
sti
mov
xor
pop
sbbb
push
mov
lret
insb
fcoml
or
jo
into
xor
mov
xor
test
sub
xchg
dec
xchg
cs
cmpsb
lcall
or
lods
mov
pop
pop
lcall
push
into
out
add
or
nop
jmp
call
fdivrl
data16
int
and
imul
xchg
scas
incb
inc
mov
cld
sbb
pop
inc
pop
push
jmp
in
pop
mov
movsb
mov
pop
pop
arpl
xor
out
dec
cltd
pop
sbb
shl
xor
addr16
mov
push
pop
push
into
dec
sub
xchg
popa
xor
iret
push
sub
add
sti
adc
int
mov
or
push
in
in
adc
sbb
repnz
mov
mov
out
push
nop
push
adc
fwait
mov
cld
aas
mov
add
sub
sub
loop
outsl
inc
rcrb
lods
cmp
add
jge
mov
mov
mov
push
sub
cmp
pop
pusha
loop
roll
pop
xor
mov
xor
cmp
sub
fildll
ficomps
repnz
fsubs
adc
in
icebp
pushf
or
or
pop
das
cmp
sub
icebp
inc
dec
lret
sbb
or
cs
and
je
mov
scas
ret
xchg
adc
pop
aad
cmp
out
call
lret
mov
mov
pop
xor
mov
adc
loop
das
jmp
or
sbb
pushf
jbe
push
push
iret
enter
jbe
adc
add
dec
push
cltd
fdivl
in
loope
jle
fdiv
inc
push
bound
insl
add
sub
and
cmp
cli
hlt
std
shr
stos
ret
sub
cmpsb
cli
notl
pop
fs
stos
push
add
stc
stos
sarl
mov
push
mov
or
or
mov
mov
push
cmpsl
cwtl
push
mov
push
roll
into
sub
nop
aaa
arpl
dec
xor
xor
rcl
pop
rol
in
mov
or
shlb
lock
inc
and
mov
xchg
pop
inc
int
sbb
jg
mov
add
dec
shl
cmp
inc
repnz
sbb
stos
mov
out
inc
inc
sti
frstor
xchg
lock
xor
push
repz
sub
pop
add
xor
mov
leave
mov
lea
adc
imul
mov
pop
movsb
shrb
out
aad
push
push
or
pop
pushf
in
test
movsl
enter
int3
ja
test
lahf
fstpt
movsb
and
push
repnz
pop
gs
mov
out
xchg
jae
inc
cmp
out
hlt
sbb
jno
jne
push
cmp
lret
sarb
push
clc
es
inc
dec
mov
push
cs
ss
push
loope
fwait
pop
cld
jecxz
insl
outsb
ret
or
orb
jns
jnp
pop
out
mov
jecxz
pop
test
lods
push
outsb
ret
imul
sahf
rorl
xlat
mov
test
and
dec
xchg
shlb
ss
mov
mov
xor
mov
jbe
fistps
adc
dec
and
mov
jl
sub
and
mov
push
in
cmp
push
add
jl
mov
cmpsb
aad
jl
jmp
movsl
les
push
pop
mov
add
xchg
aas
into
jmp
dec
shl
pop
repnz
mov
mov
loope
cmpsb
ret
adc
xor
or
push
push
ss
lahf
pushf
mov
lret
inc
je
inc
stos
push
fcoml
jo
pop
ficompl
mov
mov
lret
jns
out
xchg
jg
mov
push
movsb
push
dec
fs
inc
nop
out
je
arpl
cli
popf
setle
push
mov
jbe
es
pop
fidivrs
mull
inc
jle
aam
in
in
push
iret
adc
clc
xlat
or
test
in
call
scas
jle
lods
mov
jae
shl
sbb
mov
jl
filds
mov
inc
and
adc
jp
cs
pop
xor
inc
andb
and
adc
lock
or
int3
cmp
push
adc
incl
sbb
lcall
mov
iret
push
aam
or
fdivrs
jl
cs
popa
inc
stc
mov
cli
into
mov
sub
iret
adc
xchg
stos
movsl
push
or
fwait
aam
dec
push
ret
and
out
outsb
aas
ljmp
jne
xchg
sub
xchg
notb
aaa
std
fmul
mov
adc
fmuls
mov
testl
insl
rorl
aaa
pop
xor
cmp
and
jns
subl
iret
popf
sahf
pop
sub
xor
push
push
insl
cs
shl
cmp
imul
cmp
pop
sbb
bound
out
and
scas
into
ljmp
in
popa
cmc
loop
push
rcr
out
repnz
lds
jecxz
ljmpw
iret
jae
gs
cmpsl
mov
addr16
or
pushf
clc
dec
pop
jbe
adc
leave
pop
sub
stos
jb
popf
adc
mov
mov
outsl
push
inc
ss
nop
jb
inc
xorb
fs
mull
jae
sarl
sbb
cmp
xchg
mov
xor
shl
hlt
adc
popa
pop
push
out
scas
fdivrp
xchg
insb
mov
mov
testl
flds
loope
in
into
or
xchg
jle
lock
into
stos
mov
sbb
cwtl
stos
adc
pop
dec
adc
lret
das
and
xchg
mov
fiaddl
rcrb
fdivs
insl
loope
mov
cmpsb
negl
pop
stos
sub
test
mov
arpl
and
hlt
mov
cwtl
adc
imul
push
push
movsb
xor
insl
lcall
mov
add
rorb
repnz
lock
dec
insb
or
test
xchg
push
push
cwtl
mov
pop
pop
les
sbb
sub
push
ret
inc
xchg
inc
aad
sbb
jmp
push
sbb
cmp
add
jb
cmpsb
fcom
jecxz
mov
adc
xor
mov
mov
mov
or
mov
hlt
lret
sbb
jg
xor
xor
dec
dec
fwait
mov
andl
xchg
mov
mov
mov
cmp
imul
or
aam
repz
or
push
pop
push
out
cmc
push
stos
pop
lock
push
sub
add
fxch
clc
xchg
mov
movsb
push
cmp
xchg
adc
sbb
cmpsb
push
add
cmp
pop
pop
pop
cmpsb
cmc
xchg
sbb
iret
imul
insl
xchg
or
push
inc
inc
ss
xlat
call
sub
push
xchg
adc
mov
into
gs
imul
dec
cmp
mov
dec
int
fsubr
movsl
pop
sbb
mov
fldenv
dec
xchg
dec
inc
xchg
xor
or
shll
pop
pop
push
or
out
mov
mov
enter
inc
es
dec
sahf
push
sub
pop
fs
sarl
push
scas
add
out
pop
mov
mov
in
insb
iret
fildll
repnz
push
push
leave
addr16
loop
pop
pop
loope
xchg
cmp
lcall
and
fimull
stos
insb
cwtl
imul
xor
aas
shll
rcrb
inc
inc
cld
pop
pop
daa
fimuls
js
and
xor
rcl
inc
or
scas
mov
jae
pop
shl
fadds
jmp
cld
fs
addr16
pop
xchg
imul
jne
data16
arpl
ret
lret
mov
pop
adc
cmp
push
xchg
push
add
test
adc
xchg
inc
xchg
or
or
pop
jno
fisubrs
jne
imul
pop
hlt
into
clc
xchg
cmp
sbb
dec
xor
loope
mov
inc
fs
cmpsl
add
adc
addr16
mov
jl
jg
inc
adc
test
xchg
insl
mov
mov
inc
out
mov
cwtl
mov
inc
inc
lret
jns
ss
loopne
and
mov
mov
nop
inc
shlb
pop
xchg
inc
and
push
jbe
out
lret
xchg
stos
or
add
mov
fwait
cwtl
xor
lret
cld
pusha
jmp
stos
aas
fsubr
xlat
mov
or
je
xchg
fcompl
mov
ds
adc
test
cmpsl
inc
ss
imul
movl
inc
xor
push
mov
aam
sbb
loop
sbb
mov
jp
lahf
push
inc
ljmp
mov
add
xor
xor
mov
insb
add
jns
out
f2xm1
loopne
adc
bt
mov
les
shl
inc
outsb
xchg
add
dec
mov
loop
mov
roll
or
xchg
ds
lods
insb
mov
sub
sbb
imul
sub
pop
jmp
imul
push
sbb
pop
lods
push
xchg
into
xorb
std
add
test
addl
mov
xchg
stc
sbb
sbb
mov
cmc
lds
cltd
mov
repz
add
insl
pminub
pop
add
ficoms
clc
imull
fcompl
mov
dec
cmp
sub
jg
iret
data16
xchg
shl
mov
mov
stos
fildll
inc
or
bnd
xchg
sahf
data16
sti
push
sub
sub
insb
mov
fstl
adc
pop
or
mov
dec
mov
hlt
push
lea
push
pop
sbb
push
stos
xor
cmp
fs
mov
ja
aam
mov
and
and
sbb
adcb
outsb
jnp
out
mov
xor
mov
fists
fsts
cs
scas
cmpsl
adc
and
insb
jmp
leave
out
outsl
xchg
movsb
dec
rclb
test
mov
dec
pop
cltd
and
leave
cmp
jg
or
push
test
or
ljmp
pop
jns
std
pop
xor
lds
or
fisubrl
pop
divb
push
pop
cmova
popf
pop
xchg
push
mov
es
mov
shlb
test
cmpsl
adc
test
pop
sbb
loope
mov
push
xchg
push
stc
imul
xchg
scas
in
repnz
pushl
push
inc
inc
mov
jl
seta
dec
dec
call
push
mov
push
jo
popa
pop
pop
mov
int
andl
fists
icebp
fldenv
mov
push
sub
sub
paddq
adc
push
xchg
and
int
popf
mov
and
ljmp
and
mov
outsb
pop
cmp
xchg
xchg
test
shlb
inc
jnp
mov
fwait
push
mov
stc
js
popa
inc
and
int3
or
ffree
and
mov
sti
popf
add
idivb
leave
pusha
jno
jnp
inc
shl
push
fisttps
imul
jg
in
xchg
outsb
mov
outsb
popf
cmp
inc
es
mov
jecxz
test
shl
cmp
dec
jb
xor
fcoml
and
push
outsb
push
jb
dec
sbb
sarb
lahf
fsubs
nop
arpl
out
inc
je
popa
pop
dec
enter
inc
aaa
outsb
out
repz
xchg
outsl
rol
aad
fs
int
stos
icebp
outsb
sbb
lahf
xchg
xor
xor
pop
jecxz
inc
pmaxsw
lcall
mov
out
add
inc
pusha
xchg
dec
in
jo
push
sbb
je
andb
pop
xorl
or
adc
and
jecxz
popl
mov
and
mov
push
or
mov
ret
cmp
pop
mov
sbb
stos
sub
es
das
insl
in
fs
push
test
scas
pop
rorb
and
jmp
fiaddl
out
and
daa
push
test
roll
movsl
mov
mov
test
xor
roll
imul
rcll
dec
movsb
dec
into
divb
dec
mov
mov
mov
inc
andl
and
jnp
or
adc
xor
mov
aad
cmpb
subl
cld
fdivr
dec
xchg
loopne
xor
push
jecxz
out
dec
push
test
or
rol
sub
mov
push
mov
cwtl
fwait
lret
push
mov
mov
inc
xchg
pop
rclb
fbstp
jbe
mov
loopne
sub
dec
add
js
lret
push
test
cli
les
js
mov
inc
hlt
dec
sbb
mov
pop
loop
xchg
cmpsb
sbb
mov
xchg
outsl
lods
lret
test
ljmp
call
add
jb
mov
dec
dec
rcrb
pop
pop
hlt
add
ja
in
push
iret
dec
or
aad
je
fwait
js
fidivrl
adc
loope
pushf
mov
mov
fcoms
outsb
insb
test
jg
pop
sbb
push
mov
subb
dec
push
sbb
xchg
pushf
mov
andl
lock
inc
notb
loopne
dec
fidivs
or
push
ror
dec
test
mov
mov
jp
jno
mov
sbb
cmp
shrb
mov
mov
test
inc
ja
test
test
clc
sti
lcall
fldt
jge
sbb
stc
dec
inc
test
pop
inc
or
cmc
or
mov
mov
stos
fcmovb
inc
dec
mov
insb
jp
cli
pop
inc
sahf
in
bound
push
inc
inc
mov
cmc
xchg
inc
jo
in
gs
shlb
pop
mov
xchg
bound
arpl
cli
arpl
inc
inc
dec
cli
sarl
adc
add
mov
loope
std
mov
mov
test
fidivl
mov
mov
fwait
adc
pop
mov
clc
leave
fists
ficompl
aad
dec
inc
lret
pop
push
pusha
xor
pop
daa
cmp
scas
push
sbb
and
cltd
jnp
nop
or
xchg
and
xchg
mov
mov
ret
inc
or
mov
cmp
pop
insb
pop
lds
lret
pop
or
lcall
lock
ror
das
xor
pop
jo
pop
dec
aam
mov
cmp
mov
repz
aaa
inc
mov
mov
xchg
lret
sbb
adc
dec
loopne
pop
push
movsb
xor
ds
xor
cli
sbbb
push
sbb
fisttpll
loop
fisubrs
mov
lock
cmp
sub
nop
das
bound
or
pop
adc
xor
daa
out
push
xchg
in
incb
inc
scas
pop
push
cmpsl
cmp
test
das
or
insl
add
inc
mov
lea
out
fsts
stos
imul
je
jge
pop
dec
jnp
es
aas
ja
push
nop
test
int
inc
mov
cmpsl
mov
mov
mov
sahf
aas
loopne
cmp
data16
in
bnd
sbb
dec
lods
int3
jnp
pop
je
push
mov
les
push
cmpb
jb
mov
aam
adc
push
mov
cmp
cld
pop
dec
cmp
push
into
popa
hlt
sbb
out
std
hlt
scas
xor
lahf
enter
fimuls
scas
gs
frstor
hlt
adc
ret
into
shlb
test
in
ss
push
call
mov
xor
fstps
xchg
jbe
mov
or
mov
into
popf
jp
or
fnstcw
in
adc
or
and
ret
leave
jmp
add
fnsave
les
add
mov
push
or
xlat
jmp
mov
adcl
or
xchg
push
cwtl
loopne
mov
fiaddl
mov
push
lods
gs
out
cltd
pop
push
mov
ret
adc
pusha
jecxz
movsl
lods
fcoml
jecxz
cmp
mov
jb
adc
out
adc
repz
inc
mov
mov
fnstsw
pop
mov
xchg
mov
rolb
hlt
or
or
xchg
sub
xchg
inc
xor
dec
stos
stos
dec
xor
push
adc
dec
cmpb
sbb
outsl
daa
lret
sub
das
add
mov
ljmp
mov
xchg
arpl
mov
sub
popa
lret
in
les
popa
hlt
shrl
inc
ja
push
add
into
std
push
ret
push
testl
inc
loope
add
mov
pop
sbb
adc
xchg
pop
xor
cmp
pop
xor
inc
jl
ret
movsl
cmp
mov
ja
cmpsl
imul
xchg
inc
fs
daa
in
in
jecxz
lret
cmp
pop
xor
cmc
iret
loopne
mov
add
inc
xchg
pop
in
ror
shr
je
shr
sarb
dec
fsubrl
mov
jl
jmp
add
pop
xchg
lock
in
into
outsb
popa
lods
bound
adc
cwtl
inc
jg
lret
movswl
pop
es
adc
int3
std
stos
lfs
xchg
in
inc
imul
push
xlat
inc
sbb
in
imul
dec
imul
stc
push
xor
test
adc
xlat
mov
or
jecxz
jg
dec
lds
sub
repnz
push
lret
fwait
out
pop
jg
aam
aad
sbb
faddl
sarb
jno
jnp
jae
lahf
mov
andl
adc
cli
popa
mov
iret
mov
stc
fisubrl
mov
std
mov
sub
push
xor
mov
fistpl
sahf
call
out
out
push
or
xchg
jmp
mov
jb
std
cmp
jae
add
js
add
dec
add
stos
xchg
flds
fidivrl
lock
adc
xchg
sub
loope
loope
jmp
out
sarl
mov
xchg
cmpsb
jo
xor
movsb
ret
fisubrs
scas
lods
popa
mov
jb
mov
bound
ret
pop
or
sbbb
xor
push
outsl
add
cld
mov
sub
das
inc
stc
scas
fwait
leave
push
in
lods
lods
addl
xchg
add
add
insl
pusha
xor
xchg
adc
dec
repnz
fwait
imul
xchg
push
je
mov
sub
test
sbb
out
lea
and
jecxz
enter
xor
les
in
mov
jg
and
pop
cli
sub
sbb
mov
xchg
mov
pusha
jns
pop
out
add
pop
inc
xor
pop
addr16
fiadds
mov
lods
pop
arpl
xchg
fwait
je
xor
pop
enter
mov
jle
testl
fsubrp
sub
les
mov
xchg
lds
repz
outsb
adc
insl
or
inc
mov
add
or
rolb
ret
in
adc
mov
loope
and
int
sbb
cmp
mov
cwtl
mov
orl
mov
inc
fisubl
in
or
mov
pop
pop
and
lahf
inc
xchg
fidivl
jne
cmpsl
and
mov
jmp
inc
add
ret
inc
and
cwtl
or
cs
xchg
les
icebp
fbld
sub
test
mov
nop
inc
incl
xchg
test
mov
and
in
or
ret
les
adc
jne
sub
push
cmp
pop
push
je
xchg
inc
or
jp
js
icebp
push
mov
lock
hlt
push
xchg
mov
lds
bound
jo
mov
gs
popf
js
mov
lcall
pop
filds
jns
ja
jg
dec
jecxz
lds
popf
mov
xchg
das
roll
fld1
jnp
popf
cmpsb
addb
xor
test
popf
inc
mov
in
jl
push
cmp
ret
inc
pop
rorl
pop
dec
cmp
mov
add
lea
xchg
push
pop
adc
or
repz
pop
adc
and
pop
push
jcxz
enter
ja
xlat
inc
dec
sahf
addb
int3
shlb
add
lcall
in
lret
fs
in
sub
popa
int3
fnstenv
imul
jbe
or
add
adc
or
inc
sbb
mov
jp
orb
dec
xor
inc
sub
sbb
call
lods
repnz
lds
push
ret
dec
jl
mov
jbe
les
push
adc
sbb
fmull
pop
into
sbb
xor
and
fdivs
inc
stc
addr16
jg
pushf
loopne
ja
rorl
mov
stc
mov
cmp
daa
adc
xchg
scas
lret
mov
jnp
scas
stos
rcr
out
xor
xor
cmpb
repz
jns
sti
jmp
add
movsl
aas
dec
bound
xor
jne
test
mov
mov
jbe
xor
sbb
or
mov
jecxz
int
mull
pop
pushf
jg
or
push
addl
adc
add
and
pop
or
dec
mov
es
lahf
adc
xor
inc
cmpsb
cmp
shr
nop
sub
in
sahf
xchg
mov
dec
cld
fs
pusha
cld
dec
mov
fistpl
cs
sub
cmpsb
mov
orl
cvtpi2ps
mov
fsubrl
js
inc
stos
lret
mov
aaa
sub
aas
notl
dec
out
xchg
mov
push
jno
icebp
and
mov
push
mov
flds
aad
out
mov
dec
xchg
rorb
cmp
mov
inc
lret
mov
loop
jmp
dec
pop
cmpsb
pop
shrl
clc
jl
push
popa
sbb
cmp
mov
pop
mov
es
pop
scas
jmp
enter
xor
add
adc
aaa
imul
les
mov
daa
jg
xor
jne
push
popa
aaa
gs
fidivl
lret
pop
mov
add
data16
xchg
fs
ja
aas
cltd
or
or
fcoml
push
sbb
jbe,pt
xchg
idivl
test
mov
dec
mov
fsubrl
adc
in
jg
daa
xor
les
or
enter
add
mov
sbb
lahf
cmp
inc
cmpsl
mov
sbb
and
xchg
arpl
imul
fsincos
push
sti
pop
lds
movsl
lds
loope
and
cmp
cmp
push
stos
je
movsl
add
sahf
insb
cwtl
clc
xor
lea
insl
bound
jl
inc
dec
lock
jp
inc
fidivrl
pop
fcmovb
rorb
imul
mov
dec
mov
xchg
stc
lea
pop
outsl
adc
push
hlt
pushf
jno
cs
lock
jns
out
ljmp
lcall
nop
xlat
inc
movl
inc
roll
push
jo
pop
outsl
sub
sub
mov
xor
and
test
xor
sub
cli
inc
jo
je
push
lods
mov
cmp
daa
add
add
addr16
xchg
push
jne
add
test
in
cmpsb
inc
and
ss
fstpl
inc
mov
pop
mov
jp
and
sub
xor
sahf
fdivr
testl
push
stos
jnp,pt
mov
xor
shlb
test
push
fwait
aad
mov
pop
testl
inc
pop
push
mov
sub
outsl
sbb
ss
shll
jge
jno
jno
sbb
aad
push
mov
sub
divb
jmp
adc
pop
dec
jge
adc
fisttps
or
push
sbb
xlat
cwtl
rcl
movsb
movsl
sbb
lods
sub
test
xchg
shll
dec
push
mov
jle
xchg
xchg
jns
dec
sub
pop
or
shr
push
rcll
pusha
std
fwait
lret
mov
adc
jnp
jns
fstl
ret
xchg
push
cs
pop
lahf
sbb
roll
add
or
sti
cld
mov
mov
addr16
in
inc
negb
push
mov
out
sbb
adc
fstps
adc
pusha
mov
loopne
xor
mov
jle
sti
pop
push
xchg
sub
cmc
imul
mov
pop
sbb
xchg
jnp
icebp
cli
fincstp
mov
mov
inc
mov
int3
xlat
scas
jbe
or
orb
jecxz
dec
pop
push
icebp
mov
vmovaps
scas
out
dec
and
mov
aas
stc
sti
or
and
out
icebp
shll
pop
outsl
pop
jecxz
inc
sbb
test
cmpsl
insb
shrb
in
pop
push
repz
jge
inc
lcall
cmp
mov
mov
cmpsl
dec
ret
jl
add
and
pop
xchg
ljmp
pushf
mov
test
pop
jae
and
lret
and
jp
push
jo
hlt
addr16
pushf
ss
ret
fidivl
les
aaa
push
ljmp
aaa
sub
cltd
lods
inc
data16
and
push
push
ret
sbb
pop
cltd
loopne
jo
cmp
ljmp
mov
mov
and
mov
test
stos
sub
mov
ret
xor
push
out
pop
int3
and
add
mov
jg
stc
add
aad
jp
cli
or
jmp
and
inc
pop
out
mov
mov
sub
and
cmpsl
and
mulb
pushf
xchg
and
xchg
xchg
imul
jo
inc
pop
sub
mov
cmp
jno
setns
adc
jmp
aas
aaa
fsubl
sub
orl
inc
or
jecxz
out
clc
aad
and
jmp
neg
jb
mov
jecxz
mov
jl
les
mov
out
mov
cmpsl
inc
fdivs
lods
lock
mov
lret
shl
fsubl
push
jge
sbb
jae
fs
jnp
xlat
inc
std
sti
mov
mov
dec
xor
xchg
pop
sbb
aaa
sub
xor
clc
mov
fbstp
rorl
lea
fildl
and
scas
mov
data16
dec
insl
lcall
push
adc
shll
mov
ret
push
pop
lcall
ficoms
sbb
pop
ss
mov
and
lahf
jne
adc
test
cmp
push
jae
pop
adc
inc
aaa
xor
imul
push
jnp
push
mov
sub
test
cmc
lret
push
dec
je
add
xor
std
rcrb
cmpsb
stos
pop
sbb
or
leave
je
cmp
outsb
iret
out
lahf
or
pop
jbe
dec
lods
jp
imul
push
and
ret
dec
in
pop
jae
push
pushf
es
sbb
hlt
mov
sbb
in
sbb
adc
pop
inc
mull
jle
stos
call
push
ss
push
mov
fisttps
jge
xor
mov
lods
cmp
jb
jb
std
or
or
addb
aas
pop
mov
cmpsb
adc
outsl
lods
mov
imul
ror
mov
lock
test
sub
and
bound
and
int
iret
pop
xchg
aaa
mov
fcmovne
adc
sbb
push
cmp
cmpb
ljmp
dec
fistpll
cmpb
and
dec
mov
sahf
test
daa
fldt
jbe
mov
jns
inc
leave
adc
inc
xor
out
dec
popf
jmp
sbb
int
pop
push
shrl
repz
lea
add
jae
dec
push
pushf
mov
cmpb
imul
js
mov
outsb
js
sbb
ds
cltd
int
adc
jecxz
xchg
mov
xchg
fstpl
repnz
adc
shlb
popf
sbb
xchg
jp
outsl
scas
xchg
loopne
pop
mov
in
pop
and
dec
pop
insb
jle
xorl
jp
xor
jo
sub
fsub
cmp
outsb
sub
aam
and
push
popa
pop
jge
stc
popa
jnp
daa
out
jmp
push
addr16
les
out
adc
jge
and
sarb
iret
cmpsb
fwait
mov
adc
pop
in
mov
in
xor
or
push
pusha
sbbb
and
pop
cmp
dec
dec
pop
xchg
xor
scas
or
xchg
cmp
sub
push
pusha
inc
mov
pop
hlt
clc
test
in
test
enter
inc
stos
hlt
push
mov
inc
loope
sub
adc
arpl
lods
push
int
or
push
sahf
mov
in
sbb
ljmp
jge
das
mov
mov
push
and
sub
cmp
ret
jbe
es
addr16
xchg
jae
xor
mov
test
jbe
jb
mov
mov
insb
arpl
push
cmp
not
mov
clc
adc
pop
jno
das
sub
movsl
leave
adc
popa
mov
adc
leave
data16
adc
int3
addr16
xchg
addb
pop
jae,pn
les
je
mov
sarl
ljmp
adc
jo
and
push
aad
lahf
pushf
das
cld
addr16
dec
jo
test
cs
xchg
in
call
jno
lds
sbb
bound
cmp
dec
add
mov
and
or
pop
jle
push
movsb
cld
and
mov
inc
in
add
jp
mov
lea
loopne
aas
loop
subl
jae
mull
pop
mov
mov
xchg
add
cmp
out
in
into
rcrl
arpl
push
jb
cltd
iret
lds
jle
dec
in
test
subb
daa
inc
scas
add
dec
nop
in
fisubl
movsb
push
lret
xor
pop
aaa
adc
cmpsl
jb
jmp
xchg
sub
mov
in
jne
cwtl
dec
pop
mov
inc
rorb
cmp
imul
add
test
pop
inc
jb
outsl
xchg
sahf
test
and
xchg
out
xchg
sub
jmp
pop
sbb
jl
stos
and
xchg
aam
cwtl
mov
cmp
jg
es
ret
or
add
mov
aaa
sbb
sarl
pminsw
mov
loopne
and
data16
and
jle
loopne
aaa
and
adc
arpl
push
adcb
xor
push
push
iret
xor
fnsave
and
lahf
pop
pop
push
cli
je
cmp
add
fwait
movsb
sbb
cmp
mov
xorb
xor
sbb
fs
sahf
ret
add
jmp
add
stc
and
decl
ljmp
push
cmc
add
lcall
push
jg
test
in
lods
movsl
repz
data16
add
push
repnz
adc
sbb
fmull
daa
rorl
inc
push
add
lret
mov
cs
ficoml
fsubs
dec
pop
mov
dec
dec
jo
or
cmp
shlb
push
mov
repz
xchg
pop
jp
mov
repnz
inc
or
xchg
repz
enter
pushf
sbb
push
stc
fcom
jmp
andb
or
cwtl
enter
popf
mov
sbb
pop
mov
popf
push
in
inc
addr16
mov
and
gs
add
sbb
inc
ficoms
sbb
andl
test
xor
inc
stos
fistps
js
in
jo
cmp
in
inc
fdivr
fstps
or
pop
xchg
push
pop
loope
jnp
sahf
jnp
mov
fcomps
sbb
or
mov
pop
cmp
lds
std
mov
stc
outsl
mov
and
cmp
iret
mov
insl
inc
arpl
xor
jg
xchg
adc
out
in
inc
bound
lahf
cli
aaa
and
mov
sbb
jl
add
aaa
sub
mov
cmp
dec
lods
shr
mov
sub
xor
cmp
jbe
sub
enter
add
addr16
ss
arpl
iret
push
addb
or
jg
mov
fs
leave
and
xchg
enter
clc
push
adc
push
sub
loope
add
popa
mov
jo
dec
sbbl
push
mull
loopne
lcall
lds
sti
enter
das
ja
pop
loope
push
xor
inc
repnz
xchg
hlt
cld
push
push
push
stc
xor
xchg
test
js
adc
or
adc
and
dec
add
data16
std
mov
icebp
push
inc
add
cmp
rcr
dec
clc
add
and
pop
sbb
sub
and
add
mov
xchg
mov
insl
subb
mov
mov
push
insb
cmpb
mov
add
iret
push
out
sub
sbb
fcmovu
xchg
loop
shll
mov
inc
sub
push
jmp
jne
addr16
arpl
add
sbb
pop
jb
jmp
jge
in
fimull
pop
cmc
cmp
xor
cmpsb
cmp
inc
imul
mov
das
xor
std
imull
bound
mov
mov
xchg
pop
mov
notb
dec
mov
add
jbe
std
push
mov
jmp
enter
stos
mov
mov
imul
mov
addr16
dec
fdivp
imul
pop
addr16
rcrl
enter
jmp
cltd
mov
push
inc
mov
mov
cmp
adc
inc
mov
lret
loop
lods
cmp
rclb
mov
mov
jg
iret
adc
jnp
pop
or
and
hlt
add
pop
fnstcw
imul
push
sysexit
mov
push
sbb
mov
test
jb
or
xorl
pop
addl
adc
mov
add
xchg
cmp
pop
cmpsb
xor
addb
adc
or
cmpb
cmp
sar
mov
dec
bound
mov
add
xlat
mov
pop
stos
hlt
jns
cmp
xchg
rorl
sbb
lahf
xchg
aaa
jle
xchg
imul
decl
jns
xlat
push
or
out
cmp
out
dec
sub
or
cmpsb
dec
pop
inc
cli
sbb
jns
inc
in
push
cmpsb
aas
mov
je
jo
cld
inc
stos
jg
xor
arpl
mov
push
xchg
pop
push
or
lods
ret
icebp
pop
jne
pop
out
and
fsubrs
xlat
dec
xor
out
push
in
fadds
sbb
push
mov
xchg
jne
dec
jmp
inc
xchg
mov
xchg
fs
lcall
pop
and
test
xchg
dec
or
pushf
mov
inc
mov
pusha
or
jo
mov
and
push
leave
sbb
mov
mov
add
pushf
jecxz
incw
popf
movsl
xchg
aad
mov
sbb
sbb
ds
pop
xchg
xor
jnp
dec
jl
mov
hlt
pop
dec
dec
dec
call
jmp
std
xchg
lcall
add
out
mov
ja
xor
pop
cmp
adc
adc
addr16
push
and
cli
movsb
adc
imul
xchg
adc
andb
mov
int3
jge
nop
mov
and
mov
in
fs
mov
bound
sti
aas
nop
aaa
mov
in
movsb
pop
sbb
pushf
mov
aad
jle
jnp
clc
mov
push
sbb
and
xor
pusha
adc
mov
and
cltd
andl
jno
das
mov
mov
and
mov
testl
rorl
cld
aad
mov
or
out
push
into
fists
mov
js
nop
mov
out
xchg
int
mov
ja
dec
insl
mov
cmp
cli
inc
js
and
sbb
scas
jno
iret
in
push
cmc
xlat
int
sti
stos
shl
sbb
sbb
mov
dec
das
adc
lret
in
dec
xor
mov
jno
repnz
das
jg
mov
push
test
add
stc
ret
xlat
cmp
lret
outsl
out
clc
and
nop
lock
sub
sar
inc
stos
xor
mov
cmp
stos
outsl
movsb
hlt
dec
divl
stos
sti
push
in
cwtl
negl
rclb
lds
jb
in
into
mov
hlt
shlb
iret
add
inc
imul
imul
dec
inc
movsl
dec
xchg
xor
and
adcl
dec
cmp
or
shll
inc
leave
and
roll
adc
push
mov
insl
fs
dec
clc
fdivrs
addr16
and
and
out
jge
roll
je
imul
aad
jmp
out
cmp
gs
rorb
jl
mov
inc
das
rcrb
jb
sbb
cmc
push
cltd
movsl
pop
mov
hlt
std
fsubrp
xor
inc
dec
cmp
or
pop
cwtl
les
jp
mov
call
outsb
mov
add
push
add
push
lods
mov
jne
cmpb
adc
mov
mov
mov
mov
lret
sub
in
daa
adc
sbb
mov
orb
inc
int
adc
rolb
test
mov
aas
push
xor
push
jmp
inc
je
stos
sahf
push
outsb
pop
stos
sub
pop
sub
jle
dec
insb
adc
ss
imul
sahf
js
icebp
jbe
mov
pop
sub
ss
and
gs
ss
jp
lds
mov
mov
loop
pop
jp
fcompl
dec
dec
pop
xor
pushf
imull
insb
and
xchg
out
fstpl
lret
add
adc
cmpsl
dec
test
out
mov
sbb
pop
push
cmc
push
lcall
test
mov
jmp
push
push
mov
xchg
addb
inc
adc
and
mov
push
add
sub
dec
inc
ja
or
js
daa
sub
mov
fldl
pusha
pushf
cmp
pop
shll
cmc
les
js
jl
out
sbb
adc
sub
lcall
push
lods
and
push
inc
jno
out
jmp
jo
repz
int
add
mov
cmp
lea
movsl
test
or
inc
imul
pop
pop
mov
inc
rcrb
jp
adc
mov
into
ret
test
loope
pop
in
xlat
jle
inc
xchg
pop
jge
mull
push
sbb
loop
ret
into
sbb
add
mov
jmp
ficoms
jbe
lds
out
xchg
push
insb
cltd
add
mov
loope
movsb
fistpl
into
fsubrl
sub
pop
mov
into
in
into
leave
xorb
lods
add
maxps
cmp
cld
pop
pop
in
int3
cmp
xchg
imul
jne
fxtract
js
aam
sbb
mov
fwait
rorl
sbb
add
pop
lret
sub
cmp
popf
xchg
mov
sbb
push
mov
add
xor
push
lea
insl
dec
not
jecxz
mov
ret
sbb
loopne
fcomp
dec
lret
cwtl
inc
sub
mov
fcomp
push
fisttps
xchg
cmp
and
add
dec
xchg
cmpsb
sub
push
test
pop
mov
add
jmp
cmp
jnp
sub
nop
mov
fadds
punpcklbw
cmp
and
out
test
pop
orl
das
dec
jns
out
int
adc
dec
or
mov
or
mov
ds
xor
adc
add
movsl
sbb
in
mov
jns
rcrl
ljmp
push
imul
pop
dec
lea
sbb
dec
push
mov
addr16
xchg
push
mov
cmp
dec
hlt
popa
mov
pop
inc
aas
and
sub
pop
add
push
mov
sub
cli
nop
dec
sub
or
into
cmp
pusha
sub
mov
fisubrl
inc
dec
dec
in
sub
and
mov
in
xor
xchg
jl
fcompl
fmuls
push
add
ja
out
mov
rcll
cmp
in
std
enter
mov
add
push
jo
das
xchg
jo
cmp
jo
xrelease
cmc
loope
add
test
test
fidivl
ds
stos
cmpsl
mov
stos
lea
fildl
lcall
and
int3
push
adc
mull
push
push
popf
adc
pop
sub
insl
mov
popf
sbb
psubsb
into
aad
cld
xchg
adc
mov
outsb
call
sbb
shr
adc
cmpsl
or
ds
mov
icebp
xor
mov
push
in
xor
mov
sti
jge
test
pushl
fiadds
test
pusha
mov
jne
adc
fsub
imul
mov
cli
jns
pop
inc
pop
and
mov
dec
or
inc
in
lds
sahf
insb
int
push
inc
push
inc
pop
sub
cli
jnp
cwtl
mov
xor
je
jp
lea
loop
les
sbb
inc
sub
add
ret
stos
sub
aas
and
stc
int3
or
int
in
pop
enter
pop
fdivs
xor
mov
sar
xchg
aam
cmpb
adc
cs
cmp
test
test
and
or
push
push
inc
push
shl
mov
xor
mov
add
pop
add
mov
repnz
pop
or
push
lods
push
and
mov
in
push
loopne
add
jg
iret
push
repnz
sarl
outsl
repnz
or
mov
movsb
std
sbb
lcall
loope
lods
out
mov
sbb
stc
out
and
inc
sahf
cld
in
lds
lods
data16
push
roll
mov
jp
rcr
cmp
sbb
dec
push
pop
xor
cltd
mov
lods
cli
loope
push
jns
xor
int
jo
push
adc
clc
add
push
adc
test
push
mov
and
ret
pop
jecxz
subl
fstps
notl
push
inc
ret
pop
jmp
ljmp
mov
and
stos
fwait
xchg
xchg
mov
mov
popa
adc
dec
xor
je
repnz
mov
push
out
loop
mov
outsb
xchg
xor
cwtl
into
push
clc
orb
mov
insb
xchg
js
cs
hlt
pushf
ficoml
adc
jecxz
scas
rol
out
ret
sarl
je
repnz
cltd
test
add
jmp
jl
add
repnz
faddl
push
adc
sbb
lahf
push
out
dec
in
rorl
mov
push
xchg
daa
xlat
cmp
jb
inc
push
mov
lret
shll
inc
clc
mov
movsl
mov
es
fadd
fldl
aad
adc
adc
dec
jo
fisubs
lret
jg
mov
sarl
xor
mov
sub
lret
cli
ret
mov
sub
cmc
cli
lods
movsl
fcoml
pop
xchg
jo
das
dec
cmp
cmp
movsl
add
dec
daa
daa
xchg
in
movsb
out
xor
add
dec
jae
xchg
roll
jmp
in
daa
jge
les
mov
cmp
arpl
lods
xchg
dec
mov
in
adc
xchg
cli
stos
push
addb
stos
enter
pop
gs
in
out
dec
movsb
gs
pop
sub
enter
pop
xor
pusha
pushf
sub
ficompl
pop
bound
scas
cmp
outsb
jl
fucomp
xchg
xchg
nop
push
sbb
or
fdivp
std
cld
stos
cmp
mov
das
adc
rcll
scas
addr16
scas
sbb
test
pop
push
fdivrl
add
into
lcall
add
jae
mov
les
jae
jnp
scas
insl
xlat
push
pop
cli
daa
in
dec
jno
xor
jl
mov
arpl
jge
leave
stc
in
or
faddl
xor
es
ljmp
ds
sti
js
mov
push
or
or
lods
shlb
dec
xor
movsb
inc
xchg
imul
subl
test
xor
mov
push
cli
leave
mul
jmp
push
push
jecxz
popa
test
lods
repz
pop
mov
mov
shl
loope
dec
outsb
or
mov
push
ret
mov
flds
enter
mov
mov
mov
xor
mov
mov
stos
rcrb
push
push
sub
hlt
xchg
mov
daa
repz
xchg
aam
push
xchg
jo
push
in
outsb
push
ja
mov
test
add
cmp
dec
out
ja
add
mov
push
fistpll
xor
movsl
mov
int
mov
sub
pusha
fwait
and
mov
and
movsl
add
inc
jmp
sbb
xchg
mov
shr
mov
xor
stos
enter
outsl
xchg
in
cmp
mov
push
int3
xor
sub
mov
sbbl
push
inc
test
loop
jo
sub
mov
xchg
xchg
in
cld
pop
mov
nop
add
dec
mov
push
ret
lret
inc
mov
xorb
jecxz
or
ret
mov
lret
js
scas
sti
fwait
dec
pushf
repz
in
lea
sbb
repnz
push
cmpsl
imul
testl
clc
mov
adc
inc
push
jle
rol
push
pop
or
repnz
mov
dec
lahf
dec
int3
negl
ja
and
jl
xor
pop
stc
xor
pop
and
jecxz
iret
add
into
xchg
and
fisubs
inc
mov
imul
cmp
sub
pushl
mov
call
and
andl
dec
cli
mov
lock
sub
push
repnz
fdivr
cmp
xchg
inc
addr16
or
lea
xchg
insl
add
sti
cli
mov
mov
cmp
sub
and
sbb
add
negl
loop
sbb
sub
scas
inc
pop
push
and
fisubrs
pop
push
ret
xor
mov
mov
sub
insb
stos
cli
sub
movsb
or
jp
mov
push
dec
fmuls
push
popf
mov
pop
adc
push
leave
hlt
xor
movsl
pop
or
sub
orl
jl
dec
stc
js
rcr
fstpl
inc
and
jbe
add
fildl
jae
cltd
lock
popa
arpl
rol
js
daa
loop
sbb
mov
fcoms
cmp
jno
dec
xor
pop
mov
pop
mov
add
mov
jmp
movsb
decl
das
and
test
sub
push
ficompl
imulb
sub
cmp
inc
dec
dec
push
repz
arpl
lods
sbb
int
cmpsl
nop
es
sbb
mov
addr16
imul
lods
and
and
mov
stc
sbb
xchg
lea
add
in
ja
iret
adc
jno
xor
das
adc
lahf
pop
and
mov
jns
jge
cmpl
addb
xchg
xchg
lcall
adc
lret
push
mov
push
ret
pop
push
fnstsw
adc
push
push
adc
pushf
mov
loop
jmp
jle
sub
jmp
inc
fbstp
pop
pop
aam
pop
test
mov
shlb
dec
test
or
jecxz
mov
into
xor
push
mov
xchg
jnp
xor
jle
sub
fwait
sbb
jno
jecxz
sbb
test
push
dec
in
inc
movsb
aam
jne
imul
sub
fsubs
fistps
sub
push
dec
mov
mov
addr16
aam
inc
pop
imul
inc
mov
icebp
test
lahf
xor
mov
adc
push
xchg
push
ja
in
dec
push
cmp
mov
lret
mov
outsb
xchg
in
xchg
jecxz
mov
push
xchg
shlb
inc
int
fwait
out
das
iret
fldt
cwtl
in
scas
dec
pop
leave
cmp
std
mov
mov
push
les
push
dec
dec
push
cld
or
jbe
jecxz
xor
push
sbb
ljmp
mov
inc
dec
mov
dec
sub
in
fists
rcrl
popa
arpl
xor
ret
fmull
das
popa
cmpsl
add
les
lret
lods
lods
loopne,pt
jmp
scas
xor
xor
addr16
push
lods
in
test
jp
dec
cmpb
dec
mov
or
jb
cli
mov
pushf
dec
out
inc
lahf
xchg
push
loope
or
sub
lods
inc
or
sbb
insl
pop
das
repnz
cmc
nopl
push
mulb
sahf
loope
int3
jecxz
aad
mov
add
inc
mov
or
and
scas
inc
scas
and
cmp
leave
fs
pop
in
xchg
aaa
rorb
inc
repnz
mov
mov
jl
ret
or
mov
std
aaa
mov
add
add
cltd
inc
pop
jns
es
inc
lock
xchg
xchg
mov
jo
mov
xor
push
mov
std
sti
iret
jle
add
lret
imul
cmpsb
rcrb
add
sahf
cmpsb
sahf
xchg
cmp
dec
jmp
aam
dec
mov
jbe
sub
mov
pusha
clc
xlat
lock
sbb
mov
les
mov
int
mov
sbb
icebp
inc
jnp
dec
into
popf
mov
or
and
subl
adc
cmc
jnp
inc
sub
jns
scas
xor
cltd
push
dec
fsubrl
leave
sub
or
mov
jbe
and
rclb
mov
pop
mov
out
cmpsl
add
adc
xchg
jp
mov
cmp
shlb
dec
xor
loop
in
mov
cltd
sub
out
imul
cli
ret
rcrl
lds
rcl
cmp
jg
les
inc
pop
aaa
dec
bound
dec
cmp
pop
lahf
cmp
jl
sbb
lret
outsb
je
mov
sub
dec
loop
jle
mov
sub
inc
or
dec
push
xchg
out
fdivrl
in
gs
mov
out
push
outsl
push
insb
lods
sbb
scas
repnz
lods
push
stos
pop
or
scas
out
inc
mov
push
adc
shrb
dec
sbb
das
cltd
jae
xor
pop
adc
and
push
in
dec
es
dec
popa
lods
stc
stos
sub
cli
ss
fcoms
jno
test
and
dec
jmp
enter
test
mov
pushf
jge
sbb
dec
inc
xor
jns
or
int3
sbb
cmp
push
fimull
xchg
dec
js
push
pop
push
lea
outsl
fdivrs
in
push
lods
int
cs
dec
fcmove
out
lods
cmp
mov
xchg
mov
mov
jecxz
cmp
xlat
frndint
and
dec
push
outsl
xlat
or
pop
cmpl
mov
xor
mov
jmp
sub
lea
dec
mov
popf
std
notb
bound
adc
in
pop
push
xor
sbb
in
sahf
sbb
xor
mov
in
push
sbb
out
push
inc
dec
and
test
cld
cmpsb
lock
inc
fcoml
lock
add
jnp
subl
mov
add
sub
jnp
outsl
cmp
mov
cmp
es
lahf
sub
gs
adc
lret
pop
pop
jmp
xchg
ljmp
jle
shl
lods
test
xor
in
bound
xchg
stos
in
arpl
mov
adc
inc
pop
int3
dec
pop
sarl
ljmp
std
or
mov
popf
addb
mov
negl
add
jge
test
jb
xchg
sbb
ret
dec
dec
outsl
lret
inc
mov
imul
test
ja
cld
mov
add
cs
and
daa
cmpsb
cvtpi2ps
insl
add
rep
adc
cmp
xchg
and
mov
ljmp
out
mov
ret
push
jle
in
ljmp
sub
add
and
sub
or
or
push
inc
aas
inc
mov
jmp
bound
xlat
cmp
pop
jb
or
out
pushf
cmp
inc
in
mov
fsubrl
jge
sar
push
int3
scas
shlb
dec
aad
lods
push
andl
fdivs
sahf
in
mov
aam
and
xor
dec
stc
xor
imul
and
out
ret
ja
sbb
push
xchg
popa
fwait
add
xlat
clc
mov
cmpsl
or
push
dec
divb
pop
pop
inc
push
cld
xchg
orb
into
cmp
and
enter
xor
pop
pop
lret
dec
les
xchg
mov
pop
outsl
addr16
in
adc
inc
test
sub
xchg
fidivrs
add
push
pop
fidivs
add
mov
rcrl
scas
mov
pop
bound
enter
mov
ss
test
adc
xchg
xor
sarl
mov
in
lea
cmp
add
push
arpl
dec
add
pop
pushf
shl
lods
mov
mov
aad
jp
rcll
mov
cmp
fwait
mov
scas
stos
sub
dec
fldl
repnz
cmp
cmp
rolb
popf
mov
fisubl
mov
je
sbb
mov
jnp
aas
arpl
nop
push
or
lret
adc
iret
sbb
xchg
xor
lret
in
stos
out
jne
mov
ds
jp
fsubrl
shll
add
jmp
jle
in
cmc
shlb
ja
inc
xchg
in
sbb
mov
sbb
jmp
cmpsl
orb
psrlw
sti
xchg
pop
xor
adc
push
test
xchg
mov
decl
mov
xor
fucomp
cmpl
ror
fcoml
mov
xor
jae
sbbb
aad
dec
lds
fwait
out
push
fstpt
cwtl
or
sub
xchg
jo
fisubl
aas
add
insl
xor
push
add
pop
jecxz
sahf
xchg
dec
fmulp
sub
outsl
sarb
aas
xchg
or
inc
or
add
xchg
cmp
cmp
ljmp
arpl
imul
mov
movsl
pop
cli
out
lods
push
jb
jb
xchg
arpl
mov
pop
cmp
das
mov
pusha
lea
insb
mov
imul
add
das
mov
mov
jno
pop
cli
mov
dec
xor
mov
push
arpl
scas
outsb
adc
popa
mov
adcl
in
out
lret
lahf
loopne
cwtl
aad
int3
dec
lock
insl
inc
fcompl
fs
push
or
ror
adc
inc
mov
cmp
xor
scas
push
cmp
add
push
mov
fmul
inc
cmpsb
popaw
xchg
and
mov
loope
rclb
fstpl
call
fildl
aad
jno
test
out
in
outsb
test
mov
fbstp
sar
mov
add
cmp
in
lea
cmp
or
pop
push
nop
xor
loopne
sub
int3
jg
inc
jb
int
or
mov
or
adc
aam
and
jns
insl
mov
roll
sub
hlt
sbb
or
xchg
push
ds
add
dec
movsl
repnz
push
and
xchg
mov
sub
push
mov
out
iret
mov
adc
xor
es
inc
inc
pop
mov
sub
arpl
push
mov
aaa
xor
mov
clc
pop
cmc
icebp
test
sub
std
pop
pop
pop
pop
dec
jbe
lods
es
popa
negb
aad
lods
mov
add
add
aaa
rol
dec
push
sbb
xor
loopne
mov
arpl
lcall
std
push
movsb
data16
fiadds
shll
push
xchg
out
xchg
shrb
and
popa
clc
int
call
jle
jp
aam
push
dec
rcr
sbb
xor
xchg
inc
sbb
mov
shrb
fwait
lcall
cmp
add
jge
jno
imul
cmpsl
aam
scas
inc
arpl
arpl
aas
add
jp
dec
in
push
xchg
les
mov
out
ficoml
jnp
rcl
in
cmp
mov
mov
mov
scas
xor
and
and
dec
mov
xchg
jle
xor
cmp
adc
add
fisubrl
mov
xor
dec
add
out
xchg
pusha
out
dec
add
daa
xor
pop
incl
mov
stos
pop
flds
pop
mov
loop
mov
test
sarl
mov
in
rolb
jge
xchg
xchg
or
ss
sbb
imul
loope
outsl
cmpsb
inc
mov
stc
test
sbb
xchg
cwtl
lock
inc
das
cmp
add
lret
sbb
sub
pusha
mov
mov
out
hlt
bnd
subb
push
dec
push
cld
mov
fisttpl
mov
mov
mov
ret
dec
xlat
jecxz
jb
shll
dec
cli
cmpsl
ja
cmc
xchg
cmp
scas
xchg
test
bound
pop
push
pop
hlt
pop
mov
ljmp
stos
shl
test
push
fistps
jmp
adc
jge
adc
lahf
mov
or
add
xchg
pop
sbb
test
mov
xchg
insb
leave
inc
stos
ja
rclb
sbb
add
lds
adc
cld
ss
and
push
inc
add
imul
xchg
call
xor
mov
xchg
enter
std
outsb
add
mov
mov
jg
lods
inc
jbe
inc
xchg
daa
jge
shrl
cmpl
inc
ret
into
les
pop
insl
jmp
iret
das
or
adc
lret
mov
or
cwtl
fsubrp
mov
jne
imul
cwtl
paddb
or
sub
sbbb
cld
jno
sbb
mov
popa
outsl
cli
push
inc
ret
xchg
pop
inc
ja
cld
into
mov
sbb
xchg
das
cmp
sbb
push
clc
imul
push
adc
add
sti
mov
int3
adc
fidivrl
mov
imul
es
fs
subps
lods
je
out
push
notl
mov
inc
sbb
inc
stos
inc
jecxz
or
xchg
loope
xchg
out
scas
mov
mov
lahf
add
jp
or
mov
cmp
inc
xchg
inc
dec
int
ret
jno
jle,pn
int3
mov
roll
and
cmp
fscale
mov
inc
push
jb
xor
arpl
push
int
xchg
movsb
rclb
xorl
jb
mov
pop
xor
add
fisttpll
pop
sbb
repnz
inc
lahf
in
sbb
push
std
adcb
mov
push
cmpsb
cmpsl
push
scas
lahf
test
fs
cmc
mov
lods
mov
shll
xchg
subl
or
add
lcall
clc
call
add
pop
mov
int3
jmp
push
and
in
xor
stos
ljmp
cmp
mov
jg
add
fidivl
cvtpi2ps
jecxz
out
mov
pop
pop
sub
popf
fidivrs
insb
dec
mov
mov
das
fistl
daa
push
push
loopne
cli
mov
in
pop
jb
mov
pop
int3
mov
clc
push
xlat
stos
add
movsb
pop
out
ret
inc
data16
cwtl
push
add
imul
in
lods
mov
sub
loopne
and
orb
adc
repz
adc
mov
ret
rcl
je
xchg
stc
and
mov
enter
pop
pop
pushf
xorb
scas
aaa
push
out
sbb
push
das
xor
mov
mov
inc
xchg
dec
sbb
stos
arpl
or
sbb
lret
scas
cmp
push
lret
sbb
fidivl
lcall
jno
xchg
mov
adc
lcall
sti
movsl
xor
cltd
xor
add
push
pop
xor
arpl
rorl
les
call
test
imull
mov
hlt
aaa
scas
cmp
in
dec
push
inc
add
rol
push
mov
mov
jbe
gs
cmp
adc
pop
cmpsb
call
testl
mov
mov
mov
push
pop
fidivs
les
mov
lcall
das
pop
pop
mov
pusha
icebp
add
std
sti
inc
or
and
and
aaa
clc
xchg
bound
imul
jnp
sbb
jmp
dec
sti
jge
push
scas
cmp
mov
lods
lcall
add
sbb
lcall
inc
loop
pop
and
or
insb
jecxz
adc
hlt
popf
je
inc
cld
leave
fwait
movsl
imul
ret
faddp
jmpw
fdivr
mov
les
add
jg
xchg
imul
lret
jnp
xor
lea
jl
enter
add
iret
inc
add
orl
xchg
in
clc
mov
sbb
mov
lods
icebp
ljmp
jae
jae
imul
add
add
push
inc
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
