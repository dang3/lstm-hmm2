mov
adc
add
inc
outsl
outsl
insb
gs
outsb
add
or
add
mov
insb
jae
add
jb
lea
sub
add
push
outsl
testl
pop
dec
outsb
je
addr16
and
rcrb
xor
add
jns
insb
daa
push
outsl
jb
add
pop
jns
incl
outsb
mov
repz
add
cwtl
or
push
je
sub
in
push
int
pop
push
test
mov
lahf
out
push
mov
adc
popa
out
ljmp
pop
push
dec
bound
arpl
pop
sbb
adc
imul
insl
mov
adc
sbb
dec
jb
popa
arpl
add
lcall
pushf
int3
pop
inc
add
inc
and
clc
jmp
idivl
popa
adc
adc
int3
inc
mov
in
popf
pop
xchg
xchg
gs
faddp
loopne
jno
add
call
adc
pop
mov
xchg
int3
pop
adc
sar
mov
notrack
paddq
jb
ror
enter
jb
sarb
mov
in
test
jb
jb
mov
jb
cwtl
xchg
nop
mov
jb
mov
jb
je
in
jb
jb
push
jb
clc
hlt
pusha
pop
cmp
sbb
xchg
or
xchg
mov
push
dec
push
add
mov
or
call
sub
je
movzwl
dec
ja
pop
and
mov
ss
pop
ret
addr16
inc
mov
xchg
inc
cmp
xor
in
and
sub
mov
add
push
ljmp
add
test
jne
xor
pop
enter
jg
mov
mov
ret
lea
mov
mov
mov
inc
cmp
jne
mov
fucomp
sti
push
mov
mov
push
nop
mov
add
scas
mov
mov
xchg
mov
in
mov
push
mov
mov
or
adc
mov
aaa
push
mov
push
or
pushl
mov
push
push
mov
mov
mov
mov
neg
sbbb
and
pop
mov
or
push
or
ret
and
add
mov
push
or
fcmovnbe
cld
add
jmp
add
push
jne
aaa
sub
fucomp
cmp
jne
mov
sub
cmp
addb
mov
push
fbstp
testl
mov
add
call
ja
mov
sub
outsb
add
or
mov
jnp
xchg
jne
ret
jmp
pop
mov
add
pop
inc
shl
repnz
sub
jbe
pop
lock
aaa
push
sub
mov
lock
aam
jge
js
or
or
jmp
sbb
sti
jne
sarb
mov
es
mov
cmp
scas
add
mov
or
add
xchg
add
add
and
push
jg
sbb
clc
mov
test
je
mov
mov
cmp
outsb
rorl
mov
push
dec
xchg
lock
neg
push
andnps
dec
cltd
shrb
sbb
imul
fsts
jne
icebp
add
mov
push
dec
pushf
cmpl
in
test
ud2
mov
in
mov
fdivl
or
outsb
pop
xor
call
sub
mov
loope
pop
in
es
ja
mov
add
cmp
ja
popa
addr16
cmp
je
jae
or
or
sbb
pop
mov
in
or
add
cmp
andb
cmp
pop
cmp
cmpl
sbb
mov
mov
or
jne
sbb
adc
hlt
outsl
loope
loopne
mov
mov
and
sbb
roll
out
loop,pt
mov
sub
or
hlt
testb
popf
cmp
pop
cmp
add
push
pushf
insl
pop
and
mov
cmp
or
or
jbe
dec
xorl
scas
adc
sti
push
push
orl
jae
pushf
xchg
cmpb
pop
sbb
repz
xor
aad
mov
jmp
sahf
nop
out
jg
adc
sbb
jae
mov
push
or
cmp
jae
std
add
add
jae
dec
addl
dec
push
and
rorb
sti
loopne
clc
xor
aas
or
add
repnz
cmpsl
inc
fistpl
xor
idivb
inc
xlat
mov
cmpsl
jg
movsb
push
hlt
in
je
mov
inc
push
aas
or
fnsave
push
jge
scas
jl
add
jne
cmpl
ljmp
push
mov
cmp
insl
pop
mov
cli
mov
and
cmp
jl
in
test
cmc
or
jle
or
mov
sub
imull
xor
lea
pop
nop
or
mov
mov
push
push
fstl
fcoms
inc
fldcw
xchg
mov
lea
inc
mov
test
xchg
cmp
shll
cmc
jne
xchg
sti
mov
xlat
js
hlt
cmpl
ret
jnp
inc
sub
inc
popf
adc
adc
xchg
lea
inc
mov
mov
sbb
lock
jae
xor
outsl
ret
mov
out
rorl
adc
pop
push
test
je
imul
sub
ret
addr16
add
adc
or
js
jmp
jecxz
int3
shlb
jmp
pop
sbb
decl
ss
push
pushl
mov
push
addr16
add
jl
and
jno
or
adc
push
test
xchg
mov
or
sarl
xor
jle
hlt
inc
cmp
jo
and
in
mov
mov
mov
pop
ds
pop
pop
push
adc
loop
xor
mov
in
sub
push
dec
pop
xchg
test
adc
mov
loopne
iret
add
pop
loopne
in
out
adc
jns
test
imul
outsl
push
push
mov
sub
add
mov
pop
mov
ret
cmp
adc
scas
jb
or
adc
jo
jg
test
jns
add
sar
test
cmp
jmp
sub
scas
insl
gs
outsb
or
mov
adc
jmp
dec
fadd
jb
adc
out
add
or
mov
cmp
add
inc
xchg
sbb
add
sbb
xor
aaa
cli
adc
add
xchg
mov
jb
push
sahf
mov
add
or
or
mov
and
add
icebp
std
mov
sub
test
cld
call
cmpsl
fistps
fists
les
or
push
or
push
jle
outsl
stos
rolb
mov
or
ret
incb
xor
adc
xor
cmp
je
add
cmpsb
popa
stos
fistpll
sub
inc
aas
std
add
add
je
mov
sub
cmp
shl
xchg
push
testb
add
test
pop
cmc
xor
mov
xor
add
mov
pop
mov
fsubs
test
jne
mov
bound
test
sub
pop
adc
add
push
xchg
jo
pop
scas
push
dec
xorb
orb
or
sub
cld
jg
clc
sub
sub
cmp
jge
mov
lahf
lret
fsub
or
lea
in
add
insb
and
sub
push
fldl
jae
lea
push
scas
mov
jp
or
and
mov
xchg
iret
pop
jp
mov
add
sub
jo
or
sbb
test
mov
in
mov
enter
adc
mov
cmp
jmp
hlt
inc
fdivrs
pop
add
sub
cmp
or
mov
pop
mov
xlat
add
sbb
inc
adc
or
xchg
inc
mov
daa
or
adc
or
or
sbb
popf
or
pop
ret
sbb
push
add
mov
cwtl
push
fmull
dec
sub
fldenv
or
pop
sub
pop
cmp
pusha
xchg
cld
sub
add
pusha
push
repz
sub
lds
imul
loopne
clc
pop
jbe
xchg
gs
subl
sbb
pop
testb
cmp
mov
cld
adc
leave
or
ss
or
lcall
mov
sub
pusha
pop
pop
inc
shlb
int3
rol
popa
cwtl
mov
xor
ljmp
cmp
xor
push
adc
or
ljmp
lock
sub
mov
pop
movd
lods
scas
fsubrs
js
jg
pop
mov
pop
je
pop
jmp
outsb
in
cmp
or
dec
sbb
cmpb
mov
jle
das
cmp
push
sub
cmpl
adc
lock
hlt
inc
add
xor
pop
mov
sub
jmp
jmp
jg
push
inc
and
leave
sqrtps
jmp
repnz
jne
js
data16
mov
fwait
jo
dec
test
test
int
add
pop
movsb
pusha
or
mov
sti
clc
stos
jle
inc
cld
and
adc
mov
mov
mov
movsl
add
pop
or
sti
mov
mov
mov
daa
jg
adc
pop
or
movb
jbe
add
inc
scas
shlb
push
or
jns
mov
jmp
mov
jge
jno
lret
pushf
or
aad
daa
lcall
rcrb
jbe
jmp
outsb
icebp
rcrl
xor
dec
sub
mov
or
push
shrl
jo
inc
adc
arpl
inc
mov
pop
pop
pop
ffree
test
push
sbb
mov
sub
jne
out
or
loope
jo
xor
aad
pop
lock
test
jne
mov
mov
sub
and
add
add
add
mov
shlb
loope
push
or
test
jge
xor
mov
inc
das
add
pop
jl
pop
in
ret
mov
cmp
repz
sub
in
cmpl
jle
sbb
daa
cld
pop
sub
mov
test
je
inc
lret
test
testl
aaa
orl
jmp
mov
cmpl
clc
push
adc
sbb
or
adc
int
shll
pop
mov
orl
fistpll
mov
sbb
call
push
lods
clc
subl
mov
xor
cmp
sbbl
notb
cwtl
adc
mov
jge
jge
movsl
pop
divl
mov
popf
and
push
in
loopne
mov
add
or
mov
push
pop
fcmovnu
add
and
ja
rcrl
data16
sub
insl
imul
and
iret
into
fidivs
sbb
add
inc
lahf
add
add
or
and
mov
pop
or
fbld
add
lea
adc
add
add
push
pop
mov
sbbl
mov
push
xchg
mov
jo
cmp
xchg
ret
jecxz,pn
mov
fdivrs
add
loopne
or
adc
push
or
add
add
adc
sub
xor
push
cld
lcall
mov
adc
add
ss
aam
aas
out
adc
ret
mov
inc
fldenv
insb
add
inc
adc
jg
in
lods
decb
or
jg
cmpsb
test
jle
call
mov
faddl
or
add
dec
sahf
je
je
lahf
testb
mov
test
je
sbb
enter
or
sbb
push
xor
jne,pn
sub
bound
sar
sbb
mov
xchg
lahf
lret
add
dec
sbb
lods
loopne
or
rol
add
and
push
push
inc
sbb
mov
or
js
aas
cld
mov
xchg
jle
jecxz
sub
insb
fidivrl
out
jne
rcrb
test
jo
sti
mov
mov
mov
cmp
or
and
adc
sbb
push
pusha
xchg
push
push
xor
pop
jne
jbe
mov
xor
pop
psubsb
mov
lods
mov
aaa
inc
or
je
pop
jle
cmp
jg
sub
inc
fadd
push
jl
cmp
jg
add
mov
inc
rep
jmp
mov
loop
xor
jmp
mov
jmp
mov
mov
add
ret
lods
pop
adc
push
in
into
jno
mov
cmp
divl
je
outsl
data16
dec
js
rep
xchg
inc
je
cld
lea
cmp
xor
std
xor
jecxz
addb
jmp
incb
rcl
add
mov
test
and
cmpb
mov
xchg
cmpb
add
out
in
mov
jmp
cmp
xor
push
shrb
roll
ljmp
cwtl
call
ja
mov
aad
cmp
ds
jmp
outsb
cmp
adc
mov
mov
inc
inc
adc
cmc
outsl
aam
mov
test
push
xlat
push
pop
push
pop
movsl
les
lock
popf
stc
fidivs
lea
xchg
sbb
pop
ja
outsl
stos
andl
add
jmp
mov
push
insl
test
lock
sbb
mov
clc
int3
lds
add
inc
test
jne
push
cmp
lea
mov
lea
and
push
std
dec
sarl
add
data16
lcall
subb
js
mov
fldcw
pmaxub
push
sub
fists
fwait
pop
pop
jbe
push
or
fldl2e
add
add
hlt
mov
filds
fldcw
pop
inc
test
push
and
mov
jl
mov
outsl
mov
xlat
jb
or
in
and
je
jae
in
push
xchg
outsb
fidivrl
dec
add
pop
movl
mov
dec
rclb
int
sbb
sti
mov
sbb
push
push
mov
mov
inc
adc
or
lea
push
pop
add
dec
loopne
adc
imul
inc
mov
clc
insl
jne
push
cwtl
outsl
cmp
shl
data16
ret
jae
into
adc
push
push
hlt
mov
xlat
orl
fdivrp
jle
or
imull
lock
movlps
xchg
lock
aas
outsb
sbb
test
nop
push
aam
mov
scas
xor
or
adc
sub
pop
mov
dec
je
add
jle
clc
mov
xor
mov
enter
shrb
inc
add
push
cmp
rorb
or
push
rclb
add
jle
xchg
mov
mov
cmp
push
push
push
lea
push
sbb
pop
rol
lcall
cmpl
dec
jne
dec
add
pushl
outsl
or
sub
inc
out
sub
jbe
xchg
push
clc
fucomp
cltd
aaa
cmp
mov
loop
rorl
push
inc
and
mov
pop
aam
shlb
cmpb
out
push
xchg
sub
mov
out
dec
jne
jmp
lea
cmp
push
push
push
sub
hlt
jle
fmuls
cmp
in
adc
hlt
jmp
cmc
jne
sub
cmp
je
popf
mov
pop
mov
xchg
xor
shrb
inc
icebp
add
push
push
outsb
mov
imul
pop
hlt
xor
mov
aas
sub
dec
lea
add
sub
and
push
push
jg
popa
push
test
lock
lock
lahf
pop
loope
dec
pop
dec
das
movb
shll
sub
decb
dec
sub
mov
call
and
push
fucomi
pop
cmp
cmp
sti
and
divl
sbb
test
and
xor
mov
ja
and
xor
mov
push
sub
sbb
xchg
outsl
in
cld
adc
xor
aad
mov
adc
or
or
inc
testl
inc
sbbl
jg
pop
test
push
mov
inc
inc
ja
pushl
add
push
shr
je
mov
mov
cmp
jne
dec
je
mov
mov
imul
pusha
or
loop
push
adc
int
mov
add
push
cmp
jne
dec
je
mov
cmp
jne
or
ret
lcall
add
sti
mov
jne
shr
shr
sbb
iret
out
outsl
xchg
into
shr
or
pop
outsb
scas
xor
cmp
shl
aaa
ffreep
add
and
mov
cmp
jne
dec
dec
and
xor
add
arpl
push
or
mov
mov
shl
or
nop
or
stos
mov
stos
pop
aaa
xchg
jne
jge
mov
outsl
xchg
lods
bound
cs
mov
fsubrs
xchg
shll
xchg
mov
xlat
or
and
dec
les
push
adc
cld
mov
inc
push
es
adc
or
je
cmp
je
inc
popa
mov
mov
ret
mov
es
pop
pop
jb
je
incl
jo
enter
inc
adc
int
mov
mov
push
mov
js
mov
mov
xor
push
mov
outsl
mov
roll
push
adc
jl
mov
inc
cmp
push
cmp
je
cmp
push
stos
fsubrp
dec
sti
dec
jg
jmp
into
inc
bnd
cmp
jne
dec
sub
push
fsubs
fdivrl
in
mov
scas
push
inc
adc
cmp
and
mov
in
mov
adc
mov
mov
in
add
mov
mov
sbb
cmp
xor
mov
cmp
fistps
cmp
and
add
xchg
xor
roll
in
daa
or
decl
xlat
pop
push
idivb
call
mov
push
inc
cmp
je
mov
or
sub
in
sub
je
and
je
pop
je
movsl
mov
adc
dec
inc
ficomps
sti
jnp
and
add
sub
or
dec
ja
lea
mov
mov
push
push
out
int
or
jge
jmp
std
jg
or
neg
jle
js
pop
sub
jmp
inc
inc
jmp
mov
andnps
popa
jb
xchg
and
std
cmpsb
popf
cltd
jbe
push
adc
or
lods
cmp
stos
aad
cwtl
pop
xor
mov
xor
lods
xor
mov
mov
mov
sub
jecxz
jbe
pandn
adc
xor
aam
xor
js
ret
mov
cmp
jg
add
push
popa
out
daa
mov
push
add
pop
jmp
xchg
adc
mov
mov
dec
or
nop
inc
mov
jg
movsb
stc
inc
jle
sub
fs
push
mov
lahf
jg
push
ret
and
test
repz
test
jg
add
negb
movb
aas
mov
adc
adc
dec
xor
int
inc
fs
fmuls
and
scas
inc
fucomip
push
cmp
mov
inc
je
inc
mov
dec
jne
pop
lock
sub
mov
pop
test
lea
mov
loopne
jl
je
adc
inc
sti
jmp
orl
lods
push
outsl
xor
cmp
jns
pcmpeqb
movsl
ss
popa
out
mov
cmp
jmp
adc
jge
mov
xor
jmp
jmp
fstp
fldt
shll
adc
out
mov
in
arpl
mov
push
repnz
inc
pushf
or
pop
stc
in
ret
mov
adc
xchg
jl
mov
out
sbb
add
clc
repnz
mov
lock
out
xchg
sub
hlt
and
mov
adc
xor
leave
sbb
cld
lret
lds
mov
jbe
imul
cmp
dec
cld
mov
mov
bound
cmpb
xlat
fadds
rep
nop
lods
outsb
xor
xchg
push
or
push
push
fcomip
dec
into
sbb
rorl
mov
push
pop
test
enter
movsl
outsl
movsl
push
inc
cmp
and
daa
lret
into
pop
inc
test
xchg
clc
js
aas
sbbl
pop
mov
jmp
int
repnz
bound
and
cld
gs
sahf
mov
sub
inc
aad
iret
in
dec
pop
js
inc
mov
stos
mov
cmp
or
mov
pop
out
loop
ljmp
mov
imul
divl
jl
xor
cmp
call
mov
mov
jle
push
inc
mov
push
sbb
sarb
repnz
test
nop
fildl
daa
movsb
lahf
nop
inc
pop
stos
clc
scas
adc
inc
pop
pushf
mov
pop
pushf
mov
fs
aam
imul
loope
decl
xchg
iret
inc
bound
ds
push
cmpsb
scas
mov
pop
or
addl
dec
in
xchg
cmp
xor
in
cmp
sahf
xchg
pop
cmpsb
lock
mov
mov
lcall
clc
repz
mov
subb
and
jmp
and
outsb
bound
xor
jmp
aaa
shlb
fucomi
daa
pushf
cmp
jne
push
pop
and
adc
repz
xchg
inc
add
outsl
add
hlt
movzwl
imul
push
push
inc
adc
push
mov
dec
cmp
hlt
mov
push
data16
add
aam
repz
notl
insl
push
sub
clc
xchg
mov
jg
and
push
clc
pop
aas
or
loope
decl
mov
adc
inc
push
push
inc
push
inc
pop
inc
outsl
jb
popa
outsb
fs
push
incl
jo
imul
push
dec
popa
jae
push
popa
insb
jne
fninit
fwait
cmc
ljmp
mov
jle
lcall
xlat
mov
xor
mov
inc
rep
push
or
pushl
push
mov
or
dec
cld
jne
dec
mov
xor
and
jne
and
mov
es
fcoml
add
mov
xchg
xor
sbb
fstps
rcrb
push
or
add
outsl
test
or
mov
adcb
adc
fs
ss
xor
cld
ret
xor
jle
jmp
outsb
loopne
mov
or
push
cld
cld
decl
inc
mov
fdivs
rclb
add
stos
pop
out
push
jnp
xor
mov
pop
mov
pop
mov
lods
add
sbb
in
cmp
je
pop
mov
add
jae
daa
push
mov
mov
push
sbb
cmp
lods
les
lods
mov
mov
jbe
icebp
cmpsl
sarb
inc
rorb
aaa
incb
roll
paddd
ud2
push
mov
and
loope
sbb
or
add
add
inc
or
lahf
mov
mov
sub
mov
js
clc
cmp
cmp
inc
lea
fcmovu
jle
cld
adc
clc
mov
roll
push
mov
push
add
pop
lea
inc
jb
enter
cli
fstpl
loopne
lods
dec
setne
movsl
out
cmp
cmp
xor
ret
and
or
rol
mov
xor
xor
imul
push
or
jne
lock
andb
fcompl
lds
pop
adc
shlb
mov
mov
test
cmc
in
call
mov
mov
cmp
je
mov
leave
jne
mov
xor
push
xchg
jmp
lret
call
mov
movl
or
negb
pop
add
sub
mov
je
cld
pop
cs
xchg
add
sub
mov
clc
out
ljmp
ss
xor
lock
jne
das
mov
dec
mov
es
les
dec
orb
pop
push
les
or
data16
mov
fiaddl
pop
in
jb
xor
popa
lock
xor
mov
sar
sti
push
je
movb
dec
push
cmp
out
sbb
add
dec
jne
icebp
fucomi
sbb
add
sbb
clc
ss
mov
out
dec
cmp
in
outsb
lahf
push
popf
enter
dec
imul
pop
pop
lcall
xlat
ds
call
add
mov
rcll
bound
hlt
xor
mov
mov
sbb
movl
or
call
or
sub
and
adcl
pop
fldz
xor
xchg
call
push
clc
sbb
daa
movsl
jbe
insl
enter
and
pop
fiadds
add
jne
cmp
adc
adc
sarb
in
push
call
cmpsb
push
pop
mov
push
pusha
push
dec
cmp
in
outsb
sarl
or
cs
pop
xor
scas
or
jae
ljmp
pop
push
push
and
in
fcompl
mov
cmpb
je
or
jne
movsbl
inc
inc
jmp
ss
push
dec
add
imul
js
jecxz
and
adc
loop
shll
jecxz
test
pop
testl
push
jne
fiadds
push
sbb
lods
or
sub
int
js
mov
test
xor
out
mov
add
or
cmpl
je
dec
adc
sub
loope
sub
test
loopne
std
pop
dec
push
dec
inc
cmp
pop
jbe
int
dec
cmc
enter
adc
in
jbe
adc
add
mov
orl
push
cmp
out
push
sbb
adc
movsl
push
push
sub
push
push
loopne
mov
add
mov
xor
add
aas
mov
add
pop
sahf
jecxz
jecxz
sti
sti
aas
mov
mov
sub
fs
je
ja
leave
xor
push
add
mov
push
push
push
test
cwtl
push
or
das
es
adc
add
lds
cmc
xchg
add
aas
repnz
mov
mov
cmp
jne
xchg
mov
shrb
lea
pop
fdivl
hlt
fisttpl
jne
dec
dec
jne
and
sub
outsl
cmp
faddp
inc
jmp
sbb
push
sbb
dec
push
adc
inc
push
daa
adc
push
stos
add
inc
ja
mov
mov
cmp
lods
inc
push
arpl
sbb
push
setge
aas
fcompl
or
cmpsb
movl
or
sbb
dec
subb
or
adcb
mov
push
push
push
push
data16
pop
idivb
jge
add
xor
mov
or
adc
sub
push
cld
inc
or
pusha
add
testl
clc
xor
adc
insb
fisubrl
adc
adc
cs
iret
jae
mov
push
lods
inc
pushf
jle
pop
insl
sar
ret
xor
mov
add
xor
xchg
ret
ja
fisttpl
mov
add
xchg
jl
je
cmp
push
sub
and
cmp
pusha
add
sub
jb
je
jmp
cmp
cmp
xchg
xchg
cs
adc
jmp
sub
sti
cmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
push
sbb
into
ret
loopne
adc
or
lret
sbb
or
xor
sub
punpcklbw
out
mov
jg
sahf
push
jnp
jns
jno
outsl
cli
lcall
pop
test
add
adc
sbb
add
or
pop
mov
imul
or
sub
and
fnstenv
jo
sub
xor
popa
cmp
inc
or
enter
push
aas
mov
adc
enter
jecxz
ret
push
repnz
cmp
jne
adc
mov
arpl
mov
pop
scas
or
or
jo
rorb
leave
jle
test
jle
dec
mov
inc
fiadds
and
jg
jecxz
adc
dec
pop
add
xor
fs
cmp
add
mov
mov
stc
stos
xorl
cmp
mov
cmp
sbbb
jg
roll
nop
in
movl
sbb
cmp
xor
adc
sub
push
out
fistpll
jo
in
movb
ret
bnd
cmp
sbb
es
add
add
and
dec
jne
pop
pop
pop
inc
in
mov
dec
jmp
dec
xchg
add
inc
or
sbb
cmp
xchg
add
ret
mov
add
adc
rcr
fadd
mov
es
ja
mov
sbb
add
shrb
xchg
nop
adc
sub
push
push
inc
ja
push
rcrl
out
xor
sbb
add
movsl
pop
sbb
ja
add
dec
aad
hlt
mov
mov
leave
pop
push
test
dec
icebp
push
cmpw
adcb
and
les
add
call
xor
test
push
push
cmp
push
and
daa
pop
ret
mov
fucomp
stos
pop
push
jo
cmp
add
or
push
loope
gs
sub
sub
aas
ds
sti
dec
mov
mov
call
and
xchg
popf
orl
xchg
xor
or
mov
jne
mov
xchg
add
jmp
inc
adc
xchg
rcr
test
or
cmp
je
es
insl
cltd
adcb
add
sbb
ficoml
push
jne
frstor
cmp
adc
outsb
call
sti
ret
pop
push
add
lret
mov
jb
sub
popl
mov
scas
imul
adc
add
sub
test
push
push
daa
xchg
imul
pop
pop
ds
push
cltd
push
loopne
pop
pop
sub
lahf
mov
mov
pop
clc
add
mov
les
insb
mov
add
push
push
or
push
mov
cmpsl
or
sbb
or
shll
sar
jmp
mov
dec
clc
dec
jl
lock
add
lea
std
pop
mov
push
or
add
or
ja
adc
cs
and
inc
jg
jnp
mov
hlt
mov
pop
push
flds
add
jmp
jbe
or
adc
xchg
jl
test
push
iret
jle
push
add
clc
xorps
loopne
push
adc
add
sbbl
movl
dec
ss
inc
xor
clc
das
stc
mov
call
loopne
mov
cmp
aaa
xor
inc
aas
enter
loopne
push
fisubl
add
sbb
lea
cmp
push
or
mov
jno
jg
push
mov
pop
lea
cmp
cs
sub
mov
pop
and
jl
ret
push
sub
sub
dec
js
xchg
fistpl
dec
movsl
cmp
sbb
add
cmp
clc
lock
push
sbb
cmpsl
xor
add
and
pop
mov
je
sub
or
je
add
jo
sar
jmp
inc
add
jmp
fbstp
cmp
or
or
push
push
into
pop
out
addr16
in
add
inc
out
xchg
mov
push
pop
add
add
pop
add
mov
add
cli
push
mov
cld
lret
pusha
add
cmp
jl
fmull
inc
and
xchg
test
xchg
aas
add
loope
loope
aas
je
incl
mov
push
cld
add
cmp
pop
and
pop
shrb
adc
mov
xchg
cmp
sub
shll
popa
cmpl
je
cmp
mov
scas
aaa
test
inc
pop
or
rorl
inc
mov
sbb
mov
mov
cli
lds
push
sbb
pop
push
mov
push
pop
jbe
loope
lret
mov
push
push
pop
mov
jle
xor
mov
dec
movsl
cmp
cmp
aaa
ret
mulb
push
cmp
fs
dec
jne
add
or
test
cld
jge
lock
dec
jmp
and
hlt
lock
pushf
sbb
add
inc
xor
pop
dec
jne
mov
or
cld
adcl
pop
lea
jmp
xor
pop
or
cmp
rolb
mov
sub
imul
xchg
test
mov
push
cmp
dec
imul
push
aam
loope
jo
ljmp
jmp
aam
pop
push
jns
pusha
cmpsl
push
clc
inc
das
lods
cltd
add
daa
add
add
add
jp
cmp
ss
das
shl
mov
adc
dec
inc
es
popa
out
rorb
incl
adc
mov
es
jl
cmp
jge
xchg
push
sbb
adc
inc
jg
sbb
xor
xor
jmp
inc
jmp
push
stos
mov
and
xchg
stc
cmp
lret
push
mov
sub
mov
mov
add
filds
stc
add
lea
inc
dec
movsb
push
cmp
xor
dec
cmp
pop
cmp
lahf
cltd
mov
push
mov
cld
in
clc
sti
sub
xlat
adc
imul
add
gs
cmp
subl
mov
lea
lock
sub
hlt
jmp
add
mov
cmpsl
pop
decl
dec
js
mov
inc
jb
adc
inc
loopne
pop
adc
inc
push
cmp
in
pop
fsubl
pop
mov
xlat
xlat
sbb
or
lods
dec
out
or
ljmp
jne
sub
or
push
push
pusha
xchg
xlat
dec
pop
sub
and
mov
mov
mov
sub
arpl
cli
pop
cmp
pop
sub
add
lcall
addl
mov
lds
and
sbb
adc
push
popf
scas
sub
rcr
sub
clc
mov
pop
mov
loop
push
xlat
cmpb
nop
adc
in
popf
loopne
cmp
xor
addr16
or
push
js
lock
lea
push
cmp
call
jae
in
add
adc
push
add
mov
jno
out
cmp
fs
pop
jo
and
push
in
fstl
xor
out
inc
lods
jo
lock
xchg
lods
xchg
or
fistpll
push
dec
push
das
int3
pop
pushl
mov
or
rorb
aaa
out
xor
sub
xor
add
add
fwait
pop
mov
and
cmp
je
ss
push
inc
add
nop
inc
xor
mov
and
data16
rcrb
cvtps2pd
or
adc
idiv
push
sub
rolb
xor
push
mov
dec
cmp
nop
pushf
lcall
maskmovq
mull
clc
push
lods
add
add
or
dec
or
mov
je
daa
cltd
ds
inc
mov
test
out
cmc
in
aas
sub
xchg
xchg
push
push
mov
mov
sub
std
adc
mov
mov
pop
jp
filds
inc
jg
xlat
test
fldl
mov
mov
push
add
mov
or
and
xor
je
cmp
add
mov
mov
je
mov
jbe
add
jmp
adc
cmpsb
xor
add
or
adc
jmp
pop
jo
pop
cmp
mov
add
dec
cs
fstp
sub
adc
cmp
pop
jmp
cmp
pop
mov
inc
lock
stos
rclb
popa
ss
das
or
pop
in
adc
call
cmp
shrb
iret
repz
and
mov
test
push
mov
inc
out
add
jg
aad
stos
push
push
lret
cmp
daa
or
xor
jl
outsb
es
out
hlt
xchg
adc
or
inc
or
mov
shr
test
int3
cmp
jns
sbb
cmp
inc
je
mov
push
cwtl
ret
jo
adc
and
xorl
adc
sbb
ja
xor
mov
lea
outsl
cld
xchg
scas
js
les
push
push
add
sarl
add
test
into
xchg
pop
push
mov
fwait
fwait
pop
ret
cmp
xor
or
je
or
fwait
push
push
je
pusha
adcb
xchg
pop
dec
mov
rorl
xor
lahf
sbb
insb
jmp
and
mov
mov
adc
lock
call
cs
je
clc
or
cmp
cmp
jbe
and
jns
xor
insb
in
and
and
xchg
mov
cld
dec
jne
add
add
push
loopne
mov
sbb
dec
insb
and
mov
in
inc
push
xor
movsl
push
popa
jge
pushf
mov
pop
nop
daa
fistps
dec
jne
sub
and
mov
jmp
cmpsl
std
adc
loope
sbb
les
cmp
cmp
divps
or
ja
sti
add
add
inc
ljmp
mov
icebp
mov
jo
add
jb
inc
mov
push
cmp
nop
lret
dec
inc
ret
or
dec
adc
popa
adc
in
push
hlt
adc
pop
xor
push
pop
cltd
adc
inc
mov
adc
fstl
inc
clc
pop
mov
cwtl
sbb
xchg
add
xor
jo
movl
clc
scas
adc
sub
jmp
and
mull
mov
lea
adc
or
shll
pop
pop
ret
out
test
inc
lods
dec
dec
pushl
lds
popf
rcrl
mov
loopne
xor
mov
sarb
add
pop
cmp
pop
mov
fnstsw
popa
cld
ss
lods
aam
inc
pop
lea
enter
test
push
push
push
fiaddl
add
mov
or
dec
test
adc
adc
stos
mov
push
testb
in
in
cmp
call
fidivl
or
xor
and
loopne
jge
jge
sbb
les
fildl
imul
sub
add
lea
in
mov
jmp
decl
stos
icebp
aam
adc
lret
in
jge
or
push
in
test
adc
dec
in
push
cmp
or
sub
dec
dec
push
dec
shl
cli
test
mov
add
mov
mov
or
push
lock
loopne
adc
cmpl
jle
adc
mov
xchg
dec
jo
and
lcallw
or
inc
mov
jne
adc
mov
les
xchg
add
xchg
mov
xor
xchg
icebp
aas
pop
lock
jne
pop
sub
push
xchg
push
movsb
and
pop
repz
out
sbb
mov
sbb
icebp
outsl
fiaddl
push
push
push
mov
incl
pop
jecxz
jg
pop
pop
mov
inc
jecxz
or
or
in
sbb
jno
bswap
icebp
sbb
push
aad
rcl
test
insb
dec
popa
pop
mov
fadds
push
test
push
clc
sar
mov
dec
and
outsb
and
and
xor
xchg
add
fisttpl
or
or
adc
add
or
mov
ret
adc
lcall
jmp
push
mov
test
out
je
mov
nop
mov
push
clc
daa
mov
mov
xor
pop
je
xchg
inc
mov
inc
push
mov
sbb
das
pop
test
push
or
rcll
inc
fstpl
loopne
dec
or
mov
loopne
vmread
pop
in
mov
cmp
jl
je
lret
cmpb
je
lcall
add
in
jne
movb
fimuls
mov
inc
add
dec
cmp
jno
sub
add
inc
cmp
dec
jg
gs
cmp
fsubrl
mov
popl
out
and
je
js
loop
call
lea
jle
cmp
test
insl
sbb
push
push
mov
inc
aaa
je
cli
negl
xor
mov
inc
aas
ret
imul
gs
xor
cs
insb
ja
gs
outsl
outsb
addr16
push
mov
push
inc
daa
outsl
loopne
push
pop
mov
sbb
push
outsl
bound
out
and
push
push
pop
add
add
ja
popl
pop
pop
xor
and
or
pop
pop
cwtl
mov
out
jmp
stc
int
add
fstl
aas
iret
sarb
inc
sub
push
repnz
pop
imul
pop
inc
pop
sti
cmpsb
sbb
push
lods
repz
mov
mov
inc
test
repz
shll
push
jge
call
shrl
xor
mov
call
add
sti
int3
hlt
dec
cmpb
stos
pop
cmp
jne
adc
cmpsl
je
popf
inc
subb
push
int3
sbb
add
insb
xlat
rcrb
stc
push
je
das
ret
inc
xor
xchg
jecxz
insb
cmc
add
mov
scas
outsl
data16
popa
jb
daa
or
popa
insb
gs
aaa
add
jge
inc
cltd
dec
shrb
add
pushf
ja
lock
lds
cmp
lret
insl
popa
mov
xor
aad
notb
sbb
add
inc
mov
clc
add
mov
sbb
mov
movsb
fimull
icebp
mov
mov
dec
inc
xor
sub
fldcw
mov
cli
mov
jo
inc
jp
cmp
pop
mov
inc
dec
add
or
test
jno
mov
mov
cmp
nop
out
int3
loope
outsb
repnz
stos
add
sbb
add
pop
cmp
jno
or
mov
pop
mov
pop
lock
cmp
jne
jae
xor
inc
dec
ljmp
decl
or
sbb
push
and
inc
add
insl
jae
scas
dec
push
inc
xor
or
movsl
sahf
mov
mov
push
mov
mov
test
sysret
sbb
mov
pop
ret
test
lret
or
pop
add
push
dec
xchg
or
ljmp
hlt
ret
push
lods
mov
and
add
test
clc
mov
je
add
xchg
out
subb
test
sbb
lea
int
mov
or
inc
loope
xlat
mov
stos
lds
fs
lea
lods
mov
jne
jg
ljmp
cli
jg
push
mov
inc
jmp
cmp
cli
jbe
lea
cmp
ja
fcmovb
jmp
or
mov
aaa
in
outsl
out
adc
sbb
and
lret
add
jmp
pusha
add
dec
outsl
out
imul
or
sub
sti
cmp
jb
or
dec
movb
and
ror
mov
jbe
pop
popl
add
jb
lea
ret
push
sbb
outsb
pop
inc
or
push
inc
movl
fcmovnb
out
push
lock
fdiv
and
pop
cli
mov
inc
test
je
or
jae
fucomip
loope
and
je
cmp
adc
mov
and
cmp
jne
ja
mov
and
mov
loope
or
mov
pop
lea
adc
fbld
dec
cld
mov
inc
push
adc
aaa
clc
sub
inc
lcall
adc
or
hlt
inc
xlat
sbb
out
and
inc
inc
mov
ret
mov
sbbl
sbb
fmull
jnp
xorb
sbb
or
jb
inc
arpl
leave
stos
cmovb
dec
cmp
sub
rcrb
je
adc
jbe
mov
and
jns
push
and
sub
outsl
sub
pop
pop
fmuls
fwait
mov
rorb
jmp
popf
add
push
adc
ret
popa
xlat
rclb
bound
push
sbb
adc
ss
fadds
loopne
leave
aas
sarb
and
inc
push
sbb
cmp
add
ds
sahf
bound
fs
test
mov
mov
cmp
add
push
lahf
out
test
cmp
mov
mov
xchg
lea
mov
add
mov
push
stc
sub
dec
pop
push
fcomp
shr
lock
jle
add
sub
popa
push
movsb
jbe
pop
loopne
lahf
mov
mov
push
lea
push
push
inc
fnsave
lock
or
inc
outsb
inc
ss
and
cmp
arpl
ret
sub
dec
jnp
daa
or
pop
xchg
add
add
jge
xchg
mov
in
push
or
ret
in
mov
subl
add
or
add
push
xchg
pop
xor
pusha
add
out
lods
nop
int3
test
daa
movsb
adc
imul
adc
call
mov
add
cmp
push
and
insl
cmp
push
sub
cmp
jbe
mov
cmp
and
push
dec
mov
push
xor
jmp
sbb
push
push
pop
push
in
outsb
jp
or
sahf
adc
loope
inc
cmpl
ret
loop
push
add
or
out
call
push
mov
sub
ja
adc
test
jne
lock
das
push
cmpb
hlt
aas
ss
pop
lret
mov
ret
mov
jo
xchg
lods
outsb
jae
or
mov
mov
ss
mov
or
mov
adcl
sbb
leave
adc
sbb
adc
cmp
dec
xchg
push
push
mov
mov
stos
sarl
xor
or
push
dec
inc
add
add
push
or
cs
cld
pop
mov
movsb
add
xor
loopne
shr
mov
add
or
push
gs
xchg
gs
jb
insl
sar
mov
adc
inc
imul
inc
push
lret
jg
inc
outsl
arpl
inc
gs
jne
je
dec
outsl
je
imul
push
mov
gs
outsl
inc
arpl
or
adc
ret
or
jb
push
fisubl
xor
outsl
insl
bound
outsl
js
imul
in
pop
cld
outsl
ja
nop
push
addr16
andps
outsb
dec
inc
xor
mov
dec
add
pop
leave
leave
leave
mov
pop
push
push
leave
leave
leave
leave
dec
dec
inc
inc
leave
leave
leave
leave
cmp
xor
fs
leave
sub
rclb
mov
in
in
movsb
mov
in
xchg
nop
mov
in
in
test
in
je
insb
in
in
push
in
in
push
push
dec
in
in
dec
inc
inc
cmp
in
in
xor
sub
in
in
and
sbb
in
in
adc
or
in
in
add
cld
xchg
jb
jb
clc
hlt
lock
jb
jb
call
jb
jb
aam
int3
jb
jb
enter
jb
jb
mov
jb
jb
movsb
mov
jb
xchg
nop
mov
jb
mov
jb
je
insb
sbb
jb
rclb
cmp
fcoms
pushf
int3
enter
pushf
pushf
pushf
mov
pushf
pushf
pushf
lods
test
mov
pushf
cwtl
xchg
nop
pushf
pushf
pushf
pushf
mov
pushf
pushf
jl
je
pushf
pushf
pushf
pushf
insb
push
pushf
pushf
pop
pop
push
push
pushf
pushf
pushf
pushf
dec
dec
inc
inc
pushf
pushf
pushf
pushf
cmp
xor
pushf
pushf
pushf
pushf
sub
and
pushf
pushf
pushf
pushf
sbb
adc
pushf
pushf
pushf
pushf
or
add
dec
dec
inc
sahf
cld
xchg
clc
hlt
lock
dec
dec
dec
in
call
dec
dec
je
jo
daa
daa
daa
fs
push
push
daa
daa
daa
daa
pusha
pop
insb
push
dec
dec
inc
inc
daa
daa
daa
daa
cmp
xor
daa
daa
daa
daa
sub
and
daa
daa
daa
daa
sbb
adc
daa
daa
daa
daa
or
add
xchg
xchg
xchg
daa
cld
xchg
clc
hlt
xchg
xchg
xchg
xchg
lock
call
xchg
loopne
fcom
daa
daa
mov
ror
mov
daa
daa
daa
mov
daa
daa
daa
lods
test
mov
pushf
cwtl
xchg
nop
daa
daa
daa
daa
mov
daa
daa
jl
je
daa
daa
daa
daa
insb
push
daa
daa
pop
pop
push
push
daa
daa
daa
daa
dec
dec
inc
inc
daa
daa
daa
daa
cmp
xor
in
jbe
sub
sub
in
in
sbb
adc
dec
dec
dec
adc
add
and
add
xchg
clc
hlt
daa
daa
daa
daa
lock
call
daa
loopne
fcom
daa
daa
daa
daa
ror
enter
daa
daa
sarb
mov
test
daa
daa
daa
daa
mov
daa
daa
daa
nop
mov
daa
cmpb
daa
daa
daa
jo
push
daa
pusha
pop
pop
push
daa
daa
daa
daa
push
dec
dec
inc
daa
daa
daa
daa
inc
cmp
xor
daa
daa
daa
xor
and
daa
daa
daa
and
adc
daa
daa
daa
adc
add
xchg
daa
daa
add
xchg
clc
xchg
xchg
xchg
xchg
hlt
lock
call
in
mov
rol
loop
or
inc
pop
add
ljmp
jnp
pop
js
cwtl
fisubs
rorl
out
mov
test
xor
push
mov
nop
mov
scas
push
mov
setp
fdivl
or
jbe
into
mov
frstor
mov
pop
and
inc
add
sub
xlat
sub
pop
jg
clc
ret
loopne
test
mov
push
daa
imul
sbb
out
adc
sahf
out
sbb
and
mov
ficoml
outsl
push
push
bound
sbb
iret
ret
insl
lods
and
scas
cmpsl
sub
pop
icebp
stos
and
push
add
call
add
cld
or
or
add
pop
pusha
test
push
push
adc
mov
push
xorb
xor
pusha
dec
push
gs
adcl
aas
inc
movsb
and
pop
or
xchg
jbe
and
inc
jns
add
mov
gs
andb
push
push
dec
inc
inc
dec
add
in
xlat
mov
and
dec
push
inc
ja
clc
jge
dec
pop
and
mov
push
push
pop
sub
fucomi
mov
pop
dec
dec
dec
inc
push
das
in
xchg
je
rorb
je
mov
subb
loopne
and
icebp
repnz
dec
dec
dec
repz
cmc
testb
dec
idiv
stc
cli
dec
dec
dec
dec
sti
cld
std
decb
dec
dec
jmp
loope
dec
dec
dec
dec
jecxz
in
dec
dec
dec
dec
out
jmp
dec
jmp
in
out
dec
dec
dec
dec
out
rcl
rorb
dec
dec
rcl
aad
dec
dec
dec
dec
xlat
fcomp
fimull
dec
dec
fcmovnu
fstp
dec
dec
dec
dec
ffreep
rol
dec
dec
dec
ret
dec
dec
dec
enter
dec
dec
dec
lret
int3
int
dec
dec
dec
dec
iret
mov
mov
dec
dec
dec
mov
mov
dec
dec
dec
dec
mov
mov
dec
mov
dec
dec
dec
mov
dec
dec
dec
mov
dec
dec
dec
cmpsl
test
stos
dec
fidivs
das
mov
nop
jl
ja
rorb
push
pusha
leave
mov
and
inc
push
push
push
aas
shlb
xchg
or
arpl
imul
xorb
or
int3
ja
roll
popa
jo
fisubl
nop
fdivl
decl
or
dec
jne
dec
dec
gs
outsl
jb
push
pop
mov
mov
outsl
mov
cmpsl
sbb
or
outsb
mov
nop
ret
or
mov
sub
push
push
pop
adc
pop
stos
push
scas
nop
test
jns
xchg
dec
dec
ret
xlat
dec
jp
xor
pusha
mov
jb
or
scas
mov
push
or
imul
outsl
nop
clc
mov
jle
popa
outsb
add
rcrl
jnp
push
jnp
mov
outsb
jbe
jb
insb
outsl
ja
shlb
mov
inc
pop
popf
ret
sub
sub
pop
mov
jnp
jle
shll
imul
popa
add
jb
mov
jle
gs
mov
andl
roll
in
or
jge
mov
pop
push
outsb
fs
fs
xor
orb
mov
push
outsl
imul
mov
or
jb
std
clc
inc
popa
jae
ficomps
mov
jle
jo
add
rolb
inc
scas
js
ds
loopne
loopne
adc
jae
push
leave
addl
sbb
mov
push
push
jb
mov
lock
xor
xor
add
push
inc
mov
push
mov
mov
mov
fbstp
push
lods
popa
insb
inc
in
ds
mov
jb
popa
outsb
inc
xorb
orb
inc
addb
add
mov
mov
in
jb
data16
mov
js
push
pusha
push
data16
pop
andl
pop
andl
ss
adc
addr16
fbld
push
popa
data16
enter
cs
xor
inc
add
or
int3
sub
out
inc
cmp
dec
and
pop
mov
inc
adc
jbe
xchg
lods
xlat
push
adc
jb
popa
fs
adc
les
int3
add
enter
lret
lret
xor
fsubrs
sbb
rol
je
aam
cmp
pop
push
aam
mov
cmp
repz
jnp
sbb
push
loopne
sbb
mov
push
ret
inc
mov
mov
clc
sarb
dec
jne
push
mov
push
subl
or
outsb
arpl
cmp
fmuls
incl
hlt
aaa
movsb
ret
adc
repz
pop
push
add
xchg
std
pop
add
push
lret
mov
mov
fwait
mov
insb
or
call
sbb
mov
inc
insb
mov
lock
mov
test
std
unpckhps
or
fs
dec
call
pop
aas
or
cld
in
cmp
inc
adc
sub
and
add
sbb
enter
cli
stos
mov
addr16
aaa
jg
fsubrs
sbb
jp
add
mov
dec
cli
mov
inc
inc
dec
or
jg
and
stos
inc
pop
add
xor
inc
test
repz
mov
sarl
jbe
cmp
jmp
insl
push
cmpsb
je
movzbl
push
push
ljmp
jl
rcrb
add
lcall
pop
lods
fstl
jne
inc
inc
ds
mov
jmp
pop
incl
in
cmpsl
mov
out
and
add
outsl
in
sti
je
loopne
out
sub
pop
stos
cmpl
xor
cmp
lock
xor
inc
mov
mov
cmp
shl
mov
clc
addr16
leave
mov
fnsave
pop
ret
sub
scas
add
mov
sbb
inc
jo
adc
add
jbe
sbb
push
push
cmpl
imul
daa
fnstcw
push
push
adc
out
rol
mov
stc
lock
mov
jl
cmpb
jbe
adc
imul
pop
dec
sub
into
or
into
sub
inc
adc
push
jl
add
lock
rcl
jg
lods
mov
add
sub
jb
sub
je
mov
cmp
add
mov
hlt
mov
rolb
push
stc
std
cmpsl
mov
add
or
jae
inc
dec
jne
ja
loope
ljmp
jns
pop
hlt
lahf
notl
dec
lcall
add
icebp
dec
pop
cmp
jb
pop
push
mov
push
pop
mov
and
pop
pop
sub
sub
jbe
add
mov
idiv
mov
sub
jmp
mov
dec
jne
push
mov
sub
xor
push
outsb
cltd
mov
mov
pop
jecxz
inc
mov
xor
loopne
and
jo
pushl
mov
negl
or
cltd
lret
mov
xor
in
cmp
dec
inc
outsb
cmpsb
mov
add
rorl
add
mov
lods
sub
mov
cmp
push
add
add
jbe
shll
fildll
inc
fisttpl
fistps
ret
add
add
sub
add
rorl
fists
sub
outsb
stc
mov
cld
fwait
test
rcrl
loope
fisttps
cs
ffree
ffree
ffree
pop
add
add
or
and
push
cmp
or
mov
stos
clc
xlat
cmp
add
push
mov
sbb
push
xlat
adc
xchg
sar
sub
xchg
loope
mov
xor
mov
mov
push
push
mov
xor
jecxz
xchg
jl
push
js
mov
imul
repnz
mov
pop
outsl
mov
mov
pushf
xor
sub
mov
cmp
inc
push
mov
aaa
test
bound
call
mov
mov
or
add
jo
adc
fistl
pop
movb
repnz
jl
inc
int
add
and
adc
jbe
rorb
in
cmp
jmp
fstl
loope
fsub
mov
arpl
adc
mov
dec
sarb
das
add
adc
insl
lock
setne
jmp
ss
cwtl
sbb
mov
pop
jns
pop
addr16
dec
pop
sti
add
inc
mov
dec
ret
fildl
pop
add
xor
test
test
push
adc
mov
jmp
and
push
xchg
cmp
xorb
subl
shl
add
jo
cmpb
and
ja
imul
add
sub
js
add
push
mov
mov
and
pop
aaa
outsb
pop
and
arpl
jbe
insb
scas
orb
push
inc
jge
add
push
add
cwtl
lret
add
shll
scas
mull
mov
subb
arpl
pop
out
adc
jb
push
js
sbb
cmp
add
cld
out
lret
aad
aas
push
loopne
mov
adc
sti
jge
sbb
xor
pusha
idivb
adc
outsb
push
enter
rcr
pop
aad
hlt
and
mov
popa
lret
inc
cld
or
fistpll
sbb
rcrb
lock
mov
bound
leave
push
add
add
push
lds
sahf
mov
nop
jne
mov
jno
or
movl
inc
ret
clc
dec
push
adc
mov
dec
int3
push
enter
jl
sbb
cmpsl
jne
nop
pusha
inc
push
hlt
ficompl
stc
cmp
sub
lock
sahf
mov
ret
jg
add
inc
stos
jb
or
xchg
dec
ret
push
jmp
inc
sbb
outsl
outsb
push
pop
cmpsl
sbb
mov
jo
aaa
inc
ret
add
cmp
sbb
mov
cmpsl
xor
pop
clc
mov
push
push
pop
scas
add
xor
je
rcrb
decl
add
push
xlat
addr16
lods
mov
sub
jmp
scas
and
add
mov
mov
popf
jne
dec
jp
icebp
ja
jo
das
cli
pushf
sarl
lods
jns
jle
and
mov
popa
xchg
pop
cmp
inc
xchg
imul
mov
pusha
imul
lock
mov
sbb
testb
push
jg
sub
cmp
incl
cs
xchg
nop
aas
andps
mov
push
push
mov
aaa
pusha
adc
adcb
push
and
repnz
jge
imulb
push
hlt
clc
cld
push
jnp
push
add
cld
imull
fiadds
mov
aam
lcall
imul
xor
loopne
xchg
and
ret
pusha
repnz
pop
inc
push
clc
aam
adc
in
pushl
pusha
stos
mov
adc
enter
das
push
rolb
push
xchg
addr16
cld
xchg
jo
hlt
arpl
rorl
clc
imul
rcll
fadds
dec
dec
ret
lea
cmpsl
aas
mov
push
mov
add
lret
popa
add
cltd
adc
cmp
xlat
jo
addr16
loopne
aas
arpl
push
dec
pop
adc
cmp
mov
mov
inc
xlat
mov
outsl
cld
pop
xor
xor
repz
mov
mov
xchg
and
outsl
jl
stc
pop
cmp
cli
ljmp
je
mov
mov
rorb
fadds
xchg
jmp
xchg
add
out
mov
push
inc
shll
scas
mov
inc
inc
movb
cmp
jb
inc
dec
je
sti
mov
nop
fistps
sub
jbe
sbb
pop
inc
or
mov
lods
mov
mov
push
add
inc
sub
jne
add
cmp
cmpsl
mov
mov
inc
pop
add
or
je
cmp
jbe
xchg
lock
mov
sbbb
ret
subb
ljmp
and
outsl
fsubs
imul
add
dec
dec
push
cmp
jne
cmpsl
cli
add
les
add
cmp
mov
jp
push
adcb
cld
and
jg
sub
or
add
sbb
adc
test
add
push
stos
xchg
xchg
into
inc
xchg
push
rolb
inc
and
aaa
mov
aam
add
mov
loopne
aam
mov
or
pop
pushf
stos
dec
jne
les
inc
outsl
or
arpl
jmp
mov
mov
ds
cmp
sub
fsubrl
jne
cs
insl
shll
std
and
lods
jmp
add
mov
mov
fadd
and
pop
ljmp
fildl
sub
jae
shrl
mov
inc
movsb
xchg
pop
mov
rep
sbb
xchg
push
inc
loopne
jge
ds
dec
xchg
mov
incb
pushf
jmp
sub
das
dec
xor
cmp
ja
imul
mov
add
loopne
fistpl
add
pop
dec
ss
push
and
jb
or
jl
pusha
jo
bnd
ret
je
xchg
ret
and
mov
imul
clc
fistpl
or
xor
mov
lcall
xchg
mov
mov
push
push
dec
ret
mov
imulb
pop
pop
ss
sub
or
popf
arpl
lods
in
xchg
dec
or
sub
fsubrl
and
lea
and
add
cmpsb
addb
repnz
or
sbb
or
mov
jae
fsubr
mov
cmpsl
pop
jb
lahf
shrb
imul
jg
pop
cmp
test
test
xlat
sbb
mov
data16
xchg
incb
mov
aad
or
jmp
xor
inc
cld
xchg
and
jmp
mov
mov
mov
aas
and
push
cld
call
pop
js
mov
lret
xlat
jl
ja
mov
mov
cmp
ja
push
and
int3
or
pop
rcrb
mov
xchg
imul
pop
lods
out
sub
pop
pushf
mov
outsb
mov
inc
je
mov
or
insl
mov
mov
inc
je
mov
dec
je
dec
jl
test
aas
mov
mov
ret
mov
bound
jne
xchg
adc
jge
sbb
cmp
pop
mov
test
push
loopne
mov
inc
iret
push
mov
dec
dec
mov
clc
xchg
ret
xor
ret
lock
ret
ds
inc
pop
in
push
imul
and
test
push
lret
pop
jl
mov
inc
in
lock
dec
sub
xchg
adcl
popf
pop
or
cli
inc
cmp
aaa
mov
mov
out
or
movsl
ljmp
cmp
push
jge
sbb
lea
xchg
gs
out
or
aam
add
jl
jmp
add
add
add
jl
add
jno
mov
xchg
iret
push
lea
iret
mov
cld
je
push
xor
stos
or
decl
rorb
pop
jge
mov
neg
jmp
or
shrb
push
enter
xchg
push
mov
mov
out
rorb
gs
adc
clc
in
or
jg
and
mov
stos
cmp
jne
pop
pop
outsl
aam
mov
xchg
xchg
mov
psubd
test
js
test
aam
mov
cli
arpl
add
mov
sarb
pop
push
loop
jle
mov
cs
daa
movsb
loopne
mov
rorb
add
dec
mov
mov
movzwl
sub
clc
je
sbb
dec
add
imul
mov
inc
inc
sub
adc
je
testl
movswl
mov
add
lea
add
sbb
call
dec
cld
cmp
out
sub
jne
lods
push
lcall
inc
dec
inc
dec
lods
or
dec
xchg
jge
mov
jo
ret
std
ret
mov
aam
adc
jg
cmp
jl
pop
sbb
ficompl
dec
stos
push
je
mov
stos
imul
fildll
stos
jmp
inc
inc
mov
loop
enclu
mov
inc
stos
pop
pop
inc
clc
dec
ja
aaa
aad
add
push
mov
add
jno
mov
jbe
sub
das
clc
add
inc
mov
mov
test
insl
cmp
cli
adc
mov
mov
sub
or
or
repz
inc
or
test
jne
sbb
sbb
stos
cmpsl
sbb
call
loope
testl
dec
je
inc
jne
pop
mov
ret
mov
bswap
xchg
repnz
or
repnz
inc
dec
cmp
mov
lock
fwait
jns
iret
mov
xor
inc
je
push
push
cmp
add
or
data16
shlb
pop
pop
inc
loop
push
mov
test
dec
pushf
add
sub
out
idivb
and
and
adc
and
sub
inc
sub
frstor
sub
sbb
jae
jne
and
sub
sub
sahf
popf
fs
xor
sub
xor
and
dec
xchg
fldenv
test
testb
je
xchg
outsl
repz
mov
lea
adc
inc
and
mov
and
add
jp
andb
push
xor
sbb
or
xor
aaa
inc
jg
inc
inc
push
adc
je,pn
imul
movsl
dec
inc
rol
cmp
test
inc
fabs
push
jg
sarl
and
pop
frndint
rcr
scas
insb
or
fstps
std
fcomi
fwait
mov
testb
je
fidivl
jne
lea
fcomip
out
add
inc
sub
nop
shr
and
add
sbb
jmp
shrb
jns
mov
mov
cmp
pushf
or
cmpb
add
or
dec
js
decb
and
pop
cmpl
leave
jmp
mov
aaa
dec
sbb
je
notb
clc
mov
shr
mov
add
xchg
out
aad
dec
dec
xor
adc
inc
inc
subb
rorl
je
mov
cwtl
push
into
neg
sbb
mov
or
pushl
sarl
inc
sub
mov
jle
repnz
loopne
jae
dec
add
mov
fildll
xchg
aad
cli
in
or
or
jg
fidivl
fwait
mov
jne
mov
push
inc
fcomip
add
pop
dec
sub
cmp
popf
mov
or
ljmp
dec
adc
sub
movb
cmpb
testl
pop
jmp
mov
sbb
xlat
add
inc
pop
mov
jmp
jo
push
inc
ret
outsl
rorb
lret
f2xm1
fwait
jg
loop
jo
push
fldz
cmpsb
ret
mov
subb
lods
or
loope
sahf
test
jne
inc
sbb
cmp
icebp
je
and
fistpll
sub
pop
add
jg
sbb
pop
cwtl
jne
mov
sahf
add
xchg
push
xor
push
mov
fldl
cld
inc
adc
aas
jmp
fstpt
movsb
test
adc
data16
mov
sub
insl
and
push
int3
or
js
mov
sbb
or
fimull
addr16
add
jmp
aaa
mov
negb
or
adc
es
push
inc
imul
push
cmp
hlt
nop
jb
aaa
add
mov
arpl
subl
movsl
xchg
in
push
mov
push
imul
pop
pop
fistps
gs
xorl
push
inc
addr16
mov
xlat
sub
adc
idivb
add
jbe
sub
fstpl
fwait
add
das
mov
add
out
add
cli
test
fldl
ret
rolb
xorb
mov
divl
push
adc
dec
fdiv
add
adc
cs
or
cld
jbe
jae
or
cmp
add
stc
inc
fisubs
cmp
sub
add
imul
jge
enter
call
fildl
jle
mov
lahf
orb
sbb
push
pop
pop
xor
roll
outsl
movsl
xor
jne
add
lock
mov
adc
mov
stc
int3
aaa
loopne
fs
mov
push
cmp
test
iret
and
call
or
push
enter
loopne
mov
and
fldcw
xor
div
shl
push
sub
adc
mov
or
pushf
or
dec
or
fsub
outsl
pop
xor
les
add
in
jmp
lock
incb
jb
jnp
adc
ja
and
jb
or
jp
mov
push
sti
insb
cli
cmp
ja
adc
cmp
add
inc
dec
jne
ljmp
mov
aas
cltd
idiv
imul
pop
sub
fldl
repnz
mov
fildl
add
pusha
ret
or
js
jne
vpaddw
xor
dec
pop
call
test
call
out
in
leave
jg
jl
clc
push
clc
add
insl
cmp
or
inc
xchg
jb
pop
xchg
arpl
pop
inc
push
mov
bound
data16
cmp
jl
addl
add
inc
inc
and
xchg
lods
mov
xor
lock
or
dec
lock
imul
mov
test
repnz
pop
xor
add
sub
js
mov
sub
mov
dec
lods
cmp
andl
insb
imul
pop
dec
aaa
iret
sbb
inc
jmp
nopl
mov
clc
xor
hlt
mov
cltd
xchg
sbb
jbe
xor
call
xchg
and
popf
mov
cmp
or
xor
xchg
inc
icebp
and
push
xchg
or
push
adc
mov
or
cltd
cld
sbb
adc
lea
fiaddl
jmp
xchg
and
cs
xchg
or
mov
and
adc
clc
jbe
sahf
orl
jb
lret
mov
in
pusha
in
clc
push
mov
dec
mov
push
loopne
mov
pop
pusha
push
in
sub
jno
push
or
sti
je
popa
scas
mov
test
inc
hlt
out
inc
xchg
sarb
js
add
popl
jo
mov
mov
add
push
lea
or
xchg
repnz
jo
sbb
adc
inc
in
add
jecxz
xchg
lret
mov
push
in
jge
call
ds
jecxz
lahf
pop
and
adc
jne
jbe
jno
xor
test
shll
push
add
out
repnz
in
add
push
sub
xchg
ret
js
cmpsl
popa
jno
mov
pop
rcr
push
rolb
mov
mov
push
dec
loope
mov
cli
mov
je
or
rorb
jp
in
notl
shlb
add
sub
xchg
jle
mov
jne
sub
jl
xor
dec
adc
sbb
sub
rolb
xor
sbb
pusha
test
jns
imul
fsubs
add
aaa
addr16
in
dec
ds
in
ret
push
xchg
inc
sub
lock
aaa
mov
jecxz
push
inc
cmpb
and
xchg
jne
push
or
jb
movsl
in
jno
outsb
stc
ds
jns
add
add
movsl
sbbl
or
sbb
lcall
pop
xor
cmp
pop
mov
stos
xchg
mov
pop
incl
dec
mov
loop
popf
loopne
cmc
sahf
xchg
inc
call
adc
icebp
cmpb
sub
mov
push
cmp
pusha
repnz
jns
pusha
and
add
clc
ljmp
mov
pop
cmp
jne
mov
hlt
pop
xor
xchg
fisubs
push
jne
mov
cmpsl
cmp
test
sbb
xchg
jbe
jmp
push
or
or
add
add
pop
or
or
imul
js
cmpb
push
insb
int
repz
stos
test
out
ds
stos
cmp
loopne
ds
jns
lods
orl
cmc
sti
lret
pop
or
test
or
mov
loop
mov
cltd
xchg
xor
inc
fsubs
das
popf
dec
push
mov
and
pop
adc
pop
and
xchg
mov
xor
dec
nop
push
push
pop
pop
mov
lock
lea
inc
sub
push
push
jbe
or
dec
je
add
jmp
out
add
push
repnz
jecxz
arpl
cmp
and
cs
daa
xchg
nop
nop
and
mov
pop
lods
loope
mov
call
push
cmpsl
or
push
push
jl
push
out
rcll
dec
jg
je
mov
add
int
sbb
pop
sub
je
pop
je
jmp
cmpb
dec
mov
cmp
mov
sub
sub
add
jmp
rolb
jmp
cmp
xor
mov
mov
sbb
sub
ret
ljmp
push
loop
data16
jmp
and
shll
or
jle
add
add
fcomip
mov
inc
call
nop
out
add
and
repnz
in
xchg
jne
lcall
push
lock
pushf
enter
and
add
daa
fs
xlat
jns
add
sbb
xchg
ja
jns
adc
or
inc
jmp
and
add
xor
mov
lea
jb
push
add
rol
sub
xor
push
inc
xor
jmp
or
push
cmp
call
jge
arpl
mov
in
cmpb
cltd
push
imul
xchg
je
inc
xchg
sbb
aas
dec
jmp
sbb
push
test
fucomi
add
rorl
mov
aam
mov
add
repnz
cld
sub
xorl
adc
jns
pop
sbb
clc
inc
mov
stc
cmp
add
inc
dec
das
push
dec
xchg
jmp
in
popf
or
adc
and
push
clc
insl
mov
sahf
movntps
inc
ret
jne
or
mov
adc
outsb
lea
popa
cmpsl
cli
inc
dec
or
sbb
insl
sahf
inc
xor
les
sbb
cmp
mov
je
mov
dec
mov
mov
je
dec
sbb
je
push
sbb
cltd
mov
push
popa
or
adc
sub
dec
push
pop
mulb
int
ljmp
adc
sub
add
sub
jae
jnp
int
rorb
scas
arpl
ret
add
mov
out
or
out
mov
fimuls
test
mov
jb
test
mov
fcoml
dec
cmp
push
or
fimull
into
icebp
int3
movl
or
and
js
add
fiadds
loope
mov
xor
mov
out
subb
jl
pop
in
push
mov
push
cmp
jne
incl
les
and
mov
scas
and
jmp
sub
je
dec
je
sub
sub
je
mov
adc
push
push
es
push
inc
mov
fwait
js
clc
jle
fadd
das
xchg
sub
loopne
cwtl
add
or
std
or
adc
movb
add
jl
pop
pop
mov
ja
jle
inc
rcr
mov
mov
loope
add
mov
xchg
movsl
int3
add
cmp
inc
add
sahf
jmp
or
loopne
sub
dec
jne
xchg
cmp
sub
dec
ljmp
adc
cmp
jg
mov
ret
cltd
xor
sub
add
std
bsr
shlb
js
add
popf
in
push
cmc
adc
pop
and
out
cld
gs
shr
cmp
xchg
psubusb
js
inc
dec
loopne
push
jmp
mov
flds
and
inc
out
mov
add
pop
xchg
jo
lock
popf
mov
ret
mov
mov
ds
loopne
popf
pop
xchg
mov
dec
push
sarb
jbe
andl
mov
mov
sbb
adc
and
test
or
mov
hlt
lods
sahf
fsubrs
cld
or
and
clc
sbb
ljmp
into
add
lock
bound
mov
cs
inc
cmp
push
mov
and
in
call
mov
jmp
aaa
repz
dec
push
repnz
sbb
mov
lock
pop
push
movsb
out
mov
jo
test
cmpb
ja
fists
fsubrl
push
fstps
cmp
shl
aaa
in
mov
cmpb
jle
and
fs
jne
popa
or
mov
add
or
lds
or
daa
jmp
mov
cmp
dec
cmp
aaa
mov
loop
xchg
pop
mov
and
cltd
cwtl
pop
jmp
or
jl
jne
sarl
push
scas
push
test
fdivr
fildl
adc
das
fsubrp
add
sub
fcomps
xorb
test
add
inc
repnz
out
dec
nop
pop
enter
add
sti
lcall
jno
lss
or
pop
add
pushf
mov
sbb
iret
mov
pop
fstpl
movsb
mov
inc
and
jmp
in
mov
add
sbb
or
lds
sub
insl
push
and
and
add
xor
cmp
or
and
lret
xchg
clc
cmpsb
je
or
add
add
pop
inc
nop
xchg
pop
xor
add
sbb
test
test
xor
cmp
negl
sub
jne,pt
arpl
je
add
sbb
loopne
mov
and
add
pop
sub
inc
mov
rclb
xchg
ficoml
push
bound
test
sarb
test
add
inc
dec
aam
rol
xchg
cmp
cwtl
or
cmp
add
imul
cltd
mov
in
fdivp
mov
push
cmp
adc
test
ret
jne
dec
cmpsb
lods
xor
test
daa
fst
fcomps
out
pop
mov
or
pop
fwait
jmp
sbb
adc
add
fstp
push
pop
push
dec
push
loopne
xchg
xchg
sbb
pop
js
add
mov
sub
jb
or
mov
xchg
jno
ror
fwait
and
outsb
out
mov
ret
jp
adc
loop
mov
aaa
test
pop
ret
pop
push
clc
sbb
repz
addl
outsb
xor
call
jp
lods
xor
movsl
cmpsl
mov
fidivrl
add
lcall
or
addr16
test
jg
movsl
loope
cmpsl
jmp
lds
test
fmuls
push
push
out
pop
inc
mov
rorl
inc
inc
dec
push
test
mov
mov
test
nop
inc
lcall
scas
and
inc
jp
sti
or
jne
rorl
and
pop
add
scas
scas
xchg
push
in
fadds
mov
je
shlb
dec
fbld
call
leave
mov
in
or
or
sub
scas
xlat
bound
lock
not
push
jl
je
xchg
cmp
mov
mov
add
or
sub
adc
sub
fwait
sbb
mov
mov
jns
inc
pop
lock
push
addr16
and
mov
cmp
fucomip
fcomi
xor
dec
lock
adc
cmp
fwait
mov
in
jbe
addl
push
push
repz
lds
dec
mov
popa
fbld
jl
cmp
hlt
push
push
xchg
sbb
nop
int3
push
loop
xchg
and
pop
fcoms
enter
lcall
in
push
nop
in
mov
aam
or
adc
clc
test
addb
fwait
and
or
repz
push
jecxz
or
mov
jmp
mov
sub
je
sub
je
scas
ret
add
cmp
cmp
lods
lahf
cs
stc
pusha
mov
mov
jl
sub
ja
jge
sub
lock
add
jg
mov
sbb
add
sti
add
dec
mov
jle
call
cmp
adc
add
jmp
mov
jns
fwait
or
xor
pop
jae
jne
xor
jmp
in
push
push
leave
and
push
pop
push
mov
mov
and
cmpb
sbb
add
mov
add
pop
fmull
cmp
mov
sbb
sub
clc
pop
test
cmp
ficompl
rclb
loopne
sub
ja
pop
jne
out
ds
aam
cmp
push
add
jnp
aaa
ja
popa
or
lods
sbb
call
or
popf
gs
mov
jae
mov
pop
mov
rolb
repz
pop
ret
or
mov
aaa
xor
fidivrs
add
xchg
enter
add
push
fwait
push
test
or
lods
bound
add
cld
fdivs
addb
jmp
pusha
mov
insl
adc
lods
pop
sbb
lods
jp
out
loopne
and
mov
mov
push
mov
sarb
jne
jl
mov
stc
push
imul
mov
es
data16
das
call
or
cmp
and
cld
push
push
add
clc
push
ror
inc
mov
inc
push
or
test
or
out
or
push
cld
hlt
sbb
repnz
sub
xor
je
inc
loope
testl
out
sbb
pop
push
push
add
inc
bound
lret
prefetchw
add
or
inc
add
adc
fildl
test
shrb
addl
add
and
mov
push
les
sarb
nop
ja
sub
inc
scas
or
fsub
fcom
xor
dec
xchg
xchg
jecxz
mov
xor
test
das
cmpb
sub
ret
adc
and
or
xchg
stos
add
or
aad
inc
adc
cs
ja
add
cmp
jg
cmp
clc
fnsave
sbb
inc
jecxz
je
mov
mov
and
inc
add
or
mov
inc
cld
insb
mov
pop
xchg
xchg
decl
push
loope
mov
adc
cmpsl
cli
push
sar
lret
adc
ljmp
test
sub
cwtl
adc
out
andl
inc
or
or
pop
adc
mov
cmp
test
or
xchg
mov
push
ss
popf
or
out
cmp
mov
or
jge
popf
cs
loopne
sub
fmul
xchg
jg
int
test
sub
sub
jo
fcmovb
mov
mov
add
dec
fmuls
push
mov
push
add
js
xchg
les
xor
imul
in
inc
jnp
push
push
jb
cmp
dec
je
jmp
xor
inc
xor
sub
jmp
and
add
mov
imul
test
lcall
repnz
adc
daa
mov
push
mov
call
outsb
adc
mov
dec
xchg
jb
pop
inc
lds
pop
cld
cmpl
movaps
pop
or
cltd
bound
jae
adc
xchg
bound
or
arpl
cmpsl
dec
pop
adc
cwtl
sub
push
loopne
xchg
mov
and
mov
lea
repnz
out
orb
mov
jnp
jae
or
lret
push
push
enter
shrb
aam
xor
lods
mov
outsb
repnz
jmp
sub
lahf
mov
mov
mov
lods
push
push
or
cmp
out
lds
pop
aas
dec
push
aad
cmpsl
andb
pop
push
xor
sub
cld
std
shrb
ret
ljmp
jae
jae
or
fdivrl
push
aam
call
mov
add
mov
test
xor
pushf
jns
adc
push
cmp
push
jp
or
pushf
rcrl
lea
adc
das
xlat
leave
xchg
cmpsb
scas
test
js
incl
dec
push
sbb
xchg
dec
dec
sbb
and
mov
sub
cwtl
sub
jle
cmp
jb
je
inc
xor
out
jns
pop
lds
test
add
adc
or
xchg
addr16
ret
sbb
adc
add
cwtl
cwtl
out
loope
adc
inc
pop
imul
mov
jge
cwtl
and
adc
inc
in
push
daa
push
insb
decl
mov
pop
push
rolb
mov
int3
or
xchg
jbe
add
repnz
mov
aam
sbb
adc
mov
mov
loopne
int3
mov
jl
pavgw
aam
jne
cmp
add
or
call
rolb
loope
jnp
mov
or
test
cmpb
cltd
jae
fs
jae
xchg
adcl
fisubrs
push
and
pop
dec
pop
xor
stc
xor
pop
test
arpl
add
fldt
push
dec
push
movsl
enter
sub
cmp
and
loopne
data16
mov
adc
add
dec
sbb
testl
add
adc
aas
or
jb
mov
sub
and
jns
dec
or
inc
and
bound
outsb
add
add
add
xchg
add
clc
fists
xor
sbb
push
scas
push
mov
cmp
daa
jmp
or
mov
lock
lds
test
hlt
mov
xchg
pop
and
inc
pop
jg
mov
scas
das
adc
int
and
jl
mov
and
or
or
sub
jge
loop
cmp
push
xchg
xchg
jmp
adc
mov
add
xchg
add
add
hlt
jge
jne
lahf
jl
jne
sbb
in
nop
or
push
sub
and
adc
xor
fwait
xchg
jno
loop
aaa
fildll
push
cli
cs
in
dec
cmp
test
push
xchg
jg
pop
jg
xchg
and
decl
add
inc
mov
stos
movl
icebp
iret
es
mov
jge
pop
mov
jns
push
pop
clc
sub
sub
aaa
push
daa
movsb
fcomp
pop
das
pop
and
add
jo
fwait
add
dec
sub
sarb
jae
push
shrb
adc
out
test
rorb
lods
pop
push
iret
xchg
dec
xor
addr16
dec
inc
mov
sub
negb
daa
and
in
xor
pop
jno
and
or
jmp
movl
push
pop
push
adc
test
sbb
mov
mov
pop
xor
sbb
mov
daa
or
inc
inc
jmp
xchg
fwait
lea
xchg
push
fsubrs
cmp
in
and
jge
or
mov
sbb
decb
test
xchg
mov
cmpb
cmp
adc
adc
cmp
aad
les
test
mov
data16
fiaddl
add
push
push
xchg
out
clc
sub
aaa
fadd
in
fiaddl
add
pop
xchg
fmuls
sub
sarb
cli
jbe
lds
sbb
bound
loope
xchg
fmuls
jne
fcmovnb
lock
daa
enter
adc
mov
sbb
xor
adc
inc
inc
loop
in
jne
jb
out
sahf
hlt
or
adc
pop
push
pop
adc
adc
pop
jae
lock
aad
flds
leave
hlt
sub
push
mov
or
or
fidivs
push
mov
vsubsd
pop
sub
jb
inc
mov
inc
sti
stos
adc
in
sbb
lret
jne
or
ss
or
stc
icebp
xlat
cmp
pop
pop
or
into
lock
mov
xchg
das
not
push
fstl
in
or
inc
fidivrs
dec
movsl
add
sbb
xor
dec
data16
enter
gs
adc
xchg
out
lds
call
pop
rolb
xchg
xor
into
decb
xchg
mov
add
push
lcall
cmp
jmp
mov
pushf
mov
mov
mov
and
clc
popa
mov
fcompl
cld
mov
inc
inc
cmp
test
sub
mov
push
push
ja
mov
scas
jae
imul
out
add
or
clc
mov
jmp
sbb
arpl
mov
sbb
adc
xor
arpl
add
cmp
leave
das
loopne
stc
push
and
mov
les
inc
test
cmp
ret
dec
test
sub
lock
data16
sti
pop
add
inc
sub
mov
movsb
inc
call
fcomps
test
mov
push
sbbb
pop
jb
enter
das
mov
movsl
mov
xchg
fwait
pop
es
mov
mov
sub
pop
js
aam
pop
in
fcomp
mov
push
fld
push
imul
dec
repnz
sub
and
int3
mov
or
out
enter
shlb
imul
sbb
add
and
aas
ret
in
daa
add
add
nop
sar
shlb
mov
push
mov
dec
jge
mov
jb
nop
xchg
in
movsb
lock
popf
sbb
add
push
push
repnz
sub
insl
das
fs
xlat
mov
add
fs
das
frstor
add
pop
jo
push
inc
push
fstp
add
cmp
cmp
pop
push
cmp
push
cmp
and
les
or
pop
aad
shlb
je
push
ret
dec
jne
outsb
jl
push
cltd
sub
insl
mov
adc
daa
ret
cli
arpl
sub
out
dec
pop
mov
push
pop
bound
mov
pop
add
ss
mov
adc
subb
cmpsl
fsubs
dec
rcrl
mov
adc
adc
jbe
pusha
mov
add
daa
push
pop
sub
or
clc
inc
mov
in
add
ret
pop
inc
mov
js
cmp
xor
mov
inc
imul
mov
aaa
inc
insb
inc
subl
xchg
jae
cmpb
rol
mov
pop
std
inc
ret
push
mov
or
push
in
ror
in
jne
add
inc
dec
fmull
fndisi(8087
add
roll
jnp
adc
xchg
inc
xchg
push
add
push
in
sarb
xor
pop
dec
aaa
mov
stos
pop
shl
ds
subl
es
jne
add
push
and
enter
push
adc
movsb
pop
dec
dec
fstpl
mov
imul
jbe
scas
cmp
ret
cmp
mov
sbb
lods
out
add
jne
sbb
inc
repz
xchg
mov
xchg
aas
loop
xor
pushf
jmp
push
imul
push
push
and
sub
mov
je
and
loop
adc
or
jg
inc
jb
gs
jo
inc
js
xor
xchg
lock
inc
in
js
adc
pop
dec
ret
xchg
mov
dec
fistpll
pop
testb
dec
mov
sub
mov
cli
mov
sbb
inc
cmp
jne
sbb
dec
iret
sub
jle
sub
mov
mov
out
lods
mov
ror
mov
inc
jmp
and
addl
ja
out
in
mov
in
xchg
add
ljmp
std
jnp
cmp
cwtl
mov
sbb
mov
fidivl
push
mov
inc
or
fs
mov
int3
lea
cwtl
in
sbb
imul
sub
les
in
call
add
rorb
clc
pop
orl
xor
lea
xor
in
fiaddl
jbe
inc
sub
sbb
sbb
fadd
sub
sub
inc
mov
adc
mov
adc
pop
adc
mov
dec
sbb
cmpsb
subb
and
and
pop
cmpsb
cmp
fmuls
mov
sub
adc
cmp
cs
mov
pop
or
ret
sahf
in
sub
sbb
js
les
pop
cld
adc
cmp
je
push
leave
xchg
inc
mov
sub
aas
mov
seta
mov
lea
jb
out
push
mov
jmp
adc
xchg
lret
enter
jns
shl
das
add
aam
orb
pop
lcall
dec
cmp
sete
incl
shrb
push
xor
fmuls
inc
decl
cmpl
pop
pop
jl
inc
shr
leave
lods
cltd
push
int3
or
mov
adcl
inc
cld
jo
clc
incl
scas
add
cmp
stos
dec
adc
cmp
add
fidivrl
xchg
jo
mov
xor
inc
mov
rolb
dec
xchg
insl
aad
or
dec
sti
aaa
push
mov
stc
rcl
or
sbb
and
jl
lcall
fidivl
xchg
jecxz
push
inc
jg
dec
pop
arpl
add
outsl
shl
jb
aaa
add
jns
test
cmp
dec
sub
mov
add
in
mov
pop
mov
push
jne
cmp
pop
adc
xlat
dec
add
sub
push
jge
add
fcmovu
jge
scas
enter
mov
xor
pop
out
ret
sarb
jbe
in
jmp
or
out
in
sub
mov
cld
or
test
pop
add
cwtl
push
clc
inc
or
sti
mov
add
cs
idivl
loopne
fadds
mov
nop
pop
sbb
push
push
fdivp
sahf
divl
jo
push
pop
repz
nop
pop
push
mov
repz
ret
cs
js
test
mov
push
jnp
jge
test
push
push
jl
jle
out
jns
xor
push
int3
cmp
push
xor
cmp
push
mov
push
fnstsw
dec
add
sbb
repz
sbb
rclb
call
adc
fmulp
xchg
or
mov
xor
mov
out
dec
inc
inc
nop
clc
push
sub
hlt
jns
iret
enter
lock
push
insb
dec
gs
call
push
dec
sahf
xchg
iret
loopne
push
fsubr
fdivrs
ja
inc
hlt
aam
out
shrb
int3
dec
fmulp
cmp
pop
inc
enter
iret
dec
ja
push
and
das
push
mov
daa
mov
popf
mov
sub
out
in
hlt
movsb
mov
pop
daa
iret
leave
xor
cmpsb
pushf
cmp
nop
mov
inc
ds
push
and
and
dec
xor
mov
cli
test
mov
lret
cwtl
nop
mov
mov
mov
roll
je
loopne
sub
adc
cmp
adc
add
add
sahf
and
je
mov
les
sbb
jnp
jge
sub
pop
enter
data16
mov
and
xchg
cwtl
nop
nop
xchg
mov
jge
les
fs
jb
out
cmp
incl
mov
sub
in
adc
imul
addb
mov
jl
das
pop
inc
xor
push
mov
and
inc
push
stc
in
js
dec
mov
js
mov
daa
daa
cwtl
xchg
aaa
cmpl
fdivs
add
das
int3
aam
lods
or
mov
pop
not
pop
ret
dec
loopne
roll
leave
or
mov
mov
loop
or
cmpsl
sarb
adc
test
adc
sub
sbb
adc
cmp
loop
jl
push
ret
scas
adc
sub
xor
mov
inc
enter
leave
pushf
imul
inc
cmpsb
loopne
sbb
cmp
in
hlt
inc
mov
xchg
inc
in
and
push
clc
clc
jecxz
sub
clc
clc
lea
jp
in
pop
incl
sbb
adc
mov
std
rclb
leave
clc
xlat
ret
loope
sub
dec
add
leave
sub
adc
inc
movb
shll
jb
lea
shrl
in
add
orb
fistps
mov
enter
leave
pop
pop
add
test
and
mov
out
dec
xlat
adc
pop
out
nop
nop
and
leave
leave
mov
add
push
cld
sub
push
int
sub
sub
mov
mov
xchg
dec
lahf
cmpsl
push
push
push
mov
fdivrl
cmp
mov
fwait
jle
or
mov
test
cwtl
and
dec
xor
leave
test
mov
dec
xor
and
mov
xchg
ror
leave
and
dec
ror
fdivs
dec
in
int3
and
shl
xor
xor
aam
in
xor
fmuls
jecxz
jmp
fdivl
jns
movsb
jb
sub
dec
in
jb
in
call
jns
in
cmp
pop
lock
cltd
movsb
jb
push
in
mov
je
add
and
sbb
mov
push
jns
or
dec
gs
mov
je
fs
jne
das
dec
jne
fxch
das
pop
inc
imul
fs
stc
repnz
outsb
dec
jb
pop
outsl
jb
insl
jo
stc
out
pop
xor
jb
insl
push
je
pop
push
push
dec
cwtl
nop
cmp
add
fsubrs
aas
jb
pop
jbe
aas
inc
jae
pop
inc
jns
rolb
leave
inc
pop
imul
call
jmp
add
jne
push
sbb
and
pop
add
in
inc
fistpll
adc
mov
sbb
and
and
mov
loopne
fsubp
fimull
pavgb
ljmp
mov
stos
adc
xchg
adc
test
in
sahf
out
nop
add
cmp
movntps
jnp
sti
pop
clc
push
fsubl
test
adc
in
mov
pusha
dec
dec
inc
cmp
in
testb
addr16
push
orb
add
sub
fisubs
jmp
jmp
inc
mov
and
es
push
test
or
mov
and
add
test
imul
call
jae
add
shl
dec
in
push
dec
in
mov
or
lret
mov
jne
nop
pop
mov
popa
adc
idivl
adc
loopne,pt
dec
lds
xchg
fs
inc
pop
fs
js
and
adc
mov
jl
outsl
pop
jb
out
es
loopne
loopne
add
jb
sbb
sub
dec
out
popa
scas
inc
nop
adc
dec
insl
jo
adc
ds
ret
push
add
lods
iret
adc
enter
adc
out
mov
jo
int
sub
fimuls
arpl
dec
cmp
mov
xor
dec
mov
in
scas
cmp
adc
test
loope
xchg
pop
jg
fimull
in
in
add
in
and
fnstsw
jae
lret
cmp
cs
cld
shlb
es
or
sbb
in
fcoms
add
push
cmp
mov
inc
push
rcr
lock
seto
aam
shl
enter
arpl
mov
cmp
dec
enter
icebp
adcb
icebp
adcb
inc
aad
hlt
in
add
sbb
cmp
mov
sbb
bound
clc
sub
cmc
and
pop
jo
jecxz
sub
incb
aas
dec
je
sbb
icebp
shll
fs
push
cwtl
insb
xchg
xchg
es
jbe
add
jns
cmp
fnsave
enter
pop
loopne
clc
inc
pop
mov
mov
pop
xchg
jl
fsubrl
dec
enter
dec
repnz
add
sbb
in
mov
xchg
jl
stc
call
pusha
out
adc
mov
push
add
xor
sarl
jae
pop
xchg
loopne
dec
sbb
in
fwait
mov
adc
cli
enter
pop
rorb
inc
xorl
les
fsub
dec
repz
enter
test
add
cmp
cwtl
jg
hlt
jb
nop
rorb
or
add
ficoms
mov
aaa
shlb
rcrb
es
push
orl
cwtl
ret
fimuls
inc
fnstsw
jmp
adc
inc
dec
je
aaa
iret
mov
jb
push
sub
test
and
out
push
pop
pop
and
fisttps
adc
add
roll
rorl
xchg
adcl
dec
inc
pop
roll
jge
pop
nop
sti
cltd
sub
repnz
insb
jnp
add
and
insb
fistps
xchg
dec
jmp
std
mov
shr
jl
adc
cmpsb
fimuls
mov
push
js
in
mov
dec
cld
inc
test
cmp
inc
add
cs
add
data16
andb
enterw
clc
outsl
ucomiss
test
pusha
fs
mov
inc
je
dec
insb
in
ror
jb
xchg
clc
jmp
and
mov
clc
movzwl
lock
or
incb
insb
jl
inc
xor
lea
outsb
imul
call
clc
and
sub
test
aaa
sub
mov
xchg
inc
sub
inc
pop
dec
inc
rorl
pop
sahf
jmp
inc
mov
xlat
sbb
xor
repz
dec
pop
daa
lock
mov
in
fwait
or
pop
test
xor
mov
in
test
push
insl
in
jne
push
cld
xchg
push
pop
sahf
rol
pop
outsl
push
xor
cld
or
mov
aas
jmp
cmp
jne
loopne
sub
add
out
xor
sub
or
mov
imul
scas
adcl
call
inc
sub
sar
or
or
pop
jb
mov
scas
push
push
out
je
ret
jb
xchg
inc
es
jns
clc
fimull
dec
push
add
push
push
or
or
adc
adc
loopne
and
enter
and
pop
xor
loopne
mov
stc
push
push
jno
jecxz
mov
in
inc
jbe
adc
jb
and
xor
out
or
nop
cmpsb
dec
call
imul
mov
sub
pop
aad
mov
jmp
push
fcmovne
cmp
out
ljmp
push
add
xchg
inc
inc
call
decl
cmp
enter
enter
hlt
jmp
or
push
add
cli
and
mov
cmpsb
bnd
add
xor
inc
dec
or
mov
inc
and
enter
jmp
sbb
rolb
mov
shrb
or
pop
outsl
push
lock
cmp
je
pop
jne
push
in
lret
mov
addl
or
or
pop
mov
mov
movsb
daa
xchg
fs
es
insb
jnp
inc
mulb
push
add
inc
dec
add
dec
push
in
push
pop
stc
mov
push
jns
sti
push
testb
pop
xchg
or
sub
jle
je
and
inc
cli
adc
cld
ss
lcall
jmp
inc
lock
inc
or
push
sub
add
add
int3
xchg
pop
nop
pop
call
sbb
movsb
sti
leave
mov
mov
add
jbe
mov
cmp
push
sbb
mov
loopne
cld
clc
xor
or
xchg
fisubrs
cmp
outsl
push
lret
and
xchg
pop
mov
adc
ljmp
adc
jl
adc
sub
xchg
std
mov
sarl
pop
dec
pushf
adc
or
xchg
arpl
pop
ret
jo
cmp
mov
push
fistl
test
rclb
adcb
add
mov
mov
xor
mov
and
xlat
dec
sub
pop
sbb
adc
loopne
nop
arpl
pusha
pop
mov
jl
dec
sti
iret
add
xchg
clc
aas
sbb
mov
cmp
ja
jge
shll
pop
je
sahf
out
mov
mov
inc
call
cmp
loop
jns
idivl
push
mov
les
sbb
sbb
mov
les
cld
and
popf
lock
movswl
ja
adc
mov
xor
fldcw
and
cs
leave
xor
mov
add
pushl
add
sub
pusha
dec
jle
ljmp
dec
in
xchg
in
and
loopne
push
or
mov
pop
in
push
fsubl
jmp
cmp
fmuls
mov
mov
aam
aaa
aam
cwtl
bound
mov
rolb
lcall
cmp
jbe
jne
sti
nop
divb
mov
cltd
jmp
push
sub
je
dec
je
jmp
jle
lock
sbb
mov
xor
test
stos
jo
xor
and
mov
sub
cmpsb
cmp
iret
rcrl
adc
idivb
jbe
inc
xchg
xor
repz
imul
sti
sbb
sbb
or
aaa
cmp
flds
mov
inc
fnsave
mov
xlat
xchg
pushf
je
lods
lods
cmp
sbb
mov
jo
pop
shlb
pop
popa
movsb
and
pusha
inc
out
popf
movsb
mov
test
pushf
cmp
pushf
cwtl
mov
cmp
sbb
xor
stos
xchg
jno
dec
rcll
aaa
nop
je
cmp
dec
mov
fsubrl
sub
inc
inc
test
adc
mov
cmp
mov
pop
movsb
mov
nop
in
outsb
xor
add
icebp
mov
in
dec
mov
xchg
inc
stos
jb
stc
imul
sub
and
mov
inc
push
and
jo
inc
lea
ret
loopne
ds
sub
ljmp
and
loopne
jbe
or
mov
nop
test
inc
test
xchg
add
out
movsb
loope
mov
nop
lret
add
mov
pop
dec
pop
sub
dec
nop
xor
nop
daa
dec
push
push
push
negb
in
or
push
sahf
out
sahf
pop
sbbb
sarl
xor
pop
sub
mov
repnz
incb
jno
mov
ret
loope
ds
daa
fyl2xp1
cwtl
or
aas
mov
or
push
push
xor
push
xor
and
insb
inc
push
inc
or
add
push
mov
stos
push
cmp
in
ret
cmp
jno
in
mov
aaa
loopne
movsbl
test
cmp
fdivs
fcomp
xor
bound
aam
aam
pusha
fs
adc
rcl
insb
mov
stos
iret
jno
sbb
add
sub
jnp
repnz
adc
or
xorb
cmpsl
pause
mov
lcall
xor
aas
mov
pop
aad
repnz
or
push
jae
or
mov
push
daa
rcr
cli
add
notl
push
xor
rcrb
xchg
xchg
mov
or
cwtl
jo
mov
arpl
movsb
inc
ja
mov
adc
shll
cmp
arpl
test
test
adc
rolb
movsb
adc
cmp
cmp
jno
ret
aaa
outsl
aaa
jb
iret
imul
nop
lret
xchg
xor
ds
ret
or
mov
add
or
lahf
or
dec
sahf
mov
push
test
and
rol
sbb
mov
aaa
loopne
test
dec
mov
mov
testl
fwait
or
adc
ret
cli
inc
cmp
mov
jmp
movw
ja
xchg
jg
xor
add
mov
es
outsl
and
or
jb
dec
pop
adc
xlat
mov
jbe
fstpl
fwait
push
xor
and
daa
pop
push
test
in
fistpll
push
push
in
inc
or
sub
adc
push
or
lret
add
cld
outsl
sbb
cmpl
jb
mov
mov
dec
sub
push
inc
enter
push
inc
insl
jo
jns
cmp
jne
pop
int3
popa
rcr
push
insl
popa
bound
das
xor
ficoms
add
inc
outsl
jne
inc
fs
filds
outsb
arpl
sub
fcomps
dec
pusha
xchg
cmpsl
test
rolb
adc
arpl
daa
stc
aas
push
outsb
imul
inc
arpl
sub
mov
iret
jb
sbb
inc
jns
aaa
movsb
insl
pop
jb
cmpl
add
outsb
jo
add
clc
pusha
adc
std
cli
or
out
cmovb
push
test
xlat
in
adc
push
ss
xchg
mov
sti
in
lea
adc
inc
das
cmp
rorl
and
jno
mov
or
sbb
xor
std
jl
cld
stc
loope
pop
sub
pop
ja
lret
sbb
add
int
xchg
lea
add
cmp
sub
mov
jp
adc
cmp
and
in
pop
sbb
sub
inc
cmp
sahf
adc
xor
enter
in
push
pushf
rolb
adc
test
js
das
push
inc
push
push
gs
push
sbb
adc
shrd
cmp
sahf
insb
loope
xor
imul
cmp
daa
mov
or
fnstcw
mov
push
inc
fcomps
pushf
push
dec
fmuls
mov
xchg
lods
xor
hlt
cwtl
cmp
out
test
pushl
out
add
cmp
xchg
pop
shl
xor
push
add
push
xchg
mov
les
mov
pop
push
mov
cmp
jmp
insb
lods
pop
jecxz,pt
xor
icebp
test
push
loop
cmp
jnp
je
outsb
adc
mov
loop
repnz
xchg
popa
mov
pop
dec
mov
add
lea
add
imul
inc
jp
cmpl
adc
add
add
addb
mov
xchg
int
pop
inc
mov
call
mov
add
rolb
outsb
add
mov
push
sti
ss
mov
xor
or
adc
loope
inc
mov
adc
das
sar
push
fs
arpl
outsb
adc
adc
mov
sbb
imul
push
and
cmp
test
ss
movsl
ljmp
pop
loopne
add
dec
add
popf
xor
in
addr16
aaa
adc
pop
enter
es
rcll
mov
sub
add
pop
or
jbe
xchg
push
xor
cmp
cld
fcoms
sub
mov
mov
cmp
push
dec
mov
jno
pop
adc
incb
test
mov
fnstenv
sbb
and
fists
mov
push
push
mov
sbb
js
lock
mov
and
mov
mov
cld
jl
inc
xor
inc
sbb
xchg
ljmp
add
sbbl
push
andl
or
test
mov
add
and
dec
jne
xchg
test
mov
cmp
cmp
push
add
pop
test
stc
xchg
mov
cmp
push
clc
cmpsb
jne
pop
mov
xor
xchg
push
inc
inc
inc
test
shrb
adc
ds
addr16
mov
dec
adc
icebp
clc
mov
jae
jne
pop
mov
dec
mov
xor
adc
adc
nop
xor
out
lret
xorl
adc
inc
mov
xor
mov
push
pop
rolb
test
push
clc
xlat
sbb
jns
fisubrs
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
nopl
mov
dec
jb
push
push
filds
push
add
jge
test
push
add
inc
dec
dec
push
pop
rcrl
dec
add
adc
mov
push
mov
adc
sbb
test
jne
shrb
pop
jmp
cs
dec
xor
cmp
jle
or
xor
testl
sub
aam
ljmp
cmpl
xor
lods
pop
scas
cmpsl
aaa
jp
icebp
ja
sub
add
jmp
pop
or
jo
gs
lods
add
mov
mov
clc
orl
mov
cmpsb
fisttpl
mov
add
lds
or
mov
or
hlt
cmp
je
mov
mov
and
sbb
inc
add
and
fstl
jmp
jle
in
je
jmp
cmp
add
sbb
dec
jne
inc
popa
inc
ss
sub
int
fucomi
mov
push
or
stos
mov
push
dec
inc
push
or
mov
push
in
lea
sbb
mov
cmpl
push
fwait
sub
bndstx
jbe
mov
fiaddl
ss
cmpsl
push
mov
push
cmp
aas
pop
je
addr16
mov
mov
jp
decb
ja
outsl
adc
jg
adc
sbb
xor
rolb
jb
cltd
jo
jle
jae
es
or
movsbl
dec
xor
cmp
jle
add
sub
pop
aaa
int
in
add
fisttpl
decl
adc
mov
mov
cmpb
ja
jb
pop
sahf
out
add
add
call
out
mov
pop
rcll
xor
stos
cmp
push
fs
adc
incl
cmp
pop
dec
inc
xlat
or
xchg
pop
or
mov
inc
into
jmp
dec
or
lods
cmp
lcall
addb
mov
mov
aas
mov
int3
stos
sub
mov
popa
xor
and
mov
jne
aaa
push
or
clc
inc
mov
cmp
or
pop
add
in
outsb
inc
cltd
xlat
andb
out
jmp
adc
jecxz
cld
mov
sbb
pop
mov
and
or
adc
outsl
popa
shl
or
nop
adc
jle
pop
hlt
popf
jle
sbb
fisubrl
sub
or
ss
inc
or
and
adc
lcall
add
xchg
pushl
sahf
jecxz
xchg
ficomps
xchg
xor
xor
mov
mov
xchg
add
mov
add
mov
mov
or
jo
adc
cltd
lret
push
xor
iret
lods
pop
sahf
adc
inc
cmp
sahf
adc
push
push
mov
faddl
push
cmp
cmp
aaa
inc
push
inc
sub
xchg
gs
mov
xchg
icebp
lahf
out
sbb
fwait
aam
xchg
outsl
or
adc
rolb
pop
fildl
call
inc
adc
jbe
cmp
or
cmpsb
repnz
movl
mov
mov
je
or
jge
stos
push
xchg
jnp
xchg
aaa
or
jns
iret
stc
push
sbb
les
fstps
fwait
push
out
mov
clc
fisttpll
inc
jnp
das
sub
cmp
cmp
or
sub
fidivrs
and
inc
ja
mov
scas
in
jmp
pop
jmp
cmp
or
jmp
adc
push
sbb
dec
push
push
pop
sbb
inc
inc
ljmp
loopne
mov
jp
sti
push
clc
push
js
jno
pushl
jge
add
call
mov
loopne
add
adc
sbb
sbb
dec
xchg
fisttpl
add
mov
and
pop
adc
mov
mov
jbe
add
cmp
fs
jbe
fnstcw
inc
xor
dec
inc
jmp
cmp
sbb
nop
aaa
xor
inc
fwait
or
push
call
fsubs
imul
cmp
pushf
sbb
mov
pushf
daa
mov
push
mov
sbb
inc
inc
ja
popf
inc
pop
pop
cs
out
sbb
inc
mov
add
push
inc
insb
imul
add
add
imul
fimuls
je
push
imul
loop
pop
push
gs
inc
insb
popa
mov
jae
add
xchg
or
inc
imul
xchg
add
bound
ja
push
outsl
test
nopl
adc
les
push
dec
outsl
sbb
sub
rcrb
push
mov
insb
jns
mov
jno
xchg
xchg
shll
insb
and
ss
push
mov
out
insl
je
or
jb
or
cmpsl
or
mov
push
dec
imul
daa
sbb
out
les
clc
rcrl
faddl
or
dec
sarb
mov
test
js
add
jecxz
pushf
enter
out
aaa
sbb
dec
dec
jle
hlt
cs
out
fisttpl
fimull
jns
mov
jae
pop
jbe
fnstenv
pop
cmpsb
outsb
pop
inc
jne
pusha
outsl
mov
dec
cs
loope
fadd
adc
inc
jbe
dec
or
push
push
push
dec
cmpsl
fsubs
jbe
push
push
sahf
mov
adc
divl
sbb
pop
sbb
dec
mov
mov
and
jo
inc
inc
jb
dec
dec
lcall
jb
or
sbb
mov
scas
mov
lods
outsb
mov
in
ret
sub
daa
sub
test
or
test
xor
in
pop
in
scas
fsubrl
and
mov
xor
scas
xor
cmp
add
inc
mov
enter
sbb
lods
and
inc
sti
out
mov
inc
cmp
xchg
dec
imul
jl
in
and
je
pushf
push
jb
pushf
stos
add
imul
inc
cs
mov
frstor
fisubrs
mov
ficompl
mov
lret
push
repnz
notb
push
cwtl
nop
jb
or
outsl
adc
sbb
push
mov
jns
adc
ja
and
jg
dec
dec
jl
mov
flds
mov
add
xchg
xor
js
and
and
daa
xchg
out
mov
or
inc
push
scas
mov
pop
push
and
pop
fwait
nop
es
pop
xor
ds
add
and
push
push
mov
push
push
add
push
sbb
cmp
push
add
test
movl
or
inc
test
nop
push
add
ja
or
mull
gs
inc
adc
int3
jne
addl
repnz
ljmp
rcrb
daa
sbb
and
push
push
cmp
fcoms
fcomip
push
inc
test
mov
adc
adc
stos
fucom
pop
xor
cmp
inc
jo
enter
pop
call
xor
inc
loopne
repz
or
sub
pop
push
push
testb
sbb
push
cmp
xorb
push
mov
jbe
pop
sub
enter
scas
pusha
mov
pop
mov
aam
outsl
fcoms
sahf
cmp
pop
pop
pop
pusha
push
adc
mov
pop
pop
xchg
xor
fdiv
mov
sti
stos
fs
xor
aaa
pop
and
pop
add
sub
cmovns
jae
fs
jo
fldl
push
popa
pushl
pushf
jae
push
rclb
sahf
cmpsb
add
scas
cmp
push
inc
jno
outsb
mov
sub
stos
loope
in
push
add
push
adc
xchg
mov
repnz
pop
mov
aas
sarl
cmovs
out
fucom
loope
inc
and
push
mov
fdivrs
int
jge
cld
pop
pop
addr16
pop
dec
enter
mov
ss
bound
arpl
push
loopne
clc
sahf
pcmpgtb
movl
or
scas
lea
ljmp
inc
push
or
push
lods
nop
jns
mov
pop
sub
push
xor
cmp
daa
xchg
sub
push
sbb
dec
enter
inc
insl
push
pushf
ss
xor
pop
lods
outsb
and
imul
in
push
sub
cwtl
push
jl
pushf
pop
sub
je
pop
jnp
testl
insb
sbb
mov
call
je
adc
and
sub
incl
push
add
sub
ds
push
pop
aas
jo
mov
push
aam
pop
je
clc
push
pop
push
jnp
in
imul
or
rorl
ror
fbstp
cmp
push
or
xchg
push
inc
mov
out
fdivr
orl
in
xor
or
xor
xchg
pop
bound
cld
dec
mov
out
cltd
sbb
das
dec
and
adc
sub
jbe
mov
push
repnz
js
mov
xlat
pushf
push
sub
testl
les
out
mov
cmp
cld
jns
andps
repz
movsb
adc
or
sbb
adcl
enter
or
sbbl
sub
sbb
fs
in
out
and
push
sahf
out
in
add
push
shl
push
push
arpl
sahf
out
jg
fwait
test
icebp
lds
inc
or
xchg
sbb
inc
push
fwait
les
inc
pop
loopne
out
jo
out
mov
jns
int
mov
adc
sub
push
fisttps
nop
cmp
daa
add
jne
or
dec
inc
cltd
push
rolb
adc
cmp
in
add
mov
jp
pop
jp
test
das
sub
cld
and
jbe
outsl
push
ss
dec
ss
sbbl
les
or
rcrb
push
add
sub
loop
call
jns
scas
mov
pop
inc
js
fisubrl
loopne
call
imul
sbb
xor
xchg
mov
push
hlt
or
push
addb
push
mov
testl
test
testl
dec
or
jmp
rcll
stos
mov
rorb
mov
xchg
pop
stos
loopne
fcom
sbb
adc
inc
aam
lret
and
aam
int3
inc
or
push
pop
cmp
js
lcall
pop
inc
int
dec
addb
mov
lcall
xor
jno
inc
xor
cmpsb
and
xor
jnp
xor
jb
aam
xor
leave
xchg
addr16
inc
mov
and
dec
mov
mov
mov
imul
push
cmp
fs
jmp
ja
xor
les
cli
stc
clc
push
push
push
push
push
push
jns
sti
bound
fdivrs
repz
repz
out
ds
fdiv
mov
sbb
push
sbb
or
dec
sbb
and
jb
icebp
jne
sub
hlt
cwtl
lods
xchg
pop
imul
pop
add
cmc
ljmp
cmpsl
mov
fisubs
movsb
adc
mov
imul
cwtl
enter
lods
jno
out
rolb
adc
imul
jl
repnz
xor
js
pop
push
pusha
push
push
mov
push
jb
cmpb
inc
inc
mov
push
jl
shl
enter
ljmp
push
push
je
sub
or
add
in
and
and
cs
cmp
jl
push
les
lds
enter
enter
shrl
sahf
lods
lds
mov
pop
mov
mov
test
stos
or
add
jbe
pop
jne
gs
jb
rcrb
pop
and
xchg
sbb
push
push
pop
lock
fs
repnz
sbb
dec
jb
inc
pop
lcall
test
dec
outsb
dec
inc
dec
dec
sbb
jl
add
or
xor
jbe
fdivs
mov
dec
fimuls
adc
xchg
push
mov
or
int
inc
mov
xor
movsb
push
push
sub
mov
dec
pop
push
xorl
jg
inc
fimull
cmpl
jne
push
outsb
mov
add
je
nop
adc
cmpsl
jle
aaa
shlb
adc
xor
mov
addr16
push
jne
cmp
pop
aaa
aas
and
mov
or
dec
xchg
nop
cs
aaa
mov
icebp
ja
lock
add
xor
push
mov
dec
loopne
dec
pop
dec
cmp
xlat
bound
movsb
cmovns
inc
je
cmp
or
in
and
jmp
adc
vunpcklps
pop
adc
pop
or
daa
xor
ret
sub
inc
sub
pop
pop
push
sub
sub
fisttpl
stos
dec
in
or
divl
jmp
sbb
adc
movsl
xchg
mov
cmp
fistpll
stc
mov
stos
add
add
enter
sbb
and
inc
add
jo
sbb
add
ret
or
xlat
pop
jl
add
mov
ret
inc
loop
lock
ja
mov
subps
and
cmp
pop
roll
popf
mov
fistpl
sar
clc
mov
ljmp
and
pop
xlat
rcl
push
jns
and
pop
sbb
lcall
mov
and
mov
pop
movsl
add
push
inc
or
mov
cld
dec
jne
pop
add
push
and
hlt
or
or
sbb
cld
test
into
pusha
lds
enter
rcrb
fstl
test
lea
push
mov
adc
jno
pop
lea
in
add
cmp
fidivs
or
cmp
jb
xchg
popf
or
add
in
fmuls
cvttps2pi
inc
cmp
cmp
dec
and
sahf
outsb
xlat
sub
sub
add
mov
loope
push
nop
add
or
or
add
pop
imul
imul
imul
add
or
je
cmp
imul
sbb
inc
push
pop
stos
mov
sbb
imul
cmp
sub
mov
inc
push
mov
mov
xchg
cmpsl
clc
push
lcall
test
and
sarb
test
cmp
pushf
or
fcmovbe
cmp
inc
adc
test
negl
inc
stos
pop
xor
stc
filds
in
jl
inc
xor
out
rcrl
jne
mov
imul
push
mov
push
mov
sbbb
push
rorl
inc
rcr
nop
jp
mov
mov
dec
cmpb
dec
popf
movsb
fcmovne
shr
inc
xchg
dec
in
push
dec
mov
add
clc
pop
dec
cltd
sahf
aad
pop
push
add
inc
hlt
in
cmp
mov
sub
or
xchg
pop
cwtl
inc
lahf
call
cs
movsl
jl
adc
jmp
or
cld
cwtl
add
push
sbb
or
cmp
xor
pop
push
adc
jl
inc
push
call
pop
xor
xor
jbe
xorb
inc
pop
mov
lock
stos
es
cmp
push
jge
jecxz
xor
cmpsb
jecxz
decl
jp
mov
jne
add
jle
pop
jno
push
add
mov
sub
movsb
add
sbbl
aaa
sub
lcall
jge
es
pop
es
pushf
sub
jge
and
int
shlb
mov
pop
mov
mov
xor
adc
dec
movb
cmpsb
add
repz
xchg
mov
mov
scas
mov
xchg
mov
xchg
and
sbb
lahf
cli
test
pop
sbb
jnp
leave
add
cltd
add
pop
andb
or
jo
or
rcr
adc
mov
ffree
scas
enter
mov
pop
rolb
mov
sub
bound
add
or
das
movsb
ljmp
in
inc
mov
pop
cs
mov
inc
lahf
dec
xchg
adc
or
or
push
sub
push
hlt
gs
mov
orb
fisubl
fdivrp
mov
xor
jae
enter
lahf
mov
add
xlat
xchg
inc
mov
or
jp
dec
rclb
ja
roll
pop
inc
jmp
dec
sbb
mov
or
mov
jbe
sub
cli
inc
lods
inc
mov
pop
add
pop
xor
es
out
pop
jns
in
inc
jmp
jmp
cs
sbb
pusha
push
mov
inc
out
in
jl
add
and
push
add
nop
xchg
or
adc
xor
nop
pop
sbb
or
cs
inc
push
aas
mov
jle
cld
mov
inc
push
lds
lock
test
inc
mov
adc
adc
popa
add
or
add
push
jle
je
mov
lcall
or
or
dec
aad
mov
gs
das
mov
daa
test
subl
hlt
pop
xchg
mov
outsl
lds
cmp
mov
cmp
or
popa
and
aad
test
jne
inc
mov
inc
sub
sti
mov
arpl
js
js
popa
jge
mov
in
xor
xor
lea
lods
xor
pop
add
cs
dec
cld
mov
jmp
ret
sub
push
and
mov
add
sbbl
mov
add
sbb
and
sbb
int3
xchg
push
jp
or
sub
push
mov
outsl
and
add
int3
pusha
fcoml
loopne
xchg
jb
lods
mov
mov
or
cmp
and
ss
cmp
and
pusha
sbb
lock
les
faddl
enter
call
aad
ds
pushf
xchg
mov
jbe
xlat
adc
inc
ss
push
push
or
jg
or
push
or
aad
lods
push
cmp
pop
jo
dec
push
xor
fmul
dec
mov
mov
inc
mov
je
sbb
mov
jg
add
loope
xchg
pop
inc
pop
mov
aas
or
pusha
cmp
add
test
mov
sbb
xor
rcrl
cltd
movsl
xchg
arpl
cmp
add
cmp
xchg
out
jo
int3
adc
pop
adcb
cld
push
xor
cmp
and
mov
mov
or
test
jnp
adc
sub
xchg
idiv
rcrb
daa
aas
sbb
cmp
sahf
je
mov
jo
je
mov
testl
gs
nop
clc
cmp
adcl
adc
add
fsubr
or
push
and
test
mov
jo
rclb
outsb
mov
and
aam
dec
add
cmp
mov
movsb
jnp
push
call
push
mov
cltd
movsb
or
sbb
xor
fdivrl
stos
das
into
mov
js
or
aas
leave
cmp
call
not
rolb
jge
add
inc
je
sqrtps
xor
jg
jg
jae
loop
inc
adc
cmp
incl
adc
push
int3
or
leave
gs
mov
aam
xchg
or
cmp
test
or
pop
push
add
xor
insb
adc
and
cld
sub
push
pop
pop
cmp
stos
or
sub
inc
sbb
shl
loop
adc
jbe
sbb
or
add
mov
adc
inc
icebp
push
ja
push
xchg
mov
dec
aam
lea
pop
mov
mov
jae
push
nop
jb
fcomi
xchg
movsb
pop
pop
leave
loope
das
dec
movsb
imul
or
int
sbb
inc
sahf
add
and
push
les
lret
adc
add
mov
add
incl
lret
aad
loope
lock
sub
add
dec
or
test
cmp
jne
sbb
leave
roll
std
jle
dec
jno
or
push
push
or
inc
sbb
pop
inc
or
hlt
jecxz
clc
outsl
call
je
adc
xlat
call
and
jp
push
int3
jmp
mov
xchg
es
sahf
popf
inc
add
cmp
push
mov
lock
xchg
push
add
shrb
lret
lods
push
xchg
inc
aad
and
xchg
out
rcrl
jbe
dec
jbe
xor
jp
dec
pop
clc
shl
popa
xchg
pop
aas
notl
dec
enter
mov
push
jns
push
jle
xor
sbb
or
test
addb
add
stc
fbstp
dec
dec
mov
sub
jg
dec
mov
adc
popa
cmp
inc
repnz
inc
clc
js
pop
xchg
push
sbb
fiadds
imul
sbb
test
xchg
sbb
add
loopne
sarl
cmpl
js
dec
fwait
je
negl
xchg
fcomip
and
or
cmpb
sub
cmp
inc
jne
fucomp
push
dec
add
pop
scas
in
push
add
or
inc
adc
xchg
cmp
pop
rolb
add
ret
sub
aaa
or
add
mov
jbe
dec
shlb
cmpsl
sub
push
fdivs
mov
pop
clc
and
cmp
test
adc
call
add
mov
sub
mov
and
cli
pushl
pop
pop
sar
mov
shl
sbb
jg
sub
shl
cmp
je
mov
lcall
mov
cmp
test
es
push
mov
mov
into
out
orb
mov
nop
mov
loop
mov
jae
cli
or
je
hlt
fistl
inc
stos
adc
btr
cmp
jl
shlb
inc
adc
jmp
neg
dec
mov
dec
inc
cli
notb
add
int3
sub
cmp
xchg
test
je
sbb
sbbb
inc
cli
pop
ja
and
bt
jb
ja
mov
movsb
inc
mov
pop
and
push
inc
cmp
jne
inc
decl
jne
les
xchg
dec
sbb
and
jo
add
ret
sbb
pusha
out
mov
push
push
sbb
mov
rorb
pop
insl
xor
icebp
in
push
inc
outsb
cmpsl
lock
test
add
test
add
loop
popa
ret
rolb
cmp
push
les
fcompl
outsb
imul
pusha
mov
aad
sub
or
sbb
in
es
mov
sbb
sub
push
popa
in
sbb
or
and
cmpsb
pushl
js
push
in
jne
out
or
jns
pop
mov
add
pop
loopne
and
sub
popf
push
xor
pop
add
or
and
xchg
adc
xchg
push
lcall
popf
mov
stos
xchg
dec
adc
pop
inc
pop
icebp
popl
adc
sbb
jne
popa
mov
in
inc
es
inc
sbb
je
gs
push
loopne
test
jmp
push
push
adc
ret
mov
data16
lds
pop
fxch
mov
lahf
clc
cltd
push
xchg
mov
or
mov
add
mov
leave
push
inc
movl
adc
mov
mov
add
and
push
xor
add
pop
cmpl
mov
mov
xchg
jle
cli
jne
pop
scas
add
jp
push
aad
or
movb
mov
dec
loope
mov
imul
dec
in
or
xor
lock
cmp
dec
or
mov
adc
add
add
shl
or
add
in
cmp
and
in
adc
out
test
pop
and
ds
movsl
aaa
and
je
gs
jne
add
into
dec
sbb
dec
add
outsb
repz
or
dec
mov
sbb
pop
add
xchg
cmp
dec
adc
das
mov
out
mov
shll
and
add
cmp
mov
inc
in
mov
lea
sub
shl
dec
inc
push
inc
not
or
xchg
pop
ret
jg
fwait
cmp
xchg
xor
movsb
repnz
and
in
ja
pandn
mov
lret
and
pop
shr
sub
orl
mov
and
lahf
jns
and
fistps
xor
sub
hlt
jo
popf
xor
andl
add
dec
inc
sub
dec
or
fdivs
inc
cmp
jnp
call
sqrtps
fsubl
mov
cmp
sbb
fs
fmuls
ret
sbb
lahf
adc
fucom
xchg
xor
pop
loopne
mov
clc
repnz
mov
filds
in
pop
pop
enter
clc
inc
or
pop
and
repz
loopne
dec
je
pop
add
mov
clc
pop
gs
add
or
and
xor
adc
cmc
push
adc
cmpsb
sub
cmp
jne,pt
shrb
test
mov
ljmp
movsb
and
xchg
movsl
outsw
fstpt
mov
nop
sub
sub
cmp
testb
aaa
inc
call
mov
push
mov
ja
and
in
fs
push
loope
adc
push
sbb
inc
dec
jne
add
cmp
out
pop
inc
hlt
arpl
or
pop
insl
adcb
cmp
xchg
cld
leave
push
fdivl
mov
mov
adc
sti
scas
into
or
aaa
sbb
call
or
scas
mov
pop
and
xlat
call
pop
push
mov
in
push
push
shrl
fnstenv
xchg
mov
sysret
push
mov
jmp
sub
jb
dec
je
jmp
jb
pop
ret
add
cmp
push
imul
fadds
aad
pop
test
jp
jo
dec
pusha
mov
psubusb
bound
lcall
xchg
fistpll
mov
xchg
dec
clc
icebp
lock
testl
push
js
or
cmpsl
rcrb
xor
loopne
popa
push
sub
rcl
and
popa
add
addb
adc
sub
push
lret
xor
cld
fdiv
pop
ficompl
mov
add
pop
pop
adc
add
loopne
js
pop
inc
pop
test
inc
push
dec
dec
xchg
rorl
adc
xchg
jo
adc
mov
daa
add
dec
clc
rcrl
xchg
repz
and
rcrb
js
mov
insl
sbb
jl
add
adc
in
sarb
add
lret
sbb
or
and
mov
sbb
mov
in
popa
dec
outsb
leave
jecxz
addr16
mov
jo
or
xor
dec
cmp
cmp
xchg
lock
lock
pop
in
pop
cmp
clc
push
in
pop
xorl
sarl
or
push
and
mov
in
in
pop
fdivl
aas
dec
rorb
test
and
push
mov
inc
iret
xchg
ret
lea
dec
pop
jp
mov
lock
xor
cmpb
cmpsl
mov
fwait
cld
adc
push
xchg
stos
and
aad
xchg
sub
push
sbb
clc
and
cmp
sub
adc
lock
inc
or
fnsetpm(287
or
stos
outsl
xchg
mov
mov
sbb
or
int
or
mov
add
mov
loopne
add
push
popf
stos
popa
ret
adc
sbb
data16
les
and
dec
xor
dec
xchg
or
lea
mov
push
mov
push
push
inc
fs
push
lret
push
sbb
and
leave
insl
in
fwait
pop
call
stos
lcall
outsb
mov
lds
pop
sbb
ret
xchg
fs
cmc
pop
and
mov
loopne
add
jno
lahf
xchg
loopne
dec
jno
or
push
lret
rcll
clc
inc
and
stos
and
adc
dec
cld
xor
cmpsb
mov
clc
fcoml
leave
mov
add
jo
aas
repnz
pop
arpl
movsl
push
jp
mov
and
add
sub
pop
clc
dec
cmp
mov
cltd
mulb
xchg
cmp
pop
mov
test
xadd
sub
arpl
push
mov
lods
jecxz
add
jb
pop
adc
push
push
rorl
cli
out
cmp
dec
mov
or
pop
mov
mov
push
or
movups
xchg
cs
lret
sub
pop
cmp
in
xlat
aam
aaa
rcrb
and
out
mov
loopne
push
lahf
inc
adcb
jge
rolb
nop
fs
sub
jmp
lcall
sub
lea
scas
sti
test
push
push
xchg
or
out
pop
and
test
jns
test
xlat
adc
push
out
pop
call
gs
dec
push
jns
imul
mov
bound
dec
push
add
pop
gs
and
push
pusha
in
push
sbbl
sahf
les
lock
lds
sbb
jns
clc
dec
clc
sub
inc
adc
jp
mov
add
push
mov
daa
loop
push
faddp
cli
repnz
sub
hlt
scas
pop
data16
mov
das
push
xor
cmp
js
adcw
scas
leave
out
imul
inc
push
add
pushf
shlb
adc
mov
aaa
addl
sti
movsb
outsb
adc
jge
into
inc
and
sbb
mov
push
addr16
scas
push
in
addr16
cwtl
push
add
std
cmpsl
xor
sbb
addr16
dec
inc
push
sbb
cmp
fimuls
mov
mov
lret
adc
enter
std
mov
or
add
int
in
repnz
sbb
sub
leave
dec
lcall
lcall
jecxz
add
insl
dec
int3
push
loopne
pop
inc
push
inc
enter
push
lds
iret
testb
cmp
inc
enter
mov
cmp
jne
testb
orb
sbb
rcrb
mov
movl
sub
lcall
faddl
adc
xchg
scas
inc
or
adc
sub
inc
test
cs
cmp
adc
mov
adcb
xor
push
add
pop
sub
das
cmp
sbb
sbb
sub
jb
jmp
dec
mov
out
pop
push
aaa
cwtl
into
pop
mov
mov
bound
in
and
sub
fcom
pop
ror
and
and
sub
movsl
cmp
sbb
insb
xchg
fildl
mov
dec
adc
movsl
xor
roll
push
subb
jbe
xchg
scas
pop
sub
xchg
adc
test
stos
test
adc
inc
adc
shrb
inc
adc
or
insl
lea
fstl
or
cmp
inc
pop
lock
inc
pop
cld
cli
push
lds
dec
sbb
mov
xchg
cs
add
mov
loope
cmp
adc
cmp
ds
cltd
testb
pop
sub
xor
je
or
div
jg
mov
jmp
mov
ret
pop
adc
in
pusha
xchg
lea
in
rorl
inc
sbb
adc
or
inc
add
add
outsw
pop
mov
mov
mov
jle
aam
adc
cmp
sbb
sub
adc
aas
fimull
add
push
mov
repnz
cmpsb
pop
dec
faddp
add
mov
or
sbb
les
rcll
cmpps
push
imull
fs
pusha
leave
mov
test
ss
and
sar
add
add
push
adc
inc
sbb
jg
lock
testl
lea
push
seto
ret
jns
push
ljmp
cmp
loope
jl
rep
lcall
mov
sarl
add
jl
xorl
loopne
add
inc
hlt
shr
out
mov
push
mov
insb
or
dec
in
adc
dec
jg
xchg
test
pop
jl
and
mov
lahf
xchg
cmp
jne
mov
or
or
mov
es
inc
dec
inc
jge
sbb
jle
xor
lret
add
ficompl
xor
mov
pusha
hlt
jl
andl
adc
inc
jl
lea
sbb
dec
adcl
dec
imul
nop
xor
lcall
loope
jb
inc
shll
insl
pop
sub
clc
lret
or
call
js
xchg
inc
push
sbb
add
jle
push
jo
addb
dec
out
call
ss
mov
pop
push
mov
jne
or
fmull
fidivrl
mov
call
ja
adc
outsl
inc
ja
fldl
and
insl
ret
jno
xchg
iret
jmp
dec
sub
fwait
ljmp
into
mov
mov
pusha
xchg
mov
pop
movsb
cmpl
sub
or
pop
jmp
jl
and
ret
or
and
pop
mov
pop
lea
jne
shl
cmpsl
out
cmpsl
icebp
cmp
orb
pop
lea
mov
mov
mov
imul
xchg
sub
fwait
mov
or
scas
orb
call
xor
sbb
add
adc
imul
cwtl
mov
iret
xor
inc
or
bound
jle
mov
out
and
inc
dec
aas
clc
jecxz
mov
stos
push
lret
xor
loope
mov
cwtl
push
pusha
and
xlat
sub
out
inc
jb
ret
xlat
xchg
das
test
cmp
pop
cs
fsubrs
add
sub
inc
dec
pop
jbe
rcrl
sbb
popf
sbb
xor
push
adcb
pop
cltd
adc
popa
rclb
or
icebp
or
repz
pusha
or
add
add
jbe
or
jecxz
push
xchg
rcrb
add
call
push
jb
xor
cmp
add
jbe
inc
cmpsb
jmp
add
testb
vminsd
lret
stc
popa
fs
push
pop
sbb
mov
mov
mov
xchg
jge
rolb
ret
inc
push
add
sub
jb
add
and
dec
rcrl
adc
sbb
fldenv
sub
out
mov
inc
das
and
clc
bound
sub
imul
ja
cli
orl
pop
or
adc
orb
cmp
popa
push
cmp
enter
out
stos
aad
pusha
dec
mov
in
sub
and
jg
cmovo
or
fcomps
test
outsb
mov
data16
outsb
and
fisubl
popf
es
add
xchg
sbbl
push
push
test
lock
mov
nop
icebp
arpl
add
lods
test
push
movq
and
shll
xchg
pop
cmpsl
insb
sbb
dec
cmp
adc
jo
pop
inc
jecxz
jmp
das
fs
stos
sarl
jge
fs
push
imul
cs
in
aam
mov
fs
faddl
rorb
or
stc
ss
or
leave
outsb
mov
adc
dec
or
aam
aam
jnp
push
fwait
les
int3
and
cmpl
icebp
or
stos
shll
sbb
adc
add
jg
outsl
mov
dec
or
adc
add
sub
inc
outsb
push
inc
xor
xchg
ret
pop
mov
dec
mov
jno
sbb
imul
test
inc
sub
mov
add
addr16
mov
or
lock
sbb
mov
add
sbb
add
cmpsl
push
jo
pop
call
pop
sub
rcrb
addr16
fbld
sbb
lods
dec
or
mov
sbb
pop
pop
out
scas
and
or
or
data16
sub
ja
mov
and
aam
xchg
lcall
pop
add
loope
cmp
or
testl
sbb
sti
je
push
aaa
icebp
xchg
jbe
rcrb
mov
inc
cli
pusha
enter
fcmove
int3
mov
daa
or
js
shlb
mov
xchg
xor
lahf
inc
or
ljmp
insb
cmp
out
and
push
add
adc
cmp
jle
or
pusha
and
es
test
test
andb
shlb
insb
push
xchg
orb
push
jl
mov
cmc
or
add
xor
out
jns
sub
inc
mov
in
push
rclb
inc
push
inc
and
gs
dec
add
push
push
xchg
andl
adc
in
js
pop
shlb
xchg
push
adc
dec
clc
js
addr16
inc
mov
shll
dec
xor
scas
or
ja
lds
push
mov
rcr
movb
mov
dec
xor
scas
pusha
sbb
inc
add
or
lods
rcr
daa
das
sub
push
or
add
sbb
aam
idivl
lods
sbb
sbb
add
add
sub
adc
sar
shrl
push
push
jb
jo
imul
inc
jns
test
imul
mov
and
add
jmp
scas
ret
cmpsl
lods
or
adc
push
push
les
pop
or
or
inc
lock
imul
push
or
movsb
mov
fidivrs
mov
jne,pn
mov
mov
or
out
mov
lea
sub
push
inc
sbb
nop
mov
and
adc
lret
pop
test
rcrb
pop
test
inc
and
xchg
inc
and
test
add
rolb
pop
push
mov
int3
sub
pop
popf
sub
fisubs
mov
xchg
or
fisttpl
pusha
fisttps
xor
cmp
rclb
lds
pop
dec
add
cmp
scas
rolb
mov
icebp
aaa
inc
xchg
js
bound
push
jge
orl
xor
mull
mov
js
in
jl
ds
push
add
push
add
pop
add
pcmpgtd
and
push
rorl
stc
cs
and
jl
mov
mov
outsl
pop
icebp
push
push
cld
enter
xchg
pop
mov
or
leave
clc
outsl
mov
dec
add
xchg
jp
fs
clc
xor
jbe
jae
pop
rcrb
dec
aaa
cmp
sbb
xchg
jle
inc
push
es
imul
adc
cmpl
xchg
mov
in
popa
in
mov
adc
pop
ret
add
rcll
push
dec
insl
pop
pop
fwait
cli
xor
jmp
aaa
nop
pop
inc
cmp
jl
xchg
adcl
in
jle
add
jno
incb
jno
jmp
addr16
cmp
dec
fld
jg,pt
push
inc
and
jg
add
jl
sub
adc
push
lret
cmp
push
pop
xchg
icebp
adc
fs
sbbb
xor
xchg
lock
or
push
fcomps
imul
adc
adc
xor
fisubs
cmpb
xchg
adcb
add
dec
je
dec
xchg
add
push
mov
add
mov
scas
add
pop
shl
pusha
shrb
pop
jo
cmpsb
xchg
mov
add
xor
imul
addb
sbb
sbb
pop
add
fmuls
ja
mov
data16
sub
js
shlb
es
mov
push
jl
adc
test
negl
push
dec
adc
xchg
cmp
dec
loopne
lret
push
jo
push
inc
adc
push
lock
or
inc
adc
push
bound
pop
sbb
mov
add
leave
test
adc
ds
fnstcw
sahf
dec
aad
ffreep
push
js
adc
pusha
sub
shlb
jne
testb
add
dec
hlt
aaa
jne
inc
ss
nop
inc
pop
js
add
dec
sub
xor
xor
dec
adc
addr16
push
sub
inc
lret
rorb
mov
fcmovbe
ljmp
adc
mov
imul
and
pop
ss
cmp
les
insb
fiaddl
mov
cmp
xchg
add
add
insb
and
cwtl
cmp
enter
cmp
jne
shl
jo
push
or
jne
add
out
add
and
rcrl
loopne
pop
rolb
and
inc
dec
add
mov
test
test
jl
push
test
negb
orb
mov
pushf
in
sbb
testb
and
sbb
clc
arpl
mov
or
xor
and
sub
addr16
es
leave
xor
push
sbb
call
pop
les
nop
cmp
popf
test
test
jo
nop
clc
outsl
jne
add
in
mov
dec
adc
inc
add
je
cmp
cmp
es
dec
jne
and
call
xor
adc
cltd
hlt
clc
ret
fwait
add
xor
xlat
rcrb
or
xor
mov
das
sbb
pushw
push
dec
sub
pop
bound
cmp
xor
loopne
nop
call
push
dec
push
jne
push
je
jne
sub
popa
mov
add
je
add
mov
xor
cmp
sub
ret
ja
cli
xchg
jge
push
jecxz
dec
inc
dec
out
jo
inc
xor
mov
mov
xorb
or
out
xor
sbb
fld
fsts
lret
dec
push
add
dec
add
dec
dec
cld
fsubs
popf
or
jne
pop
addr16
push
jge
dec
xchg
inc
adc
xlat
addr16
adc
lods
xor
into
test
or
mov
jmp
xchg
xchg
pop
ret
and
cmp
mov
push
mov
xchg
loop
cmpb
add
mov
mov
in
jne
and
jmp
lods
int3
insl
sti
adc
xor
jae
cmpl
nop
and
pop
mov
cltd
ss
in
cmp
and
jnp
xchg
cwtl
xchg
insb
mov
scas
stos
and
and
dec
cmpsl
daa
push
pop
sbb
cmp
adc
and
and
adc
mov
ds
sbb
fcomi
in
stc
push
pop
shll
je
mov
inc
push
dec
mov
xchg
push
mov
xor
pop
push
pop
fs
cmp
cmpsb
cmpsl
pop
es
loopne
movsl
mov
jge
pusha
cltd
add
inc
sbb
or
fs
lods
adc
xor
not
and
aaa
or
fdivr
int3
ret
dec
xchg
test
or
lock
add
add
sbb
ret
mov
cwtl
sbb
push
outsw
cmp
js
xchg
or
pop
test
pop
push
js
sbb
popf
mov
and
mov
inc
cld
sub
or
int3
cmp
fcoms
or
fcmovb
rcrb
lcall
push
int
jmp
jo
imul
cmc
mov
dec
jno
add
inc
push
push
das
iret
outsb
aaa
pop
lds
mov
dec
sbb
adc
insb
add
or
pop
pop
js
inc
or
test
pop
pop
xchg
lods
lea
sbb
mov
xor
addr16
adc
adc
movsl
add
in
inc
fsub
sub
imul
sbb
je
in
dec
add
pop
or
jne
in
push
test
inc
pop
jg
xor
subl
sub
adc
dec
cs
add
xchg
ficoml
nop/reserved
xor
inc
cmp
fmuls
les
jno
push
lock
leave
lea
push
jno
out
xlat
and
lods
and
pop
inc
push
adc
imul
adc
fdivrs
rcrb
cltd
lds
pop
push
negb
je
adc
std
sbb
add
das
jns
pop
ss
shrb
push
pushl
inc
xchg
pop
push
mov
data16
jne
fsubl
pop
popf
jne
jp
add
andl
fmuls
jge
jbe
sbb
push
out
in
adc
fwait
add
mov
adc
fcoml
std
push
xor
fisttps
dec
loope
lock
stc
fnsave
in
inc
adc
xor
imul
mov
aaa
inc
mov
mov
jecxz
sbb
push
inc
test
setp
sbbl
sub
fsub
fcomps
and
dec
shl
xchg
dec
adc
fwait
mov
pop
fst
inc
shlb
outsl
or
dec
xchg
xchg
jl
xchg
cmp
mov
and
or
fimull
push
mov
mov
out
or
mov
js
ds
pop
cmp
sbb
sub
hlt
and
ret
lcall
sub
cmp
fists
mov
and
jge
popa
sub
inc
mov
sarb
mov
sbb
push
sub
xchg
in
push
add
dec
dec
pop
and
sub
rcll
sbb
mov
push
xchg
or
fildll
out
je
ljmp
nop
xchg
mov
jns
add
add
sbb
add
xor
enter
or
add
shrb
sbb
sti
rorb
sub
das
lahf
add
and
adc
jbe
xchg
in
fstpl
fldl
call
repz
add
jl
fisubs
inc
jne
jnp
sbb
jg
add
jns
lea
ror
ljmp
addb
add
jo
jbe
movsl
dec
mov
sub
lods
xchg
push
or
das
sbb
cmp
cmp
sub
cmp
xor
popf
and
stos
and
notl
inc
cmp
xchg
sub
push
shrb
ss
lock
clc
lahf
movsbl
mov
push
mov
xchg
push
inc
adc
mov
cmp
mov
mov
ret
movhps
and
cmpsl
jno
sbb
loope
inc
push
mov
add
and
cmp
jne
mov
and
testb
mov
sbb
jno
sbb
xlat
fsubl
repnz
out
pusha
leave
adc
dec
xchg
xchg
and
fistl
inc
arpl
iret
sub
lahf
lret
mov
mov
or
inc
xchg
fldt
dec
std
mov
or
xlat
fldl
aad
lret
mov
add
inc
out
jg
dec
pusha
and
sub
imul
mov
hlt
inc
xor
sarb
ljmp
std
ds
and
cmpb
ljmp
xor
xor
jp
in
inc
imul
and
xchg
std
jne
inc
xchg
cmpb
pop
rorl
mov
repz
fsubs
adc
dec
cmp
sbb
sbbb
lock
xchg
jmp
rcl
adc
popa
adc
pusha
mov
add
sbb
xor
sbb
adc
lret
push
jb
pop
dec
xor
jo
out
js
push
fstpt
dec
adcl
icebp
xor
pop
data16
or
jno
inc
rcrl
call
adc
gs
psllw
add
jne
pushf
fmuls
xchg
in
in
mov
mov
cmp
fnsave
pop
lret
push
stc
movsb
push
pop
in
psubsb
jb
sub
sbb
push
popl
and
popf
mov
or
or
push
rcrb
out
mov
pop
xchg
fimuls
mov
call
cmp
xor
sub
enter
fsts
xchg
call
pop
mov
mov
fistpl
hlt
jns
daa
add
sub
dec
imul
add
pop
jne
mov
adc
pop
sub
add
jo
dec
repz
mov
clc
push
adc
cmp
out
repz
mov
cltd
inc
daa
js
cmp
in
test
movsb
lea
ds
ret
imul
adc
cmp
mov
or
pop
jbe
inc
fisubrl
lcall
js
ret
cmp
xchg
test
sbb
push
loopne
repnz
dec
sub
ja
arpl
add
jmp
nop
jecxz
sbb
push
xchg
push
add
mov
cmc
leave
and
inc
push
sbb
xchg
or
fwait
mov
or
or
jmp
mov
pop
xchg
aam
ret
xor
rolb
sbb
cli
sbb
xlat
jnp
push
ffreep
pop
imul
push
push
aas
insb
jmp
sbb
adc
enter
jecxz
sbb
and
mov
gs
in
outsl
test
push
jge
mov
and
outsb
cltd
inc
lcall
fcompl
mov
cld
lea
addr16
dec
roll
xlat
rcl
add
fcomp
scas
adc
popaw
arpl
aaa
sub
aaa
jbe
pop
lret
inc
dec
sbb
sbb
add
sbb
dec
and
outsl
rcr
and
sub
add
jo
aad
jmp
mov
rorl
jne
mov
sbb
ficoml
sub
sarb
shl
mov
in
add
fisttpll
sbbl
dec
js
or
das
xor
pop
mov
add
je
cmpsl
pushf
imul
icebp
lods
cwtl
out
xchg
and
je
cmp
jmp
adc
popl
jmp
mov
adc
or
dec
pop
lds
lea
xor
das
xchg
test
sbb
sub
je
adc
in
pushl
cs
push
mov
pop
jge
mov
aam
push
fbld
lock
arpl
dec
je
or
pop
in
jecxz
or
sub
shrl
dec
testl
push
jmp
insl
daa
pop
pop
push
movsl
int
outsl
subb
add
lahf
ret
inc
or
sarb
push
movsb
jno
push
sahf
in
orl
inc
or
mov
addb
sub
add
inc
or
adc
ss
push
mov
std
loopne
stos
ret
jmp
lds
push
mov
aaa
test
fimuls
aad
cmp
push
out
or
ret
push
push
push
mov
pop
sbb
dec
idivb
cmpsl
mov
and
push
pop
aaa
mov
sub
sub
gs
aas
and
push
je
push
adc
mov
push
mov
and
push
jb
and
lahf
cmp
in
fs
sahf
and
add
and
test
ja
cmpb
jnp
jae
adc
jg
je
jmp
push
inc
mov
lods
ds
dec
cmpl
push
dec
xchg
cmp
sbb
cltd
adc
push
cld
in
adc
out
sub
or
ja
dec
or
outsl
or
andb
lods
lock
xchg
outsl
push
sbb
loopne
ret
cs
out
jl
ljmp
dec
fcoml
das
jo
mov
and
scas
shll
xchg
xor
cmp
leave
das
pusha
cltd
adcb
push
and
inc
test
mov
dec
ljmp
rorb
fdivrl
jns
jnp
out
push
add
push
and
jns
iret
cmp
inc
dec
pop
push
arpl
jns
out
adcl
mov
jecxz
pop
pop
and
and
pop
and
xchg
add
ret
adc
insb
mov
sarw
insl
das
pop
push
adc
fs
aas
pop
push
mov
dec
shlb
sub
adc
mov
shll
repnz
sbb
or
test
dec
and
and
mov
imulb
cld
mov
xchg
jbe
mov
adc
lret
and
pop
mov
ret
ret
lock
test
popa
scas
push
dec
mov
dec
or
ret
mov
je
mov
and
push
push
and
lret
aad
jae
jb
js
lret
es
inc
mov
cmpsb
push
inc
push
push
test
xchg
mov
push
call
daa
arpl
or
gs
pop
xor
fstps
jg
movsb
add
push
or
testb
mov
ror
pop
dec
rorb
sbbb
or
int
push
mov
mov
inc
inc
call
jmp
in
lock
enter
mov
xchg
pop
push
mov
push
push
and
xchg
cmp
sbb
enter
inc
push
add
or
fisubrl
adc
mov
xchg
ret
lods
lret
mov
add
adcb
pop
or
add
jmp
js
imul
ss
jg
sbb
mov
push
sub
inc
in
sub
pop
xorb
push
cld
pop
add
popl
cli
jl
adc
inc
bound
cld
enter
mov
and
sbb
hlt
mov
cmpsb
out
es
and
push
mov
mov
pop
ret
clc
clc
mov
pop
sbb
cmp
push
movsb
ret
int
cmp
jg
mov
add
inc
int
push
xor
adc
cmp
dec
out
hlt
or
nop
sub
call
xor
cmp
push
orl
xchg
jmp
sub
aas
sbb
xor
inc
and
xchg
inc
test
cmp
and
push
add
pop
cli
push
adc
cwtl
test
fmuls
aaa
push
fsubrl
addr16
jnp
pop
push
jo
test
scas
repnz
je
int3
xor
fs
ss
sbb
movsbl
mov
cli
sbb
mov
cs
sbb
lods
sbb
clc
and
sbb
out
pop
cmp
fwait
xor
jmp
mov
cmpsl
nop
mov
adc
push
daa
popl
mov
ret
push
mov
push
cli
xorl
push
movsl
dec
leave
push
pop
jmp
lret
adc
orb
adc
out
pop
xchg
mov
dec
or
loope
iret
sub
cltd
cwtl
sbb
shr
loopne
lret
lods
inc
or
inc
adc
cmp
dec
es
or
xor
test
mov
and
and
fwait
xor
mov
bswap
out
or
jle,pt
jl
or
sbb
sbb
cltd
dec
or
dec
negl
and
and
mulb
ret
mov
push
add
shll
xor
add
add
fnsave
xchg
fwait
xor
push
psrld
mov
add
mov
jbe
insb
rclb
and
dec
lds
add
or
push
aaa
or
or
lcall
stos
push
cmpsl
test
dec
inc
enter
xor
xchg
push
adc
push
xchg
dec
xchg
jmp
or
xor
or
and
or
xor
fstl
dec
sti
push
push
pop
js
xchg
in
popa
insl
aas
fcoms
adcb
pop
mov
in
or
or
and
mov
sub
sbb
xchg
xchg
push
inc
xor
lock
jo
xchg
lret
jnp
pop
nop
in
xchg
jb
cs
inc
aaa
xor
cmp
mov
or
jg
rcl
lcall
pop
push
popf
sub
hlt
mov
xchg
sbb
inc
int
jns
or
out
lods
fimull
sub
mov
xor
test
rorb
cmpsl
mov
push
mov
and
add
pop
jns
adc
pop
pop
lods
out
test
xor
xchg
orb
sub
or
mov
lods
adc
cld
test
and
out
adc
dec
pop
jo
jg
push
lods
mov
pop
adc
mov
sbb
jb
sub
sbb
sub
and
movsl
fistpl
shl
sbb
lock
fstpt
enter
add
push
insl
lock
shrb
mov
test
and
xor
aam
push
xor
lock
hlt
xor
pusha
lret
fldl
inc
push
add
aas
or
and
or
adc
and
or
sbbb
sub
push
push
or
test
subb
xlat
pop
aam
fcom
ret
sarb
or
push
stc
fcmovb
fidivrl
fisubrs
mov
hlt
xor
add
xor
in
push
cmp
stos
sbb
push
push
mov
jle
xorl
pop
sbb
xor
add
and
inc
stos
mov
fsubrl
xlat
rcr
outsl
fimuls
mov
add
and
bound
inc
arpl
xlat
in
mov
xor
inc
daa
adc
push
rclb
in
xchg
add
sbb
repz
or
adc
mov
mov
idiv
adc
leave
test
mov
sub
mov
leave
mov
repnz
and
rclb
jb
int
cmp
lods
push
mov
cmp
pop
jno
jl
inc
and
xor
popf
aam
xchg
or
lea
dec
sbb
mov
jg
inc
scas
xchg
je
sti
xchg
loope
push
popa
add
xor
add
ret
call
fistps
inc
mov
push
loope
mov
movsb
xor
xlat
or
dec
jne
movb
mov
movsl
pop
fimull
pop
mov
mov
adc
xor
jne
sti
push
adc
xchg
mov
pusha
push
mov
adc
test
xchg
out
sbb
mov
loopne
mov
or
fwait
loop
insb
movsb
outsl
push
adc
mov
cmp
filds
mov
and
rorb
pop
xlat
movsb
mov
fcoml
push
pop
push
pop
loope
mov
fdivl
mov
mov
push
or
add
sbb
sub
divb
lahf
jg
lea
add
pop
dec
cltd
outsl
sbb
add
xor
loopne
mov
xchg
ret
andb
ret
pop
test
inc
les
loopew
adc
add
mov
je
fcmovnb
or
adc
fisttps
fsubrs
repz
cmp
xchg
loopne
bt
test
imul
jp
lahf
mov
movzwl
xchg
enter
ret
sbb
xchg
subb
adc
adc
outsb
add
rcrb
in
cmp
or
push
roll
pop
inc
xlat
ret
xchg
mov
loopne
mov
arpl
test
inc
outsb
or
and
pop
mov
or
dec
pushw
add
popa
bound
adc
xchg
push
movsb
pusha
addl
lock
xor
mov
outsl
jle
and
ljmp
jne
movsl
loopne
mov
add
pop
adc
call
sbbb
pop
shrb
dec
or
sub
push
push
pusha
push
inc
outsb
js
adc
xchg
adc
push
gs
xchg
shll
call
addl
shrb
mov
inc
jp
mov
lods
cmp
pop
rcrb
jl
jmp
sub
mov
push
ret
cld
push
push
or
addl
test
mov
add
sub
sub
incb
shlb
or
xchg
jl
mov
gs
orb
outsl
jo
pop
sbb
fists
ret
and
fsubl
pop
repnz
daa
pop
arpl
incb
pop
jge
xchg
or
adc
das
xor
inc
popf
pop
pop
mov
cmp
jne
daa
sbb
icebp
ret
shrb
and
jne
dec
sub
mov
pop
jnp
push
push
pop
add
orl
inc
mov
daa
or
in
sbb
mov
hlt
pop
dec
lea
xor
jg
or
test
fnsave
in
sbb
xor
adc
inc
dec
jne
rorb
cmp
cmpsl
jbe
xchg
push
insb
or
inc
shrb
or
jmp
mov
pop
add
cmpsl
mov
adc
jmp
sbb
adc
mov
pop
movsl
pusha
push
cwtl
fdivr
addr16
cmpsb
push
daa
adc
dec
xor
pop
xchg
push
or
mov
sub
xlat
leave
aas
mov
jb
xor
xor
inc
sti
push
dec
jp
push
jmp
test
js
jg
push
dec
cmp
jne
or
insb
gs
dec
imul
xlat
sbb
mov
mov
or
sbb
andb
jmp
or
rolb
aad
inc
icebp
and
and
popf
jb
mov
dec
jmp
xorl
call
aam
add
or
add
cmp
cmpsl
push
adcl
add
popw
cmp
adc
or
add
cld
inc
add
jl
and
movsb
inc
push
or
scas
xchg
jge
pop
dec
lds
push
pop
or
sbb
mov
pop
xlat
adc
pop
jno
or
inc
and
inc
and
mov
jg
dec
or
sbb
pop
movsl
cmpsl
in
aas
or
or
and
test
orl
scas
loope
pop
and
pop
out
cmp
lds
or
adc
aaa
dec
sbb
rcrb
jle
xchg
cmp
xchg
scas
andl
rcrb
lods
mov
xchg
mov
fisttps
je
sbb
add
add
lea
or
pop
clc
popf
and
loope
xchg
sbb
lds
pop
es
cmp
mov
aas
sbb
push
pop
out
inc
push
adc
mov
sub
insl
and
out
ja
in
adc
cmp
ficoms
sub
add
add
push
dec
inc
mov
sbb
xchg
cmpsl
ss
fcoms
in
dec
clc
mov
or
inc
sub
adc
je
dec
push
out
xchg
sbb
cwtl
addr16
adc
out
mov
xor
and
sub
test
xchg
int3
mov
lods
or
lea
add
mov
rcrb
ror
cmp
aad
jnp
jne
pop
adc
or
xchg
frstor
wrmsr
push
mov
pop
mov
adc
mov
stos
and
in
shll
dec
jo
jecxz
aam
adc
adc
iret
cld
or
ficoms
call
btc
add
xor
ret
xor
dec
adc
or
in
call
add
push
orl
iret
inc
jb
jb
mov
stc
add
add
dec
test
pop
xchg
jl
enter
push
imul
inc
inc
lret
ss
std
add
inc
push
or
rclb
adc
xchg
add
jl
cwtl
sbb
pop
sti
jmp
cmc
xchg
push
jg
jnp
push
mov
add
add
lret
incl
push
mov
inc
ds
aas
scas
dec
mov
push
ret
inc
shlb
xchg
loopne
add
lret
pop
xchg
ret
lret
js
add
adc
or
pop
hlt
add
adc
js
jne
mov
jbe
jl
pop
jg
xchg
pop
mov
and
call
push
mov
add
pop
push
sbb
fwait
add
inc
adc
cs
test
add
movsb
mov
fcomp
cmp
push
out
or
adc
xchg
fcompl
jne
test
out
and
and
mov
jmp
sbb
sub
xchg
ret
loopne
arpl
sbb
push
push
outsb
sbb
or
ja
sbb
mov
dec
xor
loope
push
sbb
loopne
aaa
jo
in
call
bound
mov
shrl
and
iret
clc
rorl
cld
pop
cmpsl
idivl
add
or
daa
aam
dec
repnz
inc
sub
xchg
mov
sub
inc
sub
sub
or
sbb
popf
lods
push
and
sub
pop
pop
pop
dec
jb
daa
or
sub
pop
jp
or
mov
adcl
add
and
aad
ret
loopne
mov
add
pop
imul
adc
sti
dec
dec
out
cmpsb
ja
add
inc
shll
imul
rolb
fdiv
mov
xor
das
in
dec
jne,pt
mov
dec
sbb
test
or
xor
pop
pop
sbb
aas
add
cwtl
jb
dec
movsl
lea
add
mov
mov
and
lret
in
loope
jb
les
int3
adc
jo
mov
pop
fisubl
and
js
jbe
dec
stos
push
lods
aam
adc
pop
jmp
cmpb
fstpt
pop
and
xchg
jae
outsl
addb
and
add
dec
adc
mov
or
lds
sbb
es
xor
ret
sub
rorb
rolb
ret
inc
add
mov
orb
sub
inc
pop
in
cld
xor
jp
out
add
rcrl
adc
inc
test
inc
mov
mov
lret
jae
int3
enter
bound
adc
jp
jecxz
call
xchg
lock
les
xor
mov
cmp
pop
mov
inc
cmp
sbb
or
cmp
cmp
nop
stos
pusha
pop
xor
and
add
ja
ja
dec
push
sbb
dec
loopne
negb
leave
push
leave
sbb
lock
xor
leave
out
sbb
xchg
nop
xchg
adc
inc
dec
pop
dec
gs
sub
and
movl
fbld
mov
add
adc
test
nop
les
int3
popa
insb
dec
data16
scas
push
push
scas
arpl
scas
xor
xor
push
imul
lahf
cmc
popf
cmc
push
sub
aam
fidivs
test
ret
xor
or
enter
xor
xor
jmp
dec
clc
jne
inc
jne
jno
mov
cli
dec
mov
mov
mov
dec
repnz
xor
or
add
pop
scas
and
cmp
pop
xor
in
dec
fidivl
test
icebp
mov
rolb
pop
les
call
pop
inc
aam
ss
fists
or
xor
sub
ret
ja
xchg
add
mov
inc
xchg
or
or
stos
and
xchg
pop
icebp
or
lock
jbe
jbe
jg
pop
hlt
lea
mov
add
js
inc
inc
pop
or
add
dec
hlt
lods
call
mov
pop
add
pop
testl
inc
mov
pop
mov
pop
add
or
mov
jmp
mov
push
add
rcr
push
push
push
pop
dec
mov
arpl
push
mov
add
or
jmp
push
xor
adc
jge
popa
stc
pop
sub
mov
aaa
cwtl
cmp
je
xchg
repnz
fists
shrb
arpl
shrl
push
push
mov
lock
mov
dec
bound
and
or
push
test
dec
mov
insl
sub
ss
jo
pusha
psubd
cmp
sbb
adc
div
ror
jo
sbb
jge
or
loope
pop
sub
les
stos
mov
and
stos
lea
aas
shlb
dec
sub
xor
inc
dec
and
in
inc
outsl
add
rclb
and
push
int3
add
lret
cltd
dec
lret
orb
dec
hlt
or
test
inc
cwtl
sub
ret
inc
iret
loopne
add
and
test
xchg
and
aad
jb
pusha
pop
int3
in
movsb
xor
mov
in
jb
je
in
in
jbe
js
in
in
jp
jl
in
in
jle
pusha
in
in
popa
bound
in
in
gs
in
imul
in
outsb
outsl
push
in
in
push
push
push
push
in
in
push
push
push
pop
in
in
pop
pop
pop
pop
in
in
pop
pop
pop
inc
in
in
inc
inc
inc
inc
in
in
inc
inc
inc
dec
in
in
dec
dec
dec
dec
in
in
dec
dec
dec
xor
in
in
xor
xor
in
in
ss
cmp
in
in
cmp
cmp
in
in
ds
and
in
in
and
and
in
in
es
sub
out
sub
scas
nop
xchg
sbb
jne
mov
les
mov
fs
outsl
xchg
rorb
dec
outsl
xor
add
iret
psubusw
mov
or
inc
mov
mov
shrb
xor
xchg
addr16
outsl
outsb
je
cld
push
stc
push
imul
jo
xor
adc
add
inc
sti
cmpsb
and
mov
xchg
orl
les
xchg
or
jbe
xor
xlat
fcomp
cmp
lahf
push
je
insb
mov
xor
jae
enter
call
mov
adc
adc
gs
clc
insb
loopne
push
imul
sbb
jbe
mov
adc
lahf
jae
xchg
cs
shr
cltd
jbe
push
outsb
int
cmp
pop
std
mov
outsl
sbb
push
inc
popa
jae
add
in
fstl
add
inc
jl
enter
or
rorb
shr
imull
fiaddl
adc
cli
insl
inc
insb
push
push
push
push
fisubs
jo
je
push
inc
jns
sbb
mov
shlb
nop
and
out
ret
add
sbb
adc
xchg
aas
mov
loopne
imul
ja
rolb
sbb
aaa
inc
jb
fimull
mul
and
pusha
shlb
add
pop
ret
mov
and
sbb
or
repnz
outsl
cs
inc
imul
lock
es
adc
xor
mov
push
cmp
dec
pop
xor
ljmp
es
out
aad
mov
pop
sub
xor
sbb
mov
out
adc
test
jecxz
lahf
xchg
inc
imul
cmpsl
inc
xchg
pop
and
cld
cltd
mov
add
aam
sbb
leave
and
and
js
adc
xchg
jmp
jmp
inc
scas
loopne
js
and
lret
add
jne
pop
adc
in
insl
sub
lock
sub
push
mov
std
loope
iret
clc
in
inc
push
add
jmp
adc
addl
loopne
push
out
jnp
push
imul
sub
dec
fs
clc
out
lret
sub
cmp
repnz
add
mov
and
mov
and
sahf
mov
test
xchg
lock
add
jnp
pop
mov
lahf
pop
sbb
lds
adc
mov
pop
xchg
pop
ret
in
addl
xchg
pop
shll
xor
outsl
cmp
xor
cmp
adc
aas
call
repz
add
loope
and
xor
call
repnz
sbb
fwait
jmp
test
push
cmp
das
xchg
jl
add
add
hlt
push
inc
push
in
movsl
fdiv
xchg
cmc
add
pop
insb
inc
dec
cmp
pusha
pop
push
or
cmc
pop
daa
fdiv
lcall
push
adc
push
inc
popa
sbb
mov
jmp
pop
sbb
movsb
mov
bound
imul
mov
ds
aas
sub
int3
push
or
repnz
test
add
inc
shll
cmp
enter
addb
push
into
cmpsb
add
add
fiadds
addr16
jae
outsl
test
push
dec
aas
add
or
sub
cmpb
outsb
outsb
adc
inc
outsb
adc
dec
mov
mov
add
js
add
push
inc
arpl
inc
add
stos
lods
imul
ja
outsl
ja
pop
dec
add
adc
push
cld
push
in
cmpl
cmp
idivl
dec
mov
es
sub
ds
incl
rcr
pushf
push
xchg
ret
sbb
popf
es
pop
cli
fsubr
mov
rep
add
push
or
jg
cmp
mov
adc
mov
and
scas
test
rorb
fstl
ds
mov
sbb
push
add
fadd
jnp
pop
cld
cs
sub
enter
inc
dec
out
mov
add
sysret
fstpt
adc
rorb
xor
cmp
fidivs
dec
adc
fdivrl
pop
push
loope
rol
or
sbb
xchg
cwtl
nop
and
nop
nop
push
mov
out
add
sub
inc
mov
cmp
fadds
inc
mov
add
out
push
pop
xor
fwait
popa
ret
push
cmpsl
in
sbb
fisubs
inc
js
fcmovu
fisttpl
push
sbb
jge
lock
sub
mov
inc
cs
clc
sbb
pusha
sbb
push
and
add
adcl
jb
out
pop
or
sub
cwtl
fistl
pushf
lods
lahf
aas
or
push
in
sahf
ss
je
dec
insl
dec
lea
mov
cld
and
dec
mov
je
inc
push
push
or
gs
bound
adc
mov
int3
pop
mov
and
repnz
cld
push
inc
sub
inc
inc
lahf
div
rcrb
push
and
pop
mov
mov
and
and
and
mov
cmpsl
push
mov
sub
push
jg
and
lods
inc
lock
jnp
inc
pusha
sub
push
or
rcrb
cmp
pop
and
mov
inc
cmp
jg
push
mov
hlt
cs
das
or
jno
insl
mov
sbb
or
loopne
sbb
rorl
jo
and
push
fcomps
inc
jg
push
pusha
inc
push
pop
dec
xor
lcall
js
cmpsl
push
incl
push
push
mov
lock
and
xchg
pop
test
pop
sbb
sbb
pop
repz
rclb
or
dec
hlt
dec
arpl
pop
fdivl
stos
call
pop
push
in
enter
push
in
push
sub
push
pop
mov
insb
push
inc
lock
inc
in
dec
pop
or
or
or
mov
cs
push
pusha
add
ja
dec
pop
sbb
xchg
cmp
ret
jge
pop
push
and
push
enter
dec
faddl
nop
fildll
loopne
jno
sub
dec
popa
outsb
nop
mov
mov
ret
rol
xor
inc
dec
jne
daa
jo
clc
add
dec
and
add
test
jmp
sub
pusha
rorb
jg
add
dec
mov
iret
add
push
lcall
pop
mov
inc
imul
mov
add
je
sbb
jne
popl
in
ret
xchg
fdivs
je
lods
roll
inc
cmp
xor
push
jbe
loope
out
cmpb
sbb
cltd
js
sub
push
cmp
daa
inc
adc
lret
dec
repnz
xchg
inc
loope
pop
fs
adc
xor
ja
push
jo
pop
lds
shl
enter
add
cmp
xchg
jns
and
push
not
repz
push
les
and
sbb
add
sub
xchg
xchg
sbb
push
cli
jmp
add
or
orb
loop
sbb
jnp
fidivs
fs
mov
or
xlat
push
repnz
cmp
dec
and
orb
imul
pop
adc
incl
jle
xchg
dec
jae
aad
xlat
imul
push
cmpsl
int
or
push
aas
jecxz
jle
mov
inc
adc
fadds
xchg
xchg
mov
push
adc
pop
and
popl
inc
jmp
fadds
xor
test
fdivr
repz
xor
in
in
pusha
rcrb
xlat
mov
mov
and
adc
fistl
push
cmpsl
or
addb
mov
xor
enter
arpl
jbe
ret
scas
arpl
jb
outsl
outsb
inc
inc
add
pop
dec
insb
fildll
sub
cmpsl
xchg
mov
mov
push
jne
jo
gs
push
rorl
gs
insb
pop
ss
xchg
inc
push
imul
sarb
dec
imul
insb
outsl
ja
mov
dec
lahf
jne
or
inc
lock
arpl
imul
adc
loopne
ja
or
mov
or
jns
add
xor
insl
inc
repnz
mov
push
mov
outsl
loopne
mov
into
das
cmovae
shrb
pop
xor
mov
jo
icebp
and
xor
inc
das
inc
je
inc
push
xchg
dec
jbe
inc
mov
das
insb
or
jg
xchg
xchg
pop
push
gs
or
imul
pop
daa
inc
mov
imul
cmp
sahf
fildl
or
or
fsts
daa
and
and
pop
stos
and
jg
ffreep
xor
repz
adc
xor
aaa
pop
nop
fwait
jmp
outsl
inc
push
dec
sarl
outsb
jne
stc
push
mov
adc
or
lahf
cmp
mov
arpl
cmp
in
add
imul
sub
outsl
das
cmp
daa
outsb
inc
rclb
mov
or
pop
sbb
out
push
pop
sub
push
mov
mov
ss
pop
xor
rol
or
inc
loopne
add
jns
int
pop
pop
scas
loope
xchg
inc
dec
push
dec
pop
inc
dec
inc
push
push
inc
push
add
inc
std
and
sti
inc
inc
push
dec
push
xor
inc
dec
dec
push
divb
movsb
arpl
inc
inc
push
adc
notb
dec
inc
push
dec
dec
push
mov
pop
sti
sbb
shlb
dec
and
aaa
and
out
inc
inc
xor
xor
adc
push
inc
and
inc
xor
inc
dec
xchg
mov
push
push
dec
dec
push
dec
mov
xor
push
das
sbb
repnz
das
inc
inc
dec
push
out
in
mov
dec
inc
dec
or
push
aaa
jg
xchg
adc
push
push
push
dec
push
nop
cmpsl
xchg
dec
inc
dec
push
mov
fidivrl
nopl
push
decl
push
mov
mov
pop
add
loope
ss
mov
push
into
pop
cwtl
add
inc
add
mov
pop
mov
dec
or
sbbb
rcrl
adc
add
or
pop
mov
les
push
sbb
in
cmp
sbb
out
repz
or
sbb
push
stos
imul
or
jle
push
push
or
jmp
add
fadds
rdtsc
adc
scas
rol
jne
or
imul
add
pusha
xchg
mov
dec
pusha
lds
test
mov
stos
mov
or
add
insb
mov
jmp
iret
add
dec
or
or
add
dec
and
mov
push
fdivrs
ja
xchg
int3
push
lods
insl
das
pop
dec
aam
sbb
ss
jo
lret
cli
dec
sahf
sbb
mov
jne
js
adc
xchg
fists
popa
in
mov
or
mov
cld
scas
rcll
fcoms
sub
push
cli
das
mov
dec
lea
pusha
xor
jne
lret
sub
testb
sar
jmp
xchg
or
adc
cmp
sub
mov
pop
es
pop
in
mov
mov
es
xchg
out
inc
adc
or
xor
sbb
insl
dec
out
and
mov
cmp
dec
sbb
enter
xor
mov
rol
jmp
out
and
adc
mov
je
mov
or
clc
loopne
aaa
cmp
adc
lea
incb
xor
inc
mov
call
cmp
mov
pushl
jmp
jo
mov
rclb
fiaddl
push
fdivr
sahf
cmpsb
clc
flds
jecxz
push
push
push
or
dec
out
outsb
pop
inc
fildl
or
jmp
sbbl
push
cmp
mov
inc
imul
jmp
cltd
pushf
sbb
pop
gs
aam
mov
icebp
ret
inc
fisubrl
test
xchg
fcmovu
movsb
xor
mov
nop
push
inc
mov
sub
add
cmp
sbb
and
into
aam
xchg
subl
insb
sub
add
sub
mov
dec
mov
mov
push
xor
movsb
fildll
xor
neg
ss
inc
push
das
fdivp
fimull
fdivrl
mov
mov
sahf
xorl
add
push
pop
or
and
and
xor
push
mov
bound
ret
pop
sbb
dec
sbb
rcll
jl
dec
loopne
pusha
add
movb
xchg
sub
push
ss
pop
enter
aad
pop
icebp
enter
ds
loopne
add
xor
icebp
dec
test
mov
rolb
fbld
adc
shl
loopne
dec
and
xchg
mov
loope
adc
aaa
sbb
repnz
jne
fistpll
test
jne
int3
mov
sbb
mov
inc
mov
lods
adc
rcr
in
movsl
lret
insb
push
or
xor
in
xchg
cmp
fs
adc
ret
movsb
or
cmp
mov
das
sbb
in
leave
lock
or
nop
xchg
jl
pop
sbb
shlb
or
in
xchg
pushf
in
add
add
jno
sarl
adc
and
nop
hlt
div
in
enter
repz
mov
push
sub
adc
js
aas
inc
jb
cmpsl
hlt
in
sbb
push
out
mov
push
mov
inc
ds
cmp
in
dec
pop
mov
dec
inc
ret
push
sbb
xor
cmp
addl
cmc
mov
adc
addb
mov
das
cmp
pop
loope
ss
cs
addb
add
jmp
shlb
jmp
je
push
adc
scas
jmp
add
hlt
iret
or
lock
ror
cmc
in
movsb
dec
and
aas
ret
inc
andl
adc
ret
or
xor
jmp
nop
pop
and
test
cmp
incl
mov
jo
jle
push
loopne
es
pop
addl
dec
gs
mov
jl
dec
in
sbb
movl
fsubs
mov
mov
push
jno
cmp
sub
in
adc
push
adc
cmp
mov
sub
push
add
pushf
jge
jnp
adc
out
fs
shrl
divl
sbb
push
or
push
add
or
pop
or
or
rorl
or
xchg
push
sub
push
push
iret
lods
nop
xor
mov
or
rorb
scas
add
push
or
in
and
mov
xor
clc
pop
sbb
fs
xor
sbb
iret
rcll
or
sub
mov
ss
xchg
and
adc
lods
insb
sbbb
js
mov
daa
sbb
sub
pop
xchg
pop
or
lahf
fildl
add
mov
movsl
mov
fistpl
test
sbb
jge
push
insl
push
pop
ficompl
rep
or
imul
push
sbb
test
lret
inc
xlat
fbld
fnstenv
mov
add
or
sbb
addl
ja
sbb
sbb
sub
mov
jns
lods
xchg
xchg
mov
mov
push
emms
pusha
hlt
lea
inc
aaa
push
enter
in
shll
test
inc
sarb
movsl
xchg
scas
push
mov
aaa
adc
xlat
push
cmp
pop
and
mov
cmp
inc
inc
loopne
xchg
lea
lods
inc
rolb
sbb
cli
les
mov
xchg
cmp
add
dec
xchg
mov
xor
cltd
mov
adc
inc
jl,pt
push
add
popa
dec
push
daa
imul
adc
add
aam
add
mov
dec
sti
icebp
test
cmp
scas
aas
xchg
sti
dec
scas
jecxz
mov
into
dec
pop
add
mov
jae
push
xchg
add
mov
and
pop
decl
mov
cmp
je
mov
inc
mov
jae
aad
movsb
jne
push
pop
mov
out
and
aas
popa
and
es
in
push
cmp
xor
add
arpl
and
orb
in
clc
int3
test
lea
add
imul
pop
or
shll
sbb
mov
je
sub
adc
fs
mov
dec
fwait
cmpl
and
aad
lods
push
dec
xor
in
add
add
or
or
psrld
xor
push
xor
or
and
fisttpll
inc
sbb
jae
push
adc
adc
data16
data16
lods
pop
orb
mov
lods
jnp
in
pusha
and
sbb
cmp
movsl
pop
inc
pop
jb
xor
cmc
adc
mulb
mov
pop
ds
mov
pushf
or
mov
xchg
pop
cld
iret
js
ret
push
das
mov
jg
dec
out
push
ret
nop
mov
cmp
xchg
xchg
incb
push
nop
xchg
fs
or
inc
rolb
incb
sub
rcrl
xchg
cvtps2pd
xchg
push
xor
adc
adc
xchg
fisubs
inc
insl
lods
adc
xor
aaa
arpl
xor
cld
cmovb
addr16
add
in
int3
cmovs
sub
adc
in
add
push
add
cwtl
test
cmp
stos
enter
pop
pop
inc
mov
fwait
pop
push
in
imul
in
loope
add
and
mov
mov
mov
sub
fcomps
in
push
int
cmp
out
pop
mov
mov
or
fimull
push
fbstp
arpl
pop
imul
scas
notb
add
dec
pop
xchg
mov
push
or
mov
int
in
pop
mov
loopne
dec
divl
shl
and
adc
clc
add
fsubl
imul
xchg
mov
rcl
cmpl
mov
lds
ficompl
adc
jo
enter
out
add
mov
test
push
stc
pop
sbb
nop
add
stos
add
rcll
ret
push
xchg
int
in
push
and
mov
test
push
iret
shll
addb
add
jge
inc
xchg
or
daa
mov
into
es
cmpsl
sbb
and
xchg
and
push
push
sub
out
fdiv
dec
jmp
jns
pop
or
jl
sbb
outsl
pop
xchg
sub
cmp
push
sub
inc
das
inc
aad
add
push
mov
push
loopne
movb
mov
movsl
adc
stos
gs
or
inc
pusha
movsb
adc
push
movsl
or
pop
call
aas
or
punpckhdq
adc
mov
ss
sub
and
mov
repz
lea
add
mov
mov
sub
js
or
add
cmc
push
ljmp
inc
add
push
pop
rcrl
jl
dec
adc
aas
loopne
loope
sarb
mov
shll
dec
lea
mov
pop
pop
ds
clc
push
push
add
jne
dec
cmp
lock
insl
jge
adc
adc
adc
sbb
push
inc
add
and
and
inc
pop
ja
add
jne
in
ja
sbb
cmc
dec
mov
and
lods
stos
or
and
insb
mov
enter
mov
dec
jns
jmp
xor
sub
std
fisttpl
jecxz
mov
mov
jmp
pop
dec
clc
movw
add
cli
adc
cld
or
inc
jae
add
fld1
cld
int
push
and
fdivrs
jl
cmp
cmp
mov
rolb
jne
flds
push
jo
add
fistps
movzwl
lea
inc
dec
jle
push
cmp
fwait
negb
push
addr16
ret
andb
loopne
sahf
add
adc
sahf
xchg
and
sbb
cmp
push
ja
adc
inc
xor
jmp
cwtl
dec
sub
jl
push
icebp
movsb
repnz
das
mov
lea
or
add
push
clc
add
sbb
fimull
mov
pop
pop
cld
dec
loope
or
push
dec
pop
sub
cmp
pop
push
push
add
clc
xchg
fildl
jbe
xor
daa
pop
push
jne
and
jmp
es
mov
test
or
sahf
lret
push
rcl
and
pop
fmull
jne
add
in
jae
rorb
xchg
mov
hlt
je
add
insb
es
or
or
ret
dec
and
inc
clc
ss
push
push
dec
sub
and
rcl
sti
dec
add
lds
or
mov
pop
dec
pop
imul
shrl
jl
sbb
adc
add
dec
and
icebp
sbb
test
or
push
cs
adc
andl
push
jmp
or
sub
add
or
cmp
pushf
in
adcl
or
movsb
lock
jns
hlt
cld
dec
or
loop
mov
sub
pushf
mov
add
out
inc
std
inc
sub
out
addb
pop
addl
adc
jge
jo
shrl
add
and
int3
enter
and
pop
cld
push
mov
add
mov
and
jae
sbb
leave
or
cmp
lock
push
sub
or
or
mov
xor
cmpb
add
outsb
sbb
aam
add
dec
loopne
or
mov
cmp
lock
mov
rcrl
adc
cmp
jg
test
jle
cmp
jl
mov
aaa
enter
jg
bound
pop
clc
jle
inc
cmp
inc
pop
sbb
ret
jmp
add
push
pop
jae
and
movsb
inc
or
mov
test
or
shrb
lods
pop
inc
and
push
push
pop
adc
cmc
cmpsb
fistl
push
push
add
rcrb
pop
fcomp
mov
or
scas
into
dec
xor
or
in
mov
lods
mov
push
pop
sub
or
ds
adc
rolb
out
stc
xor
and
xchg
loopne
test
rcrl
lods
mov
in
push
lret
inc
push
jg
or
jl
push
cmp
loope
adc
mov
call
mov
int3
jle
cs
dec
jne
cmp
flds
lds
xor
cli
or
aam
cmpsl
or
or
loopne
push
repnz
add
sub
shll
sub
adc
out
es
sbb
dec
xor
push
xchg
stos
sub
lods
mov
push
mov
sub
pushf
sti
push
or
nop
pop
cwtl
enter
inc
mov
insl
mov
mov
imul
fcompl
add
push
mov
xor
test
in
mov
sarb
add
push
push
mov
sub
mov
rcr
xor
mov
push
mov
pop
stos
or
sbb
js
jae
jl
xor
mov
sarb
push
sub
aas
scas
ss
ret
pop
or
test
xchg
jne
into
in
mov
dec
push
inc
dec
xchg
pop
insb
loop
rclb
jmp
xor
ret
jl
cmp
jl
ret
and
pop
cs
sbb
sbb
test
test
mov
sbb
sub
sub
or
or
mov
jmp
sti
sub
movsb
ljmp
or
mov
xchg
add
insl
in
je
dec
or
jle
lock
jmp
pop
outsb
inc
mov
and
test
jae
jmp
adc
out
or
imulw
sub
fisubrl
or
inc
and
add
adc
mov
push
push
sub
adc
ljmp
mov
mov
out
andl
cli
add
cld
hlt
out
adc
negb
add
or
ljmp
icebp
test
outsb
adc
cwtl
dec
test
repnz
aaa
loopne
inc
push
push
add
push
or
hlt
cmp
fbstp
inc
xchg
push
xchg
das
cmp
push
and
cs
pop
jo
pop
jecxz
push
add
sbb
dec
incl
lcall
clc
clc
hlt
or
inc
dec
hlt
inc
sbb
ret
push
jg
mov
jecxz
mov
rolb
add
xchg
leave
incl
dec
sahf
push
in
push
sbb
adc
xlat
pop
cmpb
add
loope
adc
imul
push
in
hlt
int3
mov
call
add
fistl
push
xchg
out
popf
call
test
cmpsl
pmulhuw
mov
shl
shlb
or
xor
int3
das
push
fcomps
inc
push
dec
push
add
lock
xchg
add
or
xor
mov
sub
mov
mov
or
lods
pop
push
pusha
andb
push
insb
mov
fsubrl
jbe
cmpsl
mov
mov
mov
mov
js
dec
mov
test
movsl
shlb
adc
sub
adc
loopne
out
push
fcoml
nop
scas
lock
orl
jo
mov
mov
aaa
movb
mov
xorl
js
cmp
js
mov
dec
aaa
pop
mov
jb
mov
sbb
shll
add
lahf
sbb
adc
bound
mov
es
nop
negl
xor
inc
push
jo
fmull
add
pop
cld
out
inc
leave
or
test
xchg
jmp
sbb
xor
adc
adc
dec
cmp
loope
out
mov
lret
je
sub
dec
fwait
in
jne
sarl
int3
push
loop
gs
adc
test
clc
mov
lret
xchg
push
push
hlt
mov
addr16
jmp
jmp
sbb
or
jns
fcomps
push
cmp
inc
add
push
adc
rolb
or
clc
fimuls
sarb
ret
enter
pushf
adc
jno
pop
push
shll
dec
sbb
pop
adc
push
adc
js
imul
outsl
inc
mov
pop
popl
adc
cs
add
lods
call
mov
shr
xor
pop
pop
jb
adc
outsl
jb
lret
jae
dec
adc
int3
gs
fdivrl
nop
cmp
jl
enter
push
inc
sbb
pop
rcll
jae
push
aad
and
shll
leave
xchg
or
mov
or
push
fstpl
scas
push
inc
add
inc
ds
push
insb
clc
mov
or
cmp
xchg
add
hlt
mov
orl
and
inc
movsl
and
adc
inc
or
push
int
fwait
sbb
ja
mov
pop
imul
bound
fbld
ret
mov
call
scas
test
inc
inc
dec
jne
imul
cmp
sbb
pop
outsl
enter
push
popf
xor
icebp
push
mov
mov
sbb
scas
icebp
add
push
je
inc
push
push
fimull
pop
pop
mov
das
push
pop
sbb
mov
push
sbb
cmpsl
and
icebp
adc
adcb
xchg
xor
adc
or
clc
mov
das
jno
jne
add
pop
inc
ret
insb
loopne
pop
loopne
jne
jbe
add
or
out
stos
inc
je
inc
add
imul
xchg
enter
arpl
and
mov
leave
mov
add
dec
fldl
shlb
adc
jg
pop
cs
imul
mov
or
fsub
xchg
mov
sub
clc
push
pop
add
xor
cmpl
std
roll
mov
int3
cmp
xchg
xchg
or
jge
outsl
push
or
and
and
lds
push
inc
mov
push
push
adc
movsb
xchg
or
add
push
addl
out
lods
xlat
pop
jne
mov
cli
add
call
or
pop
adc
in
and
enter
mov
or
adc
sbb
in
xor
pusha
and
das
nop
ficomps
test
addr16
dec
stos
les
outsb
and
adc
or
mov
push
sub
mov
sbb
insl
cmp
test
sbb
and
fcomps
ja
jo
sarb
push
out
mov
ret
add
sarl
mov
and
xlat
mov
fwait
cmp
daa
adc
ds
in
pop
cmp
pop
sbb
clc
mov
jmp
ja
pop
pushf
xor
push
aaa
or
in
adc
jno
jnp
jo
jp
int
sbb
inc
sbb
or
or
cmp
dec
insb
scas
mov
add
fwait
js
inc
mov
bound
aam
mov
popa
pushf
ret
mov
je
arpl
xchg
in
inc
icebp
add
xchg
sbb
loop
xorb
lds
push
inc
sub
int
and
pavgw
pop
rolb
lock
xor
jo,pn
mov
jmp
les
mov
push
jle
sbb
mov
adc
jl
push
xchg
inc
add
das
push
inc
ja
dec
cmp
fisubs
mov
mov
icebp
mov
or
xchg
adc
test
add
xchg
arpl
dec
xchg
ljmp
ja
sub
and
jp
js
push
pop
aaa
mov
mov
cmp
dec
or
xchg
xor
inc
cs
and
adc
pushl
sub
loop
pop
add
fs
sub
scas
add
or
inc
lcall
and
and
lock
jle
shl
push
and
fmull
je
sub
mov
lds
xchg
dec
aad
fwait
lock
mov
mov
mov
jmp
scas
lods
fucomi
push
or
pop
es
icebp
int3
add
cltd
aas
jg
cmp
adc
xor
and
jmp
cs
xor
fcoms
sbb
insb
dec
sub
in
or
insl
or
xchg
cltd
or
call
js
jbe
pop
lock
cmp
shrb
adc
test
push
arpl
dec
repz
adc
and
enter
cmp
iret
adc
sti
add
lods
sub
mov
ret
sbb
mov
mov
jmp
push
push
sti
mov
lods
mov
fcoml
call
adc
pop
jmp
push
sub
fs
ja
mov
fdivr
imul
popa
or
inc
jl
test
mov
dec
cmp
push
mov
jno
out
and
addl
mov
xor
xor
daa
inc
jae
nop
sbb
dec
or
and
or
test
scas
add
and
sbb
nop
jmp
outsl
ljmp
in
adc
pop
cmp
enter
sbb
push
arpl
stc
in
adc
scas
xchg
mov
ss
test
pop
or
mov
ret
jmp
cmp
or
inc
and
inc
adc
and
aam
es
push
movsl
cltd
cmp
adcb
add
test
shlb
dec
inc
je
movsl
mov
mov
fadd
repnz
or
push
and
movsl
dec
sbb
mov
fs
fs
cltd
and
dec
sub
enter
mov
or
aas
push
adc
adc
adc
xor
and
mov
pop
ret
dec
fdivrs
fidivrs
jecxz
scas
int
addl
push
data16
orl
insl
clc
push
sar
lods
push
dec
dec
hlt
shll
cmp
inc
cli
popa
add
inc
fadd
jl
inc
imul
test
les
lcall
push
in
ret
push
cmp
mov
mov
lods
je
dec
rorb
fimull
adc
test
clc
mov
lea
mov
cmp
repz
pop
mov
pop
mov
lret
cld
add
and
ret
jl
mov
movsb
outsl
jnp
andl
mov
lret
sub
jnp
jle
mov
jge
mov
inc
cmp
je
add
mov
shll
je
aaa
sbb
sub
add
aaa
xchg
cmp
imul
dec
mov
scas
je
cmpb
pop
int3
sbb
test
sbb
pushf
aas
iret
lds
inc
js
mov
cmp
xor
mov
jmp
push
jo
icebp
push
pop
fs
xchg
push
xor
paddusw
pusha
mov
adc
incl
and
jo
je
mov
jbe
daa
pop
test
adc
ja
inc
lcall
adc
sbb
xchg
call
jmp
xor
cmp
jle
sub
xor
mov
lret
mov
and
pusha
inc
adc
cmp
xchg
sub
or
mov
or
add
fs
nop
sbb
aam
inc
pop
adc
adc
push
mov
sbb
sbb
sahf
add
mov
out
ret
xchg
push
sbb
pop
sbb
insl
xlat
add
jne
shll
xor
push
sbb
mov
enter
rcrb
mov
ja
sub
add
push
mov
loopne
ljmp
leave
stos
or
in
loopne
shrl
mov
movaps
mov
addr16
dec
rcr
push
je
sub
hlt
push
addb
loopne,pt
fsubs
loopne
les
cmp
mov
movsb
xchg
sub
fimuls
sbb
adc
jecxz
repnz
hlt
mov
and
mov
fcomps
xor
int
or
popa
ret
push
pop
and
jb
push
cmp
pop
enter
pop
sub
lock
xlat
pushf
mov
subb
fbld
fistpll
push
mov
mov
adc
out
lods
adc
push
mov
into
inc
xor
xchg
insl
mov
dec
mov
fildl
fwait
xor
adc
lret
and
lret
pop
add
enter
pop
jl
jl
in
mov
lock
sbb
and
or
pop
inc
push
movl
dec
or
cmc
xchg
inc
pop
mov
test
pop
push
sub
orl
push
jl
sub
add
mov
xor
xor
sbb
mov
xor
mov
mov
fwait
xor
mov
dec
pop
sbb
dec
pop
adc
in
pop
sub
gs
jle
adc
sub
sub
sbb
pop
or
mov
dec
movsb
ffree
xchg
xor
mov
add
xlat
pop
call
add
adc
sub
mov
enter
out
xor
add
cmpsl
rorb
bound
cs
stc
cmpsl
call
pop
mov
js
les
std
sub
pusha
punpckhdq
xor
pop
and
aas
cltd
in
adc
inc
mov
iret
mov
pop
push
jns
sub
xorb
inc
pop
shl
xchg
in
mov
ret
cs
pop
mov
xor
adc
pop
pop
test
aaa
xor
aas
dec
xchg
mov
je
or
jmp
stos
pop
jmp
scas
pop
gs
dec
adc
int3
push
dec
add
pop
sbb
push
loope
xchg
cs
xor
add
xchg
add
mov
or
push
xlat
cmp
addb
test
inc
and
lea
dec
adc
sbb
or
cmpsl
cmp
je
mov
or
or
and
insb
adc
or
lea
xlat
or
jns
sti
fsubrs
loop
sahf
lds
or
xchg
dec
movsb
lock
add
stc
jp
mov
pop
cltd
inc
push
jecxz
dec
lock
dec
xor
data16
test
mov
xor
lock
cmp
aam
je
fcmovb
ljmp
es
pusha
shlb
jne
movl
iret
ror
loopne
dec
pop
or
cmp
jne
mov
push
add
add
or
les
fistpll
mov
pop
in
int3
mov
sbb
and
inc
fsubp
sbb
sub
mov
lock
jae
movsl
add
sbb
js
sub
test
jge
insb
mov
pop
and
jmp
push
mov
in
repnz
xchg
out
jae
and
sub
inc
adc
add
arpl
out
or
or
and
cmp
mov
aas
inc
mov
inc
mov
faddl
cld
xor
ds
dec
movl
inc
mov
sub
push
or
insb
lahf
xor
sbb
fucomp
mov
dec
mov
out
push
fmull
dec
add
pop
adcl
insl
inc
fisttpl
lods
ss
fistpl
int3
test
cmpsl
push
or
jae
push
sub
lods
add
push
mov
mov
mov
cmc
das
sbb
lea
cmpsl
hlt
rcrb
fdivrl
cld
pusha
stos
add
in
nop
add
je
scas
sub
fcoml
cmp
and
sbb
ja
mov
pop
jo
in
jmp
outsl
rcll
adc
adc
sub
mov
adc
push
imul
or
jno
mov
inc
icebp
sbb
in
jne
lock
mov
inc
push
andb
iret
mov
test
dec
fdivl
jle
inc
xorb
jbe
xchg
test
in
adc
add
aad
cmc
xchg
add
jge
and
orl
mov
xchg
arpl
push
test
fldt
outsl
jg
rorb
sbb
mov
mov
xor
fiaddl
out
push
sbb
in
jb
data16
mov
dec
mov
nop
mov
mov
push
pop
pusha
pop
mov
inc
and
je
add
add
sbb
cld
repnz
in
and
cmp
cmp
mov
xor
jo
orps
loopne
dec
mov
xor
sbb
rorl
inc
fcoms
std
xor
and
xor
faddl
jns
xchg
lock
pop
mov
mov
adc
inc
xchg
dec
test
or
movsb
stc
or
push
int3
shll
xchg
push
jecxz
cltd
loope
test
loop
inc
lock
mov
stc
xchg
and
add
into
nop
cmp
pop
iret
cmpsl
mov
push
xlat
insl
dec
js
ret
inc
mov
lret
xor
xchg
push
cs
add
mov
push
adcb
sbb
xlat
gs
xchg
or
imul
out
ret
mov
dec
rorb
sub
shlb
ret
lods
bswap
mov
mov
loopne
lods
loopne
ds
xchg
lock
pop
and
insl
pop
mov
addr16
fldcw
mov
hlt
mov
cmp
out
and
movsb
mov
inc
out
add
add
out
and
sbb
push
les
cmpsb
psubsb
iret
jg
mov
mov
sub
lock
inc
push
cmp
lock
es
dec
mov
imul
jge
sub
repnz
out
mov
cmp
dec
ret
movsl
and
popa
add
rorl
inc
mov
or
imul
add
mov
inc
inc
push
add
ret
in
insl
or
mov
insb
sbb
loopne
xor
aad
sub
and
and
imul
cltd
inc
stos
ffree
mov
pop
xchg
or
fidivrs
int3
add
xchg
mov
out
cmp
loope
and
mov
jbe
xchg
inc
aam
sbb
es
sbbb
sti
je
or
or
mov
or
or
adcl
adc
mov
push
mov
aad
pop
lods
ret
jge
aas
jmp
fwait
cmp
push
insb
sbb
xor
nop
mov
daa
add
movsb
sahf
dec
and
lock
or
ljmp
jo
mov
jae
ss
test
out
es
xor
orb
cld
cld
or
pop
xor
ja
add
sarb
xor
leave
inc
les
sbb
fmul
hlt
push
pop
push
sbbl
push
mov
push
pushf
or
xor
rolb
lea
int
scas
push
push
or
xor
mov
cmpsb
and
fstpl
test
push
arpl
ret
lcall
and
mov
and
or
add
ljmp
movzwl
push
dec
sub
scas
shrl
and
xlat
jle
loop
and
lds
push
ret
mov
repz
dec
pop
pusha
jmp
popa
adc
data16
clc
xchg
adc
xor
fs
arpl
mov
ds
es
push
sub
pop
leave
pushf
jne
arpl
add
inc
rcll
call
aam
inc
call
bound
fnstsw
sub
outsl
imul
push
pop
and
inc
subb
pop
mov
cmpsb
adc
and
mov
jge
addb
and
mov
icebp
adc
rclb
pop
mov
add
jno
and
and
inc
sbb
pop
xor
fadds
jnp
xorb
push
sbb
push
scas
je
mov
inc
and
and
or
sbb
sbb
push
sub
sub
mov
cmc
jno
movsb
leave
sub
add
fistpll
add
clc
sbb
add
sbb
hlt
xorl
cwtl
sub
pop
mov
adc
movl
pop
shlb
popl
or
enter
sbb
ja
xor
pop
sbb
rol
push
lahf
add
jmp
jo
jp
pop
cmpsl
inc
in
movb
mov
lahf
or
sbb
add
movb
sub
lods
pop
cld
ret
pop
mov
xor
inc
lea
cmp
fwait
mov
sub
ja
dec
jecxz
xor
and
sbb
jmp
ljmp
and
jb
cmpl
mov
sbb
or
sbb
add
dec
dec
or
test
push
in
mov
aam
adc
data16
ja
jae
add
test
repnz
mov
out
sub
and
pop
das
cmpsb
das
cs
icebp
lods
aaa
iret
jne
sarb
pop
imul
jl
scas
mov
rorl
or
mov
sbb
ss
mov
es
mov
dec
test
or
cmp
jmp
pop
adc
dec
add
loop
xor
xor
dec
pop
inc
cmpsb
pop
sub
addr16
fisubrs
adc
jbe
xchg
or
daa
push
add
adc
push
xor
push
xchg
cs
mov
xor
mov
jns
xchg
adc
mov
cmp
fsubrs
pop
outsb
arpl
push
mov
sub
sbb
idivb
sub
sub
xchg
mov
daa
push
push
leave
adc
or
outsb
or
ljmp
mov
lret
lret
jp
cwtl
adc
sbb
clc
push
xor
fistpl
inc
in
lock
pop
mov
jl
xor
fldt
fsts
test
dec
lods
lret
mov
inc
pop
and
outsb
roll
movb
loopne,pn
mov
popa
call
fadds
inc
lret
repnz
ret
lea
in
filds
xchg
push
add
mov
leave
inc
testb
adc
mov
lea
fldl
push
or
scas
orb
stos
adc
sub
call
lea
daa
insb
stos
clc
cmpsl
push
mov
fs
inc
pop
xor
adc
cwtl
in
or
in
inc
jo
test
dec
std
retw
sub
outsl
sbb
push
cmp
out
cmc
pusha
stos
push
push
lds
popf
push
rolb
pop
test
sbb
xchg
insl
popa
inc
daa
cmc
loopne
into
ffreep
filds
pop
jne
xor
or
imul
add
inc
nop
cs
dec
sbb
ret
orl
mov
cmpb
push
dec
or
pop
mov
lahf
cmpsl
insl
adc
shlb
ret
roll
shr
or
ss
addb
mov
inc
pusha
jo
xchg
mov
inc
sbb
jno
lahf
sbb
arpl
les
adc
mov
xor
inc
dec
enter
mov
dec
push
add
nop
outsl
pop
and
pop
pop
and
or
addb
mov
neg
cs
mov
push
dec
or
pop
inc
jl
add
add
inc
in
or
and
sub
jne
pop
popf
push
decb
inc
push
cmp
xchg
aam
add
loope
adc
fwait
ret
or
adc
pop
pop
mov
mov
test
xchg
fadd
ret
lcall
dec
sbb
lock
adcb
pop
xlat
fwait
les
mov
cli
cmp
les
in
repz
mov
mov
mov
shll
add
in
sub
sbb
xchg
test
and
adc
mov
in
xor
and
mov
es
hlt
mov
mov
int3
std
das
pop
cmp
inc
pop
or
add
movsb
push
dec
cltd
pop
and
mov
call
xchg
sahf
dec
int3
in
or
pop
shrb
fimull
shlb
mov
es
in
stc
cmp
dec
and
sbb
imul
test
mov
dec
aas
in
clc
add
or
pop
jbe
mov
rclb
pop
dec
and
sub
dec
aad
fs
and
jmp
sbb
jae
mov
and
mov
or
lods
dec
push
call
out
in
add
fcom
mov
inc
pop
sub
dec
mov
fs
rorb
xlat
lret
lds
inc
xor
xchg
push
in
and
push
xor
scas
jae
mov
jp
dec
loopne
jle
xchg
stc
scas
pop
dec
push
int
or
fwait
ret
dec
push
jle
sbb
sbb
cmpsl
ret
fmull
xchg
xchg
sti
dec
cmp
jno
inc
es
or
mov
lods
xchg
clc
sub
das
test
fmuls
inc
roll
push
sbb
adc
pusha
fs
addr16
mov
or
push
jo
cs
pop
push
in
push
pop
mov
cmp
fsubs
add
sahf
jno
iret
sbb
loop
xor
mov
outsl
nop
push
mov
push
sbb
push
jo
xchg
int
out
push
push
sbb
inc
in
inc
fmull
push
jns
ja
or
adc
je
nop
lea
orb
test
adc
jo
ds
popa
mov
jle
adc
mov
lea
adc
add
pop
inc
movsl
xor
fiaddl
mov
mov
jmp
or
mov
push
mov
mov
push
or
inc
adc
out
insb
add
lea
jp
or
push
loop
add
lcall
push
adc
jle
or
mov
movsl
adc
inc
cltd
mov
repnz
mov
lahf
inc
ret
mov
adc
lock
inc
lds
addb
jnp
stc
jge
scas
xchg
push
mov
repnz
dec
mov
ljmp
pop
enter
inc
lea
mov
jnp
and
bound
cwtl
movb
rorl
sbb
cmp
mov
xor
pop
dec
rclb
mov
xor
inc
out
pop
scas
sbb
jecxz
es
lds
rorb
loopne
pushf
dec
mov
cmp
movsb
add
fnstenv
add
cmp
dec
sbb
push
push
fdivl
jbe
sub
jmp
sbb
inc
jmp
ja
std
sub
adc
add
js
add
lcall
jg
push
in
xor
or
sub
lea
test
pop
or
sub
inc
ror
aam
push
fildll
mov
push
sbb
cmp
jae
inc
pop
aam
aaa
arpl
cmp
adc
jo
inc
lods
sub
pushf
xor
pop
fidivrs
or
xchg
rcrb
js
js
outsl
adcl
fmuls
sarl
lock
inc
daa
or
sbb
in
daa
and
rolb
cmp
mov
cld
mov
jbe
mov
push
jns
scas
cltd
adc
or
lock
loope
jle
cmp
outsl
cmp
or
cmp
and
inc
push
xor
testb
push
pusha
in
add
pop
jns
les
push
test
pop
sub
and
jle
add
push
mov
adc
test
data16
xor
xchg
mov
pop
mov
jo
mov
pop
xlat
mov
enter
out
mov
push
test
cmp
mov
cmp
inc
adc
add
push
push
pop
ret
insb
pop
push
out
aam
cmp
push
ss
test
and
mov
xor
cmc
lods
bound
cmpsb
nop
mov
pop
mov
pop
pop
mov
cltd
jg
mov
popf
or
pop
ss
pushf
jmp
dec
adc
adc
inc
pusha
pop
mov
popl
push
lahf
fs
mov
mov
mov
inc
jo
or
pop
mov
repnz
cmp
push
imul
push
movsb
js
adc
jae
sbbb
or
mov
lahf
xor
sub
hlt
mov
push
inc
push
sub
call
push
hlt
clc
add
call
mov
test
jmp
inc
or
sub
jp
movzwl
adc
stc
int3
mov
js
ds
mov
dec
maskmovq
testl
xchg
or
adc
outsl
push
jp
arpl
cmp
sub
addl
test
xor
or
call
out
push
xchg
mov
dec
cmp
push
sbb
xchg
pop
pop
sub
cmp
sbb
stos
pop
sub
ret
ss
jno
mov
mov
mov
das
outsl
inc
xchg
or
fisubs
jo
ret
leave
dec
add
inc
insb
adc
insb
xchg
rorb
addr16
push
adc
xor
mov
lods
push
pop
cmp
adc
inc
scas
aaa
sub
dec
adc
or
mov
pop
cmpsl
mov
or
aas
daa
push
push
fldcw
push
mov
add
mov
mov
mov
mov
xor
adc
mov
movsb
xlat
in
push
mov
adc
pop
and
push
and
scas
mov
sbb
push
fildll
cmp
orl
push
pop
or
test
lods
clc
sbb
sub
jne
mov
daa
inc
cmp
ja
mov
rorb
subb
subb
xorl
das
pop
bound
aas
and
push
and
or
push
inc
pop
mov
mov
ret
adc
mov
lahf
je
add
sbb
adc
test
fdivl
add
cmp
jne
push
push
adc
scas
xchg
loop
mov
mov
and
pop
mov
dec
inc
std
shr
inc
and
adc
stc
inc
shlb
movsb
loopnew
dec
aam
push
popa
add
sbb
jle
xchg
add
je
bound
lret
pop
or
or
xor
push
pusha
mov
mov
mov
in
dec
inc
add
add
push
lea
and
cli
adc
push
stc
call
mov
repz
jg
xchg
cmc
or
inc
out
dec
or
inc
cmp
nop
xor
inc
call
sub
ja
or
mov
ret
loopne
clc
push
xor
dec
xor
xchg
pop
pop
pop
outsb
hlt
movsb
ret
cmp
aaa
pop
adc
mov
pop
not
bound
hlt
inc
fsubr
clc
sbb
sub
lods
fdivrl
les
popa
cmp
scas
jae
pusha
xor
xor
lcall
roll
gs
inc
xchg
push
push
sahf
out
inc
jp
imul
pop
nop
int3
cwtl
sbb
pop
inc
push
cmp
adc
in
addb
fnsave
adc
mov
mov
ss
dec
inc
sub
test
and
insb
pop
inc
or
push
or
in
shll
pop
mov
adc
pop
mov
pushf
push
pop
add
and
add
adc
mov
stc
rcrl
mov
inc
fiadds
iret
in
mov
sub
loopne
scas
adc
in
rclb
sub
or
sahf
and
push
sbb
sbb
pop
or
repz
mull
sbb
ljmp
push
cmp
jg
vmwrite
or
push
mov
dec
push
lock
inc
lock
push
add
adc
adc
xchg
ljmp
xlat
cmp
inc
or
in
mov
pop
push
dec
cmp
ljmp
push
or
mov
gs
ror
stc
sub
in
sbb
inc
sub
pusha
and
clts
push
push
mov
stos
inc
pop
mov
push
ja
or
les
jo
ror
mov
in
mov
inc
loop
lret
xchg
cmp
rol
arpl
aad
lods
or
addl
daa
subl
pop
lock
or
test
mov
add
shrb
insb
inc
add
mov
jecxz
jbe
out
es
outsl
pop
pop
hlt
and
jb
pop
hlt
daa
mov
test
pmuludq
cs
daa
daa
in
call
and
mov
aaa
loopne
in
jbe
psubusb
shl
in
in
enter
in
in
mov
in
lods
test
dec
pusha
xchg
orb
clc
xor
dec
pop
pop
fcomps
pop
popa
mov
mov
negb
mov
fs
jbe
imul
xor
sub
mov
mov
test
mov
sbb
add
mov
clc
and
out
scas
repnz
pop
movb
adc
cmp
popa
cld
adc
shl
outsb
or
outsl
jb
sarl
lock
push
pop
and
mov
loop
dec
pop
pop
push
jmp
sub
or
sub
jb
je
pop
pop
mov
jae
dec
mov
or
in
lret
sbb
mov
packsswb
adc
mov
adc
adc
xor
sub
lock
or
es
mov
mov
push
sbb
rcrb
jp
push
lret
adc
mov
add
and
or
push
popa
cmp
mov
adc
pop
cmp
mov
lods
adc
mov
sub
jmp
addr16
xchg
cmpsl
loopne
pop
and
and
xchg
add
pop
dec
jmp
jmp
out
push
push
push
sbb
jno
sub
pop
enter
and
push
jo
or
mov
int3
daa
sbb
dec
enter
dec
xor
jl
or
rorb
add
stc
dec
ret
pop
mov
ss
xchg
mov
dec
or
jge
cmpb
movsl
cmp
mov
pusha
das
adc
lock
in
pop
test
sub
or
std
dec
xor
push
or
insl
cmp
inc
mov
jb
add
xchg
popa
test
pop
or
dec
inc
or
insl
adc
push
sarb
add
push
lea
lea
fcomps
pop
push
pop
loop
ds
jb
push
pop
add
stc
hlt
nop
inc
daa
push
loopne
push
and
dec
push
push
dec
inc
pop
xchg
lret
cmpsl
sub
adc
adc
cmp
cmovno
in
or
hlt
adc
xchg
xchg
xchg
push
adc
adc
adc
push
aam
lret
rcrl
cmpsb
sub
mov
dec
movsl
sbb
pop
outsl
cmc
sub
dec
push
push
or
lcall
test
adc
rclb
andb
cmp
inc
sub
sbb
sbb
ja
outsl
mov
fmuls
in
pop
pop
sbb
pop
mov
es
mov
imul
jne
popf
xor
xorl
jmp
ds
add
adc
sub
daa
call
mov
adc
inc
outsb
jne
cs
popa
jns
add
push
mov
movl
add
bound
daa
or
push
mov
nop
arpl
fs
dec
in
adc
sbb
ret
fmuls
lock
push
inc
push
push
dec
dec
decb
jb
dec
addr16
dec
sbbb
addr16
pop
es
or
orb
xor
std
push
ret
and
prefetchw
add
mov
sub
jg
pop
xchg
cld
mov
pop
rcll
mov
mov
xchg
cmp
inc
in
and
or
cmp
imul
addr16
out
sbb
adc
xor
gs
fists
or
adc
enter
jmp
fs
push
mov
xor
or
or
popa
into
jnp
jns
cwtl
dec
add
dec
imul
fs
inc
mov
addr16
enter
cmpb
nop
xchg
xor
pop
xchg
das
sub
pop
daa
lds
out
daa
sbb
cmp
mov
and
dec
insb
popa
dec
sbb
add
psubusb
and
hlt
fcomp
jmp
imulb
aam
movsb
packsswb
sbb
aam
shlb
ja
mov
lods
jae
sahf
out
sahf
jge
pop
popa
mov
jns
out
lret
xchg
popf
out
scas
and
pop
mov
sub
movsb
out
aaa
out
sub
xchg
xchg
fistpl
pop
add
es
ja
dec
mov
push
sahf
xchg
and
or
fsts
push
sub
sub
cs
fidivrl
adc
pop
insb
lret
xchg
cmp
push
imul
pop
clc
mov
add
insb
pop
dec
inc
cmpsb
jo
inc
xchg
popa
nop
push
or
xchg
subl
inc
mov
iret
inc
mov
pop
fisttpll
sub
mov
insb
cwtl
inc
push
push
adc
push
xor
dec
inc
ret
cmp
mov
das
dec
loopne
inc
data16
and
xchg
add
aam
ljmp
out
hlt
jno
imul
loopne
mov
push
sbb
adc
into
sub
inc
lods
xor
inc
sbb
add
jmp
stc
lret
test
pusha
or
pop
adc
and
mov
es
and
shrl
cmp
subb
jbe
out
and
sub
call
addb
adc
icebp
add
mov
jle
jg
pop
aam
cmp
and
addb
adc
sbb
xchg
sub
int
xor
lahf
dec
icebp
mov
lock
pop
xchg
jo
mov
add
shll
sbb
add
xor
pusha
js
gs
lahf
test
fisubl
jmp
fwait
mov
xchg
inc
or
inc
push
jbe
dec
hlt
sub
mov
add
adc
mov
cmp
hlt
jne
fcompp
aaa
push
sti
dec
jle
adc
orb
pop
or
test
or
sbb
sub
xor
in
daa
sbb
mov
dec
or
sub
jmp
mov
enter
sbb
xor
add
add
sbb
pop
or
xchg
dec
test
fildl
or
out
push
pusha
out
jo
mov
test
jle
dec
jne
sbb
pop
sub
ljmp
and
lret
mov
into
and
inc
push
cmp
in
lock
mov
inc
sbb
shll
fisttpll
xor
push
das
mov
sbb
outsl
rcl
add
mov
lahf
push
in
in
jae
dec
and
sub
fmull
jge
shll
xor
mov
pop
daa
xor
mov
pop
addb
cmpsl
push
inc
pop
fdivl
out
mov
mov
cs
or
mov
mov
bound
sbb
pop
lock
adc
or
das
fadds
mov
push
and
ret
shrl
sub
fmull
cmpsb
je
sarb
or
push
in
js
fsubr
adc
les
pop
test
mov
mov
lds
lret
ja
jbe
push
or
jge
xchg
inc
outsl
lock
loopne
pop
push
jle
outsl
inc
jmp
mov
xlat
pushf
mov
repz
fstpt
adc
dec
shl
ja
fcmove
nop
daa
call
lcall
je
mov
pushl
push
inc
adc
jne
mov
mov
jmp
inc
inc
test
xor
jle
adc
xor
mov
test
in
cltd
mov
sbb
inc
call
xor
push
cld
loopne
push
or
push
push
mov
call
xlat
xor
movsb
jo
inc
pop
push
shlb
mov
jne
call
and
add
dec
dec
push
xchg
pop
pop
clc
cmc
andb
in
fisubl
aam
cmp
lock
add
stos
xor
lock
mov
add
repnz
rorb
and
mov
sub
addl
aas
test
sub
ret
adc
inc
jecxz
movsl
lds
mov
sbb
sub
pop
inc
lcall
push
sbb
icebp
adc
cmp
push
test
jmp
adc
jmp
cld
jmp
ds
adcb
pusha
pushf
mov
leave
mov
adc
pop
and
ret
cmpsl
aas
leave
inc
or
js
push
pop
leave
lcall
into
sbb
inc
loope
adc
in
push
fs
sbb
dec
sbb
lock
jle
mov
inc
or
xchg
aaa
push
xchg
push
pop
aam
iret
data16
push
cmp
js
jne
in
rcrb
jbe
pop
cmp
repz
sub
push
js
sub
enter
cmp
inc
js
mov
pop
cmp
cmp
lock
mov
pop
insb
sbb
fwait
mov
leave
in
adc
add
neg
sbb
push
sub
push
dec
jo
push
pop
sbb
push
fwait
inc
leave
ss
dec
push
xchg
and
cltd
movsb
xor
movsb
inc
or
dec
insb
mov
cmp
mov
in
cmpsb
mov
jb
xchg
out
jno
in
dec
add
push
sbb
dec
add
nop
dec
gs
push
or
sbb
push
push
cmp
xor
jae
add
jno
push
push
cmp
gs
add
pop
and
sbb
arpl
arpl
lds
out
pop
test
adc
enter
lods
xchg
push
inc
daa
push
sub
xchg
insb
maxps
xchg
push
das
dec
loop
jb
inc
outsb
mov
pop
push
outsl
ja
mov
add
jnp
or
pop
outsl
jae
daa
sub
mov
cltd
jnp
mov
test
je
and
mov
push
adcb
or
test
push
push
popa
iret
inc
sti
dec
std
nop
fs
insb
sbb
dec
push
or
mov
enter
aaa
push
add
adc
imul
les
push
mov
adc
and
pop
xor
sub
dec
lock
subb
lods
pop
pop
sbb
dec
pop
push
inc
jge
dec
jge
inc
xchg
xchg
inc
push
repnz
cmp
or
movq
mov
shlb
decl
ja
mov
test
loopne
jnp
xor
push
lahf
or
imul
xchg
cwtl
inc
inc
inc
inc
pushf
mov
inc
inc
lods
mov
mov
mov
inc
inc
inc
int3
rcl
fadds
inc
inc
fsub
in
inc
inc
inc
inc
in
lock
clc
inc
cs
inc
cld
add
or
inc
inc
or
adc
inc
inc
inc
inc
sbb
and
adc
xor
jg
sbb
push
jae
mov
out
cmp
lret
adcb
loopne
lock
pop
arpl
test
xor
inc
pop
add
xchg
pop
sahf
insl
loope
push
fs
dec
jl
and
push
mov
push
mov
nop
dec
sbb
cwtl
inc
sub
push
je
mov
xlat
sbb
mov
and
test
lods
and
lock
sbb
add
movsb
dec
les
sbb
js
inc
sub
rorb
pushf
fsubrs
mov
push
push
in
call
hlt
in
or
push
sbb
xor
add
clc
inc
cld
push
or
jae
add
add
xchg
add
push
movsb
xor
adc
mov
inc
sub
push
rcrb
push
mov
xchg
gs
sub
sub
sub
test
insb
leave
mov
xchg
inc
pushl
adcb
push
pop
xchg
rclb
leave
adc
push
and
ds
popa
in
daa
imul
shlb
loop
push
sbb
daa
jmp
adc
loop
push
xor
aas
push
mulb
dec
pop
movsb
add
bound
je
sub
mov
addr16
xchg
gs
mov
pop
inc
addr16
fs
pop
sbbb
out
dec
arpl
jae
in
adc
fs
lea
or
jns
jp
jae
sbb
add
dec
mov
scas
pop
pop
pop
or
rcrb
jo
pop
xchg
push
or
push
add
outsb
dec
roll
lcall
mov
rclb
iret
cmpsb
popf
pusha
cmpsl
jo
dec
xor
outsb
push
pusha
in
pop
or
cmp
xorl
aam
cwtl
and
jbe
cwtl
test
mov
mov
pop
xchg
pop
or
xchg
mov
xorl
and
mov
jns
jae
mov
jne
insl
outsb
das
aaa
sub
fs
inc
imul
mov
jo
jge
mov
inc
outsl
arpl
xor
loope
jge
inc
pop
push
xchg
pop
inc
cmp
and
repz
cmp
adc
or
cmp
jo
jecxz
mov
js
xchg
cmp
scas
mov
aaa
xchg
push
add
repnz
arpl
jmp
aad
xchg
int3
mov
cmpsb
cmp
sbb
mov
nop
xchg
cmp
testl
xchg
mov
dec
sbb
test
push
mov
add
leave
add
xchg
call
xchg
add
pop
and
add
pop
dec
push
in
pop
mov
nop
pusha
fs
cs
fs
mov
mov
mov
fidivrs
pop
cwtl
push
mov
fdivl
adc
jo
dec
rorb
js
mov
mov
jmp
loope
out
adc
andb
ljmp
jl
add
adc
dec
roll
lahf
xchg
or
push
xor
sub
test
cmpsb
ja
jo
mov
pop
or
mov
fs
fcomps
pop
cmp
cmp
or
imul
loope
pop
dec
outsb
mov
mov
push
insl
jmp
push
inc
push
adc
push
xor
and
xor
dec
mov
sbb
inc
outsl
lods
fs
add
or
sbb
jp
add
adc
adc
fstl
cld
push
movb
je
nop
cmp
loopne
xor
cmp
fidivl
in
dec
push
add
push
sub
xor
xchg
rclb
inc
roll
xchg
sub
cmp
icebp
sub
fstps
mov
mov
ffreep
adcl
or
mov
push
out
dec
loopne
and
orl
pop
add
das
gs
lcall
push
or
je
call
or
in
rolb
leave
js
push
popa
orl
insl
sbb
pusha
push
es
pop
lea
mov
cmp
cli
loopne
adc
shrb
pop
fildll
xchg
dec
mov
mov
inc
dec
or
fadds
dec
push
push
push
fcomip
icebp
cmpsl
int3
int
aam
dec
inc
mov
inc
inc
cmp
jne
or
popa
mov
add
push
push
stos
in
and
xor
ss
dec
add
in
xchg
xchg
mov
add
xchg
inc
or
inc
mov
mov
inc
and
inc
add
inc
add
in
in
movb
and
push
sub
int3
cmp
mov
inc
or
mov
insb
fcmovnbe
cwtl
data16
push
cmp
push
push
add
movsl
xorb
js
push
nop
bound
cmp
cld
inc
aas
insb
mov
lret
push
js
lcall
arpl
hlt
data16
push
lods
mov
jge
mov
pusha
jl
dec
loopne
jecxz
mov
loop
cld
push
in
push
pop
jnp
int
mov
cmpsl
fsubr
movsb
mov
insb
mov
add
mov
ret
in
roll
es
mov
sub
testb
push
jae
enter
addr16
jg,pt
jbe
lods
pop
sub
xor
or
dec
sbb
mov
pop
orl
inc
push
repnz
mov
shrb
fidivs
jo
clc
mov
add
adc
xchg
scas
mov
mov
dec
sbbb
dec
mov
push
jmp
stc
jg
mov
dec
aas
xlat
mov
fdivs
fiadds
subb
leave
and
mov
sarl
shl
nop
add
pusha
jle
or
cs
stos
sub
pop
xchg
pop
test
clc
jg
fldt
je
cwtl
lahf
outsb
jnp
sub
dec
or
xchg
xorl
outsl
push
rcrl
movl
bound
add
fwait
lcall
jle
mov
sub
push
popl
xchg
in
and
sub
add
nop
add
in
and
adc
cwtl
movsl
push
fs
popf
xchg
cmc
mov
or
xchg
push
cmp
imull
adc
movsb
leave
mov
cmp
and
enter
ss
inc
pushl
xor
loopne
mov
std
mov
mov
and
call
nop
mov
imulb
popa
andl
xchg
pop
xlat
or
in
cs
cs
push
mov
loopne
cwtl
or
ret
or
lcall
push
movsb
add
test
push
lods
mov
mov
imul
sbb
mov
hlt
movsb
sbb
fcoms
movsb
lahf
data16
xchg
mov
shl
rclb
xor
in
in
call
lock
aam
popa
leave
shll
add
fstl
adc
add
aaa
mov
cltd
les
dec
outsl
add
dec
dec
sub
in
xor
push
pop
add
je
mov
dec
lcall
mov
dec
outsb
inc
movl
ss
push
outsl
pop
or
and
sbb
pop
imul
nop
add
cwtl
mov
sub
pushf
dec
stc
add
sbb
rorb
cmpb
sahf
or
xchg
into
icebp
jo
add
lds
hlt
lock
push
sub
ljmp
pop
add
add
and
pop
cmpsb
movl
inc
add
enter
push
ja
push
aam
mov
lock
pop
lcall
loopne
or
push
dec
fdivl
fstpt
and
inc
ljmp
ja
or
mov
hlt
fs
into
pop
mov
loop
adc
push
hlt
or
and
cmp
pop
insb
add
test
jo
cmc
addr16
add
and
sub
or
push
mov
jle
scas
add
push
or
jbe
cmp
rcrb
psraw
push
push
dec
aam
push
pop
fwait
aaa
fistpl
and
lahf
adc
xor
clc
and
xorb
shlb
push
and
adc
inc
dec
push
push
andb
inc
xor
lock
push
sti
mov
shrb
adc
dec
push
jge
or
ret
stos
pop
cmp
loopne
jmp
inc
inc
mov
xor
stos
cmp
dec
dec
fmuls
adc
rorb
rolb
fsubs
dec
or
inc
or
fisubrl
jle
mov
mov
push
aam
fsubrl
in
lret
push
cmp
rolb
test
sub
daa
pusha
and
insl
or
dec
test
mov
and
inc
int
lds
dec
xor
jecxz
dec
hlt
mov
jl
xchg
pop
adc
inc
and
fwait
xor
add
xchg
mov
sbb
hlt
sub
mov
push
cmp
cmpb
or
mov
add
push
lcall
xor
das
aas
mov
ret
ret
insb
mov
jecxz
jge
fldl
ds
adc
les
xchg
pop
inc
enter
pusha
nop
pop
inc
js
adc
mov
cmp
push
or
jo
cmpsb
add
jne
inc
xchg
and
in
rorb
cmp
sub
ja
pusha
fs
push
pop
lods
push
aaa
pop
lcall
divb
add
xchg
push
add
fbld
cmp
ret
pop
add
ret
ret
sbb
clc
fcomi
push
mov
scas
or
sbb
mov
fistl
jl
cltd
movsb
aam
mov
jo
xchg
nop
sub
fwait
jge
mov
cmp
jne
pushf
cmp
scas
xor
int
ret
adc
adc
and
add
pop
mov
xor
incb
out
and
je
or
xor
cmp
in
and
mov
hlt
lret
movsl
sub
mov
add
movsb
add
in
mov
mov
iret
add
and
call
pop
push
adc
fisubrl
ja
adc
mov
add
dec
inc
inc
std
inc
or
loop
inc
sbb
pop
xor
clc
scas
cmp
out
cltd
adc
pop
push
add
jne
add
fdivl
test
sbb
aad
ss
test
jge,pt
add
and
dec
imul
repnz
dec
movsb
mov
mov
scas
mov
mov
push
cmpb
test
jo
sbb
ds
mov
dec
dec
cmp
jo
jnp
enter
orb
pusha
and
call
jnp
jo
mov
daa
loopne
adc
insl
fs
addr16
push
in
add
and
jo
jp
adc
mov
push
je
and
bound
js
test
adc
and
inc
push
mov
repnz
pop
cwtl
pop
xchg
cs
iret
enter
hlt
mov
jae
pushf
mov
jo
stc
dec
fiadds
pusha
push
xor
daa
out
in
xor
jl
jbe
je
mov
cwtl
lds
mov
inc
ljmp
push
cmpb
xchg
loop
cmpl
jae
mov
pushf
dec
xor
mov
and
xor
sub
adc
addl
pop
inc
pushf
fnstsw
pop
rclb
fiadds
cmp
mov
push
inc
stos
cld
aas
and
inc
add
pusha
inc
add
push
inc
xchg
pop
lods
inc
cmp
mov
mov
cmpsl
cwtl
rcr
ds
push
outsl
jl
push
loopne
es
jge
in
outsl
bound
cmpsb
inc
inc
int
jb
outsl
pop
push
inc
mov
mov
imul
xlat
inc
call
lcall
sbb
lods
or
or
pop
sub
or
push
aas
fidivs
adc
sub
or
repz
mov
jo
xor
and
push
aas
fmuls
nop
push
push
push
test
mov
push
incb
fmulp
inc
jne
outsl
xor
pusha
or
sbb
cmpsb
inc
push
push
enter
aaa
dec
testb
lods
or
sbb
rorl
adc
fs
test
imul
adc
or
addr16
jae
pusha
fwait
pop
push
addr16
add
jbe
pop
in
js
inc
pop
bound
inc
scas
roll
sarb
push
hlt
pop
in
add
in
into
shrl
cmpsb
jp
iret
pop
mov
sbb
jb
dec
pop
pop
es
ja
lcall
inc
popf
adc
cmc
popa
ss
sub
and
inc
loop
push
js
push
out
mov
mov
pop
aam
or
aas
and
push
pushf
aas
pop
add
push
outsl
jo
jo
repz
neg
jge
adc
sbb
jnp
test
imul
cld
xchg
sbb
pop
bnd
pop
xchg
js
sbb
leave
add
rolb
jnp
ficomps
mov
push
int
jl
push
push
pusha
lahf
sbb
jnp
push
or
and
pop
je
mov
cmp
xor
add
outsb
inc
push
add
inc
mov
xchg
sub
pop
add
or
fwait
hlt
clc
xor
fldenv
fadds
dec
and
enter
xchg
insb
dec
lock
dec
and
jae
fmull
and
or
imul
inc
sahf
sbb
and
mov
fcom
shlb
or
int
adc
xchg
ja
orb
nop
or
and
adc
xchg
loopne
loopne
add
rcrl
fmuls
mov
daa
push
mov
sti
dec
dec
add
fstp
rclb
dec
dec
jb
dec
adc
sub
sub
rolb
mov
testl
inc
les
test
push
sbb
sbb
stos
cmp
hlt
add
push
imul
xor
sbb
test
fadds
aam
inc
inc
test
repnz
clc
or
arpl
mov
push
addr16
js
or
add
mov
mov
add
add
sub
add
sub
inc
lods
push
dec
jl
inc
push
mov
mov
or
pusha
movl
mov
and
cwtl
mov
lods
xor
fstpl
or
orl
test
adc
fmuls
dec
sti
and
aam
adc
fisttpll
aam
andl
inc
mov
xorb
mov
adc
cmp
mov
mov
dec
push
jmp
or
ljmp
mov
je
push
jbe
jb
adc
dec
mov
fcmovbe
inc
adc
adc
stc
fwait
jle
pop
sti
cmp
jge
mov
faddl
sbb
std
out
into
in
lea
mov
push
add
dec
xor
jmp
mov
mov
sub
jle
xchg
pop
and
mov
mov
add
mov
xor
fbld
std
mov
sub
ja
or
ret
sbb
dec
add
call
mov
ss
cwtl
pusha
icebp
sarb
mov
cmp
jmp
dec
jae
jo
jns
push
cmpb
cmpsl
ret
add
dec
mov
mov
xchg
insb
adc
es
fwait
je
push
jo
outsb
nop
movsl
nop
mov
jmp
cmc
dec
scas
push
test
jns
inc
sbb
xor
enter
cmpb
imul
push
movb
shrb
cmp
sahf
cltd
sbb
mov
cmpb
lcall
aaa
cmpb
lods
add
bswap
cmp
jmp
sbb
push
jo
add
fnsave
xchg
add
pop
xchg
test
lods
and
dec
xchg
sub
stc
or
or
mov
mov
cs
imul
xlat
xor
aaa
scas
mov
call
cmp
jbe
or
xchg
int3
push
dec
mov
dec
pop
dec
js
jnp,pn
in
dec
jnp
jge
push
dec
or
sbb
or
ret
pop
jnp
jne
aaa
sbb
adc
push
dec
mov
mov
jge
push
xor
pushf
stc
pop
dec
mov
jne
and
pop
test
cmc
add
inc
sub
daa
add
jg
clc
int
imul
inc
dec
jl
adc
jl
mov
xor
sbb
rcl
hlt
loop
and
jl
fsubrs
in
sbb
push
pop
inc
lcall
inc
or
aaa
jmp
daa
testb
sbb
add
sbb
mov
out
mov
std
sub
jae
push
mov
xor
push
pop
lock
test
push
push
iret
jg
dec
loopne
add
push
push
mov
mov
iret
jge
jo
jle
cltd
inc
cs
bound
lock
rcrb
out
xor
pop
addps
add
adc
mov
xor
sub
add
jo
mov
dec
ja
mov
fmul
outsl
dec
bound
clc
mov
inc
stos
sub
push
inc
pop
inc
cmp
cmc
pop
jnp
xor
popa
pusha
sub
ja
cmp
clc
in
pop
loop
loop
bound
cmp
adc
push
lods
or
or
adc
out
xor
mov
push
lea
or
cmp
xchg
mov
mov
xchg
xchg
xchg
xchg
adc
adc
xchg
xchg
xchg
xchg
push
pop
sbb
xchg
xchg
xchg
xchg
sbb
sbb
xchg
xchg
xchg
xchg
push
pop
add
xchg
xchg
xchg
xchg
add
add
xchg
xchg
xchg
xchg
push
pop
or
xchg
xchg
xchg
xchg
or
or
leave
enter
icebp
leave
leave
leave
leave
repnz
cmc
leave
leave
leave
leave
div
clc
stc
iret
leave
leave
leave
cli
sti
cld
std
das
iret
xor
inc
add
iret
repz
xor
sub
repz
repz
sbb
adc
repz
insb
or
add
cld
sahf
out
lcall
jns
out
in
fdivl
out
sahf
out
int3
and
sbb
out
sahf
mov
add
dec
repz
cld
stos
pushf
hlt
xchg
repz
repz
mov
test
iret
repz
jl
je
insb
les
repz
mov
cmp
rep
dec
movsb
inc
pushf
iret
repz
cmp
xor
sub
cmp
repz
jl
je
repz
rep
or
add
out
sahf
out
inc
push
hlt
dec
in
popf
out
sahf
inc
in
fdivl
sbb
dec
lahf
lods
movsb
adc
add
lods
ficoms
pop
out
movsb
ja
mov
dec
pop
xor
pop
dec
mov
das
out
lds
cmp
int3
lods
sub
cmp
test
or
orl
and
scas
mov
mov
push
mov
cmp
cltd
fwait
rorb
cmp
and
add
movsl
aaa
pop
out
sub
int
daa
xchg
scas
xchg
lret
nop
sbb
mov
adc
push
push
mov
mov
adc
sbb
scas
js
mov
dec
sahf
xchg
outsl
je
push
in
pshufw
popf
mov
enter
in
pop
fmulp
xor
inc
je
pop
lods
push
cmpsb
and
xchg
aaa
dec
push
scas
or
outsl
scas
and
and
es
into
adc
subb
in
dec
mov
sub
jb
scas
in
add
push
aaa
call
xchg
mov
dec
adc
jl
subl
shr
cmp
jg
iret
mov
add
scas
push
lods
adcl
mov
dec
xchg
and
fstl
pop
mov
push
das
mov
adc
add
push
jecxz
sub
add
or
adc
push
adc
adc
sbb
jb
or
bound
loop
cmp
cmpb
in
andb
pop
aas
xchg
movb
adc
outsl
mov
rolb
xorb
fwait
inc
nop
jmp
cvttps2pi
add
test
lods
fidivrl
mov
mov
loopne
sbb
lods
sub
or
and
and
sub
xchg
popa
xor
test
cmp
xor
mov
pop
adc
mov
outsl
pop
mov
hlt
mov
add
push
mov
inc
cmp
inc
adc
dec
jnp
or
and
aas
fwait
push
or
aaa
push
xor
cmpsb
jp
sub
and
xchg
je
mov
lods
pop
adc
xchg
sbb
into
pop
push
pop
add
push
xor
repnz
lcall
jbe
insb
mov
adcb
sbb
push
insl
or
mov
jo
mov
mov
shrb
lret
shlb
add
jnp
adc
or
xchg
pop
das
clc
add
push
ja
add
mov
or
mov
pushf
pop
push
adc
mov
add
push
add
add
or
dec
dec
push
push
xchg
pop
aam
btr
nop
mov
cmp
and
xchg
inc
push
xchg
jo
mov
mov
faddl
lret
or
fsubs
dec
fwait
movsb
xor
mov
lods
stos
inc
pop
fimull
fwait
dec
mov
lods
sbb
cmp
movsl
inc
imul
aam
or
adc
xor
mov
cli
movb
inc
movsb
lret
adc
push
push
inc
shlb
xchg
jp
sub
test
adc
aaa
cs
ljmp
les
push
enter
imul
and
inc
pushf
mov
test
mov
mov
or
push
dec
push
cmpsb
popf
cmp
or
jge
dec
into
dec
or
das
xchg
mov
pop
pop
pop
adc
cs
cmpb
mov
rolb
push
roll
mov
scas
cltd
xchg
sbb
pop
or
andl
cmp
clc
mov
clc
ficoms
enter
push
cwtl
push
or
inc
pop
jae
in
pop
adc
push
adc
sub
dec
clc
arpl
jno
sbb
jb
je
xchg
push
mov
sbb
jne
mov
jmp
dec
mov
mov
test
aas
pop
ljmp
pop
insb
add
sub
dec
jle
outsl
sbb
and
adc
adc
jae
fwait
maskmovq
mull
jbe
inc
sarb
inc
push
and
adc
js
cmpb
sarb
call
or
outsb
or
out
inc
cli
sub
insl
ret
and
xor
insb
stos
or
imul
add
pop
aas
adc
mov
outsl
add
arpl
insb
push
arpl
imul
imul
inc
outsl
pop
js
bound
add
es
jb
jb
cmp
or
sbb
es
mov
data16
es
adc
iret
pop
addr16
mov
sahf
addr16
add
mov
arpl
insb
daa
mov
imul
sti
ficomps
insb
das
je
cmpsl
sbb
popf
or
xchg
pop
lret
jo
daa
mov
in
out
je
jo
jb
arpl
sbb
sbb
outsl
dec
pushw
das
gs
mov
imul
adc
and
push
and
and
cmpsl
daa
and
adc
inc
jo
hlt
xor
dec
cmp
adc
push
add
mov
dec
rorl
inc
mov
pop
jno
pusha
jnp
iret
cmpb
daa
loope
adc
add
jl
or
and
mov
mov
lahf
dec
push
sub
fcomps
add
pusha
jbe
mov
js
rcrb
push
add
and
push
sub
insb
insb
push
jno
mov
pop
adc
call
outsb
sbb
gs
fstpl
call
lds
movsb
aas
push
icebp
movsl
push
dec
or
pop
sti
std
movsl
test
push
mov
subl
fs
lahf
nop
inc
pop
insl
rcll
nop
ret
inc
dec
sub
addl
push
sub
int3
lods
cmp
mov
scas
jmp
cltd
and
pavgw
adc
push
pusha
pop
xchg
jbe
push
add
push
pop
pop
adc
fcoms
jmp
sbb
insl
lea
sbb
adc
dec
or
nop
push
or
rolb
hlt
jbe
sbb
pop
fs
cli
add
cmc
mov
add
xor
add
add
aaa
pop
pop
or
or
or
or
or
or
iret
repz
adc
adc
repz
adc
sbb
push
cmp
sbb
push
pop
and
and
and
push
rcr
iret
sarl
push
sbb
cmp
cmp
repz
insl
jle
mov
mov
shl
cmc
push
sahf
out
lcall
jns
out
insb
jge
lahf
mov
jns
out
shl
out
cld
jo
out
or
testb
xor
or
lods
rclb
push
mov
or
push
cs
and
pop
adc
in
lret
or
push
mov
or
cs
and
and
sub
xchg
lret
sub
mov
adc
cs
cmp
dec
sub
xchg
lret
pop
dec
sbb
dec
in
push
sbb
push
mov
repnz
ja
push
push
sub
popa
imul
movsl
repnz
and
repnz
aas
and
and
and
and
and
cmp
outsb
out
mov
rol
cmp
test
addl
mov
out
pop
sub
cld
in
xor
rcll
fadds
call
out
outsb
js
lock
push
je
or
pop
push
mov
xchg
cmp
adc
push
add
and
add
pop
nop
pushf
lock
mov
adc
sub
je
jns
dec
daa
sbb
mov
add
stos
or
dec
addr16
dec
loopne
xchg
loopne
faddl
rcr
pop
cmp
mov
lods
cwtl
push
and
jecxz
stos
in
pop
shll
inc
mov
pusha
mov
pop
out
jnp
dec
std
daa
fs
sbb
mov
cmp
mov
aaa
daa
ret
adc
clc
pop
sub
daa
mov
daa
push
cs
cmp
dec
gs
add
clc
dec
popa
jns
jne
cmp
or
insb
adc
or
add
push
stos
adc
je
or
fstpl
je
cmpsl
nop
les
mov
ficompl
test
mov
add
pop
inc
mov
add
inc
inc
mov
pop
dec
inc
ret
pop
nop
xlat
inc
mov
mov
loop
adc
adc
sarl
jmp
jo
xchg
pop
or
or
jmp
mov
insb
xchg
pop
sub
sbb
pop
bound
add
mov
les
test
pushf
nop
xchg
inc
lock
test
push
stc
nop
lock
scas
pop
sbb
xchg
xor
push
adc
adc
ja
mov
adc
insb
xor
xlat
adc
jl
or
or
mov
pop
insl
add
push
and
mov
mov
sub
and
dec
fwait
imulb
into
in
add
pop
inc
adc
dec
and
sahf
out
mov
adc
inc
adc
adc
mov
mov
loop
nop
mov
mov
push
or
xor
cmpb
push
sbb
stc
ficoml
pop
add
insb
sbb
adc
mov
and
pop
test
add
jl
dec
testl
les
inc
bound
sbb
sbb
adc
rorl
push
lret
jno
in
pop
pop
out
sbb
mov
push
mov
imul
or
fcoms
pop
xor
mov
jmp
pop
adc
sbb
pop
enter
inc
dec
mov
push
fdivs
add
and
es
sub
push
jb
sub
and
and
sub
xchg
sub
xor
subb
inc
inc
pop
enter
dec
js
das
inc
dec
fadds
mov
xor
jb
xor
inc
sbb
ljmp
inc
pop
nop
sub
mov
inc
add
inc
sarb
inc
cs
faddl
push
int3
add
lcall
push
sbb
xor
and
repz
mov
fcmove
push
push
in
xchg
aam
rolb
or
out
das
adc
bound
lea
add
dec
cmp
or
lret
inc
js
pop
dec
or
push
or
faddl
addr16
nop
cmp
inc
and
arpl
jnp
mov
stos
inc
sbb
outsb
filds
sbb
mov
add
fildl
sub
push
cli
setnp
jl
fmull
pop
ja
jns
xchg
mov
inc
movsb
test
mov
sbb
and
add
mov
and
fcos
pushf
sbb
push
int3
fcmovu
and
mov
push
push
xchg
mov
js
sub
icebp
dec
ret
outsb
jae
adc
int3
out
into
ror
nop
lahf
data16
sub
inc
inc
dec
inc
repnz
fsubl
pushf
fucom
addl
add
lret
adc
enter
fidivrs
cmpsl
push
mov
adc
rcl
pop
icebp
sahf
xchg
mov
and
xor
lock
inc
lahf
add
bound
push
mov
mov
and
or
xlat
push
incl
sub
seto
inc
add
adc
adc
sbb
adc
mov
stos
in
imul
add
dec
mov
sbb
dec
jo
sysret
push
adc
adc
andl
out
popa
js
mov
imul
sbb
mov
nop
stos
int
xor
xor
je
lea
push
and
rorl
int
enter
inc
xchg
and
test
fcmove
pop
sub
nop
aas
or
add
cmp
and
and
and
test
xchg
inc
mov
rol
popa
adc
and
cld
enter
imul
xchg
fadd
and
movsb
add
cmpsb
mov
xchg
loopne
inc
push
enter
rclb
les
jo
add
add
and
cs
adc
push
lea
or
aam
add
push
or
mov
xchg
inc
imul
and
push
int3
ret
add
idivl
mov
cmc
jp
jmp
popf
and
mov
sbbb
addb
jmp
add
or
ret
aad
xchg
nop
js
or
popa
or
sub
jmp
cmpb
inc
sub
add
or
pop
add
and
jne
or
mov
cli
mov
adc
adc
xor
push
jle
js
lcall
and
or
mov
or
jmp
xlat
dec
mov
xchg
shrl
jnp
xor
jmp
dec
sbbb
daa
jns
arpl
pop
test
or
adc
mov
adc
xchg
add
adc
ds
jnp
shl
rcrb
fdivrl
dec
adc
ds
aam
pop
dec
or
cmp
sbb
jge
test
iret
inc
daa
insb
xchg
mov
mov
insb
outsb
pop
add
lea
add
mov
movsl
sbb
mov
or
mov
adc
add
aam
sub
imul
cmp
iret
xchg
dec
or
ds
movsb
adc
mov
shlb
sbb
aam
add
adc
fisubl
xor
in
sbb
adc
xchg
inc
and
sub
testb
pop
inc
js
sub
push
push
mov
jae
push
add
std
shlb
dec
pop
out
mov
mov
loopne
fmuls
mov
ficoms
adc
adc
xor
jecxz
pop
aaa
cmp
sbb
xor
pop
cmp
sbb
movlps
testb
icebp
jge
inc
xor
push
mov
sbb
dec
mov
scas
jo
repz
inc
pop
add
test
leave
scas
push
and
or
or
jae
mov
daa
lahf
xlat
insb
inc
mov
dec
and
cmp
pavgw
ret
pop
adc
push
or
add
lock
adc
mov
arpl
xchg
lea
add
fldenv
orb
xor
cmpsl
imul
mov
push
or
push
je
pop
inc
movsl
and
sahf
test
adc
inc
loopne
std
add
lods
loope
xchg
dec
test
jno
shlb
and
push
jns
add
int
mov
cmpb
aas
cs
dec
addl
fs
inc
sbb
inc
in
jl
pop
addl
add
adc
mov
add
mov
loopne
icebp
mov
rcl
enter
inc
outsb
pop
push
cli
inc
pop
cmp
test
adc
xchg
add
je
dec
and
pop
pop
dec
jmp
movb
push
cld
push
rcll
int3
add
cmp
adc
test
scas
cmova
adc
push
hlt
inc
inc
popf
jne
adc
mov
push
or
mov
pop
mov
push
jnp
push
adc
popl
sub
or
mov
aas
pop
sub
mov
sub
jmp
insb
test
inc
cmp
xchg
xor
les
inc
pop
popa
adc
add
cmc
inc
popf
mov
add
xchg
pop
test
sub
jno
decl
xchg
shll
das
mov
mov
xchg
lock
xor
and
push
inc
subb
popa
or
cmp
roll
mov
dec
ds
lock
push
or
pop
orl
loopne
dec
sub
cmovle
cld
and
pop
add
je
lods
fcompl
xor
inc
scas
dec
sbb
inc
in
inc
insb
adc
push
rolb
mov
inc
xchg
lret
xchg
mov
nop
mov
cmp
dec
or
dec
push
fidivrl
inc
das
call
sti
or
push
push
xor
and
mov
fildll
cmp
je
mov
fistpl
dec
loope
loopne
aaa
mov
loope
xor
sbb
mov
leave
mov
push
das
inc
mov
int3
adc
loopne
mov
je
lahf
add
lock
pop
test
or
iret
inc
push
push
push
dec
dec
aad
flds
add
dec
mov
inc
or
fsubrs
push
pop
out
xchg
mov
inc
xor
or
add
adc
test
xor
dec
or
adc
cmp
jne
adc
cs
stos
lods
jmp
push
fs
jb
cmp
movl
pushf
lea
push
bound
aad
cltd
jo
inc
push
mov
out
push
in
dec
or
loop
xor
and
xchg
or
jmp
mov
ljmp
into
dec
add
aas
daa
lods
fists
repnz
inc
and
fbld
jbe
sub
jo
pusha
and
sarb
nop
cld
push
neg
add
add
and
pushf
cld
inc
add
pop
inc
mov
inc
lock
pop
and
mov
or
test
pop
and
sti
pusha
add
mov
outsb
jae
int
js
inc
dec
jmp
mov
push
ja
xor
xor
inc
pusha
inc
iret
adc
dec
sub
rcrl
push
in
push
add
loopne
pushf
sbb
in
jbe
test
cwtl
aas
or
ror
jbe
jb
push
clc
cld
jg
in
fs
int3
in
orl
shl
loopne
iret
repz
mov
pop
popa
cmp
repz
jno
orl
dec
mov
xor
xchg
fcmovb
fwait
shrb
stc
aaa
fs
loop
add
inc
lcall
and
mov
in
inc
lahf
ret
arpl
inc
imul
adc
dec
les
xchg
jae
jecxz
push
push
adc
notb
inc
fimull
xchg
sbb
adc
sbb
cmpl
mov
sub
cmp
clc
push
mov
mov
add
dec
push
adc
cmp
pop
out
repnz
mov
adc
push
and
aaa
add
jp
or
push
fistpl
and
mov
adc
lea
rcl
or
and
lret
rcrl
rorb
add
mov
mov
inc
jo
and
cmc
loopne
inc
mov
arpl
fidivrl
mov
lock
jl
scas
nop
add
add
in
rorb
adc
and
dec
outsl
dec
mov
nop
jae
jnp
and
adc
sbb
movb
pop
inc
inc
insl
cmp
lea
xchg
pop
sbb
push
call
enter
add
or
fstl
jo
lods
dec
push
cs
and
and
dec
test
dec
mov
loop
push
cli
or
adc
dec
movsb
push
out
or
xor
pop
fs
out
dec
and
sbb
xor
fldt
xor
dec
insb
cmp
add
dec
shl
sub
clc
or
popl
xchg
push
in
xor
pop
add
pushl
mov
icebp
incl
inc
dec
sub
and
sbb
push
pop
sbb
cmp
test
xor
and
dec
dec
xor
add
sub
ret
rcr
adc
push
in
adc
outsl
xchg
or
daa
or
scas
call
mov
nop
inc
inc
xchg
adc
out
and
inc
fs
cltd
lock
jle
mov
jecxz
mov
stos
pop
outsl
inc
add
mov
inc
out
push
or
imul
ret
inc
jns
sub
mov
cmp
pop
push
mov
or
stc
pop
js
test
cld
mov
insl
jo
inc
call
jo
sub
and
call
push
adc
cmpsb
cmc
and
pop
popf
adc
pop
nop
jmp
es
aaa
xchg
sbb
cwtl
shrl
and
test
xchg
inc
mov
or
xor
xor
add
inc
js
jg
or
mov
dec
push
pop
inc
cmc
and
out
aam
imul
cmp
decl
je
or
je
xor
pop
sbb
jmp
pusha
rcl
pushl
lock
cwtl
in
popf
mov
pop
inc
push
inc
lock
and
imul
sub
inc
cld
mov
popa
and
pop
and
push
add
neg
inc
add
and
dec
pop
pop
test
out
adcb
aaa
loop
out
into
in
xor
subl
xchg
push
fiaddl
mov
xor
mov
xchg
dec
dec
dec
inc
dec
push
add
dec
jmp
mov
rorb
or
loop
xor
test
decb
or
movsb
movl
popl
sbb
xchg
out
out
jecxz
xchg
mov
inc
loope
mov
cmp
jne
sub
jne
in
and
in
mov
insl
je
and
aas
add
pop
stos
or
cmpsb
in
jmp
xchg
out
lock
or
lea
or
daa
lcall
pushf
cld
dec
test
and
push
aam
sub
cmp
push
sbb
repnz
inc
adc
mov
pop
lock
in
test
pop
mov
test
ret
cmp
loopne
jmp
cmc
or
add
dec
roll
add
sub
and
xlat
cmpl
dec
js
loopne
sbb
shlb
jb
mov
loop
xor
mov
mov
clc
mov
or
mov
push
nop
ret
imul
push
repnz
subl
push
mov
cld
jns
loope
adc
shlb
cmp
dec
inc
filds
pop
loopne
inc
out
and
inc
fisttpll
cmp
icebp
mov
xchg
mov
push
jns
sub
lahf
xchg
add
dec
insb
adc
jns
lea
insl
xchg
push
popa
roll
mov
adc
insb
popa
mov
outsb
adc
adc
bound
jae
and
push
notl
inc
add
adc
mov
and
adc
pop
jnp
int
pop
adc
and
or
orb
mov
jns
mov
and
cmp
rorb
iret
inc
inc
cmp
inc
hlt
cmp
sub
mov
inc
insb
push
mull
inc
es
xor
test
shrl
lock
shll
push
test
add
lock
lock
jl
mov
insb
mov
push
adc
or
push
jg
icebp
pop
in
inc
dec
inc
icebp
inc
lock
xcrypt-cfb
cmpsl
fs
adc
js
test
cmp
add
dec
mov
pop
insb
inc
mov
dec
leave
pushf
pop
clc
dec
or
inc
mov
push
shl
inc
jnp
mov
clc
out
pop
sub
or
inc
insb
repnz
sbb
push
xchg
sub
sub
sub
shlb
repz
add
cmpl
outsl
add
enter
cs
push
sbb
mov
pop
nop
movl
mov
dec
aam
in
aaa
test
and
ds
sbbl
sub
dec
movsb
add
inc
nop
sbb
andl
and
jo
fstpl
mov
cmp
add
inc
jecxz
or
jle
push
insl
bound
popa
jns
bound
jg
mov
test
inc
jo
fs
xchg
mov
push
dec
push
imul
popa
jmp
push
jle
repz
or
lea
or
loopne
pusha
sub
dec
add
neg
add
or
mov
in
imul
ficoms
add
mov
push
or
push
inc
in
or
and
push
popa
in
notb
mov
adc
enter
sbb
mov
imul
test
xchg
shr
or
mov
mov
mov
and
pop
mov
testb
dec
inc
sub
and
push
sub
jae
and
adc
adc
xor
aaa
dec
dec
movl
insl
adc
adc
jl
js
xchg
push
cwtl
xchg
add
ja
stos
loop
hlt
js
inc
aam
insl
dec
or
push
or
xchg
into
push
daa
lea
add
out
imul
pushf
add
jbe
idivl
adc
jns
subl
nop
push
shr
or
pusha
dec
cmc
test
push
or
lret
xchg
ret
cmpsl
xor
pop
faddl
scas
dec
test
testl
lds
xchg
xorl
int3
jbe
add
add
mov
iret
mov
fsubrs
add
pop
inc
pop
mov
lea
push
xchg
ja
xchg
popl
pop
add
pop
iret
add
pop
or
popa
repz
imul
cmp
rol
mov
nop
clc
psrld
or
xor
inc
inc
pop
cmp
pop
stc
cmpsl
out
adc
sbb
or
mov
mov
bound
das
inc
push
popa
jb
gs
stc
pop
test
outsl
arpl
cmp
xchg
pop
icebp
inc
fs
iret
stos
mov
sbb
iret
cmpsl
in
adc
icebp
inc
hlt
cli
mov
lods
cmp
shll
in
mov
js
add
ja
or
sub
add
add
clc
lea
bt
jno
sub
add
lods
xchg
adc
add
push
push
loopne
adc
ret
or
mov
inc
adcl
and
xlat
iret
mov
or
or
clts
mov
das
pop
sbb
add
sub
cld
pop
rcr
add
or
sbb
ret
add
fsubs
outsb
test
pop
push
xor
out
add
scas
out
and
inc
push
in
addl
addr16
repnz
adc
gs
imul
sbb
popa
lret
syscall
push
ret
inc
sub
cmpsb
bound
rorb
addb
loop
jo
test
or
repz
out
add
adc
popf
fadds
xchg
loopne
mov
insl
lea
add
mov
push
inc
pop
in
in
cs
inc
int3
xor
adc
hlt
out
add
push
nop
lahf
das
repz
or
andps
jg
and
add
pop
add
add
push
sub
test
xchg
sub
inc
add
add
add
or
or
mov
mov
mov
mov
lahf
sbb
cmp
inc
filds
ret
aas
in
in
jmp
ljmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
fdivrp
fdivr
fcmovb
call
ss
xlat
call
call
call
call
call
call
call
dec
fdivr
pop
fadds
into
dec
dec
dec
dec
icebp
dec
hlt
sub
imul
shrl
sbb
loopne
mov
dec
repz
jo
call
repnz
out
jo
cwtl
mov
cmpsb
pop
fdivs
arpl
mov
sarl
add
push
sbb
dec
pop
inc
pusha
idivb
push
lods
es
bound
push
push
test
cmpsb
dec
push
js
in
add
push
sbb
out
xor
cld
dec
dec
inc
inc
push
lahf
out
cmp
mov
pop
ds
fldcw
popa
mov
push
sahf
mov
iret
loopne
xchg
xchg
shrb
push
adc
idivl
mov
aaa
nop
pushf
idivb
mov
enter
lea
pop
pop
sbb
fwait
xchg
or
xchg
movsb
pop
sbb
fs
inc
sbb
in
pop
pop
bnd
dec
cmp
add
pop
push
inc
aas
dec
aam
rcl
add
mov
js
lock
add
call
aas
incl
adc
adc
ror
pop
div
dec
push
fs
push
les
mov
adc
cs
mov
jo
xor
or
test
xorl
pop
pop
sub
int3
or
push
dec
jg
add
and
inc
mov
and
add
rolb
loope
adc
lret
divb
je
and
mov
nop
lods
movb
stos
dec
loopne
jns
sbb
sub
outsb
mov
insb
sub
cmpsl
jge
jg
push
xchg
pop
pop
or
hlt
add
mov
inc
repnz
paddsb
addl
jbe
sahf
mov
push
pop
test
mov
repz
mov
adc
dec
pop
adc
sti
aaa
out
adc
add
rclb
push
ds
pop
add
call
add
add
add
nop
mov
mov
jbe
adc
sbb
sbb
ljmp
mov
cs
lcall
push
mov
mov
mov
mov
mov
mov
mov
mov
and
jg
mov
mov
mov
mov
mov
mov
add
push
mov
xor
subl
lret
dec
clc
call
inc
inc
inc
inc
ret
push
lcall
mov
inc
adc
notb
pop
lcall
mov
mov
mov
push
iret
sarl
hlt
inc
mov
lahf
out
cmp
lock
pushf
pop
lea
loopne
jl
dec
xchg
out
jl
xchg
push
sub
in
jge
shl
lcall
lahf
out
hlt
loopne
fwait
mov
and
xor
shrl
mov
sbb
pushf
out
fidivrs
push
cmp
dec
dec
repz
push
lods
hlt
sbb
cwtl
pop
jnp
sti
cmp
sbb
je
cmp
jl
call
push
pusha
push
jo
cwtl
lahf
jl
ror
mov
push
aam
jge
add
xchg
ss
out
insb
inc
xchg
push
cmp
insb
mov
fldcw
int3
mov
sti
xor
mov
push
fcoml
lcall
pusha
data16
lods
xchg
xchg
xchg
in
jge
mov
aam
inc
movsb
xchg
lcall
rcl
into
mov
jp
pop
jno
xlat
xchg
scas
dec
js
stos
cmp
push
popa
adc
and
scas
add
das
add
imul
push
mov
testb
in
in
or
or
mov
sbb
cs
icebp
cmp
adc
or
aas
and
or
sub
push
push
pushf
mov
scas
jl
mull
ret
daa
in
or
js
in
fimuls
lods
cs
mov
ja
or
adc
pop
rolb
bound
orb
mov
pusha
or
in
insb
jp
sbb
or
mov
fimuls
scas
mov
idivl
lret
mov
add
mov
add
jl
in
cmp
pop
push
pop
push
mov
mov
and
leave
or
scas
cld
or
call
sub
inc
or
inc
pushf
pop
mov
outsl
cmp
push
add
xor
fwait
add
and
sub
add
and
sbb
pop
mov
aam
cwtl
mov
test
mov
cwtl
cmp
repz
adc
and
repz
repz
bound
inc
sbb
jl
lds
sub
lock
or
fcomps
add
stc
sbb
stos
push
int3
ret
into
fnstcw
fisubs
fldcw
fldt
inc
ffree
fnsave
fisubrs
out
pushf
test
cmp
jb
or
aam
xorb
dec
push
adc
aam
adc
push
jmp
aas
adc
add
lea
mov
rorb
jno
jb
cltd
lcall
sbbb
pop
cmp
push
adc
push
mov
mov
and
sbb
pop
lea
add
mov
dec
xlat
ret
and
inc
popa
rcrb
out
movl
lock
inc
testl
icebp
mov
sbb
jne
and
outsl
pop
and
icebp
sbb
pop
insb
add
faddl
jne
xor
push
insb
pop
pop
cmpsl
sub
rol
shll
imul
adc
data16
pop
aaa
sbb
pop
sbb
push
push
add
loopne
lahf
push
or
pop
jns
pop
jb
xchg
lock
pop
daa
xchg
or
lods
test
daa
test
cmpsl
or
cmp
andl
push
inc
dec
shl
jl
push
inc
push
inc
daa
loopne
cmp
jo
daa
or
mov
insb
popa
clts
pop
jo
add
xchg
dec
outsl
pop
es
mov
daa
dec
push
jo
imul
pop
xchg
and
mov
popa
dec
add
out
push
movl
sub
push
das
dec
mov
imul
fidivl
daa
mov
sbb
bound
ficomps
inc
add
push
adc
jae
sub
lret
dec
mov
and
mov
mov
cwtl
lea
add
xor
add
lcall
cmpl
js
out
push
jne
mov
pusha
pusha
pop
rclb
jecxz
sub
mov
je
or
mov
xor
fwait
sub
inc
scas
push
adc
fs
movsb
verr
imul
sub
inc
push
push
inc
rcr
inc
inc
and
addr16
in
or
loop
aam
sbb
aam
mov
push
or
add
cmp
jl
daa
cmp
mov
rolb
pop
clc
mov
cmpsl
adc
dec
dec
aaa
lock
and
add
aam
push
xchg
icebp
xchg
add
xlat
lock
push
cmp
adc
jno
hlt
insb
pop
pusha
push
push
jo
in
xchg
mov
dec
call
sub
sub
arpl
cmpsl
push
xor
dec
loop
jne
dec
push
cmp
cmp
imul
dec
adc
push
push
mov
push
or
sbb
inc
leave
add
mov
sbb
outsl
adc
or
adc
lcall
sbb
and
cmpsb
imul
add
mov
test
popl
xor
and
xchg
mov
fiaddl
lock
shl
mov
and
aam
cmp
out
inc
jg
je
sub
cld
mov
mov
sub
dec
je
inc
dec
adc
ja
xchg
int
push
bound
push
add
pushf
sbb
add
xor
fucomip
adc
add
lea
cmp
sub
or
lock
ret
sbb
pushf
sub
add
pop
sub
pop
and
pop
cmp
add
in
cwtl
and
and
mov
fdivp
jmp
or
inc
sbb
dec
push
in
xchg
pop
scas
adc
lods
inc
pushf
mov
insb
lock
pop
mov
inc
sbb
cmp
nop
loop
sbb
test
or
inc
jns
pusha
roll
les
jmp
mov
aam
push
out
rdpmc
or
add
mov
pop
xchg
add
pop
and
sbb
push
jp
and
mov
cmpsl
cmp
test
js
mov
movsb
push
je
fsubs
dec
test
sub
rclb
mov
pusha
inc
mov
xor
xchg
popf
and
inc
xchg
push
jno
pop
adc
adc
imul
fcmove
test
push
pop
push
insb
insb
adc
lea
sub
push
pop
pop
inc
popa
or
popf
enter
lds
popa
in
and
enter
pop
xor
pusha
jo
add
add
add
xor
mov
lock
or
sbb
pop
stos
clc
dec
push
sub
mov
mov
jle
or
cmp
pusha
rorb
add
div
ficoms
jl
orl
xchg
jae
dec
rol
or
daa
fimull
sub
jne
cwtl
cmpsl
push
sub
clc
pop
sti
mov
cmp
mov
ss
inc
test
pop
mov
or
push
jp
jmp
ja
sarl
jb
pusha
jl
hlt
movb
cmp
jne
xor
imul
xlat
les
pop
push
add
hlt
jmp
or
jle
in
push
rcll
ret
adc
pop
adc
xor
sub
lret
dec
idivl
insl
cmp
or
inc
dec
mov
nop
fdivrl
cmp
or
or
inc
jb
movsl
in
sub
pop
test
add
movsb
js
dec
lods
inc
jge
mov
hlt
push
push
ret
clc
jae
enter
or
aam
enter
mov
cmp
jecxz
sbb
inc
orl
mov
cmpl
cmp
aas
cmp
je
fwait
cmp
movsl
add
mov
adc
cmp
xor
inc
add
bswap
add
stos
ret
jg
lea
xor
cmpsb
testl
shl
cmp
adc
pop
loope
adc
xchg
add
sub
xor
test
xchg
mov
std
adc
out
jo
leave
or
test
movsl
push
lock
cmpb
and
sbb
rcll
call
sbb
cmp
lock
shr
xor
push
sub
jle
inc
sub
idiv
sub
test
es
rcl
or
sti
add
fcomps
mov
mov
sub
mov
xor
or
xchg
and
adc
or
and
cmovg
lea
divb
xchg
dec
add
cmpsl
inc
pop
ret
cmp
inc
jne
and
dec
and
inc
mov
cmpb
sbb
or
push
adc
imulb
in
sbb
hlt
or
pusha
or
xor
mov
ljmp
xor
sub
push
cmp
addb
les
push
push
dec
push
in
pop
inc
cmp
addr16
adc
movsb
sbb
ret
xchg
adc
jp
or
dec
jo
mov
popaw
inc
or
push
mov
xor
ret
push
dec
mov
xchg
movsl
test
sub
pop
mov
call
lret
sub
or
add
cmp
outsb
jl
sub
or
or
inc
popl
or
das
fdivs
test
arpl
jmp
push
and
outsb
xchg
push
pop
or
adc
test
xor
jae
cmpb
sub
mov
sbbb
mov
adc
xchg
pushl
add
je
out
arpl
ljmp
or
dec
mov
inc
mov
add
repz
dec
clc
mov
shrb
mov
js,pn
sbb
push
iret
push
imul
pop
pop
rcrb
jg
mov
push
shll
repz
loopne
es
addl
pop
pop
xchg
ja
cs
mov
pusha
mov
lea
and
add
fdiv
outsl
jmp
xchg
add
xor
scas
icebp
psubq
pop
add
dec
jmp
xor
cmp
popf
xchg
pusha
out
cmp
sub
pop
adc
add
push
add
push
insl
mov
pop
pop
jnp
fists
add
sub
jns
sbb
adc
or
faddp
sti
dec
push
mov
mov
cmovae
lock
lock
fwait
push
push
add
push
and
std
pusha
adc
mov
mov
add
jmp
popa
adc
in
ret
and
aam
mov
les
push
sub
or
add
mov
add
sbb
push
pop
inc
or
push
cmp
jo
loopne
aaa
xor
cltd
pop
pop
and
lea
adc
xor
sbb
inc
push
jmp
push
jge
insl
dec
lods
cmp
out
dec
inc
cld
jbe
mov
jo
and
or
stos
repz
mov
adc
fdivrl
push
mov
mov
cmpsl
sahf
sti
nop
adc
xor
xor
sbb
mov
push
push
adc
adc
insb
ja
dec
mov
mov
xchg
out
or
sahf
dec
cmp
lea
js
or
xchg
jno
test
call
wbinvd
cmovbe
mov
adc
and
xor
jnp
push
icebp
sbb
jmp
inc
and
sub
lret
cmp
adc
cli
imul
push
sbb
xor
insl
stos
rorb
adc
imul
dec
add
jmp
pop
dec
adc
popa
jnp
or
pop
sub
mov
adcb
or
inc
mov
inc
cmp
fmuls
mov
xchg
mov
lahf
sbb
inc
stos
dec
fs
xor
stos
dec
fcoml
mov
ljmp
pop
daa
nop
flds
cs
lock
lods
cmp
and
jecxz
das
mov
and
pop
add
loop
lea
cmp
adc
mov
push
pop
ja
pushf
aaa
imul
xor
inc
out
icebp
push
lret
ret
xchg
inc
dec
jmp
add
es
cmp
nop
mov
push
call
in
mov
push
dec
sub
add
out
fiadds
rolb
pop
jno
xchg
shl
xchg
dec
leave
or
fst
and
mov
shll
pop
xchg
mov
add
inc
adc
or
int3
js
and
jne
ficoms
ds
ss
push
sbb
and
xor
xchg
sub
daa
sarl
push
xchg
jae
or
push
add
xor
jmp
orl
push
ds
fcmovnb
inc
incb
adc
mov
add
pop
fs
mov
test
pop
enter
das
daa
movb
mov
in
push
sbb
adc
lahf
and
pusha
mov
or
xor
adc
push
inc
insb
or
rclb
xlat
pop
mov
inc
inc
pop
adc
cmpsb
cmp
sbb
jmp
and
or
loop
add
adc
or
stc
lcall
movsl
adc
adc
and
ret
mov
xor
arpl
movsl
pop
imul
je
test
in
in
adc
push
cmp
sub
mov
sub
adc
cmp
cmp
icebp
or
pop
or
mov
xlat
sub
or
pop
mov
push
movnti
add
in
add
andnps
pusha
or
sub
dec
mov
loopne
into
je
or
xchg
aaa
bound
pop
jp
xor
mov
mov
cli
sub
outsl
xchg
push
and
notb
dec
or
mov
dec
sub
pop
inc
imul
movsb
inc
inc
adc
and
addb
jne
je
ret
jecxz
fwait
popl
repz
dec
pop
add
imul
lds
fstl
push
mov
imul
mov
push
inc
cmc
push
enter
sbb
mov
mov
inc
lods
sbb
push
cmp
add
add
jge
mov
push
sub
pop
push
mov
jle
mov
jl
jne
ret
or
call
inc
fiadds
lock
inc
cs
cld
jl
nop
je
lock
and
jmp
add
sbb
ja
mov
dec
inc
jge
mov
jge
push
lahf
nop
xor
cmp
xor
jnp
hlt
mov
iret
xchg
cmp
imul
ror
shll
mov
pop
and
movsl
mov
xchg
sub
xor
cmp
pop
cmpb
sti
mov
sbb
push
pusha
xchg
into
cmp
mov
cmp
inc
push
inc
jge
sub
out
mov
push
sub
pop
idivb
roll
sub
mov
ja
inc
or
cmp
push
add
jns
js
fs
rcrb
orl
push
jg
xor
inc
sbb
fnstenv
cmc
and
pushf
clc
and
mov
dec
jne
xor
pop
or
xor
stos
shl
inc
xor
js
mov
ljmp
dec
out
pop
jmp
cmp
je
mov
test
jbe
push
negb
add
jge
cmp
push
or
adc
pop
push
mov
je
fdivs
cmp
insb
dec
mov
je
cmp
shlb
or
xchg
and
sbb
mov
mov
sbb
sub
adc
jecxz
in
and
or
cs
shl
stos
lods
or
xchg
and
add
and
xor
outsl
test
cmpl
daa
dec
add
out
sub
pop
pop
xchg
icebp
push
in
adc
adcb
sar
inc
incb
add
mov
inc
pusha
add
push
sub
lods
add
cli
in
iret
and
arpl
pop
and
enter
push
sub
stos
push
pop
inc
cmc
mov
out
rcrl
push
loop
sti
cld
fs
popf
mov
add
push
xchg
rcrb
mov
fadd
mov
mov
jecxz
push
cmp
sbb
and
insl
adcl
sbb
adc
dec
inc
sbb
sbbb
fsub
jecxz
cmp
xchg
out
add
mov
add
mov
ret
mov
les
das
and
jmp
ret
pop
sbb
push
adc
push
movsl
sbb
cmp
push
out
add
das
xchg
adc
inc
add
xchg
add
cmp
inc
arpl
or
and
jl
adc
sub
je
sbb
xchg
clc
pop
sti
dec
jne
cmp
mov
jmp
scas
cmp
push
shlb
pop
push
enter
aas
cmp
addr16
or
mov
lret
movsl
mov
pop
cmp
cmp
mov
or
push
push
mov
fisttps
loop
lcall
mov
jmp
je
mov
dec
dec
movl
push
mov
repz
push
pop
pop
pop
sbbl
adc
push
pop
add
jp
pusha
mov
inc
out
xor
push
add
xor
fs
stos
stos
test
sbb
and
ja
add
sbb
rolb
popf
cmp
xchg
add
dec
cmp
add
pop
or
jo
nop
nop
mov
cmp
and
mov
mov
jle
jmp
push
inc
insb
xor
lahf
xchg
mov
sbb
andb
push
pop
mov
mov
xchg
addl
xchg
inc
pop
inc
jne
fmuls
xchg
nop
and
filds
push
or
fildl
addl
pop
or
sub
cmp
push
leave
inc
pop
and
add
mov
ret
pushl
push
cmpsb
les
add
insb
jg
imul
fdivrs
xor
or
inc
pop
pop
or
or
outsl
arpl
bound
andl
mov
dec
push
push
subl
rolb
push
push
fldcw
mov
add
cmp
push
mov
inc
or
or
cmp
pop
sbb
xchg
in
mull
mov
push
cmp
mov
enter
faddl
jbe
push
xor
je
pop
cli
adc
add
sbb
xchg
clc
or
jmp
lea
dec
push
ljmp
aaa
xlat
dec
loope
adc
idiv
out
jl
sub
call
stc
push
in
pop
or
inc
xchg
or
adc
popa
cmpsl
aas
pop
add
jmp
and
jle
jne
loope
lods
or
das
cwtl
jmp
cmp
lcall
sub
xchg
rorb
and
test
pusha
sbb
inc
jecxz
pop
sbb
nop
jno
and
push
push
sbb
jg
pop
mov
push
je
or
push
inc
push
cmp
dec
sub
cmpsb
out
ret
imul
std
sub
ret
jne
cs
mov
push
and
mov
mov
push
push
dec
xchg
inc
push
jo
or
inc
or
dec
inc
mov
mov
leave
jp
icebp
sub
test
jbe
jnp
jne
nop
test
jne
push
or
loope
orl
sub
repz
mov
inc
inc
mov
mov
nop
inc
ror
inc
add
pop
xchg
mov
mov
dec
addb
pop
cmpb
add
fbld
test
mov
frstor
roll
cmp
cmp
xchg
rorl
xchg
loop
push
mov
popa
pop
xchg
sbb
mov
dec
cs
pop
and
xchg
push
adc
adc
xchg
add
dec
lcall
mov
enter
dec
sub
sub
imul
mov
mov
inc
ja
jg
ret
and
xor
push
pop
fnsaves
inc
dec
das
pop
dec
xor
jo,pn
xlat
das
dec
push
jno
rolb
mov
cmp
roll
xor
outsl
pusha
inc
lret
inc
dec
add
push
pop
dec
dec
push
xchg
dec
add
or
or
enter
in
outsb
pop
stos
scas
adc
cmp
and
pop
sub
dec
sbb
in
push
and
cmp
jns
sbb
mov
aaa
or
fisttpl
sub
push
sub
mov
cmp
insb
push
fs
addr16
aam
loope
pop
fnstsw
cmp
cli
clc
dec
and
mov
shl
out
rcrb
bound
or
push
jmp
adc
mov
jg
repnz
or
mov
imul
or
push
xor
mov
rclb
js
cmpsl
negl
rolb
pop
xorb
or
dec
mov
lea
cmp
mov
or
outsb
dec
add
add
mov
sbb
dec
fsubs
pop
pop
push
ret
cmp
inc
add
jecxz
push
in
add
lds
int
mov
jae
stos
or
rcrb
in
inc
xchg
pop
mov
pusha
clc
add
add
add
test
aam
cmpsb
mov
cs
ja
dec
sub
adc
mov
add
hlt
ss
std
cmp
lock
dec
push
enter
push
adc
pop
fiadds
add
or
and
adc
add
mov
mov
test
pop
mov
or
inc
add
push
and
pop
sub
dec
adc
push
inc
andb
in
inc
xchg
adc
push
fxtract
sub
push
imul
mov
push
mov
mov
adcb
sbb
mov
and
mov
sbb
imul
xchg
daa
pusha
sub
lods
add
cmp
je
xchg
jnp
sahf
pop
mov
push
mov
dec
subl
and
insb
outsl
mov
outsb
inc
mov
in
add
adc
inc
loopne,pn
and
pop
sbb
sarb
dec
push
aam
push
out
mov
add
pop
jp
cmp
mov
xchg
dec
adc
adc
loop
add
mov
std
nop
add
pop
ret
lcall
sahf
or
sub
dec
adc
mov
loope
push
push
fs
and
lods
or
or
pop
ret
xchg
and
push
mov
add
mov
pop
xor
mov
pop
adc
inc
pop
push
mov
xchg
out
pop
jge
mov
pop
push
add
outsl
or
push
pop
je
mov
jo
xor
inc
ljmp
aas
repnz
inc
testb
je
xorl
or
push
or
cmp
nop
ds
sub
or
js
lods
aam
out
test
and
sub
dec
repz
xorb
imul
adcl
cmp
xor
or
push
adc
sbb
inc
sbb
ret
inc
pusha
lea
aas
gs
ficomps
push
mov
xor
inc
jge
fs
rcll
arpl
pop
jbe
rorb
push
je
jl
mov
add
jmp
or
ret
pop
mov
testb
pop
je
mov
push
sahf
or
nop
lahf
dec
cs
push
add
or
pop
mov
lcall
es
sub
dec
pop
mov
enter
jo
add
cwtl
pop
sub
aam
daa
push
sbb
mov
dec
adc
or
adc
mov
lods
stos
rcrb
lds
pop
cmp
mov
lret
pop
imul
mov
adc
mov
dec
adc
aaa
mov
aaa
test
adc
pusha
shlb
leave
xchg
ja
cmpsb
test
inc
imul
push
int3
mov
xor
cmp
jns
or
aaa
adc
sarb
sub
aas
push
add
push
or
mov
rclb
daa
cs
je
mov
or
xchg
or
cmpsb
cmpb
pop
aam
aas
or
nop
cltd
nop
out
sti
sbb
mov
mov
dec
and
lcall
int
inc
push
cmp
mov
pop
xchg
andb
cs
dec
jb
xchg
pop
pop
or
cmp
enterw
fdivrs
data16
push
icebp
ja
out
push
add
add
add
or
add
xor
movsl
rclb
pusha
push
out
mov
into
dec
xor
addr16
insb
mov
mov
mov
daa
mov
push
xor
add
pop
xchg
ljmp
add
or
rol
in
adc
leave
je
cmp
mov
push
push
sarb
lock
test
or
repz
mov
or
test
add
in
in
sahf
dec
dec
mov
and
and
xchg
sbb
inc
daa
popa
push
and
fsubrl
pop
dec
and
or
pop
adc
fwait
jle
dec
inc
fsubrl
sbb
testb
or
repnz
sbb
add
mov
sub
pop
pop
xor
das
inc
data16
push
sbb
gs
mov
and
jo
jno
pop
xor
push
add
pusha
call
cltd
mov
dec
mov
and
addl
into
cmovb
pushf
pop
ret
sub
mov
movsl
les
mov
outsl
mov
pop
pop
ljmp
inc
in
and
popa
adc
fidivs
jecxz
cmp
pop
push
mov
fiadds
inc
pop
ret
inc
sbb
jo
or
cmpsl
xor
jl
jne
out
or
or
out
jne
dec
pop
imull
incl
outsl
add
xchg
dec
mov
aas
sbbb
stc
inc
inc
mov
inc
sbb
add
push
dec
clc
imul
enter
push
daa
sbb
jo
call
syscall
in
jne
mov
fcomps
and
psubsw
push
movsb
xor
pop
xor
je
inc
pop
mov
jb
cld
add
pop
pop
inc
add
mov
ret
clc
inc
jp
jl
rorl
lds
stos
pusha
iret
ret
mov
ret
mov
xor
adc
jne
jecxz
sub
int
push
js
push
adc
mov
xchg
add
sbb
sbb
les
jl
jo
add
aad
nopl
or
loopne
or
fcomps
add
inc
jo
adc
xchg
adc
outsb
xchg
push
movb
lcall
loopne
orb
mov
push
push
lret
mov
shl
pop
pop
stos
push
push
pop
out
mov
push
add
iret
mov
inc
pop
adc
adc
aas
xchg
sbb
push
xchg
xchg
push
sbb
sbb
pop
and
or
movsl
or
xlat
cwtl
cmpb
jne
fdivs
mov
mov
jo
jg
test
jl
fmull
fildl
fsubp
xor
pop
or
mov
loopne
and
rorb
adc
incl
gs
in
adc
or
outsb
add
sub
lahf
clc
outsb
or
push
inc
pop
sub
inc
lret
mov
clc
fsts
je
cwtl
jl
mov
push
insb
push
mov
jle
dec
pop
mov
jno
xor
out
shl
and
mov
mov
or
jb
sub
add
inc
add
dec
out
hlt
call
jecxz
inc
mul
xorl
mov
pushf
dec
jmp
inc
roll
and
jne
add
orb
clc
jge
ret
sbb
mov
mov
ficomps
mov
mov
loope
cltd
mov
push
shr
sub
mov
pop
addl
cwtl
inc
das
div
adc
test
add
lea
or
or
fbstp
push
or
add
ss
inc
mov
ja
adc
les
xor
add
add
lea
pop
loopne
add
sbb
cmpsl
jmp
sbb
fwait
pop
mov
add
sbb
dec
punpcklbw
add
push
in
dec
inc
repnz
cmp
sbb
jmp
lret
sub
pop
or
sub
sub
cmp
push
xor
mov
testb
mov
sub
cmp
aaa
call
jge
mov
inc
loopne
in
or
inc
in
orl
push
xor
pop
fs
fwait
dec
or
adc
sub
js
leave
call
repnz
iret
mov
sub
or
or
adcl
and
lock
cmp
inc
add
sbb
inc
add
add
je
cmpl
push
jp
lret
cmp
or
xrelease
sbb
loopne
stos
adc
shll
and
adc
fisubs
cmp
cmp
mov
mov
xor
xor
imul
int3
cmp
pop
inc
enter
mov
xlat
scas
cmp
addl
inc
ljmp
fwait
xor
adc
mov
push
fsubr
outsb
inc
sub
fmull
aas
movsb
test
sbb
or
xor
aad
push
jo
int3
push
pop
test
push
mov
daa
fildll
inc
mov
inc
ds
and
cmpsb
sbb
call
or
xor
lds
outsb
inc
mov
aas
lret
add
pop
icebp
hlt
sub
dec
sub
lret
mov
ljmp
movnti
push
sbb
mov
daa
ss
or
sbb
jne
push
adc
cld
adc
js
sbbl
imul
js
call
ret
data16
mov
popa
sub
iret
mov
xlat
jecxz
inc
ds
loopne
mov
inc
adc
adc
or
hlt
inc
dec
pushf
or
dec
xor
sub
inc
cli
cwtl
push
hlt
and
pusha
add
int3
and
pop
shrb
daa
pop
rolb
adc
add
ret
pop
cmpsb
adc
les
add
and
jb
cmc
pop
add
push
fdivr
mov
adc
mov
test
loop
push
pop
movsb
push
xor
add
add
xorb
sub
hlt
mov
orb
testb
cmc
bound
cs
fucomip
pop
xlat
cltd
xor
pop
mov
inc
or
push
inc
mov
dec
pop
add
sbb
andb
or
cltd
int3
mov
pop
clc
sbb
push
or
xor
mov
push
ds
outsl
sub
shrd
je
push
add
adc
or
add
pop
and
je
lock
je
pop
adc
shlb
insb
rorb
pop
repz
adc
xchg
push
sub
pop
dec
dec
mov
or
cwtl
pushf
or
pop
adc
xor
inc
push
add
pop
sbb
sub
xchg
pushf
sub
in
call
push
or
or
jns
sub
pop
jmp
sub
push
sbbl
add
lods
data16
cmpsb
adc
cmpl
aam
push
xchg
add
push
sahf
cli
repnz
cmpl
sub
mov
or
aad
loop
inc
jae
addr16
jmp
dec
adc
add
mov
fwait
mov
jp
punpckhwd
jmp
loope
scas
inc
in
sub
dec
mov
pop
mov
ss
or
sbb
andb
adc
sbb
cmpb
inc
insb
test
add
cmp
cmp
divb
mov
lret
dec
jle
lock
insl
shr
add
inc
jg
subps
filds
adc
xorb
xchg
imul
jo
repnz
movsb
mov
sub
add
pop
jmp
ret
test
fwait
das
fdivl
dec
adc
in
sub
ljmp
add
jle
push
jmp
xchg
cli
insb
adc
shll
cmp
jne
xor
movsl
xchg
inc
push
test
test
inc
fldenv
jb
add
clc
pusha
mov
insl
sub
scas
dec
popl
adc
and
cmp
push
pusha
mov
inc
adc
lods
sbb
nop
push
test
mov
jne
mov
je
test
add
jmp
push
cmp
lds
jbe
jo
cmpl
or
cltd
add
add
aas
mov
dec
adc
pushl
sbb
or
xor
scas
movsl
clc
xchg
jmp
push
xorb
lock
adc
dec
add
ja
mov
push
ss
xor
pop
aam
cltd
add
rcrb
adc
cmp
leave
pop
pop
xchg
clc
cmp
sub
dec
int
pop
out
lret
es
push
inc
mov
inc
nop
lock
dec
ds
mov
inc
push
dec
xor
cmp
movsl
insl
or
adc
push
rolb
test
adc
dec
sub
mov
pop
sbb
sbb
and
fisubrs
add
sub
int3
pop
inc
push
push
dec
push
mov
xchg
std
mov
fmuls
inc
pusha
xchg
testb
cmpw
add
in
jg
adc
or
arpl
mov
sub
out
xchg
stos
enter
icebp
dec
fcom
aad
movswl
mov
or
or
pop
adc
sub
shrl
jns
aaa
adc
add
xor
sbb
push
call
push
mov
jle
cwtl
xor
test
cmp
sub
fisubrl
pop
sbb
jnp
mov
mov
mov
lahf
xor
int
inc
pop
scas
mov
add
aam
or
xor
aas
hlt
bnd
dec
inc
cs
enter
cmp
or
loope
add
jne
es
loopne
mov
hlt
sub
test
orl
roll
loope
shll
add
add
inc
mov
jbe
sub
lahf
push
dec
test
outsb
lahf
outsl
and
sub
fiaddl
movsl
push
push
sarl
jbe
addr16
and
jnp
lods
call
jp
call
daa
ret
pop
aam
pop
mov
push
rcrb
dec
or
xor
in
les
push
cmpsb
add
shll
mov
pop
dec
xor
js
fisubl
push
sbb
push
xchg
lock
inc
in
decl
add
and
call
test
cmc
stos
add
dec
xor
mov
pop
out
outsl
add
mov
mov
or
xchg
jne
or
nop
xchg
ljmp
sbb
adc
inc
mov
xor
inc
jo
xchg
or
ss
iret
inc
push
les
movb
sub
lods
pop
xor
pop
ret
mov
outsl
sbb
loope
mov
pop
cld
and
je
push
lock
cmp
add
push
or
adc
movsb
pop
ds
adc
jle
adc
or
dec
gs
dec
or
dec
mov
mov
je
inc
clc
push
fdivl
jne
testb
cmc
and
movsb
js
ret
pop
pop
rclb
jne
mov
push
fs
in
push
shlb
push
inc
loop
add
dec
rorb
pop
jl
lods
pop
dec
adc
jp
cld
adc
jb
xor
aaa
sahf
jo
mov
frstor
je
call
mov
push
jo
pop
popa
mov
pop
mov
jl
inc
push
mov
add
mov
and
stos
mov
dec
adc
movsl
push
cmpsl
jl
push
aad
mov
sbb
idivl
lahf
or
mov
pop
mov
add
orb
xchg
cmp
out
pop
xor
jmp
or
pop
push
sub
aam
in
testl
test
pop
dec
addr16
insb
ret
xchg
sbb
int3
push
das
adc
cmc
sub
dec
xchg
xchg
hlt
test
xor
inc
jbe
pop
fistpl
ret
adcl
xchg
dec
add
sbb
dec
stos
mov
jmp
movsb
sub
sub
push
movsb
or
sub
sub
loopne
dec
loopnew
mov
lret
aam
mov
sub
cmpsb
fcomps
xor
je
data16
lods
dec
lock
js
pop
sub
loop
inc
dec
pusha
cwtl
hlt
cmp
dec
dec
push
mov
sub
mov
test
pusha
addb
push
pop
cli
movsb
loopne
mov
andl
sub
adc
or
sbbl
insb
push
xor
sbb
dec
and
sub
xchg
rcr
sub
jl
repz
in
push
adc
stos
lcall
fwait
je
addb
add
push
clc
push
loope
call
push
fs
rcl
sub
push
cmp
add
bound
inc
fs
sub
add
cmpl
in
iret
subb
outsl
xor
cmpb
or
mov
data16
or
inc
jl
dec
rcll
and
pop
inc
add
and
cmp
adc
mov
add
outsb
addr16
pop
push
stos
out
insb
add
pop
inc
mov
leave
rcll
aas
sub
jb
pop
and
inc
fwait
pop
leave
inc
or
in
sarl
sti
push
rclb
and
jb
ret
popa
add
inc
push
fnstenv
push
adc
inc
pop
incb
mov
xchg
popf
sbb
lock
adc
mov
xchg
pushl
xor
lret
sbb
loope
sub
popa
sub
xchg
in
scas
and
inc
sub
fcompl
jbe
mov
adcb
and
add
dec
xchg
mov
scas
sbb
enter
ret
inc
add
std
mov
jg
mov
add
push
inc
jg
mov
jmp
mov
mov
add
insl
cmp
push
add
gs
ljmp
xchg
rorb
or
dec
out
adc
sub
sub
nop
xor
xor
repz
jl
xor
and
jle
or
outsb
arpl
push
je
call
inc
or
je
add
jmp
bnd
in
dec
leave
fiadds
aam
int3
jecxz
sbbb
sbb
xor
jae
out
in
or
data16
push
dec
push
push
dec
adc
pop
xor
push
mov
cmp
add
testl
std
jmp
sbb
lret
add
mov
mov
adc
pop
out
sub
mov
mov
xor
hlt
inc
jnp
add
shlb
jo
xlat
cmp
js
pop
pop
xor
jns
aam
movsb
add
popa
sbb
or
or
hlt
aad
inc
push
push
lock
mov
aaa
mov
jmp
jbe
inc
and
jbe
jb
or
sbb
ret
jmp
inc
add
inc
push
out
sbb
loope
push
sbb
jne
xor
jnp
add
loope
fwait
sbbb
mov
inc
sbb
push
xorl
jne
cmp
addl
sub
call
and
sub
dec
pop
and
push
xor
loop
mov
mov
push
adc
pop
je
cmpsl
jno
sub
out
or
and
and
and
or
and
and
push
push
push
inc
or
mov
add
adc
loop
mov
lods
jo
lcall
test
popf
cmpl
jmp
dec
test
sub
and
cmp
fcoml
mov
jbe
mov
mov
sub
add
fs
insl
mov
sbb
mov
inc
ljmp
dec
adc
mov
jo
mov
adc
inc
loopne
xor
lea
das
inc
xchg
std
ja
shll
call
mov
lock
jmp
movsb
icebp
fs
xchg
rorb
cmpsl
sti
sub
arpl
jbe
pop
nop
neg
cld
push
jne
shlb
pop
mov
and
and
enter
sub
pop
fnstsw
xor
stc
sub
hlt
mulb
sbb
mov
hlt
jl
mov
repz
xor
testl
cmp
loop
mov
cmp
xor
outsl
sbb
gs
push
hlt
or
push
inc
out
xor
iret
loope
add
dec
add
mov
inc
push
shrl
and
lahf
cmp
jnp
sti
pop
lahf
pop
push
fcompl
adc
adc
adc
xor
movd
lods
pop
push
mov
and
and
dec
push
in
jns
addr16
nop
daa
mov
mov
inc
setg
jmp
pop
mov
inc
add
inc
add
cmp
setle
imul
and
adc
movsl
dec
mov
cld
push
pushf
sub
popa
cld
mov
sbb
rcl
rolb
dec
mov
cmpb
in
sti
pop
mov
popa
ljmp
lret
nop
add
ffreep
mov
inc
lock
pop
inc
mov
push
inc
sbb
sub
fs
test
and
addr16
jbe
push
ret
push
pop
xor
cwtl
add
in
mov
je
adc
cmp
pop
jle
nop
add
orb
fmuls
ljmp
aam
mov
xorl
out
push
mov
sbb
sbb
fmuls
std
add
in
aaa
enter
lock
add
mov
das
dec
xchg
gs
aaa
pusha
inc
or
and
cld
and
sbb
jne
push
or
icebp
mov
xor
add
test
js
or
jl
push
test
jb
sub
xchg
sbb
or
add
push
dec
mov
pop
add
pop
das
jnp
pop
add
lock
sbb
cmp
ja
push
imul
out
cmp
outsb
jl
mov
xor
jns
add
or
pop
jle
sub
lods
or
xor
paddsb
adc
push
sbb
sub
adc
cmp
adc
xchg
lea
sub
fs
repnz
pop
mov
insb
or
cmp
and
jnp
inc
mov
push
mov
pop
lcall
jae
repnz
push
lahf
mov
shrb
push
sub
sub
je
inc
ret
in
aam
xchg
inc
cmp
sbb
stos
pop
and
addl
mov
cmp
pop
lods
or
arpl
cmc
sub
sbb
subl
pop
loop
pop
cmp
jne
pop
call
add
add
cwtl
xchg
setl
sub
add
jo
cmpb
mov
sub
and
adc
pop
iret
jp
shlb
dec
or
dec
push
cmp
inc
into
add
sbb
jo
jge
push
sbb
add
lret
pop
sub
rcll
enter
iret
mov
xor
add
inc
jle
andb
pop
lock
ljmp
sub
addr16
cmpsl
jne
inc
jns
inc
pop
add
push
ret
adc
push
adc
cmp
pusha
js
inc
fcomps
adc
xchg
pusha
cmp
cmp
jne
push
out
inc
es
inc
ja
add
adc
pop
inc
dec
dec
cmp
lock
mov
fildll
pop
cmpsl
sbb
call
push
cmp
cli
push
push
jmp
pop
push
xor
inc
xchg
mov
pop
lahf
outsl
push
or
outsb
dec
outsl
pop
clc
pop
adc
add
enter
add
jns
sar
pusha
and
inc
mull
repnz
cmpsb
or
iret
test
mov
adc
jbe
mov
gs
pusha
nopl
es
or
push
jnp
jo
fistpll
inc
jle
inc
or
test
js
lods
sarb
incl
and
jne
and
jb
ds
mov
jl
mov
ret
clc
repz
pushf
fwait
or
push
dec
jno
ret
bound
push
cwtl
and
dec
pop
xorb
inc
push
and
call
xor
sub
sub
shl
lcall
aad
push
dec
xor
add
mov
push
jno
sbb
rcrl
mov
xor
add
sbb
mov
pop
sub
imul
cs
in
cltd
cmp
lcall
add
aas
mov
pushf
inc
mov
rorl
loopne
mov
pop
and
rol
cmp
orb
jg
adc
fsubrp
inc
nop
push
xor
pop
xor
push
adc
push
xchg
mov
into
jg
pop
add
das
leave
jbe
jne
push
xor
scas
test
rolb
add
dec
and
cltd
mov
and
mov
mov
inc
sbb
sbb
popf
rclb
int
push
dec
jne
or
sbb
sbb
adc
test
sub
ret
jl
je
shll
and
lret
mov
test
xchg
pop
cmp
sbb
inc
adc
outsb
js
mov
inc
adc
push
sbb
dec
or
iret
fwait
cmp
mov
aas
jmp
adc
jmp
lds
jbe
mov
filds
xlat
and
lods
test
arpl
add
mov
adc
clc
call
jmp
icebp
sahf
inc
and
cmpl
jns
mov
ss
add
push
or
pushf
or
sub
mov
mov
dec
in
daa
xchg
call
xor
dec
ret
and
popa
inc
sub
movzwl
or
scas
jbe
test
jo
inc
mov
insl
jb
mov
dec
add
xchg
xor
and
sub
sbb
in
jge
pop
pop
and
and
and
popa
mov
cmp
dec
filds
orl
pushf
and
popa
add
xor
imul
adc
jo
add
cmp
sub
es
fsubl
rolb
cmpl
inc
and
movl
lea
mov
sub
je
orl
xor
or
pop
adc
sub
call
movsb
pop
sarb
push
inc
dec
shll
adc
mov
pop
fcompl
icebp
mov
and
or
push
pusha
xchg
in
dec
add
add
mov
ss
mov
xor
dec
and
push
and
dec
mov
les
test
into
loopne
jbe
inc
call
pop
in
adc
adc
cwtl
lock
pop
xchg
nop
aam
testb
insl
add
pop
add
and
jmp
inc
dec
nop
jmp
ja
pop
clc
mov
lcall
add
or
pop
add
scas
inc
pushf
mov
jo
rclb
pop
mov
mov
mov
push
inc
xor
and
mov
aas
add
cwtl
cmpsb
dec
mov
imul
xlat
mov
sub
pushf
mov
bound
xchg
testb
mov
sahf
nopl
icebp
fnstenv
repz
fsts
mov
fcoms
xor
and
outsb
clc
adc
ret
and
fwait
xchg
jns
inc
incl
sbb
nop
fwait
push
in
jno
out
push
or
adc
cwtl
data16
cmp
and
adc
cwtl
mov
lahf
jbe
shlb
call
sbb
sbb
inc
jmp
daa
fs
mov
or
xchg
jnp
popa
sbb
insl
mov
lcall
stos
in
xchg
clc
inc
inc
cmp
mov
test
js
orl
push
or
js
lea
mov
adc
mov
das
xchg
jl
dec
push
pop
aaa
loop
sub
inc
imul
pop
clc
cmpb
js
add
mov
popa
jne
cmp
xor
pushf
mov
in
or
jle
les
pop
jmp
addl
enter
jns
jns
and
adc
leave
push
jnp
adc
test
iret
mov
jmp
adc
mov
adc
mov
sub
ja
fs
sub
adc
pop
sub
push
adc
pop
loopne
arpl
and
fwait
test
jle
mov
add
cmpsb
dec
andb
js
sbb
cwtl
movsl
sbb
jl
sub
pop
lcall
mull
mov
lds
repnz
fiadds
jecxz
mov
div
fiadds
shl
fdiv
pushf
mov
addb
xor
lahf
addr16
mov
andl
sub
inc
dec
jnp
push
in
pop
fsubrs
insb
adc
or
mov
adc
push
xor
dec
pushf
out
fcmove
mov
nop
xchg
icebp
test
push
mov
pop
outsl
je
popf
add
push
mov
or
cs
scas
gs
dec
icebp
mov
cmpl
adc
mov
and
repnz
xchg
or
jne
int3
ret
call
inc
sbb
xor
inc
sbb
shll
or
push
or
test
out
je
xor
hlt
test
lds
inc
rorb
shr
mov
or
mov
je
mov
cmpsb
cmp
je
cmp
and
and
dec
int
mov
add
mov
mov
add
lock
jmp
je
ret
sub
xlat
mov
and
mov
or
mov
mov
xor
mov
je
fisttps
arpl
inc
mov
push
pop
and
sbb
push
and
add
cmp
pop
xor
inc
cmp
mov
mov
daa
add
sub
mov
cltd
sub
ja
inc
inc
mov
ret
push
out
inc
ljmp
aam
pusha
lret
sbb
dec
daa
mov
cmp
or
add
push
inc
mov
rcrl
push
mov
frstor
clc
add
pop
cmp
movsb
call
mov
adc
popa
mov
push
rcrb
xor
inc
add
repz
xchg
hlt
sub
and
gs
movsb
xor
pop
in
mov
sub
lcall
mov
xchg
pop
pop
or
scas
ljmp
outsl
aas
popa
roll
inc
loop
lods
mov
sub
lods
daa
insl
cwtl
ljmp
ljmp
pop
mov
adc
pop
xor
lock
sub
and
xchg
pop
outsl
jo
adc
or
mov
js
sbb
adc
lcall
pop
and
push
mov
cmp
test
daa
push
cmp
js
sbb
call
pop
xor
ljmp
and
adc
mov
sti
enter
popl
mov
insb
idivb
cmp
jmp
pop
dec
test
and
test
jno
cmpl
test
in
add
mov
repz
test
daa
fbld
jo
mov
push
cmp
adc
jmp
sbb
jmp
dec
shlb
sbb
sbb
cmp
and
or
and
inc
ss
cmp
mov
in
jle
dec
dec
fldl
xlat
sub
test
lock
rcll
into
jle
hlt
in
das
jb,pn
add
jmp
cwtl
std
adc
movl
jecxz
fs
pusha
loopne
fs
movsb
push
cmp
adc
imul
cmp
inc
imul
pop
dec
push
filds
jno
lret
js
jno
inc
clc
or
sbb
inc
add
call
pop
repnz
sbb
fsubr
adc
adc
inc
inc
andb
rcrl
shll
jmp
jl
pushf
mov
push
sbb
movsl
dec
ds
test
adc
rorl
inc
or
sarb
cmp
mov
js
and
loope
sbb
inc
xchg
cwtl
test
test
insl
xor
sub
je
inc
sbb
or
and
xor
pop
cmp
push
cmp
adc
mov
xor
lret
fwait
test
gs
pop
fcomps
xchg
cwtl
movl
mov
stos
mov
outsb
popa
adc
sbbb
mov
or
rcll
mov
movsb
jl
sub
subb
fildll
rcr
shlb
fbld
stos
xchg
push
sahf
cmp
inc
std
movsb
add
call
inc
cmp
flds
add
pusha
add
adc
nop
inc
dec
mov
inc
dec
je
daa
sbb
shrb
mov
pop
rclb
mov
pusha
movb
jmp
jbe
sub
dec
mov
movsl
sarb
mov
insb
rcrb
shlb
scas
inc
imul
or
dec
cmp
mov
xor
mov
nop
adc
push
mov
push
sbb
fldenv
mov
dec
stos
sbb
or
popa
js
in
dec
or
push
fnstsw
pop
jns
mov
or
inc
fwait
inc
test
jo
lods
dec
sbb
and
add
outsl
cmpsb
sbb
pop
sti
in
push
xchg
or
hlt
inc
jmp
jg
or
stos
test
push
mov
add
ss
jno
pop
lock
test
in
add
dec
mov
xchg
loopne
hlt
test
negb
in
mov
and
push
and
lock
sbb
mov
pop
pop
setae
jmp
lock
mov
repz
ja
scas
lock
cs
rolb
cmpb
jo
jge
jecxz
inc
cmp
sub
inc
pop
mov
ret
jp
je
sbb
mov
fsubl
push
sbb
push
push
sbb
cwtl
and
sarl
arpl
lahf
popf
inc
adc
repnz
mov
mov
dec
pop
jb
pop
sar
pop
dec
jmp
and
push
jns
test
pop
mov
aaa
inc
and
bound
aas
mov
push
xchg
shrl
adc
fs
sbb
iret
shl
mov
stos
mov
sbb
mov
das
jb
stos
inc
aaa
rcl
rolb
push
outsl
and
push
inc
test
push
test
insl
add
daa
aas
sbb
inc
nop
les
mov
cld
shlb
sub
xor
xchg
and
repnz
or
dec
add
fildl
repz
sub
inc
or
scas
sbb
cmp
mov
aaa
rcrl
bound
mov
das
cmp
je
sbb
loop
xchg
sahf
sub
jne
push
rcrb
push
pop
call
pop
jp
add
scas
inc
jp
loopne
sbb
adc
mov
xchg
xchg
out
mov
inc
mov
dec
fimuls
push
sbb
shlb
dec
pop
scas
mov
and
daa
test
push
clc
sub
rcrb
adc
andb
mov
orl
xchg
or
ret
adc
fistps
pusha
jl
add
xchg
setb
cwtl
repz
mov
xor
xchg
mulps
test
pop
sbb
add
mov
cli
cmp
inc
pushw
dec
mov
hlt
jae
mov
and
or
stos
movsl
popf
test
mov
lret
sub
je
movswl
mov
sbb
mov
or
sti
pusha
sbb
js
pop
push
in
jns
cmpsl
js
add
jns
loope
sbbl
push
scas
repnz
inc
pop
daa
subb
dec
cmp
xchg
scas
xor
xor
out
add
daa
xchg
nop
loope
mov
xchg
jecxz
mov
jle
add
cwtl
cmp
out
cld
mov
jne
shll
mov
test
cmp
cmp
movsl
rolb
ret
jbe
adc
aam
pop
push
jae
lahf
jnp
shlb
xchg
adc
clc
add
in
jne
nop
xlat
inc
movsl
fs
jle
inc
add
cmp
or
popf
inc
cmp
and
add
sub
xor
sbb
sub
dec
or
xor
inc
or
pushl
xchg
shlb
enter
mov
adc
add
or
mov
sub
pop
mov
xchg
inc
ja
lcall
addr16
aam
pop
in
das
sbb
aaa
jno
sarl
movsb
pop
filds
punpcklwd
or
mov
mov
aaa
ret
pop
orl
psubb
iret
push
inc
inc
cmp
jmp
in
adc
cmp
ret
push
fwait
add
push
das
inc
xchg
adc
lcall
int
mov
jb
cld
xor
test
dec
rcrl
lea
addr16
pop
pop
sti
cmp
push
adc
popa
sbb
scas
aam
xor
lds
cmp
jne
push
insl
push
dec
std
mov
out
push
mov
pop
ja
int
sub
mov
lret
daa
adc
mov
and
subb
mov
adc
inc
xchg
jne
inc
add
and
mov
jecxz
daa
popf
push
add
push
adc
inc
mov
nop
xchg
cmp
wrmsr
push
mov
sub
or
and
or
sub
in
xor
cld
mov
mov
push
xor
insb
jno
sbb
arpl
xchg
dec
sub
test
inc
cmp
and
adc
pop
sbb
add
cmp
or
mov
ftst
xor
push
xchg
ja
cmp
sub
adc
add
adc
iret
xor
push
pop
push
mov
cmp
and
sbb
dec
iret
xor
fdivrl
inc
add
mov
cmc
push
ds
pop
sbb
incl
iret
inc
or
test
inc
shll
inc
or
xchg
inc
add
lea
jecxz,pt
jo
and
mov
or
inc
ljmp
dec
xchg
and
and
mov
jg
push
xchg
adc
sahf
fcomps
nop
pop
clc
xor
xor
sbb
cmc
push
gs
pusha
loopne
in
xchg
pop
mov
inc
xor
sbb
and
fwait
adc
adc
dec
sbb
dec
xchg
mov
addb
enter
iret
ljmp
clc
mov
clc
fistpll
adcl
or
test
pop
iret
xchg
sub
adc
inc
andl
jge
aaa
mov
xor
lea
shrb
rcrb
pop
dec
cmp
arpl
pop
cmpsb
sbb
add
ja
test
sub
add
and
dec
or
dec
test
add
adc
push
and
push
mov
aas
mov
test
std
mov
dec
dec
fcoms
pop
rclb
jbe
and
fadds
sbb
pop
std
or
je
mov
sub
cmp
enterw
das
fst
loopne
fnstcw
pop
inc
pusha
std
inc
sbb
aaa
push
jbe
pop
add
pop
sub
or
push
xor
stos
add
addl
add
ret
push
add
or
popa
adc
xchg
out
xor
cwtl
pop
cmp
jnp
enter
xor
fidivs
movb
ret
jle
mov
nop
in
xor
sub
arpl
mov
jns
mov
and
jp
movsl
subl
test
jne
adc
js
std
xorl
idivl
cli
add
popa
mov
mov
ret
les
push
cmpb
adc
dec
dec
pop
outsl
into
adc
iret
jle
cmpsb
mov
cmp
xor
sbb
das
es
pop
enter
cmp
pop
push
or
sbb
and
rcll
xchg
es
sbb
mov
pushf
test
jno
sbb
push
and
sbb
jg
movsb
mov
push
mov
jmp
jo
lods
repz
mov
mov
loope
dec
mov
push
hlt
jb
sbb
jecxz
xchg
popa
js
scas
inc
mov
daa
into
lret
cmpsb
xor
xchg
cmp
pop
sarb
push
outsb
xor
push
jbe
and
das
dec
pushf
mov
xor
inc
xchg
cmpsb
sbb
js
push
loope
cmpsb
test
mov
movsb
sub
les
ret
cmp
sub
and
outsl
fidivs
push
xor
jns
movsl
rcrl
xor
lock
mov
je
dec
and
or
std
add
push
push
push
stos
sbb
jp
das
xorb
or
mov
ds
cwtl
cld
jmp
pop
nop
adc
xchg
xor
testl
aaa
jno
or
mov
add
push
sarl
cmpl
xor
jb
or
test
pop
cmp
jmp
rol
or
xlat
or
push
into
stos
jne
lods
mov
jg
adcl
aam
adc
pop
xor
fwait
movsl
cmp
cmp
cltd
dec
xor
add
pop
inc
or
arpl
inc
adc
cmpsl
inc
mov
jl
popf
mov
ret
pop
sub
sbb
rclb
mov
push
addl
sub
out
add
push
add
xchg
mov
pop
add
xorb
mov
jp
stos
sbb
adc
cs
insb
adc
stos
add
mov
clc
sbb
rep
mov
shrb
or
je
adc
pop
jmp
add
push
les
popf
add
or
out
jl
rorb
add
inc
push
sub
push
push
mov
shll
adc
fists
fiadds
add
popa
add
add
pop
inc
push
es
pop
dec
push
sbb
pushf
pop
test
add
adc
iret
adc
ss
jns
test
mov
pop
clc
insb
or
mov
push
jne
sti
jo
adcl
and
and
and
addr16
repz
adc
je
xor
jecxz
jne
push
push
mov
es
sub
cmp
cmp
inc
aam
addl
js
mov
add
dec
daa
popa
jo
movb
xchg
lahf
xor
pop
fwait
push
sub
sbb
addr16
and
movsb
sub
lds
adc
jecxz
callw
das
icebp
xor
push
into
das
xchg
addb
and
xchg
dec
arpl
inc
loop
add
mov
jge
xchg
push
push
cmp
cld
mov
sbb
inc
jb
je
cld
cmpsl
jno
addb
add
sarb
sbb
dec
jmp
sub
sbb
push
loop
mov
or
mov
insb
mov
push
add
ss
pop
int3
enter
add
test
xlat
ds
jle
push
dec
dec
mov
jmp
lret
jne
dec
jo
ds
out
mov
cmc
out
add
push
inc
pop
add
test
adc
int
jl
cmp
sbb
xchg
rcr
sub
mov
adc
mov
or
sarl
sarb
inc
sub
loopne
add
les
cmpsl
add
lret
push
scas
and
pop
add
negl
lea
daa
mov
ret
mov
jmp
sub
and
mov
aad
sbb
sub
pop
jp
sbb
sub
xchg
pop
gs
hlt
sub
mov
xchg
lea
sub
mov
negb
dec
je
push
arpl
popa
add
mov
jno
test
push
in
and
fs
imul
jg
cwtl
sub
sub
sarl
rolb
dec
and
sbb
sub
pop
sbb
adc
mov
addl
sbb
dec
and
ljmp
sbb
sbb
dec
jp
xor
lods
rol
jmp
lahf
roll
adc
inc
mov
add
ljmp
jne
hlt
jne
xor
daa
push
xorb
call
xlat
pop
rorb
mov
sbb
lsl
pop
mov
cmp
or
inc
jo
xor
push
ss
push
and
cltd
cwtl
repz
ljmp
pop
push
insl
cmp
aaa
clc
faddl
mov
or
loopne
adc
push
fs
sub
adc
push
sub
or
jle
testb
push
push
test
or
data16
jle
adc
jl
es
mov
adcb
test
inc
adc
push
mov
lahf
cmp
ds
outsl
pop
xor
sub
pop
sub
rolb
cmpsl
imul
cmp
rcll
punpcklbw
xorb
outsl
inc
xchg
shufps
in
mov
ror
ljmp
mov
sub
loop
int
aas
xor
inc
xchg
in
inc
push
js
ds
arpl
loopne
add
mov
data16
adc
sbb
push
pusha
and
sti
xlat
lods
xchg
mov
pop
pop
test
xor
mov
ret
push
cmpsl
cmp
sbb
mov
jae
cmp
loop
jae
push
iret
movb
test
pusha
cmp
stc
sub
mov
pusha
pop
clc
idivl
enter
stos
xchg
cmpsl
das
mov
add
jmp
adc
xchg
add
add
test
xchg
xchg
or
cs
adc
es
hlt
je
into
adc
or
push
and
in
pop
xor
or
pop
dec
cmpsl
addb
popa
loope
add
addr16
rolb
nop
jge
adc
xchg
inc
sub
dec
add
fcoml
mov
mov
loop
push
cmpsl
test
push
pop
cmp
add
sbbl
xor
inc
mov
mov
enter
mov
pusha
dec
jne
xorb
adc
inc
sbb
popa
hlt
xor
in
mov
mov
mov
mov
mov
cltd
loope
add
fwait
pushl
mov
sub
mov
addr16
sub
lods
sti
jne
lock
ret
invd
or
out
inc
jb
mov
mov
jns
xor
and
cmpb
adc
or
out
jbe
xor
sub
jge
sub
xor
add
rcrb
int3
push
es
mov
add
repnz
adc
xchg
popf
les
jbe
xor
sbb
and
cmp
mov
sub
add
orb
xchg
or
cmc
lock
test
pusha
xor
pop
shlb
push
aas
idivl
lods
and
test
add
push
test
pop
push
movsb
mov
jns
adc
mov
outsl
dec
rcrl
or
adc
jne
sbb
or
cmp
ja
sbb
or
insl
or
cmp
pop
stos
pop
add
add
xor
test
add
ja
mov
mov
lahf
stos
sahf
movsb
pop
xchg
mov
out
inc
bnd
inc
and
std
xchg
insb
stos
sub
push
dec
dec
scas
sub
xchg
hlt
dec
cmpsl
sub
pop
in
ret
pop
add
rcrl
adc
clc
clc
xchg
out
shl
or
in
or
lret
or
insb
popa
adc
push
test
fmul
fmul
and
movsl
aam
xor
mov
push
inc
cltd
dec
int3
push
aam
cmp
test
mov
lods
lea
cwtl
and
xchg
popf
add
push
add
mov
lret
or
push
movb
mov
push
or
fdivl
pop
fdivl
rclb
inc
inc
pushf
and
xor
cmp
sub
shrb
or
sahf
insl
add
adc
cs
jnp
into
dec
mov
dec
mov
inc
loopne
repnz
mov
mov
cmpsb
repnz
push
dec
or
pop
mov
push
mov
sub
ret
fdivrs
pop
jmp
xor
jno
call
sbb
dec
dec
or
loopne
push
cwtl
outsb
push
adc
cmpsl
xor
mov
mov
neg
jle
adc
push
sub
arpl
sub
mov
inc
push
mov
cmp
fmul
adc
pop
movsl
or
mov
into
adc
test
pop
push
mov
push
loopne
xchg
sbb
mov
jle
mov
cmp
and
movsb
imul
jne
sbb
xchg
cmp
clc
xchg
dec
mov
sbb
shlb
dec
mov
and
rcll
enter
add
rorb
push
das
mov
sub
notb
sahf
add
mov
std
cs
adc
cmp
das
mov
or
in
fimull
push
enter
xlat
adc
jge
dec
sub
loope
cwtl
popf
inc
stos
repz
sub
repnz
add
sbb
test
rorl
aam
push
cmp
mov
adc
fs
mov
orb
lds
xchg
jno
sbbl
dec
mov
cmp
pusha
sub
imul
or
mov
ljmp
sbb
xlat
and
in
es
jmp
jp
inc
push
mov
into
mov
inc
dec
test
push
aaa
mov
pop
mov
pusha
jle
mov
fistl
pop
inc
dec
or
mov
jl
inc
faddl
cmp
adc
xchg
popa
push
clc
sbb
je
xchg
sub
test
fmull
dec
rcl
int3
hlt
add
mov
push
daa
adcb
mov
xchg
adc
xlat
xchg
push
or
push
pop
cmpb
addr16
addl
imul
sahf
insl
movsb
add
add
int3
xchg
adc
pop
add
inc
or
jmp
or
adc
gs
mov
xrelease
aad
fs
add
mov
mov
mov
leave
mov
ret
lea
mov
inc
dec
mov
jae
cli
mov
dec
jne
lea
fmuls
lea
dec
lcall
sbb
lahf
and
sub
push
add
mov
and
sbb
je
es
pop
aam
add
add
test
jbe
adc
sub
sbb
int3
arpl
push
or
adc
loopne
cmp
adc
std
or
movsl
sub
enter
or
arpl
test
dec
dec
fs
cmpl
or
add
lods
aaa
jg
mov
xor
mov
imul
call
mov
movsl
cwtl
cmp
jno
pop
add
in
sbb
stos
add
cmp
aaa
sbb
mov
cvtps2pi
test
addl
sbb
jne
and
xor
inc
ja
lods
inc
sub
push
fsubrs
or
jnp
push
pop
add
xor
push
dec
xlat
inc
or
and
mov
or
decb
sub
jae
int3
add
clc
sbb
adc
out
cmpl
inc
add
pop
ret
ud0
out
adc
sub
sbb
inc
jl
sbbb
ja
test
fwait
push
rorb
inc
pop
jmp
sbb
sub
or
adc
mov
lahf
inc
out
pusha
adc
sbb
testl
cmp
pop
jne
mov
pop
push
and
or
ljmp
jmp
mov
dec
mov
mov
inc
clc
cmp
call
push
sahf
pusha
in
cmpsb
aas
cmp
imul
fcoms
out
mov
ret
push
push
or
pop
addr16
add
inc
cmpsl
lret
xor
jecxz
xchg
add
mov
mov
xchg
dec
push
or
pop
jp
dec
dec
addb
jge
clc
adc
sub
fildll
in
inc
aam
ja
mov
mov
add
mov
or
dec
sub
insb
je
jp
xlat
adc
mov
aad
add
adc
dec
clc
fbstp
test
push
shlb
cltd
loop
mov
int3
sbb
add
mov
test
inc
xorl
movsl
repnz
lock
in
mov
or
or
and
or
out
inc
add
pop
jbe
dec
or
sbb
insb
scas
mov
xorl
push
jns
push
adc
pop
sub
add
xor
add
jbe
push
stos
or
or
sub
rcrb
inc
or
iret
pop
mov
add
xor
jmp
hlt
jb
cs
adc
and
add
xor
mov
pusha
pop
cmpsl
repnz
adc
fnstcw
xor
or
add
push
pop
das
in
mov
xchg
pop
ret
push
mov
add
dec
nop
push
inc
sbb
fs
push
inc
pusha
out
dec
jae
call
pop
xchg
call
pop
fwait
imul
push
inc
push
or
test
rol
popa
js
ret
les
inc
cmp
xchg
jge
xchg
rcl
add
dec
jno
mov
push
lret
inc
mov
add
loopne
rcl
and
sub
cmpsb
movsb
xor
sub
sub
mov
xor
sub
stos
dec
cmp
xchg
mov
push
and
lahf
and
push
andl
stos
add
or
popa
add
and
sbb
in
adc
rclb
leave
or
add
iret
push
inc
dec
das
sbb
stos
or
test
or
dec
movsb
pop
push
cmpsl
fidivrs
test
dec
mov
inc
loopne
arpl
push
test
pop
jmp
cmp
add
ds
add
es
ja
ret
inc
jp
inc
aam
loopne
mov
movsl
sbb
pop
dec
ja
loopne
das
fwait
ds
mov
xor
clc
sub
mov
push
cld
in
push
and
add
hlt
add
addb
decl
andl
add
out
nop
push
adc
or
lea
rorl
push
push
and
push
inc
push
in
push
mov
pop
push
cli
cmpsl
in
jae
and
pop
sbb
cmp
outsb
dec
add
sub
push
ds
adcl
js
dec
mov
cmp
add
lahf
mov
decb
test
and
jecxz
push
jg
sbb
and
push
dec
pusha
sub
adc
dec
push
in
cmp
ret
fisubrs
xchg
aam
js
mov
or
sub
sub
aam
pop
rorl
cltd
pop
ret
test
sti
cmpl
je
pop
mov
mov
mov
sub
test
ret
lret
or
xchg
test
imul
rcl
cmpl
test
push
repz
popa
bound
push
fnstcw
push
loopne
flds
or
pop
inc
adc
cltd
pop
push
xor
decl
das
add
or
das
or
and
cltd
int3
sbb
and
inc
rolb
pusha
lods
cmpb
xor
scas
add
or
add
loop
mov
or
xor
add
std
or
pop
les
sub
outsl
andb
push
inc
aaa
rolb
inc
cmp
enter
cmp
or
jno
xorl
adc
dec
sub
pop
or
inc
push
sbb
or
cmpb
and
dec
wrmsr
inc
fs
dec
mov
adc
cmp
mov
lods
stos
push
js
add
xor
fsubrp
jge
mov
or
mov
lahf
mov
push
out
add
mov
push
jmp
mov
push
daa
daa
and
and
sbbb
rclb
or
dec
pushf
outsb
mov
cmp
popf
xor
gs
push
add
pop
mov
enter
adc
leave
subl
push
mov
popl
cmp
cmp
sub
jecxz
and
xchg
cmp
pop
cmp
push
push
or
gs
loope
xor
clc
push
inc
sbb
pop
sbb
jl
sub
addr16
mov
pop
jno
inc
fadds
flds
sbb
inc
cld
push
mov
pop
jne
fidivrs
and
dec
jne
into
inc
or
inc
inc
push
fimuls
fcomps
adc
jmp
stos
and
xlat
adc
mov
push
in
push
decl
sub
jmp
aam
ljmp
adc
fs
mov
roll
push
stos
jmp
adc
sbbb
shl
pop
pop
sbb
fcompl
mov
push
adc
and
push
sub
in
imul
jmp
or
movsb
mov
push
rorb
add
cmc
push
or
gs
mov
daa
lea
or
repz
test
adc
jl
test
sub
mov
enter
xor
add
shll
mov
mov
lret
xor
and
mov
cmpsb
mov
faddp
xchg
pop
inc
or
mov
bound
aas
pop
mov
sub
aaa
and
decl
push
sbb
loope
cmp
or
lahf
fildl
adc
test
mov
jmp
sub
andl
in
add
dec
push
add
adc
dec
sbb
jp
push
test
js
outsl
or
mov
mov
jp
push
ss
lock
loope
loope
mov
test
pop
sbb
fsts
jo
imul
outsb
push
repz
testb
inc
adc
add
inc
cmpb
adc
push
push
push
jns
cmp
loope
fs
add
inc
rolb
out
rol
movsb
sbb
xchg
add
jle
mov
add
jae
loope
cmpsl
inc
push
scas
lds
push
dec
jns
xchg
lock
cmpb
sub
or
and
add
cmpsb
int3
and
mov
pop
jp
jne
cmp
cwtl
pop
or
and
outsb
push
xor
inc
or
dec
or
iret
cmp
pop
pop
arpl
and
push
cltd
mov
adc
mov
cwtl
imul
mov
jecxz
nop
in
scas
mov
mov
daa
movsl
add
data16
and
pop
sbb
sbb
or
push
pop
push
shlb
or
cmp
or
mov
stos
add
cmp
cmp
sub
inc
sbb
int
or
or
sbb
add
or
pop
adc
bound
mov
mov
add
add
mov
popa
test
outsb
ja
clc
out
mov
daa
xchg
mov
cmp
imul
in
fisttpll
xor
cmp
add
jb
cmp
inc
fdivrl
push
mov
xchg
sub
stos
lock
fxch
test
push
xor
sbb
add
xlat
xchg
insl
int3
in
jo
xor
adc
mov
addl
inc
add
pop
push
shlb
insb
push
dec
insb
sahf
jg
sub
in
fs
add
xchg
iret
add
fdivr
inc
adc
or
pop
pop
push
imul
test
out
mov
push
sbb
das
or
xor
push
push
jmp
pop
xchg
mov
xlat
mov
insb
sub
test
outsb
dec
call
aam
and
sbb
mov
dec
jg
test
adc
xor
daa
icebp
and
xor
gs
cli
nop
add
ja
daa
in
pop
xlat
mov
jg
cmp
xchg
arpl
rorb
push
in
addl
dec
xor
pusha
lock
cwtl
cmp
push
inc
clc
or
fsub
and
add
fs
inc
adc
inc
jge
sub
repz
sbb
or
pop
add
mov
inc
adc
lock
or
inc
or
add
or
jbe
fstl
lcall
add
cmc
or
ror
rcll
inc
shrb
test
dec
jl
sub
jne
xchg
popa
pop
daa
fadds
mov
lds
sub
lahf
data16
sbb
in
fidivrs
dec
jne
mov
ret
mov
dec
mov
jmp
ror
add
xorb
mov
movsb
sti
jecxz
dec
pop
mov
jmp
push
add
rcll
or
dec
rorb
push
into
push
or
cmp
stos
fdiv
cmp
lods
add
test
dec
jle
sbb
push
sbb
loop
fldt
notl
shlb
sbb
jle
arpl
mov
dec
cmp
mov
jo
adc
push
push
xchg
inc
daa
or
mov
fiaddl
dec
and
dec
loopne
add
cmc
jne
inc
mov
or
add
cwtl
add
shl
pop
fs
fsub
push
icebp
cltd
fsubr
rorb
sbb
or
addl
rorl
add
xorl
pusha
test
dec
stc
ja
sbb
inc
loop
in
add
sbb
xchg
cmpsb
sbb
sbb
adcb
pop
adc
adc
cli
repz
mov
hlt
fldl
or
jmp
mov
ljmp
inc
nop
bound
test
daa
lcall
inc
test
xorl
shll
sbb
movsl
pusha
rorb
add
cmp
sub
mov
imul
cmp
sbb
movhps
push
loope
outsb
enter
rcrb
xor
add
ljmp
mov
movl
jge
mov
jne
mov
add
xchg
add
cmp
shlb
mov
cmp
add
xor
xchg
aaa
sbb
clc
sbb
fidivl
xor
push
cmp
rclb
cmp
sub
add
aaa
mov
mov
sub
aas
lret
jo
loopne
jge
ja
add
jne
imul
xchg
jg
mov
jg
fsubr
shlb
jg
cmp
sbb
idivb
loop
cmp
punpcklbw
sti
jmp
cmc
out
dec
add
movsl
jne
movsl
xlat
rcrb
push
push
sbb
mov
pop
dec
mov
mov
adc
inc
test
test
xlat
inc
xchg
push
shlb
rorl
sbb
mov
insb
jne
add
fmuls
sti
inc
add
xlat
mov
inc
and
subb
adc
push
js
sbb
push
sbb
mov
sbb
xchg
mov
aad
pop
pop
in
add
rcrl
xchg
mov
in
ret
push
jns
mov
sbb
pop
or
daa
jne
sbb
lock
addb
shlb
pop
sub
inc
push
jle
ds
adc
jne
aaa
pop
cwtl
dec
rcrb
and
or
push
inc
or
repz
xor
mov
push
in
inc
mov
pop
and
push
insl
xchg
xor
push
lahf
pop
cmp
and
pop
mov
and
or
lret
pushf
cmp
lock
adc
jne
sub
clc
or
xchg
testb
push
adc
mov
xchg
sub
add
lea
adc
insb
mov
mov
pop
insl
push
pop
or
mov
add
add
pop
pop
mov
sub
test
cmp
jo
sbb
xchg
add
or
hlt
rorb
or
inc
sub
or
xor
pop
xor
cli
cmp
add
pop
add
xor
jo
shl
pushf
addb
cmc
or
icebp
add
cmp
movsl
cli
xlat
clc
and
xchg
inc
jmp
fadds
adc
cmpsb
mov
js
mov
sbb
sub
add
jp
xchg
test
sbb
rorb
sub
arpl
nop
divl
and
pushf
or
push
dec
mov
and
movsl
jmp
mov
dec
or
adcb
insl
inc
fiadds
dec
and
adc
xchg
pop
cmp
rolb
inc
jo
sbb
sbb
add
std
jno
inc
add
xor
or
loopne
je
rcrb
or
jmp
push
int
add
sub
inc
mov
andl
cmp
cltd
and
mov
fisttpl
push
rclb
in
adc
pop
inc
leave
cwtl
cmp
cld
xor
push
xlat
dec
add
int3
sub
test
mov
jb
insb
xor
cwtl
and
pusha
pop
inc
adc
dec
popa
jnp
jmp
adc
push
mov
or
adcb
shr
add
sub
adc
inc
call
shrb
push
pop
in
dec
lock
xchg
call
movb
mov
jnp
fiaddl
mov
xor
sbb
xor
mov
mov
stos
and
flds
subb
fwait
ret
add
cmp
fldenv
cmp
nop
dec
subb
lcall
and
mov
push
or
jmp
sub
dec
das
add
add
das
add
jnp
bound
ret
cmc
jae
dec
inc
jno
mov
outsb
push
jg
test
sar
jns
adc
fcoms
popf
push
inc
pop
or
pusha
testl
or
jge
mov
add
inc
popa
iret
popf
icebp
inc
cmp
jl
out
pop
push
mov
pop
fbld
pop
imul
and
cmp
insb
rclb
test
in
insb
dec
push
pop
push
outsl
sbb
imul
adc
rol
js
or
sbb
mov
mov
mov
xor
mov
cmp
enter
push
out
jecxz
xchg
rolb
cmpsl
pusha
mov
and
dec
push
js
mov
jne
xor
push
and
inc
dec
js
loopne,pn
adc
jl
push
hlt
hlt
lock
push
cmp
hlt
push
add
pusha
movsb
dec
pop
es
or
or
iret
push
loope
or
lods
ljmp
or
clc
xchg
sub
push
test
sub
js
dec
mov
and
xchg
or
adc
push
mov
loopne
inc
adc
das
lret
bndldx
adc
mov
ds
mov
sub
insb
in
jecxz
test
fs
xor
sbb
fidivrs
je
jmp
mov
cmpsb
cmp
cs
push
pop
or
mov
out
sbb
imul
orl
push
int3
sbb
jmp
pop
sub
and
sbb
sub
pop
call
sahf
push
rcl
nop
dec
jo
roll
das
xor
cmpsl
inc
dec
repz
filds
dec
xchg
and
popa
add
pop
repnz
add
cmpl
loope
sbb
dec
movsl
sbb
pop
push
sbb
adc
out
cmpsb
cs
sbb
orl
pop
mov
pop
mov
dec
dec
arpl
inc
cmp
sbb
std
test
ficoml
dec
adc
sub
in
add
xor
lds
call
or
imul
push
or
fldt
push
test
add
inc
dec
subl
add
dec
inc
and
pop
insl
cmp
loope
pop
sbb
jp
int
cli
stos
jle
push
dec
pop
icebp
sub
inc
sbb
bound
mov
adc
loop
adc
test
cltd
adc
and
add
dec
push
clc
adc
adc
adc
push
into
or
push
pop
inc
sub
or
daa
dec
and
test
loop
repnz
xchg
ficomps
in
and
sbb
adc
jo
add
dec
and
mov
adc
cmp
adc
xor
inc
adc
pusha
mov
int
pop
rcll
xchg
insb
and
sbb
jne
cmpb
inc
push
lock
and
enter
aaa
jecxz
push
or
adc
jnp
push
addr16
cmp
mov
add
pop
data16
sub
xchg
pop
jne
mov
mov
inc
mov
dec
dec
jae
cmp
jne
pop
cs
cmp
sbb
push
cwtl
mov
rorl
pop
and
movl
loopne
push
lret
imul
mov
and
adc
push
insl
ret
and
push
pop
mov
and
adc
pop
mov
cmpsl
icebp
aaa
xchg
or
cmp
mov
mov
daa
mov
pop
push
or
roll
dec
push
mov
mov
pushf
pop
pop
sub
xchg
cmp
push
add
les
pusha
jb
jp
cmp
dec
lods
cltd
add
addl
arpl
and
and
dec
xor
and
pop
dec
mov
xchg
mov
pop
es
push
adcl
imul
ret
adc
xor
rorl
inc
inc
cmc
sub
and
pop
sub
xchg
mov
add
cmp
mov
push
cli
or
cmpsl
mov
and
ret
insl
xchg
repz
mov
add
cltd
xor
push
adc
dec
inc
adc
adcb
sub
lret
inc
and
push
sti
enter
or
sub
inc
daa
dec
ret
cld
pop
cld
je
popa
xor
in
mov
test
test
or
call
icebp
push
mov
adc
mov
jmp
clc
dec
push
call
out
or
add
fistpl
and
lods
xchg
stos
add
adc
std
mov
aas
and
jle
push
pusha
adc
and
or
imull
fistpl
nop
adc
jg
mov
jge
mov
mov
xor
lock
fidivrs
inc
ss
es
sub
in
push
lahf
and
mov
scas
inc
in
test
adc
push
jb
and
sub
pop
xchg
sbb
fmull
adc
in
cmpsl
and
movsb
outsb
unpckhps
mov
and
and
lods
add
shlb
mov
inc
jae
pop
aas
aad
insb
loop
sub
fs
adc
dec
fdivr
hlt
int3
and
mov
jmp
sub
cltd
jbe
add
jo
fmuls
pop
cmp
push
pop
insb
adc
loop
sub
cmp
cmp
data16
mov
pop
sub
add
flds
mov
pop
jmp
lret
xchg
neg
sahf
fdivl
adc
inc
popa
cltd
lcall
cmp
popf
popa
fildl
or
jb
insl
push
pop
inc
fcmovu
decl
out
sbb
lret
and
xor
fsubs
or
aaa
mov
cmc
pop
xchg
push
xor
popa
add
mov
leave
lods
push
test
popa
push
push
dec
or
and
or
or
popa
inc
andb
je
std
outsb
sbb
cwtl
pop
cmp
jl
fldcw
dec
push
pop
mov
sub
fs
fmulp
jg
jmp
push
push
inc
movsb
lea
jg
xorl
sub
nop
out
es
dec
add
inc
mov
fiaddl
xor
call
sub
enter
xlat
cmp
out
fwait
std
jns
sub
add
jne
mov
cmpl
rorl
dec
in
fstps
jnp
outsb
pop
aas
mov
lock
lret
ds
shlb
push
insb
mov
push
dec
fisubl
push
test
pop
cmp
icebp
mov
jbe
adc
vbroadcastss
roll
icebp
popf
hlt
mov
popf
or
mov
stc
push
dec
les
aaa
je
mov
dec
lcall
movsl
adc
imul
es
mov
fsubl
jmp
imul
push
pop
adc
shlb
in
sti
leave
decl
jl
jbe
sub
and
mov
ret
mov
and
mov
add
sub
gs
loope
movsl
dec
test
mov
test
mov
push
pop
push
loope
add
dec
es
push
and
and
inc
imul
and
adc
mov
xchg
add
cmp
inc
mov
and
inc
xor
push
xor
sti
adc
lret
inc
insb
hlt
test
push
sbb
adc
enter
stc
cltd
xchg
push
or
pop
sbb
push
inc
movsl
pop
sar
lods
movsl
loopne
loopne
inc
lods
lret
imul
inc
inc
inc
and
sub
adc
shll
sub
add
sbb
js
lea
xor
add
jmp
mov
pop
sbb
pop
pop
pop
cld
cmovo
out
mov
ja
cmp
push
pop
jle
mov
pusha
test
adc
dec
cmp
add
jg
adc
aam
pop
dec
call
and
loope
or
or
mov
add
movsb
pop
jae
add
push
pop
test
js
mov
push
or
mov
sarb
mov
fildl
mov
inc
ret
sub
inc
adc
push
rol
shl
xchg
inc
jge
adc
push
and
or
nop
movsl
arpl
cmp
rclb
nop
cs
imul
inc
inc
add
leave
lock
sbb
testb
addr16
mov
push
popa
je
jnp
jo
adc
fwait
xor
pusha
cs
jb
scas
in
sub
mov
ret
aas
xor
xor
inc
add
inc
pop
sbb
xorb
das
dec
int3
insl
cmp
outsb
add
and
in
fsubrl
push
adc
pop
dec
mov
test
add
push
enter
pop
notl
rclb
mov
movsb
cltd
cwtl
sub
pushf
xor
nop
lret
dec
movsb
inc
sub
push
fs
test
nop
mov
jb
xchg
or
movsb
sarb
in
push
cld
nop
enter
mov
push
lahf
mov
push
leave
dec
dec
inc
add
insl
les
les
gs
into
push
fcomi
pop
push
gs
lods
insl
int
and
inc
sti
insl
push
jae
add
in
add
sub
insl
jo
mov
add
das
pusha
sub
dec
inc
in
inc
out
push
outsl
pop
or
inc
xchg
dec
jae
mov
cltd
fcoms
jg
scas
mov
cmp
pushf
cmc
sbb
push
rolb
jb
mov
jp
sarb
dec
les
mov
int
jno
data16
jecxz
sbb
mov
cwtl
in
dec
sti
sbb
jl
or
mov
ret
mov
ds
mov
push
adc
mov
lods
loopne
add
inc
jb
dec
mov
ret
mov
add
cmp
test
or
xchg
pop
xchg
fbld
mov
pop
sub
pop
mov
orl
add
mov
es
push
mov
add
or
cmpb
mov
inc
lods
push
shr
cmc
leave
and
sub
and
add
insl
lods
or
mov
mov
daa
add
or
popa
inc
inc
mov
enter
icebp
inc
mov
enter
mov
add
sub
nop
sbb
pop
imul
sti
cmp
cmp
orb
add
jle
sbb
mov
sub
push
add
aas
mov
sub
in
hlt
adc
jbe
xorl
insb
or
testb
andb
mull
push
push
repz
xchg
inc
and
add
or
adc
pop
outsl
inc
jmp
adc
data16
aaa
ja
outsb
lods
jb
jb
jb
cmp
shrb
xchg
lahf
testb
test
cmp
and
inc
dec
dec
push
and
and
add
sub
jmp
dec
pop
roll
xchg
add
inc
sbb
jo
enter
dec
or
cmp
inc
in
dec
push
pop
clc
sbb
jbe
nop
test
int3
push
adc
pop
push
fidivs
fdivrp
push
pusha
add
inc
mov
les
cld
inc
add
adc
pushf
cld
inc
rolb
jmp
pop
imul
out
stos
insb
ds
fistps
adc
xor
mov
pusha
mov
xchg
xor
xchg
sbb
push
in
adc
pop
and
add
inc
nop
into
cmp
sbb
js
inc
cmp
or
outsb
or
add
stc
pop
and
js
loopne
cli
push
push
test
incl
testb
and
gs
stc
mov
call
sbb
add
adc
cmp
fxch
lods
es
test
mov
movsb
loope
inc
add
bound
cmp
xor
pop
sbb
jns
adc
nop
popl
or
push
mov
aad
and
loopne
movl
fwait
in
pushf
inc
aaa
mov
mov
pop
push
push
and
in
inc
push
es
mov
inc
fcmovne
dec
stos
dec
add
out
cmpsb
js
jl
add
inc
push
insb
popf
or
and
popl
mov
in
dec
add
jne
or
and
mov
into
roll
inc
mov
nop
mov
incl
inc
hlt
push
or
sbb
jns
out
inc
pop
pop
pusha
sahf
out
sahf
fs
dec
lahf
out
jl
test
push
and
xor
arpl
inc
add
jne
cmp
test
in
lods
repnz
cmpsb
pop
push
xor
add
loopne
test
xor
add
add
sbb
rolb
in
xor
xchg
fistps
add
and
in
inc
cmpsl
xlat
mov
sbb
in
pop
jnp
stc
inc
repnz
mov
pop
mov
ss
rolb
push
cmpsb
jo
sti
inc
cmp
lea
inc
mov
stc
jno
jle
and
sub
add
cmp
xor
rorb
add
aad
sbb
sub
loopne
or
push
mov
xchg
or
and
out
xchg
cmp
and
test
adc
mov
inc
mov
sbb
xor
xchg
mov
aas
xor
or
cmpsl
push
dec
pop
pop
inc
xor
mov
sbb
or
or
ds
lahf
add
adc
xchg
or
adc
imul
inc
pusha
arpl
mov
fidivrs
rcrl
and
stos
sarl
fiaddl
sbb
and
xor
xor
adc
adc
aad
cwtl
fwait
mov
mov
push
daa
mov
sbb
cmp
enter
xchg
mov
adc
push
lret
andb
jno
sub
cmpb
nop
sub
pusha
cmpsb
daa
sub
jle
fldl2t
daa
add
imull
inc
push
xor
rorl
loopne
xor
inc
pop
xlat
ret
inc
in
inc
inc
xor
test
inc
scas
mov
mov
shrl
jl
fiaddl
imul
mov
dec
cmp
adc
inc
shlb
xchg
rclb
in
or
cmp
adc
sbb
xor
call
sbb
pop
mov
xor
sbb
sbb
mov
sub
cmp
jecxz
cmpl
sti
clc
enter
stc
sub
xchg
popa
cld
xor
add
xchg
scas
cwtl
pop
mov
mov
sbb
pop
lcall
xor
push
push
fadd
pusha
lea
and
add
adc
push
dec
xchg
push
mov
fcomps
aas
add
push
mov
inc
pop
adc
movsb
nop
add
xchg
mov
rclb
les
inc
insb
je
push
imul
hlt
xor
mov
inc
sub
push
jl
xchg
in
sub
divb
sbb
xor
rcr
fbstp
add
shll
inc
dec
or
mov
cmp
inc
and
push
add
or
ss
or
sti
daa
or
mov
std
call
push
dec
scas
fmull
cmp
sbb
fbstp
imul
jo
lahf
subl
out
xchg
test
push
inc
jo
sbb
cmp
sbb
add
inc
popa
leave
add
mov
sbb
adc
jne
test
or
pop
out
xchg
pop
dec
and
sub
clc
movsl
inc
mov
sub
and
lds
mov
insb
jae
lret
popa
rol
std
imul
in
and
and
pop
pop
inc
push
imul
sbb
test
sub
dec
js
js
dec
add
push
inc
mov
outsb
add
xchg
mov
ljmp
cmp
lods
xor
mov
out
adc
aad
pusha
add
stos
cmp
ror
js
int
sbb
cmp
je
jns
inc
sbb
pop
jb
in
push
cmpl
subb
cmp
je
jne
das
enter
mov
gs
mov
push
enter
inc
sub
mov
mov
mov
jle
popf
adc
mov
xor
push
mov
frstor
mov
subl
adc
mov
or
mov
xlat
adc
push
sub
and
js
dec
mov
mov
ret
mov
sbb
pop
scas
mov
jmp
sub
lods
jge
pop
sbb
or
push
push
je
or
mov
pop
xchg
js
inc
or
push
pop
scas
cmp
inc
xor
cmp
adcl
sbb
pop
out
pop
inc
add
and
loop
xchg
mov
and
mov
and
enter
sbb
es
into
sbb
xchg
jmp
ja
in
push
jns
or
or
mov
ror
xor
push
lods
jno
sbb
add
and
dec
ljmp
sub
loopne
mov
mov
xor
or
push
or
insb
sub
leave
das
out
notl
scas
pop
clc
pop
fcoms
loopne
jmp
imulb
cld
adc
nop
add
lahf
cmpsl
fldcw
xor
push
sbb
push
les
pop
jg
dec
push
adc
dec
loopne
imul
aaa
pop
xor
int
subl
adc
ljmp
dec
int
fmuls
test
mov
push
inc
add
mov
aas
and
movl
adc
push
pop
lahf
push
inc
mov
mov
jecxz
pop
cwtl
mov
loope
sbb
xchg
loope
dec
inc
in
add
insb
sbb
dec
dec
sbb
daa
adc
test
iret
lds
adc
xor
jl
cmp
pop
xchg
lock
jge
push
loopne
movl
cmp
arpl
inc
js
cmp
mov
sbb
jne
add
and
loopne
enter
int3
or
stos
xchg
adcb
jmp
movsb
movsb
push
inc
or
adc
or
push
sub
xor
pop
fcomps
cmp
and
cmp
adc
mov
fsub
shlb
ret
testl
sub
or
pop
aaa
js
jns
sub
pop
mov
cmp
xchg
inc
pop
clc
int3
xor
call
fcoms
fbld
jnp
rclb
sbb
sbb
mov
jl
inc
mov
iret
movsl
xchg
and
iret
std
movsb
mov
les
jg
test
xlat
xchg
aam
loopne
mov
decl
push
sbb
nop
pop
add
icebp
or
push
add
and
js
fs
add
mov
cmp
xor
or
add
add
push
mov
cmp
shll
mov
sub
loop
mov
idivb
mov
jecxz
cmp
rorb
dec
cmp
shlb
int3
jo
cmp
iret
inc
cmove
push
inc
loope
sti
jnp
hlt
xor
and
and
xchg
insb
adc
in
mov
or
sbb
inc
fildl
popf
sbb
mov
adcb
add
cmp
xor
andl
push
es
mov
cmp
in
xchg
and
mov
inc
or
and
insb
jl
or
adc
lret
push
pop
xchg
idivl
cmpsl
and
pop
ret
arpl
ret
dec
sti
sbb
popa
mov
repnz
sbbb
mov
pushf
fcompl
mov
mov
mov
dec
and
xor
fimuls
and
add
mov
add
inc
insb
xor
or
aam
insb
and
pop
add
push
xor
push
push
xchg
jp
dec
push
das
cmp
pop
lret
add
orb
xorb
xchg
add
and
dec
mov
lods
push
push
mov
xor
mov
or
pop
sub
imul
and
add
push
sub
cmpl
jne
and
inc
cmp
lods
outsb
and
pusha
push
in
fstps
nop
push
sub
and
stc
push
adc
fisttpll
pop
mov
shl
xchg
sub
dec
cmp
jnp
pop
inc
push
inc
push
dec
jecxz
inc
outsb
add
push
in
call
inc
sbb
jmp
adc
adc
orb
mov
adc
mov
sti
add
xchg
dec
adc
push
jnp
and
add
add
or
and
xchg
lock
popl
sbb
repz
add
test
xor
adc
out
out
cs
dec
inc
fbstp
int3
divl
out
mov
sbb
popa
pop
lcall
mov
call
or
cli
incl
or
mov
icebp
ficoml
dec
and
idivl
hlt
adc
mov
jl
or
add
and
mov
cmc
xchg
nop
push
ljmp
cmp
insb
aas
jne
mov
lahf
cmp
inc
mov
inc
inc
mov
or
mov
sbb
inc
cmc
push
inc
inc
ret
or
push
cmp
popf
stos
adc
pop
push
sbb
ret
jno
insl
adc
adc
dec
dec
pop
and
lds
lods
sarb
and
mov
lods
cmpsl
and
adc
outsl
arpl
and
inc
sub
daa
sbb
sarb
mov
jl
pop
sub
cmp
adc
ret
dec
push
add
push
ret
cmp
jo
push
mov
ja
and
and
xchg
fdivrs
insb
jg
or
dec
pop
fisubs
outsl
sbb
mov
popf
fsubs
aas
mov
or
mov
sbb
bound
pop
sub
sub
mov
add
xchg
es
jg
add
insl
add
jg
dec
leave
shlb
dec
adc
andl
addr16
adcb
sub
xor
inc
xchg
push
sbb
mov
inc
dec
and
push
out
scas
movl
sub
or
cmp
mov
adc
adcl
adc
inc
insb
popl
nop
xchg
dec
lret
xchg
lods
pushf
hlt
negl
hlt
mov
push
inc
mov
lock
push
mov
sbb
inc
sub
adc
pop
nop
scas
test
dec
or
fists
xor
add
lahf
rorb
add
mov
shll
adc
bnd
and
add
and
sbb
xchg
adc
add
sti
xor
mov
jne
cmpsb
add
insb
stos
xor
mov
sbb
sub
shl
lods
dec
mov
test
xor
mov
lock
xor
adc
ss
in
cmp
test
inc
mov
pop
and
xchg
shlb
xor
movsb
xchg
sbbl
push
pop
jo
call
loopne
dec
in
gs
push
sub
popf
jo
adc
push
mov
pusha
jb
repnz
movsl
add
sahf
inc
imul
scas
adc
jge
sarb
mov
adc
sub
shl
nop
inc
bound
es
dec
in
mov
roll
push
dec
inc
push
loopne
push
xchg
cmpsb
xlat
sub
sub
dec
dec
mov
dec
dec
dec
xor
xchg
addr16
push
popa
push
xchg
xlat
in
outsb
jne
ljmp
lods
enter
dec
rolb
nop
pusha
add
sub
insl
lcall
fdivl
scas
inc
das
test
and
and
push
repz
mov
fistpll
fidivs
adc
push
stos
loope
test
pop
lock
jne
jle
mov
inc
dec
cmp
es
adc
out
mov
or
xchg
cs
ds
dec
repz
xchg
je
inc
xor
jmp
or
sbb
lods
xchg
repnz
in
xor
leave
js
pop
aas
int
inc
sub
push
or
int3
xorl
add
and
scas
mov
cmc
adc
inc
clc
dec
xor
cmp
jne
jl
inc
sbb
dec
mov
or
int3
adc
xor
daa
enter
push
add
inc
and
mov
in
pop
iret
and
push
and
push
mov
and
jne
push
xchg
fs
cld
mov
inc
enter
inc
nop
or
cld
hlt
fcompl
cmp
dec
or
aas
lods
adc
jmp
outsl
daa
dec
or
pusha
mov
inc
push
jns
pop
cld
ljmp
adc
mov
dec
in
fiaddl
loop
aas
repnz
push
mov
jle
dec
pop
cmpb
push
pusha
sbb
cltd
add
es
ds
cwtl
add
repnz
leave
setge
inc
les
and
cs
mov
mov
ds
outsb
jne
and
out
dec
cmpsb
and
adc
or
inc
neg
mov
push
pop
or
or
sbb
jb
add
dec
shl
or
popa
js
enter
or
jmp
enter
push
bound
insb
testl
and
out
or
dec
adc
imul
push
iret
in
enter
adc
or
mov
push
jne
mov
xlat
lcall
sbb
js
arpl
mov
cmp
bound
shrl
mov
adc
inc
lods
cmp
in
add
lea
xchg
jg
fiadds
adc
ret
aam
add
inc
insb
lret
ret
hlt
or
lret
cmc
or
adc
in
leave
rcll
xchg
cs
xlat
mov
fidivs
in
sub
inc
movsb
xor
mov
inc
out
in
sbb
and
push
push
in
cmpb
int
add
mov
pop
les
inc
cmp
repz
adcb
push
in
and
faddp
scas
pmullw
in
jae
orb
pop
push
add
xor
push
lods
out
mov
pop
xchg
bound
mov
inc
incl
push
mov
fldcw
xor
push
push
adc
push
xchg
les
pushf
pop
pop
pop
nop
pop
mov
or
pop
pop
jecxz
jo
push
sbb
imul
push
movsb
pop
fsubl
xor
pop
cmp
rcrb
cmpsl
pop
sbb
clc
dec
sbb
filds
pop
inc
add
inc
add
or
movsb
test
or
or
imul
scas
xchg
ds
xchg
push
inc
mov
enter
gs
dec
cmp
imul
sub
fs
imul
sub
pop
shrb
outsl
cwtl
push
cmp
lock
in
xor
inc
dec
add
push
jge
inc
sbb
out
xor
add
xchg
dec
sahf
mov
add
push
hlt
add
das
xchg
add
or
xchg
jne
cmpsl
adc
xchg
or
push
dec
cmp
or
je
scas
das
or
cmp
pop
cmp
shlb
adcl
sbb
rorl
push
and
insl
popa
ljmp
pop
cwtl
gs
mov
aam
je
js
pand
lock
inc
pop
xor
cmp
movsl
or
sbb
test
fadd
jo
adc
popa
fs
sub
dec
jnp
inc
jle
adc
iret
sbb
cld
jo
iret
jmp
ds
and
out
adc
or
inc
pop
sbb
das
adc
add
push
mov
movsb
xchg
nop
adc
fimull
dec
cwtl
cwtl
push
add
out
mov
and
mov
mov
sti
cmpsb
jmp
lea
sbb
pop
pop
repz
cli
push
pop
pop
mov
insb
inc
or
inc
test
jbe
dec
and
hlt
je
insl
dec
rol
push
clc
pop
xchg
xlat
pop
es
inc
push
sub
fs
inc
pop
adc
jl
add
xor
stos
mov
xor
popf
filds
in
mov
iret
rol
fsub
pusha
pusha
sub
js
in
mov
jp
pusha
mov
rorb
mov
repz
js
or
add
jns
fadds
add
dec
add
dec
call
pop
add
xor
pusha
adc
add
xchg
or
xor
dec
jb
dec
scas
and
cmp
mov
mov
xchg
pop
jnp
cltd
nop
outsl
inc
into
xor
pop
je
icebp
inc
inc
sarb
add
or
sub
rorl
jno
or
jecxz
or
nop
cmp
out
andps
out
test
or
xor
push
jno
or
jo
std
jo
jo
xchg
cmc
fnstcw
dec
repnz
mov
push
jb
arpl
popf
int
scas
je
or
or
xchg
add
mov
fsubrs
test
repnz
sub
popa
add
jo
xchg
adc
sub
sbb
fs
ror
nop
and
push
push
add
movb
jae
js
cmp
call
enter
mov
orb
push
nop
repnz
and
adc
inc
pusha
es
or
test
mov
sbb
add
fstl
pop
inc
xchg
and
cmp
mov
adc
enter
sub
imul
jecxz
or
push
xor
or
cs
mov
pushf
xchg
or
lods
sbb
ficoms
in
jo
jo
or
outsb
add
mov
out
cmp
dec
lret
dec
daa
xchg
jno
inc
jnp
xchg
sbb
pop
in
nop
xchg
xlat
mov
xchg
cmc
xchg
push
jge
and
xor
xor
xor
inc
mov
inc
dec
dec
dec
dec
dec
dec
dec
dec
mov
push
push
push
push
push
and
mov
jae
es
push
rcl
push
sub
xor
or
pop
xchg
mov
push
imul
jmp
dec
xchg
xor
clc
adc
pop
and
std
cs
test
jbe
cli
and
add
xchg
cmpsb
jo
add
push
mov
jns
addr16
mov
sub
sti
adc
sbb
cmpsb
mov
sub
stc
and
mov
xor
add
mov
leave
clc
sub
pop
add
sar
push
mov
mov
jbe
test
add
sub
cmpsl
popf
out
jge
shrl
xchg
dec
or
push
rcrb
mov
jne
stos
pop
cli
push
sbb
pop
jmp
pushf
out
jb
dec
enter
xchg
test
add
leave
xchg
test
or
mov
jl
ret
lcall
push
inc
inc
inc
hlt
ret
and
dec
pusha
sub
pop
sub
lret
or
mov
or
cmp
xor
inc
dec
jns
aas
rcrb
sbb
fdivrs
clc
and
fsubl
fs
loopne
cmpsb
adc
mov
xchg
das
inc
lea
hlt
rol
mov
mov
push
stc
cvtps2pd
add
fdivrs
cmc
fstps
sbb
push
bswap
or
js
sub
lahf
ljmp
sub
or
daa
xchg
jo
clc
jo
dec
sub
loopne
fidivl
adc
jle
and
mov
into
sbb
out
mov
inc
jmp
mov
fdivl
mov
out
inc
loopne
sub
lahf
sub
mov
lcall
data16
xchg
xchg
or
jmp
inc
sti
push
add
enter
inc
push
xor
pop
pop
mov
out
pop
es
cli
mov
sbb
and
adc
jl
xchg
push
inc
sbbb
bound
jmp
cld
out
stos
test
pushl
sbb
xor
mov
insl
adc
add
pop
incl
fucom
ret
or
cmp
jg
mov
ret
andb
pop
call
dec
test
xchg
jno
insl
add
or
pop
call
fildl
and
jmp
fstps
mov
xlat
sub
cli
sub
push
in
lods
sbb
lock
ja
aaa
lods
cmpsl
adc
lock
ss
dec
jns
cld
pop
mov
jmp
jmp
xor
xorl
pop
leave
pop
sub
jbe
aaa
in
xlat
adc
in
pop
jb
pushf
jbe
sbb
inc
pop
xchg
or
xchg
jl
and
pop
ja
mov
and
fisubl
out
lcall
mov
add
mov
or
push
fidivrl
imul
insl
xor
pop
mov
cmpsl
add
inc
leave
dec
popf
je
rolb
jb
xchg
inc
loop
imul
iret
dec
sub
ss
insb
movzbl
cmp
fistps
gs
inc
inc
adc
sub
inc
sub
inc
ficoml
pusha
adc
dec
rorb
and
add
inc
cmpsb
mov
js
add
add
dec
inc
push
cli
es
and
mov
xor
add
scas
sbb
mov
shlb
nop
jg
add
cmpsb
or
aas
cmp
rorl
aas
or
or
incl
and
in
orl
pop
vshufps
push
cmp
add
push
js
cmp
aas
aam
xchg
mov
mov
xor
js
inc
jmp
mov
aam
jb
inc
dec
loopne
sbbl
into
jl
jmp
in
add
ret
mov
mov
out
jle
adc
adc
inc
insl
jo
int
lcall
rcr
or
ss
test
leave
add
xor
dec
xchg
imul
inc
sbb
rol
clc
sahf
insb
sub
cmp
jnp
loope
nop
lcall
pop
xor
imul
inc
fucomi
dec
insb
cmp
dec
jae
enter
push
pushf
fs
push
ret
fcoms
push
sub
and
ret
fs
cmp
mov
sbb
add
orl
mov
sub
or
scas
stc
jae
ret
cmpb
and
inc
mov
push
adc
adc
push
dec
fbstp
es
xor
or
push
pushf
and
xor
push
cmp
pop
sub
leave
mov
or
rcrl
je
cmp
push
testl
ret
adc
in
fidivrs
xor
pop
cmp
inc
push
lcall
fcmovnu
cmp
test
jno
pusha
inc
xchg
imul
daa
pop
mov
sub
adc
test
adc
sti
hlt
dec
sti
cmp
pop
cmp
mov
lock
adc
inc
fdivl
pop
mov
and
testb
jmp
inc
push
addl
xor
cmp
sbb
inc
rcrb
xchg
or
sub
inc
test
sbb
rorb
xchg
js
mov
and
enter
pop
jo
push
out
xor
sub
push
jge
in
mov
adc
pop
or
cwtl
or
pop
das
pop
xor
out
push
mov
js
cmp
test
xor
pop
cmp
mov
cmp
pop
and
icebp
lods
testb
pop
test
and
iret
incb
mov
and
or
and
mov
pop
mov
cmp
inc
rolb
mov
pop
rclb
bound
mov
push
je
jge
and
jp
call
test
add
or
das
lock
das
add
jne
adc
and
lcall
mov
push
popa
decb
inc
fsubrs
xor
sub
dec
cmpl
dec
pop
mov
push
and
pop
ds
ret
shll
mov
inc
sub
lds
pop
dec
pop
sbbl
daa
mov
push
inc
cmp
sub
sub
mov
mov
and
jbe
and
mov
sbb
and
push
dec
mov
shll
mov
cmp
push
pusha
mov
or
pop
ret
xor
mov
dec
inc
cmp
aaa
add
jecxz
cmpsb
dec
push
push
xchg
and
lock
inc
addr16
adc
and
sub
fldcw
cmp
inc
xchg
data16
xchg
adc
call
mov
cli
mov
inc
or
inc
roll
sti
push
and
cmpsb
addl
and
clc
push
js
mov
and
xor
add
mov
fisubrs
xlat
or
jne
outsb
call
push
enter
inc
call
or
push
je
mov
jl
adc
xor
and
cmpb
lods
aas
insl
pop
mov
add
data16
fbstp
sbb
inc
push
addl
xorb
insl
aaa
add
loop
or
cld
int
or
pop
subl
mov
mov
push
jb
ret
xor
cltd
sbb
cmp
movsb
loope
inc
inc
and
dec
and
sub
icebp
jmp
stos
test
les
push
mov
add
lcall
test
pop
jge
dec
inc
movsl
mov
fucomip
insl
or
imulb
add
push
mov
sbb
push
mov
sub
or
enter
adc
iret
ret
stos
inc
cmpl
inc
iret
flds
dec
cmp
pop
adc
insl
inc
dec
dec
sbb
pop
idivb
inc
iret
dec
pop
das
loopne
in
or
lock
hlt
movsb
adc
enter
adc
inc
popa
das
std
xchg
inc
xor
jne
cld
call
mov
inc
cmp
cmp
mov
les
cltd
pop
inc
out
jle
sbb
into
dec
jl
shlb
dec
sub
cmp
jo
ss
pusha
xor
cli
lock
lea
or
dec
ja
push
addr16
hlt
pop
fimuls
mov
and
add
sub
cmp
rolb
xor
and
or
push
fsubs
sbb
lds
xor
loope
sub
or
cmp
mov
insb
inc
cmp
invd
inc
cmp
adc
je
in
jmp
orl
dec
adc
or
jl
inc
lock
inc
cwtl
pop
add
dec
jge
mov
push
push
inc
adc
sti
pop
dec
icebp
push
fsubrs
sub
movsb
roll
mov
and
mov
inc
pop
mov
jge
inc
arpl
imul
sub
imul
adc
sub
push
sub
or
sub
sub
push
add
inc
push
sub
pop
lock
xchg
cmp
aad
add
imul
jns
inc
test
fbld
lea
addl
or
loopne
cmc
sub
add
mov
rcrb
insl
gs
sbb
mov
lods
sub
hlt
enter
cmp
hlt
add
ss
pop
into
hlt
sub
inc
add
je
mov
lock
jp
add
pop
jns
push
int
xor
or
insl
push
inc
xor
leave
lock
rorl
cld
add
sbb
add
xor
push
push
jae
xor
ret
std
je
mov
pop
fldt
dec
clc
cs
loopne
mov
rorb
adc
push
loopne
ja
popa
fcoms
or
aaa
fistps
sub
dec
push
bnd
push
sbb
add
popf
mov
mov
xchg
or
loope
fdivs
lcall
f2xm1
dec
iret
push
inc
dec
or
movsl
adc
lcall
sbb
add
or
jmp
rcll
les
jp
cmp
push
addl
xchg
pushf
or
or
aaa
je
and
xchg
mov
cli
dec
pop
mov
sub
jmp
push
push
int
cmp
xor
sub
and
mov
or
xor
pop
pop
pusha
data16
jo
mov
dec
call
dec
mov
ret
add
add
orb
push
and
xchg
sub
dec
inc
pushf
inc
lods
inc
punpcklbw
adc
add
bound
call
dec
clc
js
mov
mov
clc
in
xchg
xor
mov
lods
clc
sub
repnz
call
sub
dec
lock
clc
inc
mov
and
mov
leave
mov
test
adc
add
test
lea
sbb
pop
push
jns
enter
call
test
pop
jl
test
inc
movsb
leave
cltd
mov
and
sbb
cmp
cmp
pop
push
out
cmp
sbb
loopne
cmp
add
cmp
push
mov
or
ret
addr16
je
cmp
popw
es
stos
add
lcall
mov
sbb
les
repz
and
adc
cmpsl
add
cmp
cmp
pop
inc
dec
fwait
jae
and
jns
jl
jge
or
js
push
jp
cmp
jne
sbb
inc
cmpsb
pop
sbbl
lcall
aaa
aas
mov
adc
ss
sub
fdivrs
das
push
je
mov
pusha
inc
push
jl
into
fiaddl
and
adc
xchg
dec
xor
scas
add
dec
add
push
pop
or
lods
push
lret
push
mov
cmp
fs
jl
rol
jnp
adc
insl
mov
sub
mov
and
pop
es
es
mov
push
nop
sbb
dec
pusha
adc
pop
cmc
adc
divps
loope
mov
arpl
xchg
das
add
clc
mov
add
xchg
fs
popa
icebp
xor
xor
mov
pop
pop
cmpsb
sbb
inc
xor
mov
call
inc
push
pop
nop
push
jnp
and
jmp
dec
popa
cmpsb
stos
add
push
out
dec
mov
ljmp
sbb
int
dec
jmp
andb
push
out
xor
adc
ret
push
cltd
lret
pusha
or
xor
mov
cld
ja
mov
jbe
sbb
movb
out
fdivl
sti
scas
or
aaa
enter
and
and
and
push
js
add
xchg
adc
pop
pop
adc
aas
lret
push
imul
mov
add
mov
jecxz
cld
aaa
clc
xchg
xchg
out
dec
inc
sahf
ret
lods
sbb
lock
xchg
ret
inc
mov
dec
testb
mov
test
and
test
pop
add
ret
dec
pop
adc
das
outsl
cmp
popl
push
add
mov
in
shlb
adc
pop
jp
aas
scas
mov
cmp
fstps
leave
lcall
or
and
je
addb
add
daa
mov
test
or
clc
inc
push
and
or
pop
pop
fimuls
das
mov
dec
stos
push
out
cmpsl
cmp
mov
adc
pop
xor
inc
mov
test
jo
pop
cmpsb
fsubrl
mov
add
shlb
fmuls
idivl
out
aas
je
mov
pop
dec
and
jne
mov
xchg
or
xorb
inc
mov
add
push
mov
pop
xor
dec
jle
push
out
pop
test
push
mov
cmp
pop
data16
adc
mov
mov
imul
inc
inc
push
inc
inc
add
dec
je
test
jo
outsb
enter
pcmpgtb
mov
sbb
jnp
pusha
sub
sub
dec
lods
sbb
dec
fs
push
add
fcomps
imul
xor
or
or
or
dec
aaa
lock
pop
cmp
cmp
andb
lcall
fs
fldt
rcrl
movb
mov
xchg
daa
lret
pop
pop
movsb
xchg
bound
mov
xchg
pop
push
push
push
mov
enter
pop
add
outsb
imul
xchg
pop
push
aas
jbe
and
aaa
mov
dec
gs
jl
dec
aas
out
pop
xchg
ds
dec
inc
outsl
popa
xor
ljmp
pop
or
or
push
ja
imul
push
mov
jnp
push
mov
sbb
sbb
pusha
pop
cmp
out
jge
fisubl
jecxz
sti
pop
fisubrl
out
jmp
or
ficomps
adcb
mov
and
jbe
xchg
jne
xor
pop
xchg
cmp
mov
inc
and
sub
lret
push
xchg
jnp
add
jmp
jnp
fsts
push
arpl
gs
and
loopne
pop
aam
sbb
lods
cmp
or
lret
ss
adc
mov
mov
inc
pop
inc
cmp
xor
mov
xchg
mov
pusha
sub
add
mov
js
rcr
pusha
xchg
push
xor
mov
push
adc
mov
sub
jmp
mov
cmp
pushl
pop
xor
out
mov
cmpsl
pop
cmp
xchg
dec
jno
inc
dec
xchg
mov
push
mov
ds
jnp
dec
test
jne
shr
xchg
das
and
inc
inc
inc
hlt
pusha
inc
or
pop
lea
fnstsw
dec
cs
pop
push
inc
in
mov
jg
jge
adc
pop
cld
and
or
jo
int3
xor
xchg
pop
lds
aaa
enter
dec
cmp
fdivrs
cmp
outsl
inc
out
mov
bound
ffreep
lret
push
cmp
cmp
push
sub
movsb
les
xor
pop
mov
data16
or
xchg
xchg
push
push
adc
daa
lock
xor
jb
push
imul
push
push
div
mov
inc
push
pop
pop
mov
fsubrs
jmp
ja
int3
cs
movsl
aas
insb
jge
inc
decl
xchg
jne
dec
xor
jle
imul
test
fstpt
and
cmp
add
and
push
cmp
hlt
xlat
pop
cmp
xchg
sbb
scas
xchg
dec
push
and
in
mov
cs
cmp
cmp
mov
and
dec
inc
dec
or
je
or
xchg
out
pop
xor
inc
lcall
inc
outsb
xchg
mov
mov
mov
pusha
mov
add
test
popf
or
xor
or
add
push
pop
push
add
push
push
or
xlat
jl
jb
in
jl
jl
mov
inc
ja
jo
pop
scas
and
addr16
mov
dec
xchg
into
fs
in
add
xorb
mov
mov
inc
rcl
mov
mov
lret
push
shl
push
ret
es
xchg
sbb
and
fadds
and
cltd
bound
push
xchg
dec
xor
sbb
xchg
xor
push
pushf
xor
mov
push
gs
call
les
jb
or
add
sub
gs
daa
inc
jge
push
out
mov
push
mov
pusha
js
or
push
test
jae
and
ret
inc
loope
sti
inc
dec
fisttpl
dec
jne
fs
sbb
jle
inc
je
inc
push
lock
pop
sbb
add
outsb
idiv
inc
pushl
push
sbb
push
push
jns
push
enter
sbb
aaa
pushl
dec
inc
add
adc
mov
mov
xchg
gs
ret
and
pop
jg
cmpsl
sub
pop
sub
and
fwait
imul
int3
add
dec
out
leave
dec
add
push
inc
out
adcl
and
sbb
mov
or
outsb
movsl
mov
pop
pushf
fwait
pusha
cmp
mov
and
inc
es
jbe
clc
leave
rolb
xor
test
pop
mov
mov
and
jle
push
les
inc
add
xchg
adc
add
inc
mov
aam
dec
pop
adc
xor
sbb
fs
sbb
aam
or
push
out
je
push
sbb
divb
out
jae
data16
push
pop
lret
xlat
push
enter
aad
jp
xchg
movsl
cmp
ret
cmp
lods
sbb
arpl
out
pop
mov
xor
and
push
rcl
and
fldl
bound
jb
pop
je
cld
cld
cltd
sub
adc
add
js
dec
or
dec
xor
add
je
leave
std
mov
and
add
cmp
sbb
mov
xor
and
in
in
mov
fnsave
lret
jmp
inc
fcmovne
sbb
push
int3
pop
mov
pop
jo
adc
jle
and
pop
xlat
orb
popa
pop
cmp
sarl
dec
cmpsl
mov
ret
dec
sub
mov
sahf
xchg
xchg
out
pop
leave
push
cwtl
imul
pop
outsb
or
movsb
add
clc
or
into
add
imul
push
mov
je
mov
mov
cmp
mov
mov
jno
lock
cmpl
jecxz
bound
imul
fldcw
and
stos
out
rorb
imul
jg
push
scas
addb
popf
into
mov
jge
or
push
cmp
nop
dec
pop
cmp
aam
sbb
xchg
inc
movsb
fwait
inc
loop
aas
add
or
sub
and
pop
sbb
add
inc
cltd
add
jp
sarl
pop
iret
clc
sub
jl
inc
test
daa
orb
test
xorb
movb
adc
lea
mov
dec
ret
inc
sbbl
jle
sub
or
inc
test
xor
sbb
add
sbb
sbb
add
xor
or
movsb
aad
es
adc
and
in
adc
mov
xchg
xchg
mov
idivb
dec
mov
in
jo
mov
adc
arpl
cmp
ret
xchg
push
adc
sbb
or
outsl
add
and
rolb
outsb
test
mov
cmp
lock
xor
inc
popa
notb
push
mov
lds
fdivrs
inc
cmp
lea
sbb
add
out
xor
push
insb
mov
xchg
enter
arpl
adc
cmp
and
pop
inc
stc
daa
cmp
insl
push
mov
mov
xchg
push
push
scas
or
lahf
pop
test
mov
or
push
mov
add
lcall
mov
nop
push
add
sub
xchg
orl
xor
lock
xor
adc
sbb
sbb
xchg
jae
sub
das
inc
aam
shl
add
mov
sahf
cmp
mov
mov
ljmp
mov
ret
lds
ret
sub
add
call
out
jno
clc
jmp
aam
sbb
pop
sub
inc
fs
js
fdivrl
add
js
mov
decb
push
mov
fwait
rclb
in
push
pop
mov
cltd
test
jle
pop
inc
mov
mov
pop
push
xchg
fcoms
jne
rcrl
jo
outsl
cwtl
insl
out
inc
into
aas
les
das
fs
mov
mov
adc
mov
adcl
popf
mov
loop
or
inc
and
inc
dec
leave
sbb
or
addb
addr16
ret
and
or
dec
and
push
xor
pop
push
jo
in
hlt
adcb
jo
imul
dec
ret
loop
in
inc
adc
xchg
add
aam
jnp
jmp
add
loop
dec
inc
add
sbb
dec
test
adc
cmp
adc
push
cli
in
outsl
xchg
lock
lods
popa
imul
popa
sbb
xchg
mov
jecxz
dec
imul
cmp
loopne
xchg
pop
rorb
adc
jp
add
movsl
into
std
jo
inc
sub
adc
sub
add
push
adc
sbbb
adc
xchg
mov
push
xchg
pop
sbb
push
cli
data16
cli
dec
mov
add
cmc
add
mov
inc
adc
sub
push
push
jmpw
inc
testb
je
addb
in
push
jns
cmpsl
mov
sub
loope
or
mov
roll
cld
or
jno
sbb
push
mov
adc
outsb
scas
addr16
xor
repz
xor
test
or
roll
pop
clc
mov
xor
pop
andb
and
sub
inc
cmpsl
imul
sub
inc
mov
xor
push
sub
ljmp
dec
popa
lods
rcrb
mov
loop
jle
cli
idivb
ret
or
je
xor
bound
push
inc
lcall
mov
mov
cmpsb
lods
dec
inc
cmp
sbbl
push
pop
push
cli
ss
lea
hlt
adc
dec
lea
xor
jmp
cs
jno
test
outsb
lea
add
into
mov
loop
xchg
mov
inc
push
lahf
fsubrs
and
dec
in
fldl
add
and
or
or
inc
cmp
sub
inc
cli
pop
clc
jb
cvtdq2ps
test
or
xor
sti
loopne
fldt
push
sbb
adc
pop
cmp
cmp
or
loopne
push
lea
data16
sarb
or
into
add
ds
sbb
popl
popa
ja
dec
cmp
arpl
xor
mov
inc
mov
lret
xorb
je
adc
or
push
dec
mov
dec
push
pop
cmp
fnsave
mov
jl
aam
test
mov
in
and
xchg
aas
cmp
arpl
or
cmpb
inc
add
sbb
fs
mov
std
or
ret
loopne
and
fwait
cmpb
in
inc
xchg
pop
jne
pop
jne
bound
pop
or
enter
sub
test
cmp
aas
pop
jl
push
mov
dec
inc
or
and
imulb
dec
cmp
push
mov
or
and
test
outsl
xor
clc
inc
inc
sahf
je
ret
sbb
mov
sbb
insb
loopne
or
add
xor
inc
into
sahf
add
xor
sbb
push
cmovl
test
push
cmpsl
add
mov
pop
fldenv
ja
inc
out
push
or
sub
cli
dec
pusha
inc
sbb
jge
and
dec
test
inc
mov
or
hlt
cmpsb
mov
and
pop
pop
adc
das
jge
inc
xor
fstps
push
rolb
inc
jge
ja
sbb
imul
nop
jne
aam
or
mov
aad
in
fimuls
orl
fdivs
stc
and
mov
imul
fs
shlb
inc
push
or
out
movsb
sarb
pop
xlat
out
repz
jmp
sbb
out
mov
lods
adc
pop
addb
sub
das
or
cltd
ja
fidivrl
in
xor
jne
ljmpw
into
ret
adc
mov
in
jns
jno
inc
mov
insl
movsb
or
pop
push
mov
or
or
sbb
dec
jnp
ficoms
or
pop
nop
push
in
aaa
in
xchg
je
inc
std
pop
icebp
test
pop
mov
dec
shl
add
push
ss
ret
xor
pushf
lods
addr16
xchg
data16
js
cmc
xchg
push
andl
enter
inc
inc
test
push
mov
mov
pop
jb
shrb
cmc
movsl
loopne
ret
fistpll
outsb
pop
jl
push
xor
inc
hlt
add
dec
addr16
dec
inc
inc
adc
inc
js
aaa
sbb
dec
inc
mov
add
hlt
add
fdivl
cli
push
das
push
sbb
pop
clc
dec
sub
aas
mov
mov
mov
xchg
mov
xor
or
ret
aas
cmp
ret
push
inc
in
sbb
sbb
push
out
adc
fcoms
push
push
ret
add
movb
add
add
xor
mov
rcrb
lret
popa
dec
cmp
and
test
fmuls
daa
sub
mov
ss
decb
cmp
jne
xor
or
or
push
jno
jo
gs
aaa
push
pop
adc
push
in
iret
sahf
xor
enter
fistps
jnp
adc
adc
adc
rcrb
jae
push
cmp
inc
jg
dec
call
or
out
push
xlat
xor
daa
sub
sub
sub
mov
mov
sub
je
inc
pop
add
sub
add
add
lea
or
imul
imul
sub
mov
hlt
daa
aam
inc
push
test
add
jl
jl
push
cmc
adc
mov
push
lea
adc
xchg
or
add
add
clc
xor
and
mov
sti
imul
xchg
leave
hlt
outsl
and
daa
dec
add
int3
js
sar
sub
dec
mov
and
cli
leave
sub
mov
addl
mov
lods
jge
adc
adc
and
popf
bound
cmp
or
lock
mov
or
push
outsb
mov
cwtl
negl
sub
scas
or
clc
or
cmpb
xchg
enter
xor
xchg
lock
xor
je
imul
xchg
imul
pusha
imul
ret
push
jno
in
mov
es
cmpsb
jle
movsb
fwait
add
cs
call
pop
sbb
xchg
jbe
mov
ja
or
mov
mov
inc
ljmp
stos
cmp
xor
outsb
lods
or
leave
inc
imul
inc
leave
xorl
and
add
cli
push
push
or
int
jmp
jg
cwtl
in
dec
les
dec
mov
cmp
cmpsl
xor
inc
xor
adc
repnz
fmuls
pop
fimull
cmpsb
in
jg
cmp
mov
and
in
push
pusha
je
pusha
mov
ljmp
imul
push
lret
jo
pinsrw
sbb
mov
xchg
addr16
push
push
lds
mov
imul
pop
mov
and
sub
out
rolb
mov
xchg
es
push
pop
movsb
xchg
adc
cmp
cmp
call
sub
cld
sub
inc
iret
add
inc
movl
xor
lcall
inc
or
movb
cmp
inc
popa
add
shlb
mov
pushf
out
popa
test
test
loope
add
loopne
subl
je
pop
sub
sbb
add
jo
mov
push
mov
and
aaa
pushl
sub
mov
cli
std
push
popa
or
jmp
jecxz
xor
shrb
je
iret
iret
jns
cmpb
rorb
loop
mov
pop
or
pop
jb
test
mov
cmp
aas
push
inc
and
mov
pop
mov
loop
lock
pop
std
pop
sbb
nop
mov
outsb
inc
xor
pop
dec
jns
xor
jp
inc
lcall
lcall
pusha
lcall
fsubrs
or
in
pop
imul
rorb
or
xchg
pop
push
test
stos
les
lock
popa
mov
lret
shl
add
or
xchg
add
ficomps
add
or
out
fsub
jae
xchg
icebp
outsl
das
call
adc
ret
in
popa
inc
nop
adc
cmp
adcb
sub
or
bound
pop
icebp
jle
add
mov
push
sbb
jmp
and
je
and
rorb
adc
aaa
jbe
dec
es
push
mov
or
jmp
xchg
mov
cltd
sub
or
mov
xchg
pop
addl
sarb
or
es
icebp
or
xor
sub
scas
enter
mov
sbb
add
jne
imul
lods
jmp
sbb
pop
push
or
inc
jg
test
dec
push
outsl
lock
pop
push
dec
cmp
xlat
cmp
jl
sub
popa
popf
pop
adcl
and
push
jmp
sub
sub
jl
inc
sbb
cs
inc
js
ret
push
inc
lea
test
frstor
mov
movsl
cmpl
pop
test
int
push
adc
out
push
xchg
mov
out
mov
aam
rcrb
pop
xor
repz
xor
push
lods
push
les
sarb
mov
cmp
push
pop
mov
push
lods
jns
out
dec
hlt
test
movsb
in
push
into
cmp
pushf
mov
push
addr16
xchg
in
cltd
adc
jb
mov
xor
adc
xor
pop
xchg
shrb
pusha
sub
or
test
fistpl
enter
sub
xor
shlb
xchg
add
test
aas
and
cs
rorb
add
inc
xor
jl
aam
lock
or
xchg
daa
rolb
cmp
cmp
mov
and
divb
xchg
add
add
or
or
pop
jnp
sbb
jne
ss
adc
je
adc
pop
shrb
push
jae
dec
add
pop
movsb
dec
or
loop
fistps
shll
nop
pop
cmpsl
sbb
pop
xor
fsubs
push
cmp
and
mov
add
xor
mov
fsts
sub
dec
jl
stos
dec
loop
aaa
in
jb
frstor
push
and
or
mov
push
lcall
scas
and
enter
gs
sub
nop
cmpsl
inc
pop
or
add
add
adc
fdivrl
adc
inc
push
dec
cmp
setbe
adc
pop
pop
pop
push
insl
outsl
fs
add
je
addl
pop
cmp
mov
adc
rcrb
fdivl
push
pop
sbb
sbb
add
xorl
fldenv
mov
loopne
loopne
data16
mov
adc
or
push
mov
dec
into
mov
adc
imul
inc
add
and
xor
mov
sub
out
cmp
cs
sbb
add
mov
pop
add
inc
jl
push
scas
cld
mov
inc
add
mov
push
mov
cmp
out
cmp
in
negl
add
mov
push
lds
push
nop
pop
adc
jp
mov
xchg
or
or
pop
xor
inc
sbbb
shl
add
mov
inc
dec
inc
jp
dec
or
ret
sbb
std
mov
add
push
mov
outsl
jno
dec
hlt
insb
jle
rorb
push
testl
and
push
add
es
scas
or
push
outsl
mov
in
add
and
mov
loope
inc
dec
imul
call
add
sub
dec
mov
das
mov
pop
in
out
mov
daa
pusha
or
into
stc
into
add
sub
fcmovu
rcrl
nop
pop
pop
mov
dec
outsl
jb
mov
int
mov
inc
xlat
dec
rorb
bound
adc
pop
or
cmp
outsb
or
das
adc
push
das
cmp
test
mov
shl
jnp
aaa
mov
sbb
jnp
ret
je
pusha
adc
xchg
sub
dec
mov
sahf
push
or
add
ljmp
es
sbb
outsl
testb
adc
mulb
inc
adc
cs
out
icebp
and
gs
add
lea
imul
or
shlb
and
sbb
imul
scas
nop
mov
mov
pavgb
or
adc
imul
xchg
divl
push
sub
cmpsl
cmp
mov
add
jo
and
outsl
add
sub
pop
or
pop
ds
add
rcrl
in
scas
ret
movl
inc
in
or
imul
mov
iret
enter
pop
adc
or
rcr
imul
roll
jne
jns
pop
adc
pusha
pusha
or
mov
push
aas
mov
adc
push
dec
push
inc
out
mov
mov
dec
push
add
pop
push
and
cwtl
pop
xor
cmp
or
xchg
mov
sbb
imul
xlat
and
push
enter
dec
js
inc
mov
dec
inc
or
nop
mov
cmp
sub
push
push
cltd
dec
cmp
jbe
jle
sub
add
add
add
or
clc
pop
add
add
ljmp
add
add
fisttpll
adc
out
mov
mov
stos
sub
mov
or
out
cmpsb
adcb
adc
sub
mov
pushl
scas
or
jbe
ljmp
shl
xchg
pop
xor
cmp
mov
push
mov
dec
pop
out
push
nop
and
imul
int3
add
lods
out
ds
repz
or
sbb
ds
or
mov
lcall
notb
inc
js
fistpl
xchg
push
and
push
mov
insb
xchg
fcoml
les
clc
fdivrp
xchg
cmpsl
jl
es
push
cmp
lahf
push
jns
aam
xchg
add
jmp
jl
mov
inc
jmp
jmp
leave
ds
cmpsl
inc
fs
mov
cmp
xchg
in
mov
movsb
es
faddp
rorl
js
push
addb
push
mov
lahf
pop
and
loope
adc
push
es
nop
xor
pushl
adc
xchg
pop
sub
add
add
movsb
popa
xchg
sbb
xchg
push
push
test
push
and
mov
or
mov
or
leave
outsl
cmpxchg
bswap
loopne
repz
or
adc
or
popa
inc
insb
pop
repnz
loope
call
adc
cs
rcrb
adc
subb
xchg
int3
mov
lock
ret
je
inc
ret
add
or
stos
jo
adc
adc
inc
hlt
test
push
ljmp
sub
clc
adc
mov
fadds
loopne
sbb
rcr
jne
add
lcall
dec
sbb
mov
aam
sbb
mov
dec
adc
out
inc
lcall
add
and
imul
fmull
xor
push
xchg
in
push
enter
push
popa
dec
cs
and
test
xchg
jb
aas
cmpsl
stos
sub
and
push
push
jae
inc
popa
jo
loopne
xor
mov
push
ret
push
and
mov
test
xchg
and
jl
dec
cs
adc
sub
pop
rcrb
add
xchg
cmovb
xor
and
xor
int3
cmp
push
mov
mov
pop
enter
outsb
es
incl
push
ret
or
fldcw
pop
pop
js
into
dec
loopne
sbbl
dec
pusha
dec
add
adc
pop
and
fwait
sub
dec
and
enter
iret
jbe
ja
sub
dec
test
dec
testl
add
pop
int
pop
repnz
and
xchg
add
jno
ret
fistpll
xor
push
or
fldt
int
or
push
imul
xor
data16
repz
xor
fistpl
lcall
xchg
cmp
xor
fimuls
xchg
fisttpll
mov
add
ss
jo
inc
rcll
jo
in
xchg
mov
in
jg
mov
jne
adcw
cltd
or
inc
pop
nop
out
movsb
push
ror
or
and
add
enter
sub
fdivrl
rolb
test
add
cltd
loopne
push
packssdw
into
mov
cmp
xchg
xor
cmp
push
push
in
arpl
dec
cmp
inc
rolb
or
xor
fcoms
aas
mov
enter
cwtl
je
orl
inc
insl
movsb
and
sub
test
enter
shlb
jo
das
inc
or
inc
cli
rolb
cmp
cmp
sub
sub
addl
repnz
cmp
rolb
adc
loope
inc
inc
popa
cmc
clc
stc
jbe
adc
repnz
filds
jbe
scas
pusha
cli
dec
mov
out
outsb
sub
pop
aaa
or
rorl
dec
push
aaa
or
dec
cmp
dec
test
inc
rcl
cmp
jl
add
inc
or
push
add
scas
and
loopne
enter
inc
push
mov
sbb
fwait
push
and
loopne
and
dec
push
and
inc
push
and
dec
push
addl
cmpsb
and
cmp
loopne
and
inc
sahf
ja
and
add
push
add
aaa
push
dec
into
test
dec
push
push
pop
enter
das
mov
or
repz
enter
clc
add
in
mov
rcrb
mov
enter
loope
pop
mov
pusha
add
pop
pop
repnz
lock
dec
lock
xchg
mov
or
push
adc
mov
enter
mov
mov
inc
add
jns
sbb
inc
add
mov
adc
sub
inc
rorl
mov
ss
sub
sub
rcrb
in
movsb
cmpsl
cmp
data16
push
aam
sbb
or
out
pop
mov
cmp
push
pop
jo
adc
loop
nop
lods
mov
inc
jo
ret
or
pop
cmpsb
add
iret
pop
imul
push
push
pop
scas
push
mov
jg
adc
inc
je
adc
les
cmp
and
dec
fstl
ljmp
or
rorl
fsubrl
test
movsb
inc
add
and
pop
outsl
xchg
push
inc
xchg
pop
push
andps
or
mov
dec
leave
addr16
and
sbb
mov
xchg
out
mov
push
divb
sbb
mov
jne
mov
out
jmp
push
je
and
or
push
inc
popa
push
jl
js
mov
call
push
leave
les
push
sub
adc
movsl
jo
movsb
pop
dec
pop
pop
cmp
pop
sarb
adc
data16
nop
dec
dec
adc
jae
rorb
sarb
push
mov
jbe
outsl
cld
pusha
test
jae
imul
xor
jge
movsl
bound
aaa
sbb
mov
or
cltd
mov
icebp
inc
cld
push
sub
jae
inc
loope
xchg
push
cmpsb
sbb
or
or
xchg
or
call
aaa
lods
jae
pop
fdivrs
lcall
or
or
hlt
aam
imul
lahf
ja
mov
popa
mov
cwtl
je
mov
mov
push
test
inc
subb
cmp
cmp
mov
and
xor
cmp
ss
sysenter
dec
cmpsb
lahf
je
mov
mov
mov
fwait
call
push
in
adc
pop
shrd
sub
xchg
push
inc
inc
inc
icebp
mov
shrb
cltd
pop
inc
add
or
adc
in
enter
add
loop
sub
mov
mov
and
push
je
faddl
xor
fidivl
and
push
ss
sbbl
pop
xchg
adc
lock
pop
sbb
test
lret
add
or
jae
add
add
inc
push
repnz
adc
sbb
sbb
dec
fisubl
pusha
mov
jae
add
nop
cld
mov
lods
testb
cs
sbb
adc
lcall
adc
test
outsl
and
test
test
cmp
inc
aaa
pop
dec
mov
fcoms
jns
test
inc
add
stc
dec
lret
testl
ret
pop
ja
daa
add
lock
xor
js
lods
inc
call
shl
add
add
xor
mov
mov
or
mov
dec
loope
inc
or
mov
loop
or
add
or
in
sub
ds
push
inc
add
mov
inc
pop
ds
jmp
cld
inc
sub
mov
int
push
adc
mov
adc
and
test
inc
adc
cwtl
dec
pushf
pop
sarb
addl
mov
jmp
sub
es
pop
das
xor
mov
sar
sub
sbb
inc
sub
add
pop
lock
inc
popa
mov
push
or
push
inc
add
aam
dec
cmp
add
dec
or
push
cmp
push
add
mov
dec
scas
xchg
or
fmul
add
inc
dec
dec
jo
pop
inc
xchg
push
xlat
fwait
cmpsb
mov
sbb
xchg
test
enter
addl
and
sbb
inc
sbb
aaa
cmp
push
imulb
icebp
push
pop
jmp
sub
je
push
add
adc
add
adc
in
xchg
inc
and
loope
jp
or
sbb
sbb
add
add
fstl
dec
test
ret
mov
mov
mov
pop
icebp
outsl
fadds
xlat
adc
daa
or
adc
cli
lock
pushf
jne
ret
sub
fdivrp
push
xor
sub
neg
jmp
arpl
lods
add
je
sbb
sub
sbb
push
push
bound
bound
and
xchg
div
dec
test
sbb
int
sbb
enter
sub
sti
and
adc
inc
adc
xchg
inc
sub
iret
and
imul
rcrb
pushf
sub
pop
mov
cmp
sahf
add
add
jecxz
mov
je
push
shr
sub
and
sub
shlb
mov
xchg
adc
fs
sbb
scas
mov
jae
imul
inc
fs
fcmovb
pop
pop
rcr
mov
cmp
cvtps2pi
scas
subb
inc
inc
or
fcmovne
mov
adc
enter
dec
or
lret
mov
dec
fwait
loope
mov
bound
mov
ds
rclb
push
lock
sti
and
test
stos
mov
cmp
dec
xor
push
jmp
mov
and
adc
cltd
adc
insl
popa
and
ljmp
loopne
testl
sbb
adc
inc
jmp
xlat
orb
add
insb
push
clc
nop
xor
mov
or
sahf
adc
dec
imul
and
daa
xchg
shll
add
and
in
mov
cs
cmp
dec
inc
mov
jbe
xor
js
js
mov
push
dec
inc
dec
cmp
shlb
test
push
push
and
push
sbb
arpl
and
pop
test
orl
adc
addr16
sbb
and
add
jne
xor
lea
push
in
xchg
sahf
inc
adc
and
daa
add
jae
int
sub
or
fstps
inc
add
sbb
sub
imul
xor
or
js
enter
pushf
imul
pushf
or
xor
imul
loopne
je
rclb
mov
fisubrs
add
cmp
je
pop
das
or
addps
std
xchg
je
enter
cwtl
shlb
adc
repnz
add
lods
or
push
and
pushf
cmp
addb
leave
xor
jmp
add
xchg
or
xor
xor
xor
ds
flds
or
sbb
fwait
push
mov
mov
dec
cmpl
test
jge
inc
mov
xor
nop
mov
fcomps
ret
cmp
loope
xchg
les
push
sbb
dec
xchg
cld
nop
test
call
lods
xor
int3
sbb
jae
rcrb
mov
movsb
xorb
fcompl
mov
sub
xor
test
sbb
test
cmp
and
lods
xor
aam
sbbb
sub
mov
mov
add
inc
xlat
pop
xchg
or
fisttpl
pop
push
push
adc
stos
lock
dec
mov
push
mov
mov
clc
sbb
sub
jae
add
inc
xchg
inc
loop
imul
xchg
adc
or
mov
inc
sbb
pop
std
ljmp
out
aas
or
notb
or
sub
pusha
lds
dec
stos
lea
push
ret
xchg
int3
js
or
push
push
mov
lods
stos
add
addr16
push
cmp
mov
adc
add
cmp
outsl
xchg
dec
les
test
cmpsl
loop
push
adc
shlb
mov
mov
mov
sub
and
jge
xchg
imul
xchg
rorl
inc
pushw
cmp
andl
packuswb
inc
add
push
and
sub
dec
out
les
inc
ret
sub
cmpsl
movsb
test
lea
mov
mov
and
lock
sbb
inc
push
cwtl
out
aaa
or
movsb
jge
mov
mov
xchg
adc
fsubrl
pop
and
inc
pop
jmp
in
jle
xlat
insl
add
lock
int3
ss
xor
mov
sbb
insl
xor
jp
push
in
push
xor
popa
push
icebp
add
movsb
outsl
lahf
mov
sbb
fisubrs
cmpl
cmp
or
cmp
mov
sub
mov
inc
fldt
nop
push
pop
ret
or
aaa
lods
and
pop
or
int3
fisubrs
test
push
ja
xchg
and
push
inc
in
mov
movb
loope
ret
or
push
dec
movsb
xor
and
fstpt
jmp
dec
outsl
or
imul
or
dec
or
xor
sbb
ret
daa
out
jmp
lods
cmpsb
sbb
cmc
pop
mov
cltd
mov
cld
cmpsb
in
ljmp
fs
cmp
gs
sbb
movsb
sbb
sbb
lea
cltd
dec
cmp
mov
sub
adc
push
push
lea
call
mov
xchg
xor
fcmovbe
stos
and
and
mov
lds
sbb
out
sbb
pop
mov
fstpl
jno
push
jle
mov
xor
add
or
imulb
repz
or
sbb
and
jae
push
fwait
sbb
mov
in
jns
pop
sbb
mov
ss
adc
mov
leave
push
adcl
inc
fcompl
andb
jo
int3
adc
in
or
xor
in
add
xchg
loop
stos
mov
enter
lcall
mov
mov
es
in
loope
dec
je
mov
add
add
dec
rcrb
loope
leave
stos
fs
mov
push
xlat
pop
add
fisttpl
mov
cmp
or
clc
and
cli
mov
adc
mov
ds
leave
mov
cmp
cmp
jnp
ret
inc
or
lods
pop
jb
pusha
ret
ja
aas
adc
dec
push
adc
movsb
loope
adc
or
inc
mov
sbb
neg
sub
fdivs
lock
je
add
pop
sub
or
mov
mov
add
std
test
leave
mov
jo
fcompl
push
jb
imul
insb
icebp
push
xlat
and
xor
cmp
mov
enter
sarb
push
enter
mov
pop
mov
das
test
stos
orb
sbb
mov
inc
pushf
leave
or
sahf
das
andb
xchg
lahf
nop
jb
stc
aam
in
sbb
push
sbb
inc
inc
or
out
pop
loop
pop
mov
repz
cmp
icebp
testb
xchg
inc
or
mov
test
out
push
dec
mov
mov
cld
push
push
jnp
and
test
mov
lods
mov
out
outsb
mov
inc
add
ret
hlt
cmp
das
mov
xor
orl
adc
push
insb
adc
dec
add
add
rorl
cmp
mov
add
jo
sub
xor
inc
fildll
pop
not
sbbl
pop
inc
or
jne
mov
in
cmpb
adc
mov
movsb
clc
adc
cmpsb
repnz
jno
and
add
add
movl
xchg
fprem
dec
mov
mov
ficoms
imul
cli
push
pop
psrlw
in
mov
mov
enter
pop
out
outsb
in
push
daa
or
out
roll
rcll
pop
xlat
fiaddl
lods
xchg
rcrb
push
add
icebp
std
cmp
xchg
mov
jns
sbb
rcrl
inc
inc
mov
sarb
pcmpeqw
dec
ret
xchg
test
fstl
mov
movsl
xchg
jns
add
iret
cmp
or
neg
inc
lds
inc
pop
mov
loopne
outsb
inc
cmp
daa
mov
andb
or
sbb
ret
cmp
aad
sub
test
popa
insb
aam
pop
ds
ja
mov
sub
sub
aaa
lcall
shl
xchg
jnp
mov
sbbl
jp
jle
jne
mov
cmp
addb
dec
inc
scas
xchg
sbb
orps
dec
push
dec
push
pop
mov
cmp
and
dec
or
movsb
pusha
xor
iret
movl
inc
popa
sbb
movl
rcrl
fs
xor
insb
jo
dec
mov
lret
and
lds
hlt
mov
inc
inc
pop
mov
cmp
je
adc
push
sub
das
daa
push
sub
inc
test
jo
mov
dec
insb
push
ret
sbb
pop
movsl
dec
xchg
daa
mov
fstl
pop
xchg
repz
fs
hlt
xchg
in
add
lock
jo
xchg
or
fadds
add
and
push
adc
jnp
aad
pop
or
adc
insb
insb
and
mov
nop
dec
push
mov
rolb
les
inc
repnz
sub
sbb
lret
cwtl
sbb
pop
lods
ret
bound
and
jne
movsb
adc
xchg
pop
ret
das
leave
loope
fs
push
jecxz
arpl
loope
cwtl
data16
xchg
jno
and
mov
aaa
pop
sbb
jl
popa
mov
and
xor
adc
bound
arpl
imul
add
insl
xlat
adc
or
enter
inc
insb
lahf
xor
xchg
xchg
or
xlat
enter
in
in
inc
pop
subl
mov
lret
push
xor
hlt
mov
push
cmpsb
iret
xor
lahf
lock
adc
andb
rcl
mov
call
sbb
pop
sbb
pop
and
imul
push
pop
mov
ds
mov
ret
adc
cmpb
int3
xchg
fstpt
dec
or
ret
addb
cmp
pop
mov
jo
xchg
cmpb
aaa
into
pop
mov
shlb
sub
or
inc
pop
or
and
mov
or
xchg
pop
ret
xor
xchg
add
nop
add
xchg
jl
repnz
mov
mov
mov
adc
int3
enter
xchg
les
imul
cmpl
sahf
add
lock
and
or
cmp
dec
ret
fimuls
add
push
mov
out
cwtl
test
pop
add
adc
pushf
lock
and
sub
nop
add
xor
aam
xor
push
aam
test
das
movsb
dec
aam
popf
cmp
pop
jne
test
mov
js
dec
jle
test
cmp
arpl
inc
cmp
add
dec
test
add
push
or
dec
push
fwait
push
inc
enter
rcrb
pop
xor
cmp
mov
or
mov
mov
testb
or
xchg
lahf
testb
adc
andb
std
pop
xchg
cmp
das
rcrb
test
push
cmp
insb
cmp
pushf
xor
xchg
aaa
add
mov
test
test
pusha
std
cwtl
and
mov
inc
adc
mov
xchg
sbb
push
ja
cmp
inc
test
cmpsl
inc
mov
loope
arpl
das
orl
and
js
xor
pop
add
xchg
movsb
ja
cli
inc
jg
sbb
jbe
clc
in
ret
jb
or
pop
shrl
push
push
dec
or
test
mov
push
cmp
mov
mov
mov
daa
and
jp
add
pop
jne
xchg
stos
sbb
test
sbb
inc
movb
xorb
jl
adc
and
or
scas
out
pop
fwait
inc
xor
adc
inc
jl
roll
mov
stc
and
mov
sar
and
test
cmp
imul
sbb
inc
test
pop
fptan
push
xorl
imul
pop
mov
sbb
inc
andb
imul
lahf
rol
lea
test
test
and
mov
dec
movsl
add
cmp
or
mov
xchg
add
out
jae
pop
iret
in
mov
rorb
cmp
pop
bound
jb
out
sbb
mov
push
test
add
push
sub
push
mov
inc
test
rcrl
nop
pop
or
hlt
nop
add
andb
arpl
inc
jmp
add
lock
and
pop
leave
mov
sub
pop
ret
lock
inc
xor
and
xchg
mov
or
pop
mov
rclb
pushf
and
sub
shrl
cmp
mov
data16
and
nop
or
and
or
nop
or
cmp
or
sub
outsb
rolb
clc
adc
adc
popf
mov
sbb
rol
push
fisttpll
mov
add
sub
mov
mov
mov
inc
fimull
add
in
jbe
xchg
shr
call
mov
cmpsb
pop
cmpsb
xor
inc
shlb
pushf
movsb
rol
sbb
jne
push
stc
clc
xchg
inc
std
insb
cmp
sbbb
xchg
xor
mov
inc
xchg
dec
mov
popf
cmpl
or
fadds
cmp
nop
xchg
addl
mov
add
inc
nop/reserved
cmp
dec
je
adc
fnsave
ret
mov
dec
dec
rcrl
mov
fsubrs
leave
and
jbe
clc
mov
xchg
lea
nop
adc
sbb
out
inc
or
neg
xchg
movsb
neg
add
cmpsb
xchg
in
jns
cmpl
adc
or
ret
filds
or
sti
in
jo
push
cmpsb
dec
lret
mov
add
push
xchg
xchg
and
jle
sub
push
adc
cs
mov
push
xchg
and
cmp
daa
pop
mov
mov
pop
scas
or
lods
call
lods
cltd
les
mov
out
sbb
pop
pusha
xchg
test
popa
push
fs
in
push
das
push
pusha
orl
in
jne
divb
mov
jmp
cmpb
test
adc
movsb
lods
cmp
jmp
jmp
sbb
shl
imul
jmp
or
cmp
aad
nop
cmp
test
push
in
popa
jns
mov
push
xor
mov
lea
popf
pop
out
repnz
adc
cmpsl
enter
pop
push
repnz
push
outsl
icebp
jnp
add
adc
mov
and
adc
xor
sub
push
inc
sub
loopne
sbb
bound
mov
movsl
insl
iret
jmp
sbb
daa
movb
jecxz
push
pop
sub
cmpsl
add
sbb
and
dec
dec
and
sbb
arpl
add
sbb
add
add
leave
xchg
inc
push
stc
xchg
mov
cmp
shl
sbb
add
xor
das
adc
or
sbb
or
lods
inc
outsl
sbb
notl
add
loope
xor
adcl
push
fcompl
adc
outsb
lret
sub
insb
loopne
cs
sahf
adc
or
dec
in
fldt
stc
add
ss
sub
or
inc
pop
ljmp
adc
jp
mov
sub
pop
and
por
mov
dec
dec
add
mov
add
push
daa
imul
xor
xor
call
adc
pop
testl
mov
jne
aam
add
sbb
add
cmp
xchg
jne
mov
stos
fisubrs
push
mov
mov
pop
cmpl
adc
sahf
std
xor
xor
hlt
and
push
mov
insl
inc
pop
stos
mov
in
shrb
test
lds
and
mov
mov
mov
cmp
inc
cmp
loop
clc
jne
mov
inc
das
xchg
xor
lock
shll
add
popa
jo
or
popf
push
in
push
jbe
xor
fdivs
cli
xor
push
or
icebp
nop
or
push
jno
mov
in
sub
mov
pop
or
insb
fcoms
mov
leave
cmpsl
push
stos
add
iret
and
pop
imul
mov
addl
inc
pop
mov
cmp
clc
je
cmp
mov
adc
and
jnp
ds
pusha
jmp
int
cmpsb
cmp
imul
fiaddl
cs
popf
add
xchg
shlb
repnz
lods
push
fcomi
js
cmp
adc
add
call
lcall
sub
jae
jl
dec
cmp
ja
pop
loope
mov
jae
out
iret
xor
cmp
cwtl
shl
pop
adc
es
pop
xor
lret
mov
sbb
push
pushf
xchg
nop
test
sub
mov
sarb
or
push
jo
jg
rorb
repnz
scas
mov
add
aam
lret
aas
ret
ret
cmp
jo
daa
lret
lret
orb
fcomp
in
ret
xor
push
ret
or
sub
sub
xlat
out
jmp
sub
mov
std
jp
pop
and
sbb
fdivs
mov
mov
push
and
aam
inc
shl
xor
rclb
addl
add
adc
fwait
pop
inc
cs
cmp
movsb
inc
imul
jne
outsb
in
out
push
in
addb
push
mov
in
test
insb
das
mov
cmpsl
fidivrs
sbbb
sbb
jae
bound
cmp
xchg
push
push
outsb
sbb
dec
mov
or
lahf
lret
push
mov
xchg
xorb
jne
pop
cmp
dec
push
filds
les
fidivl
and
fwait
cwtl
pop
inc
sti
pop
add
push
cmp
and
mov
mov
add
or
inc
loopne
pop
fildll
shrb
cmp
sti
sbbl
add
mov
xor
in
xchg
cmp
xlat
subb
jp
add
adc
aaa
push
jo
add
sub
jmp
add
dec
dec
pop
xor
sub
push
inc
or
or
in
mov
popa
add
adc
jo
mov
adc
pop
xor
xchg
mov
mov
inc
adc
pushf
testb
inc
pop
insl
imul
mov
adc
in
fs
pop
ret
adc
cmpl
add
sbb
data16
cld
mov
or
pop
or
loop
and
add
aas
rclb
xchg
push
push
orb
movsl
or
mov
fsubs
cmpb
dec
pusha
inc
add
add
and
clc
add
lret
xchg
push
xor
xorl
adc
ja
pop
psrld
out
sarb
jo
mulb
movsb
pop
xor
jne
adc
xchg
aam
pusha
jmp
cs
fisubs
sbb
or
lods
lea
pusha
shlb
sbb
insb
loopne
xor
push
mov
fdivs
sub
jbe
add
xchg
fs
inc
sbb
or
fcomps
pushf
xor
jo
pop
sub
add
ss
sbb
mov
and
adc
adc
xchg
testl
pop
mov
adc
popa
pop
jge
jmp
or
sub
push
add
movsl
lidtl
cmpsb
or
add
or
sbb
insb
das
push
loopne
add
add
or
pop
fildll
outsb
rcll
mov
add
cmp
add
pop
es
jo
push
lods
jmp
loope
adc
out
push
and
mov
jp
mov
call
push
push
test
inc
dec
xchg
scas
test
cld
in
pusha
mov
cmp
xor
push
adcb
lcall
dec
jg
loopne
aam
dec
inc
dec
push
jo
pop
add
dec
call
push
aad
out
imul
mov
jge
test
jne
lea
test
mov
sbb
rclb
inc
fcoml
loopne
adc
cmp
mov
or
xor
shll
in
adc
sbb
dec
shl
add
and
and
sti
jns
fisubrl
sbb
lock
add
mov
outsl
mov
xchg
andl
decl
xor
clc
inc
cmc
out
push
clc
les
fwait
xchg
mov
in
dec
jmp
xlat
adc
pop
or
and
push
dec
popa
aas
inc
imul
lea
inc
cmpl
jne
add
sub
cmpl
mov
or
inc
pushl
xchg
lock
and
out
cmp
push
fisttps
inc
cmp
je
lock
mov
or
mov
test
ja
call
or
inc
test
repnz
mov
out
test
sub
popf
pop
sbb
dec
stos
push
or
xor
testb
outsl
sahf
cs
or
and
sub
jnp
xlat
xor
incl
inc
cld
jne
cmp
cltd
dec
cmp
sbb
and
filds
mov
divb
or
sbb
int3
pop
pop
mov
sub
outsb
jno
dec
dec
loopne
ljmp
adc
sar
sbb
notl
add
jbe
pushf
xchg
jmp
cltd
xchg
js
pop
adc
cmp
mov
xchg
in
xchg
sbb
ss
orb
pop
sbb
dec
add
mov
sub
and
sbb
adc
sbb
pop
cmp
mov
lods
inc
pushf
rclb
iret
mov
rcrb
test
fcoml
xorl
dec
sbb
and
and
jne
fs
call
movsb
out
push
jmp
lods
mov
jbe
mov
loope
cmpsl
add
mov
adc
pop
sub
daa
add
adc
and
inc
sarb
or
popa
push
aam
add
pop
jmp
nop
and
adcb
in
hlt
xchg
outsb
inc
adc
sub
lock
mov
or
popa
sub
mov
xchg
cwtl
pop
sub
aaa
xchg
push
and
push
cmc
sbb
rcl
push
push
and
rorb
scas
cs
cmp
xchg
cmc
sbb
xchg
daa
loop
xor
push
and
loope
outsb
mov
ficompl
add
hlt
and
mov
mov
pop
jo
or
sti
pop
mov
cmpl
inc
inc
je
sbb
mov
mov
jecxz
dec
xor
jecxz
gs
shlb
jns
xchg
test
ss
insb
dec
dec
cmc
cmp
inc
mov
add
add
call
mov
cld
cs
sub
sti
orl
push
in
lcall
push
daa
push
sbb
popa
enter
pop
add
mov
dec
dec
mov
mov
pop
es
mov
movsb
push
outsb
mov
xchg
pusha
shlb
or
rorb
pop
je
xchg
das
cmp
sbb
xchg
inc
mov
arpl
lahf
dec
enter
sti
loopne
add
sub
or
jno
push
movsl
movsb
mov
rcrb
pop
aaa
aaa
jae
nop
sub
cmpsl
fstpt
clc
xor
mov
out
or
mov
jbe
movsl
lods
pop
inc
dec
test
cltd
fisubs
movsl
lock
test
mov
xchg
inc
dec
cmp
in
jnp
out
sti
inc
mov
push
cmp
mov
lahf
stos
test
mov
mov
mov
mov
push
add
or
mov
pop
xor
xor
jno
stc
lock
sub
mov
cmp
inc
pop
fsub
imul
mov
popl
xor
xorb
inc
inc
mov
fwait
xchg
mov
or
jl
xchg
xor
out
movl
mov
and
xadd
inc
pop
shlb
fbld
testb
shl
and
push
adc
xchg
add
les
icebp
es
test
dec
pop
mov
sbb
inc
push
add
push
sbb
jmp
sbb
or
xor
aaa
add
sub
push
sbb
std
seto
adc
mov
adc
fdivl
fwait
sbb
cs
add
push
add
mov
cwtl
sbb
dec
imull
arpl
pushf
rclb
dec
or
adc
and
mov
rorb
dec
or
or
add
add
xor
pop
or
jns
adc
add
lods
in
adc
mov
pop
cltd
addr16
lods
jnp
add
in
insl
lods
dec
roll
insl
orl
test
xor
iret
pusha
nop
pop
ret
lahf
icebp
mov
pop
push
cmpw
adc
fldt
rolb
lahf
enter
inc
push
imul
aas
shll
inc
xchg
mov
andb
sbb
cmp
inc
xlat
rorb
shlb
sbb
cmpsb
icebp
inc
add
push
push
roll
pop
pop
push
fsubs
push
mov
jbe
repnz
rolb
cmp
dec
fildll
xor
pop
loopne
and
call
jne
mov
andl
stos
lock
adc
fsubs
sub
hlt
jae
push
inc
mov
or
mov
mov
daa
inc
lea
add
or
dec
scas
fwait
inc
jae
xor
arpl
jo
dec
inc
cmp
testl
fcoml
or
jno
lcall
or
popw
adc
in
push
pop
cmc
add
xchg
ja
adc
subl
sbb
add
adc
jmp
aaa
xor
jb
lock
push
mov
ret
jno
pop
fstl
ss
dec
adc
ds
xor
iret
inc
aaa
or
inc
daa
push
and
adc
movsb
jp
sbb
mov
call
icebp
dec
xchg
pop
es
add
sbb
neg
imul
xlat
and
add
scas
inc
bound
mov
mov
lock
or
outsb
xchg
adc
sub
mov
push
add
mov
or
out
outsl
pop
adc
add
push
add
adc
out
popf
adc
mov
movb
jne
movsb
jmp
imul
xchg
xchg
push
aad
mov
jns
sub
imul
adc
push
adc
arpl
pop
int3
dec
jo
fdivr
fcmove
daa
lahf
movsb
sahf
xor
nop
jecxz
sbb
shlb
insl
das
idivl
enter
test
neg
sbb
std
inc
add
jo
les
out
sub
cwtl
sub
mov
push
pop
sbb
out
add
or
cltd
inc
cmp
testb
out
jne
xor
jle
or
adc
sbb
jmp
push
cmp
adc
add
sbb
loopne
lock
pop
negb
pop
mov
pop
sbb
mov
out
dec
pop
and
das
adc
sbb
hlt
sbb
dec
sti
rcll
adc
mov
sub
or
cmpsb
cmp
push
push
and
sbb
popf
adc
and
xchg
lahf
sub
jne
add
sub
cmc
pusha
sbb
roll
mov
adc
fcoml
xorb
dec
mov
adc
or
jne
rolb
adc
fs
les
in
aam
and
int
in
mov
dec
cmp
loopne
inc
push
xchg
xor
xchg
outsl
pusha
lahf
xor
and
ret
jo
push
pop
lods
pop
js
test
xchg
icebp
lods
and
scas
inc
mov
pop
add
add
jmp
jl
outsb
pop
adc
test
pop
push
jbe
xor
addr16
ds
cmc
jl
sub
jl
andl
jmp
add
pusha
movsb
push
cli
daa
dec
and
lahf
mov
sub
mov
imul
cmp
xor
and
inc
aaa
jge
mov
nop
pop
dec
mov
clc
mov
call
sar
xchg
xchg
sbb
jmp
push
xchg
mov
repnz
add
push
stc
adc
dec
mov
sbb
xchg
xor
pop
dec
add
int3
movl
rolb
mov
cmc
paddb
dec
sar
aaa
lods
xlat
push
cwtl
roll
aaa
sub
popf
mov
xor
popa
mov
and
loop
movsb
into
add
bound
rclb
or
push
add
pop
jno
ljmp
rol
int3
lcall
inc
sub
pop
lock
or
cltd
cli
or
jo
jmp
jne
sub
xor
sub
push
loope
clc
push
ss
pop
dec
sub
clc
add
jp
mov
leave
test
add
xchg
pusha
jge
jno
mov
adc
mov
ss
daa
nop
cltd
add
clts
pop
in
push
in
cmp
pop
sti
sub
inc
adc
jmp
mov
loop
movsb
roll
sub
and
push
inc
jmp
in
int
inc
mov
mov
or
add
scas
rep
sbb
insb
in
or
rcr
lds
movb
loope
pop
push
push
dec
mov
jmp
imul
and
mov
pop
cltd
mov
pop
gs
xchg
test
mov
dec
mov
jmp
das
mov
shl
sti
shrb
mov
test
inc
cld
jo
sbb
jmp
pop
cmc
or
cld
popa
and
add
inc
adc
xchg
xchg
push
jno
lret
ss
and
and
jle
insl
sub
hlt
push
mov
pop
leave
inc
sbb
test
outsl
enter
cld
xlat
push
dec
sbb
stc
xchg
sub
push
and
push
stos
subl
push
jp
pop
cmp
cli
sbb
aad
lds
in
dec
or
ja
xchg
roll
mov
jmp
or
xchg
sub
mov
pusha
inc
inc
mov
pop
sub
out
and
inc
jmp
sbb
jne
xor
mov
xor
icebp
fs
scas
addr16
dec
mov
xor
sbb
adc
xchg
pop
inc
sbb
lea
adc
cwtl
mov
ret
pusha
repnz
add
imul
push
xor
xchg
xchg
shlb
adc
mov
enter
push
por
je
jmp
cwtl
and
adc
inc
into
sbb
jg
sbb
ret
gs
in
add
jbe
cltd
pop
add
push
xor
sbbb
popa
jns
or
inc
push
pop
fldl
in
jmp
mov
add
add
dec
add
pop
add
js
aas
je
or
pop
sub
mov
and
loopne
jp
dec
sub
sbb
rorb
mov
push
and
das
add
adc
inc
mov
adc
int3
jne
mov
movsl
pop
mov
mull
xor
pop
out
xchg
sub
call
mov
push
pop
inc
les
fstl
adc
out
or
stc
shrb
insb
add
rclb
inc
mov
and
adc
aad
pop
xchg
pop
aam
cmpb
add
jmp
lret
dec
or
cmp
daa
dec
mov
fcomp
add
movsb
dec
mov
pop
push
push
or
imul
lcall
dec
test
std
adc
dec
ret
leave
xchg
inc
xor
adc
sahf
sbb
xchg
or
pop
jl
mov
rorl
and
jo
inc
pop
dec
sbb
lock
xchg
add
xchg
add
call
movl
pop
mov
sbb
pop
dec
mov
dec
mov
loopne
movsl
jo
xchg
scas
dec
add
mov
dec
enter
push
dec
sbb
les
push
js
add
hlt
pop
pop
jmp
add
insb
shlb
in
sub
pop
push
mov
int
bound
pop
and
bound
outsb
adc
and
sub
popa
pop
ja
fildl
push
shrb
cmp
mov
and
pop
jnp
push
loop
or
add
and
mov
or
popl
addl
pop
mov
and
pop
xor
xor
pmaxub
mov
jbe
les
je
sbb
dec
test
mov
push
rcll
test
xor
and
sub
lock
div
fs
push
fs
testb
add
xchg
mov
lret
fdivrs
cmp
xor
test
cwtl
pop
out
inc
mov
insl
insb
es
or
push
stc
inc
xchg
ret
sub
pop
lret
dec
mov
ret
jnp
pop
cs
subb
pop
inc
inc
or
mov
sbb
mov
mov
jecxz
cli
push
adc
sbb
or
sarl
and
stos
pusha
cmp
xlat
mov
cmpb
inc
and
mov
je
cmpsl
leave
add
pop
cli
add
movsb
jo
scas
imul
notl
cmpl
popa
dec
mov
add
into
mov
mov
je
testl
in
push
or
addb
cld
rcl
call
fyl2x
add
cmp
call
in
call
bound
pop
jecxz
test
xor
mov
loopne
or
in
ret
es
mov
nop
in
dec
mov
in
call
jmp
lcall
cli
or
cmp
adc
mov
jb
mov
cmp
pop
mov
fildl
ret
mov
adc
cmp
dec
mov
mov
jge
imul
or
xchg
mov
adc
les
or
lea
xor
push
fs
inc
inc
add
fs
sub
push
sub
mov
fiadds
in
adcl
ret
add
mov
add
sbb
jno
xchg
xlat
sub
sbb
sbb
add
lea
dec
rcr
or
adc
mov
adc
ljmp
sub
jle
jg
mov
inc
arpl
add
fsubr
test
sbb
mov
rorb
bound
sub
scas
dec
in
adc
jge
je
adc
pop
pop
fnstcw
inc
inc
js
push
pop
mov
insb
and
pop
mov
mov
add
mov
cmp
mov
inc
add
push
cmp
pop
and
sar
xchg
cmp
sbb
int
movl
andl
fimuls
in
ret
jo
xor
test
loop
cmp
sbb
jb
adc
cld
cld
cld
and
in
inc
add
xchg
add
inc
push
sbb
or
xor
test
jecxz
mov
mull
push
int
sub
aas
mov
sbb
sahf
xchg
adc
jno
shlb
add
lcall
push
cwtl
or
in
adc
in
cmp
or
lahf
mov
fadd
and
mov
decl
adc
sti
jmp
aad
pop
adc
pop
adc
push
imul
sbb
and
or
inc
add
dec
cli
mov
sub
dec
sbb
enter
test
adc
insl
rclb
ret
test
pop
xor
mov
mov
xchg
xor
cld
push
adc
xor
test
ljmp
mov
setns
dec
dec
dec
dec
xor
pop
mov
push
inc
pop
mov
push
int3
sub
and
lds
sub
mov
ret
pop
adc
vpackssdw
mov
aas
push
fcmovnb
and
pop
dec
dec
cmovs
dec
dec
dec
jb
inc
push
pop
pop
movsb
mov
or
push
push
fidivl
adc
or
inc
dec
aas
push
push
xchg
imul
bound
mov
inc
push
lcall
fs
xchg
cmpsl
shlb
xchg
jmp
pop
iret
cmp
pop
mov
dec
sub
fisubrl
insl
outsl
sbb
dec
ret
pop
lds
and
mov
clc
add
push
jno
jb
call
pusha
or
outsl
fists
push
inc
pusha
mov
test
out
push
dec
cmp
hlt
jle
es
mov
xorb
add
aas
cmp
imul
test
dec
inc
xor
xor
sbb
or
pop
add
fsubrs
xchg
xor
or
fisubs
sub
or
pop
mov
push
dec
jbe
mov
mov
sbb
sbb
add
jo
pusha
dec
shlb
leave
sahf
das
jae
pop
ds
mov
dec
cmpsb
push
xor
add
xor
adc
add
pop
cmpsb
mov
les
push
push
cmp
mov
sbb
mov
movsl
pop
lock
out
jecxz
xor
daa
mov
jbe
sbb
sub
mov
shrl
mov
dec
jge
les
imul
or
or
mov
cmp
sub
into
cwtl
pop
sbb
scas
loopne
jbe
or
cmp
pusha
in
std
dec
loop
and
cmc
sub
scas
rorb
push
xor
jno
mov
mov
orb
adc
negb
cli
sub
iret
mov
inc
sbb
fcmovne
stc
pop
xor
push
rol
add
cmp
ret
loop
test
xchg
lds
cltd
sub
pop
and
pop
adc
push
xchg
cmp
imul
and
fidivrs
insb
sbb
jecxz
xor
mov
and
jg
movzwl
or
xor
mov
sar
int3
jne
cmpl
pop
std
mov
push
imul
and
xor
cmp
push
xor
outsb
or
cmp
inc
jnp
push
cmc
shlb
pusha
imul
rcrl
push
iret
xor
jae
cmpsb
mov
jo
jne
inc
push
xchg
pop
cltd
cmovo
xchg
movsb
test
push
pop
orb
jne
sub
or
shl
or
popa
push
push
push
sub
fists
ds
xchg
incl
or
out
add
insb
pop
outsb
pop
push
orb
xchg
push
mov
aaa
sub
dec
jo
xor
pop
push
ret
jle
inc
pop
and
pop
lea
lea
cmp
daa
dec
ja
sub
dec
je
adc
sub
test
outsl
cmp
or
dec
lcall
add
and
sub
stc
fcmovnu
lcall
outsl
and
xor
rcll
xor
icebp
or
sbb
mov
sbbl
mov
mov
mov
push
testb
inc
add
add
movsl
sahf
inc
popa
xchg
or
clc
jns
testb
and
jmp
repnz
cs
das
pushf
shr
es
sbb
cmp
xchg
cltd
push
jbe
lods
imul
rolb
add
subl
xchg
jne
add
stc
jl
dec
test
call
es
ret
adc
cli
and
mov
push
cmp
clc
hlt
push
pop
insl
out
push
dec
xchg
pop
movsl
add
mov
and
sbb
cs
xor
push
cmp
fimuls
adc
pcmpeqb
and
add
jmp
sub
jp
add
test
enter
xchg
adc
or
jne
cltd
and
sbb
push
dec
cmp
pop
in
iret
xchg
add
bound
jno
sbb
ret
cmp
repz
push
mov
imul
sub
inc
and
clc
pop
add
jmp
sub
inc
sub
pop
vmovshdup
inc
jmp
sbb
bound
je
cmp
jns
dec
es
ror
cmpsb
xchg
inc
inc
jmp
ret
mov
insb
fistl
and
add
adc
js
adc
adc
jb
add
test
clc
inc
mov
inc
mov
cmp
inc
mov
rcll
mov
mov
stc
cmp
hlt
je
clc
sbb
sub
call
fs
xlat
cmp
push
test
add
adc
orl
sbb
sbbl
movsl
outsl
mov
xchg
les
fisttps
lahf
mov
sarl
pusha
adc
test
cltd
sbb
clc
pusha
lea
gs
dec
push
mov
add
lock
cld
insb
imul
shlb
or
sub
xchg
sbb
enter
add
add
dec
mov
add
mov
popf
sbb
xlat
scas
inc
pusha
add
rolb
fucomip
pop
sbb
orl
xor
sbb
xor
xor
push
stc
out
and
xchg
mov
mov
pop
out
in
xchg
add
das
sub
mov
xchg
pop
les
repz
xchg
sub
inc
or
mov
ljmp
les
jmp
mov
ret
adc
mov
cltd
rcl
sub
sbb
imul
sbb
pop
out
adc
dec
xlat
mov
adc
lret
jp
mov
loop
jb
nop
sbb
sub
inc
sbb
add
pop
outsl
xor
mov
cli
popa
loop
xor
cmp
adc
push
sub
clc
push
pop
or
sbb
inc
dec
test
add
call
in
ret
test
movsl
bound
adc
sub
pop
pop
push
jbe
inc
push
add
jg
pop
popa
andb
mov
hlt
xor
cld
sbb
js
mov
sub
js
into
leave
je
pop
popa
adc
and
mov
icebp
cmp
sub
add
add
adc
push
loopne
sbb
fsubr
ja
aam
and
ret
leave
or
rolb
push
xor
xor
jno
es
cmp
mov
hlt
cmpsb
adc
dec
fsubr
adc
xor
mov
add
sbbb
push
or
scas
cmpsl
dec
mov
stos
and
add
aas
roll
test
pop
fidivl
pop
jmp
jne
jns
mov
inc
xor
and
loope
test
into
sbb
pop
or
repz
mov
movl
test
xorb
mov
or
add
mov
xor
or
xor
adc
push
subb
mov
cld
sbb
inc
mov
jae
negb
or
add
gs
call
cmp
cmp
clc
push
mov
sti
rorb
push
and
stc
lock
push
cmpsb
push
loope
loope
test
push
pop
into
roll
sahf
adc
daa
das
dec
or
or
aaa
dec
dec
dec
inc
inc
inc
outsb
jecxz
inc
test
xor
addl
cmp
pop
push
pop
call
leave
fsubrl
ja
inc
sbb
sbb
xor
and
jae
cmpsl
movb
or
mov
rcr
pop
push
push
and
and
js
and
jnp
add
add
jo
test
inc
lea
xor
ljmp
nop
add
jecxz
mov
sub
cmpsl
lock
aam
dec
xor
repnz
and
nop
fsubrs
xor
push
int3
je
inc
out
dec
add
pop
mov
adc
xor
cmpb
inc
jo
pusha
or
and
mov
aam
sbb
push
ret
adc
add
xor
push
push
add
lods
repnz
and
cmpsb
orl
je
adc
push
insb
sub
xor
mov
sub
add
mov
inc
sbb
repnz
clc
push
aaa
sbb
xor
in
adc
mov
cmp
and
aam
mov
rolb
shrb
inc
adc
dec
cmp
push
fs
sbb
sbb
sbb
or
fs
ss
pusha
xor
test
lahf
xor
or
jb
decl
dec
clc
ret
push
mov
enter
xor
je
das
js
dec
mov
or
or
cli
adc
inc
xor
outsl
nop
adc
pop
dec
mov
out
dec
and
mov
and
xchg
xchg
mov
cmpl
rolb
sub
pop
call
lods
dec
lock
pop
mov
adcb
loop
fs
pop
cmp
mov
push
adc
inc
out
push
inc
mov
xor
aad
push
das
add
add
scas
jae
in
mov
imul
push
sbb
ret
push
mov
ljmp
adc
imul
ucomiss
je
and
push
mov
jne
test
sub
mov
fsubrs
test
cmp
add
adc
or
adc
nop
clc
add
cmp
push
rclb
inc
js
dec
push
sub
loope
in
or
adc
or
test
adc
mov
and
push
xchg
loopne
push
push
xor
loopne
test
out
daa
inc
xor
adc
add
in
jg
lods
sub
dec
jbe
imul
and
cmp
cwtl
push
pop
fcoms
mov
outsl
sbb
fsubrs
das
clc
add
pop
mov
xchg
sbb
loop
or
dec
pop
cmp
and
jmp
adc
xor
cmp
pop
and
sbb
cmpsb
mov
scas
and
add
in
push
jg
adc
add
nop
mov
in
push
sbb
sbb
push
sbb
out
pop
outsb
sub
xchg
in
jbe
idivb
daa
mov
bnd
jae
sub
sbb
inc
add
push
fnstenv
cmp
adc
daa
call
pop
jg
push
icebp
imul
adc
adc
scas
sbb
bound
jb
fstpt
loope
sbb
enter
out
add
jbe
sahf
dec
pop
push
add
dec
icebp
add
enter
xor
shl
jp
xor
or
rorb
stos
sub
into
push
dec
lods
sbb
pop
nop
dec
and
test
cmp
inc
push
and
pop
xor
popf
inc
sub
comisd
lret
or
hlt
aad
sbb
pop
jg
movl
mov
pop
cld
js
add
and
pusha
or
pusha
jo
pop
add
mov
sub
inc
fsts
inc
inc
stos
and
bound
icebp
dec
and
cltd
inc
cmp
xor
mov
push
les
mov
loopne
inc
push
lods
and
inc
add
int
adc
mov
scas
pop
test
flds
mov
clc
add
js
ret
inc
xor
lsl
add
insl
fdivs
arpl
fidivs
jb
xchg
add
mov
xor
mov
push
sbb
stc
cmp
fs
loopne
aad
mov
xor
repz
call
clc
imul
rcll
push
add
jae
adc
jg
mov
mov
dec
or
sahf
xor
xchg
popa
sbb
cmp
fildl
lods
sbb
dec
cmp
dec
rcrb
and
je
and
ljmp
lret
shlb
arpl
rol
xchg
outsb
and
int
inc
rolb
mov
xor
push
cmp
lods
and
add
xchg
xchg
imul
lcall
jno
dec
ret
pop
add
pop
test
sti
ja
sbb
lods
pusha
cmpsl
xchg
xor
xchg
push
add
sub
pop
mov
jb
sub
inc
and
das
js
pop
fwait
lods
jno
xchg
popf
loop
inc
mov
jmp
arpl
cli
outsb
ja
sub
mov
sbb
or
jl
jmp
out
orl
sbb
adc
mov
sbb
in
jmp
push
jnp
sub
aaa
mov
fs
jbe
insb
je
insb
mov
xchg
xor
in
cmpsb
hlt
xchg
gs
movb
stos
mov
pop
or
stos
dec
and
and
pop
mov
add
pop
jo
mov
sbb
inc
inc
xchg
dec
adc
fwait
aas
mov
je
push
push
inc
arpl
sti
add
push
dec
pop
xor
icebp
js
push
test
jmp
aaa
sbb
mov
jne
ret
sbb
sbb
cmp
test
cmp
in
sbb
pop
icebp
or
add
test
shrl
fsubs
mov
mov
push
cmpl
mov
add
jnp
inc
or
popa
test
mov
stc
xchg
and
add
pop
jns
pop
dec
mov
push
mov
sbb
popf
pop
and
mov
ret
cmpsb
sti
or
leave
mov
add
mov
test
jmp
mov
loopne
mov
fidivl
jne
addl
pop
push
sti
gs
cmpb
xchg
ss
imul
and
add
xorb
mov
sub
dec
mov
sbb
test
mov
push
dec
xor
mov
fimuls
jmp
punpckldq
popa
add
push
dec
xchg
mov
outsb
dec
mov
cmp
adc
pop
pop
rorb
dec
inc
int
outsb
mov
pop
pop
popf
xchg
push
cmp
jne
mov
arpl
ljmp
lea
mov
xchg
dec
and
pop
mov
iret
adc
je
mov
aad
dec
sub
inc
xchg
cli
mov
push
loope
sahf
push
jne
rorl
or
or
fdivs
push
push
cmp
mov
in
roll
and
in
sahf
popa
iret
cmp
xor
adc
test
push
adc
mov
pop
lods
movsl
daa
sub
xchg
xor
sub
xor
shld
roll
adcb
and
sub
mov
mov
rolb
movsl
daa
popf
nop
ja
mov
pop
add
sbbb
stos
cmp
pop
das
sbb
popf
push
cmp
jne
dec
push
fdivrs
jne
lea
mov
dec
xchg
mov
push
mov
inc
sbb
dec
mov
call
xchg
ret
cmp
sbb
sbb
bound
add
pusha
xchg
sub
insb
pusha
xchg
push
adc
pcmpgtd
ret
rorl
ss
jbe
sti
mov
add
push
jmp
js
stos
lea
aas
shrl
or
inc
daa
bnd
int3
rolb
or
scas
pop
cmp
add
and
icebp
daa
int3
inc
and
test
gs
lods
insl
dec
mov
jmp
add
add
hlt
xchg
insl
dec
mov
adc
je
movl
mov
loop
test
mov
pop
and
lret
lcall
xor
jne
rcll
mov
cmp
shrb
outsl
pop
sbb
xchg
sbb
ror
hlt
push
lret
pop
add
adc
test
stc
inc
mov
dec
sbb
sbb
jno
and
mov
lods
cltd
and
inc
andb
cmp
es
or
dec
das
clc
clc
call
pop
test
adc
or
out
inc
xchg
jle
icebp
mov
insb
adc
pop
pop
jbe
in
add
adc
sbb
ret
nop
sbb
sbb
fs
inc
sarb
cmp
add
xor
cwtl
inc
jg
inc
push
jmp
fcom
xor
pop
and
hlt
es
inc
stos
jne
movsl
ss
jg
ds
xchg
dec
in
fsubr
es
mov
ja
movsl
and
xchg
dec
mov
sub
add
pop
pop
cltd
sub
sbb
pop
verw
push
fdivrl
addb
inc
jnp
add
push
xorl
mov
fwait
daa
dec
imul
dec
sarb
dec
loopne
nop
jbe
inc
dec
outsl
clc
and
sbb
call
mov
cmp
dec
push
jns
outsb
outsl
or
mov
lods
inc
cmp
push
bound
push
mov
nop
das
push
adc
hlt
push
mov
test
cwtl
gs
outsl
je
mov
mov
iret
shl
inc
push
inc
adc
leavew
inc
sbbl
push
add
aas
mov
and
iret
push
and
je
sub
pop
dec
jp
cmp
loope
add
adc
or
inc
outsl
sbb
dec
cs
mov
add
dec
and
pop
nop
mov
pop
ret
xor
sbb
in
and
mov
and
rol
fdivrs
pop
mov
lret
test
cmp
je
orl
dec
add
xor
push
push
cmp
clc
mov
adc
dec
xor
in
flds
mov
insb
add
inc
into
inc
frstor
jo
cwtl
int
and
sbb
pop
sub
or
cmp
addr16
or
jnp
inc
cmp
add
add
sti
lods
fsts
mov
hlt
pusha
adc
filds
sub
inc
add
nop
push
xor
loopne
xchg
xchg
sub
sbb
and
mov
push
shrl
pushf
shlb
cmpsb
push
or
arpl
sub
int
pusha
and
inc
ret
add
mov
mov
gs
and
daa
push
orb
lahf
jbe
inc
push
cmpsb
dec
or
hlt
cmpsl
push
shr
sbb
filds
shlb
fbld
dec
sub
inc
adc
cmp
cmp
pop
sbb
rorl
xchg
cmp
xchg
mov
andps
lock
lea
movsb
std
ja
mov
dec
adc
insb
inc
dec
cs
push
scas
add
and
pop
andl
test
sahf
aad
add
test
mov
xchg
sbb
mov
jne
lea
seto
neg
add
and
push
sub
adc
mov
pusha
mov
ret
hlt
sub
mov
mov
pop
cmpsb
inc
leave
or
loopne
and
xor
jmp
inc
lret
sub
inc
xchg
inc
js
pop
addb
push
std
movsb
imul
popa
insb
and
push
sub
cmp
jne
xchg
pop
mov
xchg
mov
pop
ret
dec
add
pop
fwait
or
btr
and
test
xor
js
push
roll
xor
mov
add
pop
daa
cmpl
negb
jbe
mov
mov
pop
out
pop
push
lock
inc
fiaddl
inc
nopl
es
xchg
in
lock
rolb
or
fcmovnb
sub
cmp
mov
adc
push
sbbl
cmpsb
sub
pop
sub
xlat
lea
or
lock
hlt
daa
inc
cli
shll
scas
xchg
test
out
inc
or
cli
je,pt
rcr
dec
or
lock
out
push
or
cwtl
call
scas
xor
ss
insl
cmc
add
scas
add
sub
clc
inc
jne
rclb
push
push
inc
cmp
lock
mov
or
jp
ljmp
push
mov
loop
mov
sar
add
mov
sub
gs
faddl
rcll
or
adc
mov
lock
jle
aad
repnz
jns
idivl
sub
mov
push
movsl
lock
inc
inc
call
iret
in
pop
shlb
ja
ret
mov
movsb
imul
lds
push
pop
or
je
pop
mov
pop
sbb
dec
mov
xchg
cmpb
lret
push
loopne
gs
aam
repnz
and
aam
sub
leave
dec
rcrb
pusha
in
scas
xor
lock
jno
lret
sub
pop
ljmp
inc
and
mov
sub
hlt
data16
push
mov
sub
inc
add
inc
inc
or
inc
add
scas
jo
or
clc
xchg
pop
ss
dec
push
inc
mov
pop
call
inc
add
or
out
inc
pushf
pop
sub
mov
fstpt
jg
sti
xchg
and
into
add
loopne
xlat
adc
sub
adc
mov
insl
pop
mov
inc
or
dec
aas
mov
ss
aad
mov
pop
mov
mov
sub
inc
popa
imul
in
insb
inc
and
or
dec
cmp
inc
sub
xor
jmp
jo,pn
pushf
mov
mov
shlb
sbb
adc
pop
pusha
mov
cmp
in
in
kmovw
mov
cmpsl
andl
and
repnz
lea
cmp
popf
or
dec
shr
cltd
sub
mov
xor
pop
adc
push
out
test
and
push
lea
and
mov
les
pop
les
ret
sub
push
mov
sbb
ljmp
pushf
lret
xchg
xor
xchg
xor
jno
bound
adc
inc
pop
jne
inc
arpl
pushf
push
je
adc
inc
add
xor
pop
repz
mov
mov
nop
pop
ret
adc
sti
sbb
xlat
dec
push
bound
inc
test
mov
mov
pop
dec
add
mov
fdivs
push
pop
xchg
push
add
scas
mov
bound
add
jbe
adc
rorb
insb
jo
in
pop
addl
sub
cmp
add
or
mov
xchg
jmp
jbe
aam
fimull
sbb
daa
cs
mov
scas
pop
jne
sbb
sub
xor
fldt
mov
orb
xchg
adc
and
push
pop
inc
dec
mov
mov
xchg
mov
je
dec
shlb
imul
inc
cmp
je
test
aaa
push
fcomps
imul
xchg
jne
sbbl
adc
or
into
add
ret
ja
cmp
mov
nop
xchg
nop
aas
or
dec
lcall
decl
int3
mov
add
inc
xchg
xor
pusha
or
test
cwtl
lea
or
insb
mov
dec
mov
or
jbe
jne
jno
and
dec
ret
fidivrl
inc
inc
add
dec
sbb
adc
in
mov
mov
sahf
popf
les
push
stc
sbb
xchg
mov
add
sbb
popa
fdiv
mov
mov
in
outsb
add
test
cwtl
les
inc
push
add
std
add
sbb
cmp
inc
push
push
orl
jb
movsb
or
cwtl
xchg
xchg
xchg
pop
nopl
adc
xchg
xchg
xchg
adc
add
repnz
movsb
pop
dec
dec
inc
add
in
push
dec
inc
add
fcomps
add
daa
mov
daa
mov
jecxz
or
pop
dec
outsl
addr16
testb
sbb
cmp
inc
jmp
fisttps
adc
pop
and
push
inc
mov
or
or
rcrb
inc
or
push
pop
daa
xor
testl
adc
or
add
push
lcall
addr16
jae
fimuls
xchg
out
add
movsb
outsb
or
push
pop
dec
jae
adc
push
pop
push
ljmp
sbb
sub
sub
ss
or
mov
mov
add
ljmp
xorl
add
mov
push
push
outsb
mov
ss
test
nop
faddl
jae
sub
add
dec
or
inc
or
pop
inc
outsl
adc
inc
or
mov
pop
push
and
mov
jb
aaa
inc
nop
rorb
fdivp
xor
sbb
or
sub
sub
adc
dec
jae
cmp
push
and
pop
shll
lahf
or
imul
xor
cmp
test
or
and
or
jle
mov
push
outsl
mov
mov
sbb
adc
or
test
das
pushf
dec
nop
in
push
int
add
fcomps
leave
add
or
sbb
xchg
dec
push
in
sub
out
popa
jne
addl
cmp
aad
adc
jg
cmp
test
jo
rcrl
cmp
cmp
add
inc
push
jp
lock
cwtl
xor
sbb
pop
xor
cmp
pusha
push
mov
hlt
inc
bound
mov
in
xor
divb
jo
out
jl
out
nop
lcall
sarl
in
sbb
push
inc
inc
hlt
jb
test
cmp
and
roll
pop
push
add
sub
dec
jl
pop
sbb
sbb
inc
or
pop
aaa
push
repz
fists
or
daa
add
xor
mov
push
or
outsb
lcall
xchg
cmpb
mov
mov
je
or
pop
mov
test
pop
xor
sbb
ret
cmp
fisubl
mov
mov
inc
jg
xchg
sbb
ss
das
push
cmc
mov
mov
mov
and
sbb
and
call
subb
inc
cmp
push
js
xchg
pushf
xchg
cmp
xorb
test
mov
stos
sub
dec
bnd
imul
dec
test
pop
cmp
push
lcall
sbb
adc
bswap
jae
add
js
sub
push
call
jl
sub
push
add
fwait
mov
pop
mov
arpl
repnz
jb
dec
nop
rorb
loope
int3
add
dec
mov
sbb
and
jbe
xchg
outsb
insb
mov
test
xor
les
in
leave
pop
data16
nop
push
int3
pop
fidivs
lods
push
pop
fsubp
push
cmp
or
mov
insb
in
push
jo
dec
insb
aas
pop
dec
cmc
pop
xor
out
loopne
adc
sbb
dec
pop
gs
xor
jo
imul
or
and
ret
push
and
xor
push
repnz
pusha
insb
pop
test
inc
and
ja
and
js
lods
mov
and
add
mov
adc
xchg
dec
pop
pop
xor
rolb
bound
or
pop
jo
cld
add
mov
fcoms
pop
push
sbb
prefetch
or
jl
cmp
dec
fbstp
or
cltd
inc
imul
aas
into
dec
inc
sbb
add
scas
inc
mov
cmpsl
sahf
sub
adc
imul
fadd
stc
or
pop
xchg
fs
or
jge
inc
fists
adc
pushf
xchg
push
sub
add
and
adc
fmuls
lods
lret
pop
out
mov
scas
ret
jne
dec
add
nop
add
inc
or
lea
xor
add
or
jae
mov
xor
push
inc
xchg
sbb
in
xor
mov
add
les
enter
adc
aam
dec
enter
pop
add
notl
int3
sub
fdivrs
daa
out
adc
rol
dec
in
stc
mov
mov
mov
pop
mov
mov
nop
das
pop
mov
mov
stos
inc
or
add
xor
xchg
jl
cmpl
js
mov
or
jecxz
dec
pusha
add
enter
pop
jmp
add
pusha
push
push
or
sub
jge
add
sbb
orl
addr16
cli
sub
outsb
pop
filds
ficoms
ret
out
inc
cmp
push
sbb
xor
xchg
or
push
mov
jmp
pop
and
dec
sbb
or
cmp
xchg
mov
sub
leave
imul
sub
addr16
sub
mov
pop
stos
filds
bound
dec
or
inc
sahf
mov
hlt
rcl
push
cmp
je
hlt
nop
cli
popa
pop
xchg
cmpsb
inc
les
push
and
jmp
jg
mov
lretw
add
push
fisubrl
push
rclb
inc
pop
sbbb
xchg
mov
jg
mov
leave
ror
lcall
sub
mov
xchg
or
ds
movb
lahf
mov
inc
js
into
imul
rorb
inc
mov
add
jmp
add
push
adc
lret
aad
sbb
retw
aas
imul
xor
mov
sub
jo
sbb
test
shlb
adc
xchg
add
rorb
mov
cs
xchg
dec
ret
jl
testb
or
stos
push
inc
mov
sbb
arpl
push
in
nop
mov
or
pop
sub
add
pop
mov
push
inc
sub
dec
les
or
sub
iret
aas
rcl
mov
in
pop
dec
mov
and
addb
and
xlat
and
sub
xor
ret
enter
mov
sub
jbe
mov
inc
sarl
bound
es
cmp
dec
mov
cmp
dec
jg
add
xor
jb
fwait
inc
scas
xor
xchg
add
xchg
ret
leave
push
in
scas
push
test
and
mov
jne
sub
jb
xor
jl
xchg
adc
push
cmp
cmpsl
cli
xor
or
std
idivl
adc
mov
mov
adc
and
mov
add
inc
lock
and
and
pop
push
sbb
dec
ret
mov
std
je
or
adc
dec
dec
dec
fadds
dec
pop
and
adc
pop
ds
inc
rolb
mov
test
in
jp
xor
stc
push
pop
addr16
in
push
dec
loopne
loope
leave
shlb
adc
sbb
pusha
dec
inc
cmpsl
cmp
decl
jnp
push
or
enter
pop
xchg
in
xchg
pop
ja
cmc
and
call
fdivrs
add
xor
push
fs
andb
call
pop
push
inc
mov
sbb
js
xchg
shrb
fiadds
cmp
and
push
and
bound
pop
loopne
mov
nop
add
dec
mov
lock
addl
xchg
or
out
add
add
push
mov
addl
stc
call
jle
mov
and
and
pushf
hlt
call
inc
sahf
inc
sub
and
jmp
les
or
hlt
mov
insb
or
andb
push
sub
movsb
fwait
cmp
mov
ret
or
xor
outsb
cs
test
dec
sti
push
dec
and
test
pop
ret
loope
test
push
inc
in
add
add
or
mov
in
sbb
sbb
in
lcall
movb
outsl
inc
cs
pushf
sbb
in
cmpsb
popa
icebp
loopne
dec
inc
dec
in
clc
loopne
push
push
inc
pop
add
sbb
jae
int
xchg
xchg
pop
ljmp
ss
pusha
sbb
and
xchg
rcl
shl
fdiv
and
push
push
cltd
mov
ss
xchg
add
fwait
cmp
gs
rorb
add
das
daa
inc
mov
jecxz
cmpl
ret
cmp
loope
mov
ljmp
dec
pop
xchg
jb
out
repnz
push
pop
mov
xchg
sarb
or
xor
jg
mov
and
sub
sbb
dec
sti
fists
sbb
xchg
or
sub
call
pop
xor
je
pop
add
sbb
sub
add
inc
xor
fdivr
push
stos
add
xchg
xchg
push
push
jns
arpl
aad
lds
sahf
loope
stos
add
push
sub
fildll
or
adc
loope
gs
jne
dec
inc
mov
das
lock
push
clc
mov
push
dec
std
pop
add
fwait
insb
pusha
add
inc
enter
gs
push
inc
lcall
adc
and
pop
loopne
das
add
lds
inc
orl
insl
mov
or
add
nop
dec
push
add
sub
and
gs
aam
or
lea
idivb
pop
or
dec
cmp
aas
push
jl,pn
push
mov
dec
mov
or
adc
mov
in
inc
push
push
sarb
push
pop
push
pop
call
push
test
pop
push
lahf
scas
fucomip
xchg
adc
pop
or
sbb
stos
lods
test
movsl
jo
hlt
dec
test
cs
lods
mov
fcoml
inc
add
ss
mov
pop
das
icebp
jb
mov
mov
xchg
mov
adc
or
dec
rolb
adc
clc
jae
adcb
out
test
mov
cmpsl
push
dec
cmpsl
enter
mov
cmpsb
imul
repnz
leave
imul
and
mov
cld
pop
push
xchg
shll
jmp
pop
dec
inc
xchg
or
lret
jge
jge
test
je
insl
mov
push
pop
adc
jmp
sub
cld
dec
pop
push
jmp
rcrb
shr
mov
in
mov
lods
lods
je
xchg
jno
rorb
push
sbb
inc
add
sub
adc
data16
jne
cmp
mov
push
mov
jbe
js
adc
dec
sbb
jle
int3
mov
and
inc
enter
enter
sub
in
and
enter
loopne
orb
jnp
cmp
pop
test
enter
add
pop
inc
or
dec
sub
or
dec
imul
insl
and
cmp
xlat
mov
inc
ds
in
push
movb
imul
aad
shlb
ret
and
pop
jg
insl
dec
add
push
movsb
push
add
or
cmp
imul
pop
xchg
imul
cmp
fcoml
imul
push
inc
adc
loopne
popa
fisttpll
rorb
les
push
or
mov
or
or
das
inc
lcall
adc
je
ljmp
mov
aaa
pop
imul
push
sbb
test
adc
ret
popa
adc
loopne,pn
sub
or
in
xor
and
add
fucomip
in
jecxz
pop
lahf
sbb
outsb
mov
lock
outsb
jle
pop
sbb
test
pop
jmp
mov
pop
and
mov
cmp
inc
mov
movl
xchg
inc
add
xor
or
imul
adc
xchg
xchg
push
xlat
outsb
or
sbb
hlt
movsb
dec
and
dec
sub
lea
mov
or
hlt
and
or
mov
repnz
push
mov
cltd
and
or
rol
add
sub
in
inc
add
pop
rcr
and
clc
repz
adc
push
cmp
xchg
adc
int
mov
sbb
push
mov
sub
pop
sub
in
dec
push
push
inc
dec
dec
dec
dec
or
icebp
lea
inc
mov
call
mov
mov
xchg
js
pop
out
add
adc
imul
cmp
mov
push
cwtl
add
out
push
xchg
jo
mov
outsl
add
inc
shrb
ret
mov
inc
inc
pushf
inc
sub
scas
mov
es
mov
leave
int
mov
nop
mov
sbb
fcoml
and
roll
sahf
jnp
jmp
mov
add
imull
push
adc
ret
call
jb
out
arpl
and
cmp
push
enter
mov
mov
pop
mov
adc
loopne
in
fucomp
mov
clc
addr16
push
es
mov
sbb
icebp
jmp
mov
sbb
mov
mov
rcl
inc
pop
and
imul
push
and
add
jl
push
pop
sub
das
popa
jb
inc
pushl
mov
rclb
insb
mov
cmpsl
popa
dec
xor
xor
sbb
ret
or
test
sar
dec
in
xchg
aam
jae
adc
add
cmp
movsb
xor
in
call
pop
in
insb
sub
push
sbb
jl
mov
gs
clc
pushf
cld
and
add
sysret
movsb
xor
or
les
or
xchg
das
mov
cmp
jmp
insb
lret
jne
add
jae
outsl
je
dec
xor
dec
imul
jb
pop
dec
sub
in
and
pop
aaa
das
and
mov
push
sub
push
dec
or
ds
sbb
jne
test
push
test
insb
in
or
pop
jge
cmp
aas
xchg
nop
or
and
jo
pop
add
clc
and
push
faddl
inc
aas
sub
pop
leave
in
cmp
xchg
mov
push
and
xchg
fsubrl
rorb
or
in
insl
mov
mov
jne
sbb
ss
push
xchg
push
mov
dec
scas
and
test
fidivrs
lock
inc
arpl
imul
mov
add
stc
addb
or
add
cmp
push
jp
lret
repnz
clc
push
adc
pushf
add
sbb
mov
dec
ds
nop
or
and
ss
in
cmpb
pusha
jl
dec
mov
adc
arpl
pop
mov
test
mov
cmpsl
mov
insb
popf
pop
mov
imul
jne
rorb
push
pop
add
imul
cmp
ja
inc
pop
sbb
aaa
ret
lahf
leave
mov
adcb
ret
call
adc
add
ret
push
shl
jmp
push
movsb
add
in
ja
jge
and
jbe
adc
fstl
xchg
mov
mov
test
push
fs
push
sbb
cmp
push
or
mov
outsb
adc
out
arpl
pop
adc
lods
sbb
shrb
inc
sub
adc
test
ret
mov
sti
lcall
or
mov
divl
push
dec
clc
xor
xor
xor
add
subb
pop
mov
sub
movsl
pop
add
xor
cltd
loope
mov
push
xor
sbb
cmp
mov
shlb
jno
push
mov
aaa
lock
sbb
mov
mov
pop
mov
mov
lret
jge
fwait
sub
shll
test
jmp
dec
push
pop
nop
js
sub
fwait
or
sarl
cmpsl
add
or
icebp
and
jnp
imul
or
fsubrs
sub
push
add
xchg
xor
or
or
orl
push
insb
sbb
add
inc
and
jecxz
add
add
and
mov
or
mov
adc
and
sbb
sbb
popa
rclb
mov
cmp
addr16
mov
ret
cmp
jmp
fcmovb
orb
flds
imul
mov
and
sahf
sbb
and
imul
or
or
jl
test
xor
js
mov
cmpsl
and
hlt
add
inc
pop
xlat
jmp
jo
xchg
data16
xchg
inc
gs
xchg
jmp
stos
and
sbb
mov
push
dec
cli
or
jl
push
cmpl
dec
sub
xchg
hlt
jbe
test
add
jae
idivb
mov
jns
add
or
adc
inc
imul
decl
cmp
xchg
les
dec
shlb
inc
inc
mov
xorb
jmp
jge
ficomps
or
jp
scas
cltd
aam
sbb
or
sub
and
sub
and
fadd
pop
inc
popf
push
fidivs
test
or
or
adc
loop
lcall
adc
adc
or
adc
push
pop
mov
ficoms
and
cld
addr16
sub
add
clc
clc
cmp
add
in
add
pop
sbb
rcr
sbb
or
jg
sub
jne
inc
or
xor
push
or
jg
clc
pusha
and
or
xchg
or
or
jle
push
sarl
sti
inc
shrb
inc
lock
or
in
xor
mov
shll
add
cmp
adc
lock
mull
sbb
subl
mov
pop
sbb
push
dec
push
es
xchg
dec
lcall
daa
test
ds
push
and
inc
add
div
mov
loope
inc
dec
dec
cmp
fmull
mov
or
nop
dec
sub
ds
ss
add
jl
add
orb
fsubr
gs
and
sub
shll
scas
cmpl
or
jne
dec
inc
jge
pop
adc
or
pushf
pop
pusha
jbe
sbb
mov
push
jmp
mov
add
in
add
mov
ret
xchg
or
or
mov
mov
jbe
pushf
jp
mov
inc
sbb
jns
addr16
rorl
out
loop
dec
insl
pop
rol
and
outsb
sub
and
xor
add
mov
gs
rclb
or
xchg
lock
loopne
sbb
sub
shlb
jno
dec
sbb
fistpll
loopne
es
lret
nop
add
xlat
jo
or
jle
add
cs
inc
push
sub
sti
loopne
sbb
cmp
in
add
xor
mov
adc
push
sub
push
sub
mov
fiadds
fidivrl
cmpsl
push
fimuls
das
in
pop
cmp
cmp
xor
add
xchg
dec
add
xor
and
push
inc
jp
cmpsb
jne
into
sti
adc
ja
outsl
dec
inc
cmpsb
cmc
pop
and
cmpsb
cmp
mov
cs
or
adc
inc
inc
cmp
dec
adc
ss
jle
xchg
sbb
and
adc
push
sbb
or
ss
sbb
imull
decl
xchg
jo
mov
je
pop
xchg
xchg
stos
test
adc
jmp
add
sbb
and
add
inc
or
js
xchg
cmp
jle
mov
sbb
or
inc
or
jo
jmp
sbb
int
pop
cmp
add
repz
add
push
or
pop
fdivs
push
jge
cmp
out
mov
jp
shl
push
scas
mov
mov
push
sbb
sahf
mov
sub
mov
jb
inc
sbb
push
cmp
fldcw
mov
cmp
jae
pushl
or
insl
sub
push
sbb
pop
mov
mov
sub
add
lea
inc
push
inc
cwtl
or
and
dec
je
mov
rclb
add
aaa
xor
mov
fwait
jo
jbe
shr
mov
lea
xchg
sub
inc
cs
xor
lds
adc
cmp
adc
outsb
jp
sbb
pop
adc
xchg
mov
jmp
out
pop
mov
pop
inc
xor
mov
loop
add
jg
or
aad
lcall
nop
jae
xchg
adc
xchg
xor
mov
lea
mov
or
or
add
ja
fbld
add
dec
scas
add
adc
js
imul
pop
out
out
or
adc
adcl
cmp
or
jns
neg
mov
sub
out
pop
loope
xchg
icebp
loopne
jg
push
jge
js
leave
sub
and
mov
mov
cmp
sbb
sub
das
seta
add
or
sti
sarl
mov
mov
add
outsl
sbb
adc
and
pusha
push
out
jo
or
mov
sar
shr
popf
lahf
adc
add
addr16
dec
push
sbb
push
cmp
mov
cmp
xor
mov
sub
out
adc
ret
mov
sahf
jbe
pop
fwait
or
jae
cli
jl
daa
leave
jb
jecxz
xor
cmp
or
aad
mov
xor
fistps
mull
aam
xor
and
dec
sbb
or
add
loope
inc
and
mov
cmp
mov
pop
xor
faddl
les
data16
scas
lods
pop
rolb
int3
repz
fwait
scas
mov
cmpsl
and
jecxz
roll
or
shrl
dec
inc
loop
les
loop
movl
inc
and
or
out
push
inc
add
or
or
jns
xchg
jle
or
dec
jae
adc
adc
divl
pop
ss
jo
call
and
dec
add
adcl
pushf
push
xlat
por
push
xchg
xchg
pop
xor
adc
and
push
mov
jae
add
addr16
in
rclb
or
dec
jmp
ret
xlat
pop
mov
mov
mov
cld
mov
sahf
mov
inc
inc
js
push
add
cmp
xlat
outsb
push
ss
inc
xor
add
adc
sub
out
out
add
and
push
adc
rolb
popf
cli
sub
cmp
mov
mov
ret
in
cmp
adcl
or
rolb
lods
add
arpl
and
gs
lods
movsl
lods
lahf
lock
sub
sbb
or
icebp
or
pop
cmp
pop
pusha
sub
push
pop
sbb
push
cwtl
adc
shlb
push
mov
lea
add
mov
jne
adc
fsubrs
and
push
sbb
jle
popf
dec
inc
inc
jl
add
push
inc
out
push
and
cmp
inc
leave
pop
pusha
jbe,pn
or
inc
mov
jbe
push
jb
sub
adc
or
xor
dec
jle
jbe
shl
je
fmuls
les
cmp
pop
xor
inc
jle
out
sarl
adc
adc
pop
cmp
and
cmc
cmp
lret
inc
pop
jecxz
push
sub
mov
push
sbb
sub
adc
jae
daa
pusha
pop
sub
stos
mov
jbe
scas
xor
sub
fmulp
sbb
sbb
push
decb
jg
fistl
addr16
inc
jle
add
jl
pop
inc
cmp
pushaw
lret
ror
data16
mov
sahf
adc
sbb
cmp
sahf
inc
sub
sub
pop
loopne
in
push
push
loopne
sbb
xchg
mov
xor
out
loopne
jo
add
sub
aaa
loope
fnstsw
or
push
fdivl
dec
mov
xorb
pop
enter
jl
push
jb
sbb
cmp
jle
add
mov
push
mov
jo
clc
sub
add
mov
scas
jle
loope
pushf
lret
cmp
cwtl
push
bound
aaa
pop
or
jge
pop
jg
cmp
and
and
dec
imul
pushl
jbe
call
ss
fsubrs
dec
mov
jmp
sub
push
inc
pop
xor
call
pop
push
inc
and
int
gs
hlt
sub
sub
adc
add
pushf
sbb
mov
paddsb
push
fsubl
or
out
dec
mov
lcall
test
pop
ds
xchg
cltd
push
icebp
dec
xchg
cmp
loopne
xor
or
mov
je
mov
adc
dec
ds
pop
js
add
mov
repnz
mov
mov
or
nop
loope
add
jb
lds
inc
in
mov
xorb
fnstsw
push
xor
cltd
dec
add
mov
inc
dec
dec
movb
fsubp
cwtl
or
dec
outsb
mov
or
and
into
aad
dec
add
push
bound
dec
add
in
jbe
sbb
aad
add
leave
mov
hlt
iret
insb
movzbl
adc
test
scas
mov
inc
inc
or
xor
jae
mov
xorl
sub
adc
pop
jecxz
jmp
adc
loope
ja
sbb
sarl
dec
inc
sbb
nop
arpl
arpl
sub
les
mov
fildl
jbe
mov
adc
insb
adc
divl
dec
cmpsl
imul
enter
rcll
and
inc
adc
test
inc
mov
dec
add
imul
dec
adc
mov
mov
pop
dec
add
decb
cmpl
mov
ret
mov
mov
and
adc
shll
mov
popl
sar
and
add
decl
sbb
sbb
push
loop
movsl
pop
mov
fldl
outsb
xor
adc
or
imul
rcrl
sub
jmp
popa
or
cmc
jmp
out
and
jno
dec
lahf
ss
adc
mull
mov
movsb
jecxz
xor
or
or
jp
ror
add
jp
or
out
push
sub
inc
cmpsb
mov
jecxz
pop
popf
frstor
sub
pop
shlb
jne
inc
cmp
cmp
mov
hlt
push
xchg
lcall
xor
and
mov
or
and
inc
ljmp
jne
add
or
addl
push
popa
cs
push
imul
push
mov
dec
dec
push
ret
and
divl
add
push
jmp
ret
xlat
sub
inc
or
ds
cli
push
incl
pop
inc
dec
loopne
std
test
xlat
mov
inc
jb
dec
mov
lods
adc
cli
pop
adc
bts
imul
mov
mov
test
push
bound
cltd
or
inc
push
std
repz
push
fcoms
jb
insl
sbb
dec
inc
aad
aas
cmp
ja
sti
add
inc
lcall
inc
ljmp
cld
jbe
xor
lahf
sub
cmp
and
or
add
add
push
dec
push
and
push
mov
pushf
pusha
test
leave
dec
lret
dec
jne
push
int
push
add
or
outsb
mov
push
add
clc
jno
sahf
inc
pop
or
mov
pop
popa
sub
adc
cltd
push
les
mov
mov
add
mov
pop
mov
cmovl
jmp
or
pop
cmp
xchg
lcall
and
sahf
cld
xor
sub
and
addr16
pop
push
xchg
mov
and
push
lahf
push
rclb
addb
stos
mov
mov
mov
out
ret
jp
inc
rorb
jb
roll
adc
mov
and
mov
cmp
loope
insl
les
or
pop
in
in
push
and
hlt
mov
cmp
cmp
and
aad
jmp
test
pusha
leave
jae
cld
insb
jno
xor
or
jge
negl
outsl
loopne
fwait
daa
and
sbb
idiv
movd
mov
dec
rcrb
fnstsw
jp
add
add
sub
push
mov
inc
mov
cwtl
inc
xor
popa
push
and
jne
cld
orb
or
xchg
pop
mov
dec
add
or
shl
mov
jb
pop
pusha
xrelease
loopne
jo
shll
or
nop
sahf
lcall
cltd
sub
rol
hlt
add
cs
push
lahf
out
pushf
mov
repz
iret
lock
add
dec
mov
test
or
inc
xchg
inc
in
or
or
sub
add
incl
mov
jnp
dec
out
loop
cli
or
mov
into
add
or
inc
adc
dec
adc
jbe
loop
cmp
sub
addb
int
add
sub
push
adc
or
push
push
outsb
rclb
test
push
inc
repz
jb
or
add
or
sbb
xlat
cmp
bound
or
pop
inc
mov
mov
xchg
sbb
add
sbb
sahf
and
add
or
dec
add
add
inc
or
mov
fsincos
adc
lods
jae
daa
inc
sbb
jns
sub
in
or
leave
or
test
inc
dec
jmp
dec
scas
sbb
shlb
cmp
or
addl
jne
xchg
mov
out
loop
add
inc
add
scas
mov
roll
push
insb
das
int3
and
xor
xor
out
or
or
or
push
lods
sub
dec
pop
leave
stos
fmull
je
dec
sbbb
or
or
lea
adc
add
and
pop
jno
inc
adc
or
adc
push
les
loopne
dec
loopne
fwait
sbb
sbb
cmp
push
cmp
shl
cmp
or
or
sbb
xor
sub
fldt
movsl
cwtl
int
xor
loope
imul
insl
sahf
je
adcb
xchg
push
lahf
or
jno
or
push
inc
lods
adc
dec
test
jb
or
push
inc
adc
inc
clc
push
aaa
insl
cmp
test
inc
inc
or
daa
and
cmpb
loop
pusha
inc
je
or
sbb
xor
aad
lea
mov
lds
flds
loopne,pn
cmpsb
rcrb
add
jno
or
int
lret
loope
mov
mov
mov
adc
fists
lods
sbb
faddl
pop
out
lea
cmp
shrb
enter
adcl
push
inc
add
rorb
movsb
movsb
arpl
sbb
cmp
inc
add
fwait
sub
jne
mov
pop
enter
insb
mov
adc
ficoms
mov
aam
rorl
add
pop
js
jmp
or
jge
pcmpeqd
mov
aam
sub
ljmp
lods
andnps
mov
imul
sbb
aaa
imul
loopne
jbe
dec
loopne
pop
sbb
mov
jb
and
cmp
fisubl
adc
test
fwait
cltd
or
push
jae
adc
sub
roll
movsb
or
jae
flds
fcmovnb
test
cmp
gs
push
inc
jnp
test
faddl
imul
shl
test
outsb
jo
add
lea
pop
push
insb
ror
dec
ret
fucomi
adc
mov
mov
mov
jecxz
pop
mov
dec
mov
icebp
jmp
sbb
push
mov
outsb
push
or
adc
pop
add
adc
jp
and
orb
or
bound
neg
sbb
and
icebp
adcl
shll
cwtl
test
call
testb
lock
rcrb
leave
jnp
in
cmpsl
mov
sbbl
cmp
pop
inc
xorl
cmpsl
mov
aam
inc
shlb
dec
sbb
aam
add
push
xchg
clc
mov
fmuls
mov
mov
jbe
rolb
dec
in
sub
unpckhps
lea
sub
jae
jmp
xor
in
in
lock
imul
jbe
xchg
add
inc
icebp
mov
jb
std
stos
push
addl
add
inc
pop
hlt
and
mov
push
movsl
sbb
paddusb
stos
fwait
mov
mov
int3
add
adc
add
xor
addr16
or
jl
ds
mov
loopne
int3
mov
mov
push
les
mov
enter
pop
shr
mov
push
shlb
call
mov
lret
dec
scas
ficoml
or
fcoms
push
sub
pushf
mov
cmp
ja
movb
jmp
scas
push
hlt
jae
addr16
push
cmpl
push
loopne
cli
les
int3
mov
pusha
sub
push
sub
adc
adc
adc
lcall
xor
andl
dec
or
push
pop
xor
push
insl
in
jo
mov
loopne
sbb
xor
add
xchg
sub
xor
shrl
dec
inc
icebp
data16
mov
xor
andl
repz
jb
in
mov
inc
mov
mov
push
lret
cmp
and
mov
jo
mov
push
dec
pop
mov
xchg
dec
nop
sub
daa
gs
sahf
inc
sub
dec
loop
lock
clc
push
mov
ret
ds
mov
js
jp
sub
sbb
repnz
push
ljmp
loope
in
pop
fwait
scas
or
push
jo
jo
lock
mov
out
ret
test
fmuls
repnz
push
imul
out
hlt
aaa
mov
add
inc
sbb
out
add
push
rcrb
enter
push
xchg
ds
or
or
push
in
add
xchg
movsl
cwtl
add
inc
clc
aad
leave
adc
dec
or
loopne
movups
out
push
add
cmp
sbb
add
or
enter
push
sbb
and
add
inc
outsb
or
jae
mov
add
loopne
lea
paddusw
adc
test
sub
xor
imul
xchg
dec
or
pop
sbb
jmp
orb
xchg
pusha
pop
jl
call
push
or
jl
mov
push
cmpsb
in
je
sub
sbb
mov
nop
or
add
pop
loopne
and
leave
sbb
pop
loopne
in
xchg
sbb
and
or
scas
sbb
pop
and
add
addr16
xchg
aas
or
popl
mov
jge,pn
xchg
int
jnp
test
rcr
add
dec
mov
test
sub
mov
test
and
js
mov
enter
add
add
ja
push
mov
imul
or
rol
sarb
mov
out
and
mov
pop
push
sbb
sub
test
enter
js
mov
pop
jne
mov
xor
sbb
mov
faddl
xchg
popa
jne
mov
adc
mov
sbb
jbe
pusha
push
aad
or
sub
addl
into
push
adc
test
aaa
add
fisttps
and
mov
dec
mov
sbb
add
inc
iret
adc
cmp
into
adc
add
pushf
loop
jnp
fnstenv
movb
dec
lret
sbb
fwait
mov
leave
mov
mov
dec
sbb
loope
mov
xchg
mov
or
adc
fs
iret
ret
xor
das
clc
xchg
out
sub
adc
sub
mov
test
adc
xor
inc
inc
jae
rcr
jns
fstpt
lea
add
pop
hlt
xor
push
jge
adc
stc
mov
mov
and
in
fisubrl
cmp
jb
cmp
jb
mov
or
cmp
pop
add
inc
dec
in
sub
push
fiaddl
or
and
nop
inc
cmp
jp
xor
mov
fimull
jle
dec
js
mov
in
mov
dec
icebp
add
dec
add
push
in
jb
loope
ret
mov
pop
pop
push
cs
iret
dec
or
cmp
lahf
sub
add
cmp
mov
imul
in
push
inc
push
push
flds
out
pop
imul
mov
ret
cmpsl
sbb
push
ss
add
sub
out
leave
pusha
test
push
mov
push
aam
pusha
push
js
add
mov
and
mov
mov
xchg
sti
pop
pop
and
adc
and
sub
push
aaa
addr16
lret
or
sub
or
push
subl
sub
cmpsl
or
lahf
push
pop
mov
add
movsb
sub
or
cmp
add
push
outsb
in
sub
jae,pt
dec
lea
pop
pop
add
add
pop
call
jle
sub
push
add
fistpl
addb
das
mov
inc
rclb
adc
adc
lods
and
stc
pop
jns
and
mov
add
pop
outsl
mov
dec
ja
adc
jns
cwtl
jmp
mov
in
les
mov
inc
dec
daa
insb
outsl
loope
lea
test
sbb
xchg
xchg
push
adc
test
cmp
jb
in
out
cmp
mov
mov
pop
mov
pop
xor
lods
testl
mov
ja
pushl
adc
fcmovnb
or
rorl
pop
xchg
stos
adc
popa
pop
andb
dec
adc
popf
hlt
xchg
jno
cmpsl
adc
insb
mov
or
mov
inc
mov
adcl
adcl
push
mov
sbb
mov
andb
insb
and
popa
pop
ret
mov
pop
fimuls
aaa
xchg
imul
es
mov
sbb
sbb
add
mov
inc
inc
or
cmp
xchg
paddq
or
dec
in
subl
sub
js
or
jne
and
addb
cmpl
insl
pop
mov
pusha
mov
inc
mov
and
mov
add
xchg
push
xchg
dec
nop
add
imul
sub
int
pusha
mov
jle
pop
sbb
cmp
inc
and
std
sub
cmpsb
jg
pop
pop
xor
cs
adc
enter
sub
add
lret
xor
or
add
xor
outsb
jp
xorb
ljmp
inc
out
push
cmp
sbbb
push
mov
std
loop
sub
or
mov
aas
loopne
ret
push
inc
sbb
not
lea
push
sub
and
push
fdiv
inc
xchg
sub
mov
imul
lock
test
sbb
jmp
lock
or
cmp
fstpt
repnz
xchg
sub
or
pusha
scas
popa
ja
pop
sbb
dec
and
dec
dec
loop
mov
mov
ljmp
call
in
dec
sub
push
jg
enter
sub
mov
and
je
outsl
nop
xor
pop
pop
ret
mov
into
mov
xchg
nop
mov
cmpsl
loopne
mov
jne
sbb
add
pop
test
push
ret
jl
mov
sub
xchg
cmp
lcall
aas
jp
int3
and
mov
mov
jp
rcll
adc
adc
ficompl
mov
push
adc
or
add
xor
mov
jg
movl
and
mov
decb
inc
cmp
or
rorb
push
sbb
lock
mov
aam
imul
dec
pop
jmp
clc
add
add
jns
xchg
repz
push
push
rcrl
adc
pop
in
ret
mov
lret
add
adc
xchg
sub
loope
mov
pop
popf
add
enter
mov
addl
movl
or
stos
jmp
and
xor
cmpb
mov
jno
fs
cmp
and
lods
push
test
and
jl
xchg
call
push
mov
repnz
sub
outsb
mov
mov
add
inc
or
push
insl
dec
mov
ret
push
or
xchg
adc
pop
dec
xor
jnp
sbb
cmp
cmpl
or
mov
lret
mov
sbbb
sbb
mov
mov
adc
call
js
add
into
jno
mov
add
or
jl
pop
cld
test
xchg
inc
mov
adc
mov
add
push
aaa
pop
adc
and
push
inc
in
adc
fdivl
test
and
sbb
in
sbb
or
push
mov
xor
or
imul
repz
in
push
sub
aam
xchg
cmpsl
dec
leave
adc
out
pop
mov
rorl
sbb
inc
push
xor
je
dec
xor
mov
insb
nop
push
xchg
push
xor
push
je
outsl
loop
sub
pushf
and
movsl
rorb
stc
dec
fistpll
movl
mov
lock
movsb
sub
add
ss
xor
in
mov
xlat
mov
push
or
push
mov
cmp
mov
cmp
or
xorl
aad
jmp
sbb
aaa
push
adc
iret
push
push
pop
pop
jecxz
add
or
xchg
divb
dec
push
outsb
push
cmp
sub
cltd
loope
push
mov
jmp
in
dec
dec
cmp
sub
mov
sarl
inc
adcl
or
mov
xchg
test
sbb
push
mov
lods
jo
aaa
mov
loop
or
rorb
je
loopne
mov
not
add
cmp
cmp
iret
les
or
pop
sub
mov
cltd
sub
mov
clc
mov
mov
jle
pop
das
sub
jmp
dec
ret
and
repz
sti
adc
sbb
clc
push
data16
jae
push
jne
jnp
xor
jmp
adc
lret
out
xchg
mov
mov
xor
push
movsl
add
outsb
xor
xor
inc
sub
movsl
mov
sbb
incl
push
adc
cmp
movsb
shl
inc
xor
cs
scas
xor
jnp
lds
fimull
add
cmp
andb
subl
cmp
xor
nop
inc
out
mov
scas
mov
scas
add
or
rcll
xchg
filds
lahf
push
jns
add
inc
inc
pop
adc
roll
xchg
fstpt
std
inc
test
cs
mov
mov
add
mov
dec
dec
fwait
jmp
nop
mov
dec
shrb
dec
xlat
sbb
fimull
inc
xchg
neg
dec
adc
test
dec
in
add
mov
push
add
inc
es
push
push
jb
pop
adc
pop
xor
lds
pop
pop
mov
test
pop
pop
jb
pop
and
or
inc
pop
pusha
pop
in
fs
pusha
pushf
cmc
fs
jo
dec
fs
adc
mov
adc
ss
rclb
inc
inc
push
push
inc
mov
and
in
mov
stc
sarb
into
insb
hlt
dec
imul
lods
fadds
mov
int3
pop
xor
dec
mov
cmp
pop
xor
and
or
mov
decl
mov
rolb
add
aas
inc
lahf
or
shlb
pushf
xchg
pop
mov
and
imul
push
pop
mov
std
sub
stc
mov
insl
call
faddl
std
inc
pop
jns
xchg
cld
push
cld
inc
cld
inc
cld
add
sub
cmp
cwtl
cld
sti
push
cld
test
stc
add
mov
sub
dec
dec
add
loop
mull
add
popa
dec
rol
xchg
inc
dec
in
xchg
popf
dec
aad
push
or
pushf
loopne
and
scas
mov
dec
cld
or
subl
dec
adc
in
adc
jb
jmp
addr16
add
faddl
cwtl
push
lock
popa
mov
enter
cs
enter
push
jno
lock
lea
neg
int3
lea
rcrb
push
aam
mov
add
cmp
jo
xchg
adc
repnz
shlb
cld
jb
ds
push
cld
push
cld
inc
cld
adc
inc
roll
pop
leave
aam
inc
outsb
adc
nop
jo
xor
xchg
inc
sbb
xchg
aam
or
ss
dec
mov
popf
sub
dec
cmp
mov
mov
push
sub
jp
push
push
and
popa
nop
add
add
xchg
inc
sahf
stos
das
imul
xchg
in
outsl
lock
and
lea
or
flds
add
cmp
cmpsb
fsubrl
lret
and
daa
rclb
daa
lret
fadd
les
add
jecxz
imul
test
jns
xor
test
or
add
mov
xchg
add
xor
or
leave
leave
addl
mov
push
adc
lret
or
loopne
dec
sub
in
or
lret
aaa
lock
mov
das
pop
jg
cmp
sub
ficoml
mov
cmp
mov
icebp
sbb
iret
pop
xchg
aas
jge
push
and
and
out
dec
push
dec
scas
adc
in
sbb
and
and
add
sbb
sbb
sbb
fdivr
call
jne
add
xchg
cmpb
fisttpll
sub
adc
ret
enter
and
push
inc
das
sbb
les
add
stos
dec
repz
and
or
shr
push
les
rclb
nop
shrb
ja
lock
ljmp
push
pop
adc
sub
sbb
out
movsb
and
call
jbe
decl
pushf
roll
imul
or
xchg
nop
jle
loopne
inc
movsb
or
ret
or
mov
pop
pop
mov
pushf
push
mov
dec
lahf
es
inc
cmp
add
stc
mov
rolb
inc
push
xchg
mov
or
xchg
nop
sbb
stos
push
dec
imul
cmp
sahf
mov
cltd
lock
idivl
call
sbb
xchg
loopne
add
mov
jne
xchg
add
adc
jmp
mov
adc
mov
js
adc
cmp
push
pop
mov
int3
mov
ficoms
mov
ja
ret
add
cmp
jmp
arpl
pop
mov
inc
push
shll
sbb
clc
loopne
jle
add
mov
movd
sub
cmp
push
int3
mov
inc
movsl
sbb
js
je
pushf
xor
push
scas
test
dec
pop
sbb
mov
add
xor
sbb
or
iret
sbb
jl
pushf
or
or
aad
fcmovnbe
ljmp
in
shr
pop
jbe
cs
sbb
dec
mov
add
xchg
pop
and
imul
cwtl
mov
into
mov
xchg
jmp
pusha
shl
jmp
or
or
sbb
or
pop
mov
xchg
add
inc
dec
lcall
lea
nop
cmp
and
sbb
cmpsb
and
insl
aas
lret
sub
pop
fisubrl
jge
add
xorl
popa
mov
or
push
xor
cmpsl
nop
or
add
sub
rorb
roll
lock
xchg
cld
addr16
add
pop
xchg
fcoms
je
mov
sbb
ret
cmp
sarl
inc
xor
pop
xor
mov
ds
xor
add
add
sub
pop
mov
mov
aad
cmp
or
orl
push
je
orb
xlat
rolb
jp
orl
cmp
and
dec
lods
or
add
xchg
cmp
cmp
cmp
or
xchg
or
inc
inc
or
dec
add
subl
cmp
pusha
or
out
dec
mov
lahf
dec
cmc
into
pop
mov
addl
es
dec
mov
cs
ss
testb
add
insl
mov
xchg
sub
push
mov
dec
insl
xchg
ja
xchg
and
pusha
ret
leave
add
sub
das
mov
int3
add
movsb
push
insl
cmc
adc
add
xchg
in
adc
cmp
mov
stos
lods
mov
add
jb
push
rclb
adc
inc
ficoms
jb
or
call
adc
push
mov
pop
dec
xchg
cmp
hlt
sub
sub
shll
rcll
jne
jecxz
shr
outsb
popa
shl
daa
cmpl
sbb
pop
sub
adc
dec
imul
vphaddbw
shlb
pop
inc
or
inc
and
xchg
sbb
dec
or
leave
jle
cwtl
sbbb
cmpsb
shrb
movsl
fwait
add
rorb
mov
xor
adc
fildll
lea
pushf
hlt
inc
sub
jbe
rorl
pop
xchg
mov
cs
lret
xor
fimuls
negb
loopne
mov
pop
push
pop
push
out
mov
lods
dec
dec
pop
xor
mov
xor
sbb
mov
or
rolb
lcall
push
push
cmp
adc
mov
add
sarl
dec
or
jb
outsb
daa
inc
sub
or
add
add
push
pop
orb
or
add
add
or
or
orb
push
pushw
enter
inc
or
mov
pop
sbb
fwait
push
aad
and
mov
loop
icebp
adc
xor
jno
insb
mov
inc
add
dec
ret
xchg
mov
out
dec
pop
pop
push
leave
push
movsb
inc
dec
int3
xor
mov
daa
pop
pop
fwait
cmp
jg
add
mov
add
pop
mov
jle
adc
add
and
jmp
stc
add
popa
sub
ds
sbb
cli
scas
or
cltd
xchg
and
and
and
sbb
loopne
cmp
in
cmp
pop
cli
or
and
mov
lock
mov
test
out
mov
jbe
jmp
cmp
sub
push
inc
mov
mov
clc
jmp
sbb
and
fisttpl
sbb
or
sbb
push
cmp
cli
mov
iret
dec
add
pusha
add
fistps
in
movsb
add
xorl
dec
or
cmpsl
fisubl
mov
aas
sub
mov
icebp
dec
xchg
push
sub
pop
rolb
adc
out
pop
es
ret
add
push
push
loop
jecxz
fldcw
out
call
push
lock
add
cmpsl
fnstcw
icebp
imul
test
in
push
jmp
pop
add
add
and
mov
xchg
in
xchg
fsubrl
adc
fsubl
mov
push
add
pop
lahf
push
icebp
add
in
in
loope
jle
inc
iret
xchg
sbb
loopne
lret
sbb
or
subb
sarl
mov
pop
out
jge
sub
xchg
ret
cmp
je
dec
es
sbb
iret
test
rcll
add
add
data16
pop
pop
shll
inc
sub
lods
inc
lea
cmp
data16
adc
loopne
sub
cltd
pop
xorb
lea
out
jp
sub
popa
lock
gs
bnd
fwait
mov
adcb
add
dec
dec
jp
inc
pop
sub
push
pop
dec
out
and
ljmp
sbb
xchg
push
and
or
add
jb
jae
add
nop
push
data16
std
add
sbb
out
adc
rol
or
xchg
and
jne
xor
nop
or
int3
add
in
int
xchg
or
scas
cmpsl
lret
and
adc
push
fnsave
jge
sbb
movhps
pop
adc
pop
pop
dec
and
inc
push
idivl
push
add
push
mov
mov
pop
shrl
sub
aam
add
jne
movsl
cmp
shrb
je
test
cmpsb
test
dec
adc
in
jno
dec
dec
cli
sub
leave
fwait
mov
add
push
add
ret
sbb
xor
adc
lcall
inc
and
out
dec
test
cltd
loop
push
std
push
and
sbb
bound
push
push
mov
addb
jmp
jne
bound
sub
iret
and
pop
mov
sub
rolb
scas
stc
push
imul
jns
adc
imul
stos
test
mov
xchg
pop
push
addb
cmpsl
adc
jnp
pop
imul
stc
sbb
dec
xor
clc
sbb
push
scas
adc
dec
inc
sbb
test
xor
lock
push
jmp
roll
and
sbb
jae
movsb
adcl
insb
push
inc
push
rcll
or
rcrb
push
push
decl
or
mov
lock
inc
lods
lea
lock
adc
inc
loope
imul
shrl
add
stos
sub
cld
and
adc
pop
dec
sbb
push
jl
adc
nop
lock
cltd
adc
xor
adc
pop
inc
and
in
ret
mov
dec
push
lahf
ja
or
loop
pop
scas
or
xchg
adc
pop
sti
or
xlat
fdivr
incl
movsb
push
leave
or
xchg
add
sbb
in
ds
sub
push
push
fildl
add
dec
xchg
xchg
mov
js
cmp
cmp
xchg
inc
adc
jo
adc
sub
mov
sub
jnp
sub
insb
xchg
pop
pusha
call
shl
cmp
pusha
lods
or
mov
mov
pop
jnp
push
pushf
cli
lcall
pop
mov
bound
push
push
gs
andl
xchg
ljmp
cmp
sub
xor
pop
adc
or
outsl
cld
lahf
add
jbe
jl
cmp
jb
rolb
jl
cmp
jae
dec
nop
sub
add
add
push
cmpsl
push
orl
fldt
jp
in
test
lods
cmp
fimuls
or
in
fldenv
cmp
ret
and
sar
xchg
outsb
shlb
adc
dec
lea
or
dec
add
inc
loope
pop
scas
mov
jl
aam
push
sub
ret
fistps
add
call
cmp
out
jge
sub
bound
inc
lock
mov
shlb
aaa
dec
push
pop
sbb
push
sbb
jnp
ret
push
dec
adc
push
xor
push
sub
sub
and
cmc
push
icebp
cmc
ret
lea
and
push
cmp
sbb
movsb
push
loop
push
jp
and
je
push
movsl
push
mov
or
js
in
int3
add
inc
and
inc
sbb
popa
sti
into
or
pop
cmp
mov
xor
lock
pop
adc
jg
loope
pop
adc
arpl
adc
or
sub
add
int
icebp
adcb
cmp
or
les
lods
and
and
insb
and
xor
add
das
xchg
popa
pusha
repnz
and
cmp
daa
shrb
add
push
jns
mov
fcoms
cltd
test
jnp
js
mov
inc
adc
add
flds
rclb
xchg
or
add
xlat
mov
test
enter
loopne
pop
stos
add
sahf
xchg
cmp
int
inc
adc
sub
rol
lret
mov
js
insb
ss
push
dec
push
shl
int
lret
test
stc
imul
cld
jmp
cmpsl
add
insb
and
lret
sub
stos
std
sbb
mov
repnz
ret
scas
mov
mull
shll
xor
mov
and
xchg
clc
xor
je
push
xchg
mov
fldl
mov
adc
xor
mov
xor
adc
and
add
and
and
inc
sub
cwtl
and
test
sub
ljmp
push
jecxz
pop
sbb
mov
add
mov
movsl
sbb
fisubs
inc
icebp
or
pop
or
bound
xor
and
xor
and
and
sub
dec
lcall
and
shrb
movsl
sbb
sbb
icebp
jno
sbb
xchg
push
or
adc
and
push
push
loopne
add
sbb
sub
push
dec
out
test
add
stc
loopne
cmp
add
mov
testb
fcmovne
mov
add
inc
arpl
bswap
add
push
lahf
and
rorl
add
pop
lds
out
les
inc
sbb
mov
stc
sbb
inc
push
mov
adc
adc
repnz
lds
add
adc
in
push
add
inc
pop
jecxz
mov
cmp
mov
data16
ret
adc
testl
insb
adc
fwait
or
sti
mov
push
imul
sti
mov
adc
push
shlb
cmp
or
dec
loope
xor
push
push
pop
inc
add
sub
or
ret
or
jbe
cmpsb
loopne
and
aas
mov
pop
mov
ja
pop
pop
and
inc
add
jnp
scas
nop
sbb
or
mov
xor
sub
inc
or
lock
sbb
push
cmpsb
push
jbe
add
bswap
add
jo
xor
addb
in
dec
sbb
and
sub
sub
sub
add
inc
or
sub
dec
sbb
in
inc
push
sbb
and
sub
mov
inc
js
adc
enter
mov
cmpl
pop
xchg
inc
jb
cmpsb
divb
xor
adc
popa
mov
cmp
xchg
push
inc
mov
sbb
lds
xchg
stos
in
pop
inc
mov
push
jecxz
movsb
decl
add
or
mull
loop
mov
outsl
xchg
pop
das
imul
xchg
sti
movsl
mov
sbb
cwtl
test
mov
and
divl
fwait
and
orb
push
test
xbegin
inc
ja
jno,pn
test
repz
adc
ja
mov
dec
popa
jmp
fists
inc
testb
insl
dec
adc
jae
xchg
popl
mov
or
inc
mov
test
sub
frstor
pop
xchg
adc
and
mov
inc
cmp
popa
push
and
sub
mov
rcrl
xchg
jb
push
popf
scas
repz
push
lds
xlat
andb
sbb
adc
sbb
xchg
out
dec
sub
aas
sub
or
imul
adc
in
sub
icebp
mov
inc
sbb
add
adc
lods
sub
popf
movsl
xchg
jle
push
add
xor
push
sbb
in
xor
notl
push
push
fdivs
cmp
ds
push
mov
test
mov
xor
and
and
pop
nop
ficoml
fistl
sbb
jb
pusha
mov
push
rolb
and
inc
lock
sbb
push
cmp
or
adc
cli
mov
inc
fsubs
rolb
dec
lock
xor
jle
sbb
fldt
mov
dec
pop
push
negb
inc
adc
sbb
and
clc
add
add
dec
mov
or
enter
out
sub
in
bound
nop
in
xor
int3
adc
add
adc
push
popf
jae
roll
jo
test
in
jb
fadds
jb
pop
les
sub
push
or
fsubrs
test
jb
mov
adc
enter
fiaddl
mov
push
sbb
push
enter
lea
les
shl
fimuls
bound
js
pusha
jbe
fists
jle
mov
or
jecxz
in
jne
push
and
popa
cld
jo
cmp
or
daa
fsub
rclb
daa
adc
out
loope
imul
add
pop
repz
add
dec
rclb
enter
add
in
cmp
outsb
sahf
adc
dec
sbb
clc
cltd
rcll
push
add
dec
subb
add
mov
aas
in
mov
and
inc
push
and
adc
inc
inc
or
and
movsl
mov
je
jae
adc
or
mov
jge
es
sub
jb
push
or
cmpl
cmp
lret
xorb
or
nop
inc
mov
test
cmpsl
xchg
or
movsl
mov
inc
adc
mov
cmp
sub
mov
fs
push
clc
mov
xchg
test
push
add
add
inc
fimull
inc
call
pop
mov
sub
popf
mov
js
dec
loope
mov
mov
mov
sbb
sarb
or
sti
pop
sti
call
loopne
or
jbe
sbb
add
and
test
lds
mov
ss
or
pop
dec
and
in
push
adc
dec
in
xor
and
cmp
xlat
mov
fnstenv
fs
add
mov
or
fldt
imul
mov
xor
ret
popa
push
and
mov
sbb
sysexit
adc
enter
dec
shll
sets
add
cwtl
xchg
scas
sbb
or
dec
push
jnp
test
call
lahf
cmp
mov
xor
inc
clc
insl
inc
inc
pop
das
add
mov
dec
sbb
xor
jle
xor
xor
adc
xor
xchg
mov
pusha
or
adc
dec
xor
mov
xor
cwtl
fwait
adc
sub
push
or
insb
cmp
and
xor
test
insl
fnstenv
or
push
popa
jp
xchg
imul
mov
nop
lds
nop
popl
xor
inc
stos
add
adc
xor
or
xchg
les
mov
and
ss
dec
inc
call
addl
fdivl
gs
out
xchg
bound
dec
lods
loopne
in
sbb
pushf
add
rol
or
jno
test
add
mov
xor
mov
hlt
xor
mov
push
push
push
inc
jmp
outsb
testl
add
inc
bound
loop
outsb
sub
out
int
mov
mov
sti
adc
cmp
ja
mul
test
inc
dec
pop
cmp
addr16
mov
xchg
lea
pop
in
or
push
xor
adc
shl
lods
cltd
jge
adcb
mov
pop
pop
and
fistps
add
dec
push
imul
jle
jp
fs
jbe
in
dec
outsb
add
and
mov
sub
cmp
ret
pop
mov
pushf
add
sub
push
add
add
or
push
out
lcall
jb
add
pop
imul
mov
xchg
add
outsl
data16
aad
ret
cmpsl
push
fwait
add
cmpsl
pop
sti
xchg
lahf
add
add
gs
aaa
jb
adc
mov
push
sbb
or
int3
enter
inc
leave
pop
mov
inc
mov
hlt
add
xlat
pop
sub
push
cmpb
xor
inc
mov
inc
lock
sbb
or
sbb
in
cmp
jbe
jmp
jo
inc
loopne
xor
sbb
shlb
dec
mov
sti
incb
push
inc
fisubl
aaa
gs
pop
scas
push
fcoms
test
lahf
push
mov
aas
sub
loopne
rorl
jbe
mov
jnp
loope
adc
mov
push
jecxz
nop
cltd
push
setne
or
xchg
je
cmc
xchg
data16
mov
dec
pop
mov
pushf
push
mov
add
adc
popa
mov
push
sub
dec
sbbb
xchg
cmp
sbb
cmpsb
cmp
movsl
jo
pop
add
fucomp
jno
cmp
cmp
inc
xchg
and
addr16
pop
or
inc
and
inc
sbb
int
cmp
dec
dec
add
add
add
fnstcw
dec
adc
push
inc
call
pop
jmp
loope
sbb
insb
adc
jle
ja
mov
sub
lock
push
pop
cwtl
inc
sub
add
mov
decl
icebp
mov
push
jmp
push
or
dec
les
ret
push
sbb
mov
je
push
fisttpll
or
cmp
or
sahf
add
mov
fwait
pop
repnz
mov
aad
jno
scas
dec
outsl
icebp
cld
imul
bound
jb
push
dec
rcl
and
or
es
and
cld
dec
jb
rclb
xchg
mov
fwait
mov
and
lods
sbb
xchg
and
sbb
sub
pop
js
les
sub
test
adc
xor
push
dec
lds
sbb
cmp
pop
push
add
mov
imul
adc
xor
xchg
push
add
data16
test
push
jle
cld
leave
or
pop
jb
pop
std
and
push
push
ror
sub
jnp
push
outsb
or
clc
lea
inc
shll
out
sub
cwtl
cmp
cmp
dec
inc
or
cmp
call
mov
in
adc
std
int3
inc
repnz
sar
test
jge
xchg
sub
push
xor
pop
cmovnp
inc
lock
insb
or
or
push
dec
sub
sar
sub
add
sub
jne
xor
jno
cli
inc
imul
push
dec
xchg
push
push
or
fisttps
add
data16
add
mov
sbb
lods
inc
sub
movsb
xor
test
movsb
add
xchg
push
push
movsb
mov
add
dec
gs
mov
push
movsb
add
gs
sub
cwtl
mov
xchg
pop
xchg
shlb
xchg
nop
or
les
push
enter
and
mov
xor
cmp
sbb
call
sti
loope
and
cmpl
ret
and
pop
clc
mov
push
sbb
cwtl
gs
or
arpl
fwait
adc
pop
lods
outsb
adc
test
mov
pusha
cmpsl
pusha
jns
faddl
in
cwtl
test
je
fisubrl
and
je
sbb
js
subb
adc
push
dec
shlb
leave
lods
in
adc
xor
sub
and
and
jnp
orl
adc
jnp
and
pop
lahf
pop
inc
test
aaa
inc
sbb
adc
xor
jo
push
jo
cmp
lret
mov
add
gs
cs
lock
insb
cmpsb
sbb
adcl
inc
sbb
jecxz
mov
bound
xor
xor
mov
iret
mov
xchg
lcall
jns
outsl
outsl
imul
push
mov
pop
ds
je
sub
daa
aaa
cmc
pop
inc
jp
inc
mov
mov
in
int3
test
pop
cs
rcl
fcoms
stos
sbb
fdivr
aaa
xorb
js
mov
rcrb
pusha
push
xor
jbe
out
sbb
sbbl
jl
fstp
sbb
aam
sub
or
and
mov
cmp
in
enter
pop
inc
int3
das
rorb
fisttpl
bound
cmpl
jno
les
sar
sub
dec
les
mov
mov
xor
and
push
cmp
sbb
test
dec
push
cmp
imul
adc
inc
je
push
xorb
pop
sub
jae
popf
push
or
and
outsl
jb
je
mov
jnp
sbb
sbb
pop
cs
xchg
dec
jno
mov
bound
in
pop
dec
pop
add
mov
add
je
adc
xchg
ja
orb
bound
out
jecxz
jmp
and
popf
dec
mov
and
or
adc
xor
outsl
je
adc
imul
xor
adc
fs
std
xchg
sbb
sub
pop
ljmp
jbe
mov
out
dec
mov
and
xchg
push
es
xor
and
xor
mov
leave
rorb
jmp
dec
add
fstpt
testl
into
mov
inc
jnp
scas
or
mov
ret
test
clc
push
insl
pop
xor
stc
jno
inc
imul
inc
sbb
cmp
xchg
fucomi
sbb
cld
xor
and
adc
adc
andl
out
sbb
in
lea
push
lcall
push
push
cmp
lock
imul
loop
movl
add
das
push
xor
mov
jmp
fs
outsb
sub
jbe
ss
fisubrl
cmp
xchg
stos
push
enter
orl
mov
std
or
mov
fidivrs
pop
dec
jns
cmpsl
mov
push
cmp
outsl
je
iret
es
loop
dec
out
and
lods
lods
mov
xor
rorl
sub
popa
mov
je
clc
mov
push
in
xchg
js
pop
cwtl
add
test
xchg
es
jl
jg
add
add
sub
movsb
pop
test
cmp
adc
pop
mov
popf
pop
push
mov
test
push
mov
negb
adc
ret
or
jne
imul
fsubl
jns
or
jae
enter
adc
in
js
add
mov
sbbl
sbb
ljmp
ret
cld
shr
mov
mov
mov
sbb
xor
addl
and
bound
mov
andl
lea
lahf
adc
jge
sub
cltd
lret
rorb
out
push
loop
mov
lock
jmp
inc
hlt
jne
sub
adcb
push
jge
mov
sbb
inc
push
and
jl
and
mov
sbb
notl
mov
sub
xchg
sub
sbb
test
xor
sbb
filds
mov
int
movsb
je
movsb
sub
push
cwtl
pop
push
test
adc
add
pop
mov
test
mov
and
lods
faddl
inc
icebp
pop
daa
cs
popf
dec
or
adc
push
enter
rcrb
mov
sbb
sub
negl
and
frstor
call
roll
aas
pavgb
mov
or
imul
push
push
test
xor
lock
subl
or
xchg
pop
xchg
inc
add
xor
fs
int3
xlat
sbb
jne
ds
xor
hlt
enter
imul
mov
xchg
sbb
push
sbb
sbb
fmuls
mov
xchg
mov
mov
or
pop
and
add
jo
je
fisubrs
fbstp
push
or
mov
jmp
xchg
push
push
enter
sbb
push
fs
add
jle
and
cmpb
pushf
out
shrb
dec
adc
inc
adc
pop
test
cmp
pop
add
xlat
or
mov
int3
push
push
fwait
pushf
or
test
mov
pop
push
shrb
pop
adc
es
pop
xor
add
add
xor
jle
leave
cltd
in
mov
inc
xchg
sbb
rorb
inc
out
mov
test
negl
call
popa
push
inc
lock
test
push
adc
mov
in
xchg
test
mov
fisttps
inc
scas
mov
and
mov
inc
mov
mov
outsl
in
and
jo
push
sub
je
and
cmpsb
sbb
je
popa
jne
or
push
subl
mov
addr16
jmp
sub
push
inc
push
push
das
push
arpl
jo
dec
push
rolb
aaa
loop
push
pop
sbb
gs
mov
out
xchg
sbb
jae
jne
enter
adcl
xor
sbb
pop
or
mov
js
outsl
jb
xchg
cmpsl
ficoml
js
gs
addr16
pop
dec
insl
jo
xor
insb
sbb
inc
adc
push
push
or
pusha
popa
or
xchg
cmp
sub
imul
xorl
inc
mov
or
aas
sbb
xor
and
inc
ss
mov
jbe
or
inc
pop
push
xor
or
pop
mov
rcrl
movb
push
adc
sub
dec
pop
and
aaa
xchg
add
inc
call
mov
outsb
pop
fadds
inc
dec
dec
dec
xorl
ret
mov
adc
aam
push
sub
in
jle
lahf
in
sub
js
rolb
or
cmp
sbb
sbb
fpatan
jge
adc
scas
add
ret
mov
aad
push
enter
sbb
or
and
inc
add
xor
enter
cwtl
xor
movsb
xor
sub
mov
stos
in
sub
xor
dec
inc
sub
imul
sbb
mov
sti
mov
pop
inc
xor
add
mov
bound
in
xchg
int3
fsubl
movsb
or
in
cmp
inc
pop
je
add
pop
rorl
call
xchg
roll
xor
and
push
nop
cs
ficompl
aam
in
cld
mov
and
cmpsl
das
mov
sub
xor
sahf
cld
sarb
xor
cld
push
aaa
mov
mov
ret
add
js
mov
fwait
cmp
in
xchg
add
sub
jl
pop
pop
mov
inc
addl
test
sbb
lea
sbb
jns
add
adc
jp
das
dec
jbe
insl
das
jmp
xor
sub
add
adc
stos
fs
cmp
xor
xor
add
ret
adc
mov
inc
pop
adc
clc
aaa
imul
jae,pn
bound
aas
pop
or
lahf
bound
or
pushf
sub
add
cmpsl
out
jae
jbe
pop
or
xor
inc
jae
mov
and
mov
outsl
outsb
subl
int3
jmp
pop
push
cmpsl
shrl
js
add
push
push
cli
fwait
inc
mov
mov
pop
arpl
test
or
pop
inc
inc
push
jns
fcmovu
std
mov
fcmovbe
test
sbb
aaa
adc
mov
cld
bound
sbb
data16
movsb
sbb
sbb
cmpl
and
call
push
dec
clc
pushf
shr
push
movsb
imul
sub
add
push
das
mov
add
add
in
pop
ja
shlb
jae
or
jl
jge
jp
pop
push
xchg
cmp
daa
jno
push
shll
push
nop
xchg
lea
enter
xor
and
les
mov
enter
test
mov
xchg
enter
and
xor
dec
jb
xchg
xor
sbbb
cmp
pop
jb
enter
inc
mov
pop
dec
test
and
lock
stc
xor
int
shlb
push
sahf
cmpsl
inc
lods
jl
sbb
ja
mov
insb
cs
ja
loope
fucomip
push
js
lcall
fcoms
xor
add
sbb
and
lret
sbb
pop
inc
repz
pop
xor
js
ja
imul
pop
pusha
sub
insb
iret
push
iret
pop
ss
pop
es
push
sbb
call
test
push
jge
add
sahf
out
jl
xchg
iret
sarl
in
mov
mov
push
movsb
mov
mov
dec
mov
sbb
int3
inc
pushf
push
add
push
aam
fwait
push
pop
jns
dec
repz
sub
inc
cmpsl
out
xor
scas
push
test
pusha
cmpsb
repnz
je
cmp
pushf
scas
sahf
in
jnp
insb
adc
jle
loope
lock
cmpsl
stc
pop
les
push
shrb
scas
lods
mov
ret
js
jg
mov
mov
in
in
in
int
fistpll
mov
pushf
dec
inc
add
dec
sub
cmpsl
fnstcw
xor
in
pushf
dec
outsl
jno,pn
cmp
ja
insb
je
mov
mov
int3
add
or
or
jns
push
int3
inc
mov
xor
mov
inc
push
cmpsl
mov
insb
xor
test
add
jbe
addb
add
scas
lea
sbb
fyl2xp1
iret
or
in
adc
pop
jae
cmpl
add
clc
pop
cmp
xor
les
push
add
xlat
pop
mov
xor
mov
aas
fldt
pop
add
and
enter
idiv
jg
int3
enter
enter
fcomp
fxch
loopne
jecxz
in
pop
sarl
inc
sbb
mov
or
gs
and
popa
je
inc
dec
js
xor
xor
scas
or
mov
pop
or
push
adc
fiaddl
adc
mull
testb
iret
xrelease
shlb
push
add
test
xchg
xor
inc
add
outsl
aas
mov
cmp
stc
dec
movsb
dec
add
and
jbe
push
insb
je
cmp
repz
mov
movsb
lods
mov
int3
cmp
repz
fsub
in
hlt
jns
out
cld
add
or
sbb
jns
out
sub
cmp
sahf
out
sahf
dec
push
pop
fs
je
and
jl
add
leave
leave
add
fs
fs
gs
xor
dec
clc
push
jnp
jl
cmp
jns
mov
jge
js
dec
inc
sahf
mov
mov
in
addr16
inc
inc
sbbb
jns
push
lret
aas
shr
pop
out
pop
and
push
shrb
clts
fistpll
mov
or
add
adc
jl
inc
cmp
repz
push
pushf
mov
sarb
iret
repz
add
adc
out
sahf
out
dec
pop
push
sahf
test
jnp
pushf
call
into
inc
adc
push
push
add
pop
pop
and
das
pop
jmp
in
inc
adc
or
loopne
and
or
popaw
daa
jmp
inc
sbb
push
adc
cmpb
inc
aas
addb
addb
dec
xchg
dec
pop
push
js
sahf
jnp
mov
aas
adc
mov
aas
incl
loopne
add
repz
jns
push
add
jle
adc
cmpsb
lret
sub
out
out
sti
inc
mov
or
out
sahf
out
add
add
pinsrw
cmp
out
lock
or
repz
push
sbb
repz
push
adc
iret
repz
mov
enter
cmp
faddl
clc
adc
sahf
out
sahf
sbb
dec
add
jns
out
push
insb
sbb
jge
cwtl
out
pop
lods
push
add
repz
call
lcall
repz
cmp
add
iret
dec
in
jmp
out
sahf
sbb
xor
dec
mov
out
mov
jns
out
mov
enter
jns
loopne
clc
ficoms
ljmp
incl
loopne
ficoml
add
add
push
push
lods
movsl
scas
ja
and
push
fidivrs
xor
push
punpckldq
ret
mov
sub
add
jle
in
lods
cmp
adcb
sbb
jge
jnp
out
or
mov
sbb
xchg
outsl
mov
jg
mov
roll
add
jg
lock
inc
mov
out
ds
or
jnp
out
push
pusha
jo
enter
repz
push
fdivs
loopne
iret
roll
or
sbb
es
cmpsb
rolb
imul
mov
andb
xor
comiss
mov
xor
out
push
jle
pop
das
sti
pmulhuw
lods
push
orl
in
in
unpcklps
fstl
in
or
pop
adc
outsb
daa
or
dec
dec
dec
dec
adc
pop
add
cmp
pop
shl
in
ss
repz
loope
push
xor
push
push
iret
repz
inc
dec
pop
jo
pusha
stc
stos
cmc
cmp
fcoml
push
push
mov
daa
pushf
cmpsl
pop
mov
mov
or
dec
out
pop
rclb
cwtl
push
ror
jns
rcr
lock
adc
and
iret
repz
inc
push
fs
cmp
repz
stc
cmp
aam
hlt
add
sbb
jno
xor
call
nop
lea
mov
jg
add
or
nop
pop
pusha
iret
repz
cld
xchg
repz
repz
movsb
stc
mov
iret
int3
mul
div
cmc
sahf
out
or
hlt
sbb
sub
sahf
out
repnz
icebp
push
lock
sahf
out
out
jl
nop
sahf
out
sahf
in
mov
je
in
ljmp
add
ret
lahf
les
add
mov
andb
add
or
jg
add
pop
outsb
testl
insb
in
add
add
mov
inc
jbe
shr
adc
nop
negl
fwait
add
cmp
inc
adc
daa
or
roll
pusha
mov
add
pop
pop
sub
outsb
inc
add
das
orb
fdivrl
out
fcom
insl
push
mov
xchg
and
out
inc
push
pop
jnp
sub
outsl
xchg
iret
repz
stc
mov
iret
repz
std
incb
sti
cmp
repz
addb
sahf
aaa
add
add
xlat
insb
in
scas
fcompl
inc
jg
inc
jno
add
push
cmp
fsubr
push
lods
xchg
ds
decl
lea
insb
adc
and
jb
fisttpl
cmp
and
movsb
dec
mov
fidivs
popa
imul
mov
popl
mov
mov
sbb
aam
add
add
adc
inc
cmp
das
pop
add
add
adc
into
stos
sub
pop
add
adc
in
loop
in
jne
push
cmpb
add
insl
gs
adc
add
push
and
outsb
fs
sub
xor
dec
addr16
add
imul
push
dec
shlb
push
xlat
xor
jle
add
jge
and
insb
mov
sahf
out
push
dec
or
or
sahf
out
pop
sbb
and
jl
out
cmp
push
push
repz
repz
mov
iret
jecxz
add
pop
jb
pop
jb
add
jae
pop
add
adcb
pop
or
xlat
sbb
xor
sahf
out
sub
add
add
jns
out
add
or
loopne
sahf
out
and
inc
pusha
or
mov
cmpsl
xchg
jb
push
pop
pop
or
jb
jb
or
or
sub
and
jo
pop
inc
jae
mov
or
nop
mov
jo
sbb
and
cmp
gs
mov
mov
mov
sub
das
inc
lea
jmp
push
or
jg
mov
notl
adc
pop
or
or
or
inc
adc
adc
addb
sub
fldl
sbb
add
shlb
insb
adc
ja
adc
mov
pushf
pushf
pushf
pushf
push
add
popf
sbb
or
lcall
and
int3
cltd
aas
and
xor
xor
push
mov
and
cmp
js
pushf
dec
adc
mov
jns
bound
and
and
sbb
fs
dec
data16
mov
iret
repz
jg
out
sahf
out
incl
pushl
add
addr16
into
push
adc
pop
lahf
sbb
add
cli
inc
mov
xchg
jns
icebp
mov
mov
daa
sub
adc
mov
ror
adc
testl
push
xor
push
imul
je
pop
loopne
repz
jb
iret
es
push
call
mov
rolb
int3
je
shl
mov
hlt
ds
aad
js
pop
push
cmp
ljmp
les
push
mov
push
cld
push
shl
jl
scas
mov
cmp
hlt
sahf
sub
ds
pop
pop
idivl
jo
push
out
sbb
sub
pusha
push
or
jnp
pop
push
pusha
sub
push
int3
inc
nop
into
loope
cld
adc
int3
xchg
cmp
out
enter
and
cmp
mov
nop
mov
loopne
pop
push
rorb
fs
mov
lods
mov
dec
mov
clc
jo
sarl
xor
push
lods
aam
js
neg
add
and
push
imul
js
add
sti
sahf
aaa
sbbl
xor
into
push
iret
jnp
in
xchg
test
fs
push
fistpll
cs
andb
int
inc
mov
clc
push
lock
ss
cmp
test
mov
enter
dec
out
out
cmp
out
add
ds
xchg
sub
jl
lret
ds
cmp
pop
jmp
push
insb
adc
popf
or
and
xadd
loopne
push
pop
sub
push
pop
data16
outsb
data16
in
nop
dec
add
loopne
negl
jae
movsb
cmpb
push
sub
cs
or
inc
ds
dec
cmp
jo
in
push
mov
push
fsubrs
add
pop
out
push
mov
mov
shlb
jns
mov
dec
push
mov
jae
js
hlt
push
xchg
iret
inc
push
mov
dec
into
mov
data16
cmp
add
mov
je
rcrb
lock
es
push
insb
femms
jnp
sti
mov
je
insb
movsb
push
or
pop
out
test
cld
lcall
negl
inc
fcoml
pushf
push
pusha
aaa
js
cmp
inc
cmpsb
fdiv
faddp
cmp
sbb
inc
ds
inc
cmp
pop
repz
movsb
sbb
mov
dec
jnp
shlb
push
cli
cmpsb
call
mov
xchg
mull
and
pushf
out
jle
xchg
dec
scas
xor
pushf
lahf
push
add
inc
push
add
add
nop
adc
push
lds
pop
add
out
rolb
mov
or
and
mov
nop
add
add
push
add
loop
jl
pop
add
push
dec
add
fnstsw
pusha
ss
pop
jnp
out
mov
inc
and
dec
pop
push
and
jge
push
pop
dec
aaa
push
pop
dec
add
mov
fdivl
add
adc
dec
xchg
mov
jmp
push
loop
push
inc
mov
mov
xor
or
dec
xor
or
inc
mov
push
push
cs
and
inc
push
jnp,pn
rol
and
xor
dec
cmp
fidivrs
inc
dec
testb
push
dec
sbb
pop
cmp
dec
add
push
sbb
push
roll
dec
add
sub
movsl
enter
pop
sbb
push
cmp
mov
outsl
pop
incb
stc
repnz
test
pop
rolb
xchg
int
sbb
add
sahf
mov
add
gs
mov
add
incb
cld
bnd
bnd
clc
aas
push
pop
jmp
sarb
jae
cld
add
pop
or
push
ret
and
leave
aas
jg
add
and
add
insb
mov
add
test
or
pop
jo
sbb
flds
pusha
insl
shll
mov
psubb
fcmovnbe
xor
addr16
push
out
ficompl
neg
out
cmp
xchg
pushf
popf
rolb
loopne
lock
sbb
xchg
insb
xchg
clc
pop
push
aas
pop
xchg
jnp
pop
xchg
add
lock
xor
pop
std
cmp
movsl
xchg
add
pop
out
cmp
pushw
jbe
jg
or
lock
pop
inc
add
jo
mov
pop
sbb
rolb
incb
lock
pushl
or
jns
jae
push
add
nopl
es
cmp
sbb
push
add
nopl
repnz
aas
into
push
add
fistpll
inc
and
cmp
jl
add
add
comiss
mov
pop
outsb
daa
add
lahf
out
add
jg
lea
aas
rcrb
dec
add
push
inc
pop
outsl
clc
push
pop
fisttpl
cmp
add
xlat
mov
sbb
mov
cmp
das
ds
lods
xchg
and
jg
pushl
fwait
adc
pop
in
les
test
mov
jg
aas
nopl
cmp
sub
add
mov
pop
cld
pop
cmp
aad
mov
fsubrl
aaa
or
add
sub
fwait
int
ret
or
jle
or
push
sub
inc
add
sahf
in
cmp
inc
addl
pusha
xor
sbb
push
push
sbb
add
vpsubusw
shll
cmp
mov
sbb
cmp
sbb
or
test
or
incl
xchg
and
add
push
mov
ja
add
sub
rolb
rcrb
push
and
add
cmp
jae
or
add
mov
pop
xor
cmp
subl
mov
mov
sbb
cmp
xor
daa
neg
in
scas
and
xor
sahf
jnp
pop
and
ja
cmp
sahf
mov
push
dec
push
mov
jnp
xor
push
daa
cmp
sbb
push
andl
push
fidivrs
dec
daa
dec
addl
daa
mov
out
jne
cmp
push
daa
clc
push
or
sbb
mov
pop
push
cmp
xchg
or
jl
push
repnz
inc
cmp
cmp
rep
loope
xor
and
daa
inc
mov
xor
daa
dec
sub
xchg
daa
jg
repz
xor
mov
pop
mov
dec
sub
clc
xor
jbe
and
push
es
and
lods
fnstsw
int3
push
and
and
cmp
mov
pop
and
mov
and
sbb
cmp
jnp
fldenv
push
lret
repnz
push
and
xor
or
push
pmaxub
in
mov
push
sbbl
xbegin
and
inc
inc
lahf
add
ja
testl
cs
inc
inc
or
xchg
in
inc
pop
dec
ljmp
xor
insb
mov
inc
aad
mov
aaa
jns
lods
dec
dec
pop
daa
mov
jns
enter
xchg
in
sbb
inc
add
clc
mov
xorb
sti
test
mov
ja
dec
pushf
es
dec
mov
sbb
xor
inc
mov
xor
ds
shll
cmp
daa
xor
arpl
add
insb
insb
mov
daa
lahf
and
lcall
popf
mov
pop
es
push
lcall
in
es
fidivs
mov
lret
mov
aas
fwait
inc
inc
es
out
fnstenv
daa
dec
add
jle
xlat
ja
daa
xor
in
repz
sub
xchg
popa
out
jecxz
test
or
aad
adc
xor
cmp
nop
in
inc
xchg
sbb
or
stos
movsb
out
sub
or
pop
jns
fsubl
xor
inc
xor
scas
fnstcw
das
es
bound
cld
insb
jo
in
push
inc
sub
jb
pshufw
stos
and
repz
andl
jmp
inc
push
shlb
in
xor
push
inc
mov
and
mov
mov
aas
clc
daa
fsubrs
mov
pop
lock
cmp
fsubs
movsb
jbe
cmp
dec
xchg
daa
and
mov
in
xor
adc
xlat
or
xchg
jmp
divl
lock
cmpsl
sbbb
and
jo
cmp
push
cmp
sbb
test
xchg
sbb
clc
mov
inc
inc
daa
adc
daa
fs
xor
daa
in
jl
gs
clc
or
sbb
xchg
es
mov
daa
dec
xor
dec
xor
jbe
insl
daa
dec
daa
dec
daa
dec
jae
test
daa
clc
dec
or
dec
sarb
addr16
cmp
adcl
rorl
dec
out
aas
sbb
bswap
test
mov
cmp
cltd
ret
jnp
in
push
mov
mov
inc
xor
cwtl
sbb
daa
repz
inc
push
cmp
repz
xor
insb
sarb
cmp
bound
xchg
add
cmp
daa
shlb
push
insb
push
aas
push
mov
lahf
adc
pop
pushl
inc
sub
inc
jae
xor
fbstp
lahf
es
mov
scas
orl
and
push
pushf
aaa
js
addr16
aas
daa
shrl
fs
jl
daa
and
cwtl
and
sbb
push
aaa
scas
subl
daa
insl
mov
pop
jbe
pushf
outsb
push
outsl
or
mov
push
xor
fadds
clc
daa
and
mov
xchg
add
and
mov
xchg
and
pushf
aas
subl
mov
or
xchg
add
add
ss
jg
cmc
jp
gs
or
cltd
xor
sub
popf
cld
push
lock
add
pop
mov
lock
xchg
dec
add
fwait
cmp
pop
or
insl
xchg
add
sbb
inc
cmc
mov
push
repnz
add
push
add
push
mov
leave
cmpsb
fidivs
imul
fildl
inc
push
add
jne
inc
pop
out
sbbb
mov
inc
push
add
add
push
str
jge
mov
jbe
rolb
fists
fidivrl
push
jo
ss
lea
push
sub
orl
lret
addr16
xor
loop,pn
aas
addr16
bound
mov
aas
rcrb
fisubl
dec
repz
fidivrs
and
lcall
inc
imul
idivl
cmp
imul
push
dec
adc
inc
mov
dec
insl
push
or
cmpsl
sub
push
push
ss
imul
scas
sub
sub
arpl
gs
out
ret
add
inc
jbe
imul
fimull
fisubl
not
and
cmp
pop
mov
aaa
push
bnd
cmpsb
jne
add
mov
jne
inc
ja
jno
mov
or
ss
add
jg
cmp
mov
dec
xchg
out
popa
fldl
ret
loop
xlat
or
jbe
mov
iret
pop
adc
pop
in
adc
dec
subl
sub
or
mov
pop
ret
shrl
cmp
or
arpl
or
insl
addb
ffreep
push
push
push
popa
lahf
outsl
sub
inc
gs
dec
cmpsl
sbb
idivl
aaa
popa
adc
push
bnd
mov
shrb
cmpsl
pop
mov
push
outsl
and
add
add
ds
mov
insb
jg
mov
loop
jg
and
xchg
stc
loopne
popf
imul
adc
push
je
dec
dec
pop
divl
push
pop
add
fwait
xor
mov
sbb
fisubrl
xorb
lahf
inc
sub
in
mov
imul
mov
arpl
jae
sbb
sbb
neg
out
andb
and
sbb
into
xchg
insb
jae
arpl
data16
lret
insl
xor
mov
sbb
push
ja
push
push
jnp
cmp
inc
add
xor
dec
pop
push
add
xchg
arpl
je
xlat
aad
lds
insl
and
andl
xorb
push
outsb
lahf
and
cwtl
and
push
jbe
addr16
mov
stc
scas
adc
out
fidivrl
in
xchg
je
push
sub
pop
fisubrs
inc
mov
pop
mov
pop
push
jae
ret
addl
bound
ret
ja
sub
push
aas
cmp
inc
or
inc
pop
fidivl
in
mov
and
jo
ja
subl
imul
fwait
dec
and
sti
push
and
fdivrl
ja
jns
push
add
cmp
add
or
jnp
stos
xchg
xchg
cli
dec
stos
push
fisubrs
ss
dec
sub
adcl
fisubrl
sub
insb
sbb
sar
and
jo
outsl
ret
pop
aaa
fs
sbb
sbb
xorb
jae
adc
fwait
mov
mov
adc
das
adc
loopne
push
out
pop
rclb
mov
sbb
jne
adc
aaa
popa
fldt
mov
push
addb
cmp
fsubr
pop
pop
repz
pop
pop
xorb
sub
daa
pop
icebp
mov
scas
add
sbb
or
xchg
lock
rol
sti
jns
es
xchg
mov
inc
lcall
and
or
pop
fwait
imul
loop
sarl
idivl
pusha
mov
rcr
in
ficoms
push
push
adc
jno
xlat
adc
pop
dec
dec
or
imul
add
adc
fs
xchg
pop
orl
mov
cmp
punpckhbw
lods
arpl
pop
dec
add
or
in
js
pop
push
jae
outsl
lret
xor
jnp
or
jmp
pop
xchg
xor
fildl
adc
jmp
mov
ss
mov
fcomi
loopne
mull
add
pop
rcll
pop
mov
sbb
jo
iret
adc
sarl
rcrl
push
inc
bound
stos
pop
sti
insl
pop
xchg
ja
in
xchg
cmp
mov
inc
mov
jb
les
testl
outsl
pop
dec
jg
mov
sti
addr16
je
lds
sub
dec
mov
cmp
inc
daa
das
xlat
xor
mov
cs
cmp
into
dec
xor
cmp
and
push
mov
mov
adc
mov
xlat
sub
je,pt
rcr
mov
daa
out
iret
pop
sbb
xlat
mov
outsl
mov
inc
mov
sbb
and
js
outsl
mov
ret
movsb
repz
imul
mov
inc
jae
push
mov
lods
call
jb
movsb
adc
pop
outsl
adc
pop
inc
js
pop
jbe
push
popa
ja
xlat
data16
ja
adc
inc
mov
nop
mov
dec
dec
scas
jmp
and
sub
xor
adc
or
fs
adc
cmp
sub
dec
pop
in
inc
pop
mov
mov
jnp
fadds
cmp
xchg
arpl
popa
sub
push
xor
push
inc
arpl
mov
jb
fwait
jbe
imul
adcl
jbe
sti
sub
mov
stos
dec
xchg
pop
notl
stos
jmp
shrl
lret
jmp
xor
sub
loopne
push
jae
or
jle
mov
outsb
pop
in
jbe
out
and
or
push
mov
add
inc
sarl
insl
fwait
shrl
outsb
idivl
push
pop
fistpl
data16
adc
popa
outsl
cmp
lods
pop
lods
les
push
jg
mov
adc
xchg
je
adc
lock
adc
sbb
mov
mov
addr16
push
das
out
push
cmpb
pop
xor
outsl
mov
add
neg
fdiv
dec
scas
insl
fistps
dec
cmp
lahf
mov
aad
xlat
xchg
and
cmpsb
popa
fildll
arpl
ret
test
cmpsl
imul
lcall
pop
xor
mov
pop
sbb
xchg
movsb
sub
push
inc
mov
addr16
inc
and
xchg
sbb
xor
adc
les
pop
pop
adc
lds
jge
mov
inc
andl
js
sbb
aam
cmp
pop
arpl
sbb
rorb
dec
push
mov
push
mov
jnp
xchg
mov
lcall
push
inc
push
pcmpgtb
mov
mov
pusha
aas
lahf
loopne
push
loopne
sub
pop
mov
loop
xor
js
pop
and
js
addr16
cmp
sbb
jnp
insb
inc
xor
add
sti
cs
sub
sbb
adcb
mov
daa
cmpsl
pop
push
and
inc
mov
jo
lods
xchg
aaa
sbb
jne
adc
mov
mov
jnp
xchg
out
imul
bound
or
addl
mov
push
jne
stos
out
testl
add
jne
dec
cmp
push
push
push
fimull
loopne
js
das
jae
jmp
mov
pop
data16
jae
or
outsb
daa
or
insl
fcmovnb
aas
iret
inc
and
mov
push
mov
mov
mov
jmp
roll
ret
sub
sbb
mov
addr16
or
stos
cmpsb
pop
pop
pushl
add
cmp
scas
xchg
les
xchg
dec
fiadds
jne
out
bound
and
in
push
and
pop
xchg
into
sbb
add
ds
pop
adc
sub
or
out
jb
xor
icebp
dec
inc
pop
or
jbe
fiaddl
and
sbb
mov
sbb
pop
test
add
inc
pop
push
jo
adc
jle
das
fsub
jecxz
aas
jle
mov
insb
addr16
sbb
aam
add
or
sbb
xchg
jne
mov
xchg
lret
das
andl
dec
sbb
inc
pop
inc
shlb
and
cmpb
mov
stos
dec
pop
mov
fistl
mov
arpl
mov
cmp
sub
adc
pop
add
pop
jno
and
incl
repz
adc
add
dec
out
stos
es
shrl
outsl
jb
xchg
or
mov
adc
pop
cmpsl
pusha
sbb
pop
or
je
jbe
ljmp
jbe
cmp
dec
xchg
cmp
xchg
adc
inc
sbb
ds
xor
pusha
pop
rcll
movw
mov
cmp
mov
sbb
adc
iret
push
adc
pop
pop
xor
inc
inc
push
xlat
pop
jg
loope
push
inc
sbb
jae
gs
ret
mov
cmpsl
lahf
cmp
outsb
and
mov
pusha
mov
sub
cmpsl
xchg
push
or
mov
sbb
je
in
cli
xlat
jae
mov
dec
push
repz
stos
sub
dec
repnz
outsl
fisubrl
lds
pop
sub
lahf
pusha
lds
or
add
xlat
push
mov
ret
shll
das
ja
mov
or
popl
push
xchg
inc
dec
xchg
jo
cmpsl
mov
jne
sub
data16
dec
fbld
push
pop
adc
or
jne
inc
xchg
imul
push
sub
jmp
mov
adc
push
jnp
loopne
xchg
fisubrl
out
inc
mov
jae
inc
shll
xchg
jae
mov
pop
divl
jb
jbe
inc
or
aaa
mov
cmpsl
ret
add
addr16
scas
sahf
cmpsb
test
or
int3
test
push
pop
int
pop
mov
lahf
mov
stos
popa
imul
outsl
xor
jns
jb
pop
shll
push
imul
cmp
faddp
cmpl
xchg
scas
dec
inc
pop
ljmp
outsb
ret
leave
ret
sbb
jo
loopne
add
adc
xlat
rcl
xchg
pop
outsl
ds
inc
sbb
xchg
pop
stos
js
dec
sub
xor
pop
and
pop
daa
pop
repz
orb
pop
sub
add
cmp
dec
cmp
xorb
repz
add
fwait
cmp
dec
mov
push
lods
sar
int
mov
jae
push
dec
lods
mov
adc
xorl
in
push
push
fwait
xchg
cmpb
add
imul
adc
mov
rcll
mov
and
dec
pop
inc
rcr
push
sbb
xchg
rcll
add
adc
dec
mov
mov
push
mov
adc
pop
adc
pop
dec
imul
fcmovnb
mov
repz
sub
ja
or
add
mov
in
mov
dec
adc
js
insb
mov
dec
cmpsl
adc
cs
cmp
movsl
dec
jnp
imul
xor
push
les
xor
or
mov
arpl
mov
and
sbb
push
lret
dec
mov
add
sub
sub
sbb
sub
add
insl
scas
adc
add
jb
sub
movsb
jbe
clc
sbb
push
push
es
xchg
sahf
mov
xchg
xchg
adc
outsb
pop
jnp
js
or
je
xor
imul
jbe
jbe
or
push
int
adc
ret
jo
dec
sbb
sub
in
inc
insb
addr16
xor
sub
xchg
je
mov
pop
into
mov
dec
sarb
xor
gs
push
dec
cmp
cmp
ret
leavew
jp
cmp
pop
inc
lods
rcll
fisttpll
mov
adc
shl
ficoml
mov
pop
sub
loopne
dec
popf
movsl
mov
outsl
inc
aad
sarl
xorl
and
and
insb
add
push
arpl
movsl
or
mov
in
insb
popl
cmc
popa
rclb
sub
push
adc
mov
cmpsl
push
addr16
add
out
pop
or
or
push
jno,pn
dec
add
pop
psrlw
cmp
icebp
sahf
mov
roll
cmc
or
push
push
inc
xor
sarl
fsubl
or
or
push
dec
xor
test
add
fcmovne
or
mov
xchg
push
pop
mov
jo
add
xor
adcl
sbb
lds
divl
xor
jo
push
xor
xor
mov
sbb
iret
sbb
hlt
jne
add
addl
mov
dec
adc
dec
out
and
inc
jnp
mov
or
add
sub
test
add
dec
mov
call
adc
push
clc
jl
jl
push
add
push
insb
gs
adcb
bound
movsb
mov
or
inc
lea
arpl
fwait
push
into
push
sub
push
cmovge
xor
outsb
push
adc
jns
mov
das
adc
ficomps
fldenv
daa
insb
adc
add
call
aam
push
imul
or
cwtl
inc
into
pop
mov
pusha
or
adc
dec
sbb
xchg
cmpsl
add
outsl
adc
push
scas
inc
xchg
and
pop
out
mov
daa
xor
adc
adc
insb
xor
dec
data16
data16
insl
lcall
imul
push
sar
or
imul
push
imul
flds
imul
pusha
push
xor
fs
push
les
pop
xchg
sbb
sub
rol
sti
xor
push
outsb
flds
or
xchg
sbb
scas
sbb
sbb
sbb
add
cmp
inc
inc
sbb
inc
or
add
and
mov
inc
fs
gs
sub
lcall
outsb
xor
push
jne
loop
imul
xchg
fs
sbb
push
mov
dec
xor
insb
test
rcrl
shrl
sub
push
sar
popf
and
lcall
repz
rolb
push
sbb
insl
fildll
xchg
inc
jp
push
stos
icebp
sbb
imul
sbb
cmp
ja
loop
or
cmp
add
sub
leave
pop
shlb
dec
fs
xchg
sub
push
fwait
inc
push
push
ud2
movsl
ret
aad
pop
pop
inc
or
mov
add
bound
es
jbe
push
inc
gs
in
shrl
or
sbb
sbb
mov
pop
push
ja
movsb
iret
adc
fldlg2
pusha
fcmovnb
push
outsl
out
sbb
mov
sbb
subl
push
pop
xor
inc
aas
fistl
lea
and
sbb
and
fiaddl
mov
push
xchg
daa
in
pop
ret
mov
mov
jge
push
adc
ret
xchg
imul
adc
shll
xor
mov
and
push
xlat
icebp
icebp
push
js
rdtsc
cmp
popf
xor
pop
push
inc
int
dec
mov
xchg
in
shlb
sbb
je
adc
inc
test
inc
adc
mov
or
pop
pop
out
je
loop
popa
push
add
mov
ja
push
outsb
pop
aas
mov
imul
xor
inc
cmc
sbb
push
outsb
push
ret
cs
jne
mov
cwtl
loopne
ret
push
popa
imul
shrb
mov
stc
popf
cs
cmp
sub
ret
fs
jae
push
mov
sub
mov
sub
jmp
nop
cltd
dec
shlb
xlat
mov
inc
pop
jae
push
sbb
sub
and
or
pop
pop
pop
lret
jo
xchg
xchg
push
dec
clc
jne
es
jne
sub
subb
jne
push
arpl
add
test
jne
add
sar
insl
add
pop
nop
or
test
pop
sbb
fsub
faddp
adc
add
rolb
test
movsb
and
cmp
test
adc
pusha
inc
adc
sbbl
or
mov
aaa
outsl
rcr
xor
and
jmp
imul
mov
inc
ret
outsl
es
pusha
mov
inc
mov
out
cmpl
and
inc
add
inc
push
sbb
mov
add
or
inc
imul
imul
push
sbb
mov
cmpsb
mov
xor
cmc
aas
and
sti
mov
push
jecxz
repz
and
addr16
shll
lahf
sbbb
stos
pop
rcrb
inc
or
and
imul
dec
mov
add
push
dec
push
xor
push
mov
shrl
mov
inc
dec
inc
rcl
repz
and
divb
movsl
jg
adc
push
popa
lds
mov
in
aam
mov
jecxz
inc
aad
adc
xor
adc
lds
xor
test
jns
and
roll
push
js
dec
mov
ds
jo
shll
jns
mov
dec
pop
mov
fsts
rcl
adc
and
add
cmc
sub
xor
roll
mov
sub
fsubr
stos
mov
std
adc
lods
pusha
jnp
shl
push
mov
subb
push
sub
or
fcmovne
add
dec
xor
mov
inc
inc
sub
test
sub
enter
sbb
dec
sbb
sub
xchg
movsb
pop
daa
bndstx
and
dec
inc
jmp
mov
sbb
pop
stc
and
xor
shlb
sub
cwtl
jae
dec
and
lods
and
adcl
je
sub
push
jo
pop
jnp
cmp
xor
mov
push
or
pop
mov
data16
mov
mov
nop
lret
adc
cli
mov
daa
dec
inc
sbb
xorl
arpl
add
adc
lods
sbb
cmp
and
mov
addr16
sbb
jnp
dec
sbb
and
ret
test
add
int3
sub
jo
fildl
pusha
enter
jo
jo
popf
test
cmp
adc
dec
jo
adc
xchg
adc
inc
fcmovu
xor
and
dec
jb
sub
sbb
push
insl
jb
outsl
inc
jo
bound
add
outsl
xor
add
fincstp
sub
jae
adcb
jge
adc
imul
add
cmp
insb
daa
sub
arpl
pop
adc
loopne
das
pop
add
imul
sbb
mov
mov
and
xor
push
nop
popf
sub
int
lea
ret
add
lds
fsubs
jne,pn
mov
nop
mov
pop
dec
xchg
jbe
inc
movsl
push
xor
adc
fcmovne
sbb
pop
xchg
and
iret
lea
pop
insl
push
popl
loope
cmpsl
shrl
int
and
xchg
xor
movsl
daa
push
and
sbb
stos
int
push
outsl
and
test
inc
aaa
and
pop
test
sbbb
pop
push
fidivrl
dec
or
pop
sub
lds
xchg
hlt
inc
sbb
and
ja
movsl
xor
jae
adc
xchg
inc
sbb
lahf
sub
insl
mov
adc
xchg
add
das
enter
dec
jae
mov
test
es
loopne
inc
adc
shr
xchg
movsl
sbb
imul
std
pop
and
add
ja
movsl
or
cltd
mov
pusha
inc
xchg
mov
push
pop
sbb
add
lret
stos
insl
in
or
rcr
inc
scas
inc
pop
sub
lods
clc
addb
inc
imul
inc
fstpt
jns
lds
bound
xlat
test
inc
inc
inc
or
xor
mov
dec
pop
insb
pop
sbb
xchg
sbb
and
jbe
rcrb
mov
insb
mov
adc
and
insl
mov
sbb
rol
fwait
dec
inc
adc
push
test
nop
imul
jb
or
jno
imul
mov
cs
inc
adc
lcall
pusha
test
leave
adc
jno
push
ficoml
xor
push
mov
sub
and
test
sbb
adc
mov
and
lods
addr16
loope
jae
in
push
outsl
sbb
cs
adc
icebp
and
xchg
xchg
mov
lea
lds
jb
inc
mov
sbb
jg
arpl
dec
data16
pop
and
insl
and
mov
sbb
pusha
pop
and
jmp
ret
adc
loopne
sub
mov
adc
cmpsb
lea
push
test
int3
push
adc
dec
jb
push
pop
popa
movsb
leave
sub
push
test
jmp
inc
adc
dec
cmp
aaa
add
jo
dec
outsb
add
jg
fisubl
adc
push
sahf
int
cmp
les
xchg
pop
sarl
inc
add
dec
enter
pusha
push
sarb
insb
test
pop
xor
or
mov
int3
dec
nop
mov
pop
inc
sub
pusha
mov
jg
add
sbb
sub
add
enter
pushf
ss
push
or
test
nopl
xchg
insl
sbb
pop
xchg
notb
movups
add
jns
nop
sahf
bound
outsb
push
mov
arpl
popf
ds
imul
dec
inc
mov
addl
daa
sub
cs
stc
and
pusha
inc
inc
push
inc
sub
negl
and
in
in
cld
rolb
stc
es
inc
dec
rcrb
movsb
popa
dec
bound
cmpsl
nop
sub
insb
jae
xchg
push
rcrb
sbb
dec
rolb
inc
xor
xchg
loopne
add
jns
push
jae
dec
and
es
push
cmp
mov
sub
das
lret
pop
add
add
add
inc
add
inc
xchg
ds
jmp
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
popa
jmp
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
nop
jmp
add
inc
inc
add
add
add
or
add
add
push
add
addb
add
mov
add
rolb
add
sub
addb
add
push
add
add
pop
add
js
add
fmuls
add
add
add
add
add
add
pop
add
add
add
add
add
add
addb
add
call
add
add
add
addb
add
pusha
add
addb
add
mov
add
add
add
add
add
add
add
add
add
mov
add
pop
pop
pop
add
add
in
add
add
add
add
add
add
add
fadds
add
mov
xor
add
in
add
add
add
add
add
add
add
add
add
rcrb
xor
add
in
add
add
add
add
add
add
add
sub
add
hlt
pop
pop
add
add
in
add
add
add
add
add
add
add
push
add
add
pusha
pop
add
add
in
add
add
add
add
add
add
add
js
add
pop
popa
pop
add
add
in
add
add
add
add
add
add
add
mov
bound
add
add
in
add
add
add
or
add
dec
or
sbbb
add
inc
add
andb
push
or
adcb
add
xchg
or
and
add
or
add
xor
add
pop
add
or
add
or
subb
add
add
add
add
add
add
add
add
add
xor
add
les
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
in
add
add
add
add
add
add
add
addb
add
pop
add
add
add
add
add
add
add
add
add
add
test
add
dec
imul
add
add
add
add
add
add
add
add
rolb
add
sbb
add
add
add
add
add
add
add
add
add
add
clc
add
add
insb
pop
add
add
add
add
add
add
add
add
add
add
and
add
mov
add
add
add
add
add
add
add
add
add
dec
add
add
add
add
add
add
add
add
add
add
add
jo
add
pop
jb
add
add
add
add
add
add
add
add
add
add
cwtl
add
add
je
add
add
add
add
add
add
add
add
add
add
rolb
add
jne
add
add
add
add
add
add
add
add
add
add
call
add
add
add
add
add
add
add
add
add
or
add
add
sbb
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
lock
addb
addb
add
add
add
add
add
add
add
add
add
pop
add
add
pop
add
add
in
add
add
add
add
adc
out
sldt
or
add
xor
add
pop
add
add
addb
add
sldt
rolb
add
clc
add
add
and
add
dec
push
add
jo
add
cwtl
push
add
rolb
cmp
add
call
sldt
adc
add
cmp
add
pusha
pop
add
mov
add
mov
add
add
add
add
add
add
add
add
add
and
pop
add
add
in
add
add
add
add
add
add
add
dec
add
pop
add
add
in
add
add
add
add
add
add
add
jo
add
hlt
mov
add
add
add
add
add
add
add
add
add
add
cwtl
add
pop
add
add
add
add
add
add
add
add
add
add
rolb
add
add
add
add
add
add
add
add
add
add
call
xchg
pop
add
add
add
add
add
add
add
add
adc
add
xor
pop
add
add
add
add
add
add
add
add
add
add
cmp
add
adc
pop
add
add
in
add
add
add
add
add
add
add
pusha
push
add
inc
xchg
pop
add
add
add
add
add
add
add
add
mov
add
rclb
add
in
add
add
add
add
add
add
add
mov
add
lock
pop
add
add
in
add
add
add
add
add
add
add
fadds
add
pusha
lahf
pop
add
add
add
add
add
add
add
add
add
add
add
add
js
pop
add
add
add
add
add
add
add
add
add
add
sub
add
push
movsl
pop
add
add
add
add
add
add
add
add
add
add
push
pop
add
inc
cmpsb
pop
add
add
add
add
add
add
add
add
js
add
hlt
cmpsl
pop
add
add
add
add
add
add
add
add
add
add
mov
stos
pop
add
add
in
add
add
add
add
add
add
add
enter
xor
add
in
add
add
add
add
add
or
add
push
or
subb
add
push
or
addb
add
add
add
add
add
add
add
add
add
sbb
add
in
pop
add
add
add
add
add
add
add
add
add
add
inc
or
add
mov
add
add
add
add
add
add
add
add
add
add
push
mov
add
add
add
add
add
add
add
pop
add
jg
add
or
cmp
add
call
jg
add
or
cmp
add
cmp
add
pusha
or
cmp
add
mov
add
mov
add
add
add
add
add
add
add
add
add
fmuls
add
aam
pop
add
add
in
add
add
add
add
add
add
add
add
add
call
add
add
add
add
add
add
add
add
add
sub
add
cld
mov
add
add
in
add
add
add
add
add
add
add
push
or
add
mov
add
add
in
add
add
add
add
add
add
add
js
add
and
pop
add
add
in
add
add
add
add
add
add
add
mov
mov
add
add
in
add
add
add
add
add
add
add
enter
dec
mov
add
add
in
add
add
add
add
add
inc
or
cmp
add
and
add
add
add
add
add
add
add
add
add
adc
add
hlt
or
add
add
in
add
add
add
add
add
add
add
cmp
add
je
pop
add
add
in
add
add
add
pop
add
inc
add
inc
add
push
add
add
inc
add
dec
add
add
inc
add
inc
add
inc
add
dec
add
add
inc
add
dec
add
push
add
push
add
inc
add
inc
add
add
add
inc
add
inc
add
dec
add
inc
add
inc
add
dec
add
add
inc
add
dec
add
pop
add
inc
add
inc
add
add
add
add
inc
add
or
push
add
inc
add
dec
add
push
add
dec
add
push
add
or
inc
add
add
add
push
add
add
add
add
add
dec
add
dec
add
add
inc
add
dec
add
inc
add
dec
add
inc
add
or
push
add
dec
add
pop
add
dec
add
dec
add
or
dec
add
dec
add
dec
add
dec
add
add
loopne
pop
add
add
add
add
add
add
add
add
add
add
addb
add
add
add
addb
addb
add
addb
add
incl
add
add
add
incl
incl
add
incl
incl
incl
add
incl
xor
ja
cmp
jo
mov
add
add
add
add
pop
add
add
pop
add
jo
jo
add
add
add
add
pop
add
add
add
add
add
mov
jo
add
jo
jo
add
add
xor
jo
add
add
pop
add
add
add
add
pop
add
add
add
jo
add
add
add
add
add
pop
pop
add
add
add
add
jo
add
add
xor
jo
add
add
pop
add
add
pop
add
add
add
add
or
xor
add
add
add
add
cmpb
jo
add
add
add
add
mov
add
add
add
pop
add
add
pop
add
add
jo
add
or
xor
add
add
pop
add
add
mov
jo
add
add
add
add
mov
add
add
add
pop
add
add
add
add
ja
add
add
add
add
add
xchg
add
pop
pop
add
add
add
or
add
ja
add
or
or
add
add
xorb
add
add
add
or
add
add
add
addb
add
cmpb
add
add
or
add
or
or
add
add
add
add
add
add
add
addb
add
add
mov
add
add
add
add
pushl
jmp
incl
sti
add
repz
push
add
push
add
pushl
add
jmp
add
incl
add
sti
add
add
add
add
add
add
add
adc
add
mov
add
add
add
add
add
add
add
add
adc
addb
inc
add
jmp
add
push
add
clc
add
incb
call
mov
pop
add
add
add
add
add
add
add
or
add
add
incl
xlat
xlat
xlat
add
jge
iret
iret
iret
add
cld
cld
add
add
pop
pop
add
or
add
add
add
add
add
rcl
add
fstp
add
xchg
xchg
add
pop
pop
add
fcmovnu
add
mov
push
push
push
add
sti
sti
add
mov
sldt
rol
mov
mov
xchg
xchg
xchg
add
pop
add
and
push
push
push
add
inc
add
es
sbb
add
pushf
pushf
add
jnp
dec
dec
dec
add
into
into
add
inc
inc
add
sbb
add
add
dec
add
cmp
sahf
sahf
sahf
add
nop
nop
add
pusha
add
popl
test
add
and
add
hlt
hlt
add
push
push
add
jp
gs
and
add
adc
add
pop
pop
add
mov
mov
add
jne
and
addb
cmp
cmp
adc
adc
ja
ja
push
push
push
add
push
push
add
cmp
add
jle
add
pop
add
int
add
loop
add
pop
add
lcall
frstor
add
cltd
mov
mov
addl
add
imul
push
push
push
add
cld
cld
add
or
rclb
adc
adc
adc
mov
or
aas
or
xchg
add
or
adc
adc
sbb
sbb
mov
incl
jge
add
rolb
add
incl
add
fldl
add
mov
add
pop
add
add
dec
add
popl
mov
jo
push
push
push
add
add
add
add
pop
push
lea
fwait
fwait
mov
cmpsl
cmpsl
cmpsl
add
add
jb
or
or
cmp
xchg
add
mov
dec
add
popl
daa
daa
dec
add
push
push
add
lods
lods
add
add
loope
add
add
add
add
jae
add
imul
add
fcmovu
add
jecxz
add
add
xchg
add
add
add
add
jo
push
add
add
add
sbb
add
stos
stos
add
rcl
add
inc
inc
add
outsb
outsb
add
xchg
add
add
add
add
js
add
cmp
add
or
or
xor
xor
cmp
cmp
mov
out
add
add
sbb
add
add
je
add
add
add
adc
adc
adc
sbb
add
sbb
add
addr16
add
js
add
adc
add
add
pusha
insb
pusha
add
insb
sbb
add
sub
dec
dec
dec
add
pop
add
push
cmp
dec
add
add
add
lcall
add
mov
add
inc
mov
add
inc
inc
add
ds
push
add
jg
xchg
cltd
add
clc
clc
clc
add
and
add
add
add
leave
leave
add
repnz
add
sub
in
add
cmc
cmc
add
in
add
sbb
add
add
add
call
repz
hlt
out
add
sti
fiaddl
sar
rolb
lret
in
add
ljmp
test
test
data16
pop
add
sbb
adc
adc
andl
add
add
add
cs
add
add
dec
cmp
add
add
add
pop
cmpl
add
mov
mov
add
add
add
mov
add
add
add
push
push
pop
or
or
add
add
or
add
add
add
add
add
add
movups
adc
add
add
add
add
add
add
add
add
add
add
add
movups
adc
sbb
add
push
add
add
add
movups
sbb
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
movups
and
and
daa
daa
daa
daa
daa
sub
sub
sub
sub
sub
add
push
add
add
add
movups
sub
cs
xor
xor
xor
xor
xor
xor
ss
cmp
add
push
add
add
add
movups
cmp
cs
inc
inc
inc
inc
inc
inc
or
inc
inc
inc
inc
xor
add
push
add
add
add
movups
and
add
add
dec
add
add
sbb
dec
push
push
push
push
push
push
push
push
push
push
pop
pop
pop
pop
sbb
cs
pop
pop
add
add
pusha
add
add
dec
popa
push
sbb
bound
add
add
add
add
data16
sbb
cs
cs
add
add
insl
or
add
add
outsl
sbb
bound
add
add
add
add
jae
jae
jae
je
ja
jns
sbb
inc
push
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
jnp
sbb
bound
add
add
add
add
jae
jae
jae
je
jge
jg
pop
and
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
popa
push
sbb
bound
add
add
add
add
jae
jae
jae
je
addb
cs
adc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
xchg
bound
add
add
add
add
jae
jae
jae
je
jl
jbe
mov
dec
dec
bound
add
add
add
add
jae
jae
jae
nop
xchg
jl
jl
jle
aas
xchg
push
inc
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
cwtl
cltd
lcall
add
add
jo
jae
jae
jae
fwait
pushf
jl
jl
sahf
lahf
mov
ss
popa
mov
add
add
add
mov
cmpsl
cmpsl
cmpsl
cmpsl
test
stos
lods
jl
jl
scas
scas
mov
mov
mov
mov
mov
mov
mov
mov
bound
xor
add
add
add
add
add
jl
lods
mov
sub
sub
mov
dec
popa
shlb
add
ret
add
add
add
xchg
lods
mov
cs
enter
lret
or
add
add
dec
dec
or
xchg
int3
int
lcall
dec
aaa
rcl
rcl
rcl
rcl
aam
aad
xlat
mov
fcmovne
add
add
add
dec
fcoml
dec
fimuls
jecxz
inc
or
in
in
in
in
out
out
cmp
cmp
add
add
add
dec
jmp
push
int3
es
ss
push
jmp
in
out
aas
fstl
out
icebp
icebp
icebp
icebp
icebp
icebp
icebp
repnz
hlt
cmc
cmp
cmp
add
add
add
dec
jmp
push
int3
es
ss
push
jmp
in
out
aas
fstl
out
icebp
icebp
icebp
icebp
icebp
icebp
icebp
repnz
hlt
cmc
cmp
cmp
add
add
add
dec
xchg
sar
xchg
xchg
out
out
out
adc
std
call
cmp
add
add
add
cs
cmp
adc
popa
popa
ss
add
popf
jne
jne
jne
jne
jne
jne
jmp
popa
dec
cmp
add
add
add
sub
inc
mov
xchg
jmp
jmp
fimuls
popf
fwait
je
je
je
je
je
fwait
in
cmp
cmp
add
add
add
add
mov
dec
sub
neg
and
jae
jae
jae
jae
fwait
in
cmp
cmp
add
add
add
add
cmp
in
add
and
div
testb
jae
jae
jae
jae
jae
fwait
in
cmp
cmp
loopne
push
notb
add
ss
rcll
jae
jae
jae
jae
jae
jae
in
cmp
cmp
add
sbb
xor
pop
pop
pop
pop
jbe
je
jae
jae
jae
jae
jae
fwait
in
cmp
cmp
add
aas
cs
add
cmp
out
stos
stos
jne
jae
jae
jae
jae
jae
jae
fwait
in
cmp
cmp
add
loopne
scas
add
sub
sbb
xchg
fwait
fwait
je
jae
jae
jae
jae
jae
jae
fwait
in
cmp
cmp
add
add
add
add
mov
adc
jae
jae
jae
jae
jae
jae
jae
in
cmp
cmp
add
add
mov
adc
jae
jae
jae
jae
jae
jae
jae
in
cmp
cmp
add
add
mov
adc
jae
jae
jae
jae
jae
jae
jae
in
cmp
cmp
add
add
mov
adc
jae
jae
jae
jae
jae
jae
jae
in
cmp
cmp
add
add
mov
adc
je
je
je
je
je
je
je
in
cmp
cmp
add
add
mov
adc
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
mov
jmp
popa
dec
cmp
add
add
mov
xor
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
into
push
jmp
popa
dec
cmp
add
add
mov
push
mov
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
adc
cmp
cmp
add
add
mov
inc
lea
mov
mov
mov
cmp
cmp
add
add
mov
mov
mov
mov
and
add
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
cmp
add
ljmp
mov
mov
mov
mov
cmp
add
mov
clc
clc
clc
clc
clc
clc
clc
clc
clc
clc
clc
clc
clc
clc
clc
clc
clc
mov
add
fcmovnu
fcmovnu
fcmovnu
fcmovnu
fcmovnu
fcmovnu
fcmovnu
fcmovnu
fcmovnu
fcmovnu
cmp
add
add
lock
loopne
incl
add
add
clc
add
add
add
cld
add
add
lock
add
add
lock
incl
add
lock
add
add
lock
add
add
xrelease
add
add
xrelease
add
add
xrelease
add
add
lock
add
pop
add
lock
add
pop
add
lock
add
pop
add
lock
add
pop
add
lock
add
pop
add
lock
add
pop
add
lock
add
pop
add
lock
add
pop
add
loopne
add
add
add
ret
lock
add
add
ret
lock
add
add
rolb
add
pop
add
rolb
add
sldt
rolb
add
sldt
rolb
add
sldt
rolb
add
jg
add
add
add
jg
add
add
add
jg
add
add
add
add
add
jg
add
and
add
jg
add
and
add
jg
add
and
add
jg
add
and
add
jg
add
and
add
jg
add
loopne
add
jg
add
loopne
add
jg
add
loopne
add
jg
add
loopne
add
jg
add
loopne
add
jg
add
loopne
add
jg
add
loopne
add
jg
add
loopne
add
jg
add
loopne
add
jg
add
lock
add
add
lock
add
add
cld
add
add
add
cld
add
add
add
pop
add
add
add
add
xor
add
add
add
add
or
or
add
or
les
add
push
push
or
int3
or
add
sbb
or
aam
or
and
or
add
xor
or
in
or
cmp
or
add
dec
push
or
push
push
or
pushw
or
jbe
or
test
or
xchg
push
or
add
add
mov
add
add
add
add
add
add
push
or
add
add
aam
or
add
add
fmull
or
add
add
dec
inc
push
dec
inc
dec
xor
cs
dec
dec
add
jbe
jo
xor
cs
insb
add
insl
arpl
xor
fs
insb
add
imul
insb
add
gs
jne
xor
cs
insb
add
gs
xor
fs
insb
add
jb
imul
add
dec
outsl
popa
fs
imul
add
inc
gs
jb
arpl
fs
jae
add
push
imul
jb
je
arpl
push
imul
insb
insb
outsl
arpl
add
jb
jne
insb
inc
jb
add
add
imul
jae
add
push
gs
insb
jne
push
add
dec
insl
popa
addr16
imul
add
add
jbe
inc
inc
add
push
popa
jb
popa
outsb
je
outsl
jo
add
add
je
inc
add
add
jb
jne
jb
push
popa
insb
jne
inc
xor
aaa
xor
xor
xor
cmp
jae
imul
je
popa
jns
or
inc
xor
xor
xor
or
je
insl
je
popa
jns
or
aaa
xor
inc
xor
xor
xor
or
push
gs
gs
imul
or
dec
pop
push
add
add
add
incl
add
add
add
sbb
add
add
mov
mov
int
mov
nop
nop
push
push
jb
addr16
insl
and
jae
and
and
outsb
and
fs
push
imul
aaa
push
inc
add
dec
add
add
pop
inc
sub
add
add
add
add
add
sbb
mov
add
xor
add
add
add
fwait
add
add
add
add
inc
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
rolb
add
add
add
add
adc
add
add
add
add
add
add
add
lock
add
inc
inc
add
add
push
adc
add
mov
add
add
add
add
pusha
inc
inc
push
inc
add
add
je
add
add
add
add
add
inc
add
rolb
add
add
add
mov
add
add
add
xchg
add
imul
or
add
rolb
add
add
add
add
inc
add
shrb
fs
je
add
pop
add
add
rolb
add
add
add
mov
add
inc
add
push
jb,pn
insb
outsl
arpl
add
or
add
loopne
add
push
add
add
add
inc
add
push
jb,pn
jb
add
add
adc
add
lock
add
add
add
add
inc
add
push
add
add
add
add
add
add
inc
add
push
add
inc
add
push
push
je
imul
pop
adc
add
add
add
add
dec
sub
inc
add
add
inc
add
add
sub
add
inc
add
inc
add
push
dec
bound
arpl
sub
inc
add
roll
sar
and
inc
add
roll
sar
sbb
inc
add
roll
sar
adc
inc
add
roll
sar
adc
inc
add
roll
sar
or
inc
add
roll
sar
add
inc
add
rolb
sar
clc
rolb
sar
hlt
rolb
sar
lock
sar
in
rolb
sar
call
sar
xor
inc
add
rolb
sar
loopne
inc
add
roll
sar
dec
roll
sar
inc
roll
sar
fadd
inc
add
roll
sar
fadd
inc
add
rolb
rclb
mov
add
push
inc
and
add
mov
and
mov
add
pop
ret
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
push
push
mov
cmpl
jne
push
push
call
mov
test
jne
xor
pop
pop
ret
mov
mov
mov
xor
mov
add
lea
mov
mov
mov
inc
cmp
jne
mov
mov
mov
pop
pop
ret
nop
mov
mov
ret
mov
push
push
mov
mov
call
test
jne
xor
pop
pop
ret
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
ret
mov
mov
mov
mov
mov
mov
mov
ret
push
push
push
push
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
cmp
jne
mov
call
mov
mov
mov
add
jmp
add
cmp
jne
mov
call
mov
add
mov
cmp
jne
mov
mov
call
test
jne
xor
mov
pop
pop
pop
pop
pop
ret
push
push
push
push
add
mov
mov
mov
mov
cmp
jb
mov
add
mov
add
cmp
ja
cmp
jne
mov
add
mov
sub
cmpl
jne
mov
call
jmp
mov
mov
add
mov
add
cmp
jne
sub
jmp
mov
add
mov
mov
add
sub
mov
sub
mov
mov
mov
call
test
jne
xor
jmp
mov
jmp
mov
cmp
jne
xor
pop
pop
pop
pop
pop
pop
ret
nop
push
push
push
mov
mov
cmp
jge
mov
jmp
add
and
mov
push
push
push
push
call
mov
mov
test
je
mov
mov
call
test
jne
push
push
mov
push
call
xor
mov
pop
pop
pop
ret
nop
push
push
push
push
mov
mov
mov
movl
push
push
push
push
call
mov
mov
test
jne
add
and
mov
push
push
push
push
call
mov
cmpl
je
mov
mov
call
test
jne
push
push
mov
push
call
xor
mov
pop
pop
pop
pop
ret
nop
push
push
push
push
add
mov
mov
movl
xor
mov
mov
mov
add
mov
mov
jmp
mov
mov
cmp
ja
mov
add
cmp
ja
cmp
jae
mov
mov
add
cmp
jbe
mov
push
push
push
call
test
jne
movl
mov
call
mov
cmp
jne
mov
xor
mov
cmpl
je
mov
mov
mov
mov
sub
mov
mov
add
pop
pop
pop
pop
ret
push
push
push
push
add
mov
mov
mov
mov
and
add
add
and
mov
mov
mov
mov
sub
mov
mov
mov
jmp
mov
mov
add
cmp
jbe
mov
cmp
jbe
mov
cmp
jbe
push
push
sub
push
push
call
test
jne
mov
xor
mov
jmp
mov
cmp
jne
add
pop
pop
pop
pop
ret
mov
push
push
push
push
push
mov
mov
add
and
mov
mov
add
and
mov
mov
mov
sub
mov
mov
jmp
mov
mov
add
cmp
jae
mov
cmp
jae
mov
cmp
jbe
push
sub
push
push
call
test
jne
movl
mov
cmp
jne
pop
pop
pop
pop
pop
ret
lea
push
push
push
push
add
mov
mov
mov
add
and
mov
jmp
cmp
jg
mov
mov
mov
call
cmpl
je
mov
add
mov
sub
cmpl
jne
mov
call
jmp
mov
cmp
jne
mov
mov
call
cmpl
je
mov
mov
mov
call
cmpl
jne
mov
mov
mov
call
xor
mov
pop
pop
pop
pop
pop
pop
ret
mov
push
push
push
push
add
mov
mov
mov
mov
add
and
mov
jmp
mov
cmp
je
cmp
jne
cmp
jne
cmp
jle
lea
mov
sub
mov
add
call
cmpl
je
lea
lea
mov
call
cmpl
jne
lea
mov
mov
call
mov
xor
mov
jmp
lea
mov
mov
call
cmpl
je
lea
lea
mov
call
cmpl
jne
lea
mov
mov
call
mov
xor
mov
jmp
mov
cmp
jne
cmp
jg
mov
mov
mov
call
mov
cmpl
je
mov
mov
add
mov
mov
sub
cmpl
jne
mov
call
jmp
mov
xor
mov
add
pop
pop
pop
pop
ret
nop
push
push
push
add
mov
mov
lea
and
mov
add
and
cmp
jae
mov
mov
sub
mov
call
lea
mov
mov
call
mov
test
je
lea
mov
mov
call
mov
mov
mov
mov
cmpl
je
lea
mov
call
jmp
xor
mov
add
pop
pop
pop
ret
push
mov
xor
push
push
pushl
mov
push
call
cmpb
je
push
call
mov
call
mov
call
mov
call
push
push
call
mov
cmpl
je
mov
mov
xor
mov
inc
cmp
jne
mov
mov
mov
mov
movb
xor
pop
pop
pop
mov
push
cmpb
je
push
call
ret
jmp
jmp
mov
pop
ret
push
mov
push
cmpb
je
xor
push
push
pushl
mov
cmpb
je
push
call
movb
mov
push
call
xor
mov
mov
jmp
push
push
mov
push
call
mov
cmp
jne
mov
call
mov
call
mov
call
mov
test
je
mov
mov
push
call
mov
test
jne
xor
pop
pop
pop
mov
push
cmpb
je
push
call
push
call
ret
jmp
jmp
pop
pop
ret
push
cmp
jne
mov
mov
mov
mov
cmp
jg
cmp
jne
test
jns
add
sar
mov
xor
mov
jmp
test
jns
add
sar
mov
mov
mov
mov
mov
pop
ret
mov
mov
mov
pop
ret
lea
mov
jmp
mov
cmp
jb
add
cmp
jb
mov
cmp
jne
movl
xor
mov
ret
nop
push
mov
sub
lea
cmp
jl
movl
mov
call
pop
ret
cmp
jl
mov
or
mov
mov
pop
ret
incl
mov
sub
mov
and
sub
add
call
ret
mov
cmp
jl
or
mov
add
call
ret
cmp
jl
mov
or
mov
add
andl
ret
push
push
mov
sub
mov
mov
and
cmp
je
movl
mov
and
sub
mov
xor
test
je
movl
testb
je
mov
sub
mov
sub
cmp
je
movl
call
add
mov
pop
pop
ret
lea
push
push
push
mov
xor
mov
test
je
and
add
add
mov
test
jne
mov
mov
call
mov
add
add
andl
mov
pop
pop
pop
ret
push
push
push
push
add
mov
mov
movb
mov
call
mov
test
je
mov
mov
add
mov
lea
sub
cmp
jg
mov
sub
mov
sub
cmp
jge
lea
mov
sub
add
mov
call
jmp
lea
mov
sub
lea
call
mov
test
je
mov
sub
mov
call
mov
add
mov
add
cmp
jae
lea
sub
call
lea
mov
call
movb
mov
add
pop
pop
pop
pop
ret
lea
push
push
push
mov
mov
mov
mov
mov
add
sub
mov
cmp
jg
mov
test
jns
add
sar
mov
mov
test
jne
mov
mov
mov
mov
jmp
mov
mov
mov
mov
mov
jmp
cmp
jl
mov
mov
call
test
jne
mov
mov
mov
mov
mov
mov
mov
pop
pop
pop
ret
lea
cmpl
jle
cmpl
jge
movl
jmp
mov
or
mov
mov
mov
add
call
xor
mov
xor
mov
ret
mov
push
push
push
add
mov
lea
movsl
movsl
mov
call
lea
mov
mov
call
mov
test
jne
xor
jmp
mov
cmp
jae
call
sub
add
mov
add
mov
add
cmp
jae
call
add
mov
add
cmp
jne
sub
mov
call
subl
mov
mov
mov
mov
mov
add
pop
pop
pop
ret
lea
push
add
mov
mov
lea
call
cmpl
je
mov
call
test
jne
xor
jmp
mov
pop
pop
pop
ret
nop
push
push
add
mov
mov
mov
lea
mov
call
cmpl
je
mov
call
test
jne
xor
jmp
mov
pop
pop
pop
pop
ret
lea
xor
test
jns
add
sar
cmp
jg
mov
mov
test
jne
inc
cmp
jne
mov
ret
push
push
push
push
mov
mov
mov
mov
cmp
jle
mov
mov
cmp
jle
mov
mov
cmp
jg
mov
mov
cmp
je
mov
jmp
cmp
jg
mov
call
mov
test
jne
mov
call
test
jne
xor
jmp
cmp
jg
sub
cmpl
jge
add
xor
mov
mov
add
mov
or
mov
add
incl
sub
add
jmp
mov
call
mov
mov
sub
cmp
jl
mov
add
xchg
call
jmp
mov
cmp
jne
mov
mov
mov
add
andl
mov
mov
or
mov
add
incl
sub
add
pop
pop
pop
pop
ret
push
mov
add
push
push
push
mov
cmpb
jne
call
test
je
cmp
jle
xor
mov
jmp
xor
push
push
pushl
mov
cmpb
je
push
call
add
and
cmp
jge
mov
cmp
jg
mov
test
jns
add
sar
mov
mov
test
je
mov
mov
add
andl
mov
cmp
jne
mov
test
jns
add
sar
mov
xor
mov
jmp
mov
test
jns
add
sar
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
or
mov
add
mov
incl
sub
add
call
jmp
cmp
jg
sub
cmpl
jge
add
xor
mov
mov
add
mov
or
mov
add
mov
incl
sub
add
call
jmp
mov
call
mov
xor
pop
pop
pop
mov
push
cmpb
je
push
call
ret
jmp
jmp
mov
pop
pop
pop
pop
pop
pop
ret
lea
push
mov
push
push
push
push
mov
xor
mov
cmpb
jne
call
test
jne
movl
movl
jmp
xor
push
push
pushl
mov
cmpb
je
push
call
mov
sub
mov
test
jne
movl
jmp
decl
mov
and
sub
sub
test
je
mov
sub
mov
cmp
jl
test
je
movl
jmp
mov
sub
cmp
je
movl
jmp
add
mov
call
and
mov
add
mov
cmp
jne
sub
add
cmpl
jle
call
xor
mov
call
jmp
mov
test
je
and
cmp
jge
movl
jmp
orl
jmp
mov
cmpl
je
cmpl
je
cmpl
jge
movl
jmp
mov
add
call
mov
mov
call
mov
mov
xor
pop
pop
pop
mov
push
cmpb
je
push
call
ret
jmp
jmp
mov
pop
pop
pop
pop
pop
ret
mov
push
push
push
push
add
mov
add
and
cmp
jge
mov
mov
sub
mov
and
mov
add
mov
cmp
jne
mov
jmp
cmp
jle
mov
sub
mov
cmp
jne
mov
sub
mov
add
cmpl
jge
mov
add
mov
sub
mov
jmp
mov
testb
jne
mov
mov
add
call
cmpl
jl
mov
add
mov
or
mov
mov
add
call
jmp
mov
jmp
mov
sub
mov
cmp
jne
mov
cmp
jl
mov
sub
mov
add
cmpl
jge
mov
add
add
xor
mov
mov
sub
add
mov
and
or
mov
mov
jmp
call
mov
add
testb
jne
mov
mov
mov
mov
mov
cmp
jge
add
mov
mov
sub
jmp
call
mov
sub
cmpl
jl
mov
add
mov
call
jmp
add
mov
add
andl
jmp
mov
test
je
and
add
mov
mov
mov
call
test
je
mov
add
jmp
xor
jmp
mov
sub
add
mov
and
or
mov
mov
pop
pop
pop
pop
pop
pop
ret
mov
push
mov
push
push
push
push
mov
mov
cmpb
jne
call
test
jne
xor
mov
jmp
xor
push
push
pushl
mov
cmpb
je
push
call
mov
mov
call
test
je
mov
jmp
mov
call
mov
mov
sub
mov
and
sub
cmp
jge
mov
test
je
mov
mov
xchg
call
mov
call
mov
xor
pop
pop
pop
mov
push
cmpb
je
push
call
ret
jmp
jmp
mov
pop
pop
pop
pop
pop
ret
lea
push
test
jle
call
mov
test
jne
mov
call
jmp
xor
mov
pop
ret
push
test
je
call
mov
test
je
mov
call
jmp
xor
mov
pop
ret
mov
test
je
test
je
push
mov
call
pop
or
je
mov
ret
mov
jmp
mov
mov
call
or
jne
ret
mov
jmp
test
je
push
mov
call
pop
or
je
mov
ret
lea
mov
call
ret
push
push
mov
mov
and
cmpl
je
mov
mov
call
test
jne
call
mov
jmp
cmp
ja
xor
mov
mov
xor
mov
mov
call
pop
pop
ret
mov
and
mov
jmp
ret
push
push
push
call
cmpl
pop
pop
pop
jne
ret
xor
jmp
ret
lea
push
mov
call
mov
pop
ret
push
call
mov
call
xor
mov
mov
pop
ret
lea
push
push
mov
mov
mov
cmp
ja
je
sar
js
rep
mov
and
rep
pop
pop
ret
lea
lea
sar
js
std
rep
mov
and
add
add
rep
cld
pop
pop
ret
push
mov
sub
je
dec
sub
jae
mov
call
mov
jmp
xor
jmp
cmp
je
cmp
jne
xor
jmp
mov
test
je
mov
call
mov
pop
ret
lea
mov
call
ret
lea
push
push
mov
xor
mov
cmp
jb
cmp
ja
and
cmp
jne
mov
call
mov
test
jne
mov
call
mov
test
je
mov
call
jmp
cmp
je
mov
call
mov
pop
pop
ret
mov
push
push
push
mov
push
test
je
xor
xor
mov
mov
inc
cmp
je
mov
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
jne
mov
inc
cmp
je
cmp
je
test
je
jmp
test
je
sub
cmp
ja
cmp
ja
lea
add
add
mov
inc
test
jne
dec
je
test
jge
jmp
inc
jmp
neg
jle
js
pop
sub
jmp
inc
mov
inc
jmp
mov
mov
inc
test
je
cmp
jb
sub
sub
cmp
jbe
sub
cmp
ja
add
cmp
ja
shl
add
mov
inc
test
jne
dec
jne
neg
pop
xor
mov
pop
pop
pop
ret
lea
push
push
mov
mov
and
repz
pop
pop
ret
lea
jmp
ret
mov
push
xor
test
jl
je
cmp
jge
mov
and
lea
fldt
fmulp
shr
je
mov
and
je
lea
fldt
fmulp
shr
je
lea
fldt
fmulp
jmp
neg
cmp
jge
mov
and
lea
fldt
fdivrp
shr
je
mov
and
je
lea
fldt
fdivrp
shr
je
lea
fldt
fdivrp
jmp
fstp
fldt
jmp
fstp
fldz
pop
ret
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cli
or
add
add
add
or
add
add
add
push
ret
cmovo
add
add
add
adc
add
add
adcb
add
add
mov
add
add
sub
sbb
add
add
add
add
add
inc
mov
mov
add
adc
add
add
sub
test
add
sub
mov
xor
add
add
leave
sbb
add
cs
add
inc
jbe
imul
cmp
add
mov
mov
inc
add
bound
inc
add
xlat
fadds
nop
lods
outsb
xor
xchg
add
test
in
int3
into
sbb
rorl
mov
push
pop
test
enter
mov
inc
cmp
and
daa
lret
into
pop
inc
test
xchg
clc
js
aas
sbbl
pop
mov
addr16
leave
repnz
bound
and
cld
gs
sahf
mov
sub
inc
aad
iret
decl
js
roll
adc
lds
stos
mov
cmp
or
mov
pop
out
sub
imul
divl
jl
xor
cmp
call
mov
stc
popf
sti
jmp
stos
push
inc
mov
push
sbb
sarb
repnz
test
nop
fildl
daa
movsb
lahf
nop
inc
pop
stos
clc
scas
adc
inc
pop
pushf
mov
pop
pushf
mov
fs
aam
imul
loope
jp
iret
inc
bound
ds
push
cmpsb
scas
mov
pop
or
addl
cmp
xor
in
cmp
sahf
xchg
pop
cmpsb
lock
mov
popa
mov
fsubs
addr16
repz
mov
subb
and
and
outsb
bound
xor
jmp
mov
push
xor
push
call
cmp
jne
push
call
and
cmp
je
cmp
jne
mov
mov
pop
ret
nop
push
mov
add
movzwl
mov
lea
push
push
push
push
push
call
test
jne
xor
push
push
pushl
mov
movl
lea
push
lea
push
push
push
push
mov
push
call
xor
pop
pop
pop
mov
push
mov
push
call
ret
jmp
jmp
mov
and
mov
and
or
mov
mov
pop
ret
add
inc
push
push
inc
push
inc
pop
inc
outsl
jb
popa
outsb
fs
inc
gs
jo
imul
push
dec
popa
jae
push
popa
insb
jne
add
add
fninit
fldcw
ret
mov
push
push
mov
mov
xor
mov
inc
rep
pop
pop
ret
lea
push
mov
mov
call
call
mov
mov
call
pop
ret
mov
push
mov
mov
call
mov
call
pop
ret
nop
add
mov
ret
mov
call
test
jle
call
ret
nop
test
je
mov
mov
call
ret
push
push
push
mov
mov
stos
mov
xor
push
shr
dec
rep
pop
and
rep
mov
mov
mov
test
je
push
mov
test
je
mov
jmp
cmp
je
pop
mov
add
mov
test
je
mov
mov
add
dec
jne
cmp
jne
pop
pop
pop
ret
mov
push
push
mov
mov
mov
mov
mov
test
je
call
mov
test
jne
pop
pop
ret
push
push
mov
mov
test
je
mov
mov
call
test
jne
xor
pop
pop
ret
mov
pop
pop
ret
lea
push
xchg
jmp
mov
mov
test
je
movzwl
push
add
repnz
je
pop
mov
test
jne
pop
ret
pop
add
sub
mov
pop
ret
mov
jmp
mov
cmp
je
mov
test
jne
ret
mov
ret
nop
mov
ret
mov
ret
lea
ret
lea
ret
lea
push
mov
or
je
cmp
jae
push
mov
call
pop
je
mov
pop
jmp
pop
mov
jmp
ret
nop
push
push
push
test
jl
call
xor
lea
mov
mov
mov
movl
mov
mov
pop
pop
pop
ret
jmp
mov
mov
test
je
mov
mov
push
call
pop
call
call
ret
lea
mov
call
ret
mov
push
mov
mov
mov
call
mov
pop
ret
mov
test
jg
ret
push
push
mov
call
pop
pop
ret
nop
cmpb
jbe
push
push
push
push
call
ret
nop
cmpb
je
push
push
push
push
push
push
push
call
add
pop
ret
lea
push
push
push
push
call
add
pop
ret
lea
cmpb
jbe
push
push
jmp
ret
lea
test
je
mov
cmpb
je
cmpb
jne
movsbl
inc
inc
jmp
add
add
ret
mov
cmpb
jbe
push
push
push
call
push
push
push
push
push
call
pop
pop
pop
pop
ret
nop
cmpb
jbe
push
push
push
push
push
call
pop
ret
push
push
cmpb
jbe
push
push
push
push
call
pop
pop
ret
mov
mov
testl
jne
cmpl
mov
mov
je
cld
call
mov
test
je
call
test
je
mov
mov
cmpl
je
call
cmpb
jbe
cmpb
ja
lea
push
push
call
cmp
pop
je
mov
mov
mov
jmp
mov
mov
mov
cmpb
jbe
cmpb
ja
push
lea
push
push
push
call
cmp
pop
pop
pop
je
orl
push
xor
push
push
push
mov
push
push
push
push
mov
push
push
push
push
call
mov
call
pushl
mov
mov
mov
movl
add
call
jmp
jmp
call
mov
mov
mov
mov
jmp
mov
ret
mov
mov
mov
testl
je
mov
movl
push
push
push
push
mov
add
call
call
pop
pop
pop
pop
mov
ret
mov
or
jne
mov
call
pop
push
push
push
push
push
push
push
push
push
push
push
push
jmp
ret
mov
movl
call
mov
mov
mov
mov
andl
cmpl
je
mov
call
call
xor
add
mov
pop
mov
mov
pop
pop
pop
pop
mov
ret
lea
call
mov
mov
mov
mov
call
pop
mov
xor
pop
mov
pop
pop
call
jmp
ret
xor
mov
mov
add
mov
call
ret
ret
mov
push
mov
mov
mov
cmp
jg
je
cmp
jg
je
sub
je
sub
je
dec
je
jmp
add
sub
jb
je
jmp
cmp
jg
je
sub
je
dec
je
dec
je
jmp
sub
je
sub
je
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
and
mov
call
pop
ret
mov
testl
jne
cmpb
ja
lea
push
call
cmp
je
mov
cld
call
mov
push
push
push
push
call
mov
cmpl
mov
mov
je
mov
test
je
mov
call
test
je
mov
call
mov
test
je
call
mov
mov
mov
mov
jmp
xor
ret
lea
xor
lea
mov
mov
mov
movl
mov
mov
ret
lea
xor
mov
test
je
mov
cmp
jne
mov
mov
ret
mov
cmp
je
cmp
jne
mov
mov
ret
push
mov
push
push
push
mov
mov
test
je
mov
mov
xor
push
push
pushl
mov
test
jle
dec
mov
mov
test
je
call
test
jg
xor
pop
pop
pop
mov
jmp
jmp
call
call
call
pop
pop
pop
pop
ret
nop
push
mov
push
push
push
mov
test
je
mov
xor
mov
xor
push
push
pushl
mov
cmp
jle
mov
inc
mov
test
je
call
cmp
jg
xor
pop
pop
pop
mov
jmp
jmp
call
call
call
pop
pop
pop
pop
ret
nop
push
push
push
mov
lea
mov
rep
popl
popl
mov
mov
mov
mov
lea
mov
xor
cmpl
jne
mov
mov
mov
mov
mov
mov
call
mov
inc
mov
dec
pop
mov
mov
je
cmp
jge
call
push
mov
test
je
mov
mov
call
pop
mov
cmp
jl
call
cmpl
jne
movb
fnstcw
mov
dec
jne
call
ret
ret
push
xor
push
push
mov
lea
mov
mov
mov
add
call
add
dec
jne
pop
pop
pop
ret
lea
push
xor
push
push
mov
lea
mov
mov
mov
add
mov
add
dec
jne
pop
pop
pop
ret
push
push
push
mov
mov
mov
mov
mov
cltd
idiv
add
xor
mov
mov
mov
mov
cltd
idiv
mov
dec
test
jne
mov
mov
mov
and
mov
xor
mov
mov
shr
dec
test
jne
pop
pop
pop
ret
mov
xor
xchg
neg
sbb
inc
mov
mov
mov
pushl
pushl
mov
mov
rep
pop
pop
leave
ret
ret
mov
push
cmpb
je
cmpw
jne
cmpl
jbe
mov
call
push
lea
push
push
push
push
call
push
call
push
lea
push
push
push
push
call
push
call
pop
ret
cmpb
jne
push
push
push
push
call
pop
ret
add
incl
add
add
push
push
push
mov
mov
mov
cmpb
jne
cmpl
je
mov
mov
xor
mov
mov
call
cmpl
jne
cmpl
je
call
call
xor
mov
cmpb
jne
cmpl
jne
xor
mov
call
cmpb
jbe
cmpl
je
mov
test
je
call
mov
mov
cmp
je
test
je
push
call
call
cmpb
jne
call
cmpb
je
call
cmpl
jne
cmpl
je
call
mov
push
call
mov
push
mov
mov
mov
rep
pop
jmp
pop
pop
pop
pop
ret
mov
call
ret
nop
popl
jmp
ret
mov
test
je
movl
mov
dec
jl
lock
jne
push
lea
call
pop
ret
nop
push
push
mov
mov
mov
test
je
movl
mov
dec
jl
lock
jne
lea
call
add
dec
jne
pop
pop
ret
nop
test
je
mov
inc
jg
push
push
mov
call
mov
pop
push
mov
call
pop
pop
jmp
lock
xchg
test
je
mov
dec
jl
lock
jne
lea
call
ret
nop
test
je
mov
inc
jle
lock
xchg
test
je
mov
dec
jl
lock
jne
lea
call
ret
lea
test
jle
push
add
and
push
call
pop
movw
add
pop
mov
movl
ret
xor
ret
nop
push
push
push
mov
mov
mov
mov
call
mov
mov
test
je
mov
mov
call
mov
call
mov
pop
pop
pop
ret
mov
push
mov
push
push
push
push
mov
push
push
push
mov
push
call
pop
ret
nop
push
push
push
push
add
push
add
mov
mov
mov
test
jg
mov
call
jmp
lea
cmp
jge
push
lea
mov
mov
call
mov
test
jl
lea
mov
mov
call
jmp
mov
add
mov
mov
call
push
mov
mov
mov
call
mov
test
jge
xor
mov
mov
call
add
pop
pop
pop
pop
ret
push
mov
mov
call
pop
ret
nop
xor
test
je
push
cmp
je
cmp
je
cmp
je
cmp
je
add
jmp
inc
inc
inc
mov
pop
sub
jmp
ret
lea
xor
test
je
push
cmp
je
cmp
je
cmp
je
cmp
je
add
jmp
add
add
add
mov
pop
sub
shr
jmp
ret
lea
push
push
push
mov
xor
repnz
jne
not
pop
add
pop
pop
jmp
ret
xor
test
je
mov
shr
jmp
ret
lea
test
je
mov
ret
test
je
mov
test
je
push
push
push
mov
mov
mov
mov
add
cmp
je
call
mov
mov
mov
add
call
pop
pop
pop
ret
call
mov
mov
jmp
ret
push
push
push
push
push
mov
xor
mov
test
je
cmp
jne
mov
mov
dec
jmp
xor
mov
test
je
add
cmp
jne
xor
dec
jne
test
je
mov
mov
mov
call
mov
pushl
add
dec
jmp
call
push
mov
mov
mov
test
je
mov
add
call
dec
jne
pop
pop
test
jne
test
je
decl
call
pop
pop
pop
pop
pop
lea
jmp
ret
mov
push
push
push
mov
mov
cmp
je
test
je
test
je
mov
mov
sub
ja
add
push
shr
je
mov
mov
cmp
jne
dec
je
mov
mov
cmp
jne
add
add
dec
jne
jmp
add
add
pop
and
je
mov
mov
cmp
jne
dec
je
cmp
jne
dec
je
and
and
cmp
jne
add
jmp
mov
sub
jmp
mov
sub
jmp
pop
cmp
jne
cmp
jne
shr
shr
cmp
jne
cmp
pop
pop
pop
ret
mov
test
je
mov
inc
jle
lock
ret
nop
test
je
ret
add
ret
mov
test
je
mov
dec
je
push
mov
mov
call
mov
mov
mov
push
mov
call
pop
mov
dec
jl
lock
jne
lea
call
mov
pop
mov
ret
lea
jmp
ret
mov
push
test
je
mov
test
je
dec
jl
cmp
jge
sub
test
jl
cmp
jg
add
mov
call
jmp
xor
jmp
mov
jmp
mov
call
pop
ret
ret
push
push
push
mov
mov
xor
test
jle
mov
test
je
cmpl
jne
sub
add
push
mov
call
pop
add
mov
mov
movb
jmp
mov
call
mov
mov
test
je
mov
mov
cmp
jl
mov
call
mov
call
mov
pop
pop
pop
ret
mov
mov
test
je
movl
push
push
call
pop
ret
lea
push
push
mov
mov
mov
test
je
movl
push
call
add
dec
jne
pop
pop
ret
lea
xor
push
mov
push
push
mov
lea
mov
mov
mov
add
mov
mov
call
add
dec
jg
mov
pop
pop
pop
ret
lea
cmpl
je
call
ret
mov
call
ret
cmp
je
push
push
push
push
mov
mov
mov
xor
mov
mov
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
jmp
cmp
mov
jg
call
jmp
mov
call
jmp
cmp
mov
jg
call
jmp
mov
call
jmp
mov
add
call
dec
jg
jmp
push
mov
mov
mov
add
mov
mov
call
dec
jg
pop
jmp
push
mov
mov
add
mov
call
dec
jg
pop
jmp
mov
add
call
dec
jg
jmp
mov
mov
add
call
dec
jg
jmp
pop
pop
pop
pop
mov
jmp
pop
pop
pop
pop
ret
mov
mov
jmp
ret
push
push
mov
mull
mov
mov
mull
add
mov
mull
add
pop
pop
ret
ret
mov
test
je
movl
lock
jne
push
mov
xor
mov
mov
test
je
mov
test
je
mov
call
sub
call
pop
ret
mov
push
push
add
mov
cmpl
jne
push
lea
push
mov
push
call
mov
mov
call
mov
mov
test
jne
mov
mov
mov
add
pop
pop
ret
nop
mov
test
je
cmp
je
cmp
je
cmp
jne
mov
call
ret
mov
test
jne
ret
jmp
push
call
mov
test
je
cmp
jne
ret
push
mov
add
push
push
push
mov
mov
mov
mov
push
call
mov
test
je
push
push
call
mov
test
je
push
lea
push
mov
push
call
test
je
mov
push
lea
push
mov
push
call
jmp
mov
cmpb
jne
mov
cmpb
jne
mov
add
call
mov
cmpb
je
lea
call
mov
cmpb
je
jmp
mov
add
mov
sub
lea
push
mov
push
lea
push
call
jmp
lea
call
mov
mov
sub
mov
add
inc
cmp
jg
inc
push
push
lea
add
push
call
lea
push
lea
push
call
mov
cmp
je
push
call
lea
push
call
lea
add
inc
cmp
jg
movb
mov
sub
dec
push
lea
push
lea
add
inc
push
call
lea
push
call
inc
add
mov
cmpb
jne
mov
push
lea
push
mov
push
call
mov
pop
pop
pop
mov
pop
ret
imul
gs
xor
cs
insb
add
add
inc
gs
outsl
outsb
addr16
popa
je
dec
popa
insl
gs
add
add
push
mov
add
push
push
mov
push
lea
push
push
call
movb
lea
push
push
push
push
push
call
test
je
lea
push
push
push
push
push
call
test
je
lea
push
push
push
push
push
call
test
jne
xor
push
push
pushl
mov
movl
lea
mov
call
lea
push
lea
push
push
push
lea
push
mov
push
call
test
je
lea
push
lea
push
push
push
push
mov
push
call
test
je
movb
movb
xor
pop
pop
pop
mov
push
mov
push
call
ret
jmp
jmp
push
mov
push
lea
push
call
push
lea
push
push
call
push
call
xor
cmpb
je
cmpb
jne
cmpb
je
lea
push
call
mov
lea
add
jmp
dec
cmpb
je
lea
cmp
jne
lea
cmp
je
inc
cmpb
je
mov
sub
mov
sub
push
lea
push
push
call
push
push
lea
push
call
mov
test
jne
cmpb
je
lea
mov
sub
mov
sub
push
lea
push
push
call
push
push
lea
push
call
mov
test
jne
movb
lea
mov
sub
mov
sub
push
lea
push
push
call
push
push
lea
push
call
mov
mov
pop
pop
mov
pop
ret
add
push
outsl
data16
popa
jb
pop
inc
outsl
jb
popa
outsb
fs
dec
outsl
arpl
gs
add
add
data16
popa
jb
pop
inc
outsl
jb
popa
outsb
fs
inc
gs
jo
imul
jae
add
add
push
mov
add
push
push
push
mov
mov
mov
cmpl
je
xor
push
push
pushl
mov
mov
mov
call
xor
pop
pop
pop
mov
jmp
jmp
call
mov
mov
mov
cmpl
jne
pop
pop
pop
pop
pop
pop
ret
mov
mov
mov
mov
ret
mov
push
mov
push
mov
xor
push
push
pushl
mov
mov
mov
call
xor
pop
pop
pop
mov
push
mov
cmp
jne
mov
mov
mov
jmp
mov
test
je
mov
cmp
jne
mov
mov
mov
jmp
mov
test
jne
ret
jmp
jmp
pop
pop
ret
mov
mov
test
je
movl
push
push
mov
call
pop
ret
lea
push
push
add
mov
mov
test
je
cmpl
jge
push
lea
push
mov
push
mov
mov
call
push
call
mov
mov
mov
call
jmp
mov
mov
call
add
pop
pop
ret
mov
push
mov
add
push
xor
mov
xor
push
push
pushl
mov
push
lea
push
push
push
call
lea
lea
mov
call
mov
lea
call
mov
cmpl
je
xor
xor
pop
pop
pop
mov
push
lea
call
ret
jmp
jmp
mov
pop
mov
pop
ret
push
mov
xor
push
push
pushl
mov
incl
jne
mov
call
mov
call
mov
call
call
xor
pop
pop
pop
mov
push
ret
jmp
jmp
pop
ret
nop
subl
jae
movb
movl
movl
movb
movl
call
test
je
call
call
movw
movw
movw
call
mov
call
mov
call
and
cmp
je
call
and
cmp
jbe
movl
jmp
call
call
mov
jmp
call
call
mov
call
mov
ret
nop
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
push
push
call
ret
lea
mov
ret
mov
push
call
mov
test
je
cmpl
jne
mov
call
mov
call
test
jne
mov
call
jmp
push
mov
push
call
pop
ret
mov
test
je
call
mov
call
mov
push
call
mov
ret
lea
mov
test
je
cmpl
je
mov
push
call
test
je
push
call
ret
mov
test
je
call
cmpl
je
mov
push
call
ret
nop
mov
mov
test
jne
mov
mov
ret
call
mov
push
call
test
je
ret
mov
ret
push
call
test
je
ret
mov
call
ret
nop
mov
cmpl
jne
push
push
movb
mov
mov
mov
movl
movl
call
pop
pop
pushl
mov
call
ret
mov
push
mov
xor
push
push
pushl
mov
incl
xor
pop
pop
pop
mov
push
ret
jmp
jmp
pop
ret
mov
subl
ret
push
mov
xor
push
push
pushl
mov
incl
xor
pop
pop
pop
mov
push
ret
jmp
jmp
pop
ret
mov
subl
ret
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
push
mov
xor
push
push
pushl
mov
incl
xor
pop
pop
pop
mov
push
ret
jmp
jmp
pop
ret
mov
subl
ret
pusha
mov
add
incl
add
inc
add
incl
add
inc
add
incl
add
inc
add
incl
add
inc
add
incl
add
inc
add
incl
add
inc
add
incl
add
inc
add
incl
add
inc
add
incl
add
inc
add
incl
add
inc
add
incl
add
inc
add
incl
add
inc
add
incl
add
inc
add
incl
add
inc
add
incl
add
inc
add
incl
add
inc
add
incl
add
inc
add
incl
add
inc
add
incl
add
inc
add
incl
add
inc
add
incl
add
inc
add
incl
add
inc
add
incl
add
inc
add
incl
add
inc
add
incl
add
inc
add
incl
add
inc
add
incl
add
inc
add
incl
add
inc
add
incl
add
inc
add
incl
add
inc
add
incl
add
inc
add
incl
add
inc
add
incl
add
inc
add
incl
add
inc
add
incl
add
inc
add
incl
add
inc
add
incl
add
inc
add
incl
add
inc
add
incl
add
inc
add
incl
add
inc
add
incl
add
inc
add
incl
add
inc
add
incl
add
inc
add
incl
add
inc
add
incl
add
inc
add
incl
add
inc
add
incl
add
inc
add
incl
add
inc
add
incl
add
inc
add
incl
add
inc
add
incl
add
inc
add
incl
add
inc
add
incl
add
inc
add
incl
add
inc
add
incl
add
inc
add
incl
add
inc
add
incl
add
inc
add
incl
add
inc
add
incl
add
inc
add
incl
add
inc
add
incl
add
inc
add
incl
add
inc
add
incl
add
inc
add
incl
add
inc
add
mov
add
mov
add
mov
add
mov
add
inc
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
inc
add
mov
add
mov
add
mov
add
mov
add
mov
xor
push
push
pushl
mov
incl
xor
pop
pop
pop
mov
push
ret
jmp
jmp
pop
ret
mov
subl
ret
pop
dec
inc
add
inc
add
inc
add
add
or
inc
add
add
inc
add
add
inc
add
add
sub
add
inc
add
inc
add
add
add
add
add
add
adc
add
add
or
arpl
je
outsl
outsb
rorb
rorb
adc
add
or
inc
add
add
inc
add
add
inc
add
add
sub
add
inc
add
inc
add
inc
dec
gs
jo
js
gs
imul
add
inc
add
add
add
add
add
inc
add
add
inc
add
add
sub
add
inc
add
inc
add
dec
gs
outsl
jb
lea
js
inc
add
inc
add
add
add
inc
add
add
inc
add
add
inc
add
add
sub
add
inc
add
inc
add
inc
dec
outsb
dec
jne
inc
jb
outsl
jb
dec
inc
add
dec
inc
add
add
add
inc
add
add
inc
add
add
inc
add
add
sub
add
inc
add
inc
add
inc
inc
js
gs
popa
insb
mov
sub
add
dec
inc
add
add
add
inc
add
inc
add
add
inc
add
add
sub
add
inc
add
inc
add
inc
inc
js
gs
popa
insb
inc
js
gs
imul
add
add
add
inc
add
inc
add
add
inc
add
add
sub
add
inc
add
inc
add
inc
dec
outsb
je
jb
outsl
jb
shl
inc
add
dec
inc
add
add
add
inc
add
inc
add
add
inc
add
add
sub
add
inc
add
inc
add
inc
inc
imul
outsl
nop
cmp
add
dec
inc
add
add
add
inc
add
inc
add
add
inc
add
add
sub
add
inc
add
inc
add
inc
push
popa
outsb
addr16
jb
outsl
jb
dec
inc
add
add
add
inc
add
inc
add
add
inc
add
add
sub
add
inc
add
inc
add
jbe
jb
insb
outsl
ja
inc
add
dec
inc
add
dec
inc
add
add
add
inc
add
inc
add
add
inc
add
add
sub
add
inc
add
inc
add
inc
dec
popa
je
inc
jb
outsl
jb
inc
dec
inc
add
add
add
add
sub
inc
add
add
inc
add
add
sub
add
inc
add
inc
add
inc
dec
outsb
jbe
insb
imul
add
add
mov
sub
inc
add
add
inc
add
add
sub
add
inc
add
inc
add
inc
pop
gs
inc
imul
inc
add
dec
inc
add
add
add
sub
inc
add
add
inc
add
add
sub
add
inc
add
inc
add
inc
dec
jbe
jb
insb
outsl
ja
rorb
dec
push
inc
add
add
add
sub
inc
add
add
inc
add
add
sub
add
inc
add
inc
add
inc
push
outsb
fs
insb
outsl
ja
movsb
push
inc
add
add
je
inc
add
add
inc
add
add
inc
add
add
sub
add
inc
add
inc
add
inc
dec
outsb
jbe
insb
imul
jb
push
inc
add
push
inc
add
add
or
inc
add
add
inc
add
add
inc
add
add
sub
add
inc
add
inc
add
insb
imul
add
add
add
add
or
inc
add
add
inc
add
add
inc
add
add
sub
add
inc
add
inc
add
jbe
jb
inc
jb
outsl
jb
sarb
add
mov
add
add
inc
add
inc
add
add
inc
add
add
sub
add
inc
add
inc
add
inc
inc
arpl
jae
push
imul
outsb
lea
sbb
add
push
inc
add
add
add
inc
add
inc
add
add
inc
add
add
sub
add
inc
add
inc
add
inc
push
jb
jbe
insb
gs
jo
inc
add
inc
add
add
add
inc
add
inc
add
add
inc
add
add
sub
add
inc
add
inc
add
inc
push
je
arpl
jbe
jb
insb
outsl
ja
int3
push
inc
add
push
inc
add
add
add
inc
add
inc
add
add
inc
add
add
sub
add
inc
add
inc
add
inc
inc
outsl
outsb
je
outsl
insb
inc
mov
and
inc
add
inc
add
add
or
inc
add
add
inc
add
add
inc
add
add
sub
add
inc
add
inc
add
imul
outsl
jb
rolb
add
adcb
or
add
or
inc
add
add
inc
add
add
inc
add
add
sub
add
inc
add
inc
add
inc
inc
jae
gs
imul
gs
loopne
inc
add
push
inc
add
add
or
inc
add
add
inc
add
add
inc
add
add
sub
add
inc
add
inc
add
inc
inc
bound
jb
arpl
jb
jb
cmp
inc
add
inc
add
add
or
inc
add
add
inc
add
add
inc
add
add
sub
add
inc
add
inc
add
inc
dec
outsb
je
inc
popa
jae
inc
jb
outsl
jb
cwtl
push
inc
add
add
add
inc
add
add
inc
add
add
inc
add
add
sub
add
inc
add
inc
add
inc
push
popa
data16
insb
inc
js
gs
imul
add
add
aaa
xor
add
add
adc
dec
add
add
adc
or
jae
je
insb
jae
rcl
inc
add
add
cmp
add
add
adc
dec
add
add
adc
or
jae
je
insb
jae
sar
incl
add
add
add
push
mov
push
mov
mov
shr
div
mov
mov
mov
pop
pop
ret
push
mov
mov
mov
mov
call
call
pop
ret
push
push
push
mov
mov
mov
push
push
mov
mov
mov
call
call
pop
pop
pop
ret
mov
or
jne
or
jns
neg
call
mov
inc
dec
mov
ret
mov
push
push
xor
div
dec
add
cmp
jb
add
mov
or
jne
pop
pop
sub
sub
jbe
add
mov
sub
jmp
mov
dec
jne
mov
ret
or
jne
mov
testl
je
pushl
pushl
mov
negl
adcl
negl
call
movb
dec
inc
add
ret
push
sub
fnstcw
fnstcw
orw
fldcw
mov
fld1
testl
je
pushl
pushl
andl
push
push
fildll
fildll
fadd
faddp
add
jmp
fildll
filds
fld
dec
fprem
fistps
fdivr
mov
add
cmp
jb
add
mov
fld
fcom
fstsw
sahf
jae
fldcw
add
ffree
ffree
ffree
ffree
pop
sub
sub
jbe
sub
mov
add
jmp
mov
dec
jne
mov
ret
nop
push
push
mov
mov
call
cmpl
je
mov
pop
pop
ret
mov
incl
add
add
add
add
incl
add
add
push
push
push
mov
mov
mov
call
mov
mov
call
mov
test
jle
mov
test
je
mov
mov
call
test
je
mov
mov
call
cmp
jne
dec
dec
test
jg
mov
pop
pop
pop
pop
ret
lea
push
push
push
mov
mov
mov
mov
call
mov
push
lea
mov
mov
call
pop
pop
pop
ret
add
add
incl
add
add
add
in
add
push
mov
test
jne
xor
lea
push
lea
push
lea
push
lea
push
push
call
mov
mov
imull
xor
mov
mov
mov
xor
push
push
mov
mov
call
mov
mov
mov
mov
xor
push
push
mov
mov
call
mov
mov
mov
mov
pop
mov
pop
ret
nop
mov
mov
mov
xor
repnz
mov
sub
mov
ret
nop
push
mov
xchg
call
mov
pop
ret
lea
push
push
push
mov
mov
mov
xor
test
je
repnz
jne
inc
sub
mov
mov
mov
mov
shr
rep
mov
and
rep
stos
mov
pop
pop
pop
ret
lea
push
push
push
mov
mov
mov
xor
or
je
repnz
sub
mov
mov
xor
repz
je
mov
cmp
jb
cmp
ja
sub
mov
cmp
jb
cmp
ja
sub
sub
je
pop
pop
pop
ret
mov
jmp
test
jne
xor
ret
inc
mov
cmp
jne
ret
lea
push
push
push
add
mov
mov
mov
cmp
jbe
mov
mov
dec
mov
call
cmp
jne
dec
mov
mov
mov
call
movb
mov
mov
movb
lea
mov
xor
call
add
pop
pop
pop
ret
push
mov
cmpl
je
mov
mov
call
pop
ret
mov
call
pop
ret
lea
push
mov
mov
call
pop
ret
push
mov
add
push
xor
mov
push
push
push
mov
mov
xor
mov
add
mov
xor
mov
mov
mov
or
je
cmp
je
lods
cmp
je
stos
dec
jne
mov
sub
jmp
cmp
je
lods
cmp
je
lea
mov
mov
cmp
jne
cmp
je
lods
call
cmp
jne
mov
cmp
je
lods
jmp
mov
mov
cmp
jne
cmp
je
lods
call
mov
mov
push
push
call
pop
mov
sub
jae
xor
cmpb
jne
sub
jae
add
xor
rep
xchg
sub
jae
add
xor
mov
rep
xchg
sub
jae
add
xor
rep
cmpl
je
push
lea
call
pop
pop
mov
jmp
xor
cmp
je
cmp
jb
cmp
ja
imul
sub
movzbl
add
cmp
je
lods
jmp
pop
jmp
mov
cmp
jg
incl
mov
cmpb
mov
je
xor
cmp
je
lods
ret
and
mov
mov
mov
cmp
jg
incl
mov
lea
mov
movzbl
jmp
mov
pop
inc
add
pop
inc
add
pop
inc
add
pop
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
pop
inc
add
inc
add
pop
inc
add
call
mov
mov
sub
mov
call
lea
mov
cmp
jbe
xor
mov
sub
je
mov
cmp
je
mov
cmp
je
jmp
lea
mov
mov
cmp
jbe
xor
sub
je
mov
cmp
je
mov
cmp
je
jmp
cmp
jne
mov
ret
cmp
jne
cmpw
jbe
mov
lea
call
mov
jmp
xor
ret
cmp
jne
mov
lods
movzbl
jmp
mov
jmp
mov
add
cmp
jne
mov
lea
push
mov
call
pop
mov
mov
jmp
cmp
jne
mov
or
je
mov
cmp
ja
ret
mov
ret
cmp
jne
mov
push
mov
xor
mov
jecxz
repnz
jne
dec
mov
sub
pop
ret
cmp
jne
mov
mov
lea
jmp
mov
jmp
mov
mov
mov
cmp
je
mov
cmp
je
mov
cmp
je
mov
cmp
je
cmp
jne
mov
mov
mov
cmp
jbe
mov
cmp
jne
movzbl
jmp
mov
mov
cmp
jbe
mov
push
push
push
lea
mov
movzbl
mov
call
mov
lea
ret
push
push
lea
mov
call
pop
pop
ret
call
pop
pop
pop
pop
mov
pop
ret
mov
push
mov
push
push
push
mov
mov
mov
test
je
test
je
mov
call
push
mov
push
mov
push
mov
mov
mov
call
movb
mov
jmp
xor
pop
pop
pop
pop
ret
push
mov
push
mov
xchg
xchg
call
pop
ret
nop
push
mov
add
push
add
push
push
mov
mov
mov
mov
mov
call
cmp
jge
mov
call
push
mov
push
mov
push
mov
lea
mov
call
jmp
mov
call
mov
mov
mov
dec
cmp
jl
jmp
add
mov
call
mov
mov
call
mov
call
push
mov
push
mov
push
mov
mov
dec
mov
call
mov
dec
cmp
jge
mov
xchg
call
jmp
lea
mov
xchg
call
pop
pop
mov
pop
ret
lea
push
xor
stos
or
jne
xor
jmp
or
jge
mov
neg
jmp
or
je
mov
stos
xchg
push
mov
xor
divl
add
mov
inc
dec
or
jne
or
jg
dec
mov
stos
cmp
jne
pop
pop
ret
nop
push
mov
add
push
push
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
mov
cmp
jne
mov
cmp
jge
mov
cmp
jle
mov
mov
push
mov
cmpb
jb
mov
push
lea
call
mov
movzwl
sub
cmp
jae
mov
call
lea
add
mov
rep
jmp
lea
movzbl
cmp
je
cmp
ja
movswl
cmp
jle
mov
lea
add
mov
add
call
mov
sub
pop
pop
pop
jmp
mov
inc
add
pop
inc
add
add
dec
inc
dec
inc
dec
lods
or
jne
mov
dec
ret
cmpb
je
mov
stos
ret
call
movswl
xor
cmp
jg
cmp
jl
or
jg
mov
stos
cmpb
je
mov
stos
neg
mov
rep
jmp
mov
inc
lods
or
je
stos
loop
lods
or
je
mov
mov
stos
lods
or
je
stos
jmp
mov
rep
or
je
xor
jmp
ret
call
call
mov
stos
mov
dec
call
stos
loop
mov
mov
cmp
jbe
xor
mov
mov
movswl
dec
call
ret
call
mov
cmp
jb
mov
movswl
or
jg
mov
stos
jmp
xor
cmpb
je
mov
dec
mov
div
mov
inc
call
stos
dec
je
dec
jne
mov
test
je
stos
mov
jmp
or
je
mov
test
je
stos
jecxz
mov
stos
dec
je
inc
jne
call
stos
dec
jne
ret
xor
mov
mov
cmpb
je
mov
mov
cmp
jbe
mov
add
lea
add
mov
mov
cmp
je
push
push
cmp
je
cmp
je
stos
jmp
call
jmp
call
pop
pop
inc
loop
ret
push
mov
test
je
mov
rep
pop
ret
and
inc
inc
inc
sub
inc
inc
and
sub
sub
and
inc
sub
sub
and
inc
inc
and
sub
and
sub
and
inc
sub
sub
and
inc
inc
sub
sub
sub
and
inc
and
sub
sub
sub
and
sub
sub
and
mov
pop
ret
nop
push
mov
add
push
push
push
mov
mov
movl
cmp
je
call
jmp
call
jmp
mov
mov
and
je
cmp
jne
testw
je
cmpl
jne
cmpl
je
inc
xor
movb
jmp
fldt
sub
imul
sar
inc
mov
mov
sub
fabs
push
mov
call
pop
frndint
mov
fldt
fcomp
fstsw
fwait
testw
je
fidivl
incl
fbstp
lea
mov
fwait
mov
mov
shr
and
add
stos
dec
jne
xor
stos
mov
add
jns
xor
jmp
cmp
jb
mov
cmp
jae
cmpb
jb
movb
dec
js
incb
cmpb
ja
jmp
movw
incl
jmp
mov
movb
dec
js
cmpb
je
mov
mov
shr
mov
mov
ret
xor
jmp
or
add
add
add
add
add
daa
add
mov
mov
mov
or
je
or
jns
neg
neg
sbb
xor
mov
or
jge
xor
cmp
jl
mov
inc
sub
sbb
jae
dec
add
adc
mov
mov
fildll
mov
mov
sub
je
mov
fidivl
fbstp
lea
fwait
or
jne
mov
mov
mov
shr
jne
mov
and
jne
dec
jne
jmp
mov
add
stos
mov
mov
mov
shr
add
stos
mov
and
add
stos
dec
jne
mov
lea
sub
movb
dec
cmpb
je
mov
shr
jmp
xor
xor
mov
mov
mov
ret
pop
pop
pop
mov
pop
ret
push
mov
push
xor
mov
fldl
fmuls
sub
fistpll
fwait
pop
pop
or
jns
neg
neg
sbb
divl
neg
jmp
divl
add
mov
mov
pop
pop
ret
push
mov
add
push
mov
movb
cmp
jae
cmp
jae
cmp
jae
cmp
jae
movzwl
imul
movzwl
imul
add
movzwl
imul
add
movzwl
add
mov
fildl
fdivs
mov
fstpl
fwait
movb
mov
pop
pop
pop
pop
ret
add
mov
add
push
push
push
mov
mov
mov
mov
push
lea
push
mov
mov
mov
call
test
jne
mov
call
fldl
pop
pop
pop
pop
pop
pop
ret
lea
push
mov
add
push
push
push
mov
mov
mov
lea
push
pushl
pushl
lea
call
mov
lea
mov
call
push
mov
movzwl
mov
call
mov
push
mov
movzwl
mov
call
pop
pop
pop
mov
pop
ret
push
push
mov
movzwl
and
test
jne
movzwl
mov
mov
xor
div
test
jne
mov
mov
xor
div
test
je
xor
pop
pop
ret
mov
pop
pop
ret
lea
push
mov
add
push
push
push
mov
mov
mov
movb
mov
call
and
lea
lea
cmpw
jb
cmpw
ja
cmp
jb
cmp
ja
cmp
jb
movzwl
cmp
ja
movzwl
dec
test
jle
mov
add
inc
dec
jne
movzwl
dec
mov
mov
cltd
idiv
imul
mov
test
jns
add
sar
add
sub
mov
mov
cltd
idiv
add
movzwl
add
sub
mov
fildl
mov
fstpl
fwait
movb
mov
pop
pop
pop
pop
pop
pop
ret
push
push
push
add
mov
mov
mov
push
mov
mov
mov
call
test
jne
mov
call
fldl
pop
pop
pop
pop
pop
ret
nop
push
mov
add
push
push
mov
mov
mov
mov
pushl
pushl
lea
call
mov
test
jg
mov
movw
mov
movw
mov
movw
movw
xor
jmp
mov
mov
cltd
idiv
inc
mov
dec
mov
cmp
jl
sub
add
cmp
jge
lea
push
lea
mov
xchg
call
cmpw
jne
decw
addw
imul
add
lea
push
lea
movzwl
mov
call
mov
shl
add
lea
push
lea
movzwl
mov
call
cmpw
jne
decw
addw
add
mov
call
mov
xor
mov
lea
lea
mov
movzwl
mov
mov
mov
cmp
jb
mov
sub
inc
jmp
mov
mov
mov
mov
mov
inc
mov
mov
mov
pop
pop
mov
pop
ret
lea
push
mov
push
push
mov
pushl
pushl
lea
push
mov
call
pop
pop
pop
ret
mov
push
mov
add
pushl
pushl
lea
call
mov
mov
cltd
idiv
mov
inc
pop
pop
pop
ret
add
lea
push
call
mov
mov
mov
call
fstpl
fwait
mov
push
mov
mov
mov
call
faddl
fstpl
fldl
add
ret
nop
push
mov
push
mov
mov
sub
cmp
jge
mov
test
je
mov
mov
mov
lea
mov
call
mov
add
pop
pop
ret
mov
push
mov
push
mov
mov
push
mov
call
mov
mov
call
pop
pop
pop
ret
mov
push
mov
add
push
push
mov
mov
mov
push
push
mov
movb
mov
movb
lea
push
push
mov
lea
mov
call
mov
lea
call
pop
pop
pop
mov
pop
ret
lea
push
mov
push
mov
add
mov
jmp
incl
mov
mov
mov
cmp
je
mov
sub
inc
mov
mov
pop
pop
ret
mov
push
mov
mov
cmpb
jne
mov
mov
pushl
pushl
mov
lea
mov
lea
mov
add
call
mov
movb
pop
ret
push
mov
mov
cmpb
jne
mov
mov
pushl
pushl
mov
add
push
mov
lea
mov
lea
mov
add
call
mov
movb
pop
ret
nop
push
mov
add
push
push
xor
mov
mov
mov
mov
xor
push
push
pushl
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
call
push
lea
push
mov
call
push
lea
push
push
call
push
call
test
je
mov
lea
mov
call
dec
jne
mov
sub
je
sub
jne
push
mov
mov
call
mov
mov
mov
call
jmp
cmpl
jne
mov
call
mov
mov
call
cmp
jne
mov
mov
call
mov
lea
add
dec
lea
mov
call
mov
mov
call
mov
mov
mov
call
xor
pop
pop
pop
mov
push
lea
call
lea
call
ret
jmp
jmp
pop
pop
mov
pop
ret
add
incl
add
add
add
push
mov
add
push
push
xor
mov
mov
mov
xor
push
push
pushl
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jg
lea
mov
call
jmp
lea
mov
call
push
lea
push
mov
call
push
lea
push
push
call
push
call
test
je
mov
lea
mov
call
dec
jne
mov
cmpb
jne
push
mov
call
mov
dec
mov
mov
call
xor
pop
pop
pop
mov
push
lea
call
ret
jmp
jmp
pop
pop
mov
pop
ret
add
incl
add
add
add
incl
add
jns
jns
add
add
push
mov
add
push
push
xor
mov
mov
mov
xor
push
push
pushl
mov
cmpl
je
mov
cmpl
jge
mov
incl
mov
movb
movb
movb
jmp
mov
mov
and
bt
jae
mov
push
mov
call
mov
mov
call
pop
mov
call
mov
mov
jmp
mov
call
mov
mov
mov
add
sub
jae
sub
mov
add
sub
jae
cmp
jne
cmp
jne
mov
mov
and
add
cmp
ja
mov
jmp
sldt
add
sldt
add
add
add
add
add
add
push
add
add
add
or
or
add
add
add
add
add
add
add
or
add
add
add
adc
add
insb
inc
add
inc
add
inc
add
insl
inc
add
insl
inc
add
outsb
inc
add
outsl
inc
add
inc
add
add
jno
add
inc
add
inc
add
mov
lcall
call
pop
cmpl
jg
mov
push
movzwl
mov
xor
div
mov
mov
call
pop
jmp
mov
push
movzwl
mov
call
pop
jmp
push
call
pop
push
call
pop
mov
push
push
lea
mov
call
pop
mov
call
pop
jmp
push
call
pop
push
call
pop
mov
push
push
lea
mov
call
pop
mov
call
pop
jmp
push
call
pop
push
call
pop
mov
dec
sub
jb
je
jmp
mov
push
movzwl
mov
call
pop
jmp
mov
push
movzwl
mov
call
pop
jmp
mov
push
movzwl
mov
call
pop
jmp
push
call
pop
mov
dec
sub
jb
je
dec
je
dec
je
jmp
push
call
pop
mov
push
movzwl
mov
call
pop
jmp
mov
push
mov
pushl
pushl
call
movzwl
mov
call
pop
jmp
mov
push
mov
pushl
pushl
call
movzwl
mov
call
pop
jmp
mov
push
mov
call
pop
jmp
mov
push
mov
call
pop
jmp
push
call
pop
push
call
pop
movb
mov
jmp
and
bt
jae
mov
call
mov
jmp
xor
mov
cmp
jg
je
sub
je
sub
je
sub
je
jmp
sub
je
sub
je
jmp
cmpb
jne
mov
mov
mov
call
test
je
mov
mov
mov
call
test
je
mov
mov
mov
call
test
jne
movb
jmp
mov
xor
mov
inc
mov
test
jne
mov
cmpb
je
test
jne
mov
jmp
cmp
jbe
sub
cmpl
jle
movl
mov
push
movzwl
mov
call
pop
jmp
push
call
pop
push
call
pop
cmpl
jle
movl
mov
push
movzwl
mov
call
pop
jmp
push
call
pop
push
call
pop
cmpl
jle
movl
mov
push
movzwl
mov
call
pop
jmp
push
call
pop
cmpl
jne
mov
push
mov
call
pop
jmp
mov
push
mov
call
pop
jmp
push
call
pop
push
call
pop
cmpl
jle
movl
mov
push
movzwl
mov
call
pop
jmp
push
call
pop
mov
dec
mov
mov
mov
call
test
jne
cmpw
jb
add
mov
push
mov
mov
call
pop
addl
movb
jmp
mov
mov
mov
call
test
jne
cmpw
jb
add
mov
push
mov
mov
call
pop
addl
movb
jmp
mov
mov
mov
call
test
jne
cmpw
jae
mov
push
mov
call
pop
jmp
mov
push
mov
call
pop
addl
movb
jmp
mov
mov
mov
call
test
jne
push
call
pop
mov
push
mov
pushl
pushl
call
movzwl
mov
call
pop
addl
jmp
mov
mov
mov
call
test
jne
push
call
pop
mov
push
mov
pushl
pushl
call
movzwl
mov
call
pop
addl
jmp
mov
push
lea
mov
call
pop
jmp
push
call
pop
mov
push
mov
call
pop
push
call
pop
cmpw
jne
cmpw
jne
cmpw
je
mov
push
mov
mov
call
pop
mov
push
mov
call
pop
jmp
cmpb
je
mov
push
mov
mov
call
pop
jmp
cmpb
je
mov
push
mov
mov
call
pop
jmp
mov
jmp
and
bt
jae
mov
call
mov
jmp
incl
mov
mov
test
je
cmp
jne
mov
push
mov
sub
mov
call
pop
mov
cmpb
je
incl
jmp
mov
push
lea
mov
call
pop
mov
mov
test
jne
mov
decl
xor
pop
pop
pop
mov
push
lea
mov
call
ret
jmp
jmp
pop
pop
mov
pop
ret
add
inc
dec
das
push
dec
add
add
push
add
push
dec
add
add
inc
inc
inc
inc
add
add
inc
inc
inc
add
add
add
in
add
push
push
mov
mov
xor
mov
xor
mov
test
je
push
mov
call
pop
jmp
push
mov
call
pop
lea
mov
mov
call
pop
pop
mov
pop
ret
add
add
add
push
mov
pushl
pushl
xor
call
pop
ret
push
mov
add
push
push
mov
mov
push
lea
push
push
push
call
test
jle
mov
dec
lea
mov
call
jmp
mov
mov
call
pop
pop
mov
pop
ret
mov
push
push
push
push
mov
mov
mov
push
lea
push
push
push
call
test
jle
mov
jmp
mov
pop
pop
pop
pop
ret
push
mov
push
push
push
push
mov
mov
mov
mov
push
mov
mov
xor
mov
call
cmpl
jne
mov
mov
mov
call
pop
pop
pop
pop
pop
ret
nop
push
mov
xor
push
push
push
push
push
push
push
push
push
xor
push
push
pushl
mov
call
mov
mov
mov
mov
push
push
lea
push
mov
mov
dec
lea
dec
call
pop
mov
mov
call
push
push
lea
push
mov
mov
dec
lea
dec
call
pop
mov
mov
call
inc
add
add
cmp
jne
mov
mov
mov
lea
mov
cltd
idiv
mov
push
push
lea
push
mov
mov
dec
mov
add
call
pop
mov
mov
call
push
push
lea
push
mov
mov
dec
mov
add
call
pop
mov
mov
call
inc
add
add
cmp
jne
xor
pop
pop
pop
mov
push
lea
mov
call
ret
jmp
jmp
pop
pop
pop
mov
pop
ret
lea
push
mov
push
push
xor
mov
jmp
cmp
je
inc
cmpl
jne
lea
mov
call
mov
mov
pop
pop
pop
ret
mov
push
mov
push
push
push
xor
push
push
pushl
mov
xor
mov
jmp
cmp
je
inc
cmpl
jne
lea
mov
call
mov
xor
call
mov
mov
xor
pop
pop
pop
mov
push
lea
call
ret
jmp
jmp
mov
pop
pop
pop
pop
ret
lea
push
mov
push
push
xor
push
push
pushl
mov
lea
push
call
mov
mov
call
mov
mov
call
mov
mov
add
sub
jae
push
push
call
push
push
call
mov
mov
movl
add
dec
jne
push
push
call
push
push
call
xor
pop
pop
pop
mov
push
lea
call
ret
jmp
jmp
pop
pop
pop
ret
add
incl
add
add
add
add
in
xor
push
push
push
push
push
push
push
push
mov
mov
xor
push
push
pushl
mov
mov
mov
call
lea
push
call
mov
mov
call
mov
mov
call
add
sub
jb
mov
sub
je
add
sub
jb
xor
jmp
mov
test
je
jmp
mov
sub
je
sub
je
lea
mov
call
mov
mov
call
inc
mov
call
cmp
jle
jmp
mov
mov
call
jmp
mov
and
bt
jae
mov
mov
call
mov
lea
push
mov
mov
mov
call
mov
mov
call
add
jmp
mov
lea
mov
call
test
jne
mov
mov
call
inc
jmp
mov
lea
mov
call
test
jne
mov
mov
call
add
jmp
mov
lea
mov
call
test
jne
mov
mov
call
inc
jmp
mov
sub
je
sub
jne
mov
mov
call
jmp
lea
mov
call
mov
mov
call
inc
mov
call
cmp
jle
xor
pop
pop
pop
mov
push
lea
mov
call
ret
jmp
jmp
pop
pop
pop
mov
pop
ret
incl
add
add
add
add
add
incl
add
add
add
jns
add
add
incl
add
gs
add
jns
add
incl
add
add
add
incl
add
add
add
test
je
sub
ret
mov
push
mov
add
push
push
push
mov
mov
mov
push
lea
push
push
call
cmpl
jne
push
lea
push
mov
push
call
test
jne
push
lea
push
mov
push
call
mov
call
mov
jmp
sub
mov
lea
mov
call
mov
inc
lea
mov
call
mov
mov
mov
mov
call
test
je
mov
call
mov
mov
call
test
je
cmpb
je
mov
push
lea
push
mov
mov
push
mov
call
push
call
lea
mov
call
lea
mov
movb
lea
mov
movb
mov
mov
movb
mov
movb
mov
movb
lea
push
push
lea
mov
mov
call
mov
call
pop
pop
pop
mov
pop
ret
add
add
add
add
add
ljmp
add
add
fs
jmp
cmpb
je
mov
call
call
lea
push
lea
push
call
push
lea
push
lea
call
push
lea
push
push
call
push
call
push
lea
push
push
push
push
call
push
call
jmp
push
lea
push
mov
mov
push
mov
call
push
call
push
lea
push
lea
push
push
call
add
ret
add
add
incl
add
add
push
push
test
je
add
call
mov
mov
mov
lea
mov
call
mov
test
je
call
popl
add
mov
pop
pop
pop
ret
mov
push
mov
push
push
push
push
test
je
add
call
mov
mov
mov
xor
push
push
pushl
mov
lea
push
mov
mov
mov
call
mov
lea
call
xor
pop
pop
pop
mov
push
lea
call
ret
jmp
jmp
mov
test
je
call
popl
add
mov
pop
pop
pop
pop
pop
ret
push
push
push
test
je
add
call
mov
mov
mov
lea
mov
call
mov
test
je
call
popl
add
mov
pop
pop
pop
ret
mov
push
mov
push
push
push
push
push
test
je
add
call
mov
mov
mov
xor
push
push
pushl
mov
lea
push
lea
mov
call
mov
mov
mov
call
mov
lea
call
xor
pop
pop
pop
mov
push
lea
mov
call
ret
jmp
jmp
mov
test
je
call
popl
add
mov
pop
pop
pop
pop
pop
pop
ret
nop
cmpb
je
call
ret
push
jl
add
or
jb
jb
arpl
add
add
add
add
adc
add
add
nop
push
push
add
xor
call
mov
jmp
inc
cmp
jg
cmp
jne
cmp
jg
mov
mov
mov
call
jmp
mov
movb
push
push
mov
mov
mov
call
mov
pop
pop
pop
pop
ret
mov
sarb
push
or
arpl
je
arpl
add
add
add
add
adc
add
add
push
mov
mov
dec
je
dec
je
dec
sub
jb
jmp
mov
jmp
mov
jmp
and
lea
mov
mov
mov
call
mov
jmp
call
mov
push
mov
jmp
pop
ret
mov
push
mov
add
push
push
push
xor
mov
mov
mov
mov
mov
xor
push
push
pushl
mov
test
je
lea
mov
call
jmp
lea
mov
call
mov
mov
movb
mov
movb
mov
movb
lea
push
push
lea
mov
call
mov
mov
mov
call
mov
xor
pop
pop
pop
mov
push
lea
call
lea
call
ret
jmp
jmp
mov
pop
pop
pop
mov
pop
ret
mov
mov
mov
jmp
ret
mov
push
mov
call
lea
add
mov
call
pop
ret
mov
mov
mov
mov
call
call
ret
mov
cmp
jg
je
cmp
jg
je
sub
je
sub
je
dec
je
jmp
add
sub
jb
je
jmp
cmp
jg
je
sub
je
dec
je
dec
je
jmp
sub
je
sub
je
jmp
mov
ret
mov
ret
mov
ret
mov
ret
mov
ret
mov
ret
mov
ret
mov
ret
mov
ret
mov
ret
mov
ret
mov
ret
nop
push
mov
mov
call
and
mov
pop
ret
push
mov
add
push
push
xor
mov
mov
mov
mov
mov
xor
push
push
pushl
mov
mov
mov
cmpl
jne
lea
mov
call
jmp
lea
mov
call
mov
push
lea
push
mov
push
call
cmpl
jne
push
lea
push
mov
push
call
test
je
mov
mov
movb
lea
lea
mov
call
mov
lea
call
mov
mov
movb
mov
mov
movb
mov
movb
lea
push
push
lea
mov
call
mov
mov
mov
call
mov
jmp
mov
mov
movb
mov
mov
movb
mov
movb
lea
push
push
lea
mov
call
mov
mov
mov
call
mov
xor
pop
pop
pop
mov
push
lea
call
lea
mov
call
lea
call
ret
jmp
jmp
mov
pop
pop
mov
pop
ret
mov
push
mov
add
push
xor
mov
mov
xor
push
push
pushl
mov
mov
call
and
mov
add
sub
jb
je
dec
sub
jae
lea
mov
mov
mov
call
mov
jmp
push
call
pop
mov
jmp
mov
mov
mov
movb
lea
push
push
lea
mov
call
mov
mov
mov
call
mov
mov
mov
call
test
je
mov
mov
xor
pop
pop
pop
mov
push
lea
call
ret
jmp
jmp
mov
pop
mov
pop
ret
lea
call
mov
call
ret
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
movl
mov
movl
mov
mov
mov
mov
movl
mov
movl
mov
mov
mov
mov
mov
mov
ret
mov
cmpl
je
mov
movb
mov
mov
call
xor
mov
cmpl
je
mov
movb
mov
call
xor
mov
mov
xor
mov
mov
xor
mov
mov
xor
mov
mov
xor
mov
mov
xor
mov
mov
xor
mov
ret
lea
add
movl
push
call
test
je
mov
mov
mov
mov
mov
mov
cmpl
jne
mov
and
mov
jmp
mov
mov
mov
lea
mov
call
add
ret
mov
push
push
mov
xor
test
je
cmpb
je
test
jne
mov
and
bt
jae
mov
jmp
mov
dec
jmp
dec
test
jl
mov
and
bt
jb
mov
sub
and
jns
dec
or
inc
test
jne
mov
jmp
mov
and
bt
jae
mov
mov
pop
pop
ret
lea
push
push
mov
mov
xor
cmpb
je
mov
call
mov
dec
call
pop
pop
ret
nop
xor
cmpb
je
call
mov
mov
ret
lea
push
push
mov
mov
mov
call
cmp
jle
mov
call
mov
mov
mov
call
pop
pop
ret
mov
push
push
push
mov
mov
xor
test
jle
mov
call
cmp
jg
mov
cmpb
je
mov
xor
cmp
jl
mov
and
bt
jae
mov
mov
call
jmp
inc
inc
cmp
jge
mov
pop
pop
pop
ret
push
mov
add
push
push
push
mov
mov
mov
mov
call
mov
mov
mov
jmp
inc
mov
and
bt
jae
mov
mov
call
mov
jmp
inc
cmp
jge
cmp
jl
cmp
jne
cmp
jge
mov
and
bt
jae
mov
mov
call
dec
mov
mov
mov
mov
mov
pop
pop
pop
mov
pop
ret
lea
push
push
add
mov
mov
xor
mov
test
jle
mov
call
cmp
jg
cmp
jle
cmpb
je
push
lea
mov
dec
mov
call
dec
cmp
jg
mov
call
cmp
jg
xor
mov
jmp
incl
jmp
mov
mov
pop
pop
pop
pop
ret
push
push
add
mov
mov
xor
mov
test
jle
mov
call
cmp
jle
mov
call
mov
cmpb
je
push
lea
mov
mov
call
mov
call
cmp
jge
mov
call
mov
jmp
mov
mov
pop
pop
pop
pop
ret
push
mov
cmpb
je
push
call
sub
pop
ret
mov
pop
ret
lea
push
call
ret
nop
push
push
mov
mov
mov
cmpb
je
mov
and
bt
jae
mov
call
add
dec
call
pop
pop
ret
lea
push
push
mov
mov
lea
cmpb
je
mov
and
bt
jae
mov
call
add
dec
call
add
pop
pop
ret
lea
push
push
mov
mov
call
mov
test
je
test
je
mov
inc
mov
call
test
jne
mov
pop
pop
ret
push
push
push
mov
mov
mov
mov
call
mov
test
je
mov
sub
mov
call
sub
jb
je
jmp
inc
inc
mov
mov
call
mov
test
jne
mov
pop
pop
pop
ret
push
mov
add
push
xor
mov
xor
push
push
pushl
mov
push
lea
push
push
push
call
lea
lea
mov
call
mov
push
call
mov
pop
call
mov
xor
pop
pop
pop
mov
push
lea
call
ret
jmp
jmp
mov
pop
mov
pop
ret
mov
push
mov
push
push
push
push
mov
add
push
mov
call
push
call
xor
jmp
mov
mov
sub
jb
inc
mov
mov
and
bts
incb
dec
jne
add
cmp
jge
mov
or
jne
pop
pop
pop
pop
pop
ret
mov
cmp
ja
bt
setb
ret
lea
push
mov
add
push
push
push
movl
movl
movl
call
test
je
mov
test
je
mov
and
movzwl
mov
movzwl
shr
mov
mov
mov
mov
rep
cmpl
jne
call
test
je
movb
movb
jmp
push
call
pop
mov
mov
mov
call
setne
mov
test
je
movb
jmp
mov
lea
mov
inc
inc
cmp
jne
lea
lea
push
push
push
push
mov
push
call
mov
lea
cmpw
sete
mov
test
jne
add
dec
jne
jmp
push
call
test
setne
mov
push
call
test
setne
mov
test
je
push
call
pop
pop
pop
pop
mov
pop
ret
add
push
mov
mov
push
push
dec
jne
push
xor
push
push
pushl
mov
call
call
cmpb
je
call
call
mov
lea
push
xor
mov
mov
call
mov
mov
call
lea
push
mov
mov
mov
call
mov
xor
call
mov
lea
push
mov
mov
mov
call
mov
xor
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
lea
push
mov
mov
mov
call
mov
xor
call
mov
mov
mov
mov
call
mov
lea
push
mov
mov
mov
call
mov
lea
call
mov
mov
call
lea
push
mov
mov
mov
call
mov
lea
call
mov
mov
call
mov
mov
mov
call
mov
lea
push
mov
mov
mov
call
mov
mov
call
lea
push
mov
mov
mov
call
mov
mov
call
lea
call
lea
call
lea
push
mov
mov
mov
call
mov
xor
call
test
jne
lea
mov
call
jmp
lea
mov
call
lea
push
mov
mov
mov
call
mov
xor
call
test
jne
lea
push
mov
mov
mov
call
mov
xor
call
test
jne
lea
mov
call
jmp
lea
mov
call
pushl
pushl
push
pushl
mov
mov
call
pushl
pushl
push
pushl
mov
mov
call
mov
mov
mov
call
mov
xor
pop
pop
pop
mov
push
lea
mov
call
ret
jmp
jmp
pop
mov
pop
ret
add
incl
add
add
add
add
incl
add
add
fs
jns
add
decl
add
insl
insl
insl
insl
and
jns
jns
add
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
incl
inc
dec
push
dec
add
add
incl
dec
push
dec
and
add
incl
add
add
insl
insl
add
incl
add
add
insl
insl
cmp
add
push
mov
jmp
mov
mov
mov
mov
call
cmpl
jne
pop
ret
nop
push
push
call
mov
test
je
push
push
call
mov
cmpl
jne
mov
mov
pop
ret
add
imul
gs
xor
cs
insb
add
add
inc
gs
imul
push
jo
arpl
js
add
or
inc
mov
sbb
mov
inc
add
mov
inc
add
mov
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
add
inc
add
add
add
mov
inc
add
add
mov
inc
add
mov
inc
add
inc
add
add
add
inc
add
mov
inc
add
inc
add
add
inc
add
add
inc
add
mov
inc
add
mov
inc
add
inc
add
inc
add
mov
inc
add
inc
add
mov
inc
add
add
add
mov
inc
add
add
add
mov
inc
add
add
add
mov
inc
add
add
add
mov
inc
add
add
add
mov
inc
add
add
add
mov
inc
add
add
add
mov
inc
add
add
add
mov
inc
add
add
add
mov
inc
add
add
add
mov
inc
add
add
add
mov
inc
add
add
add
mov
inc
add
add
add
inc
add
add
add
mov
add
mov
inc
add
add
add
mov
add
lods
mov
inc
add
add
add
movsb
inc
add
add
add
inc
add
add
add
mov
add
pushf
mov
inc
add
add
add
mov
add
xchg
mov
inc
add
add
add
mov
add
mov
inc
add
add
add
mov
add
test
inc
add
add
add
movsb
inc
add
add
add
add
mov
add
js
inc
add
inc
add
add
add
add
mov
add
jo
inc
add
inc
add
add
add
add
inc
add
add
add
inc
add
inc
add
add
add
add
mov
add
pusha
mov
inc
add
add
add
add
mov
add
pop
mov
inc
add
add
add
mov
inc
add
add
add
inc
add
inc
add
add
add
in
xor
push
push
pushl
mov
incl
jne
mov
call
call
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
call
mov
mov
call
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
xor
pop
pop
pop
mov
push
ret
jmp
jmp
pop
ret
mov
push
mov
xor
push
push
pushl
mov
subl
jae
mov
call
mov
call
cmpb
je
mov
mov
call
call
call
call
call
xor
pop
pop
pop
mov
push
ret
jmp
jmp
pop
ret
add
add
incl
add
add
js
add
and
mov
jmp
mov
jmp
mov
push
mov
add
push
mov
lea
push
mov
call
push
call
cmp
je
push
call
testb
jne
lea
push
lea
push
call
lea
push
lea
push
lea
push
call
test
jne
movl
mov
pop
mov
pop
ret
push
push
mov
mov
mov
xor
repnz
not
mov
mov
mov
mov
shr
rep
mov
and
rep
pop
pop
ret
push
push
mov
mov
mov
xor
repnz
not
mov
xor
repz
mov
mov
sub
pop
pop
ret
mov
push
mov
mov
call
inc
setne
pop
ret
push
push
push
mov
mov
or
mov
and
cmp
ja
mov
and
cmp
ja
push
push
push
push
mov
and
shr
mov
push
mov
push
mov
call
push
call
pop
pop
pop
ret
nop
push
push
push
push
call
ret
nop
push
mov
push
push
push
push
push
push
mov
call
push
call
pop
ret
push
push
push
push
mov
mov
mov
push
lea
push
push
push
push
call
test
jne
movl
mov
pop
pop
pop
pop
ret
push
call
ret
nop
push
mov
xor
push
push
pushl
mov
incl
xor
pop
pop
pop
mov
push
ret
jmp
jmp
pop
ret
mov
subl
ret
push
mov
push
mov
call
xor
push
push
pushl
mov
mov
mov
call
je
mov
call
test
je
push
push
call
mov
call
test
je
mov
mov
call
mov
mov
xor
mov
call
jmp
mov
call
mov
cmp
je
mov
call
push
lea
call
mov
mov
pop
call
mov
call
push
push
call
xor
pop
pop
pop
mov
push
lea
call
ret
jmp
jmp
pop
pop
ret
incl
add
add
add
add
pop
fs
je,pn
je
add
add
decl
add
arpl
pop
fs
je,pn
je
add
add
in
add
push
push
xor
mov
mov
mov
mov
mov
mov
mov
mov
xor
push
push
pushl
mov
call
mov
cmp
jne
mov
mov
call
cmp
jne
mov
mov
call
cmp
jne
mov
sub
je
dec
je
sub
je
jmp
lea
mov
call
jmp
lea
mov
call
jmp
lea
mov
call
cmpl
je
mov
push
call
lea
call
cmp
jne
push
call
testb
je
push
lea
push
push
push
call
movb
call
sub
cmp
jb
push
lea
push
push
call
mov
lea
call
test
je
lea
mov
call
movl
jmp
xor
mov
cmpl
jne
cmpl
je
cmpl
je
push
call
push
push
push
call
call
add
fstpl
fwait
lea
call
lea
mov
call
mov
push
call
push
call
lea
mov
mov
call
mov
push
call
push
call
cmpl
je
mov
push
call
mov
call
lea
lea
mov
call
mov
push
call
xor
mov
call
mov
push
push
call
cmp
jne
call
sub
cmp
jb
push
lea
push
push
call
mov
lea
call
test
je
lea
mov
call
movl
jmp
xor
mov
cmpl
jne
cmpl
je
cmpl
je
push
call
push
push
push
call
call
add
fstpl
fwait
lea
call
lea
mov
call
mov
push
call
push
call
lea
mov
mov
call
mov
push
call
push
call
cmpl
je
mov
push
call
mov
call
lea
mov
call
mov
push
call
xor
mov
call
mov
xor
pop
pop
pop
mov
push
lea
mov
call
lea
call
ret
jmp
jmp
pop
pop
mov
pop
ret
add
decl
add
add
repz
xlat
repz
add
decl
add
add
repz
rcl
mov
add
incl
add
int
mov
add
incl
add
leave
mov
add
incl
inc
inc
mov
incl
add
add
incl
add
add
add
add
incl
add
add
add
add
in
push
push
push
push
mov
mov
mov
test
jl
test
je
cmpl
je
mov
mov
mov
mov
mov
push
mov
push
push
push
call
push
mov
push
push
mov
push
call
pop
pop
pop
pop
pop
ret
nop
push
mov
push
push
push
push
mov
mov
mov
test
jl
test
je
cmpl
je
mov
mov
mov
mov
mov
push
mov
push
push
push
call
push
mov
push
push
mov
push
call
pop
pop
pop
pop
pop
ret
push
call
mov
cmpl
jne
push
mov
push
push
push
call
mov
cmpl
jne
push
mov
push
push
push
call
mov
cmpl
jne
mov
push
call
cmpl
je
cmpl
je
or
push
call
jmp
xor
mov
pop
ret
nop
cmpl
je
mov
push
call
cmpl
je
mov
push
call
xor
mov
xor
mov
push
call
cmpl
jne
cmpl
jne
or
ret
xor
ret
mov
cmpl
je
call
mov
mov
mov
ret
push
mov
xor
push
push
pushl
mov
mov
call
xor
pop
pop
pop
mov
push
ret
jmp
jmp
pop
ret
mov
or
add
enter
lods
inc
inc
add
add
inc
add
inc
inc
add
inc
inc
add
inc
add
inc
add
inc
add
dec
inc
add
xchg
inc
add
xchg
inc
add
inc
add
add
add
in
add
mov
call
xor
push
push
pushl
mov
xor
mov
xor
mov
mov
mov
mov
mov
movl
xor
pop
pop
pop
mov
push
ret
jmp
jmp
call
lea
add
add
add
add
xor
mov
add
inc
add
lea
and
inc
add
inc
add
lret
int3
enter
enter
fcomp
fxch
loopne
jecxz
in
lea
inc
jb
outsl
jb
mov
push
jne
je
insl
and
jb
jb
and
and
popa
je
xor
xor
xor
xor
add
xor
inc
inc
inc
inc
inc
inc
incl
add
add
inc
inc
add
inc
add
inc
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
inc
add
add
add
push
inc
add
inc
add
inc
add
add
cmp
fidivrs
inc
mov
or
add
or
dec
add
and
dec
inc
add
inc
add
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
add
add
add
add
add
add
add
add
inc
add
inc
add
inc
add
inc
add
dec
inc
add
dec
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
loopne
inc
add
add
add
dec
inc
add
add
add
add
add
add
add
add
add
hlt
dec
inc
add
add
add
add
add
add
push
inc
add
add
add
add
add
push
inc
add
add
add
push
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
add
add
dec
inc
add
add
add
inc
add
add
add
add
add
push
pop
and
add
add
add
addb
add
add
rolb
add
add
add
add
add
add
add
add
add
mov
dec
inc
add
add
inc
add
add
inc
add
mov
add
add
dec
inc
add
inc
add
mov
add
inc
add
inc
add
inc
add
inc
add
add
inc
add
add
dec
inc
add
inc
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
mov
add
add
dec
inc
add
dec
inc
add
dec
inc
add
inc
add
inc
add
add
inc
add
add
inc
add
add
add
inc
add
inc
add
add
inc
add
add
inc
add
inc
add
dec
inc
add
inc
add
add
mov
add
inc
add
dec
inc
add
inc
add
add
add
add
add
add
add
add
inc
add
inc
add
dec
inc
add
inc
add
inc
add
inc
add
dec
inc
add
inc
add
mov
inc
add
dec
inc
add
inc
add
dec
inc
add
ret
mov
add
inc
les
add
roll
mov
add
inc
roll
enter
push
roll
out
add
pop
roll
inc
lds
add
add
add
add
loopne
add
lret
add
ret
cs
inc
ret
pop
ret
jbe
add
xchg
ret
mov
ret
mov
ret
fadd
add
out
ret
add
add
adc
add
sbb
add
cs
add
inc
ret
add
push
ret
add
fs
add
js
add
mov
add
mov
ret
add
rol
add
ret
add
faddp
add
in
ret
add
clc
ret
add
adc
add
and
add
xor
add
add
add
dec
les
add
add
outsb
les
add
add
add
add
les
add
add
add
les
add
add
add
les
add
lds
add
lds
add
lds
add
lds
add
lds
add
add
add
add
pop
lds
add
add
jl
add
xchg
lds
add
lds
add
lds
add
lds
add
lds
add
lds
add
movb
and
add
movb
inc
movb
pop
movb
insb
movb
js
add
add
add
add
mov
movb
out
add
hlt
movb
add
add
push
movl
add
movl
add
add
add
je
add
mov
add
sahf
movl
add
add
aam
add
call
enter
add
add
jb
gs
xor
cs
insb
add
add
inc
gs
gs
inc
jb
je
arpl
push
arpl
outsb
add
add
jbe
inc
jb
je
arpl
push
arpl
outsb
add
add
inc
outsb
je
jb
jb
je
arpl
push
arpl
outsb
add
add
dec
outsb
imul
inc
jb
je
arpl
push
arpl
outsb
add
add
jb
jne
insb
inc
jb
add
add
jb
jne
insb
inc
insb
insb
outsl
arpl
add
add
popa
insb
inc
jb
add
add
popa
insb
inc
insb
insb
outsl
arpl
add
add
je
gs
imul
inc
gs
jne
jb
outsb
je
push
dec
add
add
push
imul
outsl
dec
jne
je
inc
jns
add
add
jb
outsb
inc
add
add
insb
jae
jb
jo
outsb
inc
add
add
fs
imul
js
add
add
inc
gs
push
dec
outsl
arpl
add
add
je
je
jb
jne
dec
outsb
outsw
inc
add
add
je
jb
arpl
fs
jae
add
add
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
add
inc
gs
outsl
fs
gs
imul
add
add
inc
gs
outsl
arpl
gs
outsb
outsw
inc
add
add
inc
gs
outsl
insl
insl
popa
outsb
fs
imul
inc
jb
gs
imul
add
inc
imul
je
imul
inc
imul
add
add
imul
jae
add
push
jb
je
inc
imul
push
gs
js
gs
imul
gs
add
add
insb
push
outsb
ja
outsb
add
add
imul
jo
imul
inc
gs
je
dec
popa
outsb
fs
add
jne
gs
xor
fs
insb
add
add
inc
gs
gs
outsl
popa
jb
push
jns
add
add
fs
je
imul
dec
gs
popa
addr16
outsl
js
add
add
popa
jb
gs
inc
add
jbe
jo
xor
cs
insb
add
add
push
gs
jne
jb
push
popa
insb
jne
inc
js
add
add
push
gs
jo
outsb
dec
gs
js
add
add
addr16
insb
outsl
jae
dec
gs
outsl
insb
gs
jne
xor
cs
insb
add
add
push
jns
inc
jb
gs
je
imul
outsb
gs
xor
cs
insb
add
add
push
insb
jae
gs
popa
insb
jne
add
add
inc
gs
popa
insb
jne
add
add
inc
jb
add
add
inc
insb
insb
outsl
arpl
add
add
popa
insb
inc
jb
add
add
popa
insb
inc
insb
insb
outsl
arpl
add
jb
gs
xor
cs
insb
add
add
push
jb
je
inc
imul
jb
jne
insb
push
jne
jb
add
add
push
gs
imul
gs
add
add
je
imul
bound
gs
add
add
inc
gs
gs
imul
add
inc
gs
imul
je
add
add
je
push
dec
outsl
arpl
add
add
je
je
imul
inc
js
add
add
inc
gs
je
dec
popa
outsb
fs
add
add
inc
gs
jb
arpl
fs
jae
add
add
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
add
inc
gs
outsl
fs
gs
imul
add
add
inc
gs
outsl
arpl
gs
outsb
outsw
inc
add
add
inc
gs
outsl
arpl
push
imul
inc
gs
imul
push
jo
arpl
add
add
je
popa
je
inc
outsl
jb
popa
je
add
add
inc
gs
push
dec
outsb
outsw
add
add
je
inc
push
add
add
inc
imul
je
imul
inc
imul
add
add
insb
gs
imul
arpl
inc
imul
add
inc
imul
outsl
inc
outsl
jae
popa
je
push
imul
outsb
jne
inc
popa
insb
outsb
fs
jb
outsb
outsw
inc
add
add
gs
je
inc
imul
insb
outsl
jae
dec
popa
outsb
fs
add
gs
xor
fs
insb
add
add
push
outsb
push
imul
outsl
outsl
imul
add
push
gs
imul
outsl
outsl
imul
add
add
jae
popa
addr16
outsl
js
add
add
jae
popa
addr16
gs
add
dec
outsl
popa
fs
je
imul
inc
gs
imul
js
inc
add
add
inc
gs
jns
je
insl
dec
gs
imul
inc
gs
outsl
jb
addr16
jne
fs
imul
add
insb
insb
dec
gs
dec
outsl
outsl
imul
add
add
popa
jb
gs
inc
add
add
popa
jb
outsl
dec
gs
inc
add
imul
insb
insb
add
add
insl
push
gs
gs
jae
inc
outsl
outsb
je
js
add
add
insl
inc
gs
outsl
insl
jo
jae
je
outsl
outsb
push
je
imul
add
insl
inc
gs
outsl
outsb
je
js
add
add
add
add
add
add
add
add
sub
add
xor
add
cmp
add
sbb
add
dec
rolb
add
add
add
add
imul
outsl
outsl
imul
insb
insb
add
imul
outsl
outsl
imul
gs
gs
outsl
outsl
imul
add
adc
add
add
add
xor
sub
cmp
cmp
inc
xor
xor
xor
xor
jb
jp
xorb
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
outsb
xor
jle
xchg
mov
xchg
xor
xor
xor
xor
inc
xor
xor
xor
xor
xor
fnsave
xchg
ss
and
aas
cmp
push
cmp
cmp
jnp
xchg
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
dec
cmp
push
je
jle
mov
xchg
cmp
cmp
cmp
cmp
cmp
cmp
pop
cmp
mov
cmp
cmp
outsl
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
mov
aaa
ds
inc
ds
ds
les
int
adc
sbb
xor
push
aas
arpl
imul
aas
enter
add
add
add
loopne
add
or
adc
xor
xor
inc
xor
dec
xor
push
mov
mov
xchg
xor
xor
xor
xor
xor
xor
sbb
sub
cmp
pop
xor
xchg
xor
xor
xor
xor
xor
xor
cmp
mov
xor
xor
xor
dec
xor
xor
xor
sbb
xor
xor
xor
xor
xor
xor
xor
xor
xor
jns
mov
int3
xor
adc
cmp
push
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
ds
ds
dec
ds
mov
stos
ds
lret
ds
pop
aas
inc
aas
dec
aas
jg
mov
mov
aas
add
add
xchg
add
add
xor
xorl
xor
xor
xor
xor
push
xor
xor
xor
xor
xor
xorb
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
pop
xor
dec
xor
jb
xchg
xor
mov
ss
ss
lods
aaa
cmpl
cmp
cmp
sarl
aas
std
aas
add
add
add
add
add
xor
xchg
or
xor
ja
xchg
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
cmp
mov
scas
xor
ljmp
sub
xor
imul
xorl
ss
ss
ss
ss
out
divb
ss
aaa
push
aaa
push
aaa
push
aaa
es
cs
ss
ds
inc
aaa
dec
aaa
push
aaa
pop
aaa
data16
outsb
aaa
jbe
jle
xchg
mov
xchg
aaa
sahf
aaa
cmpsb
aaa
scas
aaa
mov
mov
aaa
aaa
fidivs
out
out
aaa
divb
aaa
push
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
pushf
cmp
mov
cmp
cmp
cmp
cmp
cmp
cmp
cmp
or
adc
sbb
and
sub
xor
cmp
inc
cmp
cmp
cmp
cmp
cmp
movsb
cmp
les
int3
cmp
cmp
cmp
cmp
cmp
cmp
cmp
or
adc
sbb
and
sub
xor
cmp
inc
cmp
cmp
cmp
cmp
cmp
movsb
cmp
les
int3
cmp
cmp
cmp
cmp
cmp
sbb
sub
xor
cmp
cmp
inc
cmp
cmp
cmp
cmp
cmp
test
lods
cmp
cmp
clc
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
adc
sbb
and
pop
cmp
insb
cmp
js
jl
cmpb
cmp
les
sarb
fdivrl
adc
sbb
sbb
and
and
sub
sub
xor
xor
inc
ds
jo,pt
je
js
jl
cmpb
mov
mov
mov
ds
sarb
aam
fdivrs
fdivrl
loopne
in
call
aas
and
and
sub
sub
xor
xor
cmp
cmp
inc
aas
push
aas
jo
js
jl
cmpb
aas
mov
mov
nop
aas
xchg
aas
cwtl
aas
test
enter
aam
fdivrs
fdivrl
loopne
in
call
aas
add
add
add
and
sub
sub
xor
xor
cmp
cmp
inc
xor
xor
js
xorb
xor
xor
mov
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
inc
xor
xor
xor
xor
xor
mov
xor
int3
xor
xor
xor
xor
xor
xor
or
or
adc
adc
and
inc
xor
xor
xor
xor
xor
xor
xor
xor
enter
clc
xor
xor
or
or
adc
adc
sbb
sbb
and
xor
push
xor
xor
xor
xor
xor
xor
les
enter
shlb
aam
fdivs
fdivl
lock
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xchg
cmp
cmp
cmp
cmp
cmp
cmp
dec
cmp
push
cmp
pop
cmp
cmp
xor
cmp
cmp
aad
cmp
imul
mov
nop
ds
sarl
add
add
add
push
xor
xor
xor
xor
xor
sub
fwait
aaa
cmpb
cmp
cmp
cmp
cmp
cmp
cmp
hlt
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
mov
enter
or
ja,pt
pop
aas
insl
aas
mov
add
jo
add
add
add
xor
xor
xor
xor
xor
pop
xor
xorb
xor
xor
mov
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
pusha
xor
iret
xor
or
inc
ss
divl
sub
inc
aaa
push
aaa
imul
aaa
xchg
aaa
scas
aaa
call
cmp
cmp
cmp
cmp
dec
cmp
cmp
cmp
jo
jns
push
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
pop
cmp
mov
cmp
ret
ds
aas
sbb
aas
add
add
xor
xor
xor
xor
xor
jb
jns
xorl
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
pop
xor
nop
xor
xor
xor
xor
xor
xor
dec
xor
xor
xor
xor
mov
lret
divl
and
aaa
outsb
aaa
js
xorb
aaa
test
aaa
mov
aaa
call
aaa
cmp
insl
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
pop
cmp
jge
fwait
cmp
cmp
cmp
cmp
cmp
cmp
pop
cmp
cmpb
cmp
outsb
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
or
adc
sbb
and
sub
xor
cmp
inc
cmp
dec
cmp
pop
cmp
fs
jo
je
js
jl
cmpb
cmp
cwtl
cmp
movsb
cmp
mov
mov
mov
cmp
aam
fdivrs
in
cmp
cld
cmp
adc
adc
sbb
and
sub
sub
xor
cmp
inc
ds
ds
ds
ds
ds
ds
jl,pt
cmpb
mov
xchg
ds
mov
ds
mov
ds
aam
fdivrl
loopne
call
ds
add
add
or
adc
sbb
sbb
and
sub
xor
xor
cmp
inc
aas
dec
aas
dec
aas
push
aas
pop
aas
pusha
aas
fs
insb
aas
jo
js
jl
test
mov
nop
aas
xchg
aas
pushf
aas
mov
aas
aas
fidivrl
in
out
aas
cli
aas
add
add
add
add
wrmsr
sbb
and
sub
xor
cmp
inc
xor
pop
xor
insl
xor
xorb
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
dec
xor
pusha
xor
mov
stos
xor
xor
xor
push
xor
jb
mov
xchg
xor
xor
xor
xor
xor
xor
xor
xor
xor
pushf
xor
loope
out
xor
or
adc
and
dec
ss
outsl
mov
xchg
ss
ss
ss
ss
aaa
cmp
inc
aaa
push
aaa
push
aaa
pop
aaa
insb
aaa
je
xorl
aaa
shll
aaa
in
aaa
divl
pushl
or
xor
cmp
inc
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
dec
cmp
pusha
cmp
jg
test
xchg
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
sbb
sub
xor
xor
cmp
push
cmp
mov
add
sub
xor
xor
test
lods
xor
xor
xor
xor
cmp
pop
xor
xor
xor
xor
xor
xor
nop
xor
mov
xor
mov
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
dec
xor
pop
xor
push
xor
xor
xor
xor
xor
xor
xor
or
or
adc
adc
sbb
sbb
and
and
sub
sub
xor
xor
cmp
cmp
inc
xor
xor
xor
xor
xor
xor
xor
xor
xor
nop
xor
mov
xor
mov
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
add
pop
cmp
add
add
add
add
add
xor
add
dec
add
orb
add
mov
add
test
add
dec
pop
pop
cmp
add
add
add
add
add
add
add
addb
add
dec
pop
pop
cmp
add
add
add
add
sldt
fadds
add
lock
cmp
add
or
add
and
add
cmp
add
push
add
addb
add
dec
pop
pop
cmp
add
add
add
add
add
pop
add
addb
add
dec
pop
pop
cmp
add
add
add
add
add
add
add
dec
pop
pop
cmp
add
add
add
add
add
mov
add
add
add
dec
pop
pop
cmp
add
add
add
add
add
add
add
add
add
add
pop
cmp
add
add
add
add
add
add
add
add
add
add
pop
cmp
add
add
add
add
add
add
add
add
add
add
pop
cmp
add
add
add
add
add
add
add
add
add
add
pop
cmp
add
add
add
add
add
add
add
add
add
add
pop
cmp
add
add
add
add
add
add
add
add
add
add
pop
cmp
add
add
add
add
add
add
add
add
add
add
pop
cmp
add
add
add
add
add
add
add
add
add
add
pop
cmp
add
add
add
add
add
inc
add
add
add
add
add
inc
add
add
add
add
add
push
add
add
add
add
xchg
std
add
rolb
add
add
add
add
add
add
les
add
adc
add
push
add
add
dec
add
dec
add
add
inc
add
dec
add
inc
add
dec
add
inc
add
or
dec
add
dec
add
dec
add
dec
add
sub
add
and
add
inc
add
add
add
add
add
add
addb
addb
add
add
addb
add
addb
add
incl
add
add
add
incl
incl
add
incl
incl
incl
add
incl
or
adc
adc
adc
or
xor
or
xor
add
xor
xor
adc
add
mov
add
xor
xor
xor
add
inc
add
add
add
add
add
jbe
inc
add
add
add
mov
addr16
add
add
add
es
addr16
add
add
mov
ja
bound
add
add
add
mov
ja
and
inc
add
add
or
ja
and
inc
add
add
add
jb
and
inc
add
add
add
jb
and
inc
add
add
add
ja
ja
and
add
add
or
jb
and
inc
add
add
add
mov
ja
and
add
add
add
mov
and
add
add
add
add
mov
ja
das
mov
add
add
add
mov
ja
mov
add
add
mov
add
mov
add
add
add
mov
add
mov
add
add
add
or
add
add
add
mov
add
add
or
or
xor
xor
cmp
add
xor
xor
xor
add
mov
xor
mov
add
or
mov
mov
add
mov
mov
add
add
mov
mov
or
add
add
incl
add
inc
add
inc
add
push
add
push
or
jg
or
aas
clc
or
aas
clc
add
pop
clc
add
pop
cld
add
pop
cld
add
pop
cld
add
pop
incb
add
incb
add
incb
add
incl
add
incl
add
incl
inc
inc
cld
add
sarb
loopne
sldt
aas
pop
add
aas
add
add
addl
add
roll
aas
jecxz
push
push
add
jb
imul
jns
or
push
add
je
jne
jb
add
jns
or
push
add
jo
je
add
bound
add
pop
add
arpl
je
outsl
add
add
or
dec
add
jbe
add
bound
add
or
inc
add
arpl
add
bound
add
add
push
add
outsb
add
add
outsl
add
add
push
add
add
add
add
add
add
add
inc
add
imul
popa
add
add
jne
outsb
add
add
push
add
outsl
add
add
jns
pop
add
add
jae
add
jns
or
push
add
add
add
add
jns
or
push
add
jne
jb
jae
add
jns
add
add
dec
add
jns
add
dec
add
outsb
add
add
jne
insb
add
add
jne
add
add
add
add
dec
add
je
add
dec
add
jbe
add
inc
add
arpl
pop
add
popa
add
jne
popa
add
jns
or
inc
add
bound
jb
jne
popa
add
jns
add
add
arpl
push
add
jb
imul
dec
add
jns
add
dec
add
outsb
add
add
dec
add
insb
add
push
add
jne
add
jae
je
and
inc
add
jb
outsl
add
and
arpl
jb
add
je
imul
and
jbe
popa
add
imul
je
and
outsl
add
and
jae
popa
add
add
add
jb
jb
popa
add
sub
push
add
jb
imul
je
and
outsl
add
and
jae
popa
add
add
add
jb
jb
popa
add
and
imul
add
and
outsl
add
je
and
outsl
add
and
bound
outsl
add
outsb
add
add
add
outsb
add
popa
add
add
add
popa
add
imul
je
and
je
jns
jo
add
add
outsl
add
jbe
add
jae
imul
sbb
dec
add
jbe
popa
add
add
add
popa
add
imul
je
and
outsl
add
add
popa
add
add
outsb
add
add
outsb
add
popa
add
add
add
jb
add
insl
add
outsb
add
add
js
je
add
outsb
add
insb
add
add
js
arpl
add
je
imul
and
and
add
jae
jae
add
je
imul
and
data16
imul
add
add
outsb
add
add
data16
arpl
add
add
outsl
add
add
jne
jo
jo
outsl
add
je
add
add
js
arpl
add
je
imul
and
imul
jae
popa
add
add
popa
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
bound
jae
je
jb
popa
add
je
and
inc
add
jb
outsl
add
aas
add
arpl
arpl
add
jae
and
jbe
imul
popa
add
add
outsb
add
add
je
and
popa
add
add
add
jae
and
and
add
outsb
add
add
outsl
add
add
add
add
add
add
add
add
add
data16
add
add
add
jae
jae
and
and
add
popa
add
add
inc
add
bound
add
dec
add
jb
add
inc
add
jb
pop
add
insb
add
popa
add
add
add
add
outsl
add
outsb
add
add
jbe
add
data16
add
sbb
inc
add
add
je
imul
and
jo
outsl
add
outsb
add
add
outsb
add
add
data16
add
sbb
dec
add
jbe
popa
add
add
add
outsl
add
outsb
add
add
and
outsl
add
add
popa
add
add
outsb
add
add
outsb
add
popa
add
add
add
insb
add
jae
jae
and
je
jns
jo
add
popa
add
je
xor
inc
add
arpl
add
jae
and
jbe
imul
popa
add
add
outsb
add
add
je
and
popa
add
add
add
jae
and
and
add
add
add
data16
add
add
add
jae
jae
and
and
add
arpl
arpl
add
jae
and
jbe
imul
popa
add
add
outsb
add
add
je
popa
add
imul
add
jbe
add
data16
add
or
add
je
jb
outsl
add
add
and
push
add
add
jb
imul
insb
add
add
add
add
outsb
add
je
jb
jne
arpl
je
imul
sub
inc
add
arpl
add
je
imul
and
and
add
outsb
add
add
outsl
add
add
add
add
add
je
and
and
add
add
and
add
add
add
jo
jo
insb
add
arpl
popa
add
add
outsb
add
add
jb
jb
outsl
add
xor
inc
add
jb
insl
add
je
and
daa
add
add
add
outsb
add
popa
add
add
add
jb
and
imul
outsl
add
jo
popa
add
add
insb
add
and
ja
imul
and
popa
add
add
insl
add
outsb
add
add
outsl
add
add
jb
add
insl
add
outsb
add
add
outsl
add
and
data16
jb
insl
add
je
and
daa
add
add
add
popa
add
imul
je
and
insl
add
je
push
add
add
popa
add
add
and
outsb
add
je
and
jae
jne
jo
jo
outsl
add
je
add
add
add
add
add
je
add
add
add
outsb
add
popa
add
add
add
jb
add
insl
add
outsb
add
add
add
add
add
add
add
outsb
add
outsl
add
add
add
outsb
add
popa
add
add
add
jb
add
insl
add
outsb
add
add
add
add
add
add
add
outsb
add
outsl
add
add
add
add
data16
add
add
outsl
add
jns
or
dec
add
add
and
add
jb
outsl
add
and
and
add
imul
and
outsb
add
je
and
data16
jne
outsb
add
add
outsb
add
popa
add
add
add
imul
outsb
add
insl
add
adc
push
add
outsl
add
add
popa
add
jns
and
outsl
add
add
and
data16
insb
add
jae
adc
inc
add
insb
add
and
popa
add
arpl
add
jae
and
add
outsb
add
add
add
add
add
add
add
outsl
add
add
add
outsb
add
add
data16
add
imul
or
inc
add
jae
imul
add
jne
insb
add
add
outsb
add
popa
add
add
add
jne
insl
add
jb
imul
imul
jne
je
adc
inc
add
jbe
imul
outsl
add
and
bound
jns
and
jp
add
outsl
add
add
popa
add
add
and
arpl
push
add
and
add
jb
outsl
add
adc
dec
add
je
add
add
and
outsl
add
add
data16
add
and
dec
add
jbe
popa
add
add
add
insb
add
popa
add
add
add
add
outsl
add
outsb
add
add
jo
add
popa
add
add
outsb
add
add
insb
add
popa
add
add
add
add
outsl
add
outsb
add
add
add
imul
outsl
add
and
bound
jns
and
jp
add
outsl
add
add
cmp
aaa
mov
pop
fwait
cmp
add
add
or
add
add
imul
outsl
outsl
imul
popf
push
jns
inc
outsl
outsb
jae
add
push
jns
je
insl
add
adcl
je
adc
jns
gs
add
outsb
imul
add
push
imul
add
push
jns
push
je
insb
jae
add
add
add
add
and
add
add
add
call
add
or
js
aam
subps
pop
mov
cltd
mov
sub
sub
aad
lcall
addl
jg
inc
push
sub
mov
fimull
mov
mov
mov
lahf
lret
inc
test
mov
aad
or
lahf
out
xor
std
pop
jmp
dec
out
out
stc
repz
out
repz
out
out
jae
pop
nop
adc
push
adc
test
aam
push
popa
xchg
jo
jg
inc
clc
shlb
sbb
dec
lock
aaa
xlat
imul
dec
pop
ljmp
adc
mov
aaa
mov
mov
leave
ljmp
out
mov
fldcw
mov
xchg
out
cwtl
lock
xchg
add
in
dec
loope
adc
dec
ret
cld
sbb
andl
ljmp
adcl
lret
leave
movsb
cmpsb
adc
lods
sbb
int3
inc
mov
adc
and
mov
inc
jo
clc
incl
popa
push
mov
jb
pop
lds
inc
or
std
mov
ja
push
out
push
jl
in
js
sub
push
jae
mov
aam
rcl
movb
mov
insb
adcl
and
or
mov
jmp
mov
sub
sub
jmp
ljmp
icebp
mov
arpl
ja
cmp
mov
sbb
clc
stc
js
pop
daa
lcall
mov
aaa
jnp
adc
add
lds
mov
and
lods
cwtl
nop
lahf
pop
or
int
sub
ds
pop
test
mov
jg
lret
pop
sar
adc
in
cwtl
pop
js
cmp
dec
lahf
nop
pop
xchg
mov
insl
jbe
sub
sub
pusha
stos
push
mov
in
inc
cmpsl
sar
pushl
fsubrl
mov
addr16
add
cld
cmc
rcrb
jecxz
pop
test
push
incb
testl
sbb
ds
sub
and
popa
subl
lods
sub
sti
rcr
pop
sarl
xchg
js
sbb
push
test
std
lods
xlat
cmc
es
roll
adc
cli
stos
add
lods
pop
lock
jae
test
arpl
clc
stos
sar
fcompl
mov
stc
xor
aam
notl
int3
adc
mov
xchg
jno
icebp
repz
jl
cmp
out
pushf
arpl
xor
ss
cmp
jae
in
loope
loopne
jno
imul
les
inc
xor
or
xchg
jno
jo
jae
cmp
sbb
jb
cltd
movsl
mov
sbb
adc
int
mov
xchg
jecxz
cmp
and
leave
ret
jno
ret
popa
stos
mov
fildl
ljmp
mov
dec
sbb
sar
jb
and
cmp
adc
sahf
cmpsb
jecxz
mov
cmp
pop
cmpsl
out
icebp
icebp
mov
repz
mov
bound
imul
pop
inc
mov
cmp
adc
adc
mov
aad
cmc
and
jecxz
xchg
jb
cmpsl
dec
and
leave
ret
and
sub
push
rorl
inc
decl
movsb
sub
adc
cs
and
xchg
insl
push
xor
cltd
mov
pop
or
xchg
inc
in
and
xchg
cmpsb
lods
or
aam
and
cmp
dec
sub
adc
mov
inc
insb
cmp
mov
outsl
stos
pop
xchg
push
insl
mov
adc
jge
sbb
lret
andl
ret
je
bound
ds
pop
fs
call
in
outsb
jb
in
mov
mov
shrl
cmp
imul
loopne
repz
cli
dec
pop
mov
fsubrs
outsb
scas
dec
test
popa
inc
in
daa
sbb
mov
mov
es
mov
adc
or
or
mov
fdivrp
enter
test
xchg
inc
mov
dec
js
loopne
addl
jmp
sbb
pop
xchg
dec
int3
loop
cs
ret
jle
mov
dec
inc
pop
mov
inc
mov
add
xor
sub
rol
or
jns
sub
repnz
push
or
dec
ds
rcrb
jle
sub
lahf
sbb
test
jne
mov
sarb
insl
dec
je
jp
mov
cmp
leave
and
ficompl
inc
das
pop
fucomp
hlt
aad
xchg
divb
int3
dec
cmpsl
push
mov
pushf
mov
pop
mov
pop
stc
push
mov
lock
jnp
push
cmc
jge
sahf
outsl
push
mov
jp
jmp
flds
sub
in
mov
mov
faddp
shl
out
ss
es
andb
inc
ss
dec
data16
sub
scas
mov
test
imul
popa
dec
jae
or
scas
ret
sub
jg
mov
mov
insb
adc
jp
add
ret
inc
pusha
or
mov
repz
fcmove
test
inc
roll
and
iret
jno
test
xchg
xchg
cmp
jle
adc
sub
cs
pushf
cmp
je
arpl
fcoms
mov
mov
repnz
fwait
mov
rcl
js
dec
sub
movsl
aaa
test
pop
jle
jno
int
push
ret
mov
or
pop
or
pop
ror
les
lret
arpl
shrb
sarl
or
pop
jmp
mov
sub
out
jmp
in
xor
add
push
dec
popa
sbb
negl
outsb
or
outsl
push
out
add
mov
or
sbb
adc
shlb
mov
bound
fisttpll
lods
jae
xor
fiadds
sub
jp
inc
lea
fxch
mov
mov
or
push
roll
inc
and
adc
aam
inc
flds
std
and
pop
int3
inc
or
rcrb
mov
dec
dec
xor
mov
xrelease
dec
rcll
fs
xchg
push
pop
mov
fwait
call
jno
pop
arpl
push
test
das
cltd
imul
xor
cmp
dec
das
sub
jns
pop
sti
cmpl
in
add
jne
adc
dec
int
cmp
mov
fs
jg
lcall
xor
push
repnz
idivb
test
jb
test
daa
pop
fisttpll
mov
sti
inc
icebp
xor
sub
xor
adc
std
adc
push
stos
xchg
scas
add
in
xchg
divb
data16
popf
adc
scas
xchg
cmp
lods
cmpsb
std
or
or
jmp
and
xor
adc
lds
dec
stos
imul
adc
in
inc
push
les
insl
add
mov
and
inc
fstps
push
mov
dec
ja
mov
push
je
cmp
mov
dec
or
cmp
mov
lods
es
add
in
lret
xor
ss
add
scas
arpl
filds
in
stc
shrb
fisubrs
mov
test
mov
sar
ficoms
pop
inc
and
or
and
popf
out
and
jae
aaa
les
cmp
or
scas
mov
push
stos
inc
idiv
stos
mov
cmp
xchg
inc
rorb
loopne
scas
mov
rcrl
sub
fldenv
push
jne
mov
sub
push
add
cmp
call
pop
jle
xchg
push
fnstenv
inc
push
mov
stos
jae
jmp
das
push
mov
negb
hlt
xchg
rorl
adc
adc
inc
enter
xlat
inc
out
arpl
mov
ret
leave
nop
repnz
call
shlb
ret
cmpsl
shll
push
xchg
xchg
dec
and
int3
sub
pop
cli
add
cli
outsb
out
mov
inc
jbe
mov
shlb
jp
shlb
adc
cmp
adc
dec
int
pop
sub
cmp
pop
xor
push
jno
je
je
inc
sub
jno
movb
pop
add
clc
sub
mov
jb
cld
add
xor
dec
pop
mov
mov
adc
mov
adcl
sar
inc
rcrl
adc
fdivrl
sub
pushf
aas
dec
add
and
dec
xlat
inc
je
imul
xor
rcl
jns
push
rcr
outsl
mov
lcall
push
fldcw
js
cltd
jl
dec
jbe
sahf
and
xchg
out
test
xchg
mov
aaa
icebp
sub
mov
xchg
adcb
jae
jne
push
push
iret
sbbl
xchg
dec
filds
das
push
pusha
push
jle
dec
and
cmp
pop
in
shlb
pop
jno
jne
cmp
and
addl
pop
inc
mov
or
lret
popa
sbb
inc
in
push
sub
jmp
pusha
add
push
mov
xor
xor
imul
pop
pop
shrl
ficomps
and
or
sub
cmp
xchg
or
inc
mov
adc
mov
xor
cmp
mov
sbb
xor
arpl
jae
push
mov
repz
push
insl
lds
mov
rclb
addr16
push
rolb
push
push
mov
mov
pop
cwtl
xor
push
jbe
pop
xor
xchg
pop
adc
movsb
sbbl
insl
sub
shrl
or
jnp
push
cmp
dec
lds
push
loopne
pop
pop
cltd
inc
adc
pop
fs
pop
test
cmp
dec
cli
push
fdivr
aad
and
test
xor
and
pop
stos
pop
lcall
and
shrl
pop
add
or
movsl
stos
imull
bound
sub
scas
ljmp
mov
sub
ror
in
fimull
cmpsb
clc
hlt
lock
mov
jmp
int3
push
fcomip
cmp
lret
jl
test
sbb
out
sbbl
les
stos
push
fistl
ret
lret
mov
mov
call
push
fadds
pop
xchg
add
int
lods
sahf
push
clc
cmp
lcall
mov
jp
xor
xchg
jge
add
shlb
add
adc
jbe
cmp
xor
mov
fimull
ds
inc
movsl
mov
int3
xchg
jnp
mov
jge
cmp
test
cmpl
lods
jmp
sub
xchg
and
jl
mov
cmp
int
push
jb
call
push
jl
jae
repnz
pop
daa
addr16
mov
mov
shlb
aaa
mov
das
mov
inc
pop
adc
push
fimuls
mov
mov
rorl
in
ds
xchg
and
addb
push
hlt
bound
out
mov
xchg
xlat
aas
fsubl
push
insb
rcr
xor
shlb
daa
xor
imull
jnp
fidivl
arpl
in
sti
sbb
or
lods
cmp
pop
jle
scas
pop
jmp
xor
bound
imul
shlb
cmp
mov
sti
mov
push
sarb
std
push
xchg
pop
lcall
xor
jmp
sti
sbb
cmp
jmp
stos
and
xor
mov
fwait
jmp
add
leave
dec
push
loope
fwait
push
xchg
std
test
sbb
pop
add
out
popa
mov
dec
insb
mov
adc
call
inc
adc
pop
pop
cwtl
clc
bound
cmp
mov
mov
outsb
or
inc
jg
pop
inc
xchg
cwtl
sub
out
in
shrl
jnp
push
scas
icebp
dec
and
into
lea
or
mov
into
push
sub
sbb
mov
fists
or
fisttps
xor
test
xchg
jl
lods
and
out
xlat
dec
sub
jns
inc
into
cmpsb
and
xlat
cmp
pop
mov
push
and
pusha
xlat
mov
out
shlb
mulb
push
cmpsl
popf
sbb
loopne
add
mov
mov
pop
push
js
add
cli
leave
mov
bound
es
cmp
sbb
jno
cmpsl
lds
aam
cmp
xchg
mov
lahf
ret
inc
or
adc
mov
mov
ficoms
cmp
aam
imul
xrelease
inc
pusha
sub
repz
test
scas
jle
add
imul
xchg
insb
pop
dec
out
stc
or
add
andb
pop
inc
adc
movsl
xchg
and
rolb
pop
and
mov
sahf
cltd
in
loop
sub
push
push
andl
into
rol
push
adc
test
filds
mov
xor
loopne
dec
aas
mov
data16
mov
xchg
ja
jg
mov
scas
out
jg
sti
hlt
loope
ljmp
mov
in
inc
lcall
cmp
arpl
mov
fnsave
cmp
inc
mov
or
ficoms
fistl
and
sbb
mov
insb
pop
loopne
hlt
add
mov
dec
cmp
dec
mov
inc
cmp
dec
lods
je
sbb
adc
push
inc
adc
mov
push
sbb
jno
dec
in
rolb
or
cli
lret
sub
in
fsubl
dec
sbbl
pop
jecxz
aad
cs
icebp
adc
and
xchg
or
fcmovnbe
pushf
xor
aaa
nop
add
mov
test
je
cmp
pop
adc
shll
or
xor
lds
inc
dec
rclb
xor
jmp
xchg
movsb
push
stc
push
jge
cwtl
or
ror
outsb
jne
shlb
int3
cmp
pop
mov
xor
sub
in
add
outsl
xchg
fimuls
push
lret
popa
sbb
das
int3
pop
or
and
call
jl
xchg
andl
mov
mov
cltd
jbe
cmp
in
rolb
rolb
inc
mov
push
scas
inc
push
call
mov
outsb
and
rorl
adc
test
xor
lea
sub
or
sbb
insb
pushf
jge
adc
popf
enter
stos
divl
push
lods
insb
adc
iret
iret
cmp
hlt
ds
dec
mov
gs
adc
movb
add
jns
and
add
test
xchg
cwtl
or
xchg
ret
icebp
mov
lret
das
jne
pop
pop
mov
pop
sub
hlt
pusha
shl
cmp
fldenv
sahf
pop
int
mov
repz
movsl
test
cmp
pusha
fsubl
mov
and
xor
xchg
cmp
scas
pop
and
xor
imul
data16
popf
lahf
ss
adc
stc
lods
pusha
cmp
pusha
push
test
mov
jno
mov
sbb
cmp
mov
int3
mov
mov
repz
jge
inc
jns
je
das
or
dec
cs
sbb
or
push
jae
pop
faddl
mov
push
xor
cmp
clc
inc
cli
insb
dec
enter
cmp
test
xchg
xchg
gs
adc
vmaxss
lods
push
push
or
cmpsl
out
adc
mov
cltd
sbb
rolb
mov
lds
mov
mov
clc
or
sub
rolb
out
xorb
dec
pop
iret
inc
inc
scas
xchg
iret
mov
ss
mov
jecxz
daa
sub
jae
leave
nop
fwait
mov
and
push
dec
adc
mov
inc
mov
xchg
sub
icebp
cmp
push
pop
cmpsb
cmp
movsb
lock
mov
pop
pop
rol
jne
les
mov
pushf
fs
lahf
mov
mov
sahf
sbb
xchg
add
scas
sbb
mov
daa
and
pop
sbb
in
mov
pop
lea
sub
xlat
or
fnsave
mov
sub
lock
lods
lea
add
or
jno
lret
xor
sub
loope
push
mov
or
insl
lds
cmp
dec
addr16
jle
inc
mov
xchg
cmp
xor
sbb
jge
ja
cmc
scas
xor
xchg
faddp
dec
addr16
repnz
call
int
out
mov
ret
scas
jmp
inc
aaa
jle
mov
mov
jl
lods
daa
cltd
pushf
ds
push
xchg
imul
mov
mov
aam
mov
jae
inc
lods
pop
and
hlt
adc
cmp
test
xchg
mov
mov
ss
test
jb
insl
mov
add
push
lods
dec
dec
pop
dec
inc
jno
lods
mov
cs
pusha
das
inc
mov
out
xor
out
cmp
lods
in
and
ficoms
xor
int3
adc
daa
loopne
xchg
stos
cmp
jae
sub
inc
insb
adc
adc
push
jb
in
subl
mov
or
fidivrs
cwtl
aaa
rep
xor
in
lahf
cmp
call
out
jecxz
fcoml
stos
movsl
nop
cmp
xchg
outsb
lds
mov
ds
push
nop
jl
stos
mov
push
xor
jp
xchg
fisubrs
imul
in
mov
in
jecxz
or
arpl
lods
addr16
pop
xor
pop
mov
mov
ficoms
and
sahf
mov
stos
adc
push
shr
or
mov
xchg
xor
dec
pushf
sub
dec
test
addr16
scas
std
mov
cmp
popf
adc
xor
out
imul
sbb
pop
test
mov
imul
jno
xchg
aas
fs
dec
mov
dec
cmc
pop
adc
cmpsl
pop
icebp
scas
sbb
xchg
not
jg
sbb
leave
sub
ret
mov
dec
push
data16
jmp
or
cs
and
out
scas
ror
or
xchg
xor
jecxz
inc
xchg
ficompl
jae
notb
fcomp
sub
inc
jne
xchg
je
imull
jle
mov
pop
aad
and
mov
pop
adc
imul
push
ret
inc
fisubrs
sub
aas
xchg
pop
ljmp
das
mov
shl
sub
lds
in
stos
and
xor
add
or
loop
fdivs
xor
cmp
ss
das
test
in
out
xor
or
stc
adc
jns
pop
push
lods
xor
int3
fidivs
in
repnz
push
in
cwtl
mov
sub
push
mov
pop
rcrb
lahf
inc
xor
add
inc
jp
pop
test
adc
lret
pushf
sub
sbb
sti
cltd
fisubrl
out
mov
fwait
movd
movsb
fwait
cltd
ss
sub
rolb
jne
subb
xor
loope
das
push
mov
dec
enter
sub
cmpsb
arpl
inc
inc
mov
or
dec
pop
add
cli
jg
fpatan
mov
stos
or
jecxz
jbe
testb
shlb
mov
mov
outsl
jl
mov
sbb
add
rcrb
mov
arpl
lods
mov
ja
xchg
cmc
pop
sbb
je
into
in
mov
fstl
ficoms
dec
xchg
push
cmp
fwait
icebp
addr16
mov
cs
fiaddl
fs
dec
test
xchg
and
and
mov
insl
mov
pop
lcall
push
aas
xchg
subb
movsl
imul
test
pop
ss
out
in
stos
cmp
xor
in
push
push
and
into
sarb
mov
add
rorl
out
adc
hlt
push
std
in
ljmp
push
out
test
int
loop
push
adc
push
inc
sti
mov
sub
stos
clc
fisttpll
and
inc
cli
repnz
dec
inc
push
jmp
add
or
or
movsb
add
push
incb
pushf
dec
sbb
jb
inc
mov
orl
inc
ss
ss
jl
int
mov
sub
arpl
dec
fsubrs
sub
cmp
pop
mov
cmp
dec
xor
imul
push
call
aam
pusha
mov
push
pop
cltd
pop
cmp
cltd
outsb
xchg
insb
mov
xchg
sahf
shlb
pop
or
data16
pushf
dec
or
dec
mov
cmpsb
inc
mov
add
adc
sbb
lret
sbb
inc
stos
das
divb
cmp
dec
aas
mov
adc
add
aam
jle
pop
xlat
pop
xor
stos
push
icebp
rolb
in
out
es
neg
mov
sub
and
ja
jmp
pop
scas
mov
iret
mov
fcoms
and
and
inc
test
sbb
pushf
mov
stc
jp
fcmovnbe
sub
pop
lods
cmc
xor
jp
jge
xchg
inc
cmc
neg
movsl
cli
mov
enter
or
mov
pop
and
cmp
fimull
loope
mov
cli
mov
xchg
repz
sub
xchg
jmp
mov
stos
and
out
lret
dec
push
out
mov
fsubl
push
mov
popa
mov
icebp
dec
aad
loope
ret
inc
in
repz
gs
loope
pop
cltd
lret
hlt
ljmp
dec
lds
inc
xchg
mov
daa
mov
scas
cmp
mov
jno
jmp
cmpsl
cmpsl
mov
jg
repz
jo
iret
js
rclb
xor
push
testl
push
test
movl
inc
mov
cli
fisubrl
mov
js
dec
enter
ds
and
negl
pop
pop
scas
or
xchg
bound
jne
int
scas
push
mov
mov
mov
xor
ss
fcoml
fdiv
aad
pmaxsw
sbb
int3
xchg
push
xchg
mov
imul
sub
xchg
aas
mov
aad
iret
cli
test
xchg
lods
mov
iret
mov
lahf
cmp
fcoms
inc
jmp
movq
fisubrl
loop
loope
or
negb
xchg
les
popf
push
jle
push
cmc
dec
cld
rcrl
cld
jecxz
out
cmpsb
jg
dec
js
into
xor
push
ret
mov
mov
nop
lcall
xchg
cmp
pop
mov
xor
dec
pop
cli
push
lods
daa
call
std
out
js
pushf
sti
fdiv
lahf
pop
pop
clc
lret
repz
inc
cmp
lods
mov
dec
mov
enter
inc
sbb
in
mov
outsl
dec
pop
jo
outsl
mov
out
lods
outsl
push
mov
mov
cmpsl
addr16
fidivl
ljmp
xor
jl
repz
mov
gs
mov
pop
inc
xchg
ss
jno
scas
movsl
lahf
lods
jge
lock
outsl
in
jl
lods
mov
call
dec
rcll
enter
inc
popa
lock
loope
mov
ret
in
xor
imul
mov
mov
jo
and
push
fistpl
or
and
imul
fcmove
cmpsb
adc
mov
mul
cmp
mov
insb
in
jmp
push
insl
cmc
fnop
int3
into
outsl
adcl
call
test
fstp
mov
jns
rorb
or
mov
in
fists
loopne
scas
push
mov
imul
pop
push
adc
sahf
cwtl
pop
mov
jg
repnz
mov
inc
xchg
sub
ret
sbb
add
repz
add
xor
jo
lods
fistpl
aad
xor
add
fsubrl
test
or
arpl
neg
dec
jae
loop
push
jecxz
cmp
fmul
es
push
adc
pusha
lock
inc
popf
das
loope
adc
push
rolb
dec
lret
add
sub
xor
ret
pusha
jmp
mov
mov
orl
mov
pop
cmp
popa
sbb
popf
lea
aaa
jnp
push
jmp
filds
inc
outsl
imul
lock
fs
inc
xchg
imul
cmp
fdivrl
xchg
xor
outsb
xchg
xchg
jns
xchg
lods
xchg
xor
add
push
mov
jle
mov
sbb
inc
push
insb
add
nop
cmp
sub
jb
ret
out
and
jle
outsl
and
fldenv
jb
leave
jo
cmc
inc
sub
movsl
and
pop
pop
rcrb
mov
in
repnz
adc
data16
sub
mov
outsb
push
mov
andb
pop
mov
add
push
filds
inc
ja
sub
pushf
fiadds
sub
cmpb
js
push
fcompl
xor
rorb
aad
in
aad
adc
sarl
mov
in
cltd
push
loope
nop
out
add
pop
out
mov
or
addr16
and
pop
sbb
dec
adc
and
cs
sbb
imul
cmp
outsb
and
fdivs
mov
xlat
sbb
xchg
mov
pop
jne
add
inc
stos
xor
mov
or
push
sbb
jmp
jo
pop
imul
aad
scas
les
repnz
out
inc
sub
movsb
add
int
mov
call
lahf
xchg
jo
push
adc
xor
addr16
adc
addb
push
mov
cmp
cmovo
sbb
and
mov
cs
and
incb
mov
hlt
dec
dec
in
out
daa
xchg
mov
rorb
in
call
add
xchg
pop
adc
outsb
lcall
int3
dec
in
xchg
and
pop
insb
push
adc
sbb
enter
dec
ret
repnz
insl
aad
shr
lock
nop
iretw
and
sbb
inc
cmc
mov
or
test
mov
in
mov
push
and
lret
stos
in
stos
movsl
test
inc
divb
push
mov
sar
push
jmp
nop
lret
mov
adc
scas
sahf
outsl
ss
push
repnz
jns
mov
push
mov
pop
outsb
iret
inc
pop
repnz
xor
and
add
and
cmp
or
sub
mov
fisttps
pop
push
mov
imul
testb
out
push
cs
cmp
fildl
mov
cwtl
fs
ret
add
test
xchg
xchg
xchg
stc
daa
jnp
popf
cli
dec
int3
daa
lea
aam
std
cld
inc
out
cmpsl
sbb
movsb
call
cld
jle
mov
dec
and
dec
imul
loopne
icebp
fimull
data16
into
cli
add
lock
xor
rorl
bound
pop
mov
movsb
test
jnp
mov
mov
mov
jge
cltd
test
adc
loop
mov
inc
mov
add
mov
imul
mov
xchg
mov
or
xchg
testb
loop
in
idivl
sub
fnstenv
sti
inc
sarb
cltd
test
ret
mov
data16
push
pop
inc
cmpsb
mov
lahf
int3
dec
arpl
ficoml
cmpsl
lcall
popa
mov
inc
mov
gs
cmpsb
test
out
push
mov
repz
test
js
fpatan
ret
shll
push
xchg
cmp
outsb
mov
repnz
clc
dec
or
xor
sahf
sub
cmp
adc
mov
cltd
insb
rolw
lret
xor
jno
cld
cmp
push
test
mov
int3
shrb
mov
xchg
mov
imul
pop
push
jp
jb
scas
dec
xchg
push
push
ljmp
pop
fiadds
inc
mov
in
mov
fbld
fldl
cmp
jne
inc
rclb
mov
or
icebp
rcll
sub
mov
addr16
jmp
packssdw
in
ss
popa
sub
test
scas
bound
pop
imul
insl
adc
xor
imul
cmp
aad
scas
or
pop
mov
mov
mov
add
or
mov
inc
shll
mul
nop
or
aad
out
clc
scas
insl
pop
lods
dec
ficoms
rcrb
shl
js
mov
call
xchg
call
mov
push
int3
arpl
movsb
lret
dec
dec
pop
xchg
xchg
mov
pop
sub
inc
sbb
cmp
rorb
sbbl
stos
pop
test
sub
push
out
loop
fdivp
add
sahf
mov
out
sbb
insb
or
and
mov
jecxz
or
jmp
and
out
push
sbb
cmc
cltd
sub
popf
enter
push
cmp
mov
enter
addl
dec
xchg
je
ror
jl
adc
movsb
in
lahf
inc
xor
fs
pop
shl
leave
dec
bound
jp
psubb
fisubl
lret
popa
int3
rcl
leave
mov
movsl
mov
arpl
adc
addr16
mov
daa
aad
js
test
cmc
ficoms
mov
xchg
fimull
aaa
shl
fiaddl
mov
subl
inc
push
jns
imul
mov
cmp
stc
pop
push
push
xor
ret
inc
sub
xchg
pop
and
cmpsb
dec
mov
loope
jle
adc
dec
jl
pop
dec
mov
js
pop
out
pop
push
dec
and
sub
xchg
hlt
test
cmp
sbb
fcomps
sbb
movsl
push
ja
pop
pop
sbb
xchg
std
bound
rorb
in
into
and
push
movsl
mov
sbb
cmp
push
into
xlat
outsl
popf
xchg
bound
push
je
or
pop
xor
xlat
dec
sbbb
mov
add
lret
pop
mov
xchg
insl
imul
lret
mov
push
mov
fdivrp
push
mov
jae
nop
jns
add
jle
mov
jbe
jge
mov
mov
das
insb
lods
xchg
ds
xchg
push
mov
xor
sbb
repnz
lea
mov
test
icebp
push
lea
hlt
arpl
xchg
popf
out
inc
jg
shlb
cli
pop
cli
mov
xchg
jl
int3
push
xchg
ss
out
iret
mov
sahf
lahf
or
daa
mov
dec
leave
lock
pop
xor
addb
cmpsb
mov
xchg
sbb
inc
hlt
repnz
int3
mov
pop
mov
aam
inc
pop
mov
std
or
stc
dec
les
or
pop
inc
mov
xchg
ljmp
rcrb
mov
lret
loopne
rcll
and
xchg
arpl
fcoms
or
push
ss
incb
mov
adc
mov
xchg
inc
loop
out
adc
dec
xchg
xor
imul
jmp
pop
mov
jno
sbb
xchg
in
in
dec
ljmp
jp
sbb
insb
xor
imul
lcall
int
mov
and
inc
add
xor
cwtl
push
fldcw
jl
jl
mov
jecxz
stos
addr16
bound
mov
push
jno
or
pop
stos
jbe
xchg
jmp
add
mov
push
sbb
inc
nop
jnp
inc
lods
pop
fldcw
cltd
mov
test
xchg
mov
out
outsl
sbb
inc
orb
mov
popa
xchg
lock
pop
and
mov
repz
push
decl
stc
fwait
lods
push
or
mov
outsb
int3
dec
in
mov
insb
push
xchg
lcall
lock
test
aas
inc
xchg
aas
adc
pop
mov
or
loope
sti
add
xor
and
or
add
sti
test
push
sarl
inc
shrb
hlt
adcl
sahf
add
pusha
out
shr
mov
adc
push
mov
inc
popf
push
and
inc
rolb
popl
out
dec
xor
mov
mov
push
sub
mov
lods
pusha
pop
loope
imul
int3
push
call
xor
mov
addr16
insb
fwait
cwtl
or
call
dec
mov
inc
mov
mov
push
jb
fwait
mov
mov
cmpsb
lds
hlt
vmptrld
dec
imul
mov
mov
xchg
mov
adc
add
add
ss
add
imul
nop
je
mov
fdivs
push
jmp
or
mov
stc
and
cwtl
jmp
aaa
mov
push
xor
aaa
cmpsl
aam
int3
cmc
flds
aad
cmp
enter
ret
add
sbb
lods
jmp
cmp
mov
jno
xchg
mov
ljmp
sbb
fwait
adc
or
xchg
stc
adc
adc
xchg
cwtl
ja
cmc
mov
jp
stc
adcb
bound
imul
pop
mov
fnstcw
test
or
insl
cmp
inc
mov
aaa
scas
fmulp
mov
mov
push
outsb
xchg
inc
mov
and
sti
mov
sbb
bound
jno
pop
lahf
bound
and
sbb
or
cmc
popa
scas
cli
ret
push
sahf
lret
sbb
fsubs
sahf
das
or
loope
push
mov
or
test
icebp
sbb
loope
repz
jecxz
mov
mov
xor
jge
imul
andl
and
out
inc
fstpl
pop
push
das
pop
lds
adc
or
adc
mov
mov
mov
and
jl
mov
pop
iret
out
stos
push
mov
xchg
push
repnz
mov
inc
imul
mov
stos
addr16
jp
cmp
loop
dec
mov
push
dec
insb
mov
insl
fcomp
aaa
in
fimull
jnp
xor
stos
xor
jnp
pop
and
mov
dec
push
bswap
mov
sbb
ror
xchg
jmp
iret
rcr
pop
es
add
jp
adc
fsubrl
lods
fadds
adc
repnz
pop
mov
and
in
mov
xchg
aad
sbb
popf
jl
dec
xchg
inc
ss
mov
or
pop
sbb
in
in
sub
fnstsw
push
sbb
shll
shrb
shr
and
jp
push
dec
lret
push
mov
or
cmp
and
inc
mov
xor
cmpsl
out
cmp
out
ljmp
dec
and
lahf
or
mov
in
leave
lods
sahf
mov
sti
push
jmp
cmc
les
inc
sub
cmpsl
and
xor
rolb
jecxz
lahf
cmp
jns
cmp
jb
dec
jl
dec
or
add
mov
out
das
repz
sahf
lods
dec
xor
or
and
movsl
int3
push
jae
xor
pop
stos
dec
ds
data16
js
inc
add
cmc
xor
and
jle
mov
xchg
repz
mov
cli
and
lods
mov
in
xor
dec
cmpsb
repnz
mov
dec
cld
test
pop
push
fidivs
or
out
gs
fnstcw
pop
sub
mov
cmpsb
jne
jne
out
pusha
xor
sub
xor
push
jbe
ljmp
sti
push
mov
negb
cmp
xor
aad
pop
addr16
into
repz
outsl
mov
dec
xor
outsl
fwait
pop
xor
out
jmp
pop
dec
inc
sbb
sbb
fsub
icebp
test
out
push
repnz
outsl
jg
insl
loope
aaa
hlt
das
fadds
xchg
xchg
das
sub
and
jmp
pop
es
mov
je
push
je
inc
int
push
add
lock
add
mov
mov
sub
mov
cmp
movsb
pusha
sub
inc
movsl
and
pop
add
fsubl
and
cmpsb
add
fwait
dec
pusha
jne
popf
push
lock
or
add
sbb
jnp,pn
pop
movsb
sbb
ret
adc
mov
mulb
mov
inc
mov
mov
rolb
lcall
movsb
dec
push
sub
jmp
xor
jmp
jecxz
in
inc
sub
push
enter
call
test
xchg
push
iret
and
push
lret
mov
pop
xlat
roll
mov
arpl
popa
aas
bound
dec
repnz
hlt
divb
hlt
fistps
in
rol
jge
mov
repnz
cmpsb
and
and
in
out
je
xchg
push
and
ret
rorb
inc
loop
pop
lods
ss
pushf
in
daa
insb
push
or
cmp
add
mov
pop
mov
pop
dec
cltd
and
jne
add
sub
sbbl
insb
popa
aam
mov
jno
and
stos
pop
decb
push
loopne
jno
mov
ja,pt
aad
fwait
cli
movb
stc
pushf
test
mov
inc
adc
imul
inc
mov
or
dec
aam
pop
lret
dec
out
push
mov
imul
shll
jne
sbb
fisttpll
lods
pop
test
call
ficoms
push
popf
xchg
negb
into
lods
cmp
dec
jmp
enter
ss
or
mov
lds
add
xchg
fstpl
ljmp
mov
lds
frstor
adc
push
jmp
lock
stos
imul
and
hlt
mov
cmpsb
xchg
sub
popf
cmc
mov
add
mov
xorl
inc
aad
lcall
ja
pop
test
cmp
cmp
lds
sbb
daa
push
push
fldt
push
cmp
fwait
aam
mov
shl
adc
cmp
cmpsb
sbb
cmpsb
orl
jns
inc
jno
push
testb
add
call
dec
xchg
stos
xor
outsb
xorb
xor
or
dec
or
mov
mov
sub
pop
and
xorl
add
jns
cmp
das
iret
xor
frstor
cmpsl
cmpsb
lret
lahf
xchg
mov
and
outsb
stc
adc
cltd
aas
and
lret
mov
sbb
lahf
movsl
push
out
movsl
ljmp
xchg
mov
xchg
out
fdivp
enter
pop
or
add
movsb
or
xchg
addb
cs
mov
dec
scas
das
sub
cmc
pop
sub
bound
jmp
sub
cli
cmp
or
call
sbb
fisubrs
mov
lret
and
or
inc
pop
mov
sbbl
mov
add
int3
ljmp
inc
and
shl
push
or
xchg
or
mov
or
push
decl
jne
repnz
ljmp
shl
scas
aas
adc
cmp
insl
xlat
xlat
push
dec
lret
mov
push
jnp
inc
push
or
push
push
and
sbb
ret
pop
mov
push
sub
or
mov
stos
movsb
push
jg
dec
in
pop
dec
arpl
xchg
adc
data16
mov
inc
add
mov
jb
out
out
xchg
or
lcall
add
imul
test
xor
outsb
shlb
jle
xchg
bound
push
and
jecxz
add
jecxz
inc
lcall
pop
sbb
lods
jae
xor
sbb
sbb
inc
jb
xor
push
outsl
xchg
sahf
cmp
mov
cmc
cmp
out
push
push
int
lock
test
mov
lods
in
sbb
lods
test
xor
xchg
jecxz
aaa
xchg
test
push
or
mov
sbb
xor
and
stos
push
pop
add
ror
push
lds
dec
push
rclb
pop
pop
mov
fwait
add
pop
add
pop
adc
inc
stos
mov
cmpsl
pusha
mov
mov
movsl
lods
fdivrs
mov
xor
insb
push
popf
out
xchg
and
ds
jmp
in
jge
gs
cmpsb
loopne
fisubrl
ss
shrb
jp
inc
mov
and
pop
andl
in
cmpsl
inc
testl
stos
fstps
jmp
mov
adc
xchg
dec
sub
mov
divl
mov
mov
test
or
mov
scas
incb
int3
loop
sbb
outsl
push
test
pop
jecxz
loopne
fsubrl
inc
push
into
and
idivl
or
sahf
pop
imul
dec
or
sbb
xlat
mov
int3
sbb
inc
push
cmp
pop
mov
std
out
rorl
pcmpeqd
push
add
nop
fnstsw
add
mov
adc
in
add
inc
push
loop
and
bndldx
pop
arpl
adcl
js
movsl
popf
rorb
xor
std
and
xchg
cmp
and
nop
rorb
mov
push
jecxz
pusha
rorl
inc
ret
xlat
mov
faddp
mov
jne
pop
jmp
cmp
je
sbb
adc
imulb
adc
roll
pop
test
sbb
test
pop
lods
pop
xchg
pushw
xor
pop
adc
jns
pop
ss
inc
cmp
adc
out
sub
test
add
test
addr16
cmpsb
out
sub
mov
lcall
jns
aaa
orb
ffree
xlat
popf
gs
popa
cmpsb
pop
loop
mov
add
add
fwait
jg
xchg
pushf
jns
sbb
mov
ret
imul
test
scas
into
clc
xchg
imul
and
push
pusha
add
out
and
fidivs
in
jle
mov
pop
or
and
cmc
pop
lds
jp
inc
ja
int
sub
adc
cs
jo
pop
loopne
imul
roll
jecxz
shl
dec
movsl
insb
adc
xor
and
jnp
add
popa
cmpsl
and
adc
jb
mov
cmpsb
or
push
fwait
push
dec
cmpsl
les
or
mov
jp
shl
dec
repz
insb
cmp
jg
mov
add
dec
jmp
cmp
push
ja
sub
mov
and
push
daa
rclb
push
pop
add
xor
push
seto
xchg
hlt
xchg
aam
or
jo
mov
jmp
xchg
mov
mov
mov
dec
dec
add
and
test
mov
cmp
insl
mov
lds
cli
sbb
mov
daa
or
out
dec
testb
loopne
pop
xchg
push
push
sbbl
and
dec
dec
out
hlt
lods
aam
outsl
imul
lcall
cmpsl
push
das
sub
jl
sub
pop
mov
outsl
and
out
push
dec
mov
clc
ss
mov
and
mov
rcrb
sbb
cmp
adc
cmp
sti
in
ss
xorl
mov
jns
jb
jp
mov
aad
mov
movl
gs
iret
ds
push
adc
subb
mov
xchg
adc
push
jecxz
xor
or
hlt
cmp
inc
leave
test
push
mov
sbb
push
outsb
div
cmp
jns
popf
cmpsb
jbe
outsb
adc
adc
add
dec
adc
adc
enter
or
xchg
mov
dec
adcb
cwtl
dec
subb
mov
clc
add
aad
js
adc
sbb
jmp
add
gs
ret
mov
xchg
notl
add
jg
imul
daa
fldl
in
into
lahf
mov
and
mov
cmp
pushf
inc
das
inc
jb
or
insb
and
popf
inc
lret
mov
rep
and
jl
push
jno
pop
outsb
lahf
mov
cmp
je
mov
xchg
inc
je
or
pop
iret
mov
js
mov
nop
fdivrs
dec
pop
repnz
pushf
out
stos
xor
frstor
mov
inc
ss
iret
loopne
push
mov
fldt
and
scas
jl
push
xchg
into
push
out
repnz
fcmovnu
sbb
popa
fcoml
shll
test
mov
and
jmp
jno
cmp
arpl
leave
pop
insb
aam
das
jge
mov
add
push
mov
pop
pop
dec
cmp
imul
jae
out
inc
dec
popf
xchg
push
push
xorb
mov
xchg
mov
jbe
push
imul
int
arpl
add
lcall
decb
enter
mov
stc
sbb
dec
push
cli
cs
pusha
stc
push
sub
imul
imul
out
xor
fnstenv
push
cltd
clc
adc
mov
push
push
mov
mulb
push
call
jg
sub
movsl
push
mov
and
mov
fnsave
jl
push
sti
push
out
arpl
adc
mov
sahf
xchg
pop
xchg
or
xlat
add
pop
iret
call
xor
cmp
adcl
test
loopne
pop
jp
or
ja
shl
cmpsl
mov
sbbl
shlb
xor
movsb
adc
cmp
sbb
decb
test
sahf
in
fsubs
dec
sub
in
sub
ficoml
sub
mov
div
jne
in
aaa
mov
cli
xor
push
insl
mov
test
jmp
mov
dec
ficoml
xchg
outsl
jle
sbb
mov
or
sti
cld
cli
inc
push
out
test
outsb
push
xor
decl
mov
xchg
pop
icebp
data16
lods
call
test
sbb
and
jp
adc
orb
out
add
fisttpl
sub
shll
mov
dec
into
adc
fadds
and
sti
add
sbb
and
jge
jp
push
or
and
test
and
dec
adc
js
cmp
or
cltd
out
pop
and
push
lahf
lret
rcl
std
mov
adc
push
mov
out
fs
pop
call
test
jns
sbb
cld
xor
fidivs
dec
ret
mov
ss
dec
loopne
nop
loopne
sub
inc
or
aam
scas
pop
pop
and
cmpsb
out
popa
add
xchg
pusha
sub
adc
cwtl
dec
hlt
iret
or
push
or
cmp
mov
and
push
shll
mov
cmp
test
adc
pop
ret
aas
jge
sbb
lret
sub
ds
cld
sbb
pop
sub
jns
popa
out
insb
adc
jnp
jo
xchg
outsb
add
mov
mov
cmp
jne
mov
loopne
shll
push
iret
sub
jl
out
popf
push
mov
or
mov
mov
sub
cwtl
sub
pusha
pop
leave
jmp
or
adc
push
cmp
pop
cmp
repz
flds
dec
fisubs
outsl
jge
cmc
dec
pop
in
mov
mov
insb
jae
and
add
jb
pop
push
test
mov
mov
sub
jns
stos
push
push
shrl
rcrb
inc
add
push
in
add
inc
lods
mov
inc
sbb
xor
or
add
daa
jmp
cmp
lcall
push
popf
mov
cld
gs
mov
stos
ret
scas
mov
pop
push
dec
ja,pn
xor
fwait
mov
ds
sub
xorl
jp
mov
xor
sub
fdivl
jecxz
repnz
adc
scas
or
dec
mov
lret
mov
fnstcw
sub
xor
jmp
or
mov
in
cld
push
in
ljmp
cmp
xor
add
jmp
jmp
inc
jo
inc
pop
jge
sbb
sub
inc
xchg
int3
sbb
pushf
idiv
push
xchg
push
ja
or
jo
ja
cs
aaa
popa
fmul
imul
xor
sbb
cli
lea
es
in
lock
hlt
jbe
cwtl
aas
loop
daa
ja
cmp
and
xor
test
mov
inc
mov
or
daa
dec
test
dec
adc
shlb
cwtl
mov
popa
mov
dec
mull
repz
nop
hlt
icebp
jecxz
cmp
stc
sbb
adc
inc
xchg
xchg
dec
in
test
pop
in
test
jne
ss
scas
pop
inc
push
int3
test
dec
mov
cmc
xor
aaa
lahf
in
fnsave
repz
in
adc
icebp
jecxz
jns
sahf
repnz
jnp
out
pop
in
jecxz
jb
push
pop
mov
ljmp
daa
jp
test
fs
jge
jecxz
mov
out
adc
ja
mov
insl
pop
add
cs
mov
loop,pn
cmpsb
movsl
ja
jecxz
negl
xchg
call
add
data16
sti
mov
push
add
cmpsl
mov
and
push
xchg
jmp
scas
push
cwtl
mov
ja
inc
jle
iret
scas
nop
xlat
add
cmpsl
call
ss
cmp
add
mov
ret
out
jp
daa
mov
mov
into
fisubs
jmp
sub
inc
pop
adc
mov
jne
clc
nop
mov
lock
lods
pop
jmp
nop
and
or
int
ret
hlt
aas
loopne
insl
push
aas
std
adcl
jle
xchg
xchg
test
call
add
jae
out
lret
cmp
add
xor
and
or
fsub
jg
push
mov
pop
lods
push
stc
adc
adc
mov
cmp
inc
pop
clc
cmpsl
mov
mov
in
jmp
sahf
inc
shr
clc
and
outsb
hlt
sarb
hlt
mov
or
sahf
sub
add
add
xlat
shr
pop
rcl
imul
xor
leave
mul
sub
mov
sti
dec
jmp
mov
jmp
pop
arpl
arpl
pop
pushf
inc
mov
fsubs
push
sub
cmp
scas
push
test
mov
pop
xor
out
mov
inc
sbb
and
sbb
into
mov
dec
jbe
sub
jnp
cld
jno
loop
dec
ret
js
inc
sub
fsubrl
sbb
out
hlt
repnz
push
shlb
jmp
push
add
push
shrl
sub
cmpsl
mov
test
cld
push
inc
pop
jecxz
ret
jns
ljmp
aaa
loope
mov
sub
push
lcall
lret
add
sbb
pop
mov
mov
int
xchg
mov
arpl
stc
adc
scas
mov
lahf
in
out
imul
mov
jecxz
sub
pusha
jne
sbb
int
dec
dec
add
or
cmp
mov
jp
aaa
pop
and
push
push
fidivrl
scas
dec
aaa
enter
mov
cmp
mov
mov
mov
jl
mov
daa
cmpl
lea
nop
ret
faddl
sbb
popa
into
in
mov
shrb
jne
testb
mov
or
mov
dec
test
fimull
das
fistpl
inc
in
imul
cmp
testb
mov
push
or
pop
dec
xchg
add
or
int3
dec
leave
sub
fwait
adc
iret
cmp
clc
enter
test
lods
cmp
xlat
out
outsb
sub
sbb
push
insl
pop
fwait
pop
xchg
pop
xchg
mov
jb
enter
cmp
xor
adc
div
jle
jecxz
in
mov
mov
jg
das
arpl
jo
loopne
lahf
arpl
fstpl
cmp
jb
and
icebp
and
mov
cmpsl
cmp
pop
rcl
mov
jecxz
mov
jne
or
out
int3
loope
aas
in
xor
cmpsb
jno
jno
iret
xor
cmp
sbb
jno
icebp
sbb
sbb
cmp
lret
rol
push
iret
push
in
jo
loope
jmp
mov
imul
fadd
jno
mov
in
loop
lea
ja
jb
popf
jecxz
sbb
loope
xor
xchg
cmp
xor
cltd
arpl
mov
cmp
xlat
jno
loopne
iret
xor
jae
in
rol
jno
mov
cmp
cmp
sbb
jae
jae
loopne
into
xor
sti
jb
popf
mov
arpl
jb
popf
jecxz
sbb
loope
xor
xchg
cmp
xor
cltd
arpl
mov
cmp
xlat
jno
loopne
iret
xor
jae
in
rol
jno
mov
cmp
cmp
sbb
jae
jae
loopne
into
xor
add
inc
xchg
mov
xchg
mov
cmp
jecxz
test
std
sbb
cmp
out
ret
sbb
stc
cmc
pop
xor
fidivrl
into
out
int3
xor
mov
jae
in
loope
jno
imul
sahf
mov
jo
popa
sbb
cmp
cmp
mov
cmp
inc
lret
arpl
jo
loopne
lahf
arpl
fstpl
cmp
jb
jno
mov
jecxz
sbb
cmp
scas
jo
cltd
jecxz
sbb
loopne
sbb
sbb
mov
mov
lea
jo
out
ret
icebp
jle
lret
cmp
dec
jecxz
jecxz
lahf
arpl
movl
jae
xor
cmp
xor
mov
in
jo
dec
loop
shlb
sbb
xchg
sbb
jno
ret
jecxz
mov
ja
insb
loope
enter
sbb
cmp
clc
cmp
xlat
cmp
das
jno
and
lds
or
aaa
jb
cmp
lahf
arpl
sti
cmp
out
leave
xor
mov
sbb
cmp
jno
into
jno
dec
mov
out
shll
arpl
push
mov
mov
mov
and
arpl
xlat
mov
mov
cmp
adc
insb
jecxz
fwait
and
jecxz
mov
xor
fwait
loopne
sahf
lcall
sbb
int
ss
loope
test
lock
loope
xor
das
mov
fdivl
add
push
adc
mov
in
repz
mov
insb
fsubrl
lcall
sub
mov
lds
xchg
daa
xchg
xchg
rcll
cmpsb
stos
out
cli
inc
xchg
clc
jge
repnz
push
cltd
out
cmc
jge
mov
or
inc
loope
or
ret
add
int3
lock
sahf
mov
fcomip
push
mov
fcomps
xchg
ficompl
mov
or
ljmp
negl
repz
pop
test
jl
mov
mov
jne
jnp
dec
jp
lods
int
loopne
cwtl
incl
mov
cmpsl
inc
ret
sub
push
fcmovb
xchg
sbb
or
fs
lret
aas
dec
adc
fxch
loop
and
xchg
movsb
cltd
lods
dec
test
int3
jno
sub
or
enter
and
mov
lret
mov
adc
pop
subb
out
dec
popf
or
dec
push
int
sub
jl
dec
dec
rcrb
iret
pop
push
stc
jmp
sbb
out
push
stc
jmp
lea
jg
test
stc
out
cwtl
outsb
loopne
jge
testb
sub
fldl
push
cmpsl
cmc
pop
and
in
mov
pop
cmp
jecxz
mov
ret
icebp
or
stos
sbb
mov
cmp
icebp
cmp
adc
jb
mov
xlat
sbb
loope
cmp
sahf
loop
in
lcall
cmp
cmp
aas
iret
cmp
loopne
nop
arpl
movl
js
jecxz
sbb
loopne
xchg
mov
push
mov
lea
jo
loop
int3
mov
arpl
popf
sbb
jno
int
adc
mov
jecxz
sbb
loop
ss
ja
mov
out
jae
jecxz
add
jle
jno
pushl
cwtl
jecxz
mov
jae
ret
sbb
jb
test
stos
sbb
lret
sbb
jecxz
ja
jmp
clc
dec
mov
jb
pop
ljmp
jmp
pusha
ljmp
div
adc
aas
adc
aas
and
sub
mov
out
and
mov
cmpsl
in
cwtl
test
sub
pop
mov
sar
scas
mov
leave
mov
mov
mov
sub
pusha
rcl
scas
xchg
push
pop
scas
cmp
push
xor
jge
mov
andb
cs
jno
std
jmp
repnz
in
mov
push
pop
and
mov
outsb
mov
mov
in
jne
gs
fldl
xchg
ficomps
cs
dec
popa
shll
lahf
cmpsl
loope
loop
pop
pop
add
push
push
popa
shr
aaa
mov
aaa
fsubrs
sub
push
lods
int
and
mov
out
bound
sarb
push
jmp
cmp
mov
jbe
mov
ss
aaa
lods
in
je
lods
mov
xchg
pop
push
pop
adc
clc
jns
sbb
dec
jmp
scas
jge
xchg
jno
jo
mov
add
ret
mov
add
pop
outsb
inc
mov
cmp
mov
sub
inc
xchg
cmp
or
mov
ja
flds
stos
fnstcw
mov
add
jae
fldt
mov
jg
sbb
xor
jg
out
clc
das
scas
xchg
sub
scas
jno
subb
mov
cli
mov
scas
unpckhps
mov
movsl
cmp
loopne
popf
nop
pop
sub
mov
insl
or
movsl
mov
pop
adc
xlat
inc
dec
sti
sti
cmc
jae
mov
xchg
dec
push
jl
push
pop
pushf
mov
mov
sbb
add
add
adc
and
mov
aas
dec
pop
ret
jg
fldl
push
sub
roll
or
rorb
cli
xchg
mov
or
mov
cld
jns
sbb
lret
and
jle
jle
fcmove
incl
fcmovbe
mov
lds
and
orb
fnstsw
rorb
inc
jg
fcomps
sub
xor
ficompl
dec
imul
inc
sbb
jg
cmp
push
mov
out
out
incl
in
mov
cli
jecxz
and
pusha
fstl
bound
pop
cmp
cmp
jg
push
out
cmc
inc
dec
rorl
mov
jg
addr16
adc
insb
ret
negb
repnz
jae
sahf
mov
rcr
xlat
jle
jecxz
lock
jle
push
mov
sub
pop
cmpsb
jle
jbe
addr16
inc
push
pop
div
mov
mov
imul
lock
cld
std
jmp
cmc
repz
dec
cltd
push
jg
dec
out
xchg
mov
cmp
stos
xchg
xor
fisttpl
xchg
cmp
lret
aaa
pop
test
inc
cmc
or
stc
outsl
iret
mov
cmpsl
sub
push
mov
mul
aad
jae
adc
xchg
jb
pop
pop
sti
pusha
jle
loope
aad
in
icebp
mov
mov
ret
inc
lahf
daa
imul
mov
aas
mov
sub
pop
add
mov
mov
or
fidivs
ret
mov
negl
mov
lret
gs
flds
ljmp
dec
jecxz
cmp
repnz
mov
jnp
flds
out
test
imul
sbb
out
in
cmp
xchg
divb
and
push
lods
js
pop
cmc
mov
and
sub
in
pop
scas
xchg
test
movsb
aaa
mov
pop
mov
outsl
or
mov
jecxz
jp
xchg
and
xor
and
push
add
test
test
in
ss
mov
shll
mov
ljmp
jo
int3
xor
inc
add
mov
and
mov
xchg
loopne
mov
cmp
cmp
out
sti
pop
faddl
sub
xchg
add
push
hlt
dec
adc
dec
adc
xchg
pushw
mov
es
scas
push
inc
or
arpl
push
test
add
fidivrs
aad
lahf
mov
fnsave
dec
mov
je
in
addps
mov
xchg
movsb
data16
xchg
sub
leave
inc
dec
loope
ja
sti
xor
faddl
xchg
adc
inc
mov
out
fdivs
and
cld
or
shlb
push
cmp
add
cmp
xor
sub
movlps
in
inc
shrb
push
mov
inc
in
movsl
fwait
nop
adc
std
xchg
movsl
fdivl
neg
sub
data16
push
insb
mov
adc
int3
cmpsb
mov
xchg
rcrb
lret
sub
xchg
add
faddl
ret
iret
push
js
sub
or
out
xchg
stc
or
pushf
testb
xchg
rorb
sahf
xchg
repz
outsb
and
jae
inc
xchg
cmp
ss
xor
fsubp
fbstp
out
lods
mov
lock
outsb
daa
andl
dec
addl
lods
mov
ret
or
sub
xor
mov
xor
adc
jl
fstpt
fdivrl
imul
scas
dec
sbb
add
sub
out
push
movsl
fcom
scas
push
inc
add
push
xorl
jge
jge
mov
roll
cmp
outsb
bound
out
testl
inc
push
sti
test
or
xor
int
sbbl
dec
mov
pushf
cltd
mov
mov
jb
add
scas
std
adc
ss
mov
inc
mov
mov
lcall
divl
repnz
je
mov
push
and
arpl
ret
xor
sub
push
sub
dec
push
es
pushf
in
aam
xor
mov
shrl
dec
xor
orl
and
cmp
mov
lret
idiv
sub
int3
cli
mov
pop
aam
add
shl
inc
inc
repz
inc
ret
int
cs
mov
xor
xchg
push
or
sbb
test
arpl
mov
std
test
mov
jns
out
lahf
mov
jo
ss
mov
pop
push
jno
pushf
adc
xchg
jmp
loop
cmpxchg
adc
aad
dec
into
dec
adc
mov
in
push
lds
mov
popa
int3
cmp
sarl
stos
das
bound
xor
push
movsb
fmul
jecxz
cli
push
out
fidivs
inc
repnz
xchg
mov
ret
mov
add
push
aas
and
pop
fs
lock
or
fimull
incb
fcompl
fildl
dec
pop
and
mov
add
ljmp
lods
jle
jne
xor
xor
xor
push
pusha
les
stos
popf
xchg
fidivs
pop
insl
popa
lret
sbb
ds
int
fdivs
mov
call
inc
push
out
ret
lock
jns
push
shrl
fs
cmc
and
stc
cmp
cli
jg
or
dec
sub
popa
jl
jge
dec
flds
cmp
pushf
lods
cmp
adc
fadds
shr
in
stos
add
test
sub
push
das
mov
lods
cmp
testb
mov
jbe
jo
and
arpl
jecxz
cmp
sbb
subl
jno
loopne
xchg
mov
pushf
scas
xchg
cmc
inc
xor
mov
imul
shrl
outsb
aam
xchg
mov
xchg
dec
push
orl
xchg
xchg
and
mov
inc
mov
shl
sub
arpl
jnp
sbb
jge
hlt
stc
cld
mov
sahf
cld
sbb
or
out
imul
fs
stc
icebp
cs
cwtl
xchg
sub
cmpsb
repnz
pop
lods
shrl
ja
adc
push
insb
inc
jl
sbb
inc
jl
ss
mov
sub
out
push
test
push
mov
pop
pusha
mov
xchg
mov
xchg
sub
lea
inc
fsts
mov
add
xlat
popa
jl
cli
jno
repnz
sti
cltd
loopne
cmc
mov
xchg
adc
ss
add
addr16
hlt
notl
mov
jo
arpl
sahf
xchg
ret
out
pop
push
pop
jecxz
lods
add
inc
ljmp
loopne
iret
orb
in
cs
lret
xchg
and
inc
fsubl
mov
mov
aas
lea
stc
mov
xor
lods
cmp
test
push
lock
or
mov
jne
mov
retw
loope
fsubr
into
and
inc
sbb
hlt
cli
and
mov
inc
std
fisubs
mov
mov
shll
adc
insb
jl
fsubrs
mov
test
cli
pop
or
shlb
mov
pop
and
xchg
adc
daa
call
test
or
dec
out
jmp
mov
cmp
les
test
pop
xchg
mov
xchg
or
inc
hlt
jb
push
cli
movl
mov
sbb
inc
mov
mov
stos
mov
xor
insl
aam
adc
addb
stos
faddp
cld
pop
cmp
mov
mov
or
push
fwait
repnz
movsl
cli
nop
aas
mov
mov
mov
xor
sbb
pushf
push
cmp
js
jbe
fsubrp
call
sbb
aaa
push
push
mov
fnstenv
push
mov
test
add
sti
push
ja
dec
and
subps
fsubrl
pop
jnp
aaa
jg
mov
push
cmp
inc
fldl
mov
int3
rcrb
jecxz
sahf
mov
dec
scas
xchg
out
test
enter
jg
jns
repz
sahf
out
sbbl
scas
outsl
lock
xchg
in
mov
jne
arpl
nop
cmp
cmp
push
cmp
sbb
ja
jle
and
data16
fldenv
and
pop
loope
mov
mov
pop
repz
lret
in
dec
adc
fstl
lods
jl
jbe
xchg
inc
sub
in
lcall
sbb
sbb
pop
movsl
add
push
jb
xchg
dec
out
arpl
inc
ja
in
push
sub
filds
pop
gs
into
shlb
fidivrs
sub
lret
ret
add
dec
pop
int3
aas
pusha
mov
jge
adc
int
cltd
into
scas
in
stos
xchg
mov
inc
pop
rcrb
lret
scas
add
jg
into
sbb
in
fisubs
iret
sub
cmp
test
push
pop
xor
movsl
push
cmpsl
ja
lahf
paddd
insb
je
addr16
mov
rorl
imul
fidivrs
dec
cli
imul
insl
mov
and
shrl
pusha
push
inc
fsubs
sbbl
pop
aas
pop
mov
push
int
dec
nop
sbb
mov
push
jne
adc
addr16
jb
add
lcall
xor
push
mov
mov
sub
daa
xor
scas
iret
bound
mov
lret
scas
adc
xor
cs
mov
mul
cmp
lds
scas
push
inc
sahf
repz
jo
shlb
jl
cmpb
inc
adc
push
mov
mov
jmp
mov
out
mov
lds
sar
mov
mov
mov
repnz
cltd
ljmp
lahf
shlb
pop
je
pop
jecxz
cmp
sub
shlb
imul
sahf
jge
sub
cmpsl
ret
cs
xchg
das
enter
mov
fisubs
frstor
lock
es
cmpsb
mov
mov
fdivs
xchg
das
leave
xchg
enter
jg
insl
lret
and
insb
aaa
xchg
mov
sahf
sub
int
fwait
xchg
idivb
mov
pop
add
xor
lods
lock
sbb
cmp
aaa
xor
mov
mov
sti
imul
test
std
xchg
js
std
jg
and
or
cli
push
and
mov
das
loope
push
les
lret
push
add
pop
push
scas
loopne
sub
in
sbb
inc
xlat
out
and
popf
std
jecxz
cmpb
push
mov
push
jmp
in
pop
mov
leave
sbb
cwtl
ljmp
cmpsb
enter
mov
pop
and
lods
pop
test
sbb
sub
setge
jmp
mov
xor
add
push
imull
or
pop
pop
push
cmc
sub
jno
cli
dec
push
clc
icebp
jg
lods
mov
jg
add
jne
inc
lret
xor
in
out
add
mov
jp
inc
outsl
jnp
insl
adc
insl
out
push
sbb
adcb
jns
cli
orb
pop
push
outsl
cld
jg
sti
idivb
xor
pusha
test
inc
lds
pop
dec
inc
in
dec
ret
lret
test
mov
or
push
addr16
sub
or
sub
scas
fidivrs
mov
cltd
mov
jmp
xchg
mov
pusha
pop
xchg
je
in
imul
cmc
std
mov
fnstcw
mov
into
pop
sti
mov
xor
adc
movsb
std
shlb
icebp
mov
daa
inc
test
inc
sbb
setg
movsb
jl
jl
xor
fcmovu
imul
sbb
fcomps
adc
enter
push
mov
lret
fldenv
inc
das
jge
sub
push
push
subb
pop
sti
push
jge
cmc
push
sbb
je
add
jbe
push
pop
mov
les
mov
cmp
jp
out
out
gs
aas
add
mov
jge
sub
call
rcr
ljmp
enter
imul
outsl
jno
outsl
lahf
push
mov
dec
mov
sbb
mov
loopne
cmpsl
pushf
mov
imul
sub
xor
push
mov
pop
jp
add
cltd
mov
mov
aad
stos
mov
scas
out
loop
pop
pop
mov
stos
pop
pop
lock
int3
add
pop
push
aas
add
clc
leave
cwtl
sahf
loop
xor
arpl
pop
clc
aam
xchg
cmp
aam
test
scas
mov
push
xlat
adc
ss
das
fwait
fwait
movsb
sub
cld
fmull
and
adc
or
dec
les
pop
lcall
xor
pop
lea
cmpsb
dec
ljmp
or
scas
lea
push
pop
repz
pop
pusha
aas
pop
jbe
jnp
scas
lcall
cwtl
das
adc
loop
orl
movsb
or
movsl
aam
cmp
dec
mov
dec
cltd
mov
daa
lcall
movsl
stc
xlat
fwait
or
inc
pop
and
xor
loopne
insl
jne
decl
mov
sti
insl
push
inc
xor
lds
jg
mov
std
iret
aaa
adc
aad
add
decl
test
pushf
scas
xchg
mov
jmp
pop
pusha
ret
and
xchg
mov
mov
adc
stos
mov
push
in
mov
inc
and
jle
mov
rcrb
sub
ds
test
subl
insl
mov
mov
loop
mov
insb
mov
mov
push
sub
jecxz
mov
dec
cmp
sbb
push
out
xor
aam
addb
cli
dec
jg
in
sbb
fisubrl
in
sbb
push
fisubrl
sti
outsl
aad
pop
dec
adc
outsl
aad
pop
sbb
add
adc
push
or
das
imul
fisttpll
push
lods
rclb
pop
cmp
cmpsl
cltd
fimull
push
adc
fldt
lock
subl
fcomi
or
fimull
pop
fildll
add
jecxz
dec
pop
fiadds
mov
inc
jnp
jb
or
or
jmp
loopne
lahf
push
push
repz
je
out
sub
insb
inc
xor
and
xor
cmp
mov
ja
mov
push
aad
movsb
arpl
sahf
fwait
jecxz
cmp
out
aad
movsb
mov
push
lahf
call
jle
sbb
cmp
arpl
and
and
jle
mov
movsl
xor
mov
shlb
fnstsw
or
jnp,pt
dec
push
imul
mov
push
out
jmp
inc
fcoms
cli
mov
push
addr16
int3
jge
pop
jbe
or
dec
pop
mov
imulb
sti
pop
fisubrl
aad
cmp
cmp
mov
jg,pn
popf
test
scas
xchg
push
sti
jge
pop
je
je
stc
mov
sbb
imul
int
std
push
jns
jmp
repz
int
mov
stc
js
iret
fdivl
adc
mov
sbb
mov
pushf
out
cmpsb
in
mov
mov
cmp
dec
cltd
jmp
mov
sbb
stos
jns
imul
xor
in
lea
dec
negb
ds
xchg
add
stos
mov
jp
hlt
jmp
sbb
jle
or
cwtl
jbe
popl
lea
pop
add
adc
adc
jle
and
dec
aaa
orl
sbb
cmp
or
or
enter
and
iret
enter
outsl
add
jae
cmp
sbb
jnp
cmp
mov
cmc
fdivl
sub
out
adc
add
pop
das
in
jae
mov
adc
adc
int
mov
pop
adc
mov
lea
inc
hlt
jge
scas
jnp
mov
ret
dec
dec
push
loopne
fdivs
pop
or
mov
dec
das
push
call
dec
cmpsb
sbb
in
int3
cmp
mov
xchg
or
in
push
insb
mov
vmread
add
test
inc
jnp
repnz
frstor
xor
outsb
push
sub
int3
push
or
jne
xchg
push
add
xlat
insb
mov
inc
push
es
lods
push
fsubrs
add
mov
movsb
adc
mov
inc
std
or
int
jnp
push
cmp
mov
push
adc
push
xorb
pusha
sbbl
in
test
lods
dec
lock
cli
inc
filds
and
lret
jno
jno
and
daa
and
cmp
mov
sbb
rcrl
jg
testb
iret
or
clc
adc
mov
mov
sbb
andl
or
push
push
frstor
movsb
pop
out
insb
js
scas
lds
pop
imul
loopne
push
or
jge
fsubrp
add
std
and
cmpl
fcoms
lds
shll
in
in
in
push
pop
jecxz
pop
xchg
mov
ficoms
repnz
add
xchg
cmp
outsb
jbe
fwait
xchg
ret
mov
addr16
xchg
std
in
push
roll
jl
jmp
xchg
int
test
int
insl
clc
gs
sbb
jae
movsb
stos
rcl
push
xchg
and
cld
movsl
js
xchg
jmp
mov
or
mov
repnz
mov
andl
sahf
shll
mov
jns
aas
aaa
pop
idivl
adcl
cmp
mov
hlt
aam
jae
outsb
xchg
mov
les
nop
out
inc
test
loop
mov
add
xlat
pop
xchg
lds
inc
push
repnz
jl
xchg
inc
jnp
jns
ja
movsb
mov
sti
scas
xchg
pop
lods
int
lds
xchg
dec
pop
scas
mov
adc
out
xchg
repnz
fs
sbb
mov
call
cmc
rcr
loopne
or
enter
jbe
lods
cmp
pop
sti
push
push
and
mov
adc
pushf
ror
jne
jge
into
in
sbb
pop
out
sub
mov
sahf
sub
cmp
mov
push
jmp
mov
scas
inc
jne
xorb
jg
pop
icebp
xor
mov
add
push
repnz
ss
add
push
pop
push
sti
inc
sti
aad
repz
push
push
jg
test
mov
pusha
mov
xchg
jnp
xor
pop
pusha
test
jb
stc
lcall
ret
into
mov
les
cwtl
or
icebp
lcall
push
xchg
std
and
addr16
sbb
in
cmp
and
push
jnp
lcall
jb
dec
push
pop
jge
bnd
shr
stos
shll
cmp
scas
mov
int
arpl
sub
arpl
pop
call
xorb
fdivl
jne
xchg
cld
pop
inc
jle
cld
or
sbbl
mov
lret
daa
xchg
push
loope
fs
int
addr16
in
test
shrl
out
iret
shl
std
jp
fdiv
jnp
lock
pop
out
jg
popf
subb
std
dec
idiv
inc
test
out
mov
arpl
push
or
xlat
ret
dec
inc
inc
pushf
mov
roll
push
vpmulhw
cmp
in
dec
xor
cmp
cli
sahf
mov
cmp
aam
pop
mov
inc
pop
outsl
cmpsl
mov
lret
pop
dec
psraw
sbb
jg
repnz
mov
mov
jmp
jns
xchg
sbb
cmp
jecxz,pn
insb
out
mov
adc
in
push
into
adc
mov
jb
cwtl
mov
addr16
jg
inc
xor
cmp
lock
andb
popa
cld
fcom
stc
lods
outsb
aaa
je
daa
int
lcall
ret
jmp
pop
bound
inc
decb
jl
gs
adc
ds
cltd
mov
cmp
mov
jl
in
jle
push
mov
loop
repnz
insb
or
outsb
bound
jp
movsl
leave
xchg
shlb
cwtl
jp
insl
cmp
lret
arpl
pop
and
xchg
push
shll
xchg
inc
inc
pop
push
fwait
mov
mov
ljmp
mov
cmp
stc
push
shll
test
pop
mov
test
mov
jl
xchg
scas
pop
in
out
sub
jne
mov
test
mov
out
testl
xlat
mov
movsb
insb
sub
imul
mov
imul
mov
jbe
xchg
cmp
and
ret
xchg
pop
in
rclb
jns
dec
jl
cmc
mov
pop
dec
lret
push
imul
xchg
sbb
out
inc
in
shl
lds
fldt
scas
stos
pop
fldl
clc
popf
lret
push
je
cmpsb
insl
xchg
mov
imulb
pop
xchg
mov
out
mov
xchg
adc
sub
jge
add
add
scas
adc
push
or
test
adc
sti
xchg
inc
shl
subb
mov
out
adc
push
aam
push
jne
incb
ret
or
stc
sbb
sbb
leave
push
rcll
push
add
sub
pushf
ret
jl
lcall
outsl
xor
imul
rcll
mov
sub
arpl
sub
out
xchg
mov
clc
mov
adc
aaa
out
stos
aad
sbb
inc
ret
lods
aaa
daa
xor
rcll
push
into
xchg
fnstsw
cmc
or
mov
fs
push
adc
in
and
pop
jp
pop
mov
and
cmp
dec
sub
shll
cltd
das
les
dec
loopne
inc
inc
mov
dec
lea
mov
sbbb
pop
sti
add
pop
lret
sbb
data16
push
in
mov
mov
sti
or
xor
movsb
hlt
mov
imul
sahf
sbb
mov
mov
sbb
filds
and
ja
pop
or
pop
mov
popf
into
dec
pop
and
test
dec
movsl
sbb
ret
addl
pop
mov
adc
jmp
add
rorl
xlat
jp
std
in
insb
jge,pn
lcall
lahf
sbbb
shrl
jb
ljmp
pop
jmp
pop
dec
popf
test
int3
jne
jge
stos
xorb
push
push
decb
aam
mov
or
pop
ds
sub
ror
bound
sahf
jne
mov
movsl
adc
dec
sbb
add
inc
scas
fnsave
xchg
imul
pop
popf
adc
iret
aaa
lret
enter
decl
add
inc
push
fdivrl
or
mov
cmp
mov
xchg
mov
or
sarl
dec
push
test
jmp
ja
repz
ret
cmp
aaa
sub
jg
fldenv
push
inc
mov
add
fwait
push
out
insb
add
scas
fdivr
sub
das
inc
out
shll
fildl
fcom
add
mov
push
adc
push
pop
add
jo
idivl
and
sub
push
push
leave
xchg
or
scas
stos
mov
fistpl
cmc
lds
inc
pop
add
std
and
jge
lods
inc
sub
inc
pop
shll
stos
push
es
loopne
dec
outsl
sbb
cli
inc
mov
enter
mov
mov
out
addb
loop
mov
test
sbb
mov
ds
jno
and
sbb
in
fistps
rol
mov
stc
out
fisttpll
clc
lret
jg
xchg
mov
in
aas
push
ret
in
push
adc
jae
inc
gs
fiadds
hlt
scas
mov
js
std
mov
sti
pushf
ss
pop
xchg
clc
imul
xchg
cs
push
lret
push
inc
cmc
push
sub
jl
loopne
mov
ffreep
jl
pop
into
aad
mov
mul
lds
hlt
or
inc
and
addr16
xor
push
cmp
mov
mov
push
out
push
ret
mov
mov
in
hlt
outsl
or
stos
int3
aas
cmp
test
loop
loopne
adc
insl
je
aam
shrl
mov
cmpsb
arpl
jmp
cmpl
mul
shll
add
int
ret
jmp
sti
repz
mov
addl
lea
xor
xchg
bound
aad
mov
popf
int
fcomip
ljmp
imul
ud0
scas
or
inc
adc
daa
push
mov
and
add
cmpb
cmp
push
dec
pushf
lock
out
lods
add
pop
xor
or
sbb
sbb
lea
hlt
add
xchg
xor
lret
mov
pop
les
roll
or
decl
lock
int
fwait
lret
nop
lcall
in
in
push
in
inc
inc
pop
inc
enter
xchg
or
mov
jo
sub
sti
jae
cmpsb
fs
push
das
xchg
dec
sbb
ds
call
rclb
insl
les
dec
push
mov
cmp
sub
cmc
dec
and
stos
dec
ljmp
fs
imul
in
stos
ret
std
adc
jg
push
movsl
ret
lret
gs
mov
jbe
mov
mov
inc
mov
or
xorb
bound
adc
mov
int3
jle
test
adc
test
out
pop
out
outsb
aad
addl
jl
negb
pop
sbb
clc
fcmovnu
leave
dec
cmp
loop
ss
ds
arpl
insb
insb
lcall
push
pop
jle
testl
inc
adc
cmpsb
out
mov
ljmp
pop
mov
pop
data16
jp
jl
sbb
adc
idiv
xor
out
popa
push
call
imul
inc
in
push
cltd
push
jo
ret
mov
and
ret
jnp
dec
pop
pop
cmp
xor
jmp
popa
into
mov
mov
ds
and
pop
mov
pop
test
cmp
mov
cmp
insb
cli
add
jbe
xor
ss
movsb
sbbl
ljmp
test
add
lods
lret
dec
push
sbb
je
cwtl
lods
mov
rcr
push
jge
adc
add
fcmovne
int
sub
cli
inc
add
stos
dec
mov
xchg
and
out
sbb
icebp
enter
add
push
mov
inc
mov
arpl
mov
imul
mov
pop
adc
xchg
push
sub
mov
divb
dec
fistps
std
xor
bound
jmp
xor
xchg
mov
out
push
cld
ljmp
pop
ret
dec
fsubl
in
movsl
fbstp
cmpl
arpl
fists
inc
sub
pop
mov
pop
mov
and
xchg
push
jge
sbb
jg
xchg
mov
pop
jl
ds
push
add
std
cmp
ss
nop
dec
pop
sub
dec
pop
dec
sbb
cmp
test
int
jne
stos
dec
cmp
movsl
int
scas
and
pop
cmp
test
movhps
push
test
push
or
enter
out
das
mov
es
xor
adc
mov
dec
inc
push
fnsave
nop
mov
mov
mov
jle
jmp
stos
xchg
adc
test
test
push
dec
dec
rcll
dec
and
adc
or
xchg
mov
fwait
jl,pn
bound
push
and
and
mov
gs
sub
lret
rolb
jge
xchg
xor
scas
xchg
sbb
sbbl
inc
jne
cmp
ds
enter
loopne
fwait
ror
movsl
dec
andb
push
push
pop
lret
mov
in
fnstsw
rcrb
mov
test
imul
out
aam
xlat
fstl
into
jmp
cs
out
push
rep
mov
sub
fstl
add
sub
es
inc
push
out
shr
inc
idivb
outsl
fcoms
lods
mov
push
lods
and
mov
add
mov
mov
cmc
or
mov
outsb
mov
add
sbb
outsb
cmp
cmc
icebp
jb
jae
pop
cmp
in
jnp
mov
inc
hlt
roll
or
aad
sub
mov
lahf
hlt
sub
popf
outsb
jle
stos
cmpsb
push
into
cli
lock
mov
cmp
popf
dec
cli
pop
push
jno
fcoms
dec
sub
and
and
xchg
and
lret
add
adc
sbb
mov
jp
enter
je
mov
cmp
dec
mov
or
xor
insl
and
stos
aad
int3
pop
push
daa
pop
in
mov
pop
insl
xchg
mov
xchg
sbb
jb
sahf
cmp
rcrb
dec
cmp
iret
ret
je
iret
inc
pop
push
and
mov
mov
sbb
mov
adc
jno
adc
fmuls
outsl
loopne
push
data16
gs
aad
lahf
cmpsl
stos
aam
mov
movb
cmp
dec
loop
jle
dec
sub
scas
cmp
jp
cmp
popf
test
mov
pop
in
mov
cmpsb
push
out
mov
int
xchg
mov
mov
fistps
mov
imul
push
push
ljmp
icebp
jae
adcl
xchg
add
adc
cltd
cltd
orb
mov
xchg
push
out
outsl
mov
jbe
cmc
xor
sub
mov
je
imul
add
orl
sti
adc
add
xchg
cmp
xor
push
clc
inc
jnp
ret
bound
add
scas
push
inc
dec
adc
pop
dec
test
cmp
sub
scas
pand
jne
out
add
xchg
sub
pop
and
mov
cli
inc
add
mov
jge
cmpb
xor
aam
sbb
sti
mov
mov
jns
and
mov
push
dec
jge
in
addr16
scas
daa
pop
test
ret
lods
adc
ret
jo
aam
adc
fcomi
mov
push
in
xor
scas
stc
stc
jns
mov
jg
fbld
xchg
mov
xchg
cmp
sarl
adc
les
rcl
dec
push
mov
mulb
push
gs
jno
rcrl
xor
inc
movsl
in
or
jns
adc
fwait
xlat
stc
mov
out
sbb
dec
sbb
int
scas
repz
push
loop
movsl
inc
mov
fldl
imul
mov
test
outsb
cmp
dec
pop
cld
pop
push
cwtl
out
xor
xor
insl
lock
in
insb
dec
jno
bnd
mov
add
xor
call
cwtl
xor
pop
or
and
test
xchg
or
in
gs
daa
jne
jae
jge
cwtl
sbb
xchg
ds
mov
addr16
cltd
cltd
add
cmpsl
adc
pop
orb
in
imul
pop
cmp
insl
insl
das
jge
cs
adc
cs
mov
ret
mov
mov
cmp
push
and
mov
mov
bound
add
loopne
sbb
les
jg
sbb
insl
dec
lock
jne
cmpsb
test
adc
dec
push
push
shlb
nop
lahf
in
inc
push
and
inc
sub
fisttps
sbb
push
mov
cmp
movsb
and
xchg
fbld
xchg
int3
mov
in
sub
sbb
testb
mov
sbbb
outsb
pop
add
sbb
adc
ret
fnstsw
adc
hlt
mov
pop
sub
insl
adc
inc
mov
insl
jnp
cmpsb
clc
sahf
sub
les
scas
cmpb
call
inc
inc
aam
mov
and
adc
adc
push
int3
insl
aad
adc
add
stos
sbb
test
sub
xchg
inc
out
test
adc
jl
sub
dec
dec
mov
dec
inc
push
xlat
je
loopne
sti
add
shr
add
ficoml
pusha
cmpsb
ret
movsl
inc
pop
rcrl
out
pushf
shlb
popa
sbb
push
mov
pop
sar
add
sbb
das
dec
xlat
lret
stc
addr16
lret
mov
cmp
insb
in
jg
popf
jle
mov
imul
pop
mov
lds
add
test
ljmp
push
cmc
push
mov
loop
mov
sub
push
jle
into
loop
imul
int
lock
add
jge
inc
xor
xor
pop
dec
loop
outsl
jl
sbb
scas
xchg
mov
outsl
xchg
gs
icebp
adc
sbb
loopne
sbb
mov
jecxz
mov
xchg
mov
fwait
push
mov
int3
or
adc
in
sarb
adc
xchg
imul
cmp
dec
arpl
push
push
cli
daa
mov
sbb
adc
sbb
mov
imul
add
je
cmp
loopne
xchg
loopne
scas
push
fcompl
xor
jno
lods
cmp
xor
fsts
inc
jo
and
hlt
xlat
inc
lret
and
fs
xchg
fmul
pusha
inc
jb
mov
lea
divb
divl
test
xlat
test
popa
pop
testl
clc
int
jg
mov
mov
subb
mov
xor
and
cmp
xchg
mov
and
adc
sbb
pop
xchg
cwtl
je
inc
xchg
mov
push
xchg
in
icebp
testb
out
loopne
mov
imulb
filds
jecxz
sub
and
mov
sub
test
sbbl
int3
fs
jle
neg
out
outsb
arpl
mov
or
test
out
jg
jb
push
dec
sbb
pusha
jae
xchg
ljmpw
sbb
jl
scas
jmp
xchg
cmc
xor
notb
sub
push
xchg
in
or
xor
stos
push
test
pop
out
outsl
mov
adc
test
shrl
or
cmp
test
mov
jecxz
push
insl
mov
das
rorb
addr16
cmc
inc
dec
loop
jb
adc
pop
mov
xchg
hlt
jnp
cmpsb
sub
add
mov
inc
and
xchg
ret
cmc
pop
xchg
or
ret
sbb
lods
aam
jnp
cwtl
inc
stos
inc
repnz
fbstp
enter
call
cld
add
and
fstl
mov
nop
or
icebp
fnstcw
imul
enter
inc
mov
inc
sub
add
cmc
sub
push
add
mov
push
pop
movsl
ss
insb
les
push
push
sub
adc
mov
ret
ss
or
gs
add
mov
loopne
sbb
dec
out
fldl
xchg
lcall
pop
vcvttsd2si
stc
jl
jmp
xlat
rcl
mov
repz
xlat
xchg
aad
out
clc
adc
cli
mov
pusha
fidivs
cmp
mov
jnp
and
repz
mov
push
push
xchg
lcall
mov
push
pop
in
movsl
pop
jmp
mov
push
cli
pop
xchg
into
add
push
sub
cli
pop
jne
lret
fs
imul
sti
js
ret
xchg
sbb
mov
je
out
int3
cld
xor
cmp
pop
out
jge
push
add
fwait
fdivrs
xchg
sahf
sub
or
int3
iret
aad
test
insb
add
mov
lods
iret
movl
fs
sbb
and
shl
jecxz
push
call
add
iret
sbb
adc
test
mov
pop
push
inc
in
lock
pop
jmp
iret
push
or
jg
dec
push
push
shl
out
mov
sbb
ds
fstpt
jnp
lahf
call
or
lds
adc
xchg
in
xlat
jo
add
sbbl
xchg
int3
xor
pushf
out
or
shr
inc
xor
pop
inc
cmpsb
shrb
adc
sbb
xchg
xor
mov
push
mov
test
pop
sbb
mov
int3
aam
aas
or
inc
lret
sub
jle
jb
xor
mov
jl
jmp
mov
pop
roll
jmp
rolb
ss
loop
adc
sbb
ja
or
mov
sbb
inc
jle
nop
fmull
push
xchg
cmpb
dec
rol
out
int
in
xlat
dec
cmpsl
mov
jmp
xchg
into
hlt
dec
pusha
popf
daa
add
enter
in
xor
popf
adc
jl
ret
mov
xorb
jge
lret
jl
movswl
jae
cwtl
out
or
das
sub
pop
mov
sub
jnp
insb
xchg
notl
push
subb
xor
jb
enter
insb
xor
in
in
cmp
mov
int
ret
fcmovb
xchg
mov
jae
aaa
fldt
jle
out
lock
and
cmp
inc
test
dec
daa
cmc
pop
arpl
pop
add
jb
dec
ss
imul
lcall
cmpsl
ret
jp
jge
and
jge
pop
outsl
pop
add
cmp
stos
mov
or
xor
and
repz
es
stc
xor
dec
cli
jmp
xor
in
rorl
es
fnstcw
movsl
mov
inc
ljmp
std
add
xchg
mov
cmp
dec
inc
mov
inc
rclb
pusha
lcall
int
fisubs
sti
xchg
data16
add
inc
rorl
enter
in
jbe
inc
repz
sahf
mov
scas
jbe
pop
xchg
cltd
add
out
and
push
xchg
xchg
and
mov
aam
into
inc
mov
out
call
push
sbb
or
movsl
lcall
loopne
mov
test
std
add
cmp
out
and
pop
and
xor
jbe
jno
jae
out
inc
dec
dec
sub
movsb
xchg
add
fsubr
sbb
and
pushf
dec
and
or
cwtl
sbb
xchg
call
xor
bound
int3
and
push
loop
scas
and
icebp
icebp
fisubrs
mulw
mov
xchg
jmp
sar
mov
pop
notl
xchg
movsl
jle
movsl
xchg
movsl
add
ss
movsl
inc
xchg
movsl
lret
lret
xchg
movsl
ja
sbb
push
push
dec
xchg
js
dec
loop
sub
out
mov
ljmp
xchg
in
xor
xor
cld
lret
insb
ss
jecxz
insl
das
test
push
adc
sub
lret
push
test
call
ret
loope
push
xorb
cmc
pop
push
pop
and
sub
jmp
dec
gs
lret
fiadds
adc
push
mov
mov
mov
jmp
loope
cmp
mov
movsb
cwtl
js
cmp
xchg
add
jg
xchg
out
dec
mov
pop
and
cmp
xchg
dec
movb
aaa
mov
dec
mov
dec
ss
or
inc
loop
add
aas
dec
jnp
stc
xlat
icebp
mov
xchg
adc
add
les
in
dec
jnp
dec
scas
mov
xchg
pop
jle
fwait
clc
mov
mov
mov
stc
adcb
data16
rcll
rcrb
fisttps
mov
dec
test
push
dec
jmp
mov
pop
mov
xor
ret
insb
add
mov
test
shlb
imul
xchg
mov
lret
ret
add
fstps
lea
ja
xor
push
bound
pop
push
or
ss
cld
lcall
dec
jl
inc
mov
iret
pop
test
xchg
loopne
adc
and
push
mov
sub
dec
inc
loopne
das
add
sbb
push
fcomp
sub
sbb
pop
add
imul
dec
lock
daa
sbb
cmp
movsl
mov
push
inc
sahf
inc
nop
xchg
pop
mov
cmp
jbe
jbe
pushf
push
inc
push
sub
jb
clc
mov
scas
push
push
push
test
rcll
js
inc
and
nop
das
jb
stos
nop
jl
sbbl
test
pop
add
xchg
into
jbe
mov
mov
inc
pop
mov
sbb
add
mov
adc
mov
or
jno
xchg
mov
andb
shlb
inc
lret
jno
mov
cwtl
ds
fimull
adc
in
shrb
mov
outsl
mov
push
ja
mov
mov
enter
pop
cmp
loope
mov
mov
das
mov
fdivrs
mov
mov
sarl
data16
std
and
insl
dec
test
ds
je
inc
or
sbb
mov
cmp
insb
dec
gs
xlat
sub
mov
cmpl
addr16
imul
pop
fwait
daa
shr
xor
mov
pop
xor
mov
aam
xchg
or
push
adc
shl
sub
leave
popl
fstps
pop
sarb
jl
sbb
je
movsb
dec
xor
adc
scas
fcomp
mov
sbb
mov
movsl
scas
jnp
push
lock
outsl
test
pop
dec
jl
ds
arpl
jg
xchg
mov
imul
sbb
push
push
fs
adc
push
pop
cs
fisubl
cltd
push
inc
ja
cmp
jmp
xorb
xchg
loopne
neg
add
mov
sub
fmul
inc
and
movsl
and
call
push
xchg
icebp
cmpsl
enter
and
jne
push
jo
fcmovbe
push
fscale
mov
push
sbb
jmp
aaa
and
xor
adc
jns
mov
push
xchg
lods
test
push
out
dec
ret
sbb
push
and
xor
push
push
mov
cld
pop
pop
inc
out
mov
pushf
js
xchg
mov
in
jbe
mov
repz
ljmp
rorl
insl
nop
in
lcall
dec
cmpsl
and
add
call
cli
movsl
inc
lock
mov
xor
rolb
dec
ret
gs
loope
addr16
adc
loope
push
mov
mov
inc
stc
push
mov
push
insb
lock
pop
filds
mov
jmp
iret
dec
stos
push
pop
cmpsl
out
lea
out
pop
shrb
paddsw
mov
imul
dec
lods
push
subb
fstl
fcomps
push
and
cmp
andb
mov
jae
cwtl
in
cmpb
fisubl
in
sbb
mov
sbb
jge
or
push
out
adc
cmp
sbb
jmp
add
and
das
jle
sub
insb
stc
push
jp
push
and
jmp
test
or
arpl
jmp
pop
cmpsb
ds
dec
mov
scas
incb
mov
push
mov
pop
mov
pop
jmp
mov
adc
inc
jno
cwtl
jl
lcall
and
ret
popf
int3
xor
adc
lret
jbe
pusha
ds
adc
add
sub
xchg
jae
ja
mov
cltd
or
add
data16
push
popf
adc
in
add
cmp
cs
rclb
int3
mov
xor
jl
insl
mov
test
and
or
lahf
or
xor
mov
arpl
pop
insb
or
and
mov
stos
and
adc
mov
stos
dec
or
ljmp
aaa
es
sbb
sbb
rcrl
add
nop
or
scas
jecxz
outsl
cmpsl
xor
xor
inc
pushf
movsl
add
lcall
xor
mov
lahf
xorl
lods
cmp
adc
dec
xchg
and
loope
es
mov
fstps
mov
fistpl
test
jl
mov
sbb
cmp
sbb
jns
fcmovnu
xchg
jecxz
pusha
jecxz
mov
jl
sbb
fwait
lahf
hlt
das
cltd
cld
fs
iret
lcall
les
sub
cmc
lods
lods
dec
imul
add
xchg
add
push
loope
scas
iret
mov
sar
enter
pop
cmpsl
mov
pop
mov
cmp
inc
mov
mov
cmp
ljmp
sti
xlat
or
insb
jle
adc
add
jl
cmp
mov
testb
faddl
push
daa
in
inc
lret
ja
out
jl
mov
shl
testl
sub
in
stos
cld
test
xlat
xchg
jecxz
and
xor
into
stos
es
gs
inc
sbbl
jno
adc
or
sub
or
mov
pop
mov
and
cmp
push
cmpsb
jb
gs
mov
or
rorl
data16
jmp
mov
fisubl
jmp
cltd
ret
pop
in
cmp
pop
jmp
in
leave
mov
add
fadds
clc
cltd
cmpsl
jge
sbb
out
bswap
pushf
or
scas
movsb
sarl
push
mov
add
std
das
cmc
add
lea
xor
inc
test
mov
decl
gs
je
outsl
push
ss
in
nop
pop
inc
addr16
xor
push
mov
lock
decl
loope,pt
loope
pop
adc
add
cld
sub
inc
loopne
lock
push
mov
mov
push
stos
push
push
mov
xchg
ljmp
sti
shll
jb
cmpsw
push
xor
push
rclb
xor
xchg
cmpsl
data16
shrl
pushl
test
into
xchg
scas
incl
lods
daa
and
xchg
rorl
roll
add
add
fimuls
iret
xor
shll
xlat
lds
push
xor
loopne
stos
or
inc
sbb
out
int
add
cltd
fs
mov
leave
scas
push
repnz
and
xchg
lret
icebp
fdivs
das
addr16
sti
sbb
mov
aas
inc
filds
shll
jns
inc
push
mov
inc
icebp
or
xchg
add
add
jne
jb
inc
rcrl
mov
ljmp
das
pop
fwait
lret
pushf
das
pop
inc
int3
cmc
add
push
add
jp
add
adc
fmulp
cltd
cli
mov
fnstsw
or
xor
aas
fnstcw
sahf
ret
movsl
es
fldenv
std
pop
js
ja
mov
int
out
sbb
or
mov
pop
xchg
xchg
stos
imul
mov
mov
pop
popf
loopew
subl
into
sbb
pavgb
nop
xchg
and
lret
push
insb
out
dec
push
add
or
mov
loopne
pop
sub
push
shrl
lds
lock
lahf
dec
pop
lcall
enter
std
xor
aad
adc
dec
in
lret
pop
scas
sar
or
lret
rorb
mov
mov
bound
lea
cmp
and
mov
push
pop
ss
aad
jmp
ficompl
mov
mov
mov
cmp
arpl
dec
rep
sub
sbb
pop
mov
out
call
sahf
stos
imull
in
sarb
movsl
mov
faddl
repnz
sub
shrl
cltd
fwait
imul
out
test
popf
movsl
movsl
mov
lahf
pop
cli
push
inc
in
adc
xor
xlat
loop
adc
shll
push
push
jle
cli
les
or
dec
jnp
and
dec
xor
jno
aas
cmp
jne
sbb
repz
sub
inc
rorb
testb
stc
sbbb
cmp
cwtl
pop
jp
cmc
hlt
cmp
aas
lea
lcall
adc
mov
or
jae
inc
cmp
scas
xchg
xor
and
int
negb
push
cmp
std
clc
xchg
inc
shrl
insl
sbb
sub
push
std
and
repnz
sbb
and
divb
cmp
ret
xor
pusha
testl
pop
xchg
insb
sub
and
aas
loopne
mov
ficoms
aam
je
xchg
push
unpcklps
and
in
out
adc
arpl
ret
add
es
push
test
push
dec
mov
aad
je
or
ret
outsl
insl
add
cmp
repnz
jp
ret
jecxz
idivb
add
ja
mov
aaa
fcmovu
adc
pusha
out
scas
mov
and
aam
jnp
push
lods
ret
notb
cs
mov
cmp
push
aad
inc
cmp
or
xchg
ret
sub
mov
and
xchg
dec
sarb
movsl
cmpsl
mov
popa
pop
test
test
lods
xor
xor
leave
repnz
scas
cmp
pop
das
ret
aas
hlt
lea
in
add
push
repnz
dec
or
cli
shlb
sub
ret
movsl
sub
jg
bound
mov
aam
mov
push
mov
and
imul
sub
inc
mov
pusha
lods
push
cmp
mov
sub
xor
pop
inc
imul
bound
popa
ss
aas
test
sub
cmc
or
xchg
fcompl
insb
bound
pop
hlt
ret
pop
sub
push
jmp
imul
pop
popa
pop
fs
outsl
push
inc
out
ja
xor
test
mov
fadds
shlb
push
or
inc
leave
xor
popa
xor
add
loope
rcrb
hlt
pop
cmpsb
adc
push
and
movsb
test
and
pop
insb
das
jne
lods
loope
sahf
adc
pop
pop
addb
test
adc
es
movsl
rcll
inc
mov
arpl
in
sbb
pop
sbb
fadd
xchg
push
push
sub
inc
xchg
xchg
sub
mov
out
jp
cmp
ja
std
push
jo
int
repnz
fists
cltd
xchg
dec
ss
mov
mov
adc
les
and
mov
dec
mov
jo
sarl
in
jge
repnz
mov
mov
test
mull
out
out
xorl
or
lea
je
dec
adc
jnp
fisubrs
mov
sahf
ret
cmp
add
fsubl
je
adc
sbb
mov
xorl
je
sub
sub
mov
push
out
imul
dec
lret
stos
sbb
out
imul
mov
repnz
repz
out
mov
fadds
add
lret
loopne
jno
hlt
test
std
or
shll
adc
popa
call
jmp
cmp
in
pop
mov
dec
mov
imul
jno
mov
sti
es
sbb
jo
or
add
mov
out
ret
test
shrb
pop
cld
or
pop
mulb
lcall
pop
add
add
jbe
out
add
mov
and
dec
shr
notb
mov
add
xchg
pusha
scas
add
adc
scas
add
mov
dec
orl
icebp
addr16
jbe
fdivrs
scas
leave
pusha
pop
add
cmp
jmp
movb
cmp
loope
and
shlb
sbb
arpl
or
pop
or
pop
adc
push
jo
pusha
xor
push
or
inc
and
lods
loopne
sbbb
loope
mov
inc
pop
sub
lds
cmp
or
jecxz
je
or
ljmp
pop
scas
loopne
or
movsb
rcr
out
scas
movsb
filds
adc
mov
cld
push
jo
push
rol
rcll
add
pop
ja
cmpb
notl
fwait
adc
push
bnd
fsubl
xchg
je
cmpb
sarl
out
pop
and
sub
jnp
sbb
jbe
clc
fcmovnb
in
push
rol
add
dec
fcoml
sbb
sub
adc
pop
mov
mov
add
jo
jle
and
sbb
mov
lock
and
pop
xchg
sbb
aam
dec
test
jno
add
and
xchg
jecxz
sub
test
icebp
or
mov
dec
cld
fisttpll
cwtl
xor
dec
mov
ret
out
lcall
add
inc
ret
or
mov
mov
adc
fdivl
or
add
mov
sub
mov
rolb
rcrl
rolb
jecxz
rolb
mov
inc
es
loop
shrb
aaa
aad
stos
outsl
stos
sub
sub
outsl
sub
dec
dec
pop
pop
or
inc
insb
adc
fnstsw
mov
inc
pushf
mov
mov
or
pop
sub
dec
sahf
out
insb
cmp
fstpt
stc
nop
mov
dec
push
lock
jns
sub
testl
lds
mov
or
inc
jo
dec
or
rol
or
scas
mov
test
mov
push
adc
sbb
and
sub
daa
into
stos
fldcw
enter
lahf
adc
icebp
cmpsl
imul
scas
insb
and
or
mov
mov
and
dec
cli
sahf
or
in
add
push
iret
rcll
lods
and
sbb
dec
fidivrl
pop
sub
dec
jmp
dec
dec
jmp
jmp
cmp
sarb
jge
fldcw
inc
adc
outsl
ret
sbb
int
rcrl
jp
adc
decl
pop
pop
and
dec
jmp
pop
out
or
xor
cs
add
jae
inc
mov
into
xchg
and
lds
jl
out
leave
lcall
pop
jmp
pop
jb
outsl
test
arpl
repz
in
and
inc
scas
movlps
mov
xor
mov
in
test
bound
hlt
nop
mov
jecxz
and
sbb
out
outsl
cmpsb
xlat
lock
call
push
fcomps
inc
mov
mov
cli
cmp
xor
sahf
data16
cli
outsl
or
push
push
rcrb
lcall
sti
sub
repz
repz
lock
adc
xor
cmpsb
repnz
jne
inc
mov
or
cmp
cmp
negl
pop
inc
pop
aaa
xor
and
mov
ret
cmp
aas
xor
and
rorl
lods
inc
call
shr
or
jge
mov
test
push
test
mov
jns
ds
shlb
das
aam
sarb
mov
test
mov
mov
ret
push
das
xor
mov
test
call
test
sarb
or
andb
decb
pop
dec
shlb
xor
adc
sub
rcrb
add
inc
sarb
xor
adc
adc
dec
sarb
subb
sub
push
stos
into
sub
mov
insb
push
outsb
inc
call
mov
sub
insl
add
int3
push
out
into
lcall
or
shl
aad
hlt
int3
mov
ss
jns
sbb
dec
and
xor
cmpsl
pop
addr16
popf
cmp
flds
roll
cs
gs
jecxz
gs
popf
xor
out
xchg
xchg
cmp
lods
lock
inc
jg
inc
imul
outsb
sbb
fnstcw
insb
hlt
daa
sub
pop
stc
xor
outsb
out
jnp
outsb
outsb
fbld
clc
std
inc
jp
outsl
jne
rol
jge
mov
pop
lock
sub
sahf
stos
nop
add
pushf
cmp
loope
repz
cmpsb
fdiv
testl
pop
clc
sub
lahf
xchg
pop
dec
cmp
xchg
jae
clc
sahf
add
jnp
mov
fdivrs
scas
jmp
jnp
test
mov
shlb
paddsb
shr
mov
xchg
orl
cmp
leave
loopne
les
popl
int
out
push
fimull
mov
in
mov
in
jns
push
and
pop
cld
std
jl
pop
xchg
sub
out
int
sahf
xchg
in
stos
sbb
jg
inc
inc
mov
cmpsb
cmp
mov
mov
and
ficompl
push
out
mov
lahf
daa
sub
outsl
mov
and
imul
inc
out
mov
sarb
mov
mov
inc
and
lahf
popf
cmp
iret
int
lret
fsubr
jae
divb
decl
je
sub
ljmp
out
cmp
sub
mov
enter
lret
mov
and
mov
pop
xor
jmp
push
test
test
adc
insl
sub
inc
into
cld
imul
inc
arpl
sbb
push
jle
xor
movsl
es
cmp
xor
jg
pop
pop
or
or
ja
mov
jge
mov
jl
ja
and
jg
rcll
sbb
dec
popa
notb
xchg
outsb
into
in
ljmp
outsb
fadds
xor
xor
push
xchg
push
mov
adc
ljmp
xchg
lock
and
scas
sahf
and
push
lock
rcll
sbb
cmp
shlb
cmpsb
jge
adc
xor
jecxz
ja
out
sub
int
std
mov
or
enter
out
add
inc
sahf
push
and
lds
mov
shrb
aaa
mov
stos
stc
lods
sbbl
fucomp
sub
out
in
cwtl
insb
mov
out
js
daa
xor
xchg
push
arpl
add
dec
test
add
pop
jp
mov
jp
cmp
push
call
popf
js
jp
ljmp
add
xchg
sub
pop
aas
or
mov
xor
push
dec
mov
cmpsb
ret
test
mov
sti
ret
loopne
mov
lret
lds
lret
dec
int3
push
jae
or
adc
pushf
cmp
clc
outsb
les
jl
cli
data16
push
incb
jg
pushl
les
mov
jecxz
sub
dec
adcb
inc
les
adc
cli
lea
mov
cmp
mov
inc
lods
lahf
adc
jmp
add
mov
rcrb
or
rclb
mov
or
insb
cs
xor
sub
and
inc
pop
jne
jno
cwtl
and
sub
idivb
les
add
xchg
andl
fstpl
daa
inc
mov
add
mov
aad
shrl
xor
or
or
shl
cmp
scas
test
mov
js
sarb
outsb
xor
jno
adc
sbb
aam
mov
mov
and
xor
add
sbb
hlt
mov
xlat
stc
mov
lcall
out
adc
movsl
inc
insb
cmp
out
xor
jne
mov
xlat
icebp
adc
jb
cmp
jno
popf
jne
mov
mov
gs
dec
xor
bound
mov
in
sub
xchg
jl
sbb
in
adc
daa
jge
pop
pop
mov
pop
popa
ret
movsl
xor
pop
ja
pop
push
push
cmc
inc
into
mov
mov
pop
imul
pop
pop
inc
xchg
adcb
mov
jp
jge
mov
je
stos
sub
sub
mov
std
cmp
and
sbb
sti
mov
sub
popa
dec
xor
nop
outsb
ret
in
nop
push
mov
pop
push
xor
shr
movsl
cmp
xor
nop
iret
lock
xchg
sbbl
sti
icebp
dec
jmp
daa
jbe
dec
push
pushf
add
inc
xchg
sbb
in
jno
inc
mov
mov
mov
cmp
sub
icebp
pop
lret
mov
ficompl
sub
inc
shll
scas
mov
test
in
push
imul
enter
popa
mov
dec
or
outsb
mov
push
push
add
bound
add
xchg
test
push
in
pop
xrelease
sar
dec
aam
arpl
shrl
or
or
push
mov
jg
push
sub
bound
int
dec
mov
fadd
pushf
sub
xor
adc
xor
sbb
mov
xor
sbb
push
sub
or
cs
or
hlt
rclb
sbb
subl
or
call
xchg
xor
adc
pop
fisttps
mov
push
fmuls
aas
test
xor
iret
push
fxch
pusha
scas
cld
ljmp
roll
call
adc
xlat
stos
insl
out
fcmovnb
push
sbb
jno
add
ja
lret
dec
lods
and
xchg
sbb
jnp
sbb
test
fimull
pusha
fcomps
pop
jmp
adc
lea
enter
hlt
ret
mov
ss
out
adc
lahf
outsl
clc
mov
stc
add
pop
loope
enter
or
int3
push
popf
dec
lock
push
mov
out
pop
cmc
jl
pop
and
jge
push
mov
aaa
pop
in
rcl
jle
orl
jecxz
cmc
ds
and
add
push
inc
fdivrl
inc
cmc
aaa
shlb
inc
jae
mov
aas
incl
imul
outsb
cld
adc
shrl
iret
inc
sbb
xlat
adc
ja
ret
pop
rol
bound
add
icebp
xchg
lret
jnp
rorl
sub
push
sbb
lods
sahf
adc
mov
fisttpll
jno
push
and
in
out
and
mov
pushf
outsb
arpl
inc
icebp
or
cli
nop
in
aas
xor
bound
sub
dec
shlb
dec
xor
jne
and
xor
cmp
sbb
rcll
jns
testl
adc
adcl
or
xchg
jo
xor
jns
mov
cmc
lea
and
fnstsw
push
hlt
xchg
icebp
fidivrs
lea
inc
out
fwait
push
nop
shlb
pop
xchg
jle
cwtl
adc
mov
mov
mov
pop
push
popa
push
push
mov
jl
mov
pop
xchg
test
cmp
xchg
dec
dec
or
nop
ds
movsb
in
pop
dec
loop,pt
aaa
xor
cmp
gs
mov
out
addr16
lods
push
xchg
jp
addb
int
jmp
push
and
jle
lcall
mov
lret
cld
pop
test
pop
fidivs
cmp
xor
jmp
clc
outsl
mov
pop
mov
sub
sti
cs
sub
inc
dec
decl
stos
icebp
xor
and
lret
xchg
mov
xlat
xchg
jmp
xlat
arpl
cmp
jb
adc
cmp
inc
adc
xchg
dec
stos
fsubs
roll
adc
into
les
bound
add
cld
add
ljmp
in
push
push
popf
lcall
inc
push
sub
divl
std
xor
xchg
int3
dec
clc
cmp
push
testb
cmp
adc
jne
sti
adc
push
bound
in
cmpsb
divl
pusha
mov
mov
aad
push
pop
jb
lret
jecxz
sub
flds
out
xor
cwtl
lock
int3
inc
xor
xchg
xor
lock
sar
sbb
rcrb
pusha
push
jbe
jno
lret
sbb
leave
js
inc
or
push
or
push
test
out
pop
ljmp
push
rcr
fbstp
js
scas
bound
xor
dec
inc
outsb
clc
ret
adc
pop
lcall
daa
sbb
dec
movb
mov
dec
pop
jge
fwait
mov
xchg
loope
cmovb
fisttpl
pop
mov
and
and
cmp
movl
jl
cmc
outsl
cli
add
mov
das
or
pop
loopne
add
lcall
cmpsl
and
push
lock
lahf
test
sbb
xchg
aam
mov
fisttps
and
imul
icebp
imul
jb
inc
fcoms
ret
xor
xchg
inc
shll
or
inc
pop
and
pop
or
mov
ret
clc
dec
mov
test
push
inc
push
cmc
out
lcall
sbb
push
icebp
int
mov
addr16
push
and
in
cmp
add
mov
and
lods
mov
xchg
bound
push
ja
push
sub
loope
or
xchg
data16
ljmp
or
test
xor
ds
les
shlb
jmp
fsubs
mov
add
out
sbb
cmp
data16
decb
cmpsb
stos
lea
out
mov
xor
add
mulb
pusha
xchg
mov
jb
fisubrl
mov
movsb
xor
and
jg
xor
popa
sub
push
popa
ja
fsubrs
sub
jge
out
xor
dec
dec
sub
int3
loop
cmpsl
mov
mov
inc
dec
out
hlt
es
mov
movsl
sbb
clc
addr16
push
lods
xorb
add
fiadds
jnp
cmp
xorl
add
inc
subl
mov
loopne
int3
ljmp
cmp
dec
inc
inc
jbe
loopne
or
push
pusha
shrl
jo
fisubs
sarb
es
or
insl
xor
pop
sbb
add
cmpl
lcall
jno
inc
fsubs
sbb
stc
sbb
enter
bound
adc
push
mov
cmp
lcall
mov
in
push
bound
xchg
sbb
jbe
sbb
and
add
xchg
cmpb
dec
cmp
xchg
lods
add
push
jnp
mov
pop
pop
shll
jge
aam
call
out
repnz
add
pop
dec
mov
loop
fs
movsb
add
lret
dec
fs
lret
adc
xor
cli
mov
jae
sub
mov
scas
mov
mov
pop
jge
jmp
sub
loop
pushf
orl
xor
shll
je
call
pop
in
jmp
xchg
les
imul
rcr
sub
test
add
lea
ljmp
and
sub
cmp
xchg
incb
out
mov
or
sahf
insl
jg
inc
stc
cmp
xchg
ret
and
test
int3
cmp
add
test
pusha
xchg
jns
adc
sub
pshufhw
add
adc
aaa
cwtl
push
loopne
imul
stc
cmp
mov
sbb
pop
inc
sub
sub
mov
adc
jns
gs
push
push
push
mov
nop
lahf
outsb
adc
jecxz
mov
es
pop
mov
adc
mov
dec
adc
repz
sub
cmpsl
dec
adc
or
test
pop
xchg
pop
out
cmpsl
iret
jnp
arpl
mov
in
lea
mov
insb
lods
loope
icebp
in
and
repz
sbb
test
jae
fmull
mov
xchg
pushf
xchg
jno
enter
notl
jo
loop
nop
lea
je
xchg
xlat
push
sub
int
gs
and
shrb
ss
andb
popa
cmp
or
mov
add
add
inc
mov
out
mov
roll
cwtl
out
adc
mov
dec
int
arpl
sub
in
pop
ss
in
jl
fstps
mov
add
sbb
popa
mov
xorl
loop
sub
dec
bound
lea
add
mov
shlb
sbb
sub
xchg
mov
fs
inc
mov
sti
or
enter
insb
xor
stos
xorb
mov
stos
loopne
je
fnstcw
mov
fcmovnu
mov
add
inc
lods
scas
insb
int3
push
fs
push
jle
mov
mov
mov
xchg
lea
fisubl
mov
and
shlb
adc
xchg
jp
stc
test
sbb
mov
cmp
inc
cmp
in
and
sti
popa
psubq
pusha
jb
and
clc
dec
dec
pop
and
in
add
aad
mov
sbb
xor
jne
and
outsl
into
add
lds
loopne
mov
or
push
in
insb
lcall
je
test
xor
in
or
sahf
int
insl
out
addb
cli
pop
or
xlat
lock
lds
push
negb
test
shl
or
pop
adc
mov
mov
mov
das
aas
aad
push
enter
pop
inc
jo
in
sbb
xlat
sbb
pop
jecxz
imul
les
pop
in
into
mov
insl
pop
insb
std
or
jbe
and
sub
or
movsb
sub
fwait
data16
xor
mov
call
in
arpl
or
imul
scas
test
jo
xor
scas
cwtl
cmc
jl
mov
push
pop
fimull
fisubrs
push
cmc
arpl
or
in
in
lods
mov
inc
pop
push
add
pushf
push
mov
call
fstl
fcmove
div
addl
dec
aas
arpl
lods
mov
adc
icebp
fadd
mov
xchg
in
out
jns
loop
outsl
ds
mov
jg
mov
sbb
outsl
out
repz
dec
hlt
adc
xlat
imul
jbe
or
push
lock
jo
mov
dec
fisttpl
mov
loop
shlb
or
imul
stos
bound
inc
arpl
into
lahf
add
add
mov
fdiv
addb
cmp
inc
ljmp
xchg
inc
call
push
add
iret
fwait
push
jge
or
cltd
sub
loope
cmpsl
mov
fcmovne
aas
lret
inc
sbb
inc
inc
ficompl
push
ja
loope
mov
sub
pop
mov
or
je
lret
sbb
ret
mov
shr
std
push
inc
in
pushf
scas
inc
push
bound
mov
out
jge
clc
mov
mov
test
int
lds
sub
adcb
inc
inc
pop
js
pusha
iret
shrl
out
push
outsl
cmpsl
jnp
iret
arpl
or
xchg
aaa
jl
test
pop
jbe
add
mov
je
pushl
hlt
fdivrs
xchg
aas
sti
daa
mov
movsb
lcall
in
jmp
xchg
std
sbb
lret
dec
test
xor
lahf
jbe
sub
mov
xor
out
decl
sub
jne
or
cmp
pop
aad
loop
scas
pusha
xor
roll
inc
outsl
leave
popf
out
call
and
insl
cwtl
into
inc
or
rol
xchg
xchg
outsb
outsl
sbb
aaa
in
push
loope
mov
je
in
push
les
enter
mov
xor
dec
adc
cmp
out
jp
dec
sbb
xor
popa
add
in
icebp
xor
sahf
mov
std
incl
dec
hlt
mov
xchg
nop
in
mov
jae
das
mov
xor
cld
fcmovnb
cmp
outsl
outsb
mov
jno
mov
cmp
adc
dec
or
repnz
insl
xchg
mov
dec
sub
dec
int3
ret
pop
repnz
pushf
mov
and
jae
and
nop
inc
and
dec
arpl
sub
imul
xchg
mov
scas
and
push
loope
fwait
aas
stos
jp
outsb
mov
pop
adc
decb
out
pop
imul
xchg
jne
dec
push
or
dec
or
fstl
cltd
ss
enter
addr16
mov
fsts
les
andb
adc
and
loope
shlb
lahf
sub
movsb
jbe
jmp
xor
adc
sbb
or
outsb
rcrl
mov
adc
push
mov
adc
inc
leave
lahf
aaa
jbe
xchg
mov
push
clc
mov
idivl
dec
add
mov
mov
dec
imul
insl
cmp
sahf
inc
shrl
stc
sbb
in
cmp
es
leave
pushf
ret
cs
daa
scas
hlt
adc
inc
pusha
mov
insb
lea
or
int3
mov
cmp
and
stos
daa
and
inc
dec
rorl
popf
stc
pushf
mulb
or
sub
call
jne
xchg
fistpll
xchg
std
mov
notb
ljmp
jb
in
arpl
jbe
mov
or
push
lock
jns
or
rorb
jecxz
lcall
and
aas
cmp
ja
jmp
dec
into
bound
xchg
pop
lds
push
and
test
adc
cmp
aaa
loopne
dec
fldenv
sbb
jnp
push
push
icebp
test
sahf
xchg
jge
insl
pop
cwtl
mov
xchg
or
push
or
pop
jl
mov
cmpsl
leave
pop
nop
rorl
mov
addb
lds
fsubrs
negb
sti
dec
lds
fsubrs
adc
pop
mov
sub
cmp
push
in
xor
fists
mov
pop
sub
lret
mov
in
inc
lds
push
in
push
adc
push
lds
push
insb
mov
movsb
fmul
adc
mov
jmp
cmp
jp
stos
mov
lds
adc
mov
push
test
int
leave
repnz
movsb
addr16
cmp
mov
dec
push
xor
jle
shll
mov
lea
cmp
lret
hlt
jne
mov
push
insb
in
push
xor
mov
std
xchg
mov
jae
jge
dec
mov
int3
mov
cld
push
pop
iret
out
push
scas
push
xlat
mov
and
cmc
xchg
cmp
inc
stos
inc
sbb
pop
ja
jecxz
push
fadd
cmpl
repz
mov
outsb
gs
stc
jne
pop
testb
mov
ret
lcall
cmpl
push
xor
lret
mov
ret
sbb
testl
bnd
repz
icebp
fisubrs
sub
pop
imul
inc
ret
push
pop
shlb
jmp
mov
int3
out
and
cmp
jg
outsb
insl
push
hlt
adc
frstor
addb
jmp
xor
sbb
ss
and
insl
leave
dec
and
iret
cmp
push
fwait
mov
adc
stos
xchg
sub
mov
mov
dec
mov
dec
or
jge
adc
adc
rolb
imul
add
dec
leave
fs
push
sbb
inc
sbb
xchg
sbb
jae
into
and
mov
mov
fsts
leave
mov
dec
pusha
jmp
mov
in
add
dec
xor
das
fstpl
push
movsl
imul
jnp
aad
fs
es
pop
and
xchg
and
mov
mov
daa
fildll
xor
das
or
outsb
arpl
jns
xlat
inc
mov
sbb
cltd
sbb
ss
in
push
rorb
in
hlt
mov
pop
fbld
repnz
inc
xor
mov
dec
cmp
jg
out
addr16
scas
xchg
pop
jl
xor
stos
sub
popa
shrb
pop
popf
lods
sub
jmp
inc
push
iret
fstpt
inc
dec
aas
pop
sub
xor
or
jl
rorl
push
adc
adc
xchg
push
inc
dec
jnp
repz
gs
scas
hlt
fsubr
icebp
mov
ja
mov
cmp
sahf
js
dec
push
adc
jl
inc
xchg
pop
dec
daa
mov
inc
mov
sub
dec
popf
movsb
into
and
bound
incb
in
pop
inc
pop
sbb
dec
je
add
and
mov
inc
pop
insl
dec
mov
shll
cli
mov
xchg
jmp
scas
adc
sti
fld
nop
lcall
subl
mov
aad
cld
mov
jge
test
movsl
add
scas
add
add
mov
dec
pop
push
mov
pop
dec
or
and
mov
icebp
inc
jo
out
mov
cmpsb
mov
adc
lods
xchg
mov
cmp
sahf
add
pop
and
pop
jno
adc
mov
ss
hlt
ljmp
pop
or
xor
push
pusha
mov
in
ret
icebp
dec
stos
jmp
addb
pop
daa
mov
jno
aas
pop
outsl
xchg
int3
and
sti
pusha
inc
std
push
mov
shr
or
lods
or
mov
adc
jo
imul
cmp
cmpsb
mov
push
sub
iret
and
mov
aas
adc
mov
xor
shrb
fisubs
cli
roll
pop
pusha
xor
push
jle
inc
cmpl
adc
out
inc
das
jnp
pop
clc
and
add
mov
nop
out
add
cmp
sub
repnz
mov
sbb
jno
jne
ss
sub
push
push
mov
xchg
in
lea
out
call
aaa
lcall
clc
ja
out
mov
divl
pop
es
push
sub
cltd
push
leave
pop
mov
inc
push
dec
rcr
inc
in
jecxz
ljmp
or
xor
gs
scas
imull
jp
sub
xor
inc
fsubl
fidivrs
push
cmp
jno
jecxz
aas
push
jae
cmpsb
jl
xchg
xchg
outsl
mov
mov
cs
rcrb
popa
imul
orb
jb
test
or
pop
adc
cld
loop
call
sbb
inc
sbb
das
mov
xor
ds
sbb
rcr
psrad
loope
dec
jl
mov
cmp
jle
jns
dec
hlt
sbb
push
jae
push
mov
cmpsb
iret
sahf
icebp
cld
fdivrl
pop
jae
mov
and
pop
pushf
ss
and
mov
mov
sub
fisttpl
jle
ljmp
push
jbe
ret
cmp
pop
cmp
cmpsl
arpl
rolb
iret
dec
pushf
xchg
xor
xor
xor
hlt
jns
add
enter
rcl
mov
mov
shlb
shll
addr16
jge
aam
push
jmp
test
loope
add
jb
shlb
cmp
icebp
mov
lcall
pop
cwtl
or
xchg
sbb
rcll
cmp
mov
lock
bound
mov
xlat
sbb
xchg
mov
iret
dec
cwtl
pop
mov
add
mov
ret
xchg
outsl
or
jnp
les
jmp
jmp
or
orb
adc
imul
arpl
sub
jb
push
mov
add
mov
int
test
dec
pop
cmc
in
int3
lods
out
mov
mov
aas
or
iret
push
adc
adc
dec
fwait
mov
inc
dec
fidivl
push
xor
int
in
lahf
hlt
imul
jle
xchg
jle
out
ja
aas
fcomps
hlt
mov
inc
rorl
xor
lea
pop
jno
je
hlt
clc
jecxz
adc
dec
jmp
push
and
dec
aaa
rorb
fdiv
imul
clc
pop
dec
aaa
enter
xchg
imul
out
lcall
adc
ficoms
ja,pn
and
iret
aas
shll
xchg
xchg
fsubrp
imulb
clc
pop
dec
cmp
cmp
xchg
outsb
stc
xchg
cmp
js
cwtl
ret
rcl
inc
fidivrs
pop
or
mov
sub
je
hlt
xor
inc
cli
es
mov
test
mov
or
lea
cld
not
into
cld
push
dec
fwait
outsl
inc
gs
mov
aas
xchg
xchg
shll
lock
lret
mov
xchg
push
divb
mov
push
jmp
mov
cwtl
js
dec
pop
mov
cwtl
or
sbb
jle
pop
add
xor
cwtl
punpckhwd
movsl
cmpsl
dec
xchg
das
adc
dec
in
rol
lock
jb
mov
sbb
mov
jb
mov
ljmp
jo
add
and
xor
add
and
pop
in
xchg
loop
xor
pop
fnstcw
nop
add
imul
jno
adc
aad
out
inc
jle
stc
orl
repz
cmp
loop
sar
out
xlat
lcall
inc
lcall
jno
fsubs
mov
jnp
repnz
nop
cmpl
fistps
jecxz
shll
adc
sbb
in
mov
xchg
data16
or
cmp
ds
push
jo
frstor
inc
xor
repz
inc
sbb
mov
push
or
sahf
xor
insb
sbb
int3
lcall
pusha
fs
scas
icebp
pop
add
ds
cli
ret
scas
xlat
jg
mov
add
jnp
mov
push
mov
int3
push
xor
clc
push
fistpll
shlb
push
aad
xlat
in
stc
sbb
lret
jnp
sbb
arpl
in
rclb
outsb
popf
cmpsl
in
jge
xlat
test
xor
shlb
or
inc
fs
mov
fsubrl
rorb
mov
out
fistpl
jo
cmpsb
mov
addr16
fwait
prefetchwt1
fwait
stos
cmpsb
fbld
sbb
neg
aas
test
jg
mov
lods
inc
jb
cli
in
dec
push
mov
or
inc
icebp
ds
cmc
fdivrs
and
out
cld
xlat
dec
out
add
mov
loopne
lcall
jb
roll
mov
add
or
cmpsb
push
push
inc
repz
inc
and
fwait
cmp
cmp
mov
ds
or
xchg
stos
and
sahf
outsl
sti
mov
xor
xchg
arpl
cmc
lea
mov
push
jo
in
sti
ds
movsb
hlt
xor
mov
inc
fnsave
mov
scas
lock
icebp
pusha
es
loopne
jne
popa
mov
pop
int3
lret
sub
in
push
xor
outsb
insl
push
das
scas
pop
adc
adc
pop
or
ret
scas
inc
mov
adc
add
cmpsl
inc
fimull
sbb
jl
pop
add
mov
std
outsb
das
mov
mov
gs
xchg
stc
mov
cmp
dec
inc
cmp
add
sub
cld
idivb
sub
inc
sahf
adc
out
cmp
xchg
cmpsl
xor
int
push
addr16
xchg
push
inc
in
jmp
cmp
stc
icebp
mov
sbb
add
adc
aas
cwtl
push
mov
shl
jns
sub
out
filds
int
outsl
in
fimull
mov
cmc
xchg
dec
fcompl
flds
jnp
scas
sub
mov
movsl
sub
out
jns
xor
xchg
pop
push
fisttpll
dec
stc
scas
mov
imul
push
jne
bound
xor
test
jne
in
outsl
in
push
imul
push
mov
pop
lahf
jp
dec
jo
cmp
inc
js
push
int3
xor
popf
shll
dec
jmp
testb
into
adcl
xor
and
push
jmp
xor
pop
jmp
sti
cmc
sar
sub
sub
icebp
ds
lret
mov
mov
stos
cmpsl
sub
ljmp
loop
call
or
add
or
mov
rorl
cmpsb
lods
rorb
loope
mov
adc
mov
fistps
inc
mov
pop
jb
mov
fdivrp
shld
mov
inc
jecxz
fbstp
int3
incl
js
int3
push
jo
mov
jb
ljmp
test
jmp
inc
xchg
sub
or
xchg
push
cmpsb
outsb
cmc
lea
stc
pusha
pop
movsb
jecxz
inc
push
mov
cmp
or
jl
xor
into
fildl
int3
jl
sarl
xor
cs
or
in
sbb
xchg
stc
push
dec
xor
push
das
mov
add
insb
fwait
out
cltd
cld
mov
xor
into
mov
out
gs
sbb
mov
lret
jecxz
jbe
aas
adc
cmc
sbb
or
push
aas
leave
into
out
xor
jp
or
insl
test
sti
bound
pop
add
jbe
flds
out
xor
jl
adc
jecxz
movsb
pop
pop
imul
aas
cli
fsubl
lcall
scas
inc
orl
ret
lret
std
add
test
push
cld
jno
jl
andb
jnp
test
fists
lahf
repz
call
mov
fs
ja
sbb
or
mov
scas
leave
sar
jmp
push
out
mov
push
mov
repnz
mov
cld
jns
push
push
and
add
icebp
pusha
mov
pop
cwtl
cmp
or
add
add
xor
xchg
or
inc
outsl
cmc
cs
mov
sub
add
adc
es
pop
aad
adc
ds
jp
push
xor
movsb
repnz
fisubs
xchg
jge,pn
repz
es
insl
mov
fisubrs
xchg
and
cmp
xor
or
mov
mov
fucomp
andl
dec
jo
int3
popf
test
filds
clc
testl
mov
fisttps
mov
fwait
mov
cmp
add
adc
dec
dec
inc
stos
mov
cmc
loope
sti
push
loopne
mov
adc
pop
and
or
in
mov
pop
lcall
jns
cwtl
mov
aad
bound
cmc
repnz
je
mov
mov
shll
mov
bound
push
push
mov
adc
std
loope
rorl
lods
mov
jp
push
sahf
mov
mov
add
incb
shl
js
or
leave
sahf
addr16
das
cmp
fbld
pop
or
and
dec
jne
clc
pop
test
out
aas
pushf
jge
pop
aam
idiv
ja
adcl
sarb
pop
pop
pop
xor
movsl
adc
sub
scas
pop
mov
xor
fstp
lret
in
std
push
jnp
cltd
mov
push
dec
gs
cwtl
mov
addr16
pop
in
idivb
idivl
xor
cltd
xor
addr16
pushf
cltd
cmp
cmp
lret
xchg
and
setne
or
cmp
jmp
mov
lds
hlt
and
sub
fldcw
push
add
das
add
dec
lds
pop
jb
adc
and
in
jp
addr16
cld
mov
shll
sbb
sub
pop
inc
jns
mov
in
sub
and
fxch
rclb
xchg
inc
sub
xchg
and
or
jecxz
mov
jmp
sahf
cmpsl
fidivl
and
daa
xchg
mov
insb
xlat
add
out
jae
pop
sarl
mov
mov
jg
in
inc
and
xor
jmp
mov
popa
int
clc
push
push
jg
push
mov
ss
mov
jb
inc
cmpb
add
jo
and
outsl
sbb
pop
stc
mov
popa
sub
mov
inc
mov
mov
adc
xchg
add
shlb
dec
xor
lret
shlb
inc
scas
mov
mov
rorb
fs
into
sti
cmp
lahf
rcrb
addr16
scas
enter
mov
les
jl
xchg
pop
mov
out
or
jg
pop
push
mov
cmp
sub
stos
sbb
int
jbe
test
sti
in
pop
pop
or
stc
add
cs
neg
mov
push
sbb
in
fcompl
and
sub
add
inc
and
std
leave
jge
adc
insl
inc
mull
jg
mov
xchg
pusha
fwait
pop
push
adc
in
hlt
fldenv
loope
push
mov
push
pop
pop
sti
test
inc
mov
stos
add
out
mov
cmp
mov
lcall
or
pop
jno
cld
rcll
push
dec
and
xchg
test
sti
or
mov
fmull
dec
sbb
and
test
stc
ror
loop
enter
in
or
pop
push
je
sbb
fs
jmp
ret
in
inc
std
mov
xor
inc
stos
in
out
and
cmovo
sbb
or
mov
rcl
or
mov
fxch
push
xor
shlb
data16
push
addr16
cmpsl
into
xchg
popa
out
fdiv
enter
jbe
lahf
sub
in
dec
aaa
push
movsl
pop
pop
sub
inc
cmpb
mov
xchg
mov
adc
sub
xchg
push
xchg
xor
pop
aam
iret
add
lock
cmp
lea
push
ljmp
inc
dec
data16
pop
popf
dec
hlt
jbe
xchg
je
cmp
outsl
sub
jae
decl
xor
cmp
and
cmpsl
pop
mov
call
inc
call
iret
loope
xchg
pusha
jmp
lcall
adc
xchg
js
aad
sub
pop
fcoms
aaa
ss
movsl
popa
sti
rorl
adc
fstps
shl
dec
subb
dec
jmp
push
push
data16
out
push
stos
pop
test
lods
mov
push
fistps
dec
add
jno
dec
mov
push
subb
cmp
test
cmpb
adc
xchg
and
xchg
jno
in
lret
insl
repnz
addr16
fiaddl
pop
mov
inc
adc
test
xchg
sahf
daa
or
jb
pop
dec
mov
push
push
das
jp
cmp
test
push
mulb
lods
sarl
xorb
rcl
bound
push
pop
insb
cmp
push
sti
cmp
inc
rol
inc
inc
lds
mov
jg
xacquire
pop
shll
insb
push
xor
xlat
pop
or
jbe
enter
push
clc
cs
es
and
push
insl
call
inc
out
clc
push
or
mov
mulb
inc
test
ljmp
out
imul
jle
outsb
mov
sub
pop
stos
xor
jns
decb
mov
push
jo
jp
jle
or
arpl
lret
mov
pop
mov
shll
int
pop
pusha
xchg
push
inc
test
cltd
xor
test
add
xor
dec
pop
adcb
mov
or
ret
je
or
xlat
test
sub
ljmp
les
cmpsb
or
notb
dec
loop
movsl
das
dec
sub
jnp
mov
nop
add
ljmp
test
xchg
add
sarl
mov
test
push
in
popa
outsb
jmp
call
pushf
sbb
push
orl
jg
jle
pop
mov
jg
nop
sbb
push
pop
mov
push
jmp
lea
imul
lahf
rep
dec
das
jno
mov
or
gs
je
lret
shl
inc
pop
pop
out
sub
add
cmpsb
mov
insl
fimull
into
repnz
stos
pop
mov
pop
dec
push
adc
pop
jge
mov
dec
adc
mov
int
mov
notl
pop
shlb
or
lock
bound
push
push
sub
and
sub
gs
out
leave
xchg
imul
dec
pop
cmp
push
out
mov
stos
idivb
dec
dec
rcrl
pushf
daa
lods
and
clc
cmp
icebp
ds
loop
movsb
fstpt
pop
inc
xchg
xor
stos
xchg
mov
adc
test
jge
ss
cmc
mov
cmp
xchg
fstpt
add
xor
scas
pop
fiadds
cli
sahf
mov
js
cmpsb
sbb
pop
ds
mov
sub
xchg
adc
iret
pop
xor
aad
test
loope
pop
jmp
loope
es
pop
mov
fcoml
cmpl
adc
pop
push
inc
mov
or
sub
stos
push
std
fdivrs
inc
rcrl
push
mull
jecxz
leave
cld
sti
std
or
js
aam
scas
push
sbb
cmp
lods
push
mov
incb
lret
inc
icebp
rorb
imul
xchg
xacquire
jecxz
shll
mov
push
add
outsl
int
insb
ret
ret
pushf
pop
fbstp
lock
lret
loopne
insl
les
push
cmpsb
ss
daa
jno
fisttpll
inc
sti
add
int
out
call
lods
iret
ljmp
rcrb
jmp
mov
fwait
push
add
push
arpl
repz
ljmp
ljmp
xchg
out
movsb
push
push
or
leave
adc
loope
pop
repz
popf
add
pop
decl
mov
jb
inc
dec
inc
or
ja
inc
test
dec
daa
jne
clc
mov
cmp
mov
ds
adc
xchg
mov
fists
jbe
push
or
test
in
jb
sub
out
lds
xor
in
xor
out
inc
cmp
mov
add
add
dec
mov
lock
adc
shrb
and
leave
ljmp
testl
mov
push
xor
and
mov
cmp
lret
int3
rcll
cmp
mov
mov
adc
inc
push
movsb
ss
inc
xor
bound
xchg
and
push
lcall
sahf
mov
or
aad
jl
and
in
and
inc
mov
pop
stc
push
loopne
push
ljmp
ret
mov
mov
lods
cwtl
js,pn
mov
mov
cmpsb
cmc
movsl
or
mov
popa
test
mov
xor
pop
sbb
inc
mov
cmp
sbb
dec
push
xchg
fsts
add
addr16
sbb
insb
mov
int3
mov
cs
lret
sti
adc
xor
xchg
jnp
pop
dec
cmp
adc
rcr
mov
pop
je
push
ret
inc
incl
pusha
insb
and
push
inc
data16
push
add
cmp
xchg
leave
adc
push
xchg
sarl
xchg
mov
mov
mov
jmp
cmp
or
insl
push
mov
xor
shll
arpl
xor
push
mov
xor
fists
rep
mov
mov
outsl
adc
in
mov
pop
mov
pusha
movsl
repz
enter
ror
and
and
add
pop
aas
test
cmp
or
xchg
fwait
ret
test
cmc
mov
mov
ljmp
cs
dec
lods
xor
enter
jmp
pop
cmpsl
cmp
cwtl
movsl
jge
outsb
push
and
jae
push
inc
xchg
add
loope
sbb
mov
ret
pop
adc
ja
addl
add
push
xchg
addb
loope
fldenv
aaa
xchg
jne
pop
and
arpl
aam
adc
pop
addr16
pop
or
pop
cmc
cli
xor
mov
jge
std
add
repnz
adc
jecxz
pop
out
movsl
das
int3
sbbb
leave
mov
daa
dec
push
jle
arpl
es
aaa
pop
andl
jbe
cmpsl
or
sub
pushf
int
in
xor
xchg
ret
mov
mov
cmp
ret
and
jbe
push
fldl
push
push
mov
pop
inc
sub
push
out
test
lds
aas
adc
fstl
mov
xchg
testl
fwait
lock
cld
or
sbb
xchg
jbe
dec
sub
or
cltd
inc
push
arpl
loope
adc
pushf
aaa
push
mov
pushf
cmp
cmp
int3
sbb
inc
in
popa
add
jmp
adc
dec
inc
ljmp
mov
add
xchg
fincstp
clc
shlb
sub
xor
mov
mov
test
test
xor
fisubs
jno
repnz
inc
sahf
jge
gs
iret
cld
pop
inc
jecxz
test
int
mov
push
xchg
add
push
pop
mov
cltd
testb
and
xchg
add
movsl
inc
mov
sbbb
add
popa
outsb
mov
aas
test
int3
insb
lret
aaa
sarb
xor
shrl
mov
arpl
js
pop
out
pop
or
mov
mov
pop
cmc
frstor
sub
testl
frstor
pop
sti
pop
pop
shlb
popf
cmpsl
push
add
cltd
out
cmp
sub
test
dec
push
divl
out
inc
dec
icebp
adc
pop
aaa
inc
fninit
cmc
orl
inc
adc
dec
mov
adc
push
xlat
or
jbe
dec
pop
inc
xchg
enter
cmp
mov
adcl
out
adc
sbb
icebp
aad
or
imul
lds
pushf
rclb
mov
repnz
jl
imul
or
dec
xor
ljmp
daa
inc
jnp
inc
mov
push
icebp
jl
sahf
jb,pn
push
shll
movsb
add
pop
lea
rcrl
jns
jmp
inc
jnp
pop
mov
mov
cmp
test
jbe
loope
rcrl
int3
mov
test
and
inc
stos
inc
scas
out
ljmp
bound
add
dec
mov
mov
push
sub
xchg
add
addr16
sub
adc
or
in
sti
lret
das
in
ljmp
fnstenv
inc
lcall
mov
test
adc
cmc
mov
or
sub
das
popa
notb
xchg
rolb
adc
jne
stc
push
addb
fstps
fisttps
scas
repz
dec
xchg
and
mov
cmp
test
or
pop
sbb
push
les
xchg
push
push
daa
into
sub
jae,pn
or
lret
outsb
jae
pop
ss
sti
ss
push
fstl
popa
fcompl
insb
test
or
cmp
lret
fwait
mov
lods
jmp
push
pop
out
ret
jmp
stos
in
in
scas
mov
xchg
cwtl
mov
dec
mov
push
pop
adc
iret
mov
jnp
arpl
nop
add
mov
mov
and
adc
fildl
jne
gs
inc
cmpsb
stc
cwtl
xor
mov
mov
xchg
dec
jle
cmp
test
repnz
ja
pop
jle
jg,pt
mov
adc
or
es
xor
push
enter
adc
stos
push
cmp
pop
xchg
and
push
xchg
cltd
pop
outsb
imul
xorb
xor
xlat
mov
jl
xchg
sbb
sub
inc
aas
cmp
insb
or
push
and
fs
xchg
jge
ss
fildll
mov
mov
cld
packuswb
push
sbb
push
sti
or
cmpb
and
filds
mov
dec
mov
sahf
jmp
test
sub
dec
outsb
cli
sub
xchg
add
inc
jecxz
call
notb
inc
pop
aad
inc
negl
insl
dec
mov
loop
pop
xor
push
jae
jp
xlat
mov
outsb
add
repnz
push
clc
sbb
in
xor
cli
fidivs
push
cwtl
push
out
add
shlb
aaa
ficompl
lcall
sar
xchg
js
adc
pushw
and
jne
pop
mov
add
std
pusha
sub
leave
mov
jbe
fcmovnu
inc
loopne
pop
xor
loope
or
adc
pop
scas
in
repz
push
pop
sbb
jge
dec
cmp
or
dec
push
dec
inc
xchg
mov
loopne
popf
pusha
rcl
test
push
js
xchg
jo
xchg
xor
adc
cld
sub
push
xlat
mov
clc
or
push
fwait
pop
lret
jo
pop
mov
jns
cmpsl
stos
cld
add
jnp
pop
xor
or
popa
ss
cs
cmpsb
pop
in
mov
in
mov
inc
lahf
xchg
mov
xor
xchg
inc
pop
push
mov
data16
cmpsb
jmp
shl
in
mulb
push
xor
lods
jnp
mov
imul
gs
out
and
mov
and
lret
nop
shr
mov
popa
cmpsb
cltd
lock
dec
jl
imul
or
int
outsb
inc
add
mov
sub
stos
or
lods
imul
scas
dec
shlb
mov
jno
xchg
iret
shl
cmc
mov
fcmovne
sbb
pop
cmp
mov
push
out
iret
sbb
jnp
cmp
scas
outsl
xor
stos
loop
pushf
xchg
ret
dec
or
cwtl
pop
mov
mov
fsubrs
outsb
enter
enter
iret
popf
inc
add
sub
mov
xlat
icebp
and
gs
push
out
ja
mov
popa
ds
out
push
gs
mov
cmpsb
pop
mov
mov
sbb
jb
dec
push
dec
sub
xchg
popaw
ja
cmpsl
pop
stc
jbe
mov
clc
mov
mov
adc
pop
popa
ret
mov
pop
ret
lahf
enter
pop
push
cs
fnstsw
push
and
insb
aad
enter
add
xchg
push
lods
mov
xchg
cmp
mov
movsb
maskmovq
negl
xchg
add
dec
hlt
xlat
jg
add
jne
xchg
ja
jns
shll
fs
lahf
sbb
inc
add
and
stos
out
pushf
addl
sbb
push
add
andb
dec
imul
dec
je
dec
out
test
xchg
stc
or
pusha
fstpl
push
xchg
xchg
mov
inc
lcall
jge
js
xchg
scas
std
mov
rorb
andb
pop
loopne
aad
sbb
xlat
pop
fsubs
dec
ja
sbb
sbb
mov
jge
dec
insl
jae
push
into
ds
enter
aas
mov
jg
ja
lock
leave
mov
pop
cmpsb
cmp
out
xchg
ds
icebp
mov
imul
int3
xor
aam
lea
add
push
add
cmpl
mov
xor
cmpsb
std
inc
popf
dec
pusha
lods
test
fiadds
dec
lds
andb
pop
arpl
fistl
or
mov
add
in
cltd
dec
clc
cmp
mov
and
add
mov
jbe
push
xchg
stos
arpl
cmp
sub
lahf
sub
push
fstpl
repnz
sub
pop
mov
shll
cmpsl
and
clc
mov
jns
mov
pusha
mov
jne
out
mull
stos
xor
mov
jl
sub
xlat
xchg
mov
sbb
addb
in
pop
xchg
mov
in
ret
jae
jo
xchg
mov
daa
fbld
cmpb
push
sbb
rol
jae
notl
adc
addl
sub
or
or
mov
and
cmpsl
jmp
mov
out
dec
mov
stos
or
xor
scas
aaa
xchg
inc
push
ja
fildl
cmp
in
cmp
out
loop
mov
jle
scas
stos
movsb
out
lock
xchg
hlt
push
fimull
pushf
mov
mov
mov
jecxz
fidivs
push
lods
popa
sqrtps
pop
out
pop
popf
aad
xchg
pop
cmp
in
push
in
fcmovu
cmp
aad
jns
push
cmpb
or
fs
outsb
sub
xor
mov
push
pop
jno
pop
sti
fstl
gs
xor
xchg
dec
add
adc
push
adc
je
addr16
jl
test
es
cmc
mov
test
out
adc
fidivrs
bound
mov
jge
mov
xor
jge
sbb
adcl
dec
xor
out
push
cmpsb
lcall
repnz
jp
pop
sahf
push
inc
movups
jae
add
mov
sbb
inc
add
daa
lcall
and
pushf
xlat
xchg
imul
mov
scas
mov
jge
lds
jle
repnz
jnp
fidivs
loope
lea
push
jecxz
push
mov
in
jmp
arpl
loopne
rcl
mov
sub
test
adc
sub
jb
xchg
mov
insl
jle
adc
cmp
mov
movsb
push
test
mov
in
xlat
lret
mov
xchg
jnp
rorl
cltd
call
jecxz
fisubrl
jbe
or
inc
jg
pmaxub
cmp
cmp
clc
xchg
xchg
std
sbb
cmp
rclb
testl
dec
repz
scas
inc
shrb
js
mov
cmpsl
sub
lret
addr16
push
cmp
and
mov
xchg
cmp
pop
addr16
adc
mov
mov
inc
lea
out
and
jo
sarb
mov
mov
mov
mov
movsb
movsl
sbb
inc
ret
pop
pushf
jo
les
mov
dec
nop
popa
lds
adc
out
sbb
das
rcr
outsb
lret
jns
mov
jnp
mov
mov
ljmp
inc
pop
mov
mov
scas
test
jb
dec
insb
or
repz
push
fsubs
jo
shrl
xor
mov
lods
xchg
push
loop
rol
faddl
mov
loope
mov
add
test
sbb
mov
in
je
and
lods
lret
xor
sub
push
addr16
and
dec
mov
ret
jg
pushf
dec
inc
stos
adc
add
mov
ss
call
hlt
sub
imul
jbe
dec
es
popa
mov
orb
jp
ljmp
into
jne
cmpsl
in
and
ljmp
repz
scas
pop
addr16
xor
jns
pop
xchg
jp
stc
or
ffreep
shrl
in
xor
fwait
shlb
adc
and
leave
repnz
push
lds
cmp
and
bound
sarb
sbb
ret
xchg
dec
data16
or
out
dec
xchg
or
and
push
sub
mov
popf
push
dec
or
push
xor
xchg
mov
ja
xchg
mov
fstpt
xchg
mov
shlb
cmp
pop
mov
xchg
sarl
push
loopne
mov
lods
inc
inc
xchg
add
inc
mov
fcmovne
pop
into
cmpsl
sub
pop
mov
mov
addr16
test
loope
push
fisubrs
je
flds
dec
pop
movsl
xor
repz
jns
cmp
jno
cmp
lcall
mov
mov
dec
pop
addr16
xchg
and
mov
sbbl
stos
mov
mov
adc
xlat
insb
and
and
in
nop
mov
or
sti
leave
xchg
inc
filds
xor
dec
test
inc
andl
into
dec
pop
icebp
cltd
rcrl
addr16
fisubs
push
cmp
ds
xlat
data16
mov
pop
pop
cmp
pop
outsl
adc
lds
mov
jno
mov
push
pop
daa
lcall
in
cmp
xchg
add
inc
cli
inc
sarb
loope
sub
fdivrp
add
xor
jbe
sub
cmp
ljmpw
and
lods
mov
hlt
jno
fnstcw
lahf
stos
insl
cwtl
scas
sub
pop
jne
sti
lock
out
jae
mov
subl
xchg
test
cmp
fucomp
in
faddp
scas
aam
or
mov
lret
outsb
mov
lahf
ret
out
mov
fwait
jp
iret
and
and
mov
lahf
rcll
mov
lods
fsubrs
out
mov
out
push
push
push
clc
iret
in
inc
sub
neg
mov
sbb
into
push
fdivrs
push
xchg
pop
fisubs
sahf
pop
mov
cmp
mov
ja
loop
hlt
imul
repz
pop
and
scas
mov
cmp
cli
mov
js
faddl
fdivs
insb
xor
ja
pop
stos
in
cmpl
pop
pop
push
int3
mov
pop
sti
mov
lods
cmp
cmpsl
push
scas
cmp
and
fdiv
and
cmp
in
sets
scas
or
je
out
shr
mov
ffreep
cmp
ja
pop
js
fwait
jbe
iret
pop
andl
xchg
mov
and
lcall
cmp
clc
jne
push
clc
mov
aam
outsb
pop
repz
add
fucomip
and
jmp
xchg
push
dec
int3
sub
enter
dec
adc
sahf
jmp
or
rclb
mov
lret
or
inc
out
lahf
xchg
sbb
xor
dec
fistpl
clc
pop
adc
fwait
das
adc
mov
cmp
xchg
shrl
mov
adc
push
xlat
jp
mov
lea
ret
mov
inc
rcl
xlat
add
cs
jne
cmc
jmp
repnz
repz
jbe
insl
xchg
call
jge
push
jbe
mov
xor
lret
pop
andb
loop
mov
call
mov
adc
cmp
and
lret
jl
pop
fwait
out
mov
sub
dec
clc
adc
out
nop
and
jp
cmp
xchg
mov
lcall
dec
pop
add
jo
add
jae
push
jl
out
jo
movsb
or
jae
jl
push
sahf
gs
dec
mov
mov
dec
or
fld1
mov
pop
xor
test
ret
notl
mov
dec
mov
jb
jmp
mov
xor
cli
adc
sbb
icebp
movsl
cmc
push
mov
mov
std
adc
popa
mov
movsl
sbb
inc
scas
cmp
movsb
jae
pop
cmc
int3
mov
and
repz
ret
add
addr16
or
lods
pop
cmc
pop
cmc
test
xchg
cmp
mov
jne
pop
out
mov
mov
in
test
shlb
leave
icebp
sbb
sub
std
push
and
cltd
or
adcl
sbbl
dec
jbe
icebp
ljmp
shr
lret
mov
xchg
push
sub
lock
test
stos
bswap
pop
scas
leave
sub
pop
std
mov
mov
sti
add
xor
mov
mov
mov
add
insb
and
sbb
or
jp
lcall
mov
add
or
js
mov
inc
shl
pop
sbb
popf
fs
xor
add
sbb
fsubl
sub
stc
outsb
mov
in
sbb
gs
test
pop
xchg
es
insl
sbb
ljmp
push
daa
pop
xchg
cld
push
sahf
nop
push
inc
dec
mov
mov
xor
lock
adc
cmpsb
inc
pushf
jl
outsb
pop
dec
mov
add
xor
xchg
addr16
lret
cmp
ja
es
pop
mov
fisttps
sbb
xchg
inc
jle
out
mov
lret
leave
mov
ds
loop
xor
inc
sbb
lock
sahf
in
mov
subb
out
lods
or
push
push
add
xchg
lods
and
repnz
je
mov
jnp
pushf
out
dec
std
cli
cmp
sub
ja
flds
push
cmp
mov
push
and
stos
xor
xor
and
mov
aaa
sbbb
int3
inc
roll
dec
cli
adc
in
rorb
lret
fbld
les
and
xor
push
and
orl
out
lret
sub
call
sti
cmp
fidivrs
test
in
sub
mov
ror
movsb
and
adc
orb
sarb
inc
cmpsl
mov
test
scas
sbb
mov
insl
pushf
add
repz
fistl
jecxz
aam
push
sub
push
pop
sbb
push
into
cmpsb
outsl
sbb
scas
addb
or
pop
or
mov
pop
or
movsb
sarl
adc
and
add
adc
cmp
shlb
jp
jge
sbb
pop
fstpt
or
stc
or
mov
daa
ss
aad
subb
push
cmp
mov
fnstcw
mov
sub
das
cmp
pop
mov
sub
sti
add
cltd
jbe
xorl
xchg
lods
jnp
das
int3
push
mov
jecxz
fwait
jae
xorb
enter
outsl
pop
and
popf
xchg
pop
and
sbb
int3
jge
push
inc
sub
mov
add
aad
pop
sbb
daa
pop
xchg
sbb
pushf
mov
test
or
pop
scas
fwait
lret
repnz
adc
into
xchg
xchg
imul
cld
jo
call
inc
xchg
or
daa
mov
andb
xchg
and
je
in
fidivs
mov
mov
gs
lret
dec
mov
add
inc
mov
add
mov
call
adc
xchg
movsl
sub
inc
push
pop
fisubl
outsl
ret
sbb
pop
cltd
cld
scas
test
and
sub
sarl
or
mov
cmp
bound
sub
decb
insl
push
adc
aas
js
dec
mov
lods
insb
jmp
inc
lock
cmp
pushf
popf
mov
and
push
xor
push
mov
cli
es
xchg
popf
lea
ret
xchg
popa
je
pop
repz
sub
repnz
mov
out
sub
jecxz
jg
push
es
repnz
rcll
mov
sub
pushf
sub
cmpl
dec
xor
popa
jbe
int
xlat
mov
in
push
icebp
imul
sbb
and
ja
fstpl
add
sbb
xchg
jge
pop
fildll
pusha
repnz
dec
das
mov
rorl
es
mov
mov
jne
icebp
push
sbb
lods
cmc
push
mov
lods
outsl
xchg
lock
lcall
repz
mov
mov
adc
cmp
mov
and
or
or
add
mov
sub
and
jnp,pt
pushf
scas
and
nop
outsb
jo
mov
dec
or
jne
fists
aas
aaa
arpl
filds
hlt
mov
sub
push
sbb
stc
dec
and
addr16
sbbb
xor
outsl
imul
cmp
pop
inc
xchg
in
cld
data16
daa
jge
fists
push
jnp
out
mov
insl
lret
jbe
std
mov
in
xchg
sub
ja
mov
dec
aad
fisubs
out
repz
es
shlb
icebp
faddl
inc
cmc
add
adc
imul
mov
mov
adc
mov
out
cmpsl
outsb
call
addr16
je
je
frstor
mov
std
stos
or
ror
jne
dec
out
outsl
bound
cmp
xchg
cli
jecxz
in
sbb
leave
xchg
lret
lods
fsubr
daa
xchg
push
push
jno
fildl
lock
add
ja
mov
ljmp
sbb
jnp
cld
dec
mov
cmpsl
nop
fildl
rcrl
addr16
jnp
pop
ret
cmp
ja
fnsave
adc
aad
jbe
shrb
push
or
shll
push
push
pop
inc
adc
xchg
sbb
sub
mov
xchg
hlt
push
out
dec
sbb
push
mov
lret
or
ljmp
andl
pop
jle
xchg
lret
adc
push
faddl
lcall
dec
in
push
mov
sbb
decl
add
push
pop
push
bound
lods
movsl
xchg
mov
ja
jg
push
push
pop
ljmp
fistpll
aam
out
jge
fidivrs
dec
cmp
mov
insb
ds
xor
and
pop
push
js
xchg
lods
mov
inc
xor
sbb
sub
adc
daa
lcall
ja
inc
mov
movsl
shld
cmp
stos
mov
and
mov
add
lods
adc
push
lret
or
iret
sub
cltd
mov
mov
repnz
lods
sub
jo
cli
cld
or
pop
sub
outsb
mov
xchg
sbb
iret
xchg
sbb
xchg
jne
fcoms
adc
inc
mov
cmp
sbb
mov
pop
pusha
add
mov
popa
jmp
sub
add
sbb
sti
inc
ja
in
mov
mov
out
inc
pop
lds
adc
jl
leave
popf
fldl2e
es
or
lret
pop
cmp
mov
bound
jbe
subb
push
mov
and
fisubs
dec
cmp
cmp
clc
mov
mov
pop
fmul
mov
jge
insl
jno
xchg
int3
inc
mov
pushf
insl
push
iret
mov
lahf
ret
xor
sub
and
or
out
and
fwait
inc
dec
xlat
nopl
cmp
mov
stos
ja
test
xchg
xchg
xor
mov
xchg
cmp
cmp
xorb
xchg
mov
push
sub
rclb
stos
sub
sar
outsb
lahf
sbb
fidivs
push
cmc
enter
loop
xchg
sbb
push
push
push
fisttpl
test
jl
negl
cmp
in
ret
cmc
xchg
jecxz
loop
std
orb
jg
jnp
push
or
adc
out
sub
xchg
movsl
imul
popa
cli
popf
sbb
hlt
mov
leave
or
data16
jle
push
icebp
gs
aaa
rorb
mov
je
rol
jg
jmp
aas
push
loope
fsubrl
rep
in
cmpsl
xchg
xor
fdivrp
cwtl
and
mov
jmp
pop
scas
mov
mov
push
in
std
loopne
or
mov
mov
push
leave
fsub
mov
or
pop
dec
jo
add
ljmp
scas
or
movsl
rolb
or
rorb
sbb
dec
mov
dec
fwait
das
int
xchg
xchg
cwtl
in
insl
sub
pop
or
or
popa
jnp
mov
out
jae
dec
nop
out
xchg
adc
mov
pop
fdivp
sbb
shl
psubw
sub
in
pop
bound
cmpsb
push
movsl
jb
mov
cmp
xchg
mov
mov
sahf
sub
addr16
mov
int
lock
xchg
push
popa
fwait
call
and
sbb
test
or
cmpsb
pop
in
fdivl
mov
xorb
int3
in
mov
or
repz
inc
jo
push
outsb
mov
xorl
inc
shr
inc
mov
mov
sarb
fcoms
std
inc
stc
out
popa
movsl
cmpsl
mov
jecxz
mov
sbb
cmp
or
outsb
or
xchg
sbb
fdiv
in
fwait
jmp
jnp
cld
xchg
cmpl
mov
jp
ret
jg
or
jbe
loopne
les
out
adc
into
out
in
movl
adc
scas
adc
adc
fsubs
mov
inc
lret
icebp
pop
enter
jl
mov
pop
adcb
aad
xchg
aad
and
xor
aam
pop
les
mov
dec
jo
dec
cmp
hlt
sbb
cwtl
xor
icebp
cs
xor
adc
sbb
mov
dec
gs
scas
push
adc
pminub
fadds
xchg
dec
jg
inc
mov
and
sti
or
cmp
scas
inc
iret
pop
loop
imul
pop
jae
inc
and
outsb
xchg
jge
xchg
mov
idiv
sub
mov
xchg
jb
jnp
push
aaa
jle
xchg
das
ds
sahf
lds
xchg
xchg
mov
jo
ja
std
xchg
adc
or
js
addl
iret
xor
and
lds
stos
imulw
sahf
insb
hlt
fisubs
les
xchg
pop
cli
jmp
xor
xor
ret
or
fs
pop
xor
insb
sbb
stc
inc
or
pop
adc
jmp
rolb
cmp
pop
and
out
cmpsl
jbe
addr16
push
mov
shr
in
inc
push
jge
or
cmp
inc
jbe
mov
cmpsb
jnp
iret
out
rolb
das
add
push
stos
je
orl
loope
enter
test
mov
dec
or
push
addl
mov
jp
inc
xchg
out
pop
xor
mov
jmp
dec
lods
sbb
mov
jno
lea
clc
adc
cmp
sbb
push
negb
push
mov
pop
fistpll
dec
loop
jnp
gs
jp
xchg
jo
jns
shl
adc
ret
ja
xchg
test
mov
sub
lret
mov
addb
and
xchg
imul
dec
xchg
lock
lods
push
leave
scas
bound
cwtl
gs
pop
negb
aad
mov
mov
sbb
lcall
or
mov
dec
push
jp
iret
popa
xchg
mov
mov
inc
cld
lock
push
dec
xorb
popa
jmp
fidivs
push
cmp
shlb
inc
stc
pop
je
dec
repnz
out
mov
iret
shlb
adc
mov
fistps
ss
addl
jecxz
ja
sbb
lock
mov
sub
sbb
pop
inc
cmpsl
cmp
xor
xor
and
loop
ret
mov
pop
fisubs
ja
jne
bound
cs
pop
pushf
sbb
je
call
sub
push
das
adc
je
inc
repz
into
insb
pop
cmp
and
and
inc
push
insl
mov
outsl
and
mov
sahf
scas
mov
push
insl
cmc
je
and
inc
xchg
out
mov
lock
test
inc
clc
sti
aaa
or
das
es
jle
inc
std
stos
aas
or
out
lds
add
loopne
sbb
sub
out
push
nop
xchg
mov
rorl
into
mov
jnp
adc
and
xchg
inc
int
popa
movsl
sub
mov
or
sub
outsb
aam
mov
pushf
in
sbb
lds
daa
testl
adc
hlt
xor
mov
cmpsb
bound
arpl
std
add
inc
enter
icebp
test
inc
les
xlat
add
xchg
icebp
cwtl
add
test
pop
fidivl
mov
mov
inc
aaa
mov
pop
rorl
fst
lahf
cmp
loope
mov
mov
scas
mov
imul
mov
fldenv
popa
ja
mov
mov
sub
jns
les
mov
mov
scas
pop
jo
and
push
jge
dec
push
inc
xlat
arpl
flds
scas
xchg
dec
icebp
pusha
add
ret
xlat
pop
push
inc
negb
cmp
loopne
jle
cmp
sub
dec
cli
test
fisttps
mov
cmp
test
cmc
fnstsw
pop
out
mov
in
hlt
cmpl
pop
shr
in
sbb
jecxz
or
es
mov
pop
in
imul
pop
mov
jl
adc
sti
cs
xchg
pop
out
mov
popa
lods
addr16
icebp
jge
std
xor
int3
lret
xchg
ficompl
std
cmc
and
mov
ret
jno
out
dec
lea
ficompl
ds
out
push
movl
sub
sahf
mov
repz
mov
jno
xchg
or
lcall
mov
push
jo
xor
and
ja
insb
push
cmp
jp
pop
sbb
mov
aaa
subl
pop
test
push
in
pop
pop
mov
xor
jle
dec
cltd
lahf
mov
gs
sub
repnz
dec
add
mov
jge
jl
fisubl
or
test
loope
ja
push
js
adc
jg
insl
inc
call
push
sub
rorb
cltd
pop
es
inc
cltd
cmp
jl
out
arpl
or
pop
lods
and
repz
ja
mov
push
repnz
enter
cwtl
add
jo
mov
xchg
adc
out
xor
cld
sbb
cs
adc
jne
test
add
ja
jmp
out
in
push
sbbl
arpl
push
push
fs
and
cmpsb
ficompl
int3
mov
inc
outsb
pop
out
or
xor
dec
adc
push
aam
and
xor
aaa
xlat
push
loopne
prefetcht1
shll
scas
dec
pop
imul
add
xor
ficoml
push
adc
mov
rcr
pmulhuw
sub
xorb
aas
pop
mov
jne
sbb
push
shrl
xchg
std
sti
adc
popf
dec
sti
pop
imulb
jle
lret
pop
out
arpl
out
stos
in
int
pop
inc
jnp
daa
or
test
push
dec
or
je
add
in
inc
fstp
inc
pop
pop
faddl
mov
xor
push
and
daa
sti
adc
xchg
sub
imul
mov
mov
and
decl
cmp
push
sub
das
adc
push
rolb
fucomp
xor
mov
in
jp
mov
loope
fisubrs
jnp
mov
decl
cli
or
test
cld
outsb
fildl
mov
in
and
daa
lret
mov
adcl
arpl
xchg
cmp
aad
sbb
jae
dec
iret
daa
fmul
dec
push
jae
not
push
xor
dec
pop
jno
and
push
sti
sub
mov
jg
pop
jmp
jne
pop
sub
add
lahf
shl
push
enter
lock
shll
out
sbb
mov
pop
push
add
cmp
xchg
or
loope
add
jmp
adc
push
mov
mov
insl
out
or
xor
jecxz
mov
inc
cmp
xchg
push
addr16
es
movsb
sub
ds
inc
insl
lret
sahf
fisttpl
in
js
add
mov
fsubr
jb
sub
xchg
pop
lea
bound
mov
test
pop
sti
xor
out
pop
sahf
mov
xchg
fmull
nop
addl
adc
addr16
fmuls
jno
xchg
push
mulb
jnp
mov
or
das
dec
or
jmp
adc
pop
sbb
lds
sub
xchg
jb
testb
fcompl
andl
xchg
imul
stos
pop
in
mov
add
flds
ljmp
test
popf
pusha
sbb
les
andl
dec
loopne
jp
loopne
sub
aas
mov
add
xchg
mov
in
cmp
test
sti
jmp
add
push
jle
mov
lock
insl
daa
mov
mov
les
xchg
mov
imul
loopne
rcrb
mov
push
das
or
jnp
jno
scas
pop
insl
mov
xor
js
shrb
aaa
push
add
sub
cs
bound
sbb
jns
pop
fwait
push
sub
insl
add
out
sti
loopne
stos
mov
cmc
jl
rcl
popa
mov
lods
or
scas
loope
out
lods
mov
lea
add
pop
push
mov
das
popf
shr
or
aaa
lods
shll
xor
stc
pop
jge
cmc
out
cmp
bound
sbb
cmp
mov
jge
ljmp
mov
xchg
xchg
push
jp
dec
loop
mov
dec
hlt
out
mov
sub
adc
xchg
xor
xor
lret
lret
xor
push
sub
mov
pop
mov
sub
mov
lret
mov
sbb
jbe
or
jecxz
adc
xchg
adc
fdivrs
push
lret
mov
sub
mov
insl
lret
mov
fwait
jns
stos
lods
or
js
in
adc
enter
repnz
dec
inc
xchg
mov
mov
inc
int3
cmp
mov
stos
xchg
push
lock
mov
mov
sbb
cmpsl
mov
sbb
push
mov
or
xchg
popa
mov
movsb
jmp
add
les
fistps
les
inc
sbb
jl
stos
ss
mov
dec
push
adc
out
mov
sbb
fildll
mov
in
icebp
add
insb
sbb
aas
and
mov
cwtl
repnz
les
jmp
mov
xor
pushf
mov
lods
shr
ljmp
fcmovne
mov
xchg
xor
xor
iret
mov
repnz
sahf
jnp
mov
and
jp
sub
xchg
push
jb
das
es
and
ret
pusha
mov
ss
imul
xchg
lahf
sbb
fstps
hlt
sbb
icebp
bound
push
popw
das
xchg
fwait
loope
movsl
movsb
lret
jae
push
jecxz
fisttps
xor
cld
nop
in
loopne
les
inc
or
mov
jg
stos
mov
or
lcall
int
in
jge
fsubs
rorl
lds
in
cmp
or
les
insb
xor
adcl
jo
ret
inc
ret
inc
in
aas
fsubrs
shl
iret
icebp
pop
inc
add
pop
jnp
xor
jns
stos
stos
mov
flds
mov
pushf
push
adc
outsb
inc
aad
imul
aaa
mov
popf
fs
data16
repz
int
insl
rcrb
mov
push
imul
incb
shll
lds
sub
ror
pop
lds
aaa
jnp
inc
mov
jmp
outsb
popa
fnstenv
mov
mov
imulb
mov
fcoml
mov
pop
lds
pop
pop
xlat
adc
aad
scas
jno
add
imul
cmpsb
nop
mov
js
mov
mov
lahf
or
adc
iret
ret
stos
call
out
adc
mov
pop
test
rcrb
xor
cs
scas
inc
pushl
in
inc
push
imul
mov
jb,pn
in
hlt
sbb
add
jbe
mov
cld
push
push
stc
addb
adc
dec
cmp
xor
mov
in
testb
js
std
sbb
std
iret
das
sbb
push
or
push
cmp
out
jl
imul
sbb
dec
push
adc
lcall
lods
jno
es
std
adc
daa
mov
push
and
cmp
ss
fsubl
int3
bound
call
mov
pop
out
shlb
int
bound
and
cmp
fs
popa
dec
rsqrtps
sbb
xchg
mov
jb
mov
fs
push
mov
or
nop
push
sahf
sbb
jmp
in
and
cmpsl
stos
stc
jl
stos
xchg
xor
out
pop
and
sbb
xor
and
ffreep
sub
or
mov
jbe
pop
outsl
mov
cli
and
popf
in
push
mov
sub
mov
xor
jns
es
fmuls
fs
xchg
clc
jg
push
outsl
push
adc
and
enter
mov
cmpsl
sub
xor
cmc
ljmp
jp
shr
daa
jp
adc
insb
push
push
adc
jns
xor
lods
dec
xchg
push
xchg
push
inc
pop
pop
mov
push
mov
push
test
push
lock
add
or
cmp
sub
aaa
outsl
sub
cmpb
jle
repz
popf
push
in
popa
shll
aam
leave
lea
jno
leave
sub
dec
cmp
sub
mov
cmpsb
jge
imul
or
sub
adc
sub
inc
cld
or
ss
push
and
notl
sub
cli
inc
inc
dec
mov
inc
outsl
aad
push
push
cmpsb
out
cmpsb
aam
xchg
fidivrl
movsb
jbe
mov
cmpsb
insl
pop
dec
dec
ret
or
jle
fcoml
xchg
hlt
sub
inc
pop
jns
sub
sti
movsl
enter
jp
int
loop,pn
aam
dec
inc
add
pop
inc
insb
loopne
in
rcrb
lock
gs
ret
test
js
into
pop
add
dec
mov
ja
inc
add
cmp
mov
xorl
hlt
mov
mov
jb
inc
fdiv
mov
cmc
pusha
cld
cli
cli
pop
ss
and
popa
lods
sbb
cli
sub
inc
pusha
out
mov
sar
and
or
mov
mov
dec
out
inc
jg
xchg
dec
les
mov
ds
mov
push
loopne
mov
pop
sbb
jbe
jns
lea
mov
pop
cwtl
fsubp
push
mov
cmc
cs
fdivrl
and
aaa
testl
xchg
pop
inc
cmp
xlat
mov
mov
mov
jle
mov
cmc
push
jge
fistpl
jnp
aad
fldt
jge
xchg
cmp
outsb
jp
push
jp
dec
jno
mov
pop
pop
sbb
movsb
ds
mov
mov
shll
cmp
and
push
inc
lods
cmp
xor
jge
shufps
mov
orl
push
xchg
insb
adc
std
hlt
xchg
ret
outsb
mov
jl
pop
lds
dec
cmc
cmp
es
fs
rolb
lret
jbe
movsl
fcoms
or
jb
and
movsl
cmp
pushf
mov
xchg
mov
roll
dec
lret
and
aad
add
pop
mov
lret
mov
fldcw
dec
bound
pop
sti
loopne
ss
sbb
sub
loope
fcomip
jmp
add
pop
dec
pushf
sbb
xor
add
call
lret
leave
outsb
jbe
dec
in
addr16
mov
mov
aas
sbb
sbbb
pusha
sbb
xchg
mov
mov
inc
and
hlt
xchg
neg
cmc
cmc
arpl
cmp
pop
pop
jmp
add
cmp
mov
iret
sbb
jle
test
in
mov
in
aaa
jmp
pushf
pushf
sti
mov
add
jg
dec
xchg
jne
mov
inc
int3
lea
insl
enter
mov
add
dec
mov
add
inc
nop
insb
xchg
sti
daa
sbb
adc
mov
jbe
iret
sub
arpl
repnz
mov
mov
data16
mov
and
pop
mov
out
jnp
scas
test
jmp
push
mov
popa
pop
incl
adc
adc
dec
xor
dec
fisttpll
sbb
or
jno
mov
add
mov
outsl
movl
scas
aaa
or
hlt
push
inc
into
jle
fucom
jle
sahf
scas
fcoml
sub
adcl
sub
inc
mov
add
mov
adc
cmc
sti
scas
les
inc
mov
add
mov
hlt
jns
ja
ret
lret
movsb
sti
push
sbb
fistps
xor
sbb
lahf
add
xchg
push
push
jle
mov
enter
or
or
add
mov
adc
xchg
jge
adc
cmpsb
cld
stos
inc
clc
stos
and
adc
aas
ss
nop
and
scas
mov
mov
sub
dec
mov
loopne
dec
push
mov
repnz
popa
iret
loope
rol
cs
lods
insb
pop
test
test
popl
dec
setbe
js
fwait
mov
mov
cltd
aaa
jmp
mov
jg
xchg
data16
push
fsubs
push
mov
lods
rcll
movsl
out
js
aas
lods
lret
fnstsw
cmp
mov
xor
mov
push
jb
push
lret
mov
popf
jo
test
loope
push
jge
add
mov
lcall
js
data16
movsb
push
test
sti
fcmovnb
mov
adc
repz
and
orl
or
add
out
out
das
push
jle
shrl
jmp
ds
fdiv
jnp
jle
shrb
adc
ljmp
xchg
lea
test
adc
test
sti
jge
push
movsl
push
ss
mov
movl
fmuls
in
and
sti
xor
add
dec
icebp
xchg
jae
xor
shrl
hlt
int
icebp
mov
and
clc
jp
out
inc
loop
mov
les
dec
mov
or
ja
into
or
enter
cmp
xor
add
adc
pop
and
jp
rcrl
stc
sbb
test
sub
and
enter
das
mov
mov
xchg
stos
pop
test
insb
dec
in
sti
in
add
dec
sbb
mov
jg
xchg
fs
fcoms
xor
pop
jns
cmpl
adc
pop
and
imul
insb
cltd
push
cmp
and
mov
int
push
frstor
dec
out
mov
inc
fsts
pop
into
nop
rclb
jo
fnstcw
xchg
aam
push
cs
mov
or
pop
es
sub
cs
mov
sbb
push
push
mov
dec
sarb
popa
dec
cltd
lock
and
cmc
iret
aas
mov
data16
ja
icebp
or
into
push
cmc
or
inc
and
xchg
icebp
es
lahf
pushf
ds
sbb
outsb
xchg
fnstenv
addr16
mov
jp
aad
fwait
in
mov
push
pop
loop
nop
adcl
xchg
add
imul
aaa
mov
out
sbb
aas
call
mov
lea
pop
leave
adc
jg
mov
mov
enter
mov
subb
push
repnz
push
xchg
movsb
mov
sub
lret
jbe
push
iret
cwtl
vmread
mov
jmp
ja
sbb
test
jae
xchg
lret
jecxz
jbe
dec
int
es
mov
nop
out
je
addl
in
mov
les
sbb
dec
sbbb
or
in
add
dec
lahf
inc
or
movsb
lods
push
inc
jno
and
les
inc
scas
mov
cs
pop
xor
sub
aam
and
push
add
in
aaa
scas
inc
sahf
scas
cmpl
mov
jno
mov
or
push
sub
push
outsb
icebp
in
cmpsl
inc
adc
cli
aas
push
and
push
pop
inc
cli
cld
adc
add
dec
cltd
fisubl
fnstsw
popa
jge
loope
enter
int3
hlt
jmp
cwtl
dec
mov
jae
mov
shld
jno
daa
cmpsb
jg
aas
fdivrp
movsl
mov
sbb
xchg
lods
mov
xlat
mov
mov
gs
fsubs
xchg
lock
out
fndisi(8087
push
mov
loope
clc
aas
clc
sub
adc
push
mov
ljmp
and
incb
std
outsl
or
pop
arpl
and
mov
mov
lds
sti
xlat
sub
dec
mov
dec
xlat
repnz
iret
xor
enter
andl
xchg
jp
pushf
mov
clc
andl
loopne
inc
sarb
mov
loop
cmpsl
cmpsl
insl
adc
lock
cmp
int3
jecxz
ret
mov
repnz
inc
mov
add
ror
push
ss
leave
iret
stos
xor
xor
jb
fistl
pop
sbb
jmp
mov
dec
mov
and
sbb
lods
mov
jnp
sub
ljmp
add
mov
lcall
mov
jmp
in
rcl
jg
bound
and
jno
lret
push
mov
nop
outsl
outsl
loopnew
jns
mov
dec
xchg
lods
imul
pop
mov
xchg
js
int
shl
fcmovnu
inc
mov
mov
mov
mov
fcoms
out
pop
inc
cmpsb
imul
mov
inc
mov
jl
add
pop
mov
dec
aam
cmp
leave
jo
xor
in
jp
imull
add
mov
and
jmp
sti
lock
add
push
arpl
pusha
sub
loope,pn
dec
imul
inc
or
movsb
xchg
in
int3
mov
mov
mov
scas
mov
insb
xchg
rorb
dec
sahf
sbb
mov
mov
test
xchg
dec
inc
or
lret
loopne
js
daa
je
mov
xchg
inc
or
lret
test
adc
sbb
aas
shl
add
jmp
inc
sti
sub
push
inc
ja
push
fadds
push
mov
inc
movsl
jo
jl
cmp
cmpsb
les
inc
mov
add
in
andb
test
pop
repnz
rcll
mov
stos
inc
xorl
push
mov
int
inc
adc
xlat
insl
xor
sub
mov
bound
sub
repz
out
and
pop
mov
push
adc
fld
fdivl
mov
ds
cmc
leave
and
sbb
mov
add
sbb
push
call
push
outsl
jg
adc
daa
dec
push
clc
aam
mov
testb
ss
mov
enter
in
jge
scas
and
jno
mov
lods
xor
adc
imulb
je
cmp
mov
xchg
sub
adc
xchg
idiv
cwtl
push
push
fdivrs
ror
arpl
ret
out
test
fbstp
into
mov
or
fldl
test
loop
shlb
mov
js
inc
repz
arpl
lahf
insb
les
pushf
movsl
clc
aad
lret
addr16
std
and
negb
mov
sbb
mov
and
add
sbb
xchg
sbb
mov
int
mov
bound
sbb
adc
in
enter
sub
mov
dec
in
arpl
push
aaa
mov
mov
pop
pop
inc
cmp
ret
test
cmc
mov
adc
imul
sbb
jle
add
mov
call
lret
mov
mov
adc
xchg
mov
test
adc
mov
sahf
sub
mov
gs
mov
or
pop
int
bound
call
and
mov
cmp
jle
and
fs
or
push
fidivs
sub
out
loop
movsb
mov
in
add
das
mov
mov
into
sti
push
sbb
test
call
push
pop
mov
adc
mov
out
enter
mov
pop
xchg
mov
sub
mov
cld
ss
mov
jg
cmp
sbb
jae
jp
xor
es
pop
outsb
mov
aas
sub
fcom
btc
jno
lods
ret
lock
pop
dec
repnz
lret
idivb
xor
jge
inc
out
faddl
jo
push
push
pop
loop
in
cmp
mov
test
scas
inc
mov
cmc
mov
imul
inc
cmp
outsb
pop
hlt
xchg
insl
xor
fcomps
lret
mov
or
das
pop
js
or
xchg
daa
mov
pop
pop
fidivrs
data16
push
jb
jp
cli
jl
daa
push
lock
xor
lahf
jmp
dec
movsb
sub
inc
not
bound
pop
push
lahf
jnp
xchg
stc
push
jbe
add
adc
cmp
mov
adc
js
mov
movsb
outsb
add
dec
mov
mov
repnz
mov
in
das
pop
dec
scas
fiaddl
out
ret
mov
jmp
fldcw
pop
lds
mov
insb
repz
push
dec
std
out
dec
rol
sub
ljmp
push
scas
add
bound
rolb
cmp
sbb
xorl
cmovb
daa
ja
je
les
mov
bound
stc
shrl
or
repnz
in
dec
or
aad
mov
fsub
in
pop
sub
fsts
adcb
es
add
mov
iret
stos
mov
rcll
leave
test
jnp
out
mov
add
push
pop
jbe
cmp
jle
dec
cmp
sbb
pushf
js
xchg
repz
faddp
add
sahf
cltd
pop
mov
cs
out
sbb
jbe
pop
inc
in
lea
es
cmp
jns
cmpb
iret
xchg
sub
or
xor
xchg
sbb
pop
sti
sahf
add
push
inc
pop
aad
lea
ds
lods
sub
adc
xor
mov
arpl
dec
repz
aam
lret
adc
add
xchg
sub
fmul
xchg
ret
sarb
sbb
and
dec
sub
jp
insb
push
repnz
dec
movsb
dec
dec
jle
jb
mov
xlat
adc
push
imul
add
cmp
adc
lahf
jge
jmp
cmp
mov
xchg
popa
add
test
aam
in
or
popf
outsl
dec
lcall
int
mov
test
push
cmp
int
mov
push
shr
rcll
xlat
pop
fmuls
jae
pusha
jmp
jmp
into
add
push
loopne
les
call
pop
or
pop
daa
lods
fs
fisttpl
js
jb
lret
mov
int
inc
jmp
or
pop
shll
fcomp
jg
lea
pop
pop
mov
adc
dec
xchg
test
mov
push
or
inc
gs
sub
or
dec
mov
xchg
mov
in
mov
adc
sbb
shrl
out
js
mov
sub
rorl
out
das
adc
pop
xchg
rorb
pop
xor
aad
or
push
lahf
andl
in
adc
push
je
pop
mov
mov
test
add
jns
adc
jg
add
or
lret
or
arpl
xor
pusha
subb
push
mov
jg
enter
mov
mov
jns
imul
push
sbb
mov
and
sub
mov
js
addr16
icebp
fbld
out
push
leave
in
inc
add
cltd
cmp
sub
and
pop
dec
inc
push
outsb
push
push
inc
xlat
mov
or
dec
jmp
cmp
mov
lret
xchg
sub
and
pop
jbe
pushf
out
aas
clc
push
mov
rclb
jo
movsl
jmp
in
ret
sub
popa
push
je
out
sub
insl
fcmovne
stos
push
and
push
out
ret
and
add
movsl
test
scas
mov
jno
xor
mov
lret
sub
jnp
dec
gs
loopne
adc
popa
push
movb
dec
mov
or
dec
mov
mov
xchg
sub
sbb
mov
cmp
icebp
sbb
lods
fs
movsb
fldt
insl
mov
mov
xchg
dec
enter
ljmp
lea
lret
mov
sub
adc
mov
aam
rolb
ds
leave
mov
cmp
vpunpcklwd
mov
push
pop
call
test
imul
and
aam
mov
ja
dec
jb
test
clc
lock
jecxz
out
out
ss
pop
ss
in
in
and
and
or
mov
and
xchg
cmpxchg
inc
fwait
loop
cmp
scas
icebp
or
xchg
insl
sbb
adc
mov
fnstcw
add
movsl
sbb
shll
mov
mov
xor
shr
inc
cmp
orb
push
mov
loopne
fdiv
mov
repz
inc
sub
aad
or
xchg
xchg
insl
inc
movsl
push
scas
and
hlt
mov
push
mov
pop
adc
lcall
xchg
imul
ss
jl
pop
xor
push
je
inc
xor
cmp
cmp
push
loopne
mov
add
mov
cmp
sbb
scas
cmp
sub
lahf
loopne
iret
hlt
cld
ds
mov
scas
sbb
mov
push
orb
cmp
sub
lahf
sbb
pop
mov
add
jmp
clc
mov
insb
lods
mov
cmp
pop
lret
mov
xor
sbb
sbb
inc
push
xor
and
int3
stc
ret
fsts
adc
push
gs
mov
out
popa
xor
mov
adc
sub
xchg
sbb
inc
or
mov
out
inc
or
test
dec
mov
inc
pop
push
sahf
loopne
stc
and
mov
daa
rorl
xor
jb
inc
mov
lret
scas
fiaddl
shll
mov
ror
xchg
je
aad
and
cwtl
das
lock
repnz
lods
jecxz
hlt
js
decl
jo
mov
adc
adc
cs
lods
mov
or
insl
lcall
jne
popf
fisubs
sbb
jg
jns
cs
mov
or
cs
scas
loopne
iret
outsb
jno
idivb
es
fs
lock
scas
mov
insb
pop
add
arpl
push
sub
adc
lret
mov
cli
lods
sub
adc
stos
popf
insb
xchg
xchg
mov
cmp
add
lods
sbb
shrb
std
cmp
jae
ds
adc
repnz
jns
or
scas
filds
aam
and
xor
jg
lahf
addr16
mov
sbb
push
sub
pop
int
xchg
add
bound
sbb
inc
xor
jb
in
ret
sti
or
and
cmpsb
rcr
or
test
lcall
dec
push
jmp
push
xchg
mov
in
add
cmp
jo
mov
test
lock
shr
bnd
fldcw
js
filds
push
jecxz
test
scas
cmp
dec
sarb
or
push
in
dec
and
out
call
clc
pop
cli
mov
mov
xor
sbb
int
pop
push
inc
mov
xlat
dec
or
aas
xchg
lea
pop
mov
xlat
stos
bound
push
js
mov
sbb
daa
pop
sarl
push
jnp
sbbb
popa
dec
mov
and
mov
popl
daa
or
sbb
jmp
neg
ljmp
in
movsb
insl
cmp
sub
jmp
mov
fwait
pushf
lds
add
push
or
pop
mov
adc
push
push
mov
inc
lret
sbb
ret
addl
xor
mov
mov
das
aam
adc
push
xchg
pop
xor
fstp
sahf
imul
fistpl
adc
inc
pop
jns
push
mov
je
dec
stos
movsb
sahf
or
out
divb
dec
ja
sbb
arpl
push
cmp
and
loopne
iret
cmp
gs
push
stos
mov
xor
test
push
and
es
andb
inc
in
sar
scas
dec
adc
dec
es
fcmovb
notl
bnd
and
in
mov
dec
enter
sub
popa
sub
xorb
xchg
loopne
loope
push
jno
sbb
cli
shll
mov
leave
cmp
ss
je
jb
jmp
test
mov
xchg
push
or
in
cmp
adc
arpl
scas
jne
in
je
xlat
xchg
lods
xchg
lods
aam
inc
adc
pop
cwtl
mov
iret
test
int3
jecxz
in
push
lcall
jmp
cwtl
mov
push
jle
cmc
lock
cmpsl
jae
mov
pushf
lock
lahf
mov
rcrb
ja
iret
pushf
pop
push
add
sbb
aaa
faddl
js
fs
pop
jbe
xor
push
ja
sbb
and
jp
iret
sbb
pusha
sub
jg
sbb
mov
loope
push
cs
xor
ret
cmp
sbb
xchg
lods
inc
fistps
je
lahf
cmp
adc
mov
sbb
mov
sbb
lret
push
push
xor
jle
mov
cmp
loopne
ss
lods
sbb
in
stos
out
pushf
pop
sbb
pop
sbb
mov
test
stos
lahf
repnz
xchg
js
mov
cmp
imul
dec
jbe
mov
lds
lret
addr16
cmp
lods
je
dec
cmp
inc
hlt
frstor
outsl
pop
je
mov
mov
sub
jmp
jp
lea
loope
dec
fs
sahf
jns
mov
mov
out
add
add
pop
aad
shlb
stos
es
xlat
test
enter
xor
popa
xchg
mov
aad
jg
mov
into
sbb
je
ja
xchg
sub
push
lret
fsts
mov
sbb
in
repnz
pop
aad
shl
and
call
jne
sub
cmp
testl
lcall
add
pop
dec
roll
mov
aas
repnz
cwtl
ljmp
out
dec
neg
cmp
aad
addr16
lock
insb
imulb
movsl
jo
push
in
cmc
js
sahf
mov
or
jecxz
addr16
fwait
pop
mov
mov
jo
push
ret
or
test
mov
sti
mov
mov
dec
cld
and
shrb
aad
mov
pop
or
dec
das
and
cmp
mov
pop
popa
sbb
inc
xchg
pop
pop
imul
cmp
push
inc
mov
mov
fmul
decb
mov
ficomps
mov
stos
jb
jb
dec
loope
jecxz
dec
cltd
orl
and
jge
out
sub
mov
pop
jg
sub
xor
adc
loop
or
fists
es
mov
js
out
ror
push
outsl
inc
js
movsl
push
fstps
jg
mov
popf
lods
xor
xlat
mov
iret
or
jle
xlat
shl
or
es
or
mov
mov
push
inc
les
inc
les
shlb
inc
cmp
push
arpl
sub
xchg
pop
test
adc
pop
loope
and
pop
inc
clc
mov
xchg
or
inc
mov
cmp
push
inc
js
or
repz
pop
and
sti
inc
pop
sub
sbb
pushf
sub
pop
and
loope
adc
adc
pop
adc
inc
mov
pop
test
and
adc
mov
or
mov
or
mov
or
mov
or
mov
pop
test
and
inc
test
call
roll
and
popa
and
inc
test
dec
adc
pop
loope
adc
and
and
push
adc
lods
and
nop
or
adc
pusha
adc
inc
cmp
mov
cs
push
test
and
and
lods
or
push
pop
int3
cltd
fwait
push
call
ds
cmp
push
movsb
loop
mull
dec
ss
xchg
sub
xor
xor
cltd
jecxz
cwtl
subl
clc
jnp
jae
mov
fwait
jae
into
popa
jae
dec
sub
fs
loope
imul
sar
xlat
mov
ficoml
stos
jnp
fdivrl
rolb
cmp
insl
out
sbb
imul
movsb
insb
sbb
or
or
cmc
adc
mov
xchg
int3
cwtl
jp
push
jle
add
lahf
outsb
adc
pop
mov
push
addr16
jo
mov
ret
movsl
stc
outsb
sub
shr
lret
jbe
push
xchg
dec
sub
imull
and
push
xchg
cmpsb
into
sub
sbb
mov
sub
popf
xor
pushf
jl
inc
pop
jno
repnz
jp
pop
aad
cmc
jno
lods
mov
or
jbe
scas
cld
cmp
sub
fldl
push
lds
and
sub
mov
stos
testb
pop
inc
push
aam
push
lds
cwtl
sahf
lahf
push
add
fstpt
in
test
xor
into
popf
into
stos
adcl
push
mov
pushf
loope
xor
and
aas
rorb
icebp
in
int3
cld
xchg
sti
repnz
jbe
aam
pop
cld
inc
dec
addb
dec
cld
and
cmp
sbb
sarl
clc
add
mov
jl
sti
cs
adc
fidivrs
daa
mov
push
pop
test
adc
mov
das
inc
dec
cmp
arpl
mov
mov
fistps
xchg
pop
loop
xor
push
sti
jnp
roll
fdivrl
hlt
pushf
stos
jecxz,pt
and
push
mov
jecxz
inc
icebp
jg
xorb
sub
sbb
xchg
push
mov
push
ret
out
insl
js
dec
xchg
xchg
mov
adc
mov
cltd
stc
rcr
pop
jle
fisttpl
loop
fwait
mov
or
pop
inc
ficomps
jae
xlat
addr16
enter
xchg
sub
jp
sti
rcl
scas
or
jg
or
rclb
in
xor
xor
fdivp
ret
repz
and
mov
fcomi
in
pop
stos
or
push
inc
add
and
mov
pop
cmc
push
inc
dec
lds
into
movsb
dec
xchg
xor
push
or
repz
add
mov
jnp
xor
dec
mov
stos
aaa
les
and
push
dec
setae
xor
fcoml
sahf
jb
lea
data16
cwtl
in
andl
adc
shl
inc
fiaddl
iret
and
testb
nop
hlt
jb
shlb
movsl
or
pop
mov
stc
pop
sub
gs
pop
add
icebp
incl
mov
sahf
int
mov
jl
das
mov
es
bound
cmp
push
mov
call
ror
ljmp
or
jmp
xchg
xorb
mov
xor
incb
mov
int
nop
and
pop
in
pop
shrb
jb
mov
lret
mov
das
pop
pop
testb
add
add
sahf
xorl
cmpsl
subl
dec
push
ss
or
popa
push
sbb
pop
loope
mov
jg
test
push
and
adc
inc
mov
sub
movsl
pop
jbe
cli
adcb
mov
div
movsl
mov
cmpb
and
shl
cmpsl
cmpsb
daa
dec
jnp
scas
add
icebp
ret
mov
sub
xor
mov
push
push
pop
push
imul
mov
mov
pushf
call
lret
rolb
sbb
and
ljmp
in
cmp
jle
clc
insl
sbbb
pop
lret
fcmove
pop
outsb
jl
mov
movsb
ljmp
xchg
push
and
test
mov
dec
out
mull
ret
jae
cmp
sbbb
out
decl
ds
scas
icebp
sub
xchg
sub
imul
mov
cwtl
sub
adc
loop
cmpsb
dec
or
sti
mov
xor
dec
xchg
sub
clc
jae
test
scas
dec
xchg
adc
in
in
scas
cli
ja
movaps
add
icebp
or
shlb
mov
pop
cld
mov
jge
pop
aas
sub
lds
jp
movsb
inc
and
out
rcr
cli
pop
loopne
out
fidivrs
xchg
loopne
daa
cld
mov
jg
cmpsl
ja
iret
jnp
imul
pop
js
hlt
cmp
lods
hlt
ds
add
pop
loope
out
jg
push
push
lahf
sub
cmc
dec
xchg
sahf
mov
jne
cmc
imul
or
movsb
push
cltd
xchg
nop
sub
int
out
xchg
loopne
ret
mov
test
bnd
jo
je
mov
mov
shlb
std
mov
mov
fs
adc
test
incl
jne
cmp
idivb
div
jae
inc
pop
and
fwait
sub
leave
int3
ja
sub
xor
push
jg
fdivrp
arpl
jne
lds
mov
loope
rol
ret
adc
test
ficomps
mov
clc
in
jne
shlb
adc
cmpsb
dec
jge
push
fimuls
ret
decb
sahf
js
jae
data16
inc
stos
aam
sbbl
pop
mov
arpl
add
pop
psubsw
jmp
or
into
jo
sahf
pop
lods
mov
xorb
aaa
mov
addr16
call
pop
jno
out
mov
mov
stos
sbb
test
lcall
ret
mov
mov
add
test
cld
jg
add
sbb
popa
sub
dec
add
xor
das
fsubs
sahf
repnz
mul
hlt
pop
stc
insb
cli
mov
stos
mov
jle
cmp
cmpsb
int
ret
jno
dec
fwait
mov
std
adc
sahf
add
add
xchg
dec
sbb
mull
pop
sbb
sti
mov
ret
test
iret
dec
inc
aaa
dec
loopne
mov
inc
sbb
out
icebp
shlb
jo
jle
add
pop
lea
icebp
pop
insb
ret
xchg
testb
leave
aas
pop
inc
cltd
in
jg
sti
jle
je
iret
call
mov
popa
into
test
sarb
cltd
push
out
inc
xchg
mov
fildl
push
pop
insb
stos
mov
cmpsl
cmp
repz
ret
das
sub
add
xor
mov
fdecstp
sbb
aas
mov
fcompl
and
cmp
aad
lock
leave
outsl
shl
and
orl
push
mov
repz
cmc
inc
sub
aaa
out
cld
or
mov
jg
call
jae
add
ret
or
div
xorb
dec
in
jo
xor
push
cmp
or
jg
cli
lret
dec
dec
dec
dec
rolb
pop
in
data16
or
adc
push
insb
inc
popf
leave
out
dec
test
mov
adc
and
push
les
dec
lock
ret
js
jo
lret
mov
or
sbb
pop
mov
jnp
test
cmp
xchg
or
mov
lds
cmp
pop
jbe
jb
movsl
je
fstp
loop
mov
cmp
mov
ss
mov
sbb
lods
or
pusha
inc
pop
mov
inc
lds
pop
fcomps
pushf
jl
mov
test
pop
sub
mov
jnp
cmp
je
mov
or
popa
mov
inc
mov
mov
and
mov
xor
adc
inc
cs
fistps
lret
mov
push
jmp
mov
mov
xlat
push
push
mov
xor
stos
ds
push
push
push
push
push
lods
sub
in
sbb
scas
aad
arpl
imul
xchg
addr16
xchg
mov
mov
pop
mov
sub
pop
imull
scas
out
sub
insl
not
inc
fistps
xchg
les
out
stos
dec
out
out
pop
xor
in
mov
fwait
mov
sti
fldcw
jae
pushf
mov
mov
lret
xchg
sbb
jae
dec
mov
or
js
mov
and
pop
test
notl
divb
mov
out
xchg
sbb
fstpt
hlt
inc
test
cmpsl
lea
js
xor
out
lret
inc
out
cltd
push
dec
out
popf
adcl
xchg
pop
xchg
lahf
aas
lock
cld
jl
movsb
imull
gs
lcall
push
icebp
sbb
fnstenv
mov
xchg
lret
add
scas
mov
push
stc
roll
sbb
arpl
icebp
fwait
mov
inc
inc
cld
jle
iret
xchg
pop
in
jns
sarl
addr16
popa
jmp
push
out
cmpsb
sbb
inc
addr16
hlt
outsb
in
xor
incb
mov
in
pop
loop
fistpll
dec
repnz
into
ss
int3
lahf
into
fwait
inc
jno
jns
rcr
shlb
jae
cmpsb
arpl
xor
adc
cwtl
pop
mov
mov
cld
out
int3
lret
cmp
test
xchg
or
pop
leave
pop
iret
pushf
jmp
out
push
push
inc
sbb
xchg
xor
mov
loopne
in
aad
pusha
sub
pop
sub
sti
pushf
cld
add
fisubrs
push
xchg
and
and
addr16
jno
ficomps
out
or
lock
out
xor
addr16
jne
rcr
push
cmp
pop
cmpsl
nop
mov
pop
mov
cvttps2pi
mov
sub
mov
loope
adc
xor
and
ljmp
pop
fcmove
push
pop
adcb
xor
jno
imul
inc
sub
inc
cmp
sti
dec
jge
jns
sbb
jecxz
mov
imul
dec
sub
pop
in
es
jp
scas
in
imul
jmp
in
inc
jbe
enter
sub
fistps
mov
fidivs
out
xchg
lods
in
popa
xchg
sbb
popf
cmp
rcll
inc
in
dec
sub
addr16
int
sbb
in
scas
int3
adc
dec
pop
les
cmp
lret
stos
repnz
rcrb
sarl
jnp
inc
dec
stos
loope
mov
hlt
aam
xchg
push
fcoml
pop
out
adc
xchg
in
jbe
push
dec
mov
inc
cmp
jne
in
sbb
sub
jecxz
mov
cmp
cmp
xor
xchg
cs
dec
dec
sbb
pop
xchg
fwait
popf
cmp
jl
jmp
mov
into
xchg
in
sbb
out
test
cs
std
cmp
cltd
test
imul
sub
pinsrw
loop
fs
pop
inc
push
xor
mov
arpl
addr16
cltd
push
rcrl
int3
xchg
int3
sbb
push
push
and
lret
inc
in
int3
mov
dec
sbb
in
fistpl
lcall
clc
mov
inc
lret
repnz
rcll
adc
outsl
dec
adcb
dec
repnz
movsb
lret
std
aad
inc
jb
subl
pop
movsl
pop
jecxz
cwtl
add
lock
sub
xchg
arpl
jmp
cs
icebp
iret
lcall
push
subl
gs
adc
dec
mov
in
hlt
loope
mov
fs
xor
push
push
iret
gs
mov
fimull
mov
sbb
sub
or
dec
in
and
adc
pop
aad
cltd
stos
shll
push
xchg
mov
sarl
xchg
test
loope
insb
xor
testb
push
mov
add
cmpsb
mov
lret
xchg
dec
cmp
inc
jo
pop
leave
decl
sub
aaa
jne
les
push
lock
mov
pusha
or
stc
add
pusha
cmpsb
ret
aas
rcr
add
sbb
pop
push
sbb
test
push
leave
push
inc
popf
xchg
mov
lret
addl
xor
xor
or
mov
lock
imul
ja
push
add
adc
mov
push
cmp
mov
jg
cli
sbb
jae
ds
iret
cmp
mov
mov
fwait
cmpsb
fdivp
aaa
mov
xor
cmp
adc
cmp
movsl
ljmp
lods
jle
xor
xchg
das
int
outsb
outsl
sbb
std
movsb
xchg
aas
sti
mov
xchg
cmc
jle
aad
bound
or
enter
jmp
sti
xorl
adc
lods
cmp
jle
xor
cmpsl
add
sbb
lock
dec
sahf
sahf
cmc
into
inc
add
pusha
pshufw
mov
mov
mov
leave
repz
negl
repz
xor
and
cmp
std
negl
arpl
mov
dec
push
jbe
sarb
xor
testb
ss
jne
femms
cmp
mov
and
xchg
push
out
sbb
sub
lea
sub
imul
out
adc
out
sub
lods
jbe
das
ss
dec
dec
fcom
popf
add
cli
sbb
jo
push
mov
movsb
and
push
in
out
fistpl
lea
sbb
movsl
mov
lret
cmpsl
dec
jb
dec
mov
sahf
inc
sub
das
lret
icebp
mov
repnz
es
and
scas
sahf
mov
std
sbb
jns
popa
dec
scas
lret
xor
iret
push
xlat
pop
into
xchg
ficoml
into
sahf
imul
and
sub
aas
dec
mov
mov
loope,pt
cmp
cmpsb
and
enter
mov
adc
sub
fnop
inc
pop
fstpt
movsb
rep
inc
adc
enter
rcl
adc
xlat
dec
xchg
lods
ret
ds
imul
scas
sub
call
dec
mov
aad
inc
test
test
daa
pop
or
cmp
mov
or
pop
icebp
fucomi
mov
enter
out
jecxz
adc
cli
sbb
mov
je
inc
adc
hlt
jbe
push
lock
aas
pop
cld
xchg
nop
fs
pop
mov
pusha
push
shrb
repnz
push
cmpsl
pop
xor
dec
jecxz
mov
inc
cld
xchg
icebp
lahf
dec
lds
stc
fimull
or
mov
popa
insl
xchg
loope
stos
jo
add
jg
dec
push
sbb
stos
jecxz
mov
fwait
aad
gs
insb
xor
loopne
vxorpd
jno
ret
aas
and
jecxz
mov
pop
ja
inc
lods
fwait
push
jno
inc
lods
xchg
jns
sub
sbb
inc
stos
mov
sub
out
insb
mov
test
cmp
and
imul
mov
icebp
xor
out
test
sub
and
cmp
dec
sbb
jb
sbb
inc
xor
xlat
mov
mov
and
in
scas
mov
pop
data16
dec
and
inc
jb
cmp
mov
jae
cs
mov
orb
aad
call
popa
sub
inc
mov
xchg
je
jle
sub
sub
xor
mov
loopne
inc
out
loope
imul
imul
pop
add
lahf
inc
mov
imul
lea
xor
aas
mov
bndstx
jge
addl
nop
arpl
add
lock
push
movsb
xchg
outsb
add
mov
repnz
mov
loop
stos
int3
lcall
pop
in
push
mov
or
and
or
jmp
cmp
jb
xchg
loopne
xchg
movsb
pop
or
xchg
mov
outsl
pop
pop
stos
push
les
aaa
pop
sub
sbb
and
jo
inc
lock
sbb
cmp
iret
loop
in
test
dec
and
repnz
repnz
je
fdivrl
in
jmp
imul
lds
mov
test
add
mov
inc
jno
xchg
mov
pop
lcall
mov
sarl
pop
jne
dec
popf
lods
push
ss
jmp
xchg
xlat
push
lahf
push
ret
cwtl
dec
adc
test
mov
leave
pop
test
outsb
xchg
cli
and
sti
cmpsl
xchg
movsb
out
add
pop
std
sbb
movsb
fs
clc
shll
jecxz
aas
icebp
add
sahf
mov
jae
dec
xor
dec
shrb
mov
or
cld
cmp
jnp
sbb
cmpsb
gs
stc
stos
add
js
lret
popa
mull
iret
push
mov
out
mov
push
push
push
jnp
sub
lea
outsl
inc
jecxz
sarb
sbb
jb
sub
bound
pop
insb
adc
or
mov
jae
adc
leave
rep
jecxz
fwait
loope
sbb
or
orb
je
cmp
lret
rorl
pop
xor
icebp
jb
fists
stos
movsl
pop
dec
inc
ret
hlt
lcall
mov
xchg
mov
jnp
imul
shl
inc
adc
outsb
cmpb
je
or
movsl
pop
add
push
push
push
mov
into
push
pop
bound
lea
xlat
mov
test
daa
sub
js
daa
dec
outsl
cs
stos
push
in
mov
int
sub
push
inc
pop
pop
cmp
hlt
push
jecxz
notb
mov
in
decl
mov
out
fcompl
jecxz
aad
js
push
cli
lret
xor
mov
cmpb
lds
sub
lret
jge
mov
lret
pusha
in
mov
pop
adc
lea
pop
ficoms
mov
pop
cmp
aaa
cmpsb
stc
orb
jnp
add
or
adc
xchg
mov
inc
sub
push
sbb
not
out
cwtl
test
sbb
mov
and
push
cmp
inc
dec
xchg
mov
push
mov
pop
xor
adc
repnz
ficompl
mov
lret
mov
cmp
jl
and
xor
js
aas
pop
shl
pushf
sbb
mov
xchg
sub
mov
xor
adc
xchg
dec
or
mov
aaa
int
mov
mov
ja
out
jo
xor
cmc
inc
icebp
cmp
ds
mov
ss
hlt
shl
insb
mov
dec
andl
dec
pop
adc
fiaddl
icebp
xor
icebp
pop
sbb
jecxz
subb
mov
jge
jno
aad
outsl
jecxz
pop
xchg
dec
aad
sbbb
add
rcrl
lea
push
sub
cltd
xchg
leave
lea
cli
jb
jle
fcmove
cmpsl
rorb
cmp
testl
lock
inc
and
mov
add
gs
cmp
insl
mov
and
adc
out
xchg
cs
sub
jg
cmp
pop
lahf
inc
mov
inc
push
imul
lret
lds
and
dec
in
push
cmpsb
dec
xchg
imul
push
push
cmp
push
mov
fsubr
out
adc
push
les
jmp
andl
dec
mov
addr16
sub
aam
leave
mov
aas
add
pop
mov
pop
pop
test
adc
xor
xor
rolb
cmp
pop
pop
dec
or
icebp
pop
push
ret
jg
jle
pop
mov
js
movsl
mov
fstps
lea
sti
xor
sbb
jecxz
icebp
dec
imull
movsl
lea
inc
xor
inc
cmp
clc
mov
sti
inc
mov
into
test
push
or
jns
sbb
int
dec
jae
xchg
cmpsl
cmp
cmpsl
pop
lds
adc
adc
jmp
cwtl
std
js
aad
fimuls
cmp
push
cld
lcall
add
xor
aas
add
push
add
aam
jbe
iret
sbb
cld
sti
fcmovne
push
insl
mov
xor
fucomp
jb
inc
cmp
fwait
movsb
add
mov
or
in
bound
sub
adcl
mov
and
inc
add
cs
fisttpl
sub
and
push
icebp
test
adc
ret
mov
jecxz
push
xchg
jecxz
orl
dec
repnz
adc
add
and
or
and
xchg
sub
dec
cs
rorl
pop
insl
jmp
dec
sbb
jo
aam
or
dec
lds
add
das
xchg
cwtl
pop
sbb
in
jmp
mov
or
mov
or
sbb
mov
pop
into
jecxz
inc
cmp
mov
xchg
testl
mov
jns
cs
and
adc
cmp
xorl
lcall
notl
filds
mov
daa
inc
push
cltd
push
cmpsb
mov
out
ret
mov
dec
rorl
inc
jbe
fdivrs
push
jo
jo
loopne
jmp
adc
insl
jne
gs
cmp
pop
mov
test
fidivrl
push
in
lcall
mov
lret
xchg
xor
mov
shrb
scas
mov
fsubs
inc
inc
jns
arpl
test
pop
mov
xchg
faddl
jne
xor
xor
mov
jl
in
repnz
fiaddl
pushf
pushf
loope
in
test
jnp,pn
in
shll
mov
and
movsb
nop
enter
mov
test
in
shl
jne
xchg
jecxz
sub
add
xchg
pop
stos
stc
sbb
cmpsb
or
adc
and
adc
iret
dec
in
notb
int
xor
shrb
test
dec
pop
cld
loop
mov
mov
xchg
mov
jae
adc
xor
mov
fistpll
scas
pop
mov
ds
mov
loope
imul
stc
sub
cmpsl
mov
mov
dec
ret
jo
test
inc
inc
fisttps
sahf
sub
es
addr16
lret
xchg
add
mov
fdiv
loopne
and
push
test
pusha
jae
fs
adcb
sbb
push
lds
xor
outsb
cmp
int3
addr16
xchg
scas
fstps
insl
mov
hlt
sbb
and
movsl
pop
cltd
push
stc
insb
sub
adc
and
pop
push
fcom
lcall
mov
and
xor
movsb
loopne
jb
fs
stos
ret
adc
push
test
pop
xchg
mov
pusha
popf
pop
mov
push
fcoml
mov
aaa
movsb
loop
shl
pop
push
inc
iret
in
xchg
mov
stc
mov
xchg
cmp
pusha
mov
je
xor
fistpll
mov
fnstcw
lcall
ficomps
mov
xchg
sbb
pop
shl
cmp
shl
nop
imul
dec
mov
ss
jns
pop
jecxz
subl
xchg
sbb
idivl
mov
adc
push
push
jmp
or
mov
outsl
out
test
mov
add
mov
inc
fs
adc
fwait
sub
std
cmp
repz
rcll
mov
jle
out
cwtl
in
enter
xor
xor
jnp
push
fstpt
lock
jge
jle
push
jo
jl
pop
testl
sub
scas
fs
inc
push
pusha
push
test
sub
jmp
scas
inc
lret
push
stc
inc
add
jbe
pop
jo
and
sub
xor
push
stos
stos
stos
and
mov
pop
or
xor
pop
fcoms
dec
stc
jnp
cmpb
or
test
add
lock
or
xchg
jnp
add
pop
xchg
test
and
pushf
pop
adc
push
test
cs
adc
jbe
pop
ljmp
ljmpw
lret
xor
es
or
xlat
pop
mov
or
jecxz
insl
mov
or
push
fistps
mov
lock
add
push
push
sahf
leave
movsb
fisttpll
fists
outsl
movb
mov
stc
jno
testl
sub
jb
xor
xor
add
xor
xchg
jge
addb
add
movsl
dec
data16
loop
add
es
dec
sbb
enter
sti
enter
iret
xlat
inc
xor
jp
mov
sbb
fwait
mov
pop
lret
mov
and
inc
xchg
cmp
sarb
lret
daa
arpl
pop
push
data16
test
jo
sbb
int
test
dec
mov
lahf
mov
enter
mov
push
in
mov
nop
dec
pop
data16
out
shr
pop
insb
mov
cmc
mov
inc
mov
and
ret
pop
jg
cld
in
dec
movsb
ret
jmp
test
jge
push
sbbl
jnp
sbb
jg
lock
stos
mov
ljmp
stos
jbe
out
pop
stc
sub
hlt
sub
and
mov
fwait
stc
mov
test
cmp
push
je
cs
xchg
push
jmp
xchg
test
pop
mov
fstps
push
fisttpl
daa
stos
mov
je
pop
lock
sub
out
adc
fisttpll
arpl
push
cmc
dec
mov
adc
xchg
pop
mov
pop
lahf
inc
notl
enter
xor
jp
xor
out
adc
xchg
data16
dec
ss
xchg
data16
mov
pop
insl
stc
fisubl
repnz
inc
sub
lods
xchg
adcb
pusha
mov
mov
xor
jp
fidivs
sub
imul
jno
mov
mov
sub
lods
cld
mov
inc
cmpsb
inc
stc
enter
sbb
sbb
in
fwait
inc
xchg
pop
fldt
cld
outsb
std
xor
pop
loop
or
fld
test
sbb
sahf
ret
dec
subb
rorb
cmc
or
fisttpl
int
scas
daa
jo
sbb
push
adcl
ljmp
mov
push
xlat
pop
mov
pop
push
push
fstps
sbb
out
mov
cltd
mov
jecxz
pop
ds
fcmovnbe
test
cwtl
fadd
popa
rcr
inc
inc
sub
mov
xchg
cmp
loopne
mov
mov
stos
sahf
cmc
into
mov
test
stos
inc
adcb
sub
movsl
mov
dec
dec
adc
cmp
mov
inc
push
dec
or
mov
loope
ss
push
fcmovb
ljmp
push
popl
ss
pop
loop
out
mov
ljmp
or
fsubrl
mov
fsubr
cmp
xlat
pop
lds
push
mov
lods
mov
andl
loop
test
or
xchg
sbb
inc
ljmp
lahf
pcmpeqw
xor
jae
dec
push
sbb
and
inc
add
add
sbb
fld
loope
fisttpll
or
push
mov
in
cmp
adc
in
dec
inc
ds
into
cmpsl
jo
popf
sti
das
scas
js
repnz
test
out
into
pop
fstps
pop
add
cwtl
pop
dec
sub
fidivs
xor
xchg
cltd
push
incb
aam
sub
loopne
inc
push
mov
cld
cld
or
and
repz
cmpsb
mov
jl
and
out
and
mov
push
mov
lret
pop
lret
and
inc
repz
push
inc
lret
add
add
dec
arpl
push
adc
roll
jecxz
sub
scas
js
adc
sbb
push
shl
test
mov
das
enter
addr16
ljmp
into
sub
jb
iret
pop
shll
cmp
fsubrp
imul
or
mov
mov
mov
nop
insl
fistpl
sahf
pop
adc
and
and
cmp
mov
cltd
in
xor
inc
scas
repz
dec
fs
mov
push
or
sub
inc
cmp
xchg
mov
popf
push
jb
adc
fidivrs
pop
mov
mov
jg
add
pop
add
bound
push
in
mov
movsl
sbb
jns
xor
push
fistps
cs
sub
and
loopne
adc
push
in
and
nop
outsb
xchg
fyl2xp1
and
aad
pushf
sub
ss
push
imul
xchg
add
loope
imul
or
outsb
aam
sbb
xchg
mulb
imul
jmp
arpl
fsubs
pop
ret
movsb
jnp
mov
jge
cwtl
orl
lea
and
mov
mov
or
mov
mov
fidivl
js
and
cli
mov
mov
jno
and
push
inc
in
bound
js
sub
mov
inc
sub
aam
fwait
cmpsb
mov
out
movsb
inc
cld
pop
inc
sarl
testl
jg
stc
ds
cmp
scas
jp
sbb
rorl
push
jbe
mov
pusha
push
mov
or
jnp
not
lock
or
push
inc
xchg
dec
mov
adc
pop
fldenv
sbb
cmp
popa
or
aam
and
test
sahf
dec
into
mov
lods
gs
mov
jno
repnz
add
inc
into
pusha
test
mov
mov
pop
test
cmp
or
mov
adc
sub
outsb
imul
dec
mov
jp
sub
sub
mov
lret
mov
lret
mov
sti
pop
add
mov
incl
xlat
cmp
push
inc
ret
outsl
xchg
out
lods
mov
es
fcmovnu
int
inc
fwait
pop
push
push
iret
pop
xor
push
inc
lret
stc
jle
jg
aaa
xor
int3
div
inc
cld
add
lahf
jmp
pop
fdiv
and
pop
shl
fldl
jno
shl
pusha
testb
and
or
f2xm1
cmp
not
sbb
dec
push
bound
jne
mov
cmp
mov
pop
mov
inc
lret
adc
jb
mov
test
rcrl
jae
pop
pop
inc
sub
inc
jnp
mov
mov
ret
cltd
mov
dec
in
lea
cmp
dec
jne
mov
sub
push
xchg
lods
outsb
xor
jg
out
jne
pop
fldenv
cmpsb
push
mov
and
fmuls
cmp
sub
mov
and
call
lret
sti
push
xorps
pushf
sahf
dec
mov
xor
ljmp
stos
es
fisttps
xchg
mov
dec
cwtl
or
enter
xor
rolb
mov
add
jle
scas
ja
mov
in
mov
popa
sbb
aam
test
leave
popl
mov
pop
inc
and
in
imulb
outsl
and
xchg
pop
xchg
mov
js
push
push
dec
lods
cld
cli
into
xorl
sbb
cmpsl
pop
push
iret
cltd
inc
xchg
imul
jle
pusha
xchg
push
mov
pop
scas
pop
sbb
push
mov
push
ret
pop
out
mov
outsb
xchg
sbb
fwait
jb
push
lods
sub
scas
insb
dec
scas
outsb
call
in
ret
mov
sbb
out
jecxz
xlat
jo
scas
in
scas
loope
jmp
aaa
ja
lea
mov
sarl
sub
push
jle
jno
mov
shr
mov
loope
sub
loope
lret
sar
fidivrl
pop
aam
clc
imul
insl
ror
rcr
int3
imul
jns
movsb
cmpsb
jns
add
repnz
sarb
mov
push
inc
test
lea
js
in
sub
xchg
push
scas
mov
nop
data16
dec
aad
in
cmp
icebp
lcall
mov
movsl
xor
cmp
xor
dec
dec
shll
sub
repz
inc
imul
dec
cmp
repnz
dec
push
into
mov
cld
mov
sbb
dec
out
xor
daa
adc
jge
scas
cmpsb
loopne
shlb
scas
pop
push
mov
in
mov
dec
fildll
dec
sbb
xchg
push
push
pop
push
test
clc
push
cmp
lods
add
popa
lcall
ret
lret
push
jge
dec
xchg
xor
xchg
pop
add
aam
xchg
ss
stos
dec
mov
xorl
push
mov
aas
push
inc
outsb
mov
adcl
mov
push
fcmovnu
dec
in
cli
push
lods
aam
jne
or
out
adcl
xchg
std
mov
mov
lcall
lcall
sub
and
sub
mov
inc
cmpsl
jecxz
pusha
es
xchg
rorl
nop
pop
sub
les
mov
icebp
mov
cmp
jcxz
cmp
inc
jno
or
in
das
push
mov
test
and
sbb
mov
mov
mov
gs
add
xchg
push
cmc
in
popf
pop
adc
stos
cmp
hlt
pop
jbe
stc
cmc
cmc
test
enter
or
xchg
dec
jge
push
mov
mov
dec
sub
and
hlt
xor
push
shrl
aad
or
jb
pop
sub
sub
mov
popf
adc
dec
mov
int3
mov
pop
arpl
push
icebp
icebp
pop
push
outsl
lods
cltd
cltd
scas
inc
or
adc
cmp
xor
pop
into
das
pop
pusha
daa
nop
fbld
mov
aam
push
out
sub
ret
sub
fistpll
pushf
dec
add
add
cmpb
mov
jae
mov
add
loope
test
mov
lods
call
or
mov
xor
lcall
push
inc
push
pop
lds
aas
mov
rorl
mov
fwait
sbb
subl
adc
xchg
mov
test
loop
add
pusha
or
mov
incb
hlt
imul
lcall
stos
jae
lods
popf
mov
stos
mov
or
rorb
rcrb
sti
enter
xor
adc
lahf
dec
cmp
mov
xchg
insb
and
je
dec
sbb
xchg
scas
pop
push
aad
loop
inc
and
jg
adc
add
add
xchg
int
sub
add
adc
mov
mov
loop
cwtl
cs
xlat
cmp
aas
add
dec
in
dec
mov
cmp
push
popf
ljmp
push
inc
dec
es
add
test
and
lret
jg
push
jnp
jmp
fldcw
cmp
and
push
lea
sbb
adc
and
fstpt
das
inc
mov
stc
push
movsl
pusha
mov
dec
testb
inc
aam
outsb
mov
repnz
les
icebp
pop
mov
cld
xorb
mov
pop
inc
pop
and
sbb
rcr
jae
aad
rclb
lods
add
mov
sbb
cmp
mov
jg
dec
pavgw
adc
jnp
mov
rol
push
pop
adc
pop
mov
daa
aad
outsl
mov
adc
inc
lods
lcall
call
lds
push
call
fistpl
inc
jb
push
inc
jmp
pop
ss
aaa
aaa
lahf
test
xchg
repnz
insl
call
sbb
push
pop
cmp
mov
xor
cmp
inc
mulb
movsl
shrb
xchg
or
aad
pop
sbb
fnstcw
mov
fdivs
pop
jnp
pop
cmp
daa
dec
inc
jge
jle
movsl
or
bound
adc
sub
fistpl
cli
mov
xchg
lods
mov
cmp
rolb
mov
cltd
mov
or
int3
sbb
fiaddl
aam
mov
popa
dec
inc
data16
pop
mov
adc
xor
and
lds
xchg
adc
sub
mov
jnp
test
dec
sub
icebp
push
sub
adc
inc
add
add
and
or
jle
out
mov
jge
lea
lods
shrl
mov
xchg
push
jnp
int
inc
testb
sti
mov
cwtl
clc
in
or
and
pop
jmp
nop
cmp
xchg
in
out
addr16
push
enter
fdivl
sub
and
notb
popa
sbbb
dec
bound
stos
int3
fbld
outsl
popf
add
out
fadd
loop
xchg
fs
dec
mov
adc
imul
inc
mov
int3
xchg
and
fwait
aam
pop
arpl
pop
movsb
xor
arpl
sti
mov
insb
xchg
loope
mov
les
inc
fucomp
cmpl
cld
aas
pop
pop
cmp
ss
dec
cli
mov
push
cmpb
scas
hlt
inc
roll
mov
push
stos
dec
sbb
add
and
ljmp
sbb
mov
pop
and
ja
imul
pop
push
dec
mov
jno
xchg
mov
imul
cwtl
pop
es
cmp
adc
pop
and
jo
xor
push
loop
std
popa
aas
jl
xor
pop
test
sbb
sub
enter
jmp
sbb
mov
aas
inc
cmpsb
mov
movsb
ret
push
mov
in
jb
outsb
loop
or
mov
xorl
cmp
inc
adc
ret
repnz
add
ret
xor
push
fdivp
psrlw
sub
cmp
neg
sarb
cltd
lahf
pop
das
push
data16
sbb
stos
mov
mov
or
jae
out
lea
stos
shlb
test
leave
hlt
aad
rcr
inc
ss
andl
cmp
cmp
cwtl
out
lcall
push
lret
test
jae
iret
nop
aas
cmp
jge
cmpsl
and
mov
sahf
mov
sub
movsb
push
pushl
fwait
imulb
lods
mov
sbb
in
mov
dec
pop
cltd
lea
push
out
fdiv
ret
inc
cmp
repz
sbb
inc
xchg
cmp
xchg
pop
pop
repz
outsl
cmpsb
add
xchg
and
xchg
pop
sbb
xchg
scas
fcmovu
sbb
fists
push
jg
aam
fnop
xor
mov
inc
call
push
bound
sub
testb
mov
pop
aaa
cltd
mov
xor
push
pop
mov
sbb
fsubrs
inc
sbb
int
andl
pop
sbb
pop
sub
fmul
mov
sub
cmpsb
fisubs
pop
pop
jo
aad
push
insb
pop
movsb
insb
mov
pop
int3
adc
hlt
lret
sub
xlat
cmp
test
lcall
add
fmulp
push
xchg
sub
sbb
xor
sub
dec
mov
dec
aas
lock
in
inc
ror
mov
or
or
inc
lret
inc
mov
inc
ja
xchg
cmp
in
jne
jb
sbb
pop
sti
adc
and
out
push
or
loope
into
std
adc
loop
pop
jmp
insb
rorb
lods
test
sbb
lods
aas
sbb
cmp
test
insb
cmp
cmpsb
lret
mov
and
call
rcrl
pushf
pop
mov
pop
and
cld
push
jp
sub
xchg
dec
fbstp
dec
fildl
pop
addr16
jle
sbb
push
add
and
stos
lock
and
jns
inc
pop
in
pushf
sub
aas
fldenv
sbb
xor
mov
adc
jae
rclb
jl
inc
ja
jle
mov
jae
loopne
or
adc
push
mov
push
loope
es
jbe
out
popf
cmp
outsl
jno
jecxz
push
xchg
in
jl
sub
loope
ja
xor
je
jae
adc
into
jne
cld
js
iret
je,pn
lock
sbb
mov
push
sub
mov
pop
mov
nopl
insl
pop
pop
cmpsl
adc
push
bound
in
hlt
add
sub
pushf
push
add
fildl
pop
push
enter
pop
add
mov
or
fsubr
and
jl
mov
pop
jl
xor
rcrb
pop
push
adc
fidivrl
dec
rcrl
stos
cmpsl
xor
icebp
jo
ret
pop
outsb
test
dec
sti
add
mov
movsb
push
push
add
lods
add
jae
in
mov
mov
les
outsl
pop
hlt
xor
mov
pop
in
mov
outsb
mov
mov
push
jb
popf
push
dec
fidivrl
mov
lods
ret
push
test
out
or
xchg
stc
xor
mov
push
out
stos
out
dec
sub
push
fisubrs
pop
fisubrs
push
in
outsl
mov
out
fcoml
mov
in
ja
mov
pop
filds
cs
fs
dec
dec
dec
adc
ljmp
sub
pop
jge
jns
xchg
push
int3
rcrl
lods
clc
jp
or
movsb
aaa
pop
dec
mov
fistpl
push
in
addr16
mov
sub
cwtl
dec
sbb
push
mov
sbb
pop
push
loope
xorl
ror
cld
out
aaa
sub
sahf
mov
popa
inc
mov
xor
jb
je
sahf
pop
xor
and
dec
mov
incl
bound
inc
fdivs
sbb
cmp
push
adc
mov
xchg
shll
add
adc
into
das
sub
xor
xchg
mov
push
jbe
faddp
in
cli
lea
fstpt
push
and
in
sbb
inc
cmp
push
mov
repz
fists
sub
loopne
popf
ljmp
cwtl
aas
push
mov
jnp
mov
clc
add
popa
jno
scas
pop
dec
mov
xchg
ljmp
inc
sub
cmpsb
or
fistl
push
mov
ret
mov
sub
aam
or
jne
cwtl
cmp
inc
mov
jae
fistpll
and
test
inc
mov
add
repz
adc
push
xor
pop
aas
inc
and
out
or
xchg
test
scas
imull
push
adc
dec
push
push
dec
mov
in
fidivl
std
mov
cli
mov
and
rorb
mov
cmp
insb
xchg
or
cmc
out
icebp
ficoml
mov
xchg
fildll
ljmp
call
loop
repnz
inc
rcrb
rcrl
pop
rorb
push
js
or
scas
mov
add
leave
fisttpl
mov
movl
nop
cmp
mov
jno
addl
add
adc
push
mov
scas
sbbl
push
cs
mov
arpl
bound
test
mov
mov
jno
out
cmp
jmp
pop
paddusb
mov
inc
cmc
sbb
arpl
xor
stos
mov
push
repz
xor
add
xor
sarb
xlat
lods
mov
add
dec
bound
repnz
xchg
dec
int
sbb
insb
enter
repnz
dec
repz
xchg
sbb
mov
negl
sub
aaa
cmpsb
lcall
dec
ja
and
or
pop
daa
push
sbb
std
push
xchg
movsl
ficomps
les
icebp
mov
ja
adc
and
ja
fimuls
jns
stos
jge
lea
mov
ficompl
push
and
mov
shr
ljmp
mov
in
xorl
mov
or
inc
xorl
dec
mov
hlt
fwait
dec
push
mov
or
loop
pushf
mov
outsl
divb
sbb
fsqrt
mov
lock
mov
adc
xchg
imul
cmc
push
negb
int3
inc
es
xchg
push
sbb
repnz
cmp
add
loope
jge
icebp
dec
mov
pop
push
rorb
adc
push
dec
lret
hlt
pop
mov
in
inc
movsl
insb
and
push
add
adc
push
sub
leave
fs
dec
adc
xor
xor
pop
push
leave
test
xchg
fs
adc
push
xchg
das
loope
aam
aaa
adc
stos
outsl
mov
decl
pop
sbb
mov
xlat
mov
andl
lret
mov
mov
ret
outsb
por
les
addr16
xlat
subl
dec
insb
push
cld
cmp
mov
mov
aaa
fwait
mov
mov
sub
sbb
hlt
dec
dec
mov
inc
mov
mov
fwait
dec
xchg
push
push
fistl
or
dec
mov
pop
out
mov
lds
lods
stos
repnz
push
in
into
mov
sbb
shlb
xchg
sbb
jecxz
adc
inc
xchg
ffreep
add
jp
mov
xchg
imul
mov
repz
jg
push
outsb
cmp
aaa
jmp
outsb
bound
inc
mov
scas
outsl
adc
cmovnp
aas
mov
int3
ret
pop
sbb
pop
dec
jb
jp
jge
xchg
and
xchg
add
xor
int
test
or
movsl
and
daa
movsl
ss
cmp
mov
adc
mov
xchg
pusha
cmp
imul
xor
fldenv
sub
mov
das
inc
pop
scas
into
adc
ret
clc
enter
or
xchg
test
call
rcl
dec
inc
pop
in
or
dec
call
in
pop
adc
insb
ljmp
lds
js
fists
or
sub
rcl
repnz
data16
je
sbbb
negl
dec
inc
stc
pop
sub
xor
mov
lcall
sub
jle
push
add
in
xor
rolb
and
lock
sbb
and
int
dec
int3
xchg
adc
mov
sub
ja
fwait
jge
push
adc
test
xor
or
adc
push
push
sub
mov
jl
scas
add
fdivl
and
sarb
stos
xlat
jecxz
inc
push
pop
mov
xchg
push
and
loopne
or
inc
push
xor
jo
out
cmp
inc
xchg
shrb
pop
pop
scas
lret
test
addl
orb
jl
arpl
pop
fsubs
xchg
fwait
and
js
push
stc
mov
cmp
jno
jl
mov
xor
dec
and
or
scas
inc
jbe
xor
gs
push
daa
push
xchg
mov
fs
fwait
cmp
mov
pop
push
in
test
push
adc
lret
shl
sbb
in
popa
dec
mov
popf
fwait
mov
push
pop
push
xchg
jmp
cli
xor
sub
adc
mov
aaa
push
pop
cmp
mul
aaa
dec
enter
popf
mov
mov
add
push
push
jns
inc
mov
jecxz
clc
ret
mov
lcall
aas
jne
into
lret
pop
ffree
inc
js
dec
push
jae
ss
jnp
cmpsb
roll
mov
in
into
pop
jb
push
sahf
popa
es
dec
mov
jecxz
add
lds
jnp
dec
dec
repz
jge
mov
or
aad
xor
adc
push
xor
push
dec
cmp
pop
insl
adc
sti
popa
outsb
aas
add
pop
mov
mov
jne
or
aam
enter
dec
loope
cli
cmp
jle
mov
jno
push
dec
out
jle
imul
inc
add
mov
test
xchg
add
and
call
ljmp
lcall
pop
int3
nop
fwait
test
outsl
data16
pop
sbb
outsl
and
xchg
dec
lret
adc
jmp
stos
push
jnp
dec
mov
cmp
mov
outsl
or
pushf
pushf
int3
pop
jae
and
clc
push
add
and
cld
pop
dec
fldenv
push
adc
sub
xlat
mov
pop
js
pop
sbb
inc
inc
imul
sub
cwtl
popa
jnp
inc
gs
decb
mov
shrb
mov
and
xchg
repz
insl
dec
dec
dec
fadds
push
ret
aas
shr
hlt
dec
xchg
sbb
es
and
inc
xchg
les
pop
orb
insb
inc
sbb
xlat
inc
xor
and
lods
add
fadd
bound
pop
test
loope
xchg
fstpt
mov
xchg
in
dec
and
insl
out
sarb
lock
je
stos
es
and
sbb
popf
push
jne
mov
mov
sub
add
loope
pop
daa
nop
cmp
xchg
fisttpl
test
idivl
mov
cmpsl
dec
mov
lods
out
test
push
test
adc
push
repnz
imul
mov
pop
repnz
jae
imul
out
mov
je
jnp
mov
mov
pop
pop
or
cmp
int
adc
in
lret
pop
or
scas
add
es
mov
imul
sbb
jl
push
xor
add
inc
pop
outsl
clc
push
mov
dec
js
add
outsl
cmp
and
lret
xchg
adc
filds
pop
mov
adc
ds
mov
loop
outsb
adc
test
mov
jb
mov
movsb
xchg
xor
repnz
scas
mull
test
cmp
add
dec
xchg
fcomps
adc
fnstcw
notb
pop
mov
sbb
call
js
js
cmp
add
push
movsb
xchg
push
mov
in
sbb
mov
jp
popa
push
or
xlat
jmp
push
movsb
imulb
inc
in
jno
jae
lahf
jle
movb
mov
push
push
mov
sub
aad
test
sbb
mov
leave
ret
in
mov
mov
insl
adc
out
dec
cmp
cmc
inc
mov
inc
aad
push
add
insb
ret
sbb
out
movsl
mov
testb
push
mov
and
and
rcrl
jp
inc
inc
ret
dec
daa
jns
ljmp
pusha
ret
out
fists
push
push
scas
adc
inc
clc
lahf
loope
cli
mov
ja
xchg
fcmovu
les
out
mov
shll
lahf
xchg
test
stos
cmp
enter
cli
test
and
test
pop
or
xor
mov
jecxz
rol
out
scas
cmpb
aam
lock
cmp
movsl
sub
insl
lret
out
xor
dec
xchg
scas
mov
cltd
std
mov
iret
adc
mov
in
lcall
push
sbbl
std
push
adc
sbb
jbe
call
nop
adc
inc
inc
xor
xor
xor
mov
fnstenv
xorl
adc
jno
xchg
push
jmp
jae
popf
repz
xor
xor
adc
mov
xchg
adc
icebp
hlt
mov
fnsave
into
fmul
add
xchg
iret
mov
mov
cltd
adc
jle
push
icebp
xor
leave
adcl
lock
mov
lock
fimull
inc
mov
dec
push
movb
jecxz
orb
test
insb
stos
lds
setnp
femms
add
shlb
push
jecxz
addr16
aam
leave
push
aam
inc
sbb
rcr
jle
dec
mov
fidivl
js
sarl
xor
sbb
xor
jne
dec
mov
imul
les
ss
daa
and
icebp
push
adc
lahf
jmp
push
in
leave
in
mov
lock
xor
add
mov
adc
pop
mov
ljmp
inc
lret
adc
adc
jae
mov
test
jns
lret
je
mov
mov
shlb
insl
sbb
nop
sbb
testl
ljmp
into
inc
leave
xchg
mov
push
call
sub
jnp
sbb
jmp
repnz
sbb
cmpb
fidivs
lcall
xorl
icebp
std
aam
cs
repnz
jecxz
std
adc
faddl
mov
cli
imul
dec
push
movsl
pop
jp
jg
cli
mov
and
sbb
nop
out
int3
adc
mov
jle
enter
addr16
inc
dec
sbb
ja
mov
ret
pop
repnz
ret
js
push
dec
dec
cmpl
scas
jg
adc
scas
cmp
call
add
or
aam
scas
stos
jmp
jne
mov
adc
push
dec
pop
jae
jmp
add
in
hlt
or
dec
mov
jge
arpl
mov
inc
mov
xor
xlat
adc
dec
lock
cmp
adcb
test
testl
inc
xchg
cmpsb
lock
sti
int3
rol
jle
aaa
add
mov
js
add
jp
pop
mov
leave
es
mov
rcrl
fs
test
pop
pop
pop
xchg
mov
dec
xchg
sbb
adcb
insb
subb
pop
out
les
insb
pop
jge
fmull
pop
and
roll
xor
fistl
xchg
mov
mov
test
lock
fwait
les
cmp
pop
lret
xlat
imul
lcall
xchg
lret
and
and
mov
xchg
add
sahf
dec
add
add
dec
ficoms
js
hlt
loop
test
sub
in
mov
cmp
in
dec
aaa
lret
xor
fisubrs
imul
lret
gs
in
outsl
sarb
push
andb
adc
dec
shlb
pusha
dec
in
in
and
pop
into
pop
pop
mov
loop
mov
in
push
fsts
out
repz
flds
adc
inc
bound
in
into
movsl
jno
mov
lret
les
pusha
mov
lret
ret
mov
inc
xchg
insl
pop
ja
in
cmpb
mov
adc
movsb
jge
mov
mov
in
and
lods
fadds
sub
dec
jne
aaa
lcall
cmp
outsl
mov
cmp
jno
out
fistpl
and
aaa
sub
imul
subb
or
xor
sub
hlt
adc
push
xor
cmp
adc
jne
add
outsl
mov
mov
mov
arpl
test
cmp
scas
enter
jbe
cmp
fdivs
shl
test
add
xor
fistl
inc
sbb
inc
outsl
scas
fwait
push
outsl
sar
ret
sub
icebp
lcall
pop
mov
das
icebp
xchg
push
sub
mov
dec
adc
pop
add
rcrb
jb
js
fdivrp
and
jne
and
inc
dec
sbb
mov
daa
pop
pop
cmp
jns
stc
dec
sub
jge
lea
into
jns
je
call
or
mov
cmpsb
iret
call
push
lock
dec
push
aas
pop
add
test
pop
mov
dec
push
lret
mov
and
and
and
dec
sbb
enter
incb
cmpsl
fwait
pop
push
das
push
rcrb
jno
mov
mov
outsb
push
repnz
push
ffreep
fistpll
xorb
add
pop
mov
mov
mov
imul
loope
xchg
lods
jbe
ljmp
fsts
in
hlt
jmp
inc
cld
inc
mov
das
add
jl
mov
sbb
clc
inc
inc
mov
int
cmp
inc
mov
jbe
dec
cmpsl
mov
rol
mov
push
rcl
xor
cmc
push
or
inc
int
push
inc
adc
mov
pop
xor
xor
jecxz
jb
jne
fbld
out
push
clc
inc
clc
mov
add
dec
adcl
ret
fwait
gs
enter
push
mov
xlat
adc
mov
or
and
lcall
jbe
in
push
or
sub
cmp
cmp
pop
out
daa
push
and
bnd
in
pop
stos
and
cmpsl
push
divl
xchg
or
pop
cs
jae
xor
pop
cmp
outsl
shlb
add
push
add
xor
into
xchg
dec
mov
lock
mov
cmp
in
das
das
and
fsubrp
lock
pop
and
cmp
pop
jecxz
addr16
push
xchg
mov
shlb
sub
out
imul
sub
pop
pop
inc
int3
sbb
iret
mov
or
adc
push
mov
adc
xlat
aaa
loopne
push
fwait
lock
lds
mov
pop
mov
mov
pop
adc
in
jne
gs
cmpsb
roll
mov
sbb
in
jno
add
sti
mov
in
pop
dec
pushf
in
cmpsl
cmp
push
adc
mov
lahf
xchg
mul
dec
cmp
adc
divps
rclb
inc
cli
test
inc
in
pop
sub
jmp
sub
outsb
daa
push
mov
xchg
repnz
std
rclb
xlat
in
cmc
negl
inc
jnp
idiv
jns
data16
popf
loope
jle
add
loope
test
mov
sbb
push
aaa
fmull
out
inc
loopne
ret
cmp
pop
pop
fdivp
mov
sbb
cmp
push
nop
mov
jns
cmc
inc
mov
aas
in
mov
sub
xchg
jmp
or
cmp
icebp
lea
jns
pop
scas
in
test
jae
pop
cs
int
sbb
mov
push
pop
xchg
mov
and
xchg
ret
lea
rcr
loop
inc
arpl
sahf
add
cld
sbb
lret
sub
fdivs
stc
dec
in
icebp
out
lcall
mov
pop
test
or
scas
and
adc
ja
daa
out
jl
sbb
mov
mov
sar
dec
or
in
inc
mov
sub
sbb
insl
popf
dec
or
leave
outsl
loopne
pop
insb
adc
and
cmp
mov
adc
call
in
std
bound
and
cmc
add
je
aad
mov
dec
mov
push
push
dec
push
inc
jo
and
or
outsl
mov
sub
addb
jnp
adcl
or
add
jecxz
les
mov
xlat
lods
mov
and
mov
outsb
sti
sub
mov
or
iret
jg
test
pop
imul
add
cli
ss
fildl
sub
and
fsubr
icebp
add
inc
or
xor
pop
sub
mov
xor
mov
pop
repnz
push
adc
les
std
je
xchg
adc
popa
js
shr
sub
xchg
leave
dec
xchg
fildl
loop
jb
ret
mov
nop
cmc
jo
es
dec
inc
aaa
pop
xor
inc
xor
jecxz
shll
insb
cmp
jne
shl
popa
mov
loop
sbb
loop
and
pop
mov
fbld
call
in
sub
mov
out
iret
stos
cwtl
pop
xor
cli
repnz
fmull
mov
lcall
dec
xchg
rcl
movsb
inc
sbb
cmp
sbb
aas
test
addr16
xor
dec
mov
pop
push
inc
arpl
lock
jmp
aas
lret
mov
inc
insb
sti
out
sbb
or
dec
mov
sti
gs
into
orb
pop
insl
inc
jle
inc
ja
ljmp
enter
pop
pop
mull
roll
fsubrs
mov
pop
test
push
mov
push
xor
and
lret
adc
xchg
subl
lock
les
or
dec
or
cmc
push
std
aam
jmp
call
jg
std
fucom
cmp
xchg
mov
pop
dec
imul
mov
in
rcll
ljmp
jg
fwait
mov
and
movsl
pushf
inc
xchg
fbld
shll
jns
cmpsb
adc
in
insl
jle
mov
outsb
dec
xor
sbb
mov
or
or
or
add
shrl
movsb
pop
push
ljmp
dec
mov
arpl
lea
jecxz
movsl
loope
cmp
pop
xor
test
xor
insl
outsl
cmp
in
jg
sub
mov
pop
loop
cmpsl
mov
or
cmovg
in
lret
test
mov
fcos
xchg
mov
jmp
ja
fwait
and
jge
lahf
jge
adc
mov
push
xchg
ja
loope
mov
mov
jge
mov
mov
decb
gs
and
pop
stos
pushf
clc
push
insb
xchg
adc
mov
into
iret
jmp
cmp
shrb
mov
stc
sub
cwtl
ja
add
int
mov
sarl
test
xor
iret
adc
xor
and
xor
cmp
aad
push
aad
adc
popa
fnsave
mov
int3
lock
xlat
inc
fnstcw
dec
or
bound
push
jnp
ud0
movsl
sbb
or
inc
cmp
stc
xlat
push
cmc
imul
fwait
in
mov
and
sahf
sbb
jae
add
dec
sbbl
fildl
imul
mov
sbb
and
fldt
fldcw
pop
and
insb
inc
and
ljmp
add
or
mov
sbb
xlat
pmaddwd
mov
mov
sub
pushf
cltd
lahf
sub
push
inc
lret
fcoms
fwait
mov
fisttpll
and
inc
adc
pop
sbb
scas
push
and
call
and
xchg
cltd
xor
pop
subl
outsl
adc
arpl
mov
ljmp
pop
adc
lcall
sbb
cmp
jo
addr16
insl
test
es
pop
jl
and
addr16
enter
repnz
and
and
adc
mov
add
aaa
loopne
xchg
sbb
gs
ret
orb
mov
push
inc
out
cld
ss
outsb
mov
sub
shl
cmc
lods
add
roll
xor
jl
cmpl
pop
fcompp
add
pushf
dec
mov
scas
lcall
xchg
and
stos
fcomps
inc
les
xchg
mov
enter
adc
jge
popa
and
insb
and
aad
mov
dec
sub
adc
test
enter
adc
adc
sbb
lds
lock
repz
in
fldz
mov
mov
scas
jo
pop
sbb
sbb
repnz
stos
and
cmp
scas
add
mov
std
sbb
mov
fldcw
mov
sub
mov
push
test
insl
xor
push
fcomip
cltd
loope
stos
or
loope
cmp
inc
jge
xor
subps
imul
in
push
repnz
test
jae
mov
test
cli
addr16
fistl
shll
xchg
pop
mov
mov
cmp
dec
ja
insb
adc
ja
mov
inc
mov
push
xorl
les
ljmp
mov
ja
jp
leave
lret
xchg
ds
mov
inc
sbb
cmp
jb
sbb
mov
jl
jp
xchg
jbe
cmc
stos
jbe
cmp
adc
scas
outsl
push
adc
sbb
lods
sub
xor
or
int
lock
outsl
adc
loop
hlt
fstpl
insl
mov
popf
cmp
push
mov
cmp
movsl
fiaddl
lock
in
jmp
sbbl
sub
loopne
ret
pop
pushf
sub
inc
xorl
sub
mov
pop
sub
push
mov
mov
mov
inc
sbb
aaa
rcrb
cmpsl
push
xor
in
add
cs
ja
sarb
lea
pop
js
popa
fwait
or
cli
div
scas
adc
das
jne
js
call
notb
sarb
sbbl
mov
not
sbb
lods
push
in
bound
sbb
sahf
addr16
sub
jmp
insb
pop
lods
shrb
inc
push
cmp
dec
imul
cmp
daa
mov
mov
push
insb
hlt
ret
scas
and
or
jbe
inc
mov
pop
xchg
cltd
scas
mov
push
ror
imul
xor
scas
jecxz
adcl
vunpckhps
pop
push
sub
xor
sahf
icebp
sahf
cmp
loope
or
idivb
mov
add
sar
mov
pop
daa
loop
popa
pushf
imul
lahf
cmp
dec
mov
and
mov
and
adc
dec
or
lods
xchg
add
pop
out
int3
fs
jne
mov
mov
jb
sbb
fdivr
adc
sbb
pop
dec
push
sub
negb
inc
dec
jo
push
gs
ret
sbb
adc
inc
fs
push
lret
out
jae
pop
testb
push
xlat
clc
push
or
inc
push
push
push
imul
int
ss
mov
sti
mov
pop
lea
sub
pop
lea
daa
sti
es
lret
mov
xchg
pop
mov
xor
imul
mov
xlat
cmc
outsb
pusha
cmp
adc
xchg
pop
fs
imul
cwtl
repnz
imul
push
aaa
mov
push
mov
mov
pop
icebp
xchg
addr16
sbb
cwtl
das
lods
pop
and
stos
sti
xchg
push
mov
std
jbe
aaa
mov
add
ret
ja
out
mov
ss
lock
cmc
jle
xchg
mov
pop
test
cmpl
testl
mov
lds
ljmp
inc
es
fcompl
fnstcw
jmp
lcall
mull
mov
mov
mov
loop
sbb
mov
xchg
push
adc
mov
fisttpl
lret
es
call
sti
jo
outsb
cmpsl
mov
fcomi
sbb
push
repnz
js
push
mov
scas
add
cs
mov
dec
mov
outsl
incl
pop
scas
sbb
pop
mov
ds
xor
popf
jmp
icebp
sub
out
jo
out
fnstcw
lahf
push
xchg
adc
movsl
sahf
sarl
mov
jge
or
out
ror
dec
andb
roll
or
das
ss
mov
inc
adc
sbb
push
xchg
call
pop
xlat
test
xchg
repnz
ds
fildl
adc
js
xlat
mov
push
add
pop
mov
cltd
jp
xchg
or
fisttps
sub
xor
push
mov
pop
flds
out
adc
aas
jg
fisubrl
sub
push
les
inc
lods
pop
and
addl
fdivs
mov
enter
je
aad
iret
rolb
lds
fiadds
xlat
pop
jl
lods
add
mov
pop
dec
aad
enter
mov
dec
stos
shr
test
ror
fbstp
pop
rcrl
lock
mull
mov
mov
sub
cmpl
pop
dec
int
out
jg
inc
inc
and
rclb
adc
sbb
or
push
fwait
outsb
inc
jp
imul
pop
add
data16
lret
mov
imul
addl
push
push
fnstenv
pop
pusha
xlat
es
push
addb
pusha
sbb
out
cmp
jecxz
test
push
or
lods
push
mov
xor
shlb
mov
or
movsl
push
lds
popa
dec
lock
dec
mov
or
in
and
dec
rorb
lods
xorb
std
mov
jecxz
mov
cmovbe
push
pop
icebp
scas
repnz
lea
daa
arpl
imul
push
test
lret
mov
inc
add
jae
push
cmp
add
pushf
out
nop
std
mov
jnp
mov
or
mov
xchg
das
push
jnp
xchg
in
push
pop
xchg
dec
pop
outsl
fucom
push
xchg
jno
adc
lahf
jecxz
cmpsl
je
push
push
shlb
jp
daa
mov
jno
fidivrl
cmpsb
ljmp
mov
xchg
lcall
add
fadds
cmpsb
inc
inc
rcrl
mov
sti
mov
negl
mov
pushf
gs
je
or
testb
jnp
mov
sahf
leave
pop
add
xchg
clc
xchg
push
sbb
nop
mov
and
fists
xchg
inc
lcall
adc
enter
cmpsb
sbb
sub
ds
mov
pop
nop
jmp
int
fldt
fsubrl
bnd
mov
mov
cmp
je
mov
cwtl
aaa
xchg
inc
ret
orb
mov
sub
cltd
xchg
outsl
daa
add
sub
lret
shll
shl
stos
adc
ss
xchg
mov
loop
jbe
cmp
inc
mov
mov
pop
mov
loopne
sbb
fisttpl
lods
test
xchg
fiaddl
adc
push
xchg
pusha
push
rcr
aam
jnp
xor
xlat
ljmp
add
push
orb
test
out
pop
stos
loop
sub
aaa
add
inc
push
sbb
pop
outsl
xlat
push
test
adcl
setne
mov
stos
sbb
sub
push
addr16
dec
cwtl
aas
xchg
test
aaa
stos
mov
dec
popa
in
cmp
xchg
lcall
push
es
fisubs
and
xchg
cs
aam
pop
sbb
xchg
lock
xchg
cltd
sub
arpl
in
dec
mov
in
cmc
cmpsl
fnstenv
sbb
jl
aad
outsb
fwait
pop
sbb
mov
testb
jne
mov
repz
aam
cltd
scas
out
mov
ds
lahf
int3
fsubs
pop
mov
xchg
stc
jg
shl
mov
ds
frstor
movsl
dec
push
pop
out
fsubs
outsb
in
xchg
add
add
out
mov
ds
cmpsl
ds
cmc
stc
jg
push
xchg
fisubl
sar
cmpsl
stc
je
mov
push
lahf
push
jne
ds
mov
cmp
mov
jae
xchg
cmpsb
xchg
mov
dec
sbb
pop
xchg
mov
jno
daa
pushf
out
dec
cmp
cmp
mov
pop
iret
mov
or
mov
or
das
in
cmp
or
in
out
stc
pop
call
jge
fimull
negl
inc
cmp
inc
dec
jg
add
dec
xchg
insb
sbb
add
nop
fnstenv
into
xchg
ficoms
mov
es
cld
sub
ss
fsubrl
ret
mov
xor
mov
inc
pop
and
fstl
or
cmp
inc
pop
ret
jnp
test
popa
jne
or
mov
pop
xor
or
cmpsl
into
sahf
dec
js
enter
cs
sahf
movsl
mov
out
sub
fidivrs
int
shll
pop
push
cltd
fdivrs
fcomip
hlt
adc
iret
outsb
sub
popf
lret
xchg
xchg
cmpsb
sbb
mov
add
push
sarb
fldcw
aaa
lea
push
xchg
lods
jmp
imul
inc
fdivs
pop
out
call
sub
xor
fs
ss
fdiv
dec
test
pop
jle
jle
rorb
sbb
jmp
les
mov
clc
test
jp
cs
std
out
in
dec
pop
pop
shrb
lcall
mov
daa
adc
xchg
nop
pop
fs
mov
jmp
out
ss
arpl
jl
les
orb
aas
sar
push
push
nopl
dec
int3
les
ja
mov
xchg
ljmp
mov
mov
push
jo
push
adc
sbb
gs
pop
cmp
in
dec
dec
pop
and
mov
jp
cmp
dec
lret
or
test
push
mov
adc
ficomps
jg
pop
jbe
data16
das
lock
lret
fistpl
repnz
outsb
pushl
adc
pop
xorl
sbb
mov
inc
push
aad
test
icebp
cmp
iret
mov
clc
sahf
mov
lds
loope
rcll
clc
ss
jno
insl
adc
pop
icebp
lods
push
ffreep
loop
push
jl
mov
jae
mov
out
outsb
icebp
jge
mov
aam
sbb
in
repz
xchg
fsub
pushf
ja
ds
push
lahf
inc
mov
stc
into
push
mov
xchg
out
cmp
inc
negb
xchg
cltd
pop
add
mov
xor
outsl
xchg
fs
jecxz
mov
daa
cli
out
stos
xchg
stos
out
std
xlat
in
cwtl
dec
dec
inc
pop
or
dec
mov
jp
jl
xchg
push
scas
int3
pop
int3
adc
dec
fistps
sub
xor
or
lahf
xlat
xchg
testl
sbb
xor
stc
jns
out
sub
xor
mov
sbb
das
sub
pop
stc
jmp
dec
push
mov
add
pop
test
lcall
shrb
scas
jecxz
mov
mov
std
scas
jecxz
sbb
push
cmp
sub
das
icebp
sub
pop
or
sbb
push
idiv
outsl
jp
mov
or
adc
sbb
jmp
das
pop
scas
ds
stos
outsb
push
add
loop
popf
clc
fimuls
test
test
mov
pusha
adc
sub
sahf
cld
jnp
scas
out
fists
stc
ja
outsl
pop
fcmove
xchg
mov
sub
push
sbb
sub
jle
clc
or
pop
pop
mov
out
popa
clc
int
fistpll
xchg
cmp
push
mov
out
das
adc
adc
cmp
pop
cmpb
xchg
movsl
shl
icebp
jno
mul
pushl
inc
pop
cmp
ja
in
mov
jo
fimuls
outsb
dec
push
jecxz
dec
xchg
pop
inc
test
jbe
pop
mov
rclb
ss
sub
clc
mov
pop
xchg
test
js
inc
inc
or
adc
push
cltd
adc
jne
xchg
jns
or
ds
jbe
pop
and
pop
in
push
jp
movsl
daa
call
std
mov
inc
scas
sub
cli
mov
ljmp
fisubl
movl
sbb
ja
mov
imul
add
lock
jge
loopne
fisubrs
jp
add
int
sti
in
dec
in
loopne
push
sub
scas
jl
xor
sub
push
outsl
fdiv
push
test
mov
fcoml
fs
test
push
movsb
jns
gs
repz
stos
in
jecxz
rcll
jmp
and
add
mov
icebp
add
sbb
sbb
fs
xor
outsl
xor
dec
out
and
pop
inc
fidivl
decl
mov
adc
mov
pushf
shrl
mov
sub
cmc
inc
in
push
dec
mov
outsb
push
jae
pop
mov
sarl
push
enter
loopne
fisttps
jne
mov
xchg
jge
jo
xchg
in
fidivl
adc
call
or
sti
dec
mov
cld
rorl
pop
jmp
xchg
ftst
lea
sbb
mov
dec
sub
stos
pop
and
cltd
mov
in
shr
pop
cmpsl
and
inc
in
in
pop
pop
mov
sbb
mov
lahf
mov
push
imul
rep
mov
mov
ljmp
rcrb
jp
or
mov
xchg
adc
sbb
sahf
pop
push
jmp
std
push
pop
mov
cmp
dec
in
ret
movsl
je
or
imul
push
pop
cwtl
js
fidivl
andb
int
das
cmp
aaa
mov
into
xchg
test
loopne
pmaxub
rol
and
cmp
dec
scas
pop
cwtl
xchg
jae
jo
mov
mov
sbb
inc
jecxz
js
clc
nop
int3
inc
arpl
inc
push
inc
xchg
mov
xchg
cmp
sbb
mov
xor
jg
sub
sub
jns
aam
pop
roll
shrl
iret
shlb
adc
sbb
ds
fnstsw
je
jp
jnp
inc
sbb
add
sti
pop
cmp
jge
dec
divb
add
popa
inc
stos
xchg
inc
pop
in
dec
sub
ret
lcall
cmpsl
repnz
fwait
hlt
in
jmp
fsts
push
notb
jbe
jg
imul
outsl
push
adc
cld
nop
scas
mov
pop
sbb
mov
inc
xchg
stc
adc
push
call
insb
xchg
aas
push
cltd
shll
vcvtdq2ps
shlb
push
push
and
xchg
dec
mov
fists
aaa
repnz
shrb
xor
xchg
pop
jp
cmp
insb
jp
mov
add
mov
into
xchg
sub
jno
mov
icebp
leave
cmp
cmp
mov
xchg
in
minps
sub
out
pusha
push
outsb
jbe
dec
ljmp
pop
cwtl
hlt
xchg
xor
aas
popf
fdivrl
and
mov
cmpsb
pop
adc
ljmp
or
add
mov
jp
sbb
mov
sub
stc
addr16
lret
fdivrl
shl
push
xor
js
and
sbb
jb
mov
dec
movsb
and
jns
imul
es
cmpsb
xor
les
cltd
jp
mov
ljmp
and
stos
xchg
xor
xchg
data16
test
movsl
negb
or
sti
pop
mov
cmp
leave
out
cmp
sbb
repnz
js
stos
sahf
xor
loopne
cmp
cmpl
sub
inc
mov
xchg
push
lds
outsb
sti
adc
push
es
out
cld
adc
in
mov
popf
add
and
add
sub
and
lret
sti
push
fucom
xlat
cmp
ss
pop
push
push
movsl
loopne
lods
cmpsl
xchg
mov
cli
pop
pop
sub
test
les
pop
push
mov
mov
push
leave
or
jnp
fisttpl
sahf
or
xchg
jb
adc
jns
xchg
and
repnz
or
mov
or
aaa
jl
jno
sahf
sbb
lahf
in
cmpsl
ss
pop
xlat
or
rcr
jno
icebp
ret
xorl
xchg
and
fdiv
addr16
sbb
jmp
jmp
lods
in
outsb
mov
sar
rorb
cmc
cld
frstor
cltd
ljmp
aad
xchg
lds
notb
or
shlb
clc
jb
adc
cmp
jb
and
loope
push
test
mov
xchg
adc
mov
mov
mov
jbe
loopne
hlt
sbb
push
push
sbb
movsb
es
sbb
xchg
lock
and
pop
test
xor
in
test
test
jbe
scas
inc
ret
or
idivb
sub
sbb
sahf
in
loop
adc
inc
shlb
lea
movsb
push
sub
nop
xor
pop
shrb
xor
lea
mov
inc
fdivrp
mov
ja
adc
jbe
sbb
shrb
movsb
inc
add
sub
mov
pop
stos
pop
punpckhwd
sub
aaa
shll
mov
jnp
and
hlt
dec
test
inc
pop
sbb
divl
loop
fistpll
lahf
cld
jge
dec
xor
pop
test
lret
cltd
int3
fldl
or
in
sbb
and
lret
cs
sbb
dec
push
mov
and
lds
xor
mov
mov
jecxz
push
in
loopne
dec
scas
xchg
push
in
fdivl
pop
adc
loope
mov
ret
pop
in
xorl
xor
shr
inc
jg
stc
sti
mov
xacquire
inc
pop
into
adc
dec
test
scas
and
dec
xchg
jbe
iret
std
add
js
and
push
adc
inc
add
mov
inc
sbb
adc
dec
cmpb
jno
push
sub
mov
add
fsubl
inc
mov
nop
movsl
es
orb
out
cmpsl
add
inc
sbbb
insb
add
lods
cwtl
loopne
xchg
loopne
xor
iret
insl
cmpsl
add
xchg
pusha
mov
pop
mov
dec
lret
mov
repz
dec
sbb
mov
push
sub
rcll
es
mov
jecxz
out
shl
mov
or
adc
pop
mov
push
xchg
mov
cs
insl
or
push
ficoms
bound
notb
pop
fsts
aas
repz
les
pop
mov
mov
fimuls
hlt
jne
daa
out
out
outsl
inc
fimuls
jle
aam
xchg
cld
das
ja
jmp
cld
and
out
sub
jno
pop
scas
arpl
mov
mov
aad
cmp
aas
pop
push
dec
sub
stc
mov
inc
cltd
push
add
add
addr16
ret
mov
iret
pop
popa
addl
pop
lret
xor
adcl
leave
ds
push
sub
mov
js
in
jle
dec
cs
lock
scas
sbb
lea
mov
call
mov
stos
xor
xchg
in
cli
pop
lods
push
jno
into
aam
mov
testb
cmc
inc
mov
adc
jo
push
cmpsl
mov
jle
add
mov
pop
call
jge
data16
fld
aas
out
test
repz
cmp
aas
dec
icebp
iret
outsb
fld
aas
jnp
out
fxch
aas
pop
stc
out
call
sub
jno
imul
les
addr16
cmpsl
cltd
jg
repnz
lahf
repz
ror
aas
insl
cld
ror
aas
sbb
lcall
mov
dec
adc
inc
repz
or
repnz
popf
jg
cld
adc
aas
icebp
cld
xor
popa
xchg
adc
stos
or
lcall
scas
daa
hlt
gs
push
jnp
xchg
dec
jecxz
jle
movb
sub
mov
fstl
ret
stos
pusha
scas
cld
mov
sbb
sbb
lret
mulb
nop
mov
adc
and
mov
inc
adc
and
inc
jbe
or
lods
mov
inc
push
xor
jno
push
add
cmp
outsb
xchg
pop
andb
pop
out
sub
fs
xchg
dec
mov
or
mov
adc
or
shr
es
cli
arpl
ret
xchg
xor
orb
push
inc
adc
adc
inc
enter
lock
adc
mov
bnd
inc
test
fildl
sbb
and
or
pop
je
mov
in
loopne
xor
inc
xor
add
aad
daa
inc
adc
add
in
adc
xlat
popa
enter
or
test
int
ja
adc
mov
adc
repnz
and
dec
sub
mov
jns
inc
jo
mov
xor
enter
dec
ret
sbb
adc
cmp
loop
adc
and
mov
inc
jo
mov
sbb
test
mov
mov
in
or
vdivpd
inc
xchg
scas
xor
arpl
movsb
daa
xchg
xchg
jae
pop
and
aas
xchg
pop
jge
jecxz
in
or
test
sub
pusha
or
cmp
roll
push
repnz
loopne
jne
adc
dec
enter
push
xor
pop
pop
mov
mov
and
test
push
ja
mov
out
in
int3
inc
lahf
xor
push
pop
xchg
outsl
or
pop
mov
xchg
fnstsw
imul
sbb
adc
dec
dec
decb
jno
jmp
sahf
dec
mov
push
inc
push
sahf
out
popa
sub
lret
mov
and
daa
sub
fwait
popf
jns
push
push
jecxz
xor
lret
push
out
imul
pop
rcr
lods
shlb
xchg
push
adc
adc
mov
sub
xor
fbstp
mov
adc
dec
mov
pop
out
adc
push
ret
rorb
pop
ret
stos
mov
imul
sbb
rclb
mov
dec
cmp
xchg
add
out
mov
mov
push
cs
shrl
xor
xchg
test
mov
push
dec
fnsave
jle
mov
pop
or
xor
dec
popf
xchg
imul
fwait
push
push
inc
inc
jns
mov
sti
cmp
lret
adcl
add
outsl
sub
inc
xchg
shrl
ljmp
inc
inc
ror
or
add
mov
xchg
pop
mov
xchg
loop
test
pop
inc
xchg
adc
out
and
lahf
push
inc
xchg
add
mov
fidivl
adc
mov
push
daa
sub
rclb
jno
xlat
xor
and
outsb
jg
xchg
imul
popa
sub
pop
test
mov
adc
ljmp
movsb
sbb
bound
aas
scas
sarl
popf
jge
xor
xchg
inc
stc
push
sbb
int
ret
movsb
sbb
lea
lds
lret
pop
into
jbe
cmpsl
aam
mov
pop
jg
and
xor
in
insb
enter
negl
pop
cmp
or
in
xor
jp
mov
stc
pop
jg
iret
ja
xor
push
inc
mov
lret
and
adc
or
sahf
mov
in
repz
out
mov
fcoml
push
out
dec
clc
in
cmp
dec
jecxz
mov
mov
or
mov
cmpsb
dec
shl
mov
cmpsl
dec
outsl
adc
mov
inc
jo
subb
pushf
sub
xchg
insb
cmpsb
lods
shlb
or
jle
loope
loope
imul
movsl
js
mov
xchg
jl
lret
aad
push
fldl
mov
mov
dec
xchg
ret
cmp
or
mov
mov
fidivs
mov
add
adc
xor
adc
dec
xor
jecxz
push
test
mov
mov
push
movsl
inc
mov
out
test
jae
rorb
sub
mov
ja,pt
sbb
xor
mov
mov
push
cmp
cli
dec
roll
and
adc
sub
subb
clc
xchg
push
movsb
and
dec
lock
shl
push
add
xor
ret
jns
test
dec
or
in
mov
dec
adc
and
cli
lret
add
ret
daa
daa
dec
jp
sub
dec
repnz
sbb
jns
scas
fwait
adcb
or
loope
stc
jb
inc
pop
sti
icebp
arpl
mov
stos
outsl
outsl
out
jmp
mov
cmp
sbb
sbb
rolb
fimull
mov
gs
fcom
jg
ljmp
push
int
ss
pop
std
push
popa
mov
mov
aad
adc
jmp
cmp
stc
dec
cmpsl
sub
fidivrs
sbb
pop
jmp
daa
popf
pop
xlat
cmp
loope
test
cltd
lods
scas
or
xchg
cld
inc
xchg
push
dec
cli
jo
pop
es
out
cltd
push
mov
je
mov
mov
adc
push
push
push
or
aam
cld
imul
pop
jl
xchg
push
mov
xchg
fists
add
imul
into
ss
addb
addr16
sahf
pop
xor
jb
insb
and
xchg
rol
mov
dec
pop
fidivrs
imul
leave
inc
cli
mov
mov
inc
mov
jge
and
push
xchg
pop
cmp
sub
push
pop
in
push
and
dec
and
pop
cld
or
dec
inc
mov
jge
in
sahf
call
lds
mov
jmp
fmull
loop
and
push
cmp
mov
dec
jp
sbb
lods
sub
sbb
shlb
adc
lahf
pop
dec
mov
call
outsl
inc
dec
incb
or
stos
rcll
mov
data16
push
sbb
sbb
sbb
mov
out
lea
repnz
mov
fwait
xor
mov
adc
ds
push
xchg
or
cmpsb
inc
jo
pop
pop
and
aaa
sub
rorl
and
pusha
inc
xlat
out
mov
xchg
xchg
inc
push
push
pop
pop
inc
mov
fcomps
pop
mov
sub
test
or
mov
lods
into
fstpl
or
jns
and
bound
inc
and
xchg
lret
frstor
aam
sbbb
dec
mov
sbb
dec
adc
sub
pushf
fnstcw
jecxz
test
dec
cmc
xor
sbb
stc
cld
sbb
xchg
inc
jle
pop
or
sbb
push
hlt
fs
icebp
add
pop
adc
pusha
fcmovne
jg
mov
leave
ja
stos
jae
fldl
nop
fnstsw
jl
into
outsb
xchg
gs
mov
test
into
mov
pop
fndisi(8087
xchg
test
fldcw
xchg
cmc
insl
sub
pop
stc
jecxz
dec
in
cmp
jp
in
fmull
aaa
in
xor
sub
jne
jmp
xor
in
enter
lods
aam
pop
mov
inc
and
fisubl
ds
repnz
and
fnstsw
cmp
mov
jno
inc
dec
iret
jbe
add
jb
aaa
xchg
cmp
and
push
jl
shlb
jmp
lds
es
jl
cmp
or
sub
xor
out
into
dec
push
enter
shrb
das
mov
pushf
add
hlt
orb
lea
add
aas
push
ret
hlt
repnz
xor
sbb
mov
js
popa
sbb
xchg
xorb
fcomps
inc
sbb
loop
shrb
add
lcall
dec
movsl
pusha
xlat
sbb
mov
mov
lds
jle
jg
jb
and
das
int
push
pop
imul
aam
dec
mov
iret
inc
xor
xchg
cltd
mov
cmpl
push
xor
cmp
out
push
adc
add
std
pushw
jle
fsubrl
xchg
cmpsb
adc
pop
inc
mov
inc
lcall
pop
jl
adc
sarl
pop
push
negl
outsb
stos
fstp
sarb
out
jnp
sub
adc
pop
adc
jecxz
jl
xlat
jo
leave
add
popf
daa
cmp
ljmp
fsubs
xchg
mov
icebp
aaa
dec
fcoms
scas
das
and
cmp
fsubrs
and
dec
cmp
jp
dec
mov
enter
repz
xchg
add
cmpsl
out
hlt
loopne
cmpl
cli
dec
hlt
mov
idiv
jg
pusha
cmc
fists
insb
fiadds
push
in
push
fnstsw
test
fs
icebp
movsb
js
mov
inc
mov
dec
mov
popf
mov
and
sub
in
xchg
imul
xchg
mov
rclb
mov
sbb
std
call
push
imul
pop
add
adc
stos
sub
std
enter
push
enter
insb
adc
cwtl
xor
scas
leave
add
mov
pop
mov
lea
leave
pop
and
aad
lret
fcmovu
pop
mov
loope
inc
sub
fdivp
cmp
xlat
mov
je
out
cmc
lcall
cmc
push
xlat
loope
sahf
repz
stc
mov
jae
out
dec
jp
pop
imul
and
cmp
pop
and
cmp
stc
es
movsb
cmpxchg
xor
pop
push
and
lret
int3
insl
outsl
jge
es
dec
out
out
fs
push
aam
cmpsl
test
mov
mov
jne
cmp
aad
fsub
sbb
pop
enter
repnz
add
add
in
addl
xorb
int
lock
rcrl
stc
pop
data16
gs
loopne
es
cmp
fcmovu
int
mov
xorl
es
mov
cmp
shr
mov
push
arpl
dec
mov
jecxz
mov
and
fimuls
sub
es
xor
add
mov
adc
cmp
push
mov
mov
sahf
mov
push
lret
bound
cwtl
nop
mov
clc
inc
out
sti
pop
loopne
or
mov
das
leave
fidivrs
mov
lods
add
adc
fisubs
push
and
das
shl
cwtl
leave
ret
push
mov
aad
les
inc
push
mov
lock
or
xchg
or
sub
pop
xchg
jecxz
dec
hlt
xor
add
popf
xor
push
push
rolb
cmc
jmp
fldcw
add
lods
mov
shrl
mov
jb
leave
test
rorb
adc
jp
xor
lds
cmpsb
insl
dec
lret
jp
cmp
sub
push
mov
inc
inc
cmpsb
and
mov
add
arpl
pop
mov
push
insl
jmp
nop
and
push
mov
mov
inc
hlt
mov
out
test
test
ret
mov
bound
aam
or
xchg
mov
xor
sub
repnz
mov
push
fadds
cmp
or
adc
add
or
or
imul
nop
inc
jns
lcall
bound
das
and
std
pop
or
sbb
mov
js
cmp
loop
fwait
xchg
fs
jb
scas
push
inc
mov
js
cwtl
lds
pop
mov
xor
fldenv
add
call
add
mov
leave
sahf
xchg
lahf
xchg
push
push
sbb
sbb
xorl
cmp
add
scas
cmc
test
push
add
and
cmp
push
or
aam
sbb
or
pop
pop
mov
aas
pop
inc
inc
fwait
adc
push
test
cmpsb
test
inc
add
mov
mov
sarl
dec
cmpsb
nop
movsl
dec
sub
fcmovne
and
dec
lods
cmp
pop
ss
fisubl
xor
xor
test
mov
or
out
push
sbb
pushf
xchg
das
movb
adc
mov
mov
dec
sub
xchg
sub
sub
xchg
enter
in
cmp
mulb
sub
add
and
inc
pop
addr16
sbb
pop
cmp
pop
in
dec
mov
fwait
nop
xchg
insl
mov
or
mov
cmpsb
or
mov
xchg
sbb
daa
fwait
dec
hlt
dec
sub
fdivr
xor
je
fidivl
lea
dec
mov
push
inc
cmp
and
popf
add
iret
enter
push
mov
mov
pop
pop
cltd
inc
or
mov
scas
mov
sbb
and
es
test
popf
es
mov
push
ret
or
dec
xor
movsb
cmpsb
xchg
xchg
lret
mov
dec
.byte
mov
mov
adc
add
inc
outsl
outsl
insb
gs
outsb
add
or
add
mov
insb
jae
add
jb
lea
sub
add
push
outsl
testl
pop
dec
outsb
je
addr16
and
rcrb
xor
add
jns
insb
daa
push
outsl
jb
add
pop
jns
incl
outsb
mov
repz
add
cwtl
or
push
je
sub
in
push
int
pop
push
test
mov
lahf
out
push
mov
adc
popa
out
ljmp
pop
push
dec
bound
arpl
pop
sbb
adc
imul
insl
mov
adc
sbb
dec
jb
popa
arpl
add
lcall
pushf
int3
pop
inc
add
inc
and
clc
jmp
idivl
popa
adc
adc
int3
inc
mov
in
popf
pop
xchg
xchg
gs
faddp
loopne
jno
add
call
adc
pop
mov
xchg
int3
pop
adc
sar
mov
notrack
paddq
jb
ror
enter
jb
sarb
mov
in
test
jb
jb
mov
jb
cwtl
xchg
nop
mov
jb
mov
jb
je
in
jb
jb
push
jb
clc
hlt
pusha
pop
cmp
sbb
xchg
or
xchg
mov
push
dec
push
add
mov
or
call
sub
je
movzwl
dec
ja
pop
and
mov
ss
pop
ret
addr16
inc
mov
xchg
inc
cmp
xor
in
and
sub
mov
add
push
ljmp
add
test
jne
xor
pop
enter
jg
mov
mov
ret
lea
mov
mov
mov
inc
cmp
jne
mov
fucomp
sti
push
mov
mov
push
nop
mov
add
scas
mov
mov
xchg
mov
in
mov
push
mov
mov
or
adc
mov
aaa
push
mov
push
or
pushl
mov
push
push
mov
mov
mov
mov
neg
sbbb
and
pop
mov
or
push
or
ret
and
add
mov
push
or
fcmovnbe
cld
add
jmp
add
push
jne
aaa
sub
fucomp
cmp
jne
mov
sub
cmp
addb
mov
push
fbstp
testl
mov
add
call
ja
mov
sub
outsb
add
or
mov
jnp
xchg
jne
ret
jmp
pop
mov
add
pop
inc
shl
repnz
sub
jbe
pop
lock
aaa
push
sub
mov
lock
aam
jge
js
or
or
jmp
sbb
sti
jne
sarb
mov
es
mov
cmp
scas
add
mov
or
add
xchg
add
add
and
push
jg
sbb
clc
mov
test
je
mov
mov
cmp
outsb
rorl
mov
push
dec
xchg
lock
neg
push
andnps
dec
cltd
shrb
sbb
imul
fsts
jne
icebp
add
mov
push
dec
pushf
cmpl
in
test
ud2
mov
in
mov
fdivl
or
outsb
pop
xor
call
sub
mov
loope
pop
in
es
ja
mov
add
cmp
ja
popa
addr16
cmp
je
jae
or
or
sbb
pop
mov
in
or
add
cmp
andb
cmp
pop
cmp
cmpl
sbb
mov
mov
or
jne
sbb
adc
hlt
outsl
loope
loopne
mov
mov
and
sbb
roll
out
loop,pt
mov
sub
or
hlt
testb
popf
cmp
pop
cmp
add
push
pushf
insl
pop
and
mov
cmp
or
or
jbe
dec
xorl
scas
adc
sti
push
push
orl
jae
pushf
xchg
cmpb
pop
sbb
repz
xor
aad
mov
jmp
sahf
nop
out
jg
adc
sbb
jae
mov
push
or
cmp
jae
std
add
add
jae
dec
addl
dec
push
and
rorb
sti
loopne
clc
xor
aas
or
add
repnz
cmpsl
inc
fistpl
xor
idivb
inc
xlat
mov
cmpsl
jg
movsb
push
hlt
in
je
mov
inc
push
aas
or
fnsave
push
jge
scas
jl
add
jne
cmpl
ljmp
push
mov
cmp
insl
pop
mov
cli
mov
and
cmp
jl
in
test
cmc
or
jle
or
mov
sub
imull
xor
lea
pop
nop
or
mov
mov
push
push
fstl
fcoms
inc
fldcw
xchg
mov
lea
inc
mov
test
xchg
cmp
shll
cmc
jne
xchg
sti
mov
xlat
js
hlt
cmpl
ret
jnp
inc
sub
inc
popf
adc
adc
xchg
lea
inc
mov
mov
sbb
lock
jae
xor
outsl
ret
mov
out
rorl
adc
pop
push
test
je
imul
sub
ret
addr16
add
adc
or
js
jmp
jecxz
int3
shlb
jmp
pop
sbb
decl
ss
push
pushl
mov
push
addr16
add
jl
and
jno
or
adc
push
test
xchg
mov
or
sarl
xor
jle
hlt
inc
cmp
jo
and
in
mov
mov
mov
pop
ds
pop
pop
push
adc
loop
xor
mov
in
sub
push
dec
pop
xchg
test
adc
mov
loopne
iret
add
pop
loopne
in
out
adc
jns
test
imul
outsl
push
push
mov
sub
add
mov
pop
mov
ret
cmp
adc
scas
jb
or
adc
jo
jg
test
jns
add
sar
test
cmp
jmp
sub
scas
insl
gs
outsb
or
mov
adc
jmp
dec
fadd
jb
adc
out
add
or
mov
cmp
add
inc
xchg
sbb
add
sbb
xor
aaa
cli
adc
add
xchg
mov
jb
push
sahf
mov
add
or
or
mov
and
add
icebp
std
mov
sub
test
cld
call
cmpsl
fistps
fists
les
or
push
or
push
jle
outsl
stos
rolb
mov
or
ret
incb
xor
adc
xor
cmp
je
add
cmpsb
popa
stos
fistpll
sub
inc
aas
std
add
add
je
mov
sub
cmp
shl
xchg
push
testb
add
test
pop
cmc
xor
mov
xor
add
mov
pop
mov
fsubs
test
jne
mov
bound
test
sub
pop
adc
add
push
xchg
jo
pop
scas
push
dec
xorb
orb
or
sub
cld
jg
clc
sub
sub
cmp
jge
mov
lahf
lret
fsub
or
lea
in
add
insb
and
sub
push
fldl
jae
lea
push
scas
mov
jp
or
and
mov
xchg
iret
pop
jp
mov
add
sub
jo
or
sbb
test
mov
in
mov
enter
adc
mov
cmp
jmp
hlt
inc
fdivrs
pop
add
sub
cmp
or
mov
pop
mov
xlat
add
sbb
inc
adc
or
xchg
inc
mov
daa
or
adc
or
or
sbb
popf
or
pop
ret
sbb
push
add
mov
cwtl
push
fmull
dec
sub
fldenv
or
pop
sub
pop
cmp
pusha
xchg
cld
sub
add
pusha
push
repz
sub
lds
imul
loopne
clc
pop
jbe
xchg
gs
subl
sbb
pop
testb
cmp
mov
cld
adc
leave
or
ss
or
lcall
mov
sub
pusha
pop
pop
inc
shlb
int3
rol
popa
cwtl
mov
xor
ljmp
cmp
xor
push
adc
or
ljmp
lock
sub
mov
pop
movd
lods
scas
fsubrs
js
jg
pop
mov
pop
je
pop
jmp
outsb
in
cmp
or
dec
sbb
cmpb
mov
jle
das
cmp
push
sub
cmpl
adc
lock
hlt
inc
add
xor
pop
mov
sub
jmp
jmp
jg
push
inc
and
leave
sqrtps
jmp
repnz
jne
js
data16
mov
fwait
jo
dec
test
test
int
add
pop
movsb
pusha
or
mov
sti
clc
stos
jle
inc
cld
and
adc
mov
mov
mov
movsl
add
pop
or
sti
mov
mov
mov
daa
jg
adc
pop
or
movb
jbe
add
inc
scas
shlb
push
or
jns
mov
jmp
mov
jge
jno
lret
pushf
or
aad
daa
lcall
rcrb
jbe
jmp
outsb
icebp
rcrl
xor
dec
sub
mov
or
push
shrl
jo
inc
adc
arpl
inc
mov
pop
pop
pop
ffree
test
push
sbb
mov
sub
jne
out
or
loope
jo
xor
aad
pop
lock
test
jne
mov
mov
sub
and
add
add
add
mov
shlb
loope
push
or
test
jge
xor
mov
inc
das
add
pop
jl
pop
in
ret
mov
cmp
repz
sub
in
cmpl
jle
sbb
daa
cld
pop
sub
mov
test
je
inc
lret
test
testl
aaa
orl
jmp
mov
cmpl
clc
push
adc
sbb
or
adc
int
shll
pop
mov
orl
fistpll
mov
sbb
call
push
lods
clc
subl
mov
xor
cmp
sbbl
notb
cwtl
adc
mov
jge
jge
movsl
pop
divl
mov
popf
and
push
in
loopne
mov
add
or
mov
push
pop
fcmovnu
add
and
ja
rcrl
data16
sub
insl
imul
and
iret
into
fidivs
sbb
add
inc
lahf
add
add
or
and
mov
pop
or
fbld
add
lea
adc
add
add
push
pop
mov
sbbl
mov
push
xchg
mov
jo
cmp
xchg
ret
jecxz,pn
mov
fdivrs
add
loopne
or
adc
push
or
add
add
adc
sub
xor
push
cld
lcall
mov
adc
add
ss
aam
aas
out
adc
ret
mov
inc
fldenv
insb
add
inc
adc
jg
in
lods
decb
or
jg
cmpsb
test
jle
call
mov
faddl
or
add
dec
sahf
je
je
lahf
testb
mov
test
je
sbb
enter
or
sbb
push
xor
jne,pn
sub
bound
sar
sbb
mov
xchg
lahf
lret
add
dec
sbb
lods
loopne
or
rol
add
and
push
push
inc
sbb
mov
or
js
aas
cld
mov
xchg
jle
jecxz
sub
insb
fidivrl
out
jne
rcrb
test
jo
sti
mov
mov
mov
cmp
or
and
adc
sbb
push
pusha
xchg
push
push
xor
pop
jne
jbe
mov
xor
pop
psubsb
mov
lods
mov
aaa
inc
or
je
pop
jle
cmp
jg
sub
inc
fadd
push
jl
cmp
jg
add
mov
inc
rep
jmp
mov
loop
xor
jmp
mov
jmp
mov
mov
add
ret
lods
pop
adc
push
in
into
jno
mov
cmp
divl
je
outsl
data16
dec
js
rep
xchg
inc
je
cld
lea
cmp
xor
std
xor
jecxz
addb
jmp
incb
rcl
add
mov
test
and
cmpb
mov
xchg
cmpb
add
out
in
mov
jmp
cmp
xor
push
shrb
roll
ljmp
cwtl
call
ja
mov
aad
cmp
ds
jmp
outsb
cmp
adc
mov
mov
inc
inc
adc
cmc
outsl
aam
mov
test
push
xlat
push
pop
push
pop
movsl
les
lock
popf
stc
fidivs
lea
xchg
sbb
pop
ja
outsl
stos
andl
add
jmp
mov
push
insl
test
lock
sbb
mov
clc
int3
lds
add
inc
test
jne
push
cmp
lea
mov
lea
and
push
std
dec
sarl
add
data16
lcall
subb
js
mov
fldcw
pmaxub
push
sub
fists
fwait
pop
pop
jbe
push
or
fldl2e
add
add
hlt
mov
filds
fldcw
pop
inc
test
push
and
mov
jl
mov
outsl
mov
xlat
jb
or
in
and
je
jae
in
push
xchg
outsb
fidivrl
dec
add
pop
movl
mov
dec
rclb
int
sbb
sti
mov
sbb
push
push
mov
mov
inc
adc
or
lea
push
pop
add
dec
loopne
adc
imul
inc
mov
clc
insl
jne
push
cwtl
outsl
cmp
shl
data16
ret
jae
into
adc
push
push
hlt
mov
xlat
orl
fdivrp
jle
or
imull
lock
movlps
xchg
lock
aas
outsb
sbb
test
nop
push
aam
mov
scas
xor
or
adc
sub
pop
mov
dec
je
add
jle
clc
mov
xor
mov
enter
shrb
inc
add
push
cmp
rorb
or
push
rclb
add
jle
xchg
mov
mov
cmp
push
push
push
lea
push
sbb
pop
rol
lcall
cmpl
dec
jne
dec
add
pushl
outsl
or
sub
inc
out
sub
jbe
xchg
push
clc
fucomp
cltd
aaa
cmp
mov
loop
rorl
push
inc
and
mov
pop
aam
shlb
cmpb
out
push
xchg
sub
mov
out
dec
jne
jmp
lea
cmp
push
push
push
sub
hlt
jle
fmuls
cmp
in
adc
hlt
jmp
cmc
jne
sub
cmp
je
popf
mov
pop
mov
xchg
xor
shrb
inc
icebp
add
push
push
outsb
mov
imul
pop
hlt
xor
mov
aas
sub
dec
lea
add
sub
and
push
push
jg
popa
push
test
lock
lock
lahf
pop
loope
dec
pop
dec
das
movb
shll
sub
decb
dec
sub
mov
call
and
push
fucomi
pop
cmp
cmp
sti
and
divl
sbb
test
and
xor
mov
ja
and
xor
mov
push
sub
sbb
xchg
outsl
in
cld
adc
xor
aad
mov
adc
or
or
inc
testl
inc
sbbl
jg
pop
test
push
mov
inc
inc
ja
pushl
add
push
shr
je
mov
mov
cmp
jne
dec
je
mov
mov
imul
pusha
or
loop
push
adc
int
mov
add
push
cmp
jne
dec
je
mov
cmp
jne
or
ret
lcall
add
sti
mov
jne
shr
shr
sbb
iret
out
outsl
xchg
into
shr
or
pop
outsb
scas
xor
cmp
shl
aaa
ffreep
add
and
mov
cmp
jne
dec
dec
and
xor
add
arpl
push
or
mov
mov
shl
or
nop
or
stos
mov
stos
pop
aaa
xchg
jne
jge
mov
outsl
xchg
lods
bound
cs
mov
fsubrs
xchg
shll
xchg
mov
xlat
or
and
dec
les
push
adc
cld
mov
inc
push
es
adc
or
je
cmp
je
inc
popa
mov
mov
ret
mov
es
pop
pop
jb
je
incl
jo
enter
inc
adc
int
mov
mov
push
mov
js
mov
mov
xor
push
mov
outsl
mov
roll
push
adc
jl
mov
inc
cmp
push
cmp
je
cmp
push
stos
fsubrp
dec
sti
dec
jg
jmp
into
inc
bnd
cmp
jne
dec
sub
push
fsubs
fdivrl
in
mov
scas
push
inc
adc
cmp
and
mov
in
mov
adc
mov
mov
in
add
mov
mov
sbb
cmp
xor
mov
cmp
fistps
cmp
and
add
xchg
xor
roll
in
daa
or
decl
xlat
pop
push
idivb
call
mov
push
inc
cmp
je
mov
or
sub
in
sub
je
and
je
pop
je
movsl
mov
adc
dec
inc
ficomps
sti
jnp
and
add
sub
or
dec
ja
lea
mov
mov
push
push
out
int
or
jge
jmp
std
jg
or
neg
jle
js
pop
sub
jmp
inc
inc
jmp
mov
andnps
popa
jb
xchg
and
std
cmpsb
popf
cltd
jbe
push
adc
or
lods
cmp
stos
aad
cwtl
pop
xor
mov
xor
lods
xor
mov
mov
mov
sub
jecxz
jbe
pandn
adc
xor
aam
xor
js
ret
mov
cmp
jg
add
push
popa
out
daa
mov
push
add
pop
jmp
xchg
adc
mov
mov
dec
or
nop
inc
mov
jg
movsb
stc
inc
jle
sub
fs
push
mov
lahf
jg
push
ret
and
test
repz
test
jg
add
negb
movb
aas
mov
adc
adc
dec
xor
int
inc
fs
fmuls
and
scas
inc
fucomip
push
cmp
mov
inc
je
inc
mov
dec
jne
pop
lock
sub
mov
pop
test
lea
mov
loopne
jl
je
adc
inc
sti
jmp
orl
lods
push
outsl
xor
cmp
jns
pcmpeqb
movsl
ss
popa
out
mov
cmp
jmp
adc
jge
mov
xor
jmp
jmp
fstp
fldt
shll
adc
out
mov
in
arpl
mov
push
repnz
inc
pushf
or
pop
stc
in
ret
mov
adc
xchg
jl
mov
out
sbb
add
clc
repnz
mov
lock
out
xchg
sub
hlt
and
mov
adc
xor
leave
sbb
cld
lret
lds
mov
jbe
imul
cmp
dec
cld
mov
mov
bound
cmpb
xlat
fadds
rep
nop
lods
outsb
xor
xchg
push
or
push
push
fcomip
dec
into
sbb
rorl
mov
push
pop
test
enter
movsl
outsl
movsl
push
inc
cmp
and
daa
lret
into
pop
inc
test
xchg
clc
js
aas
sbbl
pop
mov
jmp
int
repnz
bound
and
cld
gs
sahf
mov
sub
inc
aad
iret
in
dec
pop
js
inc
mov
stos
mov
cmp
or
mov
pop
out
loop
ljmp
mov
imul
divl
jl
xor
cmp
call
mov
mov
jle
push
inc
mov
push
sbb
sarb
repnz
test
nop
fildl
daa
movsb
lahf
nop
inc
pop
stos
clc
scas
adc
inc
pop
pushf
mov
pop
pushf
mov
fs
aam
imul
loope
decl
xchg
iret
inc
bound
ds
push
cmpsb
scas
mov
pop
or
addl
dec
in
xchg
cmp
xor
in
cmp
sahf
xchg
pop
cmpsb
lock
mov
mov
lcall
clc
repz
mov
subb
and
jmp
and
outsb
bound
xor
jmp
aaa
shlb
fucomi
daa
pushf
cmp
jne
push
pop
and
adc
repz
xchg
inc
add
outsl
add
hlt
movzwl
imul
push
push
inc
adc
push
mov
dec
cmp
hlt
mov
push
data16
add
aam
repz
notl
insl
push
sub
clc
xchg
mov
jg
and
push
clc
pop
aas
or
loope
decl
mov
adc
inc
push
push
inc
push
inc
pop
inc
outsl
jb
popa
outsb
fs
push
incl
jo
imul
push
dec
popa
jae
push
popa
insb
jne
fninit
fwait
cmc
ljmp
mov
jle
lcall
xlat
mov
xor
mov
inc
rep
push
or
pushl
push
mov
or
dec
cld
jne
dec
mov
xor
and
jne
and
mov
es
fcoml
add
mov
xchg
xor
sbb
fstps
rcrb
push
or
add
outsl
test
or
mov
adcb
adc
fs
ss
xor
cld
ret
xor
jle
jmp
outsb
loopne
mov
or
push
cld
cld
decl
inc
mov
fdivs
rclb
add
stos
pop
out
push
jnp
xor
mov
pop
mov
pop
mov
lods
add
sbb
in
cmp
je
pop
mov
add
jae
daa
push
mov
mov
push
sbb
cmp
lods
les
lods
mov
mov
jbe
icebp
cmpsl
sarb
inc
rorb
aaa
incb
roll
paddd
ud2
push
mov
and
loope
sbb
or
add
add
inc
or
lahf
mov
mov
sub
mov
js
clc
cmp
cmp
inc
lea
fcmovu
jle
cld
adc
clc
mov
roll
push
mov
push
add
pop
lea
inc
jb
enter
cli
fstpl
loopne
lods
dec
setne
movsl
out
cmp
cmp
xor
ret
and
or
rol
mov
xor
xor
imul
push
or
jne
lock
andb
fcompl
lds
pop
adc
shlb
mov
mov
test
cmc
in
call
mov
mov
cmp
je
mov
leave
jne
mov
xor
push
xchg
jmp
lret
call
mov
movl
or
negb
pop
add
sub
mov
je
cld
pop
cs
xchg
add
sub
mov
clc
out
ljmp
ss
xor
lock
jne
das
mov
dec
mov
es
les
dec
orb
pop
push
les
or
data16
mov
fiaddl
pop
in
jb
xor
popa
lock
xor
mov
sar
sti
push
je
movb
dec
push
cmp
out
sbb
add
dec
jne
icebp
fucomi
sbb
add
sbb
clc
ss
mov
out
dec
cmp
in
outsb
lahf
push
popf
enter
dec
imul
pop
pop
lcall
xlat
ds
call
add
mov
rcll
bound
hlt
xor
mov
mov
sbb
movl
or
call
or
sub
and
adcl
pop
fldz
xor
xchg
call
push
clc
sbb
daa
movsl
jbe
insl
enter
and
pop
fiadds
add
jne
cmp
adc
adc
sarb
in
push
call
cmpsb
push
pop
mov
push
pusha
push
dec
cmp
in
outsb
sarl
or
cs
pop
xor
scas
or
jae
ljmp
pop
push
push
and
in
fcompl
mov
cmpb
je
or
jne
movsbl
inc
inc
jmp
ss
push
dec
add
imul
js
jecxz
and
adc
loop
shll
jecxz
test
pop
testl
push
jne
fiadds
push
sbb
lods
or
sub
int
js
mov
test
xor
out
mov
add
or
cmpl
je
dec
adc
sub
loope
sub
test
loopne
std
pop
dec
push
dec
inc
cmp
pop
jbe
int
dec
cmc
enter
adc
in
jbe
adc
add
mov
orl
push
cmp
out
push
sbb
adc
movsl
push
push
sub
push
push
loopne
mov
add
mov
xor
add
aas
mov
add
pop
sahf
jecxz
jecxz
sti
sti
aas
mov
mov
sub
fs
je
ja
leave
xor
push
add
mov
push
push
push
test
cwtl
push
or
das
es
adc
add
lds
cmc
xchg
add
aas
repnz
mov
mov
cmp
jne
xchg
mov
shrb
lea
pop
fdivl
hlt
fisttpl
jne
dec
dec
jne
and
sub
outsl
cmp
faddp
inc
jmp
sbb
push
sbb
dec
push
adc
inc
push
daa
adc
push
stos
add
inc
ja
mov
mov
cmp
lods
inc
push
arpl
sbb
push
setge
aas
fcompl
or
cmpsb
movl
or
sbb
dec
subb
or
adcb
mov
push
push
push
push
data16
pop
idivb
jge
add
xor
mov
or
adc
sub
push
cld
inc
or
pusha
add
testl
clc
xor
adc
insb
fisubrl
adc
adc
cs
iret
jae
mov
push
lods
inc
pushf
jle
pop
insl
sar
ret
xor
mov
add
xor
xchg
ret
ja
fisttpl
mov
add
xchg
jl
je
cmp
push
sub
and
cmp
pusha
add
sub
jb
je
jmp
cmp
cmp
xchg
xchg
cs
adc
jmp
sub
sti
cmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
push
sbb
into
ret
loopne
adc
or
lret
sbb
or
xor
sub
punpcklbw
out
mov
jg
sahf
push
jnp
jns
jno
outsl
cli
lcall
pop
test
add
adc
sbb
add
or
pop
mov
imul
or
sub
and
fnstenv
jo
sub
xor
popa
cmp
inc
or
enter
push
aas
mov
adc
enter
jecxz
ret
push
repnz
cmp
jne
adc
mov
arpl
mov
pop
scas
or
or
jo
rorb
leave
jle
test
jle
dec
mov
inc
fiadds
and
jg
jecxz
adc
dec
pop
add
xor
fs
cmp
add
mov
mov
stc
stos
xorl
cmp
mov
cmp
sbbb
jg
roll
nop
in
movl
sbb
cmp
xor
adc
sub
push
out
fistpll
jo
in
movb
ret
bnd
cmp
sbb
es
add
add
and
dec
jne
pop
pop
pop
inc
in
mov
dec
jmp
dec
xchg
add
inc
or
sbb
cmp
xchg
add
ret
mov
add
adc
rcr
fadd
mov
es
ja
mov
sbb
add
shrb
xchg
nop
adc
sub
push
push
inc
ja
push
rcrl
out
xor
sbb
add
movsl
pop
sbb
ja
add
dec
aad
hlt
mov
mov
leave
pop
push
test
dec
icebp
push
cmpw
adcb
and
les
add
call
xor
test
push
push
cmp
push
and
daa
pop
ret
mov
fucomp
stos
pop
push
jo
cmp
add
or
push
loope
gs
sub
sub
aas
ds
sti
dec
mov
mov
call
and
xchg
popf
orl
xchg
xor
or
mov
jne
mov
xchg
add
jmp
inc
adc
xchg
rcr
test
or
cmp
je
es
insl
cltd
adcb
add
sbb
ficoml
push
jne
frstor
cmp
adc
outsb
call
sti
ret
pop
push
add
lret
mov
jb
sub
popl
mov
scas
imul
adc
add
sub
test
push
push
daa
xchg
imul
pop
pop
ds
push
cltd
push
loopne
pop
pop
sub
lahf
mov
mov
pop
clc
add
mov
les
insb
mov
add
push
push
or
push
mov
cmpsl
or
sbb
or
shll
sar
jmp
mov
dec
clc
dec
jl
lock
add
lea
std
pop
mov
push
or
add
or
ja
adc
cs
and
inc
jg
jnp
mov
hlt
mov
pop
push
flds
add
jmp
jbe
or
adc
xchg
jl
test
push
iret
jle
push
add
clc
xorps
loopne
push
adc
add
sbbl
movl
dec
ss
inc
xor
clc
das
stc
mov
call
loopne
mov
cmp
aaa
xor
inc
aas
enter
loopne
push
fisubl
add
sbb
lea
cmp
push
or
mov
jno
jg
push
mov
pop
lea
cmp
cs
sub
mov
pop
and
jl
ret
push
sub
sub
dec
js
xchg
fistpl
dec
movsl
cmp
sbb
add
cmp
clc
lock
push
sbb
cmpsl
xor
add
and
pop
mov
je
sub
or
je
add
jo
sar
jmp
inc
add
jmp
fbstp
cmp
or
or
push
push
into
pop
out
addr16
in
add
inc
out
xchg
mov
push
pop
add
add
pop
add
mov
add
cli
push
mov
cld
lret
pusha
add
cmp
jl
fmull
inc
and
xchg
test
xchg
aas
add
loope
loope
aas
je
incl
mov
push
cld
add
cmp
pop
and
pop
shrb
adc
mov
xchg
cmp
sub
shll
popa
cmpl
je
cmp
mov
scas
aaa
test
inc
pop
or
rorl
inc
mov
sbb
mov
mov
cli
lds
push
sbb
pop
push
mov
push
pop
jbe
loope
lret
mov
push
push
pop
mov
jle
xor
mov
dec
movsl
cmp
cmp
aaa
ret
mulb
push
cmp
fs
dec
jne
add
or
test
cld
jge
lock
dec
jmp
and
hlt
lock
pushf
sbb
add
inc
xor
pop
dec
jne
mov
or
cld
adcl
pop
lea
jmp
xor
pop
or
cmp
rolb
mov
sub
imul
xchg
test
mov
push
cmp
dec
imul
push
aam
loope
jo
ljmp
jmp
aam
pop
push
jns
pusha
cmpsl
push
clc
inc
das
lods
cltd
add
daa
add
add
add
jp
cmp
ss
das
shl
mov
adc
dec
inc
es
popa
out
rorb
incl
adc
mov
es
jl
cmp
jge
xchg
push
sbb
adc
inc
jg
sbb
xor
xor
jmp
inc
jmp
push
stos
mov
and
xchg
stc
cmp
lret
push
mov
sub
mov
mov
add
filds
stc
add
lea
inc
dec
movsb
push
cmp
xor
dec
cmp
pop
cmp
lahf
cltd
mov
push
mov
cld
in
clc
sti
sub
xlat
adc
imul
add
gs
cmp
subl
mov
lea
lock
sub
hlt
jmp
add
mov
cmpsl
pop
decl
dec
js
mov
inc
jb
adc
inc
loopne
pop
adc
inc
push
cmp
in
pop
fsubl
pop
mov
xlat
xlat
sbb
or
lods
dec
out
or
ljmp
jne
sub
or
push
push
pusha
xchg
xlat
dec
pop
sub
and
mov
mov
mov
sub
arpl
cli
pop
cmp
pop
sub
add
lcall
addl
mov
lds
and
sbb
adc
push
popf
scas
sub
rcr
sub
clc
mov
pop
mov
loop
push
xlat
cmpb
nop
adc
in
popf
loopne
cmp
xor
addr16
or
push
js
lock
lea
push
cmp
call
jae
in
add
adc
push
add
mov
jno
out
cmp
fs
pop
jo
and
push
in
fstl
xor
out
inc
lods
jo
lock
xchg
lods
xchg
or
fistpll
push
dec
push
das
int3
pop
pushl
mov
or
rorb
aaa
out
xor
sub
xor
add
add
fwait
pop
mov
and
cmp
je
ss
push
inc
add
nop
inc
xor
mov
and
data16
rcrb
cvtps2pd
or
adc
idiv
push
sub
rolb
xor
push
mov
dec
cmp
nop
pushf
lcall
maskmovq
mull
clc
push
lods
add
add
or
dec
or
mov
je
daa
cltd
ds
inc
mov
test
out
cmc
in
aas
sub
xchg
xchg
push
push
mov
mov
sub
std
adc
mov
mov
pop
jp
filds
inc
jg
xlat
test
fldl
mov
mov
push
add
mov
or
and
xor
je
cmp
add
mov
mov
je
mov
jbe
add
jmp
adc
cmpsb
xor
add
or
adc
jmp
pop
jo
pop
cmp
mov
add
dec
cs
fstp
sub
adc
cmp
pop
jmp
cmp
pop
mov
inc
lock
stos
rclb
popa
ss
das
or
pop
in
adc
call
cmp
shrb
iret
repz
and
mov
test
push
mov
inc
out
add
jg
aad
stos
push
push
lret
cmp
daa
or
xor
jl
outsb
es
out
hlt
xchg
adc
or
inc
or
mov
shr
test
int3
cmp
jns
sbb
cmp
inc
je
mov
push
cwtl
ret
jo
adc
and
xorl
adc
sbb
ja
xor
mov
lea
outsl
cld
xchg
scas
js
les
push
push
add
sarl
add
test
into
xchg
pop
push
mov
fwait
fwait
pop
ret
cmp
xor
or
je
or
fwait
push
push
je
pusha
adcb
xchg
pop
dec
mov
rorl
xor
lahf
sbb
insb
jmp
and
mov
mov
adc
lock
call
cs
je
clc
or
cmp
cmp
jbe
and
jns
xor
insb
in
and
and
xchg
mov
cld
dec
jne
add
add
push
loopne
mov
sbb
dec
insb
and
mov
in
inc
push
xor
movsl
push
popa
jge
pushf
mov
pop
nop
daa
fistps
dec
jne
sub
and
mov
jmp
cmpsl
std
adc
loope
sbb
les
cmp
cmp
divps
or
ja
sti
add
add
inc
ljmp
mov
icebp
mov
jo
add
jb
inc
mov
push
cmp
nop
lret
dec
inc
ret
or
dec
adc
popa
adc
in
push
hlt
adc
pop
xor
push
pop
cltd
adc
inc
mov
adc
fstl
inc
clc
pop
mov
cwtl
sbb
xchg
add
xor
jo
movl
clc
scas
adc
sub
jmp
and
mull
mov
lea
adc
or
shll
pop
pop
ret
out
test
inc
lods
dec
dec
pushl
lds
popf
rcrl
mov
loopne
xor
mov
sarb
add
pop
cmp
pop
mov
fnstsw
popa
cld
ss
lods
aam
inc
pop
lea
enter
test
push
push
push
fiaddl
add
mov
or
dec
test
adc
adc
stos
mov
push
testb
in
in
cmp
call
fidivl
or
xor
and
loopne
jge
jge
sbb
les
fildl
imul
sub
add
lea
in
mov
jmp
decl
stos
icebp
aam
adc
lret
in
jge
or
push
in
test
adc
dec
in
push
cmp
or
sub
dec
dec
push
dec
shl
cli
test
mov
add
mov
mov
or
push
lock
loopne
adc
cmpl
jle
adc
mov
xchg
dec
jo
and
lcallw
or
inc
mov
jne
adc
mov
les
xchg
add
xchg
mov
xor
xchg
icebp
aas
pop
lock
jne
pop
sub
push
xchg
push
movsb
and
pop
repz
out
sbb
mov
sbb
icebp
outsl
fiaddl
push
push
push
mov
incl
pop
jecxz
jg
pop
pop
mov
inc
jecxz
or
or
in
sbb
jno
bswap
icebp
sbb
push
aad
rcl
test
insb
dec
popa
pop
mov
fadds
push
test
push
clc
sar
mov
dec
and
outsb
and
and
xor
xchg
add
fisttpl
or
or
adc
add
or
mov
ret
adc
lcall
jmp
push
mov
test
out
je
mov
nop
mov
push
clc
daa
mov
mov
xor
pop
je
xchg
inc
mov
inc
push
mov
sbb
das
pop
test
push
or
rcll
inc
fstpl
loopne
dec
or
mov
loopne
vmread
pop
in
mov
cmp
jl
je
lret
cmpb
je
lcall
add
in
jne
movb
fimuls
mov
inc
add
dec
cmp
jno
sub
add
inc
cmp
dec
jg
gs
cmp
fsubrl
mov
popl
out
and
je
js
loop
call
lea
jle
cmp
test
insl
sbb
push
push
mov
inc
aaa
je
cli
negl
xor
mov
inc
aas
ret
imul
gs
xor
cs
insb
ja
gs
outsl
outsb
addr16
push
mov
push
inc
daa
outsl
loopne
push
pop
mov
sbb
push
outsl
bound
out
and
push
push
pop
add
add
ja
popl
pop
pop
xor
and
or
pop
pop
cwtl
mov
out
jmp
stc
int
add
fstl
aas
iret
sarb
inc
sub
push
repnz
pop
imul
pop
inc
pop
sti
cmpsb
sbb
push
lods
repz
mov
mov
inc
test
repz
shll
push
jge
call
shrl
xor
mov
call
add
sti
int3
hlt
dec
cmpb
stos
pop
cmp
jne
adc
cmpsl
je
popf
inc
subb
push
int3
sbb
add
insb
xlat
rcrb
stc
push
je
das
ret
inc
xor
xchg
jecxz
insb
cmc
add
mov
scas
outsl
data16
popa
jb
daa
or
popa
insb
gs
aaa
add
jge
inc
cltd
dec
shrb
add
pushf
ja
lock
lds
cmp
lret
insl
popa
mov
xor
aad
notb
sbb
add
inc
mov
clc
add
mov
sbb
mov
movsb
fimull
icebp
mov
mov
dec
inc
xor
sub
fldcw
mov
cli
mov
jo
inc
jp
cmp
pop
mov
inc
dec
add
or
test
jno
mov
mov
cmp
nop
out
int3
loope
outsb
repnz
stos
add
sbb
add
pop
cmp
jno
or
mov
pop
mov
pop
lock
cmp
jne
jae
xor
inc
dec
ljmp
decl
or
sbb
push
and
inc
add
insl
jae
scas
dec
push
inc
xor
or
movsl
sahf
mov
mov
push
mov
mov
test
sysret
sbb
mov
pop
ret
test
lret
or
pop
add
push
dec
xchg
or
ljmp
hlt
ret
push
lods
mov
and
add
test
clc
mov
je
add
xchg
out
subb
test
sbb
lea
int
mov
or
inc
loope
xlat
mov
stos
lds
fs
lea
lods
mov
jne
jg
ljmp
cli
jg
push
mov
inc
jmp
cmp
cli
jbe
lea
cmp
ja
fcmovb
jmp
or
mov
aaa
in
outsl
out
adc
sbb
and
lret
add
jmp
pusha
add
dec
outsl
out
imul
or
sub
sti
cmp
jb
or
dec
movb
and
ror
mov
jbe
pop
popl
add
jb
lea
ret
push
sbb
outsb
pop
inc
or
push
inc
movl
fcmovnb
out
push
lock
fdiv
and
pop
cli
mov
inc
test
je
or
jae
fucomip
loope
and
je
cmp
adc
mov
and
cmp
jne
ja
mov
and
mov
loope
or
mov
pop
lea
adc
fbld
dec
cld
mov
inc
push
adc
aaa
clc
sub
inc
lcall
adc
or
hlt
inc
xlat
sbb
out
and
inc
inc
mov
ret
mov
sbbl
sbb
fmull
jnp
xorb
sbb
or
jb
inc
arpl
leave
stos
cmovb
dec
cmp
sub
rcrb
je
adc
jbe
mov
and
jns
push
and
sub
outsl
sub
pop
pop
fmuls
fwait
mov
rorb
jmp
popf
add
push
adc
ret
popa
xlat
rclb
bound
push
sbb
adc
ss
fadds
loopne
leave
aas
sarb
and
inc
push
sbb
cmp
add
ds
sahf
bound
fs
test
mov
mov
cmp
add
push
lahf
out
test
cmp
mov
mov
xchg
lea
mov
add
mov
push
stc
sub
dec
pop
push
fcomp
shr
lock
jle
add
sub
popa
push
movsb
jbe
pop
loopne
lahf
mov
mov
push
lea
push
push
inc
fnsave
lock
or
inc
outsb
inc
ss
and
cmp
arpl
ret
sub
dec
jnp
daa
or
pop
xchg
add
add
jge
xchg
mov
in
push
or
ret
in
mov
subl
add
or
add
push
xchg
pop
xor
pusha
add
out
lods
nop
int3
test
daa
movsb
adc
imul
adc
call
mov
add
cmp
push
and
insl
cmp
push
sub
cmp
jbe
mov
cmp
and
push
dec
mov
push
xor
jmp
sbb
push
push
pop
push
in
outsb
jp
or
sahf
adc
loope
inc
cmpl
ret
loop
push
add
or
out
call
push
mov
sub
ja
adc
test
jne
lock
das
push
cmpb
hlt
aas
ss
pop
lret
mov
ret
mov
jo
xchg
lods
outsb
jae
or
mov
mov
ss
mov
or
mov
adcl
sbb
leave
adc
sbb
adc
cmp
dec
xchg
push
push
mov
mov
stos
sarl
xor
or
push
dec
inc
add
add
push
or
cs
cld
pop
mov
movsb
add
xor
loopne
shr
mov
add
or
push
gs
xchg
gs
jb
insl
sar
mov
adc
inc
imul
inc
push
lret
jg
inc
outsl
arpl
inc
gs
jne
je
dec
outsl
je
imul
push
mov
gs
outsl
inc
arpl
or
adc
ret
or
jb
push
fisubl
xor
outsl
insl
bound
outsl
js
imul
in
pop
cld
outsl
ja
nop
push
addr16
andps
outsb
dec
inc
xor
mov
dec
add
pop
leave
leave
leave
mov
pop
push
push
leave
leave
leave
leave
dec
dec
inc
inc
leave
leave
leave
leave
cmp
xor
fs
leave
sub
rclb
mov
in
in
movsb
mov
in
xchg
nop
mov
in
in
test
in
je
insb
in
in
push
in
in
push
push
dec
in
in
dec
inc
inc
cmp
in
in
xor
sub
in
in
and
sbb
in
in
adc
or
in
in
add
cld
xchg
jb
jb
clc
hlt
lock
jb
jb
call
jb
jb
aam
int3
jb
jb
enter
jb
jb
mov
jb
jb
movsb
mov
jb
xchg
nop
mov
jb
mov
jb
je
insb
sbb
jb
rclb
cmp
fcoms
pushf
int3
enter
pushf
pushf
pushf
mov
pushf
pushf
pushf
lods
test
mov
pushf
cwtl
xchg
nop
pushf
pushf
pushf
pushf
mov
pushf
pushf
jl
je
pushf
pushf
pushf
pushf
insb
push
pushf
pushf
pop
pop
push
push
pushf
pushf
pushf
pushf
dec
dec
inc
inc
pushf
pushf
pushf
pushf
cmp
xor
pushf
pushf
pushf
pushf
sub
and
pushf
pushf
pushf
pushf
sbb
adc
pushf
pushf
pushf
pushf
or
add
dec
dec
inc
sahf
cld
xchg
clc
hlt
lock
dec
dec
dec
in
call
dec
dec
je
jo
daa
daa
daa
fs
push
push
daa
daa
daa
daa
pusha
pop
insb
push
dec
dec
inc
inc
daa
daa
daa
daa
cmp
xor
daa
daa
daa
daa
sub
and
daa
daa
daa
daa
sbb
adc
daa
daa
daa
daa
or
add
xchg
xchg
xchg
daa
cld
xchg
clc
hlt
xchg
xchg
xchg
xchg
lock
call
xchg
loopne
fcom
daa
daa
mov
ror
mov
daa
daa
daa
mov
daa
daa
daa
lods
test
mov
pushf
cwtl
xchg
nop
daa
daa
daa
daa
mov
daa
daa
jl
je
daa
daa
daa
daa
insb
push
daa
daa
pop
pop
push
push
daa
daa
daa
daa
dec
dec
inc
inc
daa
daa
daa
daa
cmp
xor
in
jbe
sub
sub
in
in
sbb
adc
dec
dec
dec
adc
add
and
add
xchg
clc
hlt
daa
daa
daa
daa
lock
call
daa
loopne
fcom
daa
daa
daa
daa
ror
enter
daa
daa
sarb
mov
test
daa
daa
daa
daa
mov
daa
daa
daa
nop
mov
daa
cmpb
daa
daa
daa
jo
push
daa
pusha
pop
pop
push
daa
daa
daa
daa
push
dec
dec
inc
daa
daa
daa
daa
inc
cmp
xor
daa
daa
daa
xor
and
daa
daa
daa
and
adc
daa
daa
daa
adc
add
xchg
daa
daa
add
xchg
clc
xchg
xchg
xchg
xchg
hlt
lock
call
in
mov
rol
loop
or
inc
pop
add
ljmp
jnp
pop
js
cwtl
fisubs
rorl
out
mov
test
xor
push
mov
nop
mov
scas
push
mov
setp
fdivl
or
jbe
into
mov
frstor
mov
pop
and
inc
add
sub
xlat
sub
pop
jg
clc
ret
loopne
test
mov
push
daa
imul
sbb
out
adc
sahf
out
sbb
and
mov
ficoml
outsl
push
push
bound
sbb
iret
ret
insl
lods
and
scas
cmpsl
sub
pop
icebp
stos
and
push
add
call
add
cld
or
or
add
pop
pusha
test
push
push
adc
mov
push
xorb
xor
pusha
dec
push
gs
adcl
aas
inc
movsb
and
pop
or
xchg
jbe
and
inc
jns
add
mov
gs
andb
push
push
dec
inc
inc
dec
add
in
xlat
mov
and
dec
push
inc
ja
clc
jge
dec
pop
and
mov
push
push
pop
sub
fucomi
mov
pop
dec
dec
dec
inc
push
das
in
xchg
je
rorb
je
mov
subb
loopne
and
icebp
repnz
dec
dec
dec
repz
cmc
testb
dec
idiv
stc
cli
dec
dec
dec
dec
sti
cld
std
decb
dec
dec
jmp
loope
dec
dec
dec
dec
jecxz
in
dec
dec
dec
dec
out
jmp
dec
jmp
in
out
dec
dec
dec
dec
out
rcl
rorb
dec
dec
rcl
aad
dec
dec
dec
dec
xlat
fcomp
fimull
dec
dec
fcmovnu
fstp
dec
dec
dec
dec
ffreep
rol
dec
dec
dec
ret
dec
dec
dec
enter
dec
dec
dec
lret
int3
int
dec
dec
dec
dec
iret
mov
mov
dec
dec
dec
mov
mov
dec
dec
dec
dec
mov
mov
dec
mov
dec
dec
dec
mov
dec
dec
dec
mov
dec
dec
dec
cmpsl
test
stos
dec
fidivs
das
mov
nop
jl
ja
rorb
push
pusha
leave
mov
and
inc
push
push
push
aas
shlb
xchg
or
arpl
imul
xorb
or
int3
ja
roll
popa
jo
fisubl
nop
fdivl
decl
or
dec
jne
dec
dec
gs
outsl
jb
push
pop
mov
mov
outsl
mov
cmpsl
sbb
or
outsb
mov
nop
ret
or
mov
sub
push
push
pop
adc
pop
stos
push
scas
nop
test
jns
xchg
dec
dec
ret
xlat
dec
jp
xor
pusha
mov
jb
or
scas
mov
push
or
imul
outsl
nop
clc
mov
jle
popa
outsb
add
rcrl
jnp
push
jnp
mov
outsb
jbe
jb
insb
outsl
ja
shlb
mov
inc
pop
popf
ret
sub
sub
pop
mov
jnp
jle
shll
imul
popa
add
jb
mov
jle
gs
mov
andl
roll
in
or
jge
mov
pop
push
outsb
fs
fs
xor
orb
mov
push
outsl
imul
mov
or
jb
std
clc
inc
popa
jae
ficomps
mov
jle
jo
add
rolb
inc
scas
js
ds
loopne
loopne
adc
jae
push
leave
addl
sbb
mov
push
push
jb
mov
lock
xor
xor
add
push
inc
mov
push
mov
mov
mov
fbstp
push
lods
popa
insb
inc
in
ds
mov
jb
popa
outsb
inc
xorb
orb
inc
addb
add
mov
mov
in
jb
data16
mov
js
push
pusha
push
data16
pop
andl
pop
andl
ss
adc
addr16
fbld
push
popa
data16
enter
cs
xor
inc
add
or
int3
sub
out
inc
cmp
dec
and
pop
mov
inc
adc
jbe
xchg
lods
xlat
push
adc
jb
popa
fs
adc
les
int3
add
enter
lret
lret
xor
fsubrs
sbb
rol
je
aam
cmp
pop
push
aam
mov
cmp
repz
jnp
sbb
push
loopne
sbb
mov
push
ret
inc
mov
mov
clc
sarb
dec
jne
push
mov
push
subl
or
outsb
arpl
cmp
fmuls
incl
hlt
aaa
movsb
ret
adc
repz
pop
push
add
xchg
std
pop
add
push
lret
mov
mov
fwait
mov
insb
or
call
sbb
mov
inc
insb
mov
lock
mov
test
std
unpckhps
or
fs
dec
call
pop
aas
or
cld
in
cmp
inc
adc
sub
and
add
sbb
enter
cli
stos
mov
addr16
aaa
jg
fsubrs
sbb
jp
add
mov
dec
cli
mov
inc
inc
dec
or
jg
and
stos
inc
pop
add
xor
inc
test
repz
mov
sarl
jbe
cmp
jmp
insl
push
cmpsb
je
movzbl
push
push
ljmp
jl
rcrb
add
lcall
pop
lods
fstl
jne
inc
inc
ds
mov
jmp
pop
incl
in
cmpsl
mov
out
and
add
outsl
in
sti
je
loopne
out
sub
pop
stos
cmpl
xor
cmp
lock
xor
inc
mov
mov
cmp
shl
mov
clc
addr16
leave
mov
fnsave
pop
ret
sub
scas
add
mov
sbb
inc
jo
adc
add
jbe
sbb
push
push
cmpl
imul
daa
fnstcw
push
push
adc
out
rol
mov
stc
lock
mov
jl
cmpb
jbe
adc
imul
pop
dec
sub
into
or
into
sub
inc
adc
push
jl
add
lock
rcl
jg
lods
mov
add
sub
jb
sub
je
mov
cmp
add
mov
hlt
mov
rolb
push
stc
std
cmpsl
mov
add
or
jae
inc
dec
jne
ja
loope
ljmp
jns
pop
hlt
lahf
notl
dec
lcall
add
icebp
dec
pop
cmp
jb
pop
push
mov
push
pop
mov
and
pop
pop
sub
sub
jbe
add
mov
idiv
mov
sub
jmp
mov
dec
jne
push
mov
sub
xor
push
outsb
cltd
mov
mov
pop
jecxz
inc
mov
xor
loopne
and
jo
pushl
mov
negl
or
cltd
lret
mov
xor
in
cmp
dec
inc
outsb
cmpsb
mov
add
rorl
add
mov
lods
sub
mov
cmp
push
add
add
jbe
shll
fildll
inc
fisttpl
fistps
ret
add
add
sub
add
rorl
fists
sub
outsb
stc
mov
cld
fwait
test
rcrl
loope
fisttps
cs
ffree
ffree
ffree
pop
add
add
or
and
push
cmp
or
mov
stos
clc
xlat
cmp
add
push
mov
sbb
push
xlat
adc
xchg
sar
sub
xchg
loope
mov
xor
mov
mov
push
push
mov
xor
jecxz
xchg
jl
push
js
mov
imul
repnz
mov
pop
outsl
mov
mov
pushf
xor
sub
mov
cmp
inc
push
mov
aaa
test
bound
call
mov
mov
or
add
jo
adc
fistl
pop
movb
repnz
jl
inc
int
add
and
adc
jbe
rorb
in
cmp
jmp
fstl
loope
fsub
mov
arpl
adc
mov
dec
sarb
das
add
adc
insl
lock
setne
jmp
ss
cwtl
sbb
mov
pop
jns
pop
addr16
dec
pop
sti
add
inc
mov
dec
ret
fildl
pop
add
xor
test
test
push
adc
mov
jmp
and
push
xchg
cmp
xorb
subl
shl
add
jo
cmpb
and
ja
imul
add
sub
js
add
push
mov
mov
and
pop
aaa
outsb
pop
and
arpl
jbe
insb
scas
orb
push
inc
jge
add
push
add
cwtl
lret
add
shll
scas
mull
mov
subb
arpl
pop
out
adc
jb
push
js
sbb
cmp
add
cld
out
lret
aad
aas
push
loopne
mov
adc
sti
jge
sbb
xor
pusha
idivb
adc
outsb
push
enter
rcr
pop
aad
hlt
and
mov
popa
lret
inc
cld
or
fistpll
sbb
rcrb
lock
mov
bound
leave
push
add
add
push
lds
sahf
mov
nop
jne
mov
jno
or
movl
inc
ret
clc
dec
push
adc
mov
dec
int3
push
enter
jl
sbb
cmpsl
jne
nop
pusha
inc
push
hlt
ficompl
stc
cmp
sub
lock
sahf
mov
ret
jg
add
inc
stos
jb
or
xchg
dec
ret
push
jmp
inc
sbb
outsl
outsb
push
pop
cmpsl
sbb
mov
jo
aaa
inc
ret
add
cmp
sbb
mov
cmpsl
xor
pop
clc
mov
push
push
pop
scas
add
xor
je
rcrb
decl
add
push
xlat
addr16
lods
mov
sub
jmp
scas
and
add
mov
mov
popf
jne
dec
jp
icebp
ja
jo
das
cli
pushf
sarl
lods
jns
jle
and
mov
popa
xchg
pop
cmp
inc
xchg
imul
mov
pusha
imul
lock
mov
sbb
testb
push
jg
sub
cmp
incl
cs
xchg
nop
aas
andps
mov
push
push
mov
aaa
pusha
adc
adcb
push
and
repnz
jge
imulb
push
hlt
clc
cld
push
jnp
push
add
cld
imull
fiadds
mov
aam
lcall
imul
xor
loopne
xchg
and
ret
pusha
repnz
pop
inc
push
clc
aam
adc
in
pushl
pusha
stos
mov
adc
enter
das
push
rolb
push
xchg
addr16
cld
xchg
jo
hlt
arpl
rorl
clc
imul
rcll
fadds
dec
dec
ret
lea
cmpsl
aas
mov
push
mov
add
lret
popa
add
cltd
adc
cmp
xlat
jo
addr16
loopne
aas
arpl
push
dec
pop
adc
cmp
mov
mov
inc
xlat
mov
outsl
cld
pop
xor
xor
repz
mov
mov
xchg
and
outsl
jl
stc
pop
cmp
cli
ljmp
je
mov
mov
rorb
fadds
xchg
jmp
xchg
add
out
mov
push
inc
shll
scas
mov
inc
inc
movb
cmp
jb
inc
dec
je
sti
mov
nop
fistps
sub
jbe
sbb
pop
inc
or
mov
lods
mov
mov
push
add
inc
sub
jne
add
cmp
cmpsl
mov
mov
inc
pop
add
or
je
cmp
jbe
xchg
lock
mov
sbbb
ret
subb
ljmp
and
outsl
fsubs
imul
add
dec
dec
push
cmp
jne
cmpsl
cli
add
les
add
cmp
mov
jp
push
adcb
cld
and
jg
sub
or
add
sbb
adc
test
add
push
stos
xchg
xchg
into
inc
xchg
push
rolb
inc
and
aaa
mov
aam
add
mov
loopne
aam
mov
or
pop
pushf
stos
dec
jne
les
inc
outsl
or
arpl
jmp
mov
mov
ds
cmp
sub
fsubrl
jne
cs
insl
shll
std
and
lods
jmp
add
mov
mov
fadd
and
pop
ljmp
fildl
sub
jae
shrl
mov
inc
movsb
xchg
pop
mov
rep
sbb
xchg
push
inc
loopne
jge
ds
dec
xchg
mov
incb
pushf
jmp
sub
das
dec
xor
cmp
ja
imul
mov
add
loopne
fistpl
add
pop
dec
ss
push
and
jb
or
jl
pusha
jo
bnd
ret
je
xchg
ret
and
mov
imul
clc
fistpl
or
xor
mov
lcall
xchg
mov
mov
push
push
dec
ret
mov
imulb
pop
pop
ss
sub
or
popf
arpl
lods
in
xchg
dec
or
sub
fsubrl
and
lea
and
add
cmpsb
addb
repnz
or
sbb
or
mov
jae
fsubr
mov
cmpsl
pop
jb
lahf
shrb
imul
jg
pop
cmp
test
test
xlat
sbb
mov
data16
xchg
incb
mov
aad
or
jmp
xor
inc
cld
xchg
and
jmp
mov
mov
mov
aas
and
push
cld
call
pop
js
mov
lret
xlat
jl
ja
mov
mov
cmp
ja
push
and
int3
or
pop
rcrb
mov
xchg
imul
pop
lods
out
sub
pop
pushf
mov
outsb
mov
inc
je
mov
or
insl
mov
mov
inc
je
mov
dec
je
dec
jl
test
aas
mov
mov
ret
mov
bound
jne
xchg
adc
jge
sbb
cmp
pop
mov
test
push
loopne
mov
inc
iret
push
mov
dec
dec
mov
clc
xchg
ret
xor
ret
lock
ret
ds
inc
pop
in
push
imul
and
test
push
lret
pop
jl
mov
inc
in
lock
dec
sub
xchg
adcl
popf
pop
or
cli
inc
cmp
aaa
mov
mov
out
or
movsl
ljmp
cmp
push
jge
sbb
lea
xchg
gs
out
or
aam
add
jl
jmp
add
add
add
jl
add
jno
mov
xchg
iret
push
lea
iret
mov
cld
je
push
xor
stos
or
decl
rorb
pop
jge
mov
neg
jmp
or
shrb
push
enter
xchg
push
mov
mov
out
rorb
gs
adc
clc
in
or
jg
and
mov
stos
cmp
jne
pop
pop
outsl
aam
mov
xchg
xchg
mov
psubd
test
js
test
aam
mov
cli
arpl
add
mov
sarb
pop
push
loop
jle
mov
cs
daa
movsb
loopne
mov
rorb
add
dec
mov
mov
movzwl
sub
clc
je
sbb
dec
add
imul
mov
inc
inc
sub
adc
je
testl
movswl
mov
add
lea
add
sbb
call
dec
cld
cmp
out
sub
jne
lods
push
lcall
inc
dec
inc
dec
lods
or
dec
xchg
jge
mov
jo
ret
std
ret
mov
aam
adc
jg
cmp
jl
pop
sbb
ficompl
dec
stos
push
je
mov
stos
imul
fildll
stos
jmp
inc
inc
mov
loop
enclu
mov
inc
stos
pop
pop
inc
clc
dec
ja
aaa
aad
add
push
mov
add
jno
mov
jbe
sub
das
clc
add
inc
mov
mov
test
insl
cmp
cli
adc
mov
mov
sub
or
or
repz
inc
or
test
jne
sbb
sbb
stos
cmpsl
sbb
call
loope
testl
dec
je
inc
jne
pop
mov
ret
mov
bswap
xchg
repnz
or
repnz
inc
dec
cmp
mov
lock
fwait
jns
iret
mov
xor
inc
je
push
push
cmp
add
or
data16
shlb
pop
pop
inc
loop
push
mov
test
dec
pushf
add
sub
out
idivb
and
and
adc
and
sub
inc
sub
frstor
sub
sbb
jae
jne
and
sub
sub
sahf
popf
fs
xor
sub
xor
and
dec
xchg
fldenv
test
testb
je
xchg
outsl
repz
mov
lea
adc
inc
and
mov
and
add
jp
andb
push
xor
sbb
or
xor
aaa
inc
jg
inc
inc
push
adc
je,pn
imul
movsl
dec
inc
rol
cmp
test
inc
fabs
push
jg
sarl
and
pop
frndint
rcr
scas
insb
or
fstps
std
fcomi
fwait
mov
testb
je
fidivl
jne
lea
fcomip
out
add
inc
sub
nop
shr
and
add
sbb
jmp
shrb
jns
mov
mov
cmp
pushf
or
cmpb
add
or
dec
js
decb
and
pop
cmpl
leave
jmp
mov
aaa
dec
sbb
je
notb
clc
mov
shr
mov
add
xchg
out
aad
dec
dec
xor
adc
inc
inc
subb
rorl
je
mov
cwtl
push
into
neg
sbb
mov
or
pushl
sarl
inc
sub
mov
jle
repnz
loopne
jae
dec
add
mov
fildll
xchg
aad
cli
in
or
or
jg
fidivl
fwait
mov
jne
mov
push
inc
fcomip
add
pop
dec
sub
cmp
popf
mov
or
ljmp
dec
adc
sub
movb
cmpb
testl
pop
jmp
mov
sbb
xlat
add
inc
pop
mov
jmp
jo
push
inc
ret
outsl
rorb
lret
f2xm1
fwait
jg
loop
jo
push
fldz
cmpsb
ret
mov
subb
lods
or
loope
sahf
test
jne
inc
sbb
cmp
icebp
je
and
fistpll
sub
pop
add
jg
sbb
pop
cwtl
jne
mov
sahf
add
xchg
push
xor
push
mov
fldl
cld
inc
adc
aas
jmp
fstpt
movsb
test
adc
data16
mov
sub
insl
and
push
int3
or
js
mov
sbb
or
fimull
addr16
add
jmp
aaa
mov
negb
or
adc
es
push
inc
imul
push
cmp
hlt
nop
jb
aaa
add
mov
arpl
subl
movsl
xchg
in
push
mov
push
imul
pop
pop
fistps
gs
xorl
push
inc
addr16
mov
xlat
sub
adc
idivb
add
jbe
sub
fstpl
fwait
add
das
mov
add
out
add
cli
test
fldl
ret
rolb
xorb
mov
divl
push
adc
dec
fdiv
add
adc
cs
or
cld
jbe
jae
or
cmp
add
stc
inc
fisubs
cmp
sub
add
imul
jge
enter
call
fildl
jle
mov
lahf
orb
sbb
push
pop
pop
xor
roll
outsl
movsl
xor
jne
add
lock
mov
adc
mov
stc
int3
aaa
loopne
fs
mov
push
cmp
test
iret
and
call
or
push
enter
loopne
mov
and
fldcw
xor
div
shl
push
sub
adc
mov
or
pushf
or
dec
or
fsub
outsl
pop
xor
les
add
in
jmp
lock
incb
jb
jnp
adc
ja
and
jb
or
jp
mov
push
sti
insb
cli
cmp
ja
adc
cmp
add
inc
dec
jne
ljmp
mov
aas
cltd
idiv
imul
pop
sub
fldl
repnz
mov
fildl
add
pusha
ret
or
js
jne
vpaddw
xor
dec
pop
call
test
call
out
in
leave
jg
jl
clc
push
clc
add
insl
cmp
or
inc
xchg
jb
pop
xchg
arpl
pop
inc
push
mov
bound
data16
cmp
jl
addl
add
inc
inc
and
xchg
lods
mov
xor
lock
or
dec
lock
imul
mov
test
repnz
pop
xor
add
sub
js
mov
sub
mov
dec
lods
cmp
andl
insb
imul
pop
dec
aaa
iret
sbb
inc
jmp
nopl
mov
clc
xor
hlt
mov
cltd
xchg
sbb
jbe
xor
call
xchg
and
popf
mov
cmp
or
xor
xchg
inc
icebp
and
push
xchg
or
push
adc
mov
or
cltd
cld
sbb
adc
lea
fiaddl
jmp
xchg
and
cs
xchg
or
mov
and
adc
clc
jbe
sahf
orl
jb
lret
mov
in
pusha
in
clc
push
mov
dec
mov
push
loopne
mov
pop
pusha
push
in
sub
jno
push
or
sti
je
popa
scas
mov
test
inc
hlt
out
inc
xchg
sarb
js
add
popl
jo
mov
mov
add
push
lea
or
xchg
repnz
jo
sbb
adc
inc
in
add
jecxz
xchg
lret
mov
push
in
jge
call
ds
jecxz
lahf
pop
and
adc
jne
jbe
jno
xor
test
shll
push
add
out
repnz
in
add
push
sub
xchg
ret
js
cmpsl
popa
jno
mov
pop
rcr
push
rolb
mov
mov
push
dec
loope
mov
cli
mov
je
or
rorb
jp
in
notl
shlb
add
sub
xchg
jle
mov
jne
sub
jl
xor
dec
adc
sbb
sub
rolb
xor
sbb
pusha
test
jns
imul
fsubs
add
aaa
addr16
in
dec
ds
in
ret
push
xchg
inc
sub
lock
aaa
mov
jecxz
push
inc
cmpb
and
xchg
jne
push
or
jb
movsl
in
jno
outsb
stc
ds
jns
add
add
movsl
sbbl
or
sbb
lcall
pop
xor
cmp
pop
mov
stos
xchg
mov
pop
incl
dec
mov
loop
popf
loopne
cmc
sahf
xchg
inc
call
adc
icebp
cmpb
sub
mov
push
cmp
pusha
repnz
jns
pusha
and
add
clc
ljmp
mov
pop
cmp
jne
mov
hlt
pop
xor
xchg
fisubs
push
jne
mov
cmpsl
cmp
test
sbb
xchg
jbe
jmp
push
or
or
add
add
pop
or
or
imul
js
cmpb
push
insb
int
repz
stos
test
out
ds
stos
cmp
loopne
ds
jns
lods
orl
cmc
sti
lret
pop
or
test
or
mov
loop
mov
cltd
xchg
xor
inc
fsubs
das
popf
dec
push
mov
and
pop
adc
pop
and
xchg
mov
xor
dec
nop
push
push
pop
pop
mov
lock
lea
inc
sub
push
push
jbe
or
dec
je
add
jmp
out
add
push
repnz
jecxz
arpl
cmp
and
cs
daa
xchg
nop
nop
and
mov
pop
lods
loope
mov
call
push
cmpsl
or
push
push
jl
push
out
rcll
dec
jg
je
mov
add
int
sbb
pop
sub
je
pop
je
jmp
cmpb
dec
mov
cmp
mov
sub
sub
add
jmp
rolb
jmp
cmp
xor
mov
mov
sbb
sub
ret
ljmp
push
loop
data16
jmp
and
shll
or
jle
add
add
fcomip
mov
inc
call
nop
out
add
and
repnz
in
xchg
jne
lcall
push
lock
pushf
enter
and
add
daa
fs
xlat
jns
add
sbb
xchg
ja
jns
adc
or
inc
jmp
and
add
xor
mov
lea
jb
push
add
rol
sub
xor
push
inc
xor
jmp
or
push
cmp
call
jge
arpl
mov
in
cmpb
cltd
push
imul
xchg
je
inc
xchg
sbb
aas
dec
jmp
sbb
push
test
fucomi
add
rorl
mov
aam
mov
add
repnz
cld
sub
xorl
adc
jns
pop
sbb
clc
inc
mov
stc
cmp
add
inc
dec
das
push
dec
xchg
jmp
in
popf
or
adc
and
push
clc
insl
mov
sahf
movntps
inc
ret
jne
or
mov
adc
outsb
lea
popa
cmpsl
cli
inc
dec
or
sbb
insl
sahf
inc
xor
les
sbb
cmp
mov
je
mov
dec
mov
mov
je
dec
sbb
je
push
sbb
cltd
mov
push
popa
or
adc
sub
dec
push
pop
mulb
int
ljmp
adc
sub
add
sub
jae
jnp
int
rorb
scas
arpl
ret
add
mov
out
or
out
mov
fimuls
test
mov
jb
test
mov
fcoml
dec
cmp
push
or
fimull
into
icebp
int3
movl
or
and
js
add
fiadds
loope
mov
xor
mov
out
subb
jl
pop
in
push
mov
push
cmp
jne
incl
les
and
mov
scas
and
jmp
sub
je
dec
je
sub
sub
je
mov
adc
push
push
es
push
inc
mov
fwait
js
clc
jle
fadd
das
xchg
sub
loopne
cwtl
add
or
std
or
adc
movb
add
jl
pop
pop
mov
ja
jle
inc
rcr
mov
mov
loope
add
mov
xchg
movsl
int3
add
cmp
inc
add
sahf
jmp
or
loopne
sub
dec
jne
xchg
cmp
sub
dec
ljmp
adc
cmp
jg
mov
ret
cltd
xor
sub
add
std
bsr
shlb
js
add
popf
in
push
cmc
adc
pop
and
out
cld
gs
shr
cmp
xchg
psubusb
js
inc
dec
loopne
push
jmp
mov
flds
and
inc
out
mov
add
pop
xchg
jo
lock
popf
mov
ret
mov
mov
ds
loopne
popf
pop
xchg
mov
dec
push
sarb
jbe
andl
mov
mov
sbb
adc
and
test
or
mov
hlt
lods
sahf
fsubrs
cld
or
and
clc
sbb
ljmp
into
add
lock
bound
mov
cs
inc
cmp
push
mov
and
in
call
mov
jmp
aaa
repz
dec
push
repnz
sbb
mov
lock
pop
push
movsb
out
mov
jo
test
cmpb
ja
fists
fsubrl
push
fstps
cmp
shl
aaa
in
mov
cmpb
jle
and
fs
jne
popa
or
mov
add
or
lds
or
daa
jmp
mov
cmp
dec
cmp
aaa
mov
loop
xchg
pop
mov
and
cltd
cwtl
pop
jmp
or
jl
jne
sarl
push
scas
push
test
fdivr
fildl
adc
das
fsubrp
add
sub
fcomps
xorb
test
add
inc
repnz
out
dec
nop
pop
enter
add
sti
lcall
jno
lss
or
pop
add
pushf
mov
sbb
iret
mov
pop
fstpl
movsb
mov
inc
and
jmp
in
mov
add
sbb
or
lds
sub
insl
push
and
and
add
xor
cmp
or
and
lret
xchg
clc
cmpsb
je
or
add
add
pop
inc
nop
xchg
pop
xor
add
sbb
test
test
xor
cmp
negl
sub
jne,pt
arpl
je
add
sbb
loopne
mov
and
add
pop
sub
inc
mov
rclb
xchg
ficoml
push
bound
test
sarb
test
add
inc
dec
aam
rol
xchg
cmp
cwtl
or
cmp
add
imul
cltd
mov
in
fdivp
mov
push
cmp
adc
test
ret
jne
dec
cmpsb
lods
xor
test
daa
fst
fcomps
out
pop
mov
or
pop
fwait
jmp
sbb
adc
add
fstp
push
pop
push
dec
push
loopne
xchg
xchg
sbb
pop
js
add
mov
sub
jb
or
mov
xchg
jno
ror
fwait
and
outsb
out
mov
ret
jp
adc
loop
mov
aaa
test
pop
ret
pop
push
clc
sbb
repz
addl
outsb
xor
call
jp
lods
xor
movsl
cmpsl
mov
fidivrl
add
lcall
or
addr16
test
jg
movsl
loope
cmpsl
jmp
lds
test
fmuls
push
push
out
pop
inc
mov
rorl
inc
inc
dec
push
test
mov
mov
test
nop
inc
lcall
scas
and
inc
jp
sti
or
jne
rorl
and
pop
add
scas
scas
xchg
push
in
fadds
mov
je
shlb
dec
fbld
call
leave
mov
in
or
or
sub
scas
xlat
bound
lock
not
push
jl
je
xchg
cmp
mov
mov
add
or
sub
adc
sub
fwait
sbb
mov
mov
jns
inc
pop
lock
push
addr16
and
mov
cmp
fucomip
fcomi
xor
dec
lock
adc
cmp
fwait
mov
in
jbe
addl
push
push
repz
lds
dec
mov
popa
fbld
jl
cmp
hlt
push
push
xchg
sbb
nop
int3
push
loop
xchg
and
pop
fcoms
enter
lcall
in
push
nop
in
mov
aam
or
adc
clc
test
addb
fwait
and
or
repz
push
jecxz
or
mov
jmp
mov
sub
je
sub
je
scas
ret
add
cmp
cmp
lods
lahf
cs
stc
pusha
mov
mov
jl
sub
ja
jge
sub
lock
add
jg
mov
sbb
add
sti
add
dec
mov
jle
call
cmp
adc
add
jmp
mov
jns
fwait
or
xor
pop
jae
jne
xor
jmp
in
push
push
leave
and
push
pop
push
mov
mov
and
cmpb
sbb
add
mov
add
pop
fmull
cmp
mov
sbb
sub
clc
pop
test
cmp
ficompl
rclb
loopne
sub
ja
pop
jne
out
ds
aam
cmp
push
add
jnp
aaa
ja
popa
or
lods
sbb
call
or
popf
gs
mov
jae
mov
pop
mov
rolb
repz
pop
ret
or
mov
aaa
xor
fidivrs
add
xchg
enter
add
push
fwait
push
test
or
lods
bound
add
cld
fdivs
addb
jmp
pusha
mov
insl
adc
lods
pop
sbb
lods
jp
out
loopne
and
mov
mov
push
mov
sarb
jne
jl
mov
stc
push
imul
mov
es
data16
das
call
or
cmp
and
cld
push
push
add
clc
push
ror
inc
mov
inc
push
or
test
or
out
or
push
cld
hlt
sbb
repnz
sub
xor
je
inc
loope
testl
out
sbb
pop
push
push
add
inc
bound
lret
prefetchw
add
or
inc
add
adc
fildl
test
shrb
addl
add
and
mov
push
les
sarb
nop
ja
sub
inc
scas
or
fsub
fcom
xor
dec
xchg
xchg
jecxz
mov
xor
test
das
cmpb
sub
ret
adc
and
or
xchg
stos
add
or
aad
inc
adc
cs
ja
add
cmp
jg
cmp
clc
fnsave
sbb
inc
jecxz
je
mov
mov
and
inc
add
or
mov
inc
cld
insb
mov
pop
xchg
xchg
decl
push
loope
mov
adc
cmpsl
cli
push
sar
lret
adc
ljmp
test
sub
cwtl
adc
out
andl
inc
or
or
pop
adc
mov
cmp
test
or
xchg
mov
push
ss
popf
or
out
cmp
mov
or
jge
popf
cs
loopne
sub
fmul
xchg
jg
int
test
sub
sub
jo
fcmovb
mov
mov
add
dec
fmuls
push
mov
push
add
js
xchg
les
xor
imul
in
inc
jnp
push
push
jb
cmp
dec
je
jmp
xor
inc
xor
sub
jmp
and
add
mov
imul
test
lcall
repnz
adc
daa
mov
push
mov
call
outsb
adc
mov
dec
xchg
jb
pop
inc
lds
pop
cld
cmpl
movaps
pop
or
cltd
bound
jae
adc
xchg
bound
or
arpl
cmpsl
dec
pop
adc
cwtl
sub
push
loopne
xchg
mov
and
mov
lea
repnz
out
orb
mov
jnp
jae
or
lret
push
push
enter
shrb
aam
xor
lods
mov
outsb
repnz
jmp
sub
lahf
mov
mov
mov
lods
push
push
or
cmp
out
lds
pop
aas
dec
push
aad
cmpsl
andb
pop
push
xor
sub
cld
std
shrb
ret
ljmp
jae
jae
or
fdivrl
push
aam
call
mov
add
mov
test
xor
pushf
jns
adc
push
cmp
push
jp
or
pushf
rcrl
lea
adc
das
xlat
leave
xchg
cmpsb
scas
test
js
incl
dec
push
sbb
xchg
dec
dec
sbb
and
mov
sub
cwtl
sub
jle
cmp
jb
je
inc
xor
out
jns
pop
lds
test
add
adc
or
xchg
addr16
ret
sbb
adc
add
cwtl
cwtl
out
loope
adc
inc
pop
imul
mov
jge
cwtl
and
adc
inc
in
push
daa
push
insb
decl
mov
pop
push
rolb
mov
int3
or
xchg
jbe
add
repnz
mov
aam
sbb
adc
mov
mov
loopne
int3
mov
jl
pavgw
aam
jne
cmp
add
or
call
rolb
loope
jnp
mov
or
test
cmpb
cltd
jae
fs
jae
xchg
adcl
fisubrs
push
and
pop
dec
pop
xor
stc
xor
pop
test
arpl
add
fldt
push
dec
push
movsl
enter
sub
cmp
and
loopne
data16
mov
adc
add
dec
sbb
testl
add
adc
aas
or
jb
mov
sub
and
jns
dec
or
inc
and
bound
outsb
add
add
add
xchg
add
clc
fists
xor
sbb
push
scas
push
mov
cmp
daa
jmp
or
mov
lock
lds
test
hlt
mov
xchg
pop
and
inc
pop
jg
mov
scas
das
adc
int
and
jl
mov
and
or
or
sub
jge
loop
cmp
push
xchg
xchg
jmp
adc
mov
add
xchg
add
add
hlt
jge
jne
lahf
jl
jne
sbb
in
nop
or
push
sub
and
adc
xor
fwait
xchg
jno
loop
aaa
fildll
push
cli
cs
in
dec
cmp
test
push
xchg
jg
pop
jg
xchg
and
decl
add
inc
mov
stos
movl
icebp
iret
es
mov
jge
pop
mov
jns
push
pop
clc
sub
sub
aaa
push
daa
movsb
fcomp
pop
das
pop
and
add
jo
fwait
add
dec
sub
sarb
jae
push
shrb
adc
out
test
rorb
lods
pop
push
iret
xchg
dec
xor
addr16
dec
inc
mov
sub
negb
daa
and
in
xor
pop
jno
and
or
jmp
movl
push
pop
push
adc
test
sbb
mov
mov
pop
xor
sbb
mov
daa
or
inc
inc
jmp
xchg
fwait
lea
xchg
push
fsubrs
cmp
in
and
jge
or
mov
sbb
decb
test
xchg
mov
cmpb
cmp
adc
adc
cmp
aad
les
test
mov
data16
fiaddl
add
push
push
xchg
out
clc
sub
aaa
fadd
in
fiaddl
add
pop
xchg
fmuls
sub
sarb
cli
jbe
lds
sbb
bound
loope
xchg
fmuls
jne
fcmovnb
lock
daa
enter
adc
mov
sbb
xor
adc
inc
inc
loop
in
jne
jb
out
sahf
hlt
or
adc
pop
push
pop
adc
adc
pop
jae
lock
aad
flds
leave
hlt
sub
push
mov
or
or
fidivs
push
mov
vsubsd
pop
sub
jb
inc
mov
inc
sti
stos
adc
in
sbb
lret
jne
or
ss
or
stc
icebp
xlat
cmp
pop
pop
or
into
lock
mov
xchg
das
not
push
fstl
in
or
inc
fidivrs
dec
movsl
add
sbb
xor
dec
data16
enter
gs
adc
xchg
out
lds
call
pop
rolb
xchg
xor
into
decb
xchg
mov
add
push
lcall
cmp
jmp
mov
pushf
mov
mov
mov
and
clc
popa
mov
fcompl
cld
mov
inc
inc
cmp
test
sub
mov
push
push
ja
mov
scas
jae
imul
out
add
or
clc
mov
jmp
sbb
arpl
mov
sbb
adc
xor
arpl
add
cmp
leave
das
loopne
stc
push
and
mov
les
inc
test
cmp
ret
dec
test
sub
lock
data16
sti
pop
add
inc
sub
mov
movsb
inc
call
fcomps
test
mov
push
sbbb
pop
jb
enter
das
mov
movsl
mov
xchg
fwait
pop
es
mov
mov
sub
pop
js
aam
pop
in
fcomp
mov
push
fld
push
imul
dec
repnz
sub
and
int3
mov
or
out
enter
shlb
imul
sbb
add
and
aas
ret
in
daa
add
add
nop
sar
shlb
mov
push
mov
dec
jge
mov
jb
nop
xchg
in
movsb
lock
popf
sbb
add
push
push
repnz
sub
insl
das
fs
xlat
mov
add
fs
das
frstor
add
pop
jo
push
inc
push
fstp
add
cmp
cmp
pop
push
cmp
push
cmp
and
les
or
pop
aad
shlb
je
push
ret
dec
jne
outsb
jl
push
cltd
sub
insl
mov
adc
daa
ret
cli
arpl
sub
out
dec
pop
mov
push
pop
bound
mov
pop
add
ss
mov
adc
subb
cmpsl
fsubs
dec
rcrl
mov
adc
adc
jbe
pusha
mov
add
daa
push
pop
sub
or
clc
inc
mov
in
add
ret
pop
inc
mov
js
cmp
xor
mov
inc
imul
mov
aaa
inc
insb
inc
subl
xchg
jae
cmpb
rol
mov
pop
std
inc
ret
push
mov
or
push
in
ror
in
jne
add
inc
dec
fmull
fndisi(8087
add
roll
jnp
adc
xchg
inc
xchg
push
add
push
in
sarb
xor
pop
dec
aaa
mov
stos
pop
shl
ds
subl
es
jne
add
push
and
enter
push
adc
movsb
pop
dec
dec
fstpl
mov
imul
jbe
scas
cmp
ret
cmp
mov
sbb
lods
out
add
jne
sbb
inc
repz
xchg
mov
xchg
aas
loop
xor
pushf
jmp
push
imul
push
push
and
sub
mov
je
and
loop
adc
or
jg
inc
jb
gs
jo
inc
js
xor
xchg
lock
inc
in
js
adc
pop
dec
ret
xchg
mov
dec
fistpll
pop
testb
dec
mov
sub
mov
cli
mov
sbb
inc
cmp
jne
sbb
dec
iret
sub
jle
sub
mov
mov
out
lods
mov
ror
mov
inc
jmp
and
addl
ja
out
in
mov
in
xchg
add
ljmp
std
jnp
cmp
cwtl
mov
sbb
mov
fidivl
push
mov
inc
or
fs
mov
int3
lea
cwtl
in
sbb
imul
sub
les
in
call
add
rorb
clc
pop
orl
xor
lea
xor
in
fiaddl
jbe
inc
sub
sbb
sbb
fadd
sub
sub
inc
mov
adc
mov
adc
pop
adc
mov
dec
sbb
cmpsb
subb
and
and
pop
cmpsb
cmp
fmuls
mov
sub
adc
cmp
cs
mov
pop
or
ret
sahf
in
sub
sbb
js
les
pop
cld
adc
cmp
je
push
leave
xchg
inc
mov
sub
aas
mov
seta
mov
lea
jb
out
push
mov
jmp
adc
xchg
lret
enter
jns
shl
das
add
aam
orb
pop
lcall
dec
cmp
sete
incl
shrb
push
xor
fmuls
inc
decl
cmpl
pop
pop
jl
inc
shr
leave
lods
cltd
push
int3
or
mov
adcl
inc
cld
jo
clc
incl
scas
add
cmp
stos
dec
adc
cmp
add
fidivrl
xchg
jo
mov
xor
inc
mov
rolb
dec
xchg
insl
aad
or
dec
sti
aaa
push
mov
stc
rcl
or
sbb
and
jl
lcall
fidivl
xchg
jecxz
push
inc
jg
dec
pop
arpl
add
outsl
shl
jb
aaa
add
jns
test
cmp
dec
sub
mov
add
in
mov
pop
mov
push
jne
cmp
pop
adc
xlat
dec
add
sub
push
jge
add
fcmovu
jge
scas
enter
mov
xor
pop
out
ret
sarb
jbe
in
jmp
or
out
in
sub
mov
cld
or
test
pop
add
cwtl
push
clc
inc
or
sti
mov
add
cs
idivl
loopne
fadds
mov
nop
pop
sbb
push
push
fdivp
sahf
divl
jo
push
pop
repz
nop
pop
push
mov
repz
ret
cs
js
test
mov
push
jnp
jge
test
push
push
jl
jle
out
jns
xor
push
int3
cmp
push
xor
cmp
push
mov
push
fnstsw
dec
add
sbb
repz
sbb
rclb
call
adc
fmulp
xchg
or
mov
xor
mov
out
dec
inc
inc
nop
clc
push
sub
hlt
jns
iret
enter
lock
push
insb
dec
gs
call
push
dec
sahf
xchg
iret
loopne
push
fsubr
fdivrs
ja
inc
hlt
aam
out
shrb
int3
dec
fmulp
cmp
pop
inc
enter
iret
dec
ja
push
and
das
push
mov
daa
mov
popf
mov
sub
out
in
hlt
movsb
mov
pop
daa
iret
leave
xor
cmpsb
pushf
cmp
nop
mov
inc
ds
push
and
and
dec
xor
mov
cli
test
mov
lret
cwtl
nop
mov
mov
mov
roll
je
loopne
sub
adc
cmp
adc
add
add
sahf
and
je
mov
les
sbb
jnp
jge
sub
pop
enter
data16
mov
and
xchg
cwtl
nop
nop
xchg
mov
jge
les
fs
jb
out
cmp
incl
mov
sub
in
adc
imul
addb
mov
jl
das
pop
inc
xor
push
mov
and
inc
push
stc
in
js
dec
mov
js
mov
daa
daa
cwtl
xchg
aaa
cmpl
fdivs
add
das
int3
aam
lods
or
mov
pop
not
pop
ret
dec
loopne
roll
leave
or
mov
mov
loop
or
cmpsl
sarb
adc
test
adc
sub
sbb
adc
cmp
loop
jl
push
ret
scas
adc
sub
xor
mov
inc
enter
leave
pushf
imul
inc
cmpsb
loopne
sbb
cmp
in
hlt
inc
mov
xchg
inc
in
and
push
clc
clc
jecxz
sub
clc
clc
lea
jp
in
pop
incl
sbb
adc
mov
std
rclb
leave
clc
xlat
ret
loope
sub
dec
add
leave
sub
adc
inc
movb
shll
jb
lea
shrl
in
add
orb
fistps
mov
enter
leave
pop
pop
add
test
and
mov
out
dec
xlat
adc
pop
out
nop
nop
and
leave
leave
mov
add
push
cld
sub
push
int
sub
sub
mov
mov
xchg
dec
lahf
cmpsl
push
push
push
mov
fdivrl
cmp
mov
fwait
jle
or
mov
test
cwtl
and
dec
xor
leave
test
mov
dec
xor
and
mov
xchg
ror
leave
and
dec
ror
fdivs
dec
in
int3
and
shl
xor
xor
aam
in
xor
fmuls
jecxz
jmp
fdivl
jns
movsb
jb
sub
dec
in
jb
in
call
jns
in
cmp
pop
lock
cltd
movsb
jb
push
in
mov
je
add
and
sbb
mov
push
jns
or
dec
gs
mov
je
fs
jne
das
dec
jne
fxch
das
pop
inc
imul
fs
stc
repnz
outsb
dec
jb
pop
outsl
jb
insl
jo
stc
out
pop
xor
jb
insl
push
je
pop
push
push
dec
cwtl
nop
cmp
add
fsubrs
aas
jb
pop
jbe
aas
inc
jae
pop
inc
jns
rolb
leave
inc
pop
imul
call
jmp
add
jne
push
sbb
and
pop
add
in
inc
fistpll
adc
mov
sbb
and
and
mov
loopne
fsubp
fimull
pavgb
ljmp
mov
stos
adc
xchg
adc
test
in
sahf
out
nop
add
cmp
movntps
jnp
sti
pop
clc
push
fsubl
test
adc
in
mov
pusha
dec
dec
inc
cmp
in
testb
addr16
push
orb
add
sub
fisubs
jmp
jmp
inc
mov
and
es
push
test
or
mov
and
add
test
imul
call
jae
add
shl
dec
in
push
dec
in
mov
or
lret
mov
jne
nop
pop
mov
popa
adc
idivl
adc
loopne,pt
dec
lds
xchg
fs
inc
pop
fs
js
and
adc
mov
jl
outsl
pop
jb
out
es
loopne
loopne
add
jb
sbb
sub
dec
out
popa
scas
inc
nop
adc
dec
insl
jo
adc
ds
ret
push
add
lods
iret
adc
enter
adc
out
mov
jo
int
sub
fimuls
arpl
dec
cmp
mov
xor
dec
mov
in
scas
cmp
adc
test
loope
xchg
pop
jg
fimull
in
in
add
in
and
fnstsw
jae
lret
cmp
cs
cld
shlb
es
or
sbb
in
fcoms
add
push
cmp
mov
inc
push
rcr
lock
seto
aam
shl
enter
arpl
mov
cmp
dec
enter
icebp
adcb
icebp
adcb
inc
aad
hlt
in
add
sbb
cmp
mov
sbb
bound
clc
sub
cmc
and
pop
jo
jecxz
sub
incb
aas
dec
je
sbb
icebp
shll
fs
push
cwtl
insb
xchg
xchg
es
jbe
add
jns
cmp
fnsave
enter
pop
loopne
clc
inc
pop
mov
mov
pop
xchg
jl
fsubrl
dec
enter
dec
repnz
add
sbb
in
mov
xchg
jl
stc
call
pusha
out
adc
mov
push
add
xor
sarl
jae
pop
xchg
loopne
dec
sbb
in
fwait
mov
adc
cli
enter
pop
rorb
inc
xorl
les
fsub
dec
repz
enter
test
add
cmp
cwtl
jg
hlt
jb
nop
rorb
or
add
ficoms
mov
aaa
shlb
rcrb
es
push
orl
cwtl
ret
fimuls
inc
fnstsw
jmp
adc
inc
dec
je
aaa
iret
mov
jb
push
sub
test
and
out
push
pop
pop
and
fisttps
adc
add
roll
rorl
xchg
adcl
dec
inc
pop
roll
jge
pop
nop
sti
cltd
sub
repnz
insb
jnp
add
and
insb
fistps
xchg
dec
jmp
std
mov
shr
jl
adc
cmpsb
fimuls
mov
push
js
in
mov
dec
cld
inc
test
cmp
inc
add
cs
add
data16
andb
enterw
clc
outsl
ucomiss
test
pusha
fs
mov
inc
je
dec
insb
in
ror
jb
xchg
clc
jmp
and
mov
clc
movzwl
lock
or
incb
insb
jl
inc
xor
lea
outsb
imul
call
clc
and
sub
test
aaa
sub
mov
xchg
inc
sub
inc
pop
dec
inc
rorl
pop
sahf
jmp
inc
mov
xlat
sbb
xor
repz
dec
pop
daa
lock
mov
in
fwait
or
pop
test
xor
mov
in
test
push
insl
in
jne
push
cld
xchg
push
pop
sahf
rol
pop
outsl
push
xor
cld
or
mov
aas
jmp
cmp
jne
loopne
sub
add
out
xor
sub
or
mov
imul
scas
adcl
call
inc
sub
sar
or
or
pop
jb
mov
scas
push
push
out
je
ret
jb
xchg
inc
es
jns
clc
fimull
dec
push
add
push
push
or
or
adc
adc
loopne
and
enter
and
pop
xor
loopne
mov
stc
push
push
jno
jecxz
mov
in
inc
jbe
adc
jb
and
xor
out
or
nop
cmpsb
dec
call
imul
mov
sub
pop
aad
mov
jmp
push
fcmovne
cmp
out
ljmp
push
add
xchg
inc
inc
call
decl
cmp
enter
enter
hlt
jmp
or
push
add
cli
and
mov
cmpsb
bnd
add
xor
inc
dec
or
mov
inc
and
enter
jmp
sbb
rolb
mov
shrb
or
pop
outsl
push
lock
cmp
je
pop
jne
push
in
lret
mov
addl
or
or
pop
mov
mov
movsb
daa
xchg
fs
es
insb
jnp
inc
mulb
push
add
inc
dec
add
dec
push
in
push
pop
stc
mov
push
jns
sti
push
testb
pop
xchg
or
sub
jle
je
and
inc
cli
adc
cld
ss
lcall
jmp
inc
lock
inc
or
push
sub
add
add
int3
xchg
pop
nop
pop
call
sbb
movsb
sti
leave
mov
mov
add
jbe
mov
cmp
push
sbb
mov
loopne
cld
clc
xor
or
xchg
fisubrs
cmp
outsl
push
lret
and
xchg
pop
mov
adc
ljmp
adc
jl
adc
sub
xchg
std
mov
sarl
pop
dec
pushf
adc
or
xchg
arpl
pop
ret
jo
cmp
mov
push
fistl
test
rclb
adcb
add
mov
mov
xor
mov
and
xlat
dec
sub
pop
sbb
adc
loopne
nop
arpl
pusha
pop
mov
jl
dec
sti
iret
add
xchg
clc
aas
sbb
mov
cmp
ja
jge
shll
pop
je
sahf
out
mov
mov
inc
call
cmp
loop
jns
idivl
push
mov
les
sbb
sbb
mov
les
cld
and
popf
lock
movswl
ja
adc
mov
xor
fldcw
and
cs
leave
xor
mov
add
pushl
add
sub
pusha
dec
jle
ljmp
dec
in
xchg
in
and
loopne
push
or
mov
pop
in
push
fsubl
jmp
cmp
fmuls
mov
mov
aam
aaa
aam
cwtl
bound
mov
rolb
lcall
cmp
jbe
jne
sti
nop
divb
mov
cltd
jmp
push
sub
je
dec
je
jmp
jle
lock
sbb
mov
xor
test
stos
jo
xor
and
mov
sub
cmpsb
cmp
iret
rcrl
adc
idivb
jbe
inc
xchg
xor
repz
imul
sti
sbb
sbb
or
aaa
cmp
flds
mov
inc
fnsave
mov
xlat
xchg
pushf
je
lods
lods
cmp
sbb
mov
jo
pop
shlb
pop
popa
movsb
and
pusha
inc
out
popf
movsb
mov
test
pushf
cmp
pushf
cwtl
mov
cmp
sbb
xor
stos
xchg
jno
dec
rcll
aaa
nop
je
cmp
dec
mov
fsubrl
sub
inc
inc
test
adc
mov
cmp
mov
pop
movsb
mov
nop
in
outsb
xor
add
icebp
mov
in
dec
mov
xchg
inc
stos
jb
stc
imul
sub
and
mov
inc
push
and
jo
inc
lea
ret
loopne
ds
sub
ljmp
and
loopne
jbe
or
mov
nop
test
inc
test
xchg
add
out
movsb
loope
mov
nop
lret
add
mov
pop
dec
pop
sub
dec
nop
xor
nop
daa
dec
push
push
push
negb
in
or
push
sahf
out
sahf
pop
sbbb
sarl
xor
pop
sub
mov
repnz
incb
jno
mov
ret
loope
ds
daa
fyl2xp1
cwtl
or
aas
mov
or
push
push
xor
push
xor
and
insb
inc
push
inc
or
add
push
mov
stos
push
cmp
in
ret
cmp
jno
in
mov
aaa
loopne
movsbl
test
cmp
fdivs
fcomp
xor
bound
aam
aam
pusha
fs
adc
rcl
insb
mov
stos
iret
jno
sbb
add
sub
jnp
repnz
adc
or
xorb
cmpsl
pause
mov
lcall
xor
aas
mov
pop
aad
repnz
or
push
jae
or
mov
push
daa
rcr
cli
add
notl
push
xor
rcrb
xchg
xchg
mov
or
cwtl
jo
mov
arpl
movsb
inc
ja
mov
adc
shll
cmp
arpl
test
test
adc
rolb
movsb
adc
cmp
cmp
jno
ret
aaa
outsl
aaa
jb
iret
imul
nop
lret
xchg
xor
ds
ret
or
mov
add
or
lahf
or
dec
sahf
mov
push
test
and
rol
sbb
mov
aaa
loopne
test
dec
mov
mov
testl
fwait
or
adc
ret
cli
inc
cmp
mov
jmp
movw
ja
xchg
jg
xor
add
mov
es
outsl
and
or
jb
dec
pop
adc
xlat
mov
jbe
fstpl
fwait
push
xor
and
daa
pop
push
test
in
fistpll
push
push
in
inc
or
sub
adc
push
or
lret
add
cld
outsl
sbb
cmpl
jb
mov
mov
dec
sub
push
inc
enter
push
inc
insl
jo
jns
cmp
jne
pop
int3
popa
rcr
push
insl
popa
bound
das
xor
ficoms
add
inc
outsl
jne
inc
fs
filds
outsb
arpl
sub
fcomps
dec
pusha
xchg
cmpsl
test
rolb
adc
arpl
daa
stc
aas
push
outsb
imul
inc
arpl
sub
mov
iret
jb
sbb
inc
jns
aaa
movsb
insl
pop
jb
cmpl
add
outsb
jo
add
clc
pusha
adc
std
cli
or
out
cmovb
push
test
xlat
in
adc
push
ss
xchg
mov
sti
in
lea
adc
inc
das
cmp
rorl
and
jno
mov
or
sbb
xor
std
jl
cld
stc
loope
pop
sub
pop
ja
lret
sbb
add
int
xchg
lea
add
cmp
sub
mov
jp
adc
cmp
and
in
pop
sbb
sub
inc
cmp
sahf
adc
xor
enter
in
push
pushf
rolb
adc
test
js
das
push
inc
push
push
gs
push
sbb
adc
shrd
cmp
sahf
insb
loope
xor
imul
cmp
daa
mov
or
fnstcw
mov
push
inc
fcomps
pushf
push
dec
fmuls
mov
xchg
lods
xor
hlt
cwtl
cmp
out
test
pushl
out
add
cmp
xchg
pop
shl
xor
push
add
push
xchg
mov
les
mov
pop
push
mov
cmp
jmp
insb
lods
pop
jecxz,pt
xor
icebp
test
push
loop
cmp
jnp
je
outsb
adc
mov
loop
repnz
xchg
popa
mov
pop
dec
mov
add
lea
add
imul
inc
jp
cmpl
adc
add
add
addb
mov
xchg
int
pop
inc
mov
call
mov
add
rolb
outsb
add
mov
push
sti
ss
mov
xor
or
adc
loope
inc
mov
adc
das
sar
push
fs
arpl
outsb
adc
adc
mov
sbb
imul
push
and
cmp
test
ss
movsl
ljmp
pop
loopne
add
dec
add
popf
xor
in
addr16
aaa
adc
pop
enter
es
rcll
mov
sub
add
pop
or
jbe
xchg
push
xor
cmp
cld
fcoms
sub
mov
mov
cmp
push
dec
mov
jno
pop
adc
incb
test
mov
fnstenv
sbb
and
fists
mov
push
push
mov
sbb
js
lock
mov
and
mov
mov
cld
jl
inc
xor
inc
sbb
xchg
ljmp
add
sbbl
push
andl
or
test
mov
add
and
dec
jne
xchg
test
mov
cmp
cmp
push
add
pop
test
stc
xchg
mov
cmp
push
clc
cmpsb
jne
pop
mov
xor
xchg
push
inc
inc
inc
test
shrb
adc
ds
addr16
mov
dec
adc
icebp
clc
mov
jae
jne
pop
mov
dec
mov
xor
adc
adc
nop
xor
out
lret
xorl
adc
inc
mov
xor
mov
push
pop
rolb
test
push
clc
xlat
sbb
jns
fisubrs
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
nopl
mov
dec
jb
push
push
filds
push
add
jge
test
push
add
inc
dec
dec
push
pop
rcrl
dec
add
adc
mov
push
mov
adc
sbb
test
jne
shrb
pop
jmp
cs
dec
xor
cmp
jle
or
xor
testl
sub
aam
ljmp
cmpl
xor
lods
pop
scas
cmpsl
aaa
jp
icebp
ja
sub
add
jmp
pop
or
jo
gs
lods
add
mov
mov
clc
orl
mov
cmpsb
fisttpl
mov
add
lds
or
mov
or
hlt
cmp
je
mov
mov
and
sbb
inc
add
and
fstl
jmp
jle
in
je
jmp
cmp
add
sbb
dec
jne
inc
popa
inc
ss
sub
int
fucomi
mov
push
or
stos
mov
push
dec
inc
push
or
mov
push
in
lea
sbb
mov
cmpl
push
fwait
sub
bndstx
jbe
mov
fiaddl
ss
cmpsl
push
mov
push
cmp
aas
pop
je
addr16
mov
mov
jp
decb
ja
outsl
adc
jg
adc
sbb
xor
rolb
jb
cltd
jo
jle
jae
es
or
movsbl
dec
xor
cmp
jle
add
sub
pop
aaa
int
in
add
fisttpl
decl
adc
mov
mov
cmpb
ja
jb
pop
sahf
out
add
add
call
out
mov
pop
rcll
xor
stos
cmp
push
fs
adc
incl
cmp
pop
dec
inc
xlat
or
xchg
pop
or
mov
inc
into
jmp
dec
or
lods
cmp
lcall
addb
mov
mov
aas
mov
int3
stos
sub
mov
popa
xor
and
mov
jne
aaa
push
or
clc
inc
mov
cmp
or
pop
add
in
outsb
inc
cltd
xlat
andb
out
jmp
adc
jecxz
cld
mov
sbb
pop
mov
and
or
adc
outsl
popa
shl
or
nop
adc
jle
pop
hlt
popf
jle
sbb
fisubrl
sub
or
ss
inc
or
and
adc
lcall
add
xchg
pushl
sahf
jecxz
xchg
ficomps
xchg
xor
xor
mov
mov
xchg
add
mov
add
mov
mov
or
jo
adc
cltd
lret
push
xor
iret
lods
pop
sahf
adc
inc
cmp
sahf
adc
push
push
mov
faddl
push
cmp
cmp
aaa
inc
push
inc
sub
xchg
gs
mov
xchg
icebp
lahf
out
sbb
fwait
aam
xchg
outsl
or
adc
rolb
pop
fildl
call
inc
adc
jbe
cmp
or
cmpsb
repnz
movl
mov
mov
je
or
jge
stos
push
xchg
jnp
xchg
aaa
or
jns
iret
stc
push
sbb
les
fstps
fwait
push
out
mov
clc
fisttpll
inc
jnp
das
sub
cmp
cmp
or
sub
fidivrs
and
inc
ja
mov
scas
in
jmp
pop
jmp
cmp
or
jmp
adc
push
sbb
dec
push
push
pop
sbb
inc
inc
ljmp
loopne
mov
jp
sti
push
clc
push
js
jno
pushl
jge
add
call
mov
loopne
add
adc
sbb
sbb
dec
xchg
fisttpl
add
mov
and
pop
adc
mov
mov
jbe
add
cmp
fs
jbe
fnstcw
inc
xor
dec
inc
jmp
cmp
sbb
nop
aaa
xor
inc
fwait
or
push
call
fsubs
imul
cmp
pushf
sbb
mov
pushf
daa
mov
push
mov
sbb
inc
inc
ja
popf
inc
pop
pop
cs
out
sbb
inc
mov
add
push
inc
insb
imul
add
add
imul
fimuls
je
push
imul
loop
pop
push
gs
inc
insb
popa
mov
jae
add
xchg
or
inc
imul
xchg
add
bound
ja
push
outsl
test
nopl
adc
les
push
dec
outsl
sbb
sub
rcrb
push
mov
insb
jns
mov
jno
xchg
xchg
shll
insb
and
ss
push
mov
out
insl
je
or
jb
or
cmpsl
or
mov
push
dec
imul
daa
sbb
out
les
clc
rcrl
faddl
or
dec
sarb
mov
test
js
add
jecxz
pushf
enter
out
aaa
sbb
dec
dec
jle
hlt
cs
out
fisttpl
fimull
jns
mov
jae
pop
jbe
fnstenv
pop
cmpsb
outsb
pop
inc
jne
pusha
outsl
mov
dec
cs
loope
fadd
adc
inc
jbe
dec
or
push
push
push
dec
cmpsl
fsubs
jbe
push
push
sahf
mov
adc
divl
sbb
pop
sbb
dec
mov
mov
and
jo
inc
inc
jb
dec
dec
lcall
jb
or
sbb
mov
scas
mov
lods
outsb
mov
in
ret
sub
daa
sub
test
or
test
xor
in
pop
in
scas
fsubrl
and
mov
xor
scas
xor
cmp
add
inc
mov
enter
sbb
lods
and
inc
sti
out
mov
inc
cmp
xchg
dec
imul
jl
in
and
je
pushf
push
jb
pushf
stos
add
imul
inc
cs
mov
frstor
fisubrs
mov
ficompl
mov
lret
push
repnz
notb
push
cwtl
nop
jb
or
outsl
adc
sbb
push
mov
jns
adc
ja
and
jg
dec
dec
jl
mov
flds
mov
add
xchg
xor
js
and
and
daa
xchg
out
mov
or
inc
push
scas
mov
pop
push
and
pop
fwait
nop
es
pop
xor
ds
add
and
push
push
mov
push
push
add
push
sbb
cmp
push
add
test
movl
or
inc
test
nop
push
add
ja
or
mull
gs
inc
adc
int3
jne
addl
repnz
ljmp
rcrb
daa
sbb
and
push
push
cmp
fcoms
fcomip
push
inc
test
mov
adc
adc
stos
fucom
pop
xor
cmp
inc
jo
enter
pop
call
xor
inc
loopne
repz
or
sub
pop
push
push
testb
sbb
push
cmp
xorb
push
mov
jbe
pop
sub
enter
scas
pusha
mov
pop
mov
aam
outsl
fcoms
sahf
cmp
pop
pop
pop
pusha
push
adc
mov
pop
pop
xchg
xor
fdiv
mov
sti
stos
fs
xor
aaa
pop
and
pop
add
sub
cmovns
jae
fs
jo
fldl
push
popa
pushl
pushf
jae
push
rclb
sahf
cmpsb
add
scas
cmp
push
inc
jno
outsb
mov
sub
stos
loope
in
push
add
push
adc
xchg
mov
repnz
pop
mov
aas
sarl
cmovs
out
fucom
loope
inc
and
push
mov
fdivrs
int
jge
cld
pop
pop
addr16
pop
dec
enter
mov
ss
bound
arpl
push
loopne
clc
sahf
pcmpgtb
movl
or
scas
lea
ljmp
inc
push
or
push
lods
nop
jns
mov
pop
sub
push
xor
cmp
daa
xchg
sub
push
sbb
dec
enter
inc
insl
push
pushf
ss
xor
pop
lods
outsb
and
imul
in
push
sub
cwtl
push
jl
pushf
pop
sub
je
pop
jnp
testl
insb
sbb
mov
call
je
adc
and
sub
incl
push
add
sub
ds
push
pop
aas
jo
mov
push
aam
pop
je
clc
push
pop
push
jnp
in
imul
or
rorl
ror
fbstp
cmp
push
or
xchg
push
inc
mov
out
fdivr
orl
in
xor
or
xor
xchg
pop
bound
cld
dec
mov
out
cltd
sbb
das
dec
and
adc
sub
jbe
mov
push
repnz
js
mov
xlat
pushf
push
sub
testl
les
out
mov
cmp
cld
jns
andps
repz
movsb
adc
or
sbb
adcl
enter
or
sbbl
sub
sbb
fs
in
out
and
push
sahf
out
in
add
push
shl
push
push
arpl
sahf
out
jg
fwait
test
icebp
lds
inc
or
xchg
sbb
inc
push
fwait
les
inc
pop
loopne
out
jo
out
mov
jns
int
mov
adc
sub
push
fisttps
nop
cmp
daa
add
jne
or
dec
inc
cltd
push
rolb
adc
cmp
in
add
mov
jp
pop
jp
test
das
sub
cld
and
jbe
outsl
push
ss
dec
ss
sbbl
les
or
rcrb
push
add
sub
loop
call
jns
scas
mov
pop
inc
js
fisubrl
loopne
call
imul
sbb
xor
xchg
mov
push
hlt
or
push
addb
push
mov
testl
test
testl
dec
or
jmp
rcll
stos
mov
rorb
mov
xchg
pop
stos
loopne
fcom
sbb
adc
inc
aam
lret
and
aam
int3
inc
or
push
pop
cmp
js
lcall
pop
inc
int
dec
addb
mov
lcall
xor
jno
inc
xor
cmpsb
and
xor
jnp
xor
jb
aam
xor
leave
xchg
addr16
inc
mov
and
dec
mov
mov
mov
imul
push
cmp
fs
jmp
ja
xor
les
cli
stc
clc
push
push
push
push
push
push
jns
sti
bound
fdivrs
repz
repz
out
ds
fdiv
mov
sbb
push
sbb
or
dec
sbb
and
jb
icebp
jne
sub
hlt
cwtl
lods
xchg
pop
imul
pop
add
cmc
ljmp
cmpsl
mov
fisubs
movsb
adc
mov
imul
cwtl
enter
lods
jno
out
rolb
adc
imul
jl
repnz
xor
js
pop
push
pusha
push
push
mov
push
jb
cmpb
inc
inc
mov
push
jl
shl
enter
ljmp
push
push
je
sub
or
add
in
and
and
cs
cmp
jl
push
les
lds
enter
enter
shrl
sahf
lods
lds
mov
pop
mov
mov
test
stos
or
add
jbe
pop
jne
gs
jb
rcrb
pop
and
xchg
sbb
push
push
pop
lock
fs
repnz
sbb
dec
jb
inc
pop
lcall
test
dec
outsb
dec
inc
dec
dec
sbb
jl
add
or
xor
jbe
fdivs
mov
dec
fimuls
adc
xchg
push
mov
or
int
inc
mov
xor
movsb
push
push
sub
mov
dec
pop
push
xorl
jg
inc
fimull
cmpl
jne
push
outsb
mov
add
je
nop
adc
cmpsl
jle
aaa
shlb
adc
xor
mov
addr16
push
jne
cmp
pop
aaa
aas
and
mov
or
dec
xchg
nop
cs
aaa
mov
icebp
ja
lock
add
xor
push
mov
dec
loopne
dec
pop
dec
cmp
xlat
bound
movsb
cmovns
inc
je
cmp
or
in
and
jmp
adc
vunpcklps
pop
adc
pop
or
daa
xor
ret
sub
inc
sub
pop
pop
push
sub
sub
fisttpl
stos
dec
in
or
divl
jmp
sbb
adc
movsl
xchg
mov
cmp
fistpll
stc
mov
stos
add
add
enter
sbb
and
inc
add
jo
sbb
add
ret
or
xlat
pop
jl
add
mov
ret
inc
loop
lock
ja
mov
subps
and
cmp
pop
roll
popf
mov
fistpl
sar
clc
mov
ljmp
and
pop
xlat
rcl
push
jns
and
pop
sbb
lcall
mov
and
mov
pop
movsl
add
push
inc
or
mov
cld
dec
jne
pop
add
push
and
hlt
or
or
sbb
cld
test
into
pusha
lds
enter
rcrb
fstl
test
lea
push
mov
adc
jno
pop
lea
in
add
cmp
fidivs
or
cmp
jb
xchg
popf
or
add
in
fmuls
cvttps2pi
inc
cmp
cmp
dec
and
sahf
outsb
xlat
sub
sub
add
mov
loope
push
nop
add
or
or
add
pop
imul
imul
imul
add
or
je
cmp
imul
sbb
inc
push
pop
stos
mov
sbb
imul
cmp
sub
mov
inc
push
mov
mov
xchg
cmpsl
clc
push
lcall
test
and
sarb
test
cmp
pushf
or
fcmovbe
cmp
inc
adc
test
negl
inc
stos
pop
xor
stc
filds
in
jl
inc
xor
out
rcrl
jne
mov
imul
push
mov
push
mov
sbbb
push
rorl
inc
rcr
nop
jp
mov
mov
dec
cmpb
dec
popf
movsb
fcmovne
shr
inc
xchg
dec
in
push
dec
mov
add
clc
pop
dec
cltd
sahf
aad
pop
push
add
inc
hlt
in
cmp
mov
sub
or
xchg
pop
cwtl
inc
lahf
call
cs
movsl
jl
adc
jmp
or
cld
cwtl
add
push
sbb
or
cmp
xor
pop
push
adc
jl
inc
push
call
pop
xor
xor
jbe
xorb
inc
pop
mov
lock
stos
es
cmp
push
jge
jecxz
xor
cmpsb
jecxz
decl
jp
mov
jne
add
jle
pop
jno
push
add
mov
sub
movsb
add
sbbl
aaa
sub
lcall
jge
es
pop
es
pushf
sub
jge
and
int
shlb
mov
pop
mov
mov
xor
adc
dec
movb
cmpsb
add
repz
xchg
mov
mov
scas
mov
xchg
mov
xchg
and
sbb
lahf
cli
test
pop
sbb
jnp
leave
add
cltd
add
pop
andb
or
jo
or
rcr
adc
mov
ffree
scas
enter
mov
pop
rolb
mov
sub
bound
add
or
das
movsb
ljmp
in
inc
mov
pop
cs
mov
inc
lahf
dec
xchg
adc
or
or
push
sub
push
hlt
gs
mov
orb
fisubl
fdivrp
mov
xor
jae
enter
lahf
mov
add
xlat
xchg
inc
mov
or
jp
dec
rclb
ja
roll
pop
inc
jmp
dec
sbb
mov
or
mov
jbe
sub
cli
inc
lods
inc
mov
pop
add
pop
xor
es
out
pop
jns
in
inc
jmp
jmp
cs
sbb
pusha
push
mov
inc
out
in
jl
add
and
push
add
nop
xchg
or
adc
xor
nop
pop
sbb
or
cs
inc
push
aas
mov
jle
cld
mov
inc
push
lds
lock
test
inc
mov
adc
adc
popa
add
or
add
push
jle
je
mov
lcall
or
or
dec
aad
mov
gs
das
mov
daa
test
subl
hlt
pop
xchg
mov
outsl
lds
cmp
mov
cmp
or
popa
and
aad
test
jne
inc
mov
inc
sub
sti
mov
arpl
js
js
popa
jge
mov
in
xor
xor
lea
lods
xor
pop
add
cs
dec
cld
mov
jmp
ret
sub
push
and
mov
add
sbbl
mov
add
sbb
and
sbb
int3
xchg
push
jp
or
sub
push
mov
outsl
and
add
int3
pusha
fcoml
loopne
xchg
jb
lods
mov
mov
or
cmp
and
ss
cmp
and
pusha
sbb
lock
les
faddl
enter
call
aad
ds
pushf
xchg
mov
jbe
xlat
adc
inc
ss
push
push
or
jg
or
push
or
aad
lods
push
cmp
pop
jo
dec
push
xor
fmul
dec
mov
mov
inc
mov
je
sbb
mov
jg
add
loope
xchg
pop
inc
pop
mov
aas
or
pusha
cmp
add
test
mov
sbb
xor
rcrl
cltd
movsl
xchg
arpl
cmp
add
cmp
xchg
out
jo
int3
adc
pop
adcb
cld
push
xor
cmp
and
mov
mov
or
test
jnp
adc
sub
xchg
idiv
rcrb
daa
aas
sbb
cmp
sahf
je
mov
jo
je
mov
testl
gs
nop
clc
cmp
adcl
adc
add
fsubr
or
push
and
test
mov
jo
rclb
outsb
mov
and
aam
dec
add
cmp
mov
movsb
jnp
push
call
push
mov
cltd
movsb
or
sbb
xor
fdivrl
stos
das
into
mov
js
or
aas
leave
cmp
call
not
rolb
jge
add
inc
je
sqrtps
xor
jg
jg
jae
loop
inc
adc
cmp
incl
adc
push
int3
or
leave
gs
mov
aam
xchg
or
cmp
test
or
pop
push
add
xor
insb
adc
and
cld
sub
push
pop
pop
cmp
stos
or
sub
inc
sbb
shl
loop
adc
jbe
sbb
or
add
mov
adc
inc
icebp
push
ja
push
xchg
mov
dec
aam
lea
pop
mov
mov
jae
push
nop
jb
fcomi
xchg
movsb
pop
pop
leave
loope
das
dec
movsb
imul
or
int
sbb
inc
sahf
add
and
push
les
lret
adc
add
mov
add
incl
lret
aad
loope
lock
sub
add
dec
or
test
cmp
jne
sbb
leave
roll
std
jle
dec
jno
or
push
push
or
inc
sbb
pop
inc
or
hlt
jecxz
clc
outsl
call
je
adc
xlat
call
and
jp
push
int3
jmp
mov
xchg
es
sahf
popf
inc
add
cmp
push
mov
lock
xchg
push
add
shrb
lret
lods
push
xchg
inc
aad
and
xchg
out
rcrl
jbe
dec
jbe
xor
jp
dec
pop
clc
shl
popa
xchg
pop
aas
notl
dec
enter
mov
push
jns
push
jle
xor
sbb
or
test
addb
add
stc
fbstp
dec
dec
mov
sub
jg
dec
mov
adc
popa
cmp
inc
repnz
inc
clc
js
pop
xchg
push
sbb
fiadds
imul
sbb
test
xchg
sbb
add
loopne
sarl
cmpl
js
dec
fwait
je
negl
xchg
fcomip
and
or
cmpb
sub
cmp
inc
jne
fucomp
push
dec
add
pop
scas
in
push
add
or
inc
adc
xchg
cmp
pop
rolb
add
ret
sub
aaa
or
add
mov
jbe
dec
shlb
cmpsl
sub
push
fdivs
mov
pop
clc
and
cmp
test
adc
call
add
mov
sub
mov
and
cli
pushl
pop
pop
sar
mov
shl
sbb
jg
sub
shl
cmp
je
mov
lcall
mov
cmp
test
es
push
mov
mov
into
out
orb
mov
nop
mov
loop
mov
jae
cli
or
je
hlt
fistl
inc
stos
adc
btr
cmp
jl
shlb
inc
adc
jmp
neg
dec
mov
dec
inc
cli
notb
add
int3
sub
cmp
xchg
test
je
sbb
sbbb
inc
cli
pop
ja
and
bt
jb
ja
mov
movsb
inc
mov
pop
and
push
inc
cmp
jne
inc
decl
jne
les
xchg
dec
sbb
and
jo
add
ret
sbb
pusha
out
mov
push
push
sbb
mov
rorb
pop
insl
xor
icebp
in
push
inc
outsb
cmpsl
lock
test
add
test
add
loop
popa
ret
rolb
cmp
push
les
fcompl
outsb
imul
pusha
mov
aad
sub
or
sbb
in
es
mov
sbb
sub
push
popa
in
sbb
or
and
cmpsb
pushl
js
push
in
jne
out
or
jns
pop
mov
add
pop
loopne
and
sub
popf
push
xor
pop
add
or
and
xchg
adc
xchg
push
lcall
popf
mov
stos
xchg
dec
adc
pop
inc
pop
icebp
popl
adc
sbb
jne
popa
mov
in
inc
es
inc
sbb
je
gs
push
loopne
test
jmp
push
push
adc
ret
mov
data16
lds
pop
fxch
mov
lahf
clc
cltd
push
xchg
mov
or
mov
add
mov
leave
push
inc
movl
adc
mov
mov
add
and
push
xor
add
pop
cmpl
mov
mov
xchg
jle
cli
jne
pop
scas
add
jp
push
aad
or
movb
mov
dec
loope
mov
imul
dec
in
or
xor
lock
cmp
dec
or
mov
adc
add
add
shl
or
add
in
cmp
and
in
adc
out
test
pop
and
ds
movsl
aaa
and
je
gs
jne
add
into
dec
sbb
dec
add
outsb
repz
or
dec
mov
sbb
pop
add
xchg
cmp
dec
adc
das
mov
out
mov
shll
and
add
cmp
mov
inc
in
mov
lea
sub
shl
dec
inc
push
inc
not
or
xchg
pop
ret
jg
fwait
cmp
xchg
xor
movsb
repnz
and
in
ja
pandn
mov
lret
and
pop
shr
sub
orl
mov
and
lahf
jns
and
fistps
xor
sub
hlt
jo
popf
xor
andl
add
dec
inc
sub
dec
or
fdivs
inc
cmp
jnp
call
sqrtps
fsubl
mov
cmp
sbb
fs
fmuls
ret
sbb
lahf
adc
fucom
xchg
xor
pop
loopne
mov
clc
repnz
mov
filds
in
pop
pop
enter
clc
inc
or
pop
and
repz
loopne
dec
je
pop
add
mov
clc
pop
gs
add
or
and
xor
adc
cmc
push
adc
cmpsb
sub
cmp
jne,pt
shrb
test
mov
ljmp
movsb
and
xchg
movsl
outsw
fstpt
mov
nop
sub
sub
cmp
testb
aaa
inc
call
mov
push
mov
ja
and
in
fs
push
loope
adc
push
sbb
inc
dec
jne
add
cmp
out
pop
inc
hlt
arpl
or
pop
insl
adcb
cmp
xchg
cld
leave
push
fdivl
mov
mov
adc
sti
scas
into
or
aaa
sbb
call
or
scas
mov
pop
and
xlat
call
pop
push
mov
in
push
push
shrl
fnstenv
xchg
mov
sysret
push
mov
jmp
sub
jb
dec
je
jmp
jb
pop
ret
add
cmp
push
imul
fadds
aad
pop
test
jp
jo
dec
pusha
mov
psubusb
bound
lcall
xchg
fistpll
mov
xchg
dec
clc
icebp
lock
testl
push
js
or
cmpsl
rcrb
xor
loopne
popa
push
sub
rcl
and
popa
add
addb
adc
sub
push
lret
xor
cld
fdiv
pop
ficompl
mov
add
pop
pop
adc
add
loopne
js
pop
inc
pop
test
inc
push
dec
dec
xchg
rorl
adc
xchg
jo
adc
mov
daa
add
dec
clc
rcrl
xchg
repz
and
rcrb
js
mov
insl
sbb
jl
add
adc
in
sarb
add
lret
sbb
or
and
mov
sbb
mov
in
popa
dec
outsb
leave
jecxz
addr16
mov
jo
or
xor
dec
cmp
cmp
xchg
lock
lock
pop
in
pop
cmp
clc
push
in
pop
xorl
sarl
or
push
and
mov
in
in
pop
fdivl
aas
dec
rorb
test
and
push
mov
inc
iret
xchg
ret
lea
dec
pop
jp
mov
lock
xor
cmpb
cmpsl
mov
fwait
cld
adc
push
xchg
stos
and
aad
xchg
sub
push
sbb
clc
and
cmp
sub
adc
lock
inc
or
fnsetpm(287
or
stos
outsl
xchg
mov
mov
sbb
or
int
or
mov
add
mov
loopne
add
push
popf
stos
popa
ret
adc
sbb
data16
les
and
dec
xor
dec
xchg
or
lea
mov
push
mov
push
push
inc
fs
push
lret
push
sbb
and
leave
insl
in
fwait
pop
call
stos
lcall
outsb
mov
lds
pop
sbb
ret
xchg
fs
cmc
pop
and
mov
loopne
add
jno
lahf
xchg
loopne
dec
jno
or
push
lret
rcll
clc
inc
and
stos
and
adc
dec
cld
xor
cmpsb
mov
clc
fcoml
leave
mov
add
jo
aas
repnz
pop
arpl
movsl
push
jp
mov
and
add
sub
pop
clc
dec
cmp
mov
cltd
mulb
xchg
cmp
pop
mov
test
xadd
sub
arpl
push
mov
lods
jecxz
add
jb
pop
adc
push
push
rorl
cli
out
cmp
dec
mov
or
pop
mov
mov
push
or
movups
xchg
cs
lret
sub
pop
cmp
in
xlat
aam
aaa
rcrb
and
out
mov
loopne
push
lahf
inc
adcb
jge
rolb
nop
fs
sub
jmp
lcall
sub
lea
scas
sti
test
push
push
xchg
or
out
pop
and
test
jns
test
xlat
adc
push
out
pop
call
gs
dec
push
jns
imul
mov
bound
dec
push
add
pop
gs
and
push
pusha
in
push
sbbl
sahf
les
lock
lds
sbb
jns
clc
dec
clc
sub
inc
adc
jp
mov
add
push
mov
daa
loop
push
faddp
cli
repnz
sub
hlt
scas
pop
data16
mov
das
push
xor
cmp
js
adcw
scas
leave
out
imul
inc
push
add
pushf
shlb
adc
mov
aaa
addl
sti
movsb
outsb
adc
jge
into
inc
and
sbb
mov
push
addr16
scas
push
in
addr16
cwtl
push
add
std
cmpsl
xor
sbb
addr16
dec
inc
push
sbb
cmp
fimuls
mov
mov
lret
adc
enter
std
mov
or
add
int
in
repnz
sbb
sub
leave
dec
lcall
lcall
jecxz
add
insl
dec
int3
push
loopne
pop
inc
push
inc
enter
push
lds
iret
testb
cmp
inc
enter
mov
cmp
jne
testb
orb
sbb
rcrb
mov
movl
sub
lcall
faddl
adc
xchg
scas
inc
or
adc
sub
inc
test
cs
cmp
adc
mov
adcb
xor
push
add
pop
sub
das
cmp
sbb
sbb
sub
jb
jmp
dec
mov
out
pop
push
aaa
cwtl
into
pop
mov
mov
bound
in
and
sub
fcom
pop
ror
and
and
sub
movsl
cmp
sbb
insb
xchg
fildl
mov
dec
adc
movsl
xor
roll
push
subb
jbe
xchg
scas
pop
sub
xchg
adc
test
stos
test
adc
inc
adc
shrb
inc
adc
or
insl
lea
fstl
or
cmp
inc
pop
lock
inc
pop
cld
cli
push
lds
dec
sbb
mov
xchg
cs
add
mov
loope
cmp
adc
cmp
ds
cltd
testb
pop
sub
xor
je
or
div
jg
mov
jmp
mov
ret
pop
adc
in
pusha
xchg
lea
in
rorl
inc
sbb
adc
or
inc
add
add
outsw
pop
mov
mov
mov
jle
aam
adc
cmp
sbb
sub
adc
aas
fimull
add
push
mov
repnz
cmpsb
pop
dec
faddp
add
mov
or
sbb
les
rcll
cmpps
push
imull
fs
pusha
leave
mov
test
ss
and
sar
add
add
push
adc
inc
sbb
jg
lock
testl
lea
push
seto
ret
jns
push
ljmp
cmp
loope
jl
rep
lcall
mov
sarl
add
jl
xorl
loopne
add
inc
hlt
shr
out
mov
push
mov
insb
or
dec
in
adc
dec
jg
xchg
test
pop
jl
and
mov
lahf
xchg
cmp
jne
mov
or
or
mov
es
inc
dec
inc
jge
sbb
jle
xor
lret
add
ficompl
xor
mov
pusha
hlt
jl
andl
adc
inc
jl
lea
sbb
dec
adcl
dec
imul
nop
xor
lcall
loope
jb
inc
shll
insl
pop
sub
clc
lret
or
call
js
xchg
inc
push
sbb
add
jle
push
jo
addb
dec
out
call
ss
mov
pop
push
mov
jne
or
fmull
fidivrl
mov
call
ja
adc
outsl
inc
ja
fldl
and
insl
ret
jno
xchg
iret
jmp
dec
sub
fwait
ljmp
into
mov
mov
pusha
xchg
mov
pop
movsb
cmpl
sub
or
pop
jmp
jl
and
ret
or
and
pop
mov
pop
lea
jne
shl
cmpsl
out
cmpsl
icebp
cmp
orb
pop
lea
mov
mov
mov
imul
xchg
sub
fwait
mov
or
scas
orb
call
xor
sbb
add
adc
imul
cwtl
mov
iret
xor
inc
or
bound
jle
mov
out
and
inc
dec
aas
clc
jecxz
mov
stos
push
lret
xor
loope
mov
cwtl
push
pusha
and
xlat
sub
out
inc
jb
ret
xlat
xchg
das
test
cmp
pop
cs
fsubrs
add
sub
inc
dec
pop
jbe
rcrl
sbb
popf
sbb
xor
push
adcb
pop
cltd
adc
popa
rclb
or
icebp
or
repz
pusha
or
add
add
jbe
or
jecxz
push
xchg
rcrb
add
call
push
jb
xor
cmp
add
jbe
inc
cmpsb
jmp
add
testb
vminsd
lret
stc
popa
fs
push
pop
sbb
mov
mov
mov
xchg
jge
rolb
ret
inc
push
add
sub
jb
add
and
dec
rcrl
adc
sbb
fldenv
sub
out
mov
inc
das
and
clc
bound
sub
imul
ja
cli
orl
pop
or
adc
orb
cmp
popa
push
cmp
enter
out
stos
aad
pusha
dec
mov
in
sub
and
jg
cmovo
or
fcomps
test
outsb
mov
data16
outsb
and
fisubl
popf
es
add
xchg
sbbl
push
push
test
lock
mov
nop
icebp
arpl
add
lods
test
push
movq
and
shll
xchg
pop
cmpsl
insb
sbb
dec
cmp
adc
jo
pop
inc
jecxz
jmp
das
fs
stos
sarl
jge
fs
push
imul
cs
in
aam
mov
fs
faddl
rorb
or
stc
ss
or
leave
outsb
mov
adc
dec
or
aam
aam
jnp
push
fwait
les
int3
and
cmpl
icebp
or
stos
shll
sbb
adc
add
jg
outsl
mov
dec
or
adc
add
sub
inc
outsb
push
inc
xor
xchg
ret
pop
mov
dec
mov
jno
sbb
imul
test
inc
sub
mov
add
addr16
mov
or
lock
sbb
mov
add
sbb
add
cmpsl
push
jo
pop
call
pop
sub
rcrb
addr16
fbld
sbb
lods
dec
or
mov
sbb
pop
pop
out
scas
and
or
or
data16
sub
ja
mov
and
aam
xchg
lcall
pop
add
loope
cmp
or
testl
sbb
sti
je
push
aaa
icebp
xchg
jbe
rcrb
mov
inc
cli
pusha
enter
fcmove
int3
mov
daa
or
js
shlb
mov
xchg
xor
lahf
inc
or
ljmp
insb
cmp
out
and
push
add
adc
cmp
jle
or
pusha
and
es
test
test
andb
shlb
insb
push
xchg
orb
push
jl
mov
cmc
or
add
xor
out
jns
sub
inc
mov
in
push
rclb
inc
push
inc
and
gs
dec
add
push
push
xchg
andl
adc
in
js
pop
shlb
xchg
push
adc
dec
clc
js
addr16
inc
mov
shll
dec
xor
scas
or
ja
lds
push
mov
rcr
movb
mov
dec
xor
scas
pusha
sbb
inc
add
or
lods
rcr
daa
das
sub
push
or
add
sbb
aam
idivl
lods
sbb
sbb
add
add
sub
adc
sar
shrl
push
push
jb
jo
imul
inc
jns
test
imul
mov
and
add
jmp
scas
ret
cmpsl
lods
or
adc
push
push
les
pop
or
or
inc
lock
imul
push
or
movsb
mov
fidivrs
mov
jne,pn
mov
mov
or
out
mov
lea
sub
push
inc
sbb
nop
mov
and
adc
lret
pop
test
rcrb
pop
test
inc
and
xchg
inc
and
test
add
rolb
pop
push
mov
int3
sub
pop
popf
sub
fisubs
mov
xchg
or
fisttpl
pusha
fisttps
xor
cmp
rclb
lds
pop
dec
add
cmp
scas
rolb
mov
icebp
aaa
inc
xchg
js
bound
push
jge
orl
xor
mull
mov
js
in
jl
ds
push
add
push
add
pop
add
pcmpgtd
and
push
rorl
stc
cs
and
jl
mov
mov
outsl
pop
icebp
push
push
cld
enter
xchg
pop
mov
or
leave
clc
outsl
mov
dec
add
xchg
jp
fs
clc
xor
jbe
jae
pop
rcrb
dec
aaa
cmp
sbb
xchg
jle
inc
push
es
imul
adc
cmpl
xchg
mov
in
popa
in
mov
adc
pop
ret
add
rcll
push
dec
insl
pop
pop
fwait
cli
xor
jmp
aaa
nop
pop
inc
cmp
jl
xchg
adcl
in
jle
add
jno
incb
jno
jmp
addr16
cmp
dec
fld
jg,pt
push
inc
and
jg
add
jl
sub
adc
push
lret
cmp
push
pop
xchg
icebp
adc
fs
sbbb
xor
xchg
lock
or
push
fcomps
imul
adc
adc
xor
fisubs
cmpb
xchg
adcb
add
dec
je
dec
xchg
add
push
mov
add
mov
scas
add
pop
shl
pusha
shrb
pop
jo
cmpsb
xchg
mov
add
xor
imul
addb
sbb
sbb
pop
add
fmuls
ja
mov
data16
sub
js
shlb
es
mov
push
jl
adc
test
negl
push
dec
adc
xchg
cmp
dec
loopne
lret
push
jo
push
inc
adc
push
lock
or
inc
adc
push
bound
pop
sbb
mov
add
leave
test
adc
ds
fnstcw
sahf
dec
aad
ffreep
push
js
adc
pusha
sub
shlb
jne
testb
add
dec
hlt
aaa
jne
inc
ss
nop
inc
pop
js
add
dec
sub
xor
xor
dec
adc
addr16
push
sub
inc
lret
rorb
mov
fcmovbe
ljmp
adc
mov
imul
and
pop
ss
cmp
les
insb
fiaddl
mov
cmp
xchg
add
add
insb
and
cwtl
cmp
enter
cmp
jne
shl
jo
push
or
jne
add
out
add
and
rcrl
loopne
pop
rolb
and
inc
dec
add
mov
test
test
jl
push
test
negb
orb
mov
pushf
in
sbb
testb
and
sbb
clc
arpl
mov
or
xor
and
sub
addr16
es
leave
xor
push
sbb
call
pop
les
nop
cmp
popf
test
test
jo
nop
clc
outsl
jne
add
in
mov
dec
adc
inc
add
je
cmp
cmp
es
dec
jne
and
call
xor
adc
cltd
hlt
clc
ret
fwait
add
xor
xlat
rcrb
or
xor
mov
das
sbb
pushw
push
dec
sub
pop
bound
cmp
xor
loopne
nop
call
push
dec
push
jne
push
je
jne
sub
popa
mov
add
je
add
mov
xor
cmp
sub
ret
ja
cli
xchg
jge
push
jecxz
dec
inc
dec
out
jo
inc
xor
mov
mov
xorb
or
out
xor
sbb
fld
fsts
lret
dec
push
add
dec
add
dec
dec
cld
fsubs
popf
or
jne
pop
addr16
push
jge
dec
xchg
inc
adc
xlat
addr16
adc
lods
xor
into
test
or
mov
jmp
xchg
xchg
pop
ret
and
cmp
mov
push
mov
xchg
loop
cmpb
add
mov
mov
in
jne
and
jmp
lods
int3
insl
sti
adc
xor
jae
cmpl
nop
and
pop
mov
cltd
ss
in
cmp
and
jnp
xchg
cwtl
xchg
insb
mov
scas
stos
and
and
dec
cmpsl
daa
push
pop
sbb
cmp
adc
and
and
adc
mov
ds
sbb
fcomi
in
stc
push
pop
shll
je
mov
inc
push
dec
mov
xchg
push
mov
xor
pop
push
pop
fs
cmp
cmpsb
cmpsl
pop
es
loopne
movsl
mov
jge
pusha
cltd
add
inc
sbb
or
fs
lods
adc
xor
not
and
aaa
or
fdivr
int3
ret
dec
xchg
test
or
lock
add
add
sbb
ret
mov
cwtl
sbb
push
outsw
cmp
js
xchg
or
pop
test
pop
push
js
sbb
popf
mov
and
mov
inc
cld
sub
or
int3
cmp
fcoms
or
fcmovb
rcrb
lcall
push
int
jmp
jo
imul
cmc
mov
dec
jno
add
inc
push
push
das
iret
outsb
aaa
pop
lds
mov
dec
sbb
adc
insb
add
or
pop
pop
js
inc
or
test
pop
pop
xchg
lods
lea
sbb
mov
xor
addr16
adc
adc
movsl
add
in
inc
fsub
sub
imul
sbb
je
in
dec
add
pop
or
jne
in
push
test
inc
pop
jg
xor
subl
sub
adc
dec
cs
add
xchg
ficoml
nop/reserved
xor
inc
cmp
fmuls
les
jno
push
lock
leave
lea
push
jno
out
xlat
and
lods
and
pop
inc
push
adc
imul
adc
fdivrs
rcrb
cltd
lds
pop
push
negb
je
adc
std
sbb
add
das
jns
pop
ss
shrb
push
pushl
inc
xchg
pop
push
mov
data16
jne
fsubl
pop
popf
jne
jp
add
andl
fmuls
jge
jbe
sbb
push
out
in
adc
fwait
add
mov
adc
fcoml
std
push
xor
fisttps
dec
loope
lock
stc
fnsave
in
inc
adc
xor
imul
mov
aaa
inc
mov
mov
jecxz
sbb
push
inc
test
setp
sbbl
sub
fsub
fcomps
and
dec
shl
xchg
dec
adc
fwait
mov
pop
fst
inc
shlb
outsl
or
dec
xchg
xchg
jl
xchg
cmp
mov
and
or
fimull
push
mov
mov
out
or
mov
js
ds
pop
cmp
sbb
sub
hlt
and
ret
lcall
sub
cmp
fists
mov
and
jge
popa
sub
inc
mov
sarb
mov
sbb
push
sub
xchg
in
push
add
dec
dec
pop
and
sub
rcll
sbb
mov
push
xchg
or
fildll
out
je
ljmp
nop
xchg
mov
jns
add
add
sbb
add
xor
enter
or
add
shrb
sbb
sti
rorb
sub
das
lahf
add
and
adc
jbe
xchg
in
fstpl
fldl
call
repz
add
jl
fisubs
inc
jne
jnp
sbb
jg
add
jns
lea
ror
ljmp
addb
add
jo
jbe
movsl
dec
mov
sub
lods
xchg
push
or
das
sbb
cmp
cmp
sub
cmp
xor
popf
and
stos
and
notl
inc
cmp
xchg
sub
push
shrb
ss
lock
clc
lahf
movsbl
mov
push
mov
xchg
push
inc
adc
mov
cmp
mov
mov
ret
movhps
and
cmpsl
jno
sbb
loope
inc
push
mov
add
and
cmp
jne
mov
and
testb
mov
sbb
jno
sbb
xlat
fsubl
repnz
out
pusha
leave
adc
dec
xchg
xchg
and
fistl
inc
arpl
iret
sub
lahf
lret
mov
mov
or
inc
xchg
fldt
dec
std
mov
or
xlat
fldl
aad
lret
mov
add
inc
out
jg
dec
pusha
and
sub
imul
mov
hlt
inc
xor
sarb
ljmp
std
ds
and
cmpb
ljmp
xor
xor
jp
in
inc
imul
and
xchg
std
jne
inc
xchg
cmpb
pop
rorl
mov
repz
fsubs
adc
dec
cmp
sbb
sbbb
lock
xchg
jmp
rcl
adc
popa
adc
pusha
mov
add
sbb
xor
sbb
adc
lret
push
jb
pop
dec
xor
jo
out
js
push
fstpt
dec
adcl
icebp
xor
pop
data16
or
jno
inc
rcrl
call
adc
gs
psllw
add
jne
pushf
fmuls
xchg
in
in
mov
mov
cmp
fnsave
pop
lret
push
stc
movsb
push
pop
in
psubsb
jb
sub
sbb
push
popl
and
popf
mov
or
or
push
rcrb
out
mov
pop
xchg
fimuls
mov
call
cmp
xor
sub
enter
fsts
xchg
call
pop
mov
mov
fistpl
hlt
jns
daa
add
sub
dec
imul
add
pop
jne
mov
adc
pop
sub
add
jo
dec
repz
mov
clc
push
adc
cmp
out
repz
mov
cltd
inc
daa
js
cmp
in
test
movsb
lea
ds
ret
imul
adc
cmp
mov
or
pop
jbe
inc
fisubrl
lcall
js
ret
cmp
xchg
test
sbb
push
loopne
repnz
dec
sub
ja
arpl
add
jmp
nop
jecxz
sbb
push
xchg
push
add
mov
cmc
leave
and
inc
push
sbb
xchg
or
fwait
mov
or
or
jmp
mov
pop
xchg
aam
ret
xor
rolb
sbb
cli
sbb
xlat
jnp
push
ffreep
pop
imul
push
push
aas
insb
jmp
sbb
adc
enter
jecxz
sbb
and
mov
gs
in
outsl
test
push
jge
mov
and
outsb
cltd
inc
lcall
fcompl
mov
cld
lea
addr16
dec
roll
xlat
rcl
add
fcomp
scas
adc
popaw
arpl
aaa
sub
aaa
jbe
pop
lret
inc
dec
sbb
sbb
add
sbb
dec
and
outsl
rcr
and
sub
add
jo
aad
jmp
mov
rorl
jne
mov
sbb
ficoml
sub
sarb
shl
mov
in
add
fisttpll
sbbl
dec
js
or
das
xor
pop
mov
add
je
cmpsl
pushf
imul
icebp
lods
cwtl
out
xchg
and
je
cmp
jmp
adc
popl
jmp
mov
adc
or
dec
pop
lds
lea
xor
das
xchg
test
sbb
sub
je
adc
in
pushl
cs
push
mov
pop
jge
mov
aam
push
fbld
lock
arpl
dec
je
or
pop
in
jecxz
or
sub
shrl
dec
testl
push
jmp
insl
daa
pop
pop
push
movsl
int
outsl
subb
add
lahf
ret
inc
or
sarb
push
movsb
jno
push
sahf
in
orl
inc
or
mov
addb
sub
add
inc
or
adc
ss
push
mov
std
loopne
stos
ret
jmp
lds
push
mov
aaa
test
fimuls
aad
cmp
push
out
or
ret
push
push
push
mov
pop
sbb
dec
idivb
cmpsl
mov
and
push
pop
aaa
mov
sub
sub
gs
aas
and
push
je
push
adc
mov
push
mov
and
push
jb
and
lahf
cmp
in
fs
sahf
and
add
and
test
ja
cmpb
jnp
jae
adc
jg
je
jmp
push
inc
mov
lods
ds
dec
cmpl
push
dec
xchg
cmp
sbb
cltd
adc
push
cld
in
adc
out
sub
or
ja
dec
or
outsl
or
andb
lods
lock
xchg
outsl
push
sbb
loopne
ret
cs
out
jl
ljmp
dec
fcoml
das
jo
mov
and
scas
shll
xchg
xor
cmp
leave
das
pusha
cltd
adcb
push
and
inc
test
mov
dec
ljmp
rorb
fdivrl
jns
jnp
out
push
add
push
and
jns
iret
cmp
inc
dec
pop
push
arpl
jns
out
adcl
mov
jecxz
pop
pop
and
and
pop
and
xchg
add
ret
adc
insb
mov
sarw
insl
das
pop
push
adc
fs
aas
pop
push
mov
dec
shlb
sub
adc
mov
shll
repnz
sbb
or
test
dec
and
and
mov
imulb
cld
mov
xchg
jbe
mov
adc
lret
and
pop
mov
ret
ret
lock
test
popa
scas
push
dec
mov
dec
or
ret
mov
je
mov
and
push
push
and
lret
aad
jae
jb
js
lret
es
inc
mov
cmpsb
push
inc
push
push
test
xchg
mov
push
call
daa
arpl
or
gs
pop
xor
fstps
jg
movsb
add
push
or
testb
mov
ror
pop
dec
rorb
sbbb
or
int
push
mov
mov
inc
inc
call
jmp
in
lock
enter
mov
xchg
pop
push
mov
push
push
and
xchg
cmp
sbb
enter
inc
push
add
or
fisubrl
adc
mov
xchg
ret
lods
lret
mov
add
adcb
pop
or
add
jmp
js
imul
ss
jg
sbb
mov
push
sub
inc
in
sub
pop
xorb
push
cld
pop
add
popl
cli
jl
adc
inc
bound
cld
enter
mov
and
sbb
hlt
mov
cmpsb
out
es
and
push
mov
mov
pop
ret
clc
clc
mov
pop
sbb
cmp
push
movsb
ret
int
cmp
jg
mov
add
inc
int
push
xor
adc
cmp
dec
out
hlt
or
nop
sub
call
xor
cmp
push
orl
xchg
jmp
sub
aas
sbb
xor
inc
and
xchg
inc
test
cmp
and
push
add
pop
cli
push
adc
cwtl
test
fmuls
aaa
push
fsubrl
addr16
jnp
pop
push
jo
test
scas
repnz
je
int3
xor
fs
ss
sbb
movsbl
mov
cli
sbb
mov
cs
sbb
lods
sbb
clc
and
sbb
out
pop
cmp
fwait
xor
jmp
mov
cmpsl
nop
mov
adc
push
daa
popl
mov
ret
push
mov
push
cli
xorl
push
movsl
dec
leave
push
pop
jmp
lret
adc
orb
adc
out
pop
xchg
mov
dec
or
loope
iret
sub
cltd
cwtl
sbb
shr
loopne
lret
lods
inc
or
inc
adc
cmp
dec
es
or
xor
test
mov
and
and
fwait
xor
mov
bswap
out
or
jle,pt
jl
or
sbb
sbb
cltd
dec
or
dec
negl
and
and
mulb
ret
mov
push
add
shll
xor
add
add
fnsave
xchg
fwait
xor
push
psrld
mov
add
mov
jbe
insb
rclb
and
dec
lds
add
or
push
aaa
or
or
lcall
stos
push
cmpsl
test
dec
inc
enter
xor
xchg
push
adc
push
xchg
dec
xchg
jmp
or
xor
or
and
or
xor
fstl
dec
sti
push
push
pop
js
xchg
in
popa
insl
aas
fcoms
adcb
pop
mov
in
or
or
and
mov
sub
sbb
xchg
xchg
push
inc
xor
lock
jo
xchg
lret
jnp
pop
nop
in
xchg
jb
cs
inc
aaa
xor
cmp
mov
or
jg
rcl
lcall
pop
push
popf
sub
hlt
mov
xchg
sbb
inc
int
jns
or
out
lods
fimull
sub
mov
xor
test
rorb
cmpsl
mov
push
mov
and
add
pop
jns
adc
pop
pop
lods
out
test
xor
xchg
orb
sub
or
mov
lods
adc
cld
test
and
out
adc
dec
pop
jo
jg
push
lods
mov
pop
adc
mov
sbb
jb
sub
sbb
sub
and
movsl
fistpl
shl
sbb
lock
fstpt
enter
add
push
insl
lock
shrb
mov
test
and
xor
aam
push
xor
lock
hlt
xor
pusha
lret
fldl
inc
push
add
aas
or
and
or
adc
and
or
sbbb
sub
push
push
or
test
subb
xlat
pop
aam
fcom
ret
sarb
or
push
stc
fcmovb
fidivrl
fisubrs
mov
hlt
xor
add
xor
in
push
cmp
stos
sbb
push
push
mov
jle
xorl
pop
sbb
xor
add
and
inc
stos
mov
fsubrl
xlat
rcr
outsl
fimuls
mov
add
and
bound
inc
arpl
xlat
in
mov
xor
inc
daa
adc
push
rclb
in
xchg
add
sbb
repz
or
adc
mov
mov
idiv
adc
leave
test
mov
sub
mov
leave
mov
repnz
and
rclb
jb
int
cmp
lods
push
mov
cmp
pop
jno
jl
inc
and
xor
popf
aam
xchg
or
lea
dec
sbb
mov
jg
inc
scas
xchg
je
sti
xchg
loope
push
popa
add
xor
add
ret
call
fistps
inc
mov
push
loope
mov
movsb
xor
xlat
or
dec
jne
movb
mov
movsl
pop
fimull
pop
mov
mov
adc
xor
jne
sti
push
adc
xchg
mov
pusha
push
mov
adc
test
xchg
out
sbb
mov
loopne
mov
or
fwait
loop
insb
movsb
outsl
push
adc
mov
cmp
filds
mov
and
rorb
pop
xlat
movsb
mov
fcoml
push
pop
push
pop
loope
mov
fdivl
mov
mov
push
or
add
sbb
sub
divb
lahf
jg
lea
add
pop
dec
cltd
outsl
sbb
add
xor
loopne
mov
xchg
ret
andb
ret
pop
test
inc
les
loopew
adc
add
mov
je
fcmovnb
or
adc
fisttps
fsubrs
repz
cmp
xchg
loopne
bt
test
imul
jp
lahf
mov
movzwl
xchg
enter
ret
sbb
xchg
subb
adc
adc
outsb
add
rcrb
in
cmp
or
push
roll
pop
inc
xlat
ret
xchg
mov
loopne
mov
arpl
test
inc
outsb
or
and
pop
mov
or
dec
pushw
add
popa
bound
adc
xchg
push
movsb
pusha
addl
lock
xor
mov
outsl
jle
and
ljmp
jne
movsl
loopne
mov
add
pop
adc
call
sbbb
pop
shrb
dec
or
sub
push
push
pusha
push
inc
outsb
js
adc
xchg
adc
push
gs
xchg
shll
call
addl
shrb
mov
inc
jp
mov
lods
cmp
pop
rcrb
jl
jmp
sub
mov
push
ret
cld
push
push
or
addl
test
mov
add
sub
sub
incb
shlb
or
xchg
jl
mov
gs
orb
outsl
jo
pop
sbb
fists
ret
and
fsubl
pop
repnz
daa
pop
arpl
incb
pop
jge
xchg
or
adc
das
xor
inc
popf
pop
pop
mov
cmp
jne
daa
sbb
icebp
ret
shrb
and
jne
dec
sub
mov
pop
jnp
push
push
pop
add
orl
inc
mov
daa
or
in
sbb
mov
hlt
pop
dec
lea
xor
jg
or
test
fnsave
in
sbb
xor
adc
inc
dec
jne
rorb
cmp
cmpsl
jbe
xchg
push
insb
or
inc
shrb
or
jmp
mov
pop
add
cmpsl
mov
adc
jmp
sbb
adc
mov
pop
movsl
pusha
push
cwtl
fdivr
addr16
cmpsb
push
daa
adc
dec
xor
pop
xchg
push
or
mov
sub
xlat
leave
aas
mov
jb
xor
xor
inc
sti
push
dec
jp
push
jmp
test
js
jg
push
dec
cmp
jne
or
insb
gs
dec
imul
xlat
sbb
mov
mov
or
sbb
andb
jmp
or
rolb
aad
inc
icebp
and
and
popf
jb
mov
dec
jmp
xorl
call
aam
add
or
add
cmp
cmpsl
push
adcl
add
popw
cmp
adc
or
add
cld
inc
add
jl
and
movsb
inc
push
or
scas
xchg
jge
pop
dec
lds
push
pop
or
sbb
mov
pop
xlat
adc
pop
jno
or
inc
and
inc
and
mov
jg
dec
or
sbb
pop
movsl
cmpsl
in
aas
or
or
and
test
orl
scas
loope
pop
and
pop
out
cmp
lds
or
adc
aaa
dec
sbb
rcrb
jle
xchg
cmp
xchg
scas
andl
rcrb
lods
mov
xchg
mov
fisttps
je
sbb
add
add
lea
or
pop
clc
popf
and
loope
xchg
sbb
lds
pop
es
cmp
mov
aas
sbb
push
pop
out
inc
push
adc
mov
sub
insl
and
out
ja
in
adc
cmp
ficoms
sub
add
add
push
dec
inc
mov
sbb
xchg
cmpsl
ss
fcoms
in
dec
clc
mov
or
inc
sub
adc
je
dec
push
out
xchg
sbb
cwtl
addr16
adc
out
mov
xor
and
sub
test
xchg
int3
mov
lods
or
lea
add
mov
rcrb
ror
cmp
aad
jnp
jne
pop
adc
or
xchg
frstor
wrmsr
push
mov
pop
mov
adc
mov
stos
and
in
shll
dec
jo
jecxz
aam
adc
adc
iret
cld
or
ficoms
call
btc
add
xor
ret
xor
dec
adc
or
in
call
add
push
orl
iret
inc
jb
jb
mov
stc
add
add
dec
test
pop
xchg
jl
enter
push
imul
inc
inc
lret
ss
std
add
inc
push
or
rclb
adc
xchg
add
jl
cwtl
sbb
pop
sti
jmp
cmc
xchg
push
jg
jnp
push
mov
add
add
lret
incl
push
mov
inc
ds
aas
scas
dec
mov
push
ret
inc
shlb
xchg
loopne
add
lret
pop
xchg
ret
lret
js
add
adc
or
pop
hlt
add
adc
js
jne
mov
jbe
jl
pop
jg
xchg
pop
mov
and
call
push
mov
add
pop
push
sbb
fwait
add
inc
adc
cs
test
add
movsb
mov
fcomp
cmp
push
out
or
adc
xchg
fcompl
jne
test
out
and
and
mov
jmp
sbb
sub
xchg
ret
loopne
arpl
sbb
push
push
outsb
sbb
or
ja
sbb
mov
dec
xor
loope
push
sbb
loopne
aaa
jo
in
call
bound
mov
shrl
and
iret
clc
rorl
cld
pop
cmpsl
idivl
add
or
daa
aam
dec
repnz
inc
sub
xchg
mov
sub
inc
sub
sub
or
sbb
popf
lods
push
and
sub
pop
pop
pop
dec
jb
daa
or
sub
pop
jp
or
mov
adcl
add
and
aad
ret
loopne
mov
add
pop
imul
adc
sti
dec
dec
out
cmpsb
ja
add
inc
shll
imul
rolb
fdiv
mov
xor
das
in
dec
jne,pt
mov
dec
sbb
test
or
xor
pop
pop
sbb
aas
add
cwtl
jb
dec
movsl
lea
add
mov
mov
and
lret
in
loope
jb
les
int3
adc
jo
mov
pop
fisubl
and
js
jbe
dec
stos
push
lods
aam
adc
pop
jmp
cmpb
fstpt
pop
and
xchg
jae
outsl
addb
and
add
dec
adc
mov
or
lds
sbb
es
xor
ret
sub
rorb
rolb
ret
inc
add
mov
orb
sub
inc
pop
in
cld
xor
jp
out
add
rcrl
adc
inc
test
inc
mov
mov
lret
jae
int3
enter
bound
adc
jp
jecxz
call
xchg
lock
les
xor
mov
cmp
pop
mov
inc
cmp
sbb
or
cmp
cmp
nop
stos
pusha
pop
xor
and
add
ja
ja
dec
push
sbb
dec
loopne
negb
leave
push
leave
sbb
lock
xor
leave
out
sbb
xchg
nop
xchg
adc
inc
dec
pop
dec
gs
sub
and
movl
fbld
mov
add
adc
test
nop
les
int3
popa
insb
dec
data16
scas
push
push
scas
arpl
scas
xor
xor
push
imul
lahf
cmc
popf
cmc
push
sub
aam
fidivs
test
ret
xor
or
enter
xor
xor
jmp
dec
clc
jne
inc
jne
jno
mov
cli
dec
mov
mov
mov
dec
repnz
xor
or
add
pop
scas
and
cmp
pop
xor
in
dec
fidivl
test
icebp
mov
rolb
pop
les
call
pop
inc
aam
ss
fists
or
xor
sub
ret
ja
xchg
add
mov
inc
xchg
or
or
stos
and
xchg
pop
icebp
or
lock
jbe
jbe
jg
pop
hlt
lea
mov
add
js
inc
inc
pop
or
add
dec
hlt
lods
call
mov
pop
add
pop
testl
inc
mov
pop
mov
pop
add
or
mov
jmp
mov
push
add
rcr
push
push
push
pop
dec
mov
arpl
push
mov
add
or
jmp
push
xor
adc
jge
popa
stc
pop
sub
mov
aaa
cwtl
cmp
je
xchg
repnz
fists
shrb
arpl
shrl
push
push
mov
lock
mov
dec
bound
and
or
push
test
dec
mov
insl
sub
ss
jo
pusha
psubd
cmp
sbb
adc
div
ror
jo
sbb
jge
or
loope
pop
sub
les
stos
mov
and
stos
lea
aas
shlb
dec
sub
xor
inc
dec
and
in
inc
outsl
add
rclb
and
push
int3
add
lret
cltd
dec
lret
orb
dec
hlt
or
test
inc
cwtl
sub
ret
inc
iret
loopne
add
and
test
xchg
and
aad
jb
pusha
pop
int3
in
movsb
xor
mov
in
jb
je
in
in
jbe
js
in
in
jp
jl
in
in
jle
pusha
in
in
popa
bound
in
in
gs
in
imul
in
outsb
outsl
push
in
in
push
push
push
push
in
in
push
push
push
pop
in
in
pop
pop
pop
pop
in
in
pop
pop
pop
inc
in
in
inc
inc
inc
inc
in
in
inc
inc
inc
dec
in
in
dec
dec
dec
dec
in
in
dec
dec
dec
xor
in
in
xor
xor
in
in
ss
cmp
in
in
cmp
cmp
in
in
ds
and
in
in
and
and
in
in
es
sub
out
sub
scas
nop
xchg
sbb
jne
mov
les
mov
fs
outsl
xchg
rorb
dec
outsl
xor
add
iret
psubusw
mov
or
inc
mov
mov
shrb
xor
xchg
addr16
outsl
outsb
je
cld
push
stc
push
imul
jo
xor
adc
add
inc
sti
cmpsb
and
mov
xchg
orl
les
xchg
or
jbe
xor
xlat
fcomp
cmp
lahf
push
je
insb
mov
xor
jae
enter
call
mov
adc
adc
gs
clc
insb
loopne
push
imul
sbb
jbe
mov
adc
lahf
jae
xchg
cs
shr
cltd
jbe
push
outsb
int
cmp
pop
std
mov
outsl
sbb
push
inc
popa
jae
add
in
fstl
add
inc
jl
enter
or
rorb
shr
imull
fiaddl
adc
cli
insl
inc
insb
push
push
push
push
fisubs
jo
je
push
inc
jns
sbb
mov
shlb
nop
and
out
ret
add
sbb
adc
xchg
aas
mov
loopne
imul
ja
rolb
sbb
aaa
inc
jb
fimull
mul
and
pusha
shlb
add
pop
ret
mov
and
sbb
or
repnz
outsl
cs
inc
imul
lock
es
adc
xor
mov
push
cmp
dec
pop
xor
ljmp
es
out
aad
mov
pop
sub
xor
sbb
mov
out
adc
test
jecxz
lahf
xchg
inc
imul
cmpsl
inc
xchg
pop
and
cld
cltd
mov
add
aam
sbb
leave
and
and
js
adc
xchg
jmp
jmp
inc
scas
loopne
js
and
lret
add
jne
pop
adc
in
insl
sub
lock
sub
push
mov
std
loope
iret
clc
in
inc
push
add
jmp
adc
addl
loopne
push
out
jnp
push
imul
sub
dec
fs
clc
out
lret
sub
cmp
repnz
add
mov
and
mov
and
sahf
mov
test
xchg
lock
add
jnp
pop
mov
lahf
pop
sbb
lds
adc
mov
pop
xchg
pop
ret
in
addl
xchg
pop
shll
xor
outsl
cmp
xor
cmp
adc
aas
call
repz
add
loope
and
xor
call
repnz
sbb
fwait
jmp
test
push
cmp
das
xchg
jl
add
add
hlt
push
inc
push
in
movsl
fdiv
xchg
cmc
add
pop
insb
inc
dec
cmp
pusha
pop
push
or
cmc
pop
daa
fdiv
lcall
push
adc
push
inc
popa
sbb
mov
jmp
pop
sbb
movsb
mov
bound
imul
mov
ds
aas
sub
int3
push
or
repnz
test
add
inc
shll
cmp
enter
addb
push
into
cmpsb
add
add
fiadds
addr16
jae
outsl
test
push
dec
aas
add
or
sub
cmpb
outsb
outsb
adc
inc
outsb
adc
dec
mov
mov
add
js
add
push
inc
arpl
inc
add
stos
lods
imul
ja
outsl
ja
pop
dec
add
adc
push
cld
push
in
cmpl
cmp
idivl
dec
mov
es
sub
ds
incl
rcr
pushf
push
xchg
ret
sbb
popf
es
pop
cli
fsubr
mov
rep
add
push
or
jg
cmp
mov
adc
mov
and
scas
test
rorb
fstl
ds
mov
sbb
push
add
fadd
jnp
pop
cld
cs
sub
enter
inc
dec
out
mov
add
sysret
fstpt
adc
rorb
xor
cmp
fidivs
dec
adc
fdivrl
pop
push
loope
rol
or
sbb
xchg
cwtl
nop
and
nop
nop
push
mov
out
add
sub
inc
mov
cmp
fadds
inc
mov
add
out
push
pop
xor
fwait
popa
ret
push
cmpsl
in
sbb
fisubs
inc
js
fcmovu
fisttpl
push
sbb
jge
lock
sub
mov
inc
cs
clc
sbb
pusha
sbb
push
and
add
adcl
jb
out
pop
or
sub
cwtl
fistl
pushf
lods
lahf
aas
or
push
in
sahf
ss
je
dec
insl
dec
lea
mov
cld
and
dec
mov
je
inc
push
push
or
gs
bound
adc
mov
int3
pop
mov
and
repnz
cld
push
inc
sub
inc
inc
lahf
div
rcrb
push
and
pop
mov
mov
and
and
and
mov
cmpsl
push
mov
sub
push
jg
and
lods
inc
lock
jnp
inc
pusha
sub
push
or
rcrb
cmp
pop
and
mov
inc
cmp
jg
push
mov
hlt
cs
das
or
jno
insl
mov
sbb
or
loopne
sbb
rorl
jo
and
push
fcomps
inc
jg
push
pusha
inc
push
pop
dec
xor
lcall
js
cmpsl
push
incl
push
push
mov
lock
and
xchg
pop
test
pop
sbb
sbb
pop
repz
rclb
or
dec
hlt
dec
arpl
pop
fdivl
stos
call
pop
push
in
enter
push
in
push
sub
push
pop
mov
insb
push
inc
lock
inc
in
dec
pop
or
or
or
mov
cs
push
pusha
add
ja
dec
pop
sbb
xchg
cmp
ret
jge
pop
push
and
push
enter
dec
faddl
nop
fildll
loopne
jno
sub
dec
popa
outsb
nop
mov
mov
ret
rol
xor
inc
dec
jne
daa
jo
clc
add
dec
and
add
test
jmp
sub
pusha
rorb
jg
add
dec
mov
iret
add
push
lcall
pop
mov
inc
imul
mov
add
je
sbb
jne
popl
in
ret
xchg
fdivs
je
lods
roll
inc
cmp
xor
push
jbe
loope
out
cmpb
sbb
cltd
js
sub
push
cmp
daa
inc
adc
lret
dec
repnz
xchg
inc
loope
pop
fs
adc
xor
ja
push
jo
pop
lds
shl
enter
add
cmp
xchg
jns
and
push
not
repz
push
les
and
sbb
add
sub
xchg
xchg
sbb
push
cli
jmp
add
or
orb
loop
sbb
jnp
fidivs
fs
mov
or
xlat
push
repnz
cmp
dec
and
orb
imul
pop
adc
incl
jle
xchg
dec
jae
aad
xlat
imul
push
cmpsl
int
or
push
aas
jecxz
jle
mov
inc
adc
fadds
xchg
xchg
mov
push
adc
pop
and
popl
inc
jmp
fadds
xor
test
fdivr
repz
xor
in
in
pusha
rcrb
xlat
mov
mov
and
adc
fistl
push
cmpsl
or
addb
mov
xor
enter
arpl
jbe
ret
scas
arpl
jb
outsl
outsb
inc
inc
add
pop
dec
insb
fildll
sub
cmpsl
xchg
mov
mov
push
jne
jo
gs
push
rorl
gs
insb
pop
ss
xchg
inc
push
imul
sarb
dec
imul
insb
outsl
ja
mov
dec
lahf
jne
or
inc
lock
arpl
imul
adc
loopne
ja
or
mov
or
jns
add
xor
insl
inc
repnz
mov
push
mov
outsl
loopne
mov
into
das
cmovae
shrb
pop
xor
mov
jo
icebp
and
xor
inc
das
inc
je
inc
push
xchg
dec
jbe
inc
mov
das
insb
or
jg
xchg
xchg
pop
push
gs
or
imul
pop
daa
inc
mov
imul
cmp
sahf
fildl
or
or
fsts
daa
and
and
pop
stos
and
jg
ffreep
xor
repz
adc
xor
aaa
pop
nop
fwait
jmp
outsl
inc
push
dec
sarl
outsb
jne
stc
push
mov
adc
or
lahf
cmp
mov
arpl
cmp
in
add
imul
sub
outsl
das
cmp
daa
outsb
inc
rclb
mov
or
pop
sbb
out
push
pop
sub
push
mov
mov
ss
pop
xor
rol
or
inc
loopne
add
jns
int
pop
pop
scas
loope
xchg
inc
dec
push
dec
pop
inc
dec
inc
push
push
inc
push
add
inc
std
and
sti
inc
inc
push
dec
push
xor
inc
dec
dec
push
divb
movsb
arpl
inc
inc
push
adc
notb
dec
inc
push
dec
dec
push
mov
pop
sti
sbb
shlb
dec
and
aaa
and
out
inc
inc
xor
xor
adc
push
inc
and
inc
xor
inc
dec
xchg
mov
push
push
dec
dec
push
dec
mov
xor
push
das
sbb
repnz
das
inc
inc
dec
push
out
in
mov
dec
inc
dec
or
push
aaa
jg
xchg
adc
push
push
push
dec
push
nop
cmpsl
xchg
dec
inc
dec
push
mov
fidivrl
nopl
push
decl
push
mov
mov
pop
add
loope
ss
mov
push
into
pop
cwtl
add
inc
add
mov
pop
mov
dec
or
sbbb
rcrl
adc
add
or
pop
mov
les
push
sbb
in
cmp
sbb
out
repz
or
sbb
push
stos
imul
or
jle
push
push
or
jmp
add
fadds
rdtsc
adc
scas
rol
jne
or
imul
add
pusha
xchg
mov
dec
pusha
lds
test
mov
stos
mov
or
add
insb
mov
jmp
iret
add
dec
or
or
add
dec
and
mov
push
fdivrs
ja
xchg
int3
push
lods
insl
das
pop
dec
aam
sbb
ss
jo
lret
cli
dec
sahf
sbb
mov
jne
js
adc
xchg
fists
popa
in
mov
or
mov
cld
scas
rcll
fcoms
sub
push
cli
das
mov
dec
lea
pusha
xor
jne
lret
sub
testb
sar
jmp
xchg
or
adc
cmp
sub
mov
pop
es
pop
in
mov
mov
es
xchg
out
inc
adc
or
xor
sbb
insl
dec
out
and
mov
cmp
dec
sbb
enter
xor
mov
rol
jmp
out
and
adc
mov
je
mov
or
clc
loopne
aaa
cmp
adc
lea
incb
xor
inc
mov
call
cmp
mov
pushl
jmp
jo
mov
rclb
fiaddl
push
fdivr
sahf
cmpsb
clc
flds
jecxz
push
push
push
or
dec
out
outsb
pop
inc
fildl
or
jmp
sbbl
push
cmp
mov
inc
imul
jmp
cltd
pushf
sbb
pop
gs
aam
mov
icebp
ret
inc
fisubrl
test
xchg
fcmovu
movsb
xor
mov
nop
push
inc
mov
sub
add
cmp
sbb
and
into
aam
xchg
subl
insb
sub
add
sub
mov
dec
mov
mov
push
xor
movsb
fildll
xor
neg
ss
inc
push
das
fdivp
fimull
fdivrl
mov
mov
sahf
xorl
add
push
pop
or
and
and
xor
push
mov
bound
ret
pop
sbb
dec
sbb
rcll
jl
dec
loopne
pusha
add
movb
xchg
sub
push
ss
pop
enter
aad
pop
icebp
enter
ds
loopne
add
xor
icebp
dec
test
mov
rolb
fbld
adc
shl
loopne
dec
and
xchg
mov
loope
adc
aaa
sbb
repnz
jne
fistpll
test
jne
int3
mov
sbb
mov
inc
mov
lods
adc
rcr
in
movsl
lret
insb
push
or
xor
in
xchg
cmp
fs
adc
ret
movsb
or
cmp
mov
das
sbb
in
leave
lock
or
nop
xchg
jl
pop
sbb
shlb
or
in
xchg
pushf
in
add
add
jno
sarl
adc
and
nop
hlt
div
in
enter
repz
mov
push
sub
adc
js
aas
inc
jb
cmpsl
hlt
in
sbb
push
out
mov
push
mov
inc
ds
cmp
in
dec
pop
mov
dec
inc
ret
push
sbb
xor
cmp
addl
cmc
mov
adc
addb
mov
das
cmp
pop
loope
ss
cs
addb
add
jmp
shlb
jmp
je
push
adc
scas
jmp
add
hlt
iret
or
lock
ror
cmc
in
movsb
dec
and
aas
ret
inc
andl
adc
ret
or
xor
jmp
nop
pop
and
test
cmp
incl
mov
jo
jle
push
loopne
es
pop
addl
dec
gs
mov
jl
dec
in
sbb
movl
fsubs
mov
mov
push
jno
cmp
sub
in
adc
push
adc
cmp
mov
sub
push
add
pushf
jge
jnp
adc
out
fs
shrl
divl
sbb
push
or
push
add
or
pop
or
or
rorl
or
xchg
push
sub
push
push
iret
lods
nop
xor
mov
or
rorb
scas
add
push
or
in
and
mov
xor
clc
pop
sbb
fs
xor
sbb
iret
rcll
or
sub
mov
ss
xchg
and
adc
lods
insb
sbbb
js
mov
daa
sbb
sub
pop
xchg
pop
or
lahf
fildl
add
mov
movsl
mov
fistpl
test
sbb
jge
push
insl
push
pop
ficompl
rep
or
imul
push
sbb
test
lret
inc
xlat
fbld
fnstenv
mov
add
or
sbb
addl
ja
sbb
sbb
sub
mov
jns
lods
xchg
xchg
mov
mov
push
emms
pusha
hlt
lea
inc
aaa
push
enter
in
shll
test
inc
sarb
movsl
xchg
scas
push
mov
aaa
adc
xlat
push
cmp
pop
and
mov
cmp
inc
inc
loopne
xchg
lea
lods
inc
rolb
sbb
cli
les
mov
xchg
cmp
add
dec
xchg
mov
xor
cltd
mov
adc
inc
jl,pt
push
add
popa
dec
push
daa
imul
adc
add
aam
add
mov
dec
sti
icebp
test
cmp
scas
aas
xchg
sti
dec
scas
jecxz
mov
into
dec
pop
add
mov
jae
push
xchg
add
mov
and
pop
decl
mov
cmp
je
mov
inc
mov
jae
aad
movsb
jne
push
pop
mov
out
and
aas
popa
and
es
in
push
cmp
xor
add
arpl
and
orb
in
clc
int3
test
lea
add
imul
pop
or
shll
sbb
mov
je
sub
adc
fs
mov
dec
fwait
cmpl
and
aad
lods
push
dec
xor
in
add
add
or
or
psrld
xor
push
xor
or
and
fisttpll
inc
sbb
jae
push
adc
adc
data16
data16
lods
pop
orb
mov
lods
jnp
in
pusha
and
sbb
cmp
movsl
pop
inc
pop
jb
xor
cmc
adc
mulb
mov
pop
ds
mov
pushf
or
mov
xchg
pop
cld
iret
js
ret
push
das
mov
jg
dec
out
push
ret
nop
mov
cmp
xchg
xchg
incb
push
nop
xchg
fs
or
inc
rolb
incb
sub
rcrl
xchg
cvtps2pd
xchg
push
xor
adc
adc
xchg
fisubs
inc
insl
lods
adc
xor
aaa
arpl
xor
cld
cmovb
addr16
add
in
int3
cmovs
sub
adc
in
add
push
add
cwtl
test
cmp
stos
enter
pop
pop
inc
mov
fwait
pop
push
in
imul
in
loope
add
and
mov
mov
mov
sub
fcomps
in
push
int
cmp
out
pop
mov
mov
or
fimull
push
fbstp
arpl
pop
imul
scas
notb
add
dec
pop
xchg
mov
push
or
mov
int
in
pop
mov
loopne
dec
divl
shl
and
adc
clc
add
fsubl
imul
xchg
mov
rcl
cmpl
mov
lds
ficompl
adc
jo
enter
out
add
mov
test
push
stc
pop
sbb
nop
add
stos
add
rcll
ret
push
xchg
int
in
push
and
mov
test
push
iret
shll
addb
add
jge
inc
xchg
or
daa
mov
into
es
cmpsl
sbb
and
xchg
and
push
push
sub
out
fdiv
dec
jmp
jns
pop
or
jl
sbb
outsl
pop
xchg
sub
cmp
push
sub
inc
das
inc
aad
add
push
mov
push
loopne
movb
mov
movsl
adc
stos
gs
or
inc
pusha
movsb
adc
push
movsl
or
pop
call
aas
or
punpckhdq
adc
mov
ss
sub
and
mov
repz
lea
add
mov
mov
sub
js
or
add
cmc
push
ljmp
inc
add
push
pop
rcrl
jl
dec
adc
aas
loopne
loope
sarb
mov
shll
dec
lea
mov
pop
pop
ds
clc
push
push
add
jne
dec
cmp
lock
insl
jge
adc
adc
adc
sbb
push
inc
add
and
and
inc
pop
ja
add
jne
in
ja
sbb
cmc
dec
mov
and
lods
stos
or
and
insb
mov
enter
mov
dec
jns
jmp
xor
sub
std
fisttpl
jecxz
mov
mov
jmp
pop
dec
clc
movw
add
cli
adc
cld
or
inc
jae
add
fld1
cld
int
push
and
fdivrs
jl
cmp
cmp
mov
rolb
jne
flds
push
jo
add
fistps
movzwl
lea
inc
dec
jle
push
cmp
fwait
negb
push
addr16
ret
andb
loopne
sahf
add
adc
sahf
xchg
and
sbb
cmp
push
ja
adc
inc
xor
jmp
cwtl
dec
sub
jl
push
icebp
movsb
repnz
das
mov
lea
or
add
push
clc
add
sbb
fimull
mov
pop
pop
cld
dec
loope
or
push
dec
pop
sub
cmp
pop
push
push
add
clc
xchg
fildl
jbe
xor
daa
pop
push
jne
and
jmp
es
mov
test
or
sahf
lret
push
rcl
and
pop
fmull
jne
add
in
jae
rorb
xchg
mov
hlt
je
add
insb
es
or
or
ret
dec
and
inc
clc
ss
push
push
dec
sub
and
rcl
sti
dec
add
lds
or
mov
pop
dec
pop
imul
shrl
jl
sbb
adc
add
dec
and
icebp
sbb
test
or
push
cs
adc
andl
push
jmp
or
sub
add
or
cmp
pushf
in
adcl
or
movsb
lock
jns
hlt
cld
dec
or
loop
mov
sub
pushf
mov
add
out
inc
std
inc
sub
out
addb
pop
addl
adc
jge
jo
shrl
add
and
int3
enter
and
pop
cld
push
mov
add
mov
and
jae
sbb
leave
or
cmp
lock
push
sub
or
or
mov
xor
cmpb
add
outsb
sbb
aam
add
dec
loopne
or
mov
cmp
lock
mov
rcrl
adc
cmp
jg
test
jle
cmp
jl
mov
aaa
enter
jg
bound
pop
clc
jle
inc
cmp
inc
pop
sbb
ret
jmp
add
push
pop
jae
and
movsb
inc
or
mov
test
or
shrb
lods
pop
inc
and
push
push
pop
adc
cmc
cmpsb
fistl
push
push
add
rcrb
pop
fcomp
mov
or
scas
into
dec
xor
or
in
mov
lods
mov
push
pop
sub
or
ds
adc
rolb
out
stc
xor
and
xchg
loopne
test
rcrl
lods
mov
in
push
lret
inc
push
jg
or
jl
push
cmp
loope
adc
mov
call
mov
int3
jle
cs
dec
jne
cmp
flds
lds
xor
cli
or
aam
cmpsl
or
or
loopne
push
repnz
add
sub
shll
sub
adc
out
es
sbb
dec
xor
push
xchg
stos
sub
lods
mov
push
mov
sub
pushf
sti
push
or
nop
pop
cwtl
enter
inc
mov
insl
mov
mov
imul
fcompl
add
push
mov
xor
test
in
mov
sarb
add
push
push
mov
sub
mov
rcr
xor
mov
push
mov
pop
stos
or
sbb
js
jae
jl
xor
mov
sarb
push
sub
aas
scas
ss
ret
pop
or
test
xchg
jne
into
in
mov
dec
push
inc
dec
xchg
pop
insb
loop
rclb
jmp
xor
ret
jl
cmp
jl
ret
and
pop
cs
sbb
sbb
test
test
mov
sbb
sub
sub
or
or
mov
jmp
sti
sub
movsb
ljmp
or
mov
xchg
add
insl
in
je
dec
or
jle
lock
jmp
pop
outsb
inc
mov
and
test
jae
jmp
adc
out
or
imulw
sub
fisubrl
or
inc
and
add
adc
mov
push
push
sub
adc
ljmp
mov
mov
out
andl
cli
add
cld
hlt
out
adc
negb
add
or
ljmp
icebp
test
outsb
adc
cwtl
dec
test
repnz
aaa
loopne
inc
push
push
add
push
or
hlt
cmp
fbstp
inc
xchg
push
xchg
das
cmp
push
and
cs
pop
jo
pop
jecxz
push
add
sbb
dec
incl
lcall
clc
clc
hlt
or
inc
dec
hlt
inc
sbb
ret
push
jg
mov
jecxz
mov
rolb
add
xchg
leave
incl
dec
sahf
push
in
push
sbb
adc
xlat
pop
cmpb
add
loope
adc
imul
push
in
hlt
int3
mov
call
add
fistl
push
xchg
out
popf
call
test
cmpsl
pmulhuw
mov
shl
shlb
or
xor
int3
das
push
fcomps
inc
push
dec
push
add
lock
xchg
add
or
xor
mov
sub
mov
mov
or
lods
pop
push
pusha
andb
push
insb
mov
fsubrl
jbe
cmpsl
mov
mov
mov
mov
js
dec
mov
test
movsl
shlb
adc
sub
adc
loopne
out
push
fcoml
nop
scas
lock
orl
jo
mov
mov
aaa
movb
mov
xorl
js
cmp
js
mov
dec
aaa
pop
mov
jb
mov
sbb
shll
add
lahf
sbb
adc
bound
mov
es
nop
negl
xor
inc
push
jo
fmull
add
pop
cld
out
inc
leave
or
test
xchg
jmp
sbb
xor
adc
adc
dec
cmp
loope
out
mov
lret
je
sub
dec
fwait
in
jne
sarl
int3
push
loop
gs
adc
test
clc
mov
lret
xchg
push
push
hlt
mov
addr16
jmp
jmp
sbb
or
jns
fcomps
push
cmp
inc
add
push
adc
rolb
or
clc
fimuls
sarb
ret
enter
pushf
adc
jno
pop
push
shll
dec
sbb
pop
adc
push
adc
js
imul
outsl
inc
mov
pop
popl
adc
cs
add
lods
call
mov
shr
xor
pop
pop
jb
adc
outsl
jb
lret
jae
dec
adc
int3
gs
fdivrl
nop
cmp
jl
enter
push
inc
sbb
pop
rcll
jae
push
aad
and
shll
leave
xchg
or
mov
or
push
fstpl
scas
push
inc
add
inc
ds
push
insb
clc
mov
or
cmp
xchg
add
hlt
mov
orl
and
inc
movsl
and
adc
inc
or
push
int
fwait
sbb
ja
mov
pop
imul
bound
fbld
ret
mov
call
scas
test
inc
inc
dec
jne
imul
cmp
sbb
pop
outsl
enter
push
popf
xor
icebp
push
mov
mov
sbb
scas
icebp
add
push
je
inc
push
push
fimull
pop
pop
mov
das
push
pop
sbb
mov
push
sbb
cmpsl
and
icebp
adc
adcb
xchg
xor
adc
or
clc
mov
das
jno
jne
add
pop
inc
ret
insb
loopne
pop
loopne
jne
jbe
add
or
out
stos
inc
je
inc
add
imul
xchg
enter
arpl
and
mov
leave
mov
add
dec
fldl
shlb
adc
jg
pop
cs
imul
mov
or
fsub
xchg
mov
sub
clc
push
pop
add
xor
cmpl
std
roll
mov
int3
cmp
xchg
xchg
or
jge
outsl
push
or
and
and
lds
push
inc
mov
push
push
adc
movsb
xchg
or
add
push
addl
out
lods
xlat
pop
jne
mov
cli
add
call
or
pop
adc
in
and
enter
mov
or
adc
sbb
in
xor
pusha
and
das
nop
ficomps
test
addr16
dec
stos
les
outsb
and
adc
or
mov
push
sub
mov
sbb
insl
cmp
test
sbb
and
fcomps
ja
jo
sarb
push
out
mov
ret
add
sarl
mov
and
xlat
mov
fwait
cmp
daa
adc
ds
in
pop
cmp
pop
sbb
clc
mov
jmp
ja
pop
pushf
xor
push
aaa
or
in
adc
jno
jnp
jo
jp
int
sbb
inc
sbb
or
or
cmp
dec
insb
scas
mov
add
fwait
js
inc
mov
bound
aam
mov
popa
pushf
ret
mov
je
arpl
xchg
in
inc
icebp
add
xchg
sbb
loop
xorb
lds
push
inc
sub
int
and
pavgw
pop
rolb
lock
xor
jo,pn
mov
jmp
les
mov
push
jle
sbb
mov
adc
jl
push
xchg
inc
add
das
push
inc
ja
dec
cmp
fisubs
mov
mov
icebp
mov
or
xchg
adc
test
add
xchg
arpl
dec
xchg
ljmp
ja
sub
and
jp
js
push
pop
aaa
mov
mov
cmp
dec
or
xchg
xor
inc
cs
and
adc
pushl
sub
loop
pop
add
fs
sub
scas
add
or
inc
lcall
and
and
lock
jle
shl
push
and
fmull
je
sub
mov
lds
xchg
dec
aad
fwait
lock
mov
mov
mov
jmp
scas
lods
fucomi
push
or
pop
es
icebp
int3
add
cltd
aas
jg
cmp
adc
xor
and
jmp
cs
xor
fcoms
sbb
insb
dec
sub
in
or
insl
or
xchg
cltd
or
call
js
jbe
pop
lock
cmp
shrb
adc
test
push
arpl
dec
repz
adc
and
enter
cmp
iret
adc
sti
add
lods
sub
mov
ret
sbb
mov
mov
jmp
push
push
sti
mov
lods
mov
fcoml
call
adc
pop
jmp
push
sub
fs
ja
mov
fdivr
imul
popa
or
inc
jl
test
mov
dec
cmp
push
mov
jno
out
and
addl
mov
xor
xor
daa
inc
jae
nop
sbb
dec
or
and
or
test
scas
add
and
sbb
nop
jmp
outsl
ljmp
in
adc
pop
cmp
enter
sbb
push
arpl
stc
in
adc
scas
xchg
mov
ss
test
pop
or
mov
ret
jmp
cmp
or
inc
and
inc
adc
and
aam
es
push
movsl
cltd
cmp
adcb
add
test
shlb
dec
inc
je
movsl
mov
mov
fadd
repnz
or
push
and
movsl
dec
sbb
mov
fs
fs
cltd
and
dec
sub
enter
mov
or
aas
push
adc
adc
adc
xor
and
mov
pop
ret
dec
fdivrs
fidivrs
jecxz
scas
int
addl
push
data16
orl
insl
clc
push
sar
lods
push
dec
dec
hlt
shll
cmp
inc
cli
popa
add
inc
fadd
jl
inc
imul
test
les
lcall
push
in
ret
push
cmp
mov
mov
lods
je
dec
rorb
fimull
adc
test
clc
mov
lea
mov
cmp
repz
pop
mov
pop
mov
lret
cld
add
and
ret
jl
mov
movsb
outsl
jnp
andl
mov
lret
sub
jnp
jle
mov
jge
mov
inc
cmp
je
add
mov
shll
je
aaa
sbb
sub
add
aaa
xchg
cmp
imul
dec
mov
scas
je
cmpb
pop
int3
sbb
test
sbb
pushf
aas
iret
lds
inc
js
mov
cmp
xor
mov
jmp
push
jo
icebp
push
pop
fs
xchg
push
xor
paddusw
pusha
mov
adc
incl
and
jo
je
mov
jbe
daa
pop
test
adc
ja
inc
lcall
adc
sbb
xchg
call
jmp
xor
cmp
jle
sub
xor
mov
lret
mov
and
pusha
inc
adc
cmp
xchg
sub
or
mov
or
add
fs
nop
sbb
aam
inc
pop
adc
adc
push
mov
sbb
sbb
sahf
add
mov
out
ret
xchg
push
sbb
pop
sbb
insl
xlat
add
jne
shll
xor
push
sbb
mov
enter
rcrb
mov
ja
sub
add
push
mov
loopne
ljmp
leave
stos
or
in
loopne
shrl
mov
movaps
mov
addr16
dec
rcr
push
je
sub
hlt
push
addb
loopne,pt
fsubs
loopne
les
cmp
mov
movsb
xchg
sub
fimuls
sbb
adc
jecxz
repnz
hlt
mov
and
mov
fcomps
xor
int
or
popa
ret
push
pop
and
jb
push
cmp
pop
enter
pop
sub
lock
xlat
pushf
mov
subb
fbld
fistpll
push
mov
mov
adc
out
lods
adc
push
mov
into
inc
xor
xchg
insl
mov
dec
mov
fildl
fwait
xor
adc
lret
and
lret
pop
add
enter
pop
jl
jl
in
mov
lock
sbb
and
or
pop
inc
push
movl
dec
or
cmc
xchg
inc
pop
mov
test
pop
push
sub
orl
push
jl
sub
add
mov
xor
xor
sbb
mov
xor
mov
mov
fwait
xor
mov
dec
pop
sbb
dec
pop
adc
in
pop
sub
gs
jle
adc
sub
sub
sbb
pop
or
mov
dec
movsb
ffree
xchg
xor
mov
add
xlat
pop
call
add
adc
sub
mov
enter
out
xor
add
cmpsl
rorb
bound
cs
stc
cmpsl
call
pop
mov
js
les
std
sub
pusha
punpckhdq
xor
pop
and
aas
cltd
in
adc
inc
mov
iret
mov
pop
push
jns
sub
xorb
inc
pop
shl
xchg
in
mov
ret
cs
pop
mov
xor
adc
pop
pop
test
aaa
xor
aas
dec
xchg
mov
je
or
jmp
stos
pop
jmp
scas
pop
gs
dec
adc
int3
push
dec
add
pop
sbb
push
loope
xchg
cs
xor
add
xchg
add
mov
or
push
xlat
cmp
addb
test
inc
and
lea
dec
adc
sbb
or
cmpsl
cmp
je
mov
or
or
and
insb
adc
or
lea
xlat
or
jns
sti
fsubrs
loop
sahf
lds
or
xchg
dec
movsb
lock
add
stc
jp
mov
pop
cltd
inc
push
jecxz
dec
lock
dec
xor
data16
test
mov
xor
lock
cmp
aam
je
fcmovb
ljmp
es
pusha
shlb
jne
movl
iret
ror
loopne
dec
pop
or
cmp
jne
mov
push
add
add
or
les
fistpll
mov
pop
in
int3
mov
sbb
and
inc
fsubp
sbb
sub
mov
lock
jae
movsl
add
sbb
js
sub
test
jge
insb
mov
pop
and
jmp
push
mov
in
repnz
xchg
out
jae
and
sub
inc
adc
add
arpl
out
or
or
and
cmp
mov
aas
inc
mov
inc
mov
faddl
cld
xor
ds
dec
movl
inc
mov
sub
push
or
insb
lahf
xor
sbb
fucomp
mov
dec
mov
out
push
fmull
dec
add
pop
adcl
insl
inc
fisttpl
lods
ss
fistpl
int3
test
cmpsl
push
or
jae
push
sub
lods
add
push
mov
mov
mov
cmc
das
sbb
lea
cmpsl
hlt
rcrb
fdivrl
cld
pusha
stos
add
in
nop
add
je
scas
sub
fcoml
cmp
and
sbb
ja
mov
pop
jo
in
jmp
outsl
rcll
adc
adc
sub
mov
adc
push
imul
or
jno
mov
inc
icebp
sbb
in
jne
lock
mov
inc
push
andb
iret
mov
test
dec
fdivl
jle
inc
xorb
jbe
xchg
test
in
adc
add
aad
cmc
xchg
add
jge
and
orl
mov
xchg
arpl
push
test
fldt
outsl
jg
rorb
sbb
mov
mov
xor
fiaddl
out
push
sbb
in
jb
data16
mov
dec
mov
nop
mov
mov
push
pop
pusha
pop
mov
inc
and
je
add
add
sbb
cld
repnz
in
and
cmp
cmp
mov
xor
jo
orps
loopne
dec
mov
xor
sbb
rorl
inc
fcoms
std
xor
and
xor
faddl
jns
xchg
lock
pop
mov
mov
adc
inc
xchg
dec
test
or
movsb
stc
or
push
int3
shll
xchg
push
jecxz
cltd
loope
test
loop
inc
lock
mov
stc
xchg
and
add
into
nop
cmp
pop
iret
cmpsl
mov
push
xlat
insl
dec
js
ret
inc
mov
lret
xor
xchg
push
cs
add
mov
push
adcb
sbb
xlat
gs
xchg
or
imul
out
ret
mov
dec
rorb
sub
shlb
ret
lods
bswap
mov
mov
loopne
lods
loopne
ds
xchg
lock
pop
and
insl
pop
mov
addr16
fldcw
mov
hlt
mov
cmp
out
and
movsb
mov
inc
out
add
add
out
and
sbb
push
les
cmpsb
psubsb
iret
jg
mov
mov
sub
lock
inc
push
cmp
lock
es
dec
mov
imul
jge
sub
repnz
out
mov
cmp
dec
ret
movsl
and
popa
add
rorl
inc
mov
or
imul
add
mov
inc
inc
push
add
ret
in
insl
or
mov
insb
sbb
loopne
xor
aad
sub
and
and
imul
cltd
inc
stos
ffree
mov
pop
xchg
or
fidivrs
int3
add
xchg
mov
out
cmp
loope
and
mov
jbe
xchg
inc
aam
sbb
es
sbbb
sti
je
or
or
mov
or
or
adcl
adc
mov
push
mov
aad
pop
lods
ret
jge
aas
jmp
fwait
cmp
push
insb
sbb
xor
nop
mov
daa
add
movsb
sahf
dec
and
lock
or
ljmp
jo
mov
jae
ss
test
out
es
xor
orb
cld
cld
or
pop
xor
ja
add
sarb
xor
leave
inc
les
sbb
fmul
hlt
push
pop
push
sbbl
push
mov
push
pushf
or
xor
rolb
lea
int
scas
push
push
or
xor
mov
cmpsb
and
fstpl
test
push
arpl
ret
lcall
and
mov
and
or
add
ljmp
movzwl
push
dec
sub
scas
shrl
and
xlat
jle
loop
and
lds
push
ret
mov
repz
dec
pop
pusha
jmp
popa
adc
data16
clc
xchg
adc
xor
fs
arpl
mov
ds
es
push
sub
pop
leave
pushf
jne
arpl
add
inc
rcll
call
aam
inc
call
bound
fnstsw
sub
outsl
imul
push
pop
and
inc
subb
pop
mov
cmpsb
adc
and
mov
jge
addb
and
mov
icebp
adc
rclb
pop
mov
add
jno
and
and
inc
sbb
pop
xor
fadds
jnp
xorb
push
sbb
push
scas
je
mov
inc
and
and
or
sbb
sbb
push
sub
sub
mov
cmc
jno
movsb
leave
sub
add
fistpll
add
clc
sbb
add
sbb
hlt
xorl
cwtl
sub
pop
mov
adc
movl
pop
shlb
popl
or
enter
sbb
ja
xor
pop
sbb
rol
push
lahf
add
jmp
jo
jp
pop
cmpsl
inc
in
movb
mov
lahf
or
sbb
add
movb
sub
lods
pop
cld
ret
pop
mov
xor
inc
lea
cmp
fwait
mov
sub
ja
dec
jecxz
xor
and
sbb
jmp
ljmp
and
jb
cmpl
mov
sbb
or
sbb
add
dec
dec
or
test
push
in
mov
aam
adc
data16
ja
jae
add
test
repnz
mov
out
sub
and
pop
das
cmpsb
das
cs
icebp
lods
aaa
iret
jne
sarb
pop
imul
jl
scas
mov
rorl
or
mov
sbb
ss
mov
es
mov
dec
test
or
cmp
jmp
pop
adc
dec
add
loop
xor
xor
dec
pop
inc
cmpsb
pop
sub
addr16
fisubrs
adc
jbe
xchg
or
daa
push
add
adc
push
xor
push
xchg
cs
mov
xor
mov
jns
xchg
adc
mov
cmp
fsubrs
pop
outsb
arpl
push
mov
sub
sbb
idivb
sub
sub
xchg
mov
daa
push
push
leave
adc
or
outsb
or
ljmp
mov
lret
lret
jp
cwtl
adc
sbb
clc
push
xor
fistpl
inc
in
lock
pop
mov
jl
xor
fldt
fsts
test
dec
lods
lret
mov
inc
pop
and
outsb
roll
movb
loopne,pn
mov
popa
call
fadds
inc
lret
repnz
ret
lea
in
filds
xchg
push
add
mov
leave
inc
testb
adc
mov
lea
fldl
push
or
scas
orb
stos
adc
sub
call
lea
daa
insb
stos
clc
cmpsl
push
mov
fs
inc
pop
xor
adc
cwtl
in
or
in
inc
jo
test
dec
std
retw
sub
outsl
sbb
push
cmp
out
cmc
pusha
stos
push
push
lds
popf
push
rolb
pop
test
sbb
xchg
insl
popa
inc
daa
cmc
loopne
into
ffreep
filds
pop
jne
xor
or
imul
add
inc
nop
cs
dec
sbb
ret
orl
mov
cmpb
push
dec
or
pop
mov
lahf
cmpsl
insl
adc
shlb
ret
roll
shr
or
ss
addb
mov
inc
pusha
jo
xchg
mov
inc
sbb
jno
lahf
sbb
arpl
les
adc
mov
xor
inc
dec
enter
mov
dec
push
add
nop
outsl
pop
and
pop
pop
and
or
addb
mov
neg
cs
mov
push
dec
or
pop
inc
jl
add
add
inc
in
or
and
sub
jne
pop
popf
push
decb
inc
push
cmp
xchg
aam
add
loope
adc
fwait
ret
or
adc
pop
pop
mov
mov
test
xchg
fadd
ret
lcall
dec
sbb
lock
adcb
pop
xlat
fwait
les
mov
cli
cmp
les
in
repz
mov
mov
mov
shll
add
in
sub
sbb
xchg
test
and
adc
mov
in
xor
and
mov
es
hlt
mov
mov
int3
std
das
pop
cmp
inc
pop
or
add
movsb
push
dec
cltd
pop
and
mov
call
xchg
sahf
dec
int3
in
or
pop
shrb
fimull
shlb
mov
es
in
stc
cmp
dec
and
sbb
imul
test
mov
dec
aas
in
clc
add
or
pop
jbe
mov
rclb
pop
dec
and
sub
dec
aad
fs
and
jmp
sbb
jae
mov
and
mov
or
lods
dec
push
call
out
in
add
fcom
mov
inc
pop
sub
dec
mov
fs
rorb
xlat
lret
lds
inc
xor
xchg
push
in
and
push
xor
scas
jae
mov
jp
dec
loopne
jle
xchg
stc
scas
pop
dec
push
int
or
fwait
ret
dec
push
jle
sbb
sbb
cmpsl
ret
fmull
xchg
xchg
sti
dec
cmp
jno
inc
es
or
mov
lods
xchg
clc
sub
das
test
fmuls
inc
roll
push
sbb
adc
pusha
fs
addr16
mov
or
push
jo
cs
pop
push
in
push
pop
mov
cmp
fsubs
add
sahf
jno
iret
sbb
loop
xor
mov
outsl
nop
push
mov
push
sbb
push
jo
xchg
int
out
push
push
sbb
inc
in
inc
fmull
push
jns
ja
or
adc
je
nop
lea
orb
test
adc
jo
ds
popa
mov
jle
adc
mov
lea
adc
add
pop
inc
movsl
xor
fiaddl
mov
mov
jmp
or
mov
push
mov
mov
push
or
inc
adc
out
insb
add
lea
jp
or
push
loop
add
lcall
push
adc
jle
or
mov
movsl
adc
inc
cltd
mov
repnz
mov
lahf
inc
ret
mov
adc
lock
inc
lds
addb
jnp
stc
jge
scas
xchg
push
mov
repnz
dec
mov
ljmp
pop
enter
inc
lea
mov
jnp
and
bound
cwtl
movb
rorl
sbb
cmp
mov
xor
pop
dec
rclb
mov
xor
inc
out
pop
scas
sbb
jecxz
es
lds
rorb
loopne
pushf
dec
mov
cmp
movsb
add
fnstenv
add
cmp
dec
sbb
push
push
fdivl
jbe
sub
jmp
sbb
inc
jmp
ja
std
sub
adc
add
js
add
lcall
jg
push
in
xor
or
sub
lea
test
pop
or
sub
inc
ror
aam
push
fildll
mov
push
sbb
cmp
jae
inc
pop
aam
aaa
arpl
cmp
adc
jo
inc
lods
sub
pushf
xor
pop
fidivrs
or
xchg
rcrb
js
js
outsl
adcl
fmuls
sarl
lock
inc
daa
or
sbb
in
daa
and
rolb
cmp
mov
cld
mov
jbe
mov
push
jns
scas
cltd
adc
or
lock
loope
jle
cmp
outsl
cmp
or
cmp
and
inc
push
xor
testb
push
pusha
in
add
pop
jns
les
push
test
pop
sub
and
jle
add
push
mov
adc
test
data16
xor
xchg
mov
pop
mov
jo
mov
pop
xlat
mov
enter
out
mov
push
test
cmp
mov
cmp
inc
adc
add
push
push
pop
ret
insb
pop
push
out
aam
cmp
push
ss
test
and
mov
xor
cmc
lods
bound
cmpsb
nop
mov
pop
mov
pop
pop
mov
cltd
jg
mov
popf
or
pop
ss
pushf
jmp
dec
adc
adc
inc
pusha
pop
mov
popl
push
lahf
fs
mov
mov
mov
inc
jo
or
pop
mov
repnz
cmp
push
imul
push
movsb
js
adc
jae
sbbb
or
mov
lahf
xor
sub
hlt
mov
push
inc
push
sub
call
push
hlt
clc
add
call
mov
test
jmp
inc
or
sub
jp
movzwl
adc
stc
int3
mov
js
ds
mov
dec
maskmovq
testl
xchg
or
adc
outsl
push
jp
arpl
cmp
sub
addl
test
xor
or
call
out
push
xchg
mov
dec
cmp
push
sbb
xchg
pop
pop
sub
cmp
sbb
stos
pop
sub
ret
ss
jno
mov
mov
mov
das
outsl
inc
xchg
or
fisubs
jo
ret
leave
dec
add
inc
insb
adc
insb
xchg
rorb
addr16
push
adc
xor
mov
lods
push
pop
cmp
adc
inc
scas
aaa
sub
dec
adc
or
mov
pop
cmpsl
mov
or
aas
daa
push
push
fldcw
push
mov
add
mov
mov
mov
mov
xor
adc
mov
movsb
xlat
in
push
mov
adc
pop
and
push
and
scas
mov
sbb
push
fildll
cmp
orl
push
pop
or
test
lods
clc
sbb
sub
jne
mov
daa
inc
cmp
ja
mov
rorb
subb
subb
xorl
das
pop
bound
aas
and
push
and
or
push
inc
pop
mov
mov
ret
adc
mov
lahf
je
add
sbb
adc
test
fdivl
add
cmp
jne
push
push
adc
scas
xchg
loop
mov
mov
and
pop
mov
dec
inc
std
shr
inc
and
adc
stc
inc
shlb
movsb
loopnew
dec
aam
push
popa
add
sbb
jle
xchg
add
je
bound
lret
pop
or
or
xor
push
pusha
mov
mov
mov
in
dec
inc
add
add
push
lea
and
cli
adc
push
stc
call
mov
repz
jg
xchg
cmc
or
inc
out
dec
or
inc
cmp
nop
xor
inc
call
sub
ja
or
mov
ret
loopne
clc
push
xor
dec
xor
xchg
pop
pop
pop
outsb
hlt
movsb
ret
cmp
aaa
pop
adc
mov
pop
not
bound
hlt
inc
fsubr
clc
sbb
sub
lods
fdivrl
les
popa
cmp
scas
jae
pusha
xor
xor
lcall
roll
gs
inc
xchg
push
push
sahf
out
inc
jp
imul
pop
nop
int3
cwtl
sbb
pop
inc
push
cmp
adc
in
addb
fnsave
adc
mov
mov
ss
dec
inc
sub
test
and
insb
pop
inc
or
push
or
in
shll
pop
mov
adc
pop
mov
pushf
push
pop
add
and
add
adc
mov
stc
rcrl
mov
inc
fiadds
iret
in
mov
sub
loopne
scas
adc
in
rclb
sub
or
sahf
and
push
sbb
sbb
pop
or
repz
mull
sbb
ljmp
push
cmp
jg
vmwrite
or
push
mov
dec
push
lock
inc
lock
push
add
adc
adc
xchg
ljmp
xlat
cmp
inc
or
in
mov
pop
push
dec
cmp
ljmp
push
or
mov
gs
ror
stc
sub
in
sbb
inc
sub
pusha
and
clts
push
push
mov
stos
inc
pop
mov
push
ja
or
les
jo
ror
mov
in
mov
inc
loop
lret
xchg
cmp
rol
arpl
aad
lods
or
addl
daa
subl
pop
lock
or
test
mov
add
shrb
insb
inc
add
mov
jecxz
jbe
out
es
outsl
pop
pop
hlt
and
jb
pop
hlt
daa
mov
test
pmuludq
cs
daa
daa
in
call
and
mov
aaa
loopne
in
jbe
psubusb
shl
in
in
enter
in
in
mov
in
lods
test
dec
pusha
xchg
orb
clc
xor
dec
pop
pop
fcomps
pop
popa
mov
mov
negb
mov
fs
jbe
imul
xor
sub
mov
mov
test
mov
sbb
add
mov
clc
and
out
scas
repnz
pop
movb
adc
cmp
popa
cld
adc
shl
outsb
or
outsl
jb
sarl
lock
push
pop
and
mov
loop
dec
pop
pop
push
jmp
sub
or
sub
jb
je
pop
pop
mov
jae
dec
mov
or
in
lret
sbb
mov
packsswb
adc
mov
adc
adc
xor
sub
lock
or
es
mov
mov
push
sbb
rcrb
jp
push
lret
adc
mov
add
and
or
push
popa
cmp
mov
adc
pop
cmp
mov
lods
adc
mov
sub
jmp
addr16
xchg
cmpsl
loopne
pop
and
and
xchg
add
pop
dec
jmp
jmp
out
push
push
push
sbb
jno
sub
pop
enter
and
push
jo
or
mov
int3
daa
sbb
dec
enter
dec
xor
jl
or
rorb
add
stc
dec
ret
pop
mov
ss
xchg
mov
dec
or
jge
cmpb
movsl
cmp
mov
pusha
das
adc
lock
in
pop
test
sub
or
std
dec
xor
push
or
insl
cmp
inc
mov
jb
add
xchg
popa
test
pop
or
dec
inc
or
insl
adc
push
sarb
add
push
lea
lea
fcomps
pop
push
pop
loop
ds
jb
push
pop
add
stc
hlt
nop
inc
daa
push
loopne
push
and
dec
push
push
dec
inc
pop
xchg
lret
cmpsl
sub
adc
adc
cmp
cmovno
in
or
hlt
adc
xchg
xchg
xchg
push
adc
adc
adc
push
aam
lret
rcrl
cmpsb
sub
mov
dec
movsl
sbb
pop
outsl
cmc
sub
dec
push
push
or
lcall
test
adc
rclb
andb
cmp
inc
sub
sbb
sbb
ja
outsl
mov
fmuls
in
pop
pop
sbb
pop
mov
es
mov
imul
jne
popf
xor
xorl
jmp
ds
add
adc
sub
daa
call
mov
adc
inc
outsb
jne
cs
popa
jns
add
push
mov
movl
add
bound
daa
or
push
mov
nop
arpl
fs
dec
in
adc
sbb
ret
fmuls
lock
push
inc
push
push
dec
dec
decb
jb
dec
addr16
dec
sbbb
addr16
pop
es
or
orb
xor
std
push
ret
and
prefetchw
add
mov
sub
jg
pop
xchg
cld
mov
pop
rcll
mov
mov
xchg
cmp
inc
in
and
or
cmp
imul
addr16
out
sbb
adc
xor
gs
fists
or
adc
enter
jmp
fs
push
mov
xor
or
or
popa
into
jnp
jns
cwtl
dec
add
dec
imul
fs
inc
mov
addr16
enter
cmpb
nop
xchg
xor
pop
xchg
das
sub
pop
daa
lds
out
daa
sbb
cmp
mov
and
dec
insb
popa
dec
sbb
add
psubusb
and
hlt
fcomp
jmp
imulb
aam
movsb
packsswb
sbb
aam
shlb
ja
mov
lods
jae
sahf
out
sahf
jge
pop
popa
mov
jns
out
lret
xchg
popf
out
scas
and
pop
mov
sub
movsb
out
aaa
out
sub
xchg
xchg
fistpl
pop
add
es
ja
dec
mov
push
sahf
xchg
and
or
fsts
push
sub
sub
cs
fidivrl
adc
pop
insb
lret
xchg
cmp
push
imul
pop
clc
mov
add
insb
pop
dec
inc
cmpsb
jo
inc
xchg
popa
nop
push
or
xchg
subl
inc
mov
iret
inc
mov
pop
fisttpll
sub
mov
insb
cwtl
inc
push
push
adc
push
xor
dec
inc
ret
cmp
mov
das
dec
loopne
inc
data16
and
xchg
add
aam
ljmp
out
hlt
jno
imul
loopne
mov
push
sbb
adc
into
sub
inc
lods
xor
inc
sbb
add
jmp
stc
lret
test
pusha
or
pop
adc
and
mov
es
and
shrl
cmp
subb
jbe
out
and
sub
call
addb
adc
icebp
add
mov
jle
jg
pop
aam
cmp
and
addb
adc
sbb
xchg
sub
int
xor
lahf
dec
icebp
mov
lock
pop
xchg
jo
mov
add
shll
sbb
add
xor
pusha
js
gs
lahf
test
fisubl
jmp
fwait
mov
xchg
inc
or
inc
push
jbe
dec
hlt
sub
mov
add
adc
mov
cmp
hlt
jne
fcompp
aaa
push
sti
dec
jle
adc
orb
pop
or
test
or
sbb
sub
xor
in
daa
sbb
mov
dec
or
sub
jmp
mov
enter
sbb
xor
add
add
sbb
pop
or
xchg
dec
test
fildl
or
out
push
pusha
out
jo
mov
test
jle
dec
jne
sbb
pop
sub
ljmp
and
lret
mov
into
and
inc
push
cmp
in
lock
mov
inc
sbb
shll
fisttpll
xor
push
das
mov
sbb
outsl
rcl
add
mov
lahf
push
in
in
jae
dec
and
sub
fmull
jge
shll
xor
mov
pop
daa
xor
mov
pop
addb
cmpsl
push
inc
pop
fdivl
out
mov
mov
cs
or
mov
mov
bound
sbb
pop
lock
adc
or
das
fadds
mov
push
and
ret
shrl
sub
fmull
cmpsb
je
sarb
or
push
in
js
fsubr
adc
les
pop
test
mov
mov
lds
lret
ja
jbe
push
or
jge
xchg
inc
outsl
lock
loopne
pop
push
jle
outsl
inc
jmp
mov
xlat
pushf
mov
repz
fstpt
adc
dec
shl
ja
fcmove
nop
daa
call
lcall
je
mov
pushl
push
inc
adc
jne
mov
mov
jmp
inc
inc
test
xor
jle
adc
xor
mov
test
in
cltd
mov
sbb
inc
call
xor
push
cld
loopne
push
or
push
push
mov
call
xlat
xor
movsb
jo
inc
pop
push
shlb
mov
jne
call
and
add
dec
dec
push
xchg
pop
pop
clc
cmc
andb
in
fisubl
aam
cmp
lock
add
stos
xor
lock
mov
add
repnz
rorb
and
mov
sub
addl
aas
test
sub
ret
adc
inc
jecxz
movsl
lds
mov
sbb
sub
pop
inc
lcall
push
sbb
icebp
adc
cmp
push
test
jmp
adc
jmp
cld
jmp
ds
adcb
pusha
pushf
mov
leave
mov
adc
pop
and
ret
cmpsl
aas
leave
inc
or
js
push
pop
leave
lcall
into
sbb
inc
loope
adc
in
push
fs
sbb
dec
sbb
lock
jle
mov
inc
or
xchg
aaa
push
xchg
push
pop
aam
iret
data16
push
cmp
js
jne
in
rcrb
jbe
pop
cmp
repz
sub
push
js
sub
enter
cmp
inc
js
mov
pop
cmp
cmp
lock
mov
pop
insb
sbb
fwait
mov
leave
in
adc
add
neg
sbb
push
sub
push
dec
jo
push
pop
sbb
push
fwait
inc
leave
ss
dec
push
xchg
and
cltd
movsb
xor
movsb
inc
or
dec
insb
mov
cmp
mov
in
cmpsb
mov
jb
xchg
out
jno
in
dec
add
push
sbb
dec
add
nop
dec
gs
push
or
sbb
push
push
cmp
xor
jae
add
jno
push
push
cmp
gs
add
pop
and
sbb
arpl
arpl
lds
out
pop
test
adc
enter
lods
xchg
push
inc
daa
push
sub
xchg
insb
maxps
xchg
push
das
dec
loop
jb
inc
outsb
mov
pop
push
outsl
ja
mov
add
jnp
or
pop
outsl
jae
daa
sub
mov
cltd
jnp
mov
test
je
and
mov
push
adcb
or
test
push
push
popa
iret
inc
sti
dec
std
nop
fs
insb
sbb
dec
push
or
mov
enter
aaa
push
add
adc
imul
les
push
mov
adc
and
pop
xor
sub
dec
lock
subb
lods
pop
pop
sbb
dec
pop
push
inc
jge
dec
jge
inc
xchg
xchg
inc
push
repnz
cmp
or
movq
mov
shlb
decl
ja
mov
test
loopne
jnp
xor
push
lahf
or
imul
xchg
cwtl
inc
inc
inc
inc
pushf
mov
inc
inc
lods
mov
mov
mov
inc
inc
inc
int3
rcl
fadds
inc
inc
fsub
in
inc
inc
inc
inc
in
lock
clc
inc
cs
inc
cld
add
or
inc
inc
or
adc
inc
inc
inc
inc
sbb
and
adc
xor
jg
sbb
push
jae
mov
out
cmp
lret
adcb
loopne
lock
pop
arpl
test
xor
inc
pop
add
xchg
pop
sahf
insl
loope
push
fs
dec
jl
and
push
mov
push
mov
nop
dec
sbb
cwtl
inc
sub
push
je
mov
xlat
sbb
mov
and
test
lods
and
lock
sbb
add
movsb
dec
les
sbb
js
inc
sub
rorb
pushf
fsubrs
mov
push
push
in
call
hlt
in
or
push
sbb
xor
add
clc
inc
cld
push
or
jae
add
add
xchg
add
push
movsb
xor
adc
mov
inc
sub
push
rcrb
push
mov
xchg
gs
sub
sub
sub
test
insb
leave
mov
xchg
inc
pushl
adcb
push
pop
xchg
rclb
leave
adc
push
and
ds
popa
in
daa
imul
shlb
loop
push
sbb
daa
jmp
adc
loop
push
xor
aas
push
mulb
dec
pop
movsb
add
bound
je
sub
mov
addr16
xchg
gs
mov
pop
inc
addr16
fs
pop
sbbb
out
dec
arpl
jae
in
adc
fs
lea
or
jns
jp
jae
sbb
add
dec
mov
scas
pop
pop
pop
or
rcrb
jo
pop
xchg
push
or
push
add
outsb
dec
roll
lcall
mov
rclb
iret
cmpsb
popf
pusha
cmpsl
jo
dec
xor
outsb
push
pusha
in
pop
or
cmp
xorl
aam
cwtl
and
jbe
cwtl
test
mov
mov
pop
xchg
pop
or
xchg
mov
xorl
and
mov
jns
jae
mov
jne
insl
outsb
das
aaa
sub
fs
inc
imul
mov
jo
jge
mov
inc
outsl
arpl
xor
loope
jge
inc
pop
push
xchg
pop
inc
cmp
and
repz
cmp
adc
or
cmp
jo
jecxz
mov
js
xchg
cmp
scas
mov
aaa
xchg
push
add
repnz
arpl
jmp
aad
xchg
int3
mov
cmpsb
cmp
sbb
mov
nop
xchg
cmp
testl
xchg
mov
dec
sbb
test
push
mov
add
leave
add
xchg
call
xchg
add
pop
and
add
pop
dec
push
in
pop
mov
nop
pusha
fs
cs
fs
mov
mov
mov
fidivrs
pop
cwtl
push
mov
fdivl
adc
jo
dec
rorb
js
mov
mov
jmp
loope
out
adc
andb
ljmp
jl
add
adc
dec
roll
lahf
xchg
or
push
xor
sub
test
cmpsb
ja
jo
mov
pop
or
mov
fs
fcomps
pop
cmp
cmp
or
imul
loope
pop
dec
outsb
mov
mov
push
insl
jmp
push
inc
push
adc
push
xor
and
xor
dec
mov
sbb
inc
outsl
lods
fs
add
or
sbb
jp
add
adc
adc
fstl
cld
push
movb
je
nop
cmp
loopne
xor
cmp
fidivl
in
dec
push
add
push
sub
xor
xchg
rclb
inc
roll
xchg
sub
cmp
icebp
sub
fstps
mov
mov
ffreep
adcl
or
mov
push
out
dec
loopne
and
orl
pop
add
das
gs
lcall
push
or
je
call
or
in
rolb
leave
js
push
popa
orl
insl
sbb
pusha
push
es
pop
lea
mov
cmp
cli
loopne
adc
shrb
pop
fildll
xchg
dec
mov
mov
inc
dec
or
fadds
dec
push
push
push
fcomip
icebp
cmpsl
int3
int
aam
dec
inc
mov
inc
inc
cmp
jne
or
popa
mov
add
push
push
stos
in
and
xor
ss
dec
add
in
xchg
xchg
mov
add
xchg
inc
or
inc
mov
mov
inc
and
inc
add
inc
add
in
in
movb
and
push
sub
int3
cmp
mov
inc
or
mov
insb
fcmovnbe
cwtl
data16
push
cmp
push
push
add
movsl
xorb
js
push
nop
bound
cmp
cld
inc
aas
insb
mov
lret
push
js
lcall
arpl
hlt
data16
push
lods
mov
jge
mov
pusha
jl
dec
loopne
jecxz
mov
loop
cld
push
in
push
pop
jnp
int
mov
cmpsl
fsubr
movsb
mov
insb
mov
add
mov
ret
in
roll
es
mov
sub
testb
push
jae
enter
addr16
jg,pt
jbe
lods
pop
sub
xor
or
dec
sbb
mov
pop
orl
inc
push
repnz
mov
shrb
fidivs
jo
clc
mov
add
adc
xchg
scas
mov
mov
dec
sbbb
dec
mov
push
jmp
stc
jg
mov
dec
aas
xlat
mov
fdivs
fiadds
subb
leave
and
mov
sarl
shl
nop
add
pusha
jle
or
cs
stos
sub
pop
xchg
pop
test
clc
jg
fldt
je
cwtl
lahf
outsb
jnp
sub
dec
or
xchg
xorl
outsl
push
rcrl
movl
bound
add
fwait
lcall
jle
mov
sub
push
popl
xchg
in
and
sub
add
nop
add
in
and
adc
cwtl
movsl
push
fs
popf
xchg
cmc
mov
or
xchg
push
cmp
imull
adc
movsb
leave
mov
cmp
and
enter
ss
inc
pushl
xor
loopne
mov
std
mov
mov
and
call
nop
mov
imulb
popa
andl
xchg
pop
xlat
or
in
cs
cs
push
mov
loopne
cwtl
or
ret
or
lcall
push
movsb
add
test
push
lods
mov
mov
imul
sbb
mov
hlt
movsb
sbb
fcoms
movsb
lahf
data16
xchg
mov
shl
rclb
xor
in
in
call
lock
aam
popa
leave
shll
add
fstl
adc
add
aaa
mov
cltd
les
dec
outsl
add
dec
dec
sub
in
xor
push
pop
add
je
mov
dec
lcall
mov
dec
outsb
inc
movl
ss
push
outsl
pop
or
and
sbb
pop
imul
nop
add
cwtl
mov
sub
pushf
dec
stc
add
sbb
rorb
cmpb
sahf
or
xchg
into
icebp
jo
add
lds
hlt
lock
push
sub
ljmp
pop
add
add
and
pop
cmpsb
movl
inc
add
enter
push
ja
push
aam
mov
lock
pop
lcall
loopne
or
push
dec
fdivl
fstpt
and
inc
ljmp
ja
or
mov
hlt
fs
into
pop
mov
loop
adc
push
hlt
or
and
cmp
pop
insb
add
test
jo
cmc
addr16
add
and
sub
or
push
mov
jle
scas
add
push
or
jbe
cmp
rcrb
psraw
push
push
dec
aam
push
pop
fwait
aaa
fistpl
and
lahf
adc
xor
clc
and
xorb
shlb
push
and
adc
inc
dec
push
push
andb
inc
xor
lock
push
sti
mov
shrb
adc
dec
push
jge
or
ret
stos
pop
cmp
loopne
jmp
inc
inc
mov
xor
stos
cmp
dec
dec
fmuls
adc
rorb
rolb
fsubs
dec
or
inc
or
fisubrl
jle
mov
mov
push
aam
fsubrl
in
lret
push
cmp
rolb
test
sub
daa
pusha
and
insl
or
dec
test
mov
and
inc
int
lds
dec
xor
jecxz
dec
hlt
mov
jl
xchg
pop
adc
inc
and
fwait
xor
add
xchg
mov
sbb
hlt
sub
mov
push
cmp
cmpb
or
mov
add
push
lcall
xor
das
aas
mov
ret
ret
insb
mov
jecxz
jge
fldl
ds
adc
les
xchg
pop
inc
enter
pusha
nop
pop
inc
js
adc
mov
cmp
push
or
jo
cmpsb
add
jne
inc
xchg
and
in
rorb
cmp
sub
ja
pusha
fs
push
pop
lods
push
aaa
pop
lcall
divb
add
xchg
push
add
fbld
cmp
ret
pop
add
ret
ret
sbb
clc
fcomi
push
mov
scas
or
sbb
mov
fistl
jl
cltd
movsb
aam
mov
jo
xchg
nop
sub
fwait
jge
mov
cmp
jne
pushf
cmp
scas
xor
int
ret
adc
adc
and
add
pop
mov
xor
incb
out
and
je
or
xor
cmp
in
and
mov
hlt
lret
movsl
sub
mov
add
movsb
add
in
mov
mov
iret
add
and
call
pop
push
adc
fisubrl
ja
adc
mov
add
dec
inc
inc
std
inc
or
loop
inc
sbb
pop
xor
clc
scas
cmp
out
cltd
adc
pop
push
add
jne
add
fdivl
test
sbb
aad
ss
test
jge,pt
add
and
dec
imul
repnz
dec
movsb
mov
mov
scas
mov
mov
push
cmpb
test
jo
sbb
ds
mov
dec
dec
cmp
jo
jnp
enter
orb
pusha
and
call
jnp
jo
mov
daa
loopne
adc
insl
fs
addr16
push
in
add
and
jo
jp
adc
mov
push
je
and
bound
js
test
adc
and
inc
push
mov
repnz
pop
cwtl
pop
xchg
cs
iret
enter
hlt
mov
jae
pushf
mov
jo
stc
dec
fiadds
pusha
push
xor
daa
out
in
xor
jl
jbe
je
mov
cwtl
lds
mov
inc
ljmp
push
cmpb
xchg
loop
cmpl
jae
mov
pushf
dec
xor
mov
and
xor
sub
adc
addl
pop
inc
pushf
fnstsw
pop
rclb
fiadds
cmp
mov
push
inc
stos
cld
aas
and
inc
add
pusha
inc
add
push
inc
xchg
pop
lods
inc
cmp
mov
mov
cmpsl
cwtl
rcr
ds
push
outsl
jl
push
loopne
es
jge
in
outsl
bound
cmpsb
inc
inc
int
jb
outsl
pop
push
inc
mov
mov
imul
xlat
inc
call
lcall
sbb
lods
or
or
pop
sub
or
push
aas
fidivs
adc
sub
or
repz
mov
jo
xor
and
push
aas
fmuls
nop
push
push
push
test
mov
push
incb
fmulp
inc
jne
outsl
xor
pusha
or
sbb
cmpsb
inc
push
push
enter
aaa
dec
testb
lods
or
sbb
rorl
adc
fs
test
imul
adc
or
addr16
jae
pusha
fwait
pop
push
addr16
add
jbe
pop
in
js
inc
pop
bound
inc
scas
roll
sarb
push
hlt
pop
in
add
in
into
shrl
cmpsb
jp
iret
pop
mov
sbb
jb
dec
pop
pop
es
ja
lcall
inc
popf
adc
cmc
popa
ss
sub
and
inc
loop
push
js
push
out
mov
mov
pop
aam
or
aas
and
push
pushf
aas
pop
add
push
outsl
jo
jo
repz
neg
jge
adc
sbb
jnp
test
imul
cld
xchg
sbb
pop
bnd
pop
xchg
js
sbb
leave
add
rolb
jnp
ficomps
mov
push
int
jl
push
push
pusha
lahf
sbb
jnp
push
or
and
pop
je
mov
cmp
xor
add
outsb
inc
push
add
inc
mov
xchg
sub
pop
add
or
fwait
hlt
clc
xor
fldenv
fadds
dec
and
enter
xchg
insb
dec
lock
dec
and
jae
fmull
and
or
imul
inc
sahf
sbb
and
mov
fcom
shlb
or
int
adc
xchg
ja
orb
nop
or
and
adc
xchg
loopne
loopne
add
rcrl
fmuls
mov
daa
push
mov
sti
dec
dec
add
fstp
rclb
dec
dec
jb
dec
adc
sub
sub
rolb
mov
testl
inc
les
test
push
sbb
sbb
stos
cmp
hlt
add
push
imul
xor
sbb
test
fadds
aam
inc
inc
test
repnz
clc
or
arpl
mov
push
addr16
js
or
add
mov
mov
add
add
sub
add
sub
inc
lods
push
dec
jl
inc
push
mov
mov
or
pusha
movl
mov
and
cwtl
mov
lods
xor
fstpl
or
orl
test
adc
fmuls
dec
sti
and
aam
adc
fisttpll
aam
andl
inc
mov
xorb
mov
adc
cmp
mov
mov
dec
push
jmp
or
ljmp
mov
je
push
jbe
jb
adc
dec
mov
fcmovbe
inc
adc
adc
stc
fwait
jle
pop
sti
cmp
jge
mov
faddl
sbb
std
out
into
in
lea
mov
push
add
dec
xor
jmp
mov
mov
sub
jle
xchg
pop
and
mov
mov
add
mov
xor
fbld
std
mov
sub
ja
or
ret
sbb
dec
add
call
mov
ss
cwtl
pusha
icebp
sarb
mov
cmp
jmp
dec
jae
jo
jns
push
cmpb
cmpsl
ret
add
dec
mov
mov
xchg
insb
adc
es
fwait
je
push
jo
outsb
nop
movsl
nop
mov
jmp
cmc
dec
scas
push
test
jns
inc
sbb
xor
enter
cmpb
imul
push
movb
shrb
cmp
sahf
cltd
sbb
mov
cmpb
lcall
aaa
cmpb
lods
add
bswap
cmp
jmp
sbb
push
jo
add
fnsave
xchg
add
pop
xchg
test
lods
and
dec
xchg
sub
stc
or
or
mov
mov
cs
imul
xlat
xor
aaa
scas
mov
call
cmp
jbe
or
xchg
int3
push
dec
mov
dec
pop
dec
js
jnp,pn
in
dec
jnp
jge
push
dec
or
sbb
or
ret
pop
jnp
jne
aaa
sbb
adc
push
dec
mov
mov
jge
push
xor
pushf
stc
pop
dec
mov
jne
and
pop
test
cmc
add
inc
sub
daa
add
jg
clc
int
imul
inc
dec
jl
adc
jl
mov
xor
sbb
rcl
hlt
loop
and
jl
fsubrs
in
sbb
push
pop
inc
lcall
inc
or
aaa
jmp
daa
testb
sbb
add
sbb
mov
out
mov
std
sub
jae
push
mov
xor
push
pop
lock
test
push
push
iret
jg
dec
loopne
add
push
push
mov
mov
iret
jge
jo
jle
cltd
inc
cs
bound
lock
rcrb
out
xor
pop
addps
add
adc
mov
xor
sub
add
jo
mov
dec
ja
mov
fmul
outsl
dec
bound
clc
mov
inc
stos
sub
push
inc
pop
inc
cmp
cmc
pop
jnp
xor
popa
pusha
sub
ja
cmp
clc
in
pop
loop
loop
bound
cmp
adc
push
lods
or
or
adc
out
xor
mov
push
lea
or
cmp
xchg
mov
mov
xchg
xchg
xchg
xchg
adc
adc
xchg
xchg
xchg
xchg
push
pop
sbb
xchg
xchg
xchg
xchg
sbb
sbb
xchg
xchg
xchg
xchg
push
pop
add
xchg
xchg
xchg
xchg
add
add
xchg
xchg
xchg
xchg
push
pop
or
xchg
xchg
xchg
xchg
or
or
leave
enter
icebp
leave
leave
leave
leave
repnz
cmc
leave
leave
leave
leave
div
clc
stc
iret
leave
leave
leave
cli
sti
cld
std
das
iret
xor
inc
add
iret
repz
xor
sub
repz
repz
sbb
adc
repz
insb
or
add
cld
sahf
out
lcall
jns
out
in
fdivl
out
sahf
out
int3
and
sbb
out
sahf
mov
add
dec
repz
cld
stos
pushf
hlt
xchg
repz
repz
mov
test
iret
repz
jl
je
insb
les
repz
mov
cmp
rep
dec
movsb
inc
pushf
iret
repz
cmp
xor
sub
cmp
repz
jl
je
repz
rep
or
add
out
sahf
out
inc
push
hlt
dec
in
popf
out
sahf
inc
in
fdivl
sbb
dec
lahf
lods
movsb
adc
add
lods
ficoms
pop
out
movsb
ja
mov
dec
pop
xor
pop
dec
mov
das
out
lds
cmp
int3
lods
sub
cmp
test
or
orl
and
scas
mov
mov
push
mov
cmp
cltd
fwait
rorb
cmp
and
add
movsl
aaa
pop
out
sub
int
daa
xchg
scas
xchg
lret
nop
sbb
mov
adc
push
push
mov
mov
adc
sbb
scas
js
mov
dec
sahf
xchg
outsl
je
push
in
pshufw
popf
mov
enter
in
pop
fmulp
xor
inc
je
pop
lods
push
cmpsb
and
xchg
aaa
dec
push
scas
or
outsl
scas
and
and
es
into
adc
subb
in
dec
mov
sub
jb
scas
in
add
push
aaa
call
xchg
mov
dec
adc
jl
subl
shr
cmp
jg
iret
mov
add
scas
push
lods
adcl
mov
dec
xchg
and
fstl
pop
mov
push
das
mov
adc
add
push
jecxz
sub
add
or
adc
push
adc
adc
sbb
jb
or
bound
loop
cmp
cmpb
in
andb
pop
aas
xchg
movb
adc
outsl
mov
rolb
xorb
fwait
inc
nop
jmp
cvttps2pi
add
test
lods
fidivrl
mov
mov
loopne
sbb
lods
sub
or
and
and
sub
xchg
popa
xor
test
cmp
xor
mov
pop
adc
mov
outsl
pop
mov
hlt
mov
add
push
mov
inc
cmp
inc
adc
dec
jnp
or
and
aas
fwait
push
or
aaa
push
xor
cmpsb
jp
sub
and
xchg
je
mov
lods
pop
adc
xchg
sbb
into
pop
push
pop
add
push
xor
repnz
lcall
jbe
insb
mov
adcb
sbb
push
insl
or
mov
jo
mov
mov
shrb
lret
shlb
add
jnp
adc
or
xchg
pop
das
clc
add
push
ja
add
mov
or
mov
pushf
pop
push
adc
mov
add
push
add
add
or
dec
dec
push
push
xchg
pop
aam
btr
nop
mov
cmp
and
xchg
inc
push
xchg
jo
mov
mov
faddl
lret
or
fsubs
dec
fwait
movsb
xor
mov
lods
stos
inc
pop
fimull
fwait
dec
mov
lods
sbb
cmp
movsl
inc
imul
aam
or
adc
xor
mov
cli
movb
inc
movsb
lret
adc
push
push
inc
shlb
xchg
jp
sub
test
adc
aaa
cs
ljmp
les
push
enter
imul
and
inc
pushf
mov
test
mov
mov
or
push
dec
push
cmpsb
popf
cmp
or
jge
dec
into
dec
or
das
xchg
mov
pop
pop
pop
adc
cs
cmpb
mov
rolb
push
roll
mov
scas
cltd
xchg
sbb
pop
or
andl
cmp
clc
mov
clc
ficoms
enter
push
cwtl
push
or
inc
pop
jae
in
pop
adc
push
adc
sub
dec
clc
arpl
jno
sbb
jb
je
xchg
push
mov
sbb
jne
mov
jmp
dec
mov
mov
test
aas
pop
ljmp
pop
insb
add
sub
dec
jle
outsl
sbb
and
adc
adc
jae
fwait
maskmovq
mull
jbe
inc
sarb
inc
push
and
adc
js
cmpb
sarb
call
or
outsb
or
out
inc
cli
sub
insl
ret
and
xor
insb
stos
or
imul
add
pop
aas
adc
mov
outsl
add
arpl
insb
push
arpl
imul
imul
inc
outsl
pop
js
bound
add
es
jb
jb
cmp
or
sbb
es
mov
data16
es
adc
iret
pop
addr16
mov
sahf
addr16
add
mov
arpl
insb
daa
mov
imul
sti
ficomps
insb
das
je
cmpsl
sbb
popf
or
xchg
pop
lret
jo
daa
mov
in
out
je
jo
jb
arpl
sbb
sbb
outsl
dec
pushw
das
gs
mov
imul
adc
and
push
and
and
cmpsl
daa
and
adc
inc
jo
hlt
xor
dec
cmp
adc
push
add
mov
dec
rorl
inc
mov
pop
jno
pusha
jnp
iret
cmpb
daa
loope
adc
add
jl
or
and
mov
mov
lahf
dec
push
sub
fcomps
add
pusha
jbe
mov
js
rcrb
push
add
and
push
sub
insb
insb
push
jno
mov
pop
adc
call
outsb
sbb
gs
fstpl
call
lds
movsb
aas
push
icebp
movsl
push
dec
or
pop
sti
std
movsl
test
push
mov
subl
fs
lahf
nop
inc
pop
insl
rcll
nop
ret
inc
dec
sub
addl
push
sub
int3
lods
cmp
mov
scas
jmp
cltd
and
pavgw
adc
push
pusha
pop
xchg
jbe
push
add
push
pop
pop
adc
fcoms
jmp
sbb
insl
lea
sbb
adc
dec
or
nop
push
or
rolb
hlt
jbe
sbb
pop
fs
cli
add
cmc
mov
add
xor
add
add
aaa
pop
pop
or
or
or
or
or
or
iret
repz
adc
adc
repz
adc
sbb
push
cmp
sbb
push
pop
and
and
and
push
rcr
iret
sarl
push
sbb
cmp
cmp
repz
insl
jle
mov
mov
shl
cmc
push
sahf
out
lcall
jns
out
insb
jge
lahf
mov
jns
out
shl
out
cld
jo
out
or
testb
xor
or
lods
rclb
push
mov
or
push
cs
and
pop
adc
in
lret
or
push
mov
or
cs
and
and
sub
xchg
lret
sub
mov
adc
cs
cmp
dec
sub
xchg
lret
pop
dec
sbb
dec
in
push
sbb
push
mov
repnz
ja
push
push
sub
popa
imul
movsl
repnz
and
repnz
aas
and
and
and
and
and
cmp
outsb
out
mov
rol
cmp
test
addl
mov
out
pop
sub
cld
in
xor
rcll
fadds
call
out
outsb
js
lock
push
je
or
pop
push
mov
xchg
cmp
adc
push
add
and
add
pop
nop
pushf
lock
mov
adc
sub
je
jns
dec
daa
sbb
mov
add
stos
or
dec
addr16
dec
loopne
xchg
loopne
faddl
rcr
pop
cmp
mov
lods
cwtl
push
and
jecxz
stos
in
pop
shll
inc
mov
pusha
mov
pop
out
jnp
dec
std
daa
fs
sbb
mov
cmp
mov
aaa
daa
ret
adc
clc
pop
sub
daa
mov
daa
push
cs
cmp
dec
gs
add
clc
dec
popa
jns
jne
cmp
or
insb
adc
or
add
push
stos
adc
je
or
fstpl
je
cmpsl
nop
les
mov
ficompl
test
mov
add
pop
inc
mov
add
inc
inc
mov
pop
dec
inc
ret
pop
nop
xlat
inc
mov
mov
loop
adc
adc
sarl
jmp
jo
xchg
pop
or
or
jmp
mov
insb
xchg
pop
sub
sbb
pop
bound
add
mov
les
test
pushf
nop
xchg
inc
lock
test
push
stc
nop
lock
scas
pop
sbb
xchg
xor
push
adc
adc
ja
mov
adc
insb
xor
xlat
adc
jl
or
or
mov
pop
insl
add
push
and
mov
mov
sub
and
dec
fwait
imulb
into
in
add
pop
inc
adc
dec
and
sahf
out
mov
adc
inc
adc
adc
mov
mov
loop
nop
mov
mov
push
or
xor
cmpb
push
sbb
stc
ficoml
pop
add
insb
sbb
adc
mov
and
pop
test
add
jl
dec
testl
les
inc
bound
sbb
sbb
adc
rorl
push
lret
jno
in
pop
pop
out
sbb
mov
push
mov
imul
or
fcoms
pop
xor
mov
jmp
pop
adc
sbb
pop
enter
inc
dec
mov
push
fdivs
add
and
es
sub
push
jb
sub
and
and
sub
xchg
sub
xor
subb
inc
inc
pop
enter
dec
js
das
inc
dec
fadds
mov
xor
jb
xor
inc
sbb
ljmp
inc
pop
nop
sub
mov
inc
add
inc
sarb
inc
cs
faddl
push
int3
add
lcall
push
sbb
xor
and
repz
mov
fcmove
push
push
in
xchg
aam
rolb
or
out
das
adc
bound
lea
add
dec
cmp
or
lret
inc
js
pop
dec
or
push
or
faddl
addr16
nop
cmp
inc
and
arpl
jnp
mov
stos
inc
sbb
outsb
filds
sbb
mov
add
fildl
sub
push
cli
setnp
jl
fmull
pop
ja
jns
xchg
mov
inc
movsb
test
mov
sbb
and
add
mov
and
fcos
pushf
sbb
push
int3
fcmovu
and
mov
push
push
xchg
mov
js
sub
icebp
dec
ret
outsb
jae
adc
int3
out
into
ror
nop
lahf
data16
sub
inc
inc
dec
inc
repnz
fsubl
pushf
fucom
addl
add
lret
adc
enter
fidivrs
cmpsl
push
mov
adc
rcl
pop
icebp
sahf
xchg
mov
and
xor
lock
inc
lahf
add
bound
push
mov
mov
and
or
xlat
push
incl
sub
seto
inc
add
adc
adc
sbb
adc
mov
stos
in
imul
add
dec
mov
sbb
dec
jo
sysret
push
adc
adc
andl
out
popa
js
mov
imul
sbb
mov
nop
stos
int
xor
xor
je
lea
push
and
rorl
int
enter
inc
xchg
and
test
fcmove
pop
sub
nop
aas
or
add
cmp
and
and
and
test
xchg
inc
mov
rol
popa
adc
and
cld
enter
imul
xchg
fadd
and
movsb
add
cmpsb
mov
xchg
loopne
inc
push
enter
rclb
les
jo
add
add
and
cs
adc
push
lea
or
aam
add
push
or
mov
xchg
inc
imul
and
push
int3
ret
add
idivl
mov
cmc
jp
jmp
popf
and
mov
sbbb
addb
jmp
add
or
ret
aad
xchg
nop
js
or
popa
or
sub
jmp
cmpb
inc
sub
add
or
pop
add
and
jne
or
mov
cli
mov
adc
adc
xor
push
jle
js
lcall
and
or
mov
or
jmp
xlat
dec
mov
xchg
shrl
jnp
xor
jmp
dec
sbbb
daa
jns
arpl
pop
test
or
adc
mov
adc
xchg
add
adc
ds
jnp
shl
rcrb
fdivrl
dec
adc
ds
aam
pop
dec
or
cmp
sbb
jge
test
iret
inc
daa
insb
xchg
mov
mov
insb
outsb
pop
add
lea
add
mov
movsl
sbb
mov
or
mov
adc
add
aam
sub
imul
cmp
iret
xchg
dec
or
ds
movsb
adc
mov
shlb
sbb
aam
add
adc
fisubl
xor
in
sbb
adc
xchg
inc
and
sub
testb
pop
inc
js
sub
push
push
mov
jae
push
add
std
shlb
dec
pop
out
mov
mov
loopne
fmuls
mov
ficoms
adc
adc
xor
jecxz
pop
aaa
cmp
sbb
xor
pop
cmp
sbb
movlps
testb
icebp
jge
inc
xor
push
mov
sbb
dec
mov
scas
jo
repz
inc
pop
add
test
leave
scas
push
and
or
or
jae
mov
daa
lahf
xlat
insb
inc
mov
dec
and
cmp
pavgw
ret
pop
adc
push
or
add
lock
adc
mov
arpl
xchg
lea
add
fldenv
orb
xor
cmpsl
imul
mov
push
or
push
je
pop
inc
movsl
and
sahf
test
adc
inc
loopne
std
add
lods
loope
xchg
dec
test
jno
shlb
and
push
jns
add
int
mov
cmpb
aas
cs
dec
addl
fs
inc
sbb
inc
in
jl
pop
addl
add
adc
mov
add
mov
loopne
icebp
mov
rcl
enter
inc
outsb
pop
push
cli
inc
pop
cmp
test
adc
xchg
add
je
dec
and
pop
pop
dec
jmp
movb
push
cld
push
rcll
int3
add
cmp
adc
test
scas
cmova
adc
push
hlt
inc
inc
popf
jne
adc
mov
push
or
mov
pop
mov
push
jnp
push
adc
popl
sub
or
mov
aas
pop
sub
mov
sub
jmp
insb
test
inc
cmp
xchg
xor
les
inc
pop
popa
adc
add
cmc
inc
popf
mov
add
xchg
pop
test
sub
jno
decl
xchg
shll
das
mov
mov
xchg
lock
xor
and
push
inc
subb
popa
or
cmp
roll
mov
dec
ds
lock
push
or
pop
orl
loopne
dec
sub
cmovle
cld
and
pop
add
je
lods
fcompl
xor
inc
scas
dec
sbb
inc
in
inc
insb
adc
push
rolb
mov
inc
xchg
lret
xchg
mov
nop
mov
cmp
dec
or
dec
push
fidivrl
inc
das
call
sti
or
push
push
xor
and
mov
fildll
cmp
je
mov
fistpl
dec
loope
loopne
aaa
mov
loope
xor
sbb
mov
leave
mov
push
das
inc
mov
int3
adc
loopne
mov
je
lahf
add
lock
pop
test
or
iret
inc
push
push
push
dec
dec
aad
flds
add
dec
mov
inc
or
fsubrs
push
pop
out
xchg
mov
inc
xor
or
add
adc
test
xor
dec
or
adc
cmp
jne
adc
cs
stos
lods
jmp
push
fs
jb
cmp
movl
pushf
lea
push
bound
aad
cltd
jo
inc
push
mov
out
push
in
dec
or
loop
xor
and
xchg
or
jmp
mov
ljmp
into
dec
add
aas
daa
lods
fists
repnz
inc
and
fbld
jbe
sub
jo
pusha
and
sarb
nop
cld
push
neg
add
add
and
pushf
cld
inc
add
pop
inc
mov
inc
lock
pop
and
mov
or
test
pop
and
sti
pusha
add
mov
outsb
jae
int
js
inc
dec
jmp
mov
push
ja
xor
xor
inc
pusha
inc
iret
adc
dec
sub
rcrl
push
in
push
add
loopne
pushf
sbb
in
jbe
test
cwtl
aas
or
ror
jbe
jb
push
clc
cld
jg
in
fs
int3
in
orl
shl
loopne
iret
repz
mov
pop
popa
cmp
repz
jno
orl
dec
mov
xor
xchg
fcmovb
fwait
shrb
stc
aaa
fs
loop
add
inc
lcall
and
mov
in
inc
lahf
ret
arpl
inc
imul
adc
dec
les
xchg
jae
jecxz
push
push
adc
notb
inc
fimull
xchg
sbb
adc
sbb
cmpl
mov
sub
cmp
clc
push
mov
mov
add
dec
push
adc
cmp
pop
out
repnz
mov
adc
push
and
aaa
add
jp
or
push
fistpl
and
mov
adc
lea
rcl
or
and
lret
rcrl
rorb
add
mov
mov
inc
jo
and
cmc
loopne
inc
mov
arpl
fidivrl
mov
lock
jl
scas
nop
add
add
in
rorb
adc
and
dec
outsl
dec
mov
nop
jae
jnp
and
adc
sbb
movb
pop
inc
inc
insl
cmp
lea
xchg
pop
sbb
push
call
enter
add
or
fstl
jo
lods
dec
push
cs
and
and
dec
test
dec
mov
loop
push
cli
or
adc
dec
movsb
push
out
or
xor
pop
fs
out
dec
and
sbb
xor
fldt
xor
dec
insb
cmp
add
dec
shl
sub
clc
or
popl
xchg
push
in
xor
pop
add
pushl
mov
icebp
incl
inc
dec
sub
and
sbb
push
pop
sbb
cmp
test
xor
and
dec
dec
xor
add
sub
ret
rcr
adc
push
in
adc
outsl
xchg
or
daa
or
scas
call
mov
nop
inc
inc
xchg
adc
out
and
inc
fs
cltd
lock
jle
mov
jecxz
mov
stos
pop
outsl
inc
add
mov
inc
out
push
or
imul
ret
inc
jns
sub
mov
cmp
pop
push
mov
or
stc
pop
js
test
cld
mov
insl
jo
inc
call
jo
sub
and
call
push
adc
cmpsb
cmc
and
pop
popf
adc
pop
nop
jmp
es
aaa
xchg
sbb
cwtl
shrl
and
test
xchg
inc
mov
or
xor
xor
add
inc
js
jg
or
mov
dec
push
pop
inc
cmc
and
out
aam
imul
cmp
decl
je
or
je
xor
pop
sbb
jmp
pusha
rcl
pushl
lock
cwtl
in
popf
mov
pop
inc
push
inc
lock
and
imul
sub
inc
cld
mov
popa
and
pop
and
push
add
neg
inc
add
and
dec
pop
pop
test
out
adcb
aaa
loop
out
into
in
xor
subl
xchg
push
fiaddl
mov
xor
mov
xchg
dec
dec
dec
inc
dec
push
add
dec
jmp
mov
rorb
or
loop
xor
test
decb
or
movsb
movl
popl
sbb
xchg
out
out
jecxz
xchg
mov
inc
loope
mov
cmp
jne
sub
jne
in
and
in
mov
insl
je
and
aas
add
pop
stos
or
cmpsb
in
jmp
xchg
out
lock
or
lea
or
daa
lcall
pushf
cld
dec
test
and
push
aam
sub
cmp
push
sbb
repnz
inc
adc
mov
pop
lock
in
test
pop
mov
test
ret
cmp
loopne
jmp
cmc
or
add
dec
roll
add
sub
and
xlat
cmpl
dec
js
loopne
sbb
shlb
jb
mov
loop
xor
mov
mov
clc
mov
or
mov
push
nop
ret
imul
push
repnz
subl
push
mov
cld
jns
loope
adc
shlb
cmp
dec
inc
filds
pop
loopne
inc
out
and
inc
fisttpll
cmp
icebp
mov
xchg
mov
push
jns
sub
lahf
xchg
add
dec
insb
adc
jns
lea
insl
xchg
push
popa
roll
mov
adc
insb
popa
mov
outsb
adc
adc
bound
jae
and
push
notl
inc
add
adc
mov
and
adc
pop
jnp
int
pop
adc
and
or
orb
mov
jns
mov
and
cmp
rorb
iret
inc
inc
cmp
inc
hlt
cmp
sub
mov
inc
insb
push
mull
inc
es
xor
test
shrl
lock
shll
push
test
add
lock
lock
jl
mov
insb
mov
push
adc
or
push
jg
icebp
pop
in
inc
dec
inc
icebp
inc
lock
xcrypt-cfb
cmpsl
fs
adc
js
test
cmp
add
dec
mov
pop
insb
inc
mov
dec
leave
pushf
pop
clc
dec
or
inc
mov
push
shl
inc
jnp
mov
clc
out
pop
sub
or
inc
insb
repnz
sbb
push
xchg
sub
sub
sub
shlb
repz
add
cmpl
outsl
add
enter
cs
push
sbb
mov
pop
nop
movl
mov
dec
aam
in
aaa
test
and
ds
sbbl
sub
dec
movsb
add
inc
nop
sbb
andl
and
jo
fstpl
mov
cmp
add
inc
jecxz
or
jle
push
insl
bound
popa
jns
bound
jg
mov
test
inc
jo
fs
xchg
mov
push
dec
push
imul
popa
jmp
push
jle
repz
or
lea
or
loopne
pusha
sub
dec
add
neg
add
or
mov
in
imul
ficoms
add
mov
push
or
push
inc
in
or
and
push
popa
in
notb
mov
adc
enter
sbb
mov
imul
test
xchg
shr
or
mov
mov
mov
and
pop
mov
testb
dec
inc
sub
and
push
sub
jae
and
adc
adc
xor
aaa
dec
dec
movl
insl
adc
adc
jl
js
xchg
push
cwtl
xchg
add
ja
stos
loop
hlt
js
inc
aam
insl
dec
or
push
or
xchg
into
push
daa
lea
add
out
imul
pushf
add
jbe
idivl
adc
jns
subl
nop
push
shr
or
pusha
dec
cmc
test
push
or
lret
xchg
ret
cmpsl
xor
pop
faddl
scas
dec
test
testl
lds
xchg
xorl
int3
jbe
add
add
mov
iret
mov
fsubrs
add
pop
inc
pop
mov
lea
push
xchg
ja
xchg
popl
pop
add
pop
iret
add
pop
or
popa
repz
imul
cmp
rol
mov
nop
clc
psrld
or
xor
inc
inc
pop
cmp
pop
stc
cmpsl
out
adc
sbb
or
mov
mov
bound
das
inc
push
popa
jb
gs
stc
pop
test
outsl
arpl
cmp
xchg
pop
icebp
inc
fs
iret
stos
mov
sbb
iret
cmpsl
in
adc
icebp
inc
hlt
cli
mov
lods
cmp
shll
in
mov
js
add
ja
or
sub
add
add
clc
lea
bt
jno
sub
add
lods
xchg
adc
add
push
push
loopne
adc
ret
or
mov
inc
adcl
and
xlat
iret
mov
or
or
clts
mov
das
pop
sbb
add
sub
cld
pop
rcr
add
or
sbb
ret
add
fsubs
outsb
test
pop
push
xor
out
add
scas
out
and
inc
push
in
addl
addr16
repnz
adc
gs
imul
sbb
popa
lret
syscall
push
ret
inc
sub
cmpsb
bound
rorb
addb
loop
jo
test
or
repz
out
add
adc
popf
fadds
xchg
loopne
mov
insl
lea
add
mov
push
inc
pop
in
in
cs
inc
int3
xor
adc
hlt
out
add
push
nop
lahf
das
repz
or
andps
jg
and
add
pop
add
add
push
sub
test
xchg
sub
inc
add
add
add
or
or
mov
mov
mov
mov
lahf
sbb
cmp
inc
filds
ret
aas
in
in
jmp
ljmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
fdivrp
fdivr
fcmovb
call
ss
xlat
call
call
call
call
call
call
call
dec
fdivr
pop
fadds
into
dec
dec
dec
dec
icebp
dec
hlt
sub
imul
shrl
sbb
loopne
mov
dec
repz
jo
call
repnz
out
jo
cwtl
mov
cmpsb
pop
fdivs
arpl
mov
sarl
add
push
sbb
dec
pop
inc
pusha
idivb
push
lods
es
bound
push
push
test
cmpsb
dec
push
js
in
add
push
sbb
out
xor
cld
dec
dec
inc
inc
push
lahf
out
cmp
mov
pop
ds
fldcw
popa
mov
push
sahf
mov
iret
loopne
xchg
xchg
shrb
push
adc
idivl
mov
aaa
nop
pushf
idivb
mov
enter
lea
pop
pop
sbb
fwait
xchg
or
xchg
movsb
pop
sbb
fs
inc
sbb
in
pop
pop
bnd
dec
cmp
add
pop
push
inc
aas
dec
aam
rcl
add
mov
js
lock
add
call
aas
incl
adc
adc
ror
pop
div
dec
push
fs
push
les
mov
adc
cs
mov
jo
xor
or
test
xorl
pop
pop
sub
int3
or
push
dec
jg
add
and
inc
mov
and
add
rolb
loope
adc
lret
divb
je
and
mov
nop
lods
movb
stos
dec
loopne
jns
sbb
sub
outsb
mov
insb
sub
cmpsl
jge
jg
push
xchg
pop
pop
or
hlt
add
mov
inc
repnz
paddsb
addl
jbe
sahf
mov
push
pop
test
mov
repz
mov
adc
dec
pop
adc
sti
aaa
out
adc
add
rclb
push
ds
pop
add
call
add
add
add
nop
mov
mov
jbe
adc
sbb
sbb
ljmp
mov
cs
lcall
push
mov
mov
mov
mov
mov
mov
mov
mov
and
jg
mov
mov
mov
mov
mov
mov
add
push
mov
xor
subl
lret
dec
clc
call
inc
inc
inc
inc
ret
push
lcall
mov
inc
adc
notb
pop
lcall
mov
mov
mov
push
iret
sarl
hlt
inc
mov
lahf
out
cmp
lock
pushf
pop
lea
loopne
jl
dec
xchg
out
jl
xchg
push
sub
in
jge
shl
lcall
lahf
out
hlt
loopne
fwait
mov
and
xor
shrl
mov
sbb
pushf
out
fidivrs
push
cmp
dec
dec
repz
push
lods
hlt
sbb
cwtl
pop
jnp
sti
cmp
sbb
je
cmp
jl
call
push
pusha
push
jo
cwtl
lahf
jl
ror
mov
push
aam
jge
add
xchg
ss
out
insb
inc
xchg
push
cmp
insb
mov
fldcw
int3
mov
sti
xor
mov
push
fcoml
lcall
pusha
data16
lods
xchg
xchg
xchg
in
jge
mov
aam
inc
movsb
xchg
lcall
rcl
into
mov
jp
pop
jno
xlat
xchg
scas
dec
js
stos
cmp
push
popa
adc
and
scas
add
das
add
imul
push
mov
testb
in
in
or
or
mov
sbb
cs
icebp
cmp
adc
or
aas
and
or
sub
push
push
pushf
mov
scas
jl
mull
ret
daa
in
or
js
in
fimuls
lods
cs
mov
ja
or
adc
pop
rolb
bound
orb
mov
pusha
or
in
insb
jp
sbb
or
mov
fimuls
scas
mov
idivl
lret
mov
add
mov
add
jl
in
cmp
pop
push
pop
push
mov
mov
and
leave
or
scas
cld
or
call
sub
inc
or
inc
pushf
pop
mov
outsl
cmp
push
add
xor
fwait
add
and
sub
add
and
sbb
pop
mov
aam
cwtl
mov
test
mov
cwtl
cmp
repz
adc
and
repz
repz
bound
inc
sbb
jl
lds
sub
lock
or
fcomps
add
stc
sbb
stos
push
int3
ret
into
fnstcw
fisubs
fldcw
fldt
inc
ffree
fnsave
fisubrs
out
pushf
test
cmp
jb
or
aam
xorb
dec
push
adc
aam
adc
push
jmp
aas
adc
add
lea
mov
rorb
jno
jb
cltd
lcall
sbbb
pop
cmp
push
adc
push
mov
mov
and
sbb
pop
lea
add
mov
dec
xlat
ret
and
inc
popa
rcrb
out
movl
lock
inc
testl
icebp
mov
sbb
jne
and
outsl
pop
and
icebp
sbb
pop
insb
add
faddl
jne
xor
push
insb
pop
pop
cmpsl
sub
rol
shll
imul
adc
data16
pop
aaa
sbb
pop
sbb
push
push
add
loopne
lahf
push
or
pop
jns
pop
jb
xchg
lock
pop
daa
xchg
or
lods
test
daa
test
cmpsl
or
cmp
andl
push
inc
dec
shl
jl
push
inc
push
inc
daa
loopne
cmp
jo
daa
or
mov
insb
popa
clts
pop
jo
add
xchg
dec
outsl
pop
es
mov
daa
dec
push
jo
imul
pop
xchg
and
mov
popa
dec
add
out
push
movl
sub
push
das
dec
mov
imul
fidivl
daa
mov
sbb
bound
ficomps
inc
add
push
adc
jae
sub
lret
dec
mov
and
mov
mov
cwtl
lea
add
xor
add
lcall
cmpl
js
out
push
jne
mov
pusha
pusha
pop
rclb
jecxz
sub
mov
je
or
mov
xor
fwait
sub
inc
scas
push
adc
fs
movsb
verr
imul
sub
inc
push
push
inc
rcr
inc
inc
and
addr16
in
or
loop
aam
sbb
aam
mov
push
or
add
cmp
jl
daa
cmp
mov
rolb
pop
clc
mov
cmpsl
adc
dec
dec
aaa
lock
and
add
aam
push
xchg
icebp
xchg
add
xlat
lock
push
cmp
adc
jno
hlt
insb
pop
pusha
push
push
jo
in
xchg
mov
dec
call
sub
sub
arpl
cmpsl
push
xor
dec
loop
jne
dec
push
cmp
cmp
imul
dec
adc
push
push
mov
push
or
sbb
inc
leave
add
mov
sbb
outsl
adc
or
adc
lcall
sbb
and
cmpsb
imul
add
mov
test
popl
xor
and
xchg
mov
fiaddl
lock
shl
mov
and
aam
cmp
out
inc
jg
je
sub
cld
mov
mov
sub
dec
je
inc
dec
adc
ja
xchg
int
push
bound
push
add
pushf
sbb
add
xor
fucomip
adc
add
lea
cmp
sub
or
lock
ret
sbb
pushf
sub
add
pop
sub
pop
and
pop
cmp
add
in
cwtl
and
and
mov
fdivp
jmp
or
inc
sbb
dec
push
in
xchg
pop
scas
adc
lods
inc
pushf
mov
insb
lock
pop
mov
inc
sbb
cmp
nop
loop
sbb
test
or
inc
jns
pusha
roll
les
jmp
mov
aam
push
out
rdpmc
or
add
mov
pop
xchg
add
pop
and
sbb
push
jp
and
mov
cmpsl
cmp
test
js
mov
movsb
push
je
fsubs
dec
test
sub
rclb
mov
pusha
inc
mov
xor
xchg
popf
and
inc
xchg
push
jno
pop
adc
adc
imul
fcmove
test
push
pop
push
insb
insb
adc
lea
sub
push
pop
pop
inc
popa
or
popf
enter
lds
popa
in
and
enter
pop
xor
pusha
jo
add
add
add
xor
mov
lock
or
sbb
pop
stos
clc
dec
push
sub
mov
mov
jle
or
cmp
pusha
rorb
add
div
ficoms
jl
orl
xchg
jae
dec
rol
or
daa
fimull
sub
jne
cwtl
cmpsl
push
sub
clc
pop
sti
mov
cmp
mov
ss
inc
test
pop
mov
or
push
jp
jmp
ja
sarl
jb
pusha
jl
hlt
movb
cmp
jne
xor
imul
xlat
les
pop
push
add
hlt
jmp
or
jle
in
push
rcll
ret
adc
pop
adc
xor
sub
lret
dec
idivl
insl
cmp
or
inc
dec
mov
nop
fdivrl
cmp
or
or
inc
jb
movsl
in
sub
pop
test
add
movsb
js
dec
lods
inc
jge
mov
hlt
push
push
ret
clc
jae
enter
or
aam
enter
mov
cmp
jecxz
sbb
inc
orl
mov
cmpl
cmp
aas
cmp
je
fwait
cmp
movsl
add
mov
adc
cmp
xor
inc
add
bswap
add
stos
ret
jg
lea
xor
cmpsb
testl
shl
cmp
adc
pop
loope
adc
xchg
add
sub
xor
test
xchg
mov
std
adc
out
jo
leave
or
test
movsl
push
lock
cmpb
and
sbb
rcll
call
sbb
cmp
lock
shr
xor
push
sub
jle
inc
sub
idiv
sub
test
es
rcl
or
sti
add
fcomps
mov
mov
sub
mov
xor
or
xchg
and
adc
or
and
cmovg
lea
divb
xchg
dec
add
cmpsl
inc
pop
ret
cmp
inc
jne
and
dec
and
inc
mov
cmpb
sbb
or
push
adc
imulb
in
sbb
hlt
or
pusha
or
xor
mov
ljmp
xor
sub
push
cmp
addb
les
push
push
dec
push
in
pop
inc
cmp
addr16
adc
movsb
sbb
ret
xchg
adc
jp
or
dec
jo
mov
popaw
inc
or
push
mov
xor
ret
push
dec
mov
xchg
movsl
test
sub
pop
mov
call
lret
sub
or
add
cmp
outsb
jl
sub
or
or
inc
popl
or
das
fdivs
test
arpl
jmp
push
and
outsb
xchg
push
pop
or
adc
test
xor
jae
cmpb
sub
mov
sbbb
mov
adc
xchg
pushl
add
je
out
arpl
ljmp
or
dec
mov
inc
mov
add
repz
dec
clc
mov
shrb
mov
js,pn
sbb
push
iret
push
imul
pop
pop
rcrb
jg
mov
push
shll
repz
loopne
es
addl
pop
pop
xchg
ja
cs
mov
pusha
mov
lea
and
add
fdiv
outsl
jmp
xchg
add
xor
scas
icebp
psubq
pop
add
dec
jmp
xor
cmp
popf
xchg
pusha
out
cmp
sub
pop
adc
add
push
add
push
insl
mov
pop
pop
jnp
fists
add
sub
jns
sbb
adc
or
faddp
sti
dec
push
mov
mov
cmovae
lock
lock
fwait
push
push
add
push
and
std
pusha
adc
mov
mov
add
jmp
popa
adc
in
ret
and
aam
mov
les
push
sub
or
add
mov
add
sbb
push
pop
inc
or
push
cmp
jo
loopne
aaa
xor
cltd
pop
pop
and
lea
adc
xor
sbb
inc
push
jmp
push
jge
insl
dec
lods
cmp
out
dec
inc
cld
jbe
mov
jo
and
or
stos
repz
mov
adc
fdivrl
push
mov
mov
cmpsl
sahf
sti
nop
adc
xor
xor
sbb
mov
push
push
adc
adc
insb
ja
dec
mov
mov
xchg
out
or
sahf
dec
cmp
lea
js
or
xchg
jno
test
call
wbinvd
cmovbe
mov
adc
and
xor
jnp
push
icebp
sbb
jmp
inc
and
sub
lret
cmp
adc
cli
imul
push
sbb
xor
insl
stos
rorb
adc
imul
dec
add
jmp
pop
dec
adc
popa
jnp
or
pop
sub
mov
adcb
or
inc
mov
inc
cmp
fmuls
mov
xchg
mov
lahf
sbb
inc
stos
dec
fs
xor
stos
dec
fcoml
mov
ljmp
pop
daa
nop
flds
cs
lock
lods
cmp
and
jecxz
das
mov
and
pop
add
loop
lea
cmp
adc
mov
push
pop
ja
pushf
aaa
imul
xor
inc
out
icebp
push
lret
ret
xchg
inc
dec
jmp
add
es
cmp
nop
mov
push
call
in
mov
push
dec
sub
add
out
fiadds
rolb
pop
jno
xchg
shl
xchg
dec
leave
or
fst
and
mov
shll
pop
xchg
mov
add
inc
adc
or
int3
js
and
jne
ficoms
ds
ss
push
sbb
and
xor
xchg
sub
daa
sarl
push
xchg
jae
or
push
add
xor
jmp
orl
push
ds
fcmovnb
inc
incb
adc
mov
add
pop
fs
mov
test
pop
enter
das
daa
movb
mov
in
push
sbb
adc
lahf
and
pusha
mov
or
xor
adc
push
inc
insb
or
rclb
xlat
pop
mov
inc
inc
pop
adc
cmpsb
cmp
sbb
jmp
and
or
loop
add
adc
or
stc
lcall
movsl
adc
adc
and
ret
mov
xor
arpl
movsl
pop
imul
je
test
in
in
adc
push
cmp
sub
mov
sub
adc
cmp
cmp
icebp
or
pop
or
mov
xlat
sub
or
pop
mov
push
movnti
add
in
add
andnps
pusha
or
sub
dec
mov
loopne
into
je
or
xchg
aaa
bound
pop
jp
xor
mov
mov
cli
sub
outsl
xchg
push
and
notb
dec
or
mov
dec
sub
pop
inc
imul
movsb
inc
inc
adc
and
addb
jne
je
ret
jecxz
fwait
popl
repz
dec
pop
add
imul
lds
fstl
push
mov
imul
mov
push
inc
cmc
push
enter
sbb
mov
mov
inc
lods
sbb
push
cmp
add
add
jge
mov
push
sub
pop
push
mov
jle
mov
jl
jne
ret
or
call
inc
fiadds
lock
inc
cs
cld
jl
nop
je
lock
and
jmp
add
sbb
ja
mov
dec
inc
jge
mov
jge
push
lahf
nop
xor
cmp
xor
jnp
hlt
mov
iret
xchg
cmp
imul
ror
shll
mov
pop
and
movsl
mov
xchg
sub
xor
cmp
pop
cmpb
sti
mov
sbb
push
pusha
xchg
into
cmp
mov
cmp
inc
push
inc
jge
sub
out
mov
push
sub
pop
idivb
roll
sub
mov
ja
inc
or
cmp
push
add
jns
js
fs
rcrb
orl
push
jg
xor
inc
sbb
fnstenv
cmc
and
pushf
clc
and
mov
dec
jne
xor
pop
or
xor
stos
shl
inc
xor
js
mov
ljmp
dec
out
pop
jmp
cmp
je
mov
test
jbe
push
negb
add
jge
cmp
push
or
adc
pop
push
mov
je
fdivs
cmp
insb
dec
mov
je
cmp
shlb
or
xchg
and
sbb
mov
mov
sbb
sub
adc
jecxz
in
and
or
cs
shl
stos
lods
or
xchg
and
add
and
xor
outsl
test
cmpl
daa
dec
add
out
sub
pop
pop
xchg
icebp
push
in
adc
adcb
sar
inc
incb
add
mov
inc
pusha
add
push
sub
lods
add
cli
in
iret
and
arpl
pop
and
enter
push
sub
stos
push
pop
inc
cmc
mov
out
rcrl
push
loop
sti
cld
fs
popf
mov
add
push
xchg
rcrb
mov
fadd
mov
mov
jecxz
push
cmp
sbb
and
insl
adcl
sbb
adc
dec
inc
sbb
sbbb
fsub
jecxz
cmp
xchg
out
add
mov
add
mov
ret
mov
les
das
and
jmp
ret
pop
sbb
push
adc
push
movsl
sbb
cmp
push
out
add
das
xchg
adc
inc
add
xchg
add
cmp
inc
arpl
or
and
jl
adc
sub
je
sbb
xchg
clc
pop
sti
dec
jne
cmp
mov
jmp
scas
cmp
push
shlb
pop
push
enter
aas
cmp
addr16
or
mov
lret
movsl
mov
pop
cmp
cmp
mov
or
push
push
mov
fisttps
loop
lcall
mov
jmp
je
mov
dec
dec
movl
push
mov
repz
push
pop
pop
pop
sbbl
adc
push
pop
add
jp
pusha
mov
inc
out
xor
push
add
xor
fs
stos
stos
test
sbb
and
ja
add
sbb
rolb
popf
cmp
xchg
add
dec
cmp
add
pop
or
jo
nop
nop
mov
cmp
and
mov
mov
jle
jmp
push
inc
insb
xor
lahf
xchg
mov
sbb
andb
push
pop
mov
mov
xchg
addl
xchg
inc
pop
inc
jne
fmuls
xchg
nop
and
filds
push
or
fildl
addl
pop
or
sub
cmp
push
leave
inc
pop
and
add
mov
ret
pushl
push
cmpsb
les
add
insb
jg
imul
fdivrs
xor
or
inc
pop
pop
or
or
outsl
arpl
bound
andl
mov
dec
push
push
subl
rolb
push
push
fldcw
mov
add
cmp
push
mov
inc
or
or
cmp
pop
sbb
xchg
in
mull
mov
push
cmp
mov
enter
faddl
jbe
push
xor
je
pop
cli
adc
add
sbb
xchg
clc
or
jmp
lea
dec
push
ljmp
aaa
xlat
dec
loope
adc
idiv
out
jl
sub
call
stc
push
in
pop
or
inc
xchg
or
adc
popa
cmpsl
aas
pop
add
jmp
and
jle
jne
loope
lods
or
das
cwtl
jmp
cmp
lcall
sub
xchg
rorb
and
test
pusha
sbb
inc
jecxz
pop
sbb
nop
jno
and
push
push
sbb
jg
pop
mov
push
je
or
push
inc
push
cmp
dec
sub
cmpsb
out
ret
imul
std
sub
ret
jne
cs
mov
push
and
mov
mov
push
push
dec
xchg
inc
push
jo
or
inc
or
dec
inc
mov
mov
leave
jp
icebp
sub
test
jbe
jnp
jne
nop
test
jne
push
or
loope
orl
sub
repz
mov
inc
inc
mov
mov
nop
inc
ror
inc
add
pop
xchg
mov
mov
dec
addb
pop
cmpb
add
fbld
test
mov
frstor
roll
cmp
cmp
xchg
rorl
xchg
loop
push
mov
popa
pop
xchg
sbb
mov
dec
cs
pop
and
xchg
push
adc
adc
xchg
add
dec
lcall
mov
enter
dec
sub
sub
imul
mov
mov
inc
ja
jg
ret
and
xor
push
pop
fnsaves
inc
dec
das
pop
dec
xor
jo,pn
xlat
das
dec
push
jno
rolb
mov
cmp
roll
xor
outsl
pusha
inc
lret
inc
dec
add
push
pop
dec
dec
push
xchg
dec
add
or
or
enter
in
outsb
pop
stos
scas
adc
cmp
and
pop
sub
dec
sbb
in
push
and
cmp
jns
sbb
mov
aaa
or
fisttpl
sub
push
sub
mov
cmp
insb
push
fs
addr16
aam
loope
pop
fnstsw
cmp
cli
clc
dec
and
mov
shl
out
rcrb
bound
or
push
jmp
adc
mov
jg
repnz
or
mov
imul
or
push
xor
mov
rclb
js
cmpsl
negl
rolb
pop
xorb
or
dec
mov
lea
cmp
mov
or
outsb
dec
add
add
mov
sbb
dec
fsubs
pop
pop
push
ret
cmp
inc
add
jecxz
push
in
add
lds
int
mov
jae
stos
or
rcrb
in
inc
xchg
pop
mov
pusha
clc
add
add
add
test
aam
cmpsb
mov
cs
ja
dec
sub
adc
mov
add
hlt
ss
std
cmp
lock
dec
push
enter
push
adc
pop
fiadds
add
or
and
adc
add
mov
mov
test
pop
mov
or
inc
add
push
and
pop
sub
dec
adc
push
inc
andb
in
inc
xchg
adc
push
fxtract
sub
push
imul
mov
push
mov
mov
adcb
sbb
mov
and
mov
sbb
imul
xchg
daa
pusha
sub
lods
add
cmp
je
xchg
jnp
sahf
pop
mov
push
mov
dec
subl
and
insb
outsl
mov
outsb
inc
mov
in
add
adc
inc
loopne,pn
and
pop
sbb
sarb
dec
push
aam
push
out
mov
add
pop
jp
cmp
mov
xchg
dec
adc
adc
loop
add
mov
std
nop
add
pop
ret
lcall
sahf
or
sub
dec
adc
mov
loope
push
push
fs
and
lods
or
or
pop
ret
xchg
and
push
mov
add
mov
pop
xor
mov
pop
adc
inc
pop
push
mov
xchg
out
pop
jge
mov
pop
push
add
outsl
or
push
pop
je
mov
jo
xor
inc
ljmp
aas
repnz
inc
testb
je
xorl
or
push
or
cmp
nop
ds
sub
or
js
lods
aam
out
test
and
sub
dec
repz
xorb
imul
adcl
cmp
xor
or
push
adc
sbb
inc
sbb
ret
inc
pusha
lea
aas
gs
ficomps
push
mov
xor
inc
jge
fs
rcll
arpl
pop
jbe
rorb
push
je
jl
mov
add
jmp
or
ret
pop
mov
testb
pop
je
mov
push
sahf
or
nop
lahf
dec
cs
push
add
or
pop
mov
lcall
es
sub
dec
pop
mov
enter
jo
add
cwtl
pop
sub
aam
daa
push
sbb
mov
dec
adc
or
adc
mov
lods
stos
rcrb
lds
pop
cmp
mov
lret
pop
imul
mov
adc
mov
dec
adc
aaa
mov
aaa
test
adc
pusha
shlb
leave
xchg
ja
cmpsb
test
inc
imul
push
int3
mov
xor
cmp
jns
or
aaa
adc
sarb
sub
aas
push
add
push
or
mov
rclb
daa
cs
je
mov
or
xchg
or
cmpsb
cmpb
pop
aam
aas
or
nop
cltd
nop
out
sti
sbb
mov
mov
dec
and
lcall
int
inc
push
cmp
mov
pop
xchg
andb
cs
dec
jb
xchg
pop
pop
or
cmp
enterw
fdivrs
data16
push
icebp
ja
out
push
add
add
add
or
add
xor
movsl
rclb
pusha
push
out
mov
into
dec
xor
addr16
insb
mov
mov
mov
daa
mov
push
xor
add
pop
xchg
ljmp
add
or
rol
in
adc
leave
je
cmp
mov
push
push
sarb
lock
test
or
repz
mov
or
test
add
in
in
sahf
dec
dec
mov
and
and
xchg
sbb
inc
daa
popa
push
and
fsubrl
pop
dec
and
or
pop
adc
fwait
jle
dec
inc
fsubrl
sbb
testb
or
repnz
sbb
add
mov
sub
pop
pop
xor
das
inc
data16
push
sbb
gs
mov
and
jo
jno
pop
xor
push
add
pusha
call
cltd
mov
dec
mov
and
addl
into
cmovb
pushf
pop
ret
sub
mov
movsl
les
mov
outsl
mov
pop
pop
ljmp
inc
in
and
popa
adc
fidivs
jecxz
cmp
pop
push
mov
fiadds
inc
pop
ret
inc
sbb
jo
or
cmpsl
xor
jl
jne
out
or
or
out
jne
dec
pop
imull
incl
outsl
add
xchg
dec
mov
aas
sbbb
stc
inc
inc
mov
inc
sbb
add
push
dec
clc
imul
enter
push
daa
sbb
jo
call
syscall
in
jne
mov
fcomps
and
psubsw
push
movsb
xor
pop
xor
je
inc
pop
mov
jb
cld
add
pop
pop
inc
add
mov
ret
clc
inc
jp
jl
rorl
lds
stos
pusha
iret
ret
mov
ret
mov
xor
adc
jne
jecxz
sub
int
push
js
push
adc
mov
xchg
add
sbb
sbb
les
jl
jo
add
aad
nopl
or
loopne
or
fcomps
add
inc
jo
adc
xchg
adc
outsb
xchg
push
movb
lcall
loopne
orb
mov
push
push
lret
mov
shl
pop
pop
stos
push
push
pop
out
mov
push
add
iret
mov
inc
pop
adc
adc
aas
xchg
sbb
push
xchg
xchg
push
sbb
sbb
pop
and
or
movsl
or
xlat
cwtl
cmpb
jne
fdivs
mov
mov
jo
jg
test
jl
fmull
fildl
fsubp
xor
pop
or
mov
loopne
and
rorb
adc
incl
gs
in
adc
or
outsb
add
sub
lahf
clc
outsb
or
push
inc
pop
sub
inc
lret
mov
clc
fsts
je
cwtl
jl
mov
push
insb
push
mov
jle
dec
pop
mov
jno
xor
out
shl
and
mov
mov
or
jb
sub
add
inc
add
dec
out
hlt
call
jecxz
inc
mul
xorl
mov
pushf
dec
jmp
inc
roll
and
jne
add
orb
clc
jge
ret
sbb
mov
mov
ficomps
mov
mov
loope
cltd
mov
push
shr
sub
mov
pop
addl
cwtl
inc
das
div
adc
test
add
lea
or
or
fbstp
push
or
add
ss
inc
mov
ja
adc
les
xor
add
add
lea
pop
loopne
add
sbb
cmpsl
jmp
sbb
fwait
pop
mov
add
sbb
dec
punpcklbw
add
push
in
dec
inc
repnz
cmp
sbb
jmp
lret
sub
pop
or
sub
sub
cmp
push
xor
mov
testb
mov
sub
cmp
aaa
call
jge
mov
inc
loopne
in
or
inc
in
orl
push
xor
pop
fs
fwait
dec
or
adc
sub
js
leave
call
repnz
iret
mov
sub
or
or
adcl
and
lock
cmp
inc
add
sbb
inc
add
add
je
cmpl
push
jp
lret
cmp
or
xrelease
sbb
loopne
stos
adc
shll
and
adc
fisubs
cmp
cmp
mov
mov
xor
xor
imul
int3
cmp
pop
inc
enter
mov
xlat
scas
cmp
addl
inc
ljmp
fwait
xor
adc
mov
push
fsubr
outsb
inc
sub
fmull
aas
movsb
test
sbb
or
xor
aad
push
jo
int3
push
pop
test
push
mov
daa
fildll
inc
mov
inc
ds
and
cmpsb
sbb
call
or
xor
lds
outsb
inc
mov
aas
lret
add
pop
icebp
hlt
sub
dec
sub
lret
mov
ljmp
movnti
push
sbb
mov
daa
ss
or
sbb
jne
push
adc
cld
adc
js
sbbl
imul
js
call
ret
data16
mov
popa
sub
iret
mov
xlat
jecxz
inc
ds
loopne
mov
inc
adc
adc
or
hlt
inc
dec
pushf
or
dec
xor
sub
inc
cli
cwtl
push
hlt
and
pusha
add
int3
and
pop
shrb
daa
pop
rolb
adc
add
ret
pop
cmpsb
adc
les
add
and
jb
cmc
pop
add
push
fdivr
mov
adc
mov
test
loop
push
pop
movsb
push
xor
add
add
xorb
sub
hlt
mov
orb
testb
cmc
bound
cs
fucomip
pop
xlat
cltd
xor
pop
mov
inc
or
push
inc
mov
dec
pop
add
sbb
andb
or
cltd
int3
mov
pop
clc
sbb
push
or
xor
mov
push
ds
outsl
sub
shrd
je
push
add
adc
or
add
pop
and
je
lock
je
pop
adc
shlb
insb
rorb
pop
repz
adc
xchg
push
sub
pop
dec
dec
mov
or
cwtl
pushf
or
pop
adc
xor
inc
push
add
pop
sbb
sub
xchg
pushf
sub
in
call
push
or
or
jns
sub
pop
jmp
sub
push
sbbl
add
lods
data16
cmpsb
adc
cmpl
aam
push
xchg
add
push
sahf
cli
repnz
cmpl
sub
mov
or
aad
loop
inc
jae
addr16
jmp
dec
adc
add
mov
fwait
mov
jp
punpckhwd
jmp
loope
scas
inc
in
sub
dec
mov
pop
mov
ss
or
sbb
andb
adc
sbb
cmpb
inc
insb
test
add
cmp
cmp
divb
mov
lret
dec
jle
lock
insl
shr
add
inc
jg
subps
filds
adc
xorb
xchg
imul
jo
repnz
movsb
mov
sub
add
pop
jmp
ret
test
fwait
das
fdivl
dec
adc
in
sub
ljmp
add
jle
push
jmp
xchg
cli
insb
adc
shll
cmp
jne
xor
movsl
xchg
inc
push
test
test
inc
fldenv
jb
add
clc
pusha
mov
insl
sub
scas
dec
popl
adc
and
cmp
push
pusha
mov
inc
adc
lods
sbb
nop
push
test
mov
jne
mov
je
test
add
jmp
push
cmp
lds
jbe
jo
cmpl
or
cltd
add
add
aas
mov
dec
adc
pushl
sbb
or
xor
scas
movsl
clc
xchg
jmp
push
xorb
lock
adc
dec
add
ja
mov
push
ss
xor
pop
aam
cltd
add
rcrb
adc
cmp
leave
pop
pop
xchg
clc
cmp
sub
dec
int
pop
out
lret
es
push
inc
mov
inc
nop
lock
dec
ds
mov
inc
push
dec
xor
cmp
movsl
insl
or
adc
push
rolb
test
adc
dec
sub
mov
pop
sbb
sbb
and
fisubrs
add
sub
int3
pop
inc
push
push
dec
push
mov
xchg
std
mov
fmuls
inc
pusha
xchg
testb
cmpw
add
in
jg
adc
or
arpl
mov
sub
out
xchg
stos
enter
icebp
dec
fcom
aad
movswl
mov
or
or
pop
adc
sub
shrl
jns
aaa
adc
add
xor
sbb
push
call
push
mov
jle
cwtl
xor
test
cmp
sub
fisubrl
pop
sbb
jnp
mov
mov
mov
lahf
xor
int
inc
pop
scas
mov
add
aam
or
xor
aas
hlt
bnd
dec
inc
cs
enter
cmp
or
loope
add
jne
es
loopne
mov
hlt
sub
test
orl
roll
loope
shll
add
add
inc
mov
jbe
sub
lahf
push
dec
test
outsb
lahf
outsl
and
sub
fiaddl
movsl
push
push
sarl
jbe
addr16
and
jnp
lods
call
jp
call
daa
ret
pop
aam
pop
mov
push
rcrb
dec
or
xor
in
les
push
cmpsb
add
shll
mov
pop
dec
xor
js
fisubl
push
sbb
push
xchg
lock
inc
in
decl
add
and
call
test
cmc
stos
add
dec
xor
mov
pop
out
outsl
add
mov
mov
or
xchg
jne
or
nop
xchg
ljmp
sbb
adc
inc
mov
xor
inc
jo
xchg
or
ss
iret
inc
push
les
movb
sub
lods
pop
xor
pop
ret
mov
outsl
sbb
loope
mov
pop
cld
and
je
push
lock
cmp
add
push
or
adc
movsb
pop
ds
adc
jle
adc
or
dec
gs
dec
or
dec
mov
mov
je
inc
clc
push
fdivl
jne
testb
cmc
and
movsb
js
ret
pop
pop
rclb
jne
mov
push
fs
in
push
shlb
push
inc
loop
add
dec
rorb
pop
jl
lods
pop
dec
adc
jp
cld
adc
jb
xor
aaa
sahf
jo
mov
frstor
je
call
mov
push
jo
pop
popa
mov
pop
mov
jl
inc
push
mov
add
mov
and
stos
mov
dec
adc
movsl
push
cmpsl
jl
push
aad
mov
sbb
idivl
lahf
or
mov
pop
mov
add
orb
xchg
cmp
out
pop
xor
jmp
or
pop
push
sub
aam
in
testl
test
pop
dec
addr16
insb
ret
xchg
sbb
int3
push
das
adc
cmc
sub
dec
xchg
xchg
hlt
test
xor
inc
jbe
pop
fistpl
ret
adcl
xchg
dec
add
sbb
dec
stos
mov
jmp
movsb
sub
sub
push
movsb
or
sub
sub
loopne
dec
loopnew
mov
lret
aam
mov
sub
cmpsb
fcomps
xor
je
data16
lods
dec
lock
js
pop
sub
loop
inc
dec
pusha
cwtl
hlt
cmp
dec
dec
push
mov
sub
mov
test
pusha
addb
push
pop
cli
movsb
loopne
mov
andl
sub
adc
or
sbbl
insb
push
xor
sbb
dec
and
sub
xchg
rcr
sub
jl
repz
in
push
adc
stos
lcall
fwait
je
addb
add
push
clc
push
loope
call
push
fs
rcl
sub
push
cmp
add
bound
inc
fs
sub
add
cmpl
in
iret
subb
outsl
xor
cmpb
or
mov
data16
or
inc
jl
dec
rcll
and
pop
inc
add
and
cmp
adc
mov
add
outsb
addr16
pop
push
stos
out
insb
add
pop
inc
mov
leave
rcll
aas
sub
jb
pop
and
inc
fwait
pop
leave
inc
or
in
sarl
sti
push
rclb
and
jb
ret
popa
add
inc
push
fnstenv
push
adc
inc
pop
incb
mov
xchg
popf
sbb
lock
adc
mov
xchg
pushl
xor
lret
sbb
loope
sub
popa
sub
xchg
in
scas
and
inc
sub
fcompl
jbe
mov
adcb
and
add
dec
xchg
mov
scas
sbb
enter
ret
inc
add
std
mov
jg
mov
add
push
inc
jg
mov
jmp
mov
mov
add
insl
cmp
push
add
gs
ljmp
xchg
rorb
or
dec
out
adc
sub
sub
nop
xor
xor
repz
jl
xor
and
jle
or
outsb
arpl
push
je
call
inc
or
je
add
jmp
bnd
in
dec
leave
fiadds
aam
int3
jecxz
sbbb
sbb
xor
jae
out
in
or
data16
push
dec
push
push
dec
adc
pop
xor
push
mov
cmp
add
testl
std
jmp
sbb
lret
add
mov
mov
adc
pop
out
sub
mov
mov
xor
hlt
inc
jnp
add
shlb
jo
xlat
cmp
js
pop
pop
xor
jns
aam
movsb
add
popa
sbb
or
or
hlt
aad
inc
push
push
lock
mov
aaa
mov
jmp
jbe
inc
and
jbe
jb
or
sbb
ret
jmp
inc
add
inc
push
out
sbb
loope
push
sbb
jne
xor
jnp
add
loope
fwait
sbbb
mov
inc
sbb
push
xorl
jne
cmp
addl
sub
call
and
sub
dec
pop
and
push
xor
loop
mov
mov
push
adc
pop
je
cmpsl
jno
sub
out
or
and
and
and
or
and
and
push
push
push
inc
or
mov
add
adc
loop
mov
lods
jo
lcall
test
popf
cmpl
jmp
dec
test
sub
and
cmp
fcoml
mov
jbe
mov
mov
sub
add
fs
insl
mov
sbb
mov
inc
ljmp
dec
adc
mov
jo
mov
adc
inc
loopne
xor
lea
das
inc
xchg
std
ja
shll
call
mov
lock
jmp
movsb
icebp
fs
xchg
rorb
cmpsl
sti
sub
arpl
jbe
pop
nop
neg
cld
push
jne
shlb
pop
mov
and
and
enter
sub
pop
fnstsw
xor
stc
sub
hlt
mulb
sbb
mov
hlt
jl
mov
repz
xor
testl
cmp
loop
mov
cmp
xor
outsl
sbb
gs
push
hlt
or
push
inc
out
xor
iret
loope
add
dec
add
mov
inc
push
shrl
and
lahf
cmp
jnp
sti
pop
lahf
pop
push
fcompl
adc
adc
adc
xor
movd
lods
pop
push
mov
and
and
dec
push
in
jns
addr16
nop
daa
mov
mov
inc
setg
jmp
pop
mov
inc
add
inc
add
cmp
setle
imul
and
adc
movsl
dec
mov
cld
push
pushf
sub
popa
cld
mov
sbb
rcl
rolb
dec
mov
cmpb
in
sti
pop
mov
popa
ljmp
lret
nop
add
ffreep
mov
inc
lock
pop
inc
mov
push
inc
sbb
sub
fs
test
and
addr16
jbe
push
ret
push
pop
xor
cwtl
add
in
mov
je
adc
cmp
pop
jle
nop
add
orb
fmuls
ljmp
aam
mov
xorl
out
push
mov
sbb
sbb
fmuls
std
add
in
aaa
enter
lock
add
mov
das
dec
xchg
gs
aaa
pusha
inc
or
and
cld
and
sbb
jne
push
or
icebp
mov
xor
add
test
js
or
jl
push
test
jb
sub
xchg
sbb
or
add
push
dec
mov
pop
add
pop
das
jnp
pop
add
lock
sbb
cmp
ja
push
imul
out
cmp
outsb
jl
mov
xor
jns
add
or
pop
jle
sub
lods
or
xor
paddsb
adc
push
sbb
sub
adc
cmp
adc
xchg
lea
sub
fs
repnz
pop
mov
insb
or
cmp
and
jnp
inc
mov
push
mov
pop
lcall
jae
repnz
push
lahf
mov
shrb
push
sub
sub
je
inc
ret
in
aam
xchg
inc
cmp
sbb
stos
pop
and
addl
mov
cmp
pop
lods
or
arpl
cmc
sub
sbb
subl
pop
loop
pop
cmp
jne
pop
call
add
add
cwtl
xchg
setl
sub
add
jo
cmpb
mov
sub
and
adc
pop
iret
jp
shlb
dec
or
dec
push
cmp
inc
into
add
sbb
jo
jge
push
sbb
add
lret
pop
sub
rcll
enter
iret
mov
xor
add
inc
jle
andb
pop
lock
ljmp
sub
addr16
cmpsl
jne
inc
jns
inc
pop
add
push
ret
adc
push
adc
cmp
pusha
js
inc
fcomps
adc
xchg
pusha
cmp
cmp
jne
push
out
inc
es
inc
ja
add
adc
pop
inc
dec
dec
cmp
lock
mov
fildll
pop
cmpsl
sbb
call
push
cmp
cli
push
push
jmp
pop
push
xor
inc
xchg
mov
pop
lahf
outsl
push
or
outsb
dec
outsl
pop
clc
pop
adc
add
enter
add
jns
sar
pusha
and
inc
mull
repnz
cmpsb
or
iret
test
mov
adc
jbe
mov
gs
pusha
nopl
es
or
push
jnp
jo
fistpll
inc
jle
inc
or
test
js
lods
sarb
incl
and
jne
and
jb
ds
mov
jl
mov
ret
clc
repz
pushf
fwait
or
push
dec
jno
ret
bound
push
cwtl
and
dec
pop
xorb
inc
push
and
call
xor
sub
sub
shl
lcall
aad
push
dec
xor
add
mov
push
jno
sbb
rcrl
mov
xor
add
sbb
mov
pop
sub
imul
cs
in
cltd
cmp
lcall
add
aas
mov
pushf
inc
mov
rorl
loopne
mov
pop
and
rol
cmp
orb
jg
adc
fsubrp
inc
nop
push
xor
pop
xor
push
adc
push
xchg
mov
into
jg
pop
add
das
leave
jbe
jne
push
xor
scas
test
rolb
add
dec
and
cltd
mov
and
mov
mov
inc
sbb
sbb
popf
rclb
int
push
dec
jne
or
sbb
sbb
adc
test
sub
ret
jl
je
shll
and
lret
mov
test
xchg
pop
cmp
sbb
inc
adc
outsb
js
mov
inc
adc
push
sbb
dec
or
iret
fwait
cmp
mov
aas
jmp
adc
jmp
lds
jbe
mov
filds
xlat
and
lods
test
arpl
add
mov
adc
clc
call
jmp
icebp
sahf
inc
and
cmpl
jns
mov
ss
add
push
or
pushf
or
sub
mov
mov
dec
in
daa
xchg
call
xor
dec
ret
and
popa
inc
sub
movzwl
or
scas
jbe
test
jo
inc
mov
insl
jb
mov
dec
add
xchg
xor
and
sub
sbb
in
jge
pop
pop
and
and
and
popa
mov
cmp
dec
filds
orl
pushf
and
popa
add
xor
imul
adc
jo
add
cmp
sub
es
fsubl
rolb
cmpl
inc
and
movl
lea
mov
sub
je
orl
xor
or
pop
adc
sub
call
movsb
pop
sarb
push
inc
dec
shll
adc
mov
pop
fcompl
icebp
mov
and
or
push
pusha
xchg
in
dec
add
add
mov
ss
mov
xor
dec
and
push
and
dec
mov
les
test
into
loopne
jbe
inc
call
pop
in
adc
adc
cwtl
lock
pop
xchg
nop
aam
testb
insl
add
pop
add
and
jmp
inc
dec
nop
jmp
ja
pop
clc
mov
lcall
add
or
pop
add
scas
inc
pushf
mov
jo
rclb
pop
mov
mov
mov
push
inc
xor
and
mov
aas
add
cwtl
cmpsb
dec
mov
imul
xlat
mov
sub
pushf
mov
bound
xchg
testb
mov
sahf
nopl
icebp
fnstenv
repz
fsts
mov
fcoms
xor
and
outsb
clc
adc
ret
and
fwait
xchg
jns
inc
incl
sbb
nop
fwait
push
in
jno
out
push
or
adc
cwtl
data16
cmp
and
adc
cwtl
mov
lahf
jbe
shlb
call
sbb
sbb
inc
jmp
daa
fs
mov
or
xchg
jnp
popa
sbb
insl
mov
lcall
stos
in
xchg
clc
inc
inc
cmp
mov
test
js
orl
push
or
js
lea
mov
adc
mov
das
xchg
jl
dec
push
pop
aaa
loop
sub
inc
imul
pop
clc
cmpb
js
add
mov
popa
jne
cmp
xor
pushf
mov
in
or
jle
les
pop
jmp
addl
enter
jns
jns
and
adc
leave
push
jnp
adc
test
iret
mov
jmp
adc
mov
adc
mov
sub
ja
fs
sub
adc
pop
sub
push
adc
pop
loopne
arpl
and
fwait
test
jle
mov
add
cmpsb
dec
andb
js
sbb
cwtl
movsl
sbb
jl
sub
pop
lcall
mull
mov
lds
repnz
fiadds
jecxz
mov
div
fiadds
shl
fdiv
pushf
mov
addb
xor
lahf
addr16
mov
andl
sub
inc
dec
jnp
push
in
pop
fsubrs
insb
adc
or
mov
adc
push
xor
dec
pushf
out
fcmove
mov
nop
xchg
icebp
test
push
mov
pop
outsl
je
popf
add
push
mov
or
cs
scas
gs
dec
icebp
mov
cmpl
adc
mov
and
repnz
xchg
or
jne
int3
ret
call
inc
sbb
xor
inc
sbb
shll
or
push
or
test
out
je
xor
hlt
test
lds
inc
rorb
shr
mov
or
mov
je
mov
cmpsb
cmp
je
cmp
and
and
dec
int
mov
add
mov
mov
add
lock
jmp
je
ret
sub
xlat
mov
and
mov
or
mov
mov
xor
mov
je
fisttps
arpl
inc
mov
push
pop
and
sbb
push
and
add
cmp
pop
xor
inc
cmp
mov
mov
daa
add
sub
mov
cltd
sub
ja
inc
inc
mov
ret
push
out
inc
ljmp
aam
pusha
lret
sbb
dec
daa
mov
cmp
or
add
push
inc
mov
rcrl
push
mov
frstor
clc
add
pop
cmp
movsb
call
mov
adc
popa
mov
push
rcrb
xor
inc
add
repz
xchg
hlt
sub
and
gs
movsb
xor
pop
in
mov
sub
lcall
mov
xchg
pop
pop
or
scas
ljmp
outsl
aas
popa
roll
inc
loop
lods
mov
sub
lods
daa
insl
cwtl
ljmp
ljmp
pop
mov
adc
pop
xor
lock
sub
and
xchg
pop
outsl
jo
adc
or
mov
js
sbb
adc
lcall
pop
and
push
mov
cmp
test
daa
push
cmp
js
sbb
call
pop
xor
ljmp
and
adc
mov
sti
enter
popl
mov
insb
idivb
cmp
jmp
pop
dec
test
and
test
jno
cmpl
test
in
add
mov
repz
test
daa
fbld
jo
mov
push
cmp
adc
jmp
sbb
jmp
dec
shlb
sbb
sbb
cmp
and
or
and
inc
ss
cmp
mov
in
jle
dec
dec
fldl
xlat
sub
test
lock
rcll
into
jle
hlt
in
das
jb,pn
add
jmp
cwtl
std
adc
movl
jecxz
fs
pusha
loopne
fs
movsb
push
cmp
adc
imul
cmp
inc
imul
pop
dec
push
filds
jno
lret
js
jno
inc
clc
or
sbb
inc
add
call
pop
repnz
sbb
fsubr
adc
adc
inc
inc
andb
rcrl
shll
jmp
jl
pushf
mov
push
sbb
movsl
dec
ds
test
adc
rorl
inc
or
sarb
cmp
mov
js
and
loope
sbb
inc
xchg
cwtl
test
test
insl
xor
sub
je
inc
sbb
or
and
xor
pop
cmp
push
cmp
adc
mov
xor
lret
fwait
test
gs
pop
fcomps
xchg
cwtl
movl
mov
stos
mov
outsb
popa
adc
sbbb
mov
or
rcll
mov
movsb
jl
sub
subb
fildll
rcr
shlb
fbld
stos
xchg
push
sahf
cmp
inc
std
movsb
add
call
inc
cmp
flds
add
pusha
add
adc
nop
inc
dec
mov
inc
dec
je
daa
sbb
shrb
mov
pop
rclb
mov
pusha
movb
jmp
jbe
sub
dec
mov
movsl
sarb
mov
insb
rcrb
shlb
scas
inc
imul
or
dec
cmp
mov
xor
mov
nop
adc
push
mov
push
sbb
fldenv
mov
dec
stos
sbb
or
popa
js
in
dec
or
push
fnstsw
pop
jns
mov
or
inc
fwait
inc
test
jo
lods
dec
sbb
and
add
outsl
cmpsb
sbb
pop
sti
in
push
xchg
or
hlt
inc
jmp
jg
or
stos
test
push
mov
add
ss
jno
pop
lock
test
in
add
dec
mov
xchg
loopne
hlt
test
negb
in
mov
and
push
and
lock
sbb
mov
pop
pop
setae
jmp
lock
mov
repz
ja
scas
lock
cs
rolb
cmpb
jo
jge
jecxz
inc
cmp
sub
inc
pop
mov
ret
jp
je
sbb
mov
fsubl
push
sbb
push
push
sbb
cwtl
and
sarl
arpl
lahf
popf
inc
adc
repnz
mov
mov
dec
pop
jb
pop
sar
pop
dec
jmp
and
push
jns
test
pop
mov
aaa
inc
and
bound
aas
mov
push
xchg
shrl
adc
fs
sbb
iret
shl
mov
stos
mov
sbb
mov
das
jb
stos
inc
aaa
rcl
rolb
push
outsl
and
push
inc
test
push
test
insl
add
daa
aas
sbb
inc
nop
les
mov
cld
shlb
sub
xor
xchg
and
repnz
or
dec
add
fildl
repz
sub
inc
or
scas
sbb
cmp
mov
aaa
rcrl
bound
mov
das
cmp
je
sbb
loop
xchg
sahf
sub
jne
push
rcrb
push
pop
call
pop
jp
add
scas
inc
jp
loopne
sbb
adc
mov
xchg
xchg
out
mov
inc
mov
dec
fimuls
push
sbb
shlb
dec
pop
scas
mov
and
daa
test
push
clc
sub
rcrb
adc
andb
mov
orl
xchg
or
ret
adc
fistps
pusha
jl
add
xchg
setb
cwtl
repz
mov
xor
xchg
mulps
test
pop
sbb
add
mov
cli
cmp
inc
pushw
dec
mov
hlt
jae
mov
and
or
stos
movsl
popf
test
mov
lret
sub
je
movswl
mov
sbb
mov
or
sti
pusha
sbb
js
pop
push
in
jns
cmpsl
js
add
jns
loope
sbbl
push
scas
repnz
inc
pop
daa
subb
dec
cmp
xchg
scas
xor
xor
out
add
daa
xchg
nop
loope
mov
xchg
jecxz
mov
jle
add
cwtl
cmp
out
cld
mov
jne
shll
mov
test
cmp
cmp
movsl
rolb
ret
jbe
adc
aam
pop
push
jae
lahf
jnp
shlb
xchg
adc
clc
add
in
jne
nop
xlat
inc
movsl
fs
jle
inc
add
cmp
or
popf
inc
cmp
and
add
sub
xor
sbb
sub
dec
or
xor
inc
or
pushl
xchg
shlb
enter
mov
adc
add
or
mov
sub
pop
mov
xchg
inc
ja
lcall
addr16
aam
pop
in
das
sbb
aaa
jno
sarl
movsb
pop
filds
punpcklwd
or
mov
mov
aaa
ret
pop
orl
psubb
iret
push
inc
inc
cmp
jmp
in
adc
cmp
ret
push
fwait
add
push
das
inc
xchg
adc
lcall
int
mov
jb
cld
xor
test
dec
rcrl
lea
addr16
pop
pop
sti
cmp
push
adc
popa
sbb
scas
aam
xor
lds
cmp
jne
push
insl
push
dec
std
mov
out
push
mov
pop
ja
int
sub
mov
lret
daa
adc
mov
and
subb
mov
adc
inc
xchg
jne
inc
add
and
mov
jecxz
daa
popf
push
add
push
adc
inc
mov
nop
xchg
cmp
wrmsr
push
mov
sub
or
and
or
sub
in
xor
cld
mov
mov
push
xor
insb
jno
sbb
arpl
xchg
dec
sub
test
inc
cmp
and
adc
pop
sbb
add
cmp
or
mov
ftst
xor
push
xchg
ja
cmp
sub
adc
add
adc
iret
xor
push
pop
push
mov
cmp
and
sbb
dec
iret
xor
fdivrl
inc
add
mov
cmc
push
ds
pop
sbb
incl
iret
inc
or
test
inc
shll
inc
or
xchg
inc
add
lea
jecxz,pt
jo
and
mov
or
inc
ljmp
dec
xchg
and
and
mov
jg
push
xchg
adc
sahf
fcomps
nop
pop
clc
xor
xor
sbb
cmc
push
gs
pusha
loopne
in
xchg
pop
mov
inc
xor
sbb
and
fwait
adc
adc
dec
sbb
dec
xchg
mov
addb
enter
iret
ljmp
clc
mov
clc
fistpll
adcl
or
test
pop
iret
xchg
sub
adc
inc
andl
jge
aaa
mov
xor
lea
shrb
rcrb
pop
dec
cmp
arpl
pop
cmpsb
sbb
add
ja
test
sub
add
and
dec
or
dec
test
add
adc
push
and
push
mov
aas
mov
test
std
mov
dec
dec
fcoms
pop
rclb
jbe
and
fadds
sbb
pop
std
or
je
mov
sub
cmp
enterw
das
fst
loopne
fnstcw
pop
inc
pusha
std
inc
sbb
aaa
push
jbe
pop
add
pop
sub
or
push
xor
stos
add
addl
add
ret
push
add
or
popa
adc
xchg
out
xor
cwtl
pop
cmp
jnp
enter
xor
fidivs
movb
ret
jle
mov
nop
in
xor
sub
arpl
mov
jns
mov
and
jp
movsl
subl
test
jne
adc
js
std
xorl
idivl
cli
add
popa
mov
mov
ret
les
push
cmpb
adc
dec
dec
pop
outsl
into
adc
iret
jle
cmpsb
mov
cmp
xor
sbb
das
es
pop
enter
cmp
pop
push
or
sbb
and
rcll
xchg
es
sbb
mov
pushf
test
jno
sbb
push
and
sbb
jg
movsb
mov
push
mov
jmp
jo
lods
repz
mov
mov
loope
dec
mov
push
hlt
jb
sbb
jecxz
xchg
popa
js
scas
inc
mov
daa
into
lret
cmpsb
xor
xchg
cmp
pop
sarb
push
outsb
xor
push
jbe
and
das
dec
pushf
mov
xor
inc
xchg
cmpsb
sbb
js
push
loope
cmpsb
test
mov
movsb
sub
les
ret
cmp
sub
and
outsl
fidivs
push
xor
jns
movsl
rcrl
xor
lock
mov
je
dec
and
or
std
add
push
push
push
stos
sbb
jp
das
xorb
or
mov
ds
cwtl
cld
jmp
pop
nop
adc
xchg
xor
testl
aaa
jno
or
mov
add
push
sarl
cmpl
xor
jb
or
test
pop
cmp
jmp
rol
or
xlat
or
push
into
stos
jne
lods
mov
jg
adcl
aam
adc
pop
xor
fwait
movsl
cmp
cmp
cltd
dec
xor
add
pop
inc
or
arpl
inc
adc
cmpsl
inc
mov
jl
popf
mov
ret
pop
sub
sbb
rclb
mov
push
addl
sub
out
add
push
add
xchg
mov
pop
add
xorb
mov
jp
stos
sbb
adc
cs
insb
adc
stos
add
mov
clc
sbb
rep
mov
shrb
or
je
adc
pop
jmp
add
push
les
popf
add
or
out
jl
rorb
add
inc
push
sub
push
push
mov
shll
adc
fists
fiadds
add
popa
add
add
pop
inc
push
es
pop
dec
push
sbb
pushf
pop
test
add
adc
iret
adc
ss
jns
test
mov
pop
clc
insb
or
mov
push
jne
sti
jo
adcl
and
and
and
addr16
repz
adc
je
xor
jecxz
jne
push
push
mov
es
sub
cmp
cmp
inc
aam
addl
js
mov
add
dec
daa
popa
jo
movb
xchg
lahf
xor
pop
fwait
push
sub
sbb
addr16
and
movsb
sub
lds
adc
jecxz
callw
das
icebp
xor
push
into
das
xchg
addb
and
xchg
dec
arpl
inc
loop
add
mov
jge
xchg
push
push
cmp
cld
mov
sbb
inc
jb
je
cld
cmpsl
jno
addb
add
sarb
sbb
dec
jmp
sub
sbb
push
loop
mov
or
mov
insb
mov
push
add
ss
pop
int3
enter
add
test
xlat
ds
jle
push
dec
dec
mov
jmp
lret
jne
dec
jo
ds
out
mov
cmc
out
add
push
inc
pop
add
test
adc
int
jl
cmp
sbb
xchg
rcr
sub
mov
adc
mov
or
sarl
sarb
inc
sub
loopne
add
les
cmpsl
add
lret
push
scas
and
pop
add
negl
lea
daa
mov
ret
mov
jmp
sub
and
mov
aad
sbb
sub
pop
jp
sbb
sub
xchg
pop
gs
hlt
sub
mov
xchg
lea
sub
mov
negb
dec
je
push
arpl
popa
add
mov
jno
test
push
in
and
fs
imul
jg
cwtl
sub
sub
sarl
rolb
dec
and
sbb
sub
pop
sbb
adc
mov
addl
sbb
dec
and
ljmp
sbb
sbb
dec
jp
xor
lods
rol
jmp
lahf
roll
adc
inc
mov
add
ljmp
jne
hlt
jne
xor
daa
push
xorb
call
xlat
pop
rorb
mov
sbb
lsl
pop
mov
cmp
or
inc
jo
xor
push
ss
push
and
cltd
cwtl
repz
ljmp
pop
push
insl
cmp
aaa
clc
faddl
mov
or
loopne
adc
push
fs
sub
adc
push
sub
or
jle
testb
push
push
test
or
data16
jle
adc
jl
es
mov
adcb
test
inc
adc
push
mov
lahf
cmp
ds
outsl
pop
xor
sub
pop
sub
rolb
cmpsl
imul
cmp
rcll
punpcklbw
xorb
outsl
inc
xchg
shufps
in
mov
ror
ljmp
mov
sub
loop
int
aas
xor
inc
xchg
in
inc
push
js
ds
arpl
loopne
add
mov
data16
adc
sbb
push
pusha
and
sti
xlat
lods
xchg
mov
pop
pop
test
xor
mov
ret
push
cmpsl
cmp
sbb
mov
jae
cmp
loop
jae
push
iret
movb
test
pusha
cmp
stc
sub
mov
pusha
pop
clc
idivl
enter
stos
xchg
cmpsl
das
mov
add
jmp
adc
xchg
add
add
test
xchg
xchg
or
cs
adc
es
hlt
je
into
adc
or
push
and
in
pop
xor
or
pop
dec
cmpsl
addb
popa
loope
add
addr16
rolb
nop
jge
adc
xchg
inc
sub
dec
add
fcoml
mov
mov
loop
push
cmpsl
test
push
pop
cmp
add
sbbl
xor
inc
mov
mov
enter
mov
pusha
dec
jne
xorb
adc
inc
sbb
popa
hlt
xor
in
mov
mov
mov
mov
mov
cltd
loope
add
fwait
pushl
mov
sub
mov
addr16
sub
lods
sti
jne
lock
ret
invd
or
out
inc
jb
mov
mov
jns
xor
and
cmpb
adc
or
out
jbe
xor
sub
jge
sub
xor
add
rcrb
int3
push
es
mov
add
repnz
adc
xchg
popf
les
jbe
xor
sbb
and
cmp
mov
sub
add
orb
xchg
or
cmc
lock
test
pusha
xor
pop
shlb
push
aas
idivl
lods
and
test
add
push
test
pop
push
movsb
mov
jns
adc
mov
outsl
dec
rcrl
or
adc
jne
sbb
or
cmp
ja
sbb
or
insl
or
cmp
pop
stos
pop
add
add
xor
test
add
ja
mov
mov
lahf
stos
sahf
movsb
pop
xchg
mov
out
inc
bnd
inc
and
std
xchg
insb
stos
sub
push
dec
dec
scas
sub
xchg
hlt
dec
cmpsl
sub
pop
in
ret
pop
add
rcrl
adc
clc
clc
xchg
out
shl
or
in
or
lret
or
insb
popa
adc
push
test
fmul
fmul
and
movsl
aam
xor
mov
push
inc
cltd
dec
int3
push
aam
cmp
test
mov
lods
lea
cwtl
and
xchg
popf
add
push
add
mov
lret
or
push
movb
mov
push
or
fdivl
pop
fdivl
rclb
inc
inc
pushf
and
xor
cmp
sub
shrb
or
sahf
insl
add
adc
cs
jnp
into
dec
mov
dec
mov
inc
loopne
repnz
mov
mov
cmpsb
repnz
push
dec
or
pop
mov
push
mov
sub
ret
fdivrs
pop
jmp
xor
jno
call
sbb
dec
dec
or
loopne
push
cwtl
outsb
push
adc
cmpsl
xor
mov
mov
neg
jle
adc
push
sub
arpl
sub
mov
inc
push
mov
cmp
fmul
adc
pop
movsl
or
mov
into
adc
test
pop
push
mov
push
loopne
xchg
sbb
mov
jle
mov
cmp
and
movsb
imul
jne
sbb
xchg
cmp
clc
xchg
dec
mov
sbb
shlb
dec
mov
and
rcll
enter
add
rorb
push
das
mov
sub
notb
sahf
add
mov
std
cs
adc
cmp
das
mov
or
in
fimull
push
enter
xlat
adc
jge
dec
sub
loope
cwtl
popf
inc
stos
repz
sub
repnz
add
sbb
test
rorl
aam
push
cmp
mov
adc
fs
mov
orb
lds
xchg
jno
sbbl
dec
mov
cmp
pusha
sub
imul
or
mov
ljmp
sbb
xlat
and
in
es
jmp
jp
inc
push
mov
into
mov
inc
dec
test
push
aaa
mov
pop
mov
pusha
jle
mov
fistl
pop
inc
dec
or
mov
jl
inc
faddl
cmp
adc
xchg
popa
push
clc
sbb
je
xchg
sub
test
fmull
dec
rcl
int3
hlt
add
mov
push
daa
adcb
mov
xchg
adc
xlat
xchg
push
or
push
pop
cmpb
addr16
addl
imul
sahf
insl
movsb
add
add
int3
xchg
adc
pop
add
inc
or
jmp
or
adc
gs
mov
xrelease
aad
fs
add
mov
mov
mov
leave
mov
ret
lea
mov
inc
dec
mov
jae
cli
mov
dec
jne
lea
fmuls
lea
dec
lcall
sbb
lahf
and
sub
push
add
mov
and
sbb
je
es
pop
aam
add
add
test
jbe
adc
sub
sbb
int3
arpl
push
or
adc
loopne
cmp
adc
std
or
movsl
sub
enter
or
arpl
test
dec
dec
fs
cmpl
or
add
lods
aaa
jg
mov
xor
mov
imul
call
mov
movsl
cwtl
cmp
jno
pop
add
in
sbb
stos
add
cmp
aaa
sbb
mov
cvtps2pi
test
addl
sbb
jne
and
xor
inc
ja
lods
inc
sub
push
fsubrs
or
jnp
push
pop
add
xor
push
dec
xlat
inc
or
and
mov
or
decb
sub
jae
int3
add
clc
sbb
adc
out
cmpl
inc
add
pop
ret
ud0
out
adc
sub
sbb
inc
jl
sbbb
ja
test
fwait
push
rorb
inc
pop
jmp
sbb
sub
or
adc
mov
lahf
inc
out
pusha
adc
sbb
testl
cmp
pop
jne
mov
pop
push
and
or
ljmp
jmp
mov
dec
mov
mov
inc
clc
cmp
call
push
sahf
pusha
in
cmpsb
aas
cmp
imul
fcoms
out
mov
ret
push
push
or
pop
addr16
add
inc
cmpsl
lret
xor
jecxz
xchg
add
mov
mov
xchg
dec
push
or
pop
jp
dec
dec
addb
jge
clc
adc
sub
fildll
in
inc
aam
ja
mov
mov
add
mov
or
dec
sub
insb
je
jp
xlat
adc
mov
aad
add
adc
dec
clc
fbstp
test
push
shlb
cltd
loop
mov
int3
sbb
add
mov
test
inc
xorl
movsl
repnz
lock
in
mov
or
or
and
or
out
inc
add
pop
jbe
dec
or
sbb
insb
scas
mov
xorl
push
jns
push
adc
pop
sub
add
xor
add
jbe
push
stos
or
or
sub
rcrb
inc
or
iret
pop
mov
add
xor
jmp
hlt
jb
cs
adc
and
add
xor
mov
pusha
pop
cmpsl
repnz
adc
fnstcw
xor
or
add
push
pop
das
in
mov
xchg
pop
ret
push
mov
add
dec
nop
push
inc
sbb
fs
push
inc
pusha
out
dec
jae
call
pop
xchg
call
pop
fwait
imul
push
inc
push
or
test
rol
popa
js
ret
les
inc
cmp
xchg
jge
xchg
rcl
add
dec
jno
mov
push
lret
inc
mov
add
loopne
rcl
and
sub
cmpsb
movsb
xor
sub
sub
mov
xor
sub
stos
dec
cmp
xchg
mov
push
and
lahf
and
push
andl
stos
add
or
popa
add
and
sbb
in
adc
rclb
leave
or
add
iret
push
inc
dec
das
sbb
stos
or
test
or
dec
movsb
pop
push
cmpsl
fidivrs
test
dec
mov
inc
loopne
arpl
push
test
pop
jmp
cmp
add
ds
add
es
ja
ret
inc
jp
inc
aam
loopne
mov
movsl
sbb
pop
dec
ja
loopne
das
fwait
ds
mov
xor
clc
sub
mov
push
cld
in
push
and
add
hlt
add
addb
decl
andl
add
out
nop
push
adc
or
lea
rorl
push
push
and
push
inc
push
in
push
mov
pop
push
cli
cmpsl
in
jae
and
pop
sbb
cmp
outsb
dec
add
sub
push
ds
adcl
js
dec
mov
cmp
add
lahf
mov
decb
test
and
jecxz
push
jg
sbb
and
push
dec
pusha
sub
adc
dec
push
in
cmp
ret
fisubrs
xchg
aam
js
mov
or
sub
sub
aam
pop
rorl
cltd
pop
ret
test
sti
cmpl
je
pop
mov
mov
mov
sub
test
ret
lret
or
xchg
test
imul
rcl
cmpl
test
push
repz
popa
bound
push
fnstcw
push
loopne
flds
or
pop
inc
adc
cltd
pop
push
xor
decl
das
add
or
das
or
and
cltd
int3
sbb
and
inc
rolb
pusha
lods
cmpb
xor
scas
add
or
add
loop
mov
or
xor
add
std
or
pop
les
sub
outsl
andb
push
inc
aaa
rolb
inc
cmp
enter
cmp
or
jno
xorl
adc
dec
sub
pop
or
inc
push
sbb
or
cmpb
and
dec
wrmsr
inc
fs
dec
mov
adc
cmp
mov
lods
stos
push
js
add
xor
fsubrp
jge
mov
or
mov
lahf
mov
push
out
add
mov
push
jmp
mov
push
daa
daa
and
and
sbbb
rclb
or
dec
pushf
outsb
mov
cmp
popf
xor
gs
push
add
pop
mov
enter
adc
leave
subl
push
mov
popl
cmp
cmp
sub
jecxz
and
xchg
cmp
pop
cmp
push
push
or
gs
loope
xor
clc
push
inc
sbb
pop
sbb
jl
sub
addr16
mov
pop
jno
inc
fadds
flds
sbb
inc
cld
push
mov
pop
jne
fidivrs
and
dec
jne
into
inc
or
inc
inc
push
fimuls
fcomps
adc
jmp
stos
and
xlat
adc
mov
push
in
push
decl
sub
jmp
aam
ljmp
adc
fs
mov
roll
push
stos
jmp
adc
sbbb
shl
pop
pop
sbb
fcompl
mov
push
adc
and
push
sub
in
imul
jmp
or
movsb
mov
push
rorb
add
cmc
push
or
gs
mov
daa
lea
or
repz
test
adc
jl
test
sub
mov
enter
xor
add
shll
mov
mov
lret
xor
and
mov
cmpsb
mov
faddp
xchg
pop
inc
or
mov
bound
aas
pop
mov
sub
aaa
and
decl
push
sbb
loope
cmp
or
lahf
fildl
adc
test
mov
jmp
sub
andl
in
add
dec
push
add
adc
dec
sbb
jp
push
test
js
outsl
or
mov
mov
jp
push
ss
lock
loope
loope
mov
test
pop
sbb
fsts
jo
imul
outsb
push
repz
testb
inc
adc
add
inc
cmpb
adc
push
push
push
jns
cmp
loope
fs
add
inc
rolb
out
rol
movsb
sbb
xchg
add
jle
mov
add
jae
loope
cmpsl
inc
push
scas
lds
push
dec
jns
xchg
lock
cmpb
sub
or
and
add
cmpsb
int3
and
mov
pop
jp
jne
cmp
cwtl
pop
or
and
outsb
push
xor
inc
or
dec
or
iret
cmp
pop
pop
arpl
and
push
cltd
mov
adc
mov
cwtl
imul
mov
jecxz
nop
in
scas
mov
mov
daa
movsl
add
data16
and
pop
sbb
sbb
or
push
pop
push
shlb
or
cmp
or
mov
stos
add
cmp
cmp
sub
inc
sbb
int
or
or
sbb
add
or
pop
adc
bound
mov
mov
add
add
mov
popa
test
outsb
ja
clc
out
mov
daa
xchg
mov
cmp
imul
in
fisttpll
xor
cmp
add
jb
cmp
inc
fdivrl
push
mov
xchg
sub
stos
lock
fxch
test
push
xor
sbb
add
xlat
xchg
insl
int3
in
jo
xor
adc
mov
addl
inc
add
pop
push
shlb
insb
push
dec
insb
sahf
jg
sub
in
fs
add
xchg
iret
add
fdivr
inc
adc
or
pop
pop
push
imul
test
out
mov
push
sbb
das
or
xor
push
push
jmp
pop
xchg
mov
xlat
mov
insb
sub
test
outsb
dec
call
aam
and
sbb
mov
dec
jg
test
adc
xor
daa
icebp
and
xor
gs
cli
nop
add
ja
daa
in
pop
xlat
mov
jg
cmp
xchg
arpl
rorb
push
in
addl
dec
xor
pusha
lock
cwtl
cmp
push
inc
clc
or
fsub
and
add
fs
inc
adc
inc
jge
sub
repz
sbb
or
pop
add
mov
inc
adc
lock
or
inc
or
add
or
jbe
fstl
lcall
add
cmc
or
ror
rcll
inc
shrb
test
dec
jl
sub
jne
xchg
popa
pop
daa
fadds
mov
lds
sub
lahf
data16
sbb
in
fidivrs
dec
jne
mov
ret
mov
dec
mov
jmp
ror
add
xorb
mov
movsb
sti
jecxz
dec
pop
mov
jmp
push
add
rcll
or
dec
rorb
push
into
push
or
cmp
stos
fdiv
cmp
lods
add
test
dec
jle
sbb
push
sbb
loop
fldt
notl
shlb
sbb
jle
arpl
mov
dec
cmp
mov
jo
adc
push
push
xchg
inc
daa
or
mov
fiaddl
dec
and
dec
loopne
add
cmc
jne
inc
mov
or
add
cwtl
add
shl
pop
fs
fsub
push
icebp
cltd
fsubr
rorb
sbb
or
addl
rorl
add
xorl
pusha
test
dec
stc
ja
sbb
inc
loop
in
add
sbb
xchg
cmpsb
sbb
sbb
adcb
pop
adc
adc
cli
repz
mov
hlt
fldl
or
jmp
mov
ljmp
inc
nop
bound
test
daa
lcall
inc
test
xorl
shll
sbb
movsl
pusha
rorb
add
cmp
sub
mov
imul
cmp
sbb
movhps
push
loope
outsb
enter
rcrb
xor
add
ljmp
mov
movl
jge
mov
jne
mov
add
xchg
add
cmp
shlb
mov
cmp
add
xor
xchg
aaa
sbb
clc
sbb
fidivl
xor
push
cmp
rclb
cmp
sub
add
aaa
mov
mov
sub
aas
lret
jo
loopne
jge
ja
add
jne
imul
xchg
jg
mov
jg
fsubr
shlb
jg
cmp
sbb
idivb
loop
cmp
punpcklbw
sti
jmp
cmc
out
dec
add
movsl
jne
movsl
xlat
rcrb
push
push
sbb
mov
pop
dec
mov
mov
adc
inc
test
test
xlat
inc
xchg
push
shlb
rorl
sbb
mov
insb
jne
add
fmuls
sti
inc
add
xlat
mov
inc
and
subb
adc
push
js
sbb
push
sbb
mov
sbb
xchg
mov
aad
pop
pop
in
add
rcrl
xchg
mov
in
ret
push
jns
mov
sbb
pop
or
daa
jne
sbb
lock
addb
shlb
pop
sub
inc
push
jle
ds
adc
jne
aaa
pop
cwtl
dec
rcrb
and
or
push
inc
or
repz
xor
mov
push
in
inc
mov
pop
and
push
insl
xchg
xor
push
lahf
pop
cmp
and
pop
mov
and
or
lret
pushf
cmp
lock
adc
jne
sub
clc
or
xchg
testb
push
adc
mov
xchg
sub
add
lea
adc
insb
mov
mov
pop
insl
push
pop
or
mov
add
add
pop
pop
mov
sub
test
cmp
jo
sbb
xchg
add
or
hlt
rorb
or
inc
sub
or
xor
pop
xor
cli
cmp
add
pop
add
xor
jo
shl
pushf
addb
cmc
or
icebp
add
cmp
movsl
cli
xlat
clc
and
xchg
inc
jmp
fadds
adc
cmpsb
mov
js
mov
sbb
sub
add
jp
xchg
test
sbb
rorb
sub
arpl
nop
divl
and
pushf
or
push
dec
mov
and
movsl
jmp
mov
dec
or
adcb
insl
inc
fiadds
dec
and
adc
xchg
pop
cmp
rolb
inc
jo
sbb
sbb
add
std
jno
inc
add
xor
or
loopne
je
rcrb
or
jmp
push
int
add
sub
inc
mov
andl
cmp
cltd
and
mov
fisttpl
push
rclb
in
adc
pop
inc
leave
cwtl
cmp
cld
xor
push
xlat
dec
add
int3
sub
test
mov
jb
insb
xor
cwtl
and
pusha
pop
inc
adc
dec
popa
jnp
jmp
adc
push
mov
or
adcb
shr
add
sub
adc
inc
call
shrb
push
pop
in
dec
lock
xchg
call
movb
mov
jnp
fiaddl
mov
xor
sbb
xor
mov
mov
stos
and
flds
subb
fwait
ret
add
cmp
fldenv
cmp
nop
dec
subb
lcall
and
mov
push
or
jmp
sub
dec
das
add
add
das
add
jnp
bound
ret
cmc
jae
dec
inc
jno
mov
outsb
push
jg
test
sar
jns
adc
fcoms
popf
push
inc
pop
or
pusha
testl
or
jge
mov
add
inc
popa
iret
popf
icebp
inc
cmp
jl
out
pop
push
mov
pop
fbld
pop
imul
and
cmp
insb
rclb
test
in
insb
dec
push
pop
push
outsl
sbb
imul
adc
rol
js
or
sbb
mov
mov
mov
xor
mov
cmp
enter
push
out
jecxz
xchg
rolb
cmpsl
pusha
mov
and
dec
push
js
mov
jne
xor
push
and
inc
dec
js
loopne,pn
adc
jl
push
hlt
hlt
lock
push
cmp
hlt
push
add
pusha
movsb
dec
pop
es
or
or
iret
push
loope
or
lods
ljmp
or
clc
xchg
sub
push
test
sub
js
dec
mov
and
xchg
or
adc
push
mov
loopne
inc
adc
das
lret
bndldx
adc
mov
ds
mov
sub
insb
in
jecxz
test
fs
xor
sbb
fidivrs
je
jmp
mov
cmpsb
cmp
cs
push
pop
or
mov
out
sbb
imul
orl
push
int3
sbb
jmp
pop
sub
and
sbb
sub
pop
call
sahf
push
rcl
nop
dec
jo
roll
das
xor
cmpsl
inc
dec
repz
filds
dec
xchg
and
popa
add
pop
repnz
add
cmpl
loope
sbb
dec
movsl
sbb
pop
push
sbb
adc
out
cmpsb
cs
sbb
orl
pop
mov
pop
mov
dec
dec
arpl
inc
cmp
sbb
std
test
ficoml
dec
adc
sub
in
add
xor
lds
call
or
imul
push
or
fldt
push
test
add
inc
dec
subl
add
dec
inc
and
pop
insl
cmp
loope
pop
sbb
jp
int
cli
stos
jle
push
dec
pop
icebp
sub
inc
sbb
bound
mov
adc
loop
adc
test
cltd
adc
and
add
dec
push
clc
adc
adc
adc
push
into
or
push
pop
inc
sub
or
daa
dec
and
test
loop
repnz
xchg
ficomps
in
and
sbb
adc
jo
add
dec
and
mov
adc
cmp
adc
xor
inc
adc
pusha
mov
int
pop
rcll
xchg
insb
and
sbb
jne
cmpb
inc
push
lock
and
enter
aaa
jecxz
push
or
adc
jnp
push
addr16
cmp
mov
add
pop
data16
sub
xchg
pop
jne
mov
mov
inc
mov
dec
dec
jae
cmp
jne
pop
cs
cmp
sbb
push
cwtl
mov
rorl
pop
and
movl
loopne
push
lret
imul
mov
and
adc
push
insl
ret
and
push
pop
mov
and
adc
pop
mov
cmpsl
icebp
aaa
xchg
or
cmp
mov
mov
daa
mov
pop
push
or
roll
dec
push
mov
mov
pushf
pop
pop
sub
xchg
cmp
push
add
les
pusha
jb
jp
cmp
dec
lods
cltd
add
addl
arpl
and
and
dec
xor
and
pop
dec
mov
xchg
mov
pop
es
push
adcl
imul
ret
adc
xor
rorl
inc
inc
cmc
sub
and
pop
sub
xchg
mov
add
cmp
mov
push
cli
or
cmpsl
mov
and
ret
insl
xchg
repz
mov
add
cltd
xor
push
adc
dec
inc
adc
adcb
sub
lret
inc
and
push
sti
enter
or
sub
inc
daa
dec
ret
cld
pop
cld
je
popa
xor
in
mov
test
test
or
call
icebp
push
mov
adc
mov
jmp
clc
dec
push
call
out
or
add
fistpl
and
lods
xchg
stos
add
adc
std
mov
aas
and
jle
push
pusha
adc
and
or
imull
fistpl
nop
adc
jg
mov
jge
mov
mov
xor
lock
fidivrs
inc
ss
es
sub
in
push
lahf
and
mov
scas
inc
in
test
adc
push
jb
and
sub
pop
xchg
sbb
fmull
adc
in
cmpsl
and
movsb
outsb
unpckhps
mov
and
and
lods
add
shlb
mov
inc
jae
pop
aas
aad
insb
loop
sub
fs
adc
dec
fdivr
hlt
int3
and
mov
jmp
sub
cltd
jbe
add
jo
fmuls
pop
cmp
push
pop
insb
adc
loop
sub
cmp
cmp
data16
mov
pop
sub
add
flds
mov
pop
jmp
lret
xchg
neg
sahf
fdivl
adc
inc
popa
cltd
lcall
cmp
popf
popa
fildl
or
jb
insl
push
pop
inc
fcmovu
decl
out
sbb
lret
and
xor
fsubs
or
aaa
mov
cmc
pop
xchg
push
xor
popa
add
mov
leave
lods
push
test
popa
push
push
dec
or
and
or
or
popa
inc
andb
je
std
outsb
sbb
cwtl
pop
cmp
jl
fldcw
dec
push
pop
mov
sub
fs
fmulp
jg
jmp
push
push
inc
movsb
lea
jg
xorl
sub
nop
out
es
dec
add
inc
mov
fiaddl
xor
call
sub
enter
xlat
cmp
out
fwait
std
jns
sub
add
jne
mov
cmpl
rorl
dec
in
fstps
jnp
outsb
pop
aas
mov
lock
lret
ds
shlb
push
insb
mov
push
dec
fisubl
push
test
pop
cmp
icebp
mov
jbe
adc
vbroadcastss
roll
icebp
popf
hlt
mov
popf
or
mov
stc
push
dec
les
aaa
je
mov
dec
lcall
movsl
adc
imul
es
mov
fsubl
jmp
imul
push
pop
adc
shlb
in
sti
leave
decl
jl
jbe
sub
and
mov
ret
mov
and
mov
add
sub
gs
loope
movsl
dec
test
mov
test
mov
push
pop
push
loope
add
dec
es
push
and
and
inc
imul
and
adc
mov
xchg
add
cmp
inc
mov
and
inc
xor
push
xor
sti
adc
lret
inc
insb
hlt
test
push
sbb
adc
enter
stc
cltd
xchg
push
or
pop
sbb
push
inc
movsl
pop
sar
lods
movsl
loopne
loopne
inc
lods
lret
imul
inc
inc
inc
and
sub
adc
shll
sub
add
sbb
js
lea
xor
add
jmp
mov
pop
sbb
pop
pop
pop
cld
cmovo
out
mov
ja
cmp
push
pop
jle
mov
pusha
test
adc
dec
cmp
add
jg
adc
aam
pop
dec
call
and
loope
or
or
mov
add
movsb
pop
jae
add
push
pop
test
js
mov
push
or
mov
sarb
mov
fildl
mov
inc
ret
sub
inc
adc
push
rol
shl
xchg
inc
jge
adc
push
and
or
nop
movsl
arpl
cmp
rclb
nop
cs
imul
inc
inc
add
leave
lock
sbb
testb
addr16
mov
push
popa
je
jnp
jo
adc
fwait
xor
pusha
cs
jb
scas
in
sub
mov
ret
aas
xor
xor
inc
add
inc
pop
sbb
xorb
das
dec
int3
insl
cmp
outsb
add
and
in
fsubrl
push
adc
pop
dec
mov
test
add
push
enter
pop
notl
rclb
mov
movsb
cltd
cwtl
sub
pushf
xor
nop
lret
dec
movsb
inc
sub
push
fs
test
nop
mov
jb
xchg
or
movsb
sarb
in
push
cld
nop
enter
mov
push
lahf
mov
push
leave
dec
dec
inc
add
insl
les
les
gs
into
push
fcomi
pop
push
gs
lods
insl
int
and
inc
sti
insl
push
jae
add
in
add
sub
insl
jo
mov
add
das
pusha
sub
dec
inc
in
inc
out
push
outsl
pop
or
inc
xchg
dec
jae
mov
cltd
fcoms
jg
scas
mov
cmp
pushf
cmc
sbb
push
rolb
jb
mov
jp
sarb
dec
les
mov
int
jno
data16
jecxz
sbb
mov
cwtl
in
dec
sti
sbb
jl
or
mov
ret
mov
ds
mov
push
adc
mov
lods
loopne
add
inc
jb
dec
mov
ret
mov
add
cmp
test
or
xchg
pop
xchg
fbld
mov
pop
sub
pop
mov
orl
add
mov
es
push
mov
add
or
cmpb
mov
inc
lods
push
shr
cmc
leave
and
sub
and
add
insl
lods
or
mov
mov
daa
add
or
popa
inc
inc
mov
enter
icebp
inc
mov
enter
mov
add
sub
nop
sbb
pop
imul
sti
cmp
cmp
orb
add
jle
sbb
mov
sub
push
add
aas
mov
sub
in
hlt
adc
jbe
xorl
insb
or
testb
andb
mull
push
push
repz
xchg
inc
and
add
or
adc
pop
outsl
inc
jmp
adc
data16
aaa
ja
outsb
lods
jb
jb
jb
cmp
shrb
xchg
lahf
testb
test
cmp
and
inc
dec
dec
push
and
and
add
sub
jmp
dec
pop
roll
xchg
add
inc
sbb
jo
enter
dec
or
cmp
inc
in
dec
push
pop
clc
sbb
jbe
nop
test
int3
push
adc
pop
push
fidivs
fdivrp
push
pusha
add
inc
mov
les
cld
inc
add
adc
pushf
cld
inc
rolb
jmp
pop
imul
out
stos
insb
ds
fistps
adc
xor
mov
pusha
mov
xchg
xor
xchg
sbb
push
in
adc
pop
and
add
inc
nop
into
cmp
sbb
js
inc
cmp
or
outsb
or
add
stc
pop
and
js
loopne
cli
push
push
test
incl
testb
and
gs
stc
mov
call
sbb
add
adc
cmp
fxch
lods
es
test
mov
movsb
loope
inc
add
bound
cmp
xor
pop
sbb
jns
adc
nop
popl
or
push
mov
aad
and
loopne
movl
fwait
in
pushf
inc
aaa
mov
mov
pop
push
push
and
in
inc
push
es
mov
inc
fcmovne
dec
stos
dec
add
out
cmpsb
js
jl
add
inc
push
insb
popf
or
and
popl
mov
in
dec
add
jne
or
and
mov
into
roll
inc
mov
nop
mov
incl
inc
hlt
push
or
sbb
jns
out
inc
pop
pop
pusha
sahf
out
sahf
fs
dec
lahf
out
jl
test
push
and
xor
arpl
inc
add
jne
cmp
test
in
lods
repnz
cmpsb
pop
push
xor
add
loopne
test
xor
add
add
sbb
rolb
in
xor
xchg
fistps
add
and
in
inc
cmpsl
xlat
mov
sbb
in
pop
jnp
stc
inc
repnz
mov
pop
mov
ss
rolb
push
cmpsb
jo
sti
inc
cmp
lea
inc
mov
stc
jno
jle
and
sub
add
cmp
xor
rorb
add
aad
sbb
sub
loopne
or
push
mov
xchg
or
and
out
xchg
cmp
and
test
adc
mov
inc
mov
sbb
xor
xchg
mov
aas
xor
or
cmpsl
push
dec
pop
pop
inc
xor
mov
sbb
or
or
ds
lahf
add
adc
xchg
or
adc
imul
inc
pusha
arpl
mov
fidivrs
rcrl
and
stos
sarl
fiaddl
sbb
and
xor
xor
adc
adc
aad
cwtl
fwait
mov
mov
push
daa
mov
sbb
cmp
enter
xchg
mov
adc
push
lret
andb
jno
sub
cmpb
nop
sub
pusha
cmpsb
daa
sub
jle
fldl2t
daa
add
imull
inc
push
xor
rorl
loopne
xor
inc
pop
xlat
ret
inc
in
inc
inc
xor
test
inc
scas
mov
mov
shrl
jl
fiaddl
imul
mov
dec
cmp
adc
inc
shlb
xchg
rclb
in
or
cmp
adc
sbb
xor
call
sbb
pop
mov
xor
sbb
sbb
mov
sub
cmp
jecxz
cmpl
sti
clc
enter
stc
sub
xchg
popa
cld
xor
add
xchg
scas
cwtl
pop
mov
mov
sbb
pop
lcall
xor
push
push
fadd
pusha
lea
and
add
adc
push
dec
xchg
push
mov
fcomps
aas
add
push
mov
inc
pop
adc
movsb
nop
add
xchg
mov
rclb
les
inc
insb
je
push
imul
hlt
xor
mov
inc
sub
push
jl
xchg
in
sub
divb
sbb
xor
rcr
fbstp
add
shll
inc
dec
or
mov
cmp
inc
and
push
add
or
ss
or
sti
daa
or
mov
std
call
push
dec
scas
fmull
cmp
sbb
fbstp
imul
jo
lahf
subl
out
xchg
test
push
inc
jo
sbb
cmp
sbb
add
inc
popa
leave
add
mov
sbb
adc
jne
test
or
pop
out
xchg
pop
dec
and
sub
clc
movsl
inc
mov
sub
and
lds
mov
insb
jae
lret
popa
rol
std
imul
in
and
and
pop
pop
inc
push
imul
sbb
test
sub
dec
js
js
dec
add
push
inc
mov
outsb
add
xchg
mov
ljmp
cmp
lods
xor
mov
out
adc
aad
pusha
add
stos
cmp
ror
js
int
sbb
cmp
je
jns
inc
sbb
pop
jb
in
push
cmpl
subb
cmp
je
jne
das
enter
mov
gs
mov
push
enter
inc
sub
mov
mov
mov
jle
popf
adc
mov
xor
push
mov
frstor
mov
subl
adc
mov
or
mov
xlat
adc
push
sub
and
js
dec
mov
mov
ret
mov
sbb
pop
scas
mov
jmp
sub
lods
jge
pop
sbb
or
push
push
je
or
mov
pop
xchg
js
inc
or
push
pop
scas
cmp
inc
xor
cmp
adcl
sbb
pop
out
pop
inc
add
and
loop
xchg
mov
and
mov
and
enter
sbb
es
into
sbb
xchg
jmp
ja
in
push
jns
or
or
mov
ror
xor
push
lods
jno
sbb
add
and
dec
ljmp
sub
loopne
mov
mov
xor
or
push
or
insb
sub
leave
das
out
notl
scas
pop
clc
pop
fcoms
loopne
jmp
imulb
cld
adc
nop
add
lahf
cmpsl
fldcw
xor
push
sbb
push
les
pop
jg
dec
push
adc
dec
loopne
imul
aaa
pop
xor
int
subl
adc
ljmp
dec
int
fmuls
test
mov
push
inc
add
mov
aas
and
movl
adc
push
pop
lahf
push
inc
mov
mov
jecxz
pop
cwtl
mov
loope
sbb
xchg
loope
dec
inc
in
add
insb
sbb
dec
dec
sbb
daa
adc
test
iret
lds
adc
xor
jl
cmp
pop
xchg
lock
jge
push
loopne
movl
cmp
arpl
inc
js
cmp
mov
sbb
jne
add
and
loopne
enter
int3
or
stos
xchg
adcb
jmp
movsb
movsb
push
inc
or
adc
or
push
sub
xor
pop
fcomps
cmp
and
cmp
adc
mov
fsub
shlb
ret
testl
sub
or
pop
aaa
js
jns
sub
pop
mov
cmp
xchg
inc
pop
clc
int3
xor
call
fcoms
fbld
jnp
rclb
sbb
sbb
mov
jl
inc
mov
iret
movsl
xchg
and
iret
std
movsb
mov
les
jg
test
xlat
xchg
aam
loopne
mov
decl
push
sbb
nop
pop
add
icebp
or
push
add
and
js
fs
add
mov
cmp
xor
or
add
add
push
mov
cmp
shll
mov
sub
loop
mov
idivb
mov
jecxz
cmp
rorb
dec
cmp
shlb
int3
jo
cmp
iret
inc
cmove
push
inc
loope
sti
jnp
hlt
xor
and
and
xchg
insb
adc
in
mov
or
sbb
inc
fildl
popf
sbb
mov
adcb
add
cmp
xor
andl
push
es
mov
cmp
in
xchg
and
mov
inc
or
and
insb
jl
or
adc
lret
push
pop
xchg
idivl
cmpsl
and
pop
ret
arpl
ret
dec
sti
sbb
popa
mov
repnz
sbbb
mov
pushf
fcompl
mov
mov
mov
dec
and
xor
fimuls
and
add
mov
add
inc
insb
xor
or
aam
insb
and
pop
add
push
xor
push
push
xchg
jp
dec
push
das
cmp
pop
lret
add
orb
xorb
xchg
add
and
dec
mov
lods
push
push
mov
xor
mov
or
pop
sub
imul
and
add
push
sub
cmpl
jne
and
inc
cmp
lods
outsb
and
pusha
push
in
fstps
nop
push
sub
and
stc
push
adc
fisttpll
pop
mov
shl
xchg
sub
dec
cmp
jnp
pop
inc
push
inc
push
dec
jecxz
inc
outsb
add
push
in
call
inc
sbb
jmp
adc
adc
orb
mov
adc
mov
sti
add
xchg
dec
adc
push
jnp
and
add
add
or
and
xchg
lock
popl
sbb
repz
add
test
xor
adc
out
out
cs
dec
inc
fbstp
int3
divl
out
mov
sbb
popa
pop
lcall
mov
call
or
cli
incl
or
mov
icebp
ficoml
dec
and
idivl
hlt
adc
mov
jl
or
add
and
mov
cmc
xchg
nop
push
ljmp
cmp
insb
aas
jne
mov
lahf
cmp
inc
mov
inc
inc
mov
or
mov
sbb
inc
cmc
push
inc
inc
ret
or
push
cmp
popf
stos
adc
pop
push
sbb
ret
jno
insl
adc
adc
dec
dec
pop
and
lds
lods
sarb
and
mov
lods
cmpsl
and
adc
outsl
arpl
and
inc
sub
daa
sbb
sarb
mov
jl
pop
sub
cmp
adc
ret
dec
push
add
push
ret
cmp
jo
push
mov
ja
and
and
xchg
fdivrs
insb
jg
or
dec
pop
fisubs
outsl
sbb
mov
popf
fsubs
aas
mov
or
mov
sbb
bound
pop
sub
sub
mov
add
xchg
es
jg
add
insl
add
jg
dec
leave
shlb
dec
adc
andl
addr16
adcb
sub
xor
inc
xchg
push
sbb
mov
inc
dec
and
push
out
scas
movl
sub
or
cmp
mov
adc
adcl
adc
inc
insb
popl
nop
xchg
dec
lret
xchg
lods
pushf
hlt
negl
hlt
mov
push
inc
mov
lock
push
mov
sbb
inc
sub
adc
pop
nop
scas
test
dec
or
fists
xor
add
lahf
rorb
add
mov
shll
adc
bnd
and
add
and
sbb
xchg
adc
add
sti
xor
mov
jne
cmpsb
add
insb
stos
xor
mov
sbb
sub
shl
lods
dec
mov
test
xor
mov
lock
xor
adc
ss
in
cmp
test
inc
mov
pop
and
xchg
shlb
xor
movsb
xchg
sbbl
push
pop
jo
call
loopne
dec
in
gs
push
sub
popf
jo
adc
push
mov
pusha
jb
repnz
movsl
add
sahf
inc
imul
scas
adc
jge
sarb
mov
adc
sub
shl
nop
inc
bound
es
dec
in
mov
roll
push
dec
inc
push
loopne
push
xchg
cmpsb
xlat
sub
sub
dec
dec
mov
dec
dec
dec
xor
xchg
addr16
push
popa
push
xchg
xlat
in
outsb
jne
ljmp
lods
enter
dec
rolb
nop
pusha
add
sub
insl
lcall
fdivl
scas
inc
das
test
and
and
push
repz
mov
fistpll
fidivs
adc
push
stos
loope
test
pop
lock
jne
jle
mov
inc
dec
cmp
es
adc
out
mov
or
xchg
cs
ds
dec
repz
xchg
je
inc
xor
jmp
or
sbb
lods
xchg
repnz
in
xor
leave
js
pop
aas
int
inc
sub
push
or
int3
xorl
add
and
scas
mov
cmc
adc
inc
clc
dec
xor
cmp
jne
jl
inc
sbb
dec
mov
or
int3
adc
xor
daa
enter
push
add
inc
and
mov
in
pop
iret
and
push
and
push
mov
and
jne
push
xchg
fs
cld
mov
inc
enter
inc
nop
or
cld
hlt
fcompl
cmp
dec
or
aas
lods
adc
jmp
outsl
daa
dec
or
pusha
mov
inc
push
jns
pop
cld
ljmp
adc
mov
dec
in
fiaddl
loop
aas
repnz
push
mov
jle
dec
pop
cmpb
push
pusha
sbb
cltd
add
es
ds
cwtl
add
repnz
leave
setge
inc
les
and
cs
mov
mov
ds
outsb
jne
and
out
dec
cmpsb
and
adc
or
inc
neg
mov
push
pop
or
or
sbb
jb
add
dec
shl
or
popa
js
enter
or
jmp
enter
push
bound
insb
testl
and
out
or
dec
adc
imul
push
iret
in
enter
adc
or
mov
push
jne
mov
xlat
lcall
sbb
js
arpl
mov
cmp
bound
shrl
mov
adc
inc
lods
cmp
in
add
lea
xchg
jg
fiadds
adc
ret
aam
add
inc
insb
lret
ret
hlt
or
lret
cmc
or
adc
in
leave
rcll
xchg
cs
xlat
mov
fidivs
in
sub
inc
movsb
xor
mov
inc
out
in
sbb
and
push
push
in
cmpb
int
add
mov
pop
les
inc
cmp
repz
adcb
push
in
and
faddp
scas
pmullw
in
jae
orb
pop
push
add
xor
push
lods
out
mov
pop
xchg
bound
mov
inc
incl
push
mov
fldcw
xor
push
push
adc
push
xchg
les
pushf
pop
pop
pop
nop
pop
mov
or
pop
pop
jecxz
jo
push
sbb
imul
push
movsb
pop
fsubl
xor
pop
cmp
rcrb
cmpsl
pop
sbb
clc
dec
sbb
filds
pop
inc
add
inc
add
or
movsb
test
or
or
imul
scas
xchg
ds
xchg
push
inc
mov
enter
gs
dec
cmp
imul
sub
fs
imul
sub
pop
shrb
outsl
cwtl
push
cmp
lock
in
xor
inc
dec
add
push
jge
inc
sbb
out
xor
add
xchg
dec
sahf
mov
add
push
hlt
add
das
xchg
add
or
xchg
jne
cmpsl
adc
xchg
or
push
dec
cmp
or
je
scas
das
or
cmp
pop
cmp
shlb
adcl
sbb
rorl
push
and
insl
popa
ljmp
pop
cwtl
gs
mov
aam
je
js
pand
lock
inc
pop
xor
cmp
movsl
or
sbb
test
fadd
jo
adc
popa
fs
sub
dec
jnp
inc
jle
adc
iret
sbb
cld
jo
iret
jmp
ds
and
out
adc
or
inc
pop
sbb
das
adc
add
push
mov
movsb
xchg
nop
adc
fimull
dec
cwtl
cwtl
push
add
out
mov
and
mov
mov
sti
cmpsb
jmp
lea
sbb
pop
pop
repz
cli
push
pop
pop
mov
insb
inc
or
inc
test
jbe
dec
and
hlt
je
insl
dec
rol
push
clc
pop
xchg
xlat
pop
es
inc
push
sub
fs
inc
pop
adc
jl
add
xor
stos
mov
xor
popf
filds
in
mov
iret
rol
fsub
pusha
pusha
sub
js
in
mov
jp
pusha
mov
rorb
mov
repz
js
or
add
jns
fadds
add
dec
add
dec
call
pop
add
xor
pusha
adc
add
xchg
or
xor
dec
jb
dec
scas
and
cmp
mov
mov
xchg
pop
jnp
cltd
nop
outsl
inc
into
xor
pop
je
icebp
inc
inc
sarb
add
or
sub
rorl
jno
or
jecxz
or
nop
cmp
out
andps
out
test
or
xor
push
jno
or
jo
std
jo
jo
xchg
cmc
fnstcw
dec
repnz
mov
push
jb
arpl
popf
int
scas
je
or
or
xchg
add
mov
fsubrs
test
repnz
sub
popa
add
jo
xchg
adc
sub
sbb
fs
ror
nop
and
push
push
add
movb
jae
js
cmp
call
enter
mov
orb
push
nop
repnz
and
adc
inc
pusha
es
or
test
mov
sbb
add
fstl
pop
inc
xchg
and
cmp
mov
adc
enter
sub
imul
jecxz
or
push
xor
or
cs
mov
pushf
xchg
or
lods
sbb
ficoms
in
jo
jo
or
outsb
add
mov
out
cmp
dec
lret
dec
daa
xchg
jno
inc
jnp
xchg
sbb
pop
in
nop
xchg
xlat
mov
xchg
cmc
xchg
push
jge
and
xor
xor
xor
inc
mov
inc
dec
dec
dec
dec
dec
dec
dec
dec
mov
push
push
push
push
push
and
mov
jae
es
push
rcl
push
sub
xor
or
pop
xchg
mov
push
imul
jmp
dec
xchg
xor
clc
adc
pop
and
std
cs
test
jbe
cli
and
add
xchg
cmpsb
jo
add
push
mov
jns
addr16
mov
sub
sti
adc
sbb
cmpsb
mov
sub
stc
and
mov
xor
add
mov
leave
clc
sub
pop
add
sar
push
mov
mov
jbe
test
add
sub
cmpsl
popf
out
jge
shrl
xchg
dec
or
push
rcrb
mov
jne
stos
pop
cli
push
sbb
pop
jmp
pushf
out
jb
dec
enter
xchg
test
add
leave
xchg
test
or
mov
jl
ret
lcall
push
inc
inc
inc
hlt
ret
and
dec
pusha
sub
pop
sub
lret
or
mov
or
cmp
xor
inc
dec
jns
aas
rcrb
sbb
fdivrs
clc
and
fsubl
fs
loopne
cmpsb
adc
mov
xchg
das
inc
lea
hlt
rol
mov
mov
push
stc
cvtps2pd
add
fdivrs
cmc
fstps
sbb
push
bswap
or
js
sub
lahf
ljmp
sub
or
daa
xchg
jo
clc
jo
dec
sub
loopne
fidivl
adc
jle
and
mov
into
sbb
out
mov
inc
jmp
mov
fdivl
mov
out
inc
loopne
sub
lahf
sub
mov
lcall
data16
xchg
xchg
or
jmp
inc
sti
push
add
enter
inc
push
xor
pop
pop
mov
out
pop
es
cli
mov
sbb
and
adc
jl
xchg
push
inc
sbbb
bound
jmp
cld
out
stos
test
pushl
sbb
xor
mov
insl
adc
add
pop
incl
fucom
ret
or
cmp
jg
mov
ret
andb
pop
call
dec
test
xchg
jno
insl
add
or
pop
call
fildl
and
jmp
fstps
mov
xlat
sub
cli
sub
push
in
lods
sbb
lock
ja
aaa
lods
cmpsl
adc
lock
ss
dec
jns
cld
pop
mov
jmp
jmp
xor
xorl
pop
leave
pop
sub
jbe
aaa
in
xlat
adc
in
pop
jb
pushf
jbe
sbb
inc
pop
xchg
or
xchg
jl
and
pop
ja
mov
and
fisubl
out
lcall
mov
add
mov
or
push
fidivrl
imul
insl
xor
pop
mov
cmpsl
add
inc
leave
dec
popf
je
rolb
jb
xchg
inc
loop
imul
iret
dec
sub
ss
insb
movzbl
cmp
fistps
gs
inc
inc
adc
sub
inc
sub
inc
ficoml
pusha
adc
dec
rorb
and
add
inc
cmpsb
mov
js
add
add
dec
inc
push
cli
es
and
mov
xor
add
scas
sbb
mov
shlb
nop
jg
add
cmpsb
or
aas
cmp
rorl
aas
or
or
incl
and
in
orl
pop
vshufps
push
cmp
add
push
js
cmp
aas
aam
xchg
mov
mov
xor
js
inc
jmp
mov
aam
jb
inc
dec
loopne
sbbl
into
jl
jmp
in
add
ret
mov
mov
out
jle
adc
adc
inc
insl
jo
int
lcall
rcr
or
ss
test
leave
add
xor
dec
xchg
imul
inc
sbb
rol
clc
sahf
insb
sub
cmp
jnp
loope
nop
lcall
pop
xor
imul
inc
fucomi
dec
insb
cmp
dec
jae
enter
push
pushf
fs
push
ret
fcoms
push
sub
and
ret
fs
cmp
mov
sbb
add
orl
mov
sub
or
scas
stc
jae
ret
cmpb
and
inc
mov
push
adc
adc
push
dec
fbstp
es
xor
or
push
pushf
and
xor
push
cmp
pop
sub
leave
mov
or
rcrl
je
cmp
push
testl
ret
adc
in
fidivrs
xor
pop
cmp
inc
push
lcall
fcmovnu
cmp
test
jno
pusha
inc
xchg
imul
daa
pop
mov
sub
adc
test
adc
sti
hlt
dec
sti
cmp
pop
cmp
mov
lock
adc
inc
fdivl
pop
mov
and
testb
jmp
inc
push
addl
xor
cmp
sbb
inc
rcrb
xchg
or
sub
inc
test
sbb
rorb
xchg
js
mov
and
enter
pop
jo
push
out
xor
sub
push
jge
in
mov
adc
pop
or
cwtl
or
pop
das
pop
xor
out
push
mov
js
cmp
test
xor
pop
cmp
mov
cmp
pop
and
icebp
lods
testb
pop
test
and
iret
incb
mov
and
or
and
mov
pop
mov
cmp
inc
rolb
mov
pop
rclb
bound
mov
push
je
jge
and
jp
call
test
add
or
das
lock
das
add
jne
adc
and
lcall
mov
push
popa
decb
inc
fsubrs
xor
sub
dec
cmpl
dec
pop
mov
push
and
pop
ds
ret
shll
mov
inc
sub
lds
pop
dec
pop
sbbl
daa
mov
push
inc
cmp
sub
sub
mov
mov
and
jbe
and
mov
sbb
and
push
dec
mov
shll
mov
cmp
push
pusha
mov
or
pop
ret
xor
mov
dec
inc
cmp
aaa
add
jecxz
cmpsb
dec
push
push
xchg
and
lock
inc
addr16
adc
and
sub
fldcw
cmp
inc
xchg
data16
xchg
adc
call
mov
cli
mov
inc
or
inc
roll
sti
push
and
cmpsb
addl
and
clc
push
js
mov
and
xor
add
mov
fisubrs
xlat
or
jne
outsb
call
push
enter
inc
call
or
push
je
mov
jl
adc
xor
and
cmpb
lods
aas
insl
pop
mov
add
data16
fbstp
sbb
inc
push
addl
xorb
insl
aaa
add
loop
or
cld
int
or
pop
subl
mov
mov
push
jb
ret
xor
cltd
sbb
cmp
movsb
loope
inc
inc
and
dec
and
sub
icebp
jmp
stos
test
les
push
mov
add
lcall
test
pop
jge
dec
inc
movsl
mov
fucomip
insl
or
imulb
add
push
mov
sbb
push
mov
sub
or
enter
adc
iret
ret
stos
inc
cmpl
inc
iret
flds
dec
cmp
pop
adc
insl
inc
dec
dec
sbb
pop
idivb
inc
iret
dec
pop
das
loopne
in
or
lock
hlt
movsb
adc
enter
adc
inc
popa
das
std
xchg
inc
xor
jne
cld
call
mov
inc
cmp
cmp
mov
les
cltd
pop
inc
out
jle
sbb
into
dec
jl
shlb
dec
sub
cmp
jo
ss
pusha
xor
cli
lock
lea
or
dec
ja
push
addr16
hlt
pop
fimuls
mov
and
add
sub
cmp
rolb
xor
and
or
push
fsubs
sbb
lds
xor
loope
sub
or
cmp
mov
insb
inc
cmp
invd
inc
cmp
adc
je
in
jmp
orl
dec
adc
or
jl
inc
lock
inc
cwtl
pop
add
dec
jge
mov
push
push
inc
adc
sti
pop
dec
icebp
push
fsubrs
sub
movsb
roll
mov
and
mov
inc
pop
mov
jge
inc
arpl
imul
sub
imul
adc
sub
push
sub
or
sub
sub
push
add
inc
push
sub
pop
lock
xchg
cmp
aad
add
imul
jns
inc
test
fbld
lea
addl
or
loopne
cmc
sub
add
mov
rcrb
insl
gs
sbb
mov
lods
sub
hlt
enter
cmp
hlt
add
ss
pop
into
hlt
sub
inc
add
je
mov
lock
jp
add
pop
jns
push
int
xor
or
insl
push
inc
xor
leave
lock
rorl
cld
add
sbb
add
xor
push
push
jae
xor
ret
std
je
mov
pop
fldt
dec
clc
cs
loopne
mov
rorb
adc
push
loopne
ja
popa
fcoms
or
aaa
fistps
sub
dec
push
bnd
push
sbb
add
popf
mov
mov
xchg
or
loope
fdivs
lcall
f2xm1
dec
iret
push
inc
dec
or
movsl
adc
lcall
sbb
add
or
jmp
rcll
les
jp
cmp
push
addl
xchg
pushf
or
or
aaa
je
and
xchg
mov
cli
dec
pop
mov
sub
jmp
push
push
int
cmp
xor
sub
and
mov
or
xor
pop
pop
pusha
data16
jo
mov
dec
call
dec
mov
ret
add
add
orb
push
and
xchg
sub
dec
inc
pushf
inc
lods
inc
punpcklbw
adc
add
bound
call
dec
clc
js
mov
mov
clc
in
xchg
xor
mov
lods
clc
sub
repnz
call
sub
dec
lock
clc
inc
mov
and
mov
leave
mov
test
adc
add
test
lea
sbb
pop
push
jns
enter
call
test
pop
jl
test
inc
movsb
leave
cltd
mov
and
sbb
cmp
cmp
pop
push
out
cmp
sbb
loopne
cmp
add
cmp
push
mov
or
ret
addr16
je
cmp
popw
es
stos
add
lcall
mov
sbb
les
repz
and
adc
cmpsl
add
cmp
cmp
pop
inc
dec
fwait
jae
and
jns
jl
jge
or
js
push
jp
cmp
jne
sbb
inc
cmpsb
pop
sbbl
lcall
aaa
aas
mov
adc
ss
sub
fdivrs
das
push
je
mov
pusha
inc
push
jl
into
fiaddl
and
adc
xchg
dec
xor
scas
add
dec
add
push
pop
or
lods
push
lret
push
mov
cmp
fs
jl
rol
jnp
adc
insl
mov
sub
mov
and
pop
es
es
mov
push
nop
sbb
dec
pusha
adc
pop
cmc
adc
divps
loope
mov
arpl
xchg
das
add
clc
mov
add
xchg
fs
popa
icebp
xor
xor
mov
pop
pop
cmpsb
sbb
inc
xor
mov
call
inc
push
pop
nop
push
jnp
and
jmp
dec
popa
cmpsb
stos
add
push
out
dec
mov
ljmp
sbb
int
dec
jmp
andb
push
out
xor
adc
ret
push
cltd
lret
pusha
or
xor
mov
cld
ja
mov
jbe
sbb
movb
out
fdivl
sti
scas
or
aaa
enter
and
and
and
push
js
add
xchg
adc
pop
pop
adc
aas
lret
push
imul
mov
add
mov
jecxz
cld
aaa
clc
xchg
xchg
out
dec
inc
sahf
ret
lods
sbb
lock
xchg
ret
inc
mov
dec
testb
mov
test
and
test
pop
add
ret
dec
pop
adc
das
outsl
cmp
popl
push
add
mov
in
shlb
adc
pop
jp
aas
scas
mov
cmp
fstps
leave
lcall
or
and
je
addb
add
daa
mov
test
or
clc
inc
push
and
or
pop
pop
fimuls
das
mov
dec
stos
push
out
cmpsl
cmp
mov
adc
pop
xor
inc
mov
test
jo
pop
cmpsb
fsubrl
mov
add
shlb
fmuls
idivl
out
aas
je
mov
pop
dec
and
jne
mov
xchg
or
xorb
inc
mov
add
push
mov
pop
xor
dec
jle
push
out
pop
test
push
mov
cmp
pop
data16
adc
mov
mov
imul
inc
inc
push
inc
inc
add
dec
je
test
jo
outsb
enter
pcmpgtb
mov
sbb
jnp
pusha
sub
sub
dec
lods
sbb
dec
fs
push
add
fcomps
imul
xor
or
or
or
dec
aaa
lock
pop
cmp
cmp
andb
lcall
fs
fldt
rcrl
movb
mov
xchg
daa
lret
pop
pop
movsb
xchg
bound
mov
xchg
pop
push
push
push
mov
enter
pop
add
outsb
imul
xchg
pop
push
aas
jbe
and
aaa
mov
dec
gs
jl
dec
aas
out
pop
xchg
ds
dec
inc
outsl
popa
xor
ljmp
pop
or
or
push
ja
imul
push
mov
jnp
push
mov
sbb
sbb
pusha
pop
cmp
out
jge
fisubl
jecxz
sti
pop
fisubrl
out
jmp
or
ficomps
adcb
mov
and
jbe
xchg
jne
xor
pop
xchg
cmp
mov
inc
and
sub
lret
push
xchg
jnp
add
jmp
jnp
fsts
push
arpl
gs
and
loopne
pop
aam
sbb
lods
cmp
or
lret
ss
adc
mov
mov
inc
pop
inc
cmp
xor
mov
xchg
mov
pusha
sub
add
mov
js
rcr
pusha
xchg
push
xor
mov
push
adc
mov
sub
jmp
mov
cmp
pushl
pop
xor
out
mov
cmpsl
pop
cmp
xchg
dec
jno
inc
dec
xchg
mov
push
mov
ds
jnp
dec
test
jne
shr
xchg
das
and
inc
inc
inc
hlt
pusha
inc
or
pop
lea
fnstsw
dec
cs
pop
push
inc
in
mov
jg
jge
adc
pop
cld
and
or
jo
int3
xor
xchg
pop
lds
aaa
enter
dec
cmp
fdivrs
cmp
outsl
inc
out
mov
bound
ffreep
lret
push
cmp
cmp
push
sub
movsb
les
xor
pop
mov
data16
or
xchg
xchg
push
push
adc
daa
lock
xor
jb
push
imul
push
push
div
mov
inc
push
pop
pop
mov
fsubrs
jmp
ja
int3
cs
movsl
aas
insb
jge
inc
decl
xchg
jne
dec
xor
jle
imul
test
fstpt
and
cmp
add
and
push
cmp
hlt
xlat
pop
cmp
xchg
sbb
scas
xchg
dec
push
and
in
mov
cs
cmp
cmp
mov
and
dec
inc
dec
or
je
or
xchg
out
pop
xor
inc
lcall
inc
outsb
xchg
mov
mov
mov
pusha
mov
add
test
popf
or
xor
or
add
push
pop
push
add
push
push
or
xlat
jl
jb
in
jl
jl
mov
inc
ja
jo
pop
scas
and
addr16
mov
dec
xchg
into
fs
in
add
xorb
mov
mov
inc
rcl
mov
mov
lret
push
shl
push
ret
es
xchg
sbb
and
fadds
and
cltd
bound
push
xchg
dec
xor
sbb
xchg
xor
push
pushf
xor
mov
push
gs
call
les
jb
or
add
sub
gs
daa
inc
jge
push
out
mov
push
mov
pusha
js
or
push
test
jae
and
ret
inc
loope
sti
inc
dec
fisttpl
dec
jne
fs
sbb
jle
inc
je
inc
push
lock
pop
sbb
add
outsb
idiv
inc
pushl
push
sbb
push
push
jns
push
enter
sbb
aaa
pushl
dec
inc
add
adc
mov
mov
xchg
gs
ret
and
pop
jg
cmpsl
sub
pop
sub
and
fwait
imul
int3
add
dec
out
leave
dec
add
push
inc
out
adcl
and
sbb
mov
or
outsb
movsl
mov
pop
pushf
fwait
pusha
cmp
mov
and
inc
es
jbe
clc
leave
rolb
xor
test
pop
mov
mov
and
jle
push
les
inc
add
xchg
adc
add
inc
mov
aam
dec
pop
adc
xor
sbb
fs
sbb
aam
or
push
out
je
push
sbb
divb
out
jae
data16
push
pop
lret
xlat
push
enter
aad
jp
xchg
movsl
cmp
ret
cmp
lods
sbb
arpl
out
pop
mov
xor
and
push
rcl
and
fldl
bound
jb
pop
je
cld
cld
cltd
sub
adc
add
js
dec
or
dec
xor
add
je
leave
std
mov
and
add
cmp
sbb
mov
xor
and
in
in
mov
fnsave
lret
jmp
inc
fcmovne
sbb
push
int3
pop
mov
pop
jo
adc
jle
and
pop
xlat
orb
popa
pop
cmp
sarl
dec
cmpsl
mov
ret
dec
sub
mov
sahf
xchg
xchg
out
pop
leave
push
cwtl
imul
pop
outsb
or
movsb
add
clc
or
into
add
imul
push
mov
je
mov
mov
cmp
mov
mov
jno
lock
cmpl
jecxz
bound
imul
fldcw
and
stos
out
rorb
imul
jg
push
scas
addb
popf
into
mov
jge
or
push
cmp
nop
dec
pop
cmp
aam
sbb
xchg
inc
movsb
fwait
inc
loop
aas
add
or
sub
and
pop
sbb
add
inc
cltd
add
jp
sarl
pop
iret
clc
sub
jl
inc
test
daa
orb
test
xorb
movb
adc
lea
mov
dec
ret
inc
sbbl
jle
sub
or
inc
test
xor
sbb
add
sbb
sbb
add
xor
or
movsb
aad
es
adc
and
in
adc
mov
xchg
xchg
mov
idivb
dec
mov
in
jo
mov
adc
arpl
cmp
ret
xchg
push
adc
sbb
or
outsl
add
and
rolb
outsb
test
mov
cmp
lock
xor
inc
popa
notb
push
mov
lds
fdivrs
inc
cmp
lea
sbb
add
out
xor
push
insb
mov
xchg
enter
arpl
adc
cmp
and
pop
inc
stc
daa
cmp
insl
push
mov
mov
xchg
push
push
scas
or
lahf
pop
test
mov
or
push
mov
add
lcall
mov
nop
push
add
sub
xchg
orl
xor
lock
xor
adc
sbb
sbb
xchg
jae
sub
das
inc
aam
shl
add
mov
sahf
cmp
mov
mov
ljmp
mov
ret
lds
ret
sub
add
call
out
jno
clc
jmp
aam
sbb
pop
sub
inc
fs
js
fdivrl
add
js
mov
decb
push
mov
fwait
rclb
in
push
pop
mov
cltd
test
jle
pop
inc
mov
mov
pop
push
xchg
fcoms
jne
rcrl
jo
outsl
cwtl
insl
out
inc
into
aas
les
das
fs
mov
mov
adc
mov
adcl
popf
mov
loop
or
inc
and
inc
dec
leave
sbb
or
addb
addr16
ret
and
or
dec
and
push
xor
pop
push
jo
in
hlt
adcb
jo
imul
dec
ret
loop
in
inc
adc
xchg
add
aam
jnp
jmp
add
loop
dec
inc
add
sbb
dec
test
adc
cmp
adc
push
cli
in
outsl
xchg
lock
lods
popa
imul
popa
sbb
xchg
mov
jecxz
dec
imul
cmp
loopne
xchg
pop
rorb
adc
jp
add
movsl
into
std
jo
inc
sub
adc
sub
add
push
adc
sbbb
adc
xchg
mov
push
xchg
pop
sbb
push
cli
data16
cli
dec
mov
add
cmc
add
mov
inc
adc
sub
push
push
jmpw
inc
testb
je
addb
in
push
jns
cmpsl
mov
sub
loope
or
mov
roll
cld
or
jno
sbb
push
mov
adc
outsb
scas
addr16
xor
repz
xor
test
or
roll
pop
clc
mov
xor
pop
andb
and
sub
inc
cmpsl
imul
sub
inc
mov
xor
push
sub
ljmp
dec
popa
lods
rcrb
mov
loop
jle
cli
idivb
ret
or
je
xor
bound
push
inc
lcall
mov
mov
cmpsb
lods
dec
inc
cmp
sbbl
push
pop
push
cli
ss
lea
hlt
adc
dec
lea
xor
jmp
cs
jno
test
outsb
lea
add
into
mov
loop
xchg
mov
inc
push
lahf
fsubrs
and
dec
in
fldl
add
and
or
or
inc
cmp
sub
inc
cli
pop
clc
jb
cvtdq2ps
test
or
xor
sti
loopne
fldt
push
sbb
adc
pop
cmp
cmp
or
loopne
push
lea
data16
sarb
or
into
add
ds
sbb
popl
popa
ja
dec
cmp
arpl
xor
mov
inc
mov
lret
xorb
je
adc
or
push
dec
mov
dec
push
pop
cmp
fnsave
mov
jl
aam
test
mov
in
and
xchg
aas
cmp
arpl
or
cmpb
inc
add
sbb
fs
mov
std
or
ret
loopne
and
fwait
cmpb
in
inc
xchg
pop
jne
pop
jne
bound
pop
or
enter
sub
test
cmp
aas
pop
jl
push
mov
dec
inc
or
and
imulb
dec
cmp
push
mov
or
and
test
outsl
xor
clc
inc
inc
sahf
je
ret
sbb
mov
sbb
insb
loopne
or
add
xor
inc
into
sahf
add
xor
sbb
push
cmovl
test
push
cmpsl
add
mov
pop
fldenv
ja
inc
out
push
or
sub
cli
dec
pusha
inc
sbb
jge
and
dec
test
inc
mov
or
hlt
cmpsb
mov
and
pop
pop
adc
das
jge
inc
xor
fstps
push
rolb
inc
jge
ja
sbb
imul
nop
jne
aam
or
mov
aad
in
fimuls
orl
fdivs
stc
and
mov
imul
fs
shlb
inc
push
or
out
movsb
sarb
pop
xlat
out
repz
jmp
sbb
out
mov
lods
adc
pop
addb
sub
das
or
cltd
ja
fidivrl
in
xor
jne
ljmpw
into
ret
adc
mov
in
jns
jno
inc
mov
insl
movsb
or
pop
push
mov
or
or
sbb
dec
jnp
ficoms
or
pop
nop
push
in
aaa
in
xchg
je
inc
std
pop
icebp
test
pop
mov
dec
shl
add
push
ss
ret
xor
pushf
lods
addr16
xchg
data16
js
cmc
xchg
push
andl
enter
inc
inc
test
push
mov
mov
pop
jb
shrb
cmc
movsl
loopne
ret
fistpll
outsb
pop
jl
push
xor
inc
hlt
add
dec
addr16
dec
inc
inc
adc
inc
js
aaa
sbb
dec
inc
mov
add
hlt
add
fdivl
cli
push
das
push
sbb
pop
clc
dec
sub
aas
mov
mov
mov
xchg
mov
xor
or
ret
aas
cmp
ret
push
inc
in
sbb
sbb
push
out
adc
fcoms
push
push
ret
add
movb
add
add
xor
mov
rcrb
lret
popa
dec
cmp
and
test
fmuls
daa
sub
mov
ss
decb
cmp
jne
xor
or
or
push
jno
jo
gs
aaa
push
pop
adc
push
in
iret
sahf
xor
enter
fistps
jnp
adc
adc
adc
rcrb
jae
push
cmp
inc
jg
dec
call
or
out
push
xlat
xor
daa
sub
sub
sub
mov
mov
sub
je
inc
pop
add
sub
add
add
lea
or
imul
imul
sub
mov
hlt
daa
aam
inc
push
test
add
jl
jl
push
cmc
adc
mov
push
lea
adc
xchg
or
add
add
clc
xor
and
mov
sti
imul
xchg
leave
hlt
outsl
and
daa
dec
add
int3
js
sar
sub
dec
mov
and
cli
leave
sub
mov
addl
mov
lods
jge
adc
adc
and
popf
bound
cmp
or
lock
mov
or
push
outsb
mov
cwtl
negl
sub
scas
or
clc
or
cmpb
xchg
enter
xor
xchg
lock
xor
je
imul
xchg
imul
pusha
imul
ret
push
jno
in
mov
es
cmpsb
jle
movsb
fwait
add
cs
call
pop
sbb
xchg
jbe
mov
ja
or
mov
mov
inc
ljmp
stos
cmp
xor
outsb
lods
or
leave
inc
imul
inc
leave
xorl
and
add
cli
push
push
or
int
jmp
jg
cwtl
in
dec
les
dec
mov
cmp
cmpsl
xor
inc
xor
adc
repnz
fmuls
pop
fimull
cmpsb
in
jg
cmp
mov
and
in
push
pusha
je
pusha
mov
ljmp
imul
push
lret
jo
pinsrw
sbb
mov
xchg
addr16
push
push
lds
mov
imul
pop
mov
and
sub
out
rolb
mov
xchg
es
push
pop
movsb
xchg
adc
cmp
cmp
call
sub
cld
sub
inc
iret
add
inc
movl
xor
lcall
inc
or
movb
cmp
inc
popa
add
shlb
mov
pushf
out
popa
test
test
loope
add
loopne
subl
je
pop
sub
sbb
add
jo
mov
push
mov
and
aaa
pushl
sub
mov
cli
std
push
popa
or
jmp
jecxz
xor
shrb
je
iret
iret
jns
cmpb
rorb
loop
mov
pop
or
pop
jb
test
mov
cmp
aas
push
inc
and
mov
pop
mov
loop
lock
pop
std
pop
sbb
nop
mov
outsb
inc
xor
pop
dec
jns
xor
jp
inc
lcall
lcall
pusha
lcall
fsubrs
or
in
pop
imul
rorb
or
xchg
pop
push
test
stos
les
lock
popa
mov
lret
shl
add
or
xchg
add
ficomps
add
or
out
fsub
jae
xchg
icebp
outsl
das
call
adc
ret
in
popa
inc
nop
adc
cmp
adcb
sub
or
bound
pop
icebp
jle
add
mov
push
sbb
jmp
and
je
and
rorb
adc
aaa
jbe
dec
es
push
mov
or
jmp
xchg
mov
cltd
sub
or
mov
xchg
pop
addl
sarb
or
es
icebp
or
xor
sub
scas
enter
mov
sbb
add
jne
imul
lods
jmp
sbb
pop
push
or
inc
jg
test
dec
push
outsl
lock
pop
push
dec
cmp
xlat
cmp
jl
sub
popa
popf
pop
adcl
and
push
jmp
sub
sub
jl
inc
sbb
cs
inc
js
ret
push
inc
lea
test
frstor
mov
movsl
cmpl
pop
test
int
push
adc
out
push
xchg
mov
out
mov
aam
rcrb
pop
xor
repz
xor
push
lods
push
les
sarb
mov
cmp
push
pop
mov
push
lods
jns
out
dec
hlt
test
movsb
in
push
into
cmp
pushf
mov
push
addr16
xchg
in
cltd
adc
jb
mov
xor
adc
xor
pop
xchg
shrb
pusha
sub
or
test
fistpl
enter
sub
xor
shlb
xchg
add
test
aas
and
cs
rorb
add
inc
xor
jl
aam
lock
or
xchg
daa
rolb
cmp
cmp
mov
and
divb
xchg
add
add
or
or
pop
jnp
sbb
jne
ss
adc
je
adc
pop
shrb
push
jae
dec
add
pop
movsb
dec
or
loop
fistps
shll
nop
pop
cmpsl
sbb
pop
xor
fsubs
push
cmp
and
mov
add
xor
mov
fsts
sub
dec
jl
stos
dec
loop
aaa
in
jb
frstor
push
and
or
mov
push
lcall
scas
and
enter
gs
sub
nop
cmpsl
inc
pop
or
add
add
adc
fdivrl
adc
inc
push
dec
cmp
setbe
adc
pop
pop
pop
push
insl
outsl
fs
add
je
addl
pop
cmp
mov
adc
rcrb
fdivl
push
pop
sbb
sbb
add
xorl
fldenv
mov
loopne
loopne
data16
mov
adc
or
push
mov
dec
into
mov
adc
imul
inc
add
and
xor
mov
sub
out
cmp
cs
sbb
add
mov
pop
add
inc
jl
push
scas
cld
mov
inc
add
mov
push
mov
cmp
out
cmp
in
negl
add
mov
push
lds
push
nop
pop
adc
jp
mov
xchg
or
or
pop
xor
inc
sbbb
shl
add
mov
inc
dec
inc
jp
dec
or
ret
sbb
std
mov
add
push
mov
outsl
jno
dec
hlt
insb
jle
rorb
push
testl
and
push
add
es
scas
or
push
outsl
mov
in
add
and
mov
loope
inc
dec
imul
call
add
sub
dec
mov
das
mov
pop
in
out
mov
daa
pusha
or
into
stc
into
add
sub
fcmovu
rcrl
nop
pop
pop
mov
dec
outsl
jb
mov
int
mov
inc
xlat
dec
rorb
bound
adc
pop
or
cmp
outsb
or
das
adc
push
das
cmp
test
mov
shl
jnp
aaa
mov
sbb
jnp
ret
je
pusha
adc
xchg
sub
dec
mov
sahf
push
or
add
ljmp
es
sbb
outsl
testb
adc
mulb
inc
adc
cs
out
icebp
and
gs
add
lea
imul
or
shlb
and
sbb
imul
scas
nop
mov
mov
pavgb
or
adc
imul
xchg
divl
push
sub
cmpsl
cmp
mov
add
jo
and
outsl
add
sub
pop
or
pop
ds
add
rcrl
in
scas
ret
movl
inc
in
or
imul
mov
iret
enter
pop
adc
or
rcr
imul
roll
jne
jns
pop
adc
pusha
pusha
or
mov
push
aas
mov
adc
push
dec
push
inc
out
mov
mov
dec
push
add
pop
push
and
cwtl
pop
xor
cmp
or
xchg
mov
sbb
imul
xlat
and
push
enter
dec
js
inc
mov
dec
inc
or
nop
mov
cmp
sub
push
push
cltd
dec
cmp
jbe
jle
sub
add
add
add
or
clc
pop
add
add
ljmp
add
add
fisttpll
adc
out
mov
mov
stos
sub
mov
or
out
cmpsb
adcb
adc
sub
mov
pushl
scas
or
jbe
ljmp
shl
xchg
pop
xor
cmp
mov
push
mov
dec
pop
out
push
nop
and
imul
int3
add
lods
out
ds
repz
or
sbb
ds
or
mov
lcall
notb
inc
js
fistpl
xchg
push
and
push
mov
insb
xchg
fcoml
les
clc
fdivrp
xchg
cmpsl
jl
es
push
cmp
lahf
push
jns
aam
xchg
add
jmp
jl
mov
inc
jmp
jmp
leave
ds
cmpsl
inc
fs
mov
cmp
xchg
in
mov
movsb
es
faddp
rorl
js
push
addb
push
mov
lahf
pop
and
loope
adc
push
es
nop
xor
pushl
adc
xchg
pop
sub
add
add
movsb
popa
xchg
sbb
xchg
push
push
test
push
and
mov
or
mov
or
leave
outsl
cmpxchg
bswap
loopne
repz
or
adc
or
popa
inc
insb
pop
repnz
loope
call
adc
cs
rcrb
adc
subb
xchg
int3
mov
lock
ret
je
inc
ret
add
or
stos
jo
adc
adc
inc
hlt
test
push
ljmp
sub
clc
adc
mov
fadds
loopne
sbb
rcr
jne
add
lcall
dec
sbb
mov
aam
sbb
mov
dec
adc
out
inc
lcall
add
and
imul
fmull
xor
push
xchg
in
push
enter
push
popa
dec
cs
and
test
xchg
jb
aas
cmpsl
stos
sub
and
push
push
jae
inc
popa
jo
loopne
xor
mov
push
ret
push
and
mov
test
xchg
and
jl
dec
cs
adc
sub
pop
rcrb
add
xchg
cmovb
xor
and
xor
int3
cmp
push
mov
mov
pop
enter
outsb
es
incl
push
ret
or
fldcw
pop
pop
js
into
dec
loopne
sbbl
dec
pusha
dec
add
adc
pop
and
fwait
sub
dec
and
enter
iret
jbe
ja
sub
dec
test
dec
testl
add
pop
int
pop
repnz
and
xchg
add
jno
ret
fistpll
xor
push
or
fldt
int
or
push
imul
xor
data16
repz
xor
fistpl
lcall
xchg
cmp
xor
fimuls
xchg
fisttpll
mov
add
ss
jo
inc
rcll
jo
in
xchg
mov
in
jg
mov
jne
adcw
cltd
or
inc
pop
nop
out
movsb
push
ror
or
and
add
enter
sub
fdivrl
rolb
test
add
cltd
loopne
push
packssdw
into
mov
cmp
xchg
xor
cmp
push
push
in
arpl
dec
cmp
inc
rolb
or
xor
fcoms
aas
mov
enter
cwtl
je
orl
inc
insl
movsb
and
sub
test
enter
shlb
jo
das
inc
or
inc
cli
rolb
cmp
cmp
sub
sub
addl
repnz
cmp
rolb
adc
loope
inc
inc
popa
cmc
clc
stc
jbe
adc
repnz
filds
jbe
scas
pusha
cli
dec
mov
out
outsb
sub
pop
aaa
or
rorl
dec
push
aaa
or
dec
cmp
dec
test
inc
rcl
cmp
jl
add
inc
or
push
add
scas
and
loopne
enter
inc
push
mov
sbb
fwait
push
and
loopne
and
dec
push
and
inc
push
and
dec
push
addl
cmpsb
and
cmp
loopne
and
inc
sahf
ja
and
add
push
add
aaa
push
dec
into
test
dec
push
push
pop
enter
das
mov
or
repz
enter
clc
add
in
mov
rcrb
mov
enter
loope
pop
mov
pusha
add
pop
pop
repnz
lock
dec
lock
xchg
mov
or
push
adc
mov
enter
mov
mov
inc
add
jns
sbb
inc
add
mov
adc
sub
inc
rorl
mov
ss
sub
sub
rcrb
in
movsb
cmpsl
cmp
data16
push
aam
sbb
or
out
pop
mov
cmp
push
pop
jo
adc
loop
nop
lods
mov
inc
jo
ret
or
pop
cmpsb
add
iret
pop
imul
push
push
pop
scas
push
mov
jg
adc
inc
je
adc
les
cmp
and
dec
fstl
ljmp
or
rorl
fsubrl
test
movsb
inc
add
and
pop
outsl
xchg
push
inc
xchg
pop
push
andps
or
mov
dec
leave
addr16
and
sbb
mov
xchg
out
mov
push
divb
sbb
mov
jne
mov
out
jmp
push
je
and
or
push
inc
popa
push
jl
js
mov
call
push
leave
les
push
sub
adc
movsl
jo
movsb
pop
dec
pop
pop
cmp
pop
sarb
adc
data16
nop
dec
dec
adc
jae
rorb
sarb
push
mov
jbe
outsl
cld
pusha
test
jae
imul
xor
jge
movsl
bound
aaa
sbb
mov
or
cltd
mov
icebp
inc
cld
push
sub
jae
inc
loope
xchg
push
cmpsb
sbb
or
or
xchg
or
call
aaa
lods
jae
pop
fdivrs
lcall
or
or
hlt
aam
imul
lahf
ja
mov
popa
mov
cwtl
je
mov
mov
push
test
inc
subb
cmp
cmp
mov
and
xor
cmp
ss
sysenter
dec
cmpsb
lahf
je
mov
mov
mov
fwait
call
push
in
adc
pop
shrd
sub
xchg
push
inc
inc
inc
icebp
mov
shrb
cltd
pop
inc
add
or
adc
in
enter
add
loop
sub
mov
mov
and
push
je
faddl
xor
fidivl
and
push
ss
sbbl
pop
xchg
adc
lock
pop
sbb
test
lret
add
or
jae
add
add
inc
push
repnz
adc
sbb
sbb
dec
fisubl
pusha
mov
jae
add
nop
cld
mov
lods
testb
cs
sbb
adc
lcall
adc
test
outsl
and
test
test
cmp
inc
aaa
pop
dec
mov
fcoms
jns
test
inc
add
stc
dec
lret
testl
ret
pop
ja
daa
add
lock
xor
js
lods
inc
call
shl
add
add
xor
mov
mov
or
mov
dec
loope
inc
or
mov
loop
or
add
or
in
sub
ds
push
inc
add
mov
inc
pop
ds
jmp
cld
inc
sub
mov
int
push
adc
mov
adc
and
test
inc
adc
cwtl
dec
pushf
pop
sarb
addl
mov
jmp
sub
es
pop
das
xor
mov
sar
sub
sbb
inc
sub
add
pop
lock
inc
popa
mov
push
or
push
inc
add
aam
dec
cmp
add
dec
or
push
cmp
push
add
mov
dec
scas
xchg
or
fmul
add
inc
dec
dec
jo
pop
inc
xchg
push
xlat
fwait
cmpsb
mov
sbb
xchg
test
enter
addl
and
sbb
inc
sbb
aaa
cmp
push
imulb
icebp
push
pop
jmp
sub
je
push
add
adc
add
adc
in
xchg
inc
and
loope
jp
or
sbb
sbb
add
add
fstl
dec
test
ret
mov
mov
mov
pop
icebp
outsl
fadds
xlat
adc
daa
or
adc
cli
lock
pushf
jne
ret
sub
fdivrp
push
xor
sub
neg
jmp
arpl
lods
add
je
sbb
sub
sbb
push
push
bound
bound
and
xchg
div
dec
test
sbb
int
sbb
enter
sub
sti
and
adc
inc
adc
xchg
inc
sub
iret
and
imul
rcrb
pushf
sub
pop
mov
cmp
sahf
add
add
jecxz
mov
je
push
shr
sub
and
sub
shlb
mov
xchg
adc
fs
sbb
scas
mov
jae
imul
inc
fs
fcmovb
pop
pop
rcr
mov
cmp
cvtps2pi
scas
subb
inc
inc
or
fcmovne
mov
adc
enter
dec
or
lret
mov
dec
fwait
loope
mov
bound
mov
ds
rclb
push
lock
sti
and
test
stos
mov
cmp
dec
xor
push
jmp
mov
and
adc
cltd
adc
insl
popa
and
ljmp
loopne
testl
sbb
adc
inc
jmp
xlat
orb
add
insb
push
clc
nop
xor
mov
or
sahf
adc
dec
imul
and
daa
xchg
shll
add
and
in
mov
cs
cmp
dec
inc
mov
jbe
xor
js
js
mov
push
dec
inc
dec
cmp
shlb
test
push
push
and
push
sbb
arpl
and
pop
test
orl
adc
addr16
sbb
and
add
jne
xor
lea
push
in
xchg
sahf
inc
adc
and
daa
add
jae
int
sub
or
fstps
inc
add
sbb
sub
imul
xor
or
js
enter
pushf
imul
pushf
or
xor
imul
loopne
je
rclb
mov
fisubrs
add
cmp
je
pop
das
or
addps
std
xchg
je
enter
cwtl
shlb
adc
repnz
add
lods
or
push
and
pushf
cmp
addb
leave
xor
jmp
add
xchg
or
xor
xor
xor
ds
flds
or
sbb
fwait
push
mov
mov
dec
cmpl
test
jge
inc
mov
xor
nop
mov
fcomps
ret
cmp
loope
xchg
les
push
sbb
dec
xchg
cld
nop
test
call
lods
xor
int3
sbb
jae
rcrb
mov
movsb
xorb
fcompl
mov
sub
xor
test
sbb
test
cmp
and
lods
xor
aam
sbbb
sub
mov
mov
add
inc
xlat
pop
xchg
or
fisttpl
pop
push
push
adc
stos
lock
dec
mov
push
mov
mov
clc
sbb
sub
jae
add
inc
xchg
inc
loop
imul
xchg
adc
or
mov
inc
sbb
pop
std
ljmp
out
aas
or
notb
or
sub
pusha
lds
dec
stos
lea
push
ret
xchg
int3
js
or
push
push
mov
lods
stos
add
addr16
push
cmp
mov
adc
add
cmp
outsl
xchg
dec
les
test
cmpsl
loop
push
adc
shlb
mov
mov
mov
sub
and
jge
xchg
imul
xchg
rorl
inc
pushw
cmp
andl
packuswb
inc
add
push
and
sub
dec
out
les
inc
ret
sub
cmpsl
movsb
test
lea
mov
mov
and
lock
sbb
inc
push
cwtl
out
aaa
or
movsb
jge
mov
mov
xchg
adc
fsubrl
pop
and
inc
pop
jmp
in
jle
xlat
insl
add
lock
int3
ss
xor
mov
sbb
insl
xor
jp
push
in
push
xor
popa
push
icebp
add
movsb
outsl
lahf
mov
sbb
fisubrs
cmpl
cmp
or
cmp
mov
sub
mov
inc
fldt
nop
push
pop
ret
or
aaa
lods
and
pop
or
int3
fisubrs
test
push
ja
xchg
and
push
inc
in
mov
movb
loope
ret
or
push
dec
movsb
xor
and
fstpt
jmp
dec
outsl
or
imul
or
dec
or
xor
sbb
ret
daa
out
jmp
lods
cmpsb
sbb
cmc
pop
mov
cltd
mov
cld
cmpsb
in
ljmp
fs
cmp
gs
sbb
movsb
sbb
sbb
lea
cltd
dec
cmp
mov
sub
adc
push
push
lea
call
mov
xchg
xor
fcmovbe
stos
and
and
mov
lds
sbb
out
sbb
pop
mov
fstpl
jno
push
jle
mov
xor
add
or
imulb
repz
or
sbb
and
jae
push
fwait
sbb
mov
in
jns
pop
sbb
mov
ss
adc
mov
leave
push
adcl
inc
fcompl
andb
jo
int3
adc
in
or
xor
in
add
xchg
loop
stos
mov
enter
lcall
mov
mov
es
in
loope
dec
je
mov
add
add
dec
rcrb
loope
leave
stos
fs
mov
push
xlat
pop
add
fisttpl
mov
cmp
or
clc
and
cli
mov
adc
mov
ds
leave
mov
cmp
cmp
jnp
ret
inc
or
lods
pop
jb
pusha
ret
ja
aas
adc
dec
push
adc
movsb
loope
adc
or
inc
mov
sbb
neg
sub
fdivs
lock
je
add
pop
sub
or
mov
mov
add
std
test
leave
mov
jo
fcompl
push
jb
imul
insb
icebp
push
xlat
and
xor
cmp
mov
enter
sarb
push
enter
mov
pop
mov
das
test
stos
orb
sbb
mov
inc
pushf
leave
or
sahf
das
andb
xchg
lahf
nop
jb
stc
aam
in
sbb
push
sbb
inc
inc
or
out
pop
loop
pop
mov
repz
cmp
icebp
testb
xchg
inc
or
mov
test
out
push
dec
mov
mov
cld
push
push
jnp
and
test
mov
lods
mov
out
outsb
mov
inc
add
ret
hlt
cmp
das
mov
xor
orl
adc
push
insb
adc
dec
add
add
rorl
cmp
mov
add
jo
sub
xor
inc
fildll
pop
not
sbbl
pop
inc
or
jne
mov
in
cmpb
adc
mov
movsb
clc
adc
cmpsb
repnz
jno
and
add
add
movl
xchg
fprem
dec
mov
mov
ficoms
imul
cli
push
pop
psrlw
in
mov
mov
enter
pop
out
outsb
in
push
daa
or
out
roll
rcll
pop
xlat
fiaddl
lods
xchg
rcrb
push
add
icebp
std
cmp
xchg
mov
jns
sbb
rcrl
inc
inc
mov
sarb
pcmpeqw
dec
ret
xchg
test
fstl
mov
movsl
xchg
jns
add
iret
cmp
or
neg
inc
lds
inc
pop
mov
loopne
outsb
inc
cmp
daa
mov
andb
or
sbb
ret
cmp
aad
sub
test
popa
insb
aam
pop
ds
ja
mov
sub
sub
aaa
lcall
shl
xchg
jnp
mov
sbbl
jp
jle
jne
mov
cmp
addb
dec
inc
scas
xchg
sbb
orps
dec
push
dec
push
pop
mov
cmp
and
dec
or
movsb
pusha
xor
iret
movl
inc
popa
sbb
movl
rcrl
fs
xor
insb
jo
dec
mov
lret
and
lds
hlt
mov
inc
inc
pop
mov
cmp
je
adc
push
sub
das
daa
push
sub
inc
test
jo
mov
dec
insb
push
ret
sbb
pop
movsl
dec
xchg
daa
mov
fstl
pop
xchg
repz
fs
hlt
xchg
in
add
lock
jo
xchg
or
fadds
add
and
push
adc
jnp
aad
pop
or
adc
insb
insb
and
mov
nop
dec
push
mov
rolb
les
inc
repnz
sub
sbb
lret
cwtl
sbb
pop
lods
ret
bound
and
jne
movsb
adc
xchg
pop
ret
das
leave
loope
fs
push
jecxz
arpl
loope
cwtl
data16
xchg
jno
and
mov
aaa
pop
sbb
jl
popa
mov
and
xor
adc
bound
arpl
imul
add
insl
xlat
adc
or
enter
inc
insb
lahf
xor
xchg
xchg
or
xlat
enter
in
in
inc
pop
subl
mov
lret
push
xor
hlt
mov
push
cmpsb
iret
xor
lahf
lock
adc
andb
rcl
mov
call
sbb
pop
sbb
pop
and
imul
push
pop
mov
ds
mov
ret
adc
cmpb
int3
xchg
fstpt
dec
or
ret
addb
cmp
pop
mov
jo
xchg
cmpb
aaa
into
pop
mov
shlb
sub
or
inc
pop
or
and
mov
or
xchg
pop
ret
xor
xchg
add
nop
add
xchg
jl
repnz
mov
mov
mov
adc
int3
enter
xchg
les
imul
cmpl
sahf
add
lock
and
or
cmp
dec
ret
fimuls
add
push
mov
out
cwtl
test
pop
add
adc
pushf
lock
and
sub
nop
add
xor
aam
xor
push
aam
test
das
movsb
dec
aam
popf
cmp
pop
jne
test
mov
js
dec
jle
test
cmp
arpl
inc
cmp
add
dec
test
add
push
or
dec
push
fwait
push
inc
enter
rcrb
pop
xor
cmp
mov
or
mov
mov
testb
or
xchg
lahf
testb
adc
andb
std
pop
xchg
cmp
das
rcrb
test
push
cmp
insb
cmp
pushf
xor
xchg
aaa
add
mov
test
test
pusha
std
cwtl
and
mov
inc
adc
mov
xchg
sbb
push
ja
cmp
inc
test
cmpsl
inc
mov
loope
arpl
das
orl
and
js
xor
pop
add
xchg
movsb
ja
cli
inc
jg
sbb
jbe
clc
in
ret
jb
or
pop
shrl
push
push
dec
or
test
mov
push
cmp
mov
mov
mov
daa
and
jp
add
pop
jne
xchg
stos
sbb
test
sbb
inc
movb
xorb
jl
adc
and
or
scas
out
pop
fwait
inc
xor
adc
inc
jl
roll
mov
stc
and
mov
sar
and
test
cmp
imul
sbb
inc
test
pop
fptan
push
xorl
imul
pop
mov
sbb
inc
andb
imul
lahf
rol
lea
test
test
and
mov
dec
movsl
add
cmp
or
mov
xchg
add
out
jae
pop
iret
in
mov
rorb
cmp
pop
bound
jb
out
sbb
mov
push
test
add
push
sub
push
mov
inc
test
rcrl
nop
pop
or
hlt
nop
add
andb
arpl
inc
jmp
add
lock
and
pop
leave
mov
sub
pop
ret
lock
inc
xor
and
xchg
mov
or
pop
mov
rclb
pushf
and
sub
shrl
cmp
mov
data16
and
nop
or
and
or
nop
or
cmp
or
sub
outsb
rolb
clc
adc
adc
popf
mov
sbb
rol
push
fisttpll
mov
add
sub
mov
mov
mov
inc
fimull
add
in
jbe
xchg
shr
call
mov
cmpsb
pop
cmpsb
xor
inc
shlb
pushf
movsb
rol
sbb
jne
push
stc
clc
xchg
inc
std
insb
cmp
sbbb
xchg
xor
mov
inc
xchg
dec
mov
popf
cmpl
or
fadds
cmp
nop
xchg
addl
mov
add
inc
nop/reserved
cmp
dec
je
adc
fnsave
ret
mov
dec
dec
rcrl
mov
fsubrs
leave
and
jbe
clc
mov
xchg
lea
nop
adc
sbb
out
inc
or
neg
xchg
movsb
neg
add
cmpsb
xchg
in
jns
cmpl
adc
or
ret
filds
or
sti
in
jo
push
cmpsb
dec
lret
mov
add
push
xchg
xchg
and
jle
sub
push
adc
cs
mov
push
xchg
and
cmp
daa
pop
mov
mov
pop
scas
or
lods
call
lods
cltd
les
mov
out
sbb
pop
pusha
xchg
test
popa
push
fs
in
push
das
push
pusha
orl
in
jne
divb
mov
jmp
cmpb
test
adc
movsb
lods
cmp
jmp
jmp
sbb
shl
imul
jmp
or
cmp
aad
nop
cmp
test
push
in
popa
jns
mov
push
xor
mov
lea
popf
pop
out
repnz
adc
cmpsl
enter
pop
push
repnz
push
outsl
icebp
jnp
add
adc
mov
and
adc
xor
sub
push
inc
sub
loopne
sbb
bound
mov
movsl
insl
iret
jmp
sbb
daa
movb
jecxz
push
pop
sub
cmpsl
add
sbb
and
dec
dec
and
sbb
arpl
add
sbb
add
add
leave
xchg
inc
push
stc
xchg
mov
cmp
shl
sbb
add
xor
das
adc
or
sbb
or
lods
inc
outsl
sbb
notl
add
loope
xor
adcl
push
fcompl
adc
outsb
lret
sub
insb
loopne
cs
sahf
adc
or
dec
in
fldt
stc
add
ss
sub
or
inc
pop
ljmp
adc
jp
mov
sub
pop
and
por
mov
dec
dec
add
mov
add
push
daa
imul
xor
xor
call
adc
pop
testl
mov
jne
aam
add
sbb
add
cmp
xchg
jne
mov
stos
fisubrs
push
mov
mov
pop
cmpl
adc
sahf
std
xor
xor
hlt
and
push
mov
insl
inc
pop
stos
mov
in
shrb
test
lds
and
mov
mov
mov
cmp
inc
cmp
loop
clc
jne
mov
inc
das
xchg
xor
lock
shll
add
popa
jo
or
popf
push
in
push
jbe
xor
fdivs
cli
xor
push
or
icebp
nop
or
push
jno
mov
in
sub
mov
pop
or
insb
fcoms
mov
leave
cmpsl
push
stos
add
iret
and
pop
imul
mov
addl
inc
pop
mov
cmp
clc
je
cmp
mov
adc
and
jnp
ds
pusha
jmp
int
cmpsb
cmp
imul
fiaddl
cs
popf
add
xchg
shlb
repnz
lods
push
fcomi
js
cmp
adc
add
call
lcall
sub
jae
jl
dec
cmp
ja
pop
loope
mov
jae
out
iret
xor
cmp
cwtl
shl
pop
adc
es
pop
xor
lret
mov
sbb
push
pushf
xchg
nop
test
sub
mov
sarb
or
push
jo
jg
rorb
repnz
scas
mov
add
aam
lret
aas
ret
ret
cmp
jo
daa
lret
lret
orb
fcomp
in
ret
xor
push
ret
or
sub
sub
xlat
out
jmp
sub
mov
std
jp
pop
and
sbb
fdivs
mov
mov
push
and
aam
inc
shl
xor
rclb
addl
add
adc
fwait
pop
inc
cs
cmp
movsb
inc
imul
jne
outsb
in
out
push
in
addb
push
mov
in
test
insb
das
mov
cmpsl
fidivrs
sbbb
sbb
jae
bound
cmp
xchg
push
push
outsb
sbb
dec
mov
or
lahf
lret
push
mov
xchg
xorb
jne
pop
cmp
dec
push
filds
les
fidivl
and
fwait
cwtl
pop
inc
sti
pop
add
push
cmp
and
mov
mov
add
or
inc
loopne
pop
fildll
shrb
cmp
sti
sbbl
add
mov
xor
in
xchg
cmp
xlat
subb
jp
add
adc
aaa
push
jo
add
sub
jmp
add
dec
dec
pop
xor
sub
push
inc
or
or
in
mov
popa
add
adc
jo
mov
adc
pop
xor
xchg
mov
mov
inc
adc
pushf
testb
inc
pop
insl
imul
mov
adc
in
fs
pop
ret
adc
cmpl
add
sbb
data16
cld
mov
or
pop
or
loop
and
add
aas
rclb
xchg
push
push
orb
movsl
or
mov
fsubs
cmpb
dec
pusha
inc
add
add
and
clc
add
lret
xchg
push
xor
xorl
adc
ja
pop
psrld
out
sarb
jo
mulb
movsb
pop
xor
jne
adc
xchg
aam
pusha
jmp
cs
fisubs
sbb
or
lods
lea
pusha
shlb
sbb
insb
loopne
xor
push
mov
fdivs
sub
jbe
add
xchg
fs
inc
sbb
or
fcomps
pushf
xor
jo
pop
sub
add
ss
sbb
mov
and
adc
adc
xchg
testl
pop
mov
adc
popa
pop
jge
jmp
or
sub
push
add
movsl
lidtl
cmpsb
or
add
or
sbb
insb
das
push
loopne
add
add
or
pop
fildll
outsb
rcll
mov
add
cmp
add
pop
es
jo
push
lods
jmp
loope
adc
out
push
and
mov
jp
mov
call
push
push
test
inc
dec
xchg
scas
test
cld
in
pusha
mov
cmp
xor
push
adcb
lcall
dec
jg
loopne
aam
dec
inc
dec
push
jo
pop
add
dec
call
push
aad
out
imul
mov
jge
test
jne
lea
test
mov
sbb
rclb
inc
fcoml
loopne
adc
cmp
mov
or
xor
shll
in
adc
sbb
dec
shl
add
and
and
sti
jns
fisubrl
sbb
lock
add
mov
outsl
mov
xchg
andl
decl
xor
clc
inc
cmc
out
push
clc
les
fwait
xchg
mov
in
dec
jmp
xlat
adc
pop
or
and
push
dec
popa
aas
inc
imul
lea
inc
cmpl
jne
add
sub
cmpl
mov
or
inc
pushl
xchg
lock
and
out
cmp
push
fisttps
inc
cmp
je
lock
mov
or
mov
test
ja
call
or
inc
test
repnz
mov
out
test
sub
popf
pop
sbb
dec
stos
push
or
xor
testb
outsl
sahf
cs
or
and
sub
jnp
xlat
xor
incl
inc
cld
jne
cmp
cltd
dec
cmp
sbb
and
filds
mov
divb
or
sbb
int3
pop
pop
mov
sub
outsb
jno
dec
dec
loopne
ljmp
adc
sar
sbb
notl
add
jbe
pushf
xchg
jmp
cltd
xchg
js
pop
adc
cmp
mov
xchg
in
xchg
sbb
ss
orb
pop
sbb
dec
add
mov
sub
and
sbb
adc
sbb
pop
cmp
mov
lods
inc
pushf
rclb
iret
mov
rcrb
test
fcoml
xorl
dec
sbb
and
and
jne
fs
call
movsb
out
push
jmp
lods
mov
jbe
mov
loope
cmpsl
add
mov
adc
pop
sub
daa
add
adc
and
inc
sarb
or
popa
push
aam
add
pop
jmp
nop
and
adcb
in
hlt
xchg
outsb
inc
adc
sub
lock
mov
or
popa
sub
mov
xchg
cwtl
pop
sub
aaa
xchg
push
and
push
cmc
sbb
rcl
push
push
and
rorb
scas
cs
cmp
xchg
cmc
sbb
xchg
daa
loop
xor
push
and
loope
outsb
mov
ficompl
add
hlt
and
mov
mov
pop
jo
or
sti
pop
mov
cmpl
inc
inc
je
sbb
mov
mov
jecxz
dec
xor
jecxz
gs
shlb
jns
xchg
test
ss
insb
dec
dec
cmc
cmp
inc
mov
add
add
call
mov
cld
cs
sub
sti
orl
push
in
lcall
push
daa
push
sbb
popa
enter
pop
add
mov
dec
dec
mov
mov
pop
es
mov
movsb
push
outsb
mov
xchg
pusha
shlb
or
rorb
pop
je
xchg
das
cmp
sbb
xchg
inc
mov
arpl
lahf
dec
enter
sti
loopne
add
sub
or
jno
push
movsl
movsb
mov
rcrb
pop
aaa
aaa
jae
nop
sub
cmpsl
fstpt
clc
xor
mov
out
or
mov
jbe
movsl
lods
pop
inc
dec
test
cltd
fisubs
movsl
lock
test
mov
xchg
inc
dec
cmp
in
jnp
out
sti
inc
mov
push
cmp
mov
lahf
stos
test
mov
mov
mov
mov
push
add
or
mov
pop
xor
xor
jno
stc
lock
sub
mov
cmp
inc
pop
fsub
imul
mov
popl
xor
xorb
inc
inc
mov
fwait
xchg
mov
or
jl
xchg
xor
out
movl
mov
and
xadd
inc
pop
shlb
fbld
testb
shl
and
push
adc
xchg
add
les
icebp
es
test
dec
pop
mov
sbb
inc
push
add
push
sbb
jmp
sbb
or
xor
aaa
add
sub
push
sbb
std
seto
adc
mov
adc
fdivl
fwait
sbb
cs
add
push
add
mov
cwtl
sbb
dec
imull
arpl
pushf
rclb
dec
or
adc
and
mov
rorb
dec
or
or
add
add
xor
pop
or
jns
adc
add
lods
in
adc
mov
pop
cltd
addr16
lods
jnp
add
in
insl
lods
dec
roll
insl
orl
test
xor
iret
pusha
nop
pop
ret
lahf
icebp
mov
pop
push
cmpw
adc
fldt
rolb
lahf
enter
inc
push
imul
aas
shll
inc
xchg
mov
andb
sbb
cmp
inc
xlat
rorb
shlb
sbb
cmpsb
icebp
inc
add
push
push
roll
pop
pop
push
fsubs
push
mov
jbe
repnz
rolb
cmp
dec
fildll
xor
pop
loopne
and
call
jne
mov
andl
stos
lock
adc
fsubs
sub
hlt
jae
push
inc
mov
or
mov
mov
daa
inc
lea
add
or
dec
scas
fwait
inc
jae
xor
arpl
jo
dec
inc
cmp
testl
fcoml
or
jno
lcall
or
popw
adc
in
push
pop
cmc
add
xchg
ja
adc
subl
sbb
add
adc
jmp
aaa
xor
jb
lock
push
mov
ret
jno
pop
fstl
ss
dec
adc
ds
xor
iret
inc
aaa
or
inc
daa
push
and
adc
movsb
jp
sbb
mov
call
icebp
dec
xchg
pop
es
add
sbb
neg
imul
xlat
and
add
scas
inc
bound
mov
mov
lock
or
outsb
xchg
adc
sub
mov
push
add
mov
or
out
outsl
pop
adc
add
push
add
adc
out
popf
adc
mov
movb
jne
movsb
jmp
imul
xchg
xchg
push
aad
mov
jns
sub
imul
adc
push
adc
arpl
pop
int3
dec
jo
fdivr
fcmove
daa
lahf
movsb
sahf
xor
nop
jecxz
sbb
shlb
insl
das
idivl
enter
test
neg
sbb
std
inc
add
jo
les
out
sub
cwtl
sub
mov
push
pop
sbb
out
add
or
cltd
inc
cmp
testb
out
jne
xor
jle
or
adc
sbb
jmp
push
cmp
adc
add
sbb
loopne
lock
pop
negb
pop
mov
pop
sbb
mov
out
dec
pop
and
das
adc
sbb
hlt
sbb
dec
sti
rcll
adc
mov
sub
or
cmpsb
cmp
push
push
and
sbb
popf
adc
and
xchg
lahf
sub
jne
add
sub
cmc
pusha
sbb
roll
mov
adc
fcoml
xorb
dec
mov
adc
or
jne
rolb
adc
fs
les
in
aam
and
int
in
mov
dec
cmp
loopne
inc
push
xchg
xor
xchg
outsl
pusha
lahf
xor
and
ret
jo
push
pop
lods
pop
js
test
xchg
icebp
lods
and
scas
inc
mov
pop
add
add
jmp
jl
outsb
pop
adc
test
pop
push
jbe
xor
addr16
ds
cmc
jl
sub
jl
andl
jmp
add
pusha
movsb
push
cli
daa
dec
and
lahf
mov
sub
mov
imul
cmp
xor
and
inc
aaa
jge
mov
nop
pop
dec
mov
clc
mov
call
sar
xchg
xchg
sbb
jmp
push
xchg
mov
repnz
add
push
stc
adc
dec
mov
sbb
xchg
xor
pop
dec
add
int3
movl
rolb
mov
cmc
paddb
dec
sar
aaa
lods
xlat
push
cwtl
roll
aaa
sub
popf
mov
xor
popa
mov
and
loop
movsb
into
add
bound
rclb
or
push
add
pop
jno
ljmp
rol
int3
lcall
inc
sub
pop
lock
or
cltd
cli
or
jo
jmp
jne
sub
xor
sub
push
loope
clc
push
ss
pop
dec
sub
clc
add
jp
mov
leave
test
add
xchg
pusha
jge
jno
mov
adc
mov
ss
daa
nop
cltd
add
clts
pop
in
push
in
cmp
pop
sti
sub
inc
adc
jmp
mov
loop
movsb
roll
sub
and
push
inc
jmp
in
int
inc
mov
mov
or
add
scas
rep
sbb
insb
in
or
rcr
lds
movb
loope
pop
push
push
dec
mov
jmp
imul
and
mov
pop
cltd
mov
pop
gs
xchg
test
mov
dec
mov
jmp
das
mov
shl
sti
shrb
mov
test
inc
cld
jo
sbb
jmp
pop
cmc
or
cld
popa
and
add
inc
adc
xchg
xchg
push
jno
lret
ss
and
and
jle
insl
sub
hlt
push
mov
pop
leave
inc
sbb
test
outsl
enter
cld
xlat
push
dec
sbb
stc
xchg
sub
push
and
push
stos
subl
push
jp
pop
cmp
cli
sbb
aad
lds
in
dec
or
ja
xchg
roll
mov
jmp
or
xchg
sub
mov
pusha
inc
inc
mov
pop
sub
out
and
inc
jmp
sbb
jne
xor
mov
xor
icebp
fs
scas
addr16
dec
mov
xor
sbb
adc
xchg
pop
inc
sbb
lea
adc
cwtl
mov
ret
pusha
repnz
add
imul
push
xor
xchg
xchg
shlb
adc
mov
enter
push
por
je
jmp
cwtl
and
adc
inc
into
sbb
jg
sbb
ret
gs
in
add
jbe
cltd
pop
add
push
xor
sbbb
popa
jns
or
inc
push
pop
fldl
in
jmp
mov
add
add
dec
add
pop
add
js
aas
je
or
pop
sub
mov
and
loopne
jp
dec
sub
sbb
rorb
mov
push
and
das
add
adc
inc
mov
adc
int3
jne
mov
movsl
pop
mov
mull
xor
pop
out
xchg
sub
call
mov
push
pop
inc
les
fstl
adc
out
or
stc
shrb
insb
add
rclb
inc
mov
and
adc
aad
pop
xchg
pop
aam
cmpb
add
jmp
lret
dec
or
cmp
daa
dec
mov
fcomp
add
movsb
dec
mov
pop
push
push
or
imul
lcall
dec
test
std
adc
dec
ret
leave
xchg
inc
xor
adc
sahf
sbb
xchg
or
pop
jl
mov
rorl
and
jo
inc
pop
dec
sbb
lock
xchg
add
xchg
add
call
movl
pop
mov
sbb
pop
dec
mov
dec
mov
loopne
movsl
jo
xchg
scas
dec
add
mov
dec
enter
push
dec
sbb
les
push
js
add
hlt
pop
pop
jmp
add
insb
shlb
in
sub
pop
push
mov
int
bound
pop
and
bound
outsb
adc
and
sub
popa
pop
ja
fildl
push
shrb
cmp
mov
and
pop
jnp
push
loop
or
add
and
mov
or
popl
addl
pop
mov
and
pop
xor
xor
pmaxub
mov
jbe
les
je
sbb
dec
test
mov
push
rcll
test
xor
and
sub
lock
div
fs
push
fs
testb
add
xchg
mov
lret
fdivrs
cmp
xor
test
cwtl
pop
out
inc
mov
insl
insb
es
or
push
stc
inc
xchg
ret
sub
pop
lret
dec
mov
ret
jnp
pop
cs
subb
pop
inc
inc
or
mov
sbb
mov
mov
jecxz
cli
push
adc
sbb
or
sarl
and
stos
pusha
cmp
xlat
mov
cmpb
inc
and
mov
je
cmpsl
leave
add
pop
cli
add
movsb
jo
scas
imul
notl
cmpl
popa
dec
mov
add
into
mov
mov
je
testl
in
push
or
addb
cld
rcl
call
fyl2x
add
cmp
call
in
call
bound
pop
jecxz
test
xor
mov
loopne
or
in
ret
es
mov
nop
in
dec
mov
in
call
jmp
lcall
cli
or
cmp
adc
mov
jb
mov
cmp
pop
mov
fildl
ret
mov
adc
cmp
dec
mov
mov
jge
imul
or
xchg
mov
adc
les
or
lea
xor
push
fs
inc
inc
add
fs
sub
push
sub
mov
fiadds
in
adcl
ret
add
mov
add
sbb
jno
xchg
xlat
sub
sbb
sbb
add
lea
dec
rcr
or
adc
mov
adc
ljmp
sub
jle
jg
mov
inc
arpl
add
fsubr
test
sbb
mov
rorb
bound
sub
scas
dec
in
adc
jge
je
adc
pop
pop
fnstcw
inc
inc
js
push
pop
mov
insb
and
pop
mov
mov
add
mov
cmp
mov
inc
add
push
cmp
pop
and
sar
xchg
cmp
sbb
int
movl
andl
fimuls
in
ret
jo
xor
test
loop
cmp
sbb
jb
adc
cld
cld
cld
and
in
inc
add
xchg
add
inc
push
sbb
or
xor
test
jecxz
mov
mull
push
int
sub
aas
mov
sbb
sahf
xchg
adc
jno
shlb
add
lcall
push
cwtl
or
in
adc
in
cmp
or
lahf
mov
fadd
and
mov
decl
adc
sti
jmp
aad
pop
adc
pop
adc
push
imul
sbb
and
or
inc
add
dec
cli
mov
sub
dec
sbb
enter
test
adc
insl
rclb
ret
test
pop
xor
mov
mov
xchg
xor
cld
push
adc
xor
test
ljmp
mov
setns
dec
dec
dec
dec
xor
pop
mov
push
inc
pop
mov
push
int3
sub
and
lds
sub
mov
ret
pop
adc
vpackssdw
mov
aas
push
fcmovnb
and
pop
dec
dec
cmovs
dec
dec
dec
jb
inc
push
pop
pop
movsb
mov
or
push
push
fidivl
adc
or
inc
dec
aas
push
push
xchg
imul
bound
mov
inc
push
lcall
fs
xchg
cmpsl
shlb
xchg
jmp
pop
iret
cmp
pop
mov
dec
sub
fisubrl
insl
outsl
sbb
dec
ret
pop
lds
and
mov
clc
add
push
jno
jb
call
pusha
or
outsl
fists
push
inc
pusha
mov
test
out
push
dec
cmp
hlt
jle
es
mov
xorb
add
aas
cmp
imul
test
dec
inc
xor
xor
sbb
or
pop
add
fsubrs
xchg
xor
or
fisubs
sub
or
pop
mov
push
dec
jbe
mov
mov
sbb
sbb
add
jo
pusha
dec
shlb
leave
sahf
das
jae
pop
ds
mov
dec
cmpsb
push
xor
add
xor
adc
add
pop
cmpsb
mov
les
push
push
cmp
mov
sbb
mov
movsl
pop
lock
out
jecxz
xor
daa
mov
jbe
sbb
sub
mov
shrl
mov
dec
jge
les
imul
or
or
mov
cmp
sub
into
cwtl
pop
sbb
scas
loopne
jbe
or
cmp
pusha
in
std
dec
loop
and
cmc
sub
scas
rorb
push
xor
jno
mov
mov
orb
adc
negb
cli
sub
iret
mov
inc
sbb
fcmovne
stc
pop
xor
push
rol
add
cmp
ret
loop
test
xchg
lds
cltd
sub
pop
and
pop
adc
push
xchg
cmp
imul
and
fidivrs
insb
sbb
jecxz
xor
mov
and
jg
movzwl
or
xor
mov
sar
int3
jne
cmpl
pop
std
mov
push
imul
and
xor
cmp
push
xor
outsb
or
cmp
inc
jnp
push
cmc
shlb
pusha
imul
rcrl
push
iret
xor
jae
cmpsb
mov
jo
jne
inc
push
xchg
pop
cltd
cmovo
xchg
movsb
test
push
pop
orb
jne
sub
or
shl
or
popa
push
push
push
sub
fists
ds
xchg
incl
or
out
add
insb
pop
outsb
pop
push
orb
xchg
push
mov
aaa
sub
dec
jo
xor
pop
push
ret
jle
inc
pop
and
pop
lea
lea
cmp
daa
dec
ja
sub
dec
je
adc
sub
test
outsl
cmp
or
dec
lcall
add
and
sub
stc
fcmovnu
lcall
outsl
and
xor
rcll
xor
icebp
or
sbb
mov
sbbl
mov
mov
mov
push
testb
inc
add
add
movsl
sahf
inc
popa
xchg
or
clc
jns
testb
and
jmp
repnz
cs
das
pushf
shr
es
sbb
cmp
xchg
cltd
push
jbe
lods
imul
rolb
add
subl
xchg
jne
add
stc
jl
dec
test
call
es
ret
adc
cli
and
mov
push
cmp
clc
hlt
push
pop
insl
out
push
dec
xchg
pop
movsl
add
mov
and
sbb
cs
xor
push
cmp
fimuls
adc
pcmpeqb
and
add
jmp
sub
jp
add
test
enter
xchg
adc
or
jne
cltd
and
sbb
push
dec
cmp
pop
in
iret
xchg
add
bound
jno
sbb
ret
cmp
repz
push
mov
imul
sub
inc
and
clc
pop
add
jmp
sub
inc
sub
pop
vmovshdup
inc
jmp
sbb
bound
je
cmp
jns
dec
es
ror
cmpsb
xchg
inc
inc
jmp
ret
mov
insb
fistl
and
add
adc
js
adc
adc
jb
add
test
clc
inc
mov
inc
mov
cmp
inc
mov
rcll
mov
mov
stc
cmp
hlt
je
clc
sbb
sub
call
fs
xlat
cmp
push
test
add
adc
orl
sbb
sbbl
movsl
outsl
mov
xchg
les
fisttps
lahf
mov
sarl
pusha
adc
test
cltd
sbb
clc
pusha
lea
gs
dec
push
mov
add
lock
cld
insb
imul
shlb
or
sub
xchg
sbb
enter
add
add
dec
mov
add
mov
popf
sbb
xlat
scas
inc
pusha
add
rolb
fucomip
pop
sbb
orl
xor
sbb
xor
xor
push
stc
out
and
xchg
mov
mov
pop
out
in
xchg
add
das
sub
mov
xchg
pop
les
repz
xchg
sub
inc
or
mov
ljmp
les
jmp
mov
ret
adc
mov
cltd
rcl
sub
sbb
imul
sbb
pop
out
adc
dec
xlat
mov
adc
lret
jp
mov
loop
jb
nop
sbb
sub
inc
sbb
add
pop
outsl
xor
mov
cli
popa
loop
xor
cmp
adc
push
sub
clc
push
pop
or
sbb
inc
dec
test
add
call
in
ret
test
movsl
bound
adc
sub
pop
pop
push
jbe
inc
push
add
jg
pop
popa
andb
mov
hlt
xor
cld
sbb
js
mov
sub
js
into
leave
je
pop
popa
adc
and
mov
icebp
cmp
sub
add
add
adc
push
loopne
sbb
fsubr
ja
aam
and
ret
leave
or
rolb
push
xor
xor
jno
es
cmp
mov
hlt
cmpsb
adc
dec
fsubr
adc
xor
mov
add
sbbb
push
or
scas
cmpsl
dec
mov
stos
and
add
aas
roll
test
pop
fidivl
pop
jmp
jne
jns
mov
inc
xor
and
loope
test
into
sbb
pop
or
repz
mov
movl
test
xorb
mov
or
add
mov
xor
or
xor
adc
push
subb
mov
cld
sbb
inc
mov
jae
negb
or
add
gs
call
cmp
cmp
clc
push
mov
sti
rorb
push
and
stc
lock
push
cmpsb
push
loope
loope
test
push
pop
into
roll
sahf
adc
daa
das
dec
or
or
aaa
dec
dec
dec
inc
inc
inc
outsb
jecxz
inc
test
xor
addl
cmp
pop
push
pop
call
leave
fsubrl
ja
inc
sbb
sbb
xor
and
jae
cmpsl
movb
or
mov
rcr
pop
push
push
and
and
js
and
jnp
add
add
jo
test
inc
lea
xor
ljmp
nop
add
jecxz
mov
sub
cmpsl
lock
aam
dec
xor
repnz
and
nop
fsubrs
xor
push
int3
je
inc
out
dec
add
pop
mov
adc
xor
cmpb
inc
jo
pusha
or
and
mov
aam
sbb
push
ret
adc
add
xor
push
push
add
lods
repnz
and
cmpsb
orl
je
adc
push
insb
sub
xor
mov
sub
add
mov
inc
sbb
repnz
clc
push
aaa
sbb
xor
in
adc
mov
cmp
and
aam
mov
rolb
shrb
inc
adc
dec
cmp
push
fs
sbb
sbb
sbb
or
fs
ss
pusha
xor
test
lahf
xor
or
jb
decl
dec
clc
ret
push
mov
enter
xor
je
das
js
dec
mov
or
or
cli
adc
inc
xor
outsl
nop
adc
pop
dec
mov
out
dec
and
mov
and
xchg
xchg
mov
cmpl
rolb
sub
pop
call
lods
dec
lock
pop
mov
adcb
loop
fs
pop
cmp
mov
push
adc
inc
out
push
inc
mov
xor
aad
push
das
add
add
scas
jae
in
mov
imul
push
sbb
ret
push
mov
ljmp
adc
imul
ucomiss
je
and
push
mov
jne
test
sub
mov
fsubrs
test
cmp
add
adc
or
adc
nop
clc
add
cmp
push
rclb
inc
js
dec
push
sub
loope
in
or
adc
or
test
adc
mov
and
push
xchg
loopne
push
push
xor
loopne
test
out
daa
inc
xor
adc
add
in
jg
lods
sub
dec
jbe
imul
and
cmp
cwtl
push
pop
fcoms
mov
outsl
sbb
fsubrs
das
clc
add
pop
mov
xchg
sbb
loop
or
dec
pop
cmp
and
jmp
adc
xor
cmp
pop
and
sbb
cmpsb
mov
scas
and
add
in
push
jg
adc
add
nop
mov
in
push
sbb
sbb
push
sbb
out
pop
outsb
sub
xchg
in
jbe
idivb
daa
mov
bnd
jae
sub
sbb
inc
add
push
fnstenv
cmp
adc
daa
call
pop
jg
push
icebp
imul
adc
adc
scas
sbb
bound
jb
fstpt
loope
sbb
enter
out
add
jbe
sahf
dec
pop
push
add
dec
icebp
add
enter
xor
shl
jp
xor
or
rorb
stos
sub
into
push
dec
lods
sbb
pop
nop
dec
and
test
cmp
inc
push
and
pop
xor
popf
inc
sub
comisd
lret
or
hlt
aad
sbb
pop
jg
movl
mov
pop
cld
js
add
and
pusha
or
pusha
jo
pop
add
mov
sub
inc
fsts
inc
inc
stos
and
bound
icebp
dec
and
cltd
inc
cmp
xor
mov
push
les
mov
loopne
inc
push
lods
and
inc
add
int
adc
mov
scas
pop
test
flds
mov
clc
add
js
ret
inc
xor
lsl
add
insl
fdivs
arpl
fidivs
jb
xchg
add
mov
xor
mov
push
sbb
stc
cmp
fs
loopne
aad
mov
xor
repz
call
clc
imul
rcll
push
add
jae
adc
jg
mov
mov
dec
or
sahf
xor
xchg
popa
sbb
cmp
fildl
lods
sbb
dec
cmp
dec
rcrb
and
je
and
ljmp
lret
shlb
arpl
rol
xchg
outsb
and
int
inc
rolb
mov
xor
push
cmp
lods
and
add
xchg
xchg
imul
lcall
jno
dec
ret
pop
add
pop
test
sti
ja
sbb
lods
pusha
cmpsl
xchg
xor
xchg
push
add
sub
pop
mov
jb
sub
inc
and
das
js
pop
fwait
lods
jno
xchg
popf
loop
inc
mov
jmp
arpl
cli
outsb
ja
sub
mov
sbb
or
jl
jmp
out
orl
sbb
adc
mov
sbb
in
jmp
push
jnp
sub
aaa
mov
fs
jbe
insb
je
insb
mov
xchg
xor
in
cmpsb
hlt
xchg
gs
movb
stos
mov
pop
or
stos
dec
and
and
pop
mov
add
pop
jo
mov
sbb
inc
inc
xchg
dec
adc
fwait
aas
mov
je
push
push
inc
arpl
sti
add
push
dec
pop
xor
icebp
js
push
test
jmp
aaa
sbb
mov
jne
ret
sbb
sbb
cmp
test
cmp
in
sbb
pop
icebp
or
add
test
shrl
fsubs
mov
mov
push
cmpl
mov
add
jnp
inc
or
popa
test
mov
stc
xchg
and
add
pop
jns
pop
dec
mov
push
mov
sbb
popf
pop
and
mov
ret
cmpsb
sti
or
leave
mov
add
mov
test
jmp
mov
loopne
mov
fidivl
jne
addl
pop
push
sti
gs
cmpb
xchg
ss
imul
and
add
xorb
mov
sub
dec
mov
sbb
test
mov
push
dec
xor
mov
fimuls
jmp
punpckldq
popa
add
push
dec
xchg
mov
outsb
dec
mov
cmp
adc
pop
pop
rorb
dec
inc
int
outsb
mov
pop
pop
popf
xchg
push
cmp
jne
mov
arpl
ljmp
lea
mov
xchg
dec
and
pop
mov
iret
adc
je
mov
aad
dec
sub
inc
xchg
cli
mov
push
loope
sahf
push
jne
rorl
or
or
fdivs
push
push
cmp
mov
in
roll
and
in
sahf
popa
iret
cmp
xor
adc
test
push
adc
mov
pop
lods
movsl
daa
sub
xchg
xor
sub
xor
shld
roll
adcb
and
sub
mov
mov
rolb
movsl
daa
popf
nop
ja
mov
pop
add
sbbb
stos
cmp
pop
das
sbb
popf
push
cmp
jne
dec
push
fdivrs
jne
lea
mov
dec
xchg
mov
push
mov
inc
sbb
dec
mov
call
xchg
ret
cmp
sbb
sbb
bound
add
pusha
xchg
sub
insb
pusha
xchg
push
adc
pcmpgtd
ret
rorl
ss
jbe
sti
mov
add
push
jmp
js
stos
lea
aas
shrl
or
inc
daa
bnd
int3
rolb
or
scas
pop
cmp
add
and
icebp
daa
int3
inc
and
test
gs
lods
insl
dec
mov
jmp
add
add
hlt
xchg
insl
dec
mov
adc
je
movl
mov
loop
test
mov
pop
and
lret
lcall
xor
jne
rcll
mov
cmp
shrb
outsl
pop
sbb
xchg
sbb
ror
hlt
push
lret
pop
add
adc
test
stc
inc
mov
dec
sbb
sbb
jno
and
mov
lods
cltd
and
inc
andb
cmp
es
or
dec
das
clc
clc
call
pop
test
adc
or
out
inc
xchg
jle
icebp
mov
insb
adc
pop
pop
jbe
in
add
adc
sbb
ret
nop
sbb
sbb
fs
inc
sarb
cmp
add
xor
cwtl
inc
jg
inc
push
jmp
fcom
xor
pop
and
hlt
es
inc
stos
jne
movsl
ss
jg
ds
xchg
dec
in
fsubr
es
mov
ja
movsl
and
xchg
dec
mov
sub
add
pop
pop
cltd
sub
sbb
pop
verw
push
fdivrl
addb
inc
jnp
add
push
xorl
mov
fwait
daa
dec
imul
dec
sarb
dec
loopne
nop
jbe
inc
dec
outsl
clc
and
sbb
call
mov
cmp
dec
push
jns
outsb
outsl
or
mov
lods
inc
cmp
push
bound
push
mov
nop
das
push
adc
hlt
push
mov
test
cwtl
gs
outsl
je
mov
mov
iret
shl
inc
push
inc
adc
leavew
inc
sbbl
push
add
aas
mov
and
iret
push
and
je
sub
pop
dec
jp
cmp
loope
add
adc
or
inc
outsl
sbb
dec
cs
mov
add
dec
and
pop
nop
mov
pop
ret
xor
sbb
in
and
mov
and
rol
fdivrs
pop
mov
lret
test
cmp
je
orl
dec
add
xor
push
push
cmp
clc
mov
adc
dec
xor
in
flds
mov
insb
add
inc
into
inc
frstor
jo
cwtl
int
and
sbb
pop
sub
or
cmp
addr16
or
jnp
inc
cmp
add
add
sti
lods
fsts
mov
hlt
pusha
adc
filds
sub
inc
add
nop
push
xor
loopne
xchg
xchg
sub
sbb
and
mov
push
shrl
pushf
shlb
cmpsb
push
or
arpl
sub
int
pusha
and
inc
ret
add
mov
mov
gs
and
daa
push
orb
lahf
jbe
inc
push
cmpsb
dec
or
hlt
cmpsl
push
shr
sbb
filds
shlb
fbld
dec
sub
inc
adc
cmp
cmp
pop
sbb
rorl
xchg
cmp
xchg
mov
andps
lock
lea
movsb
std
ja
mov
dec
adc
insb
inc
dec
cs
push
scas
add
and
pop
andl
test
sahf
aad
add
test
mov
xchg
sbb
mov
jne
lea
seto
neg
add
and
push
sub
adc
mov
pusha
mov
ret
hlt
sub
mov
mov
pop
cmpsb
inc
leave
or
loopne
and
xor
jmp
inc
lret
sub
inc
xchg
inc
js
pop
addb
push
std
movsb
imul
popa
insb
and
push
sub
cmp
jne
xchg
pop
mov
xchg
mov
pop
ret
dec
add
pop
fwait
or
btr
and
test
xor
js
push
roll
xor
mov
add
pop
daa
cmpl
negb
jbe
mov
mov
pop
out
pop
push
lock
inc
fiaddl
inc
nopl
es
xchg
in
lock
rolb
or
fcmovnb
sub
cmp
mov
adc
push
sbbl
cmpsb
sub
pop
sub
xlat
lea
or
lock
hlt
daa
inc
cli
shll
scas
xchg
test
out
inc
or
cli
je,pt
rcr
dec
or
lock
out
push
or
cwtl
call
scas
xor
ss
insl
cmc
add
scas
add
sub
clc
inc
jne
rclb
push
push
inc
cmp
lock
mov
or
jp
ljmp
push
mov
loop
mov
sar
add
mov
sub
gs
faddl
rcll
or
adc
mov
lock
jle
aad
repnz
jns
idivl
sub
mov
push
movsl
lock
inc
inc
call
iret
in
pop
shlb
ja
ret
mov
movsb
imul
lds
push
pop
or
je
pop
mov
pop
sbb
dec
mov
xchg
cmpb
lret
push
loopne
gs
aam
repnz
and
aam
sub
leave
dec
rcrb
pusha
in
scas
xor
lock
jno
lret
sub
pop
ljmp
inc
and
mov
sub
hlt
data16
push
mov
sub
inc
add
inc
inc
or
inc
add
scas
jo
or
clc
xchg
pop
ss
dec
push
inc
mov
pop
call
inc
add
or
out
inc
pushf
pop
sub
mov
fstpt
jg
sti
xchg
and
into
add
loopne
xlat
adc
sub
adc
mov
insl
pop
mov
inc
or
dec
aas
mov
ss
aad
mov
pop
mov
mov
sub
inc
popa
imul
in
insb
inc
and
or
dec
cmp
inc
sub
xor
jmp
jo,pn
pushf
mov
mov
shlb
sbb
adc
pop
pusha
mov
cmp
in
in
kmovw
mov
cmpsl
andl
and
repnz
lea
cmp
popf
or
dec
shr
cltd
sub
mov
xor
pop
adc
push
out
test
and
push
lea
and
mov
les
pop
les
ret
sub
push
mov
sbb
ljmp
pushf
lret
xchg
xor
xchg
xor
jno
bound
adc
inc
pop
jne
inc
arpl
pushf
push
je
adc
inc
add
xor
pop
repz
mov
mov
nop
pop
ret
adc
sti
sbb
xlat
dec
push
bound
inc
test
mov
mov
pop
dec
add
mov
fdivs
push
pop
xchg
push
add
scas
mov
bound
add
jbe
adc
rorb
insb
jo
in
pop
addl
sub
cmp
add
or
mov
xchg
jmp
jbe
aam
fimull
sbb
daa
cs
mov
scas
pop
jne
sbb
sub
xor
fldt
mov
orb
xchg
adc
and
push
pop
inc
dec
mov
mov
xchg
mov
je
dec
shlb
imul
inc
cmp
je
test
aaa
push
fcomps
imul
xchg
jne
sbbl
adc
or
into
add
ret
ja
cmp
mov
nop
xchg
nop
aas
or
dec
lcall
decl
int3
mov
add
inc
xchg
xor
pusha
or
test
cwtl
lea
or
insb
mov
dec
mov
or
jbe
jne
jno
and
dec
ret
fidivrl
inc
inc
add
dec
sbb
adc
in
mov
mov
sahf
popf
les
push
stc
sbb
xchg
mov
add
sbb
popa
fdiv
mov
mov
in
outsb
add
test
cwtl
les
inc
push
add
std
add
sbb
cmp
inc
push
push
orl
jb
movsb
or
cwtl
xchg
xchg
xchg
pop
nopl
adc
xchg
xchg
xchg
adc
add
repnz
movsb
pop
dec
dec
inc
add
in
push
dec
inc
add
fcomps
add
daa
mov
daa
mov
jecxz
or
pop
dec
outsl
addr16
testb
sbb
cmp
inc
jmp
fisttps
adc
pop
and
push
inc
mov
or
or
rcrb
inc
or
push
pop
daa
xor
testl
adc
or
add
push
lcall
addr16
jae
fimuls
xchg
out
add
movsb
outsb
or
push
pop
dec
jae
adc
push
pop
push
ljmp
sbb
sub
sub
ss
or
mov
mov
add
ljmp
xorl
add
mov
push
push
outsb
mov
ss
test
nop
faddl
jae
sub
add
dec
or
inc
or
pop
inc
outsl
adc
inc
or
mov
pop
push
and
mov
jb
aaa
inc
nop
rorb
fdivp
xor
sbb
or
sub
sub
adc
dec
jae
cmp
push
and
pop
shll
lahf
or
imul
xor
cmp
test
or
and
or
jle
mov
push
outsl
mov
mov
sbb
adc
or
test
das
pushf
dec
nop
in
push
int
add
fcomps
leave
add
or
sbb
xchg
dec
push
in
sub
out
popa
jne
addl
cmp
aad
adc
jg
cmp
test
jo
rcrl
cmp
cmp
add
inc
push
jp
lock
cwtl
xor
sbb
pop
xor
cmp
pusha
push
mov
hlt
inc
bound
mov
in
xor
divb
jo
out
jl
out
nop
lcall
sarl
in
sbb
push
inc
inc
hlt
jb
test
cmp
and
roll
pop
push
add
sub
dec
jl
pop
sbb
sbb
inc
or
pop
aaa
push
repz
fists
or
daa
add
xor
mov
push
or
outsb
lcall
xchg
cmpb
mov
mov
je
or
pop
mov
test
pop
xor
sbb
ret
cmp
fisubl
mov
mov
inc
jg
xchg
sbb
ss
das
push
cmc
mov
mov
mov
and
sbb
and
call
subb
inc
cmp
push
js
xchg
pushf
xchg
cmp
xorb
test
mov
stos
sub
dec
bnd
imul
dec
test
pop
cmp
push
lcall
sbb
adc
bswap
jae
add
js
sub
push
call
jl
sub
push
add
fwait
mov
pop
mov
arpl
repnz
jb
dec
nop
rorb
loope
int3
add
dec
mov
sbb
and
jbe
xchg
outsb
insb
mov
test
xor
les
in
leave
pop
data16
nop
push
int3
pop
fidivs
lods
push
pop
fsubp
push
cmp
or
mov
insb
in
push
jo
dec
insb
aas
pop
dec
cmc
pop
xor
out
loopne
adc
sbb
dec
pop
gs
xor
jo
imul
or
and
ret
push
and
xor
push
repnz
pusha
insb
pop
test
inc
and
ja
and
js
lods
mov
and
add
mov
adc
xchg
dec
pop
pop
xor
rolb
bound
or
pop
jo
cld
add
mov
fcoms
pop
push
sbb
prefetch
or
jl
cmp
dec
fbstp
or
cltd
inc
imul
aas
into
dec
inc
sbb
add
scas
inc
mov
cmpsl
sahf
sub
adc
imul
fadd
stc
or
pop
xchg
fs
or
jge
inc
fists
adc
pushf
xchg
push
sub
add
and
adc
fmuls
lods
lret
pop
out
mov
scas
ret
jne
dec
add
nop
add
inc
or
lea
xor
add
or
jae
mov
xor
push
inc
xchg
sbb
in
xor
mov
add
les
enter
adc
aam
dec
enter
pop
add
notl
int3
sub
fdivrs
daa
out
adc
rol
dec
in
stc
mov
mov
mov
pop
mov
mov
nop
das
pop
mov
mov
stos
inc
or
add
xor
xchg
jl
cmpl
js
mov
or
jecxz
dec
pusha
add
enter
pop
jmp
add
pusha
push
push
or
sub
jge
add
sbb
orl
addr16
cli
sub
outsb
pop
filds
ficoms
ret
out
inc
cmp
push
sbb
xor
xchg
or
push
mov
jmp
pop
and
dec
sbb
or
cmp
xchg
mov
sub
leave
imul
sub
addr16
sub
mov
pop
stos
filds
bound
dec
or
inc
sahf
mov
hlt
rcl
push
cmp
je
hlt
nop
cli
popa
pop
xchg
cmpsb
inc
les
push
and
jmp
jg
mov
lretw
add
push
fisubrl
push
rclb
inc
pop
sbbb
xchg
mov
jg
mov
leave
ror
lcall
sub
mov
xchg
or
ds
movb
lahf
mov
inc
js
into
imul
rorb
inc
mov
add
jmp
add
push
adc
lret
aad
sbb
retw
aas
imul
xor
mov
sub
jo
sbb
test
shlb
adc
xchg
add
rorb
mov
cs
xchg
dec
ret
jl
testb
or
stos
push
inc
mov
sbb
arpl
push
in
nop
mov
or
pop
sub
add
pop
mov
push
inc
sub
dec
les
or
sub
iret
aas
rcl
mov
in
pop
dec
mov
and
addb
and
xlat
and
sub
xor
ret
enter
mov
sub
jbe
mov
inc
sarl
bound
es
cmp
dec
mov
cmp
dec
jg
add
xor
jb
fwait
inc
scas
xor
xchg
add
xchg
ret
leave
push
in
scas
push
test
and
mov
jne
sub
jb
xor
jl
xchg
adc
push
cmp
cmpsl
cli
xor
or
std
idivl
adc
mov
mov
adc
and
mov
add
inc
lock
and
and
pop
push
sbb
dec
ret
mov
std
je
or
adc
dec
dec
dec
fadds
dec
pop
and
adc
pop
ds
inc
rolb
mov
test
in
jp
xor
stc
push
pop
addr16
in
push
dec
loopne
loope
leave
shlb
adc
sbb
pusha
dec
inc
cmpsl
cmp
decl
jnp
push
or
enter
pop
xchg
in
xchg
pop
ja
cmc
and
call
fdivrs
add
xor
push
fs
andb
call
pop
push
inc
mov
sbb
js
xchg
shrb
fiadds
cmp
and
push
and
bound
pop
loopne
mov
nop
add
dec
mov
lock
addl
xchg
or
out
add
add
push
mov
addl
stc
call
jle
mov
and
and
pushf
hlt
call
inc
sahf
inc
sub
and
jmp
les
or
hlt
mov
insb
or
andb
push
sub
movsb
fwait
cmp
mov
ret
or
xor
outsb
cs
test
dec
sti
push
dec
and
test
pop
ret
loope
test
push
inc
in
add
add
or
mov
in
sbb
sbb
in
lcall
movb
outsl
inc
cs
pushf
sbb
in
cmpsb
popa
icebp
loopne
dec
inc
dec
in
clc
loopne
push
push
inc
pop
add
sbb
jae
int
xchg
xchg
pop
ljmp
ss
pusha
sbb
and
xchg
rcl
shl
fdiv
and
push
push
cltd
mov
ss
xchg
add
fwait
cmp
gs
rorb
add
das
daa
inc
mov
jecxz
cmpl
ret
cmp
loope
mov
ljmp
dec
pop
xchg
jb
out
repnz
push
pop
mov
xchg
sarb
or
xor
jg
mov
and
sub
sbb
dec
sti
fists
sbb
xchg
or
sub
call
pop
xor
je
pop
add
sbb
sub
add
inc
xor
fdivr
push
stos
add
xchg
xchg
push
push
jns
arpl
aad
lds
sahf
loope
stos
add
push
sub
fildll
or
adc
loope
gs
jne
dec
inc
mov
das
lock
push
clc
mov
push
dec
std
pop
add
fwait
insb
pusha
add
inc
enter
gs
push
inc
lcall
adc
and
pop
loopne
das
add
lds
inc
orl
insl
mov
or
add
nop
dec
push
add
sub
and
gs
aam
or
lea
idivb
pop
or
dec
cmp
aas
push
jl,pn
push
mov
dec
mov
or
adc
mov
in
inc
push
push
sarb
push
pop
push
pop
call
push
test
pop
push
lahf
scas
fucomip
xchg
adc
pop
or
sbb
stos
lods
test
movsl
jo
hlt
dec
test
cs
lods
mov
fcoml
inc
add
ss
mov
pop
das
icebp
jb
mov
mov
xchg
mov
adc
or
dec
rolb
adc
clc
jae
adcb
out
test
mov
cmpsl
push
dec
cmpsl
enter
mov
cmpsb
imul
repnz
leave
imul
and
mov
cld
pop
push
xchg
shll
jmp
pop
dec
inc
xchg
or
lret
jge
jge
test
je
insl
mov
push
pop
adc
jmp
sub
cld
dec
pop
push
jmp
rcrb
shr
mov
in
mov
lods
lods
je
xchg
jno
rorb
push
sbb
inc
add
sub
adc
data16
jne
cmp
mov
push
mov
jbe
js
adc
dec
sbb
jle
int3
mov
and
inc
enter
enter
sub
in
and
enter
loopne
orb
jnp
cmp
pop
test
enter
add
pop
inc
or
dec
sub
or
dec
imul
insl
and
cmp
xlat
mov
inc
ds
in
push
movb
imul
aad
shlb
ret
and
pop
jg
insl
dec
add
push
movsb
push
add
or
cmp
imul
pop
xchg
imul
cmp
fcoml
imul
push
inc
adc
loopne
popa
fisttpll
rorb
les
push
or
mov
or
or
das
inc
lcall
adc
je
ljmp
mov
aaa
pop
imul
push
sbb
test
adc
ret
popa
adc
loopne,pn
sub
or
in
xor
and
add
fucomip
in
jecxz
pop
lahf
sbb
outsb
mov
lock
outsb
jle
pop
sbb
test
pop
jmp
mov
pop
and
mov
cmp
inc
mov
movl
xchg
inc
add
xor
or
imul
adc
xchg
xchg
push
xlat
outsb
or
sbb
hlt
movsb
dec
and
dec
sub
lea
mov
or
hlt
and
or
mov
repnz
push
mov
cltd
and
or
rol
add
sub
in
inc
add
pop
rcr
and
clc
repz
adc
push
cmp
xchg
adc
int
mov
sbb
push
mov
sub
pop
sub
in
dec
push
push
inc
dec
dec
dec
dec
or
icebp
lea
inc
mov
call
mov
mov
xchg
js
pop
out
add
adc
imul
cmp
mov
push
cwtl
add
out
push
xchg
jo
mov
outsl
add
inc
shrb
ret
mov
inc
inc
pushf
inc
sub
scas
mov
es
mov
leave
int
mov
nop
mov
sbb
fcoml
and
roll
sahf
jnp
jmp
mov
add
imull
push
adc
ret
call
jb
out
arpl
and
cmp
push
enter
mov
mov
pop
mov
adc
loopne
in
fucomp
mov
clc
addr16
push
es
mov
sbb
icebp
jmp
mov
sbb
mov
mov
rcl
inc
pop
and
imul
push
and
add
jl
push
pop
sub
das
popa
jb
inc
pushl
mov
rclb
insb
mov
cmpsl
popa
dec
xor
xor
sbb
ret
or
test
sar
dec
in
xchg
aam
jae
adc
add
cmp
movsb
xor
in
call
pop
in
insb
sub
push
sbb
jl
mov
gs
clc
pushf
cld
and
add
sysret
movsb
xor
or
les
or
xchg
das
mov
cmp
jmp
insb
lret
jne
add
jae
outsl
je
dec
xor
dec
imul
jb
pop
dec
sub
in
and
pop
aaa
das
and
mov
push
sub
push
dec
or
ds
sbb
jne
test
push
test
insb
in
or
pop
jge
cmp
aas
xchg
nop
or
and
jo
pop
add
clc
and
push
faddl
inc
aas
sub
pop
leave
in
cmp
xchg
mov
push
and
xchg
fsubrl
rorb
or
in
insl
mov
mov
jne
sbb
ss
push
xchg
push
mov
dec
scas
and
test
fidivrs
lock
inc
arpl
imul
mov
add
stc
addb
or
add
cmp
push
jp
lret
repnz
clc
push
adc
pushf
add
sbb
mov
dec
ds
nop
or
and
ss
in
cmpb
pusha
jl
dec
mov
adc
arpl
pop
mov
test
mov
cmpsl
mov
insb
popf
pop
mov
imul
jne
rorb
push
pop
add
imul
cmp
ja
inc
pop
sbb
aaa
ret
lahf
leave
mov
adcb
ret
call
adc
add
ret
push
shl
jmp
push
movsb
add
in
ja
jge
and
jbe
adc
fstl
xchg
mov
mov
test
push
fs
push
sbb
cmp
push
or
mov
outsb
adc
out
arpl
pop
adc
lods
sbb
shrb
inc
sub
adc
test
ret
mov
sti
lcall
or
mov
divl
push
dec
clc
xor
xor
xor
add
subb
pop
mov
sub
movsl
pop
add
xor
cltd
loope
mov
push
xor
sbb
cmp
mov
shlb
jno
push
mov
aaa
lock
sbb
mov
mov
pop
mov
mov
lret
jge
fwait
sub
shll
test
jmp
dec
push
pop
nop
js
sub
fwait
or
sarl
cmpsl
add
or
icebp
and
jnp
imul
or
fsubrs
sub
push
add
xchg
xor
or
or
orl
push
insb
sbb
add
inc
and
jecxz
add
add
and
mov
or
mov
adc
and
sbb
sbb
popa
rclb
mov
cmp
addr16
mov
ret
cmp
jmp
fcmovb
orb
flds
imul
mov
and
sahf
sbb
and
imul
or
or
jl
test
xor
js
mov
cmpsl
and
hlt
add
inc
pop
xlat
jmp
jo
xchg
data16
xchg
inc
gs
xchg
jmp
stos
and
sbb
mov
push
dec
cli
or
jl
push
cmpl
dec
sub
xchg
hlt
jbe
test
add
jae
idivb
mov
jns
add
or
adc
inc
imul
decl
cmp
xchg
les
dec
shlb
inc
inc
mov
xorb
jmp
jge
ficomps
or
jp
scas
cltd
aam
sbb
or
sub
and
sub
and
fadd
pop
inc
popf
push
fidivs
test
or
or
adc
loop
lcall
adc
adc
or
adc
push
pop
mov
ficoms
and
cld
addr16
sub
add
clc
clc
cmp
add
in
add
pop
sbb
rcr
sbb
or
jg
sub
jne
inc
or
xor
push
or
jg
clc
pusha
and
or
xchg
or
or
jle
push
sarl
sti
inc
shrb
inc
lock
or
in
xor
mov
shll
add
cmp
adc
lock
mull
sbb
subl
mov
pop
sbb
push
dec
push
es
xchg
dec
lcall
daa
test
ds
push
and
inc
add
div
mov
loope
inc
dec
dec
cmp
fmull
mov
or
nop
dec
sub
ds
ss
add
jl
add
orb
fsubr
gs
and
sub
shll
scas
cmpl
or
jne
dec
inc
jge
pop
adc
or
pushf
pop
pusha
jbe
sbb
mov
push
jmp
mov
add
in
add
mov
ret
xchg
or
or
mov
mov
jbe
pushf
jp
mov
inc
sbb
jns
addr16
rorl
out
loop
dec
insl
pop
rol
and
outsb
sub
and
xor
add
mov
gs
rclb
or
xchg
lock
loopne
sbb
sub
shlb
jno
dec
sbb
fistpll
loopne
es
lret
nop
add
xlat
jo
or
jle
add
cs
inc
push
sub
sti
loopne
sbb
cmp
in
add
xor
mov
adc
push
sub
push
sub
mov
fiadds
fidivrl
cmpsl
push
fimuls
das
in
pop
cmp
cmp
xor
add
xchg
dec
add
xor
and
push
inc
jp
cmpsb
jne
into
sti
adc
ja
outsl
dec
inc
cmpsb
cmc
pop
and
cmpsb
cmp
mov
cs
or
adc
inc
inc
cmp
dec
adc
ss
jle
xchg
sbb
and
adc
push
sbb
or
ss
sbb
imull
decl
xchg
jo
mov
je
pop
xchg
xchg
stos
test
adc
jmp
add
sbb
and
add
inc
or
js
xchg
cmp
jle
mov
sbb
or
inc
or
jo
jmp
sbb
int
pop
cmp
add
repz
add
push
or
pop
fdivs
push
jge
cmp
out
mov
jp
shl
push
scas
mov
mov
push
sbb
sahf
mov
sub
mov
jb
inc
sbb
push
cmp
fldcw
mov
cmp
jae
pushl
or
insl
sub
push
sbb
pop
mov
mov
sub
add
lea
inc
push
inc
cwtl
or
and
dec
je
mov
rclb
add
aaa
xor
mov
fwait
jo
jbe
shr
mov
lea
xchg
sub
inc
cs
xor
lds
adc
cmp
adc
outsb
jp
sbb
pop
adc
xchg
mov
jmp
out
pop
mov
pop
inc
xor
mov
loop
add
jg
or
aad
lcall
nop
jae
xchg
adc
xchg
xor
mov
lea
mov
or
or
add
ja
fbld
add
dec
scas
add
adc
js
imul
pop
out
out
or
adc
adcl
cmp
or
jns
neg
mov
sub
out
pop
loope
xchg
icebp
loopne
jg
push
jge
js
leave
sub
and
mov
mov
cmp
sbb
sub
das
seta
add
or
sti
sarl
mov
mov
add
outsl
sbb
adc
and
pusha
push
out
jo
or
mov
sar
shr
popf
lahf
adc
add
addr16
dec
push
sbb
push
cmp
mov
cmp
xor
mov
sub
out
adc
ret
mov
sahf
jbe
pop
fwait
or
jae
cli
jl
daa
leave
jb
jecxz
xor
cmp
or
aad
mov
xor
fistps
mull
aam
xor
and
dec
sbb
or
add
loope
inc
and
mov
cmp
mov
pop
xor
faddl
les
data16
scas
lods
pop
rolb
int3
repz
fwait
scas
mov
cmpsl
and
jecxz
roll
or
shrl
dec
inc
loop
les
loop
movl
inc
and
or
out
push
inc
add
or
or
jns
xchg
jle
or
dec
jae
adc
adc
divl
pop
ss
jo
call
and
dec
add
adcl
pushf
push
xlat
por
push
xchg
xchg
pop
xor
adc
and
push
mov
jae
add
addr16
in
rclb
or
dec
jmp
ret
xlat
pop
mov
mov
mov
cld
mov
sahf
mov
inc
inc
js
push
add
cmp
xlat
outsb
push
ss
inc
xor
add
adc
sub
out
out
add
and
push
adc
rolb
popf
cli
sub
cmp
mov
mov
ret
in
cmp
adcl
or
rolb
lods
add
arpl
and
gs
lods
movsl
lods
lahf
lock
sub
sbb
or
icebp
or
pop
cmp
pop
pusha
sub
push
pop
sbb
push
cwtl
adc
shlb
push
mov
lea
add
mov
jne
adc
fsubrs
and
push
sbb
jle
popf
dec
inc
inc
jl
add
push
inc
out
push
and
cmp
inc
leave
pop
pusha
jbe,pn
or
inc
mov
jbe
push
jb
sub
adc
or
xor
dec
jle
jbe
shl
je
fmuls
les
cmp
pop
xor
inc
jle
out
sarl
adc
adc
pop
cmp
and
cmc
cmp
lret
inc
pop
jecxz
push
sub
mov
push
sbb
sub
adc
jae
daa
pusha
pop
sub
stos
mov
jbe
scas
xor
sub
fmulp
sbb
sbb
push
decb
jg
fistl
addr16
inc
jle
add
jl
pop
inc
cmp
pushaw
lret
ror
data16
mov
sahf
adc
sbb
cmp
sahf
inc
sub
sub
pop
loopne
in
push
push
loopne
sbb
xchg
mov
xor
out
loopne
jo
add
sub
aaa
loope
fnstsw
or
push
fdivl
dec
mov
xorb
pop
enter
jl
push
jb
sbb
cmp
jle
add
mov
push
mov
jo
clc
sub
add
mov
scas
jle
loope
pushf
lret
cmp
cwtl
push
bound
aaa
pop
or
jge
pop
jg
cmp
and
and
dec
imul
pushl
jbe
call
ss
fsubrs
dec
mov
jmp
sub
push
inc
pop
xor
call
pop
push
inc
and
int
gs
hlt
sub
sub
adc
add
pushf
sbb
mov
paddsb
push
fsubl
or
out
dec
mov
lcall
test
pop
ds
xchg
cltd
push
icebp
dec
xchg
cmp
loopne
xor
or
mov
je
mov
adc
dec
ds
pop
js
add
mov
repnz
mov
mov
or
nop
loope
add
jb
lds
inc
in
mov
xorb
fnstsw
push
xor
cltd
dec
add
mov
inc
dec
dec
movb
fsubp
cwtl
or
dec
outsb
mov
or
and
into
aad
dec
add
push
bound
dec
add
in
jbe
sbb
aad
add
leave
mov
hlt
iret
insb
movzbl
adc
test
scas
mov
inc
inc
or
xor
jae
mov
xorl
sub
adc
pop
jecxz
jmp
adc
loope
ja
sbb
sarl
dec
inc
sbb
nop
arpl
arpl
sub
les
mov
fildl
jbe
mov
adc
insb
adc
divl
dec
cmpsl
imul
enter
rcll
and
inc
adc
test
inc
mov
dec
add
imul
dec
adc
mov
mov
pop
dec
add
decb
cmpl
mov
ret
mov
mov
and
adc
shll
mov
popl
sar
and
add
decl
sbb
sbb
push
loop
movsl
pop
mov
fldl
outsb
xor
adc
or
imul
rcrl
sub
jmp
popa
or
cmc
jmp
out
and
jno
dec
lahf
ss
adc
mull
mov
movsb
jecxz
xor
or
or
jp
ror
add
jp
or
out
push
sub
inc
cmpsb
mov
jecxz
pop
popf
frstor
sub
pop
shlb
jne
inc
cmp
cmp
mov
hlt
push
xchg
lcall
xor
and
mov
or
and
inc
ljmp
jne
add
or
addl
push
popa
cs
push
imul
push
mov
dec
dec
push
ret
and
divl
add
push
jmp
ret
xlat
sub
inc
or
ds
cli
push
incl
pop
inc
dec
loopne
std
test
xlat
mov
inc
jb
dec
mov
lods
adc
cli
pop
adc
bts
imul
mov
mov
test
push
bound
cltd
or
inc
push
std
repz
push
fcoms
jb
insl
sbb
dec
inc
aad
aas
cmp
ja
sti
add
inc
lcall
inc
ljmp
cld
jbe
xor
lahf
sub
cmp
and
or
add
add
push
dec
push
and
push
mov
pushf
pusha
test
leave
dec
lret
dec
jne
push
int
push
add
or
outsb
mov
push
add
clc
jno
sahf
inc
pop
or
mov
pop
popa
sub
adc
cltd
push
les
mov
mov
add
mov
pop
mov
cmovl
jmp
or
pop
cmp
xchg
lcall
and
sahf
cld
xor
sub
and
addr16
pop
push
xchg
mov
and
push
lahf
push
rclb
addb
stos
mov
mov
mov
out
ret
jp
inc
rorb
jb
roll
adc
mov
and
mov
cmp
loope
insl
les
or
pop
in
in
push
and
hlt
mov
cmp
cmp
and
aad
jmp
test
pusha
leave
jae
cld
insb
jno
xor
or
jge
negl
outsl
loopne
fwait
daa
and
sbb
idiv
movd
mov
dec
rcrb
fnstsw
jp
add
add
sub
push
mov
inc
mov
cwtl
inc
xor
popa
push
and
jne
cld
orb
or
xchg
pop
mov
dec
add
or
shl
mov
jb
pop
pusha
xrelease
loopne
jo
shll
or
nop
sahf
lcall
cltd
sub
rol
hlt
add
cs
push
lahf
out
pushf
mov
repz
iret
lock
add
dec
mov
test
or
inc
xchg
inc
in
or
or
sub
add
incl
mov
jnp
dec
out
loop
cli
or
mov
into
add
or
inc
adc
dec
adc
jbe
loop
cmp
sub
addb
int
add
sub
push
adc
or
push
push
outsb
rclb
test
push
inc
repz
jb
or
add
or
sbb
xlat
cmp
bound
or
pop
inc
mov
mov
xchg
sbb
add
sbb
sahf
and
add
or
dec
add
add
inc
or
mov
fsincos
adc
lods
jae
daa
inc
sbb
jns
sub
in
or
leave
or
test
inc
dec
jmp
dec
scas
sbb
shlb
cmp
or
addl
jne
xchg
mov
out
loop
add
inc
add
scas
mov
roll
push
insb
das
int3
and
xor
xor
out
or
or
or
push
lods
sub
dec
pop
leave
stos
fmull
je
dec
sbbb
or
or
lea
adc
add
and
pop
jno
inc
adc
or
adc
push
les
loopne
dec
loopne
fwait
sbb
sbb
cmp
push
cmp
shl
cmp
or
or
sbb
xor
sub
fldt
movsl
cwtl
int
xor
loope
imul
insl
sahf
je
adcb
xchg
push
lahf
or
jno
or
push
inc
lods
adc
dec
test
jb
or
push
inc
adc
inc
clc
push
aaa
insl
cmp
test
inc
inc
or
daa
and
cmpb
loop
pusha
inc
je
or
sbb
xor
aad
lea
mov
lds
flds
loopne,pn
cmpsb
rcrb
add
jno
or
int
lret
loope
mov
mov
mov
adc
fists
lods
sbb
faddl
pop
out
lea
cmp
shrb
enter
adcl
push
inc
add
rorb
movsb
movsb
arpl
sbb
cmp
inc
add
fwait
sub
jne
mov
pop
enter
insb
mov
adc
ficoms
mov
aam
rorl
add
pop
js
jmp
or
jge
pcmpeqd
mov
aam
sub
ljmp
lods
andnps
mov
imul
sbb
aaa
imul
loopne
jbe
dec
loopne
pop
sbb
mov
jb
and
cmp
fisubl
adc
test
fwait
cltd
or
push
jae
adc
sub
roll
movsb
or
jae
flds
fcmovnb
test
cmp
gs
push
inc
jnp
test
faddl
imul
shl
test
outsb
jo
add
lea
pop
push
insb
ror
dec
ret
fucomi
adc
mov
mov
mov
jecxz
pop
mov
dec
mov
icebp
jmp
sbb
push
mov
outsb
push
or
adc
pop
add
adc
jp
and
orb
or
bound
neg
sbb
and
icebp
adcl
shll
cwtl
test
call
testb
lock
rcrb
leave
jnp
in
cmpsl
mov
sbbl
cmp
pop
inc
xorl
cmpsl
mov
aam
inc
shlb
dec
sbb
aam
add
push
xchg
clc
mov
fmuls
mov
mov
jbe
rolb
dec
in
sub
unpckhps
lea
sub
jae
jmp
xor
in
in
lock
imul
jbe
xchg
add
inc
icebp
mov
jb
std
stos
push
addl
add
inc
pop
hlt
and
mov
push
movsl
sbb
paddusb
stos
fwait
mov
mov
int3
add
adc
add
xor
addr16
or
jl
ds
mov
loopne
int3
mov
mov
push
les
mov
enter
pop
shr
mov
push
shlb
call
mov
lret
dec
scas
ficoml
or
fcoms
push
sub
pushf
mov
cmp
ja
movb
jmp
scas
push
hlt
jae
addr16
push
cmpl
push
loopne
cli
les
int3
mov
pusha
sub
push
sub
adc
adc
adc
lcall
xor
andl
dec
or
push
pop
xor
push
insl
in
jo
mov
loopne
sbb
xor
add
xchg
sub
xor
shrl
dec
inc
icebp
data16
mov
xor
andl
repz
jb
in
mov
inc
mov
mov
push
lret
cmp
and
mov
jo
mov
push
dec
pop
mov
xchg
dec
nop
sub
daa
gs
sahf
inc
sub
dec
loop
lock
clc
push
mov
ret
ds
mov
js
jp
sub
sbb
repnz
push
ljmp
loope
in
pop
fwait
scas
or
push
jo
jo
lock
mov
out
ret
test
fmuls
repnz
push
imul
out
hlt
aaa
mov
add
inc
sbb
out
add
push
rcrb
enter
push
xchg
ds
or
or
push
in
add
xchg
movsl
cwtl
add
inc
clc
aad
leave
adc
dec
or
loopne
movups
out
push
add
cmp
sbb
add
or
enter
push
sbb
and
add
inc
outsb
or
jae
mov
add
loopne
lea
paddusw
adc
test
sub
xor
imul
xchg
dec
or
pop
sbb
jmp
orb
xchg
pusha
pop
jl
call
push
or
jl
mov
push
cmpsb
in
je
sub
sbb
mov
nop
or
add
pop
loopne
and
leave
sbb
pop
loopne
in
xchg
sbb
and
or
scas
sbb
pop
and
add
addr16
xchg
aas
or
popl
mov
jge,pn
xchg
int
jnp
test
rcr
add
dec
mov
test
sub
mov
test
and
js
mov
enter
add
add
ja
push
mov
imul
or
rol
sarb
mov
out
and
mov
pop
push
sbb
sub
test
enter
js
mov
pop
jne
mov
xor
sbb
mov
faddl
xchg
popa
jne
mov
adc
mov
sbb
jbe
pusha
push
aad
or
sub
addl
into
push
adc
test
aaa
add
fisttps
and
mov
dec
mov
sbb
add
inc
iret
adc
cmp
into
adc
add
pushf
loop
jnp
fnstenv
movb
dec
lret
sbb
fwait
mov
leave
mov
mov
dec
sbb
loope
mov
xchg
mov
or
adc
fs
iret
ret
xor
das
clc
xchg
out
sub
adc
sub
mov
test
adc
xor
inc
inc
jae
rcr
jns
fstpt
lea
add
pop
hlt
xor
push
jge
adc
stc
mov
mov
and
in
fisubrl
cmp
jb
cmp
jb
mov
or
cmp
pop
add
inc
dec
in
sub
push
fiaddl
or
and
nop
inc
cmp
jp
xor
mov
fimull
jle
dec
js
mov
in
mov
dec
icebp
add
dec
add
push
in
jb
loope
ret
mov
pop
pop
push
cs
iret
dec
or
cmp
lahf
sub
add
cmp
mov
imul
in
push
inc
push
push
flds
out
pop
imul
mov
ret
cmpsl
sbb
push
ss
add
sub
out
leave
pusha
test
push
mov
push
aam
pusha
push
js
add
mov
and
mov
mov
xchg
sti
pop
pop
and
adc
and
sub
push
aaa
addr16
lret
or
sub
or
push
subl
sub
cmpsl
or
lahf
push
pop
mov
add
movsb
sub
or
cmp
add
push
outsb
in
sub
jae,pt
dec
lea
pop
pop
add
add
pop
call
jle
sub
push
add
fistpl
addb
das
mov
inc
rclb
adc
adc
lods
and
stc
pop
jns
and
mov
add
pop
outsl
mov
dec
ja
adc
jns
cwtl
jmp
mov
in
les
mov
inc
dec
daa
insb
outsl
loope
lea
test
sbb
xchg
xchg
push
adc
test
cmp
jb
in
out
cmp
mov
mov
pop
mov
pop
xor
lods
testl
mov
ja
pushl
adc
fcmovnb
or
rorl
pop
xchg
stos
adc
popa
pop
andb
dec
adc
popf
hlt
xchg
jno
cmpsl
adc
insb
mov
or
mov
inc
mov
adcl
adcl
push
mov
sbb
mov
andb
insb
and
popa
pop
ret
mov
pop
fimuls
aaa
xchg
imul
es
mov
sbb
sbb
add
mov
inc
inc
or
cmp
xchg
paddq
or
dec
in
subl
sub
js
or
jne
and
addb
cmpl
insl
pop
mov
pusha
mov
inc
mov
and
mov
add
xchg
push
xchg
dec
nop
add
imul
sub
int
pusha
mov
jle
pop
sbb
cmp
inc
and
std
sub
cmpsb
jg
pop
pop
xor
cs
adc
enter
sub
add
lret
xor
or
add
xor
outsb
jp
xorb
ljmp
inc
out
push
cmp
sbbb
push
mov
std
loop
sub
or
mov
aas
loopne
ret
push
inc
sbb
not
lea
push
sub
and
push
fdiv
inc
xchg
sub
mov
imul
lock
test
sbb
jmp
lock
or
cmp
fstpt
repnz
xchg
sub
or
pusha
scas
popa
ja
pop
sbb
dec
and
dec
dec
loop
mov
mov
ljmp
call
in
dec
sub
push
jg
enter
sub
mov
and
je
outsl
nop
xor
pop
pop
ret
mov
into
mov
xchg
nop
mov
cmpsl
loopne
mov
jne
sbb
add
pop
test
push
ret
jl
mov
sub
xchg
cmp
lcall
aas
jp
int3
and
mov
mov
jp
rcll
adc
adc
ficompl
mov
push
adc
or
add
xor
mov
jg
movl
and
mov
decb
inc
cmp
or
rorb
push
sbb
lock
mov
aam
imul
dec
pop
jmp
clc
add
add
jns
xchg
repz
push
push
rcrl
adc
pop
in
ret
mov
lret
add
adc
xchg
sub
loope
mov
pop
popf
add
enter
mov
addl
movl
or
stos
jmp
and
xor
cmpb
mov
jno
fs
cmp
and
lods
push
test
and
jl
xchg
call
push
mov
repnz
sub
outsb
mov
mov
add
inc
or
push
insl
dec
mov
ret
push
or
xchg
adc
pop
dec
xor
jnp
sbb
cmp
cmpl
or
mov
lret
mov
sbbb
sbb
mov
mov
adc
call
js
add
into
jno
mov
add
or
jl
pop
cld
test
xchg
inc
mov
adc
mov
add
push
aaa
pop
adc
and
push
inc
in
adc
fdivl
test
and
sbb
in
sbb
or
push
mov
xor
or
imul
repz
in
push
sub
aam
xchg
cmpsl
dec
leave
adc
out
pop
mov
rorl
sbb
inc
push
xor
je
dec
xor
mov
insb
nop
push
xchg
push
xor
push
je
outsl
loop
sub
pushf
and
movsl
rorb
stc
dec
fistpll
movl
mov
lock
movsb
sub
add
ss
xor
in
mov
xlat
mov
push
or
push
mov
cmp
mov
cmp
or
xorl
aad
jmp
sbb
aaa
push
adc
iret
push
push
pop
pop
jecxz
add
or
xchg
divb
dec
push
outsb
push
cmp
sub
cltd
loope
push
mov
jmp
in
dec
dec
cmp
sub
mov
sarl
inc
adcl
or
mov
xchg
test
sbb
push
mov
lods
jo
aaa
mov
loop
or
rorb
je
loopne
mov
not
add
cmp
cmp
iret
les
or
pop
sub
mov
cltd
sub
mov
clc
mov
mov
jle
pop
das
sub
jmp
dec
ret
and
repz
sti
adc
sbb
clc
push
data16
jae
push
jne
jnp
xor
jmp
adc
lret
out
xchg
mov
mov
xor
push
movsl
add
outsb
xor
xor
inc
sub
movsl
mov
sbb
incl
push
adc
cmp
movsb
shl
inc
xor
cs
scas
xor
jnp
lds
fimull
add
cmp
andb
subl
cmp
xor
nop
inc
out
mov
scas
mov
scas
add
or
rcll
xchg
filds
lahf
push
jns
add
inc
inc
pop
adc
roll
xchg
fstpt
std
inc
test
cs
mov
mov
add
mov
dec
dec
fwait
jmp
nop
mov
dec
shrb
dec
xlat
sbb
fimull
inc
xchg
neg
dec
adc
test
dec
in
add
mov
push
add
inc
es
push
push
jb
pop
adc
pop
xor
lds
pop
pop
mov
test
pop
pop
jb
pop
and
or
inc
pop
pusha
pop
in
fs
pusha
pushf
cmc
fs
jo
dec
fs
adc
mov
adc
ss
rclb
inc
inc
push
push
inc
mov
and
in
mov
stc
sarb
into
insb
hlt
dec
imul
lods
fadds
mov
int3
pop
xor
dec
mov
cmp
pop
xor
and
or
mov
decl
mov
rolb
add
aas
inc
lahf
or
shlb
pushf
xchg
pop
mov
and
imul
push
pop
mov
std
sub
stc
mov
insl
call
faddl
std
inc
pop
jns
xchg
cld
push
cld
inc
cld
inc
cld
add
sub
cmp
cwtl
cld
sti
push
cld
test
stc
add
mov
sub
dec
dec
add
loop
mull
add
popa
dec
rol
xchg
inc
dec
in
xchg
popf
dec
aad
push
or
pushf
loopne
and
scas
mov
dec
cld
or
subl
dec
adc
in
adc
jb
jmp
addr16
add
faddl
cwtl
push
lock
popa
mov
enter
cs
enter
push
jno
lock
lea
neg
int3
lea
rcrb
push
aam
mov
add
cmp
jo
xchg
adc
repnz
shlb
cld
jb
ds
push
cld
push
cld
inc
cld
adc
inc
roll
pop
leave
aam
inc
outsb
adc
nop
jo
xor
xchg
inc
sbb
xchg
aam
or
ss
dec
mov
popf
sub
dec
cmp
mov
mov
push
sub
jp
push
push
and
popa
nop
add
add
xchg
inc
sahf
stos
das
imul
xchg
in
outsl
lock
and
lea
or
flds
add
cmp
cmpsb
fsubrl
lret
and
daa
rclb
daa
lret
fadd
les
add
jecxz
imul
test
jns
xor
test
or
add
mov
xchg
add
xor
or
leave
leave
addl
mov
push
adc
lret
or
loopne
dec
sub
in
or
lret
aaa
lock
mov
das
pop
jg
cmp
sub
ficoml
mov
cmp
mov
icebp
sbb
iret
pop
xchg
aas
jge
push
and
and
out
dec
push
dec
scas
adc
in
sbb
and
and
add
sbb
sbb
sbb
fdivr
call
jne
add
xchg
cmpb
fisttpll
sub
adc
ret
enter
and
push
inc
das
sbb
les
add
stos
dec
repz
and
or
shr
push
les
rclb
nop
shrb
ja
lock
ljmp
push
pop
adc
sub
sbb
out
movsb
and
call
jbe
decl
pushf
roll
imul
or
xchg
nop
jle
loopne
inc
movsb
or
ret
or
mov
pop
pop
mov
pushf
push
mov
dec
lahf
es
inc
cmp
add
stc
mov
rolb
inc
push
xchg
mov
or
xchg
nop
sbb
stos
push
dec
imul
cmp
sahf
mov
cltd
lock
idivl
call
sbb
xchg
loopne
add
mov
jne
xchg
add
adc
jmp
mov
adc
mov
js
adc
cmp
push
pop
mov
int3
mov
ficoms
mov
ja
ret
add
cmp
jmp
arpl
pop
mov
inc
push
shll
sbb
clc
loopne
jle
add
mov
movd
sub
cmp
push
int3
mov
inc
movsl
sbb
js
je
pushf
xor
push
scas
test
dec
pop
sbb
mov
add
xor
sbb
or
iret
sbb
jl
pushf
or
or
aad
fcmovnbe
ljmp
in
shr
pop
jbe
cs
sbb
dec
mov
add
xchg
pop
and
imul
cwtl
mov
into
mov
xchg
jmp
pusha
shl
jmp
or
or
sbb
or
pop
mov
xchg
add
inc
dec
lcall
lea
nop
cmp
and
sbb
cmpsb
and
insl
aas
lret
sub
pop
fisubrl
jge
add
xorl
popa
mov
or
push
xor
cmpsl
nop
or
add
sub
rorb
roll
lock
xchg
cld
addr16
add
pop
xchg
fcoms
je
mov
sbb
ret
cmp
sarl
inc
xor
pop
xor
mov
ds
xor
add
add
sub
pop
mov
mov
aad
cmp
or
orl
push
je
orb
xlat
rolb
jp
orl
cmp
and
dec
lods
or
add
xchg
cmp
cmp
cmp
or
xchg
or
inc
inc
or
dec
add
subl
cmp
pusha
or
out
dec
mov
lahf
dec
cmc
into
pop
mov
addl
es
dec
mov
cs
ss
testb
add
insl
mov
xchg
sub
push
mov
dec
insl
xchg
ja
xchg
and
pusha
ret
leave
add
sub
das
mov
int3
add
movsb
push
insl
cmc
adc
add
xchg
in
adc
cmp
mov
stos
lods
mov
add
jb
push
rclb
adc
inc
ficoms
jb
or
call
adc
push
mov
pop
dec
xchg
cmp
hlt
sub
sub
shll
rcll
jne
jecxz
shr
outsb
popa
shl
daa
cmpl
sbb
pop
sub
adc
dec
imul
vphaddbw
shlb
pop
inc
or
inc
and
xchg
sbb
dec
or
leave
jle
cwtl
sbbb
cmpsb
shrb
movsl
fwait
add
rorb
mov
xor
adc
fildll
lea
pushf
hlt
inc
sub
jbe
rorl
pop
xchg
mov
cs
lret
xor
fimuls
negb
loopne
mov
pop
push
pop
push
out
mov
lods
dec
dec
pop
xor
mov
xor
sbb
mov
or
rolb
lcall
push
push
cmp
adc
mov
add
sarl
dec
or
jb
outsb
daa
inc
sub
or
add
add
push
pop
orb
or
add
add
or
or
orb
push
pushw
enter
inc
or
mov
pop
sbb
fwait
push
aad
and
mov
loop
icebp
adc
xor
jno
insb
mov
inc
add
dec
ret
xchg
mov
out
dec
pop
pop
push
leave
push
movsb
inc
dec
int3
xor
mov
daa
pop
pop
fwait
cmp
jg
add
mov
add
pop
mov
jle
adc
add
and
jmp
stc
add
popa
sub
ds
sbb
cli
scas
or
cltd
xchg
and
and
and
sbb
loopne
cmp
in
cmp
pop
cli
or
and
mov
lock
mov
test
out
mov
jbe
jmp
cmp
sub
push
inc
mov
mov
clc
jmp
sbb
and
fisttpl
sbb
or
sbb
push
cmp
cli
mov
iret
dec
add
pusha
add
fistps
in
movsb
add
xorl
dec
or
cmpsl
fisubl
mov
aas
sub
mov
icebp
dec
xchg
push
sub
pop
rolb
adc
out
pop
es
ret
add
push
push
loop
jecxz
fldcw
out
call
push
lock
add
cmpsl
fnstcw
icebp
imul
test
in
push
jmp
pop
add
add
and
mov
xchg
in
xchg
fsubrl
adc
fsubl
mov
push
add
pop
lahf
push
icebp
add
in
in
loope
jle
inc
iret
xchg
sbb
loopne
lret
sbb
or
subb
sarl
mov
pop
out
jge
sub
xchg
ret
cmp
je
dec
es
sbb
iret
test
rcll
add
add
data16
pop
pop
shll
inc
sub
lods
inc
lea
cmp
data16
adc
loopne
sub
cltd
pop
xorb
lea
out
jp
sub
popa
lock
gs
bnd
fwait
mov
adcb
add
dec
dec
jp
inc
pop
sub
push
pop
dec
out
and
ljmp
sbb
xchg
push
and
or
add
jb
jae
add
nop
push
data16
std
add
sbb
out
adc
rol
or
xchg
and
jne
xor
nop
or
int3
add
in
int
xchg
or
scas
cmpsl
lret
and
adc
push
fnsave
jge
sbb
movhps
pop
adc
pop
pop
dec
and
inc
push
idivl
push
add
push
mov
mov
pop
shrl
sub
aam
add
jne
movsl
cmp
shrb
je
test
cmpsb
test
dec
adc
in
jno
dec
dec
cli
sub
leave
fwait
mov
add
push
add
ret
sbb
xor
adc
lcall
inc
and
out
dec
test
cltd
loop
push
std
push
and
sbb
bound
push
push
mov
addb
jmp
jne
bound
sub
iret
and
pop
mov
sub
rolb
scas
stc
push
imul
jns
adc
imul
stos
test
mov
xchg
pop
push
addb
cmpsl
adc
jnp
pop
imul
stc
sbb
dec
xor
clc
sbb
push
scas
adc
dec
inc
sbb
test
xor
lock
push
jmp
roll
and
sbb
jae
movsb
adcl
insb
push
inc
push
rcll
or
rcrb
push
push
decl
or
mov
lock
inc
lods
lea
lock
adc
inc
loope
imul
shrl
add
stos
sub
cld
and
adc
pop
dec
sbb
push
jl
adc
nop
lock
cltd
adc
xor
adc
pop
inc
and
in
ret
mov
dec
push
lahf
ja
or
loop
pop
scas
or
xchg
adc
pop
sti
or
xlat
fdivr
incl
movsb
push
leave
or
xchg
add
sbb
in
ds
sub
push
push
fildl
add
dec
xchg
xchg
mov
js
cmp
cmp
xchg
inc
adc
jo
adc
sub
mov
sub
jnp
sub
insb
xchg
pop
pusha
call
shl
cmp
pusha
lods
or
mov
mov
pop
jnp
push
pushf
cli
lcall
pop
mov
bound
push
push
gs
andl
xchg
ljmp
cmp
sub
xor
pop
adc
or
outsl
cld
lahf
add
jbe
jl
cmp
jb
rolb
jl
cmp
jae
dec
nop
sub
add
add
push
cmpsl
push
orl
fldt
jp
in
test
lods
cmp
fimuls
or
in
fldenv
cmp
ret
and
sar
xchg
outsb
shlb
adc
dec
lea
or
dec
add
inc
loope
pop
scas
mov
jl
aam
push
sub
ret
fistps
add
call
cmp
out
jge
sub
bound
inc
lock
mov
shlb
aaa
dec
push
pop
sbb
push
sbb
jnp
ret
push
dec
adc
push
xor
push
sub
sub
and
cmc
push
icebp
cmc
ret
lea
and
push
cmp
sbb
movsb
push
loop
push
jp
and
je
push
movsl
push
mov
or
js
in
int3
add
inc
and
inc
sbb
popa
sti
into
or
pop
cmp
mov
xor
lock
pop
adc
jg
loope
pop
adc
arpl
adc
or
sub
add
int
icebp
adcb
cmp
or
les
lods
and
and
insb
and
xor
add
das
xchg
popa
pusha
repnz
and
cmp
daa
shrb
add
push
jns
mov
fcoms
cltd
test
jnp
js
mov
inc
adc
add
flds
rclb
xchg
or
add
xlat
mov
test
enter
loopne
pop
stos
add
sahf
xchg
cmp
int
inc
adc
sub
rol
lret
mov
js
insb
ss
push
dec
push
shl
int
lret
test
stc
imul
cld
jmp
cmpsl
add
insb
and
lret
sub
stos
std
sbb
mov
repnz
ret
scas
mov
mull
shll
xor
mov
and
xchg
clc
xor
je
push
xchg
mov
fldl
mov
adc
xor
mov
xor
adc
and
add
and
and
inc
sub
cwtl
and
test
sub
ljmp
push
jecxz
pop
sbb
mov
add
mov
movsl
sbb
fisubs
inc
icebp
or
pop
or
bound
xor
and
xor
and
and
sub
dec
lcall
and
shrb
movsl
sbb
sbb
icebp
jno
sbb
xchg
push
or
adc
and
push
push
loopne
add
sbb
sub
push
dec
out
test
add
stc
loopne
cmp
add
mov
testb
fcmovne
mov
add
inc
arpl
bswap
add
push
lahf
and
rorl
add
pop
lds
out
les
inc
sbb
mov
stc
sbb
inc
push
mov
adc
adc
repnz
lds
add
adc
in
push
add
inc
pop
jecxz
mov
cmp
mov
data16
ret
adc
testl
insb
adc
fwait
or
sti
mov
push
imul
sti
mov
adc
push
shlb
cmp
or
dec
loope
xor
push
push
pop
inc
add
sub
or
ret
or
jbe
cmpsb
loopne
and
aas
mov
pop
mov
ja
pop
pop
and
inc
add
jnp
scas
nop
sbb
or
mov
xor
sub
inc
or
lock
sbb
push
cmpsb
push
jbe
add
bswap
add
jo
xor
addb
in
dec
sbb
and
sub
sub
sub
add
inc
or
sub
dec
sbb
in
inc
push
sbb
and
sub
mov
inc
js
adc
enter
mov
cmpl
pop
xchg
inc
jb
cmpsb
divb
xor
adc
popa
mov
cmp
xchg
push
inc
mov
sbb
lds
xchg
stos
in
pop
inc
mov
push
jecxz
movsb
decl
add
or
mull
loop
mov
outsl
xchg
pop
das
imul
xchg
sti
movsl
mov
sbb
cwtl
test
mov
and
divl
fwait
and
orb
push
test
xbegin
inc
ja
jno,pn
test
repz
adc
ja
mov
dec
popa
jmp
fists
inc
testb
insl
dec
adc
jae
xchg
popl
mov
or
inc
mov
test
sub
frstor
pop
xchg
adc
and
mov
inc
cmp
popa
push
and
sub
mov
rcrl
xchg
jb
push
popf
scas
repz
push
lds
xlat
andb
sbb
adc
sbb
xchg
out
dec
sub
aas
sub
or
imul
adc
in
sub
icebp
mov
inc
sbb
add
adc
lods
sub
popf
movsl
xchg
jle
push
add
xor
push
sbb
in
xor
notl
push
push
fdivs
cmp
ds
push
mov
test
mov
xor
and
and
pop
nop
ficoml
fistl
sbb
jb
pusha
mov
push
rolb
and
inc
lock
sbb
push
cmp
or
adc
cli
mov
inc
fsubs
rolb
dec
lock
xor
jle
sbb
fldt
mov
dec
pop
push
negb
inc
adc
sbb
and
clc
add
add
dec
mov
or
enter
out
sub
in
bound
nop
in
xor
int3
adc
add
adc
push
popf
jae
roll
jo
test
in
jb
fadds
jb
pop
les
sub
push
or
fsubrs
test
jb
mov
adc
enter
fiaddl
mov
push
sbb
push
enter
lea
les
shl
fimuls
bound
js
pusha
jbe
fists
jle
mov
or
jecxz
in
jne
push
and
popa
cld
jo
cmp
or
daa
fsub
rclb
daa
adc
out
loope
imul
add
pop
repz
add
dec
rclb
enter
add
in
cmp
outsb
sahf
adc
dec
sbb
clc
cltd
rcll
push
add
dec
subb
add
mov
aas
in
mov
and
inc
push
and
adc
inc
inc
or
and
movsl
mov
je
jae
adc
or
mov
jge
es
sub
jb
push
or
cmpl
cmp
lret
xorb
or
nop
inc
mov
test
cmpsl
xchg
or
movsl
mov
inc
adc
mov
cmp
sub
mov
fs
push
clc
mov
xchg
test
push
add
add
inc
fimull
inc
call
pop
mov
sub
popf
mov
js
dec
loope
mov
mov
mov
sbb
sarb
or
sti
pop
sti
call
loopne
or
jbe
sbb
add
and
test
lds
mov
ss
or
pop
dec
and
in
push
adc
dec
in
xor
and
cmp
xlat
mov
fnstenv
fs
add
mov
or
fldt
imul
mov
xor
ret
popa
push
and
mov
sbb
sysexit
adc
enter
dec
shll
sets
add
cwtl
xchg
scas
sbb
or
dec
push
jnp
test
call
lahf
cmp
mov
xor
inc
clc
insl
inc
inc
pop
das
add
mov
dec
sbb
xor
jle
xor
xor
adc
xor
xchg
mov
pusha
or
adc
dec
xor
mov
xor
cwtl
fwait
adc
sub
push
or
insb
cmp
and
xor
test
insl
fnstenv
or
push
popa
jp
xchg
imul
mov
nop
lds
nop
popl
xor
inc
stos
add
adc
xor
or
xchg
les
mov
and
ss
dec
inc
call
addl
fdivl
gs
out
xchg
bound
dec
lods
loopne
in
sbb
pushf
add
rol
or
jno
test
add
mov
xor
mov
hlt
xor
mov
push
push
push
inc
jmp
outsb
testl
add
inc
bound
loop
outsb
sub
out
int
mov
mov
sti
adc
cmp
ja
mul
test
inc
dec
pop
cmp
addr16
mov
xchg
lea
pop
in
or
push
xor
adc
shl
lods
cltd
jge
adcb
mov
pop
pop
and
fistps
add
dec
push
imul
jle
jp
fs
jbe
in
dec
outsb
add
and
mov
sub
cmp
ret
pop
mov
pushf
add
sub
push
add
add
or
push
out
lcall
jb
add
pop
imul
mov
xchg
add
outsl
data16
aad
ret
cmpsl
push
fwait
add
cmpsl
pop
sti
xchg
lahf
add
add
gs
aaa
jb
adc
mov
push
sbb
or
int3
enter
inc
leave
pop
mov
inc
mov
hlt
add
xlat
pop
sub
push
cmpb
xor
inc
mov
inc
lock
sbb
or
sbb
in
cmp
jbe
jmp
jo
inc
loopne
xor
sbb
shlb
dec
mov
sti
incb
push
inc
fisubl
aaa
gs
pop
scas
push
fcoms
test
lahf
push
mov
aas
sub
loopne
rorl
jbe
mov
jnp
loope
adc
mov
push
jecxz
nop
cltd
push
setne
or
xchg
je
cmc
xchg
data16
mov
dec
pop
mov
pushf
push
mov
add
adc
popa
mov
push
sub
dec
sbbb
xchg
cmp
sbb
cmpsb
cmp
movsl
jo
pop
add
fucomp
jno
cmp
cmp
inc
xchg
and
addr16
pop
or
inc
and
inc
sbb
int
cmp
dec
dec
add
add
add
fnstcw
dec
adc
push
inc
call
pop
jmp
loope
sbb
insb
adc
jle
ja
mov
sub
lock
push
pop
cwtl
inc
sub
add
mov
decl
icebp
mov
push
jmp
push
or
dec
les
ret
push
sbb
mov
je
push
fisttpll
or
cmp
or
sahf
add
mov
fwait
pop
repnz
mov
aad
jno
scas
dec
outsl
icebp
cld
imul
bound
jb
push
dec
rcl
and
or
es
and
cld
dec
jb
rclb
xchg
mov
fwait
mov
and
lods
sbb
xchg
and
sbb
sub
pop
js
les
sub
test
adc
xor
push
dec
lds
sbb
cmp
pop
push
add
mov
imul
adc
xor
xchg
push
add
data16
test
push
jle
cld
leave
or
pop
jb
pop
std
and
push
push
ror
sub
jnp
push
outsb
or
clc
lea
inc
shll
out
sub
cwtl
cmp
cmp
dec
inc
or
cmp
call
mov
in
adc
std
int3
inc
repnz
sar
test
jge
xchg
sub
push
xor
pop
cmovnp
inc
lock
insb
or
or
push
dec
sub
sar
sub
add
sub
jne
xor
jno
cli
inc
imul
push
dec
xchg
push
push
or
fisttps
add
data16
add
mov
sbb
lods
inc
sub
movsb
xor
test
movsb
add
xchg
push
push
movsb
mov
add
dec
gs
mov
push
movsb
add
gs
sub
cwtl
mov
xchg
pop
xchg
shlb
xchg
nop
or
les
push
enter
and
mov
xor
cmp
sbb
call
sti
loope
and
cmpl
ret
and
pop
clc
mov
push
sbb
cwtl
gs
or
arpl
fwait
adc
pop
lods
outsb
adc
test
mov
pusha
cmpsl
pusha
jns
faddl
in
cwtl
test
je
fisubrl
and
je
sbb
js
subb
adc
push
dec
shlb
leave
lods
in
adc
xor
sub
and
and
jnp
orl
adc
jnp
and
pop
lahf
pop
inc
test
aaa
inc
sbb
adc
xor
jo
push
jo
cmp
lret
mov
add
gs
cs
lock
insb
cmpsb
sbb
adcl
inc
sbb
jecxz
mov
bound
xor
xor
mov
iret
mov
xchg
lcall
jns
outsl
outsl
imul
push
mov
pop
ds
je
sub
daa
aaa
cmc
pop
inc
jp
inc
mov
mov
in
int3
test
pop
cs
rcl
fcoms
stos
sbb
fdivr
aaa
xorb
js
mov
rcrb
pusha
push
xor
jbe
out
sbb
sbbl
jl
fstp
sbb
aam
sub
or
and
mov
cmp
in
enter
pop
inc
int3
das
rorb
fisttpl
bound
cmpl
jno
les
sar
sub
dec
les
mov
mov
xor
and
push
cmp
sbb
test
dec
push
cmp
imul
adc
inc
je
push
xorb
pop
sub
jae
popf
push
or
and
outsl
jb
je
mov
jnp
sbb
sbb
pop
cs
xchg
dec
jno
mov
bound
in
pop
dec
pop
add
mov
add
je
adc
xchg
ja
orb
bound
out
jecxz
jmp
and
popf
dec
mov
and
or
adc
xor
outsl
je
adc
imul
xor
adc
fs
std
xchg
sbb
sub
pop
ljmp
jbe
mov
out
dec
mov
and
xchg
push
es
xor
and
xor
mov
leave
rorb
jmp
dec
add
fstpt
testl
into
mov
inc
jnp
scas
or
mov
ret
test
clc
push
insl
pop
xor
stc
jno
inc
imul
inc
sbb
cmp
xchg
fucomi
sbb
cld
xor
and
adc
adc
andl
out
sbb
in
lea
push
lcall
push
push
cmp
lock
imul
loop
movl
add
das
push
xor
mov
jmp
fs
outsb
sub
jbe
ss
fisubrl
cmp
xchg
stos
push
enter
orl
mov
std
or
mov
fidivrs
pop
dec
jns
cmpsl
mov
push
cmp
outsl
je
iret
es
loop
dec
out
and
lods
lods
mov
xor
rorl
sub
popa
mov
je
clc
mov
push
in
xchg
js
pop
cwtl
add
test
xchg
es
jl
jg
add
add
sub
movsb
pop
test
cmp
adc
pop
mov
popf
pop
push
mov
test
push
mov
negb
adc
ret
or
jne
imul
fsubl
jns
or
jae
enter
adc
in
js
add
mov
sbbl
sbb
ljmp
ret
cld
shr
mov
mov
mov
sbb
xor
addl
and
bound
mov
andl
lea
lahf
adc
jge
sub
cltd
lret
rorb
out
push
loop
mov
lock
jmp
inc
hlt
jne
sub
adcb
push
jge
mov
sbb
inc
push
and
jl
and
mov
sbb
notl
mov
sub
xchg
sub
sbb
test
xor
sbb
filds
mov
int
movsb
je
movsb
sub
push
cwtl
pop
push
test
adc
add
pop
mov
test
mov
and
lods
faddl
inc
icebp
pop
daa
cs
popf
dec
or
adc
push
enter
rcrb
mov
sbb
sub
negl
and
frstor
call
roll
aas
pavgb
mov
or
imul
push
push
test
xor
lock
subl
or
xchg
pop
xchg
inc
add
xor
fs
int3
xlat
sbb
jne
ds
xor
hlt
enter
imul
mov
xchg
sbb
push
sbb
sbb
fmuls
mov
xchg
mov
mov
or
pop
and
add
jo
je
fisubrs
fbstp
push
or
mov
jmp
xchg
push
push
enter
sbb
push
fs
add
jle
and
cmpb
pushf
out
shrb
dec
adc
inc
adc
pop
test
cmp
pop
add
xlat
or
mov
int3
push
push
fwait
pushf
or
test
mov
pop
push
shrb
pop
adc
es
pop
xor
add
add
xor
jle
leave
cltd
in
mov
inc
xchg
sbb
rorb
inc
out
mov
test
negl
call
popa
push
inc
lock
test
push
adc
mov
in
xchg
test
mov
fisttps
inc
scas
mov
and
mov
inc
mov
mov
outsl
in
and
jo
push
sub
je
and
cmpsb
sbb
je
popa
jne
or
push
subl
mov
addr16
jmp
sub
push
inc
push
push
das
push
arpl
jo
dec
push
rolb
aaa
loop
push
pop
sbb
gs
mov
out
xchg
sbb
jae
jne
enter
adcl
xor
sbb
pop
or
mov
js
outsl
jb
xchg
cmpsl
ficoml
js
gs
addr16
pop
dec
insl
jo
xor
insb
sbb
inc
adc
push
push
or
pusha
popa
or
xchg
cmp
sub
imul
xorl
inc
mov
or
aas
sbb
xor
and
inc
ss
mov
jbe
or
inc
pop
push
xor
or
pop
mov
rcrl
movb
push
adc
sub
dec
pop
and
aaa
xchg
add
inc
call
mov
outsb
pop
fadds
inc
dec
dec
dec
xorl
ret
mov
adc
aam
push
sub
in
jle
lahf
in
sub
js
rolb
or
cmp
sbb
sbb
fpatan
jge
adc
scas
add
ret
mov
aad
push
enter
sbb
or
and
inc
add
xor
enter
cwtl
xor
movsb
xor
sub
mov
stos
in
sub
xor
dec
inc
sub
imul
sbb
mov
sti
mov
pop
inc
xor
add
mov
bound
in
xchg
int3
fsubl
movsb
or
in
cmp
inc
pop
je
add
pop
rorl
call
xchg
roll
xor
and
push
nop
cs
ficompl
aam
in
cld
mov
and
cmpsl
das
mov
sub
xor
sahf
cld
sarb
xor
cld
push
aaa
mov
mov
ret
add
js
mov
fwait
cmp
in
xchg
add
sub
jl
pop
pop
mov
inc
addl
test
sbb
lea
sbb
jns
add
adc
jp
das
dec
jbe
insl
das
jmp
xor
sub
add
adc
stos
fs
cmp
xor
xor
add
ret
adc
mov
inc
pop
adc
clc
aaa
imul
jae,pn
bound
aas
pop
or
lahf
bound
or
pushf
sub
add
cmpsl
out
jae
jbe
pop
or
xor
inc
jae
mov
and
mov
outsl
outsb
subl
int3
jmp
pop
push
cmpsl
shrl
js
add
push
push
cli
fwait
inc
mov
mov
pop
arpl
test
or
pop
inc
inc
push
jns
fcmovu
std
mov
fcmovbe
test
sbb
aaa
adc
mov
cld
bound
sbb
data16
movsb
sbb
sbb
cmpl
and
call
push
dec
clc
pushf
shr
push
movsb
imul
sub
add
push
das
mov
add
add
in
pop
ja
shlb
jae
or
jl
jge
jp
pop
push
xchg
cmp
daa
jno
push
shll
push
nop
xchg
lea
enter
xor
and
les
mov
enter
test
mov
xchg
enter
and
xor
dec
jb
xchg
xor
sbbb
cmp
pop
jb
enter
inc
mov
pop
dec
test
and
lock
stc
xor
int
shlb
push
sahf
cmpsl
inc
lods
jl
sbb
ja
mov
insb
cs
ja
loope
fucomip
push
js
lcall
fcoms
xor
add
sbb
and
lret
sbb
pop
inc
repz
pop
xor
js
ja
imul
pop
pusha
sub
insb
iret
push
iret
pop
ss
pop
es
push
sbb
call
test
push
jge
add
sahf
out
jl
xchg
iret
sarl
in
mov
mov
push
movsb
mov
mov
dec
mov
sbb
int3
inc
pushf
push
add
push
aam
fwait
push
pop
jns
dec
repz
sub
inc
cmpsl
out
xor
scas
push
test
pusha
cmpsb
repnz
je
cmp
pushf
scas
sahf
in
jnp
insb
adc
jle
loope
lock
cmpsl
stc
pop
les
push
shrb
scas
lods
mov
ret
js
jg
mov
mov
in
in
in
int
fistpll
mov
pushf
dec
inc
add
dec
sub
cmpsl
fnstcw
xor
in
pushf
dec
outsl
jno,pn
cmp
ja
insb
je
mov
mov
int3
add
or
or
jns
push
int3
inc
mov
xor
mov
inc
push
cmpsl
mov
insb
xor
test
add
jbe
addb
add
scas
lea
sbb
fyl2xp1
iret
or
in
adc
pop
jae
cmpl
add
clc
pop
cmp
xor
les
push
add
xlat
pop
mov
xor
mov
aas
fldt
pop
add
and
enter
idiv
jg
int3
enter
enter
fcomp
fxch
loopne
jecxz
in
pop
sarl
inc
sbb
mov
or
gs
and
popa
je
inc
dec
js
xor
xor
scas
or
mov
pop
or
push
adc
fiaddl
adc
mull
testb
iret
xrelease
shlb
push
add
test
xchg
xor
inc
add
outsl
aas
mov
cmp
stc
dec
movsb
dec
add
and
jbe
push
insb
je
cmp
repz
mov
movsb
lods
mov
int3
cmp
repz
fsub
in
hlt
jns
out
cld
add
or
sbb
jns
out
sub
cmp
sahf
out
sahf
dec
push
pop
fs
je
and
jl
add
leave
leave
add
fs
fs
gs
xor
dec
clc
push
jnp
jl
cmp
jns
mov
jge
js
dec
inc
sahf
mov
mov
in
addr16
inc
inc
sbbb
jns
push
lret
aas
shr
pop
out
pop
and
push
shrb
clts
fistpll
mov
or
add
adc
jl
inc
cmp
repz
push
pushf
mov
sarb
iret
repz
add
adc
out
sahf
out
dec
pop
push
sahf
test
jnp
pushf
call
into
inc
adc
push
push
add
pop
pop
and
das
pop
jmp
in
inc
adc
or
loopne
and
or
popaw
daa
jmp
inc
sbb
push
adc
cmpb
inc
aas
addb
addb
dec
xchg
dec
pop
push
js
sahf
jnp
mov
aas
adc
mov
aas
incl
loopne
add
repz
jns
push
add
jle
adc
cmpsb
lret
sub
out
out
sti
inc
mov
or
out
sahf
out
add
add
pinsrw
cmp
out
lock
or
repz
push
sbb
repz
push
adc
iret
repz
mov
enter
cmp
faddl
clc
adc
sahf
out
sahf
sbb
dec
add
jns
out
push
insb
sbb
jge
cwtl
out
pop
lods
push
add
repz
call
lcall
repz
cmp
add
iret
dec
in
jmp
out
sahf
sbb
xor
dec
mov
out
mov
jns
out
mov
enter
jns
loopne
clc
ficoms
ljmp
incl
loopne
ficoml
add
add
push
push
lods
movsl
scas
ja
and
push
fidivrs
xor
push
punpckldq
ret
mov
sub
add
jle
in
lods
cmp
adcb
sbb
jge
jnp
out
or
mov
sbb
xchg
outsl
mov
jg
mov
roll
add
jg
lock
inc
mov
out
ds
or
jnp
out
push
pusha
jo
enter
repz
push
fdivs
loopne
iret
roll
or
sbb
es
cmpsb
rolb
imul
mov
andb
xor
comiss
mov
xor
out
push
jle
pop
das
sti
pmulhuw
lods
push
orl
in
in
unpcklps
fstl
in
or
pop
adc
outsb
daa
or
dec
dec
dec
dec
adc
pop
add
cmp
pop
shl
in
ss
repz
loope
push
xor
push
push
iret
repz
inc
dec
pop
jo
pusha
stc
stos
cmc
cmp
fcoml
push
push
mov
daa
pushf
cmpsl
pop
mov
mov
or
dec
out
pop
rclb
cwtl
push
ror
jns
rcr
lock
adc
and
iret
repz
inc
push
fs
cmp
repz
stc
cmp
aam
hlt
add
sbb
jno
xor
call
nop
lea
mov
jg
add
or
nop
pop
pusha
iret
repz
cld
xchg
repz
repz
movsb
stc
mov
iret
int3
mul
div
cmc
sahf
out
or
hlt
sbb
sub
sahf
out
repnz
icebp
push
lock
sahf
out
out
jl
nop
sahf
out
sahf
in
mov
je
in
ljmp
add
ret
lahf
les
add
mov
andb
add
or
jg
add
pop
outsb
testl
insb
in
add
add
mov
inc
jbe
shr
adc
nop
negl
fwait
add
cmp
inc
adc
daa
or
roll
pusha
mov
add
pop
pop
sub
outsb
inc
add
das
orb
fdivrl
out
fcom
insl
push
mov
xchg
and
out
inc
push
pop
jnp
sub
outsl
xchg
iret
repz
stc
mov
iret
repz
std
incb
sti
cmp
repz
addb
sahf
aaa
add
add
xlat
insb
in
scas
fcompl
inc
jg
inc
jno
add
push
cmp
fsubr
push
lods
xchg
ds
decl
lea
insb
adc
and
jb
fisttpl
cmp
and
movsb
dec
mov
fidivs
popa
imul
mov
popl
mov
mov
sbb
aam
add
add
adc
inc
cmp
das
pop
add
add
adc
into
stos
sub
pop
add
adc
in
loop
in
jne
push
cmpb
add
insl
gs
adc
add
push
and
outsb
fs
sub
xor
dec
addr16
add
imul
push
dec
shlb
push
xlat
xor
jle
add
jge
and
insb
mov
sahf
out
push
dec
or
or
sahf
out
pop
sbb
and
jl
out
cmp
push
push
repz
repz
mov
iret
jecxz
add
pop
jb
pop
jb
add
jae
pop
add
adcb
pop
or
xlat
sbb
xor
sahf
out
sub
add
add
jns
out
add
or
loopne
sahf
out
and
inc
pusha
or
mov
cmpsl
xchg
jb
push
pop
pop
or
jb
jb
or
or
sub
and
jo
pop
inc
jae
mov
or
nop
mov
jo
sbb
and
cmp
gs
mov
mov
mov
sub
das
inc
lea
jmp
push
or
jg
mov
notl
adc
pop
or
or
or
inc
adc
adc
addb
sub
fldl
sbb
add
shlb
insb
adc
ja
adc
mov
pushf
pushf
pushf
pushf
push
add
popf
sbb
or
lcall
and
int3
cltd
aas
and
xor
xor
push
mov
and
cmp
js
pushf
dec
adc
mov
jns
bound
and
and
sbb
fs
dec
data16
mov
iret
repz
jg
out
sahf
out
incl
pushl
add
addr16
into
push
adc
pop
lahf
sbb
add
cli
inc
mov
xchg
jns
icebp
mov
mov
daa
sub
adc
mov
ror
adc
testl
push
xor
push
imul
je
pop
loopne
repz
jb
iret
es
push
call
mov
rolb
int3
je
shl
mov
hlt
ds
aad
js
pop
push
cmp
ljmp
les
push
mov
push
cld
push
shl
jl
scas
mov
cmp
hlt
sahf
sub
ds
pop
pop
idivl
jo
push
out
sbb
sub
pusha
push
or
jnp
pop
push
pusha
sub
push
int3
inc
nop
into
loope
cld
adc
int3
xchg
cmp
out
enter
and
cmp
mov
nop
mov
loopne
pop
push
rorb
fs
mov
lods
mov
dec
mov
clc
jo
sarl
xor
push
lods
aam
js
neg
add
and
push
imul
js
add
sti
sahf
aaa
sbbl
xor
into
push
iret
jnp
in
xchg
test
fs
push
fistpll
cs
andb
int
inc
mov
clc
push
lock
ss
cmp
test
mov
enter
dec
out
out
cmp
out
add
ds
xchg
sub
jl
lret
ds
cmp
pop
jmp
push
insb
adc
popf
or
and
xadd
loopne
push
pop
sub
push
pop
data16
outsb
data16
in
nop
dec
add
loopne
negl
jae
movsb
cmpb
push
sub
cs
or
inc
ds
dec
cmp
jo
in
push
mov
push
fsubrs
add
pop
out
push
mov
mov
shlb
jns
mov
dec
push
mov
jae
js
hlt
push
xchg
iret
inc
push
mov
dec
into
mov
data16
cmp
add
mov
je
rcrb
lock
es
push
insb
femms
jnp
sti
mov
je
insb
movsb
push
or
pop
out
test
cld
lcall
negl
inc
fcoml
pushf
push
pusha
aaa
js
cmp
inc
cmpsb
fdiv
faddp
cmp
sbb
inc
ds
inc
cmp
pop
repz
movsb
sbb
mov
dec
jnp
shlb
push
cli
cmpsb
call
mov
xchg
mull
and
pushf
out
jle
xchg
dec
scas
xor
pushf
lahf
push
add
inc
push
add
add
nop
adc
push
lds
pop
add
out
rolb
mov
or
and
mov
nop
add
add
push
add
loop
jl
pop
add
push
dec
add
fnstsw
pusha
ss
pop
jnp
out
mov
inc
and
dec
pop
push
and
jge
push
pop
dec
aaa
push
pop
dec
add
mov
fdivl
add
adc
dec
xchg
mov
jmp
push
loop
push
inc
mov
mov
xor
or
dec
xor
or
inc
mov
push
push
cs
and
inc
push
jnp,pn
rol
and
xor
dec
cmp
fidivrs
inc
dec
testb
push
dec
sbb
pop
cmp
dec
add
push
sbb
push
roll
dec
add
sub
movsl
enter
pop
sbb
push
cmp
mov
outsl
pop
incb
stc
repnz
test
pop
rolb
xchg
int
sbb
add
sahf
mov
add
gs
mov
add
incb
cld
bnd
bnd
clc
aas
push
pop
jmp
sarb
jae
cld
add
pop
or
push
ret
and
leave
aas
jg
add
and
add
insb
mov
add
test
or
pop
jo
sbb
flds
pusha
insl
shll
mov
psubb
fcmovnbe
xor
addr16
push
out
ficompl
neg
out
cmp
xchg
pushf
popf
rolb
loopne
lock
sbb
xchg
insb
xchg
clc
pop
push
aas
pop
xchg
jnp
pop
xchg
add
lock
xor
pop
std
cmp
movsl
xchg
add
pop
out
cmp
pushw
jbe
jg
or
lock
pop
inc
add
jo
mov
pop
sbb
rolb
incb
lock
pushl
or
jns
jae
push
add
nopl
es
cmp
sbb
push
add
nopl
repnz
aas
into
push
add
fistpll
inc
and
cmp
jl
add
add
comiss
mov
pop
outsb
daa
add
lahf
out
add
jg
lea
aas
rcrb
dec
add
push
inc
pop
outsl
clc
push
pop
fisttpl
cmp
add
xlat
mov
sbb
mov
cmp
das
ds
lods
xchg
and
jg
pushl
fwait
adc
pop
in
les
test
mov
jg
aas
nopl
cmp
sub
add
mov
pop
cld
pop
cmp
aad
mov
fsubrl
aaa
or
add
sub
fwait
int
ret
or
jle
or
push
sub
inc
add
sahf
in
cmp
inc
addl
pusha
xor
sbb
push
push
sbb
add
vpsubusw
shll
cmp
mov
sbb
cmp
sbb
or
test
or
incl
xchg
and
add
push
mov
ja
add
sub
rolb
rcrb
push
and
add
cmp
jae
or
add
mov
pop
xor
cmp
subl
mov
mov
sbb
cmp
xor
daa
neg
in
scas
and
xor
sahf
jnp
pop
and
ja
cmp
sahf
mov
push
dec
push
mov
jnp
xor
push
daa
cmp
sbb
push
andl
push
fidivrs
dec
daa
dec
addl
daa
mov
out
jne
cmp
push
daa
clc
push
or
sbb
mov
pop
push
cmp
xchg
or
jl
push
repnz
inc
cmp
cmp
rep
loope
xor
and
daa
inc
mov
xor
daa
dec
sub
xchg
daa
jg
repz
xor
mov
pop
mov
dec
sub
clc
xor
jbe
and
push
es
and
lods
fnstsw
int3
push
and
and
cmp
mov
pop
and
mov
and
sbb
cmp
jnp
fldenv
push
lret
repnz
push
and
xor
or
push
pmaxub
in
mov
push
sbbl
xbegin
and
inc
inc
lahf
add
ja
testl
cs
inc
inc
or
xchg
in
inc
pop
dec
ljmp
xor
insb
mov
inc
aad
mov
aaa
jns
lods
dec
dec
pop
daa
mov
jns
enter
xchg
in
sbb
inc
add
clc
mov
xorb
sti
test
mov
ja
dec
pushf
es
dec
mov
sbb
xor
inc
mov
xor
ds
shll
cmp
daa
xor
arpl
add
insb
insb
mov
daa
lahf
and
lcall
popf
mov
pop
es
push
lcall
in
es
fidivs
mov
lret
mov
aas
fwait
inc
inc
es
out
fnstenv
daa
dec
add
jle
xlat
ja
daa
xor
in
repz
sub
xchg
popa
out
jecxz
test
or
aad
adc
xor
cmp
nop
in
inc
xchg
sbb
or
stos
movsb
out
sub
or
pop
jns
fsubl
xor
inc
xor
scas
fnstcw
das
es
bound
cld
insb
jo
in
push
inc
sub
jb
pshufw
stos
and
repz
andl
jmp
inc
push
shlb
in
xor
push
inc
mov
and
mov
mov
aas
clc
daa
fsubrs
mov
pop
lock
cmp
fsubs
movsb
jbe
cmp
dec
xchg
daa
and
mov
in
xor
adc
xlat
or
xchg
jmp
divl
lock
cmpsl
sbbb
and
jo
cmp
push
cmp
sbb
test
xchg
sbb
clc
mov
inc
inc
daa
adc
daa
fs
xor
daa
in
jl
gs
clc
or
sbb
xchg
es
mov
daa
dec
xor
dec
xor
jbe
insl
daa
dec
daa
dec
daa
dec
jae
test
daa
clc
dec
or
dec
sarb
addr16
cmp
adcl
rorl
dec
out
aas
sbb
bswap
test
mov
cmp
cltd
ret
jnp
in
push
mov
mov
inc
xor
cwtl
sbb
daa
repz
inc
push
cmp
repz
xor
insb
sarb
cmp
bound
xchg
add
cmp
daa
shlb
push
insb
push
aas
push
mov
lahf
adc
pop
pushl
inc
sub
inc
jae
xor
fbstp
lahf
es
mov
scas
orl
and
push
pushf
aaa
js
addr16
aas
daa
shrl
fs
jl
daa
and
cwtl
and
sbb
push
aaa
scas
subl
daa
insl
mov
pop
jbe
pushf
outsb
push
outsl
or
mov
push
xor
fadds
clc
daa
and
mov
xchg
add
and
mov
xchg
and
pushf
aas
subl
mov
or
xchg
add
add
ss
jg
cmc
jp
gs
or
cltd
xor
sub
popf
cld
push
lock
add
pop
mov
lock
xchg
dec
add
fwait
cmp
pop
or
insl
xchg
add
sbb
inc
cmc
mov
push
repnz
add
push
add
push
mov
leave
cmpsb
fidivs
imul
fildl
inc
push
add
jne
inc
pop
out
sbbb
mov
inc
push
add
add
push
str
jge
mov
jbe
rolb
fists
fidivrl
push
jo
ss
lea
push
sub
orl
lret
addr16
xor
loop,pn
aas
addr16
bound
mov
aas
rcrb
fisubl
dec
repz
fidivrs
and
lcall
inc
imul
idivl
cmp
imul
push
dec
adc
inc
mov
dec
insl
push
or
cmpsl
sub
push
push
ss
imul
scas
sub
sub
arpl
gs
out
ret
add
inc
jbe
imul
fimull
fisubl
not
and
cmp
pop
mov
aaa
push
bnd
cmpsb
jne
add
mov
jne
inc
ja
jno
mov
or
ss
add
jg
cmp
mov
dec
xchg
out
popa
fldl
ret
loop
xlat
or
jbe
mov
iret
pop
adc
pop
in
adc
dec
subl
sub
or
mov
pop
ret
shrl
cmp
or
arpl
or
insl
addb
ffreep
push
push
push
popa
lahf
outsl
sub
inc
gs
dec
cmpsl
sbb
idivl
aaa
popa
adc
push
bnd
mov
shrb
cmpsl
pop
mov
push
outsl
and
add
add
ds
mov
insb
jg
mov
loop
jg
and
xchg
stc
loopne
popf
imul
adc
push
je
dec
dec
pop
divl
push
pop
add
fwait
xor
mov
sbb
fisubrl
xorb
lahf
inc
sub
in
mov
imul
mov
arpl
jae
sbb
sbb
neg
out
andb
and
sbb
into
xchg
insb
jae
arpl
data16
lret
insl
xor
mov
sbb
push
ja
push
push
jnp
cmp
inc
add
xor
dec
pop
push
add
xchg
arpl
je
xlat
aad
lds
insl
and
andl
xorb
push
outsb
lahf
and
cwtl
and
push
jbe
addr16
mov
stc
scas
adc
out
fidivrl
in
xchg
je
push
sub
pop
fisubrs
inc
mov
pop
mov
pop
push
jae
ret
addl
bound
ret
ja
sub
push
aas
cmp
inc
or
inc
pop
fidivl
in
mov
and
jo
ja
subl
imul
fwait
dec
and
sti
push
and
fdivrl
ja
jns
push
add
cmp
add
or
jnp
stos
xchg
xchg
cli
dec
stos
push
fisubrs
ss
dec
sub
adcl
fisubrl
sub
insb
sbb
sar
and
jo
outsl
ret
pop
aaa
fs
sbb
sbb
xorb
jae
adc
fwait
mov
mov
adc
das
adc
loopne
push
out
pop
rclb
mov
sbb
jne
adc
aaa
popa
fldt
mov
push
addb
cmp
fsubr
pop
pop
repz
pop
pop
xorb
sub
daa
pop
icebp
mov
scas
add
sbb
or
xchg
lock
rol
sti
jns
es
xchg
mov
inc
lcall
and
or
pop
fwait
imul
loop
sarl
idivl
pusha
mov
rcr
in
ficoms
push
push
adc
jno
xlat
adc
pop
dec
dec
or
imul
add
adc
fs
xchg
pop
orl
mov
cmp
punpckhbw
lods
arpl
pop
dec
add
or
in
js
pop
push
jae
outsl
lret
xor
jnp
or
jmp
pop
xchg
xor
fildl
adc
jmp
mov
ss
mov
fcomi
loopne
mull
add
pop
rcll
pop
mov
sbb
jo
iret
adc
sarl
rcrl
push
inc
bound
stos
pop
sti
insl
pop
xchg
ja
in
xchg
cmp
mov
inc
mov
jb
les
testl
outsl
pop
dec
jg
mov
sti
addr16
je
lds
sub
dec
mov
cmp
inc
daa
das
xlat
xor
mov
cs
cmp
into
dec
xor
cmp
and
push
mov
mov
adc
mov
xlat
sub
je,pt
rcr
mov
daa
out
iret
pop
sbb
xlat
mov
outsl
mov
inc
mov
sbb
and
js
outsl
mov
ret
movsb
repz
imul
mov
inc
jae
push
mov
lods
call
jb
movsb
adc
pop
outsl
adc
pop
inc
js
pop
jbe
push
popa
ja
xlat
data16
ja
adc
inc
mov
nop
mov
dec
dec
scas
jmp
and
sub
xor
adc
or
fs
adc
cmp
sub
dec
pop
in
inc
pop
mov
mov
jnp
fadds
cmp
xchg
arpl
popa
sub
push
xor
push
inc
arpl
mov
jb
fwait
jbe
imul
adcl
jbe
sti
sub
mov
stos
dec
xchg
pop
notl
stos
jmp
shrl
lret
jmp
xor
sub
loopne
push
jae
or
jle
mov
outsb
pop
in
jbe
out
and
or
push
mov
add
inc
sarl
insl
fwait
shrl
outsb
idivl
push
pop
fistpl
data16
adc
popa
outsl
cmp
lods
pop
lods
les
push
jg
mov
adc
xchg
je
adc
lock
adc
sbb
mov
mov
addr16
push
das
out
push
cmpb
pop
xor
outsl
mov
add
neg
fdiv
dec
scas
insl
fistps
dec
cmp
lahf
mov
aad
xlat
xchg
and
cmpsb
popa
fildll
arpl
ret
test
cmpsl
imul
lcall
pop
xor
mov
pop
sbb
xchg
movsb
sub
push
inc
mov
addr16
inc
and
xchg
sbb
xor
adc
les
pop
pop
adc
lds
jge
mov
inc
andl
js
sbb
aam
cmp
pop
arpl
sbb
rorb
dec
push
mov
push
mov
jnp
xchg
mov
lcall
push
inc
push
pcmpgtb
mov
mov
pusha
aas
lahf
loopne
push
loopne
sub
pop
mov
loop
xor
js
pop
and
js
addr16
cmp
sbb
jnp
insb
inc
xor
add
sti
cs
sub
sbb
adcb
mov
daa
cmpsl
pop
push
and
inc
mov
jo
lods
xchg
aaa
sbb
jne
adc
mov
mov
jnp
xchg
out
imul
bound
or
addl
mov
push
jne
stos
out
testl
add
jne
dec
cmp
push
push
push
fimull
loopne
js
das
jae
jmp
mov
pop
data16
jae
or
outsb
daa
or
insl
fcmovnb
aas
iret
inc
and
mov
push
mov
mov
mov
jmp
roll
ret
sub
sbb
mov
addr16
or
stos
cmpsb
pop
pop
pushl
add
cmp
scas
xchg
les
xchg
dec
fiadds
jne
out
bound
and
in
push
and
pop
xchg
into
sbb
add
ds
pop
adc
sub
or
out
jb
xor
icebp
dec
inc
pop
or
jbe
fiaddl
and
sbb
mov
sbb
pop
test
add
inc
pop
push
jo
adc
jle
das
fsub
jecxz
aas
jle
mov
insb
addr16
sbb
aam
add
or
sbb
xchg
jne
mov
xchg
lret
das
andl
dec
sbb
inc
pop
inc
shlb
and
cmpb
mov
stos
dec
pop
mov
fistl
mov
arpl
mov
cmp
sub
adc
pop
add
pop
jno
and
incl
repz
adc
add
dec
out
stos
es
shrl
outsl
jb
xchg
or
mov
adc
pop
cmpsl
pusha
sbb
pop
or
je
jbe
ljmp
jbe
cmp
dec
xchg
cmp
xchg
adc
inc
sbb
ds
xor
pusha
pop
rcll
movw
mov
cmp
mov
sbb
adc
iret
push
adc
pop
pop
xor
inc
inc
push
xlat
pop
jg
loope
push
inc
sbb
jae
gs
ret
mov
cmpsl
lahf
cmp
outsb
and
mov
pusha
mov
sub
cmpsl
xchg
push
or
mov
sbb
je
in
cli
xlat
jae
mov
dec
push
repz
stos
sub
dec
repnz
outsl
fisubrl
lds
pop
sub
lahf
pusha
lds
or
add
xlat
push
mov
ret
shll
das
ja
mov
or
popl
push
xchg
inc
dec
xchg
jo
cmpsl
mov
jne
sub
data16
dec
fbld
push
pop
adc
or
jne
inc
xchg
imul
push
sub
jmp
mov
adc
push
jnp
loopne
xchg
fisubrl
out
inc
mov
jae
inc
shll
xchg
jae
mov
pop
divl
jb
jbe
inc
or
aaa
mov
cmpsl
ret
add
addr16
scas
sahf
cmpsb
test
or
int3
test
push
pop
int
pop
mov
lahf
mov
stos
popa
imul
outsl
xor
jns
jb
pop
shll
push
imul
cmp
faddp
cmpl
xchg
scas
dec
inc
pop
ljmp
outsb
ret
leave
ret
sbb
jo
loopne
add
adc
xlat
rcl
xchg
pop
outsl
ds
inc
sbb
xchg
pop
stos
js
dec
sub
xor
pop
and
pop
daa
pop
repz
orb
pop
sub
add
cmp
dec
cmp
xorb
repz
add
fwait
cmp
dec
mov
push
lods
sar
int
mov
jae
push
dec
lods
mov
adc
xorl
in
push
push
fwait
xchg
cmpb
add
imul
adc
mov
rcll
mov
and
dec
pop
inc
rcr
push
sbb
xchg
rcll
add
adc
dec
mov
mov
push
mov
adc
pop
adc
pop
dec
imul
fcmovnb
mov
repz
sub
ja
or
add
mov
in
mov
dec
adc
js
insb
mov
dec
cmpsl
adc
cs
cmp
movsl
dec
jnp
imul
xor
push
les
xor
or
mov
arpl
mov
and
sbb
push
lret
dec
mov
add
sub
sub
sbb
sub
add
insl
scas
adc
add
jb
sub
movsb
jbe
clc
sbb
push
push
es
xchg
sahf
mov
xchg
xchg
adc
outsb
pop
jnp
js
or
je
xor
imul
jbe
jbe
or
push
int
adc
ret
jo
dec
sbb
sub
in
inc
insb
addr16
xor
sub
xchg
je
mov
pop
into
mov
dec
sarb
xor
gs
push
dec
cmp
cmp
ret
leavew
jp
cmp
pop
inc
lods
rcll
fisttpll
mov
adc
shl
ficoml
mov
pop
sub
loopne
dec
popf
movsl
mov
outsl
inc
aad
sarl
xorl
and
and
insb
add
push
arpl
movsl
or
mov
in
insb
popl
cmc
popa
rclb
sub
push
adc
mov
cmpsl
push
addr16
add
out
pop
or
or
push
jno,pn
dec
add
pop
psrlw
cmp
icebp
sahf
mov
roll
cmc
or
push
push
inc
xor
sarl
fsubl
or
or
push
dec
xor
test
add
fcmovne
or
mov
xchg
push
pop
mov
jo
add
xor
adcl
sbb
lds
divl
xor
jo
push
xor
xor
mov
sbb
iret
sbb
hlt
jne
add
addl
mov
dec
adc
dec
out
and
inc
jnp
mov
or
add
sub
test
add
dec
mov
call
adc
push
clc
jl
jl
push
add
push
insb
gs
adcb
bound
movsb
mov
or
inc
lea
arpl
fwait
push
into
push
sub
push
cmovge
xor
outsb
push
adc
jns
mov
das
adc
ficomps
fldenv
daa
insb
adc
add
call
aam
push
imul
or
cwtl
inc
into
pop
mov
pusha
or
adc
dec
sbb
xchg
cmpsl
add
outsl
adc
push
scas
inc
xchg
and
pop
out
mov
daa
xor
adc
adc
insb
xor
dec
data16
data16
insl
lcall
imul
push
sar
or
imul
push
imul
flds
imul
pusha
push
xor
fs
push
les
pop
xchg
sbb
sub
rol
sti
xor
push
outsb
flds
or
xchg
sbb
scas
sbb
sbb
sbb
add
cmp
inc
inc
sbb
inc
or
add
and
mov
inc
fs
gs
sub
lcall
outsb
xor
push
jne
loop
imul
xchg
fs
sbb
push
mov
dec
xor
insb
test
rcrl
shrl
sub
push
sar
popf
and
lcall
repz
rolb
push
sbb
insl
fildll
xchg
inc
jp
push
stos
icebp
sbb
imul
sbb
cmp
ja
loop
or
cmp
add
sub
leave
pop
shlb
dec
fs
xchg
sub
push
fwait
inc
push
push
ud2
movsl
ret
aad
pop
pop
inc
or
mov
add
bound
es
jbe
push
inc
gs
in
shrl
or
sbb
sbb
mov
pop
push
ja
movsb
iret
adc
fldlg2
pusha
fcmovnb
push
outsl
out
sbb
mov
sbb
subl
push
pop
xor
inc
aas
fistl
lea
and
sbb
and
fiaddl
mov
push
xchg
daa
in
pop
ret
mov
mov
jge
push
adc
ret
xchg
imul
adc
shll
xor
mov
and
push
xlat
icebp
icebp
push
js
rdtsc
cmp
popf
xor
pop
push
inc
int
dec
mov
xchg
in
shlb
sbb
je
adc
inc
test
inc
adc
mov
or
pop
pop
out
je
loop
popa
push
add
mov
ja
push
outsb
pop
aas
mov
imul
xor
inc
cmc
sbb
push
outsb
push
ret
cs
jne
mov
cwtl
loopne
ret
push
popa
imul
shrb
mov
stc
popf
cs
cmp
sub
ret
fs
jae
push
mov
sub
mov
sub
jmp
nop
cltd
dec
shlb
xlat
mov
inc
pop
jae
push
sbb
sub
and
or
pop
pop
pop
lret
jo
xchg
xchg
push
dec
clc
jne
es
jne
sub
subb
jne
push
arpl
add
test
jne
add
sar
insl
add
pop
nop
or
test
pop
sbb
fsub
faddp
adc
add
rolb
test
movsb
and
cmp
test
adc
pusha
inc
adc
sbbl
or
mov
aaa
outsl
rcr
xor
and
jmp
imul
mov
inc
ret
outsl
es
pusha
mov
inc
mov
out
cmpl
and
inc
add
inc
push
sbb
mov
add
or
inc
imul
imul
push
sbb
mov
cmpsb
mov
xor
cmc
aas
and
sti
mov
push
jecxz
repz
and
addr16
shll
lahf
sbbb
stos
pop
rcrb
inc
or
and
imul
dec
mov
add
push
dec
push
xor
push
mov
shrl
mov
inc
dec
inc
rcl
repz
and
divb
movsl
jg
adc
push
popa
lds
mov
in
aam
mov
jecxz
inc
aad
adc
xor
adc
lds
xor
test
jns
and
roll
push
js
dec
mov
ds
jo
shll
jns
mov
dec
pop
mov
fsts
rcl
adc
and
add
cmc
sub
xor
roll
mov
sub
fsubr
stos
mov
std
adc
lods
pusha
jnp
shl
push
mov
subb
push
sub
or
fcmovne
add
dec
xor
mov
inc
inc
sub
test
sub
enter
sbb
dec
sbb
sub
xchg
movsb
pop
daa
bndstx
and
dec
inc
jmp
mov
sbb
pop
stc
and
xor
shlb
sub
cwtl
jae
dec
and
lods
and
adcl
je
sub
push
jo
pop
jnp
cmp
xor
mov
push
or
pop
mov
data16
mov
mov
nop
lret
adc
cli
mov
daa
dec
inc
sbb
xorl
arpl
add
adc
lods
sbb
cmp
and
mov
addr16
sbb
jnp
dec
sbb
and
ret
test
add
int3
sub
jo
fildl
pusha
enter
jo
jo
popf
test
cmp
adc
dec
jo
adc
xchg
adc
inc
fcmovu
xor
and
dec
jb
sub
sbb
push
insl
jb
outsl
inc
jo
bound
add
outsl
xor
add
fincstp
sub
jae
adcb
jge
adc
imul
add
cmp
insb
daa
sub
arpl
pop
adc
loopne
das
pop
add
imul
sbb
mov
mov
and
xor
push
nop
popf
sub
int
lea
ret
add
lds
fsubs
jne,pn
mov
nop
mov
pop
dec
xchg
jbe
inc
movsl
push
xor
adc
fcmovne
sbb
pop
xchg
and
iret
lea
pop
insl
push
popl
loope
cmpsl
shrl
int
and
xchg
xor
movsl
daa
push
and
sbb
stos
int
push
outsl
and
test
inc
aaa
and
pop
test
sbbb
pop
push
fidivrl
dec
or
pop
sub
lds
xchg
hlt
inc
sbb
and
ja
movsl
xor
jae
adc
xchg
inc
sbb
lahf
sub
insl
mov
adc
xchg
add
das
enter
dec
jae
mov
test
es
loopne
inc
adc
shr
xchg
movsl
sbb
imul
std
pop
and
add
ja
movsl
or
cltd
mov
pusha
inc
xchg
mov
push
pop
sbb
add
lret
stos
insl
in
or
rcr
inc
scas
inc
pop
sub
lods
clc
addb
inc
imul
inc
fstpt
jns
lds
bound
xlat
test
inc
inc
inc
or
xor
mov
dec
pop
insb
pop
sbb
xchg
sbb
and
jbe
rcrb
mov
insb
mov
adc
and
insl
mov
sbb
rol
fwait
dec
inc
adc
push
test
nop
imul
jb
or
jno
imul
mov
cs
inc
adc
lcall
pusha
test
leave
adc
jno
push
ficoml
xor
push
mov
sub
and
test
sbb
adc
mov
and
lods
addr16
loope
jae
in
push
outsl
sbb
cs
adc
icebp
and
xchg
xchg
mov
lea
lds
jb
inc
mov
sbb
jg
arpl
dec
data16
pop
and
insl
and
mov
sbb
pusha
pop
and
jmp
ret
adc
loopne
sub
mov
adc
cmpsb
lea
push
test
int3
push
adc
dec
jb
push
pop
popa
movsb
leave
sub
push
test
jmp
inc
adc
dec
cmp
aaa
add
jo
dec
outsb
add
jg
fisubl
adc
push
sahf
int
cmp
les
xchg
pop
sarl
inc
add
dec
enter
pusha
push
sarb
insb
test
pop
xor
or
mov
int3
dec
nop
mov
pop
inc
sub
pusha
mov
jg
add
sbb
sub
add
enter
pushf
ss
push
or
test
nopl
xchg
insl
sbb
pop
xchg
notb
movups
add
jns
nop
sahf
bound
outsb
push
mov
arpl
popf
ds
imul
dec
inc
mov
addl
daa
sub
cs
stc
and
pusha
inc
inc
push
inc
sub
negl
and
in
in
cld
rolb
stc
es
inc
dec
rcrb
movsb
popa
dec
bound
cmpsl
nop
sub
insb
jae
xchg
push
rcrb
sbb
dec
rolb
inc
xor
xchg
loopne
add
jns
push
jae
dec
and
es
push
cmp
mov
sub
das
lret
pop
add
add
add
inc
add
inc
xchg
ds
jmp
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
popa
jmp
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
nop
jmp
add
inc
inc
