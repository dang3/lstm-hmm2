int
add
push
aam
mov
js
push
xchg
enter
iret
pushf
mov
jb
aad
or
or
lret
rclb
fstpl
aas
outsl
lahf
xor
lods
adc
inc
push
push
mov
or
fucomi
mov
jecxz
mov
or
mov
decb
lods
adc
rcrl
inc
and
out
std
fcom
push
fdivrs
enter
pop
test
std
iret
ds
xchg
das
out
mov
jecxz
loop
pop
ror
xchg
pop
or
jmp
iret
and
test
add
xchg
or
xchg
mov
dec
jae
iret
sahf
fwait
push
fisubrl
test
rcll
xorl
push
mov
lret
cmp
scas
loop
xor
stos
cld
stos
fcmove
sbb
insb
cmp
or
cwtl
dec
adc
sbb
out
cmpsl
dec
mov
adc
fs
mov
mov
ss
addl
test
mov
mov
xor
pop
xlat
lret
pmulhw
dec
dec
sub
lods
jge
jmp
sbb
fwait
lock
and
test
mov
into
mov
dec
push
scas
mov
int3
push
outsb
and
cpuid
out
popa
xchg
test
adc
lret
mov
rorb
jg
add
sbb
sahf
inc
shlb
in
sbb
xchg
and
aas
cltd
inc
or
into
jno
ret
pop
xchg
call
xor
push
mov
push
or
mov
loop
jo
mov
aas
fdiv
ret
mov
testb
inc
mov
adc
cli
mov
cmp
sahf
ror
add
lds
or
ret
xchg
lret
repz
inc
lret
jle
pop
add
lret
div
pushf
arpl
cltd
ret
sbb
xlat
daa
jl
dec
ret
test
mov
lods
cmp
loope
sar
loope
xlat
xor
sbb
sbb
xchg
mov
lock
cmpsl
and
flds
dec
roll
cltd
sbb
fbstp
jge
fsubl
mov
pushf
push
test
ja
mov
inc
add
loopne
xor
sti
push
sahf
in
dec
add
insl
or
jbe
dec
out
rclb
popa
xchg
adc
enter
int
scas
jl
cmp
cmc
xor
mov
ret
jmp
repnz
and
or
cmp
push
mov
xor
movsl
adc
loop
test
xchg
icebp
push
into
insl
movsl
iret
add
lock
jmp
repz
jmp
mov
negl
dec
mov
pop
in
dec
lret
mov
ret
stc
xor
or
in
mov
add
sub
ljmp
hlt
mov
mov
or
dec
jnp
jne
leave
xor
sar
mov
fstpl
scas
popf
mov
mov
pop
shr
dec
push
int
and
shrb
or
in
jmp
inc
mov
mov
fwait
dec
movsl
and
xchg
imul
int
pusha
sub
fistl
pop
xchg
outsb
cwtl
arpl
pop
je
mov
mov
dec
fcomp
es
gs
mov
ret
sbb
cld
inc
cmc
sbb
adcb
loop
xchg
enter
in
xor
cli
xchg
mov
inc
imul
pop
xor
add
cmp
cltd
das
jecxz
int
addb
add
rorl
jnp
cmp
pop
inc
mov
pushl
pop
jle
push
xchg
int3
test
jne
and
jbe
add
mov
sub
lahf
adc
cmp
sbb
mov
sahf
int3
je
xchg
xchg
dec
sub
inc
enter
faddl
shl
sarl
in
lods
mov
xchg
xlat
shll
cli
mov
fsts
add
ret
jnp
lock
add
dec
adc
adc
unpckhps
push
and
jl
insb
and
aas
ds
lods
popa
cmp
arpl
jp
push
sub
pop
sbb
sub
mov
pop
lods
lret
into
adc
mov
loopne
nop
sbb
dec
mov
adc
mov
push
nop
scas
adc
icebp
dec
xchg
jle
mov
jno
xchg
outsb
mov
jg
clc
push
or
aam
sbb
or
jno
rep
fisttpl
sahf
pop
orl
jmp
adc
add
aam
jno
mov
jne
mov
lret
cli
lock
sub
cs
push
and
xor
mov
jmp
fstpt
lret
lock
jno
mov
add
cmp
scas
pop
aas
cmpsb
sbb
push
mov
test
mov
lea
sti
cmp
shll
dec
adc
adc
adc
iret
js
or
rcll
cmp
insb
push
out
push
pop
pop
or
mov
nop
pop
mov
jns
popf
lret
loopne
jnp
lahf
loop
int3
pop
out
js
fimull
sbb
lods
cmp
add
inc
pop
jo
inc
daa
lahf
adc
mov
or
cld
or
cwtl
jo
loop
dec
roll
or
add
test
dec
imul
dec
in
cs
mov
daa
rcll
cmp
stos
in
ljmp
jp
ss
repz
fwait
lods
push
out
movsl
loope
push
push
pop
repz
into
and
in
or
push
adc
xchg
dec
xchg
int3
and
mov
popa
test
adc
clc
or
rorb
cmp
add
cmp
iret
test
btc
mov
imul
fisttps
and
inc
sbbb
add
enter
jmp
hlt
add
int
ss
push
cltd
into
movsl
rcll
into
test
out
push
or
hlt
test
push
fsts
inc
ffree
jbe
icebp
clc
loope
les
mov
int3
cmp
test
das
out
jmp
add
sbb
adc
jnp
out
xor
rolb
xchg
out
aam
mov
lret
pop
jg
aas
shl
xor
mov
lret
add
or
sahf
xchg
pop
cmp
sbbl
scas
jge
mov
lds
jnp
mov
xor
adcb
test
icebp
fs
push
andb
push
test
xchg
cmp
xor
dec
stc
inc
xor
aad
test
je
push
pop
add
push
ds
xchg
add
call
push
stos
mov
rorl
cli
js
jb
or
or
sbb
and
jns
mov
dec
push
mov
fisttpll
aad
sti
fsts
xchg
ror
or
or
lahf
inc
shll
dec
mov
lret
lods
mov
faddl
push
or
rcrl
pop
inc
outsb
jbe
inc
cmp
mov
dec
push
loope
cmp
in
mov
lea
fisttpl
jp
aam
test
or
cmp
xor
xchg
fimull
mov
pushl
push
sti
dec
aas
push
mov
mov
cli
in
jnp
add
inc
pushf
mov
inc
sarl
aad
sqrtps
sub
fcoml
push
mov
jbe
outsb
mov
clc
popf
cmp
lahf
mov
add
andl
mov
bound
pop
xchg
sarl
add
loope
pop
jns
arpl
and
ret
fucomp
sub
xchg
dec
adc
enter
shll
test
mov
and
mov
sbb
jne
jecxz
pop
cwtl
cmp
cmp
dec
sbb
push
jmp
lahf
push
push
fsts
mov
mov
in
mov
inc
mov
push
or
lcall
push
add
or
add
ficomps
loopne
xchg
aas
or
or
and
cmp
or
in
mov
sahf
and
dec
lret
mov
push
in
and
add
shl
pop
jle
test
inc
out
addl
inc
and
push
in
fldl
sub
idiv
or
lcall
dec
sbb
lds
or
mov
cmp
out
xor
jge
call
js
sarb
movsb
lahf
jns
mov
adc
dec
enter
mov
jbe
inc
xchg
hlt
mov
popf
loope
hlt
jecxz
mov
cmp
jne
add
cvtdq2ps
fists
aas
pop
daa
sbbb
and
enter
arpl
mov
clc
shll
js
sub
into
adc
sub
enter
push
pop
push
fwait
cmpl
fisubs
mov
mov
out
push
pop
pop
mov
mov
pop
in
mov
int
lds
cmp
mov
out
mov
testl
or
xchg
int
ljmp
enter
cld
mov
sbb
add
cltd
shll
fisubs
cmpsl
jecxz
ret
xchg
bound
mov
and
icebp
in
adc
cmp
test
xchg
lods
mov
imul
dec
int
int3
jo
lret
hlt
inc
arpl
or
hlt
dec
jmp
mov
outsl
rorb
orb
push
int3
cli
xor
mov
inc
cmp
jl
int3
in
lods
sub
or
lret
ljmp
imul
pop
scas
mov
dec
sub
sahf
sahf
fidivs
stc
mov
sbb
rol
add
xchg
jp
scas
push
push
pushf
repnz
push
jp
lret
cs
push
sub
xor
aam
das
mov
mov
lock
mov
cmp
cld
jb
sbb
xchg
pop
inc
push
push
xor
jmp
rolb
int
xor
into
fsubl
std
out
les
xlat
popf
int3
push
flds
dec
loop
mov
and
ficomps
sbb
lea
mov
sub
shrb
jmp
xchg
aaa
sbb
aas
mov
cmp
or
mov
aam
mov
dec
iret
and
add
mov
mov
pop
adc
popa
lods
push
movsl
es
out
stos
pop
frstor
push
mov
lock
mov
cmp
inc
adc
sbb
mov
mov
and
and
or
inc
mul
add
xchg
lret
xchg
mov
rcl
leave
cmp
cmc
les
or
repnz
jecxz
aad
cmc
push
enter
push
sub
cli
or
js
xor
mov
lods
ret
cmp
cld
cmp
mov
int
stos
js
mov
and
xchg
lret
psubw
mov
cmp
xor
mov
mov
sub
es
cmp
loope
loop
repz
negl
and
mov
or
test
and
and
pop
push
xchg
lods
lcall
xchg
out
sub
imul
push
addr16
xchg
outsb
fucomp
movsb
rcrl
fwait
mov
push
push
rcrl
stc
sarl
adcl
fidivs
divb
cltd
in
leave
jmp
push
hlt
shll
lods
rclb
into
in
push
rol
cltd
cmp
xor
dec
xlat
jle
or
cmpsb
xor
push
hlt
ret
rcr
jl
rclb
loope
ja
aad
dec
int3
sar
jmp
iret
test
or
pop
push
jo
ret
jnp
pop
mov
decl
stos
inc
dec
in
scas
movl
mov
fs
sub
xor
pop
iret
roll
mov
nop
dec
pushf
movsl
fsubrl
fnstcw
pop
cmpsl
jp
pop
rcll
mul
aam
gs
push
adc
int
fadds
out
add
cmpsl
insb
or
adc
testl
jl
cmpb
sar
inc
xor
das
insl
mov
add
push
pop
and
xchg
adc
add
mov
mov
ss
shlb
or
dec
in
jb
mov
mov
dec
aam
data16
mov
xchg
mov
dec
sub
push
clc
out
adc
outsl
nop
les
lea
popf
rclb
adcb
int3
or
inc
cmp
test
shll
rolb
xor
sub
mov
dec
inc
adc
mov
mov
sbb
and
daa
ljmp
and
or
mov
mov
outsl
icebp
popa
nop
fs
lock
xor
add
pop
aad
mov
xor
cmpsb
inc
leave
mov
xchg
or
nop
jl
cmp
or
jmp
xchg
jae
mov
test
stc
sti
test
loop
das
jecxz
sbb
sbb
or
xchg
mov
cmp
out
stc
inc
xor
cmp
stos
sub
es
stos
dec
sub
lods
setb
arpl
or
sbb
jo
lea
daa
sbb
push
mov
stc
sbb
add
call
mov
sub
test
mov
dec
int
mov
xchg
jmp
fsubl
pop
cmp
mov
pop
adc
mov
mov
push
xchg
loop
sbb
jno
fwait
xchg
jnp
sbb
mov
fmul
or
ds
xchg
aas
dec
mov
mov
mov
fsubs
xchg
inc
stc
xchg
data16
scas
add
jb
fiadds
push
subl
jg
mov
push
ret
rcl
dec
sbbl
mov
arpl
mov
les
repnz
mov
popa
call
lods
ret
outsb
fxsave
xor
testb
dec
dec
push
push
push
mov
dec
cmp
or
std
popa
lea
lock
lret
lret
sbb
jnp
mov
jmp
lret
cmc
test
in
out
test
in
out
jmp
ja
mov
push
adc
mov
pop
ds
fmull
jge
mov
mov
out
lods
fimull
cld
mov
pop
lods
stos
xor
xchg
add
and
or
call
shll
and
mov
pop
daa
mov
maskmovq
negl
mov
pop
sub
hlt
dec
nop
dec
ret
fcompl
fxch
pop
push
insl
je
stos
call
xchg
cmp
add
out
icebp
cmp
sub
cmp
shrl
mov
push
fsub
scas
outsb
lods
inc
mov
fdivrs
cs
jecxz
cwtl
repz
xchg
add
lcall
stc
xchg
cmp
mov
jnp
cwtl
jmp
mov
leave
sub
outsb
or
bound
lods
lods
xor
jne
dec
add
pop
push
or
xor
aaa
fnstenv
xorl
pop
pop
std
ret
jmp
addl
sub
cld
mov
fwait
jecxz
cltd
push
es
mov
rorl
aas
sub
or
aaa
xor
pop
je
jmp
xchg
movsl
jne
xchg
and
cmc
movsl
mov
jne
push
fucomp
rolb
in
jae
add
lds
lods
mov
push
jl
sub
xchg
jo
dec
in
stos
cmc
gs
push
cwtl
pop
mov
mov
scas
sbb
xor
in
sub
xchg
mov
stos
inc
sbb
add
or
push
sub
pop
iret
sub
mov
add
call
jp
orl
and
out
push
aad
add
aam
jns
xchg
and
into
mov
ret
dec
push
leave
ret
push
lahf
out
and
out
mov
sub
imul
in
loope
push
push
mov
mov
ja
ficomps
popf
ret
sub
jmp
dec
notl
bswap
adc
push
jge
push
xchg
pop
dec
icebp
pop
call
imul
test
das
push
arpl
out
mov
jbe
pop
andb
push
repz
cmp
fbstp
mov
mov
fnstcw
jns
bound
jecxz
push
xchg
or
jg
in
sub
push
pop
loop
xchg
sbb
push
shrb
mov
jp
mov
mov
sbb
pop
in
in
ret
jno
lcall
dec
in
pop
jne
popa
dec
adc
xchg
fs
sub
cmpsb
xchg
or
fcom
pop
rolb
or
lahf
hlt
push
pop
lret
xor
pop
ret
mov
and
sub
cmp
aas
andb
mov
mov
lods
inc
lea
push
xchg
adc
lret
mov
ljmp
fbld
test
sub
int
aad
sbb
rorl
xchg
fldt
inc
rcll
rolb
jns
rclb
popa
mov
aad
inc
cld
das
pop
fldcw
pop
aaa
cmpsb
dec
fadd
scas
fdivl
sbbl
rcll
in
loop
in
inc
push
push
in
test
cmc
jmp
add
out
and
daa
int3
adc
pop
seta
sbb
xchg
push
inc
shrl
in
jns
xchg
pop
push
sar
gs
inc
xchg
mov
add
std
lds
inc
mov
mov
arpl
es
stc
mov
xlat
fistpll
mov
mov
xchg
jmp
fistpl
add
sarb
pop
fnstenv
push
jmp
cmpsl
push
inc
or
sbb
stc
popf
ret
push
pop
insb
cltd
dec
or
push
mov
pushf
lahf
repnz
cmpsb
mov
inc
or
movsl
push
cmpsl
sub
inc
jl
cli
pop
xchg
adc
lahf
out
in
and
out
ret
popa
testl
adc
push
ror
adc
outsl
in
arpl
in
lods
jge
aas
xchg
push
push
adc
fimuls
jl
push
and
scas
mov
outsb
pop
js
jb
jns
mov
outsl
inc
pushf
jmp
inc
lret
pop
call
repz
idivl
pusha
faddl
test
mov
dec
jp
lea
hlt
and
pop
fwait
les
jl
xor
adc
mov
ret
dec
in
inc
mov
jae
mov
bound
fmuls
cwtl
xor
rcr
add
push
ds
and
xor
sub
imul
stos
ror
push
add
xchg
mov
xchg
into
push
mov
push
mov
mov
insb
scas
cmc
clc
iret
add
aam
or
pop
push
pop
mov
xor
test
cmp
scas
pop
test
push
ret
shl
xchg
sbb
in
sahf
sti
lcall
out
ss
lret
lret
pop
jbe
cmpsb
and
pusha
jecxz
testl
mov
and
in
test
hlt
in
mov
lahf
mov
out
cli
loop
fcmovu
pop
sbb
xchg
stos
add
xorb
cmp
or
into
or
push
movsb
in
lods
fistl
insl
adc
iret
add
inc
and
or
insb
into
xchg
hlt
popa
jb
jp
rol
lock
scas
sahf
int3
clc
dec
insb
mov
dec
lds
out
pop
int3
jno
aam
out
inc
mov
fistpl
lahf
cmp
mov
or
dec
push
jg
xchg
repnz
pop
outsl
or
cmp
aad
mov
jae
enter
mov
sarb
into
stos
in
pushf
add
inc
cltd
in
jecxz
jno
hlt
sub
fsubl
in
or
lock
popa
push
stos
popf
movsb
dec
testb
dec
mov
inc
jecxz
pusha
idiv
scas
lret
mov
cmp
lcall
push
fidivl
scas
sti
add
mov
in
sti
adc
mov
adc
lret
ret
jle
mov
sbb
or
pop
les
mov
scas
sahf
jmp
cmp
ret
push
lahf
inc
and
cmpsb
into
sub
lea
mov
pop
std
cli
mov
jmp
je
xlat
loop
pop
push
cmc
add
pop
addr16
out
cs
mov
mov
in
ljmp
js
rorl
pushf
mov
cli
fcoml
xor
nop
in
dec
xchg
in
cwtl
lcall
sbb
out
ds
jmp
lret
fcmove
in
fidivs
fdivl
push
mov
cmpsb
cmp
movsb
popa
xchg
test
cmp
into
test
dec
aam
xchg
pop
jno
dec
fwait
jmp
inc
repnz
mov
enter
loope
mov
push
rclb
mov
testl
scas
dec
or
lock
cli
stos
aaa
or
int
xor
xchg
in
or
jecxz
sahf
xlat
std
inc
mov
mov
test
rcl
lret
or
mov
mov
testb
mov
mov
adc
mov
adc
xor
out
shl
in
mov
dec
or
jle
cmp
jo
scas
int3
xlat
jl
test
std
sbb
mov
imul
test
cmpsb
mov
xor
cmp
in
mov
je
xlat
shr
cmpsb
jge
jmp
or
or
mov
and
or
fdivrl
mov
sahf
es
les
imul
sub
stc
dec
in
dec
push
call
cld
not
cmc
inc
data16
cmp
dec
std
ret
pop
mov
hlt
push
fdivrl
cld
imul
and
push
inc
mov
mov
cmp
push
cmp
mov
out
pop
sar
fsts
dec
jno
in
push
lcall
aad
jno
jmp
ret
int3
bound
mov
fcmovb
pop
mov
loope
mov
push
lds
jg
push
adc
mov
daa
pop
data16
lcall
ret
or
mov
sbb
addr16
aam
xlat
add
enter
popf
syscall
es
adc
js
dec
push
push
add
mov
andb
cli
mov
xor
xor
sarl
jge
lea
enter
adc
sbb
jecxz
arpl
jl
jmp
lock
imul
sarl
call
aaa
andb
mov
push
mov
push
int
pop
cli
into
fnstenv
and
add
flds
sbb
rorl
sub
or
mov
mov
mov
push
xchg
rorb
in
jmp
scas
jmp
sbb
jo
fldt
mov
xchg
pop
mov
add
push
mov
in
push
mov
int3
lea
loop
aaa
cli
in
and
add
popf
ficoms
into
jmp
dec
stos
fwait
xchg
loopne
in
mov
xor
mov
sbb
scas
dec
add
inc
push
scas
stc
lahf
lret
arpl
test
or
ret
cmpsb
mov
push
inc
jmp
fldlg2
pop
rcl
fwait
shlb
cmp
mov
push
les
js
and
inc
xchg
iret
pop
ljmp
push
mov
outsb
dec
dec
sarb
push
fisubrl
adc
xor
jne
aas
lret
mov
roll
mov
lea
sahf
or
insb
in
sub
jb
test
popf
jmp
enter
dec
aad
out
and
xchg
and
add
bswap
loope
inc
es
icebp
mov
rolb
sbb
lods
gs
xchg
xchg
lds
popa
dec
dec
xor
negl
adc
mov
push
mov
push
xchg
adcl
gs
mov
je
pop
mov
ficoml
xor
test
imul
ret
add
push
jmp
dec
mov
popf
int
mov
int
test
bound
ljmp
add
lret
test
data16
iret
jae
and
mov
dec
and
xor
sbb
mov
add
sub
jmp
test
aas
cmp
daa
pop
mov
mov
cli
sbb
mov
pop
les
hlt
das
sub
xchg
shlb
fbstp
mov
je
cltd
insl
mov
into
lahf
das
jp
lods
loope
dec
and
mov
cmc
in
mov
dec
sbb
mov
lret
popf
jb
jmp
jecxz
mov
inc
dec
adc
pop
or
repz
jno
xchg
aam
dec
fwait
mov
xchg
in
decb
inc
push
pop
sbb
dec
mov
push
mov
jns
mov
loop
cmp
or
sub
mov
sarl
and
fldenv
push
or
jnp
jo
lret
pop
out
xor
stos
sub
push
jecxz
imul
jo
xor
push
in
shlb
mov
out
sbb
loop
std
rorb
xor
decb
test
outsl
sbb
mov
hlt
lods
popf
fwait
sbb
sbb
and
iret
ljmp
insl
int3
push
pop
jmp
setns
in
adc
clc
or
mov
lds
cmpl
push
jae
sub
enter
in
xchg
mov
dec
add
cmp
repnz
outsl
mov
fbstp
xchg
mov
jns
int
jae
push
mov
mov
mov
lods
jmp
or
mov
pop
out
popf
pop
fisttpll
test
add
in
pop
add
nop
popa
add
sub
subl
std
lea
int
jae
repz
jg
cli
repz
cmovne
add
into
std
jb
rol
lahf
mov
mov
call
mov
or
mov
lret
movsl
lea
push
sbb
add
sti
jle
mov
ret
sub
push
int
sbb
push
sti
dec
cmovg
sbb
loope
iret
mov
fdivrp
jmp
xchg
add
dec
fcoms
cs
dec
pop
or
jmp
and
jno
dec
iret
jg
dec
sbb
ret
popf
cmc
stc
lret
sete
cmpsl
add
call
pop
outsl
in
mov
outsb
lock
pop
dec
mov
sbb
cld
mov
push
or
mov
ret
loope
scas
sbb
mov
lret
test
loop
mov
pop
ss
mov
mov
mov
ficomps
cmpsb
jns
int3
int
pop
faddp
rorl
in
lods
push
add
sbb
xor
nop
iret
push
test
loop
ja
lods
test
cs
add
sti
adc
aad
repz
pusha
sbb
add
mov
aam
scas
js
and
jmp
idivb
in
mov
out
sarb
mov
xchg
push
mov
jle
lret
mov
rcll
xchg
loopne
in
testl
xor
pop
cwtl
in
push
aas
aaa
or
ss
clc
mov
daa
in
arpl
jae
std
add
cwtl
lock
push
dec
incl
int
fstl
pop
mov
mov
mov
and
jp
mov
mov
and
in
jno
repz
int3
insb
add
into
sarl
sahf
cltd
pop
outsb
or
imul
rcrb
or
dec
push
test
xchg
sbbl
testb
mov
fildll
xchg
loop
gs
xor
hlt
cmp
rcrl
imul
stc
mov
aas
repnz
jecxz
dec
daa
out
sbb
bound
xchg
mov
mov
dec
das
repnz
xor
test
sti
fadd
mov
xchg
dec
ret
or
rcll
sub
lea
cli
jle
sbb
cmpsl
mov
dec
adc
icebp
int3
inc
mov
popf
ret
mov
jge
jecxz
negl
in
shrl
ret
push
mov
inc
or
push
cmpsl
test
cwtl
mov
add
out
mov
or
inc
ror
pop
gs
in
jae
mov
imul
push
add
aam
sbb
frstor
xor
fdivl
lds
or
lods
nop
add
fnsave
sub
cmpsb
mov
gs
dec
movsb
ja
lea
sub
adc
out
movsl
jp
or
int3
xchg
cmc
xor
mov
into
adc
mov
mov
mov
or
jle
lret
or
andb
mov
or
cmpsl
into
int
xchg
xlat
iret
ljmp
xchg
jge
lea
mov
into
mov
loopnew
mov
roll
dec
lds
in
or
and
push
loope
in
adc
sbb
add
pop
lock
mov
xor
add
outsl
mov
or
rorb
scas
cmpsl
push
iret
jnp
rcll
mov
sti
clc
jb
flds
xchg
add
out
outsl
repnz
lahf
push
mov
dec
dec
fstpt
enter
sbb
aam
push
aad
or
jnp
outsl
jmp
nop
ljmp
pushf
lcall
push
pop
sbb
repz
loop
and
sar
sbb
jmp
adc
repnz
test
sbb
in
mov
ss
lods
sahf
aad
sahf
test
jecxz
adc
mov
movsb
mov
xor
adcl
or
mov
jge
rorl
or
das
je
loop
xor
jnp
push
push
mov
mov
aad
mov
adc
lods
stos
mov
cld
sbb
push
mov
in
mov
mov
jbe
addl
testl
mov
mov
sbb
mov
mov
sub
sarb
add
xchg
movsl
mov
hlt
adc
xchg
or
inc
ss
mov
out
std
push
push
in
fucomp
aaa
pop
jge
cmp
dec
add
mov
push
mov
movsl
lds
lea
add
rclb
cmpsl
mov
lahf
cmp
mov
sub
mov
scas
ljmp
imul
push
push
cmp
ja
shrl
dec
out
mov
cld
pop
outsb
sti
frstor
sahf
rcl
xchg
push
adcl
sbb
mov
mov
jmp
in
stos
push
jne
sbb
icebp
cmc
adc
mov
push
shr
xor
xor
rorb
pushf
loopne
sti
arpl
mov
jge
or
xor
fistpll
popa
cmpsl
iret
and
xor
fbstp
mov
push
and
fmuls
fs
push
sub
xor
adc
xchg
fbld
mov
fimuls
loope
xchg
movsl
mov
into
movsl
addl
into
adc
shrb
adc
in
xor
sarb
rorb
test
mov
int
je
xor
ficompl
aad
adc
in
cmpsb
add
iret
mov
sub
bound
dec
add
lret
cmp
jge
aas
dec
movsb
cmc
loope
cmpsb
jae
test
mov
mov
call
add
test
aad
dec
push
repz
cmovo
jmp
inc
add
xorl
hlt
pop
sbb
clc
pop
es
in
and
add
push
jecxz
mov
pop
js
popf
push
pop
divl
xor
mov
xchg
jne
mov
cmp
xor
pop
cmp
sbb
and
adc
inc
mulb
push
jbe
les
or
popf
leave
or
cmp
or
icebp
xlat
sbb
xchg
popw
inc
iret
cmp
jle
lock
mov
cli
sahf
repz
ficoml
fmulp
adc
insl
add
cli
mov
and
cwtl
in
xor
int3
icebp
insb
add
mov
dec
movsl
xor
pop
push
inc
cmp
scas
enter
pop
fidivrs
cmp
idivl
sarl
inc
leave
cld
lret
addr16
aas
icebp
loope
fidivs
addr16
lock
ljmp
push
add
mov
sub
jmp
mov
iret
ljmp
adc
rolb
lods
insb
fadds
cmp
mov
lods
push
jbe
nop
push
hlt
popa
es
fdivrs
jno
inc
ljmp
pop
mov
inc
lock
push
pusha
pop
lahf
lret
fcmovnu
jp
mov
stos
xchg
push
dec
test
xor
or
mov
pop
aaa
popa
popf
or
sbb
jno
add
jnp
icebp
les
int3
xchg
xchg
push
notl
test
jecxz
faddl
popl
sbb
dec
push
mov
repnz
jo
xlat
fs
nop
adc
or
dec
mov
lods
lea
mov
lret
inc
sbb
jp
push
shlb
and
lahf
jno
fisubrl
jp
rorl
and
int3
mov
push
mov
and
repnz
cmp
mov
xlat
data16
imul
lea
push
loop
jmp
scas
rorl
add
bound
add
xor
ret
xor
ds
das
adc
mov
int3
lret
int
pop
adc
mov
mov
mov
sar
daa
pop
mov
and
mov
add
lea
xchg
stos
rcll
and
jmp
ljmp
mov
mov
mov
xchg
mov
ss
dec
adc
fisttpll
xchg
mov
repz
leave
movsl
popf
or
cwtl
mov
lods
jnp
fmull
aaa
in
xor
adc
into
cmpsl
xor
jno
xchg
push
jmp
mov
jnp
jno
cld
test
out
addr16
pop
out
les
add
insb
add
mov
cmp
dec
push
or
mov
jecxz
jbe
iret
mov
cmp
jae
hlt
mov
out
xor
leave
cmp
hlt
jno
rcrl
mov
mov
push
jns
pop
std
mov
add
sub
cltd
push
cmpsl
popw
mov
cmp
jb
xorb
test
push
jmp
lods
pop
in
rcrl
add
xchg
dec
push
mov
add
xor
in
dec
jl
mov
ret
push
lea
mov
mov
sti
inc
loope
or
ret
add
mov
dec
inc
mov
mov
aad
aas
cwtl
fmul
in
mov
push
clc
sbb
add
ljmp
es
cld
in
jecxz
rolb
add
lcall
fstpl
ret
xchg
mov
iret
xchg
push
jnp
rorl
sbb
test
cwtl
dec
xchg
repnz
mov
add
inc
mov
lds
int
mov
scas
mov
ja
jecxz
ret
cli
into
movsb
mov
or
in
pop
sbb
shll
lock
jo
out
pop
ret
jbe
in
push
dec
add
dec
stc
pop
or
aas
jnp
or
mov
jb
js
add
sbb
mov
xchg
ret
aad
mov
jp
je
lret
adc
out
leave
cmc
and
dec
cmc
rcrb
jmp
fildll
dec
jne
mov
out
int3
xchg
adc
mov
rolb
jb
push
add
hlt
jo
inc
inc
pop
jns
pop
int
test
jmp
fstps
push
or
jecxz
xor
dec
push
lret
test
in
sub
mov
dec
int
mov
sahf
mov
add
filds
sti
test
mov
stos
add
popf
xlat
add
rolb
mov
add
mov
jmp
xchg
jmp
shlb
mov
pop
add
xlat
or
push
aam
pop
fwait
push
stos
mov
add
mov
add
cmp
cmpsl
adc
lods
sbb
push
mov
jno
int3
sub
aam
dec
jmp
jnp
enter
or
push
aam
je
lods
in
shll
inc
mov
les
das
dec
gs
repnz
sahf
testl
scas
jnp
inc
xlat
xchg
lret
int3
adc
pop
xor
loop
sbb
movsb
repz
mov
aad
pop
fldenv
in
xor
ret
hlt
mov
shrl
or
lret
jae
out
jno
cmp
shr
or
shl
sysret
arpl
mov
nop
lds
mov
pop
mov
fcompl
movsb
mov
mov
xlat
mov
pop
push
scas
mov
sub
cmpsb
xchg
xor
mov
btc
xchg
dec
pop
push
or
les
adc
aad
mov
mov
int3
loopne
cwtl
loopne
fisubs
fdivr
mov
jo
mov
pop
and
fidivrs
fwait
orb
inc
mov
test
push
push
jg
adc
or
out
outsb
pop
shrb
adc
push
pop
jnp
inc
lret
jns
in
pop
xor
mov
in
xor
dec
stc
std
pop
fimuls
cld
repz
loope
lahf
jp
repnz
xor
dec
sbb
pushf
dec
lock
push
loopne
in
sbb
and
add
add
imul
cli
insb
cwtl
push
push
mov
das
ljmp
loopne
cmp
loop
aaa
fnsave
add
out
add
hlt
outsb
add
or
into
cmp
fwait
stc
mov
adc
jge
jge
lahf
leave
std
faddp
mov
mov
rolb
fwait
mov
or
outsb
or
jbe
daa
adc
repnz
push
and
in
fbld
xor
or
mov
xchg
adc
test
push
test
mov
cmc
enter
jns
adc
xor
sub
cmp
mov
out
nop
sub
dec
rol
inc
imulb
inc
ljmp
cmp
imul
sbb
fwait
ljmp
icebp
out
mov
sti
fstpl
clc
xchg
dec
cmp
push
jg
mov
iret
mov
pavgb
mov
push
int
aad
cmp
adcl
push
mov
iret
push
mov
mov
idiv
pop
push
mov
mov
mov
mov
jnp
mov
out
imul
int
adc
inc
jno
insl
outsl
sbb
lea
dec
cmp
add
lret
icebp
fdivr
in
sarl
jmp
add
push
mov
mov
sub
subw
jmp
add
mov
test
mov
js
lds
lret
sub
fists
cld
lock
cmp
adc
mov
or
ret
sti
mov
mov
int3
sahf
or
leave
push
xchg
aad
ja
fistpl
imul
sbb
push
in
lahf
push
jmp
dec
stos
movsl
mov
imul
dec
push
fsub
fisttpll
push
mov
rcrl
fcoml
ficoml
push
outsl
sub
sbb
mov
mov
hlt
mov
push
ss
pop
push
sti
or
xor
xor
mov
and
mov
add
sub
push
sbb
popf
ljmp
xchg
add
test
xchg
jp
add
push
push
inc
jge
ret
add
inc
jl
cmp
dec
sbb
popf
ss
punpcklbw
xor
or
cltd
arpl
push
mov
mov
inc
xchg
out
mov
push
out
lea
lods
jno
in
lahf
and
aas
or
scas
cs
xor
lahf
push
inc
aam
mov
mov
and
shll
fistl
mov
test
adc
in
std
push
iret
stos
clc
mov
cli
dec
adc
out
sub
mov
cli
push
stos
popa
rep
sbb
sub
sub
xor
shlb
hlt
loopne
in
cltd
loopne
or
shlb
adc
in
and
xchg
mov
mov
xor
daa
call
repnz
xchg
jle
and
dec
shl
adc
aaa
iret
sti
mov
out
cmp
xor
das
aaa
cmp
push
mov
insb
test
push
ja
or
rolb
jecxz
adc
hlt
mov
lods
mov
mov
outsl
mov
cmpsb
ficomps
subb
inc
push
cld
cmc
dec
mov
aad
push
lret
test
adc
inc
shrb
xchg
lods
sahf
loop
push
jmp
mov
sub
and
and
fiadds
mov
fiadds
mov
rolb
sub
mov
testb
and
xor
repnz
add
mov
jg
jl
jle
shll
xor
mov
xchg
test
cld
mov
pop
mov
insb
fistpll
sbb
data16
movl
add
sub
cmp
mov
pop
push
pushf
les
cmp
lods
loope
add
and
or
les
int
cmp
jmp
sbb
stos
loope
cli
dec
cmp
add
aad
adc
rcll
adc
mov
movsl
jp
arpl
repnz
mov
push
xchg
mov
out
cmc
jb
or
cwtl
aaa
push
sbb
scas
sbb
pop
negb
mov
inc
or
add
xacquire
jno
mov
pop
jmp
cmpsl
hlt
loope
int3
mov
repz
xchg
jp
inc
test
scas
or
cmp
and
mov
mov
cld
lock
std
xchg
rcr
loope
in
add
iret
shlb
aas
mov
mov
jp
inc
or
mov
push
into
jge
sbb
mov
or
imul
enter
add
inc
sbb
ret
jl
add
xchg
xor
mov
out
cld
adc
or
iret
cmpsb
mov
push
fsubs
lret
lea
les
nop
mov
dec
mov
sar
lret
cmpsl
repz
add
into
xchg
and
sub
mov
fmul
ret
pop
mov
les
cmpsl
cli
jns
jne
mov
mov
cmc
lret
lret
add
dec
fsubrs
outsl
ss
sbb
push
cmp
ret
mov
mov
inc
pop
cmp
mov
in
push
in
xchg
jecxz
out
cmp
sbb
jne
cmp
sbb
inc
mulb
sahf
adc
shll
shl
test
adc
or
cmp
sub
and
nop
fld
xchg
cs
sti
ret
daa
in
fdivrs
sub
push
int
enter
xchg
adc
stos
sahf
and
adc
jge
arpl
fcmove
sbb
jae
xchg
pop
cs
lret
xor
ds
daa
ljmp
mov
xor
xor
fstpt
push
sbb
lock
dec
mov
outsl
rclb
repz
ret
xchg
movsl
mov
or
cmp
cltd
add
sbb
dec
mov
int3
mov
lods
mov
add
sbb
mov
jb
inc
pop
xor
fstps
sar
enter
int3
inc
movsl
aaa
mov
jle
shr
popf
fsub
ja
idivb
aad
cmp
mov
push
out
mov
out
shll
les
bound
js
repnz
int
loop
lock
iret
and
push
scas
dec
pop
cmc
mov
fsubr
dec
and
repz
outsl
fimuls
xchg
pusha
fnstsw
or
enter
mov
adc
jmp
leave
cmp
sbb
inc
mov
idivl
insb
fdiv
in
shrb
mov
sbb
push
mov
into
roll
push
mov
rorb
xor
mov
pop
fstps
push
in
push
neg
sbb
call
fimull
data16
mov
adc
cwtl
or
fmuls
in
stc
pop
mov
inc
shl
addb
imul
iret
xor
mov
mov
shll
es
decb
xchg
jge
inc
inc
add
ljmp
mov
fdivs
lods
cmpsb
or
adc
ror
out
icebp
popa
outsb
pop
out
ret
mov
push
ljmp
pop
mov
enter
xchg
aaa
mov
xlat
mov
inc
out
push
lret
roll
clc
stos
in
or
ljmp
fsub
rcr
mov
addr16
mov
push
mov
or
dec
xchg
pushf
mov
sbb
mov
out
jns
gs
out
xchg
xchg
push
jns
cmp
pop
lods
enter
loop
repnz
inc
mov
mov
icebp
mov
and
iret
dec
xor
inc
jg
mov
adc
das
hlt
cld
jns
aas
xchg
ss
shlb
inc
jbe
lods
push
adc
push
adc
lret
cmp
cltd
adc
jmp
rcll
nop
ret
mov
mov
ret
ficoms
dec
dec
out
xor
jle
sbb
adc
ja
idivb
stc
arpl
mov
push
and
jne
dec
inc
sbb
inc
repnz
ror
sbb
adc
or
popf
xlat
out
inc
adc
shlb
dec
jge
daa
dec
idivb
call
adc
popf
ss
std
dec
mov
mov
es
mov
mov
mov
mov
push
lret
jns
ficoms
out
add
xor
mov
pop
add
cmp
adc
mov
popf
mov
pop
push
push
je
add
jbe
adc
and
fistl
cltd
decb
push
ss
sbb
pop
push
adc
cmp
clc
das
cmp
insl
imul
movsl
adc
int3
jmp
and
lahf
adc
pop
das
jp,pt
push
imul
leave
add
in
aam
xor
data16
sarl
rcl
jnp
rorl
sub
in
cmp
shll
call
pop
mov
mov
inc
and
pop
mov
mov
xchg
arpl
dec
jge
gs
popa
pop
dec
mov
cmovnp
leave
add
out
inc
js
cltd
push
ljmp
shlb
push
test
dec
mov
repnz
test
mov
cld
xor
lock
rol
sub
nop
in
fimull
mov
int
add
daa
into
stos
push
sti
or
pop
dec
cmp
jmp
sarb
in
jno
or
imul
insl
addb
jno
loopne
inc
add
add
shl
ss
lods
mov
jg
mov
mov
push
sub
cmp
push
push
cmp
scas
lds
idivl
in
js
inc
cltd
dec
in
fimull
mov
mov
or
cmpsb
lret
mov
sbb
fst
fildll
mov
into
mov
fidivrl
fsubrs
mov
xchg
cmc
mov
lahf
stc
cmp
xor
mov
out
add
jae
cs
fcmovne
push
cmc
push
lret
sbb
lock
sahf
rclb
orb
int3
dec
xor
or
pop
enter
lock
dec
enter
and
mov
add
js
jmp
sub
leave
jmp
aad
pop
or
test
jns
xchg
inc
cmp
jmp
push
psraw
push
cld
pop
scas
lods
adcb
dec
sbb
xchg
outsb
adc
shrl
stos
xor
dec
pop
lcall
into
mov
fdiv
icebp
inc
push
lds
cmpsl
loope
jnp
sbb
sbb
push
sub
pop
lcall
pop
int3
in
adc
pop
inc
mov
popf
and
jno
fistpl
or
jnp
test
sub
cli
sti
aaa
fwait
int3
cwtl
add
enter
sahf
subb
scas
mov
jp
aam
popa
icebp
outsb
jp
movb
pop
aam
sbb
loopne
lods
sbb
mov
scas
push
out
push
cld
shl
push
sbb
out
push
cltd
jo
shr
or
jne
xchg
xor
xchg
pop
xchg
mov
int
int3
cld
add
rclb
subl
dec
mov
mov
mov
add
ljmp
cmp
jg
mov
mov
push
or
add
hlt
xlat
and
dec
sbb
lret
movsb
pop
divb
test
stos
mov
push
mov
movsb
loop
push
adc
shll
or
icebp
js
adc
lods
sbb
xor
cmovle
loope
sbb
not
imul
cmp
lds
stos
xchg
pop
les
inc
stos
push
lods
stc
enter
xlat
lods
fimull
mov
push
test
push
push
aad
ljmp
pop
xor
shl
jbe
out
repz
xchg
jo
push
sbb
lret
mov
cmpsb
int
cwtl
or
jmp
cwtl
mov
lret
or
cmp
xchg
jo
pop
xor
add
pop
jl
aad
in
lahf
ret
orb
adc
into
jae
sbb
mul
sbb
cs
xorl
push
test
jbe
mov
and
mov
aaa
xchg
in
pop
and
push
aad
repnz
xchg
aam
mov
sbb
jae
aam
adc
adc
aad
into
shll
add
cmpsb
mov
xor
out
mov
movsl
mov
pop
in
cmp
sahf
add
lods
insl
les
push
push
mov
mov
testb
in
sbb
xor
popa
test
repz
add
mov
or
push
jo
loop
stos
ljmp
pop
addr16
sub
fsubp
repz
iret
jp
cmpsb
in
inc
mov
lds
into
mov
iret
in
sub
mov
sahf
mov
sarl
dec
cmp
xchg
push
enter
lret
mov
jmp
mov
lds
xchg
cld
dec
das
or
sub
aam
stos
push
js
mov
shlb
cmc
adc
imul
inc
jo
fnstcw
jle
test
xchg
arpl
xchg
xor
cwtl
xchg
adc
stc
push
aad
mov
push
rol
lea
push
out
mov
mov
or
jmp
push
sub
mov
or
inc
jnp
pop
cmpsb
repnz
in
lahf
in
ljmp
jg
mov
pop
popf
std
xor
xchg
fs
jg
enter
out
dec
fmull
arpl
mov
icebp
mov
pushf
scas
pop
jno
imul
adc
leave
ret
mov
cld
imul
lahf
loope
shlb
hlt
cwtl
fadd
adc
pop
in
xor
add
icebp
iret
dec
sbb
aas
insl
rcrb
fcom
nop
mov
cmp
sbb
pop
mov
lea
aad
cmp
adc
leave
push
jl
xchg
or
rcl
mov
adc
ret
mov
pushf
pop
cmp
cmc
repnz
inc
sbb
sbb
arpl
mov
out
mov
popa
or
xor
or
xor
cmp
sub
lahf
lret
mov
movsl
insl
add
loopne
cmpsb
loopne
push
pop
or
popf
js
mov
ljmp
cmpl
fs
sbb
push
mov
pop
mov
xor
leave
stos
mov
cwtl
imulb
cmp
jae
dec
subl
arpl
push
punpcklwd
adc
mov
ja
jmp
pusha
mov
xor
inc
cmp
pop
and
dec
je
adc
or
pop
lock
xchg
mov
jmp
hlt
mov
dec
ret
sbb
out
int
lock
icebp
cmp
jnp
data16
cli
jl
out
dec
mov
or
mov
leave
cmpsb
push
test
test
cmp
add
or
xor
dec
stos
mov
ljmp
sti
fcompl
mov
and
insb
sbb
sbb
cltd
sub
dec
out
scas
test
pop
clc
js
int
xchg
shll
jno
sahf
in
push
sub
and
pop
mov
fst
or
aaa
mov
push
lret
outsb
fdivl
cmc
mov
rcll
int3
mov
cs
mov
enter
sub
pop
aad
mov
loopne
mov
mov
into
cmpsl
iret
xchg
leave
xchg
jns
fs
xchg
test
sbb
inc
ljmp
or
cmc
stc
shl
jecxz
into
push
mov
and
sub
popa
int
mov
imul
push
lock
mov
mov
ljmp
fldt
mov
test
subl
sarb
sahf
add
and
push
das
lods
out
sbb
dec
popf
lods
xchg
sti
adc
xchg
mov
xchg
sub
mov
aad
mov
jns
sti
in
inc
sbb
mov
mov
adc
sub
pop
inc
into
aas
jns
pop
cltd
test
push
cltd
inc
lretw
std
xchg
adc
cmp
outsl
sahf
or
add
push
fcom
sbb
lea
jl
push
and
dec
push
repz
xchg
adc
lds
add
or
adc
or
out
in
push
stos
pushf
jne
ja
mov
dec
pop
test
add
xor
loop
ret
jp
lds
insl
sub
scas
adc
lods
mov
jmp
lret
mov
sbb
mov
roll
popf
and
mov
mov
jle
jmp
insl
push
les
shrl
iret
dec
outsl
jne
jno
add
or
sub
push
fwait
lahf
mov
adc
jo
mov
je
mov
jo
sti
xchg
lahf
cmp
mov
clc
cld
xchg
lods
mov
lahf
loopne
push
jl
aad
mov
rol
mov
insb
mov
adc
loop
jae
mov
stc
ret
clc
cmp
aam
cmp
mov
loop
jns
or
cwtl
pop
sbb
lcall
xchg
sahf
test
lret
leave
in
ljmp
out
mov
aam
in
cmpl
mov
in
mov
in
xchg
loopne
ja
xor
xor
loopne
mov
aaa
mov
ret
cli
cmp
addb
or
and
xchg
or
aam
in
cmpl
xchg
ds
lods
jne
inc
js
adc
push
lods
pushf
push
loopne
mov
aaa
mov
pop
pop
pop
ds
sub
bound
leave
sub
add
xchg
insl
out
inc
sbb
inc
in
cmpb
adc
add
and
jle
inc
and
mov
xchg
ja
inc
add
add
lret
adc
push
cltd
sahf
popf
adc
daa
jl
sarb
shl
push
mov
mov
add
sub
xchg
fistpl
fdiv
dec
mov
into
inc
fnstenv
das
inc
xchg
xor
sti
adc
icebp
neg
addr16
and
add
rorb
icebp
popf
pop
add
sub
stos
or
shll
or
sbb
testb
jbe
aas
and
mov
lret
hlt
popa
push
sub
and
fwait
push
decl
lahf
xchg
inc
lea
inc
ds
mov
into
mov
mov
pop
dec
movsb
ljmp
fiadds
arpl
pushf
lods
outsb
push
sbb
scas
adc
sbb
cmp
xchg
add
xlat
dec
shrb
dec
add
inc
cmpsb
xor
push
push
jns
add
mov
mov
or
sub
and
in
lret
lret
mov
inc
and
sbb
lahf
rolb
dec
sub
push
sub
pop
and
ljmp
sbb
lahf
out
or
scas
das
add
aas
sub
xchg
mov
mov
gs
add
or
cmp
xchg
jnp
outsb
add
addr16
sub
jbe
and
jo
mov
or
sbb
and
pop
mov
int
push
push
and
sbbl
lea
loopne
push
lcall
jmp
jp
sub
push
mov
add
sbb
lcall
jp
mov
test
or
jl
sub
js
and
and
sbb
in
or
pop
nop
adc
ret
ss
test
ss
jbe
xchg
sbb
mov
movl
xor
test
add
lds
stos
mov
add
lods
aam
inc
cli
jne
testb
mov
in
test
dec
xchg
add
lret
rcr
add
leave
loop
sbb
mov
clc
dec
mov
pushl
imul
shrb
cltd
jb
jl
cltd
ss
lahf
sbb
scas
incb
faddl
loopne
mov
aaa
mov
cmc
adc
push
iret
dec
push
insb
mov
mov
push
fsts
mov
or
in
mov
call
inc
mov
push
nop
jp
in
sub
fwait
or
add
popf
mov
jne
push
jno
daa
adc
dec
or
sbb
mov
in
out
push
push
stos
xchg
das
loopne
loope
stos
or
or
mov
pop
xlat
dec
std
mov
xor
push
in
sahf
xchg
and
lret
ss
and
clc
negl
sub
insb
mov
arpl
popl
pop
lahf
in
mov
mov
jo
xchg
sti
and
call
or
ret
pop
ret
into
lock
cmp
xchg
lods
out
or
sbb
and
leave
rep
movsb
rcrb
inc
push
nop
insl
jb
sbb
mov
and
sahf
add
out
inc
cmp
jb
and
pop
jno
jmp
add
push
xor
pushf
lods
sahf
std
dec
sbb
mov
out
jl
div
jle
das
mov
fnstcw
add
push
movsl
push
in
enter
or
mov
lds
leave
test
cmp
andl
mov
shl
cmpsl
icebp
imul
inc
push
mov
push
push
stos
xchg
ljmp
clc
repnz
fcomps
outsl
int
les
pop
rcrb
push
or
frstor
jle,pn
mov
jle
or
mov
test
scas
lods
shll
lods
and
outsl
or
adc
test
scas
lret
adc
in
fidivrs
js
aaa
ret
pop
stc
jb
shlb
pushf
outsb
aas
arpl
xor
iret
or
mov
outsl
jl
mov
hlt
mov
aaa
and
jne
int
adc
jge
mov
mov
data16
or
les
std
xchg
jecxz
jo
lods
and
push
sbb
bound
and
or
outsl
xor
jmp
shrl
fimuls
mov
xchg
sub
mov
lods
add
movsl
push
dec
daa
or
sub
aaa
and
jecxz
add
data16
rclb
jo
repz
scas
lds
lods
jbe
mov
ficompl
jno
mov
fs
ljmp
in
jmp
lret
in
xchg
clc
loop
jae
mov
fdivs
int
adc
pop
dec
sub
out
pop
push
jo
xchg
push
xchg
xor
xchg
nop
cwtl
testb
add
mov
ljmp
xchg
test
and
jnp
pop
sbbb
xlat
inc
mov
mov
sahf
pop
mov
ss
push
push
or
cmc
push
cmp
dec
clc
and
pop
fiaddl
or
jecxz
xor
jmp
loopne
mov
fsts
data16
insl
mov
sbb
lea
les
jp
add
loop
clc
push
movsb
out
js
test
insl
mov
pop
insl
shll
fisubrs
lret
mov
aad
cs
std
scas
jmp
lock
or
das
mov
push
pop
cmpsb
adc
imulb
movsl
mov
test
insb
cwtl
push
stos
ficomps
test
xchg
mov
andl
or
mov
mov
leave
or
jle
add
mov
les
outsb
sbb
sarl
addr16
int
daa
inc
adc
adc
dec
test
sahf
hlt
in
out
mov
rcl
cltd
cmp
pop
aam
inc
subl
test
mov
movsl
cmp
sbb
xor
and
inc
mov
push
sarl
add
mov
jae
arpl
sbbl
aas
dec
dec
je
test
cld
jp
adc
sub
data16
push
cli
mov
fwait
cmc
ror
fistl
mov
inc
sbb
into
sarl
cwtl
mov
aam
call
jno
jg
sub
std
or
lret
movsb
xchg
cmp
xor
mov
cld
sbb
add
or
jno
or
sbb
test
rorl
test
mov
or
mov
sub
and
fsubl
jle
push
nop
div
popf
js
fsubrs
adc
mov
aam
lret
add
ja
into
xor
mov
pop
aam
leave
js
mov
jg
jge
dec
mov
sub
mov
cmp
nop
inc
jmp
sub
lock
inc
mov
cmp
jl
inc
sahf
jmp
add
or
cmp
push
sub
lock
mov
cmp
or
out
xchg
rorl
int3
sub
insl
enter
xchg
repz
dec
add
outsb
fidivrl
mov
test
sub
push
adc
cmpsb
cli
and
inc
mov
inc
enter
data16
cmpsl
out
in
push
out
add
sar
call
sbb
inc
and
inc
sbb
outsl
loop
pxor
mov
out
jmp
cmc
xchg
aaa
sbb
push
loope
jmp
mov
pop
out
in
mov
mov
mov
lea
mov
fdivl
mov
cmp
cmp
lea
mov
mov
cld
xchg
xchg
jg
adc
jg
jle
inc
sub
aas
dec
add
xor
push
cmpsb
js
jbe
sbb
sub
jecxz
jae
mov
xchg
cmpsl
nop
jne
inc
scas
ljmp
out
and
pop
das
xor
mov
ds
ds
inc
inc
mov
pop
fs
inc
mov
fldt
shll
loop
aad
cli
sti
mov
inc
adc
int3
fisubs
ds
pusha
pop
addr16
rcr
inc
dec
faddl
add
mov
test
push
mov
nop
adc
div
les
mov
inc
outsl
or
rol
or
inc
stos
int3
movsb
mov
push
imul
xor
and
xor
mov
stc
cltd
xlat
repnz
in
mov
or
aad
outsb
les
popf
iret
or
push
shll
push
jno
jmp
lods
dec
iret
cmp
shr
xlat
shl
mov
adc
add
xor
dec
iret
in
mov
xchg
xchg
adc
pop
dec
rcl
mov
mov
or
je
cwtl
mov
cmp
ret
or
aaa
and
add
lret
jb
xlat
dec
in
icebp
mov
push
sub
movsl
push
or
repnz
stos
fstpl
xchg
mov
ljmp
cwtl
stc
mov
ret
cmp
lcall
test
jmp
dec
subl
push
pop
and
pmulhuw
xor
dec
jecxz,pn
xorb
jge
dec
fiadds
jo
fldl
and
dec
mov
scas
sub
jmp
jle
andb
and
gs
popf
dec
sarl
loopne
daa
movsb
push
pop
add
inc
fcmove
fwait
dec
pop
or
and
imul
shr
inc
leave
enter
xchg
pop
adc
je
jl
shll
fucomip
or
or
stos
sbb
dec
cmp
paddsb
decb
inc
sahf
ret
lret
xlat
inc
sbb
cwtl
shll
pop
ret
sub
ficoml
adc
imul
sahf
dec
pop
movsb
cli
inc
pusha
add
cmp
cmp
test
cmpsb
mov
or
xor
das
adc
add
addb
adc
dec
adc
sub
sub
ljmp
mov
mov
inc
adc
inc
mov
xor
nop
out
sub
arpl
jmp
sub
stc
inc
jmp
imul
ret
jle
ja
mov
ret
test
add
pop
lock
mov
pop
cmp
fisttpll
push
jg
pop
mov
int3
xchg
push
scas
pushf
jne
test
add
or
ljmp
pop
dec
adc
cld
lret
stos
and
jae
sbbb
int
jl,pt
mov
push
jecxz
in
rorl
nop
popf
mov
inc
mov
jno
or
je
pushf
loope
sti
push
shr
xchg
sar
push
xchg
shlb
xchg
fimuls
mov
loopne
mov
pop
in
jecxz
mov
jmp
pop
rol
ret
mov
dec
or
aad
hlt
jne
pop
cmp
test
cwtl
adc
or
fcompp
jmp
aad
cmp
enter
mov
and
mov
pushf
daa
pmaddwd
repz
gs
data16
push
test
dec
pmulhuw
xchg
and
jbe
in
out
jge
loop
and
mov
pop
insb
mov
dec
sub
xlat
jl
jecxz
ljmp
adc
stc
mov
xor
cmc
in
out
pop
aam
je
xor
out
out
nop
xor
out
adc
dec
subl
dec
push
int3
mov
xchg
in
mov
jge
or
add
movsl
ljmp
rcr
push
loopne
ffreep
in
and
insl
fcmove
cli
or
mov
cmp
push
mov
sti
pop
sub
fldt
mov
push
dec
fiadds
scas
xor
adc
adc
mov
movsb
je
shll
iret
mov
outsl
mov
push
jp
lock
and
call
ret
rcrb
xchg
push
test
mov
aaa
in
sbb
or
fcomip
repz
out
addr16
jmp
mov
jmp
ja
jo
cli
fimull
js
or
or
aad
jbe
cmc
repz
jl
xchg
pop
jnp
insl
sbb
push
mov
xor
pop
inc
cmc
or
pop
mov
mov
xor
loop
cwtl
add
jle
and
or
cs
inc
out
dec
fldt
je
sbb
push
loop
or
jnp
add
jnp
sub
call
xchg
out
nop
or
mov
scas
out
push
jae
inc
ss
push
scas
sub
sub
sub
aaa
xchg
or
lret
mov
mov
stos
sub
add
xor
pop
rcll
lahf
mov
aam
mov
fmuls
pop
and
in
push
add
fisubl
lea
mov
mov
push
jle
repnz
test
iret
xchg
jns
movsl
xlat
cmp
fucom
mov
xor
shrl
and
scas
les
std
fs
in
jb
ds
clc
sbb
jno
stos
aaa
cmp
mov
sbb
das
or
adc
aam
out
vmovd
mov
jl
sbb
jne
dec
or
arpl
push
jnp
xchg
push
mov
xchg
stos
sahf
ret
movsb
sub
mov
push
push
shr
cltd
add
xchg
rclb
out
cmpsb
insl
pop
push
mov
into
popf
loopne
push
sbb
scas
adc
sbb
pushf
popf
xchg
or
dec
xor
lahf
std
mov
dec
sbb
sub
int
psubusb
daa
jae
sub
fisttpl
dec
cwtl
xchg
stc
xchg
jle
loopne
and
hlt
dec
pop
mov
xlat
xor
xchg
mov
fdivs
popl
push
outsl
scas
movsb
dec
jle
push
push
scas
rclb
pop
xchg
int3
outsl
push
sti
mov
stos
daa
movsl
mov
push
jmp
mov
push
lds
mov
scas
das
or
push
stos
je
les
jle
je
inc
sub
jg
in
insb
dec
ljmp
push
mov
insb
pop
jno
jne
cmc
outsl
xchg
icebp
pop
jne
xchg
data16
enter
fldt
scas
cmpsl
jmp
int3
mov
into
call
loop
out
fisubrl
loopne
cmpsl
jbe
std
mov
mov
push
push
xlat
jae
mov
jbe
aam
jae
xchg
inc
jne
adc
xlat
ror
push
dec
sub
xor
push
enter
test
mov
or
loopw
addr16
stos
ss
imul
roll
push
test
sub
insl
pop
xchg
cwtl
mov
push
and
iret
mov
imul
xor
ja
repnz
mov
loope
jns
mov
mov
dec
stos
push
xchg
mov
xchg
mov
sub
jg
push
in
data16
cltd
shll
gs
cld
lods
sarl
and
lea
cmp
test
adc
imul
sahf
imul
in
xchg
inc
adc
repz
lods
ffree
and
flds
test
loopne
in
lock
adc
stos
loopne
inc
int
aad
cmpsb
lret
jo
push
aam
ljmp
ja
and
or
ds
icebp
repz
les
jmp
int
dec
jp
sub
jae
adc
mov
pop
mov
movsb
mov
shll
icebp
sbb
jbe
xlat
outsl
pop
insb
icebp
popl
xchg
mov
and
fidivs
jl
les
sti
popf
pop
or
in
aaa
xchg
jg
test
stos
jo
loope
shlb
imul
into
cmp
mov
adc
scas
mov
cmpsl
or
dec
notl
mov
in
cmp
icebp
jno
dec
add
das
clc
test
adc
inc
jno
inc
or
cmp
rorl
and
orb
inc
add
xchg
add
mov
dec
and
sbb
sti
rcll
add
fbstp
movsl
test
xor
xor
popf
clc
or
sbb
imul
sub
ficoml
loopne
push
fisttpl
adc
dec
pop
out
lea
mov
mov
inc
fs
test
xchg
std
dec
fnstcw
call
cmp
xchg
call
push
fimuls
sbbl
idiv
iret
repnz
inc
shll
mov
in
call
imul
jbe
cmpsl
lods
push
fcompl
mov
out
mov
cmp
hlt
in
fdivrl
sbb
leave
rorb
movsl
adc
dec
sub
xchg
sbb
xchg
jmp
xor
in
int
fistpl
pop
lcall
mov
roll
xchg
das
loope
shlb
lods
ret
dec
arpl
push
into
and
shrl
das
dec
pop
cmp
jmp
stos
aad
in
add
mov
add
mov
lds
shl
lahf
mov
dec
sbb
lret
jg
xchg
pextrw
inc
add
stos
push
push
or
mov
lods
hlt
out
cmc
outsb
imul
out
xchg
xor
mov
lods
out
xchg
ret
xchg
sub
mov
xor
in
cli
jp
xchg
cmp
jno
push
mov
lds
mov
lret
hlt
fwait
iret
or
push
dec
xchg
push
int
daa
xchg
stc
lock
jmp
sub
inc
fildl
mov
xchg
pop
mov
mov
mov
lret
adc
jmp
ret
pop
mov
insb
rorl
nop
or
fnstsw
mov
aas
orl
lret
lcall
mov
lret
sarl
mov
add
rorb
sub
rorb
jle
stos
loopne
lds
aad
loope
jle
ret
out
mov
int
add
pop
getsec
orb
adcb
cmc
add
inc
xor
in
push
in
inc
scas
test
mov
adc
xor
xchg
repz
xor
stos
nop
sub
cmp
xchg
jmp
fbld
push
xor
pop
pushf
xchg
ret
dec
stos
cmp
sub
inc
ljmp
call
adc
xorl
js
pop
cltd
mov
addb
popa
shlb
inc
jg
jg
xor
pop
je
push
xor
add
add
inc
mov
pop
test
jge
mov
dec
pop
popa
outsb
xlat
imul
xor
jg
sbbl
adc
sbb
movsl
data16
xchg
aad
flds
sbb
sbbb
mov
add
inc
pop
dec
les
mov
movsb
add
xor
sub
sahf
lahf
or
mov
or
cmp
cmpl
mov
mul
call
and
mov
insl
mov
push
pop
push
add
add
add
int
jge
or
cmpb
xchg
enter
ror
xchg
add
sbb
cld
or
sbb
jbe
mov
das
dec
aam
cli
bound
scas
sti
or
add
sub
sbb
jae
in
loope
movsb
jo
adc
cmp
imul
adc
in
push
insb
or
addr16
sbb
in
mov
mov
ja
rol
lret
inc
jmp
adc
sbb
dec
lahf
test
in
iret
lods
push
mov
pcmpgtw
mov
mov
xchg
sub
xor
ret
fsubs
jbe
mov
pop
cmp
shrb
popf
not
iret
cwtl
std
je
popf
xchg
jg
mov
dec
xchg
dec
jp
cmp
pop
mov
fs
jecxz
pushf
push
fnstenv
or
mov
movsl
inc
xchg
or
jl
xchg
xor
adc
inc
mov
adc
jge
cmpsb
pop
leave
xlat
nop
leave
dec
lds
ret
lahf
dec
ret
xchg
and
sub
mov
lret
out
or
cmp
mov
stos
and
out
imul
xchg
adc
sti
push
jl
xchg
push
test
push
insl
and
cmp
nop
cld
mov
in
cltd
mov
cmp
mov
mov
popf
int3
inc
or
sbb
mov
fwait
mov
mov
mov
into
fidivs
inc
add
les
xchg
scas
fcomps
mov
mov
add
in
inc
in
and
sbb
adc
aas
into
lods
mov
sbb
aam
out
adc
xchg
cmp
int3
in
gs
xchg
push
mov
sub
pop
mov
mov
push
xchg
jns
sub
sub
push
or
stos
mov
or
mov
lret
pushf
mov
mov
sti
popf
in
lock
arpl
stos
aaa
repz
jecxz
ret
sbbl
fstpl
stos
int3
lock
loop
cmc
push
xlat
imul
mov
stc
imul
mov
fmuls
cmp
jge
iret
sub
rclb
lds
insb
push
hlt
cmp
lods
int3
cmc
int3
stc
in
mov
filds
mov
call
fs
jne
fcmovu
sub
push
movsb
iret
orl
xlat
movsb
mov
jmp
out
add
je
jle
das
repz
xor
push
fdivr
ss
mov
lock
test
test
push
mov
stc
orb
iret
in
addr16
bswap
insl
call
ret
aam
push
lret
clc
sti
cltd
je
mov
xlat
lock
lcall
mov
lock
add
sub
push
out
dec
cmp
jbe
lret
sbb
jae
mov
cli
cmpsl
inc
and
lock
mov
mov
xchg
inc
ret
jo
sbb
jmp
std
lret
inc
xor
test
add
in
inc
out
imulb
leave
mov
dec
mov
push
pop
jg
repnz
jmp
ljmp
pop
sar
dec
or
sbb
xchg
push
push
filds
in
or
xchg
mov
shrb
mov
sbb
ss
mov
mov
xacquire
loope
in
cld
fnstcw
jecxz
mov
xor
and
gs
mov
not
sub
idivl
notl
js
add
repz
mov
push
das
mov
dec
pop
or
sbb
in
enter
out
mov
pop
dec
int3
repz
pop
sub
xchg
fwait
xchg
jle
mov
popl
push
xchg
lods
and
mov
pop
repz
cmp
or
push
mov
icebp
and
add
stc
stc
xlat
stos
jp
cmp
and
xchg
push
shll
pop
push
jns
jg
lret
call
int
jp
fimuls
xchg
hlt
inc
pushl
cltd
sbb
enter
in
xchg
push
mov
lods
mov
scas
movsb
aam
or
rol
sbb
xchg
test
and
xchg
pop
sbb
xor
cmpsb
and
clc
test
lock
in
stc
lcall
jl
lods
sub
or
mov
out
ficoml
in
and
rcrl
mov
xor
fildl
int
aas
xchg
sbb
fdivrl
lcall
aad
adc
leave
popf
or
test
enter
xor
xor
dec
frstor
arpl
aad
pop
inc
push
and
push
addr16
ja
jbe
rcl
mov
and
and
movl
push
cwtl
dec
jl
dec
or
push
shlb
repz
dec
mov
gs
pop
add
in
ss
lret
fcomps
jle
fcmovu
mov
or
push
dec
adc
mov
cwtl
or
scas
cmp
mov
push
enter
fisttpll
jmp
and
mov
imul
and
or
lea
les
jns
jns
cmc
fldln2
movl
sahf
repnz
mov
std
aas
les
aas
in
cmc
jl
dec
stos
in
rcl
lcall
xchg
out
xchg
sub
fmull
mov
loop
pop
and
loopne
add
or
je
adc
xchg
jge
stos
sbb
fdivrs
cli
mov
les
cmpsb
mov
adc
negl
pop
shl
inc
loopne
fcmovu
sti
ss
mov
mov
sti
out
xchg
cmc
call
sbb
outsb
pop
cwtl
sbb
and
insl
sbb
xchg
cmp
ljmp
nop
fbstp
fcomp
inc
jmp
dec
mov
std
push
pop
roll
xchg
aad
cmp
add
adcl
adc
or
iret
xlat
mov
cmp
das
push
cs
mov
and
aad
les
shll
faddp
enter
or
add
rorl
push
mov
adc
sbb
stos
add
loop
sbb
and
lcall
syscall
or
pop
lcall
sub
inc
push
push
cmpsl
sub
cmp
in
inc
adc
mov
mov
cpuid
mov
push
and
xchg
cli
xchg
iret
adc
shll
rol
cltd
test
bound
leave
test
lret
int3
adc
sbb
enter
mov
fs
js
cmp
popa
dec
dec
mov
or
fwait
js
push
or
cmpsb
inc
lds
dec
sub
add
je
jmp
mov
out
scas
cmp
sbb
in
or
dec
enter
cmp
pop
cmp
lods
xchg
mov
fidivrs
ljmp
dec
mov
inc
call
add
popf
out
cld
lret
sbb
mov
or
mov
loop
push
xor
inc
in
in
xlat
xchg
sbb
xor
in
push
sbbl
push
mov
loop
xchg
hlt
cmc
xchg
lods
cmpsl
repnz
xorl
jmp
cmpsl
dec
lret
cltd
iret
push
mov
mov
cmpsb
mov
cltd
push
jge
xorl
jns
jne
xor
lret
test
lret
xor
jmp
out
xchg
rcr
mov
sbb
in
out
lret
int3
xchg
orb
cmp
movsb
stos
jg
lret
sbb
and
ss
mov
mov
xchg
fs
adc
push
test
pop
xor
mov
std
mov
repnz
jbe
dec
add
stc
outsb
mov
out
sti
shl
mov
push
movsl
sub
pop
scas
pop
mov
sbb
mov
cmp
push
push
sarl
xchg
gs
or
and
imul
int3
jns
fstl
jbe
mov
push
std
mov
mov
daa
shl
out
cmp
mov
insb
movsl
mov
fadds
rclb
jne
test
jae
aaa
sub
inc
push
stos
in
dec
in
out
stos
jmp
xor
js
inc
adc
ljmp
pop
adc
jno
inc
jecxz
xchg
dec
push
int3
adc
jno
add
test
popa
int
xchg
loopne
iret
xchg
loop
cmc
mov
inc
stc
mov
in
add
mov
add
ret
inc
push
sub
push
ret
add
shrl
popf
mov
int
jns
lds
lret
dec
daa
jbe
test
cltd
xchg
out
add
in
xor
cmp
push
jbe
fiaddl
jns
xor
dec
and
push
in
cmp
mov
cli
pop
and
clc
stc
mov
add
push
es
add
rorb
ds
xchg
sbb
xor
or
jecxz
xchg
rcl
ljmp
add
in
dec
addl
xlat
push
xchg
andl
iret
stc
inc
call
cmpsl
and
or
push
lods
pop
mov
cli
jno
cmp
mov
jge
sbb
scas
sbb
int
sub
pop
jo
cmova
std
mov
out
cmpl
jmp
and
int
add
push
mov
fsubrs
push
into
outsl
cmp
cs
add
std
push
sub
pop
in
lock
sarl
lret
mov
mov
inc
aad
fldcw
mov
outsb
xchg
les
jae
mov
jb
jns
jmp
dec
popa
inc
add
int3
jp
mov
fsubl
mov
xor
xchg
xorb
in
fmulp
sbb
lret
shll
mov
pop
stos
into
push
lret
les
into
mov
addr16
and
lret
cmp
test
ljmp
cmpsb
je
mov
or
jecxz
pop
sahf
dec
cmpsl
fs
mov
scas
cmp
adc
jb
ljmp
jno
cld
mov
rolb
mov
testl
jbe
add
and
aaa
inc
aad
adc
or
ja
idiv
ret
and
loope
mov
mov
rorl
int3
int3
fs
clc
dec
cmp
loope
enter
leave
add
call
aam
in
mov
add
mov
rcl
shll
fists
adc
mov
push
xchg
in
jge
or
lock
cmp
cld
rcrb
add
or
lret
lds
xchg
push
push
ss
jle
out
dec
push
shrl
mov
lret
xor
shrl
mov
icebp
cltd
cli
lods
lds
std
dec
pop
popa
xchg
rcr
icebp
cmpsl
outsb
mov
cmpsl
in
mov
rcr
mov
push
mov
in
inc
fincstp
or
and
pushf
mov
sahf
lds
mov
pop
loopne
push
test
mov
xchg
js
loop,pt
loopne
repz
fcmovb
push
out
fistl
push
les
mov
jle
fldcw
les
call
lods
in
inc
mov
ffree
cld
call
test
test
enter
leave
dec
fldenv
scas
mov
pop
adcb
leave
ljmp
xchg
mov
dec
lret
ficomps
push
sub
push
xor
mov
jae
mov
mov
shll
xchg
cmp
loopne
or
jge
leave
cmc
sub
icebp
pop
mov
or
cmp
fsts
ror
test
or
push
frstor
call
lods
mov
pop
cmpsl
adc
jge
aas
mov
scas
movsl
hlt
std
movsb
or
les
xor
hlt
call
jle
mov
push
insb
out
call
subb
and
dec
jge
push
jmp
mov
shlb
repnz
jge
jecxz
subl
mov
dec
scas
imulb
mov
pop
into
xor
icebp
in
shlb
les
sbb
mov
loope
pop
inc
mov
les
movsb
fcompl
sbb
add
jecxz
test
call
mov
arpl
pop
icebp
push
stos
or
lods
in
add
pop
lea
ret
stos
sbb
lds
in
ret
ss
mov
xchg
mov
cmp
xor
jne
aad
and
arpl
xchg
outsl
xchg
stos
sbb
xchg
push
outsb
shrb
pop
jle
idivb
das
rcr
stos
mov
int3
pop
int
mov
dec
xor
aaa
adcb
inc
ret
xor
shr
mov
mov
sub
dec
jmp
nop
hlt
shrb
dec
andl
fucomp
fdivs
paddusb
in
shr
mov
cmc
out
xor
dec
loop
jle
into
lea
lea
in
add
ret
jb
repnz
cmp
movsb
mov
mov
enter
xor
jp
les
mov
and
aam
jno
scas
jmp
sbb
mov
das
mov
xlat
stc
sub
adc
mov
jecxz
daa
mov
out
ret
cmp
dec
push
and
xor
loope
test
mov
adc
or
xchg
jno
inc
daa
lods
mov
fdivrl
pop
jecxz
push
loope
stc
loop
movsb
pop
out
loope
push
int
push
inc
inc
xchg
jl
ja
popa
xchg
gs
imul
pop
inc
sub
xchg
bnd
sbb
sub
fmul
cmp
aad
aaa
dec
or
rolb
nop
pusha
add
jmp
pushf
cmp
aad
icebp
inc
mov
dec
xchg
mov
push
into
movsb
loope
in
mov
les
fistl
jl
cmp
imul
add
call
mov
test
mov
iret
adc
cmp
push
icebp
adc
filds
and
inc
mov
mov
dec
cmp
fbstp
and
int
iret
add
inc
jge
enter
shr
push
pop
or
push
shrb
mov
stos
sub
pop
bound
jb
into
add
xchg
ret
out
mov
xchg
mov
inc
mov
add
test
call
mov
pop
and
add
out
std
mov
mov
mov
push
pop
pop
cmp
pop
les
lret
test
mov
orl
pop
xchg
xchg
stc
aam
mulb
push
xchg
ljmp
push
push
xor
insl
push
push
mov
cwtl
stos
call
nop
orl
call
iret
test
sbb
cmp
daa
mov
xchg
jnp
mov
add
xor
mov
mov
addl
cbtw
add
xchg
and
nop
iret
mov
mov
gs
lods
dec
test
hlt
sahf
movsb
sbb
sub
add
adc
lods
ror
push
aad
mov
mov
repnz
add
jnp
push
mov
xchg
xchg
negl
mov
sub
popf
inc
cmp
mov
shr
and
sub
adc
fistps
jecxz
push
xor
add
inc
dec
clc
test
out
icebp
mov
inc
testb
mov
jp
or
or
insb
mov
pop
test
iret
inc
or
std
mov
std
cld
push
rol
fdivrl
in
pop
xchg
test
enter
xor
fsubr
les
and
cmc
fldcw
gs
add
inc
out
stc
sub
add
ss
sbb
loopne
sbb
xor
lret
mov
xor
mov
dec
aad
cmc
arpl
mov
sub
stos
xchg
push
out
iret
enter
xchg
movsl
sbb
add
and
dec
cmp
arpl
dec
push
sub
xor
xchg
cmp
in
push
mov
inc
fs
mov
in
push
rcrb
push
orb
ss
push
add
jo
cs
push
xor
bound
dec
cld
aam
jmp
test
mov
std
dec
mov
inc
in
push
dec
jp
mov
cmpl
mov
push
addr16
dec
iret
icebp
cmc
int
sti
sbb
jno
push
ljmp
sub
push
and
pop
or
ds
xlat
dec
gs
ret
in
lret
cmp
cs
adc
jb
lcall
xchg
sbb
lret
mov
mov
and
ljmp
cmp
fidivs
add
lret
stos
fstp
jbe
ret
ret
enter
mulb
mov
nop
std
clc
in
lods
mov
iret
lret
sub
push
mov
cs
push
xchg
cmp
leave
int3
dec
mov
mov
jge
in
rcrl
leave
rclb
loopne
in
clc
fldt
pop
cmc
or
enter
sti
mov
je
mov
mov
mov
mov
enter
or
int
rcll
loop
jbe
mov
shl
jns
mov
lret
xlat
jmp
mov
jle
jge
cmp
xchg
mov
movsl
or
and
mov
fwait
test
test
lea
dec
pushf
fldl
jae
xor
ljmp
mov
mov
sbb
xchg
mov
push
cmp
call
push
aas
cli
shll
lods
js
ds
dec
mov
mov
test
leave
sub
ds
cmpl
shlb
into
mov
xorl
dec
hlt
les
es
shrb
test
into
stc
lret
add
int3
sub
inc
cmp
adc
movsb
pop
add
mov
mov
xchg
xchg
je
cmp
fucompp
sub
sbb
ret
xchg
lock
or
add
inc
dec
xchg
nop
xor
shrb
inc
in
stos
loope
xor
ret
roll
jp
push
sbb
clc
cmp
std
sti
cmpsl
jnp
mov
jne
push
aam
adc
mov
cmp
pop
pop
lahf
mov
xor
xor
pushf
push
mov
roll
fidivs
push
jg
mov
jl
mov
cwtl
fs
test
sbb
jp
repnz
sbb
cmp
outsb
lods
cmpsb
cltd
clc
xchg
loope
ja
cltd
mov
pop
and
int3
jmp
mov
lods
add
je
mov
daa
cmpsl
sbb
iret
in
inc
sub
or
sar
mov
xor
dec
or
mov
dec
imul
add
shr
ret
sar
sbb
stos
cmc
push
popa
mov
and
pop
adc
loope
sbb
jl
incl
popf
lea
dec
pop
cmc
je
push
testb
pop
cmp
insb
mov
inc
jnp
aam
das
stos
cmc
testl
pushf
std
jb
mov
repz
push
enter
das
call
xor
insb
cmp
clc
xchg
push
mov
call
cli
xor
or
sub
rcrl
jl
shll
les
and
add
into
aad
int
push
outsl
shrb
mov
arpl
cs
dec
xchg
in
js
adc
push
aam
iret
jnp
rorb
movsb
push
fisubl
mov
push
lock
repz
repz
add
sub
scas
pop
mov
fnstenv
fwait
add
jnp
sub
aas
pusha
and
frstor
dec
decb
into
out
sub
testl
aad
loop
fs
flds
out
cmpsb
mov
jp
jl
add
mov
xorl
xchg
mov
inc
sbb
ljmp
mov
daa
fnstsw
xlat
push
std
daa
jmp
das
cmp
mov
cmp
and
xor
idivl
push
pushf
mov
cs
sarl
sub
inc
dec
pusha
jbe
arpl
pop
lret
popa
jp
fstl
std
mov
in
dec
adc
lods
clc
mov
xor
jge
incb
inc
push
sti
sbb
fcmove
dec
mov
cmp
sbb
out
and
out
mov
mov
or
out
lods
aas
jp
in
or
lcall
das
push
fwait
pushf
cmc
int
jo
popa
jo
inc
mov
sbb
ja
push
pusha
subb
fldenv
aam
ret
dec
pop
orl
jno
aad
mov
fists
stc
dec
add
lret
sahf
lret
sub
xchg
rcl
jno
test
mov
xor
lret
data16
mov
pop
enter
repnz
iret
shrl
xlat
jne
loopne
fwait
loop
mov
ret
inc
in
jo
lds
push
mov
mov
mov
xchg
scas
pop
and
add
aas
xchg
cmp
or
call
lahf
test
mov
ss
test
sarb
sub
fbstp
int
data16
cs
lret
sub
push
imul
mov
push
jbe
ljmp
ljmp
add
pusha
push
stc
or
flds
inc
std
dec
cmp
bnd
add
push
mov
adc
xlat
aam
addl
test
call
in
and
push
xchg
jo
jae
jnp
xor
mov
xchg
popa
jno
xor
je
call
aaa
adc
mov
fmulp
dec
xchg
and
and
outsl
mov
jle
ret
mov
adc
sahf
movsl
test
dec
addb
sbb
movsl
sub
test
lahf
jne
frstor
inc
ss
rcr
lds
jmp
lods
int3
pop
push
adc
int
icebp
sahf
lds
lds
insb
notb
jle
mov
and
mov
mov
std
push
inc
xor
mov
ja
loop
adc
push
out
lock
mov
dec
xchg
cmp
jns
sub
push
jmp
call
inc
std
xchg
lds
nop
out
or
scas
jle
push
lods
pop
xchg
mov
pop
mov
movsl
jnp
imul
shlb
rcrl
repz
jge
in
repnz
repnz
nop
mov
jmp
or
mov
jns
mov
out
test
xchg
rcrb
push
jmp
push
jg
dec
xchg
add
mov
fucomp
inc
insl
fucomp
jge
rcll
cvtdq2ps
ret
push
cli
add
xchg
cld
int
test
call
lods
inc
data16
ret
data16
fwait
mov
xor
inc
sub
in
jns
int
push
and
aad
data16
out
pop
cmp
add
jp
or
idivl
cmpsl
scas
cmp
pop
gs
mov
adc
mov
ds
aas
cmp
xor
rcr
pop
fistps
stc
out
aas
xorb
cs
cmp
fcoml
push
lods
movsb
lret
insl
int3
push
call
mov
fidivl
sbb
outsb
and
lock
std
imul
push
test
inc
test
leave
ljmp
adc
lods
jl
hlt
mov
mov
sub
adc
sbb
mov
lahf
mov
jae
sub
mov
xor
mov
cmpsb
pop
je
xchg
mov
pop
test
xchg
cli
lret
rorb
jne
movsb
insb
jo
sub
jmp
adc
je
cld
fcmovnbe
pop
int
shlb
bound
daa
mov
inc
movsb
push
repz
inc
mov
jb
sti
test
cs
popf
stc
xor
pushf
into
xor
cli
lods
rorb
cmp
dec
inc
loop
jb
add
mov
adc
imul
aam
pop
cmpsl
lahf
cmp
pop
mov
mov
push
sti
push
or
pop
gs
cmp
fsubrp
mov
popf
pop
sub
ljmp
cmp
xor
fwait
addb
jo
inc
mov
fists
ss
xchg
mov
mov
stos
mov
pop
ds
xchg
jbe
gs
and
sub
cmp
aam
bound
inc
mov
stos
push
rorb
push
push
btr
push
push
out
adc
repnz
lds
sub
stc
call
pop
idivb
cmp
out
sbb
and
gs
pop
lret
adc
mov
sbb
xchg
xor
sbb
in
xchg
lcall
xor
push
cmp
out
std
push
call
lock
jg
xlat
out
sahf
repnz
xchg
addr16
dec
jo
movsb
lods
or
adc
or
sbb
ss
js
addr16
push
mov
mov
fstpt
dec
fadds
fistpl
fdivp
hlt
in
sbb
push
or
movsb
fistpll
jbe
push
mov
mov
fwait
mul
popa
or
stc
test
loopne
mov
inc
push
adc
lret
rol
xor
faddp
insb
or
mov
out
push
lods
jbe
mov
mov
jo
xlat
insb
ss
insb
mov
test
or
out
adcl
in
fdivs
sub
inc
mov
mov
xchg
cmp
add
or
lea
ljmp
aaa
pop
shll
pop
jbe
cmp
xchg
push
inc
sub
lcall
or
xchg
mov
mov
scas
sbb
aam
not
sti
inc
popa
rolb
int3
repnz
add
bound
pusha
repz
out
add
nop
xchg
repz
fxch
mov
cltd
dec
add
ds
and
pushf
ss
push
sub
adc
in
jg
and
xor
sbb
xor
jae
lcall
and
pop
cmpsb
sub
push
jecxz
fs
fsubl
rcl
sbb
and
xor
jb
addr16
add
sbb
mov
lods
push
pushf
push
outsb
mov
imul
lcall
jbe
and
lea
sbbl
shrb
inc
and
cmpsl
stc
xchg
mov
pop
xor
mov
test
testl
xchg
neg
jle
xlat
rcll
stos
mov
fwait
sbb
cmpsb
cmp
dec
repz
fwait
add
dec
dec
ffreep
lea
dec
decb
mov
movsl
or
push
push
jb
daa
cs
ss
xchg
cli
sbb
mov
sbb
mov
ficompl
jbe
insl
les
mov
mov
push
mov
popa
fwait
jp
jg
adcl
aam
cltd
in
jne
xchg
sub
add
adc
ret
push
xchg
xorl
mov
jge
rclb
negb
inc
in
insl
notrack
cs
arpl
orb
inc
int3
dec
dec
xchg
inc
inc
fildl
clc
or
lea
lret
int
jmp
sarb
pushf
aas
xchg
in
xchg
aam
rorb
lcall
mov
mov
leave
xchg
mov
pop
adc
mulb
cmp
fst
push
ljmp
imul
aam
sti
lret
sbb
subl
imul
test
movsb
mov
nop
stc
adc
xchg
mov
dec
mov
nop
leave
or
pop
call
imulb
jno
inc
pushf
mov
sub
jl
push
fxtract
andl
pusha
lods
into
xor
mov
or
mov
mov
xchg
add
jmp
cld
xor
adc
jnp
lods
push
jg
sbbb
jnp
loop
inc
mov
mov
xlat
std
repnz
inc
aaa
iret
test
rcrl
nop/reserved
xor
fmull
sbb
mov
inc
or
mov
jl
rclb
pop
call
push
test
popf
xchg
xor
subl
cwtl
or
mov
shrl
ret
xor
inc
mov
fnstcw
fcompl
loope
xlat
lods
mov
or
xor
fdivrs
gs
inc
popa
addr16
pop
and
scas
mov
add
movsl
jmp
sarb
andl
jo
ret
pusha
pop
in
dec
ds
dec
and
jl
xor
mov
jge
lret
mov
int3
repz
pop
mov
sbb
dec
fldt
xor
mov
lock
inc
outsb
rclb
ss
movsb
or
add
sti
push
inc
jecxz
lcall
pop
pop
cld
mov
jl
movsl
sahf
arpl
out
dec
add
fldl
mov
sti
insb
adc
loope
xorl
lds
int3
jne
std
cmp
bound
pop
pop
in
or
jle
xchg
inc
stos
mov
push
mov
xor
xchg
ret
outsb
rol
jo
ret
xor
mov
out
ret
sbb
pop
fadd
sarb
xchg
sahf
inc
test
pusha
push
push
push
and
fcomps
jns
sti
xchg
hlt
sahf
or
icebp
adc
mov
adc
in
jle
xchg
add
fadds
daa
test
lahf
and
xchg
rorb
int
ja
jmp
sbb
push
lret
test
inc
xlat
mov
xchg
test
sahf
rolb
add
xor
push
or
xlat
loop
rolb
pop
out
call
fiadds
das
cwtl
add
loop
cmp
ficoml
pop
rorb
mov
or
scas
pusha
ret
daa
pop
adcl
lret
mov
xchg
stos
mov
push
mov
shlb
jmp
adc
push
and
divb
out
xchg
mov
rcr
xor
adc
lea
lret
lahf
xchg
push
push
ss
push
shlb
mov
sti
cltd
xor
aaa
xor
loopne
lods
xor
hlt
nop
push
mov
pop
push
in
loop
int
jle
imulb
ja
inc
push
mov
jmp
mov
je
int
outsb
lahf
or
scas
mov
push
push
mov
pop
lock
notl
loope
jge
xor
xlat
add
mov
je
dec
jnp
lods
xchg
lods
mov
in
int3
jle
rcr
cmpsb
movsl
mov
shl
stos
je
sub
das
xor
add
imul
loope
xor
cmp
dec
mov
jae
pop
out
cmpsb
push
popa
mov
push
jecxz
mov
out
out
cltd
sarl
cmp
test
xchg
jns
ret
lret
xchg
or
hlt
add
pop
mov
subb
popf
sub
sbb
in
hlt
jb
cmp
sbb
bnd
stc
imulb
loop
or
mov
jge
push
adc
jne
fsub
pop
xchg
adc
ljmp
ret
mov
dec
mov
mov
aad
mov
imul
negb
imul
mov
pushf
leave
xchg
test
mov
rolb
xor
divl
mov
scas
jl
inc
int
and
and
lods
scas
je
xor
jns
mov
mov
aad
pop
jb
into
addl
int
sahf
aas
call
into
jae
je
jne
push
add
jmp
adc
xchg
in
aam
dec
cmc
or
cltd
dec
sahf
jno
lods
mov
or
or
insl
mov
dec
addb
mov
lods
mov
sub
push
jb
leave
mov
sub
sub
add
repnz
push
popa
sarl
jnp
jae
sub
lret
adc
sahf
pop
lret
cmp
idiv
divl
pop
ljmp
inc
popf
and
enter
mov
xor
mov
dec
movsb
popa
inc
fwait
xor
stc
inc
ret
inc
stos
jecxz
adcl
test
sbb
cmp
xchg
in
in
sbb
rcll
ret
inc
call
repz
std
push
jne
mov
js
xor
ljmp
aas
push
sbb
inc
insl
mulb
cli
dec
jns
add
rolb
hlt
mov
sbbl
mov
xchg
cs
sbb
mov
mov
push
jge
mov
shrb
int3
jae
inc
iret
xchg
cmp
jge
shlb
stos
bound
push
jb
enter
or
decl
xlat
sahf
icebp
adc
dec
mov
push
pusha
cmp
and
cli
sub
sbb
cmpsb
jge
mov
loop
sub
jns
sbb
mov
lock
cwtl
cld
fmuls
out
imul
repnz
stos
test
mov
les
cmc
loope
sti
out
xchg
xor
pop
fld
iret
jp
push
and
sbb
pop
cmp
lret
gs
aad
sbb
lret
repz
push
jnp
xchg
out
aas
pushf
mov
fwait
movsb
push
inc
jge
faddp
sbb
popa
push
lret
mov
daa
shlb
ffreep
mov
mul
hlt
jge
push
pop
xchg
dec
aam
jno
std
or
add
out
in
xchg
inc
in
ficomps
jo
adc
out
adc
xchg
repnz
cmpl
xchg
xor
or
pop
insl
fwait
aam
jg
cmc
ljmp
sti
mov
jle
or
dec
andl
dec
test
or
jmp
and
cltd
adcb
pop
jge
in
stos
push
stc
sbb
aaa
cmc
dec
pop
adc
jecxz
insl
out
or
add
shlb
mov
mov
out
sub
and
jae
add
add
sar
mov
push
in
sbb
iret
inc
cmpsb
ljmp
js
shlb
popa
dec
push
mov
sahf
sbb
jl
sub
xchg
dec
aad
loop
mov
or
dec
not
leave
bound
jecxz
int
add
gs
ret
sbb
jle
daa
xchg
push
nop
div
mov
pop
inc
loop
mov
movsb
rcll
mov
icebp
push
mov
inc
lret
mov
mov
adc
stc
mov
xchg
ret
imul
add
and
mov
xor
jo
movsl
and
mov
pop
data16
ss
push
push
xchg
int3
inc
std
pop
rclb
sahf
shlb
insb
lret
repz
jnp
mov
shlb
mov
cli
lahf
inc
push
into
xorl
fnstcw
ds
mov
mov
std
jmp
in
cwtl
mov
repnz
push
int
arpl
outsl
push
dec
popf
pop
dec
shr
jnp
mov
pop
sbb
jb
aad
in
mov
movsl
adc
adc
dec
shlb
lidtl
arpl
mov
scas
movsb
xor
pop
mov
or
fimuls
xchg
mov
int
sub
or
lock
cltd
ficompl
xchg
imul
std
jne
in
sub
mov
xor
fists
xchg
outsl
es
adc
mov
or
add
lahf
inc
rolb
sti
popf
mov
fmull
outsb
pop
inc
xchg
or
test
gs
pop
scas
sub
cltd
cmp
inc
mov
fisttps
mov
repz
dec
adc
scas
lret
outsl
arpl
add
ja
or
gs
sbb
pop
mov
push
scas
and
sbb
sbb
push
faddl
lods
scas
add
fadd
jge
popa
data16
sub
jae
xor
lret
arpl
or
jmp
lret
xor
js
mov
push
das
pop
inc
mov
pop
out
push
lods
or
mov
repz
mov
cmpsb
jge
or
leave
xlat
enter
mov
cmp
cmpsb
outsl
cmp
stos
mov
dec
mov
jae
or
ljmp
fdivrs
call
outsl
lret
test
adc
cmpsb
and
push
push
pop
cwtl
or
xchg
mov
into
out
jb
fstpl
sbb
pop
mov
ds
lds
pushf
rorb
mov
nop
rolb
mov
jle,pt
lret
mov
xchg
stos
decb
call
les
xchg
xchg
sti
mov
sub
orb
inc
out
mov
loopne,pt
ljmp
cld
fisttpll
or
adc
jmp
jb
lahf
adc
jl
jl
fdiv
mov
pushf
mulb
dec
repz
add
stc
packsswb
fmulp
inc
jl
xor
dec
repnz
pop
ss
aad
push
pop
mov
repz
add
jae
ret
ss
mov
sub
inc
add
mov
mov
mov
jecxz
hlt
sub
jp
aam
arpl
filds
xlat
xlat
push
mov
or
stos
pop
cltd
fstpl
adc
lods
cmc
cmp
incl
adc
ds
into
es
lods
cs
xchg
adcl
lods
mov
mov
inc
push
mov
inc
cmp
aas
call
dec
outsb
inc
sub
mov
dec
cmp
rcrb
adc
add
sbb
mov
loope
int
jno
les
pop
stos
aam
lods
mov
rcrl
pushf
jle
dec
lret
shr
push
mov
push
push
jae
in
push
add
and
xchg
sub
pop
mov
push
and
mov
frstpm(287
loopne
jg
push
ljmp
ret
mov
jno
fmuls
cmp
cmp
cmovge
pop
mov
ss
pusha
dec
hlt
inc
test
mov
add
addb
scas
and
in
mov
jge
insl
jmp
scas
pop
fisttpl
mov
aad
fidivs
lods
xor
dec
mov
hlt
lea
xchg
fimuls
test
xchg
sbb
movsl
adc
aam
mov
outsl
add
lcall
pop
lock
rcrb
lret
data16
lahf
lock
adc
mov
addl
mov
lds
lods
jmp
dec
int3
clc
call
lock
sbb
dec
sub
dec
mov
out
sub
lods
mov
dec
jns
jl
pop
mov
mov
mov
imul
cmp
sti
xchg
mov
call
hlt
lcall
lds
std
jns
int3
dec
cmp
repnz
xchg
add
lods
xchg
fnstenv
fcmovnb
sti
mov
sub
jns
mov
push
lcall
idivb
mov
lea
ffree
push
je
jmp
mov
aaa
dec
xchg
cmp
in
or
loopne
fadd
or
mov
ret
mov
jmp
scas
fistl
std
add
cld
roll
aas
fs
mov
lret
xchg
popf
sub
lea
fsub
pop
pop
mov
push
add
sbb
or
cmp
mov
sbbl
clc
xchg
sub
stos
sti
jg
int
aas
mov
add
push
adc
mov
hlt
mov
ret
andb
int3
out
xchg
fs
push
cmpsl
xchg
xchg
enter
loopne
pop
push
loopne
sbb
insl
mov
cmpl
popa
sti
jecxz
mov
ror
rorl
mov
jle
xchg
lods
pop
fldenv
or
ret
fcoms
xchg
push
adcb
or
cld
push
and
fsub
or
les
cli
mov
cli
xor
mov
aam
cmp
pop
fistpll
pop
mov
in
std
add
lods
sub
shlb
sub
cli
mov
sub
and
insl
sub
adc
stc
mov
in
xchg
xchg
das
inc
test
into
cmp
clc
stos
bound
xchg
push
push
sbb
into
int
pop
out
movsb
sub
ficoml
cmpsb
les
stc
call
fsubrs
jmp
add
or
jnp
bound
mov
xlat
shr
lds
cmp
dec
dec
int
push
mov
sbb
frstor
adc
or
mov
dec
push
and
cmc
xor
rcl
mov
inc
in
int
jno
mov
mov
sahf
mov
jne
xlat
cmp
out
movsl
aam
orb
add
mov
jmp
movsb
mov
xchg
sbb
mov
mov
push
jnp
pop
out
cmp
test
push
shrl
mov
mov
push
inc
ret
decb
mov
into
cli
cmp
test
enter
mov
pop
push
lret
cmpb
rcrl
mov
jns
sahf
ror
lds
mov
mov
jl
mov
dec
sub
jmp
and
inc
hlt
mov
mov
mov
xchg
enter
xlat
cmpsl
popa
push
adc
int
cwtl
jge
push
rclb
or
jmp
ljmp
hlt
test
inc
mulb
or
imul
cmpsb
dec
call
ds
push
test
mov
mov
pop
test
lea
dec
jg
cmpsb
int
mov
shl
cli
dec
aad
mov
cmp
into
push
repnz
lds
jb
insb
pop
loop
mov
jno
adcb
xchg
cli
repnz
icebp
dec
pop
push
sbb
cmpsl
jg
out
jb
sub
or
sub
aam
inc
in
sbb
cmp
pushf
ds
test
push
pop
adc
push
push
repnz
in
fisubl
mov
nop
push
mov
adc
out
flds
cmpsl
cmp
mov
test
push
enter
lods
push
in
or
pop
movzwl
repz
jl
lods
sbb
sub
in
icebp
daa
addb
xchg
sti
and
mov
sub
mov
cmp
push
push
push
sub
call
pop
lods
lahf
out
xlat
or
xchg
or
sbb
insl
xorl
outsb
dec
jge
dec
imul
lret
fwait
cmpsb
int3
mov
mov
into
shl
lock
inc
cmp
jo
fcmovnb
int
add
insb
mov
pop
iret
sub
call
hlt
addr16
adc
mov
in
or
pop
data16
sub
xchg
int
mov
sarb
pop
das
mov
pusha
xchg
adc
sbbb
xor
fstl
push
add
sub
int
xor
leave
adc
imul
or
fstpt
insb
pop
loop
sahf
push
mov
cmpsl
mov
ret
xor
ljmp
repz
test
leave
cli
push
ret
or
cli
push
mov
sub
mov
add
cld
aam
jnp
lcall
pop
and
mov
enter
loopne
out
xchg
leave
push
in
aas
jns
mov
add
call
and
xlat
cmpsb
decb
insb
in
xor
cld
add
das
xor
push
leave
iret
sbb
stos
mov
mov
je
stos
mov
sahf
dec
fpatan
mov
sub
stos
out
lret
cmp
sbb
stc
mov
jle
cmp
int
divl
sbb
stos
cmpsl
or
push
and
and
inc
add
mov
int3
xchg
xchg
push
movsb
lcall
xchg
insl
lcall
push
addb
adc
rorl
push
mov
cld
stc
test
in
mov
or
pop
scas
les
nop
les
test
loopne
in
sbb
in
data16
push
ret
xchg
cmpsl
inc
sbb
jns
and
and
inc
clc
jge
dec
dec
push
aas
scas
pop
xor
outsl
mov
aad
pusha
inc
adc
cltd
or
mov
sti
aaa
jns
inc
or
sti
ds
les
rolb
and
decb
sarl
imulb
push
push
sbb
out
sbb
cmc
adc
fs
dec
in
loopne
cli
fldenv
rcl
and
sbb
jle
rorb
ljmp
xchg
mov
std
mov
daa
iret
fdivl
mov
fdivrs
cmp
sub
xchg
xorb
aam
pop
in
fldenv
mov
ja
pmulhuw
xchg
arpl
push
clc
repz
mov
mov
aas
jae
pop
mov
sub
jp
cmpb
or
push
mov
in
nop
les
sahf
mov
jnp
xchg
mov
leave
mov
xor
popf
lret
fsts
inc
sub
jge
and
mov
repz
pushf
or
or
ret
imul
and
ljmp
dec
out
nop
loope
pop
rcl
lea
cmpxchg
in
mov
clc
test
out
loop
fs
int
xchg
fwait
or
or
inc
cmp
ljmp
roll
dec
xchg
je
pop
sbb
mov
ljmp
cvtps2pd
dec
cmp
jmp
shl
jo
inc
insb
mov
cmc
das
jo
out
mov
mov
pop
rcll
add
dec
dec
loop
or
adc
js
mov
popa
mov
and
mov
insb
mov
sub
mov
std
sbb
fucom
mov
lcall
jge
push
es
ret
inc
sarl
scas
mov
bound
out
rcrl
je
cltd
or
mov
popf
into
sub
aad
adc
fsubs
jmp
in
jb
cmp
xor
imul
cmp
jbe
pop
arpl
jo
fldenv
jg
add
test
adc
icebp
into
sub
push
fnstsw
imul
sbb
and
inc
inc
out
int
or
aaa
les
pop
cmp
mov
int
cmp
sahf
shl
add
push
push
lock
sub
fisttpll
lds
popfw
push
addb
mov
movsl
mov
hlt
mov
out
je
jb
dec
movsb
sbb
stc
sarl
and
sti
jecxz
push
cmp
push
nop
mov
push
cs
pusha
adc
push
sub
xor
popa
test
call
pop
in
mov
fidivrs
mov
mov
jae
push
xchg
dec
cld
pop
pop
pop
mov
dec
dec
or
sbb
push
out
jecxz
and
rcl
mov
sub
out
out
cmp
ss
mov
or
mov
cmpsb
xlat
in
ficomps
add
xchg
decb
fdiv
cld
std
adc
push
push
movsl
movsb
push
jmp
dec
lds
adcb
lods
jae
sub
sub
outsb
fidivs
loope
aad
lcall
clc
cli
leave
pop
mov
or
mov
jb
rorb
ss
mov
sti
sbb
pop
cmp
retw
test
sub
ret
jo
mov
loopne
xchg
dec
pusha
bound
lods
test
mov
loope
inc
cmpsb
add
pop
jns
lret
xor
push
pop
xchg
mov
loopne
imul
lahf
pop
mov
mov
out
cmp
idivb
or
lret
dec
lods
sbb
sbb
js
sub
ljmp
sub
push
out
jmp
loop
mov
adc
scas
jg
arpl
repz
jnp
push
add
cmpsb
jno
sbbb
fsubs
in
aam
xor
jnp
sub
dec
scas
in
iret
xor
mov
push
lock
fistpll
or
mov
lret
sti
pop
mov
jmp
or
cmpsl
rcll
mov
and
js
lea
in
call
es
or
rcrb
jbe
insl
int3
dec
xlat
je
scas
push
fs
call
out
fsubrl
push
dec
js
mov
shl
or
loop
jo
ja
imull
cmpl
mov
in
mov
push
cmp
push
or
mov
jo
repz
inc
push
ret
in
pushf
jg
into
inc
arpl
fadds
mov
xchg
test
add
mov
in
add
cltd
fidivrs
adc
stos
repnz
mov
cwtl
cmp
cwtl
add
cmpl
pop
or
dec
adcb
dec
fmuls
pop
jno
rclb
cmp
mov
pop
cltd
push
push
mov
loop
nop
inc
int
push
fdiv
iret
iret
call
jge
fnsave
or
mov
xor
rclb
xchg
test
mov
xchg
pop
jle
sub
adc
fidivrs
shr
mov
cmpsb
push
add
mov
add
das
fldl
ret
mov
inc
pop
or
or
cli
xor
and
daa
cli
mov
jo
pop
jmp
mov
negb
mov
xchg
lds
push
jb
insl
push
pop
xchg
mov
or
pusha
lds
outsl
sub
hlt
mov
jb
dec
mov
xchg
loopne
sub
adc
mov
pushw
repz
sbb
lds
movsl
shrl
fsubp
fmuls
xchg
push
inc
sarb
mov
andl
in
mov
mov
inc
or
subb
and
dec
jns
xor
loopne
subb
sub
or
jmp
loopne
jbe
push
xor
pop
shll
xor
or
aad
push
in
xor
ss
mov
sbb
xchg
jge
add
mov
pop
rcrl
out
sbb
or
fcmove
mov
sti
mov
ret
pop
js
jle
mov
decl
cld
jp
or
mov
jmp
iret
push
into
popf
mov
and
fcoml
ret
xchg
cmpsb
sbb
or
lods
push
dec
pop
insl
cmp
and
push
jbe
xor
pop
in
lret
mov
orb
lods
dec
add
movsb
xor
fwait
call
loop
add
fistpl
and
xor
add
lock
lds
mov
cld
dec
push
mov
insb
lods
cmp
jg
xlat
insl
int3
cmp
daa
mov
insl
in
dec
lds
mov
dec
mov
pop
and
mov
ss
repz
mov
mov
jg
dec
lcall
pop
es
xor
sub
rcrb
xor
test
stos
call
jl
sub
scas
test
adc
popa
mov
push
repz
jmp
repz
cli
jnp
adc
push
jecxz
fdivrs
push
or
pop
cmp
jbe
push
pop
fwait
jge
sub
cmp
sub
loopne
lods
mov
pop
inc
rcr
jl
in
and
ret
push
outsb
stos
mov
loope
mov
xor
dec
or
int3
std
lds
xchg
into
sbb
test
pop
jg
push
int3
das
mov
pop
ficoms
mov
ficomps
jl
cmpsb
xchg
sbb
insb
or
pop
lahf
imull
add
push
push
and
mov
pusha
das
sub
scas
lcall
jge
lods
test
inc
cltd
xchg
jno
test
inc
mov
dec
mov
lahf
lret
jmp
fdiv
fidivs
and
daa
insb
pop
lods
push
jmp
gs
cmp
test
sub
mov
mov
jo
inc
les
loop
pop
cmc
and
int
mov
mov
cmp
call
and
xlat
jb
jnp
adcb
mov
lea
inc
jl
add
es
or
aas
outsb
shlb
sti
in
push
loopne
mov
or
xor
fsubr
xchg
test
jbe
incl
subb
dec
dec
fsubrl
add
push
fisttps
mov
xchg
scas
icebp
mov
lds
icebp
test
filds
cs
ja
test
std
jns
mov
filds
inc
jbe
and
mov
in
dec
mov
fisttpll
out
out
lds
addr16
inc
or
mov
pop
scas
mov
mov
scas
lret
bound
mov
mov
sub
lods
xlat
movswl
mov
mov
shl
fucomp
sub
gs
mov
pop
xor
adc
jge
dec
mov
mov
lds
adc
xchg
inc
mov
fldl
dec
sub
cmp
mov
sbb
or
mov
ret
imul
sti
fstp
mov
xchg
sbb
sbb
adc
xchg
sbb
mov
fimull
mov
jbe
and
mov
push
xchg
push
cmp
js
add
fimuls
mov
test
jle
mov
mov
std
fdivs
rclb
out
rorb
fcomi
jns
mov
wrmsr
mov
xchg
or
add
clc
out
or
into
sti
xor
or
sbb
aam
imul
cmpsb
leave
das
jbe
dec
int3
jbe
pop
pop
mov
mov
cli
sub
cmpsb
fs
jge
lods
jmp
fcom
enter
mov
jno
fwait
add
cltd
shrl
lods
ror
mov
xchg
movsb
and
dec
cmp
mov
fmuls
and
mov
test
or
enter
adc
data16
int
jmp
lock
dec
or
dec
pop
and
push
stc
test
insl
xor
repz
and
lret
fwait
int3
jb
cmp
out
xchg
mov
push
nop
in
mov
xor
pop
repz
rorb
addr16
sbb
dec
shlb
or
mov
lods
lods
shll
mov
repnz
lret
outsl
dec
inc
and
mov
and
fmul
xchg
call
fcmovne
jmp
sub
and
xchg
je
cmp
fstp
mov
test
mov
repnz
aad
and
fidivrs
cwtl
pop
mov
mov
sti
sub
and
mov
sub
mov
xor
out
cmp
mov
add
xchg
pop
add
call
in
shrb
add
mov
lock
shlb
lcall
lcall
repz
dec
jmp
outsl
pop
movsb
pop
daa
jg
jae
test
dec
sub
call
cmp
add
mov
shll
sti
mov
push
pop
sub
push
imul
aad
fucom
and
pop
lock
dec
pop
xchg
jmp
ror
stos
push
into
mov
in
adc
cmp
add
jo
push
pop
pop
cmpsb
cmp
pop
push
mov
pop
lods
rorl
sub
fdivrl
cld
lahf
or
negb
fdiv
cmp
adc
push
lcall
sbb
pop
and
lcall
or
fiadds
fwait
add
insl
sarl
das
in
adc
and
ret
or
aas
and
leave
or
and
xor
into
lahf
fcmovne
adc
or
cli
daa
xor
push
add
xor
call
mov
inc
jnp
or
dec
rorb
out
dec
enter
jecxz
xor
shrb
leave
mov
sbb
cmc
mov
jg
icebp
xor
push
aad
ljmp
mov
add
inc
mov
and
jne
std
jle
inc
add
ss
cli
xor
jno
call
fimull
int3
scas
stos
and
popf
pop
jno
mov
mov
mov
mov
jl
mov
incb
add
mov
sbb
jp
mov
rcll
mov
dec
dec
jp
lods
mov
lret
sbb
andl
pop
out
and
cwtl
push
push
fisubs
dec
cmp
inc
insb
ljmp
jle
movb
push
inc
dec
pop
out
fyl2xp1
scas
mov
jb
sbb
hlt
add
jp
aaa
add
icebp
dec
fwait
lds
and
inc
lret
out
int3
pop
or
cli
xchg
pop
ljmp
inc
ret
sbb
iret
std
rolb
ljmp
dec
lret
addl
inc
push
pop
cmpsl
stc
sahf
or
bnd
in
jg
js
push
jle
jae
call
mov
cmp
shlb
lods
lods
bound
mov
subb
inc
sbb
add
xchg
cwtl
pop
fs
mov
jae
test
xchg
mov
in
sub
rorb
cmpsb
jp
inc
xchg
push
mov
in
test
dec
add
movsb
push
lret
pop
inc
add
fbstp
movsb
jno
xchg
jnp
sub
ror
bound
sarb
push
push
dec
or
out
in
mov
mov
popa
adc
fnsave
mov
inc
fstpl
icebp
mov
cld
dec
leave
stos
in
test
lret
lcall
xchg
add
shrb
add
jbe
push
mov
in
xchg
lahf
push
aas
adc
mov
jecxz
mov
popf
movsl
lds
loope
hlt
jle
xchg
and
jnp
mov
jp
sub
push
jne
xchg
adc
sub
ja
push
lds
scas
push
add
mov
mov
js
dec
orl
jle
out
loopne
cmp
les
mov
or
cmp
cmp
ds
cmp
push
leave
dec
ljmp
dec
sbb
dec
in
cmpb
adc
add
mov
push
dec
lods
jle
push
dec
jl
push
pushf
jp
push
mov
aaa
mov
daa
pop
fs
in
mov
daa
sbb
mov
push
into
test
cmp
arpl
mov
shrl
xchg
cmpsb
xor
imul
fsubrp
mov
fmul
mov
leave
nop
mov
flds
inc
and
mov
aad
cmp
push
and
stos
inc
push
outsb
sbb
orl
ljmp
sbb
jne
jae
mov
jo
data16
sbb
dec
fnstcw
pop
or
enter
mov
enter
aad
xor
push
mov
nop
notb
xor
fmull
xchg
daa
xor
ja
adc
add
les
mov
scas
and
lods
xchg
shlb
xchg
scas
into
ret
xchg
inc
jnp
aaa
pop
sbb
dec
xchg
shrl
xchg
stos
icebp
mov
and
or
push
sbb
cmp
mov
xabort
aad
pop
inc
xchg
stc
cmp
sub
cmp
xor
push
cli
ret
mov
mov
add
mov
cli
icebp
rcl
lret
adc
ljmp
shl
ret
fbstp
dec
pop
std
lret
mov
or
sbb
lods
or
clc
jmp
or
test
cmp
push
out
pop
cmc
jle
push
xor
pop
test
aam
push
int
jg
ret
ds
pushf
pop
or
add
das
fbld
lahf
subb
xchg
sbb
ficoms
pop
pop
push
xor
daa
push
loope
iret
lcall
sbb
mov
cmp
in
xlat
orps
mov
sub
fsubp
int
push
enter
int
mov
pop
mov
cmp
pop
jnp
mov
jg
pop
inc
sub
adc
movsl
push
dec
sub
xorb
fsts
mov
sub
cmpsb
sub
mov
or
fisubl
es
fmuls
push
mov
out
fsts
ss
cld
and
scas
in
pop
mov
lret
adc
loope
mov
psrld
mov
xlat
lock
dec
cmpsb
cmp
int
scas
stc
or
jge
jbe
and
inc
push
inc
cli
jne
xchg
lahf
jmp
mov
dec
pop
mov
adc
sti
outsb
xchg
shll
out
xor
out
adc
push
mov
adc
sti
aad
ret
enter
data16
xchg
adc
lods
jl
mov
hlt
lods
bound
push
lock
ficomps
fidivl
testl
xchg
mov
cmp
in
xchg
push
popf
cld
xchg
imul
sub
push
dec
ss
cld
rolb
dec
sarb
xchg
jno
xchg
sub
mov
inc
mov
aaa
insl
xchg
lods
xlat
xchg
add
add
mov
lods
test
xchg
fcoms
jle
in
push
fistpll
adc
jns
sub
cmpsb
fwait
popl
stos
cmp
ljmp
adc
loope
testl
adc
fidivs
adc
daa
cwtl
or
dec
xor
in
cld
jno
jl
sub
inc
sub
in
testl
sub
stos
xchg
sub
sti
cmp
jmp
adc
int3
cli
lret
inc
xor
stos
or
movsl
mov
rorb
sti
mov
icebp
stos
int3
cwtl
mov
adc
add
or
lret
js
mov
gs
enter
rorb
ret
mov
stos
aam
orb
mov
pop
pop
aas
int3
les
or
fnstenv
inc
and
in
dec
fisttpll
sahf
mov
mov
or
jg
lcall
fs
xlat
cs
out
fs
cltd
insb
insl
pop
push
mov
popf
stos
or
shlb
popa
xor
in
cmp
add
mov
push
jnp
mov
js
movsb
cmpsl
add
mov
movsl
jb
in
fidivl
and
test
insb
jge
lahf
or
adc
jp
cmp
or
push
sub
cmp
stc
adc
cwtl
into
sbb
out
pusha
pop
test
ds
sbb
mov
int
dec
cmp
xchg
xchg
dec
or
fcmovne
in
adc
mov
jg
loopne
push
xchg
lea
popf
inc
sti
push
xchg
mov
adc
movb
bnd
cmp
add
mov
out
xor
andb
sub
repnz
dec
rorb
aaa
or
fisttpll
inc
and
into
add
adc
popa
arpl
dec
inc
fcmovbe
dec
test
test
pop
adc
mov
aas
fwait
clc
jnp
xor
add
lret
and
or
adc
pop
mov
mov
test
add
mov
mov
int3
jge
push
sub
rcll
mov
lock
pop
divl
mov
and
movsl
popa
fisttpll
xchg
lret
icebp
jge
xor
mov
lret
cli
stos
xor
sbb
stos
or
or
pushf
jns
leave
lods
push
cwtl
or
nop
mov
hlt
mov
repz
arpl
lea
mov
rcrb
sahf
loop
dec
fbld
mov
or
sub
bound
loopne
es
pop
jbe
jns
out
int3
out
cmc
les
std
int
mov
xor
rcrl
or
add
xor
add
clc
sbb
cs
jo
lods
sar
sahf
xor
sub
scas
jne
aam
add
jge
pop
ds
imul
in
imul
imul
jnp
aad
fisttpl
testb
pop
ljmp
jbe
jae
stc
pop
mov
fistps
out
pop
xor
add
iret
mov
test
xchg
add
ljmp
cmpsb
cld
or
leave
push
pop
push
mov
jae
xchg
xor
jl
test
call
ror
cmc
xor
loope
dec
push
xchg
and
je
mov
push
pop
les
jo
jle
test
or
add
add
sbbb
movsb
out
dec
inc
insb
bound
imul
loop
or
loop
mov
cltd
sbb
jno
and
mov
data16
fdivl
xchg
sub
pop
cmp
add
aaa
inc
jl
pop
mov
dec
or
in
push
fsubl
int
test
cltd
hlt
int3
lahf
test
xchg
mov
cmp
ljmp
stc
ljmp
jb
mov
js
ret
and
push
mov
aam
loop
ja
cmpsb
xor
lret
scas
or
xor
or
ret
je
mov
movsl
dec
aas
jle
aas
lret
mov
or
lock
setne
cmp
or
cli
stc
shr
xchg
aam
loope
cs
mov
addb
mov
cmpl
enter
test
leave
or
push
add
xor
mov
mov
out
popf
add
or
pusha
ret
xchg
pop
repnz
mov
mov
insb
inc
pop
mov
or
and
insl
cltd
call
xrelease
pop
pop
ror
imul
mov
mov
adc
test
lods
cmpsl
push
dec
push
stc
jle
inc
imul
mov
adc
sbb
jmp
jmp
iret
fld
rolb
pop
mov
outsl
mov
repnz
shr
jo
rorl
nop
or
add
or
push
testb
out
xchg
lcall
in
dec
shl
mov
or
mov
pop
jnp
pop
insl
in
addl
push
inc
push
mov
mov
lret
dec
aam
xor
mov
repnz
or
push
orl
outsb
sub
jae
or
pop
sbb
jo
sbb
loop
int3
add
inc
int
addr16
or
imul
ljmp
dec
dec
push
fsubs
push
mov
jb
dec
mov
mov
mov
fnstcw
lret
push
into
movsl
xor
dec
icebp
add
les
sarl
mov
add
test
stos
retw
sbb
fldln2
fldcw
pop
ficoml
dec
dec
cmp
push
cmp
out
jo
or
push
aam
jnp
out
inc
add
addr16
shlb
xchg
xchg
xchg
pop
push
dec
or
push
js
mov
rclb
xchg
stc
pusha
arpl
dec
pop
inc
sub
stos
inc
inc
push
push
lret
add
mov
out
and
sahf
sbb
das
mov
std
popf
sahf
stos
into
cmp
push
or
cmp
pop
fsubrs
lcall
jno
je
mov
test
or
rorb
cmp
mov
lods
pusha
cmpb
mov
into
fadds
das
int
out
inc
js
sbb
push
fmulp
cmp
xor
jle
sar
push
dec
inc
shlb
and
mov
out
in
push
cmp
lea
jbe
and
add
addb
mov
test
add
push
and
rolb
or
sub
or
xchg
aas
adc
adc
push
jg
in
mov
xor
mov
aam
lea
adc
add
xor
jle
mov
xchg
inc
push
aad
mov
rorl
pop
dec
roll
mov
pop
inc
outsb
cmp
sbb
stc
fwait
rcl
sarb
lods
lret
data16
mov
test
out
add
stos
es
sbb
add
inc
push
shl
lock
cmp
sub
mov
fcomp
lahf
push
popa
dec
xor
jne
lret
ret
icebp
in
addr16
mov
pop
or
mov
jg
add
sub
stos
push
xchg
mov
adc
xor
popa
repnz
in
mov
loope
push
dec
mov
xor
fs
push
popa
cltd
dec
xchg
mov
pop
int3
fiadds
xchg
xor
inc
sub
iret
mov
es
pop
int
hlt
test
loope
fnstenv
test
xor
jns
or
lret
push
dec
add
in
jno
sub
mov
mov
shll
sub
cmpsb
std
jae
jge
mov
sbb
jg
adcl
xor
fcoms
or
adc
insb
rcl
pop
mov
stc
in
mov
sbb
or
int
nop
addl
jl
xchg
fcoml
pusha
add
cld
jb
std
add
pop
in
leave
xchg
push
sti
sbb
pop
jle
push
lcall
insb
mov
cld
jge
lods
ljmp
jno
jns
int
rclb
into
mov
leave
fwait
mov
mov
cmpb
xchg
mov
fsubr
xor
cmc
inc
xor
into
movsl
mov
movsb
mov
dec
pop
lds
xchg
mov
mov
add
jb
or
sbb
enter
and
repz
and
insl
mov
jg
cmpsb
sarb
sub
xchg
testb
adc
mov
rclb
popf
ret
fwait
add
cwtl
arpl
dec
jge
divl
lods
out
das
clc
xor
mov
aad
jne
out
std
lds
das
int3
ss
aad
adc
cmp
enter
into
cli
push
lods
in
mov
stos
data16
or
in
jecxz
adc
lock
mov
jl
or
xchg
insb
rorl
fldenv
fstp
shrb
cmpl
sub
lahf
inc
fldl
mov
jecxz
adcl
jmp
pop
dec
aam
adc
adc
rcl
lahf
mov
add
and
arpl
popa
fsubl
aam
rcll
inc
or
dec
lret
loope
pop
xabort
cli
add
mov
or
insb
push
hlt
jns
cmp
xchg
lods
or
imul
push
hlt
lods
insl
mov
and
push
mov
sub
cli
test
mov
outsl
jge
cmp
ss
fs
xchg
push
fimull
xchg
fwait
icebp
out
outsb
mov
iret
pop
fwait
loop
cmp
push
jmp
imul
iret
or
stos
or
sbb
testb
or
mov
push
test
or
jmp
jno
aaa
sbb
in
xor
xchg
shll
jmp
mov
fmulp
dec
xor
bound
jb
arpl
mov
mov
ffree
jo
popa
jae
xchg
and
lea
cmpsb
pop
shrb
sbb
dec
mov
imul
xor
jecxz
cld
dec
sbbb
pusha
movsb
mov
xchg
xchg
pop
in
ficomps
fcoms
xor
sbb
add
stos
dec
inc
mov
loopne
testb
jg
xlat
enter
mov
cltd
and
push
loop
ret
int
lea
ret
xchg
fdivrl
negl
pop
ss
les
lods
and
shlb
popf
xorl
sbb
pushf
add
jo
or
add
es
push
cmp
mov
int
negb
cmpsb
or
xor
hlt
jmp
int3
fimuls
addl
cmc
rol
hlt
jle
lods
shr
jb
rcrb
negl
fsubr
or
mov
push
mov
lahf
push
push
sbb
cmc
cmp
add
enter
rcrb
mov
or
add
icebp
sub
lahf
adc
insl
repz
and
sub
push
cmp
mov
adc
adc
insl
dec
push
mov
mov
jge
ret
shll
stc
mov
adc
mov
rcrl
sbb
jl
cmc
repz
loop
cmp
jge
jle
sub
mov
jmp
push
or
or
out
adc
pop
cmp
sbb
aam
sti
lahf
cmp
xor
leave
sbbl
inc
pop
push
adc
jae
push
ds
jl
xchg
je
or
adc
test
inc
and
out
dec
xchg
fstp
test
mov
adc
shlb
pop
adc
push
and
js
enter
mov
mov
mull
inc
push
out
sbb
mov
or
xchg
add
pop
xor
aam
fdivl
mov
push
in
mov
pusha
push
mov
pop
sbb
out
rcrb
jmp
mov
inc
mov
xor
jmp
mov
cmpsb
stc
leave
std
shlb
data16
jbe
inc
mov
add
mov
jp
rorb
xor
movsl
call
enter
mov
cltd
mov
mov
out
and
jg
adc
mov
outsl
mov
daa
mov
out
adc
cmpb
jnp
or
inc
test
jb
sbb
ja
dec
sarb
mov
jge
fildll
xchg
mov
push
dec
lds
mov
jnp
out
adcb
je
xchg
lea
xchg
push
clc
daa
enter
enter
or
mov
stos
adc
xchg
mov
rolb
push
and
movsb
hlt
mov
lcall
push
or
shll
add
fs
dec
icebp
lods
loopne
icebp
mov
jp
mov
xchg
mov
sub
stc
push
xor
cmp
in
mov
lahf
pop
je
int
pop
mov
loopne
jmp
sarb
or
push
bound
leave
stc
rolb
js
xchg
leave
addl
mov
dec
ret
ud0
pop
shlb
adc
xor
daa
test
mov
mov
pushl
mov
cltd
add
lahf
nop
loop
dec
push
xor
stos
fmul
mov
jg
mov
call
push
in
jmp
add
jmp
cmc
mov
scas
mov
push
xchg
push
jecxz
les
dec
mov
lret
out
pop
je
rorl
sub
mov
xchg
aaa
jmp
jnp
shll
dec
dec
je
lea
and
arpl
cmp
iret
sbb
mov
lods
lea
cmc
in
pushf
add
stc
ljmp
jnp
and
int3
in
daa
cltd
imul
cwtl
mov
add
imul
push
imul
call
sti
out
jmp
inc
push
sub
pop
mov
rcl
ret
sub
lret
xlat
scas
sbb
or
frstor
jns
xchg
imul
dec
mov
and
stos
movsl
sub
and
push
pusha
mov
mov
cmpsl
int
inc
or
ret
stos
xchg
mov
jmp
fsubrs
das
jg
sahf
rcll
push
sbb
sub
pop
push
add
nop
xlat
movsb
and
pushf
jmp
add
stos
fistl
push
lcall
clc
xlat
in
pop
out
fnsave
push
sub
jne
xor
cli
sarb
rolb
pop
add
into
loopne
insl
push
cmp
movsb
pop
pop
push
add
std
rcl
mov
push
dec
add
push
lods
mov
ss
cmpsb
jbe
mov
adc
jg
sahf
inc
fwait
mov
cmp
push
xchg
ljmp
inc
or
in
push
js
aam
inc
stos
int3
or
fdivl
xor
insb
ljmp
xor
scas
jno
mov
xchg
aaa
aas
leave
cli
inc
mov
mov
jb
lods
popf
clc
ds
hlt
in
stc
call
loopne
push
movsb
arpl
mov
mov
bound
mov
mov
adc
mov
sti
dec
lahf
cmp
ds
mov
outsb
es
or
dec
pop
add
push
bound
lods
cmp
ret
enter
ja
jnp
mov
dec
outsb
neg
jno
sahf
pop
lods
jl
mov
pop
ficoml
lds
lds
in
nop
and
clc
jmp
mov
aam
out
stos
aad
pop
push
and
pop
sbbl
mov
pop
sbb
mov
ficomps
ret
mov
imull
or
cmp
into
popf
inc
sbb
sub
inc
pop
sbb
mov
jbe
gs
std
dec
mov
inc
lds
xchg
pop
call
scas
loope
pusha
icebp
push
int
imul
inc
popa
int3
lods
and
ss
mov
rcll
lret
mov
jnp
mov
inc
mov
in
call
mov
mov
and
arpl
dec
inc
mov
shrl
stos
lret
and
shlb
jb
sbb
je
and
sbb
inc
inc
cli
adc
sti
mov
push
fucomip
sti
push
add
lcall
test
mov
lea
fisttpll
pop
mov
leave
jecxz
in
lock
movsb
sbb
outsl
ret
mov
loop
jmp
inc
sbb
lods
mov
xor
sbb
push
les
outsl
movsl
mov
imul
mov
xlat
sub
ss
pushf
jge
loopne
fbld
jg
notb
leave
dec
scas
mov
lret
push
test
lods
js
sbb
or
shll
call
cmp
incl
hlt
push
fs
or
mov
mov
pop
lret
xchg
fidivrs
aam
inc
insb
mov
sub
push
and
sub
mov
adcl
push
jl
lock
loope
dec
sbb
repz
add
mov
add
jae
adc
jae
jo
stos
jge
lahf
aaa
mov
xchg
mov
imul
loopne
aam
xor
mov
in
jge
sti
jl
stc
outsb
cmp
es
mov
dec
pop
cli
mov
or
xchg
push
jg
test
mov
add
xlat
pop
cmp
xlat
in
xor
lds
fcmovne
and
xchg
sub
mov
mov
xor
push
cmp
insl
pop
push
lahf
lods
fnstsw
sahf
sbb
out
lret
ljmp
pop
mov
aad
fstps
pop
andl
fsubrl
pusha
fdivl
or
lea
sbb
repnz
push
inc
in
push
xchg
test
insb
addb
popf
movb
rcll
ds
enter
ret
adc
inc
or
or
mov
xor
sub
lahf
jmp
pop
sub
xchg
ds
mov
ficoml
or
sbb
pushf
lret
insl
in
rolb
in
fisttps
cmp
daa
sti
std
fwait
sbb
mov
mov
and
lcall
xlat
adc
pop
mov
fdivp
adc
xchg
loop
jge
repnz
dec
or
ja
cwtl
pop
into
jae
imul
call
andl
movsl
stc
push
jne
push
call
ds
add
cmc
mov
subb
dec
aam
xor
mov
or
or
jne
xor
mov
data16
xchg
pop
ljmp
shll
dec
jge
insl
xor
push
sarb
adc
inc
rclb
insl
lret
in
iret
les
mov
xchg
adc
sbb
pushf
or
xor
cmp
pop
in
or
sar
repnz
cmp
mov
xchg
cmp
and
inc
mov
xchg
ret
pop
repnz
push
mov
dec
outsl
ljmp
hlt
cmp
lret
mov
call
in
mov
mov
fsubl
push
repz
outsb
mov
cmpsl
adc
cmpsb
fstps
lahf
enter
and
out
cmp
std
aad
aam
enter
push
mov
xchg
aad
stc
adc
jne
jge
sbb
into
jmp
xor
scas
call
jb
pop
js
mov
lock
cmc
xchg
js
mov
inc
mov
fs
mov
xchg
pop
adc
inc
inc
out
pushf
jae
xchg
inc
mov
jne
mov
mov
push
loop
cmp
icebp
nop
inc
xchg
in
fisubrl
fadd
inc
add
pop
lock
int
cmp
jle
in
dec
cmpsb
mov
out
cmp
dec
int3
xor
es
out
add
or
mov
push
add
mov
adc
hlt
and
fistps
adc
mov
inc
test
jg
in
loop
pop
gs
mov
gs
repz
negl
dec
call
das
js
hlt
pop
mov
xor
ret
pop
pop
repnz
dec
inc
cli
in
xchg
add
call
lahf
idivl
ss
icebp
int
rcrl
shrl
dec
or
std
std
cmp
int
stos
pop
cld
pop
and
xchg
cmp
dec
and
imul
cmp
insl
push
adc
push
or
push
pop
into
mov
or
mov
addl
mov
jb
mov
add
mov
or
xor
outsl
adc
lods
jns
popl
dec
jnp
mov
mov
bound
xchg
xchg
out
mov
inc
pop
xchg
cmpsb
out
sbb
sbb
out
xchg
jmp
out
call
loop
lahf
mov
nop
push
insl
xchg
mov
xor
ja
push
fldt
pop
mov
cmpsl
pop
push
push
rorb
lods
or
mov
mov
inc
mov
sbb
pop
lcall
mov
xor
cmp
inc
jb
xchg
and
decl
mov
int3
mov
fisttps
add
jge
imul
cmpsl
bound
xchg
dec
loop
mov
jae
call
arpl
mov
outsl
iret
dec
or
inc
shrl
sbb
fmulp
mov
pop
out
and
mov
xchg
jno
repz
hlt
mov
xchg
cli
in
aaa
push
cmp
jne
fisttps
sbb
mov
inc
push
shl
or
stc
dec
cld
sbb
pop
shrl
xor
les
aad
aad
loopne
dec
icebp
shlb
xor
iret
sub
xor
shll
adc
sti
int
shll
xor
or
jg
or
popa
jge
lods
aas
addr16
jecxz
mov
popf
clc
hlt
sub
jo
push
dec
ss
fsubs
mov
mov
mov
repz
loop
repz
mov
std
jbe
ficompl
repz
xchg
or
insl
ror
xor
aas
and
in
jne
in
sub
push
popa
add
mov
push
push
imul
rol
std
or
rorl
popa
and
or
ljmp
mov
adc
xlat
js
call
jp
pop
je
jle
lods
dec
pop
mov
cmp
dec
sub
mov
sub
pop
scas
xor
sub
and
jle
fdivl
push
inc
gs
jecxz
sub
nop
dec
loop
sbb
out
xchg
xor
sub
in
push
stos
inc
mov
cmp
into
sbb
sarl
ja
stos
es
test
repz
mov
fwait
and
mov
nop
in
push
les
mov
int
xchg
jg
adc
xor
push
push
cmpb
dec
sarw
add
push
stc
pop
mov
pop
cmp
dec
insb
xchg
xchg
add
cmp
jb
fcomps
inc
in
cli
mov
push
aas
xchg
out
rorb
push
pop
jl
jmp
cmp
dec
mov
xchg
mov
adc
cld
lods
sahf
or
mov
addr16
les
cmp
nop
push
mov
mov
add
and
bound
pop
test
in
mov
push
out
sbb
xor
insl
in
sbb
cmp
pop
out
xor
lret
pop
sub
mov
movsb
cmp
inc
push
fimull
pop
add
cmp
pop
cmp
stos
add
call
ja
test
subl
sbbl
mov
inc
shrb
mov
push
inc
sub
push
sbb
ds
test
int
push
icebp
pushf
outsl
andl
das
lods
sarb
mov
bound
mov
xor
fsts
lea
iret
pop
push
stos
mov
jnp
fstl
int
mov
cltd
fiaddl
jp
or
popa
pushf
in
dec
xchg
jge
inc
pop
es
test
xchg
or
cmp
mov
in
mov
out
push
fistpll
inc
inc
adc
mov
test
jg
repz
icebp
inc
clc
in
out
stc
sub
push
adc
cmp
or
stc
lea
mov
adc
push
push
push
popl
sub
les
in
and
into
sub
pop
mov
sub
lock
mov
testb
sbb
add
repnz
adc
dec
bound
pop
xchg
jp
sub
addr16
insb
fstps
subb
inc
xchg
push
pop
and
fwait
mov
adc
mov
mov
jne
insl
or
nop
fstl
cmp
push
cmp
test
mov
jl
fcmovnbe
xchg
scas
repz
faddl
sub
add
dec
je
into
xchg
push
rcrb
cmpl
out
sbb
sahf
mov
sahf
push
pushf
arpl
xor
jnp
mov
je
es
cmp
xor
in
sbb
jnp
mov
hlt
js
fdivrs
adc
sbb
adc
dec
int3
hlt
dec
push
ret
dec
sbb
mov
daa
add
mov
pop
sub
fistps
mov
add
mov
push
call
sti
cmp
push
popa
xchg
cmp
adc
add
imul
fisubl
xlat
adc
cmp
popf
push
xchg
cld
loope
sahf
lds
sub
fdivrp
xchg
sbb
add
mov
sub
mov
shll
mov
adcb
mov
sar
lahf
pop
dec
sbb
and
dec
mov
pop
inc
mov
mov
adc
bound
cmp
or
xchg
aad
mov
add
out
call
mov
loope
jp
cmp
test
lds
scas
cs
mov
lock
mov
mov
std
int
xor
rorb
clc
lods
mov
loop
or
add
cmp
cwtl
mov
xchg
iret
roll
sbb
xchg
pusha
pop
addl
jmp
lea
rcrl
jmp
xor
mov
mov
es
mov
fnstcw
inc
pop
not
ds
add
gs
sbbl
shrb
inc
sbb
jb
scas
add
sub
xchg
fs
fistpl
cmp
pop
add
lahf
sub
pop
push
pusha
and
das
paddq
hlt
js
push
push
pop
push
popf
mov
cs
ret
xchg
movsb
idivl
clc
dec
add
and
lret
fwait
jnp
mov
xor
notb
subb
fistpl
or
shll
fstl
adc
cltd
jno
ficoms
loop
add
in
int3
push
mov
fcomps
call
into
fs
pop
inc
cmp
fisttpll
sub
das
mov
test
mov
lcall
cli
push
rol
arpl
loopne
mov
jns
fsubrp
cs
popf
mov
add
xchg
pop
add
mov
mov
cli
and
int
cmc
adc
je
sahf
xor
pop
mov
stc
orb
mov
sub
not
aaa
in
mov
add
fistps
punpckhbw
dec
loopne
dec
cmpsl
call
testb
fnstcw
outsb
mov
retw
sbb
pop
ret
pusha
inc
mov
ja
xchg
lahf
xchg
mov
in
fincstp
adcb
stc
cwtl
adc
in
sub
adc
or
xchg
std
push
add
lea
cmc
mov
dec
cwtl
ja
jbe
pop
push
cmc
xor
and
popf
push
inc
xchg
pop
mov
adc
and
cli
jb
pop
mov
jp
sti
daa
adc
les
xor
mov
jecxz
iret
ss
mov
scas
fs
or
mov
jl
mov
test
into
mov
ret
ljmp
mov
adc
mov
popf
movsl
scas
fcmove
std
lcall
int3
inc
cmp
nop
outsb
adc
std
popa
clc
push
scas
adc
cld
and
mov
inc
lret
std
inc
les
les
xor
mov
sub
and
dec
popf
icebp
aam
or
inc
pop
dec
mov
hlt
insl
cmc
mov
push
jecxz
into
cwtl
pop
ret
cmpsb
popa
pop
ja
sub
xor
xchg
adc
int3
xor
dec
xlat
mov
popf
and
sbb
mov
into
xor
mov
mov
or
stc
mov
adc
or
and
push
xor
pop
adc
lcall
scas
test
push
or
push
sbb
jle
aam
jmp
xlat
sbb
jno
scas
push
push
mov
xor
sti
jo
rorb
pop
cmp
sahf
add
jecxz
mov
bound
adc
cmp
cld
aad
scas
sbb
push
cmc
cmpsl
jb
mov
adc
hlt
icebp
pop
repnz
lcall
inc
mov
in
out
mov
seto
adc
aam
sbb
xchg
call
pop
mov
mov
out
js,pn
insl
xchg
push
push
cmp
xchg
push
jle
xchg
lea
out
test
xchg
xlat
lcall
inc
or
lret
icebp
pop
mov
push
int3
cmpsb
mov
mov
adc
and
enter
inc
insl
add
ret
ret
sub
mov
stos
bswap
ljmp
stc
mov
add
ud2
dec
dec
incl
aam
sbb
and
xor
jmp
mov
push
inc
outsl
popl
pop
cmp
pop
jne
mov
fucomp
repz
pop
add
and
aad
mov
imul
imul
sub
adc
icebp
fstpl
mov
xchg
rorl
jl
and
insl
outsl
dec
cmp
and
sub
inc
mov
orl
das
cmpsb
gs
sub
in
test
push
cmp
test
mov
xchg
scas
xchg
dec
inc
sub
xchg
ja
aam
cs
outsl
jmp
mov
push
call
mov
in
cmp
insb
cmp
push
fdivs
stc
pop
xchg
subl
mov
add
push
or
cmp
pop
push
jle
pop
cmovb
addr16
pusha
movsb
hlt
pop
pop
mov
cmpsl
lds
cmp
push
push
push
shll
mov
push
dec
filds
inc
lods
aam
mov
push
je
dec
inc
subl
add
stos
pop
fwait
xor
dec
pop
mov
mov
mov
and
xchg
mulps
nop
out
jmp
mov
push
fisubrl
or
push
sti
adc
das
outsl
sbb
lcall
and
cmc
jge
push
pusha
xchg
fnstsw
dec
jge
test
mov
test
repnz
mov
fiadds
inc
jmp
add
cmpsl
push
jnp
inc
addr16
addr16
aaa
push
mov
jae
clc
fisttpl
inc
adc
les
mov
cmp
ds
jo
dec
sbb
mov
nop
or
aam
lods
les
rcrl
ljmp
fmuls
mov
daa
pop
cmp
dec
in
mov
xor
hlt
std
xor
outsb
dec
mov
cmpsb
les
arpl
xor
cwtl
xchg
xor
test
cli
fistl
stos
xor
pushf
out
out
addl
cltd
and
mov
cmpsb
sti
mov
in
mov
mov
das
push
jl
inc
rclb
ret
pop
cmp
mov
ret
mov
mov
add
mov
testb
lock
push
loopne
call
lahf
test
jo
and
repnz
mov
sarl
push
adc
in
xchg
idivl
sub
inc
addb
pop
xchg
and
cmpb
flds
add
pushf
lcall
push
enter
mov
add
mov
jb
pop
adc
push
arpl
out
jecxz
out
call
cwtl
jae
test
mov
xor
lds
dec
out
nop
jp
stos
mov
aas
mov
dec
stos
inc
negb
xor
rcrb
sub
dec
stos
jno
stos
mov
lock
xchg
inc
dec
lds
insl
arpl
arpl
in
fstpt
jns
cli
in
xor
sbb
loope
sub
mov
mov
fnstenv
dec
addb
aas
inc
mov
fimull
dec
lret
ret
dec
push
xchg
inc
jo
punpckldq
push
adc
dec
sub
or
subb
orb
lcall
das
and
loopne
pop
lcall
xchg
lods
pop
cmpsl
jne
ljmp
fimull
cmp
dec
add
mov
inc
scas
push
nop
push
mov
mov
cmp
loope
cwtl
neg
rcrl
pop
push
xor
mov
fcmovbe
in
or
xor
clc
insb
mov
es
push
dec
mov
mov
mov
ds
or
and
xor
rorl
out
dec
mov
mov
push
addr16
push
leave
mov
mov
dec
lds
cmp
mov
stos
lock
adc
sbb
pushf
lahf
xor
mov
addb
xchg
ret
mov
out
sahf
pop
popf
xchg
dec
dec
pop
shll
div
fcom
clc
cld
inc
cli
push
ret
add
pop
pop
repnz
daa
leave
sahf
ror
mov
sarb
dec
mov
push
or
push
pop
loopne
mov
mov
jp
rclb
sarb
add
cli
adc
xor
in
pushl
and
out
adc
adc
faddl
insl
cmp
arpl
or
add
std
iret
hlt
iret
jl
stc
and
clc
cmpsl
shl
jle
add
jb
icebp
pop
or
shl
mov
in
xor
in
in
not
fwait
push
fnstsw
test
mov
push
arpl
adc
sarb
fs
data16
mov
xlat
popa
jbe
push
xor
loopne
xlat
in
inc
mov
out
or
lock
sbb
test
pusha
jns
push
mov
lds
sbb
lods
add
mov
or
int3
ficoml
jle
fisttpll
mov
fimull
je
dec
js
imul
lods
xchg
jbe
int
mov
xchg
loope
cwtl
xchg
sub
mov
xchg
int
mov
jns
out
push
xrelease
in
fisttps
mov
pop
out
push
out
notb
jge
scas
jbe
stc
icebp
add
xchg
cmp
idiv
movsl
lock
test
ficompl
push
jecxz
xor
mov
imul
xlat
ret
iret
inc
lret
imul
mov
scas
in
cmpsb
pop
adc
dec
loopne
jge
fildl
mov
lret
sbb
mov
stc
or
mov
mov
add
adc
roll
xchg
adc
jmp
push
arpl
inc
pop
and
jg
sub
lahf
push
push
mov
or
sub
je
fucomi
out
adc
and
leave
in
es
std
rcll
sub
shlb
cmpsb
aas
add
popa
pusha
mov
add
dec
mov
xchg
repnz
mov
outsb
fildll
jno
sbb
mov
scas
pop
pop
jae
repz
mov
cltd
mov
sbb
jno
pop
in
inc
mov
aas
and
add
pushf
and
pop
pop
sub
mov
mov
jle
fstpl
fs
in
sub
fwait
addl
mov
or
adc
lret
jnp
imul
push
jns
mov
out
pop
jnp
xor
call
adc
dec
xchg
aaa
dec
cmp
test
xchg
lret
call
or
insl
sti
sbb
shll
or
inc
add
or
sbb
mov
lahf
mov
iret
ss
xor
inc
enter
push
inc
dec
jge
lret
in
rol
mov
sqrtps
lods
inc
cmc
test
mov
add
xor
lret
mov
pop
xlat
mov
inc
aas
es
nop
or
cmpsl
scas
xchg
adc
dec
jmp
jecxz
sbb
jmp
mov
pop
and
sbb
adc
cmp
mov
test
mov
push
repnz
dec
cltd
pop
dec
je
dec
inc
repnz
mov
lods
sub
pop
inc
mov
cmp
in
test
les
pushf
fsubrs
out
xchg
mov
inc
fwait
popf
inc
movsl
dec
inc
test
mov
cmp
jg
dec
dec
jg
int3
and
pop
mov
test
in
loopne
scas
aas
mov
enter
xchg
sub
pop
int
shlb
add
call
push
jg
cli
aam
or
xchg
mov
add
test
ror
aad
mov
int
mov
jns
jns
aam
fisubrs
mov
ljmp
pop
dec
pop
mov
mov
ljmp
ret
imul
mov
xor
adc
ss
int
int
jg
test
push
ss
and
dec
fsubs
add
xchg
jmp
xchg
push
imul
rcrl
xor
bound
xlat
or
jns
sub
cmp
push
out
dec
movsb
sub
mov
mov
xchg
mov
mov
mov
xchg
ret
sub
aad
in
add
sti
movsl
movsb
movsl
mov
xchg
sub
inc
ret
sbb
mov
ljmp
inc
out
push
pop
pop
jmp
fsts
mov
aam
lcall
negl
jno
les
iret
insl
sub
cmp
jne
mov
xor
cld
ret
cltd
dec
jl
and
stc
aam
lret
or
add
ljmp
lock
jge
cli
mov
xchg
fs
jg
rcr
cltd
imul
iret
std
fdivs
pop
cmp
pop
push
sbb
hlt
add
mov
mov
rorb
fstp
cmpsl
mov
pop
sub
add
cli
sub
fs
add
pop
fsubp
or
cmp
push
imul
aad
pushf
mov
adc
xor
pop
mov
cmp
jb
mov
cs
jne
cmpsl
test
pop
sbb
ret
ss
mov
lahf
dec
pop
enter
repz
test
cmp
xchg
sbb
arpl
into
int
mov
loopne
dec
mov
imul
jmp
dec
sbbl
popa
aam
loop
push
sbb
add
adc
mov
fld
jmp
pushf
mov
gs
sarb
jb
and
mov
sub
jge
mov
inc
lds
push
xchg
rcll
mov
sbb
es
ja
sbb
and
movsl
pop
xchg
ds
mov
divl
aam
fildll
mov
imul
jle
adc
stos
inc
jnp
mov
sub
ret
add
or
mov
aas
xor
jmp
mov
cmpsb
sbb
jae
dec
xchg
fisubs
sbb
shlb
bound
into
stos
xchg
xchg
insb
mov
push
mov
sti
dec
xchg
mov
inc
test
decb
js
sbb
add
push
mov
iret
dec
movsl
cmp
dec
sub
jno
mov
or
fdivr
das
in
push
dec
push
or
or
jp
aam
inc
into
arpl
ljmp
sub
in
fsubs
in
mov
arpl
shll
nop
in
mov
int
insl
lret
int3
mov
xchg
sub
push
movsb
push
jg
pop
mov
fs
mov
rorl
leave
jb
xor
cs
mov
out
shrl
cmpsb
push
inc
cmp
enter
test
jae
push
xchg
lds
arpl
mov
push
jge
or
mov
cli
push
jns
jne
shl
mov
fsts
stc
inc
cmp
aas
mov
and
add
jb
mov
mov
jg
jns
lds
fadds
testb
xorl
mov
or
sahf
inc
pop
mov
fwait
xchg
jge
push
repnz
scas
lcall
push
jae
js
dec
lock
out
pop
fildl
and
popf
enter
xlat
add
loop
lahf
test
fwait
lahf
imull
test
es
aaa
flds
lret
cmpsb
in
rorl
or
dec
dec
dec
loope
cmp
dec
mov
jmp
rol
and
popf
out
add
adc
jge
cs
loope
pop
lods
and
aad
xchg
push
fldl
negl
xchg
push
mov
jmp
xor
hlt
or
shrl
push
mov
mov
lcall
pushf
notb
scas
in
jno
je
pusha
mov
push
cltd
xchg
movsl
movsb
hlt
into
mov
sub
insb
outsb
jl
lret
inc
dec
mov
in
and
insl
rcll
fldl
sbb
rcrl
scas
and
test
loopne
les
mov
int3
jecxz
xor
xchg
add
loopne
nop
fldenv
js
jae
or
or
jp
add
dec
aad
fldenv
loop
lcall
fmuls
cli
loop
mov
jge
jecxz
outsb
out
fildll
push
test
leave
xchg
mov
movsl
mov
push
mov
lahf
roll
and
mov
dec
inc
enter
stos
loope
mov
in
es
pop
sahf
mov
or
mov
sbb
mov
out
mov
iret
sti
jecxz
mov
push
loopne
mov
sbb
jb
cmp
jnp
movsb
in
xchg
imul
sub
mov
fsubrl
aad
popf
stc
int
push
int
push
and
push
pop
lcall
mov
push
add
outsl
adc
mov
pop
sub
xor
test
push
loope
iret
test
divb
or
adc
fisttpl
jb
pop
lret
cmp
xchg
inc
fsubs
sti
jnp
push
repz
adcb
jae
mov
pop
test
imul
popf
adc
es
mov
cmp
shll
test
xor
sub
xchg
pushf
xchg
into
mov
popf
and
jnp
imul
aas
push
cltd
addb
les
lea
out
cld
cmp
ja
mov
repz
out
outsl
or
push
pop
push
insb
cld
dec
mov
xchg
sub
add
das
insl
mov
pop
mov
cmpsl
mov
or
jno
mov
in
xchg
sbb
mov
push
xchg
dec
movsl
ret
xchg
mov
push
jnp
and
mov
xchg
or
dec
arpl
mov
add
mov
add
aam
orb
dec
push
in
jns
push
cmpsb
push
inc
adc
popf
bound
rcrb
arpl
dec
aas
dec
les
mov
sbb
push
add
pop
push
scas
cmc
jnp
push
pop
scas
sbb
add
pop
mov
or
int
cmpsl
in
inc
push
cmp
nop
push
push
lods
pop
push
pop
xchg
jae
loopne
dec
jbe
rol
outsb
xchg
rcr
push
sbb
or
xchg
mov
fcomp
xchg
push
test
iret
pop
rcrb
fs
xchg
out
pop
movsl
cli
leave
insl
mov
vpshuflw
push
jmp
add
stc
pop
sub
push
jmp
pop
jne
inc
loop
ret
imul
mov
push
pop
scas
or
inc
mov
rcrl
ds
into
ret
dec
mov
shll
cli
es
mov
data16
dec
sbb
lcall
inc
xchg
in
push
shl
repz
test
inc
bound
fadd
loopne
adcb
mov
mov
or
je
mov
nop
insb
sbb
popf
scas
shll
jbe
jno
xor
cwtl
ja
dec
sahf
mov
fdivrs
xlat
test
call
insb
repnz
xor
repz
sbb
cmc
add
add
add
mov
rolb
and
nop
sarl
ftst
cli
in
es
xchg
xor
mov
popa
or
nop
dec
fsubr
sbb
xchg
mov
jge
in
dec
imul
mov
mov
arpl
add
in
mov
cmpsb
xchg
lret
fwait
push
cmp
jmp
imul
icebp
xchg
iret
inc
adc
jbe
pushf
js
cmp
stos
aas
orb
es
cmp
or
mov
pop
jmp
or
in
mov
push
or
and
xor
in
imul
adc
sbb
es
stos
pop
inc
lds
or
jb
push
mov
xlat
shrl
dec
inc
stc
scas
xor
mov
cltd
mov
popa
enter
dec
ds
pushf
stc
cli
mov
or
push
sarb
add
stc
jnp
pop
jp
test
mov
xchg
ja
dec
insl
lahf
pop
nop
es
mov
and
mov
jge
add
fistl
mov
cmp
ret
dec
leave
jmp
inc
and
imul
inc
movsl
mov
add
mov
mov
xchg
les
pop
xor
xchg
add
not
dec
leave
mov
mov
std
xor
mov
add
mov
out
ficoms
repnz
cltd
add
lea
dec
mov
inc
test
cltd
andb
sub
movsb
enter
cmp
fsubrl
stos
sarl
leave
rol
mov
ret
flds
lods
mov
sbb
push
or
jnp
mov
subl
inc
cmp
pusha
jmp
adc
insb
ret
sub
ud2
jge
cmpsb
pop
sub
addr16
decb
mov
jo
push
int3
out
jo
stos
inc
mov
cmp
xchg
sub
mov
in
fadds
mov
push
push
ret
or
or
adcb
ja
jo
xchg
lahf
xor
movsb
or
fs
or
in
aas
xchg
mov
mov
or
jo
sbb
xchg
aaa
popf
clc
push
xorl
mov
dec
inc
cmp
jns
stos
movsl
in
inc
lock
adc
inc
inc
sbb
shlb
pusha
or
lods
outsl
jl
mov
jne
addr16
adc
inc
dec
in
cld
mov
mov
repz
dec
int
push
icebp
fldenv
jne
in
fists
fldenv
mul
loopne
add
inc
sbb
adc
xchg
les
mov
inc
pop
loopne
jne
mov
gs
sub
mov
add
xor
jbe
mov
add
ss
cs
les
lds
mov
pop
jmp
or
mov
popa
jp
mov
mov
push
xor
add
repz
inc
sub
dec
cli
lods
xchg
jecxz
repnz
push
mov
or
push
and
leave
loopne
mov
pop
lds
and
pop
xchg
fimull
dec
daa
shll
lcall
subl
js
test
add
mov
mov
popf
lods
sbb
dec
push
adc
mov
xchg
sub
mov
rorb
insb
push
ret
mov
inc
add
lret
test
push
push
cmp
pop
scas
push
push
loopne
adc
popf
mov
inc
lods
inc
lcall
mov
push
or
adc
aad
cmc
jmp
pop
aas
popa
xchg
or
out
repz
in
lods
adc
aad
or
and
or
out
aam
lret
or
in
sub
mov
adc
jns
cmc
shl
xchg
fwait
jmp
jmp
push
add
lret
fnstsw
xchg
scas
stos
aam
fidivs
std
jae
dec
inc
ret
lea
shl
sub
mov
mov
mov
pop
push
bound
cmp
mov
scas
jge
push
repnz
sub
cmp
mov
mov
push
es
test
aaa
fnstcw
ds
xor
loopne
loop
lods
andb
lods
rcrb
or
pop
mov
stc
jecxz
and
lcall
mov
aam
jo
cmpsl
and
adc
jmp
pop
pop
mov
in
icebp
pop
fwait
outsb
loop
into
fwait
xchg
aaa
mov
js
and
enter
pop
das
sbb
jecxz
cltd
lea
mov
rcrb
push
inc
mov
jnp
icebp
jns
outsb
push
mov
insl
xlat
xor
jb
mov
sub
loope
lods
les
loope
add
push
lock
mov
icebp
jno
pop
cmp
stc
xchg
push
testb
or
enter
jmp
inc
mov
dec
jmp
aas
mov
add
sahf
rorb
ret
cmp
jne
dec
pop
jne
mov
inc
push
insb
loope
adc
dec
icebp
cwtl
xchg
es
or
fdivrl
jo
cmp
mov
push
sbb
leave
mov
fdivrp
sbb
sbb
mov
and
sub
shll
sub
and
mov
push
ja
cmc
ljmp
or
stc
xchg
cli
mov
nop
clc
cltd
xchg
jno
int
stc
and
shl
adc
adc
mov
jp
ds
gs
sbb
push
fwait
pop
sti
sahf
xor
mov
push
mov
bound
into
movsl
dec
repnz
jmp
lea
mov
adc
jp
pop
stos
mov
ficompl
divb
fdiv
pop
xor
pop
fmull
and
pop
jb
fstl
int
and
dec
jne
xchg
mov
cmp
scas
ret
sub
hlt
fmuls
add
stc
les
mov
dec
dec
jno
iret
addb
fistl
rorb
or
and
sbbl
cmp
jl
mov
mov
mov
hlt
xlat
loopne
sbb
repnz
ret
adc
push
mov
mov
fildl
lret
add
bound
mov
lret
out
mov
or
hlt
inc
sbb
lods
cmp
add
jl
xor
and
cmpsb
add
out
in
mov
push
out
cmc
addr16
hlt
mov
mov
stc
idivl
lahf
jl
ret
cld
xor
out
in
xor
in
sub
xchg
out
push
add
xor
stos
int3
enter
mov
aas
push
int
lret
fsub
inc
dec
mov
aaa
cld
dec
outsl
ret
xchg
dec
repz
mov
stc
ret
dec
push
jp
orb
jnp
out
repnz
aas
lret
mov
fs
icebp
mov
test
rcrl
jb
jns
ds
mov
out
dec
jg
rcrb
hlt
insl
jmp
adc
mov
sbb
repz
cmpsl
inc
ficomps
mov
sbb
jge
mov
xchg
lret
jo
lahf
and
xor
or
cmp
cld
ds
push
jb
or
adc
repnz
in
pushl
mov
repz
and
enter
cmp
mov
shl
mov
jae
hlt
jge
cmp
xchg
shlb
jge
jnp
cmp
das
inc
out
xor
push
vshufpd
flds
mov
sub
xor
imul
pop
pop
int
int
in
stos
or
lds
int
ljmp
insb
mov
aaa
xchg
call
push
sarl
outsl
ss
jno
sbb
and
andb
cli
adc
push
in
out
das
push
movsb
xor
out
shrw
dec
pop
xchg
xchg
cld
arpl
testb
fnsave
int
push
add
add
out
xchg
sar
cwtl
xchg
scas
or
xchg
out
push
mov
mov
and
andl
pop
cmpsb
jl
out
cmpsb
jnp
jns
lahf
jl
scas
movsb
jmp
cmpl
jae
jnp
fistpl
inc
shr
mov
xor
daa
jmp
sub
in
xlat
insl
cmpsl
mov
icebp
ja
fadd
and
fsubr
add
ficompl
mov
repnz
add
pop
xchg
lds
shr
clc
cmc
enter
jne
adc
mov
jmp
mov
and
xor
add
mov
mov
in
stc
out
cmp
push
daa
test
pop
mov
mov
rol
lret
mov
testb
les
out
cltd
mov
hlt
test
test
mov
movswl
pop
lods
or
call
push
mov
daa
dec
push
out
jg
jne
es
add
mov
test
push
or
test
adc
cmp
push
and
xchg
pusha
in
cld
test
mov
and
sub
out
dec
xor
mov
movl
mov
mov
pop
call
or
jmp
push
lock
and
add
into
dec
shrb
dec
pop
or
sub
bound
idivl
insl
movsb
ds
test
jp
ficompl
xor
push
rol
mov
cmp
add
push
mov
push
pop
sbb
in
jl
das
push
dec
adc
mov
xor
testl
sarb
mov
cmp
repz
mov
fmul
lods
sub
xchg
pop
jle
addr16
inc
lea
cmp
idivb
add
imul
mov
ljmp
mov
dec
gs
cmp
movd
adc
xchg
lea
and
stos
or
push
mov
cltd
addb
mov
jge
jne
add
push
mov
pop
cmp
outsl
mov
test
xchg
pop
adc
mov
cli
mov
lret
es
and
bound
mov
adc
adc
hlt
int
adc
push
shrl
pop
cmp
daa
cmpsl
idivb
sub
andb
pop
and
lret
iret
ret
in
jo
lret
jns
inc
pop
scas
dec
dec
jmp
ja
icebp
jnp
dec
outsb
gs
popf
xor
shl
add
sbb
fidivrs
jle
shlb
pop
mov
dec
repz
push
mov
dec
cmp
test
jecxz
or
inc
outsl
rol
xchg
in
insb
in
mov
and
out
icebp
sahf
adc
stc
add
mov
xchg
rcll
pop
int
xchg
pusha
jb
cmp
adc
stos
divl
fistpll
mov
cltd
jp
jbe
xchg
insl
mov
push
dec
mov
pusha
pop
lock
lock
mov
jae
push
lret
movsb
add
addb
jle
sbb
dec
mov
xor
mov
call
mov
sub
int
loop
mov
jle
and
jo
dec
jbe
in
push
sbb
jecxz
sbb
xor
jp
and
pop
int3
jno
push
adc
ret
loope
ljmp
gs
popaw
dec
sub
clc
sahf
xchg
outsb
pop
pop
mov
cs
xorb
mov
xor
push
mov
ret
jb
sbb
push
rol
out
mov
sub
jnp
cmp
mov
pop
jl
sbb
jecxz
xchg
sbb
mov
jmp
xorb
shl
shll
mov
jmp
or
jg
nop
mov
adc
insl
add
bound
gs
pop
nop
je
int3
and
xor
test
testl
jle
push
sti
add
mov
stos
imull
lds
arpl
shll
ficomps
push
mov
or
ja
push
sbb
sbb
mov
les
adc
push
cmp
cmp
push
aam
jnp
movsl
mov
dec
vmovd
push
jge
cmp
sub
sbb
push
sub
clc
idivb
shlb
xchg
fnsave
pop
sbb
add
cli
jno,pn
xor
movsb
or
mov
testb
mov
movsb
xchg
fdiv
ss
ret
add
sub
jle
mov
lods
jle
int
scas
mov
jge
sbb
xchg
cmp
and
pop
shlb
cs
xchg
nop
mov
or
inc
mov
out
mov
jmp
mov
sub
mov
add
loope
stos
add
mov
mov
pop
cmp
mov
hlt
push
mov
sarl
fstpt
and
fmull
sbb
repz
and
cmp
jb
xor
add
aad
scas
or
or
xchg
or
sbb
adc
outsl
iret
addr16
sysenter
les
dec
enter
mov
leave
jp
dec
jge
imul
jge
pop
add
jge
inc
inc
push
sbb
xor
cld
xchg
inc
daa
jbe
std
rorb
into
push
and
adcl
scas
outsl
ret
out
sub
enter
out
mov
inc
into
call
test
inc
cltd
pop
push
xchg
scas
pop
stos
movsl
fsubr
dec
shr
icebp
call
rol
mov
pop
cmpb
mov
add
mov
loop
inc
in
jmp
in
clc
mov
cmp
xchg
enter
and
jl
dec
scas
xchg
data16
shr
add
sbb
and
or
pop
add
dec
cmc
xchg
xchg
sbb
aaa
jns
shlb
cmp
mov
xor
cld
dec
mov
enter
xchg
sub
stos
mov
pop
dec
leave
hlt
push
ret
jmp
ficomps
mov
sub
adc
mov
int3
pop
int3
fnsave
dec
or
ss
outsl
aad
sub
add
pop
lds
adc
adc
ficomps
or
ror
or
out
dec
dec
dec
lock
imul
lods
sub
jl
lret
mov
and
xor
mov
je
loop
fsubp
mov
pop
xchg
ljmp
mov
lret
clc
adc
and
fldenv
adc
xlat
popf
and
xlat
or
rclb
xchg
scas
mov
lret
mov
cltd
xchg
ja
rcl
andl
sub
mov
sub
xlat
mov
xchg
adc
mov
mov
or
pandn
cmp
push
fwait
mov
push
fsub
lock
dec
jp
int3
xchg
icebp
lods
repz
sbb
adc
xchg
inc
stos
dec
ljmp
arpl
mov
jbe
out
js
inc
es
stos
enter
and
fistpl
xlat
pop
sub
push
imul
add
dec
fimuls
jmp
pop
mov
jp
mov
fidivl
lea
push
or
lock
and
xor
sti
inc
enter
xchg
dec
and
mov
fisubl
sbb
xor
mov
repz
repnz
inc
mov
jge
dec
les
and
negb
jb
pop
gs
lods
enter
ja
and
es
test
jmp
popl
pop
push
aam
hlt
sub
jl
fisttpl
jmp
scas
je
fs
std
mov
aam
cld
push
mov
mov
jnp
jnp
es
test
pop
add
or
cmp
test
jnp
popa
xchg
xchg
sub
pop
mov
jle
bound
push
or
jl
cmp
out
mov
xchg
pop
aad
add
je
jbe
adc
jg
cmpb
roll
lods
or
adc
adc
dec
adc
pop
jbe
insl
out
test
cmp
mov
dec
pop
adc
shl
inc
mov
js
add
rclb
sbb
pop
cltd
mov
mov
mov
sbb
flds
fbstp
add
gs
das
fldl
scas
in
cltd
jge
jmp
hlt
insb
je
push
jge
inc
je
call
cwtl
es
std
jmp
mov
inc
mov
pop
push
mov
sbb
jnp
cmpl
addr16
mov
fisubrs
dec
lcall
movsl
adc
xchg
or
ljmp
inc
dec
mov
icebp
dec
dec
mov
into
out
cli
loop
loope
ret
pop
push
pusha
sbb
cmp
adc
pop
ljmp
adc
orb
xor
ret
xchg
mov
fnstsw
sub
xchg
pextrw
jge
pop
shr
cmp
inc
mov
jp
xchg
and
cld
out
add
jne
mov
mov
adc
cmc
cmp
sub
pop
call
xchg
and
sub
mov
pop
stos
xchg
push
test
xchg
jmp
push
xchg
cmp
movsl
in
push
adc
and
sub
xor
repz
into
mov
mov
xchg
dec
mov
fsubs
push
stos
sbb
ficoml
mov
sbb
mov
rol
pusha
movsb
xor
mov
adc
dec
adc
testl
and
or
lret
sub
or
fwait
leave
inc
cmc
mov
aad
dec
pop
mov
notb
inc
mov
cli
xchg
ja
adc
call
inc
jno
dec
adc
cmpsl
jne
pop
dec
mov
icebp
fmul
mov
jge
dec
jne
jns
imul
push
icebp
lods
jecxz
mov
fdivr
mov
mov
cmp
fstl
loopne
mov
pop
sbb
mov
xor
fisubrl
lds
mov
pusha
push
mov
cmp
mov
fcoml
ret
inc
mov
mov
iret
scas
iret
fadd
pop
gs
dec
sub
hlt
xchg
jns
and
mov
std
loopne
arpl
divl
call
imul
mov
or
inc
sub
pusha
sub
inc
jl
inc
rol
cmp
and
mov
xchg
push
jno
jbe
xchg
add
or
and
fwait
lret
cli
out
jnp
test
adc
jno
jp
pusha
xchg
pop
xchg
mov
in
out
call
lods
pop
push
sub
popf
scas
pop
fs
rcrb
mov
hlt
pop
fcmovb
in
xor
outsl
sbb
pop
cmp
xchg
push
push
ret
repz
cmpsl
mov
mov
lods
js
dec
dec
in
mov
pop
fidivrl
mov
mov
inc
inc
adc
sti
mov
xchg
adc
push
cmp
sti
out
jmp
stos
gs
mov
insb
sub
mov
fcompl
or
repnz
push
mov
jecxz,pt
neg
adc
insl
cmp
test
out
jnp
sti
xchg
pop
sub
xor
push
push
xchg
sbb
cmp
lcall
pop
add
xor
pop
in
mov
test
test
and
push
cld
testb
mov
pushf
push
cltd
enter
mov
jbe
or
nop
push
es
xchg
mov
mov
inc
stc
popf
rcll
push
pop
in
push
aad
call
dec
xor
out
jg
push
mov
out
arpl
mov
in
mov
inc
add
into
cmp
lea
popa
or
addr16
and
data16
nop
iret
daa
not
sub
rorl
mov
into
or
fsub
popa
add
jmp
lds
cmc
lret
fldenv
sub
out
leave
xchg
clc
dec
mov
in
jl
xchg
xor
fsubrs
sbb
ljmp
fcoml
inc
outsb
fsubp
fwait
imul
or
cmp
lret
dec
jb,pt
sub
mov
sarb
jns
lock
dec
xchg
loopne
jnp
mov
xchg
ficoms
and
pushf
subb
inc
js
into
or
punpckhwd
sub
or
jns
fs
xor
xchg
je
or
jle
das
dec
ljmp
fidivrs
lahf
sub
adc
fnstsw
dec
in
shlb
mov
xchg
nop
cmp
daa
push
jle
mov
push
sbb
testl
mov
push
cmp
lods
aas
in
push
fsubrl
mov
pop
pop
in
or
je
adc
lea
add
jnp
and
jp
add
cmp
jmp
insb
cltd
dec
sub
pushf
jle
aas
orl
ret
jne
std
mov
push
rorb
mov
icebp
push
and
adc
fcoms
or
or
aad
test
fisttpl
ret
fisubl
jns
jle
lret
aam
cmp
shlb
xchg
push
mov
sbb
stc
dec
xor
sbb
fnstenv
lahf
jns
mov
mov
je
aad
in
mov
xor
or
subl
jle
xchg
jg
adc
idivl
push
jnp
add
in
inc
push
add
addr16
adc
xchg
jmp
inc
aad
mov
cwtl
ljmp
scas
xchg
adc
psrad
xchg
out
push
mov
mov
daa
lods
dec
mov
pop
insl
push
inc
pop
jns
mov
lret
xchg
sbb
adc
pushf
or
sub
mov
scas
push
mov
outsl
fmul
pop
pmaddwd
mov
xor
sub
aas
fistpl
jmp
xchg
int3
inc
test
cmp
inc
loopne
jns
add
jecxz
jns
fninit
insb
les
repnz
int3
adc
imul
sbb
in
mov
ljmp
mov
and
lea
icebp
movsb
cmpsl
dec
jbe
sub
imul
pop
inc
aas
pop
jle
jbe
imul
inc
data16
loope
jbe
xorl
jb
dec
sbb
jecxz
jae
cmp
push
int
out
aaa
mov
sbb
pop
fsubrs
adcb
push
mov
mov
or
js
adc
pop
and
adc
cwtl
dec
sub
ds
jb
jo
andl
fsts
push
in
push
xchg
sub
jge
lret
pop
mov
inc
popf
xor
sbb
lods
xchg
aam
ljmp
stc
mov
xchg
xor
sarl
jns
xchg
out
rorb
sbb
loop
shll
mov
arpl
mov
xchg
lahf
lahf
jmp
xor
jnp
int3
xchg
ljmp
in
xor
jmp
call
fxch
pushf
stc
int
es
dec
enter
cmp
mov
loopne
jmp
pusha
mov
stos
xchg
jb
lea
aad
dec
adc
jl
sti
pushl
mov
cmpsb
sub
mov
daa
add
sbb
push
jecxz
arpl
test
sub
aam
in
out
pop
testb
cmp
lahf
cld
sbb
add
call
cmp
insb
sti
cmpsl
mov
or
sbb
cmp
push
jns
pop
push
mov
jo
pop
lcall
shlb
mov
repz
pushfw
int3
adc
push
cld
mov
fnstcw
mov
pop
add
loop
mov
jo
mov
cmp
mov
inc
xor
xor
ret
mov
xchg
sti
js
jno
ficoms
push
scas
insb
aas
out
mov
pop
lret
xchg
add
aaa
popf
add
sbb
insb
insl
sarb
je
push
dec
mov
xlat
orl
cltd
xor
out
mov
rorl
rcl
mov
ficoml
data16
push
ss
mov
cld
icebp
xlat
dec
xlat
scas
cmc
mov
mov
aam
pop
aam
insb
jl
mov
push
push
adc
pop
hlt
jl
lret
sub
add
das
inc
mov
aaa
jb
rcrb
cld
mov
push
in
test
xlat
addr16
sub
or
imul
jp
lcall
add
push
push
cli
dec
jmp
and
hlt
adc
mov
lds
fwait
xlat
popf
mov
cs
stos
ljmp
jae
fnstcw
ret
cmpl
mov
mov
pop
fs
lea
in
nop
hlt
cmp
or
cmp
dec
fwait
xor
xor
mov
inc
cld
mov
lds
xchg
xor
fnstsw
movsb
ja
mul
arpl
cmp
mov
cmp
scas
enter
mov
mov
mov
adc
xor
adc
mov
pop
cmp
or
negb
pop
shrb
fwait
cwtl
mov
mov
lahf
cli
add
or
jae
dec
jg
shll
pop
scas
push
jge
jge
inc
pop
add
jge
mov
inc
bound
cli
mov
movsl
jns
hlt
ret
xchg
pop
in
sbb
xchg
xor
lret
imul
rorb
sbb
inc
mov
test
mov
push
xorl
xor
movsb
dec
adc
gs
sbb
daa
ficoms
cs
mov
inc
into
rcrl
mov
mov
sbb
push
sub
and
xchg
imul
mov
in
in
mov
daa
inc
std
in
add
inc
enter
in
mov
inc
sahf
cmp
arpl
repnz
sbb
std
iret
mov
jo
mov
stos
outsl
mov
pop
mov
add
mov
rol
cltd
popf
ljmp
addl
jecxz
sahf
sbb
lcall
push
rcrb
and
or
lds
mov
shlb
loope
add
int
and
fimull
push
or
sub
add
inc
mov
adc
adc
inc
lahf
xchg
fisttps
out
mov
fisttps
push
ficoms
clc
adc
mov
or
cli
mov
or
cmc
rolb
jae
mov
mov
lret
je
pop
push
icebp
push
dec
mov
test
push
sub
aad
fisubs
xor
push
or
add
imul
add
addl
gs
mov
lahf
xor
in
push
add
sub
ret
cmp
dec
sbb
mov
addr16
cmpsl
or
or
add
in
cmp
mov
mov
xchg
inc
add
add
lds
jmp
pop
sti
in
ret
jbe
pop
ret
jg
cmp
mov
adc
xor
enter
sbb
aam
push
iret
test
int3
ror
xchg
rclb
insl
je
inc
in
adc
adc
arpl
mov
mov
xor
xor
lret
hlt
sbb
out
mov
mov
sarb
push
and
sarl
mov
push
shlb
aaa
push
mov
testb
jo
mov
test
mov
lret
stc
pop
push
je
mov
add
in
mov
sbb
cli
dec
ret
rol
mov
mov
outsl
shr
jmp
shl
mov
lea
gs
sbb
inc
mov
push
aas
jo
mov
push
xchg
jae
sub
sahf
test
lret
clc
icebp
or
cli
lret
sub
iret
rcll
insl
out
mov
arpl
aam
cmp
mov
jo
rcrb
xchg
outsb
std
mov
xchg
pop
inc
outsb
fisubl
sbb
pushf
addb
sbb
add
push
adc
and
dec
adc
mov
es
adc
or
fwait
daa
mov
ss
repz
ret
dec
movsl
into
sub
push
mov
mov
cmp
push
lahf
rcrb
cmp
bound
mov
mov
in
icebp
jl
lahf
clc
femms
push
je
bound
jnp
stos
fcoml
xchg
or
into
outsl
pop
jno
shr
lar
xchg
xchg
testl
add
fstpl
mov
sbb
orb
mov
leave
into
mov
scas
push
inc
adc
adc
xchg
push
add
ror
mov
xor
fisubrl
add
call
loopne
ss
nop
nop
pop
add
aaa
add
mov
dec
mov
pop
aaa
div
int3
out
aaa
fiadds
mov
jno
je
outsb
data16
pop
jo
hlt
mov
xchg
mov
lods
movsl
and
mov
xchg
sahf
mov
lea
loope
lock
dec
sbb
mov
push
lods
jnp
in
mov
jecxz
out
adc
jmp
lret
mov
jle
add
pop
stos
inc
pusha
xor
fs
inc
loop
mov
dec
lret
push
mov
and
inc
xchg
xchg
clc
push
xchg
adc
jl
in
inc
adc
dec
xor
ret
in
out
dec
adc
push
loop
mov
jno
jae
add
mov
cwtl
mov
stos
adc
fcmovnbe
xchg
push
lods
cmp
sub
lds
xor
rclb
in
in
pushf
loope
sub
movsb
and
xchg
in
xchg
rcrb
xor
fbld
fimuls
in
push
sti
test
push
orb
stos
push
sub
icebp
sarl
jno
cli
lahf
and
imul
mov
mov
shl
sti
push
dec
xlat
or
xchg
mov
fmull
mov
xchg
das
adc
les
or
pusha
jp
jecxz
in
cmp
in
insb
jae
mov
rorl
add
lea
sub
shr
insb
ljmp
fsubrl
in
fisubrl
mov
insb
jle
mov
sub
faddl
mov
fnstsw
and
cld
xchg
jl
sbb
mov
loop
movsl
mov
in
add
push
sbb
mov
jle
add
dec
addb
dec
sbbl
mov
and
pop
js
stc
lcall
sbb
or
aam
pop
mov
jle
mov
cld
imull
stc
xlat
mov
mov
add
push
xchg
inc
loopne
sub
repz
jb
mov
daa
outsb
loopne
cwtl
iret
mov
in
aad
lods
push
hlt
pop
add
push
je
popa
dec
das
stc
lea
stc
jno
dec
mov
fistpll
lret
dec
les
mov
mov
pusha
adc
or
mov
stc
sub
rcrl
push
lret
xchg
lea
ds
sub
iret
mov
add
adc
cmp
scas
lods
cmp
xchg
mov
push
test
or
mov
repnz
push
gs
mov
test
jg
popf
mov
jo
ss
mov
add
testb
stc
hlt
pop
mov
push
and
pop
jnp
rorl
mulb
cld
mov
int
xchg
dec
lock
movsl
ljmp
mov
mov
pop
jo
push
mov
insl
loope
fdivrl
std
mov
stos
into
rclb
into
xchg
xchg
inc
popf
mov
mov
dec
inc
or
mov
jl
into
mov
jmp
add
jno
sub
sub
lcall
inc
xchg
push
mov
mov
std
lds
je
inc
popl
inc
repnz
out
int
insl
adc
dec
fs
adc
out
push
sar
jl
aam
pop
dec
adc
arpl
cmpsb
and
dec
pop
mov
mov
das
push
in
mov
and
mov
cmp
sub
pop
js
scas
adc
adcl
insb
and
fistps
in
jmp
sahf
mov
pusha
cmp
cwtl
dec
scas
xchg
push
call
sbb
cld
lret
xor
xchg
push
or
sub
jg
mov
push
ljmp
pop
pushf
stos
mov
cs
or
lahf
idivb
xchg
mov
in
sarb
addr16
aad
popf
out
jne
dec
loop
add
sbb
fdiv
mov
sti
std
sub
dec
dec
enter
cld
aaa
int
cmp
dec
lret
push
sbb
adc
cmp
test
sub
clc
in
xchg
stos
sub
xchg
lea
ljmp
mov
ss
push
call
leave
mov
dec
out
jp
repz
xor
jmp
push
xchg
cld
xor
mov
pop
lret
and
mov
in
mov
dec
shrl
or
xor
pop
and
sub
jp
sub
repz
cltd
pop
adc
clc
fcmovnu
mov
mov
pop
in
fistps
push
and
in
mov
cltd
inc
jl
lock
mov
mov
push
cs
or
loop
inc
mov
popf
xchg
jns
ljmp
movsb
jmp
lcall
add
cli
jae
jno
aaa
add
cwtl
inc
pop
stos
daa
ret
fs
xor
gs
in
aam
out
sbb
cmpl
add
mov
cmp
push
or
mov
lret
hlt
test
sbb
sbb
and
pop
push
enter
or
sbb
icebp
cwtl
scas
mov
popa
mov
movsb
ss
ds
xchg
test
adcl
imul
lcall
push
push
iret
xchg
pop
fisubrl
sub
xchg
aas
jns
leave
adc
pop
pusha
inc
or
iret
push
mov
aam
repz
adc
into
aad
daa
out
dec
xchg
jb
pop
dec
cmc
jl
outsb
jl
fistpll
mov
cli
test
xor
xchg
adc
cmp
cli
enter
into
cmc
mov
ret
and
sub
sub
call
sub
aam
rcrb
mov
sub
push
mov
sti
arpl
ljmp
jecxz
leave
mov
sub
cmp
dec
rcll
mov
adc
aad
add
lods
or
mov
pusha
jle
out
neg
fstl
jp
add
jge
insl
lea
icebp
xlat
add
or
rcll
js
push
add
dec
adc
mov
ret
repz
ret
inc
pop
mov
fstl
add
int3
lea
shlb
cs
or
mov
add
jp
mov
sti
mov
out
stc
pushf
mov
push
fisubrs
sbb
inc
inc
std
shrb
in
add
adc
pop
movsb
cmpsl
or
inc
pop
adc
ja
adc
fdivl
out
insl
cli
xchg
xor
adc
cwtl
xchg
lods
cmp
clc
inc
fst
shlb
mov
cmp
loope
push
push
cld
mov
rcr
imul
push
lret
fwait
or
jbe
jbe
sbb
pushf
cmpsl
and
js
out
jl
cs
dec
mov
rorb
jmp
loopne
out
add
inc
jl
sub
lret
mov
pop
movsb
mov
add
js
adc
jg
jp
mov
clc
outsb
arpl
pushf
lods
and
push
inc
xor
add
mov
sbb
shrb
cwtl
in
pop
push
push
mov
std
sbb
sbb
xchg
fwait
pop
jecxz
mov
pop
jne
addb
mov
cwtl
jb
negb
fstp
adc
in
imul
jno
lret
mov
adc
hlt
in
sti
addl
lds
divb
sub
xor
out
jmp
mov
sub
movsl
xor
mov
sub
mov
std
xlat
mov
mov
sti
add
rorb
ljmp
pop
mov
int3
sbb
nop
dec
repnz
int
lcall
dec
addr16
and
mov
mov
and
pop
pop
mov
out
mov
xchg
dec
mov
les
das
add
jmp
into
jmp
or
xor
add
pusha
mov
int3
es
pushf
out
dec
mov
in
cmp
loope
jl
in
ljmp
stos
cmp
sub
daa
cmp
push
push
stos
mov
leave
dec
in
cmc
jecxz
ror
pop
sub
out
push
cmc
jne
push
clc
leave
lret
out
imul
add
mov
inc
imul
xchg
popa
sti
in
lods
cwtl
dec
mov
clc
aaa
sbb
clc
jl
xchg
jae
nop
stos
mov
popf
cmpsb
cmc
popf
lea
cmp
jno
dec
lret
cld
je
dec
idiv
stos
repz
divl
sti
dec
sbb
sbb
rcrb
pushf
jne
loop
test
out
pushf
into
xchg
xchg
xor
pop
lret
sub
inc
cmc
scas
or
xor
jl
ljmp
mov
xor
aaa
aad
es
jnp
inc
addr16
ret
mov
inc
inc
cmp
das
lcall
aam
dec
sbb
lret
movsb
repnz
mul
or
xchg
int
bound
pop
sub
cmp
mov
xchg
cmp
rcll
enter
jae
mov
aam
frstor
xor
or
mov
cmp
mov
mov
sub
mov
stc
loopne
xchg
lock
or
jnp
mov
jns
mov
call
sbb
repz
push
jmp
cmp
addr16
xor
xchg
mov
scas
mov
jne
jbe
mov
pop
push
cmp
sbbl
push
fnstenv
cli
push
pop
add
in
sub
les
insl
nop
dec
clc
in
icebp
mov
xchg
adc
lcall
push
adc
inc
cmp
pop
scas
or
cmc
lea
movsb
test
add
dec
fcmove
shlb
jnp
mov
cmp
and
scas
xchg
jge
cmp
mov
xchg
add
or
cmp
inc
lret
pop
popa
jl
faddp
loop
ror
jno
ss
dec
mov
inc
xchg
and
mov
jne
inc
inc
das
mov
xchg
xchg
pushf
push
or
pop
mov
inc
inc
mov
sbb
ficompl
xchg
popa
jle
idivb
mov
test
pop
push
cmp
ret
xchg
dec
jnp
aam
sarl
in
in
lret
sub
jb
or
mov
jo
cmp
xchg
insb
sub
in
movsb
pop
shrl
mov
push
scas
jns
inc
mov
xchg
jno
loop
sarl
aaa
pcmpeqw
sahf
pop
sub
arpl
adc
mov
mov
add
loopne
jmp
mov
leave
loope
mov
mov
jo
push
daa
or
cmp
inc
push
sbb
and
outsl
adc
xor
mov
data16
mov
jp
out
ffreep
push
fidivrs
xchg
push
aas
idivb
jg
std
sti
mov
sub
in
ret
jne
popa
mov
mov
icebp
mov
mov
popa
mov
movsb
sub
call
repz
mov
jge
push
iret
push
stc
idivl
aam
sbb
and
scas
mov
xor
xor
int3
mov
mov
xor
ljmp
movsl
lret
insl
fcomip
sub
mov
jle
inc
dec
rcl
mov
pop
jae
int3
mov
or
fisubrs
xchg
mov
popf
or
ljmp
jae
mov
push
xor
xor
loope
push
out
imul
sbb
dec
mov
loope
out
fmull
jmp
cmp
mov
andl
popl
ljmp
jae
jmp
dec
test
dec
ljmp
sub
cmpsb
mov
imul
jge
in
xor
mov
and
rcrb
add
pop
icebp
xchg
lds
jnp
cwtl
popa
ret
out
lret
arpl
std
mov
pop
dec
test
mov
cli
xor
add
mov
push
jecxz
into
dec
push
pop
push
jo
dec
add
subb
jne
lds
push
clc
xchg
movsl
mov
inc
out
jo
imul
clc
inc
pushf
stos
dec
dec
sub
adc
adc
andl
dec
jle
sub
mov
test
sar
repnz
stos
inc
mov
sbb
add
jl
xor
sbb
or
mov
xor
out
es
dec
mov
jle
insb
mov
inc
negb
int3
sahf
hlt
cld
adc
xchg
rolb
and
scas
shl
dec
idivb
lret
xor
and
pop
lea
push
ficoml
and
mov
mov
fcmovnbe
insb
push
jns
and
pop
cli
xchg
loop
lahf
mov
aam
out
xor
mov
mov
mov
faddp
or
test
push
adc
fs
jne
mov
mov
mov
mov
and
pusha
les
mov
pop
fldl
call
rorl
aas
std
nop
sbb
aaa
mov
test
mov
ds
jmp
and
mov
mov
cmp
xor
out
adc
ret
or
adcl
dec
out
or
mov
xchg
cmp
push
push
dec
data16
test
scas
jo
mov
inc
or
mov
mov
jb
jmp
ds
std
jmp
cltd
ret
cmpsl
push
inc
mov
adc
sub
test
sbb
dec
push
ss
push
inc
addr16
jg
ret
jecxz
push
mov
mov
push
sarl
lds
lret
mov
in
or
mov
icebp
mov
mov
dec
lock
test
push
mov
xor
lcall
movsb
mov
scas
mov
mov
mov
or
or
jne
sar
sbb
push
icebp
aas
mov
xlat
xchg
ret
mov
pop
jg
js
dec
jmp
mov
mov
lock
mov
rcr
ja
and
mov
fs
mov
es
push
ret
sti
sub
cli
sbb
xchg
inc
test
in
and
jb
in
inc
jmp
or
pop
mov
adc
sbb
bound
push
and
test
mov
or
aaa
mov
inc
arpl
cmpsl
in
sub
or
dec
xchg
ljmp
xchg
push
dec
mov
int
jns
jg
adc
andl
dec
in
cltd
jmp
adcl
out
jl
jecxz
test
or
rolb
mov
adc
cmp
out
mov
xor
and
mov
lods
ja
push
scas
iret
push
call
in
jle
mov
imul
lret
pop
sub
in
imul
mov
mov
and
xchg
mov
test
shr
negl
lods
lret
mov
dec
adc
loope
adc
sub
popf
xchg
mov
jns
push
push
sbb
xchg
jmp
xor
outsl
dec
lahf
jmp
iret
push
xchg
cs
ds
test
mov
hlt
dec
cmc
jmp
inc
xchg
xchg
icebp
fyl2xp1
sub
sbb
cmp
mov
test
mov
jmp
cwtl
rcr
bound
inc
in
push
jno
test
movsl
cs
out
mov
movsb
xor
fmulp
xchg
pop
or
test
pop
int
xchg
or
mov
cmp
in
sub
pop
mov
hlt
add
cmc
std
jmp
add
or
sarb
cmp
sahf
jecxz
mov
or
test
or
fwait
std
mov
push
fwait
iret
sbb
adc
inc
aaa
add
xor
or
fstp
push
adc
int
jl
lock
addb
push
aaa
int
xchg
mov
sbb
pushf
or
mov
insl
dec
repz
jae
xchg
xor
lcall
int3
enter
jb
add
shlb
inc
scas
jbe
xlat
mov
xor
and
loop
xor
int
test
shr
add
fdivrp
push
push
mov
mov
inc
push
xchg
ljmp
jno
xchg
sbb
cmp
ret
scas
dec
lods
ljmp
cmp
mov
ret
ss
or
inc
outsb
add
popf
mov
ja
mov
lcall
pop
sbb
mov
mov
xlat
outsl
sarb
out
cmp
int
sub
lds
xchg
lods
mov
sub
sti
mov
arpl
mov
mov
sahf
movsb
jge
sbb
push
adc
scas
push
cltd
inc
mov
js
or
bound
stos
popa
sahf
or
jns
sbb
push
xlat
imul
fsubr
test
loope
test
lds
ljmp
cmp
sarl
outsb
push
leave
aas
jb
pop
in
flds
mov
xchg
popa
inc
or
mov
lcall
orl
insb
sti
fst
mov
or
into
shll
inc
fsubs
jecxz
or
roll
mov
pop
dec
mov
in
mov
pop
int
xor
fldl
sub
push
push
nop
stc
xchg
rorl
push
cmp
mov
jg
adc
and
xchg
aaa
dec
cmp
ljmp
xchg
or
mov
aad
stos
repnz
xor
inc
dec
mov
cmp
xchg
sar
jns
and
sarb
sbb
test
jecxz
push
mov
shlb
adc
cmc
pop
loopne
or
jmp
pop
adc
jne
xchg
mov
xchg
xor
jne
lcall
xchg
loop
or
or
enter
sbb
nop
les
stc
sbb
fstl
mov
add
jbe
jno
imul
pusha
fisubl
sbb
scas
pop
cmp
cmpsb
int
mov
mov
iret
divl
mov
xchg
push
stos
jmp
movsl
es
dec
iret
cwtl
sbb
pop
xchg
lods
fisubs
and
cmp
stos
loop
shrl
inc
push
outsl
cmp
or
movsl
cmp
adc
mov
int
vsqrtsd
addl
mov
push
adc
mov
push
js
or
fst
in
int
and
movsl
rcr
mov
and
iret
lret
lds
call
cmpsl
sahf
sub
mov
popa
mov
fldcw
icebp
insb
pop
inc
mov
ljmp
sbb
xchg
sub
or
in
mov
test
mov
jmp
xor
inc
js
repz
icebp
jb
jle
rol
ss
loope
adc
test
movsl
out
in
int
sahf
push
leave
mov
sub
mov
loop
cwtl
mov
or
mov
sbb
cwtl
sub
dec
sarl
mov
aaa
mov
ds
sub
lret
leave
test
lods
addl
stos
fistpl
xor
arpl
or
add
pusha
lods
push
call
lods
mov
lahf
dec
mov
cltd
pushf
nop
loopne
mov
aaa
mov
add
ds
test
or
movsl
ljmp
rcrb
fstpt
in
cmpb
or
add
cmp
fstpt
jg
sarb
jns
mov
jnp
scas
loopne
mov
aaa
mov
ret
add
xor
xchg
jmp
push
leave
ret
ljmp
fidivrs
ret
aas
mov
jle
fnstenv
dec
mov
ret
or
mov
int
enter
push
dec
dec
mov
xor
or
mov
das
xchg
rep
lret
pushf
test
cli
fidivl
lea
or
or
rorl
push
cmpsl
loop
out
dec
aad
adc
in
xchg
or
test
loop
mov
div
stos
inc
or
das
xchg
add
push
push
jne
dec
and
jbe
adc
sbbl
icebp
call
dec
mov
mov
adc
and
pop
add
iret
jmp
mov
sbb
mov
out
movsl
push
js
dec
push
xor
adcl
fidivrs
loope
test
jle
sub
inc
mov
and
icebp
mov
cmp
xchg
and
cmpsl
rcrb
lea
cmp
push
xchg
stos
popa
sbb
xchg
mov
dec
and
ror
mov
cmpsb
or
mov
shlb
add
loop
sbb
mov
cmp
ljmp
inc
mov
push
in
sarb
movb
adc
inc
ret
out
mov
adc
shlb
adc
popf
int
add
push
cmp
popa
fwait
xchg
enter
jecxz
mov
insl
popf
aad
pop
jmp
mov
roll
ret
movsb
shlb
sbb
mov
aas
cmpsb
mov
push
in
scas
inc
mov
push
xchg
xchg
mov
adc
adc
pop
es
push
stc
cmpsl
shrb
adc
les
inc
inc
shll
nop
daa
test
daa
icebp
sbb
pusha
adc
mov
pop
orb
xchg
pop
sub
adc
or
out
lock
push
dec
push
pusha
daa
mov
mov
cmc
aam
inc
stos
ljmp
xchg
arpl
adcl
pop
sbbl
cmp
dec
mov
xchg
pusha
mov
and
out
inc
orb
mov
rorb
sarl
mov
ss
push
push
les
sahf
adc
push
sti
stc
scas
popl
xor
xchg
aam
add
jnp
cmp
xlat
xchg
sbb
dec
jge
scas
inc
fbld
adc
jecxz
aaa
pop
adc
mov
jge
mov
rorb
js
jns
ljmp
jp
shlb
adc
fxam
faddl
notb
rcl
xchg
mov
xchg
sub
mul
dec
mov
inc
lea
rorb
insl
sahf
push
xor
cmp
mov
mov
stos
xor
xchg
jmp
add
cmp
push
cs
rcrl
aaa
into
cmp
stos
in
dec
mov
mov
or
inc
ficomps
lahf
out
insb
add
dec
ror
test
pop
inc
mov
sahf
rcrb
cmc
add
pop
mov
arpl
mov
mov
sbb
notb
xlat
ret
mov
adc
lret
mov
mov
lahf
rcll
fmul
popa
push
jno
add
mov
sub
fs
mov
adc
inc
add
or
push
clts
out
dec
shl
jle
jle
jne
rorb
rcr
bound
adc
cmpsb
daa
xor
dec
pop
mov
mov
lcall
jnp
mov
or
sbb
push
movsb
mov
addl
xchg
ss
mov
sub
push
aam
stos
mov
mov
jno
add
mov
insl
add
push
inc
push
fdivrl
lret
xchg
sbb
pop
mov
sbb
movl
mov
mov
ret
mov
or
push
mov
shlb
mov
gs
jmp
hlt
std
xlat
flds
push
lods
add
shll
pushf
push
daa
sti
xchg
cli
fwait
int3
dec
jmp
and
jge
xor
pop
or
movsb
or
mov
jo
inc
mov
out
repz
adc
xchg
aas
push
cli
jae
daa
dec
es
push
ss
bound
scas
jg
or
dec
lea
add
push
jle
ret
mov
lahf
repnz
fwait
sbb
xor
mov
call
jp
int
cmp
add
jnp
mov
sbb
lret
sbb
adcb
cwtl
cmp
sbb
jge
add
shll
xlat
jecxz
adcb
mov
stc
shrl
or
nop
sub
dec
cli
in
jl
fidivl
iret
add
lea
sub
fstps
repnz
sub
dec
jns
jp
iret
rolb
cld
lock
add
sahf
mov
call
fldcw
mov
dec
jbe
fsubs
mov
call
xor
mov
dec
int
movhlps
xor
ret
shlb
dec
orb
pop
outsl
mov
and
sub
dec
aam
rcrl
shrb
jnp
inc
scas
sbb
int
xor
dec
push
shll
rorb
in
fwait
and
aas
push
shlb
test
mov
out
dec
int
xor
mov
cli
pop
and
in
out
cli
test
rcr
out
dec
outsl
or
fdivrs
in
push
sub
sbb
push
push
lcall
aas
push
pop
jp
loope
dec
scas
or
test
cmp
or
adc
mov
repnz
xchg
add
js
push
or
jae
xchg
pop
stos
fcomip
jae
int3
leave
insl
stos
mov
jae
daa
and
je
int3
ds
call
sub
rolb
cld
lds
jl
inc
add
adc
in
rorl
sbb
cwtl
add
stos
shll
inc
mov
inc
in
dec
mov
cmp
jp
adc
or
imul
scas
dec
notl
insl
orl
sbb
push
aad
push
sub
sub
sub
jb
enter
jbe
mov
lret
lahf
iret
adc
or
or
mov
cmc
mov
push
ret
pop
adc
xchg
cwtl
mov
int
dec
stc
push
movsb
imul
jno
movl
loope
into
test
jae
push
mov
jbe
popf
mov
cs
std
repz
lret
movsb
nop
mov
cmp
mov
pushf
fdivp
add
and
xchg
xchg
insb
push
cmc
sahf
int3
mov
sbb
adc
xor
jle
sbb
cltd
or
jge
sbb
int
cmp
stos
or
pop
ljmp
scas
into
cmc
sar
cmc
mov
into
fdivl
adc
scas
rclb
xorl
pop
nop
movsb
jl
mov
lcall
test
cmp
mov
js
imul
mov
or
ret
push
fcomip
jle
int
jo
mov
mov
mov
push
into
mov
aas
dec
std
pop
mov
jns
and
mov
jae
adc
sarb
aad
mov
pop
aas
cmc
mov
jbe
test
movsb
rol
mov
cli
std
sahf
bound
adc
push
xchg
push
int3
cli
dec
cli
fldcw
dec
push
rclb
mov
xor
outsb
fildll
push
mov
adc
sbb
stos
xchg
data16
xor
pop
inc
jae
ror
sub
adc
xchg
insl
or
cli
sub
icebp
jge
stos
mov
sub
xchg
scas
lret
sbb
imul
dec
xor
mull
jl
fdivrl
jbe
mov
xchg
in
into
jp
lea
mov
mov
std
insl
addb
sbb
idiv
test
mov
lret
mov
adc
bound
das
lret
cmp
or
jecxz
add
dec
into
cmc
ja
aas
sbbl
frndint
add
and
or
dec
cld
sarl
fists
rol
xor
or
inc
std
popa
mov
lds
notb
mov
jb
mov
mov
jp
loope
fstpt
fsubrl
adc
aas
lret
xor
mov
add
jmp
or
inc
fs
shll
rcrb
dec
add
cmp
popa
aam
lods
cmovge
lret
lods
stc
mov
adc
stos
int3
adc
mov
dec
hlt
cmp
mov
cmc
xorl
fnstcw
ret
push
jmp
outsb
in
movsb
sub
inc
inc
ds
lods
ror
inc
push
test
loop
sbb
mov
xor
lret
mov
das
or
or
adc
iret
addr16
jecxz
push
mov
jmp
enter
pop
cltd
mov
mov
in
pop
and
jecxz
sbb
sti
in
fcmovbe
shlb
roll
mov
rcrb
sahf
out
or
pushf
mov
mov
or
xlat
ljmp
cwtl
mov
in
mov
das
xchg
sbb
das
mov
sub
add
and
inc
fistps
iret
enter
int
lea
pusha
inc
sbb
mov
xchg
adc
roll
stc
pop
pop
cmpsl
nop
adc
cmp
mov
adc
imul
dec
or
in
ljmp
ljmp
cld
popa
rcl
lea
cmpsb
imul
roll
outsb
dec
lods
push
mov
fmul
sarb
ror
cmp
jo
mov
mov
rcr
pop
fwait
lcall
xchg
sahf
out
pop
inc
popa
jb
std
cmp
push
mov
push
test
outsb
cmp
aad
sti
mov
sbb
ret
and
add
pop
fnstenv
jge
mov
mov
and
pushf
out
sarb
ret
dec
xor
roll
shll
jb
test
jnp
mov
loopne
mov
dec
mov
and
in
xor
push
mov
sbb
setno
or
cltd
or
popa
cmovbe
cmpl
mov
add
lret
into
mov
inc
call
mov
mov
ret
aam
fisttpll
inc
mov
mov
dec
and
push
int3
xchg
aas
xor
pop
fdivp
pusha
dec
push
test
movsb
stos
in
cwtl
adc
push
outsb
mov
inc
or
jns
xchg
ja
mov
mov
fcomps
and
jnp
loop
xor
iret
pop
in
das
cmp
sbb
sub
cmp
aas
movsb
shl
cwtl
enter
js
mov
mov
jg
lods
fwait
mov
ror
xchg
nop
sbb
mov
in
xlat
sarb
lahf
push
xchg
mov
in
icebp
adc
push
push
in
fs
sbb
mov
mov
notb
jo
arpl
fsts
mov
popa
or
cmp
pop
lcall
test
fistpl
fisubrs
sbb
pop
jg
dec
popf
adc
rolb
jmp
sahf
jmp
in
or
push
lahf
sbb
bound
and
out
mov
cltd
push
imul
lcall
mov
je
fcmovbe
test
xchg
jae
aas
call
hlt
push
je
add
or
push
mov
fcmovne
test
cmp
cmp
gs
push
xchg
bound
pop
int3
mov
sbb
outsb
mov
lret
xchg
pop
mov
sbb
xlat
aad
rcrb
cli
loop
mov
rorb
insl
xor
gs
mov
aaa
sti
rorl
repz
xor
movsb
jns
mov
jmp
in
lret
mov
adcb
mov
fists
pushf
lret
nop
sub
mov
inc
aaa
mov
xor
bound
mov
jecxz
mov
mov
or
mov
pop
jno
out
mov
movd
shl
out
cmpsb
cld
shrl
negl
cmp
dec
out
cmp
xor
scas
fimull
pop
or
repz
xchg
pop
pop
inc
or
inc
stc
mov
fisubrs
rcr
jbe
add
roll
sub
mov
fiaddl
insb
out
les
cwtl
mov
fcom
mov
mov
mov
fistpll
push
sahf
ljmp
sub
xchg
movsl
test
lret
ds
mov
push
cmpsl
or
xchg
jle
ret
test
movsb
movsb
notb
or
mov
adc
jae
in
in
mov
or
in
lret
fistpl
rcr
cmp
repnz
lret
mov
xchg
or
lds
ja
sti
xchg
cmp
pop
outsb
sub
int
mov
or
add
cld
and
xchg
mov
sarl
push
clc
sti
xchg
ret
fwait
shlb
mov
les
jg
xor
addr16
and
push
hlt
xchg
xchg
jmp
and
lock
test
cmpsb
std
mov
nop
mov
adc
dec
mov
fcoml
or
push
data16
pop
out
out
pop
sbb
add
adc
push
dec
ds
push
xor
aad
std
and
sub
jecxz
js
inc
or
mov
imul
mov
xchg
jbe
sbb
inc
inc
int
sbb
or
int
mov
out
add
add
push
pop
loopne
fisttpll
leave
mov
add
pop
aam
das
inc
fadds
cmc
scas
mov
lods
mov
imulb
bound
fmul
mov
stc
mov
movsl
jno
or
mov
pusha
push
xor
cmpsl
cli
lds
int3
rorl
test
jnp
xor
mov
xchg
in
mov
mov
mov
jge
inc
stos
data16
addr16
dec
sbb
loopne
mov
add
aad
ret
mov
jb
mov
xor
imul
xor
cld
in
mov
dec
and
mov
jp
divb
int3
jle
mov
and
or
dec
jb
rorb
mov
xchg
push
dec
in
pop
inc
out
cmp
jae
push
test
mov
jns
mov
sub
cmc
fmull
jge
mov
enter
cmp
jp
rorb
mov
inc
cmc
sahf
dec
mov
adc
push
dec
add
sub
push
jle
and
shrl
push
test
loope
inc
adc
loopne
jo
mov
and
sarl
cmp
mov
mov
sub
orl
mov
int
jno
push
les
mov
push
aad
jge
sti
jg
add
mov
aad
fstp
xchg
test
mov
push
adc
cmp
lret
jns
or
rorb
add
cmp
push
stos
add
push
sbb
xchg
push
fwait
pop
not
sub
cmp
jne
loopne
xor
test
cld
pop
movsb
sar
pop
bsr
mov
cmpsb
out
popf
mov
daa
push
xor
nop
outsb
int
jae
mov
or
lahf
lds
pop
jl
dec
ficoml
inc
shlb
fnstsw
ret
adc
push
add
repz
inc
inc
outsb
mov
mov
std
jle
mov
lret
mov
jecxz
cmp
add
mov
int
scas
lret
cmpsl
incb
lods
xlat
dec
cld
and
cltd
gs
scas
fcomps
popa
in
fadd
shll
pop
dec
cltd
mov
xchg
mov
push
sbbb
xor
scas
dec
cmpsl
ret
mov
mov
adc
and
pop
out
pop
adc
ficoml
mov
jne
dec
add
or
mov
out
inc
loop
imul
int3
loope
mov
mov
adc
xchg
aam
cmp
or
cmp
flds
hlt
setl
add
test
loope
jnp
fld1
jge
insl
sbb
scas
or
sahf
lods
sbb
sbb
lds
mov
inc
out
sbbl
push
or
leave
xchg
push
sub
call
push
xchg
and
popf
fsubl
jle
push
add
sub
nop
into
xchg
dec
or
mov
or
fdivrp
scas
aad
jno
cld
dec
jbe
mov
pop
push
lahf
mov
cs
pop
int
ljmp
faddp
cmp
mov
add
add
mov
push
bound
mov
scas
sub
inc
adc
and
rcrb
cmp
dec
ljmp
push
pop
sub
or
mov
enter
mov
inc
sbb
mov
cld
fildl
mov
xor
xchg
dec
xchg
adc
mov
frstor
movd
sub
and
add
push
jno
sar
inc
cs
icebp
fldenv
fstl
and
cli
xchg
push
add
xchg
mov
jb
cltd
cmp
test
adcl
sbb
pop
sub
xlat
mov
cmp
sbb
jae
pop
sbb
mov
popf
in
mov
push
sub
push
xchg
flds
es
pushf
fmul
mov
and
xorl
jnp
lods
adc
add
mov
sbb
inc
clc
out
inc
inc
sub
push
fmuls
das
push
lahf
adc
fwait
jo
adc
in
mov
or
sub
xlat
add
xlat
fidivs
enter
mov
and
and
js
adc
cwtl
mov
cmp
add
adc
clc
adc
test
and
and
adc
xor
jns
lds
push
cmpsl
sbb
cld
insl
mov
mov
sub
mov
jl
mov
jle
shll
push
cmp
push
shrb
and
mov
fnstcw
out
test
dec
mov
loop
or
les
out
jb
xor
sub
xor
mov
sbb
insl
clc
dec
jmp
add
divl
lods
ret
mov
xor
jnp
and
sbb
sbb
cmp
in
mov
inc
adc
jmp
sarl
mov
loope
daa
or
sbb
jecxz,pn
js
mov
xlat
rorb
jp
ret
mov
or
iret
or
out
cmpsb
loopne
lods
push
jmp
pop
rolb
test
int
les
stos
jle
bound
insb
in
push
int
xchg
cmp
mov
push
fcomp
push
add
std
icebp
and
lds
jmp
mov
mov
dec
push
lock
cs
xor
pop
std
mov
ficomps
ds
cmp
fstpl
push
adc
jp
jl
xor
fldenv
push
mov
std
lret
cmp
cmc
push
jp
push
dec
and
mov
or
mov
fnstcw
add
or
leave
mov
popf
push
mov
inc
loop
rorl
or
mov
fsubrs
sbb
inc
dec
iret
lock
cmc
outsb
in
fdivrs
dec
ret
push
push
imul
jle
or
mov
inc
mov
dec
mov
int3
clc
lcall
pop
mov
dec
and
pop
add
or
out
stc
fsubrl
loopne
and
nop
mov
ds
test
rcl
dec
jecxz
xchg
fisttpll
mov
sbb
xor
outsb
jb
jg
imul
fildl
in
lret
sar
cltd
popf
fnsave
xor
adc
mov
decb
stos
pop
cmp
mov
jne
xlat
and
jmp
int3
mov
sarl
mov
jle
mov
test
mov
cmp
mov
xchg
cwtl
sahf
xlat
ss
xchg
repnz
loope
push
scas
stos
add
je
pop
jge
jecxz
mov
xchg
mov
loop
in
jecxz
adc
stos
aam
ret
add
jbe
or
pop
sub
xor
shlb
daa
int3
nop
fwait
adc
mov
repnz
mov
loope
jnp
push
xchg
fdivrp
adc
mov
outsl
or
call
aas
jno
call
rcl
icebp
insb
ljmp
sbb
xchg
loopne
outsb
lret
inc
sbb
mov
out
or
pushf
xor
frstor
jmp
ret
jnp
and
push
in
out
jno
dec
pop
divb
mov
add
cltd
xor
jns
dec
jmp
mov
aas
arpl
lahf
xlat
test
fldcw
lods
jb
test
test
inc
hlt
pop
and
enter
mov
mov
jle
fimuls
orl
dec
jnp
lods
pop
mov
add
shr
jns
int3
ja
jl
jecxz
popf
lods
push
lcall
sarb
mov
jne
sarb
lret
mov
lds
lods
cmpsl
std
jmp
cli
aam
popa
notb
in
loopne
sub
or
pop
lcall
push
or
xchg
add
xchg
dec
imul
out
push
cwtl
shl
jecxz
lahf
mov
lods
pusha
adc
cmp
mov
jae
sbb
xchg
stos
dec
in
call
sti
int
adc
test
xchg
in
adcl
or
cmp
add
mov
add
mov
data16
mov
pop
rclb
mov
mov
mov
cmp
dec
or
mov
cmpsb
pop
fisubrl
ret
ret
dec
mov
out
push
sub
out
bound
mov
mov
or
arpl
pop
outsb
rcr
arpl
sti
or
out
add
sub
mov
aam
add
sub
sbb
insl
fpatan
in
bound
dec
lret
mov
pop
push
push
enter
nop
add
cmp
xor
cmp
cmp
clc
or
cmp
int3
int3
mov
mov
push
ljmp
mov
xor
popa
or
lret
inc
sbb
movsb
add
out
movsb
call
pop
pop
pop
pop
int
orb
shr
pusha
or
sub
popa
pop
cmc
outsl
cmp
lahf
cmp
sbb
fwait
sbb
ja
mov
and
aas
xor
jne
jecxz
shll
dec
mov
add
jmp
fdivs
add
outsb
mov
push
or
imul
cmpsb
dec
xor
cld
cmp
call
std
insl
loope
adc
adc
popa
cmp
adc
push
ljmp
fsts
lds
mov
pop
sbb
or
aas
push
and
in
push
jmp
std
ljmp
bound
fldenv
jmp
idivb
mov
out
shll
add
sbb
add
push
mov
and
movsb
fstpl
sub
enter
inc
test
mov
call
lock
mov
insb
sub
add
push
cmp
pop
xlat
add
daa
ficoms
xor
int
dec
enter
pop
mov
sbb
xlat
mov
add
dec
push
mov
adc
push
push
sahf
xchg
adc
daa
inc
sub
xchg
or
aam
or
cmp
inc
ss
push
add
clc
dec
push
xchg
loop
cmpsb
lds
fdivrl
dec
jmp
xor
loope
aaa
sarb
dec
adc
cwtl
repnz
jne
sbb
push
movsl
and
mov
in
pop
stos
ret
in
lret
lcall
fisttpll
int
cli
sbb
add
repnz
jnp
cmp
xchg
les
and
adc
mov
mov
cltd
lahf
xlat
cmp
mov
fimuls
loopne
pop
in
lret
hlt
fcoml
repz
lret
mov
outsl
jmp
cmc
dec
aam
outsl
mov
out
stos
mov
lret
or
in
mov
or
mov
xor
das
cmpsl
jmp
ret
lds
fstl
mov
or
aas
int3
dec
mov
lahf
test
dec
mov
loop
popf
js
in
imul
cmp
cmp
jle
adc
add
ret
mov
lret
in
inc
jecxz
popf
test
mov
ds
daa
adc
rorl
mov
dec
imul
jp
push
jge
enter
xlat
jnp
mov
ret
lret
dec
jp
mov
mov
aam
decb
mov
dec
cmpb
mov
sub
stos
mov
inc
stos
push
mov
mov
mov
dec
push
dec
pop
cmpsb
das
outsb
loop
dec
pop
cltd
shll
mov
sti
inc
hlt
inc
iret
arpl
add
or
xor
pop
aam
xor
pop
xchg
sar
mov
jbe
push
mov
pop
push
jl
sub
inc
in
insl
mov
pop
lret
inc
add
adc
xor
push
fmul
insl
fwait
lret
cli
jl
fsubp
dec
dec
shrl
lret
xor
push
loopne
mov
aaa
stos
inc
dec
outsb
inc
push
mov
mov
mov
jns
sarb
pusha
jno
test
add
xlat
xchg
mov
int3
pop
xor
movsl
xchg
fisubs
dec
lahf
xor
mov
mov
test
or
movsl
pop
mov
or
jne
push
mov
push
mov
test
aaa
jmp
rclb
filds
shrb
mov
into
jnp
xchg
neg
mov
pushl
sub
xor
push
jmp
icebp
fucomip
mov
mov
repz
cltd
jnp
sti
lahf
xchg
sar
xchg
mov
jno
in
or
iret
jbe
outsb
dec
aad
imul
dec
jmp
les
push
cmp
aad
int
in
mov
add
push
in
insl
mov
cmp
mov
in
mov
data16
xorb
mov
mov
cltd
mov
stos
jle
fwait
fwait
mov
mov
inc
fisubrl
fisubrl
dec
push
cmpsb
jl
outsb
mov
jnp
push
cmp
lret
loop
cmc
jns
das
dec
push
icebp
xor
mov
int
push
xchg
ret
out
call
into
mov
xor
mov
push
loope
hlt
in
pop
jl,pn
cmp
push
mov
std
mov
and
dec
rcrl
add
xlat
xchg
sub
into
nop
push
test
inc
jno
xorl
nop
adc
add
lret
adc
bound
sub
dec
jl
xchg
js
pop
fistl
mov
jge
loopne
and
lcall
jecxz
lods
push
lock
pop
fisttpl
and
jnp
dec
dec
arpl
gs
mov
fstpl
mov
stos
lods
cmp
fbld
mov
pop
shlb
out
into
pop
push
push
les
push
and
cmp
int
jbe
stos
push
adc
mov
pop
nop
jp
or
in
mov
mov
pop
push
ljmp
and
jge
jge
nop
fistpll
dec
les
stc
mov
cmp
repnz
les
dec
test
lods
out
push
pop
inc
sti
or
aam
jo
mov
lcall
inc
popa
push
bound
dec
movsb
jae
xor
cmpsb
test
ds
jmp
sbb
fsubs
xchg
loop
cld
fldt
push
mov
imul
add
loop
nop
loopne
adc
xchg
enter
lret
shll
add
into
mov
xor
cmp
sub
mov
loop
stc
ljmp
push
or
sub
adc
lock
stc
cmp
pushf
loope
lret
xor
cmpb
sar
lock
push
inc
pop
cmc
in
mov
mov
pop
stc
ror
adc
cmp
sbb
incb
ret
pushf
stc
jne
jnp
loopne
push
cmp
mov
mov
mov
mov
out
sarl
jg
sub
pop
rolb
pop
jge
cmpsb
mov
mov
dec
testl
scas
aad
int
lret
sub
stc
fdivp
cld
pushf
mov
mov
iret
push
or
test
and
int3
fs
dec
fiaddl
inc
testl
repnz
push
mov
mov
or
faddp
das
inc
dec
push
lahf
or
popf
pop
jmp
xor
sbb
mov
push
adc
out
pop
cmp
bnd
sub
cld
sarb
ret
xor
ja
testb
add
adc
mov
mov
and
xor
dec
imul
push
mov
jnp
sarl
lock
loop
xorb
push
and
mov
or
into
mov
clc
mov
xchg
popa
xor
push
lea
jmp
fisubs
pop
aad
sbb
cld
mov
xchg
ss
dec
jecxz
fwait
jge
sub
add
mov
mov
mov
mov
in
jnp
or
shrl
xlat
pop
lea
push
mov
add
ljmp
pop
mov
mov
fdivrl
push
imul
push
or
lds
inc
fstp
mov
push
aam
xor
mov
fscale
je
sbb
xor
cltd
dec
pop
mov
in
sti
inc
es
in
and
stos
aad
sbb
in
ja
add
in
pushf
add
add
mov
into
mov
out
sub
push
fdivl
pop
dec
repz
sbb
mov
mov
fsubp
fucomi
cmp
mov
je
fiadds
inc
pop
dec
add
mov
cmpsl
push
movsb
lea
mov
addr16
or
sbbl
lret
mov
ror
push
cmp
cltd
hlt
das
mov
mov
out
jle
les
out
pushf
jecxz
ss
adc
jge
mov
adc
imul
adc
sbb
ret
push
lds
inc
sbb
or
xor
push
mov
cmp
add
cltd
cmp
fisttpl
add
mov
and
shl
loope
dec
mov
adc
arpl
lret
mov
sbbl
mov
jo
xchg
pushf
shlb
xor
pop
pushf
cmp
out
jne
jne
std
xchg
xchg
pop
mov
pop
mov
xor
movsb
icebp
stos
sub
cmc
js
dec
jb
fimull
mov
out
in
sbb
call
lods
xor
dec
or
test
or
jle
mov
clc
jae
lret
lods
dec
lods
enter
mov
push
push
push
rol
sti
gs
gs
int3
mov
mov
sub
popa
add
xchg
xor
je
cmpsb
fs
jno
insl
jne
ljmp
outsb
repnz
orl
shlb
sub
je
pxor
xchg
add
mov
and
std
cmc
add
xchg
add
test
cmp
mov
fildll
subl
mov
mov
inc
daa
fsubrl
test
push
popa
push
push
bnd
and
or
add
and
dec
jg
cmp
or
xlat
sbb
mov
push
ljmp
pop
out
cs
add
jns
adc
js
cmp
sbb
push
jae
add
lods
aam
push
es
fstps
int
sbb
shrl
cmc
subl
mov
sub
cltd
iret
in
add
hlt
or
aas
mov
xor
insb
out
arpl
call
ja
shlb
sub
push
movsb
sbb
out
inc
out
mul
or
enter
mov
sub
ljmp
sbb
jo
insl
ss
and
push
pusha
push
xchg
je
jge
sbb
mov
out
inc
mov
mov
sti
ss
xchg
mov
pop
mov
dec
xorb
sbb
xorl
xchg
in
std
addr16
xchg
fcmovu
aam
sbb
test
stc
aas
scas
pop
mov
jns
sbb
jmp
inc
frstor
sbb
out
jbe
inc
mov
add
mov
out
mov
popf
fcompl
popf
dec
int3
inc
sub
sarl
aaa
cmp
lret
mov
cmp
push
lahf
add
insb
mov
pop
jg
pusha
jg
cmp
cltd
dec
aas
adc
xchg
aas
fsubrl
int3
rolb
stos
out
out
sub
in
mov
nop
jo,pn
incb
int3
cmp
lahf
imul
iret
ljmp
lods
mov
and
and
adc
repnz
add
cltd
and
push
mov
jp
rcr
mov
push
pop
mov
sbb
ja
movsb
jne
or
and
xchg
xchg
pop
xchg
jg
cli
xor
mov
arpl
mov
pop
mov
fcomip
pop
mov
stc
jb
insb
popa
xchg
adc
adcb
push
lods
enter
testl
movsl
push
and
stos
test
in
or
add
pop
popf
pop
sub
stc
test
loopne
lret
push
int3
aas
jge
mov
rorl
dec
rcrb
repnz
jp
add
scas
enter
push
cmp
dec
add
adc
cli
popf
mov
xchg
ret
arpl
add
dec
mov
cs
sahf
jmp
mov
arpl
mov
lods
mov
and
jmp
xchg
xor
int3
pusha
sbb
inc
mov
push
mov
cli
xchg
test
popa
and
mov
call
fucomi
jb
push
mul
mov
mov
add
sti
iret
sbb
call
mov
stos
pop
or
lods
jno
and
adc
cmc
and
and
mov
xchg
mov
lea
sbb
cmova
call
push
sbb
mov
ret
out
jno
add
mov
shrl
mov
fisttpll
jg
and
lahf
in
mov
inc
inc
xor
inc
shr
pop
dec
test
fidivl
or
aad
jle
sub
and
inc
imul
cmp
push
dec
adc
xor
jne
sbb
sbb
or
in
adc
rorl
dec
sbb
push
xor
movsb
mov
movsl
ret
lahf
int
xor
sbbb
call
jo
sub
add
and
mov
int3
mov
jmp
xchg
or
mov
push
push
mov
lret
in
lret
mov
scas
mov
push
hlt
adc
sub
jb
fiaddl
add
push
xor
icebp
repz
pop
fdivr
sbb
jnp
push
and
mov
sbb
sub
jecxz
es
xor
gs
adc
out
jmp
stc
movsb
mov
push
cli
cld
jg
xor
dec
sub
add
and
push
test
repnz
push
into
mov
xlat
and
jnp
ljmp
inc
leave
pop
scas
pop
dec
cmp
sbb
add
cmp
cmp
push
adc
stos
fnstenv
enter
cmpxchg
leave
jnp
sub
mov
add
iret
mov
ja
push
inc
xchg
jo
fcomps
iret
and
mov
dec
cmp
shrl
pop
mov
sbb
imul
stc
sbb
cwtl
inc
fnstcw
xchg
mov
rcll
enter
pop
pop
or
jmp
sub
popa
add
push
movsb
mov
mov
leave
jns
stc
ror
into
in
mov
into
cmp
inc
mov
and
mov
lea
jo
sbb
ljmp
cltd
call
cmpsb
out
add
ds
mov
inc
mov
dec
and
cmp
jmp
lock
add
xor
mov
stc
les
cmp
mov
ficoms
push
int
inc
xchg
mov
cmp
aas
movsb
mov
fnsave
sti
adc
mov
scas
xor
sub
cmp
andl
push
movsb
add
call
jle
popa
lahf
bts
add
and
mov
push
xchg
fstpl
inc
push
hlt
pop
test
push
jne
rcrl
xchg
inc
scas
adc
loope
adc
add
lock
sti
sarb
pop
icebp
imul
push
push
push
ret
stos
subl
int3
and
lea
push
pop
mov
in
push
lock
sbb
popa
and
popf
jl
jbe,pt
add
notl
pop
mov
pushf
jo
jp
mov
bnd
xchg
xor
or
xlat
add
dec
or
inc
jmp
xor
jbe
fwait
cmp
push
mov
pop
iret
cld
mov
push
and
sbb
pop
lea
pop
daa
xor
decb
int
insb
lock
testl
ss
in
add
sbb
add
add
fiaddl
xchg
rcrl
push
fdivrl
rcrl
pop
sbb
mov
xor
movsl
mov
add
mov
into
push
aad
cwtl
sbb
fwait
dec
cmp
or
mov
icebp
fdiv
imul
sub
imul
roll
and
jae
jae
and
xchg
icebp
lods
xor
ss
bswap
fcmove
test
movb
imul
hlt
and
mov
push
stos
bound
adc
push
jnp
outsb
ret
inc
outsb
cld
das
mov
cmp
mov
and
push
mov
popa
inc
hlt
pop
add
cmp
inc
repnz
aas
loopne
pushf
stos
jge
pusha
loop
aad
mov
loopne
mov
mov
lods
dec
dec
icebp
int3
pusha
std
ffreep
add
add
fimuls
out
cmp
and
scas
push
push
or
sbb
lea
add
dec
push
fbld
push
jecxz
out
lret
xchg
dec
jmp
outsl
repz
adc
int3
lods
adc
and
add
or
repnz
aad
or
or
xchg
push
mov
jmp
aad
shr
pop
xor
aam
pop
push
out
sub
xor
js
pop
jl
inc
cmpsl
jbe
fs
lahf
fcmovnbe
lret
sti
dec
mov
mov
ficompl
mov
iret
mov
in
outsb
fisubrl
aaa
insl
div
mov
out
fsubrs
xor
popf
adc
movsb
pop
sub
cmp
lock
data16
mov
xadd
jb
jae
repnz
and
and
sbb
push
mov
iret
fucom
pop
sub
divl
mov
push
mov
jns
mov
mov
mov
inc
add
fidivs
loope
lret
add
mov
ja
decl
mov
push
and
xchg
fcoml
stos
iret
cmp
ret
xor
sub
in
stos
push
mulb
add
movb
imul
lcall
cli
fadd
jg
dec
and
lcall
pop
xor
push
pop
aam
sbb
pushf
sahf
xor
xchg
aaa
add
imul
add
mov
pushf
mov
testb
or
cld
pop
pop
adcb
xchg
shl
inc
or
decl
enter
mov
inc
shrl
ds
inc
insb
adc
daa
in
sub
stos
cmc
xchg
add
mov
mov
aam
dec
lcall
ret
jns
mov
and
pop
push
vpaddb
cltd
push
mov
fildl
xchg
aad
add
pop
icebp
stc
xchg
adc
sub
fildll
cld
or
xor
aam
xchg
sbb
add
mov
shll
ret
xchg
testb
leave
inc
inc
inc
cmp
leave
pop
mov
std
mov
xchg
stos
repz
or
in
sbb
sti
cmp
jle
sbb
stos
add
and
jp
xchg
mov
pop
dec
mov
loopne
ret
cli
stc
test
ljmp
movb
rorl
jecxz
scas
in
push
dec
mov
mov
clc
add
mov
xchg
mov
cmpsl
mov
xor
fs
xchg
outsb
xor
push
divb
push
aas
cmp
push
lds
call
lahf
outsb
lret
test
fsubl
je
int3
sbb
sub
ds
aaa
repnz
dec
add
xchg
loop
pop
lahf
cmpsb
loopne
sub
rorl
imul
jns
outsl
jne
stos
cmp
push
test
pop
insl
scas
mov
inc
pop
xor
sub
push
movsb
mov
sub
xor
and
sbb
dec
std
das
adc
jo,pn
loop
icebp
dec
popa
clc
add
mov
mov
std
xchg
jge
or
gs
arpl
lea
jge
mov
sbb
in
push
sahf
add
outsb
jns
jg
mov
shll
fidivs
sub
mull
push
std
adc
loop
add
sbb
jmp
dec
xchg
shl
or
or
shlb
stos
lds
pop
dec
jle
stos
ljmp
std
shl
aaa
add
cmp
dec
jg
cltd
sub
sbb
repnz
mov
negl
arpl
shrl
mov
fdivrs
lcall
mov
cmp
shlb
dec
test
in
mov
and
ds
cmp
mov
in
xor
pmaddwd
inc
outsb
dec
inc
and
mov
lds
mov
push
repz
pop
push
in
ror
inc
in
aam
lret
stos
add
in
fbstp
ja
or
out
jmp
sahf
mov
pusha
insl
mov
adc
clc
das
lods
mov
lcall
fisubl
lock
gs
mov
mov
dec
scas
pop
aad
mov
insb
movsl
push
lds
cwtl
test
inc
fwait
xlat
jmp
sbb
cmp
xor
lods
and
inc
sub
mov
mov
push
ss
sub
sti
mov
push
lods
mov
pop
icebp
mov
xchg
les
and
pop
stos
dec
loopne
pop
rcl
fisubl
int3
test
or
std
sub
dec
lods
stc
cmp
sarl
int
lcall
test
out
ljmp
sub
ficoms
out
cmp
stos
stos
notl
popf
or
mov
push
insl
pop
xor
mov
loop
xchg
xor
dec
inc
enter
adc
mul
ljmp
dec
mov
dec
mov
xor
mov
xchg
stc
mov
gs
rdpmc
shr
out
nop
nop
rcrl
aad
inc
mov
pop
out
mov
xor
rcl
xor
in
in
lock
je
sbb
sti
pop
pop
je
ss
aam
iret
xchg
stc
mov
adc
mov
cmp
mov
push
cmp
out
xor
imul
rcrb
xor
in
cs
inc
lock
mov
xlat
ss
pushf
sub
or
ja
test
adcl
push
mov
and
test
ret
or
clc
inc
mov
cltd
xchg
lock
cltd
mov
out
mov
sahf
in
jmp
inc
or
cmc
mov
cli
mov
subb
mov
pop
mov
ficoml
rolb
sub
pop
mov
movsl
sbb
or
and
popa
ljmp
je
push
lods
in
cmpsl
and
fcmove
fdivs
fisubs
scas
mov
lahf
jnp
push
sbb
jp
sarb
pusha
jae
stos
and
test
xor
fmuls
mov
jbe
sub
mov
fwait
xchg
xchg
dec
loopne
xor
call
sbb
push
or
loop
stos
fcoml
sub
mov
andb
fildl
pop
jg
in
mov
inc
jmp
mov
mov
xchg
les
push
std
pop
xor
xchg
ret
lret
cmpsl
jns
add
jb
icebp
stos
imul
bound
dec
outsl
xchg
pop
push
mov
ja
dec
flds
mov
movsl
repnz
xlat
mov
jb
mov
fs
rorb
lds
cmp
cli
cld
stc
in
inc
adcl
sbb
pop
loope
leave
mov
cmp
lds
loop
lock
push
sub
sbb
daa
cmpsb
xchg
dec
jl
mov
shlb
iret
jmp
jmp
sar
repnz
enter
in
dec
js
add
mov
or
das
bound
mov
mov
outsl
jb
rcll
sub
dec
mov
shl
jle
ja
pop
sbbl
and
and
outsb
jbe
es
or
push
fbstp
xchg
push
add
or
adc
cld
ret
shll
or
inc
mov
in
mov
test
or
push
imul
or
loop
mov
lods
filds
lds
out
cwtl
mov
jo
fld
popa
loope
cld
aas
lcall
repz
add
dec
inc
test
das
dec
cmp
sbb
clc
out
xchg
shrl
push
xchg
xor
test
inc
sub
mov
stc
sahf
sbb
jne
cs
xchg
mov
inc
mov
test
or
xor
lahf
dec
in
sbb
or
stos
cmp
sbb
or
adc
out
in
ds
sub
int
into
lret
leave
xchg
out
in
mov
mov
mov
xchg
lahf
cmp
add
mov
pop
xchg
ficomps
mov
cmc
popf
int3
rclb
pop
dec
ret
into
mov
enter
lret
add
int3
jmp
out
xchg
pop
cmp
jecxz
outsb
frstor
imul
xchg
bound
jb
xor
in
lahf
cmpsl
cmp
jle
les
imul
adc
cmpsb
fwait
lret
add
sbb
xchg
sub
xlat
lret
mov
mov
pop
cwtl
dec
xchg
push
ds
popa
pop
sub
add
dec
fucom
mov
jne
aam
popa
lock
sub
pop
jmp
cwtl
xchg
mov
decl
lret
fisubrl
push
out
dec
mov
mov
lahf
ds
sbb
mov
and
mov
jne
push
mov
outsb
movsb
stc
jl
jecxz
ljmp
cmp
pop
mov
sub
call
cmp
arpl
jle
jmp
mov
or
mov
cltd
xor
sub
cmp
jns
push
cmp
mov
pop
and
jae
es
add
and
sub
popf
movl
ljmp
loope
scas
mov
xchg
rcll
cmp
aam
xchg
push
out
mov
filds
int
loop
repz
or
pop
loope
mov
mov
cmp
fwait
mov
sub
sub
loope
mov
repnz
outsb
popl
aad
dec
inc
mov
aaa
movsb
bound
jo
jg
sahf
jae
xchg
ror
inc
aaa
rclb
es
arpl
popa
cli
xchg
jle
adc
shll
push
dec
cmpsl
in
arpl
sar
dec
push
sbb
divl
cmpsl
or
mov
sub
loope
xor
dec
test
mov
fsubrs
or
mov
xchg
pop
dec
pop
cmpsl
or
xchg
push
add
cmp
std
mov
rcrb
push
xor
gs
or
pop
mov
mul
push
ror
ljmp
cli
mov
and
jmp
pop
inc
xchg
push
icebp
and
fwait
xchg
push
jns
rolb
mov
xor
inc
jno
sbb
jnp
test
cmp
inc
push
ret
fldt
sub
fwait
jns
sbb
add
shll
xchg
pop
in
icebp
ret
aam
popa
repnz
adc
mov
push
and
sti
rcl
adc
aam
push
add
loope
xchg
and
stos
int
insl
scas
sub
dec
push
popf
cltd
lahf
sub
push
jno
sbb
and
clc
lcall
xchg
jg
jl
mov
iret
outsb
aad
loop
pop
insb
mov
mov
cmpsl
sub
rcr
test
mov
ljmp
and
cmpsl
imul
inc
push
syscall
sub
cmc
aam
adc
mov
mov
add
repz
cmp
adc
xchg
arpl
mov
repnz
pop
push
in
aas
or
fstpl
iret
lret
stos
jle
push
xchg
rorb
loope
inc
in
addps
jb
lcall
in
cmpsb
and
int
jle
cwtl
inc
bound
mov
fidivrs
sbb
rclb
mov
xchg
repnz
sub
aas
cmp
stos
ret
xchg
pop
loop
and
cmp
or
adc
and
jbe
cmpb
test
daa
out
into
in
fs
call
popf
mov
mov
xor
imulb
push
pop
mov
movsl
push
jp
dec
cld
jge
jl
push
push
je
mov
push
jo
pop
rcl
std
cli
das
int3
xchg
fnstsw
lock
lea
loopne
mov
mov
out
daa
cmpsb
sti
loop
shll
stc
add
cmp
sbb
mov
xchg
imul
fnstcw
mov
mov
xchg
fmull
cmc
jl
imul
fs
imul
lock
je
sub
fucomip
or
push
int
aaa
pop
jo
adc
mov
pop
mov
inc
mov
sub
lret
fisttps
dec
jl
icebp
pop
inc
xlat
mov
pushf
pop
xor
add
popa
cmpxchg
lods
insb
cld
into
idiv
dec
lds
mov
xlat
push
mov
mov
sqrtps
xchg
pop
sub
test
shll
jnp
test
daa
or
mov
call
lahf
push
cmp
xor
or
sbb
jb
and
insl
rolb
ljmp
popf
in
inc
rcll
push
cmp
call
lcall
and
pop
ficomps
adc
cmc
hlt
inc
enter
sbb
push
add
arpl
jns,pn
js
test
cltd
push
sbb
loopne
pop
inc
ret
lods
movsb
cs
dec
cmp
out
dec
sbb
xchg
insl
adc
sub
cmp
push
lds
xor
lcall
popa
mov
mov
adc
dec
dec
jge
mov
xchg
call
mov
adc
arpl
mov
jle
orl
pop
ljmp
scas
xor
push
sub
fmuls
cmc
jl
aas
ss
test
lret
xor
arpl
ja
cli
mov
jo
push
addl
outsb
aas
xor
add
ret
addl
rorb
xlat
mov
pavgb
out
outsl
call
mov
data16
call
cmp
sbb
nop
xor
cmp
pop
dec
mov
mov
mov
fldenv
or
add
cs
push
mov
add
loopne
or
lods
fcom
pop
sar
jae
nop
mov
nop
movsl
fwait
daa
adc
icebp
push
leave
pop
out
mov
or
inc
roll
xor
cmc
cmp
divl
and
pop
mov
and
jnp
jb
mov
fs
mov
dec
inc
out
loope
shr
mov
mov
decb
dec
sahf
divb
iret
inc
movsb
loope
pop
lods
cmp
ret
call
scas
xor
andb
mov
arpl
or
jg
pop
xchg
jecxz
inc
out
xchg
insb
push
cmc
aam
data16
cbtw
push
inc
es
pop
cmpsl
shlb
dec
loop
mov
fmul
out
cli
stc
adcb
pop
je
mov
lret
mov
fld1
add
mov
and
xor
jmp
xchg
or
sbb
rol
cmp
sbb
jle
mov
jbe
push
jne
lock
je
pop
push
mov
loope
push
add
test
test
fistl
loop
jo
std
enter
jae
cmp
dec
aaa
pushf
addl
xchg
jl
movsb
and
adc
pop
mov
pusha
push
cmpsb
or
ja
dec
xchg
loop
dec
push
xor
xor
adc
pop
cmpsb
sub
das
es
mull
repz
or
addb
vpshufhw
out
or
adc
mov
dec
mov
add
pop
or
pop
mov
or
daa
jge
rcr
or
aad
xlat
cmp
sub
jno
stos
dec
lret
stos
int
jp
mov
adc
lods
mov
lock
int3
xchg
sbb
fstpt
leave
mov
sbb
aam
add
and
bnd
lret
fisubs
pushf
and
cmp
pop
mov
xchg
jp
es
hlt
insl
mov
sarb
cmpsl
dec
mov
rolb
sub
adc
push
lods
xchg
jmp
mov
sub
mov
xchg
aam
std
and
loope
push
mov
xor
lods
fsubl
mov
mov
cmpsb
test
ljmp
and
into
pop
push
and
mov
sub
or
jge
ret
call
shll
data16
jne
popl
ljmp
and
adc
loope
in
sbb
cmp
cmpsb
fisttpll
dec
xchg
and
mov
mov
popf
sbb
sub
ljmp
pop
inc
mov
or
fdivrp
fwait
aam
out
dec
push
testb
xchg
xor
adc
in
packsswb
mov
mov
pop
jle
xchg
lret
mov
and
ss
pop
sti
fcoms
mov
pop
sahf
insb
push
mov
cmp
xor
mov
xchg
fwait
lret
lret
jl
lret
xchg
mov
mov
inc
or
sarl
mov
ds
xchg
mov
dec
insb
arpl
mov
xchg
bound
xchg
out
loope
sbb
test
nop
mov
scas
mov
dec
dec
scas
imul
or
sbb
pushf
push
rcr
adc
pushf
mov
insb
sahf
xchg
add
adc
cmp
imul
stos
cmp
or
decb
jg
xchg
arpl
adc
and
cmp
mov
cmp
mov
add
jno
or
add
into
xlat
xlat
dec
daa
sar
dec
push
dec
xchg
in
add
pop
push
adcl
mov
out
mov
fiadds
in
dec
iret
cmp
mov
test
sbb
das
gs
sarb
addb
xor
xor
cli
shrl
lds
mov
and
sbb
es
dec
ret
adc
fiaddl
rcll
xor
mov
fmull
fld
arpl
or
cmp
push
or
or
adc
mov
push
xor
insl
push
loopne
xlat
das
scas
cs
dec
fists
test
pop
clc
pop
sti
icebp
sub
sbb
adc
jb
testl
pop
xor
ret
lods
fldt
sub
xchg
xor
and
mov
xor
xchg
and
jecxz,pn
idivb
movsl
andl
fs
sbb
or
adc
out
pop
rcrb
mov
sti
xchg
out
add
int3
roll
sub
cmc
add
jmp
scas
lock
and
icebp
or
mov
and
test
inc
add
mov
dec
lds
adc
movsl
hlt
and
ds
cltd
ljmp
and
shrb
add
or
add
cmpl
dec
out
lock
lahf
jg
lcall
mov
mov
mov
int3
lret
out
mov
fmul
test
clc
fildl
dec
cmc
mov
pop
cmp
fcmovnu
inc
movsb
sarl
repnz
dec
mov
into
arpl
out
sbbl
fdivrs
pop
mov
sub
mov
xor
cmc
subl
in
rclb
mov
popf
repz
push
fistps
and
popa
shl
xlat
mov
loopne
das
lret
push
out
das
push
jmp
andb
xor
mov
mov
pop
fldl
sbb
dec
push
or
stos
add
test
or
fimull
jae
loope
xor
fstl
sub
and
mov
mov
xor
push
mov
fdivrl
cli
xor
ja
test
cmc
outsb
ficomps
pop
loopne
adc
xor
jge
imulb
arpl
test
jnp
mov
pop
les
ljmp
pop
outsb
fisttpl
hlt
ljmp
cmp
mov
test
ss
and
inc
jp
pop
push
sub
cmp
fmul
dec
jl
int
mov
inc
dec
cmpl
jns
nop
xor
mov
lret
push
push
xchg
test
dec
cmpl
inc
pop
cli
daa
cwtl
sub
mov
orl
scas
xchg
dec
call
les
sub
push
inc
and
fidivrs
sub
sub
inc
jl
dec
mov
mov
sub
fstl
mov
fs
les
dec
jbe
xchg
mov
jmp
ret
sbb
repz
jecxz
mov
test
pushf
ret
dec
or
testl
aad
mov
mov
cmpsl
in
mov
in
arpl
jb
mov
movsb
outsl
pop
cld
jl
pop
xchg
call
ss
adc
call
xchg
inc
fisubs
out
mov
cltd
hlt
adc
or
inc
test
icebp
xor
cmp
and
dec
sub
cmp
mov
sub
cmp
stos
ret
and
push
sbb
mov
jecxz
in
addr16
sar
push
int3
add
sub
xchg
stos
push
mov
jnp
xchg
xchg
loop
insl
mov
jmp
mov
jae
mov
mov
std
lcall
mov
fsubl
fsub
enter
gs
push
sbb
fnstcw
std
mov
test
outsl
xor
cmp
stos
sbb
mov
pop
dec
outsb
ljmp
imul
jbe
xor
cwtl
mov
adc
jbe
rorl
pop
cmp
add
fcmovnb
mov
or
test
hlt
mov
aas
mov
dec
add
jnp
add
rolb
mov
ds
mov
lock
cs
cs
pushl
incb
xchg
mov
call
aam
jge
inc
add
je
sahf
shr
dec
xor
leave
mov
mov
jl
mov
inc
xchg
add
cmp
std
mov
add
jno
jne
mov
and
bsf
xor
test
cmp
sbb
mov
mov
aam
sbb
hlt
out
fucomi
lods
sbb
mov
mov
in
inc
pop
lcall
out
lret
cmp
jae
inc
cmp
mov
gs
push
cld
mov
cmp
mov
xchg
mov
mov
and
cmpsl
les
xchg
aaa
mov
jl
lret
dec
mov
pop
xor
testb
cltd
imul
mov
jae
cmp
filds
inc
push
fistpl
push
stos
push
pop
adc
imul
pushf
ss
jmp
ret
mov
lret
ss
pop
sub
xchg
xor
and
add
mov
mov
into
fs
inc
add
jmp
mov
mov
in
cld
or
cmc
mov
xor
nop
jmp
mov
dec
std
ret
iret
in
mov
jmp
adc
jne
call
adc
add
adc
call
pushf
pop
xor
or
cmpsl
cmc
int
and
xor
std
or
push
lock
cld
xlat
in
xchg
jl
push
cs
repnz
dec
inc
bound
out
cmp
rcrl
fadds
in
aas
xor
jmp
jl
sub
or
mov
gs
mov
xor
push
jecxz
jle
jo
mov
daa
xchg
into
push
push
sahf
cmp
mov
jno
xchg
xchg
lds
movsb
std
stc
and
push
ss
mov
aam
sbb
iret
jmp
mov
repnz
push
inc
push
cmp
adc
add
or
push
cmpsl
jbe
sar
fidivrs
add
mov
inc
xor
test
int3
scas
ret
js
xor
fistps
mov
add
aas
sahf
fcomip
pop
idiv
sarb
jge
adc
push
mov
call
lcall
or
cli
ss
enter
or
and
fidivrs
dec
add
out
and
shr
scas
sub
mov
fcmovnb
mov
jle
hlt
sub
jp
int
lock
or
mov
ljmp
dec
out
inc
xchg
xchg
push
jnp
jp
jl
fisttpl
push
pop
sub
test
mov
pop
mov
cwtl
pop
add
pop
push
cmovle
or
push
cmp
sbb
out
insl
cmp
scas
nop
notb
fistpll
fwait
das
mov
pusha
popf
cmc
lahf
lahf
xor
and
or
imul
sbb
xor
pop
xchg
mov
push
xchg
xlat
sub
fimull
jp
and
sahf
add
mov
or
lods
sbb
lcallw
jmp
lahf
or
std
enter
xor
ja
bound
dec
imull
cmpsb
inc
sbb
sub
mov
and
inc
aam
sub
or
xor
sbb
imul
push
mul
xchg
pop
or
jb
js
jo
pusha
pop
cmpsb
pop
mov
mov
and
add
shrl
rclb
xor
add
xor
inc
and
xchg
ret
push
pushf
jmp
mov
clc
xor
stc
mov
inc
repnz
dec
adc
mov
xchg
fsub
ja
sub
pop
mov
jp
mov
jl
xchg
or
test
dec
sarl
cmpsl
in
xor
jb
lahf
hlt
xor
in
dec
clc
out
ja
add
jo
push
mov
test
stc
jl
divb
ljmp
cmp
insb
ljmp
imul
shlb
iret
dec
icebp
xlat
xchg
test
repnz
dec
jnp
jecxz
stc
mov
xor
loopne
lods
pushf
iret
push
repz
stc
sbb
popa
jae
mov
push
add
out
pop
mov
data16
push
xchg
inc
js
add
pop
mov
jmp
outsl
push
loop
hlt
pusha
inc
fdivrs
sub
dec
cmpsb
jno
movsb
mov
cmp
das
sti
pusha
iret
mov
sbb
adc
out
jecxz
test
test
mov
jne
cwtl
sbbb
pop
cmp
jge
stos
insl
je
dec
pop
push
xchg
push
hlt
das
sti
dec
aam
dec
sbb
pop
ds
dec
sbb
testl
xchg
loopne
rcrb
mull
and
sti
mov
cmp
and
mov
jmp
jne
sub
push
arpl
cltd
fidivs
lock
insb
jge
adc
add
inc
clc
adc
int3
mov
push
fiadds
mov
dec
scas
mov
enter
repnz
xchg
ret
cmpsb
ret
jbe
sub
out
jle
mov
mov
jle
inc
and
subb
cmp
adc
adc
rcrl
mov
pop
dec
push
adc
mov
dec
std
test
sbbb
xchg
aad
mov
jmp
aaa
jmp
movsb
adc
push
inc
mov
cld
inc
or
in
mov
mov
scas
or
mov
or
push
sbb
sub
ret
repnz
fwait
push
dec
push
inc
push
push
sarl
pop
jne
xchg
shrb
jo
repnz
or
popa
dec
cmp
add
addb
sub
imul
jns
aad
inc
dec
push
or
add
sbb
and
outsl
jmp
xchg
dec
dec
sub
loopne
iret
xor
pop
int
mov
adc
ret
cld
jmp
mov
mov
fidivl
in
mov
lods
dec
movsb
test
inc
pop
je
push
bound
insb
mov
in
mov
scas
incb
mul
sahf
and
ret
mov
adc
shlb
adc
cli
xor
push
mov
pop
shl
rcl
int
mov
fidivrs
xor
adc
pop
mov
leave
push
mov
or
rcll
cmp
jg
ds
rcl
mov
inc
pop
mov
push
je
outsl
cmp
scas
fadd
call
xchg
rclb
and
je
gs
repz
inc
rcrl
push
adc
std
pop
adc
push
mov
lods
popa
xchg
adc
add
push
jns
sti
mov
hlt
mov
sub
andl
std
aaa
into
jno
ds
mov
xchg
js
dec
enter
mov
sbb
xchg
inc
lock
jo
adc
das
imul
ret
mov
pop
fidivs
inc
jbe
jmp
test
dec
dec
sarl
stc
lods
sahf
push
sbb
cli
dec
sub
aam
or
cmp
jg,pn
leave
fucomp
fnstsw
arpl
imul
pop
cld
adc
inc
in
fmull
out
test
sbb
les
jns
sub
movsb
filds
sbb
add
add
aam
push
daa
popf
in
iret
mov
ficomps
jno
hlt
ffreep
orb
arpl
outsb
mov
fsubl
pop
fisubl
enter
movsl
lahf
and
stc
outsb
pop
jo
xorb
pop
es
ds
loopne
js
lock
or
pop
stos
cmpsb
mov
fcomip
mov
pop
js
sbb
in
arpl
rorb
jno
movsb
mov
repz
add
aad
jp
xchg
mov
mov
mov
mov
insl
int3
mov
orb
testl
aad
sub
mov
rorl
bound
movsb
dec
movl
aam
rorb
push
scas
repnz
out
fildl
adc
and
push
ret
lds
addr16
mov
and
xchg
push
jb
dec
push
mov
dec
xor
cmp
in
movsb
fisttpll
mov
fldenv
push
stc
cmc
mov
xchg
fsts
xchg
ss
xor
mov
mov
cmpsb
fldl
push
ss
out
insl
dec
pop
adc
outsl
repnz
int3
shrb
nop
jg
dec
inc
sub
pushf
negb
icebp
sahf
add
addl
dec
clc
call
cmp
or
test
lds
fdivl
les
cmc
or
ds
icebp
jmp
cmp
push
fs
fwait
xchg
fstps
in
mov
scas
repnz
adc
mov
jge
push
movsl
adc
mov
mov
cs
imul
mov
dec
add
stc
std
enter
scas
push
xchg
and
jns
pop
inc
scas
lret
xor
scas
cli
mov
insb
lods
mov
imul
xacquire
bound
add
int
sub
xchg
gs
ret
xor
mov
cmp
je
movsb
inc
or
inc
fmull
loop
inc
or
or
stc
dec
mov
pop
mov
cltd
mov
arpl
jmp
sub
scas
into
jae
scas
xlat
xchg
pop
lcall
add
jno
lods
inc
mov
test
push
test
je
fs
mov
jle
xor
aaa
shll
mov
xchg
push
aaa
sarb
gs
in
jge
sub
inc
ret
lods
movsl
mov
insl
or
cli
cmp
insb
shlb
dec
jae
mov
mov
sbb
mov
fcom
pop
hlt
imul
inc
sbb
scas
or
adcb
mov
sub
add
inc
push
lcall
insb
out
scas
test
in
stos
fiadds
in
sti
cmp
cmp
lods
and
loope
xor
lods
dec
lea
xor
jmp
xchg
lret
inc
outsl
insb
jecxz
inc
inc
or
mov
mov
mov
dec
jne
andnps
inc
xor
lods
inc
mov
cld
insb
push
fdivr
mov
and
fldl
jge
sti
andl
enter
mov
out
sub
fldl
into
lret
mov
les
btr
push
enter
add
sub
xchg
stc
out
jge
add
insb
cmpsb
shrl
test
push
add
xor
mov
jnp
sti
les
jno
roll
add
cmp
jecxz
stos
inc
jge
sub
rcl
dec
shlb
js
sahf
xchg
jle
xchg
mov
mov
dec
out
add
xchg
mov
in
test
repnz
or
mov
popa
fnstsw
into
dec
int3
sub
push
lods
icebp
nop
mov
inc
pop
in
jge
mov
xchg
js
dec
pop
push
int3
daa
call
jno
ss
fwait
out
dec
jmp
mov
movsb
sbb
into
or
out
mov
aad
jl
lods
push
add
jmp
mov
xchg
aam
js
loope
push
mov
shrb
aam
js
sub
test
dec
mov
pop
aam
arpl
sbb
inc
mov
push
mov
or
fisttps
testl
fisttpl
lret
mov
dec
mov
jle
jp
call
push
int3
imul
testl
mov
mov
inc
push
int3
or
xchg
or
stos
jmp
aam
roll
mov
push
lret
ja
rcll
in
in
stos
mov
int
add
sub
lret
cmc
add
add
sub
mov
testb
pop
xchg
mov
into
in
xor
scas
mulb
jecxz
out
popa
xchg
jo
push
fld1
jbe
sbb
xor
popf
cli
ret
stc
and
and
dec
pushf
jae
lds
sub
mov
push
dec
mov
ret
mov
dec
jbe
jae
js
outsb
test
mov
jmp
mov
sbb
mov
sbb
daa
jns
rcrb
push
mov
les
bound
in
enter
aas
into
aam
mov
sbb
mov
sahf
mov
push
push
arpl
ljmp
mov
fidivs
push
cld
mov
das
dec
cld
fistps
icebp
stos
ret
push
loopne
roll
fistps
cmp
lret
sahf
mov
mov
insl
sbb
hlt
inc
xor
mov
push
aam
hlt
xchg
loopne
inc
in
mov
popf
das
jl
test
insl
fs
add
adc
sub
inc
pushf
add
popf
out
mov
xor
call
jge
pop
lods
cmp
push
imul
sbbl
push
loopne
arpl
mov
cmp
ljmp
sahf
cmp
gs
repz
fcomps
mov
add
push
rorb
js
mov
mov
adc
lcall
xor
jle
mov
nop
adc
loopne
ja
jnp
pop
or
les
dec
xchg
sbb
outsb
mov
sbb
imul
mov
xchg
mov
outsb
or
xchg
lret
pop
or
mov
es
add
push
test
jle
cmp
cmp
cmp
mov
in
test
imul
mov
mov
jns
je
mov
sbb
ss
scas
or
mov
iret
inc
add
push
xchg
and
pop
das
pushf
mov
mov
push
shlb
pop
sbbl
mov
int3
jp
jge
in
add
xchg
cli
loopne
inc
fildll
dec
sbb
cmp
add
cwtl
jp
mov
inc
aas
fwait
cltd
pop
cwtl
cmpsb
orb
sar
sbb
into
fdivrl
xchg
xchg
in
and
push
or
subb
loopne
sar
imull
push
repnz
leave
mov
jns
ljmp
cltd
mov
pushf
push
dec
shr
inc
dec
and
cltd
cltd
lods
adc
or
lret
jne
ret
mov
cmp
rclb
xchg
pop
and
aaa
sub
jmp
aad
in
lret
add
divl
sub
in
jne
or
pop
rolb
imul
outsl
shlb
mov
jmp
mov
sub
or
inc
mov
je
cmp
pop
mov
xor
bswap
mov
lret
mov
insl
mov
push
sub
dec
invd
sti
std
jno
xchg
insb
insb
fisubrl
lret
pop
or
pushf
jmp
inc
jb
stc
cmp
sub
cmpb
jmp
adc
jmp
push
or
movsl
lret
daa
stc
dec
les
sarb
clc
fcomi
mov
sbb
mov
imul
fldl
dec
fcmovnb
sbb
nop
mov
sarb
xchg
jae
inc
lret
sahf
jns
push
sbb
xchg
add
or
pop
roll
cltd
loope
das
xor
lods
movsb
call
mov
mov
mov
jnp
mov
add
mov
mov
sub
xor
push
add
jns
push
stos
xchg
push
pop
mov
imul
in
call
jb
dec
dec
out
push
ja
mov
push
jnp
sub
mov
mov
sbb
adc
or
push
pop
divb
push
shl
rclb
or
cmp
ja
imul
lods
imul
rorl
add
pop
push
rolb
adc
pusha
mov
mov
xor
dec
sahf
loop
mov
int
pushf
in
pop
sbb
jnp
or
mov
ret
lahf
mov
jb
sbb
add
dec
push
xor
fwait
andl
in
loopne
mov
jmp
jnp
lds
enter
loopne
inc
and
mov
mov
ficomps
lret
or
dec
inc
jmp
repnz
mov
sbb
xchg
pop
lahf
xor
lods
cmp
mov
and
movsl
sub
or
or
aam
push
test
mov
ljmp
mov
cli
ficoml
std
push
out
in
push
insl
jl,pt
sub
or
test
jmp
rclb
int
mov
ficoml
inc
add
push
xchg
sbb
leave
loop
addl
sbb
adc
sub
sar
hlt
pop
push
ret
ffreep
lods
in
cltd
pop
ljmp
cltd
lock
into
ja
xchg
mov
inc
cmp
bound
loop
std
call
cmp
inc
testl
out
sbb
clc
les
xor
add
enter
call
scas
cmp
xlat
or
cmp
add
iret
sub
or
pop
xlat
or
mov
add
xchg
dec
fdivrs
mov
xchg
mov
gs
nop
cltd
mov
in
fldt
into
jnp
int3
shll
movb
push
cs
outsl
cmp
or
dec
fdivrs
jne
mov
lock
jbe
jb
popa
mov
or
mov
xchg
fnstsw
add
stc
lcall
lock
inc
in
std
fidivrl
lret
fadd
adc
mov
or
dec
out
jae
mov
or
add
push
jne
lods
lea
das
movsb
and
test
repnz
fmul
dec
sub
icebp
cld
in
xchg
cmc
std
lock
jno
inc
pusha
movsl
movsl
jno
mov
mov
push
popf
xor
dec
rorb
lret
push
mov
or
push
xchg
or
sub
sub
xchg
imul
push
out
jnp
sbb
push
pop
jl
shll
lock
add
mov
stos
cmp
daa
xchg
and
or
imul
mov
jns
xchg
insb
test
xor
cmp
pop
pop
ja
mov
aad
cmp
jmp
aam
mov
ror
xchg
push
mov
repnz
dec
les
xchg
pop
stos
push
adc
push
sub
repz
in
xchg
dec
rorb
call
cmc
sahf
lret
fisubl
or
je
adc
popl
popf
test
rorb
inc
mov
lret
mov
orb
push
sahf
aaa
ror
icebp
add
mov
int
push
mov
pop
in
mov
cmp
add
or
xor
rorb
or
push
xchg
loop
and
inc
lret
dec
jo
fdivs
mulb
jle
je
scas
jp
popa
or
iret
rcr
out
cmp
push
jmp
mul
add
or
add
dec
jae
aam
shrw
mov
mov
jbe
jl
mov
push
and
inc
push
in
rcl
cmpsl
cmp
jo
mov
stos
scas
xchg
out
mov
popf
xor
push
jmp
fwait
loopne
mov
mov
sarl
ret
orl
ret
or
sub
mov
in
fcmovnb
shlb
or
and
ret
adc
ljmp
mov
mov
cmpl
lea
or
sub
xchg
test
sbb
out
and
out
fimull
iret
add
mov
and
enter
inc
xchg
adc
mov
push
xor
and
shr
mov
mov
loope
mov
push
cltd
bound
xchg
jl
insb
jo
stos
jle
push
or
rcll
mov
xlat
popf
and
dec
xchg
stc
fldl
jne
mov
mov
push
movsl
xchg
test
add
jle
jnp
dec
pusha
push
add
fsubrp
jae
loopne
mov
mov
inc
lahf
out
adc
cltd
push
mov
lahf
jg
xorl
shlb
dec
stos
f2xm1
das
mov
xchg
sub
js
xchg
test
les
xor
aad
lea
test
lcall
imul
or
cmp
test
jnp
xlat
data16
cmp
data16
mov
dec
add
dec
dec
mov
mov
push
leave
xor
int3
addl
in
js
jp
sti
ret
pop
repnz
repz
iret
jmp
mov
mov
not
push
push
mov
cmpsl
enter
iret
cmc
test
or
data16
dec
movsb
adc
push
popa
andb
xchg
flds
fcmovne
mov
sbb
fsubs
outsb
rcll
out
sbb
dec
sarl
das
jo
movsl
sarl
popf
mov
jmp
aad
mov
iret
lea
lods
shr
in
and
cld
or
mov
mov
dec
je
sbb
out
pop
ret
add
mov
or
xchg
divl
or
lods
jo
cmpsb
mov
test
fistps
jae
flds
or
xchg
fldenv
shrl
loope
popaw
test
sub
mov
lret
jnp
jno
dec
or
pusha
in
xchg
push
xor
addb
dec
cmp
stos
fisubs
ja
stos
mov
test
ret
cs
outsb
mov
sarb
in
and
daa
cmp
sbb
push
lods
mov
das
push
addl
add
dec
lock
adc
xor
jb
rcl
in
or
lock
sub
repnz
add
cs
mov
jecxz
inc
push
mov
clc
mov
fisttpll
stos
ret
push
das
pop
pushf
cmp
inc
outsb
scas
movsb
cmp
mov
cli
lods
jns
push
or
lods
sub
aam
inc
cmp
add
adc
xor
imul
mov
les
mov
mov
sbb
mov
ret
test
xor
mov
es
push
daa
xchg
inc
imulb
cmp
jmp
dec
nopl
fs
enter
les
sar
or
mul
pusha
xchg
mov
sub
fcomps
sbb
loop
test
sbb
call
mov
les
mov
xchg
jne
jp
xor
jge
sub
ljmp
xbegin
repz
xor
jl
xchg
push
das
mov
cmp
int
popf
stos
pop
adcl
adc
nop
popf
cmp
loopne
loope
or
cmc
mov
cli
fwait
push
sbb
inc
jmp
jbe
xchg
stc
jge
mov
or
jne
ficoml
adc
aad
push
cmpsl
inc
int3
xor
mov
cmp
in
repnz
jno
push
daa
daa
cli
cltd
jns
test
sbb
add
pop
vpcomq
push
mov
cmp
push
cmpsl
loopne
or
xchg
int
jmp
stos
mov
jae
xlat
sbb
jge
xor
pop
repz
insb
sti
fs
jns
repnz
add
cmp
mov
mov
jo
cmpsb
and
pushf
aam
icebp
mov
and
push
out
loop
push
and
mov
popf
loope
into
and
push
jbe
dec
cmovb
inc
int
mov
push
pop
lret
dec
and
or
xor
stos
sub
xchg
xchg
dec
mov
popa
fs
loopne
je
xchg
mov
jns
pushf
pop
pop
shrb
sbb
push
mov
mov
in
jb
mov
and
and
ror
sbb
insl
lret
add
in
cmovbe
adc
jo
jecxz
adc
or
stos
dec
cmp
mov
add
lods
and
orb
popa
push
mov
mov
addb
lret
inc
cmp
fdivs
push
push
dec
stos
push
nop
out
push
adc
loope
or
mov
testl
mov
dec
adc
pop
jmp
dec
jl
cmpsb
insl
mov
sbb
or
sbb
mov
loopne
loopne
scas
ds
mov
adc
movsl
enter
and
mov
out
sbb
adc
jle
bound
rorl
call
mov
fldt
fbld
lcall
mov
jmp
std
roll
push
leave
cwtl
mov
or
in
xor
xor
mov
or
push
mov
jno
leave
repnz
je
jmp
jmp
out
push
mov
in
shrl
xchg
add
popa
push
movsb
lods
pop
iret
out
jecxz
ret
out
jle
in
insl
cli
xchg
xchg
rcll
cmpsb
ja
pop
push
js
sub
das
insl
sub
mov
pop
outsl
xor
addr16
addr16
arpl
ds
xchg
outsl
and
mov
cmpsb
fidivrl
lahf
and
mov
sahf
das
mov
insl
mov
cmp
lret
xchg
mov
cli
dec
lcall
pop
inc
into
xor
cmp
cld
cmp
mov
int
inc
cwtl
lock
inc
fucomip
mov
in
cmp
push
es
mov
inc
xchg
stc
ret
jae
mov
add
cmp
sbb
scas
enter
inc
mov
js
popa
es
sbb
jae
mov
push
inc
or
pop
sahf
pop
add
cmp
ret
push
idivl
jb
lret
adc
dec
call
xlat
repnz
imulb
or
push
mul
addr16
adc
aas
ds
leave
or
push
leave
jno
lret
test
pop
mov
in
iret
sub
xchg
xor
popa
mov
insb
scas
xchg
push
nop
xor
and
jl
inc
cmc
clc
test
into
add
aas
push
dec
jbe
out
sub
sbb
repnz
into
or
xor
mov
dec
or
orl
in
icebp
neg
mov
repnz
cmp
xchg
in
xor
xchg
ficompl
repz
fstpt
leave
repz
cs
sbb
xchg
ljmp
mov
xchg
cmp
js
sbb
aad
and
jle
es
mov
or
out
testb
push
stc
sub
or
mov
clc
sub
ss
mov
int3
and
aas
or
or
pop
jae
pushf
or
rol
or
sbb
sbb
sbb
fdiv
rcrl
jbe
fildl
hlt
push
notl
mov
out
mov
rorb
imul
cmp
xchg
loopne,pt
mov
inc
and
test
addb
push
jp
xor
add
and
ss
test
or
into
arpl
ret
jg
push
inc
sti
int3
pop
outsl
into
mov
sbb
shr
loop
dec
xchg
mov
clc
pop
dec
pop
add
orb
pop
jp
adc
sub
ret
fsubp
mov
mov
and
mov
mov
or
add
mov
xchg
mov
lea
arpl
sahf
push
cmc
pop
sti
not
mov
xchg
std
faddp
mov
sti
movsl
jbe
push
xor
shlb
xchg
add
push
mov
adc
sub
iret
push
inc
xchg
add
arpl
fcomp
pop
mov
mov
mov
lea
daa
adc
mov
adc
cmp
pop
add
or
dec
jns
inc
mov
pop
mov
mulb
cltd
jecxz
rorl
xchg
cmpsl
pop
xor
and
andb
sub
pop
push
mov
mov
and
mov
mov
sub
insl
int
and
je
in
call
lock
movsb
xor
frstor
insb
cmp
cs
lcall
mov
mov
mov
adc
adc
cmp
sbb
cld
jge
lea
std
jg
push
in
shlb
push
xchg
xor
push
arpl
sbb
sub
int
mov
lret
adc
rclb
dec
xchg
xchg
je
mov
mov
dec
jmp
ret
sbb
push
data16
rorb
insb
pop
push
call
sub
imul
cld
mov
test
pusha
push
ficompl
mov
ret
or
pop
sbb
iret
mulb
mov
xor
fcoms
ja
test
pop
mov
pop
fisubrl
es
ror
rcrb
stos
pop
cmpl
movsb
mov
imul
testb
sahf
pushf
test
xchg
mov
lcallw
decb
outsl
call
icebp
cld
xchg
mov
xchg
in
pop
mov
orb
sub
xchg
cmpsb
fisubrs
push
xchg
jle
xor
xchg
js
push
mov
cmp
jb
push
push
or
xchg
xchg
jecxz
mov
lods
inc
mov
out
mov
std
bound
mov
jg
mov
call
inc
in
xchg
xor
push
mov
mov
scas
orb
aas
xchg
lret
cmp
ss
mov
pop
sbb
dec
imul
and
and
sub
gs
xorl
mov
cli
div
imul
bound
mov
push
outsl
ja
sub
add
insl
pop
out
insl
daa
mov
xorb
jg
dec
pop
lahf
mov
push
mov
mov
imul
xchg
in
int3
xlat
pop
dec
pop
and
jge
fmuls
and
sub
xchg
movsl
clc
mov
sub
add
mov
sub
stos
add
adc
aad
or
sbb
mov
insb
loopne
jl
inc
inc
or
fidivrs
xor
lahf
mov
data16
mov
pop
fs
addl
aad
adc
pop
aad
xchg
sahf
stos
inc
inc
in
mov
pusha
push
loope
mov
mov
push
mov
mov
push
movsl
loop
pop
dec
mov
mov
js
aad
sti
addps
jnp
jge
inc
ret
cltd
test
popf
sti
fucomp
ljmp
fdivrs
xlat
mov
cltd
mulb
mov
stos
fsubr
repz
lods
add
mov
sbb
stos
push
sub
jae
jns
fmuls
iret
lods
mul
sar
mov
ret
cli
iret
es
les
mov
ret
jne
inc
jnp
xchg
ss
pop
dec
jge
jge
sbb
int
xor
adc
test
fwait
mov
rcrl
pop
loopne
sahf
cmp
inc
jle
fisubrs
outsl
push
jb
bound
adc
xlat
ret
stos
cli
cmp
inc
rorb
adc
push
jmp
push
fwait
cli
rorl
pusha
jl
push
inc
jne
pop
lret
or
jle
mov
fstpt
dec
pushf
xor
fcmovne
leave
movsl
test
insb
pop
hlt
mov
push
lods
sbb
push
xor
les
fwait
stos
xlat
out
in
add
aam
ficoml
inc
mov
testb
xlat
icebp
inc
ret
sahf
sahf
mov
lock
rolb
push
imul
adc
mov
ds
mov
mov
sahf
push
mov
push
insl
mov
jae
imul
pop
loopne
repz
jg
imul
std
imul
std
xchg
popf
popf
sbb
mov
xor
pop
jg
pop
mov
xor
xchg
jge
lahf
mov
lret
add
xorb
jbe
loope
arpl
and
jmp
inc
mov
into
or
into
jo
ljmp
sahf
addr16
xor
icebp
stc
test
sub
push
clc
inc
popa
pushf
imul
add
enter
clc
pop
pop
add
push
adc
pop
mov
add
adcl
jbe
mov
data16
pop
cmc
aam
inc
pop
or
arpl
sti
jp
int
push
jl
pop
xchg
mulb
aam
movsb
sub
push
and
mov
xlat
push
add
sbb
sub
lcall
stc
mov
aam
pop
mov
and
or
and
inc
mov
mov
or
jle
dec
ret
in
mov
sbb
add
jmp
or
push
push
mov
test
rclb
lock
xchg
cltd
cwtl
cmp
scas
sub
pop
xor
ja
out
psubb
inc
ljmp
adc
xor
xor
or
cmc
pop
or
repz
insl
dec
roll
leave
stos
pop
add
or
adc
mov
inc
adcb
or
dec
push
ljmp
or
nop
mov
mov
ja
xchg
mov
mov
add
fs
jmp
lcall
mov
cmp
or
jmp
scas
bound
pop
cmp
loop
mov
mov
adc
and
stos
sub
out
popf
movsb
in
pop
test
and
call
cmp
or
mov
movsb
add
push
pop
cld
das
sbb
test
adc
aam
cmp
push
mov
stos
ss
adc
sbb
notb
lea
inc
dec
xchg
movl
jmp
lret
jmp
lret
gs
jmp
xor
sbb
arpl
inc
mov
cs
add
aam
iret
ss
pop
addr16
lret
add
addb
shrl
pop
call
lock
arpl
mov
call
int3
iret
or
push
and
pop
inc
pop
jle
in
cltd
inc
outsl
pop
mov
test
pop
push
xchg
mov
int3
mov
xor
push
xchg
imul
sarl
test
jmp
inc
mov
xor
ljmp
or
adc
push
push
jne
jbe
xchg
in
xor
popf
mov
sbb
outsb
clc
sti
gs
mov
je
jle
in
insl
xchg
push
mov
repnz
sbb
test
adc
insl
xor
xor
ficoml
jge
loopne
fcoms
jne
pop
sub
cmp
aam
jo
clc
dec
lods
cmp
loop
scas
addr16
pusha
push
xor
mov
and
sbb
mov
mov
mov
stos
enter
icebp
mov
data16
inc
lock
daa
dec
xchg
movsl
mov
sbb
mov
push
pop
sub
in
mov
lock
lods
movsb
fdiv
lock
mov
sub
arpl
add
leave
and
push
leave
mov
pop
sub
test
testl
mov
lds
push
data16
dec
lahf
shlb
cmp
xor
sbb
jge
or
mov
xchg
pop
fyl2xp1
fstpl
push
shll
decl
adc
sarb
fsub
sub
inc
mov
lret
movsl
cmp
mov
mov
jmp
jbe
inc
int
mov
das
mov
mov
je
adcl
es
ss
sbb
push
gs
jmp
dec
mov
push
mov
test
and
idivl
cmc
ljmp
in
xlat
call
int
insb
cltd
fidivrs
lods
mov
jp
repz
xlat
push
jle
cmpsl
sti
bnd
cmp
fdivl
jp
rcr
subl
add
sbb
imull
sub
dec
sarl
dec
mov
jmp
sbb
jmp
or
add
mov
je
mov
jmp
out
jle
popf
mov
jmp
int3
xchg
into
lock
js
mov
nop
add
dec
sub
arpl
iret
add
aad
int
in
test
xor
lret
push
jl
ds
frstor
addr16
jmp
out
rcl
mov
imul
bound
cmp
js
nop
mov
add
xlat
push
add
or
icebp
cmp
loopne
sub
insl
cmpsb
imul
aam
lods
cmp
shll
jmp
xorb
mov
mov
mov
pop
xchg
fisttpll
add
into
mov
inc
daa
aam
fmuls
push
out
aad
mov
test
mul
push
leave
fsubrp
fnstsw
in
scas
ja
jmp
aad
icebp
mov
fwait
push
or
jmp
inc
add
ret
sbb
mov
jmp
inc
je
cwtl
sub
xor
stos
jno
sbb
cmp
loopne
push
filds
adc
loop
enter
mov
stc
push
sti
jl
mov
sub
sub
jmp
dec
add
rorb
test
jbe
jnp
lea
xchg
sti
sbb
dec
lods
lock
lret
mov
sbb
stos
cmpsb
in
jge
mov
xor
xcrypt-cbc
cmpsl
push
adc
lret
hlt
pushf
stc
in
std
mov
xor
aad
stos
xchg
mov
adcl
cmp
pop
dec
adc
jmp
cmpsb
enter
cmp
jns
notl
mov
fcmove
add
imul
addr16
xchg
dec
adc
push
or
lcall
clc
fisubs
pushf
and
xchg
jg
call
adc
mov
cld
sbb
mov
xchg
stc
ret
mov
dec
sbb
cmp
fistpll
das
fldt
fbld
sbb
stos
imul
sti
cs
add
sbb
add
mov
jge
mov
push
dec
dec
enter
sbb
pop
mov
data16
adc
ds
jp
xchg
xor
hlt
or
shll
shrl
push
and
jl
test
jmp
sub
adc
cmpsb
int3
add
aad
mov
add
mov
push
int3
push
in
cs
adc
dec
mov
fsubr
dec
cltd
xorb
sub
add
cli
lea
loop
mov
lcall
bound
fnstsw
cmp
rorl
mov
fistpll
shrb
popf
mov
ret
inc
lods
int
lods
push
into
pushl
dec
iret
jge
negb
xchg
outsl
call
and
or
fimull
popf
dec
add
xlat
and
adc
leave
mov
cmp
jp
pop
cmpsl
rsqrtps
cmc
jnp
sbb
in
mov
in
mov
mov
cmpsb
popf
sysenter
ud2
test
mov
push
jl
in
fnsave
jle
cs
mov
les
sbb
mov
data16
jno
addb
sub
movsb
stos
or
xchg
cmp
xchg
push
scas
sahf
iret
insb
add
adc
popf
add
push
lods
std
cmp
in
sbb
sub
xchg
ljmp
xor
ffree
shrb
add
pop
ljmp
test
mov
add
outsl
gs
popf
repnz
arpl
xchg
adc
xchg
call
jae
adc
push
stos
mov
xchg
data16
push
mov
in
sahf
in
dec
iret
mov
loop
roll
in
sub
adc
jmp
ds
jae
push
daa
roll
jl
fisttpl
mov
jno
jns
xor
lea
sarb
movsl
mov
lock
in
xchg
cli
push
xor
cmp
incb
xor
mov
or
sub
int3
stos
filds
imul
repnz
hlt
add
shl
adc
outsb
int
jge
cmpsl
adc
imull
clc
idivl
jbe
in
jae
and
xor
cmp
out
leave
push
lret
shll
roll
lods
jge
fldl
ret
adc
dec
notb
adc
lock
jb
lock
add
lahf
sbb
imul
or
cs
aad
add
loop
popf
inc
out
lds
pop
stos
daa
xor
insl
movsb
cwtl
rolb
std
jmp
jae
mov
inc
fdivl
scas
lods
ret
roll
enter
jecxz
rcll
cmpsb
ljmp
inc
cmp
in
cmp
aad
out
mov
andl
cmp
or
jns
mov
ror
xor
in
xorl
addr16
pop
xchg
shl
popf
jae
mov
cli
in
lahf
movl
and
pushf
jge
mov
aad
mov
dec
pop
mov
push
or
adc
int
adc
ret
sub
fadds
push
lock
outsl
or
dec
mov
xor
shll
cmp
repz
data16
out
xchg
xchg
xchg
or
in
loope
jecxz
mov
rcll
sbb
lods
aad
dec
push
ja
or
movsb
loope
adc
add
jge
repz
lret
xor
shlb
outsl
divb
dec
pop
mov
or
movsbl
int
mov
or
btsl
and
adc
sub
jecxz
outsb
in
xor
into
loopne
xchg
adc
lcall
xor
lds
push
jge
imul
sbb
shr
jl
sub
in
adc
btc
jne
pop
loopne
mov
push
testb
adc
imul
pop
xlat
push
sub
movsb
roll
in
and
push
mov
lret
jae
xor
test
scas
jp
loopw
iret
mov
or
mov
mov
add
add
jmp
lea
push
jp
ljmp
cmpsl
pop
in
mov
leave
loope
mov
test
mov
aaa
out
jl
aad
ret
pop
and
out
daa
push
push
push
shr
ss
mov
cli
lds
jb
dec
cmp
adc
call
jecxz
aaa
sub
xchg
call
aas
inc
subps
ret
nop
and
fst
sti
push
aam
outsl
or
testb
fmull
add
dec
out
push
test
popa
mov
mov
sub
pop
mov
hlt
adcl
xchg
popf
jno,pn
push
aaa
jb
dec
call
les
stc
pushf
mov
mov
std
lret
dec
adc
loopne
fcoml
or
xor
daa
rorl
enter
shr
and
lret
push
imul
xlat
mov
mov
push
clc
inc
jno
jge
pop
ficoml
or
push
cli
aas
add
clc
popf
aam
mov
repz
pop
mov
sub
gs
pop
mov
fldl
pop
xchg
fisubrl
cmp
pop
test
das
jo
out
push
cltd
adc
inc
cmc
clc
sub
scas
outsl
jnp
ror
adc
xlat
inc
in
movsb
pop
fisttpll
stc
jg
or
lret
push
mov
xor
jl
sarb
push
psubusw
inc
data16
dec
aad
jecxz
mov
push
pop
push
fmuls
xchg
mov
pop
es
sbb
mov
lahf
imul
lahf
aam
lcall
jecxz
jecxz
shlb
xchg
call
out
aam
mov
imul
push
push
imul
arpl
xlat
enter
mov
or
popf
sahf
fwait
xor
mull
mov
sti
rcrl
icebp
mov
or
lods
outsb
dec
xlat
jmp
or
int
inc
mov
add
mov
and
cmpsb
leave
and
out
fldt
push
or
std
into
mov
push
or
jb
mov
cmp
aad
mov
xor
xchg
mov
test
jns
cmp
mov
mov
pop
shrb
mov
mov
push
inc
dec
cmpsl
lds
rorl
mov
rorb
lahf
push
lcall
jge
mov
dec
orl
pop
aad
bound
shll
iret
in
inc
xor
mov
movsl
loope
lahf
sahf
xchg
push
xchg
in
push
xchg
jl
ret
adc
mov
fstpl
dec
ja
mov
mov
ss
or
inc
mov
push
arpl
cwtl
ljmp
xchg
ffree
mov
lret
jmp
cmp
jmp
push
pusha
nop
xchg
inc
jle
cmp
xor
out
sarl
aad
xor
mov
mov
dec
inc
adc
addb
push
dec
clc
stos
push
mov
pushf
add
pop
scas
loope
xor
jno
pop
or
cmp
push
jle
and
mov
movsl
or
std
popa
lock
adc
cli
enter
stc
cld
je
jle
fwait
push
fcoms
cmp
repnz
cmp
fs
pop
cmpsb
scas
lcall
aaa
add
ret
xchg
mov
or
push
cmp
mov
int
add
std
arpl
adc
rcrl
cs
dec
std
cmp
repz
stos
sbb
jbe
xlat
pusha
inc
pop
jno
dec
cmp
push
push
and
pop
dec
subb
sub
cmp
sub
jo
inc
adc
loop
sahf
cmp
mov
push
push
mov
in
mov
sub
lods
aam
dec
idivb
dec
clc
hlt
stos
add
dec
lock
cltd
cmc
mov
aas
sub
mov
int
ja
jns
test
lret
add
mov
add
push
jle
xchg
call
fldenv
jbe
sbb
das
in
inc
inc
les
js
in
in
jno
jl
fs
movsb
push
orps
pop
insl
push
mov
jbe
cmc
push
dec
cltd
sub
pop
test
or
in
or
inc
rorb
lds
xor
hlt
adc
push
out
adc
cmp
repnz
or
into
jbe
mov
lds
lods
and
xlat
jnp
mov
outsb
xor
stos
cmp
jno
out
test
popf
loop
add
push
add
in
mov
add
add
dec
push
je
sub
roll
cmp
lret
xor
sub
sub
pop
fisubs
pop
add
cmpsb
xchg
pop
push
int3
dec
jb
mov
jbe
and
call
sbb
in
iret
xchg
fadds
sub
int
movb
pop
loopne
addr16
inc
push
sbb
jne
jmp
or
inc
ljmp
xchg
push
popf
add
test
mov
inc
test
jno
pop
std
sbb
test
rorb
push
call
mov
lock
pop
mov
add
cmp
int
sub
inc
jmp
mov
popa
in
leave
push
std
ret
cmp
jge
mov
adc
ret
popf
clc
and
xor
or
or
test
mov
jb
paddsb
in
leave
pop
fisubrs
xchg
adc
pop
fdivl
sub
inc
iret
jg
repz
push
xor
aad
in
xchg
stc
sbb
mov
out
les
mov
iret
fxsave
inc
cmp
cmpl
push
or
in
fsubl
pop
stos
cmc
adc
add
pop
shlb
div
cmpsb
sbb
pop
push
adc
push
stc
jle
and
mov
cli
sti
xchg
ljmp
jmp
add
mov
test
popf
xchg
sbb
movsb
cmpsl
lock
loope
add
iret
sar
mov
addl
filds
rcll
les
scas
repnz
xor
sbb
repnz
or
ljmp
scas
jne
lods
mov
xchg
insb
cmpsl
or
push
mov
sbb
in
ljmp
nop
push
aam
das
cltd
in
jge
movsb
sbb
mov
xlat
arpl
mov
clc
mov
or
inc
sbb
sub
gs
jecxz
inc
lock
pop
iret
jmp
lds
push
arpl
lds
push
out
jb
icebp
jg
cmp
and
notb
add
sub
fsub
add
or
and
js
xchg
cmp
jmp
jecxz
fimuls
popa
add
ja
pop
lock
loopne
test
rolb
mov
ss
adcb
pop
fildl
rol
push
ljmp
leave
add
xchg
xchg
pop
es
pop
out
and
sbb
xchg
ret
xchg
outsb
sub
mov
insl
ja
xchg
fisttpl
lock
popa
cld
mov
mov
mov
sub
mov
out
int3
xchg
ljmp
jge
fisubl
test
aaa
xchg
inc
in
push
xor
aad
pop
je
xchg
jns
out
mov
jge
dec
fdivl
lret
push
inc
js
rol
daa
or
jb
lret
lret
dec
jl
xchg
mov
in
pusha
pushl
inc
js
sbb
dec
movb
mov
in
insl
add
push
adc
mov
sub
add
rcll
push
mov
outsb
xchg
lahf
pop
movsb
pop
bound
jl
mov
jne
jle
aam
jp
adcb
mov
aad
mov
hlt
loop
iret
sarb
ds
mov
pusha
movsb
shr
js
lods
cmp
sbb
push
mov
movsb
mov
cmp
sbb
loopne
mov
mov
filds
aaa
popa
lods
bnd
and
mov
push
mov
mov
shrl
sbb
or
jae
call
lods
cmp
icebp
mov
xor
insb
xchg
mov
xor
out
adc
shrb
out
xadd
sbb
mov
cmc
mov
and
daa
sub
cmp
or
movsb
inc
aam
xor
subb
push
mov
lds
cmp
push
lcall
cmp
stos
cmpsb
jb
movsb
jg
jbe
xchg
cs
lds
sbb
jno
adc
rorb
jmp
xchg
insl
adc
pop
cs
sub
mov
mov
mov
imul
leave
xchg
cs
add
pop
loope
ret
mov
mov
in
in
out
fsubrs
cmp
mov
adc
std
outsb
int3
add
mov
or
cmp
iret
adc
xchg
pusha
jnp
fisubs
push
shll
push
cltd
lret
outsb
clc
add
mov
shl
fwait
in
cmc
dec
dec
icebp
pandn
mov
mov
icebp
xchg
sub
scas
and
mov
movsl
rcrb
mov
cmpsl
xor
adc
scas
test
push
and
push
adc
repnz
scas
outsl
sahf
pop
in
icebp
fnstenv
sti
fistpll
out
icebp
push
loope
adc
in
xor
in
scas
dec
fcmovnu
lods
fcoms
dec
adc
in
mov
addr16
push
mov
notb
test
push
sub
scas
or
lahf
push
inc
xchg
pushf
pop
jne
pop
mov
jb
cmpsl
scas
ds
popa
cs
lods
or
lret
jno,pt
lahf
fisubrl
dec
xlat
push
addr16
mov
pop
inc
rorl
lret
pop
add
add
add
ret
int
jmp
or
fisubl
inc
sub
ljmp
scas
mov
dec
xchg
rclb
fsqrt
mov
imul
and
aam
sahf
add
scas
out
dec
lds
out
add
xchg
repnz
das
cmp
data16
loopne
add
fcom
xchg
in
enter
jge
in
mov
xor
sub
or
enter
lret
rorb
xchg
jle
rcr
jg
cmp
jb
cli
mov
out
xchg
test
test
js
fdiv
fnstcw
sub
push
and
mov
orl
clc
icebp
orl
rolb
sub
adc
sahf
push
shrb
inc
imul
push
call
adc
addr16
add
mov
test
mov
fistps
rclb
lock
loopne
pop
sbb
shrb
insl
in
mov
iret
mov
add
mov
aam
jno
mov
out
clc
mov
mov
mov
dec
ljmp
mov
lret
sub
mov
movzbl
rorb
lcall
jo
mov
lret
std
mov
or
and
push
mov
outsl
into
xor
xchg
les
lds
hlt
adc
xchg
push
add
dec
mov
lds
inc
sub
ds
mov
add
pop
daa
mov
mov
mov
cmpsb
js
aam
testl
filds
ss
cltd
dec
xor
xor
jbe
cmp
jecxz
lahf
add
or
inc
jmp
scas
ja
add
jge
aad
cmc
and
loop
jge
jns
insl
sar
fwait
shl
nop
and
mov
in
in
int3
aam
fistl
inc
inc
cltd
test
jl
sub
lcall
out
sub
cwtl
mov
inc
add
push
pushf
lods
inc
push
jmp
push
repnz
mov
sub
xor
into
add
or
mov
pop
or
sahf
cmpsb
imul
inc
sbb
mov
mov
insb
stc
mov
mov
jnp
xchg
testl
ffree
testb
dec
xchg
xor
fsubr
or
movsl
mov
rcrb
push
adc
cs
and
test
pusha
insl
add
aad
cmc
in
aaa
mov
mov
lcall
test
mov
fs
scas
or
mov
mov
out
add
stc
mov
int
aaa
dec
test
test
nop
mov
xchg
lahf
adc
fldenv
loope
scas
jle
fldenv
ja
inc
shrl
cmp
jmp
into
fidivrl
sbb
das
shlb
test
std
gs
push
jne
jg
mov
das
rolb
pop
test
std
and
insl
add
dec
insb
mov
int
loopne
test
mov
shlb
sarl
insb
adc
mov
fsubs
int3
into
ds
lret
fcomi
or
jbe
jmp
loopne
mov
rcrl
mov
adc
out
cltd
mov
insl
xchg
mov
icebp
mov
movsl
add
jbe
push
or
sti
fstpl
insl
hlt
mov
xor
fldenv
push
repz
in
sarb
out
out
imul
fcomip
lahf
ret
fs
xlat
xchg
movsl
adc
push
jg
call
mov
add
leave
mov
mov
sarl
out
xchg
bound
std
lret
cmp
push
pop
addb
ss
push
and
inc
inc
sarb
popf
test
cmpsl
mov
jns
adc
popf
add
loope
xchg
testb
push
ret
sbb
int3
jl
test
and
stos
clc
movsl
loopne
insb
jne
push
inc
sbb
jbe
xor
jo
decb
mov
pop
orb
pop
push
fiaddl
shlb
enter
pop
mov
iret
stos
lcall
test
mov
jmp
cld
insl
aam
iret
xchg
daa
jl
pop
xor
imul
mov
addl
mov
mov
test
testb
push
push
sbb
cmpsb
fst
xchg
push
std
sub
dec
mov
mov
mov
outsl
mov
push
pop
mov
test
sahf
test
mov
sub
mov
mov
mov
ret
push
les
gs
xor
fsubl
mov
rol
fcmovnu
popa
icebp
sarl
and
cmp
cwtl
dec
cmp
and
push
xchg
call
rclb
pop
es
lahf
ss
mov
lods
repnz
rclb
add
xchg
scas
test
cmp
mov
mov
out
xor
mov
inc
sbb
insl
ss
or
mov
mov
movsb
fisubrs
xchg
push
sub
inc
inc
aas
inc
mov
mov
rorl
inc
mov
aam
mov
test
lret
sub
or
mov
mov
loop
push
in
test
enter
fwait
pushf
mov
in
pop
dec
push
push
xchg
lahf
xchg
iret
mov
sbb
lcall
inc
dec
or
push
mov
not
stos
gs
out
rol
jge
sbb
jnp
jb
fdivrl
mov
ret
aad
test
inc
in
jg
movsb
mov
mov
jg
sbb
pop
fcmovnb
push
rsm
iret
mov
mov
cmp
jnp
cmp
jae
cltd
icebp
pop
shrb
fsubrs
push
xor
sbb
mov
lret
jns
pop
aaa
or
gs
test
call
fisttpll
orb
cld
or
daa
mov
out
cli
enter
add
mov
leave
rcl
pop
aam
jae
stc
mov
mov
xchg
shrb
enter
lods
push
add
call
pop
bound
and
sbb
imul
shll
cmpb
cmpsb
cmc
int
cmp
mov
pop
jae
and
jge
mov
leave
pop
sub
xchg
stos
add
std
fwait
mov
adc
fcompl
jp
std
mov
mov
mov
repnz
add
call
dec
push
adc
add
add
adc
cmp
adc
mov
sub
add
jae
mov
cmp
jno
adcl
in
test
imul
cmp
ret
leave
jg
mov
jnp
or
lret
mov
adc
mov
sti
sahf
jle
lcall
lcall
or
in
xor
inc
sahf
jmp
in
add
dec
push
sub
adc
pushf
mov
outsl
mov
dec
ljmp
inc
dec
mov
mov
pop
rorl
jmp
xor
aad
jge
enter
fs
jno
popf
addr16
xchg
pop
push
add
mov
in
dec
fldl
sub
dec
mov
jnp
adc
mov
or
xchg
rep
ret
mov
mov
sbb
add
add
imul
lods
imul
cwtl
push
call
mov
mov
aam
xchg
fildll
cmp
xchg
gs
es
lock
shrb
clc
bound
movsl
inc
out
xor
lock
adc
sar
inc
push
jmp
jo
push
in
enter
xchg
mov
mov
lret
je
sbb
mov
fdivrs
jb
and
push
push
ss
jnp
add
repnz
lods
mov
pop
mov
enter
lret
fdivrs
inc
sub
mov
dec
cmc
jmp
jmp
sbb
mov
jp
mov
add
mov
ljmp
push
inc
cli
mov
add
and
cmpsl
mov
push
out
es
xchg
or
or
test
adcb
icebp
mov
mov
or
cmp
fisubrs
lea
mov
jp
dec
inc
in
dec
xchg
cmc
pop
dec
add
aas
lds
shll
dec
push
xchg
dec
sahf
outsb
adc
mov
out
mov
inc
jmp
adc
and
mov
je
xchg
push
or
into
mov
test
sub
fdivs
in
lahf
pop
icebp
into
xor
sti
outsb
push
sub
test
cmp
pop
adc
divb
mov
push
pop
and
lds
xchg
aam
inc
out
ljmp
addb
jle
sarb
mov
addr16
dec
mov
aad
je
push
out
mov
pop
lcall
int
pushl
not
inc
in
daa
jecxz
mov
stos
outsb
jnp
adc
data16
pop
and
js
cli
or
sub
xorb
aad
mov
xor
sbb
mov
xchg
data16
push
and
out
mov
mov
jo
jne
in
sarl
iret
fwait
mov
in
pop
addr16
enter
cli
insb
cmpsb
cmpsl
mov
mov
std
push
enter
jmp
jo
sub
and
mov
in
bnd
inc
mov
dec
lcall
sbb
lods
or
cltd
ret
mov
aad
rorb
pop
fsubrs
into
stos
movl
xorb
loope
fsubs
mov
sbb
jecxz
jle
or
dec
push
xor
int
stc
addl
cmpsl
push
ljmp
mov
aad
cltd
inc
add
or
cmp
dec
lock
sbb
inc
mov
sub
movb
je
push
xor
jle
push
fdivrl
fmul
mov
mov
push
cmp
xchg
xchg
sub
xchg
ret
lret
mov
faddl
lods
mov
aaa
arpl
sub
lret
ret
mov
or
shrb
jge
or
dec
mov
mov
inc
sbb
and
mov
xchg
fs
fbld
dec
inc
in
jg
jle
push
ret
int
cmpsb
test
push
adc
mov
enter
dec
mov
mov
popf
lret
stos
int3
scas
sbb
mov
jmp
fadds
test
mov
mov
in
jne
jl
into
out
shlb
movsb
inc
fdivl
outsb
xor
lret
and
push
cmp
loopne
bound
data16
leave
jnp
loop
xchg
xchg
xorl
stc
push
xchg
aam
mov
inc
or
ds
add
mov
mov
sub
or
inc
js
leave
sbb
sarb
repnz
pop
call
roll
fidivrs
adcb
or
fwait
aam
paddusb
ljmp
nop
xchg
aas
iret
mov
call
repz
mov
jp
ljmp
and
add
add
arpl
push
mov
dec
sub
repnz
outsl
test
mov
add
inc
mov
shlb
pop
mov
aad
fwait
ss
ljmp
scas
shl
cmp
loop
shrl
movsb
push
pop
test
or
cmpsb
lock
repnz
sbb
mov
ljmp
fnstsw
lock
or
push
aad
sub
push
fistps
and
in
xlat
mov
and
sub
add
lret
hlt
shll
add
sub
sbb
pop
stos
mov
into
scas
dec
nop
mov
in
sub
adc
outsb
and
dec
into
testb
mov
sbbb
mov
jns
dec
rorb
test
mov
fxch
mov
notb
xchg
adc
mov
add
jb
in
cmp
sbb
and
inc
orb
pop
jns
push
and
push
push
or
push
aam
or
mov
pop
add
push
jno
loope
lret
inc
inc
hlt
add
xor
mov
cmp
pop
sets
scas
rcrb
test
sub
mov
adc
lret
scas
mov
dec
sti
sti
in
and
les
clc
mov
mov
imul
loop
jmp
gs
imul
pop
mov
push
mov
sti
inc
or
ficompl
nop
jp
sub
aam
hlt
divb
ja
pop
pop
pop
mov
sbb
std
gs
scas
jmp
std
shll
jno
xlat
lds
movsb
std
push
mov
push
repz
ds
dec
xor
add
js
adc
loope
mov
std
dec
int3
cld
mov
jle
jp
mov
ds
mov
ret
push
clc
mov
sti
jecxz
fidivs
test
pop
nop
sbb
pop
push
xchg
idivb
mov
repnz
dec
popf
jecxz
popa
fs
mov
cmpsl
mov
pop
jecxz
call
flds
lret
dec
in
mov
lea
lock
xor
adc
dec
js
mov
sbb
pop
ret
lea
dec
pop
movsb
idiv
ds
ss
push
push
lods
lds
fwait
or
cmpsb
testb
inc
mov
cmp
mov
mov
mov
jl
shll
jno
jb
stc
fwait
mov
bound
call
add
mov
inc
aad
sub
jmp
sub
in
jns,pn
pop
or
fisubrl
lahf
dec
cli
jae
mov
pusha
aam
xor
cmp
dec
add
mov
nop
dec
pop
jge
mov
movsb
mov
add
lock
adc
push
aad
leave
lcall
add
add
cld
sbb
pop
lea
push
repz
cmpsb
xor
inc
add
dec
insb
mov
ss
mov
sbb
into
inc
jae
outsb
loop
lahf
mov
testb
mov
xor
mov
and
jne
outsb
mov
xor
sub
mov
mov
adc
ljmp
lcall
jno
sahf
rol
arpl
mov
xor
cmp
mov
sbb
mov
sub
or
lds
int3
mov
sbb
popa
pop
out
loope
xchg
lods
jno
mov
sbb
cmp
and
test
in
jg
stos
aad
xchg
push
sbb
cmp
push
aas
test
add
jle
popa
adc
ss
push
xchg
cli
mov
imul
fmulp
mov
std
imul
loop
pop
pop
faddl
dec
or
repnz
aad
rcrb
das
aam
jmp
mov
adc
loope
adc
push
lods
and
ret
fwait
or
inc
cmpsl
std
test
sub
mov
and
stc
daa
fsubl
imull
adc
push
out
or
adc
pop
leave
sahf
decb
adc
into
in
sub
daa
jno
leave
lods
jmp
inc
dec
pop
push
mov
jp
loop
shr
mov
faddl
push
jnp
push
cli
adc
adc
jmp
in
test
lret
mov
mov
xor
adc
sbb
inc
call
dec
or
loope
into
in
inc
adcb
mov
pop
notb
mov
or
je
popf
or
dec
inc
aam
in
mov
out
add
rcr
or
popf
or
loopne
imul
data16
icebp
inc
das
rorb
movsb
lock
cli
adc
jl
jle
add
popf
fwait
loopne
jae
call
inc
add
popf
fisubl
leave
pop
mov
add
fstpl
imul
mov
inc
enter
dec
cmp
popf
aam
stos
jge
scas
call
fstl
jmp
cmpsl
ljmp
dec
cmp
je
jg
xlat
ret
mov
mov
xchg
cmp
jbe
arpl
shl
xor
push
pop
push
and
mov
insb
and
movsl
scas
add
pop
out
dec
and
insl
loop
pushf
push
mov
mov
out
insl
nop
les
mov
push
into
adc
push
add
pop
loope
mov
or
lret
icebp
aaa
out
mov
mov
das
push
xchg
ficoms
repnz
fwait
or
fstl
lret
inc
test
inc
lret
addr16
push
jg
cmp
push
jmp
stos
push
fs
arpl
push
mov
cmp
test
rcr
ret
out
lea
lock
ds
fscale
xor
jp
pushl
pushf
xor
mov
fildl
add
and
mov
cs
out
dec
hlt
stc
inc
rorb
or
mov
hlt
shl
add
repz
or
in
aad
std
lahf
cmp
ficomps
push
mov
mov
in
or
mov
and
add
mov
mov
add
or
mov
mov
xchg
into
fnstsw
fcom
mov
mov
not
hlt
imul
xchg
shrb
not
or
sbb
sbb
lds
lods
cmpsl
add
mov
jns
sbb
fcmovnu
mov
lret
lret
adc
in
mov
daa
cmp
or
add
fiadds
bound
enter
push
mov
push
dec
pop
cmp
jae
into
sti
push
sar
cmp
sbb
inc
xchg
push
mov
push
iret
pop
test
xor
mov
shl
enter
std
ret
iret
pop
and
and
int3
js
sbb
jno
mov
jecxz
iret
lods
arpl
sbb
insl
cmp
in
lret
cld
ds
mov
int3
lret
add
dec
fiadds
mov
lods
push
daa
mov
jle
ljmp
stc
jbe
inc
push
fsubs
pop
xchg
cmp
mov
or
dec
xor
movsl
les
pop
jp
mov
push
out
mov
jbe
leave
push
loopne
rol
add
adc
pop
test
cmc
stc
jl
rol
idivb
xor
sbb
fimuls
push
push
inc
fdivrp
clc
mov
sub
jne
push
mov
mov
jo
add
popa
pushf
das
mov
pop
outsb
ja
dec
test
popf
jnp
int
lret
inc
or
xchg
jbe
jg
ss
xchg
add
hlt
lret
into
mov
lds
mov
add
in
lret
or
stos
pop
loope
xlat
testb
jl
push
lret
xor
pop
or
rclb
icebp
mov
mov
xor
inc
xor
mov
repnz
dec
clc
cmp
and
dec
rclb
lock
sub
cltd
mov
inc
mov
insb
in
idivl
mov
ret
mov
pop
jge
pop
inc
lock
loop
rorb
in
xchg
repnz
mov
cmc
fstpl
jno
cltd
or
dec
loope
sbb
cmp
xor
push
orl
dec
mov
int
dec
mov
popf
sarb
inc
test
cmpl
sub
cmp
call
xchg
fs
xor
mov
clc
adc
inc
pushf
jl
mov
push
test
aad
popf
imul
cltd
inc
cmp
mov
adc
push
divb
idivb
in
sarl
cli
sbb
insl
in
xor
negl
sub
es
rol
mov
leave
popf
aam
iret
scas
fucomp
push
or
mov
pop
or
adc
jae
push
adc
mov
xor
push
push
test
cmp
cmp
pop
mov
pop
in
sbb
xor
int3
push
sbb
mov
pop
aam
dec
adc
cmp
repnz
push
mov
jmp
cmp
lods
jno
push
sahf
pop
or
test
aas
push
jns
test
pop
jge
mov
xchg
pushf
push
iret
pop
sub
adc
push
xchg
push
notb
adc
into
sub
jge
and
stos
int
adc
loopne
not
xchg
or
sahf
push
lcall
adc
sbb
pop
dec
stc
and
pop
jg
jge
scas
sbb
adc
aad
shll
fidivrs
push
push
es
cmp
cltd
outsl
push
xchg
jmp
mov
aam
adc
and
je
sub
int
pop
mov
in
xor
add
push
sbb
in
negb
je
xchg
xchg
cmp
or
or
out
xor
arpl
xchg
cmpsl
je
inc
add
adc
in
imul
mov
mov
pop
cld
lret
jp
shlb
int3
stos
test
dec
pop
cli
adc
mov
mov
xor
or
ret
or
pop
iret
dec
sarl
in
pop
push
cmpsb
ja
enter
test
out
js
incb
dec
xchg
sbb
divl
lds
push
and
adc
sarl
dec
call
mov
ljmp
xor
jne
add
inc
rcrl
pop
imul
jns
xor
divb
dec
jl
shlb
rcrb
xchg
lock
les
stc
xchg
lds
pushf
add
or
add
pop
int
dec
int
fistl
mov
adc
xchg
pop
xchg
stos
xor
andb
xchg
lock
push
dec
aaa
adc
pop
cmpsb
add
push
pop
pop
dec
mov
fnstsw
fimull
cli
aad
iret
lret
shrb
int
repnz
mov
sbb
push
cmpsb
arpl
roll
out
mov
das
mov
cmp
enter
jno
xchg
push
sub
mov
sarb
pop
cs
push
sub
ret
cmp
bound
leave
push
mov
call
cwtl
sub
mov
rorl
popf
imul
cwtl
in
je
call
fcoml
mov
sahf
not
shrl
mov
test
insb
dec
mov
cli
dec
cld
jne
adc
mov
dec
int
add
outsb
dec
sahf
mov
dec
jmp
adc
pop
jg
or
or
sub
mov
sahf
fistl
aad
sub
aad
or
sbb
fimuls
stos
fst
popa
fdivrs
cli
movsb
add
repnz
pop
and
out
lea
mov
jmp
insl
mov
push
pushf
in
lds
and
rorl
int3
push
popf
dec
inc
pop
mov
or
ret
fmuls
adc
sub
ds
in
inc
jns
xchg
cld
ret
xlat
sbb
cmp
inc
ficomps
fsts
inc
or
push
sahf
push
mov
or
cli
jle
outsb
fwait
or
lret
lret
and
rcl
fcompl
dec
popa
and
aad
lods
dec
fcoml
xor
sbb
add
into
sub
jne
fisubrs
xor
push
pop
jle
sarl
sbb
ds
sbb
and
mov
adc
dec
shl
leave
add
xor
shlb
ljmp
mov
nop
push
pop
pusha
adc
dec
jbe
or
mov
inc
loop
push
std
das
dec
es
hlt
sub
fucom
loopne
and
mov
cmc
cmp
jb
push
mov
les
lahf
xor
cmpsb
xor
xchg
jp
jmp
pop
rcl
call
push
sub
mov
mov
jae
sar
lds
lcall
inc
xchg
rclb
push
sti
mov
sub
incb
mov
xchg
movsl
add
into
js
in
aad
popf
lods
rclb
dec
dec
and
xor
mov
lahf
jo
sub
cltd
or
xor
lahf
jno
or
jnp
mov
es
add
repnz
lret
fcomi
or
xor
sahf
push
imul
scas
sub
mov
or
and
addr16
adcb
mov
or
xor
mov
sub
push
xchg
test
repnz
and
cwtl
and
lahf
xlat
xor
adc
and
push
jp
adc
xrelease
adc
lahf
test
repnz
mov
push
leave
fucomi
sbb
jecxz
xor
dec
out
popa
mov
testb
xchg
out
test
add
and
mov
add
add
mov
inc
mov
xchg
fnstsw
ja
fsubr
mov
jg
data16
fimull
mov
add
mov
pop
movb
les
push
xchg
jno
mov
dec
xor
test
lret
fistl
xchg
pushw
sti
test
out
shll
push
daa
xchg
adc
subb
sbb
xor
cli
mov
dec
stos
movsl
fisubs
xor
popa
ljmp
fsubr
stos
xchg
out
enter
add
shlb
dec
xchg
mov
push
repz
xchg
popa
inc
push
push
mov
out
out
test
ja
or
icebp
and
in
popa
jg
cmpsl
sub
add
push
jp
cmc
rorb
clc
pop
push
push
pop
jbe
jns
jmp
bound
pop
dec
sbb
adc
mov
pop
inc
mov
jno
aam
cmpsl
sub
sub
adc
jge
sbb
pop
ja
adcb
or
rcl
outsb
or
popf
xor
and
pop
in
nop
loope
gs
xchg
and
dec
mov
and
cmp
and
cli
xchg
imul
jecxz
sahf
mov
sub
iret
mov
enter
out
lahf
pop
xchg
aaa
push
call
cltd
dec
cli
jbe
or
mov
jns
movsl
mov
jae
inc
aad
out
inc
pop
dec
mov
pusha
jmp
dec
xchg
push
enter
mull
lcall
scas
call
xlat
dec
pusha
mov
stc
mov
fisttpll
jecxz
and
outsl
clc
lret
pop
ja
incl
cmp
sti
sbb
fs
cli
mov
sub
aas
call
stos
cmp
mov
aad
frstor
mov
into
fldl
repnz
inc
sub
scas
mov
sbb
into
out
ds
arpl
stos
xchg
outsb
lcall
sbb
adc
js
pushf
lret
push
rcrl
sub
aaa
mov
loopne
out
lcall
aad
mov
movswl
sub
xchg
jge
lcall
sub
loope
mov
xor
push
cmpsl
lds
or
xor
loop
and
mov
jns
jne
jns
mov
sub
int3
cmpb
mov
sub
ret
xchg
js
pop
scas
xor
mov
push
lock
mov
inc
shrb
cltd
loop
adc
imul
push
mov
sub
out
jp
mov
xchg
or
add
adc
lock
scas
cmp
mov
jle
fidivrl
int3
cmp
test
ror
movsl
xchg
dec
les
lahf
mov
sub
scas
nop
sub
dec
pushf
pop
mov
repz
sub
js
inc
push
cld
sub
xor
mov
cli
loope
add
mov
jl
into
sahf
xchg
mov
out
xchg
int
and
jle
cli
xchg
sub
push
dec
pop
stc
pop
jmp
xchg
jb
int
mov
mov
dec
inc
fsubs
mull
pop
repz
mov
pop
stc
mov
mov
int
inc
pop
inc
jle
shlb
std
jmp
xchg
push
xchg
and
pop
push
clc
or
dec
jns,pt
dec
jne
aam
fcomps
out
ss
or
sbb
pop
adc
out
test
imul
mov
pop
dec
stos
rolb
hlt
aam
ds
jbe
movsl
movsb
mov
mov
imul
scas
xchg
cmp
lret
adc
dec
leave
push
inc
or
or
pop
push
adc
lret
mov
cmpsb
rolb
test
inc
pop
loopne
imul
icebp
dec
pop
stos
adc
fabs
sbb
xlat
or
rcl
sub
push
aas
inc
push
int3
sbb
lods
in
mov
mov
popa
jmp
hlt
aam
mov
jp
cmp
jae
lods
sub
std
dec
cmp
adc
adc
leave
cmc
shlb
stos
sbb
cmp
xor
fwait
mov
lds
out
in
sbb
dec
cli
outsl
out
pop
fcompl
dec
js
mov
or
jno
add
push
mov
out
push
inc
sub
pop
in
jle
adc
mov
dec
cmc
loopne
mov
jbe
popa
dec
je
lahf
xchg
add
jecxz
sub
adc
dec
sbb
sub
adc
andl
sbb
popf
mov
mov
mov
aas
movsl
into
stc
fcomps
cld
sub
fsts
xchg
sub
pusha
arpl
add
xchg
stos
out
jns
rorl
jmp
fwait
dec
mov
ret
add
insb
jmp
sahf
mov
aad
or
ds
sbb
mov
xor
pop
test
data16
mov
sbb
ret
aas
jp
xchg
popf
sub
lods
rcrl
adc
mov
dec
int
mov
pmaxub
sbb
cmc
or
shll
lret
and
imull
mov
jecxz
fistl
filds
push
add
sbb
aad
pop
sub
js
xlat
rorl
imul
mov
arpl
cli
dec
inc
dec
pushl
negl
cltd
cmpb
aas
push
addr16
pop
out
jo
clc
cmp
pushw
idivl
fdivs
fnstcw
stos
jmp
inc
scas
jg
inc
xchg
or
jge
hlt
mov
iret
dec
jns
inc
iret
fstl
rcrl
xor
ja
fldl2t
mov
or
rorl
lcall
sbb
or
push
and
and
popa
imul
push
cmc
lret
cmp
icebp
xchg
jb
xchg
push
stc
stos
push
inc
popf
orb
mov
add
lret
adc
mov
sbb
pop
and
bound
int
call
jmp
in
sbb
dec
addr16
scas
fucomp
push
movsl
mov
xchg
mov
cwtl
push
cmp
scas
inc
push
pop
push
sub
fwait
ret
sub
shr
icebp
or
pusha
add
xlat
mov
jno
repz
cmc
jg
fstps
mov
jmp
dec
pop
push
test
mov
stos
and
lahf
mov
ds
sub
ficoml
in
fldl
add
push
jno
inc
or
popf
inc
mov
mov
pause
movsb
jo
jmp
fwait
sbb
dec
arpl
inc
mov
notb
sarb
dec
fsubr
push
lds
and
hlt
leave
dec
loop
mov
inc
hlt
repz
je
in
inc
jo
fmulp
push
fisttpll
movsl
jne
std
mov
movsb
mov
jnp
inc
ss
push
jo
mov
or
lds
jge
lea
jae
ja
xchg
mov
subl
xchg
das
icebp
fdivrl
out
xchg
dec
stc
xchg
or
aam
sbb
xchg
push
pop
or
test
sti
dec
mov
jno
popl
add
pop
jmp
xchg
mov
xor
std
frstor
movl
in
cmp
call
adc
or
int
arpl
jge
aam
lods
or
mov
mov
arpl
mov
jp
loope
divl
jmp
jno
aas
push
scas
xchg
fdivrs
jg
movsl
mov
shrb
mov
fldt
pop
mov
jb
rcll
and
adc
cmp
das
shl
roll
fs
sti
mulb
mov
push
or
xchg
mov
inc
test
pop
bound
inc
aam
fs
jl
lcall
push
dec
mov
add
cld
inc
pushf
fcompl
or
gs
push
cmpsb
iret
aaa
fisubrl
stc
es
add
adc
mov
imul
or
xchg
bound
mov
pop
test
rclb
rolb
aad
aaa
cmp
je
movsb
or
mov
mov
imul
cmp
mov
or
fnstsw
jb
mov
stos
adc
xchg
cmp
orb
or
mov
and
sahf
and
or
jo
dec
adc
pop
xor
mov
pusha
push
movsb
es
ret
pop
out
mov
mov
dec
mov
aas
xor
sub
mov
fcompl
cmp
ret
in
aaa
sbbl
in
cmp
cmp
fisttps
addl
ljmp
out
push
or
lods
push
mulb
jno
lahf
out
inc
std
jno
imul
lods
iret
sbbb
cmp
or
dec
mov
aaa
ja
xchg
pop
dec
aas
les
sar
dec
mov
add
icebp
inc
jnp
sti
pop
and
repz
sti
in
int3
inc
jl
cld
rcll
xorb
xor
push
mov
movsb
and
aam
je
negb
imul
fwait
lahf
jns
cli
sub
inc
xor
sbb
jmp
shlb
fwait
xlat
jo
xchg
roll
ss
sbb
into
test
out
negb
dec
push
sahf
inc
jnp
lods
adc
pop
pop
mov
notl
cld
mov
in
test
or
jle
xchg
push
jnp
adc
loopne
cs
sbb
int3
add
sbb
jne
mov
mov
leave
adc
mov
mov
in
addb
flds
stos
mov
lds
std
push
fwait
jg
js
push
xchg
cld
addl
aam
ret
mov
fidivrs
bound
cmpsb
mov
repz
cmp
data16
pop
dec
fcmovnb
ljmp
pop
push
inc
outsb
and
fisttpll
rcrl
fisubrl
test
mov
cmp
imul
xlat
adc
in
jp
push
aaa
mov
inc
inc
add
mov
jecxz
jno
xlat
lock
insl
int
repz
jb
cmp
push
leave
jge
push
mov
rcrb
scas
lods
loope
aad
jbe
or
repz
scas
lret
xor
or
adc
mov
push
inc
xor
daa
xor
sbb
add
lahf
enter
subl
stos
cmp
jge
cmp
lahf
movsl
aam
sub
cmpsb
or
fidivrs
xchg
js
jmp
and
lds
sbb
dec
jne
cli
and
adc
mov
mov
sbbb
cmc
push
or
aad
daa
sarl
jmp
popf
scas
xor
stc
add
push
outsl
pop
sub
xchg
sbb
test
pop
cmp
repz
dec
das
outsl
sbb
in
or
scas
test
imul
stc
jge
clc
xlat
pop
xor
inc
cld
clc
push
pushf
add
mov
and
fmulp
jno
push
jns
mov
sub
lock
xchg
out
jp
shlb
or
dec
loope
clc
out
push
mov
mov
sbb
fmuls
mov
sub
lea
and
xor
fwait
pop
dec
add
stc
jmp
movsl
fcmovne
int3
pusha
in
scas
jg
fcomip
mov
arpl
das
test
repnz
add
push
jp
sbb
les
sub
les
js
fsubl
call
popf
cmc
imul
add
lock
add
je
insb
cmp
lret
stos
ds
es
add
mov
mov
enter
jnp
cli
daa
fadd
mov
xor
call
mov
pop
je
nop
or
mov
mov
xor
lds
out
aad
fiaddl
aas
jge
sbb
mov
add
adc
test
adc
icebp
pop
xchg
xor
jge
aad
inc
movsb
popa
div
push
xor
daa
cmpsb
add
cvtps2pi
call
mov
xchg
jmp
inc
out
int3
mov
push
mov
cs
jmp
scas
jb
sar
es
icebp
jge
push
xorb
xchg
add
insb
add
movsb
lea
mov
shl
rorl
rcll
out
add
vpsubb
mov
sbb
jne
cmp
ror
das
rolb
lods
pop
sbb
test
dec
out
mov
xchg
jmp
pop
xchg
stos
into
movb
arpl
dec
inc
xor
in
lcall
stc
dec
lods
push
mov
xchg
mov
push
add
pop
xor
movsb
jo
push
mov
les
jge
mov
mov
pusha
cmp
xchg
mov
pop
mov
or
and
fsub
popf
fidivs
ja
xchg
mov
leave
xchg
imul
push
jo
imul
push
dec
addl
sbbb
xchg
int
sahf
cmpsb
sbb
mov
insb
mov
push
out
jnp
dec
cmc
lret
push
loope
lea
ljmp
cli
inc
or
in
dec
mov
shlb
adcl
sbb
scas
jl
shll
dec
mov
jno
rcl
movl
call
test
int
aaa
xor
jno
stos
clc
push
into
popa
outsl
sarl
out
ret
xchg
xchg
nop
xor
add
add
adc
mov
std
cld
sub
xor
out
lret
in
inc
jg
and
testl
push
sbb
fwait
sbb
arpl
lret
je
aad
popa
mov
scas
not
jp
call
jae
jo
ss
lds
cli
xchg
adc
pop
loope
xor
ds
jl
xchg
mov
enter
sub
xlat
nop
cmp
push
mov
cli
fisubrs
xlat
jmp
repz
bound
orb
ret
mov
hlt
or
hlt
movsl
pop
mov
in
lret
and
mov
sub
mov
jecxz
out
mov
xchg
sub
hlt
inc
rorl
lods
rcrl
pop
sbb
popf
pop
popf
cmp
in
sahf
test
pop
movsl
sbb
inc
cli
jl
add
in
and
fiaddl
imulb
jne
sar
fldl
mov
les
mov
insb
xchg
movsb
add
aad
lret
cmp
or
repz
cmp
jbe
pop
dec
es
int
add
or
add
and
xchg
adc
xchg
sbb
and
sub
mov
and
in
daa
je
and
mov
or
lods
cmp
add
sbb
lea
jbe
pop
shrb
movsl
loop
xlat
fldenv
push
in
fistpl
xor
dec
xor
enter
pop
and
dec
mov
out
mov
mov
shrb
lods
mov
nop
cmpb
insb
es
shlb
cltd
movsb
xor
xchg
mov
loope
jecxz
xchg
add
or
or
adc
jle
stc
or
push
xchg
mov
add
ret
sahf
mov
xor
dec
mov
adc
in
aad
movl
dec
outsl
and
cli
test
cmp
fidivrs
or
movsl
lea
jge
shlb
mov
std
in
push
js
add
push
ret
test
mov
test
mov
adc
adc
adc
xchg
dec
mov
and
not
add
and
movsb
xchg
xchg
lods
jmp
addb
insl
add
adc
hlt
jecxz
out
or
sahf
int3
add
lds
and
fcmovu
stos
mov
sub
sub
lods
and
test
dec
ss
mov
sbbl
out
pop
leave
push
push
xchg
cli
or
jnp
jne
insb
mov
into
push
int3
and
or
pop
and
cmp
lahf
popa
dec
imul
sbb
xor
and
rol
sbb
mov
rcl
jnp
add
out
cmc
popa
hlt
mov
test
movsb
cmp
pop
into
loope
add
inc
sbb
push
add
aam
imul
mov
fstp
jle
mov
shl
cmp
cmp
jmp
aaa
mov
mov
lods
outsl
cmp
lret
fistl
lock
mov
std
pop
sub
or
lret
mov
sub
jnp
push
scas
lock
cmp
or
xchg
out
or
xchg
cmp
mov
ret
push
or
pusha
pop
sbb
push
sti
lea
jecxz
sub
xchg
mov
jecxz
mov
testl
sbb
movsb
in
jle
repnz
ja
sub
fadds
or
loopne
test
mov
lods
dec
pop
dec
inc
jge
push
and
out
sti
negb
arpl
scas
adc
jns
mov
in
mov
pop
out
or
fldcw
pop
pop
mov
xor
pop
xchg
mov
vorps
inc
push
and
das
daa
fwait
push
stos
popa
push
lcall
jnp
std
mov
xchg
push
outsb
cmp
out
mov
sti
test
jecxz
repnz
ja
cwtl
into
xchg
in
jbe,pt
jecxz
add
jmp
out
test
and
bound
gs
imul
call
lods
pushf
rorl
push
jno
sahf
sti
cmp
scas
ljmp
bsr
jecxz
insb
adc
clc
mov
sbb
aaa
in
mov
pop
pop
roll
dec
sarb
mov
add
or
mov
mov
xchg
dec
xchg
mov
xchg
xchg
insb
mov
rorb
sbb
pop
aas
test
push
sub
mov
ljmp
push
jnp
inc
xchg
and
add
aad
add
repnz
cmp
mov
xchg
push
pop
lea
negl
pop
loope
cwtl
mov
stc
sub
int3
popf
std
or
out
ja
imul
cli
call
scas
dec
jae
jg
ret
sbb
mov
cmp
push
out
js
add
int
and
scas
fistpl
or
fcoml
mov
or
or
loopne
loop
xchg
in
into
push
pop
rcr
mov
pushl
mov
and
cmp
out
fistps
aaa
lock
jae
ja
push
sub
hlt
pop
insb
in
xor
adc
or
das
xorb
aam
fcmovbe
aaa
lods
xchg
aam
mov
fisubl
pop
sti
ja
or
mov
and
xchg
push
xchg
data16
or
cmc
pop
adc
jecxz
lcall
inc
or
rolb
aam
mov
xchg
repz
push
lcall
aam
mov
das
pop
rcrl
lods
lea
loop
add
pop
shlb
mov
pop
add
dec
xchg
scas
cmp
cmp
js
dec
loop
divl
idivb
aam
jle
jmp
jae
add
clc
ljmp
mov
jge
inc
sarb
sub
es
or
jnp
pop
lods
mov
shrb
mov
add
iret
rol
rol
xor
gs
sub
add
or
rclb
scas
int
mov
rorl
jecxz
in
test
sti
std
sarb
aad
xchg
xchg
scas
xchg
jb
shrb
adc
sbb
lahf
ljmp
ja
push
dec
out
call
adc
ss
test
pushf
ror
les
mov
push
ret
pop
addl
loopne
add
lods
into
loopne
pop
jae
std
test
mov
jmp
push
dec
iret
pushl
data16
mov
dec
idivl
ds
adc
push
subb
mov
loop
icebp
push
aas
cmpsl
lahf
mov
mov
xor
jl
out
sub
push
sbb
je
jle
popl
mov
xlat
sahf
cmp
or
rcrl
flds
fcom
mov
cwtl
inc
mov
lock
mov
out
adc
mov
adc
and
in
pop
loope
inc
push
add
jmp
in
repz
cmp
push
sbb
jb
push
popf
scas
cmp
pop
pop
dec
arpl
loop
movsl
rorb
cmp
inc
xor
xchg
adc
adc
sub
jnp
inc
dec
jecxz
inc
negb
push
sub
repz
dec
int3
mov
cs
test
mov
ss
push
xchg
xor
test
leave
shl
adc
loop
lret
jmp
mov
in
and
insl
mov
ret
add
jp
enter
out
inc
adc
sahf
inc
loop
mov
scas
jb
loop
cmpsl
cs
jb
fwait
add
mov
mov
hlt
call
popa
insb
xor
cmp
push
add
sbb
push
mov
mov
or
icebp
mov
cltd
aaa
mov
ficoml
mov
xchg
push
add
cwtl
add
sub
mov
xchg
daa
sbb
in
stos
in
jae
adc
jmp
add
adc
nop
mov
mov
mov
nop
std
fsqrt
sbb
and
repnz
inc
add
dec
js
mov
popa
cs
xor
cmp
inc
rolb
sub
mov
orb
add
mov
push
fcoml
xchg
mov
into
test
add
aaa
mov
xchg
jl
mov
scas
adc
lahf
aaa
mov
cmc
mov
cmp
hlt
icebp
sub
inc
fbstp
inc
call
cmc
js
xchg
cmp
pop
sbb
sbb
pop
rcl
mov
sub
clc
cltd
or
loopne
clc
pop
pop
test
fs
lret
or
es
stc
shr
inc
imul
pop
mov
pop
and
cmpl
jnp
call
mov
mov
and
insl
jmp
or
es
mov
fisttpll
push
fld
sbb
inc
imul
or
pop
xchg
dec
xchg
js,pt
push
mov
or
mul
test
mov
push
xor
xlat
nop
add
push
in
jmp
cmpsl
dec
bswap
shll
sbb
sub
ljmp
mov
mov
pusha
fcmovu
mov
add
mov
lds
mov
outsb
sar
out
and
fsubrl
test
aas
inc
mov
cli
push
jecxz
cltd
pop
xchg
das
in
xchg
sbb
rcrl
push
js
mov
inc
cli
jge
or
xor
dec
cli
xlat
dec
xchg
stos
adc
pop
in
test
add
cmp
orl
push
sarl
cmpsb
scas
frstpm(287
mov
adc
aaa
std
ret
andb
jno
mov
data16
cs
jns
stos
and
inc
add
dec
ror
mov
adc
xchg
rcrl
jnp
cmovae
cmp
sbb
imul
idivl
xorb
add
sbb
repz
cmc
mov
ret
aam
inc
lods
movsb
add
jecxz
push
and
mov
sti
rclb
mov
xchg
int3
mov
and
mov
mov
aas
mov
xchg
mov
jo
sub
scas
jecxz
lcall
stc
dec
xor
or
dec
ljmp
dec
and
push
adcb
jne
xchg
insl
mov
xchg
push
lret
add
jp
in
rorb
jle
orb
loop
jmp
mov
aas
leave
xor
test
dec
rcrb
add
jecxz
mov
out
xor
js
mov
loope
jle
push
test
mov
data16
mov
gs
aaa
mov
xor
sbb
iret
rcll
test
adc
pop
in
jecxz
and
dec
iret
lahf
jl
sbb
enter
mov
aaa
in
mov
mov
xchg
inc
mov
leave
stos
jns
adc
rcrb
inc
jmp
add
ljmp
fsubs
icebp
ljmp
and
cmc
les
jmp
stos
test
stos
or
dec
dec
jmp
push
hlt
subl
lds
lret
fsubr
xlat
mov
loopne
inc
popf
cwtl
lods
insb
pushf
or
sbb
pop
push
ret
fidivl
data16
xchg
clc
out
lcall
ja
shrb
dec
lods
adc
mov
icebp
test
or
shlb
mov
notl
dec
xchg
pushf
cwtl
js
ja
mov
mov
push
sub
dec
daa
sbb
or
mov
sub
pop
roll
test
orl
xor
mov
loopne
dec
pop
xchg
mov
pop
mov
iret
cld
ret
aas
lcall
inc
call
sub
mov
sub
xor
mov
mov
stos
ror
mov
cld
nop
lea
test
rorl
ss
xchg
and
jnp
shl
icebp
mov
dec
out
mov
cmp
xchg
enter
test
xor
les
outsl
lcall
js
hlt
or
pop
movsb
shll
in
xchg
daa
xor
loope
lock
int3
xchg
xchg
add
int3
sub
call
mov
fucom
mov
lea
cmc
mov
mov
add
cmpsb
or
add
out
fisubrs
sbb
cmp
cmp
or
fs
cmp
or
adc
insb
xchg
addb
sbb
ljmp
aad
mov
into
loope
dec
in
jp
push
fidivrs
fildl
push
mov
jo
mov
xchg
cld
xor
jle
fsubrs
je
mov
int3
aas
lock
push
pushf
fidivl
scas
xchg
sar
mov
push
sbb
sbbl
dec
jmp
notl
mov
movl
movsl
movsl
adc
or
sub
imul
clc
call
add
inc
std
push
cld
xchg
mov
repz
push
jg
loope
xor
inc
jmp
cmp
or
ljmp
lea
inc
sbb
push
dec
or
bound
or
sbb
jb
lock
xor
push
sbb
cmp
jl
popa
sub
xchg
shll
jp
in
pop
xor
sub
mov
hlt
mov
dec
js
test
cltd
sbb
lret
hlt
inc
xor
fisttpll
xor
fcom
movsb
pop
ret
sub
xchg
and
jo
test
mov
adc
mov
push
cmp
test
repz
adc
pop
fwait
in
ja
pop
or
shl
aad
or
mov
dec
push
out
push
sbb
scas
jp
cwtl
imul
pop
lods
jmp
mov
push
xchg
mov
or
push
add
or
repnz
xor
enter
sti
shrb
gs
inc
fidivrl
stc
cwtl
jge
or
push
pop
sbb
loope
js
inc
mov
jmp
mov
mov
jne
mov
ss
mov
push
sbb
pop
mov
mov
cld
sbb
loop
dec
jbe
rorl
outsb
pop
mov
sub
jo
push
mov
mov
jl
inc
icebp
idivb
mov
into
movsb
sbb
mov
jg
mov
cmpsb
stos
dec
inc
inc
push
js
pop
mov
mov
jmp
inc
push
pop
xor
div
mov
push
mov
or
les
xchg
ds
iret
in
dec
jmp
fidivrl
in
lret
lods
cmp
jns
lahf
sbb
shlb
pop
and
pop
sti
pop
fadd
pop
xchg
push
or
faddl
and
or
push
xor
xchg
shlb
cmp
lock
insl
arpl
aam
xor
push
arpl
inc
negb
into
add
into
lods
sbb
or
and
ror
loopne
hlt
mov
icebp
enter
mov
fidivs
sbb
ds
fnstsw
pop
daa
jge
sub
mov
loopne
rcr
push
xchg
cmp
mov
mul
mov
adc
les
movsb
sub
clc
sahf
gs
andl
push
ret
call
movsb
je
out
test
jmp
cmpsb
test
or
jne
repz
lahf
or
insb
das
icebp
std
jns
mov
adc
pop
adc
adc
inc
imul
out
push
pop
pusha
pusha
stc
es
pop
sbb
push
ret
xor
fdivrs
jmp
jnp
movsb
push
sub
and
push
jg
cmp
xor
sbb
inc
mov
rcrl
mov
push
and
decb
adc
add
gs
filds
cmp
out
icebp
push
sub
jb
into
cmc
ret
pop
decl
prefetch
jge
xchg
cmc
jns
ffree
fcoms
iret
ficoms
or
ljmp
push
mov
sub
notl
insl
insb
test
jmp
jno
outsl
fcomip
mov
push
push
std
mov
add
gs
push
ds
cwtl
dec
mov
push
inc
ljmp
pop
ljmp
adc
std
xor
popl
or
or
lret
fadd
push
mov
jge
pop
cli
lret
subb
mul
push
push
lcall
dec
mov
lahf
sbb
icebp
sub
aam
call
repz
outsl
xlat
xchg
pop
cmp
mov
mov
popa
mov
jecxz
sbb
fldcw
insl
push
sahf
jle
sbb
loope
push
dec
call
jge
pusha
out
sub
push
notb
push
xor
and
mov
int3
movsl
jp
push
into
cmpsl
dec
and
outsb
sub
stos
stos
rcr
jge
mov
pop
orb
gs
lret
mov
shll
inc
push
orb
xor
and
push
repnz
add
icebp
cmovae
bound
fimuls
mov
push
push
jecxz
in
int
dec
xchg
push
fsubrl
cmp
inc
push
addb
out
shrb
lcall
test
cmc
lods
pop
pop
mov
fmuls
and
movsb
mov
mov
mov
sbb
mov
pop
cs
push
cmp
roll
adcb
loop
popf
into
arpl
and
cmp
pop
xchg
je
imul
scas
clc
std
fucom
out
or
push
rcll
ja
jo
pop
ret
addl
jo
ljmp
mov
cmpsb
loopne
lret
push
push
lret
mov
dec
push
jg
push
iret
es
push
push
mov
hlt
mov
shrb
cld
int3
push
add
in
in
sbb
movsb
dec
ljmp
clc
ret
sahf
pop
int3
push
sub
iret
pop
out
or
outsb
jmp
fldcw
add
cmp
shrl
add
and
pusha
ficomps
movsl
ljmp
mov
shlb
xchg
mov
xlat
aad
pop
mov
clc
mov
lods
mov
rorl
mov
jmp
mov
jle
jmp
fmul
insl
mov
rclb
mov
inc
add
fxch
sbb
pop
fnsave
aas
mov
cli
jp
std
mov
sbb
inc
cmp
sub
cmc
iretw
pushf
gs
int
std
sbb
cmp
frstpm(287
xor
mov
and
aad
mov
pushf
in
inc
jno
aad
out
jge
mov
jae
lods
les
js
stc
test
fs
in
and
int3
fcom
pop
lret
arpl
jbe
push
div
push
enter
inc
out
add
add
mov
add
add
push
test
test
bound
popf
sub
push
lea
or
orb
jns
mov
int
dec
in
aam
hlt
and
or
add
not
xchg
jg
pusha
dec
lods
divb
push
sbb
push
in
mov
push
adc
lret
in
mov
mov
mov
xchg
mov
mov
and
mov
incb
sub
jns
jl
cwtl
sub
into
aad
dec
mov
nop
movsl
or
mov
ljmp
loop
cmpb
cli
cmc
int3
jle
cmpsb
jmp
iret
dec
add
lods
inc
sub
push
add
call
mov
inc
stc
lods
arpl
lret
push
jmp
push
into
push
cmp
cmp
mov
ds
nop
les
jmp
pslld
cmpsl
adc
aas
pop
push
negl
sub
into
cld
cmc
push
xchg
movsb
jns
xor
sub
jle
stc
mov
push
xchg
ja
shlb
or
cs
int
cmp
xchg
mov
sbb
call
xor
and
movsl
icebp
inc
mov
inc
jge
xchg
fists
jge
adc
negl
outsl
sbb
test
scas
int
pop
jo
outsb
orb
fsubrs
inc
shrb
mov
dec
inc
jmp
icebp
pop
shlb
xchg
mov
lods
icebp
les
xor
add
jno
or
icebp
lret
jl
push
data16
push
mov
test
lcall
jb
bound
enter
in
mov
xchg
mov
pop
mov
mov
push
push
ja
mov
shl
inc
enter
testl
mov
inc
push
imul
imul
pop
push
jge
sub
cwtl
pusha
mov
jl
rcrl
cmp
jo
js
pop
int3
mov
lahf
and
jmp
add
or
enter
mov
lahf
leave
mov
xchg
mov
daa
dec
or
mov
rclb
cmp
sahf
dec
fmull
cmp
xchg
in
sub
adc
or
pop
jno
or
or
mov
aas
scas
popf
and
gs
lret
stos
mov
mov
fstl
jmp
push
hlt
or
sub
bound
scas
lcall
cmp
ret
fstl
xlat
scas
popf
in
mov
lods
loop
les
cmp
xor
xchg
xchg
test
fsubs
add
call
lret
insl
ss
mov
sub
das
jle
cwtl
jmp
add
xchg
sahf
pop
movswl
xor
mov
adc
mov
xchg
in
mov
add
shll
dec
lret
xchg
shrb
lods
and
cld
cmpsb
test
sbb
sbb
aam
js
sub
xchg
jle
ja
repz
insb
mull
out
xor
or
int3
call
mov
push
call
add
mov
ffreep
shlb
inc
fldenv
dec
mov
aam
add
pop
xchg
daa
jp
out
xchg
jmp
and
mov
out
lods
mov
jmp
test
mov
cmc
adc
mov
notl
jge
std
adc
sti
adc
inc
adc
mov
inc
mov
adc
aas
in
jg
and
fmull
jae
in
in
gs
mov
shlb
int3
cltd
push
mov
imul
lcall
pop
les
fwait
ljmp
add
mov
idivb
jnp
std
and
inc
stos
addb
mov
add
xchg
into
dec
into
push
lds
adc
in
shrb
fsubrl
adc
int
aam
dec
loopne
or
cltd
dec
fdivp
test
xor
jmp
add
cmp
lods
cli
sbbl
in
mov
mov
cmpsb
movsl
pop
lods
stc
xchg
call
sbb
push
adc
xchg
loopne
loope
rcrl
rolb
ret
push
lock
jmp
int
out
adc
cwtl
mov
adc
sbb
insl
adc
add
dec
insl
sbb
in
xchg
js
repz
or
mov
and
or
mov
ss
mov
mov
push
or
lret
clc
fiadds
and
fsub
cwtl
iret
and
das
ret
lahf
rorb
ret
test
mov
jmp
mov
aam
dec
test
or
fwait
sbb
dec
sti
or
pop
fs
sti
cmp
and
adc
xchg
push
stos
jnp
push
ja
mov
movsl
mov
push
push
in
mov
icebp
outsl
sbb
movsl
in
fisubl
jbe
push
addl
int
out
lret
lret
inc
pop
je
jecxz
add
pop
mov
insl
xor
jnp
shr
xchg
in
jmp
xchg
fs
sti
lret
mov
adc
loope
add
sub
mov
outsb
in
gs
cld
jno
lods
sub
imulb
push
jbe
imul
adc
insl
inc
adc
fcoml
into
add
lods
jge
xchg
pop
out
aam
push
cmpsl
popf
xchg
sub
add
int3
imul
fs
xchg
scas
jo
into
aam
mov
sbb
add
lods
pushf
cmp
popf
mov
arpl
shrb
dec
add
push
cld
std
mov
fwait
mov
int3
and
mov
jmp
jae
add
add
inc
jo
sub
mov
mov
and
sub
pop
mov
mov
dec
sub
mov
mov
aam
test
movsl
rolb
mov
mov
cmp
in
fisubs
fdivrs
in
mov
dec
jmp
dec
push
xchg
jecxz
xchg
mov
in
scas
pop
jge
pop
stc
enter
mov
xchg
xlat
add
adc
shrl
push
fst
int
out
ror
out
out
sub
ljmp
test
in
jecxz
enter
lock
rcll
je
hlt
stos
in
xchg
outsl
cmp
cmpsl
mov
and
or
xor
cmp
mov
mov
push
adc
pop
xchg
cmp
mov
vmovhps
push
push
gs
add
mov
push
fadd
gs
jge
and
mov
cmc
mov
hlt
int
les
je
jns
lcall
out
mov
in
or
pop
lret
sub
xlat
push
into
insl
mov
dec
movb
mov
mov
idivl
std
std
pop
push
jmp
out
and
ss
mov
cld
imul
cmp
shl
sub
les
lahf
inc
movsl
lcall
in
hlt
xchg
pop
or
jmp
fsubrl
sbb
into
es
scas
pop
jne
mov
std
adc
lahf
xchg
inc
cltd
mov
rolb
and
and
dec
in
sbbb
sub
mov
aad
ret
lret
cmc
jno
lock
inc
mov
push
jne
mov
enter
mov
mov
test
mov
or
jle
dec
imul
fcmovb
or
out
popf
std
dec
pop
out
cltd
pop
mov
scas
or
add
push
and
loope
inc
mov
loopne
rcll
jno
lahf
push
mov
enter
into
stc
loop
add
jb
out
pop
mov
dec
int
mov
dec
mov
ss
push
push
fisubrs
jecxz
dec
add
fistl
clc
xchg
sti
jne
rep
mov
jne
fwait
outsb
dec
mov
outsb
push
fadd
mov
sub
inc
jb
sbb
cmovae
cmc
dec
inc
loopne
stc
inc
bound
inc
dec
or
les
sahf
enter
lret
inc
xchg
stos
mov
out
mov
mov
jg
js
add
add
fwait
push
cmc
ja
pop
mov
and
mov
nop
sbbl
add
sbb
jg
ret
in
xchg
lret
lret
adc
cmpsb
das
mov
insb
and
dec
enter
shrl
fisttpll
mov
ljmp
aad
inc
out
add
mov
jb
imul
fsubrp
ror
fcmovne
mov
mov
out
mov
jne
out
mov
adc
lcall
aaa
pop
mov
adc
jae
ret
ret
inc
shrl
xor
in
mov
jmp
mov
not
imul
pop
lods
xchg
jmp
in
xor
jecxz
aam
inc
roll
insl
dec
mov
std
outsb
adc
push
shll
icebp
push
or
cmp
outsl
hlt
cmp
mov
mulb
or
lods
xor
les
sub
or
sub
shll
ja
push
mov
subl
mov
dec
lock
mov
dec
cld
decl
mov
push
int3
hlt
lahf
sub
popf
lahf
xor
mov
jno
ror
repz
jb
push
xchg
lret
ds
mov
and
and
out
aas
push
mov
dec
mov
inc
mov
sbb
mov
daa
mov
lret
lock
test
mov
cmp
sti
sub
and
cmp
loop
pop
jno
add
xor
cli
mov
sbb
fnsave
lret
outsl
fstpt
call
nop
popa
adc
ror
cmp
dec
fldt
xchg
and
mov
aaa
in
loop
cmp
js
add
stos
sub
cwtl
adc
push
add
push
mov
mov
roll
test
xor
add
mov
stc
jo
pushf
cmp
sub
xchg
hlt
shlb
jne
cltd
popa
mov
or
test
int3
mov
xor
nop
adc
shll
pop
push
adc
repnz
dec
aam
jmp
or
jb
cwtl
bound
lock
ret
dec
jp
lcall
sub
pop
jno
dec
mov
adc
sbb
movsb
into
mov
clc
dec
pushf
cmpsb
mov
jns
sub
outsb
enter
xchg
adc
sbb
in
xor
sub
filds
adc
mov
pop
or
sbb
repz
dec
xor
pop
mov
dec
jns
cmp
lahf
sub
movsb
clc
sub
inc
or
ljmp
cmp
xchg
xchg
push
out
js
jne
add
cmp
stos
sbb
daa
iret
mov
clc
subl
push
jecxz
lahf
adc
or
lods
lock
add
popf
xchg
add
sbb
jl
shr
rorl
mov
dec
sub
filds
mov
add
lret
movsl
je
fdivp
cld
push
cmp
rorb
sbb
fsts
jno
enter
ds
xchg
mov
dec
add
outsb
sub
xor
push
ja
push
jmp
js
jle
adc
pop
fimull
mov
pop
push
and
into
cmc
cmp
bound
jecxz
mov
cmpsb
push
pop
mov
test
jnp
lcall
inc
std
push
pushf
mov
adc
mov
push
stc
push
or
sarb
outsl
jmp
cwtl
std
mov
jmp
sub
int
call
mov
lcall
rolb
imul
sub
es
cmp
fstl
dec
mov
cld
pop
and
xor
lock
or
sarl
jp
cli
mov
shlb
mov
adc
or
jb
add
iret
scas
xchg
out
mov
add
mov
popf
jno
push
pop
mov
sbb
push
pusha
mov
pop
mov
cmp
pop
bound
add
stc
and
aam
mov
cltd
pop
push
cltd
push
test
test
sub
les
ljmp
jb
rcll
push
dec
jl
sub
fwait
add
xor
in
sarb
repz
aas
add
push
add
xlat
or
mov
ds
lret
add
sbb
jmp
shll
lods
subl
push
out
push
xchg
cmp
push
adc
dec
lea
dec
dec
jle
push
loop
mov
pop
mov
sar
dec
pop
or
xchg
mov
mov
sbb
fidivrl
test
popf
scas
sub
pop
repz
lock
dec
insl
sbb
test
add
rclb
inc
outsl
mov
jmp
mov
or
sub
repnz
push
pop
and
adc
call
xchg
incb
sbb
fsubl
repz
scas
mov
inc
scas
xchg
test
mov
out
ret
ret
shlb
iret
or
mov
pop
xor
aad
sbb
inc
add
cmpsb
scas
cs
add
or
jae
jge
push
aam
inc
push
dec
in
mov
mov
xchg
sbb
aas
push
pushf
and
out
or
inc
ret
mov
aad
mov
int
les
jb
xlat
mov
adc
in
pusha
jecxz
mov
jle
lds
iret
push
popf
sbb
bound
push
mov
cmpsb
add
xchg
or
add
enter
add
popf
mull
loop
inc
push
orl
je
je
inc
loopne
push
push
into
rcrb
pop
in
sbb
cmp
jp
dec
fwait
int
jno
pop
rol
mov
inc
and
push
cli
in
stos
inc
jo
test
das
adc
push
adc
out
inc
mov
jle
es
in
xchg
pop
lods
pop
fiadds
or
push
inc
mov
inc
clc
mov
dec
sbb
ds
xchg
sbbl
mov
leave
pushf
mov
in
imulb
ljmp
hlt
sub
mov
cmp
push
dec
dec
and
jge
repz
dec
xchg
jbe
xor
push
mov
ret
mov
pop
outsl
dec
lods
jmp
push
jmp
push
jb
movsl
mov
js
sbb
cmp
daa
in
jmp
mov
mov
notl
repnz
stc
pusha
ret
cld
ret
shlb
out
mov
dec
sbb
jmp
lock
mov
or
or
addb
fwait
push
cmp
jecxz
adc
loop
xchg
add
and
ficoms
cmp
test
mov
out
roll
cmc
dec
test
xchg
movsl
pop
rcrl
push
stc
adc
movsb
pop
xchg
iret
test
sub
imul
or
or
lods
xchg
lods
pop
or
bnd
xor
jb
inc
and
inc
int
cmp
xchg
mov
mov
loop
mov
shrl
in
adc
dec
incl
icebp
popa
cmp
add
sub
test
std
stos
sbb
jae
sub
int
enter
insb
jle
xchg
push
mov
or
fnstcw
in
mov
push
sbb
mov
jg
mul
sahf
sbb
ds
mov
mov
es
outsb
sbb
lods
flds
loopne
testb
inc
loop
sbb
cmpl
inc
mov
fwait
xchg
mov
and
cmpsl
test
rclb
fcomi
mov
fcomi
push
xchg
mov
inc
xchg
mov
jecxz
arpl
inc
out
jae
sub
xchg
out
mov
stos
into
sub
mov
out
in
out
or
stos
jge
cmc
push
xlat
addr16
repnz
lds
loopne
testb
inc
pop
insb
dec
cmpsb
test
in
addr16
shll
mov
ffreep
sbb
js
jb
push
into
pop
fnsave
mov
pop
imul
test
sub
ljmp
jnp
mov
and
fsub
ret
dec
lea
jo
loopne
dec
adc
in
adc
mov
jl
aad
cli
popa
inc
mov
add
jb
cltd
in
adcl
es
add
movsl
lds
pushw
sbb
in
stos
in
insb
xchg
cmp
insl
xor
jno
push
sbb
pop
js
fucompp
ret
pop
mov
mov
in
popaw
es
or
mov
aas
mov
or
xor
xchg
shrb
adc
movsl
sbb
push
nop
sarl
hlt
sahf
mov
cli
ret
push
add
icebp
inc
lock
jmp
leave
sbb
rcl
sbb
add
mov
mov
cmp
rcr
stc
in
pop
pop
cmpsl
jae
repnz
inc
pop
lock
push
jnp
xchg
stc
push
sti
adcb
jno
repz
psllw
popf
and
sub
jmp
repz
push
shll
loop
imulb
push
adc
mov
mov
adc
pop
and
adcb
pop
jae
mov
out
mov
outsb
adc
sbbl
out
jmp
movl
push
push
pushf
je
mov
sahf
or
cmp
stos
insb
cld
mov
xor
pop
lret
jbe
scas
and
jecxz
lret
push
mov
inc
jb
mov
pop
mov
int
in
dec
sbb
fdivrs
mov
ds
outsl
data16
adcb
cli
in
mov
aas
mov
enter
mov
push
pop
adc
dec
popf
lock
and
cmp
stc
push
jge
leave
arpl
fldl
cmp
call
sbb
pop
test
movsbl
aam
stc
outsl
jmp
shrl
ljmp
lods
add
call
imul
mov
in
xchg
cmc
adc
loop
dec
push
or
sti
aam
mov
pop
push
push
ja
xchg
test
iret
add
mov
mov
in
jmp
fs
mov
jb
mov
sub
push
in
lahf
shlb
dec
repz
clc
cmp
in
repz
iret
iret
aam
sbb
mov
dec
icebp
pop
test
mov
insb
outsb
jge
testb
jl
xchg
ret
inc
stc
stos
mov
xor
addr16
sar
cwtl
or
jno
mov
addb
inc
adc
outsb
inc
cltd
mov
jmp
hlt
pop
fidivs
pop
and
xchg
cmp
sbb
jno
jmp
add
adc
adc
mov
out
mov
ljmp
mov
pop
sbb
aam
or
out
mov
stos
pop
add
mov
push
jmp
in
fldcw
xchg
out
push
ss
test
push
cmp
jl
icebp
mov
les
into
mov
push
lret
stos
mov
cmp
shr
shr
orl
mov
cmpsl
push
aas
setge
outsb
dec
cs
movsl
stos
sub
cld
fisttps
xor
les
mov
and
insl
xchg
mov
loope
in
mov
fmull
cli
or
sbb
mov
enter
pop
bound
enter
dec
iret
cmp
sub
dec
ret
je
mov
cli
add
call
into
ss
fsubr
cld
cmp
fwait
lcall
fadds
and
mov
cmp
jp
in
movsl
mov
out
mov
out
mov
lock
jge
sub
in
das
push
mov
mov
shrb
dec
clc
lods
js
cld
fxam
sti
cli
call
xchg
push
cmp
subl
mov
inc
or
pop
xor
push
out
sbb
repnz
dec
add
rcr
jmp
lcall
lods
enter
test
shll
add
int3
mov
or
inc
mov
and
dec
hlt
push
and
pop
xor
sub
jae
testl
icebp
in
insb
sub
iret
not
data16
cmp
stos
inc
mov
mov
std
jno
lds
hlt
movsl
out
faddl
fstpl
mull
sub
enter
cmp
int3
jge
mov
lea
test
add
jg
xor
arpl
xor
cs
in
in
sub
cmp
jae
mov
mov
call
mov
mov
or
js
inc
sbb
movsb
xchg
shll
subb
xor
cwtl
inc
jae
popl
js
in
push
roll
xlat
leave
cmp
dec
jno
mov
out
pop
test
popf
call
in
xlat
dec
fs
mov
sub
mov
mov
cmp
ficoms
popa
sub
mov
fcmovnu
push
lret
xor
lea
in
cwtl
insl
xorb
cmp
icebp
jbe
and
lods
insl
lcall
sbb
push
jg
repz
in
sbb
mov
pop
clc
cmovno
je
aas
cmpsb
idiv
adc
fcmove
cmp
jnp
pop
add
push
fsub
mov
in
mov
sbb
adc
add
clc
or
in
or
pop
jnp,pn
xchg
adc
or
sub
cltd
add
lds
test
jmp
inc
jmp
and
mov
mov
add
in
mov
push
testl
adc
aaa
add
out
sarl
leave
out
outsb
mov
add
aam
cs
adc
int
shrl
or
shlb
lods
xor
mov
popf
mov
insb
mov
xchg
xchg
fistps
sbb
jo
jmp
lret
cld
xor
cmpsl
in
mov
notb
popa
adc
sarb
inc
lret
mov
cwtl
mov
out
outsl
jl
fstp
xchg
out
out
fildl
jo
loope
je
lods
scas
pop
sbbb
push
ljmp
sub
rcrl
push
mov
jmp
int3
in
sub
das
lcall
add
adc
test
adc
dec
ljmp
out
cmpl
cmp
add
movsb
not
mov
or
scas
rol
push
cmp
pop
mov
adc
mov
mov
pop
ficomps
xor
mov
xlat
insb
lcall
xchg
jnp
ss
repz
pusha
js
sarb
cmp
sbb
je
xchg
inc
hlt
xor
jae
std
pop
mov
push
push
scas
aad
mov
loop
push
xor
and
fbstp
push
xchg
or
fcomp
mov
and
mov
call
dec
popa
lret
dec
add
push
lock
loop
xchg
sub
lea
es
xor
bound
xchg
gs
lock
sub
sub
jno
ja
xor
insb
js
popa
ret
jne
dec
xchg
out
inc
cmpsl
pop
push
sti
mov
es
repnz
xor
fisubl
pop
inc
popa
mov
mov
stos
xor
jno
pop
pop
pusha
out
iret
test
int
outsl
clc
cmp
iret
jmp
outsl
inc
addb
shl
cmp
dec
add
jnp
hlt
pusha
pusha
loop
or
fdivp
cmc
dec
mov
cmp
aad
das
int3
lahf
mov
sub
jnp
mov
arpl
jg
pop
inc
popw
xchg
aas
xchg
shlb
pop
mov
es
stos
adc
adc
out
cmpsl
xchg
mov
and
fdiv
shlb
iret
les
das
mov
in
jne
push
insb
push
mov
lock
js
xor
inc
cmpsl
mov
pop
cmp
fs
dec
cwtl
jbe
xor
cmp
ret
into
test
jbe
dec
push
adc
enter
adc
jb
inc
ds
mov
xchg
inc
adc
inc
pusha
sbb
orb
inc
xor
stos
mov
jbe
cmpsl
mov
jb
bound
sbb
add
adc
aam
movsb
xchg
sbb
test
int3
movl
mov
sbb
pop
mov
enter
or
shl
jg
daa
or
roll
mov
sti
dec
aaa
xchg
gs
lock
jmp
les
in
lret
je
leave
fbld
notl
test
outsb
bound
loop
lcall
xchg
imul
push
jne
vmovaps
out
push
jmp
mov
mov
add
xchg
jle
inc
aaa
or
sub
xchg
push
and
push
cwtl
divb
out
gs
rclb
push
sbbb
mov
jmp
lods
nop
mov
push
inc
mov
call
js
rorl
sub
cltd
dec
aas
push
adc
xchg
push
iret
cmpsb
in
out
sar
cmp
cld
dec
inc
dec
adc
pop
jecxz
and
and
je
mov
jne
mov
mov
fldenv
mov
or
mov
popf
into
dec
jl
or
sahf
neg
std
lahf
push
fs
out
mov
push
mov
shl
pop
mov
jo
in
dec
mov
in
icebp
sbb
jmp
movb
jnp
sbb
mov
cmp
inc
sub
in
in
flds
ss
test
fwait
mov
dec
add
add
mov
push
push
into
std
hlt
cmp
push
xlat
xchg
stc
dec
mov
sbb
mov
scas
aaa
mov
lcall
dec
aam
adc
mov
arpl
lcall
outsl
add
xor
fs
popf
imul
mov
pop
xchg
insb
scas
xchg
jmp
jb
cli
comiss
mov
andl
movsb
in
xchg
js
ljmp
mov
in
mov
loop
mov
mov
js
cmp
push
shrb
lods
inc
sbb
dec
mov
push
dec
ja
lea
test
xchg
lods
xchg
jle
xchg
or
mov
int3
ljmp
dec
push
inc
iret
lea
mov
push
ds
push
bound
outsb
mov
xor
push
out
lock
nop
cmp
icebp
setge
and
popf
fstp
cltd
insb
out
sub
test
pop
jns
jg
iret
mov
adc
sti
push
push
cmp
inc
sub
push
mov
xchg
push
mov
bt
sbb
popf
xchg
jp
adc
cmc
jno
enter
dec
jae
mov
aaa
ficoms
sti
lea
cs
inc
sahf
iret
mov
scas
out
xor
cmp
andb
mov
sti
in
jle
je
sti
push
mov
sbbb
fidivrl
clc
inc
ret
shlb
lock
dec
insl
push
sbb
pop
mov
sub
add
int3
mov
mov
add
pop
or
mov
xor
jle
pop
mov
mov
aas
push
jne
xchg
movsl
mov
in
frstor
jle
lods
adc
adc
ds
jmp
mov
loop
mov
cmc
in
into
push
jo
in
sarl
xchg
or
vpcomw
push
js
mov
lret
enter
push
pop
lea
jns
fbld
pop
imul
in
xchg
xchg
in
dec
mov
mov
push
das
std
leave
clc
sbb
dec
pop
mov
push
aaa
mov
xchg
mov
int
jns
int
mov
mov
aas
xlat
jne
lea
stos
dec
clc
jbe
test
mov
clc
fidivrl
ret
lret
sbb
stos
repz
mov
dec
das
xchg
aam
push
cmp
mov
mov
sahf
cwtl
int
mov
xchg
cwtl
std
or
xchg
mulps
inc
sbb
xchg
cmp
test
mov
adc
push
test
or
adc
and
dec
pop
repnz
mov
loopne
loope
scas
sub
push
lods
cmp
add
cltd
ljmp
fxch
mov
mov
xchg
cmpsl
inc
push
pop
sub
jp
cld
data16
mov
ret
addr16
push
xchg
adc
in
mov
loope
shrb
gs
pop
and
in
cmp
push
mov
jecxz
push
lahf
mov
mov
sbb
or
aad
or
int
mov
mov
ljmp
aaa
mov
daa
push
lcall
movsl
pushf
jne
mov
aad
fimull
jecxz
mov
xchg
cmp
lea
mov
inc
mov
popf
pop
mov
loope
test
lcall
add
in
loop
dec
sti
sbb
addr16
sbb
jecxz
outsb
mov
xlat
pop
popl
xor
cmc
xor
jge
sahf
nop
das
dec
addr16
aaa
or
and
mov
enter
test
inc
adc
jl
sbb
imul
insl
mov
fsubrl
imul
out
or
jmp
or
xchg
inc
adc
in
fwait
in
xchg
sub
and
mov
mov
pushf
jp
add
mov
add
lea
stos
ret
xor
cmovp
add
iret
das
or
cmovs
mov
adc
sub
jno
xor
cli
adc
sbb
addr16
testl
std
pop
xchg
rolb
xchg
divl
jecxz
push
dec
loopne
dec
mov
lea
iret
push
addl
adc
inc
dec
imul
jge
popf
lcall
ja
push
mov
jbe
test
mov
out
lods
mov
pop
sbb
cmp
je
hlt
mov
xchg
add
and
fldcw
add
rcll
sbbl
imul
push
push
adc
inc
or
push
push
push
dec
dec
mov
sbb
inc
push
aaa
xchg
cmpsl
arpl
js
lret
inc
xchg
mov
jb
inc
hlt
adc
cmp
jecxz
pop
xchg
push
jg
sar
mov
mov
lea
lahf
jns
and
mov
xchg
out
push
sub
movsb
rcr
pop
dec
push
and
mov
push
out
adc
aas
mov
hlt
mov
adc
push
xchg
sti
mov
cltd
dec
push
add
enter
cmpsl
std
mov
xchg
in
scas
mov
shrl
out
mov
add
push
mov
or
dec
in
outsb
mov
lea
inc
pop
mov
std
push
push
stc
lods
sbb
sub
fiadds
rolw
jbe
xor
mov
popf
fiaddl
mov
in
or
push
faddl
insb
scas
rcl
aad
rcrl
ja
int3
roll
mov
or
aaa
sti
fstl
cmpsl
push
sub
push
xorb
clc
rorl
movsb
sbb
jge
cmp
or
xor
icebp
in
add
add
xchg
dec
imul
fldenv
pop
sti
test
aam
enter
fwait
mov
or
mov
mov
inc
je
rep
aad
push
cmp
mov
dec
pop
ficompl
movsl
out
aam
xor
clc
sub
xor
jmp
les
pop
xchg
clc
dec
pop
jae
out
push
mov
mov
add
popa
scas
sbb
movb
test
loopne
popf
out
mov
fistpl
mov
push
inc
sbb
and
lods
push
lock
test
rcr
daa
jle
mov
push
les
sub
fidivrs
in
mov
iret
cli
pop
push
pop
testb
stc
aas
lret
mov
shlb
sub
out
sub
mov
xchg
lea
movntq
add
pop
push
lods
xchg
out
into
or
mov
mov
cmpsb
inc
sbb
arpl
lcall
fnstenv
fidivrl
addr16
mov
inc
jmp
jl
dec
sbb
loop
adc
dec
push
stc
rolb
or
and
push
xor
jne
insb
bound
scas
mulb
enter
push
cmp
mov
mov
and
popa
mov
xchg
negb
mov
incl
adc
cmpsb
out
insl
movl
push
stc
cmp
stc
aam
fsubl
mov
sub
and
cmp
push
int
dec
xchg
pushl
jno
adc
pop
mov
shll
enter
jge
push
dec
lret
test
jb
xor
in
jae
jns
cltd
xchg
mov
mov
fldl
lcall
or
cmp
mov
sbb
xor
shll
or
sbb
mull
faddl
enter
mov
int
xchg
xchg
aam
repz
pop
and
mov
inc
push
pop
mov
dec
daa
mov
mov
mov
fimuls
pop
into
dec
push
in
movsl
jno
sbbl
ja
adc
pop
jb
cs
fwait
sub
scas
xlat
dec
dec
push
stos
mov
and
lds
ja
insl
cmc
popaw
xor
cmp
xor
out
iret
pop
sub
xor
push
jecxz
mov
std
or
xchg
imul
dec
xchg
push
aad
and
or
xchg
sub
adc
test
mov
push
inc
push
push
dec
push
inc
cltd
pop
test
mov
int
jns
add
out
stos
sub
mov
fsubl
scas
lret
mov
sbb
in
fsub
mov
decb
mov
adcl
mov
jmp
lahf
mov
aam
shrb
xchg
popf
or
push
je
inc
faddl
mov
mov
adc
dec
or
fwait
lds
repnz
out
jge
cmp
in
fmull
pop
pop
insl
ret
in
inc
nop
lea
push
scas
cmpsb
fcompl
sahf
les
mov
outsb
xchg
pop
pusha
lods
and
jle
sub
jg
push
scas
dec
mov
adc
pop
cmp
aam
clc
stc
test
cld
cmp
jae
rcr
in
addr16
push
xor
xchg
mov
ret
imull
add
sbbl
fsubrp
add
xchg
xor
in
insl
lahf
add
push
pop
and
xor
fmuls
mov
adc
rorb
add
clc
xchg
fisttps
test
push
insb
gs
push
mov
pushf
add
adc
mov
xchg
jnp
mov
inc
lds
pop
dec
dec
sub
xchg
push
sub
das
lret
add
icebp
cs
lahf
stc
sub
dec
stc
loop,pt
out
test
fwait
ret
push
aaa
lock
jmp
add
idivl
lahf
or
icebp
push
mov
cmp
es
mov
std
mov
jle
in
arpl
stos
dec
sti
in
iret
in
dec
mov
cmpsl
cmp
mov
imul
adc
push
push
fs
fdivl
stc
mov
jp
push
data16
sahf
push
imul
ret
ret
fsubl
jbe
imul
push
call
cs
aad
xchg
daa
add
dec
mov
daa
fisubrs
dec
cld
frstor
fldenv
pop
xchg
mov
pop
mov
xchg
std
pop
inc
jp
pop
insl
add
xchg
push
mov
fs
sbb
xor
pop
or
add
jg
scas
and
ja
jo
mov
jg
push
inc
jbe
inc
mov
pop
mov
sahf
lret
aam
xchg
mov
mov
jmp
mov
mov
mov
lret
stos
ljmp
adc
shll
and
fwait
mov
ret
lods
adc
sub
jmp
and
daa
imul
cs
add
cmpsb
inc
movsl
sahf
leave
dec
jo
adc
and
rclb
aad
clc
add
push
mov
ret
decb
in
mov
mov
shr
mov
hlt
pop
or
sbb
jge
xor
mov
inc
mov
mov
out
repz
xchg
jo
nop
mov
mov
ret
add
or
ja
add
adc
push
push
ret
in
add
cmp
inc
rcrb
fwait
mov
aad
sub
jo
pop
add
fcmovbe
mov
in
xchg
in
adc
push
sbb
dec
jae
push
divb
int3
mov
ret
sahf
jle
std
xchg
lock
mov
pop
adc
inc
test
cs
lcall
fwait
xchg
idivb
sbb
pop
ljmp
test
cmp
outsl
pop
cli
repz
sarb
mov
push
rol
scas
jmp
aas
push
out
add
rolb
pop
rolb
adc
add
dec
sahf
or
mov
mov
mov
leave
push
out
test
aaa
lods
xchg
add
push
fists
andl
ficoml
push
ret
in
push
outsl
test
out
and
push
xchg
nop
jp
std
aas
das
out
pop
in
jae
pop
fidivl
add
dec
cmp
and
sub
jno
mov
divl
add
adc
mov
push
rcl
and
nop
add
xlat
push
int
iret
xchg
xor
in
insl
out
cmc
mov
jmp
inc
imull
mov
call
mov
popf
rcrb
jp
fwait
sbb
push
ljmp
dec
fstps
in
mov
xchg
sbb
mov
inc
mov
loopne
mov
ss
push
js
shll
mov
mov
push
clc
lcall
popa
out
mov
cmc
pop
jmp
pop
lret
jno
repz
lea
xchg
pop
sbb
or
call
addr16
sub
clc
js
push
sbb
stos
xchg
and
add
xchg
jle
mov
bound
lahf
jno
insb
inc
leave
or
lea
jl
sbb
mov
gs
dec
nop
dec
lock
aaa
mov
or
daa
add
mov
mov
jle
sub
xor
fcoml
daa
out
mov
add
inc
dec
inc
jns
ja
fldcw
dec
adc
loope
mov
push
cmp
jmp
lahf
pop
add
js
jl
stos
movb
xchg
test
mov
push
cmpsl
mov
call
ljmp
fsubs
lds
sti
ror
out
pop
adc
xchg
pusha
and
les
decb
jl
notl
dec
jo
inc
movsb
jnp
add
mov
fsubrp
mov
pusha
or
mov
pop
ficomps
add
enter
mov
roll
ret
loope
xchg
call
test
iret
adc
out
lds
insl
mov
mov
inc
shlb
sub
mov
aam
push
idivl
outsl
ret
ljmp
mov
sti
add
out
add
rol
xchg
inc
and
ds
xor
insb
adc
testb
jge
stc
mov
mov
mov
add
cmp
pop
into
sub
loopne
std
shrl
or
testb
cld
popf
mov
mov
jo
adc
not
fistpll
in
and
loope
sub
loope
int3
insl
mov
lds
add
add
fnsave
test
mov
or
lret
mov
mov
adc
subb
jg
mov
ja
sbb
fwait
push
and
enter
xchg
mov
mov
jns
ja
adc
jo
or
mov
xchg
cmp
cmp
test
pushf
cmc
lods
sbb
addr16
or
lock
mov
mov
pop
jmp
xor
adc
enter
scas
mov
mov
pushf
xor
lds
sub
add
aam
add
push
dec
mov
loope
xchg
push
cwtl
and
pop
shll
cmp
xchg
test
cmc
jmp
in
jno
jnp
xchg
stc
out
inc
push
dec
xchg
mov
xchg
mov
ret
mov
xchg
jbe
jmp
sbb
lods
js
sub
jge
dec
sbb
and
mov
mov
push
in
add
fdivs
into
add
das
fcoms
fwait
das
jmp
inc
add
dec
out
inc
imul
mov
jns
hlt
mov
in
inc
ret
aam
mov
mov
dec
inc
inc
mov
arpl
inc
push
in
sub
addr16
movsl
adc
arpl
fisttps
push
and
mov
push
idiv
lds
mov
icebp
pop
add
push
scas
sub
mov
push
test
cmpsb
sbb
icebp
and
or
sbb
xor
mov
aad
add
loop
or
popf
add
mov
movsb
int
mov
push
dec
clc
test
mov
dec
mov
inc
cmc
mov
adc
jp
cwtl
xchg
dec
clc
fisttpll
mov
in
in
fcmovu
fstl
in
jmp
fcomps
mov
int
pusha
lods
add
cmp
aam
sbb
dec
loop
mov
jne
mov
and
fisttpl
sub
mov
push
sub
mov
in
mov
rcrb
cli
in
mov
adc
mov
lock
sarl
xor
int
in
aad
fsubp
je
test
inc
jecxz
in
adc
movsb
push
loope
hlt
shrb
outsb
xor
mov
or
xlat
cltd
mov
pop
int
les
imul
mov
push
cmp
jl
sbb
pop
cwtl
inc
jmp
sbb
or
or
mov
mov
xchg
cmovo
sarl
fisubrs
or
into
ficompl
xchg
dec
int
pop
adc
push
adc
push
in
mov
fs
dec
push
leave
adc
push
dec
into
cmpsb
pop
in
outsb
out
iret
cmp
fildl
iret
into
cli
mov
mov
sar
mov
mov
aas
mov
rclb
aas
fstpl
adc
jge
dec
adc
test
jo
xor
add
imul
movsb
lods
cmp
xlat
jp
adc
mov
sbb
sub
dec
xor
xchg
xchg
and
movsl
dec
aaa
push
sub
sahf
jnp
pop
pushf
pop
cmpsl
or
mov
cmp
es
rorb
or
movntq
out
cltd
out
inc
jne
nop
into
push
cmp
cltd
cld
repz
icebp
or
jns
sbb
push
out
shlb
and
fucomip
in
stos
sub
sub
gs
idivb
xor
insb
pop
mov
scas
push
cmp
movlps
in
add
sahf
imul
hlt
push
jl
pop
mov
neg
cmp
test
xor
adc
gs
mov
pushf
jmp
fs
cmp
xlat
mov
jbe
hlt
dec
xchg
int
mov
cmp
pop
xor
jmp
popf
push
sbb
jbe
mov
sbb
mov
xchg
sti
lds
xor
nop
cmp
sbbl
out
xchg
pop
push
adcl
imul
shll
sub
cs
test
pavgb
je
out
call
inc
addb
out
inc
mov
adc
jg
daa
pop
xchg
pop
mov
adc
cli
pushf
movsl
out
jl
adc
scas
outsl
push
mov
push
int
jae
in
adc
mov
dec
inc
cmpsl
mov
rcl
xor
add
arpl
cmp
fdivrs
nop
add
nop
cmp
mov
pop
std
mov
pushf
std
mov
push
mov
push
adc
popf
lahf
stos
hlt
out
jo
lea
je
hlt
repz
inc
mov
dec
fidivrl
jno
mov
inc
sub
mov
inc
lds
neg
es
push
ret
sub
mov
mov
nop
les
cmpsb
mov
or
xor
lcall
fisttpl
lret
add
mov
rorl
cmp
and
mov
aad
sbb
push
cltd
add
jp
aas
sbb
shrl
sbb
add
mov
and
sub
pop
mov
das
xor
inc
pop
hlt
out
inc
mov
and
lret
arpl
int3
cmc
push
cli
xlat
mov
test
jl
cltd
aaa
mov
stc
cmpsl
mov
cmp
cmp
ret
add
cmp
andb
imul
gs
sbb
jle
xchg
inc
out
sub
addr16
add
xor
dec
sub
cmp
pushf
sti
fsubr
sub
mov
lods
loop
aas
add
cwtl
movsl
ss
in
mov
dec
cmpsb
popf
mov
sub
mov
and
sub
cld
in
repnz
inc
lcall
ljmp
jae
push
loope
out
lcall
sub
test
fnstcw
cmpsl
cli
leave
jae
mov
xchg
shlb
shll
xchg
loopne
add
mov
faddl
xor
loope
pop
push
adc
into
lods
sub
outsl
xchg
fcompl
sbb
mov
adc
mov
add
dec
fs
cmp
mov
int3
sahf
out
das
fiaddl
xor
and
xorl
aad
pop
les
xlat
dec
jns
mov
mov
repnz
cmp
push
cmc
mov
mov
sub
mov
cmp
add
lea
mov
add
stos
std
cmpsb
inc
nop
ds
iret
rolb
xor
inc
loope
das
daa
jle
mov
mov
sti
stos
lods
adc
in
lcall
sub
cmpsl
inc
sbb
inc
jbe
push
and
ljmp
rcrl
fstps
dec
imul
pop
xchg
inc
ret
xor
ret
mov
in
cmp
push
pop
pushf
shlb
mov
and
mov
bound
xor
jl
dec
inc
mov
adc
fnstenv
cmp
loop
bnd
push
mov
pop
fistpl
shr
jmp
inc
popf
pop
ja
or
mov
xor
lret
mov
jecxz
cmp
repz
push
repz
mov
push
xchg
mov
push
outsb
leave
mov
fnstsw
int3
mov
mov
les
repz
clc
out
mov
pop
inc
cmp
out
stos
mov
adc
fwait
shlb
rcrb
adcb
cmp
rcrl
int3
das
jmp
xor
cmp
add
sarl
dec
jno
rcrb
mov
jg
mov
push
je
push
gs
in
jo
sub
out
add
aam
lcall
push
test
mov
call
push
cmp
sbb
mov
push
lea
nop
icebp
xchg
mov
subl
out
hlt
sub
push
mov
out
loop
sbb
fldt
mov
icebp
xor
xor
aaa
shlb
dec
inc
out
stos
xchg
pushf
xchg
mov
pushf
aam
mov
testl
das
push
inc
cltd
jo
pop
icebp
les
jp
ss
xchg
fiadds
push
mov
in
or
cld
and
inc
inc
jle
and
or
push
inc
fstl
jmp
rolb
inc
in
and
nop
sar
and
mov
clc
sbb
push
fmull
pop
int
dec
adc
pushf
sbbb
enter
adc
arpl
adc
or
and
jle
sub
pop
push
insl
pop
pop
pop
jecxz
push
jge
and
cli
mov
jno
mov
jl
pop
jp
inc
mov
nop
and
push
adc
das
dec
mov
flds
mov
int3
sarb
adc
fwait
int
leave
mov
mull
in
mov
negb
bswap
jge
in
mov
mov
xchg
dec
lds
xlat
push
mov
sbb
mov
fs
dec
inc
lret
js
std
mov
repz
arpl
lock
mov
sbb
pop
mov
insl
adc
cld
mov
out
in
add
out
mov
fiadds
mov
mov
xlat
add
push
mov
rorl
adc
test
bound
cmp
mov
or
leave
xor
dec
inc
and
dec
xlat
mov
movsb
xchg
js
and
dec
push
loop
mov
pop
add
adc
push
mov
shlb
stc
jle
sarb
jg
cmpsb
daa
sub
aaa
sub
pop
lods
loope
adc
roll
lods
add
fwait
fwait
adc
test
mov
cmpsb
outsb
cmc
mov
push
outsb
cmpb
push
ficoms
jno
lock
jg
movsb
pop
cli
sbb
jg
int3
mov
cli
adc
mov
lds
fistps
notl
push
mov
sbb
lds
jae
and
fcmovbe
sub
leave
push
fadds
and
xchg
sub
lahf
sahf
rcr
xchg
cmp
cmc
pop
loopne
xchg
dec
xchg
int
idivb
lds
out
dec
pop
adc
scas
sub
pop
add
notb
sbbb
fwait
jmp
setnp
inc
int3
daa
adc
sti
mov
or
out
push
shll
imul
lret
cmp
dec
fstps
shl
sbb
ficoms
pop
sub
mov
mov
jecxz
les
nop
out
jnp,pt
push
rorl
jle
enter
and
je
mov
sbb
add
ror
mov
jne
xchg
mov
jl
aam
xchg
sbb
jmp
aaa
cmova
fstpl
in
cmp
fistpll
data16
aaa
fsubr
dec
push
and
push
add
and
mov
mov
dec
cmpsb
sub
push
sahf
addb
push
lahf
out
pop
or
aam
arpl
rorl
rcl
cmp
inc
cli
adc
mov
sub
sub
js
addr16
mov
or
icebp
push
xchg
lock
and
ss
cs
or
int
gs
out
xchg
in
jnp
cmp
mov
imul
lahf
lret
jg
jle
loope
repz
fistpll
int3
call
lds
sarl
sbb
loop
shl
iret
sahf
int
mov
outsb
mov
fbstp
or
sbb
xchg
leave
ficoml
adc
inc
scas
lods
lock
insb
push
imul
adc
and
shll
into
fs
fisttpl
mov
loop
inc
xchg
or
mov
jge
ds
sub
pushf
push
sub
faddp
xchg
lock
add
int3
jmp
sbb
or
ds
enter
push
xchg
mov
xchg
fidivs
dec
jno
ja
cli
mov
jge
jge
loop
dec
stos
lcall
ficoml
cli
pop
dec
shrl
or
sub
add
enter
popa
aam
out
adc
pop
push
jmp
jae
jle
test
add
lock
mov
cmp
add
jnp
leave
stos
cli
rep
mov
fisttpl
dec
aad
jns
lea
mov
push
mov
dec
inc
jnp
shrl
cmp
mov
mov
mov
pop
mov
add
cmp
and
push
shl
lcall
or
scas
lea
insl
popa
cmp
adc
dec
lea
iret
sahf
adc
xchg
adc
pop
cmpsb
xchg
mov
and
int3
shr
repz
mov
dec
add
lahf
clc
mov
mov
xchg
and
mov
loopne
sbb
mov
mov
push
add
xchg
xchg
call
jl
repnz
add
jge
add
sarl
add
hlt
cmp
lds
mov
or
iret
ret
movsb
mov
mov
and
fs
dec
or
jns
sbb
xchg
fxch
sub
inc
lahf
movsb
cmp
sti
icebp
into
mov
jbe
cltd
into
xchg
out
lret
xchg
lds
cmp
and
push
jnp
clc
inc
pop
jno
cmc
jmp
pop
xchg
dec
lods
mov
ficomps
push
int3
aam
push
cmc
push
mov
cld
test
repz
mov
adc
pop
mov
mov
or
fnstcw
lock
outsl
xor
imulb
sub
cmpsb
sub
jo
push
in
xlat
lret
sub
xlat
test
mov
push
leave
pusha
nop
dec
stc
inc
mov
nop
xchg
call
inc
hlt
stc
xchg
out
sub
ffreep
js
std
dec
add
lock
nop
inc
xor
test
xchg
dec
aas
xor
xchg
les
xchg
repz
push
movsb
add
mov
nop
push
inc
xchg
inc
outsb
jge
rcll
cmpsl
pop
mov
movsl
mov
pop
add
xchg
adc
mov
cmpsw
cmp
jle
sbb
mov
fld
adc
int
clc
inc
inc
in
push
sub
jne
lret
fdivp
add
mov
or
mov
mov
inc
lods
inc
xchg
sub
cmpsb
ret
loope
lods
jne
out
mov
das
xchg
out
xor
lahf
jns
mov
out
cs
aad
in
fs
jmp
jno
out
ja
clc
jne
call
inc
sarl
pop
negb
jmp
pop
or
mov
movsb
into
ror
movsl
loopne
dec
cmpsb
in
inc
sbb
out
mov
jno
fwait
das
dec
ja
inc
and
lcall
inc
or
mov
xchg
xchg
int
test
and
jnp
mov
dec
mov
in
add
push
in
jo
enter
xchg
movsb
mov
sahf
lock
ljmp
mov
adc
push
push
ja
imul
stos
xlat
lock
push
push
add
pop
scas
mov
popa
adc
jmp
cmp
fidivrl
push
jne
cmp
xor
out
pop
lock
ljmp
push
lcall
sarl
mov
push
inc
xor
hlt
int
xchg
cmpsb
or
push
leave
sbbl
sarb
jne
into
jnp
pop
jnp
dec
add
loope
jae
inc
or
or
pushf
dec
xor
dec
add
xor
mov
out
xchg
sub
fldt
ficoml
pop
mov
xor
cmp
out
bnd
roll
mov
fnsave
inc
rcr
mov
mov
lea
pop
add
movsb
cli
sbb
mov
sahf
sbb
mov
xchg
data16
mov
std
lods
imul
neg
shll
ss
movsl
inc
aad
add
dec
inc
shll
mov
dec
nop
xchg
imul
in
nop
rcll
pop
cmp
add
ret
pop
xor
pop
sub
push
adc
dec
jecxz
in
test
xor
fnsave
jl
mov
lods
mov
fwait
imul
int3
test
mov
inc
fucomi
mov
inc
stos
lods
pop
or
std
pop
mov
nop
cmp
inc
adc
xor
sarl
fldt
push
fisttpll
cmp
rclb
lods
dec
xchg
jl
dec
movl
fsts
mov
mov
lea
mov
fnstenv
shl
enter
int
xchg
fistpl
and
cmp
cmc
loop
push
pop
push
mov
inc
fstp
jo
push
mov
pop
mov
mov
mov
push
std
mov
nop
les
xchg
subl
mov
jg
push
push
shlb
ret
aam
popl
test
cmp
test
jbe
jg,pt
sbb
insl
or
out
push
jge
push
mov
les
push
in
rcll
push
mov
fldt
or
cmc
test
in
testl
imul
mov
stc
xorl
cmp
popa
test
fucomi
andl
int
fildl
cmpsl
icebp
push
loop
insl
inc
ds
pop
fucomp
push
xchg
or
cwtl
mov
repz
addr16
cmp
repz
lock
iret
cmp
sahf
or
lock
inc
mov
cwtl
lret
in
dec
leave
xor
movsb
mov
in
push
lea
call
and
jge
cmp
jae
cmp
decl
jo
jmp
vpmulhuw
mov
cmp
vsubss
andl
mulb
inc
push
mulb
lret
sarl
xor
cmp
repz
add
aas
fidivrs
push
imul
push
fldcw
pop
out
mov
inc
jbe
out
push
ficoml
xor
test
jnp
loopne
cmpsb
jl
push
mov
rcrb
int
xchg
daa
inc
fmull
xchg
mov
dec
cld
cs
daa
roll
call
into
outsb
xchg
xor
mov
push
push
hlt
addl
add
push
cmp
lods
in
lds
mov
std
xchg
mov
mov
push
insl
in
lds
cmp
cmp
jne
mov
xchg
add
ja
ret
lea
scas
mov
mov
lahf
jno
test
adc
and
leave
adc
es
push
cmc
je
jns
imulb
bnd
inc
sub
popl
enter
out
shlb
lods
xchg
in
sbb
sahf
sub
ljmp
sub
cld
stc
or
dec
or
sub
shlb
insb
jae
ret
cwtl
adc
jmp
xchg
out
inc
in
out
jb
ja
loope
pushf
pop
push
dec
sbb
jmp
aas
rolb
push
or
inc
xor
stos
and
call
xor
dec
add
inc
out
outsl
xchg
paddusw
repnz
add
int3
mov
push
daa
cli
adc
cmp
push
pop
lahf
stos
in
or
cmp
xchg
push
xchg
in
add
mov
mov
mov
xchg
adc
std
pop
iret
or
fwait
shlb
mov
push
cmp
sub
test
rep
pop
shll
ds
mov
jae
adc
inc
push
mov
out
sbb
sbb
mov
and
cltd
adc
dec
pop
add
rorl
mov
fnstcw
scas
sbb
dec
into
or
imul
popa
daa
adc
cmpsb
fsin
lret
fistl
shlb
fsubrs
mov
ja
fidivs
ljmp
xor
test
mov
ja
or
xor
in
in
fldt
ret
fsubrs
inc
xorb
pop
dec
xchg
xchg
xor
nop
sbb
sahf
xchg
mov
jb
and
push
bound
int
xor
cmp
mov
hlt
push
testl
popa
addr16
jp
sbb
ret
loop
jbe
push
lock
mov
hlt
pop
cmpsl
leave
lahf
adc
cmp
lret
cs
or
fisubrs
mov
int
sbb
pop
frstor
add
xchg
jge
cmpb
jle
or
push
insl
ds
subb
jge
daa
pop
sbb
daa
pop
jle
shrb
inc
movsl
insb
out
sahf
rclb
adc
adc
jo
cmp
add
out
out
mov
or
cmp
repnz
std
rcll
nop
mov
outsl
sub
mov
and
in
cmp
fmuls
insb
jnp
es
dec
testb
fisubl
adc
movsb
arpl
mov
fwait
int3
mov
es
pop
stc
pushf
adc
repz
jae
scas
mov
dec
aas
stos
repz
lret
mov
sarl
clc
shlb
call
int3
dec
jmp
push
jl
ja
sub
lret
xchg
cmpsb
out
rol
notl
mov
push
cmc
fildll
xor
xor
adc
ds
jb
jbe
bnd
jp
fldl
stos
cmpsl
roll
mov
cltd
jle
mov
movsb
in
mov
sbb
test
sahf
daa
scas
inc
in
push
mov
lods
cld
in
pop
mov
scas
cmp
clc
sti
inc
push
push
mov
sub
shll
xchg
sub
fdivrp
mov
jle
mov
push
cli
or
cli
sbb
lcall
in
xlat
sub
pop
sahf
shll
mov
nop
pop
ret
lods
mov
call
lret
push
mov
xchg
loope
in
mov
addl
mov
add
test
dec
stos
lcall
insb
scas
cli
call
hlt
mov
outsl
cmp
or
jle
jmp
push
loope
add
in
mov
stos
mov
out
mov
movl
xor
add
nop
inc
stc
pop
mov
adc
in
lock
jl
pop
xchg
imull
xchg
cmp
or
popf
add
jnp
insl
dec
jle
xor
lahf
or
dec
inc
xor
adc
dec
cwtl
scas
jno
and
lea
dec
cmp
call
iret
clc
xchg
xchg
inc
adcl
ljmp
mov
roll
lods
clc
rolb
movsb
or
dec
repz
jmp
add
adc
inc
ja
and
cmpl
xor
sub
jb
cmp
test
sbb
cmpsb
dec
xchg
ret
sbb
mov
inc
jmp
or
int
xchg
ja
jmp
aas
iret
pop
addr16
mov
sbb
mov
adc
sub
mov
in
pop
pop
add
faddp
xchg
mov
mov
cwtl
pop
push
enter
fsubrl
pop
and
dec
sarl
ret
cltd
fcmove
pcmpeqd
mov
mov
mov
cmp
sbb
xchg
out
adc
mov
sbb
and
push
cmp
mov
jno
xchg
mov
fwait
mov
cmp
xor
pop
xchg
sbbl
wrmsr
mov
mov
jl
xchg
test
mov
push
sbbl
jbe
mov
jae
scas
mov
or
addr16
xchg
movsb
lock
ss
fidivl
and
lcall
bound
or
or
aam
ja
shlb
je
push
lods
mov
jg
in
je
lods
sbb
cmc
jno
jl
or
cmp
pop
jle
mov
mov
shrb
enter
rcr
cmp
inc
pop
mov
in
jecxz
movsb
jmp
ds
outsb
and
mov
or
repnz
fdivrl
jno
adc
dec
sub
sbb
fstps
cltd
xchg
mov
mov
add
pop
mov
or
iret
inc
push
les
or
daa
sbb
fimuls
adc
pushf
pop
jmp
cmpsl
cltd
scas
push
or
cli
into
mov
push
cld
fcompl
test
arpl
ficompl
js
mov
clc
ss
sti
mov
xorb
add
cs
test
add
pop
mov
outsb
and
jge
mov
ss
mov
addr16
or
xchg
in
mov
dec
stc
or
loope
into
movsl
push
mov
popf
scas
lret
dec
aad
sbbl
sub
sub
fscale
es
or
jecxz
xlat
cmp
out
shrl
cld
push
sbb
negb
loope
jle
insb
cmp
xor
ret
dec
iret
mov
jbe
xor
push
imul
repz
adc
out
lds
stos
sub
mov
je
insl
aam
or
jp
das
ss
in
mov
sbb
cmp
adc
jp
cli
std
mov
xor
mov
mov
jne
or
testb
xchg
test
lahf
mov
jae
cld
adc
dec
and
mov
das
xor
and
cli
cmp
fnsave
jmp
in
outsb
notl
daa
in
add
or
pop
mov
addr16
add
sbb
sti
ds
mov
add
js
out
mov
pop
fists
xchg
lret
inc
adc
inc
mov
sub
les
lds
cmp
lock
rorb
stos
xor
adc
cwtl
outsb
pop
popa
js
mov
imul
cli
jne
cmp
lods
push
xlat
adc
call
cli
push
pushf
and
mov
in
leave
or
xchg
lret
pop
and
pop
ret
pop
xchg
mov
in
addb
pop
sub
jge
aad
fwait
mov
jae
aaa
faddl
mov
popa
sub
in
push
push
add
cmpsb
in
jl
daa
jbe
push
in
in
fnstenv
xor
fwait
sti
xchg
js
out
add
jmp
cmpsb
mov
fdivrs
idivl
aam
sbb
jp
jle
lods
cltd
jecxz
sbb
and
pop
lahf
sub
sbb
cmp
pop
pop
jl
dec
cmp
xor
sub
sti
outsl
add
loopne
into
dec
mov
cli
pop
jmp
clc
lods
jp
sete
xchg
mov
lds
int
clc
roll
cmpsb
mov
mov
pop
jecxz
decb
sti
dec
sti
mov
mov
in
xlat
les
fdivl
mov
mov
fbld
mov
int
dec
in
xlat
or
in
pop
jle
lock
cmpsb
out
stos
sahf
daa
jb
gs
ret
add
xor
sbb
mov
mov
scas
sti
mov
pop
test
scas
fildl
sbb
dec
fwait
int
gs
loop
jl
testl
sbb
lret
dec
inc
jbe
lret
dec
inc
cmpsl
jecxz
inc
fs
shl
or
mov
mov
add
jno
and
shlb
faddl
adc
push
cld
xor
je
test
fistl
add
push
xor
fstps
mov
outsl
aam
push
bound
insb
push
xchg
jb
popa
pop
test
mov
aas
xchg
stc
mov
aad
jbe
fstl
mov
cmp
shrb
test
into
and
mov
daa
jnp
adcb
arpl
mov
or
push
mull
cmp
dec
lds
orb
jge
loopne
cwtl
inc
mov
fstl
sub
int
fidivl
xchg
or
movl
inc
cmpsl
xor
mov
xchg
pop
pop
jmp
adc
pop
mov
mov
mov
aaa
and
loopne
jl
cmp
loopne
nop
or
dec
push
nop
mov
fisttps
pop
inc
call
dec
pop
jge
mov
jge
xchg
int3
adc
cmc
cmp
or
movsl
add
jle
fucom
fwait
ret
inc
jnp
divb
inc
cmp
ficomps
sti
pushw
pop
jae
lods
test
shll
dec
fwait
shl
aad
lret
aam
shll
iret
int
pop
xchg
pop
enter
lcall
call
fldcw
push
pop
repz
imulb
not
stos
lods
inc
add
lods
out
aam
sbb
lds
push
in
andl
clc
enter
testl
lock
int3
divb
aam
inc
in
jecxz
adc
ret
push
clc
cltd
fsubr
mov
andb
std
cmp
mov
mov
fadds
push
pop
mov
mov
outsl
xchg
xor
and
pop
mov
push
popa
arpl
push
mov
or
push
repz
dec
xor
xchg
jo
or
jecxz
movsl
enter
ret
pushf
xchg
or
dec
icebp
mov
xor
inc
ret
add
jne
adc
jmp
push
cmpl
rcr
in
pop
cmp
bound
int
cld
daa
jbe
fildll
jmp
ljmp
xchg
imul
in
jg
test
dec
movsl
or
aam
idivl
add
mov
jo
and
sub
sbb
lds
fnstcw
push
push
jne
cmp
pop
bound
or
mov
mov
push
push
inc
mov
mov
xchg
es
arpl
push
fisttps
enter
test
jno
mov
lret
pop
inc
push
adc
pop
fnsave
sbb
fmull
aam
enter
push
out
lods
add
sbb
cmp
lock
aad
fdiv
pop
sarb
iret
push
loope
xchg
mov
xchg
imul
push
sbb
jno
stos
iret
cmpl
or
movsl
testb
out
divl
pop
pop
pop
cmc
mov
add
lds
lock
cmp
mov
shl
je
call
push
out
enter
jns
adc
jge
jnp
gs
jne
dec
int
xor
xor
sbb
arpl
insb
cmp
sbb
pop
test
sbb
inc
adc
pop
push
adc
push
inc
push
xchg
sti
mov
mov
pop
cmp
cmp
xchg
es
mov
mov
lds
sub
adc
and
cwtl
or
mov
aam
mov
call
push
cltd
testb
mov
pusha
push
cmp
int3
pop
mov
cmc
push
jl
call
rorl
rcrb
jecxz
stc
jnp
gs
fs
lods
loopne
stc
in
add
cmp
fidivs
inc
sarb
and
pop
cmp
stc
mov
sti
ret
mov
cs
xor
mov
inc
addr16
test
cmpsb
jl
dec
mov
mov
cmp
pop
fistpl
stos
ja
cmpsb
or
sti
cmpsl
dec
push
or
xor
push
jmp
leave
das
sbb
shll
loop
je
in
or
xor
dec
sbb
shrb
jg
inc
fsubp
add
sbbb
enter
pop
sahf
pop
mov
loop
push
scas
and
cmp
mov
mov
shrl
pop
imul
push
add
dec
or
mov
mov
sbbl
fstpt
nop
lods
aad
or
jmp
pop
fwait
cmpsl
sub
stc
pop
push
pop
xchg
cs
push
idivl
or
add
lock
enter
icebp
or
add
out
int3
sbb
mov
dec
adc
mov
fbld
test
and
test
ret
push
sbb
adc
leave
mov
sub
nop
mov
test
jg
ja
adc
lods
subb
cmp
sub
xchg
pop
xlat
xchg
push
test
fbld
lods
repnz
imulb
jg
jae
jne
arpl
test
adc
push
clc
je
adc
xchg
movsl
push
xchg
mov
xchg
clc
push
repnz
sbb
dec
add
je
addb
fists
mov
mov
add
jmp
cmp
mov
sub
or
jmp
jg
test
in
scas
loopne
xchg
lea
adc
xchg
sub
sub
mov
xchg
inc
cmp
sbb
testb
inc
xchg
pop
bound
and
bound
jae
sub
js
imul
xor
jne
cmp
add
pop
testl
lock
fucomi
lods
mov
push
aam
push
mov
mov
sub
stc
push
in
dec
int3
dec
or
rcrb
std
sbb
mov
add
pop
xlat
mov
notl
lds
mov
and
fwait
inc
jmp
out
nop
test
mov
loop
mov
jl
xor
lret
mov
rol
dec
mov
aas
mov
fstps
into
shll
mov
lock
fwait
loopne
int3
pop
shrl
lock
int3
hlt
adc
rcl
ds
push
and
or
leave
shrl
icebp
mov
inc
or
test
arpl
mov
xor
lret
xchg
dec
mov
aad
jbe
pop
or
mov
jbe
scas
add
add
scas
dec
inc
xlat
add
filds
mov
in
cmp
inc
imul
add
scas
sbb
mov
sbb
sub
jg
sbb
scas
shrb
adc
cmp
cld
cmp
mov
sub
sbb
push
enter
sub
cmp
js
xor
cli
inc
mov
jnp
push
out
xchg
push
in
jns
loop
or
cwtl
lea
mov
pusha
sahf
mov
arpl
scas
add
mov
mov
jecxz
jns
loopne
test
xor
lret
xchg
xlat
add
inc
lds
jnp
bound
mov
adc
stos
xchg
lret
ss
mov
add
or
push
call
rclb
pop
nop
test
hlt
fucomp
mov
lea
xchg
in
test
pop
fwait
or
loopne
test
adc
and
testb
inc
xlat
xchg
xchg
leave
jmp
xchg
mov
popf
stos
cmp
into
pop
sub
std
dec
inc
imul
mov
inc
jp
and
in
inc
fs
mov
in
jns
outsb
negl
sbb
xor
pop
and
add
dec
outsl
cmc
movaps
aas
mov
sbbl
sub
xchg
lods
fdivr
jno
mov
fsubr
adc
cs
popf
xor
push
or
stos
fsubr
fistpl
dec
dec
data16
cmp
ret
scas
daa
lea
mov
popf
imulb
fbstp
xchg
mov
out
push
negb
dec
addr16
inc
sahf
add
cmpsb
sarb
inc
cmp
insb
cli
lret
lea
imul
outsl
aam
xor
sub
je
add
sbb
jge
mov
int3
aad
or
out
or
or
xlat
std
push
fisttpll
loop
xor
sbb
cmc
xor
push
rol
sbb
arpl
in
out
pop
add
hlt
es
pop
pop
lahf
pop
repnz
dec
mov
xlat
aaa
in
mov
icebp
inc
mov
call
dec
xchg
loope,pn
or
enter
mov
sarl
cmp
xchg
out
or
fidivrs
xchg
adc
in
pop
mov
in
adc
fsub
ds
add
jp
push
in
jns
daa
insl
xchg
in
cli
mov
lcall
xor
xchg
dec
insb
xchg
loopne
dec
mov
shll
push
clc
std
jnp
dec
add
testb
sbb
subl
lcall
mov
outsl
fucom
shlb
pop
js
pusha
mov
iret
sub
xchg
test
int3
inc
mov
add
popa
push
int3
test
push
mov
cmc
je
movsb
add
mov
sbb
add
and
clc
dec
lret
rolb
xchg
jno
add
inc
sub
sbb
aad
jbe
pop
sub
in
repnz
push
inc
lret
xchg
mov
jl
rcl
mov
add
cmp
or
stc
or
jg
in
test
je
aad
into
int
in
stc
in
int3
and
ret
mov
mov
call
orb
loop
jno
mov
adc
or
xorb
and
cld
or
in
jge
mov
js
jmp
insl
aad
inc
ficoml
fcmovbe
hlt
sbb
je
imul
jp
dec
push
dec
je
and
mov
cmp
push
jae
mov
mov
loope
les
xchg
mov
push
sub
jnp
mov
shrb
inc
in
cmp
aad
bsf
or
mov
or
inc
sbb
outsb
inc
movsb
out
mov
repnz
mov
cli
call
movsb
mov
iret
sbb
popf
stc
adc
adc
add
sahf
data16
sub
shlb
cmp
mov
mov
jp
aam
int
test
or
push
sub
repnz
or
fisubs
dec
add
or
iret
inc
out
fcoml
and
test
inc
int3
jae
mov
dec
inc
mov
pop
shrl
adc
dec
push
call
sti
xor
fstpl
add
xor
cwtl
add
cltd
push
pop
add
inc
and
sbbl
fildll
mov
xchg
add
inc
mov
sbb
sub
jne
les
cmp
fistpll
fs
mov
push
data16
inc
xchg
or
cmpsb
or
stc
out
fwait
cwtl
cmpsb
xor
mov
rcll
out
ret
sub
add
push
je
inc
inc
repz
pop
movsl
xchg
das
and
push
or
sub
adc
xchg
mov
fsubp
mov
shr
pop
scas
aam
aaa
mov
stos
cs
scas
sti
jle
sbb
pop
push
insl
andl
ret
int3
bound
mov
lret
adc
fwait
pop
push
lods
jbe
pop
daa
filds
int
xchg
xor
or
mov
sub
sub
out
lcall
sub
inc
dec
or
xchg
pop
cld
push
sub
leave
enter
arpl
mov
mov
xchg
loopne
mov
cmp
popf
leave
loope
push
jae
ret
sbb
aaa
sub
adc
mov
add
das
in
aad
lcall
or
popf
rol
nop
call
push
and
aad
lahf
cld
mov
out
adc
push
in
xlat
pop
out
pop
mov
ss
loope
shrl
cmovae
dec
xor
jp
sub
push
xor
orl
rcll
pop
test
dec
or
pusha
mov
jb
xchg
les
jl
sub
iret
push
and
shll
push
xlat
xchg
out
jno
cmpsb
jnp
mov
mov
adcl
sub
js
in
xor
xorl
bound
out
adc
pop
aaa
mov
adc
cmpsb
inc
loope
rcll
xchg
inc
imulb
repz
leave
sbb
ljmp
subl
add
dec
fbstp
sub
dec
mov
push
popf
jo
jnp
je
sarb
pop
push
in
nop
adc
mov
sub
jns
jle
lods
inc
sbb
inc
push
mov
ret
call
jg
cld
rcrb
jg
xor
pop
and
popa
dec
aad
in
pop
dec
jge
push
pop
lods
push
cltd
and
xchg
mov
mov
push
inc
test
jp
fistpll
movsl
adc
pop
call
aaa
mov
jl
rolb
pop
sub
sbb
les
jge
mov
jge
aam
mov
ret
pop
sub
popa
inc
push
fs
js
mov
pop
mov
inc
lret
imul
test
pop
mov
sbb
mov
sbb
mov
enter
call
mov
in
insl
lods
clc
loop
push
rcrl
mov
into
sbb
out
jae
daa
and
xchg
sbb
xlat
aam
testl
lret
push
fstpt
dec
andl
push
push
aaa
dec
mov
cld
lret
fsubs
arpl
idiv
ljmp
lret
cld
mov
scas
je
jle
pop
dec
jmp
add
mov
repnz
hlt
test
popa
repz
clc
push
add
out
ljmp
cmc
icebp
mov
push
sbb
aad
imul
mov
push
cli
ss
dec
or
sub
aaa
sbb
jmp
mov
shll
mov
cmp
push
sahf
cmp
in
cli
loope
mov
cmc
cltd
xchg
push
sti
hlt
in
hlt
xchg
fwait
jne
sbb
call
mov
or
adcb
sub
xchg
sbb
pushf
ret
fs
lock
pusha
inc
fldl2t
mov
add
mov
push
sub
jnp
ret
dec
loop
rorl
arpl
mov
fstl
cmpsl
cmc
mov
int3
cmc
cmp
loopne
insl
mov
cmp
lock
jnp
dec
std
insb
out
outsb
jbe
lock
ret
jmp
pop
imul
lds
in
or
mov
mov
xor
js
mov
inc
arpl
or
ljmp
mov
int
push
push
xlat
enter
push
iret
push
popf
aaa
shl
in
repz
inc
insl
movsb
scas
mov
inc
int
scas
dec
and
loop
adc
int
mov
sub
sbb
or
adc
mov
mov
mov
sbb
adc
sub
ret
les
mov
mov
insl
inc
adc
jg
aas
movsb
es
decl
ret
loope
lds
jmp
mov
jl
mov
cmc
cmpsb
ljmp
push
xorb
lret
shlb
sti
inc
dec
repz
in
cmp
cld
add
xchg
push
or
es
pop
jecxz
push
adc
sbb
aaa
sahf
adc
test
repnz
pop
jp
enter
icebp
and
mov
jnp
xor
lcall
out
mov
cmpsb
or
loope
jb
loopne
mov
adc
call
outsl
cli
adc
push
jbe
rorb
movb
outsl
addb
jecxz
jno
mov
jl
outsb
or
xlat
shlb
shlb
xor
imul
mov
xor
mov
xlat
test
punpckhbw
dec
fmull
sbb
movsl
sub
std
fimuls
call
loop
push
fldl
sbb
jmp
dec
mov
inc
je
push
in
cli
stos
lret
dec
xor
imul
test
adc
mov
aam
outsl
stos
loope
insl
jmp
sub
push
xchg
push
je
mov
push
loopne
xchg
movsb
or
mov
mov
mov
push
xor
pop
fmul
xchg
dec
add
aam
xchg
cmp
mov
sbb
lods
pop
fwait
pop
mov
ret
call
int3
rcrb
sub
and
leave
mov
pushf
jp
push
adc
xchg
cli
nop
mov
xchg
stos
pop
sub
mov
or
cmc
sahf
sbb
jp
daa
imul
movsl
or
adc
mov
in
mov
jl
inc
daa
xchg
sbb
test
mov
cmp
pop
sbb
mov
push
xchg
scas
sahf
lcall
pop
stc
xlat
ret
repz
sbb
sahf
lds
jo
movsl
and
loop
pushf
mov
mov
mov
xchg
lods
push
cmpsb
pushf
pop
jno
xchg
add
fnstcw
cltd
test
cmp
sbb
ljmp
pop
idivl
mov
roll
adc
daa
add
mov
jge
xchg
pop
jmp
arpl
scas
dec
dec
sub
std
cli
inc
jecxz
sub
cs
daa
pop
pop
rcr
push
aaa
add
and
inc
push
sub
jns
mov
aas
in
and
fwait
repz
xchg
xor
jne
cmpsb
pop
adc
inc
aam
pushf
xor
sbb
xor
mov
mov
mov
inc
push
xchg
movsl
xchg
or
sbb
fisubl
stos
in
fnstenv
repz
inc
pop
and
loopne
sbb
lods
test
xchg
push
mov
jo
gs
clc
xchg
push
cmpsb
push
adc
repz
ficoms
test
push
pop
hlt
xchg
jbe
pop
adc
cmp
std
sti
dec
test
xor
insb
jnp
pusha
pop
mov
push
xchg
dec
insb
out
cmp
js
pushf
xchg
mov
add
or
hlt
or
int
dec
stos
cmpb
mov
sub
or
ss
out
adc
jmp
inc
mov
gs
xchg
xchg
xchg
mov
sub
or
lods
out
push
enter
sub
idiv
sbb
jle
out
sar
popa
xor
lods
jmp
push
das
outsb
loope
imul
test
jnp
loop
jle
out
pause
dec
fmul
std
mov
push
mov
out
dec
mov
or
lock
pusha
xchg
aam
mov
test
inc
jb
popf
xchg
push
aam
push
adc
frstor
dec
inc
jo
lds
push
cmp
fs
xchg
pop
jp
jno
ja
enter
and
jno
mov
add
jnp
xchg
inc
lret
xchg
in
and
mov
sbb
call
cmp
int3
hlt
mov
mov
xchg
push
mov
adc
push
out
lret
xor
popa
mov
push
repnz
sub
repz
fiaddl
jmp
pop
inc
daa
adc
shll
push
jg
out
mov
repz
mov
lea
lret
sub
xchg
dec
rolb
cmp
loope
mov
pop
sbb
xchg
inc
pop
rcll
bound
jnp
nop
enter
idivl
imul
stos
clc
mov
popf
cmp
test
dec
xchg
lods
xchg
lock
repz
mov
or
xchg
dec
in
sbb
pop
adc
mov
aas
movsl
push
dec
push
jl
mov
movsl
iret
mov
pop
adc
push
lahf
sbb
ror
mov
adcl
in
lret
mov
add
xor
pop
xchg
adc
lds
inc
add
sbb
nop
loop
ljmp
icebp
push
mov
and
mov
xchg
arpl
xorb
jb
mulb
aaa
lret
stos
adc
je
iret
imull
sub
add
push
xor
rcl
adc
rclb
cmp
push
or
push
movsl
scas
iret
push
add
loope
cltd
push
add
mov
jl
ret
out
fs
mov
pop
ljmp
push
dec
ficompl
fimull
out
lret
mov
clc
cmc
dec
add
out
push
cmp
das
mov
mov
fdivrl
mov
push
sub
test
es
xlat
inc
popf
jmp
shl
jno
mov
jno,pt
int3
cmp
mulb
sub
in
push
mov
jge
iret
cs
xlat
das
js
dec
jae
sub
add
sub
pop
in
mov
mov
xchg
fdiv
inc
cmp
outsl
push
add
aaa
lcall
insl
ret
popa
in
push
fcmove
xor
imul
int3
dec
pop
push
cltd
stos
mov
sub
jmp
fnstcw
andl
out
jmp
push
sahf
lcall
jno
pop
dec
or
in
xor
push
sbb
jo
in
cmp
mov
stos
cmpsl
inc
adc
bound
and
or
and
stos
add
out
loopne
adc
dec
test
fstpt
dec
pop
cmc
jo
rcl
cltd
cli
push
and
pop
mov
lds
pop
mov
and
xchg
scas
xchg
mov
pushf
loop
jno
movsl
loope
and
and
xchg
sbb
into
mov
in
das
or
fcmovbe
mov
xchg
nop
repnz
xor
jg
mov
pop
xchg
fwait
repz
mov
push
or
dec
adc
dec
in
xchg
or
call
mov
ds
add
dec
loop
imul
movsl
mov
xchg
cmp
cmp
sub
sub
ret
inc
xchg
pusha
xor
jne
sbb
shl
lods
jno
in
mov
mov
lret
fdivr
addl
mov
insl
or
adc
mov
mov
out
decl
push
stos
cmpsb
dec
das
insb
movsb
mov
incl
daa
jp
les
lret
enter
fdivs
xlat
dec
mov
jo
cwtl
mov
pop
inc
lret
pop
lods
push
test
stos
xor
and
adc
sub
jbe
in
mov
aam
idivl
insb
nop
mov
in
test
pop
outsb
mov
push
out
imul
lcall
lods
outsb
mov
cmpb
incl
jle
aas
repnz
int3
xchg
cmc
jp
fcompl
pop
dec
cwtl
jl
loopne
adc
inc
and
sbb
ret
mov
mov
cmp
xchg
push
hlt
cwtl
mov
adc
mov
cmp
insl
pushf
sahf
into
repnz
rep
test
scas
outsl
pop
test
pop
cmpsl
mov
xchg
pop
leave
add
dec
idiv
cmp
stos
cld
mov
push
mov
add
adc
sub
popa
mov
ror
cmp
dec
jle
mov
je
repz
mov
push
sub
lea
jbe
sub
mov
ljmpw
js
add
add
cmc
arpl
xor
xchg
xor
xchg
mov
and
dec
in
lahf
fimuls
les
fstpt
dec
lock
xchg
shr
or
mov
add
xchg
lcall
cli
insl
ss
pop
add
sub
repz
inc
cld
ficoms
loop
cmp
mov
or
test
mov
add
les
jmp
add
and
sbb
lods
xchg
push
lods
clc
sbb
mov
cwtl
roll
rcll
orps
es
iret
loop
loope
jnp,pn
mov
es
push
outsb
pop
mulb
aaa
insb
cmpsb
xchg
ds
or
inc
and
popa
test
mov
lds
cmp
stc
mov
add
fwait
dec
pop
lcall
aad
sbb
lods
and
jnp
jecxz
popa
sti
scas
stos
loope
lods
dec
nop
icebp
enter
ja
jle
scas
insl
mov
inc
popa
add
cmp
jge
jge
outsl
inc
roll
add
rclb
repnz
push
jge
notl
cmp
fisubs
call
fisttpll
mov
mov
xchg
rcr
iret
mov
cs
mov
repnz
mov
or
mov
pop
loopne
xchg
mov
pop
fwait
adc
shl
cli
dec
dec
cmp
pop
adcb
orl
repnz
fmulp
sub
xchg
mov
in
dec
jne
enter
call
mov
or
jnp
mov
mov
movsb
shr
loop
lods
xchg
int3
in
sahf
repnz
mov
insb
add
or
outsl
mov
add
leave
add
insl
mov
xchg
and
test
loopne
sub
xchg
daa
out
movsb
int3
fsubrl
loope
stos
add
jmp
sub
dec
js
xor
ljmp
pop
push
shll
lcall
mov
dec
outsb
std
jne
movsl
adc
call
sbb
sub
mov
mov
lock
lret
adc
movsl
setne
xchg
inc
fmull
inc
dec
std
jo
pop
outsl
dec
loope
xchg
push
pop
popl
cmp
out
daa
lcall
jp
xchg
xchg
dec
addl
dec
xchg
fadd
jmp
ss
movsb
out
shll
lea
int3
xchg
in
jl
notb
push
push
sarl
xchg
mov
mov
push
push
cmpsl
pop
enter
ljmp
sub
mov
aaa
mov
outsl
adcl
leave
sbbb
sub
mov
fcompl
mov
out
push
imul
outsl
rcrl
push
ffree
lret
xchg
push
cmp
mov
out
push
xor
fwait
addr16
mov
inc
xor
mov
push
xor
jb
int3
shrl
or
into
or
inc
mov
mov
in
or
out
insl
dec
sbbl
cmc
or
out
idivl
dec
jbe
sub
jne
popf
inc
xor
fwait
jnp
cltd
das
inc
daa
inc
loop
xchg
sahf
jo
mov
dec
jecxz
cmp
movsl
add
dec
ficompl
or
js
mov
out
and
flds
icebp
mov
call
sahf
mov
cmp
stos
shr
sub
cltd
out
jne
out
push
xchg
cmc
xor
js
clc
cmp
push
in
fldl
jb
mov
arpl
jecxz
iret
adc
jl
pop
call
popf
fpatan
dec
cld
lock
pop
insl
mov
cmp
aas
pop
jle
out
sarb
in
xor
mov
scas
jle
mov
jle
mov
xchg
mov
mov
das
inc
or
sub
fbld
mov
inc
mov
mov
cmpsb
loopne
outsb
add
rcl
pop
xor
mov
cmpsl
mov
shrb
sub
dec
add
in
ret
push
mov
ret
outsl
xchg
pop
mov
aad
lock
push
xchg
xor
mov
icebp
jecxz
xor
not
ljmp
mov
push
cmp
adc
bound
jnp
sbb
aas
or
mov
fbld
enter
fwait
insb
je
std
fildl
jmp
sbb
add
push
loope
push
ds
int3
jg
out
icebp
mov
fldenv
adc
clc
dec
or
jmp
mov
in
inc
xor
int
cmc
cltd
mov
mov
and
andb
jle
sub
rcll
sbb
mov
repnz
and
dec
dec
lret
pop
mov
fdivs
pop
xchg
cli
inc
in
lea
add
mov
sub
nop
js
adc
shrl
test
xchg
cs
leave
jmp
test
sbb
jnp
or
mov
lret
mov
rclb
xchg
test
test
in
or
xchg
add
js
mov
int
daa
stos
mov
xor
les
call
and
xchg
push
mov
xchg
or
imul
mov
sub
call
xchg
aam
addr16
test
push
out
jmp
fcoms
insb
mov
sarl
push
leave
jne
fiadds
xchg
jg
mov
fidivrl
nop
inc
ds
xchg
inc
inc
cmp
mov
shrl
sbb
pop
dec
stos
push
cmp
cmp
mov
mov
mov
cs
sarb
fucomp
adc
fsubrl
je
arpl
les
mov
loope
fwait
fbstp
fcoml
pop
js
stos
js
jo
pop
fmuls
xor
inc
shlb
fstpt
push
dec
pop
jmp
mov
sbb
mov
dec
lea
jns,pn
aam
subl
pop
sub
dec
rcl
movsl
cs
or
lret
mov
int3
in
xchg
mov
ret
ror
jmp
sub
push
mov
sbb
mov
negl
cmpb
stos
add
out
adc
lds
std
int
dec
rcll
mov
scas
sub
sub
or
xor
pushf
lahf
arpl
lahf
hlt
pop
sub
mov
mov
xchg
stos
mov
dec
in
movsl
jnp
push
jge
mov
rorl
xor
gs
bound
lock
in
or
cmpsb
mov
xor
testb
push
shl
pop
mov
push
push
mov
adc
dec
mov
sarb
inc
jbe
mov
jns
out
fcoms
stc
or
jecxz
popf
es
insl
mov
sbb
inc
test
xchg
sub
mov
mov
aas
in
test
into
pop
into
pop
subl
cltd
rorl
test
jg
negb
jmp
push
lea
jo
push
sbb
jmp
fst
mov
inc
std
mov
mov
add
nop
enter
shl
add
neg
adc
pop
and
cmp
icebp
sbb
lds
pop
sarb
mov
in
mov
test
std
pop
mov
mov
or
outsb
xchg
pusha
and
aam
in
ds
aam
rcll
adc
sbb
jge
and
mov
and
rolb
sahf
mov
mov
xor
bound
sbb
inc
mov
pop
mov
xchg
loope
int3
cwtl
mov
jbe
orb
out
jb
inc
cs
rcll
int3
in
loopne
mov
jb
pop
mov
mov
mov
inc
pop
mov
pop
int3
mov
dec
shrl
sub
sti
mov
sahf
mov
mov
adcl
xchg
fmull
sbb
popl
mov
xchg
pop
or
outsb
push
mov
lea
adc
clc
push
cmc
and
lds
loopne
in
inc
xor
aam
inc
cmp
in
push
fidivl
jo
sbb
sub
inc
cwtl
xchg
sub
je
lcall
inc
sbb
jecxz
shrb
clc
stos
cmp
fistpll
cmpsl
jbe
pop
and
xor
outsl
mov
stos
fldlg2
in
mov
les
sub
adc
jns
out
inc
fmull
cltd
mov
jo
fsub
inc
stos
add
push
dec
test
lret
jne
and
add
cmc
std
jne
jno
xchg
adc
in
sbb
dec
mov
in
ja
dec
repnz
add
pop
pop
dec
sarb
sar
pop
sub
sar
or
popa
shll
fstpl
or
stos
mov
lret
push
mov
mov
mov
xchg
xchg
mov
mov
add
push
aas
mov
cmpsl
in
mov
dec
sbb
jnp
out
flds
jns
add
pop
lret
int
mov
mov
rcrl
int
or
dec
inc
jg
dec
sbb
shl
iret
pmulhuw
jo,pn
jl
dec
add
push
push
add
lds
mov
jecxz
lods
push
bound
xchg
mov
out
icebp
mov
loope
call
sbb
fsubrp
dec
pop
pop
shll
loope
jmp
rcll
mov
lahf
sti
sbb
in
push
enter
mov
dec
subb
insb
jecxz
mov
and
scas
imul
dec
out
inc
std
dec
mov
lret
mov
xchg
fdivrl
and
jnp
inc
ja
add
repnz
decb
lret
cwtl
add
stos
movsl
into
mov
mov
popf
stc
les
inc
push
test
decb
sbb
mov
mov
jge
or
into
dec
idivl
pop
or
mov
mov
aas
enter
sub
dec
sbb
mov
inc
add
xor
lods
test
inc
mov
xor
in
dec
ret
push
and
adc
aam
dec
mov
adc
divl
add
rcl
iret
jnp
sub
enter
cs
or
fadd
lock
mov
in
pop
nop
lods
mov
cld
adc
pop
stc
push
jne
ljmp
lahf
loop
inc
add
dec
jp
pop
pop
ja
aaa
mov
jmp
add
lret
ret
mov
inc
lods
cmp
xor
mov
dec
mov
fwait
mov
cmpsl
dec
mov
sti
sub
jl
inc
cmp
cld
movsb
test
andl
mov
movsl
idiv
cmp
test
and
mov
shl
adc
mov
adc
jno
addr16
fs
fistl
pop
mov
int3
jo
jge
out
pop
jg
loopne
testl
hlt
or
xor
cmpsl
inc
or
fcoml
movsb
push
fnstsw
nop
mov
pop
jle
add
fcmove
insb
rcrb
lret
and
sarl
push
mov
pop
insb
inc
jl
das
jo
push
nop
out
movsb
dec
dec
jae
aad
jecxz
fwait
ljmp
pop
push
push
popf
loop
mov
clc
fwait
add
loope
sarb
jmp
push
sbb
xlat
inc
das
lret
loop
rclb
lock
add
cmpsl
fldl
stos
adc
jae
pop
into
xchg
sbb
sbb
mov
and
cwtl
loope
addl
movsl
sbb
adc
inc
pop
lods
hlt
or
faddl
mov
mov
setae
pop
stos
cli
inc
lds
lret
mov
jb
fsts
dec
out
rcrb
repz
jno
and
imul
int3
push
mov
call
pop
jb
jmp
pop
pop
xchg
or
dec
repnz
insb
dec
or
enter
cmpl
test
mov
stc
shrb
cmp
lea
lret
dec
ds
push
dec
cmp
fdivrs
push
mov
nop
addl
imull
mov
or
ror
icebp
jp
imul
sti
mov
push
cmp
fldl
dec
adc
xchg
jecxz
fdivrs
inc
es
dec
mov
mov
jnp
mov
out
roll
daa
lret
push
push
cmpsb
nop
sbb
mov
pop
rorb
stos
cmp
or
leave
in
xchg
xchg
in
inc
scas
mov
mov
mov
pop
jae
ret
mov
or
movsb
lea
shll
enter
push
xor
divb
or
jmp
or
idiv
jmp
hlt
fdivl
inc
pop
lcall
loope
adc
jg
lock
sub
add
sub
scas
repnz
clc
lret
xchg
int3
in
push
xorl
xchg
add
daa
inc
pop
sub
cltd
lret
std
call
lahf
mov
sub
in
inc
sub
jne
or
mov
mov
mov
mov
mov
fbld
add
sbb
loope
or
add
jno
jo
das
push
fsubl
sbb
test
pusha
mov
imul
pushf
popa
push
sbb
cmpsb
xor
div
inc
into
pusha
sbb
movntq
inc
or
sahf
out
arpl
pop
adc
dec
or
push
mov
add
jnp
and
add
push
mov
jge
lret
dec
mov
sbb
int
out
jnp
xchg
ret
add
adc
scas
sbb
mov
mov
pop
xchg
nop
outsb
loopne
dec
push
dec
xchg
rclb
pop
rsqrtps
sub
mov
test
loope
pusha
sahf
ficoms
inc
sahf
hlt
insb
push
mov
cmc
jg
rolb
sub
jmp
inc
jle
sbb
dec
push
pop
push
dec
aam
and
sbb
cmp
jmp
mov
mov
adc
outsb
add
ss
out
loope
lret
mov
sub
mov
xchg
adcl
xchg
sub
cmc
shll
push
sbb
and
dec
testb
jg
mov
cmc
mov
mov
leave
push
sti
or
add
int3
jp
nop
cmc
out
mov
sbb
jb
lods
adc
aad
cwtl
mov
cmp
arpl
dec
mov
mov
bound
addl
xchg
dec
ret
aad
dec
insb
dec
and
add
xchg
pop
pop
xchg
or
test
sub
cli
dec
dec
inc
add
loope
js
js
lret
or
mov
sbb
out
mov
inc
in
sbb
sub
or
mov
orl
xchg
lds
stc
push
jmp
inc
jge
icebp
loop
mov
push
inc
and
aam
adc
scas
out
cltd
dec
icebp
stos
inc
mov
dec
push
pushf
add
sbb
push
cwtl
es
adc
repnz
cmp
loop
mov
mov
jb
sahf
xchg
cmp
adc
jne
or
dec
fs
or
shr
les
pop
loop
fildll
in
out
cmp
mov
sbb
mov
inc
push
push
mov
mov
cmc
push
in
push
in
xlat
out
push
jbe
out
test
inc
test
outsl
stc
xchg
dec
iret
or
xchg
push
jae
ja
hlt
mov
sbb
mov
mov
out
insl
xor
daa
outsb
push
inc
repnz
pop
sbb
rorb
mov
mov
loop
pop
pop
cmc
ja
lods
cmp
add
rolb
ret
in
xlat
add
mov
lahf
pushf
cmp
and
mov
xchg
mov
out
mov
sbb
hlt
test
fdivl
stc
cltd
mov
loop
out
mov
sarl
sub
hlt
mov
out
xchg
imul
mov
or
cmc
add
jne
in
outsl
mov
xor
cmp
arpl
stc
push
sbb
xchg
lcall
sahf
cld
push
jnp
push
xlat
jb
movsb
in
mov
pop
xchg
jmp
les
js
mov
rorb
loop
lock
mov
mov
mov
mov
push
cwtl
stos
test
into
sahf
xchg
jae
int3
sub
xor
dec
cmp
dec
mov
push
or
loope
fistps
add
sbb
popf
pusha
cmc
ror
adc
fs
add
test
popf
mov
jle
cmc
out
add
or
cwtl
push
in
int3
mov
push
loopne
jmp
mov
sub
pop
fildl
imul
push
cli
inc
repnz
loopne
inc
mov
adc
movl
iret
xchg
loop
jge
shl
int
push
dec
movsb
sarl
fcmove
adc
dec
push
hlt
xor
and
mov
sub
sbb
xor
xchg
mov
and
adc
jmp
mull
jge
inc
test
xchg
cmp
dec
lret
lahf
mov
pop
in
aaa
movsb
and
or
add
in
mov
es
bnd
inc
mov
xchg
orl
sub
insl
add
mov
mov
shl
roll
xchg
mov
push
mov
xchg
dec
jmp
push
jnp
lret
xor
dec
xchg
xchg
inc
push
inc
inc
push
movsb
add
aaa
push
mov
repz
inc
mov
jno
cmp
adc
inc
fldl
push
popf
adc
xor
lahf
jb
lock
push
fs
pop
mov
popa
dec
pop
pop
xchg
dec
lea
mov
shlb
add
inc
jb
fstpl
mov
mov
xor
dec
bt
mov
pop
insb
push
js
pop
popa
in
out
mov
cmpsb
jg
and
sarl
mov
and
and
bnd
xor
cmc
add
int
push
pop
cmp
jle
test
int3
ja
imul
loop
xchg
jb
out
mov
rcrl
fcmovnb
mov
adc
push
xchg
xor
xor
cwtl
lcall
imul
mov
addl
aam
negb
inc
in
lods
sbbl
stos
aad
add
outsb
adc
sahf
test
divl
mov
lea
mov
ja
xor
adc
sbb
and
ud1
and
pop
jb
mov
mov
cmp
jecxz
shl
shll
mov
push
sbb
minps
pop
xor
mov
xchg
or
mov
test
lods
push
mov
jne
cmpsl
push
jno
xor
mov
and
adc
das
fisubs
inc
dec
xchg
sahf
push
into
push
inc
clc
xchg
dec
xchg
inc
jle
cld
fistpll
push
pop
add
ljmp
mov
andb
jge
imul
dec
mov
mov
leave
adc
mov
cmpsb
cmp
rclb
inc
add
xchg
js
mov
push
cmp
sahf
jae
in
jnp
mov
dec
and
aas
adc
inc
pmuludq
cmp
out
pop
dec
pusha
sar
xor
jmp
pop
test
push
jbe
aas
loop
dec
sti
imul
stc
int
mov
dec
cs
fisttpl
es
arpl
cmp
enter
dec
add
sub
fimull
dec
push
sti
addr16
inc
std
inc
int3
adc
das
pop
sti
pushl
inc
xlat
mov
and
sbb
loopne
mov
pop
sub
ss
sub
push
ljmp
je
rorb
mov
test
pop
mov
fidivrl
jb
xchg
pop
inc
ficoml
lret
outsb
adc
mov
lods
pushf
les
lret
pop
ret
xor
cmpsb
rcrl
mov
imul
cmp
pop
adc
lock
das
xchg
sahf
sub
lss
stos
aas
lods
xchg
lret
stc
je
mov
pop
add
pop
nop
mov
jb
cmp
lahf
xchg
loopne
js
leave
pop
add
movsb
orb
inc
xchg
add
jbe
nop
imul
pop
hlt
dec
lret
cmp
dec
sbb
mov
incb
push
std
cmc
arpl
cmp
js
adc
test
dec
and
mov
jno
pop
lock
push
cmpsb
xor
rol
mov
fdivrl
iret
sbb
sbb
das
add
movsb
les
subl
dec
inc
adc
adc
xchg
mov
clc
push
ljmp
xlat
mov
add
sbb
jmp
mov
sbb
or
xchg
mov
push
sahf
cmpsb
jmp
outsl
call
repnz
mov
ret
cmp
movsb
fcmovbe
sbb
mov
jl
sarl
stos
adc
push
lret
sbb
jne
and
fdivp
xor
in
mov
mov
mov
cmp
xor
xlat
mov
test
mov
mov
mov
sahf
movsb
aad
or
or
jmp
adc
ret
sbb
push
xchg
jle
sarl
aam
clc
iret
or
mov
xchg
cmp
mov
in
mov
ret
push
stos
mov
insb
cld
sbb
inc
mov
fimull
sub
in
fidivrs
lret
push
sub
add
enter
inc
add
push
inc
hlt
sbb
cmp
fisttps
cwtl
movsb
cwtl
pusha
cmpsl
rolb
into
push
adc
dec
lahf
adc
dec
xor
lods
pop
insl
xchg
pop
out
in
jecxz
cli
cmpsl
add
mov
mov
sub
mov
shll
mov
loope
mov
or
jo
cld
sbbb
mov
fwait
sbb
mov
rorb
pop
pop
imul
aaa
leave
xchg
lds
mov
jmp
xchg
call
lret
cmp
sub
adc
inc
outsl
mov
loop
dec
jp
or
pushf
out
sahf
mov
and
stos
mov
adc
jg
push
repz
jmp
into
lcall
leave
negl
and
adc
cli
dec
loopne
mov
mov
sbb
and
fidivrl
imull
idivb
stos
repz
divb
js
xchg
or
popf
dec
iret
scas
ljmp
add
sub
add
sbb
fldl
rcll
ds
sbb
negl
lds
dec
mov
mov
sti
cwtl
sti
loope
stos
xchg
loope
mov
mov
mov
in
mov
int3
jo
cmpsb
mov
ret
ret
push
div
out
cmpsb
or
test
pop
jge
fcoml
xor
fadds
jmp
movsl
lcall
xchg
arpl
xor
inc
add
mov
mov
inc
insl
int
lock
xor
mov
lcall
rclb
xchg
insl
lods
push
rcrb
popf
add
jge
popa
or
jmp
mov
cmp
adc
mov
pop
pop
inc
fiaddl
aam
inc
lret
insb
mov
in
or
in
xor
and
cmp
in
push
push
mov
mov
in
inc
dec
push
adc
mov
fldt
jns
inc
sti
push
pop
sub
push
mov
push
stc
xchg
push
adc
mov
aad
cmpsb
sub
jb
fiaddl
aaa
pop
iret
pop
mov
pushf
xchg
fcmovnb
mov
imulb
pop
mov
popa
adc
cmp
adc
lcall
adc
rolb
adc
jae
cwtl
cmp
shr
jo
clc
add
pop
ficoms
mov
icebp
mov
bound
cli
fstpl
adc
mov
test
mul
jne
flds
push
adc
addb
icebp
jmp
xlat
popf
and
in
jge
adc
adc
inc
loope
inc
pop
xor
push
ljmp
aaa
dec
pop
mov
jmp
cltd
mov
testl
inc
cmpsb
movsl
das
lret
icebp
jge
jae
mov
push
mov
cltd
adc
das
aam
xorb
mov
push
les
sub
dec
enter
rorb
sahf
mov
cmp
jp
add
je
sbb
fwait
outsb
cmp
cmc
jmp
aas
outsb
scas
int3
mov
test
hlt
pop
call
mov
or
add
mov
mov
fwait
lret
or
pop
pop
rolb
xchg
push
jno
jmp
out
xor
push
fildl
cld
mov
testl
sar
push
cmp
jnp
adcl
test
les
jns
in
ficoml
xlat
cmp
faddl
push
repnz
mov
mov
push
fdivrs
outsb
pop
and
leave
cmp
mov
aam
add
or
psraw
push
pop
xchg
xor
rcrb
out
ds
add
mov
mov
cmp
push
jge
ror
test
fisubs
cmp
int3
xor
dec
test
shll
xor
std
cmc
rcrl
sbb
out
mov
xor
xor
push
mov
mov
lock
leave
notb
inc
gs
fcmovbe
jp
dec
jp
bound
pop
and
mov
jp
mov
push
lock
xchg
cmpsb
movsl
and
test
jle
mov
ljmp
bound
out
shlb
pop
stos
fiadds
sbb
test
repz
lcall
fdivs
mov
sahf
sahf
fneni(8087
mov
add
xor
push
cmp
cmp
loope
mov
push
adc
jb
add
dec
cs
lret
xor
imul
cmc
imul
mov
dec
adc
inc
repnz
mov
mov
xor
jbe
cmp
mov
adc
push
mov
insl
daa
mov
pop
aaa
addr16
fistpll
into
mov
mov
mov
rcrl
out
fs
cmp
mov
test
nop
add
mov
imul
cmc
mov
shrb
push
xor
jmp
or
mov
in
popf
aad
lock
xchg
xchg
rcrb
inc
cmp
cli
mov
outsl
outsl
add
or
ds
push
mov
adc
inc
push
cwtl
jne
shl
fadds
hlt
addr16
sbb
and
ss
cmp
int
inc
inc
sbb
sbb
ret
fsubrs
jae
gs
jp
mov
mov
lods
daa
repz
idivb
jb
adc
aam
add
mov
mov
jmp
xchg
mov
push
push
dec
mov
js
movsl
push
push
movsb
fwait
cmpsl
popf
jns
mov
mov
in
stos
and
mov
insb
inc
in
inc
jecxz
orb
ret
pop
data16
mov
lcall
sub
inc
inc
mov
mov
mov
repz
dec
decb
ss
sti
cmp
adcl
testl
jle
inc
rorb
mov
sbb
xchg
xchg
icebp
fwait
mov
mov
dec
dec
push
scas
out
std
xor
dec
xor
pushw
mov
lock
clc
add
ret
test
jo
aad
js
pop
adc
mov
nop
bound
jns
aam
or
dec
pop
pop
ss
scas
loop
enter
mov
repz
cmpsl
sbb
jge
xchg
xchg
std
shll
push
inc
test
sub
pusha
cld
sbb
in
scas
push
or
addr16
das
enter
mov
mov
cmpb
add
mov
xchg
pop
in
xchg
cmp
pop
aas
stos
ret
jne
mov
mov
sbb
and
aad
sub
lods
fsts
jno
adc
cmp
clc
in
or
movsb
andb
ljmp
jno
sub
mov
fists
push
pushf
mov
xor
xchg
shll
shll
movsl
pop
push
fldcw
push
fisubrl
repnz
fidivrl
gs
xlat
jbe
es
dec
push
sbb
adc
xchg
in
inc
mov
pop
jp
jnp
lcall
sub
adc
push
push
or
cld
dec
call
lret
dec
cmp
pop
rorl
xchg
push
sbb
repz
push
rcr
mov
add
data16
mov
gs
sbb
popa
ja
jbe
in
das
cwtl
loope
fildl
mov
add
hlt
rorl
adc
aad
fadds
mov
ret
stc
ja
push
fmuls
fistpl
jge
lods
mov
lcall
lods
mov
sbb
dec
mov
push
fisubrs
scas
mov
mov
xchg
push
rol
or
das
in
add
mov
cmp
add
fadds
push
aaa
xor
sbb
sbb
push
out
aas
xchg
les
jl
or
jg
ficomps
dec
pop
pop
sub
je
std
loop
pop
and
inc
mov
or
mov
adc
hlt
das
ljmp
lahf
add
jmp
sub
jg
add
ret
or
arpl
add
int
rorb
aaa
jmp
call
mov
xor
cmc
ljmp
sbb
shrl
xor
cmp
dec
mov
xchg
mov
xchg
cmp
inc
loop
push
dec
sbb
jo
mov
popf
lret
loop
sti
cwtl
mov
dec
ret
test
sahf
movsl
add
inc
imul
fmuls
stc
sahf
cli
sbb
movsb
stc
or
daa
leave
xorb
out
push
sbb
out
mov
ret
js
push
jge
loope
mov
hlt
sbb
aad
adc
in
inc
out
jecxz
mov
sub
xchg
mov
push
aam
es
dec
test
mov
pop
sub
push
sub
movq
dec
outsb
lret
arpl
popl
stos
es
cmpsl
repz
xchg
and
outsb
je,pt
int3
jae
fdivl
adc
jo
ficomps
imul
shlb
cmp
pop
jne
mov
mov
push
imul
add
sahf
adc
mov
xor
testl
mov
jle
testl
jb
aad
lret
mov
in
mov
dec
call
ret
rcll
repz
dec
imul
stos
aam
cmc
in
nop
push
add
out
mov
rcll
fiadds
aad
ljmp
enter
or
sbb
sti
fisubs
out
bound
ret
cli
iret
lret
push
lret
out
ret
jp
sti
ljmp
in
jnp
lea
jg
mov
fcomps
lret
and
mov
or
xchg
mov
fucomip
cmp
mov
sub
outsb
negl
jmp
or
sub
xchg
mov
mov
repnz
pop
mov
xchg
jle
pop
int3
fwait
icebp
in
dec
cmp
mov
int
ret
outsl
mov
hlt
lret
jae
push
jo
rcrl
sahf
jg
jmp
iret
pop
jge
sti
cmpsl
adc
xor
mov
mov
jp
rcrl
xchg
add
pop
jp
cld
aaa
jnp
inc
cmpsl
jle
pop
cmpsl
ljmp
test
adc
add
pop
lds
jnp
fs
dec
push
mov
and
dec
insl
in
fdivrl
into
push
pop
fmull
lock
test
adc
mov
inc
ljmp
mov
fdivl
jl
lds
sar
outsb
xchg
es
pop
mov
loop
fwait
xor
mov
pop
rolb
adc
dec
mov
imul
and
lahf
loop,pt
and
in
mov
loopne
push
inc
push
push
mov
mov
bound
mov
and
jecxz
or
outsl
cmp
hlt
xchg
neg
fnstsw
add
cmp
jns
jo
lret
mov
shll
imul
pusha
sbb
mov
stc
or
mov
mov
std
call
jmp
mov
jge
xor
aad
xchg
outsb
test
xor
lods
rcr
jae
faddl
mov
insl
mov
pop
test
jge
sarb
mov
insl
cmp
int3
test
arpl
cmp
insl
imul
mov
dec
clc
cmpsb
fadd
decb
xchg
rcl
adc
aaa
int3
pop
popf
cs
inc
mov
jl
add
shll
into
mov
pop
push
fists
adc
sbb
xchg
pop
or
push
or
adc
lds
pop
testl
xchg
and
jb
sbb
cwtl
sub
test
into
sar
inc
sub
fbstp
mov
mov
jnp
push
lret
dec
sub
mov
or
int
out
cmp
popf
ss
rcll
dec
andb
mov
nop
popf
or
cmpsl
push
xchg
shrb
stos
rolb
mov
stc
in
sbb
out
pop
roll
mov
scas
mov
or
dec
rcll
rcll
bound
int
pop
sarl
test
or
add
scas
popa
add
jnp
jg
or
aam
push
pop
cmp
xor
lret
sti
pop
sub
aam
and
mov
arpl
hlt
repz
js
mov
mov
out
sub
mov
scas
pop
shll
pop
jecxz
push
cmp
aaa
jmp
or
add
ds
cmp
push
push
xchg
scas
mov
iret
fsubl
dec
xlat
js
sbb
xchg
xchg
sbb
xchg
in
or
xor
idiv
xchg
outsl
test
bound
or
mov
jg
lds
xor
xchg
push
cmp
enter
jne
add
xor
neg
inc
sub
iret
ret
sbb
cwtl
and
mov
push
mov
shl
pushf
pop
fsubrs
adc
bound
ret
add
xchg
aam
push
jno
scas
and
popa
mov
clc
push
mov
sti
cmp
in
cld
je
xchg
nop
add
mov
pop
pop
subl
push
movsb
or
lret
inc
lods
xor
fnstcw
scas
xchg
lods
lcall
nop
pushf
jnp
sub
fimuls
pop
in
scas
pushf
push
xor
pop
loope
pop
sbb
insl
xor
mov
mov
shll
mov
xor
dec
dec
dec
leave
pusha
clc
jno
mov
push
mov
roll
mov
jp
xor
mov
dec
mov
mov
dec
int3
int3
decb
fcom
jne
pop
add
ffreep
or
or
loop
fwait
jmp
xor
jno
sub
xchg
popf
pop
xlat
bound
fnstsw
test
mov
dec
xchg
cmp
daa
mov
movsl
xchg
rolb
fisubl
sbb
and
int3
dec
sbb
push
icebp
mov
popf
insb
push
testb
sub
mov
aad
cs
outsb
add
mov
loop
push
mov
xchg
ss
loop
cmc
xchg
je
les
push
xor
ret
or
cmp
adc
daa
loope
push
jp
mov
int3
add
add
or
adc
outsb
cmpsb
push
ljmp
xor
jmp
xor
adc
dec
roll
dec
mov
lds
sub
jp
rorb
mov
cmp
idivl
inc
arpl
roll
shlb
add
xlat
cmp
mov
pusha
ret
adcb
fcompl
lret
divl
rorl
insl
fimuls
push
imul
jb
fsubs
ret
mov
outsb
dec
insl
mov
pop
fidivl
dec
pop
out
stos
movsb
stos
call
jmp
xor
mov
jns
clc
cwtl
rclb
sub
and
cmpsb
arpl
fstps
fdivrl
pop
int3
aaa
inc
jle
xor
movsb
jmp
sbb
sbb
jg
aas
je
inc
xor
mov
test
and
es
nop
cmp
sbb
sub
or
andl
sub
notb
sbb
jo
loop
int3
lods
add
jno
rorb
add
push
cmc
movsl
jg
lds
xor
jno
fldl
mov
stos
enter
mov
stos
fs
int
jmp
pop
add
dec
jne
mov
lds
adc
adc
out
mov
mov
stos
mov
jg
push
mov
mov
pop
or
leave
into
imul
ret
jns
add
cwtl
ss
cltd
int
divl
pop
pop
jecxz
jne
mov
cli
mov
sub
std
mov
mov
and
loope
sbb
adc
sub
mov
out
aaa
mov
lahf
cmp
js
iret
push
add
pop
push
stc
and
adc
and
mov
outsl
jbe
jnp
inc
xchg
cwtl
and
popa
mov
xchg
js
outsl
sub
xor
sub
xchg
outsl
cmp
pop
popa
sahf
mov
sub
out
outsb
xchg
mov
mov
clc
or
cli
xchg
xchg
xchg
jns
jge
into
cmp
adcb
pop
mov
xor
aas
mov
xchg
aas
js
addr16
lea
jne
movsl
enter
ljmp
mov
fs
shrb
jmp
dec
pop
pop
lcall
stc
dec
mov
icebp
ret
cwtl
jns
sub
lret
in
dec
pusha
and
call
mov
fnsave
mov
cmp
dec
inc
inc
xchg
in
mov
inc
cmp
pushf
add
pop
mov
outsl
add
incl
aaa
adc
jae
into
aam
xchg
add
les
mov
fsts
cmp
mov
and
cmc
adc
mov
adc
fs
out
popa
sbb
out
xchg
in
xchg
and
add
flds
jno
mov
std
mov
adc
fidivs
pusha
pusha
xchg
popf
inc
out
into
ret
push
cmc
jae
push
and
push
popa
fsubrp
cmp
push
dec
mov
out
cmp
mov
jne
xchg
mov
xor
rol
lods
cmpsb
mov
push
mov
mov
rcrl
fildll
in
xchg
fninit
cs
movsb
add
jbe
push
lock
mov
inc
clc
mov
fsubl
mov
adc
fidivrs
cmp
leave
cmp
dec
sub
mov
jo
fstl
cmp
fs
dec
enter
das
out
lds
cmp
loope
adc
in
jne
mov
cmc
pop
sbb
jle
mov
dec
mov
cmpsl
mov
ret
shl
mov
dec
mov
jp
jno
lret
hlt
dec
or
xor
leave
ret
or
jmp
aas
dec
lods
jg
or
cmp
xchg
addr16
xchg
jmp
inc
imul
fdivrs
pop
mov
adc
aam
dec
xchg
dec
sub
add
or
mov
das
fstp
les
test
fadds
mov
fcoms
int
and
lds
std
jns
scas
sub
and
xchg
loopne
in
mov
es
in
std
cld
sarl
rcll
mov
incl
push
inc
jne
adc
hlt
add
out
in
sahf
ja
and
push
sbb
inc
test
sub
add
dec
pop
inc
xchg
jmp
dec
pop
int3
mov
out
fisubrl
mov
dec
in
fldcw
xor
stos
ja
add
xor
cmp
mov
add
cmp
or
mov
out
aam
scas
shlb
aam
ss
mov
adc
sbb
fwait
cmc
inc
leave
xchg
adc
std
cmpsb
xor
mov
or
lcall
mov
negl
inc
xlat
sarl
adcb
mov
rorb
adc
test
pop
stc
jmp
inc
into
loop
bound
ljmp
out
shrl
mov
adc
inc
xor
or
cmp
dec
test
loope
jmp
pop
push
roll
cmpsb
addr16
dec
mov
mov
ljmp
push
sub
cmp
aam
lret
or
sub
inc
push
sub
push
das
add
lods
adc
fistpll
leave
rol
icebp
js
popf
daa
push
cwtl
rcll
mov
push
sarb
fstp
inc
push
movsl
xchg
fbstp
jns
push
js
jne
outsb
fmulp
addr16
mov
adc
scas
mov
arpl
sbb
lods
mov
mov
repz
mov
repnz
pop
lahf
jbe
iret
cli
clc
and
push
lods
inc
push
inc
mov
adc
sbb
test
xor
aaa
inc
cld
mov
dec
adc
xlat
mov
fmull
cmp
inc
movsl
int
mov
sahf
push
mov
adc
mov
fdivl
push
or
xor
lock
cli
test
sub
bound
leave
adc
lahf
mov
cmpsb
sbb
dec
jg
out
xchg
dec
inc
or
rolb
icebp
rorl
push
jne
inc
lds
sti
dec
cli
mov
mov
in
mov
out
jo
jae
jb
aad
dec
les
test
mov
push
mov
and
out
mov
rorl
lock
push
sarb
jae
and
pop
push
leave
jnp
out
add
aas
idivb
or
dec
psraw
daa
pop
sub
ret
sub
in
mov
loope
mov
dec
out
mov
scas
cmp
int3
in
enter
es
loopne
ljmp
popa
xchg
xlat
ljmp
std
mov
loop
jle
int3
add
cmp
sbb
divb
cmc
mov
mov
cli
dec
xorl
fmuls
insl
out
xchg
push
adc
xchg
orb
push
loop
push
ret
subl
aad
adc
sarb
mov
fwait
xchg
cmpsb
add
cmp
shl
sbb
sbb
bound
mov
sbb
jmp
mov
ja
cwtl
test
pop
mov
inc
adc
lods
std
jmp
cli
mov
jne
outsb
mov
mov
std
xchg
and
cmp
and
lahf
loop
and
pusha
sbb
push
or
lea
mov
sbb
stc
jo
cmovno
dec
lret
aad
sbb
imull
sahf
stc
push
mov
mov
icebp
cs
loopne
xor
dec
dec
std
jge
das
fsubl
lcall
push
test
iret
pop
inc
mov
out
xor
lahf
hlt
mov
add
fnsave
test
xchg
lcall
fistl
jecxz
aam
mov
pusha
pop
cld
and
push
inc
lock
repnz
inc
or
mov
mov
popf
test
sub
adc
femms
in
cmp
mov
xchg
aam
ljmp
aad
ret
pop
stos
pusha
or
imul
call
dec
neg
popa
xorb
adc
add
pop
aad
fs
daa
jge
out
and
icebp
iret
sub
jae
dec
or
or
in
inc
xchg
cltd
push
fs
ret
das
das
jmp
jle
fcomps
shll
gs
mov
pop
es
mov
outsl
shrl
jmp
sbb
jns
repnz
mov
mov
add
pop
shr
sbb
pop
mov
cmp
xchg
in
cmp
das
jge
lret
push
je
xchg
or
add
pop
in
cmp
pop
xchg
mov
test
fdivr
sub
dec
out
into
iret
add
mov
mov
nop
push
and
mov
mov
dec
movsl
inc
out
in
daa
or
xlat
mov
mov
int
cmc
int
pop
filds
sbb
jg
push
stos
dec
jnp
mov
mov
xor
add
arpl
lods
addr16
mov
add
jmp
cmpsl
cmpl
lret
mov
adc
cmp
xor
aam
aaa
loopne
cmp
loopne
hlt
push
jb
les
inc
push
mov
mov
dec
dec
int3
dec
call
add
in
je
imul
or
aad
insb
lods
push
in
mov
push
fcompl
std
mov
push
negb
adc
sub
pushf
mov
sbb
or
cmp
lret
sar
fdivr
mov
xchg
mov
lcall
scas
xlat
icebp
insl
jmp
jl
mov
cmp
mov
mov
xchg
jae
mov
jmp
xchg
sbb
ss
jae
xchg
popa
xchg
sahf
xchg
push
fimuls
imul
mov
movsb
adc
into
das
pop
pushf
xor
sarl
dec
shlb
insl
hlt
shrl
in
mov
dec
idivl
jb
mov
fiadds
inc
mov
jo
cmp
ss
add
push
sar
mov
pushl
frstor
fnsave
repz
lcall
xchg
dec
pop
sbb
push
add
repnz
movsb
lahf
int
sti
or
inc
stos
jo
dec
dec
test
lret
sbb
dec
lcall
ss
and
jb
adc
enter
repz
cld
aam
xchg
in
mov
sti
push
mov
xchg
xchg
cmc
mov
outsl
test
pushf
mov
pushf
mov
xor
pop
mov
inc
xchg
jne
bound
mov
icebp
dec
add
push
mov
pop
jecxz
scas
in
adc
and
push
hlt
push
add
rcll
sub
push
call
test
or
test
sub
out
imul
and
add
push
push
dec
out
test
add
ss
loop
push
push
ret
shr
push
ja
in
jmp
mov
jne
inc
pop
cmp
mov
insb
shrb
in
je
pop
fiadds
fildll
das
lods
sub
dec
rorb
into
adc
arpl
xchg
stc
movsl
inc
pop
jp
mov
arpl
sub
arpl
push
pop
mov
mov
test
in
or
xchg
jb
cmp
lahf
mov
jl
in
loope
jg
or
filds
push
dec
sbb
lods
imul
icebp
mov
stos
popf
mov
loope
rcrb
sub
and
mov
inc
adc
and
lret
aad
mov
ja
lds
jae
mov
int3
test
push
jae
rep
mov
pop
movsl
mov
cs
xchg
les
mov
mov
add
rcl
movsb
mov
in
js
mov
xor
aad
mov
inc
add
ret
lock
es
mov
mov
mov
or
or
pop
dec
test
jl
inc
dec
lret
or
je
mov
outsl
cld
aam
mov
or
cli
shll
sub
dec
mov
loopne
roll
addr16
mov
filds
xchg
xchg
in
jbe
mov
mov
jbe
jb
mov
jbe
scas
push
repz
mov
lret
fdivp
jo
jae
and
int
in
into
adc
pop
scas
int3
adc
cmp
inc
push
push
aad
jge
jl
inc
adc
pop
mov
xchg
inc
lock
sbb
mov
repz
call
cmp
call
in
add
into
xchg
mov
push
hlt
adc
in
jnp
mov
mov
sub
or
mov
dec
dec
fmuls
sub
xchg
nop
add
rcr
ljmp
cmp
testb
inc
js
mov
jne
sub
push
sbb
jb
icebp
sub
rcll
scas
dec
jle
or
fwait
jl
add
aas
int
or
mov
mov
and
data16
mov
mov
cs
dec
mov
in
push
in
adc
adc
aad
inc
inc
add
mov
ja
mov
push
sub
loope
nop
mov
in
adc
iret
xchg
repnz
push
mov
jle
xor
fwait
jo
scas
dec
xchg
cmp
inc
out
push
mov
push
shrb
mov
aad
or
fnstsw
lret
sbb
sbbb
aas
sets
scas
lcallw
mov
mov
jb
in
subb
stos
xchg
cli
repz
xchg
rclb
test
insl
iret
sahf
cmp
insl
repnz
cmp
imul
test
hlt
fbld
cmp
cwtl
cli
xchg
push
sub
rclb
in
scas
lods
das
jno
mov
es
sbb
into
cwtl
adc
cmp
int3
shrl
shr
jle
cmc
arpl
test
mov
add
mov
mov
shrb
imul
pop
push
lahf
stos
mov
cmp
rolb
cmp
fwait
xor
loope
sti
into
jge
test
mov
sub
jmp
fisubs
outsb
imul
mov
add
int
mov
fcmovne
scas
add
xor
cltd
adc
sub
pop
adc
stc
iret
sub
inc
outsb
setb
enter
movl
pop
push
and
sbb
movl
dec
ficoml
add
cmp
iret
les
mov
stc
test
fs
mov
outsb
xchg
adc
sahf
lcall
mov
jl
jecxz
and
divl
pop
add
xchg
and
int
sahf
loopne
or
arpl
je
pop
push
push
adc
cmp
push
sbb
mov
loope
outsb
gs
mov
test
cmpsb
and
cmc
data16
rorb
inc
adc
aad
sbb
add
add
xchg
xor
pop
cmpsl
ficoms
mov
mov
cld
jmp
lret
add
mov
add
sahf
pop
ljmp
jbe
or
adc
jnp
orb
ljmp
ret
pop
jp
xchg
cmc
inc
cmpsl
outsb
push
shll
cs
fdiv
and
mov
mov
mov
sbb
das
push
mov
push
dec
pop
in
incl
into
dec
lahf
cmpsl
xor
mov
or
scas
fnstenv
mov
roll
inc
movsb
ja
ret
add
push
inc
add
push
ret
cmpsl
loopne
ror
adc
lret
mov
aad
dec
std
in
movsl
loopne
leave
negl
in
shlb
in
out
ljmp
movsb
int3
in
call
sbb
jle
mov
inc
push
dec
inc
lahf
xchg
inc
data16
dec
faddl
bound
in
lret
sbb
cld
sbb
cli
or
fldl
ret
mov
in
mov
iret
mov
out
lret
jmp
adc
out
mov
jmp
lods
into
in
and
dec
adc
ds
sub
pusha
mov
xor
loop
mov
mov
mov
cld
cmp
lds
dec
mov
or
mov
scas
adcl
push
sub
pop
call
cltd
mov
icebp
inc
movq
outsb
or
mov
jnp
dec
push
add
mov
ljmp
in
adc
mov
lea
dec
mov
test
dec
jp
mov
mov
call
or
dec
mov
lds
add
in
fcompl
ljmp
mov
fldl
xlat
roll
dec
mov
aad
lret
aad
psrlw
ljmp
in
mov
lods
into
mov
push
lods
int
pushf
shlb
push
lret
rcrl
mov
and
in
jno
mov
mov
out
jb
xor
sub
insl
hlt
out
mov
sub
dec
outsl
mov
lret
cmpl
lahf
dec
adc
adc
push
pop
sti
lahf
push
je
mov
test
xchg
mov
scas
jg
test
mov
out
mov
fdivr
movsl
mov
jmp
paddsb
mov
shll
xchg
dec
and
cmp
aam
mov
outsb
pop
sahf
ffree
test
shll
pop
cmp
mov
stc
adc
daa
setne
std
adc
pop
shr
push
push
mov
cltd
inc
dec
jno
fucompp
sti
inc
les
test
rclb
adc
adc
xchg
fisubl
mov
add
xchg
push
inc
into
push
cmp
shlb
sbb
mov
ljmp
imul
aas
sarl
fcompl
rorb
in
mov
pop
cmp
lret
movsl
dec
inc
or
loope
jmp
sub
mov
gs
add
cmp
adc
xchg
arpl
test
sub
icebp
add
xchg
xor
lods
jl
es
sbb
shlb
xchg
scas
mov
sub
fwait
and
testl
xchg
lds
or
sti
sub
call
cltd
outsb
push
fsubl
cmp
fstl
cld
std
mov
pop
stos
outsl
dec
inc
dec
sub
scas
adc
adc
outsb
xor
xchg
leave
push
cmpsb
pop
cld
cmc
push
aad
cmp
sub
xchg
idivl
daa
repz
movb
mov
mov
jecxz
push
lods
xchg
push
pop
in
lds
sub
and
loop
insl
adc
leave
inc
pop
jae
cli
sbb
icebp
dec
xchg
lret
mov
pop
fildll
scas
icebp
pushf
imul
mov
jg
jnp
xchg
adc
mov
int3
xchg
call
fs
push
fcomip
add
lret
add
mov
mov
repz
mov
adc
ja
rcr
jg
mov
scas
out
pop
jne
and
data16
ffreep
call
sbb
mov
cwtl
jl
cmpsl
xlat
mov
mov
inc
jmp
mov
aaa
into
jo
cmc
and
push
mov
lahf
popa
push
cmpsb
jns
cmpsb
sti
push
jl
push
sbb
lock
mov
push
xchg
fnstenv
dec
in
fnsave
lds
push
push
stos
mov
outsb
ret
or
mov
mov
test
pop
sbb
sub
mov
repz
lret
dec
mov
leave
xor
jmp
fcompl
and
adc
add
push
lret
cmpsl
inc
push
rcll
mov
mov
cld
dec
jne
xor
pop
insl
inc
xor
outsl
xor
add
leave
and
es
xlat
dec
lods
sbb
sarb
or
jae
cli
loope
sub
aas
call
rcll
fcomps
add
mov
and
sbb
jl
push
out
push
frstor
cmp
jmp
imul
cmp
bound
and
xor
cltd
inc
jmp
aaa
xchg
sbb
pop
out
ret
xchg
jmp
jmp
aad
mov
dec
inc
int3
ja
cmp
addl
outsl
dec
loopne
shrb
call
jge
xlat
xor
jno
subb
cmp
lea
popa
lods
and
repz
clc
mov
cld
xchg
cs
sbb
mov
inc
pop
ret
xor
pop
xchg
dec
push
hlt
dec
inc
int3
push
sbb
pop
les
repnz
mov
dec
fisubrl
inc
add
loope
js
iret
rol
in
mov
rcrb
loop
jg
inc
daa
mov
sbb
adc
repnz
mov
push
adc
mov
fisttpll
mov
jae
ds
int
jno
push
clc
test
mov
xchg
lods
add
xchg
popa
mov
sbb
insb
in
loopne
aam
frstor
cmpsl
push
imul
lret
gs
shrb
or
push
lcall
cld
push
lock
outsl
inc
shlb
addr16
in
ljmp
mov
int3
jne
sbb
xchg
int3
daa
inc
call
cmp
enter
btr
stos
lret
leave
stos
add
dec
or
pop
aas
maxps
mov
jp
cmp
xchg
lahf
aaa
mov
jmp
cld
rcrl
mov
push
adc
push
jns
mov
pop
xor
mov
push
pop
jmp
mov
mov
daa
ficoml
push
loopne
cmp
iret
pop
in
dec
add
sbb
mov
addb
mov
push
scas
adc
in
xor
in
cmovne
outsl
dec
mov
or
flds
sub
nop
mov
xchg
lods
fisubl
mov
movsb
sbb
les
push
repz
fsubrp
jmp
push
push
les
mov
sub
cwtl
or
mov
cmp
pop
xor
push
cmp
cltd
xchg
gs
in
inc
cs
loopne
mov
inc
call
nop
dec
jecxz
lcall
sbbl
add
cmpsb
shr
cmp
push
mov
mov
push
js
addr16
add
mov
add
mov
mov
loop
xchg
add
sub
mov
aam
pop
and
leave
xchg
inc
add
icebp
out
xchg
lahf
rcl
test
shlb
mov
sarl
pop
hlt
call
adc
jge
fldln2
mov
cmp
jns
loope
add
mov
ret
cmp
ss
rolb
lret
xor
clc
dec
cmpsb
fs
iret
adc
sbb
rcrb
inc
jecxz
or
ret
add
je
scas
pushf
cmp
mov
out
movsl
sub
lods
popa
pushl
mov
or
daa
or
push
daa
sbb
fldenv
addb
pop
enter
sbb
cs
leave
fbld
mov
xor
pop
xor
int
addr16
stc
ror
cmpsb
sub
shlb
lds
mov
aam
lret
mov
push
and
stos
hlt
pushf
test
mov
aad
mov
mov
in
icebp
sahf
ret
or
mov
push
popa
mov
outsl
jl
rclb
mov
dec
cmc
in
sbb
nop
add
repnz
leave
or
jno
hlt
mov
mov
pop
inc
mov
xchg
mov
mov
xor
mov
mov
incl
scas
movsb
into
xchg
cmpsl
iret
jbe
pop
add
sahf
popa
cmc
or
mov
outsb
aaa
pop
out
lret
cmp
jbe
jge
stos
imul
fbstp
out
mov
cmp
std
outsb
xlat
repz
lds
js
jns
jbe
mov
xor
and
add
mov
sub
cmc
push
push
notb
pop
pushf
movsl
inc
xchg
dec
pop
jg
ljmp
fld
and
add
cwtl
call
into
push
cld
inc
dec
fsubl
insb
xchg
and
stos
xchg
and
adc
movsl
into
fnsave
filds
mov
mov
outsb
cmpsl
in
movsl
adc
cmp
pop
ret
or
popf
clc
mov
pop
call
pop
loopne
mov
shll
cli
pop
popa
adc
sbb
cmpsl
xchg
scas
or
movb
sti
dec
insl
mov
pop
enter
xlat
bound
in
into
mov
xor
jmp
or
into
inc
js
jb
movsl
pushf
fwait
sbb
mov
fsubrs
cmp
xchg
hlt
mov
fimuls
sbb
in
imull
or
and
add
push
xchg
imul
push
adc
mov
or
add
stc
rcrb
mov
jmp
sarb
cmpsb
jecxz
lret
pop
sahf
out
imul
aad
dec
adc
adc
in
imul
rolb
pop
inc
sbb
shlb
pusha
mov
ds
cmpsl
jbe
jno
gs
loope
psubusw
adc
or
push
mov
pusha
add
test
in
pop
add
pushf
leave
xchg
mov
lret
stc
repz
add
jbe,pt
push
mov
sbb
lds
fwait
daa
in
sbb
inc
fstpt
aaa
mov
inc
mov
insb
sahf
push
mov
xorb
repnz
adc
push
movsl
cld
sub
aad
cmpsl
xor
mov
sbb
or
mov
xor
cltd
sub
divb
mov
icebp
hlt
stos
and
popw
rorl
add
and
inc
lret
sarl
cli
stos
std
add
pop
lret
mov
call
filds
lea
pop
shl
test
cltd
insb
imul
add
in
insb
mov
gs
sti
movsb
ret
cmc
jns
ds
in
sub
repz
cmp
fidivs
sbb
lea
lods
mov
mov
mov
pop
or
add
cmp
call
dec
dec
es
push
notl
jp
fmulp
aam
imul
mov
inc
mov
repz
inc
lock
push
xor
xor
cltd
mov
call
adc
xabort
adc
lods
mov
mov
sbb
push
mov
adc
fsub
or
mov
fwait
sbb
jbe
dec
jb
test
data16
adc
bound
es
in
mov
mov
mov
pushf
add
std
mov
gs
ret
jg
jle
test
ljmp
fsub
call
mov
adc
lods
or
rcrl
jb
lods
pushf
mov
test
adcl
xchg
sbb
sub
pusha
jmp
sub
rolb
adc
and
xlat
add
jno
mov
push
xchg
inc
xor
andps
scas
push
sbb
inc
jmp
rolb
or
add
xor
scas
adc
lahf
repnz
outsl
sbb
xchg
mov
dec
std
ljmp
mov
sbb
insb
sar
lret
push
mov
lods
ljmp
or
push
jmp
jmp
mov
jle
dec
clc
pusha
adc
and
ret
ret
aas
adc
push
out
das
pop
xor
iret
incb
aam
mov
data16
mov
push
push
rorl
roll
in
mov
xor
and
xchg
jmp
cmp
xlat
mov
sbb
or
mov
mov
xlat
add
jae
repz
clc
mov
imul
adc
pop
arpl
dec
push
aam
cs
mov
stc
push
mov
out
cmp
or
push
xor
rcrl
adc
outsb
scas
cmp
mov
test
xchg
aam
dec
out
push
pop
insl
jb
cmp
insl
dec
sub
pop
leave
fcoms
mov
mov
fidivl
adc
ret
movsl
popf
enter
gs
push
fxch
es
and
mov
cmp
and
mov
test
jl
mov
mov
mov
cmpsb
and
or
push
dec
mov
rcrb
push
mov
lret
les
int
inc
cmp
xchg
sbb
mov
ret
popa
and
gs
inc
xlat
aad
out
xchg
mov
cld
imull
push
cwtl
pop
jp
in
imulb
lods
mov
push
cltd
xor
pushl
lea
out
jl,pt
shrl
push
push
mov
and
xor
xchg
pop
stos
mov
cmpsb
pop
pushf
or
mov
mov
decb
ss
xchg
femms
inc
jno
lods
jne
fsts
xchg
testb
aaa
jno
push
outsb
in
loopne
pop
stos
popa
xchg
and
xor
add
aam
mov
and
cmp
sbb
mov
lods
mov
cwtl
mov
or
cmp
fdiv
xchg
icebp
movsl
dec
cmc
aam
cltd
sub
lods
inc
into
pop
mov
jne
leave
shrl
adc
add
test
push
and
cli
mov
xchg
or
cli
movsl
sbb
or
xchg
xchg
dec
cmpsb
and
sarl
test
or
cmpsb
dec
movsb
inc
cmc
adc
out
jmp
in
std
imul
inc
push
test
aam
imul
in
data16
aam
xchg
adc
gs
jbe
insb
mov
mov
jge
or
lahf
lds
sbb
ror
mov
movsl
push
bound
rcrb
push
jmp
test
mov
cmpsb
cmc
lret
sub
ss
cmp
pop
fildll
mov
lea
fnstsw
test
lods
adc
into
js,pt
ficoms
iret
adc
push
lahf
lea
xorl
arpl
cli
loope
or
pop
cmp
xchg
rorb
bndldx
rorb
inc
dec
xchg
add
xor
jmp
das
outsl
fmuls
jge
and
les
xchg
lret
call
out
sarb
mov
xorl
cmp
jmp
arpl
or
pop
lcall
mov
out
ret
imul
adc
test
inc
popf
fnstenv
mov
mov
adc
in
mov
movsb
movb
inc
jge
mov
adc
pop
mov
enter
testb
dec
lods
xchg
mov
fbstp
fcmovbe
jns
scas
int
and
mov
and
jl
fidivrl
jmp
inc
adc
or
or
out
adc
ret
xor
mov
lock
fldt
imul
add
add
test
fsubr
inc
rol
push
mov
loop
in
fidivrl
test
ljmp
xor
push
or
in
in
out
lods
xorl
adc
dec
xchg
stos
or
pop
in
loop
sahf
push
pushf
cmp
xchg
xor
in
mov
mov
sub
xor
hlt
mov
jl
les
add
rcrb
in
sub
hlt
cmpsl
mov
dec
xchg
add
loop
lods
add
mov
es
fs
jle
sbb
push
push
cltd
mov
mov
pop
mov
aas
jmp
adcb
xchg
add
mov
mov
jl
adc
sub
divl
std
or
push
mov
mov
xorb
aas
in
pop
test
adc
and
mov
aam
push
xor
push
push
sub
pusha
bound
mov
mov
sub
fidivs
jbe
push
out
int
in
mov
les
stc
sbb
cli
and
mov
mov
inc
cmp
xchg
std
addl
xor
jl
fcoml
pop
jb
outsl
jg
mov
push
add
repnz
add
jl
push
or
mov
adc
mov
push
xchg
dec
adc
xor
nop
imull
xchg
fldenv
lret
push
ret
aam
lods
push
test
mov
jmp
call
xchg
in
inc
jl
mov
ret
dec
stc
shrl
mov
inc
das
jl
mov
jb
subl
lods
jae
xor
jno
push
outsl
adc
rcll
repnz
jmp
jmp
dec
ret
aaa
insl
xchg
idivl
insl
or
call
add
mov
dec
stos
jno
stos
fcmove
push
call
push
mov
int
sbb
imul
mov
mov
popf
iret
mov
mov
iret
int
subb
xor
in
lcall
mov
xor
push
bnd
cmpsb
xchg
les
daa
mov
push
xorl
repz
subl
enter
push
lea
pusha
ss
lds
xchg
ficompl
pop
mov
sub
loope
xchg
inc
cmpb
pop
hlt
pop
loop
ficoms
or
movsl
sarb
andl
aaa
adc
mov
dec
cmp
or
test
icebp
mov
stc
lds
mov
es
jmp
jno
dec
andl
stos
jmp
cmp
push
pushl
xchg
dec
dec
in
or
popf
mov
mov
xor
mov
jp
xchg
das
add
or
orb
sbb
lcall
imul
mov
test
mov
jmp
xchg
mov
pop
cmc
or
and
mov
call
pop
pusha
jl
cmp
fs
subl
pop
add
cli
movsb
hlt
jecxz
imul
xchg
fs
dec
fucomp
out
add
test
iret
fimuls
sub
dec
shl
adc
mov
xlat
das
imul
and
ljmp
stc
jge
and
cpuid
push
loop
sbb
dec
mov
sub
out
lea
cli
sbb
jl
and
mov
arpl
jle
mov
mov
inc
stc
mov
std
or
insl
lret
jmp
test
arpl
adc
jb
xchg
xor
mov
daa
in
add
pop
cmp
hlt
mov
mov
adc
mov
out
mov
ret
mov
push
mov
push
popa
mov
mov
push
enter
leave
int
dec
ret
movsb
sub
jnp
in
mov
jmp
push
and
cld
fprem1
xchg
mov
shrb
mov
cld
xchg
cmpsl
lcall
sahf
fadds
add
loop
cs
dec
add
or
pop
mov
clc
and
fistps
lds
daa
mov
and
orb
push
mov
mov
mov
int
and
jmp
rorl
imul
jnp
add
sarb
pop
xchg
sub
mov
std
cli
pop
sub
scas
sar
inc
sbb
test
cmpsb
inc
imul
das
push
popf
js
mov
jae
mov
imul
mov
jp
push
pop
xchg
mov
lock
push
push
cli
xorl
iret
inc
pop
in
xchg
data16
dec
sbb
xor
inc
sbb
mov
je
js
enter
cmpb
mov
pop
fcomp
iret
ret
int
xchg
sub
sbb
lea
fucomip
shr
xchg
mov
clc
push
lock
fnstcw
js
movsb
dec
and
mov
cli
jbe
inc
shll
cmpsb
xchg
aaa
sub
in
adc
and
imul
sub
gs
rorl
mov
sbb
adc
add
cs
sub
imul
test
divl
in
outsb
leave
test
jecxz
adc
outsl
int
cmp
iret
gs
notl
cmp
std
mov
imul
addr16
into
stos
xchg
in
leave
pop
movsb
mov
clc
mov
pusha
pop
push
mov
leave
jne
repz
arpl
scas
xlat
cwtl
mov
pop
jae
rcl
imulb
roll
test
lret
aad
adc
lea
popf
and
add
ror
lcall
lods
loop
jnp
jnp
das
xchg
rcrb
mov
mov
lods
xor
dec
push
lret
xor
xor
push
outsl
sarl
int3
rclb
or
push
sub
icebp
enter
dec
clc
ljmp
test
out
inc
lret
mov
fdivrs
sbb
enter
lea
push
or
mov
loop
enter
xor
ds
je
std
insl
or
sahf
push
fstp
ret
xchg
sub
jno
scas
mov
pop
mov
cmp
cs
lods
lret
cmpsb
negb
mov
sbb
xchg
cld
add
sarb
fisttpll
push
cmc
pop
stos
push
test
aas
rol
lods
fstpl
adc
add
dec
jl
call
hlt
add
sub
lods
dec
xlat
or
and
ficoms
ds
jl
pop
sbb
mov
jge
popf
jmp
js
mov
add
sub
in
mov
aad
mov
repz
xchg
mov
inc
or
mov
mov
pusha
xor
mov
lcall
int
repz
ss
push
mov
mov
scas
mov
hlt
lret
fisttpl
insl
cmp
ret
je
sub
inc
icebp
jle
ss
add
pushl
lcall
popf
jle
test
dec
add
roll
sub
int
test
pop
lods
clc
aad
dec
lods
loope
dec
fmul
daa
pop
shlb
mov
jge
insl
nop
inc
mov
in
int3
cmc
frstor
mov
push
push
adc
pop
leave
out
push
cmpsb
pop
leave
nop
sub
xlat
pop
sahf
out
aad
xor
daa
or
sbb
fidivrs
xchg
adc
lret
cmp
push
xor
adc
in
cwtl
jae
sub
pushl
push
add
insl
rcll
pop
jae
insb
or
mov
lock
add
push
mov
nop
aaa
shl
or
adc
or
mov
gs
add
mov
lahf
mov
aaa
popf
iret
push
or
push
and
inc
pop
cmp
fistpl
adc
jae
xor
lret
int3
pop
sti
adc
jbe
jl
xchg
ss
add
out
or
push
jmp
movsl
push
enter
nop
movsl
not
jmp
pop
push
xchg
cmc
mov
sar
mov
or
fwait
shrl
mov
mov
fsubl
dec
cmp
cmp
dec
fisubrs
mov
fmull
fdiv
movsl
pop
push
sar
sub
fadd
xchg
mov
mov
setp
jge
adc
jns
add
xchg
rcrl
add
xor
pop
jo
mov
enter
rclb
mov
stc
xchg
int
cmc
cmp
xor
stos
mov
adc
mov
sub
mov
stc
jo
cmp
sub
rcrb
outsl
mov
or
pop
arpl
sbb
fldl
iret
clc
test
xchg
and
pusha
pop
out
mov
jb
in
test
jle
sub
in
lret
iret
lahf
jns
adc
xchg
in
lds
ret
xchg
nop
cmp
jne
nop
test
sarb
sbb
mov
adc
repnz
mov
cmp
ds
pop
jnp
add
fbld
into
insl
mov
or
mov
shrl
nop
cmc
aad
xchg
test
stos
mov
jnp
mov
shll
mov
in
lods
jmp
pop
mov
sbb
dec
loop
orb
mov
jle
repz
loope
or
fdivl
scas
add
sti
test
stc
mov
ds
cli
mov
adc
lahf
adc
ret
or
das
fcomp
cwtl
roll
and
dec
bound
fdivl
je
dec
mov
dec
pop
stos
jge
cli
mov
pop
sbb
popa
ds
sbb
add
lret
adc
sub
in
loope
xchg
es
jecxz
xchg
mov
xchg
sbb
mov
insb
mov
mov
sbb
aad
cmpb
test
out
fsub
icebp
mov
cmp
mov
pusha
leave
pop
loope
dec
add
out
cmp
lcall
hlt
lcall
mov
jae
adc
popa
and
push
arpl
jb
and
jo
pop
inc
jno
sub
pop
inc
pop
or
in
or
into
cs
adc
aam
aad
out
pop
dec
inc
cmc
stos
std
sub
pop
jge
fisttps
fimuls
mov
fs
in
lret
fwait
lods
dec
into
cmp
loope
or
push
into
orl
xchg
imul
into
cmp
iret
sub
jge
gs
push
sub
push
fwait
ja
das
add
xchg
subb
cwtl
push
mov
mov
cmp
mov
std
pop
in
cmc
movsl
bswap
dec
std
in
push
repz
leave
dec
nop
cmp
mov
adc
sahf
lds
fcoml
test
xlat
nop
or
mov
add
jge
ficomps
out
push
sahf
fcmove
dec
push
dec
jbe
sbbb
ror
push
popa
cmp
sub
aad
testb
dec
pushf
sub
stc
or
cs
add
mov
insl
cmpb
aas
add
add
cmp
or
jge
int
std
pop
push
cmpsl
push
lret
cmpsl
jmp
call
cmc
fs
stc
cmpsb
mov
and
fbld
adc
into
dec
cmpsb
fldl
mov
fwait
lods
add
sbb
aam
xchg
stos
ret
sbb
mov
cltd
loope
sbb
xchg
jae
adc
jns
or
cmpb
sbb
mov
fidivrl
hlt
pushf
xchg
std
fwait
pop
cmp
jge
movsb
movaps
xor
and
mov
xchg
int3
and
add
repnz
or
mov
jge
ror
aas
out
hlt
test
les
pause
loopne
hlt
add
sti
in
pop
cmp
decb
and
dec
cmpsl
test
das
cmp
pusha
test
jl
mov
out
pop
and
xchg
hlt
sub
jns
xchg
and
cmp
xchg
mov
xchg
fs
mov
repnz
jmp
mov
cmp
inc
out
jle
ss
mov
or
xchg
js
push
cmc
jmp
out
jecxz
add
pushf
call
fcom
dec
or
mov
test
call
mov
inc
and
mov
lahf
fdivs
hlt
in
xchg
lds
cwtl
cltd
scas
inc
or
hlt
mov
loope
or
pop
lds
mov
int3
iret
jnp
aad
test
sti
data16
sti
daa
mov
push
mov
cli
mov
cmp
ja
xchg
popf
pop
hlt
enter
lds
jae
jge
and
cmp
dec
sahf
stos
ret
adc
rcrl
sbb
repz
fsubrl
dec
lods
lea
adc
aad
repnz
mov
adc
mov
ret
dec
mov
aad
arpl
out
sahf
outsl
insl
mov
push
push
cmpsb
mov
rolb
ficompl
lret
hlt
xchg
insl
add
push
mov
mov
leave
popf
jnp
sub
mov
push
stos
mov
icebp
adc
es
int
and
icebp
xchg
pop
mov
xor
mov
aad
test
into
sub
lret
mov
scas
daa
push
jecxz
push
adc
fildll
fstl
ror
rol
lcall
inc
jle
test
cmp
and
ficoms
sti
adc
jecxz
xchg
cmpsl
mov
push
adcb
loop
shll
mov
mov
pusha
dec
xchg
shrb
je
int
mov
cmp
mov
sub
imul
sbb
call
cs
les
sbb
mov
stos
test
adc
sahf
ja
jnp
xor
insb
das
fwait
mov
enter
xchg
rorb
add
ja
mov
stos
test
jo
mov
dec
jmp
cmpsb
jp
lret
jecxz
lret
fsubrs
fsubrp
push
mov
enter
xor
xor
cltd
mov
je
mov
xchg
into
cld
push
push
add
cmp
sub
sub
or
jmp
mov
aam
adc
sahf
jmp
bswap
insb
fmulp
jo
imul
lea
out
jge
arpl
hlt
mov
dec
jbe
xor
or
or
rcrb
iret
cwtl
add
lea
lret
rcrb
loop
and
adc
nop
or
mov
inc
aam
jo
mov
leave
loopne
daa
frstor
cmp
jle
or
lret
clc
or
xchg
cs
add
cmp
data16
enter
aaa
xchg
or
xor
and
ret
mov
mov
mov
jl
xchg
out
and
push
mov
test
jecxz
sbb
dec
jle
mov
dec
call
jecxz
hlt
jmp
dec
push
inc
shl
or
add
divl
cmp
enter
not
lcall
xchg
cli
popa
in
dec
in
stc
lahf
scas
inc
inc
iret
ret
mov
out
ret
fsts
mov
cmpsb
ljmp
gs
out
jg
sub
pop
adcb
xor
jl
jns
dec
jl
jmp
jecxz
xlat
lahf
mov
stc
add
push
loop
mov
mov
jle,pn
dec
jge
lahf
push
or
js
aaa
pushf
mov
aaa
cmp
cmc
sbb
movsl
stos
cli
scas
xchg
decb
popf
rclb
out
mov
jg
mov
mov
enter
add
imul
mov
add
int3
fstp
in
pop
lods
jmp
popa
sub
mov
test
pop
cmp
fisttps
sti
cmpsl
or
cmp
jno
dec
iret
adc
outsl
sti
sub
xchg
aam
sbb
jne
mov
jmp
mov
cmp
xchg
lcall
testb
lcall
rcr
mov
jp
dec
and
into
movsl
ret
jnp
push
ljmp
in
xchg
xchg
pop
dec
or
fisubrs
xchg
xor
or
and
add
pop
test
mov
jno
icebp
push
xor
test
stos
ja,pn
cltd
nop
and
repnz
in
sti
fildl
jnp
in
sbb
mov
and
nop
cmc
add
add
cmp
movsl
aad
int3
cmp
ret
pushf
sub
pop
mov
int
into
mov
test
mov
xor
bound
icebp
jbe
cmp
fcomps
jge
movsl
fdivs
adc
bound
mov
fxam
jmp
lock
aad
aad
mov
inc
xchg
sub
mov
mov
test
lock
and
movsl
outsl
iret
pop
xlat
sub
pop
dec
outsb
iret
das
notb
scas
mov
in
stc
cld
push
pop
div
push
dec
pop
inc
movsb
sar
shlb
out
adc
outsb
mov
inc
rolb
or
cli
dec
scas
sbbb
mov
push
mov
call
dec
mov
push
push
push
push
icebp
lret
rorl
iret
mov
rcrl
jl
jns
add
popa
and
push
mov
fiadds
sti
subb
sub
ljmp
psubsw
aad
mov
jmp
xor
into
xchg
add
iret
xchg
adc
or
xor
mov
mov
shl
in
test
notb
xchg
insb
jecxz
mov
dec
loop
imul
int
jecxz
jmp
mov
loope
outsb
int3
xchg
push
fistpl
jb
fs
add
aas
shll
flds
jb
adc
sbb
xchg
test
leave
and
mov
ds
insl
xor
push
cld
es
jl
stos
xor
imul
push
xor
in
cmp
test
in
in
inc
sub
icebp
xchg
lods
fisubl
lods
ret
out
sub
push
mov
out
data16
mov
pop
lret
faddl
test
fimuls
leave
xchg
pop
cmpsb
gs
push
mov
scas
in
in
aam
mov
fisttpll
call
data16
int
or
add
out
imul
faddl
les
or
dec
lcall
mov
lds
outsb
outsb
sbb
or
push
jne
call
push
or
push
pop
cld
bound
mov
inc
sub
arpl
adc
pop
lea
mov
xchg
xchg
jmp
lret
aad
mov
jl
les
shll
mov
mov
fidivs
daa
mov
je
push
jg
jmp
lods
sub
cmp
jle
cmpsl
adc
in
popa
out
bound
incl
fadds
enter
mov
loop
push
sbb
pop
cmp
insb
sub
or
sbb
inc
fucomi
mov
in
mov
add
insb
scas
xchg
aam
rclb
dec
out
out
repnz
mov
xchg
je
aad
icebp
adc
aam
sti
xor
add
jmp
sbb
in
add
mov
jno
mov
xlat
mov
out
shl
mov
addl
pop
roll
ret
add
es
and
mov
imull
lret
or
sub
shll
ljmp
pop
negb
inc
cwtl
mov
dec
cmp
inc
mov
dec
cmp
fimuls
arpl
int
add
jnp
jp
jo
aad
mov
ror
iret
mov
inc
pop
or
mov
mov
or
push
sahf
ret
inc
inc
aam
les
pop
pop
adc
pop
xor
sbb
xor
neg
pop
loopne
xor
adc
jb
xor
sahf
add
std
in
cmp
test
stc
stos
mov
clc
add
mov
ss
jge
dec
xor
or
mov
shll
mov
int
enter
or
pop
mov
add
ja
xchg
mov
mov
movsl
and
jle
xchg
vpaddusb
rolb
xor
push
dec
push
mov
call
or
mov
xchg
cmp
fmuls
orl
or
mov
or
mov
mov
push
pop
xchg
or
loop
fsubrl
xor
adc
mov
out
dec
mov
cmp
lahf
mov
hlt
mov
in
in
in
add
test
fxtract
testb
jae
mov
imul
call
mov
and
cmpsb
scas
adc
push
fsubp
or
outsl
jb
std
cmc
jp
lea
and
aaa
push
test
hlt
imul
lret
test
add
imul
cmp
pop
out
add
inc
mov
aaa
aas
and
insl
loop
fs
enter
insb
orl
call
adc
jg
loop
sub
aad
insl
and
sahf
popf
xor
push
out
sbb
mov
push
push
mov
mov
mov
test
mov
push
lret
addr16
not
or
jne
sti
jmp
or
into
mov
in
aad
push
hlt
mov
in
aam
push
bound
imul
das
xor
out
fucom
sbb
jp
out
and
call
in
dec
das
movsb
jae
mov
or
iret
xor
aaa
pop
aam
add
fdiv
inc
mov
movsl
inc
lock
in
test
adc
call
mov
dec
dec
xchg
mov
in
jne
in
push
xchg
lret
inc
jns
cld
or
push
je,pt
je
cwtl
fsts
loop
call
int3
test
adc
ss
gs
add
xchg
add
jnp
testl
in
mov
in
dec
cmp
mov
xor
movl
out
aam
rclb
mov
ss
mov
and
jp
mov
shll
pop
ds
into
mov
or
sbb
adc
pop
mov
jg
pop
jno
mov
mov
shlb
add
mov
loop
int3
inc
sbb
push
push
mov
dec
push
push
mov
sbb
mov
inc
enter
mov
mov
stc
or
push
mov
pop
jnp
mov
iret
sub
jnp
arpl
push
faddp
mov
push
scas
ds
js
into
mov
lcall
mov
popf
fnstsw
and
shlb
stc
cli
adc
repnz
movlps
jge
loope
cmp
lds
roll
pop
mov
jge
enter
push
mov
jo
loop
adc
xchg
jno
lea
adc
mov
cld
test
add
pop
stos
ficomps
jp
sub
ret
push
out
jmp
int
jp
in
lods
pusha
pusha
jmp
mov
or
pushf
mov
adc
mov
sbb
jp
jle
stc
sbb
test
negl
out
popa
data16
cltd
add
push
js
cli
mov
and
lcall
mov
sbb
dec
mov
pop
daa
popf
pushf
sub
and
sub
stos
int3
jmp
pop
dec
sarl
add
out
sub
ljmp
loope
ud0
or
je
sub
add
mov
adc
fnsave
xlat
cli
scas
in
shr
call
aaa
pop
aam
gs
loopne
cmp
out
push
mov
mov
negl
xchg
jmp
and
into
cmp
int
mov
sar
xchg
out
adc
loop
lds
xchg
push
fdivr
arpl
jno
fimuls
ret
lret
xchg
fsubrl
cld
add
pop
cmpl
xchg
push
add
jg
adc
adc
or
mov
sub
and
ljmp
sub
cmc
adc
mov
sbb
xchg
cwtl
in
push
cmc
mov
fwait
aad
ret
lea
out
std
lds
jnp
inc
inc
cli
stos
or
test
pop
lret
mov
mov
shrl
bound
incb
lea
out
jecxz
loopne
cld
call
dec
lcall
cwtl
ljmp
mov
outsl
in
stos
jp
add
pop
outsl
leave
test
mov
pop
sub
movsl
stos
fs
int3
xchg
out
fbstp
mov
mulb
sbb
sbb
sbbb
mov
enter
dec
mov
jbe
or
mov
mov
add
idiv
jmp
repz
sbb
push
not
stos
dec
dec
loopne
mov
negl
and
aad
sbb
adc
xchg
shlb
mov
push
cli
mov
dec
mov
int
in
sbb
dec
cld
push
add
fs
xchg
sar
lret
mov
repnz
mov
loope
mov
xchg
mull
in
ljmp
dec
add
jmp
fstpt
ds
cmpsb
mov
fwait
mov
ljmp
int
or
stc
loope
iret
mov
push
ljmp
repnz
mov
rcr
mov
jmp
jnp
or
adc
loope
mov
fildl
mov
adc
mov
add
faddl
gs
and
adc
jl
in
inc
add
jl
add
mov
add
rorl
bound
dec
movsb
push
xchg
and
daa
test
mov
mov
xchg
dec
out
lods
cmp
subl
std
jmp
push
stos
pushf
dec
loop
pop
fsubrs
inc
scas
cmpsl
mov
ret
in
fisubrl
jno
push
call
or
push
push
inc
outsb
sub
hlt
sbb
ficomps
or
xchg
stos
out
and
xchg
push
fsubrs
insb
mov
shl
repz
jle
call
mov
stos
cmpl
xchg
xor
or
or
add
scas
adc
repnz
mov
mov
jmp
insb
stc
movsb
cltd
repz
cmpsl
sbb
addl
mov
pop
xchg
fisttpl
iret
out
jnp
push
shl
xor
fisttpl
pusha
xor
pop
arpl
lods
push
dec
dec
inc
sarb
push
lret
mov
add
and
fisubrs
push
jp
jmp
mov
mov
xlat
aas
rorb
xchg
or
mov
sub
or
daa
jle
inc
jge
pop
popf
push
aam
mov
jl
adc
pushf
enter
mov
popa
jp
cwtl
stos
insb
cmpsl
mov
xor
push
movsl
popa
clc
popf
and
jge
mov
push
mov
adc
adc
pop
test
sub
adc
push
adc
movb
fwait
push
gs
jl
mov
fdivrl
pusha
movsl
jnp
fwait
and
dec
filds
jl
outsb
cmc
adc
mov
mov
inc
and
ljmp
sbb
outsl
and
sti
mov
mov
in
mov
inc
sub
test
pop
imul
mul
adc
addr16
popf
in
sahf
inc
addb
rep
insl
loope
and
sbb
test
cmpl
ffree
in
jl
loopne
jne
inc
or
fists
aas
adc
pop
push
js
clc
std
pop
aam
inc
shll
scas
sub
adc
fdivr
das
mov
mov
lods
lahf
mov
xor
or
fwait
loope
leave
jmp
fidivs
mov
xchg
clc
mov
test
lds
xchg
xchg
lcall
cmc
sbbl
sbb
inc
xchg
insl
dec
ss
out
popf
test
inc
sub
dec
subl
fmul
mov
xor
mov
cmp
mov
push
xchg
or
fcomip
icebp
or
mov
mov
xchg
adc
sbb
inc
in
imul
jl
jnp
mov
in
data16
sti
out
lds
fdivl
ret
imul
mov
pop
les
xchg
xchg
es
fcoml
movsb
test
fldt
mov
mov
ss
les
ret
ja
lahf
in
cmp
int3
enter
jle
pop
add
movl
jb
into
add
inc
jg
ret
or
or
mov
adc
xchg
cltd
push
adc
repnz
psubw
enter
out
lcall
jo
mov
or
outsb
mov
mov
int
clc
dec
or
lahf
or
rcr
sub
xchg
insb
sub
push
dec
push
sbb
mov
dec
pop
addr16
push
jle
mov
fadd
seto
mov
gs
pop
mov
nop
test
ja
test
rorb
and
inc
mov
inc
mov
rorl
xchg
or
inc
jecxz
adc
pop
mov
iret
mov
pop
mov
aad
and
inc
rol
sbb
or
repz
mov
push
and
push
inc
and
add
inc
repnz
lods
xchg
loopne
mov
xchg
daa
jne
psubusb
fdivl
mov
sahf
push
in
in
mov
adc
mov
notl
iret
movsb
push
xchg
pop
cld
ret
std
pop
repnz
push
incb
out
outsb
js
pop
addl
xchg
mov
mov
jmp
dec
imul
outsb
mov
sub
push
fmul
cld
cmp
shrl
rcll
hlt
jl
xor
sti
sbb
lret
cli
stc
dec
inc
or
fadds
mov
pop
cmp
filds
jnp
mov
call
xchg
adc
sbb
aam
ljmp
inc
dec
jl
loop
nop
loop
inc
sub
xchg
data16
movsl
pop
jle
inc
enter
fwait
and
out
and
sahf
adc
sti
inc
push
inc
ja
add
ret
loopne
sahf
and
imul
and
ret
idivb
add
adc
iret
out
push
std
jmp
add
mov
lcall
pushf
push
data16
pop
push
loopne
xlat
jmp
iret
sbb
ds
or
xchg
adc
cli
jle
jl
outsb
or
pushf
or
sbbb
scas
stc
insb
loop
movsl
xchg
imul
mov
loope
ret
sti
gs
out
and
push
and
pop
scas
stos
int3
sbb
loope
or
xorl
jecxz
adc
scas
aam
cs
jnp
pavgw
push
aas
push
outsl
imul
mov
iret
inc
push
mov
aad
lret
jns
fdivl
and
dec
push
mov
mov
stc
pop
cwtl
fiaddl
in
rcl
sbbb
inc
pop
push
pop
xor
in
in
add
jecxz
sbb
in
in
lods
mov
jmp
hlt
mov
cld
es
bound
or
or
repz
roll
arpl
sbb
add
pop
ror
addr16
mov
and
push
test
cwtl
mov
xchg
repz
xchg
bound
cs
fildll
jle
clc
shl
push
icebp
int3
mov
fstpl
and
or
enter
insb
dec
in
adc
jae
add
in
mov
pop
push
push
fs
loopne
xor
das
add
arpl
out
inc
fucom
add
add
cmp
sbb
or
pop
sub
jmp
pop
xor
cvtps2pd
call
or
mov
inc
rcrb
dec
push
or
jno
cmp
mov
ja
mov
mov
int3
pop
jne
jmp
scas
in
outsl
jmp
ljmp
imul
aam
icebp
cmp
stos
das
cld
fdivrs
dec
clc
rcrb
popa
fimull
mov
dec
jp
cmp
push
cmovo
or
ficoms
loop
repnz
jb
or
das
sub
std
divb
ss
mov
jo
outsb
hlt
mov
insb
and
scas
or
jmp
jne
mov
fistpll
lods
xor
pop
movsb
int3
push
dec
std
push
sti
add
fcmovbe
adc
ficompl
fistpl
in
xlat
pop
pusha
and
pop
add
aad
mov
mov
xchg
sub
push
popf
cld
out
mov
lret
outsl
int
push
rcl
mov
pop
jecxz
out
das
lea
pop
ret
mov
outsl
or
cs
addr16
or
nop
lea
aam
outsl
jb
lea
jns
mov
xor
sub
mov
and
fdivl
mov
mov
test
inc
push
imulb
arpl
jae
mov
lret
sub
movsl
mov
lahf
dec
add
lret
mov
pop
push
mov
pop
mov
mov
call
rorb
shl
pop
stos
imul
mov
fsubs
mov
iret
iret
sahf
fstpt
mov
out
dec
test
sti
fsubrs
jns
imul
xor
sbb
pop
test
test
pop
movsb
pop
and
sti
cmp
clc
jmp
jmp
sarl
aam
sub
movsb
cmpsl
inc
sbb
ret
in
pop
enter
fsubr
mov
cli
int3
lods
sbb
fidivl
mov
imul
int3
test
out
cmp
dec
out
jno
lahf
into
mov
mov
scas
jno
gs
sar
adc
ljmp
mov
lds
fcmovnb
fbstp
cmpsb
or
push
add
lea
sbb
popa
out
mov
push
outsb
rcr
mov
and
sub
lea
mov
adcl
fstpl
mull
faddp
dec
jbe
xchg
push
aad
hlt
or
addr16
insb
xor
xchg
daa
aad
adc
xor
in
outsl
lea
cld
xor
cmpsl
mov
lahf
dec
movsb
sub
scas
mov
aad
ret
add
inc
mov
jecxz
pop
xchg
mov
mov
dec
mov
push
leave
test
stc
loope
addr16
mov
push
xchg
movsb
sub
add
mov
insl
xchg
cmc
mov
es
popf
ret
popa
popf
ret
xlat
and
mov
pop
xlat
addr16
sub
rcrl
jle
cwtl
out
jns
popf
movsb
movd
int
nop
jp
out
add
icebp
jae
fs
inc
add
add
filds
mov
or
mov
dec
movsb
fs
lock
xchg
adcl
out
fstp
scas
pusha
call
out
mov
pop
mov
mov
repz
in
lret
jb
test
lea
inc
and
jne
fstl
sub
add
lret
lea
neg
push
inc
test
sub
adc
jmp
jg
aam
aaa
sub
mov
jo
add
jmp
int
aam
aas
jno
dec
fdivrs
or
push
aaa
adc
sub
stos
push
mov
adc
push
xor
loope
je
lret
sub
rcrl
iret
mov
in
mov
jge
insb
rcrb
push
int3
and
test
sbb
sbb
jne
subb
add
ljmp
imul
and
insl
mov
push
aam
stc
xchg
or
push
leave
lcall
push
pop
fldcw
mov
xchg
rclb
pop
add
loop
sbbb
jp
mov
movsl
cmp
sub
jns
mov
sahf
mov
mov
or
dec
fwait
mov
mov
ds
scas
cmp
pop
sbb
insl
lret
mov
mov
adcb
inc
sub
jbe
cmp
jecxz
mov
sub
aam
sub
cmp
and
and
shrb
inc
mov
sub
leave
inc
fists
testl
out
xor
repz
dec
in
int
push
push
and
xchg
call
test
leave
push
mov
rclb
stc
sbb
pop
sahf
push
jbe
and
cmpsb
push
lret
adc
push
jo
dec
loope
loope
add
inc
push
arpl
xor
push
das
je
fisttps
push
lahf
fstps
xchg
lret
xorb
sbb
mov
mov
push
push
ja
cmc
dec
mov
rcr
fs
std
test
or
test
out
lods
push
cmc
dec
aad
mov
in
inc
push
gs
stos
out
jno
aad
test
enter
adc
push
and
ret
nop
mov
xchg
paddd
arpl
iret
add
test
lock
fcos
and
mov
pop
mov
into
push
cbtw
lds
mov
jecxz
cmp
std
push
je
sti
aaa
lret
and
orb
mov
pushf
in
hlt
lret
inc
mov
call
sub
aas
sbb
and
lea
xlat
in
lea
setge
push
and
loop
sub
add
dec
inc
jo
into
mov
in
sbb
loop
bound
mov
insl
lret
aas
cli
jb
enter
dec
add
ret
iret
lret
ret
ljmp
mov
clc
shlb
pop
mov
pop
push
cld
mov
test
inc
sbb
lret
jnp
sbb
or
cmp
repnz
xor
shlb
adc
add
push
cmp
push
lret
mov
mov
adc
sbb
inc
fsubr
xor
mov
mov
fdivs
jnp
fisubl
mov
fmuls
fs
test
rcrl
je
xlat
inc
jb
mov
or
ret
adc
mov
bound
and
or
jecxz
jb
add
inc
xor
mov
push
mov
lock
nop
add
out
jge
jne
add
repz
and
cltd
mov
fcmove
add
inc
ret
scas
mov
jle
cmp
lds
lret
mov
sbbb
mov
sbb
mov
js
xchg
lods
jecxz
lock
xchg
mov
repz
pusha
adc
sub
sub
sbb
mov
jo
int3
sahf
frndint
mov
cmp
fmuls
mov
mov
inc
xchg
in
test
cmp
inc
mul
int3
mov
mov
jne
jne
inc
push
push
mov
aaa
sub
pop
stos
adc
out
sbb
add
les
or
js
sub
repz
sti
fmuls
xchg
inc
mov
sahf
mov
push
daa
lret
or
pop
ret
dec
jge
test
adc
xchg
call
ja
mov
sub
fwait
into
dec
mov
and
enter
pop
push
es
adc
inc
ret
aad
je
mov
mov
lcall
addr16
inc
xchg
add
pop
iret
add
mov
inc
fisttpl
in
or
xchg
cmpsb
xchg
testl
repz
mov
movsl
xchg
scas
push
rorl
adc
addl
fnstenv
jb
out
jae
pop
xor
inc
nop
lea
andl
lds
lock
loope
mov
jno
ljmp
jbe
sub
fdivs
lcall
daa
in
xor
jne
mov
adc
add
pop
movsb
movsb
mov
mov
inc
cltd
aaa
mov
add
add
lret
add
sbb
mov
cmp
int
movsl
add
cli
push
or
insl
test
mov
xchg
jae
or
adc
std
or
xchg
clc
adc
jns
stos
popa
mov
pop
sbb
imul
mov
sbb
jbe
out
push
les
rcr
pop
fnstcw
and
jl
cmp
shr
ljmp
popf
or
and
and
call
cmpsl
mov
fisttpl
mov
dec
call
push
pop
stc
mov
shl
pop
inc
jecxz
loop
data16
xchg
pop
or
mov
dec
scas
lret
int3
decb
mov
in
into
aad
sbb
dec
mov
fsubl
pop
dec
mov
enter
mov
adc
test
mov
lret
add
jbe
in
nop
mov
insl
push
icebp
lret
mov
outsb
call
andl
mov
cmpsl
or
fadd
cmp
cmc
inc
leave
stos
pushf
mov
rclb
push
xchg
push
ljmp
mov
xchg
mov
jmp
cld
dec
and
cmp
fsubs
dec
mov
ja
and
mov
push
out
loop
or
in
cmp
adcl
out
shll
xchg
mov
mov
pop
icebp
push
mov
js
xchg
and
not
mov
les
cmp
xor
ja
cmpsb
xchg
push
lret
aas
scas
mov
adc
lds
mov
adc
sbb
xlat
repnz
fstl
adc
movsb
hlt
dec
xor
push
xor
test
inc
cmpsb
mov
jle
xor
je
push
movsl
push
pop
xchg
das
call
mov
sbb
lods
test
out
fidivs
insl
or
cmp
sub
push
je
sbb
xor
outsb
fwait
pusha
in
call
mov
dec
aaa
ror
sub
sub
ret
mov
push
aaa
ljmp
or
pushf
sbb
clc
sbb
mov
hlt
cli
out
leave
jno
ficoml
push
aad
sarb
int
mov
cld
repnz
ljmp
xchg
cli
andb
test
mov
mov
out
jle
cmpsl
in
mov
out
sbb
cwtl
ds
mov
and
data16
cmp
cmp
test
lret
inc
dec
or
stc
outsl
das
jecxz
sub
ret
xchg
pop
mov
shl
jecxz
cmpsb
leave
cmp
ret
sub
icebp
arpl
mov
mov
ret
fsubl
mov
scas
scas
sbb
mov
push
push
add
mov
int
ss
dec
jns
mov
imul
cld
cli
mov
sub
push
jp
shrb
lods
es
push
in
xor
jno
cmp
adcl
daa
test
mov
arpl
rorl
jne
xchg
pop
cmc
mov
out
cmp
pop
and
sbb
adc
push
xor
cmc
jb
xor
sbb
gs
push
int
adc
repnz
xchg
sub
mov
mov
dec
pop
jmp
xor
call
jae
aas
push
aam
pushf
shl
ret
jg
jge
sbb
in
inc
in
mov
fisttpl
test
mov
call
lock
testl
mov
mov
fs
xor
fsubp
dec
jle
sbb
jb
icebp
adc
out
fcomps
sbb
rcrl
adc
adc
mov
repnz
lcall
sbb
inc
sub
dec
repnz
jle
sbb
aam
cmp
or
mov
fisttpll
in
xchg
mov
mov
jmp
add
data16
fmull
insl
pop
mov
movsb
ja
adc
sub
pop
loop
push
or
shl
mov
or
mov
loope
fdivrl
fldenv
dec
xor
cld
or
mov
mov
mov
cwtl
in
loope
in
dec
xchg
clc
cmp
or
movsl
cmc
mov
xchg
out
cmp
lods
daa
lock
push
mov
or
aad
and
dec
mov
adc
jo
sti
rclb
mov
sbb
or
andl
fisubrs
cli
ret
mov
and
push
rcl
or
sahf
fisubrl
int
aam
fcmovb
xchg
into
mov
add
mov
or
or
push
mov
lret
xor
push
cld
cmp
and
mov
hlt
xor
call
pop
xchg
test
or
in
push
in
push
fidivrl
cmc
push
mov
push
inc
int
pop
in
rcll
lahf
lahf
and
and
aam
adc
test
fnstsw
inc
or
in
cmc
movsl
mov
cmp
divl
lcall
subb
aas
push
into
in
nop
out
test
das
inc
ja
jns
mov
jle
push
pop
add
cmp
int
or
ds
in
bound
push
adc
leave
lahf
std
or
xchg
push
mov
dec
jge
xchg
out
sbb
xchg
gs
cmpsb
xchg
sbb
dec
les
out
mov
cmp
push
xlat
ficoms
in
notl
mov
mov
aas
fildl
hlt
daa
imul
in
test
cmp
adc
pop
shll
push
mov
testb
insl
fmulp
in
iret
cmpsb
or
jo
inc
aad
lods
ds
jg
mov
cmpsl
daa
add
out
mov
aas
inc
leave
mov
or
mov
int
adcb
sbb
jmp
jg
jo
stos
dec
jg
cmp
mov
test
mov
scas
jmp
jecxz
pusha
mov
mov
or
jo
mulb
divl
inc
data16
jle
sub
or
test
dec
hlt
aas
sar
jae,pn
jne
push
or
xor
inc
int3
lret
or
das
cmp
mov
mov
xchg
icebp
xor
xchg
aas
movsb
enter
cmp
pop
push
imul
int
cmpsl
pushf
rcrl
mov
in
push
mov
in
scas
xor
inc
cld
inc
loopne
je
fcomi
push
aad
iret
xor
divb
dec
testl
gs
jne
testl
mov
push
ret
dec
or
sbb
das
loopne
in
xor
mov
cmp
stos
jle
lahf
in
out
loope
xchg
mov
dec
ret
fisubs
fcomps
test
push
stc
shr
fnsave
cmp
inc
dec
lock
dec
gs
lret
xor
mov
leave
mov
loope
test
dec
lahf
fisubl
jno
jp
jne
cwtl
cmp
cmp
adcl
cmp
xlat
jbe
fyl2x
adc
dec
fsubl
push
clc
mov
cmp
xor
mov
push
pop
int
mov
jmp
sarb
cmpl
jge
mov
add
test
mov
js
fdivrl
jecxz
mov
jle
xchg
pop
jmp
cmp
mov
test
loopne
xor
ds
aad
add
dec
sarb
lret
hlt
mov
rcl
popa
or
jg
ljmp
push
pop
xchg
pop
dec
testl
loope
push
test
in
xor
xchg
lea
sahf
sub
es
js
mov
aam
and
jb
sub
mov
add
jne
pushf
and
mov
mov
in
test
cmc
mov
imul
sbb
shl
add
sarl
decb
gs
lret
dec
jl
or
enter
and
fwait
jo
pop
push
shlb
add
mov
jo
sahf
sahf
mov
popa
mov
pushf
clc
or
andl
into
hlt
into
xchg
mov
rolb
inc
cmc
push
repnz
fcomps
mov
push
popa
jno
mov
aam
dec
arpl
fadds
data16
add
jle
dec
cmp
and
mov
cmp
cmp
mov
cmp
cld
sti
call
in
add
iret
loop
loop
lret
push
jp
xor
cmpb
stos
xor
aas
cmpsl
jl
aas
fsubrl
shl
mov
cmp
scas
into
hlt
jne
test
nop
push
int3
in
add
jae
mov
incb
pop
inc
mov
jmp
add
xchg
jbe
shrl
lock
fs
popa
mov
xchg
adc
xchg
filds
add
sub
adc
inc
xchg
mov
mov
cmp
cmpsb
cmp
loope
push
shlb
test
mov
ja
mov
insb
fs
or
std
repz
mov
decb
imul
lds
sar
push
incl
jl
and
ret
sbb
mov
xchg
adc
fld
pop
jmp
add
or
fwait
cmp
out
je
push
mov
sub
or
inc
stos
ss
mov
fcoms
push
mov
out
xor
daa
out
lcall
imul
push
lods
imul
jle
fmull
ret
adc
add
jb
outsb
rolb
cwtl
mov
incl
shll
mov
push
lea
test
or
dec
xchg
jo
sub
sbb
sub
adc
mov
stos
push
sub
incb
imul
push
cmp
pop
jge
int3
outsl
data16
mov
xchg
lds
orb
iret
cmpsb
ljmp
push
subb
nop
sbb
loop
movsb
or
call
sbb
repnz
push
xor
cmpsl
inc
daa
xchg
jmp
in
lret
cmp
push
mov
int3
sub
ss
icebp
inc
into
fcompl
xor
test
xor
je
movsb
test
pop
imul
leave
decb
sub
mov
jnp
pop
in
in
ss
lea
ficoml
fistpll
arpl
mov
mov
in
push
or
mov
dec
stos
lret
out
pop
stos
pop
sti
inc
stos
inc
es
push
push
aad
add
daa
mov
int3
nop
mov
stos
js
rcrb
xchg
loop
mov
push
xlat
push
pop
fimull
xor
aaa
je
mov
repz
ss
xchg
fdivs
mov
sub
xchg
xchg
sbb
test
adc
and
loope
sub
push
sbb
mov
xor
pop
popa
loopne
sahf
mov
sti
fs
lods
je
xchg
fstpt
jne
push
adc
roll
add
or
pop
jo
push
out
or
lret
pminsw
insl
mov
add
cwtl
fstps
adc
or
repz
inc
into
gs
les
mov
or
cs
jl
rcl
mov
scas
jecxz
xor
sbb
cmp
imul
or
out
shr
sbb
add
out
cld
movsb
push
pushf
add
aam
add
lret
movsl
jecxz
aad
fmull
cmpsl
adc
jecxz
inc
out
sbb
add
xchg
stos
mov
rorl
add
jl
scas
ror
lods
clc
or
cwtl
pop
rcr
xor
sub
rcll
ja
repnz
insb
repnz
mov
and
push
aaa
mov
dec
repnz
mov
outsl
xchg
adc
ret
and
adc
jno
ror
mov
jle
orl
mov
jns
test
add
xchg
mov
dec
scas
and
mov
mov
repnz
lret
inc
xchg
cmp
js
dec
stos
pusha
inc
stos
mov
movsb
mov
mov
mov
mov
fwait
or
inc
hlt
jmp
jg
mov
stos
notb
out
pop
rcr
and
andb
or
daa
fidivs
mov
mov
jle
cmp
mov
xchg
jecxz
inc
fmuls
pop
les
movsb
mov
xchg
jo
inc
sti
xchg
push
mov
daa
insl
inc
shll
clc
lods
dec
jmp
lahf
scas
fsubrs
push
mov
mov
mov
fdivs
mov
leave
in
outsl
mov
push
mov
inc
test
scas
sub
dec
and
ljmp
cmc
push
dec
add
stos
sub
das
hlt
jge
lcall
ds
into
or
mov
or
call
jmp
mov
and
pop
and
repz
in
out
js
stos
jae
int3
inc
push
out
outsb
inc
lcall
dec
out
push
and
mov
roll
mov
fiadds
jne,pt
jnp
mov
clc
es
mov
xlat
pop
ror
mov
jmp
or
xor
jbe
fmulp
idivl
adc
add
push
or
mov
mov
mov
push
call
mov
loop
orl
dec
mov
push
shrl
test
push
lds
mov
call
push
jl
shll
stc
xor
scas
scas
arpl
push
adc
mov
pop
out
jns
int3
ror
lahf
mov
popf
or
cmp
or
jecxz
push
add
inc
jno
arpl
sub
dec
add
sbb
gs
inc
pop
rolb
pop
jae
movsb
bound
mov
popa
scas
sub
jge
int3
ja
addr16
lret
jle
sbb
lahf
fstl
in
fwait
and
jno
and
jo
loop
add
popf
jl
inc
fdivrp
sbb
fstpl
inc
pop
ret
repnz
daa
subb
test
lret
mov
rclb
aad
mov
aad
ss
cmp
xor
push
xchg
leave
add
push
adc
jnp
mov
mov
loope
mov
mov
test
clc
push
addl
dec
stos
arpl
add
stos
xchg
xchg
inc
lods
ficoms
push
dec
mov
in
fildl
adcl
mov
clc
pop
fcomp
cltd
dec
rolb
divb
test
inc
jg
jo
xor
and
or
addr16
jecxz
ret
cmp
xchg
jecxz
je
jl
shl
lahf
xor
loopne
into
out
sub
xchg
ljmp
bound
xchg
mov
ljmp
sbb
or
int
nop
leave
inc
and
in
shlb
fcmove
xor
dec
popa
loope
push
and
cmpsl
ja
push
loop
sti
scas
xchg
or
frstor
rcrl
cld
std
and
into
gs
in
mov
leave
jle
sbb
aad
mov
pop
insl
cltd
push
xor
or
ja
jae
lahf
xor
push
dec
mov
lahf
mov
fldcw
adc
dec
fildll
rclb
cwtl
xlat
outsl
data16
lock
pop
or
clc
test
lret
xor
sbb
and
scas
stos
sahf
enter
pop
and
mov
popf
idivl
jge
addl
ficoms
mov
jne
push
push
in
dec
cmp
movsl
cli
stos
mov
jl
mov
enter
andb
add
push
sahf
mov
cmp
jmp
xchg
or
xlat
mov
xor
or
js
fiaddl
pop
mov
mov
dec
mov
sarl
icebp
std
aad
adc
mov
popf
and
xor
shlb
ror
cmp
jg
popa
lock
or
movl
fwait
aad
shr
repnz
lods
and
xor
sarb
jle
jb
dec
fidivs
cmp
leave
mov
in
in
mov
cmp
imul
sahf
fbstp
int3
std
push
lret
mov
pop
push
clc
sahf
mov
icebp
xchg
test
std
test
xor
mov
jmp
std
mov
sbbl
dec
les
lret
mov
cmp
aad
call
std
rclb
dec
push
or
in
dec
mov
adc
insb
dec
cmp
aad
sbb
fcmovu
sub
jne
jns
loope
mov
xchg
dec
repz
mov
adc
pusha
jge
out
icebp
lods
jae
inc
xor
lea
test
pop
add
and
std
sbb
mov
adc
pusha
push
xchg
and
mov
test
and
jbe
mov
push
and
roll
lret
jmp
lock
in
mov
sbb
popf
dec
cltd
xlat
ret
pop
bound
leave
inc
test
and
inc
mov
dec
loope
xchg
jge
fs
mov
inc
pop
jno
popa
aad
cli
fwait
jle
cltd
jp
stc
pop
sti
pop
dec
scas
add
js
mov
shr
xchg
inc
jo
popf
cmpsl
push
adc
ret
pop
mov
or
lea
cmp
xchg
mov
sub
push
mov
dec
mov
cmpsb
or
test
pop
push
iret
call
or
aad
add
xchg
xor
popa
jmp
iret
cmp
out
hlt
int
add
fsub
xlat
loopne
addr16
pop
xchg
loop
insl
adc
inc
call
mov
mov
inc
mov
mov
hlt
insl
and
push
xchg
cmp
sbb
mov
cmp
push
mov
ret
fiaddl
mov
mov
dec
test
loop
cld
mov
stos
ret
ss
push
iret
insl
sub
push
int
jle
pop
pushf
stos
jne
fcmovb
add
aas
js
loop
cs
daa
adc
ret
sub
lcall
adc
fldenv
push
cwtl
mov
ds
push
ljmp
les
imul
sahf
cwtl
loopne
sub
inc
adc
and
push
xchg
adc
mov
pop
stos
rorl
and
sbb
mov
inc
shrb
sub
shlb
adc
xor
sbb
adc
scas
outsb
xor
addb
jmp
push
or
imul
adc
sub
lcall
lock
fidivl
or
jbe
sub
orb
in
fisubs
add
push
pop
lea
or
push
int
lahf
ror
jns
sbb
jg
dec
mov
mov
filds
cltd
mov
test
ljmp
popf
lcall
push
mov
or
ficompl
int
inc
addr16
scas
xchg
cmp
fs
cld
inc
mov
xor
clc
push
mov
adc
aam
rolb
leave
dec
lds
mov
mov
mov
jle
in
sarb
lret
or
repz
pop
lcall
ret
sub
in
sbbb
aas
sahf
xor
in
mov
xor
pop
and
dec
add
js
movb
imul
sbb
jno
xor
add
loope
add
cmp
adcb
adc
in
outsl
mov
push
fidivrs
into
xchg
add
mov
pop
lea
mov
xchg
out
mov
pop
sbb
roll
mov
mov
test
pop
mov
sbb
fcom
call
int
xchg
in
roll
aam
mov
jge
hlt
sbb
mov
xor
repz
mov
int
mov
xchg
sbb
aas
ficoms
jge
mov
lock
test
push
mov
loope
subl
popa
mov
dec
iret
inc
dec
jecxz,pt
add
out
pop
lahf
ficomps
fisttps
cwtl
loop
into
dec
stc
jl
xchg
hlt
pop
icebp
aaa
js
fbstp
scas
stos
out
xchg
test
mov
jae
repz
loop
mov
mov
sahf
push
shrl
lahf
pop
xchg
ret
nop
xchg
test
lds
inc
adc
dec
dec
ja
adcl
mov
xchg
sbb
mov
add
xchg
mov
jge
outsl
jecxz
stc
dec
or
inc
mov
popa
push
mov
testb
cmpsl
imul
icebp
mov
call
ljmp
and
adc
jmp
nop
ja
cmpsl
pusha
pop
push
stos
mov
cwtl
imul
aam
add
out
jmp
cmp
mov
in
pop
into
inc
cmp
movsl
adc
add
jecxz
into
jge
adc
adc
rorl
mov
and
sub
add
aaa
stos
clc
js
loopne
dec
jno
ljmp
shll
jno
mov
jge
decl
fistl
cmp
or
xchg
lret
sbb
cmp
fadds
mov
xor
xchg
jo
into
jnp
pop
and
adc
dec
dec
xchg
mov
cwtl
out
xchg
mov
movsb
fimuls
add
jo
inc
js
in
mov
xlat
xor
clc
xchg
fistpll
cli
jp
add
mov
adc
mov
lcall
arpl
mov
iret
xchg
mov
inc
adc
es
add
out
pop
jmp
movsl
out
or
push
add
orb
nop
add
repz
cmp
das
push
sbb
mov
imul
es
jnp
pop
or
adc
mov
fnsave
sbb
filds
dec
mov
shlb
js
gs
js
js
push
sbb
and
sbb
in
loope
jg
xor
and
out
in
adc
jo
jno
iret
std
ss
fisubl
popa
jne
sub
lcall
or
inc
subl
adc
mov
std
out
xor
jo
nop
sbb
iret
adc
das
lahf
movsb
insb
jp
lds
imul
and
aad
aad
xchg
lahf
cmp
add
test
insl
push
fst
dec
cmp
mov
andl
add
mov
xlat
and
pop
or
sbb
or
mov
mov
mov
sbb
jmp
sbb
test
pusha
push
inc
xchg
cmp
dec
out
iret
cli
dec
and
xchg
popf
push
icebp
ljmp
icebp
jae
jecxz
add
je
testl
mov
sbb
scas
dec
push
push
ljmp
dec
mov
stos
mov
cmp
adc
or
lahf
push
icebp
call
or
shlb
cwtl
or
xchg
or
pusha
inc
jmp
mov
jnp
sub
lods
sbb
lds
fiaddl
dec
or
sahf
fnstcw
test
into
in
mov
sub
jmp
push
lock
pop
imul
or
inc
jmp
aaa
fistpl
fs
stc
xor
mov
mov
pop
daa
movntq
cmp
stos
into
ds
cli
iret
repnz
bound
adc
imul
pop
fbstp
adc
dec
inc
push
movsl
dec
cmp
sbb
push
mov
xchg
in
mov
xor
aaa
insb
clc
sbb
push
loop
fbld
aam
icebp
pop
sub
cltd
inc
xchg
lods
and
int
push
std
dec
jne
mov
mov
inc
adc
imul
cltd
outsl
mov
lea
rcrb
enter
mov
jl
rcl
ss
push
out
cmpsl
mov
or
mov
das
lea
xchg
adc
jmp
jno
and
mov
rolb
int3
mov
leave
shl
aaa
dec
stos
int
push
insb
enter
jno
dec
or
jno
and
mov
cmpsl
add
sti
push
rorb
or
icebp
lret
test
shl
ja
cli
je
sahf
dec
adc
loope
jns
std
daa
mov
rclb
sbb
aad
inc
mov
addb
add
adc
outsb
popf
and
loope
adc
addr16
leave
lds
mov
mov
xchg
mov
jb
pop
les
sbb
or
jecxz
xor
pushf
lret
mov
mov
jmp
loope
xor
xor
or
sbbl
push
push
movsl
js
testb
in
push
pusha
xabort
xchg
mov
cli
nop
cmp
popf
xchg
mov
mov
aam
stos
xchg
insb
iret
in
xchg
fwait
jo,pn
push
pop
stos
imul
outsb
movsb
pusha
mov
pop
in
popa
mov
insl
pop
pop
repz
addr16
cs
adc
jnp
imul
mov
ffree
push
fisubl
stc
repz
pmulhuw
sub
scas
insb
adc
push
repnz
or
ret
scas
jmp
setae
aad
mov
das
mov
xor
pop
dec
test
cli
rolb
add
jle
imul
ljmp
scas
mov
jbe
cmp
subb
mov
adc
rclb
movsb
mov
cli
jne
hlt
mov
xchg
sub
cmp
rolb
out
dec
popf
incb
dec
dec
faddl
cmpsl
mov
fs
mov
jl
adc
lret
dec
mov
adc
aaa
loopne
sbb
arpl
ja
jne
nop
enter
movsl
sbb
ljmp
mov
dec
push
scas
arpl
hlt
int3
and
sbb
mov
ss
mov
lcall
jle
lret
leave
shlb
pop
push
jg
xor
movsb
and
pop
cmp
add
dec
pusha
cmp
aaa
lods
rorl
rcrb
mov
stos
sbb
aam
in
dec
or
sbb
jg
leave
jmp
repz
icebp
dec
test
mov
push
sub
ja
std
popf
stos
hlt
lahf
mov
jmp
pop
inc
ret
fldl2t
xor
ds
popa
sub
out
mov
int3
mov
push
pop
or
ror
fnstcw
int3
dec
inc
test
xor
mov
mov
and
jbe
xor
int
xchg
mov
xor
testb
jae
inc
cltd
cli
pop
int
aas
daa
aaa
lods
jl
pop
mov
rcll
and
fldl
jnp
rcl
lcall
push
int3
repnz
pop
ret
fcomi
jne
lret
leave
xchg
dec
mov
jecxz
xor
inc
lret
pop
fisubs
jle
xchg
mov
pop
mov
movsb
add
adc
jmp
cmp
dec
cmp
adc
push
dec
lcall
xlat
jmp
jmp
mov
shr
and
jl,pt
push
cs
movsl
mov
and
popa
xchg
in
mov
cmpsb
ja
push
mov
push
mov
hlt
or
mov
jns
jge
sub
xchg
push
imull
out
enter
add
nop
adc
jne
lea
test
mov
mov
popf
fcmovu
inc
xchg
and
cwtl
mov
and
add
xor
cs
mov
icebp
mull
rorl
fldcw
stc
mov
ss
jne
dec
or
mov
dec
movsb
and
mov
xchg
lods
inc
in
or
popf
or
rorb
add
or
adc
mov
rcr
add
lret
jns
xorl
push
in
sub
mov
fidivs
lcall
inc
sbb
cs
jecxz
or
inc
inc
jg
and
inc
push
popf
nop
dec
xchg
lock
push
fcompl
rolb
hlt
loope
inc
jno
outsb
mov
or
lcall
or
xchg
es
xchg
pop
mov
shrb
mov
inc
scas
cmp
xor
mov
pop
xchg
jmp
push
rclb
jg
sub
adc
mov
lret
inc
and
xor
sbb
aaa
les
pop
es
push
adc
std
sbb
clc
loopne
push
mov
mov
inc
jmp
mov
mov
add
sub
inc
nop
fiadds
jle
call
mov
push
mov
inc
cld
jo
sub
aas
adc
in
jno
movsl
insb
es
fisubs
bound
fstpl
pop
rolb
add
repnz
mov
mov
sarb
pop
add
stos
xchg
mov
nop
leave
shll
fisttpl
fcomps
xor
stos
ljmp
cmpsb
adc
lea
inc
ss
out
xor
out
daa
fstl
movb
movsl
mov
repnz
sbb
sub
jnp
sti
dec
adc
loopne
cld
or
cmpsl
pop
cmpsb
or
sbb
sahf
cld
cmp
shlb
fwait
ret
or
and
mov
aam
xor
in
ret
ret
add
ja
xchg
rcrl
pushf
mov
test
pop
mov
add
aam
push
xor
sahf
pop
je
ja
in
mov
adc
fs
push
jns
hlt
lods
int
shl
sbb
pushf
rclb
test
or
jmp
in
repz
movsl
sub
mov
out
xchg
jp
jo
popf
push
jmp
jnp
push
inc
cmpsb
nop
or
int
pusha
shlb
mov
popa
xchg
or
test
and
mov
sbb
cmp
mov
lcall
out
outsl
loop
jge
cli
push
rol
lea
pusha
push
ds
cmpsb
dec
cltd
shll
sbb
xchg
shl
push
push
mov
adc
adc
xor
sub
inc
loope
lcall
adc
std
and
mov
xchg
add
inc
jg
jnp
adc
and
ret
jp
int
cmp
add
dec
in
out
loop
cli
push
pop
fildl
dec
mov
icebp
push
daa
movsl
cmp
cmp
cld
sbb
ja
add
fidivl
aaa
cli
gs
adc
push
stc
and
push
adc
arpl
into
ret
add
sahf
mov
xor
jbe
push
or
mov
cmpl
pop
jg
dec
in
mov
push
jle
scas
insl
fdivl
test
insb
stos
mov
loope
aaa
mov
push
push
mov
push
push
mov
push
jmp
adc
hlt
ror
or
jp
jecxz
and
and
mov
cmp
insl
not
push
repnz
mov
adc
fidivs
mov
hlt
test
out
dec
lods
mov
jmp
out
mov
pop
outsb
popf
fcmovne
and
mov
ret
rorb
lret
sbb
sbb
jo
lret
in
fstpl
mov
push
push
and
cmp
subb
cld
mov
sub
aad
jle
imul
fstpl
dec
dec
sahf
xchg
notb
sbb
xchg
imul
in
mov
daa
in
jae
imulb
in
das
int3
xor
jp
push
call
adc
fdiv
leave
mov
fsin
mov
or
mov
xchg
ss
or
enter
negl
out
rcll
cwtl
inc
mulb
and
ret
sub
mov
jne
or
push
xor
pop
ror
or
mov
push
inc
push
jmp
in
leave
cmp
mov
xchg
push
pop
dec
xchg
mov
adc
mov
sub
movsl
bound
mov
push
or
xchg
sub
int3
jg
aad
jns
pushf
inc
shl
sbb
fs
dec
dec
sbb
mov
jmp
push
mov
or
js
arpl
sub
int3
mov
call
addr16
movsl
mov
lods
stc
and
enter
mov
or
sub
inc
cmp
lcall
dec
pop
cmp
pop
lock
es
lods
pop
mov
push
sub
mov
ja
in
or
pop
and
mov
popf
jbe
mov
mov
in
das
ret
loope
and
jbe
mov
iret
cmc
ret
fsubrs
fisttpll
aas
jecxz
pop
stc
jno
pop
movsl
pop
sbb
xor
jle,pt
jp
cmc
cmc
xorl
mov
leave
xchg
jecxz
inc
lret
pop
ss
push
xchg
aam
jns
xchg
movsb
lds
xlat
mov
mov
in
movzwl
mov
mov
xchg
fcompl
jmp
jmp
scas
xchg
aam
sub
inc
je
sub
stos
pop
sbb
outsl
xchg
vminps
and
das
fildll
mov
mull
out
adcl
shlb
xchg
sarl
adc
test
mov
sub
outsl
adc
or
shlb
adc
cmp
adc
repz
cmp
jne
mov
cmp
adc
inc
add
aam
gs
mov
and
adc
jle
and
bound
dec
in
stc
lds
daa
cs
dec
out
cmp
inc
and
fs
jae
test
in
push
cmp
sbb
hlt
xchg
mov
fistpll
dec
or
and
aam
push
cwtl
aam
add
pop
lods
imul
xor
adc
cld
lea
adc
mov
dec
sti
int3
call
push
or
pushf
movsb
push
iret
mov
fs
inc
cmp
outsb
mov
stos
jns
mov
cmpsl
cmpsl
cwtl
out
cltd
xor
sub
mov
mov
pop
lret
out
mov
dec
std
andb
fcompl
pop
lods
fcoml
bound
lcall
adc
dec
push
icebp
xchg
ret
cmc
adc
mov
pop
push
mov
or
mov
popf
or
loopne
ljmp
into
lahf
dec
aas
xor
xchg
mov
fsub
repnz
mov
sarl
insl
dec
into
testl
adc
imul
mov
jle
adc
jg
jmp
test
mov
mov
int
aas
pop
jmp
out
dec
imul
fwait
push
push
aas
push
lods
mov
and
outsl
fs
aas
fcoml
inc
loop
sahf
testb
jle
cmp
add
mov
mov
xor
in
mov
add
sbb
aad
sub
xchg
outsb
adc
popl
or
adc
or
dec
inc
out
mov
jae
adc
das
cld
jb
xchg
sub
ss
and
idiv
pop
js
mov
push
jge
pop
fsubl
push
sub
jnp
push
lds
jno
pop
mov
movsb
cmp
ja
mov
jne
lahf
xorb
sub
rol
sub
sub
mov
mov
dec
dec
mov
aam
pop
mov
rorb
movsl
ds
and
cmpsb
jae
shll
adc
repnz
inc
ljmp
lock
jmp
popl
pop
jmp
cmc
loopne
xchg
test
not
test
repnz
dec
jbe
cmp
mov
add
sbb
bound
push
pop
mov
mov
mov
fnstsw
sub
dec
xchg
fstl
mov
xchg
push
insb
inc
iret
movsb
rcr
mov
pop
stc
mov
pop
iret
cmp
inc
lret
clc
cltd
repnz
cltd
outsl
and
arpl
sub
mov
popf
adcl
add
rcll
dec
cmp
sbb
movsb
mov
push
out
cli
sub
inc
xchg
sahf
bnd
test
jns
fadds
mov
mov
into
aam
insl
mov
ds
inc
ffree
adc
cwtl
push
add
inc
pop
and
cmc
push
ljmp
movsb
push
movsb
mov
es
fsubrl
cmp
and
fwait
jns
mov
cmp
push
lret
les
pop
pop
addr16
push
jno
sti
mov
dec
jecxz
jns
jo
jmp
rolb
enter
cli
mov
std
xorb
arpl
shlb
imul
sub
dec
insl
aas
pop
arpl
inc
fcoml
push
mov
sbb
subb
add
cmp
not
and
dec
xchg
lods
jne
xchg
movsl
es
icebp
mov
push
lock
lds
mov
pop
pop
sbb
mov
adc
add
lahf
inc
or
pop
jp
mov
ss
adc
pop
jg
sbb
dec
sub
jmp
hlt
mov
sbb
icebp
into
and
mov
fsts
les
repz
fsubl
test
adc
int3
sub
pop
loopne
jg
in
push
loope
mov
loop
es
sbb
mov
aad
call
mov
fsubrs
dec
mov
fisubrl
add
push
icebp
test
jle
sub
rcll
dec
fdivp
xchg
enter
std
xlat
mov
sub
mov
jle
stos
inc
popa
sahf
aad
dec
or
test
mov
es
daa
lds
fcomps
lret
lret
icebp
jo
pslld
and
in
sub
pushf
mov
or
xchg
mov
add
iret
fcomp
jmp
mov
dec
xchg
fdivs
in
and
and
aas
pop
bnd
dec
inc
pop
cmpb
js
cmc
push
mov
insl
outsl
pop
lock
sub
pop
adcb
pop
cmp
dec
mov
mov
inc
pop
daa
dec
daa
adc
shll
jge
rorl
testb
cmpsb
sbb
scas
int3
lds
xchg
out
pusha
add
adc
xchg
hlt
sahf
push
pop
adc
xor
test
sub
das
mov
push
xchg
ja
push
xlat
dec
movsl
xor
pop
sbb
sbb
pop
sarb
xchg
or
nop
in
adc
mov
fimuls
xor
sub
mov
in
data16
dec
ret
xor
xchg
sub
or
hlt
or
mov
lret
aas
bound
test
rolb
and
dec
fmuls
pop
shrl
jecxz
sbb
pop
scas
daa
clc
cs
stc
repz
jge
xor
add
push
out
and
nop
xor
dec
jl
sub
pop
je
inc
out
mov
shl
insl
fadds
push
pop
lock
aam
repz
rcll
sub
arpl
mov
je
movsb
and
xlat
jmp
add
in
jmp
jae
fsubrl
adc
in
cmp
and
mov
adc
out
sub
or
ret
outsb
stc
sub
out
dec
sub
ret
jae
adc
rorl
addb
ja
jle
mov
lea
nop
lahf
mov
std
push
test
lods
lods
fdiv
mov
cli
insb
jb
cmp
xor
cmc
inc
leave
mov
scas
mov
sarb
movsl
dec
std
adc
or
pop
add
push
sbb
jmp
ret
jb
fbld
dec
mov
sub
sbb
pop
in
sub
stos
pop
dec
jb
aaa
movswl
cmp
sarl
cltd
inc
inc
push
push
mov
push
mov
leave
xlat
cmpsl
scas
push
fdivr
inc
cmp
cmp
cmpsb
xor
pop
add
push
jo
mov
decl
sbb
jmp
lret
pop
cld
sbb
popa
hlt
cmp
cli
lcall
ret
xor
loop
adc
cmp
cmp
movsb
or
mov
pop
jmp
pop
repnz
shll
push
cli
fmul
push
shlb
mov
aam
push
faddl
or
js
push
mov
mov
inc
sbb
cmp
rcr
mov
jmp
pusha
fdiv
outsb
mov
loope
mov
push
fisubrs
lahf
scas
lock
jbe
lods
leave
insl
lret
sbb
ljmp
dec
imul
fwait
dec
mov
xchg
push
mov
add
es
sbb
and
lcall
test
cs
cmpsb
sub
push
aam
inc
fstps
in
or
aad
stc
mov
cmp
push
ss
rorb
mov
dec
cmpsb
rorl
mov
inc
cmp
ret
dec
pushf
adc
pop
sahf
imul
jb
xchg
ret
js
out
leave
mov
sti
dec
mov
mov
mov
dec
sahf
fst
mov
push
imul
mov
add
fsubs
in
adc
sub
adc
sbb
dec
sahf
clc
aam
jmp
cmp
push
fwait
dec
and
jecxz,pt
sbb
or
xchg
fadd
sbb
dec
mov
mov
push
rcl
jp
mov
lds
testb
test
sub
add
add
mov
ss
jbe
dec
jnp
enter
xor
or
aam
xlat
daa
push
lret
or
jl
stos
loop
inc
cmpsb
sub
aaa
pusha
add
call
dec
sub
icebp
fwait
call
pop
xor
sub
mov
inc
int
mov
fadds
repnz
aas
mov
inc
cmpsl
lods
repz
jp
dec
cs
adc
mov
xor
and
leave
gs
jp
add
or
push
inc
push
mov
pop
repnz
add
push
inc
lret
xchg
inc
paddw
mov
mov
popf
jmp
push
jmp
push
dec
pop
popf
xor
inc
int
shl
push
jo
popa
mov
xor
jle
xchg
loope
leave
mov
mov
push
stc
or
bound
and
ss
sub
lods
les
fs
das
cmp
aas
stos
mov
or
stos
leave
mov
cmpsb
cltd
adc
add
rcl
jmp
les
inc
movsb
mov
dec
stos
push
xchg
std
sar
sub
xchg
jns
push
push
repnz
xchg
xchg
cmp
dec
xchg
xchg
dec
jns
lret
nop
jbe
in
push
subl
icebp
out
xlat
push
jb
dec
or
jg
sbb
push
fldt
mov
aam
in
cmc
or
cmp
fcomp
int
fistpl
bound
jno
stc
testb
sub
jnp
rcr
adc
je
inc
hlt
inc
loope
pop
fldt
fcompl
outsl
ret
dec
or
mov
dec
cs
push
or
pop
pop
ror
int3
mov
push
fidivrs
incl
ret
movb
xchg
cmp
sbb
jo
jo
xor
xchg
je
int
sarl
sbb
cli
jle
lahf
sub
aad
xor
mov
cmp
jne
arpl
inc
fldt
insb
xchg
insb
daa
sar
push
movsb
sbb
pop
fimuls
fs
ljmp
fcmovb
icebp
divl
inc
xorl
pop
dec
mov
xchg
dec
mov
mov
loop
pop
mov
pop
inc
xor
test
mov
in
ljmp
mov
fwait
lods
xor
daa
outsb
xor
repz
cwtl
xchg
in
cmpsl
int
adc
adc
arpl
sbb
pusha
shlb
out
and
insb
sub
insl
cmc
inc
adc
sbb
popf
mov
icebp
fldcw
cmp
clc
ds
push
adc
add
cmp
cmp
jns
addr16
mov
jl
lods
pop
cmc
pop
add
mov
negb
jle
xchg
mov
fcomp
test
or
sbb
fcmove
add
pop
cmp
inc
mov
ficoml
sbb
cmp
shlb
lret
std
int3
xchg
subb
test
mov
jno
mov
mov
mov
push
cli
ds
adc
push
adc
push
inc
xchg
lock
sbb
cmp
stos
out
cmp
or
fiadds
or
aad
or
jne
lds
adc
lret
fadds
jle
fbld
mov
hlt
cli
xchg
sbb
scas
mov
cmc
xchg
dec
lcall
test
call
push
daa
inc
inc
cmc
sub
jo
and
repnz
add
ds
push
and
push
or
in
aaa
stc
sbb
mov
lret
cmpb
sbb
into
lods
repnz
dec
mov
dec
adcl
xchg
iret
cli
jmp
test
adc
vpaddusw
les
or
mov
xchg
mov
jge
dec
test
in
jmp
and
nop
mov
and
in
fimull
ss
lret
add
insl
and
push
dec
mov
adc
xchg
push
int
mov
mov
lcall
addr16
xchg
ljmp
mov
mov
test
or
cwtl
fwait
test
lds
sub
call
call
ss
cli
imul
jp
mov
mov
ljmp
divb
mov
inc
ds
jnp
popf
lock
cwtl
xchg
adc
mov
lods
dec
xchg
dec
and
fcmovnu
jmp
mov
mov
mov
orb
sbb
or
mov
jno
out
cmp
enter
xchg
bound
or
cmpsb
sbb
mov
mov
sub
fcmovnb
mov
push
mov
adc
out
fcmovnbe
or
in
icebp
lret
shlb
xor
lods
mov
movsb
cmp
outsb
jne
and
mov
dec
int
popa
mov
es
jne
jno
cmp
scas
out
pop
or
scas
popf
test
lock
xor
mov
lahf
adcb
jno
int3
inc
cltd
sbb
fidivrs
cld
push
loop
xchg
shr
lods
rcll
nop
xorl
aad
fmull
jl
out
lea
sbb
adc
mov
inc
pop
jne
stc
xor
push
jp
iret
out
mov
mov
cmp
dec
inc
adc
jl
lcall
or
aas
add
stc
jns
jne
push
cmc
sahf
mov
fwait
pushf
int3
int3
popf
cmc
mov
rcll
dec
ljmp
mov
not
repz
lahf
mov
out
cmpsl
ds
push
es
or
das
mov
add
jae
xor
xor
xchg
sbb
mov
rcl
lahf
inc
in
movzbl
enter
sbb
jns
mov
dec
jmp
imul
out
inc
movsl
mov
shlb
push
shl
mov
cmc
ror
gs
sbb
lock
in
sub
jg
lahf
orl
mov
add
add
adc
test
adc
xchg
jne
aaa
pop
cltd
iret
loope
hlt
xor
pop
mov
xchg
lea
test
pop
je
pop
in
mov
neg
into
out
inc
iret
sbb
shll
pushf
mov
sub
dec
push
pop
out
pop
scas
mov
push
daa
jl
fstps
js
shl
mov
mov
fisttpll
std
cmp
mov
dec
fimuls
mov
mov
adc
rcr
mov
loope
jmp
jae
sub
jl
mov
sti
insb
mov
mov
jg
mov
jae
jmp
mov
jmp
and
shlb
popf
lock
or
repnz
loopne
inc
jne
mov
ds
bound
xlat
cmp
jmp
insl
xchg
cwtl
dec
andl
mov
push
mov
xchg
mov
mov
inc
lods
ftst
fmull
aad
in
push
or
lret
push
jae
inc
fcomip
rcrb
mov
sub
pop
mov
push
rclb
add
adc
push
mov
rcr
rcrl
cli
stc
or
daa
idivl
inc
fnstcw
and
jle
inc
cmc
pushf
sbb
call
movsb
out
fwait
out
pop
jbe
adc
mov
xor
loope
sarb
mov
adc
pop
aam
in
mov
pop
rcrl
das
push
scas
repnz
in
aam
mov
stos
outsl
test
je
xchg
jns
int
sbb
lea
or
in
fnstcw
addr16
or
mov
stc
mov
dec
dec
int3
or
mov
incl
jmp
xor
in
add
enter
jl
stos
arpl
outsl
jge
stos
add
stc
sub
push
imul
pop
add
and
mov
or
cmp
pop
andb
lahf
in
cmp
xor
popa
xor
pop
pop
mov
fnstenv
in
or
sbb
lods
push
or
and
xor
sti
fwait
stos
push
cmp
iret
in
sub
xor
push
out
jmp
or
xchg
dec
sbb
jo
mov
and
inc
sbb
aam
ret
inc
sarb
mov
cmp
adc
and
ret
dec
or
mov
jns
cld
roll
xor
cmp
gs
push
dec
cmc
adc
pop
mov
adc
popa
and
sbb
lahf
mov
add
and
or
jb
pop
inc
inc
jae
aad
fistpll
lods
imull
sub
push
testb
jmp
xor
pop
push
cmp
push
call
lahf
cmp
cmp
jmp
scas
ret
add
sub
mov
jno
fldl
add
jb
mov
jnp
pop
inc
jbe
aas
repz
adc
mov
xlat
lds
mov
daa
scas
pop
shrb
cld
sbbb
popa
sub
dec
dec
enter
xor
jle
adc
fs
dec
mov
add
ja
test
leave
mov
int
pusha
jo
test
jno
mov
mov
jge
scas
mov
lods
jle
aaa
out
mov
sarl
adc
nop
jmp
add
popl
mov
testb
or
push
fcoms
mov
fimuls
jno
xchg
cmc
adc
sti
lea
cs
jo
pop
imul
dec
das
jge
pop
inc
sub
in
lcall
addr16
fnstsw
rorl
xchg
xor
push
shl
sti
iret
clc
mov
sub
lods
jnp
add
and
pop
push
loope
iret
cwtl
dec
hlt
cld
pop
push
fs
nop
mov
rcll
push
std
xorl
push
push
dec
xor
clc
cwtl
dec
or
lret
mov
aam
frstor
enter
xchg
inc
aas
mov
mov
sbb
push
mov
add
cmpsb
cs
push
xchg
pop
cmp
int
aas
es
test
pop
or
es
mov
and
mov
scas
test
add
mov
cmp
ds
pop
loope
sbb
jl
aaa
loope
xor
leave
mov
jb
loop
dec
push
mov
ret
dec
jb
jb
call
test
push
ja
push
lea
les
inc
inc
daa
pop
push
es
push
mov
xor
push
sahf
push
fcoms
js
into
fstpt
cmc
clc
jecxz
add
cmc
jae
movsl
jge
push
fildll
push
or
push
clc
aad
imul
das
mov
mov
xchg
jp
sbb
mov
xorl
mov
std
incl
pop
loop
mov
mov
adc
jnp
dec
jge
lods
xchg
aaa
lahf
adc
ret
mov
cld
icebp
mov
nop
and
lcall
rolb
int
sbb
in
lcall
lods
cmpsb
push
xor
jb
adc
imull
push
fbstp
or
and
out
ljmp
dec
pop
les
cmp
mov
jge
fwait
cs
repz
bound
push
xchg
pop
inc
xchg
and
into
mov
and
add
xor
push
push
js
divl
lcall
sahf
pop
xor
jmp
movsl
adc
pop
push
dec
sahf
adc
out
or
data16
cmp
test
pop
mov
sbb
jl
mul
mov
sahf
out
gs
xchg
cs
enter
jae
cld
xchg
imul
pop
shlb
js
adc
push
shlb
pmaxub
push
imul
out
xchg
or
jno
shlb
sbb
push
xchg
aad
hlt
stos
jns
adc
push
enter
pop
iret
cli
arpl
pop
mov
cltd
aam
out
aaa
dec
cmpsb
adc
cld
out
add
dec
std
inc
popa
mov
jle
orl
mov
icebp
mov
out
out
inc
outsl
in
push
sub
sbb
scas
gs
pop
adc
fisttpll
xlat
jp
loop
int3
xor
shlb
cmpsb
cmp
rcl
dec
inc
std
mov
add
mov
mov
mov
decb
lods
mov
dec
cmp
sub
push
xchg
hlt
mov
out
sub
add
pop
cmpsl
lcall
xchg
sbb
sbb
pop
mov
mov
mov
dec
test
test
xchg
or
push
cmp
cmp
adc
out
cwtl
push
xchg
or
lret
fwait
or
shrl
lods
cmp
dec
mov
fstpl
mov
pop
movsl
mov
pop
mov
and
dec
scas
jge
lahf
dec
les
cmp
xor
rcr
cmp
mov
in
fnsave
jno
push
adc
push
outsl
xor
sbb
aaa
outsb
inc
stc
and
dec
sbb
call
in
mov
pusha
pop
mov
and
and
imul
nop
ljmp
or
jecxz
js
xor
or
sbb
jne
inc
movsl
mov
std
mov
pop
lahf
push
imull
std
cmpsl
mov
adc
sbbb
cwtl
mov
rcl
imul
sbb
das
ljmp
xor
lahf
adc
mov
ds
fimuls
imul
test
int
ret
push
sub
sbb
movsl
in
mov
in
push
add
xchg
sub
add
adc
into
in
iret
cmp
lea
fucom
push
daa
jno
and
mov
fistpll
xchg
sub
iret
aam
mov
pop
push
movsl
dec
ljmp
data16
scas
mov
outsb
mov
cmc
pop
dec
gs
push
inc
lea
xchg
mov
outsb
pop
push
sbb
icebp
mov
lahf
mov
pop
call
jbe
dec
mov
aaa
add
dec
mov
jne
fdivrl
arpl
aam
jg
cmc
adc
dec
hlt
fldenv
in
jo
jge
push
or
inc
cli
daa
fimuls
dec
sub
inc
ljmp
mov
dec
dec
xor
iret
or
mov
pop
sub
ret
fcmovnb
mov
stos
dec
leave
add
sbb
scas
in
outsb
lock
mov
stos
mov
dec
cmp
or
mov
out
jmp
int3
std
movsb
fld
cld
sub
movsl
xchg
lock
adc
ljmp
jge
loop
in
pop
mov
xchg
ret
in
sarb
out
push
adc
add
stos
push
xor
pop
xor
out
je
rcl
adc
dec
cmpsl
ret
fsubr
out
or
inc
mov
xchg
inc
aad
iret
fistpll
movsl
cmp
mov
repz
call
aam
inc
sarl
shrb
into
sub
rcll
adc
ret
mov
xchg
mov
dec
ret
cwtl
cmp
shlb
adc
movsb
cmp
pop
lahf
add
adc
into
sarl
mov
insb
jb
or
sub
imul
fdiv
in
push
jl
lret
dec
cmp
clc
imul
add
jnp
mov
pop
xorb
inc
inc
test
jg
xor
inc
push
scas
out
push
divl
sbb
mov
mov
mov
xor
iret
out
nop
in
scas
repnz
das
xchg
sub
mov
lret
movsl
mov
call
aad
jno
lahf
mov
pusha
sbb
ret
mov
neg
dec
lret
test
leave
and
mov
inc
ficoms
aam
inc
mov
std
pusha
outsl
fwait
xor
cmpb
outsl
jae
lret
repz
popl
and
mov
fldcw
or
ffreep
pop
inc
cs
mov
and
rorb
leave
mov
jb
mov
push
dec
push
sub
jns,pn
jmp
sbb
dec
inc
jns
cmp
inc
orb
add
aaa
lds
adc
ret
or
dec
cmc
test
push
jbe
and
loop
sbb
push
insl
push
or
xchg
pop
andb
xlat
push
jae
shlb
ret
out
fnsave
sub
aam
testb
loopne
jmp
inc
std
and
pop
jnp
std
pop
fcompl
imul
dec
lock
mov
add
jne
and
pop
add
and
xor
clc
aad
push
lds
cmp
xchg
sbb
les
mov
push
mov
pop
xchg
dec
sbb
pop
fadd
push
dec
mov
and
sahf
mov
popf
add
push
or
inc
and
sbb
fildll
out
mov
and
mov
mov
movl
pop
imul
xor
insb
pop
and
mov
dec
jle
sti
jmp
inc
mov
fwait
les
ja
jb
dec
mov
push
repz
mov
pop
rcll
nop
sub
mov
mov
imul
loope
and
xchg
push
xchg
xchg
shr
inc
jbe
cmp
mov
push
fistpll
mov
mov
fdivp
mov
or
mov
sahf
cmpsb
add
mov
std
inc
lods
std
or
xchg
or
mov
adc
xor
clc
loope
or
test
int
roll
in
and
mov
xchg
mov
sarb
cmpsl
xor
xacquire
mov
arpl
xor
imul
lock
dec
push
call
push
dec
pushf
shlb
std
stos
and
std
xchg
push
fsub
pop
int
pop
mov
imul
mov
jo
rcll
push
xchg
dec
inc
mov
mov
adc
jo
fildl
gs
fxch
aad
cmp
ja
jno
das
ret
pop
cmpl
stc
inc
mov
loop
adc
fsubl
iret
pop
jle
pop
loop
mov
xlat
push
out
push
aad
fistpll
roll
sbbb
push
inc
ret
dec
cmp
out
sbbb
add
mov
dec
xor
jl
mov
pop
jle
call
lret
mov
lret
std
jns
lahf
xchg
repnz
in
les
icebp
popa
inc
xor
outsl
je
mov
fdivrl
push
mov
push
fxch
lds
pop
cli
xchg
or
cs
xchg
aam
mov
sti
mov
pop
mov
pop
repnz
and
pop
adc
shlb
daa
pop
and
sbb
push
repnz
jle
std
rolb
pop
or
iret
loopne
mov
mov
mov
adc
imul
xorl
test
xor
ljmp
bound
ds
mov
jecxz
mov
addb
std
gs
je
and
mov
jge
jo
xchg
xlat
ds
jmp
jno
popf
xor
adc
jge
daa
xchg
rcrb
rclb
mov
int
sbb
divb
jge
enter
jl
jle
xor
jmp
mov
repz
xor
mov
mov
aad
sub
xor
jbe
cli
stc
imul
xchg
pop
aam
and
jo
mov
xchg
xchg
ficoms
test
xor
jne
aas
loope
fs
les
push
aam
movsl
fsts
pop
popa
sbb
mov
rclb
in
xor
inc
stc
lret
mov
ret
mov
insb
mov
mov
or
jge
cmpsl
or
test
js
fidivs
ret
sarl
stc
cmp
push
mov
push
fsubs
rcrl
mov
cmp
pusha
rorb
push
or
lret
dec
mov
xor
mov
fs
enter
inc
jae
mov
xor
imul
mov
push
xor
jle
shlb
rcll
and
jge
aad
mov
rcl
mov
idivb
or
and
xchg
movsb
mov
xchg
pusha
adc
rcl
fldt
cltd
shrl
jge
and
sarl
jo
fstl
popf
sub
int
outsl
jb
mov
sbb
aas
add
jmp
das
jb
jae
mov
leave
in
mov
je
mov
xchg
shl
mov
lahf
lds
or
add
bound
je
loopne
sub
pop
inc
push
cmp
or
dec
add
in
add
ret
out
push
andb
sbb
sub
add
popa
subb
scas
negl
jle
das
dec
inc
leave
jnp
mov
dec
mov
sahf
jbe
push
sbb
push
pop
mov
pop
fwait
lcall
and
ljmp
movsl
dec
insl
mov
ret
stc
sub
mov
mov
cmc
enter
xchg
mov
pushf
inc
scas
dec
rcrb
inc
roll
sub
lea
mov
xchg
popf
inc
add
mov
jns
cmpb
cs
jmp
sahf
stc
mov
or
les
lret
push
hlt
xchg
push
fsubrs
sbb
xorb
add
jo
lock
push
sbb
shll
dec
in
fdivrl
add
mov
add
sbb
push
fwait
push
es
pop
xor
xor
test
test
mov
add
lahf
push
xchg
movsl
ljmp
mov
pushf
xlat
lcall
fnstcw
movsl
cmp
lcall
test
mov
dec
in
stos
out
xchg
daa
jne
lret
cmp
fstpl
mov
mov
mov
sbb
repnz
aad
or
insb
popf
jo
out
in
dec
fdivs
pop
cmp
imul
dec
mov
pop
scas
add
je
fwait
push
rcll
or
out
sahf
inc
insb
scas
ret
insl
or
push
xchg
outsb
aas
mov
mov
in
or
daa
ret
xchg
mov
in
sbb
mov
mov
push
lahf
mov
sub
jmp
and
mov
cmpsb
push
out
or
mov
pop
xor
mov
add
mov
mov
insb
mov
cmc
ficoms
ret
xchg
cmp
cmc
xchg
in
adc
test
and
jg
jne
pand
xlat
mov
stos
dec
rcrb
mov
stos
xchg
stc
ljmp
xchg
jne
and
outsl
setge
sti
clc
jnp
or
mov
testl
cltd
xor
dec
mov
pusha
pop
lock
mov
std
loopne
jg
push
xchg
lds
sub
test
insl
add
add
mov
std
push
pop
cmpl
mov
das
pop
mov
xlat
std
repz
mov
push
push
and
jno
and
insl
mov
dec
call
dec
adc
xchg
mov
cmp
xchg
mov
mov
ss
cli
roll
sti
testb
mov
jbe
xor
push
in
sub
dec
and
dec
xlat
mov
fldt
or
sbb
push
insl
dec
mov
jmp
mov
dec
pop
stos
cmp
mov
loop
adc
repnz
das
adc
inc
shrl
sub
mov
cmc
imul
out
xlat
lods
inc
pop
jg
xchg
das
pop
mov
cld
gs
test
push
xor
lahf
stos
sbb
repz
jae
adc
push
xchg
imul
or
sti
mov
or
out
flds
mov
les
insb
rclb
fsubl
bound
lock
jo
mov
dec
jg
fistl
ja
mov
xchg
jb
mov
dec
mov
jno
inc
pushf
bound
bound
int
shrb
and
mov
sbb
mov
pop
sub
sahf
rclb
cli
inc
movsb
xor
xchg
xchg
pop
insl
xor
mov
pop
xlat
sbb
xchg
mov
xchg
into
inc
or
fadds
outsl
cmp
jmp
sub
lods
and
mov
mov
pop
adc
mov
or
xchg
fstps
mov
inc
mov
shl
push
xchg
dec
mov
push
pop
mov
sbb
pop
roll
dec
imulb
sbb
push
xor
test
and
mov
cmp
jno
paddsb
test
insb
ficompl
pop
cmp
out
jbe
lret
inc
push
sbb
lea
aad
mov
mov
or
call
sbb
jmp
jge
or
ja
add
mov
push
popf
mov
idivb
xor
cmpsb
cld
movsl
pop
or
xchg
push
mov
push
fsubrp
jecxz
ret
and
int3
call
mov
out
fdiv
mov
fucom
insl
js
cmp
adc
inc
pop
pop
jmp
out
mov
rolb
pop
cmpsb
iret
adcb
push
xchg
xor
ljmp
rolb
xor
jbe
cwtl
ljmp
imul
or
mov
xor
jnp
mov
stc
and
mov
vpunpcklwd
mov
mov
test
ret
xor
sahf
movsl
test
aas
mov
mov
xorb
or
add
fsubrl
sbb
mov
sbb
test
cmpsb
inc
mov
fistps
adc
test
adc
movsb
xor
clc
pop
and
mov
repz
mov
or
testl
dec
mov
add
sbb
or
in
stos
out
outsl
lahf
aaa
and
in
lds
enter
insl
mov
test
and
call
ljmp
mov
xor
lcall
inc
int3
or
and
push
mov
mov
stos
sub
aad
jl
xchg
xchg
aaa
in
lods
out
mov
adc
xor
out
aam
outsb
sub
inc
adc
icebp
orb
dec
std
mov
bound
xor
mov
cmpsl
mov
and
mov
mov
xchg
aam
sbb
fwait
cmpsl
popf
cmp
cmp
push
sub
and
in
add
jmp
lods
mov
or
scas
push
fldcw
mov
mov
fdivr
insb
ret
fcoml
sti
cmpsb
enter
jmp
mov
jb
adc
pushf
test
xor
sbb
aam
xchg
cli
in
negb
add
rcl
popf
mov
mov
popf
xlat
iret
dec
mov
mov
adc
fistps
cltd
pop
add
xchg
jle
and
mov
repz
imul
xchg
push
fdivr
out
cltd
xchg
xchg
pop
pop
sub
push
pop
ds
mov
mov
arpl
sbb
add
fdivs
sub
push
pop
clc
and
loopne
pop
fstp
mov
push
fidivrl
icebp
in
mov
test
mov
mov
push
mov
mov
rolb
pop
xchg
lods
aad
lret
je
enter
stc
loope
inc
ret
movsl
mov
mov
mov
lds
mov
or
push
xor
cmpsl
jo
push
add
rclb
notb
cmp
cwtl
aad
inc
lods
sbb
xor
shr
dec
xor
sub
mov
xchg
es
mov
ds
test
aam
sub
sbb
pusha
insb
movsb
in
mov
jmp
add
jns
mov
and
sahf
and
xchg
xor
sbb
negb
inc
sahf
push
cmpsb
mov
outsb
mov
push
push
movsl
push
push
cmpsb
adc
ljmp
sahf
push
dec
test
push
pop
insb
sti
pop
imul
test
hlt
test
ret
fadds
roll
fldl2t
imul
cmpsl
add
or
rcrl
mov
fnstenv
mov
jnp
xor
cmp
xchg
loope
inc
jp
fstps
data16
jg
mov
mov
cmp
fwait
sbb
add
fcomp
xor
dec
ss
in
mov
jl
aas
xor
sbb
pop
push
xchg
push
or
sti
lea
mov
mov
lods
mov
jno
or
push
pop
dec
or
cltd
div
add
push
xchg
mov
stc
adc
les
loope
mov
xchg
pop
je
cmpsl
jo
lods
aad
xchg
sbb
mov
div
add
jb
divb
jecxz
int
sbb
loope
sbb
sbb
in
and
loope
enter
sbb
jmp
jecxz
imul
push
sbb
in
add
add
adc
movsb
jg
inc
cli
xchg
popf
div
sub
aad
ja
sbb
push
jb
cld
cmp
in
xchg
fisttpl
ror
les
sbb
lock
xchg
dec
mov
mov
mov
movhps
mov
lods
movsb
cmpb
push
push
add
mov
test
daa
repz
mov
sahf
xchg
and
in
in
dec
fisubs
iret
cmp
fstp
mov
out
and
mov
lds
lds
out
rol
sahf
aas
sub
mov
pop
lock
repz
dec
pop
and
sub
xchg
fstps
repnz
adc
adc
or
push
ret
sbb
scas
fcmovbe
inc
xor
adc
mov
push
inc
mov
lea
pop
dec
push
lea
daa
sbb
popa
adc
in
push
push
std
movsl
subb
ds
les
mov
lret
repz
fs
or
mov
cmp
xor
add
movsb
sub
lahf
sub
push
ljmp
in
dec
subb
jmp
ja
xor
ss
pop
pop
or
shll
push
xlat
lods
sar
rclb
faddl
push
clc
sub
js
lods
out
ja
mov
testl
xor
add
ds
addr16
add
adc
sub
inc
lock
mov
rorb
cmpsb
call
or
jmp
iret
lahf
pop
ret
cmp
int3
imul
ds
xor
inc
fs
mov
sbb
mov
mov
in
lret
lods
push
add
jmp
pop
xor
jno
push
out
mov
test
add
cmpl
add
iret
add
jg
add
fstl
xchg
icebp
in
int3
and
imulb
fiaddl
xlat
daa
pop
leave
gs
mov
add
xchg
fcoml
or
mov
movsl
arpl
mov
mov
or
xchg
imul
int3
mov
stc
jle
inc
and
mov
lds
xchg
push
push
int3
mov
adc
jae
rcl
fidivl
das
daa
jg
insb
in
add
test
std
mov
jb
mov
inc
mov
ss
add
shrd
mov
jecxz
xor
or
hlt
scas
movsl
fstl
pop
insl
outsb
arpl
leave
xor
std
dec
and
repnz
js
stc
scas
mov
fucomip
daa
mov
mov
popa
clc
pop
shr
fwait
test
cmc
xchg
jae
fucomp
repz
scas
dec
mov
jae
mov
ds
sbb
jle
movsb
jb
sarb
in
nop
ret
aaa
bswap
mov
fcmovnbe
push
fsubrl
sub
jns
in
shlb
sbb
or
mov
xor
mov
xchg
sbb
pop
sub
aam
ja
push
cld
adc
fdivrp
cltd
ror
or
scas
xor
add
cmp
xchg
call
fs
jmp
out
add
ja
jns
inc
rolb
cli
div
gs
push
rolb
loope
aam
iret
clc
push
pusha
or
out
stos
jle
push
dec
push
insl
lds
stc
pop
add
in
sub
in
mov
cmp
sub
pop
jns
adc
iret
jnp
rcrb
popf
mov
andb
pop
test
xchg
cmp
je
push
mov
fstpt
lcall
andb
fstpl
sub
push
ljmp
test
mov
das
mov
stos
les
mov
mov
int3
popf
out
and
jle
xor
dec
xchg
nop
mov
nop
cwtl
lret
addr16
push
pop
and
daa
inc
out
jmp
lods
mov
das
sbb
dec
jmp
inc
repz
popf
out
icebp
paddsw
dec
mov
push
adc
ret
movsl
pop
test
push
ret
push
out
cwtl
push
xchg
or
pop
test
cmp
lret
mov
push
sbb
or
push
cmp
sbb
sbb
ss
sti
inc
sub
rorb
lret
lahf
and
insl
lret
out
test
sbb
shrb
in
cmc
mov
mov
test
mov
fwait
lahf
int
dec
cli
js
bnd
cltd
lahf
fs
test
in
lea
dec
cld
es
scas
shl
cld
or
cmp
cmpsl
add
dec
rcrl
call
jnp
out
je
cmp
cld
fisubl
xlat
xchg
lret
jl
loopne
jg
cwtl
enter
lret
cmp
xchg
jo
mov
jmp
sub
insb
inc
lods
dec
testb
ljmp
cli
icebp
cmp
jno
lret
push
cltd
dec
push
sbbb
test
xor
pop
sbb
repz
scas
faddl
shrl
in
in
wrmsr
out
pusha
mov
nop
fistpll
fcomps
add
out
mov
sbb
dec
in
adc
add
jge
fistpl
mov
call
clc
mov
sbb
mov
add
mov
push
and
adc
daa
jg
loope
mov
adc
mov
jmp
cmp
push
add
sub
das
adc
data16
sbb
mov
aad
daa
sbb
add
lret
inc
mov
mov
orb
std
lds
mov
mov
imul
in
in
push
lahf
ss
daa
aaa
stc
mov
lds
call
test
and
inc
and
pop
test
adc
lods
sti
jmp
js
jbe
ljmp
out
dec
mov
out
jae
fidivl
repz
dec
mov
or
jp
jl
inc
mov
ljmp
jnp
mov
jbe
push
pop
imul
and
ss
pop
negl
jle
jmp
popf
out
cmp
gs
in
add
mov
out
dec
cli
add
add
fucom
and
loope
fsubl
pop
out
cld
mov
dec
inc
inc
jo
cwtl
popa
imull
xchg
test
ljmp
arpl
aam
mov
mov
into
loope
cmp
jecxz
xchg
ret
nop
pop
fstps
std
or
clc
sub
sbb
jae
loope
push
sbb
cmp
sbb
mov
shll
in
adc
shr
call
out
dec
rol
mov
into
mov
cwtl
arpl
and
int
lock
mov
jbe
cmp
pop
dec
xor
int3
mov
or
mov
mov
or
or
call
add
es
lcall
pushf
sahf
add
push
cwtl
ud2
mov
pop
jo
aaa
dec
scas
imul
ja
and
mov
jnp
mov
push
mov
int3
outsb
xor
sub
lcall
out
pop
add
lretw
sti
push
xchg
lret
and
push
and
push
out
lret
cmpsl
out
push
sahf
sub
cld
leave
sar
add
jnp
sub
sbb
roll
push
and
jo
sbb
adc
shr
push
mov
push
out
or
je
subb
lods
pop
jge
repz
push
btc
ret
or
xchg
or
loop
xchg
adc
and
lea
pop
xchg
xor
mov
shl
or
cmp
lahf
ret
scas
mov
lahf
mov
aad
push
adc
or
cmpb
add
call
pop
sti
les
jge
sub
or
adc
add
xchg
xor
leave
push
or
xchg
popa
mov
mov
cmp
in
in
ret
aad
mov
mov
mov
rcrl
outsb
sub
add
aaa
loop
out
jae
xor
jmp
sub
arpl
fildll
xor
cmp
add
xchg
cmp
int3
jmp
int
popa
lahf
or
loope
sbb
cli
dec
rorb
data16
lods
in
iret
insl
pushf
mov
fimuls
xchg
fbstp
cld
push
cmp
movsl
in
and
mov
mov
lds
sbb
stc
leave
mov
mov
pop
sub
fwait
pop
sahf
sahf
lds
pop
push
pushf
jbe
mov
xchg
dec
push
jge
add
push
xchg
int
xchg
xlat
lcall
lret
scas
xor
push
call
pop
adc
and
jmp
out
sbb
insl
cmp
sbb
or
out
push
mov
jno
cli
mov
jb
les
andl
fdivrs
daa
push
push
stos
lds
sti
clc
or
or
mov
jl
xor
rcrl
and
scas
stc
mov
ficomps
cmp
mov
lods
mov
push
popf
cli
push
push
incl
adc
scas
aaa
out
cmpsb
adc
add
stc
adc
jnp
cli
lahf
inc
sbb
out
mov
lods
adc
cmp
sahf
outsb
adc
test
push
repnz
xchg
enter
js
rcll
xchg
mov
cmp
mov
es
imul
xor
dec
cmp
orl
pop
test
mov
dec
gs
rolb
iret
outsb
jnp
sti
or
fdivl
rol
lcall
pop
cmc
jmp
push
pop
fstpl
rcl
ljmp
stc
and
pop
sbb
stc
inc
jae
xor
pop
fdivrs
mov
jae
hlt
pop
jae
sbb
nop
jne
jmp
and
aam
xchg
repz
fldl2e
icebp
adc
mov
push
daa
hlt
shr
cld
stos
xchg
cltd
clc
push
and
mov
dec
fiadds
and
lods
push
testl
xlat
ret
jns
fcomp
fcoms
lret
lock
not
mov
aam
loope
push
sub
xlat
xor
cmp
xchg
jl
or
inc
xchg
sarl
in
mov
std
xor
xchg
mov
mov
push
or
lods
mov
int
ds
jecxz
popf
movsb
adc
popa
imulb
out
clc
hlt
repnz
xchg
bound
or
lret
mov
mov
push
repz
jecxz
fcomps
aad
in
mov
jmp
mov
rol
mov
jmp
jno
leave
lahf
push
mov
int
lret
add
sub
fxch
test
lds
ficompl
enter
leave
rolb
stos
dec
add
in
insl
call
xor
clc
popf
pop
enter
mov
push
icebp
dec
cltd
ljmp
push
pop
lods
imul
sbb
cld
xor
xchg
dec
sbb
rcrb
ficoml
aad
sbb
push
sarl
shll
mov
cwtl
push
add
aam
dec
xor
add
jle
xchg
int3
and
daa
mov
fwait
lds
pop
notl
push
adc
cmc
stos
cmc
jecxz
popf
jns
jbe
out
ja
movsb
add
mov
fidivrs
adc
jecxz
sub
movl
xlat
je
push
cmp
rcll
xor
mov
mov
sub
aaa
inc
sbb
push
dec
or
adc
and
pop
mov
jmp
push
imul
push
dec
jmp
add
lret
mov
pop
jne
lret
or
lods
cld
cmp
mov
cmpsl
pop
mov
inc
mov
ret
dec
mov
adc
adc
inc
in
in
push
pop
rol
ja
sbb
and
movsb
lcall
add
test
mov
fisttpl
mov
fstl
add
lds
popa
arpl
ss
mov
into
mov
mov
scas
into
jns
lea
int
pop
or
fimuls
cmpsb
jns
jno
adc
arpl
mov
movsb
cmc
push
and
pop
int
dec
xchg
and
mov
push
jge
leave
cwtl
push
jns
xchg
pop
andl
clc
and
arpl
into
aam
in
and
cltd
xchg
and
jnp
jb
rorb
sub
mov
dec
repnz
sbb
pushf
pop
int
mov
inc
scas
idivb
lret
add
sbb
or
jge
in
xchg
mov
push
mov
or
jmp
add
outsl
lret
sti
lret
push
add
lahf
sub
loop
inc
ret
orl
lods
xor
xchg
addr16
rol
or
lret
pop
push
jg
inc
mov
mov
fisubrs
out
jg
loop
jge
sub
pop
jl
sbb
mov
add
adc
aas
pushf
filds
push
mov
je
sub
test
testb
stc
xorb
lahf
and
stos
mov
dec
dec
lock
enter
into
cmp
mov
fldl
jmp
repnz
cmpsl
cli
in
test
scas
or
pop
not
hlt
sbb
pushl
int3
or
mov
jae
pop
icebp
mov
push
enter
mov
aad
pop
push
dec
dec
fcoml
ret
and
scas
mov
in
xchg
cmpsb
ret
das
pop
bound
mov
inc
inc
add
or
out
sub
add
push
add
arpl
repnz
mulb
cmp
in
cmpsl
dec
dec
les
int3
fisttps
push
or
bound
ret
lea
jecxz
jnp
cmpsb
movsl
cld
and
mov
leave
mov
add
push
sub
adc
xlat
sahf
cmp
or
pop
mov
in
add
add
push
or
sbb
fldt
pusha
out
dec
pop
fs
mov
negb
fs
mov
leave
sbb
insl
data16
push
sahf
lock
cmp
ss
jmp
in
stos
fwait
call
bound
in
aaa
ret
movntps
or
cmp
jns
inc
cmpsl
data16
dec
jl
fldt
pop
jbe
push
pop
into
fsub
lahf
or
or
movl
movsb
jle
or
mov
adc
adc
hlt
mov
pop
xchg
mov
mov
xlat
sti
xor
stc
mov
mov
pop
fwait
dec
xor
pushf
cld
aam
jmp
daa
movsl
cli
popf
call
mov
setne
adc
int
push
das
push
jp
clc
dec
movsb
into
mov
lock
xor
movsl
jns
int3
aas
test
jp
jmp
mov
mov
jecxz
inc
and
gs
xchg
xor
pop
negl
out
adc
xchg
and
int3
mov
sarl
pop
mov
push
add
bound
in
orl
xchg
sarb
pop
les
bound
leave
lods
mov
cmpsb
mov
jb
repnz
aam
sbb
or
inc
or
add
or
xor
xor
pop
or
jno
push
jmp
cmp
stos
fisttpl
mov
xchg
adc
adc
sub
sbb
cmp
or
fimuls
popf
ret
fs
adc
sbb
push
call
mov
arpl
push
and
cmp
and
xchg
repnz
mov
ret
icebp
out
leave
int
mov
in
mov
fisttpl
mov
popa
dec
xchg
imul
bound
mov
push
stos
inc
call
int
xor
mov
or
fsub
fdiv
mov
or
ret
lret
popa
jo
jae
pop
aad
sarl
loopne
add
dec
ret
push
or
xchg
aaa
dec
fwait
mov
xchg
mov
xor
adcb
clc
push
cltd
mov
call
negl
inc
leave
add
adc
insb
push
cwtl
push
jb
movsb
sarb
ja
shll
mov
sbb
dec
adc
or
pop
btrl
test
xorb
nop
sahf
xchg
loope
jge
fisttpl
shlb
mov
sahf
test
sbb
and
pusha
in
or
mov
push
xchg
pop
jbe
rorb
push
xchg
repz
je
and
xlat
xchg
xchg
push
lea
or
dec
adc
push
xor
cmc
and
mov
les
and
outsl
mov
jmp
cmpsb
mov
jnp
or
shlb
add
mov
dec
or
in
test
pop
sub
and
cltd
popf
pop
test
and
inc
ljmp
stc
push
lret
subb
pop
iret
add
ljmp
inc
mov
fcoml
jge
xchg
mov
xorb
or
jne
fsubl
jle
push
scas
add
mov
add
dec
inc
inc
xor
adc
pop
add
xlat
mov
pop
inc
xor
dec
outsb
imull
dec
pop
xchg
sub
cvtps2pd
cmp
ljmp
fs
dec
xchg
add
loop
cltd
xlat
imul
movsb
jecxz
jge
mov
cltd
fs
or
pop
lret
xor
sub
sub
pop
push
cltd
popf
or
leave
sahf
mov
jp
inc
mov
rol
ret
or
stc
out
mov
mov
mov
push
lahf
jp
xchg
test
sahf
leave
push
add
jle
lock
or
inc
nop
push
fnstcw
ret
cmp
sub
mov
sbb
jge
shr
push
addl
movsb
mov
lret
push
movsw
leave
or
popa
into
xor
fstpt
or
mov
adc
xor
iret
movb
stos
xor
and
mov
push
enter
repnz
mov
movsb
fxch
ljmp
into
pop
add
frstor
cmp
or
cmpsb
loope
nop
ret
jg
or
rorl
outsb
outsl
cmpsb
xor
loop
or
sbb
insb
shlb
and
syscall
fwait
xor
fldl2e
in
mov
movb
mov
mov
sarb
jbe
jo
out
push
add
mov
inc
inc
addr16
mov
jmp
pushf
pop
out
hlt
fistpl
psubb
add
mov
lret
mov
lds
incl
lret
leave
mov
and
pop
movsl
adc
std
scas
jmp
adc
rcll
dec
pop
mov
xor
ljmp
inc
or
pop
mov
into
sarl
push
mov
adcl
fwait
mov
lret
out
mov
push
pop
repz
push
lods
xchg
ret
mov
push
fildl
jecxz
cwtl
jecxz
mov
dec
outsl
sar
cmpl
xchg
pusha
sub
push
setne
out
xchg
movsl
mov
xchg
and
loop
fistpll
out
ja
es
push
mov
mov
pop
xchg
mov
jb
int3
into
fildll
jge
sahf
fidivrs
mov
lsl
or
jmp
ljmp
jnp
xor
sahf
pushf
clc
fstl
sbb
pop
rcrw
hlt
in
repz
adc
push
sub
out
add
or
dec
dec
inc
ljmp
pop
popa
and
movsb
ljmp
mov
jmp
das
xchg
addb
testb
pop
mov
aas
mov
jo
pop
testb
mov
icebp
xor
xor
and
mov
xchg
jmp
pop
xchg
xor
add
mov
icebp
repnz
xor
test
cmp
dec
adc
dec
jns
test
into
adc
xor
lea
outsl
out
inc
inc
add
lret
test
dec
loop
test
dec
mov
std
cmp
pushf
imul
aad
test
in
push
into
adc
aaa
push
jmp
repnz
cli
xchg
mov
sarb
cmp
mov
sbb
jecxz
scas
mov
fmull
ss
shr
icebp
push
mov
gs
out
out
xchg
lcall
adc
and
fwait
js
daa
jnp
int
out
ss
movsl
mov
shrl
dec
sub
cmc
inc
scas
jae
mov
js
push
mov
rcrl
push
push
dec
pushf
jnp
stc
decl
int
sub
in
pusha
sub
pop
loop
ret
movsl
aas
adc
xchg
mull
into
add
movsl
jecxz
xor
or
adc
je
iret
mov
loop
cwtl
fdivp
mov
or
jecxz
push
push
pop
loopne
clc
test
movsb
adc
in
push
fsubrl
cmp
mov
fwait
sti
jae
mov
or
add
cmp
xchg
sub
iret
and
mov
loope
dec
mov
jmp
ret
stos
ficoms
xchg
jle
adc
sbb
pop
jmp
inc
add
mov
icebp
std
leave
in
aad
insl
mov
je
cli
fiaddl
lods
leave
jne
push
cs
fidivrs
xchg
enter
in
mov
mov
and
loop
push
push
je
push
andb
in
and
adc
dec
lret
aad
cmp
or
or
cmp
sbb
dec
mov
das
mov
cmp
cmpsb
arpl
mov
or
ljmp
jl
dec
xchg
push
stc
inc
mov
in
push
loop
inc
or
pop
jne
ret
xor
movsl
cmpsb
cld
es
mov
xchg
das
and
nop
int3
sbb
xchg
pop
scas
mov
or
cmp
lock
addr16
dec
outsl
movsl
mov
xor
bound
mov
repnz
mov
loope
hlt
jae
or
xchg
stos
ret
addr16
add
stos
hlt
cmpsl
cltd
nop
jmp
cmp
mov
fistl
lock
scas
fistl
jne
mov
and
adc
movsb
movsb
cli
pusha
enter
fbld
daa
rorl
popf
cld
add
nop
push
mov
rol
in
cmp
loope
inc
cwtl
pop
mov
cmpsl
ljmp
aam
sarl
or
ret
out
jmp
mov
jne
in
xlat
lock
inc
ds
jns
leave
add
lods
mov
in
stc
fs
rol
call
lods
decl
jg
lcall
jge
mov
jg
mov
stos
int3
and
xchg
das
shll
dec
adc
pop
mov
cmp
mov
jo
out
pop
jne
and
pop
mov
add
add
rorl
icebp
call
rcll
repnz
js
xor
mov
stos
mov
cmp
xchg
call
ret
pop
dec
mov
lea
push
xor
cltd
iret
scas
sarl
in
adc
adcb
xchg
lret
or
mov
cmc
jo
xchg
cmp
xchg
sub
stos
gs
mov
push
scas
push
or
mov
outsb
ret
jns
pop
dec
out
mov
out
dec
shll
mov
popf
adc
shl
mov
jp
adc
mov
jecxz
fcmove
jmp
and
sbb
pop
lock
loop
lea
jg
pushf
or
call
aad
not
insl
push
repz
mov
clc
rorb
fimuls
add
sub
or
out
outsb
pop
mov
movd
jno
mov
enter
xorl
out
dec
fsubrs
jmp
push
lock
sti
jl
cmp
test
js
xor
iret
jo
scas
xchg
mov
dec
call
not
dec
enter
sbb
hlt
sar
pop
lret
inc
mov
adc
fcoms
pop
mull
lret
insb
icebp
cmp
mov
rcrl
push
adc
int
adc
cltd
outsl
add
repnz
cld
hlt
clc
arpl
or
pop
shl
fadd
repz
in
sbb
fidivl
pop
ret
imul
jnp
mov
mov
movsl
inc
ss
insb
arpl
repnz
adc
push
adc
loop
xchg
imul
inc
mov
lods
mov
or
iret
xchg
setge
insl
jmp
mov
mov
jno
jbe,pt
ljmp
mov
es
lret
jmp
mov
push
mov
adcb
jne
lret
nop
negb
aaa
aad
movsb
aam
mov
add
setb
cmp
mov
or
bswap
stos
xor
sarb
jge
shll
mov
gs
fwait
cs
scas
filds
fisubs
push
or
in
inc
xor
inc
lea
inc
sbb
add
mov
repz
push
mov
dec
adc
xchg
rolb
call
sbb
adc
xor
std
jp
movsb
push
fmull
rcrb
cltd
data16
icebp
mov
mov
pop
inc
jo
mov
dec
jg
push
lcall
cli
pusha
cld
mov
lds
les
shlb
in
aad
add
jg
or
sub
mov
mov
jl
xor
fidivrs
movsl
mov
int
dec
iret
and
lds
sub
sbb
sub
cmp
jmp
dec
shlb
dec
jne
mov
insl
popf
mov
add
inc
sub
cld
inc
stos
movsl
mov
jle
push
mov
jns
stos
adc
loop
cmpsb
dec
xchg
jmp
ja
jae
in
fisttpll
dec
jmp
out
pop
lret
lods
gs
stc
jl
mov
loopne
es
and
in
sarb
andb
mov
push
dec
jne
inc
cmp
iret
jmp
dec
mov
sahf
jbe,pt
icebp
dec
xchg
out
hlt
mull
fdivrs
cmp
mov
scas
pand
cmp
sub
mov
xchg
fstl
and
xchg
push
fldl
ret
stc
std
push
fimuls
sarl
lahf
mov
std
mov
cmp
mov
mov
mov
cld
lock
lds
ljmp
addr16
lcall
jae
rcrb
or
in
add
sbb
outsb
cmp
and
xchg
fs
pop
popf
sarl
ljmp
inc
adc
pop
daa
in
adc
pop
gs
jecxz
mov
push
dec
je
movb
add
xorb
jge
pop
fcompl
clc
in
mov
mov
lods
cwtl
mov
test
fwait
mov
int
lret
outsb
or
out
arpl
and
sti
inc
faddl
jo
cwtl
sti
mov
je
pop
fldcw
ret
lahf
sub
in
insl
mov
jnp
inc
lcall
sub
push
jp
clc
mov
pushf
pop
fsub
imul
adc
adc
add
imul
push
cmp
xchg
sub
pop
notb
aaa
cltd
dec
popa
mov
jp
pusha
xchg
and
mov
pushf
mov
and
xor
dec
and
mov
pushf
adc
filds
xchg
in
shrl
jo
adc
push
xchg
mov
inc
mov
test
jmp
test
jg
add
mov
mov
mov
and
pop
movsl
out
jmp
xchg
mov
xchg
and
cmp
xor
mov
in
sbb
xor
or
ret
je
fwait
or
mov
jl
and
test
cmpsl
and
in
fcomip
sbb
add
popf
cld
cmp
sahf
mov
lret
sbb
aas
sub
dec
aas
or
mov
shlb
in
mov
mov
and
mov
sub
jae
in
mov
das
jg
rcll
jle
aas
adc
xor
mov
mov
orb
dec
sbb
sbb
ffreep
imul
loop
push
jnp
jp
mov
inc
jbe
sub
adc
in
daa
int
xchg
test
js
orl
stos
int
out
push
sbb
rcr
mov
dec
lods
stos
pushf
push
outsb
outsl
mov
or
enter
lock
and
aad
in
pop
mov
sbb
data16
pop
sahf
shrb
push
sarb
scas
pop
fistl
adc
or
sbb
push
or
dec
sub
stc
fnstenv
fsubrp
sub
cmpsl
or
jge
stos
cmp
sbb
repz
or
leave
xchg
sbbl
push
orb
ds
add
lea
jbe
and
es
jbe
inc
jmp
rcl
adc
std
sub
scas
decb
add
ljmp
sub
dec
shll
push
add
repz
jo
jae
cld
movsl
cmp
mov
pop
into
loope
loopne
shrl
cmpl
mov
and
lea
cld
sub
jmp
sbb
sbb
mov
outsl
sub
and
jae
sbb
cmpsb
adc
stos
add
mov
sub
mov
jecxz
stos
rcr
rol
push
mov
in
scas
shl
mov
lcall
xchg
in
xchg
cmpsb
add
dec
outsl
pop
pop
fistpl
int
fidivrs
fs
xor
inc
mov
not
iret
hlt
dec
fsubl
jge
fsubs
mov
xor
mov
or
mov
test
pop
cld
xor
pop
insl
inc
insb
sub
pushl
mov
cltd
or
dec
cmp
push
mov
lods
sbb
hlt
in
popf
push
mov
xchg
mov
std
rcl
in
or
aad
cwtl
ds
xchg
xchg
es
xor
mov
adc
inc
mov
je
xlat
push
fstpt
mov
mov
stos
mov
jl
sbb
cmp
stos
adc
std
push
xchg
in
push
mov
repnz
adc
pop
testl
jnp
or
mov
sub
rolb
negl
add
jl
out
cmc
lret
dec
icebp
call
cmp
pop
or
mov
jg
popa
mov
push
xor
sahf
imul
fdivs
sti
fstl
mov
xor
add
xor
inc
jp
xchg
es
mov
mov
dec
dec
out
sbb
in
xchg
cli
dec
scas
mov
cmp
dec
push
jb
enter
xor
mov
in
jl
frstor
repz
push
rolb
mov
dec
sbb
cli
and
mov
sar
mov
aam
loop
or
mov
mov
lods
int
adc
or
std
sbb
iret
mov
mov
rol
idiv
lret
sbb
or
jno
cld
or
jae
shrl
mov
fcmovnb
mov
into
xor
repnz
stos
stos
js
xchg
mov
rcll
lahf
stos
push
sbb
cmpsb
mov
imul
fcmovne
int3
mov
adc
mov
xchg
cmp
sbb
testl
stos
add
mov
dec
jae
int
sub
loop
imul
dec
cmp
push
jno
mov
dec
std
mov
shr
cltd
mov
rorb
and
or
call
call
js
lds
adc
xchg
iret
sahf
jge
push
sbb
addr16
dec
fiaddl
push
pop
sub
inc
mov
enter
aad
xor
rcr
mov
insl
lods
pop
mov
into
test
bsr
dec
push
cmp
cmp
mov
outsl
pusha
and
or
lods
dec
inc
xor
das
jecxz
inc
adc
fst
or
sub
and
or
mov
sti
jmp
inc
outsb
inc
cmp
and
ret
cmp
mov
cltd
movsl
in
negb
lret
icebp
and
push
pop
into
jbe
cmp
rol
mov
adc
loopne
and
in
add
jle
jmp
loope
shr
js
push
dec
inc
xchg
movsl
fstps
ljmp
std
pop
xchg
and
jge
xor
iret
xorl
mov
inc
insl
ljmp
adc
subb
cmc
dec
xchg
cmp
les
loope
mov
jns
and
lret
sub
sub
add
mov
xlat
movsl
jnp
mov
inc
cmp
jno
je
cli
mov
or
mov
push
xchg
push
mov
mov
ud2
sti
jp
push
aaa
fidivrl
lods
cmp
xchg
mov
mov
pop
in
fisubs
mov
outsb
sbb
idiv
aad
iret
add
push
int
and
xchg
lds
xchg
int
inc
xchg
sbb
faddl
arpl
int
xor
inc
scas
and
cmc
jns
xlat
add
add
or
cmpsb
add
fstpl
call
jnp
leave
xor
cmc
das
add
sbb
sbb
mov
xor
in
inc
leave
mov
add
mov
mov
mov
movsb
or
lock
mov
and
push
insl
mov
je
add
enter
lods
cli
pop
jb
xor
or
adc
adc
in
mov
xlat
mov
adc
mov
loope
or
in
or
adc
aad
mov
sub
pop
jmp
inc
insb
jecxz
jo
jmp
ja
in
rcrl
jmp
mov
cmp
lcall
mov
mov
jge
sbb
mov
imul
xor
inc
push
lret
jnp
test
jns
inc
jle
mov
icebp
adc
ret
push
outsb
mov
mov
sbb
loop
inc
sbb
imulb
aad
jl
push
cmove
cmp
mov
clc
lcall
push
cmp
mov
sbb
push
push
fstps
sub
mov
stos
push
mov
sarl
or
dec
loopne
jb
sbb
sbb
fwait
out
addr16
sbb
inc
push
mov
cs
lock
sub
mov
in
in
mov
mov
and
push
lcall
and
add
loop
mov
jecxz
sti
sahf
daa
mov
cmpsb
iret
insl
dec
or
push
sbb
mov
cltd
fstps
sub
or
jmp
test
insb
ja
jp
call
shll
mov
lahf
daa
sub
sar
jl
loop
movsb
fiaddl
push
lods
lret
in
mov
cmp
out
push
or
jl
gs
outsb
daa
int
adc
and
xor
dec
inc
xor
lea
pop
mov
out
add
enter
mov
iret
arpl
lcall
adc
enter
cmp
rcr
mov
push
mov
fst
psubb
and
xlat
jle
jge
out
sbb
sbb
ss
cs
mov
dec
dec
jmp
mov
and
jl
les
cld
pop
pop
mov
ljmp
jl
mov
in
mov
cs
rclb
push
mov
lods
mov
adc
or
frndint
push
sub
mov
in
insb
push
push
add
flds
adc
repnz
add
jp
xor
cmpsb
bound
pusha
fisubl
mov
adc
mov
rcl
fisubrl
dec
int3
mov
or
push
faddl
out
or
loop
test
negb
leave
stos
stc
shrb
and
sub
cltd
cmpb
shrl
loop
pusha
icebp
movsb
push
icebp
cmpsb
and
aam
mov
mov
das
test
fmull
ljmp
jo
ljmp
pop
lret
orb
hlt
and
filds
add
outsl
int3
jb
or
stc
pop
cmpsl
mov
mov
lods
or
jmp
outsb
insb
rorb
mov
add
pop
sub
cmc
jge
sub
inc
mov
sub
loop
lahf
sub
fadd
nop
divb
pop
mov
fmull
lcall
test
xchg
sub
mov
pushf
addr16
call
mov
jbe
dec
jmp
inc
mov
jle
jg
cmp
aad
sub
or
mov
les
flds
xchg
pop
push
add
push
aam
orl
fcmove
sbb
fisubrl
inc
push
fcmove
je
insl
shr
je
cmpl
aam
xor
jecxz
pop
jmp
mov
cmc
rcl
xor
mov
fcom
ret
mov
sub
shll
cmc
fmull
lcall
test
xchg
sub
mov
pushf
fdivr
call
jg
jbe
dec
jmp
inc
js
jle
jp
cmp
aad
sub
or
scas
les
flds
scas
pop
push
add
push
aam
orl
fcmove
sbb
fisubrl
inc
or
je
rcl
je
cmpl
leave
ds
xchg
outsb
pop
jmp
mov
cmc
rcl
mov
push
fimuls
add
fidivrl
mov
dec
mov
dec
int3
jge
pushf
mov
mov
mov
mov
pop
es
lahf
int3
mov
adc
std
repz
jge
xchg
in
ljmp
test
adc
sub
mov
push
add
gs
int3
mov
or
lahf
push
repnz
mov
std
xchg
pop
mov
aas
movsb
sbb
dec
movsl
or
ljmp
lret
xchg
mov
das
test
shr
in
aam
fidivrl
repnz
arpl
mov
push
fildl
lods
jmp
push
movsb
test
fcoml
imul
arpl
mov
lock
mov
fisubrs
add
jbe
sub
mov
add
mov
adc
dec
popl
test
enter
sbb
or
mov
shlb
and
call
incb
push
mov
xchg
ret
or
mov
je
push
rcrb
mov
xor
icebp
adc
sbb
andb
stc
clc
stos
sbb
mov
mov
jge
fsubs
rorl
pop
inc
xor
mov
in
push
movsb
fsubr
xchg
mov
adc
sbb
push
add
fisttpl
xchg
ror
xchg
shlb
adc
mov
mov
lds
jle,pt
mov
inc
frstor
pop
dec
int3
dec
call
insb
into
ds
mov
mov
or
popf
jbe
push
sbb
mov
mov
jmp
push
mov
mov
testl
lods
sub
scas
out
insb
movsl
iret
stos
repnz
mov
mov
out
mov
push
cltd
insb
mov
xlat
ror
dec
push
sbb
rep
aam
imul
adc
outsl
test
std
lret
xchg
mov
mov
jno
fsubrs
aad
sbb
sbb
rol
inc
jae
push
cmp
cmp
pop
sbb
fistpll
repnz
lods
add
mov
pop
mov
lret
or
mov
jmp
mov
or
cmp
xchg
in
lock
pop
test
xchg
mov
jns
test
mov
jle
sub
xchg
or
mov
mov
pop
jne
cmp
push
dec
pop
fadds
mov
cmpsl
ficoms
mov
cld
fwait
sbb
or
sub
jmp
in
mov
in
sarl
pop
mov
inc
repnz
cvtps2pd
in
xchg
adc
rclb
clc
xor
adc
ret
mov
sti
mov
into
add
out
inc
pop
push
mov
int3
mov
stos
mov
mov
in
movsb
sti
cmpsb
sbb
jnp
dec
call
pushf
popf
or
ljmp
add
movsl
gs
cmp
inc
mov
ret
dec
xchg
mov
rcll
insb
mov
outsl
loop
mov
clc
mov
jle
inc
adc
loopne
scas
aas
out
jnp
fiaddl
mov
jbe
mov
mov
cld
in
arpl
or
ljmp
lret
stos
mov
fldcw
jmp
jecxz
mov
push
repnz
mov
in
xorl
mov
movsb
mov
or
movsb
loopne
xchg
inc
cmp
ret
adc
cmp
push
xchg
insl
mov
cmp
cwtl
mov
adc
add
pop
rorl
scas
or
sbb
outsl
mov
mov
repnz
mov
and
and
mov
sub
mov
mov
hlt
or
lea
insb
sub
add
bound
enter
repz
or
jns
adc
cmp
push
call
mov
int3
fs
adc
lock
push
loopne
int
xor
std
push
jp
mov
pop
inc
movsl
outsl
xorb
mov
mov
and
aam
shll
cwtl
frndint
mov
inc
pop
call
xor
inc
push
dec
pop
rcrb
popa
fadd
mov
repnz
cmp
or
xor
or
push
xor
xor
adc
pop
test
lods
sar
jecxz
inc
mov
sub
in
mov
adc
and
stc
lcall
and
out
roll
adc
aaa
sti
sbb
mov
fimull
xlat
jge
or
cmp
out
aad
jb
aad
push
mov
repz
adc
cmpb
outsl
mov
xlat
dec
cmp
jno
leave
push
int
inc
fsub
sbb
sbbl
adc
cmp
mov
dec
scas
inc
shlb
mov
imul
fcoml
add
cmp
mov
loopne
sarl
fimull
lods
in
int
in
lret
aaa
mov
ds
mov
xchg
lret
lret
int3
push
leave
add
lret
xchg
aad
sti
sbb
in
jg
mov
add
ret
sbb
shl
in
cmpb
adc
add
loope
lods
loopne
ja
sub
dec
add
daa
popf
push
loopne
mov
aaa
mov
ret
out
xchg
sub
xchg
jns
fucomp
xchg
scas
or
add
inc
mull
cmc
mov
insb
out
sbb
pop
jb
inc
test
mov
in
sahf
adc
mov
sub
repz
inc
and
push
jae,pt
jnp
lahf
test
inc
jb
xor
mov
sarl
pop
and
or
cmp
les
mov
xchg
sbb
cmpl
shl
les
xchg
aaa
sahf
or
sub
out
inc
jb
add
sbb
xchg
fwait
out
fucomi
jl
insl
int3
add
test
push
mov
addr16
inc
fsubrs
xor
stos
into
icebp
pop
mov
inc
xchg
cmp
inc
push
arpl
jmp
push
sub
lods
popfw
std
mov
lahf
fsts
call
mov
pop
mov
push
jnp
shr
push
and
sub
ljmp
cmp
adc
into
shufps
repnz
outsl
mov
in
mov
hlt
stc
out
test
adc
add
add
fdivrl
shlb
insl
adc
es
adc
push
jmp
mov
stos
xchg
inc
sahf
add
sub
test
dec
popf
inc
mov
push
ds
push
mov
shrb
shlb
sbb
mov
fcmovnu
adc
jge
cmp
jecxz
cmp
dec
arpl
ds
insl
ljmp
dec
lds
in
cmp
adc
sub
daa
add
clc
stc
mov
test
loop
jno
iret
test
push
fmul
shl
fidivl
lret
jle
ds
cmp
inc
std
dec
and
add
scas
or
dec
pop
lds
test
mov
ds
faddl
mov
mov
or
add
in
lds
adc
xchg
loop
xchg
sbb
fists
pusha
in
out
adc
sbb
mov
xchg
stc
or
pop
js
push
mov
mov
jmp
push
pop
adc
fdivp
sub
loopne
mov
inc
adc
stc
mov
mov
xchg
adc
ja
fsubs
pop
pop
ss
ret
pusha
push
jecxz
arpl
sti
mov
adc
mov
cmp
imul
dec
mov
mov
adc
xchg
neg
push
xchg
movsb
repnz
filds
or
lods
shlb
xor
or
xor
jle
adc
dec
mov
jle
cli
mov
push
mov
inc
aas
testb
rorl
aad
aam
and
test
xchg
std
mov
or
inc
push
insl
cmc
xchg
subl
popf
lods
in
xlat
mov
xchg
lcall
sbb
jmp
xchg
les
xchg
mov
dec
out
mov
adc
jb
scas
fadd
sti
jle
nop
push
or
in
mov
in
std
mov
xbegin
aad
mov
pop
in
add
push
sti
hlt
jmp
dec
or
pop
shlb
fmull
xor
out
jmp
jb
dec
sub
add
cmp
lcall
imul
sub
in
xor
int3
xor
rcr
sub
popf
or
outsb
test
out
sub
mov
inc
add
adc
xor
je
stc
je
loope
push
add
iret
add
xchg
pop
cmc
mov
stos
push
test
int3
pop
push
test
mov
rcrl
jle
int3
imul
cwtl
andl
stos
and
xchg
jge
faddl
fbstp
jb
cmpsl
inc
sbb
mov
fwait
jmp
adcl
xor
sarl
cmpb
lret
mov
inc
xchg
mov
xor
inc
mov
test
or
cld
test
ja
cmpsl
jno
mov
loopne
shll
mov
push
jnp
icebp
or
mov
imul
leave
clc
dec
ud1
lahf
xor
popf
shrl
sbb
or
jle
push
xchg
xor
sub
xchg
imull
push
xor
das
xchg
lea
add
fcompl
mov
mov
pop
les
adc
fiadds
ds
fmuls
ja
and
or
ss
push
inc
push
or
jne
add
lods
dec
push
lcall
sbb
push
sbb
sarl
mov
jno
sbb
clc
xlat
push
add
and
in
or
sbb
negl
mov
loopne
inc
mov
dec
xor
in
inc
out
movsl
lods
pop
inc
or
int
fdivs
pop
add
loope
mov
add
mov
lret
ds
loopne
inc
cmpsb
pop
cmp
push
pop
sub
push
int
push
aas
lret
mov
sbb
mov
jmp
xor
nop
pushf
addr16
mov
loopne
push
and
mov
cmpsl
pop
out
pop
dec
mov
dec
stos
mov
in
aas
test
ror
push
jno
xor
rcrb
jns
cmp
pop
aaa
in
lea
mov
ficoms
inc
mov
ljmp
lahf
ljmp
lock
dec
adc
mov
pop
insb
jp
sub
cli
popf
xchg
shlb
test
xchg
mov
cmpsb
pop
in
dec
orb
or
gs
fadds
mov
dec
daa
inc
es
into
imul
jae
xrelease
fnstenv
xor
test
mov
nop
adcl
adc
xchg
fwait
jnp
enter
setno
sbb
movsb
push
mov
xor
aaa
mov
lods
mov
mov
xor
stc
push
cli
cmp
lods
jbe
xchg
cmp
ja
cwtl
jnp
stos
xor
push
clc
add
jbe
jae
ficoms
lahf
lods
jecxz
shl
fbld
stos
insl
testl
dec
gs
mov
loopne
lods
insl
in
adc
mov
test
add
insl
jmp
pop
cmc
popf
jg
frstor
jle
mov
sbb
add
jp
jno
sub
and
add
loope
lahf
testb
popa
arpl
daa
imul
or
pop
sbb
ds
shlb
ret
mov
xchg
loope
aad
jp
inc
inc
test
popa
arpl
cli
ret
popf
arpl
and
ret
adcb
or
or
loopne
add
or
faddl
adc
inc
xor
push
mov
popa
cltd
push
mov
xchg
lock
add
sbb
jl
rclb
loope
andl
cmp
addr16
or
addl
int3
shlb
sbb
aaa
stos
orb
mov
leave
or
xor
pop
les
test
lock
jl
sub
or
int
mov
mov
push
std
test
divl
cmp
sbb
mov
add
lcall
mov
fidivrs
iret
mov
cmp
and
jns
sbb
clc
cmp
movsb
stos
call
and
xor
adc
and
xor
push
dec
sbbb
mov
sub
insb
jo
fwait
dec
shll
in
dec
hlt
and
fmull
stc
mov
popf
in
and
adc
lods
outsb
repz
ja
xor
xor
mov
cmp
out
sti
clc
cmp
sahf
jg
adc
stos
fsub
adc
mov
cmpsl
mov
cmp
mov
dec
jle
or
jmp
cmp
mov
imul
insb
xchg
icebp
sub
fwait
xor
add
in
lret
call
push
xor
push
mov
movsb
cmp
sar
and
ds
outsl
dec
cwtl
xchg
sarb
out
aas
es
ds
cmp
and
dec
int3
jbe
imul
call
push
xchg
movsl
push
sti
imul
mov
xchg
aam
xchg
mov
aad
jmp
out
push
loope
bound
adc
adc
bound
sar
mov
xor
cmc
add
aaa
jge
push
mov
ds
in
clc
mov
mov
mov
xor
iret
cld
andb
xchg
mov
lret
jo
and
ret
cmc
pop
ret
sahf
and
shrl
sub
push
lcall
outsl
out
aas
pop
in
jno
sbb
addb
nop
popf
adc
mov
and
mov
in
test
xor
or
sbb
std
xlat
orl
in
mov
shlb
adc
sub
mov
int3
aam
add
xchg
mov
add
rorb
out
add
int
hlt
mov
shl
pop
not
loopne
mov
jge
xchg
lahf
shlb
jb
lods
fiaddl
std
outsb
push
jno
scas
les
xor
or
mov
add
mov
lret
xchg
sarw
mov
pushf
push
fisubs
jno
lods
mov
enter
push
push
jge
mov
adc
add
dec
ljmp
push
cld
rclb
xor
mov
or
pop
mov
pop
std
or
add
push
ljmp
gs
fistps
sub
xchg
sub
pop
lods
pop
jg
aam
cmpsb
mov
xchg
cli
aam
sub
dec
xchg
mov
clc
xchg
and
popa
jnp
je
mov
push
mov
push
xor
dec
cltd
insl
and
dec
movsb
ss
outsl
cli
dec
dec
flds
popf
mov
aaa
loope
or
lock
mov
dec
jp
pusha
add
jmp
and
popa
fwait
aas
xchg
xchg
pushf
sub
mov
std
out
fwait
mov
int
mov
mov
ljmp
stc
aam
ja
dec
mov
add
mov
or
xchg
leave
call
jl
jbe
mov
or
mov
pop
push
jnp
and
cmc
in
daa
push
adc
mov
pop
adc
pop
sarb
jnp
jmp
xchg
sbb
inc
fcomps
not
sub
and
jmp
add
outsl
xchg
mov
add
mov
out
call
jb
dec
insl
mov
mov
xlat
mov
orl
jmp
and
dec
mov
je
jg
jo
cmc
rcl
mov
lds
jp
mov
js
cmp
mov
fistpll
dec
lret
xlat
mov
or
mov
and
lock
xchg
ret
push
xlat
push
test
test
push
xchg
xchg
push
cmp
sbb
sub
jmp
xchg
fwait
jae
shlb
inc
push
cmpl
dec
or
jne
loope
testb
mov
push
adc
xchg
cmp
inc
cmpsl
mov
inc
jmp
popf
jno
es
out
ss
xchg
rcll
repz
out
hlt
inc
lret
xchg
jmp
lahf
sub
cmpsl
add
mov
outsl
jmp
cmp
sub
scas
xchg
div
sub
jp
ja
jnp
pop
mov
xlat
mov
cmpsb
mov
lcall
push
and
dec
jl
loopne
mov
mov
repnz
or
test
das
and
mov
leave
shlb
dec
rcll
pushf
pop
adc
psubusw
arpl
cmp
add
outsl
mov
add
fs
and
call
xchg
jmp
int3
add
add
dec
test
sub
aam
inc
mov
sbb
mov
repz
xor
mov
adc
mov
push
xorl
call
xor
sub
sbb
or
mov
push
aas
sbb
cld
adc
imul
mov
mov
les
arpl
into
push
ss
jns
das
int
fdivrs
test
bnd
ffree
pop
xlat
outsl
inc
out
fs
repz
popf
ljmp
and
inc
xor
ljmp
ret
sbb
addl
mov
inc
in
testb
sbb
addb
jbe
lods
sub
fisubs
outsb
jno
fdivl
sahf
daa
add
aas
adc
nop
mov
loopne
sub
sub
arpl
mov
add
in
jl
out
and
inc
aad
adc
add
mov
pop
enter
jg
xchg
push
push
jmp
lret
pop
in
pushf
or
adc
in
pop
loop
addr16
mov
ljmp
push
fbstp
jp
hlt
les
cmp
mov
xchg
test
jl
jbe
test
and
sbb
mov
push
dec
pmaxsw
mov
dec
mov
out
fsub
add
test
rcl
ljmp
sub
fadds
sub
faddl
hlt
sahf
mov
xchg
sbb
sub
mov
inc
and
add
push
imul
nop
repnz
icebp
jb
xchg
lret
adc
mov
xor
int
imul
pop
xchg
cli
frstor
fisubl
mov
vsubpd
jne
test
fisttpll
xchg
lcall
jg
pop
lock
rorl
jg
iret
aas
imul
aas
xchg
sub
mov
xchg
lcall
bound
js
xchg
xor
xchg
cmp
mov
mov
dec
fdivrl
rcrl
dec
jb
mov
aas
orl
lods
push
mov
aaa
fucomp
insl
andb
add
cmp
movsb
icebp
sub
das
fsubrs
sbb
loopne
or
or
test
lcall
mov
int
mov
mov
adc
mov
fistpl
lods
bound
aas
mov
lcall
int3
outsb
call
adc
dec
sahf
mov
mov
jmp
inc
mov
lds
lods
cwtl
cmp
adc
dec
movsb
add
pop
jae,pt
pop
scas
push
jg
mov
add
sub
popa
dec
cmpsb
mov
lods
das
pop
popa
cltd
adc
push
out
imul
mov
jge
movsl
cmp
stos
lds
in
dec
or
gs
jbe
mull
scas
dec
push
cmp
add
in
cmp
sahf
or
popf
test
pop
stos
inc
or
jmp
rcll
mov
outsb
ss
test
cmp
iret
or
xchg
lds
mov
pop
dec
mov
lods
fwait
enter
fdivrp
or
or
gs
insb
fiaddl
jp
cmp
push
je
insb
rclb
es
lea
or
sub
xchg
test
push
xchg
pop
dec
repnz
push
into
mov
pop
sbbb
mov
loope
stos
inc
mov
aam
mov
aas
aas
lahf
sbb
popa
fcompl
imul
roll
sarl
bound
js
mov
or
mull
push
mov
test
in
sub
insl
fisttps
shl
test
sub
dec
jl
mov
xchg
push
out
or
xchg
popf
loopne
mov
mov
stc
lret
repz
int
rclb
push
loope
gs
mov
imul
repnz
enter
test
loopne
add
insb
les
scas
push
call
pop
int
cmpsb
clc
sahf
and
mov
hlt
ds
pop
lock
lea
loope
mov
mov
cli
nop
mov
dec
ret
test
divl
add
xchg
dec
stos
mov
and
lea
xchg
dec
jbe
dec
xchg
or
sbb
pop
cs
cmp
cli
lret
hlt
sub
push
nop
into
push
pop
mov
sub
pop
icebp
mov
std
add
imul
add
and
cmpsb
or
sbb
repz
rol
jp
pop
xchg
or
daa
xor
push
inc
enter
movsb
lock
mov
imul
mov
mov
int
push
pop
inc
pop
dec
stos
or
mov
xchg
or
and
adc
dec
add
or
and
or
push
dec
mov
fnsave
cmp
mov
rorl
mov
jnp
push
pop
lock
mov
insl
not
mov
mov
scas
jns
mov
es
hlt
in
int
mov
lcall
lea
push
xlat
cmp
cmc
xor
xchg
sub
mov
movsb
idiv
mov
roll
xor
or
pop
lret
jns
jmp
or
mov
out
mov
in
rclb
or
or
aaa
pop
mov
xor
scas
push
ljmp
xchg
stos
and
sarl
jle
xchg
lock
repnz
sbb
cmp
add
popf
fidivrl
clc
xchg
xchg
pop
mov
xchg
or
pop
out
or
adc
sub
jb
cmp
ret
or
or
mul
dec
ljmp
lock
mov
lahf
mov
or
jmp
cmp
fstl
xor
sbb
stc
orl
dec
cmp
add
int
xchg
push
lods
mov
stos
push
lcall
or
add
adc
or
enter
jmp
add
scas
cwtl
mov
call
mov
add
or
pop
test
add
push
lret
ss
jg
xlat
jne
push
movsl
std
lea
ss
jge
movsl
push
lds
or
jmp
repnz
mov
repz
jp
mov
xchg
orb
js
movsb
and
ja
stc
outsl
shrb
mov
std
and
cwtl
inc
sbb
stos
dec
pop
push
pop
mov
fimuls
mov
xchg
sbb
inc
adc
sahf
mov
add
cmp
mov
sahf
or
lahf
inc
test
frstor
sub
xchg
add
cmp
movsb
popf
in
mov
or
popf
in
mov
rclb
fsubrp
inc
sahf
xchg
adc
lods
mov
std
mov
test
inc
hlt
sub
mov
xchg
fidivrs
inc
mov
cmc
test
inc
hlt
dec
mov
aas
dec
mov
mov
dec
cmp
std
outsb
out
cmc
push
push
lcall
cmpsb
mov
inc
cmc
pcmpgtd
xor
sub
ja
out
or
shl
cmp
xrstors
fistpl
cmpl
insl
outsb
push
add
cli
movsl
lds
pop
aam
call
inc
xchg
lods
out
cmpsl
int3
cmp
add
fadd
push
sbb
hlt
xchg
filds
add
or
push
push
out
dec
pop
mov
incb
test
sub
or
into
aad
jo
out
push
ja
into
sub
mov
nop
pop
inc
movsb
pop
fstp
fs
cld
outsl
jbe
or
and
xchg
or
dec
sarb
pop
das
dec
aaa
add
mov
mov
arpl
mov
rol
jle
add
adc
push
cmc
stc
mov
push
scas
xchg
lds
cmp
and
or
inc
or
repz
sbb
dec
test
sub
dec
sub
mov
icebp
dec
mov
cmp
jns
jns
popa
cmp
ss
in
scas
paddsw
cmc
test
popa
xchg
add
ret
lods
pop
enter
pop
movsl
addb
movb
bound
out
push
std
sar
out
lcall
repnz
cmc
add
testb
ljmp
add
cmp
adc
add
into
adc
dec
out
out
in
popa
jmp
mov
xchg
das
je
out
push
mov
stos
stos
mov
in
out
ljmp
enter
pop
clc
cmp
out
insl
xchg
loop
sbb
push
push
pop
or
aaa
aas
add
jae
dec
dec
add
jp
mov
adc
test
mov
cwtl
mov
cmp
sti
adc
or
jbe
adc
jbe
and
mov
in
mov
xchg
call
push
subl
cmp
call
negl
push
pop
sahf
ds
pop
loop
cmp
pop
lret
push
lret
jo
ficomps
out
sub
sub
ret
and
jge
pop
les
xchg
mov
es
cmp
or
call
adc
sub
mov
shrb
repnz
fsub
jl
shl
jl
rcrb
mov
lds
dec
in
insl
sbb
pop
nop
or
popa
test
mov
or
lods
into
in
dec
fmul
in
pop
ffree
jmp
cltd
cmc
in
fnstsw
icebp
fnstsw
int3
lods
insl
sarl
xchg
xchg
mov
dec
in
hlt
mov
vpsrlw
mov
xchg
push
mov
pusha
push
push
sbb
mov
xchg
bound
adc
sub
fsubrp
int3
adc
mov
xchg
mov
scas
sub
cmp
and
in
hlt
popf
in
cmc
or
jnp
push
fnsave
jecxz
cmc
inc
fisubrs
fisubs
int
ficoms
shrl
jb
ja
ss
mov
dec
dec
into
push
stc
dec
into
cmp
sub
into
es
les
pop
les
push
les
int
mov
and
push
cmp
add
dec
push
bnd
adc
jne
adc
jge
dec
into
sbb
xchg
outsb
push
adc
insl
xor
push
sarl
push
sub
xor
push
in
sbb
or
bound
outsb
mov
nop
repz
push
clc
mov
mov
mov
jg
add
sub
in
daa
push
push
pop
faddp
jp
pop
out
daa
mov
jge
push
mov
mov
fiaddl
lret
jmp
das
test
and
pop
or
add
sbb
pop
call
test
jno
xchg
inc
inc
cmp
ret
pop
sub
cmpsb
bound
std
push
inc
aaa
mov
mov
pop
jnp
adc
shll
jg
fmuls
or
repnz
push
lods
sub
sub
adc
sbb
xchg
or
cmp
or
pop
std
jns
in
loop
dec
out
clc
sbb
enter
js
pop
xchg
mov
or
or
pop
lret
mov
enter
out
push
mov
adc
sbb
ljmp
mov
loopne
ficompl
dec
jo
enter
cmp
dec
das
popf
cmp
mov
cmp
push
aaa
int3
sub
fisttpl
push
cmp
xor
pop
repnz
in
test
xchg
out
push
jge
cmpsl
xchg
push
sbb
inc
cmp
bound
fstpt
mov
push
idivl
mov
filds
fcmove
and
jno
xlat
clc
mov
gs
add
movl
mov
or
cmp
jb
ficomps
jge
or
outsl
dec
cmp
shr
ljmp
fcoml
shlb
or
sbb
and
inc
mov
mov
xchg
push
mov
iret
jb
jg
out
pop
mov
push
int
cmpsl
insl
dec
and
pop
dec
aad
les
push
xor
fmul
clc
inc
shrl
add
mov
cmc
push
pop
mov
int
dec
int
fisubrl
aad
shrl
mov
adc
mov
sub
sub
int3
scas
sahf
sbb
out
into
outsl
fwait
repnz
nop
cmp
fs
dec
in
aas
push
sbb
lcall
xchg
pop
stc
mov
mov
push
ljmp
cmpsl
push
popl
pop
stos
xchg
fdivr
lret
loop
fwait
pop
mov
movb
mov
add
cltd
or
and
in
lret
push
imul
mov
sbb
rol
dec
jg
loop
mov
ss
cmp
mov
je
jmp
lahf
aaa
jb
mov
int
popa
or
fisttpll
cmc
popf
cld
xchg
jo
or
pop
insl
mov
pop
mov
jae
mov
push
ds
jb
jne
jns
sub
push
jne
and
pusha
dec
cld
mov
sbb
and
pop
mov
stos
xorl
mov
cmp
xor
cli
lods
fldt
outsb
mov
xchg
pushf
xor
fiadds
cltd
out
or
dec
xchg
inc
inc
adc
jne
andl
divw
mov
pop
ficoms
jge
mov
add
cmp
int3
fsts
fisubrl
push
and
pusha
or
js
in
mov
lret
mov
mov
push
mov
mov
or
or
test
adc
jb
into
jns
jb
stos
aam
inc
push
in
in
popf
popa
mov
push
out
mov
xchg
jno
das
es
sbb
cmp
cmp
xchg
dec
cmp
xor
jno
cmp
and
pop
scas
aad
push
cld
jg
add
mov
call
sbb
cltd
enter
or
in
pushf
rcr
push
in
sub
aaa
repnz
aas
inc
std
fiadds
dec
push
dec
xorl
cmp
or
iret
mov
cmp
jo
pop
push
notb
lret
popf
js
pop
ljmp
cmc
or
lret
aad
js
imul
add
fwait
jbe
in
aaa
xor
or
and
or
repz
jg
adc
mov
xchg
jl
add
scas
lahf
repnz
lret
int
push
leave
subb
aaa
jle
push
xchg
mov
mov
sbb
xchg
repz
or
cmp
push
pop
cmpsl
cmpsb
sbb
xor
movsl
icebp
in
adc
push
xlat
pop
outsl
je
leave
xchg
lds
jg
cmp
fsts
xchg
xorb
fs
aas
popf
aaa
mov
or
aad
dec
and
jge
pop
add
add
int3
loop
and
and
mov
test
push
popf
js
mov
xlat
pushf
bound
cmc
dec
pop
enter
fsubrs
in
loopne
add
rcll
mov
popf
jne
push
popa
push
rol
sbb
mov
out
orb
or
jl
mov
add
dec
mov
fistps
cmpsb
in
leave
push
pop
inc
js
out
les
orl
or
int3
aaa
sti
and
in
dec
imul
cmp
xor
add
sarl
ja
sub
push
fdivs
clc
int
mov
sbb
aad
mov
push
xchg
hlt
push
call
push
les
repnz
into
xor
mov
mov
js
sub
or
adc
xor
aas
shl
sbb
xor
out
jmp
push
mov
lds
les
nop
pop
ja
mov
cmc
mov
stos
push
jmp
data16
or
lods
cmc
loopne
mov
pop
dec
fst
lds
mov
lds
stc
int3
into
ljmp
repz
xorl
pop
xor
pop
xchg
out
hlt
mov
sbb
lds
add
fisubrs
pop
jl
movsb
mov
xlat
int
inc
dec
enter
lods
movsb
pop
out
lods
std
cli
orb
cmp
mov
mov
in
push
push
testb
insl
ffree
push
in
shlb
xchg
or
stos
sub
mov
int
scas
insl
add
xor
jl
add
jnp
jge
fucom
imul
fs
pop
dec
mov
push
sahf
mov
lods
dec
jp
lods
adc
nop
fists
into
fiadds
in
mov
mov
sub
paddusw
xlat
cmp
push
pop
fstp
rcll
push
rcrl
adc
in
addr16
aas
pop
and
addr16
std
or
jno
mov
jmp
fs
xor
mov
pop
into
jge
mov
jg
ljmp
mov
push
test
outsl
fmull
icebp
dec
pop
jle
jecxz
push
xlat
stc
dec
idivb
pop
inc
and
faddl
adcl
leave
add
aaa
sbb
fstl
sahf
xchg
xchg
mov
iret
sub
cmp
pop
mov
stos
or
pushf
inc
mov
xor
repz
push
in
sbb
pusha
sub
mov
cld
je
and
shrl
cli
jle
xchg
mov
aas
mov
or
lcall
dec
push
inc
mov
mov
arpl
insb
mov
cli
int3
xor
xchg
add
mov
imul
sbb
adc
mov
icebp
loopne
cmp
dec
je
js
bound
out
xchg
xor
jb
sub
xor
dec
gs
ljmp
pop
mov
jne
sub
loop
lods
outsl
repz
jb
mov
jg
test
mov
shlb
mov
push
adc
mov
enter
es
mov
sbb
inc
push
gs
add
bound
out
aaa
jecxz
jmp
ret
mov
cmpsb
and
and
and
in
or
flds
ret
cmc
jne
inc
push
or
mov
rol
jne
ffree
xchg
rcll
shrl
repnz
pop
mov
daa
cld
daa
inc
cmp
inc
inc
mov
popa
mulb
sbb
out
mov
pusha
test
add
inc
outsb
mov
int
dec
push
aad
xchg
decb
jecxz
loop
cld
push
sbb
addl
aad
cmpsb
pop
test
push
clc
fdivrl
cmp
cmp
fistps
sti
inc
mov
shlb
inc
imul
inc
push
in
jno
jmp
jl
cld
jmp
gs
sub
lret
lods
sub
aaa
lods
mov
fisubrs
jns
or
shrb
xchg
xchg
shlb
lods
jg
shl
mov
mov
in
adc
js
add
xchg
mov
mov
gs
jae
imul
daa
jne
test
lds
or
push
cltd
test
push
pop
fsubrp
stc
cmp
stc
jmp
push
add
and
mov
sbb
cmc
loope
cmc
fwait
jg
jo
addr16
andb
dec
ds
stos
and
shrb
sbb
mov
gs
pusha
adc
adc
rcrl
dec
ja
loope
int
inc
int3
dec
into
in
jns
dec
mov
daa
and
pop
pop
fimull
imul
adc
and
shr
ret
mov
pop
push
bound
xor
push
popl
sub
add
adc
pop
add
stos
idivb
xchg
es
outsl
cmp
or
jae
push
adc
lock
das
out
jne
xor
fbstp
repz
mov
mov
inc
dec
pop
pop
inc
mov
push
cmovb
shl
aad
inc
sbb
enter
xor
cmp
sbb
pushf
jecxz
add
mov
xor
add
dec
inc
lret
jne
xor
jge
dec
fwait
xor
fildll
mov
inc
and
mov
dec
prefetchwt1
dec
pop
mov
mov
out
movsl
movsb
sarl
jno
clc
xor
notb
jecxz,pt
adc
call
mov
mov
mov
lret
pop
mov
dec
imul
add
sub
jb
xchg
into
pop
jg
icebp
lds
pop
mov
mov
fsubr
jecxz
push
scas
dec
fldcw
movl
lock
cmp
mov
js
ror
sub
shrb
into
cmp
call
insb
fstps
lea
pcmpgtw
arpl
pop
lcall
mov
aad
lea
inc
movsb
fdivl
mov
loopne
jmp
jge
in
sub
mov
int
data16
and
out
mov
and
push
add
hlt
add
rcr
inc
pop
push
xchg
leave
mov
cmpl
xchg
xchg
into
aam
sub
pop
mov
and
pop
jbe
jnp
andl
mov
pushl
out
inc
fs
loope
sbb
std
outsb
in
mov
adc
pop
push
inc
mov
fdivrl
mov
out
ja
push
mov
inc
xor
sbb
pop
xor
pop
jg
inc
xor
mov
clc
jmp
adcb
repnz
scas
ds
dec
loope
jne
fistpll
mov
pop
cli
inc
std
mov
imul
jge
sarl
ret
sbb
or
lret
mov
xchg
dec
cli
push
enter
xchg
in
sbb
mov
mov
add
enter
pop
mov
mov
hlt
fwait
pusha
outsl
push
sub
mov
mov
inc
inc
jg
mov
insl
xchg
cmp
scas
or
jbe
stos
inc
mov
mov
test
inc
sbb
adc
mov
js
mov
in
mov
cmp
and
push
stos
push
in
ss
pop
add
cmpsb
mov
jno
sbb
inc
xor
idivb
shrl
pop
pusha
or
sahf
cwtl
rorl
and
mov
sbb
hlt
sub
xor
stos
cmp
aam
insl
repnz
and
bound
push
and
lds
dec
adc
mull
inc
loope
lods
jbe
push
inc
aas
gs
and
push
mov
mov
add
mov
rcll
subl
mov
sub
sbb
push
mov
pushf
mov
xor
popa
push
adc
and
adc
mov
dec
sub
inc
sbb
mov
mov
into
push
push
push
xor
sbb
push
es
insb
push
and
mov
pop
outsb
or
sub
xchg
testl
pop
outsb
ljmp
fs
clc
adc
fidivs
fisubrs
xor
push
push
ja
or
or
les
stos
mov
mov
cmc
lret
icebp
jo
jae
inc
in
add
jne
sub
int3
cmp
push
xchg
cmp
or
fstpt
mov
jb
rol
dec
cmpsl
add
push
adc
xlat
cmp
fwait
sbb
jb
loop
inc
mov
or
push
sbb
or
fcoml
mov
mov
mov
sub
mov
out
scas
push
aaa
xor
dec
repnz
movsb
dec
cmpb
std
sti
mov
mov
adc
lock
dec
cmp
dec
pop
lock
pop
arpl
scas
pushf
cs
push
xor
dec
adc
adc
sahf
jl
cmpsl
sub
sub
sti
subl
loopne
jle
mov
push
mov
loope
test
addb
popf
push
out
push
mov
sub
cs
mov
pop
dec
sahf
daa
fstp
dec
fdivrl
popl
divb
mov
cli
jge
push
xor
rcrb
pusha
shrl
mov
cmpsl
adc
push
xchg
js
sbb
pop
pop
xor
push
std
dec
inc
shl
inc
mov
mov
and
pop
mov
push
push
xchg
pop
pop
cmp
lahf
pusha
lds
push
jl
mov
xor
jl
dec
cmp
sub
fs
test
lcall
out
shll
lret
push
add
xchg
andb
les
jae
pop
push
jmp
clc
outsb
je
sarb
repnz
scas
mov
inc
mov
and
loop
repnz
add
sahf
sub
movsl
cmc
hlt
push
std
xor
jl
push
mov
mov
fs
jb
cld
mov
xchg
incb
lock
hlt
test
lret
aas
stc
mov
in
jnp
aam
clc
loope
jbe
dec
lods
gs
aas
aas
xchg
aaa
ret
mov
xchg
lcall
aas
sbb
addr16
lahf
adc
jl
pusha
out
sub
mov
or
push
shrl
push
fidivrs
push
and
xor
adc
stos
or
loopne
fidivrs
fcomip
sbb
pop
hlt
stos
fwait
cld
mov
and
dec
lcall
jp
sqrtps
push
fbld
out
mov
sarb
lcall
shll
popa
popf
out
enter
dec
rol
movsl
xlat
pop
hlt
or
arpl
jmp
xor
jge
mov
repz
addr16
cmc
and
test
fsub
mov
jmp
fisttpll
cmpsb
insl
pop
jae
lds
mov
es
mov
jle
push
mov
loopne
orl
sub
add
jle
fisttps
pop
loop
ret
add
pop
xchg
int3
das
mov
xor
mov
xor
stos
mov
movsb
or
inc
mov
loop
or
inc
fimull
push
mov
jae
mov
imulb
add
les
pop
jnp
mov
out
iret
fisttpl
mov
jl
out
test
je
mov
mov
dec
cs
dec
mov
insl
in
pop
pop
test
imul
mov
push
push
mov
xchg
mov
xchg
lea
mov
adc
out
sub
jae
inc
dec
xor
fmull
and
jne
cmp
push
popa
sub
jb,pt
pop
and
pop
sub
inc
sahf
leave
xchg
cli
incb
jmp
test
pop
outsl
cs
shrl
jno
sbb
dec
mov
dec
bound
cld
movsb
ja
mov
jbe
rcrl
dec
dec
cld
cmpb
mov
mov
cmc
insl
imul
xor
scas
dec
sub
inc
pop
xchg
cwtl
mov
call
adc
mov
lcall
xchg
aaa
push
xchg
clc
add
push
lret
mov
bound
std
jno
jp
cmp
ret
xchg
test
jns
lahf
mov
notl
cmp
imul
pop
fs
movsl
ret
dec
in
aas
pop
lods
mov
sarl
push
sbb
test
in
mov
insb
fucomi
xrelease
jp
sbb
outsb
mov
es
inc
xor
iret
inc
aad
loop
dec
cli
xchg
or
lds
add
mov
xchg
cmp
add
fucomp
call
sub
mov
hlt
sub
xor
mov
pusha
xchg
mov
stc
push
xchg
ret
mov
shrl
ret
inc
mov
mov
or
xorb
jae
xor
or
push
lea
loopne
stc
in
xchg
rcl
xchg
aaa
lds
mov
push
enter
bound
push
mov
add
in
arpl
sub
inc
jecxz
push
test
jecxz
lahf
push
pop
stos
push
nop
mov
imul
bound
xchg
les
fs
into
push
push
addr16
in
cld
sbb
roll
ljmp
cli
cmpl
lahf
dec
jbe
mov
sbb
out
fisttps
cmp
call
jecxz
mov
jl
or
inc
mov
mov
stos
ret
or
push
repz
lahf
outsl
into
test
or
mov
cmpsl
in
in
sarb
jbe
jle
xchg
mov
shlb
adc
test
aas
mov
jns
sub
jb
add
and
outsb
nop
dec
dec
pop
or
push
test
pop
lock
shrb
popa
mov
push
lea
mov
jns
sub
push
sbbb
popf
sti
cwtl
jge
in
mov
pop
sahf
add
push
add
icebp
shrb
or
jmp
pop
fcomp
popf
xor
sarb
jne
cmp
or
outsl
mov
push
mov
dec
or
ret
xchg
sbb
fwait
insb
addr16
in
movsb
push
push
pop
fwait
mov
jb,pn
adc
push
xchg
sbb
faddp
mov
dec
or
sbbb
out
stc
sub
adc
neg
push
mov
das
dec
xor
ds
inc
inc
add
or
cmp
adc
and
xlat
cmc
sub
dec
loop
inc
inc
lret
pop
int
jbe
cmc
lcall
mulps
aam
jne
aas
fsubr
inc
inc
dec
dec
test
jg
dec
cmp
sub
sub
aaa
shl
popf
adc
push
push
pop
repnz
cmpsb
mov
fucomip
xor
test
jo
or
jb
sbb
rcrl
or
int3
stc
and
sub
aaa
mov
out
push
loopne
lret
xchg
jl
out
inc
stos
inc
dec
icebp
dec
mov
xchg
dec
add
pusha
push
cld
push
mov
int3
sub
icebp
aam
mov
push
adc
push
add
or
jge
ljmp
sbb
inc
iret
repz
bound
mov
in
loop
lds
test
dec
scas
dec
cmpsl
xor
xchg
fidivl
jb
pop
inc
out
inc
mov
xchg
fwait
xor
out
in
jmp
cmc
sub
jns
stos
into
dec
sub
hlt
orb
int3
mov
xchg
cltd
mov
xchg
jecxz
or
mov
repz
lods
inc
and
outsl
inc
sbb
ud1
mov
cmp
jo
cmp
adc
out
fmul
bound
shr
into
inc
in
lret
ja
outsb
ret
jge
sbbl
shrl
insb
and
int
adc
negb
outsb
hlt
sub
aaa
inc
rcrl
mov
adc
pop
mov
push
add
or
repnz
loopne
loope
imul
push
mov
fldl
idivb
mov
add
mov
dec
sahf
pop
loopw
pop
mov
lea
jecxz
or
outsl
shlb
lods
mov
popf
jge
jecxz
xor
jp
adc
insl
idivl
repz
inc
aad
or
mov
cld
sub
js
fidivs
cmp
mov
fsubr
xlat
push
pop
xor
add
xchg
into
sub
sbb
inc
cmp
arpl
dec
mov
pop
cltd
cmp
jge
fadds
add
or
xor
repz
mov
lds
ret
xor
dec
mov
addr16
idiv
inc
nop
loopne
adc
dec
pop
xlat
lret
fisttpll
push
xor
ljmp
mov
xor
or
das
lea
push
repz
gs
jg
inc
insb
popa
jbe
dec
jg
out
inc
stos
mov
ds
test
rcrl
lahf
in
pop
inc
xchg
cltd
pop
sub
addr16
nop
xor
xor
pusha
push
push
add
or
inc
mov
mov
jb
js
je
adc
jl
push
aas
test
jge
mov
mov
int3
lds
sub
cmp
stc
gs
fcom
cmpsl
cmc
fidivs
fdivp
cmp
dec
inc
sbb
ficomps
sbb
std
js
xchg
bound
dec
cld
jg
jle
mov
xchg
dec
dec
push
sbb
ficompl
repz
into
sub
sahf
popa
push
sub
jp
inc
push
inc
jmp
ss
aam
orl
scas
mov
enter
mov
iret
hlt
shlb
loopne
pop
cld
jecxz
jg
std
in
dec
push
cs
popa
cwtl
adc
sbb
mov
stc
js
sbb
and
cmpsb
mov
cmp
xor
dec
out
and
xchg
sbb
cmp
shlb
mov
push
cmpsl
fmuls
lds
jl
and
testl
into
mov
add
jecxz
xlat
sahf
mov
sbb
add
push
xchg
xor
jp
loop
add
fst
and
adc
mov
adc
fistpl
shl
imul
insb
and
movsb
pop
stos
aas
xor
ret
push
movsl
dec
mov
test
pop
xchg
pop
jbe
xor
sbb
loopne
push
lea
push
sbb
sbb
push
add
xor
icebp
cmp
aaa
push
cmp
ucomiss
fnstcw
nop
xchg
sub
adc
pushf
loop
inc
pop
in
jb
xchg
lods
push
fldenv
jge
pusha
ds
mov
retw
outsl
pop
xchg
mov
and
loopne
xchg
mov
movsl
mov
xchg
inc
xchg
mov
movd
jge
add
int
ja
push
inc
mov
push
clc
cltd
sti
mov
adcl
sbb
push
ds
mov
xchg
stos
adc
push
mov
cltd
sbb
mov
sbb
and
or
fsubrl
jbe
aaa
stos
mov
cmp
mov
push
insb
inc
xchg
pop
stos
dec
je
or
push
push
push
std
in
inc
mov
shlb
dec
cld
ljmp
mov
fsubrp
xor
repnz
out
push
push
add
rcr
std
push
clc
sub
imul
mov
mov
jb
lods
jnp
push
icebp
dec
aam
outsl
inc
mov
pop
adc
mov
lods
scas
testl
lcall
addb
popa
dec
rorl
call
pop
bound
add
repz
shl
movsl
push
mov
lahf
mov
mov
subl
aaa
push
das
mov
stos
bound
xor
mov
das
mov
sub
es
int3
cltd
sbb
mov
faddl
mov
mov
outsb
adc
dec
pop
inc
pop
in
fisubs
test
leave
js
stc
push
into
aas
jge
jge
aas
jle
popf
in
test
imul
or
adc
in
cmpsl
btr
sub
popf
pop
in
add
add
repz
enter
and
int3
cli
loope
adc
bound
mov
ret
dec
mov
cltd
cmp
xchg
sbb
cmp
pusha
mov
xchg
pusha
sbb
arpl
sub
hlt
xor
mov
js
inc
jns
or
dec
nop
dec
add
mov
adc
fmull
aam
out
sbb
jge
imul
aad
mov
inc
cmp
cld
xchg
out
mov
dec
push
stos
js
fdivl
sub
jo
xchg
dec
pop
out
pop
icebp
ljmp
cmp
movsb
push
cli
push
shl
cmpsb
rcrl
pop
js
movsb
jle
cmp
and
fildl
xchg
call
shll
aam
outsl
decl
fwait
mov
push
mov
xchg
push
jo
out
jne
pandn
jb
les
ret
pop
fdivrs
lods
insb
ret
or
push
test
jno
jno
sub
icebp
add
sti
mov
mov
dec
out
dec
fisttps
out
jecxz
movsl
mov
fs
aam
mov
xor
push
std
popa
stos
mov
stos
add
jge
push
in
pop
sbb
mov
pop
jo
sbb
jb
sub
mov
dec
mov
std
negb
mov
ss
insb
cs
and
dec
pop
cltd
adc
aam
popa
jne
fcoml
rcrl
fcoml
repnz
pushl
xchg
jmp
fidivl
push
add
mov
jp
int3
xchg
insb
pop
dec
addb
orb
imull
test
mov
mov
loop
in
lock
bound
test
pop
fidivl
fbstp
dec
ss
jge
nop
push
and
push
inc
and
nop
sbb
fistpll
or
rorb
mov
sub
outsb
movsl
dec
inc
into
pusha
sub
add
dec
mov
les
arpl
movsb
ja
sbb
inc
mov
sahf
nop
mov
or
arpl
outsl
scas
jae
es
mov
lods
inc
cmc
jmp
nop
das
enter
loope
stc
xchg
sub
stc
jle
cwtl
gs
mov
loop
cmp
jge
ret
jmp
jno
aad
push
enter
add
vpsadbw
jge
mov
jp
int3
pop
rcll
mov
or
xchg
int3
bound
mov
inc
sbb
in
mov
addb
and
repnz
dec
into
mov
push
orl
add
cltd
jbe
mov
aam
jl
cmp
push
mov
dec
rcll
and
sahf
out
inc
sub
ja
pop
lcall
das
mov
test
lock
pushf
scas
xchg
dec
sbb
js
pushf
inc
mov
and
push
movsl
fidivl
xor
movsl
push
pushf
mov
or
ds
int3
bound
xchg
push
xchg
icebp
sub
inc
jno
fwait
push
hlt
rcrl
cmpsb
das
push
or
or
popf
mov
repnz
stc
aas
push
shr
mov
cmpsl
aam
sti
cmpsl
lcall
stos
das
jo
sub
repnz
mov
es
sbb
mov
xchg
xor
push
sub
aas
pop
push
adc
sub
rorl
xchg
adc
loopne
adc
inc
cmp
sub
pop
fmull
sbb
mov
pop
shll
xchg
xchg
add
mov
cmc
dec
ja
cmp
or
jno
or
rol
and
and
push
jno
jmp
pushf
jae
in
int
fdivr
dec
mov
adc
xchg
xor
adc
prefetchw
or
pop
std
dec
mov
nop
lret
push
xchg
mov
mov
scas
add
push
and
mov
inc
mov
ret
addr16
jns
dec
mov
mov
push
add
jg
repnz
cmp
mov
cli
add
sbb
xchg
sbb
fisubrs
cli
les
ljmp
aaa
push
les
in
jne
jns
test
push
ror
fldt
int3
mov
out
fstps
dec
inc
inc
mov
adcl
testb
sub
roll
dec
mov
sub
cmc
jl
movsl
inc
test
out
aas
and
nop/reserved
sbb
or
test
cld
jp
xor
sbb
cmp
out
lcall
xchg
std
pop
fs
dec
add
inc
and
add
les
mov
add
test
mov
cmc
sbb
sub
cmp
movsl
cli
mov
mov
pop
int3
mov
xor
lea
and
movsl
mov
jbe
subl
mov
cwtl
mov
out
or
arpl
xor
sbb
add
mov
pop
or
rcrb
push
ret
cltd
lds
fcmovu
cmp
pusha
push
jo
push
xchg
stc
dec
ja
nop
dec
loop
add
xchg
add
or
mov
xor
cld
clc
dec
push
ret
repnz
xor
divb
aam
inc
lcall
sbb
shrl
mov
adc
sti
mov
mov
adc
jle
dec
xchg
xchg
push
jne
add
cmp
push
mov
fxch
mov
push
push
mov
mov
int
push
or
shl
push
movsl
notb
adc
data16
pushf
or
sets
std
xor
dec
jno
pop
lods
popa
out
mov
imul
xlat
es
daa
adc
rorb
dec
sub
adc
add
std
rcrb
fs
or
pop
repz
scas
push
jge
lahf
pop
or
cmp
push
rcrl
cmp
adc
xor
call
sarb
pop
scas
inc
push
mov
mov
stos
out
dec
aad
cmp
inc
lret
cmp
mov
cmp
sahf
divl
sbb
jns,pn
scas
mov
stos
sub
mov
mov
mov
leave
mov
and
repz
jg
and
imul
sub
inc
pop
aam
cld
xchg
outsl
xchg
jbe
das
gs
mov
je
idivb
pop
mov
adc
stos
cmc
and
aam
ljmp
test
pop
cmp
inc
imul
xchg
aam
int3
cmp
jmp
das
lods
movb
mov
cmc
inc
xchg
test
ja
mov
sbb
mov
adc
pop
addb
sbb
icebp
test
add
movsl
or
shlb
jb
xchg
inc
inc
push
mov
xchg
push
orb
xchg
sub
mov
cmpsb
imul
jae
divb
in
sbb
mov
dec
pusha
pop
in
cmc
out
test
mov
lock
sbb
in
ja
xor
cmp
fnsave
imul
dec
fcmovne
and
dec
rclb
mov
cwtl
lds
and
pop
mov
aad
in
mov
aad
ret
les
jmpw
gs
mov
pop
mov
sub
mov
mov
les
mov
add
loope
int
or
xor
mov
fld
push
jecxz
inc
pop
nop
jg
add
std
inc
dec
cld
dec
cwtl
mov
out
gs
mov
mov
call
adc
fiadds
test
adc
mov
in
jbe
sbb
adc
mov
xchg
fwait
cmpsb
arpl
and
lds
jmp
mov
insl
mov
aam
mov
shlb
mov
scas
jp
std
test
hlt
popa
call
or
or
mov
or
pop
cld
ss
pop
loope
cmp
push
pop
movsl
repnz
sub
mov
cltd
iret
jnp
mov
icebp
sti
icebp
fsubs
jmp
loopne
push
sarl
inc
cli
cld
jge
pop
iret
jmp
fisttpl
push
jmp
push
out
int3
js
pushf
daa
aad
fildll
add
int3
lcall
movl
inc
sbb
repnz
lcall
das
std
stc
jge
lods
sbb
push
lods
shrl
or
enter
out
popf
ja
mov
push
mov
test
loop
inc
xchg
into
jae
pop
sbb
popf
roll
pop
adc
mov
fscale
nop
adc
xchg
jp
pop
mov
push
xchg
jno
adc
inc
xor
mov
inc
mov
sub
mov
stc
fistpll
scas
dec
scas
arpl
inc
xor
xor
pusha
mov
leave
in
insb
mov
sti
xchg
mov
popa
test
leave
fwait
xchg
mov
and
lret
add
incl
add
xchg
and
arpl
repnz
mov
mov
jb
cld
jnp
push
push
xchg
jno
test
pop
loop
push
js
push
mov
aaa
test
adc
xchg
pop
jp
sbb
mov
dec
daa
clc
rcll
add
shl
push
pop
adc
call
imul
lock
bound
pop
add
jl
mov
ds
lock
loopne
orl
pop
add
pop
sti
dec
imul
in
stc
mov
dec
mov
push
jne
inc
xchg
adc
aam
je
pop
insl
bound
and
rcll
add
xchg
popa
cmp
insb
jge
iret
sahf
mov
aas
or
int3
mov
out
push
out
add
filds
dec
ja
add
into
cmp
insl
and
jno
int3
loope
xchg
in
mov
lods
adc
lock
mov
std
xor
aam
cmpsl
or
data16
mov
lret
sbb
jge
fimull
mov
mov
pop
rclb
cmpsb
xchg
arpl
mov
cwtl
orl
mov
xor
arpl
out
add
inc
inc
mov
push
inc
jl
xor
repnz
jb
pop
xor
iret
push
enter
lods
sbb
cmpsb
dec
sbb
arpl
mov
fcoml
push
mov
xor
adc
push
pop
testb
aas
data16
les
cmpsl
cmpsl
sub
pop
negb
mov
fisubrl
inc
xlat
xchg
cmc
adc
pop
ret
int
xchg
push
data16
xor
popa
mov
ljmp
aas
sbb
pop
decb
mov
mov
mov
cwtl
mov
in
cmp
mov
push
popf
pop
sbb
jae
xlat
push
pop
dec
add
jle
lcall
push
lock
sbb
inc
nop
inc
xor
mov
jmp
xor
outsl
mov
jns
out
jnp
adc
adcl
mov
icebp
mov
xchg
lea
dec
and
xchg
xchg
push
push
adc
hlt
out
mov
stos
inc
stos
mov
lcall
out
fdivrl
jae
mov
jne
or
mov
pop
push
lret
push
or
test
mov
shlb
dec
movsl
out
inc
fstpt
jg
das
adc
enter
dec
rol
cmpsb
ljmp
mov
xlat
or
leave
lods
rcll
cmp
xchg
jmp
mov
cmpsb
repnz
test
lahf
jp
notb
in
int
outsl
lock
xor
xchg
mov
mov
inc
clc
and
lods
xchg
call
lods
stc
sbb
lret
dec
push
pop
les
dec
mov
fsubrs
in
mov
dec
jp
push
out
shlb
lock
movsb
bound
jnp
mov
adc
xchg
push
or
jl
divl
sbb
or
daa
popf
or
and
ret
push
mov
dec
xchg
lea
leave
aas
ljmp
cmp
sbb
cmp
adc
jne
subb
aad
push
inc
rcr
pop
adc
jmp
cmp
and
and
xchg
gs
inc
insb
xor
movsl
std
imul
aaa
jbe
push
lock
cmp
and
inc
xor
icebp
out
adc
adcb
pop
inc
btc
iret
ret
mov
daa
scas
mov
in
int
pop
repz
lret
ret
in
and
inc
xchg
daa
ds
inc
xchg
cmpsl
jmp
in
jmp
xchg
push
mov
pop
js
cmp
stc
mov
cmp
inc
cld
sti
push
in
dec
mov
cli
dec
dec
mov
jl
gs
shr
mov
lods
imul
add
in
rorb
mov
inc
sub
jg
jo
mov
dec
test
mov
shll
icebp
ret
ficomps
mov
mov
lds
dec
mov
jbe
negb
mov
aam
jg
test
fwait
push
inc
ss
mov
inc
test
sbb
fistpl
mov
and
imul
outsb
std
mov
cmpsb
outsb
aad
jno
mov
int3
xchg
push
sti
mov
dec
pop
adc
sub
mov
pusha
dec
test
movl
fidivl
mov
xchg
fcoml
jmp
cli
nop
push
adc
rcrl
in
jmp
outsb
pushf
xor
dec
push
stc
popf
push
cmpsl
repz
sub
mov
mov
ss
outsl
dec
pop
add
ret
inc
cmpsb
pushf
cli
xor
inc
test
and
leave
sbb
jle
or
inc
psllw
lahf
fdivs
insb
mov
shlb
pop
jl
aad
cmp
sub
nopl
dec
scas
rcrl
sar
fdivrs
loopne
fsts
jns
mov
out
and
xchg
push
out
mov
mov
or
js
rorl
and
call
mov
pushf
lcall
stc
jno
lock
xor
sub
dec
in
pop
cmc
dec
in
sbb
cwtl
repz
xchg
shr
int
ret
ja
xchg
jno
lods
into
test
jo
ljmp
mov
mov
jno
scas
fs
cmp
mov
dec
xchg
cmc
lods
test
clc
jmp
xchg
cmc
jmp
lret
xor
sub
xchg
jae
xor
add
cs
pop
dec
fisttpl
add
aad
in
jmp
icebp
pop
xchg
loope
mov
mov
jbe
ljmp
jg
push
mov
setle
cmpb
in
mov
push
xchg
scas
add
mov
ja
or
jle
jmp
xchg
fldl
and
test
cmpsl
push
adc
mov
mov
pop
in
xchg
mov
mov
and
leave
push
mov
dec
ret
sub
fstpl
and
inc
stc
pop
in
mov
fs
dec
cmpsb
pop
sahf
nop
mov
lcall
sahf
shl
sti
adc
jb
out
xchg
cmpsb
lahf
push
repnz
add
lock
jo
lock
xor
sbb
or
xor
xor
fists
xlat
in
jo
les
dec
push
xchg
inc
sub
nop
repnz
popl
xchg
xor
push
syscall
pop
mov
dec
cmp
mov
mov
or
icebp
mov
jl
in
je
mov
pop
jno
push
jns
das
pop
in
aas
in
and
int
jecxz
cltd
rorb
xor
jg
lret
js
sbb
loopnew
test
and
dec
popf
stos
scas
jmp
lods
push
push
adc
iret
lock
ljmp
push
xor
neg
xor
in
push
and
xchg
int3
push
mov
jle
js
mov
pop
lds
sub
sahf
dec
in
test
sbb
mov
push
stos
pop
loope
hlt
jo
fwait
dec
mov
adc
or
cmp
cwtl
xor
sahf
mov
fdivr
leave
outsb
cmp
pop
mov
mov
je
or
pop
out
dec
cmp
sub
repnz
cmpsb
cmc
sub
adc
test
addr16
imul
xorl
lods
lret
push
loop
ds
fwait
aam
cltd
or
in
shl
fisubrs
jo
or
ret
and
mov
fwait
xor
fnstcw
mov
les
mov
push
mov
mov
xor
sub
not
add
std
push
sub
les
lret
cld
mov
add
add
repnz
insb
test
mov
sbb
sbb
mov
add
add
test
adc
nop
adc
shrb
xor
repnz
lcall
outsb
testb
pop
dec
into
add
push
push
int3
lea
cs
push
or
cmp
inc
lods
xor
sarb
sub
cmp
sub
mov
mov
and
jbe
andb
out
xchg
sub
jbe
mov
shll
dec
fucom
jmp
popa
mov
push
xchg
pop
jmp
xor
mov
and
mov
pop
and
rcrl
cmp
mov
clc
repz
jbe
push
add
xchg
ret
clc
in
rorb
inc
cltd
orl
loope
lds
xlat
or
xchg
jbe
das
dec
and
xchg
loop
inc
js
jns
sti
loop
adc
stos
arpl
jbe
inc
fdiv
repnz
and
cmp
rorb
in
mov
mov
jecxz
pop
jmp
xchg
mov
and
cmpsb
mov
adc
sub
push
sar
or
add
testb
pushf
push
idivb
shll
loopne
shlb
in
add
inc
and
bound
ror
dec
aad
inc
jp
in
dec
sbb
popa
push
out
or
sub
sti
xchg
jo
inc
pop
xchg
cmp
adc
xchg
adc
fcmovne
out
popa
shll
ss
mov
push
inc
mov
lret
sbb
pop
pop
or
or
out
in
addr16
dec
stos
insb
sub
add
jmp
push
lahf
ljmp
rorl
add
xor
pop
pop
jmp
arpl
cmpsl
inc
lods
lahf
xor
sarb
dec
xor
push
adc
mov
fwait
popl
stos
cltd
rorb
movsl
push
push
xchg
and
mov
or
mov
and
adc
outsl
int
mov
and
clc
or
cli
das
loopne
mov
ss
imul
aaa
movsl
mov
xchg
pop
xor
cltd
movsl
ja
xor
jg,pt
loope
int
mov
test
nop
push
cltd
xor
shl
mov
lret
das
inc
jnp
cmp
pop
rclb
mov
aam
shlb
data16
xchg
into
xor
lcall
int
cmpsb
fcomps
mov
shl
std
mov
add
out
jno
repnz
cmp
test
sub
mov
lea
adc
arpl
ja
lods
pop
lods
dec
into
pusha
mov
in
inc
into
or
jmp
inc
in
jge
std
fisubrl
into
push
sbb
or
mov
sbb
rcrb
push
sarl
xchg
add
mov
mov
out
jecxz
roll
rcll
mov
sbb
push
pop
fisubl
push
ljmp
shlb
fptan
pop
ds
sub
cmpsb
or
lret
test
popa
aad
mov
add
jg,pn
stc
negb
jo
jns
mov
mov
mov
scas
subl
add
stos
jns
std
hlt
inc
inc
and
cmp
xchg
jnp
fdivrs
mov
loopne
xchg
mov
shll
mov
push
cmc
push
pop
sarl
mov
mov
andl
clc
dec
ds
cmp
cmp
inc
mov
or
call
orl
scas
mov
jl
push
mov
sub
cmp
mov
idivb
inc
adc
outsl
fstpl
jb
sub
cmp
mull
sub
jge
fcmovb
pop
lret
push
fld
mov
xchg
mov
rcll
div
mov
out
daa
movsb
dec
adc
add
mov
ja
shlb
cwtl
pop
cmpsl
push
loop
mov
test
push
lahf
aam
push
dec
andl
cmp
and
out
add
xor
sub
adc
call
ss
data16
mov
xchg
sub
jp
inc
jg
cli
stos
in
push
sbb
jnp
add
dec
addl
pop
inc
add
sbb
fwait
mov
repz
mov
or
xor
push
call
mov
aad
cmc
aas
or
mov
sbb
mov
adc
sbb
inc
push
movsb
lods
insw
mov
mov
lds
insb
jne
repnz
movq
int
lcall
into
jl
movsl
jne
rcrl
and
mov
and
int3
repnz
loop
lret
cli
pop
ja
popa
das
adc
arpl
enter
push
mov
pop
pop
sub
testb
fdivl
imul
sbb
inc
mov
lret
ja
mov
pop
push
test
mov
in
popa
mov
ret
btr
mov
icebp
dec
sarb
gs
outsl
addl
adc
push
hlt
mov
sub
mov
adc
lea
xor
imul
leave
mov
mov
pop
outsl
or
loope
cmp
jb
inc
test
add
scas
ret
mov
or
cld
aaa
dec
sbb
aaa
jg
in
scas
mov
mov
xor
xorl
ret
les
faddl
add
out
stos
cmp
repnz
xchg
xchg
orb
in
xchg
incb
movsb
or
inc
cmp
and
push
lods
loope
mov
nop
add
sbb
ja
xor
sbb
or
add
std
out
sarb
ret
add
data16
or
sar
or
in
push
mov
call
cmp
sbb
adc
push
insl
data16
dec
xchg
adc
xchg
pop
out
mov
outsb
lods
cmpsl
push
cwtl
aas
out
stos
shrl
push
push
xchg
xchg
add
data16
cmpsb
lods
lds
or
cmp
ror
lock
hlt
xor
out
jge
mov
aam
xor
xor
lods
mov
test
mov
or
loope
add
mov
mov
shl
cmc
jmp
lock
out
jno
ficompl
gs
jge
lea
ljmp
rorb
scas
jbe
pop
lods
cli
test
ret
jmp
mov
pop
test
or
mov
roll
lret
mov
out
daa
sti
out
mov
stos
movsl
out
jmp
pop
mov
std
jo
jae
jne
add
xor
out
pushf
cmp
mov
xchg
ror
inc
adc
cltd
repnz
lret
sub
stc
jae
shrb
mov
gs
mov
mov
sarb
es
lock
pop
lea
pusha
xor
cli
jbe
ja
pop
pop
push
add
icebp
cmp
test
mov
jge
dec
mov
test
sahf
lock
inc
pop
jle
fstl
inc
cltd
adc
xor
cmp
dec
scas
out
adc
inc
sbb
pushfw
or
test
les
xor
dec
loope
or
loop
cmpsl
lock
fchs
xchg
or
out
add
icebp
or
pop
add
ror
outsb
out
jbe
mov
pop
ds
mov
dec
pop
stos
mov
loope
popa
add
dec
stos
fcmovbe
sub
mov
jge
xlat
jmp
fistpl
add
cmp
mov
subb
jae
xchg
add
jo
xor
and
jnp
xor
push
leave
or
jbe
pop
in
fnsave
arpl
std
pop
outsl
mov
inc
lds
cmp
or
mov
repnz
cmpb
inc
aad
push
in
fadd
jp
movsl
cwtl
js
inc
fsts
pusha
xchg
mov
test
xor
xchg
outsb
sbb
dec
mov
xchg
ret
js
mov
dec
sub
dec
push
xchg
mov
cwtl
jne
ljmp
scas
shr
jge
jo
mov
add
xor
add
sbb
pushf
xchg
sahf
sahf
jns
ss
daa
testb
add
out
push
enter
jl
out
inc
aas
or
fcoms
shlb
scas
xchg
movsl
sbb
loopne
testb
fs
aad
or
push
push
jp
jmp
shll
adc
lods
mov
int
jns
imul
adc
xlat
jecxz
adc
sub
sarb
fsubl
mov
mov
cmp
and
mov
imul
adc
shlb
adc
ljmp
dec
jmp
stos
rclb
test
insb
pop
dec
imul
js
mov
call
sub
jge,pt
test
out
xchg
mov
xchg
add
arpl
movsl
xor
data16
xchg
sbb
mov
cmp
ret
outsl
xchg
add
or
or
jnp
test
std
es
repz
shll
outsb
fwait
addr16
mov
cmp
cmc
adc
inc
dec
mov
in
xchg
incb
std
rorl
mov
sub
dec
ffree
cmp
add
leave
addb
mov
and
jns
pop
int3
push
xor
filds
jnp
push
pop
jp
faddl
xchg
test
aas
jo
jge
pushf
cld
mov
inc
fnsave
jecxz
add
mov
xchg
and
pop
pop
sbb
mov
xchg
and
cmp
sub
stos
loope
dec
arpl
cmp
xchg
adc
sbb
cmp
test
inc
mov
loop
push
xchg
xor
pop
cmp
sbb
scas
mov
xlat
stos
add
mov
lea
lods
xchg
insl
pop
fstpt
insl
rorb
xchg
dec
fsubrs
add
fmull
inc
scas
in
mov
ljmp
mov
add
insb
mov
leave
popf
xchg
lea
sub
icebp
jmp
mov
rorl
movups
and
insl
dec
and
add
sub
jns
push
push
push
jle
mov
or
cmp
lret
mov
jg
push
jp
rcl
dec
les
in
cmc
jmp
and
jns
jno
cld
xchg
push
sub
aas
or
loope
jae
cs
popa
jmp
xchg
out
push
inc
bound
jmp
stc
sbb
mov
pop
xor
adc
jno
cmc
add
mov
out
fdivrl
int3
xlat
inc
mov
mov
test
clc
les
mov
cmp
sbb
mov
or
lea
jp
stos
mov
cmp
xchg
test
jecxz
fcomp
mov
dec
push
lret
pop
push
push
or
mov
jl
and
adcb
pop
push
rcrb
dec
int
mov
repz
push
enter
mov
push
mov
pop
jo
sbb
andb
hlt
xor
or
cs
mov
pushf
fcom
in
sbb
ret
adc
add
jne
dec
xor
aam
push
stos
ret
push
xlat
xchg
std
stos
jo
dec
push
test
out
dec
jbe
mov
mov
enter
jnp
lock
cmpb
or
mov
add
jle
pushf
out
sbb
daa
lds
out
popa
mov
mov
xchg
inc
dec
xor
shlb
mov
decb
loope
test
nop
mov
dec
out
into
jge
adc
scas
xchg
jno
movsl
dec
ss
mov
hlt
xor
add
aad
outsl
adcl
xor
inc
jo
jle
mov
stc
ja
add
iret
or
test
jae
mov
enter
cmc
outsl
mull
adc
push
fsubs
stos
ss
dec
pop
cmp
dec
mov
sub
xchg
push
pop
movsb
pop
psraw
push
rcrl
insl
mov
inc
pop
mov
int
mov
sub
inc
imulb
lea
aas
cmp
ss
sbb
stc
ret
pop
int3
xor
iret
sub
test
imul
sub
inc
mov
push
aaa
test
lret
xchg
cltd
daa
jns
scas
call
xchg
je
xchg
orl
cmp
loope
push
fdivrl
dec
icebp
mov
sbb
rcl
daa
jns
dec
ds
pop
std
fstpt
push
subb
loop
adc
xchg
sub
pop
ret
sti
sbb
adc
xchg
cmp
gs
inc
pop
pop
inc
jg
add
adc
fcmovbe
aas
mov
fstpl
xchg
mov
fsubs
xchg
mov
icebp
sbb
or
sbb
leave
push
mov
movq
dec
pop
xlat
in
pop
pop
pusha
loop
inc
fbstp
lock
mov
div
add
mov
in
rclb
sarl
ja
jecxz
mov
xchg
cwtl
mov
repz
pushf
or
divl
mov
mov
mov
mov
add
mov
xchg
dec
lret
mov
pop
mov
shlb
lret
mov
push
add
movsl
mov
movsb
popa
push
not
mov
and
or
jmp
insb
nop
push
push
cmpsl
mov
fldenv
mov
decl
test
hlt
xchg
sbb
mov
sahf
mov
xchg
lret
mull
outsb
pop
xchg
stc
and
imul
xor
mov
shll
dec
mov
pop
mov
fstl
stc
inc
fs
push
pop
pop
push
sub
push
in
mov
jmp
into
adc
fisttps
pusha
mov
in
mov
or
xor
mov
adc
aaa
mov
out
int
mov
cmpsl
inc
mov
push
sub
and
add
icebp
jge
ret
push
dec
mov
xorl
outsl
mov
mov
adc
pop
xchg
push
mov
aas
mov
push
out
and
sbb
or
sub
inc
jbe
push
in
aad
xor
aam
and
mov
hlt
push
mov
xlat
dec
lcall
aam
scas
pop
pop
pusha
rcrl
inc
sbb
jmp
xorl
add
sbb
xchg
mov
addl
ret
out
cmpsl
mov
or
bound
adc
ret
or
sub
fdivrs
sbb
fistpl
sub
dec
ret
and
vpshufd
inc
dec
mov
push
mov
push
xor
insb
mov
jo
mov
call
leave
mov
lods
int
mov
scas
out
call
sbb
dec
mov
test
xor
mov
std
cmp
and
push
xchg
dec
lret
gs
mov
sahf
mov
push
es
ficompl
subl
cld
arpl
xor
lods
insb
jge
sbb
scas
stos
iret
inc
mov
das
pop
jle
xchg
mov
sbb
ficompl
jbe
jmp
mov
and
xlat
push
jnp
mov
sbb
mov
call
mov
pop
add
movsl
ret
inc
daa
ficoms
push
jge
insb
popa
push
gs
dec
lret
cmp
cmp
mov
jl
cwtl
lock
mov
fbstp
aaa
xchg
mov
push
lahf
out
or
out
test
repz
test
faddl
ss
and
pop
inc
push
jnp
push
mov
mov
mov
subb
call
aam
test
xchg
iret
pop
xchg
fcmovb
out
sbb
in
out
push
push
dec
xchg
es
adc
in
mov
popa
ret
scas
sbbl
js
int
std
lods
mov
or
call
adc
mov
lock
scas
int
int
cltd
fldenv
je
icebp
cmpsl
insb
and
push
push
sub
add
daa
inc
mov
ret
push
jl
and
sub
hlt
jle
mov
pop
jl
fnstsw
inc
fcomi
mov
inc
mov
in
cmp
jmp
repz
jg
pop
mov
and
cli
sub
addr16
jecxz
lcall
xchg
cmpl
mov
mov
jns
jp
mov
jo
push
das
jle
fs
lods
and
push
movsl
cli
sarl
cmp
push
outsb
rcr
push
fisttpl
inc
xchg
scas
jge
popf
mov
shlb
ret
ljmp
mov
push
dec
stc
cmp
loop
ljmp
test
insl
jmp
into
jmp
inc
into
cmpsb
sbb
and
cmp
test
jmp
or
arpl
loop
fildl
aas
adc
mov
popf
mov
aad
out
xlat
cwtl
std
dec
mov
std
or
xorb
stos
jns
add
test
jo
aad
pop
jecxz
lock
push
lahf
aam
mov
arpl
cwtl
mov
adc
mov
xor
and
out
ret
cld
hlt
push
xor
mul
adc
jo
xchg
cwtl
shl
push
inc
xchg
sub
insl
mov
scas
mov
lret
enter
outsl
loop
and
jne
lcall
arpl
dec
shrb
scas
loop
jnp
jmp
les
and
add
cmp
leave
imulb
cmp
or
or
push
call
inc
pop
incl
mov
addl
out
xor
inc
add
jg
push
cld
fistps
inc
adc
cmc
adcl
lahf
shr
xchg
ret
jmp
inc
sub
pop
sti
mov
je
mov
or
jae
cmpsl
sbb
icebp
cmpl
xor
fnstenv
clc
pop
dec
push
and
adc
addr16
jbe
ljmp
decb
or
arpl
orl
jno
andl
lock
vpmuludq
cli
fldcw
fdivr
push
fucomp
add
xchg
sahf
daa
pusha
inc
or
jp
in
cmp
ds
xchg
adc
jle
movsl
lcall
inc
push
push
into
ljmp
add
fmuls
xchg
sub
in
mov
pusha
push
mov
mov
push
jg
fstl
out
ret
lea
xor
cmp
jle
lret
inc
out
repz
in
movsb
pop
ret
xchg
cmpsl
adc
leave
subb
lahf
cmp
out
scas
push
roll
pushf
pop
or
push
pop
jmp
clc
js
repnz
mov
out
mov
in
sbb
push
cmpsl
pop
mov
lock
pop
imul
pushf
and
mov
mov
lea
test
out
sub
jp
mov
insb
or
xor
repz
add
ljmp
aam
inc
lods
fisttps
push
fs
mov
and
incl
cmpsl
mov
out
mov
push
rcrb
scas
cld
adc
pop
dec
cmp
loopne
adc
testb
or
mov
cmpsl
dec
add
and
pop
xor
out
cmpsl
les
mov
lret
or
jo
push
push
pop
rol
sahf
xchg
or
pop
add
rorl
movsl
mov
jmp
fstl
fsub
aaa
and
ljmp
mov
ljmp
add
xchg
jp
movsb
in
pop
add
movsl
enter
ret
dec
mov
dec
xchg
jne
movsl
out
adc
insb
std
mov
repnz
hlt
ja
outsb
mov
insl
movsb
insb
and
mov
jl
divl
push
loop
mov
fcomip
test
pop
outsb
push
es
lock
ret
pop
testb
test
aam
leave
pop
pop
or
fcmovbe
lret
mov
fstps
push
xor
adc
push
xlat
jo
xchg
mov
mov
adc
pop
stos
ror
outsl
jle
loop
push
jbe
add
xor
imul
movsb
fimull
mov
adc
xchg
push
pop
jl
shr
cli
sub
das
mov
pextrw
adc
mov
pop
dec
sub
push
repnz
mov
scas
sbb
cmc
in
in
or
pop
movsl
dec
push
jmp
cmp
push
insl
mov
fldcw
lock
push
jl
lret
inc
mov
jmp
xor
push
sti
add
mov
cltd
dec
sbb
rorl
cmp
adc
mov
rcl
jp
jo
cli
pop
test
and
jg
push
jmp
xor
lcall
lods
in
xlat
and
into
dec
hlt
mov
inc
pop
lcall
das
subb
mov
fcompl
mov
in
pop
icebp
mov
push
fistl
inc
xlat
scas
inc
mov
shll
scas
popf
xlat
js
mov
push
lcall
test
jl
push
mov
ffree
notb
cmpl
mov
jmp
lock
pop
fdivp
push
repnz
and
lret
mulb
out
mov
cli
popa
in
mov
insl
in
das
into
cmp
loopne
adc
ss
aas
mov
or
pop
mov
test
aas
arpl
or
rep
andb
cs
repnz
nop
mul
lahf
sbb
inc
dec
jmp
dec
push
mov
mov
jl
fld
sarl
jnp
mov
push
pop
jecxz
xchg
mov
cmp
cmp
or
push
insb
sub
pop
js
out
lea
shll
rcll
push
xchg
ljmp
mov
lds
fmull
adc
notl
inc
loop
into
ret
repz
dec
jmp
pushf
pmuludq
mov
mov
lods
dec
ret
clc
movsl
aam
and
ds
pop
mov
adc
cltd
push
add
xor
cld
orb
lcall
ss
ja
pop
into
lods
push
aam
jb
imul
dec
pop
cmp
mov
inc
stos
cs
in
aad
gs
ljmp
or
loop
popa
lods
shlb
mov
test
test
leave
pop
ljmp
add
js
sbb
jl
lock
cmp
cli
insb
loopne
jp
xchg
ret
addb
icebp
fucom
ret
test
fiadds
aam
lret
das
shrl
insl
not
fnsave
in
aad
mov
hlt
cld
dec
pusha
decl
mov
mov
xchg
ds
orl
out
cwtl
lods
pop
cld
mov
mov
sbb
sbb
sub
jge
lea
and
fcoms
xchg
jmp
cmpsl
mov
rcrl
or
push
xchg
xchg
test
dec
hlt
inc
sbb
mov
test
test
aam
mov
sbb
shrb
outsb
mov
stos
xorb
mov
icebp
or
mov
mov
push
jl
jns
hlt
xor
mov
add
scas
jge
mov
stos
repnz
mov
mov
lods
xor
das
inc
rclb
add
frstor
cld
call
sahf
int
dec
mov
pop
add
mov
jp
or
lret
jg
dec
fcomp
inc
cmp
xor
loopne
addl
iret
jmp
mov
or
mov
iret
mov
xchg
outsb
cmp
sbb
pop
jg
mov
scas
dec
or
nop
popa
xor
mov
dec
push
out
imul
inc
fdivrs
rorb
cmc
mov
lds
std
add
daa
xchg
mov
cmp
mov
int3
mov
push
sub
jle
aad
add
xlat
in
jecxz
ljmp
imul
das
inc
pop
add
loop
add
push
xorb
movsl
les
sub
repnz
ret
fcoml
jnp
fst
aam
ja
adc
gs
dec
add
push
mov
push
or
shlb
in
xor
hlt
mov
dec
cmpsb
mov
rolb
or
test
test
jnp
test
push
xor
mov
mov
test
mov
jmp
jp,pt
and
and
cmp
mov
stc
mov
call
add
sbb
lcall
bound
int3
rolb
jno
and
aam
jo
inc
shr
stc
and
neg
sbb
gs
mov
aas
xchg
je
jmp
or
jmp
leave
fsubl
add
out
je
lea
mov
sbb
cmc
lods
dec
adc
cmp
sahf
fisubl
out
cmc
mov
out
dec
loop
popf
rcl
xor
insl
jae
nop
sub
andb
inc
push
ret
aaa
cs
sbb
adc
pop
cmp
sub
add
dec
insb
jl
push
or
add
cmp
out
sti
outsb
inc
and
or
xor
sbb
mov
adc
cmp
adc
jp
dec
xor
or
xor
loope
subb
fwait
xor
stc
and
sbb
lret
add
fcomps
les
jmp
xchg
ror
sub
mov
int
pop
sarb
dec
lods
inc
fdivs
cmpsb
mov
scas
push
mov
jmp
mov
out
leave
mov
data16
xor
int3
xchg
pop
dec
xchg
pop
mov
adc
arpl
leave
mov
aam
dec
fmul
pop
jnp
mov
movsb
cmp
sub
cmc
push
sbb
push
hlt
ret
dec
outsl
call
xchg
sub
sub
xor
jmp
mov
push
xor
mov
mul
dec
xor
fisubl
and
scas
insb
test
pop
fidivrl
shll
lret
inc
xchg
pop
adc
mov
je
out
cmp
dec
int
jecxz
jle
cmp
stos
cmp
jg
mov
sbb
das
aaa
les
fnstcw
mov
out
int
call
shlb
dec
inc
sahf
xchg
push
pop
lds
test
aad
cmc
jg
cltd
or
in
and
outsl
div
sarl
in
cli
loop
cs
jne
jge
push
in
rorl
test
addb
inc
add
inc
jecxz
mov
scas
aaa
xchg
popf
sbb
popa
es
fisttpll
mov
lea
xor
in
push
add
int3
xchg
adc
inc
cmp
daa
ds
cmp
mov
add
xor
xchg
iret
loope
pop
insl
fcmovnbe
cli
jl
and
je
and
repnz
cli
shrl
pop
rol
cmc
mov
xchg
adc
xchg
loopne
les
fisubrs
inc
loope
sbb
push
lods
pop
sub
loope
and
in
cmpsb
and
nop
mov
pop
xchg
into
xchg
enter
adc
jle
pop
fidivs
ret
lret
pop
pop
mov
xor
adc
mov
popf
out
add
faddl
iret
jle
push
sbb
push
xchg
mov
or
adc
ss
sahf
add
or
push
mov
mov
push
movb
scas
ret
mov
in
push
cmp
xchg
push
in
lea
test
xor
fisubs
insb
imul
push
xchg
inc
shr
fsubl
das
int
mov
and
jnp
lock
sbb
mov
adc
mov
rcr
int
enter
int3
cld
dec
out
add
or
mov
movsl
aad
sbb
xor
scas
pop
test
iret
aam
adc
mov
add
mov
push
or
imul
mov
stos
jmp
int
ret
xchg
mov
fwait
or
push
mov
cmpsb
imul
push
popf
and
movsl
push
mov
fiaddl
lods
cmpl
push
aaa
adc
cmovnp
std
mov
jl
pop
iret
xlat
xchg
rcll
ret
stc
add
cmpsb
push
ret
ss
dec
call
aad
adc
mov
adc
xchg
inc
ljmp
test
cs
pmullw
pop
bound
int3
lds
movsl
lcall
mov
movsl
dec
fisubs
xchg
xlat
mov
pop
jecxz
imul
out
dec
in
xchg
movsb
test
hlt
call
sub
mov
cmpsl
push
mov
test
call
mov
iret
ljmp
fidivl
fsts
dec
test
fidivrs
mov
fadds
xchg
mov
pop
pop
pop
sti
xchg
iret
into
in
push
inc
and
enter
popa
test
pop
bound
xchg
lock
addr16
rolb
das
sub
push
jb
fsubl
call
mov
cmc
mov
lods
stos
cli
cmp
dec
mov
mov
push
std
adc
rol
fmuls
mov
sub
mov
bound
dec
ret
inc
sbb
pop
xor
enter
add
daa
loope
mov
scas
shrl
mov
adc
cmp
cmc
adc
dec
inc
rolb
push
loope
jb
loop
inc
lsl
subl
sbb
xchg
andl
mov
inc
leave
push
leave
mov
inc
cmp
xchg
add
movsb
and
ret
iret
push
push
mov
or
std
divb
loopne
lret
push
aam
sbb
into
push
rcr
rclb
repz
dec
adc
xor
fistpll
sub
xchg
and
xchg
xor
inc
mov
mov
cs
stos
inc
or
imul
pop
outsl
or
push
mov
push
pop
mov
jmp
loopne
add
and
adc
sbbb
pop
xor
lds
mov
xchg
mov
push
or
push
mov
mov
in
mov
jmp
iret
es
push
inc
jnp
sbb
pop
push
aam
lret
imul
inc
aaa
shrb
fdecstp
dec
aam
mov
lahf
movsl
push
sub
jecxz
out
push
lock
into
stos
jae
push
call
loope
push
add
add
test
push
or
inc
aas
sbb
push
or
push
pop
or
pop
aas
jl
fsubs
loop
mov
fnstenv
mov
and
scas
inc
mov
aam
adc
mov
movsl
cmpsl
push
fdivp
pop
cwtl
pop
mov
ret
pop
mov
fbstp
idivb
in
imull
int3
mov
test
cmpsl
test
push
sub
aam
mul
mov
push
ljmp
jno
idivl
outsl
dec
fdivr
sub
and
cmp
ficompl
stos
dec
mov
into
in
lock
mov
lds
repnz
in
arpl
push
pop
and
cwtl
lahf
stos
dec
add
test
mov
cmc
subl
andb
lods
cmp
sbb
int
add
mov
aas
xor
pop
add
pop
cld
mov
jge
adc
mov
dec
cmpsl
push
fnsave
mov
jl
fstps
or
shll
lds
psrlw
xor
les
mov
out
mov
adcb
sub
sub
insb
in
in
into
cs
jo
jp
clc
dec
es
sahf
push
sarl
add
ficompl
dec
pop
shlb
cmp
inc
repnz
repz
mov
out
dec
int3
sbb
stos
lret
lods
jae
pusha
xchg
pop
ljmp
iret
fsubs
jne
bound
jo
and
ds
xchg
dec
jae
imul
jmp
mov
adc
xchg
rcl
stos
lds
aaa
fs
or
pop
mov
outsl
or
mov
ret
fildll
popa
inc
outsb
push
push
insb
cmp
mov
rorl
or
popl
mov
push
xchg
jne
ror
sub
in
jns
add
push
push
and
sub
mov
xor
mov
icebp
in
outsb
div
addr16
cmp
lea
jbe
xchg
ret
mov
mov
arpl
loope
dec
mov
inc
in
lea
push
rorb
das
xchg
pop
mov
sub
fstl
jae
mov
clc
dec
add
sti
or
add
das
mov
daa
cmp
imul
negl
mov
push
ja
xor
push
mov
fimuls
movb
push
fs
mov
mov
das
adc
popf
adc
sbb
xor
push
xor
aad
jno
sahf
push
xor
int3
cs
jecxz
mov
negb
movsb
xchg
inc
xchg
int3
dec
xlat
mov
dec
int3
push
mov
fbstp
jnp
and
mov
les
adc
pop
js
xlat
push
jp
or
mov
mov
mov
push
test
stos
fs
les
xchg
pop
or
outsb
add
lock
ljmp
mov
mov
in
xchg
dec
test
movsl
push
mov
into
aaa
shrb
aad
ret
or
int
dec
push
mov
iret
idiv
ret
leave
mov
sub
aas
mov
int
repnz
jg
loope
dec
fdivs
loop
out
adc
jecxz
fldl
sbb
in
shlb
mov
xlat
addr16
and
fimuls
mov
cwtl
push
jno
scas
sahf
lcall
sub
test
and
iret
imul
xlat
xchg
les
push
scas
in
loope
mov
mov
in
cmc
sub
or
add
push
andl
cmp
dec
mov
stos
add
int
dec
push
sub
test
mov
jmp
mov
lds
ficomps
dec
fidivl
fdivp
hlt
push
int3
or
enter
insl
mov
add
or
daa
sbb
jg
icebp
inc
lret
std
stos
es
je
or
or
dec
rorb
push
test
dec
aam
inc
sub
xor
scas
int3
pop
push
and
pushf
push
xor
xor
push
hlt
xchg
fistl
push
hlt
out
decb
or
aaa
push
out
mov
in
fdivl
push
jo
xchg
jb
sub
cmp
cmpsl
scas
push
ds
fs
imul
mov
or
mov
mov
ljmp
sbb
pop
outsl
hlt
scas
mov
fisubrs
loopne
hlt
and
mov
andl
lods
push
jne
jp
mov
mov
mov
mov
pop
sbb
sysenter
stos
sub
loop
lds
ds
mov
sbb
mov
add
push
or
loopne
lret
adc
sbb
pop
lock
add
fists
xlat
xchg
nop
lds
fsubp
sub
push
incb
xchg
and
fadd
adc
push
lods
mov
push
xor
int3
inc
pushf
jg
je
sbb
int
lods
or
jl
mov
cmc
mov
and
rcl
xchg
inc
xchg
addr16
repz
adc
add
adc
mov
sub
insb
jmp
dec
daa
jmp
push
jo
dec
mov
mov
rol
mov
sbb
ret
js
jne
cmp
add
stos
cs
and
pop
xor
repz
push
adc
xchg
jne
cmp
xchg
int
mov
adc
imul
stos
push
and
cmc
adcl
xchg
rcrb
cmp
insb
push
stos
nop
sub
out
stos
push
jnp
jecxz
add
inc
jg
test
ljmp
push
adcb
adc
push
mov
jb
in
jmp
pop
mov
pop
test
xor
fwait
xchg
js
ljmp
sbb
repz
mov
add
or
mov
fnstcw
pop
nop
jge
mov
rclb
push
mov
jl
andl
arpl
imul
lret
es
xlat
popa
sbb
jp
dec
insb
movsl
adc
jnp
stos
mov
jae
push
loop
dec
push
dec
imul
jmp
inc
adc
adc
xchg
movsl
les
dec
notb
lret
cmpsl
pop
test
lahf
sbb
push
mov
std
mov
ja
test
mov
add
xor
enter
xchg
or
adc
xor
xor
les
stc
int
das
scas
mov
add
in
mov
sbb
push
add
test
cmp
jmp
add
mov
fucom
adc
inc
es
int3
add
movsb
lock
fisubl
adc
aad
in
pushf
mov
mov
cmp
andb
mov
cltd
sbb
mov
push
cmp
in
sub
jb
popa
cmp
push
cmp
add
mov
xchg
imul
jb
test
or
daa
pop
xchg
out
add
mov
xchg
and
pop
cmp
or
fcomp
arpl
out
and
lret
out
mov
inc
add
jno
stos
fisttpll
mov
lret
mov
and
icebp
mov
sbbb
loope
int
cwtl
xchg
jmp
sbb
push
jge
cmp
inc
int3
mov
int3
push
mov
insb
push
dec
repnz
pop
jbe
test
sbb
xor
movsl
mov
push
jmp
mov
vunpcklpd
ffreep
push
sub
sub
es
mov
out
ficoms
or
lret
subl
inc
test
cmpsb
mov
dec
push
out
ds
xchg
push
ret
loope
sahf
jl
mov
fsub
push
popa
inc
mov
pop
movsb
cmpb
xchg
mul
jne
dec
fstps
repnz
adc
jne
push
mov
sahf
sub
xor
ja
out
push
xor
cltd
add
pushw
cmc
sub
mov
pop
mov
outsl
or
stc
add
daa
aam
xchg
cwtl
add
xor
inc
jge
std
add
push
xor
and
sbb
call
jnp
out
cmc
cli
popf
sarb
mov
shr
vpextrw
lds
iret
mov
stc
inc
cli
and
xor
out
lret
idivl
and
xor
lcall
ljmp
pop
or
les
mov
subl
xor
inc
adc
mov
xor
test
or
jno
xor
lea
and
inc
push
xor
sub
sarl
ss
or
jl
push
jle
lds
test
pop
clc
mov
jbe
adc
adc
jae
sub
xor
aad
mov
mov
rcrl
ja
testb
inc
pop
sub
call
sub
popf
mov
push
push
clc
xor
pop
fcompl
pop
dec
dec
adcl
push
inc
call
out
and
mov
xor
and
and
repz
testb
cmpb
gs
add
mov
mov
std
insl
mov
dec
xor
insb
adc
push
into
adcl
jmp
xchg
mov
dec
jns
sti
lret
xchg
insl
xchg
std
mov
fs
in
lds
or
jmp
lahf
ret
mov
cs
push
in
fsubl
or
clc
inc
hlt
pop
mov
adc
divb
xor
sti
es
orl
aam
mov
movsb
sub
test
mov
bound
lahf
cmpl
inc
mov
test
sub
dec
mov
test
scas
clc
out
and
mov
shr
pop
shufps
in
jbe
int3
mov
loope
mov
xor
fisubl
dec
dec
das
and
mov
xlat
and
sbb
test
lods
jmp
mul
fimuls
cltd
jl
scas
mov
mov
jmp
loop
mov
lret
insl
outsl
add
shrb
cmp
mov
lods
std
daa
pusha
mov
lods
mov
xchg
int3
xchg
in
mov
mov
cmp
out
in
xchg
lret
cmp
or
fmulp
sbb
lret
scas
nop
sub
ljmp
das
leave
scas
inc
iret
add
and
mov
and
dec
mov
ret
push
in
fxch
add
stos
pop
out
lea
jbe
dec
fiadds
pop
add
sarl
xor
xor
pop
add
iret
mov
mov
out
out
mov
int3
faddl
xchg
leave
pop
jb
nop
or
rcll
bound
lds
in
jecxz
push
cmc
stc
sbb
mov
inc
add
add
mov
popa
int3
xor
dec
sub
insl
push
mov
xchg
repz
and
into
mov
test
out
or
add
fisubs
sti
mov
push
pop
push
arpl
pop
aad
rcrl
sbb
cli
inc
mov
mov
out
sbb
add
push
bsf
xor
jne
inc
cld
out
push
ds
dec
jp
xchg
mov
imul
add
add
pop
xor
adc
out
js
mov
ss
cltd
dec
add
popf
out
and
cmp
dec
lods
insb
addb
xor
mull
mov
stos
mov
pop
lock
xchg
repnz
mov
mov
int
jb
mov
in
sbb
inc
lea
or
stos
dec
lods
test
mov
mov
ss
into
int3
loop
fdivrp
ja
inc
shlb
adc
dec
push
or
arpl
sub
stc
shll
cmp
sub
inc
mov
pop
ss
or
adc
addb
rcll
clc
dec
lahf
inc
stos
test
cltd
stos
fisttpl
add
inc
sub
lds
shlb
rcrb
cmp
daa
xchg
dec
sub
pop
xchg
ss
cmpsb
insw
sbb
dec
inc
stc
hlt
stc
idiv
pop
in
sbb
cmp
int
lock
pop
or
aas
adc
xor
out
xchg
mov
ret
push
mov
and
movsb
mov
xlat
dec
test
shll
lods
ret
push
lret
xchg
xchg
push
mov
icebp
mov
cmp
addl
push
daa
dec
nop
pop
dec
push
repnz
xor
add
fiadds
idivl
inc
into
push
rorl
add
adc
or
rcrl
jne
jne
dec
push
sub
ja
sbb
sbb
fadds
or
sbb
ljmp
fistpll
mov
cmpb
lea
les
sub
ljmp
push
and
cmc
subb
loop
push
sub
pop
dec
cmp
out
jg
div
jge
xchg
mov
movsl
xchg
xor
jp
mov
negb
nop
or
mov
out
and
nop
inc
dec
movsl
test
pop
or
lea
inc
pop
cld
mov
ljmp
ret
xor
aad
mov
push
xchg
xor
push
push
pop
mov
mov
rcrb
push
jle
mov
movsl
inc
dec
lahf
inc
jle
mov
mov
lcall
push
sub
cmp
popf
in
or
xchg
pop
cmp
cmp
cmp
lret
pop
cmp
lcall
loope
or
cmp
in
fs
insb
sbb
int
inc
dec
or
push
mov
shl
in
mov
cld
cmpsb
aad
loope
mov
rcll
ljmp
stos
enter
dec
push
shll
andl
lea
inc
xor
mov
or
sub
jecxz
rcrb
dec
cld
cli
ja
ds
dec
xchg
div
xchg
xchg
mov
mov
ss
cmpsb
sbb
mov
scas
jge
int3
fistpll
stos
xor
movsl
sub
enter
into
aam
mov
and
jmp
inc
push
add
fidivrs
movsb
sbb
shll
xchg
push
scas
push
xchg
or
push
cltd
andb
sbb
lods
push
insb
aad
adc
mov
push
in
fsubs
sahf
dec
pop
nop
adc
add
pop
lahf
mov
out
stos
fnstcw
mov
mov
adc
lea
nop
sti
divl
add
push
jmp
and
or
fstps
and
adc
inc
movsl
into
ljmp
jp
stos
iret
dec
dec
sbb
test
into
sbb
clc
bound
inc
aad
out
popf
cmp
out
cmpsb
sbb
xor
idiv
clc
and
jge
mov
in
jmp
iret
adc
xchg
addb
and
in
popa
fsts
movsb
fs
mov
fidivs
jge
lds
mov
dec
mov
pusha
cwtl
lcall
cmp
dec
mov
je
and
add
sbb
dec
mov
test
xchg
jle
ss
dec
les
push
push
lock
nop
call
sbb
xor
roll
pop
xchg
and
insb
cmpxchg
adc
test
and
in
cmp
cmp
lcall
in
pop
cwtl
imulb
ficompl
mov
popf
jge
jnp
and
and
mov
pop
mov
loop
inc
inc
jecxz
shrl
movsl
mov
xor
into
je
sahf
lods
icebp
test
or
cmp
push
mov
dec
xor
outsb
xlat
and
out
push
fistpll
jno
adcl
mov
adc
mov
sbb
pop
fs
push
adc
fcoml
sbb
dec
xchg
inc
inc
loop
into
inc
hlt
push
mov
testb
cmpsl
out
stos
test
add
xchg
push
divb
cmc
inc
or
stos
test
add
mov
mov
aas
mov
adc
cmp
out
cld
cmp
cmovge
or
jmp
inc
sti
jae
xchg
xchg
jle
xchg
mov
loopne
push
adc
or
fs
cli
or
and
andl
adc
xor
sub
sbb
jne
mov
imul
lods
in
push
pushf
cmc
out
cltd
popa
cld
inc
iret
jae
popa
btl
aaa
imul
andl
ss
addr16
mov
addl
push
pusha
sub
je
mov
imul
ja
jo
ds
fdivr
cs
sbb
insb
pop
stos
sarb
cmp
jmp
push
int3
or
xchg
mov
sbb
cltd
movsb
gs
push
aad
hlt
sahf
jne
add
sbb
jmp
mov
cmp
fs
stc
mov
xchg
lods
push
scas
js
daa
fwait
jmp
cwtl
out
cli
ficomps
mov
mov
sbb
nop
cli
xchg
cld
mov
lea
out
int3
or
jle
aas
xor
or
dec
cmp
mov
and
cmp
adc
xchg
jne
das
mov
mov
pop
mov
or
repz
mov
cmp
out
mov
ds
loope
or
js
sbb
sub
sbb
out
or
ja,pt
push
ja
loop
jg
add
les
dec
call
jl
mov
jp
jo
mov
scas
inc
add
xchg
dec
sti
pop
rolb
mov
enter
pop
mov
test
scas
pop
gs
int3
stc
fs
call
mov
and
fidivl
dec
mov
inc
addb
dec
ret
pop
or
xor
jo
cs
stc
dec
cltd
cltd
sub
mov
cmp
xchg
and
sbb
cmpsb
xchg
lret
mov
insl
mov
sahf
ror
add
int
inc
add
or
mov
xlat
sub
addl
add
jp
push
inc
push
mov
cmpsl
lcall
rcll
arpl
bound
ret
addr16
imul
rorl
loope
mov
frstor
xchg
mov
fidivl
adc
loop
sahf
ja
adcl
push
or
jns
cmp
sub
xor
sahf
scas
xchg
fnsave
mov
mov
in
inc
add
call
scas
push
mov
shrb
or
adc
outsb
daa
int
add
fcomps
xlat
xor
enter
fiaddl
sbb
mov
aas
adc
stos
sahf
cmp
sarl
jae
add
call
add
hlt
cmp
test
or
leave
sbb
xor
lock
adc
mov
ret
cltd
mov
lds
out
push
pop
out
sub
dec
inc
mov
xchg
xor
cmp
lock
push
mul
aam
lods
xchg
mov
ffree
push
mov
xor
jae
stos
into
dec
push
mov
leave
and
sbb
push
pop
clc
stos
or
insb
sbb
mov
inc
fidivs
call
mov
or
je
sbb
and
ds
stc
push
pushf
push
cmc
movsl
dec
idivb
frstor
incb
add
push
or
fwait
push
or
add
mov
sbb
mov
add
xchg
addl
push
mov
sahf
xchg
ds
mov
cwtl
adc
testb
aam
inc
mov
out
sarl
adc
jge
lds
adc
mov
lods
and
pop
inc
jl
xor
out
shl
nop
rorl
pop
dec
xor
into
inc
xor
mov
mov
dec
mov
mov
dec
mov
mov
jecxz
fldenv
adc
add
inc
add
dec
xchg
xchg
into
mov
jl
inc
loopne
inc
icebp
jae
ficoms
xor
popf
dec
cmc
iret
ss
adc
je
sbb
xor
adc
fistpl
rorl
push
repnz
cwtl
xor
push
in
mov
sbb
lcall
cmc
cmpsl
xor
jle
add
xor
jmp
aad
in
hlt
fisttpll
cmp
dec
repz
fisubs
in
les
xchg
add
push
jl
cmp
adc
aas
sarb
in
xor
ljmp
mov
pop
sbb
test
inc
data16
in
dec
jnp
in
mov
dec
bound
and
sub
fisttpll
mul
push
jnp
mov
push
dec
test
dec
or
inc
aas
or
rorb
sbb
lods
ds
rorb
or
hlt
jl
dec
dec
inc
hlt
dec
fcoml
sbb
mov
mov
mov
imul
lcall
adc
xchg
lods
bound
mov
inc
notb
sbb
mov
adc
push
sahf
cld
cmp
shlb
xchg
jae
aad
add
daa
lods
sbb
imul
dec
xchg
lahf
add
pop
in
lods
add
mov
jnp
cwtl
xchg
ficompl
mov
mov
ljmp
test
push
inc
int3
sub
incl
jge
int
mov
ja
imul
icebp
enter
xchg
jb
fcmovbe
std
dec
ret
das
ds
loop
mov
je
push
pop
cwtd
iret
xchg
mov
stos
roll
push
jnp
inc
popa
cmp
iret
fmul
mov
subb
int
call
in
fisubs
jmp
fs
add
adcl
pop
mov
scas
ret
mov
xchg
xchg
mov
into
mov
mov
add
sbbb
dec
in
out
and
divb
lret
mov
out
dec
pop
sbb
cmp
cmp
mov
jmp
mov
mov
and
xchg
lock
data16
rclb
loope
hlt
test
into
sub
lock
sets
stos
hlt
inc
cli
cmpsb
scas
push
inc
js
jb
mov
xor
xchg
or
sti
scas
fistpll
pop
mov
mov
rorl
mov
dec
loope
pop
aam
jno
jecxz
or
adc
inc
nop
rolb
shlw
or
add
mov
mov
mov
mov
insb
test
lods
mov
mov
jnp
pusha
push
loop
sahf
scas
and
push
jns
cwtl
ret
push
outsl
rclb
iret
jl
into
mov
xchg
jns
or
mov
mov
std
or
insb
lahf
popf
popf
jl
insl
jno
data16
xchg
mov
cs
pop
inc
ljmp
mov
daa
fdivrs
add
jl
xchg
jns
fmull
icebp
and
mov
sub
jg
nop
fucomi
loopne
insb
imul
mov
or
cmpsl
pop
movsb
imul
jmp
mov
shlb
pop
rolb
negl
das
into
pop
mul
pop
xchg
mov
das
movsl
js
pop
xor
fidivs
fstpl
or
repnz
out
inc
xchg
sbb
xchg
or
and
arpl
lock
cltd
mov
adc
stos
clc
and
xchg
ret
loop
or
inc
pusha
jnp
and
adc
sub
jno
fimull
mov
in
push
das
sti
mov
sub
dec
push
ret
or
loope
jle
in
les
inc
insb
out
mov
jmp
mov
fwait
rol
pop
pop
pop
cmp
mov
js
sbb
ss
lods
in
sub
sub
add
push
xlat
jl
das
jp
fs
bnd
and
xchg
cwtl
sbb
sbb
insb
mov
test
and
inc
cmpsb
add
arpl
mov
sti
mov
sub
jl
aad
pusha
mov
fcomp
sub
mov
bt
aaa
scas
jns
inc
into
jmp
test
scas
movsl
bound
scas
dec
cli
sub
cmp
adc
jbe
xor
mov
jge
push
outsl
cmp
or
sbb
addr16
mov
pop
aad
dec
cwtl
ret
push
loopne
inc
sbb
dec
pop
repnz
sub
xchg
mov
fwait
in
test
movsl
rolb
or
push
and
ds
mov
loop
mov
push
jge
lea
adc
shll
lock
out
int
cld
cmpsb
fistpl
and
cld
out
dec
push
dec
fcompl
pop
frstor
xor
mov
std
mov
sti
aas
outsl
mov
out
cmpsb
mov
arpl
adc
pop
jp
ss
les
xor
lea
call
cmp
in
pop
pop
dec
mov
xlat
xchg
in
shr
inc
mov
xlat
bound
mov
fdivl
aam
mov
push
and
cmovle
cli
iret
jmp
mov
std
repz
cmp
in
sub
sub
sbb
dec
call
leave
mov
push
mov
xor
les
ret
add
icebp
sub
pop
fwait
test
cmpsb
cmp
inc
scas
idiv
sbb
loop
fdivrl
movsb
lahf
imulb
mov
xchg
fcomi
out
inc
repz
pop
sar
aaa
mov
push
mov
push
adc
addr16
adcb
sbb
sarb
int
jo
gs
mov
les
inc
dec
cmp
add
out
push
iret
dec
icebp
pop
jne
mov
jle
xlat
or
aas
mov
cmp
in
daa
mov
sbb
inc
mov
divl
mov
mov
push
ljmp
aad
test
lcall
out
dec
fcmovb
outsl
or
sbb
neg
cmp
cli
lret
add
je
fwait
clc
ret
out
sub
repz
or
bt
sub
adc
out
mov
inc
pop
hlt
ret
and
jnp
mov
divb
push
add
fs
sbb
xchg
mov
xchg
xchg
mov
scas
and
jl
or
cmp
mov
lahf
jmp
lds
or
inc
divb
xor
xor
divb
fisttps
adc
paddusb
into
sub
cvttps2pi
jecxz
mov
and
sbb
sarb
outsb
pop
pop
ret
inc
adc
jmp
xchg
daa
cmp
xor
jno
push
vpshuflw
insb
mov
leave
test
jo
mov
mov
or
cmp
push
imul
cli
loopne
dec
xchg
cmp
xchg
cltd
jne
push
xlat
cmc
xchg
xchg
clc
scas
in
inc
sub
push
pop
icebp
dec
ja
ljmp
xchg
mov
pop
cmp
dec
jno
lcall
rorl
mov
jecxz
aas
push
ljmp
lret
jb
jns
sti
fprem
cmp
push
and
aam
ret
add
inc
adc
addr16
and
mov
push
lahf
mov
xor
in
adc
outsb
je
lret
stos
sbb
sbb
xor
shrl
int
cmpsl
push
inc
inc
sbb
jno
jle
or
enter
mov
xchg
scas
fdivrl
fwait
and
xlat
es
rcrl
cmp
out
jae
shl
pop
sbb
sbb
cmp
or
push
jle
and
push
ds
mov
repnz
cltd
mov
sarl
push
lods
cmc
loop
jno
mov
mov
adc
mov
scas
jp
cmc
mov
popa
aam
push
xchg
cmc
jbe
lods
in
addr16
push
push
add
scas
pop
mov
mov
add
xchg
outsb
or
scas
push
scas
mov
mov
negb
stos
loope
inc
adc
mov
or
fidivrl
in
fstl
ljmp
je
mov
inc
push
pop
jg
and
pop
scas
pop
inc
ret
and
and
mov
fs
enter
fildl
mov
daa
mov
sub
jns
rcr
mov
add
lcall
sbb
insl
mov
sub
xor
lcall
mov
sub
ficoms
aam
push
xchg
stc
out
das
sbb
shrl
in
test
cli
lock
or
xor
es
adc
mov
fimull
popf
xchg
aam
popf
cmp
in
scas
fildll
roll
lods
cwtl
lods
inc
push
or
sbb
stos
aam
aaa
mov
push
cwtl
xchg
cmp
pop
notl
mov
repnz
cmpsb
push
les
mov
movl
push
jle
or
and
int
jge
cmpsb
lock
popf
std
scas
and
leave
fwait
mov
xor
icebp
insb
test
nop
or
adc
mov
neg
andl
clc
cmp
test
shll
mov
decb
jp
rcr
xchg
dec
shl
xchg
data16
jecxz
sub
cltd
xor
mov
cwtl
hlt
mov
lods
adc
addr16
mov
dec
repnz
bnd
movsb
movsb
lock
in
or
aad
xchg
mov
ficoml
test
inc
jecxz
jle
ret
test
lock
movsl
mov
cmpsl
mov
mov
pop
rolb
add
mov
or
leave
adc
out
adc
rcrb
outsl
and
cld
sarb
mov
xor
orb
arpl
outsl
outsb
jae
test
xchg
push
adc
inc
loope
popa
mov
inc
dec
bound
fdivrl
aad
xor
scas
fnsave
fstp
test
popf
repnz
xchg
pop
mov
movsb
hlt
call
lret
ljmp
mov
lods
mov
scas
cli
ret
mov
jmp
or
call
jmp
ss
jne
arpl
mov
push
clc
fptan
dec
mov
sbb
mov
repz
pushf
sbb
decb
xor
pop
pop
int
fwait
mov
lea
lcall
mov
mov
mov
insl
inc
pop
nop
jb
lcall
aad
sti
lahf
jbe
fmull
in
sbb
jo
and
insl
ret
jp
mov
in
xor
or
test
adc
fisubs
fld
sbb
cmp
inc
adc
lcall
movsb
mov
jnp
testb
fstpt
ss
nop
jbe
fldcw
aam
leave
mov
icebp
test
xlat
push
xchg
mov
xlat
lret
lret
mov
sti
jle
xor
test
add
orb
stos
xchg
adc
or
jns
sbb
mov
rol
mov
mov
xor
jl
icebp
fwait
pop
orb
fsts
ret
jmp
mov
fidivs
daa
push
jecxz
fsubrp
int
leave
hlt
int3
insl
sbb
insb
jp
test
fwait
out
andl
loope
fs
popf
sub
jnp
push
mov
ss
lcall
ret
adc
iret
jne
fisubrs
cli
testb
out
fadds
and
in
negb
stos
sub
mov
leave
jg
repnz
xchg
push
stos
aam
and
loopne
repz
in
xchg
outsb
mov
popf
fsincos
repz
mov
lds
xchg
jge
sub
mov
ss
aam
xor
stos
pop
lea
stos
fcmovbe
xchg
fisubl
xchg
scas
mov
sbb
lret
and
aas
mov
test
mov
or
xchg
push
jle
push
cmc
scas
into
sub
sbb
cwtl
pop
fstp
xor
test
fcmovnu
push
aam
jle
dec
mov
push
fcompl
push
mov
test
loop
fucom
sub
shrl
cmp
add
test
xor
cmpsl
pop
lcall
ds
xchg
call
outsl
aad
pusha
loop
std
jge
cmpsb
sarb
iret
in
roll
mov
imul
lock
clc
js
ja
xchg
mov
and
test
scas
dec
test
fcomp
aad
in
add
popa
mov
xor
jne
jne
lret
mov
test
push
movsl
fsubl
mov
push
in
aaa
jbe
test
push
add
add
inc
sahf
fiadds
jnp
push
push
cmp
push
xchg
movsl
fmulp
arpl
mov
sti
fstpt
enter
jns
sarb
popf
mov
mov
scas
sub
gs
stc
cli
outsl
dec
push
imul
ret
sub
or
lods
ret
sbb
fs
aam
insl
push
icebp
xchg
test
nop
jge
add
subl
mov
push
imul
mov
mov
or
fildll
arpl
fstpl
aad
mov
pop
clc
lods
das
sarl
repz
add
sahf
jecxz
mov
cmpsb
shrb
sahf
imul
push
in
lcall
and
sbb
fcomip
mov
cli
in
cmpsl
fidivrs
int
fistpll
xlat
push
jmp
dec
add
outsb
aad
lods
cld
adc
xchg
testb
sub
pop
mov
and
jle
fxam
xchg
xor
stc
cmp
sbb
adc
mov
shll
lock
fstps
jne
or
xor
iret
pop
jg
fcoms
out
adc
jl
lods
mov
jns
cmc
mov
aas
fildl
cli
xchg
jle
aam
inc
sub
mov
pop
mov
push
scas
sbb
xchg
cmpsb
push
in
lahf
iret
mov
rcl
cmpxchg
jg
shr
jnp
mov
aam
into
mov
pop
fucomp
xchg
cmp
cs
cmp
inc
dec
shlb
mov
cmp
mov
lods
jns
sbb
mulb
andb
fst
cmc
jae
fstpl
mov
jbe
lock
aad
test
lock
ljmp
mov
mov
loope
aaa
repz
inc
fcoml
cld
dec
dec
insb
mov
sbb
push
mov
mov
xchg
into
jp
mov
stos
test
fildll
inc
gs
dec
fsubs
pop
movsb
mov
push
jle
stc
das
xchg
or
push
mov
mov
xchg
mov
into
cmp
jne
fstpt
mov
mov
test
fsubrs
fimuls
scas
in
fadds
cmc
xchg
jle
mov
ds
scas
cmpsl
fcomps
stos
mov
imul
xlat
lcall
inc
xor
mov
test
ret
mov
shl
dec
loopne
test
push
lret
pop
push
sub
mov
testb
int
mull
jmp
inc
mov
lods
xchg
dec
xchg
jg
es
mov
xchg
pop
out
pusha
je
lea
jecxz
sbb
sahf
and
dec
jo
pop
pop
dec
sbb
ret
movsb
loopne
in
jnp
xchg
sub
push
dec
jne
std
mov
mov
jae
sbb
jge
in
lods
jno
mov
inc
iret
pusha
adc
out
push
or
xlat
jmp
adc
das
shl
bound
cmp
add
shrb
xchg
fistps
fs
popf
shrl
test
cli
sub
ficoms
bnd
sbb
nop
das
xor
mov
rorb
mov
sbb
push
jns
sbb
divl
ljmp
jb
sbb
std
out
popf
nop
sarl
adc
popf
lods
jecxz
je
sub
lods
ljmp
bound
mov
add
xchg
fisttps
jns
jo
push
into
gs
xchg
jge
pop
leave
mov
fisttps
cmpsl
rcr
mov
nop
mov
xchg
popa
mov
loope
call
ds
andl
dec
insl
lret
aam
dec
push
call
and
dec
subl
push
cmp
xchg
add
jo
mov
inc
sarb
xchg
jle
ficomps
pop
shl
insl
push
nop
xor
mov
mov
aas
cmpsl
fbstp
loopne
xchg
bnd
cltd
in
pop
cmp
clc
cmp
stos
xor
fidivrs
mov
rorl
or
test
clc
popa
jl
mov
xor
dec
or
sub
jno
icebp
mov
adcb
mov
jmp
push
fcoml
or
inc
push
lret
mov
sahf
sahf
es
mov
push
in
sub
push
jae
fistpll
push
xchg
aad
mov
int3
leave
loopne
ficoms
test
cmpsb
mov
sub
inc
out
inc
in
addb
mov
sbbl
iret
adc
stc
sbb
add
xchg
lock
leave
xchg
nop
mov
jl
jmp
pop
xchg
sbb
mov
out
fwait
test
lcall
sub
imul
xchg
push
sti
shll
xchg
sub
dec
cmp
mov
dec
xchg
fdivrl
loope
sub
pop
scas
fidivrl
fidivs
push
mov
repz
in
fstl
and
mov
mov
shl
adcb
lea
sbb
mov
push
sbb
ds
xor
ljmp
kmovb
xor
adc
push
lahf
mov
fwait
jge
xor
out
mov
loope
popl
jg
adc
xchg
cmp
pop
mov
sub
fdivrl
jo
dec
mov
loop
xchg
xchg
adc
lcall
mov
fisubrl
pop
jecxz
inc
cmp
mov
ficoml
sbb
and
dec
cmp
add
cld
mov
fidivrl
enter
leave
mov
jl
mov
test
push
push
jns
cltd
sti
adc
mov
imul
mov
jnp
mov
jns
sub
outsl
mov
mov
pop
sbb
out
std
enter
add
jno
adc
rclb
mov
and
pop
call
mov
dec
insb
mov
rolb
out
xchg
jnp
sub
decl
jmp
fcomip
hlt
out
pop
sbb
mov
jge
ljmp
push
push
dec
aad
out
cwtl
sti
in
jns
stc
xor
sub
jbe
mov
popa
push
mov
fucomi
jg
adc
jns
call
call
ret
shll
mov
rol
aam
das
jb
repnz
xchg
dec
test
insl
jp
mov
loopne
mov
out
xchg
push
aad
popf
xchg
scas
add
or
test
scas
outsl
call
jmp
mov
filds
pop
cld
ss
cmp
insb
mov
mov
aad
adc
mov
fucom
sbb
push
call
adcl
xchg
stos
fisttpll
cmp
jp
sbb
aas
pushf
mov
repz
adc
iret
xchg
jge
xchg
cmp
in
mov
and
sub
mov
inc
inc
jmp
mov
imul
fidivs
jle
jl
stc
ss
int3
fldenv
jb
mov
push
adc
mov
xor
push
xor
inc
jle
aad
fcmovne
mov
adc
push
push
call
sub
jno
jno
fnstenv
enter
cmpsb
sar
jmp
sar
repnz
movsb
std
std
ret
xchg
pop
or
repz
adc
movsl
dec
xor
sub
xchg
xchg
mov
sbb
or
jae
fwait
sub
loope
cmp
gs
adc
std
pop
aam
mov
rol
xchg
sub
xchg
jp
hlt
mov
cltd
lds
inc
mov
add
inc
lcall
jno
add
sbb
xchg
enter
popf
into
xor
fstpl
rcll
jl
jns
fstp
or
mov
xchg
clc
push
dec
mov
fiaddl
cmp
aam
jnp
dec
lret
and
fdecstp
outsb
adc
pusha
cmp
aam
inc
enter
lods
insl
lds
mov
lds
dec
adc
jle
mov
lahf
sahf
lret
sarl
pop
sti
jns
pop
mov
in
mov
mov
xlat
mov
jnp
pusha
cld
push
jle
fldl
xor
add
in
cmpsb
xchg
fimull
shl
in
fdivl
pop
mov
das
sarl
sti
lods
jge
sbb
cwtl
add
xchg
jns
mov
sbb
mov
clc
jns
jns
mov
add
ficomps
pushf
in
jp
jg
cmp
scas
imul
insb
ds
xchg
xchg
fdiv
pop
lcall
lods
lods
pop
lcall
imul
fsubs
ljmp
pop
ds
es
insb
xorb
icebp
adc
mov
imul
in
xchg
jb
iret
push
mov
jge
mov
jecxz
lcall
notb
lods
sub
nop
ficomps
cmc
jmp
shlb
fistps
movsl
pushf
jle
loopne
xor
inc
cmp
pop
sub
insl
and
mov
sub
cmp
mov
pusha
stos
pop
and
add
daa
sbb
cli
insb
mov
lods
cmp
pop
es
out
jns
mov
inc
mov
mov
test
loop
mov
mov
lods
cmpsl
bound
int
pop
bound
cli
stos
imul
push
mov
pop
mov
test
mov
dec
mov
xchg
ret
repz
nop
sub
fwait
xchg
jno
jecxz
inc
dec
xor
sub
add
sbb
imul
ret
push
scas
fdivrs
push
stc
mov
orl
sahf
enter
sub
mov
cmp
or
inc
add
pop
mov
adc
jle
int
xchg
xchg
push
js
movb
pop
jno
or
stos
aaa
pop
stos
std
add
xchg
push
push
fnstsw
cmp
sub
mov
mov
int3
stos
pop
test
jne
mov
fidivl
pop
fst
rol
jns
push
in
mov
cmc
cmp
mov
xchg
cmp
sti
cs
loop
ret
mov
cmpsb
out
inc
aad
out
mov
fcomi
or
jecxz
xorl
inc
mov
test
xchg
sahf
push
test
sbb
mov
sub
call
xchg
js
daa
inc
lahf
xchg
sub
lock
mov
rcrb
fistps
stos
jge
or
pop
lcall
jno
popa
movaps
bound
xchg
inc
call
shlb
or
sub
cmpsl
std
add
or
sbb
jge
in
inc
test
mov
nop
mov
push
pop
mov
jno
negl
ficoms
mov
dec
or
adc
in
sub
mov
adc
cmp
xor
unpcklps
xor
ljmp
sub
mov
jle
fbstp
add
sbb
shr
aas
das
repnz
lret
test
jns
add
mov
js
cmp
sahf
in
cmp
cmp
orb
mov
dec
nop
outsl
push
fcoms
cmc
mov
das
aas
ds
and
in
lea
imul
or
sahf
fdiv
mov
mov
ffree
dec
cmp
scas
dec
xor
in
jp
push
xor
mov
pop
loopne
popa
pop
push
sbb
sti
out
lret
jecxz
hlt
pop
mov
push
shr
jnp
roll
jg
sbb
xor
cwtl
ds
out
pop
loope
jge
divb
popa
cli
cmp
test
sub
jb
testl
lods
jno
mov
jecxz
ror
mov
sbb
cmp
and
stos
mov
dec
arpl
imulb
je
mov
sub
and
insb
push
push
pushf
clc
adc
sahf
ret
imul
mov
xchg
andb
add
fcmovu
cmp
stos
lret
enter
dec
imul
lret
dec
rolb
mov
push
or
enter
int3
jge
sbb
jle
nop
inc
xchg
lea
call
out
dec
ret
sbb
roll
mov
scas
inc
add
push
pop
mov
call
mov
jbe
jg
add
pop
stos
into
add
ljmp
push
popf
add
lea
mov
adc
push
rorl
push
adcl
ja
aas
gs
adc
or
add
ret
push
js
add
cwtl
imull
adc
jg
xor
sbb
test
push
push
pop
in
or
xchg
push
outsl
mov
xchg
imul
mov
std
rcl
sub
adcl
ja
sbb
mov
mov
or
lret
les
dec
cmp
add
cltd
in
icebp
test
lds
pop
or
jg
jmp
pop
in
sahf
shl
xor
xorb
popl
push
or
ds
push
testl
inc
int
nop
out
pop
fisttpll
sbb
cmpsb
ljmp
xor
sti
jp
jp
or
cmp
xchg
xchg
sbb
in
mov
cmp
sar
push
fistpll
and
cltd
xlat
test
lea
mov
mov
popa
fucomip
cwtl
ret
sar
push
xchg
negb
leave
lods
movd
inc
inc
or
ret
scas
cmc
mov
jae
push
mov
pop
nop
push
les
inc
ret
data16
push
push
decb
sub
push
mov
pop
inc
cwtl
sti
ret
adc
mov
mov
dec
fcmovbe
mov
aam
insl
cli
cmpsl
push
fwait
das
and
fisttpll
pop
mov
bound
mov
lahf
mov
inc
faddp
xchg
cmp
mov
or
mov
popf
movsl
rcrb
xchg
int3
dec
jmp
xchg
sahf
mov
testl
lahf
and
iret
lahf
and
rorl
fs
addr16
fsts
jns
js
mov
pop
mov
mul
xchg
icebp
jl
cmp
mov
iret
hlt
jo
adc
adc
dec
and
jbe
add
inc
mov
or
fstpt
or
push
fildll
xor
cmp
jb
ljmp
pop
inc
push
cs
call
popl
inc
xor
hlt
daa
clc
aad
cmp
lret
std
inc
mov
lret
sbb
push
movsb
dec
or
push
mov
popa
cmpsb
dec
sub
jmp
lock
inc
cmp
push
rclb
or
roll
xor
xor
lcall
and
cmp
test
push
adcl
je
shlb
push
adc
xchg
mov
out
pop
mov
gs
je
fdivrl
dec
test
sub
mov
xchg
pop
addr16
jecxz
stos
adc
mov
out
fxch
push
int3
mov
mov
dec
sbb
sbbb
pop
in
push
ss
lea
cmp
xchg
dec
jl
int3
jb
mov
imul
mov
mov
jbe
cmc
loope
scas
outsl
xchg
loopne
mov
pop
and
not
xor
xor
dec
push
popa
sub
adc
jno
cmc
xor
and
jmp
inc
xorb
in
mov
orl
xchg
mov
mov
jns
sbb
pop
cmc
insl
inc
mov
les
lret
or
ret
nop
push
out
fsts
mov
inc
pop
scas
add
jg
sti
inc
adc
sub
sub
mov
insl
dec
mov
cltd
fistps
imul
and
test
add
test
ret
mov
mov
jl
fndisi(8087
fsubrs
out
sti
ja
jbe
insl
jae
lods
orb
dec
mov
jl
ljmp
scas
insl
ficoms
fcoml
push
mov
imulb
sub
cld
mov
in
cmp
roll
sti
sbb
fcoml
xchg
mov
jnp
rcrl
mov
ret
and
cmc
int3
int3
push
les
roll
imul
inc
orl
jns
insb
enter
std
aam
cltd
popa
add
lds
shlb
adc
data16
test
mov
cmc
andb
insb
inc
add
fcmovbe
fucomi
lds
push
pop
xor
xchg
ds
push
xchg
shrb
dec
rcrl
push
push
rcr
test
shr
adc
cmp
movb
dec
cmp
mov
jae
mov
shrl
jae
lret
mov
mov
xchg
dec
push
jmp
sub
xchg
jecxz
xor
pushf
cmp
out
adc
jb
adc
mov
sub
icebp
jbe
mov
bound
inc
dec
mov
sar
cmp
insb
mov
in
out
mov
inc
dec
aaa
mov
or
ret
mov
xchg
inc
mov
rorl
outsl
inc
fdivr
frstor
mov
mov
enter
je
addl
mov
or
xchg
sbb
in
jne
arpl
stos
sbb
dec
mov
mov
sbb
insb
rclb
or
add
jg
cld
mov
ret
cmp
sbb
mov
enter
jno
fwait
xor
in
lods
scas
mov
mov
fdivr
movsl
mov
repnz
pop
aam
add
je
stos
xchg
in
std
inc
cltd
fdiv
ss
aam
andl
sub
xchg
movl
mov
and
pop
or
jae
push
insb
add
rcrb
ds
arpl
or
xor
adc
lret
ljmp
rorl
add
out
int3
xchg
out
shlb
std
icebp
adc
jl
pop
in
in
mov
jecxz
or
xlat
or
shrl
and
test
push
xchg
shlb
cwtl
xchg
push
add
pusha
xlat
dec
or
in
and
push
cmp
or
int
mov
shld
or
mov
das
pop
pushf
inc
into
add
xchg
imul
testb
nop
xor
and
adc
sbb
mov
out
mov
loope
outsb
jne
out
pop
pop
call
out
int3
xchg
inc
pop
mov
jl
cmp
rcrb
aad
cmp
shll
lods
mov
repnz
orl
hlt
adc
or
insb
dec
or
scas
add
mov
fnstenv
sti
shrb
fcoms
inc
imul
mov
mov
jne
dec
ds
dec
push
cmpsl
std
push
and
fimuls
in
jbe
push
aad
mov
jno
repz
and
das
push
pop
sub
pop
scas
xlat
cltd
fs
out
add
mov
sub
sub
and
repz
das
aaa
ret
lahf
adc
xor
jmp
adc
sbb
outsl
lods
sub
inc
lret
and
repz
fnstcw
add
subb
sbb
dec
xchg
fisubrs
pop
pop
in
mov
fisubs
mov
mov
ja
push
cmp
mov
icebp
push
into
mov
decb
jo
cmp
cmp
cmp
adc
xchg
jmp
pop
bound
shlb
jge
or
dec
jge
mov
xchg
sub
sbb
faddl
mov
stos
pop
jl
mov
jmp
insb
and
clc
xchg
fnsave
or
mov
jle
pop
xlat
and
inc
in
iret
bound
iret
adc
mov
mov
aam
inc
mov
mov
stos
les
repz
mov
and
jno
jb
popa
or
scas
jo
int
adc
pop
fucompp
push
pop
mov
lret
jle
lret
lods
push
mov
sub
or
jge
jg
mov
mov
jbe
out
lods
mov
dec
js
popa
subl
movsl
ja
ljmp
jmp
loop
mov
cmp
das
sub
and
xor
jmp
xchg
mov
int
add
stos
add
add
add
mov
cli
and
lret
pop
cwtl
aam
sub
outsb
leave
jecxz
das
xchg
sar
xchg
fwait
dec
aam
sbb
xor
xor
cmp
push
lods
fcmovu
je
call
js
lock
mov
jns
ljmp
in
mov
rorl
mov
scas
mov
jo
xor
jo
insb
push
mov
negl
push
mov
inc
out
mov
cmp
in
jno
push
mov
dec
mov
mov
jnp
testl
adcl
xchg
sbb
mov
in
mov
lcall
dec
fsubrl
jns
xor
sub
pop
mov
jae
inc
jne
mov
dec
icebp
sahf
das
jmp
stos
call
repz
aam
test
cmp
lret
mov
push
cmp
insb
in
sbb
sub
xchg
sub
cmp
sbb
sbb
cmp
add
mov
sbb
stc
enter
popa
xchg
mov
in
scas
push
xor
or
int
dec
mov
std
sti
lods
ds
cmp
bound
gs
fnstenv
data16
adc
sbb
sub
xor
roll
cmpsb
into
sub
mov
cmp
icebp
inc
into
das
and
mov
negl
shll
push
or
sub
movsl
shll
aam
in
jg
in
mov
in
or
ljmp
sbb
sti
mov
lahf
jo
mov
mov
gs
mov
mul
inc
sub
add
lods
jns
sub
and
cltd
lock
inc
inc
cmpsb
cmc
push
enter
cmp
adc
sarb
fcompl
test
jnp
mov
xchg
dec
das
fidivl
jle
aad
aaa
mov
repz
and
pop
mov
outsl
or
mov
xchg
add
hlt
and
cltd
or
movsb
cs
jae
rclb
bound
mov
stc
pop
sub
imul
add
int3
cltd
decb
jns
bnd
call
push
mov
mov
fistps
mov
xor
fwait
ja
xchg
lea
dec
lret
mov
es
nop
decl
popa
movb
adc
and
xor
inc
rolb
fisubrs
ss
push
call
imul
jno
pop
test
push
xor
stc
inc
roll
adcl
stos
mov
fs
out
hlt
scas
mov
or
out
jg
push
xor
adcl
hlt
xlat
into
repz
clc
xchg
ret
das
rcr
mov
jl
cltd
mov
sbb
mov
imul
std
mov
jne
divb
jecxz
jmp
hlt
mov
stc
test
add
dec
mov
jl
and
pop
sub
gs
int3
lods
dec
addr16
inc
add
xor
cmc
in
repnz
dec
lods
pushf
repnz
in
iret
jae
cmp
jmp
jb
hlt
and
xchg
in
fsubs
and
lret
aaa
push
dec
cmpb
mov
test
push
add
ljmp
mov
jbe
fxam
inc
and
cmpsb
mov
ret
cld
xchg
lds
inc
movsl
mov
and
xchg
xchg
cmp
aad
je
pop
in
push
mov
cmp
mov
fs
push
sbb
mov
xchg
xchg
in
sahf
fstpt
movsl
hlt
nopl
push
jmp
addr16
lcall
mov
ljmp
sub
inc
push
and
icebp
pop
roll
and
out
cmpsb
add
leave
lock
or
ljmp
sbb
ds
or
shlb
mov
rorb
mov
imul
pop
jb
xchg
push
sub
mov
xchg
out
pop
not
pop
mov
jmp
pop
mov
clc
xchg
adc
into
popf
or
hlt
std
or
mov
ret
mov
adc
call
push
sbb
and
push
movsl
jle
addl
add
xor
mov
sbb
cmp
loopne
ficoms
fs
add
mov
testl
mov
int3
xor
jge
adc
xchg
movb
push
dec
inc
xchg
scas
jo
lret
adc
icebp
sti
mov
ret
pop
xor
cmp
mov
roll
push
xor
aad
movb
sbb
or
mov
jbe
in
movsl
mov
mov
sarl
aam
mov
mov
jb
fidivs
xchg
hlt
test
mov
in
mov
dec
add
out
pusha
int
arpl
into
int3
adc
lcall
fneni(8087
mov
jmp
add
dec
jnp
and
popf
enter
stos
ss
popa
jle
movsb
ja
rcl
mov
pop
dec
push
imul
cmp
mov
fdiv
pop
ds
xchg
dec
xor
and
ret
scas
fsts
ret
sti
sbb
sbb
aad
fs
out
lds
inc
push
loope
dec
jg
dec
sub
cmpw
push
dec
data16
mov
jle
inc
xchg
sbb
lret
loopne
or
mov
stc
cld
movsl
gs
sbb
jecxz
xchg
push
dec
mov
lahf
and
xchg
mov
sub
or
mov
and
or
adc
xor
cmp
pop
fisubrs
add
pop
inc
lret
jecxz
xchg
and
sahf
mov
mov
mov
fidivl
neg
mov
add
fldcw
xorl
push
or
testl
xchg
adc
shlb
dec
xchg
mov
cmc
mov
out
pop
mov
loop
loope
and
mov
dec
fdivl
arpl
cmc
xchg
out
scas
rolb
outsb
push
adc
aad
ror
mov
repz
mov
inc
in
mov
push
cmp
pushf
daa
ds
and
imul
mov
mov
lret
xchg
inc
push
jo
clc
sbb
xor
out
pop
sti
mov
enter
jecxz
sbb
mov
lcall
pop
sti
lds
push
cmp
lea
cmp
mov
scas
mov
inc
dec
repz
mov
xor
xchg
mov
insb
xchg
pop
dec
add
mov
dec
pop
adc
inc
jl
dec
add
lock
sub
jbe
pop
xchg
insb
mov
and
adc
sub
push
mov
push
clc
cmp
rclb
and
mov
ret
test
movb
add
xlat
or
add
lea
icebp
aas
pop
insl
sti
ja
in
adc
dec
cmpsl
sub
inc
sbb
lock
inc
lds
xchg
sbb
dec
pop
mov
mov
push
stc
xchg
sbb
icebp
pusha
inc
jmp
out
fidivrs
mov
testl
push
cmpsb
adc
add
inc
in
lds
nop
loop
cmp
pop
ret
mov
jmp
lds
nop
loope
adc
sub
int3
cmpsl
iret
addr16
mov
or
lret
outsl
rclb
adc
sbb
mov
ljmp
ret
test
addl
mov
cmpsl
andl
outsl
test
lds
or
ja
popf
aaa
aam
dec
mov
add
imul
mov
and
xor
shl
sub
mov
pusha
popf
fidivrs
insb
jns
int
insl
push
call
inc
lret
jle
mov
sbbb
cmpsb
incb
mov
aaa
in
inc
lods
pop
sub
sbb
sub
mov
sub
rol
or
and
inc
mov
dec
dec
imulb
lea
mov
push
push
push
mov
xchg
sub
push
dec
mov
jge
subl
mov
pop
xchg
and
or
mov
loop
es
mov
xchg
stc
mov
xchg
jnp
sbb
push
adc
das
retw
jle
cmp
lock
imul
pop
jae
dec
inc
shl
repnz
popl
fisubrl
xor
mov
into
mov
in
xorb
push
int3
pop
test
dec
repz
lcall
inc
cmp
adc
gs
mov
loop
or
ret
orl
out
daa
ja
out
sub
cld
std
xchg
fs
test
mov
inc
and
in
jmp
mov
insl
and
outsl
push
or
fstpl
or
lret
cs
imul
mov
imulb
fwait
jl
cmp
xor
sub
pop
leave
dec
int
lahf
in
insl
add
mov
dec
leave
add
mov
inc
fstpt
adc
ret
cmpsb
sub
shl
xor
push
jne
cmpsl
in
fstpt
or
jnp
push
dec
lahf
into
sub
lahf
or
in
rcrl
xchg
fidivrl
out
imul
cmpsb
mov
mov
inc
or
pop
mov
popf
out
xlat
movb
jg
xchg
cmp
sahf
int
push
rorl
push
sbb
sbb
lret
push
add
std
in
inc
addr16
lock
std
loope
lods
cmp
stos
mov
mov
jle
pop
inc
mov
add
lret
and
xor
insl
into
into
das
jnp
int
cmp
mov
pop
or
mov
fs
ja
mov
addl
cmc
leave
hlt
jecxz
adc
arpl
hlt
rclb
sub
xchg
dec
in
int3
push
mov
lahf
sub
push
mov
push
aaa
inc
push
div
and
rclb
sti
xchg
cmpsl
sbb
xchg
mov
mov
fildll
adc
fwait
jo
push
lahf
mov
sbb
scas
clc
filds
or
es
imul
jmp
mov
pop
dec
mov
or
gs
les
add
push
push
in
mov
aaa
xchg
jnp
ja
or
loopne
dec
loope
and
lods
xlat
sub
lret
or
out
cmp
cmp
mov
ror
fucomp
add
sar
sub
or
nop
pusha
adcb
mov
mov
cmpsb
mov
xchg
inc
jp
cmp
cltd
pushf
movsl
movsl
xchg
or
decb
cmpsb
mov
movsb
fistpll
popf
mov
fisttps
mov
inc
int
jmp
fsubrl
repnz
fcomps
cmp
fistl
xchg
dec
adc
dec
cmp
shrl
int
fimuls
repz
fdivrl
adc
movsb
roll
int
mov
and
sub
or
lcall
xor
sub
push
mov
push
mov
mov
outsl
push
cmp
push
aad
and
mov
xor
loope
nop
fistpl
push
push
inc
shlb
inc
addr16
cmp
push
and
cmp
arpl
pop
xchg
je
dec
outsl
out
jno
jbe
aaa
mov
jno
in
adc
mov
add
sbb
in
xchg
jecxz
sub
inc
jl
jmp
jbe
add
mov
mov
nop
test
mov
int3
push
movsb
add
mov
jno
out
cs
shl
mov
andb
cmpsl
pop
pop
adc
push
pop
cwtl
sbb
pop
fnstsw
jle
adc
mov
pusha
add
daa
xchg
jp
push
add
out
mov
aam
adc
mov
jne
pop
js
movsl
neg
out
stos
sbbl
mov
pop
lods
mov
sbb
outsb
or
sbb
mov
push
out
mov
fucomi
adcl
fistpl
mov
jnp
flds
adc
mov
sbb
pop
dec
dec
mov
mov
into
inc
or
test
dec
sti
repz
xchg
pop
outsl
dec
jp
jp
or
jle
sbb
fdivrl
push
call
outsb
mov
iret
stos
aad
rolb
enter
imul
scas
not
pop
in
dec
aad
outsb
hlt
fbld
mov
cmp
test
push
mov
and
addl
lods
out
cmpsb
test
xor
test
push
in
jle
sbb
popa
fsubl
cmc
xlat
jne
insb
push
fs
push
das
into
ss
inc
mov
sub
lods
adc
inc
push
push
pop
loope
call
or
sub
jae
fisttps
jecxz
inc
adc
xor
out
test
xor
movsl
jb
scas
call
in
out
lret
push
loop
ds
iret
or
or
scas
cmpsl
mov
push
fsubr
hlt
jp
mov
call
mov
xchg
std
popa
pop
enter
xchg
pop
std
mov
pop
shrb
pushf
cmpsl
jns
ffree
or
mov
stos
sti
repnz
iret
add
nop
mov
cld
daa
dec
loop
movsb
fucomip
mov
mov
pop
das
mov
call
mov
cmp
loopne
mov
jne
aad
lock
cs
jne
fwait
mov
add
or
cmp
ds
mov
pop
lret
les
mov
mov
repnz
nop
fidivs
loopne
nop
out
jge
int
mov
mov
and
iret
mov
sbb
pop
push
movsl
pop
dec
push
into
xor
je
int
jg
and
int
loopne
daa
lret
andl
sbbb
dec
shll
fsubs
mov
test
stc
roll
mov
mov
xor
hlt
xchg
imul
jl
rorl
push
sub
cmpsl
cld
repz
test
jmp
push
fcoml
sub
insl
dec
xlat
movsb
movsl
inc
outsl
aas
push
cs
push
adc
or
mov
test
jbe
pop
push
ss
mov
cmp
ss
int3
adc
jb
mov
push
loopne
dec
sbb
mov
jns
or
lahf
cli
enter
sub
sahf
jmp
fs
adc
cmp
cmpl
aam
cmp
fucompp
lods
add
cmp
push
iret
std
mov
xlat
out
xchg
das
lods
movzwl
inc
pusha
ljmp
adc
pusha
xchg
inc
dec
mov
xor
out
adc
cmp
popf
and
mov
inc
cli
mov
in
roll
pusha
mov
inc
aas
leave
lea
out
jle
loop
sub
repnz
jno
ret
jo
add
pop
shr
out
push
rorb
lret
mov
notl
adc
add
ja
lods
imul
bound
sbb
cltd
outsb
and
fwait
cltd
add
in
jns
scas
loopne
mov
es
dec
dec
daa
int
int3
mov
push
adc
dec
or
rolb
jno
jne
imul
jb
repz
sbb
leave
cld
popa
outsb
movsl
dec
jecxz
out
cltd
xchg
shlb
ret
jle
cmp
out
shl
add
mov
cmpsl
sbb
mov
int
imul
jecxz
iret
pop
mov
das
negb
gs
inc
cmc
or
sti
shrl
add
shl
push
out
fnstsw
in
mov
mov
add
aad
fdivl
fsubr
pop
imul
mull
ja
mov
call
jge
cmp
fstl
or
inc
repnz
xor
inc
add
pop
jmp
pop
pop
outsl
jl
cs
fcompl
mov
inc
mov
push
mov
sub
vucomiss
cmp
out
mov
pop
aaa
out
and
inc
les
and
repz
add
xchg
into
pop
push
clc
add
lret
xor
mov
lods
popa
mov
in
add
jmp
dec
or
mov
test
mov
in
movsl
int
ljmp
jae
in
lds
push
push
out
js
jbe
movsl
jne
pop
mov
enter
inc
mov
pop
add
sub
mov
call
movsb
jnp
cmpsb
loop
hlt
mov
aad
mov
mov
jno
ftst
leave
push
sbb
pop
out
mov
jp
movsb
mov
xor
out
sbb
test
in
sbb
mov
push
or
push
pop
negb
adcl
mov
jp
test
lea
mov
and
movsb
mov
decl
or
jb
pop
sub
push
icebp
test
add
inc
pop
popf
cld
sub
jge
test
jge
fdivr
jle
sahf
inc
or
sub
add
mov
cmp
popa
daa
sti
cmp
cld
test
xor
jmp
in
lods
mov
bound
cmp
mov
mov
call
repz
mov
adc
outsl
cmpsl
jnp
add
push
jmp
push
mov
pop
push
push
add
push
cltd
cmp
pop
mov
dec
lods
je
mov
fistps
dec
and
cwtl
mov
aad
test
sbb
sub
cwtl
sub
js
popf
ret
call
inc
xor
call
arpl
fwait
or
in
faddl
icebp
dec
or
add
adc
adc
enter
adc
out
add
pop
inc
notb
nop
mov
inc
or
cmp
popf
fldenv
ret
dec
call
cli
or
xlat
push
lds
arpl
fadds
shll
in
out
nop
ret
pop
pop
or
xchg
shrl
in
ds
xchg
and
iret
cmpsl
cmc
ja
fldenv
stc
mov
mov
jmp
push
mov
push
jmp
adc
xlat
mov
xlat
dec
dec
fs
jnp
hlt
js
jl,pn
push
adc
hlt
inc
mov
lds
fs
xchg
add
cmc
push
icebp
pop
push
les
mov
paddq
hlt
sub
mov
pop
in
cmp
mov
adc
sahf
xor
jno
out
dec
inc
or
mov
mov
mov
jno
scas
sbb
ljmp
adc
dec
ljmp
sti
sbb
push
lret
lods
in
fwait
cwtl
int
mov
xchg
mov
mov
jmp
cmpsl
push
dec
and
mov
lock
cmpsb
or
or
addr16
inc
je
add
jmp
int
scas
pop
aaa
je
nop
mov
cli
push
movsl
lret
inc
mov
int3
js
outsb
bnd
cmp
push
lret
ret
mov
mov
leave
clc
sahf
inc
xor
cmpsl
add
and
inc
jle
enter
int
gs
xchg
and
push
test
mov
push
lods
out
dec
andl
movsl
mov
add
ljmp
leave
inc
or
shlb
pop
xchg
sbb
cmp
fs
imul
xchg
call
push
or
push
mov
mov
push
mov
dec
mov
mov
mov
stos
add
sbb
lcall
sbb
mov
push
mov
clc
cmp
fucomip
gs
cmp
enter
out
cld
mov
neg
sbb
call
out
mov
aaa
mov
add
rcr
fnstenv
int3
adc
cmp
mov
mov
lods
mov
sahf
mov
xor
push
mov
inc
dec
jge
fildll
fiaddl
jo
sub
dec
mov
in
mov
pop
rorl
mov
ret
and
sbb
mov
popf
push
lret
cmp
jnp
push
mov
fisubrl
test
or
cltd
rolb
addl
in
mov
lret
ja
mov
repz
sti
pop
add
lret
aad
xchg
add
sub
addb
or
jns
xor
loope
clc
cmp
mov
xlat
and
dec
inc
mov
or
dec
add
mov
leave
inc
out
mov
aaa
lods
mov
leave
mov
aam
out
loope
lahf
xor
mov
xchg
jns
in
fcomps
jmp
out
leave
mov
jne
mov
and
scas
subl
sahf
int
aam
hlt
aad
mov
xchg
lock
test
push
xchg
into
lock
cmp
mov
pop
insl
xchg
in
lahf
cmp
lret
sub
js
aad
jmp
cmp
mov
loope
fstps
or
cli
rcl
xchg
arpl
push
xor
lods
mov
shlb
mov
push
ret
fcos
lret
pop
jno
pop
mov
aaa
lods
fiadds
jns
iret
mov
lods
sbb
pop
sub
imul
lret
push
add
cwtl
movsb
pop
lock
xchg
ficoml
repnz
out
mov
hlt
jg
iret
add
xor
mov
aam
lds
dec
in
mov
xor
adc
fistps
push
mov
imul
pop
push
sub
push
int3
call
or
dec
out
out
enter
or
js
push
sbb
dec
or
loopne
pusha
mov
fs
mov
je
jl
je
cmp
jo
testb
ret
xchg
dec
inc
adc
in
cld
cmpsb
psllw
xor
mov
jg
ds
adc
mov
roll
shll
sub
push
mov
push
sub
cmp
jmp
fs
roll
push
push
sti
scas
mov
jg
jno
jne
adc
xor
inc
pop
adc
dec
stos
fisubrl
scas
scas
push
mov
hlt
adc
es
sarl
mov
shll
jg
push
orb
iret
jns
lret
add
bnd
sarl
loope
cmp
cld
cwtl
pusha
pop
test
push
and
das
mov
jp
sub
insb
mov
push
jle
add
sti
sub
sbb
jne
aad
fbld
scas
cs
dec
and
sarl
cmp
pop
inc
push
mov
xchg
out
sbb
xlat
sahf
mov
insb
jbe
push
in
mov
imul
loope
lcall
in
mov
sbb
rcr
shrl
shll
mov
movsb
xchg
add
cmp
idivb
mov
mov
in
pop
adc
mov
sti
mov
int
enter
rorl
ret
or
lods
push
xchg
push
xchg
or
push
loope
mov
fincstp
xadd
test
cmp
cmpb
sahf
pop
dec
negb
test
sbb
jnp
add
xlat
ljmp
lea
pop
add
or
test
push
mov
adc
jg
hlt
jbe,pn
xor
lock
rcr
mov
repnz
add
add
cs
adc
fcmove
ss
repz
arpl
rclb
sub
faddp
pop
lret
in
jno
or
cmpsb
xor
sub
jne
xor
cli
jecxz
xchg
lea
aaa
jne
fs
mov
sbb
ret
movsl
std
cmp
iret
decl
mov
adc
jb
notb
xchg
xchg
cli
mov
mov
xchg
loop
and
and
adc
test
popf
cmc
ret
and
mov
iret
pop
pushf
dec
insb
and
add
inc
mov
es
ficomps
and
sub
add
mov
scas
mov
cs
push
mov
cmpsl
sub
fucomip
pop
sbb
lret
cwtl
pop
in
out
rclb
push
das
int
mov
and
sti
push
lds
popf
xor
xlat
stc
les
sub
inc
fs
jmp
test
cmpsl
push
and
and
stc
pop
sahf
test
je
lcall
idivl
cmp
fidivrs
mov
mov
push
sbb
dec
xchg
jnp
mov
xchg
jo
inc
mov
jne
mov
leave
push
lar
mov
ret
stc
and
iret
int
cmpsb
xchg
imulb
mov
je
es
xchg
mov
mov
imul
insl
bound
jmp
int
not
mov
imul
movsb
inc
fstl
push
add
fimull
in
test
lds
outsl
clc
call
decb
stos
mov
out
add
mov
jg
xor
rorb
add
adc
int3
rcrl
nop
push
sti
mov
std
and
dec
sti
repnz
push
push
repz
lea
and
inc
into
iret
adc
cli
scas
mov
nop
sbb
or
mov
or
pop
mov
fldl
xchg
mov
mov
and
pop
dec
je
mov
dec
xor
bound
das
push
xchg
mov
fs
cmc
or
pop
cmpsb
mov
adc
arpl
in
xchg
rcl
rcr
pop
test
into
lret
inc
in
fsubr
daa
jmp
imul
sbb
shl
pop
push
adc
mov
aad
std
lds
inc
mov
in
or
popf
pop
adc
cltd
lods
fisubrl
out
popf
cmp
add
aad
xor
shlb
mov
cltd
sub
and
scas
adc
in
sub
mov
cmp
mov
in
or
pop
les
arpl
push
dec
rcrb
xor
push
push
std
cli
jg
inc
cmp
ret
or
push
push
dec
mov
out
cmpsb
xchg
jbe
pop
fmuls
inc
or
mov
fwait
cwtl
lret
inc
fs
dec
mov
rcrb
dec
inc
mov
sahf
mov
dec
int
js
mov
movsl
mov
and
inc
stc
scas
push
cmpsb
mov
mov
lods
and
mov
out
xor
xchg
cmp
mov
mov
sbb
xchg
add
sarl
rcrb
cmc
into
lret
add
fstpt
xchg
sahf
jge
adc
sarb
jle
cmp
and
or
mov
mov
rcrl
ss
dec
xlat
adc
mov
div
cmc
ficoms
stos
arpl
mov
xchg
inc
add
adc
frstor
mov
dec
cmpsl
sub
cmp
testl
int3
out
in
data16
in
fistl
in
popa
fstpl
lcall
andl
imulb
add
repnz
and
xchg
mov
aaa
jb
sbb
ret
aaa
xor
inc
jno
add
sbb
fldenv
jle
sub
gs
mov
cwtl
xor
movsb
lret
jmp
lret
xor
call
mov
push
mov
xchg
inc
adc
push
dec
mov
jl
xchg
clc
or
cmc
fwait
int
in
sub
movsl
sbb
cmpsb
rclb
ljmp
xchg
movsb
dec
call
or
cld
push
cmp
sbb
psubd
enter
pop
xchg
mov
outsl
sub
pop
imul
imul
adcb
rcrb
shll
inc
leave
dec
pop
and
fcmovnu
stc
sub
arpl
shll
push
dec
str
ret
xchg
je
popa
ja
mov
mov
lds
popl
sar
cmp
inc
lahf
sbb
test
out
lret
or
rcr
mov
push
jg
mov
sbb
or
in
mov
mov
mov
or
fs
imul
mov
inc
lret
xchg
leave
xchg
ja
mov
push
adc
mov
lcall
sti
jnp
pop
xor
xor
mov
insl
scas
mov
sbb
rol
call
sbb
jg
in
and
mov
aaa
fnstsw
jmp
testl
jne
ret
popf
or
pop
cltd
rcrl
or
jl
dec
dec
notb
cwtl
and
cmp
pusha
push
fucomi
aas
lahf
mov
int
adc
xchg
sbb
mov
cli
mov
js
xlat
jmp
cmp
int3
add
jmp
jl
out
dec
stos
lds
xlat
in
les
push
add
lahf
or
in
push
negb
pop
pop
imulb
loope
jmp
ljmp
sub
fstpl
cmpsb
mov
xchg
outsl
outsl
stos
cmpsl
shr
mov
pop
std
iret
adc
decl
movsb
xlat
cmp
sti
fiadds
testb
jp
dec
pop
dec
lcall
pop
inc
lret
jecxz
subb
pop
fiaddl
or
cld
pop
mov
cmp
fiadds
pop
js
mov
imul
mov
fsubrl
rorl
jl
sarl
ds
lret
lret
mov
addl
add
xor
stos
pop
jp
jl
inc
shl
xchg
and
or
cmpsb
out
pushf
int3
push
inc
push
mov
int
les
rcll
cs
decl
mov
sbb
push
test
lcall
mov
inc
call
push
mov
pop
subl
lret
ret
in
and
insl
add
icebp
xlat
insl
lods
mul
xchg
nop
inc
and
dec
int3
mov
mov
loop
fiaddl
jnp
mov
cmp
loope
or
sti
jmp
xor
inc
mov
pop
fsub
mov
fiaddl
repz
add
mov
outsb
out
jnp
in
sub
fcomip
cmc
ret
aad
jno
out
das
jmp
xchg
xor
jecxz
mov
pop
addr16
push
cli
lds
dec
aas
push
dec
sahf
mov
adc
lcall
adc
pop
std
test
loopne
shrl
mov
xor
push
sbb
xlat
xchg
xchg
mov
xchg
push
data16
cltd
ret
inc
inc
cs
pusha
lret
xor
bound
cmp
mov
pusha
outsb
push
lods
fistpll
test
inc
js
xchg
xlat
pop
xor
adc
scas
ja
dec
filds
call
lret
xor
repz
call
enter
add
mov
icebp
leave
iret
lea
loop
cwtl
mull
mov
sahf
fists
jge
jno
jmp
push
or
shl
mov
mov
cmp
cmpsb
inc
clc
ficomps
mov
stos
ret
rcll
cli
jecxz
aaa
mov
loopne
add
mov
lods
push
cmp
adc
cmc
mov
cld
mov
cmp
adc
stos
pop
jnp
fisubl
addr16
out
adc
dec
lret
pop
mov
ljmp
mov
nop
fnsave
xchg
fcmovbe
repz
lret
test
push
add
fwait
mov
lds
xchg
mov
or
leave
sahf
ret
inc
int
adc
iret
sub
mov
mov
cmpl
mov
xor
and
test
fldl
enter
scas
pop
mov
xchg
mov
add
je
mov
inc
xor
mov
loop
push
aas
xchg
jo
jmp
loop
xlat
ja
fcmovnbe
cvtps2pd
inc
fs
cltd
mov
es
pop
or
cld
shrb
xchg
push
or
cmc
popa
arpl
in
xor
push
popa
and
bound
sub
inc
rolb
jno
lcall
popa
sub
cs
sub
shrb
mov
je
sub
jp
jle
ss
or
mov
ss
shr
sbb
mov
int3
cmc
shll
fxch
inc
xchg
adc
push
mov
mov
scas
cmc
lods
rclb
popa
stos
je
aas
push
mov
cmp
out
cmp
inc
incb
fcmovnb
popf
sub
sbb
mov
in
jge
sub
fs
xor
loop
pop
mov
ja
dec
xchg
dec
inc
imul
adc
push
add
mov
in
test
or
jl
push
dec
xor
inc
xor
mov
cmp
adc
mov
sub
inc
es
into
xchg
sbb
hlt
adc
dec
xor
fisttps
add
mov
jnp
outsb
mov
icebp
lret
fwait
stos
jmp
lds
adc
orb
cmpsl
iret
test
mov
jno
dec
out
pop
lock
mov
insb
dec
push
add
and
jecxz
in
jae
roll
divb
cwtl
sub
inc
cld
jb
push
mov
insl
jp
mov
sub
icebp
pop
mov
cmp
sub
add
out
inc
sahf
clc
inc
add
sbb
and
xor
add
xchg
ret
mov
sbb
jmp
rcl
push
push
fldl
push
push
imul
jo
pop
inc
sub
scas
scas
mov
or
mov
sbb
shl
or
data16
leave
push
add
inc
mov
cmp
adc
cld
or
xor
lret
adc
pop
iret
ret
scas
les
pop
jne
sbb
stos
shll
push
jecxz
in
clc
lahf
or
mov
and
cmp
adc
xchg
mov
push
out
mov
sbb
out
adc
int
jge
into
test
outsb
pop
lods
bound
sbb
sub
inc
addl
ficomps
adc
add
int3
scas
in
ret
stc
adc
stos
out
int
or
test
int
call
mov
lds
test
arpl
mov
mov
cli
movsl
movb
mov
mov
arpl
mov
inc
inc
add
imul
xchg
mov
idivb
lock
clc
pusha
clc
adc
adc
pop
imul
cmpsb
mov
pop
mov
movsl
ret
out
aam
mov
jge
fnstcw
lods
push
fistl
sub
adc
rcll
mov
data16
mov
rcr
or
dec
adc
dec
lods
sbb
pop
mov
mov
cmp
mov
aad
insb
mov
inc
jge
push
fiadds
dec
hlt
rorb
cmp
jnp
addr16
sub
adc
sub
cmp
shlb
and
mov
and
inc
or
out
add
mov
pop
mov
pushf
mov
mov
test
mov
lcall
scas
push
mov
mov
std
pop
rcll
inc
sbb
int3
loope
add
mov
inc
sbb
ret
cmp
outsb
push
push
sbb
sbb
faddl
call
push
pop
pop
frstor
popf
push
sahf
sti
add
in
jnp
or
jmp
ret
scas
lret
xor
lds
lock
cmp
out
mov
and
js
push
or
sarb
smsw
pop
loopne
aad
stc
jp
inc
push
icebp
call
lret
ror
mov
scas
xchg
adc
inc
movsb
mov
mov
dec
mov
shrb
lret
ret
rcrl
hlt
insb
mov
adc
aaa
push
les
sub
cmpl
dec
sub
mov
push
pop
xchg
adc
xchg
push
scas
into
jp
in
sbb
push
xlat
mov
std
sub
rcrb
and
jge
or
and
mov
popf
cld
fwait
push
orl
and
jo
sbb
imull
loopne
adc
imulb
sti
inc
and
rcll
mov
lods
push
mov
mov
add
shl
jne
jno
add
or
adc
fnstsw
cmp
add
lds
repnz
sub
lods
mov
pop
mov
mov
or
push
aas
xor
addr16
sbb
leave
push
inc
or
push
in
test
inc
or
out
mov
dec
test
mov
cmp
sub
shr
adc
sahf
pop
push
aaa
ret
cmp
sti
sarb
add
dec
lods
ja
cld
das
call
in
lahf
xor
mov
insb
xchg
sub
mov
jmp
test
sbb
xlat
rcr
hlt
jmp
jmp
lock
jns
push
dec
push
repz
fcmovu
out
mov
cltd
gs
adc
decb
adc
ljmp
mov
push
adc
jae
xchg
or
int3
xor
cltd
cwtl
lods
inc
xchg
mov
mov
push
mov
jbe
sub
dec
and
in
adc
movsl
push
push
sub
inc
mov
mov
sub
idiv
mov
lcall
or
gs
mov
lret
in
add
mov
adc
jle
add
xchg
pop
push
mov
test
pop
inc
cmc
jmp
pop
inc
insl
inc
mov
sub
daa
mov
mov
dec
iret
iret
scas
inc
hlt
inc
add
fcomp
sbb
int
mov
mov
sbb
int3
jbe
je
inc
loopne
lods
popa
or
int
push
push
cmp
test
rcr
jge
sub
je
push
and
push
fdivrl
mov
fwait
adc
cmpsb
lea
dec
cmp
lods
int3
mov
push
movsb
daa
icebp
mov
lds
mov
pop
xchg
mov
dec
sbbl
and
push
or
cs
push
inc
notb
aas
mov
out
sbb
std
test
fcomp
xchg
imul
pop
aaa
jmp
jecxz
xchg
jmp
shll
aad
or
shrb
in
pop
lret
xchg
add
add
popa
and
or
aaa
jge
ret
sub
lcall
arpl
ror
xor
int
fisttpll
aaa
adc
jbe
out
clts
fdivr
fidivl
fsubl
dec
imul
and
call
and
flds
lods
adc
jp
pushf
int3
mov
push
popf
and
xchg
shrb
mov
aaa
push
push
dec
call
ret
push
cmp
cmp
sub
out
sub
xor
out
sbb
push
in
add
push
fnstsw
out
packsswb
mov
xchg
mov
cli
imul
call
add
es
push
inc
fs
mov
insb
xchg
mov
dec
rolb
inc
es
test
jl
ror
mov
xor
adc
dec
mov
fsubr
xor
ss
jb
fcmovbe
in
pusha
xor
lea
cmpsl
jge
arpl
aad
test
cmp
iret
jmp
in
cmpb
inc
leave
jne
fildl
mov
adc
aaa
pop
add
shll
sbb
testb
push
or
sub
add
cld
das
rorb
xor
pop
rol
add
xor
push
mov
mov
or
aaa
mov
and
sub
mov
pop
int3
insl
stc
in
pop
sub
fdivrl
pop
inc
mov
sub
out
sahf
pop
cmp
out
jmp
into
cltd
push
ret
push
mov
iret
mov
icebp
push
xor
pop
mov
shl
cmpsb
push
rcrb
scas
xchg
add
in
mov
fdivr
enter
xrelease
mov
xor
stc
cmp
push
jno
adc
mov
arpl
out
test
mov
jno
scas
in
cmp
lods
mov
fldcw
fld
sbb
xor
jge
lds
sbb
cltd
push
ja
cld
insb
dec
shlb
les
pop
out
popa
arpl
jmp
aad
or
jno
out
arpl
lock
out
std
arpl
inc
fisttpll
in
sub
add
lcall
xchg
test
cli
in
pop
mov
or
outsb
xor
rcll
dec
int
inc
in
cli
sub
push
shll
enter
xchg
out
aam
movsl
cmc
inc
sbb
add
sbb
pushf
jecxz
lret
xchg
xchg
repnz
popf
push
mov
icebp
sub
movsb
subb
add
ret
mov
inc
lock
sbb
js
xchg
xchg
jecxz
fstps
out
in
mov
test
mov
push
or
sti
mov
loope
xor
mov
lahf
sbb
fadds
test
push
lcall
adc
inc
shrl
into
jmp
dec
fwait
jge
es
or
jge
in
jge
jo
in
dec
sahf
bswap
inc
rorl
mov
mov
jmp
in
mov
imul
push
out
mov
push
jg
ret
mov
jb
and
mov
xchg
add
andl
fstpl
and
adc
pop
sarl
shl
lods
xor
orb
rcr
popf
out
inc
mov
ds
adc
mov
into
push
shr
push
pusha
mov
xchg
add
loop
inc
lods
jmp
shll
add
xor
xchg
mov
icebp
or
arpl
xor
xor
sbbb
mov
mov
cmpsl
xchg
rcrl
push
ret
jle
xchg
stos
daa
mov
bound
mov
nop
lahf
lock
aaa
add
jo
into
jl
clc
jmp
cmp
sub
mov
call
xor
jb
popa
repz
mov
adc
sbb
insb
sub
insl
out
jae
outsb
repz
cmpsb
jge
repnz
jne
shr
xchg
icebp
add
pop
mov
xor
daa
add
push
mov
sarb
pop
add
stc
ljmp
add
and
cmp
mov
dec
outsb
xor
cmp
mov
out
sahf
push
xor
lcall
mov
divl
jns
cmp
pop
jle
mov
test
insl
xlat
bound
out
sbb
loopne
pop
arpl
dec
jmp
inc
sbb
int
daa
push
sbb
push
mov
mov
mov
lds
or
sbb
add
je
adc
gs
cmp
mov
dec
cmpsb
mov
mov
fs
adc
in
push
cmp
add
push
xchg
xchg
inc
pop
jge
dec
sub
loopne
or
aam
cs
sbb
cmpsb
fidivl
lahf
into
sbb
aaa
fisttpll
adc
nop
scas
mov
fldt
call
sub
pop
mov
pop
scas
sub
lea
adc
scas
pop
imul
push
sub
mov
scas
mov
int3
lcall
mov
push
mov
inc
or
fldl
aam
fstl
cli
dec
dec
out
mov
stos
push
pop
pusha
mov
addr16
mov
lock
subl
mov
and
add
mov
arpl
es
dec
fs
jns
push
jl
mov
lahf
mov
xorl
cmpsl
repz
mov
in
leave
bound
mov
roll
sbb
stos
cmpsb
sbb
xchg
cwtl
inc
je
mov
out
cmp
into
mov
pop
insb
add
mov
in
movsl
mov
out
xchg
cmp
push
jmp
add
in
jo
mov
mov
test
adc
fnstsw
ret
movsl
loope
add
sbb
out
push
jno
jp
ret
sub
sarl
xor
mov
xchg
sub
mov
push
roll
stc
inc
pop
sahf
loop
sub
push
mov
push
push
ja
fbld
sbb
ret
dec
jnp
xlat
pushf
mov
mov
es
adc
arpl
lods
sub
popa
jle
neg
out
push
lahf
mov
enter
add
jnp
in
jg
mov
xchg
sub
popf
xchg
stos
in
and
sbb
xchg
or
mov
mov
push
pop
inc
push
dec
jge
inc
or
sub
lret
adc
pop
aas
cmp
int
lock
xchg
repnz
xchg
mov
bound
add
popa
mov
adc
xor
lods
fwait
mov
xlat
dec
gs
mov
pop
lahf
inc
mov
push
adc
cmp
jmp
lcall
mov
cmc
xor
and
shrb
arpl
dec
sub
test
add
add
gs
lret
and
in
scas
cmpsb
loop
fsin
cmp
out
lods
lret
cmp
jne
xchg
jge
lcall
jmp
sbb
ror
pop
push
notl
and
icebp
xchg
into
test
js
pop
fdivr
push
sub
hlt
push
mov
roll
or
lcall
jmp
test
sub
filds
xor
or
mov
dec
fcmovnb
dec
mov
adc
mov
mov
mov
cmp
mov
jne
ror
mov
in
mov
xchg
aas
int3
rclb
mov
out
aaa
add
sub
nop
repnz
pop
ds
mov
std
dec
pop
pop
mov
mov
imul
add
scas
jmp
sub
nop
mov
mov
push
mov
dec
sbb
push
mov
loope
jp,pn
into
mov
movsl
aam
lcall
adc
or
cmc
dec
mov
sub
and
aad
aaa
movsl
lcall
sub
pop
jae
aas
test
push
adc
and
faddl
mov
sub
jb
int3
cmc
sub
mov
iret
test
dec
or
neg
movsl
sbb
popf
rcrl
pusha
sub
jns
std
insb
test
xchg
add
dec
int
push
inc
xchg
es
leave
jne
scas
xchg
mov
push
int3
or
sub
jg
adc
mov
repz
sub
cmp
and
dec
mov
out
and
and
add
call
bound
sub
jo
jp
in
rcr
rcll
xchg
popa
lock
jne
ret
mov
mov
sub
icebp
jnp
icebp
pop
shll
mov
mov
xor
inc
test
stos
push
mov
aad
int3
xchg
fists
cmp
mov
push
sbb
mov
xchg
dec
mov
push
and
jns
xchg
loopne
or
cmp
xchg
das
pop
enter
lds
xchg
pushf
fbstp
stos
jge
inc
fbld
dec
mov
dec
cltd
sbb
scas
mov
mov
add
push
popf
in
clc
mov
shl
jge
mov
fcomps
in
mov
aad
hlt
and
mov
lret
and
mov
pop
ja
stos
and
loop
or
pop
xchg
aam
enter
xchg
lret
sbb
lahf
nop
adc
scas
jmp
mov
cltd
inc
jmp
js
mov
mov
or
out
xchg
push
icebp
test
mov
movsl
pop
ss
push
or
push
lea
pushf
mov
enter
aad
jo
cmp
mov
adc
je
dec
cli
or
mov
fadds
shr
fidivl
fldenv
inc
dec
clc
or
into
mov
mov
mov
xor
scas
in
cmp
xor
xchg
in
mov
lock
cmc
jp
xchg
sbb
je
or
jle
sarb
cmp
and
or
mov
sbb
in
xor
push
lds
andb
pop
ja
lods
pop
es
jle
mov
mov
sub
int
sub
dec
or
cmp
mov
add
sub
arpl
cs
mov
negl
call
nop
xor
mov
les
lret
addb
adc
adc
rorl
pop
or
data16
jecxz
test
push
in
cli
sbb
into
jmp
or
outsl
mov
mov
push
fdivl
push
mov
ss
fnstenv
mov
xchg
or
mov
push
into
and
push
add
jecxz
and
dec
icebp
clc
mov
sarb
xchg
dec
xor
mov
mov
push
cmp
jbe
shl
rcrb
stos
mov
mov
je
ds
mov
test
mov
rcl
sti
mov
adc
inc
jmp
ljmp
xchg
dec
pop
test
data16
adc
mov
les
cwtl
sbb
and
outsl
push
cmc
addl
mov
or
call
rorl
mov
stc
repz
rcll
adc
movsb
cmp
sub
sbb
or
jp
das
push
das
rorl
rcll
pop
lea
repz
out
push
mov
push
popa
sbb
inc
pushf
repz
mov
pusha
mov
push
dec
push
ja
bound
mov
imulb
adc
adc
lret
popa
jp
imul
cmp
mov
inc
sub
ljmp
and
mov
ret
cmp
push
in
mov
out
movsb
pop
jno
mov
pusha
mov
aaa
mov
movsb
leave
ss
stc
jb
mov
adc
jb
std
jnp
cmpsb
testb
out
mov
pop
jns
stos
flds
adc
push
wbinvd
test
pop
lcall
mov
jns
cs
movb
and
mov
scas
dec
mov
or
jb
out
xchg
or
mov
aam
fwait
jl
lahf
push
fprem
mov
mov
xlat
add
jp
pop
push
cltd
cmpsb
mov
xchg
loop
cmpsb
lcall
mov
cmp
jl
lahf
sbb
arpl
push
mov
mov
jnp
and
inc
dec
sbb
imul
push
pop
insl
lods
mov
xchg
mov
lock
in
push
repz
cmp
inc
fldl
jmp
mov
std
xchg
adc
inc
gs
or
punpcklwd
mov
loopne
fildl
idiv
negb
sarb
or
fidivrs
aas
into
sbb
loope
in
sbb
push
xor
enter
inc
inc
mov
pop
xchg
xor
in
mov
cmp
movsb
out
in
js
cmpsl
out
stos
inc
pop
or
gs
mov
jns
pop
pop
lret
nop
sub
inc
mov
lahf
push
jae
xchg
mov
xor
push
pop
jae
dec
scas
push
aas
rcrb
daa
enter
and
cmp
mov
cmc
ss
cmp
push
push
cmp
sbb
pop
imul
sbb
or
sbb
aas
sbb
stos
test
dec
pop
std
iret
or
fmul
push
cli
cltd
xchg
adc
jecxz
pop
and
cmp
lea
sbb
adc
jmp
add
xlat
and
cmp
out
adc
negl
inc
cld
mov
push
mov
call
or
sbb
adc
or
ds
gs
xchg
adc
insb
int
repnz
test
mov
jg
js
rorl
push
push
and
aad
fisubrl
in
into
ret
outsl
or
push
cs
in
push
adc
repz
jno
jge
mov
cmp
cmp
les
cmpsb
jne
sbb
test
cmpsb
jge
mov
push
sub
pop
or
mov
cmp
mov
sahf
sbb
add
mov
fstl
cli
or
fcmovnb
das
xchg
mov
popf
dec
mov
aas
lds
gs
cmp
mov
sbb
mov
clc
ljmp
fxch
dec
push
jo
mov
scas
mov
adc
xchg
adc
mov
push
leave
xlat
gs
iret
jmp
test
jl
testb
or
jo
xchg
mov
andb
inc
fnsave
mov
pop
fs
or
xor
add
jmp
push
sub
add
outsl
cld
out
mov
or
xor
push
fidivl
rcll
jmp
ret
push
sarl
mov
inc
aam
decb
push
loope
mov
jnp
cmp
mov
inc
pop
loop
lds
push
xchg
jmp
pop
out
imull
rolb
ds
sub
jb
inc
cmp
inc
cmp
inc
arpl
push
daa
xor
adc
mov
aam
add
dec
aas
push
pop
dec
cmpl
inc
xchg
std
nop
xchg
inc
fnstcw
cltd
jmp
imul
xchg
daa
jmp
shr
mov
adc
cmc
mov
idivl
mov
shll
clc
jp
scas
push
mov
cmp
mov
rcrb
ljmp
arpl
loopne
imul
mov
lock
push
lcall
mov
popf
stc
dec
lds
shl
call
scas
movsl
mov
fldt
repnz
cmpl
mov
lret
pop
mov
adc
xor
add
xor
pop
in
fimull
xor
xchg
in
lahf
call
or
xchg
mov
inc
in
fstpt
gs
add
lods
fstl
fildl
xor
loop
scas
roll
mov
in
arpl
fcoms
inc
or
pop
and
push
fmul
das
adc
loop
jo
mov
jp
xor
enter
push
mov
lock
mov
adc
ds
hlt
sbb
xlat
test
and
lds
xchg
ja
fsts
gs
sub
cmp
addl
push
jge
dec
or
rorl
and
faddp
pop
dec
lds
or
in
sub
add
ljmp
int
dec
jmp
inc
inc
stc
jmp
push
ret
xor
sub
inc
sbbl
mov
std
ljmp
dec
pop
xchg
jmp
pop
and
push
push
mov
ja
pusha
sbb
dec
sar
dec
jl
loop
mov
lret
repnz
push
imul
int3
in
insl
popa
es
fstl
mov
push
sbb
xchg
add
fst
dec
adc
or
ret
mov
xchg
lds
ret
dec
add
fstpt
arpl
ret
xchg
cmpsl
loopne
and
sahf
dec
sahf
jl
push
int3
outsl
sub
xor
data16
pop
movsl
enter
sub
ds
mov
rol
inc
push
fidivrl
or
mov
cmc
mov
and
jmp
movsl
sbb
and
hlt
mov
fcoml
ss
xchg
jne
or
lret
ss
lock
rcrl
loop
fadd
mov
jae
add
push
int
in
ret
xchg
outsb
sub
mov
int
jge
std
pop
imul
sub
out
iret
pushf
loop
sbb
fldenv
push
and
mov
xchg
bound
into
sbb
out
mov
sti
mov
mov
loop
lea
add
dec
inc
loope
ds
fdiv
adc
dec
sub
and
mov
fnstsw
mov
fidivl
in
mov
pop
jno
lret
add
testb
ja
ljmp
shrb
pop
mov
jae
popf
sarb
lds
xchg
sub
jno
and
push
mov
lock
or
and
sbb
cmp
xor
or
pop
cmp
shl
lock
xchg
out
mov
pop
int
cmpsb
ja
jb
mov
int3
mov
cmpsb
testl
js
cmp
xchg
outsl
xchg
stos
out
rorl
xchg
push
sub
xchg
repz
inc
xchg
sub
addr16
dec
stos
mov
scas
push
sub
push
lods
push
xor
sbb
inc
add
sub
inc
add
dec
pop
mov
push
das
jge
sarb
decb
pop
xor
jmp
add
out
ffree
jb
sbb
adc
into
pop
jl
cmp
out
or
push
pop
int3
rclb
gs
bound
lret
cmc
cmp
call
push
fnstcw
fidivrs
insb
sub
adc
icebp
roll
sbb
or
scas
push
adc
popa
adc
lret
sub
mov
push
loopne,pn
push
lds
int
mov
stos
push
jge
andb
cmc
pusha
xchg
push
sahf
out
movb
in
sahf
sbb
loopne
test
jae
cmp
pushf
push
rcrl
iret
mov
popa
jp
mov
inc
mov
pop
jg
sbb
ss
add
and
repnz
arpl
xchg
push
lret
into
rcr
push
dec
pop
add
lea
mov
mov
fs
mov
mov
dec
or
out
mov
popf
sub
push
imul
ja
and
pop
ja
call
sbb
adc
in
xor
aaa
push
cs
mov
repz
aam
dec
mov
cmp
lea
mov
dec
pop
faddl
arpl
incl
mov
scas
shlb
adc
mov
jp
scas
nop
mov
jae
bound
xor
mov
sub
lock
push
test
mov
sub
shlb
mov
xchg
rcl
xchg
and
insl
loope
movsb
sbb
into
mov
fimull
imul
test
and
mov
dec
popa
fiaddl
xor
aas
jbe
test
xor
jae
mov
xchg
icebp
jno
repnz
mov
inc
arpl
cmpsb
xchg
aad
xchg
cmpsb
mov
mov
neg
insb
jl
ret
mov
and
fmull
mov
call
add
dec
or
cwtl
and
subb
dec
push
roll
or
adc
fs
sbb
adc
push
xchg
mov
std
pop
ret
jno
icebp
pop
movnti
push
ret
aas
pop
pop
mov
int3
fwait
cli
sbb
lods
sar
ss
sbb
in
dec
cmp
inc
lock
call
xor
xchg
stc
mov
jae
pop
repz
pop
mov
fiaddl
ja
clc
faddl
mov
frstor
jle
cmp
loop
xor
outsl
mov
repnz
adc
jg
mov
ss
iret
stos
inc
jno
jbe
outsb
mov
gs
repnz
adc
jg
jnp
ret
shl
mov
movsl
fwait
lret
in
sbb
negb
lcall
sbb
je
aad
cmp
cmp
or
pop
lods
divl
adc
mov
inc
add
sbb
aad
xor
fadds
les
test
outsb
inc
insb
stc
int
cld
popf
dec
pop
dec
pop
inc
sbb
aas
xor
xchg
sub
push
adc
and
lahf
add
scas
out
arpl
mov
std
mov
dec
adcl
pop
movsb
loope
push
cmpsl
mov
cmp
mov
int3
repnz
test
mulb
int3
sti
mov
adc
mov
fbld
xor
cs
or
pop
sbb
in
pop
cli
call
push
mov
mov
inc
ljmp
mov
sbb
adc
mov
push
ret
dec
mov
jle
cmpsb
cmpsb
out
dec
into
sub
xchg
in
or
ret
ficoms
add
add
push
outsl
push
xchg
sub
and
pusha
int
mov
mov
xor
in
jns
pop
xor
cwtl
in
je
cmpb
sbb
fisttps
inc
push
inc
push
pop
stos
imul
cmpsb
test
cmp
imulb
fucomi
in
cli
mov
lcall
pop
mov
andl
repz
adc
mov
mov
push
in
jge
xchg
adc
xlat
insb
lcall
rolb
push
test
sub
inc
mov
xor
inc
popf
dec
sbb
cmc
xchg
das
test
cmp
fisttps
movl
push
mov
popl
or
inc
dec
roll
and
add
push
or
pop
mov
pop
mov
add
push
call
lods
mulb
loop
cmc
lods
sub
jne
cld
pop
mov
pop
aam
lcall
gs
mov
cmc
push
scas
push
mov
jp
sbb
xor
daa
pop
cwtl
rcrb
push
jne
les
mov
dec
sti
jecxz
xor
jo
orb
pusha
mov
and
push
les
mov
mull
scas
js
repnz
jle
inc
test
adc
inc
pop
xchg
mov
mov
loop
push
pop
testl
add
movsl
enter
lret
adc
rol
pop
fwait
mov
dec
sub
jns
les
push
dec
neg
mov
int3
pop
sti
pop
testb
les
add
rcll
pop
test
mov
push
arpl
loop
add
fcoml
lea
loopne
bound
push
add
pop
test
dec
sarl
test
out
mov
frstor
adc
sbb
xor
not
in
loope
dec
sub
stc
ret
jno
inc
mov
rorb
imul
lea
insb
add
ficoml
sbb
insl
jmp
ds
ret
cmp
jecxz
pop
mov
ret
xor
cmp
cmpsb
aad
jb
jmp
mov
adc
lock
in
pop
xchg
pop
cmpsl
xor
adc
inc
cmp
loopne
push
sub
cmp
sysenter
bnd
pop
bound
lods
ret
aad
sub
mov
add
and
rorl
fsubp
mov
imul
js
xchg
daa
mov
jo
lds
vminpd
das
ret
adc
sbb
mov
xchg
aaa
add
call
add
imul
lds
rcrb
sub
packsswb
mov
cmc
fdivrl
xor
lds
lcall
lods
xor
or
jg
out
loope
adc
push
outsb
adc
push
xchg
xor
sbb
lods
sbb
inc
lds
dec
repz
inc
pop
mov
mov
in
lods
call
xor
lea
testl
test
aad
test
pop
push
jbe
inc
enter
mov
movsb
cmp
dec
mov
mov
push
sbb
push
subl
inc
lcall
cmp
repnz
add
mov
fistpll
pop
imul
xor
cmpsb
int
insl
sbb
mov
lods
push
lods
or
inc
stos
xchg
ja
push
mov
rorl
loop
ret
cmc
fwait
push
inc
es
adc
dec
test
xchg
push
shl
mov
inc
dec
mov
push
or
or
mov
push
repz
iret
cmp
stos
subl
sub
aaa
xchg
ljmp
cmpsl
xor
arpl
mov
push
xor
or
mov
adc
test
roll
mov
mov
xor
push
xchg
hlt
or
pop
stos
sub
jb
imulb
lods
imul
push
fstps
test
lret
dec
imul
jp
popa
jae
imul
repnz
inc
adc
inc
cltd
fildl
mov
stc
push
push
xor
in
bound
push
loope
push
popa
fs
or
jo
sbb
xchg
pop
jno
add
jge
pop
jl
inc
jge
jle
cmp
ljmp
cmc
daa
adc
aad
pop
jl
cld
mov
jmp
or
rorb
mov
jae
jno
pop
rcll
push
push
sub
div
xchg
cmp
in
mov
inc
out
loopne
fmul
mov
repz
stos
push
mov
int
sbb
jb
and
dec
sbb
in
xchg
mov
cwtl
addb
pop
xor
sub
and
jp
mov
jp
mov
sbb
mov
jp
jnp
jno
jnp
gs
je
push
mov
add
fildll
pop
or
bound
cli
jmp
or
cmpsb
xor
scas
cli
mov
push
test
lds
test
js
nop
repz
cmpsb
out
push
aas
test
pop
lea
xchg
sbb
xchg
xlat
pop
mov
and
sbb
cs
xor
sbbb
js
or
fisubs
push
pop
push
pop
es
cwtl
ja
add
dec
mov
pop
jmp
and
dec
jae
subb
imul
cmpsb
aam
pop
and
test
mov
adc
sub
ja
lret
mov
loope
test
mov
in
inc
into
lahf
inc
mov
scas
mov
in
test
ljmp
ljmp
cmc
jb
push
es
roll
mov
insb
sbb
xor
xchg
sbb
stc
lret
lret
mov
mov
push
pop
daa
push
dec
repz
fxch
cli
inc
out
sbb
sub
mov
lods
mov
pop
or
mov
jo
rorb
js
push
dec
loopne
dec
or
test
xlat
adc
dec
ficomps
mov
adc
addb
xor
inc
push
lret
push
pop
or
lods
cmc
cli
clc
jbe
idivb
test
push
leave
pushf
int3
mov
jno
test
int
test
popf
out
lods
sbb
mov
xchg
dec
sbbb
das
jge
aad
adc
leave
outsl
push
mov
push
das
or
cs
cmp
sbb
mov
bnd
lods
aad
jnp
and
xchg
mov
arpl
and
cmp
jmp
mov
in
stos
dec
lahf
sbb
push
mov
mov
inc
mov
loop
mov
les
data16
outsl
and
dec
enter
xchg
dec
pop
jns
mov
or
xor
je
imull
push
dec
decb
gs
sub
fists
aaa
pop
push
push
or
insl
shl
push
sbb
adc
xor
in
pop
dec
adc
mov
out
popf
pop
add
loope
cs
push
push
fwait
add
mov
push
daa
inc
sti
int3
fmul
mov
ret
adc
rorb
and
xchg
test
aaa
enter
jnp
lret
mov
fisttps
cmp
and
pop
shrd
sub
out
rcll
clc
xchg
push
sbb
jmp
test
sub
xchg
call
pushf
outsb
rol
and
or
ret
inc
sbb
aam
jbe
stos
lods
sub
dec
xchg
mov
xor
shl
and
js
jmp
pop
dec
ret
stc
in
loop
cli
in
lea
jmp
nop
or
jg
sub
sub
pop
loope
dec
dec
add
sub
pop
sbb
fstl
inc
fstl
push
sarb
dec
fdivr
out
sbb
stos
push
int3
mov
les
xlat
mov
sub
div
dec
jge
inc
out
int3
lret
lret
and
mov
mov
push
sahf
loop
call
xor
je
movsl
bound
std
or
stc
addr16
enter
daa
pop
lret
into
dec
xor
in
stc
jl
sbb
sbb
gs
lret
dec
ret
push
mov
adc
fimuls
mov
dec
mov
push
mov
xchg
aad
cmp
xchg
ret
mov
mov
cmp
stos
sub
mov
xor
sub
and
mov
cli
jge
mov
fmull
loopne
dec
outsl
adc
add
popf
pop
cld
jge
push
pop
std
xor
lea
scas
xchg
lock
lods
jb
mov
fs
clc
sub
sub
bound
pop
sbb
fsubs
fmul
jae
sub
cmp
fcmovu
test
adc
add
cmpsl
lret
xchg
push
jbe
lea
shl
in
outsb
lds
lcall
push
loopne
or
enter
cmp
pop
lods
jle
cmc
sbb
aas
cmpsl
mov
inc
mov
xchg
test
popa
imul
sbb
mov
iret
add
mov
push
jge
jo
std
cmp
add
in
or
enter
imul
xchg
rorl
pushl
jno
popf
jne
mov
lcall
movsb
mov
outsb
jle
mov
movsb
push
cmpb
popa
jmp
dec
in
clc
adc
int
inc
jo
sarl
rorl
mov
push
mov
xchg
pusha
in
add
fwait
repz
psubusw
pop
add
mov
js
loopne
aam
mov
ss
jo
mov
sub
or
fcmovbe
sub
hlt
xchg
subb
pop
sahf
xchg
xor
pop
rcl
cmp
adc
into
mov
dec
mov
cmp
cld
mov
sub
and
leave
cltd
cmc
or
popf
mov
mov
add
pop
inc
inc
sub
sub
add
or
dec
stc
enter
inc
xor
push
dec
icebp
add
test
mov
pop
jmp
out
fbld
insb
mov
icebp
sub
or
mov
inc
lds
inc
sub
int3
inc
aas
mov
sbb
mov
jle
in
pop
and
inc
ds
test
xbegin
hlt
lret
mov
rorb
sbb
xchg
xor
push
fs
dec
cld
sub
cmpsb
aaa
leave
leave
pop
cmp
leave
in
int3
mov
dec
popf
jl
xor
xlat
push
push
icebp
cmovns
mov
pop
xchg
jns
push
test
rcll
shll
jmp
jno
mov
sub
enter
popa
mov
fnsave
jge
inc
gs
leave
mov
mov
lahf
outsb
dec
imul
xor
jnp
xchg
mov
jbe
pop
iret
call
pop
out
xchg
lea
dec
or
negl
test
sub
fistl
movsl
sarb
mov
sub
aaa
sbb
xchg
mov
fiaddl
xchg
mov
jo
xor
add
shl
out
aas
dec
cld
hlt
adc
out
inc
sbb
mov
loopne
sbb
xchg
dec
sbb
mov
insl
ljmp
xchg
iret
or
pop
hlt
cld
push
mov
test
push
jno
icebp
mov
cmc
or
rcl
pop
test
stos
outsb
push
dec
lahf
orl
lahf
or
cmp
jne
sub
jb
inc
out
push
nop
push
sub
mov
xor
adc
subb
push
sub
push
rorl
sbbl
sub
data16
add
dec
shr
movsl
in
dec
imul
in
jge
mov
cmc
ret
int
or
test
mov
jge
das
fidivs
sbb
ljmp
dec
mov
pop
and
fldl
and
xor
ljmp
xor
xchg
das
lods
inc
pop
fidivrs
sahf
ret
and
leave
sarb
xor
pop
and
jecxz
mov
and
out
lret
jmp
loop
sub
ja
inc
push
sbb
enter
jge
pop
stos
out
bound
sahf
add
pop
mov
out
outsb
inc
pushf
in
mov
sub
mov
lret
mov
jmp
leave
ficomps
push
jp
test
mov
mov
mov
negl
sarb
lret
or
out
es
mov
xchg
or
fwait
scas
mov
add
push
dec
mov
in
hlt
in
mov
jp
inc
inc
push
out
faddl
xor
loopne
jecxz
sarb
adc
sbb
int3
rcll
push
inc
rorl
loopne
ret
push
loop
movsl
loope
out
xchg
lahf
adc
push
add
pop
cmp
mov
push
hlt
xchg
cmp
pop
xchg
fcompl
fucomi
and
sbb
imul
rorl
inc
dec
enter
cmpsl
jmp
addr16
in
shlb
dec
pop
mov
aad
add
sti
sti
das
push
jge,pt
and
fiadds
mov
jne
push
loope
pop
adc
inc
mov
xchg
nop
ljmp
mov
in
add
mov
adc
xor
jle
aad
xchg
lock
pop
jb
in
sbb
in
into
insl
ja
sbb
mov
push
fdivrp
xorl
sbb
sub
jb
inc
rcll
int
fsubrl
movsb
push
inc
mov
add
sbb
mov
bound
rclb
shl
jl
stc
lahf
in
into
dec
mov
adc
push
push
enter
push
inc
gs
lods
and
test
jno
and
loope
adc
push
addr16
repz
adc
jae
fimuls
mov
outsl
ds
daa
ffree
fdivrs
movl
ja
sbb
movsb
mov
clc
jp
push
sub
ljmp
mov
fs
subl
mov
int
mov
adc
adc
movsl
jno
inc
push
movsb
out
mov
pop
push
jle
mov
ds
adc
rclb
pop
add
mov
xchg
test
fdivrp
andl
adc
sub
jge
mov
bound
cli
mov
out
push
adc
pop
jae
push
xchg
or
fisubs
shll
xrstor
pop
in
mov
push
and
push
cmp
jne
aam
add
cmp
inc
movsb
mov
cmpsb
and
jl
pop
pop
aam
hlt
mov
inc
andb
mov
xorb
les
lret
push
jmp
xchg
mov
inc
faddl
lods
cmpsb
out
call
inc
mov
cmp
dec
xchg
ficoms
cmpsl
out
movb
xor
xchg
andl
xlat
notb
and
jmp
dec
xchg
dec
push
repnz
push
cmc
arpl
add
jp
test
push
pushf
into
mov
push
xor
fisttps
testb
sbb
enter
decl
clc
pop
pop
lret
cmp
ds
cmp
pop
jno
jb
sbb
jmp
jnp
leave
imul
scas
adc
jmp
addb
bound
add
mov
jl
sti
in
or
fisttpl
push
pusha
xchg
dec
jg
stc
out
jp
jnp
mov
js
mov
add
dec
inc
jo
shl
lods
sub
cmp
sarl
aad
sub
popf
push
into
push
imul
jecxz
pushf
lret
and
ljmp
or
push
int
out
xchg
cltd
repnz
leave
mov
cltd
pop
ret
mov
fwait
movsb
jecxz
push
pop
sbb
aad
aam
push
cli
push
or
fistps
mov
loop
mov
test
enter
ficoms
js
pop
subl
movsl
icebp
mov
rol
xor
loopne
mov
mov
cs
leave
pop
lock
lret
sub
push
ss
xor
dec
pop
push
imul
and
add
fs
insl
sbb
popa
jb
sub
addb
jbe
out
sub
or
xlat
adc
jb
or
decl
ja
mov
pop
stos
add
dec
push
xchg
lret
imul
mov
addl
shlb
fucomp
push
loope
push
mov
cmpsl
cld
xchg
cmpsb
mov
outsb
pop
dec
repz
mov
test
mov
or
dec
sahf
sti
dec
call
jp
cmpsl
movsl
or
adc
sub
push
in
les
repz
sbbl
cmp
lds
or
leave
cmc
jmp
xor
ret
movsl
scas
dec
push
cmp
cmc
int
mov
inc
push
cmp
sti
inc
xor
pop
mov
decb
pop
xor
bound
in
push
add
mov
mov
xchg
movsb
dec
sbb
dec
loop
arpl
sarl
or
push
inc
jecxz
inc
adc
lock
and
popf
xchg
adc
or
mov
sub
lret
lods
mov
jge
fdivl
mov
mov
enter
dec
test
popl
push
sbb
call
push
rcrl
or
add
inc
cmp
xor
adc
or
push
adc
stos
pop
or
iret
xchg
mov
mov
jge
dec
push
mov
xchg
inc
adc
into
ss
push
and
add
in
lea
xchg
loopne
adcl
jg
xchg
pop
xor
sub
mov
lret
jae
mov
call
sti
add
fildl
pop
xchg
ja
and
out
subl
inc
mov
mov
mov
lret
sub
cli
stos
fdiv
dec
xor
cmp
cmp
aaa
lods
leave
cmp
test
inc
pusha
sbb
sub
jle
dec
mov
test
mov
mov
mov
dec
mov
mov
pop
cmp
inc
nop
mov
xor
add
mov
jg
ficoms
scas
or
lret
je
imul
shrb
push
out
int
call
xchg
arpl
inc
and
int
inc
push
jmp
cld
call
mov
out
stos
adc
fsubl
inc
push
enter
dec
and
sub
les
in
rorb
lret
cmp
pandn
stos
orb
lds
cmp
addr16
ret
leave
imul
mov
ds
shrl
push
enter
dec
inc
ljmp
cmp
fdivrl
adc
mov
fmul
mov
xorl
cli
mov
push
iret
jno
xchg
cli
call
pop
loopne
push
mov
mov
sub
lods
dec
loop
mov
xchg
jp
mov
and
in
loope
out
add
ret
icebp
push
or
popf
cmp
fistpl
sahf
or
mov
push
aas
leave
lods
jb
loop
ret
rcll
cmc
lds
hlt
sbb
push
jno
cmp
xlat
mov
inc
sub
repnz
pop
pop
push
cmc
sbb
stos
push
sbb
mov
jnp
cmp
ret
insb
jge
dec
hlt
int
test
xor
or
rol
pop
lret
sub
xchg
mov
sqrtps
jmp
or
pop
aaa
cli
repnz
in
push
jb
in
pop
mov
and
hlt
sub
std
shll
in
jecxz
es
out
xchg
mov
insl
aas
sahf
cmovbe
std
mov
sbb
mov
xchg
ret
cmp
mov
xor
in
rorl
ds
lahf
in
adc
ds
loopne
adc
and
inc
stos
stc
imul
jle
adc
test
test
faddl
outsb
cmc
adc
and
jp
or
nop
jne
shlb
xor
push
inc
int3
subl
mov
insl
xor
jmp
mov
mov
jmp
mov
sarb
or
je
dec
mulb
cld
lret
daa
mov
inc
sti
das
cmp
jle
mov
adc
mov
inc
fbld
imul
orb
in
inc
pop
movsb
mov
ljmp
xchg
inc
call
add
jmp
sub
mov
mov
cmp
out
cmp
adc
test
or
mov
test
scas
insl
sub
mov
lret
dec
mov
ret
add
test
sti
mov
lock
aas
and
dec
std
out
cmp
pop
bswap
repz
adc
test
test
dec
push
mov
imulb
adc
pushf
insl
mov
jp
and
movsb
cmp
add
sbb
dec
mov
addr16
mov
cwtl
cmp
dec
stos
inc
adc
ret
adc
clc
pop
ret
out
in
add
jg
dec
cmp
adc
mov
in
jecxz
fidivrs
loop
stos
push
pushf
leave
and
shll
push
iret
std
bound
lds
fs
je
push
add
push
mov
iret
call
ss
mull
and
inc
lods
iret
dec
jnp
push
push
ret
loope,pt
or
push
and
shr
pop
insl
jmp
aad
inc
add
adcb
adc
mov
iret
mov
in
cmc
outsl
dec
arpl
insb
in
test
sahf
pop
pop
ret
pop
or
push
dec
sahf
mov
push
adc
lcall
and
hlt
pop
out
std
insl
pop
dec
movsl
and
mov
insl
push
push
call
xchg
andl
fcompl
dec
push
dec
fwait
mov
push
cli
push
outsl
sbb
movsl
arpl
sahf
cmpsb
pop
jnp
pop
push
pusha
mul
lret
pushf
lock
mov
in
xchg
mov
sahf
add
sbb
jno
push
push
fwait
test
sub
aad
adc
jb
out
imul
push
adc
movsl
out
mov
and
dec
out
data16
orb
adcl
pop
mov
mov
pop
icebp
and
sub
into
mov
inc
add
mov
movsb
fchs
orb
loopne
adc
and
jle
lret
ret
fiadds
dec
mov
loope
mov
orb
mov
push
aaa
inc
aaa
sbb
push
loopne
pop
jmp
lret
scas
lahf
cmp
sub
cld
into
cmpsl
lock
iret
jbe
sbb
mov
sbb
js
std
jae
mov
cli
test
or
jb
out
sarl
mov
adc
xchg
in
dec
xchg
xor
adc
sti
ficomps
cli
xor
cmp
push
dec
int3
into
lock
sub
in
cld
adc
int3
push
sbbb
das
mov
shrb
cmc
jns
int3
mov
loop
xchg
inc
jle
mov
repz
add
push
aaa
add
push
aas
iretw
sub
jecxz
pop
mov
jl
mov
adcb
pushf
adc
fs
xlat
into
push
cmp
ds
mov
inc
push
or
push
je
cmp
dec
lds
insb
sbb
popf
scas
js
loopne
dec
sub
shrb
pop
ldmxcsr
loopne
mov
adc
pop
inc
push
das
cmp
pop
std
ret
dec
sbb
icebp
cmp
jp
cmp
mulb
lcall
mov
sbb
in
mov
mov
test
mov
addl
sahf
cld
lea
fstpt
cmp
and
cmp
stos
jnp
and
pop
lock
js
movsb
sbb
test
rorl
ds
repnz
shll
jmp
push
jae
and
jmp
and
imul
jo
xlat
rcr
pop
cmp
es
rcl
pop
nop
call
mov
jmp
addl
add
adc
pop
sub
adc
dec
dec
jle
mov
outsb
enter
dec
sbb
mov
mov
aas
push
ja
stos
rcrb
cmp
xchg
in
push
xchg
add
popa
sub
or
shlb
fadds
daa
or
pushf
rcll
popf
nop
call
mov
test
mov
jle
mov
lds
dec
insb
stos
adc
mov
xor
mov
jnp
addr16
data16
shlb
nop
mov
and
pop
mov
mov
in
call
subl
test
jmp
lcall
or
mov
cmpsb
push
das
pop
and
mov
divb
es
or
dec
pop
xor
add
mov
dec
mov
jno
add
mov
jmp
fstpt
dec
lret
mov
dec
mov
and
cmp
loope
xor
int
mov
aaa
and
or
shlb
rcll
sbb
sahf
xchg
jge
outsb
jp
arpl
lock
jno
sub
xlat
push
repnz
xchg
xchg
nop
mov
mov
xchg
add
push
popf
mov
push
xchg
pushf
dec
add
cmc
lods
loopne
mov
lods
adc
shr
shrb
mov
xchg
orb
movsb
xor
rcl
sub
xor
pop
int
fistl
cs
mov
cmp
mov
orb
stos
xor
fmuls
repz
xchg
movsb
mov
addl
mull
fimull
aad
or
je
dec
add
xorl
fcmovb
xchg
sahf
jae
daa
push
call
lods
adc
ffreep
push
lock
in
or
andb
lods
orl
rcll
aaa
cmc
pop
in
lods
pop
fbld
push
inc
adc
ss
pop
inc
add
outsl
lahf
test
push
test
jle
cli
mov
dec
jmp
cwtl
lret
xchg
xchg
fnstsw
mov
gs
xchg
enter
add
lds
add
cltd
test
fneni(8087
mov
int3
lcall
imul
and
adc
or
mov
pop
mov
aaa
fisttpll
mov
mov
orb
mov
xchg
scas
jbe
fwait
outsl
mov
adc
inc
lods
mov
test
and
dec
push
xor
fcom
push
icebp
rolb
jb
in
dec
jo
dec
js
int3
gs
mov
rcrl
jno
in
inc
not
dec
fisubs
fistps
xchg
pop
adc
and
mov
sbb
mov
and
ljmp
xchg
scas
cmpb
stos
adc
cmp
add
cmp
adc
jo
cmp
jbe
xchg
mov
mov
pop
mov
jae
js
rol
cmp
aam
sbb
xchg
aam
push
imul
pop
pop
and
mov
testb
pextrw
pop
inc
test
outsl
add
mov
pop
orb
jecxz
fidivl
popf
testb
test
icebp
scas
add
mov
das
paddusw
rcll
and
jo
jno
mov
xchg
sahf
sub
pop
notb
cmp
pop
in
push
icebp
inc
aam
mov
and
mov
xchg
test
inc
mov
aam
xor
aas
loopne
lahf
push
flds
stos
sub
jle
sbb
mov
idivb
jl
fimuls
cmc
addb
outsb
mov
dec
inc
xor
insb
bound
insl
and
lods
daa
imulb
insl
adc
subl
sbb
add
mov
jae
fs
push
test
or
inc
pop
and
dec
cmp
and
dec
outsb
gs
mov
and
xchg
leave
cmpsb
gs
shll
ja
outsl
addl
pusha
mov
jb
or
bound
int
aam
add
fs
imul
leave
xchg
aam
ljmp
inc
lds
mov
pop
leave
and
xor
push
std
add
ja
push
xchg
pushf
scas
adc
int
shlb
or
jmp
xchg
add
or
cli
inc
dec
mov
and
xor
jae
xchg
and
xchg
push
int3
test
jb
push
sub
aad
int
in
pop
es
or
fadds
icebp
rcrb
or
movsl
push
loopne
push
aaa
xor
mov
push
ljmp
mov
outsb
sub
rcll
aad
fwait
push
sub
aad
int
in
pop
out
aaa
fstl
lcall
in
jb
push
xchg
jo
push
sub
in
dec
sarb
mov
push
add
inc
adc
jmp
aam
pop
enter
lret
out
mov
fldz
dec
aad
jge
xchg
imul
lock
arpl
ret
sub
insl
jns
mov
in
or
fnstsw
sbb
jmp
outsl
mov
fwait
out
jmp
mov
stos
cltd
dec
pop
cwtl
je
lea
or
sbb
push
in
rorl
aas
inc
push
dec
and
fldcw
sub
add
sub
add
mov
mov
imul
add
xchg
dec
push
sbb
enter
inc
adc
loop
adc
mov
aam
sub
xor
and
xchg
mov
dec
mov
push
mov
and
ja
in
outsl
mov
mov
jp
daa
dec
insb
cwtl
sub
mov
add
dec
mov
test
test
mov
jp
sub
andl
xchg
and
icebp
pop
push
aam
outsb
pop
loop
cli
aam
test
mov
cmpl
dec
lea
add
xlat
lods
add
imul
stc
mov
popf
ficomps
loope
call
stos
dec
xor
push
loop
mov
leave
mov
mov
sahf
add
push
mov
jp
lcall
movsb
lods
cmpsb
or
and
iret
push
sahf
xchg
stos
arpl
cmovae
xorl
arpl
mov
xchg
jnp
pop
mov
lahf
imul
lods
add
jns
mov
mov
sub
mov
sub
xor
jnp
and
add
int
jmp
xor
cmpsb
jg
fsubl
addl
mov
icebp
rorb
pop
aaa
loop
jp
inc
jmp
jecxz
pop
lret
add
repz
xor
mov
into
sub
aaa
sbb
inc
imul
aas
ret
inc
jne
cli
mov
outsl
and
call
push
xchg
adc
addb
testb
data16
addr16
repz
fcomi
sti
idiv
cli
cmc
mov
cmp
fs
inc
rcrb
dec
adcb
mov
sub
imull
mov
mov
sbb
mov
or
sbb
fidivrl
pusha
adc
xor
in
enter
shll
xor
jne
jmp
and
or
ret
sbb
test
jmp
pop
cmp
mov
mov
jp
out
in
mov
mov
mov
stos
in
mov
ret
lret
add
inc
mov
sti
mov
mov
sahf
jecxz
js
add
jmp
test
rorl
addb
lret
dec
cmpsb
lea
push
fwait
mov
jmp
mov
cmp
xchg
and
cltd
pop
push
push
test
push
pop
in
popf
out
stos
mov
ss
and
outsb
push
and
cmp
pop
arpl
mov
dec
sbb
push
xor
sub
cmc
shl
pushf
ret
mov
std
test
add
sbb
mov
rcrl
leave
loopne
aas
fstpl
dec
mov
mov
rorl
movsb
jnp
dec
mov
imul
xor
sbb
aad
sbb
aam
imull
ds
xchg
cmc
mov
push
dec
popf
shlb
pop
cmpsl
stos
cmpsb
fcomps
outsb
sbb
imul
fisttpll
popf
loopne
fldt
or
xchg
shrl
dec
pop
call
int3
mov
xor
nop
and
popf
jg
inc
jne
cmp
jmp
loopne
fsub
cwtl
sbb
repz
mov
and
shrl
mov
ss
je
mov
xchg
ja
cmp
jnp
cmc
flds
xchg
jne
or
sbb
std
rolb
int3
mov
jae
lea
jle
ret
adc
std
rcl
push
jno
mov
sbb
mov
lds
ds
push
sub
enter
add
cmpsl
lds
movsl
jp
decb
pop
add
mov
add
mov
mov
lahf
stos
and
aam
pop
mov
lds
les
jp
add
addl
xor
movsb
ja
dec
scas
inc
mov
in
insl
mov
popf
jns
sub
ja
mov
iret
cmp
push
imul
or
add
cld
cld
push
nop
rorl
les
mov
sarb
insl
adc
mov
scas
push
mov
icebp
dec
xchg
pop
push
fwait
shlb
jb
mov
rcll
jp
call
cwtl
popl
pushf
jl
mov
fwait
push
xchg
dec
scas
mov
push
jmp
push
push
movsb
mov
dec
cmp
mov
xsaveopt
mov
pop
inc
bound
ret
xchg
push
pop
int3
pop
sub
lea
jle
xor
pop
sti
push
aam
and
jge
add
mov
call
jle
xchg
lcall
sti
fmuls
nop
cmp
jae
xchg
cwtl
mov
loope
sahf
jle
std
in
popf
mov
sbb
adc
movsb
lods
orl
pushw
cld
xlat
ja
mov
dec
insb
xchg
cli
fmuls
cli
std
cmp
cld
lret
call
mov
pushf
dec
cmpl
xor
jnp
lds
dec
insb
test
fmuls
mov
inc
jl
xchg
cwtl
popl
in
ret
xchg
dec
stc
clc
stos
push
dec
mov
cmp
jae
cmc
ja
movsl
idiv
mov
mov
push
lds
or
dec
in
testb
cmc
ja
movsb
idiv
stos
mov
fcmovb
mov
dec
insb
in
pushf
nop
push
dec
sbb
repz
lock
stc
jge
xchg
cs
pop
inc
mov
movsl
cmp
lods
mov
popf
enter
xchg
fwait
mov
test
lahf
aas
inc
sub
cmpsl
mov
std
in
jge
adc
cltd
adc
mov
lret
les
push
in
les
mov
mov
cs
add
fisttpll
cmpsl
fs
aad
int
loopne
movsb
das
inc
movsb
ret
shrb
enter
ret
sub
movsb
cmc
cld
cmp
mov
xchg
xchg
es
or
dec
shl
testb
cmc
ja
movsb
adc
adc
mov
inc
dec
int3
cld
das
fstpl
xchg
mov
mov
loope
dec
mov
inc
stc
or
or
push
jne
push
sub
or
dec
cmp
testl
xchg
das
mov
cld
lea
fstpt
mov
push
bound
cmpsb
adcl
push
outsl
mov
cmc
xorl
adc
notb
sub
test
push
add
aad
das
mov
push
xchg
test
fwait
aas
loope,pt
leave
mov
test
mov
mov
dec
insb
js
cmpsb
pop
or
dec
sub
rcr
xchg
pop
jg
mov
mov
inc
stc
cmpsb
outsb
orl
dec
xchg
dec
sti
mov
out
mov
xor
mov
cmpsb
out
mov
js
movsb
paddw
mov
repnz
pop
jb
xor
shlb
lds
int3
in
pop
cmc
aam
adc
lea
sub
loopne
cwtl
repnz
cld
dec
loopne
lds
mov
scas
aaa
add
or
aaa
ss
cmp
fisubs
roll
dec
cmpsb
push
testl
movsb
ud0
jp
sarl
lds
in
into
mov
test
fldt
sub
inc
sbb
loopne
hlt
xorl
inc
sbb
std
mov
mov
jl
andb
sub
push
xchg
mov
into
das
cmp
mov
lahf
or
mov
xchg
lods
adcl
fisttps
negb
fstpt
aam
ljmp
mov
and
dec
ljmp
or
lds
mov
ljmp
rcrl
mov
adc
and
jnp
cmp
jae
mov
sub
jl
test
and
repnz
inc
mov
or
jb
mov
push
xchg
orb
movsb
stos
out
or
stos
xchg
push
mov
mov
test
js
in
and
jmp
mov
mov
outsb
fisubrs
test
std
lahf
in
into
mov
imul
adc
in
int
inc
dec
enter
push
and
filds
in
cmpsb
lods
xor
mov
xchg
rorb
ficomps
outsl
sub
mov
call
std
mov
mov
int3
shrl
mov
or
add
repz
mov
lret
mov
scas
adc
pop
or
movsb
or
dec
movsb
shll
inc
cmpsb
push
or
int3
fstpt
mov
push
popf
addl
lea
add
xchg
jbe
sub
adc
xor
ds
cltd
add
mov
fstps
mov
or
jmp
inc
cmpl
xchg
movsl
jl
sar
cmpsl
push
scas
int3
movsl
pop
mov
cld
lea
rcr
mov
ds
scas
push
nop
and
insl
or
inc
push
sbb
xchg
pop
adc
inc
les
test
dec
cmpsl
dec
mov
lock
adc
adc
lea
pop
scas
enter
and
pop
mov
test
cmpsl
imul
testl
mov
push
dec
call
dec
jge
mov
dec
push
shlb
ljmp
outsb
push
sahf
fldt
mov
popf
mulb
insb
jne
push
cmpsb
cmpsb
out
sbb
sub
repz
adc
inc
out
jp
push
sub
nop
and
sub
xor
push
icebp
pusha
push
xchg
movsb
dec
lods
fisubrs
sti
cmp
mov
and
aad
fisttpl
sub
ljmp
sub
ja
aam
test
xorb
or
jne
push
in
xor
push
push
mov
shll
xchg
orb
stos
mov
icebp
fcomip
out
cmpsb
lods
add
scas
pushf
sub
and
push
xlat
xchg
push
imul
mov
in
pop
add
xchg
rorb
or
in
shl
xchg
movsl
dec
movl
repz
out
lahf
xchg
nop
pop
mov
push
mov
repz
shl
xchg
jle
imul
mov
xchg
cmc
jne
xchg
mov
adc
cli
mov
fsub
xchg
cli
andl
and
repz
in
mov
mov
cmpb
lods
sub
mov
data16
fwait
jge
adc
mov
jle
gs
add
push
jbe
jns
dec
inc
add
jp
outsl
ds
mov
mov
and
jg
out
mov
lret
cmpsb
inc
dec
enter
push
and
pushl
rcrb
cmpsb
lods
sbbl
aam
subl
mov
shrl
mov
sub
mov
fistpl
jmp
pop
stos
sarb
int3
lods
inc
dec
enter
fucomi
mov
xchg
dec
adc
xchg
dec
push
jg
in
and
jb
or
cmpsl
xchg
and
dec
jecxz,pn
mov
lods
ljmp
sub
nopl
aas
fwait
xchg
jb
sub
xor
popf
add
lds
inc
mov
pop
mov
cmpsl
ss
adcl
fimuls
sub
popa
xchg
adc
mov
aaa
sbb
flds
shrl
into
stos
stos
icebp
add
jo
ja
push
lret
mov
pop
test
push
das
xchg
mov
add
mov
loope
mov
scas
out
imul
mov
mov
mov
das
lcall
out
icebp
jg
cld
xor
lods
lahf
aaa
mov
stos
jp
enter
add
test
ret
loope
loop
sar
pop
xor
sbb
sbb
lods
and
fisubrl
jnp
fs
or
jbe
sbb
pop
mov
xchg
not
test
ljmp
sub
fdivr
into
mov
imul
jmp
int
imull
mulb
rolb
dec
loope
xorl
push
testl
mov
sti
stos
lods
add
insl
int3
in
fstp
mov
fisttps
mov
clc
fdivrl
mov
and
rcll
fistl
das
orb
call
pop
ds
jp
mov
inc
mov
test
jle
js
lds
dec
insb
push
mov
fistps
aaa
scas
dec
stos
inc
mov
pop
js
sbb
imul
sbb
mov
mov
cmp
fmull
cmp
cwtl
mov
nop
call
push
js
mov
sar
call
ret
aas
fisttps
jb
fmuls
clc
ficomps
or
in
mov
add
shrl
fstp
shrb
fcompl
push
aad
bswap
aad
mov
ficomps
mov
imulb
jle
cs
rcr
test
mov
aad
and
popl
jge
xchg
push
insb
xchg
fstp
mov
fstps
scas
mov
add
push
push
mov
mov
mov
loope
jle
inc
stc
mov
rcll
mov
xchg
icebp
jl
xchg
ret
pop
jnp
clc
stos
cld
shlb
lea
mov
imul
sahf
call
fsubrs
leave
dec
in
jns
fisttpl
stos
fmuls
jo
fwait
fdivrs
xchg
push
jl
lds
jns
ret
mov
pop
mov
inc
xchg
adc
jnp
rcrb
pop
mov
mov
mov
mov
and
movsb
imulb
icebp
and
cs
mov
idivl
rorb
out
push
in
in
mov
fsubr
test
mov
in
and
sub
lods
mov
cld
xor
outsb
xchg
das
cmp
jmp
lods
inc
movsl
mov
dec
xor
mov
or
or
aaa
repz
sub
enter
orb
jne
rcrl
jne
cmp
add
rcll
movsb
add
dec
cltd
mov
adc
insb
bound
cwtl
mov
mov
mov
lods
stos
repz
std
pop
push
and
out
leave
fxch
xor
mov
jns
adc
lods
pop
lret
bound
out
cmp
test
cmp
push
push
stos
xchg
cmp
cmp
lock
and
bound
flds
int
push
sbb
mov
rcl
scas
rcll
popa
pop
sub
ret
push
add
or
xchg
adc
push
fldenv
mov
or
sub
jne
xchg
std
icebp
sub
adc
aam
push
shrl
dec
sbb
insb
aad
fldl
mov
sub
jle
aaa
imul
adc
jecxz
std
fdivs
into
lods
cmp
decb
mov
jg
iret
mov
sbb
shrl
mov
cmc
xor
shl
fsub
cltd
dec
adc
lret
adc
xor
cmp
clc
xlat
xchg
jne
sti
pushf
jle
aas
cmp
clc
fdivrl
and
fildll
rorl
add
ds
lods
and
xchg
js
inc
lods
jle
push
dec
jbe
pop
pushf
dec
loopne
mov
aaa
mov
les
or
mov
xchg
add
mov
add
mov
push
push
sarb
stc
mov
pushl
mov
rcll
dec
sbb
sbb
dec
lcall
ret
sub
inc
int3
push
jp
inc
or
outsb
sbb
jmp
rol
scas
mov
push
mov
xchg
data16
arpl
adc
sub
stos
mov
jnp
add
scas
mov
jle
nop
dec
lcall
cld
mov
push
aam
js
mov
stos
push
fisttpll
adc
iret
jp
idiv
repnz
aam
bound
push
out
mov
push
sbb
mov
aaa
faddl
mov
mov
xor
add
cmp
mov
xchg
mov
mov
adc
loopne
stc
in
stc
mov
xor
pop
or
jbe
fdivrs
and
stc
and
std
repnz
ljmp
ljmp
test
orl
cmp
jnp
lcall
arpl
int3
sahf
or
repnz
stc
icebp
sahf
mov
mov
push
out
je
icebp
sarl
test
mov
or
dec
xchg
out
xchg
mov
sub
sbb
stc
loop
insl
loopne
jno
mov
test
xchg
movsl
add
mov
dec
xor
cmc
jg
mov
cmc
add
xchg
ljmp
xor
je
lds
or
insb
inc
mov
rorb
push
cmpsl
mov
cmp
mov
pop
pop
and
cwtl
ss
adc
jmp
mov
add
jae
imul
jecxz
bound
or
sbb
xor
adc
lahf
pop
negb
sbbb
xchg
test
or
dec
adc
xchg
movsb
aam
pop
fildl
loop
bound
out
mov
lret
sub
lahf
je
or
mov
cmc
jl
and
jp
mov
js
mov
dec
jbe
decb
jbe
sbb
stc
pushl
jbe
mov
cmp
testl
repnz
into
cmc
aad
or
dec
cmp
xchg
repnz
adc
mov
sbb
in
xchg
mov
test
inc
add
and
xor
add
sub
sbb
dec
call
addl
pop
fisttpll
mov
mov
sbb
sub
loope
ja
pop
mov
repz
add
movsb
test
cwtl
shrl
adc
nop
ljmp
xchg
rorl
ljmp
sarl
ret
mov
dec
out
pop
faddl
inc
sbb
mov
mov
test
inc
popf
mov
add
mov
dec
dec
or
sub
dec
jo
in
std
jmp
rcrl
cmp
and
loope
pop
adc
fistpll
and
les
mov
out
jno
leave
push
fdivrs
sbb
shlb
orl
jnp
mov
cmpsb
ljmp
adc
stos
lods
mov
inc
mov
les
lock
in
repnz
or
pop
aad
pop
inc
mov
push
in
addl
lods
bound
sbb
fisubs
mov
call
lret
dec
mov
adc
xor
loope
jp
xor
jns
clc
jl
daa
lock
or
cmp
ret
xor
xchg
dec
lods
inc
mov
mov
dec
std
mov
dec
out
stos
sub
in
sub
inc
sub
fldln2
test
out
jo
out
cmp
pop
fildl
cmp
fsts
and
and
pop
sbb
xchg
jae
inc
out
add
pop
in
sbb
xchg
push
xlat
testb
loop
jecxz
jl
out
pop
loope
jno
xchg
out
hlt
pop
pop
test
mov
inc
in
pop
aad
lods
data16
push
sub
and
xor
cmpsl
mov
mov
lret
mov
jne
dec
jbe
std
ret
mov
cmp
push
int
mov
lods
mov
mov
cmp
jmp
enter
lods
adc
in
inc
xor
jbe
and
mov
jge
mov
outsl
repz
aad
xchg
inc
pop
cmpsb
int3
mov
mov
cmp
mov
cmpsb
mov
mov
sub
mov
inc
not
dec
addr16
xchg
push
sarb
arpl
jns
gs
add
fdivl
pop
sub
ret
ffree
jns
incb
jnp
test
mov
and
mov
stos
jmp
push
je
adc
test
sub
scas
out
sarl
repnz
sub
mov
ret
mov
test
xlat
xchg
fisubs
add
and
push
test
decb
loop
lret
pop
mov
adc
sahf
mov
and
in
outsb
hlt
sbb
sbb
nop
cli
inc
mov
outsb
clc
lret
cmp
iret
negb
cmpb
xchg
pop
mov
test
addr16
mov
mov
mov
jle
aad
pmulhuw
repnz
test
mov
jmp
xor
jge
popa
mov
mov
mov
rep
add
in
ja
movsb
in
dec
repnz
fwait
clc
sub
in
fwait
movsb
out
push
sar
pop
ret
add
jl
pop
mov
shl
ret
ss
xorl
movsb
sbb
mov
xchg
jno
insl
call
ja
mov
ja
pop
test
loop
leave
dec
nop
and
outsb
lahf
mov
mov
and
filds
jecxz
movsb
loopne
dec
js
ss
das
fnstsw
mov
push
dec
mov
call
mov
scas
out
sahf
mov
insl
mov
call
scas
jmp
mov
in
or
sub
icebp
cmp
fildll
cld
jnp
mov
mov
test
popa
shlb
call
xchg
popf
push
rcll
call
jecxz
test
in
mov
lds
dec
mov
jmp
fdivrs
pop
out
xor
outsl
add
and
inc
imulb
popa
xor
in
mov
stos
jle
sub
mov
repz
pop
out
jns
out
dec
rorl
jl
repnz
pop
movsb
mov
mov
push
xchg
mov
pop
xor
jns
icebp
fimuls
pop
xchg
orb
add
arpl
xor
dec
xor
test
sub
or
and
rcl
rol
add
insl
mov
jge
or
mov
ret
insb
mov
add
mov
in
lds
dec
insb
sub
rcrb
lret
dec
push
bound
lods
bound
push
jae
push
pop
or
rclb
or
stc
popa
xchg
lcall
pop
add
sar
into
rorl
loope
repnz
push
adc
iret
pop
fnstcw
fstpt
cwtl
lds
std
scas
jp
xchg
icebp
shlb
bound
dec
add
mov
pop
in
or
add
rcll
mov
mov
fimull
sub
fldt
in
pop
jecxz
jmp
hlt
dec
cmp
rcl
repz
addr16
in
and
aam
call
mov
dec
insb
addr16
sbb
mov
fidivl
jmp
dec
mov
jl
adc
fstpl
or
daa
andl
mov
movsl
inc
mov
das
sti
dec
jecxz
pusha
icebp
mov
mov
imul
mov
mov
scas
pop
repnz
repnz
popf
ret
dec
test
and
or
sbb
xchg
and
jne
lret
dec
mov
or
inc
mov
mov
and
ficoms
cmp
dec
repnz
bnd
stos
and
movsb
div
fldenv
cmpl
pop
jae
aaa
aad
int
in
movsb
aas
inc
mov
lods
dec
push
mov
inc
mov
mov
fisttpll
dec
mov
in
jno
sub
jbe
jo
bound
jmp
mov
sub
repnz
fldt
mov
shrl
pop
mov
or
push
call
ja
and
jns
mov
fmuls
idivl
cmpsl
mov
jle
fbld
pop
decb
add
stos
rolb
int
shld
stos
mov
lock
adc
insb
iret
imul
and
aam
mulb
jmp
repnz
lock
out
and
mov
fdivl
sub
testl
mov
repnz
flds
xor
mov
mov
push
adc
push
movsl
divb
loop
cmp
popl
int3
cmp
jne
mov
hlt
lret
negl
mov
xor
call
movsb
jmp
rcrl
push
movsb
aam
idiv
in
sub
add
add
dec
add
push
adc
xchg
call
fisttpll
mov
pop
adc
and
push
mov
xor
dec
adc
repz
hlt
mov
sub
mov
mov
popa
pusha
mov
cmc
sbb
cmc
mov
shll
push
shlb
arpl
push
shll
int3
idiv
in
sar
add
bound
inc
add
push
lods
add
leave
pop
stos
sarl
mov
push
orb
xorb
pop
jnp
adc
mov
mov
mov
test
sbb
mull
faddp
mov
xor
aad
int
testb
mov
sbb
stc
rcll
shl
out
testl
js
scas
sub
aad
jle
or
shl
fldl
jl
mov
mov
dec
hlt
ljmp
insl
fcmove
lds
lret
outsl
clc
in
stc
add
add
repnz
push
add
push
xlat
mov
shlb
jp
dec
adc
aad
adc
dec
mov
stos
loopne
aad
dec
pop
icebp
ret
repnz
loopne
and
cwtl
xor
shlb
add
mov
arpl
test
pop
push
mov
dec
xlat
ja
js
jns
rorl
jnp
fmuls
mov
cmp
pop
stc
lahf
in
int
cmp
fistl
sub
sbb
sbbl
int
fisttpl
test
jns
aaa
fstpt
movb
or
lret
inc
rcr
mov
mov
fcoml
inc
fsubrl
rorl
inc
std
repnz
cld
push
sub
pop
jge
std
lea
add
rorl
and
movsb
addr16
pop
xchg
mov
add
mov
test
mov
sbb
cli
repnz
std
push
xchg
sti
pop
imul
insb
or
mov
push
aam
and
aad
idivb
mov
divl
jnp
dec
rorb
pop
pop
mov
pop
cmp
fwait
add
dec
scas
ja
mov
in
sbb
add
bound
sbb
or
adc
mov
lds
imul
mov
ss
lods
xchg
jle
aad
rcll
int
in
jg
xor
mov
jns
iret
dec
insb
fmuls
add
dec
scas
jne
mov
push
pslld
or
in
mov
leave
ja
lret
jl
lret
push
rcr
in
dec
jge
stc
lahf
in
into
mov
pushf
std
mov
pop
outsb
fidivs
jl
cmp
mov
je
xchg
mov
fimull
test
test
jb
push
xchg
mov
mov
sub
mov
int
inc
dec
enter
fwait
xchg
mov
int3
xchg
orb
movsb
jae
movb
xor
mov
fcoml
adc
or
inc
mov
or
or
or
popl
lods
add
fwait
js
jns
in
fimull
hlt
add
into
bound
clc
add
icebp
push
mov
ret
test
mov
ja
jnp
jae
mov
lods
xor
mov
add
inc
and
push
test
cli
mov
stos
insl
mov
into
dec
mov
sub
jmp
push
testb
sbb
push
out
inc
mulb
sbb
or
xor
add
aam
int
in
pusha
dec
jns
orl
addl
xchg
popa
push
dec
dec
push
lcall
adc
pusha
fidivrs
frstor
ja
aam
pushf
sub
dec
lds
scas
not
test
dec
xchg
repz
lea
xchg
xchg
lods
push
shr
push
and
pop
add
cmpsb
lods
cmpsb
add
fiadds
andb
mov
xor
testl
repz
mov
xchg
push
imul
pop
mov
jl,pn
fisttps
adc
out
cmpsb
mov
idivb
inc
mov
inc
inc
and
aad
fwait
test
sub
aaa
fnstsw
dec
jns
subl
ficoml
shll
out
ss
ficoms
dec
mov
dec
mov
push
xor
inc
mov
gs
icebp
sarb
pop
dec
movl
ja
dec
and
dec
fistpll
out
mov
mov
pop
push
outsb
into
push
dec
adc
stc
lahf
in
into
clc
jbe
sbb
dec
push
xor
pop
int3
adc
lods
adc
mov
out
sahf
test
cwtl
andl
xchg
insl
jmp
cmp
xchg
ret
adc
clc
filds
mov
push
add
out
test
sub
movsl
and
mov
test
orb
loope
lds
and
imul
ret
push
mov
call
jp
les
xor
jl
in
jl
mov
and
mov
das
ja
sbb
inc
cmpsb
mov
aad
jnp
push
xor
sub
clc
rclb
mov
mov
clc
pop
lret
or
jg
or
cmpsb
insb
outsb
jmp
fsubrl
hlt
test
inc
movsb
fadd
rorl
jmp
xchg
dec
push
cmp
lcall
pop
mov
mov
out
or
stos
movsb
ret
data16
pop
mov
imul
sbb
popf
popf
pop
repz
xor
loopne
fildll
add
or
mov
mov
mov
call
pop
push
roll
sarl
int
adc
dec
pop
addps
test
adc
add
inc
sbb
dec
add
jno
lods
push
enter
push
inc
sub
xchg
movsb
lds
loopne
cmc
loop
lret
dec
pop
mov
test
aad
js
xchg
xor
mov
rorl
add
jnp
rcll
shl
repz
xor
fsubrl
xchg
pusha
mov
push
xlat
add
call
insb
inc
add
fcmovne
out
mov
lret
push
pop
jge
clc
repz
cmpsb
movsb
jne
sbb
ficoms
stc
dec
jp
add
lds
dec
or
mov
movsl
mov
idivb
in
sub
or
push
dec
or
aaa
lds
pop
mov
push
mov
add
cmp
nop
ds
call
lret
insb
push
push
shll
fdiv
mov
shlb
jno
mov
push
pop
movsl
pop
jo
rorb
jo
pop
arpl
jno
out
icebp
shrl
movsb
or
fxch
sub
out
inc
xchg
insl
cmp
shll
shr
pop
into
dec
loope
xor
cmp
adc
cmp
movsb
xor
test
pop
lahf
ja
lock
mov
dec
fisttpll
dec
js
outsb
insl
or
mov
mov
shlb
popa
lods
push
fidivl
lock
and
cmpl
int3
xor
insl
rorb
dec
lods
andb
mov
add
mov
popf
xchg
cmp
js
push
scas
popf
js
cmp
repnz
dec
mov
mov
push
pop
lret
mov
mov
roll
test
iret
or
mov
adc
fmuls
aaa
fstpl
mov
fbstp
sub
fstl
cmp
mov
push
clc
cmpsl
add
fnstsw
jp
in
dec
dec
mov
push
mov
insb
add
xor
lahf
mov
outsl
lock
mov
in
mov
adc
dec
mov
in
jge
mov
fidivs
inc
mov
push
into
cmp
mov
ret
or
addl
or
ficompl
mov
mov
testb
adcl
jbe
neg
cmc
loopne
int
icebp
jmp
jg
stos
mov
fstl
fidivl
shrd
addb
lea
cmc
add
dec
mov
cmp
mov
mov
aas
push
scas
xchg
jnp
mov
in
in
mov
push
mov
lea
loope
push
pop
xor
dec
call
sub
faddl
add
rolb
jb
loopne
mov
jne
and
ficoms
aad
stos
add
fldlg2
push
sahf
or
jmp
lret
mulb
cmp
mov
ljmp
or
cmp
call
mov
or
mov
jmp
mov
sub
jecxz
mov
inc
shll
inc
ss
cmpsb
mov
jbe
inc
dec
or
movhps
loope
insb
push
repz
fsubr
push
pop
mov
lret
js
stos
arpl
je
jnp
ds
fisttpl
cltd
lds
ja
mov
mov
mov
dec
xor
outsb
inc
mov
add
or
and
stc
fldenv
jp
pop
jns
mov
xchg
mov
push
mov
in
lds
iret
mov
sbb
xor
mov
xchg
test
imul
mov
mov
stos
movsb
or
iret
push
iret
or
sub
mov
nop
fs
sub
mov
inc
pop
or
mov
push
pop
sub
iret
mov
cltd
and
jb
movl
and
gs
imul
mov
aaa
arpl
out
adc
push
shlb
and
das
xor
cmpl
add
add
subb
sbb
rcr
into
jb
mov
jg
negl
cmp
scas
pop
shll
lds
adc
push
or
cmp
adc
lock
sub
nop
dec
add
cmp
les
mov
inc
loop
pop
orl
in
gs
test
jmp
push
lcall
dec
jno
bound
stos
cmc
outsb
decb
insl
mov
inc
or
mov
clc
inc
cltd
jb
and
jecxz
jne
push
cmpl
xor
pop
dec
in
loopne
stc
cmp
mov
lds
cmc
adc
rcll
call
loopne
lds
lds
enter
repnz
ror
sbb
jmp
lds
repz
fs
sub
loope
hlt
mov
test
in
add
call
xor
ljmp
mov
fsub
adc
loopne
lds
lds
bound
aad
mov
xchg
das
pop
mov
sidtl
in
in
sub
fcoms
mov
rcrb
cmpl
mov
xchg
mov
call
jb
sarl
lret
pushf
sbb
cwtl
add
shrb
call
xor
ljmp
mov
andl
and
xor
outsl
andl
rol
lret
notb
movsb
sub
pop
mov
clc
test
push
or
out
mov
sbb
fwait
dec
xor
push
mov
xchg
mov
out
les
push
xor
ret
and
lahf
enter
or
cmp
lds
mov
pop
pop
shl
push
loopne
push
fsubr
call
rcr
imul
decb
mov
push
mov
jle
mov
push
bound
push
push
dec
jb
and
inc
mov
mov
jp
aad
or
ret
movsl
xchg
ja
popf
sub
btr
mov
pcmpgtw
xor
bnd
rcll
leave
or
in
pop
and
lods
xor
in
dec
mov
dec
arpl
mov
lock
mov
lds
jne
jns
dec
int3
add
lcall
mov
mov
fadds
and
cmp
fldt
jb
in
pop
cmp
mov
add
xchg
cmp
rorb
pop
adc
mov
pop
push
rcrl
xchg
mov
je
inc
pushf
sub
jmp
inc
adc
add
jecxz
repnz
sub
and
mov
lods
sbb
imul
pop
nop
inc
testb
orl
dec
out
push
mov
int
mov
shlb
es
xchg
sbb
ret
cld
sbb
icebp
les
insb
xchg
pop
lds
pop
mov
add
std
sub
repnz
cmpsb
jbe
cli
or
pop
inc
pushf
cmp
push
lods
repnz
loop
fildll
xchg
test
cmp
add
aad
jmp
inc
out
add
call
jmp
lds
sub
or
testb
mov
adc
add
xchg
jecxz
into
fstpl
and
or
shll
sar
pop
jnp
push
sarl
into
out
mov
fistpl
dec
mov
mov
sbb
mov
inc
mov
pop
xor
or
mov
leave
icebp
loopne
mov
and
sub
sahf
rcl
cmpb
pop
sbb
xchg
sbb
cmp
mov
jmp
add
in
mov
push
dec
xchg
repnz
cmp
dec
mov
shrl
inc
dec
out
sbb
or
mov
mov
or
add
inc
dec
mov
test
jle
xchg
stos
enter
loope
mov
loopne
pushf
xor
push
lahf
imulb
notl
or
test
inc
or
fdivs
cmp
fdivl
cmc
jmp
lods
loop
and
rcrl
insl
lods
insb
negb
int3
lret
push
dec
fstp
clc
int
adc
in
loope
lods
adcb
pop
scas
ret
dec
jle,pt
enter
stos
dec
lds
mov
data16
inc
and
fmuls
inc
imulb
push
int
xor
insb
mov
fs
fdivrl
imull
adc
sub
cmpsb
aam
xorb
dec
movsl
cltd
inc
test
cmp
pop
pop
mov
sbb
imul
enter
cmp
into
sbb
pop
test
xchg
and
xchg
ja
pop
insl
mov
rcrl
pop
mov
mov
icebp
xor
jecxz
xchg
mov
or
popa
sbb
adc
fsubl
pop
xor
fdiv
and
or
lods
xchg
cmp
shll
mov
jge
mov
jle
add
push
mov
xlat
jmp
into
hlt
enter
inc
cmp
inc
sbb
int
push
dec
dec
cmpsl
push
mov
jno
ret
cmp
xlat
popa
ret
dec
dec
mov
mov
ds
jp
pop
pop
fldl
xchg
add
jmp
imull
ficoms
stos
stc
dec
and
fbstp
std
and
test
loope
rol
mov
and
fsts
cmp
into
cmp
scas
in
pushf
fiaddl
int3
inc
rcr
roll
sub
pop
fadd
mov
sbb
mov
xlat
adc
sar
outsb
mov
sub
sbb
fldt
das
pop
cmp
dec
call
or
and
lods
dec
sbb
xor
inc
xchg
in
repz
rorb
mov
mov
ja
sbb
imul
inc
inc
mov
mov
jmp
sbb
mov
inc
and
sbb
push
push
scas
dec
push
mov
lret
in
int3
push
mov
jge
xchg
cli
ret
mov
in
push
pop
int3
mov
shlb
std
cs
int3
lret
push
xorl
rcl
aas
xchg
dec
leave
enter
dec
call
cmc
xchg
test
pop
sub
fidivs
mov
pop
adc
int
icebp
xchg
cmp
out
push
lahf
jecxz
ljmp
std
iret
mov
sub
sub
sub
lods
mov
mov
ljmp
sub
loop
mov
fstp
inc
mov
jl
stos
shr
int
pop
fsub
xchg
out
mov
ret
or
lock
loope
call
nop
lods
and
pushf
xor
stc
dec
xchg
stc
or
mov
lods
push
lock
in
scas
gs
pop
mov
stc
or
out
or
xchg
add
jmp
mov
add
cmp
movsb
jo
sbb
gs
add
inc
xchg
and
or
mov
fimuls
data16
jl
imul
add
cmp
add
les
std
test
in
mov
push
cmp
ficoms
inc
mov
or
pusha
sub
push
int3
ljmp
fucomp
cmp
fcmovbe
mov
movsb
fldz
outsl
jne
nop
push
fsubl
popf
push
jg
pop
add
test
imul
fisubrs
xor
add
cld
push
call
lret
rcr
stos
inc
imul
popf
fwait
sub
scas
inc
jp
dec
push
sub
in
aaa
lea
mov
or
in
jbe
cmc
loop
jg
insb
xchg
clc
outsb
and
std
das
fdivs
notb
iret
add
push
in
adc
mov
sarl
inc
shlb
fwait
add
pop
test
inc
adc
lds
dec
xchg
jno,pn
das
ja
dec
mov
push
lcall
push
outsb
mov
sbb
sarl
push
dec
clc
movsl
lahf
lock
cli
rol
stos
pop
mov
fldcw
shr
in
push
jmp
xchg
or
add
xchg
scas
push
clc
cmp
push
fmul
sbb
adc
or
aas
xor
push
call
aam
or
int3
sti
fistpl
adc
inc
mov
mov
mulb
push
push
push
sbb
fcom
sti
fisubs
fisubrl
cmp
ss
dec
rcl
mov
mov
mov
enter
mul
ja
outsl
push
cli
sbb
cld
cs
jb
fldt
int
ror
popa
adc
xchg
repnz
jle
cmp
ja
fnstcw
std
aaa
dec
push
arpl
mov
test
mov
iret
add
aaa
fcomps
push
jmp
mov
cli
mov
loope
push
imul
add
daa
pop
push
push
clc
pop
test
or
mov
fists
aad
ljmp
mov
fcoms
cmp
inc
jnp
sbb
or
xchg
dec
es
jno
shrb
push
inc
fucom
add
shrb
insl
sbb
icebp
push
stos
dec
hlt
int3
repnz
aad
inc
movsb
test
push
adc
inc
jl
out
inc
popf
dec
leave
dec
imul
and
add
jb
adc
test
push
lcall
sub
jmp
xlat
push
adcl
mov
dec
and
or
cmp
jp
js
dec
xchg
pop
jmp
stos
mov
cmpsb
push
sbb
aam
popf
test
mov
mov
cmpb
cmpsb
push
ret
popa
push
mov
pushf
enter
cmp
and
sub
xchg
mov
jbe
jbe
or
loop
push
daa
imul
jnp
push
add
sar
pop
inc
xor
cmc
mov
push
movsl
out
or
cwtl
pop
lods
inc
enter
popf
jg
pop
faddl
lret
dec
out
sub
aam
xor
enter
scas
adc
mov
testl
pop
and
push
and
adc
insb
mov
rcrl
sbb
xor
and
mov
in
push
add
in
xor
outsl
mov
icebp
pop
loope
loop
mov
into
sbb
sub
mov
cmpsl
in
pop
cmpb
jb
psubsb
or
rclb
cmpsb
shll
repz
cmp
xor
xchg
xor
addl
mov
movsl
mov
in
xor
fcmovbe
icebp
js
adcb
cmp
dec
mov
mov
fwait
mov
sub
dec
sahf
mov
and
addl
mov
ret
fwait
sbb
jne
shl
xchg
aam
jmp
aam
movb
mov
test
xchg
in
imul
repnz
int
jle
ret
fwait
insb
shll
shlb
cmp
push
shr
gs
pop
loop
sub
mov
into
mov
or
xchg
or
mov
jmp
out
mov
in
jecxz
loopne
pop
or
xchg
adc
inc
or
and
pop
cmpsb
sub
add
dec
hlt
into
xchg
mov
jge
sbb
sahf
popf
adc
mov
aaa
fdivr
in
lods
sahf
mov
and
ret
aad
mov
test
sbb
fldt
in
scas
out
add
in
mov
jge
out
jb
mov
sahf
mov
in
into
mov
xabort
sahf
pop
mov
add
dec
jmp
shrl
pusha
xchg
inc
and
leave
lahf
fsubrl
inc
or
push
orl
into
pop
pop
push
pop
hlt
mov
dec
mov
test
les
jbe
in
mov
mov
mov
mov
push
jb
xor
popa
mov
push
mov
jl
out
or
int
stos
mov
pop
dec
mov
push
push
pop
mov
xchg
cmp
add
dec
or
dec
or
in
mov
xchg
or
sbb
aaa
out
cltd
rclw
aaa
nop
push
mov
sbb
adc
dec
jecxz
xchg
pop
scas
jp
ret
add
mov
push
xchg
mov
test
loop
mov
scas
in
mov
mov
mov
push
pop
ss
ficoms
jns
bnd
mov
mov
mov
sarl
lret
leave
test
adc
int3
or
cmp
jae
mov
cli
pushl
add
movsl
xchg
or
add
sub
test
jg
pop
stos
lret
push
mov
pop
aas
sub
je
push
or
and
sbb
in
in
dec
cmc
shll
icebp
sarl
shl
movsb
mov
and
dec
ds
not
cmp
fnsave
lea
ficomps
jmp
pop
add
jmp
add
gs
mov
adc
add
outsl
sarb
fmull
mov
mov
roll
sub
out
jmp
test
jecxz
loopne
fdivl
jmp
into
cmc
adc
call
mov
push
mov
or
fmulp
out
cmp
popf
cmpsb
out
fimull
cmpsb
adc
xorb
push
xchg
repnz
xor
jbe
push
popa
lcall
mov
jne
pcmpeqd
aam
cli
icebp
pop
inc
push
cmc
loope
mov
mov
cmc
hlt
mov
dec
out
in
rorb
in
call
mov
inc
push
test
inc
in
inc
lret
pop
lods
push
or
fiadds
movsl
xchg
lock
out
ffreep
mov
icebp
aas
icebp
rcrl
and
dec
push
inc
mov
rcrl
xchg
push
je
fldt
mov
rol
clc
clc
test
addr16
and
stos
cmp
or
pop
jno
jae
and
add
clc
adc
outsb
js
popa
sti
mov
outsb
xchg
push
or
jle
mov
outsb
out
push
mov
inc
sub
bound
push
sub
scas
stos
lcall
sbb
cmp
lods
xchg
sti
add
cmpsl
mov
cmp
pop
shll
jae
mov
xchg
sahf
lret
push
hlt
out
xor
js
lret
movsl
or
xlat
das
pop
sbb
dec
fdivrl
fstpl
lret
cmp
or
mov
outsl
mov
loop
ss
cli
leave
sbb
mov
movl
dec
jmp
pop
mov
cmp
lds
fiadds
sub
iret
lret
clc
mov
push
stos
push
cmc
movsl
lcall
in
mov
jnp
mov
mov
sbb
arpl
imul
es
mov
std
lods
sub
leave
ljmp
daa
bswap
adc
cmc
mov
xchg
cmpsb
mov
push
ja
lret
jns
xchg
xor
loop
mov
xchg
jmp
test
fnsave
pop
repz
sti
add
sbbl
mov
fcompl
addl
aad
cmc
mov
fistpl
rolb
insl
fstl
cmc
inc
movsl
jp
frstor
je
push
or
cmp
dec
cmc
popa
dec
add
das
xor
xor
imul
mov
jge
roll
inc
rcr
adc
add
and
add
pop
cld
stos
js
jb
test
jo
jb
push
and
push
sub
xorb
jbe
xchg
dec
xor
jge
pop
aam
ffree
cmp
adc
xchg
cmpsb
stc
adc
or
jle
push
dec
mov
mov
xor
or
push
imul
cmc
rclb
jmp
insb
dec
cmc
es
jmp
cltd
fdivrl
mov
push
or
mov
fsubrl
cmc
js
js
or
mov
fdivrl
aam
addb
mov
fmull
dec
jecxz
repz
adc
jmp
movsb
jg
xchg
sbb
test
mov
xor
adc
sar
dec
cs
fbld
lret
and
inc
cmpsl
inc
adc
add
mov
adc
ret
cmp
add
inc
lods
fcmovu
inc
push
adc
add
and
mov
bound
mov
mov
and
je
adc
cmpsl
xchg
dec
test
in
xchg
icebp
sarb
fdivp
xor
mov
mov
xchg
add
adc
mov
cmc
lods
ds
je
sub
call
gs
negb
pop
les
jmp
mov
jecxz
outsl
jnp
lret
filds
out
fiaddl
xchg
pop
push
divb
clc
fnstcw
fidivs
fstps
rolb
lods
xchg
ficoms
cld
mov
sbb
or
in
loop
out
or
pop
iret
mov
push
out
inc
mov
test
jbe
mov
mov
enter
mov
ds
pop
das
nop
mov
in
dec
xchg
cmp
aam
iret
das
out
adc
or
adc
or
cmp
pop
negl
xor
jp
test
and
rcl
add
pop
in
loopne
mov
sarl
mov
out
lds
mov
dec
xor
addr16
adc
sbb
mov
mov
loop
push
xor
in
mov
je
in
in
adc
test
sbb
mov
mov
js
out
or
mov
rcl
dec
mov
imul
daa
push
fadds
sar
push
ffreep
rcl
add
enter
or
aam
insb
push
pushf
mov
jle
lods
pop
or
fsubrp
shll
sbb
jg
mov
and
test
lret
adc
in
add
mov
xchg
ljmp
mov
cmp
jge
mov
xchg
sbb
lods
repnz
xchg
enter
lret
loop
outsl
iret
inc
pop
cwtl
xchg
adc
pop
into
dec
inc
outsb
in
rclb
jl
push
lods
in
or
ficoms
loope
and
test
lea
dec
pop
mov
int
in
lcall
push
adc
or
rcl
pop
hlt
jno
and
jns
dec
push
push
or
fdiv
or
adc
mov
sahf
xor
mov
cs
cwtl
lods
sub
mov
insb
adc
and
xchg
mov
mov
and
mov
add
mov
jmp
add
jge
add
or
aam
jle
fldl
ret
mov
in
mov
ljmp
mov
jmp
into
arpl
dec
hlt
stos
out
or
clc
shl
in
iret
mov
int
or
int3
popa
dec
int
jecxz
into
cmp
mov
movsl
cmp
cmpsb
xchg
mov
mov
mov
hlt
andb
pop
lods
and
leave
lods
inc
jge
das
fnsave
es
pop
push
les
mov
pop
xor
xor
outsl
jle
inc
cld
jl
or
mov
xlat
mov
xchg
lods
movsl
rcrl
jmp
and
sub
cli
and
ret
iret
pop
jp
shrl
mov
push
cmp
scas
cmp
sahf
cmp
inc
push
mov
push
out
mov
dec
enter
mov
lods
negl
ds
mov
les
xor
and
into
dec
jmp
push
leave
mov
out
jne
out
jge
cli
out
xchg
jne
adc
mov
aaa
mov
cli
rorl
xchg
cmc
jge
out
pusha
dec
or
hlt
leave
or
add
cmp
dec
js
xlat
lods
test
out
dec
inc
lods
into
fwait
fs
mov
aaa
sub
ret
cmp
xor
xchg
jge
mov
fsubr
cmp
xchg
push
out
mov
in
andb
int3
add
xchg
cmp
scas
sbb
aam
in
cmpb
or
stos
movsl
jo,pt
out
xor
push
lods
out
cwtl
loopne
mov
aaa
mov
les
pop
sarb
add
sar
add
lods
dec
icebp
in
cmp
aad
push
adc
in
jg
imul
jbe
adc
add
in
je
inc
pushf
lods
loopne
mov
xor
ds
xor
fwait
or
jmp
int
lret
mov
jg
xor
xchg
xchg
or
ljmp
sbbb
fistpl
out
jbe
in
xor
js
es
cltd
lods
icebp
fwait
sub
shlb
ret
mov
daa
adc
int3
in
xchg
sbb
inc
out
insb
jne
or
push
sub
mov
les
lods
out
push
pop
mov
adc
test
sti
ljmp
in
mov
push
fldcw
cmp
dec
pop
lods
lret
fwait
jg
mov
ds
xor
push
leave
cmpsl
ljmp
sub
sarb
ss
shlb
adc
lds
lods
xor
cwtl
ret
cmp
mov
lods
dec
mov
ret
lds
addb
inc
lods
and
ret
fwait
mov
lods
pop
mov
ret
fwait
add
jne
ret
lods
and
ret
fwait
pop
shlb
rcrb
jb
leave
sbb
rclb
xchg
ds
leave
pop
fwait
sub
jne
sar
lods
sti
xchg
ret
sahf
ret
fwait
jae
jne
shlb
lods
and
cmc
stc
enter
fwait
lds
lea
jne
jne
jnp
out
jecxz
lea
sbb
nop
mov
xchg
inc
and
repnz
add
mov
or
int3
mov
sti
fisttpll
ret
add
sbb
push
or
mov
stos
xchg
addr16
dec
out
int3
icebp
fildl
and
cmc
add
cmc
lret
mov
fildl
bound
in
mov
push
mov
adc
xor
loopne
sarb
mov
lea
ret
sysret
xchg
sbb
xor
xabort
pusha
test
sbb
jbe
insl
mov
sbb
sub
mov
inc
pop
call
data16
jmp
call
fwait
shll
xchg
in
nop
roll
cmp
sbb
les
movsb
jno
xor
rol
mov
push
xchg
shrb
xor
xchg
stos
mov
or
inc
rorb
int
pop
je
fdivrp
or
icebp
outsb
insb
sbb
hlt
insb
fwait
addl
pushw
outsl
sbb
ljmp
dec
mov
mov
pop
movsl
inc
addr16
sub
jl
cmpsl
pop
inc
push
sub
arpl
inc
rep
fstl
mov
mov
lods
jno
es
pop
scas
out
push
inc
fisubrl
hlt
mov
cmp
add
out
sbb
xchg
insl
jbe
add
fimull
mov
mov
xor
mov
dec
xchg
out
leave
rorb
idivl
call
int
mov
shrb
mov
out
mov
fwait
repnz
nop
push
sub
fstl
aam
dec
mov
repz
popf
add
icebp
push
cmp
popa
enter
enter
enter
enter
enter
enter
enter
lret
inc
inc
in
and
jbe
lsl
cmp
and
mov
ret
dec
loop
sub
adc
aam
lock
fs
cs
mov
or
cwtl
push
aas
jb
cld
mov
nop
jg
ror
cmp
sbb
pop
cmpsl
cmpsb
xchg
addr16
stos
cmp
adc
and
jecxz
inc
or
xor
dec
movsb
es
in
daa
test
es
add
dec
cld
jo
out
mov
loopne
lret
call
xor
sahf
shrb
jns
addr16
loope
scas
enter
pop
test
mov
jae
mov
cwtl
cltd
in
or
test
push
and
mov
and
lret
add
sbb
notl
repnz
inc
out
cmp
dec
mov
jmp
mov
loopne
hlt
jno
fisttps
sub
pop
ja
xor
jns
push
ljmp
cld
aaa
sub
std
in
push
jns
mov
inc
xchg
push
add
mov
xchg
sub
pop
loope
popf
push
cmpsb
push
sbb
lret
in
xchg
in
sbb
xchg
or
xor
cli
roll
outsb
mov
sbb
test
rcrb
push
les
mov
add
loop
sahf
inc
or
leave
bound
insl
and
dec
pushf
push
sub
push
into
imul
push
fsts
movsb
shll
mov
out
mov
pop
popl
mov
ss
adc
pushf
dec
jp
les
pusha
cmp
and
or
ss
into
int
dec
add
and
pushf
popa
popf
popf
cwtl
into
mov
aam
scas
jo
shrl
test
pop
inc
xor
mov
aaa
add
ret
js
call
dec
into
loope
mov
cmp
mov
and
jb
cmp
mov
mov
mov
in
mov
hlt
aad
mov
pop
out
xchg
pushl
cltd
push
mov
adc
lcall
out
movsl
lock
loop
shl
or
int3
scas
mov
rolb
or
push
pop
push
cmp
or
inc
ret
mov
cmp
jl
mov
sbb
test
xchg
imulb
push
pop
std
je
imul
mov
jno
mov
mov
mov
loope
les
dec
xchg
cwtl
sub
jns
sub
jno
pop
push
pop
pop
cmp
add
icebp
fstp
ret
jne
out
insl
mov
mov
js
cs
iret
movsl
push
ljmp
int3
pop
push
mov
jl
sub
mov
rcrl
pop
iret
adc
inc
in
rolb
std
loope
hlt
sub
pop
les
push
ss
sub
out
jmp
aaa
loop
mov
jne
in
imul
adc
ljmp
stos
mov
in
inc
lret
jo
and
testb
adc
andb
push
xor
call
bnd
popf
in
or
loopne
jge
fnsave
and
mov
mov
enter
pop
jle
xor
mov
sbb
xor
cmp
fld
or
dec
mov
cmp
lods
push
or
loopne
mov
mov
jmp
into
push
xchg
push
out
repz
fcmovne
fidivrl
mov
ficomps
xchg
xchg
out
je
faddl
cmpsb
std
push
hlt
dec
call
dec
les
fdivl
or
out
loop
xchg
incb
jg
addr16
sbb
add
call
scas
mov
mov
jmp
into
pop
mov
repz
sbb
sbb
adc
call
inc
les
outsb
mov
or
vmovaps
mov
mov
enter
pop
rol
add
mov
cmp
cmp
push
lods
mov
inc
cmp
lods
xor
loopne
mov
push
orl
iret
push
xchg
push
lea
jne
cmpsl
adc
into
pop
mov
repz
insl
test
rclb
mov
imul
bnd
popf
in
or
jge
ret
bound
out
cmp
mov
sub
ret
xor
or
dec
adc
sub
or
or
mov
xlat
mov
movsb
subl
into
pop
xchg
push
div
cltd
repnz
stos
fimuls
ficoms
jne
out
jmp
pop
add
aad
stc
sbb
out
push
mov
push
dec
mov
mov
dec
mov
inc
push
clc
mov
adc
pop
cmc
jmp
mov
scas
inc
adc
cmp
jmp
repz
dec
fdivrs
mov
cmp
bound
fiadds
lods
xchg
sbb
jae
ret
jmp
into
mov
push
xchg
hlt
cmp
sub
ret
cltd
jp
push
mov
int
adc
hlt
sbb
test
jne
repnz
pop
push
dec
sarl
nop
xchg
jbe
push
lret
push
cmp
mov
pop
or
jp
push
push
mov
cmp
sub
mov
mov
push
orl
into
jne,pn
out
repz
out
or
jmp
scas
cmp
jge
fidivs
ret
push
jne
out
in
add
in
fstp
ret
outsb
jne
out
test
mov
cmp
pop
mov
mov
cmp
dec
or
fsubp
rol
add
xor
xlat
cmp
lcall
xchg
push
jne
out
in
mov
icebp
push
adc
jno
and
les
and
mov
cli
arpl
rorb
in
push
lret
add
ds
push
hlt
or
out
mov
xchg
cmp
jle
push
std
shll
hlt
je
jg
mov
inc
fiadds
jne
out
icebp
rcrb
test
les
nop
bound
push
mov
cmp
lods
push
or
dec
sub
xlat
lods
adc
andb
push
xchg
hlt
xor
pop
push
les
notb
mov
in
leave
mov
mov
js
sub
pop
iret
push
xchg
push
push
cmc
mov
or
stos
cmp
xchg
jge
fidivs
mov
mov
out
fnstsw
sbb
mov
or
mov
subl
je
stc
sbb
out
and
mov
enter
pop
lret
nop
lcall
sbb
push
push
aam
cmc
jmp
stos
mov
pop
scas
pop
adc
cmp
jmp
iret
out
mov
dec
test
jg
mov
adc
dec
jmp
into
adcl
iret
in
jmp
scas
cmp
jge
fidivs
jne
out
in
iret
lret
shl
and
pop
les
dec
push
push
xor
loop
sti
cld
aad
aad
add
les
ss
push
ror
cmp
mov
nop
or
movb
arpl
push
cmp
lods
push
or
or
mov
jb
je
sub
fldl
cmp
out
lods
rclb
nop
orl
push
xor
pop
call
push
divb
hlt
int
add
popf
ret
cmp
out
pop
out
and
or
fisttpll
scas
jle
push
iret
out
mov
test
in
pop
lret
sbb
dec
rolb
lret
clc
lods
xor
lock
adc
cmp
jmp
mov
js
fidivs
in
addr16
and
mov
mov
push
iret
push
xchg
push
mov
int
leave
sarb
xchg
lods
mov
ficoms
test
pop
mov
cmpsb
stc
push
push
dec
call
dec
les
sbb
ret
push
jne
out
stc
mov
mov
out
mov
aad
fcmovb
or
mov
xchg
in
inc
into
mov
jbe
sbb
mov
jge,pt
repnz
call
or
cmp
stos
fimuls
fnstsw
sub
out
mov
repz
cmp
sub
imul
add
imul
cwtl
push
das
add
inc
sti
jns
pop
sahf
stos
scas
testb
mov
pop
jnp
hlt
enter
add
das
jl
std
sub
add
aam
pushf
out
jno
sbbl
gs
sub
jge,pt
dec
movsl
lds
jnp
subl
fwait
mov
sbb
mov
pop
lret
sti
popa
pop
popf
repnz
shl
mov
cmp
jo
lcall
rep
xchg
stc
cmc
cmp
cmp
repz
test
xor
sarl
das
mov
movsl
xor
push
xchg
cmp
fdivrl
dec
mov
insl
dec
lock
xchg
mov
ret
cmp
movsl
push
mov
mov
ror
sub
mov
and
push
sarb
sub
mov
into
loopne
xor
pop
in
xor
mov
push
shll
shl
rorl
ret
fisubl
xchg
in
lret
test
xchg
xchg
cmc
push
ds
insb
jnp
sti
sub
jge
outsl
xor
lock
loope
addr16
cmp
orb
cmpb
jecxz
repz
test
dec
cmp
sub
jmp
jle
cmc
push
cmpsb
dec
rorb
sub
in
or
mov
jmp
loop
pop
dec
mov
sarb
std
push
popf
outsl
push
call
sub
es
sub
in
cmpsl
adc
jnp
into
dec
fnstsw
test
rcrl
sub
adc
jl
cmc
rcl
sbb
mov
jmp
fadd
sti
adc
mov
cltd
aad
insb
add
test
adc
and
inc
popf
sahf
std
or
inc
lock
cmp
sbb
pop
sub
add
pop
inc
mov
shll
loopne
mov
push
sbb
sbb
inc
cmc
add
and
sub
xchg
je
rorl
rorb
and
mov
fisubl
das
inc
stos
pop
push
scas
mov
test
add
and
xor
mov
das
loopne
push
add
outsb
cmpsb
clc
sarl
test
inc
adc
pushf
aas
jge
and
lcall
push
sub
xchg
sbb
jmp
jbe
fs
xchg
jne
jnp
mov
fwait
xchg
in
insl
gs
data16
or
mov
dec
call
and
testl
insl
outsl
test
lock
or
dec
aad
ljmp
es
sub
shrb
fldt
leave
inc
jge
lods
lret
mov
scas
push
ds
pop
and
fdivl
pop
inc
mov
pop
jns
inc
std
scas
cmp
mov
out
push
or
mov
stos
imul
paddw
pop
mov
mov
inc
in
std
dec
pusha
sbb
cs
lahf
ljmp
push
divb
mov
inc
inc
sbb
leave
hlt
rcll
inc
dec
int
push
cmp
jae
pop
xchg
into
lret
mov
mov
cli
mov
adc
jge
jmp
daa
add
sub
test
rcrb
ret
sbb
jle
mov
aas
and
xor
jp
jmp
cmc
mov
add
arpl
push
popf
mov
adc
push
xchg
dec
std
lea
aam
shlb
xor
fstps
push
repz
jne
lods
xor
cmc
adc
outsb
shrb
arpl
rsm
jmp
pop
inc
jle
jne
dec
and
jno
dec
loop
fs
fcoml
hlt
cltd
mov
jg
xor
sbb
dec
inc
pushf
mov
push
test
sub
mov
push
dec
push
xchg
fcompl
cmc
xor
xor
dec
addl
jo
int
push
out
or
stos
stos
fmul
xchg
jmp
cmc
or
fmul
lock
adc
xlat
fmul
addr16
div
or
fmul
subl
shl
or
fmul
arpl
fs
jo
arpl
mov
add
in
jmp
sbb
xor
mov
xor
pop
jo
fdivrp
mov
jecxz
dec
xchg
mov
push
enter
mov
adc
mov
jne
or
xor
std
cmp
shll
inc
int
ljmp
mov
stos
mov
dec
jb
cld
jmp
sbb
scas
mov
loopne
fmul
test
push
loope
call
out
xor
cld
xor
sbb
push
data16
push
data16
push
data16
push
mov
cmc
jge
add
xor
in
loope
inc
adc
jnp
add
inc
xor
popf
inc
and
inc
push
arpl
inc
arpl
jae
pop
inc
arpl
inc
xchg
arpl
inc
andl
mov
sbb
mov
ljmp
repz
jecxz
int3
inc
adc
inc
inc
arpl
jg
jns
fisttps
dec
mov
xor
stos
iret
jg
imul
mov
ljmp
adc
xor
cmp
sub
cmc
jnp
xor
or
cmp
cltd
aam
out
push
leave
dec
cs
mov
and
aam
nop
mov
subb
dec
mov
mov
jne
cmp
cmp
push
jle
mov
leave
pop
mov
mov
lret
orb
dec
shlb
enter
lods
push
pop
cs
mov
test
pushf
out
cmp
sub
fdivrl
gs
out
cltd
or
cmp
push
jecxz
jns
lods
out
insl
stos
dec
rolb
scas
fs
sub
cmpxchg
mov
mov
xlat
das
stc
sbb
sbb
aad
add
movsb
shlb
dec
sarl
inc
push
jbe
inc
pop
jbe
inc
in
mov
lods
cmp
dec
pushf
jp
in
jnp
outsb
sbb
inc
mov
sbb
sub
dec
lods
mov
cmp
mov
std
or
lods
les
aam
leave
cmp
fcoml
test
ljmp
popa
pop
dec
jns
repnz
xchg
lret
xlat
lods
sbb
mov
jbe
jmp
stos
dec
adc
mov
fiaddl
pop
cmp
mov
bound
add
add
int3
cmp
sub
pop
xchg
dec
imul
push
fwait
das
imul
jge
faddp
xchg
clc
aam
mov
push
shrl
mov
push
inc
and
jg
jae
insb
add
lods
fisttps
js
imul
jecxz
sar
std
aaa
mov
mov
roll
inc
cmp
shrb
lret
in
fistpl
fs
adc
lock
scas
mov
out
cltd
lahf
push
cwtl
mov
pop
push
push
les
cmp
lea
lahf
addr16
mov
cmp
inc
cmpsl
jne
add
rcll
xor
dec
sar
leave
mov
sub
aad
or
xchg
fidivl
lock
add
jge
lret
push
jl
sbb
fistpl
jns
test
and
mov
ss
in
xor
out
xor
loopne
aam
push
jg
stos
lret
lods
sub
pop
xor
mov
repnz
rcll
lds
lods
lds
in
iret
jl
cmp
ljmp
in
pop
lds
movl
xchg
push
inc
pusha
dec
call
xor
data16
or
xor
mov
dec
lret
out
fxch
enter
fsubrs
inc
out
mov
mov
data16
xor
dec
cmp
aaa
outsl
adc
aaa
pop
adc
adc
jg
icebp
ss
adc
cmp
fisttpll
enter
iret
lea
loope
fildll
sbbb
mov
mov
shrl
dec
sarl
pop
rorl
push
pop
in
stc
in
arpl
jg
lock
scas
arpl
inc
lahf
arpl
jge
jl
in
mov
pop
adc
lcall
mov
lcall
push
lcall
xor
adc
adc
xor
lock
iret
mov
in
cltd
repnz
rol
push
nop
lds
push
jo
inc
push
add
push
push
lds
pusha
lds
xor
add
inc
lds
pop
adc
and
and
xor
lock
xor
rcrb
loopne
repnz
mov
adcb
inc
mov
xchg
mov
bound
pusha
mov
add
mov
and
mov
ret
fnstsw
mov
out
inc
mov
push
push
mov
shll
inc
roll
push
pusha
push
jb
xor
add
inc
push
adc
adc
and
and
xor
lock
ret
mov
loopne
icebp
sbbb
inc
shlb
nop
jbe
stc
not
mov
jo
inc
inc
xorb
push
jbe
inc
pusha
jbe
inc
xor
sub
push
cmpsl
sub
push
xchg
sub
xor
out
sub
sbb
int
mov
data16
icebp
outsl
inc
cmp
addr16
pop
scas
cli
jmp
aaa
scas
sbb
pop
scas
sub
pop
scas
mov
xor
mov
xor
adc
mov
jo
das
mov
nop
adc
xorb
movsl
and
outsl
adc
push
and
and
xor
lock
ret
loopne
rcl
loop
aad
add
iret
mov
adc
push
xchg
rcll
push
mov
jo
inc
roll
push
pusha
push
jb
xor
add
inc
push
adc
adc
and
and
xor
mov
push
and
xchg
or
arpl
inc
in
add
loop
mov
adc
orl
fstpl
mov
mov
lds
outsb
das
orl
imul
dec
cmpsl
jns
cli
cmpsb
test
lock
fldt
out
xor
out
xor
data16
xor
inc
xor
push
lea
inc
mov
sbb
mov
sbb
push
mov
mov
xlat
nop
faddl
sub
fnsave
mov
mov
icebp
mov
sahf
push
mov
outsb
push
inc
sarl
push
rorl
cmpsb
pop
push
arpl
andl
dec
mov
fistpll
push
adc
push
sbb
push
imul
push
popa
inc
dec
push
cltd
xchg
push
testl
jb
mov
mov
or
ret
les
and
lds
inc
lds
in
insl
lds
in
push
lds
in
pop
hlt
push
cmpsl
test
cmpsb
popf
adcl
sbb
adc
mov
jns
adc
clc
mov
adc
mov
test
and
mov
sarl
js
push
dec
pop
push
add
inc
mov
bnd
add
mul
add
hlt
dec
fisubrl
jbe
sub
lds
sbb
lds
scas
lods
adcl
orl
jmp
loop
sbb
adc
rcll
jmp
andb
loope
lret
andl
sbbl
dec
orl
imul
cmpsb
addl
sbb
ds
push
icebp
aaa
cmpsl
push
fnstcw
push
enter
inc
sbb
inc
inc
arpl
inc
xor
arpl
inc
jno
dec
and
pop
push
push
lcall
push
lcall
ret
jmp
scas
data16
xchg
xor
push
xor
pop
xor
pusha
xor
push
xor
data16
push
data16
push
mov
data16
iret
ss
xor
stc
mov
push
push
sbb
inc
xor
xchg
sub
push
cld
inc
push
jbe
inc
sub
inc
push
jbe
inc
ljmp
jg
jbe
add
neg
sbb
xchg
inc
mov
cwtl
inc
mov
inc
xchg
inc
sahf
jbe
inc
xchg
jbe
inc
inc
jbe
inc
push
jbe
inc
jbe,pn
inc
es
or
sbb
push
mov
mov
push
scas
add
mov
mov
xchg
mov
inc
sbb
dec
sbb
cmp
sub
adc
ds
pop
or
sub
push
movsl
sub
push
lods
sub
outsb
cmp
out
das
fsubp
idivl
jecxz
mov
addr16
inc
adc
aaa
push
adc
js
hlt
ss
in
cwtl
adc
enter
mov
push
cmpsl
adc
inc
shrl
inc
ja
sub
xchg
push
push
inc
and
inc
pop
push
lea
lret
scas
dec
icebp
loopne
dec
fabs
fldl
loop
inc
and
arpl
arpl
pusha
sbb
adc
jle
pop
and
xchg
cmpsl
dec
cmp
jbe
sbb
sbb
add
in
lods
loope
cmp
fwait
test
sbb
mov
sub
xchg
add
hlt
xlat
aad
mov
push
sub
dec
dec
pop
pop
sub
add
mov
pop
stos
jecxz
pusha
leave
push
add
inc
mov
jb
cmp
pushf
dec
mulb
test
and
movsb
shrl
push
or
sarb
push
sbb
fcmovnbe
push
adc
rolb
sar
xchg
mov
in
fs
dec
xor
addl
mov
jecxz
stos
in
aam
cmc
js
cli
addr16
sahf
xchg
insl
mov
or
add
rolb
in
jb
xor
imul
lds
jl
xchg
jae
sbb
pop
lods
inc
jle
imul
scas
jbe
fidivl
jecxz
jno
loop
rol
aad
ret
lret
sti
mov
pop
aam
pusha
loop
xchg
add
rorb
push
mov
cltd
dec
pushf
lahf
pop
and
nop
and
xchg
jge
cmp
cmp
movsb
mov
cmp
xlat
insl
xor
or
out
jne
ds
pop
hlt
loopne
scas
lods
add
xchg
pop
dec
mov
mov
mov
lret
and
jnp
fistps
push
test
jl
cmp
mov
test
xchg
loopne
mov
sub
and
dec
out
test
loop
inc
fisubrl
pop
push
mov
int
add
out
jmp
mov
sub
cmpsl
sbb
dec
imulb
fistpl
adc
dec
into
mov
inc
push
pop
popa
inc
xor
sub
andb
out
cmp
xchg
jmp
pop
xor
sbb
mov
std
sbb
arpl
cmp
inc
mov
adc
xor
fs
scas
cmp
popa
int3
jp
push
dec
in
in
fcmovb
xchg
ljmp
dec
sbb
jo
cmp
pop
pop
pop
vandnps
in
mov
addr16
mov
sub
xor
sub
dec
loop
test
nop
mov
push
adcb
or
sbb
jecxz
jle
xor
xchg
xorb
outsb
fbstp
out
arpl
sub
pop
inc
iret
addr16
rcrb
cli
sbb
xor
ss
loop
shll
sarb
push
xchg
mov
mov
sar
add
sub
dec
xor
pop
lar
cmp
push
pop
data16
out
fwait
mov
subb
enter
fadd
cmp
dec
mov
sub
loopne
mov
pop
mov
outsb
inc
adc
in
xchg
incl
inc
dec
fs
insl
out
push
test
rorb
or
xchg
pop
dec
shll
or
add
test
into
in
xchg
dec
sbb
js
sti
sti
pop
ds
or
daa
inc
mov
mov
cmpsl
into
test
fidivrs
xchg
popf
jl
roll
cmp
cmp
jbe
repz
sub
pop
fmul
jb
jmp
cmpsl
jmp
andb
loope
test
popf
lcall
outsb
es
add
dec
adc
movsl
pop
pop
stos
cmpsb
popa
or
and
adc
ljmp
xchg
or
and
ds
lahf
jle
sti
icebp
sarl
notl
cmpsb
inc
mov
mov
bound
sbb
cwtl
loopne
xor
pop
xor
cmp
inc
cmpsl
jge
mulb
xchg
sbbl
mov
mov
lcall
jb
jecxz
inc
cmc
bound
add
add
lahf
add
xchg
subb
mov
pop
mov
mov
and
scas
mov
insl
or
push
mov
cmpsl
push
iret
andb
insb
or
lds
pop
inc
xchg
or
add
ss
adc
mov
cmp
mov
stos
push
jl
cmp
or
leave
in
mov
mov
clc
add
mov
push
jg
xchg
sub
pop
ljmp
in
cmpb
push
xor
jg
lock
mov
push
enter
mov
fwait
mov
fisubrl
dec
push
jnp
pop
push
hlt
out
cmp
insl
pop
aaa
test
dec
aaa
je
adcl
mov
loop
ret
mov
push
repnz
lret
sub
push
arpl
sbb
arpl
gs
inc
jne
push
mov
push
aaa
mov
inc
aaa
jl
divb
test
cs
scas
dec
pop
dec
mov
mov
fsts
and
andb
add
ljmp
xchg
cli
and
shl
jp
adc
mov
mov
jmp
pusha
repz
sub
push
lds
stos
repz
popf
dec
mov
xchg
cli
fdivrl
call
sbb
mov
aas
mov
cmp
or
and
out
sarb
out
sbb
shr
dec
loop
lock
adc
push
add
mov
mov
fwait
cld
cmp
push
arpl
fsubrl
out
repz
addb
push
cmp
fisubrs
push
insl
test
cmp
jmp
mov
mov
pop
mov
adc
dec
add
add
test
mov
int
scas
and
test
mov
pusha
nop
add
inc
das
xchg
adc
leave
aam
cmp
mov
pushf
dec
push
loopne
stos
mov
orb
int
push
ja
testl
jne
jecxz
scas
mov
test
fucom
lods
mov
enter
pushf
xchg
xchg
mov
imul
pop
cmp
xlat
inc
dec
and
cltd
jo
sub
pop
and
push
sbb
ljmp
jmp
add
fcmovnu
repnz
inc
fcom
jmp
fcmovu
cltd
xchg
ljmp
leave
xor
and
dec
mov
rcl
movsl
out
movsl
leave
xchg
js,pn
out
push
out
mov
jge
push
mov
or
cmp
dec
into
cmp
add
cmpsl
pop
sbbl
or
adc
mov
shr
xchg
rorb
add
shl
mov
mov
cmpsl
in
subb
out
cmp
call
es
push
xchg
jbe
cltd
sarb
pop
and
xor
mov
daa
cmp
mov
mov
mov
mov
dec
fisubl
mov
sub
dec
mov
fadds
lret
test
nop
mov
inc
stos
ja
mov
out
lods
add
data16
xor
adc
xchg
inc
es
ja
divb
jns
mov
inc
in
scas
xchg
sub
push
sbb
cmp
lcall
xor
pop
xor
push
push
cmp
loope
filds
aad
or
cmp
or
lret
iret
mov
add
cmpsl
and
sbbb
mov
aad
sub
fcmovnu
cmp
sub
jbe
or
test
fsubl
fcmovu
nop
rclb
repnz
pop
imul
lret
add
outsl
pop
cld
push
mov
sbb
jnp
into
popf
jno
fisubs
cli
and
push
nop
cmpsl
cmpb
jp
test
push
popf
ljmp
jecxz
inc
stc
bound
and
cmp
notl
sub
pop
dec
arpl
and
push
fwait
and
shl
cli
xchg
pushf
les
loopne
mov
icebp
rclb
mov
jno
push
mov
cmpsb
push
nop
sarl
in
dec
jae
xor
lods
cmp
lods
inc
inc
adc
and
add
sub
sbb
xor
adc
mov
add
in
mov
mov
sbb
sahf
aas
push
hlt
xor
imul
dec
push
cmp
pop
lret
cmp
testb
in
in
mov
stc
jp
popa
xchg
jb
in
stos
push
je
incb
xor
add
cs
push
lods
sub
js
sarb
adc
dec
je
cltd
ds
in
jae
fidivrl
cmp
push
shlw
sub
fcmovnbe
pop
xchg
and
inc
push
inc
dec
jbe
inc
and
pusha
je
sarb
mulb
inc
sub
dec
push
loopne
dec
adc
dec
dec
aad
xor
fnsave
stos
cmp
sub
scas
xchg
jmp
xor
enter
rclb
shl
lods
shl
cltd
pop
orl
fs
mov
xorb
push
jbe
shlb
addr16
dec
repz
pop
adc
jecxz
inc
jne
inc
je
pandn
fwait
sub
pop
mov
lret
nop
lods
fisttps
ljmp
adc
lcall
fists
jbe
pop
sbb
jns
ret
inc
cmpsl
clc
sarl
daa
mov
frstor
mov
shl
push
loopne
nop
or
mov
nop
les
add
xchg
jmp
sbb
roll
pop
inc
mov
ficoms
loop
inc
or
jp
arpl
inc
xor
cmp
jo
data16
outsb
push
adc
inc
xor
ss
adc
enter
inc
mov
lea
mov
das
pop
jae
pop
mov
pop
fadds
inc
xor
push
xlat
or
into
in
out
lock
xor
dec
lcall
insl
testl
pop
xchg
pop
fiadds
sub
cmp
loope
mov
aad
rclb
dec
and
add
hlt
and
jo
mov
cmp
cmp
mov
ror
in
aam
int
push
xor
dec
xchg
mov
pop
mov
mov
sbb
mov
aas
inc
mov
iret
and
mov
mov
sahf
in
jp
je
je
mov
cmp
add
inc
mov
clc
cmp
pop
arpl
test
push
mov
enter
xchg
push
jns
adc
popa
out
cld
mov
mov
jle
adc
cmp
nop
dec
pop
jnp
gs
mov
lcall
xchg
daa
mov
push
push
sub
jp
mov
mov
push
outsb
ds
aad
jne
pop
sub
push
push
mov
pop
dec
call
rolb
xchg
aaa
dec
rorl
aaa
jo
dec
lea
fdivp
mov
and
ds
sarl
add
cmpsl
cmp
cmp
std
xchg
push
dec
push
pop
cmp
test
mov
push
push
add
or
mov
and
jae
je
cltd
cmp
mov
push
sub
push
mov
ds
addr16
ss
push
add
pop
aaa
mov
shl
cmpl
test
xorb
dec
mov
mov
add
aas
cli
cmp
test
add
test
inc
inc
jns
adc
shl
nop
in
jb
and
cmc
push
mov
fcompl
dec
push
es
add
xchg
and
adc
inc
dec
loope
scas
adc
lahf
mov
ss
jp
ja
loope
lods
mov
out
out
clc
xor
mov
dec
pushf
nop
jae
dec
jbe
scas
pxor
cmp
jmp
dec
mov
mov
in
movsl
jbe
inc
pop
jp
test
adc
fcmovu
out
aam
cmp
and
xchg
je
and
mov
fwait
sub
sbb
pop
mov
push
jge
jno
and
dec
stos
sarb
js
pop
mov
idiv
mov
lcall
sub
xor
fsts
sbb
or
adc
aaa
mov
xchg
ret
inc
sahf
and
push
fwait
add
mov
adc
sbbl
adc
dec
mov
sbbl
mov
push
in
pop
pop
dec
and
test
dec
dec
scas
mov
push
stos
scas
rorb
outsb
aad
mov
out
pop
add
inc
dec
call
dec
fbstp
and
or
pop
lods
pop
aad
sar
inc
aaa
mov
jp
rcrb
inc
mov
dec
lcall
sub
loope
dec
int
fcomip
mov
mov
lret
inc
in
cmp
and
jb
or
nop
popf
shlb
adc
fucomip
fadds
and
fiaddl
nop
jl
push
fcmovnb
fisttps
cmp
jmp
cmpl
fisubl
push
pop
sub
add
push
jge,pn
addl
push
add
gs
fcompl
xor
repnz
add
cli
test
cmp
xchg
es
push
push
jmp
lret
js
push
cmpsl
pop
jmp
and
sbb
dec
cli
pop
stos
mov
or
or
xchg
mov
sub
cmp
test
xchg
out
insl
jmp
dec
nop
mov
mov
cld
fadd
in
adc
loopne
aas
sub
jge
imul
inc
mov
shr
lods
sbb
or
shl
daa
pop
hlt
test
lods
ficomps
xor
mov
push
mov
and
xchg
in
jb
adc
lret
sbb
mov
cmp
in
mov
pop
in
mov
aad
xor
xor
jg
mov
test
jno
push
out
aaa
movsb
mov
mov
fbstp
adc
cmp
lods
fidivs
lods
loope
scas
dec
sub
out
mov
or
mov
jecxz
hlt
out
inc
add
push
ficoms
pop
mov
sbb
mov
mov
dec
adc
add
mov
xor
stos
mov
aam
push
out
adc
aad
xor
subb
in
pushf
mov
insb
in
or
ljmp
arpl
repnz
in
aad
push
adc
aaa
push
adc
aaa
divb
push
or
push
cs
gs
lcall
call
out
aad
push
icebp
sbb
or
mov
xor
sub
imul
jbe
push
add
fisubrl
sti
iret
inc
mov
scas
test
lahf
pushf
xchg
inc
inc
xchg
mov
lcall
push
lea
imul
lods
mov
enter
ja
sbb
push
out
add
xchg
in
iret
std
repz
rol
je
mov
jmp
repz
sarl
jbe
add
out
dec
dec
sti
cmp
repz
lahf
sub
loop
cwtl
test
ret
mov
iret
cltd
loopne
add
mov
sub
jp
in
ficomps
out
mov
sub
mov
outsb
jp
scas
mov
jle
test
inc
add
jbe
iret
xchg
dec
mov
lret
rcl
mov
sbb
scas
xchg
call
ds
je
stos
cltd
fs
pushf
ljmp
adc
mov
mov
jp
in
xchg
fwait
inc
loop
adc
mov
mov
sub
mov
inc
fisttps
jg
or
add
out
mov
dec
pushf
ds
mov
cmpb
xchg
jbe
xor
mov
inc
fs
and
jnp
mov
gs
xchg
cmpsl
mov
cld
fwait
jg
mov
imul
mov
mov
xor
addr16
or
shrl
dec
mov
into
mov
cmp
push
test
push
imull
stos
orl
pop
call
loop
sbb
ss
nop
lahf
inc
mov
adc
orb
inc
loop
sub
jl
mov
add
daa
adc
addl
inc
push
jg
xor
fidivrs
hlt
ficoms
psllq
jns
fsubrs
enter
lods
in
lods
xlat
xchg
hlt
xchg
xchg
xchg
mov
cmp
lret
jo
and
lods
mov
mov
clc
mov
push
les
dec
addb
dec
cmpsb
out
xor
fucomip
int3
xchg
jle
jne
mov
push
rcrb
rorb
into
mov
sti
push
or
test
add
or
push
cmp
and
pushf
rorb
cmp
mov
xor
imul
inc
orb
cmp
stos
and
out
adc
mov
dec
jp
dec
ja
das
mov
out
ljmp
push
jle
sub
out
xchg
nop
sub
lods
insl
ljmp
mov
xor
cmpsl
jle
idivb
sub
sbb
loopne
jle
orl
jbe
mov
cmp
mov
mov
scas
ss
repnz
mov
test
repz
mov
or
xchg
stos
outsb
push
out
cmpsl
jbe
call
mov
mov
inc
test
xchg
out
inc
cmp
fldenv
mov
push
xchg
in
mov
ljmp
andl
out
cmp
sbb
fsin
and
ret
and
add
js
ficomps
lea
jl
xlat
lea
inc
cli
paddusw
push
in
xchg
cmp
dec
mov
dec
pop
xor
sbb
loopne
push
sbbl
push
je
dec
mov
fistps
add
jecxz
jae
push
mov
cmp
mov
lret
push
lea
call
cmp
dec
out
aaa
dec
jb
push
cmp
stos
or
test
mov
sub
xchg
or
dec
clc
pop
jge
lods
int
fiaddl
inc
inc
and
mov
imul
add
fnsave
dec
pop
mov
enter
ja
pop
data16
cmp
add
jmp
adc
add
lret
jmp
mov
rorb
dec
push
dec
sbb
testb
dec
test
push
xorb
jo
shlb
mov
repnz
pop
push
fisubl
jbe
inc
aaa
xchg
xor
icebp
jbe
inc
repnz
fidivs
lcall
lcall
mov
sbb
repz
cmp
push
mov
fs
mov
mov
pushw
pop
data16
push
ds
inc
xchg
and
jo
pop
cs
mov
add
pop
inc
or
sub
pusha
ljmp
dec
jle
pusha
mov
xchg
jmp
aam
and
xchg
mov
mov
xchg
dec
rorb
cmp
insb
sbb
icebp
out
movsl
loop
daa
jae
ljmp
xchg
mov
jle
add
xchg
dec
loop
test
sub
sub
push
xor
add
xor
inc
mov
rorb
jecxz
adc
sbb
addl
insl
jmp
sub
push
sbb
sub
adc
push
xlat
std
mov
mov
stos
or
sbb
lahf
and
cmp
mov
xorl
sub
lock
push
popf
xchg
test
push
sbb
pop
hlt
jmp
xchg
fcmovnbe
scas
shlb
dec
mov
jo
cmp
es
mov
leave
vmread
cli
mov
mov
stos
xlat
sub
out
imul
pop
pushf
test
xchg
jnp
mov
adc
insb
pop
fcoml
repnz
pop
lret
test
pop
fsubl
icebp
mov
lods
mov
and
adc
sti
mov
out
cmpsl
lds
aad
dec
push
fists
repz
add
ss
mov
fstpt
mov
mov
mov
lret
sbb
cs
mov
dec
in
cmp
test
mov
and
dec
jmp
inc
lock
or
scas
xor
fdivl
lret
cwtl
hlt
sub
ror
mov
imul
aad
lds
pop
jae
in
mov
inc
in
xchg
ljmp
cmp
adc
test
add
faddl
mov
inc
dec
stos
and
add
jl
pop
inc
aas
mov
aad
fsubrs
nop
test
ret
xor
aam
adc
rcr
cmpsl
xor
push
aam
aam
fidivl
sti
pusha
test
ja
push
xor
xor
pop
lds
cmc
pop
test
pushf
test
inc
cmp
call
clc
jecxz
aam
add
or
sub
sahf
mov
outsb
mov
fcoms
lret
mov
insb
dec
mov
jecxz
dec
lcall
js
roll
dec
loop
cmp
cltd
mov
aaa
in
add
jge
mov
ja
in
or
or
adc
push
mov
fdivrp
aad
test
or
xchg
mov
and
leave
jne
loopne
insl
jg
xor
push
fildl
xchg
faddl
cmp
xchg
insb
xor
div
loope
ds
fs
iret
sti
and
jne
adcl
push
repz
shll
les
jle
cwtl
pop
xorb
pop
add
inc
sub
in
jnp
sub
aas
mov
jne
sti
pop
loope
and
push
fiadds
mov
xchg
sbb
mov
adc
inc
int3
sbb
jmp
pop
sub
mov
xor
fwait
gs
jmp
xchg
and
repz
sub
imul
xchg
stos
inc
sub
mov
cli
jl
aam
dec
fisttpll
in
push
test
je
insl
cli
sti
mov
inc
or
std
nop
jl
xor
inc
jo
sub
ljmp
cmp
sub
test
and
mov
aam
xlat
movsl
push
pop
leave
loopne
inc
sahf
leave
or
mov
cltd
stos
jmp
mov
movsl
push
movsl
movsl
sti
popf
mov
sbb
sub
loope
sub
xchg
push
inc
cld
mov
lds
sub
pop
add
sub
lret
xchg
pop
jmp
xchg
jb
push
or
jge
ds
dec
in
sbb
push
push
cmp
push
sub
aaa
cmp
nop
xorb
aaa
test
int
jbe
and
push
lds
push
sub
or
jl
imul
aas
jno
sbb
call
adc
pop
mov
and
jg
cmpsb
jmp
inc
push
popa
jae
dec
test
cmp
xor
inc
dec
movsb
inc
pop
jnp
hlt
jmp
cmc
les
hlt
pop
dec
pop
ret
bound
sahf
add
mov
push
lret
jge
test
cmp
push
sbb
loop
pushf
sub
or
repnz
push
arpl
xchg
sbb
nop
inc
jae
mov
sahf
cmp
arpl
punpckldq
adc
inc
aad
adc
dec
add
inc
jmp
test
push
jge
pop
xor
mov
xchg
cmp
cmp
popa
and
daa
ss
es
je
mov
test
mov
je
mov
push
leave
scas
xchg
repz
xchg
mov
jl
inc
push
xor
sub
push
vmovhpd
inc
push
mov
sub
cmc
in
pushf
lock
dec
jmp
xlat
pop
inc
shll
jecxz
dec
aaa
push
lret
inc
sbb
xor
std
sbb
or
push
dec
xchg
pushf
test
gs
test
pop
scas
xor
lds
xchg
call
xlat
test
ja
in
out
fiadds
ror
push
data16
adc
icebp
cmp
inc
mov
ja
push
jg
jne
ja
xor
mov
sti
mov
cs
icebp
leave
and
imul
jno
xor
mov
fcmovne
mul
jg
jbe
add
nop
mov
inc
lcall
movsb
lcall
mov
inc
imul
pusha
out
xor
xor
out
pop
xor
stos
into
jne
bound
or
xor
or
add
int
jge
lret
mov
dec
mov
test
imul
out
popa
add
mov
repz
cmp
in
mov
pop
cmp
jmp
push
push
xchg
mov
xchg
bswap
push
sbb
iret
cmp
lds
std
addr16
mov
sub
adc
pop
jl
in
push
enter
dec
sti
xchg
sub
into
cmp
jne
nop
push
xlat
insl
cmpsb
xchg
scas
fldl
mov
inc
inc
pop
xchg
pop
leave
sti
sub
data16
arpl
cmp
in
aam
shlb
int3
cmp
mov
sbb
popf
fldenv
lea
xor
lds
out
enter
sbb
xor
adc
cli
mov
jae
xor
ja
lar
dec
rorb
jns
push
push
pop
fcmovu
test
lock
lea
enter
jle
out
ds
mov
sub
jne
into
push
mov
sbb
sbb
stos
ficoml
jecxz
es
lret
pop
insb
mov
lret
cwtl
cwtl
push
test
mov
mov
dec
inc
lahf
xchg
outsl
aam
mov
xorb
xchg
clc
inc
flds
mov
dec
lea
out
inc
leave
add
aam
out
inc
mov
mov
int
fildll
imulb
into
roll
insl
sbb
jno
test
add
cmpb
icebp
lcall
push
icebp
or
imul
fwait
rolb
int3
cmp
repnz
pop
mov
or
xchg
inc
xchg
outsb
push
es
stos
xchg
loopne
xor
loopne
dec
dec
out
xor
adc
pop
lea
mov
leave
in
icebp
out
dec
fdivrp
in
pop
jmp
fmuls
cmp
lea
mov
xchg
aam
xchg
jo
loope
mov
lea
arpl
inc
adc
add
fptan
push
jg
xchg
outsb
mov
jne
insb
test
mov
movsl
fs
cmpsl
test
dec
mov
sub
lret
push
sbb
dec
sti
jl
mov
jle
or
mov
sub
addr16
scas
test
sbb
mov
sbb
pop
loop
inc
fisttpl
cmc
sbb
je
mov
or
push
test
push
jecxz
mov
cmp
mov
cmc
mov
mov
sbb
pop
xchg
lret
popa
enterw
xor
mov
mov
sub
mov
mov
out
ret
adcb
pop
or
or
push
mov
jg
sbb
mov
inc
mov
flds
pop
movsl
and
and
std
aas
insb
out
jb
arpl
xchg
icebp
and
sbb
fsubl
dec
and
push
pop
pop
and
es
testl
add
movsb
xchg
loope
lods
out
mov
jecxz
mov
push
jp
adc
imul
fs
dec
inc
rcrl
push
add
add
push
mov
push
test
enter
js
add
fwait
or
inc
jmp
xor
push
jno
sub
inc
dec
and
push
and
dec
popw
scas
shl
test
xchg
test
cmpsb
decl
mov
sub
pop
lds
xor
das
adc
and
pop
mov
in
outsl
or
fbld
xchg
cmp
repnz
lret
ljmp
std
scas
out
movsl
push
xchg
les
xor
jg
pop
jne
ja
pop
inc
mov
sbb
cwtl
fwait
mov
pop
fs
testb
mov
xchg
xchg
aam
or
cmc
fsub
jle
pop
test
pop
lahf
sub
sub
fldcw
aas
lods
pop
jmp
out
xor
push
mov
xchg
add
pop
mov
repz
push
outsb
addr16
and
ds
add
jbe
mov
xchg
ret
test
mov
leave
arpl
xchg
icebp
adcb
adc
xor
outsb
shlb
stos
sub
jae
shll
pop
mov
and
sub
pusha
clc
icebp
stos
dec
outsb
jp
sahf
dec
jo
or
mov
mov
aad
push
pusha
jle
pop
pop
xor
addr16
cmp
popa
sbb
adc
xchg
fisubs
cmp
aas
mov
xchg
inc
xchg
jmp
int
adc
and
fs
mov
data16
cmpsb
mov
xchg
rcll
mov
andl
jae
adcb
fstpl
push
dec
jg
sti
and
popa
mov
pop
mov
outsb
xlat
out
stos
daa
pop
imul
test
inc
mov
pop
fsub
ds
int
mov
test
lock
into
mov
std
test
popa
and
xor
fdivl
push
adc
push
push
mov
pop
pushf
out
bnd
sbb
pop
cmp
inc
xor
adc
xlat
jg
or
repnz
dec
out
sti
inc
addl
xchg
ja
jne
hlt
scas
sti
mov
sbb
ficoms
mov
mov
cmpl
stc
outsb
in
repz
loop
sbb
and
fadds
addr16
arpl
sbb
inc
mov
test
js
and
ret
inc
pop
mov
mov
jnp
je
sbb
repnz
xchg
dec
fwait
pop
es
mov
cltd
cmp
xchg
mov
stos
xchg
call
shl
mov
push
xlat
xchg
pop
repnz
mov
mov
sar
xchg
ss
ret
dec
lret
fsub
test
sbb
iret
movsl
idivl
sbb
fidivrs
dec
lahf
sub
mov
clc
xchg
movsl
xorb
cmp
insb
cmp
cwtl
wbinvd
cmp
stc
test
add
xor
daa
dec
cmp
add
and
movsl
mov
ljmp
fnsave
gs
in
mov
pushl
sbb
xchg
stos
xchg
dec
shr
jnp
dec
enter
jb
xor
adc
imul
pop
es
fcmovu
mov
pop
add
lahf
cmpb
idivl
outsb
daa
fnstcw
jnp
sub
xchg
adc
mov
jnp
add
shll
cmp
jmp
cmpsl
or
xor
test
and
fidivl
mov
inc
mov
cld
test
adc
jecxz
aad
test
pop
jmp
cmp
sub
pop
fsqrt
in
pop
sbb
adc
push
jno
push
mov
push
pop
ss
mov
mov
fcmove
insb
stos
mov
gs
mov
mov
cli
sbb
sbb
jecxz
jno
mov
pushf
or
inc
out
dec
test
pop
pop
adc
and
mov
inc
fisubs
xchg
jmp
std
sub
cmc
test
addr16
rclb
pop
jmp
sbb
pop
adc
or
cmpl
int
and
or
push
inc
fidivl
addr16
inc
dec
mov
popf
or
sub
xchg
std
int
cmp
jae
sub
das
test
ja
xor
aam
cmp
insl
inc
xor
xchg
shll
enter
clc
push
enter
inc
syscall
pop
sub
or
sbb
jae
outsb
or
sbb
aas
scas
pop
call
push
sbb
jo
xchg
fimuls
aam
aam
cltd
bound
cltd
lret
les
test
dec
in
xchg
lock
mov
loope
loop
add
xor
idivb
loop
inc
dec
je
add
lods
iret
test
mov
xor
push
pusha
xor
or
aam
dec
stc
push
icebp
push
and
jno
sti
pop
je
mov
or
iret
xchg
add
rcr
mov
out
sub
repnz
ffreep
aam
dec
fcmove
adc
xchg
fidivrs
cmpsb
pop
and
jmp
inc
shl
int
inc
sbbb
lds
adc
push
lds
sub
adc
int3
adc
mov
cld
cmp
daa
or
push
fwait
and
push
inc
sbb
rcrl
in
mov
out
ret
loopne
les
jae
arpl
xchg
cmp
xor
pop
cld
push
cmp
sub
pop
cmp
hlt
xor
xor
dec
or
gs
dec
idiv
add
jne
repnz
inc
mov
adc
je
dec
int
imul
push
sahf
cmp
test
dec
pop
mov
fwait
outsl
pop
adc
stos
clc
mov
add
dec
dec
xchg
fdivs
cltd
add
lcall
shlb
pushf
mov
aas
sub
pusha
xchg
loope
mov
or
cmp
xor
sbb
rclb
cmp
jnp
cltd
bound
lds
pop
lods
jb
xchg
push
cli
lahf
sub
fmuls
dec
rolb
into
add
mov
loopne
dec
out
pop
lods
mov
push
lret
fiaddl
out
aad
clc
fimuls
enter
fists
rcr
push
jle
mov
mov
pop
or
leave
sub
jbe
pop
fldl
dec
addl
sar
mov
repz
cmpsl
mov
imul
sbb
aaa
prefetch
mov
mov
outsl
dec
add
push
popf
jle
mov
arpl
aas
mov
sub
arpl
popf
add
xsaveopt
mov
cmp
mov
sahf
stos
xchg
ret
pop
cli
pop
mov
in
lds
mov
xor
lods
or
stos
in
pushf
mov
mull
dec
push
sub
add
add
fildl
shrb
lods
mov
push
pop
data16
mov
add
mov
mov
test
and
mov
test
scas
stos
jle
stos
add
xchg
js
adc
dec
jecxz
arpl
cld
imul
cmp
aam
icebp
fs
mov
cmp
and
dec
push
adc
cld
sub
mov
jecxz
mov
arpl
imul
mov
cmc
and
mov
xchg
push
shr
and
loope
xor
sbb
jno
movsb
fwait
xchg
dec
sti
test
jns
sub
nopl
or
je
pop
cltd
test
mov
aam
ret
in
adc
adc
cmpsb
loop
push
cmp
cmp
and
or
cmp
pop
push
loop
aaa
daa
pop
xlat
leave
adc
sub
inc
fstps
xchg
pop
mov
ljmp
imull
jno
add
mov
stos
arpl
pushf
dec
lahf
sbb
mov
cs
push
test
add
setl
cld
pop
mov
hlt
push
mov
icebp
pop
loop
xchg
mov
inc
rorb
xor
jnp
pop
push
dec
lds
pop
and
lods
test
cmp
jp
xlat
cwtl
add
mov
mov
mov
sbb
lods
ret
jo
movsl
frstor
xchg
in
mov
movsl
sbb
fdivrl
adc
adc
cmp
ljmp
in
mov
test
inc
add
push
adc
aad
mov
out
sub
pop
pusha
mov
inc
pop
les
test
cmc
dec
push
and
pop
xchg
mov
fildl
mov
cli
addb
push
sbb
out
mov
mov
lcall
loope
add
pop
sbb
add
xchg
ror
jle
fs
jo
mov
mov
jmp
inc
lcall
inc
dec
and
shrl
adc
adc
mov
adc
xchg
xchg
pop
push
push
lret
mov
dec
xor
cmc
jb
loope
inc
insb
andb
jg
jbe
js
push
jmp
cwtl
mov
mov
mov
jo
int3
test
pop
cld
addr16
fldt
sbbl
mov
cmp
sahf
sub
repz
repz
ret
jmp
mov
lea
xor
xchg
and
push
nop
out
int3
pop
mov
ja
bound
arpl
and
inc
sti
sub
arpl
imul
lahf
push
jecxz
fdivl
mov
mov
lahf
jg
pop
jmp
sub
rcrb
dec
pop
add
sub
fisttps
leave
sub
pusha
fcompl
push
loope
out
sarb
mov
enter
loop
arpl
inc
mov
in
test
out
xchg
nop
clc
dec
ss
inc
nop
loop
push
std
pop
scas
loop
divl
scas
push
mov
cwtl
push
aad
add
mov
ret
ds
adc
lcall
jno
lds
shll
push
aaa
adc
add
xlat
ja
fwait
fs
jns
rolb
jmp
out
dec
adc
mov
lods
jo
push
data16
insb
mov
lcall
push
push
push
xor
decb
mov
pop
in
popl
push
xchg
adc
into
loope
xor
dec
xchg
mov
xchg
pop
adc
sahf
dec
jnp
jae
cld
stc
shll
jae
inc
lea
aas
pop
or
popa
pcmpeqw
mov
fidivrs
push
je
push
into
dec
dec
mov
in
pop
stos
loopne
inc
stos
fwait
adcb
in
or
data16
sub
ret
bound
ret
ror
pop
mov
shl
shrb
xchg
out
cs
sub
popw
push
addl
in
jp
scas
mov
out
xor
test
aam
push
rclb
in
pop
dec
push
fst
mov
aam
pop
xchg
add
xlat
fwait
add
std
sarb
iret
inc
or
cld
outsb
les
mov
xchg
jge
mov
add
mov
mov
xchg
int3
xchg
jp
std
shrl
in
call
call
stos
sbb
and
cmp
push
mov
fidivrl
aas
movsl
gs
cld
mov
fisubrl
loope
fldcw
mov
xchg
mov
sbb
std
xor
inc
int3
adc
pop
jecxz
test
and
mov
add
fildl
mov
nop
scas
xchg
test
sub
jg
movsl
scas
inc
cltd
pop
pop
push
mov
add
mov
push
sub
scas
jnp
push
jns
cld
repz
dec
sbb
adc
dec
xlat
dec
or
cmpsb
dec
pop
xchg
jbe
mov
ljmp
faddp
inc
dec
test
test
cmp
push
in
popf
sub
or
imul
jle
mov
out
lods
jns
mov
push
mov
test
inc
ja
scas
mov
adc
sbb
out
out
xor
push
jno
sbb
in
add
mov
insb
dec
mov
and
sub
into
insb
mov
cmp
repz
jp
xchg
dec
push
in
sub
je
add
lds
inc
je
dec
adc
mov
scas
cld
cwtl
lods
int
out
clc
mov
fists
mov
cwtl
mov
mov
sbb
inc
dec
xchg
ja
mov
dec
or
sub
adc
icebp
pop
jge
push
fsubrp
adc
xor
jmp
pop
sahf
mov
cld
jl
js
in
jp
repnz
lods
pop
scas
mov
mov
cwtl
cmp
imul
pop
push
loop
shrb
popa
mov
mov
lods
ss
cmp
cmp
dec
es
stc
ljmp
mull
pop
es
cmp
mov
pop
aam
jmp
sub
call
pop
cmpsl
fcoml
mov
sub
jecxz
push
mov
cmp
mov
pushf
les
sti
sbb
loop
and
xchg
fsubrs
ret
pusha
clc
sub
mov
jge
xor
lahf
call
aad
lock
lret
clc
xchg
add
in
mov
fdivl
inc
fsubr
filds
les
sub
or
dec
stos
pop
out
ror
mov
mov
pop
jmp
movsl
adc
adc
cmp
ja
popf
cmp
imul
loope
sti
enter
pop
xchg
lcall
mov
adc
and
jnp
jo
fbld
mov
fs
bound
clc
clc
add
fidivl
mov
xor
enter
cmp
inc
scas
out
pop
mov
ror
adc
xchg
popa
lea
pop
popf
mov
loop
rcll
lods
fnstsw
outsb
lock
or
fidivs
repnz
and
loope
movsb
push
sub
cld
ds
cmp
jl
mov
mov
jb
jbe
inc
mov
mov
mov
sub
pop
pop
add
xor
jne
adc
mov
cmpsb
pop
pop
pop
sub
jle
mov
gs
inc
sub
in
pop
aad
lods
in
pushf
lea
roll
mov
xchg
and
sub
cld
psraw
push
outsb
adc
or
add
cmpl
sti
cmp
push
int
xlat
cmpsb
pop
inc
loop
cmp
add
popa
jb
int
mov
repnz
push
movsl
ljmp
js
mov
sub
sbbl
pop
rclb
das
rcr
cmp
xchg
decl
push
stos
add
xchg
fistpl
sub
mov
popf
call
mov
mov
push
and
sti
inc
popf
pop
push
loope
push
push
push
loop
xchg
test
cmp
std
dec
add
pop
mov
data16
out
dec
push
in
xor
push
add
testb
mov
addr16
inc
pushf
mov
xlat
daa
jb
and
mov
dec
push
in
outsb
xor
dec
adc
aas
fiadds
add
adc
pop
ret
xchg
loopne
je
xor
dec
cltd
sbb
test
out
out
push
inc
fnsave
push
out
xor
mov
sub
or
cmp
cltd
cld
or
fmulp
test
and
hlt
and
mov
out
stos
push
add
push
jecxz
shrl
lods
repz
jg
xchg
jmp
lahf
daa
add
das
pop
fs
cmp
inc
push
jbe
dec
js
sub
pusha
scas
jbe
push
scas
out
cltd
dec
push
sub
inc
inc
xchg
pop
inc
mov
sbb
push
mov
data16
sbb
xor
mov
das
add
ljmp
dec
xchg
jl
jnp
push
pushf
inc
dec
lds
rcr
mov
das
dec
and
cli
jmp
iret
pusha
add
xlat
repnz
divl
xchg
push
cmp
add
loop
fists
jp
mov
pushf
xor
inc
cmpsb
mov
push
fisttpll
out
xor
stos
cwtl
sbb
out
shlb
aam
cli
inc
and
imul
enter
movsl
test
mov
pop
imul
add
into
and
in
insb
loope
and
jb
mov
nop
adc
cmp
movsb
in
mov
fadds
ds
dec
inc
dec
mov
and
sbb
push
ljmp
add
ret
jge
mov
aad
roll
push
cmp
mov
fisttpll
mov
xchg
cmpsl
pop
lahf
rorl
mov
rcrb
dec
loopne
dec
or
push
jmp
pop
push
xor
iret
fdiv
nop
ljmp
into
out
xchg
and
sub
push
ds
add
fcompl
jo
dec
dec
sbb
orb
mov
adc
ljmp
inc
sbb
mov
sti
sahf
dec
clc
mov
dec
outsl
je
adc
cmpsl
add
lods
decb
cmpsl
mov
xlat
xchg
jb
fidivrl
push
mov
loopne
cmc
decl
inc
dec
dec
inc
mov
imul
mov
mov
shrb
cmp
xor
andl
mov
addr16
nop
mov
shr
push
push
adc
pop
xor
add
mov
add
orl
dec
mov
bound
mov
loopne
pop
loope
pop
pop
in
fwait
mov
imul
adc
cmp
mov
inc
xchg
or
sub
sub
sbb
jmp
push
testb
test
lea
repnz
faddl
mov
push
adc
jmp
dec
add
fldt
pop
mov
ds
pop
push
jecxz
xchg
push
mov
lahf
jnp
arpl
rcr
pop
jmp
std
lods
and
lret
rcl
js
ds
jg
fiaddl
adc
sbb
fisubl
pop
inc
mov
mov
sub
lret
out
aaa
icebp
stos
movsl
fwait
scas
sahf
cmp
imul
mov
addb
les
stos
pushf
lock
test
fwait
cmp
cmp
push
js
ret
cmp
popa
pop
scas
pop
adc
loop
xchg
mov
pop
mov
ds
mov
mov
sahf
cmpsb
rcrl
into
fstps
cmp
dec
fs
popa
mov
das
mov
sahf
shr
aad
ja
out
cwtl
jge
and
bound
mov
pop
push
test
pushf
mov
jmp
push
outsl
and
pop
mov
add
mov
mov
sbb
lret
or
arpl
sbb
xchg
cmp
push
sahf
adc
xchg
into
mov
call
push
mov
js
hlt
cltd
inc
shll
mov
scas
loopne
push
or
mov
mov
push
ja
nop
ja
xchg
xlat
shrb
mov
faddl
xchg
add
adc
int3
push
ret
add
pop
cwtl
adc
mov
cmc
mov
push
mov
mov
adc
fincstp
fldcw
pusha
jmp
aam
sbb
xor
lcall
cwtl
mov
sub
rolb
std
jo
sti
fincstp
and
sbb
add
je
dec
ficompl
pop
mov
add
aad
shll
and
sbb
loop
push
divb
pop
jmp
cmp
cs
push
pop
xchg
xor
xchg
sahf
mov
or
sbb
xor
xchg
mov
call
icebp
fidivs
xchg
jb
outsl
and
push
cmpsl
xor
cmpb
test
add
cmp
icebp
cmp
test
cmp
out
in
stc
loope
dec
dec
mov
cmp
ljmp
roll
mov
movsl
cmp
mov
rolb
dec
mov
fstps
jae
sbb
add
lock
sub
xor
out
into
cmp
shlb
scas
les
fidivrl
push
push
out
xor
mov
cmp
dec
mov
test
test
cmp
push
rolb
outsl
xlat
mov
repnz
xor
dec
jge
lea
xchg
and
adc
mov
pop
dec
xchg
push
xchg
inc
jle
push
js
sub
jo
jmp
jecxz
shll
aas
mov
fisubrs
jbe
sbb
inc
outsb
inc
mov
sti
pop
rcl
inc
cmp
or
fmulp
ljmp
pop
push
sbb
mov
in
stos
xlat
inc
push
dec
push
repz
das
pop
cmp
outsb
cmp
xchg
jb
test
and
ret
dec
xor
mov
mov
push
icebp
dec
add
mov
mov
xchg
adc
jns
xlat
daa
inc
aam
or
out
adcb
sbb
cs
insl
sub
dec
into
jmp
popa
xorb
lret
sub
xchg
dec
js
dec
xor
jae
rorb
call
leave
aad
rcll
loopne
cltd
mov
inc
fbld
and
sub
fcomi
repnz
or
rcr
jmp
ljmpw
sub
mov
je
add
inc
dec
aam
add
mov
mull
popf
into
lret
adc
ret
addr16
inc
mov
or
int
xchg
xor
cmp
iret
sbb
ds
call
mov
and
cmp
lods
cs
or
ret
mov
jg
repz
lret
mov
in
fwait
push
push
push
jae
outsb
cmp
push
outsb
jl
cmp
mov
xchg
lea
cwtl
loop
pop
pusha
lcall
sbb
leave
mov
jmp
inc
enter
add
jg
mov
inc
push
mov
popa
sti
mov
jl
lret
mov
xchg
push
fiaddl
iret
jp
call
xor
mov
in
push
or
mov
ja
adc
inc
scas
push
shll
imull
add
ret
hlt
mov
movsb
jge
fwait
mov
ss
pop
mov
loop
jae
mov
sahf
hlt
clc
push
outsl
xor
xorb
mov
mov
das
stc
jmp
add
repz
xor
mov
or
dec
jb
loope
gs
or
bound
xchg
stos
mov
in
imul
orb
ret
arpl
jb
mov
sub
das
xchg
mov
sarb
sub
imul
negl
test
adc
dec
iret
xchg
jle
pop
inc
adc
ret
inc
loop
aaa
dec
mov
push
and
repz
xor
bound
pusha
dec
clc
scas
clc
inc
sbb
jbe
dec
mov
pop
pop
lock
pop
lea
mov
lret
add
sub
je
inc
out
xchg
push
mov
inc
nop
jle
push
push
inc
lds
pop
gs
repnz
mov
inc
scas
nop
lahf
es
push
xor
roll
inc
sbb
mov
dec
pop
out
pop
dec
dec
les
mov
jg
or
aaa
sub
adc
inc
pop
sub
xchg
scas
xchg
adc
in
jecxz
sbb
cmpsb
or
cmp
and
xor
lahf
in
lods
in
sar
push
or
jp
fildl
int
add
jmp
pop
gs
ret
inc
mov
xchg
and
ds
mov
sub
jecxz
addb
pop
sbb
xor
fisubrl
data16
mov
cmp
icebp
scas
das
sub
lods
lods
sarb
shl
je
dec
lods
lock
or
and
icebp
in
divb
dec
push
lock
lods
dec
lea
lcall
insl
sub
ret
or
aad
jmp
ljmp
in
icebp
lcall
or
jg
sbb
fwait
ret
sub
push
add
rclb
push
mov
sub
pop
imul
mov
aas
sub
adc
repz
mov
stc
jl
mov
or
pushf
test
jns
loop
cmp
sub
stc
push
rcrl
xchg
js
out
pop
rcll
jmp
ljmp
je
cmp
loop
in
lods
test
and
test
dec
movsl
es
pop
and
lods
arpl
or
sub
call
andl
lahf
or
xchg
push
jmp
adc
loop
aad
cmpsl
divb
fistpl
enter
inc
test
xchg
or
call
sub
push
jbe
insb
lret
and
insl
insb
push
test
push
icebp
jno
iret
pop
aas
test
enter
jmp
adc
and
mov
jle
pop
push
jmp
popa
jmp
cli
pop
xchg
mov
mov
cmp
cmp
xchg
fidivrs
push
lcall
mov
mov
imul
mov
mov
out
cmp
add
fistl
mov
dec
pop
cs
int
mov
push
dec
data16
cmp
or
stc
leave
insl
add
call
push
pusha
cmp
pop
cli
push
xlat
cmp
stc
and
fisttps
push
jle
xchg
xchg
push
adc
jg,pn
data16
cmp
lret
addl
jns
fcmovnbe
jne
call
mov
mov
mov
in
pop
shll
lcall
fldcw
xor
cmp
push
jle
or
test
daa
jle
xchg
in
cmp
mov
push
and
dec
and
and
in
in
ja
jmp
int3
add
in
incl
neg
arpl
bound
sarb
movsl
cmpsb
daa
adc
mov
andl
sbb
loop
int3
sbb
xor
mov
push
loop
lcall
test
cmp
and
aad
fs
pop
sub
test
mov
movsb
test
fwait
jnp
push
mov
xchg
mov
test
mov
or
dec
lds
push
jo
repz
aam
jp
test
mov
shrb
flds
push
inc
aam
aam
pop
mov
xchg
aas
adc
jmp
push
or
loopne
or
cmp
mov
test
sbb
push
fwait
xchg
xlat
push
iret
inc
cmp
pop
in
inc
add
sbb
mov
fistpl
jl
add
mov
xchg
inc
sbb
mov
in
and
adc
dec
xor
xor
xchg
add
push
push
adc
loopne
fwait
in
jnp
fucomi
popf
xchg
add
jo
mov
fiadds
xor
ds
scas
dec
fnstsw
popf
jae
xchg
add
test
ljmp
xor
jb
lods
ljmp
enter
nop
sarl
inc
dec
lea
dec
orl
rcll
jg
inc
fistl
and
int3
add
mov
push
dec
jne
inc
inc
nop
xor
in
mov
mov
mov
cmp
cmp
sbb
enter
icebp
dec
shlb
mov
push
adc
dec
mov
fcomip
dec
adc
mov
dec
bound
sbb
nop
mov
sbb
in
push
testb
sub
mov
push
jne
pop
xchg
les
adc
and
cmp
adc
fnstsw
outsb
pusha
imul
int
xor
sub
xor
addr16
pop
jbe
jmp
fisubl
movsl
pop
repz
sbb
and
xchg
mov
pop
lock
std
inc
in
lds
mov
add
adc
ja
sbb
adc
adc
jmp
or
xchg
nop
cmp
test
setb
lret
ja
fistpll
mov
sub
pop
sub
jge
addr16
das
popa
mov
push
mov
push
out
mov
cmp
push
iret
insb
push
ds
pop
rcrb
push
ret
add
adc
xchg
inc
add
xchg
jecxz
pop
lock
mov
mov
push
repz
out
mov
lods
loopne
mov
push
adc
inc
mov
maskmovq
testl
lea
mov
mov
jmp
mov
pushf
mov
xchg
cltd
and
cmp
mov
cmc
test
ret
insb
fwait
inc
cwtl
mov
or
inc
adc
jge
cmpsl
xor
mov
dec
mov
lret
out
nopl
fcoml
loope
lahf
lahf
std
mov
ficoms
loopne
xor
shrb
std
or
inc
in
mov
test
cmp
xor
call
adc
sbb
arpl
mov
insb
inc
pop
in
in
clc
dec
mov
cmp
jo
mov
cmp
dec
pop
mov
or
dec
aas
pop
leave
pop
lods
jb
je
add
xor
sbb
outsl
mov
push
ret
insl
out
xchg
dec
mov
add
lds
mov
inc
cmp
or
dec
call
add
test
xchg
out
sti
out
iret
iret
fcompl
add
mov
mov
dec
les
mov
pop
xchg
push
sti
adc
dec
dec
inc
sub
shl
aad
jae
cmp
xlat
shrb
dec
lods
cmp
in
sub
cmp
lcall
in
out
fs
shlb
pushf
rclb
sbb
mov
loope
es
cmp
mov
sub
push
mov
ja
sub
xchg
fdivs
popf
push
cltd
xchg
cmp
stc
sbb
cmpsl
ret
inc
xor
pop
sarb
shll
insb
lea
mov
jle
add
arpl
negl
icebp
sub
dec
push
decl
mov
bound
jae
xchg
loopne
or
test
xor
push
inc
xor
xor
add
jne
sbb
mov
mov
test
pop
aad
inc
or
add
dec
push
and
imul
leave
dec
lods
add
fcmovnbe
pop
mov
enter
cmp
loop
sub
xchg
lea
std
pop
in
mov
xor
jle
push
leave
loopne
jne
jmp
push
xchg
xchg
ja
jno
dec
dec
sbb
cwtl
scas
mov
dec
jmp
sti
dec
dec
push
push
loop
popf
dec
cmp
mov
movsl
mov
push
and
pop
mov
movsb
lahf
lcall
sbb
push
out
push
aam
jg
stc
insl
cmp
inc
or
cmp
cmp
mov
push
std
sti
mov
mov
repz
add
ja
lret
cmp
js
add
adc
xor
jbe
test
ljmp
daa
adc
icebp
and
lret
adc
cwtl
bound
and
dec
or
nop
enter
pop
insl
inc
loopne
jae
std
out
add
enter
and
pop
je
fs
dec
jne
jo
idivb
add
fcmovbe
cmc
repnz
nopl
or
fisubrs
popa
mov
fs
push
jge
cwtl
cmp
push
or
sbb
jae
mov
sahf
testl
aam
je
sbb
inc
xchg
daa
subb
push
dec
and
mov
inc
add
adc
cmp
jg
inc
jno
mov
orl
pop
xchg
inc
sbb
xchg
push
inc
in
movsl
sub
shll
adc
fbstp
add
js
add
test
mov
inc
jbe
cld
in
xlat
jo
pop
xor
jp
sbb
fildll
dec
sbb
and
adc
and
mulb
jecxz
dec
les
jp
idivl
xchg
insl
mov
orl
gs
rcl
outsl
cmp
cld
mov
bound
iret
jbe
mov
cld
push
rcrl
ret
mov
in
daa
xchg
push
xor
add
in
jns
icebp
in
enter
mov
push
sbb
mov
push
lret
add
adc
mov
int
xor
inc
sbb
aad
lcall
sub
test
mov
mov
pop
mov
sub
add
aaa
push
jbe
or
stc
jp
daa
mov
jne
dec
sub
movsl
sahf
mov
lods
jno
sbbl
adc
fsubr
fnstsw
xchg
push
mov
jb
mov
lds
xchg
xorl
sbb
cmpsl
xchg
push
out
out
or
push
lods
dec
cwtl
lods
cmp
ret
shll
sub
aam
fadds
pushf
xor
jle
loope
in
repz
cmp
stos
imulb
mov
cmp
mov
icebp
lret
mov
hlt
mov
mov
jp
in
in
push
mov
bnd
lret
cmp
cltd
mov
or
or
pop
add
stc
repz
aam
cwtl
mov
or
pop
or
scas
push
push
out
mov
ficompl
jl
mov
pop
sub
sub
imul
jle
ret
cmpsl
movsl
in
xchg
loop
hlt
sbb
add
aam
jb
sbb
inc
sbb
sbb
in
xchg
sub
mov
pop
ror
fcoml
mov
sbb
pop
mov
icebp
inc
mov
mov
cmp
xlat
inc
nop
idivl
pop
js
cmpsb
or
leave
push
mov
cmp
mov
sub
mov
sub
shl
xchg
mov
lea
mov
bound
xchg
std
das
push
bound
stc
inc
arpl
outsb
xor
inc
test
xchg
ret
cmp
or
cmp
adcb
jno
movsb
fmulp
sub
pop
and
ret
arpl
mov
repnz
inc
jge
dec
sub
adc
movsb
add
jo
dec
icebp
shrb
push
stos
and
rcrb
icebp
jp
xorb
push
in
xchg
clc
sbb
mov
loop
pop
xor
movsb
mov
mov
data16
popa
xchg
jecxz
fsubrp
xor
jns
sub
leave
and
andl
ljmp
in
pop
mov
sub
sahf
adc
lea
push
add
sbbb
rorb
out
inc
cli
fcoml
and
movsl
inc
add
jb
mov
mov
push
stos
roll
jge
and
xchg
push
in
fldcw
cmp
mov
into
repnz
mov
jecxz
ret
sub
in
push
imul
xchg
in
push
fmuls
adc
cmp
and
dec
je
sub
ret
cltd
push
jecxz
mov
push
xchg
test
mov
mov
nop
cmp
adc
or
mov
into
add
out
mull
dec
cmp
and
sbb
movsb
dec
jb
and
sbb
rcr
dec
arpl
jae
or
aas
sbb
loope
loopne
imul
sub
int3
iret
mov
rorl
call
lcall
mov
add
orl
movsb
cltd
adc
or
jl
loope
mov
fcmovne
pop
add
pop
cmp
or
jge
shlb
ljmpw
dec
push
jg
push
mov
jmp
aam
add
mov
lret
pop
je
mov
aam
mov
xchg
icebp
shlb
es
sarb
cmp
sahf
sbb
mov
push
or
sbb
cltd
mov
fisubs
and
jge
and
inc
cld
rcll
inc
int
jecxz
inc
and
shlb
ss
lods
lods
sub
and
and
adc
arpl
lcall
jno
inc
out
and
out
dec
lret
xchg
cmp
fildll
mov
imul
add
pop
int3
push
or
fistpll
and
out
iret
gs
call
pop
push
ret
mov
aad
pusha
repz
pop
and
pushf
push
pop
push
or
mov
push
xlat
cmp
add
loope
icebp
mov
scas
sbb
add
in
js
mov
add
sub
jle
sub
addr16
stc
addl
test
fs
and
pop
pop
xchg
mov
xchg
rcl
xor
adc
lods
and
sbb
mov
nop
or
add
in
push
adc
xchg
mov
sarl
inc
hlt
dec
aam
loop
xlat
adc
mov
mov
imul
xchg
out
inc
repz
mov
rorb
sbb
pop
jg
push
cmpsl
cs
mov
add
mov
cs
je
xchg
mov
pop
mov
pop
mov
insb
or
lods
fcmove
xor
inc
lea
dec
mov
jle
inc
mov
mov
sar
mov
or
pop
inc
push
lods
push
xchg
out
fs
repnz
dec
and
fxam
xchg
or
shl
lods
and
dec
jg
jne
cs
in
mov
dec
inc
add
dec
addl
push
pop
fists
aad
rorl
inc
dec
xchg
inc
testb
xchg
mov
sub
insl
hlt
aas
loope
cmpsb
cmc
sub
mov
xchg
repz
jmp
ds
dec
push
ljmp
stc
popa
fnsave
cmp
mov
int3
jnp
jmp
mov
adc
sti
cmp
xchg
mov
xchg
mov
fists
scas
sub
aad
xchg
push
movsl
xchg
xchg
push
stos
xchg
test
mov
mov
nop
ljmp
inc
bound
fcomi
pop
xchg
jb
outsb
lds
cmc
cmc
lret
in
add
imul
ret
cmp
add
mov
mov
out
sbb
out
js
aad
fwait
rol
xchg
jp
inc
popf
nop
mov
mov
cmpsl
cmp
and
in
adc
push
scas
mov
test
mov
mov
xchg
lahf
nop
ds
je
insl
mov
push
jg
stc
sub
mov
popf
loope
xchg
arpl
and
pop
mov
imul
insl
std
repnz
cli
jmp
fadds
mov
dec
add
lods
call
mov
je
mov
inc
xchg
rolb
mov
inc
call
arpl
mov
pop
mov
test
sbb
int
mov
repz
jmp
lods
dec
fmulp
cmpsl
mov
sbb
shl
adc
mov
jmp
test
outsl
pop
and
int
mov
mov
pop
clc
arpl
jo
in
nop
push
dec
xor
xchg
sub
jns
imul
arpl
int
in
pop
repz
shrb
lret
cltd
sahf
pop
ljmp
mov
xor
testb
cli
xor
inc
shlb
pushf
sub
stc
mov
fwait
pusha
push
mov
insl
push
sarb
jns
std
out
mov
roll
or
pop
in
and
aas
jl
les
les
rcrw
jg
dec
sub
ss
aas
mov
xchg
xor
mov
fistl
sbb
mov
fistps
mov
out
and
mov
aam
cmp
inc
mov
lods
xor
pushaw
add
test
jmp
dec
out
out
dec
push
shll
push
adc
adc
out
dec
sub
mov
push
mov
dec
push
lret
or
cmp
sub
and
loope
mov
push
push
push
mov
xchg
mov
cmp
pop
idivl
push
cmp
adc
dec
orb
push
xor
push
mov
je
adc
or
xor
and
xor
sub
fistpll
loopne
cmp
ror
stos
roll
mov
out
daa
dec
fdivr
sbb
ljmp
into
incb
mov
xchg
pop
pushf
adc
arpl
ror
sbb
jg
into
icebp
sbb
push
adc
sub
push
push
push
sti
frstpm(287
and
mov
add
lret
aam
xchg
je
and
inc
fs
inc
inc
rcrb
js
in
sbb
or
push
outsb
sub
pop
pop
icebp
add
xor
leave
addr16
out
out
hlt
ds
mov
cwtl
inc
dec
incl
jae
xchg
push
add
and
shr
orl
inc
negl
cmp
das
inc
lea
cmp
sahf
shr
adc
aas
mov
stos
xor
sbb
jle
clc
das
imul
dec
dec
outsb
in
imul
or
dec
int
iret
fldenv
mov
mov
dec
mov
adc
inc
mov
adcb
enter
xor
mov
mov
mov
xchg
mov
push
jbe
add
adc
loope
aam
jb
add
scas
mov
hlt
sub
push
xchg
pop
mov
notb
xchg
ljmp
jp
in
mov
xor
fisttpl
jle
stos
das
lods
inc
pop
lret
cmp
cmp
push
and
mov
jbe
test
in
xor
add
mov
jo
inc
mov
subb
pop
fcomi
sub
in
xchg
mov
jb
dec
jno
rclb
mov
sub
outsb
jo
stos
andb
jno
and
loope
cwtl
test
adc
push
cld
pop
dec
push
stos
xchg
daa
mov
repz
pop
inc
sbb
iret
jnp
mov
mov
jg
jge
add
pop
aad
pop
mov
ljmp
jae
mov
pop
fistps
push
sub
not
xchg
mov
jno
std
out
mov
add
add
nop
daa
inc
pop
les
int
stos
stos
push
xchg
cmp
lea
and
xor
call
fnstenv
adc
add
xor
ljmp
jg
aas
int3
mov
sbb
call
mov
cmp
out
mov
jno
aam
aam
repz
outsl
and
push
adc
mov
sub
rolb
loopne
movsl
ljmp
push
aam
lods
xor
jecxz
fs
ljmp
xchg
je
ffreep
xchg
insb
cli
push
inc
mov
lcall
dec
jmp
mov
cmp
xchg
or
mov
dec
mov
out
test
pop
pushf
mov
push
ror
rolb
out
stc
cmpsb
addb
mov
mov
call
dec
xor
repz
dec
stos
popf
push
mov
mov
in
int
mov
adc
mov
mov
fs
aaa
inc
sbbb
dec
out
in
and
dec
pop
sbb
mov
dec
push
cmpsl
lcall
pop
inc
adc
xchg
dec
inc
iret
and
and
test
or
inc
xchg
les
ret
dec
pop
cmp
js
add
arpl
outsb
push
cmp
push
repz
mov
dec
xor
les
push
jg
xor
ds
negl
jmp
and
int
mov
dec
bound
mov
push
roll
adc
arpl
mov
sub
push
pop
lea
out
cmp
inc
mov
sub
movsb
pop
sbbb
mov
repnz
sub
push
loopne
enter
call
jl
lret
lock
aad
push
jo
xchg
movsb
pop
pop
jmp
sub
mov
mov
xchg
xchg
add
popf
outsb
aas
nop
and
adc
inc
decl
jmp
mov
xor
cltd
mov
out
cmp
nop
inc
in
das
jno
scas
ss
xchg
pushf
xchg
mov
pop
mov
daa
pop
xchg
pop
cmpsb
sub
in
add
push
test
enter
je
ljmp
xchg
in
dec
inc
or
jno
inc
inc
mov
imulb
jl
or
pop
and
sbb
dec
fmuls
jno
dec
push
filds
mov
std
aam
std
mov
mov
xchg
adc
in
jnp
mov
jno
and
push
cmpsl
inc
ds
aaa
push
and
pushf
rcl
dec
xchg
adc
ret
out
cmp
imul
xlat
imul
adc
push
push
dec
mov
loopne
cmpsl
orb
loop
fwait
inc
sub
lret
stc
insl
lods
pop
ds
lds
lcall
push
sbb
std
mov
inc
dec
pop
pop
bound
xor
push
ds
fists
pop
jnp
les
rolb
cmp
sub
add
sahf
sbbl
stos
sub
sub
xchg
fidivs
mov
push
jmp
add
sbb
inc
dec
mov
and
mov
scas
mov
cmp
lret
repnz
js
ss
jno
push
shll
pop
in
fwait
rorb
cmpsb
clc
scas
push
mov
push
adc
cmp
sub
jbe
hlt
dec
push
mov
cmpsb
mulb
add
popf
cwtl
inc
xchg
orb
dec
add
mov
lret
out
sbb
and
and
lea
adcb
call
hlt
fidivrl
mov
cmp
mov
les
pop
sbb
inc
adc
test
dec
pushf
ss
inc
rcrl
sbb
mov
dec
dec
push
jge
push
or
sbbb
fwait
js
inc
mov
pop
loope
hlt
ss
or
push
inc
sub
cmpsb
shll
lahf
jae
sbb
xor
test
shrl
and
dec
mov
push
cmp
cmp
adc
fcompl
fs
sbb
in
mov
sub
insl
pusha
stos
hlt
lea
or
leave
pop
jle
jno
sub
mov
stos
mov
hlt
cmpb
jmp
xor
int3
inc
or
movsl
dec
dec
mov
imul
pop
rorl
dec
jmp
sarb
sbb
mov
out
in
loope
in
cli
or
xchg
xchg
xor
and
pushf
mov
out
test
xor
xchg
lods
in
ret
mov
stos
lret
mov
pop
or
mov
rorb
add
mov
dec
mov
dec
jecxz
cltd
pop
jge
mov
andl
pop
xchg
lds
rcrl
push
pop
add
int
sub
sub
mov
jge
sarl
rolb
mov
inc
addr16
mov
sub
sbb
clc
std
fsubrp
or
mov
pop
dec
repz
add
orb
mov
pop
lahf
mov
pop
lahf
hlt
push
cmp
pop
or
popa
and
pop
adc
mov
lods
push
loop
iret
mov
aaa
push
pop
xchg
cmpl
add
dec
xor
cli
xor
daa
mov
mov
ret
mov
scas
pop
sub
mov
sbb
xchg
cmp
ret
aaa
add
int3
popf
push
add
dec
std
jns
dec
js
test
mov
and
ret
xor
pop
mov
std
leave
stc
out
xor
cmp
and
loop
pop
in
cmp
push
nop
mov
add
add
out
mov
in
into
pop
loop
scas
and
repnz
mov
adc
push
cmp
jno
or
aam
jb
and
bound
cmp
jmp
add
outsb
dec
adc
rorl
cmpsb
and
test
call
cmc
push
adc
xchg
stos
mov
pop
repz
outsb
fadds
loopne
xchg
jmp
xor
rorl
jb
outsb
xor
dec
pusha
or
cmp
mov
fildl
test
in
sar
stc
add
pop
enter
push
cmp
fidivrs
push
iret
add
mov
mov
sahf
push
int3
adc
cmp
mov
mov
aad
outsb
cmp
xchg
cs
xchg
loope
test
push
lea
mov
lods
rcrb
int
std
iret
enter
jae
adc
cltd
in
mov
loopne
and
popf
pause
mov
jge
fwait
scas
test
mov
pop
and
rcr
dec
mov
push
sbb
inc
outsb
lods
repz
xor
pop
aam
scas
mul
xor
xor
xor
inc
into
xchg
popa
ficoms
push
imulb
pop
lds
rorb
cs
sbb
sahf
shr
pushf
add
mov
lahf
sbb
daa
adc
sbb
pop
stos
dec
push
jbe
sub
dec
jmp
mov
mov
stos
jp
daa
inc
dec
les
adc
pushf
mov
xchg
sti
repz
push
mov
push
cmp
lds
mov
mov
xlat
fwait
repnz
roll
jbe
push
std
sbb
and
dec
cs
mov
int
mov
mov
or
or
cltd
adc
mov
pop
test
push
filds
mov
call
push
into
pop
dec
mov
pushf
pusha
or
cwtl
xchg
mov
in
mov
push
and
enter
repz
and
jns
add
aas
dec
int
pop
mov
out
js
movsl
test
outsl
sub
or
inc
cltd
or
and
sbb
jo
shrb
push
jg
movsl
and
sub
js
mov
or
inc
repz
sarl
xor
mov
adc
dec
sbb
insl
jb
push
pop
stos
lods
mov
sub
jle
dec
jg
jb
cmpsl
sar
cmpsb
jnp
fadds
sub
mov
cmp
cltd
ljmp
jg
lcall
enter
les
dec
outsb
out
jmp
or
jmp
movsl
mov
sbb
in
addb
pop
out
insl
mov
adc
mov
daa
push
rclb
xor
shrb
mov
inc
stc
addr16
push
dec
or
js
mov
out
es
mov
lods
push
scas
imul
jg
sbb
popa
mov
out
fisttpll
div
in
sub
imul
or
cmp
inc
and
pop
dec
add
sti
mov
jb
jno
daa
dec
lret
je
add
mov
aas
in
jecxz
and
iret
or
insb
cmpsl
pop
jmp
ljmp
jmp
sarb
leave
adc
js
jge
lds
inc
inc
pop
clc
push
push
shll
mov
pop
push
out
push
push
mov
out
xlat
push
ljmp
add
mov
and
or
lret
lods
sbb
mov
lret
adc
dec
nop
jecxz
enter
jns
mov
inc
sbb
lahf
cmp
sbbl
push
out
sub
push
adc
push
xchg
dec
adc
mov
inc
filds
xchg
adc
or
call
xchg
divl
sbb
cmp
imul
jbe
xor
push
add
repz
in
fisubs
mov
push
movl
fs
push
das
push
inc
pop
cmp
out
orl
dec
cs
les
dec
bnd
push
cmp
push
aaa
push
aam
sarb
sbb
adcl
dec
xor
pop
cmp
cltd
es
shl
add
test
xchg
inc
es
loop
ss
movsl
sti
stos
push
xor
and
adc
jo
bnd
imul
jp
andl
dec
enter
mov
pusha
shr
rol
cmp
mov
sbb
loope
cmp
inc
mov
jo
xchg
pop
mov
or
in
adc
test
dec
jns
adc
and
cmp
adc
mov
mov
cmpsl
pop
icebp
push
je
sbb
sbb
enter
inc
iret
fcmovb
out
xchg
mov
imul
pop
xchg
mov
fidivrs
ret
in
lds
add
movsl
sbb
fisubs
dec
push
repz
push
scas
aam
fwait
add
popf
nop
mov
mov
sbb
ds
lret
hlt
gs
sysret
in
xor
sbb
sbb
mov
int
push
out
loope
lods
hlt
aad
cld
jne
inc
cmpsb
hlt
std
xor
push
jbe
out
pop
ret
jo
loope
inc
scas
les
fdivl
test
test
or
lret
cmpsb
push
lea
lds
and
cs
dec
int3
jb
and
add
ljmp
fdivrp
xchg
out
dec
ret
cld
mov
mov
jbe
aaa
movsl
data16
dec
shll
pop
lds
sub
mov
dec
dec
scas
pop
sar
shrb
int3
call
inc
lret
push
sub
push
out
sub
pop
nop
adc
inc
call
arpl
xchg
sub
sub
pop
pop
jo
push
jg
aam
popf
add
pop
jle
xchg
ljmp
xor
popf
ret
jb
lds
push
dec
sahf
aas
lret
jae
in
iret
clc
cmp
es
mov
imul
mov
dec
cli
jmp
aam
sbb
les
or
jmp
jae
shll
mov
out
push
mull
cmp
add
jb
sldt
add
add
pusha
or
je
call
pop
add
cmpb
jne
popa
jmp
fldt
cmp
add
pop
and
xor
mov
add
cmp
jne
movzwl
add
mov
add
cmp
je
sub
jmp
mov
mov
add
mov
add
jmp
mov
mov
push
push
call
call
pop
sub
mov
sub
mov
movb
popa
jmp
insb
sbb
adc
test
pusha
xor
mov
shr
je
pop
cs
or
sbb
adc
test
pusha
xor
mov
shr
je
pop
cs
or
sbb
adc
test
pusha
xor
mov
shr
je
pop
cs
or
sbb
and
jl
sub
mov
mov
inc
mov
inc
mov
add
jne
mov
inc
adc
jae
add
jne
mov
inc
adc
jae
xor
add
jne
mov
inc
adc
jae
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
adc
je
push
sub
mov
pop
mov
inc
mov
jmp
mov
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
jb
sub
mov
jne
mov
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
jb
push
mov
sub
rep
pop
jmp
dec
shl
mov
inc
mov
mov
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
jb
cmp
jae
cmp
jb
inc
push
mov
sub
rep
pop
jmp
cmp
ja
add
push
mov
sub
rep
pop
jmp
mov
inc
xor
shr
je
adc
mov
push
mov
sub
rep
pop
mov
jmp
sub
mov
popa
ret
jmp
jmp
add
mov
push
push
jno
or
xchg
ja
ret
adc
test
jmp
add
mov
adc
xlat
pop
inc
cwtl
ret
pushf
add
jl
fs
pop
inc
xchg
ret
xor
std
fidivs
adc
jae
jb
jo
fs
push
stc
sti
jg
hlt
inc
iret
and
dec
js
and
cmp
xchg
jg
loopne
int
push
fnstenv
shl
sbb
mov
aaa
lods
aad
and
add
lcall
push
push
popa
ret
inc
mov
nop
aam
call
in
add
add
mov
mov
mov
add
add
call
dec
std
ret
inc
and
mov
movsl
das
add
call
lcall
or
aad
jmp
cli
add
in
add
pop
out
pop
or
mov
movl
inc
mov
or
je
iret
and
in
xlat
xchg
adc
or
inc
jmp
fsubrl
es
add
inc
add
dec
enter
inc
orb
sbb
rol
mov
adc
mov
push
jecxz
test
jne
mov
mov
mov
rcl
stc
ja
pusha
scas
ret
inc
inc
movsb
dec
mov
stc
inc
rcll
mov
aam
inc
cmp
pop
pop
ja
sub
addr16
jmp
adc
jne
sbb
push
sarb
scas
sbb
mov
pop
int3
cmpsb
dec
sbb
add
xor
add
divb
jo
int3
daa
mov
sbb
push
test
cmpsb
fdivrs
push
call
fcoms
ret
push
testb
add
add
pcmpeqw
mov
rol
xor
and
rorl
roll
cli
add
push
or
mov
add
mov
cmp
je
fstpl
add
adc
movb
aaa
jg,pt
aaa
sub
mov
lret
push
call
movsl
arpl
jmp
jp
fistpll
and
inc
out
lea
add
dec
cmpl
add
out
add
js
hlt
lret
cmp
pop
je
test
jge
mov
popa
shlb
add
out
mov
jl
mov
andb
fimull
or
sub
fadds
pop
test
je
mov
xor
dec
cmp
jle
sub
push
pop
pop
pop
pop
mov
pop
mov
push
add
jne
pushf
adc
and
jmp
cmpb
je
test
xor
add
jbe
add
dec
adc
inc
popl
pop
insl
add
jge
fsubs
clc
int
loope
inc
int3
jge
jae
fidivs
pop
or
dec
cld
inc
rep
jmp
lret
pop
cltd
insl
adc
or
dec
shll
or
push
shl
add
pop
sub
fildl
mov
cmp
arpl
or
ja
shr
repnz
and
or
or
jmp
ret
or
adc
or
dec
and
adc
pop
lock
lea
jb
or
shlb
stos
and
clc
out
lea
adc
cmpb
mov
stos
cmp
popa
shll
mov
decb
inc
dec
jne
mov
mov
icebp
sub
add
mov
xchg
add
push
shll
cs
es
jmp
adc
sti
mov
out
addr16
fistl
out
mov
mov
ret
imul
jmp
pusha
les
mov
add
sbb
dec
pop
add
sub
jge
fwait
fwait
mov
lock
pop
les
lods
mov
enter
push
movsb
mov
jo
mov
dec
mov
movups
rorl
jne
or
mov
fwait
in
in
sub
lds
test
js
adc
sub
jne
daa
adc
repz
into
or
loopne
in
or
sbb
lcall
int3
lcall
sub
xor
add
icebp
shlb
or
add
in
sete
jle
add
test
xor
inc
mov
push
jmp
add
jg
mov
and
jmp
les
dec
and
adc
cmpsl
xor
test
adc
bound
sub
aad
sbbl
ljmp
inc
mov
pop
jg
hlt
pop
mov
xor
loope
and
xchg
mov
dec
xor
pop
or
or
inc
testl
mov
outsb
add
pusha
mov
outsl
jno
jns
mov
adc
cli
setb
and
add
stc
test
rorb
mov
les
add
push
jg
enter
add
pop
addl
adc
clc
out
hlt
add
pop
gs
fwait
imul
sbb
addb
pop
and
fsubrl
pop
mov
add
icebp
or
negl
imul
fadds
into
dec
loopne
lds
imul
jmp
cmp
jae
bound
icebp
leave
cmp
push
xchg
or
inc
out
pop
das
hlt
pop
fsubl
mov
push
adcl
clc
dec
cmp
les
fidivs
test
pop
rolb
adc
notb
mov
push
fists
clc
sbb
js
pop
jle
lcall
xchg
iret
int
ret
sbb
add
push
addl
jl
je
rcrb
cmpsb
shl
add
xchg
shl
sbb
or
sbb
push
stos
popf
inc
push
roll
movsb
dec
leave
xchg
sbb
cwtl
push
mov
inc
push
in
push
or
inc
inc
aaa
flds
jmp
mov
jb
out
add
lcall
add
repz
pop
notl
fstpt
add
mov
xchg
scas
push
xor
in
test
and
inc
xor
dec
add
adc
push
fwait
jmp
push
popf
cmpb
jb
push
or
popa
mov
decb
xchg
mov
jle
aam
jle
mov
shl
mov
sbb
pop
or
mov
ds
fstps
insl
rdmsr
lea
shr
pop
jb
nop
or
push
movl
js
xchg
fcmovnb
clc
test
jo
add
in
iret
mov
int3
out
push
daa
add
mov
add
mov
sbb
push
mov
inc
ds
and
int3
add
inc
adc
lcall
call
stc
mov
lret
movsl
dec
and
divb
mov
inc
xchg
icebp
jbe
pop
push
repnz
orb
sahf
sbb
xchg
sbb
jnp
cwtl
loopne
pop
movb
mov
dec
jl
aam
add
les
xor
popa
aaa
add
das
repnz
mov
mov
testl
inc
add
cld
test
inc
mov
xchg
pop
dec
addb
int3
inc
xor
sbb
dec
scas
xlat
xor
jnp
rcll
or
push
pop
pop
cmovbe
jae
roll
inc
cmp
xchg
faddl
xchg
or
cwtl
aam
add
loopw
loopne
clc
jg
sbb
sbb
and
lret
inc
stos
xlat
lret
fiaddl
push
mov
imul
sbb
mov
sub
push
je
push
je
jne
add
inc
dec
pushf
js
pop
scas
insl
out
adc
mov
push
mov
sti
push
cmovb
data16
out
push
cli
push
pop
push
movsb
test
sub
or
es
mov
mov
adc
push
out
and
or
sbb
mov
push
inc
push
pop
jb
ds
inc
mov
data16
cmp
adc
adc
arpl
popa
inc
xor
pop
xor
lods
cmp
cmpsl
mov
push
ss
mov
sub
scas
jne
lahf
pop
clc
gs
imul
push
xchg
fstl
adc
mov
cmp
xchg
xchg
sbb
pop
cmp
xlat
cltd
push
adc
inc
nop
cld
or
pop
dec
adc
jae
arpl
cmp
rcll
out
or
sbb
lret
sbb
call
pop
mov
lock
push
jnp
dec
lret
or
cltd
addl
arpl
mov
inc
mov
or
pop
jbe
inc
filds
in
loope
addb
mov
pop
add
jp
or
mov
idivl
pushf
addl
or
testl
mov
adc
xchg
inc
pop
inc
sti
test
mov
pop
add
mov
add
sub
sahf
lea
pcmpeqb
inc
std
pusha
test
lods
addl
adc
add
mov
enter
add
icebp
sub
aas
cmp
ucomiss
fildll
pop
cli
mov
pop
xchg
shrb
adcl
mov
adc
pop
loopne
push
mov
xchg
sbb
dec
jmp
movsl
add
xchg
sbb
cli
in
fdivr
inc
pop
xchg
je
loop
outsl
push
add
in
andb
adc
and
push
pop
pop
repz
addl
push
sbb
ja
cmp
mov
or
pusha
and
sbb
dec
xchg
xlat
mov
dec
and
loop
test
out
ja
andb
mov
and
add
adc
cmp
andl
scas
sbb
add
add
pop
pop
aam
add
loopne
insb
add
nop
or
shlb
lock
ret
stos
jne
setg
stos
je
push
mov
xchg
fisttps
enter
push
inc
nop
movsb
add
xchg
inc
test
or
sbb
fdivs
je
pop
pop
out
std
xor
jmp
cmp
push
repnz
dec
xchg
aas
outsl
inc
mov
call
aaa
dec
fldl
jge
adc
cmc
push
stos
sub
adc
xchg
ja
mov
mov
jnp
cltd
lods
mov
ret
add
xor
add
in
dec
jno
cmpsl
xchg
add
push
mov
xor
aad
fidivrs
jp
andl
pop
dec
pushf
mov
mov
mov
scas
lods
fmuls
stos
ds
stc
add
cmp
push
std
add
pop
in
xchg
xor
sub
int3
sub
sbb
xor
jno
add
add
rcll
and
rcrl
mov
sub
popf
ds
lret
dec
xchg
jge
into
add
adcb
mov
icebp
mov
bound
mov
aad
inc
push
and
call
in
mov
bound
add
fs
add
cwtl
and
dec
pop
xchg
mov
sbb
mov
cmc
sub
fildl
loopne
mov
inc
push
inc
jl
addl
mov
mov
bound
pusha
rclb
mov
aam
mov
in
lcall
jl
sbb
repz
and
inc
push
lahf
push
push
in
orb
sbb
xor
cli
inc
push
clc
cmpsl
pusha
jne
pop
pop
sub
nop
mov
jb
push
cmp
dec
ja
mov
sbb
outsb
and
mov
sbb
push
push
out
mov
add
arpl
mov
fsubs
push
add
stos
add
jbe
push
cmp
fistps
ret
pop
xor
cmp
cmp
push
mov
mov
rorl
sbbl
jmp
inc
aam
mov
dec
bndldx
push
mov
sbb
cmp
fadds
sbb
push
pop
test
sbb
je
adc
add
outsl
cltd
into
sbb
xchg
or
add
test
pcmpgtw
mov
mov
push
and
sub
test
adc
push
sbb
fcmovnu
add
mov
sub
or
sbb
mov
fcompl
orb
add
add
mov
sbb
adc
rclb
lds
inc
dec
xorb
sbb
adc
pushf
push
and
shll
inc
push
mov
xor
mov
push
adc
lock
pop
repz
arpl
sbb
fdiv
notb
xchg
orl
mov
push
mov
jo
cmp
test
out
cwtl
addl
sbb
xor
inc
andb
and
push
cld
sbb
xchg
inc
cmp
sub
mov
xor
cmp
out
sub
jecxz
sbb
mov
adc
mov
sub
test
fwait
xor
pop
or
icebp
out
scas
and
push
push
loopne
push
push
xchg
xchg
xor
cltd
ret
sub
sbb
test
mov
sbb
and
add
in
xor
push
fistpll
or
jo
mov
lock
cmpsb
xchg
push
arpl
int
pushf
push
cwtl
cwtl
out
jg
xor
mov
add
push
pusha
push
rol
mov
and
xchg
or
xchg
adc
add
addb
int3
and
sub
and
jp
mov
cmpsb
lahf
jp
mov
add
test
push
fndisi(8087
xchg
sub
int3
enter
mov
sbb
popa
orl
scas
push
enter
or
outsb
rcll
pop
sub
dec
cld
push
xchg
adcb
add
mulps
cmp
mov
add
inc
repnz
xor
inc
mov
sbbb
sub
mov
adc
ret
xchg
pop
inc
sbb
sbb
xor
nop
sub
sub
jo
sub
insl
js
mov
pop
sub
xor
jns
or
rorb
out
mov
or
sub
mov
mov
daa
ds
lcall
sahf
pop
and
mov
inc
adc
test
pop
or
push
test
add
cltd
ret
adcb
push
mov
stos
and
push
inc
mov
or
add
and
mov
xchg
adc
or
fisttpll
or
sbb
add
mov
pop
jg
stc
mov
add
mov
cmpb
loope
faddl
xchg
add
leave
ss
sub
add
enter
out
xlat
mov
add
filds
icebp
fcompl
or
inc
out
lret
cmpb
sub
movsl
add
add
rcr
je
mov
rcrb
lret
aam
sub
add
xchg
test
movsb
aas
add
push
clc
adc
adc
fadds
stc
and
push
cmc
mov
mov
fisttpl
dec
adc
cmp
add
test
or
flds
stos
dec
pop
outsl
mov
mov
andb
mov
cmp
lock
and
push
hlt
mov
lods
sbbb
add
movsb
dec
jne
dec
push
add
call
adc
iret
scas
pop
ss
xorb
out
sub
lcall
mov
ror
or
dec
loop
add
movsb
mov
movsl
jo
add
push
sub
sub
stc
mov
and
int
pop
or
adc
sub
aam
xchg
add
mov
add
or
cwtl
push
cmc
addb
push
movsl
dec
inc
das
inc
adc
inc
xchg
pop
mov
pop
stc
push
enter
sbb
add
popa
mov
out
add
sbb
mov
in
add
mov
push
inc
push
fisttpll
mov
or
in
and
nop
fmuls
add
or
in
mov
jle
add
fsubl
mov
bnd
push
insb
in
testl
int3
push
inc
adc
cltd
in
inc
fnstsw
jno
sub
sbb
adc
mov
xchg
les
scas
fmull
in
xchg
push
push
aaa
mov
pop
movsl
xor
inc
inc
add
jns
xor
xchg
rcrb
mov
jbe
lods
adc
negl
in
inc
enter
test
add
mov
mov
mov
add
les
andl
xchg
jae
bound
xchg
test
or
clc
pop
and
sbbl
leave
xor
lahf
inc
inc
mov
ret
gs
js
lea
icebp
imul
or
lock
jo
push
sbb
in
mov
insl
adc
xchg
push
arpl
enter
mov
loop
out
pop
fs
cmpsb
push
nop
pushf
mov
add
mov
or
daa
and
sbb
inc
sbb
xchg
ja
repnz
mov
xor
jo
addb
mov
push
nop
jp
add
jns
sbb
add
xchg
or
je
pushf
decl
scas
jge
lcall
dec
popl
xchg
push
pop
test
xorl
or
and
icebp
mov
nop
int3
out
or
es
and
inc
dec
lods
xchg
popa
sub
push
add
mov
arpl
xor
or
cmp
in
mov
add
jg
add
mov
adc
enter
mov
addb
xor
popf
movsl
push
pop
lea
lds
jb
inc
mov
push
test
and
push
add
iret
jmp
pop
sub
mov
sbbb
inc
push
xchg
jg
mov
mov
scas
loopne
mov
test
cmpsb
add
cmp
js
fucomp
xor
dec
xor
xor
sub
aad
out
aam
fstpt
xor
and
pusha
xchg
push
xorb
dec
push
and
pop
jno
sti
mov
and
and
dec
les
js
fisttpll
lods
cmpl
mov
adc
mov
push
mov
push
sbb
and
add
mov
add
mov
xchg
movsb
add
dec
cmp
add
test
jge
xchg
adc
cld
push
mov
out
or
aas
pushf
enter
lods
adc
rcrb
add
dec
xor
mov
andb
fwait
push
xor
and
xchg
adc
xchg
pusha
sub
dec
and
mov
xchg
je
cmp
outsl
and
dec
adcl
jne
push
adc
add
add
or
adc
mov
lret
pop
sbb
adcl
sub
cmpsb
add
dec
inc
add
pop
aam
xor
fisubl
arpl
mov
loopne
ss
xchg
aaa
cmp
pusha
mov
or
dec
aad
pop
push
aam
inc
add
shrl
mov
inc
sub
dec
test
xchg
or
adc
faddl
mov
loopne
cmpsb
xor
jle
xor
out
xor
adc
addr16
sbb
ja
xor
and
pop
cltd
pop
cmp
movsl
dec
mov
mov
mov
add
adc
push
add
out
jg
mov
inc
jae
pop
mov
movsb
in
mov
repnz
push
add
jne
mov
mov
sbb
fisubs
stos
cmpl
adc
subl
cmpsl
cmp
loopne
ret
cmp
jo
adcl
xchg
clc
js
dec
loope
addb
test
and
aas
clc
or
push
rolb
push
out
inc
inc
add
movb
xchg
adc
rorb
in
jge
stos
xchg
das
ret
test
fisttps
data16
aaa
sbb
pop
jbe
orb
and
mov
mov
cmp
call
addr16
or
nop
cmp
xchg
movsb
adc
pop
stc
and
dec
jae
or
cmc
outsl
xor
xor
es
add
sbb
pop
orb
jle
adc
pop
inc
jecxz
cmpl
fs
out
pusha
xchg
ljmp
inc
add
fisttpll
pop
sbb
ljmp
scas
cwtl
mov
cli
add
fcoml
or
cmp
push
bnd
and
xor
cli
mov
lahf
and
shlb
or
clc
shlb
mov
aas
inc
shrb
bound
lock
adc
jp
sahf
cmpl
jb
ret
enter
xlat
mov
mov
sub
add
fwait
aas
es
rcll
fs
mov
pop
jecxz
cmp
lock
xchg
pop
jg
inc
inc
and
add
pop
dec
fucomip
dec
xchg
add
mov
xchg
add
addb
pusha
dec
sbbb
mov
pop
jge
es
sub
mov
pop
movsb
push
sub
sub
adcb
rol
mov
mov
and
sub
add
fdivrl
pop
or
sub
les
add
arpl
cmpsl
test
cli
jl
push
mov
rcl
push
xchg
sbb
out
xchg
and
push
adc
andl
xchg
push
sbb
pusha
lock
popa
mov
mov
fidivs
mov
shlb
ltr
sub
adc
push
sahf
inc
pusha
popa
inc
shlb
cld
push
test
push
add
cltd
xorl
ret
das
in
lcall
add
insl
xchg
sbb
test
cmpl
jb
cld
mov
and
dec
shlb
pushf
or
sahf
jo
test
ret
rcrb
dec
pop
stc
or
mov
and
fs
and
mov
xor
inc
mov
or
mov
faddl
pusha
push
out
jge
pop
add
pushf
movsl
and
sub
rorb
add
outsl
sbb
aaa
push
xchg
lea
xor
jecxz
jno
and
pop
test
cmpl
and
pushf
sbb
jno
div
add
cmp
mov
add
sbb
xchg
mov
push
pop
mov
adc
fistl
addr16
aaa
or
pop
mov
adc
xor
push
adc
rcl
aaa
sbb
sub
inc
dec
sarl
pop
das
insb
and
add
fcoms
aaa
sti
mov
add
test
dec
push
pushf
clc
push
in
push
push
pop
in
add
icebp
mov
pop
adc
movsb
daa
fs
sub
sub
fwait
aaa
out
pop
mov
pop
enter
dec
test
lds
mov
aas
pop
test
imul
mov
sbb
ss
or
nop
hlt
test
popf
add
push
lret
ret
pop
or
loop
mov
sub
inc
add
mov
out
and
dec
push
sbb
inc
popw
sub
push
add
inc
add
arpl
in
add
and
lea
test
ljmp
adc
cmpsl
dec
hlt
pop
add
sub
popa
hlt
mov
pop
cld
xorl
ja
std
mov
push
mov
rcrb
jge
inc
or
sbb
mov
or
add
xchg
lds
inc
add
mov
jecxz
push
lcall
nop
add
call
cwtl
add
sbb
mov
add
dec
popa
dec
frstor
push
add
or
aad
push
push
psrld
ret
pusha
ret
inc
push
mov
add
sub
adc
sbb
in
mov
outsb
mov
pusha
xor
mov
hlt
ds
mov
add
das
and
sbb
fld
popf
push
push
jne
push
pushf
popl
or
inc
lods
dec
cmp
pop
dec
jns
arpl
mov
mov
orl
or
dec
sub
xchg
int
shlb
movsb
cld
adc
jecxz
pusha
sbb
sbb
test
push
mov
data16
sbb
dec
jl
repnz
lock
jb
cmpsl
xchg
lcall
adc
xchg
dec
loope
cwtl
push
fnstsw
adc
or
cli
sub
rorl
dec
lea
cmp
adcb
add
dec
mov
mov
cmpsb
add
shufps
add
xorl
add
mov
jb
repnz
xor
adc
sbbb
or
push
mov
adc
lea
inc
mov
xor
adc
mov
inc
dec
les
jo
xchg
or
mov
jo
jbe
add
pusha
ja
pushf
sbb
xlat
cmp
sub
test
or
test
sbbb
mov
das
test
orl
add
inc
sbbl
in
int3
inc
pop
pusha
push
dec
data16
jle
and
adc
ret
adc
xchg
jno
and
icebp
mov
mov
adc
sbb
sub
add
cmp
lahf
push
sub
test
adc
pushf
xchg
test
bound
or
mov
jmp
mov
aam
insb
sub
add
out
fiadds
mov
icebp
or
clc
stos
loopne
push
ret
rorb
cld
jne
xor
hlt
xchg
pop
pusha
ficomps
xor
adc
xchg
stos
popa
sub
loopne
mov
inc
addr16
andl
dec
call
add
pop
jo
cltd
sub
lock
pusha
jbe
lods
jmp
lcall
cmpsl
and
mov
loopne,pt
sbb
adc
sbbb
jle
addb
nop
clc
adc
in
popf
cltd
andl
xchg
pop
and
jecxz
pop
mov
and
stos
add
repz
pop
popa
fistl
xchg
or
xor
roll
shrb
push
xchg
ljmp
push
or
fidivl
ss
bound
inc
mov
dec
jae
sub
fdivs
out
mov
movsb
leave
inc
push
jl
or
xor
fwait
mov
andb
mov
test
jecxz
inc
push
sub
stos
rolb
dec
jno
lcall
add
xor
mov
add
and
xchg
or
hlt
mov
cmp
sub
add
cmp
add
pop
cwtl
outsl
addr16
mov
add
sbb
inc
aas
jg
mov
and
shrl
adc
call
cli
mov
cmp
inc
adc
pop
mov
xchg
or
outsl
adc
subl
add
outsb
add
dec
fwait
in
movsl
push
in
and
jo
fs
fldcw
into
sbb
or
clc
add
andl
cmp
dec
xor
xchg
mov
xor
aaa
add
sub
movsb
add
sbb
push
mov
jo
xchg
test
test
pushf
xchg
sbb
add
mov
inc
add
cmp
xor
push
out
sub
sub
out
movsl
inc
hlt
dec
inc
insb
cmp
jb
add
and
push
mov
loopne
or
and
orb
sbb
add
cwtl
xlat
es
dec
inc
cmp
iret
xchg
daa
out
or
pop
and
xchg
inc
mov
test
pop
popa
push
pusha
sub
adc
and
jle
push
fadds
scas
data16
pop
adc
and
andb
adc
imul
sbb
arpl
sbb
ja
cmp
std
cmp
push
js
je
ds
push
mov
lea
das
inc
movsb
dec
and
adc
inc
cmp
outsb
test
mov
aam
and
dec
push
adcb
sbb
and
cmp
loop
or
lret
add
jmp
sbb
mov
pusha
ret
dec
pop
iret
orb
leave
cmp
and
cmp
cmp
mov
inc
mov
sub
or
and
cmp
xor
inc
mov
jb
cmp
lods
push
push
fmull
cmpb
push
add
push
mov
or
sbb
push
or
test
jno
mov
test
xor
mov
push
add
cltd
xchg
add
sub
fmull
divb
je
push
xor
pop
xchg
mov
and
adc
ds
and
add
adc
dec
fcomip
push
gs
rcrb
add
movsb
pusha
jmp
jmp
inc
adc
push
xchg
div
inc
mov
mov
negl
int
bound
add
jl
cwtl
adc
je
sub
hlt
dec
stos
xor
push
and
xor
mov
stos
jecxz
test
push
or
adcb
add
stos
sbb
mov
dec
dec
in
sti
into
loop
js
add
cmp
popf
add
lock
int3
dec
in
sub
shrb
pop
dec
push
ja
fdivl
call
xchg
adc
push
add
std
test
adc
cmc
test
je
je
and
mov
pop
mov
mov
mov
xchg
rolb
pop
push
adc
loop
jl
mov
inc
inc
mov
ret
es
adc
lds
dec
adc
and
or
mov
mov
int3
js
mov
xchg
cltd
orl
or
and
xchg
sub
nop
xor
pop
dec
je
orl
inc
je
cmpsl
daa
gs
add
cmc
cwtl
fldcw
add
add
jl
loope
stos
pop
pop
fmuls
data16
incl
mov
add
add
xchg
push
mov
rcrb
pusha
cli
mov
scas
push
les
inc
daa
xchg
dec
and
sarl
sbb
pop
arpl
out
sub
jno
jbe
stos
int
jge
inc
pushf
popa
jo
pop
push
sub
shlb
int
pop
cltd
lods
jo
or
mov
pusha
add
arpl
xor
sub
sbb
cmpl
call
push
inc
fistl
inc
das
mov
mov
pusha
rcr
sbb
pop
aas
sub
and
or
add
add
dec
movl
cwtl
js
jb
mov
lods
adc
xchg
clc
mov
sbb
je
lods
add
fmuls
lock
inc
fadds
cmp
cmc
leave
push
out
xchg
adc
imulb
ror
xorl
jo
inc
jle
push
mov
loop
leave
dec
or
fidivs
adc
shl
inc
aam
movsb
fmull
mov
pusha
pop
cli
stos
cmp
add
test
xorb
lock
cmp
fstpt
ljmp
std
pushf
popl
add
rcll
xadd
push
es
cld
in
addl
out
call
xor
add
fnstsw
push
pushf
and
andb
mov
add
movsl
cltd
mov
mov
int
rcl
mov
mov
jecxz
test
mov
cmp
arpl
xor
pop
sbb
outsb
int
out
inc
add
je
ja
pop
and
jl
scas
dec
add
push
jmp
push
mov
and
adc
fldl
xor
mov
xlat
mov
mov
int
out
add
mov
adc
jecxz
imul
adc
push
sbb
cmp
jge
stos
dec
mov
add
push
repnz
jbe
pusha
mov
pop
ret
mov
push
cmp
aad
nop
enter
add
push
xchg
nop
test
sub
add
outsb
fistl
pusha
or
and
xchg
fadds
ss
push
hlt
movb
movsb
jne
add
mov
xchg
pop
add
dec
xlat
loope
sbb
cmp
addb
jb
in
or
mov
add
mov
test
pop
push
sub
add
lods
sub
adc
das
mov
popf
test
mov
and
lcall
xchg
lods
and
mov
ljmp
std
mov
je
imul
in
pop
mov
and
shll
ret
rorl
xorb
mov
push
or
daa
sahf
jns
pop
dec
cmp
fnstenv
and
pusha
bound
or
mov
dec
daa
add
sbb
mov
push
dec
andb
mov
add
shl
test
add
je
lods
xsha256
cmpsb
nop
sub
sbb
or
or
sbbl
data16
jecxz
jns
hlt
jle
test
iret
sub
sbb
stos
xchg
bound
adc
ret
lcall
ss
lds
pop
subl
adc
loopne
pop
clc
dec
test
rorb
jg
shll
add
sbbl
aad
jo
test
or
mov
push
pop
xchg
xchg
je
decb
icebp
inc
sbb
lock
leave
insl
test
nop
inc
xor
ficoms
ljmp
nop
ret
jle
shlb
xchg
pushw
jecxz
test
sub
push
nop
jbe
aas
add
pop
ss
repnz
shrl
xchg
adc
dec
imul
push
mov
dec
insl
lea
test
int3
inc
pop
dec
out
test
clc
push
icebp
hlt
andb
mov
out
pop
jb
lret
pop
sti
jo
decb
sarl
mov
or
test
or
push
lock
mulb
cmp
xchg
mov
or
decb
inc
or
and
rcrb
pop
cmp
cmp
or
outsb
test
loopne
or
sbb
loop
xor
inc
add
sbb
mov
xchg
jge
dec
xchg
in
bound
fdivrl
ljmp
rorb
inc
ret
bound
adc
js
adc
sub
adc
mov
mov
jl
or
adc
cmpb
xor
insb
mov
js
cmp
xor
sahf
es
inc
xchg
mov
ror
sbb
cmp
nop
mov
lret
jl
aam
or
imul
in
sbb
pop
movsl
push
sbb
lock
adc
test
add
xchg
sbb
xor
cmpsb
or
shll
push
clc
push
xchg
mov
shr
icebp
xorb
mov
pop
dec
mov
out
nop
add
mov
arpl
adc
mov
movsb
cwtl
lock
es
out
sbb
or
pop
inc
add
or
cmp
adc
or
test
cs
xchg
dec
enter
mov
enter
sarb
dec
pushf
loopne
addl
add
jo
and
cmp
dec
sti
add
lock
fidivs
mov
push
mov
rcll
add
clc
push
fmull
mov
push
mov
cmp
data16
or
sti
popf
stos
or
ljmp
or
mov
jl
sti
mov
aas
les
mov
jae
jg
pusha
xor
test
arpl
out
rolb
ja
add
loop
movl
adc
or
add
in
gs
jne
es
lea
pop
shl
or
mov
in
cmp
mov
jg
out
sub
les
lock
cmpsl
loope
test
dec
andl
add
fsts
sbb
sub
cmp
add
inc
call
and
pusha
mov
sub
cmpsb
pop
sbb
add
std
lds
sub
loopne
dec
lcall
inc
fs
xchg
cld
inc
dec
sbb
dec
addb
es
lock
jns
add
push
enter
gs
movsb
sbb
inc
cs
add
adc
pop
add
mov
jns
add
sbb
mov
mov
xor
mov
cld
mov
pop
ret
popa
pop
loopne
or
or
stc
shlb
sub
sub
mov
shll
pushf
mov
fbld
pop
add
out
cltd
and
je
or
add
test
inc
lret
jl
cmp
ljmp
insb
lods
ficomps
add
nop
mov
dec
mov
icebp
xor
test
sub
bound
enter
and
and
sbb
sub
out
add
dec
pop
add
xor
dec
fsubs
xchg
movzwl
push
hlt
mov
push
add
xchg
test
sub
les
call
add
sub
into
pop
enter
fadd
adc
mov
push
cld
xchg
dec
jbe
cmp
xor
add
add
inc
lea
add
jle
sub
fs
rcll
dec
hlt
les
cld
and
and
call
mov
add
and
in
out
push
mov
scas
xor
rcrl
dec
or
sbb
fwait
jmp
push
push
lret
rorb
cmp
dec
andb
xchg
and
popf
sarb
sti
or
std
aaa
lods
mov
xchg
add
jno
add
sub
cmpsl
fisubrl
mov
out
xor
xchg
add
add
add
add
push
sub
mov
cli
scas
mov
mov
movsb
mov
fcoms
in
pop
movb
loop
in
enter
clc
add
stos
jae
push
add
mov
bound
add
xor
ja
outsl
nop
or
sti
mov
jnp
jo
sub
fiaddl
mov
mov
js
andl
xchg
pusha
mov
orb
mov
imul
push
add
add
addl
dec
addr16
inc
pop
pusha
add
add
xlat
out
sub
leave
in
nop
cmp
int3
pop
add
pop
jmp
cmovb
gs
push
push
add
out
add
movsl
insl
lret
mov
xchg
mov
sub
add
lea
add
mov
lods
pusha
int3
std
dec
pop
xchg
cmp
sub
stos
add
mov
mov
sbb
shlb
push
cs
push
cmp
je
add
iret
dec
dec
imul
mov
xchg
lahf
addb
ja
jbe
or
mov
insb
jp
mov
inc
xchg
add
sub
sbb
xchg
ljmp
mov
pop
dec
rolb
xor
mov
subb
loope
jb
and
sub
pushf
push
mov
mov
or
add
and
aam
mov
inc
inc
jo
in
adc
add
xchg
sbb
pop
or
jp
sbb
test
and
loop
push
pusha
fists
lods
int
mov
sbbb
ljmp
jo
fisttpl
push
add
test
cmpl
xchg
adc
bound
test
xchg
cmc
js
add
add
dec
or
adc
jp
add
push
mov
mov
xchg
push
pop
add
add
in
xchg
stos
mov
fadds
scas
adcb
or
testb
out
pusha
push
fnstenv
imul
aaa
add
lret
bound
das
cltd
or
sub
jbe
and
cmp
and
and
adcb
loope
add
arpl
test
in
add
jl
inc
mov
xor
lock
test
fbld
scas
xor
jg
or
rolb
test
clc
push
sub
adc
je
mov
loopne
rorb
or
ret
sbb
push
jae
mov
xor
jnp
addr16
mov
cmpsl
or
pop
std
xchg
hlt
xchg
pop
or
pop
and
mov
mov
or
xchg
xorb
mov
pusha
and
cmp
scas
ljmp
repz
sbb
scas
in
in
arpl
mov
adc
cmpl
in
loop
pusha
sub
sbb
or
dec
inc
loopne
mov
notb
mov
cmp
dec
add
pushf
inc
aaa
push
adc
cwtl
test
adc
orl
mov
and
add
add
aaa
jae
sub
addb
xchg
test
xor
out
add
orl
std
sub
or
add
adc
sub
out
sbb
imul
mov
aam
addb
xchg
dec
sbb
jbe
mov
scas
mov
pop
out
adc
outsb
pop
enter
mov
andb
pusha
xchg
cmp
mov
stc
rorb
je
sub
xor
popf
outsb
subl
inc
popf
aam
push
arpl
sub
and
idivb
mov
inc
les
loope
ret
jne
add
dec
cmp
icebp
mov
mov
addl
lret
inc
ljmp
sbb
rolb
popa
ficomps
jb
test
pop
mov
adc
mov
lea
test
add
je
xchg
push
fwait
pop
mov
mov
push
or
rcll
or
pop
out
test
cli
add
add
mov
adc
punpckhbw
in
xor
int3
pop
mov
jb
mov
cld
add
pop
inc
cmp
gs
cmp
incl
add
in
mov
stc
dec
adc
leave
pushf
leave
add
xor
stos
clc
push
mov
inc
push
nop
test
popf
aas
add
fstpl
scas
pop
orb
sub
ja
inc
xchg
inc
jecxz
imul
bswap
enter
pop
xor
pop
push
mov
inc
and
fildl
shl
mov
pop
outsl
ds
and
pusha
in
in
jo
cmp
sub
in
add
out
and
clc
stos
xchg
rolb
inc
xlat
sysexit
sub
xor
add
add
mov
xchg
fstpt
insl
js
sbb
in
cs
ljmp
pusha
adc
dec
test
clc
adc
adc
stc
add
repnz
ret
adc
and
and
pop
in
mov
js
sbb
nop
or
test
hlt
and
cwtl
cwtl
and
or
xor
outsl
test
movsb
add
sti
or
add
fimuls
out
hlt
xchg
xchg
jnp
bound
sub
jl
mov
pop
cmp
test
sub
mov
frstor
xchg
cmp
sahf
dec
or
mov
call
ret
add
addr16
pop
xlat
ret
xlat
in
mov
push
jl
shrl
or
and
sbb
aas
jo
jg
mov
add
dec
clc
mov
lods
sbb
xor
dec
pop
jne
push
mov
adc
das
or
addb
lods
push
test
adc
nop
repnz
xor
pop
add
sub
pusha
xorl
fcmove
pop
clc
or
lcall
sub
mov
push
pushf
cwtl
daa
int
shlb
popf
test
mov
jge,pn
dec
mov
repz
ret
cmpsl
mov
pusha
lcall
push
clc
mov
add
enter
jg
xchg
dec
xor
in
js
inc
add
push
add
cmpsb
push
pop
sbb
ret
push
mov
jle
pop
fidivl
add
xchg
fsts
out
stc
add
xor
cmp
pop
call
jno
xchg
jns
pop
add
pop
out
add
add
xlat
gs
js
xor
scas
or
loop
repnz
loop
pop
out
and
rcll
cmp
popf
jl
mov
dec
outsl
andb
jmp
mov
out
cmp
out
repnz
push
imul
add
imulb
adc
into
add
jecxz
imul
sub
sub
xchg
xchg
add
fmuls
adc
ja
mov
push
sbb
sub
loopne
ret
adc
add
scas
lahf
shll
and
dec
xor
push
pop
pop
add
ss
lret
jge
adcl
mov
xor
mov
mov
adc
jle
je
push
sub
inc
push
pusha
add
cwtl
push
addr16
dec
add
xchg
cmp
mov
inc
je
xorl
test
and
lds
xchg
jecxz
inc
test
xchg
movsl
ficoml
loope
cmpb
pop
inc
jno
and
mov
loope
add
push
xchg
add
call
mov
test
and
bound
mov
shll
push
pushf
test
mov
out
not
add
outsb
fmuls
mov
cmp
sub
and
xchg
and
jne
movsl
sub
rolb
pusha
jo
loope
pop
roll
fcompl
dec
xlat
out
xor
sbb
and
and
cmp
add
mov
jmp
push
sbb
add
into
es
add
mov
sbb
jne
sbb
add
xchg
dec
int
adc
xor
jge
sub
popf
cmc
test
mov
push
insl
mov
inc
pop
cltd
lock
mov
or
sbb
xor
lret
enter
xchg
in
js
loop
or
mov
mov
mov
xchg
cmp
pop
test
mov
lret
lds
iret
adc
enter
ret
sti
adc
sbb
rolb
sub
xchg
mov
mov
add
add
pop
cld
loope
pop
iret
xchg
cmp
cmp
push
cmpl
nop
stos
or
xchg
xor
int3
adc
mov
icebp
in
mov
or
xchg
push
mov
int3
mov
xchg
sub
xchg
dec
jno
add
push
enter
dec
cmp
fiaddl
and
in
and
lea
loope
loopne
int
aaa
pop
mov
mov
adc
sbb
add
nop
daa
add
mov
lock
clc
inc
sub
nop
cmp
call
sarl
aam
lea
jge
add
sbb
cs
push
cmc
mov
jb
add
dec
add
sub
nop
clc
out
or
movaps
add
sbb
mov
add
xor
or
add
repnz
inc
push
or
inc
cmpsl
push
sti
and
and
adc
or
pushf
cmp
inc
xor
sub
or
xchg
sbb
es
sub
mov
sarb
xor
lahf
fs
add
out
push
popa
pop
or
pop
gs
roll
sbb
or
stc
xor
popl
mov
pushf
adc
or
mov
sbb
fisttpl
push
jmp
or
and
push
mov
or
xlat
cwtl
popa
es
push
xorb
int
les
stos
push
xor
adc
loope
bound
cmc
adc
adc
add
scas
and
jg
or
push
roll
inc
movsb
push
inc
or
bound
push
movsb
pushf
pop
pop
nop
daa
adc
mov
mov
stc
xchg
rolb
pop
sub
add
cld
xchg
adc
test
ljmp
addps
adcb
in
mov
add
loope
pop
or
outsb
sbb
test
cmp
int3
adc
add
adc
loope
in
jp
sbb
mov
or
xor
imul
add
ss
jmp
inc
xor
and
ret
xor
sbb
cmpsb
adc
jg
dec
inc
cmp
out
mov
or
cmpb
aas
xchg
int3
loopne
mov
clc
dec
mov
adc
jnp
stc
popf
sbb
jle
adc
and
or
cmp
and
or
nop
dec
xor
fstpl
add
jae
or
aas
cmp
inc
sbb
xchg
sbb
loopne
or
mov
lcall
sub
dec
mov
fimuls
xor
imul
sbb
cmp
hlt
test
add
dec
push
pushf
xor
sbb
aad
js
mov
js
pop
int
popa
add
pop
inc
scas
xchg
addb
mov
dec
push
add
and
add
dec
xor
xchg
xor
cli
subl
adc
and
add
cli
shlb
sbb
push
cmp
scas
cmp
mov
mov
sti
or
enter
xchg
and
fs
test
clc
sub
mov
mov
lea
cmp
lahf
cltd
iret
stc
push
add
sub
mov
nop
push
cvtpi2ps
pop
test
cmpsl
adc
push
or
adc
push
cmpsb
jnp
push
fnstenv
repnz
or
sub
add
nop
imul
and
add
pop
rcr
out
mov
arpl
inc
xor
sub
xchg
pop
sub
int3
or
and
mov
and
out
data16
outsl
sub
pop
dec
cmp
or
js
and
jno
jge
shr
fcoms
push
mov
xchg
cltd
jbe
xor
mov
inc
or
test
or
arpl
and
out
xchg
pop
call
ret
enter
mov
popa
lods
pop
cmpsb
aam
cld
hlt
lock
call
movsb
mov
and
push
mov
adc
add
sbb
jo
push
je
pause
loope
aas
push
les
mov
push
adc
loope
andl
leave
inc
fsubrs
dec
jne
outsl
bound
jo
mov
push
pop
sbb
cwtl
cmp
dec
clc
stos
loop
add
add
bound
xchg
jo
push
ja
nop
xor
addl
mov
mov
imul
movlps
mov
faddl
sbb
push
jno
ret
mov
in
cmp
push
js
push
pop
or
and
mov
pop
sbb
push
or
sub
pop
aaa
aas
inc
add
jbe
xchg
xchg
cmp
int3
mov
sub
inc
or
clc
sub
out
add
sub
xchg
mov
jl
mov
in
clc
popl
mov
lods
and
out
pop
shll
xorb
jecxz
loope
xor
and
mov
or
fstpt
adc
add
shrb
imul
and
cmc
notl
jb
popl
xchg
inc
or
pusha
mov
imul
iret
fwait
mov
adc
adc
out
mov
std
in
sbb
lock
mov
dec
push
jo
or
inc
inc
cmp
xchg
nop
sbb
inc
popf
mov
dec
aaa
jl
in
dec
hlt
and
lds
xor
xchg
xor
add
jne
lea
dec
adc
mov
push
add
pop
mov
xor
pop
test
push
nop
sub
and
xchg
nop
fwait
hlt
repnz
aas
jae
incb
xlat
pop
pop
push
adc
dec
iret
mov
add
pop
dec
push
je
dec
add
mov
mov
test
dec
push
push
xchg
subl
push
sar
mov
push
sbb
or
lock
xchg
mov
cld
and
lahf
sbb
loope
dec
fxch
iret
pusha
ficoms
jae
cmpsb
xchg
mov
leave
jns
daa
add
scas
loope
jne
nop
test
pop
jo
faddl
jns
mov
jb
mov
nop
mov
pop
cmp
dec
jo
jg
jmp
iret
call
sbb
fwait
xchg
dec
add
adc
add
add
jo
xchg
mov
or
jge
sti
arpl
add
inc
lcall
xor
sub
xchg
push
jle
jae
outsl
mov
add
add
sub
push
stos
dec
pop
mov
dec
add
ret
sbb
adc
add
outsb
out
nop
and
add
add
and
je
inc
ja
add
jmp
add
mov
stos
xchg
test
popf
jb
aam
sbb
xor
fildl
adc
adc
imul
lret
daa
add
pop
xor
es
shrd
mov
pop
add
dec
ds
push
into
cwtl
mov
inc
inc
sub
add
pop
jmp
add
cmp
adc
addr16
nop
sbb
nop
bound
xchg
adc
and
or
push
out
call
lods
adc
push
mov
test
lea
repz
mov
and
ret
jno
test
ss
loope
sub
test
and
in
cmp
or
push
adc
loope
inc
xchg
jo
adc
dec
add
lods
aas
sarb
icebp
pusha
xchg
push
jge
add
push
sbb
lea
call
out
inc
lock
inc
aam
add
pop
jg
and
add
std
inc
popl
scas
pop
loop
arpl
pop
sti
add
mov
adc
mov
ret
dec
hlt
cwtl
popl
cmp
sub
movsb
pop
cmp
cld
xchg
ja
add
or
jp
clc
jnp
scas
or
sbb
pop
js
sbb
in
js
pusha
sarb
sub
cld
cmp
in
mov
sbb
and
sbb
sub
push
jne
clc
push
jl
dec
scas
mov
aam
out
sbbl
mov
inc
loope
push
inc
fcomps
sbb
ja
jp
in
xchg
lea
dec
imul
incb
mov
mov
outsb
xor
sub
sub
fisubl
jns
sar
pop
or
fiadds
mov
hlt
adc
xchg
push
adc
lock
stos
cld
jl
mov
add
mov
push
pmaxub
fsubrs
xor
dec
faddl
or
lea
push
fwait
rolb
add
add
cmp
jg
shlb
leave
inc
lds
dec
or
inc
mov
dec
ret
jb
xchg
aaa
lcall
js
jno
lods
es
loopne
pop
push
pop
mov
pop
call
or
mov
pop
cmp
loopne
xor
fldt
hlt
out
xchg
popa
cwtl
fmull
dec
adc
cli
xor
or
mov
mov
mov
movsl
pop
rol
sub
addl
rol
xchg
mov
mov
xor
sbb
add
clc
xchg
mov
cli
test
pop
jg
mov
shlb
adc
int
or
test
push
inc
outsl
mov
pusha
xor
push
add
adc
push
rcl
test
push
in
aaa
lahf
lock
and
ja
nop
in
xor
push
mov
lods
int
or
int3
cmp
jbe
mov
cmc
iret
inc
mov
loopne
dec
sbb
pop
nop
push
dec
pop
mov
mov
ljmp
xchg
push
add
fldenv
inc
and
cwtl
and
or
mov
mov
popa
adc
push
daa
xor
lcall
or
in
pop
add
xchg
leave
push
pop
mov
xchg
arpl
and
ljmp
mov
lock
pusha
movsb
adc
fildl
mov
xchg
in
mov
aas
jae
adc
or
aam
rcrb
xchg
push
pop
lea
hlt
test
jecxz
dec
lods
and
ficoml
mov
sbb
jo
cmp
and
lock
mov
jecxz
adc
rolb
sub
out
add
cmc
mov
cwtl
arpl
xchg
add
out
jo
mov
insb
fimuls
sub
test
push
out
dec
cmp
xchg
jb
arpl
leave
push
adc
mov
loope
mov
sbb
add
jle
out
pop
outsb
push
adc
leave
loopne
mov
mov
std
sti
test
push
js
cmp
and
push
mov
cmpsb
cmp
leave
mov
pop
mov
cmp
fiaddl
arpl
stc
je
mov
pusha
inc
leave
cli
or
outsb
and
lea
call
nop
and
adc
cwtl
popf
xchg
add
push
dec
out
mov
int
loop
dec
out
jmp
scas
and
adc
fwait
ret
jae
dec
push
nop
lock
mov
adc
push
mov
dec
cltd
and
dec
xchg
in
je
add
add
shlb
sbb
add
aas
jb
and
fisubs
or
cmp
xor
sub
je
xchg
cmp
jae
test
add
push
xor
out
jne
add
adc
in
lea
xchg
data16
sub
sbb
xchg
popa
lea
xchg
inc
cwtl
orl
jno
loopne
add
nop
adc
insl
enter
std
push
sub
fcoms
jb
aas
pusha
outsl
mov
sub
stos
or
sbb
push
sarb
jle
pop
dec
and
shrb
aam
fsubs
xchg
nop
int3
repz
mov
add
loop
cltd
add
cmc
push
inc
jl
sbb
adc
dec
and
push
pusha
je
jecxz
data16
and
dec
pop
push
xchg
and
mov
xchg
adc
lods
add
pop
jbe
adc
or
aaa
jmp
and
or
pop
jecxz
js
loopne
or
fs
lds
pushf
std
adc
mov
out
push
rorb
cld
dec
sub
or
cmp
es
mov
bound
pop
mov
push
cmp
out
leave
dec
mov
cwtl
pop
js
test
and
pop
add
lods
and
inc
xor
sbb
lret
mov
sarb
insl
mov
push
mov
std
test
adc
push
jecxz
add
pusha
dec
add
and
and
mov
xor
mov
popa
push
sarb
das
xchg
movsl
jb
mov
push
sub
xchg
dec
jb
sbb
outsl
dec
mov
pusha
dec
ss
dec
sub
cmp
mov
aam
mov
cmp
out
sbb
pop
or
out
into
and
loop
push
jp
jge
icebp
imul
int3
add
add
scas
add
pop
dec
or
mov
nop
sbb
mov
xorb
outsb
shrb
out
stc
xor
es
jmp
gs
cmp
arpl
inc
and
mov
filds
adc
adc
mov
lock
outsl
cwtl
add
push
and
ljmp
and
add
movsb
add
in
nop
dec
mov
push
out
pop
xor
push
adc
mov
out
xor
out
mov
inc
adc
shll
xor
pop
jne
add
xchg
stc
mov
xchg
cltd
je
cwtl
dec
jle
pop
pop
and
cmp
sub
test
je
push
xchg
imul
or
adc
pushf
shlb
inc
jg
pusha
mov
loop
and
ss
jb
mov
pop
or
in
lahf
pop
shl
outsl
mov
dec
in
mov
lock
dec
mov
repz
cmpsl
pop
dec
adc
popf
push
lret
fdivs
sbb
sbb
pop
and
mov
add
xchg
iret
int3
lods
mov
or
mov
sub
push
add
xchg
jp
xorb
add
cmp
loop
xchg
pushf
pop
paddd
add
call
dec
sub
es
pop
or
leave
fs
add
je
roll
xchg
or
lea
add
adc
dec
out
or
clc
divb
lds
mov
incb
rcl
add
and
scas
push
mov
mov
xrelease
lock
fs
stos
out
xchg
adcl
cmp
pop
aad
pop
addr16
ret
sub
adc
imul
adc
test
out
popa
sub
out
dec
inc
addb
mov
stc
jecxz
nop
lods
mov
xchg
je
mov
das
rcrb
rorb
sahf
fsubs
les
cmp
lea
in
dec
ja
mov
mov
outsb
adc
adc
out
pop
or
dec
cwtl
xor
xchg
jl
mov
adc
mov
cmc
movsb
out
xorb
arpl
mov
jge
sub
add
addb
les
movb
xchg
outsb
fisubrl
adcb
push
add
cmp
push
idivl
dec
sub
dec
mov
mov
cmc
sti
movsb
repnz
mov
and
add
pop
pusha
icebp
mov
sbb
inc
and
jo
out
or
nop
xor
testb
or
mov
mov
sbb
popa
dec
xor
and
sub
mov
inc
or
jmp
or
adc
test
das
mov
mov
add
inc
lret
iret
loope
fldcw
pop
xor
adc
in
fmull
add
xor
pop
lar
add
jb
jecxz
sub
adc
ficoml
pop
add
lahf
lret
pushf
jg
add
or
out
sub
mov
movsb
and
es
mov
pop
push
nop
and
out
and
jb
mov
lock
lahf
add
mov
push
rclb
repz
xchg
jno
jo
push
cmp
pop
jg
mov
inc
sub
xchg
idiv
add
int3
sbb
dec
int
dec
lock
mov
pop
lahf
jmp
cmp
nop
loopne
mov
and
scas
and
dec
push
or
push
cmpb
mov
cs
adc
out
in
mov
sar
pop
pop
sub
add
fstpt
dec
xor
and
out
jp
pop
das
and
or
enter
lock
pop
mov
mov
and
mov
scas
push
lods
dec
aas
pusha
nop
mov
inc
scas
mov
subb
pop
mov
mov
or
pop
add
roll
pusha
test
ds
and
cmp
shrl
addl
ljmp
andl
sbb
sub
les
sbb
lcall
lock
push
mov
xchg
rclb
mov
xchg
or
and
repnz
pop
dec
mov
sub
outsb
loopne
je
and
int3
les
cmp
and
jle
je
xchg
adc
je
in
cmp
jb
test
pushf
push
inc
adc
shrb
sarl
pop
mov
add
lods
into
pusha
mov
imul
nop
mov
add
adc
pop
hlt
cmpb
adc
mov
cmp
push
or
or
add
inc
jno
insb
enter
bound
add
rolb
pusha
or
cmp
add
test
cli
add
jecxz
inc
jbe
jg
sub
mov
das
add
rorl
xor
dec
or
cmc
mov
lcall
in
sub
outsl
and
scas
xchg
test
mov
and
mov
inc
mov
dec
nop
inc
sbb
and
pop
mov
push
jecxz
out
shl
loopne
loope
out
mov
popf
cltd
out
inc
inc
cmp
scas
in
imul
test
sub
xor
cmp
cmp
mov
shl
fnstcw
cmp
sub
aaa
add
jns
addr16
lcall
mov
sub
sbb
bound
mov
mov
push
inc
pop
jg
add
cltd
add
cmp
add
loope
in
dec
nop
rolb
dec
daa
gs
jnp
and
inc
pop
and
add
inc
loopne
cld
pop
add
cmpsb
xor
rolb
push
pop
pusha
sub
pop
adcb
add
rclb
and
xchg
xchg
sbb
jbe
pop
popf
jmp
mov
pop
stos
mov
cmc
mov
repnz
mov
mov
xchg
in
repnz
mov
bound
xorl
adc
loopne
test
loope
andl
cmp
xchg
adc
add
mov
sbbb
dec
hlt
push
test
jge
add
pop
out
lods
rorl
lock
adc
dec
add
pop
pop
inc
and
add
into
jle
mov
xchg
inc
clc
xlat
lock
jb
sub
xor
dec
sbb
jl
add
sbb
out
xlat
scas
cwtl
mov
pop
xchg
add
pop
jmp
gs
dec
test
stos
push
sub
sbb
mov
push
stos
lret
sbb
add
pusha
test
es
rorb
fs
mov
push
iret
fwait
sub
mov
adc
test
ss
sbb
in
jo
jo
pusha
add
sub
pop
jns
add
mov
adc
ja
insb
lcall
pop
pusha
shrb
pop
popf
rol
fdivl
sbb
jle
mov
mov
jg
iret
pop
jno
arpl
mul
ljmp
adc
daa
or
xor
cmp
testb
xchg
mov
lsl
pop
hlt
fmull
fisubrs
sbb
sbbb
cli
mov
jl
push
stc
sbb
xchg
sub
push
mov
rol
add
cltd
jecxz
dec
lcall
fisttpl
or
push
ljmp
rorl
clc
lock
or
mov
mov
imul
jl
xor
pop
nop
icebp
clc
cmp
inc
in
jae
mov
mov
in
mov
xor
mov
es
mov
push
ret
fwait
addb
sbb
mov
mov
out
xchg
mov
lods
insl
je
cld
loop
dec
out
lcall
cmp
jg
pop
push
inc
and
cs
add
dec
lahf
ret
movsb
jl
inc
rcrb
pop
inc
ja
and
fwait
inc
sbbl
pusha
mov
mov
push
sahf
bound
add
xor
add
test
scas
add
sti
aam
sbb
rolb
or
mov
xor
add
push
in
aaa
inc
sub
scas
enter
add
cmp
jne
pop
push
xorb
rolb
inc
lahf
mov
and
rclb
into
sbb
xor
sub
iret
xor
mov
adc
clc
popf
mov
call
fldl
roll
add
sub
xor
imul
icebp
hlt
les
add
add
sub
pop
jmp
lock
das
push
lcall
xor
cli
jl
aam
les
loope
stos
inc
push
shrl
add
push
in
or
xor
or
sub
mov
dec
js
fwait
andb
inc
or
lds
int
test
arpl
in
cmp
jne
push
jmp
dec
add
dec
add
ljmp
clc
xor
mov
jge
lea
add
out
xchg
add
test
loope
test
mov
ret
shr
sub
push
add
hlt
xor
daa
and
das
push
fwait
xorb
rcrl
mov
mov
arpl
adc
fimull
in
pop
or
scas
inc
insb
sbb
std
adc
shld
lods
pop
lock
fldl
inc
push
adc
fstps
jg
insb
mov
sbb
cli
mov
add
cmpsb
je
mov
mov
add
and
mov
data16
lcall
out
cmp
enter
mov
push
and
or
push
in
bound
and
packsswb
mov
dec
out
repnz
push
adc
adc
loopne
fistpl
xor
push
jl
hlt
test
test
shl
gs
mov
test
add
push
lock
ljmp
dec
das
mov
in
adcl
inc
popa
cmp
add
fdivs
mov
add
or
mov
andb
fucom
test
scas
push
xchg
cmp
pop
cwtl
iret
negl
roll
xchg
xor
lods
xchg
sahf
pusha
dec
jno
pushf
jmp
cmp
add
outsl
ret
data16
inc
push
cmc
push
sahf
sub
sbb
jg
outsl
mov
mov
inc
inc
add
and
add
pop
cmp
rcll
mov
pop
loopw
fnsave
lea
and
clc
add
popf
ja
adc
inc
xor
add
insb
cmpsl
cwtl
shlb
xchg
enter
adc
push
jle
clc
add
jbe
test
mov
call
add
xor
fs
subl
xor
popf
lock
push
mov
cmpsb
mov
xchg
add
push
das
jp
adc
loopne
or
testb
ret
inc
sbb
sub
out
push
cmpsb
lods
jo
call
dec
loope
int
jbe
les
repnz
loopne
sbb
aam
push
sbb
jg
clc
add
hlt
add
and
mov
pop
sahf
add
jb
int3
in
lds
or
out
cli
inc
mov
adc
cld
aaa
xor
add
pop
out
test
xor
add
movsl
lock
outsl
repnz
lods
xchg
mov
push
gs
rolb
pop
pusha
js
and
clc
fmuls
cmc
xor
add
xchg
mov
adc
pop
mov
out
or
insb
add
mov
pop
xchg
add
jl
xor
add
lods
imul
sub
mov
out
mov
lds
mov
movsb
fwait
test
inc
push
xchg
mov
lock
and
es
jg
cli
into
clc
mov
xchg
adc
aaa
dec
or
addr16
cwtl
call
rolb
aam
push
hlt
xor
add
movsl
rcrl
inc
pop
adc
out
jp
lods
adcl
outsl
loopne
push
cwtl
and
pop
dec
cmp
add
pop
fisubl
lods
adc
and
cmp
es
cmp
push
call
loopne
negb
cltd
ret
ja
es
jmp
or
xor
stc
adc
inc
popa
or
test
mov
push
in
orl
add
sbb
mull
or
fyl2x
mov
pop
in
mov
rolb
shr
inc
dec
dec
shr
add
insl
sub
add
xlat
pop
scas
mov
xor
pusha
mov
push
outsb
or
xchg
outsl
cmp
add
xor
mov
inc
daa
mov
mov
sbbl
lods
clc
out
sub
ja
sub
dec
adc
or
and
sub
inc
insb
mov
sbb
or
pusha
and
fdivrs
es
and
xchg
rcrl
sbb
loop
push
gs
in
movsl
xchg
jge
jnp
fcmovbe
subb
addl
fcoml
in
ds
enter
leave
movsl
dec
xchg
lret
sub
sbb
adc
loopne
loope
push
jle
cs
mov
imul
popaw
stos
ret
push
movsb
inc
lds
aaa
loopne
add
cmp
add
dec
fdivrp
pop
movsl
pusha
imul
call
lock
lahf
mov
fsubrl
pop
dec
sarb
pop
jae
lock
lea
sub
push
mov
test
addl
push
mov
pop
hlt
xor
jp
mov
jecxz
movsb
xor
arpl
js
jbe
and
fmull
jg
cwtl
movsb
loopne
push
pop
jne
popa
loopne
add
jp
lahf
out
mov
push
pop
pop
push
cmp
xchg
test
push
jns
add
push
insb
or
add
mov
sub
lock
or
or
and
out
add
test
cld
loopne
orb
str
jg
dec
mov
cmp
pop
loop
adc
add
dec
jnp
xor
pop
scas
cwtl
sbb
xor
sub
rolb
jae
cmp
arpl
sbb
cmp
shl
or
dec
add
jo
loope
in
adc
xchg
xor
dec
femms
sub
fcmovbe
add
cmp
sbb
stos
push
or
jecxz
orb
pop
sbb
adc
add
sbbb
adc
inc
loop
xchg
or
jg
and
hlt
jno
push
push
inc
sbb
mov
jmp
jp
nop
jle
xor
mov
push
push
and
addr16
push
dec
mov
out
scas
pop
sub
adc
add
fnstenv
sub
aad
fwait
jo
adc
inc
xor
in
out
mov
inc
adc
jne
insb
cmp
js
outsb
into
pop
test
movsb
jo
adc
push
popa
sub
inc
cli
mov
or
int
mov
test
add
adcb
sbb
aam
mov
push
in
fstpt
xor
addl
push
fs
add
mov
nop
dec
sub
push
mov
roll
dec
xor
sub
addb
add
sub
lahf
sbb
pop
xchg
mov
or
jle
lock
xchg
xor
stc
andb
add
cmpb
push
xchg
sub
repnz
loopne
out
push
dec
mov
sub
in
fisubs
cli
test
in
inc
cmp
enter
cmpsb
ret
pop
push
adc
in
inc
cltd
push
or
add
arpl
mov
fbld
sub
add
jge
popf
lea
push
in
mov
dec
pop
dec
out
or
inc
pusha
jge
or
fmuls
mov
cs
sbb
cwtl
jbe
push
in
adcl
scas
sbb
and
adcl
jne
jecxz
shll
and
out
lock
fmul
stc
rorb
pop
rcrb
sbb
sub
mov
cld
sub
adcb
pop
out
bound
xacquire
in
add
pop
sbb
dec
aam
movsb
mov
jl
ljmp
repnz
mov
mov
outsb
push
cmpb
data16
adc
xchg
add
clc
out
nop
pop
sbb
and
sbb
add
rclb
sbb
pop
push
test
mov
les
je
sub
or
sub
in
cld
mov
add
sub
cld
mov
pop
lods
inc
sbb
nop
jb
movsb
inc
pop
jns
and
pop
dec
fistps
movsb
or
sub
sarb
fsubr
pop
add
stc
sahf
xor
cs
aaa
ss
push
jl
inc
push
out
imulb
add
mov
out
pop
add
jns
mov
mov
add
jbe
mov
cmp
mov
add
mov
loopne
inc
xor
push
ja
mov
cmp
sahf
jno
and
flds
xchg
dec
add
rcll
jb
je
sub
out
dec
addb
out
int3
inc
xchg
call
xorb
adc
jne
outsl
push
adc
gs
dec
arpl
jmp
push
enter
add
add
push
adcb
pop
cmp
and
and
outsb
mov
push
sub
mov
adc
mov
add
push
pop
mov
pop
jno
and
jecxz
and
jl
mov
cmpsb
lods
add
jmp
sti
sbb
enter
div
mov
or
xchg
sti
add
loop
lds
add
out
add
dec
pop
aas
xor
and
or
jl
sbb
add
mov
jnp
add
daa
cmp
xchg
adc
lods
aad
mov
mov
in
pop
outsl
sbb
lods
adc
mov
dec
dec
popa
cmp
je
mov
sub
dec
mov
lds
movlps
cmpsb
stos
divps
nopl
xchg
test
test
push
add
add
stos
inc
jl
push
aaa
or
popa
movsl
mov
push
rorb
outsb
pushf
cwtl
jnp
cmpb
jmp
mov
icebp
add
adc
imul
sbb
sbb
test
test
mov
adc
dec
add
imul
sub
mov
add
mov
push
pop
addr16
addb
mov
push
or
push
dec
in
or
mov
retw
lea
loop
sub
add
fistpll
or
dec
popa
jne
pusha
loopne
xchg
jp
adc
push
inc
cwtl
movsb
pusha
cmp
xchg
pop
fdivrs
xlat
cmpsb
pop
sahf
popa
in
icebp
insb
add
mov
sbb
movsl
lea
mov
sahf
push
and
sub
push
dec
dec
in
lods
shlb
movsl
sbb
dec
clc
bound
out
mov
popa
fiadds
xchg
push
push
fdivl
pop
dec
stos
and
bound
jbe
or
adc
in
and
addr16
push
cwtl
inc
fs
pushf
xor
dec
add
aas
movsl
push
pop
mov
sub
sbb
sahf
sub
data16
mov
add
xor
push
orb
data16
adc
fxch
decl
jmp
test
push
dec
out
ss
data16
add
outsb
cmp
add
fwait
push
decb
incl
orl
xchg
js
cwtl
add
sub
dec
add
sbb
aas
mov
pop
xchg
xor
jl
push
or
dec
test
sub
cltd
xor
out
loopne
sbb
dec
push
cld
jg
and
xchg
jo
cmp
cmpsb
cld
cli
test
mov
pop
call
add
scas
lds
mov
pop
inc
add
adc
iret
jno
xchg
int3
rorb
xor
add
mov
add
fdivr
dec
imul
mov
notb
mov
or
add
and
imul
inc
pusha
addb
pop
clc
jo
loop
fsts
mov
movsb
in
shlb
stos
mov
dec
fisubrs
dec
mov
xor
cld
push
sbb
ret
sbb
mov
jmp
mov
dec
add
xchg
stos
xchg
jge
testl
inc
sub
pop
adc
cmp
add
mov
add
and
sub
sti
in
lret
lods
outsb
sbb
jb
mov
pop
movl
pop
notb
sub
fsubr
dec
scas
add
cmp
jne
fistl
jp
dec
addr16
cmpl
lock
loopne
ffree
adc
shll
jp
pop
add
mov
test
add
and
pop
adc
cltd
adc
mov
xor
and
add
inc
insb
or
jl
push
xor
push
pop
push
xor
xchg
pop
cmpb
mov
cmp
sbb
nopl
lret
sub
rorl
out
orl
mov
mov
jno
inc
lcall
lahf
dec
add
xchg
xor
dec
js
in
sti
sub
push
fistpll
call
pop
jnp
mov
rclb
dec
xchg
or
cmc
sbb
add
lahf
ret
adc
addl
in
add
mov
shlb
dec
push
push
aaa
dec
push
addr16
sub
push
sub
cmp
loop
fmulp
dec
push
lds
adc
dec
jl
inc
add
negl
add
push
dec
cmovg
fisttps
lcall
adc
out
or
jno
sbb
jle
add
and
dec
into
pop
loopne
ljmp
mov
mov
or
outsb
or
or
dec
jo
notl
pop
pop
xchg
mov
cmc
test
mov
dec
daa
mov
or
jbe
jo
mov
add
jno
lods
adc
push
jp
scas
nop
push
vprotb
test
sub
cmp
enter
add
rcr
divl
fs
enter
jnp
fdivrp
daa
xchg
pop
repz
lock
shlb
mov
sub
icebp
sbb
add
xor
adc
ss
xchg
or
xchg
or
loop
cmpsl
xor
adc
push
cmpsl
mull
mov
scas
in
sbb
sbb
mov
add
shll
or
xor
sub
xor
xchg
lods
mov
or
js
jl
repnz
rcrl
xor
sub
sbb
dec
add
mov
lret
por
scas
dec
add
das
out
add
sub
sbb
dec
or
push
jmp
push
sub
leave
stc
cmpsb
xor
ja
and
add
lahf
pop
rolb
outsb
jo
icebp
out
jae
add
cmp
push
pop
jmp
mov
pop
push
rcll
stc
repz
xchg
adc
mov
adc
lds
or
push
jnp
sub
inc
mov
test
clc
lcall
adc
push
inc
nop
pop
lahf
push
sub
sbb
push
cltd
and
in
adcb
mov
cld
push
sbb
in
inc
pop
add
andl
dec
lock
rclb
sbb
test
ret
push
add
xor
pop
push
mov
out
push
mov
dec
mov
repnz
add
add
insl
add
adc
or
push
add
add
sbbl
push
adc
mov
or
mov
cmp
enter
xor
or
xor
arpl
aas
mov
add
cmpsb
icebp
aas
add
add
je
mov
subb
add
add
mov
inc
xor
adc
and
fdiv
push
idivb
pop
mov
mov
fadd
ds
pop
shl
mov
out
clc
mov
adc
cmc
pop
add
sub
pop
add
in
not
push
jmp
push
mov
sarl
xchg
cs
sub
jmp
mov
add
pop
test
adc
icebp
cmc
push
pushf
rcll
lret
mulps
jl
pop
sbb
pop
push
jecxz
push
adc
inc
push
jmp
out
jle
cmp
and
dec
or
stos
pop
mov
aam
hlt
or
int3
dec
inc
xor
mov
icebp
xchg
pushw
push
mov
push
push
adc
js
dec
xchg
pop
xor
add
sbb
push
mov
jb
ret
add
and
inc
aaa
push
sbbb
stos
jmp
test
ss
inc
testb
out
adc
repz
jecxz
inc
xlat
ja
xchg
or
push
inc
fstl
dec
test
or
jmp
inc
orl
pop
push
adc
mov
adc
in
push
jmp
push
mov
push
mov
nop
fucompp
xchg
outsl
repnz
xchg
and
pop
inc
dec
lret
jge
inc
jns
addl
add
fisubl
daa
sub
shl
fmuls
and
push
cmpl
xorl
mov
and
fsubl
xchg
add
add
add
push
mov
popf
insb
fidivrl
pop
pushf
push
aam
addr16
add
push
push
sub
out
cwtl
mov
call
sahf
push
push
pop
leave
push
push
jo
sub
add
ret
inc
pop
xor
shlb
push
mov
repnz
pop
fbstp
cmp
pop
sub
pop
sbb
into
movsb
sub
daa
les
and
push
incl
shrb
adc
pshufw
movsl
xchg
fiaddl
out
add
pop
or
inc
pop
pop
leave
pop
adc
cli
js
enter
and
push
sub
push
andl
bound
mov
testb
mov
pop
push
imul
addr16
data16
jge
sub
dec
jb
add
push
or
and
ret
mov
loop
push
dec
andl
and
pop
mov
inc
daa
fidivrs
not
in
adc
adc
jp
add
xchg
pop
and
es
lods
sbb
clc
add
xchg
mov
jl
pusha
and
test
push
cli
cld
inc
xor
push
aam
fcoml
push
cmp
das
mov
mov
push
or
push
aad
xor
repz
call
mov
pop
test
add
popf
ret
jmp
mov
dec
mov
dec
and
push
pop
rcrb
les
jb
fisttpl
ds
pop
mov
dec
mov
data16
icebp
mov
mov
shrb
dec
pop
aas
aam
inc
mov
stc
xor
out
cltd
rclb
je
inc
adc
mov
mov
lods
mov
push
or
jp
inc
cmpsb
xchg
pop
sbb
xchg
or
push
xor
adcb
pop
jle
xor
pop
and
rolb
push
repnz
add
and
lret
iret
inc
mov
jmp
sub
add
or
xchg
add
jmp
sub
and
loop
pop
movaps
lret
test
add
mov
jo
xor
lahf
mov
xor
mul
movzbw
adc
jg
push
sub
add
int3
or
bound
push
xor
cltd
sbb
idivl
shll
push
mov
mov
jmp
add
jbe
or
xor
jge
ret
push
jmp
aad
test
and
rclb
ret
push
pop
push
mov
dec
adc
jmp
jae
sbb
jbe
add
clc
jg
ljmp
cld
testb
arpl
xor
shll
mov
ja
sub
or
push
cmp
push
or
orb
add
mov
in
fcompl
sbb
scas
pusha
stos
xor
sbb
cmp
or
rorb
xchg
test
ret
and
push
inc
jbe
loope
mov
adc
push
xchg
mov
dec
sub
sub
cli
add
dec
outsb
xor
enter
pop
or
adc
movsl
adcl
dec
fwait
xlat
inc
push
push
pop
jmp
popf
jno
out
add
jne
push
divl
pop
xor
dec
in
js
pushf
push
or
mov
mov
roll
ret
cmp
ror
adc
push
or
sbb
push
bound
sbb
add
pop
stos
jl
iret
cmpsl
dec
push
inc
jmp
add
push
lret
xorl
fsubrs
jp
xchg
or
int
pop
mov
pop
sub
pop
sub
sti
add
pop
ss
or
shr
add
add
imul
cmp
andb
add
ret
xchg
mov
push
inc
jmp
inc
mov
add
aas
pop
dec
jge
and
iret
popa
sub
dec
idiv
loopne
pop
xor
mov
xchg
lahf
mov
sahf
popa
pop
pop
and
jb
es
loope
mov
adc
and
jmp
movsl
xor
push
jno
sbb
mov
or
sbb
cmpl
mov
inc
insl
xor
aad
jmp
enter
xchg
pop
mov
pop
and
or
push
ljmp
pop
aas
jg
dec
or
fstpt
and
pop
shl
sub
jge
imul
ret
pop
push
jl
jg
out
or
fisubs
mov
addr16
jmp
add
sub
mov
pop
mov
inc
loope
loopne
inc
mov
inc
scas
jmp
mov
xor
sar
or
inc
int
jnp
shll
lds
and
add
sbb
dec
xor
add
xor
arpl
jmp
mov
push
test
inc
movsl
lods
pop
xor
push
jp
sbb
push
xchg
and
pusha
mov
jno
cmovle
pop
pusha
xchg
push
fs
movsb
jnp
int
xor
stos
or
int
cmp
pop
mov
mov
popa
stc
push
jae
push
xor
jnp
or
and
add
gs
inc
xlat
mov
mov
push
or
push
push
jle
jmp
sub
enter
pop
addr16
mov
push
sbb
jne
cltd
xchg
xorb
mov
or
xchg
dec
bound
jnp
pop
dec
lock
dec
jb
pop
add
lock
sub
and
dec
adc
jo
js
push
mov
mov
pop
sub
gs
add
sbb
jae
sbb
cli
adc
cmpb
or
mov
imul
adc
int
adc
sub
push
mov
add
clc
roll
cltd
xor
in
add
movsb
xor
sub
mov
cmp
stos
subb
push
cs
and
mov
mov
dec
push
adc
and
xchg
cmc
pushf
adc
out
jmp
xor
inc
xor
or
mov
mov
add
std
push
cld
mov
ud2
movzbl
addb
inc
sbb
jle
sbbl
or
sbb
mov
mov
or
rcrl
pushf
jmp
pop
cmovle
movlps
or
sbb
jo
and
test
hlt
lcall
mov
adc
add
inc
lods
mov
add
jmp
ja
addl
adc
add
add
mov
xor
sub
jns
je
jo
push
sbb
pop
and
imul
pop
daa
adc
lahf
fs
pop
push
sub
xchg
addr16
cld
adc
push
and
mov
dec
movsb
add
adc
test
mov
dec
shll
push
mov
push
pop
mov
ljmp
inc
dec
jecxz
rcl
pop
adc
and
adc
out
sbb
or
adc
pop
int3
cmpsb
pop
xchg
mov
push
pusha
testl
clc
cs
jp
mov
mov
fstpt
adc
and
ss
daa
aaa
es
in
add
add
pop
xorb
jge
inc
inc
arpl
mov
cmp
pop
sbbl
push
pop
sub
add
push
cwtl
cmp
adc
or
push
pop
cwtl
add
add
arpl
or
pop
push
aas
pop
lods
and
imull
push
push
pop
jecxz
or
fstpt
pop
push
jb
outsb
cld
or
add
sub
enter
mov
pop
push
mov
bound
adc
sub
sub
jmp
or
add
inc
sbb
xchg
add
add
lret
pop
add
pop
pop
lods
or
inc
test
xor
ljmp
sub
inc
and
jb
mov
add
sub
sbb
out
and
add
lcall
dec
cwtl
push
and
add
pop
shl
in
fldl
push
push
sbb
add
dec
xor
jge
pop
nop
scas
test
add
loopne
xor
out
dec
jns
and
push
dec
xor
test
dec
cwtl
int3
jmp
cs
xor
push
daa
push
jne
adc
mov
add
ss
lods
mov
adc
out
add
push
jecxz
sub
mov
dec
cmp
lods
in
inc
mov
pop
dec
jno
sub
iret
not
add
jecxz
sub
xchg
bound
xchg
or
bound
cltd
xor
or
cmp
jmp
sbb
xchg
or
jecxz
pop
int
test
mov
adc
jne
mov
and
sbb
jle
xor
xor
sub
popf
dec
xlat
cmp
adc
test
adc
or
out
or
push
mov
aaa
pop
cld
xlat
mov
pop
sbb
testb
scas
in
adc
add
and
dec
xor
xor
dec
or
add
sbb
push
arpl
push
daa
adc
dec
shr
pushf
ja
push
mov
sub
cmp
int3
mov
jb
lea
dec
push
mov
icebp
bswap
enter
pusha
out
jne
sbb
jmp
inc
cltd
pop
or
shr
loop
add
add
or
stc
loope
hlt
sub
repnz
xor
sub
inc
mov
aas
sub
and
pop
ror
cmp
add
lcall
addb
cmp
and
push
sub
fstl
cmp
pop
repz
add
jmp
mov
cmp
lods
inc
fistpl
xor
and
add
aad
add
push
pmaddwd
xlat
or
int
xchg
add
idiv
jl
cmp
or
xor
lock
adcb
dec
das
sbb
pop
cwtl
andb
mov
rolb
push
push
es
push
into
add
pop
lahf
je
sub
push
insl
xchg
aad
pop
rorb
cmp
scas
mov
push
push
fisubs
xor
aas
jecxz
add
pusha
ficoms
jmp
shrb
repz
jg
sub
clc
sahf
cwtl
stos
sbb
arpl
fs
cmp
leave
bound
je
pop
sub
or
filds
add
fpatan
mov
fisubs
push
in
add
pop
jmp
arpl
xor
adc
jle
mov
pop
add
out
jmp
push
pop
pop
jbe
shrb
push
enter
cmp
in
sub
mov
out
mov
daa
fstpl
sbb
out
repnz
add
and
pop
sbb
add
pop
push
jmp
push
sbb
push
jmp
pusha
lret
xchg
dec
or
inc
bound
adc
pop
pop
adc
imul
scas
loope
xor
test
xchg
jmp
in
mov
xor
sysret
ds
inc
and
jl,pn
jl
sbb
dec
sub
jecxz
or
pop
test
push
mov
neg
adc
jb
add
pop
push
mov
mov
lahf
adc
test
add
movsl
or
neg
jl
jp
daa
icebp
pop
inc
lock
push
and
push
mov
test
push
shl
add
sub
sub
pop
loopne
repnz
mov
jbe
dec
insl
sub
out
mov
popf
sbb
roll
cld
gs
mov
push
shl
subb
sbb
adc
inc
ss
add
orl
and
xchg
mov
mov
inc
jmp
add
je
or
enter
faddl
lods
push
mov
leave
dec
jl
int3
addl
jge
push
in
push
jl
adc
add
out
jmp
pop
inc
xor
xor
push
test
dec
push
adc
mov
adc
push
and
dec
jmp
mov
out
data16
mov
adc
xor
aaa
nop
lret
incl
iret
popa
mov
and
inc
jmp
sub
pop
pop
roll
and
call
mov
or
jmp
fisttpl
mov
jge
adc
mov
dec
mov
js
mov
cmp
mov
push
into
push
mov
sarl
push
arpl
xor
inc
mov
mov
inc
test
rol
gs
add
dec
mov
pop
add
dec
sbb
cld
or
xor
push
adc
popa
mov
dec
push
das
pop
data16
jb
mov
jbe
jle
xchg
sbb
push
sti
pop
xorl
notl
and
jb
jae
or
dec
aas
mov
push
mov
sub
psubsb
mov
mov
aad
or
push
rorb
sub
jle
fisttps
movsb
mov
sbb
sbb
xchg
imul
test
add
nop
xchg
add
fwait
aas
mov
jmp
jmp
dec
cli
cmp
jmp
sbb
and
sbb
or
test
dec
mov
sub
sub
rolb
out
add
arpl
pop
push
adc
mov
mov
xchg
scas
imul
insl
jg
adc
xor
xor
inc
push
push
icebp
mov
add
aad
lock
xor
or
ds
lds
xorb
sub
mov
mov
xchg
ficompl
pop
hlt
sub
mov
mov
je
cmp
insb
xchg
rcrb
mov
push
push
mov
xchg
fisubrs
sub
mov
push
fsubrl
xor
jnp
jmp
push
ret
lock
inc
and
in
fstpt
jmp
xor
or
pop
sub
in
ljmp
pop
mov
jg
or
or
push
xor
and
pusha
add
mov
pop
or
jmp
jecxz
daa
or
sbb
popa
out
add
imul
or
in
push
jns
jl
sub
sub
lock
mov
mov
xor
inc
loope
fcoms
out
inc
inc
push
xor
cli
inc
ret
adc
push
mov
icebp
sarb
popa
and
lahf
xor
inc
or
or
fld
xchg
xchg
incl
inc
stos
sbbb
inc
cwtl
cltd
dec
sub
mov
or
sub
fsubs
mov
pop
pushf
mov
pop
mov
sub
and
inc
sbb
cmc
cwtl
out
or
fs
or
adc
jp
daa
neg
mov
push
add
out
push
mov
or
pushf
pop
add
popa
jmp
and
daa
mov
cmp
dec
jb
mov
jmp
les
inc
inc
pusha
pushf
mov
aas
scas
aaa
lods
pop
or
call
sub
jg
int
sbb
xchg
jg
push
push
push
subps
mov
xor
inc
lods
and
decl
punpckhbw
dec
scas
xor
or
sub
pop
adc
cmp
or
push
imul
dec
sub
es
arpl
lcall
push
xor
xor
and
or
call
and
sub
pop
stos
add
rcrl
hlt
xor
push
int
not
add
xchg
xor
push
xchg
ds
and
and
sbb
dec
pusha
punpckhbw
fs
lock
add
sbb
sub
out
testl
add
sub
jle
push
inc
sub
adc
nop
arpl
fwait
popf
test
in
rol
cwtl
cld
roll
pop
mov
adc
dec
push
or
push
movsl
push
xchg
add
jg
ja
into
cwtl
pop
pop
stos
iret
bnd
enter
add
jae
inc
adc
sbbb
fs
jbe
lock
mov
or
inc
adc
ror
push
push
ret
mov
or
cld
dec
cli
add
sub
call
ss
push
jmp
or
pop
out
fcompl
cmpl
hlt
mov
cmp
xchg
ret
inc
dec
jge
js
stc
push
pop
add
mov
or
push
mov
adc
mov
or
daa
xchg
xor
push
addb
sub
std
aad
or
jno
clc
outsb
pusha
mov
mov
scas
xor
add
push
adc
sbb
jecxz
lock
pop
mov
outsl
push
lock
push
or
xchg
or
je
scas
add
scas
xor
pop
enter
jle
nop
cli
or
and
jl
or
push
sbb
and
add
in
imul
push
stc
arpl
mov
dec
movsb
out
xor
pop
and
and
inc
loop
insb
jb
mov
and
cmpsb
cmpsl
adc
push
or
pusha
out
dec
and
pop
std
inc
sub
mov
pop
sbb
adc
sub
sbb
sbb
adc
repnz
out
mov
cmc
add
mov
mov
fsts
test
or
xlat
in
loopne
sbb
inc
or
push
push
mov
jmp
push
out
stos
push
sbb
mov
sbb
jo
or
fisttpll
cwtl
cld
dec
dec
shlb
es
test
popa
or
mov
add
inc
or
xlat
xor
loop
or
jmp
add
jns
mov
cmpsl
xor
cmc
pop
xor
xor
adc
add
sub
inc
mov
and
ljmp
push
negl
add
jns
jmp
mov
call
sub
mov
call
mov
pusha
out
ret
xchg
imul
add
inc
imul
fimuls
enter
jnp
mov
fsubrl
nop
cltd
mov
mov
pop
mov
daa
mov
sbb
sbb
jmp
add
add
inc
xor
jp
das
mov
push
pop
jns
xchg
mov
pop
mov
fpatan
lea
fcmovb
sbb
pop
cwtl
pop
xor
fcoms
jl
push
testl
and
ja
mov
aas
lods
lret
xor
pop
sub
ret
pop
adc
adc
shl
jmp
ret
mov
push
push
xchg
jmp
sbb
ss
loope
add
inc
xor
push
pop
cmp
test
scas
mov
xchg
or
mov
add
push
fcoms
outsl
add
lods
movsl
pop
or
mov
mov
inc
lods
cvttps2pi
daa
or
aam
dec
or
mov
push
xor
jecxz
std
and
inc
shrb
mov
inc
mov
lock
or
cmp
out
mov
pop
push
test
add
stc
sub
cmp
dec
stos
push
push
pop
add
sub
sti
icebp
lret
push
mov
negb
mov
mov
xchg
imul
insl
ss
pop
inc
mov
push
jp
push
and
and
mov
movsl
add
sub
inc
mov
push
adcb
rorl
decb
insb
repnz
sub
cld
cmp
mov
pop
sub
mov
out
pusha
or
inc
lahf
and
jbe
mov
inc
xchg
push
pop
subb
or
gs
neg
pusha
jo
xchg
clc
mov
push
pop
xor
loopne
pop
lcall
sbb
bound
sbb
add
push
gs
lock
cld
xor
sbb
pop
es
insl
cmp
add
dec
push
sub
xchg
imulb
ss
enter
xchg
imul
cmpb
dec
push
mov
push
loop
sahf
shl
inc
and
mov
cmp
sub
and
pop
sub
out
xchg
jns
adc
gs
add
push
jae
stos
and
sub
cmpsl
cld
in
mov
ds
jmp
lods
gs
mov
add
comiss
test
sbb
ficomps
shrl
or
negl
repz
inc
mov
sub
shl
push
ret
push
pop
icebp
xchg
push
add
pusha
mov
pop
pop
inc
adc
sbb
repnz
push
iret
or
pop
rorb
adc
test
pusha
imul
pop
neg
bound
pop
decb
pop
das
popa
and
pop
mov
or
aam
rolb
dec
loopne
fadds
ss
jl
adc
cli
and
icebp
repz
bound
int
enter
cmc
push
add
leave
dec
sub
and
jbe
cli
and
sbbl
lret
scas
sbbb
outsl
push
mov
mov
push
iret
aas
mov
dec
dec
orb
pop
lea
cmpl
pop
loope
inc
pop
pop
jmp
or
fs
sbb
push
dec
push
fsubs
jno
mov
push
mov
mov
add
shr
cmp
sub
lds
add
jecxz
push
daa
outsl
push
lcall
movsl
outsb
fidivrl
pop
or
ret
sbbl
xor
adc
inc
lock
jge
pop
sbbb
or
and
or
sbb
push
mov
pop
add
rclb
cwtl
pop
mov
push
pop
add
scas
add
fiadds
cmpxchg
popf
pop
test
loope
jl
add
enter
out
popa
pusha
ljmp
xor
mov
mov
adc
pop
pop
test
add
popa
or
and
sbb
adc
sub
repnz
lods
sbb
ret
sbb
das
fidivrs
cmp
test
pop
dec
sub
es
xchg
mov
mov
aam
aaa
mov
push
inc
andl
dec
and
push
push
push
jge
in
outsl
sub
aas
push
jmp
mov
sbb
test
or
pop
sti
add
jns
dec
je
xor
idivb
mov
dec
rcr
jbe
mov
jne
add
jle
mov
aad
add
adc
adc
mov
shll
arpl
ja
imul
fdivrs
push
fucom
push
shr
xor
nop
sub
xorb
cmp
mov
push
cmp
or
jmp
out
dec
outsl
xor
mov
mov
les
pop
push
movsl
imul
jle
pop
out
add
std
jmp
icebp
repnz
sub
push
or
push
inc
push
mov
ja
and
popa
sbb
loope
dec
push
adcb
arpl
ds
cmp
int3
xor
push
sub
pop
cmp
sub
xorb
xor
js
lret
or
pop
and
sbb
xor
push
jmp
cmpsb
push
sti
stos
add
shr
rcrb
lea
jmp
pop
shr
jnp
cwtl
inc
outsl
pusha
enter
jle
js
les
sub
jb
repnz
cs
or
add
mov
sbb
sbb
push
into
mov
jmp
repz
sub
add
add
popa
pop
adc
jl
fisubrl
cltd
ret
rcl
mov
aam
cmp
lea
fcompl
in
jnp
cmpl
push
adc
daa
or
ret
repnz
add
fsub
lret
add
ss
sbb
xor
mov
insl
scas
test
dec
xchg
add
inc
cwtl
lret
push
add
xor
add
insl
add
mov
andl
repz
xor
mov
push
sub
les
dec
push
xchg
inc
mov
jmp
xor
mov
scas
sbb
and
nop
pop
decb
adc
bound
sbb
stos
or
add
push
push
lods
je
xorb
or
add
pop
popa
lock
cwtl
mov
jl
xor
sbb
xor
or
or
dec
sub
aaa
lret
sub
mov
aas
adc
inc
aam
imul
pushf
inc
sub
jp
push
xor
pop
sub
les
pop
jmp
mov
pop
pop
sub
jo
mov
jmp
inc
sub
ffree
pop
mov
push
jge
mov
cvttps2pi
mov
fcomps
in
mov
dec
cs
pop
or
mov
mov
in
out
arpl
jmp
lods
repnz
lock
lcall
mov
push
int3
pop
fidivl
or
push
jnp
lret
test
cmp
ds
add
mov
xlat
mov
cmp
enter
out
xchg
push
add
sbb
adc
cmpsb
push
adc
dec
xchg
pop
lds
hlt
mov
popf
pop
lock
pop
sub
fstp
push
mov
mov
jle
shrb
lcall
jb
sbb
xor
cwtl
lret
icebp
mov
ds
mov
movsl
add
jmp
xchg
hlt
jbe
jge
lret
mov
mov
movsb
push
data16
adc
mov
stos
cmp
pop
pop
into
fimull
bound
add
and
shlb
in
xor
xor
pusha
mov
jg
loope
mov
negl
push
mov
call
stos
pop
es
fbstp
into
pop
mov
jle
or
cmp
push
dec
dec
rolb
insb
push
jnp
ds
pop
and
pop
in
shl
mov
psubb
pop
imul
dec
mov
sub
sbb
mov
or
inc
pop
pusha
aaa
sub
lods
xchg
cmp
or
jecxz
push
inc
bound
mov
ds
int
movsb
jp
rcll
mov
adc
sbb
das
imul
mov
imul
fcomps
nop
pop
push
sbb
dec
push
dec
jge
outsl
fs
repz
out
lahf
shl
sbb
sbb
dec
shrb
int3
inc
adc
mov
les
jbe
push
pop
push
sub
addr16
nop
sbb
inc
jae
addb
cmp
loope
pusha
cmp
or
or
and
mov
mov
jl
out
sbb
jp
push
in
mov
out
mov
shrb
pop
jmp
or
lds
sub
and
add
cmpb
push
pop
jmp
in
std
dec
daa
mov
xchg
mov
mov
jle
iret
fs
lea
pusha
test
subb
nop
rol
jnp
sahf
dec
jne,pt
inc
xchg
pop
jbe
sub
push
aam
push
nop
mov
mov
addb
xchg
xchg
in
insb
push
roll
fsts
add
out
push
inc
addb
sti
dec
pop
addr16
mov
sub
cltd
push
cmp
mov
jno
orl
cmc
jb
add
dec
pop
mov
xchg
dec
mov
push
inc
mov
adc
mov
adc
cld
inc
mov
out
inc
xchg
pop
mov
loope
aad
jp
jle
insb
mov
push
arpl
cmp
lret
xchg
jo
xor
pop
fiaddl
repz
or
xor
rorb
inc
sub
jl
aaa
push
xor
nop
lret
cmc
inc
add
pop
clc
andb
aam
push
sub
xchg
sub
push
dec
out
xchg
pop
adc
sub
add
stc
rclb
cmpsb
pop
xor
loop
shll
out
mov
pop
inc
dec
add
pop
mov
je
mov
push
adc
neg
or
or
push
filds
push
mov
jmp
and
aaa
aas
xor
stos
jb
call
xor
mov
cmp
xchg
imul
les
mov
add
je
lret
push
inc
and
push
sbb
xchg
pop
or
mov
cmp
xor
pop
sub
pop
xor
shrb
inc
sub
push
mov
rorb
test
pop
cmp
add
sub
or
hlt
je
nop
or
mov
js
fdivl
push
or
jg
lret
sbb
xlat
bnd
pusha
jnp
or
cmpsl
in
mov
stos
sbb
adc
jmp
push
sub
add
add
add
lock
mov
fmuls
fs
popf
push
imul
dec
loop
ja
push
adc
pop
sub
xorl
inc
sub
movsb
clc
pavgw
sub
scas
or
and
les
aaa
lds
daa
testb
and
pop
push
pop
pop
xor
mov
xor
xchg
push
pop
pop
stc
not
or
xchg
or
add
fsubrs
test
pop
fidivl
pop
insb
jnp
lock
pop
add
jle
xchg
movsb
mov
mov
sub
ret
dec
add
div
test
mov
not
loopne
subb
test
dec
rolb
pop
inc
jmp
or
arpl
cmc
add
pop
xor
rclb
mov
stos
and
or
jne
rolb
push
push
sbb
jp
push
nop
sbb
imul
shrl
iret
sub
or
cs
les
add
stos
adc
pop
or
xor
out
adcb
mov
dec
int3
or
sub
jmp
add
push
mov
mov
jno
inc
add
push
sqrtps
clc
iret
lcall
and
mov
cmp
incl
jmp
add
cli
cli
jge
adcb
mov
adcb
dec
mov
dec
push
daa
shlb
push
outsb
daa
leave
or
add
push
dec
add
ja
adc
add
sub
jnp
test
push
mov
inc
cmp
icebp
pop
xor
add
movl
outsl
push
push
push
mov
jae
repz
or
stos
imul
out
add
add
push
mov
sti
lcall
jo
lret
mov
imul
xlat
loopne
sahf
sbb
pusha
cmp
repz
pop
pop
loop
dec
or
xchg
cwtl
xchg
mov
pop
fisubrl
push
ss
dec
sub
push
jmp
push
cmp
lahf
movsb
out
mov
adc
cmpsb
pop
aas
shlb
out
lahf
paddusw
iret
les
inc
ret
ret
push
rorl
push
sub
mov
jmp
lds
sub
pop
clc
mov
in
lcall
mov
jo
sahf
dec
push
push
xor
test
shl
inc
dec
dec
pop
sub
adc
pop
sbb
fs
or
stos
ror
cmp
negl
shr
leave
pop
pop
or
pop
test
daa
ret
prefetcht2
pop
or
shr
js
sub
pop
add
shlb
lea
out
lock
inc
gs
dec
and
cmpsl
ret
pusha
mov
push
shlb
xor
nop
pop
mov
ss
rcrb
out
pop
add
fcmovnb
lods
daa
pop
push
push
stos
pop
add
ret
push
dec
add
test
or
pop
jns
movsl
cwtl
mov
cmp
pushf
dec
adc
xchg
push
push
out
pop
ja
call
and
sub
cmpb
gs
lock
pop
add
repnz
adc
xor
push
push
sti
stos
add
jle
jnp
mov
push
xchg
jb
test
mov
mov
mov
push
push
dec
cmp
sbbb
ret
imul
fmul
xchg
std
into
dec
xchg
dec
mov
imul
add
jbe
scas
in
and
mov
mov
push
out
test
cmpsb
ja
push
xor
jg
sbb
fcmove
and
or
jle
mov
jge
je
addl
mov
or
jge
xor
clc
push
add
lret
jne
sti
stos
inc
xor
inc
rol
out
out
fnstenv
sub
pop
jbe
aaa
addb
sbb
and
notl
dec
stos
or
sub
mov
daa
push
out
and
cmp
mov
push
dec
mov
pop
test
stc
out
cmp
sbb
dec
sbb
fildl
lods
mov
nop
adc
cli
daa
inc
shr
pop
dec
dec
cmp
out
push
aaa
xorb
pop
popa
sub
scas
insb
sbb
sub
jmp
shr
pop
clc
mov
mov
inc
lods
adc
imul
push
out
repz
and
in
stos
mov
shr
mulb
or
dec
not
rcll
popf
adc
sbbl
pusha
mov
mov
lock
mov
dec
and
jmp
subl
cmp
pop
mov
push
fstpl
lcall
xor
sbb
outsl
jmp
mov
xor
test
lods
pop
pop
and
rorl
leave
xor
adc
imul
sbb
push
mov
mov
adc
push
pop
push
stos
dec
add
notl
mov
jmp
xlat
inc
cld
pop
enter
mov
or
push
mov
sahf
push
push
inc
ss
cmp
ss
sbb
loopne
pop
cltd
mov
repnz
mov
xchg
mov
pop
jmp
sub
iret
cli
push
loopne
leave
imul
pop
xor
push
inc
mov
negl
out
push
or
popa
into
dec
cli
cmp
iret
pop
les
jne
adc
in
cs
cli
dec
je
negl
dec
mov
lock
stos
loop
mov
and
dec
xchg
dec
inc
push
push
lods
adc
mov
cmpb
add
mov
imul
popf
xchg
add
mov
push
enter
adc
push
push
clc
stc
dec
popf
out
xorb
jo
mov
rol
sbb
dec
mov
push
pop
loop
in
in
or
add
pop
mov
inc
out
shlb
or
push
inc
jno,pn
jne
cwtl
icebp
popa
mov
imul
lods
out
jmp
pop
cmpsb
ljmp
add
subl
ljmp
add
movsb
sbb
sub
pop
inc
orl
movsl
push
inc
mull
negl
mov
and
notb
inc
dec
lahf
push
test
push
push
mov
push
mov
popa
loope
int3
int3
test
mov
sub
aas
inc
sarl
aas
aam
sub
push
or
cmp
or
pop
pusha
icebp
xor
shrl
pushf
inc
or
pop
out
dec
hlt
or
push
sub
insl
sub
and
inc
lahf
sub
addl
notb
or
roll
push
add
or
add
pop
lock
rcrb
or
jmp
add
rclb
and
testl
lods
clc
mov
loope
je
mov
stos
int3
push
movl
xor
jp
lcall
or
dec
lds
add
cmc
loopne
sub
pop
mov
shrl
dec
xchg
scas
loopne
lret
lahf
xchg
sub
lock
or
jmp
mov
sub
iret
js
sub
ret
push
or
jbe
rcrb
or
and
push
scas
or
pusha
dec
xchg
cli
push
das
imul
sbb
jae
mov
push
rcll
addb
jmp
push
add
out
or
nop
cli
gs
imul
mov
scas
addr16
xchg
xchg
jo
xchg
xchg
test
cltd
lock
inc
icebp
in
popa
push
sub
cwtl
jne
sbb
inc
dec
ljmp
jns
in
jo
jb
les
jns
and
pop
sub
nop
jp
or
test
xchg
iret
xchg
pop
jo
push
mov
jo
mov
xchg
std
sahf
add
dec
push
and
je
and
inc
ljmp
shr
sub
cmp
add
or
jmp
push
pop
aam
and
sbb
mov
insl
sub
test
mov
es
std
pop
popf
inc
jg
sahf
mov
into
xchg
nop
add
lds
mov
or
push
pop
mov
sbb
mov
rol
addl
sub
push
pop
and
repz
push
scas
and
pop
push
repnz
faddl
arpl
inc
push
inc
dec
inc
cld
add
mov
addr16
push
xchg
inc
mov
xor
sbbl
incl
or
aaa
add
mov
or
cmp
cs
ret
pop
fucompp
xorb
or
ret
sbb
not
or
cmp
insb
repz
xor
out
insb
jle
dec
ret
xchg
mov
call
push
or
ret
add
call
aad
or
add
dec
pop
addb
push
pop
orl
fucomp
inc
add
add
or
push
mov
sti
ds
hlt
adc
cli
movsb
repz
pop
mov
inc
push
pop
cwtl
push
or
dec
lcall
cmp
scas
xor
popf
add
pop
sub
mov
sub
cltd
sub
jns
lods
popf
mov
push
xchg
mov
icebp
push
sbbl
fiadds
in
movsl
lds
push
push
pop
mov
xor
lcall
ss
fisttpl
sub
je
push
push
jne
inc
mov
or
lods
adc
test
dec
xor
lahf
inc
pop
mov
jne
ret
xor
stc
lock
cwtl
push
cli
inc
cs
and
dec
xchg
test
sub
in
jl
rorb
add
addr16
and
push
mov
xor
ss
sub
test
ret
jne
sub
ret
in
and
push
jbe
add
sub
inc
insl
inc
fiaddl
fnsave
cmp
out
mov
pop
add
lahf
pop
dec
mov
add
pop
icebp
call
xchg
add
pop
in
mov
outsl
loop
test
adc
lret
cmp
sbb
pop
jmp
dec
mov
mov
sbb
mov
xor
lds
mov
jb
jbe
jge
sbb
pop
test
gs
jmp
mov
adc
daa
test
pop
rcr
jbe
pop
xor
movhps
mov
jmp
or
scas
bound
mov
repnz
push
daa
outsl
dec
add
not
or
jbe
adc
adc
or
and
loope
adc
mov
movsb
add
xor
adcl
or
jns
ss
dec
rolb
gs
dec
and
enter
xchg
subl
lock
or
inc
adc
test
fcmovb
inc
pop
inc
pop
jo
mov
push
ds
pop
shr
pop
xor
or
lcall
loop
imul
jmp
push
pop
mov
imul
filds
xchg
pop
or
xchg
mov
sahf
notl
shll
jl
cmp
mov
cs
and
mov
sbb
add
shll
faddl
das
cli
inc
sub
pop
jmp
dec
dec
jns
insb
ret
mov
aas
ja
jo
sbb
jp
fcomip
xor
cmpsb
js
nop
pusha
jp
andb
ret
sub
mov
push
repnz
fldt
add
lock
cmp
sbb
push
mov
loope
jb
xorl
or
cmpsl
inc
stc
cmp
adc
in
mov
cwtl
sbb
aaa
sbbb
fsubr
repz
lahf
push
rorb
pop
ljmp
jl
push
mov
jmp
pop
test
add
or
jne
nop
cmp
hlt
mov
sbb
das
xor
sbb
or
mov
imul
push
lds
inc
mov
enter
dec
push
popa
sbb
in
lods
add
lcall
jae
cwtl
lsl
xor
mov
or
push
test
ss
jbe
sbb
das
adc
stc
cmpsb
push
xchg
sbb
push
pop
xor
or
arpl
pop
lar
mov
cmpsb
add
lret
not
and
shr
add
repz
or
and
push
push
mov
decl
pop
sub
iret
push
sbb
in
stos
data16
aad
xor
fistps
jmp
xchg
movsb
pop
sbb
mov
or
and
and
or
inc
mov
jb
and
push
and
push
subl
push
pop
not
inc
jle
push
add
push
dec
jmp
loop
dec
or
ret
enter
push
inc
scas
jle
mov
add
mov
movsbl
call
dec
fisttpll
rcl
das
push
pop
inc
shl
add
push
pusha
loop
ja
mov
xor
adc
pop
sub
xor
cmc
fidivs
popf
push
int3
in
jecxz
pop
subl
mov
cmp
scas
dec
jno
sub
cmpsb
inc
adc
adc
insl
int3
fwait
gs
iret
push
jmp
xchg
call
cmp
sub
pop
mov
mov
sbb
or
push
ss
push
loop
lret
lcall
pop
sub
std
xchg
mov
add
jb
xchg
testb
sbb
jae
xor
nop
push
push
hlt
xlat
pop
int3
shll
mov
shrl
fcmovb
pushf
test
scas
sub
pop
rclb
jge
add
and
sub
push
cmp
mov
xchg
imul
pop
in
aaa
mov
and
or
push
daa
inc
pop
or
dec
cmp
dec
push
div
inc
mov
push
pop
data16
add
shlb
aam
movsl
sub
imulb
fs
add
jl
fnstcw
jmp
adc
sub
mov
popf
inc
repz
dec
jbe
cmp
xor
sbb
out
aaa
push
pop
pop
or
inc
popf
in
add
aad
jnp
ss
pop
sub
pop
add
add
xor
das
out
in
push
xor
in
lock
mov
loopne
dec
les
lret
ret
push
lret
das
cmpsb
dec
repz
sbb
int3
mov
in
int
mov
push
add
rcll
and
imul
dec
mov
das
dec
jmp
mov
sbb
sti
pop
rcr
fdivrl
add
mov
dec
add
add
lea
lea
mov
ljmp
aam
pop
pop
daa
sub
cmp
sub
leave
xor
push
pushf
and
add
cmpsb
cmc
arpl
push
out
or
mov
xor
add
push
rorb
pop
push
pop
jbe
aaa
hlt
outsb
sbbb
push
push
pop
sub
pop
push
jo
adc
cltd
add
sub
mov
push
loope
pop
add
lods
rolb
cs
popf
lods
or
test
mov
mov
add
loop
push
cmp
shrl
lcall
inc
mov
add
inc
and
adc
inc
xchg
push
popa
jmp
lds
xchg
cmp
loopne
imul
movsb
push
ljmp
mov
pop
cmp
and
jmp
add
mov
cmpsl
sub
pop
add
push
add
inc
cltd
repnz
or
bswap
loope
adc
sti
mov
mov
push
rcrl
xlat
inc
push
push
out
cltd
fs
mov
fsubl
add
add
clc
mov
inc
lahf
lds
push
pusha
lods
inc
insl
in
jp
pop
bound
jmp
mov
nop
add
and
insb
xchg
or
pop
xchg
daa
adc
adc
sbb
or
dec
mulb
fidivrl
push
mov
data16
mov
int3
in
push
push
add
neg
les
adc
rcrb
jno
sbb
mov
call
push
push
fstl
addb
or
pop
daa
mov
outsl
push
sbb
shr
sbb
push
add
add
push
add
mov
or
mov
nop
in
or
sub
sub
lods
nop
or
popa
add
mov
shl
bound
cmpsb
mov
jne
loope
repz
rolb
cmp
lods
sub
stos
add
test
test
shld
pop
adc
mov
in
adc
jle
pop
sbb
dec
push
pusha
sarl
cmpsb
add
push
jbe
add
cmp
enter
and
mov
mov
es
push
jbe
push
xchg
or
filds
test
fwait
sbb
xchg
xchg
imul
mov
xor
in
jbe
or
sub
negl
shlb
adc
cmp
inc
ljmp
or
jp
push
shr
sbb
pusha
mulb
add
sbb
mov
dec
jmp
and
lds
inc
sarb
lock
push
add
stc
push
jmp
cmp
rcl
cmpsl
insb
xchg
and
int3
sub
mov
sub
leave
add
rcr
mov
sbb
lods
sbbb
aaa
stos
scas
dec
int
sub
pop
pop
xor
pop
jnp
adc
outsl
dec
or
cld
push
xor
loopne
add
cmpsl
outsb
xchg
add
or
and
sahf
adc
xor
add
sub
sub
and
push
dec
cld
add
mov
fisubrs
add
shr
mov
add
cmp
dec
jge
mov
das
or
data16
adcl
sub
fldl
dec
mov
pop
add
gs
sub
jns
mov
sahf
cmp
seta
xchg
test
lock
or
or
push
lds
pop
mov
cwtl
and
sub
jne
push
sbb
or
or
sub
mov
ret
cmp
addr16
and
jl
popa
inc
jmp
or
adc
pushf
pop
test
jmp
pop
push
in
jp
xor
push
jne
sub
push
xor
in
add
pop
jo
xor
xchg
lea
sub
add
and
cli
add
jns
adc
push
daa
shrl
es
popf
pop
jmp
jmp
mov
mov
add
jo
adc
lea
xor
ja
imul
jno
sbbl
test
inc
fldl
push
cmpsb
mov
decb
syscall
neg
dec
loope
xor
das
pop
pop
cli
pop
push
ds
popa
push
data16
push
or
ja
out
or
xchg
lcall
cld
into
ret
push
in
pushf
lahf
ljmp
negb
adc
jle
push
and
stos
in
outsl
insl
add
lds
inc
push
scas
addr16
aam
ret
pop
scas
mov
sbb
int
mov
cwtl
pop
sti
getsec
push
das
jne
adc
xor
mov
pop
neg
add
adc
and
push
xchg
movsb
lahf
popl
mov
cld
das
push
adc
into
pushf
incb
jns
xchg
loop
cmp
adc
ficoms
mov
sub
inc
or
push
sub
mov
int3
addb
lret
fs
sub
mov
pop
push
mov
ret
fisubl
push
sbb
add
inc
jl
out
fwait
out
fwait
sbbl
mov
adc
inc
pop
mov
dec
dec
xchg
div
jb
in
inc
fsubl
sub
sub
repz
es
mov
test
adc
and
les
lret
leave
push
pop
push
cld
fcoml
clc
xchg
jecxz
ds
xchg
fldt
cld
pusha
imul
jmp
pop
jmp
push
pop
inc
or
xor
lock
mov
sub
test
loope
sub
xchg
cmp
push
mov
sti
dec
jno
out
das
push
icebp
ljmp
add
sarb
dec
dec
jne
ja
hlt
icebp
xorb
dec
mov
imul
test
push
testb
mov
fs
test
adcl
orb
push
sbb
adc
sti
xchg
mov
je
test
push
jl
lods
push
adc
mov
add
std
mov
sub
add
insb
xor
jle
ret
je
out
mov
pop
pop
xor
adc
pop
adc
test
push
push
jo
dec
mov
sbb
xor
dec
or
subb
adc
jmp
push
clc
xor
xchg
push
cwtl
mov
cld
popf
jmp
jno
dec
mov
add
sub
movsl
push
xchg
mov
pop
xchg
xchg
daa
adc
add
xchg
jno
and
jg
jmp
mov
rolb
imul
or
jl
leave
test
cld
push
shl
gs
es
in
bound
adc
push
add
or
sbb
sarb
push
inc
inc
mov
sub
mov
mov
add
xchg
ret
pop
mov
pop
or
mov
push
or
mov
xchg
xchg
fdivrs
loopne
loopne
ja
adc
pop
dec
push
mov
ret
xor
jp
pop
ret
popa
sub
inc
cmp
sti
mov
add
inc
test
fbld
aaa
enter
in
sub
cmpsb
es
push
mov
push
sub
adc
pop
xchg
pop
dec
sub
es
mov
sbb
dec
pushw
or
loope
xor
sub
add
cmpb
mov
imul
movsb
and
test
adc
push
push
sub
fs
je
aam
ret
xlat
mov
mov
jmp
nop
js
mov
jmp
xchg
icebp
mov
push
mov
shll
mov
adc
call
adc
adc
push
mov
sub
out
pop
enter
add
push
hlt
or
or
or
xchg
addb
shl
sub
rorb
sahf
mov
movsl
ret
in
xchg
aad
cmp
mov
pop
add
lahf
pop
cmp
in
test
fists
mov
xchg
call
ds
into
or
scas
xor
mov
mov
aaa
push
jge
test
push
clc
in
ror
push
xor
daa
cmp
pushw
flds
add
roll
out
jne
mov
inc
mov
lock
and
add
cwtl
add
out
or
xor
inc
mov
aas
sbb
frstor
jne
jg
insb
fmuls
scas
mov
movsl
adc
push
jge
xchg
and
mov
push
xchg
rcrb
fsub
pop
dec
outsl
add
add
pop
shrl
and
ds
inc
add
inc
jnp
je
and
scas
push
out
dec
leave
sub
and
mov
je
sub
add
mov
push
inc
or
mov
jp
add
mov
aas
inc
call
lret
sti
lock
xor
xor
adc
mov
fldenv
loop
push
nop
push
das
sub
fcomps
fcmovnb
mov
les
or
sbb
jo
cmp
repnz
mov
cmp
inc
push
mov
sarb
or
or
sbb
and
mov
in
je
imul
add
cmp
loopne
add
cmp
add
shl
sub
div
mov
dec
rcrb
add
hlt
lret
lcall
lret
enter
and
mov
fmull
sti
test
pop
pop
lock
pushf
adc
popa
or
push
mov
jl
jnp
mov
cli
outsb
push
dec
into
in
xchg
cmp
or
push
push
add
cmpsb
cwtl
mov
inc
mov
mov
mov
xchg
mov
fisubs
jmp
das
sub
mov
rolb
rcll
push
movsl
sub
jmp
mov
std
int3
jmp
add
loop
or
or
cmc
add
add
jae
iret
jo
push
out
pop
push
or
call
jno
xor
add
mov
shlb
call
dec
push
mov
dec
test
add
sub
das
pop
mov
push
jle
or
sub
shrb
push
dec
pop
lret
mov
andl
mov
add
or
pop
push
pop
adc
pop
xchg
repz
daa
xor
mov
pop
mov
add
xchg
xor
push
mov
mov
mov
cmp
fmull
call
inc
inc
stos
and
sahf
sub
enter
xlat
adc
xor
subb
jae
push
jns
in
dec
jno
pop
mov
sub
jmp
add
cmpsb
loope
jge
xchg
add
mov
sbb
into
or
and
add
xchg
js
add
or
jns
sbbb
ss
add
cmp
jbe
add
sti
add
shl
je
inc
cmpsl
cwtl
in
xchg
fnstsw
dec
lret
lahf
xchg
into
shrl
fimuls
xchg
cmp
push
push
mov
andb
not
adc
sbb
je
enter
push
dec
jmp
push
mov
leave
sbb
lock
js
inc
int3
jmp
adc
lods
sbb
mov
nop
jmp
es
or
add
push
rorb
loopne
and
negb
call
lret
ficomps
dec
inc
xor
shl
cmp
addb
pop
push
pop
ljmp
incl
pop
test
lds
repnz
and
jb
add
into
sub
divl
popf
inc
ret
pop
mov
sbb
push
xlat
dec
ss
enter
sub
add
sub
jecxz
mov
pop
add
cltd
add
pop
les
sub
std
jmp
jg
pop
xor
repnz
ud2
lods
push
add
xchg
sub
das
fisttpl
jmp
sbb
clc
rol
xor
je
dec
dec
xor
mov
xor
inc
test
ret
cmp
movsl
pop
lds
xchg
xor
arpl
rorb
and
pop
leave
pop
and
sarb
mov
icebp
add
mov
push
jnp
adcb
fildl
out
inc
or
push
mov
addb
jmp
or
orl
xorb
mov
mov
or
or
jmp
pop
push
mov
inc
fstps
and
jmp
into
pop
pusha
xor
adc
das
subb
xor
fndisi(8087
out
pop
jp
in
or
fs
add
wbinvd
sub
dec
jno
add
loope
insb
lea
dec
mov
daa
jmp
test
ss
xor
lret
rolb
lds
jo
leave
cmp
xor
pop
imul
repnz
shrl
stos
jg
insb
xchg
pop
in
pop
sub
dec
pop
les
pusha
aaa
sbb
or
or
dec
or
lods
daa
or
incb
push
mov
inc
push
jmp
mov
xchg
or
sub
xchg
xchg
and
lcall
xchg
lcall
inc
jmp
push
push
andl
test
push
dec
lcall
fcomi
test
idiv
push
pushf
xorb
ret
push
pop
rcll
sub
mov
imul
subl
mov
or
pop
pop
jecxz
adc
hlt
lahf
push
push
subb
xchg
xor
xchg
or
cmp
push
mov
inc
andb
icebp
pop
not
cwtl
cld
jnp
mov
sub
faddl
pop
subb
and
rep
sub
fcoml
pop
push
pusha
push
dec
sbb
pop
pop
adc
mov
push
dec
jae
bsr
dec
jo
jp
mov
jle
xchg
mov
or
mov
inc
jo
adc
add
or
dec
xor
push
pusha
shl
or
jo
push
pop
out
xchg
pop
lods
add
sub
jns
xchg
mov
inc
pop
std
pop
jge
iret
pop
and
sub
mov
inc
sarb
xchg
xchg
lret
cmpsl
add
jmp
lds
fnstsw
mov
pop
popf
push
mov
xor
aad
or
test
sbb
add
xchg
add
xor
xor
clc
pop
sub
inc
fadds
jmp
inc
push
out
or
clc
mov
jnp
mov
jmp
and
xchg
dec
mov
push
push
jmp
popf
and
push
jae
push
enter
pusha
in
or
or
es
or
or
mov
ljmp
inc
testb
daa
push
pop
push
es
dec
push
popf
or
dec
jp
jnp
xor
adc
into
jge
dec
int
in
mov
adc
sub
push
mov
inc
rorb
test
push
push
sbb
inc
adc
xor
jl
scas
pop
mov
fisubs
test
mov
pop
pop
push
in
cmp
adc
jbe
lret
add
dec
test
push
mov
das
das
bound
add
mov
sub
mov
and
push
jmp
pop
xor
pop
inc
iret
movsb
add
loope
jmp
imul
test
xchg
imul
push
stos
xor
jge
int
pop
sbb
ret
sbb
clc
pusha
pop
push
cmp
sub
jle
sbb
jl
shlb
xchg
movsl
es
shrb
xor
outsb
add
gs
dec
push
test
xor
jbe
pop
jmp
dec
dec
dec
call
push
mov
xchg
jae
fs
scas
ljmp
aam
jp
mov
xchg
lock
stc
aaa
pop
mov
ret
add
loope
mov
loope
or
icebp
mov
push
push
enter
repnz
pop
sar
fdivp
out
push
mov
insb
cmp
flds
js
xchg
push
mov
xlat
mov
insb
iret
jle
mov
mov
add
and
pop
add
pop
lret
or
outsb
xorb
test
mov
push
xchg
pusha
add
mov
push
fmul
jle
xor
adc
push
ret
je
adc
stos
jmp
adc
stos
cmp
push
jne
jmp
mov
sbb
push
neg
aas
adc
popf
loope
test
pop
fidivrs
sbb
test
pop
out
ja
cmp
adc
xor
inc
mul
shr
xlat
xchg
scas
mov
push
sti
imul
pop
jno
inc
not
push
mov
push
add
roll
mov
aas
xor
jne
push
or
ljmp
push
jg
or
add
lods
sub
adc
mov
xor
jmp
mov
or
shl
add
dec
xor
and
test
ja
popf
push
add
sub
inc
rcll
inc
mov
mov
add
add
push
mov
and
jae
pop
add
je
ficompl
repnz
or
push
and
cwtl
push
push
push
push
add
repz
inc
std
js
jl
js
test
inc
test
xchg
shll
and
imul
mov
pusha
jmp
inc
push
mov
int3
xor
jl
pop
pop
jnp
and
out
add
and
and
loope
jg
adcl
sub
adc
or
or
pop
jnp
std
push
push
mov
outsl
leave
ja
clc
mov
mov
jle
in
mov
sbb
popf
push
and
or
jmp
movsl
out
orb
xchg
not
or
pop
add
mov
add
jecxz
dec
in
outsb
or
loope
push
pusha
lds
dec
shr
mov
lock
add
push
mov
add
xor
inc
pop
nop
sbb
sub
or
js
sub
fidivs
pop
cmp
mov
cmp
sahf
mov
adc
addr16
ljmp
jmp
push
mov
mov
sub
cmp
and
mov
add
in
rorb
mov
stc
addr16
popf
rcl
je
pusha
push
push
mov
jmp
pop
add
or
sbb
sub
shll
movsl
xchg
cmp
orl
push
mov
or
das
jno
push
arpl
out
dec
fbstp
addb
push
push
push
daa
mov
fcoml
pop
arpl
dec
sar
ja
mov
in
aam
out
push
mov
repz
jb
mov
mov
bound
jb
adc
pushf
push
stos
add
cli
insb
jmp
cmp
aaa
sub
or
ss
adc
call
pop
jae
int
shll
dec
add
mov
push
lahf
repz
push
push
jge
div
cwtl
inc
xlat
dec
test
fdivr
lahf
xchg
xchg
sahf
sbb
getsec
dec
dec
add
lock
lret
imul
xchg
pop
dec
aam
sbb
xchg
into
or
pop
jle
cmpb
sub
mov
pop
xchg
xchg
and
inc
in
pusha
nop
sbb
js
lods
sub
add
loope
into
addl
push
adc
sbb
rolb
push
mov
push
pop
icebp
fstpt
jb
push
cs
insl
pusha
add
or
sbb
pop
mov
aad
jne
in
gs
leave
or
insb
jno
pop
and
rolb
loope
js
testl
movsb
push
repnz
jb
ret
js
jl
bound
mov
push
neg
xor
lods
roll
push
outsb
dec
jmp
jp
adc
jns
dec
repz
adc
xorb
scas
and
add
int3
pop
push
adc
inc
rcrb
adc
hlt
pop
adc
sbb
sub
sti
pop
sbb
xor
dec
es
sbb
push
xchg
mov
cmpsl
mov
nop
adc
cmc
je
mov
scas
test
pop
xchg
or
pusha
pop
sti
aas
dec
popf
pop
fisttpl
jbe
movsb
mov
mov
pusha
sbb
dec
inc
adc
push
pop
add
insl
and
push
xor
clc
or
pop
xchg
es
push
mov
loop
std
and
in
or
rcll
rorl
jmp
rcr
arpl
mov
enter
fwait
mov
out
sub
imul
xor
xor
enter
sub
pop
call
out
aas
dec
sbbl
test
movsl
push
rorl
xchg
in
push
inc
inc
aad
shl
jne
cmp
enter
pop
lahf
push
fisttpl
out
sbb
add
mov
ja
dec
or
ret
jge
lods
push
jmp
icebp
mov
sub
push
push
jne
and
jmp
inc
push
outsl
test
mov
into
test
pushf
movsl
jmp
daa
das
mov
sbb
jne
and
add
loope
jle
cld
shlb
das
mov
cltd
into
jp
add
jmp
pop
sbb
in
call
push
push
and
adc
jbe
mov
cltd
je
pusha
mov
and
mov
shr
sub
add
test
mov
mov
sub
shll
inc
cltd
int
push
sub
xchg
pop
test
push
pushf
pop
movsb
jmp
and
jae
sub
push
popa
ljmp
out
xor
xor
push
test
jge
nop
mov
cmp
imul
pushf
mov
mov
sbb
sbb
xchg
sbb
cmpsl
je
data16
shlb
loop
movsl
test
sub
cmp
fcoml
das
orb
ds
jo
loopne
add
or
dec
jnp
js
sbb
lret
rorl
cli
repnz
inc
idivb
cmp
and
test
or
jmp
or
push
push
pop
out
add
or
pop
pop
test
scas
push
xor
mov
dec
fsubrl
inc
lods
add
jnp
clc
fiadds
cltd
inc
leave
sub
mov
pop
cmpsl
jl
cmp
ret
sarb
jno
lock
popa
jmp
out
mov
push
adc
lea
orb
inc
or
ds
xor
push
xchg
fmul
jmp
sbb
push
arpl
fcoml
xchg
inc
pop
pop
popf
cwtl
inc
enter
jmp
mov
pop
dec
adc
stos
and
xchg
dec
out
add
js
or
sti
jle
loop
test
ljmp
sbb
cwtl
bound
subb
insl
xor
xchg
bound
bound
add
fs
rorb
inc
pop
jae
in
fsubl
rcl
pop
fcmovu
pop
fcomps
mov
mov
sbb
pop
hlt
adc
xor
inc
clc
lret
movzwl
insb
into
pop
and
mov
pop
lahf
clc
add
xor
inc
or
inc
jp
aas
jmp
adc
je
jmp
or
adc
jnp
xchg
insl
push
adc
insb
imul
inc
mov
out
inc
not
adc
mov
lock
add
jno
mov
loope
loop
pop
testl
cmpsb
xchg
adc
rolb
in
test
dec
jecxz
sbb
adc
push
repnz
js
ja
inc
leave
lea
push
adc
push
dec
pop
add
and
sub
rolb
pop
sub
mov
or
xor
mov
out
cmc
pop
pop
add
mov
jge
loope
fiadds
out
sbb
mov
adc
jae
xor
enter
outsb
pusha
into
call
and
or
and
pushf
mov
add
loopne
in
test
pop
pop
rolb
cmp
pop
orl
ja
dec
add
jbe
loope
add
pop
mov
lret
inc
mov
inc
lds
rol
sub
fbstp
jl
and
or
aas
cmp
inc
mov
push
pop
test
dec
pop
adc
pop
aaa
cmpsb
subb
inc
add
mov
outsb
lds
push
jp
sbb
pusha
or
pop
outsb
ret
orb
jmp
push
pop
inc
mov
push
andl
jmp
dec
or
fnstcw
inc
jo
push
aad
popa
stos
push
adc
mov
push
mov
data16
cmp
sub
adc
mov
push
mov
xchg
xlat
in
test
sbb
add
xchg
popa
cmp
or
push
mov
sub
mov
lds
test
push
push
sbbb
jecxz
mov
add
or
xchg
out
jne
and
jmp
add
add
jge
jae
dec
mov
pop
mov
mov
pop
roll
xor
jmp
inc
push
inc
sahf
pop
rorl
sub
mov
fs
mov
push
mov
push
inc
jns
sub
hlt
jmp
lea
add
and
test
mov
and
add
stos
xchg
rolb
or
icebp
int
adc
xor
insl
es
xchg
ss
and
jo
xor
loopne
out
add
push
jmp
xor
or
insb
sub
cs
cli
xor
ret
ljmp
cmc
stc
jg
xchg
mov
dec
pop
cmpb
lock
in
pop
mov
daa
xor
add
pop
mov
jge
rcrl
mov
cmpsl
roll
add
xor
mov
into
pop
sub
popa
push
imul
adc
sub
inc
push
popa
mov
xor
jmp
iret
in
mov
sub
mov
mov
pop
add
orl
jo
pop
cmpsb
pop
sub
addb
das
mov
movsb
out
das
shll
xor
fs
stos
push
push
push
jns
test
push
sub
sub
adc
movsb
dec
daa
loopne,pt
fisubl
mov
nop
sub
add
pusha
dec
mov
jmp
mov
cli
push
jl
mov
roll
and
or
cmpsl
pop
mov
aam
xor
or
dec
mov
int3
xchg
insb
and
aaa
aaa
sub
add
jecxz
int
loop
movsl
das
neg
inc
mov
add
xchg
in
addb
sub
ret
or
add
movsb
enter
dec
aaa
push
mov
pop
cld
popa
add
adc
or
jmp
aas
cmp
fmull
mov
sub
scas
sbb
aaa
nop
test
push
sub
xchg
stos
or
pop
sbb
and
pop
pop
xchg
pop
ljmp
mov
push
mov
movsb
push
and
and
out
and
fisubrs
sub
mov
push
pop
and
les
fld
shrl
push
imul
pop
push
ljmp
sub
or
xchg
pop
push
mov
not
or
int3
hlt
cli
xchg
dec
jle
int3
push
mov
leave
sbb
jg
add
cmp
aad
enter
xchg
dec
push
ljmp
sbb
push
xchg
mov
xchg
or
and
dec
addl
or
mov
pop
mov
clc
mov
lods
js
mov
jp
loope
cmp
test
shlb
mov
pop
repz
and
mov
loopne
dec
mov
add
mov
pop
add
or
pop
es
or
xor
cltd
in
das
les
aad
stos
aas
xor
sbb
jle
push
inc
sub
repz
push
repz
imul
push
test
lods
add
stc
or
jmp
push
push
push
pop
dec
or
add
add
jmp
cwtl
aad
jg
or
push
pop
adc
or
jle
cmp
push
call
and
negb
jmp
jb
rorl
sub
cmp
leave
pop
dec
mov
fdivrs
xor
add
xor
pop
mov
mov
jmp
push
xchg
mov
mov
mov
jb
dec
ret
lock
push
xchg
adc
jmp
adc
jno
add
jmp
dec
xchg
fs
push
jg
dec
jbe
sub
or
fildl
mov
out
test
jmp
sub
sub
nop
or
add
push
sub
push
negl
mov
rcrl
outsb
jmp
fcoms
pop
push
push
jmpw
mov
lret
sub
sub
and
jno
imul
xchg
jns
bound
mov
xchg
popf
fs
lret
mov
ljmp
dec
push
jg
popf
pop
jmp
inc
jns
and
inc
loopne
lods
and
rcrl
inc
leave
jp
and
rcl
rcll
or
outsl
dec
push
jmp
and
jecxz
or
pop
cmp
hlt
fdivrl
cmp
mov
xorb
les
dec
cmp
nop
inc
or
adc
pop
and
arpl
mov
test
bound
out
xchg
lcall
inc
push
sub
aaa
movsb
xor
or
push
inc
stos
sub
loopne
pop
js
push
pop
scas
pusha
adc
sub
je
jl
sub
lods
mov
add
out
jb
mov
mov
push
setns
es
pop
popa
stos
mov
add
cwtl
inc
pop
cs
push
add
ds
cmp
pop
push
inc
or
shr
jmp
add
aas
test
mov
shlb
test
or
mov
push
leave
xchg
dec
pop
mov
loop
jo
xchg
ds
fldl
shrl
xchg
mov
mov
leave
and
das
bound
sub
lret
aaa
pop
and
out
rclb
imul
pop
aas
roll
cmp
adc
lock
shr
mov
jge
push
jns
xor
into
sub
mov
jne
mov
mov
jp
adc
bound
add
jmp
and
out
push
pop
pop
cmp
push
mov
inc
scas
or
xlat
pop
neg
jg
dec
ljmp
rclb
sbb
pop
push
jl
insl
scas
pop
mov
shrb
xor
insb
enter
push
jbe
inc
jmp
pop
dec
and
in
and
add
and
xor
and
sub
sahf
and
xchg
fldcw
xchg
sub
inc
or
jp
lahf
push
ret
pusha
mov
cmp
fistl
adcl
shl
xor
add
jne
inc
mov
push
sbb
sub
or
dec
fisttpll
popf
adc
push
push
xor
push
xor
sub
data16
aas
mov
dec
fcomp
mov
jno
push
pop
dec
fsts
add
or
sbb
mov
xor
mov
stc
pop
loopne
fwait
popf
mov
or
xor
mov
cs
sbb
mov
sub
les
in
ficoml
push
mov
stos
mov
or
jae
or
mov
cmp
jp
or
pop
out
mov
bnd
jo
push
jge
mov
std
mov
pusha
lods
pop
aaa
and
out
xchg
sbb
sahf
cli
xchg
mov
lods
cli
out
sub
and
jge
pop
xchg
test
dec
dec
adc
lods
pusha
roll
enter
push
ret
adc
loopne
mov
ds
lcall
test
mov
inc
jne
sub
jae
dec
xchg
ficompl
or
push
xchg
aaa
add
inc
mov
out
push
jo
aad
push
mov
and
mov
lods
add
xchg
testb
test
jecxz
roll
ret
mov
cmc
not
dec
retw
inc
cs
subb
mov
loop
pop
push
mov
and
jae
mov
xor
shl
frstor
imul
adc
popf
mov
xor
inc
inc
add
jbe
mov
jb
popa
mov
mov
xor
and
pop
sbb
jl
out
mov
push
in
dec
adc
imul
and
add
push
ja
push
iret
xchg
and
lds
adc
pop
sub
pop
push
sbb
adc
mov
push
out
mov
aad
jmp
xor
fimuls
test
les
dec
rorl
mov
std
scas
pop
mov
sbb
and
mov
ret
and
sti
iret
fldcw
or
mov
jp
shlb
orb
fsubrs
sbb
adc
inc
out
popa
out
mov
jno
mov
insb
sbb
and
cmp
scas
pusha
lods
dec
pop
aaa
decb
loope
ror
testl
jmp
mov
pop
jb
ret
pusha
jl
sbbb
add
mov
adc
icebp
pop
out
adc
sahf
das
pop
in
jecxz
or
repnz
js
shll
out
fisttps
adc
dec
cmp
or
or
mov
jne
push
dec
hlt
rolb
xor
lret
pop
mov
ffreep
sbb
aas
xor
pusha
inc
fidivl
leave
sbb
jp
jle
mov
adc
mov
stc
shl
cmpsl
ja
xchg
test
pop
cmpsb
dec
push
loope
jbe
subl
mov
adc
pop
je
orb
jne
imul
mov
movsb
scas
test
cltd
pop
imul
sarl
arpl
and
das
lahf
lahf
out
orb
push
cmp
jmp
repnz
in
lret
hlt
jae
jl
add
dec
pop
aaa
sub
or
add
adc
pop
pop
pop
int
je
jp
inc
fidivl
pop
jmp
mov
ret
arpl
mov
cmpsl
gs
push
jmp
lret
sub
rol
je
or
not
or
jp
add
rcrl
jne
xchg
lcall
add
jge
divl
add
add
mov
jg
dec
mov
out
push
fcoml
mov
add
push
adc
mov
jns
mov
mov
fisttps
or
and
movsb
mov
shlb
call
jge
sub
inc
push
pop
xchg
push
sub
pop
cmp
adc
or
sbb
inc
xor
jno
test
aaa
xor
test
push
mov
mov
adc
adc
inc
repz
push
dec
sub
fdivs
hlt
or
inc
push
dec
inc
mov
cmp
imul
aam
mov
push
fwait
add
sub
push
rcl
jo
ds
lret
les
push
pop
int3
inc
and
shr
adc
jno
mov
test
add
lods
sbb
aaa
sub
adc
inc
sbb
pop
loop
push
dec
pop
pop
inc
into
push
push
push
mov
pop
in
lret
push
pop
add
add
and
mov
mov
pusha
push
sub
iret
xchg
jmp
dec
out
inc
jecxz
sub
loopne
test
mov
sub
outsl
jmp
sbb
push
in
adc
adc
adc
sbb
pusha
aas
sbbb
mov
int
fwait
sub
es
cmp
jmp
lea
test
jne
loopne
lea
xor
inc
mov
add
xchg
xor
shll
push
pop
xchg
les
test
fisubs
inc
push
add
pop
or
sub
arpl
dec
inc
mov
cs
or
dec
inc
mov
pop
cmp
sbb
loope
inc
scas
or
push
add
mov
stos
mov
jp
cltd
mov
mov
jnp
dec
add
dec
das
insb
ja
pop
pusha
leave
mov
cmp
or
pop
sahf
scas
dec
xor
xchg
or
adc
or
dec
lcall
test
lock
rclb
and
cmp
push
mov
and
movhps
pop
xor
iret
mov
out
insl
inc
or
mov
adc
jbe
push
add
imul
push
leave
and
jo
ss
popa
loop
js
loopne
mov
pop
movl
jp
dec
sub
ret
push
xchg
cmp
add
pop
inc
xor
movswl
push
xchg
mov
or
fs
popa
inc
and
mov
fmuls
aad
mov
test
cmp
xchg
pop
push
pop
push
shrb
cmpb
dec
or
bound
mov
cli
rorl
sub
and
jb
and
adc
js
mov
out
add
jle
mov
and
pop
add
mov
daa
mov
inc
leave
in
pop
rolb
sub
pop
data16
decb
inc
in
pop
or
cs
fwait
imul
pop
daa
bound
daa
pop
jecxz
mov
push
jecxz
push
push
push
push
loopne
cmpl
lock
pop
shl
lods
or
mov
push
loope
sub
iret
shlb
repz
xor
or
mov
pop
xor
mov
or
clc
pop
fidivrs
subb
js
and
jp
out
adc
push
ljmp
or
push
sbb
int
jp
imul
inc
sbb
pop
daa
push
sarb
xor
in
and
ds
sub
scas
dec
not
shr
sub
xor
out
and
sub
pushl
add
sbb
loop
pop
scas
pop
or
xchg
test
lret
stc
jae
xacquire
ret
cs
or
cld
push
fucomip
popa
mov
gs
push
cmpsb
les
mov
inc
lock
jne
and
mov
pop
or
test
or
jnp
ja
mov
cmp
adc
cld
mov
leave
sbb
mov
push
lret
mov
test
std
clc
pop
int3
sub
inc
mov
sub
in
sahf
aad
sbb
iret
or
outsl
or
xlat
add
arpl
pop
and
or
pop
aam
mov
adc
mov
pop
pop
mov
lahf
sub
arpl
ret
lret
sbb
inc
pop
mov
lea
outsb
mov
push
xchg
add
mov
or
add
pop
xrelease
jge
imul
es
call
push
addr16
adc
jl
aad
inc
shr
push
or
jmp
xchg
lock
ret
push
pop
cmc
jmp
add
push
or
stos
pop
or
sahf
push
popf
stc
mov
xor
sahf
and
push
mov
loope
cmp
dec
push
bound
and
not
pop
mov
mov
cmp
pop
adc
jo
jmp
push
or
add
call
push
mov
dec
jp
ljmp
push
or
hlt
lcall
xchg
cltd
jb
inc
push
push
dec
push
inc
insb
cli
pop
push
fwait
movaps
sti
inc
or
jmp
pop
mov
xorb
adcl
cmp
cmp
and
mov
mov
push
or
sbb
cld
testb
xlat
mov
add
enter
push
pop
cs
cmpl
sbb
cmpsl
adc
jno
and
int
ffree
or
imul
jae
sbb
add
and
or
xchg
out
xchg
rep
js
sub
add
wrmsr
inc
add
ljmp
leave
adc
ss
fstpt
cmp
lahf
jge
adc
test
stos
shlb
add
push
mov
lcall
inc
in
jmp
push
mov
jge
mov
ret
adc
add
add
push
push
ret
add
leave
shll
cmpb
jge
mov
add
not
andb
xor
xor
xchg
mov
stos
out
dec
pop
call
sbbb
movsb
sub
push
sub
add
mov
push
mov
jmp
dec
mov
or
pop
fidivl
adc
xor
pop
add
xor
in
add
bound
cld
dec
or
dec
out
dec
ret
stos
sub
cmp
mov
sub
in
sbb
push
mov
cltd
add
lea
pop
inc
loopne
push
mov
jmp
arpl
xchg
fldenv
push
jle
add
sub
sbb
adc
jno
pop
inc
rclb
jp
dec
inc
repnz
mov
inc
ja
call
je
inc
ret
jle
add
in
inc
shl
leave
xchg
lods
negb
cmp
pusha
cwtl
pop
movsb
push
pop
lds
and
in
jl
stc
mov
fdivrs
cwtl
inc
inc
mov
ret
pop
cmpsl
mov
xorb
out
adc
sbb
scas
push
adcb
out
sbb
push
xchg
jnp
jns
in
das
adc
ret
xchg
cmp
int
sbb
mov
rcrl
repz
int
mov
inc
pop
mov
ret
jmp
aaa
push
mov
out
adc
mov
outsb
add
insb
ds
dec
daa
pop
or
ss
mov
movsb
mov
jecxz
daa
in
popf
mov
pop
clc
and
push
add
or
mov
sbb
jle
push
push
negl
ret
push
adc
lods
add
jnp
jl
xor
bound
or
dec
jbe
or
and
add
adc
pop
cmp
mov
sub
pop
pop
jne
aas
test
test
int3
mov
dec
and
cmp
pusha
pushf
xor
pusha
daa
or
ja
insb
dec
or
in
adc
call
andl
stc
sub
cmp
divb
rorb
mov
push
ret
inc
daa
dec
xor
in
out
dec
mov
add
push
sub
pusha
insl
or
add
xor
inc
int3
out
pusha
or
xchg
loope
std
cltd
add
lock
jae
adc
dec
cwtl
inc
push
push
in
mov
mov
jb
inc
ja
addb
jle
xorb
dec
les
movsb
mov
aam
test
add
call
pop
add
add
jmp
push
rorl
inc
adc
popl
lock
push
and
mov
aas
shll
scas
into
xlat
sarb
movsl
push
cmp
fadds
xchg
stos
dec
sbb
les
cmp
fucomp
insb
cmp
or
cmpsl
aam
jae
cmp
pop
mov
jmp
push
loope
outsb
cmc
or
aad
xchg
jmp
pop
ret
aaa
imul
push
mov
dec
dec
adc
jo
inc
and
repnz
imul
xchg
xchg
mov
or
mov
iret
add
mov
pop
and
ffreep
das
add
popa
data16
pop
adc
shrb
or
add
scas
subb
cmp
or
js
xor
or
jmp
adc
and
mov
hlt
xor
inc
dec
xor
in
daa
push
jo
addl
in
std
and
out
lods
fldl2t
shr
inc
pop
aaa
lret
stos
cmp
or
or
movsl
pop
test
fmull
pop
mov
iret
popf
xchg
cmp
das
dec
or
xlat
pop
and
jmp
subl
pop
adc
and
lret
push
push
loopw
and
jns
dec
mov
pop
pop
insb
push
mov
jge
flds
scas
jne
cmp
push
mov
add
cld
fxam
scas
add
sbb
jge
imul
in
lret
push
and
bnd
xlat
xor
push
rcrl
test
movsb
mov
jmp
or
testl
mov
daa
xor
testl
sub
mov
jb
movsb
dec
lret
jg
push
call
xor
pop
jae
lods
pushf
dec
arpl
arpl
pushf
adcl
cwtl
push
inc
popa
jp
test
pop
inc
int3
add
and
lods
inc
or
pop
icebp
push
hlt
mov
outsl
lret
ja
mov
jp
call
and
xor
es
xlat
or
es
cwtl
sahf
lahf
mov
sahf
fstps
aam
pop
jmp
addb
and
sub
jp
insl
inc
push
sbb
dec
daa
jmp
push
jnp
cltd
or
pop
jmp
daa
icebp
js
addb
add
push
inc
es
jecxz
pop
stos
negl
sbb
add
test
add
push
out
mov
dec
outsl
mov
and
les
cwtl
sub
aas
clc
orb
cwtl
add
adc
test
cli
xchg
mov
sub
cwtl
sub
pop
add
ret
push
xchg
sub
or
add
mov
pop
pop
aam
and
add
mov
mov
push
shrb
push
jbe
sti
loopne
jmp
add
rorl
scas
std
fimull
out
mov
mov
das
sub
pop
jb
cltd
repz
enter
add
jmp
lahf
jecxz
adc
leave
sbb
sub
xchg
mov
jo
mov
mov
pop
push
test
push
daa
push
int3
aas
daa
jmp
pop
dec
push
dec
add
inc
adc
dec
inc
adc
jmp
in
call
sub
jg
das
add
jmp
hlt
push
in
pop
sub
push
jo
xchg
sbb
mov
add
nop
mov
push
bound
sbb
sti
sub
add
and
inc
add
jecxz
sbb
add
cmpb
add
rcr
fmull
inc
jmp
lcall
jb
add
clc
pusha
lcall
or
pop
xchg
jo
js
add
cmp
pop
or
cld
aas
or
add
adc
loopne
jmp
add
sub
js
jmp
jae,pn
outsb
aas
jo
or
add
push
ret
cwtl
movsl
sbb
sbb
sbb
in
outsl
testl
xlat
roll
andb
and
ret
jno
add
mov
inc
adc
jmp
mov
jo
jbe
or
jmp
cmpl
inc
cs
testb
fs
pop
jmp
daa
inc
frstor
jae
lock
add
dec
or
inc
test
sar
cs
add
pop
sub
adc
jmp
mov
add
xchg
mov
movb
aad
ljmp
add
add
jmp
pop
inc
mov
push
pop
mov
data16
out
leave
and
xchg
pop
je
add
xor
sub
test
scas
lods
dec
mov
mov
xor
ret
xlat
outsb
pusha
mov
mov
ja
dec
sbb
sbb
cld
dec
loop
push
pop
sub
pusha
imul
jne
xor
jmp
push
stos
stos
out
sub
jl
push
mov
push
repnz
rcrb
fldt
mov
inc
es
add
lods
mov
jp
jmp
mov
das
nop
mov
inc
sub
sub
push
xchg
jmp
adc
mov
adc
mov
leave
or
pop
dec
sub
or
popf
pop
test
adc
push
or
sub
fstpl
xchg
xor
pop
mov
ret
or
cmc
loope,pt
mov
stc
loope
imul
adc
outsb
or
dec
xor
xchg
dec
add
pop
add
add
lea
fucomp
jle
nop
dec
pop
push
mov
sub
ret
and
test
inc
or
pop
mov
xorl
movsl
jns
mov
in
push
into
push
mov
pop
scas
hlt
sub
test
adc
push
push
or
dec
fs
push
pop
inc
pop
shr
add
enter
jmp
mov
cwtl
inc
adc
push
insb
cmp
jmp
push
dec
dec
nop
addb
inc
or
pop
ljmp
outsl
xchg
rolb
lock
sub
test
mov
mov
mov
sub
xchg
mov
mov
cmp
push
pushf
mov
push
mov
packuswb
mov
xchg
mov
mov
adc
je
xor
and
xchg
push
and
add
xor
jmp
sbb
add
jl
sub
les
rorb
aam
cmp
cmp
outsl
add
testl
testb
adc
cmp
jge
mov
pop
mov
xlat
adc
sbb
lock
stos
lret
push
pop
ds
push
dec
int3
shlb
xor
dec
adc
test
dec
out
pop
xchg
jmp
pop
sub
xchg
sbb
daa
sbb
jno
pop
dec
adc
sbb
dec
xor
jp
xor
dec
dec
sub
sbbl
dec
adc
add
cmp
lds
stos
std
test
add
iret
adcb
xor
mov
fdivrl
dec
fs
or
icebp
jmp
clc
pop
lcall
push
mov
cmc
hlt
dec
add
push
push
push
inc
popa
das
shl
mov
ljmp
pusha
sbbl
orb
xchg
and
sub
out
les
dec
stos
lret
cld
mov
lods
rclb
inc
jae
push
xor
cli
fs
cs
add
fdiv
pop
jns
add
int
jp
ret
pop
adcl
in
ja
add
clc
push
sub
mov
int
jp
jl
mov
shr
adc
or
mov
popf
jp
cwtl
xchg
mov
lods
jae
mov
add
jg
mov
pop
jnp
or
xchg
sbb
je
loope
rcr
push
loop
xchg
addr16
pusha
sub
ljmp
pop
cmp
pop
xchg
ret
ja
mov
inc
jmp
pop
int3
mov
bound
inc
das
int3
imul
push
call
push
jmp
repz
ds
sub
mov
imul
sbb
and
sub
jae
jns
dec
push
cwtl
das
mov
out
push
sub
mov
cs
push
ds
xor
push
inc
jno
int3
rolb
movsb
cmp
pop
pop
jmp
dec
addl
pop
pusha
notl
mov
sub
stc
les
adc
lods
and
adc
jne
xchg
sub
jns
cmp
pop
mov
jnp
sarl
jmp
and
add
cwtl
mov
rol
xchg
or
sub
mov
insl
fiaddl
jmp
cmpsl
lahf
xchg
pusha
sbb
aas
adc
sbb
jmp
out
xor
add
popa
imul
inc
pushf
aaa
adc
and
xor
sub
add
push
jno
mov
adc
jbe
js
push
mov
cld
mov
mov
pop
pop
adc
jne
jnp
xor
cmp
pop
jae
ljmp
fdivrl
scas
push
push
ljmp
lds
pop
loop
jmp
scas
cmp
aad
and
push
mov
std
sub
jnp
xlat
or
mov
outsl
movsb
dec
enter
sbb
pop
sub
inc
xlat
mov
ficoms
inc
xor
and
or
mov
and
xchg
push
or
pop
mov
adc
imulb
cli
sarb
rolb
pop
and
enter
jae
mov
pop
sub
ja
jmp
xchg
popf
popf
in
jmp
inc
sahf
idiv
imul
push
js
outsl
pop
rcrb
cmp
arpl
jne
out
mov
sub
add
pusha
nop
adcb
cld
leave
add
fldl2t
bound
in
sub
push
and
shr
std
add
dec
cmpsl
and
lahf
insl
adc
adc
and
outsb
ret
out
inc
sti
lods
aaa
jbe
out
clc
or
add
xchg
lock
cwtl
test
sub
in
das
xchg
in
pop
push
add
adc
imul
dec
jo
mov
jbe
data16
push
jl
out
dec
or
adc
pop
jbe
inc
imul
add
decb
xchg
lds
je
fs
xchg
or
and
dec
or
add
shll
rcrb
or
cmp
or
pusha
or
sub
pop
mov
adc
dec
inc
add
add
xlat
cli
sbb
shl
push
ret
push
imul
ret
addl
into
mov
dec
cs
pop
ljmp
or
test
jb
test
add
pop
push
hlt
loop
push
mov
and
loop
call
sbb
or
sti
ja
mov
xchg
in
pop
orb
add
mov
push
pop
push
jnp
inc
cmpb
std
jg
cmp
test
sub
fldenv
xor
rorl
add
lock
and
ss
repz
xchg
add
xor
mov
xlat
inc
pop
xchg
pop
rolb
dec
notl
inc
ljmp
dec
popa
dec
jae
pop
dec
push
loope
jmp
les
das
or
xchg
add
int3
adc
fldl
adc
and
stos
push
and
mov
xchg
push
pop
adc
lods
inc
lret
pop
shll
xchg
sbb
sbb
jmp
push
cmp
cmp
insl
ja
add
adc
xorb
push
add
mov
push
aas
sub
ret
xchg
jnp
insb
or
mov
subl
fs
pop
data16
jle
cli
jns
pusha
fmuls
xchg
push
js
pop
jns
mov
push
pop
push
adc
shl
jnp
ljmp
std
enter
inc
imul
push
push
and
lcall
test
dec
aad
je
push
sti
aaa
jmp
sbb
or
xchg
xchg
test
scas
add
ds
push
leave
mov
loop
ss
hlt
ljmp
add
aas
add
movsb
pop
fs
pop
insb
ljmp
fsts
lret
mov
push
into
xor
stos
cmp
fimuls
push
sub
aaa
test
iret
jno
movsb
jne
out
xor
das
dec
int
pop
cltd
adcb
or
dec
data16
and
pusha
xchg
push
cwtl
inc
or
jne
or
or
mov
lock
dec
push
call
adc
shl
push
int3
jbe
jbe
and
push
inc
bound
daa
inc
ja
sbb
dec
jno
sbb
ret
sub
add
mov
aad
popa
mov
or
sbb
sbb
cmp
jo
mov
sbbl
jg
es
push
mov
lds
pop
mov
dec
jmp
pop
mov
dec
fisttps
insl
inc
cs
mov
adc
xchg
les
add
push
add
xchg
neg
or
push
aas
push
jmp
lret
test
movsl
cmp
pop
imul
call
xchg
jo
cmp
sbb
and
fdivs
push
sti
into
dec
adc
add
shrb
mov
mov
xor
and
cltd
dec
pop
pop
xor
test
or
dec
jno
andb
push
dec
mov
mov
mov
jne
sbb
jmp
add
ljmp
outsl
pop
push
mov
jmpw
test
movsb
pusha
pop
fsubl
xchg
testb
pop
mov
cltd
inc
xor
sti
dec
jl
ljmp
pop
scas
mov
sarl
pop
jmp
test
lods
sub
mov
mov
jmp
pop
pop
dec
or
add
sbb
push
adc
sub
mov
test
scas
daa
push
pop
push
leave
fstl
sti
roll
pusha
notl
or
sbb
adc
xor
cwtl
jecxz
rcrb
jmp
lret
adc
rcr
mov
sub
or
scas
pop
loope
stc
clc
aam
xor
jns
stos
jle
pop
sbb
adc
push
pop
rolb
loopne
outsl
jno
sub
pop
inc
or
cmpsl
xchg
jmp
or
stos
dec
dec
xor
push
popa
in
mov
jmp
addr16
dec
aas
stc
call
and
xchg
push
pop
test
loop
sub
mov
lahf
cld
rclb
push
cmp
pop
cmp
cmp
sbb
push
mov
and
sahf
out
and
or
scas
subl
not
or
adcl
fs
orb
jns
xor
aaa
xchg
adc
inc
jg
pop
xor
pop
pusha
and
dec
add
sbbb
shrb
sub
pop
nop
inc
jmp
movsb
jmp
out
cs
lock
xor
sbbl
jmp
jp
pop
jmp
dec
push
stc
push
jle
out
bound
repnz
mov
nop
cwtl
add
jg
rolb
mov
pop
mov
fldl
cmp
mov
xor
sbbl
jno
or
sub
jmp
les
out
xor
push
rcrl
jg
and
test
add
pusha
adc
pop
add
sub
inc
pop
pop
add
xchg
and
push
adc
pusha
mov
xlat
and
jno
or
into
test
loope
scas
jg
mov
pop
std
aad
add
push
jb
adc
or
add
inc
jo
fucomp
push
lock
add
inc
add
sub
flds
mov
xor
sti
xchg
je
repz
jecxz
xor
mov
das
xchg
jecxz
inc
pop
in
ss
mov
and
push
xor
scas
lds
push
sub
and
mov
dec
mov
fidivrl
jb
dec
shlb
jg
addb
add
daa
dec
push
jb
inc
or
decb
dec
jge
xor
sub
lret
xor
mov
jecxz
testl
ret
jmp
jmp
and
or
mov
push
adc
sub
rcl
fcoms
cmp
sbbb
xor
jns
pop
adc
lahf
mov
push
mov
jmp
add
cmp
mov
imul
dec
xlat
inc
mov
or
or
scas
pop
xor
push
fisttpll
std
pop
add
and
fs
mov
insb
std
pushf
dec
out
inc
jge
mov
xor
aad
xchg
xchg
push
mov
cmp
jmp
rcl
ret
push
andl
adc
xchg
xor
add
sbb
into
pop
jne
dec
xor
orb
jae
xor
daa
jmp
out
push
mov
inc
mov
xchg
jmp
out
pop
test
clc
mov
sbb
rorb
mov
dec
es
inc
push
out
or
insb
sbb
xor
adc
popf
sbb
sbb
and
and
inc
sub
inc
or
jns
mov
cmp
ret
pop
int
and
xchg
or
imul
jge
lret
loop
nop
mov
pop
mov
mov
and
pop
sub
pop
pop
jmp
lods
repnz
add
add
sub
adc
push
add
sbb
push
mov
add
and
or
mov
shr
add
lock
jmp
push
ljmp
sub
sbb
cmp
popa
arpl
les
pop
mov
ret
or
adc
xor
mov
bound
cld
in
jle
sbbb
jae
subb
inc
mov
push
mov
mov
inc
sbb
push
push
rorb
cs
imul
dec
and
out
sub
and
movsb
std
flds
mov
repz
jmp
addr16
out
aaa
lods
enter
inc
movsl
aas
test
gs
test
push
push
sub
sbb
sub
mov
push
mov
hlt
pop
jo
dec
jmp
adc
mov
scas
or
add
or
pop
popf
pop
mov
dec
out
movsb
hlt
imul
rclb
cmp
std
mov
dec
xor
jmp
mov
fdivl
push
test
data16
mov
xchg
mov
ss
add
xor
pusha
jae
xor
mov
pop
push
icebp
mov
lret
aam
lods
sbb
mov
xchg
push
fisttpll
mov
or
adc
dec
lcall
jmp
or
push
or
cmp
adc
mov
xchg
fsubrs
add
test
adc
xor
inc
icebp
push
mov
pop
cmp
pop
test
lahf
mov
loop
sub
notl
fsubrl
adc
repnz
mov
dec
push
adc
in
jnp
shrl
dec
jae
sub
mov
mov
aam
jmp
push
or
dec
les
mov
test
mov
sub
and
push
cmp
add
nop
orb
mov
sub
inc
imul
add
jmp
mov
dec
push
loope
jmp
stos
cld
push
push
hlt
js
dec
gs
adc
pushf
mov
push
ljmp
inc
jmp
or
shl
mov
test
or
loop
lahf
push
cmc
adc
mov
inc
rclb
add
mov
int
mov
add
mov
shrb
jmp
idivb
or
addb
xchg
mov
cmp
sub
or
popa
popa
pop
inc
in
aas
xor
es
adc
xchg
call
outsb
mov
or
lret
and
cwtl
mov
and
out
les
add
mov
lret
or
add
adc
inc
adc
cwtl
dec
pop
inc
out
xchg
sbb
cltd
inc
popl
and
loopne
mov
cmp
enter
jge
xor
bound
add
push
xchg
loope
mov
lcall
sbb
mov
jo
mov
repz
cmp
lcall
or
or
cmp
stc
cmp
into
pop
xor
add
cmc
push
adcl
dec
pop
lret
pushf
add
adcl
mov
rorb
out
sub
or
scas
xchg
or
mov
call
adc
push
aas
sub
adc
xchg
jae
push
push
adc
outsl
cmc
ficoml
fisttpll
jbe
push
pop
lds
push
xchg
repz
mov
inc
adc
stos
cmp
sub
push
mov
add
subb
rclb
dec
sub
xlat
jb
inc
sarl
pop
sti
scas
daa
ljmp
push
lods
in
push
outsb
xor
or
xchg
pop
pop
sti
jge
aas
mov
dec
adc
xor
cs
jge
add
adc
ret
pop
mov
out
push
push
ja
add
or
jmp
cmp
fld1
xchg
loop
gs
rcll
scas
cltd
mov
mov
orl
pop
stos
add
or
fdivrs
mov
mov
mov
ljmp
mov
xor
inc
scas
into
fs
mov
jmp
outsl
add
push
lods
clc
lahf
push
or
jl
mov
adc
inc
dec
int3
dec
mov
jmp
jecxz
or
xchg
fisubrs
cmpsb
lods
adc
std
aas
cmp
shl
lahf
sub
or
push
add
test
hlt
fisubrl
mov
push
shl
mov
sub
sbbl
jmp
add
pop
sbb
xor
loopne
push
inc
imul
or
and
push
rcl
enter
lea
notl
sbb
xor
cld
sbbb
ss
mov
xlat
jns
sbb
test
mov
imul
std
push
pop
pop
ljmp
push
mov
out
fidivl
ret
sub
pop
jmp
ds
dec
movsb
sbb
jge
dec
or
bnd
pop
hlt
jg
pusha
cmp
lret
mov
enter
ffree
nopl
stc
push
jmp
rolb
xchg
fs
sahf
sahf
inc
or
xor
dec
sbb
adc
mov
add
loop
xchg
push
dec
rorl
das
push
test
stos
and
push
ljmp
mov
xor
and
sub
mov
sbb
add
fs
add
push
or
loope
icebp
mov
xchg
xor
pop
mov
dec
xchg
fcomi
dec
pop
movsb
jo
jmp
loopne
cmpsl
les
sub
outsb
cmpsl
lret
inc
inc
xchg
insb
dec
push
mov
dec
ret
decb
mov
xor
fimuls
add
into
sbb
inc
sbb
cld
aaa
mov
and
decb
outsl
jno
sahf
jl
pop
ja
bound
cmp
scas
fcmovne
dec
repnz
mov
div
add
sahf
insl
xor
not
outsl
mov
out
aaa
sub
inc
popa
test
in
add
jo
or
sub
cmp
leave
test
imul
pusha
mov
or
or
fadd
repnz
jg
in
andl
pop
xlat
add
mov
lret
or
addl
test
stos
loop,pn
push
bound
sub
push
and
fld1
adc
inc
shrb
xor
jp
add
or
jecxz
pop
pop
dec
push
mov
lret
adc
dec
sahf
push
lods
cmpsb
add
data16
into
mov
inc
ret
add
nop
push
sub
push
add
cmp
sbb
bnd
enter
jnp
adc
pop
pop
dec
cs
dec
dec
ss
pop
and
or
rorb
ds
push
add
inc
clc
adc
test
xorb
xchg
in
add
and
mov
aam
cmpsl
jo
mov
loopne
mov
add
mov
inc
pop
push
cld
loop
rcr
sbb
push
popf
mov
dec
in
int
in
inc
test
mov
cmpsl
or
sbb
inc
sub
popa
jp
imulb
or
inc
jmp
pop
adc
lods
cmp
mov
push
sub
sub
mov
dec
dec
mov
add
mov
and
cmp
popf
or
gs
dec
cmp
xchg
aam
xchg
add
popa
outsb
push
scas
inc
sbb
stos
loopne
push
mov
cmp
leave
inc
gs
pop
pop
push
xchg
jbe
mov
neg
jmp
ss
aas
mov
iret
xorb
das
xchg
and
cmp
mov
cmp
pusha
jle
cbtw
pop
push
push
add
dec
mov
popa
fs
mov
add
mov
xor
cmp
jo
add
insb
das
and
addl
hlt
mov
mov
icebp
mov
in
dec
adc
adc
cmp
out
sub
loopne
inc
mov
fs
cmp
rdtsc
xchg
loop
je
jp
aas
inc
stos
and
sub
mov
push
loopne
or
jmp
int
mov
add
and
aam
push
imul
xchg
daa
sub
jb
in
daa
mov
add
mov
nop
or
xchg
xlat
or
shrl
push
lods
xor
into
ds
inc
jo
push
add
sbb
jmp
mov
push
mov
pop
mov
pop
lahf
js
and
sbbb
add
xchg
shll
mov
jnp
loope
jp
dec
jge
outsb
cmp
pop
stos
add
mov
jle
pop
inc
outsb
fidivrs
pushf
mov
out
ja
fpatan
enter
decb
out
sub
jb
addr16
add
push
push
push
sbb
push
pop
repz
mov
rclb
mov
pop
mov
push
jmp
loop
push
ret
and
mov
cwtl
test
xchg
add
and
fwait
inc
test
add
aas
mov
cs
movsl
jno
aas
negb
fnstcw
push
pop
push
mov
or
not
adc
pop
jle
push
cmc
pop
fisttps
mov
xchg
daa
sub
pop
insb
sbb
mov
sub
insl
icebp
ret
jo
cwtl
or
inc
sahf
lret
rcll
or
mov
or
insl
xchg
adc
pop
xchg
and
enter
mov
cmc
loop
dec
shll
cmpsb
stos
jp
loopne
sbb
nop
fiaddl
inc
push
in
neg
inc
faddl
sbb
mov
out
add
shl
adc
std
xor
icebp
lock
sbb
les
imul
cmp
push
cld
popl
add
cmp
jnp
in
dec
js
pop
mov
pop
push
add
rorb
ljmp
pop
or
add
jmp
jb
pop
fildl
ljmp
push
lock
mov
aad
pusha
push
mov
insb
add
lret
pop
add
fistpl
rorl
cmpsb
in
daa
push
dec
add
pop
push
mov
rolb
push
xor
jmp
add
mov
cmp
inc
fbstp
mov
push
add
adc
add
mov
sbb
pop
mov
or
inc
cld
mov
ret
out
addr16
pop
or
dec
xchg
sub
cmp
mov
add
sub
push
in
pop
mov
mov
popf
js
xchg
pop
cld
ret
pop
mov
push
call
push
xchg
pushw
lods
jecxz
and
cmp
inc
loope
repnz
xchg
xchg
xor
sbbb
pop
pop
add
aam
iret
push
pushf
xor
ret
push
repnz
stos
push
jne
push
movsl
insb
loope
sahf
add
xchg
mov
neg
leave
pop
out
adc
add
mov
push
cltd
fiaddl
pushf
or
roll
mov
add
xchg
sbb
or
in
std
and
add
jo
jmp
xchg
clc
jo
es
dec
sahf
pusha
xor
and
add
xlat
popf
rcrb
cmpsb
stos
push
jl
ss
cs
or
adc
inc
lahf
daa
push
push
mov
inc
pop
push
jge
push
mov
inc
and
mov
addl
xor
adc
sbb
ja
lods
outsl
push
cmp
adc
ret
push
mov
and
add
std
rorl
jne
fsubs
push
jp
enter
sbb
pop
xor
xchg
lods
add
push
mov
mov
mov
or
stos
shrl
mull
mov
repz
test
aaa
out
dec
test
pop
xchg
push
ret
out
adc
lods
das
jmp
push
data16
add
or
mov
push
lock
add
mov
add
jno
xor
push
repnz
xor
mov
push
push
or
dec
sti
jg
adc
push
icebp
xchg
imul
mov
shll
loop
inc
cwtl
sub
das
test
and
and
daa
mov
push
sbb
mov
pop
and
jle
or
jne
cmp
arpl
sub
mov
shll
push
push
mov
xchg
push
fdivrs
gs
add
inc
dec
inc
clc
xor
mov
lret
add
movsb
in
or
idivl
push
or
lock
push
bound
or
push
add
mov
add
hlt
mov
jl
xchg
jnp
xchg
add
cmp
cmp
fidivl
jae
push
lret
pop
gs
cwtl
jae
adc
jo
adc
xchg
dec
mov
clc
adc
mov
clc
into
call
cli
jge
testb
pop
jno
lods
out
fwait
pop
aas
xor
pushf
pop
dec
inc
xor
movsl
pop
and
lods
outsb
repnz
or
ret
add
mov
inc
repz
scas
into
movsb
pop
std
adc
pop
pop
push
mov
in
push
jmp
or
data16
insb
cli
jb
les
cmpsl
add
xchg
cmp
in
das
aaa
mov
cli
mov
jbe
jl
loope
dec
sub
aam
dec
sbb
push
push
stos
mov
movsl
loop
add
les
xchg
mov
sub
xor
jo
jne
int3
sub
stc
leave
sub
shlb
xchg
add
dec
mov
das
iret
xchg
sbb
repz
popa
in
idiv
shl
popf
fsubrp
int
stc
jg
add
je
inc
inc
hlt
out
call
xchg
data16
ret
roll
xor
jae
clc
xor
leave
sub
test
ljmp
stos
outsb
xor
mov
dec
test
mov
adc
jge
pop
xchg
ret
inc
xchg
cmpb
fcoms
jmp
or
push
rol
test
mov
and
cmp
cmp
movsl
dec
pop
cld
and
dec
and
movaps
cmpsb
in
mov
add
roll
lds
iret
add
add
adc
mov
pushf
or
lods
xor
lcall
cmpsb
xchg
ds
daa
mov
or
adc
cmp
outsl
pop
or
cmpb
mov
call
daa
or
push
dec
in
lret
cmp
cmpsb
popa
adc
add
xchg
rcrl
into
sbb
push
add
add
sbbb
sub
js
adc
push
test
movsb
cli
rorb
jmp
dec
inc
sbb
aaa
add
scas
cmpl
and
jp
fcoms
inc
xchg
adc
loopne
xor
cs
data16
mov
in
loope
or
pop
push
icebp
mov
rolb
loopne
fstpt
push
push
add
jbe
and
mov
out
nop
xor
inc
imul
test
mov
jne
xchg
cld
mov
sub
rcrb
hlt
enter
shll
pop
mov
fldt
call
test
icebp
nop
add
mov
cmp
leave
lods
xor
jmp
jl
push
pop
push
or
jmp
add
add
mov
lret
add
push
xchg
jmp
mov
lahf
cmpsl
int3
std
mov
shl
dec
xchg
inc
inc
sub
mov
pop
iret
aam
add
sbb
jl,pt
adc
inc
add
adc
jbe
or
faddl
sub
cmp
les
xchg
push
les
mov
inc
repnz
mov
sub
mull
add
sub
adc
std
push
pop
inc
adc
xchg
push
ret
mov
ds
cmp
push
push
aam
popf
icebp
or
xchg
inc
jmp
loope
sbb
fsubl
sbb
jo
popa
gs
jp
loop
cmp
xchg
dec
shr
dec
pop
inc
jg
nop
dec
sbb
pop
out
push
test
add
cmp
add
loop
adc
push
add
ret
sti
daa
mov
imul
xchg
mov
popa
movsl
repnz
jle
mov
faddl
dec
ljmp
mov
shr
push
mov
inc
js
mov
jge
clc
pop
nop
lcall
outsb
orl
in
das
sub
out
sbb
jnp
repz
xchg
adc
sbb
sti
call
mov
push
inc
mov
dec
jo
dec
dec
lock
xchg
ret
xchg
pop
aas
jl
pop
rclb
mov
jl
daa
xchg
xchg
mov
push
jo
push
lock
sub
xor
shrb
outsl
outsl
imul
xor
das
loop
xchg
pop
and
mov
adc
mov
xor
repnz
scas
push
jmp
pop
and
push
pop
je
mov
or
nop
pop
or
je
pop
mov
xchg
arpl
ljmp
hlt
sbb
stos
icebp
out
movsl
and
add
sub
sub
jae
jno
pop
out
pop
add
xor
xchg
mov
add
ret
aam
fists
sub
xchg
subl
mov
test
pop
jmp
fwait
jns
add
adc
and
into
jns
sbb
pop
cs
std
lret
or
adc
mov
js
popf
dec
daa
jge
xlat
cmp
pop
mov
add
adc
pop
push
fldcw
mov
aam
jmp
aam
stos
mov
dec
fcoms
scas
mov
push
xchg
out
out
jne
or
or
or
in
adc
sub
mov
adc
sti
dec
in
cli
cltd
wrmsr
ret
negb
insl
xor
pop
jns
data16
scas
add
or
inc
jns
sub
dec
arpl
repz
pop
loope
ds
inc
sahf
mov
lods
jmp
test
and
daa
push
dec
push
les
or
in
shl
sbb
add
sbb
add
jae
das
out
xor
aad
push
pop
push
mov
mov
mov
stc
sub
daa
aaa
xlat
cs
mov
lret
cmp
pop
hlt
jne
sbb
mov
xchg
push
xchg
jb
pop
sub
cmp
mov
pop
mov
xchg
jae
movsl
cld
dec
stos
cmp
lret
xorb
mov
push
mov
push
push
mov
in
fs
push
addb
push
imul
xor
sub
pop
sub
jae
push
stc
and
leave
mov
pop
cmp
pop
fnstcw
xchg
adc
les
mov
std
push
jns
pop
scas
adc
icebp
fisubs
add
add
inc
cmpsb
push
movsb
bnd
popa
loop
cld
or
icebp
or
pop
cli
xor
sbb
mov
sbb
cmc
xor
mov
incb
fwait
sub
test
adc
jne
lods
inc
out
push
inc
movsb
xor
pop
push
andb
clc
push
inc
pop
outsl
add
jmp
das
add
or
dec
mov
cmp
adc
je
and
xchg
and
loop
lahf
cmp
push
sbb
push
enter
js
pusha
fsubs
shr
addb
jmp
into
lds
cmc
mov
in
and
mov
add
into
in
adc
inc
xchg
je
int
sub
sub
push
dec
pusha
sub
xor
pop
mov
and
jp
or
mov
xor
hlt
pop
lret
adc
add
inc
das
out
or
sub
sbb
add
mov
jge
daa
xor
jp
dec
and
inc
in
negl
shrb
cmc
shl
sbb
mov
sub
cmp
ffree
or
xlat
and
pop
nop
mov
and
mov
sub
jmp
sti
xchg
or
mov
jmp
pop
pop
sarl
shl
pop
or
ds
stos
inc
push
add
push
loopne
shrb
xchg
push
das
lds
jbe
sbb
lcall
xor
pop
lods
xchg
add
jne
adc
popa
aad
je
outsb
aam
sti
add
jle
lods
push
adc
sbb
movsl
xchg
sub
or
pop
xor
push
mov
stos
fstps
sbb
mov
ret
and
fisubrs
das
test
push
and
loopne
add
sbbb
pop
xchg
dec
loop
ret
sbb
adc
xorl
cmc
push
jns
addr16
sbb
leave
adc
and
std
arpl
cmp
xor
or
mov
mov
add
out
lods
adc
or
mov
in
add
out
jge
je
mov
or
testb
inc
mov
and
push
iret
and
and
popf
mov
sbb
push
xchg
outsb
pop
mov
push
in
pop
adc
inc
daa
pop
pop
repnz
xchg
mov
mov
push
push
js
pop
sbb
in
and
jns
xorb
and
mov
adcl
add
or
outsb
dec
add
sub
jle
pop
ds
dec
inc
and
repz
fadds
imul
mov
jb
jno
subb
arpl
push
ja
cmp
icebp
xor
jmp
out
inc
adc
orb
adc
fisubs
mov
or
jne
add
jmp
daa
scas
mov
test
inc
mov
add
inc
push
mov
adc
shll
fists
push
aam
or
inc
mov
cld
push
xor
cmp
add
dec
dec
adc
mov
dec
bound
jae
test
jp
loope
pop
dec
das
rol
sarb
hlt
push
add
adc
icebp
push
aam
sub
pop
inc
jmp
pop
out
lea
mov
xchg
adc
push
sub
pop
xor
scas
inc
xor
bound
ljmp
push
out
pop
mov
lcall
ds
push
jns
push
aam
adc
inc
cli
add
outsb
add
jo
neg
sarl
adc
jmp
sbb
or
sub
add
xor
outsl
and
mov
idivl
dec
mov
adc
sub
iret
push
sbb
dec
sbb
sbb
sub
leave
std
cmp
mov
push
mov
xorb
mov
or
ret
scas
add
popf
ret
lret
xor
test
xor
xor
call
add
jecxz
mov
push
or
rolb
cmp
xor
add
adc
or
add
mov
pop
jmp
pop
clc
lds
into
adc
fwait
push
or
push
out
in
fwait
sbb
mov
jecxz
jg
in
xchg
icebp
je
rcr
inc
jmp
daa
push
pop
test
pop
xchg
mov
aaa
add
loopne
icebp
mov
pop
dec
jno
jno
push
cld
adc
dec
hlt
addr16
and
rorl
inc
dec
jg
mov
and
testl
pop
or
aas
sub
mov
dec
aas
in
jle
jecxz
movsb
cmp
jge
lret
std
cmp
scas
adc
mov
adc
mov
ja
push
jb
int3
in
icebp
xchg
sti
jl
lods
loop
cmp
xor
loopne
or
push
in
divl
mov
or
cmpsb
icebp
sub
push
cld
stos
mov
aaa
outsb
test
push
xchg
mov
pusha
icebp
xchg
jl
icebp
scas
dec
jb
pushf
cmpsl
push
in
xchg
xor
cmpsl
mov
roll
xchg
push
pop
mov
jmp
dec
cld
shll
add
mov
sarb
lret
sahf
push
add
int3
movsl
or
xchg
jp
sub
test
stos
mov
xor
lods
push
jmp
push
das
pop
jl
insb
aad
loop
xlat
mov
push
mov
jbe
xor
mov
je
cmp
movsl
pop
pop
jge
adc
jbe
repnz
jp
or
mov
sub
add
xchg
add
sahf
lock
sbb
jmp
mov
arpl
jg
shlb
or
add
pop
cmp
repnz
je
mov
cs
in
pop
push
into
add
cltd
sub
adc
je
inc
test
ljmp
jle
enter
cmp
sbb
dec
dec
std
jmp
or
or
lret
add
gs
nop
pop
or
insb
shlb
adc
jle
add
and
dec
jp
je
push
in
iret
insl
addb
and
xor
int3
bound
pop
movsl
or
lds
mov
xor
push
and
mov
sbb
or
jg
mov
loopne
rolb
pop
push
push
sub
mov
sbb
cmpsb
inc
mulb
adc
or
adc
pop
jmp
mov
inc
sub
cltd
outsl
repnz
repnz
outsl
or
frstor
daa
mov
adc
push
xchg
les
mov
xor
out
pop
and
xor
pop
mov
mov
push
sub
aas
jne
add
out
jg
xor
in
outsb
mov
sbb
std
jbe
shr
in
leave
pop
inc
jmp
loop
lahf
fdivr
sbb
add
stos
jo
dec
cmp
mov
pop
or
jmp
add
xor
cmpsl
push
push
xchg
jns
cmp
push
daa
mov
inc
loopne
jge
add
adc
test
sbb
sbb
data16
ss
and
ret
cltd
and
jmp
nop
jne
bsr
mov
sub
mov
test
loop
cs
jb
sub
xor
xchg
cld
adcl
test
popf
or
fnstenv
pop
dec
mov
pop
mov
es
aam
cmp
mov
and
jg
push
add
jmp
mov
fwait
or
ret
adc
loope
push
cltd
in
sahf
dec
sub
add
sbb
xchg
mov
push
repnz
sub
sbb
je
and
xchg
pop
inc
daa
jge
sbb
dec
dec
push
jae
gs
cmp
int3
dec
sub
cltd
in
sub
arpl
xor
mov
add
mov
aas
cmp
xchg
imul
dec
sub
xor
push
fdivl
mov
mov
mov
mov
fldenv
rorl
fadds
and
rolb
ja
rolb
mov
jne
pop
xor
push
and
imul
les
jnp
enter
add
sbb
or
insb
adcl
xchg
jns
mov
sub
xchg
int
jae
sub
or
dec
xor
xchg
mov
and
add
mov
pop
repz
notl
jae
dec
sbb
xchg
push
cmp
imul
jge
sbb
push
mov
shll
call
push
add
cli
sub
das
lds
and
add
sub
add
dec
jmp
add
and
in
or
cwtl
or
xchg
jne
xchg
pop
sbb
imul
aaa
pop
out
pop
dec
pop
es
inc
add
jbe
xor
lock
sub
call
add
cld
dec
or
or
dec
shll
call
pop
bound
sbbb
shr
pushl
sub
jno
icebp
cld
or
jae
sti
lret
adc
dec
flds
jmp
mov
int
and
xor
xor
movsl
dec
ret
int3
iret
mov
lods
pop
addb
repnz
push
aas
call
ret
mov
mov
inc
jge
icebp
dec
mov
mov
aas
push
out
push
xchg
subb
pop
dec
jno
cmpsb
rolb
inc
push
push
push
jne
add
leave
cmp
pop
subb
iret
sahf
in
popf
clc
push
lcall
pop
or
push
xor
push
adc
sub
mov
xor
xor
shll
decl
repz
jnp
xchg
pop
xorb
insl
or
pop
mov
push
jl
cmp
jmp
fs
mov
lret
ret
jae
push
sbb
adc
inc
sub
jbe
mov
nop
orl
or
inc
and
jmp
testl
add
xchg
push
loopne
mov
pop
je
pop
psubusb
fistps
imul
and
shrl
sbb
lahf
sub
mov
adc
pop
push
add
sbb
xor
loop
xchg
adc
adc
or
repz
shll
pop
cs
add
dec
pop
inc
aam
hlt
push
es
sub
enter
gs
mov
cmc
cmpsl
sub
adc
outsb
fiadds
mov
inc
add
les
push
shrl
inc
inc
out
inc
mov
xchg
or
leave
or
push
es
add
jl
add
push
adc
out
mov
adc
dec
cld
cmc
pop
test
pop
mov
jp
jmp
xchg
cmpsb
inc
push
lock
les
or
xlat
test
sub
repnz
mov
setp
xor
jmp
jmp
jno
cmp
icebp
cmpsb
or
mov
scas
arpl
popf
mov
adc
jl
mov
js
shl
das
or
movsl
mov
or
mov
xor
loope
push
ljmp
loop
mov
push
xchg
jbe
add
repnz
shrb
mov
mov
cld
loop
mov
add
push
pop
mov
outsb
shrl
add
stos
sbb
lock
jmp
cld
push
xor
pop
sbb
ljmp
das
push
mov
dec
push
sbb
jle
xor
repz
out
jnp
mov
rcrl
mov
sub
sbb
pop
sub
cmp
sbb
dec
jmp
je
ss
and
add
loop
xor
cmc
xor
and
mov
paddb
sbb
fidivl
add
divl
imul
cmpsb
cmp
sbb
bound
sub
inc
adc
cmp
pop
xchg
pop
pop
scas
sub
mov
dec
fwait
inc
fsubrs
fwait
js
mov
cmc
mov
sub
mov
mov
inc
rclb
fs
dec
push
loope
inc
rol
jnp
pop
aaa
adc
add
lds
jl
icebp
sub
movsb
xor
or
inc
daa
xchg
enter
inc
mov
jp
dec
or
add
rorb
sub
daa
pop
xor
shll
fstps
sub
scas
movsb
ss
jns
pop
in
and
mov
dec
or
mov
lock
jecxz
sbb
imul
test
and
decb
leave
add
aas
js
xchg
mov
shlb
sbbb
test
mov
in
daa
jle
inc
jmp
call
and
les
push
das
mov
xchg
ljmp
sub
subb
movsl
mov
jge
adc
dec
dec
pop
cli
adc
push
mov
ss
sub
int3
add
movsl
jle
mov
test
pop
out
test
fnstcw
mov
stos
out
sbb
cltd
add
push
inc
insb
push
dec
jmp
sarb
xchg
fmull
fsts
or
adc
addr16
xchg
nop
sub
fidivs
adc
je
and
lods
popa
in
jl
inc
ficoml
jmp
pop
negb
mov
in
lret
xchg
sub
data16
mov
mov
pop
pop
xorb
fisttpll
les
xchg
and
sbb
loop
shlb
jae
dec
xor
jmp
test
sub
stos
xchg
inc
andb
jbe
shlb
bnd
pop
lcall
aam
js
xchg
pusha
xor
and
loop
add
pop
jmp
mov
sarb
push
mov
dec
hlt
xor
out
mov
pop
push
out
jp
sbbl
xchg
dec
dec
inc
test
inc
rol
out
fisttpll
je
loop
mov
mov
add
out
lock
pop
fcmovb
xor
jl
loop
ja
cmp
or
cmc
mov
cmp
cli
jb
adc
cmp
out
lods
pop
mov
lock
cmp
stos
pop
test
sbb
into
push
jmp
dec
aad
adc
and
sub
or
fneni(8087
je
xorl
or
call
scas
add
out
ret
dec
fst
daa
imul
fwait
xor
fistl
sub
stc
imul
ljmp
sub
adc
mov
movsl
lea
enter
test
test
dec
dec
lods
dec
je
inc
mov
stc
lods
xchg
cmp
pop
and
cmp
xor
mov
scas
aad
mov
repnz
or
jg
push
add
je
xchg
aad
or
pop
mov
cs
dec
dec
shll
div
cmp
les
clc
pop
adc
cli
pop
das
mov
adc
popf
dec
inc
dec
jmp
pop
xchg
test
sbb
lock
shrb
mov
jmp
cmp
pop
addl
fwait
addr16
jmp
mov
addb
add
sbb
lds
xor
and
add
push
cld
rcrl
xor
xor
clc
xchg
cli
dec
test
imul
xchg
shlb
push
pop
push
enter
push
and
add
adc
sarb
ja
movsl
xchg
or
add
push
sbb
xor
scas
mov
dec
andb
adc
jge
cmp
cmovb
jns
gs
push
mov
jge
ljmp
notb
mov
push
mov
cmp
andb
xchg
lea
nop
push
adc
dec
clc
inc
jae
clc
add
in
inc
add
ret
push
jmp
mov
orl
repnz
pop
pop
shrd
test
xor
addb
push
push
in
hlt
cwtl
push
and
jle
or
push
les
ret
add
fstps
inc
icebp
pop
popa
push
mov
push
data16
add
enter
inc
pop
pop
gs
sbb
mov
test
in
cli
or
push
out
add
inc
lock
aaa
push
cmc
and
pop
dec
mov
lcall
insl
push
xchg
or
sbb
pop
inc
push
dec
mov
cwtl
imul
cmpsl
fisubrs
sbb
add
lahf
mov
sbb
lret
test
lock
lret
mov
jecxz
sti
mov
cs
fwait
add
add
jle
cmpsl
dec
movsl
clc
shl
fcomp
dec
dec
stos
and
ljmp
pusha
push
nop
sti
mov
push
clc
push
inc
out
popf
pop
test
and
jg,pn
dec
add
xchg
ja
sub
out
call
mov
or
and
sub
jnp
dec
and
mov
stos
or
jl
pusha
or
add
je
imul
sub
add
lret
xor
push
or
adc
xor
sbb
int
pop
gs
movsb
add
jno
aas
test
repnz
xchg
in
fstpl
aam
xchg
adc
xor
jg
int
dec
imul
test
cld
shlb
mov
add
repz
pop
inc
pop
sti
lret
pop
mov
imul
mov
dec
and
pop
neg
inc
aad
daa
cmpsb
xor
push
jmp
pop
jnp
pusha
pop
shr
mov
xchg
mov
push
sub
dec
jp
imul
inc
sti
sbb
xor
fidivs
adc
shl
add
push
in
or
inc
mov
je
aad
pop
fs
xor
xchg
mov
aam
scas
xor
add
dec
in
das
dec
cld
xchg
jmp
or
jbe
jg
std
lds
push
jne
push
add
push
pop
cmp
sub
ror
cmp
pusha
push
js
out
dec
ljmp
hlt
add
mov
mov
push
stos
shl
adc
jle
cli
pop
mov
xchg
mov
add
add
in
mov
imul
sbbl
loopne
dec
and
adc
icebp
jbe
cmpsl
decb
jmp
enter
dec
fucomip
rcll
call
sti
mov
or
dec
data16
or
stos
jl
or
fmuls
roll
repz
dec
fcompl
shr
mov
cmp
pop
pop
cwtl
mov
jl
lods
add
push
adc
inc
mov
xor
mov
xor
add
dec
xor
jmp
and
outsl
push
mov
ds
or
xor
popa
inc
jg
inc
cld
gs
add
shlb
add
mov
adcb
decb
int
ret
pop
dec
test
pop
push
jmp
ret
mov
rol
loope
cmp
stos
sub
pop
xor
ljmp
je
mov
fcomps
clc
jmp
dec
aam
sub
aas
movsl
add
and
push
jmp
pop
cmpl
xchg
pushf
add
inc
cmp
mov
lcall
addb
aas
test
cmp
push
andb
clc
scas
sub
or
pusha
mov
cmc
out
daa
jo
imul
ds
sti
jle
and
cmc
and
fisttps
dec
stos
sub
cs
inc
add
mov
mov
sbb
lret
movsb
sub
or
inc
cmp
popa
or
add
ljmp
dec
icebp
inc
outsb
into
xor
adc
add
jg
pushw
in
cmp
sbb
loop
jecxz
inc
sarb
fldt
pop
ret
fsubr
iret
push
mov
mov
or
lock
inc
out
add
fcoms
movsb
adc
pop
setnp
lods
aas
mov
inc
sub
mov
add
dec
ret
mov
mov
into
imul
stc
cmp
push
pop
inc
push
mov
mov
adc
add
push
adc
push
sub
je
scas
mov
jb
jnp
mov
jle
test
cmpsl
pop
fidivs
sbb
jle
add
inc
pop
into
sub
cmp
add
es
leave
aas
sub
pop
add
fisttpl
push
lcall
divl
mov
jmp
clc
out
test
mov
into
sub
ds
sub
outsb
shlb
add
rclb
repnz
hlt
xor
je
js
rcrl
inc
jmp
js
dec
cwtl
fwait
jmp
xorb
sbb
pop
push
dec
aad
push
xchg
fmull
xchg
aam
add
add
jbe
cmp
adc
jne
mov
and
xor
outsl
scas
and
test
push
or
push
inc
sbbb
cmpsl
push
sbb
xor
mov
in
adc
push
enter
sti
aaa
cmp
xchg
jg
and
dec
cmc
xchg
das
pop
jns
leave
ja
pusha
cwtl
sub
into
js
xchg
or
jae
mov
stos
or
cmp
dec
push
verw
mov
xchg
push
cmpsl
in
lods
shrl
dec
mov
and
push
mov
das
mov
xchg
adc
decb
repnz
mov
rorl
outsl
push
ja
push
pop
pop
fsts
or
xchg
sahf
push
inc
nop
jne
push
inc
jo
test
adc
mov
jmp
popa
pop
push
inc
cmp
int3
aam
adc
push
xor
cltd
incb
or
adc
cltd
mov
xchg
movsb
jecxz
dec
test
dec
cld
enter
sub
adc
les
pop
push
mov
adc
and
insb
push
out
jmp
mov
int3
adc
adc
mov
hlt
in
mov
or
repnz
outsb
repnz
inc
or
out
sub
mov
sub
jne
sub
cld
dec
lcall
ja
jmp
adc
dec
xor
pop
or
pop
sub
mov
fwait
bound
subb
jmp
add
push
inc
mov
xlat
pop
rcrb
dec
add
cld
dec
fld
inc
xchg
pop
cmp
pop
xchg
cmp
sbb
ja
movsl
and
ficomps
into
mov
dec
add
jp
into
mov
adc
pop
lret
jnp
cmpsl
jo
dec
inc
mov
fnstcw
xor
arpl
and
sub
mov
sub
push
xchg
pop
add
or
in
add
xor
lds
lock
add
es
or
dec
jae
cltd
add
aas
testb
shlb
aas
pop
jmp
stc
push
pusha
ficoml
cs
add
into
sbb
adc
adc
sbb
sbb
shll
fldl
push
dec
sub
fimull
sarb
std
js
popf
push
rclb
jmp
cltd
clc
mov
mov
mov
pop
push
jb
bnd
lods
add
sahf
lea
mov
pop
mov
pusha
andl
dec
nop
xorb
push
xorb
fildl
test
pusha
xor
inc
outsb
cld
dec
push
mov
adc
testl
push
inc
ds
pop
pop
lds
push
mov
in
clc
pop
xchg
fstpt
cmp
adc
push
test
inc
mov
pop
add
cltd
push
dec
pop
and
lret
or
imul
add
repnz
or
enter
jg
repnz
or
push
cmpsb
sbb
fsubr
adc
adcb
das
mov
or
mov
filds
aaa
xchg
xor
jmp
popa
and
leave
pop
mov
jmp
mov
cli
and
sub
or
pop
rcrl
je
or
adc
inc
dec
xchg
loopne
shll
scas
loop
add
mov
jmp
mov
lods
xchg
pop
int
and
pop
fsubr
lds
pop
addl
push
push
arpl
adc
pushf
xor
addr16
arpl
and
or
imul
data16
pop
xchg
mov
pop
repnz
mov
fdivs
xchg
jns
or
stc
and
or
inc
flds
jae
je
xor
pushf
out
or
jmp
ret
adc
daa
push
jb
ja
xchg
cmp
jbe
pop
ljmp
sbb
pop
repnz
push
repz
dec
jp
dec
or
shll
and
pop
mov
xor
shrb
repnz
sub
clc
rolb
icebp
cld
pop
or
movsl
push
cmpb
dec
stos
dec
inc
test
adc
lods
cmp
push
je
and
xchg
fst
sbb
mov
and
add
pxor
repz
aaa
pop
add
jnp
lock
arpl
imul
inc
sbbl
cwtl
iret
loope
sub
into
test
test
divb
mov
jecxz
xor
fsubrl
jp
xor
xchg
or
mov
je
dec
fcoms
aaa
add
fdivrs
jl
adc
jno
aad
ljmp
dec
das
inc
sbb
dec
and
push
mov
sbb
imul
mov
testl
mov
out
cld
push
ficoml
icebp
in
mov
out
test
push
mov
cmp
sub
lds
daa
nop
or
fldenv
insl
aaa
pop
mov
lods
out
je
inc
jg
icebp
or
pop
push
jmp
mov
cwtl
enter
arpl
ljmp
jle
ds
daa
bound
enter
cmp
out
scas
mov
roll
fld
mov
dec
adc
or
mov
loopne
sub
xorb
xor
push
add
mov
and
add
testb
outsl
out
dec
shl
rcll
jae
pop
orb
pusha
paddb
or
test
sbb
xchg
push
xor
or
fsts
mov
sbb
dec
cmpl
push
les
pop
inc
cltd
adc
mov
mov
aam
dec
mov
xchg
pop
cmpxchg
adc
repnz
test
add
push
pop
mov
pop
sub
adc
jle
lods
je
add
or
jmp
or
or
repnz
aad
sub
pop
or
ret
adc
jns
fsub
xchg
push
jnp
jg
adc
push
bound
pop
incb
rcrl
cmpsl
shll
xchg
dec
pop
inc
push
mov
xor
jmp
sub
mov
pop
push
mov
fcoms
xchg
rolb
add
mov
mov
dec
pop
nop
aam
mov
xor
aam
xchg
in
pusha
in
dec
push
mov
cmpb
inc
or
pop
pop
sub
arpl
cmp
or
and
push
dec
jle
adc
add
dec
add
lret
mov
lods
xchg
dec
push
pop
pop
fs
lods
in
sub
sub
cs
push
push
mov
pop
xor
jb
subb
pop
into
mov
lds
scas
movsl
or
push
xor
pop
gs
jmp
pop
xor
clc
sahf
mov
imul
cmpsl
notb
dec
jp
aas
pop
dec
add
subb
imul
mov
pop
fcmovu
xchg
pop
cmc
out
pop
test
or
movsl
pop
or
add
data16
push
loopne
or
loop
cmc
pushf
dec
pop
jle
addr16
lcall
cmpb
jmp
leave
adc
sbb
int
jl
int
pusha
pop
loop
mov
jp
sub
push
ret
or
cmp
loop
xor
jbe
mov
pop
dec
pop
and
adc
or
add
mov
fildll
push
add
addr16
sub
xchg
addr16
mov
loop
imul
pop
lods
lock
mov
and
add
pop
repnz
addr16
cli
and
pop
xor
add
popa
imul
mov
iret
and
jg
add
or
lock
and
dec
and
jmp
test
ljmp
push
sarb
pop
das
test
mov
add
ret
sbb
stos
scas
adc
in
xlat
insb
fsubrl
mov
stc
insl
ror
or
movsb
push
push
mov
lahf
rcl
add
inc
pop
xor
push
mov
bnd
push
mov
lret
pop
ljmp
mov
add
push
dec
daa
mov
xchg
xadd
pop
inc
mov
dec
jmp
jnp
loope
xchg
mov
pop
test
mov
cli
add
insl
in
cmp
sub
add
sbb
je
dec
push
adc
add
jo
clc
pop
orb
cmp
cmc
cmp
jno
inc
jmp
pop
stos
adc
push
or
dec
xchg
cld
es
nop
add
loopne
pop
mov
bnd
cvtpi2ps
outsl
cmp
test
addr16
sbb
adc
xchg
jae
pop
add
in
or
push
pop
pop
cmc
sti
add
popf
pop
out
rcl
xchg
adc
sub
xchg
inc
or
stos
mov
dec
sbb
sub
lret
or
mov
insb
xor
and
push
lods
ret
xor
adc
or
into
add
pop
adc
call
xchg
mov
out
pusha
push
test
pop
xor
lret
adcl
fldcw
icebp
and
xchg
aam
adc
lods
jns
mov
cli
je
ret
add
and
adc
and
rolb
and
lds
jns
enter
sub
fnsave
jmp
fnop
leave
jne
add
out
adc
mov
mov
cltd
int
daa
dec
test
mov
cltd
mov
xor
and
mulb
lds
mov
sti
rorl
aam
and
into
insl
cs
aaa
sar
push
sub
jmp
xchg
enter
orl
sub
leave
ds
sbb
adc
dec
divb
adc
push
jecxz
xchg
das
lock
sbb
dec
in
dec
pop
dec
in
out
push
stc
or
jmp
ja
mov
mov
add
or
jnp
sub
add
mov
sub
add
cmpsb
rcl
aam
jmp
jne
repz
push
push
clc
and
lock
dec
pop
pop
cmp
inc
or
pop
fmulp
into
stos
cmp
sar
adc
dec
sub
push
std
push
jle
stos
orb
dec
test
ds
adc
add
das
mov
andl
pop
iret
mov
imull
hlt
std
jge
jl
in
stc
in
push
mov
test
lret
jnp
jbe
fnstenv
sub
inc
mov
jmp
addr16
add
push
pop
xchg
dec
mov
sub
ds
outsl
ljmp
lret
pop
sub
not
mov
insb
insl
out
out
push
cmp
call
imul
or
jmp
inc
not
add
push
pop
xor
and
add
mov
jmp
push
das
pushf
sar
mov
or
mov
pusha
test
addl
cmp
cwtl
push
shl
hlt
xchg
push
in
pop
aad
movsb
jo
push
and
ljmp
adc
arpl
icebp
xchg
push
fprem1
xchg
leave
mov
in
mov
pop
add
rcrl
les
outsl
test
add
aad
arpl
pop
or
dec
add
enter
adc
call
dec
ljmp
fadds
subb
das
dec
jge
adc
cmp
cmp
hlt
es
out
dec
push
lret
xor
add
in
push
push
push
mov
cmc
inc
mov
rcrb
add
sti
movsb
fwait
out
add
out
inc
stos
push
push
mov
xchg
sub
frstor
xchg
aad
push
xchg
movsb
aad
mov
add
push
push
cmp
add
into
out
shl
fcomps
lret
movsb
pop
sub
jecxz
leave
pop
jmp
lret
inc
push
jo
aam
pop
mov
or
insl
or
inc
js
imul
cmp
add
pop
pushw
jnp
in
cmpsl
clc
xchg
inc
fidivrs
dec
xchg
xchg
mov
pop
adc
dec
int3
jle
adc
vmread
jbe
add
repz
add
jb
xor
and
push
data16
fdivs
add
shrl
sbb
inc
cmpsb
sub
dec
adc
dec
sub
pop
push
xchg
mov
daa
call
push
push
mov
pusha
jge
push
jnp
or
cmpl
jle
out
dec
movsb
cltd
jmp
adc
mov
adc
dec
imul
pop
or
mov
or
cli
and
imul
dec
mov
pop
dec
or
leave
mov
inc
jp
mov
dec
aaa
pusha
push
cmp
push
and
fistl
mov
iret
sbb
rorb
jbe
mov
xor
inc
cmp
ret
pop
push
jmp
sbbb
test
add
neg
push
mov
push
jmp
push
dec
sbb
inc
sbb
in
orl
pop
jbe
sarl
aaa
lret
sbb
cmp
incl
sub
or
iret
into
push
xor
dec
testb
or
je
lret
mov
lds
mov
outsb
orb
cmp
sub
sbb
add
sbb
stc
jmp
jns
add
icebp
xchg
or
inc
mov
out
or
adc
sub
push
andl
lret
xchg
push
mov
gs
test
jmp
ja
xchg
pusha
popa
cmovl
js
and
cmpsl
xor
sbb
ds
addr16
dec
sbb
sub
mov
ljmp
scas
popa
xlat
sub
popa
sbb
call
pusha
mov
push
sub
sbb
mov
ds
clc
pop
adc
fldl
stc
jecxz
in
gs
xor
mov
cmpsl
and
repnz
mov
mov
mov
cmc
and
pop
movsl
pop
outsb
shlb
cmc
xchg
icebp
add
fwait
jmp
mov
add
imul
dec
ja
push
pop
mov
jecxz
jl
clc
inc
or
mov
outsl
add
dec
or
mov
enter
lahf
mov
arpl
pusha
push
daa
push
sub
mov
mov
cmpsl
jb
lahf
adc
aad
movb
andb
fstpt
or
jae
dec
aam
das
jl
subb
or
and
push
sub
mov
lcall
mov
negb
xchg
jnp
push
xchg
push
cmpl
lahf
mov
pop
pop
sbb
or
addb
fcoms
and
xchg
adc
leave
dec
dec
insb
in
xorb
xor
mov
fwait
mov
adc
push
mov
pop
popf
mov
fsubl
push
fisubrl
ja
or
jmp
xchg
sub
jge
push
imul
mull
jmp
faddp
out
add
xchg
mov
inc
stos
sub
sbb
inc
fisubrl
push
adc
out
jl
ss
int3
dec
orb
pop
push
fstps
addb
jmp
lods
and
cmp
push
dec
cli
sub
push
inc
jne
and
cmp
pop
sub
xor
call
mov
dec
or
pusha
ja
std
add
jmp
pusha
icebp
aad
pop
pop
addr16
and
ja
mov
mov
sarl
cmpsl
loop
inc
sbb
dec
and
cld
mov
into
inc
and
inc
out
fldlg2
jle
insb
shlb
ret
or
lock
jg
pusha
test
add
and
dec
pop
sti
sbb
in
push
jle
adc
fld
push
add
sbb
xchg
loop
andb
add
push
mov
sub
add
out
add
pop
shl
push
add
jmp
rcrb
dec
popf
je
add
lea
shr
dec
inc
cmp
xor
fmuls
dec
push
and
getsec
push
pop
adc
jbe
dec
loop
jecxz
enter
dec
push
mov
inc
mov
addr16
aam
push
daa
push
pop
sbb
sbb
jne
int3
es
xor
push
push
data16
stos
add
xor
sarb
cmpsl
add
xchg
decl
repz
pop
push
add
repnz
jle
jns
fwait
jp
cmc
cs
add
xor
stc
pop
cs
shr
pop
and
sahf
or
adc
pop
rcl
sub
aad
rclb
repz
stos
je
mov
jp
das
icebp
xor
or
fs
push
push
or
push
dec
mov
jmp
mull
shlb
jle
and
test
punpckldq
mov
xchg
leave
in
dec
jns
aaa
push
int
dec
or
daa
jl
add
test
sub
cmp
jmp
pop
sub
sbb
hlt
aad
or
fs
jmp
xchg
lret
xchg
sbb
add
cltd
movb
xor
les
pop
rolb
pop
add
pop
jo
pop
add
jns
cmp
adc
ljmp
cmc
push
jge
add
add
add
adc
scas
rclb
xor
sbb
and
int3
or
or
dec
arpl
sub
xor
adc
add
lret
insl
add
cwtl
or
dec
out
std
push
and
or
add
pop
sahf
cwtl
or
popf
or
inc
xchg
adc
repnz
aas
inc
jmpw
or
sbb
sbb
adc
je
xor
mov
add
mov
push
xor
inc
les
xchg
clc
mov
and
cli
inc
xor
add
push
popa
pop
xchg
or
adc
pop
adc
xor
xchg
add
xchg
pop
xchg
loopne
mov
sbb
arpl
sbb
or
shll
xor
lahf
add
inc
or
mov
inc
js
inc
mov
inc
in
dec
in
and
into
pop
inc
int3
stos
jp
inc
scas
scas
inc
lcall
cmc
jae
mov
pop
add
adc
shll
inc
push
fildl
jp
loopne
addb
or
or
mov
mov
xchg
arpl
dec
pop
hlt
sub
cli
test
adc
or
sub
shlb
lods
popa
cld
adc
movsb
imul
and
movsb
test
xchg
sub
jno
pusha
mov
xor
sbb
mov
dec
mov
fisttpll
leave
loop
sbb
in
leave
jno
es
sub
test
dec
idivl
jb
mov
or
std
or
insl
sbb
jmp
push
enter
or
and
and
bound
sahf
sbb
dec
aas
push
dec
pushf
cld
call
xor
jecxz
dec
stos
adcb
inc
sub
add
xor
mov
mov
add
dec
or
leave
jne
mov
aaa
cmp
mov
rolb
mov
xor
lods
push
test
fcomi
scas
enter
imul
push
mov
add
and
jp
dec
inc
lods
test
pop
or
jbe
xchg
xchg
dec
jmp
pop
mov
inc
adc
orb
add
adc
mov
cmp
push
lds
pushf
pop
mov
adc
outsl
loopne
add
sub
xchg
push
sub
inc
inc
call
enter
xchg
push
sub
mov
or
incb
adc
add
xor
fistpl
addr16
jle
lods
addb
cmp
sbb
rorb
or
push
jmp
add
aaa
out
scas
inc
loopne
push
loop
lods
cli
xor
jmp
imul
les
sub
jo
pop
sub
dec
mov
xchg
push
mov
andb
jmp
dec
nop
movsl
dec
aas
push
aas
lret
adc
inc
scas
pushf
mov
push
push
mov
dec
xchg
gs
add
int
call
cmp
inc
aad
adc
negb
add
prefetch
in
xchg
rclb
mov
loop
daa
sub
mov
jmp
mov
cwtl
test
adc
push
mov
fstpt
inc
and
push
mov
pop
rorb
adc
sbb
push
filds
jns
push
or
imul
ret
lea
or
adc
pop
cwtl
hlt
jmp
add
fisttpll
cmp
orb
xor
mov
mov
fcompl
pop
dec
mov
mov
sub
jmp
out
mov
popa
in
loope
jecxz
xchg
xlat
test
nop
cmc
jmp
les
dec
xor
test
mov
inc
shl
adc
sub
pop
add
add
adcb
jns
sub
sub
mov
lret
nop
loopne
nop
mov
dec
shrl
icebp
aam
sti
adc
adc
lret
mov
clc
popa
pop
in
mov
adc
lods
sbb
icebp
fwait
into
lock
inc
mov
out
add
add
mov
stos
xor
in
cmc
jns
in
and
into
or
jle
push
test
mov
mov
jmp
testb
or
and
imul
and
push
loope
cli
cmc
or
mov
sub
jp
imul
in
pusha
aad
scas
sbb
mov
mov
xor
mov
jmp
ja
cwtl
adc
xor
mov
or
or
dec
push
dec
dec
lret
sbb
daa
sub
js
or
inc
sub
leave
shll
fisubrl
sbb
repnz
xor
out
stos
fmul
cli
xor
cwtl
pop
jbe
add
idivb
andb
inc
or
jmp
pop
loope
mov
xor
out
icebp
push
add
xor
insb
dec
es
mov
push
and
add
cmp
pop
mov
pop
nop
dec
push
cmp
push
sub
mov
xor
mov
or
jmp
push
imul
push
cs
sbb
jle
pop
add
movsb
imul
inc
ret
sub
push
lods
inc
shrb
roll
mov
mov
icebp
jne
jg
orl
pop
jmp
mov
hlt
mov
pop
mov
adc
pop
add
orb
mov
aas
test
push
lods
cld
jp
mov
cld
sub
jecxz
mov
mov
push
add
xchg
nop
or
shrb
xor
mov
add
hlt
jmp
fcomps
xchg
adc
or
cli
jne
das
and
pop
push
loope
loopne
xor
es
cmp
adc
divl
mov
pop
repnz
movb
push
mov
icebp
jnp
ret
test
test
jb
adc
andb
in
inc
xchg
and
sub
sub
dec
jae
xlat
pusha
mov
xchg
adc
push
jmp
out
adc
int3
shl
or
push
push
push
mov
aas
dec
and
addr16
pusha
or
cmc
pop
or
or
add
cmp
test
push
aam
sub
sub
pushw
clc
pop
sub
mov
mov
mov
inc
xchg
push
push
cmp
fmulp
inc
push
push
pop
daa
lahf
fmuls
hlt
popf
add
push
xor
inc
test
cmp
rcll
cmpsb
add
fsts
xchg
mov
add
inc
pop
not
xorb
nop
cmpsl
sbb
jns
sub
fcmovb
lock
add
or
shrl
mov
leave
mov
ffreep
mov
cs
add
inc
adc
pop
add
push
ja
push
daa
mov
adcb
cs
pop
pop
stos
cmp
jmp
add
mov
cwtl
pop
sbb
je
mov
mov
arpl
jg
mov
adcl
push
adc
sub
outsl
imul
daa
dec
inc
loopne
js
jnp
jmp
inc
in
mov
fisttps
dec
nopl
mov
dec
jle
addr16
fstpl
cli
cli
push
fisttpll
or
sbb
mov
and
insl
or
inc
jbe
mov
lcall
push
mov
jnp
xor
fsubr
sub
loope
popa
clc
sbb
pop
jne
pop
or
dec
loopne
jno
leave
sbb
add
dec
or
pop
add
cmp
sub
dec
stos
jae
pop
mov
push
mov
icebp
or
mov
xor
pop
aaa
jae
lock
mov
loope
and
adc
dec
and
xchg
outsb
fmull
xchg
cmp
movsb
push
int
popa
jae
add
in
lds
or
add
jge
dec
sbb
sti
outsl
cs
cmp
out
pop
inc
xor
jnp
mulb
add
sbb
pop
pop
sbbl
pop
pop
mov
mov
mov
mov
sub
out
pop
testl
xchg
jg
add
ret
push
testl
stos
mov
xchg
lock
and
jecxz
and
jb
add
cmp
pop
mov
sbb
adc
and
push
mov
push
clc
sbb
push
inc
inc
faddl
mov
sbb
not
out
and
orl
jmp
mov
and
inc
mov
xchg
adc
mov
arpl
sbb
mov
jb
jmp
call
xor
jg
mov
addr16
mov
mov
sarb
xor
inc
fwait
or
pop
ret
dec
pushf
xchg
mov
int3
or
sti
push
out
add
push
mov
xor
testl
shr
add
jns
hlt
test
imul
add
xor
insb
and
in
lcall
mov
mov
adc
pop
not
pop
sub
or
out
shrl
outsb
bound
stc
add
fcomps
sub
mov
inc
xchg
lods
js
outsb
or
xor
xchg
or
fildl
pop
icebp
cmp
pusha
pop
dec
gs
dec
rolb
sub
cmpsb
rorl
and
stos
insb
int3
pop
sub
fadds
shl
and
sub
push
or
pop
js
push
adc
cmp
into
and
push
mov
push
jne
std
sahf
inc
sub
jmp
adc
cmc
jge
xorl
test
add
rclb
and
xorl
test
xchg
icebp
cltd
and
jne
js
loop
sti
outsl
add
push
push
mov
inc
jmp
inc
adc
ficoml
jo
mov
cmp
ja
inc
sbb
xor
dec
cmp
in
and
jmp
adc
push
dec
daa
pop
adc
adc
pop
dec
add
negl
jle
xchg
pop
popf
xchg
call
push
jne
mov
data16
pop
std
sub
mov
incb
aaa
in
mov
or
lods
dec
int3
add
mov
add
push
and
xchg
pop
jnp
pop
pop
pop
xor
lret
loop
icebp
and
cli
push
adc
dec
insl
push
adc
loop
adc
js
data16
in
addr16
adc
jl
mov
rol
sti
hlt
add
nop
or
push
imul
gs
in
mov
xor
stc
jo
popf
fdivl
je
inc
sub
push
dec
sbb
setp
xlat
mov
adc
jecxz
ss
or
sbb
jae
pop
cld
in
sub
add
push
arpl
mov
cmpb
std
ljmp
call
bound
lret
roll
repnz
out
or
fnstsw
or
cmp
iret
popa
fisubs
lret
or
adc
sub
xchg
pop
ret
push
fldcw
sbb
hlt
das
sub
add
out
pop
xor
push
je
popa
jmp
mov
in
jmp
push
pop
hlt
dec
jmp
xchg
push
add
andl
cld
jb
jns
sub
roll
xor
dec
xor
out
sbb
std
pop
or
gs
dec
cwtl
js
adc
cld
push
mov
and
jno
subb
into
nop
fisttpll
mov
lds
mov
dec
or
cltd
push
sub
cs
fistps
pop
scas
lds
xorl
pop
cmp
popf
cmpsb
add
mov
je
loopne
cmp
mov
mov
or
pop
jo
sbb
bound
xor
sbb
mov
mov
pop
xor
jnp
push
lock
fstps
mov
jmp
int
and
add
mov
inc
mov
sub
cmp
xor
gs
jmp
pop
adc
add
cwtl
add
subb
xchg
daa
inc
sub
or
xlat
dec
xlat
cld
inc
xor
mov
pop
rorb
add
stc
and
or
or
push
setno
or
mov
inc
pop
add
sub
jg
pop
pop
pop
loop
rcrl
add
push
add
std
jmp
mov
sahf
je
add
ljmp
push
jmp
cmp
inc
or
jge
jae
shufps
cmpb
pop
lds
or
sti
cmp
jmp
push
ja
mov
ret
adc
jecxz
jp
jle
stc
in
ja
jmp
push
jb
aam
imul
push
pop
test
and
push
adc
clc
cmp
mov
imul
jb
jns
cmp
andb
les
pop
cmc
dec
add
fisubrl
ret
repz
add
lret
inc
sbbb
dec
daa
js
jle
mov
jmp
lods
sub
inc
mov
in
sahf
psrad
pop
adc
clc
and
cmp
shrl
push
inc
faddp
mov
adc
bound
jg
xchg
or
jecxz
adc
add
les
jmp
sub
add
in
push
lret
mov
call
jno
inc
or
mov
push
data16
mov
inc
jmp
mov
dec
cmc
das
add
sub
adc
pop
fdivrs
dec
push
jmp
test
sti
call
and
cmp
enter
negl
sub
push
addb
scas
cmp
cld
jg
or
rcrl
xchg
inc
push
push
push
ds
and
addl
inc
inc
add
std
movsl
cmc
iret
mov
jno
imul
pop
adc
insl
adc
pop
jno
or
mov
pop
fdivs
cld
jb
dec
add
jg
or
adc
test
pop
sub
pusha
cld
push
add
icebp
or
fidivs
push
cmpsl
jmp
int
sub
mov
and
add
insl
ficoms
fldcw
stos
xchg
fldl
jo
or
or
fsubl
js
push
fwait
xchg
dec
lods
pusha
addr16
ret
mov
inc
les
adc
and
and
xor
cmpsl
idivb
push
icebp
mov
imul
push
push
insb
jne
sub
gs
mov
jne
or
sub
inc
out
shlb
sub
mul
xor
jl
notb
mov
xor
push
or
push
ljmp
push
inc
das
jmp
les
pop
lods
lcall
call
dec
adc
dec
dec
jg
pop
jle
rorb
inc
adc
adc
cmp
lods
scas
add
sub
enter
lahf
pop
cmp
rorb
into
fs
add
and
adc
bound
call
add
div
push
jmp
push
divl
push
loope
and
or
test
sub
dec
lret
push
or
int
mov
cld
popf
sbb
sahf
xchg
fs
sti
test
or
inc
add
call
aam
out
pop
jno
jmp
sar
cmp
jns
ret
sub
ljmp
shl
mov
add
fs
fs
adc
inc
inc
mov
daa
push
adc
sub
loop
or
ret
stc
push
movsl
stc
jl
pusha
pop
mov
push
xor
inc
ds
sub
mov
mov
dec
adc
pavgw
xchg
mov
push
in
sbb
fists
nop
daa
sbb
xchg
cmp
add
in
mov
gs
jg
sahf
inc
or
mov
pusha
andb
repnz
cld
adc
xchg
push
outsl
jle
jns
dec
int3
ds
push
shr
xchg
and
iret
add
jl
or
addb
insl
arpl
or
int3
ret
addr16
and
push
mov
shll
pop
in
cmc
pusha
popf
pop
lret
pop
jbe
add
xor
adc
mov
outsl
mov
aaa
dec
cmpsl
xor
test
jge
rcll
push
and
out
inc
mov
pop
sub
imul
add
or
xor
subb
icebp
cld
xor
mov
xor
jns
and
aam
add
xchg
xchg
in
add
jmp
rcr
es
out
stc
mov
imul
lds
mov
adc
mov
and
cmp
fdivrp
sti
lock
enter
add
pop
push
push
and
pop
outsl
int
inc
and
mov
test
add
push
dec
pop
push
jmp
pop
repnz
loopne
mov
in
xchg
mov
lahf
inc
vminps
xorb
add
in
add
xor
jo
jmp
cmp
in
stc
adc
pop
cmc
sbb
or
jl
fdivl
fimull
mov
cli
pop
fcomip
dec
daa
daa
add
imul
or
add
adc
sbb
push
and
and
mov
loopne
dec
ret
add
inc
xchg
repnz
cmp
mov
push
or
pop
add
xor
xchg
xor
jmp
pop
mov
mov
or
popa
pop
add
mov
dec
sbb
adc
stos
mov
orb
cvtpi2ps
or
js
xchg
pop
sbb
stos
adc
sbb
push
jnp
inc
mov
mov
mov
fsts
cmp
aas
push
cmovns
sub
jb
in
mov
lods
dec
xlat
insl
inc
and
mov
xchg
or
repnz
add
sub
adc
or
and
loopne
pop
jmp
bound
xchg
clc
add
stc
inc
mov
pop
mov
sti
lea
in
fildl
mov
shr
dec
add
push
mov
scas
inc
xchg
and
rsqrtps
movsl
repz
andl
xor
pushw
lods
rorl
loop
pop
fsubrs
mov
or
mov
fs
int3
js
push
seto
subb
int
sub
push
push
dec
xchg
je
push
std
xor
pop
xor
sub
fsubl
fldl
in
sbb
mov
ljmp
test
xchg
jnp
pop
out
call
add
sbb
rclb
shlb
nop
add
adc
int3
jmp
cmpl
lea
xchg
jmp
out
sub
xlat
mov
addl
xor
dec
add
push
pop
mov
jne
jmp
std
int
jnp
adc
shl
lret
add
je
dec
fsubl
mov
lods
test
jne
add
and
add
xorl
icebp
push
insb
in
dec
iret
push
test
pop
inc
jno
shl
mov
add
and
rcll
jnp
mov
add
lret
daa
fstps
pop
fwait
hlt
lret
jae
mov
fsubs
mov
mov
punpckldq
fs
arpl
das
or
and
mov
or
and
pop
leave
push
push
into
lods
insb
cmp
loopne
add
out
add
fcmovnb
xchg
or
adc
stc
mov
jp
iret
lret
adc
dec
aad
stos
repnz
lret
mov
vshufpd
dec
ljmp
aaa
stc
cmp
sbb
or
jmp
mov
orb
fbld
inc
roll
jmp
stos
mov
adc
add
jge
push
add
rclb
jle
mov
or
inc
jmp
push
sahf
sub
pop
icebp
xchg
mov
xchg
sti
add
int3
cmpsb
jae
ja
daa
add
je
int
fwait
jl
inc
mov
cli
jo
jmp
in
fsts
push
inc
pop
pop
nop
fcmovnbe
jnp
mov
cmp
pusha
inc
dec
daa
cmp
sbb
dec
xchg
inc
outsl
add
adcb
daa
jmp
leave
pop
imul
fisttps
test
fs
mov
inc
pop
push
dec
dec
mov
or
call
testb
test
scas
mov
out
cltd
mov
inc
mov
mov
add
adc
cmp
xor
mov
popa
jmp
sbb
pop
jae
xchg
add
push
fs
pop
imul
ss
outsl
test
or
dec
imul
add
dec
pop
push
xchg
xchg
ret
cmpsb
pop
mov
inc
fwait
sub
xor
inc
inc
orb
repz
jae
jb
into
add
loop
sarb
nop
jb
push
and
rolb
sarl
add
call
leave
mov
cmp
mov
xor
pop
neg
shlb
jecxz
sub
or
jae
cwtl
shrl
sbb
loopne
pop
mov
mov
pop
inc
das
das
fsubl
aad
movsl
push
lock
mov
inc
mov
sub
in
hlt
xchg
jp
xchg
notl
insl
sub
mov
fisttpll
and
and
sub
pusha
sub
in
mov
mov
add
or
aam
jmp
insl
popa
pop
mov
loop
fdiv
gs
adc
rcrl
push
nop
push
aad
sub
pop
add
push
imul
jmp
cmp
dec
adc
mov
sub
jmp
cld
and
insl
movlps
mulb
call
push
jl,pn
xchg
jg
repnz
stos
xor
adc
std
cmpsl
ret
pop
inc
fidivs
pop
mov
jg
push
cwtl
nop
call
pop
lock
mov
daa
xor
inc
sub
loop
sbbb
or
cmp
dec
aad
shl
xor
and
add
xor
insb
loop
or
xchg
cmc
add
xchg
pusha
push
popf
je
imul
fwait
es
cmc
push
cmp
bound
pop
push
repz
push
or
xchg
icebp
pop
shlb
dec
loop
add
sub
stos
add
or
movsb
xchg
push
mov
jmp
mov
and
xor
jmp
cli
cmp
sbb
mov
inc
call
adc
mov
addb
sbb
aaa
xor
movsb
loope
jp
iret
in
packsswb
mov
mov
or
cs
mov
jmp
xor
xchg
jnp
lahf
dec
cs
dec
ret
push
fs
test
pop
jo
xor
test
scas
add
leave
or
ja
cli
and
stc
mov
bnd
jmp
mov
mov
int3
jmp
add
aad
push
iret
leave
sub
adc
jg
hlt
int3
push
syscall
mov
repz
jp
in
in
lret
dec
pusha
push
push
pop
dec
push
mov
and
out
xchg
pusha
repz
loope
scas
push
mov
mov
addb
or
mov
fs
popa
in
mov
inc
int3
sub
sub
pop
aad
ja
add
sub
adc
jg
sahf
push
add
or
loopne
popa
inc
gs
lahf
push
adc
mov
pshufw
xorb
xlat
xor
add
ljmp
cmp
sarb
cmpsl
aam
push
rorb
test
insl
mov
stos
outsl
mov
testl
lret
test
jmp
cltd
jp
and
adc
shl
out
daa
bswap
leave
and
sub
sbb
rclb
and
pop
ror
add
push
daa
jecxz
hlt
add
shl
or
inc
leave
pop
out
add
and
lcall
jp
les
or
jl
lods
dec
les
sub
std
dec
push
mov
xor
or
sbb
loopne
cmpsb
aam
sbb
inc
cmp
negl
adc
test
sbb
or
out
test
adc
lock
inc
and
push
push
add
ds
jmp
repnz
push
icebp
xor
inc
cmp
mov
cwtl
push
and
call
icebp
add
pop
rclb
add
jmp
fsub
and
mov
enter
jle
ds
dec
cmp
aas
sbb
mov
mov
mov
push
nop
sub
sub
stos
dec
ja
lahf
mov
cli
push
mov
xor
in
and
adc
fists
into
xor
sbb
cmc
sbb
cmpsl
mov
cwtl
xchg
lcall
call
mov
inc
jbe
cmp
or
ljmp
in
sub
push
push
arpl
repnz
pop
xor
or
or
push
and
in
xor
push
in
mov
imul
mov
ret
jmp
push
insl
mov
inc
push
movsl
mov
push
pop
jb
and
jle
pop
test
mov
or
jmp
cmp
dec
test
fmuls
sbb
out
adc
sbb
movsl
pop
add
jmp
pop
insb
xor
pop
add
popa
or
outsl
push
sbb
les
leave
idivb
and
mov
sub
test
sub
outsl
mov
sbb
cmp
push
mov
sbbb
dec
pop
mov
sub
jns
aam
pusha
out
push
xor
jmp
or
roll
mov
shl
add
sub
in
push
and
js
and
mov
adc
xchg
cmp
mov
ret
jmp
sbbb
cmc
fs
add
outsl
lods
sti
test
in
push
popw
push
add
sti
outsb
in
add
jp
je
mov
ret
jb
pusha
mov
pop
out
pop
jnp
sub
lret
data16
dec
adc
xorl
mov
pusha
call
push
shrl
jle
xor
jno
cld
push
lret
cmp
shll
dec
aam
mov
push
pop
push
dec
lock
mov
xor
aas
mov
shl
inc
fcompl
cmp
jecxz
lcall
sbbl
scas
frstor
dec
cli
xchg
cld
jno
fs
adc
das
sub
daa
cmc
and
adc
xchg
negb
pop
push
ss
sbb
mov
clc
dec
jmp
mov
or
pop
jae
cwtl
lock
mov
sub
push
or
mov
mov
xor
pusha
prefetchw
sub
and
repnz
addr16
dec
addr16
imul
jb
lcall
ljmp
or
scas
mov
scas
jmp
add
sbb
or
adc
and
push
loopne
arpl
xor
sti
cmp
pop
pop
mov
mov
aas
shlb
mov
andb
lock
or
fwait
call
imul
jmp
and
adc
mov
cmp
push
dec
mov
cmp
xor
cmc
mul
jmp
out
push
leave
cmp
inc
subb
push
call
jne
or
pop
or
jle
mov
aam
add
push
pop
mov
mov
shr
loop,pt
cmp
sub
push
fstpt
or
xor
outsb
or
push
xchg
push
mov
or
lods
add
stos
adc
cltd
xor
xor
push
ljmp
jb
adc
inc
popa
push
clc
sarl
sub
cmp
mov
or
outsb
dec
clc
mov
dec
lock
mov
or
jl
jp
cmpb
add
aam
cmp
sbb
add
lods
enter
inc
loopne
pop
add
jo
addl
adc
pop
adc
xor
dec
les
jg
imul
popa
and
out
dec
and
adc
jo
pop
adc
outsb
pop
lock
sahf
stos
or
out
sub
fmulp
pop
xchg
inc
mov
jbe
das
pop
mov
or
js
xchg
fs
jle
imul
pop
push
imul
hlt
adc
sub
shlb
sub
mov
mov
shlb
ja,pt
shr
in
cli
add
jecxz
pop
mov
push
pop
mov
inc
or
ret
inc
rorl
mov
mov
stos
jp
mov
or
pop
and
icebp
in
movsl
cmp
xchg
sub
jmp
negl
gs
jmp
prefetcht1
lret
push
xchg
sub
push
cmpsl
popf
cmp
iret
add
mov
mov
adc
jmp
aam
mov
aad
inc
out
scas
add
adc
inc
jg
cmp
add
jb
dec
jo
dec
stos
adc
int3
mov
inc
and
push
out
push
cmp
sahf
pop
pop
push
and
jnp
pop
mov
inc
adc
mov
ret
and
jg
test
ret
sub
int
gs
or
adc
mov
push
cwtl
sbb
pusha
pop
add
pop
inc
sub
inc
or
add
mov
add
pop
lahf
and
jl
cmpsl
and
add
daa
imul
push
aaa
testb
outsb
jmp
inc
adc
js
neg
add
scas
add
sub
sub
add
mov
ds
mov
sysenter
sbb
ljmp
cmpsl
jle
jb
sbb
sub
and
add
dec
xor
mov
push
js
mov
mov
ja
sub
enter
std
outsb
or
mov
add
scas
inc
or
ud0
pop
pop
adc
mov
cmp
jge
cltd
lret
or
push
stc
sub
inc
mov
inc
mov
jle
jp
pop
sub
iret
and
js
shrl
bound
sahf
hlt
push
and
push
add
dec
cmpsl
inc
add
pop
mov
and
fnstcw
cmp
rclb
sub
mov
dec
add
insl
jge
sbb
jle
jbe
mull
adc
fcompl
xchg
pop
or
push
pusha
xor
ret
push
or
mov
pop
xor
pop
neg
mov
inc
std
andb
pop
shlb
cmp
mov
and
push
sbb
sub
sub
adc
lods
fwait
mov
rcrb
pushl
cwtl
arpl
int3
mov
pop
divb
adc
dec
fcoml
ficompl
add
decl
outsl
add
sbb
pushf
mov
int3
sub
jmp
into
xor
adc
nop
cmp
inc
add
pop
add
inc
mov
or
pop
xor
in
in
inc
inc
sbb
pop
lds
pushf
rclb
mov
inc
push
roll
cmp
pop
cli
jne
stc
cmp
sti
fmul
mov
or
pushf
jae
adc
jmp
hlt
jbe
and
mov
aam
or
test
rorl
pushl
inc
push
inc
dec
lret
jo
pop
lods
push
shr
xor
subb
pop
out
jg
lea
add
xor
sbb
pop
push
dec
pop
mov
lock
xchg
cmp
dec
rolb
jo
nop
xchg
dec
pop
stos
push
jnp
lret
sub
std
jmp
xor
pusha
imul
sbb
jmp
add
gs
mov
in
cmc
data16
dec
clc
test
aaa
adc
jecxz
add
cmp
xor
push
jge
adc
push
xchg
cmc
outsb
jge
xchg
std
idiv
inc
outsl
mov
mov
ljmp
fnstenv
sbb
mov
and
and
sbb
in
imul
push
pop
jge
jb
mov
adc
dec
jb
adc
mov
cmp
cmp
pop
sub
xchg
out
fwait
push
xor
jle
fisttpl
inc
xor
or
in
adc
jmp
or
and
loopne
sub
sbb
lock
add
or
jp
in
outsb
xor
lret
test
push
pop
sahf
sub
repnz
test
push
hlt
inc
addl
and
pop
xlat
fstpt
cmp
inc
and
push
xchg
xor
dec
test
jmp
jmp
fnstenv
sub
xchg
sub
mov
sub
xor
loope
or
lret
in
pop
test
ljmp
fcoml
push
inc
xchg
or
lret
xchg
mov
mov
mov
push
add
and
ficoms
mov
cmp
int
sub
push
mov
and
cmc
xor
pop
mov
movsl
sarl
jo
js
jmp
jmp
pushf
sbb
test
inc
ret
mov
adc
pop
mov
repnz
jmp
push
add
adc
mov
call
jb
repnz
ljmp
adc
dec
gs
or
sub
insl
repz
xchg
das
loopne
data16
pop
scas
jo
push
mov
jmp
nop
fs
mov
test
xchg
loop
push
pop
cwtl
jne
gs
fcomi
push
cmp
sahf
push
fcomp
jns
sub
push
cld
test
dec
out
pop
mov
ja
jb
cmpl
xchg
inc
or
out
dec
repnz
sub
pop
je
jbe
dec
ltr
lods
and
and
daa
sbb
imul
xchg
sub
and
jmp
pushf
js
repz
push
lock
xchg
stos
lret
addl
push
push
arpl
lahf
test
cmpsl
mov
sbb
sub
mov
cmc
inc
cwtl
mov
push
push
jmp
sbb
sar
imul
mov
jmp
push
das
mov
pushf
and
push
rclb
loopne
mov
xchg
push
into
lods
ljmp
add
icebp
mov
pop
and
js
and
xlat
sub
or
in
inc
mov
xchg
push
mov
es
idivl
dec
push
xchg
and
int3
cmp
jno
dec
icebp
inc
dec
mov
jl
scas
dec
test
dec
push
sub
fwait
pop
xor
dec
jbe
and
cmp
xchg
push
inc
js
fnstsw
pop
push
mov
ret
scas
dec
dec
or
or
sbb
sub
jmp
mov
loop
movsb
inc
ss
pop
adc
sahf
dec
push
ud2
stc
pop
movsl
pop
push
stc
insb
add
xor
mov
shrb
jne
fldcw
out
push
ret
pop
xchg
insl
fcoms
jns
jmp
cmp
cmp
scas
and
inc
mov
add
movb
lods
xchg
inc
stos
lret
into
sub
mov
adc
loop
or
out
push
push
pusha
sbb
pop
shr
sbbl
inc
xor
jcxz
add
out
lock
xchg
es
sub
adc
push
outsl
add
out
mov
pop
push
aam
mov
pop
mov
cmpb
add
ja
adc
dec
inc
or
sub
lret
push
add
rcrl
sbb
daa
push
aam
sub
cli
jbe
push
or
cvtps2pi
add
cs
pop
rorl
loop
push
ja
cmpsb
sub
add
xchg
pop
sub
push
cmp
or
pop
adc
add
mov
add
ljmp
filds
loop
fists
xchg
fdivl
add
test
out
xlat
and
mov
lods
pop
add
outsl
es
jg
lea
sbb
js
push
mov
xchg
xlat
icebp
inc
sub
xor
cmp
push
mov
cs
andb
sub
aam
scas
inc
jecxz
jmp
dec
dec
push
xor
pop
xchg
hlt
leave
leave
jg
inc
or
cmpsl
cwtl
pop
imul
subl
add
dec
xchg
nop
stc
cmp
lds
push
xor
pop
imul
imul
fidivl
adc
add
inc
popf
xor
mov
and
sbb
jmp
add
jo
pop
jmp
dec
inc
pop
pop
push
mov
shrl
mov
dec
xchg
add
push
mov
dec
lods
fcoms
xchg
inc
sbb
sub
xchg
push
push
xchg
jge
jne
xchg
sahf
xor
inc
inc
sti
push
out
lock
sbb
notb
mov
insl
mov
pop
push
ficoml
push
test
pop
pop
out
and
mov
stos
pop
imulb
mov
and
mov
out
rcrl
add
adc
sub
jmp
push
iret
fnsave
sbb
dec
subl
lcall
xorb
jne
push
nop
jle
in
push
mov
popf
ja
or
xlat
sub
push
xor
rolb
pop
cmp
add
push
jg
gs
in
fidivs
lret
xor
pop
andb
rol
dec
fildl
scas
push
sbb
jmp
adc
pop
std
push
push
jmp
out
mov
add
inc
lods
jno
fcmove
pop
fsubrl
out
call
xor
loopne
push
in
mov
jno
sub
addb
or
shl
xchg
inc
cli
pusha
inc
sub
push
add
jmp
push
aad
arpl
adc
jno
mul
xor
popf
sti
out
add
or
sbb
add
adc
mov
jb
pop
lret
mov
xchg
cltd
subl
jae
mov
add
mov
pop
push
cmp
xchg
adc
sti
jl
inc
sub
sub
outsl
aas
pop
clc
aaa
loop
and
imul
xchg
out
lret
lods
cmp
dec
cld
mov
ds
adc
shrl
pop
call
push
lret
push
icebp
mov
movb
mov
adc
stc
sub
xchg
js
mov
pop
push
pusha
je
cli
add
jns
add
and
dec
mov
jg
sub
hlt
out
pusha
add
adc
subb
cld
popf
cmpsl
jmp
int
push
sarl
test
mov
push
sti
inc
pop
pop
xor
sbb
xchg
adc
mov
aas
cmp
loope
jb
dec
dec
enter
pop
fildl
fsubl
jmp
fdivrl
mov
in
adc
inc
or
inc
ret
das
das
jno
pushf
fsubr
sbb
cmp
in
ficoms
xchg
pop
add
sub
fldenv
push
inc
mov
in
xchg
cli
bound
mov
shll
test
out
lahf
pop
sbb
imul
pop
push
decl
sbb
add
jbe
rorb
push
push
sub
sbb
and
and
rcll
mov
shl
inc
push
ficomps
cwtl
and
push
push
add
insb
imul
push
push
jmp
mov
std
aam
repz
mov
push
push
adc
adc
mov
add
mov
inc
sbb
pop
push
lods
ds
jo
and
out
add
jp
adc
std
pmaxub
fs
xor
das
lds
inc
xorl
dec
push
cli
andb
xor
sub
cld
imul
test
out
push
xchg
xchg
inc
sahf
sub
jmp
je
shrl
jge
movsb
xorb
adc
andb
sbb
cmp
ljmp
sbb
cs
pop
fisttpll
adc
push
and
sub
cmp
bound
rclb
test
dec
psubsw
ret
push
inc
dec
cmc
sarb
cmc
imul
cmp
shl
xor
xor
insl
mov
nop
out
dec
call
sub
mov
push
dec
addl
or
mov
lret
sub
add
jmp
mov
xlat
call
adc
loope
push
and
add
inc
xor
mov
push
daa
sbb
nop
fwait
mov
cmp
mov
jne
mov
vpsubd
inc
push
mov
push
pop
bound
xchg
sbb
std
adc
pop
sub
adc
sub
inc
sub
adc
in
daa
shl
fs
pop
dec
xor
adc
sbb
inc
mov
cmp
jge
popf
or
aas
lods
pop
adc
add
daa
or
sub
lds
dec
mov
insb
push
cmp
or
shr
pop
fmuls
in
mov
xor
jg
shlb
jge
aad
lods
nop
inc
adc
inc
mov
popf
mov
fcom
push
loop
jns
mov
hlt
je
dec
jmp
test
and
pop
mov
dec
xor
xor
cmp
xchg
adc
add
imulb
xchg
scas
pop
shl
test
aas
movsb
jae
dec
cli
hlt
jecxz
push
insb
cmp
scas
jecxz
pop
add
rcrb
shrl
dec
aad
jno
orl
add
pop
add
mov
nop
lahf
or
or
sbb
jne
scas
bound
or
jg
adcb
mov
mov
xchg
inc
les
loop
pusha
sub
dec
xor
lahf
dec
je
sub
xchg
mov
repz
lds
sub
push
xchg
lds
sub
popa
mov
jnp
push
pop
pusha
pop
cli
mov
ret
sub
out
adc
dec
insb
loope
sub
mov
pop
add
jbe
jns
lahf
in
sar
sti
sub
icebp
shl
mov
scas
pushf
fsub
pusha
jb
out
sub
adcl
xchg
sub
arpl
push
orb
pop
fs
aad
cli
mov
das
pusha
outsl
cmp
pop
and
inc
sbb
gs
test
in
xor
cli
push
fsubr
inc
jge
mov
loopne
push
pop
pop
in
aaa
imul
xchg
cmp
shlb
popf
mov
repnz
pop
mov
testb
push
fisttpll
mov
test
jmp
xor
jle
fwait
inc
and
pop
dec
not
orb
inc
xchg
pop
insl
leave
or
test
jle
repz
mov
jmp
sub
mov
jae
add
mov
jmp
aam
stos
adc
push
pop
dec
test
hlt
scas
mov
or
pusha
data16
mov
into
ds
ja
pop
inc
hlt
jns
or
sbb
ds
push
mov
add
mov
shll
xor
ja
fildl
cltd
fcmovb
or
ret
leave
test
add
mov
nop
push
pop
fistps
gs
bound
jne
cmp
subb
out
stc
sub
add
rcrb
sbb
jmp
out
mov
roll
out
cmp
or
push
inc
and
and
add
jbe
push
or
imul
je
inc
pusha
push
mov
xor
lret
ja
scas
push
das
lods
scas
cmpsl
mov
in
jle
or
pusha
shr
enter
mov
jmp
out
pop
jo
pop
shr
mov
jl
sub
adc
sub
or
ficoml
test
mov
inc
lahf
in
in
jecxz
lds
inc
push
cmp
sbb
pop
or
xor
imul
push
stos
gs
xor
cwtl
fisttps
xchg
or
mov
mov
mov
jmp
push
leave
cmp
adc
push
call
fldenv
jp
ja
jg
lock
imul
fstps
add
pop
aaa
and
sti
lods
ret
mov
es
ret
push
or
bound
push
add
xchg
bound
adc
ret
add
and
push
or
add
mov
je
sub
push
and
arpl
add
into
or
jle
sub
out
xlat
lock
push
pusha
push
mov
sbb
mov
pop
inc
and
adc
lock
push
dec
xor
xchg
sub
out
scas
pop
rcl
mov
add
rclb
xchg
sub
pop
pusha
pop
or
sub
add
xor
cmp
lock
mov
test
loop
xchg
jns
aas
loopne
pop
pop
sub
cmp
rcll
leave
jbe
pusha
aam
lret
and
push
flds
or
or
push
shr
xor
mov
scas
notl
add
pop
sbb
lret
repz
lahf
inc
jmp
pop
mull
sbb
adc
push
pop
imul
int
lret
lods
aam
and
das
add
imul
iret
add
cmp
mov
add
add
fisttpl
push
enter
add
and
scas
movsl
fwait
mov
or
mov
fdivl
aad
dec
inc
mov
pop
sub
bound
sbb
push
jbe
lret
pop
jno
mov
jp
lea
cmp
fisubrs
push
lret
test
or
imul
pusha
fucompp
hlt
jo
xchg
jg
loope
inc
add
inc
addl
adc
and
jae
stos
inc
cmpsb
push
mov
xor
ficompl
js
jp
mov
stc
iret
inc
pop
dec
add
and
xor
add
ret
andb
push
and
mov
test
jmp
out
in
in
ljmp
mov
aaa
jmp
add
push
popl
inc
adc
xor
pop
mov
jno
fnstcw
push
xchg
imul
pop
mov
xor
sub
push
add
sub
add
jmp
mov
cli
mov
std
outsl
iret
test
jecxz
xchg
ljmp
pop
jl
in
adc
in
cmpsl
ror
xchg
adc
pop
les
jle
dec
and
xchg
pop
pop
cli
jl
lods
inc
mov
mov
ja
dec
or
insl
mov
add
xchg
addr16
mov
push
jp
jg
lods
jb
daa
rolb
mov
dec
fs
les
int3
daa
cld
clc
mov
jge
and
push
add
pop
dec
jmp
mov
push
jg
jnp
rorl
cmp
test
stc
aam
daa
or
fildll
cmpsl
pop
in
shrb
add
mov
adc
or
pop
sbb
and
push
cli
jns
ret
lret
sub
xchg
ret
adc
add
inc
add
jmp
push
js
jb
je
lds
lock
shlb
scas
add
repnz
pop
adc
fadds
push
daa
sub
bound
mov
daa
test
fdivs
fsubrl
add
pop
incb
adc
arpl
dec
in
ss
push
push
xor
sub
sub
cmpsl
addb
mov
mov
add
test
pop
mov
mov
cmp
sti
lods
in
jno
inc
mov
out
sbbl
sub
out
cmp
pop
test
mov
add
or
pusha
mov
and
fcomi
shl
fistps
iret
jmp
and
and
icebp
das
imul
push
push
and
mov
pop
xor
add
gs
pusha
add
xor
dec
lahf
dec
pop
ja
cmp
add
leave
pop
stos
sub
pop
sti
fcmovbe
movsl
in
jecxz
jl
jnp
test
add
push
xchg
add
fldl
mov
add
pop
xchg
fsubrl
fcoms
leave
pop
sbb
add
sbb
daa
in
pop
loop
push
push
mov
xchg
mov
sti
adcb
and
pop
mov
or
fnstsw
mov
adc
mov
adc
add
sbb
adc
repz
inc
call
testl
jg
pop
scas
mov
sub
mov
cltd
iret
or
scas
cwtl
mov
push
pop
sub
pop
jl
sub
sub
sbb
fdivrl
and
add
sbb
inc
add
add
xor
xor
inc
ds
pop
sbb
pop
mov
cld
rorl
cmp
and
or
stos
mov
mov
xor
push
jp
das
ja
push
sbb
mov
or
sti
pop
mov
addb
sub
in
or
popa
nop
das
addr16
xchg
fidivrs
add
xor
ljmp
inc
in
inc
insb
jmp
ret
dec
lods
sbb
xchg
pop
in
insl
mov
cwtl
or
pop
andl
and
bound
jne
mov
sbb
pop
pop
adc
jl
scas
add
fucomp
add
cmp
mov
and
or
icebp
sub
rcr
lods
sbbl
nop
push
scas
outsb
sbb
sahf
mov
and
push
mov
out
imul
xor
pop
out
mov
orb
mov
cmp
js
xchg
mov
popa
imul
inc
jno
pop
aaa
orl
or
xchg
aam
and
in
test
shrb
dec
cmp
jge
sbbb
cmpsl
push
js
cmp
jnp
dec
dec
ljmp
cmp
repz
jbe
dec
inc
dec
cmpsb
dec
xchg
andb
push
inc
jmp
cmpsb
fadd
jmp
adc
notb
xchg
jae
xchg
lock
mov
mov
cmp
leave
or
js
jae
inc
mov
sbb
or
inc
push
jle
popf
rclb
adc
repz
push
inc
jp
scas
adc
pop
inc
movhps
test
inc
jmp
push
or
das
pop
pminub
faddl
movsb
jle
push
scas
rdtsc
ljmp
mov
ficoml
popa
and
cmp
sub
sub
add
adc
cmc
add
push
outsl
inc
add
jnp
jne
jp
fistps
sbb
mov
or
pop
sub
call
f2xm1
dec
jbe
and
mov
xchg
jbe
push
xchg
loopne
push
push
rcrl
and
pop
dec
sbb
das
aad
addr16
gs
jb
mov
xor
jmp
mov
pop
data16
push
and
xor
imul
stos
scas
jl
js
jp
lods
xchg
es
mov
mov
mov
or
imul
mov
jmp
xchg
lock
std
mov
repz
cmp
mov
shr
jne
pop
or
or
push
stos
int3
mov
repnz
insl
test
fdivr
aaa
jle
cmp
aad
xor
or
add
jmp
inc
mov
fsubs
imul
inc
aad
pop
add
xor
sub
cmp
mov
idivl
incl
lret
mov
adc
mov
sbb
cltd
push
push
inc
in
outsl
cmp
dec
addr16
bound
adc
add
mov
and
push
movsb
add
jmp
push
mov
mov
lds
xchg
jg
mov
jmp
andl
sbb
insb
mov
outsl
push
or
and
std
loop
ljmp
add
inc
and
mov
mov
js
shl
leave
aaa
pop
aas
clc
popa
push
inc
or
sub
iret
pop
not
es
rcll
sbb
jmp
mov
mov
push
or
cli
cmp
add
xchg
mov
or
lahf
ja
std
fadd
into
sub
sbb
loopne
xor
push
mov
cs
inc
pushw
pop
sahf
fisubrs
fisttpll
mov
dec
or
cwtl
and
add
xor
dec
mov
cmp
je
push
mov
mov
es
in
adc
icebp
rclb
lods
xchg
jp
sub
mov
in
xchg
rolb
call
or
cmpsb
push
or
add
xor
jge
dec
add
cwtl
add
mov
jmp
out
test
jle
or
dec
movsb
aad
das
xor
mov
pop
push
xor
test
invd
js
mov
nop
movsl
hlt
iret
daa
push
cmpsb
pop
sbb
insb
ds
jecxz
add
mov
cld
dec
aam
adc
lock
cs
inc
and
jo
ror
or
push
sub
sbb
cmp
loope
inc
inc
sarl
sar
in
iret
xchg
mov
jb
jl
pop
cmp
mov
inc
cmp
pop
popf
aad
les
lahf
adcb
xchg
push
fsubr
std
inc
insb
aas
sbb
pop
jnp
jp
popf
testb
pop
sbb
sar
xchg
std
xchg
cltd
and
xor
jmp
outsl
or
in
pop
stos
movsl
sub
test
mov
jnp
in
gs
and
pop
add
sub
pop
add
pop
add
mov
adc
out
xchg
xlat
scas
out
js
cmpsw
mov
inc
das
sbbb
addl
xor
mov
clc
mov
lods
sti
arpl
lcall
scas
xchg
loop
imul
call
jne
inc
jp
cwtl
insb
rcrl
sub
inc
inc
pop
push
aas
test
xchg
push
dec
stos
inc
jg
or
and
pop
addl
dec
or
jno
fwait
fs
ret
xlat
pop
push
iret
push
jno
xor
cmp
lea
push
dec
stos
dec
ficoml
fildl
das
mov
sub
adc
adc
push
scas
push
jbe
push
push
sbb
cs
ljmp
clc
inc
ds
shlb
mov
mov
add
popf
aas
mov
cli
inc
dec
inc
lods
and
data16
push
jmp
enter
dec
mov
test
xor
cmp
mov
shll
pop
pop
js
psllw
fcoml
nop
fildl
inc
scas
xchg
pop
pop
cli
lret
mov
inc
xor
inc
sub
sbb
sbb
xchg
and
push
push
mov
and
test
or
in
cs
push
lcall
scas
jb
mov
sub
adc
gs
and
imul
cmpb
fdiv
test
mov
arpl
call
jb
sbb
sbb
and
pop
enter
fsubrs
fwait
bnd
and
xchg
out
imul
sti
sti
or
or
adc
lods
rcrb
sbb
jp
dec
pop
sub
mov
push
adc
inc
in
pop
xlat
add
adc
push
sub
roll
pushf
not
dec
loope
pop
test
and
xchg
mov
add
scas
inc
das
pop
add
jle
jl
mov
mov
cwtl
cli
ret
call
adc
push
aas
adc
pop
jne
adc
or
pop
shll
mov
jae
dec
fwait
jb
movb
dec
jle
and
out
or
mov
popa
addb
push
inc
rolb
outsb
les
and
pop
push
jns
imul
call
imul
dec
push
movsl
jmp
pushf
push
jmp
add
ss
les
sbb
and
pop
orb
pop
ljmp
fstpl
jp
into
push
jmp
pusha
mov
pop
in
add
push
push
jge
push
jmp
ja
std
add
xchg
pop
sbbb
and
cli
push
xchg
pop
mov
or
pop
cmp
pop
repz
aam
or
mov
jae
add
mov
lea
push
or
pop
sub
popa
push
mov
test
or
jb
pop
jle
add
inc
dec
cmp
jle
adc
prefetchwt1
in
adc
loop
rcll
add
int
mov
add
push
sbb
inc
sub
push
push
loop
xchg
cmp
sub
or
pop
jmp
jl
add
jno
inc
mov
jbe
push
subb
out
sbb
loop
lock
rcrb
mov
dec
and
sbb
sbb
ret
cmpsl
push
sbb
sub
push
mov
cwtl
sub
cmp
xchg
dec
scas
fnstenv
xor
cs
imul
testl
xchg
lcall
sti
fbld
ja
xor
fs
fldenv
add
jmp
or
pop
add
xor
arpl
test
rcrb
data16
repnz
xchg
fildl
xor
shl
xlat
fdivr
iret
insb
je
adc
fsubr
dec
dec
and
add
inc
ljmp
jo
cmp
add
leave
jge
dec
mov
or
icebp
pusha
sub
ja
push
cmp
mov
bound
imull
xchg
notl
mov
lret
fmuls
sub
pop
or
push
mov
dec
shrl
push
daa
sti
mov
adc
jmp
adc
xchg
sbb
or
lret
and
cmp
sub
sbb
out
cmp
syscall
add
push
out
sbb
and
jnp
add
mov
clc
fisubs
dec
push
testb
in
cwtl
arpl
pop
sarl
icebp
ljmp
std
in
or
cmp
jb
xor
or
adc
je
push
icebp
addl
pop
shlb
pop
xor
jns
fstpt
cmpsb
xchg
add
adc
xchg
iret
mov
sti
add
jmp
inc
push
adc
pushf
inc
fadds
pop
and
insl
pop
add
xor
js
adc
pop
dec
mov
stc
add
push
aad
adc
jo
or
das
mov
pop
add
jge
sbb
out
mov
sub
push
xor
xchg
mov
jb
lret
shll
xor
dec
mov
or
jns
inc
sarl
sbb
sti
add
clc
pop
push
xchg
push
lock
push
cmp
pop
popl
not
test
cltd
mov
mov
push
in
fdivl
jecxz
xchg
mov
dec
push
loop
pop
xchg
pop
xor
xor
enter
push
lahf
adcl
or
or
sti
xor
xor
sub
inc
test
loop
push
push
xor
aaa
das
xor
push
lret
lret
inc
mov
dec
mov
or
xor
adcb
xor
mov
mov
test
and
pop
or
pop
sbb
insb
sbb
add
pop
idiv
cmp
mov
repnz
and
lahf
add
mov
rcrb
hlt
fs
subb
push
and
std
outsl
into
jge
rcr
cld
xor
fldt
pop
std
mov
jge
outsb
mov
push
test
cmp
add
xor
xchg
icebp
xor
rcr
shr
inc
push
rclb
leave
cld
push
das
fistps
xor
xchg
addr16
pop
xchg
push
in
movsl
std
xchg
xchg
dec
icebp
lods
jnp
pop
lahf
jns
add
sub
clc
lahf
cwtl
xchg
xchg
cmp
aas
pop
out
mov
cmpsl
cmc
sahf
aam
jmp
jg
add
out
sti
divb
ret
add
mov
aad
pop
jg
stc
movsb
into
mov
mov
std
loopne
sbb
and
in
push
pop
sub
adc
and
push
sbb
add
cmp
in
es
cmp
push
push
mov
popf
shrl
loope
sarb
ret
out
cltd
ret
cmp
ret
dec
test
or
sub
adc
je
or
cmc
lods
inc
or
cmp
cli
pop
dec
and
pusha
pop
xchg
xor
shlb
jle
dec
sbb
nop
xchg
jne
das
ja
push
or
rcrb
sub
gs
and
outsb
and
in
out
movsb
mov
mov
rolb
sub
push
mov
mov
scas
sarb
and
mov
mov
aam
add
fdivrs
insb
mov
xchg
mov
in
scas
mov
dec
push
push
push
dec
data16
test
nop
movsl
mov
subb
addl
repz
pop
mov
add
dec
btr
test
adc
mov
dec
mov
movsl
adc
jecxz
jmp
push
neg
or
inc
call
inc
cmp
sub
pop
jno
cmp
movsb
jbe
lods
jno
inc
rcl
pop
xchg
mov
and
mov
push
or
hlt
jle
pop
add
push
cmpb
fwait
cmpsb
mov
rcrl
aad
les
inc
dec
add
jns
xchg
sub
or
jle
lock
sub
xor
mov
sbb
or
dec
aas
inc
or
daa
jnp
orl
jecxz
add
cmpsl
cli
push
loopne
fldt
or
xchg
lcall
adc
push
jecxz
add
inc
addr16
leave
xchg
addl
je
xor
in
inc
xchg
cmpsl
xchg
dec
call
dec
cld
mov
mov
add
add
jle
push
cmp
nop
insb
movq
fcompl
hlt
sbb
add
test
nop
jmp
xor
jp
mov
dec
lods
arpl
jmp
rclb
and
dec
push
push
nop
fisttpl
xor
xor
sbb
dec
inc
inc
jmp
imul
mov
repz
or
push
jmp
inc
add
pop
out
sub
hlt
xchg
mov
cwtl
push
mov
inc
jae
inc
mov
fucompp
sub
adc
ret
jg
call
test
das
add
adc
mov
dec
push
push
adc
and
call
jno
fldt
cmp
jne
pushf
push
sbb
movsb
sub
mov
ret
push
xor
mov
daa
pusha
in
xor
or
sub
xchg
ror
inc
push
or
std
pop
cmp
sbb
jle
push
lock
xor
imul
push
push
test
aam
pop
xor
adc
pusha
adc
adc
sub
scas
into
lds
cld
mov
bswap
roll
xchg
andl
push
pop
dec
jge
cmp
push
call
fmul
xor
dec
xchg
cmp
test
push
ja
xor
sahf
sbb
es
or
fstl
lcall
pop
in
dec
jmp
sbb
mov
inc
inc
mov
sbb
es
add
test
stc
mulb
add
flds
pop
dec
pop
sub
push
sub
ret
and
subb
daa
add
xlat
push
nop
adc
shll
pop
adc
mov
mov
ret
mov
fisttpll
rcrb
jge
sbb
loopne
sub
or
test
sti
pop
hlt
dec
ja
mul
add
and
js
pop
lods
adc
stos
jmp
pop
jnp
mov
push
and
and
add
mov
loop
fs
cs
and
inc
daa
mov
push
xchg
mov
pop
out
clc
adc
inc
pusha
pop
lahf
mov
jp
dec
jg
push
and
test
out
pop
cmp
sbb
sub
push
mov
mov
pop
push
ror
jne
movsb
outsb
add
jno
addr16
nop
cmp
jmp
enter
xchg
icebp
mov
shrb
idiv
sbb
or
js
popf
cmp
jmp
shl
shlb
add
movsb
adc
cmp
add
sbb
fidivl
xor
aaa
mov
and
cmp
je
push
cmp
jl
incb
push
sahf
pushf
or
mov
mov
movsl
or
jno
aad
pxor
cmp
inc
pop
loopne
lret
dec
fisubrs
dec
icebp
inc
xchg
push
shll
sub
stc
adc
aas
pop
call
ds
subb
js
adc
and
or
and
dec
jmp
add
gs
sbb
sub
and
dec
lahf
ljmp
push
hlt
adc
sbb
jmp
xchg
or
insl
ret
and
and
jmp
not
faddl
fwait
clc
movsl
pop
outsl
add
ret
out
test
mov
aas
inc
push
push
mov
dec
mov
jo
pop
mov
into
lahf
rcrb
pop
or
aas
and
mov
shll
outsl
mov
push
add
lahf
or
mov
mov
or
jo
or
add
sbb
or
adc
icebp
adc
repz
inc
in
mov
xor
pushf
xchg
or
push
icebp
clc
jno
fs
pop
shrb
cli
rorb
orb
pop
pop
xor
and
imul
adc
fbstp
xlat
inc
mov
fnstcw
in
pushf
xchg
jl
ret
insb
int
repnz
and
xor
xor
shrl
pop
cli
sub
push
mov
xor
dec
push
std
or
cmp
popf
push
inc
jmp
push
add
adc
jbe
sti
mov
push
jp
lahf
rolb
jns
je
xchg
ds
in
repnz
mov
xchg
and
clc
stos
cmpb
add
es
add
orl
decb
stc
sub
jns
movsl
ja
cmp
push
or
sbb
pusha
into
xor
sbb
xchg
pop
mov
insl
inc
xor
nop
dec
add
and
sbb
mov
sbb
leave
xor
daa
push
pop
gs
movsl
subb
pushw
das
xlat
inc
push
mov
mov
sbb
lock
fcomps
ljmp
push
pop
mov
inc
add
jmp
call
add
cwtl
mov
sbb
or
popa
mov
daa
xchg
pusha
cld
push
les
or
mov
scas
popf
fstpt
jb
inc
iret
imul
lock
out
xor
cmp
loope
dec
jmp
xchg
add
pop
movsb
jns
jl
dec
sbb
dec
repnz
imul
pop
inc
cwtl
testl
pop
fsts
pusha
in
dec
xchg
jl
add
xchg
call
sub
push
or
loope
imul
fs
das
add
xchg
ja
enter
popf
push
xchg
ret
pop
mov
mov
icebp
push
jo
shr
mov
xor
ret
or
lods
push
out
js
out
or
mov
push
inc
and
push
mov
pop
xor
data16
ffree
stc
add
push
lret
add
les
adc
or
stc
mov
add
aas
int
sti
add
mov
insl
push
pop
ds
xor
sbb
inc
jns
bound
pusha
mov
rolb
dec
or
cs
add
sti
sbb
je
std
fsubl
push
hlt
xchg
add
or
mov
jmp
xchg
push
inc
dec
jg
and
jmp
sbb
in
pop
cld
in
call
and
scas
adc
das
pop
repz
lret
call
js
pop
lds
cs
popf
add
jns
subl
es
roll
pop
in
jmp
add
push
shll
lret
mov
and
ljmp
shlb
pop
mov
leave
dec
mov
jb
xor
cmp
lods
ret
sub
cmp
or
mov
push
imul
addr16
and
loope
add
repz
or
stos
jge
aam
push
sub
lea
or
stc
mov
les
scas
dec
mov
pop
pop
outsb
jg
mov
test
fdiv
cltd
insb
cmpsb
jns
inc
outsl
popa
inc
xchg
jecxz
or
sub
sbb
pusha
test
or
mov
subl
or
or
adc
jmp
pop
inc
or
cltd
mov
dec
std
iret
add
push
repnz
lock
ret
inc
and
sbb
add
rolb
mov
ja
inc
out
adc
jg
stos
adc
adc
or
imul
movsl
push
lock
insb
pop
into
cmp
push
dec
add
xchg
sbb
and
pop
mov
mov
and
jno
jae
sub
aad
dec
pop
jmp
call
mov
das
not
mov
jne
xor
push
loop
push
popa
adcb
aaa
scas
jle
aam
sub
add
mov
jmp
push
aad
dec
and
out
mov
inc
inc
je
andb
add
add
dec
mov
push
int3
pop
andl
inc
cli
add
jge
int3
fs
arpl
mov
push
fistpl
adc
mov
lret
mov
inc
leave
xor
shr
push
scas
pop
fstl
push
jl
arpl
sub
rcl
imull
or
or
lar
lds
mov
add
test
push
mov
test
cmp
sbb
mov
xor
repz
mov
pop
dec
int
push
adc
pushf
out
mov
and
pop
mov
arpl
jmp
inc
dec
xor
or
push
outsl
cmp
jp
or
loope
mov
scas
push
in
mov
push
sub
dec
dec
pop
jge
mov
sub
mov
jo
pusha
rcl
mov
std
dec
push
pop
push
pop
mov
cmp
subb
mov
xor
call
in
dec
xchg
rclb
repz
adc
mov
scas
iret
mov
cld
and
pop
jmp
pop
scas
sub
imul
cmp
std
pusha
push
jp
push
int3
inc
popf
imulb
push
ret
sub
add
add
jmp
in
lea
pop
incb
aaa
stos
jmp
sub
je
js
cmp
adc
repz
aas
add
add
sub
call
adc
lods
xorl
push
adc
jmp
jmp
lret
jo
add
call
cmp
mov
cs
or
sub
adc
insb
shl
mov
orl
enter
pop
ds
mov
xor
mov
mov
pop
and
mov
test
lcall
orb
imul
pop
add
xor
hlt
pusha
push
mov
or
add
add
pop
loopne
mov
add
clc
roll
rol
call
lock
push
add
xchg
imull
fisttps
mov
inc
pop
fs
mov
dec
not
cmc
or
jno
sub
out
fidivrl
loope
or
retw
xchg
arpl
push
bsr
pop
fdivs
popa
out
movsb
sub
movsl
lret
bound
bound
dec
xor
cmp
pop
dec
xor
loopne
mov
pop
or
ret
jl
xor
test
in
cli
lds
pop
mov
lds
add
xor
nop
sbb
rolb
sbb
cli
cmp
xchg
pop
gs
scas
aas
mov
imul
jg
jne
shll
fs
das
test
jae
loop
sub
repnz
ret
cld
add
out
outsl
div
xlat
lahf
xchg
inc
pop
decb
cli
xchg
push
mov
shll
hlt
add
push
test
int
pushl
loop
repz
push
sbb
inc
inc
xchg
or
int
sub
or
dec
mov
push
orl
pop
jno
mov
shl
jbe
add
sub
fdivl
xor
movd
addb
mov
xor
stc
cld
mov
shrl
mov
adc
fstps
sub
dec
cwtl
add
sbb
add
jle
cwtl
sahf
mov
mov
push
fldcw
rolb
repz
cmpb
add
add
fidivl
push
data16
mov
mov
cmp
shlb
add
push
subb
jmp
test
jbe
fldt
pushf
out
int
or
dec
pop
sub
fucomi
or
xor
sbbl
orl
je
and
adc
fxch
leave
xlat
int3
test
lahf
jae
lods
rorl
lods
cwtl
pushf
mov
adc
js
xchg
sbb
mov
add
sbb
pushw
pop
pop
sbb
push
push
and
into
push
jno
xor
fistpll
inc
test
or
mov
mov
jmp
mov
sbb
push
jle
inc
add
push
mov
out
adc
ret
jae
inc
pop
jmp
mov
mov
lock
orb
sbb
adc
std
psadbw
mov
mov
sahf
xor
mov
and
iret
jmp
xchg
mov
aaa
or
repz
xchg
mov
xchg
je
popf
rclb
mov
jae
cmp
iret
sbb
and
add
mov
dec
lods
fldl
in
stc
loopne
mov
negl
or
ljmp
sub
add
clc
push
dec
pop
lods
cmp
dec
dec
or
adc
dec
jp
sbb
and
adc
repz
imull
push
jp
scas
mov
adc
or
test
popa
push
jmp
and
shrb
lock
cwtl
cli
add
cmp
xor
mov
mov
test
mov
sbb
cmp
add
mov
test
and
je
bound
cmp
orb
fidivs
arpl
push
test
and
add
rolb
flds
cmpsb
inc
mov
xlat
sub
xchg
jmp
mov
sbb
cmp
insb
mov
lods
rclb
dec
loopne
loope
je
pop
orb
out
xor
shlb
push
mov
adc
mov
sub
inc
call
or
dec
out
out
jmp
pop
jecxz
adc
or
aaa
jl
xor
jmp
add
cmp
pop
test
xorl
mov
dec
scas
fsubrl
add
das
jb
or
daa
repnz
call
add
testl
pop
call
pushf
es
lods
push
add
push
mov
mov
xor
add
push
or
push
inc
add
jmp
xorl
push
push
stos
jmp
pop
and
cmp
or
mov
lahf
xchg
or
in
in
mov
jo
addr16
int
imul
push
xchg
inc
scas
shrl
shlb
pop
add
mov
movsl
dec
ja
xchg
mov
and
orb
pushf
pop
dec
mul
mov
lds
pushf
jmp
push
and
xor
pop
pop
inc
cmp
movl
pop
dec
loope
add
pop
mov
outsl
xchg
pop
inc
pop
push
and
andl
push
mov
out
jecxz
je
pusha
xor
cmp
ret
test
push
stos
dec
xchg
inc
pop
cmp
mov
call
xorb
cmp
data16
pop
xchg
or
lds
or
aaa
jle
fisubrl
rep
cltd
ret
sbb
ljmp
push
push
adc
aas
xchg
and
cmp
xchg
stc
pop
lods
add
mov
or
enter
jg
xchg
or
and
adc
ja
fstl
lea
pop
loopne
dec
dec
loope
ficompl
stos
sub
js
add
inc
push
sbb
sbb
jp
adc
imul
inc
dec
cltd
mov
add
xchg
lea
jmp
mov
mov
ret
popa
sub
fs
cmpsl
xchg
sbb
mov
or
jae
adc
imul
sub
lods
dec
sub
cmp
lret
dec
add
mov
enter
jnp
std
jo
mov
in
jl
mov
inc
int
lahf
push
pop
and
sub
jmp
inc
pop
push
cld
sbb
mov
sub
pop
and
pop
pop
shlb
xor
lcall
sbb
loop
ffree
or
jb
inc
cmc
stc
lcall
les
out
pop
mov
in
xchg
pop
je
push
xchg
aam
les
loop
or
pop
mov
or
mov
out
sub
sub
inc
sahf
or
imul
sub
das
std
mov
inc
cmp
leave
fsub
adc
lock
inc
jmp
push
subb
and
xchg
aas
mov
push
in
push
push
jmp
repnz
stos
inc
test
test
mov
out
lret
xor
shr
push
rcrb
jno
daa
cmc
pop
frstor
bnd
jo
test
cltd
sub
cmp
push
add
frstor
outsb
loope
or
and
add
mov
sti
pusha
ficompl
gs
add
cwtl
pop
mov
std
mov
pop
jle
mov
mov
out
leave
pop
lods
leave
mov
xor
dec
add
add
gs
xor
lods
dec
cmp
jbe
popf
sarl
test
and
sbb
push
outsb
xchg
adc
clc
jbe
push
xchg
jno
lahf
loop
ret
aad
loopne
and
sub
bound
les
jo
hlt
add
nop
mov
push
pushf
pop
or
movsb
add
xchg
ja
jl
push
and
mov
or
push
or
das
pop
iret
ja
sar
mov
lret
insb
les
shl
incb
flds
or
mov
jp
rcll
cwtl
aam
and
fcmovu
inc
sbb
or
jmp
push
sbbl
pop
push
inc
or
popf
push
mov
mov
enter
inc
jg
mov
jne
mov
fs
test
aas
scas
sbb
sbb
scas
push
xor
mov
xchg
test
pop
scas
into
iret
or
xor
imul
je
or
sub
loope
xor
pop
cmc
pop
repz
adc
sbb
xchg
dec
scas
cmp
arpl
addl
jno
hlt
sbb
and
adc
sub
dec
mov
push
cmp
in
testb
adc
aaa
aam
popa
push
pusha
test
xor
push
sub
loopne
or
sbb
or
cmpb
push
dec
adc
mov
ret
jg
dec
or
rclb
adc
aam
cmp
shrl
ret
xor
out
sub
fcoml
fcmovb
dec
out
adc
inc
ja
or
sub
xchg
sub
das
push
cltd
and
cli
inc
pop
push
cld
pusha
mov
jmp
icebp
ljmp
sbb
sbb
jnp
jns
addb
and
xchg
adc
outsl
lods
sbb
mov
into
xor
lahf
jo
aas
and
pop
shrl
xor
push
mov
push
jmp
hlt
or
adc
ret
xor
add
insl
incb
cmc
pop
mov
push
loope
aad
dec
ror
orb
push
mov
mov
je
xchg
lret
pop
push
pop
addl
adc
ljmp
pop
scas
imul
ljmp
enter
cmp
mov
or
es
clc
test
pop
adc
outsb
int3
sbb
and
mov
addr16
outsl
pop
add
xor
adc
push
fcomps
pop
pop
mov
cmc
pop
xchg
js
mov
insb
xchg
jmp
dec
std
je
push
out
adc
push
mov
out
and
jmp
inc
add
inc
sti
and
push
in
stc
mov
movl
outsb
gs
and
mov
aas
xor
loop
mulps
and
xchg
mov
xor
testl
xlat
jno
and
lret
in
mov
popa
in
sub
mov
testb
cmpsb
jle
subl
xchg
sbb
out
push
inc
imul
sub
sbb
cmp
outsb
and
enter
lods
or
stc
cmp
inc
mov
jbe
mov
clc
ljmp
call
jns
or
push
push
jno
add
rolb
pusha
add
or
outsb
sub
inc
test
cmp
or
ret
aam
adc
popa
aaa
aam
not
out
mov
sbb
mov
test
pusha
or
pop
xor
lods
add
mov
iret
repz
push
xchg
inc
es
pop
mov
fnop
mov
add
mov
int3
std
jmp
push
push
pop
adc
add
in
jl
and
sub
je
jae
mov
push
pop
pop
stos
adc
xchg
sub
sbb
jo
hlt
test
or
and
insl
lcall
lea
push
cmp
push
fcmovb
stos
xor
rol
cltd
sub
call
mov
jmp
push
mov
ret
mov
sub
jmp
cmc
stos
mov
sub
out
int3
and
or
loopne
dec
inc
out
ljmp
inc
add
push
cmp
dec
and
push
xor
sub
cmp
gs
test
or
daa
popa
mov
pop
pop
mov
inc
and
dec
aad
movsl
mov
and
add
push
and
or
loop
test
repz
jbe
outsl
daa
sarb
addr16
add
xlat
xor
cmc
in
cs
roll
dec
sbb
or
pop
cld
and
mov
push
push
loopne
add
xor
cmp
fisttpl
lea
mov
bound
push
push
cmp
daa
push
xor
xchg
pop
jno
and
add
arpl
rcrl
shrb
pop
push
push
inc
lock
lods
push
bound
pop
jbe
inc
push
add
pop
add
push
stos
pop
sbb
call
mov
xchg
int
outsl
add
or
popf
sar
arpl
jmp
sbb
or
adc
cmp
mov
sbb
push
inc
fs
lds
ret
in
loope
jns
xchg
je
or
mov
add
rcl
loopne
test
das
cmpsl
out
shlb
mov
and
xor
pop
sub
push
push
xor
add
dec
add
mov
push
testl
ljmp
test
dec
int3
lock
pop
icebp
adc
sub
orb
push
notl
pop
jg
push
or
pop
pop
xchg
shrl
jmp
jp
movsl
in
dec
dec
inc
test
add
repnz
rolb
push
repz
cmp
shlb
pop
push
jno
push
mov
in
sbb
dec
cmp
insb
mov
adc
or
in
sub
cs
movsb
push
or
push
out
lcall
inc
cmpsl
xchg
cmp
ljmp
dec
out
call
cmp
dec
push
mov
pop
imul
mov
int3
call
enter
sub
and
and
mul
fmuls
or
fnstcw
loope
cwtl
push
rcr
stc
lret
fwait
mov
hlt
out
mov
and
addl
pop
in
or
or
push
fucomi
shll
cmp
pop
scas
inc
loop
or
daa
fildl
xor
sub
cwtl
xlat
adc
pusha
fldl
sbb
int3
inc
dec
jo
add
lods
loop
aam
pop
movsb
mov
push
add
dec
push
pop
add
sarb
fs
and
or
scas
push
pop
pop
or
fadds
push
flds
mov
icebp
pop
or
cmpsl
jns
pusha
mov
rcll
shr
test
loopne
mov
pop
dec
xchg
in
mov
gs
add
jns
push
lahf
mov
pop
repnz
pop
inc
and
jmp
pop
mov
jns
ror
jo
dec
push
mov
cmp
pusha
cltd
sub
push
cmp
and
ja
fcmovnbe
xor
jmp
cltd
pop
dec
dec
or
add
cs
pop
pop
sub
mov
sti
push
pop
push
inc
out
das
andb
mov
dec
ja
gs
jnp
jge
or
inc
mov
add
cmp
jmp
mov
cmp
cli
jo
add
lahf
mov
jmp
adc
xchg
or
pop
ljmp
xor
cmp
in
jp
or
pushf
sub
mov
jmp
add
dec
cmp
and
out
fs
les
mov
stos
clc
popf
in
or
sub
add
pop
jp
xor
jae
lahf
dec
xorb
jg
js
inc
insl
clc
scas
dec
jnp
mov
rolb
out
out
mov
rcrl
cmpsl
pop
movsb
inc
stos
mov
push
lret
movsl
dec
loop
repnz
cmc
stc
inc
test
add
push
test
add
jo
dec
adc
and
popa
cmp
mov
adc
or
mov
xlat
dec
lret
out
arpl
cmp
movsl
mov
testb
imul
lahf
inc
xchg
data16
jo
divl
into
les
and
adc
adc
leave
pusha
fsubrs
mov
shrb
loopne
clc
cli
cmp
sub
sbbb
jmp
push
ljmp
lret
arpl
loop
cmc
mov
inc
adc
jbe
pop
stos
iret
or
push
dec
sub
loopne
pop
dec
daa
adc
pop
cmpsb
push
jo
push
pushf
repz
xor
push
arpl
lods
test
jmp
push
mov
ljmp
and
sarl
jo
and
ds
jmp
out
cmp
mov
imul
push
or
xor
idivl
or
sbb
out
adc
into
jbe
and
mov
mov
in
add
or
lcall
pop
mov
inc
out
outsl
ds
andl
jns
pop
push
cmp
jo
addl
push
push
dec
jbe
loopne
cmpsb
jnp
add
jmp
add
pop
pop
and
pop
fidivrs
les
adc
dec
jne
sbb
cld
add
dec
or
cli
int
mov
fimull
and
movsl
sub
kmovb
sbb
and
aaa
cmp
pop
inc
and
sub
sar
dec
loope
pop
lcall
jg
and
lcall
add
pop
clc
sbb
xchg
sbb
mov
xlat
lret
push
in
add
xor
add
xlat
daa
sub
out
push
sub
add
sbb
xor
dec
adc
push
mov
add
pop
cmp
sub
cmpb
xchg
and
or
fidivl
pop
mov
mov
push
jo
push
addb
add
fnstenv
loopne
push
or
push
ret
pop
or
data16
std
xchg
aam
daa
jge
stc
sbb
mov
xchg
in
xchg
call
scas
mov
or
shlb
dec
or
add
xchg
push
pop
dec
fsubrl
push
inc
pop
mov
rorb
dec
and
hlt
pop
jmp
sub
xor
lods
push
int3
mov
js
pop
mov
stos
inc
cmp
adc
push
subb
stos
test
cmp
mov
pop
push
out
inc
aas
pop
rcrb
sub
mov
pop
adc
aad
push
test
jge
xchg
and
leave
in
js
jmp
add
pop
sub
sbb
test
pop
lahf
js
jns
push
push
xor
orb
ss
jge
and
lds
push
pop
jmp
jge
pop
inc
mov
mov
popa
jmp
out
lret
aad
mov
mov
and
bound
sbb
add
enter
lahf
or
and
scas
daa
sbb
jbe
xor
xor
movsb
lds
lcall
inc
sub
xorb
xchg
cmc
call
push
inc
loopne
sub
mov
pop
ret
inc
pop
divb
mov
xchg
xor
test
push
lret
int
add
cmc
sub
insl
jle
push
adc
mov
imulb
xchg
sub
pop
sub
mov
dec
mov
loopne
es
sti
lret
jg
ljmp
add
lock
test
mov
adc
push
imul
add
fwait
add
dec
js
xchg
rolb
lods
jg
push
or
or
cmp
lret
scas
sbb
cli
add
dec
shl
cmp
imul
cwtl
fwait
lds
or
aaa
inc
js
fisttpl
push
jne
jmp
xchg
add
push
enter
adc
adc
ljmp
mov
xchg
sub
adc
stos
sub
mov
push
push
rcll
inc
jo
adcb
jnp
xchg
cmc
push
inc
insb
adc
repz
roll
jmp
in
out
mov
mov
cltd
sahf
int3
sub
add
dec
shl
jle
sub
or
sub
stc
sub
divl
pop
add
push
pop
out
jge
call
cmpsl
jmp
sbbl
lds
mov
inc
xchg
popl
or
pop
mov
push
fwait
xor
inc
in
imul
in
and
cwtl
xor
mov
in
mov
stos
fdivr
jbe
repz
icebp
or
movb
lret
or
jmp
ljmp
jae
test
or
mov
mov
xor
push
rclb
lret
mov
outsb
xorb
test
popa
movsl
add
jb
mov
pop
xor
mov
negl
sub
xor
vprotq
push
mov
mov
sub
test
popf
pusha
xchg
mov
dec
test
aad
mov
xchg
or
adc
negb
scas
cmp
add
testb
in
sub
in
outsl
les
pop
inc
lods
or
sbb
adc
mov
inc
xchg
cwtl
inc
fsubl
or
add
aad
xor
and
xchg
mov
pop
loopne
xorb
cmp
arpl
xor
push
out
std
pop
not
push
sbb
sbb
cmp
fsubrp
cs
pop
repnz
les
inc
mov
pushf
sbb
and
cmc
imulb
mov
cmp
insb
test
int
cld
push
sub
xor
scas
mov
ds
adc
out
leave
xchg
ds
sti
mov
imul
cmp
lret
add
int3
xor
sub
jae
adc
pop
pop
cli
int3
cmp
or
push
xchg
add
or
and
add
xor
xor
add
mov
jnp
and
push
pop
pop
out
aaa
shl
lods
hlt
mov
xchg
out
push
lahf
jb
or
and
insb
ljmp
pop
dec
call
insl
xchg
pop
js
mov
pop
push
iret
ss
in
xchg
cwtl
aaa
push
xchg
cltd
add
in
xor
push
add
jp
sbb
push
push
mov
mov
jmp
xchg
push
sbb
rcrb
adc
adc
mov
sub
cmp
add
xor
mov
xor
ret
sbb
nop
jmp
mov
or
adc
sub
inc
les
pop
and
dec
jg
push
pop
push
lods
js
ds
or
jl
sub
push
nop
das
fsubrs
mov
add
test
test
cmp
rcll
es
push
xor
xchg
in
jp
pop
loope
cmp
sub
mov
mov
and
inc
aad
ja
outsl
adc
push
movsb
xlat
jo
rcrl
filds
mov
and
test
or
fldcw
not
add
mov
jmp
inc
jecxz
cmp
jle
xor
and
fst
sbb
push
and
pop
pop
mov
xor
test
push
cmpsl
and
dec
jecxz
sbbb
rcll
jo
hlt
dec
add
xor
les
adc
inc
or
add
push
mov
mov
outsl
iret
sbb
xchg
cs
loop
sbb
or
sub
out
jecxz
sub
lcall
sub
push
adc
into
jbe
mov
scas
loop
test
jnp
jl
jne
outsl
out
mov
push
jnp
add
add
sub
jl
leave
add
mov
sub
jmp
decb
jo
pop
out
shlb
ja
xchg
mov
loopne
pushf
mov
outsl
rcrl
add
cmp
jp
jbe
pop
jmp
sub
shlb
or
cli
repz
or
lret
or
loope
sub
push
add
shl
xchg
xchg
pusha
push
roll
mov
push
and
xchg
add
dec
mov
je
leave
mov
ja
cwtl
mov
das
mov
ja
sbb
or
jno
mov
mov
xor
movsb
pop
pop
stos
je
andb
insb
popa
push
daa
cmp
lea
pop
push
push
push
jmp
or
aam
cmpb
jno
mov
sbb
popa
jmp
cli
sbbb
and
or
inc
lcall
rclb
faddl
or
add
and
mov
xchg
mov
push
sub
sbb
ja
cmc
nop
pop
or
fs
jmp
lock
inc
jp
lods
sbb
xor
mov
sbb
pop
aad
mov
jg
clc
jmp
jb
mov
jo
mov
das
cmp
adc
leave
hlt
lret
dec
xor
loope
adc
call
mov
hlt
xor
cmpsb
xor
and
mov
mov
dec
insb
push
dec
sub
jno
repnz
mov
mov
sub
or
orb
mov
pop
jle
xlat
mov
gs
xorb
and
loop
dec
dec
in
push
rcr
bound
pop
lods
cmpsl
pop
or
out
stos
test
add
ds
xor
or
inc
rcl
loopne
xchg
movsb
and
es
push
push
jp
mov
jmp
push
mov
push
hlt
stos
out
or
popf
inc
subb
mov
xchg
fiaddl
or
stc
jmp
push
mov
push
int
jl
or
sub
int3
outsb
pop
je
jp
mov
rorb
pop
ffreep
outsl
dec
mov
icebp
loopne
lds
negb
movsb
or
das
lret
sar
adc
xchg
mov
push
fdivrp
pop
jmp
lds
inc
or
mov
jb
fwait
shr
imul
sub
sti
sahf
insb
mov
sbb
mov
rorl
cmpsb
cmp
add
mov
les
sbb
jo
mov
push
rorl
pop
push
daa
push
pop
cmc
pushf
adc
or
cwtl
loop
inc
popa
add
dec
pusha
xchg
jns
iret
movb
dec
pop
sti
add
jnp
mov
repz
lods
das
sub
les
lcall
push
adc
test
mov
lret
adc
push
sbb
dec
dec
das
cs
xor
jge
xlat
ret
insb
test
and
loopne
sarb
adc
adc
ret
hlt
mov
clc
pusha
sbbl
xchg
rorb
mov
inc
xchg
aad
jae
push
mov
outsb
or
mov
mov
or
or
xchg
xchg
and
pop
fists
or
enter
lods
inc
adc
mov
dec
sahf
inc
dec
adcb
shl
stos
dec
call
dec
lahf
cld
fsubrp
pop
add
push
push
arpl
xchg
and
jno
add
aam
and
add
jmp
xchg
sbb
cs
xchg
daa
shll
jno
loop
xchg
ljmp
and
xor
sbb
aaa
mov
cmpsb
mov
aad
push
inc
mov
pop
stos
out
lret
pop
push
jmp
xor
movd
dec
and
and
adc
ret
test
pop
cmpl
aas
rol
sub
pop
das
ljmp
loope
pop
cmp
xor
adcl
push
push
and
jno
sbb
add
add
cmp
aam
push
ds
scas
mov
adc
mov
lcall
lds
adc
lods
or
add
dec
bound
ja
pop
jl
push
data16
out
arpl
in
stos
xor
adc
sub
pop
jno
mov
es
jns
mov
testl
jb
shrb
mov
cmpb
fnsave
mov
mov
cmp
push
pusha
loop
push
jle
jne
test
jmp
aam
fbld
stos
enter
xor
or
and
mov
mov
adc
or
push
mov
cs
jb
faddl
into
cs
adc
movsl
cltd
adc
sbb
fisubs
jae
adc
push
pop
gs
push
lods
sbb
push
popa
jmp
jns
ljmp
mov
lods
add
inc
mov
inc
inc
jbe
jb
daa
repz
cmp
aas
pop
mov
mov
pop
popa
push
and
loopne
dec
lcall
cli
push
js
and
inc
hlt
aam
mov
pop
sbb
mov
nop
mov
dec
wbinvd
pop
push
xchg
pop
test
mov
add
icebp
adc
mov
icebp
pusha
sbb
rcl
in
jns
cmp
jnp
addr16
ds
add
push
and
push
add
xor
sub
stos
push
sahf
addr16
lock
add
popf
pop
or
fsub
or
cmpb
pop
fldl2t
test
adc
scas
and
push
mov
xchg
adc
jne
mov
add
shl
rolb
mov
mov
push
add
out
arpl
cs
xorb
pop
mov
add
das
imul
sbb
ret
add
imul
push
rcl
aad
xor
mov
insl
cmp
jge
dec
add
jnp
pop
or
sub
or
adc
push
and
mov
jb
and
bound
and
mov
rolb
xchg
inc
arpl
enter
lea
es
push
sub
add
shll
daa
out
jg
push
add
or
inc
pushf
dec
xor
jge
fldcw
mov
shl
xchg
adc
and
insl
push
push
test
mov
mov
pusha
arpl
je
cwtl
arpl
out
and
adc
mov
push
mov
scas
cmc
out
cmpsb
call
jecxz
adc
jg
adc
test
rclb
sub
push
mov
sbb
mov
daa
or
push
hlt
fadds
testl
cli
test
sti
movsb
push
dec
adc
out
mov
pop
mov
fdivp
dec
mov
jns
dec
test
jp
push
or
push
adc
test
mov
lods
sbb
inc
and
add
push
cmpsl
out
scas
xchg
outsl
out
and
popa
mov
ljmp
sub
add
adc
sbb
andl
or
mov
lahf
add
jmp
mov
push
cmp
fmuls
into
and
sub
or
xor
ljmp
mov
mov
test
xor
lock
testb
sub
test
sbb
or
push
cmpsb
and
pop
mov
cmp
repz
or
js
adc
jb
subb
sub
testb
shll
pop
and
cltd
ret
adc
and
push
sbb
adc
sbb
out
adcl
pop
inc
dec
jb
inc
call
ret
sub
or
cwtl
pop
jg
and
iret
xchg
sbb
sub
sbb
mov
outsl
xor
push
or
imul
lock
gs
out
dec
js
add
cmp
ret
and
cmc
push
push
jmp
sub
aaa
sub
pop
pop
mov
sub
push
or
mov
rorl
inc
xchg
add
nop
rclb
dec
push
outsl
and
sti
movsl
mov
lret
lret
shll
sub
gs
fsub
lahf
fadds
sub
enter
or
in
pop
cltd
pusha
mov
jg
in
xchg
cwtl
or
ret
sbb
jnp
mov
dec
test
bound
nop
push
mov
in
or
outsb
rorb
pop
or
sub
repnz
add
rolb
leave
popa
jns
lcall
rclb
mov
je
add
jmp
decl
int3
iret
sub
popf
push
cmp
push
mov
and
pop
xchg
inc
out
jne
and
add
lods
outsl
lock
popl
dec
jb
jb
jge
add
adc
mov
mov
add
daa
mov
cmpsb
hlt
dec
jns
cwtl
mov
test
mov
xor
movsb
sub
les
push
sarb
hsubpd
fwait
adc
in
add
add
repz
lret
jl
ljmp
lret
stos
mov
and
mov
iret
mov
pop
cmpsb
or
dec
mov
pop
pushf
aad
daa
jge
mov
sub
jmp
popf
pop
test
inc
push
aas
pop
push
xor
call
mov
sub
sti
js
ljmp
dec
int
mov
loope
mov
jl
adc
adc
inc
flds
mov
insl
cmp
clc
rclb
mov
or
bound
lock
push
add
ret
cmp
mov
sub
mov
into
pop
rcr
and
pop
or
nop
jo
add
into
jmp
lds
mov
stos
jns
sub
xadd
xor
push
cs
sub
sub
add
outsb
popf
insb
enter
jmp
inc
dec
adcb
test
daa
push
gs
pavgb
xchg
pop
adc
es
sub
cli
mov
add
data16
pop
fcompl
xchg
jl
push
mov
xchg
lods
dec
imul
push
xor
pop
loopne
imul
mov
inc
mov
jp
mov
addr16
mov
push
ja
or
xor
mov
std
aam
cli
call
cmp
jmp
pop
push
sbb
cwtl
mov
loope
hlt
hlt
shrl
bound
xorl
add
pop
sub
pop
push
dec
pop
mov
stc
aas
pusha
ds
mov
mov
push
cmp
cmp
es
arpl
lahf
jl
mov
xor
jo
leave
push
out
add
ds
mov
mulb
cmp
flds
dec
pop
dec
sarb
mov
mov
mov
jne
ljmp
cli
cmp
inc
push
jg
add
sbb
push
pop
cmp
dec
test
cmp
jbe
jmp
push
jnp
sub
std
add
push
jmp
gs
test
mov
add
in
sbb
lret
pop
pop
add
or
lret
mov
add
jns
push
inc
not
rolb
xor
jmp
into
shr
mov
xor
pop
out
or
lds
test
in
push
add
and
sti
push
pop
inc
and
ss
cli
mov
dec
pop
jmp
jmp
shr
imul
idivl
cwtl
std
push
gs
hlt
or
neg
outsl
andb
lret
lods
mov
pop
lods
xlat
or
fdiv
mov
lret
in
add
stos
icebp
push
lret
pop
loope
int
sub
mov
cmpsl
loopne
mov
mov
xor
mov
enter
mov
out
push
lds
nop
add
pop
mov
lcall
loope
out
pop
mov
repz
jle
cmpsl
jge
xor
fmuls
mov
jle
or
jmp
dec
adc
nop
pop
scas
sub
stos
inc
into
mov
jp
mov
mov
cli
adc
cmp
daa
scas
cwtl
sub
cs
mov
xor
jmp
test
testl
and
lahf
inc
and
or
aaa
lret
xor
cltd
es
out
adc
dec
jmp
repnz
mov
pop
adc
adc
or
call
aaa
iret
pusha
push
mov
cwtl
mov
jle
scas
add
mov
ss
fst
repz
inc
add
add
in
std
cmp
in
xor
cmp
repnz
dec
or
xchg
nop
push
or
pop
mov
inc
mov
clc
jge
mov
dec
jmp
pop
sub
push
cli
push
adc
dec
cmpb
jmp
sahf
xlat
icebp
mov
clc
loopne
add
cltd
fwait
or
outsb
fmull
out
push
and
push
aas
in
cli
adc
and
cmp
rolb
pop
push
mov
xorb
std
cmp
inc
out
pop
cmp
sub
call
fdivs
mov
int
testl
cs
aad
test
push
imul
or
sub
out
cli
mov
cs
sarb
push
lock
jge
pop
or
add
adc
push
pop
ret
cli
je
add
je
jecxz
adc
icebp
xor
fcomps
dec
xchg
incb
mov
mov
sbb
shr
not
inc
cmp
jmp
pop
pop
rclb
loop
pop
or
iret
pop
fs
dec
pop
aas
mov
xor
mov
and
or
add
or
cmc
jne
lahf
pop
popf
mov
xor
jmp
push
push
mov
sub
and
out
sub
test
xchg
gs
cld
je
shrl
negb
dec
rclb
dec
pop
sbb
dec
inc
rcll
sbb
and
sub
adc
mov
out
and
rcr
loopne
popa
testb
push
jmp
sub
sub
xchg
pop
ja
mov
jge
ret
ljmp
pop
call
add
mov
pop
outsl
sub
cmp
push
sub
data16
add
dec
ja
push
sub
pop
outsb
test
not
mov
pop
sub
sti
nop
and
scas
pop
mov
comiss
aam
rcll
movsl
cld
scas
fisttpl
sbb
and
cwtl
ficoms
or
sbb
sub
call
incb
cmp
sub
fiaddl
pop
dec
add
sbb
mov
pushf
inc
insl
mov
mov
mov
mov
jmp
mov
mov
dec
inc
jle
rorl
jg
loope
shrb
dec
and
push
repnz
inc
mov
and
push
mov
jbe
jo
mov
aad
mov
jmp
push
or
aas
or
adc
sbb
aaa
add
sbb
sar
pop
mov
test
lret
cmp
mov
lahf
push
pop
mov
xor
xchg
jne
push
outsl
push
inc
or
inc
adc
scas
jmp
int3
pushf
xor
fisttpl
pop
mov
out
xchg
sub
or
popa
fsubrl
push
sbb
jl
insb
adc
xor
push
lds
and
jae
adcl
insl
daa
jmp
incb
push
outsl
xchg
jg
pop
sub
out
pop
inc
jecxz
cmp
sub
and
daa
inc
pop
xchg
mov
mov
shl
sub
cmpsb
mov
pop
loop
xor
mov
dec
imul
lods
inc
mov
add
lods
sub
pop
mov
inc
and
flds
movsb
pop
and
fcoms
js
mov
shr
movsl
pop
fistps
xor
dec
mov
dec
and
pop
sub
fsubrs
xchg
mov
stc
rorb
lret
pushf
daa
push
mov
inc
daa
aas
dec
add
sbb
jb
push
jp
pop
jmp
daa
pop
in
aad
mov
xor
dec
pop
xchg
xor
lods
daa
imul
mov
testl
andb
pop
sti
add
push
pop
insl
mov
shufps
loope
ret
jl
daa
sub
shrl
mov
and
imul
or
xlat
push
arpl
fcoml
jo
std
loop
fsubrl
adc
imul
lret
orb
sub
rorb
jmp
in
mov
dec
inc
fs
or
adc
stos
mov
push
add
arpl
push
cmp
xor
popf
rcrb
cli
lret
mov
hlt
adc
and
lods
out
sbb
and
add
jne
stos
hlt
sti
mov
push
int3
xchg
cs
adcb
jge
or
dec
sbb
or
jmp
or
iret
push
fwait
dec
dec
std
pop
inc
or
push
stos
push
inc
ss
inc
nop
je
cmp
outsb
and
in
mov
and
mov
pop
repz
sbb
out
dec
adc
xor
pop
sub
rclb
enter
push
mov
mov
rol
adc
in
or
out
mov
jne
test
add
sub
add
push
push
mov
mov
sub
popf
mov
mov
testb
push
push
lret
xchg
and
sub
leave
or
divb
mov
aam
mov
xlat
xor
icebp
dec
into
push
adc
shr
lret
sqrtps
andl
cmc
scas
and
or
push
gs
addr16
in
push
mov
mov
pusha
popa
addl
loopne
pusha
push
xchg
jg
add
adc
stos
pusha
mov
pop
mov
cmp
mov
add
mov
cmp
push
stos
mov
dec
mov
adcl
sti
add
pop
sub
scas
cmp
incl
dec
ret
push
lret
aam
fsubrs
addl
push
leave
and
ret
aam
pop
pop
out
push
das
out
cmp
cltd
or
push
mov
push
or
jb
or
add
pop
adcl
out
cmp
inc
hlt
jo
mov
pop
loopne
scas
pop
in
push
dec
scas
xor
cld
xchg
pop
sub
mov
adc
add
push
std
or
or
mov
xchg
das
in
pop
movsb
stos
jae
sub
adc
imul
jmp
add
rorl
or
jmp
andl
xor
pop
dec
pop
jg
out
xchg
cmpsl
cmp
fbld
sbb
repnz
jmp
daa
ret
and
nop
mov
xchg
lcall
adc
and
sbb
mov
mov
andb
push
loop
mov
or
aad
inc
nop
and
fsts
xchg
popa
add
inc
sahf
or
cli
les
std
inc
cmp
in
cmp
add
fucompp
test
pop
scas
mov
stos
lcall
xchg
out
jb
or
das
mov
sahf
or
push
push
add
imul
dec
lods
push
xchg
scas
rolb
xor
add
lahf
and
test
push
enter
mov
push
dec
not
add
jmp
mov
sbb
jmp
push
jmp
cld
arpl
out
mov
das
pop
mov
mov
mov
sahf
xor
pop
push
mov
jno
jmp
pop
ret
cs
push
add
add
dec
in
dec
pop
mov
and
dec
push
pop
jno
xor
pop
add
xlat
jmp
pause
shrl
cmp
push
repnz
clc
clc
aad
dec
push
xchg
clc
lahf
push
pushf
test
mov
push
sub
loop
add
add
pop
mov
or
psubd
loope
pop
jp
xor
xchg
pop
andl
movsl
aas
add
pop
pop
in
add
sub
les
pop
ja
sbb
jmp
test
into
pop
in
mov
jae
or
sbbl
mov
push
and
jge
ret
sub
ret
add
add
sub
cs
sbb
pop
or
and
fstl
ror
popa
pop
pop
cmp
rorb
cmp
imul
inc
jp
inc
mov
ds
sub
inc
adc
push
ja
sub
cmp
dec
je
cltd
push
jne
dec
mov
shrb
scas
adc
iret
in
sbb
loop
mov
mov
fucomp
nop
sub
arpl
dec
fiaddl
adc
jecxz
or
push
addr16
inc
orb
xor
les
or
adc
inc
lcall
lret
out
adc
mov
notb
xchg
pop
xor
push
push
sub
adc
subb
je
and
outsl
dec
mov
je
bound
mov
repnz
and
dec
mov
push
mov
inc
push
xor
pop
ret
pop
mov
scas
xchg
test
lahf
je
js
loopne
mov
in
test
push
jecxz
pcmpgtb
mov
mov
pop
in
clc
in
cmp
and
jmp
test
adc
xchg
shll
loopne
mov
pusha
push
push
mov
popa
jmp
mov
shll
adc
dec
adc
push
aas
addb
add
xor
pushf
out
clc
test
pop
sbb
mov
bound
xchg
pop
pop
inc
lahf
loopne
dec
adc
sub
push
jle
inc
fists
je
enter
or
sbbb
jmp
sub
push
ret
sbb
fisttpll
out
popf
cs
movsb
and
push
adc
or
mov
sub
shlb
lahf
pop
jae
adc
push
mov
xor
daa
dec
jmp
sbb
cmp
stc
aas
int
mov
aas
sbb
or
sub
pop
data16
xchg
inc
xor
stos
mov
add
sub
cmc
pop
add
push
pop
pop
shlb
mov
jae
pop
xchg
mov
test
xlat
xchg
lret
fidivrs
xor
jmp
inc
pushf
pop
jns
cmpsl
sti
lret
insl
push
jmp
inc
in
lods
jl
mov
mov
push
sbb
cs
add
sbb
jno
dec
xor
inc
or
or
pop
incb
or
mov
sbb
pop
xor
nop
add
jnp
iret
jne
outsb
sub
mov
sbb
adc
ss
or
inc
es
add
push
sub
mov
push
push
xor
push
daa
mov
subb
dec
sahf
jmp
add
push
leave
subb
jmp
add
mov
cmp
pop
movsl
pop
ja
imulb
cmpsb
in
mov
rclb
jb
cmc
jbe
adc
fwait
mov
repnz
push
loope
jmp
dec
pop
add
rcrb
icebp
jne
fnstenv
cwtl
mov
cmp
and
das
lock
xchg
xchg
jae
or
sbb
or
add
push
in
cmpsb
ljmp
jnp
js
push
xchg
cli
hlt
and
dec
imul
adc
adc
mov
inc
cwtl
pop
dec
inc
stc
xchg
jns
mov
insb
or
or
lock
mov
movsl
stos
mov
xchg
inc
adc
pop
mov
aaa
dec
pusha
out
add
inc
jmp
mov
test
xchg
cmp
es
js
cmc
adc
call
push
pop
push
pop
push
ljmp
jne
dec
pop
inc
push
push
inc
cmp
pushf
lods
cmc
pop
mov
movsb
out
or
pusha
es
sti
cwtl
sub
test
inc
xor
out
inc
lock
movhps
sub
jae
jae
pop
ja
dec
scas
or
cmpsl
sub
sbb
popa
movsl
pop
outsl
rorb
mov
mov
sub
pop
mov
stos
mov
lds
cmp
cmc
stos
mov
pop
dec
inc
sti
adc
pop
stos
xor
mov
sub
xlat
pusha
push
mov
out
fsubrs
cltd
orb
push
jg
das
mov
mov
jmp
mov
add
dec
sub
pop
push
notl
xchg
adc
push
scas
in
sub
fstps
or
pop
push
sub
push
sbb
cmp
sbb
and
addps
pop
add
nop
lods
test
xor
add
xchg
sub
or
jnp
mov
fnstenv
push
pop
lods
adc
inc
pusha
dec
push
mov
sbb
imul
cmp
lea
sbb
imul
inc
pop
js
jnp
mov
inc
shr
cmp
jo
jmp
orb
inc
aad
xor
push
rcrb
cwtl
or
add
stos
lods
sahf
cmpsb
dec
xchg
push
mov
roll
lds
stos
xchg
adc
push
mov
int
push
cli
pop
pusha
sub
and
push
pop
leave
inc
xchg
fxch
leave
inc
adc
sti
jo
dec
or
pop
sub
repnz
bound
clc
xor
shrb
inc
nop
xchg
shr
or
mov
or
jg
mov
sub
and
test
out
lods
test
je
shll
add
adc
jge
call
loope
jbe
and
jne
xchg
lcall
std
mov
and
cs
push
jle
sub
cli
mov
mov
out
fs
or
adc
cmp
pop
push
pop
ljmp
lcall
mov
pop
dec
lahf
jmp
cmc
pop
inc
pop
imul
xor
dec
je
sbb
sub
out
fcomps
jg
ret
xor
or
pop
push
das
inc
jmp
and
push
pop
inc
fstp
inc
add
ja
ficomps
mov
pop
cmpl
xor
arpl
addr16
sbb
fldt
mov
sub
or
sti
repnz
lret
cmp
int3
aad
lods
dec
xor
cmp
pusha
into
pop
lds
ficoms
xor
adc
fnstenv
fs
pop
push
loop
enter
in
stos
mov
jne
mov
popf
mov
add
in
or
popa
in
dec
xor
test
add
jae
add
addr16
cmp
in
or
insl
pop
pop
push
push
mov
xor
outsl
adc
cli
xchg
jle
sbb
adc
sbb
rclb
sub
loopne
mov
jmp
dec
add
adc
add
add
shrb
jae
cmc
add
ss
jp
les
movsl
dec
cmp
mov
shr
out
adc
roll
shrl
push
enter
mov
push
add
push
pushf
clc
mov
sti
jne
das
shlb
lea
push
fidivs
pop
inc
fisttpl
filds
dec
inc
shld
pop
mov
or
jmp
dec
outsb
pop
xor
je
jge
insb
mov
test
mov
inc
or
aaa
sub
pop
std
aas
jmp
or
sbb
mov
add
cmp
add
or
ret
or
test
es
xchg
and
jmp
rcrb
test
adc
add
mov
das
mov
inc
and
or
and
adcl
lds
jns
sub
jl
and
popf
inc
fisttpll
jmp
scas
push
adc
daa
andb
dec
nop
sub
dec
jbe
cmpsb
cmp
adc
mov
lods
pop
xchg
add
jae
popa
sub
mov
ja
mov
push
pop
hlt
bound
jmp
push
push
addl
movnti
xor
mov
xchg
xor
repnz
mov
pop
test
inc
mov
les
popw
js
shll
and
jge
xchg
dec
in
adc
adc
add
clc
xchg
lods
jae
xchg
subb
adc
fwait
adc
je
xor
out
ja,pt
or
cmc
cmp
js
mov
dec
adc
es
imul
mov
shrb
push
js
adc
push
stc
testl
ds
push
sub
cmc
gs
mov
add
cld
mov
out
mov
push
mov
push
mov
jp
xor
leave
imul
and
imul
add
adc
cmp
cmp
inc
dec
jg
test
push
sub
pop
sub
add
cmpsl
sti
ffree
in
push
or
loope
loop
sub
aam
sub
jmp
or
jnp
xchg
outsl
neg
outsb
lods
xor
inc
add
cli
shll
stos
push
lcall
addl
cmp
shr
add
mov
cs
sbb
xorl
scas
mov
not
shl
jns
incb
pop
gs
push
and
insb
mov
add
push
mov
sub
dec
insb
cld
cld
sbb
pop
push
fnstcw
gs
addb
mov
xor
imulb
mov
test
or
pop
lods
ret
out
in
adc
jmp
mov
imul
add
sub
adc
pop
push
jmp
stc
inc
add
mov
lcall
mov
jns
add
adc
mov
mov
and
or
inc
cmp
sub
adc
jno
dec
dec
js
subb
pop
xorb
inc
add
sub
pop
push
mov
jnp
mov
mov
fadd
cld
jle
pop
and
shrl
or
dec
imul
jnp
mov
dec
jne
cmp
into
jb
sbb
in
mov
mov
pop
shll
popa
mov
jmp
fcompl
dec
jmp
aam
test
into
sbb
mov
add
add
ss
jo
pop
mov
pop
stos
sub
test
sub
lret
and
jp
xchg
inc
dec
sbb
lds
sub
jo
add
shr
pushf
xchg
pop
cmp
pushf
movsb
mov
das
add
adc
mov
pushf
xor
jb
or
incb
and
xor
enter
or
jae
cld
xchg
or
dec
aad
xor
scas
cmovae
in
jbe
pop
call
mov
jo
shrb
mov
inc
cmpsb
mov
pop
jmp
scas
or
mov
adc
push
or
adc
mov
ret
movsb
ja
mov
pop
add
outsb
mov
adc
or
pop
dec
mov
fisttpll
xlat
push
fmuls
and
jnp
add
pop
shrl
fdivrl
xchg
sbb
mov
jp
mov
jecxz
ds
cs
jmp
movsb
xchg
inc
sub
sbb
cmpsb
dec
sub
sub
or
adc
data16
push
fstl
loope
sbb
cmp
mov
fs
pop
adc
dec
nop
and
clc
outsb
mov
pop
inc
cmp
pop
lods
sbb
jle
daa
xorl
or
pop
cmp
xchg
not
add
push
mov
and
pop
nop
push
sub
push
lock
fidivl
scas
lea
testb
jmp
xchg
push
jp
mov
in
shl
ljmp
cld
cmp
rcl
stos
daa
dec
pop
fists
out
or
pop
jge
in
push
push
dec
jecxz
sbb
mov
cmp
xor
push
xacquire
cmp
or
test
out
xor
mov
mov
push
xchg
outsb
roll
sahf
adc
jae
pop
inc
lds
fld
and
xor
lea
icebp
mov
les
repnz
adc
sbb
sub
daa
and
ljmp
popf
xchg
call
idivl
xor
cmp
lods
imul
xor
sbb
popl
cmp
cmp
stos
push
cltd
push
dec
cmp
push
repnz
lahf
loope
jge
into
sub
cmp
push
call
das
nop
sbb
mov
fisubl
jmp
ja
or
in
add
jg
idivl
add
enter
aam
hlt
in
add
cmpsl
aas
sub
sub
and
adc
fstp
pop
addr16
scas
flds
mov
cs
addr16
arpl
cld
shlb
leave
or
pop
subb
push
xchg
add
mov
aas
shlb
push
pop
add
scas
add
dec
add
jnp
adcb
pop
cwtl
dec
jns
pop
add
jmp
arpl
mov
fwait
sbb
adc
push
pop
push
mov
xchg
test
dec
fiadds
push
inc
mov
push
pop
dec
inc
fucomp
sbb
or
bound
or
adc
jmp
subl
and
inc
addb
repnz
xchg
adc
dec
cld
or
xor
repnz
cmpsl
xor
dec
mov
add
inc
mov
mov
fstpt
call
shrb
adc
xchg
sub
les
fisubrs
xchg
and
jno
jmp
cwtl
xchg
dec
cmp
adcb
jae
stc
lret
xchg
add
mov
pusha
mov
aam
out
push
outsb
jnp
jmp
sbb
sarb
pop
imul
imul
jae
xlat
icebp
jb
lret
or
cmpb
dec
and
aas
inc
adc
xor
fnstsw
cltd
shrb
cmp
mov
pop
fcoml
mov
mov
cli
adc
rolb
xor
add
jmp
pusha
inc
loop
lds
fisttpl
mov
sbb
push
pop
lds
add
mov
xchg
adc
add
jmp
repnz
std
out
or
lret
xchg
pop
mov
rcrb
mov
and
or
das
push
push
jns
lea
aad
out
jo
popf
andl
adc
jmp
jne
and
je
sbb
mov
mov
xchg
test
push
dec
ret
sbb
dec
or
sbb
shrl
lea
and
pop
mov
sub
cs
das
jno
movl
aaa
cmp
dec
jmp
push
das
jno
push
and
pop
mov
outsb
adc
subb
test
jle
sub
ret
or
push
and
pusha
push
shl
mov
cmc
push
push
pop
pop
shll
sbb
adcb
jne
pop
data16
xchg
push
arpl
mov
insb
shl
xor
sub
sub
pop
pop
cmp
out
pusha
mov
popf
pop
mulb
jl
or
mull
inc
jg
or
jl
mov
pop
push
push
lahf
mov
adc
mov
das
push
fistpl
cld
hlt
adc
push
push
call
lret
push
pusha
jmp
push
std
jno
or
mov
mov
xchg
mov
mov
jae
push
adc
push
ljmp
xchg
xchg
subb
mov
pop
sbb
les
and
xor
test
mov
and
push
loopne
mov
imul
ret
stos
and
jbe
cltd
aam
fs
bound
or
daa
inc
das
pop
mov
scas
dec
rol
dec
ret
sbb
cld
cli
or
fadds
stos
jmp
dec
jp
repnz
icebp
pop
jbe
or
loop
xchg
mov
cli
mov
inc
and
ss
mov
pusha
push
jmp
pop
xchg
xor
mov
add
fsub
mov
into
mov
xchg
xor
fwait
and
inc
inc
mov
fwait
or
out
pop
fiadds
test
adc
shrb
divl
sbb
cld
inc
xlat
loope
ret
mov
cwtl
jbe
inc
jle
orb
mov
add
pusha
cmp
xchg
jo
jl
int
mov
mov
lahf
push
out
mov
repnz
add
clc
sbb
int
lods
es
push
push
fld1
rorb
rorb
sbb
pop
or
addb
pop
pop
stc
sub
iret
or
sti
divss
pop
mov
jmp
xchg
pop
aad
out
fs
mov
push
mov
inc
insb
jb
dec
mov
pop
mov
pop
jecxz
or
xchg
and
js
andb
mov
dec
andb
jmp
jge
xchg
rolb
push
pusha
bound
call
adc
push
dec
mov
dec
hlt
mov
push
shrb
push
jmp
imull
notl
lret
push
mov
mov
outsb
pop
lods
xchg
imul
shll
push
aam
push
jp
js
in
pcmpgtw
shlb
jmp
dec
jmp
popf
push
inc
bnd
sub
gs
push
neg
jmp
movsl
mov
push
jmp
mov
enter
jmp
sub
mov
pop
mov
data16
decl
nop
pop
popf
jns
mov
cli
sarl
add
push
ljmp
sti
push
sub
sbb
insl
adc
jmp
cwtl
or
xchg
fcomi
push
cmpsl
dec
cmp
add
std
vmwrite
sub
jge
cmp
fmul
jnp
dec
dec
imul
inc
popa
dec
sub
loop
pop
jmp
add
sarb
xchg
sbb
mull
xlat
jmp
mov
pop
push
sbbb
pusha
mov
inc
jp
or
pop
pmulhw
popa
les
ret
xchg
sahf
cmpsl
fiadds
or
insb
icebp
mov
and
lret
xchg
loop
mov
add
xor
push
cmc
sbb
dec
or
add
xor
xchg
pop
push
sub
adc
push
negl
repz
aam
ljmp
dec
push
jno
stos
inc
jl
lds
hlt
sub
push
pusha
or
outsb
ror
imul
mov
push
mov
jecxz
bound
imul
mov
pop
cs
pop
cmc
data16
adc
ds
dec
repnz
mov
punpckhbw
mov
sub
push
xor
fsubl
lret
ret
inc
push
mov
jbe
dec
arpl
pop
pop
call
adc
cld
jg
sbb
pop
adc
jp
sub
jmp
movsb
fisttpl
lcall
imul
mov
decb
pop
loop
mov
add
arpl
push
mov
cmp
pushl
addr16
pop
push
shll
mov
jno
pop
aad
dec
ljmp
cwtl
leave
jge
and
xor
xchg
dec
dec
enter
loopne
push
sbb
pop
mov
fstpt
add
sub
outsb
je
fadds
inc
xchg
rcrl
shrl
sub
add
sbb
add
mov
lock
dec
xchg
sub
lds
mov
out
push
dec
in
lahf
pop
add
pop
inc
mov
icebp
jge
xchg
sahf
pop
in
inc
rol
outsl
test
aaa
incl
ror
push
xchg
dec
inc
leave
add
or
push
mov
adcl
lock
imulb
mov
pop
mov
push
mov
dec
xchg
push
je
ficoms
in
shrb
notb
sub
inc
or
daa
arpl
shll
sub
pop
and
pop
dec
xor
inc
sub
pusha
addr16
cld
test
pop
mov
push
loop
jg
dec
or
test
cld
ljmp
ja
rcl
and
aam
lahf
call
pop
ss
fists
adc
loope
xor
or
repz
push
mov
push
or
ret
test
scas
inc
mov
add
xlat
or
adc
sbb
in
mov
push
mov
lcall
out
testb
cli
add
add
and
mov
lock
mov
dec
cmp
push
inc
pop
sub
div
out
mov
cmp
pop
mov
mov
sub
dec
pop
xchg
jle
dec
sub
shll
sbb
mov
push
mov
xlat
pushf
adcl
cmp
or
push
add
dec
sbbb
nop
dec
and
fcoms
inc
dec
cmp
push
mov
jo
xchg
add
or
out
jecxz
adc
pop
mov
mov
xor
inc
sub
and
pop
jecxz
xlat
jmp
or
lods
inc
es
push
mov
addb
scas
cltd
mov
xor
xchg
inc
das
test
sub
leave
scas
mov
mov
push
jmp
mov
jbe
xor
fistps
xor
sub
add
inc
fwait
dec
push
popa
sub
js
lds
int
cld
push
and
dec
push
enter
mov
jns
mov
inc
jp
mov
jne
or
aad
xchg
jnp
and
mov
jmp
mov
mov
push
cmp
and
push
rcl
add
xor
adc
fs
sub
addr16
mov
arpl
dec
testl
ja
dec
add
cs
lods
imul
dec
lods
daa
out
loope
adc
pop
shrd
lds
and
pop
cmp
mov
add
sub
pop
fadds
loope
and
outsb
cmpb
popa
cmp
cmp
or
pop
push
ss
call
or
out
enter
and
cs
jg
xor
push
mov
mov
xchg
std
in
jmp
pop
jmp
sbb
pop
in
dec
aas
cmp
pop
xchg
lret
and
lcall
or
roll
cmp
cld
push
push
test
or
sbb
jg
repnz
inc
xor
jbe
sbb
or
pop
push
popa
sub
push
aas
addb
ret
push
repz
rcrb
fs
mov
aas
push
xchg
adc
mov
sbb
inc
and
out
xchg
pop
adcb
hlt
fwait
sub
pop
jb
arpl
push
lea
fs
nop
or
mov
xchg
push
dec
js
mov
out
push
mov
popf
mov
jbe
or
and
fstps
out
jnp
sub
push
mov
pop
test
sti
loop
iret
push
lock
push
repnz
int3
and
adc
ficoms
sub
cmpsb
pusha
inc
ljmpw
add
int
mov
loope
fildl
cld
push
xchg
pop
testl
pushf
sbb
andb
and
jns
sbb
cwtl
mov
repz
push
popf
push
pop
outsb
cmpsl
jg
push
aas
shll
push
add
push
popa
cmp
rorb
daa
rcrl
jle
lret
xchg
fs
dec
push
add
ja
adc
pusha
fnstsw
or
add
add
push
adc
push
xor
out
test
imul
and
add
imul
fsubs
push
ss
insl
or
test
add
pop
mov
pop
jp
mov
sub
or
into
add
add
xor
lds
or
push
dec
and
out
xchg
pop
push
leave
jl
scas
jno
push
and
mov
sbb
push
push
mov
inc
jmp
in
xor
dec
mov
xchg
inc
ljmp
into
cmpsl
xchg
dec
xor
xchg
mov
add
sbb
dec
jp
add
push
add
sub
lret
pop
sub
inc
outsb
push
cmp
push
clc
mov
xor
jb
jnp
sbb
scas
pop
xorb
lods
sbb
inc
push
push
ja
rorb
cmpsl
jnp
dec
loope
and
sub
xor
loop
ret
or
popa
pop
mov
pop
add
lret
outsl
scas
pop
add
inc
flds
add
jg
arpl
push
xor
mov
pushf
pop
push
pushl
inc
add
jmp
push
push
dec
mov
jmp
les
out
daa
sti
adc
add
add
push
mov
jge
je
sub
cltd
lcall
swapgs
cmpsb
xor
das
jmp
loop
jge
dec
pop
pop
test
xchg
mov
dec
inc
add
adc
lret
mov
stc
and
pop
adc
frndint
lock
push
xchg
jmp
shlb
je
mov
hlt
xchg
xchg
push
mov
pusha
addr16
adc
mov
xlat
dec
notl
mov
out
cli
pop
mov
outsb
jmp
ds
mov
scas
mov
mov
jmp
test
mov
test
pop
mov
xor
cmpsb
pop
pop
out
xor
cli
lods
nop
subb
xchg
sub
xchg
push
mov
or
fadds
adc
mov
inc
loopne
mov
mov
aad
je
lock
push
mov
sti
enter
addl
nop
pop
dec
jmp
loop
xchg
add
mov
add
insl
sub
popf
ljmp
inc
cmp
das
aad
daa
or
loop
pop
jne
jmp
lods
cld
mov
pop
scas
das
mov
fimull
repz
sub
movsl
sti
cltd
pushl
pop
ret
push
push
mov
xchg
xchg
stc
in
pop
mov
ret
fstpt
push
push
adc
inc
mov
add
pop
movsl
xchg
stc
pushf
leave
pop
jns
or
movsb
test
mov
or
adc
adc
push
push
fwait
das
movsl
loope
pop
in
pop
pop
out
mov
push
fsubrs
cmp
cmp
xor
imul
add
insl
inc
and
xchg
sbb
es
pop
or
mov
and
jmp
ja
and
rolb
repz
int
fistpll
mov
mov
pop
fdivrs
adc
pop
pop
dec
mov
lods
cmpsb
sbb
daa
ror
imull
hlt
ds
xchg
in
imul
sbb
or
es
pop
jge
imul
jo
outsb
repz
mov
popf
mov
loop
jecxz
or
mov
adc
jmp
repz
mov
push
sarb
cmp
xor
mov
xor
add
or
sbb
nop
push
sub
les
sarl
and
push
xorb
outsb
mov
sbb
mov
pop
adc
in
mov
jns
test
scas
nop
mov
iret
arpl
filds
fnstcw
add
jae
and
jg
pop
dec
inc
scas
ret
xchg
xor
push
sub
sub
stc
inc
pop
andb
and
pop
sub
jno
adc
sub
lods
cmp
std
loopne
leave
adc
stos
inc
mov
sub
cmp
sub
inc
jmp
adc
sub
cmp
leave
nop
jle
outsb
xchg
sbb
pop
imul
or
adc
mov
push
dec
rorl
pop
bound
sub
xchg
fiadds
nop
movsb
leave
or
ret
popf
add
jns
cmp
aad
sub
or
loope
jecxz
inc
pop
ds
fwait
in
pop
popf
fidivrs
jns
fdivr
jmp
loopne
insb
pop
mov
ret
push
mov
mov
not
cld
mov
dec
push
mov
push
jmp
sbb
in
jp
inc
mov
xchg
adc
repnz
xor
stos
push
jbe
xorb
aaa
loope
mov
adc
scas
outsb
inc
and
dec
push
test
inc
rolb
sub
icebp
jmp
push
sahf
push
xlat
enter
ret
adc
mov
sbb
jmp
mov
mov
adc
mov
xchg
dec
and
sbb
icebp
cld
imul
jmp
jb
shll
mov
fsts
adc
or
mov
out
xor
js
add
jle
shlb
xor
and
ret
xchg
enter
in
out
push
stos
adc
out
fisttpl
jl
xor
out
sub
into
or
xchg
and
fneni(8087
inc
mov
sbb
in
inc
sti
stos
or
pop
pop
cmp
cmc
adc
sub
cmp
mov
jmp
pushf
jmp
xchg
addr16
cltd
push
popa
adc
add
fdivrs
neg
dec
inc
scas
adc
mov
xchg
movsb
add
add
in
mov
add
xor
mov
and
andb
add
pop
xor
push
sub
pop
sub
pop
stos
fs
scas
hlt
mov
pop
lahf
adc
dec
pop
stos
mov
adc
sub
pop
cli
rol
popf
pop
es
xchg
jo
int
dec
inc
pop
adc
ljmp
sbb
push
adc
pop
jmp
mov
stos
popf
fldt
jle
xorb
loopne
push
mov
push
sub
jmp
xor
mov
lahf
adc
sub
or
nop
insb
mov
std
jmp
out
adc
dec
ror
fstpl
aam
mov
and
add
das
pop
push
push
mov
insl
fadds
jp
cmp
lret
adc
adc
cmpsl
and
imul
jmp
mov
xor
add
out
mov
in
fcompl
jmp
pop
outsl
rcrl
push
or
test
iret
arpl
add
scas
rolb
divb
cmpsb
sub
add
push
je
jp
and
aad
nop
jb
jmp
pop
xchg
lcall
out
sbb
out
sub
sub
jmp
add
push
add
jmp
mov
sub
out
mov
les
push
mov
xchg
pop
cmp
dec
jmp
and
mov
aas
rcl
push
sub
pop
fcmove
add
pop
sbb
andb
mov
push
push
popa
jbe
cs
mov
add
inc
sbb
inc
push
jmp
mov
rclb
sub
test
faddl
inc
push
aas
add
push
ret
jb
xor
rdtsc
sbb
enter
mov
pop
js
pop
and
je
sbb
jge
sbb
add
pusha
pop
inc
mov
mov
add
sti
orb
xchg
out
xchg
add
fsubs
push
dec
in
mov
push
lret
add
xor
sbb
add
aam
xchg
sbb
push
filds
mov
into
imul
xor
rolb
loopne
pop
dec
bound
imul
jle
add
les
in
into
inc
jl
mov
pop
inc
insl
sbb
push
or
popa
jnp
and
and
cmp
clc
sub
sbb
jl
pop
leave
pop
addr16
cmp
adc
adc
add
clc
dec
repnz
xchg
mov
idiv
add
mov
test
inc
or
jmp
cld
dec
into
pop
pop
daa
inc
hlt
ss
lods
mov
add
inc
push
adc
nop
xchg
xorb
gs
dec
shr
test
ds
push
loop
lds
daa
pusha
inc
fwait
pop
addb
scas
insl
add
je
roll
add
ja
and
adc
roll
out
cwtl
mov
loop
or
dec
ds
in
and
outsl
jg
sbb
testl
adc
mov
fisttps
movsl
push
ss
adc
mov
push
push
jmp
mov
clc
inc
pop
popa
clc
jg
xchg
test
out
cwtl
mov
outsb
pop
xor
pop
ret
shll
movsb
enter
fs
cli
mov
push
jl
mov
divps
jae
addr16
fs
jg
popf
jmp
push
divb
add
std
push
movsl
xor
orb
jne
inc
inc
dec
dec
test
inc
and
sbb
cmp
sub
out
or
jge
cmpl
std
cltd
xor
sbb
addr16
jnp
and
cs
cmp
test
xchg
test
dec
or
lds
jmp
push
mov
not
inc
out
cmpsb
icebp
daa
cmp
add
ljmp
or
lods
clc
lret
or
cmp
mov
shrb
stc
test
jecxz
cmc
insb
jg
ret
arpl
push
push
sbb
pop
mov
dec
add
push
in
adc
jmp
aam
out
inc
negl
sub
fadds
jne
jb
pop
push
lahf
mov
and
pop
push
push
mov
repz
dec
dec
inc
sti
pusha
adc
push
hlt
stos
sbb
mull
cwtl
iret
jbe
sub
shrl
test
xor
xor
push
roll
mov
repnz
xchg
xchg
movsl
adc
push
add
jmp
and
pop
dec
push
mov
cmp
jns
aaa
test
push
fnstenv
jecxz
push
outsb
cmp
iret
jle
arpl
jmp
test
xor
add
push
or
sbb
aas
and
or
add
sub
rcrb
dec
cs
mov
adc
jae
and
scas
and
dec
shlb
or
and
xor
mov
int
adc
xor
xor
popf
jmp
in
es
lods
add
neg
sbb
push
mov
stc
std
mov
dec
lods
adc
call
stos
mov
or
ds
nop
xchg
in
pop
lock
outsb
pop
sti
cvtps2pi
sub
lcall
sub
jmp
cwtl
inc
dec
mov
sbb
cmc
pop
mov
pop
jo
adc
pop
jle
std
adc
push
add
or
push
adc
jg
scas
xor
sahf
and
sahf
cmp
mov
mov
cmp
add
fucomip
sub
aas
cmp
bound
push
inc
stos
cs
adc
pop
mov
jle
sub
inc
or
sahf
or
xchg
dec
adc
push
mov
sub
inc
push
push
jge
xor
or
mov
psllq
add
or
jmp
pop
frstor
rcll
xor
std
inc
mov
mulb
xor
push
push
mov
jge
xor
sub
daa
pop
lock
adc
pop
aaa
adc
push
mov
das
jne
mov
jg
add
incb
push
push
mov
sbb
enter
das
mov
pusha
shlb
test
jmp
sub
bound
aad
jno
cmp
in
outsb
mov
add
js
negb
push
push
fst
dec
and
or
pop
cmp
add
out
in
add
out
pop
rolb
or
and
repnz
rol
cmp
or
add
shr
sub
pop
mov
loop
inc
dec
or
aaa
pop
sbb
adc
inc
xchg
pop
sbb
or
adc
das
dec
push
mov
aas
fimuls
loopne
ret
fptan
lret
push
dec
sbb
add
jmp
gs
loop
test
cwtl
adc
and
push
outsb
add
lods
inc
jmp
adc
mov
sbb
fs
dec
dec
jl
and
xchg
mov
jo
add
shrl
fcos
loop
dec
jp
push
lcall
insb
out
adc
das
sarl
or
sub
shr
mov
pop
pop
int3
pop
xor
xchg
push
sub
pop
adc
pusha
and
rorl
cmc
push
loopne
or
jg
out
pop
push
push
ds
call
xor
sub
je
sbb
mov
cs
loop
sub
lods
add
lock
or
test
jmp
test
lock
lods
mov
jno
add
loopne
or
mov
push
iret
cmpb
jb
std
jp
mov
mov
sbbl
scas
push
repnz
test
and
ss
xor
cmp
leave
sub
fs
sub
xor
int
packuswb
fsubrp
adc
add
shll
jnp
mov
add
pop
inc
cs
addl
add
jmp
add
out
sbb
addl
sub
push
and
pop
movzbl
adc
cwtl
inc
mov
fwait
inc
sub
or
std
push
repz
in
add
jp
push
jo
ljmp
scas
sbb
js
test
adc
push
mov
loopne
inc
adc
sub
notb
ss
in
out
stc
out
scas
loope
sub
cmp
add
jno
inc
pop
shll
scas
sub
inc
pusha
testb
ret
ffree
xchg
into
icebp
ljmp
cmp
sbb
cltd
xor
mov
dec
sti
inc
push
jne
mov
ror
clc
push
jmp
cmp
mov
mull
test
and
cmc
add
add
neg
jmp
xchg
repz
cli
ret
leave
xchg
push
dec
xor
inc
sbb
mov
adc
or
or
add
sub
stos
jns
pop
jns
xor
and
xchg
lret
ljmp
mov
add
push
mov
and
dec
es
dec
jl
xor
sub
lock
sahf
scas
int3
xor
dec
xchg
push
icebp
push
in
sub
dec
pop
stos
loope
orl
cmp
movsl
jge
xor
jne
push
int
les
xchg
scas
pop
add
or
pop
imul
sub
cmpsb
aad
mov
and
pop
adc
cmp
dec
int3
mov
aaa
ss
and
add
jge
or
and
dec
add
push
mov
adc
dec
aas
add
jno
cmp
push
xor
adc
shl
push
xor
xchg
into
mov
sub
pushw
add
int3
push
js
mov
call
dec
adc
pushf
add
xor
dec
stos
or
fidivrs
xlat
jnp
xchg
push
jmp
mov
pop
imul
lcall
jecxz
js
subl
xchg
add
xchg
jne
pop
pop
inc
nop
fstps
sub
xchg
sti
add
ljmp
adc
pop
add
sbb
or
xchg
sub
je
xchg
dec
dec
ss
sub
decb
repz
or
daa
pop
push
dec
lahf
lret
xchg
jae
add
loop
sub
sub
scas
xlat
sbb
and
repz
jecxz
xchg
lret
mov
add
mov
jge
push
adc
add
mov
adc
out
xor
xor
and
mov
mov
pop
dec
in
fnstsw
jle
lret
jmp
xchg
cmc
mov
mov
les
mov
daa
and
xchg
jmp
xchg
lea
xor
pusha
xchg
pop
dec
add
sti
push
push
jbe
push
add
xor
in
sub
xor
dec
add
inc
dec
xchg
test
mov
pop
mov
jl
icebp
push
jo
xchg
fidivrs
or
jle
xor
ret
pop
icebp
jo
movsl
push
push
or
adc
mov
mov
cmc
mov
jl
and
and
pop
or
inc
push
xlat
push
push
mov
in
cmc
pushf
loopne
mov
imul
jmp
jb
dec
aaa
fmuls
pop
fisttpl
push
das
pop
ljmp
sub
xchg
or
mov
shl
or
sub
popf
xor
dec
and
sbb
mov
fucomi
sbb
or
and
mov
jo
pop
lds
stos
push
cltd
fs
push
cs
pop
addr16
shlb
or
push
push
stos
add
insl
mov
mov
cmp
sub
movsl
stc
bnd
insb
pop
mov
and
cmovnp
stos
jge
sub
shr
inc
mov
dec
jo
cmc
test
lods
negl
pop
or
movsl
jmp
in
xchg
jnp
pop
hlt
repz
sub
pop
nop
cwtl
mov
adc
jae
add
adc
sub
mov
add
jp
mov
cltd
scas
dec
aas
adc
sti
pusha
push
lock
insb
dec
xor
lock
and
lock
pop
xchg
aam
movb
pop
sarb
fs
imul
push
push
push
cmpsb
js
jmp
push
popf
pop
mov
ds
ret
mov
cmc
inc
imul
cmc
or
lds
not
inc
out
jmp
icebp
or
cmp
neg
xchg
fadds
mov
or
paddusw
jmp
cwtl
pop
jle
dec
ljmp
pop
mov
pop
mov
mov
dec
add
jo
or
mov
or
loop
lcall
pop
addr16
xlat
lods
sub
xchg
xchg
aad
pop
jmp
push
jmp
cs
cmp
icebp
daa
pop
xchg
jmp
scas
cwtl
jne
pop
pop
lea
aas
loope
mov
dec
cld
das
sbb
mov
jmp
pop
mov
shll
fldl2e
inc
scas
xor
pop
lds
mov
mov
ret
push
xor
test
pop
xor
mov
push
push
fmul
pushf
jno
mov
add
or
imul
add
cs
mov
stos
adc
in
push
add
mov
jle
push
mov
inc
push
push
out
psadbw
push
jne
push
pop
and
hlt
into
outsl
sarb
cmc
notl
sbb
dec
push
loopne
cmc
jmp
loop
fs
push
mov
jmp
in
pop
popa
jp
xchg
repz
push
fists
sarb
pop
les
mov
das
je
mov
pop
xchg
fs
sub
fs
sbb
ss
add
pusha
pop
add
jo
or
scas
add
and
sub
fwait
xor
jno
mov
sub
jge
pop
push
and
add
lds
cmp
add
cmp
movsb
rcrl
push
mov
pop
jmp
rorb
aas
popa
push
mov
sub
jbe
jge
cmc
add
inc
or
add
mov
push
jp
jecxz
addl
sbb
cwtl
nop
mov
push
dec
scas
lock
loop
sub
jge
push
and
push
pop
xor
mov
mov
xchg
jecxz
fdivs
cmp
shrl
sub
sub
cmp
jge
xchg
frstor
pop
add
ja
inc
sub
jmp
cwtl
int
addr16
cld
add
and
imul
pop
insl
movsb
adc
mov
and
divl
xor
push
in
in
jnp
add
mov
inc
xchg
cltd
xor
pop
fs
jmp
mov
add
and
add
add
or
jmp
iret
pop
sub
movsb
mov
or
das
or
clc
dec
les
sbb
xlat
jle
push
pop
add
push
push
frstor
clc
repz
jmp
fmuls
jns
out
lock
dec
or
ljmp
outsl
or
xor
enter
sbb
inc
daa
add
pop
jp
cmp
cltd
je
push
into
ret
pop
jbe
and
push
mov
lahf
sub
es
cmp
jge
loopne
cwtl
xlat
addr16
daa
push
sbb
cmp
push
xchg
lods
mov
adc
insl
mov
mov
dec
test
stc
call
ja
push
loop
sbb
xor
stos
mov
pop
shl
iret
mov
loopne
sbb
push
fcomps
ljmp
sub
mov
jno
scas
icebp
inc
push
clc
aad
jb
mov
mov
mov
pusha
push
loope
fwait
cs
testl
aam
or
fs
insb
push
psadbw
dec
test
cmp
add
pop
cmc
mov
mov
or
lret
add
mov
nop
adc
pop
xchg
xchg
in
clc
outsb
mov
sbb
mov
push
mov
shr
jmp
add
add
sarl
mov
dec
push
ja
sub
mov
test
dec
jmp
adc
dec
mov
cmp
fs
jmp
fstps
mov
pop
rorb
js
inc
shl
add
das
pop
ja
adc
push
repz
and
fadd
jb
mov
mov
jae
insl
add
or
mov
push
mov
clc
testb
shl
mov
xchg
repz
aad
in
sbb
xor
pop
sub
mov
sahf
sbb
movsb
dec
dec
sti
imul
push
inc
dec
mov
adc
gs
fwait
scas
je
loopne
aam
mov
and
lahf
push
mov
pop
xchg
daa
fisubs
push
imul
jmp
push
outsl
lods
pop
mov
pop
sbb
xchg
pop
adc
mov
adc
cmp
ja
add
and
xchg
insl
push
mov
out
daa
adc
fldenv
jmp
lcall
push
mov
adc
dec
test
iret
ljmp
sar
pop
das
and
mov
out
jmp
aam
fimull
movsb
mov
xor
lds
ficoml
xor
add
sub
push
daa
aam
cmpsl
subb
or
shr
xor
in
testl
js
adcb
inc
sub
pop
cmp
jo
pop
stos
das
inc
inc
out
loop
jb
sub
push
fistl
pop
lret
cwtl
inc
mov
xor
rcrl
or
mov
inc
test
pop
or
push
jmp
push
gs
cmc
icebp
and
jmp
scas
mov
das
jae
cs
adc
int
sub
mov
insl
jns
cmp
xor
dec
add
sahf
addr16
in
mov
jne
mov
aam
push
xchg
mov
pop
fists
or
add
aaa
shrl
jmp
mov
add
pop
push
mov
dec
jg
sarl
js
mov
push
jns
push
gs
jmp
mov
mov
cvtpi2ps
xor
aam
adc
or
mov
mov
insl
and
pop
mov
adc
inc
push
test
daa
mov
cld
cs
andb
hlt
pop
sub
test
push
testl
roll
add
jnp
sbb
lret
ljmp
jns
roll
stc
fxtract
jbe
adc
shl
inc
leave
dec
xor
inc
push
repnz
and
cmp
push
mov
xor
fs
pop
lret
or
adc
push
push
mov
dec
sub
sahf
jns
dec
adc
xor
pop
fmul
dec
pop
ja
in
test
push
sub
pop
adc
fcomp
std
loopne
je
pop
push
mov
cli
subl
push
or
jo
movsl
cli
in
pop
aaa
and
les
jecxz
icebp
js
mov
dec
mov
dec
or
add
add
jnp
daa
pop
and
jmp
cltd
push
and
test
pushf
push
push
cmpsb
icebp
clc
outsb
add
mov
push
push
fs
pop
mov
sbb
adc
in
pusha
xor
push
and
pop
xchg
jae
inc
or
sbb
test
mov
gs
push
dec
add
jg
imul
les
adc
pop
jle
adcl
adc
mov
es
mov
push
push
mov
sbb
jo
out
or
xor
jle
cs
adc
cmp
jmp
lods
adc
dec
daa
roll
and
jns
push
or
cmp
sbb
repnz
add
add
sub
sub
popf
push
sub
cli
cmp
daa
cli
push
or
cmp
jg
pop
movaps
inc
aaa
scas
int
cs
movsl
lds
shlb
vmovshdup
aad
ljmp
clc
out
icebp
cltd
loope,pn
xor
add
imul
das
shl
outsl
ret
sbb
lea
add
pop
jo,pn
cmp
push
das
lods
add
mov
or
mov
movsl
popf
ficoms
imul
out
jge
mov
or
dec
in
je
test
inc
jno
sahf
addr16
add
mov
jb
mov
inc
movsl
mov
mov
push
lods
add
andl
push
mov
xor
repz
sub
pushl
cld
jmp
jl
lret
jno
mov
fnstcw
or
sub
xor
and
fs
imul
pop
lds
adc
adc
bound
jb
icebp
nop
ss
imul
out
aad
pop
xchg
out
lods
mov
sub
sub
jg
mov
sub
push
add
mov
out
popf
fwait
lret
lahf
add
movsb
pop
ds
cld
push
dec
in
jne
adc
jmp
sarl
mov
sahf
loop
sbbb
sub
xor
or
adc
es
add
xchg
sub
cwtl
push
mov
pop
neg
xor
idivb
add
psubsw
addl
push
add
imul
repz
mov
andl
or
pop
adc
cltd
stos
and
and
icebp
or
pop
pop
pop
scas
or
jmp
push
out
jg
push
mov
xchg
and
fwait
jnp
jnp
pop
push
xor
mov
push
sahf
cmp
ljmp
xor
inc
cmp
dec
and
fisubs
jno
jmp
cmp
rolb
xchg
push
jmp
aad
fldenv
xchg
sub
cs
mov
push
jmp
xor
test
sti
dec
adc
pop
pop
call
mov
inc
push
rcrb
das
mov
xchg
arpl
popf
shr
lahf
mov
xchg
jnp
dec
xchg
shr
bound
out
sub
mov
lods
or
outsl
shl
sbb
or
and
mov
insl
xchg
into
dec
repz
js
xchg
icebp
push
dec
mov
jle
xchg
adc
dec
shr
mov
js
bound
out
push
and
out
mov
push
sahf
add
shll
jmp
cmpsb
dec
xor
adc
jae
out
pop
add
pop
int
or
dec
pusha
fdivs
dec
sbbb
adc
xor
lret
sub
out
dec
cwtl
in
popl
nop
clc
push
xchg
fstpl
shl
pop
sub
mov
je
pop
sbb
pop
dec
es
or
mov
pop
movsl
sti
outsl
cld
add
test
jg
xchg
loop
jg
cmp
push
push
ret
jb
bound
xchg
add
pop
and
scas
cmp
and
cs
push
xor
outsl
sub
jmp
or
pop
or
jne
cmp
inc
xchg
arpl
jl
fsubl
scas
pushf
add
pop
jl
xor
std
inc
shrb
pop
dec
insl
test
iret
fadds
insb
and
xchg
or
sub
stc
adc
roll
push
dec
stc
adc
jmp
movsl
inc
fimuls
mov
orb
scas
jl
je
orb
mov
imul
jae
pop
fldenv
fmuls
dec
scas
and
or
movsl
stos
jmp
mov
hlt
clc
sbb
orb
inc
jge
pop
cmp
repnz
mov
jle
es
bnd
mov
jmp
pop
out
jl
push
adc
push
lret
pop
orb
dec
out
jmp
xor
pusha
push
pop
dec
xchg
or
inc
es
jmp
sub
jmp
insl
mov
fnstenv
pop
mov
clc
push
pop
mov
or
adc
shr
cmpsb
dec
aam
or
sub
fs
xor
pop
jbe
adc
add
inc
mov
sbb
jmp
movl
jge
inc
pop
cmp
shlb
add
jns
sub
sub
sbb
je
push
add
sub
or
xlat
mov
push
push
jae
ret
mov
add
jnp
icebp
ss
lods
in
mov
test
dec
mov
lea
pop
pop
mov
nop
int3
cmp
test
lret
mov
or
mov
push
repz
adc
jne
outsb
push
dec
push
aaa
cltd
popl
lret
add
push
and
push
push
mov
out
sbb
pop
loopne
add
int3
cs
shlb
repz
or
cli
pop
sti
xor
and
arpl
pop
jge
repnz
or
call
jns
jb
mov
lahf
fnstenv
sbb
push
clc
xchg
cmp
test
outsl
int
sub
xchg
xor
fs
adc
mov
shrb
test
or
jo
jns
inc
adc
add
push
into
or
adc
pop
push
lcall
lods
cld
in
push
sbb
add
das
jecxz
xchg
loop
lds
inc
out
mov
and
insb
in
push
subb
mov
mov
pop
cli
mov
dec
cmp
pop
jmp
ret
adc
dec
cwtl
push
pop
mov
cmp
fildl
addr16
xchg
jp
pop
push
int
add
cmpsl
roll
loope
sbb
mov
test
iret
push
push
mov
dec
jmp
repnz
and
xor
sbb
pop
adc
sti
mov
sti
or
pop
in
pop
and
out
jne
ds
mov
push
mov
or
loop
and
out
or
lret
add
sbb
testb
enter
mov
xor
sub
int3
data16
xchg
jb
idiv
hlt
push
mov
aad
or
sub
xchg
jo
pop
mov
cmp
mov
lahf
and
xorl
xchg
push
jl
lret
testl
out
jno
jmp
jne
rclb
stc
mov
test
ds
fiadds
push
sbb
adc
or
jb
push
in
dec
lret
sub
nop
dec
jmp
imulb
inc
psubq
xor
aam
jbe
jbe
repnz
sbb
neg
mov
mov
aaa
mov
lea
mov
xor
fisttps
xchg
dec
and
push
divb
out
mov
in
cmp
jmp
fcompl
mov
mov
xor
sub
out
imul
add
cmp
out
dec
mov
scas
pop
xchg
aas
xchg
sbb
pop
outsl
push
mov
test
cmc
inc
cmp
clc
add
ret
test
mov
and
sub
mov
shrb
pop
enter
fists
push
imul
test
push
test
negl
clc
lret
enter
cmp
andb
sbb
daa
repz
or
push
ds
icebp
pop
xor
add
f2xm1
mov
mov
push
mov
xchg
mull
ficoms
pop
xor
push
cmp
outsb
cmp
dec
adc
cmp
pop
ucomiss
fistpll
lahf
mov
jmp
add
out
pop
push
mov
testb
sub
mov
imul
sbbb
shl
cltd
fucomp
out
bound
mov
push
in
adc
js
fsubrl
push
mov
movsl
adc
ret
test
cmp
jmp
dec
push
push
mov
adc
pop
and
sub
dec
pop
in
mov
push
pop
adc
or
rorl
pop
pop
cmpsb
mov
clc
or
jnp
xchg
and
pop
mov
dec
stos
bnd
xchg
mov
in
insl
pop
in
repnz
jge
mov
stos
xchg
cmc
push
test
inc
push
xorb
xlat
jae
cmp
mov
cmc
outsl
out
sbb
pop
xchg
loop
mov
insl
cwtl
jge
mov
dec
in
adc
loope
stc
or
and
fs
adc
lahf
shrl
lods
pusha
adc
mov
mov
jae
fs
repz
daa
mov
pop
adc
mov
jg
lea
inc
or
xorb
mul
push
lock
mov
mov
shr
mov
rclb
and
pusha
push
mov
pop
sub
int3
pusha
rolb
dec
sbb
cltd
add
out
push
inc
push
mov
cwtl
les
outsl
mov
sub
and
addl
add
cltd
inc
jne
aas
cmp
adc
add
push
xor
hlt
and
cmpsb
and
add
les
je
aam
pop
or
call
sbb
push
or
test
in
loop
shlb
sbb
dec
decb
sbb
aas
les
mov
fnsave
and
gs
out
imul
adc
gs
mov
rclb
push
cli
out
xchg
movsb
sub
imul
sub
pop
push
fmull
andl
repz
cltd
dec
in
data16
jp
xor
pusha
mov
push
xor
cmpb
ret
add
push
iret
or
ficoms
add
fmull
adc
divps
adc
jb
test
adcb
push
call
adc
add
jecxz
loope
inc
push
lret
jae
and
test
jmp
mov
xchg
pop
shlb
pop
push
push
cmp
or
add
es
pushf
mov
add
sahf
push
add
orb
loop
jl
adc
or
add
jmp
pop
inc
pop
iret
sub
jl
mov
icebp
jb
and
and
loop
dec
test
dec
call
dec
cs
xchg
pop
adc
jmp
nop
lretw
or
stc
fucomip
out
pop
xor
mov
aaa
and
or
cmp
icebp
xor
cmc
fbstp
and
adc
mov
cmp
out
mov
pop
sbb
pusha
sbb
cmpsb
jl
push
mov
sbb
test
sbb
cmp
cmp
jns
jo
and
loop
adc
sbb
adc
jecxz
xchg
fs
push
inc
mov
leave
mov
jl
aaa
or
cs
mov
add
dec
jbe
dec
push
adc
outsb
repnz
shll
sahf
or
nop
push
dec
adc
pop
jae
cmpsb
push
or
call
sub
sar
cmc
pop
add
ret
out
inc
std
movsl
jnp
mov
ret
arpl
adc
in
cwtl
test
and
cmp
les
outsb
aaa
ret
add
mov
or
or
or
mov
inc
es
in
into
movsb
dec
adc
sub
aad
imul
shrb
push
mov
pop
mov
je
inc
mov
and
insl
inc
add
sub
xchg
sti
sub
mov
fmuls
lahf
xor
fs
mov
out
dec
jnp
or
sbb
or
ud2
rol
mov
jns
cmpsl
negl
int3
ss
imul
add
cmp
push
addl
ret
ja
inc
sub
xchg
insb
xorl
testb
and
cs
jge
sub
xorb
mov
roll
rcrl
sbb
xchg
add
in
je
dec
ror
jne
lock
sub
inc
add
icebp
dec
or
and
ret
cltd
adc
leave
cmpsl
jb
ja
and
mov
andl
daa
mov
icebp
add
test
testl
repnz
nop
shrl
cwtl
cmc
push
mov
mov
rcr
pop
arpl
pop
mov
add
out
mov
sub
pop
dec
push
inc
push
dec
inc
dec
add
nop
ljmp
sarb
sub
repnz
dec
insl
sub
pop
aas
sub
testl
icebp
add
push
sbb
jge
lret
sbb
popf
xor
push
pop
or
test
mov
push
xchg
inc
andl
insb
insb
jo
pop
ds
mov
or
out
add
dec
scas
sbb
lds
mov
push
and
jmp
out
pop
sub
mov
mov
ret
clc
je
sub
pop
dec
mov
sbb
lock
mov
test
les
in
popa
jecxz
shl
push
add
adc
push
sub
pop
pop
jp
mov
cmp
cs
sub
aaa
inc
fs
push
sub
aas
mov
nopl
aas
xor
mov
lret
scas
xchg
push
dec
cs
incb
add
jne
test
pop
clc
jbe
pushf
xchg
pushf
adc
push
jecxz
adc
dec
push
imul
jge
push
scas
jg
lods
or
jmp
roll
add
or
lds
cwtl
and
dec
push
jne
push
nop
sub
mov
data16
add
add
popa
jmp
and
iret
popl
daa
imul
subb
add
inc
fnstcw
pinsrw
adc
cmp
fbstp
jno
inc
pop
dec
xor
leave
push
add
jne
or
inc
dec
adcb
push
pop
repz
and
mov
leave
and
add
pop
shll
repnz
sbb
pop
orl
push
clc
inc
loop
jbe
ret
add
repnz
push
in
xchg
cmp
push
xor
enter
js
pop
sub
aad
mov
jp
sub
sub
adc
xchg
dec
push
push
mov
sub
popa
dec
gs
leave
or
repz
sbb
sti
shr
pop
xchg
sub
mov
loopne
push
pusha
lds
mov
dec
pop
jmp
dec
mov
sub
sub
cmp
sbb
jmp
enter
ljmp
in
dec
ja
jp
neg
std
mov
test
jecxz
push
adc
mov
sub
pop
jp
mov
add
daa
dec
add
das
jmp
mov
sarl
pop
xor
or
adc
jae
inc
mov
stos
jne
out
sub
jae
or
adc
adc
cs
repz
pop
shlb
jle
aam
xchg
push
mov
loop
and
repnz
or
mov
add
or
pop
push
fcoml
dec
mov
sub
aad
inc
pop
push
mov
mov
rcr
je
out
testb
sub
movsl
xor
ja
sub
cli
and
dec
inc
subb
dec
aaa
push
outsb
xchg
lock
add
push
mov
mov
imul
add
pop
inc
int
push
loopne
les
scas
jnp
add
inc
jmp
in
jnp
jnp
testl
jl
mov
sub
jae
mov
and
jmp
add
fnstenv
fists
sarb
push
mov
mov
mov
and
inc
fwait
das
das
scas
push
shlb
push
into
stos
xchg
in
add
push
jmp
movb
dec
pop
loopne
add
hlt
push
ret
and
rcr
in
pop
pop
stos
insl
in
pusha
movsl
in
jge
xor
xchg
pop
push
mov
sbb
sbb
add
mov
in
jge
adc
jle
xor
cld
jne
add
nop
push
mov
sub
mov
mov
dec
cmpsb
pop
push
jmp
inc
inc
gs
xor
pop
ja
xor
fs
roll
xor
pop
xchg
icebp
inc
mov
cmp
xor
imul
jmp
shlb
xor
in
add
mov
mov
inc
jae
jecxz
xor
or
push
jo
xor
cmc
inc
lea
shlb
push
movsl
push
cmp
sub
dec
jg
lret
pop
inc
shll
or
jns
popa
cmp
pop
jnp
add
mov
cmc
jp
fs
push
mov
out
add
pop
popa
fidivrs
push
adc
fiadds
test
add
stos
arpl
add
jp
xchg
roll
or
or
sub
cwtl
pop
fistps
push
mov
jmp
pop
mov
inc
imul
pop
nop
decl
sbb
rol
xor
adc
jbe
nop
ret
push
cmc
xor
das
pop
in
repnz
inc
imul
sub
ja
adc
int3
inc
roll
or
in
mov
inc
iret
loop
pop
xor
dec
add
push
xor
ret
pusha
pop
sbb
outsb
sbb
jmp
sub
or
or
pop
in
adc
mov
pop
pop
test
lock
test
cmp
pop
jmp
cs
mov
push
adc
push
jmp
push
jl
or
xchg
sub
call
mov
cmp
ja
cld
sub
or
inc
faddp
or
sub
or
rclb
je
repnz
sahf
adc
jnp
add
cld
cmp
jp
mov
add
xchg
pop
dec
pop
xchg
push
push
mov
not
add
xor
shr
pusha
push
jmp
xchg
xchg
and
jns
adc
push
divl
pop
cs
and
jmp
add
sbb
jg
lret
das
pop
pop
jl
dec
int3
movsl
pop
mov
pop
cmpb
add
mov
rorb
ljmp
jmp
int3
test
lods
hlt
clc
mov
mov
nop
xor
xor
out
lods
int3
iret
imul
jne
inc
add
pop
jb
or
pop
std
data16
sarb
das
loopne
mov
mov
outsl
and
add
jmp
pop
push
jae
push
push
int3
jp
xor
sub
mov
push
ljmp
jle
mov
jle
ret
pusha
mov
icebp
ret
pop
mov
jne
mov
outsl
mov
inc
push
cs
dec
js
test
hlt
jno
dec
cmp
lods
cmp
call
cltd
outsl
mov
out
jnp
or
dec
cmc
inc
call
pop
cli
sbb
sbb
or
mov
push
push
rcrl
pop
pop
sahf
jp
sub
xor
fisubrs
aad
cmpsb
and
add
mov
ss
xchg
adc
lods
push
ja
inc
xchg
push
add
inc
fs
mov
fdivrl
sbb
xchg
dec
adc
and
rol
mov
es
cld
movsb
jb
in
mov
dec
lcall
jp
xlat
nop
jo
fisubs
mov
and
pop
inc
out
pusha
ret
aas
cmc
sbbb
out
sbb
sbb
std
in
sub
cltd
push
jmp
mov
negb
cmp
cs
loope
shlb
call
ja
xchg
and
and
call
mov
pop
rclb
rorb
xor
out
push
test
mov
pop
push
std
cmpsl
loopne
xor
jg
dec
xor
arpl
nop
xor
jnp
pusha
sbb
fiadds
movsl
adc
mov
xor
imul
nop
push
dec
stos
xlat
mov
int3
test
or
jp
pop
mov
pop
sub
loopne
fstl
push
pop
aam
sbbl
xchg
push
push
pop
test
sub
mov
xchg
add
mov
dec
popf
gs
cmpb
lahf
mov
or
inc
push
push
arpl
ss
out
jno
insl
push
testl
cmp
add
jo
data16
push
pop
jae
popf
sbb
stc
insb
xor
jmp
mov
xor
je
mov
aas
mov
in
sub
xchg
mov
adc
rcrl
sub
xchg
or
and
jmp
xorb
mov
mov
lcall
lret
sbb
in
xorl
mov
pop
xchg
or
mov
dec
sub
aaa
mov
orl
cmp
jns
test
mov
rorb
mov
pop
lret
sbb
dec
das
lcall
sub
scas
out
aaa
mov
dec
or
adc
sub
inc
dec
jb
jbe
dec
adc
inc
mov
push
xchg
addb
jo
adc
dec
mov
inc
outsl
xchg
lods
jecxz
mov
or
shlb
in
inc
xor
or
repnz
add
inc
lds
fdivrs
lock
push
sbb
xchg
mov
pop
cmp
sbb
es
push
mov
aaa
pop
inc
or
add
pop
or
cld
hlt
add
dec
lret
cmp
adc
adc
push
fdivr
sbb
mov
jbe
in
subb
mov
add
push
pop
cmp
repnz
lea
push
jmp
xor
mov
cmpb
mov
lods
adc
pop
cld
jbe
push
test
sub
fistpll
cwtl
loopne
jmp
and
inc
add
and
adc
push
add
pop
dec
decb
gs
test
and
adc
sub
cli
js
jns
nop
jo
pop
mov
loop
ficoml
loop
loope
jne
gs
ret
ss
mov
jnp
jmp
xlat
mov
xor
xchg
cmp
mov
pop
popf
inc
aas
dec
mov
cmpsb
and
cwtl
add
int
sub
ja
add
or
lods
das
pop
pop
aam
push
arpl
push
push
pop
clc
leave
test
pop
or
xchg
adc
js
bound
adc
bound
jge
cmpb
and
in
or
sub
push
push
rcr
add
cld
jmp
jbe
adc
sbb
push
aad
fs
ret
or
out
pop
repnz
cmovg
insb
lods
jmp
mov
nop
adc
mov
movsb
inc
je
cmp
and
jnp
mov
je
or
jmp
inc
repnz
arpl
stos
ds
or
movsl
into
lods
pop
popf
ret
jg
aad
add
inc
jmp
scas
scas
xchg
and
or
jmp
and
shrb
mov
mov
mov
ljmp
jmp
gs
imul
ss
adc
add
shr
orb
rolb
dec
mov
shlb
mov
push
xor
aam
pop
inc
pusha
clc
int3
push
or
arpl
repz
xchg
push
push
jns
sub
xchg
pop
lea
pop
aaa
or
sarb
xor
cmp
hlt
pop
mov
fwait
push
lods
add
sub
rcl
sbb
xor
adc
pusha
je
sarl
pop
xor
or
loopne
in
adc
or
pop
into
dec
out
sub
pop
fstp
or
mov
je
xchg
rcrl
jg
stos
fldcw
cs
xor
xchg
jne
mov
adc
pop
cmp
add
imul
sbb
xchg
testb
mov
mov
outsl
and
push
enter
pop
jmp
mov
xor
pop
mov
std
xlat
push
pushl
cwtl
mov
outsl
ds
push
inc
cmc
add
dec
and
loopne
add
les
and
adcl
pop
or
call
pusha
xorb
mov
add
loop
roll
add
cmp
lock
sub
push
test
add
xor
xor
out
sub
cmp
roll
inc
pop
lret
shll
cs
xor
push
cld
sbb
cmp
mov
stos
mov
jnp
or
lret
jmp
jmp
push
scas
dec
aaa
int
add
stos
mov
test
push
inc
inc
jnp
push
test
data16
fs
push
pop
scas
mov
lahf
loopne
mov
es
dec
out
lock
inc
syscall
in
sub
rorb
lds
xor
loop
fisttps
testl
or
cmpsl
push
loopne
repnz
add
cmp
xor
jmp
mov
jge
push
inc
leave
mov
or
push
sbb
sub
push
inc
push
jns
push
add
test
dec
jmp
pop
add
xlat
push
nop
jmp
or
pop
jmp
jne
clc
add
sub
gs
inc
sbb
sbb
pop
add
xor
or
add
data16
lods
sarb
pop
inc
sbb
xchg
cmp
pusha
nop
dec
sbb
dec
test
mov
xchg
mov
mov
iret
js
lret
jmp
pop
loopne
std
mov
sub
pop
cmp
aas
xchg
subl
ret
jne
ficomps
cmpsb
pop
sar
in
test
cmp
lock
pop
das
das
insl
js
or
ficoml
jbe
aas
xchg
push
fmull
ljmp
stc
adc
imul
daa
jb
jne
lret
push
mov
arpl
out
or
insl
popa
push
mov
sbb
inc
std
and
mov
or
in
inc
test
js
out
or
out
xchg
int
xor
mov
nop
dec
push
mul
js
xlat
stos
rcrb
addl
mov
or
mov
dec
xor
lret
cs
jae
jb
jle
insb
xor
add
lods
pop
movsb
incb
xor
push
xor
jmp
nop
push
cwtl
scas
inc
or
jecxz
or
mov
testb
fimuls
fcompl
ljmp
pusha
mov
add
mov
push
pusha
inc
push
sbb
insb
push
mov
in
add
xor
xor
adc
adc
or
cwtl
mov
push
jmp
fmull
adc
add
das
es
and
out
dec
or
mov
addb
sub
jge
mov
rcrl
ss
cmp
dec
mov
and
cltd
adc
stc
mov
cli
jmp
mov
addb
push
clc
subb
push
stc
push
push
add
psubb
sbb
clc
xor
hlt
xor
xorb
insl
sbb
or
jmp
adc
loope
fcmovnb
lret
adc
dec
gs
add
bound
xchg
frstor
xchg
push
dec
pop
mov
mov
movb
fucomip
not
adc
adcl
pop
jge
hlt
jo
test
add
pushw
jmp
lret
sub
inc
daa
mov
sbb
xor
andb
mov
mov
sub
push
test
add
push
push
pop
pop
push
cli
adc
jge
push
jecxz
xor
mov
mov
jp
fdivl
mov
inc
ret
clc
cmpsb
fmulp
lret
sahf
cmp
out
cmp
adc
test
pop
xchg
lcall
cld
cs
fwait
push
pop
in
and
xchg
and
mov
insb
sahf
xor
iret
push
idivb
sbb
repz
out
inc
pop
lods
mov
push
sub
in
ret
sbb
sbb
ret
pop
icebp
in
enter
scas
inc
jmp
add
cmc
sub
sub
inc
jl
xor
in
clc
imul
mov
adc
push
and
cld
fidivrl
imul
push
iret
mov
add
decb
jmp
lock
andb
fs
adc
jg,pn
push
inc
adc
test
cmp
addb
mov
shll
mov
jge
jbe
daa
xchg
pop
in
add
xor
cmpsb
mov
iret
and
and
pop
jl
push
pop
inc
push
jmp
daa
inc
adc
aam
dec
add
mov
cmp
cmp
test
int3
out
cltd
testl
xchg
in
push
adc
dec
xor
push
cmp
dec
dec
xor
pop
out
or
add
add
ljmp
push
gs
and
outsb
adc
inc
add
inc
jle
add
cli
test
sbb
sarb
push
pop
in
sbb
or
loopne
mov
pop
cmpsl
jno
or
xlat
das
sti
dec
stos
mov
iret
in
mov
sub
sub
mov
jns
or
inc
sub
mov
ds
shr
xchg
sti
mov
mov
push
pop
mov
cmpsb
adc
xor
rcrb
js
xchg
pusha
clc
push
fisttpll
mov
pop
pop
lock
fwait
es
xor
ret
inc
push
add
adc
clc
sub
ds
sbb
mov
out
dec
and
jns
adc
or
subl
sub
inc
fsts
xorb
mov
push
inc
adc
jbe
nop
std
xchg
push
sub
dec
and
gs
rol
int3
mov
xlat
or
aad
jmp
lds
mov
sub
jb
and
add
daa
jmp
add
orb
sbb
shrb
push
jne
inc
movsl
loop
int3
ss
add
adc
gs
or
jmp
dec
add
or
xor
add
push
test
sub
or
sbb
ret
inc
dec
clc
movsb
and
out
or
jo
test
add
rorl
sub
cmp
loop
icebp
outsl
popa
aas
ja
mov
insl
and
adc
mov
movsl
sahf
stc
mov
mov
xchg
ret
jge
jmp
mov
xchg
xchg
pop
or
add
adc
sub
pop
adc
jnp
push
stc
or
cld
jmp
outsl
and
pop
sub
inc
mov
sarl
lods
sbbw
test
fwait
push
das
mov
mov
into
lea
movsb
cmp
jmp
push
dec
sub
or
jmp
or
sbb
inc
lds
jno
cmp
or
mov
or
pop
adc
adc
mov
or
std
pop
push
das
repz
shrb
imul
cmp
cwtl
in
fstps
pop
scas
adc
push
hlt
jl
push
mov
adc
pop
movsb
mov
adc
or
inc
and
loope
ja
dec
dec
shr
popa
outsl
fs
sti
pop
push
fisttpll
lret
dec
dec
add
pop
adc
outsl
pop
syscall
push
sbb
call
addl
mov
jecxz
mov
jp
pop
pushf
xchg
shll
pop
mov
push
ret
xchg
and
xor
dec
push
push
decb
jle
adc
sub
xor
in
inc
jns
adc
cmp
test
int3
and
and
adc
or
pop
mov
imul
add
push
xchg
and
hlt
mov
inc
push
fs
imul
iret
rcrb
and
into
rorl
lea
mov
test
cwtl
jbe
cmpsb
add
push
mov
pop
fistps
cmp
mov
es
adc
ret
repz
sub
fsts
push
push
lock
sbb
push
push
stos
or
adc
lea
jo
nop
cmp
and
dec
add
add
bound
and
jecxz
ds
xchg
lock
gs
and
sub
pusha
shlb
add
pop
xor
sti
int
jmp
push
push
pop
mov
jae
rol
movsb
imul
or
push
sub
cmp
push
test
mov
and
pop
add
push
ffreep
jb
lock
stos
insb
inc
xchg
xchg
push
and
xlat
push
sti
pop
jmp
push
js
jg
icebp
jbe
xchg
andb
int3
add
aad
mov
adc
xchg
negl
inc
adc
adc
fsubrl
sub
push
jmp
mov
sub
sbb
stc
xor
out
and
jg
pushf
add
loopne
push
in
pop
pop
movsl
sbb
adc
cli
out
test
pop
sub
jmp
int3
aad
daa
add
jecxz
add
push
adc
cwtl
insl
add
inc
xor
cmp
cs
dec
mov
jp
filds
ret
dec
xchg
add
add
stos
das
jmp
shl
jae
aaa
sub
mov
decb
pop
dec
enter
cmp
jnp
rorb
add
pop
loope
add
pushf
jg
mov
bound
sub
nop
imul
dec
loopne
sub
mov
pop
popa
das
test
dec
jp
ret
sub
out
cwtl
mov
inc
fsubrs
dec
stos
or
repnz
jge
cs
xor
pop
addl
fs
inc
mov
sbb
daa
push
fadds
call
dec
mov
mov
adc
popf
and
xchg
inc
mov
and
sub
sub
je
add
jmp
mov
outsb
inc
push
imul
push
pop
cmp
sbb
fadd
insl
jae
push
lret
add
dec
xorb
xor
cmp
push
into
fcomp
out
xor
jmp
jbe
push
push
xor
mov
imulb
addr16
loopne
sahf
pop
pop
lods
sbb
mov
int3
notb
push
inc
sahf
adc
ds
pop
inc
sub
rorl
push
repnz
mov
sarl
sub
repnz
dec
orl
mov
and
sub
dec
stc
shlb
dec
cmc
icebp
sub
insl
daa
mov
jmp
pop
mov
aad
aas
out
lods
sub
or
push
jne
scas
mov
fs
push
ret
or
jo
add
or
push
rolb
in
rcrl
daa
jmp
fisubrs
and
sbb
pop
mov
inc
push
imul
mov
jo
add
pop
add
jns
ret
test
or
gs
and
push
clc
add
pop
pop
adc
xchg
adc
jle
jecxz
xchg
popf
add
add
inc
cmpsl
sub
call
mov
adc
xor
ficoms
out
add
adc
push
dec
sbb
les
push
cltd
add
or
and
and
push
xor
jae
add
xor
xor
add
mov
xchg
rcrb
dec
and
movsb
or
xor
dec
xor
push
test
leave
push
or
cmp
mov
or
adcl
sub
pushf
xor
pop
add
sub
int3
and
push
mov
xchg
sub
push
call
dec
mov
or
push
adc
pop
mov
or
or
addl
inc
push
pop
inc
popf
sub
add
testb
rclb
dec
and
and
xor
lret
cltd
and
bound
dec
xchg
add
fldcw
xor
cwtl
mov
add
adc
dec
addl
add
ja
pop
inc
dec
enter
jmp
xlat
push
push
inc
fldenv
mov
push
sbb
cmp
lcall
sub
imul
test
mov
xor
push
xor
pop
dec
add
adc
fwait
sbb
lea
jb
dec
into
jae
icebp
les
mov
dec
add
dec
add
fs
test
ficomps
das
adc
adc
cltd
pop
mov
xchg
orl
cltd
xor
cmc
mov
push
adc
inc
and
dec
testl
push
icebp
in
add
add
dec
decl
add
jmp
les
std
pop
pop
add
xor
mov
and
popf
push
fwait
lods
jno
gs
sbb
daa
fmuls
or
jnp
cmp
test
cmp
or
xchg
mov
or
sbb
jle
or
push
lea
test
xor
mov
icebp
int
into
and
insl
rcrb
sub
mov
or
xchg
pop
jmp
pop
cltd
icebp
fidivrs
xchg
mov
push
stos
jo
push
or
or
subl
test
pop
scas
in
loopne
mull
pusha
cld
cli
dec
incb
jl
lock
lahf
push
in
or
add
inc
and
dec
xchg
aam
pop
jmp
inc
add
or
aad
dec
icebp
movl
cmp
add
lods
jl
cmp
das
adc
loop
stos
or
pop
mov
jbe
pop
jne
jl
je
add
in
mov
sbb
adc
mov
pop
and
fcoml
cs
push
je
adc
clc
push
subb
jl
dec
push
cwtl
xchg
sub
mov
fisubrl
mov
push
xchg
jge
add
imul
jg
push
xor
stos
std
or
fwait
push
scas
imul
inc
xchg
neg
add
xor
and
add
pop
inc
je
lcall
xor
mov
push
sbb
add
push
pop
test
int3
xor
sub
jp
das
sahf
ja
mov
pop
sub
xor
sub
pop
adc
sub
and
xchg
into
xchg
clc
jne
mov
sbb
leave
jle
adc
addr16
mov
into
sub
jmp
nop
push
add
push
mov
cmp
ljmp
push
cmp
pop
mov
mov
call
lahf
rcrl
cmp
jmp
pop
dec
stc
fs
add
mov
push
jmp
mov
jne
dec
xor
jns
cmp
xor
sbb
push
movsl
mov
js
sub
fs
nop
mov
sbbl
mov
inc
not
add
fildl
push
sub
pop
inc
ret
xor
dec
pop
leave
push
aas
fisubs
nop
rcrl
daa
out
sub
xor
jo
jl
jmp
push
inc
pop
cmc
ret
inc
jle
jno
adc
sub
dec
adcl
rcrl
gs
stc
push
dec
mov
push
pop
push
mov
adcl
arpl
lret
lea
jmp
cmp
fstpl
jmp
dec
sbb
inc
xlat
testl
mov
lret
cltd
adc
fsubrs
cmp
add
cmc
pop
inc
push
push
mov
xchg
mov
mov
xchg
repnz
roll
movl
push
mov
sub
idivb
ds
xlat
cmp
sbb
cmp
xor
imul
ds
test
inc
and
or
stos
mov
sub
adc
xchg
enter
pop
loop
rolb
into
jmp
cld
lcall
mov
or
sbb
fldl
lret
imul
xchg
jle
xor
xchg
enter
adc
out
and
out
ret
cmpsl
cld
push
leave
mov
xlat
loopne
jmp
jl
and
test
or
ja
sub
mov
jns
mov
insb
scas
cmp
sbbl
test
ds
mov
test
jmp
sub
ljmp
fimull
fstpl
jns
xchg
and
mov
outsl
xor
mov
outsb
test
and
jb
pop
clc
imul
stos
adc
sub
or
int3
out
ret
sarl
pop
orb
push
aas
push
push
decl
repz
cmp
add
add
adc
sub
mov
jle
pop
jbe
fs
gs
lock
inc
pop
dec
inc
addr16
out
jg
mov
lods
pop
add
and
cmpsb
pop
psubsw
push
rep
xchg
scas
icebp
ror
jne
pop
popf
roll
outsl
lods
mov
movsb
mov
out
stos
ljmp
js
repnz
and
rcll
cmp
dec
cld
gs
xchg
sti
sahf
add
orl
jg
popa
or
adc
pop
jmp
jae
sub
stc
dec
outsl
mov
pop
and
or
pop
cmp
addl
fistl
cmp
jle
aam
mov
sbb
daa
sub
pop
inc
jl
and
or
ljmp
leave
jbe
xor
loopne
jno
aam
pop
mov
notb
lds
jmp
addr16
das
insl
cmp
jmp
add
jmp
lds
lods
call
fsubrs
mov
add
push
dec
aas
xor
xchg
pop
mov
inc
jmp
dec
shr
leave
push
or
mov
sub
sub
add
pop
pop
dec
ds
pushf
adcb
or
xchg
add
mov
sub
jp
jns
cmp
push
or
in
stos
leave
fstps
pop
movsb
insb
or
jbe
cmp
xchg
fwait
das
jne
dec
jmp
pop
daa
dec
mov
xchg
xchg
fistpl
sub
pop
inc
cltd
dec
or
push
xchg
insl
adc
popa
push
mov
mov
rcl
sub
push
jmp
push
push
mov
xor
cwtl
inc
adc
adc
pop
adc
push
loope
outsl
add
ror
fsin
dec
leave
ret
jge
shlb
inc
jge
lcall
dec
jecxz
ljmp
xchg
orl
les
dec
or
or
jge
xlat
in
push
push
mov
sti
cmp
or
mov
and
inc
sub
jne
in
sysret
xchg
adc
jmp
push
mov
and
std
adc
add
in
mov
add
stc
roll
loope
push
ds
push
push
mov
sub
pop
das
and
ud2
mov
xchg
jbe
stc
imul
dec
outsb
shll
loop
jp
das
lds
xchg
adc
sbb
ret
imul
bound
or
cltd
mov
pop
sahf
adc
daa
jge
cmp
and
push
dec
aad
xchg
movsb
push
or
jo
jmp
paddw
sub
movhps
mov
mov
cmc
mov
push
clc
mov
or
dec
insb
and
push
xor
mov
jge
arpl
add
cs
mov
lret
mov
mov
and
add
mov
daa
inc
sub
pop
add
not
inc
add
sub
hlt
cltd
or
ja
add
sub
sub
es
jmp
inc
or
loopne
insb
es
iret
add
push
xor
sbb
push
jns
or
push
add
push
jmp
mov
xchg
adc
loope
outsb
addb
inc
das
push
sarl
pop
jbe
subb
bound
arpl
es
sar
push
imul
and
loop
sub
add
ret
test
pusha
cmp
or
push
gs
inc
xchg
inc
dec
cmp
add
loop
pextrw
mov
adc
push
push
xchg
add
lret
gs
sbb
pop
xor
add
and
sbb
add
pop
xor
neg
aam
sub
adc
out
xchg
shr
data16
sbb
loopne
dec
pop
data16
cli
sbb
adc
dec
in
mov
dec
or
sub
xrelease
jno
inc
xchg
icebp
aam
mov
cli
mov
inc
jmp
enter
mov
jmp
xchg
enter
sub
lock
and
popf
adcb
cs
incl
cmp
addb
into
sub
icebp
push
rorb
add
aam
push
loope
jb
jecxz
or
cmovo
jp
loopne
mov
aaa
cmp
jbe
pop
adc
inc
movsb
mov
xchg
jne
iret
mov
push
jmp
xlat
xor
inc
pop
add
jmp
sub
pop
orl
cld
push
sarb
fs
inc
test
dec
add
inc
add
pop
jmp
arpl
pop
iret
aad
cmovs
stos
push
imul
push
cs
push
jmp
pop
cli
jl
jecxz
mov
push
jecxz
adc
xchg
sub
icebp
into
js
daa
pop
jg
push
dec
xchg
cmc
test
scas
mov
mov
mov
jmp
mov
mov
or
jecxz
push
sbb
mov
pop
ja
or
test
sbb
add
jo
jp
sbb
cmp
andb
mov
mov
push
rcrl
push
pop
fs
js
push
jne
jbe
cmpsb
icebp
add
dec
jecxz
sbb
shrb
mov
insb
int3
jle
inc
mov
inc
pop
dec
mov
inc
mov
or
xor
push
mov
repz
outsb
into
or
out
ja
imull
movsl
add
jo
cmp
push
roll
imul
xchg
shr
xchg
jmp
sub
fistl
adc
xor
sub
pop
sub
push
insb
inc
push
mov
shr
lahf
loopne
mov
fsubr
sub
xchg
dec
xchg
jmp
inc
je
xor
clc
add
add
das
push
fs
cmp
ret
add
pop
pop
pop
push
and
pop
jmp
cmp
pop
clc
test
imul
pop
mov
ja
arpl
push
push
push
sbb
ret
shrb
loope
outsl
dec
inc
sbb
scas
xchg
sbb
sbb
adc
mov
cmp
push
push
jmp
push
fcompl
push
xchg
loop
adc
leave
lods
pop
add
jg
pop
jmp
xchg
inc
or
and
jg
sub
jmp
dec
and
shr
add
push
xor
jmp
push
push
jo
cmp
jns
mov
push
cmpsb
or
int
add
movsb
ss
lahf
mov
jmp
add
or
bound
jecxz
pop
mov
add
sbb
cmc
jecxz
out
jbe
push
xor
inc
not
add
jl
test
aas
in
add
sbb
cmp
repnz
into
lods
aas
frstor
pop
or
stos
fcmovnu
add
pusha
sub
sub
jno
add
and
push
pop
repnz
pusha
pop
aam
mov
out
inc
ret
cmp
jmp
xchg
das
js
jb
jg
rol
push
jb
sub
mov
add
pushf
jmp
push
mov
or
jae
jmp
xchg
loope
rorb
mov
testb
add
push
mov
sarb
xchg
jnp
cld
out
pop
stos
mov
mov
add
int
and
jg
push
or
mov
ret
lahf
popa
xchg
out
pop
or
movsb
or
add
int3
jmp
rolb
neg
dec
mov
and
or
xlat
mov
cld
pop
jmp
addb
or
add
adc
adc
jo
push
dec
addb
lret
enter
pop
mov
out
pop
gs
imulb
jmp
jmp
lds
pop
std
mov
rorl
add
jge
push
addr16
ret
mov
mov
loope
xor
sub
and
pop
loopne
mov
add
in
in
and
repnz
clc
or
inc
aas
leave
jb
outsb
cmp
mov
ljmp
test
xor
or
inc
and
in
aas
hlt
xchg
or
cmp
or
add
mov
popf
add
jmp
pusha
pop
mov
cwtl
push
pop
loope
cmp
loop
sub
lods
in
shrb
add
add
sub
dec
pop
fldenv
and
and
aas
mov
daa
fs
sub
adc
or
stc
push
je
int
xorl
adc
dec
out
fldt
sub
adc
push
call
call
sub
push
sub
jge
add
xor
imul
pop
adc
xor
filds
push
inc
sbb
adc
add
jmp
push
lea
and
or
jmp
shlb
jns
or
pop
out
cs
flds
fisubrl
stos
inc
jnp
push
decl
mov
fbstp
shl
gs
adc
and
filds
sub
add
jns
stos
call
jl
pusha
mov
in
arpl
sub
push
mov
pop
or
mov
adc
push
enter
xor
push
add
popa
sti
cli
flds
sub
inc
into
mov
pop
pop
mov
push
sbb
adcb
movb
jmp
enter
cmp
daa
mov
xchg
jo
xchg
inc
xor
xchg
push
ja
jge
push
adc
xchg
xor
or
push
jno
lds
push
gs
ret
mov
pusha
sub
nop
push
mov
mulb
outsl
dec
out
rcrl
out
xor
pop
dec
inc
add
ja
mul
lcall
pop
and
inc
push
add
or
cmp
xlat
fbld
jle
jmp
sahf
divb
or
ljmp
jl
add
or
sub
push
dec
leave
fimuls
jp
add
push
push
neg
jle
sub
iret
clc
stc
jno
lret
sbb
xchg
jecxz
jbe
call
dec
inc
push
sti
test
xor
aam
pushf
ljmp
mov
inc
or
int
sbb
mov
dec
adc
mov
out
ds
insl
mov
mov
or
xor
push
and
cmp
imul
mov
out
cmp
inc
dec
sub
es
fs
lock
jmp
lods
inc
dec
loope
pushf
and
push
mov
pop
addl
pop
cmp
mov
out
adc
mov
test
pushw
inc
pop
popa
mov
ret
push
subb
jmp
adc
std
sbb
or
pop
loopne
ret
and
and
jecxz
fcmovu
jo
mov
sbb
push
push
mov
inc
cmp
sbb
je
pop
xchg
or
cld
clc
pop
and
repnz
stc
fildll
pop
pop
dec
jmp
in
and
cmc
bswap
sbb
rolb
sbb
jno
aas
insl
adc
push
add
dec
loopne
dec
push
dec
jl
add
mov
mov
or
mov
mov
or
mov
pusha
scas
lods
sbb
xor
das
push
cs
add
inc
push
hlt
add
fidivs
repz
adc
inc
jg
add
inc
push
add
push
ljmp
adc
std
jmp
mov
fs
pop
leave
imul
movsl
stos
scas
jle
jmp
dec
xchg
jno
sbb
sub
outsl
mov
popa
leave
or
jbe
ds
adc
sbb
repz
xor
or
adc
sub
aaa
pop
sbb
fs
and
nop
mov
dec
ljmp
cmp
loop
cmc
push
nop
fldt
test
or
push
roll
mov
lock
pop
stc
jb
lret
fildll
jge
int
daa
jne
push
mov
scas
pop
adc
into
mov
xchg
sub
into
add
xor
add
mov
shrb
fmulp
mov
ja
mov
and
imul
ljmp
stos
jle
push
roll
shrb
daa
cmp
jae
ljmp
jb
cltd
xchg
and
add
ret
mov
push
mov
xor
lret
xor
movb
int
cmp
xchg
mov
adc
jecxz
jge
gs
cmp
adc
push
jno
xor
push
pop
add
loopne
ljmp
adc
sub
fsubr
fiaddl
dec
mov
mov
xor
lock
pusha
jo
pop
push
cmp
js
add
jecxz
in
inc
lahf
gs
jmp
flds
jl
lds
ss
pushf
rol
xchg
subb
out
pop
adc
pop
push
les
push
mov
cmpb
dec
add
cmp
or
mov
lods
dec
ja
mov
cmp
test
aad
adc
or
ret
or
arpl
pop
mul
jge
lods
popa
inc
add
cwtl
lahf
add
mov
stos
sub
add
mov
les
loope
adc
dec
push
pop
fcmovb
dec
inc
dec
and
in
test
fcomps
inc
inc
ljmp
add
adc
imul
add
pop
add
pop
ja
scas
xor
cmp
loopne
mov
xor
scas
xor
push
adc
push
jp
fprem1
mov
push
mov
pop
loopne
testb
add
push
cs
lret
mov
add
pop
add
jmp
xchg
ja
push
rolb
adc
ret
sbb
sbb
xor
push
cmp
stc
adc
push
xlat
mov
adc
xlat
push
rolb
ficoms
or
add
push
push
ftst
pop
ret
jge
add
ficoml
pusha
lock
push
add
mov
lahf
and
subb
xchg
scas
in
leave
jecxz
jecxz
sub
lock
dec
mov
ret
sub
das
jbe
pop
and
pop
loopne
mov
push
ja
in
xor
cld
test
call
jg
ja
lahf
mov
cmp
and
sub
adc
xchg
jmp
mov
mov
mov
push
and
adc
out
adc
jecxz
pop
sub
mov
rorb
aas
jg
pop
leave
hlt
push
sub
mov
pop
loope
lods
cmp
int3
push
xor
mov
sbb
in
mov
outsl
jge
mov
mov
or
ja
or
cmp
or
jmp
pop
or
lcall
js
push
sti
push
je
or
push
mov
bound
inc
lea
mov
push
int3
outsb
insl
adc
imul
jmp
and
lods
add
push
je
repnz
or
sub
lds
out
js
or
sbb
add
imul
inc
lahf
pop
outsl
push
push
ficompl
loope
lods
adc
out
leave
adc
loop
negb
shl
xor
scas
clc
inc
mov
not
lds
sub
fstpl
pop
xor
loope
pop
push
outsl
dec
and
fnsave
loope
negb
arpl
stc
push
xor
pop
hlt
loope
lods
add
xor
cwtl
push
mov
mov
sub
hlt
sti
in
ficomps
bswap
popf
popa
repnz
scas
sub
add
inc
push
jae
pop
push
outsb
loope
add
imul
push
cmpsb
xchg
ficomps
sub
push
adc
adc
das
ljmp
mov
cmc
adc
jnp
lret
adc
pop
mov
test
dec
push
cmpsl
adc
neg
or
out
out
das
cmc
pop
jbe
push
loopne
xor
pop
pop
sub
and
ss
testl
push
mov
jmp
scas
pop
mov
adc
dec
push
lods
call
sbbb
or
jmp
mov
aad
jge
ret
test
xor
sub
and
and
sti
cltd
pop
pop
pushf
mov
jmp
pop
or
push
dec
movsb
inc
movsl
jl
roll
push
enter
add
push
adc
stc
pop
jl
das
pop
cld
pusha
daa
push
in
leave
sbb
stc
inc
jb
lods
pop
mov
push
push
daa
push
repz
xchg
push
jge
sub
mov
jbe
and
sahf
dec
jmp
sbb
sbb
int3
fsubrl
jo
xchg
std
mov
dec
push
mov
jae
leave
jecxz
xchg
jge
adc
outsb
imul
dec
loope
cwtl
inc
hlt
jmp
sbb
enter
in
aas
inc
pop
push
ss
or
cs
fs
push
roll
into
loop
icebp
dec
cmpsb
sahf
or
pop
mov
cwtl
fisubrl
push
pop
nop
int
push
wrmsr
ja
aas
jmp
or
stos
mov
mov
das
inc
jg
fistpll
jbe
push
repnz
jnp
inc
or
jae
sbb
add
loope
cs
inc
aaa
into
xlat
jb,pn
nop
cmp
cmp
dec
xor
in
sub
call
cmp
repnz
xchg
sbb
test
jmp
mov
mov
loopne
js
std
int
sub
rorb
mov
mov
xor
jb
and
scas
scas
jbe
in
push
mov
repnz
xchg
dec
and
pop
xchg
push
adc
imul
cmpl
sub
jnp
movsb
bound
js
xlat
out
icebp
jge
ljmp
mov
add
not
or
out
seta
iret
pop
pusha
fists
scas
xor
out
sub
pop
push
pop
fucomp
add
ss
sti
sub
xchg
jl
lea
add
lahf
jo
leave
pop
jge
jp
jg
xor
lds
daa
mov
pop
shl
push
dec
xorb
xor
add
fsubl
fs
cmp
rcrl
or
cmpsb
push
sub
ljmp
xor
xor
adc
mov
mov
push
mulb
sub
jmp
out
test
xor
adc
pop
jae
cmp
test
in
fcomi
pop
fidivrs
gs
je
sarl
popa
jmp
fcoml
inc
test
inc
jmp
rolb
test
jns
inc
add
and
sbb
inc
sbb
mov
jg
mov
jg
mov
call
jno
inc
in
mov
pop
test
stos
mov
rolb
jg
or
divl
rorl
aas
cld
jg
clc
and
or
push
dec
xor
dec
adc
dec
adc
cmp
xor
jmp
xor
adc
push
jge
adc
xor
mov
push
sub
lret
mov
xchg
stc
bound
push
push
pop
and
mov
jmp
pop
stc
jbe
mulb
add
pusha
dec
push
pop
and
jmp
push
mov
popf
clc
pop
ret
pop
sub
inc
and
insb
or
sub
cmp
mov
mov
push
pop
popa
add
jl
inc
push
cwtl
stos
popf
das
loop
arpl
in
sub
dec
xor
out
mov
das
mov
push
cli
insl
sbb
mov
cmp
or
bswap
cwtl
cmp
mov
xor
xchg
icebp
jle
shll
mov
adc
popf
sub
and
cmp
mov
enter
pop
push
pop
sbb
inc
push
pop
xor
add
cmp
and
cs
jno
or
mov
push
loop
pusha
icebp
test
xorb
or
and
daa
not
add
sbbb
cmp
into
pop
shl
sub
sub
loop
cmp
mov
sub
mov
push
cltd
pusha
inc
jae
mov
mov
or
mov
icebp
cmp
repnz
repnz
jns
or
inc
leave
shrl
les
push
neg
aad
pop
adcb
pop
pop
add
mov
mov
inc
pop
jb
lock
test
and
mov
ss
es
leave
cltd
cmp
test
mov
mov
mov
imul
push
test
shll
inc
out
add
push
inc
ret
sbb
pop
jecxz
add
sub
adc
sub
mov
inc
mov
jg
lock
aaa
call
or
push
test
inc
imul
inc
inc
ret
outsl
popf
shrb
adc
idivl
cli
sbb
es
sub
std
xchg
mov
push
popf
and
pop
or
test
loopne
push
cltd
or
inc
sub
je
and
jmp
shl
mov
add
ds
jnp
es
mov
filds
clc
and
cmpb
lods
shll
add
cmp
int
pop
aam
mov
push
mov
push
push
add
jno
fnstcw
shrl
stos
mov
or
cmpxchg
nop
sbbl
pop
push
pop
and
jle
lcall
mov
adc
mov
or
ret
push
cs
sar
sub
sub
jne
xor
jno
jg
sti
shlb
fsubrs
rclb
xchg
out
pop
xor
adc
iret
lds
aas
fmull
mov
loope
lcall
lock
mov
repnz
pop
shll
cmp
or
inc
xchg
aaa
inc
add
lret
mov
pop
jmp
sub
pushl
test
out
mov
mov
dec
push
adc
dec
mov
loopne
add
inc
mov
jo
mov
xchg
adc
sub
dec
cld
scas
and
add
push
sub
daa
inc
adc
mov
lock
push
sbb
or
xor
xchg
push
pop
test
and
call
mov
sbbl
or
and
jns
andb
inc
mov
sub
add
xor
sub
inc
pop
or
push
inc
pop
jl
or
push
jmp
in
and
or
push
dec
xchg
mov
int3
sbb
pop
sub
xchg
sub
mov
cmp
pop
pop
pop
mov
adc
pop
je
push
add
xchg
sti
push
shrl
push
sub
shr
adcb
mov
add
push
mov
and
adc
dec
xor
pop
fdivrs
jns
mov
pop
lret
xor
add
fs
mov
and
loopne
mov
cmpsl
shl
cwtl
jmp
mov
movsb
adc
push
and
dec
repz
test
cs
cmp
or
insb
bound
inc
push
add
push
repnz
push
and
jns
outsb
adc
lret
arpl
adc
decl
dec
movsb
push
ljmp
cmp
ds
dec
xor
lea
cmp
scas
mov
jmp
pop
sbb
in
inc
cld
sbb
push
bound
and
cmpsb
sbb
pop
pop
popf
inc
push
sub
or
sbb
sbb
push
sub
or
cmp
mov
ljmp
mov
sbb
xor
daa
mov
shll
pusha
mov
or
sub
mov
shrb
hlt
ljmp
int
out
dec
inc
outsl
xchg
or
or
outsl
adc
movsl
leave
jg
dec
or
jnp
add
mov
dec
xor
xor
add
push
pop
xor
and
sub
dec
adc
jne
cli
or
cmp
in
jmp
cltd
rolb
xor
mov
and
pop
or
inc
pop
sub
insl
jne
and
xor
inc
mov
cmp
aad
xchg
add
shll
repnz
or
das
ds
lods
xchg
test
dec
in
sbb
faddl
pop
push
dec
js
or
xchg
clc
fisttps
push
add
add
fsts
push
pop
or
and
test
jmp
mov
cltd
add
xor
repz
icebp
cmp
andl
scas
insl
shlb
leave
pop
jno
adc
popa
and
mov
bound
orl
inc
pop
ljmp
ret
push
outsl
xor
fidivl
fs
pop
psubsb
jl
and
adc
mov
pop
pusha
xor
adc
and
sbb
xor
pop
test
ret
mov
cmpsb
bound
lret
add
jmp
add
inc
jmp
push
push
jmp
and
pushf
movl
or
jo
cmp
aam
pop
aas
in
inc
sbb
inc
pop
in
push
xor
sbb
pop
sbb
dec
call
jmp
sbb
mov
repnz
pop
es
or
addr16
or
add
inc
out
jl
mov
pop
sarb
jmp
xchg
inc
divl
jecxz
frstor
or
popl
cmp
cld
sub
bound
mov
dec
addb
or
sbb
sub
and
cmp
inc
jo
dec
lds
cmpsb
leave
add
lret
cltd
add
outsb
push
outsl
dec
shll
std
je
inc
out
or
sbb
push
push
adc
or
and
add
test
rclb
jmp
push
mov
adcl
fisttps
mov
dec
add
test
popf
and
sub
mov
jmp
in
sub
add
imulb
loope
jnp
xchg
rcrb
xor
insl
add
mov
std
sbb
adc
lret
into
add
pop
add
movsb
dec
sbb
sbb
jno
or
jbe
out
dec
jp
lds
pushw
pushl
cmpl
pop
xor
xchg
pusha
xchg
cs
jl
cli
hlt
jns
cs
mov
pop
sub
mov
dec
and
mull
sbb
dec
or
cmp
sbb
pop
push
stc
pop
adc
scas
insb
adc
es
jmp
push
mov
lea
test
push
jp
es
jecxz
int
ret
cmp
mov
ljmp
dec
addl
testl
jns
pop
mov
or
fs
iret
scas
sub
mov
sbb
ret
mov
and
inc
or
fidivl
pop
sub
push
cmp
push
adc
pop
stos
mov
inc
xor
and
xorb
fisttpl
cmp
bound
jmp
push
and
or
push
add
jns
lret
or
dec
lods
push
lret
mov
dec
jmp
pop
sub
push
ret
jnp
daa
push
pop
js
jmp
pop
push
sbb
test
ret
fwait
xchg
lods
bound
std
push
mov
add
neg
push
icebp
loopne
xchg
jg
int
xchg
jecxz
das
mov
stos
cli
pop
aad
push
and
adc
ja
or
outsl
mov
arpl
call
and
push
or
mov
and
and
xor
add
pop
sub
incl
pop
or
xor
iret
cmc
hlt
sbb
jo
add
mov
sbb
jecxz
cmp
in
mov
xchg
cmp
add
pusha
sbb
adc
push
sbb
int
outsl
lods
push
mov
lds
jnp
addb
pop
stc
sub
cli
and
xor
xor
outsb
mov
or
push
add
mov
push
loope
pusha
or
cmp
in
ss
mov
lods
sbb
pop
jmp
inc
roll
dec
pop
sub
push
ja
in
push
fstpt
test
mov
sub
and
push
add
ret
jmp
mov
jo
xchg
in
ret
push
mov
shr
dec
arpl
bound
in
in
enter
or
dec
lock
or
das
add
adc
sbb
imul
loopne
pop
push
ljmp
mov
mov
test
adc
xor
push
mov
jbe
sbb
or
lahf
push
addr16
arpl
stos
and
add
sub
into
xor
out
stc
dec
addr16
mov
andb
push
jns
call
stos
enter
lret
push
mov
and
dec
mov
push
mov
jecxz
sbb
sti
enter
add
fstps
add
sub
cmp
sub
mov
ss
out
pop
sub
js
pop
cmp
inc
mov
fmuls
and
rorb
mov
add
xor
pusha
ret
jmp
iret
jb
jle
xorb
testb
dec
js
add
xor
xor
sbb
in
ret
mov
aam
add
pop
pop
ljmp
cmp
sarl
pop
ret
loop
mov
enter
inc
mov
and
mov
xchg
mov
test
pop
popf
pop
mov
push
cli
cmp
popf
inc
cs
sbb
push
push
mov
mov
jmp
jmp
adcl
ja
scas
or
movsb
push
jmp
adcb
pop
pop
je
sbbl
out
adc
fwait
jb
pop
jle
jp
gs
xor
add
enter
jb
and
ret
or
sahf
ret
add
cmp
pop
hlt
add
sub
xor
movsl
in
add
ret
pop
pop
fs
adc
jg
icebp
mov
jl
jp
dec
pop
es
sub
int
pop
sub
mov
dec
in
jg
test
mov
adc
lcall
and
daa
adcb
ret
adc
pop
loopne
pop
jmp
negb
or
nop
cmc
mov
hlt
sbb
pop
sub
scas
dec
and
jmp
sti
inc
sbb
lods
push
adc
pop
out
pop
pop
push
and
pusha
mov
cmp
push
mov
mov
or
js
add
mov
mov
push
inc
mulb
into
inc
in
pop
fstl
push
mov
mov
xchg
icebp
ljmp
mov
push
pop
push
outsl
orl
push
cmp
insl
dec
stos
jge
cmp
bound
mov
dec
lahf
fstps
rcrl
add
psrad
roll
xorl
push
pop
push
cmp
jbe
or
pusha
sub
repz
outsl
test
dec
pop
fucompp
inc
xchg
jmp
sarl
stos
sub
pop
mov
lret
add
cmp
sti
or
mov
cmpsl
fcomi
addl
inc
movsl
lea
xchg
pop
imul
push
cmp
xchg
sarl
sub
int
insl
xor
xlat
dec
data16
or
gs
dec
jo
pop
and
push
rclb
and
arpl
cmp
inc
xor
pusha
in
lret
in
dec
scas
sub
pop
cmp
cs
adc
or
imul
fwait
addb
sub
cmp
out
std
inc
jo
mov
xchg
lock
cmp
fisubl
add
and
mov
jmp
insb
inc
mov
sbb
fiaddl
inc
shll
mov
cmovg
loope
jmp
stos
and
mov
push
clc
and
cmp
xor
dec
out
xorb
sub
lahf
scas
mov
data16
shr
xor
push
jbe
jp
lret
or
arpl
iret
lret
fadd
jmp
frstor
sbb
sub
or
push
ja
jg
dec
loopne
in
out
pop
mov
cwtl
pop
or
jp,pt
mov
fists
mov
inc
cmp
or
pop
jne
xchg
cmp
xor
xor
push
ss
aaa
push
dec
pop
mov
and
lds
jle
dec
jo
imul
bound
mov
lds
pop
adc
stc
lods
inc
fiadds
ret
cmp
mov
add
add
fistl
push
inc
jmp
add
add
shlb
push
jmp
inc
and
lods
inc
and
cli
push
pop
mov
int
in
mov
lret
xor
iret
sbb
and
cs
jae
sub
jmp
add
push
mov
cmpsl
sub
cld
xlat
sbb
add
rep
out
inc
mov
lods
push
xor
adc
add
and
push
inc
mov
jne
addb
sbb
arpl
scas
sbb
in
jp
and
add
mov
lahf
and
push
cmp
cmp
jp
leave
dec
mov
std
dec
cmp
in
jne
sub
lret
jmp
lret
out
jo
push
cmp
rcl
sub
add
pusha
insl
jne
inc
jo
hlt
rorb
in
cs
add
cwtl
sub
add
call
faddl
or
push
jae
mov
push
fmull
out
ja
mov
inc
mov
xchg
rclb
and
cmp
adc
jmp
jmp
add
dec
inc
xchg
push
dec
adc
add
sub
dec
pop
loopne
pop
xor
ljmp
xchg
sbb
jp
sbb
clc
push
push
mov
xor
sbbb
inc
std
push
push
daa
int3
cmp
cmc
push
das
mov
lret
dec
xchg
cmp
setbe
rcrl
inc
cmp
add
adc
fnstenv
or
rolb
xchg
jne
and
pop
fiadds
mov
push
test
mov
sub
les
or
jo
sub
loop
fists
xor
lea
ja
movsb
ret
mov
and
pop
cmc
rcrb
call
pop
pushl
stos
adc
in
add
pop
push
jmp
mov
loope
mov
sub
lock
xchg
jg
jbe
dec
pop
std
mov
roll
push
mov
push
sub
xor
cli
and
adc
add
iret
sub
mov
adc
sahf
add
jb
sbb
add
das
pusha
inc
push
lahf
mov
push
les
inc
and
fcmovnu
pop
shr
in
cli
hlt
jo
pop
out
adc
and
out
push
jnp
mov
sub
pop
shlb
sub
xor
ljmp
lds
add
add
jo
div
add
add
ret
dec
sarl
fcomi
and
loop
jmp
lahf
mov
stos
mov
xor
sub
ss
fmul
orb
imul
add
ss
jns
push
cmp
push
inc
or
sub
dec
push
and
imul
adc
inc
or
push
and
fildll
in
dec
adc
mov
jne
pop
pop
pop
push
mov
test
pop
add
add
lret
cmpsb
mov
ret
ffree
mov
add
mov
mov
sub
outsl
fbld
mov
int3
pop
jb
xchg
sub
mov
ret
push
and
hlt
sbb
out
hlt
mov
xchg
rolb
mov
mov
ret
or
pop
repz
call
insl
aad
mov
imul
xor
add
xor
push
xor
sub
dec
jmp
sub
imul
sub
decb
leave
lahf
rcl
shr
insb
jg
lods
leave
jp
and
out
sub
stc
sub
mov
push
call
shrb
data16
loope
jg
push
sub
movsl
rcrl
dec
pusha
sbb
sbb
and
sbb
inc
imul
mov
je
jle
and
inc
sub
jle
call
and
xor
arpl
cmp
std
add
push
xor
loop
jl
add
xor
jnp
push
xchg
sbb
pusha
cwtl
repnz
push
adc
sub
jo
and
shll
pop
sub
out
mov
outsb
xchg
push
jmp
and
lds
cmpsb
or
xchg
jns
pop
inc
std
inc
mov
push
mov
lcall
lock
loop
add
push
sub
and
push
cmpsb
push
pop
fstpl
roll
jcxz
add
test
outsl
nop
sahf
mov
add
cs
inc
mov
mov
xchg
xchg
ret
lret
lahf
pop
pop
add
pop
or
cmp
push
fucomi
clc
inc
cld
push
fs
clc
pop
rcrb
ja
loope
jo
insb
in
push
and
icebp
cs
andb
decb
add
sub
mov
jmp
stos
repnz
jmp
pop
das
lret
rcl
shll
pusha
add
jmp
shll
fsubp
add
imul
insl
mov
shlb
or
fidivl
jmp
push
or
sbb
pushf
adc
loope
push
out
mov
add
sbb
and
add
push
mov
mov
daa
and
mov
fldl
and
pop
mov
sbb
sbb
lahf
pusha
pop
test
xor
mov
lret
insl
dec
cli
sub
dec
sti
jno
sarb
gs
mov
into
repz
jmp
mov
xchg
adc
nop
push
aaa
dec
or
pop
mov
xorb
mov
xchg
pop
je
std
add
in
ret
jnp
das
sarb
ds
jecxz
cs
xchg
xor
lock
in
das
cmpsl
repnz
or
loope
pop
add
imul
jmp
hlt
mov
dec
xchg
not
rorb
push
adc
data16
rorb
mov
out
pop
xor
imul
cld
add
cmp
jl
dec
sub
stos
enter
loop
mov
inc
and
je
jne
cld
push
push
addb
lock
aas
iret
stos
dec
and
or
pop
mov
das
jle
push
inc
cwtl
dec
push
inc
iret
repz
aad
imul
sub
mov
ret
mov
gs
jmp
daa
pop
test
sbb
inc
adc
daa
pop
aad
mov
pop
pop
xor
fisttps
in
les
mov
push
add
mov
inc
out
shrb
xchg
adc
shr
dec
in
pop
jp
shrb
push
test
pop
add
out
dec
das
cmp
cli
ljmp
in
xor
sub
or
and
adc
dec
or
and
ljmp
jo
loop
inc
inc
popa
push
test
jmp
adc
es
pop
jae
mov
lahf
and
aaa
jmp
mov
lea
sbb
cli
push
jb
cmc
cltd
iret
jmp
sti
pop
repnz
cmc
repz
xor
bound
mov
jmp
add
add
and
loope
sub
sub
mov
inc
adc
cs
or
xchg
loopne
fistpl
add
test
in
or
pop
fstl
imul
adc
mov
enter
enter
out
xchg
nop
sub
sbbb
push
leave
ljmp
jmp
jmp
add
pop
sub
shrl
insb
and
mov
test
jae
inc
push
add
add
inc
push
pop
or
adc
sub
sbb
cmovo
xor
iret
js
pop
inc
orl
mov
push
nop
loopne
lods
add
pop
push
shrl
push
insl
mov
push
inc
push
mov
sbb
inc
add
mov
adc
aaa
ret
loop
es
jp
mov
shlb
ds
das
sarb
fs
cmp
push
jmp
aam
mov
movsl
adc
sbb
subb
xchg
fidivrs
mov
inc
and
jb
push
idiv
clc
addr16
fstps
mov
out
adc
cli
inc
jle
dec
mov
sub
or
mov
decl
std
pop
mov
popf
cld
rorb
add
shlb
add
mov
adc
jg
push
sbb
jmp
cli
fs
lret
sarb
lods
stos
sbb
xchg
dec
push
mov
xlat
pop
xchg
scas
or
mov
js
adc
daa
out
cmp
mov
icebp
and
andb
fcomi
je
mov
addl
or
aad
popa
xor
jne
xchg
test
sub
inc
dec
mov
pop
jg
pop
adc
pop
lods
daa
and
popf
add
scas
push
ja
jl
xchg
add
cwtl
jle
adc
outsb
mov
mov
cltd
and
add
push
out
js
loopne
cmc
jg
adc
xor
loopne
imul
lock
jmp
loopne
mov
and
jecxz
add
jmp
std
push
stos
popf
pop
pop
cmp
jae
movsl
jle
add
jmp
sahf
mov
call
mov
xchg
scas
mov
mov
fmuls
loope
sbb
adcb
and
cld
icebp
add
or
jne
xchg
jo
ret
push
jae
jmp
aad
outsb
xchg
movb
mov
push
or
push
pop
fsubrl
pushf
cmp
push
loopne
pop
fcoml
stos
scas
add
dec
jmp
sub
and
mov
sub
scas
and
adc
std
pop
jmp
rolb
sub
xchg
pop
add
stos
cmpsl
sbb
add
sub
movsb
outsl
es
xor
push
push
push
arpl
dec
jo
xor
cmp
fstl
aas
and
add
int
mov
dec
pop
mov
popa
or
mov
insb
sub
push
sarl
outsl
enter
xchg
and
rorb
mov
pop
out
add
aas
arpl
mov
ds
ficoml
test
adc
cmpsb
popa
mov
cmp
push
fists
enter
das
insl
clc
pop
push
daa
ja
mov
mov
sub
add
xchg
imul
fidivl
movsb
pusha
int3
or
and
int3
in
sti
pop
push
mov
xchg
xchg
and
gs
repz
push
mov
sbbb
push
loopne
pop
xor
sub
pop
out
pop
sbb
and
jle
mov
push
mov
mov
lret
push
and
add
push
sbb
jmp
push
outsb
stos
dec
xor
cwtl
ljmp
mov
add
arpl
mov
xor
jecxz
or
add
or
sub
sbb
or
jae
cmp
divb
pop
rcrb
sti
mov
xchg
add
fsubr
xchg
lds
cld
aad
das
fimuls
mov
or
or
and
dec
mov
and
mov
dec
cld
mov
call
mov
cmpsl
pop
idivl
imul
repz
leave
pop
inc
mov
test
fwait
aas
dec
out
adc
adc
or
sub
jmp
int3
icebp
popa
and
mov
js
add
fstpt
shrl
jmp
mov
cli
or
idivl
fucomip
cmp
mov
std
cmc
bound
pop
cmp
jge
or
ljmp
call
mov
mov
pop
and
sbbl
jbe
add
cmp
cmc
dec
xorl
add
enter
push
push
mov
add
pop
jmp
mov
mov
or
sti
js
adc
popa
ret
jge
mov
mov
shrb
or
jecxz
inc
dec
out
jle
jge
movb
into
push
loope
dec
and
mov
jno
dec
subb
or
out
aad
jmp
dec
push
mov
testl
push
syscall
movsb
ljmp
pop
dec
cld
pop
cwtl
sbb
data16
pop
sub
xor
push
or
xchg
and
mov
sub
clc
mov
or
sub
jmp
sbb
fsts
inc
mov
scas
inc
fcomip
xchg
push
sbb
outsb
dec
push
xchg
dec
pop
daa
push
sbb
dec
dec
mov
out
cmp
ds
sbb
popa
inc
jno
das
inc
or
push
push
push
add
addl
xchg
sarl
ja
inc
xor
jmp
int
inc
das
lcall
cwtl
loopne
fimull
pop
jb
or
mov
shl
cmp
or
pop
pop
nop
sbb
jo
dec
mov
jp
push
jo
mov
iret
adc
xchg
sbb
push
cli
and
mov
push
inc
sbb
insb
insb
add
insb
adc
add
les
shl
repz
add
cmpsb
or
iret
push
xchg
dec
mov
dec
push
pop
xchg
into
clc
scas
mov
and
in
xor
ret
add
adc
aaa
cld
mov
aad
lahf
sub
dec
daa
notl
pop
pop
mov
scas
ja
mov
pop
loopne
add
ljmp
sub
or
mov
movsl
or
mov
enter
jno
jbe
add
stos
jge
idivb
clc
loop
add
fnstenv
movsl
std
call
fwait
das
rcll
sub
icebp
out
or
mov
int3
add
mov
xor
ficompl
loopne
and
push
test
sti
jmp
add
adc
jl
sbb
int
or
add
lret
or
push
or
xchg
lret
push
ljmp
ja
cmp
addb
push
bound
mov
push
push
dec
wbinvd
add
xchg
mov
sbb
xor
std
in
test
bnd
fsubl
jmp
push
outsb
loope
loopne
das
loop
ret
cmp
or
or
or
imul
mov
es
and
and
mov
ret
push
jmp
enter
ret
jmp
cmc
imul
dec
push
shll
jmp
test
leave
pop
cmp
sub
leave
inc
pusha
aam
cmpb
add
stc
inc
or
sub
loop
pop
xlat
cwtl
ss
xor
daa
jo
push
aas
dec
aaa
stos
pop
je
dec
cmp
cs
add
in
int
mov
mov
lret
ja
mov
cmp
or
cmp
cli
loopne
inc
jle
add
dec
jmp
sub
ja
ret
push
call
dec
dec
mov
and
add
inc
xchg
adc
push
mov
jae
scas
shlb
push
adc
or
mov
scas
subb
or
jmp
loopne
das
jo
xchg
negl
stc
rcr
pop
popf
push
jg
roll
and
lret
jmp
xchg
or
push
roll
sub
shrb
push
sub
sub
jmp
cld
fs
or
jno
cmp
cmp
inc
or
push
cmc
add
push
fsts
sub
add
add
pop
pushf
jnp
and
jnp
add
add
jne
mov
push
loop
fsubs
cmp
sahf
pop
pop
push
xor
mov
xor
icebp
stc
fdivrs
repz
sbb
jb
dec
push
test
lock
or
xchg
add
xchg
adc
add
jmp
push
repz
clc
pop
inc
ljmp
push
dec
cmp
pop
fisubl
push
and
pop
pop
push
pop
mov
pop
add
push
mov
cld
jae
nop
pop
ret
mov
divb
rolb
lods
nop
ss
push
out
jmp
lcall
add
xor
push
rorl
mov
mov
adc
add
jle
sbb
imulb
and
rclb
xor
movsb
push
clc
xorps
and
xor
mov
lock
les
add
and
or
aad
movsb
inc
out
jae
negb
sub
add
push
adc
repz
sarb
jmp
cld
dec
xchg
lea
pop
orl
paddusw
xchg
cmp
adc
cltd
sub
and
xor
jge
push
push
inc
mov
test
stos
push
cli
inc
sub
jbe
sub
call
pusha
xchg
loop
sarl
loopne
repnz
in
mov
jb
xchg
aam
xchg
sbb
dec
cli
push
xchg
jp
iret
test
mov
in
mov
sub
pop
mov
sbb
dec
push
push
jmp
insb
inc
dec
pop
xorl
mov
imul
arpl
call
insb
outsl
mov
push
sbb
sub
out
jmp
ficoms
fmull
inc
neg
jbe
cmp
adc
stc
sub
add
pushf
push
ds
pop
sbbb
and
mov
movsb
dec
aad
leave
push
adc
lahf
out
xchg
jbe
jmp
mov
pusha
push
jge
pop
inc
ffreep
sbb
dec
test
mov
js
pop
inc
pop
and
mov
enter
cmc
push
and
add
or
mov
pop
mov
mov
popf
push
dec
mov
add
js
loopne
push
and
add
int
cmp
adc
js
popf
pop
xor
scas
hlt
popa
mov
push
push
addr16
mov
inc
pop
sbb
aad
shl
stos
add
out
mov
jb
in
adc
xor
jmp
mov
gs
inc
mov
xchg
lahf
repnz
sahf
cwtl
adc
test
notb
jecxz
xorl
adc
cwtl
rcrb
outsl
push
mov
push
mov
mov
adc
ljmp
clc
jbe
cmp
jmp
test
enter
es
sbb
push
mov
inc
int
mov
push
sub
adc
pop
mov
mov
xor
stos
xchg
and
fisubrl
sub
cli
mov
rclb
add
mov
mov
pusha
push
push
push
push
mov
imul
push
lcall
mov
dec
mov
pushf
imul
jmp
push
dec
xor
imul
pusha
mov
mov
pop
sub
rcrb
add
add
inc
sub
fldl2t
cs
pop
mov
iret
pop
bound
and
jmp
mov
ss
adc
das
lods
push
or
daa
filds
test
sbb
sarb
push
jmp
loop
add
fmuls
mov
add
cwtl
push
mov
jmp
pop
and
cs
into
ss
bound
shlb
rep
xchg
adc
lret
push
dec
push
inc
outsl
cmpsl
enter
sub
pop
pop
nop
cmp
cmpb
mov
mov
add
jmp
xorl
inc
mov
xchg
push
jmp
test
lock
std
cmp
or
pop
dec
das
jo
in
fisttpll
outsl
or
sub
fwait
cmp
mov
std
cld
pop
dec
dec
pop
aas
or
cmp
push
lret
icebp
push
push
cmpl
fdivs
and
cltd
pop
bound
push
sub
sub
in
xor
hlt
ljmp
je
popa
push
xchg
or
lcall
pop
ljmp
mov
xchg
nop
les
cmp
scas
aas
and
pop
jmp
in
leave
loop
and
into
test
mov
movsl
arpl
fistl
push
xor
mov
pop
mov
sub
sti
or
pop
aad
sbb
lahf
ss
je
mov
ja
in
idiv
je
orb
daa
scas
pop
xor
mov
fildl
insb
stc
ds
dec
add
outsb
neg
pop
dec
cmc
push
stc
mov
and
inc
jbe
jae
add
dec
cmp
xchg
shll
cmp
xor
and
inc
ds
pop
sbb
push
popf
adc
push
push
inc
cmp
shlb
xchg
sub
neg
and
clc
adc
cmpb
cmp
or
cmp
stos
pop
xor
xchg
loop
stc
mov
pop
inc
cs
sbb
mov
mov
sub
jmp
xchg
stos
lret
nop
and
mov
xor
jp
xor
cmp
mov
fadd
icebp
andl
pop
jl
and
xor
cmp
fnsave
adc
call
mov
pop
or
or
mov
movsb
dec
sbb
xor
rcrb
push
adc
insl
cs
popf
push
xor
ds
sbb
push
cmp
jb
pop
decb
or
pop
push
andb
lcall
fcomip
outsl
int3
repnz
shrb
add
xor
cmp
dec
cwtl
hlt
std
lcall
cs
and
cmp
mov
or
adcb
jmp
test
add
and
cmpsl
cs
fcomi
xchg
pop
cmc
lahf
addr16
or
xchg
int3
les
mov
pop
mov
rol
int
cmp
sub
in
add
mov
push
aad
es
ss
mov
push
push
mov
mov
jg
xorb
iret
lock
jmp
adc
cmc
mov
scas
add
stos
enter
mov
mov
test
add
aaa
mov
push
mov
enter
not
mov
push
dec
clc
mov
fildl
push
pushf
dec
fwait
lds
iret
test
mov
lods
mov
or
pop
jnp
pop
sbb
xlat
fs
les
aam
inc
or
inc
shl
std
gs
mov
push
pop
or
sub
pop
lods
testl
shlb
fstps
imul
xorb
adc
loopne
sbb
sub
xor
bound
es
adc
pop
add
test
or
ljmp
or
in
and
jmp
mov
cmc
inc
mov
xchg
loop
cmc
xchg
bound
sub
jmp
xchg
xchg
std
xchg
insb
shlb
dec
inc
lcall
dec
aaa
jb
orb
xchg
clc
xlat
xchg
icebp
out
stos
sbb
mov
jne
fwait
mov
hlt
popf
testb
bound
lock
and
xchg
jne
push
add
and
outsb
in
dec
mov
adc
add
push
call
daa
roll
jae
jmp
pop
ja
jmp
rcrb
repnz
popf
push
dec
push
xlat
cmp
inc
movsb
mov
icebp
push
add
jmp
mov
loope
mov
out
hlt
jmp
out
or
ss
xor
les
mov
iret
nop
dec
shl
dec
sbb
push
xchg
insb
xor
or
aad
in
and
std
popf
lret
mov
ret
xlat
cwtl
imul
sbb
cld
and
cwtl
fldl2e
push
inc
insl
cmp
mov
outsb
iret
cmp
movsl
les
scas
jb
sar
movsl
popf
stos
jb
inc
icebp
popa
push
es
push
lret
sbb
xchg
xor
pop
pop
movsb
jmp
faddl
js
in
int3
pusha
sar
push
aas
mov
xor
dec
or
cmp
insl
cmp
inc
stc
adc
fldcw
andb
pop
lahf
lcall
cmpb
dec
cmp
xor
xchg
clc
jmp
les
jmp
sub
push
and
mov
fistl
lahf
push
fildl
push
mov
testl
add
mov
ror
cmp
and
sbb
inc
xchg
cmp
imul
dec
mov
push
jns
sub
add
mov
movsl
or
out
cmc
pusha
jno
shr
orl
adc
das
pop
pop
xlat
add
out
clc
cmpsb
mov
pop
loope
jle
push
xchg
xlat
nop
pop
lahf
inc
xchg
add
fiadds
mov
cmp
popf
adcb
push
inc
jl
gs
pop
sbb
mov
lods
pop
mov
incl
jge
push
scas
add
lods
xor
dec
sar
sbbb
sub
jmp
xor
insl
jb
jmp
testl
dec
ja
fisttpl
int3
jecxz
mov
mov
xor
push
mov
mov
shrb
outsl
inc
add
jmp
pop
adc
cli
jecxz
xor
or
inc
jge
jmp
hlt
sbb
adc
dec
dec
test
icebp
shlb
les
test
push
jmp
mov
xor
shl
pop
cmp
pop
push
enter
push
xor
push
std
dec
testl
jg
ljmp
mov
xor
xor
test
or
dec
jmp
adc
notl
mov
out
sub
bound
adc
add
and
xchg
fmull
adc
pop
daa
jo
inc
insb
add
iret
in
and
or
adc
or
clc
mov
jecxz
int3
arpl
scas
subb
ja
push
push
addps
fmuls
cmpsl
int3
aas
add
dec
js
dec
ret
xor
fcomps
add
xchg
mov
data16
loopne
and
add
jmp
shl
fidivl
pop
not
xchg
add
pop
arpl
dec
mov
push
sbb
lds
imul
and
rcrb
xor
adc
or
add
jmp
cmpsb
lock
or
add
aam
and
daa
mov
inc
pop
pop
sub
or
pop
data16
fwait
aad
mov
push
mov
push
inc
aas
adc
or
test
xor
pop
stc
mov
nop
cltd
xor
cmc
leave
jge
das
ds
mov
ljmp
das
add
jp
xor
dec
mov
out
xchg
pop
inc
aam
pop
lret
mov
inc
not
into
push
jmp
mov
sbb
out
inc
and
xor
jmp
das
sbb
jmp
std
add
cmc
cmp
xchg
jns,pt
gs
in
in
xchg
das
fisubl
push
xchg
mov
test
dec
bound
push
add
ja
out
mov
and
xor
or
jb
push
push
mov
add
lret
sbb
cmp
jmp
test
or
jl
popa
add
push
mov
imul
and
outsl
stos
adcb
or
mov
add
bound
stc
jns
nop
scas
das
pop
int3
xor
imul
push
mov
xchg
mov
aam
mov
movsb
xor
ljmp
cmp
loope
iret
push
sub
push
hlt
jmp
cmc
xchg
inc
aad
icebp
sub
andl
add
sub
add
pop
xchg
dec
jmp
cltd
dec
aad
dec
js
push
cwtl
xchg
dec
adc
in
jle
xchg
sub
dec
push
mov
pop
inc
add
mov
pop
movsb
sub
inc
jp
and
out
mov
sub
mov
aad
and
mov
adc
sub
and
xchg
mov
imul
sti
push
cwtl
cmpsb
sub
shlb
jecxz
adc
xchg
or
dec
sub
fstps
push
fistpll
push
sbb
outsl
and
test
add
jne
cmp
arpl
and
clc
pop
jmp
ds
fdivl
sbb
mov
inc
or
scas
neg
mov
imul
sub
jl
cwtl
mov
dec
mov
push
dec
or
pop
add
out
sub
xor
sub
ja
cmp
fstpl
mov
adc
add
adc
inc
int
jmp
lcall
rorb
pop
int
mov
and
nop
and
insb
jbe
cmpps
push
push
adc
adc
mov
lods
pop
add
adc
jo
cmp
mov
lcall
nop
xchg
aad
mov
sbb
fstpl
adc
jmp
cmp
jle
mov
mov
repz
push
or
adc
sti
add
mov
jmp
rclb
and
outsl
cli
mov
jmp
lods
push
movl
mov
adc
jecxz
lds
pop
add
jo
in
adc
mov
xor
push
pop
push
jmp
mov
and
pop
jae
dec
mov
addr16
mov
pop
dec
scas
fsub
pop
add
into
and
fucomip
ja
ret
aad
mov
popf
lds
fcoml
and
jo
push
xor
dec
popa
and
data16
icebp
inc
add
ss
jo
push
push
gs
inc
aas
jecxz
or
in
or
dec
adc
jns
das
out
push
jl
popa
lds
sbb
xchg
icebp
sub
sbb
sub
jb
lock
jmp
jle
testb
pop
cmp
mov
xlat
stos
sub
jns
xchg
scas
fldcw
mov
sub
sub
sub
add
test
and
sahf
and
sbbb
idiv
addb
push
inc
shr
xorb
out
js
in
lds
call
adc
outsb
lock
inc
shrl
xchg
mov
ret
outsb
push
pop
bnd
loopne
sbb
pop
cmp
xchg
jg
pop
mov
sub
push
mov
add
sub
push
jbe
pop
jmp
ljmp
xor
ret
adc
ljmp
pop
dec
push
sub
lret
adc
in
or
xchg
nop
lahf
sbb
inc
les
shr
les
lods
cmp
lods
push
sub
movsb
icebp
test
popa
xchg
subb
dec
xor
mov
jbe
jns
scas
or
dec
imul
and
push
jno
add
push
hlt
cmpl
adc
imul
dec
lods
or
adc
add
jle
and
test
rcrl
pop
mov
aaa
or
sbb
cld
inc
sahf
push
sahf
jmp
dec
rolb
cmp
stos
jbe
daa
pop
nop
push
pop
push
pusha
cmp
outsb
pop
xor
je
add
jno
jecxz
mull
je
inc
inc
mov
jl
ds
cmp
cmp
mov
sbb
pop
rcrb
and
leave
shll
inc
fwait
sub
xor
mov
fistpl
ljmp
test
jle
cmp
jnp
adc
push
scas
or
and
mov
cmp
and
aaa
adc
xor
shll
lret
lahf
je
lods
push
popl
in
and
adc
lea
adc
repz
sub
or
mov
jp
mov
dec
sarb
mov
push
jns
inc
mov
adc
iret
jmp
fldt
mov
repnz
jbe
push
aam
inc
addr16
je
push
stc
ds
cmp
lret
repnz
or
or
jmp
lahf
fimull
and
mov
adc
or
cmc
adc
es
xor
jmp
loop
inc
fsubp
dec
adc
popa
ljmp
cmc
ljmp
incb
std
xor
add
mov
dec
shlb
sbb
aad
xor
insl
lcall
pop
sub
jmp
add
inc
jne
and
scas
mov
in
jb
sti
pop
out
je
mov
sub
mov
xor
pop
mov
loope
and
aas
sbb
lcall
push
test
cs
icebp
add
jl
test
cmp
mov
xchg
stc
xchg
push
sub
cmp
cmpsl
and
and
pop
inc
push
aaa
lds
das
ss
mov
imul
push
ret
mov
xor
cmp
mov
cmp
jle
push
jmp
movsb
push
daa
das
gs
sub
dec
xlat
repz
int3
std
int
jo
sbb
pop
mov
popa
cld
pop
int
sub
mov
push
mov
push
je
sub
add
jp
or
gs
repz
shrl
jl
mov
sbb
or
push
mov
sbb
pinsrw
add
shr
or
push
add
pushf
add
xchg
inc
sti
fistpl
pop
or
jmp
mov
or
imul
inc
push
push
add
jmp
repz
mov
cld
iret
xor
sub
lcall
dec
out
adc
add
inc
popa
ss
push
mov
jae
lea
ret
aas
lretw
sbb
or
add
cmp
dec
lock
imul
and
push
cmpsb
xchg
pusha
lods
inc
cmp
pop
aas
push
jecxz
inc
cli
mov
or
mov
rorl
scas
add
loop
add
data16
add
ret
mov
push
das
cli
jmp
jo
jp
dec
add
inc
scas
add
xchg
mov
and
sub
test
call
jmp
outsl
repnz
push
fldenv
jae
mov
mov
int3
repnz
mov
lahf
ret
adc
or
test
xchg
inc
test
icebp
add
lahf
or
repz
inc
std
jmp
add
mov
add
cld
push
cld
push
and
imul
fs
shrl
jmp
push
repnz
and
ljmp
stc
mov
sbbb
xchg
outsb
nop
sub
pusha
push
sbb
pop
mov
push
sbb
add
sub
mov
pop
push
or
push
or
xor
push
cmp
fst
cltd
cwtl
inc
dec
repnz
mov
inc
pop
push
jnp
inc
sub
jle
jg
sbb
pop
pop
mov
sub
in
add
inc
lods
mov
clc
bound
xchg
jns
call
das
loop
cmc
push
data16
add
adc
aas
shrb
subb
push
pop
xor
push
pusha
push
adc
mov
pop
repnz
xchg
push
push
loope
pop
add
int3
adc
out
popf
fbstp
mov
or
dec
cmp
jb
mov
jmp
push
insl
jno
inc
jge
dec
nop
cmpsb
aaa
rolb
or
mov
sbb
outsb
loope
rorl
jp
jae
movsl
fbld
jns
mov
add
loope
rclb
mov
es
jne
repnz
add
jg
adc
or
xchg
xchg
ds
gs
cmp
enter
rcrb
lods
cmp
cmpsl
shll
xor
sbb
in
pop
cs
inc
or
jmp
mov
repz
sub
inc
jno
sbb
arpl
insb
sub
ja
ds
and
in
ret
clc
clc
divb
out
push
shll
pop
ret
xor
mov
push
or
pop
rcrb
enter
and
xor
andb
add
sub
push
lret
xor
arpl
call
xchg
jmp
test
movl
mov
add
pop
mov
xor
pop
addl
mov
fsubrs
and
rorl
lret
fimull
mov
scas
ret
cmp
ffreep
daa
mov
lock
adc
mov
xlat
cmpsb
cmp
int3
jg,pn
ret
sub
pusha
sub
cltd
popa
sti
add
add
movsl
aad
scas
mov
cmp
sbb
xor
mov
aaa
loop
loope
sub
push
in
inc
jp
jmp
or
cltd
inc
xchg
and
movsl
adc
pusha
inc
xor
adc
jns
add
outsb
inc
add
jae
divb
mov
cmp
fists
lock
ja
mov
inc
iret
pop
outsb
and
and
push
repnz
daa
sbb
cmp
fs
cmpb
cmp
jge
repz
gs
mov
jo
es
or
jg
jp
and
das
pop
sbbb
gs
pop
iret
popa
dec
push
and
push
cltd
push
in
jecxz
aam
movl
pop
repnz
mov
mov
pop
jge
sub
in
jbe
push
std
push
mov
sub
mulb
bound
mov
adc
mov
jno
or
xchg
jae
or
frstor
pop
add
push
mov
push
or
push
sub
lods
xlat
icebp
pop
imul
sbb
adc
cmpsl
sbb
adc
push
scas
mov
push
adc
fldz
aaa
data16
loope
add
pop
stos
xchg
inc
rcrl
sub
int
jnp
aas
fs
insb
pop
jnp
nop
test
jle
bound
xor
cmp
mov
sbb
and
fisubrs
in
mov
cld
mov
or
out
arpl
push
dec
dec
pop
je
and
or
js
push
or
mov
jge
shll
xor
je
push
push
mov
aaa
sahf
test
cmp
das
xor
pop
jl
test
es
icebp
imul
pop
or
in
xchg
mov
shll
ljmp
test
mov
xchg
outsb
cwtl
sub
dec
jmp
pop
pop
aad
push
adc
push
and
loope
push
cld
psrlq
mov
out
mov
sub
iret
jg
push
fxch
mov
popa
stos
mov
pop
out
cmp
js
pop
mov
int
add
pop
mov
xchg
out
into
cld
add
pop
sbb
push
inc
xlat
inc
pop
pop
lods
mov
andb
inc
inc
dec
dec
mov
push
adc
or
jmp
xchg
icebp
leave
in
movsb
fnstsw
test
and
xor
add
mov
sub
add
pop
or
sbb
fistpl
cmp
pusha
xchg
sub
cmp
mov
xor
sbb
push
pop
ja
pop
sub
push
push
ss
hlt
int
sub
mov
sahf
inc
cmp
loop
ret
pop
or
push
mov
dec
sbb
cmp
es
jg
in
in
cmp
push
movsl
enter
add
or
ficomps
cwtl
add
in
out
push
adc
outsb
jns
xchg
lods
leave
in
pop
jbe
clc
loopne
jnp
int3
fmuls
jne
clc
xchg
xorl
inc
mov
push
sub
lock
add
push
mov
shr
jmp
xchg
cwtl
rol
dec
cmc
push
jmp
decb
jnp
jbe
and
lcall
mov
cmp
cmp
scas
add
push
daa
hlt
pushf
inc
call
pop
cmc
and
pop
cmp
inc
stos
pmuludq
inc
add
add
dec
pop
shr
mov
or
enter
adc
imul
sarl
nop
dec
cld
dec
sti
leave
and
dec
sti
add
jecxz
inc
in
cmp
ret
test
inc
dec
jmp
inc
lock
push
cwtl
mov
cmp
cltd
data16
push
dec
or
ljmp
divb
ret
and
push
jne
or
dec
testl
je
cmp
adc
in
mov
or
loop
sbb
mov
and
sub
or
popa
faddl
mov
adc
mov
orb
push
loope
cmp
dec
mov
outsb
cmp
and
lahf
push
jns
stos
int
bnd
pop
cli
in
sub
das
sub
add
dec
add
cmp
icebp
hlt
orl
repnz
inc
addl
movsl
fs
xor
mov
jo
loopne
call
sub
je
sbb
sahf
loopne
insl
push
add
xor
pop
xchg
sbb
adc
xor
fidivrl
pop
cs
cld
sub
pop
mov
sub
out
lods
pop
jg
ret
jmp
popa
xchg
addr16
ret
cs
loopne
movsl
stos
inc
mov
pusha
daa
dec
ret
or
pop
das
mov
jmp
or
test
popa
test
push
les
mov
fiaddl
sub
mov
pushf
pop
or
pop
push
outsb
mov
sbb
daa
push
movsb
aas
xor
leave
pop
shl
add
ljmp
sub
push
insb
scas
xor
pop
sahf
outsl
adcb
inc
pop
pop
xchg
fsubl
mov
ljmp
xor
jmp
fwait
or
daa
pop
push
push
decb
push
jle
cmp
popa
push
jmp
movl
sbb
enter
add
push
and
xchg
daa
cmp
pop
inc
add
out
pop
cmpb
or
jmp
pop
popf
icebp
movsl
call
and
scas
cmpsb
insb
xchg
or
std
xorb
das
sub
push
movsl
es
add
shll
iret
jb
in
or
in
repz
mov
jp
jbe
fnsave
sbb
add
push
push
push
cwtl
adc
push
icebp
jecxz
adc
ja
mov
xor
mov
xor
pop
mov
sarl
scas
or
sbb
and
popf
rorb
aas
shll
push
jmp
add
test
push
dec
xor
stos
or
lds
fs
push
loop
orb
mov
pop
and
cmp
mov
xlat
decb
mov
inc
or
pop
loopne
daa
insl
shlb
mov
call
call
lock
xchg
sarb
outsb
xor
pop
icebp
mov
ds
adc
jne
loop
ds
orb
add
jnp
pop
call
add
jns
push
iret
ljmp
mov
dec
push
shl
arpl
sub
jb
inc
loope
test
cmpsl
push
sarl
out
dec
pushf
out
add
push
lret
push
add
pop
pop
jmp
leave
int
loopne
push
lods
fdivl
subl
lret
adc
cmp
cmp
into
push
push
call
push
shr
loopne
sbb
daa
inc
std
testb
push
add
push
sub
mov
jmp
leave
shrb
outsb
jle
loope
lock
ret
idiv
jne
loop
movsl
push
clc
imul
adc
daa
neg
mov
mov
cli
cmp
dec
push
xlat
and
aaa
pop
push
cmpsb
dec
rclb
xchg
aad
pop
das
lods
adcb
push
add
sbb
pop
dec
mov
or
inc
pop
adc
aad
mov
add
jl
push
stc
out
sub
nop
sub
cwtl
adc
ret
pop
inc
mov
cmp
or
jl
enter
mov
lds
stos
lret
add
lods
cmp
push
xchg
dec
or
dec
scas
andl
ret
cs
pop
fadd
inc
in
jecxz
push
jbe
push
das
cmp
pop
pop
or
lock
sub
mov
mov
pop
out
loope
pop
outsl
popa
mov
lea
and
dec
add
xor
inc
and
clc
mov
imul
jb
add
inc
dec
inc
pop
out
mov
insl
jb
cmc
fadds
push
daa
stc
scas
pop
push
xor
jecxz
inc
mov
call
in
xchg
rclb
lods
add
stos
jo
mov
add
push
in
jmp
jmp
roll
pop
inc
out
cmp
pop
xor
iret
call
mov
sarl
jmp
daa
ret
sub
pop
lock
cmpsb
leave
and
pop
insl
sub
adc
adc
dec
push
lea
lods
jo
mov
xor
in
mov
xchg
jmp
repz
in
add
fadd
mov
shll
pop
dec
adc
add
pop
shlb
sub
pusha
jmp
mov
rorb
ds
and
mov
lods
sbb
mov
repnz
xor
dec
xor
pop
popa
mov
das
cs
into
inc
push
push
jmp
add
xor
sub
xor
or
and
mov
xor
mov
or
and
pop
xor
add
cmp
enter
inc
repnz
inc
push
add
push
mov
add
mov
leave
mov
sarl
inc
daa
push
shrl
inc
add
and
mov
push
push
push
xor
gs
scas
adc
push
push
arpl
sarb
rcll
daa
push
xor
aad
call
jae
out
ljmp
call
test
pop
sti
lret
stos
mov
mov
add
add
add
cwtl
rcll
push
arpl
lods
sbb
xchg
lret
or
not
jbe
dec
lcall
movsb
add
into
dec
cs
in
add
adc
js
adc
lds
sbbb
push
push
pop
inc
add
dec
fld
test
and
xchg
and
test
push
push
popl
mulb
imull
push
out
lods
or
sbb
or
xchg
adc
and
ret
mov
and
xchg
push
dec
sbb
mov
stos
jg
inc
ffreep
cli
mov
adc
icebp
mov
xor
push
xorl
or
mov
cmp
jmp
pop
and
jmp
call
jg
fstpt
or
mov
inc
jnp
bound
fwait
ret
push
stc
pop
push
pop
adc
test
add
dec
scas
pop
mov
add
popa
push
cmp
fistpll
fwait
mov
add
or
scas
popf
mov
stos
aas
push
mov
ret
push
pusha
enter
add
out
add
hlt
jl
out
mov
adcb
mov
lds
lock
pop
jge
pop
push
xor
dec
subb
xor
neg
sbb
addl
add
sub
les
ja
sub
cwtl
add
arpl
ds
pop
or
push
jmp
jmp
and
outsl
jp
stc
mov
mov
jo
xor
bound
or
stos
mov
sbb
mov
sub
and
mov
or
lock
gs
popa
mov
adc
jp
into
jno
push
jmp
loop
sbb
inc
xchg
mov
es
movsl
pop
loope
jnp
cmc
iret
dec
stc
mov
dec
in
call
cmp
sbb
imul
adc
jns
mov
jle
xor
in
ret
push
and
cld
lahf
mov
inc
pop
cmp
push
sbb
fnstcw
xlat
jnp
add
xor
mov
and
push
enter
xchg
mov
subb
dec
xchg
popa
sub
pop
or
pop
ljmp
pop
or
jmp
pushl
out
mov
xchg
and
or
jle
outsl
mov
enter
pop
mov
or
inc
mov
push
mov
pop
mov
mov
movsb
outsb
pop
incl
and
hlt
xchg
pop
loop
dec
shlb
sub
sbb
dec
push
mov
mov
mov
cwtl
in
pop
mov
xor
mov
and
xchg
emms
cs
or
imul
fwait
or
push
aad
shlb
add
or
sub
out
push
cmp
jmp
lds
out
int3
sbb
sti
mov
ret
in
int3
or
popa
adc
mov
or
push
stc
push
enter
ret
leave
push
mov
jmp
out
es
sub
aad
lock
pop
dec
push
mov
and
cmp
cmp
ja
in
popf
push
les
inc
xor
xlat
rcr
jne
sub
repz
cmp
jo
fidivs
out
movsb
push
ljmp
test
sub
mov
pop
lock
sbb
pop
inc
sbb
pop
mov
lods
cmp
mov
lret
notl
out
lret
mov
mov
ds
in
xor
jmp
mov
pop
call
add
or
dec
pop
pop
popf
lds
adc
gs
movsl
sub
cmpsb
add
outsl
scas
xchg
into
shlb
out
mov
mov
add
or
jl
dec
enter
ds
push
and
adc
xor
mov
and
es
repnz
rorl
lcall
jp
or
adc
add
mov
sbb
sbb
clc
jp
xor
mov
mov
inc
inc
or
mov
subb
stc
into
es
rolb
or
jmp
jae
das
pop
pushf
popa
jmp
jns
lds
les
data16
xchg
cmp
popa
movsb
adc
nop
ja
inc
xor
jo
xor
repz
jne
fildll
jg
inc
push
push
dec
lea
loop
shrl
enter
pop
add
daa
add
sub
loopne
pushf
add
cmp
fidivrl
lret
popa
dec
sub
push
sbb
je
incb
push
push
fidivrl
and
dec
and
xor
sub
adc
jmp
push
ss
sub
sub
jmp
hlt
fildll
sbb
fcomps
mov
mov
fstpt
das
jbe
rcrb
add
stos
and
mov
ja
inc
inc
out
fiaddl
leave
ret
inc
push
leave
lahf
ljmp
shll
pop
or
pop
push
mov
and
out
dec
insl
orl
add
outsb
lods
cltd
add
push
hlt
sub
pop
jp
inc
call
and
mov
pop
mov
ss
test
or
or
dec
push
and
popf
imul
pop
pop
pop
jns
leave
inc
sub
orl
or
xchg
adc
push
mov
js
mov
pop
fstps
jns
movsb
push
fstpl
xchg
mov
jno
es
xor
cmc
jmp
push
dec
mov
or
push
mov
dec
sarb
push
imul
or
push
dec
or
xchg
and
add
dec
jae
loop
aad
fisubrl
popf
sbb
pop
inc
or
in
adc
mov
xchg
and
popf
aad
test
xchg
sub
pusha
std
adc
jnp
adc
mov
ljmp
sbb
scas
add
xor
push
and
dec
popf
dec
jle
popl
add
and
jns
fstp
adc
lods
sub
add
xchg
mov
shrl
push
jg
or
stos
insb
notb
mov
inc
and
gs
fadds
or
jmp
ret
test
lahf
icebp
mov
pop
jb
push
mov
lahf
testb
jno
or
cmp
ret
mov
adc
rolb
in
mov
mov
popf
fisubl
fwait
jg
sub
inc
daa
push
dec
scas
sbb
dec
xor
ja
iret
out
jo
testb
dec
adc
or
dec
jno
shr
jp
inc
dec
push
adc
negl
loope
mov
divb
aas
mov
mov
clc
and
push
movsbl
push
sub
nop
push
imul
xor
pop
out
scas
rcll
xor
add
adcb
inc
jl
das
movl
inc
add
jmp
xchg
dec
mov
jae
nop
shr
sbb
pop
addr16
mov
ds
stos
popf
nop
sbb
mov
xor
inc
dec
and
lods
mov
pop
cs
xor
push
das
fdivrl
fiadds
cmc
mov
aam
scas
adc
push
sub
adcb
jo
fnstcw
movsl
jl
stos
out
jmp
scas
mov
xlat
int
in
mov
shrb
jmp
push
xor
sub
and
and
cmpsl
and
lahf
lds
and
sub
xor
dec
push
cli
enter
cwtl
mov
ja
cmpsl
jae
jno
outsb
cmp
xchg
dec
out
adc
xor
into
mov
dec
nop
mov
mov
add
daa
and
lahf
les
mov
mov
xchg
js
loopne
jmp
imul
loope
ficomps
insl
inc
cs
out
mov
in
nop
mov
jge
mov
cmp
repnz
arpl
jne
ret
andl
shrb
or
dec
mov
add
add
and
xlat
xor
je
adc
lret
cmp
cmc
and
addr16
adc
sbb
and
fiadds
pop
mov
test
outsb
adc
jno
out
mov
mov
or
scas
mov
lock
push
outsb
pop
sub
jnp
fsts
inc
pop
push
push
adc
or
sub
popf
test
jg
cmp
test
xor
or
in
sbb
fimuls
pop
icebp
push
data16
arpl
and
outsl
shll
out
loopne
adc
in
xor
push
movsb
push
xchg
movsb
sub
pop
sub
mov
not
push
pushf
xor
aaa
and
in
sub
pop
mov
fstp
mov
lcall
mov
mov
or
rorl
jle
outsb
xlat
and
in
jns
pop
in
int3
shrb
cmpsl
and
les
cmp
mov
pop
push
mov
pushf
addr16
lret
fmuls
sbb
adc
mov
adc
adc
push
mov
aam
sub
xchg
repnz
adc
dec
mov
ja
inc
or
xchg
mov
in
test
pop
mov
cmpsl
jg
pop
les
inc
mov
ret
les
and
mov
leave
rcrl
ljmp
dec
inc
mov
ret
jmp
filds
or
insb
adc
lock
add
loope
mov
daa
call
pusha
bound
xchg
insb
mov
push
imul
movsb
subb
lock
jmp
push
in
ja
or
mov
sub
add
dec
rolb
push
push
in
or
pop
test
in
das
dec
adc
fildll
jns
lret
adc
push
out
lret
xor
and
ljmp
xchg
ds
test
pop
mov
xor
push
repnz
icebp
jmp
add
mov
cmp
notb
repnz
mov
push
push
push
jmp
add
daa
adc
sbb
add
jmp
fldt
lock
push
or
pusha
testl
jmp
mov
pop
push
push
mov
loopne
push
jmp
movsb
shll
ds
mov
push
loope
rcrl
xchg
leave
mov
jmp
add
pop
shl
mov
dec
pop
adc
pushf
push
adc
daa
push
mov
mov
inc
test
jmp
fsubrl
add
push
jmp
sarb
sub
sbbl
rol
xchg
hlt
js
lea
jno
xor
push
mov
dec
mov
xor
dec
adc
or
test
push
fnstcw
push
dec
push
pop
xlat
inc
or
lahf
pop
mov
shrb
fwait
push
and
loopne
inc
lods
in
lods
sbb
jo
shr
push
jns
pop
repnz
rcrb
push
or
data16
inc
lcall
and
in
push
cwtl
xor
push
and
push
test
jae
pop
cmp
rcrl
ret
xchg
push
insl
mov
ficompl
and
jmp
aas
push
fsubr
fisubs
lcall
mov
daa
pop
and
jmp
scas
pop
roll
repnz
add
lock
or
sub
add
imul
xchg
or
xor
jae
push
dec
pop
nop
push
int
mov
cld
jno
xchg
mov
push
mov
sahf
mul
addb
adc
out
popa
xchg
out
or
ret
sub
ja
shll
cmc
in
dec
js
xor
cli
insl
cmpb
lret
jbe
add
jl
sahf
imul
pop
sbb
adc
or
mov
push
pop
cmp
scas
rorb
negb
rcrb
dec
call
pop
cmpsb
pusha
imul
mov
call
lds
shlb
push
mov
repz
es
popf
insb
inc
es
dec
adc
movl
je
mov
sahf
scas
insb
stos
xor
sub
adc
clc
add
jecxz
sbbl
mov
shll
cld
testl
flds
push
ret
pop
pop
push
imul
hlt
xchg
add
cmp
and
pop
push
add
adc
jmp
mov
jmp
pop
ret
mov
adc
push
push
scas
dec
loop
les
xchg
jae
stc
xor
add
mov
or
pop
jle
sub
jmp
ficomps
icebp
popl
hlt
mov
mov
mov
xor
xor
mov
mov
in
lahf
push
mov
ds
leave
push
push
jno
imul
mov
jmp
jge
inc
call
lods
inc
add
and
sub
in
inc
inc
pop
jb
add
out
mov
lcall
in
adc
mov
inc
push
aam
xchg
sub
push
inc
leave
or
movl
psubsw
mov
das
ljmp
scas
mov
dec
ljmp
mov
push
mov
and
test
mov
push
pop
or
test
mov
and
pop
pop
mov
sub
jmp
and
dec
daa
dec
insb
ret
mov
dec
mov
sub
xor
jmp
dec
fadds
leave
sbb
lods
cmp
inc
xchg
mov
cmp
add
stc
dec
mov
xchg
add
inc
add
mov
sub
cmp
loopne
or
inc
mov
xchg
aas
pop
in
icebp
aaa
ja
jmp
sbb
loopne
push
cli
fsubr
adc
push
mov
and
mov
cmc
pushf
sbb
mov
clc
jg
repnz
loopne
pop
sub
shr
jmp
call
inc
mov
mov
mov
mov
and
nop
and
mov
shlb
push
cwtl
pop
push
clc
cld
xchg
or
scas
push
mov
adc
sub
fstpt
sbb
mov
rcll
fs
pop
cltd
mov
aad
jno
mov
or
push
das
or
cli
inc
test
jp
and
les
mov
inc
add
out
outsb
mov
loopne
stos
sub
add
jmp
lahf
ficoms
mov
sub
sub
inc
sbb
push
loope
scas
fsubrs
pop
cld
and
cli
jno
add
xor
pop
mov
sti
xor
fcoml
out
icebp
std
js
dec
call
jl
jbe
pop
mov
pop
fmuls
fpatan
jo
bound
shr
add
and
adc
outsb
xor
mov
scas
push
cmp
mov
pop
ret
lret
push
pop
inc
or
icebp
xchg
lods
add
in
imul
and
push
dec
mov
adc
push
adc
repnz
rolb
cmc
js
mov
adc
stos
loop
shlb
push
pop
mov
test
push
and
mov
mov
test
jae
ret
add
sub
jmp
xchg
and
jmp
lods
icebp
arpl
ret
dec
adc
adc
or
adc
enter
mov
cmp
add
mov
sti
loopne
cmp
xorb
or
or
lret
add
add
jle
xchg
inc
mov
pop
loope
inc
andl
or
sub
jg
push
inc
pop
int3
test
out
adc
inc
int3
daa
cwtl
adc
mov
inc
pop
stos
aaa
rorl
pop
xor
hlt
jl
or
dec
jne
inc
jmp
jo
imul
mov
jmp
inc
inc
pop
cmp
cli
sub
or
jl
and
adc
mov
mov
push
nop
stos
inc
and
push
sbb
xchg
sub
or
xor
out
in
jmp
push
insb
push
dec
cmp
test
add
mov
push
popf
or
jmp
cmp
cltd
adc
pushf
in
push
cmp
ljmp
push
scas
push
mov
and
xchg
test
pop
push
pop
add
aas
mov
mov
std
dec
or
inc
movsl
jl
mov
xor
or
fyl2x
pushf
sub
loope
bound
test
ret
es
lds
sbb
pop
addr16
movsb
stos
xchg
ja
sub
or
xor
xchg
or
dec
int
xchg
stc
scas
dec
ja
jo
addr16
or
dec
add
aam
pop
pop
movsb
jo
icebp
jno
mov
adc
sarl
sub
stos
adcb
insb
lea
sub
cli
jb
push
into
shlb
cltd
push
mov
mov
adc
jge
pop
fidivs
mov
add
mov
jmp
hlt
rorb
neg
dec
push
or
xor
pop
cwtl
ss
mov
sub
mov
into
addl
or
cmp
jnp
pusha
inc
push
adc
push
insl
or
in
pop
push
add
dec
aas
cmp
dec
je
andb
dec
and
enter
fsubr
fucomp
sub
sbb
pop
test
pop
out
bound
clc
xchg
adc
cmp
jp
movsl
push
jecxz
and
pop
les
imul
jmp
inc
inc
pop
add
in
in
shr
jmp
xor
push
xchg
aaa
test
xchg
stos
jge
das
popf
mov
aad
xlat
adc
out
adc
fidivrl
mov
fabs
add
int
xchg
pinsrw
clc
sti
ret
jge
inc
fsubs
loopne
xor
or
cmp
xchg
pushf
lahf
fs
fsubp
rorl
jg
lret
movsl
push
out
push
daa
push
sbb
leave
jns
push
push
test
jle
adc
aas
dec
xor
jl
cmpsb
bound
into
push
cmp
mov
mov
orl
jp
shr
ret
loopne
jmp
push
push
cmp
cmp
jae
out
push
xorw
cmpsb
sub
jmp
mov
jbe
push
fcmovnb
lock
push
adc
sbbb
shrb
pop
jae
cmpsb
add
or
mov
mov
jp
cmp
pop
push
test
les
jns
iret
popa
mov
aam
icebp
clc
and
lods
testl
xchg
pop
mov
add
sub
xchg
xor
rorl
jmp
subb
arpl
jmp
mov
and
xor
shr
push
cmp
fidivl
faddl
int3
lret
lcall
sub
js
jmp
decb
cmpb
pop
pop
cmpsb
push
loop
pushf
add
jns
das
in
imul
cmp
pop
popa
sti
mov
and
or
inc
mov
scas
inc
cmp
sbb
adc
shrb
rorl
jmp
stc
add
add
mov
and
test
loop
push
push
loopne
mov
shlb
add
sub
loope
mov
push
xchg
inc
pcmpgtd
andb
inc
fs
jmp
mov
inc
add
pop
pop
jmp
mov
rorb
add
sub
or
dec
pop
mov
out
xor
xor
jno
xlat
imull
jge
dec
xchg
roll
xchg
pushf
jbe
ja
jl
shll
cltd
jb
pop
dec
test
or
ss
sub
or
sarb
push
je
in
sbb
sub
push
add
add
stc
mov
jmp
inc
fisubrl
enter
dec
fdivr
mov
aam
mov
hlt
push
mov
je
inc
sbb
mov
sbb
das
notb
sbbl
lret
xchg
push
jns
vmptrld
and
sbb
pop
movsl
push
add
shl
and
dec
pop
mov
subb
inc
mov
cmpb
jecxz
pop
out
push
in
adc
in
inc
mov
ficoms
in
mov
mov
add
ja
divl
push
mov
sbb
xchg
pop
push
mov
or
add
sbb
sbb
scas
stc
mov
push
dec
sub
dec
lock
mov
or
dec
loope
ja
es
cmp
loop
sti
lock
pop
fwait
push
dec
mov
pop
mov
jle
lcall
cmp
mov
aaa
sysret
subl
mov
insl
scas
jp
push
fistps
sub
xor
pop
out
sub
out
add
xor
mov
adc
sub
icebp
lods
sbb
leave
add
pop
clc
scas
insl
mov
mov
bound
mov
nop
push
and
push
aas
mov
imul
pop
jmp
jbe
inc
xchg
xor
mov
push
mov
adc
in
adc
inc
push
clc
adc
aam
mov
fst
push
les
adc
roll
mov
test
enter
xor
mov
daa
aam
add
mov
ja
inc
shll
adc
inc
inc
add
repz
mov
stc
mov
enter
paddsb
add
test
cmp
ljmp
mov
dec
jecxz
mov
pop
ret
push
pop
xchg
int3
fldenv
push
test
push
push
out
pminsw
add
lock
add
inc
push
clc
jmp
mov
orb
or
out
pop
jbe
out
out
pusha
sbb
in
or
adc
pop
mov
std
add
pop
out
pop
add
into
push
dec
shl
daa
cmpsl
fists
xchg
mov
xor
cli
mov
jmp
sub
cwtl
mov
pop
xor
mov
and
dec
pop
jmp
mov
aam
jmp
mov
or
pop
dec
test
std
jnp
sbb
or
je
sti
jmp
push
xor
push
mov
jo
jo
sbb
sbb
inc
push
punpckhwd
in
and
inc
cwtl
mov
pop
or
call
into
xchg
jle
push
inc
cmp
ret
xor
jge
cmp
mov
push
pusha
lock
js
adc
neg
adc
adc
movsl
cld
jo
dec
xchg
outsl
mov
int3
push
xchg
jbe
imul
inc
pushf
jne
test
pop
jle
or
loopne
pop
mov
dec
add
inc
aam
dec
jmp
adc
inc
fs
xchg
pop
mov
in
mov
xchg
cld
cmc
sbb
rclb
cmp
daa
dec
out
xchg
inc
aas
xchg
cwtl
adc
movsl
cli
fsubr
mov
nop
dec
or
loope
in
ds
rolb
add
aam
je,pn
add
clc
xchg
push
adc
pop
aaa
cli
mov
outsb
outsb
inc
sahf
push
pop
sbb
rorb
mov
pop
fdivrs
mov
push
push
js
and
and
push
ds
outsl
jmp
ja
sbb
mov
into
fsubr
stos
out
jl
imul
pop
je
and
adc
jg
dec
push
mov
sbb
inc
pop
test
mov
dec
jmp
test
cmp
sbb
push
adc
lret
push
pop
sbb
pop
icebp
or
xor
and
out
mov
mov
jmp
add
push
mov
pushl
mov
push
dec
mov
sarb
pop
test
push
and
imul
pop
add
push
jmp
push
int3
int3
inc
daa
lcall
mov
dec
push
ja
jb
mov
inc
push
fadds
xor
jle
jge
fsubrl
sarb
sub
pop
add
lds
das
adc
jmp
ret
dec
xchg
bound
lahf
movsl
in
cwtl
dec
out
fstpl
cmpsb
dec
pop
mov
ret
out
daa
pusha
and
adc
cmpsb
sarb
loop
xor
stos
cmc
xor
std
je
mov
fs
mov
fcompl
adc
pop
jae
loop
mov
xor
ja
inc
mov
xor
cmpl
les
lods
add
jns
inc
mov
imul
movsb
mov
les
and
stos
addr16
mov
sub
add
jne
jae
loopne
mov
ss
cmp
mov
popl
push
fiaddl
pop
fsubl
dec
inc
les
xor
jmp
sub
out
jmp
pusha
push
add
sub
daa
and
sbbb
pop
pshufw
or
imul
ljmp
jmp
icebp
imul
gs
push
jl
or
cmp
mov
adc
jmp
mov
jmp
push
and
mov
inc
push
push
xlat
in
sub
dec
popf
fcmovu
sbb
popa
push
jmp
or
data16
pop
or
xor
out
bound
ljmp
mov
aad
push
add
xchg
repz
dec
xor
or
xor
shrl
dec
xor
ja
pop
and
add
mov
lret
aaa
pusha
daa
add
xorl
scas
xlat
into
mov
mov
jmp
dec
xchg
or
jbe
loop
inc
jge
cmp
or
jg
mov
arpl
scas
push
js
loop
push
jmp
pop
xor
insl
mov
sub
or
jb
int
sub
mov
mov
addb
pusha
push
out
daa
push
sbb
ja
mov
push
ss
mov
add
pop
xor
adc
repz
aas
popa
sub
insb
adc
mov
cmp
addr16
ja
insl
xchg
jno
test
xchg
pop
in
and
mov
into
gs
mov
pop
jmp
or
leave
mov
pop
andb
ret
das
jne
mov
or
aad
push
add
insl
shl
or
xor
push
cld
mov
cli
fnstcw
dec
adc
pushf
scas
and
push
stos
dec
repz
jg
stos
add
rcrl
jae
dec
mov
jae
dec
cld
sbb
jmp
inc
cmp
decl
add
stc
xor
jne
lods
or
daa
ss
dec
sbb
pusha
lock
push
call
sbb
dec
mov
sbb
push
mov
xchg
or
popa
push
imul
push
aaa
out
shlb
mov
loop
sahf
jmp
cwtl
mov
cmpsb
mulb
ljmp
sahf
mov
subb
jne
out
xor
inc
movsl
mov
jg
jns,pt
push
and
pop
pop
ret
fisttpl
add
mov
sbb
pop
sub
add
and
xchg
cli
pop
dec
add
sbb
outsl
mov
mov
out
cmp
dec
rcll
push
mov
shl
jne
mov
and
push
sub
mov
jle
pop
sar
jle
ss
sahf
sub
or
cmp
add
test
pop
mov
inc
fisttps
jne
movb
xor
inc
fs
mov
sub
xchg
sub
popa
imul
push
cwtl
pop
cmpsb
mov
xchg
aas
and
push
and
cmp
jmp
or
ret
add
mov
inc
int
xchg
lds
dec
inc
iret
mov
popa
test
add
negb
inc
test
mov
xor
out
adc
cmp
lods
scas
lret
jecxz
shrl
cli
sub
cwtl
jmp
adc
ja
xor
out
mov
jnp
sub
jmp
pop
rcrb
jmp
sti
sbb
add
je
in
ds
fldl
iret
lret
repnz
sub
mov
movsl
cmc
jns
mov
movb
mov
dec
scas
iret
fs
test
pop
mov
cmp
rorb
push
shlb
loope
daa
push
pushw
outsb
cmp
insl
inc
in
sub
incl
sbb
inc
dec
sbb
leave
outsb
shl
or
pop
jp
fildl
fucomip
jmp
inc
nop
sbb
mov
cli
or
and
sub
dec
cmc
inc
jb
xchg
test
add
cli
mov
push
fistps
sub
mov
lcall
adc
test
mov
stos
mov
or
mov
inc
daa
jmp
outsl
lock
push
xchg
les
pusha
mov
rorl
mov
inc
ja
or
push
aam
cmc
xchg
loope
int3
out
jmp
cli
mov
push
adc
push
scas
pusha
pop
adc
and
dec
jg
enter
and
or
mov
icebp
mull
pusha
inc
and
inc
xchg
dec
jmp
xchg
testl
stos
mov
mov
or
orb
xor
dec
sub
or
mov
daa
mov
addr16
sub
cmp
jecxz
pop
add
jno
pop
xchg
aaa
push
pop
mov
icebp
mov
jmp
mov
cmp
push
or
dec
int
cwtl
jmp
inc
push
add
dec
pop
outsb
pop
shr
and
inc
sub
push
jecxz
imul
mov
mov
jmp
iret
lods
sub
push
loop
xchg
mov
add
nop
and
loop
jp
jl
add
sub
or
jnp
xlat
sub
sbb
sub
mov
jo
cmp
fwait
jge
mov
add
pop
lock
push
cld
bound
jb
adc
testl
pusha
cltd
lods
dec
sub
ja
or
xor
aas
adc
jo
cli
and
mov
jmp
adc
pop
mov
ljmp
xchg
shrb
inc
push
push
imul
pop
xor
cmp
cmp
sbb
add
pop
scas
lea
and
jmp
pop
add
sub
mov
cmp
out
cld
pop
sub
sahf
cld
sbb
push
cmp
or
icebp
pop
ret
adc
loopne
push
es
pop
push
adc
loop
in
push
or
push
cmp
testl
out
inc
push
daa
test
pop
aad
or
ret
adc
push
push
sbb
mulb
sahf
push
push
or
jmp
xor
jg
sbb
jns
lahf
stos
outsl
addr16
jne
cwtl
daa
bnd
mov
push
or
arpl
inc
push
nop
out
movsl
and
sbb
pop
dec
push
add
repz
adc
pop
mov
jp
popa
push
and
or
add
pop
sbb
lods
stos
jb
daa
mov
jmp
dec
xchg
inc
adc
add
fisttpl
test
jmp
mov
pop
fwait
outsb
xchg
adc
scas
or
jl
mov
xor
jg
movsb
sti
add
inc
cmpsb
cmp
dec
ja
fmul
cmc
add
push
fmulp
aad
inc
loope
xor
sbb
roll
icebp
sti
test
iret
pop
cmp
inc
js
pop
and
add
add
adc
push
push
jmp
sub
push
rcr
dec
push
bound
jle
push
or
out
push
dec
pop
ret
or
xchg
jnp
push
sub
jns
mov
sbb
popa
sub
mov
mov
aaa
inc
aas
add
and
shrl
mov
pop
loope
push
push
mov
and
pop
nop
cmp
sub
push
or
and
jl
jno
xlat
lret
sub
pop
pop
jne
xchg
inc
test
add
mov
sbbb
cmp
jle
repz
or
mov
nop
fwait
sti
sbb
pop
in
mov
cmc
sub
stos
adc
sub
inc
inc
jbe
push
mov
and
mov
mov
xchg
insb
mov
mov
mov
subb
popf
lcall
jns
adc
mov
cli
out
pop
jb
daa
sub
push
inc
stos
xor
ret
xchg
mov
sub
push
or
push
add
jb
sbb
adc
rcl
pop
jmp
sbb
movb
shll
push
push
clc
or
push
dec
ja
add
out
loopne
pop
pop
pop
xchg
or
add
mov
incb
cli
xlat
mov
addr16
sbb
insb
jge
dec
lock
push
add
outsl
lock
insl
rcr
cmp
sub
jp
pop
mov
push
cwtl
xorb
sbb
rol
mov
inc
punpckhbw
pop
or
or
xor
stc
insb
loope
cmp
mov
and
mov
xor
jecxz
sub
clc
cwtl
mov
movsb
adc
inc
mov
sbb
sbb
cmp
jmp
or
xor
and
jmp
fs
bound
sbb
push
leave
and
jge
cmp
cwtl
adcl
push
std
inc
into
daa
xchg
lea
jecxz
test
cmc
xor
aaa
popf
and
xchg
call
fs
jge
fnsave
cwtl
mov
add
and
push
stos
and
push
divl
or
jmp
flds
jo
aas
add
fnsave
xchg
daa
push
mov
jbe
push
rcrl
test
adc
add
add
or
data16
mov
xorb
push
test
xor
mov
push
xor
mov
mov
jns
dec
scas
sarl
jp
push
mov
repnz
dec
scas
and
xchg
aam
push
nop
dec
dec
add
loope
mov
inc
test
mov
sub
std
inc
mov
aas
or
or
ja
xchg
pop
add
pop
pop
out
cmc
jg
aas
mov
mov
cmp
sub
jmp
ret
jmp
mov
mov
mov
add
push
movsb
clc
or
clc
push
adc
sub
pop
sbb
jae
xor
cmp
ljmp
or
sub
daa
inc
pop
out
ret
cld
jne
push
imul
cmpb
or
and
fxam
insb
enter
adc
scas
xor
call
hlt
mov
lods
sbb
test
xchg
movswl
pop
and
hlt
cltd
push
xchg
insl
movsl
sbb
aas
inc
sbb
pusha
xorps
adc
sti
scas
insb
push
mov
lea
ljmp
sbb
aas
adcb
pop
cmc
das
xor
or
adc
imul
push
or
mov
and
test
mov
jmp
in
pusha
dec
loop
adc
inc
cmp
or
imul
mov
and
mov
push
iret
popa
dec
push
test
mov
cmpsl
add
fldt
pop
xlat
paddsw
jne
out
aad
xor
test
dec
adc
add
out
fsts
loopne
and
add
in
outsl
into
ljmp
add
sbb
xchg
add
sub
addb
insb
int3
xchg
nop
xchg
pusha
bound
and
rcl
adc
jno
mov
or
push
and
outsb
and
test
out
mov
loope
cmp
or
out
loopne
lods
enter
add
or
outsl
pop
mov
lods
ret
mov
out
jne
fs
fiadds
repnz
jg
ja
adc
xlat
or
add
sub
push
push
add
sti
loopne
add
fsqrt
test
into
adc
out
mov
mov
imul
and
xchg
loopne
loope
add
lods
fs
adc
dec
mov
fadds
mov
cmpsl
dec
mov
push
ficoml
and
add
int3
int
add
mov
mov
jne
loopne
xchg
cmp
xchg
adc
scas
push
sub
mov
pop
pop
pop
cmc
dec
fdivr
ljmp
add
test
pushf
leave
xor
add
ret
popf
movl
mov
xchg
stos
cltd
lock
sbb
scas
pop
int
loopne
fdivl
and
sarl
sbb
sahf
ds
notl
in
shrb
jnp
xlat
add
push
xchg
or
je
jno
adc
jne
jg
add
test
test
lret
dec
mov
push
push
dec
mov
out
inc
push
ja
push
insb
ret
push
add
mov
sbb
push
orb
outsl
push
pmaxsw
add
inc
sub
add
repz
sti
scas
test
sbb
pop
add
pusha
jno
mov
push
xchg
mov
pop
clc
fnsave
pop
es
cmp
mov
sub
xchg
cmp
add
dec
inc
sbb
add
repnz
mov
lock
adc
pop
push
imul
mov
shrl
pop
in
dec
and
xchg
rolb
inc
in
sbb
pushf
aas
sub
jmp
ret
inc
sbb
out
add
int3
adc
iretw
sub
mov
orb
call
xorl
lcall
int3
imul
xor
or
add
rol
gs
and
es
les
pop
test
push
jb
leave
std
adc
out
in
test
adc
pushf
repnz
mov
enter
pop
mov
inc
xchg
ret
sbb
or
cmp
outsb
or
notb
fstl
mov
mov
jg
add
adc
mov
fdivp
add
add
xor
cld
cs
inc
mov
dec
in
fldt
and
add
call
inc
push
lock
cmp
cmp
mov
scas
shlb
in
lods
add
mov
pushf
aaa
mov
add
mov
pop
mov
mov
or
sbb
sub
add
movsb
push
test
add
outsl
lahf
ja
pop
or
mov
gs
rolb
cwtl
pop
adc
test
mov
jmp
pop
push
or
jo
push
adcb
and
shlb
pop
push
incl
sbb
xchg
mov
shll
inc
in
repnz
sub
add
adc
pop
sti
out
je
push
outsl
adc
jae
dec
add
pop
mov
inc
repz
add
ficoms
test
xor
out
imul
pop
test
push
les
mov
or
in
add
insb
aad
fsubrs
dec
and
or
sarb
add
orb
jae
fs
sub
adc
sahf
mov
pop
and
mov
cli
pusha
push
inc
sub
gs
sbb
test
cs
add
in
cmp
rclb
push
pop
insb
fs
les
mov
out
xor
enter
das
stc
mov
add
mov
in
xor
shr
xor
je
cwtl
ret
movsl
mov
mov
add
aad
xchg
inc
mov
xor
fwait
add
insl
adc
add
adc
andb
xor
add
cld
xchg
nop
pop
push
in
push
mov
pop
mov
add
arpl
pop
push
rclb
xchg
movl
sub
insb
ret
or
mov
jmp
pop
mov
or
dec
inc
sbb
xadd
or
lds
addb
jmp
add
fldl
push
cld
loope
dec
jl
push
sarl
mov
cmp
fnstsw
jmp
push
sub
adc
movsl
dec
fcoml
mov
fidivrs
cmp
cmp
fistps
xor
sbb
stc
mov
lret
pop
pusha
data16
pusha
psrlq
out
mov
andl
sub
lcall
xorl
in
mov
pop
and
mov
add
cmp
sbb
pop
add
xor
test
push
dec
fnstsw
popa
push
mov
mov
stc
mov
jns
scas
out
dec
cmp
dec
pop
inc
sub
int3
cli
mov
pop
in
test
loopne
add
sti
dec
xchg
mov
cli
sub
cmpsb
xor
sub
call
stos
popa
add
jno
and
xor
and
cwtl
fs
push
inc
nop
stc
pop
add
add
lcall
fsub
jae
adc
mov
add
sub
lret
lldt
std
cmpl
or
add
dec
movsl
call
popf
lds
jne
xchg
cmp
ljmp
add
lds
fldt
or
pusha
or
rcr
les
dec
shlb
jns
jg
fdivrl
sbb
and
popf
add
mov
leave
lock
sub
into
cmp
das
push
insb
inc
adc
sub
sbb
aam
jae
hlt
xchg
or
faddl
test
push
pop
cs
add
pop
xchg
popa
ret
adc
add
icebp
push
jnp
js
and
aad
aaa
fs
or
pop
fildl
mov
enter
sbb
pop
jecxz
jge
lods
in
shrb
insl
mov
jbe
aas
ja
xchg
lock
fwait
and
fbstp
imul
hlt
mov
shlb
fcomps
repz
xchg
clc
add
push
repnz
add
hlt
std
add
or
mov
in
xor
loopne
daa
adc
je
dec
xor
les
cmpsb
fcomip
xchg
xorb
lock
scas
add
dec
out
mov
add
fdivs
cmp
int
add
aam
pop
or
andb
add
dec
and
or
xor
add
movl
aam
or
push
mov
and
insb
andb
jb
add
or
adc
adc
imul
mov
pop
push
sbb
push
fistl
fs
and
add
scas
adc
stos
adc
and
jl
pushf
push
inc
cmp
push
scas
aad
sub
jo
ret
test
add
fstpl
cmp
jle
lods
or
divb
mov
ret
test
cmp
pusha
inc
push
pop
pop
pushf
dec
fbstp
push
mov
sub
jbe
fists
inc
xor
cmp
xor
stc
sbb
add
cli
ret
jp
dec
and
cmp
das
gs
dec
sub
cmp
shlb
inc
shlb
add
fiadds
add
imul
aad
sbb
fs
mov
insl
iret
outsb
xorl
jge
sbb
stc
pop
mov
jns
inc
clc
ds
lret
jnp
and
jge
les
sub
cmpsl
jmp
add
mov
inc
adc
in
add
imul
jne
sbb
lea
cld
mov
loopne
out
sarb
stos
xorb
add
stc
pop
mov
lods
push
cs
xor
add
cmp
popf
sbb
sbbl
xchg
outsl
popa
loope
test
imul
add
push
inc
pop
xor
push
stc
dec
xchg
js
pop
sbb
xchg
call
pusha
jnp
sarb
or
jp
mov
pop
add
cmc
push
lods
dec
jle
add
inc
clc
pop
out
cmp
xlat
stc
or
adc
mov
add
movb
add
adc
mov
insl
incb
cmp
rolb
pop
loop
sbb
and
mov
adc
and
mov
cmpsb
inc
inc
punpckhbw
pusha
pop
mov
and
mov
and
repnz
dec
in
loop
fdivrl
jge
cmp
and
push
pop
mov
jo
xchg
loop
dec
adc
dec
lahf
setge
leave
xor
push
mov
xlat
lds
sbb
push
je
test
ret
das
sbb
add
push
or
fildll
cld
mov
xchg
or
sub
sahf
frstor
xchg
inc
std
sub
add
pusha
mov
pop
adc
shll
fs
cmp
add
xchg
jl
fsubl
cs
leave
dec
mov
loopne
add
rcrb
ljmp
add
pop
adc
addr16
jb
cmp
mov
mov
add
mov
sub
lret
xchg
shlb
xchg
sub
es
and
add
cmp
or
or
cmp
dec
and
adc
mov
jl
ficomps
xchg
lds
daa
sbb
xchg
mov
fwait
mov
add
bound
jl
shll
sbbb
sub
shl
testl
and
mov
jp
and
scas
push
mov
sub
in
mov
rolb
mov
movsl
inc
out
mov
dec
into
xor
lods
xchg
pop
add
jne
sbb
shlb
mov
mov
adc
add
push
gs
add
cmp
fwait
arpl
cmp
rcrb
pop
stc
popf
mov
ret
sub
leave
clc
shll
mov
lea
cli
out
mov
add
ret
jne
iret
test
pop
inc
stos
dec
or
cmc
in
pop
negb
imul
jo
adc
mov
in
sarl
rolb
or
mov
or
mov
arpl
adc
in
mov
mov
mull
insl
inc
adc
mov
movsl
ror
rcrb
mov
cmpl
add
inc
add
lret
mov
ds
sub
ror
xorb
mov
lret
rorl
and
loopne
xor
scas
popa
shll
jno
ficompl
and
lcall
adc
mov
in
nop
in
cli
mov
sub
add
into
jo
adc
or
jl
push
xor
loop
aas
pusha
test
mov
jne
fcoms
aam
es
pusha
push
andl
cli
add
ljmp
sbb
or
je
test
mov
leave
das
and
repz
xchg
add
ljmp
dec
xor
jnp
dec
jo
inc
jae
jne
or
xchg
iret
js
or
push
sarb
imul
inc
jge
inc
or
cmp
popf
and
cmpsl
pop
xchg
movsb
pop
add
sub
scas
xchg
mov
popl
pop
roll
or
ficompl
mov
loopne
adc
push
scas
addb
andl
sub
lcall
jmp
aad
fdivrp
pushf
mov
add
in
sbb
push
mov
push
mov
xchg
mov
hlt
add
or
jnp
add
fimull
sub
mov
push
mov
cwtl
add
cwtl
mov
xchg
and
shl
xchg
roll
cwtl
lahf
enter
fisubrs
cltd
adc
add
add
push
add
xor
daa
jno
add
add
push
rol
add
adc
add
enter
sti
scas
cld
xchg
cmpsb
and
outsb
adc
loopne
in
fwait
nop
fimull
dec
sbb
xchg
mov
and
std
js
bound
out
add
push
ret
sub
addr16
inc
mov
call
icebp
push
mov
pop
dec
pop
int3
popf
adcl
or
mov
lods
sbbb
inc
loope
push
leave
pop
add
mov
repnz
in
add
into
sub
imul
jmp
stos
fcmovbe
js
fcmovnb
cld
add
xor
add
fadds
fs
rclb
lds
and
hlt
filds
sbb
pop
pop
fcoml
loop
sbb
push
mov
or
adcb
inc
jecxz
adc
mov
in
int
push
add
sahf
out
jle
mov
loop
add
std
fxch
jge
les
ja
mov
movsb
inc
pusha
popl
mov
pop
jo
push
mov
adc
add
dec
clc
xchg
cmp
cmpsl
or
xchg
xchg
cmp
stos
pop
mov
andb
cvtdq2ps
xchg
add
push
jmp
pushf
je
out
rcrb
xchg
sub
into
mov
sbb
lret
outsb
sub
rorb
dec
inc
add
cmpsl
jmp
cmp
lret
jae
mov
push
cli
and
leave
mov
pop
push
jge
push
mov
add
xchg
negl
mov
and
mov
pop
shll
cmpl
push
lcall
add
rcll
mov
sti
mov
or
lahf
and
xor
push
mov
cld
bound
gs
push
push
cmp
fcmovu
or
aas
cs
mov
call
cmp
pusha
test
cld
inc
aam
mov
cmp
stos
xchg
loopne
lods
scas
call
ds
adc
cmpsb
outsl
shrl
push
sbb
das
in
pusha
add
inc
dec
mov
add
leave
lret
movsb
push
inc
cmp
cmp
pusha
xor
jmp
jl
cmp
ds
imul
inc
aas
xchg
pop
xor
add
call
push
jae
sub
add
rorb
xchg
das
adc
xchg
push
inc
aam
imul
cmp
sub
or
fldcw
sub
rolb
test
or
pusha
shll
add
jle
and
xor
enter
mov
jecxz
and
adc
add
sti
xlat
cmp
and
test
imul
cmp
push
xchg
sub
sbb
xor
movsl
int3
adc
push
popa
mov
sub
jno
lea
add
mov
mov
cld
in
or
mov
dec
mov
cmpl
sub
imul
dec
sub
mov
add
sbb
xchg
and
pop
repnz
nop
add
clc
icebp
dec
or
mov
decl
cmp
js
xor
sahf
adc
push
loopne
sub
add
ficoms
adc
cmp
or
das
or
add
mov
leave
insb
shl
call
push
lds
std
ja
sub
mov
sub
lock
or
xchg
out
sbb
je
sbb
or
sbb
in
fwait
jmp
testl
and
shrb
pop
xchg
adc
loopne
xor
xchg
adc
or
adc
ja
cmp
lret
jno
add
xchg
or
sub
xchg
rcrl
sub
or
test
jne
loopne
inc
mov
divl
or
and
jecxz
rcll
dec
lea
cmp
push
jae
jb
sub
mov
mov
movsb
mov
stos
call
or
mov
out
test
and
xchg
fsubs
in
shlb
shlb
lods
or
ja
xlat
cmp
add
push
clc
mov
mov
inc
gs
sbb
shlb
sub
jg
mov
in
and
rolb
imul
push
fiadds
inc
mov
push
mov
pop
sub
inc
stos
dec
shrd
inc
pop
pop
or
adc
inc
add
or
mov
mov
sbb
add
xchg
dec
fmull
and
mov
cmp
lret
and
jg
lods
dec
pop
jl
cwtl
cmp
mov
andl
adcl
rdpmc
mov
pop
loopne
push
fs
cmpsl
fsubs
inc
loopne
filds
inc
das
or
or
scas
inc
mov
cld
lods
push
mov
or
daa
mov
nop
test
in
mov
sarl
mov
lea
stos
mov
gs
cmpsb
and
cltd
mov
rorl
or
out
inc
pop
sub
cmp
nop
les
mov
xchg
leave
inc
orb
dec
gs
mov
or
cs
int3
sub
dec
adc
dec
fdivs
xor
inc
test
jecxz
in
dec
outsb
test
xor
sbb
xor
in
push
in
mov
xor
inc
cmp
dec
adc
loop
aam
mov
and
orb
and
push
dec
sub
adc
and
mov
add
and
sahf
pushw
push
arpl
add
xor
add
aad
xor
pushf
lret
cwtl
cmp
xor
call
int3
pop
mov
cmp
jl
xchg
ret
or
sbb
mov
and
cmpsb
mov
lahf
add
adc
rorb
sub
nop
dec
aaa
rolb
jle
inc
aam
push
xor
xchg
jbe
rclb
enter
mov
sbb
add
jl
push
test
gs
pop
ror
pusha
test
ss
sbb
fadds
sbbb
rol
cmpb
insl
push
daa
sbb
mov
adc
popa
cmpsb
nop
insb
sarl
jns
mov
ja
sbb
into
adc
add
inc
xor
mov
test
daa
mov
cld
push
mov
pop
into
imul
mov
add
sub
jg
sub
movsb
inc
mov
rol
cmp
jecxz
add
xor
or
sub
subl
push
jl
inc
add
pushf
in
jmp
insl
fmull
cmpsb
jb
dec
jecxz
imul
mov
jp
fidivrs
arpl
lret
daa
stos
inc
lcall
pop
cld
jnp
fdivrl
sbb
addb
out
xlat
xchg
sbb
pop
adc
mov
push
xchg
xorb
mov
xchg
inc
sarl
and
insl
roll
or
stc
scas
nop
adc
hlt
inc
xorb
fisttps
pop
cmp
adc
cltd
push
sbbb
sub
data16
sbb
dec
xchg
add
xchg
push
push
fcos
test
adcb
pop
mov
push
inc
ja
jae
or
push
xlat
push
add
jecxz
pop
mov
push
add
aam
cld
cmp
or
xchg
push
fmull
adc
jcxz
jo
loopne
xchg
cmp
ljmp
and
xchg
jne
adc
lcall
lea
sbb
xlat
data16
lcall
mov
mov
dec
jmp
sub
xor
imul
pop
icebp
xor
clc
and
cs
rorb
ljmp
or
dec
cltd
lahf
loop
test
adc
mov
add
andb
mov
icebp
sbb
stos
sub
pop
mov
add
mov
jmp
fcmovnb
jb
shrb
imul
bound
subb
rol
push
dec
lock
test
pop
or
insb
test
mov
cmp
dec
add
sbb
int3
fadds
nop
mov
jno
pop
xor
rcll
lock
sbb
ss
loop
lahf
jae
inc
mov
and
loop
add
nop
jb
add
loopne
call
int3
or
dec
shll
sbb
fwait
and
pop
loop
add
ja
jg
and
cmp
xchg
xor
xlat
dec
add
adc
mov
or
ret
lahf
add
cmpsb
push
imul
add
and
das
nop
dec
movl
repz
dec
add
adc
mov
pop
adc
aam
cmp
mov
and
sub
cmp
mov
mov
push
fisttpll
or
push
mov
insl
or
movsb
jo
push
xchg
fucomi
dec
adc
or
push
dec
jp
stos
sbb
dec
cld
jne
pop
jno
or
cmp
adc
push
fwait
dec
inc
hlt
adc
shrb
test
cmp
movsb
mov
pop
add
in
rol
fists
pop
pop
dec
and
pusha
clc
sahf
fwait
or
adc
les
xchg
inc
stos
xor
sahf
cmp
aad
into
sub
mov
jg
or
lahf
inc
fbstp
arpl
mov
jbe
mov
and
adc
inc
and
add
inc
mov
jbe
push
lcall
mov
sarb
xor
and
js
push
insl
mov
aas
out
flds
mov
cmp
data16
je
rolb
scas
xor
jecxz
arpl
xorl
filds
pop
sbbb
mov
icebp
pop
xor
mov
mov
inc
mov
fsubrs
lods
pop
inc
cmp
or
jecxz
out
cwtl
pushf
dec
add
test
and
xchg
push
nop
dec
inc
jns
loopne
sub
and
shlb
fsubrp
icebp
ret
fs
adc
aas
test
mov
repnz
adc
mov
ja
lods
lcall
in
test
test
cmp
cmp
jmp
inc
add
test
add
pop
pop
jae
movsb
int
imul
sbb
or
adc
lock
fidivrs
insl
insb
jno
lock
pop
mov
cmpsl
outsl
ljmp
xchg
test
add
enter
fstpt
add
lea
dec
jg
adc
stc
les
addb
mov
inc
jns
cwtl
add
scas
sbb
xor
add
imul
push
sub
and
xchg
xchg
mov
mov
jns
inc
mov
int3
jnp
pop
gs
nop
xchg
jmp
adc
xor
adc
pop
andb
ds
outsb
mov
inc
inc
jle
dec
jbe
fwait
test
test
or
aas
and
dec
into
lahf
andb
and
or
inc
cmp
test
mov
rcrb
jl
loopne
popa
jne
in
xchg
mov
add
sub
jae
shll
lds
add
hlt
or
jbe
test
mov
or
sub
add
cwtl
dec
mov
push
outsl
mov
addl
mov
add
int
xor
cmp
sbb
add
mov
in
fisttps
mov
jb
add
adc
dec
pop
mov
cltd
push
popf
stos
inc
mov
fwait
movsb
out
movsl
dec
lahf
pusha
clc
adcb
adc
inc
in
and
cmp
mov
add
mov
adc
pusha
loop
andb
jecxz
xor
fcmovu
out
xchg
cmpl
and
rolb
add
jge
js
cwtl
test
cli
or
in
in
shr
adc
outsl
mov
mov
and
lahf
add
inc
pop
jp
enter
or
in
xchg
cmp
aam
dec
add
adc
push
imul
call
adc
add
lods
jnp
inc
jnp
add
int
js
rcrl
add
test
stos
cli
fsubrl
out
jnp
add
pop
sub
inc
mov
or
cmpsl
lock
xor
xor
ror
cld
adc
mov
mov
xor
xchg
add
pop
mov
loopne
inc
cmp
adc
fistpll
das
pop
jb
sysret
insl
fnstenv
sub
add
sbb
mov
les
mov
jmp
or
pop
xchg
repnz
cmp
test
mov
sub
mov
xchg
mov
mov
std
jbe
lock
stc
inc
and
dec
in
xchg
in
add
fnstcw
nop
rorl
nop
ss
add
mov
add
fnsave
loopne
fs
xorl
mov
test
add
push
sbb
enter
cmp
mov
lret
jo
jbe
cmpsl
add
test
sub
lods
mov
call
cmpsl
popl
pop
fists
aaa
cmpsb
mov
and
jbe
jg
sbb
loopne
add
stc
adc
or
mov
xchg
sub
ja
es
pop
pushf
das
daa
jle
inc
push
arpl
mov
adc
mov
insb
lret
clc
pop
decb
add
daa
jne
fisubrl
adc
lea
jns
jbe
and
mov
cld
repnz
cmp
insb
clc
cwtl
pop
lock
and
push
fwait
pop
inc
mov
pop
jns
sti
cmpb
jg
xchg
sbb
hlt
pop
pushf
adc
dec
add
sub
push
jae
stc
div
sub
faddp
sbb
shll
mov
sub
dec
push
lds
jmp
nop
in
jns
add
iret
adc
cmp
push
add
daa
fwait
xor
mov
add
and
push
int3
xchg
add
nop
xchg
add
in
shl
sbbl
lods
mov
fcomps
add
pop
jae
lcall
or
stc
movl
jae
lods
mov
push
and
adc
movsl
or
cs
push
mov
sub
sbbl
inc
dec
jge
sub
mov
mov
js
mov
or
gs
into
and
push
in
adc
sub
push
pmuludq
and
mov
xchg
lock
cmpb
mov
or
daa
dec
and
fs
cmp
fstpl
inc
pop
sbb
aam
loopne
push
adc
dec
ljmp
loopne
ja
xchg
xor
push
outsb
bound
rclb
pop
jns
jl
daa
cmpsl
addb
jo
cs
mov
movl
rcrl
or
clc
ret
cmpsb
or
or
inc
sbb
dec
or
clc
iret
xchg
test
rcll
mov
and
insl
cltd
or
adc
and
into
pop
mov
and
inc
sbb
fs
cmp
jo
sub
fistpl
and
dec
pop
mov
push
imul
dec
sub
iret
mov
adc
and
dec
rcll
lret
enter
into
dec
lret
xchg
int3
and
inc
ret
roll
orb
sahf
jl
pusha
cmpsl
movsb
hlt
sub
movsl
add
push
xlat
or
mov
das
fwait
mov
sub
or
jecxz
mov
xor
cs
jp
mov
test
sarb
jl
sub
add
add
cmc
adc
xchg
js
and
jmp
sub
mov
cmpl
xchg
and
clc
xchg
aas
and
mov
mov
sbb
aad
add
mov
jecxz
add
push
add
cmp
call
xor
jl
sbb
ret
sbb
in
popf
mov
mov
pop
push
add
sub
sub
cmc
cmp
xchg
xor
repnz
sbb
mov
adc
lock
repz
int3
test
inc
jnp
jge
adc
push
es
adc
dec
ds
iret
lahf
sahf
add
aaa
inc
dec
add
movsl
xchg
fcoml
pop
lock
cld
rol
adc
xorl
add
in
mov
aas
inc
jb
mov
mov
pushf
fstpl
idivl
fsubs
push
int
lods
sbb
cmp
aaa
into
repnz
les
add
rol
sbb
lcall
clc
xchg
pop
add
inc
xor
pusha
ljmp
sub
xor
dec
adc
popa
repz
cmp
int3
xchg
test
rorb
add
not
daa
fists
inc
mov
out
int3
pusha
xchg
pusha
mov
xchg
mov
jp
jae
jns
shl
decb
or
popa
leave
xchg
jbe
ret
pop
gs
push
addb
incl
adc
fmuls
std
loope
xor
adcb
fs
sub
cmp
mov
icebp
xchg
aad
jecxz
jbe
add
adcb
orb
scas
and
int3
out
add
jecxz
jg
add
mov
mov
mov
ficoml
add
mov
cwtl
mov
mov
pusha
push
jge
sub
loop
add
je
and
cmc
sub
add
xor
sbb
ret
loop
jp
fdiv
stos
mov
inc
leave
jno
mov
pop
mov
xchg
dec
cmp
lret
push
orb
cld
pop
xlat
test
jmp
jle
iret
rol
not
add
icebp
out
jmp
int3
ficomps
sub
adc
mov
gs
add
imul
pop
sub
adc
lcall
push
mov
loop
enter
icebp
cmpsl
test
cltd
lret
dec
adc
in
add
jecxz
fdivrs
pop
cmp
addl
cmp
out
loopne
in
sahf
add
lea
es
addb
mov
push
dec
stc
clc
mov
lcall
imul
rorb
sbb
add
fwait
cmp
xchg
jae
rclb
push
fnstenv
mov
jo
in
int3
inc
sbb
adc
sbb
testl
add
mov
jns
in
add
popa
ljmp
jae
fidivl
mov
imul
add
xchg
lods
inc
adc
sbb
and
push
aas
dec
add
inc
adc
pusha
imul
je
adc
in
xor
and
ss
add
insb
adc
xchg
shl
and
es
lret
inc
sbb
loopne
dec
sbb
and
add
sbb
aam
jp
popa
scas
stos
stc
subb
xor
das
pop
inc
dec
ljmp
subb
mov
je
jge
loop
add
xor
aam
add
sahf
xor
add
mov
jmp
or
cwtl
hlt
in
add
cmpsl
shrb
lcall
add
in
dec
push
jg
add
add
xor
rcrl
jmp
adc
mov
js
dec
jecxz
push
jg
daa
push
add
aas
add
int
fwait
in
mov
aad
cwtl
fisttps
shrl
add
int
hlt
cmp
add
pop
lods
and
sarb
push
repz
adc
pusha
cmp
sbb
jle
mov
popa
add
sub
pop
xor
inc
xor
clc
xchg
orb
mov
sarb
std
or
lds
mul
xorb
push
jle
andl
sbb
mov
xor
and
cmp
test
test
xor
cmp
add
shlb
jae
xchg
mov
cmp
fsubrs
js
or
add
and
fs
imul
adc
daa
sub
jmp
dec
sbb
test
nop
outsb
add
cmp
xchg
pop
hlt
push
ds
subl
add
mov
push
bound
sub
or
mov
dec
pusha
sub
lcall
aam
leave
push
sub
xor
or
rolb
imul
mov
sbb
rorl
fs
decb
cld
jp
js
sub
push
dec
lcall
in
out
inc
out
add
dec
or
or
cmpsb
cmpb
movsl
adc
aam
js
sub
push
inc
hlt
cmp
ror
add
addb
loop
std
ss
xchg
faddl
cmc
sbb
add
xchg
cmp
daa
inc
add
jmp
popf
inc
int3
push
push
call
aaa
sbb
imul
and
add
enter
arpl
pop
inc
or
insb
adc
xor
test
ja
add
aad
push
push
lock
add
pop
push
lret
pop
sub
dec
in
pop
es
mov
inc
sarb
adc
or
inc
into
inc
out
sbb
jge
inc
shll
loopne
adc
dec
and
dec
test
aas
push
and
leave
inc
shrl
nop
lock
imul
outsl
sbb
or
push
ret
je
add
sti
xor
dec
dec
jl
mov
push
loopne
dec
push
movsl
cs
xchg
inc
push
xor
and
sti
xchg
xchg
rolb
cld
dec
dec
in
mov
sahf
rorl
and
add
outsb
insb
lds
jbe
sti
mov
rcrb
xor
ljmp
mov
pop
push
adc
push
enter
adc
and
iret
and
nop
out
xor
js
ficomps
sbb
add
add
mov
or
pop
stos
mov
fwait
add
sbb
nop
shrb
sbb
popf
xchg
dec
or
loope
xchg
sbb
stos
pop
orl
adc
cmp
sbb
verw
pop
loope
push
inc
out
popa
or
rcrl
js
into
test
sahf
je
add
pop
test
add
mov
outsl
push
rcr
xor
icebp
int3
lcall
mov
pop
jb
nop
das
outsb
aam
out
add
fwait
sub
mov
sub
jl
add
popl
xor
mov
jno
xchg
es
cmp
lock
jle
xchg
and
das
cmp
pushf
add
cmp
sbb
outsl
jle
xor
jp
sti
jmp
mov
fwait
or
ja
and
xor
dec
or
daa
ja
imul
add
jp
lea
jnp
xchg
dec
sub
enter
pop
iret
or
sbb
lods
enter
push
pop
sub
adc
add
and
xor
lock
lock
xchg
cmp
xchg
pop
mov
sub
inc
lcall
out
frstor
mov
fs
clc
clc
add
dec
leave
aaa
xor
mov
sbb
push
mov
mov
sub
and
push
sbb
dec
lret
push
xor
out
icebp
daa
repnz
add
rorb
xchg
inc
dec
add
daa
add
and
xorl
add
mov
mov
sub
and
in
adc
add
push
les
aaa
dec
mov
xor
jns
inc
and
and
jno
mov
aam
movsb
rcrb
or
xor
xor
xchg
or
sub
addb
pusha
sbb
leave
or
mov
xor
push
push
dec
push
and
inc
lret
adc
test
sub
and
mov
inc
lret
inc
sub
nop
enter
pusha
push
fnsave
push
call
xchg
sub
ja
inc
sahf
and
loop
mov
inc
mov
mov
xchg
xchg
push
adc
out
and
aam
adc
in
and
xor
dec
hlt
js
outsl
nop
xchg
dec
adc
lock
jae
mov
inc
xchg
or
inc
xchg
mov
aas
lret
and
push
rolb
js
nop
and
pop
push
adc
push
fmulp
sbb
adc
cwtl
dec
mov
ret
addr16
loope
add
icebp
int
ror
adc
or
xor
dec
push
lret
or
nop
or
cwtl
dec
out
adcb
adc
dec
test
sqrtps
je
mov
lea
pop
stos
jne
jns
call
sub
jle
mov
insb
lcall
das
dec
jmp
pop
pop
push
add
popa
nop
shl
or
ja
and
inc
mov
adc
jne
push
inc
repz
fstpt
pop
cmpsl
pop
es
adc
cwtl
je
shrb
cmpsb
sbb
imul
imul
ja
sub
dec
push
and
cmp
mov
insb
mov
in
jle,pn
shlb
xor
lock
sub
arpl
pop
jmp
idivl
jg
daa
jp
mov
adc
inc
fistps
inc
push
notl
xchg
xor
test
jge
add
arpl
push
cld
push
aam
lcall
pop
ds
jl
sub
test
andb
adc
imul
or
imulb
sub
lock
inc
cwtl
xchg
and
cmp
je
or
sub
dec
and
xor
push
insb
jg
mov
jo
push
ds
jl
dec
ja
clc
cmpl
inc
adc
inc
pop
daa
xchg
pop
in
inc
es
rolb
jp
out
jo
fisttpl
push
cmpb
adc
jno,pn
aas
xchg
xor
jo
sti
jnp
cmp
adc
cwtl
add
adc
lods
rcrb
xchg
das
daa
xor
inc
lret
mov
mov
jg
xor
dec
and
mov
mov
ficomps
pop
hlt
add
rclb
jno
gs
incb
push
or
rclb
xlat
add
aad
sbb
rcrl
dec
or
push
sbb
jg
push
add
aam
adc
gs
inc
push
jb
lods
js
push
jg
adc
jae
test
or
xor
push
or
cmp
sbb
lret
imul
jg
mov
or
aad
jmp
lret
sbb
sbb
fld1
decb
or
je
test
outsb
jl
cmp
jae
fdivs
sbb
jecxz
movsb
rcrl
orb
pop
adc
in
pusha
push
gs
or
push
sbb
andb
arpl
aaa
or
jno
adc
or
pop
sbb
inc
cmp
orb
shrl
xchg
pop
add
test
jno
pop
sbb
xor
sbb
mov
insl
cmp
add
jl
cmp
pop
jo
rcrb
movsl
sbb
test
je
mov
add
test
rcll
lock
lds
push
arpl
fs
sarl
fs
adc
lret
adc
push
cmp
cmovp
addr16
xor
adc
pop
mov
rclb
pop
push
xor
inc
push
ja
rorb
sbb
psrlw
mov
or
inc
or
pop
jae
bound
pop
adc
les
or
aas
dec
andl
sbb
les
shlb
rcrb
xchg
gs
enter
push
hlt
gs
rcrb
xor
jmp
mov
pusha
push
add
push
push
or
push
inc
test
gs
jl
dec
fs
jg
notb
test
cmc
lock
sbb
push
and
cmp
sub
enter
inc
adc
enter
add
dec
cmp
repz
aas
push
outsl
stc
call
sbb
jmp
or
add
push
punpckhdq
and
rclw
jne
push
adc
jb
fisubs
and
pusha
js
pop
or
scas
fcomp
mov
mov
rcll
add
or
sbb
dec
icebp
and
mov
mov
lock
pusha
or
lahf
lahf
shlb
sbb
xor
adc
fs
jmp
push
pop
lock
popa
mov
test
fmuls
or
pop
push
push
inc
pop
xor
cmpsb
js
fs
cmp
imul
leave
ds
sbb
shr
shll
shll
sub
testl
inc
pop
mov
es
std
mov
add
sbb
ja
and
cld
adc
xchg
aam
push
das
xor
dec
xchg
add
mov
push
sar
jne
sbb
shlb
sub
leave
addl
pushf
test
out
or
fwait
xor
mov
popa
xor
int
aam
mov
mov
pop
sbb
stc
inc
ret
inc
mov
xor
xchg
sbb
stos
and
enter
ja
icebp
clc
push
sbb
arpl
pop
pop
add
mulb
pop
add
and
add
mov
test
aam
jno
fsubrs
sub
mov
add
dec
jge
sbb
pusha
in
inc
cs
dec
push
xchg
xor
lds
or
xchg
std
push
sbb
cmpsl
xorl
sahf
pop
leave
test
pop
test
shll
int3
lret
jns
cmp
dec
les
test
mov
xor
or
aad
js
adc
jl
add
pop
shll
mov
scas
and
das
lock
rcrb
daa
stc
lahf
xchg
cmp
and
push
mov
add
imull
pusha
xchg
loop
or
mov
and
rolb
mov
mov
or
les
das
dec
cmpsb
les
fs
pusha
bound
push
sbb
enter
ja
stos
or
hlt
add
inc
sarb
xchg
test
pop
dec
and
rol
cwtl
shll
and
pop
dec
add
js
lcall
out
or
pop
mov
daa
and
cltd
jecxz
cmp
lea
add
push
add
xchg
push
cs
xchg
adc
cwtl
mov
rorl
adc
js
stc
cmp
fadd
cmp
cli
lahf
push
inc
jg
add
dec
cmpsb
inc
dec
test
add
mov
add
inc
in
cmp
cmc
andb
jnp
mov
xor
xchg
mov
adc
mull
mov
dec
jo
lahf
icebp
mov
imul
add
push
mov
sub
test
xor
add
inc
ja
mov
or
or
jns
pop
mov
or
mov
fs
leave
ja
pop
fisubrl
sub
dec
mov
addl
push
stc
sub
loopne
ss
cltd
and
add
mov
cmp
addb
sbb
add
loopne
xor
xchg
int3
jmp
cmp
mov
ret
inc
adc
mov
les
andl
mov
pop
call
pop
mov
and
cwtl
fidivl
jl
xor
sarl
add
in
inc
cwtl
sbb
mov
fidivs
push
gs
or
xor
pop
xchg
pop
sahf
push
lahf
loop
loopne
ss
mov
add
das
cwtl
xchg
dec
inc
fwait
sahf
add
jge
nop
into
enter
arpl
jmp
data16
js
sbb
inc
cmpsl
lock
mov
jno
sbb
jge
pop
iret
js
xor
test
xchg
cmp
insb
xchg
pop
xchg
sbb
mov
jbe
clc
orb
int
std
push
inc
imul
inc
cmp
stos
arpl
jo
jne
add
add
dec
cmp
mov
je
and
movsl
jbe
testl
inc
fmull
in
mov
sbb
add
outsb
sahf
imul
iret
leave
inc
jmp
xchg
mov
in
xor
je
and
test
subb
mov
ficompl
dec
jns
enter
sbb
insl
mov
test
and
adc
adc
lock
mul
add
cmp
in
and
lods
popa
adc
pusha
cmp
ja
loope
pop
jb
les
call
mov
inc
mov
or
aad
or
lock
popa
imul
add
mov
pop
dec
inc
pop
xchg
mov
aad
lock
push
ret
mov
js
mov
leave
xchg
mov
mov
roll
in
cmp
cmp
mov
sbb
or
es
and
out
loop
loopne
jle
stc
repz
in
add
es
push
pop
enter
and
arpl
aas
mov
inc
aam
imul
scas
dec
jecxz
adc
clc
rclb
hlt
mov
imul
imul
or
mov
or
inc
adc
inc
sbb
push
add
decb
add
andl
pop
mov
pop
sub
inc
or
and
dec
enter
stc
ds
shl
out
int3
pop
xchg
icebp
mov
pop
rorb
insl
dec
xor
ss
add
jns
pop
add
rcrb
out
jno
cmp
or
pop
das
jg
hlt
cli
add
insl
push
mov
aaa
in
and
pop
outsb
lds
repnz
movsl
shll
xchg
sbb
inc
nop
shrl
add
jge
test
out
inc
adc
add
add
jp
sbb
adc
filds
add
push
insl
std
daa
xchg
clc
push
les
in
pop
test
add
fidivrl
jae
retw
or
add
jecxz
lea
cmpb
sbb
xor
add
dec
loopne
out
dec
jg
add
xchg
mov
out
and
xchg
xchg
cmp
lods
std
subl
push
sub
nop
int3
add
fucomi
insb
pop
inc
cmp
pop
mov
sbb
loop
cmp
mov
add
xor
push
mov
lret
lock
rcrb
sub
and
jne
notb
loope
add
jmp
mov
outsb
in
push
cli
ja
add
adc
in
mov
arpl
push
out
icebp
sub
pop
stos
mov
lret
pop
or
dec
out
arpl
ds
mov
inc
pop
inc
add
outsl
pop
shl
or
popa
and
inc
push
mov
scas
mov
and
pusha
pop
xor
pusha
add
jge
cmp
dec
sub
ret
sbb
pusha
push
xchg
in
cmc
or
cld
mov
in
adc
leave
xchg
dec
adc
shll
sahf
add
cmp
dec
inc
mov
sbb
xchg
jne
jb
sbb
adc
xchg
js
cmpb
mov
jecxz
xor
sbb
mov
ds
cmp
add
add
inc
xor
lods
nop
out
je
adc
sbbl
imul
les
add
cmp
jae
or
dec
in
push
jae
rep
or
lock
cmp
mov
xor
jge
fimull
and
ss
add
push
incl
flds
jge
or
mov
mov
or
xor
adc
add
adc
nop
sub
cmp
sbb
push
popa
nop
shlb
pop
adc
mov
push
out
ljmp
dec
cmp
in
push
cmp
outsl
adc
pusha
in
xchg
dec
push
movsb
add
xor
push
add
std
cltd
sbb
loope
xchg
test
sbb
sbb
push
dec
inc
pusha
sbb
mov
jl
xor
mov
cwtl
xor
ret
orl
add
adc
pop
in
sbb
loopne
out
fdivrs
divl
sbb
nop
out
pusha
add
mov
cli
pop
addb
out
inc
sub
mov
out
test
adc
sbb
popf
add
addr16
mov
dec
mov
add
lahf
js
jmp
or
xor
in
push
insl
in
lret
lds
mov
clc
xlat
in
out
in
stc
push
repz
adc
enter
or
push
xchg
adc
inc
es
out
gs
add
pop
test
push
mov
and
fidivrl
and
cld
adc
inc
pushf
mov
out
push
call
jge
or
push
cwtl
les
or
mov
jno
data16
loopne
xor
mov
std
or
popa
nop
outsb
pop
aam
dec
add
xor
adc
inc
ljmp
mov
je
daa
testl
in
sbb
ja
and
ret
adc
lcall
test
xor
pop
sub
adc
push
dec
or
lock
pop
add
or
jecxz
mov
or
push
mov
pushf
shlb
mov
mov
push
mov
xchg
cmpsl
add
inc
and
or
xchg
push
iret
sarl
mov
lahf
lahf
mov
fcmove
in
adc
add
test
cmpb
inc
das
push
int3
std
adc
test
rcr
adc
jg
push
fnstsw
or
iret
dec
nop
sbb
int
aam
pusha
adc
pushf
add
sbb
ret
pop
rcrb
ret
and
pop
repz
aaa
pushf
and
loop
and
je
adc
or
int
add
push
stos
add
fadds
cmp
add
cmc
leave
sub
insb
or
addr16
in
add
adc
repnz
jecxz
icebp
add
out
cld
and
dec
dec
mov
ret
dec
lds
mov
es
in
movsb
pop
popa
adc
addb
inc
push
int
dec
push
xchg
push
pusha
sbb
add
aas
pop
sbb
and
xchg
cli
sbb
rorl
mov
test
pop
or
stos
aad
fdivrs
test
add
cmp
add
lods
push
mov
aad
mov
inc
mov
orb
faddl
sbb
sub
lods
lahf
add
add
mov
and
addr16
push
stc
mov
xor
add
addl
push
inc
rolb
xlat
inc
jne
movsb
pusha
mov
adc
dec
je
xchg
inc
xchg
movsl
jecxz
mov
jbe
lock
inc
xor
push
mov
or
jg
test
jno
mov
xchg
xor
icebp
pusha
pushf
add
mov
adc
pop
xorl
add
negl
cld
and
or
sbb
sub
cld
stc
call
test
mov
and
add
adc
and
out
adc
xor
imul
lock
push
movsl
xor
ffreep
or
jle
cld
mov
call
mov
sbb
movsb
or
xchg
lcall
sub
or
jno
das
inc
ret
mov
xchg
push
cmp
xor
add
sbb
test
sbb
adcl
lods
pop
int3
hlt
out
enter
jo
xchg
add
enter
add
dec
jl
mov
dec
cwtl
adc
jmp
pop
ds
int3
fbld
sub
cwtl
enter
cmp
daa
xchg
scas
pushf
fs
and
push
aad
rcl
jecxz
lret
cltd
dec
xor
sub
sub
or
fildl
or
fxtract
mov
sbb
rorl
rcrb
mov
mov
push
mov
stos
inc
sbb
inc
fld
mov
mov
xor
and
sbb
movb
fistl
je
mov
sub
sbb
and
mov
fdivrl
mov
outsb
sbb
je
jno
das
add
fmulp
add
add
sbb
jmp
and
adc
add
out
or
call
sbb
scas
mov
lret
or
dec
dec
das
sub
pop
push
mov
loopne
add
rcrl
test
pop
add
or
popl
cld
insb
ficoml
mov
movsl
test
sub
sti
lcall
push
mov
shl
arpl
inc
xchg
jo
loopne
push
sbb
call
int
cmpb
jns
add
add
cltd
dec
xchg
xchg
xor
mov
sub
dec
fiaddl
or
pop
sbb
ret
jne
or
xchg
cmpsb
cwtl
pusha
inc
sahf
adc
dec
in
add
les
jbe
pushf
xchg
xchg
popf
inc
jo
push
and
jno
ds
xor
dec
push
daa
mov
pop
pop
or
or
mov
and
js
dec
and
dec
dec
push
jecxz
xchg
pop
pop
pushf
roll
mov
sbb
decl
sbb
jae
dec
sub
psrlw
cmp
pmaddwd
int3
faddp
push
cmp
jno
sub
inc
adc
fs
mov
add
sbb
adc
and
cmc
push
stos
mov
sub
xchg
xchg
daa
nop
call
cmp
sbb
pop
ljmp
add
mov
push
adc
inc
dec
add
adc
or
push
mov
mov
sbb
inc
loopne
adc
sub
sub
movsb
or
cwtl
or
dec
xchg
mov
inc
mov
xor
stos
jbe
cmovle
imul
lock
imul
and
sbb
xchg
orl
or
insb
sub
adc
js
jle
fldenv
push
add
add
leave
jne
xchg
in
push
add
adc
xor
xchg
pop
push
scas
sbb
and
pop
mov
bnd
aad
add
xor
pop
xorl
xchg
push
mov
push
mov
jae
adc
jnp
ljmp
cwtl
dec
fists
mov
adc
stos
jp
nop
dec
and
add
jo
mov
cmp
in
adc
mov
push
and
or
test
push
and
shlb
rolb
lods
aam
sbb
add
pusha
or
or
jp
xchg
hlt
mov
stos
sub
ds
inc
mov
add
sbb
cmp
inc
pop
sbb
rorb
xchg
push
adcb
and
cmp
mov
scas
jmp
jnp
lret
fsubrs
sub
xlat
sbb
inc
pop
jecxz
out
add
andb
sub
and
sbb
fs
test
mov
xor
in
rcrb
add
nop
sbb
cltd
ds
and
inc
into
lock
mov
pop
xor
add
leave
aam
xor
mov
ret
mov
sbb
mov
sub
stc
jl
outsl
inc
or
imul
inc
add
mov
pop
or
dec
in
and
cs
xchg
ficomps
jne
movl
fistl
loope
push
lea
cmp
lock
adc
xlat
mov
push
cld
jmp
push
cmpsl
ret
push
push
call
pop
jl
mov
cmp
add
ss
push
roll
mov
and
push
mov
or
popa
lods
addr16
adc
push
subb
inc
je
mov
adc
and
cmpl
movsb
cltd
and
sbb
and
clc
mov
xor
adc
push
mov
push
sub
pop
add
ret
pushf
movsl
es
jmp
dec
add
sbb
sbb
xchg
mov
lea
aam
sub
add
or
popa
and
jmp
into
xor
inc
sub
test
jmp
cltd
adc
sbb
cmc
push
mov
pop
ret
adc
inc
push
ret
sbb
stc
mov
or
mov
adc
popf
push
lods
clc
popa
jno
repnz
fistps
push
pushaw
roll
movswl
nop
mov
jp
pusha
add
xchg
pusha
add
mov
or
push
xor
pop
fwait
nop
nop
push
sbb
xchg
mov
subl
and
mov
mov
jne
mov
xchg
push
pop
ret
inc
mov
add
ret
out
test
xchg
ds
or
add
aas
test
or
test
sbb
jmp
pop
bswap
idivb
jb
add
popa
mov
out
cmp
call
dec
add
push
mov
dec
test
mov
mov
lea
test
mov
and
scas
add
jb
xor
lock
cmpl
sub
sbb
mov
and
lea
test
mov
or
enter
mov
add
dec
push
nop
call
popf
mov
mov
or
cld
fs
outsb
push
mov
pop
ret
adc
inc
push
ret
test
adc
or
jno
dec
insb
push
pop
push
and
mov
js
cmpsl
or
xor
push
call
scas
mov
mov
test
cmpsb
push
xor
sub
sub
jbe
pop
add
adc
jp
or
clc
mov
mov
dec
aad
add
fs
cltd
push
iret
pop
xchg
les
adc
cmp
and
js
adc
pushf
out
call
xor
mov
pop
je
adc
outsb
pop
sub
jp
stc
pop
movsb
jbe
push
mov
call
pop
push
adc
xor
xchg
xchg
aaa
jo
mov
ljmp
push
and
or
jp
sbb
insl
outsb
mov
xchg
push
push
adc
or
out
lods
stos
and
decb
add
adc
add
adc
mov
lret
icebp
inc
cwtl
dec
pop
push
cmc
adc
std
mov
and
mov
cwtl
cmpsb
pop
cmp
movsb
adc
xlat
add
xor
push
add
jae
arpl
xchg
lret
pusha
sbb
sub
or
loopne
inc
clc
jo
sub
sub
jp
pop
and
and
hlt
sub
mov
in
push
sbb
addr16
jle
scas
or
xchg
cmp
in
cmpsb
fsts
add
cmpsb
push
jle
dec
push
ja
mov
pop
pop
inc
mov
gs
mov
pop
xor
mov
fstl
sub
mov
es
push
push
mov
cli
push
in
stos
arpl
mov
xor
mov
aaa
xchg
dec
movzwl
ljmp
imul
shll
adcl
add
test
pop
dec
xchg
sub
incl
jmp
mov
enter
pop
in
adc
push
push
inc
test
adc
pop
xor
adc
subb
xor
lock
mov
test
or
sbb
add
adc
pop
jb
sub
inc
inc
jo
push
adc
rorb
stos
push
pop
mov
mov
add
out
pushf
or
mov
sarl
mov
adc
cmp
popa
mov
mov
dec
mov
add
jns
cwtl
pop
and
pop
sbbl
push
jbe
repnz
mov
jne
adc
push
bound
mov
not
and
popf
loope
dec
add
pop
and
pop
adc
icebp
out
sbb
lods
and
mov
adc
xchg
push
jg
dec
cmp
push
aad
mov
dec
mov
gs
and
mov
adc
out
mov
xor
dec
sbb
mov
adc
shll
loopne
xor
or
cltd
cmp
leave
jbe
pop
mov
add
std
add
jmp
push
in
sub
into
or
rcrl
data16
cltd
outsb
and
add
ret
ja
inc
push
sbb
jle
mov
add
dec
push
shll
jo
inc
push
push
xchg
sbb
pop
jb
and
pop
lods
jo
push
add
jb
das
fwait
push
hlt
mov
loop
lcall
dec
pusha
inc
pop
pop
arpl
adc
inc
jnp
pop
outsb
pop
clc
pop
jl
mov
mov
xor
in
js
and
xchg
push
orb
xor
pop
call
mov
lea
xor
dec
mov
push
sbb
dec
cmpsl
sub
imul
push
icebp
inc
dec
jb
repnz
cmpsl
pop
jno
and
adc
arpl
bound
in
inc
lods
icebp
adc
mov
sbb
test
xchg
ljmp
inc
jbe
xlat
testl
push
aas
push
and
stc
aam
sar
rolb
or
cmpsl
pop
cmpw
mov
inc
repz
dec
into
mov
xchg
cmp
adc
loopne
push
push
sub
pop
jmp
or
jo
mov
rolb
push
xchg
popf
movsl
cltd
xchg
mov
jb
inc
rorb
and
and
and
sarb
push
test
and
sub
and
push
pop
cs
cmc
pop
or
pop
adcb
popa
notl
mov
xor
pop
mov
adc
dec
mov
std
sbb
cld
imul
push
stc
push
push
xchg
lock
jne
repnz
dec
xor
test
mov
jmp
cmpps
jo
jb
cwtl
loope
push
test
enter
nop
scas
hlt
and
pop
mov
sbb
mov
lods
and
cmpb
je
lret
add
outsb
jecxz
mov
cmc
sub
std
and
jb
aas
push
mov
insb
loope
sbb
mov
iret
jge
nop
pop
dec
data16
pop
xchg
fsts
lahf
aad
pminsw
mov
lods
sub
shr
adc
xlat
lock
insl
aam
mov
jnp
fcoms
mov
mov
movsb
in
jno
hlt
negb
cmp
sub
mov
push
call
data16
jg
mov
jge
jne
data16
xor
cmp
mov
testb
sbb
adc
jmp
lret
add
dec
lds
xor
cld
adc
addl
mov
pop
movsl
add
daa
sbb
idiv
add
inc
ja
fsubrl
add
pop
nop
add
mov
test
mov
loop
xor
mov
stc
leave
jbe
sbb
adc
loop
add
cs
and
add
mov
pop
mov
rolb
aam
pusha
mov
pop
inc
xchg
xor
push
xchg
flds
push
push
fstps
sbb
add
pop
loopne
sub
mov
sbb
icebp
xor
mov
subl
enter
fiadds
test
lret
popa
nop
add
xchg
inc
shlb
test
into
and
in
fisubs
pop
testb
inc
jne
gs
stos
cltd
xor
pusha
lock
push
mov
arpl
incl
push
add
movsl
mov
dec
std
and
add
mov
sti
pop
push
test
cld
push
dec
inc
push
inc
or
push
mov
pop
pop
popf
add
sbb
ss
mov
pop
lds
sti
push
jnp
fcomps
enter
push
cmovp
insb
call
push
sarb
jge
int
ss
and
sbb
cmp
xor
pusha
sub
adc
inc
idivb
into
pop
mov
mov
sbb
ret
leave
je
add
xchg
push
push
cltd
leave
inc
mov
pop
xchg
shr
jp
sbb
pop
mov
movsl
mov
push
add
scas
mov
cwtl
dec
xchg
inc
rcrl
sbb
ja
js
mov
out
ja
add
or
push
inc
and
push
sbb
shlb
mov
xor
mov
push
ret
imul
adc
sub
adc
mov
jbe
or
mov
add
or
das
test
xchg
pop
pop
inc
cs
adc
sbb
adc
add
pop
call
jecxz
mov
sbbl
add
inc
inc
push
push
movsl
shlb
or
mov
xchg
test
std
or
rcrl
test
cmc
sbb
xor
sub
outsb
jmp
adc
push
cwtl
or
jecxz
loop
pop
ljmp
pop
push
or
dec
icebp
inc
mov
jns
icebp
sbb
adc
insb
fcompl
push
sbb
adc
mov
fmulp
sbb
pop
jmp
adc
push
cld
xchg
pop
testl
mov
test
cmovle
jnp
mov
outsl
rolb
outsl
jle
addb
ret
rcr
fwait
shrb
inc
mov
int3
leave
inc
pop
mov
add
push
dec
nop
ret
sub
jmp
and
insb
adc
cmpsl
adc
movl
xchg
jp
lea
or
fwait
add
jl
out
or
into
loopne
xor
pop
sbb
iret
add
leave
push
jne
ljmp
add
xor
push
in
leave
add
out
subb
aad
inc
sbb
add
push
lods
mov
das
xor
ljmp
inc
or
movswl
popf
sbb
test
adc
mov
leave
xor
mov
aaa
jl
repnz
adc
mov
cmp
jge
mov
das
test
or
dec
bound
int
ret
or
or
adc
mov
incb
lock
or
stc
adc
outsb
inc
sti
push
mov
loopne
test
roll
inc
jp
dec
pusha
sub
sbb
bound
pushf
mov
clc
add
lret
ljmp
mov
push
or
xchg
xchg
xchg
push
xor
dec
sub
sub
ret
mov
push
test
nop
fisttps
lcall
mov
cmc
push
add
test
xor
mov
add
nop
lods
popa
push
mov
push
push
mov
fwait
sub
mov
xchg
por
dec
andl
sbb
and
or
lret
cmpsl
pop
xor
sbb
jp
rorb
push
mov
inc
lods
sub
pop
push
pop
aam
inc
call
add
stc
xchg
xchg
xchg
cmp
add
or
cwtl
push
imul
shl
adc
xchg
subb
jnp
in
add
popf
adc
add
dec
mov
and
pop
adc
add
test
inc
rorb
call
xchg
sti
fidivs
aam
sub
and
es
lock
lahf
jmp
clc
imul
aam
int3
dec
mov
daa
push
pusha
mov
sahf
add
dec
movl
cwtl
and
cmp
add
mov
shlb
popf
nop
adc
sbb
xchg
adc
out
inc
aam
dec
xchg
out
aaa
subb
stc
jecxz
push
jb
dec
pop
lds
pop
pusha
mov
mov
and
je
cmp
or
test
movsb
aas
add
or
or
xchg
addb
add
pop
test
popf
sub
jmp
pop
ja
pop
loop
dec
mov
negb
and
cmp
xor
jmp
popf
mov
faddl
js
xor
fiadds
push
jecxz
jns
add
mov
jmp
push
adc
mov
dec
xor
and
mov
push
aad
xchg
or
movsl
adc
pop
push
icebp
decl
inc
movsb
je
and
and
and
pop
lock
test
jmp
xchg
dec
xchg
adc
push
scas
add
xchg
fisttpl
out
jae
xchg
lret
mov
push
sarb
ret
jno
popf
pop
sub
xchg
push
xchg
ljmp
cmp
mov
adc
or
aas
mov
inc
popf
movsb
lock
mov
mov
inc
out
loopne
fwait
std
es
insb
push
outsb
dec
in
rol
xorl
xchg
cmp
insb
data16
fcomi
ret
add
or
sbb
push
mov
push
or
adc
pop
and
inc
push
push
bound
lock
push
dec
push
out
insl
dec
test
pusha
and
push
push
ret
shlb
inc
push
fcmovnu
jns
jo,pt
dec
push
andb
adc
lahf
mov
inc
mov
push
push
or
mov
inc
pop
or
sbb
mov
push
or
mov
xchg
mov
inc
push
add
lcall
jne,pn
cmpsb
data16
and
push
rorl
pop
and
push
scas
aaa
sub
or
lock
or
adc
pop
iret
lea
and
pop
and
test
xor
xor
dec
cmpsl
add
push
in
add
fists
jno
test
xor
adc
pusha
iret
or
test
and
push
leave
mov
sub
dec
cmpsb
and
les
xchg
pop
add
and
sbb
xor
adc
adc
adc
pop
cs
fistl
add
and
jno
adc
xchg
enter
xor
loopne
jge
add
aas
pop
or
popf
dec
incl
stos
mov
pop
mov
sar
jmp
and
mov
xchg
adc
sub
cmpsl
jmp
les
dec
push
mov
add
andl
add
ret
mov
push
call
in
dec
dec
adc
sbb
cltd
pop
dec
data16
xor
fisttpll
mov
add
push
mov
inc
sub
shlb
mov
dec
mov
xlat
push
dec
sub
mov
mov
jge
ljmp
push
jne
cmp
jo
sbb
cmp
pusha
pusha
xlat
roll
and
test
gs
jns
add
sbb
inc
shll
mov
dec
add
pop
leave
or
add
insl
cmpsl
rcl
push
and
sbb
pop
fstpt
dec
jmp
add
smsw
xor
adc
out
mov
test
jbe
xchg
pop
mov
notb
popf
jns
xor
sbb
test
and
mov
xor
sbb
inc
mov
mov
inc
push
xchg
xor
pop
push
xchg
sahf
adc
lock
inc
xorb
fcoms
dec
mov
bound
sbb
xor
sub
inc
mov
cmp
push
xchg
call
xor
fs
xchg
mov
xor
jns
add
pop
mov
test
jecxz
mov
popf
jno
adc
sub
sahf
popa
xchg
ja
pop
rcl
enter
xchg
stos
cmp
pop
mov
and
sbb
xor
gs
mov
push
mov
sub
ret
sar
movaps
adcl
adc
push
sub
push
mov
mov
mov
roll
sbb
dec
lahf
ret
les
ss
psllq
push
jb
xchg
xor
pop
rorl
lds
ret
xor
outsl
fisttpll
jae
and
add
xor
movsl
jo
push
pop
xor
and
repz
lock
mov
leave
jno
add
cmp
jmp
sub
js
into
xor
mov
loope
adc
test
imul
pushf
xchg
push
popa
mov
mov
mov
inc
mov
add
cld
ficomps
loope
sub
xlat
cmp
dec
xor
mov
fcoml
filds
imul
fdivr
jl
cmp
rorb
je
fldl
or
call
jmp
roll
xor
xor
mov
punpcklwd
addb
mov
push
jge
xchg
je
mov
gs
imul
mov
insl
popa
mov
gs
jae
sub
arpl
sbb
clc
ljmp
mov
fs
rep
jmp
iret
mov
mov
imul
sbb
addr16
push
push
jns
jne
or
xor
jo
jae
outsb
inc
push
push
dec
sub
imul
rcll
push
insb
imul
inc
ss
cmpsb
std
cmp
push
inc
call
dec
pcmpgtb
ret
push
jb
std
adc
jb
push
cmovb
ficoms
push
push
dec
dec
punpckldq
je
mov
js
movsl
add
ss
push
jecxz
dec
add
push
mov
gs
es
mov
push
fnstcw
pop
pop
push
xchg
ljmp
add
enter
sbb
jno
add
lea
or
cmpsl
outsl
in
cmp
cmpsl
and
test
ret
add
mov
adc
sbb
adc
dec
orb
add
clc
sbb
pop
ret
push
jmp
sub
aam
fisttpl
or
push
mov
dec
xchg
mov
mov
les
pop
push
inc
push
and
pop
and
inc
pop
and
add
or
or
or
enter
xor
jno
xchg
and
imul
sub
cmp
lahf
and
adc
std
sbb
push
and
sub
push
add
or
add
adc
in
lret
add
stc
pop
js
dec
or
loope
jo
jge
outsb
push
mov
xchg
ds
inc
mov
jmp
jne
mov
xor
push
push
pop
adc
or
ja
push
jno
add
and
lock
add
jb
mov
cpuid
mov
fadds
movl
mov
mov
orb
jns
sub
rcll
jle
dec
and
pushf
mov
mov
add
sbb
or
shr
sub
inc
ljmp
add
jb
push
aaa
cli
jp
subb
gs
jge
push
subb
jbe
movsb
jl
add
push
push
mov
adc
mov
mov
sbb
add
and
add
xor
add
lea
dec
icebp
sbb
lds
and
out
pop
and
xchg
or
sbb
rcll
xchg
jns
push
ret
repz
and
xchg
mov
jmp
lret
lea
mov
iret
sahf
sub
push
inc
lcall
shrb
push
aas
sbb
jbe
adc
lods
ret
and
add
clc
test
add
scas
clc
adc
icebp
lret
jns
out
adc
or
lcall
andb
and
imul
or
add
adc
out
xchg
rolb
or
sub
adc
scas
inc
testb
cmp
stc
arpl
mov
and
dec
xchg
cli
bound
xor
xchg
test
sti
mov
adc
rcrl
adc
mov
xchg
imul
pop
jge
xor
add
push
or
or
sub
mov
rcrl
addr16
xchg
orl
divl
hlt
mov
fwait
js
or
test
and
and
enter
sbbl
aam
push
adc
fnsave
and
and
out
sahf
pop
call
sahf
aad
inc
xchg
repnz
mov
add
xchg
dec
repnz
xchg
pusha
test
xchg
stos
mov
mov
call
add
sbb
xor
ffreep
icebp
lods
adcb
add
cmovg
jge
insl
pusha
adc
adc
pop
pusha
push
jmp
pop
fldl
mov
fmull
dec
shlb
inc
mov
xchg
add
add
test
icebp
scas
int3
add
daa
and
jns
notb
add
fidivl
add
jne
lcall
jne
add
mov
xchg
or
mov
add
rcl
add
pop
jge
aam
adcb
fs
sti
or
inc
fs
cmc
call
inc
sub
pop
inc
and
in
and
shll
fsubrl
jecxz
mov
mov
loopne
xchg
jo
aam
jns
fldcw
fwait
mov
jle
loopne
sbbl
mov
aaa
add
dec
push
cmpsb
call
jge
adc
mov
frstor
sbb
xor
dec
inc
jbe
or
loopne
sub
or
add
jne
cli
arpl
pop
sub
push
add
es
leave
inc
xchg
sbb
jmp
mov
sti
jnp
cmp
pushf
rorb
dec
ficomps
dec
pop
mov
adc
cmp
ja
push
in
inc
call
add
pop
nop
iret
daa
push
adc
js
and
and
ds
pop
aas
shl
outsb
mov
jmp
js
test
sub
push
mov
les
popa
aad
ss
or
js
pusha
sub
push
adc
jno
and
xchg
ror
sbb
add
bound
sub
in
mov
loopne
sbb
or
pushf
or
popf
mov
repz
in
daa
and
pop
dec
shlb
lock
mov
cltd
push
cwtl
mov
xchg
adc
cs
cli
jns
sub
cmp
pop
adc
cmp
js
xchg
pop
lock
mov
in
lea
cltd
mov
dec
test
stos
and
mov
cmp
add
repz
push
arpl
sbb
mov
repz
add
outsl
cmpsb
mov
jge
xor
push
mov
xor
fistl
mov
fcomps
leave
mov
mov
add
addl
or
inc
mov
rcrb
inc
addr16
mov
stos
add
and
or
mov
pop
sub
repnz
out
test
or
cmp
or
out
mov
xchg
loopne
out
inc
pop
inc
dec
sbb
add
int3
dec
mull
fs
add
dec
sbb
dec
stos
aam
rorl
cld
inc
inc
pusha
sub
call
sbb
js
and
xchg
mov
clc
cvtpi2ps
stos
jle
jne
mov
pop
jae
mov
xchg
shl
adc
mov
sbb
mov
rolb
test
sti
xchg
inc
mov
cld
pop
fimull
mov
nop
mov
adc
cmp
int3
pop
les
xchg
dec
ljmp
mov
clc
addr16
fwait
cmpsb
jns
loopne
mov
into
push
mov
add
sarb
popf
subb
cmp
in
add
pop
jecxz
add
push
mov
sbb
xchg
cmp
jns
pop
fwait
xchg
fdivrl
and
imull
pop
mov
jne
outsb
cld
pop
push
or
aam
out
sub
fistl
xor
jae
mov
sti
mov
mull
jne
add
cmpsl
es
jmp
mov
adc
das
sti
xor
inc
xor
sub
sbb
sbb
xor
add
out
fnstenv
pop
mov
add
outsl
in
and
movsl
add
push
adc
mov
rolb
inc
adc
test
pop
inc
inc
sar
jnp
sbb
inc
pop
ljmp
xchg
sbb
sbb
or
add
call
sbbb
andl
and
xor
bound
xchg
push
sbb
cli
jo
jo
xchg
adc
stc
xor
jnp
adc
fwait
jb
nop
cmpb
sahf
stos
xor
and
mov
lea
push
popa
and
xor
adc
aas
es
mov
inc
pusha
test
push
add
mov
lcall
cmp
cmp
mov
pop
mov
inc
inc
add
adc
movb
push
sbb
insb
sti
jno
sbb
or
jnp
in
or
inc
orb
sbb
adc
movsb
add
clc
sub
unpcklps
cmp
xchg
sar
in
test
push
xchg
cmp
jbe
and
or
xchg
sub
mov
pop
lret
hlt
or
or
adc
xchg
xchg
and
add
fcmovbe
inc
xchg
popl
cmp
shlb
call
add
push
cld
xchg
pop
insb
inc
sbb
cs
stos
dec
inc
add
enter
dec
imul
jge
jmp
mov
fcompl
xchg
sub
sub
xchg
sbb
loopne
sbb
and
add
push
andl
ss
xor
dec
stos
aad
and
mov
jae
mov
lcall
mov
and
or
rclb
inc
push
decl
xorb
pop
scas
xchg
testb
jo
ficomps
ds
add
movsb
js
call
cmp
sbb
sbb
xchg
lcall
pop
mov
aam
jg
add
ret
stos
int
jbe
push
jge
add
fucomi
movl
addr16
bound
rcrl
into
mov
add
jae
pmaddwd
divb
mov
and
cmpsb
jmp
repz
loope
into
lcall
mov
pusha
outsl
insb
add
test
mov
orb
inc
jae
movsl
sub
pushf
out
sbbb
in
sub
sti
ss
test
outsb
bound
jle
pop
arpl
and
push
xor
icebp
dec
loopne
call
in
lods
xchg
stos
mov
icebp
jmp
sti
xchg
and
je
sub
lea
lret
pop
cmp
cwtl
jno
pop
mov
lock
shl
jmp
push
cmp
cmc
sbb
in
adc
xchg
hlt
sti
in
and
sbb
pop
xor
out
out
dec
push
sbb
jle
push
in
push
mov
insl
pop
mov
adc
add
pop
les
rep
adc
xchg
adc
fldl
add
mov
loopne
push
cwtl
mov
pop
in
mov
nop
add
out
add
pop
and
add
popf
push
iret
scas
das
int3
xorb
in
jne
adc
fcomi
inc
pusha
insb
and
mov
cwtl
sub
xlat
jecxz
lock
pop
jns
outsb
in
gs
fldl
or
pusha
inc
cmpsb
add
pop
adc
add
adc
js
jae
in
mov
dec
in
stos
pop
icebp
dec
popa
mov
sarb
jbe
pop
pop
add
out
or
xchg
cwtl
xchg
loop
dec
rclb
add
push
enter
add
cwtl
inc
xchg
mov
or
xchg
sbbb
aad
or
aam
fnsave
add
lea
into
inc
hlt
add
fs
fadd
test
mov
and
push
inc
cwtl
mov
and
stos
dec
adc
fstpl
xchg
cmp
xor
inc
fsubs
cs
push
int
pop
mov
adc
mov
jbe
out
xor
sub
cld
add
imul
xchg
pusha
jmp
filds
inc
nop
mov
inc
sub
adc
fsubs
add
lds
cmpsb
adc
mov
lret
add
bound
jnp
jae
add
incl
in
aad
mov
cmp
sbb
mov
adc
out
or
xor
testl
add
jg
mov
out
shl
sub
ret
outsl
rcll
mov
cmp
and
test
adc
mov
xadd
pop
sahf
std
and
xor
out
cmp
cmpsb
lret
mov
movsl
fistl
or
out
add
addr16
lock
sbb
nop
sub
fwait
add
lcall
add
out
ret
sbb
mov
cwtl
and
push
sahf
add
jbe
rolb
popf
jnp
mov
xor
test
jecxz
dec
mov
repz
add
rcrl
repnz
add
pop
sbb
pop
rclb
mov
rclb
xchg
lods
dec
orb
jnp
add
mov
jmp
out
fildl
cmpsb
sbbb
cmp
jo
aam
fnstenv
daa
cmp
jge
add
repnz
lret
lods
pop
inc
decb
adc
pop
cmpsb
add
daa
cmp
cli
inc
cmp
push
adc
mov
sub
lds
in
jecxz
loop
out
cmpsl
inc
add
jnp
and
sub
xchg
sahf
push
popf
add
out
push
adc
paddusb
testb
cmp
cld
rep
popa
scas
aaa
nop
mov
out
fcoml
mov
or
jns
in
in
subb
push
xchg
int3
sti
pop
les
rclb
mov
mov
sub
fcomps
leave
add
in
cli
popa
cmp
pusha
test
sbb
scas
xchg
jo
mov
fwait
push
fstpt
add
dec
in
aas
add
jle
inc
mov
push
push
leave
inc
inc
mov
outsb
pusha
mov
cmpb
roll
fdivr
es
push
fs
dec
mov
ds
add
mov
cwtl
sahf
pop
dec
hlt
or
or
jp
or
in
push
or
aas
imul
hlt
xlat
jb
add
out
mov
dec
std
movb
sub
rcl
mov
loopne
push
jae
xchg
dec
cmpb
add
nop
or
out
insb
inc
adc
loopne
or
lahf
ljmp
nop
push
test
lds
or
lcall
pop
push
int3
add
push
inc
subb
cwtl
pop
les
add
add
mov
mov
jl
pusha
pop
rcr
popf
mov
adc
mov
pusha
sbbb
or
mov
popa
cli
adc
sbb
push
daa
bound
inc
shl
cmp
xchg
add
pusha
fadd
adc
sbb
f2xm1
and
pop
fcompl
xchg
and
mov
and
xor
dec
aam
cltd
cmp
cmp
movl
test
sbb
or
mov
add
ds
fisttpll
push
xlat
inc
add
mov
mov
jecxz
bound
add
pushf
adc
dec
mov
pop
xchg
sbb
or
mov
repz
mov
fsts
shrb
and
dec
push
xor
pop
int3
cmp
jmp
pop
das
inc
inc
cmpsb
int
xor
sub
or
dec
lcall
add
sbb
jnp
jp
add
jno
mov
add
dec
shl
xor
fwait
shlb
daa
fidivs
push
dec
cmp
pop
int
pop
fmull
subb
push
stos
add
mov
sbb
xor
add
aas
and
push
dec
xchg
jl
or
add
scas
fs
xchg
push
out
add
xchg
mov
push
add
dec
mov
mov
loopne
lret
inc
add
xor
rolb
inc
add
add
xor
cmp
cwtl
mov
jne
shrb
incb
dec
xchg
js
jo
add
pop
shrb
pop
pop
or
loop
cmpsl
xor
adc
sub
dec
faddl
gs
adc
fisttpl
add
jb
and
mov
aam
pop
mov
rolb
fs
pop
xchg
dec
push
pop
push
mov
loop
cwtl
add
inc
xchg
mov
in
or
mov
push
mov
pushf
xchg
rolb
insb
cli
movsl
adc
js
jecxz
mov
cwtl
rcr
pop
pop
and
pop
or
icebp
adc
inc
add
iret
mov
pop
or
pop
in
sub
shll
or
addl
jg
outsb
das
js
hlt
mov
sbb
mov
sbb
ss
adcb
jge
cmpl
sbb
lret
add
pop
push
or
loop
jmp
je
sub
and
push
aam
add
inc
cs
add
inc
std
mov
nop
jbe
xchg
pop
inc
sti
push
aad
mov
fadds
sarl
push
ljmp
sbb
pop
clc
aaa
je
test
lcall
mov
add
sub
xchg
push
cmp
and
add
add
insl
add
loopne
mov
add
lcall
lahf
or
or
mov
add
pusha
aaa
das
xchg
nop
test
add
cmp
add
enter
jle
mov
addr16
add
jo
jno
push
jl
movsb
mov
stc
clc
push
sbb
jg
ljmp
or
icebp
addr16
dec
xor
fistps
popf
adc
outsb
xchg
daa
mov
rcr
jl
sbb
fwait
or
addl
dec
pop
adc
sbb
fnstsw
mov
add
fwait
test
pop
popa
sbb
cmp
add
adc
mov
aam
pop
xchg
sub
or
and
cmp
scas
stos
push
popa
loopne
add
xor
or
mov
cwtl
sbb
and
jnp
pop
and
mov
iret
push
xchg
bound
loopne
shrl
addb
in
sub
hlt
sbb
int
testb
repz
lods
adc
lods
pop
and
pop
in
mov
cmp
add
push
mov
fadds
jle
add
inc
sbb
xchg
addb
fwait
dec
inc
cmp
sarl
inc
ret
pop
jo
pop
add
push
or
xchg
fnstenv
je
cs
dec
jne
or
push
sub
in
sbb
mov
dec
adcb
jle,pn
sbb
loopne
shrl
xchg
pop
cs
push
add
outsl
pop
cmp
nop
mov
jg
cmpsb
or
add
in
sub
icebp
addl
pop
addr16
jmp
jo
jl
repnz
and
xchg
and
dec
test
cmc
mov
out
jge
out
cmp
adcb
call
mov
inc
test
cs
ja
add
jb
push
jae
xor
int
adc
or
jo
repnz
add
cmpsl
jge
mov
nop
imul
inc
or
mov
fsubrs
mov
nop
push
imul
or
adc
add
imul
pusha
hlt
or
or
test
sbb
push
arpl
jno
scas
pop
add
pop
adc
xor
or
cmpsb
sahf
cmpb
icebp
jge
rdmsr
inc
mov
mov
into
cltd
int
or
sbb
pop
xor
dec
mov
xchg
ja
mov
lahf
ds
ret
mov
adc
xor
imul
pusha
loopne
mov
inc
pop
testl
sarb
cmp
mov
jae
xchg
mov
in
jl
out
nop
inc
loopne
xchg
flds
sahf
mov
arpl
in
xchg
mov
sarb
mov
xchg
and
sub
push
push
enter
add
mov
ss
xchg
mov
mov
mov
std
mov
xchg
add
adc
mov
lds
les
aas
sub
push
add
pop
and
or
or
jg
rolb
outsl
cs
test
mov
pop
out
push
push
nop
and
cli
mov
out
pop
pop
stos
dec
jb
das
lock
stc
aaa
add
push
adc
aam
push
add
lods
push
jp
push
push
sub
hlt
push
mov
sub
or
sub
fcomps
loopne
sub
leave
neg
cmp
and
push
lods
sar
rcrb
pop
movsl
cmp
jne
xchg
popf
mov
mov
pop
mov
cwtl
fisubrl
add
aam
mov
cli
orb
orl
dec
pop
add
cmp
loope
or
sub
pop
or
loop
xor
or
jnp
test
mov
mov
cmp
sub
ficoms
push
jl
arpl
notb
inc
pop
add
loope
lahf
add
jmp
and
lods
adc
inc
fdivrs
dec
sbb
push
sub
fsubrp
add
push
enter
cli
sbb
sbb
pusha
in
inc
mov
int
sbb
lahf
in
or
jge
pop
push
lods
sbbb
mov
ffreep
and
test
sub
pop
in
scas
adc
xchg
jo
xor
out
dec
jns
sub
jp
insl
out
xchg
mov
es
jge
add
dec
push
mov
jnp
into
add
xor
out
mov
cld
xchg
nop
loopne
add
es
leave
jns
jae
add
repnz
add
and
and
jecxz
sub
fdivp
xor
add
loop
xor
add
pop
orb
testb
jg
adc
mov
or
xor
mov
mov
adc
push
jo
adc
and
and
sarb
adc
push
sahf
xor
je
add
stos
inc
push
ds
add
mov
push
add
iret
fnstsw
movb
xor
sub
mov
lret
adc
rcrb
les
push
ja
inc
cmp
xor
adc
mov
pushf
call
loopne
pusha
pop
add
cmpsb
mov
mov
sbbb
and
sbb
inc
fdivp
lods
fs
fwait
push
mov
jg
push
in
insl
arpl
add
and
rclb
mov
fcomps
jmp
inc
sub
fidivl
push
adc
into
repnz
cmp
movl
mov
shll
inc
jb
rcpps
dec
mov
push
add
int3
xor
pop
pop
nop
cmp
mov
aad
aaa
stos
movsb
sbb
ficompl
and
jae
in
xor
iret
mov
addr16
scas
sub
push
cmp
xchg
mov
aam
xor
test
insb
cli
add
xor
andb
or
pop
lock
cltd
idiv
add
pop
jno
and
push
ret
fwait
add
add
repnz
bound
jl
fcomps
cmovp
enter
add
add
ja
mov
add
in
push
cli
mov
inc
loopne
mov
test
test
iret
repz
int
push
mov
adc
mov
xor
add
mov
cli
negl
cltd
mov
add
and
or
test
out
mov
outsl
scas
fwait
nop
mov
test
add
adc
add
or
enter
push
insb
fwait
rclb
jae
jl
sub
jns
popa
add
inc
sbb
mov
dec
mov
pop
add
fwait
mov
lahf
aaa
fidivrs
pop
adc
enter
cmp
xchg
add
lea
psrld
stc
or
jno
test
xor
and
into
xchg
add
aam
inc
lcall
jne
add
or
cld
rolb
xchg
outsb
push
out
sarl
xor
sbb
sbb
sub
les
inc
cmpb
add
fwait
pop
jne
or
mov
pushf
xor
lea
je
dec
and
add
dec
out
ds
jns
in
push
aaa
mov
mov
pop
inc
movsl
mov
ja
enter
aaa
mov
movsb
add
pop
scas
push
es
sbb
lock
pop
mov
pop
cmp
scas
icebp
nop
insl
adc
sub
push
lock
pop
mov
push
outsb
fsub
push
lcall
inc
lahf
jmp
xchg
movsb
add
jge
mov
insl
sub
sbb
sbb
je
add
adc
push
aaa
jb
add
sub
push
push
add
repnz
mov
popa
sub
dec
lods
add
in
insb
add
xchg
or
push
lods
jmp
fucomi
mov
sub
add
stc
cmpsb
outsb
add
ret
mov
mov
iret
pop
dec
out
ss
add
inc
mov
add
lock
pushf
clc
rorl
mulb
jnp
add
xor
inc
popa
psubq
cld
add
pop
or
mov
adc
push
dec
orb
mov
aas
jo
mov
dec
jae
add
dec
push
add
xchg
loopne
push
shrb
sbb
push
dec
test
mov
xor
test
rcrl
cltd
xchg
fdivrs
xor
add
mov
cmp
testl
ret
aad
fcompl
cmp
or
jl
jle
repz
pushf
add
cli
jbe
pop
aaa
cs
adc
mov
jo
sti
mov
sbb
lcall
push
xor
mov
push
xor
inc
cmpsl
dec
bound
jae
je
add
fidivl
or
add
push
mov
or
lods
stc
mov
or
mov
int3
pop
cmp
and
add
or
add
std
and
cwtl
test
or
mov
test
jl
adcb
jmp
aaa
sahf
add
push
sbbb
adc
aam
or
dec
fidivs
or
fs
mov
cmp
icebp
test
dec
inc
jb
push
cmc
add
dec
rcll
mov
in
movsb
cmpl
mov
xor
push
mov
inc
xchg
adc
outsl
js
jns
imul
lea
adc
add
out
pop
push
scas
jne
add
xchg
jb
lods
cltd
bound
aam
notb
sub
xchg
xor
sub
lret
push
cli
sti
adc
sbb
inc
mov
stos
adc
adc
insb
repnz
push
aam
xor
not
and
and
notl
xor
ret
rorb
cmc
inc
test
jmp
or
and
fcoms
pop
and
movsl
fistl
inc
test
inc
insl
ret
inc
mov
dec
nop
dec
sub
nop
mov
daa
std
and
and
ret
adc
out
in
repz
rcl
and
loopne
enter
cli
adc
mov
or
inc
lret
or
and
and
push
xor
or
add
xchg
insl
nop
sbb
ret
jecxz
cmp
dec
stos
xchg
xchg
push
adc
enter
jnp
js
add
gs
push
or
mov
jns
pop
in
iret
sbb
mov
sbb
add
lret
movsb
fdivl
inc
jae
leave
xchg
cwtl
mov
sub
sbb
daa
popa
je
fdivp
cmpb
mov
or
in
xor
add
out
push
mov
inc
rorb
mov
pusha
sahf
cltd
mov
call
or
pop
lret
dec
int3
sbb
sub
adc
add
dec
ret
nop
call
loope
in
fstps
add
inc
mov
sub
inc
adc
cltd
fwait
add
pop
add
in
cwtl
aas
andb
fnstenv
add
imul
add
xchg
mov
jbe
inc
mov
int3
and
mov
psllw
push
push
pusha
psubw
lds
ss
mov
andl
lret
add
ret
adc
js,pt
jne
add
cmp
shlb
test
mov
add
repz
in
bound
aam
es
add
or
and
in
add
xchg
dec
cmp
mov
mov
xchg
jnp
mov
or
push
lods
in
jecxz
hlt
mov
shlb
aad
lods
xchg
pop
cmp
enter
add
fidivrs
add
into
inc
jns
xchg
mov
pusha
jo
lds
std
push
jnp
pop
cwtl
xor
inc
add
jmp
bndstx
add
mov
lret
pushl
pusha
incb
or
mov
sbb
add
int3
mov
loop
inc
dec
cld
jb
fmull
popf
out
repz
arpl
sbb
cmp
add
mov
and
push
test
xorb
mov
pop
inc
jae
add
std
dec
ds
adc
loopne
call
lcall
jbe
xor
sbb
add
and
es
push
call
les
push
push
je
enter
mov
addb
mov
and
push
add
push
test
sbb
js
icebp
lods
add
cmp
and
inc
cmp
cmpsl
inc
inc
jg
mov
adc
pop
add
in
jae
jge
add
and
lods
and
popa
add
inc
sti
push
dec
adc
in
mov
pop
add
pop
sbb
or
nop
dec
push
jge
or
shll
call
mov
add
dec
mov
test
aas
pop
lds
andb
add
push
inc
call
xabort
add
fwait
jno
out
mov
sub
loopne
inc
push
add
inc
cmp
je
add
andb
ret
pushf
aas
adc
test
push
add
mov
add
jbe
fwait
jae
pop
arpl
xor
xchg
add
push
testb
and
sbb
sbb
xchg
push
out
movsl
add
int3
sarl
add
ljmp
cs
add
adcb
push
inc
dec
sub
pop
dec
add
jo
cmpsb
cmp
mov
gs
cmp
jmp
adc
sub
push
xchg
mul
add
jnp
popa
cwtl
fiaddl
rolb
inc
mov
leave
cwtl
xchg
fldl
pop
rol
stc
mov
imul
jl
repnz
inc
lea
adc
test
xchg
xchg
add
mov
loop
add
in
lahf
or
jg
add
xchg
bound
roll
cmpsb
mov
mov
fldenv
lock
add
fmuls
cmp
mov
lret
add
xchg
lods
out
push
add
jp
or
lods
add
mov
mov
xchg
add
sbb
push
jbe
insb
or
sub
add
iret
xchg
cmp
hlt
sbb
push
mov
add
push
sbb
lods
adc
xchg
sbb
add
stos
add
pop
mov
dec
ret
repnz
cld
jae
xchg
int
mov
jo
inc
push
pop
pop
add
pop
mov
jbe
ror
add
inc
lcall
ljmp
movsl
loop
add
stc
sub
jle
mov
mov
fldl
testl
roll
pusha
pop
lods
add
insb
out
add
adc
xor
cmc
pop
lahf
ja
or
aad
dec
jg
push
xchg
xchg
add
xor
andl
sahf
and
lds
cmp
dec
or
cmp
add
sbb
imul
cli
push
sbb
mov
test
retw
push
shrb
sarl
push
lea
sbb
jno
xchg
es
lock
clc
inc
push
lret
add
leave
jmp
xchg
cmp
xor
in
nop
in
mov
rclb
pop
push
sarb
add
push
mov
xor
out
add
inc
cmpsb
mov
mov
add
sub
sbb
jl
incb
in
jmp
push
xor
outsb
clc
sbb
mov
inc
lds
jp
jae
pop
pushf
and
add
stos
arpl
ret
add
cwtl
mov
add
out
jmp
imul
add
xchg
mov
sbb
xchg
push
les
fnsave
and
jo
inc
mov
enter
rorb
mov
repz
adc
add
cltd
faddl
push
jmp
rol
lcall
jl
out
sub
add
pusha
xlat
xchg
cwtl
adc
add
dec
sti
clc
and
inc
add
pushf
sub
lock
add
inc
xchg
lret
insl
xor
adc
add
mov
xchg
pop
inc
pop
or
loope
out
sbb
mov
sub
in
je
cs
add
xchg
das
sahf
sbb
push
and
ljmp
bound
insb
inc
ficompl
add
pop
enter
std
and
add
mov
cmp
and
add
jmp
push
cmc
pop
pusha
dec
sub
fwait
or
add
lds
add
insl
and
cmpsb
adc
aaa
pop
push
pushl
push
inc
xchg
dec
add
push
add
test
ud2
insl
stc
shlb
push
push
pop
cmc
add
icebp
fbstp
inc
and
sbb
scas
stos
and
sub
adc
cmc
iret
gs
xor
in
xor
mov
std
push
rolb
xor
jbe
cmp
cmp
push
sbb
int
dec
aas
add
or
xchg
or
and
pop
pop
and
jno
dec
mov
test
mov
push
bnd
test
push
add
cwtl
jl
pusha
inc
in
test
push
bound
cmp
push
push
lcall
aam
cmp
int3
adc
shl
cmp
fucomip
sub
movsl
push
push
int3
mov
nop
sbb
sbb
scas
add
jnp
jg
sbb
mov
movsb
inc
mov
xor
loop
in
pop
inc
test
sub
dec
or
mov
add
data16
xlat
xchg
add
loopne
add
xchg
repnz
shrb
push
inc
in
subb
les
cmp
hlt
or
sbb
push
mov
lret
inc
pop
mov
or
test
or
adc
and
add
sub
sti
add
or
sbb
pop
sbb
adc
outsb
push
ret
insb
or
cmp
bound
adc
flds
pop
mov
add
cmp
inc
cli
add
out
pop
xor
fmul
mov
mov
pop
int
mov
lret
cmp
call
cmp
sar
int
sahf
dec
add
popa
xchg
loopne
dec
les
pop
subl
int
movsb
push
jge
and
sets
scas
jmp
pushf
insl
es
lret
sarb
popl
mov
add
cs
add
sbb
mov
or
cli
gs
movl
lcall
loope
add
xor
mov
mov
popa
loope
xor
cwtl
and
sub
jg
mov
add
mov
push
and
add
adc
js
in
add
cmp
lea
test
pop
and
inc
add
pushf
je
push
inc
out
jecxz
and
mov
lds
cld
decb
daa
adc
mov
sahf
mov
jp
pop
add
push
movsl
movsb
test
xorb
xchg
add
adc
adc
lods
inc
mov
push
jne
jo
popf
add
daa
sbb
rclb
in
imul
pusha
sbb
sbb
into
push
push
test
and
pop
mov
out
testl
lcall
add
lock
or
mov
arpl
xor
add
fdivrl
outsb
add
dec
test
add
xchg
and
dec
and
bnd
addr16
fdivrl
xchg
pop
insb
popl
lahf
mov
dec
hlt
rcr
xor
gs
add
decb
inc
mov
mov
sub
add
aas
pop
add
inc
loopne
or
scas
mov
push
fdivp
cmp
push
jecxz
push
sbbb
push
bound
subl
pop
jmp
mov
arpl
mov
add
jne
dec
sti
jmp
push
lock
das
dec
loope
or
or
sar
mov
les
inc
int
xchg
jns
jno
sub
inc
loope
adc
xchg
mov
or
push
add
repnz
in
lea
sbb
jg
gs
mov
imulb
lods
pop
sbb
loopne
stos
add
add
push
pusha
gs
sub
cmp
iret
fstpl
nop
add
not
loope
pop
add
mov
push
mov
int3
cmp
insl
out
js
or
jne
push
in
add
inc
divb
pop
sbb
or
mov
sub
mov
mov
xchg
adc
or
daa
cmp
and
or
mov
push
jb
xchg
fiaddl
inc
cmp
cmp
hlt
repnz
mov
iret
jbe
push
pop
xlat
out
add
insb
test
add
je
lret
test
out
repz
fwait
scas
test
inc
add
mov
and
sub
testl
push
add
rolb
shlb
aam
add
xor
or
and
jb
les
mov
xor
movsb
in
ljmp
ss
shrb
and
jp
out
clc
xor
add
add
mov
js
pop
xor
fmull
daa
aam
jge
cmp
cmp
pop
aaa
mov
jb
sbb
ret
cmp
in
mov
aaa
push
sbb
mov
sub
jbe
inc
add
out
pop
push
adc
inc
sbb
das
inc
or
mov
lahf
pop
mov
dec
lcall
jne
or
push
fdivl
add
ja
xlat
add
ret
xor
rclb
mov
pop
and
mov
jl
gs
sbb
in
xorl
push
xor
xchg
mov
add
dec
fidivrl
add
sub
add
data16
fdivrs
jbe
hlt
pop
add
pop
movsb
aam
enter
dec
pop
mov
out
nop
insb
or
test
xlat
push
pop
xor
icebp
xchg
cmp
clc
cltd
sub
int
mov
lea
push
pop
mov
add
xor
imul
shlb
lods
mov
jne
push
inc
das
xor
cmpsl
cwtl
es
sbb
push
jbe
jmp
imul
outsl
mov
dec
dec
int3
add
sbb
add
pop
mov
mov
loopne
inc
inc
jae
mov
jae
ret
int
push
add
xchg
adc
arpl
bound
bound
jl
cmp
sbb
lock
out
add
sti
hlt
xchg
sub
add
test
mov
xlat
xchg
ljmp
add
out
fnsave
push
add
ljmp
mov
ficoms
add
das
mov
in
test
shrb
pushf
inc
cmp
lods
fs
test
lods
popa
add
xchg
xchg
popa
test
dec
ds
clc
sub
xchg
jp
loopne
add
fists
in
out
icebp
dec
popf
push
mov
adc
std
popl
and
or
sub
add
xchg
pop
or
pop
clc
dec
dec
push
xor
mov
push
push
xchg
ljmp
ss
mov
rcll
sbb
add
mov
dec
adc
jle
stos
cs
cli
in
jg
popa
pop
pop
dec
or
sub
dec
cmp
aaa
cld
add
stos
outsl
fcmovnu
add
push
mov
inc
pop
and
add
arpl
rclb
mov
cmp
or
sbbb
push
fadds
push
dec
addr16
loopne
in
cmp
mov
std
xchg
sti
mov
xor
lret
add
mov
inc
cmp
sub
cmp
mov
push
call
and
movsb
or
cmp
lret
add
js
ja
enter
add
lret
adcl
fidivl
and
push
roll
jge
call
dec
pop
movsb
jno
cmpb
out
push
jnp
pop
or
out
add
int
cli
stc
sbb
jno
sub
arpl
add
jecxz
mov
fiadds
jmp
xor
cld
dec
add
sub
or
pop
pop
push
add
cmpb
fisubrs
inc
lds
push
adc
mov
add
push
jb
add
outsb
push
je
lret
push
mov
add
dec
gs
push
pop
jno
add
push
mov
stc
push
loopne,pn
int3
pop
mov
add
dec
fidivrl
movsl
shrl
mov
insb
jae
fmull
cmp
push
test
sbb
das
stos
loopne
loopne
push
jno
loop
dec
mov
pusha
rcr
mul
lock
inc
ret
xchg
rclb
test
xor
or
cli
pop
hlt
jb
fwait
cs
fsub
add
xchg
jbe
add
fidivl
addb
mov
iret
mov
shrl
sbb
jmp
nop
xor
push
add
test
jp
push
outsl
pusha
mov
add
cmpsb
fidivrs
or
cmp
int3
and
cs
rclb
add
cmp
inc
cmc
push
arpl
and
add
jp
add
and
xchg
xor
jge
sbb
mov
add
adc
mov
aad
inc
cmp
or
mov
pop
jmp
xchg
out
jecxz
lahf
das
int3
mov
pop
cmp
mov
fsubl
add
add
xchg
add
jecxz
push
add
jmp
pop
xor
hlt
add
or
cmpsl
add
sub
add
push
mov
adc
shr
add
add
das
shr
call
leave
insb
into
push
adc
js
mov
in
add
and
xchg
ret
xchg
mov
jl
lahf
mov
dec
gs
add
int3
bound
sbb
int
outsl
mov
add
jo
sub
or
fwait
jle
dec
int3
adc
ds
into
mov
add
pop
adc
mov
in
pusha
shlb
and
popa
clc
add
cmpsb
movb
ret
or
imul
add
xor
enter
rcll
jp
add
xor
xchg
repnz
lret
xor
xor
jo
xchg
cwtl
sub
stos
add
test
aaa
into
add
adc
add
lea
icebp
inc
push
push
rorb
jg
imul
inc
out
mov
repz
gs
scas
and
add
mov
inc
jo
xchg
cli
test
lcall
cmp
pop
or
add
in
jg
and
jle
mov
sbb
out
outsb
cmp
adc
xor
pop
inc
push
inc
jmp
add
pop
scas
mov
xchg
add
out
adc
cli
inc
xchg
subb
ja
rorl
fiadds
inc
and
dec
mov
movsl
ret
testl
xor
sbb
in
les
mov
add
jmp
add
xchg
iret
xchg
lcall
push
adc
sbb
stos
pop
fiadds
cwtl
shll
jno
dec
in
xor
mov
enter
add
daa
sub
test
add
xlat
iret
fisubrl
push
add
pushf
sub
pandn
mov
sti
or
mov
push
cli
and
or
fcom
es
add
inc
clc
test
pop
sbb
inc
icebp
arpl
fwait
pop
mov
shrb
imul
dec
sbb
add
cmc
rolb
mov
or
nop
dec
aas
jg
sbb
seto
in
ja
xchg
xor
adc
movl
xlat
rorb
mov
and
mov
std
orb
mulb
out
pop
clc
push
pmullw
loopne
pop
sahf
adcb
push
nop
daa
rorl
loopne
mov
xor
push
push
arpl
sub
cmpsl
or
out
scas
jnp
dec
xchg
push
xor
pusha
test
cmp
push
fistpll
shll
mov
notb
aas
xor
jne
inc
rorb
dec
mov
add
xchg
call
pop
adc
jbe
les
stc
jne
or
lods
xchg
jp
iret
out
fstpt
cltd
push
add
decb
jno
test
add
mov
sbb
jp
add
dec
fstps
cmp
mov
push
adc
xchg
xchg
in
lods
add
and
mov
imul
push
add
pop
sbb
iret
sarb
div
add
push
adc
mov
add
sbb
mov
add
cmp
dec
out
add
sbb
and
pop
add
mov
add
inc
orb
sub
fadds
in
fistpl
mov
call
pop
stos
into
sbb
mov
inc
leave
sub
add
pusha
mov
clc
inc
pop
cmc
in
pop
add
adc
push
cs
das
enter
icebp
xor
rcll
push
push
jl
xchg
loopne
pop
jl
popf
xor
mov
in
push
add
test
mov
ljmp
stos
out
adc
add
je
mov
or
dec
mov
sub
pop
dec
adc
gs
add
add
jnp
pop
call
push
insl
mov
enter
and
mov
xchg
push
add
ds
or
inc
outsl
or
in
push
adc
sbb
inc
mov
insb
scas
push
fisttpll
movb
cld
push
iret
add
cmpsb
mov
sub
icebp
stc
mov
jbe
xchg
xor
add
sbb
outsb
sbb
in
mov
lods
cs
add
not
cmp
mov
jg
xchg
cmpsb
or
nop
jno
and
and
cmc
hlt
cmpb
out
inc
mov
cmp
add
cmp
out
cmp
sbb
repz
push
push
xor
arpl
dec
inc
insb
xor
insb
movb
jge
mov
inc
pop
push
fidivs
pop
mov
add
xlat
ret
and
pop
add
test
cmp
pop
orb
or
movsb
inc
dec
jle
xchg
add
adc
and
movsl
mov
cmc
mov
mov
insl
js
push
test
jp
lret
inc
test
data16
test
push
cmp
add
cmpsl
fsubrl
fstpt
sub
sub
adc
movsb
add
jle
add
mov
inc
pop
xlat
add
xor
aam
jl
xchg
and
jmp
into
outsb
push
push
fwait
or
add
mov
sbb
or
data16
pop
add
lods
mov
popa
aas
sub
icebp
xchg
and
cmpsl
or
mov
push
mov
mov
cmp
jmpw
in
xchg
or
mov
mov
xor
and
pop
sub
fisubs
xchg
nop
movl
sub
aas
pop
add
es
nop
sub
mov
sub
mov
mov
cmpsl
hlt
arpl
add
push
sahf
add
mov
sahf
add
js
xchg
mov
cmpsl
adc
cld
je
rclb
subb
or
push
stos
xor
pop
imul
and
add
popf
sub
jb
pop
test
repnz
and
cmp
aam
jp
xchg
lock
or
iret
lcall
mov
mov
sarl
into
fadds
aam
sub
inc
dec
jno
jg
lret
sbb
ljmp
out
cmpsb
mov
push
jle
int3
and
loopne
repnz
cmp
mov
sub
adc
test
lock
fstl
mov
sbb
cld
daa
cwtl
lock
sbb
je
add
mov
mov
lcall
imul
push
or
ss
jo
aas
test
xor
dec
add
aam
lods
movsb
pop
pop
movntps
push
and
dec
jbe
add
lahf
sbb
xchg
rolb
xor
mov
mov
test
shl
clc
orb
sub
add
jo
out
cld
add
mov
out
inc
push
xchg
add
push
pusha
mov
add
jne
lahf
jnp
mov
int3
push
sbb
sbb
fisttps
aaa
pop
lds
sbbb
pop
add
call
sbb
or
popa
outsl
pop
add
mov
or
mov
pop
xchg
test
mov
push
cs
rcll
push
fmul
add
movsl
rcrb
add
jne
or
mov
jge
dec
psrld
sub
lods
fcoms
out
sbb
jns
repnz
push
rcr
fstl
aam
inc
ja
jae
incb
or
std
ret
shlb
xchg
je
hlt
fneni(8087
call
add
out
stc
xchg
push
add
lds
jge
xchg
add
sub
les
ss
xchg
xor
mov
call
add
dec
and
cld
add
mov
dec
lods
add
imul
xchg
xor
dec
inc
add
add
add
addr16
aas
pushf
jb
xchg
mov
sub
aam
fld
iret
jns
and
push
cmp
mov
cmpsl
lret
shlb
bound
and
pop
imulb
sbb
add
jle
dec
and
and
out
jmp
sbb
add
cli
add
dec
and
fcmovb
add
sub
leave
aad
adc
test
testl
bound
xchg
cmp
pushf
jmp
mov
popa
mov
test
mov
add
mov
pushf
xchg
or
test
jmp
clc
add
jnp
or
mov
mov
daa
lods
stos
cli
testl
aas
xor
fldcw
insl
addps
sbb
aaa
lods
pusha
dec
mov
dec
sub
or
cmp
rorb
and
fildl
pop
add
addr16
popa
inc
jmp
pop
repz
hlt
dec
sbb
clc
lahf
subb
add
lock
lcall
or
cmp
add
xchg
cwtl
pop
or
pop
push
adc
lea
add
jns
aam
shrb
sahf
aaa
xor
sbb
iret
aas
add
jbe
dec
jb
imul
jo
ja
loopne
sub
xor
add
xchg
mov
out
jl
imul
add
test
sub
ret
cld
stos
or
inc
inc
adc
xchg
xchg
pusha
outsb
nop
cmp
dec
les
pusha
xchg
xchg
xor
fdivl
and
fadd
pop
cmpsb
mov
test
cmp
in
pop
adc
mov
dec
cwtl
jns
inc
inc
clc
call
push
movsb
cmc
jge
scas
ds
sub
inc
add
ficoml
nop
mov
sbb
push
adc
sahf
rolb
add
pop
lret
jne
pushf
or
sbb
sbb
daa
push
movsb
add
sahf
popa
mov
out
cmpb
enter
pop
push
sub
es
adc
test
rcl
sub
add
add
movsb
xchg
int3
idivb
add
loop
mov
add
jns
push
pop
mov
jecxz
sbb
sub
dec
mov
add
push
fmul
test
cmp
xor
out
sub
fs
jbe
push
cli
fcompl
add
test
or
shl
add
mov
pop
mov
imul
nop
add
insb
data16
and
add
andl
gs
xchg
rclb
insl
add
mov
cwtl
mov
xchg
incb
jle
dec
je
addb
in
cwtl
jbe
jg
jl
add
stos
cmp
out
add
shll
or
call
cmp
mov
aaa
lock
add
jecxz
shll
pop
subl
pop
sbb
mov
add
pop
xor
std
mov
nop
xlat
add
push
addb
pop
ret
sbb
cmp
test
fists
sbb
aam
clc
into
xchg
outsb
sub
xor
jbe
mov
divb
push
push
sub
add
or
std
inc
add
stos
in
pushf
hlt
pop
nop
addl
cmp
mov
movsl
cmpsb
pop
int3
jbe
add
mov
add
mov
push
icebp
rcrb
mov
mov
iret
add
scas
dec
adc
lahf
lock
add
addr16
jge
add
or
xchg
push
lahf
pop
and
jle
cmpsb
push
imul
adc
xchg
and
cmp
iret
outsl
into
mov
sub
pop
pop
pop
add
lods
jns
int
sub
pop
pop
repz
iret
shrb
adc
fnstcw
push
xchg
sti
ljmp
or
mov
ja
xor
xchg
test
faddl
gs
cmp
mov
inc
popa
cmc
add
test
or
outsb
fwait
and
inc
add
cmp
inc
pop
cmpsl
filds
arpl
add
scas
pushf
sbb
jae
nop
dec
lods
cmp
xchg
sub
mov
push
les
mov
mov
adc
es
add
lock
sub
or
cmp
dec
jbe
jo
out
sub
add
cmpsl
je
sub
inc
out
add
jecxz,pt
push
xchg
lcall
out
mov
mov
mov
sbb
and
jp
xchg
push
cmp
pusha
pop
inc
sub
xchg
clc
leave
lcall
mov
add
jg
and
ljmp
jl
clc
push
rorb
fstl
fadds
test
mov
jno
lds
cmp
clc
mov
mov
bound
outsb
xorb
dec
cld
add
xor
push
mov
cmp
mov
scas
or
scas
add
loop
leave
and
jge
add
pop
add
xchg
int3
in
andb
ds
mov
jg
add
aas
gs
pop
cmpsb
pop
mov
push
in
fbld
mov
xchg
lods
lret
push
add
mov
jle
shlb
fstps
pop
lcall
and
jns
add
shrb
mov
nop
inc
or
mov
adc
xor
push
add
sbbb
push
aas
mov
bndstx
xlat
add
jo
adc
shl
add
push
insb
adc
jle
dec
loope
jp
add
adc
mov
sub
mov
push
inc
les
lock
out
or
fcomp
stc
inc
pop
mov
roll
add
leave
mov
mov
lock
jnp
sbbb
in
imul
mov
add
lods
sub
mov
pusha
mov
and
and
fisubl
popl
pop
cmc
cmp
iret
adc
fldt
dec
cmpsb
movb
mov
into
call
add
push
pop
mov
push
mov
jo
int
jl
cmp
xchg
xor
and
call
leave
dec
insb
addb
outsb
lock
push
mov
mov
add
jno
xchg
data16
loopne
add
or
mov
out
add
inc
and
pop
loopne
loopne
mov
add
mov
sbb
mov
add
sbb
dec
aad
mov
jl
xorb
push
or
ficoml
jge
rclb
mov
fisttpl
aad
add
sbbl
jae
mov
pop
add
in
rorl
push
mov
adcb
add
outsl
inc
adc
fs
cmc
scas
enter
lods
dec
mov
dec
addr16
and
mov
dec
dec
mov
or
mov
fmull
or
push
lahf
sbb
rol
dec
pop
add
mov
lods
lret
adc
ret
shlb
add
sbb
scas
and
xchg
jp
loopne
jno
nop
sub
xchg
xor
mov
jg
in
jle
clc
lahf
fs
xlat
mov
fs
int3
scas
fsubrp
scas
add
outsb
jge
xor
loop
sub
cli
and
jb
xchg
adc
loopne
add
cmp
subb
loop
mov
push
insb
xor
ja
das
ss
pusha
mov
add
xchg
xchg
add
inc
daa
push
jne
insb
popa
add
inc
cmp
andb
lea
xor
xor
testb
pusha
xchg
and
icebp
data16
push
push
mov
sub
adc
inc
ret
cmpsl
mov
in
es
adc
sbb
sbb
and
insb
xchg
jne
and
adc
add
sti
sbb
adcb
sub
loope
mov
les
add
lock
icebp
mov
cltd
push
inc
out
cld
or
and
dec
inc
or
xchg
add
aam
in
arpl
jo
mov
push
adc
movsl
rolb
sti
shr
inc
gs
aam
pop
xor
dec
test
mov
xchg
pop
push
andl
adcb
and
add
inc
cmp
or
lret
test
mov
mov
shlb
lock
mov
push
lret
pushf
and
inc
and
clc
aaa
popa
cmp
xor
loopne
cwtl
ljmp
xchg
out
sub
test
add
xor
mov
mov
inc
mov
pushf
dec
inc
inc
sbb
sbb
loop
xor
smsw
jno
loop
dec
sar
pop
add
push
push
jns
mov
or
dec
int
negb
pop
cmp
js
test
aam
ljmp
jg
loop
push
dec
int3
aam
sub
aaa
incl
pusha
cltd
fsubs
out
mov
or
aam
test
xor
clc
dec
ljmp
cmp
add
or
add
rorl
sub
test
xchg
mov
sbb
test
int3
repz
mov
pop
outsl
js
ret
setnp
sbb
or
test
push
jno
mov
in
jecxz
gs
sub
scas
adc
test
mov
jmp
inc
and
add
mov
jl
mov
inc
aaa
inc
and
adc
push
jmp
cmp
rorl
int3
ljmp
cmp
adc
or
mov
push
ret
sub
loop
jo
adc
xchg
dec
sbb
mov
dec
out
jb
mov
loopne
test
jae
lcall
lock
adc
hlt
add
push
add
cli
cs
mov
movsl
lahf
xor
mov
test
jno
stos
mov
lea
add
iret
and
int
sbb
push
mov
jo
pop
jle
fcoml
add
sub
nop
aam
fld
stc
jge
frstor
das
js
push
and
fs
mov
mov
cli
adc
jno
xchg
stos
in
add
xchg
add
mov
jb
fadd
adc
add
std
push
xchg
jns
pop
je
in
mov
xchg
inc
add
pop
fildll
inc
lods
jnp
ficomps
mov
mov
jecxz
add
test
inc
mov
sti
or
mov
add
mov
popf
cmp
pusha
call
xor
aad
pop
adc
push
adc
and
mov
iretw
int
or
rolb
mov
cmc
add
aam
push
fcompl
adc
aaa
stos
dec
push
fucom
stc
or
mov
add
stos
mov
and
out
jmp
roll
add
loopne
ja
mov
xchg
jl
int3
or
mov
mov
push
jne
jbe
js
nop
cmpsl
mov
sbb
outsl
add
repz
mov
dec
mov
cltd
ret
out
dec
stc
jne
rcr
out
mov
cmpsb
loopne
movsb
inc
adc
test
sbb
pop
jo
call
cmpsb
add
fdivs
aad
pop
popf
push
adc
inc
sbb
xchg
mov
and
das
nop
or
fcmovne
sub
cmp
mov
mov
or
push
stc
and
frstor
add
inc
daa
jge
cmp
les
sub
pop
stos
and
ja
add
roll
movsb
mov
or
adc
or
xor
inc
aaa
lods
jns
xlat
sbb
adc
fdivrs
inc
jl
and
cmpsl
popl
aaa
mov
fstpt
dec
in
aas
lret
test
add
hlt
inc
and
loope
and
sbb
jmp
sbb
cli
pop
inc
jmp
mov
pop
add
dec
add
leave
xchg
lods
test
mov
add
or
loopne
fdivrs
out
les
mov
das
jl
pop
add
dec
mov
js
insb
add
imul
jmp
incb
sub
clc
adc
pop
outsb
cmp
sbb
test
pop
sarl
int
add
aad
add
pop
out
push
sbb
push
lock
ret
mov
cmp
add
lret
dec
fwait
cwtl
clc
add
mov
mov
and
push
fwait
add
jp
scas
add
mov
dec
pushf
xchg
add
fidivl
add
xchg
xor
sbb
xchg
js
add
and
and
xor
lcall
and
inc
xchg
nop
fmuls
pop
push
sub
hlt
popl
xchg
mov
pop
and
xchg
mov
ljmp
inc
inc
out
icebp
loope
adc
inc
mov
test
inc
lcall
cmpsb
aas
cmp
add
in
lds
js
add
xor
jnp
inc
imul
es
pop
add
adc
nop
lock
out
inc
inc
test
and
mov
rcll
pop
xchg
add
mov
and
dec
mov
cmp
add
mov
add
shlb
xchg
fcomps
aam
nop
dec
data16
add
fists
sbb
das
or
es
inc
pop
roll
adc
add
push
into
in
clc
push
test
pop
movsb
inc
lds
jge
sub
fcomp
outsb
lcall
or
mov
stos
or
mov
arpl
adc
stc
pop
sub
push
jo
scas
and
lods
jb
or
cmp
movsb
insl
dec
imul
fwait
mov
cmpsb
or
sarb
jp
and
das
shlb
add
jg
cmp
dec
inc
cmova
mov
add
pop
mov
xor
ret
inc
mov
clc
mov
iret
ret
push
movsb
sarl
addr16
shrb
push
mov
xor
or
roll
mov
sti
cli
add
xchg
and
add
push
pop
aam
xchg
addb
out
popf
sub
cmc
pop
divl
sarb
dec
add
outsb
xchg
roll
mov
add
pop
dec
xor
test
loop
in
pop
push
xchg
add
lcall
jg
popa
pop
or
popf
stc
js
mov
pop
fdivrs
add
pop
test
push
xchg
mov
movsl
sub
inc
in
cmp
pop
addl
loopne
adc
pusha
adc
xlat
jbe
ja
insb
sbb
jecxz
sbb
add
pop
mov
ret
mov
dec
nop
mov
in
push
dec
rcrb
add
cltd
jne
cmp
rcrl
jo
push
mov
lds
mov
fnstcw
xchg
call
jmp
dec
in
cmp
xor
int
adc
out
and
or
lock
loope
mov
mov
fs
ljmp
lds
push
mov
nop
addb
push
pop
mov
sbb
add
or
rclb
int
mov
adc
add
sbb
add
xor
pop
rcr
or
sub
shll
idivb
xor
shrb
sbb
xor
sub
pop
push
ss
mov
gs
jl
ret
mov
pop
sub
cmp
movsb
sahf
sbb
xor
out
or
inc
insb
jmp
fwait
sti
add
push
add
pop
sbb
add
mov
sub
popa
mov
jns
call
mov
cmpsb
cmp
push
xor
push
xchg
and
sub
getsec
add
mov
push
gs
push
and
sbb
add
jecxz
fs
jecxz
mov
mov
lret
cmp
mov
jno
lret
mov
lock
mov
dec
shl
hlt
add
jl
jae
pop
pop
push
sbbl
daa
add
push
push
pop
mov
pop
popa
pop
nop
mov
into
mov
cmpl
push
rolb
mov
add
sbb
xor
dec
leave
in
lock
pop
stos
push
mov
in
aaa
push
mov
add
sbb
mov
sub
pushf
fucompp
in
lahf
add
fwait
xchg
repz
pop
fcoml
add
orl
and
sub
or
shlb
sub
xor
nop
je
fsubr
and
and
sarb
inc
rolb
sub
dec
loopne
mov
mov
fwait
add
adc
or
shl
xor
mov
adc
mov
sub
mov
cs
sbb
add
rorl
add
iret
adcb
push
imul
rep
int3
and
and
sbb
loop
pop
or
lcall
insl
pusha
mov
add
je
addb
shrb
test
or
pop
out
add
sbb
in
clc
aaa
cli
sbb
mov
xchg
pop
add
outsb
cmp
and
mov
pop
jns
add
fildll
test
ret
dec
insl
jl
xor
dec
push
or
mov
pushf
add
push
dec
pop
jns
adc
mov
push
sub
andl
ud0
mov
jle
mov
jo
jns
add
sbb
or
ret
mov
ret
rcr
mov
into
add
adc
xor
mov
in
add
movsl
sbb
sbb
cld
dec
add
loopne
adc
int
and
loop
dec
lret
lods
in
mov
int
fisubl
clc
out
fs
rcll
les
orb
es
push
xchg
rclb
mov
hlt
dec
push
lock
lds
xchg
add
pop
shr
jbe
add
in
jns
pop
ljmp
scas
pop
mov
mov
jmp
sbb
fcompl
hlt
out
aaa
scas
xchg
cld
mov
xor
sub
rorl
int3
mov
mov
dec
std
outsb
fs
xor
imul
and
out
shlb
outsb
or
xchg
and
xor
fdivrs
js
add
ss
stos
lcall
js
pop
popf
jnp
push
and
sbb
mov
cwtl
pop
test
inc
je
in
xor
aas
mov
pop
fstpl
js
dec
mov
ret
mov
lock
js
cmp
xor
in
push
imul
add
sub
outsl
sbb
pop
sti
pop
loopne
cmp
push
mov
cld
in
jmp
les
pushf
mull
popl
hlt
cmc
add
popa
movsl
movsb
lahf
jns
xchg
adc
lds
add
add
sub
inc
pop
lret
popa
sub
aad
push
popa
add
lods
dec
pop
sbb
outsl
pop
mov
adc
test
punpckldq
ja
add
mov
mov
push
imul
sub
bound
sbb
push
add
pop
aaa
and
inc
sub
jo
jl
add
or
mov
mov
ljmp
enter
test
add
jno
sahf
mov
or
pop
scas
jbe
xchg
cmpsb
les
iret
jno
je
subl
fdivrs
call
in
cmpsl
clc
push
insl
loop
add
mov
fstl
test
aas
fmul
loop
dec
fcom
out
dec
adc
cmpsl
sahf
cmp
xor
jne
pushf
arpl
mulb
je
add
xor
cmpsb
test
jno
add
xorb
or
xchg
cltd
fs
shrb
and
jnp
sar
mov
xchg
inc
clc
jmp
xchg
pop
fmull
jge
test
add
jecxz
xor
xchg
ret
movsb
insb
add
je
sub
add
sbb
add
dec
pop
sahf
subl
jp
or
mov
das
cld
cli
dec
dec
push
orl
rcrb
mov
dec
popf
cwtl
cmp
jne
push
push
cld
lock
jo
or
loop
mov
cmp
test
cmp
add
gs
sbb
mov
in
adcb
inc
sbb
shlb
cmp
lods
add
fucomi
stos
inc
mov
and
jecxz
push
jmp
pop
inc
and
loopne
outsl
pop
fdivrl
add
mov
or
aad
test
push
in
push
mov
in
and
movl
rorl
add
add
dec
push
aad
inc
imul
jmp
and
cmpsl
sbbb
test
jbe
inc
cli
and
nop
mov
jo
andl
enter
ss
xchg
mov
sarb
fisttpl
aam
and
rclb
sub
push
ja
out
in
imul
ljmp
fcompl
popf
xor
out
rol
out
popa
cmp
movl
aaa
pop
loopne
pop
stos
xchg
add
mov
insl
cwtl
hlt
add
loope
addr16
sub
or
xchg
cwtl
in
pop
lret
pop
movzbl
and
mov
dec
dec
and
add
push
jl
aaa
fistpll
push
pop
sarb
ljmp
sub
iret
bound
shll
fsubl
lock
mov
lahf
jb
cmp
rcrb
in
out
clc
call
cmp
inc
xchg
dec
sbb
lahf
mov
mov
in
pop
push
iret
xchg
mov
rolb
push
pusha
das
mov
les
dec
dec
je
xchg
xor
sub
xorb
fwait
ds
lea
ss
add
ret
mov
mov
sbb
outsb
cmpsl
pop
fists
cld
cmpsb
aad
sub
adc
add
insl
push
sbb
test
lret
add
mov
popf
inc
fs
enter
cmp
ret
sbb
xchg
add
pop
scas
add
in
stos
shrl
and
mov
imul
repz
out
jbe
in
out
movsb
daa
or
shll
das
fs
sub
jmp
pop
shr
xor
daa
scas
inc
sbb
outsl
shr
test
sub
xor
sarb
mov
loopne
ret
mov
movsb
inc
push
sbb
cmc
pop
cmp
lock
rol
inc
jecxz
in
add
pop
dec
push
cmp
mov
decl
pop
cmova
adc
mov
shr
test
outsb
xor
sub
xorl
fcompl
xor
or
in
push
push
pop
push
sbb
xchg
dec
cmp
inc
sub
add
lea
mov
and
jno
mov
imul
test
sbb
push
mov
pop
push
xchg
les
mov
add
mov
mov
mov
or
jg
cwtl
aaa
adc
sub
les
add
pop
xchg
push
add
and
ljmp
movsb
sbb
fstl
in
loopne
dec
push
sbb
fmuls
or
xor
lcall
es
mov
data16
add
in
lret
mov
rol
add
ss
aam
in
pusha
sub
ficompl
add
mov
push
add
ret
out
jo
cld
add
test
cmp
fs
in
popa
cld
popf
test
jl
lods
ret
jbe
fwait
cwtl
lods
mov
dec
pop
aam
clc
or
add
sub
shlb
ljmp
mov
cmp
add
mov
add
push
mov
movb
dec
sbb
sbb
dec
test
inc
in
cmc
adc
push
push
call
stos
fstpt
in
int3
add
adc
cli
repnz
cmp
int3
xchg
xor
add
out
cs
in
mov
repz
push
and
ljmp
fildl
stc
popl
imul
sbbb
movsl
jns
js
outsl
mov
dec
xor
cmp
je
adc
decl
xchg
jbe
adc
clc
idivb
in
mov
or
mov
mov
fstps
xchg
arpl
mov
stc
add
dec
lret
dec
add
rcrl
mov
outsl
popf
test
mov
cs
pop
jmp
inc
loop
add
jns
pop
pop
cwtl
iret
jae
aas
push
adc
fsubrs
and
push
addr16
and
mov
fisttpl
add
and
cwtl
mov
and
dec
inc
add
movsl
sbb
pusha
movsb
cld
cmp
or
hlt
clc
adc
mov
jno
mov
push
cmp
in
sub
test
test
and
add
sub
xchg
aas
xor
idiv
sti
loopne
add
dec
sub
mov
add
insl
es
jne
cmp
cmp
pop
add
xor
add
add
idivb
hlt
add
ror
popf
add
mov
repz
js
js
fisttpll
add
sbb
jge
cld
or
imul
cmp
movsb
xor
mov
movsl
inc
jmp
sbb
and
sbbl
std
add
xchg
cmpsl
add
jmp
jbe
jg
add
insb
fnstsw
jns
add
xor
inc
test
push
popf
ret
push
lods
push
sbb
lock
out
add
jnp
je
lea
push
add
jno
hlt
js
ja
add
jnp
mov
add
fists
sub
js
in
jb
adc
pop
out
rcrb
andb
cmp
leave
cld
pusha
lock
pop
sbb
and
xchg
pop
xchg
ljmp
call
mov
xchg
leave
aam
jl
pop
mov
into
std
push
rolb
cmp
clc
adcl
adc
pop
in
lret
or
push
into
xor
pop
push
in
mov
div
fs
sahf
push
inc
mov
cs
sub
orb
jnp
dec
push
call
pusha
ja
popf
dec
movsb
call
mov
scas
popf
dec
dec
enter
add
loop
pop
add
mov
add
jmp
jp
add
jno
mov
mov
sub
add
out
push
dec
mov
add
rcl
in
jo
daa
stc
dec
clc
add
mov
mov
xor
test
pusha
and
fdivrl
cmp
test
fs
subb
jns
xor
dec
dec
adc
sub
jecxz
add
fstps
addl
xor
popl
lock
xchg
rcr
insl
jb
push
pop
lods
xor
out
xor
leave
enter
add
lds
xchg
mov
pop
jnp
pusha
xor
cmp
pop
jbe
sub
daa
lock
cmp
lods
inc
sbb
cwtl
les
mov
or
mov
dec
pop
pop
add
leave
lcall
jg
inc
add
cs
and
add
ljmp
lcall
add
lret
pop
jecxz
shrb
sbb
mov
shl
or
add
inc
mov
add
fdivrs
dec
mov
dec
aaa
cmp
das
xchg
in
add
push
mov
mov
jp
jne
mov
sub
movsl
mov
xchg
add
xchg
sbb
xchg
call
ja
push
or
in
jbe
insl
loopne
xlat
add
imul
push
jle
cmp
mov
push
repz
rol
cmp
dec
pushf
adc
add
add
jmp
mov
cmp
fildl
popa
push
mov
addb
ret
dec
add
cmp
insl
incb
push
stos
add
fwait
pop
cmpsl
dec
and
dec
in
mov
xchg
or
movsl
and
movb
and
mov
add
xchg
mov
je
das
add
pop
addl
mov
in
add
cmp
add
je
jp
addb
imul
xor
and
in
lds
mov
mov
xor
paddq
mov
inc
cld
adc
lcall
sarb
or
or
pop
add
imul
rcrb
add
mov
adc
testl
cmp
in
sub
mov
fstl
fistps
cmp
jp
outsb
add
push
lret
cmp
sub
jno
dec
inc
adc
adc
fdivp
lahf
inc
shlb
xchg
dec
push
ss
test
fcmovne
mov
faddl
std
mull
mov
cmp
jns
and
inc
scas
add
add
sub
xor
dec
jbe
and
cmp
add
push
adc
cmp
lock
js
out
inc
inc
je
fs
ds
sbb
add
imul
jno
adc
ljmp
sbb
push
dec
inc
movsb
or
jbe
or
int
cmp
pop
incl
out
pop
mov
les
popa
sahf
cmpb
loopne
iret
add
sarl
sbb
flds
fcompl
movq
inc
inc
nop
push
fwait
or
sbb
jae
addr16
out
pop
mov
jns
inc
xlat
call
addb
in
and
hlt
mov
mov
out
xchg
add
sbb
add
aam
or
out
in
js
xchg
enter
add
xchg
mov
mov
or
in
add
inc
leave
sahf
addr16
sub
or
enter
mov
and
add
leave
sbb
test
mov
out
xrelease
sub
mov
imul
or
out
add
gs
jp
mov
dec
rcrb
out
adc
jecxz
faddl
cld
popf
add
or
sub
jl
pop
jl
dec
test
call
cmpb
idivl
idiv
repnz
daa
nop
and
xor
add
lods
cmc
adc
add
negb
dec
ja
aas
jo
add
pop
rcrb
pop
push
insb
add
push
xchg
aad
addl
pushf
rorl
sub
lea
test
and
sbb
push
outsl
lds
out
in
xchg
aaa
pop
and
clc
into
mov
scas
jp
jno
int3
ljmp
push
out
xor
inc
and
hlt
flds
push
nop
mov
int
mov
mov
mov
xchg
xchg
adc
pop
aad
ds
ljmp
test
fiaddl
lock
movsl
push
xor
mov
mov
test
enter
pop
jae
add
mov
adc
push
rolb
add
dec
insl
clc
icebp
inc
push
fstl
add
shl
push
add
iret
mov
jecxz
cld
icebp
loope
dec
mov
hlt
test
in
leave
loop
decb
pop
pop
incl
adc
inc
lret
xor
cld
insb
add
adc
ret
sub
fs
cli
int
pop
xor
rorl
sbb
or
sahf
dec
sbb
cwtl
push
scas
shrd
mov
push
xchg
orb
lret
imul
rcl
mov
nop
xchg
sub
fisttps
push
cs
sub
sub
pop
fstps
xor
movl
and
in
cmp
sub
popa
sub
cmpb
in
sti
jge
mov
call
inc
je
jmp
dec
push
or
xchg
pop
in
cmpsl
ret
nop
movsb
fcoms
arpl
adc
out
mov
or
or
xor
lods
push
loopne
shlb
add
clc
shll
inc
sbbb
repz
nop
mov
mov
pop
sub
stos
or
dec
rclb
cmp
inc
adc
add
push
scas
push
add
pop
push
and
sbb
or
add
aas
cmc
adc
mov
sbb
lret
jg
and
sub
adc
arpl
pop
add
adc
orl
mov
add
dec
mov
aaa
aam
flds
cmp
sub
jo
adc
imulb
pop
push
pop
xor
cmp
pushf
test
add
rolb
xor
mov
add
cmp
dec
inc
or
call
xor
or
enter
popa
inc
in
rcr
aas
push
add
addb
inc
mov
cmc
test
js
cwtl
mov
mov
pushl
jo
out
mov
dec
data16
pop
cmp
push
add
aad
xor
loop
jne
inc
mov
fisttpll
fistl
push
pusha
lods
ffreep
xor
xchg
les
jge
mov
int3
jne
xchg
test
cli
cmp
or
js
mov
jb
hlt
pusha
cmp
xchg
xlat
cld
lods
add
jo
adc
shlb
adc
shl
cmp
inc
mov
or
xor
add
jmp
mov
stc
push
sub
add
pop
fnstenv
mov
cld
adc
in
arpl
jg
aam
pop
xchg
rcrb
clc
je
shlb
popa
add
mov
outsb
lea
and
add
xchg
fisubl
mov
add
add
push
add
jmp
fsubp
pop
cmc
js
add
add
xchg
add
outsb
loope
dec
in
cmpl
adcb
add
aam
fisttpll
les
add
ss
lds
lcall
jns
dec
iret
mov
add
pushf
bound
or
enter
pop
cmpb
popf
add
sub
jbe
popl
lds
fidivrs
ret
add
push
js
inc
pop
inc
dec
ss
add
jp
mov
mov
sbbl
pop
divl
add
adc
test
subl
or
jbe
dec
xor
es
movsl
sbb
dec
jno
add
add
add
push
test
adc
sub
cmpsl
cltd
scas
shlb
push
out
mov
rolb
fcmovnb
and
aaa
push
repnz
pop
push
test
cmpsl
pop
inc
pop
jo
out
add
mov
subb
nop
pop
mov
inc
loope
shlb
pop
jno
pop
imul
mov
add
aam
mov
adc
fidivs
insb
lahf
addb
cltd
or
orb
xchg
jp
out
pusha
add
pmaddwd
ljmp
ss
add
xchg
pop
jmp
xchg
fs
or
mull
lods
imul
loopne
jmp
add
fistps
jno
pop
push
decb
loopne
sub
sub
or
jne
xchg
dec
popf
icebp
fsubrl
pop
cmp
pop
xchg
jmp
mov
in
sar
jge
add
out
push
and
mov
and
inc
xchg
fs
out
stc
lods
push
pop
add
stc
roll
or
je
outsb
icebp
cmp
les
and
les
inc
add
dec
jp
lock
into
out
pop
adc
xor
cmp
rcll
arpl
jnp
insb
add
mov
stos
nop
cld
add
mov
adc
cwtl
inc
dec
lock
hlt
bound
pop
jp
dec
inc
mov
or
jmp
aad
fmull
nop
cmp
mov
sbb
pop
fdivr
mov
rolb
dec
pop
dec
mov
test
stos
add
jl
xchg
cmp
into
dec
jbe
add
insb
popa
mov
mov
mov
xor
jg
cmp
ja
loope
jecxz
fidivrs
jo
xor
pop
out
add
mov
sbb
cmp
shlb
xor
nop
jo
mov
fwait
add
xchg
or
add
popa
xor
dec
out
mov
xor
out
add
pop
cmp
cmp
sbb
sbb
mul
xor
das
cmpb
aas
xor
mov
push
test
addr16
add
pop
cwtl
lods
mov
xor
or
pop
fcmovbe
sub
mov
aam
and
or
jne
mov
sub
ljmp
add
lea
mov
dec
enter
add
scas
push
fcmovnu
push
lret
faddl
mov
loope
sbb
inc
loopne
in
incb
fcoms
xor
push
push
lds
xor
cld
push
ss
hlt
fcmovnb
push
add
in
dec
aas
loopne
pop
bound
dec
fwait
ss
dec
stc
add
in
jbe
dec
jp
add
es
mov
add
ss
mov
pop
dec
or
icebp
add
andb
pop
mov
push
add
dec
jne
xchg
and
cli
clc
insl
sbb
int
jmp
andb
xor
pop
pop
shl
ds
mov
jns
incb
add
dec
cli
dec
pop
fsub
shrb
dec
out
in
hlt
add
repz
out
push
mov
pusha
test
das
rorb
cmpb
pop
in
sbb
and
in
pop
and
pop
jo
push
nop
mov
jbe
andb
or
ficompl
jo
pusha
add
sbb
mov
pop
cld
sbb
mov
push
mov
mov
pop
mov
sub
mov
xchg
lret
jle
aas
push
adc
scas
jg
mov
ljmp
xor
inc
out
fdivs
add
push
aam
inc
add
mov
mov
add
adc
add
or
out
dec
jl
sub
call
subb
popa
jecxz
roll
ja
add
mov
cmpsb
adc
int3
cltd
jmp
inc
cmp
jo
loopne
mov
sub
iret
jne
movb
addl
cmp
adc
adc
imul
add
add
gs
sbb
adc
stos
rcrl
repnz
pusha
sub
or
add
mov
xor
paddd
pop
push
xor
adcl
sub
add
pop
push
cmpsl
sahf
add
mov
mov
add
and
push
cld
inc
fsubrl
inc
lods
ja
jnp
sub
int3
shll
pop
mov
mov
in
pop
push
add
adc
int3
add
pop
xlat
movd
dec
orb
or
and
pop
call
xchg
fs
add
cmp
inc
push
adc
fisttpll
lret
icebp
push
jmp
call
js
add
mov
sbb
pusha
sub
pop
test
lods
push
jb
add
sub
lahf
aaa
push
add
dec
jne
daa
call
add
clc
pop
cmp
mov
mov
mov
xchg
mov
movsb
and
mov
or
add
out
fnsave
lret
addr16
jno
lcall
in
add
and
pop
outsl
lahf
adc
arpl
ret
je
or
mov
sub
fstpl
cmp
hlt
lods
and
int
mov
sub
test
roll
sub
mov
test
sbb
and
sub
add
arpl
add
nop
xlat
xor
xchg
mov
hlt
lock
loope
pop
aas
addb
add
mov
leave
out
mov
dec
pop
lods
dec
add
addb
or
jne
shlb
cmp
adc
cld
pop
insb
out
shrb
add
addr16
mov
sbb
xchg
add
aaa
cmp
inc
cmp
mov
jbe
pushf
jmp
ja
loope
mov
in
adc
je
lret
subb
sbb
cld
push
mov
ss
loop
les
ja
stos
add
lahf
nop
xor
insl
mov
xchg
fsubrp
andl
stos
bound
pop
in
xor
fs
mov
pushf
mov
or
xor
mov
jo
rorb
xor
mov
cmp
sahf
xchg
pushf
xchg
dec
add
dec
xor
cwtl
test
or
add
call
inc
jb
outsl
adc
in
in
mov
xchg
xor
add
out
loop
ljmp
subl
repz
test
xchg
sti
sub
pop
aam
add
test
aad
in
adc
mov
mov
add
and
js
add
fcompl
or
mov
mov
mov
addb
xchg
jns
inc
push
es
or
ljmp
pop
rclb
xchg
jae
js
pop
jmp
push
add
ds
dec
xchg
mov
lcall
push
add
or
leave
faddl
std
cltd
and
mov
clc
sub
rol
xchg
repnz
inc
insl
mov
and
inc
and
dec
add
addb
xchg
gs
bound
rcll
xchg
jb
xchg
add
add
stos
in
arpl
mov
jp
je
ret
das
xor
shrb
loopne
pusha
xor
gs
add
cmc
and
add
push
add
xchg
mov
jne
aad
cs
add
dec
ljmp
lock
lret
imul
clc
sbbl
sub
jo
nop
cwtl
pop
call
es
addl
int3
ljmp
gs
and
mov
adc
push
loop
xor
test
je
add
xor
sbb
or
add
xchg
adc
stos
add
loopne
cld
cmpsb
idivl
inc
pop
push
cltd
stos
inc
sbb
inc
enter
push
adcb
adc
ljmp
pop
jo
mov
addl
call
dec
add
scas
mov
push
push
in
add
test
cld
add
adc
add
faddp
std
stc
mov
xor
out
cmpsl
minps
stos
popf
mov
addr16
mov
xlat
das
int
jb
popa
sti
js
add
ljmp
jo
sub
pop
xchg
jo
negb
adc
and
mov
cwtl
mov
ss
xor
clc
std
dec
fidivrl
adcl
mov
push
push
aam
jne
push
mov
mov
out
jle
adc
pushf
shl
hlt
mov
call
lock
add
push
xchg
pusha
add
adc
push
std
out
aam
xor
fwait
xor
inc
xchg
cli
add
ret
inc
loop
add
jmp
mov
add
sub
scas
test
jge
dec
mov
fadds
movups
pusha
adc
hlt
mov
xor
add
sbb
xor
or
jl
xchg
fwait
add
aas
aam
pop
inc
les
adc
add
mov
movsb
pop
jo
call
loope
scas
mov
mov
iret
mov
push
cmp
jl
icebp
push
jo
mov
add
mov
aad
jo
cmpsb
cltd
sub
fsub
pop
mov
inc
movsl
xor
popl
fisubrs
mov
loop
cld
adc
popa
dec
fidivl
add
or
sbb
addr16
mov
mov
inc
stos
mov
mov
cwtl
add
jae
adc
movsb
dec
pop
mov
clc
mov
inc
adc
push
ljmp
xchg
cltd
mov
mov
add
add
cli
mov
test
cltd
ljmp
arpl
sbb
aas
fimull
mov
cmp
sbb
clc
xchg
dec
and
sbbl
dec
idivl
loopne
xchg
fnstenv
mov
fdivl
adc
sbb
ss
jns
jl
orb
cmp
loopne
fnstsw
xor
popf
or
add
dec
adc
repz
add
lret
imul
and
xchg
sbb
inc
in
lret
add
scas
lahf
scas
inc
je
push
ds
dec
or
mulb
call
cmpsl
add
cli
sbb
add
dec
hlt
imul
xchg
nop
lods
movhps
xor
add
testb
sbb
pop
jg
push
jecxz
add
inc
fcomi
jmp
add
aad
or
sbb
pop
orl
pop
test
lock
sti
into
mov
mov
dec
cli
rcrb
xor
out
pop
mov
mov
nop
mov
test
xor
rcl
ret
loope
and
orb
mov
jl
js
repnz
cmp
hlt
jecxz
add
mov
jo
repz
pusha
mov
lods
popf
jb
add
or
sti
push
aad
adc
repz
sbb
rorl
testl
ljmp
inc
iret
add
xchg
xchg
or
in
sti
aad
fildl
nop
sarb
pop
in
ja
add
sub
mov
adc
repz
add
lcall
jge
call
out
sub
out
roll
cmpsb
icebp
subl
mov
pusha
arpl
jbe
xchg
push
cmp
add
pop
or
decb
dec
leave
cmp
push
xor
adc
add
cmp
adcl
pusha
or
ss
cmp
in
pop
aam
lret
sbb
adc
popf
sub
dec
push
hlt
inc
cli
sbb
scas
in
leave
es
push
popa
rcl
pop
add
xor
outsb
jne
frstor
je
or
jg
and
fistpll
xor
pop
fcmovb
fadds
mov
bound
pushf
add
sbb
sbb
inc
lds
bound
xchg
mov
xor
fdivrs
xchg
popf
cmp
xor
adc
imul
inc
inc
imul
cmp
cmp
je
inc
or
push
fists
fwait
mov
dec
test
add
icebp
lods
test
loopne
push
add
jbe
adc
stos
xor
je
aam
xchg
mov
add
lcall
mov
rcrl
jg
mov
push
ds
and
mov
mull
push
xchg
push
xchg
pop
push
ja
lds
rclb
movsb
pusha
dec
int
push
add
xor
shrl
or
adc
add
pop
mov
mov
lods
adc
add
sbb
mov
mov
cmp
cld
test
cmp
lcall
add
dec
xor
push
sub
fwait
xchg
aas
shl
xchg
and
xor
sbb
iret
lock
inc
test
lods
mov
push
mov
xor
jl
sahf
hlt
ds
xor
clc
lahf
popa
cwtl
jo
pop
jno
add
ja
ss
push
fstps
dec
xchg
xor
xchg
sbb
dec
popl
cmp
mov
add
in
and
add
adc
out
popf
int
inc
add
or
sahf
movsl
mul
aam
aas
push
insb
out
add
push
add
ret
cmp
pop
inc
adc
mov
sub
mov
cmc
xor
push
jnp
cmp
ret
xchg
pop
arpl
repnz
inc
testl
jb
gs
sarb
add
and
adc
and
rcll
cmp
jge
dec
pop
xchg
movsb
push
std
inc
push
jne
test
cltd
ds
or
pop
sbb
fs
mov
adc
pop
adc
mulb
sti
xchg
xor
xor
lock
add
push
fdivrs
out
push
add
pop
jge
aad
mov
outsl
add
dec
pop
sbb
mov
dec
jecxz,pt
xor
xor
adc
mov
pop
rcrb
sub
lods
add
push
sub
lret
call
cmp
add
mov
ltr
xchg
aam
cs
sub
loopne
je
dec
push
lret
lahf
shll
inc
imul
jno
into
or
jg
add
lock
mov
arpl
paddb
sub
lock
pop
rclb
adc
add
pop
pop
or
xlat
jne
xchg
add
out
add
lahf
stos
add
test
aad
jb
jl
sub
sahf
sti
lds
popf
push
push
dec
les
in
inc
push
push
add
faddl
add
add
mov
inc
js
cwtl
lret
out
loopne
xorl
sub
pop
jo
icebp
in
cmp
inc
xor
add
pusha
movsbl
add
mov
mov
mov
into
add
mov
mov
psubusw
pop
and
cs
xchg
dec
add
sbb
cmpsb
cmp
test
orl
add
aam
pop
in
nopl
aaa
dec
negb
addr16
mov
xchg
fimuls
fs
shlb
jg
out
push
sbb
mov
aam
repnz
inc
movaps
sbbb
xor
cmp
dec
and
xorl
rolb
cmp
sbb
jge
sbb
imul
and
out
push
sbb
xstore-rng
cmpsl
xchg
sbb
inc
adc
mov
sub
jmp
pop
pop
loopne
sub
add
push
adc
mov
or
xchg
jmp
and
add
push
inc
insl
pop
sbb
jno
mov
test
jne
add
mov
call
sbb
cmc
imul
dec
sub
add
les
adc
pusha
orb
gs
int3
push
push
jae
cmp
jp
nop
str
or
in
mov
cmp
mov
add
ja
popa
into
sbb
jp
sub
insl
xor
rclb
outsl
cmp
mov
adc
pop
add
cld
add
xchg
cli
repnz
sbb
add
popf
cld
jns
jne
fwait
cltd
shl
aaa
xor
add
and
pop
or
test
jp
movb
jo
inc
inc
push
movsb
in
xorb
loope
dec
iret
add
int
pushf
adc
sahf
cld
dec
xor
adc
loopne
rcrb
repz
leave
pop
xchg
sub
jno
ss
clc
or
les
mov
out
add
leave
pop
cmpsb
jp
sub
mov
andb
cmp
adcb
jp
loopne
adc
fadd
add
add
mov
add
cmp
push
aad
stc
mov
add
arpl
mov
cmp
and
inc
idiv
popl
js
gs
dec
and
call
xchg
xor
insl
popf
add
pop
lea
or
mov
out
pop
aas
mov
sbb
ds
push
repz
je
ret
inc
test
add
ret
sbb
divl
jge
cwtl
bound
inc
imul
xchg
add
jl
jbe
push
add
insl
iret
rcrl
jle
sbb
xor
xchg
jge
test
sbb
cmp
inc
js
jge
jae
or
mov
and
mov
lock
ror
fildll
jo
mov
sub
or
dec
add
pushl
xor
lret
lds
push
sub
cwtl
cmp
sbb
inc
add
in
mov
mov
arpl
mov
dec
addr16
nop
mov
icebp
mov
mov
in
dec
sub
aam
add
pop
rcrb
jnp
mov
sbb
imul
stc
dec
mov
mov
add
decl
stos
xchg
into
lahf
xchg
xlat
pop
dec
pushf
das
or
nop
arpl
add
xor
mov
adc
aad
jo
or
and
inc
imul
lret
ja
and
nop
add
jbe
mov
leave
adc
adcb
sbb
lea
and
mul
add
or
lret
fwait
add
int3
orl
stc
and
add
jb
sbb
push
in
mov
shl
adc
add
or
add
pushf
push
sub
xchg
jge
cwtl
std
cld
adcl
dec
orb
test
sub
mov
jno
loopne
mov
shl
dec
aam
add
sub
cwtl
sub
lcall
sub
jno
je
sub
mov
das
and
in
xchg
pusha
cmp
push
cmp
pop
jae
mov
aas
pop
sub
test
cmp
outsb
pop
lock
add
shrl
mov
push
in
xorl
mov
push
inc
add
or
rcrb
inc
cmp
lea
dec
cmp
xchg
mov
movsl
test
mov
xor
out
adc
cmp
mov
jmp
sub
jge
mov
jl
int
enter
icebp
adc
sbb
fs
sub
add
iret
addb
cli
mov
mov
and
clc
adc
and
xor
mov
ljmp
and
and
dec
mov
testl
jle
push
push
insl
push
es
jo
add
sub
fstpt
movsl
call
add
xchg
scas
es
mov
std
loop
test
inc
sahf
popa
pop
es
mov
xchg
jns
les
ss
je
rorb
loopne
icebp
mov
cli
pop
sbb
lods
loope
call
dec
pusha
and
test
xchg
mov
or
dec
add
cmpsl
nop
cld
add
xor
add
out
sub
xchg
lock
jne
add
insl
jno
mov
add
shrl
das
add
and
cmpsb
jb
push
dec
outsl
aad
and
jge
sbb
xor
pop
inc
popa
xlat
xor
pop
out
mov
insb
insl
lret
aam
ss
pop
sbb
fimull
add
add
inc
insb
in
rolb
loopne
mov
xchg
jne
add
push
mov
pusha
cmp
ret
fwait
es
sub
mov
add
add
lds
add
insb
jo
or
sub
nop
add
dec
inc
dec
mov
mov
aam
in
inc
xor
cmp
outsl
adc
sub
inc
push
push
adc
sub
insb
dec
pushf
cmpsl
add
mov
ss
xlat
push
xchg
xor
ja
dec
pop
inc
mov
test
hlt
jno
add
dec
adc
or
cmc
imul
add
popl
jp
add
mov
add
sbb
bound
in
jno
add
add
lret
stos
xor
aas
rclb
mov
add
sarb
mov
add
les
mov
mov
add
inc
xchg
mov
pop
stos
lret
mov
pushl
popf
mov
inc
adc
cli
in
adc
sbb
aam
and
insl
push
adc
fldt
les
mov
inc
mov
add
adc
mov
loope
mov
in
pop
dec
sahf
mov
into
pop
cmpsl
jmp
inc
ret
lret
sub
addb
jg
clc
push
push
test
cmp
add
adc
dec
pop
add
mov
xchg
rcr
cmp
mov
aaa
xor
jecxz
push
xor
push
pop
pop
popa
in
cmc
jecxz
and
push
push
push
fildl
or
mov
or
sub
nop
rolb
mov
mov
aam
and
add
add
push
sub
cmc
out
add
test
test
pop
mov
lcall
in
ret
rcl
hlt
or
hlt
or
jo
ret
sbb
inc
sbb
hlt
or
fidivrl
cltd
cwtl
add
clc
aaa
repz
pusha
add
outsl
movsb
mov
cwtl
add
fistpll
xchg
mov
lcall
cwtl
sbb
pop
repz
or
mov
add
in
xor
xchg
fistpl
xchg
fnstcw
pop
movsb
out
rolb
jo
jno
jns
push
mov
dec
pop
filds
fs
lcall
push
mov
dec
pop
mov
dec
add
out
fdivrl
add
pop
jb,pn
sub
sbb
int3
dec
jo
add
mov
cmp
pop
push
add
push
loopne
adc
mov
scas
cmc
in
inc
push
or
std
jmp
inc
mul
aas
adc
repnz
xchg
sub
jg
add
jnp
in
or
sub
repz
out
bound
iret
rcrb
push
add
in
xlat
and
sbb
or
mov
cmp
xor
jns
add
cmp
pop
push
fs
sbb
mov
push
pusha
push
sub
pop
jg
mov
dec
push
add
inc
repnz
pushf
dec
in
andb
mov
fwait
cmpsl
adc
add
lcall
sbb
fs
outsl
addb
fwait
dec
rorl
mov
add
lcall
mov
repnz
test
popa
sbb
sbb
jo
push
pop
sbb
lcall
adc
call
test
add
xlat
jnp
xor
sub
cmpb
shlb
pop
xchg
pop
aam
fnstenv
hlt
push
dec
stc
enter
test
test
dec
sub
add
std
enter
jp
lldt
adc
sbb
xchg
jg
sub
test
pop
pop
mov
cmpl
sbb
shll
add
xorb
shr
adc
adc
pusha
xor
lret
cwtl
adc
xchg
sbb
jne
fstsw
cmp
hlt
cmp
lock
sarl
out
jbe
xchg
enter
fwait
lea
add
mov
adcl
cltd
cmp
ja
addl
jmp
test
jnp
cltd
test
push
nop
sub
xlat
jle
or
adc
stc
pop
xor
jnp
andl
mov
testw
cmpsb
test
push
add
out
push
andl
std
and
jns
in
test
mov
mov
and
int3
pop
jp
or
mov
ret
sbbl
cmpsb
std
test
daa
sbb
sbb
inc
in
es
inc
and
cwtl
mov
test
mov
push
cmp
or
mov
call
mov
adc
pop
add
adc
and
out
stc
push
add
jp
cwtl
push
lret
pop
adc
mov
sarl
sub
dec
xor
ret
scas
sti
sub
js
mov
fsubs
push
push
leave
pop
sbb
stos
inc
sbb
int3
popa
popa
jne
lahf
arpl
enter
sub
outsl
pop
sub
idivb
pusha
cmp
jp
pusha
sbb
jne
ljmp
xchg
pusha
mov
shlb
xchg
ljmp
sbb
push
pushf
cmp
notl
adc
adc
fldenv
xor
and
dec
test
xor
push
mov
xchg
lods
sub
inc
test
cmpsl
xlat
jbe
xor
inc
insb
sahf
mov
xchg
cmp
scas
fsubs
add
cmp
and
sbb
lds
out
outsb
jle
test
pop
and
out
push
jp
dec
or
mov
je
sbb
mov
stos
out
adc
stos
inc
enter
ret
stos
and
addr16
sbb
mov
jmp
dec
movsb
dec
add
cli
inc
inc
jns
xchg
and
mov
xlat
and
push
cmp
mov
fs
inc
sbb
or
stos
nop
jb
sbb
and
cmp
fsubrs
push
and
push
jb
aaa
add
addr16
rorl
and
inc
mov
ud0
adc
and
scas
leave
sub
pushf
and
stos
shrb
cltd
mov
xchg
xchg
jns
and
inc
xchg
adc
andb
orl
sub
cwtl
adc
adc
call
out
adc
sbb
in
or
ret
cmp
in
out
sti
cmp
cltd
sbb
dec
nop
or
push
movsb
mov
into
out
pop
gs
adc
mov
push
testb
add
and
dec
movsl
dec
push
lahf
or
or
inc
jne
jl
mov
arpl
mov
adc
fistps
pop
ljmp
jmp
and
mov
dec
leave
jl,pn
add
stos
push
jb
sbb
xchg
and
add
movl
fists
pop
pop
arpl
pop
shlb
sub
in
inc
push
pop
xchg
loope
adc
rolb
out
cmp
enter
mov
or
rorb
mov
sahf
xor
mov
push
adc
pop
inc
sbb
sub
es
test
xchg
push
add
pop
out
sbb
adc
lods
adc
dec
cmp
push
iret
pop
aaa
add
adc
jno
push
icebp
inc
rcrb
mov
mov
stos
les
push
dec
pop
mov
pop
dec
add
sub
idivb
daa
mov
daa
and
sti
push
push
mov
sub
mov
push
sub
and
and
adc
in
mov
out
stos
cmpl
xchg
pushf
sti
mov
and
xchg
jg
and
in
in
nop
fbstp
inc
push
mov
inc
xlat
add
sbb
jl
adc
pop
lods
into
sti
or
mov
add
stc
jno
add
gs
xchg
popf
int3
mov
pop
jns
sub
add
and
aas
repz
fisubs
aaa
mov
mov
sbb
ficoml
mov
push
in
inc
stos
les
push
and
xlat
dec
mov
add
cmpsb
push
gs
movsl
cmpsl
xchg
stos
push
lea
mov
int3
mov
ret
mul
adc
sbb
hlt
je
or
add
leave
xlat
loop
mov
call
mov
adcl
cmp
mov
mov
sbb
pusha
jnp
lods
loop
inc
xchg
ret
inc
pusha
mov
add
std
sbb
pushf
inc
fdivrs
pusha
xchg
iret
popl
sub
mulb
fsubs
xchg
leave
mov
push
jbe
mov
ret
xor
test
cmp
sub
cmc
inc
adc
adc
cld
push
add
fstps
jae
fldt
mov
fcmovb
rclb
sti
int
sub
or
mov
push
inc
lret
lret
mov
fwait
adcb
data16
xor
xor
adc
dec
ret
add
cmpl
mov
addr16
pop
daa
xor
mov
jmp
cltd
mov
sub
add
orb
fmuls
sub
cmpb
mov
dec
push
fcoml
xor
pusha
mov
inc
push
or
or
xchg
mov
mov
mov
das
sbb
cmp
xchg
andb
jb
cwtl
pop
mov
push
loopne
adc
or
push
xchg
jns
mov
int3
mov
cmp
imul
adcb
add
in
or
add
sbb
andb
cmp
inc
fcoms
mov
sbb
sub
les
push
jge
mov
inc
add
stos
sub
mov
fstpt
das
rcrb
add
roll
cmp
add
clc
shll
sub
popf
mov
jle
inc
sub
and
andb
imul
testb
and
fs
mov
add
xchg
lahf
ja
push
adc
inc
adc
add
mov
clc
adc
push
adc
btc
xor
dec
sbb
add
in
lret
mov
nop
push
ljmp
and
nop
ljmp
fsubl
sub
sti
jmp
add
cli
mov
pop
ret
add
mov
pop
adc
add
movsb
mov
inc
popf
lret
outsb
pop
lcall
add
xor
das
pop
adc
add
mov
push
lock
popa
pusha
xchg
jne
xchg
xchg
adcb
jge
mov
cltd
add
mov
sbb
sub
jmp
add
imul
xor
add
ljmp
xor
stos
mov
or
inc
add
mov
adc
sbbb
mov
outsb
aad
cmpl
icebp
call
js
cwtl
stos
ret
and
add
xchg
inc
das
aad
inc
mov
ret
pop
jbe
sub
cmp
movsb
add
popa
xor
xchg
arpl
sbb
loop
inc
addr16
inc
hlt
xor
js
cmp
jle
mov
and
movsl
adc
popa
cmc
mov
sti
cwtl
sub
push
sbb
xor
sub
pusha
xchg
pop
imul
pop
jge
in
and
cltd
test
xchg
adc
sub
add
sbbl
sbb
xchg
push
movsl
nop
mov
test
enter
cmc
call
push
xor
fildl
add
cmpsb
jae
cmp
xor
movsl
add
cwtl
xor
sub
jmp
add
imul
sbb
add
scas
loop
nop
push
or
leave
or
inc
testl
add
lahf
and
test
in
push
mov
dec
add
xor
rol
mov
mov
lods
bound
adc
lret
cwtl
lahf
arpl
ss
pop
in
outsb
jbe
pop
pushf
jmp
mov
inc
push
iret
mov
adc
mov
test
cmp
dec
clc
add
xlat
lea
mov
adc
pop
xor
call
lret
sub
or
nop
push
add
mov
test
jp
dec
leave
xor
push
insl
cltd
lock
xor
shll
es
cmp
inc
mov
jecxz
mov
sarb
insl
sbb
and
mov
cmp
sbb
js
adc
xchg
push
aaa
xlat
sti
andl
xchg
shlb
clc
cmpsl
add
test
jo
in
mov
push
cwtl
dec
or
cmp
cmpb
sbbb
out
stos
cmp
sub
test
cmp
dec
add
repz
dec
rolb
and
in
dec
scas
xchg
clc
mov
add
mov
int
push
xor
jmp
inc
add
jnp
shr
repnz
psubq
sbb
pushf
sub
pop
in
punpckhbw
insl
cmp
xlat
repnz
push
sub
jmp
and
lds
pop
inc
jnp
adc
mov
cmp
jg
xchg
adcl
pushf
dec
xor
adc
pop
xor
mov
inc
or
xor
sbb
push
dec
pop
ja
push
in
stc
fdiv
imul
xorb
adc
cmpsl
pop
and
call
add
sti
leave
pause
xor
movsb
in
inc
cmp
push
stc
iret
inc
add
stos
mov
fistl
out
jg
and
cmpsl
sbb
xor
sbb
adc
or
push
or
negb
imul
dec
inc
mov
push
mov
mov
push
add
sti
push
pop
adc
add
popf
and
mov
inc
sbb
pop
nop
movsb
enter
dec
lods
fisubrl
mov
pusha
rcrb
cltd
or
jno
inc
sarb
push
mov
pop
stos
or
lret
push
mov
sahf
or
add
inc
xor
sbb
faddl
fisubrl
adc
mov
sub
add
push
sub
out
stc
test
lahf
inc
mov
lods
shlb
loop,pt
cmp
in
testb
xchg
nop
fcomps
mov
popa
push
and
pusha
push
mov
push
mov
pop
push
jnp
adcb
push
adcl
push
sub
sbb
pushf
es
mov
mov
adcl
jnp
addb
test
jg
cmpsl
push
add
sub
jmp
repz
jb
es
and
test
aaa
cltd
gs
icebp
in
add
outsb
fwait
mov
add
xchg
nop
addb
and
sbb
loope
out
test
aas
and
test
stos
xchg
outsl
std
sbb
jnp
jecxz
fucomip
xchg
test
mov
add
mov
and
and
inc
es
jecxz
add
lahf
mov
popl
or
xchg
adc
sahf
lea
scas
test
les
loop
adc
into
xchg
movsb
and
das
add
int3
lock
roll
jbe
add
lods
pop
or
adc
xchg
enter
gs
popa
add
cwtl
adc
sub
push
or
fs
mov
gs
pusha
data16
mov
jb
orb
sbb
or
aas
or
jns
jns
sbb
loopne
fwait
mov
sahf
pop
pop
daa
mov
movsb
sbb
pop
test
jns
mov
adc
inc
iret
in
lock
cmovl
testb
lock
andb
arpl
sbb
inc
aaa
push
enter
add
nop
add
cmc
lcall
ret
push
popa
xchg
add
xchg
xor
out
jb
dec
and
in
cmp
mov
pop
cmp
jle
add
dec
mov
loopne
ret
data16
push
dec
test
or
add
fcoml
leave
mov
dec
repnz
cmp
push
cmpsl
and
pop
jb
testb
jnp
out
sahf
nop
daa
and
cltd
test
sub
inc
add
out
loope
insl
js
jns
loope
xchg
mov
sub
and
cwtl
lret
and
sbb
add
xchg
jle
and
gs
les
pusha
cwtl
mov
sbb
sub
push
cltd
mov
jnp
inc
leave
inc
mov
lods
addr16
js
je
inc
sub
outsl
mov
int3
lock
aaa
xlat
outsb
sbb
adc
pop
mov
jae
mov
pop
inc
sbb
test
and
xor
inc
xor
pusha
bextr
add
lret
test
sbb
das
mov
enter
inc
xlat
je
ja
cmp
push
imul
aad
inc
mov
inc
sub
lock
jo
and
and
pop
fstp
add
mov
jecxz
cmp
jmp
add
sub
xchg
mov
loopne
sub
es
xchg
loop
repnz
cltd
leave
add
mov
fldl
mov
imul
shrb
outsl
subb
add
and
and
shrb
and
sbb
gs
fimull
add
jg
movsl
inc
fdivs
mov
or
push
add
mov
xchg
lret
rcrb
add
insl
mov
shrl
inc
mov
mov
xchg
jae
sti
sub
xchg
xor
jecxz
aam
jns
sbb
adc
js
in
xor
xor
add
adc
rorb
add
inc
clc
notb
push
sub
sarb
loop
or
addr16
xor
pop
out
xor
int3
add
mov
cltd
xor
sbb
mov
call
aam
ficoml
subb
popa
add
xchg
sub
imul
and
clc
lahf
sub
mov
call
into
sbb
lret
fsts
pop
jae
cmp
sub
in
iret
sbbl
jmp
test
nop
adc
orl
das
pop
and
cmpsb
data16
out
cltd
or
jle
pushf
shr
mov
aaa
jmp
sub
mov
sub
sarb
into
inc
in
pop
div
cmp
in
or
cwtl
out
les
mov
test
call
pop
mov
lea
ljmp
push
add
mov
and
xchg
push
fwait
rcrb
ja
pop
add
cmpsl
cmp
rcrb
xchg
and
outsb
dec
test
int3
mov
inc
and
fimuls
out
outsb
hlt
add
out
jbe
mov
fisttpll
call
or
mov
mov
ja
stc
xor
repnz
or
mov
inc
fmuls
mov
pop
repnz
xor
pop
xchg
and
or
inc
sub
sbb
or
mov
mov
jecxz
add
mov
js
je
push
jb
mov
cli
enter
mov
rorb
or
mov
push
add
adc
adc
mov
adc
mov
add
pop
dec
push
xor
rcll
daa
stos
or
xchg
push
mov
gs
adc
sbb
ljmp
dec
pop
mov
loopne
xchg
adc
mov
jns
add
push
scas
push
arpl
mov
jecxz
and
or
pop
in
cld
int3
cmp
or
stc
pushf
jns
xchg
lock
mov
cmpb
lods
push
push
cwtl
jbe
call
test
sbb
push
add
dec
jg
fsubl
pushf
sbb
insl
sub
into
cmp
test
incl
or
xchg
es
rcrb
popl
pop
leave
cltd
add
pop
lea
jl
pop
enter
lock
jecxz
pusha
inc
pop
mov
icebp
imul
inc
ljmp
mov
rcl
das
jnp
rolb
js
sbb
mov
loope
jp
sbb
stos
loopne
jmp
arpl
lock
into
cmc
fistl
pop
stos
movsb
loop
add
loope
and
mov
repz
add
decb
daa
xchg
aas
dec
adc
mov
das
in
out
cmp
loop
fs
add
mov
jno
push
xchg
push
jg
sbb
sub
or
jle
ficomps
xchg
mov
and
in
arpl
mov
popa
inc
xor
or
ror
pop
jecxz
add
or
rclb
dec
pop
mov
shrb
mov
cld
lods
adc
push
and
add
dec
loopne
jmp
add
aam
xor
repz
jge
jl
mov
shl
ds
add
test
sarl
mov
sahf
pusha
or
jns
or
push
sub
xchg
aas
and
mov
mov
cmp
jne
sub
es
rclb
sbb
jo
out
js
aas
pop
movsb
add
enter
jge
fwait
enter
dec
add
inc
pop
jb
xchg
aaa
pop
test
push
mov
mov
pop
cmp
mov
jl
push
xchg
mov
lea
or
or
mov
mov
pop
xchg
sti
xor
or
push
or
cmpsb
add
aam
and
lds
mov
pop
push
push
test
adc
mov
in
mov
dec
in
add
fdivrl
movsb
and
push
insb
cmp
flds
add
jp
testl
push
aad
and
xor
loop
xor
rolb
orl
in
sbb
jmp
lods
add
dec
xlat
lret
imul
bound
cmpsb
mov
sub
fsubr
out
add
inc
adc
out
stc
sbb
rcl
shlb
inc
xor
call
jne
rclb
scas
insb
pop
mov
inc
lods
popa
push
mov
mov
ljmp
pop
mov
add
insl
pusha
and
mov
xor
adc
add
stos
adc
shll
and
jae
mov
pop
cmpsb
push
xor
xlat
movsb
js
jg
add
ja
add
mov
cmc
cltd
in
mov
enter
fcmovnbe
je
mov
lods
cmp
lahf
andb
and
inc
out
cwtl
add
mov
add
jnp
sti
bnd
cmpsl
fcompl
add
arpl
clc
rclb
or
jo
adc
aaa
add
in
or
loopne
mov
pushf
add
sub
repnz
push
dec
jecxz
mov
pop
cmp
cmpsl
add
jae
negb
ficoms
movntq
push
icebp
daa
mov
adc
add
in
sbb
imul
fs
cmpsl
cmpl
lcall
inc
xor
inc
push
sbb
clc
sbb
mov
cmp
xchg
add
xchg
sub
sbb
inc
jae
jo
sbb
mov
fnstenv
sbb
incb
ret
fcoml
sbb
ficompl
cwtl
nop
sub
mov
movsb
jmp
test
stos
outsl
push
pop
xchg
mov
pop
add
icebp
push
and
xchg
cmp
cltd
pop
lods
sub
sbb
inc
adc
cwtl
mov
cmp
das
leave
loopne
mov
pop
mov
dec
je
out
sbb
mov
add
mov
inc
add
jae
mov
fdivrs
sbb
dec
push
test
pop
in
and
push
add
les
je
xor
adc
enter
add
jae
and
sbb
clc
adc
stos
fdivrl
pop
add
add
xor
adc
mov
add
jno
add
cmp
or
lret
call
fsubrs
sub
cmp
or
jo
icebp
sar
inc
and
push
cmp
jae
roll
add
mov
sub
and
and
dec
mov
les
imul
out
add
ljmp
cmp
sbb
inc
sbb
or
sbb
xchg
out
repz
outsb
cmc
sbb
lret
gs
je
adc
into
jecxz
lea
jge
mov
sbb
sub
adc
mov
sti
add
dec
cmp
add
call
test
pusha
stos
adc
sbb
xchg
subb
or
push
popa
sbb
sub
jne
das
cmp
add
cld
test
aam
loope
mov
cmc
das
and
pop
subb
push
fisubl
flds
cwtl
pushf
outsl
mov
and
rclb
fistpl
mov
fadd
cmp
dec
mov
add
mov
cmpsb
out
js
jle
and
xorb
mov
fnstenv
cmpsl
inc
stc
jmp
cmp
movsb
and
add
xchg
xchg
jno
lock
fwait
xchg
lods
xchg
jb
adc
and
pop
lcall
push
push
addb
icebp
int3
decb
cltd
add
jl
xchg
pop
inc
push
add
and
scas
sti
ret
clc
shlb
xor
push
sub
xchg
cltd
aam
pushf
push
xorb
jle
mov
fwait
cmp
fs
adc
aad
mov
xchg
lcall
fxch
loope
xchg
cmp
adc
and
orl
cltd
jmp
push
in
adc
cmp
mov
xchg
mov
sbb
jecxz
shlb
add
popf
mov
fsubl
sahf
sbb
and
or
adcb
add
je
fsts
cwtl
add
fstpt
add
mov
es
shrb
sub
leave
add
stc
jne
or
fwait
jg
fs
jl
cmp
cltd
fmuls
in
pusha
pop
cmc
inc
or
and
or
mov
cmp
pop
sbb
out
pop
add
mov
xchg
iret
movsl
sbb
xor
loop
jnp
addl
imul
idiv
pop
pop
imul
or
dec
push
pop
les
sub
or
pushl
add
push
fadd
scas
or
test
sti
push
dec
cmpb
out
outsl
cmp
xchg
push
testb
cmpsl
call
cwtl
decl
push
add
int3
mov
rclb
dec
not
sbb
adc
jmp
push
cli
movsb
loope
cwtl
sbb
in
insl
sbb
mov
mov
cmpb
fstpl
sub
cmc
repz
or
pushf
adcl
ljmp
push
int3
fcoml
push
pop
add
call
scas
adc
pop
out
mov
push
xchg
sbb
adc
push
push
push
push
jb
out
lock
cltd
movsb
cmp
sbb
adc
and
add
adcb
or
pop
inc
or
xor
sbb
jae
lock
or
add
dec
bound
fildl
mov
shll
push
aam
or
jae
dec
xor
mov
push
leave
inc
fcmovu
pop
ret
lret
aad
sub
cmp
xor
xchg
rcll
aaa
sub
jne
inc
add
pusha
fadds
cld
fstpt
int3
xor
and
int
sbb
jle
test
cmp
adc
out
xor
add
clc
xor
loopne
lret
add
ja
mov
mov
fsubs
pop
mov
xchg
fcompl
or
push
cmp
push
test
dec
add
fcmovnb
and
ret
pop
inc
push
add
or
lret
cmp
lahf
mov
dec
or
mov
add
lea
daa
nop
and
sti
xchg
fdivrl
push
dec
add
adc
mov
pushf
stos
add
test
xchg
lret
and
iret
nop
push
lret
sbb
popa
mov
out
lock
jbe
sbb
cli
lock
sub
dec
inc
leave
jmp
add
sbb
add
push
addb
das
outsb
fprem
js
iret
add
ja
out
jns
mov
mov
pop
sub
lcall
cld
nop
fisubrl
insl
cmp
pop
fdivrp
add
mov
scas
gs
push
and
rorb
and
push
jle
add
adc
cmp
pop
insb
add
rorl
mov
repnz
push
sub
add
adc
cmpsl
rcll
or
mov
adc
mov
adc
es
push
xchg
xchg
mov
jl
mov
add
pop
ret
sbb
fcomip
sbb
shlb
jae
push
xchg
pop
mov
adc
and
adc
mov
daa
mov
testb
push
sub
inc
jle
adc
xchg
adc
and
jge
pop
dec
and
push
push
rorl
mull
push
ret
inc
or
push
push
xchg
nop
mov
add
add
sbb
mov
mov
notl
add
pop
fcmovb
xchg
lret
test
xchg
dec
add
int3
in
add
repz
lcall
add
movsb
or
add
add
add
or
add
pop
loope,pt
mov
cmp
mov
out
shll
mov
adc
daa
sti
int
pushf
nop
inc
dec
addb
pop
sbb
rclb
add
hlt
mov
add
mov
jno
add
gs
pop
and
lahf
cmpsl
add
das
jecxz
inc
mov
cmp
jge
lret
stc
push
inc
push
sarb
lds
mov
mov
pusha
push
dec
xor
jbe
out
pop
fisttpl
std
push
cmpb
fisubs
fldcw
arpl
fadds
fwait
cmp
sarl
movsb
inc
pop
inc
jl
mov
jbe
inc
scas
jo
push
aas
jo
cmp
ja
rclb
imul
cli
mov
movsb
push
dec
pushf
outsl
push
mov
add
hlt
mov
push
xchg
sbb
in
sbb
or
jge
in
mov
xor
jno
jl
add
imul
ret
inc
mov
arpl
adc
xor
cmpsb
mov
dec
add
fsubl
loop
add
fs
jp
add
sub
push
movsl
mov
or
stos
iret
ror
pop
pop
cmp
push
sarb
add
adc
gs
and
jnp
rcrl
lods
mov
fnstcw
mov
cmpsb
repnz
incb
nop
jns
sub
jl
add
jno
mov
push
addl
fadds
mov
addb
xchg
sbb
add
add
add
setle
movsb
repnz
repnz
roll
push
push
jle
cmp
icebp
cmc
xchg
mov
movl
js
mov
cwtl
incl
lea
dec
in
push
push
repnz
pop
int3
pusha
roll
pop
mov
mov
in
sbb
mov
adc
mov
mov
xlat
out
sbbl
aad
mov
lret
push
pop
and
xor
add
dec
xchg
push
dec
and
or
and
scas
in
mov
rorb
loopne
dec
or
push
add
dec
lcall
and
in
mov
nop
mov
lds
mov
adc
push
xorb
sbb
ss
mov
loopne
incl
xchg
jge
jecxz
outsb
adc
push
pop
imul
out
xchg
lahf
mov
leave
lods
mov
mov
ja
pop
mov
bound
sbb
xorl
adc
repnz
add
xchg
aas
insl
std
pushl
sbb
addb
dec
jo
adc
test
in
imul
mov
cld
call
pop
jnp
jmp
or
fstpt
adc
xor
add
daa
jnp
fadds
sub
mov
push
add
rol
mov
add
xchg
cmp
shlb
scas
hlt
int
pop
xorb
cmc
stos
add
inc
inc
jl
or
stos
outsl
test
push
pop
inc
iret
movsb
pushf
pop
or
push
fmuls
fcomip
or
cmp
push
rorb
and
push
shll
test
cmp
xchg
ffree
xchg
xchg
in
jbe
xor
jl
and
cld
jne
clc
icebp
out
add
scas
js
aam
adc
test
fs
jnp
add
cmp
icebp
pop
in
into
add
adc
xchg
ret
incl
or
add
jge,pn
shl
inc
sbb
jbe
js
insb
repz
jg
pop
mov
add
outsl
jbe
mov
xchg
xchg
pop
mov
jae
add
xor
scas
std
dec
sbb
nop
add
stos
addr16
add
cmp
cld
cmpsl
bound
mov
mull
cmp
push
cmp
pop
push
lock
lahf
sbb
shr
add
cmc
in
or
into
add
insl
dec
cmc
or
xor
ficompl
mov
rcrl
pop
and
mov
iret
push
mov
and
push
xchg
mov
pop
add
push
mov
cmp
push
push
js
loopne
xchg
pop
mov
add
out
jno
adc
leave
mov
xchg
dec
and
pusha
js
fisttpl
xchg
jbe
mov
test
insb
sub
add
adc
mov
push
dec
and
pop
ret
stc
xchg
repz
mov
mov
je
inc
add
push
dec
enter
add
xor
jb
int3
pop
add
test
cmp
mov
inc
bound
jp
mov
inc
sti
pop
cmp
dec
ja
and
js
mov
lock
pop
adc
enter
cmp
push
add
stc
cmpsl
mov
dec
jo
xchg
or
lods
incl
xor
dec
push
add
sbb
sub
sub
divl
test
sbbb
jnp
sbbb
fucomp
sbb
cmp
mov
jb
inc
loopne
cmp
inc
add
or
int
mov
out
call
in
xchg
or
dec
pop
or
lds
inc
add
lods
inc
add
add
or
sbbl
mov
cmp
sti
xor
or
cmp
and
mov
add
js
adc
ja
leave
or
add
xor
iret
dec
pusha
nop
jle
and
jno
add
ret
add
xchg
call
arpl
cli
or
leave
dec
cmp
mov
add
lock
cs
or
xchg
popf
adc
adc
dec
fldl
aam
loopne
cmp
and
cmpsb
cmp
pop
add
dec
lahf
aas
roll
lods
sub
pop
add
hlt
inc
and
repz
int
in
fwait
mov
repnz
or
imul
ds
add
pop
jnp
push
mov
add
hlt
pop
lea
lds
movb
into
dec
or
jb
dec
add
xchg
add
push
int3
ds
mov
mov
dec
in
xor
mov
mov
cmpsl
add
xor
add
and
sub
in
mov
mov
lea
jae
repnz
subb
jnp
lods
add
mov
test
pop
mov
addb
mov
and
mov
xor
pop
inc
or
add
mov
test
mov
adc
sub
and
pusha
jl
imul
pop
bound
add
je
rorb
add
mov
jg
add
jb
lods
sub
fcoms
xchg
inc
aaa
int3
cmp
jg
test
push
adc
mov
xor
outsb
add
and
sub
in
mov
lds
xchg
cmp
pop
add
xchg
nop
addr16
mov
xor
cmp
add
adc
xchg
arpl
cltd
add
inc
cmpsb
test
mov
lret
or
shrl
sbb
push
fwait
and
imul
mov
cmp
inc
adcb
test
xchg
xorb
push
pop
sbb
xor
or
mov
inc
push
lahf
push
fistl
icebp
cmpsl
jnp
add
scas
push
jno
xor
push
call
fs
lds
movsb
pop
add
leave
and
into
in
push
lahf
aad
shrb
jle
add
xchg
ds
dec
sbb
lock
sbb
add
into
jne
shr
and
fistl
pop
cmpsl
pop
cmp
and
sub
loopne
xlat
fcmovbe
sti
lahf
imul
int
mov
adcb
jl
stos
jge
lea
stc
out
cmpsl
sbbl
fwait
and
pop
add
dec
inc
int3
addb
mov
push
ret
in
nop
and
push
pop
lcall
andl
or
out
mov
test
andb
imul
cwtl
lcall
add
ficompl
adc
outsl
inc
add
ret
pop
hlt
inc
push
leave
rorb
sbb
fs
cmc
out
push
je
add
or
push
and
in
inc
push
adc
nop
xchg
int
lcall
inc
add
pop
mov
aaa
add
insb
xchg
ror
push
add
xor
out
in
mov
push
push
test
test
fidivs
xchg
add
sbb
inc
sbb
cli
pop
add
cwtl
pusha
in
jg
daa
or
push
ret
pop
cmp
test
fmul
mov
inc
mov
icebp
mov
pop
cmp
add
repnz
stos
push
and
arpl
fdivs
add
xchg
testb
idivl
cmp
dec
pop
add
hlt
push
shlb
xor
cmp
mov
add
aaa
addl
dec
sahf
add
xchg
repz
faddl
add
call
mov
add
dec
sub
add
push
aam
aaa
mov
sbb
adc
or
mov
add
dec
mov
xchg
inc
dec
sbb
add
xchg
pop
stc
loope
add
push
sbb
idivl
add
sbb
and
loopne
icebp
lods
test
add
rol
daa
shlb
popl
pushf
fs
lods
repz
pop
test
and
add
cmp
fucomi
mov
mov
jecxz
cltd
push
mov
arpl
sbb
pop
xlat
add
fbld
cwtl
outsl
mov
or
arpl
add
xchg
add
mov
push
lret
or
jp
pushf
add
mov
and
adc
in
adc
or
jns
mov
cltd
push
pop
inc
sahf
cmp
mov
in
cltd
adc
mov
sub
ret
js
int3
idivb
ss
movl
push
sbb
mov
xor
rcl
movsb
push
js
add
arpl
and
in
add
jg
ljmp
jb
pop
lret
jle
iret
add
sbb
xchg
add
std
rcrb
add
and
jmp
outsl
lock
dec
cmp
cs
loopne
pop
fs
std
les
fcomps
jo
and
cmp
and
add
xchg
aaa
mov
push
loope
push
jo
repnz
imulb
xchg
push
and
jo
into
add
pop
stc
jns
add
movb
push
scas
lret
sahf
dec
cvtps2pi
addl
fnsave
aaa
mov
xchg
jle
xor
movl
pop
xchg
add
leave
xlat
les
in
xchg
mov
pop
sbb
sub
cmp
add
outsb
adc
xchg
add
lcall
mov
ret
jle
iret
inc
test
movsb
add
mov
out
lds
pavgw
les
in
add
push
je
pusha
cs
iret
ficoml
cmp
mov
dec
pop
mov
or
cmp
pushf
pop
loop
add
inc
pop
xchg
push
test
jns
add
lock
cli
pcmpgtb
lods
sub
push
inc
icebp
or
scas
jbe
pusha
adc
inc
cmp
ljmp
lods
pop
add
adcl
and
push
pop
adc
mov
inc
fidivs
xor
data16
adc
jae
popf
gs
mov
mov
pop
outsb
loope
cmp
add
adc
test
xchg
loopne
shlb
and
aam
add
xchg
xor
data16
xor
jmp
imul
stos
and
jns
cmp
add
xor
cli
add
xor
and
imul
jl
sub
lcall
and
movsb
dec
jae
mov
shr
inc
sbb
xchg
push
repnz
cmp
pop
test
mov
fdivl
and
mov
push
movsb
xchg
mov
push
test
lret
in
add
mov
loopne,pt
add
sbb
pop
adc
pushf
lock
adc
jg
jo,pn
add
mov
adc
or
pop
sub
je
pop
shrb
sub
imul
xor
icebp
out
adc
aam
in
cmc
aaa
rol
sub
ja
test
rclb
clc
jge
xchg
rorb
mov
xchg
inc
adc
xchg
out
popl
scas
cmpsb
mov
or
mov
xchg
and
mov
jmp
adc
and
stos
cmp
mov
leave
push
add
xlat
dec
sbb
je
cli
loop
push
cmp
xchg
cmp
fadds
jns
pop
mov
mov
xchg
bound
enter
fcompl
cmp
loopne
mov
jl
sbb
push
popf
inc
bound
or
xor
insl
and
xchg
es
mov
nop
or
cmpsb
stos
add
rorb
outsb
test
xor
add
mov
repnz
add
out
and
pushl
pop
lea
roll
scas
imulb
lods
xchg
xor
xor
stos
outsl
and
add
pusha
mov
sub
sti
add
sbb
ds
pop
fcomps
mov
xchg
xchg
adc
dec
loop
jge
sbb
dec
and
fmuls
stos
pop
clc
add
push
push
push
dec
or
push
cmp
fldcw
lret
ret
jbe
inc
cmp
in
pop
add
mov
int3
in
dec
clc
add
or
adc
pop
lods
ret
aam
adcl
call
ffree
sub
repz
in
push
add
notb
ret
push
mov
xor
jno
xchg
adc
outsb
cli
mov
mov
in
add
adc
mov
call
fnsave
std
in
add
sarl
aam
push
add
loopne
add
push
sub
jg
add
mov
add
cmp
sub
lods
aas
cmpsb
call
push
pop
mul
hlt
mov
xchg
movsl
inc
add
push
xchg
shl
push
in
xor
or
out
int3
test
xor
add
test
inc
pop
pop
sbb
std
xor
xor
xchg
lcall
jae
sbb
xchg
std
jo
and
lds
add
jne
or
mov
pop
adc
test
and
insl
lods
inc
cli
pusha
cmp
dec
add
lock
sbb
in
sbb
xchg
aas
aaa
mov
jl
stos
pusha
scas
xchg
es
testl
xchg
xor
add
pushf
and
pop
inc
add
push
sbb
xchg
call
into
repnz
cwtl
repz
ret
inc
adc
fistpl
pop
xor
sub
sbb
mov
add
lahf
and
stc
mov
mov
mov
push
shll
xchg
fdiv
adc
loope
add
pop
mov
mov
outsb
xchg
jnp
or
sarb
addb
adc
pusha
add
test
sbb
and
add
xchg
xorb
mov
loope
test
outsl
push
test
xor
mov
and
and
cmp
add
adc
mov
or
inc
out
rcr
xchg
jbe
inc
aaa
xor
sub
add
sbb
mov
imul
fwait
push
mov
imul
ljmp
push
rclb
mov
sub
sbb
jbe
es
sub
rcrl
mov
cli
lods
add
or
pop
add
movb
std
mov
popl
nop
dec
cmp
cmp
lcall
aam
dec
rol
add
add
sbb
nop
idivb
jp
lea
jo
sti
lcall
add
mov
loopne
and
add
adc
incl
stc
inc
add
test
push
push
loope
xchg
cmpsl
add
cmp
cld
insb
add
jbe
pop
adc
data16
int3
fs
dec
sub
or
lret
cwtl
wbinvd
cmc
sahf
xchg
adcl
movsb
std
xor
add
adc
mov
sbb
jo
pop
popf
push
sbb
stos
sub
dec
cmp
arpl
shlb
clc
imul
cli
repnz
stos
pop
loopne
dec
add
fmull
pop
inc
dec
stos
xor
mov
loope
mov
call
add
lret
cmp
adc
add
stc
add
shl
lret
mov
add
call
mov
andl
add
xchg
addb
mov
sub
enter
add
add
divl
jg
repnz
adc
aad
repnz
xor
lret
pop
inc
pop
or
cs
out
and
xor
cmpsb
lea
aam
pop
add
std
mov
push
cs
push
mov
pop
das
lds
push
jb
jl
rcl
fwait
mov
cmovl
inc
mov
lds
cmp
mov
add
aas
pop
or
lock
mov
cmp
lahf
les
into
in
push
add
jmp
xchg
imul
int3
xor
cwtl
lcall
sub
xor
xor
lcall
movsb
scas
cmp
push
cwtl
cld
add
leave
xchg
add
push
iret
dec
add
insl
aad
pop
sbb
pop
int3
add
dec
push
lods
jg
jmp
mov
arpl
pop
add
jp
bound
sets
mov
pop
stos
inc
sbb
test
leave
xchg
add
popa
cmpsb
lods
xor
repnz
push
in
and
add
pop
jns
sub
dec
xor
xchg
sbb
mov
add
mov
push
in
faddl
fwait
lahf
pusha
pop
pop
cmp
push
add
cmp
ror
test
push
paddusw
sub
daa
mov
mov
hlt
pop
inc
dec
outsl
push
sbbb
shlb
cmp
mov
inc
or
test
add
aad
push
push
aas
ja
std
push
sbb
mov
pop
add
icebp
lea
cmc
dec
inc
xchg
fwait
xlat
adc
enter
jb
nop
addr16
push
jge
push
leave
xor
test
jle
stos
nop
ss
add
pushf
cmpsl
notl
mov
push
cmp
rolb
dec
jb
add
loope
jp
mov
and
in
sbb
add
divb
andb
lea
cmp
add
pop
ljmp
or
push
adc
mov
jo
add
mov
int
call
and
cmp
sub
imul
add
xchg
push
dec
movups
sbb
mov
inc
cmp
push
sub
inc
test
adc
loopne
les
fldenv
pop
add
inc
into
aas
nop
out
add
xchg
loope
cli
jae
add
xchg
jmp
xchg
mov
pop
mov
int
dec
sahf
add
ss
push
sarb
sbb
mov
sub
outsb
fmul
jecxz
nop
xor
or
fstpl
adc
sti
sbb
xchg
push
enter
add
dec
mov
ss
enter
xchg
sub
mov
add
popf
mov
clc
loop
sbb
mov
inc
movsb
push
adc
inc
mov
rolb
clc
dec
ja
add
pop
xchg
dec
add
xchg
jno
cmp
je
adcb
lcall
sub
push
pop
sbb
inc
mov
cwtl
inc
into
or
rcll
pop
bound
lcall
add
fsubl
aas
pop
inc
andb
dec
add
pushf
push
dec
sub
or
pushl
add
mov
nop
scas
insl
or
cmp
cmp
pop
cmp
out
jle
xor
ds
sub
pop
pop
das
cmpsb
pop
mov
sub
and
hlt
ror
add
xchg
bound
pop
aas
sub
loopne
mov
add
ds
adc
cmp
and
ds
add
jne
js
lahf
test
sub
or
add
cltd
pop
push
jg
cmp
xor
jns
ret
xor
cmp
seta
push
std
adc
mov
sbb
xor
pop
adc
cltd
add
das
sub
push
icebp
mov
movsb
and
adcb
add
inc
fld
cld
push
lret
add
clc
pop
shlb
push
aas
ret
iret
sbb
pop
sbb
mov
mov
fidivrl
or
xchg
cwtl
adcb
scas
add
dec
cld
pop
into
xor
lret
and
sbb
push
and
roll
mov
add
add
add
fs
mov
rcrb
mov
xchg
sub
sbb
dec
dec
lods
add
push
aam
xchg
std
mov
add
push
loopne
imul
jne
test
mov
es
call
shll
jb
add
aad
mov
out
jecxz
add
push
inc
test
fimull
and
test
mov
sub
pop
movsl
adc
mov
mov
mov
repnz
imul
inc
int3
or
inc
xchg
repnz
xchg
mov
or
mov
xor
jl
dec
fldenv
cmc
imul
or
inc
adcb
push
clc
cmc
aaa
and
fnstenv
add
mov
sahf
fists
int
add
pop
and
mov
iret
inc
cld
inc
push
jo
adc
sbb
jns
cmp
lret
adc
outsb
cld
pop
ja
pop
xrelease
and
out
push
cld
mov
out
jmp
dec
inc
jne
or
aam
cmc
push
enter
add
pop
loope
gs
cmpsl
insl
into
dec
or
xor
loop
mov
xor
xchg
cmpb
stc
int
enter
and
adc
ja
add
push
inc
nop
inc
adc
loop
add
cmpsl
push
cmp
cmp
scas
lods
add
and
or
jno
lret
out
add
sub
mov
repz
gs
outsl
lahf
push
and
mov
fnstsw
add
test
add
jecxz,pn
rcrb
pop
pop
cmp
and
cmp
dec
or
clc
add
inc
fwait
inc
or
mov
sub
dec
xchg
adc
notl
repz
es
push
hlt
mov
leave
pop
filds
shlb
add
into
inc
mov
loopne
aam
cmp
lahf
sbb
nop
add
or
subl
inc
pop
aam
inc
push
pop
lahf
ffreep
inc
and
xor
and
popf
fbld
jmp
adc
fcompl
adc
sub
add
int3
out
adc
inc
mov
dec
jp
mov
xchg
pop
popf
dec
cwtl
cmp
and
fs
inc
lret
jbe
sbb
pop
rolb
out
lock
xor
test
int3
loopne
inc
sub
or
jne
push
lock
rcll
lock
add
mov
or
add
pusha
pop
imul
pop
jl
imul
add
and
push
add
sbb
ret
push
xchg
int3
enter
rsqrtps
or
or
push
cltd
lock
or
mov
mov
inc
xor
loopne
and
lds
mov
imul
sbb
es
addb
add
xchg
push
add
and
movsb
inc
mov
mov
cltd
cmpsl
fnstsw
loope
adc
ret
popa
dec
and
or
iret
inc
adc
sub
sbb
adc
test
jmp
mov
clc
call
lahf
sub
cltd
inc
cmp
movsb
outsl
mov
xchg
add
cmpsl
mov
inc
cmp
push
mov
dec
popf
push
pop
roll
jb
inc
pop
and
add
imul
pop
sbb
inc
out
and
loopne
outsb
aaa
mov
add
or
lods
pop
xchg
add
mov
xchg
mov
das
nop
and
lahf
dec
loopne
dec
das
mov
popf
add
aad
mov
xchg
sbb
sbb
or
int
rclb
jecxz
fcmovnb
add
lods
pop
into
adc
lcall
sub
nop
sbb
adc
inc
mov
test
loope
xor
stos
scas
push
sbbl
mov
or
leave
sbb
movsl
test
in
je
sub
push
mov
ret
shrb
ds
push
bound
fisttpll
or
dec
inc
inc
call
lcall
nop
or
jg
lcall
mov
cmp
enter
orb
leave
sbb
and
mov
add
int3
sahf
xchg
add
pop
popf
or
shlb
adc
sub
pop
clc
xor
gs
test
and
scas
mov
pop
or
push
fldenv
shlb
push
pop
iret
adc
adc
or
cmpl
jbe
jo
add
fs
or
pop
pusha
cmp
xchg
inc
pop
add
push
or
pop
push
sbbl
pop
sahf
sub
xor
in
and
stos
mov
or
cmp
fs
sub
push
mov
inc
push
fcomps
and
pop
cltd
xchg
mov
or
xor
xlat
jmp
adc
sub
jl
shlb
mov
dec
dec
mov
push
imul
in
jns
mov
repnz
add
sub
ficomps
pusha
add
push
inc
jge
rcl
pop
ret
or
mov
cmc
push
xor
mov
pop
sub
or
je
iret
and
cmpsl
sbb
cld
pop
nop
adc
enter
jo
aaa
xchg
idivl
push
lods
inc
pop
hlt
aad
cmp
xchg
fcompl
jecxz
es
dec
mov
enter
sub
mov
mov
lock
xchg
leave
xchg
in
addb
imul
mov
inc
scas
jmp
xor
adc
or
test
cmc
fsubrs
pop
addl
aas
scas
mov
push
cmp
xor
lock
add
int3
push
out
loopne
mov
test
add
jl
sub
int
lock
cmpb
clc
aad
fwait
and
arpl
cs
push
aas
pop
rorb
cltd
pop
enter
repz
hlt
jle
imull
adc
popa
or
inc
lock
add
mov
addr16
sub
ficompl
gs
push
and
sbb
add
cmp
add
sbb
in
add
ljmp
fsubrl
lahf
add
add
xchg
mov
xor
mov
in
adc
add
cmp
lods
les
clc
pop
nop
inc
jmp
cwtl
call
repnz
push
divb
inc
xor
push
push
mov
dec
out
lret
lods
add
daa
mov
mov
mov
mov
xor
add
sbb
hlt
dec
incl
loopne,pn
into
loopne
orl
or
stos
and
inc
inc
inc
dec
jnp
add
dec
int3
jge
mov
sub
cwtl
or
mov
pop
jg
mov
push
jl
div
push
hlt
xchg
or
rcrb
dec
inc
inc
and
add
sbb
add
jnp
hlt
dec
or
daa
ds
test
movsb
outsl
aam
xchg
roll
inc
les
mov
iret
ret
inc
sarb
leave
and
pop
add
stos
outsb
pop
flds
mov
push
mov
fidivrl
repnz
aam
iret
and
sub
add
stos
pop
ja
push
mov
iret
rcr
rol
shlb
cmp
popa
lods
add
mov
add
mov
mov
pop
or
dec
push
mov
fcomps
pop
cmp
pop
or
imul
ja
jno
xchg
adc
jmp
xchg
sti
and
vshufpd
add
test
dec
hlt
push
lods
frstor
shrl
aad
sbb
in
adc
jp
cmp
or
icebp
clc
push
add
adc
push
cmpsb
mov
icebp
mov
addl
daa
loopne
add
or
mov
adc
ffreep
inc
hlt
data16
daa
xchg
xor
cmpsb
jg
add
pop
push
sbb
inc
imul
ja
hlt
push
sub
or
push
inc
outsl
mov
into
loopne
push
jb
xchg
das
nop
mov
pop
add
mov
xlat
loopne
aas
pop
fs
mov
shl
xchg
dec
lahf
sbb
das
pop
mov
xchg
ret
and
inc
pushf
sbb
sub
adc
adc
push
scas
mov
add
in
and
sbb
into
test
iret
or
inc
inc
les
mov
sub
xchg
ret
pop
mov
orl
xor
fs
mov
shlb
roll
adc
push
pop
xchg
jg
aam
dec
inc
outsl
xorb
cli
xchg
sbb
push
notb
mov
loopne
push
mov
xchg
js
push
mov
dec
fwait
cmp
and
add
shrl
loopne
add
mov
mov
xchg
shl
push
out
pop
clc
add
stos
dec
jne
test
test
in
pop
push
in
shlb
mov
test
ret
mov
mov
mov
inc
shll
mov
pop
xchg
push
mov
in
xor
sub
push
aas
adc
add
push
jp
add
mov
xor
and
shll
mov
push
movl
xor
int3
jne
ret
adc
xchg
sub
mov
xchg
adc
adc
dec
bound
mov
pusha
ds
push
push
add
xchg
fadds
out
jbe
adc
push
jo
and
adc
inc
and
xchg
xchg
stos
cmp
orb
add
imul
sarl
sub
arpl
sbb
mov
sbb
pop
dec
push
xor
push
fisubl
sub
or
or
out
mov
std
popf
lea
hlt
jle
xor
rolb
clc
mov
or
mov
xor
lret
std
xor
sub
xor
push
add
test
mov
inc
or
adc
cmp
jno
in
out
jmp
lods
fimuls
push
pop
and
cmp
cli
or
and
add
xchg
icebp
xor
outsl
cmp
mov
pop
cmp
adc
xchg
popf
js
mov
sahf
dec
xor
sbb
ja
dec
out
add
lret
aam
lods
movsl
cmp
adc
lret
les
faddl
aaa
sbb
add
scas
add
xlat
and
and
sbb
cmp
sub
test
aad
jle
jns
xor
sbb
dec
cmpsl
mov
mull
add
xchg
sub
fstpt
mov
repnz
fwait
push
add
cwtl
pop
inc
shlb
dec
ror
into
or
dec
outsl
or
shlb
das
xor
xchg
add
jmp
mov
jle
sub
pop
cld
sbb
jnp
cvtps2pi
aaa
stos
xchg
dec
push
jecxz
mov
dec
popf
inc
pop
ret
dec
mov
and
loop
shlb
push
pop
xor
leave
xor
loopne
stc
clc
shrb
enter
mov
xchg
pop
xor
leave
addb
mov
mov
test
in
cmp
cmp
enter
jl
add
adcl
pop
cwtl
or
adc
adc
inc
push
mov
jo
clc
jmp
push
pop
js
pop
sub
and
xchg
into
les
ljmp
jne
sub
dec
mov
jb
push
stc
enter
mov
cmpsl
sub
adc
les
jae
jne
pop
mov
cmp
in
add
inc
jecxz
ror
cmp
jae
mov
or
add
loopne
xlat
xchg
sbb
xor
sbb
imul
or
or
and
pusha
popf
lsl
idivb
mov
add
jb
mov
jp
add
hlt
sarl
jecxz
mov
cmp
fstps
shr
repnz
rorl
jae
xchg
and
jae
sbb
lahf
clc
js
and
and
nop
ds
jnp
push
inc
idiv
inc
mov
cwtl
add
loope
or
xchg
cld
sbb
loopne
or
jns
movb
clc
and
cwtl
add
jbe
xor
xchg
jno
push
mov
or
xchg
inc
sub
mov
movl
mov
add
pushf
jmp
dec
and
mov
xor
jle
sbb
push
mov
mov
sub
mov
add
hlt
scas
ret
dec
jg
push
jae
rcrl
adc
add
aad
shlb
and
inc
xor
xlat
add
xor
xchg
jl
or
imul
scas
lock
pop
loop
xor
rcl
xchg
add
sarb
jg
sbb
loopne
lcall
add
jp
pop
mov
loopne
shlb
mov
shlb
in
fisttpll
insl
sub
test
sub
movsl
mov
mul
mov
mulb
and
jbe
insl
ror
push
int
movb
test
inc
pop
sbb
jge
icebp
push
dec
jno
lahf
add
nop
inc
enter
clc
repz
rcll
dec
movnti
in
mov
insb
jno
inc
outsl
cwtl
xor
rcrb
add
cli
mov
cmc
aaa
xor
pop
arpl
xor
into
or
adc
rcrb
or
dec
sbb
adc
push
je
mov
mov
lahf
pusha
push
inc
add
xchg
sbb
mov
clc
out
cmp
lret
aas
mov
sbb
mov
add
xchg
popf
lcall
adc
pop
jle
out
add
xchg
mov
fimull
add
lret
dec
add
inc
cmp
xchg
jno
push
or
inc
imul
sub
add
xchg
ja
inc
jecxz
jne
sub
inc
jns
push
xor
in
mov
sbb
rclb
add
test
inc
push
pop
andl
shl
add
out
cmp
mov
dec
lock
cmpb
loop
add
lret
jno
add
aad
inc
ret
and
or
and
test
mov
jp
stos
pop
pushf
push
and
cmpsb
dec
sbb
arpl
xchg
repnz
push
jno
dec
shrb
inc
push
jg
add
into
fisubs
dec
xor
add
nop
add
lods
pop
mov
popa
aas
cwtl
ret
pop
cs
pop
xor
jns
addb
cmp
test
add
jg
jae
mov
out
fwait
jl
add
leave
hlt
iret
adc
ret
addr16
push
das
nop
xchg
faddl
orl
ds
insl
or
in
fildl
das
pop
jae
push
imul
xchg
lea
mul
mov
mov
sarb
clc
push
push
bswap
mov
rorb
cmp
gs
or
push
pop
sub
pushf
jae
mov
xor
sbb
cwtl
sbb
sub
cmc
push
add
mov
idivb
inc
inc
stos
push
or
or
call
pop
call
adc
pop
add
mov
jae
add
imul
add
lcall
xor
iret
fidivl
mov
ja
sbb
push
and
lahf
cmp
jle
clc
mov
add
cmpl
scas
xchg
jbe
pop
pop
push
fwait
js
imul
mov
add
or
pusha
jnp
mov
dec
cwtl
add
mulb
sub
mov
or
jns
and
cmp
add
out
mov
inc
inc
push
xor
push
mov
loopne
rcrb
test
add
push
je
ret
push
push
or
fwait
pop
sbb
sbb
push
mov
cmp
mov
pop
adc
add
shlb
xlat
movups
repz
icebp
and
clc
push
dec
inc
es
add
inc
and
adcl
pushf
jnp
lahf
ret
pop
add
mov
jb
call
sub
push
jl
dec
insl
inc
dec
sub
pop
sarl
mov
je
in
les
cmp
popf
addr16
nop
push
lret
and
lock
inc
mov
insl
mov
ss
fstps
loope
es
aas
je
shll
lods
inc
pop
insb
xor
subb
inc
pushf
cmp
mov
addb
movntq
mov
nop
xor
test
inc
hlt
inc
jmp
xchg
fsubl
rcrb
mov
jb
and
cmc
lahf
xchg
hlt
inc
lret
or
xchg
cwtl
xchg
out
sbbb
add
sarb
mov
add
sub
clc
ja
and
mov
xor
lock
mov
push
dec
sub
mov
lock
cmp
mov
cwtl
pop
add
cmp
inc
sbb
out
add
fwait
cmp
ja
arpl
jo
mov
mov
mov
outsl
inc
testl
push
inc
test
call
push
push
sbb
lcall
dec
push
imul
add
push
sar
xor
xor
jg
sbbl
inc
jle
or
xor
je
int3
dec
dec
mov
xor
jbe
mov
pop
inc
cmc
lret
loopne
sub
and
add
xchg
mov
cmp
add
imul
add
add
or
nop
mov
ret
xor
out
cmpsb
ja
lds
dec
mov
and
xchg
mov
movsl
negl
nop
pusha
mov
xor
and
or
js
cmpsb
sbb
sub
dec
out
mov
cwtl
aam
leave
xor
lret
xchg
lds
xlat
dec
push
or
cmpsl
mov
add
dec
inc
shrb
inc
pop
pop
jae
add
sbbb
rcl
insb
xchg
adc
repnz
or
and
testb
lea
ja
insb
push
pop
pop
pop
fisubs
shlb
jmp
insb
incb
imul
mov
les
lcall
and
lret
pusha
xchg
pusha
adc
pusha
ds
out
minps
pushf
jns
into
divb
add
mov
subb
add
push
jo
lea
jle
push
js
fwait
jp
jno
mov
stc
sbb
cmpsl
mov
insb
xchg
dec
pop
xchg
jg
mov
push
jne
cmp
sbb
push
andl
jg
pop
ficoms
xor
movsb
add
fcomp
lcall
cmp
push
xor
and
push
dec
and
jmp
xchg
mov
push
or
loopne
rolb
and
mov
add
stc
out
or
or
sub
nop
fimuls
xchg
insl
sub
loopne
shlb
lahf
mov
int3
loopne
into
das
pusha
sbb
mov
test
or
jecxz
stos
jmp
cld
dec
or
rorb
add
gs
lock
cmpsl
pop
inc
push
leave
faddp
mov
in
or
jl
test
add
cmpsl
jecxz
mov
and
cmp
popf
xchg
test
lcall
or
mov
add
movsb
jge
push
add
cld
inc
fwait
je
jp
add
ret
incb
or
fstp
pop
mov
ja
inc
cld
sbb
jb
and
and
leave
mov
mov
push
sbb
adc
add
test
fwait
dec
orb
loope
add
les
pop
xor
xchg
cmpsb
jns
aas
push
jle
test
mov
cmpsb
xchg
adc
rcrl
and
push
pop
bound
sarb
add
pop
xchg
lahf
roll
mov
jno
test
cmc
cwtl
cltd
add
fwait
mov
mov
sbbl
sub
lods
push
int
movsb
sarb
push
xchg
pop
pushf
or
inc
add
xchg
mov
call
cld
sbb
pushf
dec
mov
enter
scas
test
pop
inc
clc
lret
inc
clc
or
test
int
xchg
nop
insl
sbb
shlb
dec
add
xchg
fidivs
hlt
cmpsb
movsb
adc
clc
pop
dec
and
push
movsb
pop
mov
dec
add
or
jbe
sbb
push
and
cmp
test
in
add
shll
shrb
cmp
pop
mov
xchg
out
test
sub
ja
or
pop
push
loope
or
pop
movsb
ja
push
push
pop
fldl
ljmp
je
and
leave
mov
dec
jg
jno
imul
sbb
dec
xor
mov
xorb
popa
test
rep
add
sbb
ljmp
xlat
xor
test
lahf
push
ret
js
mov
into
jle
add
loop
sbb
pop
rorl
jne
sti
mov
add
inc
shlb
jl
pop
add
mov
call
ja
leave
cmc
lahf
push
mov
and
shrb
mov
imul
imul
mov
xor
scas
cwtl
or
or
add
mov
das
push
scas
movsb
dec
xor
aad
ljmp
add
mov
dec
push
xchg
ss
dec
imul
xchg
or
insl
outsl
rcrl
popa
push
xchg
sub
das
in
shl
push
or
dec
sahf
adc
sub
add
sbb
xor
push
int3
or
and
pop
add
sbb
add
mov
xchg
scas
adc
lock
test
sub
add
xor
orl
cmp
fbld
adc
in
andb
lock
add
sahf
stos
jo
jnp
sub
nop
or
or
sbb
mov
pop
sahf
sarl
add
and
ljmp
dec
and
and
add
cmpsl
lods
inc
sbb
mov
add
pusha
cli
push
shl
scas
dec
roll
lock
insl
addl
notb
push
psubusb
ljmp
cmc
or
or
les
lret
jns
cs
xor
pusha
and
add
lds
test
inc
aam
shl
clc
outsb
ret
push
rorb
pop
rorb
call
pop
or
mov
dec
jne
shlb
jb
fucomi
push
std
push
iret
shlb
dec
jle
or
leave
call
add
testl
sub
int3
mov
loopne
sub
sbb
imul
cmp
xchg
jo
pushf
sub
shrb
call
lds
pop
roll
and
pop
popf
cmp
sub
adc
bnd
mov
adc
xorb
cmp
sub
outsb
xor
and
sbb
jecxz
add
jg
cmp
sub
inc
popl
lret
shl
movsb
xor
or
loopne
jl
out
in
arpl
adc
pop
ror
add
sbb
xor
scas
es
push
jl
es
insb
inc
cmp
mov
and
xchg
add
push
lahf
add
sub
clc
bound
dec
xor
dec
lret
test
cli
and
fstpt
mull
lret
mov
mov
sbb
add
pop
pop
xor
mov
and
lea
xor
punpckhwd
out
dec
jb
out
mov
add
mov
xor
repz
aam
cltd
mov
mov
stos
repz
mov
and
and
inc
add
movsl
lods
ss
sub
sub
bound
mov
rcrb
jno
jb
xchg
iret
add
mov
imul
xor
inc
add
iret
cwtl
xor
sub
pop
xchg
leave
jno
insl
fs
sahf
pusha
xchg
or
in
xor
push
sub
add
pusha
lahf
mov
shll
sbb
imull
jno
pop
js
sbb
pushf
sbb
and
shll
add
mov
aaa
add
sbb
jb
out
ret
xor
xchg
sbb
add
push
aad
test
mov
push
add
in
sub
leave
sbb
and
les
lods
nop
pusha
cmp
cld
mov
sbb
inc
test
cmp
les
jge
sbb
push
inc
ja
cmpsl
popa
notl
rorl
jge
xor
pushf
inc
data16
xor
add
sti
mov
lcall
inc
or
sbb
call
stc
not
popf
js
add
test
add
daa
js
sbb
enter
cli
jno
cltd
push
xchg
adc
adc
and
into
lock
add
and
xchg
add
or
push
test
adc
jecxz
inc
xor
xor
push
fyl2xp1
sub
cwtl
adc
add
or
mov
outsl
and
ja
fdivr
adc
and
movsl
repz
xchg
sbb
mov
add
mov
jns
in
decb
aaa
inc
fidivl
inc
fisubrs
add
maskmovq
negl
xchg
pusha
ja
inc
fisttps
push
mov
popa
add
loope
inc
pop
push
dec
mov
lcall
push
aam
cmp
aam
mov
fwait
add
mov
mov
add
push
lods
and
or
bound
adc
inc
into
mov
push
out
add
fsts
sbb
enter
into
mov
negb
push
out
jne
pop
xor
into
pushf
add
push
fadds
adc
jmp
mov
add
mov
testb
or
mov
adc
adc
pop
ja
andb
sbb
add
xor
addl
pop
pop
and
and
add
popa
mov
fwait
xor
and
add
pop
mov
adc
mov
iret
rcrb
jae
and
mov
pop
cli
mov
arpl
xchg
rolb
out
call
inc
rclb
sub
mov
pop
movsb
adc
int
jo
js
rorl
lds
sub
push
add
push
xor
out
or
sub
dec
mov
mov
repz
xchg
sub
adc
mov
inc
insb
adc
and
int3
imul
jne
outsb
lods
add
mov
and
inc
enter
repz
aam
jmp
mov
xchg
mov
sahf
push
mov
xor
sbb
jge
pop
jle
sub
mov
sub
and
ja
rclb
stos
int
xlat
xchg
andb
or
and
mov
push
lods
test
or
fs
test
and
cmp
idivl
sbb
mov
mov
adc
lock
pop
scas
daa
std
aam
loopne
cld
in
xor
jge
adc
xchg
dec
sbb
push
xchg
jno
cli
insb
xchg
int3
add
test
testl
lds
jmp
sahf
mov
lods
in
lock
xchg
js
inc
loopne
dec
and
adc
push
daa
xor
fs
in
mov
cwtl
test
in
and
add
sbb
lea
xchg
int3
jns
insl
xchg
insb
inc
add
cld
mov
addr16
rclb
mov
mov
xchg
pop
les
jl
addl
ds
insl
fsubrs
cld
push
pop
jbe
and
imul
inc
int
jnp
cmpb
xchg
popf
mov
push
addl
mov
jecxz
and
dec
or
sbb
test
mov
pop
or
pop
push
push
cmp
pop
sbb
addl
es
in
lea
lds
or
xor
pusha
mov
sub
push
data16
fsubrs
call
sub
stos
orb
pop
in
add
mov
or
cld
add
add
xor
and
xchg
jmp
nop
or
mov
lods
lods
popa
mov
and
jge
iret
sub
clc
adc
pushf
cld
adc
cltd
stos
adc
dec
lret
inc
pop
adc
xchg
xchg
enter
jecxz
xor
fidivrs
add
iret
outsl
cmp
lods
std
dec
inc
xchg
push
mov
popf
add
mov
add
sbb
sahf
cmpl
test
add
iret
adc
xchg
icebp
dec
inc
push
sbbb
cwtl
sub
mov
sbb
js
test
pop
dec
jl
inc
dec
add
out
xchg
fcompl
iret
add
fwait
lea
cmp
mov
loope
lods
push
mov
int
and
xor
pop
cli
jno
adcb
sbbb
push
or
shrb
daa
das
cmc
push
lock
cmp
add
jno
outsb
test
cmp
mov
push
mov
or
jne
add
out
jno
mov
add
mov
adc
sbb
pop
fcompl
xor
pop
in
add
xor
shlb
cs
jbe
cmpsl
or
pop
add
jno
sbb
mov
dec
gs
lods
push
lods
sbb
jns
inc
sbb
mov
in
inc
xchg
inc
lds
mov
add
iret
fcmovnb
sbb
add
sbb
into
xorl
imul
fldcw
mov
cmp
sahf
bound
push
sahf
cmp
inc
test
stc
clc
inc
sbb
xchg
push
jno
outsb
mov
sbb
xor
test
add
loop
xor
mov
push
lods
iret
loopne
imul
bound
add
push
xchg
adc
push
mov
mov
sbb
nop
lock
arpl
adc
dec
push
jp
xor
mov
repz
daa
cmp
lods
pushf
xor
pop
mov
repnz
xor
or
adc
hlt
sub
sbb
mov
xor
jae
mov
pusha
mov
scas
imul
clc
adc
xor
clc
sub
jno
sbb
in
add
mov
testb
test
pop
fists
xor
add
pop
int
adc
and
xor
test
xchg
mov
incb
lds
cmp
fadds
cmpsl
lods
inc
pop
pusha
push
jp
je
fisttpl
fiadds
push
pop
out
hlt
mov
cmpsb
push
sbb
inc
pop
rolb
fiaddl
cmpb
cs
sbb
das
iret
xchg
push
push
xor
mov
mov
cmp
xchg
pop
sub
xorl
aad
sti
shll
cld
mov
xor
arpl
sub
mov
cltd
rol
jns
sbb
lock
iret
push
cmp
movsl
push
jo
inc
stos
jne
nop
jl
sub
sarb
sub
inc
cwtl
andb
cwtl
sub
add
loopne,pt
mov
pusha
sbb
add
pop
sbb
xchg
cmp
cmp
imul
test
add
cmpsl
cmpsb
xor
push
mov
inc
inc
icebp
inc
mov
and
dec
push
add
inc
and
xor
lods
sub
das
sub
mov
inc
or
add
js
and
push
or
cmpsl
cwtl
jl
divl
mov
adc
popf
cwtl
push
adc
xlat
add
loop
pop
add
jg
push
lret
inc
pmuludq
pop
ret
push
dec
fldcw
call
and
push
lret
inc
or
mov
dec
push
loopne
push
imul
outsb
shlb
pop
nop
xchg
loopne
or
adc
aaa
xchg
int3
dec
xor
add
cli
xchg
je
bound
adc
mov
leave
add
xchg
sub
push
or
mov
push
xchg
mov
loopne
pop
mov
push
insb
cmp
dec
loopne
addb
add
jns
push
cmp
lods
mov
les
mov
lea
addb
xchg
sub
mov
lock
test
in
add
inc
lds
mov
enter
iret
call
sbb
stc
adc
add
lods
mov
push
repnz
sbb
adc
xor
dec
push
cmp
inc
sub
adc
mov
clc
adc
xchg
rcrb
pop
mov
sbb
jg
ja
push
push
daa
push
xchg
rclb
test
cmp
enter
and
xchg
in
dec
imul
add
adc
add
jns
cwtl
test
insb
and
sub
mov
lock
cmp
xchg
out
push
pop
xor
rorb
fdivs
lcall
les
rorb
sub
pusha
cli
sbb
lods
add
mov
add
jnp
or
loopne
sbb
xchg
hlt
mov
aad
bound
sbb
dec
popa
inc
es
adc
clc
mov
adcb
cwtl
movsl
xchg
mov
pop
inc
cmp
mov
rcrl
jnp
pushf
inc
clc
adc
jne
xchg
dec
test
sbb
add
jo
shlb
or
jno
sbb
ss
or
push
sbb
pop
xor
or
aad
pop
adc
movsl
sbb
imul
test
jns
outsb
or
std
mov
inc
flds
xchg
dec
add
ret
cltd
adc
mov
pop
dec
dec
aad
adc
sbb
cmc
rcl
clc
add
dec
xorb
mov
arpl
iret
sub
cmp
dec
lods
int
inc
in
andb
bnd
xchg
mov
andl
sahf
dec
and
idiv
addl
stc
xlat
movsl
xor
loopne
fcmovnb
mov
or
push
aas
mov
adc
xchg
xor
dec
cli
fiadds
scas
lods
fwait
addr16
out
inc
and
push
inc
pop
xor
xchg
das
shl
ljmp
sbb
aaa
jnp
cmp
xchg
out
xor
sbb
cmp
push
aaa
xchg
pop
add
int
dec
lock
popa
jmp
daa
sbb
jb
js
add
xor
sub
lret
cmp
int3
mov
jle
je
add
mov
jge
add
jbe
cmp
add
imul
leave
add
popf
adc
ret
out
push
push
xlat
dec
sub
pop
in
rolb
cmp
add
andb
sub
cli
loopne
cmpsl
push
mov
add
xchg
adc
psubsw
fwait
and
stc
or
mov
cmp
nop
and
pop
lret
mov
pop
or
sub
shrb
push
rcll
jp
insl
dec
and
cltd
pusha
inc
gs
xor
inc
inc
test
adc
mov
pop
push
inc
fldenv
and
add
hlt
icebp
inc
dec
repz
shlb
mov
add
xor
add
insb
xchg
loopne
push
mov
mov
xchg
pop
xacquire
out
or
add
inc
int
cmp
and
jg
jns
scas
imul
push
adc
adc
inc
aaa
sbb
inc
sahf
add
imul
in
mov
call
dec
jnp,pt
pop
add
add
and
fadds
mov
mov
in
add
push
leave
add
aam
popf
cmp
add
gs
fistpl
shrl
pop
hlt
mov
stos
push
rcrb
and
cmp
ficoms
jo
mov
sbb
add
enter
jnp
add
pcmpgtb
jmp
cltd
nop
sub
inc
ljmp
and
insb
mov
leave
fs
les
jmp
ficoml
fcoml
ds
and
enter
mov
and
ljmp
stos
mov
ret
fstl
mov
dec
cmp
shl
push
push
pop
mov
int3
add
sbb
push
inc
or
dec
push
jge
push
orb
out
dec
push
pop
call
mov
add
mov
les
cmp
loopne
nop
push
add
stos
mov
cli
xlat
rclb
add
sbb
or
fimull
inc
xor
add
add
test
mov
add
fwait
sbb
js
cwtl
add
and
aas
xor
add
fdivrl
loop
adc
gs
test
push
in
xchg
xor
lods
pop
pop
mov
dec
inc
dec
int3
add
cmovae
or
ja
hlt
add
add
adc
aam
inc
inc
scas
lock
cmp
out
inc
test
aaa
lahf
add
or
xor
or
and
add
pop
mov
and
sub
shrb
jmp
pop
or
inc
sahf
dec
mov
xlat
cmp
incb
arpl
bound
js
popa
add
ret
pop
mov
inc
adcl
mov
mov
inc
popl
cmp
lock
xlat
pop
punpckhdq
negl
call
inc
and
pusha
pop
stc
sbb
jbe
sub
add
les
lret
jmp
sarb
out
rclb
stos
inc
and
pop
jb
stc
rclb
cmpb
decb
adc
sub
inc
mov
repnz
lock
pop
stc
xor
mov
dec
add
clc
nop
loopne
dec
gs
addb
adc
dec
mov
mov
dec
inc
add
shrl
xchg
in
jp
inc
enter
mov
pop
pushf
jmp
pop
mov
add
jecxz
mov
push
cwtl
fidivl
add
xchg
loopne
rcl
out
add
mov
and
aam
mov
arpl
jg
fcomps
mov
nop
ss
or
push
repz
sbb
mov
mov
sbb
popf
les
xor
sarl
stos
cwtl
pop
test
roll
jg
mov
fsubr
push
or
cmp
lods
adc
and
test
sub
outsb
cld
call
cltd
adc
pop
or
in
fadd
mov
js
and
loop
or
xor
inc
gs
push
mov
mov
mov
add
jno
lea
add
mov
jecxz
fildl
mov
scas
test
fdivp
push
rcrl
lock
mov
push
xchg
cmp
ret
push
cmc
scas
mov
fabs
adc
enter
xorb
cmp
mov
jne
xchg
and
dec
loopne
jbe
es
mov
add
or
add
leave
ret
lods
adc
enter
test
pop
push
mov
adc
add
push
sbb
and
xor
inc
pop
jns
xor
inc
pop
push
jo
ret
mov
add
ljmp
out
and
rcl
fcompl
rclb
add
das
xchg
sbb
push
in
add
mov
sub
dec
outsb
inc
cmp
testl
add
es
scas
test
sub
adc
pop
pop
lahf
fnstcw
js
add
xor
and
inc
jbe
add
or
jecxz
add
aam
lcall
sub
rclb
shlb
stos
or
lods
ret
push
sub
popa
sbb
adc
jp
testl
sahf
cmpsb
mov
add
and
aas
or
shlb
cmc
sarb
sub
pushf
push
xchg
jl
add
sbb
sti
int3
xchg
cmp
in
xor
mov
push
adc
xor
test
xchg
push
pushf
xlat
mov
cmp
jnp
cmp
cmp
push
out
sbb
push
in
or
xchg
add
ret
jecxz
xlat
fucomi
and
pusha
push
jp
jae
xor
adc
sti
jg
push
push
rorb
inc
lahf
mov
and
xchg
push
shrb
add
in
adc
lret
jmp
push
jg
int3
cmp
xor
cmp
lods
test
dec
movsl
pop
push
je
mov
icebp
pop
xchg
push
adc
pop
mov
daa
enter
rclb
sbb
ffreep
inc
es
inc
ja
pop
inc
xchg
enter
orb
pop
mov
push
add
sbb
jae
mov
push
pusha
lods
nop
xchg
jmp
lock
daa
inc
sbb
sub
add
test
xchg
sbb
fcomps
mull
push
push
rolb
mov
int
push
mov
inc
sub
pusha
jae
or
test
fsubr
add
fildll
cld
adc
add
pushf
repz
add
sbb
cmpsl
pop
inc
mov
cwtl
sahf
add
pusha
aaa
mov
mov
cltd
sbb
mov
ficompl
rcrl
ret
add
mov
xor
add
mov
arpl
adc
push
cmp
add
mov
imul
and
subl
fdivrl
rol
pop
mov
sbb
popl
xchg
leave
mov
mov
rclb
xchg
jp
dec
fiadds
or
inc
arpl
push
sub
jmp
sub
xchg
jle
mov
jb
test
rorb
adc
jb
xor
adc
insl
xchg
lret
xor
mov
scas
mov
jp
add
nop
dec
sahf
cwtl
test
push
aam
cs
filds
add
out
lahf
pop
dec
inc
add
sub
insl
rorl
stos
add
fwait
call
push
push
xor
add
call
nop
aas
or
popf
dec
fwait
inc
lock
subl
sbb
pop
stc
add
es
inc
into
aam
lret
bound
clc
arpl
or
rorb
repnz
dec
adcb
xchg
rorb
mov
sub
movsb
inc
cmp
stc
push
push
dec
loopne
xor
pop
sbb
jo
push
add
xchg
dec
pop
shr
mov
jle
sub
xchg
cwtl
mov
push
mov
push
sbb
inc
mov
in
nop
incl
mov
ficoms
add
sbb
in
out
out
add
xor
and
pusha
xchg
xchg
faddl
cwtl
test
jns
xorl
jecxz
jnp
add
xor
mov
scas
xchg
fld
icebp
jb
xor
cmpsb
cli
cmp
cmp
lds
cmp
jno
scas
pushf
orb
mov
sub
dec
imul
push
cmp
orb
jge
jle
push
push
jbe
pusha
inc
cmp
add
imul
inc
fs
in
inc
shrb
cmp
jmp
test
mov
xor
or
int3
xchg
sbb
add
or
loope
xchg
rcll
sbb
pop
mov
xchg
cmp
xchg
mov
mov
mov
scas
dec
icebp
cmpsl
pop
add
add
sub
dec
in
pop
roll
pop
into
mov
add
xchg
es
push
mov
lds
cmp
jns
bnd
add
sbb
nop
dec
jg
test
dec
fnsave
adc
push
mov
je
je
push
xor
movsb
xchg
movb
fsubrl
jbe
test
jne,pt
ret
and
pop
xchg
bound
mov
fsubrp
rclb
mov
jno
insb
out
hlt
add
movsb
cs
xchg
dec
push
rclb
in
sbb
jle
mov
or
mov
pop
ret
adc
lock
ds
sarb
xor
test
insb
outsb
add
xor
fsub
pop
dec
js
hlt
sbb
enter
pop
into
es
mov
adc
je
xor
imul
sarl
bound
mov
lock
stos
mov
xorb
mov
data16
int
in
insb
dec
rcl
push
adc
stc
pop
sbb
and
sub
pop
jp
push
adc
addb
pop
sub
xchg
fldenv
jno
sbb
addr16
push
divl
ret
js
mov
and
fstl
and
push
loopne
or
jp
lods
xchg
ret
add
clc
jne
push
nop
pop
in
cltd
lahf
add
sti
shlb
sbb
popf
xchg
add
jns
jle
aas
add
lock
dec
pop
cmpsl
mov
or
jns
sbb
xchg
cmp
movsl
sti
ret
and
lret
sbb
in
mov
add
leave
mov
inc
cmp
lock
push
cmp
fcomps
fwait
imull
jmp
add
out
int3
sti
lock
lahf
mov
pop
jno
movsb
sarb
mov
mov
push
repz
mov
test
jo
xchg
pusha
sub
in
add
jns
cmp
mov
cwtl
add
shlb
mov
ja
xchg
mov
mov
cmp
mov
cltd
cmpl
push
mov
sbb
and
add
dec
lods
pushf
dec
arpl
loopne
loopne
sbbb
mov
mov
rolb
js
pop
dec
mov
stos
lods
out
cli
jne
aam
mov
and
mov
add
into
push
and
int3
push
or
orb
shr
out
sbb
repnz
inc
stc
xchg
mov
add
pshufw
lds
jb
out
sub
mov
xchg
add
pop
push
add
stos
cmp
adc
lea
xchg
sub
mov
fmull
or
fs
mov
mov
mov
hlt
jo
outsl
scas
jge
add
inc
fimuls
jo
xchg
sbb
in
into
rcrb
cmp
xchg
jno
or
xchg
xor
decb
call
rcrl
mov
mov
sti
mov
sarl
lods
fidivrs
and
fidivl
push
xor
cmpsl
mov
mov
jae
aam
mov
aad
divl
cs
daa
int
nop
pop
dec
sbb
mov
xor
rolb
mov
mov
pop
inc
daa
rcll
lea
pop
or
adc
lock
pop
and
cmpsl
pusha
push
mov
lret
xchg
nop
je
jo
lcall
xchg
out
pop
and
jo
xor
test
cmp
aaa
or
imull
xorb
out
adc
xor
stc
xchg
incb
xor
pop
adc
sub
push
push
pop
test
pop
cmpb
lock
lock
shl
jle
sub
add
shl
inc
mov
andb
hlt
jg
mov
and
and
idivl
mov
icebp
jne
rorl
cmp
sahf
sbb
aam
cwtl
and
sarl
sarl
shl
hlt
inc
into
cmp
mov
jno
sbb
or
fnstenv
fdivrl
shlb
pushf
mov
int3
sub
cmpsb
mov
nop
push
lret
mov
add
sub
aam
cld
ficoms
and
push
inc
or
mov
test
test
rcl
mov
xor
adc
daa
gs
test
popa
sbbl
subb
and
movb
mov
shlb
xor
jle
cmp
call
sahf
cmp
cltd
jns
and
push
xor
push
cmp
mov
xchg
add
fs
lock
adc
lods
mov
adc
shlb
jl
dec
cmp
pop
insl
cmp
std
dec
mov
enter
add
and
add
into
xor
and
mov
mov
push
aad
cmp
cld
pop
inc
sbb
adc
cli
arpl
scas
xchg
pop
push
pop
leave
bound
and
cmc
mov
outsl
test
rcrb
fcoml
push
pop
push
scas
add
out
hlt
xchg
lret
and
xchg
sbb
inc
add
lret
pop
xor
adc
inc
gs
mov
mov
sub
leave
xor
repz
jp
add
scas
xchg
mov
shll
sub
sub
xchg
sbb
les
cmp
sub
arpl
jl
mov
add
inc
fstl
in
movsb
and
jno
inc
sbb
and
push
popa
cmp
loopne
sbb
in
sbb
push
pop
xchg
int3
ja
dec
mov
mov
fdivs
mov
movb
pushf
or
test
mov
stos
hlt
push
pop
inc
xchg
pop
andl
cwtl
inc
mov
pop
scas
test
pop
pop
adc
sbb
cmp
mov
xchg
cli
or
pushf
dec
mov
jle
iret
add
xorl
mov
insb
pop
mov
cmpsl
repz
add
lds
pop
aam
and
into
jae,pn
mov
addb
std
or
lock
jno
test
call
aad
out
aaa
add
cli
cmp
movsb
cs
push
rorb
icebp
loope
sub
push
rcrl
adcb
lret
mov
push
cmpsl
ja
push
and
js
test
fcomps
int3
stos
or
mov
mov
mov
push
fisubrs
xchg
pushf
pop
repnz
cmp
push
mov
and
shll
in
jnp
aas
mov
or
pop
xchg
xor
mov
mov
inc
faddl
and
popa
arpl
xor
je
pop
sbb
cmp
pop
divl
jge
add
cltd
lock
loopne
ret
sti
xor
lret
shlb
js
sbb
out
outsb
sbb
aas
mov
sub
sub
or
add
fadds
addb
sbb
sahf
pop
js
jno
xorb
and
lret
adc
inc
mov
sub
cltd
pop
fisubl
je
push
cmpsb
and
outsb
insb
jg
icebp
sub
stos
mov
lahf
push
scas
add
xor
sbb
imul
mov
enter
les
aaa
arpl
repnz
add
cmp
scas
pop
push
sub
or
jbe
pop
sub
cmp
inc
inc
test
ficompl
push
xchg
dec
fsubrl
jo
pop
mov
push
int
fs
subb
adc
xchg
cmp
or
iret
xorb
cmp
aam
clc
bound
mov
ljmp
stos
add
lods
repnz
xor
adc
lock
inc
sbb
ret
xlat
sub
in
pop
stos
mov
lock
pusha
adc
pop
leave
cmp
cmpsb
adc
mov
jle
xchg
les
add
out
enter
sbb
out
or
lret
pop
loopne
je
cs
pop
add
mov
adc
aaa
fcoml
push
and
pop
cs
fistl
push
inc
aas
rol
orb
int
and
sbb
sub
aam
sarb
sub
fld1
sarb
lcall
mov
es
adc
adc
test
aam
movsb
sub
fwait
sbbb
test
add
lods
jns
mov
scas
loop
movsl
mov
add
popf
movsl
inc
xchg
les
xor
lret
cs
mov
cmp
mov
roll
pop
out
push
jne
add
pop
mov
lock
adc
mov
add
sbb
aam
and
inc
int
xchg
rclb
in
testl
xor
pop
mov
pop
aam
xchg
std
lock
dec
fldt
or
mov
add
pop
xchg
sub
lods
fsubs
addb
xor
pusha
mov
add
sub
inc
insb
hlt
ficoml
sub
jbe
lods
xor
and
dec
popf
leave
jno
bound
sub
add
daa
in
cwtl
sbb
xor
adc
push
mov
sarb
push
hlt
jecxz
add
jne
xchg
out
icebp
js
push
mov
add
jae
dec
sbb
popf
pop
mov
stos
xchg
fwait
mov
mov
int
call
enter
pop
jbe
jg
sahf
pop
sbb
mov
add
out
xor
rcll
add
aas
cmp
xchg
or
daa
push
sets
test
xorb
ficoms
adc
das
mov
loopne
pop
jbe
dec
adc
mov
mov
sub
xchg
add
in
insl
sbb
ja
and
jo
dec
pop
or
push
movsb
shl
sbb
stc
or
sub
ja
nop
jo
into
es
or
add
mov
lods
mov
xor
test
divl
and
lea
or
dec
add
test
mov
and
iret
pusha
xor
loopne
dec
subl
rolb
mov
push
pop
jo
xor
iret
mov
cmpsl
fistl
movsb
int
dec
cld
int3
arpl
dec
jecxz
pushf
inc
mov
idivl
dec
add
mov
lcall
cmpsb
sbb
inc
mov
jo
jle
and
jnp
add
insl
movsb
clc
jno
mov
pop
adc
xor
mov
adc
aaa
rolb
push
test
sub
enter
lods
hlt
ja
sub
fcom
add
and
push
movsb
jl
loope
rcrb
mov
fdivs
xor
jo
vmovhpd
xchg
xor
pop
push
cwtl
call
inc
shrl
and
stos
mov
sbb
xchg
or
push
or
aas
jno
imul
aam
mov
sub
cmpsb
and
pop
sbb
pop
pop
pop
lds
sbb
push
sub
pop
int
js
rclb
mov
in
pushf
dec
pop
inc
sbb
fisubrl
xor
jle
cmp
cmpb
add
leave
mov
insl
test
in
mov
sbb
add
sbbb
addb
push
sub
inc
aam
pop
pusha
xchg
inc
add
xor
pop
insb
inc
xor
fldcw
mov
stc
or
ljmp
xor
sbb
adc
add
rorl
icebp
sub
dec
cmp
sub
and
inc
cwtl
jle
or
push
sub
adc
mov
inc
adc
add
xor
pop
enter
ja
xor
std
dec
lahf
adcb
sbbl
add
dec
xor
mov
cmc
sbbb
dec
lar
mov
hlt
fiaddl
lret
jae
icebp
mov
xor
cmp
pop
xor
add
out
shlb
xchg
cmp
xor
mov
fmul
ss
mov
outsl
cmp
pop
aam
scas
popf
insl
test
cmp
jo
push
add
push
outsl
mov
push
aaa
add
jne
mov
or
sbb
add
lods
fsubl
adc
inc
dec
aam
fsubs
jl
jbe
sbb
sarb
add
test
lock
sti
fcomp
dec
fwait
clc
lea
dec
imul
cmp
mov
lret
shrl
adc
sbb
xor
test
out
push
aam
fs
dec
adc
out
mov
mov
mov
add
sbb
and
in
jno
in
sbb
in
add
js
jmp
adc
mov
cwtl
sub
xchg
mov
mov
les
xor
dec
andb
sahf
sub
pop
jmp
push
bound
push
mov
es
mov
jne
push
mov
add
outsb
adc
pop
sub
jo
add
inc
mov
outsb
cltd
lods
outsb
push
mov
mov
sbb
mov
mov
mov
pop
mov
aam
jns
call
js
les
fcompl
rorl
lret
and
adc
xor
jg
or
int3
fdivs
out
mov
mov
test
scas
pusha
pusha
dec
shll
xchg
lock
aas
and
leave
dec
add
shl
mov
and
es
add
pop
stos
pop
cmpsl
sti
out
lahf
add
add
fadd
mov
pusha
pop
and
cltd
push
dec
inc
sbb
aaa
lods
leave
pop
nop
xchg
loopne
push
pop
adc
idiv
cmp
pop
mov
dec
sub
xor
test
and
es
add
aam
popa
jp
fcom
inc
into
add
imul
pusha
mov
push
fmul
inc
ficoms
in
loopne
pop
bound
sub
mov
jmp
ret
jl
loopne
push
aaa
in
clc
xchg
add
push
and
rclb
cmpsl
call
pop
insb
imul
xchg
pusha
call
movsl
pop
mov
add
fistps
add
roll
xchg
push
cmp
fwait
xor
dec
xchg
push
lods
add
stos
cli
adc
popa
pop
push
jl
fdivrl
das
cwtl
and
add
aad
idivb
ror
add
sbb
in
add
pop
fmuls
cmp
out
add
dec
xchg
in
jge
in
add
ljmp
xor
push
push
mov
xor
sub
loopne
pop
pop
fsubrl
insb
insl
mov
jmp
and
mov
loopne
stos
mov
test
cmp
pushf
jl
xor
dec
je
dec
add
sti
in
mov
pop
mov
ret
in
pusha
and
cmpsl
push
insb
pop
movb
aam
test
mov
mov
daa
pop
mov
mov
test
fildl
add
inc
sub
insl
loopne
pusha
imul
test
int3
jo
int3
add
jno
std
adc
ja
sbb
add
cmp
jae
dec
cmp
fmul
and
in
inc
inc
xchg
cmp
repz
das
outsl
je
add
jo
xor
or
fstps
sbbb
add
test
xor
add
sbb
ds
jl
dec
repnz
add
mov
nop
add
ja
and
into
mov
dec
mov
pusha
fimull
les
add
ljmp
sbb
addb
inc
push
pop
mov
aaa
imul
mov
push
sub
in
add
addb
int3
cld
inc
sbb
enter
loopne
push
aam
popa
mov
fistl
xor
fsubs
cmp
pushf
sti
shlb
fadd
xchg
adc
pop
in
mov
shl
inc
jno
bound
shll
and
mov
daa
sbb
adc
inc
xor
shl
and
mov
pop
or
adc
dec
adc
out
push
mov
das
sbb
data16
or
pop
cli
in
int3
js
lock
test
xor
sub
inc
push
xchg
ret
adcb
gs
cmp
cld
cmp
or
jecxz
cltd
add
mov
int
jne
int3
or
addl
or
out
test
or
loope
ja
lods
inc
pop
jecxz
pop
add
mov
push
out
je
dec
repz
outsb
adc
in
gs
mov
and
subl
test
rclb
movsb
or
lock
add
add
popf
push
fcoms
sub
or
mov
shlb
pop
or
sub
pop
jl
xchg
push
fs
mov
and
jl
and
les
je
or
jge
sarb
add
ret
adc
mov
addb
cs
jle
cmp
fldl
mov
mov
pop
mov
add
jg
xor
xor
or
loopne
add
fisttps
hlt
xor
push
mov
jp
inc
lock
sbb
cwtl
add
push
adc
cmp
and
daa
add
cmp
incb
xchg
fstl
mov
test
sub
ljmp
add
and
mov
lods
sub
adc
mov
mov
js
push
mov
sub
pop
out
bound
sti
add
pop
adc
sahf
adc
add
pavgw
inc
sbb
jno
pop
lea
mov
mov
cmp
sub
lds
call
stos
jnp
mov
enter
cs
leave
pusha
cmp
orl
xor
lret
cmp
adc
xor
jne
xchg
sub
call
mov
push
mov
mov
out
add
andl
popf
xchg
add
cmpl
and
inc
daa
xor
orb
mov
in
enter
repnz
dec
inc
or
pop
jae
add
ret
or
pop
pop
mov
or
leave
aaa
cmpsl
nop
jns
mov
mov
push
loop
xchg
adc
dec
pop
fadds
cld
mov
push
lock
adc
popf
daa
mov
push
leave
jno
cwtl
pop
pandn
enter
add
jl
xchg
xor
pop
and
jl
js
hlt
pushf
es
and
adcl
cmp
and
pushf
pop
sbb
std
mov
in
and
mov
test
inc
mov
inc
pop
xor
sub
mov
fwait
icebp
sub
add
js
add
outsl
cld
gs
add
fcoms
in
add
adc
sbb
repnz
lock
popa
aam
mov
aaa
pop
sbb
or
sub
and
dec
jl
stc
out
xlat
add
scas
jge
cmovno
imul
icebp
adc
les
add
fcoms
in
and
add
gs
repz
jmp
pusha
bound
xchg
repz
mov
mov
call
dec
inc
add
das
cmp
mov
jl
xchg
push
bound
dec
push
jl
add
jae
out
cltd
es
mov
bound
jecxz
cmp
cmpsb
inc
add
xchg
loopne
xor
pop
add
dec
xlat
pop
mov
ds
push
dec
subb
cmp
inc
scas
incl
popa
jecxz
fsts
rcrl
nop
mov
ss
in
in
inc
fldcw
aas
add
and
mov
decl
dec
push
mov
shl
pusha
add
xlat
les
mov
sub
sbb
cmpsl
mov
sbb
and
xchg
or
sub
sbb
outsb
dec
stos
adc
mov
aad
in
decb
jl
adc
or
push
cmc
dec
mov
mov
es
sub
pusha
enter
or
push
shlb
cmp
and
mov
hlt
aaa
sbb
push
or
inc
les
inc
dec
dec
jl
mov
pusha
or
or
and
sbb
ss
adc
lods
fsubl
inc
ret
into
rorb
fs
jo
add
leave
xor
sub
inc
add
ljmp
push
loopne
and
mov
mov
xor
xor
or
pusha
in
int3
pop
and
add
int3
mov
adc
or
sbb
add
loopne
cmpb
cli
jno
fiaddl
jo
add
ret
xor
int3
adc
loopne
out
int3
jg
add
enter
dec
out
inc
adc
mov
sbb
leave
xor
imul
or
hlt
adc
dec
insl
movsb
sahf
add
add
dec
ret
mov
sbb
sbb
mov
fs
inc
cmpsb
add
pusha
imul
xchg
scas
add
or
dec
call
fs
aaa
imul
cltd
mov
push
dec
das
and
cmpsb
add
imul
xchg
jne
scas
nop
sub
jg
repnz
jo
paddusw
mov
inc
mov
mov
jmp
mov
in
subb
loopne
sbb
add
or
inc
lea
jbe
sbb
daa
dec
dec
mov
xchg
mov
push
mov
add
mov
xor
or
lahf
adc
bound
jne
aad
inc
lahf
out
add
xchg
pop
push
ret
xor
sub
inc
pusha
add
add
sbb
push
int
pusha
xor
pop
mov
test
pusha
and
rolb
jns
push
cmc
fsubrl
pop
push
xchg
iret
add
cmp
xor
push
sub
andl
push
mov
and
adc
lea
sqrtps
or
hlt
mov
out
jmp
sbb
push
push
int3
mov
stos
jmp
pop
mov
sub
lods
faddl
leave
js
xchg
mov
sti
push
mov
mov
fsts
dec
mov
clc
push
mov
mov
push
mov
or
data16
jmp
add
jmp
sbb
pop
mov
and
cltd
stc
add
and
mov
sbb
test
dec
xchg
inc
sbb
add
ljmp
or
and
shlb
ss
cld
push
pop
fbstp
jmp
xchg
ds
or
cmp
and
mov
or
movsl
or
xchg
pushl
mov
push
push
sbbb
movl
fsubs
lahf
jle
xchg
nop
pop
and
movsl
or
xor
xchg
or
or
sbb
mov
mov
leave
mov
pop
or
cmp
andl
xchg
fs
mov
and
xchg
cmp
jmp
add
mov
data16
adc
ret
add
mov
cmp
mov
mov
mov
mov
adc
or
mov
and
mov
rorb
mov
mov
cld
push
adc
addr16
lods
add
fcmovnu
push
push
mov
and
push
clc
xchg
cmc
dec
nop
jb
mov
jmp
fucomi
shrl
bnd
add
into
dec
ja
jo
ljmp
add
xchg
in
ljmp
sub
stos
mov
xor
or
mov
mov
cli
jo
lock
or
std
xor
mov
mov
jmp
movsb
cmp
xchg
loop
pop
inc
dec
add
push
mov
imul
mov
xchg
daa
movswl
jmp
lea
shlb
xor
in
cmp
pop
dec
inc
test
lcall
pop
mov
popa
dec
mov
lret
xor
jae
sti
or
xchg
pusha
mov
push
cmp
xlat
xor
pop
xor
adc
pop
or
adc
rcrb
and
popa
sub
rcrl
sbb
testb
and
cmp
mov
sub
cld
fs
pop
in
push
inc
in
add
fnstcw
add
inc
mov
pop
popa
add
pop
sbb
loopne
ss
pop
ret
adc
and
dec
popa
pop
test
add
sbb
lea
sbb
dec
dec
ficomps
or
cwtl
and
xchg
mov
inc
stc
test
push
adc
and
andb
push
xchg
cwtl
add
jge
jmp
push
add
push
jp
lret
pushw
mov
sub
out
mov
repnz
add
cmp
adcl
mov
imul
mov
push
push
pop
test
mov
mov
cwtl
push
adc
stc
sub
pop
push
dec
and
adc
add
jne
jg
movsl
sub
sbb
sbb
ret
repnz
xor
or
xor
clc
sbb
add
mov
fldln2
pushf
dec
add
outsl
fsubrp
sub
das
mov
js
loopne
lods
xor
mov
xor
leave
cs
fdiv
add
mov
sti
cmp
add
cld
hlt
les
mov
push
cmc
mov
add
movsb
test
loopne
xchg
adc
lods
push
cmp
sbbl
sub
jl
cli
cltd
xchg
pop
rcrl
jns
icebp
pop
sbbb
mov
and
iret
mov
sbb
roll
xor
incl
add
aam
and
orl
mov
push
dec
mov
shll
inc
sbb
jo
or
arpl
mov
popa
into
loopne
aas
es
sbb
add
fmuls
sub
or
pop
pop
repz
negb
arpl
pop
rcr
mov
mov
shlb
mov
insl
dec
and
int3
push
test
or
add
add
pop
cld
je
add
fistl
shll
jbe
sbb
enter
add
popa
xor
test
jns
or
push
out
out
add
cmp
push
shlb
pop
stc
jae
mov
lret
repnz
nop
or
sbb
idiv
lods
adc
rcrl
mov
add
dec
and
mov
sub
in
call
or
sub
xchg
add
xchg
shrl
cs
jmp
lock
and
popa
push
push
jno
jmp
or
and
or
popf
xor
sbb
xchg
jle
and
iret
pop
adc
add
pusha
mov
or
call
jnp
jge
jbe
adc
addr16
mov
in
or
or
add
and
stos
xor
push
mov
or
ljmp
fidivrs
mov
pop
mov
and
int3
pop
add
xchg
add
jecxz
mov
dec
and
pop
sar
xchg
xor
insb
mov
mov
call
mov
jnp
je
shl
stos
jnp
test
add
sub
lock
xlat
sub
push
idiv
data16
xchg
mov
mov
sbb
nop
scas
sub
sti
adc
and
and
dec
loop
pop
mov
pop
imul
xor
shll
sbb
adc
sub
cmpl
adc
or
stos
pop
adc
and
add
dec
pop
jecxz
les
adc
pop
jle
loop
jmp
mov
or
jns
or
mov
add
aam
fwait
dec
adc
pop
adc
iret
std
nopl
repnz
cmp
dec
lea
xor
mov
pop
sbb
out
mov
xchg
add
mov
cmpsl
xor
stos
or
das
scas
popa
std
pusha
stc
mov
sbb
imul
cmpl
and
aam
cmpsb
lahf
loopne
adc
add
xchg
int3
xor
call
fwait
scas
add
push
jno
lods
insb
pop
mov
jmp
pusha
mov
and
mov
rcll
pusha
push
add
mov
mov
jo
mov
inc
adc
adc
in
dec
mov
lds
insl
jnp
cmpsl
nop
faddl
push
mov
push
popf
pop
push
bnd
bswap
sbb
mov
push
xchg
aam
sbb
fists
adcb
es
mulb
pop
popf
pop
sbb
mov
and
daa
fsts
mov
push
add
add
push
mov
xchg
xor
mov
sbb
adc
mov
jns
lds
xor
sbb
dec
push
or
sbb
fdiv
adc
sahf
jle
xchg
cltd
dec
push
xor
pop
and
add
mov
and
add
in
dec
in
adc
sub
fisttps
xchg
and
and
push
xor
insb
and
inc
add
jae
inc
adc
mov
movsl
or
and
enter
in
mov
dec
cmp
or
inc
repnz
es
mov
push
pop
bnd
mov
mov
icebp
ja
movsb
hlt
xor
cs
cmpsl
fwait
mov
pushf
fbld
popf
pop
lea
mov
popa
scas
and
pop
sub
dec
pop
push
int
cmpsl
inc
sbb
outsb
pop
mov
lock
add
lds
adc
shr
adc
jo
arpl
js
jmp
popa
mov
sbb
ret
lock
adc
mov
dec
add
shl
fs
mov
test
stc
cmpsl
and
xor
das
pop
sub
sbb
leave
mov
or
or
bound
in
pop
dec
inc
sub
mov
sub
rcrl
sbb
pop
push
sti
sub
test
js
iret
sub
scas
imul
pop
cmc
mov
mov
xor
addb
sbb
loope
mov
inc
pop
pop
push
lahf
mov
sub
loope
mov
icebp
ss
push
push
dec
jmp
pop
subb
push
stos
shlb
in
int3
mov
push
push
jg
pop
cmp
jp
inc
push
cltd
adc
pop
or
fildl
sub
push
cmpsl
pop
in
adc
fs
push
xchg
adc
js
outsl
mov
sub
ret
ljmp
shrl
aas
jp
lea
popf
jg
pusha
out
add
fldenv
inc
pop
loopne
lcall
ret
out
sbb
lds
aas
cmp
sbb
ss
sbb
ficoms
lock
pop
popf
das
jge
test
cs
nop
fcomp
add
mov
push
rcl
and
mov
in
ljmp
cmp
pop
or
icebp
add
jo
dec
lds
fldenv
mov
or
inc
jmp
add
cmpsl
push
sbb
call
cmp
pop
push
xor
add
push
and
pop
inc
add
je
mov
pop
out
cmc
pop
xor
mov
adc
pop
pop
ja
dec
ret
in
add
movsb
sbb
mov
testl
jl
cmp
mov
inc
testb
arpl
dec
xchg
mov
inc
dec
inc
mov
nop
dec
and
in
adc
cmpb
out
xor
mov
fsubr
jle
jecxz
cmp
dec
mov
ror
rcr
icebp
inc
popf
psubsb
nop
xor
sub
push
pusha
dec
push
fldenv
loopne
pop
shlb
cmpsb
lcall
popa
or
je
adc
and
mov
mov
js
cwtl
je
push
das
lret
test
popa
fcoms
js
pop
adc
cld
dec
stos
lcall
fiaddl
imulb
out
mov
jne
or
adc
add
fisttps
inc
add
arpl
or
push
lcall
jnp
sub
int
fidivl
xchg
leave
imul
mov
repz
clc
mov
xchg
push
fcmovnb
orl
pop
mov
jb
pop
stc
int
in
xor
insb
mov
add
je
jns
shlb
jge
push
lcall
mov
jns
imul
sub
sbb
xchg
aad
pusha
stos
xor
pop
or
dec
in
les
xchg
pop
xchg
fcomps
mov
cmpsl
adc
mov
dec
cld
push
sub
mov
lods
sbb
jge
sbb
arpl
cwtl
dec
dec
dec
enter
lret
and
sub
mov
add
lods
fcoms
mov
xor
lahf
leave
orl
mov
call
pop
mov
iret
push
sarb
pop
lcall
pop
es
push
inc
shlb
push
push
add
lret
pop
imul
int
fucomp
cmp
dec
incb
sbb
ret
out
inc
vpsubsb
clc
fstl
aad
and
dec
fwait
inc
subb
popa
popf
les
push
adc
js
iret
push
mov
push
pop
pop
adc
ljmp
and
add
sbb
add
sub
imul
sbb
pop
sbb
cmp
and
push
sub
test
das
dec
or
sub
add
outsb
test
or
mov
clc
mov
mov
sub
xchg
mov
aam
add
cmp
mov
sub
bound
dec
sbb
icebp
mov
mov
mov
or
fs
sbb
ret
cmpsl
and
imul
leave
add
hlt
inc
dec
jg
push
lcall
out
pusha
pop
andl
push
dec
test
cmpsb
and
sub
outsl
xor
shlb
cmp
jle
add
inc
mov
xchg
sub
xorl
or
xchg
lahf
fldcw
push
xor
out
xchg
insb
jmp
hlt
sti
and
lods
sbb
xchg
mov
das
icebp
and
out
fcmovnb
mov
repnz
loopne
ds
or
ljmp
imul
pop
pushf
push
pop
add
add
push
mov
dec
pop
mov
je
adc
add
pop
xchg
mov
cmp
pop
incl
jmp
subb
fistpl
adc
mov
cmpb
fidivrl
add
and
test
mov
xchg
mov
pop
fiadds
and
adc
roll
push
xchg
push
ficomps
or
loop
pop
in
test
sbb
je
jbe
sarb
movsb
pop
pop
mov
adc
jge
fadd
jno
sub
jno
mov
jo
loop
icebp
sub
mov
xor
cmp
nop
aaa
test
mov
dec
cltd
jbe
in
ja
dec
sqrtps
loop
sub
or
adc
in
call
pop
or
mov
push
int3
lcall
add
jmp
inc
std
add
ja
cmp
rcrl
pop
pusha
push
lds
orb
mov
sub
mov
cmc
xchg
xor
and
mov
mov
test
and
aas
and
xchg
sub
sub
jo,pt
outsb
fadd
or
mov
adc
sbb
pop
roll
pop
adc
stos
cmp
mov
add
and
pop
push
push
add
shl
rcll
jmp
arpl
add
aam
lahf
mov
shrl
inc
sbb
js
ds
jo
xchg
pop
jmp
adc
and
mov
cmc
jmp
clc
aaa
sbb
dec
shll
and
lcall
nop
cli
repnz
inc
in
enter
testl
xchg
pop
and
js
xchg
dec
decl
ficomps
inc
xchg
adc
add
lahf
mov
push
add
pop
mov
call
sbb
mul
add
lret
push
out
js
divl
popf
jb
sub
stos
dec
in
cmp
cmc
pop
sbb
xor
jmp
ffreep
xchg
in
addl
out
add
add
jmp
xchg
push
daa
stos
sub
js
dec
add
andb
cmp
addb
push
mov
add
ljmp
jb
xor
popf
jne
push
dec
mov
mov
add
cltd
jp
sub
add
sub
movb
pop
mov
aaa
mov
fdiv
clc
push
icebp
cmp
sbb
pop
pusha
popa
pop
sbb
fstps
sbb
xchg
mov
mov
notl
out
push
dec
ret
mov
out
cmpb
and
iret
icebp
lods
cmpsl
scas
adc
push
or
pusha
mov
test
jl
das
pop
popa
or
cmp
sub
add
mov
sub
jl
push
xchg
xchg
sarl
jo
cmc
adc
inc
push
repz
inc
das
outsl
mov
mull
and
roll
clc
int
out
fsts
ds
or
sbb
out
and
dec
ficompl
cmp
nop
aas
ljmp
add
fbstp
insb
cltd
test
loop
test
fcmovb
out
test
outsl
dec
xchg
cs
xlat
dec
popa
cmp
inc
subb
popf
push
stos
mov
add
sub
inc
test
inc
inc
sbb
mov
jmp
add
divl
inc
jecxz
add
push
cmpl
sub
cld
add
jmp
xor
mov
jmp
jb
or
lahf
add
ljmp
adc
xor
lea
frstor
dec
out
mov
xor
add
mov
xor
or
and
lock
adc
mov
rcrl
adc
and
add
inc
push
stos
in
faddp
push
pop
lret
cmp
jae
mov
mov
xlat
rolb
push
ret
cs
inc
pop
mov
push
mov
dec
rolb
test
test
push
xchg
add
pop
rcrb
inc
add
test
shr
mov
test
push
int3
cmpsl
mov
add
je
jo
or
xor
icebp
dec
jmp
test
outsb
ljmp
or
push
sub
or
sbb
pop
popa
mov
aad
lds
jae
jmp
sbb
mov
loope
popa
insb
gs
pop
mov
int3
cmp
add
sbb
int
inc
push
rol
add
test
popf
push
add
aad
pop
lods
lret
jb
mov
pop
cmp
jp
movsb
mov
roll
pop
mov
push
sub
outsb
add
jmp
cltd
add
popa
add
clc
int
and
add
fisubrl
add
sub
popa
xchg
sar
jo
movsl
add
loop
in
mov
shrb
mov
popf
ja
popf
pop
lret
or
pusha
xchg
das
sub
jo
jge
and
popf
sahf
pop
addl
mov
add
push
pushf
xor
jl
jle
mov
nop
pop
fisubl
cmpb
fbstp
and
imul
inc
setnp
int
les
or
nop
repz
int
inc
mov
mov
mov
aam
dec
inc
push
or
test
and
push
pop
pop
mov
jne
movsl
scas
push
add
or
jo
loopne
mov
push
je
dec
dec
sub
adc
cli
ss
push
mov
or
mov
clc
cld
sbb
add
push
pop
inc
pop
cmp
mov
xor
popa
mov
sub
add
jg
cs
out
and
int
movsl
push
cmpsb
push
addr16
nop
add
xchg
lods
addb
popf
int3
dec
insb
outsl
test
pop
xor
js
dec
outsb
jp
xchg
or
inc
cmpsl
push
cld
ss
test
pusha
push
mov
das
pop
mov
xchg
rcrb
pop
xchg
pop
adc
add
outsb
mov
mov
mov
pop
lods
in
out
pop
push
lret
sub
mov
xchg
into
loopne
pop
cmp
adc
jmp
mov
and
pop
or
adc
test
or
fiadds
test
cmpb
xchg
mov
iret
int3
and
mov
push
mov
popa
lcall
mov
push
mov
iret
repz
lds
ds
test
inc
cmp
js
stos
or
xor
nop
pop
mov
cmp
test
mov
popa
mov
pusha
inc
adc
inc
out
add
es
lock
adc
jle
sti
xchg
in
mov
mov
fidivl
or
push
iret
lods
in
and
aad
jae
cltd
and
or
mov
mov
xor
out
filds
cld
sbb
lea
js
nop
jne
sub
sbb
iret
add
dec
xchg
sub
popa
adc
fimull
lea
stos
inc
mov
data16
cld
add
and
push
push
fwait
sub
mov
dec
pushf
rcrb
aad
cmp
aam
arpl
outsb
sbb
mov
cmp
pop
push
sub
daa
push
dec
jp
out
mov
pop
popl
dec
mov
ss
add
test
cmc
jae
adc
mov
push
push
inc
popa
pop
es
int
add
jmp
pop
nop
push
or
adc
or
dec
insl
xchg
sar
filds
add
cmc
pop
mov
push
xchg
nop
mov
add
jle
adc
adc
push
mov
dec
cmpsl
mov
cmp
mov
pushf
mov
imulb
cltd
mov
sub
xchg
inc
push
stc
cmc
add
mov
push
sahf
dec
inc
mov
and
test
sub
ja
repnz
setle
mov
ret
pop
test
sbb
xor
or
sbb
push
mul
inc
pushl
push
sbb
mov
inc
mov
sub
mov
dec
xor
mov
add
and
inc
cltd
pop
add
sbb
mov
xchg
adc
inc
movsl
mov
sub
pusha
ret
rcrl
movsb
cli
sahf
ret
pop
push
mov
mov
scas
jmp
inc
cltd
popa
fs
outsb
xor
imul
adc
push
sbb
xor
dec
and
test
rcrb
and
cmp
icebp
sbb
mov
popf
jb
xlat
pop
inc
daa
icebp
jge
lret
jns
hlt
xchg
xor
in
mov
rol
dec
loopne
mov
dec
push
test
sar
imul
sti
shlb
movsb
or
pop
sbb
rcll
jmp
sbb
out
sub
ss
in
mov
pop
mov
xchg
lret
pusha
pop
fidivs
dec
scas
and
call
mov
add
in
push
inc
sbb
out
pop
fdivp
sub
dec
fstpt
test
or
loop
inc
sbb
mov
xor
ljmp
mov
xchg
and
mov
jp
adc
cmp
or
dec
das
mov
add
add
push
push
pop
inc
lret
sbb
xchg
push
jmp
xor
mov
popf
add
mov
mov
popl
daa
out
out
outsb
or
mov
test
add
adc
testl
or
adc
shrl
stos
jp
sub
mov
adc
add
ja
lock
clc
iret
and
mov
ud0
add
and
add
out
subl
mov
add
xchg
pop
xchg
mov
in
fs
stos
dec
out
and
jecxz
mov
lds
pop
push
test
adc
jno
sbb
jne
lock
or
sub
addl
mov
add
cmp
outsl
aad
dec
ret
mov
xor
sub
popa
cmp
jg
or
or
sub
or
mov
adc
gs
aam
cli
mov
sbb
frstor
add
leave
and
sbb
dec
dec
sub
jmp
nop
fsts
stc
clc
and
xor
dec
add
push
add
mov
push
data16
sub
ret
xorl
and
adc
dec
pop
mov
adc
loop
subb
push
add
inc
cmp
push
stc
pop
pop
int
rolb
ja
add
mov
mov
ret
aas
and
xor
or
pop
imul
loop
push
adc
adc
mov
xchg
xor
mov
test
sbb
mov
pushf
jmp
sbb
mov
xchg
push
pop
or
andl
and
rol
cld
mov
xchg
ret
xchg
mov
fdivrs
daa
mov
add
aaa
cli
das
mov
repz
int3
mov
sbb
out
loopne
cmpsb
dec
mov
xor
js
inc
fstl
push
enter
sub
shlb
cld
cmc
les
insl
test
sub
hlt
jne
sub
inc
xchg
sub
frstor
aam
in
push
push
mov
leave
out
pop
je
inc
insl
cltd
xor
outsb
fadds
stos
mov
cli
pop
adc
sub
test
loopne
in
lret
inc
dec
fisttpll
push
sbb
add
shlb
cmc
adc
add
sub
mov
jle
xlat
hlt
pop
mov
add
mov
mov
add
mov
add
fdivrs
mov
mov
sub
in
repnz
clc
mov
clc
pushf
mov
test
cltd
add
add
insl
lret
xor
test
clc
fcompl
dec
shlb
aam
and
cmp
and
aas
dec
cmp
out
sbb
adc
mov
adc
add
stc
adc
cmp
decl
push
adc
push
inc
shl
push
cs
popa
aam
xor
and
popf
cwtl
jo
testl
sub
stos
pop
enter
movsl
add
mov
cmp
addl
jmp
std
xor
movsb
add
xor
mov
mov
mov
sbb
cs
out
jae
mov
xor
cli
jp
adc
fld
lret
daa
pop
test
add
cltd
out
and
sub
mov
push
add
ds
cmp
jg
sbb
dec
fs
ja
pop
xlat
and
andb
inc
js
or
icebp
jno
adc
mov
push
push
mov
xchg
sub
aam
cmp
or
add
jg
sbb
scas
dec
inc
test
xchg
jge
dec
fs
dec
xor
addl
sub
sbb
dec
aam
popf
iret
addr16
ror
adc
ret
sbb
mov
shlb
xor
stos
mov
lock
das
xor
roll
dec
jo
sbb
add
scas
jl
cltd
test
sar
add
out
fsts
or
jecxz
clc
rcrl
mov
cli
inc
movsl
pop
sub
push
push
mov
outsb
mov
inc
or
sub
shrb
add
jmp
ja
pop
lds
inc
fisubrl
or
or
inc
out
mov
xor
pop
pushf
mov
js
lcall
pop
ret
ja
add
mov
or
jbe
xchg
movsb
add
leave
jge
gs
sarb
nop
or
push
ja
inc
sub
xor
loopne
adc
dec
adc
add
popa
lret
inc
scas
sbb
test
pop
cmp
cmp
cmpsl
add
ja
jno
imul
shlb
jnp
add
mov
loopne
dec
lds
sarl
add
jp
enter
andb
data16
addl
out
rorl
loopne
xchg
pop
pop
daa
loope
inc
js
inc
lods
and
mov
xchg
adc
rclb
add
add
mov
in
mov
cld
lock
lcall
push
addb
loopne
pop
pop
ficoms
push
xor
add
aas
cli
scas
daa
loopne
mov
xor
fldenv
mov
cld
mov
xor
ljmp
arpl
xchg
pop
sbb
mov
mov
xchg
jl
jne
jmp
dec
les
add
adc
or
add
gs
xchg
adc
inc
cli
fs
push
sub
shl
dec
lret
add
adc
cmp
xchg
add
sarb
mov
and
xchg
mov
add
icebp
stos
jb
loop
dec
lds
stos
adc
sahf
cmp
orl
insb
xchg
add
divl
fldl
xlat
mov
mov
mov
add
shll
inc
jle
int3
sbb
xchg
jbe
test
add
mov
insl
and
pop
dec
icebp
xchg
mov
sahf
mov
xchg
cli
push
adc
fwait
add
pop
aas
add
pop
movsl
jp
inc
sbb
cmpsb
ret
xor
add
jmp
sbbb
hlt
test
sahf
push
add
cltd
mov
add
push
js
lods
pusha
flds
call
xor
dec
data16
push
mov
mov
aaa
add
call
and
xor
roll
hlt
scas
adc
jne
jecxz
int3
inc
insl
adc
cmp
or
out
mov
add
pop
rcrl
imul
and
daa
pop
or
pusha
ds
aas
mov
push
fwait
push
movl
repz
dec
add
dec
inc
fmuls
mov
jns
sbb
lods
push
enter
adc
xchg
andl
rolb
imul
sub
cmpsb
adc
inc
imull
pushf
retw
push
in
sub
mov
adc
aam
and
add
call
mov
push
int
cmp
cmpb
adc
jg
cmpsb
and
xchg
or
fistl
mov
push
jbe
add
insl
sub
push
add
xchg
mov
movb
push
or
imulb
mov
add
dec
sbb
rcr
pop
adc
xor
out
push
insb
ficoml
sahf
cwtl
adc
or
int
add
dec
and
out
sbb
std
push
xor
push
cmp
dec
sbb
mov
add
jg
sub
add
sbb
cmp
mov
cs
ja
imul
inc
in
pop
lea
and
ret
and
adc
rcrl
jbe
movsb
nop
xchg
push
cmp
stos
and
lcall
add
inc
add
mov
std
jae
in
mov
mov
xor
lret
add
pop
sbb
insb
orb
loop
aam
sbb
cmpsb
ficoml
xchg
jo
in
bound
icebp
in
sub
pop
cwtl
pushf
shrb
adc
jge
test
add
pop
jg
and
ds
mov
add
insl
fidivrl
cmp
xor
cmc
sbb
in
push
hlt
lret
ja
adc
xor
cwtl
loopne
sbb
dec
mov
in
xchg
sub
inc
add
jns
add
cmp
adc
push
mov
add
ret
inc
int
jg
ret
mov
aaa
and
mov
sub
bound
movsb
cwtl
dec
stos
verw
or
and
push
rolb
pushf
mov
add
mov
sbb
pop
or
xor
xchg
stos
pop
rcl
and
inc
data16
push
mov
shr
and
add
inc
icebp
dec
xor
jle
mov
xor
or
cld
or
add
cmp
sbb
test
mov
es
out
inc
mov
xchg
leave
sbb
cltd
dec
add
jl
test
repz
mov
inc
arpl
cmc
adc
sysret
ds
imul
leave
roll
adc
dec
jns
into
out
mov
lds
mov
jle
push
push
divl
add
pop
andl
dec
xchg
add
scas
jbe
loope
mov
jns
xchg
fdivs
xchg
dec
sbb
mov
imul
xor
fiaddl
fwait
lret
or
xlat
push
xchg
ljmp
test
inc
shl
mov
cmpsl
sub
mov
call
les
cmp
adc
ljmp
iret
push
dec
roll
push
leave
or
int3
jno
pop
cwtl
sbb
jo
popf
pop
sbb
mov
dec
pop
adc
psubq
js
push
jle
inc
mov
sub
sbbb
mov
loopne
cmp
sbb
cld
data16
popa
inc
xchg
lcall
sub
mov
pop
xchg
inc
adcb
add
add
jmp
pop
add
dec
pop
push
jecxz
ffreep
out
jg
pop
add
sbb
dec
xchg
mov
pop
xchg
loopne
into
cmp
cld
testb
sbb
pop
movzbl
add
imul
add
pop
xor
add
imul
call
sbb
ret
inc
pushl
nop
decl
aas
xchg
push
xchg
rcll
push
ret
and
mov
sbb
cmp
and
les
mov
cmc
jo
int3
and
mov
pusha
ficoms
ja
movsb
leave
pop
xor
xor
rolb
movsl
adc
dec
push
pop
push
or
push
xchg
push
rol
cmc
int3
mov
stos
push
lods
or
rolb
mov
add
decb
pop
mov
add
movsl
pop
or
jmp
mov
xorb
das
stos
rorl
pusha
add
enter
xchg
insl
add
xchg
ficoml
xchg
mov
sbb
imul
mov
xor
pop
subl
repnz
or
lahf
cli
scas
sub
push
syscall
popa
cs
inc
mov
add
push
dec
mov
ds
sub
cmp
push
rorb
loope
xor
mov
mov
pop
lret
nop
and
hlt
jne
nop
add
loop
xchg
fdiv
push
cmp
jle
in
jno
in
dec
lret
scas
sbb
in
dec
mov
xchg
cmp
mov
daa
sbb
outsb
jnp
and
mov
adc
sub
shll
loopne
mov
icebp
add
inc
lods
rorl
push
push
mov
aaa
or
andl
adc
and
inc
int
hlt
add
mov
ret
add
pop
aad
or
mov
sti
push
les
enter
jge
add
or
sub
inc
inc
hlt
jb
add
lods
cli
xchg
loope
dec
out
or
mov
loope
xorb
dec
hlt
rolb
inc
sbb
pop
insb
test
sbb
dec
add
out
dec
or
loop
sti
cmp
es
push
loope
add
and
push
nop
call
data16
shrl
add
ss
sbb
jo
daa
or
aad
mov
fimull
fmull
add
xor
fs
adc
nop
dec
mov
jb
pop
xor
xor
pusha
mov
and
jg
push
je
arpl
add
cmp
rol
fistpll
add
sub
pop
clc
xchg
dec
push
ss
or
jne
loopne
sbb
xchg
add
out
mov
cwtl
pop
fdivrl
mov
sbb
push
cmp
sub
out
push
test
sub
sbb
dec
and
dec
popa
inc
cld
mov
sbb
cltd
dec
adcb
into
mov
mov
jno
clc
pop
add
xchg
mov
xor
dec
jmp
add
dec
ret
out
add
mov
arpl
cmpb
add
sub
mov
cld
push
addr16
adc
jmp
add
dec
mov
pop
push
add
popa
mov
outsb
fwait
dec
add
add
stos
push
clc
pop
roll
jg
loopne
mov
adc
and
icebp
outsb
sub
mov
pop
sbb
add
push
mov
insl
add
cmpsb
pop
rorl
xor
sbb
cmp
insb
out
add
sahf
inc
out
or
push
pop
faddl
cmpsb
adc
inc
pop
fimull
mov
adcb
or
repnz
shll
push
sub
cwtl
pop
stos
sub
pushf
daa
cli
ja
sbb
nop
inc
mov
add
or
add
jno
add
sbb
xchg
sub
cld
cmp
push
repz
cmp
lock
pop
rcrl
jmp
and
mov
push
push
push
mov
clc
jge
pop
pop
sub
xchg
and
subl
jbe
cmp
push
call
es
pushl
pop
add
jmp
cltd
cmp
loop
daa
mov
add
jmp
add
push
dec
pop
cmp
xchg
mov
pusha
sti
outsb
push
add
xchg
movl
repz
out
in
push
out
loopne
sbb
aad
mov
pop
popa
popf
jmp
adc
sbb
jns
sub
or
hlt
into
add
xchg
jmp
push
loopne
shll
add
sub
shlb
adc
push
push
cmp
test
inc
sbb
or
fwait
sub
and
pop
inc
and
out
gs
loopne
sub
xchg
jge
mov
insl
lret
lret
stc
shlb
and
call
js
xchg
pop
adc
int
bound
inc
pop
cli
icebp
cmp
mov
xchg
or
jns
add
sbb
inc
xor
lds
jo
xchg
mov
push
xlat
out
fldt
andb
or
add
lds
pusha
loop
add
stos
jb
enter
std
inc
cmp
sub
call
adc
mov
sub
push
mov
and
add
rcrb
adc
jl
popf
dec
arpl
rolb
mov
dec
lods
mov
gs
sbb
dec
push
pop
lock
xlat
add
push
call
std
pop
movsb
xchg
and
dec
outsw
xor
sub
popa
or
inc
adc
xchg
sbb
scas
fsubl
fiaddl
bound
std
mov
out
js
in
push
adc
mov
iret
add
add
out
fisubs
pop
pop
adc
aad
stos
jp
and
pop
adc
adc
xor
cmp
add
mov
jle
push
aad
cmp
clc
call
mov
or
jb
out
xorb
mov
xchg
adc
enter
mov
jo
xchg
adc
xorl
outsl
orb
or
mov
leave
test
or
push
and
mov
test
jmp
cld
cmpsl
in
out
add
outsl
sub
sahf
lret
addb
sbb
out
dec
add
lds
in
cltd
cltd
push
enter
and
add
xor
mov
push
pop
xchg
and
fstpl
popa
cvtdq2ps
or
mov
adc
jmp
rcll
mov
icebp
adc
dec
in
dec
pop
mov
call
pop
outsl
enter
or
loop
and
rol
test
sbb
jae
inc
pop
and
aad
test
arpl
in
loopne
xchg
mov
call
inc
sub
int
sub
iret
hlt
and
pop
sub
pop
addb
negb
aas
push
loop
loope
jg
xor
shlb
push
or
int
out
hlt
stos
and
js
xor
push
rclb
pop
mov
out
movsb
mov
popa
add
cmpl
jle
int
pand
fdivrs
cmp
mov
sub
mov
adc
or
cld
daa
xor
push
sub
mov
lret
ret
cmc
sbb
xor
adc
addl
inc
inc
in
adc
popa
pop
or
push
inc
sbb
mov
std
add
push
jecxz
sbb
fwait
adc
iret
negb
mov
add
adc
mov
and
pop
enter
nop
and
jmp
testl
and
xor
pusha
mov
or
mov
imul
out
mov
push
adc
xor
xor
fimull
jbe
push
in
lock
mov
push
sub
xor
mov
add
adc
cmp
andl
push
cs
clc
adc
cmp
inc
inc
popf
adc
cmpsl
mov
insl
or
add
fucom
lods
dec
popf
rcr
into
push
add
fadd
clc
and
out
pop
sahf
push
inc
add
enter
sub
push
inc
lods
push
pop
out
mulps
shlb
add
cmp
js
lret
fwait
xor
sbbb
icebp
into
mov
negb
stc
mov
and
jb
into
mov
loopne
xchg
pop
xor
lock
and
mov
add
fisttpll
push
sbb
shrl
and
popa
adc
mov
sbb
jmp
in
and
inc
sub
jmp
mov
jp
add
mov
out
decl
pop
sub
int
loopne
xor
mov
aas
test
pop
insl
test
push
add
out
outsb
dec
pop
or
or
dec
shl
loopne
cmp
push
sub
push
jo
aaa
dec
jp
and
mov
aam
and
sub
pop
popf
shrb
mov
push
push
xchg
fs
js
sbb
sarb
std
or
add
push
cwtl
insl
movsb
adc
int3
mov
mov
shr
dec
mov
mov
mov
mov
lods
push
pop
inc
pusha
cmp
test
stc
fnstcw
pop
pop
fwait
mov
cmpsb
jns
mov
sbb
cld
inc
or
sub
push
aam
add
push
ret
mov
ds
std
sbbb
insl
or
push
xchg
inc
ljmp
push
pop
mov
push
pop
pushf
jg
decl
jmp
mov
and
add
sub
mov
or
daa
push
jo
add
loope
ret
sub
adc
notb
sti
push
or
add
mov
pop
cmp
add
dec
and
orl
pop
iret
imul
andb
movsl
inc
xchg
mov
pushf
dec
inc
pop
xor
sub
lods
push
xor
std
pop
adc
das
mov
test
cmp
add
aad
mov
mov
call
mov
push
add
xor
sub
pop
fisubrs
push
mov
insl
in
test
push
jmp
das
mov
cmc
or
ror
sub
enter
pop
add
jbe
orl
fsts
cmpsl
pop
push
inc
adc
ja
xchg
in
and
xchg
add
mov
pop
nop
cli
nop
sbb
arpl
adc
mov
lret
jl
les
hlt
popa
addl
mov
pop
nop
fcomi
jo
enter
mov
pushl
mov
adc
sub
mov
mov
inc
pusha
sub
repz
aas
cmp
push
pusha
and
pop
popa
pop
clc
rcrl
jo
push
add
push
insl
mov
mov
or
mov
sbb
mov
sbb
xorb
jp
mov
inc
sbb
pop
jmp
repnz
out
call
jbe
cli
orb
lahf
sub
mov
add
mov
aas
mov
shlb
pop
add
jno
mov
loopne
and
dec
and
xor
adc
test
sub
add
adcl
dec
sbb
or
mov
pop
popa
pop
mov
enter
pop
or
stc
jmp
xchg
adc
lods
dec
int3
or
sub
pop
adc
mov
add
adc
test
cmp
xchg
and
sub
dec
and
sarb
sbbb
jmp
xorb
or
xlat
push
cs
or
pop
pop
xor
adcl
mov
mov
rcrb
lea
cld
imul
test
sbb
pop
pop
xor
xor
mov
shlb
mov
movsl
call
stos
and
and
adc
loope
push
add
movsb
jmp
fcoml
mov
mov
ss
mov
fidivrs
add
xor
xlat
jg
jno
adc
cmp
sub
cld
jns
lods
shlb
adc
cwtl
out
inc
fimull
push
lods
xor
rorl
rolb
pop
and
push
cmp
or
enter
gs
mov
mov
xchg
or
add
pop
jne
loop
xor
mul
daa
jno
rcrl
adcb
ret
add
or
dec
mov
imul
repz
adcl
test
sbbl
cmpsl
add
or
mov
dec
push
sahf
arpl
push
or
fcos
loope
imul
or
inc
jae
add
mov
insl
adc
mov
or
add
mov
or
stos
jg
xor
inc
mov
rcl
cmp
lea
dec
pusha
outsb
fisttpl
push
or
xchg
xchg
fidivl
addb
mov
jmp
imulb
pop
inc
jl
and
xchg
enter
mov
add
and
mov
mov
xor
adc
adc
push
add
testb
clc
mov
out
xchg
cmp
or
enter
test
add
incb
add
out
loopne
lods
fmull
pop
ljmp
cltd
mov
ret
test
push
je
or
and
sub
clc
cmp
repnz
jecxz
enter
or
mov
adc
orb
lock
adc
scas
jae
mov
xchg
ljmp
push
pop
mov
shr
nop
push
dec
cpuid
lret
jmp
out
popf
pop
in
jb
pushf
pop
mov
mov
mov
mov
les
mov
pop
or
aam
testb
adc
pushf
in
dec
xchg
mov
stos
inc
mov
mov
mov
stc
lahf
mov
in
push
shrl
mov
inc
xchg
test
sahf
repnz
test
xor
repz
sbb
sarl
pushf
xchg
jb
push
mov
mov
pop
fstps
pusha
test
lret
push
adc
sbb
inc
add
pop
mov
pop
jmp
and
pop
inc
daa
test
xchg
pusha
les
mov
dec
and
out
les
insb
and
mov
or
add
dec
sbb
lock
inc
pop
xor
xor
clc
decl
inc
xchg
in
xlat
add
popf
cltd
sbb
call
push
pop
xchg
sub
xor
clc
ret
nop
adcl
pop
popa
pop
mov
inc
pop
sub
stc
insb
or
pop
xlat
fs
shl
insw
es
mov
push
pop
test
inc
data16
or
pop
pop
and
inc
sbb
add
inc
mov
sbb
scas
shrb
dec
jg
add
push
jnp
lret
sub
mov
jl
jmp
mov
arpl
jle
push
xorb
out
les
push
sub
js
andb
fnsave
sbb
nop
jg
adc
mov
int3
pop
inc
cld
movl
inc
ss
arpl
test
and
jnp
fmuls
add
adcb
jmp
mov
cs
xor
addl
call
and
dec
adc
pop
shlb
out
fnsave
loopne
fs
loope
sbb
sub
and
pop
adc
rclb
xchg
in
pop
push
lock
sahf
or
mov
xchg
in
and
bound
ja
push
call
js
add
dec
sbb
xor
xchg
push
aam
xchg
xchg
lock
imul
clc
sahf
ss
push
xor
push
add
xchg
xchg
inc
lods
add
out
pop
in
pop
mov
popa
adc
dec
rclb
das
rolb
fistpll
fldt
les
adc
inc
int
or
mov
int
sarb
or
lret
int
shrb
test
pop
pop
adc
add
out
jg
hlt
rcl
es
outsb
xchg
inc
shrl
xchg
mov
add
fs
cmp
mov
adc
push
jl
repz
push
cli
mov
mov
fidivl
sbb
subb
ret
aam
mov
or
daa
andb
pop
scas
sub
pop
faddl
sbb
cmove
iret
into
mov
mov
jecxz
popf
int
dec
pop
in
jnp
lcall
pop
or
adc
mov
mov
in
add
jno
add
fdivp
xlat
pop
lcall
iret
cmp
cli
push
mov
add
adc
clc
xor
push
add
cmp
jns
and
das
mov
shll
rorb
fiaddl
bound
or
popf
mov
adc
sub
or
outsl
jp
add
iret
inc
sub
jno
xchg
shl
addb
mov
popf
dec
xor
xchg
mov
jmp
nop
int
jno
add
mov
dec
mov
pop
adc
add
sti
loope
xor
in
je
add
cmp
jp
sahf
mov
or
sub
xor
mov
out
xor
push
mov
mov
mov
mov
pop
mov
sub
sub
sahf
mov
mov
jge
daa
xor
shl
clc
call
cmp
dec
pop
mov
mov
add
push
repnz
push
mov
xchg
stc
mov
and
icebp
cltd
scas
jae
jb
and
mov
pusha
lods
aaa
push
nop
sti
and
out
mov
jnp
out
addb
or
cmpl
in
mov
mov
addr16
xlat
mov
pop
mov
fisttpll
cmc
mov
adc
mov
aaa
mov
std
cli
mov
dec
push
shrl
inc
sub
or
jg
int3
gs
nop
cli
and
mov
fstl
mov
pop
pop
push
imul
call
mov
outsb
add
pushw
adc
adc
push
xlat
idivb
loopne
add
pusha
es
loopne
cld
shll
in
cmovo
icebp
cli
pop
dec
call
push
cmp
add
xchg
int
fnstcw
cmpsb
mov
inc
int
cld
mov
add
pop
test
sahf
cmpsl
pusha
xchg
fildl
fadds
stos
xor
out
and
add
sbb
mov
sbb
je
iret
arpl
and
add
sub
rclb
subl
mov
or
cmc
adc
add
lock
mov
xchg
dec
mov
mov
pop
jg
roll
add
add
sbb
nop
outsb
daa
cmp
cltd
fwait
sbb
cmp
jmp
adc
fstpl
inc
xor
cmpb
jg
push
rcl
cmpsb
inc
loopne
jge
adc
add
push
sub
int
mov
rclb
int3
pop
push
and
pop
add
mov
dec
fstps
sub
repnz
mov
pop
inc
sub
les
xorl
sub
into
enter
icebp
mov
nop
subl
call
test
stos
inc
aad
popf
push
push
pop
jl
or
popf
lds
or
rolb
or
jo
icebp
stos
add
fnstcw
aaa
aas
or
mov
pop
cs
jno
in
and
push
dec
fwait
lret
inc
lock
add
aas
ficomps
xor
mov
xor
test
cmp
cmpb
inc
bound
popf
push
mov
sub
popf
adc
repnz
shll
inc
les
mov
or
and
test
dec
sbb
gs
sub
int3
xor
insl
or
fisubs
cmp
out
sub
mull
jb
and
inc
push
incb
adc
fistl
daa
cld
dec
and
add
sbb
xchg
push
loopne
mov
cmc
mov
mov
xor
fcoms
xchg
lea
push
jmp
and
movsl
jp
arpl
loop
cmp
loopne
sbb
pop
cmp
cmp
in
loopne
inc
test
mov
push
inc
jecxz
mov
shlb
mov
in
add
in
div
stos
lret
mov
sub
cld
lods
and
xchg
mov
xchg
mov
push
cli
call
or
fisubrl
loope
iret
call
or
in
jmp
inc
and
es
or
dec
push
bound
sub
sbb
jge
dec
insb
lea
push
iret
pop
in
adc
add
jae
stos
xor
xor
insl
fbld
add
push
mov
out
xor
xor
imul
clc
in
enter
inc
ror
push
insb
mov
mov
pop
shll
xor
iret
call
mov
pushaw
mov
jecxz
cmp
icebp
dec
mov
adc
cmp
sti
add
fldcw
shll
mov
ja
add
xor
daa
xor
jne
bound
in
jno
xchg
ja
mov
lock
pop
pop
mov
sub
push
jge
and
mov
popf
sbb
hlt
push
xchg
mov
mov
js
and
dec
push
incl
lds
jmp
sbbb
arpl
add
xor
dec
mov
ds
add
mov
popf
cmp
cmp
cmp
rorb
out
jecxz
inc
lcall
addr16
arpl
add
add
nop
jge
cmpsl
pop
or
push
inc
pop
adc
cmp
lods
mov
call
aad
mov
or
mov
inc
cmp
sub
jge
adc
ja
add
shll
lods
add
lock
push
test
pop
daa
fldl
nop
add
adc
repnz
add
jg
add
xchg
jae
jo
ss
xchg
and
jno
test
daa
hlt
sub
adc
mov
clc
rcll
hlt
scas
pop
push
notl
xchg
pop
sbb
add
stos
les
ret
add
adc
orl
out
popf
sbb
into
push
push
sub
popf
push
adc
scas
movsl
aaa
xchg
add
and
mov
loopne
dec
pop
or
xchg
and
xchg
or
loopne
cli
pushw
in
xor
aad
stc
inc
pop
cmpb
je
inc
pop
pop
jne
addr16
adc
mov
pop
sub
add
shll
dec
pop
pusha
add
mov
lgdtl
out
xchg
or
out
cmp
mov
mov
adc
xor
out
mov
dec
adcl
sbb
popa
inc
notb
add
mov
sbb
outsl
js
xor
pop
lds
in
push
xchg
jmp
mov
cmp
push
jbe
cmpsl
mov
xchg
inc
rcll
roll
or
cmpsb
xchg
test
xchg
sahf
nop
cltd
popf
sbb
adc
popa
scas
pusha
push
aad
iret
cwtl
iret
or
inc
xchg
sub
stos
xor
pop
dec
mov
shlb
or
jb
mov
cltd
cmp
xchg
cmp
sbb
fldl
insl
adc
lcall
fcom
mov
outsl
out
and
stos
stc
cmp
sbbl
xor
add
ret
pop
inc
mov
out
xchg
andb
mov
adc
callw
lock
dec
pop
jmp
add
xchg
or
or
and
icebp
mov
and
loopne
and
fcoml
lods
dec
ljmp
popa
cwtl
lcall
imul
xchg
pop
adc
mov
notb
je
inc
test
add
mov
jo
cltd
shl
mov
jle
data16
pushf
mov
and
pop
add
adc
sub
std
xor
lea
into
adcb
add
adc
or
cmp
loopne
jp
add
aad
xchg
add
adc
pop
enter
pop
pop
lahf
int3
enter
add
xchg
jne
scas
lcall
inc
or
dec
pop
data16
movsl
in
xchg
fldt
mov
add
adc
xor
and
orb
js
popa
lahf
fidivs
adc
or
adc
pop
push
pop
xor
pop
lret
inc
mov
movsl
xchg
lcall
je
inc
sbb
out
pop
push
and
mov
imul
inc
test
repz
inc
insb
mov
push
pusha
and
adc
adc
or
jecxz
and
adc
dec
in
add
daa
and
dec
or
lea
fnstsw
in
pushf
in
pusha
dec
cmpsb
insb
loopne
lcall
adc
dec
orb
push
daa
sbb
outsb
cmp
outsl
jbe
mov
cmpsl
inc
xor
mov
pusha
cmc
dec
pop
lret
cs
fadds
popf
sub
jne
insl
add
and
pop
or
fs
add
inc
shrb
inc
lret
mov
popf
inc
push
push
fdivrl
adc
sub
pop
add
adc
popf
fsts
cmp
inc
imul
push
lods
xor
iret
add
cmp
clc
adcb
adc
push
jbe
xchg
pop
seto
out
and
push
ds
or
dec
mov
sub
sbb
push
add
sbbl
sub
cmp
inc
push
cld
pop
fistpl
pop
sbb
push
add
dec
pop
dec
cmpsl
sub
imull
or
pop
fstps
mov
gs
cmp
push
pop
mov
push
xchg
test
or
sti
pop
sbb
inc
insb
in
jle
or
and
push
mov
jmp
testb
or
adc
rcll
or
jmp
or
loopne
out
or
push
jnp
bound
into
mov
adc
push
push
cmp
loop
inc
dec
and
add
test
int3
pop
cli
xchg
out
jle
adc
xchg
aad
rclb
cmovs
aam
adc
sbb
call
push
mov
jo
cmp
inc
cli
add
and
cwtl
es
sbb
lds
std
sbb
jnp
int
add
mov
ret
dec
push
enter
test
lea
rorb
and
enter
and
hlt
add
negl
sub
adc
sub
lcall
std
ret
subb
adc
xor
sarl
cmp
outsb
add
pop
or
mov
add
jp
pop
pop
sbb
sarb
jle
add
pop
sbb
outsl
push
cmp
shll
mov
inc
pause
and
add
out
repz
cld
mov
aas
divps
xor
add
pop
ss
inc
cmpsb
in
aas
ja
xchg
add
in
jb
mov
andb
inc
xor
repnz
lock
loop
clc
sbb
or
sub
xchg
and
jne
push
pop
sub
popf
sbb
mov
repz
add
fcomps
sub
daa
popa
lods
mov
adc
xor
ds
test
xor
push
aas
sub
pop
in
das
sbb
fwait
cmpsb
and
adc
lds
dec
les
add
add
jmp
test
inc
cmpb
dec
je
add
pop
or
cmp
xchg
lods
adc
ret
sub
xorb
aam
or
shlb
mov
adc
inc
pusha
dec
icebp
push
popl
call
sub
mov
pop
mov
imul
out
sbb
cli
in
add
neg
popf
and
incb
test
enter
or
or
push
ss
xorb
in
mov
dec
pop
lods
sbbb
jg
enter
sbb
mov
mov
and
sub
insb
xchg
add
or
jmp
add
sub
pop
inc
test
or
vmovntpd
adc
loopne
das
imulb
cmp
enter
push
fistps
int3
push
les
out
jp
mov
or
test
lret
dec
dec
mov
cltd
test
xchg
jno
lock
les
xchg
jo
adc
sar
or
sbb
je
test
imulb
inc
adc
mov
loopne
sbb
xchg
fisttpl
popf
fstl
mov
mov
outsl
xor
xor
jle
repz
cmp
mov
pusha
or
jo
pop
mov
push
pop
pop
add
mov
cmp
pop
stos
push
into
repz
inc
scas
cmc
sub
stos
adc
cmp
lcall
jo
xchg
adc
in
mov
push
dec
in
mov
pop
mov
sbb
mov
fiaddl
sbb
jnp
rorb
sub
adc
adc
xchg
lods
dec
decl
cmp
adc
add
jnp
shlb
imul
and
xchg
add
adc
mov
pusha
outsl
enter
int
ja
add
test
fiaddl
inc
mov
xchg
cld
into
outsl
ja
mov
adc
mov
movsb
xchg
dec
mov
jmp
pusha
or
and
push
xlat
lcall
xor
push
nop
pusha
jno
outsb
jne
stos
fnstsw
pusha
mov
inc
mov
cmp
lret
push
mov
inc
add
popf
aas
adc
and
cli
jnp
fcompl
stos
and
mov
mov
and
loopne
push
cmp
xchg
cmp
or
pop
jl
xchg
rclb
xor
jmp
pop
cmp
enter
mov
jle
outsl
rolb
fsubrs
je
mov
ljmp
das
lcall
jmp
xor
loop
les
fdivs
sub
xchg
rolb
jl
popf
or
pushf
arpl
xchg
jb
dec
push
pop
mov
adc
lret
dec
sub
pop
imul
add
adc
mov
test
rorb
jmp
daa
sub
imul
jbe
in
mov
jne
mov
mov
mov
add
in
call
push
sub
mov
es
aas
lret
xchg
and
addb
cld
inc
pushf
xor
jl,pt
xor
pusha
sbb
add
in
push
cmp
add
push
daa
add
jmp
xor
pusha
xchg
push
cld
in
insb
lea
mov
mov
scas
aas
add
clc
add
je
sub
aam
into
popa
orb
mov
popf
ds
fadds
push
or
loopne
xchg
or
stos
je
cmc
mov
sbb
stc
add
mov
cmp
sub
xorb
sarb
xor
pop
nop
in
add
fstp
sbb
mov
and
push
push
jmp
lret
in
lock
add
sbb
mov
lods
inc
pop
nop
push
xchg
adc
scas
jno
mov
pusha
adc
clc
lret
mov
sub
inc
inc
clc
dec
mov
and
mov
jmp
or
mov
das
sahf
les
adc
ljmp
movsb
arpl
fiadds
test
out
insb
nop
pop
dec
push
daa
push
test
out
faddp
mov
ljmp
loopne
adc
or
or
mov
mov
push
pop
push
add
shlb
ret
sub
mov
pusha
popa
push
leave
clc
dec
mov
mov
xor
aas
shll
adcl
sbb
sbb
and
add
pop
stos
flds
outsl
or
sub
test
stc
out
xchg
jnp
jo
mov
sbb
pop
clc
sub
xchg
insb
loopne
pop
and
sub
add
enter
inc
jnp
adc
sarl
mov
jge
lcall
or
test
inc
sbb
je
stos
push
push
sbb
push
push
cmc
jo
imul
mov
std
pop
jb
clc
mov
popf
sub
xchg
cmpsl
and
popf
orl
or
push
leave
into
push
cmpsb
sti
pop
pop
pop
fcomps
sbb
daa
add
into
cld
lcall
add
incl
cmp
pop
mov
push
add
xchg
fmull
mov
push
cli
xchg
popf
adc
inc
xor
pusha
xchg
adc
les
pop
mov
test
subl
in
lods
jae
sbb
lock
push
dec
lea
das
icebp
adc
add
sbb
pop
xchg
add
repnz
cmpl
daa
xchg
push
ret
in
rorl
lret
outsb
pop
lcall
dec
push
cs
and
jle
pop
or
cld
xchg
aas
ja
adc
dec
movsl
lods
sti
into
fsubp
or
sub
add
pop
fbstp
mov
fnstenv
adc
bnd
popf
mov
std
jne
and
push
jmp
push
fwait
jbe
lret
add
xor
movsb
cmpb
mov
imul
pop
pop
or
sahf
outsl
cmpsl
xchg
lret
nop
int
les
divb
push
fnstsw
in
notb
pushf
jo
pop
or
rcl
inc
pop
das
push
aaa
outsl
movsb
or
flds
xor
xor
mov
les
call
push
loop
add
mov
xchg
adc
ljmp
pop
stc
mov
shr
mov
mov
in
sbb
and
mov
push
and
add
pop
clc
push
ficoms
mov
pop
std
std
sahf
inc
xchg
je
test
xchg
into
dec
lods
or
jmp
cld
stos
shr
inc
loopne
jmp
movsl
in
sbb
xor
stc
je
inc
mov
mov
aaa
cli
subb
adc
idiv
int3
inc
or
mov
push
or
add
js
inc
sbb
dec
les
in
add
jae
lods
in
call
and
cmp
jno
into
bound
or
mov
sbb
lret
into
out
inc
pop
fsubs
jmp
rcrb
mov
mov
imul
sarl
push
fldenv
add
jno
jle
push
fs
lods
xor
nop
push
imul
adc
cwtl
push
push
pop
add
add
cmp
jns
or
lret
add
js
repz
sub
mov
sti
int3
add
cmp
ret
inc
cwtl
mov
push
and
stos
inc
cmp
push
loopne
xor
mov
rorl
or
loope
scas
and
xor
fldcw
jmp
jbe
jl
subl
pop
push
jns
test
shll
adc
dec
and
repnz
sti
pop
mov
out
cmc
xor
in
lahf
xchg
sbb
add
jns
call
mov
fdiv
mov
pushf
rolb
jnp
into
cs
fnstcw
shrl
lcall
dec
fcompl
imul
adc
mov
or
into
cmp
std
daa
pop
adc
test
fsubrp
data16
mov
push
inc
mov
mov
popa
and
fsts
in
inc
leave
scas
fcompl
inc
sub
xor
add
xlat
add
fsubrs
cltd
sub
or
jp
ljmp
xchg
sbb
mov
mov
sub
mov
std
jno
dec
add
mov
addr16
popf
loopne
orb
sub
insl
les
dec
sar
jbe
imul
add
mov
xchg
arpl
jmp
pop
mov
mov
loopne
lea
sub
lahf
jl
incb
add
inc
push
xchg
add
cmp
out
cli
xor
adc
negb
fimuls
dec
cs
pop
out
leave
push
daa
jnp
inc
fmull
or
popf
imul
xchg
mov
adc
cwtl
repz
xor
and
das
mov
mov
xor
fs
loop
mov
dec
das
cmpsb
jmp
psllw
mov
xchg
repz
mov
cli
in
sub
xchg
cmp
inc
arpl
ss
test
push
arpl
and
xor
sbb
inc
in
dec
push
popf
mov
cmp
loope
push
pusha
pop
shll
daa
inc
cs
inc
out
push
sar
xchg
jmp
repnz
add
mov
sbb
dec
and
mov
jp
cmp
gs
adc
mov
mov
add
push
jg
icebp
dec
push
lret
mov
xchg
sub
pusha
insl
mov
das
cmp
mov
xchg
dec
xchg
ja
aad
call
popf
clc
jae
sub
and
shlb
rcrb
jp
repnz
cld
ljmp
bound
int
imul
mov
jo
into
decl
in
pop
sbb
jbe
addr16
shr
pop
nop
xchg
sahf
das
out
adcb
push
pop
and
mov
adc
push
and
pop
push
mov
movsl
jns
dec
jbe
jnp
adc
add
adc
sub
add
fists
addb
mov
sub
jge
mov
mov
cwtl
jns
pop
and
mov
stc
scas
mov
je
jo
decb
lds
sarl
iret
pop
sub
fidivs
insl
xor
mov
pop
adc
clc
push
push
mov
jmp
mov
data16
adcl
jecxz
jne
add
sti
loopne
loopne
in
ss
dec
outsb
and
xchg
stc
add
inc
fwait
xor
les
pushf
pop
adcb
rcrb
pop
loope
movswl
in
mov
sbb
mov
or
fldenv
push
jnp
pop
jge
nop
ljmp
imul
jnp
xor
rcr
pusha
hlt
pop
sub
or
push
push
out
xor
mov
sub
in
pusha
inc
mov
add
arpl
add
ljmp
jge
mov
stos
add
mov
mov
dec
xor
lock
dec
andb
sub
fsts
popf
in
and
fcompl
ds
scas
add
dec
int3
aam
cld
cltd
leave
sub
push
jmp
sub
or
sbb
push
add
popa
pusha
lock
push
add
xor
pop
out
fs
mov
lock
sbb
xchg
inc
xchg
mov
pop
pop
test
pusha
daa
jne
mov
call
addl
inc
ret
hlt
or
pop
add
lea
pop
sbb
aam
and
mov
inc
inc
xor
mov
push
lret
movsl
jne
xor
test
cltd
gs
jl
out
or
into
loopne
cmp
data16
int3
mov
fcmove
jns
rorb
pop
xchg
cmpsb
scas
popf
mov
aaa
add
imul
lahf
xor
push
sbb
add
mov
inc
push
pop
dec
nop
leave
dec
stc
popf
mov
or
or
sbb
loop
xchg
pop
mov
loopne
js
mov
mov
inc
jns
sbb
add
enter
cs
cmp
mov
shrb
mov
add
add
jg
sub
add
orb
dec
add
cmp
mov
xorb
fldenv
scas
inc
mov
pop
jne
pop
test
add
gs
push
sub
add
sbb
inc
aaa
sub
sbb
js
xchg
stos
dec
lock
xchg
lds
push
jmp
mov
out
sub
aaa
and
pop
cld
mov
aaa
repz
adc
nop
test
mov
outsl
orb
fdivrs
enter
adc
fimull
mov
outsl
mov
and
mov
sbb
ficoml
pop
xchg
pusha
aam
scas
bnd
push
enter
xlat
adc
xchg
sarb
lods
mov
test
lcall
adc
xchg
adc
ret
pop
mov
mov
push
xor
repz
and
iret
stc
enter
loope
fwait
add
pop
xor
adc
test
inc
or
les
imul
and
notl
push
sbb
popf
test
add
daa
sti
jmp
xchg
xchg
inc
sub
lods
std
fadds
ljmp
cld
dec
aam
mov
mov
push
mov
mov
push
pop
dec
sbb
aas
add
push
loopne
fstpl
mov
jno
pop
fists
or
xor
imul
dec
out
pusha
mov
lcall
gs
stc
add
push
xchg
inc
addl
sub
add
xor
jle
push
xor
addl
push
push
jp
push
and
and
clc
mov
test
xchg
add
mov
test
mov
mov
xor
xor
and
stos
mov
xchg
push
fst
inc
das
add
mov
popf
sub
enter
aas
popa
aam
testl
xlat
cmp
sub
jno
out
pusha
scas
movsl
adc
popa
call
sub
push
and
mov
mov
in
lock
add
xor
pop
call
das
pop
cmc
fiadds
mov
aam
rclb
out
add
push
cli
outsb
aaa
add
rcrl
mov
mov
jmp
inc
mov
sub
add
pop
mov
push
nop
pusha
push
add
xchg
sub
cmpl
pop
mov
xchg
mov
add
ja
pop
add
pop
clc
xor
pop
cmp
or
jmp
movsl
pusha
pop
add
mov
jmp
pop
adc
adc
and
push
add
int3
or
insb
or
mov
xor
jl
test
pushf
arpl
dec
lock
jbe
push
ja
jno
int3
push
pop
mov
into
insb
add
std
jbe
jae
in
or
mov
sarl
mov
ljmp
mov
pop
jg
cmp
popa
ljmp
sub
js
dec
xlat
ret
add
push
pop
push
xlat
mov
push
sbb
mov
imul
add
push
das
pop
loope
insl
mov
int3
cmp
mov
cli
stos
repz
add
push
mov
fstpl
add
out
loope
in
jg
jno
mov
fmull
xchg
push
cli
sbb
pusha
or
sarb
inc
jl
sti
mov
dec
and
adc
popf
std
xchg
mov
mov
or
dec
lret
xchg
sbb
push
add
pop
sub
xchg
adc
lods
add
repnz
inc
add
rcl
test
and
test
sub
lea
sbb
push
fistl
or
and
clc
cmp
pop
inc
xchg
cmp
js
mov
sbb
jne
inc
push
call
or
pop
shrb
pop
and
pop
mov
xor
repnz
adc
mov
add
inc
mov
adc
adc
mov
icebp
adc
arpl
stos
gs
cwtl
cmpsb
fs
pop
outsb
pop
dec
int
adc
rol
adc
jae
dec
or
pop
movsl
scas
enter
mov
aas
das
adc
adc
inc
outsl
hlt
mov
enter
cmp
push
sub
cs
adc
push
fcoml
das
dec
cld
mull
sbb
scas
in
add
cli
mov
or
js
sbb
loopne
inc
and
push
adc
fcoms
in
mov
test
pop
das
sbb
call
ficomps
pop
mov
mov
movsb
mov
sub
pop
mov
lods
push
mov
push
mov
mov
clc
repnz
lea
cmpsb
mov
dec
xchg
sub
jno
mov
outsl
fstpl
jp
mov
add
sar
jo
add
dec
pop
das
sub
outsl
inc
add
cmc
sbb
into
clc
and
mov
cltd
and
xlat
or
mov
repz
sbb
out
pop
push
cmp
mov
or
push
sub
test
outsb
lods
add
cltd
lret
sub
fwait
jo
push
mov
popf
mov
push
outsl
aaa
adc
mov
sbb
pop
jp
popf
jae
shl
pop
xor
leave
adc
adc
pusha
sbb
push
xchg
pusha
xchg
andl
iret
mov
addb
adc
adc
lock
out
pop
push
adc
clc
out
jle
pop
into
jo
js
les
or
push
ljmp
test
adcb
fildll
xchg
jae
inc
bound
or
xlat
test
sub
adc
aas
fstpt
pop
add
sub
mov
stc
pop
push
xchg
xchg
int
inc
jecxz
fbld
cs
push
mov
les
push
mov
xor
pop
stos
jle
and
push
orl
shrb
cmp
sbb
insl
popa
leave
or
dec
mov
std
add
cld
push
xchg
stos
add
addr16
mov
test
icebp
clc
mov
jns
add
lock
dec
lods
cltd
ljmp
jnp
dec
mov
mov
jb
mov
icebp
add
inc
jno
loop
push
clc
push
nop
adc
daa
and
lds
orb
add
loopne
mov
add
jmp
jne
out
fcomps
xchg
and
mov
dec
fimuls
das
push
inc
xchg
popa
divb
add
cmpsb
dec
lcall
adc
and
add
push
sbb
add
test
std
subb
std
cmp
xor
adc
jmp
sbb
in
push
daa
mov
inc
cltd
add
inc
fdivrl
adc
push
dec
adc
xlat
dec
pusha
mov
mov
xchg
xchg
in
dec
add
jp
add
mov
call
add
test
jp
jb
add
jmp
stos
pop
add
addb
mov
adc
sbb
lods
xchg
or
pop
jns
pop
sbb
cli
mov
xchg
mov
xchg
sbb
ret
xor
mov
xchg
addl
cmpsb
xorl
mov
or
jne
popf
mov
pop
mov
test
push
push
and
dec
ret
pop
jmp
mov
push
imul
jnp
std
xor
adc
push
push
mov
cmp
stos
xchg
jl
fwait
adc
add
pop
bound
inc
pusha
push
or
enter
enter
or
addl
xchg
outsl
lret
addr16
enter
mov
inc
pop
sub
jnp
test
popa
mov
lods
xchg
mov
xchg
xor
add
dec
aas
lea
mov
loope
lret
cwtl
pop
in
ds
andb
cmp
bound
lgdtl
pop
or
pop
mov
xchg
movsl
out
mov
je
das
xor
cs
in
adc
xor
mov
xchg
mov
push
clc
leave
add
ja
stos
dec
dec
test
jno
and
jmp
jl
adc
xor
jns
mov
dec
clc
aam
jmp
mov
in
ljmp
and
fstpl
int
shlb
mov
add
js
sbb
fwait
add
mov
out
or
dec
cmc
inc
lds
pop
cmp
fs
xor
pop
repz
in
rcll
dec
add
aas
and
mov
iret
and
lcall
push
jg
jne
xchg
pop
test
and
dec
pusha
out
test
sahf
mov
imull
jmp
stos
jmp
xchg
shlb
cwtl
scas
cmpsl
jae
add
ds
nop
popf
mov
aas
cmp
xorb
scas
xor
test
dec
pop
scas
rolb
out
jmp
icebp
stos
xchg
push
ficompl
sbb
mov
mov
or
push
cmc
test
mov
pop
pusha
jl
js
nop
dec
pusha
out
and
add
imul
dec
lea
fldt
mov
mov
sbb
xchg
test
inc
pushf
add
push
popf
and
push
pop
std
mov
mov
outsb
mov
mov
xor
out
daa
jmp
bound
mov
lea
sub
out
mov
xor
sbb
shrl
mov
or
sar
pop
aas
insl
sub
or
mov
adc
test
dec
cmp
lock
movsb
add
sbb
inc
andl
add
sub
cmp
mov
add
push
adc
pop
adc
sahf
lea
enter
jecxz
xor
mov
stc
jp
dec
and
pop
sub
int
dec
aad
daa
mov
test
xchg
mov
add
xor
in
cmp
mov
dec
add
and
test
scas
adc
rcr
add
xchg
jl
jb
push
dec
push
mov
dec
cmpsb
cmpsb
mov
lods
mov
test
in
add
mov
test
imul
sbb
or
xchg
insl
popf
inc
std
or
jmp
stos
cld
and
sub
pop
push
mov
and
adc
mov
mov
or
mov
xor
sub
pop
pusha
cmc
inc
sub
mov
movsb
lea
mov
or
jmp
pop
mov
rclb
stc
pop
pop
sbb
loope
andb
jg
js,pt
push
pop
sbb
ret
sub
push
pop
adc
pusha
orb
inc
sti
mov
push
and
ret
pusha
std
lock
fstpt
cmp
dec
rcrb
mov
add
popa
push
adc
push
pop
prefetch
test
pushl
push
loope
xor
inc
push
mov
je
insb
mov
xchg
xchg
or
clc
js
rolb
jp
mov
mov
adc
movsl
mov
sub
mov
xor
addl
mov
add
call
or
inc
out
pop
loopne
popf
leave
sarl
popa
sbb
pushf
xor
ja
cmp
pop
or
enter
jo
mov
or
add
xor
cwtl
dec
leave
mov
out
add
inc
loopne
pop
pusha
mov
sub
loopne
sbb
xchg
cli
jl
mov
out
daa
mov
stc
lret
dec
aam
pop
popa
xlat
popa
sub
or
push
or
adc
or
mov
mov
into
call
sbb
jnp
movsl
dec
movsl
inc
adc
push
xchg
movsl
pop
push
ret
filds
outsb
in
cld
sub
lea
cld
xchg
cli
add
xchg
mov
mov
pop
sub
out
pop
int3
adc
add
cmpsl
push
sbb
jne
push
mov
es
jns
dec
aaa
cmpsl
insl
mov
lret
or
repz
loop
test
aas
aad
cli
test
mov
dec
mov
mov
pusha
lock
nop
xchg
andl
xor
inc
inc
push
xchg
loope
xchg
mov
add
les
add
push
push
gs
mov
and
push
pusha
sub
add
in
stos
xor
dec
dec
mov
mov
jb
pop
mov
mov
loope
outsb
add
mov
dec
jne
lods
and
in
push
jne
or
movsb
aad
nop
push
push
jb
pop
call
xorb
fidivs
or
pop
mov
push
ds
and
fs
add
jns
js
mov
fwait
lods
pushf
cmpsl
inc
mov
dec
jg
popf
sbb
add
inc
add
mov
outsb
pop
mov
push
jg
xchg
jecxz
loopne
or
dec
and
shlb
js
xor
jp
pop
imul
pop
mov
sbb
hlt
out
xor
lea
and
or
add
incb
pop
sub
ret
loop
fsub
ja
xor
out
test
testl
jge
mov
or
pop
pop
popf
daa
aam
testb
sub
into
jno
imul
je
movsl
mov
dec
adc
mov
xor
hlt
add
push
test
dec
jb
add
adc
adc
outsb
mov
loopne
mov
add
jns
pop
int3
jmp
jno
imul
fmull
pop
scas
or
mov
add
pop
mov
sub
int
jle
xchg
inc
out
add
ds
pop
les
xchg
shll
cmp
sahf
in
add
test
ja
add
xor
sbb
ret
xlat
push
lret
inc
clc
push
dec
mov
mov
andb
in
or
cmp
push
pop
sahf
adc
incb
inc
mov
divl
cmpsb
shl
jno
add
inc
or
cmc
adc
dec
jnp
add
inc
sarl
cld
jnp
or
jae
pop
or
pusha
mov
cltd
lock
push
in
pushf
push
pusha
and
lret
pop
pop
mov
mov
sarb
xlat
pop
repz
gs
popa
fimuls
push
dec
mov
adc
add
leave
add
pop
setne
in
jl
in
popf
inc
lods
sub
sbb
push
xchg
add
cmp
call
jnp
add
rcll
push
xor
xor
sub
inc
loopne
add
mov
je
jmp
out
add
or
dec
push
add
aad
and
or
imulb
push
daa
xor
dec
cli
lea
jge
push
test
mov
ja
out
ret
out
or
mov
jmp
mov
push
int
das
jmp
jp
adc
add
loopne,pt
inc
add
add
fdivrl
mov
test
mov
add
cwtl
push
scas
mov
mov
cmp
jmp
dec
icebp
int3
pusha
xchg
es
cmp
cmp
push
pop
pushf
push
into
jmp
popa
xor
icebp
add
and
push
pop
fcoms
mov
adc
ljmp
stc
js
add
fs
mov
mov
mov
orb
mov
jecxz
mov
repz
dec
jp
bound
pushf
and
add
fisttps
or
mov
sub
aad
xchg
jp
add
sub
mov
outsl
addb
or
add
fcomps
negl
mov
jle
mov
es
jae
add
xchg
outsl
fwait
add
lcall
sbb
or
idivl
movsb
rcrb
push
xchg
divb
imul
notl
es
fs
xchg
sub
sub
in
and
sub
mov
push
fisubrs
lods
mov
pop
sub
and
mov
mov
ljmp
jbe
and
jns
sbb
add
popf
cs
mov
call
dec
add
fdivrl
adc
mov
pop
cmp
xchg
rcr
fnsave
mov
mov
mov
mov
imul
aad
pop
or
fsubs
leave
add
inc
subl
mov
push
dec
ljmp
test
dec
add
mov
add
cmpsl
pushf
cmp
xor
stos
adc
test
rcrl
pushf
popa
push
sarl
imul
jge
dec
outsb
ficomps
mov
movl
adc
mov
xor
daa
testl
sub
aam
hlt
adc
inc
and
imul
insb
push
mov
push
ljmp
jg
mov
add
mov
loop
mov
or
jnp
jo
pop
inc
frstor
xor
aas
cmc
mov
add
xor
pop
and
xorl
and
add
rorl
popf
jno
movsl
aas
jl
movsl
ljmp
addb
add
add
fsubr
xor
sub
insb
add
push
mov
ljmp
aam
jge
inc
xchg
sbb
pushf
loop
sub
mov
xchg
lea
sbb
xor
push
sub
popf
sbb
and
add
aad
int3
adcl
dec
push
mov
dec
loopne
sbb
pop
add
inc
xchg
add
or
test
or
fcompl
inc
dec
pop
push
mov
dec
movsl
sbb
test
aas
push
in
or
bndldx
mov
daa
stc
rorb
incl
push
jle
sub
loope
in
xchg
push
mov
fnsave
fmull
xor
push
and
dec
call
movsl
and
jnp
push
xor
jno
fnstcw
sub
add
push
cmc
inc
mov
jo
push
inc
push
out
jo
movsl
divl
icebp
and
add
jbe
cmp
mov
add
pop
jae
and
out
addr16
aad
ljmp
stos
dec
lods
repz
insb
push
fnstsw
in
pop
jecxz
mov
mov
popf
hlt
flds
out
inc
clc
ret
push
fs
add
mov
pop
mov
mov
push
dec
xchg
mov
xchg
sbb
daa
mov
ja
scas
lea
pop
jbe
ss
cmpsl
das
add
addl
sbb
add
jbe
push
push
sbb
or
shlb
fldt
mov
inc
fcoms
sub
mov
pop
adc
mov
in
jge
pop
cwtl
pop
and
cmp
movsl
sbb
incb
lds
lcall
pop
das
fucomi
shl
push
sub
out
outsb
sub
imul
dec
adc
mov
loope
bound
jo
lret
jne
push
pusha
testl
out
pop
test
push
xchg
mov
sbb
cld
sahf
out
mov
sub
push
adc
adc
inc
add
xchg
add
mov
sub
xchg
fdivrl
loopne
add
xchg
sub
jnp
push
add
fwait
ss
sahf
xor
xchg
test
subl
fdivrp
dec
pop
mov
aam
hlt
or
repnz
sub
push
push
or
test
iret
je
or
jo
pop
test
sbb
insl
pusha
sub
pop
inc
adc
out
fimuls
mov
add
std
and
inc
add
cmpsl
mov
mov
aas
inc
cmpsl
pop
fists
add
cmp
xor
pop
sbb
inc
test
popf
insl
adc
add
stc
mov
jne
xchg
in
adc
xorl
jae
jle
das
pop
add
cmp
rclb
add
jecxz
insb
ljmp
ret
pop
repz
add
mov
xor
xchg
repz
popa
incl
sti
cmp
roll
cmp
pop
fwait
mov
cltd
shl
std
push
mov
mov
jbe
faddl
js
mov
pop
insb
xor
les
add
ficomps
nop
push
push
sbb
add
mov
rcr
jo
into
xor
mov
jmp
lcall
std
add
jge
add
xchg
adc
jle
add
xor
add
daa
imul
int
loopne
sahf
mov
cmp
push
sbb
mov
sbb
in
jle
es
pop
pop
dec
aam
roll
in
xchg
push
mov
pushf
push
xor
mov
xchg
or
bound
pop
adc
sub
jecxz
repz
sbb
popf
jns
xchg
mov
push
add
and
cmp
loope
inc
lret
mov
nop
out
push
xchg
fiaddl
add
mov
dec
ret
ja
imul
push
sub
xchg
clc
add
scas
mov
mov
rdpkru
daa
push
loope
jle
xor
sbb
mov
aaa
mov
les
pusha
dec
lea
cld
test
xor
mov
stc
ror
pusha
dec
movsb
and
mov
cwtl
fstps
fs
mov
sbb
es
mov
sbbl
add
pop
add
mov
in
add
ja
add
cs
mov
cltd
adc
inc
sar
subb
cmp
sbb
inc
aad
pop
aas
scas
pushf
repz
sub
xchg
pop
repz
or
pusha
rorb
jb
xchg
dec
inc
cmpsb
adc
lods
add
int3
and
adcb
aam
fwait
pop
lret
inc
jle
ret
dec
dec
mov
daa
push
push
nop
dec
shl
xor
mov
mov
adc
push
filds
xchg
leave
cwtl
jle
adc
movsb
shll
jl
pop
insl
out
pusha
xor
ds
add
clc
xor
outsl
popa
mov
xor
lock
fcmovnu
xchg
outsl
in
neg
jns
imul
movsl
mov
mov
mov
xor
dec
nop
insb
adc
push
inc
icebp
adc
inc
lahf
movsl
dec
sub
mov
mov
sarb
stos
lods
mov
lock
inc
add
in
dec
out
insl
jno
mov
xor
popa
mov
stos
jnp
cmp
add
pop
popa
mov
divl
rcr
xor
jp
adc
mov
and
mov
pop
sahf
add
mov
or
push
pop
xor
lret
int3
mov
out
xchg
jae
jno
inc
fildll
mov
lods
push
mov
jnp
mov
mov
daa
add
sub
shlb
pop
push
dec
xchg
repz
lods
or
fldcw
add
xchg
add
repz
xchg
fwait
and
out
mov
cltd
popa
push
lea
sbb
mov
clc
in
xchg
fs
jae
add
out
outsl
into
sbb
sbb
inc
sub
sub
or
xor
ret
sarl
xchg
cmp
test
das
xchg
mov
mov
cmp
aam
dec
and
mov
mov
mov
das
push
jo
jp
add
push
jae
jne
dec
orl
mov
rolb
or
test
repnz
imul
or
xchg
dec
mov
inc
leave
rorl
push
repz
mov
add
or
pop
lahf
daa
pop
testl
call
mov
xchg
aad
mov
cmp
inc
addr16
test
fdivrl
ljmp
xor
adc
cmp
pop
mov
rolb
out
xchg
sub
aam
or
pop
nop
shll
in
jle
ljmp
iret
mov
pop
push
mov
dec
enter
push
mov
lds
cld
mov
and
add
or
je
in
dec
pop
gs
or
push
mov
dec
mov
xchg
or
mov
and
aas
lcall
lret
mov
je
in
roll
push
sbb
daa
xor
out
cmpsl
adc
es
push
xlat
scas
sub
add
sbbb
push
rol
mov
popf
dec
adc
mov
scas
pop
or
lcall
shl
jb
adc
cs
stos
xor
cs
jno
seta
push
insb
mov
incl
sub
loop
and
lea
push
pop
jne
lds
jmp
pop
mov
add
sub
loop
popf
sti
adc
push
jbe
leave
pop
xchg
stos
mov
stos
push
test
pop
xor
dec
das
mov
lods
imul
pusha
mov
sub
repz
test
cli
adc
and
pop
push
and
inc
sahf
push
push
dec
in
cmp
iret
mov
aad
mov
xchg
dec
or
pop
mov
pop
mov
inc
cld
in
subl
push
sub
xor
dec
sbb
das
sub
jl
sahf
inc
paddusb
js
ss
pop
lret
mov
and
xchg
adc
mov
push
int
loopne
loope
push
add
xchg
decl
push
sbb
push
std
push
mov
jb
push
mov
and
inc
testl
pop
mov
jns
pop
mov
popa
shll
filds
sti
fs
add
popa
push
jg
aad
mov
addl
out
mov
mov
test
dec
dec
shlb
imul
adc
ljmp
in
lcall
mov
adc
mov
je
push
clc
mov
test
cmp
insb
lea
popa
cld
pop
mov
imul
mov
adcl
xor
rcrb
mov
fstp
repnz
popf
cs
jge
mov
inc
fimuls
and
fs
scas
lret
pusha
mov
or
mov
movsl
mov
inc
dec
sub
gs
push
dec
adc
aaa
inc
add
in
rclb
mov
lds
mov
call
jbe
and
mov
imul
sbb
or
sub
mov
mov
xor
imul
xchg
dec
sbb
sbb
pop
ja
pop
push
cmp
scas
loopne
dec
or
mov
or
mov
add
add
popa
mov
test
add
pop
mov
andl
out
repnz
add
lods
icebp
aas
test
or
ror
pop
pop
arpl
icebp
es
add
loop
scas
inc
xor
incb
fs
adc
scas
or
xchg
hlt
adc
and
pop
dec
rol
sar
jge
dec
push
loope
xor
cltd
fnsave
pop
shr
dec
add
aam
mov
leave
mov
sbb
sbb
adc
xor
push
das
fidivrs
inc
xchg
repz
jmp
inc
mov
jo
cmc
inc
xchg
adc
lret
cmp
js
mov
push
movsb
mov
or
xor
xor
inc
lock
push
aaa
sbb
imul
mov
inc
add
cli
add
add
add
and
bound
xchg
cmp
sbb
idiv
dec
or
add
xor
subb
add
push
push
push
add
rorl
cmp
sub
nop
pop
hlt
jo
stc
xor
mov
adc
jecxz
adc
sub
mov
push
inc
enter
cmc
xor
mov
pop
sahf
mul
push
das
pop
pop
pop
mov
outsl
mov
fisttpll
outsb
jnp
add
push
cmc
xor
inc
dec
das
jecxz
push
sti
pop
mov
sub
lea
add
sub
add
loop
mov
rorb
pop
cli
js
or
fisubrs
clc
pop
add
int
pop
pop
jecxz
ja
or
sub
pop
xor
imul
pop
popa
pop
cwtl
cmpsb
repnz
xor
pop
lock
cli
gs
mov
add
jns
mov
sbb
mov
lods
dec
fdivr
mov
add
and
imulb
and
sysret
leave
cmp
push
add
outsl
mov
lock
mov
cltd
push
sbb
movsl
lods
popa
dec
les
sbb
mov
add
mov
mov
add
in
fmull
frstor
dec
mov
mov
xchg
repz
mov
xchg
xchg
pushf
das
xchg
push
fimuls
dec
loop
insb
sub
shlb
cs
sbb
pop
ja
jno
iret
insl
xchg
lea
mov
rolb
sbb
insl
rcl
mov
push
mov
cmp
in
daa
aam
fiadds
pop
mov
xor
loopne
repz
sbb
pop
stos
outsl
add
andb
xchg
add
sti
outsb
fsubrp
enter
test
mov
pop
scas
push
xchg
or
mov
pop
or
push
mov
shll
mov
push
jno
stc
popf
adc
inc
jae
push
mull
in
or
mov
add
fmull
dec
mov
pop
sar
jg
test
leave
add
mov
xor
adcb
lock
dec
lods
cmp
dec
scas
xor
int3
sub
ret
pop
loope
mov
jecxz
gs
repnz
int3
stos
mov
pop
mov
movsl
push
sub
sub
adc
push
out
cld
rol
xchg
xor
popa
scas
pop
fcmovu
xchg
mov
adc
fs
out
fwait
push
push
stos
icebp
jl
testb
dec
outsb
push
sbb
aam
jmp
pusha
mov
icebp
inc
popa
mov
imul
jnp
xchg
and
mov
out
cmpb
or
and
dec
fstpt
daa
inc
mov
cmp
add
in
out
sub
fistpll
push
push
fisttpl
and
or
inc
push
or
dec
or
cmp
adc
stos
xor
lret
in
mov
push
ret
loope
pop
popa
shl
dec
push
dec
ja
xchg
xchg
scas
bnd
stc
xchg
lods
sbb
mov
add
insl
mov
jmp
fsubs
inc
xchg
xor
les
sti
dec
sbb
jge
aam
hlt
rcrl
inc
pop
xchg
sub
xor
add
sbb
je
ja
call
xor
std
out
sub
adcb
inc
movsl
add
cmp
mov
and
push
add
cmpsl
jnp
adc
push
push
cs
ljmp
add
push
loopne
cmp
jmp
pop
inc
add
pop
jg
dec
add
scas
pusha
pop
inc
jmp
add
std
adc
ja
pop
adc
jnp
sbb
inc
pop
ret
iret
pop
sub
jne
jge
or
in
js
stos
lret
cmp
in
test
push
xchg
inc
jecxz
adc
sbb
shr
xor
sub
popa
xchg
xchg
push
sbb
sub
sub
cmp
pop
sbb
pop
dec
aad
push
stos
mov
jae
test
xchg
add
jmp
cmc
adc
or
sub
dec
jbe
push
jno
mov
scas
push
fists
repz
ds
shl
mov
mov
mov
cli
pop
cwtl
inc
xor
push
mov
lds
js
jecxz
add
movsb
push
sahf
mov
fidivs
lea
and
adc
cmp
cmpsb
shll
pushw
test
and
sub
sbb
pop
mov
sub
xor
sbb
in
jle
pop
or
mov
das
and
rcll
out
mov
rclb
sub
jo
dec
adc
jno
mov
cld
insb
das
out
push
add
push
rcrb
outsb
xchg
filds
xchg
out
std
mov
xchg
pop
dec
xchg
scas
pop
lock
in
push
adc
jmp
push
push
xchg
mov
mov
jmp
xor
mov
sub
mov
pop
lods
mov
sub
xchg
mov
inc
add
mov
xor
loope
xor
pop
lds
cwtl
cli
jnp
incl
pop
in
fmuls
fs
add
movsb
push
aad
lds
fisttps
inc
std
sbb
call
xchg
outsb
adc
sub
push
std
dec
bound
mov
xchg
inc
add
pop
push
cmpsb
ss
out
add
insb
sub
faddp
add
popa
pop
xchg
lret
add
subb
pop
shlb
mov
cwtl
or
adc
lcall
loopne
imul
jmp
sub
adcb
ds
das
and
out
push
and
xchg
pop
and
popa
lock
outsb
out
dec
in
bound
mov
call
xchg
and
mov
call
loop
xlat
in
xchg
test
pop
inc
mov
push
sub
mov
push
mov
push
and
mov
xorl
das
fsubrl
or
ret
les
sub
ret
mov
test
sarl
xchg
sub
sbb
xor
test
push
mov
push
pop
shrl
aaa
lock
or
cmp
pusha
iret
aas
pop
out
sbb
mov
repnz
cmc
xchg
pop
movsl
sbb
aam
xor
sbb
and
adc
mov
mov
sub
lods
add
dec
das
sahf
lock
sub
mul
pusha
out
and
sbb
popa
mov
pop
add
cmp
rol
popf
jmp
jae
movsb
test
rcr
dec
or
pop
add
fildll
in
movsb
dec
adc
mov
sbbb
repnz
lds
mov
test
rcll
subl
mov
dec
lret
pusha
mov
or
rcr
and
inc
mov
add
fisttps
inc
rcrb
pop
sbb
add
pop
xchg
dec
jle
adc
adc
imul
lock
sbb
in
roll
xlat
and
arpl
mov
xchg
xchg
insl
hlt
loopne
add
das
push
push
ret
jnp
push
sbb
test
mov
lcall
sub
and
ficomps
shll
sbb
and
popa
adc
pushf
je
dec
test
in
inc
aam
cmp
or
xor
addl
leave
lret
mov
imul
in
dec
push
add
adc
out
and
push
adc
add
lret
pop
dec
add
push
pop
pop
add
sub
cmp
push
xlat
and
pop
dec
popa
jge
add
pop
test
sbb
sbb
mov
aad
clc
shlb
xchg
dec
and
mov
pop
enter
sbb
jb
in
xchg
push
nop
in
pop
sub
cmpl
add
notl
sbb
jno
or
faddl
xchg
ja
fists
notl
xor
xor
sbb
mov
stos
inc
lods
jmp
dec
pop
cli
sub
jp
jl
and
nop
addb
stos
mov
in
jmp
fcoml
mov
ja
adc
push
icebp
mov
mov
pop
push
pop
pop
popa
lods
add
add
insl
and
mov
adc
add
and
in
clc
sub
rolb
adcb
sbb
imul
jo
rcrb
fmuls
mov
popf
lock
in
pop
adc
call
jge
mov
push
loop
mov
push
mov
fldl
pop
pop
push
pusha
push
pop
pop
sbb
lods
jnp
inc
je
push
rcll
insb
push
add
sub
shlb
cmpsl
nop
lret
sti
test
mov
setl
movsb
mov
pop
ljmp
or
push
mov
push
pop
sbb
popa
jae
jae
pop
dec
inc
mov
das
sub
stc
lds
or
push
and
adcl
fucomip
xchg
stc
outsb
test
or
mov
cmp
dec
adcb
stos
leave
adc
outsb
add
add
fiadds
add
xchg
sub
pop
int
pusha
mov
inc
mov
add
loopne
cmp
pop
stc
out
pop
xchg
int
inc
lea
aas
filds
hlt
pop
ljmp
xchg
and
pop
jae
add
fiadds
mov
outsb
loop
dec
mov
adc
add
scas
pushf
daa
jmp
dec
push
mov
pop
mov
jno
xor
sti
xchg
out
or
fistl
push
popa
divl
and
dec
lcall
and
ss
pop
xor
mov
lds
sbb
nop
push
mov
icebp
and
sbb
pop
sub
iret
xchg
outsb
xchg
jne
outsb
push
add
fimuls
dec
cld
addb
xchg
adc
pop
sub
sbb
xchg
fsubl
or
cmp
cld
pop
xor
lock
jns
fdiv
daa
push
fisubs
lods
fcomps
mov
pop
rorb
sub
sub
sbb
pushf
inc
imul
and
pop
inc
repnz
shrd
test
ss
das
and
xchg
popf
in
mov
adc
mov
jo
pop
inc
adc
das
pop
je
sub
leave
lock
subb
inc
push
dec
nop
pop
test
pop
sti
xchg
xchg
jno
mov
pop
and
daa
mov
mov
aaa
into
add
js
adc
push
loop
xor
mov
mov
iret
add
jmp
dec
mov
sub
jmp
sub
idivb
iret
xrelease
pop
xor
mov
je
inc
sbb
jmp
sub
lods
inc
and
jmp
aaa
add
and
mov
adc
mov
dec
enter
adc
fcoms
out
sbb
clc
mov
loopne
enter
mov
pop
movsl
pop
ss
cltd
fistps
add
cmp
pop
nop
loope
pushf
mulb
or
mov
in
int
adc
adc
mov
dec
xorl
stos
or
mov
and
add
ja
xchg
rcr
mov
popa
jns
add
lods
sub
aad
pop
ret
jns
movsl
add
adc
sub
mov
push
mov
mov
cmpl
mov
push
or
jg
pop
sbb
add
xchg
jo
add
sbb
pop
mov
pop
adc
xchg
data16
into
mov
shl
mov
jo
mov
shr
pop
jmp
ucomiss
pop
add
cwtl
pop
jle
outsl
cmp
xor
bnd
pop
jge
mov
orl
add
or
and
nop
push
jecxz
jecxz
cmp
push
cmc
xchg
jo
dec
pop
nop
retw
pop
mov
jmp
cmp
xchg
sbb
arpl
push
xlat
xchg
or
cmp
imul
push
push
ljmp
data16
mov
add
imul
pop
push
adc
jecxz
push
jo
adc
pusha
or
dec
or
int
add
cmpb
insl
pusha
mov
pusha
sbb
ret
xlat
sbb
aam
mov
jmp
sbb
or
pop
push
roll
jo
xor
mov
xor
lods
push
add
or
xor
bound
pushf
sti
mov
jno
or
xor
fld1
xchg
les
lcall
cmp
sub
idivl
or
pop
cwtl
sub
mov
sub
add
jmp
insl
pop
mov
lret
addb
fnsave
adc
lock
out
sub
orl
add
jmp
adc
or
mov
mov
into
in
out
das
xor
bound
lret
mov
cmc
push
mov
mov
jae
xor
adcl
fcoml
pop
sbb
sbb
stc
or
jnp
js
jno
cmc
daa
adc
add
xchg
mov
js
or
add
daa
or
cld
jo
cmp
aad
pusha
mov
bound
mov
jmp
daa
xor
jg
dec
imul
jnp
jb
jns
mov
subb
dec
sub
ror
int3
or
fstps
inc
or
ret
fs
fists
dec
das
andl
mov
mov
mov
repnz
jmp
jo
ljmp
push
or
scas
and
enter
in
xchg
jno
pop
sub
adc
pop
mov
scas
add
ret
mov
lret
mov
adc
mov
cmp
lea
mov
loop
lea
inc
cltd
test
scas
cmp
shll
cmp
imul
insl
mov
js
mov
jl
fdivrl
hlt
cwtl
orl
adc
fstpt
adc
vpsllw
sub
dec
outsl
push
jnp
push
sti
and
cmp
cmp
loopne
sahf
rcrb
outsb
mov
in
jge
cs
fs
jae
xor
cli
mov
sub
mov
mov
stos
push
mov
push
aam
lea
test
cmpb
mov
movb
nop
fdivrl
adc
sub
test
and
dec
jl
pop
push
push
out
mov
add
lock
push
ret
into
mov
dec
fldl
test
jnp
std
leave
xchg
jbe
bound
mov
jo
add
or
mov
and
in
aas
xchg
and
adc
std
pop
mov
and
incb
hlt
mov
fdivrs
mov
xor
dec
clc
xor
addb
mov
jl
pop
insl
mov
add
xor
pusha
clc
or
push
push
sub
cmp
cld
xchg
or
push
imul
add
mov
xchg
jmp
cmp
popf
jns
test
adc
mov
pop
sbb
dec
mov
mov
int3
ret
sbb
jbe
out
fdiv
mov
add
out
lcall
mov
shlb
xchg
ret
loopne
jmp
or
jle
cltd
add
lcall
adc
sub
mov
add
xchg
xor
push
pop
cwtl
daa
hlt
adc
mov
jbe
push
cmp
das
add
cmp
mov
xor
mov
std
pop
push
mov
out
cmpsb
cmp
incb
or
jge
arpl
out
and
subl
and
ljmp
and
adc
into
cmp
cli
add
push
das
mov
push
sub
jl
test
iret
aas
pop
adc
out
and
bound
push
cmpl
pop
cmp
mov
fisttpll
fisttpll
xchg
inc
rclb
push
dec
mov
mov
sbb
add
jo
jl
pop
jecxz
push
sub
nop
adc
mov
call
fdivs
popf
es
mov
mov
pop
xchg
sub
push
mov
outsb
lea
lahf
lds
cwtl
push
jp
addr16
daa
sbb
add
call
stos
jmp
jecxz
pop
cld
sbb
lock
iret
dec
mov
lcall
leave
adc
gs
mov
sub
sbb
mov
adc
add
je
push
mov
mov
ret
push
das
faddl
pop
sbb
inc
mov
das
in
fucomip
std
jne
mov
dec
add
xor
jno
add
mov
popa
xchg
dec
push
fdivrl
fisttpll
mov
dec
mov
add
fdivrl
xchg
pusha
mov
mov
add
xor
pop
inc
cwtl
aas
loop
mov
addb
lret
jmp
push
dec
scas
xchg
inc
sub
jecxz
adc
das
cmp
adc
sbb
imul
clc
mov
imul
add
or
push
orb
mov
mov
daa
push
and
add
lock
sahf
sbb
rsm
cmp
ss
xchg
jl
lea
jmp
jne
popf
dec
push
cmc
aaa
push
cmpsl
mov
cmpsb
enter
mov
add
insl
mov
push
push
data16
mov
push
and
lods
test
stos
and
push
aas
adc
in
idiv
addr16
daa
xchg
aaa
mov
dec
add
inc
into
pop
dec
pushf
push
inc
push
xor
pusha
ror
js
mov
xchg
mov
inc
and
pop
inc
jbe,pt
jns
sbb
pop
rolb
pop
mov
imulb
sbb
mov
inc
xor
and
lcall
add
ret
jbe
dec
fidivrs
ficompl
xchg
pusha
je
pop
pusha
add
loope
inc
or
xchg
dec
int
add
mov
xor
and
icebp
rolb
ljmp
arpl
lret
das
jno
add
scas
loop
add
pop
pushf
lret
pop
in
xor
cmc
jge
imul
xchg
cli
add
xor
rorl
data16
cmc
sub
mov
or
or
mov
pop
inc
jmp
xor
xor
xor
xor
mov
mov
adc
hlt
in
or
ret
add
add
mov
test
sbb
ret
adc
jo
fsts
mov
sbb
popa
cmc
shll
add
mulb
clc
lods
sub
mov
fistps
mov
xchg
add
mov
inc
jnp
aam
pop
dec
mov
push
bsf
pop
out
leave
nop
push
jo
add
scas
dec
cmp
add
rcrb
adc
xchg
gs
or
jl
jne
ss
push
xchg
scas
inc
push
rolb
mov
shrb
mov
xchg
shll
push
das
mov
mov
clc
cmc
icebp
mov
push
mov
xchg
sbb
jge
ljmp
and
bound
jge
mov
iret
or
popa
outsl
jns
pop
push
into
fs
pusha
xchg
int
subl
sti
xor
insl
inc
shrl
popa
pop
in
cmp
test
mov
ret
into
rorb
adc
jmp
je
mov
sub
push
adc
or
sti
jnp
repz
jb
ljmp
jno
xchg
mov
sti
mov
xchg
mov
adc
pushf
mov
xor
in
mov
leave
scas
leave
sbb
pop
icebp
or
mov
xorl
popf
clc
mov
inc
lahf
pop
add
add
into
mov
int3
mov
std
and
mov
inc
add
mov
and
jns
jg
mov
jmp
loopne
mov
mov
cld
or
pop
mov
push
push
mov
add
cmp
inc
outsl
and
das
or
jno
fsubl
andb
pop
aas
fs
mov
scas
mov
sbb
jae
in
inc
mov
test
ja
imul
sub
mov
iret
mov
and
sbb
xchg
mov
inc
jecxz
rorl
sbb
mov
add
pusha
sub
fs
fisttps
push
or
push
sti
pop
sub
sub
cmpsb
shl
das
lds
fistps
out
jae
cmp
xchg
std
or
popa
sbb
insl
rorl
adc
pop
shl
xchg
aaa
stc
adc
mov
pop
ja
add
out
jbe
sbb
pop
int
lds
inc
jne
mov
negb
cmc
in
dec
mov
pop
sub
in
int3
jecxz
mov
xchg
sbb
repz
sub
test
jae
xor
and
scas
fiadds
adc
cltd
lods
les
les
outsb
and
sti
mov
pop
pop
mov
loopne
add
inc
js
mov
test
adc
jecxz
into
mov
xor
jnp
pusha
call
jl
push
daa
pop
add
mov
mov
push
sub
je
mov
dec
mov
gs
xchg
push
loop
jno
add
shlb
mov
syscall
mov
and
mov
mov
dec
lcall
mov
push
cli
fidivrs
stos
hlt
add
jp
add
stos
sub
xor
cmc
jmp
sahf
out
inc
shll
cwtl
pop
dec
adc
mov
jp
cmp
add
in
mov
add
cmc
push
mov
clc
jo
orb
fcoms
xchg
and
jge
sbb
mov
cwtl
push
or
xchg
pop
pop
bound
or
pop
ds
int
stos
add
std
mov
sti
in
dec
mov
push
sbb
inc
mov
mov
andb
test
not
popf
jmp
add
sub
mov
mov
mov
pop
pushf
dec
fwait
jmp
jecxz
repz
orl
xchg
push
sub
dec
int3
dec
popa
lcall
or
lds
insl
idivl
pop
xchg
data16
sbb
jp
sbb
lcall
jmp
mov
pusha
adc
je
mov
pop
xor
mov
mov
out
clc
add
pushf
sbb
ljmp
add
andb
push
lods
imul
and
adc
popf
ror
aaa
and
xchg
cld
pop
and
or
icebp
pop
cmp
cmp
cs
fistl
xor
orb
sub
inc
and
cmp
lods
add
jp
dec
in
push
and
sbb
popf
cli
and
mov
and
in
movsl
lods
repz
pusha
aad
pop
cmp
xchg
pusha
mov
dec
aas
add
es
cmp
xchg
bound
jae
sub
pop
movsl
out
sub
inc
cld
xchg
loope
jg
push
divb
loop
test
add
out
or
test
rorb
add
adc
aaa
jnp
loope
call
mov
test
addl
fimull
test
sti
scas
cmpsb
xchg
mov
dec
ret
aas
insb
cmpb
push
daa
jae
pop
add
dec
scas
xor
ficoms
mov
fwait
imul
push
je
roll
cmpsl
pop
jecxz
ljmp
into
add
adc
jge
jecxz
les
sbb
repnz
pushf
push
push
fst
add
cli
or
pusha
cmc
inc
or
dec
xor
mov
mov
mov
jne
ja
insl
je
fisubrs
pop
repnz
repz
dec
push
stc
mov
add
fsubp
adcb
movsl
mov
jge
out
lret
mov
out
sbb
mov
xor
cmp
and
adc
xchg
mov
js
insl
jo
xchg
cmp
mov
loope
mov
jae
pop
sbb
test
and
jno
pop
aad
mov
add
push
adc
sbb
lock
iret
dec
and
jmp
sub
test
in
sbb
xchg
adc
jp
push
xlat
xchg
mov
mov
jnp
in
mov
ficompl
fs
cmpsb
xchg
push
xorl
xor
mov
adc
in
sahf
aas
jmp
jo
adc
movsb
mov
mov
add
test
jns
and
jbe
and
pushf
and
mov
mov
pop
out
inc
aas
add
cmp
popf
loope
push
add
push
pop
lods
xor
and
into
and
add
daa
movsb
inc
scas
in
jge
pop
fbstp
or
cmp
stos
add
or
cs
jp
or
jmp
mov
mov
xor
dec
xlat
mov
cld
or
or
mov
test
add
and
bound
ffree
push
push
xlat
xchg
cli
or
mov
mov
mov
jo
idiv
push
out
add
inc
dec
xchg
push
shlb
jo
addr16
mov
pop
fdivs
mov
mov
cmp
addr16
lret
test
add
sub
in
mov
lret
dec
xchg
xor
inc
or
and
mov
gs
les
fsubrl
inc
or
inc
adc
pop
call
lret
inc
xor
mov
mov
xor
add
mov
jle
fneni(8087
push
cmpsb
sub
mov
mov
xchg
or
mov
push
or
adc
iret
test
es
sti
and
pop
pop
pop
sub
and
daa
nop
hlt
daa
pop
cmp
cmpsb
aam
jae
sbb
lret
mov
adc
pusha
mov
mov
pop
adc
push
cmp
mov
inc
mov
push
popf
insl
cmp
mov
pop
mov
popa
xor
imul
orb
inc
pop
roll
ret
mov
mov
mov
int3
sbb
add
popa
sti
xor
jecxz
out
jnp
add
cmp
xchg
dec
cmpsl
shrb
mov
les
scas
fwait
xchg
xchg
cli
orb
and
pop
pusha
scas
jg
arpl
jp
pop
xchg
aaa
mov
jo
inc
sub
or
jno
mov
rcrl
mov
dec
and
cs
xchg
push
pop
adc
sti
mov
test
cltd
jne
cli
and
pop
mov
enter
daa
nop
mov
sbb
sbb
mov
dec
xchg
jg
fcompl
pop
push
adc
scas
pusha
lods
das
sub
pop
loopne
mov
push
andb
fmuls
dec
mov
add
imul
cli
jbe
push
add
and
call
out
jmp
sarl
mov
or
push
jo
test
sbb
cmc
call
push
mov
addl
pusha
cltd
or
insb
cmpsb
adc
stc
ds
or
push
fcoms
mov
popf
sbb
xchg
aam
mov
inc
es
push
adc
or
das
inc
shl
mov
sub
mov
shll
leave
or
pop
mov
xor
imul
mov
add
jo
in
pop
push
and
cmp
mov
push
push
cwtl
xchg
iret
dec
or
insb
testl
dec
shll
cmp
push
dec
mov
add
out
cmp
and
push
or
lea
mov
mov
shl
jmp
sbb
mov
sub
inc
dec
ja
add
xchg
pop
or
pop
je
shll
sub
lock
xchg
cltd
or
push
mov
es
jge
mov
and
rolb
pusha
mov
sti
jmp
adc
mov
add
sbb
mov
and
icebp
jl
mov
inc
mov
shr
sbb
and
sbb
mov
lds
mov
out
loope
divb
es
pop
mov
sbb
or
jo
arpl
cld
std
mov
movsl
add
mov
sbb
test
dec
or
push
std
adc
inc
hlt
cmpsb
scas
mov
out
lahf
pusha
stc
mov
pop
dec
lret
iret
mov
sbb
sub
stc
pop
jno
and
lea
les
scas
push
and
add
ss
push
enter
adc
mov
sub
mov
inc
adc
testb
xor
cmp
xor
dec
add
add
mov
or
jnp
ss
mov
outsb
xlat
mov
pop
popf
fdivl
popa
mov
xlat
or
mov
mov
adc
mov
je
lcall
xchg
into
das
xchg
lcall
or
pop
cmp
out
adc
sbb
cmp
pop
incb
cmp
jae
inc
pusha
mov
subl
loopne
push
popa
push
xchg
les
mov
daa
fidivs
mov
insl
jmp
push
fisubs
sarl
notb
mov
push
daa
or
test
lods
inc
pop
pop
mov
repz
bnd
push
arpl
mov
scas
push
adc
push
out
mov
popf
fistpl
mov
lock
imul
or
jnp
or
jb
idivl
test
or
push
sbb
add
jno
sub
push
cmp
sub
xchg
xlat
mov
add
ljmp
cs
popl
xchg
pusha
sti
cmpsb
nop
lahf
movsl
stc
scas
mov
pop
popf
sbb
ljmp
jp
das
call
scas
jnp
dec
ljmp
add
call
popa
adc
test
push
shlb
mov
jne
outsb
sbb
pop
lahf
pop
call
outsb
sub
cld
sbb
inc
out
lret
pop
dec
adc
mov
gs
int
mov
pop
pop
dec
les
stc
adcb
adc
inc
ret
dec
mov
lret
cs
inc
push
jmp
inc
pop
popa
xlat
fstpl
clc
loope
jno
cmp
test
data16
lock
ret
mov
shll
sbb
add
mov
jp
shll
test
push
loopne
cmc
or
insb
and
sbb
push
xchg
lcall
sub
xchg
aaa
xchg
mov
bnd
bound
lahf
jle
push
sahf
mov
mov
mov
xchg
subb
adc
or
ss
push
jne
adc
mov
add
cmc
loopne
and
xchg
mov
das
jbe
push
add
cmpsb
sub
dec
repnz
xor
clc
dec
cwtl
xor
insl
xor
add
lea
mov
sbb
pop
nop
pop
push
mov
add
les
mov
icebp
mov
pop
iret
test
xor
mov
cmp
xor
call
jmp
cmp
into
add
inc
jg
cld
out
mov
pop
clc
mov
and
out
mov
sbb
rolb
cmp
cltd
sbb
adcb
sbb
xlat
cmp
movsb
xchg
in
sbb
pop
mov
cld
nop
xchg
aad
fstpl
in
xorb
repz
test
and
lods
rcrl
insb
xchg
xor
jge
and
push
adc
add
xchg
sbb
or
jl
lock
or
xor
lret
and
lods
add
adc
xchg
sbb
imul
test
pop
mov
mov
cmc
mov
and
adc
outsb
mov
adc
lahf
cmpsl
sub
sbb
sub
push
sarl
and
jmp
in
xor
jle
sahf
mov
mov
jle
push
dec
std
aas
pop
lods
shrb
or
imul
iret
pop
test
repz
test
cmc
hlt
adc
adc
mov
je
negb
xchg
iret
cs
aas
hlt
pop
lock
and
insl
insl
push
repz
sub
mov
or
sub
dec
mov
jbe
incl
and
mov
mov
push
cmp
rcll
mov
cmp
test
jbe
faddl
rcr
and
xor
mov
cmp
outsb
jecxz
jbe
push
mov
add
dec
jnp
jmp
sbbl
xor
pop
push
sar
cmp
lret
das
idiv
adc
jmp
mulb
cli
js
cmp
adc
mov
sbb
loope
test
stc
sub
push
mov
cwtl
mov
push
dec
adc
push
pop
add
negl
nop
pusha
xchg
fidivl
inc
loop
inc
andb
jae
dec
pop
hlt
fmull
cmp
push
pop
sbb
jle
mov
push
outsb
add
inc
jmp
xchg
fcoms
add
cmp
cmp
rep
jo
cmc
clc
xor
fnstsw
pop
ja
sub
push
dec
mov
adcl
aaa
lock
out
pop
mov
mov
lods
dec
xchg
mov
or
cmp
fistpll
sub
mov
imul
popf
lods
roll
outsb
jne
and
jp
add
lods
imul
push
dec
mov
in
addb
mov
push
push
gs
jg
or
pop
out
scas
or
jns
jp
jle
or
xchg
cmp
fistps
cmp
mov
pop
mov
add
push
xorl
enter
and
xchg
rorb
xor
push
int3
push
fdiv
push
sbb
jmp
or
push
dec
push
inc
out
add
nop
sbb
xor
bound
dec
mov
inc
gs
int
and
popa
xchg
pop
adc
add
test
adc
sti
scas
stos
add
stc
sbb
mov
and
test
loop
or
popf
lods
jb
adc
pop
mov
insl
xor
xchg
jle
inc
mov
add
pop
and
cmova
stos
inc
into
push
adc
scas
or
adc
mov
aad
scas
fwait
add
cmp
pop
pop
cs
pop
out
jp
or
lock
cld
mov
mov
add
ss
and
rorl
cmp
mov
outsl
dec
adc
or
and
sbb
inc
or
or
jo
dec
mov
insl
xor
stc
push
iret
mov
mov
pop
or
jnp
push
adc
cli
sbb
cmp
sahf
pop
add
lds
inc
cmp
push
mov
xor
jmp
or
mov
mov
cmp
pusha
cld
jmp
sub
popa
mov
lds
test
pop
xchg
jle
sarb
jmp
outsl
fwait
and
ja
jl
pop
add
cld
add
sub
and
jb
cs
adc
push
pop
movsb
lds
fwait
popl
pop
push
sbb
pop
fcompl
arpl
sub
mov
inc
pop
rorl
sub
push
rcrb
push
mov
pushf
add
lret
add
fimull
stos
mov
movsl
fcoml
push
nop
enter
repnz
jns
cltd
loope
sahf
inc
sub
sub
adc
pushl
fucomip
pop
add
out
insb
push
aam
jmp
in
insb
or
test
and
mov
push
subb
add
cmp
movsb
fistl
fsubl
jmp
dec
les
lods
adcl
in
mov
in
jmp
inc
in
push
add
jge
inc
jb
jge
out
and
lea
ljmp
scas
bound
dec
fwait
or
ret
adc
cmp
aam
addr16
or
push
sub
sbb
dec
es
sub
jg
jb
xor
fldt
lds
or
leave
push
loope
stc
add
frndint
sbb
fisttps
jnp
xchg
pop
stos
andl
jnp
movsb
cmc
rolb
push
mov
fiadds
rcrb
jb
rcll
push
push
xchg
adc
ja
jno
xlat
mov
fcomps
inc
sbb
or
push
adc
pop
and
jnp
adc
jno
cmc
cmp
bound
pusha
call
xchg
lods
call
int
shl
add
jle
jmp
out
fwait
lcall
add
dec
lds
stos
gs
sbb
popa
mov
mov
incb
jne
es
or
adc
dec
mov
ja
mov
enter
xlat
adc
and
mov
sarl
mov
add
xchg
and
daa
xchg
push
xchg
call
cld
insb
adc
lods
inc
scas
icebp
pusha
jnp
push
dec
scas
leave
sbb
sub
mov
jo
push
stc
mov
test
add
jmp
xor
outsl
pop
add
push
lds
popf
aad
xor
xchg
out
xlat
out
cs
push
sbb
test
sbb
out
inc
push
outsb
mov
xchg
pop
or
dec
je
mov
punpcklbw
push
cmc
popa
pop
sbb
imul
lret
decl
pop
jg
arpl
ja
ljmp
call
lcall
lret
andb
push
mov
jmp
fstpt
dec
bswap
sbb
cli
fnstcw
adc
adc
adc
push
mov
xor
faddl
out
mov
and
fdivrl
jmp
dec
nop
dec
out
loope
and
jbe
lock
jle
lret
add
aam
sbb
cmc
adc
fsts
mov
mov
inc
mov
pop
xor
fmuls
sbb
int
add
push
mov
out
cs
xchg
enter
hlt
xchg
mov
jne
insl
clc
jp
orb
testl
cmp
popf
orb
test
mov
pusha
int
mov
jne
fldt
mov
outsl
mov
mov
loop
mov
pop
jle
push
test
lret
inc
sbb
push
sub
jl
mov
fisttpll
jp
adc
push
sti
pop
push
mov
ds
cli
fwait
mov
mov
out
in
pop
push
out
mov
lods
rolb
out
fidivrl
add
out
pop
dec
xchg
pusha
rol
enter
xchg
xchg
mov
daa
and
push
or
loop
add
jb
popa
add
into
jecxz
gs
cmp
cltd
out
jnp
test
testb
xchg
scas
icebp
and
push
lds
mov
pop
testb
les
add
das
xor
jle
push
pop
sbb
xchg
aaa
lcall
pop
pop
nop
testb
push
test
jg
add
adc
mov
add
ret
nop
clc
sarl
jg
mov
and
mov
notb
sub
shll
pop
das
and
out
fistpl
jo
jecxz
add
fsubr
sub
push
adc
pop
inc
or
in
das
loop
fisttpll
loope
mov
xchg
inc
stos
dec
clc
call
mov
xchg
pop
testl
pop
add
outsl
jmp
fs
mov
repz
cmc
addb
xchg
out
adc
dec
negb
movsl
lds
and
loope
aas
jb
sub
push
add
in
das
cmp
adc
inc
push
and
aas
mov
add
add
cmp
pop
xchg
add
fistps
cmpsl
cmpsb
dec
and
xor
push
and
decl
pop
nop
push
pop
in
add
xor
scas
jns
or
in
scas
pop
cmc
nop
imul
push
pusha
mov
sub
shll
mov
add
inc
sub
mov
punpckhdq
insl
mov
imul
adc
daa
dec
and
inc
std
mov
jbe
mov
add
jno
inc
inc
les
gs
pop
mov
pusha
repnz
pop
or
cmc
mov
mov
loopne
stos
adc
pop
outsl
loopne
mov
imul
inc
or
add
sbb
out
sub
xchg
add
add
cmp
shr
pop
insb
push
mov
xchg
xor
cmp
dec
dec
sub
pop
push
sti
mov
fstl
mov
lret
mov
andb
daa
mov
mov
movsb
xor
fdivrs
sub
or
push
daa
pop
inc
pop
fcomps
pop
or
lahf
mov
cld
push
push
mov
mov
jno
mov
cmp
mov
lcall
pop
repz
sbb
or
shrl
dec
mov
enter
popf
popf
sub
push
sub
pop
aad
push
mov
pop
xlat
pop
and
sahf
test
xor
clc
enter
mov
divb
add
daa
ja
xchg
into
xchg
push
xlat
mov
sub
dec
adcl
or
cmpsl
cmc
sbb
loop
in
sub
xlat
sub
dec
pop
fdivp
sub
pop
inc
mov
pop
adc
into
adcb
xor
adc
fwait
es
fsubrs
pop
scas
and
add
leave
jecxz
mov
jp
or
orb
popf
lea
cmp
fldenv
call
pop
popa
out
jmp
jp
push
jg
dec
das
pusha
aaa
sub
int
in
push
inc
sub
push
push
shll
pop
shr
xchg
mov
sbb
imul
or
daa
mov
cmpsl
xchg
jno
sbb
sub
sub
push
mov
xor
data16
mov
out
mov
xor
int
fsubr
popa
popf
sub
icebp
cmp
inc
ja
add
xor
xchg
ja
push
mov
subb
je
cmp
xor
mov
lock
mov
lcall
sbb
jns
lcall
sbb
out
push
cli
jle
add
lods
mov
jmp
inc
arpl
negb
daa
push
jbe
notb
outsl
mov
pop
mov
repz
fists
cmc
push
rclb
cs
stos
add
pop
add
mov
dec
stc
loopne
aas
popf
jae
pop
sarl
inc
cmp
add
cs
mov
pop
or
xchg
mov
ror
popf
xor
mov
sti
xchg
mov
hlt
dec
out
rorl
lods
aam
shlb
mov
sbb
and
pop
lods
ljmp
cmc
mov
adc
fiadds
cltd
xchg
sub
movsl
fstpt
sbb
dec
lcall
jne
scas
mov
lcall
push
add
cmp
pop
imul
xchg
mov
xor
lret
pop
popa
mov
add
xchg
xor
pop
xchg
jp
out
jl
les
mov
push
inc
leave
pop
out
xor
pusha
movsl
sbb
add
push
pop
stos
je
out
sub
shrl
or
push
jecxz
jne
pop
movsl
fdivrp
jns
aas
mov
lock
dec
shr
aam
lcall
imul
ret
fimuls
or
shrl
fsin
mov
roll
mov
mov
jne
mov
mov
mov
in
and
mov
and
out
aaa
cs
ds
jmp
icebp
add
inc
jl
testb
sub
push
push
test
repnz
mov
dec
and
les
call
push
mov
xor
arpl
sub
push
es
gs
sbb
mov
add
jbe
int3
jmp
mull
cmp
push
scas
int3
jae
in
pop
adcb
push
adc
rcll
jb
sbb
add
leave
es
xchg
test
lods
mov
sub
in
cli
popa
and
enter
adc
cs
test
cmp
mov
sub
lods
add
loope
stc
sub
xor
es
rcrl
daa
in
or
insl
jecxz
or
popf
pop
add
xchg
popa
mov
fwait
sahf
sbbb
bnd
pop
dec
xorl
mov
jecxz
aas
bswap
cmpsb
xor
jns
jbe
adc
rorb
or
sub
dec
call
mov
fists
fadd
mov
bound
or
and
out
mov
add
lds
push
cmp
push
repnz
xchg
out
dec
push
xchg
add
pop
or
shll
adc
adc
mov
add
into
bound
dec
call
and
outsl
out
mov
jbe
add
imul
inc
test
mov
mov
or
adc
adc
pop
pop
jo
mov
or
sbb
add
sub
and
mov
or
sub
data16
mov
cli
push
mov
xchg
xchg
aaa
std
and
jp
cld
cwtl
xchg
or
cmp
push
push
test
fidivrl
sbb
testb
mov
jg
leave
jp
mov
ret
pop
add
xchg
sub
repz
push
and
xchg
jbe
incb
or
mov
das
mov
add
push
testl
out
pop
jns
dec
fdivs
push
iret
push
sbb
test
jnp
add
ret
cltd
in
stos
adc
repz
js
pop
xlat
movsl
daa
out
pushf
sbb
mov
mov
hlt
xchg
jl
cwtl
push
add
push
xchg
mov
cmp
lds
sbb
test
add
cmovb
push
dec
popa
mov
les
sbb
add
scas
fwait
jno
leave
mov
lahf
fdivl
pop
lods
dec
xor
int
std
cmp
outsb
cwtl
in
popa
in
pop
mov
pusha
xchg
addr16
xchg
popf
fyl2xp1
adc
add
test
in
dec
movsb
jno
and
stos
xchg
mov
mov
or
rorl
movsb
rcll
jecxz
dec
lea
adc
or
push
adc
mov
mov
inc
mov
outsl
mov
sbb
scas
testl
push
in
faddl
and
fisubs
jmp
mov
mulb
mov
nop
add
add
mov
scas
adc
mov
ljmp
add
push
lret
xchg
movsl
mov
mov
jns
xchg
xchg
aaa
mov
mov
outsl
sti
pop
jb
mov
adcl
test
cmp
xchg
lfence
das
sbb
sbbb
cmp
mov
sub
ret
jp
jo
mov
fcoms
cld
add
mov
mov
popa
xchg
in
inc
dec
or
fistl
pusha
jns
repz
aaa
popf
push
push
mov
insl
adcb
adc
xor
cmc
enter
imul
jg
shr
imul
sti
xchg
enter
push
and
or
les
xor
mov
mov
in
fisubl
or
lock
sarb
inc
outsb
fcomps
jno
and
gs
stos
xor
adc
inc
xor
add
sbb
in
icebp
int
dec
pop
jne
nop
dec
or
jmp
add
cs
inc
inc
xchg
fsubrs
enter
sbb
out
jo
adc
test
rclb
push
dec
sub
cmpsl
popf
adc
xor
and
jmp
sbb
das
or
and
mov
pop
sbb
jo
xchg
int
mov
jge
imul
push
adc
mov
inc
lret
adc
rclb
cmpsb
jo
sub
inc
push
or
xchg
mov
pop
cmpb
daa
dec
lock
xor
xor
push
adc
sub
es
mov
and
mov
cmp
es
adc
insl
ja
cmp
and
add
ret
mov
dec
and
cmc
stos
cld
cmpsl
testb
jg
outsb
ret
add
std
adc
adc
scas
sub
shl
xchg
je
add
movsl
pop
das
fs
daa
repz
jp
popl
insb
cmp
sub
cmp
sub
lea
add
dec
adc
test
ds
mov
arpl
xchg
sub
dec
stc
lret
jne
jo
mov
hlt
clc
and
mov
mov
xor
les
popf
imul
jp
xchg
jl
repnz
sub
adc
lea
insb
shrb
push
test
addr16
jnp
dec
out
adc
popf
stos
loope
cs
fisubs
adc
cs
pop
xchg
and
ljmp
push
adc
pop
das
imul
sbb
ficomps
mov
js
mov
faddl
rol
pop
std
stc
mov
cs
add
and
dec
add
and
movsb
add
push
stc
pop
adc
pop
test
mov
pop
popa
mov
fisttpl
std
in
mov
sub
daa
in
xchg
hlt
shl
pop
sti
rol
or
sbb
imul
mov
into
xchg
mov
mov
adc
roll
adc
lods
adc
adc
xchg
faddl
test
mov
pop
cs
mov
adc
push
cmp
xor
and
push
add
jle
or
push
jae
repz
add
repz
add
or
sbb
xchg
push
cmc
nop
xchg
add
pop
cmp
lret
mov
mov
push
pop
pop
js
rolb
mov
aad
dec
pop
scas
push
sub
xor
adc
push
add
mov
xchg
mov
mov
mov
fisubs
call
mov
ds
fistpll
push
push
cmc
add
rol
inc
out
or
push
or
bound
pop
xor
xlat
adcb
lods
shrb
pop
mov
xor
aas
out
cs
movsb
imul
cmpsb
aas
and
mov
push
push
or
movsl
mov
mov
mov
push
loope
jmp
out
xor
out
push
push
movsl
dec
in
aad
jg
andl
dec
mov
mov
mov
pop
and
or
jp
jecxz
outsb
mov
das
lcall
add
cs
mov
mov
pop
or
cmpsb
es
shrl
in
sldt
mov
mov
fdivrl
dec
push
inc
cli
enter
stos
cmp
pop
xchg
or
push
lcall
stos
jne
jmp
mov
cmp
cwtl
rcrb
test
in
sarl
aad
pop
shll
mov
adc
clc
cmpsb
xor
push
adc
out
xor
lods
adc
mov
in
inc
push
adc
dec
add
add
or
aas
outsb
les
aaa
shll
push
popa
inc
adc
push
dec
sub
enter
mov
inc
lock
xchg
adc
jo
mov
fdivrs
push
mov
xchg
or
stos
adc
jmp
push
inc
sbb
push
daa
jmp
lcall
xor
jo
scas
aam
adc
add
lea
mov
mov
sbb
cld
xchg
cli
pop
or
out
pop
out
mov
fildll
mov
aad
inc
ljmp
adc
or
push
rorb
cwtl
jl
inc
push
sub
push
jno
ss
and
pop
xchg
lcall
je
popa
push
pop
xchg
test
in
pop
nop
jmp
testb
pop
xor
negl
movsb
mov
and
adc
sti
mov
clc
sub
test
sbb
fldl
test
adc
subl
stos
lock
popa
int3
pop
ljmp
popf
or
ljmp
mov
scas
mov
jae
mov
jg
es
out
ss
dec
aas
mov
lret
or
mov
mov
outsl
xchg
clc
xchg
stos
mov
and
pop
add
pop
or
sub
dec
mov
jae
out
pop
xlat
imul
mov
pop
sbb
pop
or
pop
and
push
mov
je
in
popf
mov
test
int3
daa
sub
std
lods
xor
xlat
movsb
mov
jecxz
and
cmp
popf
imul
pop
and
sub
insl
out
pusha
or
repnz
cmpsl
jo
out
movsb
mov
jecxz
sahf
mov
loop
hlt
insb
jno
add
xlat
in
push
shll
sarb
call
repz
aas
push
rclb
push
pop
dec
in
cs
adc
std
and
add
bound
popa
jmp
int3
dec
mov
loopne
fsubr
xchg
xchg
loop
jbe
faddl
int3
inc
testl
adc
sbb
lods
orb
xor
add
mov
aas
mov
andb
add
mov
ficompl
sub
push
mov
cld
repz
add
lods
dec
cld
push
mov
add
imulb
xchg
stc
ss
add
mov
out
daa
jnp
movsl
lock
jge
cwtl
insl
mov
lods
fucomip
mov
aaa
mov
aam
sub
ljmp
mov
sahf
rcrl
mov
mov
sub
dec
daa
rcl
pusha
mov
arpl
loope
xchg
inc
sbb
and
xor
xor
rolb
mov
adc
adcb
or
nop
out
pop
movsb
test
and
jnp
mov
orl
jmp
xchg
stc
outsb
popf
fildll
repz
sbb
xchg
jge
add
dec
mov
cmp
dec
fcmovnbe
cmp
jg
xchg
int3
pushf
pop
adc
fsubrl
mov
sahf
xchg
lcall
enter
add
push
mov
push
out
add
call
add
add
mov
adc
stos
lods
aad
add
and
ljmp
lds
xchg
sti
int
stos
mov
sbb
fdivl
and
or
cmp
jo
sub
add
xor
push
mov
mov
xchg
push
push
stos
fdivs
mov
in
adc
fistl
orl
movsl
jnp
jno
sbb
add
call
cmpl
pop
dec
gs
stc
adc
jg
dec
repnz
sbb
std
mov
xchg
adc
inc
sub
pop
jmp
and
aaa
xor
xchg
push
cmp
mov
rcll
pop
sub
js
outsb
stos
das
pusha
cmp
mov
outsl
pop
inc
mov
pop
dec
fisubs
mov
pop
cld
repnz
cmp
dec
mov
fstpt
rcrl
stos
mov
jne
xchg
adc
and
pmuludq
mov
mov
lea
ljmp
add
sbb
cwtl
lea
loopne
inc
inc
ret
jmp
sub
inc
dec
jle
cltd
sbb
repnz
js
pop
das
xor
fs
jmp
inc
mov
rcrl
roll
lret
scas
or
lods
lods
adc
dec
cld
adc
outsl
dec
cmp
mov
inc
fcompl
in
inc
mov
adc
lcall
cmpl
inc
or
popa
les
std
fadds
imul
enter
add
adc
sub
pop
and
lods
lret
and
mov
negb
add
jnp
inc
or
cld
cmp
pop
and
mov
test
mov
mul
loopne
out
ljmp
pop
mov
mov
idivb
jg
cld
movsb
inc
stc
sbb
dec
lock
push
add
scas
sub
sahf
leave
ja
pop
xchg
rclb
out
xchg
cmpsb
out
mov
insb
push
and
pop
inc
out
mov
or
sbbb
jno
pusha
cld
add
scas
cltd
sbb
rcr
int
sub
jge
mov
jae
pop
mov
xchg
jp
shr
daa
add
add
pop
xor
push
sbb
add
mov
xchg
aam
cmpsb
sbb
jnp
add
inc
imul
push
push
shlb
push
add
enter
dec
mov
push
add
je
or
add
or
mov
into
adc
sub
cmpsl
jmp
and
je
adc
push
push
fscale
pusha
jbe
test
rorb
in
mov
mov
pusha
into
in
rolb
mov
je
add
nop
add
mov
adc
xorb
imul
pop
mov
insb
pop
inc
nop
xlat
push
ds
mov
cwtl
nop
sti
push
mov
pop
int3
les
cmp
cmp
lcall
cmpsb
daa
mov
sbb
fmull
or
push
popf
fcmovnb
or
xchg
outsl
add
imul
xor
cmpl
mov
fisttps
and
shrl
mov
or
leave
jae
fwait
rolb
daa
inc
jns
insl
js
xor
pop
pop
or
fwait
pop
repz
shrl
lret
or
push
jmp
xchg
bound
in
mov
pushf
ret
cmp
and
loop
cli
pop
jbe
hlt
add
call
xchg
jl
ret
adc
bound
adc
enter
push
insb
in
and
movlps
loop
sub
xchg
fstpt
pop
adc
and
ror
and
dec
pop
lret
je
mov
add
xor
jp
mov
add
fld
in
shr
mov
mov
jne
popf
push
or
cli
xlat
mov
push
cs
scas
lea
shlb
push
int3
add
stos
jle
dec
les
pop
mov
mov
add
or
or
popa
pop
jge
or
pop
outsb
mov
mov
pop
pop
dec
pop
push
call
cld
mov
jnp
sub
mov
mov
push
fwait
pusha
and
or
cmp
popa
call
jmp
js
xor
loop
je
sbb
rcrb
cmp
jmp
pop
stos
sbb
sbb
out
adc
jl
sbb
pop
clc
stos
jge
lds
mov
jecxz
jnp
add
imulb
sbb
pusha
lds
cwtl
and
or
dec
fldt
inc
insl
sub
jp
cli
push
mov
dec
pop
xchg
sar
fsubrs
cli
dec
ds
sti
notb
mov
pop
std
cli
fcmovb
xchg
cmpsb
dec
add
scas
sahf
fwait
aam
sti
and
pop
or
push
in
xchg
cmp
jne
xchg
loope
nop
pop
daa
in
ror
cmp
stc
movsl
sub
cmp
sbb
add
mov
dec
outsl
roll
sarb
or
scas
pushf
jle
jecxz
mov
lret
imul
int3
sti
add
scas
fmull
fs
mov
dec
inc
xchg
jnp
clc
xor
sbb
pop
aad
movsl
ffree
int3
add
cmpsl
ja
addr16
mov
jge
and
fcmovnbe
add
lret
in
ficoms
out
cs
add
sbb
jnp
inc
cmp
or
mov
xchg
in
xchg
hlt
daa
divl
std
cmp
sbb
inc
mov
jecxz
repnz
xor
pop
xor
jmp
xor
push
add
pop
add
add
enter
cs
mov
and
cmp
lea
push
adc
push
rorl
sbb
mov
mov
adc
pusha
in
int
or
or
add
movsl
faddl
jecxz
sub
cmp
mov
jl
fmull
jae
sub
cld
je
test
popf
and
adc
scas
lods
jmp
mov
lock
jo
sbb
mov
ljmp
out
add
inc
int3
dec
stos
arpl
outsb
mov
mov
xorb
mov
inc
ret
push
push
sub
adc
pop
pop
in
cmp
add
cmpsb
inc
mov
and
push
repnz
pop
add
mov
sbb
movb
fisttps
add
out
fsubs
mov
repnz
xlat
push
adc
xor
popl
call
inc
mov
cwtl
push
popa
ss
or
cmp
pop
lods
movsb
hlt
pop
stos
int
jo
xor
stc
dec
cmpsb
clc
shll
test
xchg
mov
popa
jnp
pop
repnz
jns
out
negl
cmp
mov
inc
add
les
sub
out
lret
add
out
imull
je
adc
fldt
pop
xor
push
push
push
mov
shrb
xor
adc
mov
sbb
xor
lcall
pop
pusha
daa
test
aaa
in
cmc
add
push
cmpl
sub
fidivs
mov
and
inc
jmp
ss
add
mov
fincstp
xor
adc
sbb
addr16
mov
sbb
cmpsb
test
xchg
aad
push
loope
and
notb
enter
mov
int3
scas
pushf
push
cli
mov
dec
jge
pop
mov
sub
scas
jl
and
stos
rcrb
jg
push
sub
push
lock
aaa
inc
sbb
inc
int3
or
adc
mov
outsl
and
mov
or
hlt
pop
shlb
sub
sbb
mov
cltd
clc
mov
push
or
xor
jns
sbb
sbb
arpl
out
leave
in
push
or
sbb
js
push
xchg
lock
leave
inc
cmp
leave
add
sbb
clc
das
mov
or
xchg
push
inc
and
movsl
push
or
ficomps
pop
add
fisubl
rcr
es
mov
cmp
loopne
add
adc
inc
or
jns
cmp
lcall
shll
push
inc
pusha
pop
sbb
cmp
push
iret
imul
dec
loopne
adc
mov
push
push
rcr
cltd
push
out
cmp
push
mov
xor
jno
xchg
dec
push
add
dec
in
cmp
xor
repz
rolb
cmp
jnp
out
roll
addr16
test
invd
cmc
scas
lods
loope
mov
int
rorl
scas
call
jmp
dec
pop
jb
add
pop
roll
data16
add
mov
repz
or
lcall
inc
in
aam
or
xchg
inc
jmp
sub
push
mov
xchg
xor
lods
add
adc
pop
insb
and
sub
mov
sarb
cmp
fs
mov
xor
in
stos
adc
js
in
mov
xor
add
sub
push
or
test
mov
repnz
and
dec
push
les
and
cwtl
mov
sub
test
adc
xchg
out
lock
adc
and
and
lods
test
push
mov
into
jno
enter
cmp
scas
inc
fnstenv
jo
ret
leave
fldl
pop
xor
ret
push
add
jbe
int3
clc
mov
add
add
cmp
addl
mov
inc
repnz
push
cmp
xor
and
dec
dec
das
add
lock
clc
nop
adc
mov
ds
mov
inc
cld
xchg
clc
add
icebp
ret
ja
or
dec
mov
pusha
rolb
loope
xor
arpl
pushf
xor
test
sub
int3
stc
cwtl
adc
nop
notb
loop
or
cmc
mov
jno
cmp
lret
and
int3
inc
sti
fnstcw
std
push
mov
mov
lods
adc
or
stos
sarl
in
and
cli
lods
xor
nop
or
mov
in
ss
xor
addb
and
mov
jg
sbb
cmp
in
in
data16
fstpt
xor
pop
aaa
or
and
xor
adc
enter
mov
pop
cltd
ljmp
sub
rcrb
mov
inc
loopne
cmp
mov
adc
adc
out
add
scas
shlb
jmp
loopne
cmpl
mov
push
or
js
or
in
mov
enter
subl
add
add
jg
in
inc
mov
dec
mov
test
inc
in
ret
cli
cmp
iret
jno
mov
and
stos
add
inc
cmp
add
add
out
loopne
adc
inc
test
push
or
sti
xor
or
shlb
cmp
sahf
or
test
rcrb
imul
dec
rolb
push
xchg
subl
out
dec
add
test
sub
lret
mov
add
inc
mov
pusha
cltd
fs
add
inc
jb
adc
and
outsb
hlt
in
adc
test
enter
add
mov
xchg
in
pop
push
idivb
cmp
adc
pop
push
add
lds
je
mull
cmp
ret
pop
fs
nop
and
fdivs
push
or
adc
popf
mov
fmull
rorb
cmpsl
lods
in
or
mov
arpl
imulb
inc
adc
in
cmp
xchg
cmpsb
push
add
std
leave
inc
jo
mov
shrb
dec
movsl
jecxz
add
mov
pop
add
lcall
jo,pn
popa
pop
out
pop
ds
jae
nop
out
and
loopne
shlb
ret
jo
ret
push
dec
mov
sbb
and
push
xchg
xchg
add
popa
sbb
mov
daa
out
mov
out
int3
pop
aas
mov
bound
shll
push
out
push
add
rorb
insb
fwait
lahf
adc
into
stos
insb
push
sub
sbb
andl
or
jae
repnz
sub
ljmp
sbb
or
and
in
xlat
dec
femms
ja
adc
add
mov
fildl
mov
mov
test
ret
cmp
pop
jno
popf
adc
dec
fidivl
lret
cwtl
mov
sti
gs
dec
pop
add
or
adc
fwait
add
inc
pop
inc
lahf
push
lret
int3
add
aas
ret
add
add
mov
sub
jecxz
push
xchg
sbb
cli
lret
add
divb
add
jmp
insl
pushf
pop
xor
aad
xchg
scas
jnp
add
js
je
andl
add
sti
mov
xchg
test
sbb
lock
hlt
aam
lock
sti
daa
sub
inc
inc
push
xchg
enter
cmp
jecxz
sbb
shl
jl
add
sub
xor
andb
shrb
jb
pop
push
lock
add
test
cmp
cmp
incb
jle
lahf
sbb
cmp
dec
pop
cmp
push
sahf
mov
mov
les
cmp
orl
pusha
xorl
fcom
or
loop
push
jg
push
inc
popa
lahf
mov
or
mov
call
jmp
cmpsl
or
mov
push
jle
test
imul
subb
cmp
dec
scas
cs
inc
push
mov
cmp
sub
rorb
push
push
hlt
adc
outsb
and
push
pop
mov
lock
cwtl
sub
bound
adc
pop
gs
or
mov
aad
push
int
test
push
cwtl
dec
fnstcw
or
clc
push
test
pop
outsb
inc
enter
mov
insl
xor
mov
push
cmp
mov
add
xor
lea
or
bndldx
cld
dec
scas
add
dec
shl
cli
jne
push
cmp
mov
pop
popa
adc
add
pop
bnd
das
cwtl
or
lock
pop
and
jns
mov
dec
out
nop
incl
stos
mov
push
add
ljmp
aam
mov
cltd
shll
popl
jl
add
push
cmp
ret
push
pop
out
pusha
in
or
push
add
xchg
scas
mov
cmp
push
aam
mov
adc
mov
enter
lret
incb
movsl
adc
xor
mov
push
or
dec
add
mov
loop
and
movsb
bound
pop
mov
or
pusha
sbb
mov
adc
adc
mov
sbb
cmpsb
cmp
add
xorl
mov
insb
and
mov
push
add
dec
ret
inc
and
add
inc
sbb
mov
dec
and
je
int
pop
rcrb
mov
mov
sub
adcl
cmp
jne
sbb
xlat
loopne
orl
mov
pop
sbbb
fadd
nop
add
adc
fcomi
sub
pop
sbb
mov
mov
hlt
push
sarb
mov
jbe
push
push
ljmp
aas
aam
add
js
out
sbb
or
dec
pusha
int
popf
imul
cmp
test
imul
cmp
mov
jo
fs
fiaddl
pop
or
add
pusha
sbb
in
pop
inc
xor
jmp
xor
and
cmp
mov
add
xor
jl
loopne
sub
repz
add
outsl
jg
and
mov
pusha
enter
sbb
test
out
push
mov
xchg
leave
push
les
cmp
inc
adc
add
mov
jp
xor
pusha
push
mov
and
fwait
les
adc
add
out
inc
inc
popa
pop
jecxz
pop
mov
add
and
pop
cli
bound
and
cld
and
add
aas
loopne
sbb
pop
cwtl
scas
cmp
int3
mov
mov
ror
mov
outsb
jo
push
jns
pushf
rorl
sbb
add
rcrb
loopne
push
pop
pusha
adc
mov
mov
dec
fisubrl
jl
rorl
adc
jecxz
test
fiaddl
jge
xchg
cwtl
jno
add
jmp
out
or
stos
inc
daa
and
loopne
data16
add
and
pop
fidivl
movsb
adc
andb
sbb
push
or
fsubr
mov
inc
popf
xlat
pop
sahf
pusha
or
or
mov
adc
sbb
test
flds
or
sti
cwtl
push
testl
jno
push
mov
je
or
ret
lahf
stc
in
or
les
jno
cmp
add
or
cmp
sar
call
popa
adcl
add
aam
add
js
mov
cmp
sti
push
sub
xor
out
and
bound
push
outsb
setns
mov
sbb
pushf
rolb
push
jmp
or
mov
mov
into
adc
sbbl
dec
push
movsb
mov
sub
out
push
sti
or
mov
inc
push
scas
jmp
lret
xchg
rclb
das
push
loopne
es
jl
fwait
mov
aas
sbb
jmp
and
sbb
or
jmp
in
mov
pushf
scas
cld
mov
ret
and
pop
bound
push
jb
mov
dec
add
mov
dec
ja
adcl
arpl
lods
inc
adc
mov
idiv
mov
nop
or
dec
add
mov
stos
or
and
in
mov
xchg
xor
hlt
popf
mov
outsl
or
mov
inc
cvttps2pi
push
inc
mov
push
sub
xor
and
and
or
popf
and
roll
add
lcall
in
mov
xor
xor
mov
into
push
pop
pop
imul
sub
and
xchg
adc
and
pop
xchg
pop
add
and
test
xor
cmp
loope
cmp
and
mov
cltd
fcompl
dec
mov
call
cmpsb
or
add
sbb
and
or
jl
imul
cmpl
dec
mov
sub
stc
add
cmp
mov
sub
add
push
lock
fiaddl
enter
shrl
add
cwtl
cmp
add
push
pop
jecxz
adc
fwait
jmp
lret
xor
jae
mov
or
notl
mov
add
push
push
mov
loope
mov
jno
adc
movsb
lcall
push
mov
aad
repnz
fs
test
inc
xor
adc
pop
adc
pusha
inc
cmp
sbb
add
das
cs
out
mov
jno
fidivrl
pushf
int3
sbb
out
jl
scas
cmp
pop
cmp
test
sarb
imul
jg
add
jo
pusha
mov
push
out
inc
adc
inc
xor
mov
js
pop
xor
lock
outsl
fsubrs
add
lods
subb
std
and
sub
xor
jns
mov
js
xor
push
out
jnp
mov
sub
data16
jo
popa
pushf
cwtl
int3
lods
add
dec
mov
jmp
mov
add
add
stos
jbe
and
sbb
xlat
shlb
in
popf
clc
lds
bound
orb
inc
insl
add
dec
outsb
pop
cmpsb
and
arpl
push
dec
add
cld
mov
add
pop
pushf
enter
add
adc
lcall
dec
outsl
mov
lock
mov
nop
pop
in
sub
pusha
pop
scas
pop
inc
inc
sbb
cmp
cld
mov
push
sbbl
aas
mov
add
fldcw
lahf
or
sbb
insb
push
popa
les
mov
pop
inc
leave
out
pop
xor
nopl
xchg
or
iret
popa
pop
add
inc
and
lods
in
enter
or
std
adc
xor
push
faddl
cmp
mov
add
stc
xchg
push
in
test
test
clc
add
xchg
add
fmuls
or
out
roll
mov
inc
imul
or
nop
pop
push
push
xor
push
xor
adc
xchg
and
cmp
fbstp
xchg
addb
dec
inc
pop
jno
sbb
iret
rcll
mov
mov
add
aaa
test
dec
pusha
pop
cltd
cli
mov
push
lcall
arpl
aaa
push
push
cmpsb
lret
notl
add
sbb
lea
inc
mov
jb
sub
mov
jae
pop
or
mov
jns
bound
jbe
fnstcw
mov
mov
and
dec
les
add
add
sbb
pop
clc
lods
xor
sbb
add
jp
cld
jns
push
adc
ret
out
scas
add
imulb
loop
jmp
add
lock
jne
loope
jbe
jne
add
in
adc
out
mov
loope
test
pop
sahf
sbb
iret
lods
test
je
rolb
sti
stos
dec
xchg
repnz
xorb
add
gs
add
pop
in
sbb
adc
pop
lcall
out
out
in
outsb
lahf
add
scas
dec
sub
jg
inc
add
inc
cli
mov
int3
or
add
inc
int3
sbb
cmp
in
fsubrp
out
xor
sbbl
inc
cld
mov
addr16
push
inc
and
cmp
mov
jg
hlt
push
xchg
les
mov
int3
or
movsb
jge
sbb
movsl
jb
enter
cltd
std
push
gs
push
push
xor
or
mov
mov
jp
test
pop
add
call
out
data16
jne
add
icebp
call
push
xor
dec
xorb
sub
add
sub
pop
inc
jae
add
jg
mov
aas
dec
add
test
add
cs
jle
mov
in
add
loopne
xchg
jbe
sbb
sbb
adc
popa
mov
cmp
iret
int3
or
shlb
loopne
add
inc
cltd
and
pop
push
movsl
data16
rolb
in
test
int3
and
loope
pop
stc
dec
cld
rolb
mov
push
mov
rclb
and
lds
add
dec
adc
or
and
dec
add
mov
xchg
or
enter
dec
cltd
enter
cmpsl
popa
mov
inc
cld
and
fbld
push
insb
cmpsl
loope
test
mov
xor
flds
xlat
mov
cmp
jb
aaa
into
fs
andb
adc
sbb
out
xchg
pop
subl
rol
movsb
dec
xchg
mov
add
xchg
or
lret
inc
add
xchg
add
sub
add
mov
dec
les
add
jl
sarb
stos
scas
clc
outsl
cmp
fcomps
jo
push
jecxz
inc
and
mov
xor
xor
jne
mov
adc
test
movsl
push
sbb
pop
dec
mov
add
cmp
dec
adc
sub
dec
outsl
pusha
and
mov
jno
daa
sbb
sbb
out
orl
dec
adc
or
push
fbld
pusha
sarb
add
mov
add
test
lock
dec
cmp
adc
and
cwtl
lcall
cwtl
push
xchg
mov
dec
arpl
cltd
push
adc
subb
mov
repz
or
or
xor
rolb
arpl
add
loope
and
adcb
xchg
xchg
jp
add
les
es
aas
pusha
leave
mov
leave
test
sbb
sub
jmp
and
movsl
adc
daa
and
add
rclb
jl
add
mov
adc
jne
testb
xchg
in
scas
xchg
rorb
mov
mov
add
lea
sub
cs
cmp
roll
addl
fxch
mov
jae,pn
dec
push
and
sub
jo
aaa
mov
fsubs
test
xchg
js
jg
aas
cmp
adc
inc
jb
sbb
or
push
movsl
and
or
js
add
lahf
jnp
mov
jp
push
lock
popf
or
sbb
addb
sub
shlb
jl
or
jmp
pop
add
mov
insl
xor
adcl
fs
mov
movsl
push
add
adc
push
xor
pop
sbb
jb
push
push
add
lds
or
mov
cwtl
add
add
mov
std
insb
push
xor
dec
shll
out
call
sahf
push
jecxz
ljmp
xor
pop
or
jp
and
mull
add
dec
bound
loope
jo
out
pop
xchg
and
cli
add
out
pushf
pop
shll
sahf
sub
dec
add
adc
add
dec
nop
cmpsb
dec
hlt
lods
shlb
pop
in
push
push
cmp
cs
call
xchg
lock
bound
in
mov
xchg
and
jle
inc
dec
dec
or
popf
mov
lods
mov
add
xchg
daa
add
in
out
mov
xchg
add
mov
mov
ret
xchg
scas
xchg
sbb
insl
insb
jmp
out
xchg
or
add
xor
outsb
hlt
xchg
add
insl
xor
or
xor
add
leave
xchg
push
loopne
add
aas
mov
add
cld
sbb
sbb
mov
adc
call
addr16
adc
addb
scas
add
icebp
sbb
popa
loop
sub
add
fcmovne
push
adc
add
add
dec
es
in
cli
in
pop
ljmp
pop
stos
sub
adc
test
fcmovnb
add
fsubs
sub
ds
cmp
pop
jb
inc
pop
jno
fistpll
pop
pop
xor
xor
sub
add
stos
test
mov
out
dec
xchg
clc
and
mov
jo
aam
shll
pop
add
lock
dec
jecxz
xor
cltd
or
lds
push
and
jmp
shll
bound
push
dec
mov
aad
pop
jmp
or
cmc
adc
stc
add
pop
mulb
outsb
and
fwait
add
mov
incb
lock
sbb
stos
push
fnstenv
add
xchg
adc
test
pop
add
addr16
jns
add
jmp
icebp
ds
push
mov
jmp
and
ror
shrl
out
sbb
inc
dec
jmp
jmp
jg
imul
mov
aad
mov
push
sarb
dec
adc
andl
mov
add
inc
and
incb
or
xor
faddl
and
nop
xor
xor
cltd
adc
add
lock
icebp
inc
dec
cmpb
push
adc
dec
xchg
lcall
or
sbb
add
adc
adc
xor
cmpl
push
lods
and
and
sub
pusha
rcl
adc
pop
cwtl
sbb
mov
shll
aas
push
xor
ja
shl
xchg
popl
add
in
jmp
fildll
faddp
push
mov
add
mov
inc
incl
rclb
push
rolb
xor
and
and
daa
les
outsb
jo
sub
add
pop
mov
cmc
cld
push
dec
inc
stc
jno
cmp
loop
or
addr16
repz
push
adc
mov
sahf
or
out
ret
cmpsl
sub
repnz
addb
mov
jnp
cmpsb
arpl
iret
add
inc
pop
adc
adc
clc
adcb
sbb
cmp
aad
sbb
push
and
cmp
in
mov
push
sbb
mov
add
das
add
stc
inc
adc
lock
or
push
push
adc
inc
adc
cwtl
push
mov
test
pop
add
aad
inc
dec
xor
mov
outsb
lea
sarb
push
fsubrs
xchg
and
pop
xor
arpl
adc
sbb
push
pop
test
shl
jmp
repz
out
add
push
cmp
adc
shll
jne
data16
add
arpl
add
jb
adc
xor
add
inc
lock
sbb
dec
pop
add
mov
add
mov
sti
test
scas
rorl
xchg
mov
push
dec
add
cwtl
mov
push
aad
into
cs
inc
mov
scas
add
nop
xchg
pop
push
push
int
and
cwtl
jg
dec
mov
pushf
add
subl
or
orb
mov
jbe
xorl
in
add
and
in
call
xor
test
adc
push
stos
ret
call
sub
mov
xchg
nop
imul
and
sahf
or
add
mov
add
xor
inc
and
add
adc
or
push
mov
mov
xchg
rolb
pop
stos
adc
gs
sbb
inc
add
addr16
mov
push
push
xchg
rolb
inc
add
hlt
add
test
lahf
add
xor
inc
sbb
xor
inc
xchg
add
clc
xchg
leave
pop
jb
sbb
cmp
cmp
adc
push
sbb
roll
daa
sbb
adc
push
dec
adcb
loopne
add
jae
and
js
xchg
insl
add
rolb
sub
aaa
rclb
ljmp
lock
jmp
lock
dec
in
push
int3
pop
or
sub
xor
jl
dec
hlt
out
xchg
sbb
inc
xor
jle
add
push
or
mov
mov
push
les
js
xchg
test
mov
pusha
dec
imul
call
push
push
dec
and
add
pop
in
sbb
ds
out
sbb
mov
inc
inc
subps
addr16
xchg
add
aam
add
sbb
gs
pop
mov
push
in
loopne
adc
xchg
jp
in
pop
add
pop
sti
pushf
cltd
mov
inc
sub
push
dec
push
add
cwtl
clc
gs
mov
das
add
jp
push
inc
sahf
rcr
mov
sahf
add
xor
push
cmove
shll
push
mov
loop
out
add
pop
push
push
lret
cmp
pop
nop
adc
and
loopne
mov
dec
ljmp
add
pop
out
push
cmp
or
enter
add
stos
sti
ja
add
clc
jecxz
cmpsb
adc
inc
xor
or
xchg
xor
dec
jp
sbb
xchg
jae
ficoml
adc
or
call
sbb
sub
push
and
pop
sahf
and
jne
out
ret
ljmp
push
push
or
out
dec
rcl
inc
insl
adc
insb
cmc
xor
rcrl
push
add
sub
mov
cmp
inc
pop
push
mov
leave
jns
add
pop
xchg
das
lahf
inc
mov
add
je
inc
add
mov
inc
add
xchg
add
or
mov
dec
push
sbb
enter
int
cmp
add
xor
sbb
test
push
push
mov
dec
mov
shl
dec
ja
or
fistpl
stc
cmp
adc
cmp
fsubl
jno
add
out
xchg
lea
cmp
sbb
mov
add
xchg
outsl
jmp
sub
jb
push
in
shrl
jle
add
push
sub
add
xor
jns
push
sbb
das
ja
or
add
mov
add
mov
mov
add
arpl
mov
mov
rol
fwait
add
into
fisttpl
add
imul
test
fsts
mov
or
test
xchg
data16
add
cmp
popa
or
mov
fucom
aad
jg
add
in
inc
not
push
pop
push
or
pop
jns
bound
lock
std
push
test
add
xchg
or
loopne
add
mov
cmp
mov
or
sub
repnz
sub
or
dec
adc
dec
aad
mov
mov
stos
shlb
pop
adc
add
aas
cmpsb
mov
movsb
xor
add
sbb
sahf
jae
int3
lods
add
rcrb
add
or
addl
out
mov
and
fdiv
add
cmp
sub
lret
pop
rcl
jb
mov
iret
sbb
inc
mov
fidivrs
fldt
dec
add
test
stos
ljmp
add
call
push
mov
add
test
ret
jecxz
jbe
andb
cmp
addb
pop
add
pop
shl
imul
and
decb
add
mov
call
loopne
jb
pop
fcmovb
inc
add
sarb
or
add
xlat
lds
gs
sub
jne
or
xchg
mov
add
push
cli
and
and
add
fidivs
xchg
and
and
andb
int3
inc
scas
popf
sbb
pusha
in
xchg
aas
add
and
sti
mov
cmp
and
cmp
add
lock
fwait
xchg
adc
jae
add
pop
call
push
push
dec
insl
add
add
mov
test
sub
xor
mov
ret
sbbl
ret
jg
gs
add
adc
adc
add
rcll
es
std
int3
das
je
add
ret
sub
add
or
mov
jb
insb
cmp
mov
adc
movsl
add
add
je
sbb
inc
test
or
add
jae
add
jge
mov
lea
insb
dec
adc
rcll
cmp
jo
add
cmpsl
scas
cmp
jns
je
ss
negb
add
mov
movsb
xor
pop
or
imul
add
pop
inc
stc
pop
sbb
mov
outsb
pop
addl
adc
add
inc
pop
or
add
cli
pop
dec
call
pop
xchg
into
xchg
adc
push
pop
add
insb
loope
aas
neg
cmp
inc
add
sbbl
int3
push
adc
pop
add
rcrl
add
fstps
lret
les
push
dec
je
repnz
fdivrl
jl
dec
out
xor
ds
inc
shrl
rolb
cmovs
add
xchg
lea
dec
aam
sub
xor
push
enter
add
pop
icebp
mov
cmp
test
cmp
mov
add
fnsave
mov
in
andb
call
xlat
push
mov
cmc
iret
mov
enter
fcmovbe
mov
add
pushf
mov
pop
inc
adc
dec
mov
jl
add
fdivs
scas
pop
mov
inc
pop
sarb
jne
sub
mov
xor
dec
gs
pop
mov
jne
mov
rorb
orb
cmp
inc
and
add
sbb
jbe
popa
xchg
lret
inc
adc
repz
pushf
adc
or
add
or
aaa
push
cmp
and
imul
das
add
sub
aad
add
arpl
adc
lea
mov
or
mov
sti
push
rolb
inc
daa
loopne
add
add
arpl
dec
cmp
and
loopne
xchg
in
inc
mov
cmp
int3
cs
shll
mov
sbb
ret
add
mov
dec
cli
jle
or
shrl
ret
mov
pop
and
add
mov
in
dec
and
sbb
test
adc
aas
mov
inc
and
xchg
ljmp
and
or
push
or
rorl
aad
sbb
or
add
and
into
inc
cmp
scas
pop
imul
jl
je
repnz
or
sbb
stos
xchg
sub
call
add
data16
mov
ss
fldenv
pop
and
mov
cmp
cmpsb
addb
out
cwtl
add
ljmp
je
add
cmpsl
sbb
loopne
loope
imul
shl
es
mov
add
lods
mov
add
push
mov
shr
push
add
sub
pop
pop
inc
or
cmpsl
mov
add
repz
nop
pusha
add
loope
push
add
iret
add
pop
das
cmpb
add
cmp
cltd
mov
add
jns
fldl
out
clc
movhps
loop
jbe
bound
enter
in
xchg
aam
jae
adc
pop
cmpsb
jl
scas
cmpsl
lods
pop
out
add
jecxz
mov
dec
lret
add
adc
ficompl
dec
les
xorb
aas
gs
lods
mov
sbb
add
inc
ja
jle
psubusb
push
gs
shlb
xor
insl
mov
movsb
pusha
test
pusha
call
in
jmp
sti
iret
or
sbbl
out
add
clc
and
mov
mov
mov
int
ret
mov
inc
cmp
cmc
xchg
jb
fsubr
addr16
adc
mov
nop
xchg
out
xor
jmp
inc
filds
rorb
or
dec
in
add
testb
cltd
mov
add
and
dec
int3
inc
or
jns
sbb
push
scas
jmp
mov
ljmp
sbb
lock
outsl
add
dec
popa
insb
push
lret
inc
pop
inc
inc
and
inc
sub
sbb
lcall
or
mov
movsl
inc
repnz
inc
push
test
xchg
int
in
ljmp
sub
adc
push
js
mov
pushf
addb
mov
dec
subb
cmpb
mull
xchg
dec
sbb
and
xchg
pop
dec
add
mov
je
pop
popa
pop
mov
add
ret
test
sub
push
cwtl
lret
roll
mov
fdivp
mov
jb
add
inc
cmpsb
jns
jno
enter
sub
jo
adc
xchg
jge
dec
add
outsl
mov
mov
sti
xor
jecxz
cmp
fsubs
aaa
add
idivl
cmpxchg
es
jmp
or
dec
dec
int3
xchg
popl
fstps
push
mov
add
push
pusha
push
enter
lahf
add
sub
insl
inc
add
jp
dec
or
out
mov
sbb
das
add
into
adc
and
pop
add
fistpl
sti
bound
dec
mov
mov
jecxz,pt
test
mov
cmp
lahf
cld
dec
or
ret
mov
sub
outsl
inc
push
jbe
xchg
dec
sub
fcomps
mov
pop
xchg
dec
add
mov
rclb
stc
clc
dec
nop
shrb
xchg
add
sbb
sub
fadd
jne
ja
lcall
faddl
sub
roll
sub
pop
mov
pop
and
insl
jnp
add
pop
dec
sbb
xchg
outsb
add
xor
aam
and
dec
call
faddl
xor
dec
leave
push
inc
jo
push
popa
cmpsb
roll
add
filds
clc
pop
jno
and
add
xor
fwait
sub
sbbb
xor
mov
sub
mov
mov
or
pop
shlb
add
repnz
in
je
xchg
add
stos
rcrb
fidivrs
inc
out
insb
ret
add
aam
gs
in
loope
leave
idivl
sbb
xor
push
bound
and
and
sub
adc
pop
add
or
add
sahf
and
notb
inc
pop
dec
ret
ret
cmp
push
cmc
lcall
xor
das
and
or
or
add
inc
pop
add
cmc
fiaddl
inc
add
div
mov
add
ljmp
cmp
sub
aad
jae
jnp
sahf
or
push
pusha
adc
add
push
sbb
ret
inc
pop
int
push
sahf
roll
insl
inc
cwtl
xor
sub
filds
dec
inc
pop
push
enter
enter
imul
jbe
stc
inc
xor
dec
test
pop
or
cmp
clc
mov
pushf
test
scas
jb
addb
push
test
lret
cmp
or
adc
leave
xchg
gs
push
out
xor
add
popa
add
fiaddl
xor
cmp
into
xchg
pop
mov
push
in
add
inc
testb
or
enter
dec
adc
mov
pop
jo
mov
sbb
test
leave
stc
ja
cli
inc
pop
andb
mov
ret
lods
add
xchg
fsubr
aaa
dec
dec
repnz
ror
jb
imul
pop
pop
rorl
call
lcall
mov
push
lret
or
push
xor
add
add
mov
xor
adc
stc
push
in
lock
cmp
int
pop
out
fwait
mov
loopne
cmp
ret
aaa
ds
and
lods
sub
cwtl
sbb
stos
push
mov
int3
lret
add
xor
pushf
jbe
scas
lock
loop
dec
xchg
push
cwtl
push
mov
mov
loopne
mov
jl
clc
shl
aaa
mov
add
add
mov
test
inc
sarb
jo
ljmp
les
mov
mov
xor
inc
add
outsb
sbbb
mov
xlat
inc
dec
ljmp
cmp
or
push
addb
popl
push
and
mov
push
test
cmp
popf
sbb
js
dec
sbb
sbb
mov
inc
sbb
add
push
sbb
testl
cmp
lret
cwtl
roll
shlb
das
not
loopne
iret
mov
sarb
shlb
push
xchg
adcb
popf
jns
jle
nop
std
or
jo
xchg
and
pop
pop
sbb
pop
imul
dec
add
outsl
sub
mov
ss
xchg
and
push
sarl
aaa
add
inc
cmp
cmp
fisubrl
orl
mov
add
jmp
aam
test
jg
in
xorl
lahf
pop
stos
pusha
imul
pushf
fwait
jns
bound
js
xchg
andl
add
icebp
fstps
repnz
jno
stc
xchg
adc
adc
cmpsb
fisttps
push
nop
pop
mov
sti
leave
and
cs
add
in
push
lahf
jmp
sub
es
insl
pop
cld
mov
push
scas
mov
xchg
pop
pop
xchg
jecxz
adc
mov
push
notl
push
fmull
lods
adc
pushf
inc
cmovs
pusha
pop
push
test
inc
js
and
xchg
dec
inc
lds
pop
data16
adc
aas
int3
popl
stos
fistpll
push
adc
push
adc
add
jo
into
out
pushf
pop
out
call
add
adc
repz
xor
les
add
test
and
sub
nop
cld
pop
push
pop
push
sbb
repz
sbb
pop
insb
adc
or
jle
loopne
adcl
or
mov
jg
cmp
ljmp
popa
repz
rclb
in
mov
add
shlb
ret
sub
fwait
adc
add
rolb
sarb
stc
adc
pop
sbb
pop
repnz
js
jge
mov
pop
je
and
outsb
add
push
pop
sbb
jge
insb
lods
out
dec
add
dec
mov
sub
enter
adc
push
pop
push
mov
mov
daa
push
psubsb
lds
add
pop
jae
adc
push
add
push
sbb
cs
add
lahf
jbe
aad
and
dec
or
cmp
ret
cmp
xchg
lcall
aam
hlt
add
shl
sti
add
hlt
and
push
add
repnz
int3
pop
aaa
adc
pushf
adc
subl
icebp
mov
add
pop
les
movsb
lret
imul
push
cmp
movaps
or
cmp
jne
add
push
rorb
inc
push
add
mov
jo
adc
data16
mov
sbb
sbb
out
icebp
xor
push
sbb
cmp
rcrb
cmpsb
rolb
jne
jg
add
out
mov
or
xorb
push
adc
add
xchg
xchg
mov
add
cmp
pop
mov
jmp
popa
push
jo
cld
mov
cmp
sub
popl
inc
xchg
lods
xchg
mov
pushf
jno
inc
aas
lds
add
mov
mov
rorl
enter
add
ficoms
test
add
dec
add
jo
inc
jne
popf
sub
pop
imul
std
xor
jbe
out
xor
lock
cmp
mov
dec
into
call
lock
vmwrite
adcb
sti
loopne
add
ja
loopne
out
push
leave
fcomp
mov
cs
mov
loop
or
pop
pusha
push
adc
inc
rolb
in
add
sub
iret
sub
test
pop
aam
icebp
fcmovnb
enter
xchg
xor
orb
sbb
push
ret
js
inc
add
adc
in
pop
in
testl
push
movsb
xchg
loope
xchg
ret
xor
or
rorl
jmp
test
mov
or
in
test
hlt
fistpll
bound
loopne
adc
mov
sub
xchg
sub
dec
jae
testb
sub
mov
fwait
and
xchg
cmp
dec
into
stc
add
cwtl
sbb
cmpsl
leave
pop
push
jg
or
add
js
adc
mov
adc
stos
mov
mov
mov
adc
dec
and
sbb
xchg
mov
pop
data16
xor
sbb
or
add
insl
add
dec
add
xchg
jne
loop
xor
or
fnsave
push
lret
and
sub
pop
loopne
pop
fwait
sub
add
inc
or
aad
xor
test
cmp
mov
int
add
fmuls
lods
mov
add
push
shlb
lock
dec
aam
fwait
popf
xchg
xlat
in
out
fdivr
cmp
adc
mov
add
xchg
or
add
dec
cltd
jp
mov
clc
add
add
xchg
jbe
xchg
movb
mov
sbb
mov
cmp
add
sbb
add
rcr
repnz
repz
inc
lret
stc
cmp
inc
out
pop
mov
xchg
jnp
sarb
fwait
int
push
dec
not
rolb
pop
movsl
pop
arpl
mov
jp
cltd
ja
mov
cmp
sub
add
and
leave
sbb
inc
lds
inc
inc
dec
aaa
add
pop
or
jae
sbb
popa
mov
movl
cmp
or
shll
pop
ljmp
addb
enter
add
fwait
mov
add
popf
fneni(8087
sbbb
fstpt
out
xchg
aam
inc
dec
movsb
sub
les
xor
sarl
push
aam
pop
inc
enter
ds
add
sti
dec
push
fcmovb
xchg
or
fwait
jle
jo
xor
lea
mov
xchg
add
xor
dec
mov
jb
sub
imul
push
pop
jo
lret
pop
out
cs
or
inc
dec
mov
lock
test
popf
cmp
je
lea
jmp
cwtl
and
push
test
fldl
jbe
pop
add
xchg
or
fsub
cmp
add
iret
dec
pop
call
mov
hlt
jle
jnp
cmpsb
lahf
add
cmp
jb
sbb
out
aas
mov
add
inc
xchg
sbb
xchg
sbb
into
in
ds
adc
xor
aam
test
dec
add
je
enter
mov
shll
ret
cmp
mov
sti
jns
jl
mov
sbb
mov
add
dec
in
lds
mov
lods
rclb
outsl
push
sub
and
movsb
sub
outsb
jge
loop
xor
hlt
pop
jle
addb
pop
xchg
xchg
jno
add
call
cltd
in
in
cmc
sbb
add
addb
mov
test
add
mulb
cmp
add
int3
ret
dec
pusha
inc
pop
xor
add
push
jp
vmread
xchg
mov
lret
cmpsl
add
or
iret
cmp
or
movb
jno
jecxz
jg
push
cmp
adc
fincstp
jge
rcl
bnd
cmp
filds
cmc
iret
adc
push
or
in
pop
xchg
push
out
andb
loope
or
mov
mov
loopne
jge
jp
or
dec
jl
enter
mov
inc
movsb
xor
sub
fmulp
add
cmp
xchg
loopne
mov
push
push
or
or
adc
add
movsl
bound
in
and
and
mov
push
jmp
test
jg
pop
icebp
nop
push
je
sbb
stos
ret
cwtl
lret
imul
dec
push
jno
pusha
cmp
jp
cwtl
add
inc
mov
adc
add
scas
mov
mov
add
push
stos
pop
xchg
imul
cmp
add
mov
inc
dec
mov
sub
sahf
add
ja
push
addl
pop
sbb
dec
cmpsb
and
loope
loopne
inc
add
xchg
sarl
movsl
fst
add
cs
pop
or
push
sub
jae
mov
jmp
xor
dec
inc
or
add
lods
shll
adc
xorl
or
faddl
xchg
jl
and
jno
shrl
ljmp
sbb
lahf
enter
sar
cmp
fcmovb
xor
cltd
ret
jb
adc
xchg
xlat
add
mov
rcl
in
cmp
and
adc
lock
loop
add
mov
mov
mov
jle
add
inc
xchg
pop
adc
mov
xchg
jg
add
pop
push
bound
ds
add
clc
or
or
xor
pop
inc
push
sub
test
cli
and
fldl
frndint
pop
cli
xor
or
push
sarb
ds
adcb
xor
pop
shrl
sbb
repz
dec
aad
add
fisttps
add
xlat
mov
sbb
xchg
jecxz
shrb
out
jmp
dec
out
lods
push
jb
pop
add
jns
nop
inc
cmp
sti
add
sbb
in
test
cmp
pop
lock
orl
test
push
or
or
pop
in
dec
js
inc
loope
jb
faddl
ss
aam
ret
add
pusha
cli
push
shrb
out
sub
mov
into
xchg
push
rolb
aas
rcll
fstpt
xchg
add
ficoml
shlb
or
sbb
pop
mov
test
movsb
inc
fcoms
fucom
mov
fistpll
jnp
incb
xchg
add
out
std
out
cmpsb
add
fldenv
push
stos
xor
mov
pop
jbe
jp
add
addr16
inc
adc
inc
add
jae
add
pop
cmp
jbe
nop
addb
inc
popa
xlat
test
or
gs
cmpsl
pop
add
sub
xor
dec
add
mov
add
out
xchg
add
les
imul
jno
fucomi
andb
jge
pop
ret
and
push
sub
mov
push
mov
push
lret
adc
xorl
push
mov
sarb
adc
xor
hlt
push
and
sbb
push
jge
std
dec
cmp
xor
scas
cld
iret
rorb
add
jnp
mov
lock
loope
add
lcall
push
dec
aaa
push
lock
nop
add
fsubrp
pop
iret
fnstsw
pop
jg
inc
mov
pop
cmp
imul
fisubs
xchg
clc
mov
inc
jne
fstpl
out
xorb
dec
jmp
je
es
push
aas
mov
push
test
xor
xor
mov
jp
push
mov
cmpsb
dec
mov
jmp
jno
fimull
cltd
and
jo
xchg
add
imul
insb
jo
fldl
mov
add
frstor
add
xor
jae
cmpb
les
adc
mov
ja
nop
loope
test
mov
jb
add
jle
mov
inc
mov
es
je
data16
pop
xchg
cmp
mul
pusha
fidivrs
jg
negl
int
sbb
mov
loope
inc
leave
push
cli
sbb
xchg
scas
pop
pop
push
das
push
inc
mov
xchg
jbe
mov
cs
mov
insb
lahf
xchg
rcr
pop
into
les
mov
jmp
pop
hlt
js
lods
push
rcll
dec
pop
add
loope
pop
addb
adc
or
lods
mov
xchg
lock
jb
lahf
add
sub
orb
icebp
adc
adc
loopne
incb
es
sbb
andl
scas
jmp
fiaddl
adc
pushf
test
add
cmpsb
mov
adc
mov
xor
sbb
mov
sbb
inc
xchg
outsl
orb
popf
dec
aas
sbbl
hlt
pop
xor
mov
lcall
xchg
add
jl
sbb
mov
push
fcomps
mov
lock
pop
add
popa
popf
mov
adc
push
xchg
leave
adc
adc
int
bound
mov
fs
shll
sahf
sbb
mov
add
inc
ret
add
jne
add
sub
push
add
insb
xor
add
orl
add
adc
add
or
test
or
sub
xchg
sub
ret
fdivr
imul
and
push
cmpsl
mov
mov
aam
add
loop
subb
mov
xchg
xor
sbb
cli
rcrl
or
and
or
add
and
push
dec
inc
add
pop
or
mov
push
push
stos
fisubl
sbb
adc
inc
cs
ss
sbbb
pop
add
adc
les
mov
and
mov
and
mov
push
add
rorl
adcl
push
out
cmc
loopne
rcll
lahf
mov
add
pop
and
dec
jae
addr16
adc
jbe
dec
sbb
pop
mov
add
std
pop
adc
fdiv
add
loopne
or
dec
test
sbb
push
les
pop
test
mov
xchg
and
call
push
lret
daa
sub
repnz
icebp
leave
push
sbb
outsl
aas
cmp
add
sub
add
add
lcall
add
je
inc
cmp
lret
inc
dec
sbb
push
or
cmp
xor
outsb
hlt
xor
or
add
sarb
cmp
jno
xor
mull
test
and
and
adc
sub
xor
rorb
jbe
fsubs
inc
mov
repnz
add
leave
push
mov
into
mov
push
nop
fisttpl
scas
rorb
xchg
aaa
jl
outsl
enter
and
and
push
insl
in
add
push
movsw
sbb
dec
push
push
addb
inc
imul
cmp
sub
push
jg
mov
cmp
dec
mov
sub
sbb
pop
mov
ret
movsl
sub
xchg
inc
jg
dec
loop
xorb
rcr
pusha
cs
jo
je
mov
push
fmull
addl
jl
add
and
adc
push
pusha
outsl
cmp
sub
dec
lcall
inc
dec
adc
je
int
xor
andb
cmp
add
xchg
es
pop
divb
or
or
jle
and
xor
xchg
pusha
ljmp
mov
jp
push
inc
out
mov
cmp
popf
adc
pushf
addl
jno
test
inc
xchg
dec
push
xchg
dec
jmp
or
add
sbb
nop
lods
add
pop
in
add
rol
in
jno
pop
and
lock
dec
sbb
sbb
popl
add
subl
jae
mov
mov
inc
add
addr16
pusha
subb
ret
int
lock
push
add
arpl
mov
mov
repnz
je
mov
add
adcb
push
xchg
lea
cli
int
and
and
incl
inc
adc
int
pop
push
rol
cmc
shrb
cli
push
xor
mov
pusha
in
iret
or
add
fdecstp
sarb
jp
fistpll
pop
xchg
test
sub
sbb
aaa
pusha
mov
pusha
mov
xchg
add
inc
movsb
add
rcll
out
daa
hlt
pop
iret
sahf
push
add
or
in
mov
and
xchg
addl
sarb
testb
cld
inc
sarl
pop
inc
cs
lods
clc
int3
cwtl
movl
call
and
sbb
push
push
mull
push
sbb
test
loopne
fucomi
mov
dec
repz
jl
add
out
pop
sti
push
sbb
cmp
cwtl
add
ja
cmpsb
lods
dec
sti
mov
jmp
je
fsts
fwait
test
add
sti
sbb
repz
add
xchg
mov
xchg
add
sub
stc
and
push
mov
adc
add
pop
jae
jge
add
jo
xchg
fcoml
jo
push
sbb
in
inc
inc
and
icebp
call
movsl
shrb
lock
cmp
add
int
xor
xor
imul
adcb
add
je
jno
cmpsl
mov
inc
pop
jb
dec
or
jns
push
and
xor
cmpsb
outsb
jl
pmaxub
mov
ret
mov
push
xchg
adc
aad
inc
pusha
pushf
addl
cmpsl
add
pop
mov
cwtl
lret
xchg
int3
add
insl
iret
repz
cltd
das
cmp
fucompp
mov
cmp
add
pop
cmp
sub
andb
lods
or
add
lock
sbbb
push
xor
mov
add
nop
pop
js
xchg
inc
call
addr16
push
xor
movsl
pop
xchg
push
mov
adc
add
gs
jbe
ds
fwait
push
stos
mov
sub
pop
sti
and
sbb
mov
push
xchg
movsb
add
inc
pushf
add
jo
leave
arpl
testl
mov
insl
add
rorl
add
ja
or
pusha
das
hlt
push
add
xchg
pushf
out
lods
and
mov
addr16
or
dec
pop
mov
add
pop
mov
sbb
rsm
aas
push
shlb
sub
nop
rclb
addb
scas
add
out
mov
pop
addr16
fsubrl
push
std
leave
and
js
hlt
add
cmpl
fdivrl
adc
ret
cltd
imul
sub
jnp
cli
insb
mov
aaa
and
sbb
add
or
xchg
or
adc
insb
xor
pusha
add
out
adc
jne
sti
cmp
repz
jno
mov
out
push
loop
imul
sbb
imul
cs
cld
add
shlb
jo
cmp
sti
aas
and
push
xor
inc
push
fidivl
ds
mov
xchg
int
add
mov
dec
stos
call
cmp
insl
jnp
ret
cmp
sbb
cmpsb
inc
cmp
orl
push
in
ljmp
mulb
push
push
imul
dec
dec
je
iret
add
insb
push
add
mov
fdivr
pop
mov
cs
mov
loopne
sbb
adc
jnp
or
fldl
sbb
xchg
xchg
xchg
and
jne
in
push
mov
inc
jl
divb
cmp
jp
cli
inc
shr
jne
ja
inc
xlat
sub
mov
lahf
lock
les
out
xor
shrb
inc
pop
add
add
push
pushf
adc
test
or
pop
dec
and
add
mov
xor
adc
aam
mov
or
pop
jp
dec
push
pop
mov
inc
jae
add
ret
dec
pop
lcall
enter
rcll
out
call
mov
and
mov
addb
sub
add
mov
loopne
mov
jle
jnp
popf
pop
outsl
inc
add
les
jge
jp
clc
xchg
push
push
daa
pusha
add
into
add
popf
loop
sub
add
push
mov
add
or
adc
mov
xor
repz
sbb
inc
aas
add
lcall
push
mov
add
lock
xor
or
cmp
test
inc
pop
je
cmpb
xchg
jno
mov
mov
inc
out
popa
pusha
dec
cmp
outsl
in
loope
add
adc
push
rcrb
sar
sub
in
cmc
in
and
push
adc
test
out
pop
inc
lods
pop
add
mov
stos
ja
insl
push
fwait
push
dec
ficoms
xlat
mulb
lods
dec
idivl
inc
lds
lods
sub
jo
jae
or
mov
pushf
movsb
addb
add
xchg
jo
mov
mov
mov
pop
push
dec
jns
add
in
push
pop
nop
incb
xor
les
mov
dec
mov
neg
add
jne
iret
repnz
mov
pushf
pop
push
push
enter
hlt
push
aas
mov
nop
xchg
pushf
xchg
cmp
add
dec
repz
mov
flds
push
mov
jge
mov
ret
lods
xor
push
rcll
inc
mov
in
pusha
jge
or
stos
rolb
filds
adc
lret
leave
dec
mov
dec
icebp
fldenv
enter
mov
adc
add
add
out
jns
in
mov
pop
test
cmp
inc
popa
sbb
mov
mov
mov
push
mov
xchg
cmpb
lahf
xchg
xor
push
ds
jmp
sahf
cmp
mov
outsl
dec
in
or
pop
or
add
pop
jg
pusha
mov
jnp
and
divb
inc
jb
aad
add
adc
and
push
jge
hlt
repz
mov
and
or
pop
mov
repnz
adc
xchg
in
add
hlt
mov
mov
inc
int3
inc
or
cmpl
xor
xor
jl
imul
ja
popa
fcomps
incl
or
add
dec
jle
test
ss
or
pop
movsb
add
nop
std
loopne
inc
into
jns
mov
outsl
or
loop
fnstcw
xor
pop
cmp
insl
aas
sub
sbb
push
mov
inc
add
dec
into
mov
cmp
jecxz
movsl
int3
pop
sbb
mov
dec
add
and
mov
push
or
add
gs
add
add
sahf
lock
add
mov
shl
leave
shll
jbe
jp
dec
pop
add
fidivrl
pop
mov
xchg
test
inc
sbb
lahf
jecxz
and
pop
or
mov
out
pusha
mov
xor
pop
xchg
mov
or
data16
mov
inc
outsl
mov
test
call
xor
stos
cltd
dec
mov
pop
cmpsl
inc
incb
push
mov
mov
xor
mov
adc
or
inc
test
pop
out
jb,pn
pop
nop
mov
mov
add
lock
out
push
bound
sbb
frstor
nop
data16
imul
xchg
fdivl
ja
iret
loopne
dec
add
and
insl
inc
pavgw
pop
mov
inc
dec
shlb
add
push
cs
xor
stc
pop
seta
add
xchg
in
cwtl
mov
dec
inc
add
aam
inc
add
std
out
add
movl
dec
and
mov
leave
mov
in
ja
push
push
xchg
pslld
push
cmc
loop
outsb
les
mov
rolb
add
xchg
jnp
and
and
addb
push
gs
fs
xchg
addl
cmp
mov
jb
cmpb
cmpsl
mov
mov
add
mov
xor
cld
adc
into
mov
sub
sahf
and
pop
cmp
cmp
sar
outsl
pop
add
pop
or
stos
mov
test
xchg
sbbb
fbstp
cmp
add
push
mov
fldcw
jle
out
jle
iret
adc
add
leave
call
mov
fucom
and
or
pop
cmp
mov
ds
xlat
ret
jae
add
and
cmp
mov
movsl
adc
or
paddsw
add
xor
or
and
sbb
add
sub
mov
xor
inc
push
pop
add
mov
add
sub
testl
andb
add
xchg
enter
ja
aas
inc
hlt
push
xchg
inc
xor
addr16
outsb
ja
pop
jbe
cmp
jp
sbb
adc
xchg
pop
pop
popf
push
push
add
stos
lcall
rorb
jmp
sub
jnp
xor
lcall
pop
jno
pop
inc
test
test
mov
ds
add
daa
push
icebp
jnp
test
add
std
and
jo
scas
pop
adc
in
lcall
sub
inc
loope
in
test
sbb
mov
insb
adc
inc
push
fisubrl
ja
in
mov
les
push
sbb
addr16
add
push
or
mov
and
iret
add
lea
scas
add
stos
sbb
sbb
cmpsl
jno
out
pop
iret
mov
adc
shll
sub
adc
xchg
leave
add
loope
cmp
mov
add
xchg
inc
sahf
int
loopne
push
and
roll
xchg
cmpsb
fadds
add
scas
call
add
jmp
add
pmullw
pop
movsb
int3
mov
pusha
loopne
sbb
pop
push
adc
jge
add
cmc
pop
mov
call
add
negb
pop
xor
cmp
push
push
mov
add
mov
int3
sub
xor
or
or
dec
add
frstor
lods
or
and
cwtl
in
ret
ss
mov
sbb
cmp
xor
inc
mov
lods
in
cmc
movb
mov
nop
sbb
pushf
incl
out
bound
sub
outsl
push
loopne
fsubl
fwait
pop
ficoml
mulb
cs
jo
and
pushf
fnstsw
testb
aam
ds
inc
stc
push
rolb
cmp
arpl
aas
add
out
xor
test
bound
aam
lahf
and
push
mov
mov
or
xlat
pop
popa
add
fcomi
cmp
addl
mov
mov
or
jno
test
ss
pusha
addl
add
ss
outsl
push
pop
or
fstps
pop
adc
adc
aaa
jg
rcrb
push
cli
add
int3
dec
in
movsb
popf
lcall
lods
add
imul
pop
inc
andb
mov
test
adc
movsl
cmp
or
add
sbb
addb
xchg
in
iret
jb
hlt
cmp
pushf
and
inc
or
scas
lret
sub
in
add
cmp
icebp
cmp
pinsrw
mov
add
mov
adc
jg
inc
jle
add
add
shrd
pop
ror
cmp
mov
add
dec
pushf
jno
add
mov
jle
pusha
sub
add
rcl
pop
jno
test
jecxz
arpl
aas
loop
add
inc
icebp
cmpsl
lods
aad
inc
add
pop
scas
out
loopne
sub
icebp
cmpb
js
aam
lea
mov
call
testb
dec
jne
xor
dec
inc
subl
xchg
jb
sbb
jecxz
and
add
gs
rorl
pusha
jbe,pn
sub
das
ret
xor
adc
pop
cmc
cli
test
add
mov
mov
push
jnp
sar
or
add
imulb
jp
mov
or
pop
sbb
rolb
mov
scas
sbb
cmp
jge
arpl
pop
and
loopne
add
fnstenv
fdivrs
add
cmp
lahf
jns
repz
out
add
xchg
push
test
xchg
mov
shlb
lds
setl
pop
add
popf
sbb
pop
call
sbb
out
xchg
add
dec
and
cltd
rorb
lret
adc
test
sbb
fdivrs
dec
outsl
jnp
add
bound
mov
jg
fisubl
inc
mov
xorb
test
or
add
mov
add
cmp
xchg
popf
cmpb
jge
ret
rep
aad
pushf
imul
popa
mov
pop
push
out
or
cmpxchg
dec
test
cmp
sub
sub
sar
xchg
add
fucomip
test
pop
pop
adc
jmp
push
in
loope
rcll
int3
or
and
les
or
add
es
mov
mov
xor
out
or
jno
inc
jg
add
pause
test
sbb
pop
fldl
imul
jne
sbb
cld
sti
mov
aaa
add
scas
push
push
pushf
gs
add
cld
repz
and
push
loope
or
mov
pop
adc
cmp
daa
add
sub
call
push
inc
xchg
mov
add
inc
sar
sub
sub
push
nop
mov
es
dec
sbb
mov
dec
mov
lea
push
push
adc
dec
mov
or
cmp
in
lds
addl
jae
add
test
jno
lret
sbb
rcll
mov
in
or
and
out
pop
mov
cvtdq2ps
pushf
fsubp
fsts
sbb
cmp
xor
lcall
add
aaa
out
sbbb
xlat
out
add
dec
daa
outsb
push
dec
movl
scas
fcoms
mov
cmpsl
cmp
push
jo
and
sbb
add
xchg
jl
rolb
pop
add
jo
push
xlat
test
and
sbb
cmp
sub
sub
and
into
mov
adc
dec
add
imul
cli
push
das
xchg
add
loopne
ljmp
xor
int3
pop
xor
stos
dec
out
clc
and
add
pop
push
inc
inc
add
les
incb
jge
int
fiaddl
add
jecxz
adc
aam
nop
loopne
sarl
jnp
xchg
inc
add
popf
mov
add
cmp
push
addb
mov
mov
mov
xor
sbb
lea
mov
cmpsl
push
and
iret
loopne
mov
jno
loopne
pop
add
pushf
or
rcll
outsb
sub
xchg
call
cmp
dec
or
jo
jbe
jmp
inc
cli
push
gs
pop
in
fists
sarl
push
idivb
mov
inc
and
aam
cmp
and
inc
xchg
jle
fwait
jne
test
pop
mov
add
adc
addr16
fiadds
int
imul
sbb
aad
jmp
popf
xchg
mov
daa
jle
or
mov
pop
nop
mov
lds
inc
subb
aam
sbb
sbb
mov
add
js
sbb
sub
pop
mov
add
les
incb
test
mov
push
pop
fldcw
fisttpll
shl
push
call
js
aaa
add
mov
add
fwait
call
mov
in
jecxz
inc
cmp
add
adc
xchg
mov
imul
dec
xchg
push
fstps
cmp
sub
mov
std
je
pop
jp
jne
push
pop
in
cmpsl
xchg
in
bound
inc
and
jo
pop
add
jne
movsb
add
dec
cmpsl
push
mov
and
pop
pushl
sub
pop
in
jmp
mov
push
jle
mov
xchg
xor
loopne
dec
add
ret
iret
shrb
or
aaa
jle
mov
inc
loop
insl
xchg
shl
inc
addl
sbb
inc
add
out
mov
or
jmp
ja
test
mov
push
add
adc
cmp
shlb
sub
push
outsb
ds
pop
lods
add
sub
mov
push
sbb
xlat
lret
hlt
add
sarl
sti
lret
pusha
mov
cwtl
add
int3
add
aad
sbb
and
gs
xor
jge
xchg
add
into
scas
and
jne
add
inc
or
out
fwait
add
movb
inc
les
or
popf
or
clc
add
inc
pop
cli
nop
icebp
add
mov
and
loope
fwait
pushf
stos
out
mov
and
arpl
add
jl
or
add
pop
jle
push
adc
aaa
cmp
cmp
in
scas
dec
sbb
rol
pop
adc
mov
add
adc
xor
jnp
add
mov
push
or
repz
shlb
loop
jno
add
xchg
mov
jb
pop
dec
add
mov
mov
or
push
adc
loopne
imul
filds
xor
int3
mov
add
testb
mov
or
adc
sub
mov
push
in
lods
imul
dec
je
shl
jle
dec
cmpl
pop
sbb
addr16
test
mov
add
scas
popa
push
les
int3
jo
hlt
mov
cld
xchg
push
cmp
out
lods
movsl
in
movl
mov
xchg
dec
sub
andl
add
lret
adcb
ficoms
sub
cld
xor
push
add
or
xor
jmp
cmp
sbb
push
and
popa
ret
push
push
pop
shlb
cmp
stc
xchg
shlb
xchg
pop
push
xor
test
inc
inc
adc
push
sbb
repnz
lsl
inc
push
dec
jge
sbb
sarb
adc
xchg
jl
jle
hlt
movsl
pop
sbb
std
imul
xor
incl
and
push
fwait
xor
lret
aad
aam
pop
insb
mov
add
sbbl
pop
dec
mov
stos
les
lods
adcb
pop
push
bound
dec
push
cli
inc
mov
add
aam
xchg
dec
and
imul
mov
add
add
xor
in
test
inc
hlt
jmp
and
add
add
les
idivl
pop
or
dec
aam
shll
or
popf
pop
pop
outsb
out
inc
inc
pop
out
sbbb
push
pop
fsts
or
cmc
test
lds
rorb
mov
clc
dec
add
out
aas
sub
negl
fadd
rdpmc
cmp
push
bound
out
pop
add
outsl
xor
xor
js
add
dec
jp
or
add
mov
jg
mov
shrb
insl
pop
xor
inc
cmp
mov
sti
and
sbb
dec
add
fninit
mov
push
mov
xchg
aas
clc
pshufw
fcmovb
ret
jl
push
adc
mov
add
out
cs
andb
mov
scas
cwtl
addl
lret
sbb
addr16
std
mov
inc
add
rcll
jl
cwtl
mov
mov
int
in
jne
std
adc
jge
add
test
add
cmp
push
cmpb
gs
and
subb
leave
xchg
data16
iret
add
mov
jbe
add
or
jo
cmp
xor
and
mov
sbb
nop
adc
and
call
aam
ja
sbb
inc
scas
mov
xchg
add
xchg
cmpb
jbe
inc
ret
and
and
mov
pop
sub
rolb
pop
loop,pn
jns
add
gs
cmp
xchg
or
jno
sub
fs
pop
arpl
cmc
dec
addb
sti
inc
lds
inc
mov
mov
or
cmp
lock
pop
xor
stc
adc
push
jbe
add
nop
insl
jmp
and
int3
cmp
push
mov
dec
into
inc
pop
dec
add
jle
sbb
movsb
insb
cmp
pop
mov
rorb
mov
es
popa
mov
add
add
add
push
pop
loope
lock
iret
or
stos
in
xchg
out
lods
loopne
add
dec
aad
push
add
sub
push
ja
aam
xchg
cmp
sahf
dec
iret
push
pop
xchg
addl
lods
cwtl
rcl
mov
push
data16
sub
xor
and
mov
in
inc
mov
in
inc
in
dec
pop
mov
hlt
test
or
cs
popa
fldlg2
jmp
fdiv
pop
adc
dec
push
adc
mov
push
add
add
dec
add
subps
call
jmp
repz
mov
hlt
roll
lods
ret
or
test
jge
shll
add
aad
adc
hlt
push
mov
shrl
loopne
mov
jno
in
call
popf
jg
rcr
add
fsubrl
cmp
adc
clc
inc
and
lods
inc
fs
imul
mov
str
and
jo
sbb
dec
rolb
xchg
and
mov
int3
mov
shrl
add
inc
sbb
or
dec
sbb
pop
roll
inc
test
dec
lock
push
add
mov
inc
add
cltd
add
jle
lods
cmpb
mov
adc
into
in
add
sbb
sahf
mov
push
pop
add
cmp
adc
pop
add
xor
add
cmpl
dec
xlat
inc
rcl
dec
xchg
cmp
enter
xor
outsb
aad
add
and
jle
adc
dec
sbbb
mov
xor
shll
lea
adc
sbb
sti
outsl
cs
pop
add
dec
leave
inc
dec
insb
mov
or
test
test
adc
lds
jo
xchg
setno
push
test
int3
mov
add
das
pop
enterw
sbb
xchg
pop
adc
xchg
cmove
nop
add
xchg
popf
sub
dec
popa
nop
xor
cwtl
sub
xor
and
xor
dec
imul
loop
sub
cmp
push
mov
out
dec
fdivs
and
es
or
push
add
jl
xchg
out
adc
mov
mov
mov
pushf
and
fiadds
test
out
sahf
leave
fs
faddl
pop
and
mov
call
inc
test
lret
dec
push
pop
jb
aam
push
mov
and
ja
sti
cmpsb
jnp
sbb
lahf
adc
cmp
pushf
add
fcoml
add
fdivrl
jmp
xor
inc
popf
and
sbb
inc
and
pop
xchg
ret
hlt
inc
jae
jg
ja
xor
sub
and
clc
xor
fidivs
inc
fsubrl
fdivs
or
push
ja
imul
mov
les
aam
and
xchg
push
xchg
xchg
xlat
lret
xor
sbbb
data16
mov
lcall
loopne
add
out
pop
cli
and
adc
inc
or
and
out
loope
loop
ss
sub
mov
cmp
clc
and
inc
movsl
mov
sub
in
sbb
addr16
loopne
sti
sub
sbb
and
mov
mov
or
pusha
arpl
inc
sbb
cmp
add
test
cmp
bound
xchg
add
mov
add
jnp
or
jge
inc
icebp
daa
adc
and
sbb
icebp
and
andb
into
addl
loope
xchg
mov
mov
enter
les
iret
icebp
mov
adc
ja
daa
cli
loopne
dec
add
mov
int
in
fiadds
pop
cld
add
loope
and
xchg
sarl
push
xchg
jle
xor
and
loope
jbe
insb
dec
push
add
and
push
les
cmp
add
sti
sub
mov
inc
add
leave
cmc
mov
add
in
adc
xlat
adcl
jmp
adcb
dec
shlb
and
movsb
mov
mov
push
adc
inc
inc
aas
cwtl
stos
mov
mov
inc
sub
mov
add
addr16
push
cmp
push
dec
push
in
movl
xchg
push
pop
xor
insl
xchg
sbb
loopne
je
lret
xor
inc
and
enter
lods
test
or
and
add
xchg
xor
xchg
repnz
fucomp
loop
jo
pop
jle
xchg
and
pop
inc
push
adc
pop
rcl
add
mov
add
xor
pushf
cmp
add
sbb
sbb
roll
jp
daa
adc
mov
jg
add
dec
loope
jg
fwait
mov
and
add
adc
xchg
daa
and
scas
add
mov
adc
add
pop
xchg
js
add
mov
pop
dec
fadds
insb
out
repz
pushf
jo
jnp
aaa
pop
repz
subb
pop
or
jne
push
inc
push
and
sbb
jb
cmp
mov
add
lea
cmp
push
push
xchg
repz
push
lock
shlb
jns
sub
add
fs
xor
mov
xor
mov
pop
jb
sarl
jbe
lret
add
scas
dec
out
jle
insl
push
cmp
cmpsl
cmp
sahf
mov
sbb
jg
adc
push
add
mov
out
shrb
sub
pop
jnp
cmpl
cwtl
test
pop
ds
pop
jl
cwtl
ret
int
inc
sbb
lret
xor
loopne
stc
xchg
xchg
sbb
add
adc
rdmsr
mov
mov
popf
sbb
add
mov
adc
hlt
sub
dec
add
xor
jb
mov
lcall
and
adc
ljmp
imul
inc
out
in
notl
ret
xor
in
imul
cmp
pop
push
lods
jge
add
sbb
xchg
stc
add
dec
out
jo
faddl
xor
and
cmp
cmp
fadds
pop
popa
test
lods
clc
jno
xchg
repnz
push
mov
dec
and
jle
cwtl
jmp
adc
mov
cmpsb
test
mov
inc
sub
cmp
add
pop
rep
mov
add
testb
lcall
or
pusha
lahf
out
imul
aad
add
xchg
mov
sbb
es
mov
sbb
dec
ret
ret
cld
rorl
jb
sbb
cld
adc
xchg
or
mov
ror
cli
sbb
adc
mov
push
jge
cmpsl
jmp
push
mov
xor
andl
imul
inc
test
add
testl
or
xor
adc
cwtl
push
ds
or
rcr
or
mov
push
stos
push
cmc
clc
mov
popa
arpl
cwtl
shll
sbb
mov
pop
add
out
out
xchg
repnz
add
je
repz
es
shrl
mov
adc
test
popf
insl
add
adc
aam
jnp
pop
pop
push
pop
sub
fsubl
pusha
jb
or
arpl
xor
add
mov
jae
and
sbb
je
shll
and
in
dec
int3
xor
jne
jns
cli
cmp
pushf
loopne
scas
std
jae
xchg
or
mov
push
cmp
mov
mov
pop
add
xor
push
lret
test
inc
cmp
add
jo
stos
rolb
dec
addl
clts
mov
popa
rclb
mov
cmp
jno
mov
outsl
xchg
popf
add
fcmovne
lods
ror
xchg
jb
xor
dec
lods
add
add
ret
push
pusha
xchg
jne
cld
adc
icebp
jl
add
pop
dec
stos
call
mov
pop
cmp
xor
rcr
mov
and
pusha
mov
add
andl
outsb
scas
mov
cmp
sub
inc
jmp
popf
sahf
icebp
and
je
add
daa
adc
push
add
jnp
push
cltd
xchg
je
inc
dec
add
add
push
enter
or
adc
es
xchg
rorb
pop
add
lock
or
ss
inc
push
addl
inc
insl
jne
jb
cltd
jle
jne
or
mov
inc
add
mov
in
fidivrs
add
cwtl
add
push
out
mov
dec
jns
adc
pushf
add
aaa
add
add
and
mov
add
mov
push
ds
push
rcl
add
push
xchg
push
inc
dec
and
call
repz
pushf
cmp
pop
das
xchg
add
xor
call
adc
xchg
or
mov
insl
sbb
jg
push
in
mov
lock
ja,pt
sbb
lcall
mov
cld
jmp
jle
insb
add
and
adc
adcb
addr16
mov
inc
sti
mov
frstor
inc
push
movl
and
out
add
pop
push
in
sub
sbb
out
rorl
add
into
xchg
mov
cmp
popa
xor
out
je
shrb
emms
sub
pop
lcall
sete
and
in
clc
movb
cmp
fs
sbb
enter
or
mov
cmp
fistpll
add
xchg
in
ja
xor
add
cltd
cwtl
fmull
inc
jmp
xchg
inc
or
xchg
inc
xor
rorb
and
rol
adc
shrb
ret
aaa
mov
int
out
adc
cwtl
xor
add
ja
sti
push
mov
je
xchg
shll
adcb
repz
pusha
sbb
clc
rolb
insl
jle
test
orb
addl
fidivrs
jbe
jge
and
xchg
pusha
testb
jmp
push
pop
fwait
add
in
push
psrad
test
movsl
cld
stc
cmp
pop
icebp
push
sti
adc
push
sub
lahf
and
movsl
xor
pop
sub
xchg
cmpsb
add
dec
adc
and
test
and
fsubrl
out
add
or
out
aaa
testb
jno
ret
test
xor
jae
cwtl
sbb
icebp
lahf
aam
inc
add
jle
enter
sub
rclb
sbb
mov
or
lods
clc
pusha
pusha
pop
push
mov
enter
add
dec
ror
dec
enter
push
in
stos
adc
in
test
loope
in
lock
jg
sub
test
out
jns
clc
inc
xor
jb
add
mov
dec
jo
ret
xor
or
out
or
jo
dec
mov
cli
lret
cmp
shll
push
les
je
cmp
test
add
xchg
jg
notb
push
sub
fnstenv
sbb
mov
push
inc
dec
fdivs
movsl
xchg
lea
adc
addr16
lock
stos
jbe
push
lods
mov
clc
add
adc
fildl
mov
lods
xor
xchg
sbb
std
sbb
add
imul
dec
inc
mov
sub
push
fiaddl
jnp
add
or
shll
cltd
insb
push
adc
add
and
mov
rclb
mov
jp
jge
jg
addb
add
push
lea
xor
shrb
enter
testb
jo
lock
out
add
sub
jb
cmp
in
push
adc
mov
xchg
cmp
cmc
pusha
add
jb
movsl
imul
dec
cmpsb
cmpb
or
repz
mov
sbb
dec
inc
aas
cltd
add
clc
or
mov
mov
in
mov
and
jnp
push
cs
and
jge
int
into
xchg
in
add
in
js
pusha
adc
adc
push
in
inc
sub
xrelease
xlat
enter
sar
incb
cmp
lea
mov
sbb
test
loop
out
mov
mov
adc
or
pop
es
dec
mov
add
mov
mov
push
clc
lods
sub
dec
jl
mov
test
outsl
das
fldt
adc
movsb
movsl
enter
dec
movntps
sub
cld
stc
add
mull
shll
bound
sub
push
xorl
outsl
outsb
idivl
dec
adc
and
xor
inc
ret
call
jbe
movl
add
test
test
fucomp
cmp
mov
stos
hlt
mov
fst
push
dec
aaa
xor
ljmp
adc
loope
cli
pop
adc
clc
adc
movsl
adc
subb
pusha
and
and
adc
pop
and
lds
xor
and
and
andb
mov
adc
inc
notb
ds
dec
fldenv
ja
in
or
pop
mov
int3
push
pusha
add
hlt
sbb
mov
mov
dec
sub
add
sbb
ja
sarb
cmp
xchg
add
jge
in
inc
add
cmp
inc
outsl
add
or
push
adc
mov
add
movsb
pop
out
inc
inc
andb
bsr
add
leave
subl
mov
lcall
add
orl
sub
adc
ja
mov
int3
add
add
dec
ljmp
push
add
movsl
adc
lock
daa
add
add
jae
nop
mov
mov
mov
add
jno
jp
xchg
sub
cmp
jnp
lea
mov
cmc
push
jbe
sbb
sarl
repnz
jl
int
lock
pushf
mov
inc
lret
jg
adc
xchg
xor
pop
or
push
inc
icebp
test
out
hlt
jecxz
pop
and
mov
repnz
add
fwait
xor
xchg
sub
rolb
sub
dec
adc
mov
jne
adcl
test
in
mulb
xor
add
adc
xor
fldl
stc
adcl
dec
fwait
add
dec
sbb
int3
sbb
js
xor
and
or
add
jnp
xchg
into
in
mov
adc
inc
xor
test
dec
xor
into
enter
fcoms
shlb
std
cmpsb
xchg
cmp
add
test
movsl
add
cmp
push
call
icebp
das
cmp
and
xchg
or
popa
cmp
insb
mov
mov
ret
rclb
cmpsl
add
mov
mov
mov
loope
imul
add
or
jne
add
jb
dec
jecxz
jns
and
outsl
dec
add
adc
clc
daa
dec
add
jnp
mov
cmp
push
sub
pop
mov
sbb
lods
icebp
test
cmp
mov
add
and
stos
xchg
add
in
jg
movsb
popf
mov
and
adc
mov
out
dec
dec
lcall
ljmp
loope
xchg
sub
push
imul
xchg
and
pusha
sbb
orb
icebp
fidivrs
data16
es
xor
loopne
ja
sbb
lea
outsl
mov
add
mov
xor
movsb
mov
fisubrl
bound
push
ljmp
mov
or
outsb
lahf
std
orl
out
test
cmp
xor
and
xchg
jge
sbb
scas
push
mov
pop
les
jo
sub
mov
add
loopne
sbb
nop
loope
and
add
hlt
push
adc
loopne
fisubrl
add
mov
cmp
out
add
push
fcom
push
lds
ds
movsl
and
cmp
push
hlt
add
mov
rcl
mov
jl
mov
cmpsl
cmpsb
jns
je
inc
add
mov
scas
lea
mov
add
cmpsl
push
dec
scas
pop
movsl
lea
mov
cmp
add
cmc
in
sbbb
outsl
add
je
adc
mov
adc
pop
dec
mov
repnz
aad
push
lcall
adc
sti
xchg
inc
sub
sbb
pop
repz
add
xchg
pusha
adc
loopne
bswap
sub
mov
daa
add
sti
cmp
add
addr16
xor
dec
push
xchg
xor
fimuls
add
imul
mov
in
add
add
faddl
test
add
jmp
mov
sbb
rclb
add
mov
jnp
mov
push
or
add
nop
ds
jp
jle
mov
sub
out
enter
and
mov
adc
data16
dec
add
add
jne
cmp
nop
add
xlat
pop
jp
in
add
data16
pop
pop
fisttpl
loop
andb
test
add
pop
ret
ja
popa
ljmp
add
rcrl
mov
out
add
xchg
jp
dec
addb
test
xor
cmp
stos
jbe
outsb
std
outsl
das
rolb
addl
dec
jne
and
inc
xor
filds
cmp
adc
add
adc
add
icebp
mov
repnz
push
pop
dec
decb
xor
idivl
cmp
add
pop
loop
mov
and
cmc
add
push
sti
mov
inc
andb
ljmp
add
or
lret
es
mov
cmp
hlt
jae
add
rcrb
push
scas
pop
sub
add
or
fsubrs
in
jae
add
push
test
imul
sbb
outsb
inc
hlt
pop
adc
pop
push
add
call
popa
sub
cmp
adcb
mov
xchg
movsb
scas
popa
cmpb
lret
add
jne
out
pop
cmp
add
sub
fs
fdivrl
or
jl
add
jae
pop
in
ret
add
dec
iret
sub
add
mov
daa
test
fiadds
clc
pop
mov
mov
andb
shlb
or
xchg
inc
outsl
pushl
xor
sbb
test
push
cmp
mov
movsb
add
outsl
mov
mov
fbstp
xor
xchg
into
iret
sbb
sahf
iret
pop
mov
ds
mov
push
aad
call
inc
lods
jbe
shll
popa
fiadds
add
and
fdivrs
cmp
movsl
jb
mov
hlt
rcr
jbe
add
popf
mov
daa
adc
mov
pop
hlt
stos
cmp
adc
outsb
ss
out
xchg
test
in
rclb
mov
lret
stc
mov
cltd
push
xor
js
loopne
mov
add
and
loop
out
filds
lcall
xchg
add
movsb
lea
dec
dec
inc
add
mov
mov
outsb
jo
aad
add
sub
testb
and
pop
ds
add
or
sub
mov
jmp
xor
inc
test
mov
add
push
nop
jp
or
push
lods
add
xor
and
mov
mov
imul
test
pop
ljmp
cmp
sti
mov
push
mov
ja
out
jecxz
leave
and
mov
adc
adc
hlt
lahf
loopne
pop
jp
aaa
cmp
call
js
jmp
mov
inc
xorb
or
add
aas
call
add
fnstenv
faddl
shrb
pusha
inc
jno
outsl
lahf
add
xor
int3
std
inc
leave
or
cmp
inc
int3
jmp
pop
mov
imul
cmp
test
outsl
pop
xor
movsb
dec
sub
fldcw
jge
cmc
je
dec
add
imull
mov
sub
cltd
pop
push
push
test
inc
push
shll
sti
add
dec
daa
jmp
pop
data16
add
scas
inc
cli
inc
cmp
add
push
mov
xchg
push
and
loope
call
in
add
int
cmp
dec
mov
add
scas
dec
mov
out
cmp
orb
test
in
mov
repnz
out
idivl
xorl
xchg
es
inc
push
add
hlt
xchg
xor
jbe
stos
add
inc
mov
dec
xor
sbb
add
xor
sub
fucomp
inc
pop
je
jb
add
aas
lods
and
out
daa
add
add
outsl
xchg
fsubl
xchg
addr16
pop
in
pop
pop
mov
or
rcr
imul
push
aaa
shrb
mov
aas
mov
loopne
ss
hlt
call
in
and
sti
repnz
test
add
dec
pop
ret
sub
or
add
xchg
fbld
rolb
mov
add
movsb
movl
or
inc
cmpsl
add
lods
mov
paddsw
testl
add
sbb
sahf
sub
inc
fwait
in
ds
add
push
inc
xchg
cmpsl
testl
xor
roll
out
cmp
mov
jnp
jns
and
add
dec
add
shrl
cmp
rclb
into
cmp
or
add
lods
jbe
enter
scas
imul
add
sub
mov
cmp
popa
hlt
add
icebp
mov
push
repnz
mov
and
pop
pop
push
sbb
ds
les
call
sbb
dec
fs
lds
pop
icebp
scas
mov
add
mov
testl
or
mov
jne
add
lahf
and
adc
add
fdivl
lds
jmp
stos
add
push
sahf
mov
xchg
jae
add
xchg
fdivrp
dec
add
adcb
add
hlt
jbe
add
pop
or
mov
add
push
dec
sbb
lods
dec
aas
xor
cwtl
or
hlt
aam
add
stc
dec
xor
adc
jnp
and
outsl
xchg
sbb
add
pop
imul
inc
cmp
mov
test
adc
jmp
cmpl
pop
cmp
xor
sub
mov
das
add
daa
sub
cmp
fidivl
rorb
ljmp
jmp
add
bound
jbe
mov
mov
das
cmp
cmpsb
cltd
negb
jb
loope
add
cmp
add
cmc
sub
outsb
mov
add
cmp
cld
arpl
and
fidivrl
jns
stos
mov
mov
mov
add
add
stos
out
or
outsb
arpl
inc
stos
nop
seto
fwait
xor
daa
clc
loope
add
je
sub
int3
add
addr16
push
inc
pusha
add
xor
xchg
inc
add
jmp
jmp
cmp
and
mov
add
sbb
inc
jae
xchg
testb
lahf
sub
add
cld
xchg
sbb
das
inc
sub
sub
lock
dec
lods
insb
les
addr16
pop
mov
loop
out
jl
pop
push
mov
movsb
add
movsl
sbb
rcr
or
mov
mov
fcoml
fsubp
add
mov
out
mov
push
call
add
add
xor
add
shlb
out
movl
stos
xchg
lock
inc
mov
push
shlb
jne
cmc
jg
mov
nop
dec
cli
inc
repnz
mov
movb
outsl
pop
dec
outsb
xor
push
mov
sbb
pop
or
stos
xorb
les
int3
insl
pushf
adc
in
into
cmpsl
aaa
pop
xchg
es
push
mov
ret
loope
add
dec
aaa
lods
daa
stos
inc
add
mov
xchg
das
mov
popa
adc
mov
and
pop
clc
push
add
xchg
xor
data16
push
mov
dec
sub
lret
cmc
repz
shlb
sbb
cs
fcomps
add
lock
testl
fbstp
loopne
test
dec
gs
sbb
stc
jb
add
or
dec
jo
lods
fstpt
and
mov
and
loopne
jo
ja
add
gs
repz
testl
pop
push
mov
lods
stc
mov
pop
cmp
psubusw
addr16
add
shl
cmp
jge
push
mov
testl
call
adcb
push
sub
pop
add
iret
les
add
push
nop
pop
add
out
add
or
add
xlat
push
aad
orb
flds
add
adc
insb
xor
out
push
add
jnp
lods
inc
out
pop
add
push
xchg
cmpsb
mov
jmp
dec
mov
and
dec
ret
dec
testb
pop
push
loope
xchg
in
add
push
loop
dec
push
add
mov
sbb
repz
vcvttsd2si
imul
rclb
add
sub
insb
jbe
add
or
adc
stos
faddl
mov
arpl
shl
test
cwtl
daa
cmpb
pushf
lahf
jo
cmp
jb
pushl
enter
arpl
fisttps
cmpsb
push
sbb
out
mov
fs
subl
in
xor
dec
fwait
test
add
mov
paddusb
enter
std
repnz
pop
cmp
insb
nop
lret
mov
fnsave
xchg
or
jbe
outsl
jmp
mov
add
rclb
loope
dec
sbb
xchg
lods
pushf
sub
jle
dec
inc
pop
dec
mov
pusha
lds
pop
push
js
int3
xor
sbb
mov
xchg
pop
mov
roll
and
sub
pop
daa
or
fsubl
data16
ljmp
xorl
mov
add
pop
add
mov
cs
inc
jmp
enter
sbbb
andb
mov
add
lea
mov
cmp
lods
stos
mov
mov
add
sarb
aad
jmp
mov
cmp
jne
jl
pop
jo
add
mov
adc
pop
xchg
add
das
test
add
fstpl
mov
jo
lock
ret
mov
pop
add
mov
scas
loope
cmpsb
jl
add
inc
pop
jns
mov
aaa
fwait
stc
jae
add
cmc
add
add
repnz
out
sbb
sub
clc
mov
sar
mov
mov
or
bound
adc
cli
int3
dec
out
add
sub
add
mov
or
insl
add
mov
cmp
movsl
mov
das
mov
pop
dec
lods
test
lea
es
enter
imul
or
aas
iret
ss
add
fwait
pop
stos
inc
bound
cmpsb
add
addb
xchg
add
cmpsb
mov
mov
pop
fsubr
test
in
xor
clc
mov
fucomp
add
idivb
dec
int
add
dec
jmp
dec
out
jle
add
subb
adc
pop
cwtl
ds
addb
jg
add
lcall
add
test
es
insb
aas
aad
add
outsb
adc
and
adc
lock
repnz
sti
inc
adc
pop
inc
in
push
mov
mov
loopne
cmp
enter
rcll
rcrb
add
popa
dec
lock
in
pop
out
pop
add
call
mov
in
inc
fisttpll
and
ja
into
add
jmp
sub
add
xchg
sub
push
push
lea
jo
mov
sbb
lahf
pop
jmp
sub
inc
pop
add
dec
mov
and
je
xor
outsl
pop
add
mov
pop
sub
sbb
loopne
loopne
leave
mov
aaa
and
out
cmp
dec
or
push
imul
mov
ror
push
in
add
inc
scas
xchg
add
xchg
jnp
add
std
addr16
jle
mov
js
or
jae
lret
fstpt
sub
adc
push
mov
fmull
mov
mov
adc
lds
add
cltd
cmp
push
inc
add
sbb
pop
repz
xchg
xor
cwtl
pop
aas
adc
loope
aad
fmuls
add
and
sbbb
sub
add
fwait
int3
xor
sbb
mov
and
xor
jno
or
xchg
inc
test
add
cli
testb
sahf
loop
add
ror
xchg
dec
loopne
add
and
xor
insl
adc
outsb
sldt
lea
add
cltd
sub
cmp
inc
jno
add
mov
daa
mov
cwtl
fs
jl
push
add
ds
pop
and
mov
outsl
jl
mov
ds
cltd
addb
jl
mov
rcrb
les
sarb
jmp
xor
jle
sub
add
std
jmp
repnz
or
fldt
add
cld
adc
sbb
ja
movsb
arpl
dec
add
mov
and
inc
push
mov
mov
jmp
adc
outsl
push
or
mov
push
stos
icebp
add
lods
xlat
out
sub
frstor
sub
enter
sbb
or
dec
clc
or
sbb
xchg
lds
pop
jne
sar
push
inc
and
cmp
pop
leave
jbe
in
es
sub
cwtl
add
fcompp
sbb
add
sbb
add
sub
adc
inc
lahf
aam
adc
aaa
gs
popf
sbb
add
mov
and
aaa
enter
and
jecxz
sbb
stos
add
int3
mov
dec
dec
popa
clc
shlb
dec
push
scas
jnp
add
test
enter
cmp
add
mov
mov
nop
fdivl
add
dec
std
fisttpll
sub
pushl
popf
and
fwait
cld
pusha
mov
repnz
out
cli
add
rcrb
pop
xor
sbb
sbbb
adc
dec
jge
add
inc
mov
sbb
mov
jb
add
push
mov
dec
xchg
add
mov
fs
dec
cld
push
and
int3
xchg
sbbb
jnp
add
insb
stos
aas
push
bound
add
loope
clc
pinsrw
ret
push
je
adcb
outsl
or
movsl
cltd
cld
add
cmp
out
pop
roll
aad
add
insb
mov
jecxz
push
or
add
inc
loop
sbbl
nop
mov
or
push
clc
adcb
pusha
pop
jno
mov
jg
jle
add
insl
mov
mov
cmp
xchg
insb
xchg
pop
pop
jno
add
mov
push
jmp
mov
add
mov
push
mov
and
mov
fwait
call
add
lret
dec
mov
add
dec
inc
xchg
sbb
pop
mov
mov
xlat
dec
sub
jp
xchg
scas
push
or
push
repz
push
cltd
jle
rorb
mov
inc
test
dec
mov
add
popf
pop
add
mov
ret
shlb
cmp
dec
mov
add
popf
xor
xor
inc
add
lock
in
cwtl
cmp
orl
jae
add
out
fnsave
add
sub
vpunpcklbw
dec
add
cmp
outsl
mov
push
andb
xorl
add
out
fwait
and
jp
xlat
out
fucom
es
sub
stos
popl
push
cmovl
in
or
sub
in
cmpsb
sarb
jns
pop
sti
dec
jmp
ljmp
out
mov
ds
xor
mov
clc
clc
add
out
aaa
xor
loope
fldt
test
adc
mov
dec
mov
add
inc
xor
or
or
push
fcomps
hlt
into
add
and
sbb
cltd
flds
sbb
icebp
sub
adc
daa
pop
xchg
push
lock
dec
pop
mov
rol
popf
add
addr16
insl
pop
inc
mov
push
dec
rcrb
les
add
shr
xchg
ss
std
sbb
cmp
xor
iret
cwtl
sbb
rorl
push
std
out
sahf
lock
sbb
arpl
jmp
add
xor
jge
cmovns
mov
push
xchg
in
jno
add
add
repnz
cmpb
lods
xchg
ret
xor
mov
lret
out
into
mov
aas
imul
fldl
add
and
rorl
and
mov
mov
xor
add
dec
cmpb
roll
rcrb
out
push
adc
push
test
add
or
scas
jbe
sub
imul
scas
mov
dec
sbb
jecxz
inc
mov
push
push
adc
cmp
xchg
test
xor
push
mov
or
out
push
js
in
push
out
popa
add
jg
mov
sub
or
mull
lcall
xor
int3
add
test
loopne
in
repz
subw
pop
fstpt
sbb
rorb
push
push
int
leave
cmpl
fsub
insb
jnp
add
test
rolb
mov
out
sub
popf
xchg
stc
dec
movsl
aaa
test
cmp
add
mov
sub
pop
fsubr
enter
movaps
int
testb
cmp
push
fs
pushf
aas
mov
insb
mov
pop
dec
add
into
mov
push
or
test
add
inc
test
add
mov
sbb
mov
pop
mov
add
mov
sub
xchg
xor
xor
or
les
orl
mov
mov
add
movsl
mov
loop
pop
loopne
testb
cmpsl
add
movsb
mov
leave
xor
fwait
negl
into
xchg
lahf
es
pop
mov
add
and
cli
je
cmp
adc
icebp
mov
mov
adc
jle
xchg
btcl
imul
fsts
sbb
ret
testl
int3
dec
popa
arpl
daa
lds
in
sub
sbb
ja
add
ljmp
add
push
push
in
insl
insb
add
loop
mov
pusha
pop
jo
jne
nop
pop
pop
fadd
jecxz
divb
clc
sbb
add
rolb
jb
jae
add
stc
hlt
icebp
pushf
add
add
xor
add
xchg
repnz
test
and
sub
mov
dec
stos
adc
scas
add
sub
add
int3
mov
cli
mov
sbb
ret
arpl
mov
push
and
mov
pop
mov
mov
add
movsb
test
jmp
addr16
aaa
sub
or
fmull
lods
add
push
inc
xor
add
and
data16
xchg
pop
stc
mov
add
sub
inc
pusha
dec
adc
xor
mov
clc
inc
pop
je
push
inc
outsb
shl
dec
mov
adc
mull
sbb
dec
repnz
stos
cmp
pop
or
push
adc
push
cmp
sub
push
test
add
sbbb
add
pop
testl
xor
push
scas
shr
sti
dec
mov
add
das
jl
dec
add
mul
xchg
pop
add
inc
lods
ds
jb
add
sbb
sahf
cmp
dec
pop
fisubl
sub
add
sbb
pushf
add
jge
sub
movl
push
in
push
int3
loopne
subl
fmulp
popf
mov
inc
rcrb
orb
sbb
dec
jecxz
testl
jg
shld
out
add
sub
loop
divb
and
or
gs
pusha
mov
test
pop
mov
xor
int3
sub
cmp
cwtl
pop
in
jle
jns
test
scas
lcall
movsl
sub
add
gs
add
fnstcw
or
jo
roll
repnz
mov
and
imul
pop
mov
incl
call
and
imul
test
lds
xor
jo
ret
notb
sub
nop
in
fldl
add
lea
add
mov
push
pop
add
add
cmp
lea
mov
adc
enter
pop
add
mov
mov
add
rcrb
sub
ficompl
repz
int3
mov
stos
cmp
loope
xchg
int
lock
add
add
push
xlat
test
sub
xorb
sub
xor
das
push
fsubl
push
adc
sbb
sub
daa
dec
fiaddl
cltd
or
sbb
loopne
je
mov
int3
insb
incb
imul
call
sbb
loope
pop
pusha
aam
add
dec
ror
int3
enter
sub
inc
outsb
cs
ja
and
dec
popf
cld
add
xor
test
xor
jmp
ret
lahf
cmc
jne
movsl
add
fldcw
xor
call
jp
lods
pop
pushf
or
stos
dec
mov
adc
jge
add
sbb
sbb
and
das
cwtl
xchg
jbe
not
add
lret
add
adc
stos
scas
add
xor
cmp
mov
repz
adc
add
push
mull
insl
inc
je
jmp
mov
dec
add
push
cli
out
push
pop
aas
add
and
int3
test
mov
push
inc
ds
mov
and
lahf
inc
add
lock
push
fldln2
std
jmp
push
pushf
or
nop
test
divb
add
outsl
int
mov
xor
xor
cmc
fsts
add
mov
int3
cmp
bound
push
fcomps
and
add
enter
mov
dec
lods
push
dec
jbe
rcrl
xor
pop
popl
lods
mov
inc
or
and
sbb
dec
inc
lahf
in
cmp
das
stos
arpl
add
mov
pop
adcb
jmp
stos
cwtl
mov
call
add
cmp
jae
ds
push
xchg
jne
dec
jae
lcall
mov
xor
or
sarl
xchg
push
popf
sbb
add
stos
ficompl
and
adc
cmpsl
shlb
sub
test
cld
cld
pusha
sbb
int3
xor
cli
add
and
inc
popa
mov
add
and
aaa
mov
loope
outsb
cmp
lret
sbb
int3
adc
push
add
mov
add
xchg
das
xchg
xor
mov
pop
add
rcrl
cltd
ret
add
mov
pop
inc
cmp
loope
dec
jge
je
sbb
loopne
popa
ljmp
add
ja
adc
add
xor
mov
nop
add
incb
sbb
or
insb
lds
mov
loopne
dec
xor
scas
fnstcw
or
adc
dec
and
push
adc
mov
mov
pop
fsub
mov
je
test
mov
pusha
mov
insb
or
and
xchg
lods
fnstenv
push
int3
movsl
xor
pop
sbb
add
xor
xor
pop
pushf
and
mov
in
pop
inc
fnstcw
inc
mov
push
js
mov
out
enter
mov
pop
mov
add
push
sbb
or
je
int3
adc
push
adc
xchg
add
repnz
and
or
adc
inc
jle
and
mov
mov
or
cltd
daa
loop
dec
xchg
or
sub
repnz
adc
lret
aaa
adc
dec
cmp
xchg
add
and
jecxz
mov
sub
les
adc
fdiv
hlt
mov
inc
cmp
and
pop
nop
sbb
outsl
push
test
aas
fildl
mov
nop
add
stos
jmp
dec
setb
xor
sub
add
sbb
xchg
shl
inc
add
int
xchg
fwait
mov
mov
push
aam
lock
les
cmp
call
and
rolb
mov
es
adcb
shll
mov
mov
insl
aam
add
inc
jp
or
sbb
or
cmc
aam
cmp
fistpl
xchg
dec
adc
lea
sub
sbb
sub
and
add
cs
sbb
pusha
fsubs
bound
cmp
rclb
shlb
call
cmp
call
insb
adc
xor
jle
and
or
xchg
add
push
jb
push
inc
push
sub
xor
push
cwtl
aad
flds
pop
imul
test
xchg
add
jns
pop
dec
dec
ret
pusha
fildll
and
jb
insb
pusha
insb
out
dec
pop
nop
dec
cmp
and
push
rolb
ja
or
es
fs
xchg
pushf
ss
cli
cmp
daa
test
adcb
sbb
cwtl
repnz
mov
out
mov
mov
jg
loope
imul
or
test
add
lcall
add
adc
je
test
mov
adc
bound
mov
sbb
xchg
outsl
shl
mov
jge
fsubs
pop
add
sub
cli
xchg
inc
fldl
idivl
call
mov
sub
mov
ja
push
add
aad
test
pop
cmpsb
add
mov
sbb
pop
data16
inc
mov
or
mov
push
in
cmp
jge
repnz
sbb
dec
cmpsb
mov
xor
push
add
call
cs
pop
mov
pop
add
cld
scas
push
mov
xlat
push
and
cmp
fdivs
addl
ret
mov
push
xchg
inc
icebp
rcll
in
pop
dec
cmp
and
jbe
pop
xchg
sub
scas
add
jge
outsb
ret
mov
push
jecxz
pusha
adc
out
and
mov
in
pop
lcall
add
xchg
mov
sar
cld
pop
or
or
sti
stos
add
inc
cmp
jge
mov
addl
pop
push
popf
pop
adc
add
std
adc
add
cmp
cmpsb
shll
fldt
cmp
mov
ja
xchg
call
and
ds
repnz
adc
ss
and
stc
sbb
sub
pushf
pop
mov
and
jl
adc
cmp
insb
out
jnp
loope
mov
push
adc
mov
jle
inc
pop
mov
ds
sub
and
dec
sbb
shl
rcrb
enter
in
inc
add
pop
dec
push
fsubs
adc
mov
cmp
mov
fldl
fwait
jmp
mov
aaa
stos
cmp
sbb
rcll
pop
daa
or
icebp
loope
movsb
inc
stos
ljmp
cli
imul
jp
test
xor
cld
push
jo
or
cmp
fadd
pusha
xor
repnz
ljmp
and
je
stos
jae
add
or
roll
cmc
mov
fistpl
or
sti
and
lods
scas
add
jno
jmp
mov
aam
dec
jnp
add
mov
adc
lods
js
jbe
iret
pushf
stos
ret
sbb
or
add
dec
ret
cli
cmp
subl
xor
xchg
adc
das
cli
fs
add
mov
and
addl
pop
xor
cmp
pusha
enter
imul
ret
mov
pop
push
add
adc
or
sbb
xor
xchg
repnz
sarb
loop
xor
xor
add
test
mov
fmulp
scas
inc
popa
mov
icebp
in
mov
mov
xchg
and
mov
das
push
icebp
xor
cmpl
and
inc
mov
inc
insb
push
fcomps
adc
push
mov
fstpl
adc
or
pop
add
dec
sahf
mov
add
fcmovne
dec
or
sbb
iret
lahf
sbb
es
test
out
pop
mov
add
lock
adc
negb
inc
cli
push
imul
rclb
into
pop
cmp
push
int3
or
sti
pop
js
enter
lods
lods
movl
and
push
and
push
std
xorb
daa
mov
lock
cs
or
std
movsl
adc
push
fdivrs
fwait
lcall
test
jp
shlb
add
sbb
aaa
push
sbbl
popa
hlt
repnz
and
xchg
movsl
cmp
sub
jne
rdmsr
ja
jg
add
ret
mov
add
pop
push
add
add
pop
lret
jbe
mov
mov
pop
test
pusha
mov
movsl
add
ret
add
inc
and
divl
jns
in
cld
pop
add
push
test
clc
push
dec
xchg
jbe
cmp
xchg
and
sbb
xchg
out
insl
rcll
repz
ss
mov
xor
cmp
lods
stos
xor
aad
testb
je
repz
adc
stos
and
inc
jmp
cmp
subb
incb
xchg
add
jns
fnstcw
dec
pop
out
push
push
adc
shlb
mov
add
loop
xchg
inc
xchg
std
mov
icebp
xchg
shr
data16
insb
add
cwtl
xchg
fidivrs
ds
dec
cmp
mov
ret
and
movsl
sti
loope
bndldx
inc
test
xor
and
nop
and
lea
rolb
xor
or
loope
sbb
jg
pushf
push
push
orb
add
or
and
jle
hlt
sahf
lret
pop
jo
mov
xor
and
iret
arpl
jae
push
stos
scas
cmc
pop
jg
cli
rcr
pop
into
fs
add
in
fcmovb
pop
or
sbb
cmc
add
cmp
pushf
bound
test
mov
fmulp
mov
add
sahf
dec
popf
and
pop
jo
out
mov
in
js
mov
cmc
out
xorb
jl
and
jge
pop
or
loopne
stos
testl
push
popf
into
and
sbb
mov
adc
jecxz
call
push
pop
push
xor
adc
les
jb
add
inc
fwait
dec
in
adc
iret
gs
jns
sub
out
inc
bound
inc
xor
pop
call
and
xchg
arpl
add
jecxz
popa
ja
and
mov
mov
inc
sti
xchg
fnstcw
es
dec
or
xrelease
leave
ljmp
test
movl
pop
hlt
jmp
cmpsl
add
mov
jecxz
and
pop
mov
aas
xchg
hlt
mov
mov
sub
lock
js
sbb
mov
mov
test
xchg
insl
xor
adc
ljmp
mov
mov
cmpps
pop
push
sbb
adc
test
fcomps
add
mov
xlat
and
ds
jns
invlpg
jmp
aam
cmp
addr16
dec
add
outsl
pop
dec
add
iret
jb
dec
xor
add
scas
adc
popa
cmp
dec
enter
sbb
or
add
mov
cltd
or
jbe
push
xchg
test
or
mov
add
out
inc
lock
call
add
jns
jge
jbe
xchg
in
sbb
pop
mov
xor
rolb
sub
pop
xchg
xchg
icebp
in
imulb
arpl
enter
fcompl
lock
lret
je
add
movsl
sbb
push
jbe
fcmovu
div
xchg
in
test
xorl
push
gs
int
push
cmp
jp
xor
pushl
sahf
adc
and
cmp
lock
jmp
dec
test
mov
pop
mov
rcrb
pop
out
icebp
add
add
lds
push
sbb
cmpsl
jae
add
fadds
lahf
call
out
push
sbb
xor
mov
outsb
in
test
lahf
fildl
push
push
pop
ret
in
and
and
and
xchg
add
lds
mov
inc
and
dec
cs
divb
sub
xchg
dec
cmp
in
adc
jae
xor
sub
cli
testl
leave
adc
data16
daa
cmp
mov
test
lods
adc
pop
add
pop
enter
add
ficoms
lods
rolb
sbb
mov
pop
add
add
cli
push
shrl
dec
inc
cmp
mov
addb
push
mov
inc
lods
pushf
ja
insl
pop
cmp
iret
add
arpl
cmp
mov
push
adc
add
and
xor
inc
xchg
rolb
dec
cmpsb
or
add
mov
shll
roll
int3
push
cmpsl
mov
sbb
in
xor
pusha
and
or
lock
das
and
mov
shl
add
sub
orb
add
nop
cmpsl
pop
movsb
pusha
rcrl
or
add
movsb
shl
repz
out
fwait
xlat
add
xchg
cwtl
or
rorb
xchg
jnp
or
popa
pushl
aas
repnz
pop
rclb
inc
mov
inc
xor
push
stos
adc
push
call
sahf
push
mov
imul
add
stos
or
pop
sbbl
or
cmp
add
jmp
int3
jne
insb
xchg
mov
cmp
and
js
pop
adc
cltd
xor
adc
and
mov
adc
adc
add
mov
jo
rorl
mov
les
daa
outsb
popl
jle
inc
test
xchg
lahf
call
pop
pop
or
mov
add
sbb
xor
add
cmp
in
data16
frstor
mov
pop
and
std
ret
rolb
add
stos
jns
stc
dec
lcall
pop
add
push
push
aad
pop
outsl
add
add
xlat
or
lret
iret
pop
test
roll
or
lcall
dec
add
mov
xor
mov
cltd
loope
mov
push
dec
adc
decb
in
mov
mov
pop
in
das
push
add
fsubs
iret
loopne
and
or
add
jl
cmp
push
rolb
add
push
jb
mov
lcall
rorb
add
lret
mov
xchg
call
sbb
or
loopne
sbb
aad
jbe
das
xor
xor
clc
clc
mov
xchg
pop
stos
jecxz
mov
sub
cwtl
insl
add
fiadds
jbe
ja
jge
sub
xchg
adcl
pusha
out
push
sti
cwtl
nop
jnp
cltd
add
adc
add
add
sahf
lahf
pushf
push
mov
and
inc
jb
xchg
data16
or
int3
mov
dec
insb
add
sub
mov
test
cmp
rclw
pop
je
push
aam
xor
add
mov
sub
movb
loope
cmp
loopne
outsb
mov
add
arpl
add
icebp
pop
jbe
lcall
xchg
lret
cld
add
push
ja
jp
add
or
xor
imul
pop
subb
inc
dec
sbb
data16
ljmp
add
js
mov
and
add
rcrb
jecxz
cmp
faddl
pop
sub
test
add
out
add
inc
movsb
mov
sahf
jnp
jecxz
repz
or
sub
mov
pusha
lret
xor
add
cmpsl
adc
add
xchg
stc
dec
add
nop
sahf
pop
insb
dec
int
dec
push
roll
notl
push
inc
push
jmp
cld
pop
roll
cmp
xor
ret
mov
cmpsl
sub
popa
pop
add
shlb
notl
xor
add
lret
cmp
jg
add
push
out
adc
mov
addl
push
push
loopne
xchg
mov
jns
xor
adc
add
repnz
ljmp
sbb
icebp
lds
sub
push
xor
shrb
or
sub
mov
icebp
lret
test
jge
pop
xadd
mov
add
das
leave
xor
es
gs
cmp
and
pop
out
cmp
pop
test
ret
jge
xor
xor
cmp
xor
addb
adc
pop
imul
aas
pusha
pop
repz
add
mov
push
dec
out
test
shrb
in
movsb
inc
mov
add
cmpb
dec
mov
aad
mov
mov
js
pop
mov
into
in
add
sub
jo
imul
int3
jnp
pusha
adc
out
incb
scas
or
and
dec
jnp
dec
cmp
testl
into
ret
xchg
shlb
clc
leave
in
inc
repz
lcall
add
add
dec
ja
add
pop
in
mov
pop
scas
lcall
sbb
xchg
pop
mov
pop
cli
cmp
addr16
sub
inc
pop
or
lahf
adc
inc
clc
xchg
lods
fs
and
push
or
add
add
lcall
ljmp
inc
push
mov
and
xchg
shl
test
push
je
imul
sub
iret
push
add
inc
insl
mov
mov
fmull
jge
ljmp
cmp
mov
xchg
inc
add
and
in
insb
bound
xor
inc
fcoms
or
inc
shrb
loope
fcompl
ds
push
aaa
fcoms
iret
out
test
jno
js
test
lahf
fisttps
aam
inc
mov
mov
fsubl
sub
push
add
pop
aas
mov
add
rorl
push
push
adc
aas
fmull
add
jle
mov
inc
jbe
push
into
lock
pop
mov
pop
add
insl
jl
jne
pop
out
inc
adc
movl
inc
out
add
xchg
and
bound
sbb
test
nop
dec
mov
orb
cmpsb
je
je
dec
push
add
inc
shl
shr
out
adc
sub
hlt
adc
sbb
sub
mov
jmp
cmc
jno
push
imul
sbbb
cmp
pop
paddsb
enter
pop
iret
shll
inc
add
jg
add
and
ds
popa
mov
sbb
mov
fildll
jle
mov
add
push
adcb
add
fistl
js
xor
jo
clc
loop
pushf
add
fisttps
xor
mov
idiv
loopne
pusha
sahf
xchg
addb
or
pop
lahf
shll
aam
or
les
out
mov
add
iret
icebp
inc
inc
ljmp
inc
stc
xlat
xchg
in
jge
pop
dec
lock
inc
ja
push
pop
fldenv
call
jge
add
lock
jge
add
les
add
sbb
int3
mov
mov
daa
push
stc
push
add
test
cwtl
add
cmp
mov
add
inc
call
xchg
cmpsl
nop
js
lods
aaa
push
out
xchg
ret
stc
mov
hlt
jnp
pop
inc
jbe
in
inc
push
iret
orl
dec
adc
fisubrl
mov
aas
frstor
and
fsubrl
and
pop
call
jl
lods
test
push
adc
loopne
pushf
add
cmpsl
sbb
adc
addr16
in
mov
push
xor
and
or
and
cld
add
fmulp
sbb
jge
loope
test
pop
imul
sub
in
mov
pusha
add
pusha
aam
add
mov
in
inc
in
lock
push
iret
or
pusha
int
lea
sub
add
je
fs
add
gs
shl
mov
jp
movsb
xchg
dec
sub
js
add
sahf
lcall
or
xor
adc
loop
add
push
sbbl
sub
pop
sahf
cld
sub
lret
leave
add
xchg
test
sti
mov
push
stos
jecxz
lret
mov
xor
adc
adc
enter
push
popf
leave
shrb
nop
loopne
ja
call
ret
sub
test
les
or
adc
xor
mov
add
rolb
adc
push
fcomp
sub
imul
cmp
in
enter
mov
xor
ja
pusha
fcompl
incb
sub
jmp
jl
sti
ljmp
out
addr16
lods
pop
pop
nop
out
pop
dec
push
stos
push
fcmovnb
jmp
inc
fwait
push
pusha
add
adc
imul
testl
mov
call
mov
sub
je
frstpm(287
push
add
push
daa
out
pusha
cld
cmpsl
cli
add
cmp
das
faddl
xchg
push
or
movsb
pcmpgtb
orl
adc
sub
fiaddl
jbe
jmp
sbb
mov
dec
sub
std
cld
add
popa
fbld
push
stc
hlt
xor
or
cltd
sbb
add
imul
mov
add
repz
clc
ficompl
std
add
nop
adc
add
movsb
sub
jge
push
popf
jp
inc
lods
pop
xlat
cltd
mov
add
inc
leave
and
mov
ljmp
jmp
pop
insb
lea
gs
bound
add
pop
xlat
xchg
imul
add
push
push
shll
ficomps
cld
imul
add
pusha
push
insb
push
add
dec
or
popf
mov
add
je
cmp
cwtl
and
jbe
lar
and
xlat
add
loopne
jo
mov
add
push
and
cld
cmpsb
cmc
push
das
push
test
pop
loope
lret
scas
xor
xorl
stc
cmpsb
push
add
outsl
jle
sahf
push
roll
xchg
outsb
mov
insb
inc
or
movsl
cmc
fisubs
popa
sti
sahf
lret
test
lea
add
rcrb
hlt
push
mov
and
or
sub
mov
loopne
rcrb
pop
shrl
jo
add
mov
inc
pop
aam
outsb
ret
enter
mov
pop
inc
call
insl
jb
imulb
test
mov
scas
enter
add
push
pop
pop
loopne
cmpsb
xlat
pop
xchg
mov
xchg
cmpb
setp
mov
mov
stc
pop
mov
rclb
test
mov
sahf
lahf
es
mov
jp
popf
mov
add
test
or
jmp
mov
or
test
jns
ret
mov
adcl
cmp
imul
ja
pop
cmp
addl
outsl
popf
cmp
xor
add
mov
adc
lods
or
cwtl
movsb
cltd
sub
add
enter
sub
fwait
out
or
pop
inc
imul
int3
add
mov
add
imul
add
incl
lock
imul
mov
jnp
sbb
faddl
sub
push
or
xlat
cmp
lods
sub
pop
xor
or
fiadds
mov
js
mov
jle
cli
pop
add
xchg
fsubrl
adc
test
inc
add
add
aaa
cmp
dec
and
test
addb
fadds
mov
mov
dec
xchg
repnz
mov
shlb
mov
and
arpl
sub
mov
sub
cmp
add
mov
sub
or
scas
aam
dec
mov
mov
or
outsl
sti
dec
inc
popf
adcb
cwtl
jb
mov
jg
dec
xor
adc
rcrb
into
les
mov
or
das
dec
and
test
pop
jbe
jo
xchg
mov
sbb
mov
cwtl
jne
loop
cmp
add
and
fsubs
jb
fldenv
ret
dec
xchg
out
mov
movsb
add
inc
cmp
cs
inc
lea
sbb
mov
mov
loope
cmp
mov
xor
or
sub
pop
push
cmp
jo
int
fchs
add
jge
adc
adc
mov
push
out
jns
and
mov
pop
inc
xchg
or
dec
hlt
out
sub
sbb
dec
lock
or
push
ds
add
stos
push
enter
cltd
subl
jo
mov
lcall
pop
mov
add
inc
addr16
sbb
mov
out
addr16
pop
icebp
xor
jne
xor
int3
or
add
jb
test
add
cmc
add
xlat
push
call
push
cmp
lcall
jns
and
or
scas
test
mov
adc
add
or
mov
add
outsb
inc
push
add
adc
dec
mov
xchg
cmpb
mov
dec
mov
add
push
push
or
cmpb
add
sbb
sub
or
pop
paddq
addb
inc
and
add
into
repz
stos
es
add
push
inc
test
out
or
add
inc
cmc
add
xorb
out
cmp
loop
mov
lea
adc
push
cmp
jecxz
add
les
cs
xor
mov
mov
push
xor
jns
mov
mov
pop
faddl
enter
sub
mov
push
leave
pop
pop
mov
loopne
ds
dec
shlb
mov
add
sub
lock
sbb
cli
add
lock
mov
mov
adc
test
loopne
xchg
mov
ljmp
add
enter
inc
mov
xchg
pop
push
push
or
adc
pusha
rorl
or
mov
add
sahf
and
pop
xor
sub
je
xchg
sbb
pop
cmp
fists
sbb
xchg
mov
out
dec
xchg
popf
sub
sub
fs
loope
xchg
dec
push
das
push
and
sbb
popa
ljmp
adc
add
push
lea
jns
mov
xor
inc
stc
or
xor
sbb
pop
pop
addl
mov
pop
addl
lahf
xchg
sbb
mov
jbe
mov
addb
int3
mov
mov
add
or
xchg
add
sarb
xor
pop
js
or
and
ja
pop
es
add
pop
jns
pop
mov
pop
sbb
sbb
in
aad
add
hlt
pop
loope
add
imul
pop
mov
js
or
ret
push
sbb
enter
push
addr16
and
dec
subb
pop
test
add
imulb
outsl
lods
add
leave
jmp
int3
arpl
cmc
or
call
lahf
insb
mov
or
in
addb
fiaddl
repz
sbb
jno
xor
mov
add
loope
pop
xlat
fnstcw
add
andb
loop
popa
add
and
jge
ja
fsubl
pop
mov
or
stc
push
xor
xchg
ret
and
push
add
and
mov
jno
xor
cwtl
fldl
dec
lahf
mov
jl
rcr
xchg
cmp
mov
cmpsb
aaa
mov
cmp
push
add
sbb
dec
add
sbb
mov
roll
push
adc
testl
fiadds
pop
cltd
or
pop
adc
pop
jge
bound
or
and
push
lods
sbb
fs
sarb
add
out
pop
jle
cmpb
lret
pop
and
f2xm1
or
arpl
jns
add
mov
sbb
enter
cmpsl
ror
push
jg
fcmovne
mov
or
ret
fwait
jns
addb
pop
testl
sar
les
push
xor
xchg
inc
jnp
cmpb
cli
xor
push
mov
sub
and
add
fiadds
enter
xchg
rolb
mov
int3
sub
in
in
mov
bound
fs
add
pop
ret
mov
mov
stc
les
repnz
add
ficoms
xor
test
and
leave
jecxz
je
lret
fdivrs
adc
popa
cmp
shll
andb
cmpsl
call
into
ret
mov
out
nop
xchg
add
int3
adc
or
scas
mov
dec
cmp
push
or
or
inc
mov
jns
roll
xchg
sbb
js
add
mov
adc
mov
xchg
add
lret
insb
push
jo
jl
sbb
sbb
mov
push
pusha
fistpll
and
or
adc
adc
leave
mov
sbb
sbb
cmpsl
push
aam
mov
lock
mov
or
push
call
dec
iret
adc
xchg
gs
add
lcall
test
dec
cwtl
out
cli
mov
add
dec
push
mov
lods
cmpl
dec
js
int3
adc
cltd
add
mov
dec
add
cmp
or
pop
aam
hlt
lds
add
xchg
repnz
add
dec
call
mov
xchg
jae
fs
and
out
pusha
jge
pop
inc
lods
add
adc
idivl
push
flds
popf
repnz
loopne
sti
testl
shlb
movsb
pop
fsubr
sub
imul
inc
jecxz
fstl
loopne
jmp
push
add
loopne
or
xorl
sbb
test
or
fldenv
ljmp
aad
call
pop
xchg
sub
test
and
jbe
cs
adc
movsb
and
repnz
in
movsl
inc
sbb
mov
mov
mov
in
mov
inc
dec
adc
and
ret
mov
mov
jbe
out
dec
push
xchg
jp
or
xchg
das
jb
outsl
mov
sub
pushf
dec
adc
scas
push
sub
dec
mov
int
shrb
lods
xor
cmc
aas
lret
inc
push
bound
clc
out
add
and
pop
je
lret
add
fsubrl
rcl
inc
pop
adc
movsb
out
stos
arpl
add
add
cmpsl
jnp
and
cmpsb
sahf
add
fwait
push
mov
sub
mov
adc
cmpb
mov
paddusb
insl
popa
mov
dec
mov
adc
testl
and
push
jle
pop
rolb
jb
add
loope
dec
pop
out
adc
push
mov
xor
test
add
dec
pop
aad
int
or
popa
loopne
loop
and
pop
xchg
add
jg
js
dec
push
testb
xor
fsubrs
ret
adcb
js
push
stos
sbb
aas
or
movsl
mov
jle
fbld
xchg
mov
cmp
sub
add
push
loope
jp
stos
cmp
pop
or
adc
add
inc
mov
cmp
jne
imul
or
dec
repz
fdivl
add
daa
lret
xchg
cmp
adc
lret
pop
pop
add
loop
arpl
sub
repnz
xchg
loope
mov
out
xor
push
xchg
cmp
scas
xchg
cwtl
and
sti
add
lahf
out
je
xor
xor
add
adc
jmp
test
mov
or
and
fistpll
push
gs
clc
sahf
xor
loopne
push
rclb
cmp
mov
ret
pop
testb
jno
scas
jge
pusha
xor
jbe
xor
mov
idivl
sbb
xlat
xchg
rol
cmp
arpl
mov
mov
sbb
or
mov
ljmp
insb
cmp
mov
jns
addr16
pop
call
lods
inc
mov
jnp
mov
jg
add
addb
mov
test
out
push
mov
mov
jl
cmp
mov
inc
push
lods
unpcklps
sub
es
mov
pop
nop
mov
pop
or
mov
addb
add
mov
sbb
jo
mov
test
call
xchg
dec
andb
rcrl
jb
dec
fadds
lods
mov
sbb
mov
jnp
mov
xchg
testl
dec
movsb
imulb
add
stos
out
sbb
insb
add
add
flds
inc
into
or
pop
push
cmp
sarb
cmpsl
cmovne
dec
mov
lock
pop
xor
jp
add
out
dec
fs
lods
in
cmc
das
orb
cli
test
sub
mov
push
in
sbb
rol
and
flds
out
lcall
les
adc
pop
cmpsb
inc
sbbl
test
mov
lds
and
add
icebp
xchg
mov
add
out
movsl
and
xchg
or
fcomps
cld
pop
add
rcll
jl
add
faddl
jno
jmp
xor
loopne
add
fidivrs
push
js
fnsave
mov
xchg
sbb
pop
mov
dec
xor
xor
int
and
xor
add
jns
push
sbb
and
push
add
in
test
call
stos
shl
test
ret
mov
cmp
leave
not
add
mov
xchg
jle
hlt
xchg
add
jo
mov
add
cmp
jp
jbe
dec
orb
pop
stos
dec
ds
mov
roll
mov
mov
lcall
inc
push
dec
add
rcr
aas
or
sbb
clc
xchg
iret
and
sbb
xchg
add
rolb
add
mov
jb
or
mov
push
fldl
cmpsl
fwait
push
addr16
in
add
sub
movsl
inc
or
sbb
add
popa
shlb
xchg
ja
cmp
movsl
clc
pop
xchg
xor
cmpsl
jnp
jl
cmp
and
jne
loope
ror
cld
add
pop
out
and
loopne
aad
xor
movsb
xchg
scas
or
adc
push
shl
dec
add
inc
frstor
mov
mov
xchg
inc
out
mov
out
negl
popf
xchg
pop
ljmp
outsb
cltd
push
add
lret
or
add
inc
fcmovbe
sub
and
add
xor
pop
add
jg
cmp
adc
mov
std
outsb
sahf
ja
fsub
jge
loopne
clc
mov
xchg
in
ds
out
inc
pop
aaa
pop
add
or
es
or
addl
aam
pop
cs
cmp
cmpsb
lahf
push
imul
jge
sub
les
scas
rolb
push
adc
sbb
fcmovnu
cltd
sahf
nop
test
add
mov
mov
mov
sbb
add
js
movsl
ja
mov
dec
aad
cmp
mov
roll
sbbl
xchg
inc
mov
push
jnp
pop
je
enter
add
add
pop
and
dec
lea
pop
test
inc
loopne
pop
xor
dec
clc
addl
and
mov
mov
popa
rorl
jp
loop
xchg
add
jle
push
out
int
add
outsl
pusha
pop
jae
add
call
mov
pop
mov
push
adc
popa
outsl
jae
test
cmp
mov
lret
mov
xorb
xor
fcomp
push
sbb
bound
test
inc
lcall
push
sbb
sbb
rorb
add
jbe
cld
iret
add
fst
in
es
dec
test
rol
pop
shl
sub
pop
cmpb
add
ds
pop
jl
ljmp
mov
fwait
xchg
sbb
in
lods
add
out
or
stos
xchg
inc
sbb
push
and
cmp
fdiv
mov
hlt
adc
and
shlb
cltd
popf
fistl
xchg
jbe
add
mov
dec
and
sub
fwait
clc
add
lret
inc
stos
lcall
and
fiadds
push
mov
or
stc
nopl
in
out
out
rcr
or
adcb
sbb
add
pop
lahf
sti
mov
adcb
add
sub
in
imull
stos
xor
clc
add
dec
xchg
enter
adc
lods
sbb
ret
ljmp
aam
sub
push
xlat
mov
jae
jge
adc
sti
jnp
add
rcr
cli
mov
rorb
lods
mov
mov
jnp
xchg
int
lods
lahf
add
cwtl
lret
mov
ss
sbbb
imul
jno
inc
roll
mov
sarl
add
sub
dec
lods
loopne
mov
fcompl
inc
mov
mov
add
push
clc
or
fcmovnu
jae
in
rcl
jne
loop
push
outsb
adc
addb
dec
lods
subb
ret
push
mov
dec
cmp
out
add
bound
xchg
cmp
cwtl
mov
lahf
addr16
jecxz
push
inc
stos
mov
in
xor
add
dec
or
xor
lret
cmp
pushf
ja
rclb
sub
cmp
cmp
mov
cmc
mov
or
xchg
ret
mov
nop
rclb
sbb
inc
or
xor
aas
addb
xchg
and
add
loope
imul
test
mov
jl
xchg
add
addr16
push
dec
jnp
jle
lods
loop
adc
jae
nop
or
lock
add
roll
pop
jo
add
inc
mov
adc
inc
stc
ror
mov
xchg
lods
add
push
xchg
pop
aas
enter
add
push
ret
out
sub
mov
out
xchg
and
pop
js
inc
add
fbstp
cltd
sbb
in
add
xor
outsb
jmp
adc
incl
cmp
es
xlat
adc
subb
xor
add
add
shlb
mov
sub
repnz
fidivs
rcrl
add
sub
xor
dec
or
aas
adc
imull
loope
int
add
stc
xchg
jns
sbb
inc
mov
mov
lock
test
faddl
call
and
out
lret
hlt
addr16
cmp
mov
out
callw
hlt
pushf
stc
add
jb
scas
add
inc
rcl
cmp
add
out
mov
sbb
adc
fidivl
add
int3
pop
mov
jmp
rclb
cmp
mov
repz
sbb
adc
xor
mov
or
push
pop
mov
or
loope
add
adc
and
adc
jb
ret
pop
cli
popl
mov
fwait
jl
fiaddl
jno
add
mov
scas
xorb
xchg
sarb
cmp
inc
and
enter
testb
pusha
xor
aam
mov
clc
sbb
js
jl
add
mov
mov
andb
enter
lret
ret
mov
jno
and
mov
and
cmp
add
xor
test
repz
stos
mov
xchg
in
rcll
es
dec
add
fidivl
test
mov
mov
add
sahf
xchg
out
sbb
push
mov
stc
add
sbb
ds
jl
add
pop
sub
mov
popf
push
add
jnp
xchg
inc
jno
mov
mov
xor
cmp
mov
loopne
adc
out
add
or
or
ret
add
pop
sarb
jle
mov
and
sub
enter
add
test
sbb
fsts
cmp
test
sbb
add
xchg
add
adc
mov
pop
xor
repz
aad
push
dec
cmp
xchg
cmpsl
ret
add
adc
aaa
into
sbb
paddusw
adc
popf
arpl
cmpsl
mov
xor
adcb
or
or
lahf
mov
leave
js
scas
daa
or
popa
lret
mov
ret
lock
fisubrs
cmpl
add
adc
pop
adc
sub
nop
je
testb
mov
ds
dec
pop
jecxz
jle
imul
clc
xor
add
scas
cmpsb
nop
mov
xchg
flds
imul
loope
add
dec
ljmp
data16
enter
add
pop
mov
out
xor
fists
jnp
int3
cmp
fs
xchg
or
add
xchg
fsubr
xor
js
andl
mov
daa
mov
aaa
lock
add
call
add
cmovne
test
or
push
dec
add
mov
pop
stos
js
rcrl
stos
push
dec
cltd
xchg
mov
les
mov
loopne
cwtl
hlt
add
or
sub
enter
mov
sbb
scas
push
add
out
inc
iret
test
stc
fldt
ficomps
or
push
add
sbb
xorl
or
mov
sbbl
lea
mov
mov
hlt
ds
push
adc
movsb
sub
cwtl
inc
or
fwait
inc
roll
orb
xor
and
lcall
cli
mov
dec
rcl
les
jecxz
add
leave
mov
dec
mov
sbb
mov
pop
pop
xor
mov
jl
cmp
sub
jecxz
mov
mov
stos
add
orb
sub
add
jle
add
dec
mov
push
cmpsl
xlat
stc
jae
xchg
inc
in
and
in
add
add
add
incb
xchg
sbb
xlat
insb
lods
in
inc
add
test
push
push
leave
push
mov
dec
pop
xor
jns
dec
scas
sbb
leave
add
xchg
mov
arpl
add
aaa
cwtl
int3
dec
push
scas
jo
stos
cmp
add
sbb
mov
jmp
imul
cwtl
add
outsb
mov
jg
test
out
mov
test
add
sub
and
cld
jle
add
into
mov
pusha
xchg
mov
sbbl
fcomip
in
add
and
sub
sub
je
aad
sbb
jne
and
mov
mov
and
aam
rorb
xor
sarb
push
and
loope
cmp
push
aam
and
mov
cmpl
mov
int3
sub
cmp
push
sub
xor
lods
jnp
test
jb
test
dec
add
or
rcr
lea
mov
jbe
dec
test
sub
add
push
or
xchg
hlt
add
icebp
inc
lret
xlat
and
aad
add
int3
repz
dec
cmp
mov
mov
jp
mov
shll
js
jg
in
bnd
adc
cli
nop
shlb
push
out
jb
add
xor
dec
or
add
add
mov
and
arpl
sbb
xlat
cmp
jp
xor
cmpsb
int3
add
xor
daa
and
push
sbb
sti
jmp
pop
jg
decl
xchg
cmp
and
subl
test
lret
cli
pop
add
adc
sub
repz
push
ljmp
call
jae
into
pushf
adc
aaa
cmpsl
add
stos
jno
pop
mov
pop
sub
pusha
shrb
inc
sub
pop
or
and
test
jl
mov
inc
mov
pop
es
mov
ljmp
inc
mov
aaa
cmpl
xor
sbb
jmp
in
jae
add
sbb
add
rcrl
movsb
add
mov
push
add
test
fisubrs
push
fwait
adc
inc
mov
dec
jl
add
pop
ds
nop
repnz
dec
cs
cmp
movl
lds
adc
stc
add
mov
es
mov
rolb
push
mov
mov
sbb
cmp
stc
push
fxch
or
push
cmp
push
rclb
cmp
pushf
inc
add
je
daa
adc
add
mov
xchg
cld
shll
xor
shr
inc
xchg
cli
xchg
pop
enter
int
in
ss
repz
out
jnp,pn
cmp
pop
pop
xchg
or
shlb
jge
int3
adcb
enter
movsb
jno
add
add
and
rcrb
test
stos
addb
leave
cmp
adc
fsubl
inc
sub
xchg
inc
inc
cld
cmp
and
ja
pop
bound
sbb
mov
fwait
add
sarl
adc
aaa
jg
inc
xchg
push
mov
jno
cli
imul
add
fiadds
cmpsl
jbe
dec
xchg
add
aas
loopne
scas
add
cmc
adc
dec
jb
add
lret
inc
int3
xchg
mov
push
insl
sarl
jo
sbb
loopne
ret
and
sbb
cmp
stc
push
ja
movsb
loope
inc
jo
test
popf
jle
xchg
les
fldt
cltd
mov
push
shlb
pop
aaa
in
add
or
mov
add
xchg
xor
fisubl
rorl
dec
xor
sub
cmp
inc
movsb
adc
add
dec
jle
mov
mov
cli
daa
pop
mov
sub
sub
cmp
movsl
mov
xor
cmp
or
packssdw
mov
cwtl
mov
loopne
push
add
xchg
loopne
jbe
xchg
jnp
in
je
pop
mov
pop
into
idivb
dec
and
push
jae
pop
add
add
jmp
xorb
lret
sub
add
push
jne
clc
add
addb
add
xor
jbe
or
into
adc
addb
dec
add
mov
push
xor
push
lods
and
cmp
push
inc
sarl
roll
in
dec
jne
jo
sub
add
sbb
movswl
add
sarb
loopne,pn
jne
xor
sub
add
ret
leave
aas
or
jmp
add
or
iret
cmp
jb
pop
lahf
mov
add
outsl
out
and
notb
add
nop
mov
push
and
jbe
push
aas
sete
jne,pt
arpl
in
test
pop
push
cld
pusha
test
cwtl
dec
add
cs
movsl
dec
cmp
push
fadds
cltd
mov
imul
mov
cli
mov
icebp
shlb
das
pusha
jno
rcl
les
push
test
ja
ja
jo
adc
movsb
mov
mov
loopne
mov
push
loopne
pop
movsl
iret
and
adc
mov
mov
jae
add
cld
push
add
and
pop
out
nop
enter
mov
shrb
out
js
fistpll
insb
or
insl
mov
push
push
ret
arpl
fldenv
std
mov
mov
sbb
call
addr16
xchg
das
pop
lods
subb
mov
inc
hlt
sbb
fcoml
insb
repz
hlt
pop
add
jp
cmp
call
fdivl
lods
jg
push
add
ret
cs
mov
jae
jecxz
sbb
negl
dec
mov
into
inc
add
adc
add
pop
adcl
sbb
mov
or
call
jae
add
add
repnz
and
int
jmp
call
test
icebp
sbb
js
add
stos
push
xchg
cmc
imul
pop
sbb
xchg
add
jecxz
fsubrs
test
pop
push
push
pop
imul
psrad
xchg
rcrb
mull
mov
imul
or
push
lods
jb
pushf
sbb
push
add
pop
arpl
jno
rolb
loope
mov
mov
add
push
lcall
aas
sbb
pop
push
pop
movsb
lods
scas
adc
shrl
adc
lahf
cltd
fisubl
shl
arpl
pushf
add
push
inc
dec
add
mov
inc
lods
xchg
in
and
and
pop
cmp
or
pop
add
sub
cwtl
push
adc
xchg
lods
and
fwait
jp
push
dec
add
idiv
mov
mov
mov
iret
test
inc
adc
ret
cmpb
sarb
push
add
add
sbb
pop
cmpsl
pusha
add
sbb
jmp
add
data16
xchg
push
icebp
sbb
in
outsb
cmp
inc
add
roll
jl
rol
imul
imul
xor
leave
data16
je
push
psubusw
mov
fisttps
jmp
jnp
pop
inc
sahf
add
int
adc
shrb
adc
mov
fcoml
add
or
and
sbb
inc
leave
add
scas
sbbb
mov
add
test
mov
add
fidivrs
pop
inc
xor
dec
mov
mov
inc
push
jmp
or
pop
jno
dec
mov
loopne
push
stos
mov
mov
outsl
dec
outsb
inc
add
or
pop
cwtl
cmpb
pavgb
jo
test
mov
sbbb
movsb
js
dec
leave
jne
add
push
pop
xchg
add
pop
in
add
cmp
in
loope
ds
xlat
xchg
push
imul
fiaddl
insb
inc
in
pop
fwait
jae
add
mov
in
push
daa
pavgw
cmp
jnp
xorb
add
xlat
sbb
out
jae
xchg
dec
lock
push
xchg
addr16
popf
pavgw
mov
pop
ret
adc
adc
hlt
mov
fsubl
add
sub
ror
orb
icebp
jno
sbb
push
lret
push
pop
shlb
dec
add
xor
jp
cs
add
sbb
push
mov
aaa
pop
inc
int
divb
out
mov
inc
sti
mov
outsb
jl
test
and
or
mov
mov
cltd
jae
gs
idivb
aam
adc
mov
and
adc
push
add
mov
push
lahf
add
ljmp
add
subb
outsl
dec
dec
pusha
loope
push
or
add
jnp
adc
in
ret
adc
mov
add
jbe
jecxz
rolb
add
movsl
in
pusha
jp
dec
test
add
cmc
std
dec
mov
test
iret
mov
cmpsb
movsl
xor
popf
sbb
jo
pusha
or
pop
mov
out
loopne
adcl
repnz
add
push
xchg
ljmp
testb
mov
dec
aas
cmp
mov
orl
imul
mov
out
dec
in
add
xor
testb
adc
jae
xor
or
pushf
insb
add
fsubs
fs
rclb
cmp
dec
sub
jle
adc
and
or
std
fxch
inc
shrb
push
int3
jmpw
push
insl
nop
add
aam
mov
cmp
cmpsl
call
into
cmp
test
nop
fisttpl
pop
shrl
orl
mov
clc
je
add
leave
mov
aam
enter
push
ret
pusha
sbb
mov
lret
push
mov
push
xor
test
fs
testl
mov
popf
fs
sbbb
sub
sbb
enter
cmp
cmc
or
sub
mov
sub
jns
loop
subl
push
cmpxchg
aaa
andb
jb
push
xchg
mov
int3
dec
xor
mov
adc
cmp
pop
cli
add
cmpl
push
mov
scas
loopne
mov
out
outsb
inc
pop
and
add
push
arpl
call
dec
or
mov
xchg
jbe
lods
mov
sbb
nop
rolb
inc
adc
jmp
add
pop
add
push
cli
mov
call
lret
ja
add
add
mov
push
fstl
jns
add
pushf
subb
rcrb
cmp
leave
ret
mov
add
shrb
popf
mov
lahf
add
gs
sub
add
fcompl
xor
in
add
test
outsb
and
ljmp
mov
sub
addl
insl
cmpsl
loopne
movsb
mov
scas
cmpl
addb
rcll
sub
movsb
sarb
push
les
arpl
cmp
add
iret
sbb
jo
stos
jbe
jecxz
popa
pop
incb
cmp
test
add
inc
cmpsl
xchg
insl
rorb
out
sbb
xchg
xor
filds
xor
sahf
dec
out
add
nop
ficoms
pop
pop
push
add
mov
or
add
scas
lahf
push
dec
cld
test
jo
sbb
shl
and
icebp
aaa
movsb
add
imul
movb
cmp
out
add
and
push
mov
pop
pop
subl
jb
cmp
adc
addl
fisubrs
adc
xorb
cltd
add
stos
dec
push
add
js
jmp
push
lcall
sahf
cwtl
mov
cmp
shlb
jecxz
in
clc
xchg
jns
jbe
or
hlt
aam
mov
andb
mov
push
popa
adc
test
movq
mov
xchg
dec
mov
or
es
push
adcb
mov
les
lea
and
and
cmp
or
sbb
xchg
sbb
dec
mov
and
add
bound
adc
loop
dec
mov
inc
repz
movsb
fildl
adc
repnz
aam
les
cmp
call
xor
jge
in
lods
add
lahf
rorb
xchg
add
or
int3
and
push
add
and
cmc
mov
rcrl
pushf
subb
cmc
fldcw
je
pop
mov
in
cli
add
add
in
mov
add
mov
sbb
add
loopne
mov
inc
sub
nop
add
dec
or
sbb
std
imul
pop
pop
arpl
mov
add
jo
add
mov
add
inc
mov
es
insb
jecxz
pop
jl
add
adc
inc
pop
add
jg
dec
or
cmp
jns
inc
lahf
inc
fnstsw
movsl
in
and
or
sub
cmpsb
lock
cmp
loop
mov
push
pop
mov
hlt
pop
sbb
add
loopne
cli
or
xchg
push
ret
cmpsb
shl
xor
mov
add
or
push
pop
pop
inc
push
je
lods
test
sbb
cmp
in
call
adc
fwait
pop
fisttpl
les
cmp
imulb
sahf
add
pop
ss
jmp
xchg
add
nop
ror
mov
addr16
femms
pusha
push
dec
push
stos
adc
xor
add
adc
inc
inc
in
push
pusha
test
adc
push
cmp
std
subl
push
call
pminsw
jne
mov
addb
push
sti
mov
push
push
inc
mov
or
pop
jmp
mov
add
loop
sub
pushf
push
dec
sbb
imul
add
cs
add
pop
mov
fmull
jo
scas
pusha
add
push
dec
aad
popf
fadd
or
mov
add
notb
loopne
cmp
mov
std
mov
int3
lds
in
adc
and
hlt
add
inc
pop
sub
add
addl
mov
add
adc
sub
xchg
daa
fists
pop
push
pop
dec
jbe
mov
dec
mov
imul
cmp
jmp
int
ss
cmpsl
lcall
outsb
dec
add
inc
shlb
clc
mov
femms
lods
xor
rol
rcrb
xchg
lods
and
popf
movsb
fs
dec
cltd
push
add
negl
xchg
jmp
mov
jecxz
adc
in
clc
xchg
ss
pop
insl
scas
or
or
lea
add
inc
bound
adc
sub
mulb
add
fadds
dec
cld
rorl
sbb
loope
negl
pop
xchg
into
sti
cli
jmp
push
int3
sbb
add
pop
jmp
mov
inc
insl
dec
jmp
sbb
pop
xchg
orb
and
xchg
adc
add
insb
fsubr
in
add
sbb
rcrl
je
cli
mov
and
jl
insb
lcall
aas
dec
xorb
mov
push
xchg
dec
test
data16
repz
out
in
leave
add
repnz
mov
cmpsb
sbb
jmp
mov
pusha
pusha
cwtl
xor
in
dec
mov
lods
mov
addr16
jmp
ljmp
add
cwtl
push
add
add
shr
mov
xor
cmp
popa
cmp
fdivrs
push
add
mov
pop
imul
lds
cmp
out
add
std
mov
enter
xorb
mov
jmp
add
mov
nop
cs
xchg
add
mov
jne
mov
lret
lcall
pop
out
pop
cs
adc
rcll
in
lds
sub
add
push
leave
stos
cs
sub
sub
into
or
add
fsubrs
jmp
lret
add
ret
mov
rolb
incl
xorb
jo
sarb
jne
and
negl
bound
dec
inc
sub
leave
test
subb
add
and
xchg
add
ja
xchg
mov
int3
mov
aas
mov
push
xor
jmp
add
push
int
gs
repz
repnz
or
les
mov
add
xchg
push
mov
jecxz
or
mov
jmp
cld
gs
jl
add
mov
pop
dec
pop
xchg
jge
xchg
xchg
adc
mov
jno
push
dec
out
mov
jmp
add
sbb
test
add
jno
push
cmp
fcomps
jae
mov
out
mov
xchg
dec
pop
orb
insl
sub
push
mov
lea
xchg
inc
add
cmp
lret
and
cld
repnz
add
adc
dec
int3
push
ljmp
jle
and
ds
nop
flds
xchg
pop
cmp
sbb
aad
jnp
ja
inc
xor
cli
cmp
mov
push
daa
leave
sahf
insl
testb
inc
dec
movb
ja
lahf
jl
mov
push
xor
xchg
jns
push
jne
add
pop
xchg
pop
inc
adc
out
xchg
push
insl
and
adc
enter
pushf
add
sub
mov
gs
scas
adc
cli
push
or
jae
and
add
call
push
add
loopne
add
es
rcrb
ret
jno
test
daa
ljmp
push
pop
lahf
xchg
dec
nop
or
xor
add
sub
and
xchg
sub
pusha
lret
sbb
popa
sbb
aas
cmp
push
mov
mov
outsb
dec
cltd
out
inc
push
pop
mov
hlt
adc
insb
add
daa
subb
arpl
add
gs
ja
xor
loope
cmc
pop
add
rcll
hlt
enter
adc
push
call
or
sbb
jns
xor
and
cli
in
push
orl
add
rcr
jnp
pusha
test
lcall
loop
push
fstpt
or
xor
lock
add
in
adc
outsb
adc
mov
inc
iret
lss
add
pop
push
xor
rorb
add
aas
fwait
rolb
mov
mov
lock
pop
mov
dec
add
xchg
inc
and
fwait
dec
lods
loop
add
es
out
cs
popf
cmp
and
ficompl
jmp
mov
add
jl
lds
data16
add
cs
add
jo
add
xor
ja
add
cmp
push
mov
add
sub
sbb
mov
add
jb
xor
jg
jl
loopne
scas
dec
inc
stos
add
cmp
les
inc
mov
cltd
push
add
xor
sahf
imul
lds
cmovge
rcll
es
adc
call
jo
add
and
rclb
rclb
inc
push
daa
insb
ljmp
add
mov
roll
mov
xchg
xor
xor
shll
adc
movsl
lahf
nop
rolb
outsl
dec
jge
fdiv
push
mov
sub
and
popf
sub
jecxz
adc
mov
jnp
xchg
pop
add
je
cwtl
repz
xchg
out
fadd
lahf
xorb
rcrb
add
in
out
fs
pusha
xlat
daa
aad
imulb
out
pop
fisttpl
mov
out
add
les
frstor
test
jns
lods
mov
cld
or
and
add
rcrl
repnz
mov
nop
fisttpl
cltd
sub
fimull
xor
aas
or
sbbb
out
xchg
testb
imul
mov
enter
loope
inc
insb
repnz
jmp
or
pusha
pop
dec
pop
push
bound
add
in
in
jae
or
ja
push
insb
dec
pop
push
sbb
mov
xor
popf
push
cmp
jp
lret
add
rolb
push
add
xchg
push
lcall
loope
cmc
jo
add
les
ss
mov
sbb
push
subl
cli
cmp
out
jno
test
pop
xor
add
push
cli
into
add
shrl
or
cmp
in
adc
adc
rcll
mov
out
push
pop
push
cltd
mov
sbb
bound
imulb
inc
pusha
rolb
adc
lds
addb
fs
cld
sti
push
mov
inc
cld
add
dec
mov
test
jbe
pop
fisubrs
out
aam
cli
dec
je
push
inc
insb
or
jo
push
jns
scas
or
mov
repz
add
je
fildl
fdiv
xor
iret
nop
bound
leave
mov
test
outsl
neg
adc
sub
or
lods
dec
lock
and
push
in
add
pop
ret
ffreep
mov
jge
cmpsl
pop
test
mov
push
add
pop
mov
popa
add
mov
xor
xor
pop
jno
pop
out
push
jmp
ficoms
add
adc
imul
stos
sarb
cmp
inc
out
ja
jmp
in
cmpsb
sub
mov
jae,pn
add
fs
lret
jecxz
loope
xchg
mov
inc
inc
and
xor
js
fcomps
fistpl
gs
je
jg
pinsrw
lods
push
in
ss
pop
lcall
xor
js
adc
sbb
jne
cmp
mov
mov
scas
add
pop
imul
nop
scas
pushf
lahf
add
sub
arpl
jecxz
sub
and
mov
add
or
cmpsb
icebp
push
fiadds
dec
xchg
int
mov
outsl
mov
inc
or
and
add
jmp
jnp
adc
loope
jbe
pop
sahf
push
or
pop
insl
cmp
mov
movsl
and
loop
in
and
enter
xchg
scas
cli
xchg
and
pop
or
xor
movsb
cmpsl
int
add
fucomp
sti
mov
push
jle
push
in
xchg
xor
loope
stc
lds
jns
cld
imul
out
mov
pop
test
push
int3
and
mov
jb
scas
sbbl
adc
mull
popf
loope
rcrb
sbbb
in
add
addb
fcompl
or
pop
jo,pt
lock
and
mov
sub
add
jg
out
push
iret
mov
daa
add
jl
dec
pusha
cmpb
cld
mov
bswap
push
addr16
cmpsb
je
sbbb
stos
xor
out
mov
inc
xor
hlt
loopne
sti
inc
add
iret
outsb
test
cmp
add
fldenv
das
add
imul
jle
push
mov
out
or
or
add
mov
mov
cmp
push
jbe
gs
pop
cmp
dec
push
xchg
and
push
loop
dec
jo
shlb
mull
push
fstps
lret
add
sbb
mov
ret
call
sbb
adc
inc
dec
filds
nop
and
mov
dec
sub
adc
dec
imul
jg
in
sub
mov
popa
movsl
fildll
pop
mov
and
cmp
inc
push
cmp
in
push
pop
fwait
icebp
inc
mov
ret
add
xor
jl
mov
aad
add
clc
add
lret
inc
inc
sahf
sub
cmc
test
push
adc
add
aam
fnstenv
pop
xor
pop
cmp
jp
push
add
and
inc
aas
cmpsl
cld
inc
jl
addr16
dec
adc
in
aam
data16
push
ds
mov
pusha
je
dec
mov
xorb
inc
pusha
in
push
push
cmp
jp
add
in
repnz
add
shll
xchg
push
sbbl
pop
test
jp
mov
pop
add
popa
add
mov
lret
and
jg
inc
jae
push
data16
imul
add
jns
loop
nop
fs
sub
jecxz
test
mov
pop
sbb
and
pop
sbb
fisttps
sbb
out
adc
shll
sarl
fchs
aaa
add
sub
ja
divl
xor
add
das
out
daa
pop
sbb
jg
mov
inc
xlat
cmp
add
iret
out
cmpsl
scas
popl
cmp
int3
inc
mov
es
andb
aas
fisttps
add
daa
or
cmc
faddl
pop
and
jmp
xor
adc
add
mov
pop
stc
insl
mov
into
push
dec
jnp
add
gs
mov
push
inc
add
mov
aas
les
mov
mov
imul
test
repnz
lock
pop
js
inc
push
and
mov
pop
pop
mov
sahf
ret
add
jmp
add
mov
leave
mov
fdivl
add
dec
cmp
adc
imul
jae
lods
out
xlat
int3
add
lock
lahf
add
les
xchg
imul
pop
jecxz
lret
or
stc
adc
ljmp
mov
insl
cmc
cld
test
icebp
aas
xchg
mov
in
jo
xchg
pop
add
push
mov
add
outsl
mov
jo
jp
nop
mov
mov
in
movb
nop
sbb
lods
pusha
cwtl
cmc
xlat
pusha
xor
sub
mov
ss
in
pop
aaa
xchg
push
loop
sbb
mov
or
xchg
data16
fsts
lahf
push
test
add
xor
and
add
decl
or
stos
lcall
xor
rolb
jb
cmpsl
add
push
push
sub
dec
add
jne
xorb
jnp
add
adc
sbb
pop
push
insl
movsb
xor
sbb
or
push
sub
push
mov
jo
xchg
pop
adc
add
data16
cmp
test
jnp
call
xchg
add
pop
outsl
mov
add
cmp
mov
pusha
clc
jge
cld
sub
add
push
mov
es
call
test
mov
cmp
ret
je
mov
xchg
nop
jo
jl
jb
xchg
in
adc
faddl
pop
in
outsb
mov
in
jns
sbb
sub
ljmp
or
cmpsl
jmp
aam
pusha
ret
in
xchg
sub
add
rorl
add
push
repz
and
sub
enter
cli
enter
jbe
add
pop
das
out
addr16
dec
fs
aad
mov
add
out
flds
mov
inc
test
enter
popa
in
sub
loope
adc
or
dec
push
dec
in
aad
dec
aas
repnz
inc
mov
fimuls
push
rcrl
mov
iret
cwtl
es
xorl
mov
xor
pop
lods
mov
push
scas
js
xor
rcrb
xchg
pop
push
add
ss
out
sub
fldl
insb
stos
shr
jge
mov
add
cli
add
pushf
addb
add
mov
js
add
xchg
leave
xchg
dec
inc
mov
mov
call
pop
pop
scas
jp
rclb
xor
jo
nop
xor
dec
fistl
pushf
call
xlat
movsl
dec
sub
ds
lret
jmp
lock
add
clc
loopne
mov
push
sub
fbld
sbb
rcrb
or
xchg
add
sub
cmp
xchg
outsl
shlb
add
pop
pushl
dec
sub
add
or
test
int
xor
add
dec
pop
xlat
sub
inc
in
clc
fidivs
aaa
hlt
inc
fs
nop
mov
fwait
repz
xor
adc
das
mov
test
lods
inc
js
daa
sbbl
jle
push
push
mov
xchg
mov
mov
pop
fnstsw
shlb
aad
adc
sub
add
push
mov
ss
pop
xchg
jmp
add
rcrl
shr
mov
or
mov
pmullw
rorl
sbb
add
add
out
ret
push
aaa
pop
mov
cmp
jae
shr
dec
outsb
lea
jecxz
add
inc
adc
dec
push
mov
or
push
dec
adc
pop
je
xchg
xor
pop
mov
shlb
lock
mov
or
add
jecxz
or
jbe
xchg
sbb
add
mov
loope
bound
mov
push
inc
xor
add
or
push
enter
rclb
pusha
xchg
and
adc
and
add
jp
inc
push
add
adc
add
stos
mov
add
fnsave
ret
dec
ja
add
repnz
add
xchg
add
int
cwtl
pop
testl
clc
xor
add
jl
jbe
mov
jg
mov
or
dec
aaa
hlt
add
sbb
daa
fadd
push
ds
mov
add
icebp
mov
loopne
xor
xchg
adc
sbb
mov
in
shrb
add
inc
imul
or
xor
adc
inc
mov
loope
or
out
push
or
mov
jmp
pop
inc
mov
add
pop
cs
test
add
rep
jns
add
fadd
cltd
pop
cmp
xlat
incb
sbb
mov
xchg
das
push
cmp
add
ret
test
mov
data16
xchg
es
jecxz
xorb
lcall
and
jne
push
xchg
mulb
rcrb
sub
or
into
and
add
xchg
dec
imulb
push
mov
sub
mov
dec
cmp
inc
mov
add
arpl
iret
movsl
stos
lods
add
xchg
or
add
lods
add
repnz
jo
das
xchg
aad
adc
addr16
xlat
shll
inc
andb
repz
in
or
icebp
in
or
lahf
fcmovnbe
mov
push
adc
add
aam
test
pusha
lock
aad
dec
add
filds
dec
fs
out
hlt
dec
mov
imul
jle
push
push
out
add
adc
mov
mov
or
sbb
data16
int
insb
jecxz
lcall
pop
out
add
ss
loopne
xor
xchg
or
dec
jb
sub
pusha
icebp
mov
pop
add
adc
push
rclb
push
leave
add
or
icebp
cmp
push
push
pop
movsl
insb
repz
stc
or
pop
ret
je
and
rcrb
cmp
testb
pop
lods
mov
push
in
xchg
fstps
cmp
add
std
add
cmp
xchg
xor
outsl
bound
js
jle
fwait
adc
xchg
pop
add
push
filds
dec
add
add
lcall
loop
test
shrl
fsubl
mov
inc
sub
inc
aad
dec
mov
cmpsl
and
and
and
xchg
inc
icebp
das
inc
push
inc
xchg
and
add
lock
xlat
jno
fnstcw
add
lcall
sub
gs
mov
mov
rol
inc
or
mov
and
mov
lods
push
push
orb
xchg
mov
add
xorl
xor
dec
jle
push
jmp
int
shlb
insb
mov
fisubl
cmpsl
lahf
popa
js
iret
add
insb
fildll
repz
lds
and
add
movsl
xor
push
jo
and
mov
mov
gs
pop
mov
fwait
mov
add
push
cwtl
mov
hlt
inc
push
call
pop
push
jmp
pop
ret
mov
xor
inc
jecxz
add
ja
add
add
pusha
rclb
jae
push
call
push
mov
add
ja
pop
sbb
add
inc
xor
mov
ds
adc
mov
pop
cmp
adc
mov
inc
js
add
std
mov
aaa
jae,pn
or
inc
sub
jg
push
or
add
fidivs
add
imul
enter
mov
pop
sbb
and
inc
ds
mov
add
subl
pop
rcr
in
imul
je
scas
frstor
insb
jp
pop
push
mov
nop
sub
decl
fsubs
xor
scas
orb
xchg
and
add
jno
out
add
or
mov
lea
lods
leave
pop
pop
and
into
push
add
jae
mov
or
lock
popf
sahf
adc
rolb
and
loop
sbb
xchg
add
pop
inc
test
xor
ds
pusha
mov
shlb
mov
push
or
add
sarb
push
stos
add
movsl
lahf
adc
lret
orb
test
movsb
jecxz
add
pop
notl
scas
pop
lret
xor
mov
pusha
and
adc
xchg
xadd
rcrb
cmpsb
push
add
cmp
add
add
adc
add
fcmovnu
popa
ror
incb
push
sarb
cmpsl
inc
cli
imul
je
xchg
call
adc
roll
loope
cmpsb
or
push
ds
jne
fadds
mov
inc
push
adc
mov
data16
out
mov
les
jge
mov
fprem
imul
js
and
and
outsl
inc
or
and
pushf
gs
push
lds
rcl
add
dec
test
test
ud0
xchg
xlat
cmpsb
jno
add
mov
cmp
jl
mov
add
fdivrs
cmp
bound
add
lods
sbb
add
adc
ficoms
dec
add
dec
pop
nop
sub
leave
xor
hlt
jmp
shll
xor
push
mov
rol
add
dec
jmp
sub
xchg
stc
imul
cltd
js
add
cmp
mov
pop
jle
jns
pop
repz
insb
or
add
mov
xchg
les
or
sub
xchg
cli
subb
in
cmp
adc
add
pause
xchg
xchg
adc
test
jb
cmp
add
inc
pop
inc
cmp
mov
cmpsb
pop
sbb
clc
int
mov
push
dec
stc
jmp
pop
fists
outsl
stos
leave
pop
inc
add
cltd
call
cmp
and
movsb
add
scas
notb
cmp
push
bound
xor
test
adcb
pop
js
add
inc
scas
js
pop
icebp
fs
ds
aam
nop
fwait
pop
out
and
pop
mov
lea
stos
sbb
imul
pop
in
sbb
fstps
cmpxchg
push
adc
sbb
test
outsl
xchg
add
sub
lock
jb
mov
sub
ja
jb
loop
adc
or
loope
call
cld
add
pop
dec
pop
and
iret
inc
jnp
cmpsb
fnstcw
fwait
loope
cmp
inc
jb
xor
das
push
xor
or
push
mov
add
shrb
adc
jbe
and
xor
push
xor
hlt
add
ljmp
xor
lret
sub
sbb
jl
addb
js
das
add
xor
add
xor
jge
mov
popa
jp
mov
or
movsb
out
fiaddl
cmp
ja
cmc
jmp
push
incb
ficoms
ss
shlb
sub
push
ret
push
ds
mov
mov
out
mov
rorb
jno
lds
push
push
addb
sbb
add
iret
cmp
and
add
push
frstor
push
jl
and
int3
loop
push
add
sbb
iret
dec
int
sbb
add
and
popa
es
sub
and
dec
xchg
push
or
not
jnp
sub
rep
or
popa
fisttps
dec
sub
push
or
hlt
nop
cmpb
out
stos
push
shrb
jb
adc
insl
fistps
dec
jecxz
pop
mov
test
xlat
pop
jl
add
pop
mov
mov
dec
out
loopne
mov
mov
cmpb
fwait
mov
ljmp
xchg
xor
add
push
pop
adc
add
jmp
pop
mov
add
jne
out
inc
sbb
setg
jno
add
push
add
lret
jo
sarl
adc
orb
fisttpll
mov
add
aam
lcall
sbb
lds
pop
insl
xchg
jle
add
mov
imul
xor
into
inc
add
dec
xor
xchg
scas
addb
notb
or
mov
lcall
pop
pop
arpl
adc
mov
rol
lock
pop
fisttps
das
out
jg
add
dec
cmp
fstpt
std
add
pop
ror
cmp
loop
push
arpl
gs
xchg
ret
ljmp
nop
mov
mov
fisubs
and
add
jae
sbb
sub
jo
in
add
dec
inc
cmp
clc
jmp
cmp
lcall
inc
rolb
xchg
and
jge
add
das
jl
sbb
xor
jns
fs
add
fidivs
ret
jae
lds
scas
movb
imull
stos
lods
lock
rorb
pop
jge
jae
dec
rcll
pop
aas
es
jne
adc
mov
fbstp
mov
add
sarb
mov
add
mov
and
push
add
xchg
daa
xchg
jecxz
lds
pusha
jb
mov
or
mov
or
imul
lods
js
push
cmpsl
push
or
and
in
add
inc
cmc
mov
cmpsb
or
ds
adc
mov
add
jo
add
inc
xchg
lock
je
adc
pusha
lea
jge
popl
adc
shlb
cld
add
xchg
jmp
jp
add
pop
pusha
xchg
sahf
push
add
mov
mov
add
xchg
add
or
sub
daa
add
mov
out
gs
arpl
fsubs
jo
or
add
add
arpl
xor
dec
lods
rclb
pop
mov
inc
and
lret
mov
das
add
add
cmpsb
bound
int
out
add
dec
cmp
mov
xchg
nop
push
sbb
mov
pop
jp
or
pop
inc
daa
jnp
xlat
scas
scas
lahf
addb
sbb
daa
fstpl
mov
hlt
aas
test
mov
sahf
sub
ljmp
rcrb
inc
imul
push
je
xchg
jns
add
add
mov
jecxz
dec
lock
xchg
xor
or
add
pop
adc
rcrb
mov
xchg
add
mov
icebp
and
add
test
dec
add
pop
pop
xorl
adc
add
and
icebp
hlt
arpl
add
inc
jmp
pop
lock
idivb
loopne
jbe
rcrb
dec
add
push
gs
add
xchg
jmp
add
insl
adc
and
lret
push
xor
rolb
push
js
cli
je
and
in
cmp
aad
test
push
cmp
mov
pop
xor
add
aaa
imul
mul
add
aam
cmp
inc
jns
cltd
sahf
loop
rorb
or
sub
dec
cmp
in
xor
cmp
mov
cmp
jb
pop
adc
mov
mov
add
mov
push
dec
loopne
cmpb
push
jb
jmp
fists
push
cwtl
mov
and
jns
fstl
insl
shl
inc
rolb
xor
ror
xchg
out
dec
lods
test
movsl
and
popf
sbb
pop
xchg
add
mov
into
ret
clc
dec
repnz
pop
pop
das
pusha
es
sub
ret
pop
fxch
inc
aam
fidivs
les
jne
dec
mov
and
inc
shlb
mov
sub
lea
add
cmp
push
loopne
jl
loopne
aam
nop
fistl
int
pop
sbb
gs
sbb
int3
jne
and
sbb
test
imul
lcall
test
dec
clc
cmpb
pop
lret
adc
mov
add
sbb
xchg
fwait
xor
aas
ja
add
jecxz
mov
jo
mov
insb
inc
fdivp
pop
addb
xlat
cld
mov
ret
and
add
lock
mov
lret
fdivrp
loopne
or
bts
jmp
iret
push
rcll
pop
xor
stos
cs
dec
dec
push
pop
loope
out
add
inc
pop
pop
jo
mov
scas
inc
push
add
inc
pusha
pop
cmp
pop
add
in
jecxz
pop
mov
add
iret
sub
out
or
faddl
cs
xor
dec
xchg
or
sbbl
stos
mov
call
add
add
mov
imul
mov
mov
int
shll
shl
adc
mov
test
jnp
mov
fstps
cs
cmpsb
dec
aad
xor
loope
jg
mov
dec
add
ret
sub
loopne
mov
jp
js
add
and
faddl
sbb
sbbb
mov
ror
mov
add
mov
out
ret
cmp
test
cwtl
push
test
mull
iret
lock
jo
add
int
sbb
inc
fs
popa
shlb
std
add
push
loopne
mov
mov
xor
sub
add
mov
loopne
add
lods
dec
push
movsl
aam
adc
scas
jb,pt
xor
inc
int
mov
aad
test
add
add
adc
or
add
xchg
dec
jo
lock
mov
cmp
add
push
pop
cli
pop
push
mov
xor
inc
inc
and
cmpb
xor
clc
clc
je
pusha
cmpsb
loopne
sbb
add
lcall
outsb
imul
into
add
mov
fistpl
hlt
pop
sbb
ja
or
mov
rsm
push
or
adc
mov
pop
adc
lock
mov
sbb
shlb
sarl
and
push
inc
test
sti
mov
or
jl
add
in
adc
or
mov
mov
sbb
mov
pop
adc
xchg
inc
jo
and
movb
and
in
xchg
movsb
add
sbb
jo
in
mov
aaa
add
cmp
call
mov
pop
push
mov
mov
mov
jge
shld
shlb
incl
inc
or
pop
add
inc
jno
data16
jg
push
adc
pop
sbb
mov
mov
dec
ljmp
and
mov
pop
dec
sub
pop
fsubrs
push
xchg
sbb
sbb
push
inc
push
push
cmp
loopne
dec
adc
movsb
sbb
pusha
mov
mov
push
rclb
push
rorb
mov
xor
es
add
sub
mov
jecxz
pusha
pop
jle
dec
mov
and
sahf
cmp
add
stc
in
add
repnz
popa
add
mov
pop
xchg
inc
push
sub
jmp
push
pop
dec
fildl
inc
dec
mov
imul
nop
sub
and
in
das
jge
add
adc
jmp
test
mov
ficoms
adc
dec
jb
add
jle
bound
add
sbb
insb
rcrb
cld
and
cmp
pop
push
add
add
push
jbe
add
pop
dec
pop
push
in
aaa
mov
stos
mov
fs
daa
mov
or
or
push
mov
ror
popa
int3
sub
xchg
pop
push
inc
sbb
cld
xchg
push
pop
pop
mov
enter
popa
loopne
js
dec
mov
stc
mov
jae
fwait
add
pop
or
inc
pop
mov
inc
clc
xor
pop
jns
push
testl
add
ror
add
xor
add
jnp
add
mov
add
xchg
or
mov
pop
nop
or
add
sub
sarb
js
test
shlb
out
je
push
sbb
fstps
pop
mov
dec
xchg
push
mov
adc
jne
add
pop
fwait
imul
ret
int
dec
sub
int3
inc
push
aas
ret
push
outsb
mov
test
repz
sub
add
fstl
xchg
or
lods
mov
pusha
push
roll
mov
andl
jo
or
bound
data16
jnp
xor
add
lret
and
and
dec
adc
sahf
je
add
stos
movsb
xchg
cli
xchg
push
adcb
sub
adc
loopne
xor
jecxz
pushf
ret
shrb
jge
xor
add
stos
sbb
xchg
sbb
int3
inc
shll
aas
add
push
xchg
out
adc
or
rcll
lock
sbb
daa
in
mov
pusha
lock
repz
jmp
std
fwait
xor
mov
dec
jp
ja
and
dec
add
lock
addb
or
sbb
jnp
popf
lods
mov
fistpll
xchg
sbb
setl
dec
jle
mov
push
insl
cli
jno
sbbb
pop
mov
mov
stos
xchg
cmpsb
jno
jae
add
rcr
dec
shrb
push
jg
and
add
xchg
clc
mov
mov
add
inc
pop
cmc
jbe
pop
mov
mov
push
sbb
loopne
leave
jl
add
lods
adc
inc
and
imul
mov
mov
xor
mov
imul
fisubs
cmp
stos
pop
and
loopne
test
dec
fs
and
add
bound
jle
xor
mov
lds
sub
add
pop
cmpsb
rcr
ja
addr16
push
ljmp
xchg
dec
jge
add
mov
pusha
xor
test
push
aas
mov
fcomi
cmc
jl
push
add
fs
subl
ffree
mov
push
push
add
and
out
xor
add
dec
xlat
xchg
arpl
leave
add
xor
cmpsl
lods
shll
sub
cli
add
fsubs
imul
dec
add
and
in
scas
cmp
jmp
fistpll
pop
int3
pop
sbb
jb
add
test
call
cmp
hlt
push
adc
jb,pn
xor
add
fs
dec
push
add
fwait
call
pusha
lret
inc
adcb
aam
xlat
call
call
jmp
mov
out
cli
push
push
pushf
cmp
pop
add
ret
push
jno
addb
add
mov
mov
outsl
dec
ret
inc
cmp
fstps
std
jmp
loop
jbe
jo
andb
inc
xor
fisttpl
stc
jb
jl
adc
or
arpl
mov
push
roll
daa
sti
int3
scas
xchg
bound
push
das
clc
pop
pusha
shlb
mov
or
call
jmp
aam
mov
gs
mov
sub
push
pop
roll
pop
xor
add
and
sub
add
aad
push
add
lock
cli
loopne
shlb
out
push
push
add
xor
outsl
adc
aam
cmp
arpl
imul
push
in
fcompl
pop
out
andl
xchg
pop
movsb
or
sbb
push
ds
fiadds
xlat
jg
inc
es
add
popf
adc
insb
ret
rorb
das
inc
mov
pmullw
stos
cld
in
or
push
and
or
add
ljmp
adc
sbb
sub
mov
pusha
mov
add
fiadds
bound
mov
rcrb
add
mov
inc
push
and
in
and
inc
inc
push
add
xchg
sub
cmp
repz
add
fnstcw
or
add
sbb
cmpsl
add
inc
and
add
mov
cmpsb
push
addb
mov
and
pushf
outsl
add
add
pop
loope
cltd
leave
mov
push
and
dec
lcall
add
and
shlb
sub
inc
push
xchg
push
push
jmp
sahf
mov
mov
mov
xchg
xchg
in
add
dec
mov
andl
js
clc
lret
ja
add
clc
daa
leave
pop
aas
push
lcall
cmp
mov
aam
popf
lea
jno
push
push
ja
into
ljmp
mov
mov
xlat
cwtl
cmp
add
cmp
pop
cmpsl
lods
pop
xchg
movsb
sbb
jae
sub
and
mov
or
in
mov
or
test
inc
push
pop
dec
mov
js
rcrb
mov
or
push
mov
cmovns
cmp
scas
ljmp
add
pop
popa
sahf
loope
sarl
push
in
imul
pop
inc
sub
jmp
incl
mov
xchg
or
add
mov
cmpsb
pop
add
in
jl
add
outsl
and
or
flds
push
lcall
add
xor
lods
add
aad
icebp
xchg
push
andb
lock
repz
lahf
xchg
ret
sbb
dec
sub
cmp
leave
daa
pop
and
mov
jo
inc
add
test
out
dec
sbbl
and
bound
inc
test
sub
pop
mov
inc
jl
sbb
lock
lcall
adc
test
xor
add
lock
adc
add
imul
jg
xchg
adc
dec
xchg
add
out
outsl
dec
aaa
add
add
scas
test
add
push
pop
xchg
add
fwait
scas
mov
inc
aaa
sbb
pop
or
add
and
push
iret
sub
ret
outsb
xchg
mov
xchg
pusha
insb
sub
nop
mov
xorl
lock
frstor
ret
add
outsb
in
xor
xlat
lret
pop
imul
lret
push
mov
pop
and
mov
ret
insl
mov
rcr
xchg
cmc
addr16
adc
sub
adc
push
in
rclb
fcompl
add
adc
lret
js
in
mov
xchg
and
adcl
mov
pop
pusha
pop
popf
pop
or
adcb
xchg
movsl
and
adc
cmpsb
mov
sti
nop
xor
sbb
movsb
jmp
fisubl
xchg
inc
inc
xchg
lods
mov
jae
mov
adc
add
movsb
movsl
ljmp
push
adc
dec
inc
clc
pop
add
leave
jle
add
jb
cwtl
cmp
xor
cmp
pusha
lea
mov
push
addr16
loop
fsubrl
je
cld
mov
fildl
inc
mov
das
dec
cli
nop
add
aad
dec
jns
push
sub
dec
jl
lods
jne
testb
cmpb
jg
cmp
or
pop
mov
mov
cmpb
and
lods
sbbl
pop
sahf
mov
fs
inc
add
imulb
pop
add
cmp
push
add
pop
cmpsb
push
rep
jnp
mov
rcrb
add
inc
and
bound
dec
aaa
call
js
mov
mov
or
cmpsl
pop
xchg
push
faddp
push
mov
aas
jnp
cmpsl
daa
dec
and
pusha
addr16
idiv
sbb
rol
ja
bound
and
cmp
fldenv
sbb
jle
lret
push
lret
shlb
mov
and
dec
fstps
xor
daa
pop
ss
leave
pop
jmp
add
mov
mov
jne
inc
in
jge
or
test
lods
pop
adc
push
bound
sbb
fldcw
fstl
jg
mov
add
movsb
in
jo
cmp
pop
xorl
mov
out
insl
xchg
nop
lds
mov
mov
add
andl
xor
mov
lods
cmp
and
fimuls
std
mov
push
andb
add
pop
add
pop
ror
add
in
test
ss
xorb
sbb
insb
mov
loopne
or
push
xor
mov
cmp
imul
inc
or
test
add
scas
jmp
shlb
push
dec
cmp
jmp
mov
sahf
or
adc
jns
mov
addb
sbb
push
push
xchg
ret
flds
adc
lods
insl
dec
add
rorl
add
pop
xor
jle
jbe,pt
dec
insb
daa
movsb
and
pop
fsubrs
cld
jge
iret
push
mov
mov
xor
pop
jns
pusha
add
ljmp
cmp
pushf
add
in
cwtl
adc
ret
add
cmp
in
pop
cmp
add
jmp
jp
pop
push
xchg
ja
cmpsb
mov
adc
gs
push
sub
jnp
inc
mov
testb
es
das
and
out
jmp
sub
and
jg
ds
sub
adc
jbe
mov
imul
jmp
mov
ret
mov
push
pop
xor
push
je
rcrl
add
mov
pop
je
js
data16
leave
sti
mulb
sarl
adc
xchg
cwtl
or
vandps
rclb
testb
sbb
xlat
mov
rdpmc
add
fs
vmovdqu
fcoms
je
call
lahf
mov
lea
push
aas
popa
and
cli
je
xlat
fcomp
std
cmp
jg
sti
fimuls
pop
mov
imul
sti
inc
sub
inc
daa
mov
out
or
push
inc
les
pop
mov
cmpsl
pop
leave
xchg
dec
add
pop
pop
dec
cmp
or
cltd
into
adc
repnz
movsb
sbb
pop
shll
nop
ret
fiaddl
aad
ret
cmp
add
jg
mov
pop
pop
add
addl
adcl
add
or
cld
add
mov
outsb
loop
mov
xor
add
das
jge
ficompl
add
push
add
movsb
cmpsb
lds
test
roll
sbb
and
sub
cmp
insb
rdmsr
decb
rorb
add
mov
sbb
sbb
jmp
rcrb
fldl
add
cmpsb
cli
adc
mov
add
dec
insl
xchg
jns
add
mov
popl
pop
fmul
test
add
jge
fbld
in
das
shrb
inc
ss
pop
popf
adc
lock
add
xchg
xor
add
mov
add
or
dec
mov
bswap
xchg
gs
ret
xchg
sar
cmp
add
xchg
inc
or
addb
or
sbb
nop
push
sub
xchg
ret
or
jne
pop
enter
mov
pop
stc
lods
fdivs
cmpb
adc
xchg
repnz
pop
stos
cmpb
xor
adc
cmpsl
mov
inc
mov
add
mov
adc
push
push
lcall
lahf
fs
lds
les
and
stos
mov
mov
fs
int
xchg
or
ret
stos
lock
rcrl
mov
loop
add
repz
dec
andb
adc
aam
mov
xlat
mov
fadd
push
add
testb
dec
xor
add
shll
ja
cmpb
xchg
pushf
push
sbb
cmpb
pop
and
mov
sub
mov
loopne
cmp
mov
dec
adc
aaa
push
add
or
cmp
aam
cwtl
xor
clc
add
and
pop
daa
sbb
xor
sarb
frstor
adcl
adc
mov
mov
add
andb
shll
aaa
jae
sub
add
cmp
pop
shrb
push
addl
pop
loopne
push
int3
mov
add
xchg
movsb
imul
jle
cmp
outsb
mov
stc
stos
sbb
leave
sbb
jo
loope
nop
sub
add
push
aas
pusha
nop
fimull
jp
mov
xor
push
or
push
rorl
jno
das
pop
popa
rcrb
push
jl
mov
cli
lock
adc
movsb
jae
mov
cmp
cwtl
fisubrl
mov
cli
test
stos
loop
xor
js
add
push
cmp
add
js
xor
lret
push
dec
lahf
enter
mov
scas
in
jns
cmpsb
xor
lods
add
out
mov
sbb
add
mov
and
lcall
inc
pop
pop
or
inc
push
mov
pop
icebp
rolb
testl
sbb
rcll
or
stos
xor
mov
shll
sahf
add
arpl
stc
xchg
mov
in
imul
adc
icebp
and
pushf
rcrb
scas
das
jnp
fs
dec
sub
add
shll
jg
adc
inc
lods
mov
sahf
cli
int3
or
push
push
or
lock
insb
mov
cmc
adc
inc
mov
nop
and
and
sarb
jae
orb
mov
cmp
test
aam
pop
inc
pop
mov
in
and
pop
movsl
mov
cmpsb
frstor
inc
lahf
cwtl
mov
sbb
gs
js
sub
data16
mov
leave
xor
and
je
gs
adc
rcrb
pop
sub
shrb
jp
cli
mov
es
xchg
push
ja
cmp
push
mov
add
shrb
mov
xor
sub
fdivrp
insb
add
fcoml
adc
xor
xchg
mov
or
sbb
sbb
add
inc
ljmp
sub
scas
cltd
sub
adc
bound
test
push
and
and
cld
mov
vunpckhps
fwait
cmpsl
shll
xor
mov
scas
push
pop
out
mov
dec
insb
andb
call
mov
and
jp
add
fiadds
inc
stos
cli
dec
lds
mov
push
leave
add
dec
and
sbb
xchg
ja
adc
rcrb
mov
lret
or
add
dec
icebp
inc
cmp
fcom
lock
cmp
xor
imul
jecxz
or
mov
lret
sbb
sub
mov
sbb
xor
push
dec
xor
mov
add
or
cwtl
adc
add
ss
pop
addr16
add
mull
pop
loope
fistpll
je
insb
movsb
ret
mov
fidivl
dec
or
fildl
je
cmp
aad
sbb
xor
mov
pop
addr16
adc
lcall
pop
ret
jge
xor
xor
loop
push
nop
add
je
jae
xorl
cld
cmp
and
push
sub
push
cmc
hlt
and
jl
sub
sub
inc
fs
cmp
dec
hlt
add
pop
sub
lock
mov
push
xor
into
pop
push
movsb
sar
loopne
jle
push
in
add
test
pop
fcoms
push
test
insl
jg
movsb
enter
mov
icebp
pop
xchg
les
cmpsb
lret
add
int3
pushl
sbb
cmp
xchg
sarb
add
hlt
xlat
mov
push
inc
lcall
sub
clc
insb
add
mov
movsb
rcrb
cmp
mov
add
mov
push
mov
mov
mov
cltd
loop
lea
ret
jl
pop
push
push
nop
mov
sbb
mov
xor
xchg
xor
dec
addl
cli
jl
xor
aaa
out
push
xchg
scas
lret
xor
mov
adc
and
sbb
in
pop
aaa
mov
sub
or
ret
add
loopne
icebp
aaa
jbe
fisttps
lods
out
mov
fs
or
dec
in
sub
mov
add
push
cmc
pop
ret
xorb
sbb
adc
add
mov
fwait
mov
sahf
mov
mov
in
dec
xchg
loop
add
cmp
enter
or
jnp
js
dec
and
mov
adc
stos
mov
test
mov
popf
cmp
pusha
mov
ret
xor
adc
mov
rcl
roll
mov
sub
inc
popa
fbld
pop
leave
aad
shrb
sbb
mov
push
repz
jno
add
mov
sub
cmp
enterw
ja
daa
cwtl
xor
sub
stc
dec
mov
sahf
ja
xchg
cld
call
loop
aam
fistl
add
in
xor
lret
or
and
xchg
mov
mov
cli
insb
add
dec
xchg
ds
fdiv
sub
xchg
xor
aas
mov
gs
test
flds
mov
leave
mov
and
and
mov
lock
rcrb
sbb
enter
xor
in
or
scas
in
adc
int3
subb
dec
ja
add
or
add
cwtl
xor
pop
and
dec
add
fstpl
dec
aaa
cmp
dec
add
and
cld
out
notl
adc
xor
push
out
mov
push
fs
sub
lea
jg
cmp
inc
inc
testl
adc
mov
lock
mov
push
mov
shll
rcrl
add
lock
jg
add
and
dec
enter
inc
jmp
mov
jmp
sub
xchg
repnz
xorb
sbb
inc
sub
andl
and
add
ficoml
inc
cmp
mov
sbb
and
test
call
mov
sbb
repnz
fwait
shll
ds
inc
int3
sub
das
xor
add
popa
subl
add
adcb
push
imul
add
jg
nop
pop
and
adc
in
add
lock
testl
jle
push
in
fwait
jae
pop
mov
mov
add
pusha
cwtl
clc
pop
pop
hlt
mov
dec
daa
ja
mov
in
in
push
add
mov
mov
push
mov
add
insb
pop
subb
scas
mov
xchg
cli
or
orb
cld
mov
add
into
hlt
leave
testl
mov
je
sbb
insl
mov
fdivrs
pop
pop
pop
lds
mov
lock
outsl
les
inc
adc
addb
nop
lea
fidivrl
jl
daa
jnp
mov
add
add
pop
loop
and
cmp
lahf
xchg
inc
popf
mov
fsub
and
xchg
push
mov
mov
icebp
pop
push
mov
pusha
adc
je
and
movsb
cltd
sub
ljmp
add
inc
in
je
or
jecxz
mov
or
pop
shlb
ja
test
add
das
and
out
rcrb
or
idivl
lods
add
lods
jge
push
insl
mov
jns
ret
dec
sub
repnz
rclb
jl
jle
rcrb
add
mov
adc
jne
add
jne
dec
mov
dec
ss
fcomps
sahf
push
pop
xchg
inc
push
aam
pop
or
sbb
std
mov
add
int3
cli
and
add
orb
jno
sub
push
mov
push
pop
or
fs
bnd
xor
pop
mov
idivl
mov
sub
add
inc
mov
dec
sub
clc
aas
xor
aas
fwait
loop
pusha
cltd
fsubl
sbb
xchg
mov
enter
mov
add
xchg
and
xor
pop
sub
mov
jb
ror
sub
sbb
inc
lock
xchg
cmp
lcall
dec
dec
mov
fsubl
test
dec
push
addb
or
mov
pop
mov
inc
and
sub
lds
push
pop
mov
pusha
mov
cld
lcall
ror
outsb
inc
mov
cmp
adc
imul
add
mov
and
add
outsl
add
test
sar
add
gs
add
dec
inc
loop
dec
jge
in
add
mov
cmp
push
mov
adc
popf
xchg
xchg
ds
sub
pop
push
mov
push
sbb
fistps
leave
bound
in
jp
jo
sbb
fs
sub
pop
add
int
xor
stc
imul
out
pop
inc
test
divl
sti
js
sar
push
sub
or
fs
mull
push
mov
lods
pop
push
sahf
mov
lock
arpl
jp
xor
cmp
movsl
mov
add
sbb
cmp
sub
or
loop
rolb
in
and
mov
clc
add
add
mov
lods
pop
and
lods
dec
add
pop
jbe
mov
ljmp
xchg
or
inc
jmp
add
in
pusha
jge
ljmp
push
dec
clc
pushf
adc
hlt
dec
repnz
sbb
add
sbb
test
adc
sub
je
lret
or
fs
sbb
into
sub
xchg
inc
push
sub
call
movsb
insb
dec
repz
test
test
shrl
ljmp
mov
lods
push
leave
lock
jns
jns
nop
loope
and
leave
push
adc
lock
and
lret
scas
mov
sti
xor
mov
pop
aas
jecxz
xor
cmp
jnp
adc
adc
pop
ljmp
sti
push
pop
add
incb
mov
in
pop
or
arpl
sbb
mov
dec
pop
pshufw
nop
jb
dec
adc
dec
mov
and
jecxz
jle
jne
add
sbb
dec
sub
imul
pop
xor
or
mov
sub
and
push
aam
xor
scas
add
rorb
xchg
or
add
sub
push
xor
cmpsb
loop
add
sub
dec
or
cmc
add
stc
aas
stos
jle
fs
or
sbb
sbb
cmp
js
aas
add
sub
imul
out
mov
pop
sti
and
aaa
pop
mov
cmp
sbb
add
lock
icebp
cwtl
add
scas
fsts
push
dec
ret
push
dec
add
adc
cwtl
out
jo
ret
dec
sub
pusha
aad
pushf
push
inc
test
gs
push
int3
imul
loope
xchg
mov
aad
mov
pop
popl
mov
lds
pop
or
mov
adc
fsts
add
or
mov
dec
mov
add
js
sub
or
addl
aaa
or
pop
xchg
push
add
or
pop
xchg
cmp
ret
add
fnsave
mov
cmp
jns
push
or
and
imul
inc
sbb
cmp
xchg
xchg
add
inc
shlb
lahf
aad
xor
xor
mov
jmp
add
cmc
cli
mov
test
ja
into
mov
enter
inc
mov
std
icebp
std
int3
push
cmpsb
add
cli
test
sarb
add
add
add
dec
andb
stc
lods
andnps
scas
add
cmp
daa
pop
cmp
inc
out
adc
pop
sti
mov
sub
rorb
rcpps
fs
fadds
test
mov
mov
and
adc
fnsave
inc
jmp
aas
or
loopne
add
sar
add
fwait
hlt
xor
insb
dec
add
aas
xorps
mov
in
pop
xchg
jbe
mov
popf
add
inc
cwtl
das
add
lods
loopne
dec
push
cltd
xchg
stos
add
nop
add
dec
popf
pop
insb
sbb
or
callw
add
cmp
add
sub
jmp
orb
add
loope
jb
fidivrs
xor
jg
test
movsb
mov
in
pandn
call
in
arpl
add
inc
mov
hlt
mov
push
add
cmp
or
dec
jb
mov
inc
call
stos
add
iret
shlb
aas
scas
call
scas
fcomps
hlt
ljmp
xor
mov
mov
cwtl
loope
sub
adc
mov
sahf
in
push
cmp
lcall
add
rorb
cmp
adcb
in
sbb
push
add
aam
ret
stos
xchg
movsl
jg
cmp
rclb
xor
call
xor
inc
jp
sbb
std
pop
ret
aas
repz
loopne
icebp
jno
jle
or
shl
cs
loop
sub
iret
mov
out
mov
mulb
sbb
mov
pop
mov
bnd
lcall
jo
add
test
aaa
add
ljmp
add
jge
cmp
add
lahf
lcall
dec
clc
testl
gs
popl
jne
ds
es
push
xor
cmpb
lods
mov
push
iret
cmp
scas
sbb
lret
add
mov
xor
es
fiadds
jp
lahf
loop
ret
stc
shrb
int3
add
jnp
stos
xchg
int
outsb
add
divb
out
push
pusha
test
add
rcl
pop
shrb
arpl
inc
mov
push
decl
push
loop
add
cmpsl
adc
jb
mov
push
js
mov
mov
mov
repz
push
add
jbe
insl
and
xor
daa
push
cmp
add
xchg
mov
add
mov
mov
out
cmp
mov
cmp
pop
ja
add
std
pusha
cmp
add
adc
adc
xchg
add
test
mov
in
lock
iret
rcrb
sbb
sbb
stc
btc
add
sbb
fnstenv
arpl
cmpl
add
sub
in
mov
dec
fs
loop
shrb
ficompl
mov
pop
push
ret
jbe
stc
mov
mov
aaa
mov
xor
movsb
pop
loop
sbb
fdiv
dec
mov
into
push
push
addl
xor
jg
sbb
inc
add
mov
in
andb
movsb
dec
fxch
es
add
scas
push
or
sub
call
mov
push
mov
pop
sub
or
pop
fwait
movsl
add
mov
add
popf
push
add
adc
sbb
add
xchg
mov
ds
cmp
jg
mov
imul
push
lret
adc
subb
repz
jecxz
insb
loope
add
mov
call
add
ja
mov
push
call
pop
sarb
roll
mov
fisttps
scas
adc
cltd
cmc
sbb
xchg
xor
push
sti
inc
cld
sbb
inc
cmp
ljmp
les
into
out
cmp
in
push
sub
sti
popa
inc
sbb
ltr
xor
arpl
cmp
aaa
outsl
cmp
fadds
dec
lcall
xchg
pop
repnz
inc
ljmp
sub
mov
js
dec
fwait
dec
or
int3
jmp
mov
add
cmp
shl
fcomp
mov
add
loopne
or
mov
je
stos
shlb
cmc
ficomps
xor
xor
aas
push
sbb
add
cld
rcl
add
or
add
into
sub
in
nop
pop
das
or
mulb
mov
push
arpl
movsl
data16
sub
mov
ljmp
fcmovb
mov
je
iret
or
lock
add
xchg
push
stc
add
lahf
mov
adc
daa
sub
sbb
xor
and
dec
dec
ret
hlt
add
out
outsb
pop
lock
lock
div
pop
xchg
mov
mov
mov
into
es
cmp
or
fnstenv
filds
add
add
and
pop
sub
jl
adc
adc
inc
test
pop
pusha
sub
pusha
int3
cmp
cmp
movsb
jmp
jle
add
call
sbb
andl
aam
mov
sub
jo
pusha
cld
adc
shll
and
jne
enter
pop
movsb
xchg
orps
hlt
ja
jno
negb
pop
mov
mov
pushf
imul
xchg
or
nop
je
push
pop
insl
adcb
inc
js
add
punpckhbw
inc
cmp
jns
push
into
std
imul
add
xor
inc
pop
movl
cmp
rcrl
leave
pop
cwtl
mov
les
ja
dec
jae
in
std
clc
add
loope
leave
sub
cli
ftst
jle
lods
imul
or
fisttpl
cltd
mov
inc
or
adc
jo
hlt
movsb
icebp
pop
add
add
push
xchg
es
xchg
cmp
lcall
push
outsl
jno
data16
clc
lret
fnstenv
sub
xlat
in
iret
pusha
jnp
dec
push
sti
pop
loope
subb
movsb
lods
mov
sbb
cmp
lock
test
sub
icebp
sbbb
pop
insl
or
cld
cmpsl
mov
inc
jno
ds
jmp
popa
dec
pop
xchg
adcb
add
les
cmp
js
push
pop
out
jmp
out
test
lock
pop
sbb
pop
push
les
jne
pop
xchg
inc
pop
ljmp
and
cmp
pusha
daa
adc
inc
add
mov
repz
aaa
dec
dec
loopne
jle
add
and
idivb
ror
in
cmp
add
insb
add
push
in
test
sbb
out
mov
sbbl
dec
jmp
rcrb
add
fsts
outsb
add
test
xchg
je
cld
push
dec
xor
xor
adc
xchg
je
or
data16
mov
aam
xor
in
mov
add
mov
stc
xchg
jp
test
dec
cmpsb
sub
xchg
sahf
shlb
mov
pop
add
mov
push
add
dec
cmp
mov
aas
xchg
push
sbbb
rcr
xorl
ja
pusha
outsl
mov
ret
or
add
lods
rcr
ljmp
cwtl
test
inc
jo
add
or
and
jnp
test
cmp
std
lods
mov
cmp
jo
jno
iret
loopne
add
hlt
leave
xor
js
shll
xchg
ret
fwait
loopne
cmpsl
xor
mov
sub
sub
sarb
mov
pop
mov
pusha
rolb
sbb
lcall
popa
jne
add
lods
rorb
test
and
out
add
ret
jo
push
add
xor
xchg
divb
pusha
ja
ljmp
nop
clc
sbb
dec
or
icebp
sbb
mov
ds
or
dec
loop
add
insl
daa
cmp
lock
xor
sbbb
lds
push
sahf
xchg
xorl
out
cmp
push
sbb
mov
out
ja
mov
cmp
in
add
gs
out
int
shr
sbb
push
push
arpl
or
das
leave
bound
pushf
repnz
sti
ja
sbb
sbb
add
push
sahf
arpl
and
ja
mov
frstor
daa
add
sbb
sub
sahf
pop
adc
cmp
cmp
dec
push
imul
push
scas
loopne
sahf
lods
pop
test
mov
and
mov
loop
ficoml
call
enter
mov
mov
inc
xor
jle
add
lret
inc
mov
push
mov
divb
movsb
xchg
or
cwtl
shll
add
outsb
xchg
cs
jb
or
push
adc
enter
fcomps
sbb
lods
jg
rep
scas
jne
or
mov
sub
sub
push
scas
hlt
sbb
jno
mov
scas
nop
push
pop
add
jne
out
pop
add
and
mov
dec
or
mov
inc
aas
notl
mov
pusha
adc
ljmp
mov
rclb
pop
cmpsb
cmp
dec
loopne
ror
xlat
cmp
fs
mov
add
pushf
aas
pop
adc
sub
ficoml
incl
mov
push
into
add
inc
pop
push
xor
repnz
pop
mov
add
jno
xor
cltd
in
ja
pop
pop
test
or
out
sti
adc
mulb
jmp
repnz
cmp
sbb
push
adcb
push
inc
push
mov
loopne
cwtl
xor
sarb
rcr
inc
insl
idivl
inc
add
sahf
mov
adc
or
stos
ss
push
cmp
loope
sbb
out
add
push
in
dec
cwtl
nop
add
inc
push
add
movsb
leave
daa
add
loop
inc
shrb
fidivs
lahf
and
lret
push
jb
punpckhbw
jne
pusha
or
mov
mov
pop
jns
cmp
scas
stos
adcb
pop
pop
sub
pop
inc
jne
jns
aad
cwtl
call
mov
in
add
or
test
fadds
jnp
cmp
sti
and
mov
rorl
add
inc
andb
out
add
mov
or
jp
je
cmp
add
out
jne
add
and
call
cwtl
lea
pop
add
popf
mov
arpl
xor
or
adc
scas
add
and
loopne
stos
jb
sub
lahf
mov
add
push
in
sub
ret
test
xchg
mov
pop
scas
adc
ja
sub
xchg
sbb
cmp
fmul
xor
out
in
push
cmovp
aad
or
les
ja
add
clc
inc
pop
andb
sbb
pusha
aad
cwtl
mov
add
push
into
ljmp
adc
testb
xor
dec
enter
pop
test
sbb
pop
add
cmp
je
ret
nop
int3
add
data16
cmc
out
loopne
pop
in
outsl
fsubs
mov
inc
rcrb
adc
add
int
dec
xchg
jno
cmc
adc
repz
loope
and
add
push
jl
and
add
inc
xchg
rcrb
add
sub
sbb
fsubs
mov
jnp
popa
out
movsl
setl
push
rorb
mov
add
dec
pop
test
mov
xchg
add
cld
dec
popa
push
pusha
jl
in
cmp
jbe
cs
lahf
mov
and
add
xor
or
add
or
ret
add
clc
jnp
mov
mov
out
inc
jb
pushf
sbb
add
xor
push
adc
push
jns
add
ficoms
xchg
sarb
lcall
ret
aad
lock
cmpsl
mov
mov
jbe
cmp
and
and
push
cmp
stc
xor
mov
rcl
test
pop
push
jge
mov
movsb
icebp
mov
sbb
fadd
movsl
push
in
insb
add
mov
mov
sub
add
fldl
sub
push
add
add
cmp
std
pusha
call
sti
add
lods
or
fwait
dec
sbb
add
fdivr
insl
aam
add
mov
add
mov
push
push
call
lcall
nop
add
pop
mov
and
mov
xchg
sbbb
lock
add
lds
and
sbbb
daa
cltd
popa
xor
inc
xchg
insb
sbb
loop
push
ret
cmp
adc
stos
add
aam
xchg
mov
mov
pusha
inc
lret
inc
js
pop
sbb
orl
out
or
xchg
xor
add
or
pusha
or
inc
popf
hlt
jo
pushf
loopne
add
sbb
and
mov
repz
loopne
lds
sarb
scas
loop
clc
add
push
jl
outsl
lds
inc
mov
add
test
adc
ss
popf
inc
and
sub
js
pop
pop
lock
cmpsb
arpl
adcl
pop
or
int
adc
dec
or
rorl
xchg
std
loopne
in
add
sbb
inc
repnz
push
xchg
add
and
rorb
mov
nop
or
pop
dec
mov
pop
stos
and
add
pop
insb
push
and
je
or
sbb
adcb
or
sbb
pop
add
jo
jns
pop
xchg
lret
fldenv
mov
gs
xlat
xchg
mov
incl
leave
cltd
cmp
add
dec
test
and
stos
pop
adc
aad
push
daa
sub
adc
jnp
cmp
add
mov
rclb
dec
bound
ret
adc
xchg
mov
xchg
sbb
add
rcrb
pop
rcr
dec
int3
push
adc
shrl
jbe
mov
popa
inc
or
push
jmp
fdivr
ljmp
xchg
icebp
call
test
add
lret
mov
inc
push
inc
lods
add
xor
cmpsb
pop
loope
les
pop
push
cld
lods
fcomip
and
jle
xor
and
adc
std
adc
ss
lcall
pop
insl
in
popf
push
das
shlb
dec
fwait
push
cmp
iret
pusha
mov
push
push
fadds
enter
pop
and
jne
dec
sub
pushf
and
outsl
add
mov
ror
clc
add
aad
mov
push
add
push
xor
fistpl
pushf
mov
mov
iret
and
pop
jg
scas
je
mov
pusha
aad
flds
jae
test
pop
fsubrl
stc
das
mov
cmp
or
sub
lock
mov
outsb
add
out
sbb
inc
add
cmpsl
xchg
fwait
orb
in
push
imul
pop
fimuls
ljmp
aam
aas
pop
aam
add
lods
sbb
nop
outsb
jno
xchg
or
mov
nop
mov
movsl
mov
mov
or
mov
sub
movsb
mov
mov
add
or
int3
push
loopne
test
into
sbb
ljmp
aam
outsb
add
mov
sahf
add
shl
sbb
test
sub
add
das
hlt
add
push
addl
addb
or
add
fs
push
cmpl
mov
in
cmc
xor
std
and
sub
inc
lea
stos
sub
mul
cmp
push
test
daa
std
xor
imul
ret
test
and
xor
mov
jae
sbb
mov
stc
add
les
pop
mov
dec
adc
ljmp
add
out
sub
cld
mov
icebp
lds
push
incb
lea
pop
jg
add
add
mov
mov
xchg
sbb
nop
ss
je
mov
in
jl
add
out
cmp
hlt
mov
push
jmp
xchg
dec
iret
push
add
movsb
push
jb
pop
mov
mov
mov
scas
add
orb
xor
loop
shr
rcll
decb
and
mov
dec
aad
mov
rolb
sbb
sbb
orb
movsb
mov
stos
add
mov
add
lret
xchg
push
jmp
testb
add
jnp
test
mov
and
aaa
push
fisubl
adc
add
lds
sbb
sbb
flds
cmp
imul
es
and
sar
mov
or
or
push
aam
inc
dec
jbe
push
aas
or
xlat
add
cli
pop
mov
js
in
cwtl
xchg
mov
xor
fxch
outsb
add
xor
ret
test
cmp
add
call
lea
hlt
cwtl
add
rcl
int
add
cmpb
pop
cltd
or
sti
push
push
pop
add
fwait
divl
mov
aas
add
mov
imul
jg
punpcklbw
push
xor
into
and
and
fidivs
push
sub
pop
fcoms
imul
ret
add
jno
pop
xor
add
ja
mov
xchg
fmull
into
mov
popf
jns
jbe
jno
add
ss
filds
inc
lcall
add
sahf
add
jns
and
add
sti
addr16
pop
dec
jo
add
nop
or
inc
loop
decl
out
test
jge
lret
inc
loopne
mov
mov
add
sub
sbb
inc
shll
pop
xchg
push
pminsw
cmp
xor
shrl
sub
lods
xor
dec
xchg
sbb
ret
cli
in
sub
sub
sbb
xchg
mov
inc
pop
mov
test
cmp
cmp
mov
popf
xchg
mov
jecxz
push
mov
inc
add
lcall
popf
mov
mov
sub
xor
and
out
daa
push
cmp
push
or
cmp
in
mov
jmp
and
loopne
inc
or
stc
test
nop
int3
add
fsubs
and
xchg
add
test
add
lock
fistl
fisubl
pop
test
push
mov
bound
or
mov
pop
stos
add
and
nop
and
add
adc
mov
das
xor
icebp
pop
jg
out
je
add
shl
mov
mov
inc
mov
cmc
mov
or
pop
inc
aam
sub
or
sti
stos
adc
fwait
cwtl
das
pusha
js
popf
sbb
rolb
sarl
ja
repnz
xor
xchg
fbstp
je
in
mov
stos
cmpsb
xchg
pop
lahf
jl
subl
add
mov
sbb
add
cmpsl
dec
popf
sbb
leave
push
idiv
mov
add
push
mov
mov
xor
lds
and
fisttpl
fldcw
dec
jo
arpl
repz
jb
fdivrs
add
setne
shlb
out
mov
in
push
xchg
and
jecxz
xchg
cmpsl
sahf
push
lahf
in
stos
xchg
add
ja
adc
inc
mov
out
sbbb
xchg
or
stc
dec
cmp
int
mov
cli
clc
and
call
xor
sbb
pop
add
dec
sub
shlb
dec
cmc
ftst
add
mov
jecxz
mov
insl
adc
popa
inc
dec
jbe
cmpsl
loopne
xchg
dec
push
xorb
es
cmp
loope
je
enter
fidivrs
sub
inc
lock
call
js
pop
les
mov
imul
xor
cmpl
test
fsubl
int3
sbbb
stc
add
shl
add
insb
pusha
dec
inc
push
fidivrl
sbb
jle
or
mov
and
mov
int3
jge
les
adc
pop
rcl
data16
xchg
add
and
arpl
mov
outsb
test
dec
jmp
cmc
add
mov
mov
ficoml
pop
mov
les
pop
add
cmpsb
sub
pop
add
test
push
cmpsb
push
jle
ds
loopne
dec
sub
stos
add
icebp
jecxz
sub
leave
mov
pusha
or
add
rolb
add
aad
and
pop
popf
add
out
mov
inc
or
jne
sbb
loope
gs
and
test
and
jns
sbb
out
jb
outsl
test
pop
pop
sbb
push
sub
add
stos
lds
int3
and
nop
mov
jne
mov
out
ljmp
add
mov
push
xchg
xor
mov
pusha
mov
cmpsl
mov
add
cmpsb
jo
sbb
incl
sbb
cwtl
dec
add
sti
mov
xchg
or
pushf
add
cs
jge
add
iret
ret
movl
jae
nop
shlb
add
jmp
mov
aad
std
add
movsl
dec
sbbb
mov
scas
imul
push
add
sahf
adc
test
sti
nop
movsl
cmc
clc
mov
and
add
stc
ss
repnz
add
andb
out
cmovge
mov
mov
jns
mov
or
je
xchg
mov
add
lods
jne
insl
jbe
or
xchg
pop
dec
in
dec
mov
pop
in
and
jbe
les
jle
aas
sub
xor
loopne
inc
das
test
call
andb
sub
jno
cmp
int3
test
inc
xchg
jmp
imul
cmc
lahf
adc
mov
add
scas
sarl
pop
aam
add
push
push
add
pop
fxam
cmp
adcb
imul
adc
jecxz
sub
mov
popa
jmp
inc
lret
enter
mov
addr16
add
lock
insb
enter
dec
ja
bound
leave
push
ficomps
sbb
sub
clc
rorb
cmp
data16
add
pop
adc
fsubrs
repz
shl
and
fnstcw
pop
test
lods
jnp
add
and
mov
in
out
mov
fisubrs
push
inc
jp
pop
nop
add
stos
pop
mov
push
das
mov
jp
xchg
push
jb
ret
and
inc
xchg
insb
add
adc
push
mov
cmp
movhps
add
lret
loope
add
lcall
out
jns
add
mov
adc
mov
jp
pop
mov
add
int
and
cmp
ljmp
in
sbb
and
cmp
dec
inc
imul
push
xchg
add
jb
push
arpl
pop
xor
popa
cmc
cmp
enter
bound
sub
jmp
inc
or
hlt
ja
adc
mov
dec
daa
xchg
sbbb
idiv
aaa
xor
push
clc
mov
add
pop
xchg
push
push
sub
jecxz
shr
add
bound
and
mov
call
fwait
lret
push
mov
mov
jle
or
sbb
test
pop
popf
loopne
mov
dec
enter
shlb
jbe
movsb
sub
add
fimull
mov
loopne
xor
adc
xor
add
insl
fs
cmp
roll
test
sti
and
cs
add
je
dec
push
add
arpl
imul
or
aaa
test
jno
or
iret
dec
inc
sbb
and
loopne
mov
jle
insb
out
js
sub
rolb
ja
fistl
jmp
subb
or
shl
mulb
add
out
inc
xorl
hlt
add
in
data16
cmp
xlat
push
or
push
in
lcall
imul
dec
roll
adcb
mov
aam
push
inc
fadds
rorb
rolb
imul
cmp
xchg
fisubl
pop
cwtl
test
dec
pop
ljmp
add
cld
mov
movsb
int3
add
push
cmc
ljmp
adc
lahf
mov
pop
pop
fld
cld
shrb
stc
sbb
scas
pusha
cmc
cmp
test
mov
xlat
fs
or
push
rorb
add
iret
and
xor
movsb
loopne
cmpsl
mov
pusha
enter
in
fiaddl
in
add
in
rcr
pusha
mov
lods
ja
xchg
add
sub
xchg
xor
sub
mov
and
test
dec
or
cmp
mov
add
js
mov
xor
sub
jp
in
fstl
fsubrs
repz
add
int
mov
add
mov
leave
push
mov
sbb
int3
dec
hlt
sar
sbb
test
pushf
push
lret
jge
and
push
test
cmp
or
mov
xchg
push
add
outsb
add
aad
cwtl
push
mov
and
stc
cmp
loopne
jle
fisttpl
dec
cmp
xchg
push
add
xchg
data16
test
xor
inc
xchg
rcl
bound
rcrl
sub
jne
mov
ret
push
sahf
sarb
mov
loop
shlb
outsl
dec
and
inc
push
add
out
repnz
outsb
ljmp
movb
shl
mov
mov
iret
mov
lea
cmp
in
mov
add
xor
adc
jnp
cmp
mov
dec
sbb
xchg
sub
sbb
push
push
inc
enter
testb
jge
lock
push
call
add
xlat
add
add
call
inc
cmp
adc
xchg
rcl
and
mov
add
les
jg
pop
clc
idivl
bnd
or
mov
lret
scas
cmp
pushf
fadds
sbb
mov
or
cwtl
mov
adc
jno
xchg
sbb
or
mov
test
add
popa
rcll
nop
scas
cld
in
xor
das
and
add
lods
mov
add
test
enter
push
int
add
lea
mov
in
adc
or
call
jmp
xchg
test
outsl
data16
sub
mov
add
inc
or
jg
sub
mov
add
insb
adc
cmp
mov
xchg
add
cmpsl
in
add
imul
and
and
mov
inc
daa
inc
icebp
jg
mov
rorl
clc
xchg
cwtl
xchg
call
ljmp
hlt
mov
test
cltd
lods
mov
mov
xor
push
ljmp
add
fstpt
or
js
push
mov
or
add
dec
adc
sub
cmp
movsb
sbb
pop
mov
lock
loopne
cmp
fmuls
stc
cmpl
mov
mov
sub
jne
fstl
xchg
loopne
vunpcklps
pusha
pop
cmc
sub
mov
add
shl
pop
add
mov
dec
pop
ljmp
aam
es
sub
test
test
stos
add
dec
cmp
add
in
mov
pop
cmpb
xchg
in
cmp
add
dec
and
push
lods
ljmp
addr16
divb
add
xchg
out
cltd
ss
pop
add
int3
sbb
mov
xorb
stos
sub
jmp
and
in
push
repz
jg
cltd
mov
jl
js
adc
push
gs
ret
add
mov
das
cmp
add
jno
pop
and
sub
add
adc
cmpsl
mov
cs
enter
stos
push
xchg
add
add
add
lea
je
adcl
mov
inc
and
mov
out
adc
fwait
and
cmp
mov
dec
pop
js
jno
scas
dec
adc
lret
fisubrl
adc
std
pop
mov
sub
mov
popa
adc
aam
lods
add
lret
pop
clc
outsl
and
pop
call
xchg
scas
mov
mov
or
mov
lock
add
mov
add
or
pop
ficomps
loopne
mov
add
mov
add
lods
xor
ja
jge
xchg
sub
add
mov
push
mov
cmp
pop
add
cli
aas
xchg
sbb
js
xchg
lods
xchg
outsb
mov
sub
test
dec
xchg
pusha
add
or
lret
shl
ds
iret
andl
cs
fcomp
sbb
add
nop
clc
xchg
or
cld
scas
jnp
xchg
add
ss
fcoms
in
mov
aas
adc
insb
enter
test
cmp
cmp
repnz
push
sub
loopne
xor
in
add
fstpt
int3
mov
dec
pop
push
add
xor
xchg
xchg
mov
stc
xchg
jae
mov
adc
ret
and
jmp
mov
lret
xchg
aas
mov
xchg
xchg
data16
add
lahf
pop
push
mov
xchg
add
out
movaps
insb
push
mov
mov
cmp
add
clc
pusha
sub
lcall
xor
mov
xor
inc
cld
add
insl
lds
add
mov
fcom
gs
add
add
add
xchg
cmp
sub
push
add
jecxz
test
mov
repz
adc
mov
dec
cmp
int
add
dec
aad
sub
nop
aas
push
xchg
sbb
or
loopne
test
xchg
pop
dec
xor
in
subl
bound
mov
jns
inc
adc
cmp
or
add
add
cld
pop
push
cmp
jg
je
or
faddl
add
fsubrl
pop
add
jl
add
in
mov
pop
orb
dec
push
inc
fs
lahf
addl
pop
rcll
mov
add
add
mov
or
stc
jge
jmp
inc
int3
xlat
lret
pusha
mov
cmp
mov
pop
and
pushf
lods
lock
push
mov
call
out
xchg
sbb
loopne
sarb
add
push
jp
test
out
pop
es
aaa
dec
add
adc
and
xchg
stos
add
cmp
jp
cmp
adc
push
lock
push
movsb
int3
rcl
mov
add
mov
push
push
inc
iret
ret
jl
ss
xchg
push
fucomp
pop
aas
andl
std
xchg
dec
loop
out
or
scas
mov
insb
mov
add
add
adc
in
push
push
les
push
xor
mov
movsl
lods
and
jle
popf
outsl
or
pop
dec
adc
adc
movsb
je
push
push
hlt
addb
add
mov
jnp
inc
add
gs
add
mov
sbb
mov
and
movsl
cmova
pusha
add
repz
popf
rcll
or
lea
repnz
adc
add
xchg
xchg
pop
test
out
push
add
sbb
add
das
sahf
pop
jae
add
add
rcrb
sarb
dec
sti
or
add
jle
xlat
add
mov
cmp
sbb
or
xchg
cwtl
add
enter
insb
add
mov
dec
adc
sbb
nop
test
leave
dec
fsubrs
andb
mov
ret
or
mov
dec
popa
call
cli
lea
xchg
pusha
insb
es
cmp
and
out
rclb
mov
add
mov
pop
fwait
scas
jns
push
pop
hlt
cmp
jg
test
cmp
mov
xchg
rolb
pop
adc
das
and
dec
push
mov
shlb
jnp
sub
jecxz
add
push
push
shlb
in
js
pop
pop
sub
cmp
jp
fstp
and
cmp
pop
js
loopne
ret
pop
pop
cld
xor
adc
cmc
rcll
js
inc
inc
test
std
das
mov
push
test
cwtl
dec
fs
add
in
data16
adc
movsb
pop
lcall
add
int3
cmp
add
sbb
and
rcrl
fwait
adcb
mov
leave
mov
pushf
insb
xchg
loope
sub
mov
fldt
sbb
lahf
xchg
jmp
movsl
fcmove
pop
dec
leave
cmpsb
add
lret
mov
fstl
push
hlt
popa
add
mov
movb
push
lock
lods
lea
fwait
cmp
xor
mov
add
push
imul
add
jl
pop
in
xor
lds
in
cli
push
int
imul
fdivrl
mov
es
jle
test
nop
mov
lods
add
adcl
in
mov
test
inc
cwtl
test
add
mov
popf
add
sub
cmp
jae
mov
test
inc
insl
call
dec
xlat
push
adc
jmp
add
xchg
cmp
cltd
jo
xor
adc
psubsb
mov
add
dec
sbb
loopne
push
lods
jle
jae
sbb
pushf
cmp
sub
xor
pop
add
jp
test
add
inc
add
int3
stc
lock
lds
pop
cmp
push
push
jmp
int
inc
test
ret
or
cltd
lret
xchg
sub
push
lods
scas
xchg
add
lret
bound
push
pop
imul
mov
or
add
cmp
jg
js
shr
sub
pusha
iret
mov
pop
mov
xchg
lret
pusha
and
add
lock
mov
test
les
cltd
call
add
pop
inc
popa
pop
aam
sub
hlt
push
add
sbb
or
jl
daa
sahf
adc
and
mov
add
bound
out
rol
sbb
loopne
fstpl
aas
fiaddl
int3
por
popa
mov
push
movsl
fcmovnb
adc
xchg
mov
add
dec
fistpl
sbb
popa
xchg
pop
inc
cmp
sub
jne
aam
lea
sub
xchg
sbb
mov
and
ss
pusha
sbb
pop
outsl
jg
call
add
inc
loopne
dec
lret
loop
pop
stc
mov
adc
inc
pusha
push
adc
mov
xor
jo
add
inc
lods
add
sbb
xor
pushf
push
pop
orl
loop
jmp
push
inc
js
roll
pop
sub
push
sub
and
rclb
mov
stos
sarb
mov
sub
sarb
cmc
pusha
ljmp
push
insl
or
shlb
js
cmpsb
pop
sbb
adc
daa
das
and
test
stos
pop
sbb
jnp
daa
add
sti
jle
jecxz
iret
and
sbb
and
cs
fmull
ud2
lods
push
add
mov
pusha
push
and
or
adc
xor
and
das
push
mov
mov
out
data16
dec
pop
test
or
test
cmp
sub
pop
and
mov
lds
push
xchg
nop
cmp
mov
or
popf
movsb
notl
inc
pushf
add
int3
push
push
scas
mov
push
pop
xchg
mov
xlat
xchg
xor
mov
loop
in
mov
xchg
adc
and
addr16
jae
loopne
mov
ja
push
add
mov
jns
jns
add
pop
roll
jnp
dec
xor
add
sub
xor
cmp
adc
or
xor
xchg
stc
enter
pop
pop
stos
pinsrw
jo
jg
dec
daa
int3
or
in
pop
popa
jmp
addr16
push
cmp
add
mov
push
jbe
daa
sbb
aam
aad
mov
cmpb
sbb
mov
mov
pop
movsb
inc
insb
shl
test
popf
pop
sbbb
dec
jl
xor
int
lock
sbb
enter
orb
jmp
push
and
push
notl
stos
add
pop
xor
or
roll
les
add
lahf
cmp
mov
push
je
mov
jp
pop
movsb
imul
cs
pop
pop
mov
out
push
inc
pop
lods
add
xor
sub
mov
mov
push
enter
into
add
lahf
insl
stos
add
imul
mov
data16
add
sbb
sub
add
mov
out
je
cmp
testl
adc
or
and
sbb
cli
pop
inc
mov
aam
pop
outsb
lods
mov
or
scas
mov
cmp
data16
sub
stc
clc
lea
jmp
cmp
mov
adc
push
sbb
je
out
andb
pusha
xchg
sarl
int
insb
cmp
jo
out
push
jo
cmp
push
adc
mov
out
aaa
adc
jmp
and
adc
mov
in
addl
add
fimull
xor
in
mov
clc
iret
inc
lods
mov
clc
sbb
add
mov
mov
or
jo
add
mov
and
push
cmp
je
pusha
pop
and
loop
pop
popa
pop
ret
and
mov
push
mov
jo
jmp
mov
pop
cmp
sbb
xchg
int
sub
pop
push
adc
lret
mov
xor
push
insb
clc
pop
add
xchg
jo
jge
fs
mov
shl
lret
sub
and
sbb
jo
jae
jl
jns
mov
or
cmp
int
add
adc
imul
insb
js
jp
scas
dec
shl
pop
or
jns
mov
mov
inc
ret
shl
cwtl
mov
adc
or
rclb
out
ds
ret
xchg
xchg
sbb
orb
lret
pushf
push
dec
mov
sbb
and
jne
mov
fisttpll
lods
and
fimuls
inc
xchg
daa
ljmp
and
add
push
loopne
cmp
cmp
xor
add
adc
push
int
sub
sub
ss
mov
aas
popf
mov
scas
jne
add
add
fisubl
jg
lret
adc
mov
divb
or
mov
mov
adc
add
sbb
xor
pop
jecxz
in
add
push
cmpl
add
add
or
xor
add
sbb
nop
xor
or
movsl
add
popf
dec
outsl
lahf
bound
incb
or
cmp
add
imul
xor
push
or
add
add
dec
out
and
mov
xchg
flds
mov
pop
add
add
mov
repnz
sub
add
mov
dec
dec
inc
add
mov
hlt
pop
jl
jle
and
dec
inc
mov
int3
sbb
pop
rcr
pop
sub
jns
loope
mov
cmp
pop
and
lcall
lods
call
push
jl
lea
jnp
int3
ljmp
add
pminub
mov
mov
add
pop
add
cmp
or
jbe
mov
add
and
sub
xchg
mov
adc
lahf
jnp
adc
out
inc
xor
push
rcll
ret
add
mov
sub
jp
rorb
cmc
xchg
mov
and
popa
lods
add
test
lods
mov
jl
lods
js
pop
xchg
or
pop
and
jns
add
mov
mov
adc
outsb
add
add
insl
add
pop
or
add
fbstp
fidivl
inc
and
adc
jp
js
adcb
mov
imul
pop
add
jl
add
inc
pop
jbe
add
daa
pop
out
stc
test
out
pushf
or
push
sub
jo
add
ret
mov
inc
sbb
pop
mov
mov
inc
rclb
inc
aam
fsubs
xlat
adc
xchg
xchg
test
or
dec
lahf
imul
sub
and
xchg
adc
addb
xor
insb
bound
hlt
filds
repz
cmp
adc
les
and
dec
add
sti
pop
test
pushf
aad
push
scas
outsb
cmp
arpl
mov
in
out
int3
dec
add
lock
add
cmpsl
rcrb
mov
psubw
sbb
push
pop
or
sahf
xchg
cmp
rolb
mov
xchg
jmp
mov
jne
orb
cmp
test
clc
sub
mov
jb
test
icebp
xor
lock
xor
rcrb
daa
je
add
mov
notb
call
mov
aad
in
ja
or
loopne
mov
fcomi
adc
sahf
xchg
mov
jbe
jecxz
mov
cmpsl
sbb
dec
sub
sbb
mov
lock
cwtl
mov
pusha
add
adc
ljmp
clc
incb
insb
jae
cmp
iret
mov
jo
push
icebp
je
aaa
rcll
add
or
cltd
jp
adc
add
xchg
data16
sbb
divb
adc
lds
sbb
fistps
ds
inc
cmp
jo
mov
in
sbbb
lods
dec
popf
add
inc
scas
les
and
add
mov
xor
insb
or
xchg
add
fwait
dec
jmp
cmp
add
inc
icebp
push
mov
movsb
dec
jle
cli
lret
add
pop
mov
fcoms
hlt
add
pop
nop
pop
xor
push
add
loopne
xchg
pop
inc
cmc
mov
mov
push
aam
outsl
add
fdivl
dec
mov
jl
and
das
add
clc
adc
push
lods
hlt
add
push
pop
lahf
inc
sub
call
jne
jp
rclb
sahf
sbb
add
rcrb
ljmp
mov
sbb
jb
inc
add
insb
xor
push
mov
add
mov
cmp
enter
popf
arpl
cld
in
adc
mov
inc
fidivrl
outsb
jl
mov
rolb
or
std
repnz
add
in
or
sub
mov
xchg
ljmp
jnp
cmp
add
popa
scas
jle
iret
sbb
push
and
mov
sbb
addb
enter
and
repnz
inc
add
mov
fmull
or
xor
stos
jne
add
out
test
jns
xorb
sub
mov
lahf
int3
loopne
mov
add
lock
or
test
sbb
push
push
lret
je
and
pop
test
add
mov
add
pushf
fnstsw
lds
js
xor
and
les
inc
lret
adc
test
pop
jmp
jbe
ffree
xor
sbb
add
pop
add
dec
add
dec
hlt
pusha
cs
add
pop
sbb
xchg
cmp
pop
movsl
mov
mov
out
mov
stos
dec
cmp
iret
xor
sahf
jo
adc
fwait
jg
test
out
out
mov
out
mov
pop
jmp
add
dec
or
iret
cmp
fadds
push
rclb
shr
or
mov
push
jmp
xchg
add
jns
in
sbb
jl
addr16
add
pop
mov
int3
in
fbstp
inc
jmp
sub
dec
iret
xor
mov
mov
ss
int
adc
add
push
sahf
jle
out
xlat
add
int3
js
mov
push
loopne
ljmp
popa
add
mov
push
mov
inc
cld
inc
or
int
dec
mov
in
lods
add
sub
cwtl
popf
mov
jecxz
int
rorb
test
dec
or
pop
cmc
mov
nop
std
mov
sbb
sub
out
fldl
jge
dec
cld
adc
inc
mov
into
xor
jb
add
jg
or
sbb
xor
enter
popf
jg
pop
add
out
outsl
add
mov
pop
mov
pop
pushf
loopne
xchg
dec
push
inc
mov
add
fldl
stos
inc
jno
cmp
lock
testb
loope
stos
ret
sahf
adc
mov
mov
add
inc
out
jno
add
popa
push
aad
push
xor
add
mov
mov
sbb
shlb
lret
cli
add
xchg
in
popa
cbtw
xchg
add
stc
xchg
das
subb
add
sub
cwtl
mov
shl
adc
sti
jmp
pop
cmp
sub
fstl
pop
add
decb
add
and
pop
pop
call
and
mov
into
les
mov
mov
lods
adc
mov
pusha
mov
stos
add
outsl
cmpsl
gs
lock
pop
call
pushf
sbb
rolb
add
rcll
sarl
test
add
cmp
test
jp
pcmpgtd
mov
inc
adc
sub
add
xor
test
add
sbb
ret
andl
or
jp
push
test
sbb
int3
out
add
in
adc
cmp
daa
dec
dec
or
lret
fwait
std
outsb
adc
repnz
mov
push
sbb
divb
mov
add
incb
and
jge
inc
adc
pop
add
jle
mov
in
inc
lock
lret
mov
rclb
ficoms
xchg
pop
push
inc
mov
cltd
mov
and
roll
insl
push
mov
xor
out
cmp
xchg
aad
fnstenv
popl
xor
push
jle
aam
insb
add
cmp
sbb
xor
out
push
mov
or
inc
in
sbb
sbb
in
add
and
aas
mov
adc
push
dec
scas
sub
dec
mov
gs
test
dec
incb
inc
popf
nop
ds
mov
xor
arpl
dec
in
push
jb
jge
add
stc
mov
clc
adc
mov
mov
push
movsb
das
mov
adcb
scas
ss
and
xchg
sbb
pop
testl
push
mov
rorl
cs
sub
adc
cs
loopne
jmp
repz
out
add
fbld
add
or
mov
stos
adc
push
push
xor
bound
sbb
sbb
pusha
add
stos
idivb
add
pop
dec
inc
push
mov
or
pop
sbb
fdivr
orl
sub
cmp
cmp
mov
cltd
add
xchg
ret
and
add
xchg
lahf
push
inc
filds
in
ret
nop
add
cs
and
xchg
faddl
mov
or
mov
sub
jb
add
outsb
insl
sub
mov
xor
movb
movsb
mov
cmpsl
jnp
add
gs
shll
arpl
jecxz
mov
mov
pop
ljmp
add
push
adc
je
or
inc
add
leave
inc
dec
dec
xchg
add
pop
dec
loopne
cmpsl
mov
jns
aas
sbb
add
popa
xchg
and
mov
pop
push
test
push
mov
add
addr16
das
mov
adc
add
js
dec
add
adc
dec
es
mov
cli
add
cmp
add
cmpsl
inc
and
ja
add
push
loop
data16
jecxz
add
mov
adc
jb
add
lret
repz
rcll
add
pusha
rcl
decl
lahf
adc
mov
sahf
mov
cmp
pop
mov
daa
mov
add
loope
push
add
adcl
lahf
in
arpl
add
mov
dec
fsubs
lea
mov
or
add
jp
mov
pop
or
and
adc
fsubrl
push
or
mov
push
adcb
and
pushf
nopl
inc
inc
fs
or
cmp
jmp
mov
cs
mov
pop
mov
push
add
pusha
pop
cmpb
cmp
add
mov
xor
lods
mov
cmp
or
add
int3
mov
sbb
idiv
mov
dec
pop
loope
bound
push
pandn
rcrb
xchg
addb
fdivl
jg
je
int3
jno
mov
lret
sbb
cld
xor
push
and
lahf
push
add
outsl
popf
mov
int3
push
dec
test
pop
lcall
mov
inc
and
sbb
xchg
pop
sub
jmp
shlb
xor
pop
adc
addb
hlt
sahf
mov
das
mov
arpl
in
lock
jb
push
into
jne
pop
add
jge
mov
mov
shrb
outsl
rcrl
lcall
out
les
aam
push
or
nop
sub
add
jno
mov
xchg
push
daa
add
or
ret
dec
xchg
or
andl
xor
add
or
fdiv
mov
xchg
add
dec
cmp
jl
pop
aas
leave
fwait
aad
shrl
inc
add
dec
gs
insl
loop
adc
pop
xor
push
scas
enter
add
in
out
ja,pn
test
xchg
cltd
jle
dec
mov
aam
gs
int3
push
sbb
mov
adc
add
sub
jno
rcll
movsb
ja
and
cltd
inc
cmp
aas
jge
imul
leave
enter
sarb
xlat
add
sbb
sbb
cmp
pop
outsl
lret
xor
in
popa
jp
lcall
adc
sbb
aam
int
adcb
popa
mov
xor
push
pop
decl
rorl
push
dec
pop
cmp
adc
call
jecxz
jnp
pop
fwait
add
dec
xchg
mov
xchg
mov
xchg
push
nop
jl
insl
add
push
push
rorl
iret
adc
pop
stc
add
insl
rorl
sahf
sahf
cmc
add
das
mov
and
mov
push
incl
mov
adc
mov
jl
push
out
mov
aad
xorb
in
mov
movsl
adc
outsb
add
hlt
dec
aam
push
add
repnz
or
add
pop
cmp
and
mov
adc
cmp
imul
outsl
cmp
pop
idivb
ret
adc
lock
adc
xor
sub
add
adc
jo
add
mov
xor
ret
dec
add
dec
cmc
call
aaa
xor
stos
jl
inc
mov
les
xchg
push
mov
sub
cmp
pop
dec
lea
es
inc
pop
lret
fstps
mov
xchg
adc
mov
pushf
adc
scas
dec
or
sub
nop
or
loopne
xor
push
mov
lock
jnp
inc
add
stos
repz
mov
js
jecxz
push
inc
cmpsb
les
push
xchg
shlb
push
xor
add
inc
mov
xor
aas
out
pop
pop
gs
jb
aam
sbb
or
aaa
sub
icebp
push
xchg
or
pop
inc
out
sti
mov
rcr
xchg
xor
xor
pusha
jbe
mov
les
dec
push
push
mov
fldcw
movsl
ror
jno
mov
pop
pop
fsubrl
xchg
mov
dec
rorb
xor
mov
ret
mov
mov
test
inc
add
push
mov
pusha
addb
cmp
cld
add
aam
mov
pop
orb
scas
sub
jne
popa
testb
xor
and
cs
pop
pushf
repnz
in
mov
std
adc
aam
sbb
jp
jae
int3
push
xchg
add
aas
mov
fnclex
add
and
rolb
outsb
add
xor
add
mov
fdivl
das
dec
jle
adc
jne
add
jle
xchg
push
add
adc
add
and
cmp
fwait
popa
and
rcrb
sbb
cli
rolb
xchg
adc
jg
xchg
in
push
lea
andb
mov
mov
cli
adcl
or
pop
or
add
jle
sbb
pop
clc
cmpsb
jne
testb
lahf
adc
sti
test
test
add
lods
orl
adcl
mov
dec
jmp
testl
sbb
xor
insb
mov
clc
pop
sub
lahf
loopne
xchg
testb
add
push
ja
test
into
jbe
scas
mov
mov
hlt
pusha
mov
cmp
push
sub
outsl
pop
mov
mov
add
stc
popa
cmpsb
add
lcall
add
shlb
inc
sub
mov
mov
or
or
adc
into
add
repz
and
in
ja
cmp
sbbb
and
mov
fisubl
jle
xor
lahf
adc
in
xlat
xchg
loope
add
mov
adc
ja
sub
sgdtl
dec
add
rcrb
push
sbb
test
mov
sbb
mov
lock
cmp
dec
mov
cwtl
pop
loope,pt
pushf
mov
pop
jge
cmp
addb
popa
mov
xchg
faddp
sbb
mov
or
dec
jno
outsb
jns
lret
fdivrl
pop
test
jo
out
jl
add
fistpll
jb
jns
loopne
sub
jge
lahf
pushf
xchg
dec
xchg
popa
add
mov
stc
add
lods
repz
jo
and
dec
pop
out
cmp
dec
xorb
testl
mov
cwtl
xchg
add
js
pop
in
test
and
roll
sbb
out
or
mov
fcmovnb
stos
repnz
add
rcrl
das
loopne
add
pop
lock
or
jmp
add
add
mov
xor
pop
fidivrs
cli
add
or
loopne
dec
xchg
add
imul
inc
push
cmp
sbb
pushl
xor
dec
movsl
xlat
jne
into
pop
pop
and
ret
push
cmpsl
movsl
les
repz
outsb
mov
inc
je
add
lods
or
or
mov
dec
imul
int
and
add
mov
mov
add
pop
rcll
sub
push
and
pop
push
mov
mov
add
fsubrl
stos
aaa
out
add
popf
sahf
mov
jo
mov
mov
sbb
mov
xchg
leave
pop
fwait
and
sub
js
int
or
sbb
add
imul
add
jle
decb
mov
insl
out
adc
fldcw
push
sbbl
cltd
out
rclb
add
loopne
jmp
test
pusha
cmpb
xchg
clc
pop
popa
aam
movsb
pop
lods
lock
fwait
cld
add
in
add
jmp
jo
and
repnz
out
jl
stc
mov
adcb
fcoml
clc
add
popa
vandps
movsb
jp
adc
add
lcall
push
mov
sbbl
mov
adc
mov
pop
addr16
lock
addr16
pusha
bound
adc
stos
jl
mov
xchg
add
adc
nop
sbb
add
insl
mov
add
gs
ss
add
sbb
sub
add
pop
xchg
ficomps
aad
lret
xchg
mov
enter
aaa
adc
out
lock
add
push
iret
movl
jns
adc
inc
cmp
filds
out
out
cmp
xlat
add
fdivl
std
pop
xor
inc
lds
daa
mov
lea
je
fstl
ljmp
sbbb
bnd
loope
mov
jecxz
dec
stc
and
add
mov
enter
aad
sahf
pop
ret
in
into
pop
scas
add
mov
fs
lods
push
clc
les
lret
pusha
ret
sub
nop
addr16
nop
pop
xorb
mov
sub
pop
xor
fcoms
push
cld
inc
jo
ja
add
mov
mov
loope
sub
push
cs
lds
jno
jo
sub
cmp
lods
int3
mov
push
ja
add
and
sbb
sub
dec
insl
inc
out
sub
cmpsl
inc
cs
ss
ljmp
test
mov
or
fcmovnb
popf
cmp
push
cli
lcall
mov
jmp
mov
add
fdivl
movsb
pop
jmp
sbb
push
fs
out
mov
test
fsubrl
jle
mov
xor
xchg
stos
jecxz
in
xchg
jmp
and
call
imul
test
nop
mov
pop
add
lea
or
push
add
test
insl
xlat
mov
js
add
and
jnp
xchg
xchg
xor
jl
sar
cld
sbbb
mov
mov
jge
cmpsl
int
aas
scas
out
loopne
stc
inc
mov
nop
add
sub
ds
pop
cltd
clc
pop
es
pop
sbbb
imul
dec
loopne
add
out
sbb
mov
lret
cmp
jno
cmpsl
add
push
cmp
xchg
movsb
add
outsb
leave
mov
lock
decb
adc
pop
and
dec
mov
cmp
les
cmp
or
aad
and
imul
cmpsl
enter
push
in
add
dec
sub
test
or
mov
add
enter
mov
jp
jl
pop
sub
mov
jo
push
into
es
or
ja
dec
inc
in
cs
sbb
push
push
stos
adc
and
testl
frstor
add
push
push
repz
filds
shufps
pop
and
daa
fldenv
addr16
movsl
adc
dec
mov
mov
inc
loopne
lds
rorb
sbb
stos
push
insl
imul
les
push
andb
jg
sub
sti
add
lds
setp
and
add
xchg
xor
hlt
push
jge
push
fdivp
inc
cs
jns
add
or
pop
movsl
outsl
ds
cmpsb
add
cmpsl
sbb
sub
lods
mov
jo
add
insb
adc
ret
pusha
jbe
add
mov
test
std
xor
clc
insb
ficoml
add
into
popa
mov
lcall
add
sub
add
jmp
adc
rcrb
mov
clc
push
push
js
add
dec
cmpb
movb
xor
adc
in
into
push
add
subl
add
ljmp
fucom
sub
imul
loope
push
mov
add
into
jmp
in
mov
jbe
add
daa
mov
or
int3
mov
push
cmp
sbb
jl
mov
repnz
leave
movsb
in
sbb
add
pop
mov
adc
pop
add
jmp
mov
or
popa
icebp
mov
inc
das
adc
scas
and
add
cmp
dec
les
sub
or
fsubs
cltd
sub
adc
imulb
nop
mov
and
les
nop
lret
test
lahf
dec
adc
push
sbb
cmpsl
and
xchg
adc
adc
sbb
aam
lcall
inc
xlat
or
mov
cmc
xchg
cltd
xchg
fnsave
aas
roll
cs
mov
dec
add
ret
mov
or
cmpb
xor
add
add
cmp
mov
sbb
aas
sub
mov
loop
push
jge
mov
repz
sahf
add
flds
add
stos
push
inc
loopne
add
jg
mov
push
aaa
inc
jo
and
outsl
js
pop
push
push
mov
jb
movsl
aas
inc
add
push
repz
inc
clc
sbb
pop
lea
cmp
mov
icebp
push
sub
addl
in
movl
sti
jmp
fwait
push
adc
fs
add
ficoml
loopne
je
addb
outsb
imul
movsl
push
dec
test
stos
mov
inc
fbstp
add
lds
mov
pop
movb
and
mov
xchg
fs
sbb
jns
add
bnd
jl
mov
xchg
arpl
add
and
and
inc
push
adc
imul
mov
ja
cmp
sarb
das
add
ljmp
pop
push
int3
test
cmp
add
rcll
ret
inc
enter
out
out
inc
int3
xchg
jne
adc
push
fsubl
adc
mov
outsl
in
cmp
test
aas
xchg
imul
fmuls
out
add
mov
adcb
rorl
xchg
dec
add
pop
or
push
lods
add
sbb
iret
pusha
mov
mov
jmp
or
adc
sbb
rorl
insl
out
inc
mov
scas
push
js
nop
mov
fiadds
iret
and
push
mov
daa
int3
jae
jo
and
push
mov
in
add
xchg
lock
xchg
in
ficoml
add
or
sbb
push
jae
nop
add
std
push
xorl
lods
or
jbe
incl
dec
test
pop
ret
jno
rclb
adc
mov
add
mov
dec
pop
xchg
sub
daa
or
roll
sbb
adc
add
mov
mov
xchg
aaa
mov
cltd
aas
rcll
mov
cwtl
adc
push
imul
sub
das
cmp
loope
sub
jbe
add
adc
mov
fadds
nop
imul
xchg
int3
add
je
fwait
bound
outsb
adc
andb
test
in
add
jg
sub
add
sbb
mov
jmp
popf
out
add
pop
or
lock
loop
add
or
mov
mov
push
jo
jae
mov
inc
sbb
int
sbb
push
fwait
inc
cli
add
roll
push
pop
int
jnp
or
loopne
cmp
call
aas
add
inc
test
hlt
enter
stc
xchg
movsb
xor
mov
lret
sbb
mov
adc
pop
xor
inc
in
mov
push
clc
sbb
add
flds
lret
mov
loopne
push
xor
xchg
push
cld
mov
stos
adc
mov
sbb
iret
add
lock
pushf
add
cmp
int
xor
int3
add
cmp
lods
push
inc
hlt
xchg
push
add
jecxz
ljmp
mov
fucomi
mov
enter
jb
es
andb
subb
adc
in
subl
mov
loopne
push
jg
and
push
or
jbe
pop
xor
aas
push
sbb
jb
rcll
daa
or
iret
xchg
xorb
test
sub
rcrb
mov
mov
sub
mov
and
and
mov
test
js
add
cli
xor
push
inc
out
clc
add
fiadds
movsl
les
je
data16
das
push
outsb
jo
call
dec
test
jne
sbb
xchg
int
mov
add
push
test
mov
cmp
cmp
add
mov
or
cltd
dec
xchg
call
pop
cwtl
jmp
or
pop
rolb
mov
int
js
rolb
ret
lock
mov
pop
adc
sbb
add
ljmp
xchg
nop
cltd
ret
inc
add
dec
lcall
movl
mov
loop
test
mov
stos
mov
loope
movsl
inc
add
inc
cli
xchg
dec
mov
roll
and
pop
and
sub
pusha
mov
cmp
mov
ljmp
test
cmp
mov
jg
fstps
push
and
mov
add
add
test
lock
roll
aas
fwait
inc
and
mov
xchg
cmp
inc
add
jae
ror
ret
add
fadd
mov
jle
push
dec
mov
sbb
pop
add
inc
lock
cmp
imul
cltd
jl
lcall
sub
mov
in
mov
and
inc
sbb
push
sbb
in
jmp
ret
roll
xchg
or
xor
lods
mov
push
adc
sub
and
loop
add
scas
sahf
pusha
int3
or
sbb
into
adcl
mov
add
ret
hlt
sub
aad
add
inc
es
clc
add
mov
push
mov
and
sbb
lea
pop
inc
cmp
inc
out
ss
nop
imul
popa
rorl
add
hlt
adc
dec
fs
or
push
dec
out
pop
cmc
aam
xchg
nop
test
push
adc
add
lret
push
in
inc
in
leave
xor
add
push
mov
enter
adc
cmp
jg
pusha
fiadds
or
push
xchg
cmp
pop
cmc
jnp
dec
lret
sub
adc
sub
sti
cmp
test
iret
es
add
daa
and
mov
negl
shr
add
push
add
sbb
repnz
jnp
pop
or
and
adc
pop
fsubs
pand
shlb
cmp
mov
lods
loop
or
mov
ror
es
pop
addb
adc
stos
add
repnz
xor
xor
xchg
fsub
pop
xchg
lcall
mov
sarb
bound
add
mov
jo
shll
add
add
dec
imul
add
stos
ja
mov
and
insl
aas
or
mov
sbb
pop
cmp
add
loope
test
pop
mov
dec
das
mov
faddl
dec
push
shrb
adcb
lods
cmpsl
jg
imul
sarb
incb
shrb
notw
sub
inc
les
jge
in
addb
add
adc
cld
shrl
add
incb
filds
inc
fwait
in
mov
add
lock
add
popf
loopne
ret
fimull
sbbl
and
ret
sbb
fnstsw
jo
jno
mov
faddl
ljmp
in
adc
iret
jno
out
hlt
add
cmc
xchg
test
or
adc
pop
push
mov
mov
pop
push
ret
sbb
out
xorb
mov
mov
aad
adc
lds
subl
rolb
pop
arpl
popf
inc
xchg
dec
sarb
push
lds
cmp
pop
test
push
jmp
mov
add
fmulp
popf
leave
js
dec
es
cmp
cmp
inc
add
xor
test
shll
icebp
sbbb
hlt
inc
das
bnd
insb
ljmp
jmp
or
fisttps
andb
mov
sbb
out
push
bswap
add
push
arpl
and
add
out
xor
addb
dec
push
fwait
xchg
xchg
nop
sbb
sbb
jno
mov
sub
jmp
add
pop
inc
lret
sbb
inc
into
rclb
jae
paddusw
loop
xchg
aam
mull
inc
hlt
scas
cmp
add
lcall
add
jo
xchg
prefetcht1
sub
lahf
add
adc
mov
mov
sbbb
test
imul
mov
push
cmp
mov
test
jae
push
adc
dec
lret
dec
addr16
inc
clc
mov
into
mov
shlb
sbb
add
jo
inc
cmp
or
out
mov
xlat
sub
mov
icebp
mov
add
pop
mov
mov
mov
and
adc
clc
stos
sub
pop
dec
jmp
add
int
sbb
mov
push
add
and
sub
add
imul
or
cmp
add
test
loope
inc
out
sahf
cmpsl
cs
test
xchg
mov
xor
and
aaa
pop
enter
cmpsl
fwait
cs
xor
add
or
cmp
cwtl
inc
cmp
ret
cmp
jg
cmp
xchg
roll
fadds
clc
xor
popf
ljmp
add
mov
push
nop
stc
mov
push
fists
cli
roll
repz
push
sbb
ficompl
popf
jp
add
add
mov
pushf
sar
mov
adc
add
mov
xchg
loopne
adc
add
repz
fsubs
mov
sahf
repz
jl
push
dec
add
xchg
incl
and
pop
rcll
popl
andl
mov
or
mov
push
pop
sub
in
xchg
orl
mov
pop
cmpsl
mov
lds
inc
in
out
stos
jo
dec
pop
mov
cmp
in
fcmovnb
sbb
inc
dec
pop
mov
in
lret
daa
loopne
sbbb
scas
mov
call
in
fs
iret
stos
pop
sub
add
mov
add
out
pop
ss
add
mov
insl
or
mov
lods
rolb
js
in
out
pop
jnp
in
adc
out
adc
xor
pushf
add
lods
pusha
shll
dec
add
data16
cmp
nop
cmp
add
xchg
fnstcw
imul
mov
sub
xor
sbbb
mov
add
fsubrs
xchg
add
ret
sub
sub
test
jge
or
sbb
lds
mov
fldenv
push
popf
add
test
rolb
mov
pop
adc
sbb
push
mov
adc
mov
shl
pop
sbbb
dec
mul
inc
cmpsb
pop
insb
add
xor
pusha
add
adcb
dec
movl
push
faddl
sub
adc
cmpsl
add
jns
jle
xchg
fildll
xchg
push
or
add
je
add
jl
adc
out
cwtl
and
jae
mov
cmp
daa
push
push
xabort
mov
dec
or
andb
rsqrtps
rolb
movsb
cmpsl
clc
push
and
incb
scas
outsb
fsub
add
xorb
fsubs
sub
adc
loopne
add
mov
dec
or
std
in
or
mov
filds
jge
sbb
adc
mov
jg
data16
sti
sbb
mov
add
sbb
jg
add
xchg
push
movsl
dec
sti
adc
gs
int3
add
jmp
movsl
jl
add
nop
data16
pop
push
popf
les
insl
inc
add
sub
pop
add
add
rcll
es
adc
std
add
add
jecxz
inc
add
cmp
add
shrl
cwtl
xchg
sub
add
adc
xchg
and
roll
or
lea
push
mov
push
test
pusha
nop
sub
fbld
jno
scas
stos
imul
out
rep
std
test
adc
sub
mov
adc
add
rorl
addr16
pop
cmp
mov
jmp
test
add
adcl
lcall
push
add
push
outsb
or
hlt
sbb
pop
in
inc
out
addr16
rorb
arpl
add
iret
xchg
insl
test
jne
and
mov
add
add
shll
pusha
pop
ja
mov
pop
loope
mov
js
cltd
push
mov
aad
adc
icebp
insb
jmp
dec
aas
data16
jno
daa
lods
xchg
add
fnstenv
jmp
icebp
lods
fadds
xor
push
lock
xor
rolb
nop
lods
xchg
cmp
loop
xchg
jle
out
jb
mov
and
icebp
stos
sbb
fsubs
call
addb
jns
push
stos
dec
dec
popl
or
addr16
lahf
cld
mov
fldl
xchg
pop
mov
leave
mov
dec
xor
dec
imul
les
jecxz
or
loope
jo
add
push
loop
mov
jnp
movsl
adcl
push
je
add
sub
sbb
inc
xor
add
stos
mov
ret
or
inc
add
jns
add
insb
lret
mov
pop
add
push
sahf
mov
std
cmp
xorb
repz
mov
mov
fistl
xchg
dec
inc
add
jbe
rolb
sub
call
inc
fldenv
mov
test
or
adcb
add
out
mov
andb
push
stos
sbb
mov
xchg
in
mov
add
out
and
dec
enter
rcll
xor
sub
sub
lock
or
stos
movb
test
add
not
push
ror
outsb
pop
mov
cmp
xchg
pop
xchg
fsubrl
adc
add
push
lret
and
rolb
push
ss
xor
addr16
int3
pop
push
add
fistl
ficompl
jnp
or
add
add
xor
stos
adc
xchg
dec
xor
iret
jmp
clc
lods
scas
cmp
xor
adc
xor
fsub
lahf
adc
and
aas
cmp
xor
xchg
aam
pop
shlb
lods
out
lcall
jl
pop
sbb
mov
lret
out
clc
xchg
subl
int3
cmp
mov
xchg
inc
shlb
and
add
pop
stc
cmp
cmp
movsl
dec
add
lret
or
and
mov
nop
sbb
mov
add
adc
cld
xor
mov
call
rolb
cmp
add
push
popf
nop
insb
sbb
push
add
ss
add
jbe
or
dec
in
std
cmpsb
push
notl
sub
add
add
enter
lods
mov
outsb
and
fstpt
xchg
inc
cmp
ret
mov
push
movsb
punpckhwd
dec
add
jns
std
mov
xor
push
cmp
add
int
and
fisubrl
ret
pop
xchg
call
cli
or
mov
sbbb
or
mov
roll
xchg
dec
or
jbe
cwtl
loopne
es
jns
int
dec
ljmp
jl
add
xchg
je
in
mov
push
aaa
lods
xlat
add
shrb
orl
sub
adc
adc
fadds
out
lahf
stc
movsb
jp
lret
push
jecxz
fnsave
enter
ds
in
psubq
pop
adcb
mov
mov
push
jo
adc
inc
out
pop
jns
and
sub
mov
loop
lock
icebp
in
inc
cmp
jl
mov
sbb
testb
xor
push
outsb
fldenv
sub
or
shll
adcb
sbb
sbb
pop
add
cmpsb
push
cmc
jo
test
sbb
inc
rcr
jp
add
int3
lret
aaa
loope
push
add
xchg
adc
xor
pop
mov
cwtl
mov
cmp
or
add
lock
adc
inc
mov
fucom
jb
outsb
push
add
dec
es
add
ljmp
add
jo
or
jns
fcom
mov
jp
int3
daa
in
imul
and
sbb
dec
cmpsb
idivb
cwtl
push
pusha
adc
enter
aas
xchg
push
insl
adc
xor
jecxz
stos
lods
inc
lret
push
fs
jns
inc
xchg
pop
lret
rolb
sub
arpl
or
in
jge
jae
or
fildll
add
mov
mov
lahf
shl
add
xor
out
loopne
mov
out
dec
or
daa
addb
les
mov
xlat
ss
mov
add
pop
test
sbb
mov
and
xchg
pusha
jecxz
js
addb
adc
rclb
jae
or
sbb
and
pop
test
add
inc
fisubl
in
sub
xchg
mov
xchg
sbb
rcrb
out
stos
test
sbb
pop
adc
or
inc
sub
adc
in
push
push
xchg
sub
jg
dec
add
mov
dec
cltd
add
or
dec
jmp
in
rolb
cmp
sub
pop
cli
mov
mov
mov
inc
rclb
dec
jl
dec
jge
fisubl
pop
sub
hlt
daa
cmp
sbb
call
pop
les
cmp
cwtl
test
sbb
das
sbb
sbbl
in
jno
add
cltd
xchg
and
mov
jnp
xchg
outsb
cmp
or
mov
sub
mov
jge
pusha
mov
pop
and
mov
fs
xchg
add
inc
lcall
ss
mov
push
sbb
mov
and
lret
jb
cli
outsl
add
es
andb
ss
cld
aaa
pushf
gs
inc
xor
ret
sbb
js
push
mov
daa
iret
or
in
hlt
pop
or
data16
outsb
xchg
sbb
dec
add
push
add
das
mov
cmp
inc
or
test
cld
xchg
xor
cmpsl
dec
out
add
and
test
push
adc
add
sahf
jno
adc
les
aam
mov
push
jecxz
movsl
cmpb
mov
pop
in
leave
jmp
pop
movsb
add
xchg
lds
add
mov
popf
jmp
or
push
cwtl
insl
inc
clc
push
lea
stos
and
add
cmpsl
repz
jecxz
add
sahf
dec
inc
pop
push
sub
adc
loopne
out
sbb
or
and
outsl
and
push
sbb
stc
dec
add
push
enter
bound
pop
xlat
add
pusha
jno
and
stos
push
and
fiaddl
repz
pop
leave
inc
adc
or
mov
scas
cmp
inc
add
decb
xor
adc
xchg
mov
test
and
jne
shll
pop
stc
inc
adc
dec
dec
loopne
xchg
in
es
rcrb
clc
sbb
add
out
add
jge
jle
repnz
add
mov
xchg
or
loopne
std
push
and
jmp
add
xor
add
icebp
add
xchg
sub
sbb
sub
sahf
xlat
cmp
das
xchg
movl
loopne
loope
and
xor
jno
fiadds
add
lret
fistps
pushf
add
shrb
lret
add
inc
mov
jns
and
cli
fadd
imul
mov
adc
ljmp
pop
dec
aad
sub
call
les
nop
xor
jo
test
test
lea
push
adc
cmp
mov
shlb
cmp
test
inc
sbb
cltd
add
xor
add
fldl
xor
movl
lahf
xchg
add
hlt
mov
arpl
mov
push
mov
push
lods
xorb
xchg
inc
xchg
mov
or
and
mov
lahf
pop
fsubrl
rclb
jle
push
test
stos
cmpb
and
add
mov
icebp
jl
xor
enter
jl
add
mov
mov
sbb
add
icebp
mov
push
add
pop
sbb
xorb
loop
inc
jmp
adc
add
xor
dec
mov
mov
pop
notb
push
sbb
imul
push
lea
pop
add
pop
std
into
test
test
pusha
enter
jae
dec
icebp
fldt
jnp
dec
push
pushf
or
add
sbb
into
mov
add
sbb
push
shll
nop
xchg
xor
mov
lret
and
sbb
fisubrs
in
push
shrb
cmp
loope
mov
and
jbe
or
scas
lock
push
add
push
xchg
hlt
in
fwait
pop
popa
pop
cmp
adc
dec
inc
out
fstps
mov
pop
mov
rcrb
dec
add
mov
pop
stc
xor
repnz
cwtl
test
cmp
add
loope
ja
scas
mov
push
loopne
sbb
mov
xchg
pop
push
aam
lret
mov
cmp
and
loopne
and
repz
pop
iret
add
sub
cmpl
insb
testb
pop
ret
clc
or
add
xchg
shrb
in
adc
dec
mov
rclb
in
sar
jecxz
pushf
sbb
sub
jl
jp
or
add
jns
lret
mov
xchg
push
add
or
jne
subl
add
clc
shl
imul
jno
dec
call
std
mov
jecxz
in
test
add
pop
imul
fcompl
int
repz
xor
subl
push
sbb
lcall
add
add
sbbb
jo
and
jb
sbbl
into
lods
push
add
outsl
hlt
inc
repnz
xor
loopne
lds
pop
xchg
inc
sub
pushf
add
out
clc
push
mov
push
and
in
add
test
cltd
ret
pusha
push
sub
fs
sub
add
dec
scas
add
mov
sbb
lret
in
faddl
mov
mov
popf
pop
push
lahf
test
xchg
mov
push
shll
pop
cmp
dec
inc
xchg
add
jb
mov
inc
into
pushf
and
enter
add
jno
popa
push
xchg
add
sbbl
icebp
add
pop
int3
dec
das
imull
in
pop
lds
dec
loopne
inc
popf
mov
scas
xchg
cmp
jns
mov
aad
sub
popf
add
in
lcall
add
push
dec
mov
mov
add
test
pop
add
clc
jl
sub
push
cli
inc
in
das
sahf
add
outsb
adc
add
xchg
or
add
add
insl
lret
lea
lret
insb
add
in
in
inc
aaa
pop
add
sbb
loopne
bound
hlt
mov
cmp
ret
sbb
test
scas
inc
and
fnstenv
lea
das
daa
add
int
icebp
jo
xor
ret
lahf
add
lcall
pop
test
xchg
jnp
mov
xor
int3
push
mov
repz
and
or
add
frstor
das
push
in
jne
lock
dec
les
xchg
gs
jge
cwtl
not
jmp
add
dec
xor
sub
js
and
ret
leave
fdivrl
add
dec
xchg
nop
dec
aas
cmp
push
fmuls
in
imulb
jl
enter
out
or
sbb
push
shrb
add
mov
ljmp
pop
add
mov
mov
aas
lea
lods
mov
in
sarb
lods
ss
mov
enter
dec
add
lea
pop
add
test
mov
or
push
pushf
add
mov
cmp
call
xchg
mov
sbb
cmp
push
inc
lock
cmc
inc
add
dec
xchg
inc
add
sahf
xchg
outsl
xchg
adc
mov
insb
and
add
jo
sbbb
or
out
add
push
pop
mov
adc
int3
jl
dec
incl
add
rol
or
andb
das
dec
xor
out
jmp
inc
xchg
dec
sbb
xchg
and
scas
jns
pop
pop
or
add
jnp
push
add
es
sbb
divl
adc
pop
filds
inc
lret
popf
inc
adc
sub
sbb
hlt
lahf
inc
clc
mov
enter
leave
jne
shlb
jb
xchg
sub
out
inc
gs
int3
adc
sbb
sbb
cmp
or
test
push
mov
xchg
add
push
dec
jo
cmpb
stos
push
cwtl
jb
shll
add
adc
jl
mov
fwait
add
xlat
adc
in
lret
and
add
aad
pop
sbbb
sbb
ret
lds
jo
outsb
mov
mov
pop
sub
add
sahf
insb
xchg
subl
loope
add
imul
xchg
cmp
or
aam
outsl
add
test
imul
mov
cltd
pop
and
push
mov
pusha
and
add
and
sti
cwtl
and
cmp
outsl
sub
or
xchg
push
lods
gs
jne
cmp
push
or
lods
xchg
push
fs
lret
cmp
jp
push
jl
add
push
jle
dec
add
ss
rolb
mov
pop
es
bound
and
adc
andb
notl
add
pop
mov
cs
mov
and
mull
push
rclb
jns
jno
inc
inc
nop
jo
fdivrl
mov
mov
cs
sarb
adc
mov
add
into
repnz
int
xor
in
push
sbb
inc
or
dec
lea
jecxz
shl
jno
dec
or
into
fists
insb
icebp
jo
call
add
xchg
cld
xlat
dec
filds
jnp
add
in
repnz
jbe
add
mov
push
leave
add
xor
repnz
inc
test
mov
push
pop
mov
xchg
xor
pusha
test
add
je
mov
mov
in
ret
pop
sbb
pop
lret
nop
cmpsl
mov
cmp
int
and
inc
inc
pop
or
inc
mov
push
pop
ljmp
xchg
xor
pop
int3
pop
lods
cli
mov
pop
mov
mov
mov
inc
push
rorb
pop
enter
bound
mov
or
loop
adc
push
jnp
orb
add
imul
mov
in
cld
test
xorl
add
add
or
mov
lret
loopne
subb
mov
xchg
aas
jl
dec
or
out
clc
xor
add
mov
sbb
adc
xlat
cmpxchg
sahf
jnp
or
adc
cli
xchg
mov
subb
sub
pushl
lcall
cwtl
push
cmp
and
mov
push
jmp
mov
cld
adc
mov
lea
mov
jbe
dec
mov
sbb
sysret
out
outsl
lock
into
push
arpl
pop
sbb
movsb
dec
rorl
add
sarl
popa
rorb
xchg
std
call
pop
es
dec
xchg
pop
je
pop
dec
add
add
push
add
ja
cmp
cmp
mov
xorb
rcrb
mov
adc
scas
pusha
jge
add
repz
xor
jb
add
cs
in
xlat
add
scas
xor
nop
filds
aad
sub
rorb
dec
nop
sub
inc
push
add
jb
ret
adc
mov
or
das
lods
jne
sbb
mov
sub
sub
mov
sbb
fistpl
iret
jo
add
in
jbe
lock
and
dec
or
fisubrs
xor
ljmp
jl
push
mov
jp
push
and
subb
sub
call
mov
and
mov
pop
dec
xchg
pop
inc
push
add
pop
mov
add
cmp
add
pop
adc
jl
divl
mov
rolb
pop
push
insl
adc
les
push
mov
pop
mov
adc
mov
aas
pop
xchg
mov
adc
cmp
xchg
jae
sub
jns
xchg
sbb
ret
pop
mov
dec
sbb
loope
test
stc
andb
pusha
lods
and
add
dec
nop
jp
inc
xorb
mov
movsl
test
rcrb
sbb
stc
add
mov
in
fdivl
or
inc
mov
push
fldl
fdivrs
imul
in
add
jbe
add
pop
nop
arpl
xchg
push
mov
push
or
add
lea
je
lcall
xchg
ror
imul
pop
cmp
and
int3
or
pop
nop
lcall
xlat
add
aas
mov
cld
repz
push
inc
loopne
arpl
out
mov
les
cmpsl
movsl
frstor
inc
aam
or
mov
movl
pop
mov
dec
loop
aad
clc
movsb
mov
xchg
add
xor
and
pop
mov
pop
push
iret
pusha
imul
out
xlat
xor
push
sbb
add
bound
pmaxub
xchg
add
fistl
roll
and
and
or
sub
cmp
stos
push
in
adc
add
mov
ret
or
xchg
lods
jg
mov
out
leave
ja
mov
cld
dec
add
sbb
cmp
lldt
outsb
jnp
in
cmovo
and
fdivs
add
enter
out
or
sub
decl
or
jmp
daa
mov
lods
mov
pop
movsl
cmp
ret
xchg
mov
mov
hlt
or
lret
fldenv
adc
jnp
dec
enter
es
cmpsb
add
mov
cmp
cs
dec
mov
imul
hlt
je
push
mov
jb
add
xorl
and
hlt
sbb
sub
test
and
nop
xchg
je
jge
pop
sbb
push
add
push
popa
jmp
jno
add
sbb
sti
mov
or
loop
add
loop
xchg
mov
iret
and
pop
insb
outsb
daa
dec
add
lret
pop
flds
jecxz
add
sbb
mov
arpl
out
and
cmp
mov
add
repz
leave
shlb
xchg
or
outsb
push
add
xlat
addr16
out
or
pop
roll
rolb
inc
aas
divb
in
pop
xchg
cld
mov
xchg
cmp
mov
add
push
mov
mov
test
andb
pushf
test
ffree
fwait
pop
adc
push
jecxz
sub
stos
mov
add
push
mov
jae
loope
push
fcmovu
push
jo
fldcw
jg
sahf
add
ret
or
and
hlt
pop
and
xchg
pop
aam
adc
inc
sub
movsb
inc
xor
in
mov
imulb
sbb
fs
cli
shrb
xstore-rng
cmpsl
xchg
fimull
mov
adc
mov
loop
and
dec
jno
adc
xor
mov
cmp
cld
xchg
cmp
add
mov
fwait
add
pop
aam
nop
xchg
and
imul
shll
add
pop
adc
dec
aas
jb
mov
adc
int
repz
push
or
and
iret
cmp
mov
jle
sub
pop
in
incl
test
repz
stc
inc
es
subb
adc
jmp
add
lods
dec
test
movsl
jle
push
push
xor
lds
xor
adc
icebp
std
maskmovq
testl
movsb
popl
inc
fcoms
in
cs
cmp
stc
or
int3
sub
jp
push
xchg
lret
cmp
pop
sub
sbb
pop
ds
push
add
xchg
jno
mov
pushf
jns
add
or
test
hlt
stc
cmp
movl
test
dec
sbb
cmp
sbb
add
lahf
jmp
fisttps
pop
jle
mov
add
sbb
add
adc
imul
add
loop
dec
test
jmp
sub
mov
mov
or
imul
dec
add
dec
jecxz
hlt
aam
inc
add
lahf
push
imul
sbb
inc
movsl
lds
sti
inc
cs
cmp
mov
imul
jge
adc
pop
inc
xchg
sbb
and
js
jb
pop
scas
push
loop
cmpsl
addr16
cmpsb
std
add
push
pusha
cmp
mov
cmp
jg
jbe
rolb
icebp
test
pop
pop
aam
cmp
lret
popf
mov
in
sbb
dec
ds
test
inc
jnp
lock
add
daa
add
sahf
add
pop
push
add
sarb
inc
mov
rcll
push
jne
aam
mov
and
cwtl
add
cmp
arpl
fs
rcll
add
cmpsb
sbb
iret
rcrl
adc
mov
add
sbb
mov
loopne
add
enter
cltd
push
sbb
xchg
ss
jne
cmp
mov
bound
sub
push
pop
add
mov
and
test
mov
mov
jo
inc
inc
jl
bound
and
fsubl
repnz
sub
out
scas
shll
add
adc
inc
pop
mov
and
mull
xorl
test
xchg
sbb
mov
cmpsb
adc
data16
and
inc
mov
lea
pop
into
fldl
push
loopne
cld
iret
mov
rol
sub
shll
lods
loop
dec
and
add
jnp
push
adc
sti
gs
dec
jl
add
inc
stos
je
lods
mov
pop
shrl
or
outsl
rorb
mov
shll
mov
daa
and
xchg
lea
jl
push
add
and
inc
add
lcall
mov
pop
sbb
stos
sbb
sbb
js
add
adc
or
dec
into
imul
push
lahf
add
popl
mov
lods
cwtl
pop
jae
xor
orl
or
lods
and
xchg
lret
int3
cmpsl
sbb
sbb
stc
sub
xor
in
aad
mov
jne
dec
xor
outsl
adc
lret
test
push
add
dec
xchg
jmp
jne
or
test
add
pushf
aad
jno
clc
xchg
ds
jnp
rorb
add
out
mov
cmpsl
loopne
rclb
out
dec
lods
or
sahf
cmpsl
mov
ds
or
sbb
pusha
inc
or
enter
mov
aad
icebp
adc
sub
stos
add
push
mov
add
mov
adc
dec
repnz
in
xchg
dec
shl
pop
movsl
fldcw
jns
and
imul
in
pop
out
sbb
sbb
push
xor
xor
push
shl
pushf
mov
inc
sub
int3
cld
outsl
xor
cmp
mov
add
or
push
out
or
arpl
fucom
mov
mov
inc
xchg
mov
pusha
lahf
daa
faddl
lret
movsl
or
loope
pop
sbb
stos
fs
js
daa
es
fstl
jae
ds
invd
cmp
clc
outsb
sub
loopne
jl
add
pop
adc
add
push
in
movsb
xchg
and
push
orl
inc
aaa
fidivrl
cmpsl
add
jns
dec
add
loop
repnz
push
pop
pop
add
aas
sbb
xchg
push
mov
imul
pop
pop
add
sbb
add
loopne
ja
inc
mov
fists
cmp
jle
xchg
stos
sahf
sub
movb
rcrb
push
add
enter
pop
loope
inc
jmp
add
mov
jg
pop
pop
leave
mov
lcall
popf
sbb
mov
pop
lahf
rclb
xor
sub
mov
aad
add
mov
mov
out
cmp
dec
add
add
xchg
cwtl
stos
or
add
or
add
dec
mov
imul
sbb
xchg
pop
mov
mov
aad
insb
aas
pop
filds
fs
jno
std
sbb
push
add
test
mov
inc
push
add
xor
clc
test
aaa
test
sbb
push
xchg
push
cmp
xor
imul
add
push
sahf
fisubs
pop
sbb
xchg
xor
inc
popf
scas
jo
jp
cmp
push
add
jne
push
test
shrb
or
sbb
pop
pop
subb
inc
mov
push
adcb
lcall
out
js
mov
add
fadds
test
sub
aas
add
add
outsb
pop
nop
test
inc
cmp
dec
fiaddl
pop
sub
adc
lea
and
call
add
dec
adc
les
sub
or
nop
es
push
mov
jge
sbb
pop
lea
push
js
push
imul
mov
pmulhw
ret
sarb
shll
ds
xor
cmp
fldl
push
or
orb
dec
sub
lock
add
out
or
push
verr
dec
fidivl
and
or
jne
adc
mov
push
sbb
xor
mov
mov
or
inc
sub
add
jmp
jo
add
adc
leave
dec
imul
add
mov
mov
push
or
add
sub
ret
xchg
mov
add
out
jnp
das
lahf
sbb
mov
and
xchg
push
sub
js
div
in
or
sub
cmp
dec
add
mov
stc
fdiv
filds
pushf
cld
dec
aaa
add
mov
or
inc
pop
pushw
cmp
sbb
adc
and
add
into
das
cmp
dec
cld
xchg
jb
sub
jo
push
adc
mov
add
adc
cmp
jecxz
push
pop
imul
xor
jne
lret
std
inc
jo
pop
add
mov
out
jae
cmp
test
xchg
add
mov
sbb
inc
lea
and
add
xor
or
aaa
xor
push
add
mov
pop
add
leave
stos
mov
pop
jle
adc
adc
orb
add
and
sub
mov
sbb
mov
rcr
es
shll
xchg
ret
lcall
adc
cli
fwait
repnz
lret
clc
das
mov
xchg
sbb
cld
shrb
xchg
push
push
push
sbb
and
add
int3
cmpsb
pop
or
xor
push
shlb
lds
data16
cltd
pop
leave
test
insl
dec
sbb
xchg
shll
in
inc
bnd
sbb
inc
andb
inc
xor
and
sub
mov
in
jp
lret
xchg
or
pop
xchg
xchg
and
and
stc
sub
test
cmpsl
orb
outsb
sbb
out
test
jp
add
mov
inc
adc
popa
push
add
mov
mov
xor
mov
pop
add
pusha
inc
sub
cmp
ja
iret
mov
in
cmp
call
add
mov
packssdw
inc
add
popa
shll
jns
mov
mov
xchg
push
or
jno
fwait
add
fidivs
sub
add
es
pop
ljmp
inc
nop
or
inc
cwtl
int
xchg
add
mov
ss
jg
push
je
or
sbb
push
add
daa
gs
pop
loopne
mov
call
sbb
or
push
repnz
mov
gs
mull
js
fsubrp
pusha
call
imul
fcmovb
addr16
icebp
adc
call
jle
add
dec
mov
mov
sbb
movsl
jp
mov
xor
xlat
add
aam
sbb
inc
or
out
cli
adc
shlb
adc
cmp
add
adc
and
outsl
in
or
mov
ret
stos
pop
xorb
insb
inc
xor
add
mov
push
sub
shlb
add
adc
add
jo
mov
jmp
andb
mov
in
xchg
mov
push
ds
test
push
add
push
and
insb
or
enter
add
push
fisttpll
sbb
inc
pop
pop
rcl
testb
sti
in
popa
call
out
fwait
sbbb
push
pusha
int3
insb
adc
add
add
jno
adc
mov
push
mov
push
xor
cmp
rclb
pop
sub
or
cltd
add
pop
out
cmp
sbb
stos
cs
out
jmp
repz
sub
push
dec
push
xor
cli
nop
sarb
dec
lea
xor
std
imull
push
cmpb
nop
or
jb
or
push
push
sbb
lret
jnp
inc
pop
rcll
jge
fsub
movsb
sub
orb
or
jo
add
inc
cs
or
imul
mov
ret
cmpb
or
sub
add
and
imul
mov
out
mov
aas
in
lahf
pop
jnp
call
adcb
mov
mov
add
adc
add
or
push
add
cld
pop
sbb
vmread
lea
popf
enter
xlat
xchg
dec
xchg
movsb
imul
adc
add
mov
gs
push
lret
push
mov
addb
sub
sahf
pop
and
xor
enter
or
int3
dec
push
fdivl
loop
pop
shrb
pop
aaa
jecxz
mov
pusha
lods
cwtl
adc
add
mov
cmp
inc
mov
jle
movsb
sub
lds
mov
jo
icebp
add
les
or
pop
dec
fmuls
aas
and
adc
add
xor
or
mov
add
inc
cmp
je
bnd
dec
cmp
jg
mov
clc
imul
jae
dec
xchg
sub
push
xchg
add
loop
je
pop
arpl
inc
loope
fsubs
mov
pop
xchg
cli
scas
mov
mov
add
mov
pop
test
mov
mov
or
in
and
daa
and
push
fisubs
push
mov
into
and
or
dec
call
je
add
insl
sub
xchg
pop
jne
dec
xchg
pop
add
test
sbb
outsb
mov
fiaddl
fdivl
call
leave
popf
pusha
add
icebp
xor
nop
shlb
xor
mov
loope
shl
or
add
adc
into
jne
mov
jg
sbb
mov
sub
add
rorl
imul
lahf
jge
adc
or
pushf
xor
addr16
dec
orb
aad
push
mov
shrb
inc
and
mov
push
add
cmp
pushf
mov
jmp
sub
leave
ja
add
rorb
jl
das
pop
add
sbb
in
jo
cld
dec
dec
or
add
aam
mov
or
dec
fisubrs
mov
adcb
add
popf
adc
pop
or
pop
rorl
fists
movsb
xchg
mov
ss
adc
in
faddl
xorb
in
daa
iret
repnz
out
out
xchg
mov
shlb
pop
push
cwtl
sbb
lret
mov
stos
sub
loopne,pt
out
add
mov
pop
adc
adc
cmp
push
and
pop
js
out
mov
lods
lahf
inc
call
pusha
xchg
xlat
mov
jecxz
sbb
xor
or
xchg
xor
push
in
cmpxchg
xor
lahf
popf
imul
in
push
or
mov
xchg
xchg
and
xchg
ret
add
jp
or
pop
insl
cltd
sti
add
xor
ror
jae
xchg
push
arpl
add
lods
in
and
dec
adc
test
in
orb
testl
loopne
cmc
pusha
add
cmpsb
pop
test
inc
popf
cli
push
mov
insl
xchg
push
je
sub
mov
dec
cmp
movsb
cmc
adc
fstpt
fsubl
and
mov
mov
insb
mov
jno
add
shrl
xlat
std
cmp
div
pop
jge
and
subb
daa
add
lds
cmp
imul
inc
movb
stos
imul
test
cmpsl
mov
fiadds
rcll
inc
xchg
call
lock
dec
jge
int
dec
cld
test
and
jae
mov
call
xchg
or
insb
int
pop
add
es
js
inc
add
pop
repnz
mov
daa
cmpsb
sub
dec
loopne
lret
mov
call
icebp
push
sahf
xlat
aam
add
sbb
or
lcall
call
and
dec
imul
push
xor
lods
adc
enter
inc
or
scas
adc
sbb
sbb
dec
fcmove
repnz
icebp
pop
lret
sbbb
ret
adc
add
inc
mov
sbb
dec
pop
push
mov
jno
and
rorb
loopne
std
cmp
inc
pop
sar
test
pop
mov
rorb
ljmp
fisttpll
fisubrl
loope
mov
pop
lcall
mov
add
js
out
sbb
hlt
imul
mov
fwait
sti
jbe
mov
mov
adc
add
out
data16
add
int3
pop
movsl
push
adc
pop
xor
adc
call
add
pop
in
dec
pshufw
cld
sbbb
dec
fimull
jmp
add
js
xor
or
aas
cmpsl
mov
xchg
jmp
adc
xor
imul
mov
in
and
fbld
ret
mov
addl
push
sub
cmp
mov
or
insb
shll
stos
nop
aaa
add
and
add
jns
in
add
jge
and
or
ljmp
cmp
pop
lods
stos
add
insb
or
and
xor
mov
mov
andb
add
adc
add
sbb
add
mov
pushf
pop
mov
popf
in
add
mov
and
orl
cmpsb
aam
bound
leave
jl
in
push
jg
jle
add
nop
loop
rep
inc
std
nop
nop
add
bound
lcall
cli
addb
push
push
lea
xchg
pop
stos
es
lret
cwtl
add
iret
mov
movsb
sahf
add
icebp
xor
test
jmp
pop
andb
fs
inc
loopne
add
or
jno
cltd
clc
sub
add
pop
xchg
lds
cld
jg
adc
loop
fstpt
sbb
xchg
jecxz
cmpb
cmp
mov
add
cmp
push
fildl
xor
inc
mov
movsb
add
mov
cmp
ja
add
sti
xor
cwtl
add
cmp
loope
sbb
sub
call
enter
cltd
enter
jg
push
pop
mov
sbb
mov
cld
es
roll
and
aaa
jne
add
inc
sar
cmp
and
add
sbb
mov
add
jl
ret
stos
into
and
or
dec
and
call
add
leave
pushf
test
pop
imul
sub
cmovge
mov
icebp
jmp
sahf
pop
dec
add
pop
out
add
xor
rolb
lods
adc
push
xor
adc
cld
pop
test
ffree
mov
cmc
stos
sbb
mov
fisubrl
inc
dec
add
in
lods
sub
push
lret
dec
cmp
shlb
or
mov
cmp
mov
inc
sbb
add
add
outsb
test
jl
mov
add
add
mov
gs
insl
das
push
xchg
adc
dec
add
xor
dec
mov
adc
fmul
repz
push
mov
add
dec
in
insl
mov
mov
scas
negl
or
test
lods
jmp
test
pop
ja
xchg
cld
cmpsl
push
fdivrs
mov
orb
cmp
mov
jo
loope
cmp
dec
jns
das
insb
es
or
in
or
out
lods
lds
and
jnp
in
rep
add
xor
xor
mov
mov
clc
pusha
inc
ret
and
jb
cmpsb
stos
sbb
adc
out
pop
sbb
add
mov
sbb
cs
je
sahf
push
mov
add
loop
pop
lahf
mov
nop
lods
or
pop
inc
pusha
lods
xchg
and
and
mov
clc
mov
dec
sub
loop
aam
and
fs
sub
push
adc
fistl
push
inc
cwtl
test
cld
lds
loope
add
inc
push
jne
in
mov
ror
push
or
inc
or
adc
sbb
push
mov
xchg
and
out
mov
pop
in
add
mov
rolb
or
mov
fldenv
icebp
test
ret
sub
fisttpl
mov
and
xchg
lods
xor
jne
add
inc
mov
pop
cmp
jge
lods
movsb
cwtl
lds
out
sarb
int3
push
mov
testl
cld
jno
inc
pushf
mov
ljmp
mov
test
add
sti
push
enter
xchg
call
add
mov
stos
push
je
xor
jb
inc
mov
sub
mov
out
push
sahf
call
test
push
jp
cmp
aas
add
movsl
pop
cltd
push
jnp
sub
js
dec
std
call
inc
xchg
testb
call
xchg
in
mov
cmp
add
popf
ret
cmp
repz
verr
and
shl
pop
outsb
pop
push
scas
sar
sbb
jecxz
push
je
push
xchg
es
pusha
add
ljmp
int3
add
xor
daa
andb
cmp
imul
adc
in
pop
testl
out
cltd
and
sbb
ror
sbb
add
insb
icebp
out
xchg
mov
xadd
retw
ret
inc
and
dec
rclb
lret
cmpsl
cltd
cmp
xchg
in
or
inc
adc
lds
inc
testb
nop
or
rclb
lods
ljmp
ljmp
nop
add
movsl
out
push
inc
add
cli
sbb
cwtl
cmp
mov
add
movsl
pushf
add
mov
ja
enter
lcall
pusha
and
lock
test
push
xorb
xor
cmp
mov
pushf
pop
fwait
sbb
mov
pop
push
test
mov
cld
movsb
push
and
add
hlt
add
popf
ljmp
fadds
ret
sbb
add
lea
setg
inc
test
inc
adc
push
icebp
add
mov
loop
cwtl
mov
adcl
xlat
lds
fcmovnb
hlt
push
dec
out
es
add
lods
hlt
cltd
pop
mov
mov
lods
xor
movsb
mov
jmp
lea
push
lret
fwait
pop
add
mov
cmp
add
adc
nop
xor
cmp
nop
loopne
movsb
xor
sbb
addb
lock
out
cmp
ret
rorb
dec
add
decb
pop
std
push
lds
inc
pop
xchg
scas
xor
push
cli
mov
imul
clc
addr16
in
adc
rol
daa
and
pop
sub
add
lods
dec
out
xor
ds
lock
add
dec
or
cld
popa
roll
mov
enter
add
lcall
movsl
fnstcw
mov
or
fsubr
sub
andl
loopne
call
adc
into
insl
mov
pop
push
aaa
pusha
or
aad
xchg
push
pop
test
js
adc
cmp
idivl
add
pop
jne
and
data16
lock
mov
add
cmpsb
pop
bound
pop
ljmp
xchg
icebp
aad
mov
imul
sub
xchg
push
addb
divl
add
jp
mov
cmpsb
add
or
repz
js
and
jg
push
cmp
shll
adc
inc
outsb
adc
stos
mov
xchg
subb
xor
inc
or
pop
mov
or
repnz
int3
mov
fsubrl
aaa
imul
fisubl
mov
js,pt
add
cltd
dec
mov
int3
mov
xor
rclb
adc
loopne
fadds
add
pop
mov
or
lock
sbb
ss
clc
dec
jb
iret
mov
dec
sub
add
xor
dec
cltd
ja
mov
jle
add
xchg
xchg
or
add
repnz
movaps
js
add
jge
mov
jmp
mov
adc
lods
adc
add
add
xchg
ror
add
mov
xor
xchg
pop
inc
xchg
inc
mov
scas
add
push
mov
fs
add
arpl
push
jmp
xchg
add
fidivrl
sub
cmpsl
and
popf
jg
mov
dec
add
in
inc
mov
inc
jnp
adc
enter
mov
jno
lahf
cmpsl
add
cld
data16
add
add
fldenv
jbe
cmp
movsb
nopl
inc
jne
cmp
call
enter
fcompl
add
je
mov
inc
adc
pop
xchg
orl
pop
pop
dec
inc
test
ljmp
arpl
fisttps
adc
addl
adc
adc
mov
add
mov
xchg
aam
cmp
xchg
cmp
cmp
lock
gs
add
mov
adc
or
ret
inc
fcoms
mov
mov
cmp
xor
lcall
add
insl
cltd
fwait
add
sub
push
shrb
pusha
inc
and
add
in
outsl
dec
or
pop
xor
jbe
sub
loope
and
es
std
jl
rolb
in
sbb
add
lods
enter
sti
jp,pt
aam
in
mov
roll
jmp
xor
add
jge
shrb
aas
xchg
and
mov
gs
repz
std
pop
test
imul
lods
lea
rcr
cmpsb
std
and
xchg
enter
popa
sub
add
jge
xor
pusha
mov
rclb
mov
push
nop
hlt
js
cmp
fldl
push
jmp
jae
adc
and
aam
iret
mov
inc
in
mov
mov
pop
dec
shlb
inc
pop
mov
add
test
in
add
mov
inc
aas
or
fisubrl
lahf
das
push
adc
mov
push
cwtl
jp
fisubrs
pusha
pop
cmp
jg
loop
loopne
lods
mov
std
shrl
adc
stc
mov
add
movsl
in
clc
loop
mov
jg
push
push
ret
loope
das
mov
mov
jne
sub
dec
ja
push
and
jmp
gs
push
fmul
jns
mov
mov
lcall
push
clc
insl
push
xchg
mov
mov
es
loopne
add
test
pushf
fistpll
and
mov
xchg
test
jno
push
decl
add
inc
fistps
or
faddl
mov
add
add
xchg
push
das
dec
outsb
es
bound
add
cli
add
dec
cmp
mov
sarl
out
pop
lret
add
stos
add
jle
clc
in
add
mov
fimull
lock
int
test
out
add
fdivrl
aas
pop
mov
dec
or
push
xchg
ret
das
sub
sbb
cmp
cmp
div
inc
cs
pop
bound
adc
mov
dec
shlb
addb
pop
shlb
pusha
pusha
mov
add
inc
and
test
mov
pop
loopne
sbb
cmpsb
stc
sbb
daa
mov
xchg
sbb
jnp
lock
pop
out
xchg
les
ljmp
jns
cmpl
daa
pop
push
sub
out
jo
push
ret
pushf
jne
add
in
inc
add
cltd
add
mov
mov
lret
sbb
add
push
inc
push
and
lods
add
and
int3
push
mov
std
lea
imul
movsl
push
pop
pop
mov
and
dec
out
mov
pusha
inc
add
gs
cmp
sbbl
and
les
sub
pusha
sbb
jmp
loopne
xor
in
bound
lock
cmp
ljmp
repz
mov
ljmp
pop
mov
test
mov
pusha
leave
jno
in
xchg
jmp
jle
fcoms
fiaddl
mov
lock
adc
mov
pop
sub
dec
cmp
push
mov
pop
pop
arpl
or
add
dec
add
add
mov
inc
mov
add
mov
pop
insb
add
aad
add
xor
imul
mull
push
call
cmp
add
gs
mov
loope
loop
jg
add
mov
fcoml
loopne
int
stos
ret
cmp
repnz
sub
or
add
popa
dec
xor
imulb
insb
mov
ljmp
aad
imul
int
add
sbbl
jns
pushf
cmc
jle
mov
cs
adc
ss
xchg
xchg
lods
in
movsl
sbb
xor
xor
or
add
inc
inc
mov
add
dec
add
ja
sahf
or
leave
adc
xor
loopne
test
rcrl
and
test
adc
cmp
jb
iret
movsb
mov
or
add
sub
add
or
add
pushf
add
in
nop
add
les
pop
jbe
add
adc
int3
mov
lea
xor
add
lock
jp
sbb
data16
addl
lods
loope
ret
fld
nop
add
add
dec
or
inc
xor
sti
add
out
pushf
js
jne
pop
xchg
xor
or
iret
out
enter
dec
jmp
sub
sub
dec
add
inc
ja
add
movsl
bound
fbstp
jle
popa
push
rolb
adc
add
test
adc
js
add
add
add
cmp
int
sub
lcall
sub
shl
jno
in
cmp
mov
dec
sbb
cmp
jp
cmp
xor
sarb
test
mov
pop
cs
mov
sbb
aaa
jb
fistpl
add
aam
lods
hlt
aam
pop
in
mov
xchg
fwait
sub
arpl
xor
out
mul
orb
loopne
mov
xor
in
inc
scas
dec
jb
nop
and
sub
sbb
dec
pop
pop
popa
push
aad
or
mov
cmpsb
and
lahf
push
push
add
and
mov
sbb
add
or
hlt
push
test
jbe
sbb
pop
dec
xor
dec
lret
xor
dec
aam
cli
add
test
insb
repz
push
mov
push
push
popa
or
outsl
or
adc
pusha
sub
emms
in
ret
repz
cld
ret
jge
add
fbld
pushf
lock
mov
in
std
out
aaa
nop
xchg
or
sbb
inc
int3
adc
shrb
mov
call
push
sub
add
lds
jb
decb
add
daa
xchg
adc
scas
sub
cmp
dec
inc
add
cltd
mov
add
popf
adc
mov
and
mov
xchg
daa
lahf
icebp
push
add
inc
or
orb
jle
pop
push
adc
mov
or
clc
jge
movsb
fstl
pop
loop
or
add
and
popa
sbb
cmp
add
fdivrs
popa
jns
jae
add
xor
pop
dec
add
cwtl
xor
dec
leave
add
jmp
int
push
cltd
pop
sub
push
insb
inc
jae
cmc
repnz
add
lcall
rolb
nop
cmpsl
aas
jl
xor
imul
add
push
decb
pusha
lret
mov
nop
push
or
mov
add
and
adc
jge
repz
push
ret
mov
addl
cli
sub
lods
add
fmuls
inc
ja
pop
ss
dec
add
pop
pop
in
pop
or
mov
mov
cmpl
add
rolb
rclb
faddl
xchg
jge
mov
jae
jbe
add
xchg
aaa
jns
aad
rcrb
incb
xor
aaa
sbb
gs
add
xor
adc
cs
inc
jle
dec
jbe
insl
fwait
out
inc
push
add
xchg
cmp
pop
xchg
je
popf
imul
push
xchg
pusha
je
jmp
mov
adc
aad
add
data16
scas
lret
push
shlb
cmp
inc
add
sbb
cmp
sub
pop
and
xor
add
data16
fwait
add
sbb
aam
ss
lock
hlt
icebp
addr16
push
lret
sti
dec
sub
jmp
popf
fidivs
xor
gs
stos
add
sbb
data16
add
xchg
icebp
inc
and
jb
ret
loopne
push
cmp
roll
aas
int
fwait
iret
inc
or
sahf
pop
push
push
and
xchg
std
rcrl
les
adc
out
cwtl
xchg
push
add
stos
mov
cmp
adc
push
das
test
inc
mov
jbe
pop
sbb
dec
xchg
ja
adc
mov
push
xor
cmc
or
popl
mov
stos
cmp
xchg
add
fildl
xchg
mov
shrl
inc
or
add
daa
mov
and
sti
mov
test
out
lahf
add
sti
imul
cmpsl
xchg
jle
push
mov
xor
push
add
push
iret
or
mov
idivb
popf
rclb
jg
push
fwait
loope
add
int
roll
ss
insl
dec
scas
push
cmp
and
push
mov
add
in
shr
int
push
pop
dec
xchg
jmp
pop
pop
push
orb
iret
inc
mov
leave
subl
push
add
aas
fists
or
jns
adc
std
add
imul
mov
add
sbb
push
rolb
mov
ljmp
xor
sub
jne
pop
inc
add
dec
push
nop
push
inc
mov
add
sub
dec
das
divl
sbb
jb
imul
inc
insl
inc
inc
sub
xchg
mov
and
inc
sbbb
mov
aaa
jbe
clc
mov
mov
imul
push
pop
mov
push
in
pop
jge
in
lret
mov
dec
add
jmp
pop
push
rcrl
les
int3
adc
mov
in
push
clc
test
pop
mov
shl
pusha
pop
aad
mov
cmp
jge
lds
add
enter
add
ror
jl
imul
xor
mov
jns
clc
sbb
add
lods
in
dec
add
inc
add
jae
pop
mov
and
and
add
mov
inc
divb
sub
jno
popl
push
imul
pusha
cs
pop
xchg
pop
add
jecxz
mov
add
cmpsl
lahf
test
mov
mull
mov
xchg
in
jge
and
sub
out
pop
add
jae
icebp
or
jp
add
loope
test
out
or
add
mov
or
pop
push
out
setns
mov
mov
stc
or
pop
cltd
jge
add
sbb
cmpsb
sbb
xor
adc
rol
pop
je
pusha
lock
out
add
mov
loope
fimull
add
je
push
nop
mov
jle
rcr
incl
mov
push
jno
inc
popf
pop
pop
mov
or
jb
rolb
xchg
adc
mov
fadds
mov
pop
and
lea
or
add
and
add
shld
or
jp
aam
lea
sbbl
sub
add
scas
push
inc
arpl
add
xchg
mov
addl
lahf
in
lds
popf
add
xor
mov
addb
or
adc
mov
scas
jecxz
fwait
stos
lret
pushf
dec
add
shlb
add
sbb
adc
ds
cmp
add
popf
add
int
testb
push
ljmp
inc
pop
cmp
pop
sahf
idivl
sbb
and
mov
imulb
pop
mov
jg
icebp
add
dec
call
xor
and
dec
jl
push
sub
fsubl
out
fisubrs
orb
addb
sarb
outsb
clc
xor
test
leave
mov
popa
imul
dec
movsb
push
dec
mov
les
add
leave
incl
clc
in
sub
sbb
add
jmp
add
xchg
cmp
add
jno
mov
pushf
add
cmp
xor
sub
cs
jmp
add
inc
push
inc
add
push
adcl
jb
loop
add
repnz
hlt
aad
jp
cmpsb
add
dec
test
mov
or
jb
mov
out
outsl
push
push
jne
nop
mov
das
inc
add
dec
sahf
mov
sarb
pop
and
inc
adc
jecxz
xchg
xor
enter
pop
adc
cltd
xchg
insl
fs
xor
adc
lock
sub
dec
sub
inc
sbb
jae
add
fwait
push
jl
mov
xlat
jne
xor
outsb
cwtl
stos
hlt
xor
xchg
mov
inc
mov
xchg
shr
test
cwtl
enter
icebp
arpl
insb
jl
out
fistpll
add
out
and
or
test
add
sti
mov
inc
sub
addb
out
bound
pushf
cwtl
test
mov
pop
mov
xor
call
ds
jne
lds
mov
push
scas
in
xchg
add
test
popw
push
sbbl
pop
jp
rclb
cmpsl
sarl
cmp
inc
or
fildl
push
xor
jno
int
call
sarb
mov
jge
pop
lret
call
std
sub
leave
sti
mov
inc
mov
add
test
cmp
adc
mov
mov
out
mov
xor
push
pop
add
cmp
iret
lods
add
xchg
add
test
faddp
dec
pop
adc
cmpsb
add
aad
orl
push
xchg
cmpsl
mov
std
inc
fsts
fistpll
cmp
dec
mov
xor
mov
mov
jmp
andb
imul
jp
mov
sub
lcall
repz
repnz
add
js
and
mov
or
sbb
sub
sti
sbb
int3
fnstcw
sahf
pop
aad
mov
filds
add
xchg
movsbl
rcl
cld
ret
jg
dec
repz
or
or
cmpsl
jecxz
movsl
mov
dec
inc
sarb
aas
setb
int3
inc
inc
cmc
fisubrs
xchg
loopne
jp
mov
adc
add
mov
int3
pop
lods
push
aas
rcr
jge
push
add
push
leave
jg
and
std
addb
add
repz
pop
addl
add
pop
rcl
in
pop
push
out
add
push
add
xor
add
lock
mov
rcrb
test
dec
jg
push
mov
dec
dec
fwait
mov
inc
sbb
add
sub
xchg
out
sub
daa
icebp
movsl
and
pop
add
fildl
daa
push
pop
rclb
cltd
call
enter
nop
ficoml
outsb
out
cmp
sub
icebp
jns
xlat
mov
pop
sbb
xchg
ljmp
repnz
test
pop
xor
repz
jl
and
aaa
call
cltd
cmpl
pop
imul
cmpsb
inc
add
push
xor
sbb
sub
pop
push
and
call
insb
mov
jne
sbb
adc
cmp
sbb
nop
in
push
add
bswap
push
add
fdiv
jo
sbb
push
pop
mov
push
jle
push
and
mov
sti
sub
icebp
lods
outsl
jmp
lret
add
mov
lret
add
push
pop
es
xchg
and
loopne
add
mov
mov
repnz
int
add
in
dec
sti
add
popf
andb
lret
in
int
mov
faddl
cwtl
xor
adc
cmp
sbb
inc
cmpsb
loopne
add
idivb
mov
stos
imul
inc
lcall
push
pop
test
mov
push
pop
mov
mov
xor
addb
dec
push
ror
and
aas
sbb
add
out
enter
mov
cmp
outsb
add
rcrl
scas
mov
add
orl
jo
gs
shll
jne
and
jbe
pop
sub
inc
push
aas
pop
popf
adcl
or
xchg
ss
mov
fs
fsubs
pop
cmpsb
mov
add
aad
push
lret
add
scas
or
or
and
cli
and
cmp
mov
bound
pushf
repz
loope
or
push
add
pop
test
mov
mov
jnp
mov
ficoms
std
jge
aam
xor
div
orl
mov
adc
fucom
daa
adc
xor
xorb
addl
pop
daa
dec
shlb
lock
sub
outsb
imul
cmp
add
add
aaa
sub
add
int3
roll
xor
add
adc
test
or
inc
insb
faddl
xor
adc
mov
cld
push
movsb
ja
cmp
add
push
prefetch
ds
cmpsb
mov
cs
jmp
add
or
adc
dec
mov
insb
xchg
inc
push
jle
insl
std
adcb
and
sub
add
test
outsb
add
sbb
push
add
and
dec
cmp
lock
cmp
mov
cmp
mov
mov
push
push
sub
cmp
add
cmp
jno
and
mov
add
out
sbb
add
inc
xchg
mov
xchg
stos
add
aam
jl
push
jecxz
add
pushf
stc
sub
mov
or
loop
fsts
and
sbb
outsl
and
imul
push
sub
mov
pop
pop
mov
out
mov
popf
ret
lret
add
sub
movsl
add
xlat
mov
and
pop
add
mov
and
and
test
loopne
xor
imul
and
shlb
add
add
cltd
add
and
in
lds
pop
cmpsl
lret
and
xchg
or
inc
mov
lock
lcall
testl
or
push
mov
lcall
les
addb
inc
add
push
dec
dec
imul
faddl
lea
jecxz
inc
and
add
sub
add
rorb
mov
shrb
mov
loope
ja
call
mov
add
je
lods
lds
jecxz
add
or
inc
insb
iret
mov
mov
rorb
jg
dec
sub
test
fucomi
pop
testl
or
cltd
push
fildll
fdivrl
scas
dec
stos
mov
lods
stos
jbe
in
lods
ljmp
daa
arpl
jl
add
pop
aas
jno
pop
mov
add
jae
add
mov
mov
in
mov
out
dec
add
sar
call
push
jnp
or
les
or
add
sahf
pop
or
insl
leave
inc
mov
adc
push
das
add
movsb
bound
inc
add
shl
and
inc
jle
or
cmp
pop
jns
add
subl
movsl
xorb
fxch
add
hlt
fsubrp
mov
and
xchg
mov
aad
cld
js
lods
add
dec
add
inc
mov
jae
jmp
mov
out
test
add
xor
das
ret
jbe
adc
push
mov
add
push
pop
and
adc
add
mov
xlat
jo
inc
pushf
popa
add
jno
add
add
fldenv
mov
xchg
sbb
enter
sbb
add
xor
clc
sub
sub
push
adc
pop
popa
push
ret
call
sbb
repz
adc
loopne
push
jns
int3
dec
cld
push
add
push
adc
sub
mov
pop
lahf
jnp,pn
and
icebp
popa
push
test
inc
movsb
and
bound
iret
add
pop
js
xor
add
push
movsb
ss
pop
test
mov
stos
fisttps
jo
adc
inc
pop
push
int
and
aaa
testb
iret
xor
js
mov
add
sub
mov
into
lret
nop
add
and
sahf
inc
adc
and
pusha
cmp
test
add
popf
in
push
inc
pop
inc
cmpsl
jg
fdivs
add
repz
add
mov
aad
mov
add
aaa
scas
push
mov
in
fcomp
and
mov
cli
and
sbb
icebp
cmp
xchg
out
testb
es
enter
mov
pop
inc
mov
popf
dec
out
jecxz
xchg
daa
or
loopne
test
lock
lods
scas
mov
add
mov
outsb
rorl
xchg
repz
push
push
loopne
punpckhdq
js
jl
vunpcklpd
dec
add
popa
and
out
loop
add
mov
push
or
dec
push
mov
repz
mov
add
stos
sahf
mov
sbbl
cmp
sysenter
jb
cli
rolb
or
add
push
stos
jnp
inc
mov
mov
xor
cmp
pop
mov
push
dec
sahf
mov
add
jbe,pt
add
push
add
push
inc
cmpsl
in
lods
cld
test
jb
dec
inc
push
loop
bound
nop
jo
pop
imul
shr
loop
test
sub
pop
jnp
fst
inc
dec
movl
rcll
dec
ds
in
mov
pop
aad
jo
xchg
add
push
call
movsl
add
lods
mov
jg
and
mov
push
fnstcw
popf
and
dec
cmp
sbb
imul
mov
mov
sbb
mov
or
mov
pop
cmp
xor
lds
mov
adc
lret
in
and
daa
add
das
xor
or
add
inc
dec
fwait
or
adc
dec
mov
fsubl
punpckhbw
push
jmp
andb
adc
jecxz
adc
add
jnp
jns
lock
iret
pop
sahf
cmp
xorl
adc
out
inc
mov
fwait
jecxz
lock
shll
pop
sub
jae
cwtl
in
mov
insb
cmp
add
sub
sub
xchg
pop
add
enter
jmp
add
jo
and
add
xor
add
cmp
dec
sbb
or
daa
mov
add
mov
mov
or
inc
leave
fistps
add
sub
add
add
insl
jb
add
push
and
scas
mov
in
testl
subb
ret
movl
cltd
rcrb
xlat
int3
pop
nop
adc
jge
loop
sbb
adc
lds
mov
add
sbb
gs
int
mov
and
subb
xchg
cwtl
popf
add
mov
or
in
ljmp
das
jo
sub
call
aam
inc
decb
addr16
jne
addb
jmp
cmp
push
cmp
add
or
sbb
icebp
mov
insb
mov
fs
lea
addb
loopne
dec
or
push
and
popa
inc
rolb
aam
dec
shr
adc
jbe
jp
idivl
fwait
incb
lds
or
pusha
add
fstpt
add
and
pop
enter
xor
push
out
nop
aam
addb
add
int3
cmp
and
jecxz
out
jmp
add
mov
leave
pop
aad
dec
dec
xchg
push
push
and
add
divb
add
cmp
movsb
add
subb
mov
add
xchg
shl
jecxz
xor
rolb
cmc
cmp
mov
movsb
cmpsb
scas
je
add
das
xchg
mov
dec
test
adc
mov
add
or
adc
add
sub
in
or
stos
mov
mov
test
pop
xchg
or
outsl
mov
sti
adc
add
sub
faddp
cwtl
or
or
or
mov
int
loopne
add
mov
fnstcw
pop
cld
inc
push
add
sub
dec
shrl
push
cmpsb
cmp
adc
mov
push
adc
xchg
rclb
jo
jnp
dec
ret
in
jno
enter
add
mov
dec
mov
or
in
adc
loopne
test
dec
mov
jns
dec
pop
stos
in
and
xor
scas
cmpl
scas
ja
or
inc
cmp
inc
sbb
push
push
push
icebp
cmp
mov
push
imul
dec
aaa
mov
sbb
insb
pop
mov
mov
pop
or
fdivs
push
aas
cmc
adc
fmull
cmp
add
pop
pop
pop
in
add
out
xchg
das
fiaddl
xor
or
push
mov
scas
mov
mov
out
sbb
filds
mov
fcomps
lahf
add
xchg
mov
jge
and
fwait
adc
xchg
jo
inc
adc
add
test
das
enter
add
pop
push
in
sbb
jns
mov
sarb
inc
or
enter
std
xchg
popa
fs
pusha
sahf
sbb
mov
jae
inc
cmpsb
cmpsl
inc
nop
adc
sbb
pushf
add
pop
mov
add
enter
jg
call
sub
pop
sbb
jmp
sub
xor
rolb
mov
jns
enter
adc
push
sbb
mov
ret
repz
add
shll
cmc
fistps
jl
mov
in
cltd
orl
orb
inc
insb
cmp
push
mov
mov
sbb
shll
xchg
mov
add
xchg
out
mov
stc
and
je
add
or
pusha
mov
fldl
pop
daa
pop
dec
inc
out
pop
mov
pcmpeqb
adcb
mov
lods
mov
aaa
adc
mov
push
shlb
lcall
pop
pop
in
enter
and
pop
in
pop
mov
pop
aaa
push
cmp
cltd
inc
cmpsb
jae
adc
adc
test
shl
mov
push
push
push
mov
add
cmc
sbb
pop
sub
xor
add
dec
jle
or
push
mov
add
cmp
lock
stc
jns
shr
dec
in
lock
pusha
mov
ja
add
xchg
mov
mov
fldenv
setb
mov
xor
ret
xchg
das
lret
inc
mov
jns
ljmp
loopne
add
cmp
scas
rcr
lock
inc
sub
outsb
imul
dec
jo
cmp
leave
push
pusha
dec
or
pop
jns
in
add
pop
pop
push
mov
loope
xchg
clc
add
jne
subl
sahf
lock
cmp
stos
orb
mov
out
mov
adcl
adcb
xor
inc
push
cmp
call
xlat
scas
push
add
adc
mov
les
sub
call
out
add
ja
ret
cmp
xor
inc
js
sbb
xor
xchg
inc
xchg
add
push
addr16
nop
repz
cmp
add
lds
divl
pusha
pusha
es
and
cmp
aam
addb
orl
popf
test
xchg
add
and
jns
sub
add
rorb
adcl
sub
rcrl
jle
mov
xchg
jl
add
lods
cmc
shll
outsb
add
dec
inc
mov
push
stos
arpl
cwtl
icebp
stc
sarl
aas
repnz
push
aam
mov
push
pop
push
fsubr
xor
lock
push
jl
pop
iret
or
cltd
push
jb
push
push
sub
mov
fcom
mov
ret
add
sub
mov
adc
jge
scas
subb
out
push
repz
aaa
icebp
xchg
push
outsl
and
inc
test
pop
jle
inc
repz
cmpsl
es
test
sbb
jmp
pusha
mov
xchg
mov
gs
or
add
jo
add
sahf
add
sti
into
pop
shr
mov
jo
jae
cwtl
add
xor
aad
xchg
pop
cli
aas
add
leave
loopne
and
and
mov
jo
in
jae
pusha
jb
xor
cmc
pop
mov
xor
or
in
and
ret
fldcw
or
ficompl
shrb
mov
mov
add
insb
into
fs
ja
jg
movsl
and
xchg
loop
fdivrp
and
pop
insb
mov
insl
add
or
inc
test
mov
ret
arpl
out
or
shl
lahf
add
sub
scas
add
pop
xchg
in
cmc
dec
cltd
jle
mov
xor
movl
dec
mov
shrb
arpl
or
fs
jno
movl
mov
jl
ljmp
sbb
add
adc
hlt
aas
xor
push
cmp
daa
movsl
inc
dec
add
fcompl
test
adc
add
mull
xchg
cli
popa
add
jno
or
iret
lcall
or
in
pop
jle
lods
aas
xlat
lock
and
rorb
add
sub
cmp
mov
mov
xor
ror
xor
repz
rorb
pop
pusha
adc
pop
add
daa
hlt
xor
imul
mov
sbb
push
fildl
je
enter
hlt
and
or
mov
fcomps
push
add
dec
cld
paddq
push
jnp
mov
add
or
jecxz
aaa
dec
push
movsl
repnz
push
add
fstl
add
mov
icebp
insl
push
stos
mov
leave
lods
pushf
jns
mov
jl
lcall
inc
add
jnp
inc
and
dec
add
shlb
in
nop
pop
add
pop
push
jle
jmp
and
xor
rcl
push
inc
add
ret
test
pop
sbb
outsb
mov
sbb
rorl
cwtl
ds
jecxz
or
pop
sbb
sbb
add
aas
fsts
test
mov
sbb
imulb
sahf
push
or
push
inc
fldl2t
and
xor
push
add
popf
sub
rolb
xlat
jbe
nop
dec
or
fld
push
int3
add
pop
xchg
popa
mov
add
push
xchg
aam
arpl
pusha
inc
lock
iret
inc
jecxz
aad
out
sub
sarb
xor
loopne
inc
jmp
pop
sbb
fimuls
xor
xchg
fistl
test
cli
jg
add
jnp
push
push
call
inc
xchg
addr16
cmp
adc
and
nop
or
in
xor
push
out
pop
rorb
add
xlat
mov
out
jbe
add
mov
or
movsb
sbb
or
shrb
xchg
jp
add
or
orb
mov
jo
inc
add
inc
pop
int
add
and
fs
lahf
add
repz
cs
and
pop
testl
test
lahf
jecxz
cmp
imul
and
adc
clc
cmp
lahf
pop
out
cmp
fcoms
add
sub
mov
imul
mov
add
add
rolb
mov
test
inc
andb
jg
dec
sub
xchg
fiaddl
xlat
push
or
es
push
into
lods
cmp
out
sbbl
add
fst
fwait
andb
ljmp
or
xchg
jmp
push
lods
add
aas
mov
call
test
imulb
lock
pushf
int
and
cmovle
adc
std
jo
fistpll
pushf
das
dec
xor
add
cmp
pop
adc
xchg
ds
clc
mov
or
dec
subb
fidivs
gs
clc
sub
add
orl
rolb
dec
cwtl
movsb
pop
push
mov
js
add
test
mov
mov
mov
pop
push
gs
pop
jb
ss
loop
push
or
inc
add
je
xchg
dec
add
mov
aas
sbb
mov
adc
or
test
add
cwtl
inc
and
add
rolb
out
cmp
outsb
das
push
cmp
mov
fwait
pop
mov
pop
xor
sub
pop
repz
sahf
lahf
and
sbb
mov
gs
cmp
stos
fmuls
jge
add
sub
out
pop
sbb
in
sub
xchg
xor
mov
push
mov
sahf
xlat
stos
jns
incb
cmp
adc
adcb
aam
lods
add
add
call
add
aas
ljmp
or
add
int3
jns
roll
loope
imul
or
mov
sbb
sti
bound
ja
pushf
push
sub
add
fisubs
pop
push
inc
fimull
jle
xor
xchg
pushf
jae
popa
jo
test
stc
lahf
pop
cli
mov
push
mov
adc
in
fs
rorl
add
arpl
les
adc
subl
mov
out
sbb
xor
cs
mov
mov
dec
lret
xor
sub
jne
out
pop
nop
call
ss
cmp
add
js
fbstp
lret
ffree
ja
inc
popl
or
out
pop
dec
jmp
dec
push
push
clc
add
fstps
mov
add
ffree
shll
mov
pop
mov
mov
add
jmp
cmp
imul
sub
adc
in
inc
xchg
or
xchg
ljmp
sbb
clc
icebp
pusha
push
in
rcr
dec
jg
add
nop
es
mov
dec
aad
sbb
pushf
jo
add
mov
push
and
add
loop
mov
aas
inc
jecxz
mov
pop
dec
iret
pop
aad
pop
push
add
xchg
scas
or
mov
shlb
xchg
cmp
and
mov
jne
xor
frstor
fdivrs
or
cltd
fcmove
lods
dec
fucom
mov
loopne
sub
push
pusha
adc
pop
hlt
jns
mov
push
add
test
stc
sbb
mov
pop
jno
loope
mov
mov
nop
lock
pushf
or
xor
lock
mov
inc
or
subl
or
loope
dec
pusha
hlt
jo
dec
lods
pop
push
scas
nop
push
rolb
mov
cmpsl
pop
cmp
sbb
call
loopne
jb
push
cmpsb
sti
das
add
shll
cmpl
xchg
push
jnp
loop
add
in
inc
push
push
movsl
repz
inc
push
in
rcl
jp
jmp
sbb
sbb
sub
out
jmp
testl
cmc
in
jb
cwtl
clc
push
cmp
add
idivl
scas
popf
cli
out
sbb
jg
int
adc
xor
data16
pop
leave
and
cwtl
add
jg
or
cmp
lret
lods
test
sbb
ret
les
add
lret
idivl
mov
inc
push
add
jge
add
sub
jge
add
pop
jecxz
pop
fiaddl
popa
je
arpl
adc
dec
repz
dec
push
add
cltd
add
arpl
push
xor
dec
flds
push
call
cmpsb
mov
fisubs
add
out
mov
out
push
rcrl
hlt
lock
out
inc
dec
shlb
xor
outsb
sarb
inc
cmp
mov
mov
adc
jns
jo
arpl
pop
add
and
sbb
nop
fdivrs
popl
movsl
into
mov
ss
inc
test
jecxz
mov
jbe
mov
mov
ror
stc
imul
leave
mov
adc
flds
adc
add
loopne
lahf
fdivl
cld
xor
pop
and
mov
push
pop
sub
cwtl
outsb
js
and
adc
add
out
mov
movsl
xchg
or
out
pop
cmpsl
outsl
add
call
sub
or
cmp
aam
pop
cs
int
pusha
insl
push
es
mov
jmp
das
test
aam
sarl
pop
lret
mulb
sbb
adc
sbb
push
inc
dec
or
insl
push
aad
outsb
and
or
and
sbb
xchg
rclb
xor
push
andb
add
sbb
mov
push
out
leave
outsl
xor
or
imul
movsb
push
xor
enter
int3
and
push
scas
add
add
jmp
push
mov
lret
cwtl
lock
add
ret
imul
mov
add
xchg
jno
jge
push
push
loopne
mov
fcmovbe
jb
clc
push
add
mov
idivl
add
mov
clc
add
xorl
movsl
mov
sbb
jl
dec
pushf
mov
mov
dec
sub
ja
or
rcrl
jge
fbld
push
push
xlat
add
in
cli
push
xorb
jne
aam
ss
movsb
fildll
setne
sbb
out
call
rcl
sbb
add
aaa
test
je
sub
mov
jno
hlt
jne
inc
dec
push
sbbl
xchg
pop
mov
add
stos
sbb
sub
jl
mov
jge
lock
pop
xor
ja
sahf
test
popf
out
add
nop
add
xchg
add
mov
pop
sub
rsm
jmp
add
repnz
or
inc
arpl
jo
in
hlt
jnp
test
mov
dec
jae
add
jge
sbb
data16
ret
pop
add
nop
enter
sbb
dec
in
aad
add
gs
or
pop
ljmp
dec
inc
daa
ret
sbb
cmpsb
adcb
add
add
lods
push
insl
xchg
add
add
shrd
jmp
push
rcll
push
mov
jmp
push
and
mov
pop
adc
mov
lret
cmc
push
pop
or
adc
subb
mov
jne
sub
idivb
push
pusha
in
or
test
test
push
add
scas
aam
lahf
rcrb
js
iret
adc
pusha
jecxz
push
sub
sub
loopne
sbb
sbb
arpl
add
cmp
inc
add
pop
add
xor
jnp
adc
jb
xchg
adc
sub
arpl
mul
add
mov
or
add
stc
mov
idivl
stos
sarb
add
pop
outsl
add
adc
mov
add
push
cmp
rorb
add
push
sub
cmp
popf
and
push
sahf
mov
stos
orb
jl
sbb
sbbb
jns
cmp
out
in
addl
cmp
cmp
clc
push
fnstsw
xor
sti
jae
add
insl
jge
iret
cmp
rolb
pop
fdivrl
jle
or
add
add
arpl
js
setl
into
dec
loope
push
xchg
mov
adc
js
mov
add
jp
add
bound
ror
push
out
lods
sub
and
arpl
insb
cld
adc
jmp
adc
stos
adc
dec
mov
or
subl
jbe
or
xchg
cmp
scas
adc
sbb
dec
mov
adc
sti
sbb
test
add
jno
sub
je
xor
lods
add
jno
dec
inc
inc
jne
adc
stos
sub
xor
inc
add
pushl
out
mov
add
push
sbbl
aas
lods
ror
std
fsubl
add
decb
mov
cmpsb
scas
pop
hlt
icebp
inc
pop
js
mov
ljmp
pop
mov
mov
sub
pusha
and
jae
pop
cmpsb
les
push
mov
cmp
shrb
dec
mov
inc
add
ljmp
push
pop
and
out
pop
add
jmp
sbb
xchg
adc
in
or
repz
addr16
bound
push
or
xorl
mov
jno
jmp
adc
arpl
or
push
add
shrb
lods
pop
mov
adc
dec
sbb
in
or
xchg
jp
adcb
cld
outsl
inc
add
ja
repz
arpl
pop
add
inc
add
sbb
inc
add
sbb
cmp
or
rcr
jg
mov
or
loopne,pn
add
in
mov
push
scas
movsl
pushf
sub
ret
mov
add
test
dec
mov
cmp
faddp
int
ret
jae
int3
pop
pop
add
imul
jnp
add
mov
vfrczps
adc
das
add
inc
mov
leave
and
fs
adc
fisttpl
rdtsc
sbb
test
xlat
roll
add
push
ds
aas
mov
add
push
or
xchg
ljmp
xorb
xlat
fld1
add
insl
mov
sbb
mov
cmp
inc
push
add
adc
fcoms
sbb
sbb
cld
xlat
add
mov
mov
and
add
jae
add
cmp
jne
xchg
sbb
adc
mov
mov
pop
inc
pop
stos
enter
scas
lcall
mov
rclb
or
popa
sub
repz
pandn
popf
cmp
ficomps
into
outsb
push
xorl
nop
iret
ficompl
ret
cmpsl
fsubrs
pop
pop
sbb
out
dec
mov
push
stc
add
jae
add
scas
mov
outsl
clc
pop
les
jno
adc
lahf
stos
sbb
jnp
enter
rcrb
dec
pop
add
push
push
push
or
add
sbb
inc
cltd
sbbb
fildl
push
sbb
sub
into
fwait
stos
jle
jg
shrb
jo
push
test
test
mov
xchg
aam
repnz
push
push
lods
mov
inc
call
jae
xchg
xchg
jg
lock
or
fcmovnu
sub
rcl
or
adc
add
or
add
jno
mov
fwait
add
sbb
xchg
mov
xor
nop
mov
mov
add
ljmp
or
fiaddl
outsb
insl
push
mov
fidivrs
pop
add
lock
mov
shl
jp
xor
cmp
es
mov
xchg
sbb
dec
ljmp
aaa
cmp
lret
mov
pop
dec
jmp
push
add
mov
xchg
pop
inc
nop
ror
add
stc
cltd
push
test
xchg
daa
push
js
sub
imul
push
mov
push
scas
cmpsb
jg
sub
lahf
sub
dec
call
inc
mov
dec
push
sbb
or
cld
ljmp
jle
stos
inc
nop
stos
xor
cmp
mov
insl
mov
xorb
mov
pop
xchg
outsb
es
in
nop
add
mov
add
fnstenv
mov
arpl
sbb
jno
xchg
in
cld
dec
mov
cmp
dec
mov
mov
loop
pop
lahf
push
sub
cmc
push
add
xor
pop
movb
mov
add
push
sbb
cmc
inc
enter
cmp
test
shll
shlb
scas
ret
lret
mov
lea
adc
or
pop
shll
movsl
sub
dec
mov
add
push
lods
mov
inc
add
push
inc
bextr
mov
jp
pop
ss
dec
decb
test
cltd
lret
arpl
fbld
movsb
ret
bound
sub
testb
inc
arpl
sbb
fdivp
jb
sbb
lahf
xchg
mov
aas
add
lods
xor
fildl
add
hlt
test
xchg
lahf
add
jbe
lds
lock
sbb
push
aas
cmp
xor
adc
pop
pop
sub
add
in
push
pusha
add
add
jl
jb
dec
bound
call
lds
pusha
lahf
jbe
aas
sbb
mov
add
js
outsl
dec
push
jle
xor
nop
test
pop
and
add
xchg
dec
or
das
pop
cli
add
pushf
shrl
or
je
es
add
cmp
mov
push
jnp
mov
or
xadd
cmp
lea
sbb
push
push
popf
cmpsl
pushf
dec
hlt
rolb
dec
es
js
add
and
xchg
es
sbb
push
cmp
cmpsb
xchg
jle
jge
in
or
int
cwtl
loope
adc
adc
sub
enter
add
inc
pop
push
mov
mov
sti
popf
dec
add
dec
jo
outsb
out
cmp
adc
or
cmc
leave
push
or
mov
es
mov
mov
fdivs
leave
add
jl
cmpsl
mov
or
jbe
int
mov
roll
adc
std
pop
hlt
xlat
jmp
push
add
cmovbe
popf
std
pushf
cltd
push
cmp
and
dec
pop
ss
lock
pop
xorb
push
inc
insl
cmp
push
mov
mov
dec
movsb
cmovs
and
or
lock
mov
add
data16
pusha
js
pushf
add
and
int
mov
shll
mov
loop
jle
mov
mov
jo
lods
or
test
xor
faddl
shl
inc
inc
add
mov
add
adc
add
movsl
stos
pop
mov
mov
pop
das
push
and
pop
adc
repz
push
pop
jge
pushf
add
mov
sub
aas
or
xlat
jge
cwtl
add
dec
dec
js
lock
or
loop
mov
add
and
add
call
push
loopne
cltd
and
dec
imul
ja
sub
mov
andb
lods
jo
mov
insb
mov
lret
add
loop
sahf
out
clc
dec
inc
sbb
add
fbstp
add
mov
xor
jno
adc
jnp
addr16
sub
sar
arpl
and
movsb
enter
or
push
or
jns
pushf
sub
repnz
mov
subb
jle
push
xor
in
ret
cmp
fldenv
inc
xchg
pop
leave
fidivs
lock
rolb
sub
push
mov
jbe
jle
mov
mov
in
xchg
mov
dec
add
adc
and
ret
mov
pushf
mov
fsubl
jno
clc
out
add
jnp
mov
cwtl
dec
in
push
dec
movsl
sub
fsubl
sub
cmp
rcrb
sbb
dec
inc
dec
lods
clc
imul
inc
sub
or
fs
xor
xchg
sbbl
add
adc
dec
sbb
les
rolb
dec
scas
cmp
cmpb
push
shrb
cmp
repz
push
mov
or
adc
or
or
lds
sbb
orb
sbb
sub
nop
cld
add
pop
call
push
sub
and
xchg
sti
or
out
push
xor
pushf
or
test
inc
enter
ds
or
js
loopne
mov
add
jle
jmp
movsb
mov
add
inc
outsl
testl
movsl
aas
es
add
mov
dec
add
push
dec
int
sti
sbb
sbb
xchg
popa
adc
add
adcb
dec
mov
xchg
pop
add
sbb
iret
sub
add
inc
and
in
gs
rorb
mul
std
imul
loope
xchg
sub
mov
pop
add
cwtl
call
add
mov
add
insl
mov
add
jl
add
push
imul
add
add
xor
mov
or
push
pushf
pop
out
xor
mov
bound
negl
sbb
cmpsl
int3
sbb
arpl
or
pop
xchg
loope
cwtl
lods
and
hlt
in
mov
js
fdivl
pop
sub
cmp
xchg
or
dec
jae
xchg
and
push
hlt
fsubrl
push
add
in
and
cmp
loop
adc
and
insb
cli
pop
arpl
inc
cmp
mov
loopne
add
xor
ds
orb
jl
xor
scas
pusha
mov
addr16
icebp
sbb
cltd
add
mov
imul
mov
outsl
das
sub
fcomip
cld
jns
jbe
add
neg
popf
cmp
mov
and
fsub
inc
push
mov
push
ror
in
add
mov
ja
sahf
je
mov
int
cmp
das
push
jno
and
sbb
mov
testb
add
push
roll
movsl
repz
xchg
dec
subl
loope
lea
xchg
or
cmp
lret
sbb
mov
push
sub
inc
add
das
push
xchg
xsaveopt
add
adc
cmp
sub
inc
fadds
or
sbb
fcmovnbe
aas
repnz
push
aad
int3
das
nop
mov
push
movl
icebp
add
mov
movsl
adc
scas
push
add
in
lahf
test
fdivl
sbb
inc
in
enter
ret
fistps
sahf
cmp
pushf
add
sub
icebp
jmp
lods
inc
add
mov
sti
aam
mov
push
mov
xchg
sarl
emms
adc
push
shrl
nop
iret
adc
xor
bound
cld
sub
adc
call
add
cltd
dec
ret
sbb
jnp
xchg
cs
clc
add
mov
sub
add
cmp
fimuls
fldcw
inc
add
mov
and
sub
add
sahf
int3
push
pop
jne
shrb
outsb
lcall
add
push
aaa
cli
stc
cwtl
add
dec
push
ret
in
or
xchg
jmp
imull
scas
stos
jp
dec
lahf
outsb
mov
sbb
shlb
or
aas
sub
lea
movl
jecxz
in
imul
loope
sbbl
lods
ja
adcb
push
pop
dec
je
inc
jle
push
out
xchg
popl
sbb
fstpl
ljmp
mov
fwait
add
pop
push
and
mov
arpl
mov
imul
pop
cli
add
sbb
int
add
xchg
jecxz
push
fwait
add
mov
pushf
xchg
ds
pop
loopne
ret
and
push
mov
add
and
fcom
adc
je
mov
push
pushf
adc
add
scas
jmp
fisubrl
add
xorb
inc
add
inc
mov
add
bound
sub
push
adc
mov
out
xchg
jmp
gs
testb
add
pop
dec
jg
hlt
dec
add
dec
sbb
test
xor
int3
outsb
dec
add
cmpl
shrb
pop
out
xchg
xchg
push
xor
inc
add
mov
add
movq
push
add
jbe
clc
insl
lods
sarb
nop
cmp
adc
sbb
push
ss
xchg
add
mov
sbb
add
mov
jbe
or
xchg
dec
mov
lea
lods
loop
or
adc
fimuls
mov
mov
bnd
shl
add
mov
ljmp
repnz
adc
inc
bound
fistl
push
testl
cli
pop
ja
push
add
cmp
pop
sub
sti
add
imul
repz
es
mov
movb
insl
push
xchg
or
mov
test
test
flds
mov
jl
add
xchg
loop
mov
jle
jb
cmp
nop
mov
add
and
add
mov
les
add
cmp
jo
xlat
call
movswl
stos
bound
push
repnz
clc
cmc
add
popa
fsin
xchg
sarb
hlt
test
mov
pop
nop
ret
cwtl
rcrb
arpl
aaa
cmpsl
imull
add
lahf
push
jle
cltd
jmp
or
adc
xchg
aas
xchg
lsl
inc
hlt
jo
xchg
add
out
adc
push
mov
mov
add
sub
push
cmp
adc
xor
add
fnstsw
or
and
sbb
xlat
mov
sbbb
int3
fildl
xchg
enter
add
jo
add
test
inc
push
or
divb
xchg
pop
imul
mov
fwait
movsl
sar
idiv
pop
adc
and
mov
cwtl
int
push
adc
fwait
stos
mov
push
lods
gs
inc
outsl
out
leave
sti
dec
fisubs
push
clc
add
and
lds
std
add
scas
push
inc
push
arpl
pop
ror
into
xor
cs
sbb
xor
decb
movsl
sub
xor
or
inc
pop
sub
pop
rorb
scas
cli
imul
push
adc
add
and
pop
sub
cwtl
xor
ljmp
push
and
orl
mov
lods
pusha
roll
and
mov
sahf
int3
jae
or
mov
mov
cmp
movsb
jp
imul
pusha
pop
jne
add
es
pop
in
jmp
xchg
dec
mov
inc
daa
adc
and
orb
push
into
sahf
mov
int
cli
add
sbb
lods
idiv
imul
pop
inc
icebp
sbb
cs
xchg
cmp
xchg
sub
leave
lea
idivb
sbb
pop
inc
and
dec
inc
cmpsl
arpl
cmp
addb
xchg
inc
int
outsl
dec
dec
add
shlb
fdivrs
lods
add
inc
add
mov
push
cmc
mov
xchg
mov
mov
sub
fucom
leave
test
push
xor
cmp
pop
in
popf
add
out
cwtl
mov
add
push
cmp
push
mov
push
add
rclb
jb
movsb
ss
add
test
pop
das
out
mov
sub
pop
add
xchg
orl
es
or
cli
jns
fisubl
mov
sbb
inc
cmp
pop
sbb
mov
add
sub
jbe
mov
gs
mulb
push
mov
jmp
mov
add
inc
mov
aad
jp
ljmp
or
cmp
ds
add
in
mov
lret
push
popa
add
imul
outsb
sti
sub
insb
or
dec
cmp
jge
pop
add
xor
iret
inc
add
xchg
mov
add
adc
dec
push
enter
cmp
mov
push
call
and
inc
push
push
clc
pop
cmp
adc
jne
add
shrb
push
enter
push
sub
lods
lock
add
xchg
cmp
fstl
pop
jmp
icebp
xchg
stos
xor
push
popf
outsl
sub
and
loopne
dec
dec
sbb
add
and
nop
pop
sub
out
ffree
cmpsl
sub
pop
add
icebp
add
xchg
jne
and
push
adc
movsb
stc
stos
xorl
lcall
int
loop
add
add
es
adc
add
push
scas
sub
mov
lea
test
add
cmp
sbb
addr16
subl
and
add
push
stos
cmp
loopne
movsl
fisubl
adcl
sarb
mov
add
cmp
and
imulb
stos
loopne
aam
jno
add
pusha
adcl
and
xchg
inc
pop
mov
rolb
inc
roll
stos
pop
jg
outsl
movsb
call
ljmp
jo
mov
movsb
cmp
xorb
mov
cli
add
lret
add
add
loope
push
push
iret
popf
xchg
loop
andb
mov
faddl
loopne
cmp
inc
pusha
out
push
mov
pop
add
repnz
loope
mov
subb
cmpb
jmp
add
add
add
rcll
add
enter
sbb
lret
push
adc
das
push
mov
sub
inc
xlat
into
xchg
cmp
rolb
sbb
les
xor
mov
stos
jl
jp
dec
pop
mov
jle
fcmovnb
push
pop
adc
rcrb
or
mov
push
mull
outsb
pop
add
xor
adcb
add
pop
mov
fiadds
mov
out
lea
cmp
loopne
fistps
les
adc
lret
mov
jbe
mov
not
dec
in
and
fisubs
outsl
inc
add
push
dec
mov
add
mov
cmpsl
push
mov
ficoms
xchg
imul
sysret
mov
xchg
mov
jae
cmp
push
ljmp
pop
insb
jmp
ret
and
mov
push
test
pop
sbb
lcall
jae
scas
arpl
jle
ds
add
test
xor
push
sbb
cmp
ss
sahf
push
pop
test
push
jo
mov
add
mov
cmp
add
jae
ficomps
shrb
test
push
sti
jl
xor
roll
jns
hlt
shll
or
add
test
add
addr16
das
pop
fsubrs
xorps
cmp
insl
xorb
fdivrl
jmp
rcrb
lahf
mov
add
arpl
test
adc
and
pop
lret
add
outsl
mov
pop
out
hlt
stos
fnsave
add
inc
incl
call
loopne
cmp
jmp
jmp
xchg
mov
mull
cmp
insl
mov
ficoms
loopne
out
data16
or
push
ljmp
jmp
loopne
adc
int3
aam
movsb
dec
add
mov
push
pushl
ljmp
and
inc
cs
inc
cmp
dec
pop
sbb
mov
add
in
xlat
adc
in
or
inc
or
rolb
adc
lods
mov
mov
push
int
cmp
mov
aas
jo
and
mov
movsb
jmp
inc
movsl
out
cwtl
sbb
ret
xchg
add
xchg
outsl
xchg
test
add
jg
pop
pop
scas
add
jmp
jne
loopne
sbb
add
iret
gs
jp
mov
pop
xlat
mov
sbb
shrl
in
mov
pushf
add
push
lods
xchg
roll
in
imul
clc
lock
xchg
test
mov
clc
div
cmp
inc
adc
fistpl
push
sub
xchg
add
xor
mov
mov
jae
cs
pusha
movlhps
scas
sbb
dec
or
test
es
fadd
inc
pop
xchg
push
push
lret
push
ss
fstps
rorb
sub
pusha
lods
adc
push
leave
add
test
rorl
popa
out
mov
mov
push
add
imul
mov
dec
fbld
nop
push
stos
push
vmptrld
dec
inc
xchg
sbb
add
outsb
sub
pop
mov
inc
and
cmp
cmpsb
sbb
and
clc
lahf
add
sub
inc
add
enter
es
int3
xor
add
jns
sbb
jae
rcl
add
sbb
pop
jo
mov
cmp
xor
sahf
pusha
inc
rcr
nop
mov
outsl
fstl
lret
js
ret
add
mov
sbb
dec
in
add
push
add
in
aam
and
mov
dec
fcomps
add
jo
inc
loopne
push
sahf
cltd
enter
add
add
int
xchg
or
addl
jmp
push
push
dec
testb
jle
leave
xor
fdivl
pop
cmp
cmp
push
adc
dec
lahf
cltd
or
scas
pusha
lods
jnp
ja
add
adc
sar
cmc
add
xchg
and
mov
rcll
daa
mov
ret
add
scas
dec
sbb
xor
mov
pop
dec
add
xchg
and
and
push
add
add
outsl
and
sub
push
add
inc
sbb
mov
mov
sub
mov
cmp
sub
jl
movsb
add
push
shlb
xchg
lods
roll
or
out
js
in
dec
sbb
and
inc
inc
jg
and
cmp
push
mov
clc
push
movlps
enter
xchg
shlb
dec
add
fimuls
adc
add
push
mov
mull
sub
cltd
icebp
or
xchg
push
and
jl
insb
movl
outsl
cli
pop
jo
test
inc
cmp
and
dec
pop
mov
xor
xor
add
insb
xchg
sti
fsubrs
pop
push
xlat
push
stos
pushf
mov
mov
movsb
stos
adc
shlb
movsl
sar
push
dec
sti
add
xchg
dec
pop
pop
cltd
pop
popf
add
ret
stos
ljmp
loopne
jno
add
sub
mov
mov
andb
lods
insb
shl
test
sbb
inc
add
push
adc
icebp
pop
sub
dec
fnsave
push
call
add
pop
imulb
and
add
sahf
mov
cmpl
inc
jb
je
fldl
mov
mov
sub
fwait
inc
dec
int
lret
add
add
mov
dec
in
rorl
adc
pop
jbe
pop
jg
dec
jle
pusha
rorb
dec
mov
mov
arpl
mov
jmp
jne
divb
pop
mov
adc
lret
pop
hlt
int3
outsb
mov
dec
adc
sub
add
pusha
push
jnp
int
push
or
or
test
mov
add
outsl
or
sbb
sub
mov
daa
inc
stos
icebp
shlb
add
int3
xchg
or
sbb
out
and
xor
imul
enter
jp
pop
add
mov
lds
in
and
ljmp
mov
and
adc
jne
mov
icebp
movl
sub
stos
aas
push
sbb
pushf
fsubrl
and
testb
ss
test
shll
jle
aas
scas
add
dec
das
sbb
and
push
xchg
xor
lcall
jns
test
push
or
cmp
roll
jno
sbb
xorb
dec
in
push
add
xchg
add
les
jle
cmpb
cli
out
sbb
sub
jge
or
sbb
std
cld
and
cmc
sub
addr16
in
jne
nop
or
cli
pop
sbb
add
push
jbe
xor
stc
lock
outsb
mov
add
inc
cltd
out
imul
add
icebp
xchg
mov
enter
mov
pop
outsl
add
mov
dec
add
in
nop
cmp
mov
pop
cli
add
dec
xchg
inc
test
out
scas
sahf
mov
mov
dec
aaa
or
pop
xor
push
stos
mov
mov
insb
add
mov
mov
lods
ret
xor
mov
xor
enter
sub
add
rep
xchg
and
leave
pop
adc
dec
cmp
or
iret
jl
es
jl
scas
mov
dec
and
jp
xchg
rcll
add
fmull
push
mov
movsb
add
jnp
cmp
lcall
scas
push
pop
in
and
adc
mov
add
movsl
add
and
repnz
inc
aam
addb
mov
movsl
sub
add
addr16
mov
lcall
je
push
cmp
push
mov
aad
loopne
aaa
shl
or
fwait
dec
imul
mov
adc
movsb
add
inc
shl
add
mov
inc
or
add
arpl
add
fcomps
xchg
mov
call
pushf
pop
cltd
xchg
outsw
sbb
mov
adc
sub
les
sub
or
pop
clc
pop
sbb
mov
sti
push
jmp
pop
icebp
lock
sbb
mov
mov
mov
imul
insl
fwait
pop
xor
jne
pop
pop
xchg
sub
inc
push
dec
mov
dec
jg
lock
fidivl
xchg
rclb
add
sbb
mov
ljmp
lret
push
int
sbb
in
repz
jp
or
test
fs
imul
movsb
xor
add
mov
loopne
jp
push
add
orb
jl
jbe
stos
fs
mov
dec
xchg
insl
adc
add
cmp
andb
add
xacquire
mov
inc
sub
pop
stc
in
xorb
xchg
js
frstor
fcoms
xlat
adc
in
mov
rolb
orb
loopne
out
mov
gs
movsl
and
add
bound
adc
je
xchg
or
call
xor
insb
mov
das
or
xorb
add
lods
add
adc
push
cmpsl
cmpb
pop
addr16
push
add
cmp
out
fidivl
adc
add
add
repnz
loope
cltd
and
fwait
mov
jb
into
fstp
in
adc
cmp
jg
vcvtsd2si
ret
dec
adc
xor
fistl
xchg
jo
test
add
ret
sbb
scas
arpl
nop
mov
rcrb
loope
cli
jmp
sub
add
sbb
mov
shlb
and
test
clc
cmc
shlb
xor
push
jmp
push
cmp
lret
adc
push
jns
test
fcmove
frstor
nop
mov
mov
cld
mov
mov
mov
aaa
test
jae
push
pushf
xchg
loope
inc
les
jmp
push
enter
pusha
ljmp
pop
cmp
mov
or
mov
add
lcall
adc
repz
pop
push
and
push
pushf
into
loop
adc
cmp
cmp
les
bnd
in
add
or
je
push
movl
dec
lds
mov
pop
jbe
add
fimull
dec
icebp
std
out
repnz
inc
xor
xor
and
incl
mov
xchg
push
pusha
je
mov
mov
ret
cmpsb
shll
int3
nop
mov
pushf
and
add
xor
lret
je
icebp
inc
cld
inc
sti
jbe
into
ss
add
arpl
push
pop
inc
ret
pop
jae
fwait
add
cmpsb
cmpsl
shl
mov
popl
aaa
cltd
leave
push
sub
dec
push
cmp
or
scas
dec
lahf
and
lods
je
jmp
stos
push
jge
insb
jp
add
jg
jmp
inc
js
sub
dec
sarb
mov
pop
dec
mov
jle
cli
or
lret
es
sti
mov
and
movsb
das
outsb
ss
add
push
test
les
pop
inc
or
xchg
out
add
insl
dec
add
xchg
lock
dec
ds
clc
das
ret
add
test
hlt
insl
pop
push
imul
jecxz
mov
lods
cmc
movsb
and
cmp
push
add
cli
pop
xchg
add
add
add
or
roll
shrl
lahf
xor
test
fbstp
mov
mov
cwtl
cmp
pop
rclb
fsts
mov
aas
adc
add
ds
scas
or
nop
inc
add
push
adc
cld
daa
add
and
loop
fistl
pop
mov
pop
jno
ljmp
mov
addr16
add
imul
mov
mov
pop
daa
xor
mov
xor
push
in
push
roll
scas
mov
rclb
in
pop
sub
les
pop
adc
mov
inc
inc
cmpsb
ds
xlat
rolb
sbbl
mov
add
xor
js
sarb
mov
jns
lahf
add
add
lret
insb
paddq
mov
push
push
cmpsb
gs
add
popf
mov
xchg
add
mov
cli
pop
inc
adc
bnd
or
bound
cmp
ds
mov
pop
pop
add
mov
mov
mov
xor
outsb
cmp
cmp
adc
call
aas
hlt
in
mov
sub
jno
add
or
ss
xor
push
and
adc
push
xor
pop
xorb
ret
cmp
and
add
clc
daa
outsb
sub
out
sbb
mov
xor
xchg
dec
jle
add
mov
ljmp
mov
sub
aaa
daa
dec
jle
cmp
sbb
jns
pop
push
sahf
fs
add
pushf
hlt
mov
dec
push
scas
add
hlt
int3
add
insb
inc
xchg
add
incl
pushf
inc
jle
das
cmp
mov
ds
mov
dec
jbe
pop
cs
fwait
add
mov
xor
add
bound
xchg
mov
jg
add
push
mov
adcb
and
and
add
insb
lods
test
leave
mov
xchg
inc
mov
pop
mov
adc
mov
dec
or
lret
push
out
test
xlat
out
aam
adc
ja
leave
aad
add
cmp
test
sbb
xor
fisubrs
add
add
mov
mov
scas
mov
mov
add
rclb
out
es
adc
xchg
push
shlb
ds
js
iret
mov
add
outsl
ret
sbb
add
adc
iret
dec
or
add
adc
pop
add
mov
sbb
push
sub
pushf
sarb
cmpsl
add
cmp
add
stc
add
hlt
adc
adc
inc
push
sbb
scas
mov
adc
jo
add
add
pop
add
lods
mov
sbb
dec
pushf
lock
add
shl
adc
repnz
mov
mov
jmp
fnstcw
mov
cs
pusha
lods
sti
out
jg
or
fs
push
pop
ret
std
negl
cmc
xor
aas
xlat
jg
or
inc
mov
test
sbb
add
sub
add
stc
flds
jle
xor
add
push
pop
add
imul
sbb
addr16
add
dec
push
add
mov
rolb
mov
push
and
pop
add
adc
data16
daa
inc
cld
add
mov
sub
inc
lret
leave
jns
fistpll
iret
inc
mov
cmpb
pop
imul
lahf
push
sbb
pop
push
and
jl
inc
sbb
push
cld
pop
ljmp
xchg
xor
subb
cmp
sub
jmp
in
cltd
add
fisubrs
movl
push
inc
inc
xor
sbb
mov
push
fmuls
xchg
push
loop
add
pusha
cmpb
call
jg
movl
insl
or
push
in
push
jge
mov
aam
or
xor
dec
cmp
aam
jb
sbb
adc
inc
dec
xchg
inc
daa
adc
add
sbbb
aas
mov
jl
jb
pop
lock
js
leave
shl
ljmp
cmp
push
imul
add
push
sti
hlt
pop
jp
jg
sbb
lock
mov
lret
fcoms
call
jnp
jbe
pop
add
fbld
pushf
mov
xchg
les
addb
rorl
add
cltd
in
sbb
sbb
push
add
fs
mov
and
add
sub
push
push
jns
mov
jno
cmp
sub
mov
lods
inc
je
mov
sub
clc
cltd
sub
add
xor
and
lock
cmp
adc
test
sbb
and
rcrb
call
shrb
insb
mov
mov
and
add
dec
mov
pop
add
and
add
or
lret
add
int
daa
shlb
sbb
mov
dec
add
push
shll
adc
repnz
push
popa
jp
rcr
fadd
int
cs
stc
es
in
inc
push
xchg
push
add
dec
or
xlat
cmp
inc
push
inc
xor
hlt
ret
clc
sti
add
cmp
jmp
pop
add
clc
xchg
orb
cmpl
jle
pop
adc
mov
les
insl
imul
mov
adcl
pusha
cmp
mov
add
sbb
mov
outsb
lret
pop
or
mov
jo
pop
mov
rorl
fwait
sbb
inc
std
mov
filds
fsubrs
cmp
cmpsb
xor
aad
iret
pop
jb
sti
rclb
push
push
lds
cmpsb
imul
add
sbb
cmpb
aaa
mov
in
add
push
mov
call
dec
neg
push
push
lea
pusha
das
jge
xor
sbbb
scas
add
mov
add
adc
jmp
add
jo
aam
in
xor
rcrb
cld
add
ret
and
jae
add
cltd
lea
inc
ds
movsl
cld
push
add
out
pop
push
rolb
out
lods
loopne
scas
xlat
sarl
fmuls
into
aam
mov
cmp
push
pop
push
movsl
fcomi
stos
push
repnz
jbe
nop
jo
mov
or
and
es
or
or
fdivl
add
mov
or
nop
sahf
js
or
pop
cld
push
hlt
ds
or
add
push
lock
add
shrl
jae
imul
cmp
sub
sbb
fists
cmp
add
jge
jl
xor
add
sbb
cmp
jne
enter
bound
incb
push
xor
notb
subl
insb
sbb
add
mov
ja
jmp
xchg
lods
popa
add
fcmovnbe
out
add
lret
movl
hlt
add
iret
add
cmp
out
pop
mov
mov
dec
idivl
add
mov
xor
std
dec
add
movsl
rolb
mov
sbb
jl
imul
inc
jp
aaa
sbb
movsb
jnp
mov
dec
scas
or
mov
push
add
push
cmp
add
push
pop
lods
add
inc
fwait
outsl
add
int3
rorl
mov
adcl
mov
cmpsb
sub
xchg
add
jbe
push
data16
test
rorl
out
scas
rcrb
add
cmc
cmp
add
pusha
push
jo
xor
in
xchg
jmp
mov
or
loopne
push
pop
fcompl
sbb
xchg
ucomiss
mov
add
add
repz
or
mov
mov
cmpsl
or
cltd
imul
inc
inc
cmp
or
xchg
inc
xchg
or
jo
add
pop
loopne
shlb
dec
mov
and
mov
enter
test
mov
mov
xchg
call
sbb
mov
cmpsl
xchg
adc
cmp
sbb
adc
or
idivl
je
mov
adc
movsb
cltd
shll
sbb
stos
adc
xchg
repnz
sbb
add
jno
arpl
xchg
push
xor
int
mov
add
pop
js
jno
xor
cmp
add
fs
add
mov
lret
sahf
mov
mov
xchg
push
ljmp
insl
ror
fldl
push
jns
fildl
sbb
mov
add
jecxz
xchg
dec
mov
pusha
push
leave
add
in
fs
pusha
dec
lds
aaa
xchg
cmp
cmp
pop
cmpsb
cmp
sbb
sub
lock
pop
aas
sahf
gs
cmp
daa
jmp
xlat
in
enter
lods
stos
mov
int3
add
loopne
clc
xor
push
aam
mov
imul
pusha
cvtps2pd
adc
dec
shrl
add
xchg
inc
sbb
loope
add
out
cmp
jne
mov
dec
dec
xchg
repz
mov
mov
jns
jae
js
lock
and
fdivs
add
or
xchg
and
or
mov
add
pop
cmp
popa
cmp
mov
enter
add
mov
push
in
and
stc
mov
xchg
or
out
call
lds
cmp
das
add
cmp
mov
or
cltd
add
lret
inc
cmp
je
shl
add
inc
in
jo
pop
push
scas
lods
xchg
add
sub
je
mov
aad
xchg
adc
pop
stc
clc
push
flds
and
pop
in
add
hlt
sub
cmpsl
dec
filds
cld
lods
xor
mov
pop
or
cltd
stc
jbe
jno
in
add
aaa
popa
mov
mov
sti
lret
mov
sbb
je
addr16
pusha
clc
jmp
repnz
cwtl
push
test
add
rcrb
dec
xor
cmp
add
outsl
dec
mov
mov
gs
nop
cmc
push
add
call
jle
jle
add
enter
sub
add
mov
jnp
aad
arpl
loopne
test
mov
outsl
clts
data16
shlb
ficomps
add
adc
shlb
repnz
lds
jbe
sub
inc
pop
mov
and
pop
js
in
int3
inc
jl
jle
add
call
xchg
cs
dec
lcall
sub
push
rolb
push
push
xor
inc
jns
inc
fwait
in
das
inc
sub
pop
pop
mov
scas
add
jmp
or
loop
add
test
pusha
mov
les
cmpsl
outsb
popa
rcrb
movsl
rclb
test
sbb
jge
outsb
mov
imull
divb
lcall
jno
add
or
int
pushf
daa
lock
mov
add
call
cmp
xor
insl
daa
push
mov
cld
popf
test
out
add
pop
mov
cmp
mov
sbb
cltd
repnz
xchg
rcrb
and
jmp
add
test
enter
in
es
into
push
adc
cmp
sub
mov
repz
ret
pop
push
pop
loopne
in
fnstcw
jp
push
imul
xlat
sbb
pushf
push
arpl
or
fmuls
call
popa
push
inc
inc
push
jg
pop
out
rol
add
jecxz
popa
dec
add
sub
or
xchg
add
in
out
fidivs
mov
pop
add
les
les
adc
or
jp
sti
adc
loop
daa
push
adc
mov
or
nop
roll
outsl
add
scas
inc
push
push
aam
movsb
add
hlt
and
sbb
xor
mov
iret
pop
aad
das
jmp
and
cmp
pushf
ljmp
add
sbb
jb
add
icebp
insl
adc
lock
pop
pusha
and
jbe
jl
jns
add
sarl
add
mov
add
cmp
or
cmp
adc
add
les
fwait
sahf
pusha
or
add
xor
add
pop
int
xchg
aas
cmpsl
cmp
jl
add
loopne
add
push
mov
cmp
xchg
cmp
inc
aas
repnz
cs
push
and
xor
add
add
jo
jne
shrb
xorb
adc
add
jle,pt
dec
lret
in
push
or
in
push
xor
xchg
jg
aad
pop
pop
inc
add
add
fs
imul
add
mov
sti
sbb
sub
mov
xchg
xor
push
popa
rorb
jno
or
ja
out
ret
push
test
es
lcall
add
push
mov
ret
aaa
mov
lret
inc
mov
and
sub
aam
add
lock
add
or
or
push
ret
inc
or
mov
push
xor
add
les
mov
push
pusha
ret
call
aam
add
jb
sub
sbb
cmp
mov
lret
cmp
pop
sub
inc
mov
hlt
test
repz
fisubrl
sbbb
pop
push
mov
loop
inc
add
cld
shlb
notl
xor
in
pop
lahf
add
out
inc
xchg
fldl
sub
pop
mov
aas
movsl
cmpsb
pop
das
lock
incl
mov
addb
fadd
test
test
imul
xchg
jae
and
imul
aam
aad
je
outsb
inc
into
fwait
mov
add
in
xchg
sbb
mov
xchg
fucomi
flds
je
jl
sbb
sbb
mov
jo
add
jns
xor
adc
cmp
or
nop
and
add
test
and
pusha
mov
add
pop
loop
out
xchg
mov
xchg
test
and
add
lods
inc
add
enter
cmp
inc
xchg
pusha
sub
inc
sbb
clc
mov
cmp
sub
jbe
pushl
jo
jle
sub
cmp
cmp
dec
lods
stos
add
add
push
add
push
mov
repz
test
jnp
sbb
mov
fcomps
out
add
xor
fldenv
add
sbb
and
pushf
lea
sbb
fiadds
mov
xchg
mov
mov
cltd
adc
add
out
rorl
cmp
repz
or
xchg
and
in
add
push
xor
fcomip
add
outsb
jg
clc
dec
add
divb
nop
cmp
sbb
mov
push
or
loopne
pop
add
push
or
add
loop
fnstcw
cld
aad
push
push
rclb
clc
xchg
add
fdivrl
mov
jle
mul
outsl
adc
hlt
aaa
clc
jmp
stc
jae
ljmp
xchg
jne
rorb
push
ret
nop
jno
lods
adc
xchg
add
pop
in
cmp
imul
adc
lods
mov
insl
negl
movsl
pusha
inc
sarl
cs
inc
stos
mov
popa
ds
jp
fstpt
loopne
mov
std
ss
add
and
mov
inc
movsb
addr16
sbb
add
xchg
lock
fstps
aaa
adc
test
rcrb
push
out
xor
add
cmp
mov
inc
mov
pop
and
stos
xchg
in
jns
pop
xchg
insl
hlt
add
test
add
into
js
jg
sarl
add
mov
sub
add
push
xor
pop
cmpsb
sbb
xor
roll
dec
cwtl
les
sub
mov
rcl
loop
les
sub
cmp
inc
cmpsb
ds
dec
add
sti
push
call
sbb
adc
dec
xor
rcll
imul
fwait
cmp
das
dec
add
dec
fisttpll
clc
sub
or
loopne
movl
popw
cli
add
icebp
iret
pop
nop
sub
mov
stc
mov
mov
mov
or
insl
xor
in
pop
lret
and
jne
sub
mov
sub
jecxz
add
jno
mov
ret
add
scas
jb
test
shll
rcr
inc
xchg
sub
inc
inc
sub
push
adc
sbb
movsl
jge
mov
jle
cwtl
sbb
rol
pop
mull
or
push
inc
fimuls
add
cmpsb
xor
pop
pushf
or
aad
cltd
subb
fadds
sbb
imul
cmpsl
pop
icebp
mov
add
movsb
sbb
call
pop
cmpsb
andb
popf
jle
xlat
in
sbb
xorb
mov
insb
loopne
adc
mov
sub
or
or
and
push
add
sub
jecxz
scas
out
daa
add
jmp
mov
imul
push
aaa
xor
adc
ret
pop
out
orb
add
inc
shlb
hlt
scas
sub
mov
je
enter
push
xor
adc
xor
push
xor
mov
shlb
xchg
leave
sub
cmp
inc
xchg
test
xor
clc
mov
add
imul
xchg
inc
pop
lock
dec
add
mov
lods
lahf
add
add
aad
jmp
jbe
cld
mov
jg
sbb
pop
pop
adc
stos
jp
int
push
inc
and
and
fwait
and
sbb
cli
mov
sub
xchg
mov
jmp
lea
pop
cwtl
cmp
scas
lret
lcall
adc
mov
orb
mov
jnp
push
adc
add
jmp
mov
ljmp
cmc
sbb
cmp
mov
clc
xlat
push
in
jnp
cwtl
out
or
inc
int3
inc
adc
rorb
into
and
pop
dec
mov
or
xor
pop
mov
jb
add
xchg
shrl
mov
inc
add
addr16
int3
pusha
fcoml
pop
dec
test
leave
xchg
push
shll
xor
stos
nop
js
lock
pop
in
add
mov
int3
push
mov
add
nop
xlat
pop
dec
inc
movsl
addb
inc
test
into
jmp
cwtl
add
js
adc
jno
mov
lods
in
loopne
cli
add
les
cmp
add
mov
add
xchg
aas
or
xchg
add
test
jge
enter
andb
add
mov
push
push
and
add
add
adc
and
or
enter
jno
pop
pusha
lret
add
adc
mov
rcr
adc
sbb
pushf
jp
stos
xor
xchg
jl
mov
loopne
imull
sbb
mov
push
or
outsb
and
add
inc
cmp
mov
lcall
test
dec
icebp
movsb
out
fwait
jns
pusha
pop
add
cmpsb
sub
and
in
mov
add
push
mov
hlt
cmp
xor
pop
jg
cwtl
inc
add
fldl
cmp
fdivrl
cmpsb
sbb
adc
movb
sub
fistps
cmp
in
pop
inc
push
jp,pt
add
add
push
adc
add
es
popa
jne
js
test
xchg
cmp
mov
mov
add
into
ds
icebp
push
roll
pop
add
lret
lock
cwtl
push
pop
add
popa
sarb
push
shlb
add
orl
mov
cmp
lahf
inc
lea
mov
cmp
push
in
mov
inc
adc
xor
sub
sub
xchg
je
inc
mov
bound
lods
stos
popf
cwtl
fmull
int3
pop
mov
lea
add
push
orb
sub
add
daa
sbb
js
lods
aaa
in
ljmp
mov
push
stos
pop
add
pshufw
cmp
adc
jns
hlt
mov
jae
add
lret
cld
jno
pushf
add
lahf
mov
push
in
push
adc
adc
inc
pop
cltd
push
xchg
add
ret
mov
jmp
adc
xrelease
pop
inc
and
sti
mov
dec
push
call
fidivs
xchg
fistpll
and
jmp
js
jecxz
mov
rclb
out
adc
negb
cmpl
verw
repnz
pop
test
mov
xchg
add
das
add
push
add
mov
gs
jb
or
fcmove
add
push
and
daa
add
add
jno
flds
je
xchg
notb
loop
inc
add
lcall
cs
out
sar
and
pop
cltd
bound
or
pop
sbb
add
and
sub
mov
xor
push
jl
fcmovne
push
or
add
aaa
push
aam
add
mov
and
pop
add
pop
cmp
pop
or
and
sbb
or
or
sub
rclb
filds
andb
lret
add
hlt
sub
out
push
sbb
xchg
aam
add
mov
shr
out
inc
fwait
gs
fisubs
cld
out
ljmp
sub
int3
ror
mov
add
sub
loope
inc
test
cmp
aas
jo
add
arpl
ja
enter
je
sti
sbb
sbb
push
dec
pusha
dec
aaa
adc
inc
sub
popf
xchg
les
lods
daa
sbb
fadd
jecxz
mov
pop
xor
jbe
mov
and
out
add
cmp
je
and
in
add
mov
movsl
out
or
add
adcb
js
add
aaa
lcall
inc
cmc
popl
add
inc
sub
in
hlt
popf
add
sar
or
add
dec
cmp
jns
fnstsw
sbb
inc
add
cwtl
mov
cld
rolb
mov
cmp
add
xlat
add
or
xor
mov
push
xorb
je
mov
clc
andb
add
gs
and
dec
out
jmp
and
call
adc
sbb
push
out
jae
add
mov
loope
pop
rcl
add
mov
sahf
imul
and
lret
xchg
fcomps
mov
rclb
hlt
es
add
out
lods
orl
and
mov
jcxz
pop
lods
pop
and
leave
add
fadds
incb
pushf
adc
sbbb
xchg
fcompl
add
test
ret
fstps
or
fidivs
inc
or
xlat
nop
add
and
mov
xor
dec
rcrb
add
adc
mov
pop
mov
add
cmp
dec
add
xchg
add
dec
inc
mov
jne
popa
pop
mov
inc
lods
hlt
jno
jl
mov
adc
add
jle
jecxz
jmp
mov
mov
add
or
xchg
lds
aaa
aam
pusha
pushf
inc
cli
dec
add
rclb
test
sub
adc
rorb
add
mov
or
out
iret
mov
pop
add
andl
pop
lahf
cmp
push
roll
in
dec
into
push
pop
or
push
sbb
addr16
cmp
inc
push
mov
add
mov
in
into
sub
mull
dec
mov
inc
test
fucomp
aad
pop
push
xchg
int3
add
inc
nop
add
mov
les
shl
pop
cld
movsl
cs
roll
push
push
or
push
hlt
cmp
or
push
enter
xor
aas
add
fcoms
rcl
fdivl
out
mov
mov
jle
rcrb
add
mov
push
pop
add
inc
popf
int3
cmc
orb
ret
movb
sbb
mov
add
jbe
push
inc
pop
and
cmp
mov
sub
adc
rolb
pop
mov
add
mov
mov
test
subl
add
loopne
out
inc
sub
push
add
fdivrl
cltd
hlt
cmp
cwtl
loop
pop
idivl
sti
pop
and
lods
pop
cltd
test
jno
cwtl
mov
into
jnp
add
mov
test
fs
and
jp
mov
xor
das
mov
mov
push
dec
repnz
jle
cmp
les
push
outsb
cmp
jmp
pop
xchg
xchg
mov
addb
add
lods
jecxz
clc
sub
lock
test
ss
add
pusha
repz
adc
cmp
mov
xchg
xor
in
movsl
shll
std
lret
cmp
int
sub
add
into
pop
js
sub
add
movups
aaa
repz
jg
clc
add
scas
mov
adc
add
fbld
ret
int3
sub
push
and
mov
cmpxchg
dec
xchg
popa
sahf
add
mov
pop
adcb
stos
adc
xchg
cmpsb
roll
in
mov
cmp
mov
cmp
xorl
addb
lods
sbbb
mov
jp
mov
ret
mov
cli
xchg
ficoms
idivb
or
sub
insl
loope
and
popf
dec
pop
insb
or
lock
icebp
arpl
jl
jnp
add
mov
imul
mov
mov
mov
aas
add
incl
mov
inc
in
imulb
pop
and
add
adc
cmp
add
jp
mov
ret
fsubl
addl
incb
xor
add
repz
js
aaa
in
push
jmp
imul
ds
mov
lahf
ss
sub
jnp
push
push
dec
mov
cmp
cs
in
jp
pop
or
pop
add
lcall
pop
adc
inc
add
xchg
xchg
js
pop
cwtl
iret
xchg
fdivp
xor
int
mov
push
movb
hlt
jle
fimull
xchg
jb
in
push
add
repnz
cli
xchg
hlt
or
stos
mov
or
inc
data16
mov
mov
imul
icebp
add
push
decl
std
jl
add
sub
loopne
and
add
pop
jge
sub
nop
pop
or
add
sbb
insb
or
sarb
clc
adc
scas
into
pop
mov
mov
mov
insb
das
ja
xchg
data16
bound
arpl
test
int3
loope
test
lret
cmp
fstpt
jp
or
push
add
bnd
lret
divb
icebp
lahf
dec
into
mov
push
add
or
in
xor
loopne
xchg
rcll
add
in
xchg
sbb
popf
cli
rol
rcll
in
or
pop
dec
ja
push
std
adcl
jae
dec
mov
cli
add
lret
dec
sbb
inc
inc
mov
mov
lock
dec
dec
add
mov
icebp
pop
sbb
mov
xchg
jge
add
jne
sbb
push
add
pop
cmp
ret
out
pop
cmp
and
sar
outsb
enter
cmp
sbb
adc
popf
and
aam
sbb
pop
mov
es
ja
cmp
cmp
aad
out
or
mov
mov
adcb
and
pop
aas
sbb
xor
aam
push
add
adc
pop
mov
mov
mov
sub
add
enter
adc
push
adc
inc
add
test
jae
or
enter
ds
outsl
sbb
mov
aaa
aad
fmuls
insb
dec
rcrl
ret
adc
in
sbb
push
mov
shl
add
cmp
jecxz
iret
popa
fildl
rcrb
fs
sarl
add
xchg
jno
dec
mov
add
and
adc
or
xchg
jo
loopne
push
call
adc
cmp
jge
push
add
jmp
adc
cmp
lahf
in
lods
imul
sbb
cmpsb
mov
adc
cmpsb
add
rcrb
es
xor
je
jo
add
stos
mov
in
incl
push
inc
mov
aas
jl
lahf
push
xor
aam
xorb
add
cmp
or
add
daa
dec
jl
xchg
inc
xchg
add
fildll
or
add
sbb
and
inc
cmpsb
sub
add
or
shrb
pusha
add
and
test
mov
stos
xor
out
call
pop
jecxz
das
xor
adc
add
xchg
inc
push
push
jl
nop
push
xchg
adc
xchg
shlb
add
xchg
mov
mov
ljmp
cwtl
sub
add
movb
std
out
adc
fwait
adc
fimuls
push
add
xchg
cltd
or
cmpsb
add
jp
test
int
es
pop
scas
in
add
test
add
cli
ficoml
and
lret
call
add
arpl
cmc
pop
add
inc
inc
add
shrl
sbb
leave
or
es
sbb
arpl
sbb
js
movsb
mov
xchg
jge
sub
pop
sti
adc
pop
test
add
cmc
xchg
add
cmpb
sbbb
insb
adc
mov
test
push
out
inc
pop
adc
xchg
ljmp
test
add
inc
inc
adc
or
mov
adc
insb
add
out
xor
aas
pusha
mov
cld
subb
pop
cmp
push
mov
daa
xorb
arpl
insb
jmp
jl
inc
sub
jg
lock
mov
pop
lret
xor
inc
lods
insl
add
rol
add
and
jns
adc
and
inc
sub
lahf
pop
leave
mov
das
add
lret
fdivrs
testb
scas
xrelease
scas
push
xchg
fiaddl
xchg
mov
inc
bndstx
movsb
sbb
pop
lret
cmpb
jb
sub
xchg
and
hlt
add
lcall
add
sub
in
inc
dec
dec
add
inc
mov
or
or
mov
mov
std
add
jle
arpl
xchg
add
jne
dec
xor
jl
in
pushf
add
fldpi
adcb
mov
jnp
cmp
cs
repz
mov
sarb
das
add
ret
js
add
push
insl
xor
loopne
add
and
sub
or
fimuls
add
rolb
mov
mov
pop
jns
pop
stos
jnp
gs
shlb
add
imul
pushf
add
in
pop
clc
and
dec
or
shr
in
rcrl
add
fcmovnb
inc
jae
sbb
jl
decb
jns
jg
jmp
add
cs
sbb
sbbl
jne
push
push
nop
add
sub
ds
rcrb
adc
cmp
pop
stos
mov
bound
adc
loopne
scas
pop
test
adc
enter
or
std
nop
nop
lret
sbb
cmp
mov
mov
add
data16
xchg
iret
adc
repnz
call
push
sbbl
jae
pop
or
scas
loop
pop
test
repnz
aas
xchg
aam
push
add
add
xor
or
pop
cmpsl
mov
movb
ds
sahf
push
xchg
sti
add
jle
add
int
insl
aam
dec
xor
mov
enter
pop
icebp
xor
sbb
xchg
cwtl
dec
add
and
mov
subps
pop
lret
fildll
cli
repnz
loopne
and
add
add
mov
and
jl
in
cmp
adc
and
mov
insb
push
xor
mov
addb
call
js
cli
mov
sbb
lret
in
xlat
inc
push
int3
mov
testb
je
fadds
cltd
dec
mov
xlat
rorl
mov
iret
sbb
pop
xchg
aas
rcrb
jecxz
add
outsb
add
or
stos
dec
pushf
mov
stos
adc
sbb
dec
stos
rcrb
add
mov
cmp
ret
cmp
jp
insl
push
fistl
add
lret
mov
loop
mov
mov
ss
pop
addb
add
cmpsb
push
gs
rcrb
jno
lret
pop
add
mov
and
jmp
cmp
dec
inc
mov
push
gs
dec
lret
add
push
stos
in
jbe
outsl
aas
lock
rolb
imul
mov
aaa
mov
sbb
cmpsb
push
shll
dec
in
push
sub
cli
add
mov
mov
mov
mov
inc
in
add
loopne
mov
add
mov
incl
data16
movsl
push
push
xor
lods
jmp
cmp
mov
xlat
mov
scas
add
xchg
stc
pop
add
cmp
adc
add
dec
cli
cs
cmpsl
xchg
and
add
daa
das
jbe
es
scas
faddl
lea
add
mov
xor
rcrb
enter
adc
mov
add
xchg
fmul
mov
cmp
mov
mov
lret
add
addr16
out
push
add
in
pop
and
and
aam
add
ds
add
or
jp
add
jecxz
test
push
pop
adc
inc
roll
movsl
cmp
sub
adc
in
xor
dec
jno
add
jo
or
sahf
imull
test
push
pop
dec
pop
dec
into
mov
test
push
mov
mov
add
pop
cmp
stc
mov
loope
rorb
insl
push
aaa
mov
inc
loopne
leave
fld
stos
sbb
or
pop
cld
insb
jmp
call
arpl
aas
push
jle
xor
icebp
mov
clc
shlb
add
add
and
mov
lcall
fucom
push
adc
add
lds
mov
aad
cltd
pop
inc
insl
movsb
cvtps2pi
bound
mov
pop
test
xchg
adc
xorb
les
xchg
mov
roll
xchg
add
mov
push
jo
cmp
mov
ljmp
sub
cmp
in
sbb
sbb
ss
or
xchg
add
mov
sarb
outsl
pushf
iret
cmp
mov
and
pop
mov
lds
mov
xchg
test
pop
mov
sbb
inc
gs
dec
rolb
ret
xorl
inc
xor
mov
add
or
movsb
add
jmp
adc
pop
push
sarb
and
pop
lock
aam
sbb
dec
mov
add
and
iret
roll
adc
out
xchg
mov
roll
dec
hlt
dec
pop
inc
sub
sub
xor
jl
mov
insb
cmp
bound
or
addr16
mov
popf
loope
add
int3
xor
movsb
lock
fistpl
test
push
mov
or
sbb
mov
jecxz
test
xor
xor
add
roll
fdiv
les
out
dec
psllw
cmovne
lea
cmp
add
ljmp
add
mov
aaa
jno
cmc
in
in
inc
daa
mov
add
mov
lcall
mov
leave
fisttpl
push
sahf
inc
dec
and
and
call
mov
dec
sgdtl
cmp
inc
cld
push
and
lret
or
adc
add
or
scas
and
xor
icebp
das
addr16
lret
jnp
in
mov
test
mov
cltd
add
mov
repz
jg
sarl
and
add
add
shrb
add
xchg
sbbb
pop
cli
mov
pop
mov
gs
stc
test
inc
mov
fsubr
fidivrl
mov
fdivr
xchg
stos
stos
dec
or
dec
add
inc
sbb
dec
in
or
add
mov
pop
je
nop
ret
or
andb
inc
movb
packssdw
add
dec
adc
sub
mov
or
dec
adc
insl
imul
xchg
adc
enter
cmp
xchg
lret
jle
fisttpl
fwait
xchg
add
xor
mov
out
add
out
lahf
push
push
ret
test
and
mov
add
xchg
sub
push
sub
xlat
xchg
gs
pop
jge
orl
fldenv
or
xchg
push
add
sarb
jecxz
gs
sub
lcall
inc
cmp
aad
js
add
hlt
inc
pop
push
push
scas
std
test
sub
mov
lea
mov
add
sbb
inc
out
aam
add
sub
xor
repnz
xor
imul
ds
pop
sbb
pop
fiadds
add
pushf
mov
add
mov
pusha
cwtl
in
mov
mov
add
fnsave
ds
repz
add
jmp
outsb
or
in
faddl
out
aaa
arpl
pop
or
fbld
std
ja
push
mov
insl
bound
inc
xor
push
pop
out
js
mov
dec
aad
sub
xor
dec
xchg
cmp
or
enter
mull
cmp
cmp
dec
adc
add
mov
lret
mov
push
cmovb
inc
or
lret
arpl
jbe
icebp
je
push
daa
add
in
mov
xchg
sbb
mov
sub
roll
xchg
jle
fs
stc
push
sbb
mov
outsl
mov
dec
int3
pop
and
es
test
fildll
data16
jl
adc
xor
pop
fwait
cmpb
and
add
xchg
loope
pop
adc
cli
add
mov
add
in
push
add
push
inc
or
adc
xchg
add
pushf
sub
aam
popa
sub
add
add
xchg
mov
insb
inc
pop
lret
push
popf
jmp
cltd
pop
sub
ret
adc
lock
sbb
dec
or
outsl
jmp
call
or
iret
loopne
mov
test
inc
or
dec
pop
sbb
into
popa
dec
and
pusha
inc
adc
into
dec
inc
iret
cmp
mov
daa
add
imul
in
pop
in
mov
cmpb
xor
fwait
jnp
pop
xor
enter
jle
orb
outsb
jle,pn
jb
add
imul
add
mov
ret
leave
cmp
shlb
add
insb
sbb
insl
lods
dec
aas
or
add
push
sub
jg
fcmovb
cmpsl
sbb
sbb
sbb
mov
jbe
je
cmp
xor
inc
add
lea
das
out
push
pusha
lock
or
or
in
daa
jge
push
mov
dec
pushf
pop
cs
xchg
in
test
loope
dec
test
cmp
mov
lds
inc
fidivl
cmp
scas
pop
add
add
dec
fadds
idivb
rolb
add
adc
pop
add
fildl
cld
and
cmpb
cmpsl
scas
jge
dec
jbe
jg
ljmp
or
rcll
rorb
js
sub
push
aaa
mov
xor
inc
mov
ljmp
inc
push
push
push
add
negl
lock
xlat
out
nop
test
in
sbbb
push
xlat
andl
xchg
andb
inc
call
inc
cmpsl
dec
inc
xor
inc
call
adc
iret
cli
out
add
cmp
in
add
dec
inc
out
xchg
xor
sbb
lldt
adc
loop
mov
xchg
inc
cmp
mov
add
add
mov
add
xchg
pop
rcl
add
push
fwait
or
fiadds
cmp
push
test
test
mov
sub
and
xor
and
add
aas
shlb
scas
add
xchg
loopne
repnz
add
pop
pop
cmpsb
lods
cmp
xchg
add
sbbl
mov
cwtl
dec
cltd
xchg
mov
dec
jmp
cs
loopne
push
enter
mov
aad
addl
jbe
and
cmpb
sbb
cmp
mov
dec
dec
pop
cmp
adc
push
push
arpl
or
cwtl
cmp
out
xor
ret
int3
push
lds
ret
sbb
clc
add
push
xchg
mov
add
xor
or
pop
sub
inc
adc
cmp
xor
dec
add
sub
addr16
cltd
stos
addb
bound
leave
or
cmp
mov
mov
sub
mov
xchg
sub
sub
scas
out
fadds
sub
or
dec
scas
and
stos
pop
mov
pop
mov
rorb
dec
xchg
push
dec
imul
cmp
stos
xor
adc
inc
jnp
lods
jecxz
sbb
xchg
xor
and
test
js
repnz
and
in
push
jp
cs
ljmp
in
xor
inc
subl
pop
vpcomb
dec
lock
mov
adc
push
push
mov
mov
std
jg
inc
icebp
push
cmp
push
bound
repnz
out
add
das
ret
add
pusha
add
rclb
adc
loopne
mov
xchg
hlt
out
pop
ret
test
cltd
fs
add
jle
dec
out
cmp
mov
insb
in
and
add
andl
jmp
add
rorb
gs
jle
mov
push
sub
jno
or
add
xlat
mov
loop
jae
int
jbe
inc
das
pop
dec
jns
mov
adc
scas
in
mov
mull
jg
add
push
cwtl
mov
rdmsr
and
add
lock
les
ret
pusha
cmp
mov
mov
or
xchg
push
call
or
jae
jle
jl
sahf
push
daa
ret
xchg
mov
pop
mov
jmp
cmp
sub
push
ret
jo
in
test
sbb
inc
mov
fdivs
mov
sub
add
ja
cmp
sbb
lahf
mov
in
outsb
and
xchg
loopne
inc
fisttpl
add
sub
das
xchg
or
leave
loop
sub
nop
or
scas
or
imul
and
stc
aaa
add
sub
inc
loope
mov
push
nop
push
mov
mov
das
pusha
mov
push
add
ljmp
add
bound
jnp
xchg
aas
lret
stc
inc
hlt
sarl
repz
cmp
xchg
or
mov
sahf
sbb
ret
stos
sub
pop
inc
push
and
add
adc
in
and
mov
dec
out
cld
pop
cmp
jg
push
adc
icebp
pop
pusha
enter
movb
sbb
cwtl
aam
popf
adc
adcb
xchg
sahf
pop
or
mov
testb
add
fucom
and
ja
cmp
jnp
cwtl
fdivp
orl
movsb
orl
cmc
add
je
cmpsb
or
sbb
leave
add
cmpsl
orb
rolb
cmpsb
jo
adcb
adc
and
and
ret
add
ja
push
imul
and
fsubrl
mov
xchg
sub
aas
enter
sahf
scas
lock
lea
mov
sub
pop
jo
pop
jne
xchg
fistpl
shrb
xchg
xchg
and
mov
dec
or
adc
lret
nop
fimuls
jge
loope
mov
cmp
push
fucomp
dec
lock
and
jle
mov
test
jo
cmp
rorl
popf
std
sbb
ds
cwtl
fadd
fiaddl
add
mov
add
sub
std
stos
lods
xchg
pop
imul
movsb
jmp
sti
idiv
gs
insb
popf
das
fidivrl
outsl
mov
add
jae
sbb
push
repnz
or
test
sar
add
fsts
mov
push
fldl
or
imul
xlat
mov
xchg
in
les
popa
sbb
cmc
pop
add
add
xor
stc
xor
sahf
add
pop
mov
test
lret
pop
rcrb
push
add
or
rclb
adc
ret
mov
mov
stos
pop
rolb
cld
icebp
jnp
xor
and
cmp
mov
mov
add
outsb
insl
cmpsl
add
xchg
pop
add
xlat
xchg
xor
add
ljmp
jae
or
fst
popa
fcomps
mov
sub
adc
add
add
mov
testb
push
dec
fisubrl
sub
add
xlat
outsl
stc
stos
push
cld
movsb
pop
pop
std
sbb
sbb
les
das
jne
push
lcall
adc
inc
add
jp
hlt
in
dec
mov
add
pop
sub
ret
or
add
lds
imulb
inc
add
add
pop
imul
and
les
pop
adc
sahf
fimull
add
rorl
pusha
arpl
sbb
js
add
and
ret
dec
scas
add
popa
sub
xchg
sbb
adc
shrl
or
and
sbb
bound
xor
adc
cmpsl
or
or
jge
lcall
dec
iret
push
add
sbb
fiaddl
dec
clc
cli
enter
xorl
xor
dec
movsl
nop
sub
out
add
stos
adc
dec
add
decl
aam
pop
push
rorb
jecxz
mov
loopne
pop
lahf
pop
ret
add
adc
add
out
dec
fldl
xchg
or
cmp
push
fisubl
les
pop
push
adc
popa
inc
or
and
aam
loop
mov
in
lock
fstpl
loope
sbb
ret
xchg
sub
mov
rol
add
jne
add
ret
bound
adc
movsl
popf
push
rorb
loop
mov
add
or
cmpsl
add
lahf
and
add
xor
lock
in
mov
sarb
add
mov
faddl
movsb
sub
ret
jo
add
jns
add
insb
pop
shld
rclb
leave
test
or
xchg
repz
or
fisttpl
and
inc
into
or
repz
mov
sahf
sti
add
imul
js,pn
int
mov
lcall
mov
add
mov
jp
shl
jg
mov
xchg
jl
mov
rolb
add
incb
daa
add
mov
pop
push
int3
jmp
sbb
mov
xchg
scas
fsubrp
pop
cmp
stos
cmp
loopne
push
addl
and
fidivs
aaa
and
add
sub
clc
mov
add
aas
mov
dec
data16
jecxz
mov
add
lahf
xchg
adc
adc
xchg
push
mov
fs
sbb
jmp
ljmp
mov
jns
mov
jp
les
push
jmp
or
and
sti
stos
lret
or
ljmp
out
int
cltd
sbbb
dec
add
adc
inc
add
enter
jo
and
inc
xchg
add
push
test
jg
push
in
cmc
inc
jge
add
jp
fimuls
xor
les
lock
sbb
adc
mov
nop
pop
or
pop
cmp
pop
popf
push
sub
leave
pusha
xor
and
add
imul
mov
add
je
cmpsl
mov
sbb
adc
repz
jne
mov
imul
add
adc
mov
test
pusha
pop
jns
jl
add
cli
insl
cli
pop
add
les
sbb
int3
mov
inc
mov
cwtl
call
pop
add
ficomps
xor
fmul
add
cli
lret
lods
adcl
push
out
jne
nop
or
ret
xchg
add
xchg
inc
fcoml
dec
fwait
shr
sbb
add
sbb
pop
cli
jmp
sub
jg
leave
and
push
je
push
lds
dec
test
addl
shl
pop
mov
mov
cmc
test
cwtl
rolb
inc
xor
jnp
imul
addr16
mov
pusha
jecxz
js
pop
cmp
pushf
pop
daa
mov
and
cltd
add
pop
mov
mov
add
jle
mov
pop
or
ud0
push
lods
push
sbb
rcr
loop
add
inc
add
dec
jne
sub
outsb
xor
add
add
fisttps
jo
or
das
mov
push
fidivl
lods
pop
pop
lcall
adc
pusha
and
icebp
lcall
dec
cmp
test
pop
loopne
mov
cmp
jge
stos
pop
sub
inc
sbb
ss
pop
int3
test
mulb
int
jnp
popf
dec
pop
adc
cmp
mov
or
sbb
jp
shrl
dec
nop
add
movsl
in
test
xor
hlt
adc
sbb
pusha
xchg
pop
fsts
int3
or
pushaw
loop
pop
dec
push
mov
in
pop
jnp
add
inc
push
mov
add
je
daa
ss
xor
and
testl
inc
mov
cmp
push
lahf
loope
insb
push
sbb
shl
mov
mov
jecxz
pushf
sbb
jae
sub
add
or
es
mov
popf
jae
out
mov
fstl
cmc
xor
mov
dec
mov
pusha
jl,pt
lock
or
pop
dec
push
adc
ret
lods
cmc
aam
pushf
adc
sarl
sub
sahf
adc
rolb
mov
cmp
rolb
mov
mov
adc
push
adc
sahf
cld
popa
xchg
mov
sub
test
mov
jns
js
sub
inc
js
les
cmp
in
mov
ret
add
lcall
mov
test
xor
sub
out
call
lcall
mov
inc
push
fmuls
divb
sub
mov
cmpsb
fists
test
iret
xor
mov
fsubr
aas
xor
or
pop
cwtl
dec
push
fimull
sbb
mov
pop
inc
fs
nop
sub
sub
mov
bound
lret
sti
ja
sub
jle
test
push
in
rolb
aas
mov
push
push
add
push
scas
enter
addb
jg
in
mov
rclb
lock
pop
add
cmpsb
inc
nop
dec
aaa
sbb
mov
push
push
adc
pop
bound
add
xor
add
cmc
adc
adc
jmp
pop
test
xor
popa
fsubs
xchg
push
adc
add
movsb
pop
jo
add
sbb
cmp
xchg
repnz
pop
xchg
add
and
dec
gs
and
lods
les
add
sbb
leave
test
int3
subb
add
sahf
cmc
mov
push
ss
test
cmp
fsubl
test
mov
adc
outsb
add
stos
inc
in
in
xor
aaa
std
cmc
rcrb
xchg
add
sbb
ret
les
add
adc
push
stc
filds
mov
and
dec
jno
adc
sti
or
xchg
jge
test
ret
ret
push
fucomip
loopne
jne
test
cmp
sbb
ret
loopne
icebp
inc
hlt
inc
or
mov
aam
hlt
mov
lods
outsb
sub
andb
jp
mov
add
jbe
lcall
push
add
add
movsl
mov
lret
clc
sbb
adc
mov
and
in
jnp
push
pusha
push
push
sub
jmp
fstpl
adc
jns
ret
inc
leave
js
or
mov
sbb
daa
decl
inc
addb
pop
mov
xor
dec
or
adc
add
lds
out
xchg
lods
rclb
sub
lock
je
sub
ret
sub
or
push
jnp
popa
sahf
int
fdivrl
lods
xor
pushf
sbb
push
push
push
jecxz
sbb
subl
mov
insb
sbb
or
add
sub
mov
loope
inc
jl
xor
mov
sbb
and
mov
mov
push
add
outsb
xchg
mov
outsl
in
mov
iret
dec
inc
ljmp
mov
add
cmc
shrb
mov
push
stos
add
mov
cwtl
mov
loopne
subb
dec
add
or
cwtl
or
add
inc
mov
add
arpl
popa
jecxz
ss
loope
movsb
push
pop
int3
jbe
movsl
xor
add
adc
inc
adc
dec
inc
out
add
adc
mov
and
lds
xchg
in
in
int3
add
or
add
aam
int3
mov
add
cmp
jp
adc
and
add
mov
xchg
and
pop
rolb
int
dec
add
mov
inc
addb
jo
inc
pop
and
mov
xchg
add
dec
fists
movsl
mov
dec
add
ret
cld
xor
inc
mov
fstpt
mov
jae
popf
sub
and
fsts
dec
idivb
mov
jbe
dec
xchg
sahf
roll
or
data16
loop
loopne
ja
adc
shlb
xorb
fdivp
or
mov
ror
orl
loope
adc
mov
xorl
pop
xchg
jnp
imul
sar
or
dec
xchg
mov
pop
mov
cwtl
add
sahf
ret
mov
cmc
dec
jns
sbb
nop
pusha
add
punpckhdq
jns
jo
jp
rolb
or
test
in
push
lcall
shr
movsl
push
aaa
mov
inc
xchg
and
add
outsb
lret
jb
fadds
xor
in
or
adc
sbb
xchg
push
cs
dec
adc
pop
cmpsl
inc
in
dec
and
add
inc
inc
sbb
add
mov
into
add
lret
lods
or
add
sub
xchg
shl
ja
jecxz
dec
jl
les
mov
jmp
dec
mov
inc
mov
testl
rcll
push
add
mov
ss
sub
rol
xchg
xor
sub
test
mov
imul
sub
push
test
push
roll
or
andb
iret
cwtl
movsb
add
mov
pop
movsb
adc
mov
cwtl
xor
scas
inc
dec
mov
adc
and
dec
fcompl
xor
xchg
sub
popf
cmp
in
jmp
sbb
test
into
mov
mov
jp
insl
push
aas
xor
daa
call
add
mov
adc
mov
ja
loop
dec
stc
insb
shlb
xor
add
jnp
mov
outsl
push
mov
cld
pop
aas
sbb
sbb
push
mov
imul
add
or
xlat
jge
dec
call
ds
ljmp
jbe
fsubl
or
xchg
pop
xor
clc
dec
pop
dec
lds
mov
mov
or
xlat
push
cmpsl
add
fimull
inc
sub
rcll
test
mov
adc
testb
mov
push
sbb
enter
add
xor
lret
push
cmpsb
pop
push
je
sbb
xchg
and
pusha
into
gs
xor
add
pop
cmp
cmpb
aaa
stos
xor
add
add
popa
test
add
ficoms
xchg
xchg
shll
xchg
orb
sbbb
lret
mov
pop
addr16
dec
push
jmp
loopne
and
mov
xor
xor
mov
cmp
mov
add
add
inc
out
loope
js
fadd
les
sub
lea
push
inc
push
flds
add
and
push
or
dec
aas
sbb
sbb
test
imul
cld
xchg
mov
hlt
or
add
mov
ret
fstpt
push
sbb
int
notl
sbb
aad
in
into
rorl
and
movsb
mov
mov
lahf
sbb
cmp
dec
push
test
mov
or
pop
pop
cmc
fdivl
les
jbe
or
aaa
mov
flds
add
mov
aad
pop
sbbl
movsb
sbb
mov
adc
pusha
add
arpl
add
adc
cwtl
cmpsb
mov
stc
cmp
xor
or
ret
mov
mov
push
mov
sbb
push
js
inc
int3
xorl
fwait
jns
push
add
aas
in
adc
cmpl
mov
mov
cli
dec
jecxz
repz
add
inc
bound
stos
adc
inc
xchg
cli
adc
or
xchg
les
test
inc
or
data16
bound
pop
xchg
test
and
xchg
outsl
and
add
ficompl
hlt
add
sub
int3
xchg
sbb
sbb
add
inc
ret
xchg
aam
adc
shll
arpl
mov
inc
adc
ficoml
mov
aam
sbb
push
fs
enter
call
call
bound
xchg
dec
stc
inc
mov
adc
xor
dec
jmp
pop
es
cmp
mov
sub
cmp
push
inc
repnz
push
cmp
sub
mov
loop
cmp
test
mov
mov
add
inc
aam
std
add
aaa
inc
inc
cmpsb
xorb
xchg
sarb
push
mov
sbb
mov
mov
add
cmp
into
adc
insb
shlb
aas
out
xor
mov
jne
pop
mov
mov
xchg
push
sbb
enter
loopne
cmp
jno
mov
aam
cmp
sub
xor
xchg
sbb
adc
rolb
jnp
sbb
hlt
incb
imul
popa
xor
insb
lods
xchg
stc
and
pop
enter
mov
sub
sbb
add
in
xchg
pop
dec
sbb
jno
xorl
jns
out
enter
fwait
add
sbb
pop
out
inc
jl
xor
xor
mov
test
outsb
or
nop
enter
mov
sbb
add
or
aas
loopne
in
cmp
mov
push
fwait
mov
mov
add
push
mov
hlt
add
rcrb
sbb
push
mov
shll
sbb
leave
andl
sahf
inc
sub
mov
adc
lds
jo
fldcw
inc
cmpb
lret
jg
add
or
adcb
inc
and
popa
and
loope
pushf
clc
jmp
xor
jne
push
or
insb
inc
mov
add
mov
mov
test
pop
or
pusha
sub
adc
or
or
jb
xchg
jnp
and
out
inc
call
xor
rcrl
sub
into
add
lock
pop
fstpl
xchg
shl
sub
and
add
fpatan
imul
cwtl
shlb
hlt
inc
clc
add
divb
add
in
xchg
sub
mov
add
mov
sbbb
add
and
cmp
cmpsb
lret
dec
add
stos
and
out
cld
adc
mov
push
or
cwtl
fsubs
mov
dec
xor
in
mov
cmpsb
adc
ds
push
ljmp
xchg
pop
loop
xchg
jne
or
inc
and
andl
mov
or
sub
lcall
mov
jmp
nopl
stc
rorb
cld
out
aad
or
sbb
cmpsl
and
movsl
pop
inc
pop
lcall
jae
cmc
mov
scas
or
lds
fdivrl
mov
xor
adc
movsb
in
and
xor
push
push
mov
shrb
pop
nop
inc
inc
lahf
das
jl
xor
mov
test
add
inc
in
jne
cmpsb
and
xchg
jl
dec
mov
aad
push
jb
cltd
xor
cmpsb
mov
jecxz
xchg
arpl
fadds
and
xor
pop
inc
and
xchg
xor
mov
xchg
movsb
mov
addb
pop
dec
out
lea
add
xchg
pusha
add
sbb
mov
jb
and
add
sti
mov
popf
arpl
popa
es
sbb
mov
repz
int3
popa
cmp
mov
call
pop
adc
push
fs
hlt
rclb
ss
roll
sbb
add
add
sub
xchg
stc
mov
adc
fmull
mov
sahf
popa
je
mov
inc
and
pop
jo
cmp
sub
adc
imulb
repnz
add
and
sbbb
inc
xchg
ljmp
or
sub
mov
and
adcb
adc
es
mov
popa
in
mov
push
out
leave
adcb
lea
les
movsl
push
loopne
mov
inc
mov
jb
push
loopne
add
xchg
loope
pushf
cltd
mov
mov
inc
daa
aam
call
ds
in
mov
adc
addr16
int3
mov
adc
invd
mov
sub
adcb
mov
cmp
ror
sub
sbb
pusha
pop
clc
js
add
call
sahf
add
mov
prefetchnta
jns
sub
pop
xorb
sbb
mov
test
lea
push
adcb
rep
push
in
pop
cmove
cmp
outsl
cmp
add
jbe
lahf
add
sub
ret
aas
loop
popf
xorl
and
jge
in
sbb
mov
push
ret
or
imul
adc
insl
jnp
mov
and
roll
in
xor
icebp
adc
pop
adc
mov
xchg
xlat
mov
xor
push
imul
idiv
dec
push
lds
roll
stc
inc
js
push
xor
adc
stos
adc
sbb
cmp
leave
incb
sbb
pop
add
push
adc
lds
adc
xchg
xchg
stc
inc
inc
cmp
es
or
mov
addl
outsb
fwait
mov
sub
frstor
into
cmp
push
sub
push
add
inc
lcall
frstor
lahf
movsl
sbb
shlb
push
insl
popa
mulb
add
test
es
ficompl
inc
loope
add
in
or
mov
ja
aam
cltd
push
int3
inc
adc
xchg
push
loopne
es
bound
stc
mov
cmp
add
mov
sub
and
fisubl
and
dec
fisubrs
mov
in
stos
add
rcrl
dec
jecxz
and
dec
sub
jp
xchg
dec
xor
mov
aam
cmp
lock
add
aad
sbb
andb
mov
push
add
sbb
dec
es
pop
mov
and
adc
dec
mov
sbb
mov
int
pop
adc
dec
push
push
in
push
mov
mov
jns
shl
decb
loope
dec
jg
jg
xor
xchg
push
ljmp
add
mov
sub
add
mov
outsb
inc
or
mov
inc
lods
cwtl
inc
lds
xorb
scas
stos
sub
gs
mov
pushf
test
adc
mov
pop
add
scas
iret
and
xchg
push
or
lock
add
and
push
add
in
inc
or
outsb
sbbl
out
mov
inc
subb
movsb
inc
xor
mov
cmp
dec
dec
xchg
test
xchg
leave
or
out
add
test
lret
push
movsb
sahf
lahf
xor
pusha
mov
lock
add
xor
lods
adc
cmpsl
jle
or
pop
mov
dec
push
aam
mov
andb
and
loope
scas
inc
lahf
cmpsl
call
sbb
daa
jb
cltd
fs
inc
enter
sbb
daa
loopne
add
xchg
mov
popf
lds
xchg
lahf
repz
lock
nop
call
loopne
cltd
sbb
je
repnz
subps
push
ret
lods
cmp
mov
out
add
pop
push
pop
scas
aas
or
adc
dec
adc
xchg
clc
cmp
imul
and
ret
sub
mov
lcall
test
cmpsb
push
inc
mov
dec
pop
cs
in
or
adc
imul
mov
xlat
inc
push
or
push
mov
fsubrs
sbb
adc
icebp
jmp
mov
les
inc
shlb
popf
pop
xor
jne
fldl
xchg
xor
idiv
mov
mov
fsubs
lock
or
lret
adc
add
or
mov
sub
cmp
faddl
lahf
push
add
xor
jmp
fwait
or
hlt
or
mov
mov
icebp
and
adc
add
mov
and
xchg
add
xchg
sbb
fs
mov
xchg
les
xchg
add
fimuls
push
int3
dec
push
loope
jmp
lds
mov
repnz
ror
imul
pop
out
cwtl
and
and
pop
add
or
cli
in
hlt
shrl
adc
add
cltd
cwtl
movsb
int3
cmp
add
aad
or
add
mov
dec
imul
clc
xchg
sbb
or
dec
sbb
jge
in
lds
xchg
jg
sbb
ret
out
daa
rdtsc
sbb
mov
jns
mov
mov
adc
rorb
cld
sub
or
addb
fldcw
insl
stos
lock
xor
push
mov
xchg
and
push
nop
pusha
or
add
stc
push
lcall
xor
or
call
add
inc
pop
dec
adc
mov
aas
mov
sub
push
mov
or
jae
imulb
sbb
call
push
inc
in
sbb
push
and
ja
xchg
mov
inc
fildll
dec
xor
orl
jo
sbb
mov
outsl
jge
nop
push
fwait
cwtl
add
lahf
ficomps
aam
xor
fisubrl
pop
cmp
pcmpeqb
cmp
shlb
aam
xchg
dec
adc
or
adc
ficoml
call
xchg
out
push
jae
shll
or
mov
jmp
enter
nop
inc
or
aam
out
and
mov
add
cmp
sub
fwait
cmpsb
pop
daa
jg
scas
call
sbb
push
adc
int3
in
sub
sub
les
cwtl
mov
les
or
push
jle
jecxz
add
xchg
xchg
hlt
xor
inc
pop
add
sbb
enter
sbb
jbe
adc
add
mov
xor
xor
mov
sbb
add
push
lret
cs
stc
jl
pushf
sub
inc
xchg
push
adc
data16
leave
js
pop
les
aaa
and
sub
add
jmp
out
repz
mov
add
dec
mov
data16
mov
cltd
add
subb
and
and
int
ret
shl
dec
ret
mov
xchg
xchg
pop
mov
push
dec
push
test
orl
cmp
add
lods
movl
cmp
pop
push
nop
adc
push
add
and
pop
loope
pusha
xchg
mov
adc
jo
dec
mov
add
aas
push
inc
rcr
mov
pusha
cmp
test
pop
cmp
mov
add
out
pop
cli
xchg
add
in
movsb
dec
stos
cld
adc
stc
inc
or
push
mov
cmp
inc
cld
dec
addl
cs
xor
sub
xchg
lock
sbb
daa
push
cmp
test
in
push
xor
sbb
mov
js
add
xchg
push
pop
mov
sub
push
scas
jo
add
addr16
jge
sti
roll
in
ret
and
inc
xchg
divl
dec
push
inc
mov
arpl
shrb
push
cmp
cmc
mov
inc
mov
xor
add
sub
mov
mov
xchg
sub
iret
cmpsl
mov
mov
cs
pop
nop
pusha
inc
cmpsb
jo
mov
push
loopne
pop
or
push
lods
add
dec
xor
ds
push
or
movsb
filds
push
add
aas
mov
mov
mov
or
jbe
or
in
add
push
push
xchg
mov
cmp
int3
add
dec
cmpsl
sbb
je
in
inc
in
push
mov
ret
add
mov
sub
hlt
jbe
xor
outsb
xor
pop
adcb
or
add
scas
xor
or
jne
push
xor
pop
testl
mov
repz
hlt
fcmovnbe
outsb
pop
add
cmpsl
mov
dec
faddl
mov
add
shl
and
and
call
inc
lods
adc
jbe
aad
sub
inc
div
fsubp
lret
xchg
add
bound
mov
aas
cmp
add
jp
pop
popf
cmc
adc
add
pop
lea
les
push
lods
xor
cmp
add
arpl
icebp
lahf
and
mov
pusha
sbbl
cld
in
jns
add
mov
add
push
outsb
frndint
jle
sbb
mov
testl
mov
popa
cmp
pop
dec
adc
lahf
sbb
mov
push
add
jp
inc
outsb
lods
inc
xchg
lcall
test
adc
test
mov
gs
lock
jmp
adc
scas
pop
add
xlat
mov
jae
aas
inc
jnp
add
pop
int3
rcrb
add
mov
and
cmp
loope
out
lds
push
mov
loope
sbb
and
ffreep
add
ficomps
fdivrs
iret
lea
mov
mov
jno
shrb
test
push
or
cwtl
dec
repz
inc
adc
cmpsl
xor
mov
push
inc
xchg
mov
jle
adc
in
loopne
adc
add
or
mov
outsl
add
xchg
sti
or
pop
cmp
dec
or
push
inc
fstps
xor
sub
add
xor
sub
ret
sbb
cmp
mov
cli
lds
inc
incl
jle
and
adc
faddl
les
rolb
cli
xchg
xor
aaa
and
in
test
adc
cmp
cltd
inc
add
mov
pop
cmpb
das
dec
stc
shrb
jecxz
mov
sbb
icebp
xchg
in
loop
mov
inc
sub
js
adc
mov
inc
in
add
lcall
pop
je
xchg
push
roll
lret
sbb
xchg
add
or
addb
out
add
gs
dec
adc
or
and
stos
lahf
jge
loop
mov
mov
lods
loope
mov
inc
sbb
out
adc
sbb
mov
jno
fwait
shlb
dec
add
push
mov
lock
jo
inc
pusha
push
ljmp
lcall
popa
repnz
cmp
mul
aad
and
and
pop
push
lret
lcall
test
push
dec
mov
sbb
cmp
loope
mov
into
call
sub
and
mov
dec
or
mov
push
adc
jg
stos
aaa
mov
or
or
aas
push
bound
negl
ss
adc
cltd
cwtl
nop
dec
ret
les
dec
stc
ljmp
add
lret
std
pop
lds
add
xor
mov
aaa
sahf
add
shll
cmp
movaps
loope
xchg
mov
test
loope
mov
rorb
lock
push
fidivrs
push
mov
movaps
ss
push
aas
xor
pop
dec
mov
xlat
stos
lret
sub
xchg
enter
mov
mov
out
repnz
xor
cmpsl
inc
add
test
mov
jae
rorb
mov
add
cld
sub
loope
sbb
and
adc
lds
aas
aam
mov
push
add
andb
xor
jno
mulb
pop
fstl
in
push
hlt
add
cmpsl
aas
pop
int3
pop
add
jae
fdivs
nop
insb
add
add
jne
test
leave
testl
dec
cwtl
push
inc
shll
dec
mov
and
mov
test
adc
pushf
cmp
dec
add
or
movsb
or
inc
shrl
sti
push
xor
imul
pop
movsb
cli
dec
mov
dec
add
add
je
cli
repnz
add
imul
push
and
in
sbb
out
int
dec
add
cmpsl
xchg
push
mov
xor
pop
xchg
add
dec
add
pop
in
lods
insl
mov
push
lret
scas
sub
mov
orb
xor
add
xor
loop
adc
lea
sbb
nop
movsb
cwtl
adc
and
pop
xchg
cmp
loope
mov
jmp
and
or
push
popa
in
popa
sub
pop
and
shl
adcb
ljmp
inc
add
aam
push
adc
loopne
mov
xchg
decl
frstor
push
mov
dec
sbb
rcl
mov
cmp
popa
push
nop
push
inc
int
push
test
aas
nop
dec
jp
adc
ret
xor
mov
mov
sub
and
test
fldl
push
inc
sub
in
push
cmp
stos
arpl
add
sti
xchg
adc
push
in
out
add
add
pop
lea
pop
outsb
test
or
loopne
pop
popa
jo
inc
icebp
sbb
pushf
mov
js
add
jo
push
inc
xorb
lods
imulb
push
push
xor
jae
femms
aad
lds
lcall
dec
dec
adc
add
sub
shrl
dec
push
jp
push
push
add
in
dec
movsb
push
sub
pop
mov
sbb
movsb
push
push
add
testl
xchg
aas
mov
jl
andl
sbb
inc
pop
adc
aam
cmp
lcall
push
subl
stos
lahf
xchg
lock
sub
mov
xchg
xor
sbb
mov
add
loope
mov
rorl
xlat
add
out
mov
inc
xor
jo
or
inc
repz
inc
pop
lock
mov
adc
sub
xorl
les
les
arpl
push
pop
jno
mov
sahf
xor
loop
add
stos
mov
movsb
pop
adc
lea
xlat
pop
lcall
mov
mov
cmp
cs
dec
mov
cmp
add
fsts
xchg
fisttpl
cmp
loop
mov
rcll
jns
arpl
and
popa
xchg
nop
add
lret
or
pop
cmp
repnz
add
jl
pusha
hlt
push
inc
xlat
sbb
cmp
test
dec
and
fisttps
ret
loope
xor
sbb
mov
faddl
sub
adc
add
ja
cmpb
fistps
cmp
inc
out
lret
and
fsubrs
loope
push
sub
mov
adc
jge
cmp
jmp
ds
xchg
divl
cwtl
mov
cwtl
push
mov
addl
ljmp
roll
lods
mov
xchg
je
pop
add
hlt
jecxz
inc
adcb
aaa
sub
js
xchg
int
sarb
adc
xorb
mov
push
rclb
popa
sbb
pop
xchg
jl
bound
testb
mov
xchg
adc
push
pop
jnp
add
out
sti
dec
test
dec
cmp
pop
cwtl
xorb
mov
xor
push
inc
xor
cmp
stos
mov
cwtl
xchg
or
loop
int
cs
mov
or
or
lea
aam
orb
daa
aaa
xchg
mov
pop
dec
push
les
adc
pop
add
and
push
lret
or
stos
loope
bound
cmp
and
lock
sbb
div
xchg
xchg
incl
or
popa
into
cld
int
push
arpl
push
add
and
cmpl
dec
push
outsb
imul
insl
jl
pop
mov
xchg
add
mov
adc
out
jns
or
add
pop
mov
and
lret
jl
jmp
loope
adc
add
push
clc
lock
add
sbb
in
sbb
sub
imul
mov
mov
nop
mov
add
inc
in
dec
inc
pop
push
xchg
adc
add
xchg
and
add
mov
jge
add
jle
jmp
mov
inc
pop
push
add
push
test
pop
cmp
fsubp
add
xlat
pusha
xchg
aam
push
pushf
jo
sub
addb
test
xchg
xor
arpl
jns
add
hlt
and
cmp
and
cbtw
push
mov
in
or
push
pop
jecxz
int
pusha
leave
mov
icebp
cmp
mov
or
and
not
cmp
push
dec
push
push
pop
add
mull
mov
push
add
sub
shl
loop
inc
lock
sub
mov
pop
push
mov
sub
cmp
mov
dec
mov
xchg
mov
jb
cltd
jo
add
call
add
pop
cmp
push
and
sbb
jg
add
outsl
dec
scas
mov
sbb
push
jo
sub
and
insb
imul
push
mov
push
dec
mov
lods
add
cmpsl
cmpl
addr16
jl
dec
ficoms
pusha
xlat
sub
arpl
dec
and
push
rolb
inc
loopne
jle
mov
icebp
jo
push
adcb
movsl
sub
pop
sub
mov
push
add
cwtl
popa
loop
sbb
cmp
dec
mov
int
cltd
add
seta
stc
mov
mov
xchg
push
fs
dec
adc
fiaddl
mov
adc
jno
lahf
or
arpl
cmp
adc
mov
outsl
ret
lahf
mov
xchg
pop
mov
jo
pop
mov
jmp
jnp
push
xchg
scas
push
lods
mov
jno
popw
aad
or
mov
push
or
sub
in
loope
xchg
orb
pop
mov
in
shrb
mov
js
aad
mov
cmp
ds
push
test
adc
jo
arpl
or
rol
sbb
mov
aad
mov
lcall
orl
rcr
add
add
cmc
sub
nop
mov
and
dec
push
nop
or
add
jnp
cmp
repnz
popa
jp
rcl
sub
dec
adc
loope
mov
scas
ja
sbb
add
popa
enter
rcrb
imul
inc
sbb
sub
mov
adc
das
lcall
rorl
sub
lret
mov
mov
lahf
mov
loop
dec
sbb
repz
add
rcll
fsub
rcll
gs
xor
sti
fists
jl
cmp
inc
adc
xchg
adc
in
and
mov
andl
and
je
and
clc
mov
out
in
mov
test
aam
mov
jl
cld
cmpsb
add
stc
jae
fisubs
in
mov
cs
xlat
jne
push
test
in
gs
bound
rorb
xorl
dec
cmp
repnz
adc
sbb
clc
pusha
dec
fnstenv
mov
mov
lret
mov
or
orb
adc
dec
fs
lods
mov
dec
push
mov
pop
adc
rolb
dec
andb
addr16
push
push
sbbb
sbb
roll
add
in
mov
dec
in
sbb
add
jmp
shlb
adc
stos
adcb
loope
add
mov
stc
fsubs
mov
cmpsl
lret
leave
in
cs
int3
push
ds
test
xchg
add
jp
cld
sbb
test
in
dec
in
stos
pop
or
mov
pop
inc
mov
rclb
pop
and
rolb
sub
inc
in
leave
negb
loopne
xor
xor
and
and
adc
imul
rolb
push
and
xor
movswl
arpl
or
clc
and
jne
and
xchg
lock
pop
sub
add
adc
xchg
mov
xor
xor
adc
adc
mov
mov
or
popa
adc
hlt
loop
cmpb
mov
jnp
sbb
imul
xchg
js
push
je
cmp
xchg
nop
mov
cmp
dec
les
xlat
adc
cmpsl
es
sbbb
push
dec
iret
and
adc
xor
into
mov
out
push
push
lock
pop
cmc
pop
or
push
sub
inc
aas
sub
sbb
add
mov
jns,pn
add
fisubl
imul
pop
dec
test
xorl
adc
push
mov
xor
sub
xchg
popa
enter
fadds
mov
add
fstl
out
add
jae
inc
pop
xlat
or
push
rclb
jne
cs
pushf
pusha
mov
rorl
jo
adc
mov
add
xlat
fsubl
rorl
icebp
loopne
mov
add
in
out
leave
cmpsl
and
cmp
inc
mov
jl
shld
sti
pusha
cmp
push
inc
adc
inc
cmp
das
movsb
xor
sbb
cmp
sbb
fistpl
or
rclb
push
dec
push
pop
mov
test
insl
and
ds
or
imul
mov
jne
popa
mov
jo
adc
pop
jp
outsl
mov
add
xchg
sub
dec
rol
add
data16
dec
sub
mov
jl
mov
add
or
stos
gs
daa
or
or
xchg
push
cli
dec
lock
data16
xlat
lock
fwait
xchg
add
xor
mov
data16
mov
in
xlat
adc
movsl
add
xor
imul
jb
js
inc
sub
ret
inc
dec
in
add
insb
push
jmp
es
movsl
inc
clc
loope
mov
push
and
lock
fstp
xchg
sub
loop
inc
push
lcall
stos
sbbl
popa
stos
pop
lret
pushf
xchg
and
mov
cmp
cmp
jno
and
hlt
add
add
mov
mov
mov
scas
xor
cmp
and
add
sti
mov
or
pop
pop
xchg
sbb
les
adc
adc
or
push
push
repnz
pusha
mov
xchg
fmull
or
mov
sbb
data16
add
hlt
or
sti
fs
sbb
cmc
lahf
imul
xor
clc
and
push
lcall
pop
jae
imulb
dec
movsb
sbb
adc
or
or
add
pop
fstpt
in
fwait
popf
and
and
bound
dec
lds
fildl
add
iret
cld
movsl
lahf
aas
jmp
mov
or
adc
or
nop
test
sbb
jne
cmpl
loope
pop
cld
loope
or
sub
sbb
shll
loopne
adc
arpl
and
lret
push
cmp
cmp
mov
jmp
bound
ficompl
jo
sbb
scas
xor
or
loope
mov
jnp
dec
das
mov
clc
cmp
mov
call
add
cmp
sbb
add
clc
cmpsl
adc
lcall
dec
jl
mov
jo
jecxz
out
or
add
insb
in
pop
mov
shll
les
or
mov
inc
pop
pop
jns
dec
daa
sub
dec
add
cmp
sbb
lea
pop
loope
popa
sbb
jns
cwtl
mov
fbstp
cmp
mov
std
pop
dec
add
pushf
push
cmp
mov
popa
int3
dec
sub
jecxz
sbb
les
mov
mov
add
scas
loope
loopne
mov
push
mov
ja
inc
cmp
inc
arpl
in
subb
ret
dec
das
lods
ds
lock
mov
hlt
jno
add
test
adc
inc
push
popa
xchg
fwait
das
or
sbb
insb
mov
sbb
or
push
fidivl
sbb
xchg
push
fsubs
mov
cltd
jno
cld
cmpsl
data16
mov
or
mov
pop
fdivrs
test
jno
pop
cmp
int
cltd
add
gs
push
pop
xchg
or
movsl
inc
fmull
jbe
pop
cmc
or
mov
rolb
leave
sbb
cwtl
mov
and
or
sbb
andb
gs
out
mov
add
cmp
cmpsb
or
and
xor
cmp
sub
mov
adc
xchg
dec
sub
cmp
add
rclb
xor
lods
loope
add
cmp
inc
sub
jg
add
stos
pop
mov
es
outsl
mov
mov
lret
ffree
fmuls
push
js
das
mov
jbe
adc
add
sar
sbb
aam
or
or
shll
add
inc
loope
lea
ret
or
or
pop
sbb
xchg
dec
xchg
dec
fmul
inc
fs
or
pop
dec
leave
mov
popa
adc
xchg
adc
fsubl
test
lcall
and
sub
sarl
ds
sarb
dec
lock
pop
and
add
es
cmpsl
add
dec
fwait
xor
jge
lods
add
arpl
dec
movsb
movsb
inc
pop
inc
inc
lahf
or
jb
add
lea
in
out
inc
pop
or
pop
or
push
lods
dec
sarb
arpl
lds
lock
rclb
decl
mov
adc
lock
in
jecxz
pop
cwtl
lcall
mov
rolb
adc
inc
mov
test
test
popa
pop
cmp
push
sub
add
sarb
jle
cmp
aam
nop
sbbb
and
stc
xchg
push
or
and
lods
push
mov
fildl
mov
outsl
xchg
popf
clc
cmpsb
mov
cmp
cmpb
inc
fdivl
ja
jae
js
and
jl
movsb
popa
scas
mov
loop
add
jmp
mov
inc
add
popa
imul
and
inc
sub
loop
bound
lret
mov
or
inc
ljmp
sub
roll
psadbw
clc
mov
pop
enter
push
mov
ds
fistl
pop
jl
push
into
and
mov
sub
and
sub
add
std
jns
imul
inc
xlat
mov
popa
or
mov
mov
fmul
inc
loope
enter
sub
push
movsl
dec
add
or
xchg
jbe
cmp
pop
nop
mov
cmp
add
sbb
add
push
outsl
xor
xchg
enter
jo
fcmovne
cmp
or
bound
hlt
or
stc
lock
adc
push
loop
inc
push
or
pop
shlb
les
pop
clc
sub
or
mov
outsb
outsb
out
jl
dec
lea
mov
cwtl
dec
outsb
and
shrl
adc
aam
js
je
adc
add
xchg
rep
pop
mov
adc
testl
das
pop
sub
inc
popf
sbbb
nop
js
sub
add
cmp
js
mov
and
adc
inc
in
xor
fldl
and
test
cltd
xor
rcrl
arpl
pusha
js
jle
push
cmp
add
loop
cltd
mov
aaa
mov
cld
das
in
mov
jno
pop
push
adc
inc
hlt
mov
dec
enter
fdivrs
mov
ret
pop
iret
sub
lea
add
es
cli
enter
pop
push
add
lret
es
sbb
jecxz
mov
rcll
xlat
cmp
push
loopne
jne
sub
inc
cltd
gs
push
mov
cmp
sub
mov
adc
and
cmpsb
pushf
jnp
inc
jmp
cmp
push
pop
jno
pop
loop
inc
pop
adc
mov
jp
in
and
test
adc
adc
popf
cmp
shlb
push
ds
adc
add
mov
shl
adc
pop
add
sub
mov
addb
rolb
test
mov
cmp
add
fsub
xchg
xor
pop
fwait
ret
push
and
mov
inc
mov
imul
les
shll
sbb
out
orl
call
dec
or
cmp
out
test
push
add
mov
inc
out
insl
lods
insb
add
in
cmp
fs
aad
movsb
imul
das
shrb
add
out
add
sub
mov
mov
cld
sarl
adc
add
or
add
lret
lds
pop
scas
mov
pushf
cmp
mov
mov
aaa
sbb
add
xchg
dec
dec
and
dec
movsb
or
adc
push
gs
mov
lcall
lock
dec
sub
push
fcoms
sub
orb
mov
das
nop
mov
pop
add
xchg
rolb
stos
xchg
push
aaa
mov
in
test
cmp
or
or
mov
xlat
fstp
and
mov
mov
xchg
push
mov
daa
in
xor
add
sbb
mov
fwait
jne
and
pop
push
mov
inc
out
notb
pop
stc
mov
dec
xchg
cli
add
mov
jb
out
mov
add
add
or
ret
in
test
fmul
xlat
or
sbb
adc
mov
jg
pop
adc
and
rorb
andb
add
out
mov
dec
adc
dec
dec
int3
pop
adc
and
pop
push
adc
dec
xor
adc
int
and
mov
test
inc
or
dec
add
sub
enter
and
mov
dec
fdivrs
pop
and
stc
jge
das
dec
lcall
enter
push
arpl
pop
pop
rclb
mov
xor
inc
es
fsubl
cmc
sbbl
lahf
adcb
and
xor
rolb
pop
sbb
xchg
push
mov
cmp
aam
movsl
ds
scas
adc
cmp
call
je
aaa
or
fnstcw
in
sub
sbb
test
xor
decl
std
loopne
xchg
sti
cltd
cmp
xchg
cld
mov
fmuls
pop
or
push
xor
adc
mov
repz
dec
movsb
adc
hlt
add
push
pop
add
xchg
or
cmpl
sbb
push
js
cmc
adc
movsb
in
xor
push
add
lds
add
or
sbb
scas
rcr
add
test
mov
lahf
mov
call
shll
les
dec
mov
loopne
pop
int
add
add
aam
mov
adc
lcall
add
inc
sub
cmp
daa
cmp
adc
mov
xchg
mov
dec
jmp
and
pusha
lock
pop
push
ret
xlat
push
int
xor
mov
sbb
pop
adc
and
lea
hlt
add
inc
jb
les
out
push
pop
sub
lds
xchg
loopne
push
insb
mov
mov
push
pop
jmp
pushf
in
dec
xlat
sbbl
int
dec
stos
sbbb
rcl
cmp
loopne
adc
pop
adc
push
sbb
divl
dec
add
sub
add
jnp
ret
sbb
cmp
test
lods
enter
sti
mov
inc
xor
sub
aam
lea
cmp
pop
add
push
mov
push
sub
xor
cmp
cwtl
addb
pop
fadds
les
testl
mov
addl
mov
in
inc
ds
loope
xor
loopne
andl
pop
xchg
dec
or
xor
jecxz
sub
add
leave
aaa
dec
cmp
dec
adc
and
jle
sub
jecxz
sahf
sarb
add
movsb
mov
cmp
push
pop
adc
ds
add
lock
sub
adc
mov
fs
pop
or
outsb
pop
mov
loopne
cmc
popa
retw
stc
insl
cmp
push
adcl
pusha
inc
cmpsb
dec
add
jbe
shll
or
fsubrl
pop
cmp
js
xchg
push
in
sub
movsb
mull
xlat
add
push
inc
dec
sbb
push
xchg
mov
add
pushf
into
mov
cmc
add
in
rcrl
call
mov
lock
movl
popa
out
fs
jnp
loopne
arpl
fptan
stc
call
inc
or
mov
cmp
sbb
andb
addps
lock
add
sbb
push
outsb
add
adcb
xorb
mov
xchg
xchg
loope
dec
int3
or
hlt
add
fwait
xlat
sub
pop
and
popa
aam
sub
call
jnp
sub
insl
and
pushf
mov
add
test
and
sub
pop
fadds
negb
stc
adc
add
lds
mov
jno
les
mov
mov
mov
test
xor
icebp
leave
push
inc
add
add
push
loopne
leave
inc
xchg
mov
adc
or
dec
les
and
gs
popa
enter
push
sub
add
roll
and
add
std
push
jb
sub
inc
test
stos
mov
int
inc
mov
push
stos
hlt
add
add
add
mov
sti
jecxz
les
dec
add
and
inc
xor
pop
cmp
enter
pop
mov
stos
sub
lcall
inc
dec
imul
xchg
mov
cmp
arpl
add
fadds
push
add
outsb
and
mov
inc
jbe
leave
xchg
scas
cmp
xor
push
gs
mov
xchg
xchg
push
notb
push
roll
ljmp
dec
inc
andb
or
add
mov
cmp
cld
or
fwait
bound
push
mov
sub
adc
sbb
mov
add
inc
sub
sarl
je
outsl
xchg
addb
dec
imul
or
andnps
lock
mov
push
inc
pop
cmp
jne
aam
imul
adc
test
movsb
in
add
jl
cmp
fs
outsb
mov
mov
push
and
cltd
rclb
or
rcr
fwait
lea
jo
add
or
fists
rolb
aad
mov
ffree
jp
sar
es
sbb
mov
jge
sbb
imul
push
pop
frstpm(287
mov
adc
xchg
jl
mov
mov
jecxz
sub
rclb
cmpsl
cwtl
add
outsb
push
pop
jae
sbb
aaa
test
adc
pop
test
mov
xchg
mov
outsb
pop
add
lcall
or
xor
push
shll
lret
iret
sub
dec
inc
dec
loopne
test
daa
fcmovu
cmp
clc
mov
add
lcall
rcrl
inc
sub
pop
mov
add
mov
loopne
imul
das
pop
add
shrb
cltd
lea
add
clc
leave
or
in
cwtl
aas
aas
lods
lahf
adc
mov
xor
add
fstps
dec
inc
les
pop
adc
xor
pop
mov
shl
shrb
cld
rcll
xchg
xchg
pushf
jl
jnp
fdivl
push
xchg
inc
ljmp
mov
shl
fcomp
icebp
add
sbb
pop
fstl
dec
xchg
inc
pop
cmp
mov
rcrb
adc
fdivr
mov
sub
pop
cmpsl
inc
loopne
mov
adc
lcall
je
jbe
mov
cmp
sarb
cmp
push
movsb
in
add
lods
aaa
mov
je
xchg
add
jecxz
add
sub
enter
test
xchg
jp
jo
les
adc
loope
push
lock
lock
jo
and
loop
push
divl
jge
lret
push
pop
cmp
js
lock
cli
jo
sarb
mov
test
sub
in
or
dec
inc
andb
cmpl
mov
fisubrs
add
or
mov
adc
dec
pextrw
adc
outsl
and
cmp
stos
rcrb
add
xchg
sub
push
mov
sbb
mov
lock
and
je
mov
mov
rclb
add
or
xchg
pop
adc
add
inc
sti
frstor
movsb
std
ror
cld
mov
add
mov
add
lea
or
cmp
les
test
pop
mov
clc
push
mov
cmp
and
loopne
dec
insl
cmp
inc
push
inc
lods
loope
xchg
dec
jne
cs
call
pop
in
aam
test
push
ja
sbb
sbb
je
sub
or
pop
addb
popa
mov
dec
cld
loopne
rcrl
mov
or
add
lea
or
pop
dec
mov
sbb
and
cmpsl
dec
fs
mov
add
lea
sbb
pop
popa
inc
add
add
mov
inc
imul
stos
mov
clc
arpl
mov
cwtl
cwtl
inc
popa
sub
mov
mov
sub
cmp
add
add
adc
loope
sti
subb
mov
cwtl
ror
add
xchg
pop
popa
out
xchg
cli
dec
sbb
jl
lahf
mov
rclb
mov
adc
loop
les
stos
and
out
cli
push
add
in
nop
sbb
pop
cmp
loope
int3
lock
pop
add
std
adc
mov
insl
xor
or
add
cmp
mov
add
adc
xchg
xchg
push
mov
rcl
mov
stos
sub
sub
ds
fisttpl
repz
jecxz
mulb
loop
push
mov
mov
jge
enter
add
jns
cmp
adc
aad
icebp
push
mov
subl
shll
lock
cmp
nop
xchg
fnstcw
int
push
inc
data16
sbb
in
push
and
and
movswl
or
inc
dec
aaa
out
sub
das
inc
mov
push
scas
call
dec
pushfw
dec
adc
sbbb
pop
mov
jge
movsb
cwtl
test
fidivrs
pop
call
pusha
mov
movsb
add
subb
mov
sti
mov
sbb
add
mov
mov
sbb
mov
fisubs
jnp
xchg
or
push
mov
mov
jg
rol
and
pusha
xchg
call
loopne
sbb
pop
aaa
xor
xchg
stc
dec
test
sbb
cli
dec
mov
addr16
push
lcall
mov
cmc
sbb
xor
mov
add
dec
mov
mov
inc
mov
lret
or
push
jbe
sbb
sub
lret
shrb
dec
pop
pusha
dec
inc
pop
mov
xchg
cmp
ja
xor
sbb
pushf
mov
push
pop
push
dec
mov
adc
ficoml
rorl
push
sbb
sub
cmp
push
xchg
pop
ss
push
aaa
inc
pop
inc
lods
add
call
loope
xchg
mov
sub
xchg
adc
add
in
popf
nop
pop
xor
jo
pop
adc
mov
enter
dec
and
fisubrl
test
aam
and
pop
jecxz
push
fs
sbb
cmp
mov
fistps
push
dec
mov
lds
out
sub
rclb
mov
jne
mov
sbb
xchg
push
adc
lahf
adc
int3
enter
stc
clc
or
mov
fldcw
mov
mov
lcall
jle
adc
lods
test
pop
aas
cld
add
xor
adc
lahf
push
nop
mov
aaa
lcall
inc
mov
mov
add
jnp
add
mov
push
jle
stos
je
das
push
push
xor
negb
add
fmul
adc
cmp
sti
popf
clc
inc
dec
jle
bound
push
test
add
leave
jge
test
and
inc
pop
jbe
xchg
sbb
jg
and
hlt
pop
test
leave
iret
jns
push
cmp
rolb
shlb
jl
add
or
push
and
fmull
repz
cli
sti
pop
clc
jge
iret
push
fcompl
pusha
sbb
dec
or
and
sti
dec
add
mov
and
shll
or
nop
inc
adc
loope
insb
dec
mov
insb
test
and
add
sbb
inc
dec
or
xchg
cli
mov
lock
add
clc
inc
enter
or
xor
add
pop
lcall
sbb
dec
pusha
out
aad
aas
repnz
js
xchg
push
lock
stos
add
stc
fdivl
cld
cmpsb
in
jp
mov
icebp
in
cmp
arpl
aas
lods
mov
or
push
pop
push
or
std
mov
nop
and
sarl
mov
test
mov
jo
add
movsb
stc
xor
dec
rclb
adc
call
xchg
inc
lock
std
push
or
insl
push
lods
incl
movsl
inc
das
mov
hlt
sub
loope
sbb
cld
and
and
add
cltd
cmp
pop
bound
or
sbbb
or
lahf
shr
or
test
mov
adc
js
or
cmpl
incb
and
test
mov
mov
add
gs
movl
sbb
cmpsb
and
das
out
ficoms
ffree
cwtl
popa
or
push
mov
out
inc
pusha
inc
mov
daa
mov
add
div
cmc
cmpb
dec
xchg
clc
xchg
cli
pusha
fmuls
jo
add
fsubr
cwtl
mov
cli
fidivl
add
stos
std
cwtl
add
pop
adc
mov
pop
xchg
call
or
jmp
pop
lods
push
mov
fcompl
add
int
cmp
popf
stos
push
test
hlt
pushf
mov
outsl
xorl
push
cmp
dec
not
add
das
mov
adc
and
xor
pushf
dec
pop
popa
and
pusha
inc
xlat
or
xchg
inc
cs
add
mov
shlb
dec
loop
add
push
sbb
pop
cs
or
cmp
or
pop
dec
dec
mov
add
mov
ljmp
mov
sahf
sub
add
cmp
fisttps
cli
push
int3
jmp
repz
jle
popa
add
xchg
adc
add
pop
mov
mov
les
decl
pop
xchg
movsb
push
push
sbb
xchg
push
dec
jl
lock
shrb
ret
sbb
movsl
ret
ja
sub
pop
lfs
mov
mov
daa
sbb
jmp
xchg
das
pop
pop
push
mov
or
mov
ja
xchg
lock
add
and
xchg
inc
mov
clc
pop
adc
xor
and
sbb
push
inc
add
sarb
add
cmp
inc
int
cmp
xor
ljmp
sub
xor
add
out
mov
jbe
mov
push
sub
dec
or
pop
fstpt
movsb
push
cmp
aam
xor
clc
mov
xchg
sub
pop
xchg
push
loop
jnp
popa
sbb
das
jp
push
and
fwait
jne
sub
xor
icebp
les
roll
rcrb
add
jmp
lods
hlt
add
xchg
push
mov
push
mov
sub
popf
data16
icebp
js
test
iret
add
aam
jmp
fwait
call
adc
push
int
loope
mov
pop
jle
insl
pop
test
dec
xor
fwait
jg
in
jo
lcall
and
imul
cmpsl
and
fdivl
cmp
insb
data16
mov
and
push
sbbl
mov
and
inc
adc
ss
mov
fs
mov
add
sti
shrl
mov
popw
push
int
adc
mov
and
movsb
scas
cvttps2pi
jae
je
mov
sarb
mov
repz
sub
rcll
xchg
xor
setg
mov
mov
push
rolb
jecxz
outsl
adc
test
out
adc
dec
and
arpl
shlb
test
les
mov
test
jns
xchg
mov
add
mov
push
mov
xchg
loop
pushf
fwait
loop
jg
icebp
inc
pop
fsub
cmp
in
xchg
lds
and
add
mov
loop
mov
lock
cmc
loop
imul
sub
jne
lahf
adc
insl
add
in
xlat
or
clc
das
rolb
cmp
enter
adc
add
vmread
data16
jns
and
decb
int
das
and
pop
and
cmc
add
push
mov
mov
cmp
add
aaa
sbb
adc
push
adc
test
pop
or
int
sarb
pop
mov
pop
push
sbb
ljmp
imul
mov
dec
sahf
dec
mov
mov
js
lret
mov
movl
clc
push
lds
and
mov
xchg
mov
jb
push
cmpsl
push
mov
add
in
jl
adc
cmp
inc
clc
in
mov
lcall
je
adc
mov
add
aam
xchg
jecxz
lcall
add
add
push
xor
pop
cs
movsb
inc
test
fldt
cmpsb
call
pusha
loop
cmp
push
in
sbb
dec
stc
push
jne
jmp
xchg
test
adc
pop
add
sbb
cmpsb
jae
sbb
jae
adc
lds
dec
jb
add
pop
popa
mov
sub
pop
dec
add
fsubrs
sub
mov
sub
mov
sbb
clc
xchg
lds
add
inc
movsl
mov
out
ljmp
xlat
int
xor
inc
sub
pop
movsl
lret
pop
adc
inc
pop
and
adc
push
insb
mov
cmp
rclb
testb
into
mov
add
out
or
push
xlat
popa
sub
cli
inc
loopne
cs
cld
into
xchg
clc
lods
stos
xchg
faddl
pop
push
je
xor
push
movsb
inc
jne
mov
pop
and
dec
test
mov
or
push
sarl
push
pop
inc
and
sbbb
or
mov
adc
xor
sub
movsl
adcb
call
faddl
inc
mov
push
pand
mov
rorl
inc
adc
push
cmp
and
add
das
lahf
mov
sub
pop
add
ja
insb
cli
xchg
and
add
jno
inc
push
pop
inc
outsl
pop
fsubs
mov
test
push
call
or
cmp
mov
push
inc
inc
push
std
enter
repnz
mov
push
daa
notb
out
dec
or
mov
aam
add
pop
sub
stos
lahf
push
xchg
lock
mov
inc
xchg
in
outsl
push
push
stos
or
pop
inc
inc
adc
pop
and
and
mov
pop
jecxz
nop
pop
sahf
push
outsl
flds
jne
or
pop
add
cmp
sbb
fildl
lods
add
cltd
test
lahf
dec
outsl
enter
rcll
sub
sub
loope
add
lcall
inc
lea
xchg
insb
xchg
pop
loope
mov
cmp
sub
dec
outsl
mov
lock
add
jmp
cmp
push
sub
ss
adc
cmp
push
movb
loope
xchg
lcall
and
push
xchg
and
outsb
rolb
cmpb
neg
xor
push
inc
mov
aaa
add
adc
lret
insl
push
add
push
int
test
dec
jg
nop
or
sbb
xorl
aaa
pushf
addr16
das
dec
fnstcw
std
pop
or
mov
or
daa
xchg
inc
inc
mov
adc
nop
mov
stc
mov
iret
push
xchg
pop
mov
or
and
and
mov
outsb
setg
xchg
sarl
int
cmp
mov
xchg
mov
cmp
dec
xor
loopne
xchg
xor
xchg
andl
cmp
rcrb
xchg
xchg
dec
movsl
sti
mov
pop
sbb
push
out
js
add
test
icebp
or
pusha
lret
aad
xchg
add
fwait
idivb
xchg
sub
push
das
mov
pop
outsl
add
mov
push
popf
sahf
lret
mov
dec
ss
mov
jns
add
fimull
add
mov
lahf
xor
inc
and
pop
loopne
or
cmp
push
adc
and
mov
adc
adc
iret
test
and
icebp
dec
add
notl
push
into
xchg
lahf
inc
xchg
nop
add
addl
lahf
aad
sti
mov
add
into
mov
add
lds
pop
mov
and
mov
sub
aad
out
push
lds
jmp
sbb
push
sti
shrb
out
add
inc
std
dec
jp
shll
or
or
and
cs
jnp
add
loope
scas
fiadds
jne
hlt
xchg
xchg
xor
lock
mov
mov
loope
cwtl
mov
cmp
call
and
push
mov
popf
and
add
push
xchg
rolb
sub
mov
pop
mov
sbb
out
fdivl
xchg
push
loopne
fsubr
fldt
out
testl
push
and
subb
mov
add
inc
sbb
push
loopne
cli
out
sbb
xor
iret
add
jno
sbb
into
lahf
sahf
ret
dec
mov
sbb
or
in
ljmp
clc
and
je
push
jecxz
sbbb
inc
cwtl
xor
ds
cltd
sbb
jl
ss
xor
adc
insb
or
dec
xorl
cmp
imulb
nop
cwtl
sub
ss
movsl
sub
push
adc
sub
xorl
pop
xchg
xor
sbb
push
fcoms
decb
pop
sbb
dec
inc
xchg
movsl
in
lcall
push
clc
inc
movsb
es
addr16
and
adcl
adc
cwtl
add
and
inc
sbb
xchg
fs
aam
adc
sbb
xor
sbbb
cwtl
sub
xorl
loopne
sbb
addr16
cmp
jg
jge
pop
icebp
cmp
and
pop
fwait
adc
add
outsl
add
lcall
pop
sbb
mov
loope
pop
cmp
push
adc
in
xchg
sbb
xchg
mov
shl
aam
jo
sbb
fldl
scas
jmp
mov
mov
les
mov
inc
dec
inc
movsb
mov
rorb
loopne
leave
sbb
shlb
inc
xlat
sbb
movsl
pop
into
test
test
mov
pop
sbb
xor
xchg
pop
aas
push
aaa
mov
sub
rolb
mov
lods
cltd
adc
cmp
dec
test
sbb
stc
clc
and
or
lcall
sub
pop
in
push
or
and
out
fucomi
push
mov
add
fs
lret
sbb
lcall
add
dec
sub
sbb
std
pushl
mov
lock
inc
adc
add
mov
or
dec
outsl
or
sbbl
add
fs
dec
lods
sub
ljmp
movb
pop
xchg
mov
lds
and
jg,pn
pop
ljmp
xchg
pop
cld
or
popf
push
mov
rorb
rcrb
movsb
jnp
nop
cwtl
js
xlat
or
mov
mov
leave
es
add
pop
and
push
dec
imul
add
inc
jo
xor
and
or
mov
std
add
mov
ja
jb
pop
cmp
mov
and
scas
mov
call
xor
fwait
test
ret
mov
call
push
lea
push
or
or
mov
adc
adc
in
call
test
push
insb
add
cmp
mov
or
nop
and
cmpsb
push
xorb
mov
pop
mov
ret
xor
adc
enter
add
out
lea
jnp
cwtl
cld
push
or
jo
fwait
test
cmp
mov
nop
inc
jo
add
ficoml
add
sbb
loopne
out
jno
xchg
orl
pop
or
fprem
arpl
mov
or
loope
jo
in
add
push
call
sub
pop
mov
popa
add
leave
sbb
mov
sbb
pop
cwtl
fsubrl
dec
or
rclb
pushf
mov
cmp
stos
sbbl
rcr
aam
and
push
sub
cwtl
pushf
or
sbbl
lods
mov
je
sbb
test
rorl
xchg
push
cmp
subb
nop
xor
xchg
lcall
movsl
pop
lcall
push
add
stos
iret
xchg
mov
insb
rcrb
mov
or
dec
push
jb
insb
ljmp
and
pop
sahf
movsb
or
mov
lds
loopne
inc
push
or
test
mov
adc
testb
cld
xchg
shlb
ss
test
jl
add
add
mov
or
inc
jns
sub
cmp
cs
testb
lds
mov
imul
add
add
addl
dec
cld
adc
jae
dec
clc
jae
lret
out
xor
xor
pop
adc
pop
inc
and
movsl
fs
pop
shll
shlb
shlb
cmp
dec
pop
addr16
mov
cwtl
fwait
repnz
adc
cwtl
das
adc
add
pop
sbb
popf
mov
mov
ret
mov
cmp
mov
shl
adc
pop
inc
add
and
inc
inc
int
add
ret
add
in
sub
loop
inc
out
fiadds
mov
cs
pop
add
aaa
jg
dec
dec
add
stos
pop
jle
insb
cmp
in
jge
loopne
mov
nop
mov
das
lret
popa
bound
xlat
cmp
icebp
sahf
push
addr16
imul
movsl
jl
setae
addl
push
or
les
adc
inc
push
imul
jl
push
xchg
inc
shrl
adc
sbbb
xchg
mov
mov
pop
in
daa
xor
jge
mov
push
or
mov
lcall
lds
mov
dec
aam
testl
jns
or
add
pop
xor
enter
shlb
add
xchg
rcrl
add
fstps
add
pushf
icebp
sbbb
cwtl
xchg
inc
out
sub
cmp
xor
addr16
add
inc
mov
add
cmpl
out
add
push
xchg
js
and
rclb
ss
jge
inc
sub
fildl
jae
push
inc
in
movsl
roll
cmp
int
sbb
out
fadd
add
clc
sbb
xchg
stos
sbbb
out
out
mov
push
mov
popa
or
add
es
lahf
cmpsl
scas
sub
push
xor
clc
push
mov
xchg
addr16
lea
cmp
popl
add
xchg
inc
add
cmpsl
ror
rorb
fisttps
insl
jns
rcrb
jae
mov
lcall
or
push
addl
dec
je
jp
add
xchg
and
jle
stos
dec
outsb
pop
popf
pop
push
pop
out
push
jmp
or
add
sub
gs
push
xor
jle
out
adc
pushf
ja
dec
cld
cmp
jl
inc
outsl
push
jns
pop
jb
sub
pop
cmp
lahf
inc
andb
sbb
repz
mov
xchg
movsl
sets
jo
iret
orb
push
push
push
add
mov
sbb
push
jmp
sbb
push
movsl
push
rcl
xor
sbb
mov
pop
int
dec
lock
enter
sub
into
mov
push
ficoml
call
call
inc
or
add
or
lcall
pop
add
iret
sub
testl
sarl
sbb
sub
mov
inc
out
divl
faddl
mov
clc
fcmovne
roll
or
repz
or
les
daa
fimuls
or
inc
adc
adc
add
mov
pop
je
clc
fildl
cmp
and
push
add
sub
in
xchg
es
push
mov
ljmp
imul
fcomip
add
cmp
mull
in
loope
pmullw
cmp
outsb
mov
cmp
fisubrs
dec
shlb
pop
pusha
push
adc
mov
and
insl
loop
ljmp
and
dec
mov
imul
cmc
lret
push
xchg
jl
cs
test
pushf
popa
xlat
add
jp
jo
and
out
and
xor
cmpsl
mov
add
cld
loope
std
out
sbbb
mov
lock
lds
nop
xchg
push
inc
pusha
and
pop
inc
sarl
lret
sti
mov
js
lea
xchg
icebp
stos
jb
loopne
inc
push
mov
fwait
add
mov
cmpsl
call
rcll
lods
add
cmp
mov
inc
out
pop
nop
mov
seta
sbb
and
stos
call
add
push
xchg
fwait
inc
jns
add
mov
loopne
fs
sarl
xor
test
add
enter
push
add
sarb
push
or
dec
xor
inc
andb
add
and
mov
int3
shr
jecxz
and
and
sub
push
in
jg
and
jle
pusha
or
mov
and
inc
loope
jge
pop
add
lahf
cli
adc
pop
mov
and
scas
add
imul
pushl
add
pop
xor
dec
or
loop
xor
or
sarl
add
jge
cld
add
mov
dec
adcb
insl
inc
or
mov
add
and
int3
jmp
jne
push
in
add
icebp
cmc
in
inc
std
xor
cmp
mov
int3
aas
push
outsl
add
cwtl
pop
movsl
add
test
ljmp
sub
or
add
rorb
icebp
push
stos
jg
add
dec
loopne
push
mov
jl
push
into
mov
orb
adc
movsl
ret
jno
add
popf
sub
repz
sub
sbb
adc
lret
push
add
roll
pop
push
or
int3
mov
out
stos
add
lods
mov
or
pop
add
ds
push
xchg
pop
add
inc
ss
mov
add
xlat
cmpsl
adc
add
mov
jnp
and
dec
rcl
loopne
sahf
jle
pusha
jle
xchg
fs
mov
cld
iret
jbe
pop
pop
adcl
pushf
sub
mov
dec
stos
add
scas
adc
jl
sub
loop
xchg
cmp
add
jge
daa
cmpsb
aad
mul
add
test
in
sbb
xlat
flds
jl
add
pop
bound
mov
sbb
rorb
sub
adc
mov
jb
shlb
mov
cmp
sarl
movb
rol
jno
inc
sbbb
sbb
sbb
push
cwtl
mov
nop
dec
pop
adc
mov
mov
pop
sbbb
loopne,pt
adc
xchg
push
push
add
shlb
xchg
lock
and
cmp
ret
lcall
jle
fiaddl
add
jb
scas
pop
inc
movsl
subb
loopne
imul
stos
aas
inc
emms
dec
jne
rolb
xor
mulb
cwtl
jp
add
xor
gs
add
cld
jge
jmp
out
jmp
adc
sub
add
jecxz
jg
add
dec
jmp
pop
sbb
add
cmp
add
andb
push
iret
fsubrl
nopl
mov
xor
fstpl
pop
ds
xor
add
mov
data16
and
cmc
sbb
sub
lcall
mov
mov
lahf
push
repnz
push
xor
lock
jecxz
adc
in
and
clc
shrb
loope
add
int
lock
shrb
sub
inc
add
or
add
in
jne
xor
inc
dec
adcb
xor
rcrl
out
mov
xchg
push
and
lock
sub
aas
rolb
or
add
sub
test
fistpll
fucomi
movsl
add
fld
jmp
cmpsb
jbe
add
jle
jl
cmp
out
repz
mov
enter
sbb
popa
push
sub
pop
adc
add
imul
xor
clc
int
sub
shrl
pushf
adc
pextrw
mov
mov
push
dec
repnz
and
add
sub
enter
xor
and
adc
push
mov
jbe
sub
dec
mov
and
and
sub
jbe
push
cmp
addb
cld
imul
mov
aaa
pop
push
rclb
stos
dec
rolb
cli
or
test
add
addb
fdivp
adc
aam
push
add
pop
or
int3
pop
cmpsb
std
mov
iret
cs
add
fcoml
enter
repnz
jno
mov
ljmp
cwtl
and
adc
fsubl
xchg
in
mov
mov
aaa
ret
into
repz
pop
add
xchg
pop
fwait
ja
add
repnz
cwtl
add
fdivs
xchg
jmp
iret
stc
adc
dec
mov
jle
popl
lahf
lcall
std
xlat
add
inc
pop
sub
sbb
add
sbb
scas
jmp
loopne
add
add
add
xor
fs
lret
lret
sbb
jge
xchg
cmp
mov
orl
hlt
push
mov
fildl
cmp
mov
jge
push
sbb
rcll
ud2
sbb
scas
sahf
xchg
fnstcw
sbb
lea
dec
jb
add
sbb
aad
cmp
fldt
dec
pop
add
pop
and
scas
adc
add
cwtl
and
add
sbb
cmp
adc
mov
lahf
imul
sub
adc
mov
insl
mov
cmpsb
inc
loope
and
add
testl
mov
push
add
je
enter
jg
and
add
xchg
lret
jne
fiaddl
mov
push
pop
add
pop
subl
jb
jb
add
jge
outsb
mov
mov
insl
popa
push
les
xchg
orl
lcall
andb
xchg
fwait
adc
add
js
dec
out
add
jecxz
add
ror
mov
dec
xorb
mov
jle
icebp
roll
add
sbb
xor
mov
loopne
ds
and
shlb
pop
xchg
push
pop
push
fdivl
stos
push
add
mov
jg
rorl
jbe
cmp
pop
push
lahf
out
fisubrs
add
jl
mov
sar
dec
pop
mov
test
loopne
pop
xor
repz
scas
js
mov
mov
cmc
xor
mov
fcoml
add
mov
icebp
adc
inc
movl
push
mov
add
call
or
inc
ljmp
add
out
fsubl
pop
add
xor
ret
push
pop
or
lods
in
cmpsl
ja
mov
imul
adc
pusha
mov
js
movsb
lock
mov
mov
xchg
stos
push
orb
rorl
jg
xchg
jae
lret
stos
fnstsw
xchg
dec
icebp
fcoms
xorps
push
cmpsl
repnz
dec
inc
leave
mov
insb
adc
push
les
addb
add
sti
sbb
xor
mov
dec
in
or
jne
cltd
lahf
pusha
js
jns
adc
pop
dec
imul
push
add
push
push
lahf
lds
pop
push
cltd
inc
adc
cmp
cmp
jo
xor
xchg
movsb
mov
subps
in
sarl
faddl
jo
das
push
lret
mov
rorl
xor
sbb
sbb
jmp
inc
add
pop
orb
pop
mov
ss
jecxz
add
push
insl
add
xor
xor
push
or
arpl
mov
aaa
sbb
dec
cmp
and
test
xor
imul
jo
xor
push
out
jp
pop
adc
test
fs
add
aaa
ss
mov
loope
jmp
mov
push
push
shlb
fistpl
jo
cmp
lret
or
xlat
pop
push
add
dec
leave
adc
and
xor
jns
clc
add
xchg
enter
inc
mov
ss
pop
lds
jb
cmp
push
insl
jl
stos
push
jo
sub
mov
add
aas
fs
mov
add
cmp
in
loopne
adcb
inc
sbb
test
add
mov
xor
ja
cmp
sbb
pop
clc
add
repz
out
test
xchg
add
repnz
mov
push
sub
fildll
insb
movb
inc
lahf
and
add
jbe
mov
mov
bound
rorb
cmpsl
add
xchg
pop
mov
addl
or
fs
and
sti
cs
daa
test
xchg
movsb
xchg
pop
sub
lock
fimuls
ljmp
insl
push
or
int
mov
xor
cmp
add
mov
je
enter
bound
push
fnstsw
dec
loopne
add
cmp
mov
add
xchg
icebp
loop
add
mov
sub
lds
imul
cs
pusha
mov
dec
dec
aas
add
inc
cld
add
or
add
dec
data16
mov
cmc
jnp
add
cmpsb
mov
add
les
cmp
stc
xor
mov
cmp
mov
outsl
pop
pop
sbb
adc
inc
add
xor
sbb
inc
mov
mov
sbbb
stos
pushf
nop
call
dec
pusha
xor
jbe
add
movsl
in
add
jae
mov
mov
inc
movsl
or
fs
movsb
sgdtl
xor
add
int
inc
add
pop
jno
pop
mov
loope
repnz
subl
adc
mov
cmpsl
lods
loopne
add
or
mov
stos
add
jnp
ret
jae
jp
lahf
data16
add
out
lds
mov
sbb
nop
insl
push
loopne
imul
add
add
es
mov
rolb
nop
inc
cli
cmp
imul
pop
cmp
or
cli
sbb
pop
xchg
jb
add
xchg
xor
dec
add
test
out
aam
sub
pop
ret
popa
lock
test
dec
and
pop
mov
add
test
push
jge
pop
xchg
shlb
rorb
xchg
mov
daa
or
scas
pop
sub
cld
inc
nop
dec
add
jno
cwtl
loope
rcrl
adc
in
popa
sbb
mov
adc
hlt
push
stc
add
insb
arpl
push
paddusw
and
sar
iret
sbb
int
xorl
add
shlb
and
data16
sbbb
lods
sahf
cld
aam
push
mov
pushf
mov
es
mulb
mov
sub
cmpsb
andb
icebp
ds
add
sbb
das
sub
in
pop
mov
xchg
out
clc
jl
stc
or
test
add
mov
and
rolb
in
jne
cs
push
mov
dec
stos
push
or
add
imul
dec
mov
add
inc
sbb
repz
ret
add
pop
scas
jbe
fildl
outsl
pushf
mov
push
pop
add
outsl
and
mov
push
idiv
out
adc
mov
mov
or
add
sbb
fimuls
sbbl
jg
enter
pop
loop
cmp
sbb
int3
test
jns
cld
add
movsb
mov
mov
or
xor
imul
rcl
out
les
pop
mov
aas
clc
add
cmpsb
mov
add
rolb
aad
andb
push
xchg
stos
mov
jp
xchg
add
mov
pusha
insb
nop
add
xchg
push
enter
inc
sub
and
daa
sub
jl
fmul
cld
add
mov
pop
inc
je
popa
ja
testb
jp
shll
or
imul
test
push
xchg
inc
add
and
shll
xchg
cmpsb
test
aam
mov
in
cmp
dec
add
push
pop
jmp
popa
xchg
add
repnz
stos
pop
mov
sub
je
shr
outsl
arpl
test
filds
lahf
es
ret
shll
xchg
loope
addr16
div
pop
and
push
adc
inc
repz
orl
add
cld
mov
divl
andb
or
fwait
lods
jp
add
test
hlt
jle
push
cmp
ja
fcom
push
decl
shrb
daa
mov
fld
je
test
sbb
push
roll
ja
imul
and
popf
mov
setae
fiadds
mov
nop
adc
or
ficoms
mov
lea
sbb
xor
push
or
aam
mov
sbb
sbb
insl
sbb
adc
dec
mov
mov
cmp
push
loope
add
insl
inc
jno
lret
pop
shrl
loope
cld
push
cmp
jge
or
add
int3
fidivl
dec
fwait
push
in
xchg
add
add
leave
jge
insb
pop
pushf
jns
js
mov
xor
ljmp
out
aaa
xor
dec
push
loopne
rcll
add
popa
jne
xchg
in
pusha
fbstp
mov
clc
and
in
add
add
insb
les
push
sbb
ds
cmp
andb
lea
or
pop
sarl
rcr
outsl
add
xor
cli
roll
jbe
xchg
dec
aam
cmp
mov
stc
push
and
fidivl
cmp
notb
repz
cli
out
and
into
adc
add
sub
push
inc
jg
outsb
push
pop
push
xchg
leave
test
rcr
add
popa
mov
xchg
imul
inc
ficompl
leave
push
daa
int3
add
push
enter
jge,pn
inc
add
sub
xchg
rcrb
cmp
loop
fisubrs
lock
add
cli
push
ja
mov
rcl
fadds
add
xor
adc
cmp
and
xor
inc
xchg
iret
add
lret
cmp
mov
jle
add
mov
xorb
sub
ljmp
testl
xor
mov
sub
push
loope
add
and
aas
add
sub
adc
add
iret
pusha
stos
pop
or
mov
mov
mov
data16
or
fildll
mov
into
outsl
adc
or
jae
test
pop
das
mov
fldl
enter
push
iret
cmp
shlb
jmp
mov
movsb
popf
push
fwait
cli
jl
add
shl
add
mov
aaa
cmp
push
and
pop
into
cmpsb
add
add
pop
and
cmpsl
pop
sarb
pop
or
mov
mov
xor
jg
test
and
push
js
or
inc
les
adc
jo
inc
jecxz
testl
mov
and
in
mov
push
sahf
and
or
jl
jno
dec
add
and
and
xlat
add
xchg
mov
add
jo
adc
inc
add
loopne
int
stos
aad
inc
int3
in
aas
add
arpl
testb
add
pop
add
jb
lret
mov
add
sub
repnz
in
rolb
cmpsb
lcall
jae
add
frstor
push
or
loope
test
add
sub
dec
push
add
jne
lret
add
es
xor
aad
push
les
ficoms
jnp
xchg
lock
flds
and
jo
bswap
or
jb
pop
sahf
rorl
imul
add
xchg
jae
xor
outsb
pop
mov
enter
add
movsl
mov
and
add
pop
es
jns
adc
es
sub
add
and
rorl
xchg
sbb
test
sub
or
add
jb
push
mov
sbb
mov
pop
je
add
arpl
cmp
cmpsl
jo
pop
mov
daa
out
sbb
movsb
add
or
or
push
mov
push
or
bnd
cmp
shl
jno
pop
xchg
int3
jnp
inc
jg
inc
mov
mov
push
icebp
scas
pop
ja
add
rcrb
es
mov
js
add
rcrb
stc
and
inc
pusha
pusha
cmpsb
lea
xchg
xchg
in
out
add
cmp
inc
dec
mov
sub
int
add
push
jle
movsb
pop
pop
je
pop
shlb
loopne
scas
mov
pushf
xchg
ret
adc
add
mov
and
mov
ret
cmc
dec
mov
ss
loopne
xchg
adc
push
psubsw
add
push
int3
out
add
and
mov
test
dec
je
mov
lods
push
push
sbb
lods
movsb
sub
add
test
sub
outsb
pop
lock
push
jb
loopne
ljmp
mov
inc
mov
mov
in
add
movsb
repz
insb
add
mov
js
out
push
data16
sbb
movsl
or
jp
aaa
dec
xor
push
dec
sbb
or
imul
mov
dec
hlt
in
push
add
sbb
icebp
sbbl
cmpsl
push
mov
mov
dec
jb
sbb
lea
cmpb
add
lock
clc
out
lds
jo
popa
icebp
lea
test
mov
aaa
add
or
add
rorl
add
add
inc
jne
add
cli
mov
cmp
add
sub
fsubrl
add
test
hlt
ljmp
mov
inc
dec
pop
sbb
sbb
cmp
xlat
add
adc
iret
pop
fisttpl
popa
insb
pop
sub
and
inc
ror
cmp
fucom
sub
repnz
cmp
xchg
sbb
add
add
scas
push
add
lds
fdivrs
pop
enter
fwait
popa
mov
loope
add
sub
mov
imul
nop
pop
add
ficomps
pop
shrl
sti
or
jbe
xchg
pop
adc
aad
push
imul
xor
lmsw
or
insl
pop
add
jbe
dec
xchg
loopne
add
mov
outsl
adc
jnp
rorl
pop
notb
xchg
or
mov
jns
xchg
in
pop
sti
cli
add
fcomps
loopne
add
mov
shrb
popf
xor
add
xchg
sbbb
dec
push
sbb
sbb
cld
stos
add
call
in
mov
clc
nop
js
pop
mov
push
gs
ja
add
mov
ds
xchg
add
mov
fldt
fisubs
popl
shlb
add
cld
testl
or
in
cmpsb
jle
adc
mov
cmp
inc
stos
xchg
or
jecxz
ds
fucomip
mov
mov
push
int3
dec
movsl
add
fcoml
xchg
or
fwait
cmp
rorb
and
pop
xchg
sub
js
xor
xchg
cmp
mov
mov
inc
mov
push
or
xor
pop
popa
clc
xchg
add
lods
nop
mov
inc
adc
add
pusha
jle
pop
rcll
xchg
divps
xlat
and
scas
adc
push
out
cmpsl
add
xchg
mov
es
or
jle
add
movq
lods
dec
mov
mov
add
insl
sarb
je
cmp
fcoms
sti
lahf
andb
fcomp
lret
test
aaa
mov
out
arpl
orb
push
jns
fsubrl
loopne
dec
adc
pop
push
pop
push
inc
scas
pop
sbb
loope
or
mov
imul
in
shlb
in
aas
pop
inc
lods
inc
rorl
out
subb
push
push
out
loop
or
adc
out
jecxz
xchg
add
pop
int3
jge
or
pop
gs
mov
pop
loopne
dec
out
ror
add
sbb
push
add
and
jbe
jns
add
les
add
scas
sub
mov
pop
add
pop
push
mov
popf
xor
jb
lcall
or
mov
push
xchg
jp
out
and
jge
ret
xorl
push
add
sub
push
push
jge
cltd
ds
shlb
sbb
scas
add
jno
add
pushf
pop
in
pop
xor
mov
sti
add
or
aam
clc
pusha
push
test
adc
pushf
add
or
add
add
enter
sahf
mov
sbb
xchg
inc
pop
add
orb
fnstcw
xchg
lret
es
cmpsl
add
test
ss
jp
stos
mov
fs
jns
adc
lahf
push
xlat
ficoms
roll
mov
xlat
fcomps
dec
sti
xor
je
sarb
add
or
jae
adc
add
enter
xchg
mov
icebp
out
popa
js
xlat
incb
ds
adc
testb
add
push
and
sub
mov
and
xor
jo
mov
add
popf
sti
mov
addr16
jmp
sub
sub
clc
add
add
or
and
mov
mov
mov
adc
fldl
scas
inc
ret
adc
push
mov
jbe
ljmp
pushf
sub
insb
xor
in
popa
daa
ret
dec
add
outsl
xor
pop
push
dec
negl
and
into
xor
push
xor
in
mov
out
mov
enter
test
add
out
jne
sbb
or
xchg
frndint
add
jns
add
ffreep
pop
add
loope
fs
stos
dec
inc
pop
aad
add
ds
dec
insb
ss
add
xchg
rolb
push
cmp
shlb
mov
or
add
in
les
shlb
xchg
fnstenv
fwait
pop
addb
xor
int3
mov
push
add
out
in
fidivrs
int
add
stc
mov
inc
or
faddl
fwait
les
push
adc
gs
faddp
push
inc
inc
fistpl
aad
lock
adc
add
or
dec
pop
lock
lahf
add
lret
stos
fcmovnb
add
rolb
int3
pop
mov
pusha
or
cld
inc
add
adc
inc
in
and
shlb
xchg
pop
jo
xchg
sbbb
mov
and
push
xor
inc
dec
lock
je
lret
sub
sbb
add
push
scas
cmp
xchg
divl
push
fldenv
mov
jbe
xor
add
xchg
inc
loope
pop
out
add
jno
fstpt
mov
inc
and
and
xchg
ss
andb
addb
cmc
push
cmp
sbb
xor
in
cmp
add
mov
jnp
xchg
lret
jne
mov
pop
stos
pop
pusha
test
pop
add
xchg
sbb
add
fisttpl
push
add
pop
cltd
ret
push
mov
xchg
mov
jns
rcll
push
dec
mov
jb
mov
popa
mov
popa
testb
sub
pusha
add
hlt
ret
fwait
inc
mov
pop
cmp
movsl
enter
push
lods
into
rolb
sub
pop
dec
repnz
add
xchg
pop
add
mov
jge
pop
cmp
scas
xor
sub
shlb
cmp
mov
sbb
test
ret
add
sbb
add
cmc
aas
cmp
fdivrs
out
arpl
scas
scas
lock
stos
popl
imul
push
sub
jae
call
dec
push
inc
push
ficoms
push
inc
stos
leave
xchg
add
outsl
subl
out
push
dec
mov
sub
cmc
lea
jecxz
repz
cmp
xchg
add
mov
or
push
out
add
in
jmp
add
and
adc
popa
sbb
shlb
ja
loop
ds
js
xor
and
imul
pusha
scas
popa
int3
aad
inc
sbb
cmp
inc
mov
add
fsts
dec
add
jne
push
push
sahf
fs
sub
idivb
add
mov
lahf
cmp
add
int
xchg
push
loopne
sub
insl
push
xchg
cmp
cld
lahf
andb
icebp
test
arpl
jg
mov
and
mov
scas
jecxz
push
push
fstpt
in
xorl
loopw
fisubrl
sub
int
xchg
push
int3
inc
pop
sub
movsl
fstpt
xchg
addr16
inc
add
sbb
adc
fmull
jo
cmp
add
push
in
cmp
popf
enter
jbe
add
aas
jg
mov
xor
enter
pop
hlt
ud0
add
push
xorb
out
add
xchg
das
xchg
popa
lret
or
lods
push
lock
out
hlt
xchg
in
stos
js
or
push
add
lcall
shrb
pop
repnz
jo
idivl
ss
pop
dec
fiadds
insb
out
inc
lock
add
push
mov
add
incb
inc
data16
cwtl
sub
xchg
adc
out
cmpsl
push
ror
fdivr
mov
add
lods
inc
cmp
mov
or
lret
jecxz
xor
add
add
stos
movsl
out
js
gs
dec
jmp
loope
jbe
lsl
or
gs
inc
cmp
xchg
dec
pop
add
jl
call
push
jmp
jno
shlb
ret
and
push
ja
out
add
insl
pushf
sbb
lcall
mov
rcl
lds
rcll
dec
ljmp
xchg
jmp
mov
xor
hlt
or
in
cmpsb
testl
int
pop
pop
subb
add
xor
loopne
lret
inc
dec
pop
xchg
cmp
jnp
lock
push
call
fmuls
in
hlt
lods
mov
or
mov
add
pop
int3
xor
mov
jo
cwtl
jg
cs
push
mov
xchg
jl
dec
orb
mov
add
in
cltd
push
pop
pop
lret
push
hlt
stos
sti
in
xchg
cli
mov
ficomps
daa
testb
xchg
mov
cmpsb
or
aaa
pop
add
pushf
xor
mov
jge
std
repnz
add
fwait
sub
les
add
jg
jge
stos
xchg
and
rcrb
xor
pop
mov
outsb
icebp
and
push
push
int3
fwait
push
aas
pusha
fdivrs
dec
push
add
gs
insb
loope
lods
inc
jge
dec
xchg
add
imul
pop
in
mov
lds
out
insb
imul
jae
xor
rclb
loope
or
pop
mov
ja
and
aad
vpsllq
add
push
pop
ss
fcmovbe
ret
mov
add
mov
out
jb
push
inc
push
fs
mov
adc
dec
mov
cmc
xchg
dec
test
pop
cmp
sahf
cltd
push
loopne
inc
sub
into
cmpb
mov
lods
mov
xchg
lock
pop
sub
fdivrs
and
pop
adc
mov
ret
sub
xor
add
cmp
lods
repz
fmull
bound
push
lcall
add
mov
sub
lock
inc
add
pop
adc
mov
xchg
into
lock
adc
in
dec
out
pop
cmp
add
iret
sub
add
push
add
in
cmp
add
push
aad
mov
cmp
push
ss
shr
sahf
idiv
into
aaa
js
and
lahf
pop
sbb
xchg
xchg
xchg
xchg
add
pop
repz
adc
add
test
aas
mov
lds
add
push
es
mov
inc
roll
pop
mov
add
inc
add
xor
es
in
ljmp
xor
mov
add
push
in
xchg
mov
fisubs
mov
xchg
adc
inc
sti
sbb
sbb
adc
pop
inc
jmp
or
push
lock
xchg
adc
cltd
sub
cmpb
decb
fdivs
xchg
nop
sbb
and
add
iret
roll
fsts
xor
and
cli
sub
icebp
les
xor
inc
jecxz
popf
and
jns
out
xor
arpl
or
in
add
push
adc
mov
sbb
std
adc
adc
xor
je
mov
test
jl
and
inc
xchg
rcrb
enter
int3
les
inc
ret
xor
stc
cmp
out
cmp
adcl
add
cltd
push
movsl
in
sarb
std
inc
lret
push
andl
in
lock
sbb
jmp
mov
jp
add
loop
dec
stos
xlat
std
pop
pop
sub
xchg
rcll
xor
xor
jmp
xchg
cwtl
push
call
or
les
fs
das
or
inc
adc
mov
add
fneni(8087
dec
call
pop
movsb
dec
cmpsl
cmp
into
adcb
daa
fstp
dec
add
pop
add
pop
test
cmp
mov
jl
cmp
lods
data16
fsubs
js
xlat
and
jns
push
sub
in
sub
enter
inc
mov
sub
outsb
test
lret
push
and
xchg
shll
inc
movb
cmc
xchg
ja
add
xor
imul
push
enter
dec
clc
push
out
add
imul
adc
adc
lret
mov
add
jecxz
lret
jne
test
std
orb
adc
jb
or
sbb
cmpsl
enter
fisttpll
add
xchg
loop
adc
mov
into
mov
mov
out
enter
add
cmp
lret
dec
cld
push
lea
adc
stos
mov
add
loopne
xchg
ficoms
jne
mov
add
les
fiadds
xor
mov
aad
mov
add
dec
bound
push
add
mov
dec
pop
rolb
scas
adc
jg
add
inc
mov
jo
mov
adc
add
adc
cld
adc
sub
sbb
cmp
sub
sub
cmpsl
or
or
inc
push
cwtl
mov
rorb
int
adc
and
or
or
test
adc
xlat
adc
mov
int3
adcl
pop
sbb
adc
xlat
inc
dec
sbb
pop
mov
mov
add
cli
ljmp
punpckhwd
jmp
mov
shr
xor
popa
jle
icebp
fiaddl
and
movsl
push
rcrl
xchg
inc
cmp
mov
cld
jb
inc
add
int3
mov
mov
add
iret
das
sahf
push
mov
outsl
adc
pop
sub
ficoms
sbb
jle
inc
imul
enter
shll
outsb
out
cmpb
lock
imul
add
xchg
mov
negb
add
pop
cmp
enter
jno
add
pop
xor
xchg
add
fs
xchg
cwtl
or
fdiv
xorl
cwtl
jle
adc
movsl
imul
int
adc
add
test
shrl
add
fdivrs
into
mov
pop
adc
pavgw
mov
and
aas
pop
push
add
in
fs
clc
or
test
cmpl
loop
ret
shlb
imul
jne
xchg
loop
outsl
sub
std
adc
sub
ja
mov
and
sbb
into
roll
sub
adc
sub
call
and
insb
ljmp
fiadds
cltd
test
push
int3
add
cmp
out
mov
in
ja
sub
adc
xor
in
adc
clc
call
mov
push
jge
add
adc
iret
xchg
aam
push
xchg
mov
arpl
pop
lds
add
jns
aad
popf
xchg
test
addr16
or
aam
mov
enter
pop
add
inc
dec
cli
push
sahf
inc
popf
leave
inc
adc
cmpsl
lcall
lea
or
add
mov
or
cltd
pop
mov
inc
mov
roll
or
add
fwait
mov
mov
sarl
add
orl
cmpl
adc
cmp
test
icebp
xor
sti
mov
into
inc
adc
incl
daa
lds
sarl
add
repnz
add
rolb
dec
lea
push
dec
add
pop
test
mov
add
dec
or
push
add
sub
and
cmpsl
mov
xorb
add
out
rorl
leave
sbbb
mov
test
scas
add
mov
mov
ds
out
rcrb
mov
xchg
enter
sbb
add
cmpsb
outsb
sbb
cmp
filds
je
jle
push
bound
ljmp
ror
push
in
sti
imul
sub
push
scas
out
push
rol
mov
add
cld
icebp
cwtl
subb
dec
sbb
lret
popf
push
adc
fidivrs
add
inc
pop
xchg
dec
loopne
stos
dec
into
cwtl
push
andb
cmpsl
mov
add
add
enter
mov
dec
pop
std
iret
or
inc
cvtdq2ps
adc
loope
stc
jns
cmp
jbe
mov
sub
pop
pop
popa
add
xchg
jmp
sbb
out
js
mov
add
out
sub
rcrb
ljmp
mov
je
cmp
jl
push
insb
pushf
test
int
mov
jp
call
je
in
enter
mov
faddl
cmp
nop
cmpsb
xor
adc
xchg
mov
clc
rcrb
imul
aas
enter
hlt
mov
add
loop
enter
cmp
sub
aaa
pop
nop
dec
mov
sbb
pusha
loopne
xchg
or
mov
pop
sti
test
loop
lods
sub
add
fsubrs
arpl
xor
jae
cwtl
ds
fwait
or
data16
push
push
sbb
std
mov
cld
cmc
lret
jnp
or
popf
adc
cwtl
and
test
subb
or
icebp
loop
pushf
enter
test
out
push
aad
les
push
sub
and
add
outsl
cmp
push
sbb
out
fs
mov
add
dec
test
and
lds
rclb
adc
adc
and
push
or
mov
inc
inc
xor
and
lret
ret
add
in
mov
sub
adc
mov
scas
sbb
jns
add
fadd
mov
clc
push
add
sub
mov
xchg
and
sbb
sarl
add
addb
jno
mov
dec
or
add
fists
gs
pop
lea
loopne
or
mov
addb
out
lds
test
add
mov
sub
or
dec
dec
subb
fcmove
pop
divb
xor
add
pop
les
add
push
push
mov
stc
or
cmp
pop
jbe
data16
dec
mov
out
insl
jno
cld
roll
add
ljmp
iret
js
mov
add
inc
jo
and
sbb
pop
lods
cmp
inc
mov
add
mov
daa
pop
repnz
or
add
sub
push
hlt
imul
test
add
xor
out
push
fisubs
pmaddwd
rcrb
add
pushf
xchg
mov
aaa
loopne
mov
test
out
pop
pop
add
mov
js
add
aad
loopne
aam
add
push
push
mov
and
outsb
add
in
inc
mov
insl
loopne
sbb
jno
cmp
mov
insl
push
cltd
jl
fcoml
sbb
pop
xchg
sbb
cmpsb
jo
jge
dec
and
or
pop
dec
in
mov
add
imul
dec
or
inc
cmp
clc
push
ret
sub
push
and
pop
and
add
push
popw
add
cltd
add
and
shrb
inc
or
daa
sbb
xor
test
mov
add
sbb
cmp
mov
imul
testl
add
jl
es
push
add
lods
loopne
inc
push
mov
and
fimull
add
mov
lods
aas
aas
imul
mov
push
jns
jo
cwtl
adc
loopne
add
je
xlat
repz
push
inc
lock
mov
or
icebp
jae
mov
push
nop
into
pusha
cmpsb
sahf
sub
test
adc
fidivrl
jns
add
xchg
xor
xchg
jge
add
dec
pop
in
inc
fsubl
das
add
xchg
inc
jb
push
xchg
or
adc
mov
sbb
ret
aam
dec
sti
arpl
out
mov
in
rcll
call
inc
or
adc
jns
mov
sbb
lds
mov
dec
add
sti
xchg
loopne
xchg
pop
insb
jne
xor
pop
les
inc
inc
or
mov
add
cmpsb
push
pop
adcl
popf
fs
add
xor
stos
xchg
mov
pop
cmpsl
xchg
push
pusha
cmc
shlb
daa
js
outsl
aaa
rcr
mov
add
and
add
popf
or
dec
loop
xchg
mov
es
pusha
add
aad
inc
add
cmp
xor
shll
add
out
mov
sub
movsb
jno
jle
jo
add
cmp
add
add
jno
lret
les
std
push
cmp
dec
test
xor
mov
jae
les
jb
loopne
stc
mov
scas
sub
cmp
leave
xchg
loope
iret
ret
fnstsw
cs
ret
add
jge
lahf
cmp
add
dec
mov
scas
and
mov
and
enter
sbb
mov
pop
arpl
xchg
outsb
loop
clc
out
ss
insl
jg
jbe
jo
jp
dec
rolb
xchg
call
lea
xchg
mov
cmpsl
mov
and
sbb
push
sbb
push
sub
mov
aaa
pop
cmp
mov
xor
xor
jns
mov
xchg
int
xor
dec
out
inc
jle
testb
in
cwtl
add
push
test
pusha
add
leave
sub
imul
cmc
mov
jns
dec
movl
std
pop
add
ja
push
test
mov
scas
push
pop
xchg
inc
or
loop
or
fadds
mov
dec
xchg
jg
fwait
leave
add
cmp
pop
jg
loop
add
mov
das
mul
add
jnp
sti
jmp
ret
fisubrl
imulb
jnp
cmp
out
cmp
jmp
pop
lds
nop
sub
sahf
sti
mov
je
jbe
xor
lret
pop
into
roll
outsl
icebp
inc
jo
orb
pop
add
nop
arpl
out
sti
ret
dec
loopne
sub
mov
test
mov
inc
sahf
xor
lahf
cwtl
loopne
js
jmp
lcall
int3
add
or
push
inc
leave
dec
mov
clc
add
xor
fwait
dec
sub
and
add
addb
mov
orl
negb
pop
lock
cwtl
and
cmpsl
mov
rclb
jp
fadds
pushf
mov
xor
imul
cmp
push
xchg
in
mov
xchg
loope
pop
mov
idivb
and
add
xchg
ret
and
or
xchg
jg
mov
sbbb
imul
push
test
sbb
jo
inc
fcoml
add
and
stc
je
push
imul
loopne
sbb
add
imul
scas
enter
add
or
call
ja
test
stos
xchg
push
and
jecxz
clc
xchg
add
sub
and
and
fistps
dec
cwtl
call
nop
and
arpl
push
cmpsb
les
mov
imull
lret
rorl
insb
das
jl
stos
sbb
adc
jo
adc
sbb
mov
into
loope
dec
sbbb
cmp
add
aaa
add
add
mov
adc
lcall
loopne
mov
das
pop
call
ja
orl
cwtl
pop
add
stc
jmp
mov
mov
adc
lret
add
dec
test
sub
add
mov
pop
adc
sbb
outsl
or
mov
sbb
ffree
shll
add
push
int
and
dec
add
hlt
sbb
and
cmpb
mov
xchg
mov
cwtl
cmp
in
in
adc
leave
out
stc
jns
std
mulb
xchg
jl
xchg
addr16
push
jecxz
or
add
sarl
xchg
cmp
test
jle
aaa
adc
mov
inc
push
add
cmp
call
mov
loope
dec
aam
pop
andb
mov
add
mov
mov
aas
adc
xor
sbb
mov
fcompl
scas
inc
orb
add
das
add
push
pop
or
imul
sbb
inc
les
mov
xchg
adc
outsb
out
add
loopne
int
pusha
cld
rorb
dec
xchg
outsl
xchg
fldenv
ja
xchg
decl
adc
inc
or
pushf
ret
sub
nop
ss
lock
jecxz
sbb
adc
push
and
mov
inc
and
lds
pusha
ds
adc
shlb
mov
jb
and
jno
add
mov
inc
adc
add
test
das
aam
shll
in
pop
add
and
adc
nop
push
rorl
jns
xchg
add
jnp
aad
icebp
inc
add
and
insl
cmpsb
jmp
jnp
cmp
mov
push
push
mov
jne
cmp
add
xlat
sbb
add
push
in
xor
mov
clc
xchg
pop
lods
and
dec
and
sbb
clc
negl
stos
cmp
and
xchg
lret
push
sub
fidivrl
into
sahf
inc
jo
sbb
add
or
test
fldenv
or
out
loop
add
push
sbb
xchg
pop
fsubrs
es
jne
push
scas
add
rsm
sub
js
add
push
mov
in
mov
add
loope
lahf
push
pop
push
pop
inc
inc
mov
mov
push
xlat
push
nop
sar
movsb
add
inc
std
scas
pop
mov
stc
sub
jmp
inc
fistpl
lock
sub
mov
pop
cmp
xor
aam
cmp
or
cmpsl
nop
sub
sub
loope
aas
icebp
pop
cmp
xchg
repnz
or
or
gs
int3
jl
sbb
imul
insb
add
dec
and
mov
es
inc
into
xchg
inc
jle
mov
push
stos
add
shrl
stc
outsl
in
add
mov
dec
inc
xchg
jge
ret
lret
pusha
je
data16
mov
add
sub
rol
outsb
arpl
add
sub
nop
cwtl
clc
add
rcrl
sbb
jb
pop
add
xorb
add
mov
xchg
in
jge
pop
pop
mov
jne
sub
add
call
pushf
jno
es
shlb
push
in
inc
clc
or
nop
mov
jge
dec
xchg
fstpt
lret
pop
cmp
lock
add
push
stos
in
rcrb
and
jle
sbb
mov
add
out
movsb
add
add
enter
dec
lret
lods
ret
adc
or
xchg
pop
out
cwtl
sub
mov
add
xor
subb
shrl
cmpb
js
in
xchg
push
mov
out
add
in
in
cmp
xchg
jmp
cmp
js
loop
test
negb
or
shlb
add
vmovups
pop
xor
stos
and
jns
sub
mov
sbbl
js
adc
bound
jge
add
or
mov
das
scas
inc
test
pop
jecxz
xor
inc
dec
add
mov
push
in
cmp
add
test
movsl
or
sti
cli
pop
cs
int3
mov
outsl
push
fsubl
mov
hlt
jae
mov
jno
or
js
xchg
inc
add
push
xchg
fs
pop
sub
testb
ffree
test
js
int
pop
xchg
xchg
enter
ret
rcrb
ret
add
pop
cli
inc
jo
sub
int3
adc
and
add
lock
das
test
mov
and
push
add
push
scas
sub
xchg
inc
cld
arpl
nop
roll
inc
outsb
sub
outsl
test
in
lods
push
cli
jl
add
or
call
addb
xor
lahf
mov
das
aam
xor
sub
sarb
pop
sub
mov
xchg
scas
sbb
mov
cmp
push
call
out
popa
cwtl
mov
pop
movsl
std
ret
add
dec
push
xor
push
mov
lds
or
cmpb
inc
roll
imul
sbb
dec
adc
int
out
call
push
mov
icebp
sarb
out
loop
sub
cld
sti
mov
lret
adc
pop
cmpsl
adc
cmpsl
das
xchg
outsl
and
mov
imul
jmp
jb
out
mov
xor
jp
clc
jl
add
xlat
push
lock
cmp
fwait
ja
pop
lret
fildl
jmp
sub
js
add
out
cwtl
pop
clc
mov
add
dec
std
push
xchg
and
es
ja
add
pop
adc
insl
gs
repz
add
jo
in
std
test
addr16
xchg
andb
dec
ds
jne
out
addl
pop
inc
xor
lds
push
add
leave
push
outsb
xor
cmp
xor
jl
mov
iret
push
pop
into
add
dec
insl
inc
lret
sub
leave
add
push
adc
mov
test
mov
adcb
xchg
jbe
in
add
add
push
mov
test
pop
or
xchg
cmc
jp
cmp
inc
add
mov
sbb
hlt
lahf
negb
inc
mov
aaa
ret
xor
fldlg2
adc
sbb
adc
inc
push
cmp
xchg
mov
push
add
inc
add
add
sbb
sbb
pushf
jp
mov
pop
push
dec
inc
jl
sub
push
add
out
add
inc
inc
jnp
cmp
icebp
pop
mov
push
shll
mov
into
mov
xchg
std
insl
add
pop
call
aaa
mov
mov
in
outsl
or
shrb
pop
faddp
xor
lods
xchg
es
out
or
xchg
dec
sub
xlat
add
popa
pop
jno
cmc
xorl
mov
push
in
pop
int
push
adc
andb
adc
push
andb
xor
mov
ds
inc
ss
lahf
xchg
mov
adc
mov
xor
and
pusha
das
sti
and
scas
shrb
and
add
push
push
cmp
lcall
inc
xorb
add
xor
pop
addl
imul
out
add
hlt
lcall
or
add
dec
ja
mov
fildl
pop
pop
test
enter
dec
loopne
adc
daa
lods
mov
cld
scas
xor
xchg
sub
mov
test
cmp
push
push
mov
nop
push
sbb
ds
fs
repnz
xor
xor
push
ret
movsb
fdivr
jbe
pop
rclb
aam
mov
add
push
or
and
xorb
pop
jno
add
mov
leave
jl
and
outsl
ljmp
cs
pop
xchg
cmp
or
push
pop
out
shrb
stc
add
nop
xor
inc
mov
sub
xor
rorb
add
cmc
out
xchg
cmp
arpl
std
xchg
mov
adc
add
mov
add
and
fbstp
lcall
mov
xor
xchg
jmp
rcll
cld
lds
mov
shl
push
push
in
dec
inc
add
ljmp
pop
add
andb
test
shrb
nop
jo
daa
out
pop
insb
mov
add
nop
mov
add
xlat
imul
pop
in
add
dec
or
js
add
sub
push
add
sub
xchg
jle
addr16
out
add
dec
cli
pop
sbb
dec
push
test
pop
xchg
inc
mov
ret
ljmp
push
lret
mov
sub
inc
jbe
scas
call
mov
daa
add
jle
outsl
dec
mov
js
adc
outsb
shufps
aaa
pop
fwait
cmp
das
stos
cmpsb
pop
adc
test
mov
jb
jno
jmp
push
call
fisttpll
inc
enter
loopne
push
adc
jg
xorb
xor
sub
addb
incb
ret
and
inc
or
xchg
les
pop
mov
aas
mov
jmp
add
fldcw
cmpsl
sub
add
mov
mov
dec
test
sub
loope
adc
lcall
pop
movsb
cmpl
adc
filds
hlt
out
nop
cmp
mov
or
mov
outsb
filds
popf
jns
mov
pop
add
pop
and
sbb
test
cli
xchg
add
cmp
mov
jg
adc
int3
add
js
fcomps
pop
test
sarl
xchg
xor
mov
out
dec
push
enter
sahf
sbb
lret
je
push
leave
ja
push
and
add
movsl
xor
dec
cmp
arpl
rorb
push
loop
iret
fsubrl
lea
mov
daa
rclb
mov
jl
aaa
std
add
and
sti
notb
cmc
shlb
mov
jle
cmpsb
dec
out
push
cs
or
mov
add
popa
and
or
or
add
cmp
inc
xlat
xor
mov
es
and
and
rorb
dec
sbb
icebp
ret
ds
fadds
mov
int3
dec
jns
mov
cmp
ljmp
lcall
inc
mov
cmc
roll
cmp
pop
dec
mov
xchg
push
dec
adcb
hlt
adc
js
jno,pt
inc
orb
jne
out
jnp
add
shll
in
add
mov
adc
bound
mov
mov
add
cwtl
sbb
add
xchg
or
add
mov
adc
sbb
cmp
add
jno
sti
mov
push
andb
mov
xchg
lock
jmp
pop
add
data16
xor
mov
fsubl
imul
cmpsb
fs
sbb
clc
insl
in
loop
call
pop
lock
sub
jns
adc
pop
pop
movsb
xchg
cmpsl
call
mov
or
negb
cld
inc
dec
scas
xor
add
test
sub
sbb
cmp
xchg
fdivrs
inc
jne
clc
mov
rolb
lret
pop
mov
test
pop
cmp
add
add
adc
cmp
outsb
insb
jl
sub
xor
sub
movb
and
push
sbb
mov
add
fdivr
in
das
roll
es
pop
xchg
add
sbb
cltd
ret
mov
cld
and
les
loop
rolb
push
sti
idivl
leave
mov
dec
dec
mov
sub
push
rcr
or
iret
mov
inc
movsb
sti
les
cmp
mov
popa
cwtl
adc
add
cmp
mov
jmp
std
dec
cmp
out
xorb
add
mov
xchg
add
and
rcrb
adc
mov
pusha
sbb
aas
add
insb
mov
xchg
aas
push
mov
xorb
cmp
sub
add
mov
xor
add
js
nop
cs
in
jns
outsb
stc
add
and
or
hlt
jg
sub
xchg
sub
or
je
pushf
push
jbe
movsb
mov
loope
pusha
inc
loopne
sub
adc
inc
jo
add
pop
arpl
imul
xchg
ret
fwait
and
rcl
test
incl
mov
sbb
das
dec
movsl
orb
jbe
std
cli
daa
xlat
sbb
int
dec
stc
hlt
jp
jo
jne
pop
das
cmpsb
outsl
add
sub
add
ret
mov
inc
xchg
bound
setl
loopne
pop
mov
add
and
push
mov
adc
add
fcomip
cmp
imul
mov
pop
lret
ljmp
xchg
sub
push
movl
lods
adc
sarl
cmp
fwait
and
stc
mov
jg
mov
and
push
add
hlt
test
xor
clc
jb
add
inc
icebp
adc
jo
add
out
sbb
sbb
call
xor
xor
cli
cmpsl
loopne
jle
jmp
loopne
xor
adc
lret
jns
or
xor
sbb
push
and
or
ret
lds
pusha
cmp
jb
xchg
andb
fistps
fldenv
dec
add
fwait
mov
jb
push
test
repz
fcmovbe
mov
insl
and
jl
xor
push
call
dec
add
or
add
jne
sbb
hlt
adc
and
mov
cmp
sub
adc
cli
pop
jge
xchg
sti
cltd
lret
add
adc
push
add
movsb
sbb
xchg
mov
mov
pusha
xchg
mov
call
dec
ret
scas
es
mov
popa
push
and
insb
pusha
pop
stos
shlb
add
int3
dec
lods
lds
notb
fistps
in
adc
mov
and
jno
mov
cmp
sub
bound
xchg
xor
xor
dec
jge
add
push
repz
cs
mov
sbb
and
bound
or
adc
mov
inc
or
xchg
dec
and
cs
shrl
rolb
xchg
jp
clc
xchg
loopne
sub
add
pusha
mov
add
jmp
lahf
mov
repz
sbb
jl
clc
lods
std
outsb
push
js
daa
loopne
adc
adcl
xor
pop
loop
leave
lds
cs
or
mov
cmp
xchg
inc
roll
jle
or
outsb
inc
xor
filds
cmp
mov
rclb
cltd
jo
or
pop
or
add
sub
or
test
pop
pop
add
int3
cmpsl
lea
dec
lcall
mov
add
jae
add
push
enter
mov
dec
jge
and
pop
shll
mov
nop
pusha
divl
pop
nop
mov
test
fnstsw
dec
or
sti
sub
fwait
popf
xor
into
xchg
push
int
cs
leave
icebp
loopne
adcb
mov
add
add
movsb
dec
mov
push
jg
add
loope
inc
ljmp
pop
push
test
notl
in
add
xlat
push
jne
inc
sub
or
shrb
jg
cmp
push
pop
sbb
in
inc
add
pop
into
addr16
jl
dec
mov
iret
outsl
add
mulb
popa
xor
cld
xchg
mov
sub
in
add
cwtl
int3
sub
pop
inc
mov
mov
adc
mov
and
insb
or
mov
das
mov
mov
mov
out
inc
mov
dec
xor
cltd
sbb
int
xchg
call
or
ret
outsb
les
add
inc
mov
negb
adc
add
inc
dec
fldt
jmp
stc
and
jno
das
adc
adc
nop
jp
cmc
xchg
inc
shlb
imul
add
or
mov
imul
mov
sarl
dec
jmp
and
add
push
xchg
in
icebp
push
sbb
cmp
aaa
jp
dec
or
clc
movsl
add
sub
cltd
add
popf
flds
push
mov
add
push
das
and
add
cmp
loope
adc
and
mov
inc
pop
aas
add
fs
add
mov
cli
fwait
repz
xor
push
mov
dec
lret
inc
nop
sub
mov
or
imul
inc
daa
push
mov
or
sub
call
adc
adc
lock
add
roll
adc
dec
adc
jp
inc
add
inc
xchg
faddl
mov
xchg
imul
data16
mov
shll
outsb
test
or
mov
or
xor
mov
lock
aam
subl
pop
cmp
insb
jne
arpl
ficompl
sti
idivb
movsb
jge
rolb
jb
add
xchg
cmp
aas
loopne
add
sub
sub
xor
addr16
lods
and
add
popa
sbbb
jle
aaa
inc
cmp
dec
dec
or
ja
jg
push
push
mov
ret
rcr
cmp
sbb
les
cwtl
mov
xor
pop
fwait
and
inc
hlt
add
sbbl
das
or
add
adc
adc
cs
push
dec
push
movl
inc
mov
jno
push
cwtl
push
nop
lahf
pop
dec
add
mov
stos
add
push
cmpb
push
jmp
scas
cmp
imul
repz
and
mov
pop
push
subb
iret
inc
subb
int
scas
or
pusha
add
xchg
loopne
xorl
xchg
sbb
in
popa
ret
xchg
jae
push
add
push
shl
ss
repnz
dec
sub
js
insb
cmp
loop
arpl
outsb
jmp
jo
fisttpl
push
add
aas
pusha
test
inc
shrb
cmp
es
adc
mov
cmp
push
loop
orl
enter
testl
push
or
add
lods
sbb
rolb
add
pop
int3
xor
fiadds
mov
xchg
push
adc
nop
aaa
jge
roll
shl
adc
add
das
sti
pop
in
lods
mov
cmp
out
and
push
dec
test
mov
ss
push
das
out
xor
pop
nop
adc
dec
cmp
orl
push
cmpsl
pop
add
inc
mull
mov
ja
push
lret
or
and
stos
mov
andb
add
pop
xchg
divl
mov
lret
lock
rolb
sahf
inc
jl
aas
mov
add
lcall
add
xor
loopne
push
mov
xor
js
jle
outsl
test
xor
pop
loop
sub
xchg
jmp
cmp
shlb
and
jg
jne
mov
and
cmp
dec
call
jp
imul
adcb
jecxz
out
push
jno,pn
sbb
shlb
sub
sub
imulb
fisubrs
jecxz
pusha
add
fnstcw
lahf
sbb
or
ljmp
or
add
jnp
push
sbb
cmpsl
data16
fists
pop
cmp
call
ja
xor
insb
mov
mov
xchg
scas
cwtl
and
cmpsl
adc
jmp
xor
xchg
mov
pop
jg
daa
sahf
jecxz
pop
loopne
sub
lcall
or
add
pusha
lret
jno
stos
fisubs
mov
mov
addr16
aam
shlb
cmp
xchg
cwtl
pop
add
push
out
pop
sarl
add
jae
jg
sub
shr
icebp
and
cltd
xor
add
mov
inc
add
push
or
mov
sbb
call
jge
adc
push
cmp
mov
mov
es
xchg
adc
add
mov
mov
add
xorl
or
in
cmp
adc
cmp
cmc
inc
add
int3
es
fisttps
js
cwtl
add
add
rclb
aaa
add
cli
lret
hlt
adc
imul
mov
xlat
out
cmp
push
hlt
mov
subl
lea
cmp
pop
add
pop
fbstp
sbb
xor
or
test
jb
sub
jge
add
sarl
inc
pusha
add
stos
ret
lcall
call
call
mov
mov
in
icebp
stos
jmp
ffree
sahf
pop
insl
negl
in
jb
add
adc
mov
mov
mov
pop
add
mov
xor
mov
cltd
loope
fisubs
sbb
fs
inc
test
movsl
fiadds
pusha
fsubl
mov
mov
cmpsb
sbb
push
out
mov
les
jae
shlb
add
xchg
rolb
cld
out
imul
push
adc
and
sub
sbb
stos
mov
xorl
in
sub
jp
ja
add
addb
insb
inc
push
add
cmp
xor
inc
sbb
mov
cld
sti
add
mov
test
xchg
pop
fwait
push
xor
ja
push
cmp
push
xor
lods
test
or
pop
sbb
mov
jmp
jns
cltd
loop
mov
mov
pop
add
mov
add
jg
sbb
sub
sbb
shl
les
dec
sub
js
aaa
cmp
push
cmp
movsl
pop
inc
outsb
sbb
ficompl
mov
icebp
or
and
dec
pop
lahf
mov
stc
adc
inc
mov
out
js
scas
insl
add
pop
in
add
stos
mov
fwait
sarb
hlt
aas
add
dec
push
and
loop
js
faddl
sub
lcall
mov
mov
pop
test
xor
sub
cmpl
add
in
sti
inc
add
idivb
push
leave
xor
pop
mov
sti
xor
mov
je
pusha
add
test
ret
int3
je
push
cmp
test
cmp
or
in
and
inc
add
sbb
shlb
cmp
dec
mov
jb
pop
xor
hlt
movsl
into
add
push
or
mov
in
cmp
std
cmpl
repnz
cltd
xor
push
push
test
out
xor
cmp
xchg
out
loop
lret
ficomps
xlat
dec
push
pop
xor
adc
sbb
fildl
fmull
stc
xlat
cmp
loopne
and
sahf
inc
addb
ret
mov
loope
pop
cld
repz
xor
jo
fs
pop
cmc
sbb
loopne
sbb
scas
inc
scas
and
imul
pushf
add
push
cs
xor
push
ret
jb
cmp
push
ss
lret
cld
push
loope
mov
or
add
mov
in
add
mov
pusha
lcall
test
addl
sub
cmpsb
or
int
jg
add
push
test
andl
ljmp
leave
out
sbb
cld
std
add
lock
scas
add
cmc
divb
out
lds
add
xchg
mov
paddq
push
mov
add
pop
jecxz,pn
loop
push
jne
add
push
mov
mov
jle
repnz
add
cwtl
xor
mov
lcall
add
ja
or
insb
enter
in
icebp
test
add
movsl
dec
pop
cs
inc
push
xchg
add
repz
popa
dec
clc
lds
imul
rolb
out
loop
inc
mov
or
fstpt
xchg
test
sub
clc
add
or
ljmp
add
adc
xchg
jae
add
lret
sar
dec
lret
add
sbbb
andb
sub
enter
mov
sub
pusha
cmp
enter
fs
lods
mov
mov
mov
sbb
loope
ds
ja
je
sbb
test
int3
nop
jbe
and
pop
fiaddl
and
lcall
xor
loopne
push
fldl
test
out
xchg
or
add
insl
les
add
aad
shll
cmp
mov
leave
mov
mov
inc
add
lret
cltd
dec
mov
loopne
jg
jnp
imul
pop
scas
js
push
stc
and
cmp
movsl
cmp
mov
mov
push
test
aas
or
insb
mov
sbb
in
arpl
testb
sbb
sbb
sbb
jg
xchg
test
mov
dec
jmp
pop
js
fiaddl
aaa
enter
xor
or
mov
adc
insl
pop
stos
cli
and
cmpps
cmpsl
cmpl
inc
push
data16
pusha
inc
push
xor
fidivrs
ljmp
mov
repz
xor
add
xchg
std
sti
push
ret
jnp
mov
push
cmp
imul
jge
aas
roll
mov
xchg
add
lret
jo
push
xchg
mov
cmp
in
add
inc
ret
xor
inc
jp
pop
cli
in
cmp
sarb
lcall
daa
cmp
mov
inc
lahf
xchg
add
cmpsl
pop
icebp
incl
push
out
add
fcmovu
fmul
xchg
sub
iret
mov
subl
outsl
aam
adcb
leave
dec
add
rcl
pop
push
sub
fcompl
loope
arpl
mov
add
xor
adc
jns
pop
jl
xor
cmp
mov
sub
jg
and
lods
pusha
je
or
xor
sub
mov
cwtl
hlt
mov
add
push
fdivrl
xor
sbb
loope
mov
pop
xchg
add
pop
iret
mov
cwtl
dec
adc
cmp
enter
push
fstl
sti
aas
xchg
and
mov
add
cmp
xchg
inc
enter
in
or
das
xchg
cmp
mov
les
jl
add
cmp
std
cli
jl
add
sti
push
repnz
sub
add
into
and
lods
or
cmpb
xor
imul
dec
out
dec
pusha
mov
cmp
in
daa
jle
inc
fs
and
cmp
rcr
jl
and
lea
ret
xchg
mov
nopl
mov
clc
addb
cmp
pop
in
add
xchg
sub
shrb
imul
jo
notl
cmp
dec
aaa
mov
dec
adcb
push
pop
gs
sub
lcall
jbe
lods
insl
ret
mov
stos
or
movsl
scas
inc
movl
lods
sbb
call
outsb
aad
jmp
mov
cmp
stos
fs
mov
adc
add
pop
stos
movsl
xchg
add
shlb
test
cmp
bound
inc
pop
out
arpl
popf
or
out
add
loope
fsubs
daa
cmp
pusha
ret
adcb
icebp
dec
pop
pop
add
and
xor
push
mov
ds
subl
mov
sbb
push
add
xchg
pop
sbb
dec
popa
loopne
jl
sub
cmpb
xchg
mov
mov
mov
adc
call
sbb
adc
pop
pop
pop
inc
mov
pop
fdivr
fiadds
mov
pusha
mov
cmp
sub
adc
insb
xchg
sub
add
add
pusha
aaa
mov
cmp
dec
and
add
sbb
add
sub
xchg
lods
and
or
pusha
loopne
jnp
add
xchg
inc
sub
adc
xlat
repnz
inc
add
push
jp
je
addb
adc
mov
cmp
ret
mov
sbb
xor
xor
or
mov
aaa
add
gs
mov
hlt
pop
fldl
cmpsb
mov
pusha
push
add
cli
lods
testl
pop
jge
imul
pop
clc
and
add
and
xchg
test
rclb
xchg
cmovo
sbb
stc
mov
pop
mov
scas
cmp
inc
add
sub
add
xor
lock
jp
add
aas
sarl
inc
hlt
mov
mov
adc
xchg
add
push
sbb
cwtl
xorb
out
or
push
pop
ret
xchg
xor
mov
inc
repz
cwtl
inc
add
and
inc
iret
mov
cmpb
lods
lods
lock
add
mov
data16
clc
mov
xchg
mov
orb
and
std
js
outsb
shll
pop
fbstp
pop
inc
mov
daa
push
aaa
jmp
call
les
xchg
cld
cli
sbb
add
out
or
fistpl
add
ss
xchg
pop
aas
loopne
orb
jg
push
enter
sbb
xor
xor
inc
test
cmp
inc
or
push
jno
jp
aas
mov
mov
push
rcll
jbe
outsl
mov
out
movsl
call
add
nop
icebp
andl
andl
and
ljmp
push
add
xor
dec
cs
out
out
rorl
push
push
int3
cmp
cmpsb
jne
add
adc
ds
loop
shrl
push
mov
xor
pop
in
mov
lcall
add
cmp
jmp
or
movsb
xchg
or
lret
xchg
inc
popa
loopne
add
cwtl
sbb
jbe
sbb
loopne
addl
jecxz
shll
pop
int3
or
jnp
or
or
inc
mov
iret
push
call
lds
sbb
in
xor
mov
sub
cltd
repz
iret
mov
js
mov
cmp
aas
cmp
inc
add
pop
fwait
jg
loope
in
jae
add
jne
dec
cwtl
pop
fadd
push
mov
pop
push
rolb
add
lods
sub
xlat
rol
inc
xchg
add
mov
add
push
imul
xor
out
andb
add
fldenv
int3
adc
adc
mov
xchg
sbb
mov
pop
mov
pop
add
addr16
adc
fwait
dec
loopne
lcall
ret
sbb
cmp
jnp
lahf
and
loopne
adc
fldt
xchg
xchg
pop
insb
test
mov
testb
add
dec
stos
ds
aaa
mov
pop
sub
test
sbbb
fs
xchg
aad
sub
push
add
out
xorl
sub
pop
shl
push
sub
pushf
daa
icebp
cld
aaa
add
in
mov
rolb
lcall
cmpb
ja
into
loope
movsb
in
shrb
lldt
movsb
xor
test
stos
adc
loope
mov
pop
jge
add
adc
add
add
add
leave
testl
jbe
pushf
jne
fs
subl
dec
call
lods
add
gs
int
sti
in
xor
mov
push
xchg
ret
loopne
rclb
test
push
dec
inc
push
pusha
scas
adc
ret
jl
cmp
lret
add
xchg
inc
sbb
leave
xor
mov
inc
fcomps
into
loop
fcomps
sbb
repnz
inc
cmp
mov
iret
sbb
lret
inc
add
ja
pop
roll
sbb
add
cmp
loope
add
insb
push
inc
add
ret
pop
std
xlat
testb
into
subb
add
pop
outsl
stc
pop
xor
sbb
rol
mov
jb
pop
add
cmpsl
xor
add
shl
daa
imul
add
inc
aas
sub
and
add
inc
xchg
cld
add
cs
nop
dec
insb
in
cmp
cli
mov
mov
loopne
cmp
or
int
adcb
or
subb
sub
stc
sti
adc
add
in
daa
das
add
jno
push
xchg
jb
xchg
not
in
int3
or
shlb
push
cmp
add
xchg
in
mov
add
int3
mov
cmpsl
add
pushf
xchg
pop
lea
add
sbb
add
jbe
data16
aas
mov
and
mov
add
enter
mov
cld
adc
xchg
add
fdivrl
pop
orb
xor
mov
roll
jo
jmp
mov
inc
and
lahf
xor
xchg
addps
je
adc
xchg
add
fisttps
cwtl
test
jns
shlb
ja
dec
sbb
int3
roll
iret
shll
pop
gs
pop
mov
lock
insl
xor
dec
mov
add
mov
adc
jp
push
icebp
stc
pop
mov
into
cmpsl
cmp
lods
mov
mov
fidivrs
or
pop
xchg
pop
ds
imul
mov
jo
sti
sbb
into
and
mov
sarl
incl
sbb
out
and
pop
in
sbb
es
add
icebp
faddl
scas
inc
mov
sbb
xchg
ret
icebp
ret
pop
shll
sbb
popa
es
repz
add
dec
aad
pushf
ss
add
mov
jmp
jbe
add
xor
in
adc
insb
or
ljmp
jge
adc
dec
test
icebp
add
ljmp
add
js
jge
movups
pause
sbb
scas
dec
lret
in
int
mov
movsl
outsb
push
cmp
add
adc
mov
add
xor
inc
test
xchg
cmpl
idivb
in
and
mov
add
xchg
loopne
rolb
pop
ja
scas
adc
cmp
adc
outsb
dec
cmpb
jecxz
ja
push
sbb
lods
bound
add
repnz
outsl
add
std
test
push
sbb
cmpsl
pop
sbb
in
push
xchg
cmc
incl
push
jo
cmp
add
sub
sub
ljmp
roll
lahf
add
enter
or
add
in
push
or
pmaxub
cmp
bound
orb
pop
dec
inc
pop
add
fs
sub
push
cwtl
sti
pop
xchg
add
inc
cmpsl
mov
addr16
mov
mov
mov
add
mov
xor
pop
addb
dec
pop
pop
mov
movl
test
adc
xchg
cmp
add
mov
out
addb
int
push
mov
rorl
cmp
adc
xchg
add
in
divl
jbe
jl
add
adc
pop
add
push
jg
pop
or
cmp
xchg
mov
std
out
enter
mov
stc
jp
add
mov
pop
xor
pusha
lahf
pop
add
dec
mov
pop
mov
scas
push
je
cmpsb
movsl
xlat
jp
sarl
inc
push
es
adc
stos
mov
push
add
shll
xchg
mov
outsl
xchg
mov
mov
popf
mov
pop
pop
int3
sbb
repnz
leave
sub
pushf
xor
mov
cmp
push
push
mov
in
loopne
out
mov
push
jbe
mov
push
mov
add
dec
aaa
fdivs
dec
add
jno
gs
jg
rclb
cmp
cmp
pop
and
and
rcr
imul
mov
out
inc
stos
ss
js
sbb
or
andl
xor
scas
aad
inc
negb
add
pop
gs
loopne
push
mov
imull
sub
push
inc
and
shlb
add
mov
stos
repnz
mov
jmp
adc
aas
jbe
mov
hlt
add
jp
mov
test
inc
push
mov
sub
dec
pop
inc
into
jae
aad
shll
jecxz
mov
imulb
pop
filds
pusha
adc
lret
dec
pop
cmp
lods
sub
xchg
mov
add
fdivs
and
fdivrl
push
out
or
sbb
sub
dec
mov
add
xor
mov
cmp
shrl
or
test
mov
movsl
mulb
add
test
aaa
add
in
inc
push
or
xor
cmp
aad
fiaddl
cmp
xchg
push
pop
xor
jg
mov
jb
sbb
pusha
add
mov
pop
shll
sub
push
pop
repz
lret
addr16
add
popa
xchg
sbb
lods
rorl
xchg
mov
loopne
sti
popa
and
or
inc
xchg
dec
inc
pushf
cs
cli
add
or
mov
subb
lock
gs
ds
in
add
lcall
enter
mov
pusha
hlt
push
sbb
aam
cmc
movsb
imul
add
pop
mov
push
jmp
xor
add
mov
add
mov
adc
data16
sbb
dec
pushf
add
push
mov
jb
add
add
push
arpl
aaa
add
mov
dec
add
inc
xchg
and
cli
push
xchg
mov
into
loopne
push
enter
repnz
ds
add
iret
int3
inc
sbb
cmpsl
push
pop
xchg
lret
idiv
lods
and
add
jp
inc
mov
cmp
mov
dec
add
mov
test
mov
add
int3
nop
push
cmp
sahf
add
inc
or
sbb
push
out
sbb
add
cs
les
das
xor
jbe
cmpb
pop
loope
jns
bound
jno
sub
test
xor
xor
push
push
mov
xchg
cmpl
test
fcompl
out
mov
ficoms
xor
inc
movsb
mov
out
and
fs
inc
lods
cmp
add
pop
gs
roll
dec
int
push
lcall
pop
fisubrs
cmp
xchg
and
xor
sub
jns
add
out
dec
add
loop
iret
roll
in
xchg
jae
xchg
add
push
cmc
xor
andb
str
or
sbb
cmp
popf
les
cwtl
jl
add
rolb
cmp
fwait
es
jle
or
xchg
cmpb
cmp
decb
nop
sti
add
cmpsb
mov
iret
jl
xor
inc
pusha
aaa
jo
loop
jo
mov
adc
mov
xor
repz
adc
dec
ja
pop
pop
ret
dec
pop
xor
outsl
inc
xlat
js
xchg
or
int3
ja
push
scas
jno
sub
xchg
sub
or
loopne
leave
push
loope
in
stos
pusha
cmovo
pop
mov
scas
in
fidivs
je
mov
dec
mov
fildll
push
add
sar
inc
add
mov
sub
mov
fwait
xor
cld
cmp
cs
add
and
cli
scas
mov
add
test
xchg
icebp
fcoms
stc
es
lcall
cmpsb
outsl
push
roll
push
loope
mov
add
es
aas
lds
xchg
sbb
and
sbb
ret
push
roll
mov
mov
out
xorl
stc
mov
pop
fincstp
add
mov
and
vcvtdq2pd
rolb
push
imul
cmp
xchg
addr16
add
inc
mov
movsb
sub
subb
cmp
push
cmp
sbb
cld
inc
inc
imul
push
dec
fisubs
test
daa
add
mov
jno
test
nop
adc
or
and
mov
sarl
rcr
jne
shr
nop
push
add
mov
cmp
add
jp
xchg
movsl
sub
jecxz
add
mov
cmp
in
out
jbe
jmp
in
mov
sbb
push
stc
fbld
xlat
xor
jbe
lret
jecxz
fwait
in
jmp
les
mov
cmp
mov
dec
cmp
dec
cli
in
adc
mov
arpl
rcrl
icebp
cmp
add
add
add
daa
mov
adc
xor
dec
add
mov
jp
mov
inc
cwtl
or
push
and
add
mov
popf
nop
aam
mov
outsb
insl
out
sbb
cmp
lock
pshufw
xchg
shlb
xor
add
aas
mov
aaa
add
or
lock
bound
push
cld
insl
lcall
sbb
test
lds
ret
mov
fwait
or
into
add
push
adc
mov
sub
sub
and
and
ss
je
mov
iret
and
es
add
scas
movl
cld
push
roll
pop
add
add
popf
subl
pop
cltd
jge
pusha
pop
push
cmp
arpl
in
or
leave
fsts
andb
pop
popf
dec
and
add
mov
or
jg
jb
lock
sbb
or
mov
mov
std
push
rol
and
add
cli
pop
dec
sub
sbb
jg
mov
mov
xchg
jmp
pop
test
clc
mov
and
pop
push
add
ss
test
jnp
and
mov
mov
and
sub
lds
fdivr
add
arpl
int
dec
mov
or
inc
push
popf
mov
add
cli
dec
std
rolb
int3
ror
pop
cmpb
pop
dec
adcb
test
mov
imul
aaa
mov
shlb
icebp
test
fsubr
and
add
aas
inc
mov
add
add
mov
xor
enter
add
mov
repz
fists
add
out
adc
cmp
ds
mov
inc
adc
mov
and
leave
add
or
pop
shll
insl
dec
mov
imul
pop
aaa
mov
push
popf
mov
cmp
xchg
add
mov
dec
pop
add
add
mov
ja
inc
nop
fadd
adc
incl
adc
xor
shrb
mov
mov
mov
addr16
out
mov
cli
jae
fistl
push
dec
lahf
bound
fadds
pop
xchg
inc
out
push
add
push
pushf
cmc
add
mov
add
aad
filds
rcll
test
ret
add
neg
and
adc
add
sbb
pop
sub
add
sub
mov
pop
push
sbb
in
add
xor
aas
add
add
push
cli
enter
add
jne
les
sub
cld
dec
out
sbb
cltd
out
add
mov
sub
test
popf
inc
xor
push
add
call
paddsw
aaa
sar
cmpsl
fsubrs
mov
mov
and
or
xchg
stos
sub
imul
lret
test
jae
push
mov
popf
mov
insl
enter
lea
testb
add
xchg
jl
pop
iret
cmpsb
add
sbb
push
test
popf
mov
cs
jl
les
cmp
add
add
sub
cltd
cmp
push
out
pop
ss
inc
mov
and
pop
push
and
add
movsb
mov
je
add
mov
inc
jle
ljmp
loope
jge
sbb
mov
lods
ret
pusha
xlat
rcrb
je
sbb
gs
add
fwait
inc
out
or
xor
xorl
out
popa
cmp
jecxz
mov
add
xchg
test
add
add
cmpsb
sub
xlat
mov
or
aad
scas
mov
add
test
cmp
jno
adc
mov
dec
add
aas
aam
rolb
push
fmull
add
outsl
loopne
push
xorl
addl
add
test
repz
lahf
test
sahf
xor
cmpsb
mov
pop
jne
dec
sub
xchg
mov
inc
add
jecxz
add
pop
xchg
jno
lcall
mov
add
aad
dec
sbb
jle
test
outsb
bsr
test
hlt
add
mov
push
test
add
lods
daa
int
mov
add
push
pop
push
sbb
add
lcall
add
cmpsl
cwtl
pop
loopne
push
or
lret
add
ds
ja
add
cld
jmp
std
cmc
in
add
aaa
xchg
scas
adc
lods
shlb
mov
cmpsb
filds
popa
cli
add
dec
cmp
sub
int3
mov
pop
cs
xor
inc
cmp
cmp
push
cmp
push
mov
pop
add
jb,pt
or
or
ficoms
int3
out
pop
imul
fwait
jno
clc
pop
cmc
push
sub
pop
push
xchg
mov
imul
dec
or
xchg
adc
xchg
cmpb
or
dec
jl
add
ss
xor
daa
std
fwait
lahf
add
cmp
sub
jp
xor
push
repz
ljmp
pop
out
xchg
filds
adc
ret
addr16
and
int3
or
sub
cmp
out
xchg
pop
mov
xlat
push
or
xchg
pushw
pusha
addr16
les
call
xchg
pop
out
mov
outsl
push
add
inc
xchg
cli
sub
pop
mov
add
xor
pop
aam
xchg
flds
lahf
repz
push
mov
pusha
test
push
jg
fs
mov
loope
mov
popf
scas
in
loop
pop
rol
mov
xchg
add
xor
test
add
mov
inc
lea
and
xchg
jg
add
sub
movl
scas
testb
adc
mov
push
pushf
jmp
into
mov
inc
shrb
xchg
add
jmp
das
push
mov
and
sbb
xchg
jg
cmp
inc
stos
out
jge
and
jb
mov
rcrl
insl
je
add
sub
and
push
jo
mov
sub
cs
fiadds
dec
sbb
icebp
lret
adc
aam
icebp
mov
int3
mov
test
cltd
pushf
pusha
adc
add
mov
rorl
or
mov
pop
out
lret
jo
loope
push
xor
sub
aad
and
lret
sub
dec
xchg
inc
sbb
xor
cmp
jecxz
inc
int3
xchg
das
xor
add
mov
pop
pop
mov
bswap
sub
add
in
add
cmp
lods
roll
dec
pop
ds
test
xchg
add
push
add
in
add
xchg
mov
int3
push
and
pop
in
movsb
inc
dec
inc
xchg
or
leave
rcrb
mov
push
xchg
jmp
mov
movsb
jno
out
mov
rorb
out
loope
add
cld
add
mov
cmp
loope
mov
iret
out
in
pushf
cli
inc
or
movsl
pop
enter
xchg
mov
lcall
sbb
iret
push
xchg
pop
sub
mov
dec
inc
push
sbb
add
outsl
shll
or
orb
jo
test
jno
in
sbbb
cwtl
lods
scas
out
mov
cmpsb
jmp
mov
cmp
out
je
add
rolb
dec
adc
adcb
push
push
lods
xor
cwtl
jne
lea
jmp
xor
xor
dec
adc
push
or
and
in
sbb
jbe
add
sub
xchg
inc
das
in
jb
add
jne
leave
fidivl
push
add
aad
shl
push
xchg
es
out
adc
and
add
pop
nop
in
ljmp
push
mov
xchg
add
dec
sub
xor
popa
mov
scas
imul
jge
sbb
pusha
mov
or
mov
jle
or
ljmp
addl
lahf
dec
je
rorb
mov
add
imul
push
aad
jle
sbb
out
add
daa
shlb
fnstcw
adc
mov
xor
add
mov
mov
add
aam
rclb
sti
pop
repz
adc
and
sub
mov
cmp
mov
loopne
insl
lods
fwait
stc
pmaxub
fldl
mov
and
sbb
inc
leave
pop
sub
push
fnstcw
xchg
and
xor
out
in
sub
add
dec
push
jns
daa
lcall
add
int
insl
or
popf
jns
shlb
sbb
ror
loopne
pop
add
mov
sub
sahf
add
icebp
outsl
cli
jle
and
jbe
ret
push
add
lds
shll
int
push
mov
adc
leave
js
jbe
or
shr
cmpps
add
lods
sbb
push
mov
fstps
les
lds
jle
adc
xchg
scas
xchg
stos
cwtl
xor
jbe
popf
cmpb
sub
movups
in
add
js
sub
push
mov
mov
pop
cmp
and
or
mov
andb
mov
in
and
mov
mov
lea
xchg
push
repnz
cmp
add
mov
outsl
add
gs
xchg
lea
subl
pop
iret
jmp
sbb
xor
or
cmp
xor
pop
mov
push
aaa
and
mov
stc
mov
mov
scas
mov
or
and
xor
iret
cmp
sbb
leave
mov
dec
add
test
andb
bound
imul
dec
jne
push
repnz
xchg
add
pop
scas
xchg
jno
add
add
push
enter
movl
dec
test
cmpsb
into
dec
fsubs
jle
add
outsl
rcl
out
add
scas
or
pop
sbb
jecxz
inc
andl
int3
ja
test
es
add
aaa
add
movl
shlb
ss
xchg
into
cmp
lea
and
mov
dec
push
push
inc
ret
loopne
fsts
cltd
add
sub
lret
jl
push
test
add
cmpsb
fwait
mov
and
add
inc
loopne
std
add
add
xor
inc
ret
pusha
mov
fisttpll
stc
add
daa
ficompl
fldl2t
int3
dec
loope
fucom
rcll
mov
push
scas
loop
push
cmpsl
xor
stos
dec
std
jg
add
out
push
shlb
add
dec
fs
test
mov
or
daa
cmpsb
shlb
xor
lahf
add
fdiv
mov
push
pop
adc
sbb
jmp
pusha
dec
shl
push
xor
sub
mov
mov
and
jmp
ret
cmp
xor
icebp
test
lsl
inc
inc
push
lds
lahf
mov
add
repz
pop
negl
jmp
aad
push
sbb
or
pop
jg
add
in
gs
mov
and
xchg
leave
cld
push
jnp
aas
jp
rcrl
sub
pop
push
call
fwait
or
daa
cmp
fstps
mov
lret
and
add
pop
pop
aaa
add
not
in
pop
sub
inc
jae
lret
add
outsb
in
cltd
push
repnz
test
test
outsl
sub
dec
jae
dec
bound
clc
pop
jl
dec
add
xlat
fwait
jle
pop
add
and
in
jg
fprem
mov
es
mov
sbb
and
pop
aam
fsubrl
adcb
mov
lret
push
jmp
cwtl
add
call
add
cli
subb
xchg
sahf
inc
jmp
mov
enter
cmp
cwtl
xchg
movsb
xor
cld
nop
push
or
add
insb
in
sti
mov
daa
push
fdivs
xor
mov
add
aas
lret
mov
add
lcall
push
adc
xlat
add
inc
cwtl
pop
sbbl
inc
pusha
pop
mov
pop
jp
xor
rolb
mov
loopne
lret
mov
dec
jbe
adc
les
add
cltd
xor
push
add
xorb
test
inc
cmp
inc
add
add
rolb
ficomps
cmp
add
lret
or
mov
nop
adc
mov
cmp
mov
in
loopne
imul
xchg
push
faddl
or
in
fmull
add
sahf
jnp
loope
cwtl
xchg
xor
mov
add
push
inc
fnstsw
fsubrl
xchg
jo
inc
loopne
push
mov
icebp
lock
cwtl
sbbl
xchg
ror
or
inc
sbb
popf
cmc
dec
xchg
mov
jnp
aaa
in
in
add
stos
mov
inc
jbe
mov
push
mov
adc
push
add
or
inc
add
xorb
xor
sub
push
aaa
adc
add
mov
test
incb
cmp
jmp
dec
jecxz
pop
add
jne
dec
adc
jg
add
repz
pop
xchg
xchg
push
add
lret
pop
int3
test
dec
cmp
inc
fmull
pop
in
push
imul
sbb
fiaddl
and
movsl
sub
mov
pop
and
mov
add
gs
jge
add
mov
mov
ret
lahf
cwtl
pop
inc
xor
ds
movl
xor
test
mov
cmp
adc
in
pop
jne
roll
fsts
loop
sub
xchg
mov
push
pop
rolb
pop
out
push
add
negb
add
jecxz
and
and
stos
fiadds
xor
daa
mov
inc
push
add
ds
add
lds
sbbl
pop
inc
mov
fstpl
jmp
push
jl
shll
loope
add
movsl
mov
jmp
bound
pusha
js
gs
jp
or
cmp
jno
sbb
or
sbb
sbb
and
adcl
mov
jae
cld
xor
ds
test
dec
xchg
outsl
ret
clc
imul
jle
add
out
test
fists
ret
outsb
mov
dec
ja,pn
xchg
cwtl
mov
inc
lcall
adc
ss
sbb
mov
test
sub
sbb
sbb
repnz
arpl
cmp
inc
lcall
dec
mov
and
push
xchg
repnz
pop
add
jnp
pushf
fisttpl
pop
add
push
enter
add
pop
loope
dec
ja
rorl
adc
xchg
adcb
mov
leave
sub
adcl
sbb
shll
int3
adc
and
test
pop
sbb
xchg
inc
xor
push
pop
xor
je
add
jns
out
ljmp
and
shll
xchg
xor
jns
add
or
sub
inc
xor
mov
incb
stc
je
dec
xchg
dec
sbb
cmp
cmp
and
pop
cltd
add
loope
and
adc
mov
cmpb
inc
dec
push
cmp
mov
push
shlb
les
ljmp
cmp
mov
or
pop
sahf
popa
xor
cwtl
sbbb
and
add
mov
and
sbb
stos
scas
jo
int
and
mov
add
pop
fcompl
aaa
sub
xchg
fistl
jo
rorl
pop
cmp
shl
dec
add
addr16
cmp
add
ret
cld
mov
int
outsb
nop
addr16
mov
aad
inc
clc
xor
data16
clc
add
or
lahf
or
sub
add
jae
add
add
jns
inc
or
ret
push
add
xor
sahf
cmp
sbb
pop
mov
setl
stc
jmp
mov
pop
add
in
rcl
nop
leave
cmp
add
bound
fiaddl
clc
mov
push
pop
in
add
and
out
push
es
add
xor
ljmp
cmp
inc
sahf
dec
dec
mov
dec
ja
jmp
fs
push
loope
xchg
adc
in
inc
add
and
pusha
in
add
or
movsb
add
decb
ret
add
add
int3
cmp
add
push
push
add
mov
out
xchg
repz
cmpsl
push
add
xorb
cmp
pop
andb
add
fs
lock
sti
xchg
cli
or
rcll
addr16
pushf
fnstcw
push
lods
xor
jne
add
adc
mov
enter
rcr
and
mov
add
imul
int3
scas
fdivr
call
or
cmp
int
pusha
testb
dec
xchg
outsl
add
push
lods
jns
jo
mov
and
mov
add
dec
mov
loop
and
mov
sbb
add
xchg
roll
rorb
daa
add
ja
jae
dec
mov
xor
add
psubusb
call
outsl
mov
jmp
add
in
or
xchg
cmp
sub
pop
jnp
mov
sbb
sub
popa
testb
pusha
cmpsl
imul
adc
loopne
bound
orl
push
repz
add
js
movsb
sub
into
repnz
pop
add
fwait
lcall
add
ds
inc
xchg
add
out
les
pop
ror
push
push
sahf
xor
loopne
iret
add
mov
in
push
fnstenv
enter
xorb
jecxz
cwtl
in
pop
inc
aaa
roll
aas
roll
add
inc
outsl
sbb
cmp
push
adc
xchg
scas
pop
test
xor
push
or
xchg
cmp
pusha
mov
mov
call
aad
sbb
dec
xor
shlb
int3
lret
xor
shl
outsl
jnp
mov
adc
or
adc
pop
ret
inc
jnp
cmp
and
adc
add
iret
and
sub
mov
mov
in
addb
jg
in
mov
inc
cmpb
pop
adc
xchg
add
mov
cmp
push
addr16
push
stc
adc
sub
pop
enter
cmpsl
pop
je
inc
push
add
add
arpl
lcall
mov
je
nop
add
push
add
clc
aas
daa
rolb
and
sub
sbb
inc
sbb
jl
jo
add
sub
popa
hlt
out
loopne
sbb
enter
sub
xor
pop
subb
add
popa
ret
incb
push
call
in
outsb
xchg
cmp
sub
jns
add
sbb
jbe
push
roll
addr16
pop
outsl
add
mov
popa
testb
test
popf
push
inc
mov
roll
subl
cld
loop
mov
int
mov
add
cltd
xor
clc
mov
pusha
pushf
adc
arpl
sub
mov
stos
hlt
inc
mov
or
pop
mov
mov
sub
add
imul
sbb
iret
inc
add
cmp
mov
out
cs
jl
push
fwait
movsb
lods
inc
jae
cmp
int
lcall
mov
mov
push
mov
ljmp
adc
pop
mov
mov
add
xchg
push
sub
mov
and
test
inc
mov
fsubrs
dec
test
add
push
adc
xor
movl
imul
adc
and
es
or
or
shrb
stos
push
push
xor
pop
xchg
xchg
sarb
pop
cmp
ljmp
jnp
push
enter
jl
pusha
dec
xor
push
sbb
sub
cmp
xor
lock
icebp
and
jl
sbb
je
pop
and
push
sub
popl
push
popa
cmp
hlt
cli
add
mov
rol
xchg
mov
add
sbb
push
sub
jne
add
xor
adc
push
js
add
push
test
xor
dec
jo
mov
adc
js
push
decb
nop
mov
cmp
or
jo
and
dec
push
jl
sub
add
and
and
jecxz
pop
sbb
xor
andl
call
cmp
aas
push
xchg
xchg
ss
je
pop
cmp
fwait
cmp
inc
or
push
sub
xchg
pop
inc
inc
mull
clc
push
ret
lods
es
data16
ret
imul
cmpl
cmpsb
adc
mov
loope
dec
loop
pusha
and
outsl
loopne
dec
fldl
imul
xor
mov
and
lea
cmp
pushf
insl
dec
popa
and
fisttps
add
jecxz
cmp
adc
aas
mov
mov
mov
xchg
add
cli
xor
rcrb
ljmp
cmp
adc
pop
mov
push
or
mov
ljmp
nop
and
testb
cld
test
enter
add
pop
lret
ljmp
sub
xor
fsub
pop
inc
sbb
push
inc
xchg
mov
sub
mov
in
mov
sahf
mov
ja
jno
jb
jns
push
outsb
cwtl
or
or
pop
push
lock
test
add
lret
loopne
adc
int
mov
pop
hlt
or
fistpl
mov
add
outsl
jmp
in
adc
mov
ja
cmp
into
lods
gs
je
sub
jno
cld
sbb
mov
out
add
inc
ficoml
lock
loopne
push
xchg
roll
xor
ret
xor
dec
add
rep
lods
dec
mov
ljmp
inc
daa
cmp
cmp
addl
xchg
xlat
incb
sub
dec
inc
jmp
push
sahf
push
insl
adc
or
mov
incb
loope
aad
xlat
add
js
inc
lods
jae
addl
push
xchg
sbb
xchg
and
dec
popa
add
into
dec
call
add
or
lock
cmpb
popa
add
rolb
sbbb
and
add
fisttps
sar
cmc
not
in
testb
xchg
pop
xchg
sbb
or
sub
xchg
in
int3
jns
repz
jge
outsl
out
mov
in
call
lock
lahf
jb
out
vmread
push
jns
clc
repnz
add
insb
jle
push
repz
inc
adc
movsb
pop
sbb
daa
stos
add
insb
testl
add
dec
nop
cmc
push
mov
rcrb
or
dec
lret
mov
sub
cmpsb
pushf
push
pop
jnp
out
add
xlat
loop
or
sbb
pop
push
icebp
jns
add
mov
pop
pusha
loopne
ret
loop
mov
rcrl
dec
xchg
add
jno
ds
adcl
add
push
sbb
push
jo
nop
cmpsb
or
out
or
into
pushf
rcl
xchg
jns
add
arpl
add
shlb
xchg
push
arpl
repz
xor
clc
addb
cltd
stos
insb
push
lock
fistps
jno
addl
imul
add
bound
dec
xchg
add
in
test
lcall
adc
iret
mov
pop
adc
scas
or
aam
xor
clc
add
insb
jecxz
sub
and
inc
mov
push
icebp
add
push
jecxz
sub
dec
out
imulb
xchg
rcr
mov
or
push
and
add
mov
mov
lret
cli
test
cltd
add
xor
shll
cmovs
push
ljmp
lea
cmp
mov
mov
scas
insb
fsubs
xchg
add
inc
test
pop
shlb
ss
push
pop
pop
into
out
clc
popf
add
adc
xor
mov
call
sub
test
aas
in
push
xor
push
loopne
je
sbbb
push
cmovg
cmp
add
adc
sbb
loop
push
xor
dec
mov
pushf
add
mov
int3
add
mov
loope
adc
lds
adc
xor
cmc
nop
jl
add
mov
adc
lods
xor
out
sbb
add
sahf
nop
aad
ror
call
std
fmul
mov
add
xor
test
movsl
add
xor
mov
sub
das
xchg
add
aas
xchg
arpl
cwtl
test
imul
add
mov
pop
push
ret
aam
fdivr
loope
pop
fdivrs
xor
push
jno
push
das
add
pop
shlb
push
cmpl
int3
and
add
sahf
xchg
push
pop
idivb
outsb
leave
push
pushf
sub
pusha
js
or
mov
int
or
jae
inc
add
in
gs
test
push
in
ds
cmp
addb
pop
bound
mov
icebp
xor
dec
les
and
jbe
in
cmpl
cmc
add
push
lods
sub
xor
lea
imul
roll
cmp
lahf
mov
rclb
bt
push
dec
cmpb
std
cmp
or
adc
ret
add
notb
mov
out
add
or
nop
arpl
add
mov
add
mov
frstor
push
cmc
scas
jo
test
adcl
pop
add
ja
xchg
sbb
incb
aas
jg
daa
push
cmc
loop
into
dec
mov
cmp
add
pop
pop
xchg
and
movl
les
dec
mov
incl
push
fistpll
sbb
mov
ret
sub
clc
imul
dec
cld
or
dec
adc
inc
leave
popa
add
push
xchg
in
sub
fmulp
and
add
sbb
mov
mov
shlb
lock
cmp
dec
icebp
add
or
cmp
and
inc
mov
jecxz
mov
xor
subps
push
xchg
jae
in
add
in
xor
insb
add
rol
push
add
pop
inc
adc
inc
add
sub
loopne
movsb
repz
push
add
pop
leave
dec
mov
add
add
fsubr
xchg
test
in
sub
jle
mov
add
nop
sbb
cmp
push
andb
mov
push
sbbb
je
adc
add
mov
pop
imul
or
adc
mov
mov
dec
and
js,pt
dec
je
test
sbb
xor
cmovne
fcomps
into
fidivrs
inc
add
rcll
addl
mov
pop
aad
and
xchg
addb
adc
nop
out
pop
sbb
iret
pop
sbb
mov
pop
add
popf
jo
aam
rol
fnstcw
add
dec
aaa
add
xchg
inc
mov
mov
inc
fwait
add
enter
dec
add
repnz
dec
cmp
aam
pop
movsb
lods
add
mov
inc
rolb
mov
xchg
aas
push
mov
pop
add
mov
pop
and
rcll
sbb
mov
shl
pop
add
sub
add
fcmovne
mov
cmpsb
sub
cmp
outsl
push
push
hlt
and
add
adc
pusha
fsin
imul
sti
stc
repnz
or
mov
push
test
lcall
adc
adc
movups
out
inc
sub
pop
mov
imul
push
and
test
add
pop
mov
inc
sub
xrelease
enter
inc
push
xchg
push
inc
mov
adc
xchg
push
adc
push
adc
or
mov
cmp
adc
sub
xchg
add
jg
dec
jl
pop
addr16
sbb
mov
gs
rcr
psrad
lock
bound
lock
imul
insl
loope
mov
lods
add
cmp
sbb
pop
aad
sbb
sbb
ret
add
fildl
push
movsb
test
push
cmp
scas
mov
scas
cmpsb
mov
rolb
or
aas
dec
jae
popa
out
add
cs
imul
adc
stc
sub
inc
mov
scas
ja
mov
xchg
add
insl
bswap
add
jp
xor
lahf
add
adc
ljmp
add
jg
insb
xor
pop
addr16
push
repnz
sbb
imul
xchg
add
es
dec
aam
roll
imul
cmp
call
in
rcrb
subb
popf
add
nop
pop
lret
pop
inc
add
and
mov
jo
fcoml
inc
mov
add
cmp
subb
mov
jg
call
movsl
in
mov
aad
jo
add
stc
inc
pop
enter
dec
add
xchg
mov
or
leave
xchg
add
aaa
jle
movups
sub
push
add
xchg
cwtl
es
jg
insl
clc
lock
sub
sahf
or
es
inc
hlt
les
push
dec
push
mov
lock
pop
out
cmpsl
dec
mov
mov
in
fisttps
push
add
lock
icebp
add
nop
and
inc
in
pusha
and
cmp
xlat
xchg
subb
mov
mov
bound
dec
ljmp
rorb
ret
daa
loop
add
outsb
test
mov
push
mov
xchg
mov
cmc
mov
sarb
mov
adc
inc
and
adc
and
mov
fsts
sub
adc
add
xchg
dec
imulb
insl
popa
cmp
adc
addr16
add
addb
aad
inc
xor
cs
mov
aam
jo
mov
pushf
cmpsl
nop
and
push
lret
pop
sub
mov
jg
sbb
rclb
lock
jmp
dec
out
add
repnz
call
add
test
mov
push
add
jb
int3
cmp
aad
ja
mov
inc
ds
sahf
and
add
adcb
pushf
jae
add
shlb
lcall
iret
add
ret
jne
bound
cltd
or
lock
or
add
xchg
xor
mov
das
add
mov
jg
add
repz
out
sahf
add
movsb
mov
lahf
cmc
inc
add
sub
ss
xorl
push
add
ljmp
popf
and
ljmp
adc
rorb
fldt
movsb
add
mov
and
movswl
imul
insl
inc
add
xor
int
push
outsl
mov
add
or
and
xor
jmp
add
add
push
insb
pusha
push
arpl
leave
lods
xor
add
daa
das
and
and
or
pop
insl
cmp
call
js
enter
add
push
and
pusha
mov
push
add
test
fs
jne
jne
test
push
and
ljmp
add
mov
ret
lds
add
das
fmuls
jae
add
outsl
mov
repz
sbb
add
adc
mov
addr16
cmp
xor
cltd
mov
pop
add
sti
out
add
push
pop
cmp
loopne
movsl
lock
mov
call
fbstp
mov
sub
add
and
add
fadd
bound
jecxz
mov
lds
clc
add
inc
xchg
enter
jp
add
mov
xor
fdivs
pop
les
cmp
imul
dec
adcb
mov
add
test
loopne
es
je
sbb
rolb
add
dec
outsl
or
notb
xor
in
out
push
pusha
leave
push
cli
repz
mov
sub
int3
daa
add
ljmp
add
hlt
dec
inc
and
jmp
lods
lahf
xor
add
imul
pop
push
je
and
cmp
mov
insb
jmp
push
push
cmp
out
cmp
adc
addl
xchg
push
aad
add
lods
sub
out
sub
mov
push
mov
add
mov
mov
pop
pop
ret
outsl
sbb
fidivrs
inc
mov
cwtl
jbe
dec
incb
stc
xor
sarl
jo
jno
cmp
outsb
xchg
jnp
je
loope
inc
xor
pop
sbb
add
aad
mov
orb
add
shlb
shll
in
mov
test
cmp
ja
stc
clc
inc
leave
jle
xchg
add
lods
testb
repz
or
push
addr16
jne
js
aas
aaa
sub
gs
test
pushf
dec
aaa
and
xchg
mov
mov
pusha
push
je
add
lea
aaa
cmpsl
mov
arpl
std
adc
inc
stc
sbb
xchg
push
sti
enter
lods
je
mov
inc
sbb
js,pt
out
add
dec
rorl
mov
xlat
bound
add
fdivr
enterw
aaa
add
lds
or
into
int
jbe
dec
xchg
push
adc
mov
dec
lret
je
xorb
maxps
mov
and
lcall
aas
add
mov
jbe
call
pop
lea
lods
add
cltd
jne
push
inc
mov
adc
and
adc
cmp
add
push
push
pop
cltd
and
pop
add
lds
add
nop
cld
sahf
mov
mov
pop
stos
es
aad
push
je
push
enter
pop
and
jno
add
gs
int
aam
add
idivl
xchg
sbb
mov
aam
repnz
movsb
sbb
aas
or
insb
out
mov
add
jmp
and
add
jo
cmp
loopne
sbb
add
push
and
cmp
xlat
mov
mov
pop
pop
mov
jb
pusha
xchg
add
or
negb
xorl
pop
mov
lods
stos
js
dec
and
cs
ficomps
arpl
sub
add
lea
outsl
lcall
or
xchg
sbbb
clc
int
push
adc
add
sub
imul
cmpsl
sti
cmp
fsubrs
ss
or
rorb
cmc
inc
iret
push
sldt
sahf
xor
lock
add
mov
jnp
pop
pop
jg
mov
fmul
cwtl
and
pop
ds
xor
cwtl
andl
jnp
inc
inc
pop
or
mov
inc
dec
add
cwtl
ret
stos
mov
mov
outsl
arpl
or
push
repnz
clc
mov
add
sbb
nop
lret
jne
lods
cld
add
mov
sub
add
cli
lock
popf
add
adc
push
bsr
mov
into
hlt
shrb
fstps
test
add
xor
mov
cmp
mov
push
add
add
loopne
add
stos
inc
mov
mov
add
push
popa
hlt
icebp
loope
pushf
jge
jl
fnstsw
outsl
lahf
test
xchg
movsb
mov
xchg
sbb
stc
aas
xorb
and
xor
mov
inc
lds
enter
mov
adc
jecxz
mov
inc
push
dec
notl
addr16
insb
stos
add
sub
flds
sub
mov
mov
ret
rcrb
inc
add
cmp
push
dec
mov
cwtl
ret
mov
pop
sub
out
cmpsl
lcall
pop
pop
inc
add
jae
daa
xor
jg
cwtl
push
clc
or
jp
mov
fists
mov
mov
cmpsb
cli
stos
pop
cmp
shl
arpl
jle
cmp
dec
sarl
mov
sub
pop
daa
das
inc
add
push
lea
lret
ss
push
lock
sbb
lahf
cmp
mov
in
jp
rol
stos
push
add
pop
pop
test
outsl
mov
xor
inc
push
lods
out
imul
push
faddl
lock
and
test
adc
xchg
in
cmp
add
sbb
push
lea
or
xchg
mov
push
ds
dec
push
push
repz
daa
xlat
das
add
jg
ret
sbb
add
mov
hlt
adc
xchg
xor
shrb
or
add
mov
pop
add
aam
inc
dec
roll
cmp
push
repz
pushf
mov
or
or
das
mov
add
mov
arpl
mov
popa
rcrb
jge
scas
mov
sub
inc
and
sbb
pop
jecxz
cmp
xor
add
nop
inc
fldcw
ror
or
daa
popl
dec
add
dec
nop
ret
addl
pop
out
add
sub
and
aad
jecxz
imul
pop
cmp
add
push
mov
mov
push
sbb
scas
inc
adc
mov
int
cmpsl
push
mov
in
or
shrb
add
fwait
mov
jno
add
push
addr16
imull
into
xorb
dec
jb
add
jae
push
xchg
and
cmp
add
adc
mov
subb
sub
mov
ret
out
xor
add
sbb
add
inc
fs
test
mov
ja
inc
sti
cmp
cmp
in
mov
mov
lret
xor
xchg
dec
pop
aaa
xchg
mov
mov
xchg
adc
mov
jl
jnp
add
stos
shl
mov
cmc
add
test
sub
fsubs
cmp
inc
add
roll
imul
scas
add
js
add
int
jge
insl
scas
incl
xchg
sub
add
push
xchg
mov
lea
jb
fadd
out
and
mov
and
jno
sarl
xchg
orb
and
data16
xchg
cmp
rolb
in
inc
or
lock
cmp
push
adc
mov
mov
test
push
sub
lods
iret
sbb
add
jg
ret
inc
xchg
imul
push
adc
xorl
add
loop
loope
or
jns
jg
push
jmp
bound
add
insl
mov
xor
sub
mov
adc
sub
xchg
add
or
dec
movsb
sbb
pop
ljmp
and
shr
cmp
cwtl
sti
xor
cld
add
popa
scas
add
jge
cmc
cmpsl
xor
addb
sbb
es
loope
push
pushf
add
sbb
push
pushw
dec
add
mov
aas
lock
xor
subb
mov
add
lea
xor
add
mov
rol
mov
add
cs
and
cmp
add
fninit
decb
or
sbb
mov
notl
or
int3
test
xorb
outsl
dec
movsb
add
add
repz
fistpl
cwtl
dec
es
lock
nop
xor
mov
jge
xor
or
hlt
mov
xor
out
popf
or
ficoml
rcr
out
dec
add
dec
in
lcall
out
jns
lret
mov
sbb
cmp
xlat
pop
add
divb
fwait
inc
out
add
ja
dec
mull
add
and
push
fucomi
add
dec
push
pusha
fistps
xchg
aam
imul
iret
push
pop
inc
cwtl
dec
pop
mov
roll
or
xchg
ret
add
mov
or
push
subb
addb
outsb
cli
dec
rcrb
leave
mov
scas
lods
imul
cmp
sahf
inc
rorb
das
mov
cmp
adc
je
mov
adcl
mov
cmc
add
xor
les
add
cmpsb
fs
add
stos
sbb
adc
and
sbb
sub
out
push
jp
nop
int
mov
inc
rorb
add
cld
cmp
pop
jge
add
cmp
xor
add
dec
sahf
add
sar
loope
cltd
enter
and
rcrl
push
mov
add
leave
into
das
add
fcompl
jb
sub
push
std
or
test
lcall
es
lretw
add
je,pt
add
ffreep
pop
popa
pop
jnp
addl
aaa
push
lods
or
jge
ja
pop
insl
shll
cmp
jbe
mov
iret
push
add
sahf
das
repz
or
je
jo
xchg
je
add
loop
mov
dec
ljmp
or
or
jmp
or
movsl
cmp
pop
lock
push
add
icebp
jmp
jb
nop
add
mov
loopne
mov
mov
popf
add
push
aam
aam
mov
loopne
pop
minps
mov
add
sarb
add
lods
subb
xchg
cmp
add
and
add
testl
push
jo
divb
inc
add
pop
lcall
sbb
add
int3
mov
adc
mov
arpl
mov
cmpsl
pushf
addb
data16
and
dec
jmp
pop
push
xchg
sbb
aas
add
jne
hlt
sub
insl
sbbl
cmpsb
add
ss
cld
fcomp
hlt
ret
pop
jb
sbb
adc
out
lret
add
imul
cmp
mov
fcomps
mov
inc
insb
shl
push
mov
add
loop
add
rcll
sub
xchg
mov
cltd
pop
icebp
movsb
cwtl
bound
stc
xorb
push
mov
addl
dec
mov
sbb
enter
xchg
jne
adc
jmp
int3
push
sub
pushf
nop
add
mov
mov
lods
je
out
cmp
inc
icebp
popa
ror
fisubs
push
outsb
inc
push
mov
pop
mov
pop
imul
inc
and
sti
jp
setbe
push
mov
test
in
add
mov
add
sbb
adcb
in
inc
in
insl
loopne
fsubs
add
shl
sub
pop
movsb
fistl
into
cmp
adc
aaa
iret
mov
les
cwtl
nop
add
ss
xor
loopne
int
jge
cmp
or
xor
add
sub
pop
into
roll
jne
out
loop
jl
or
xchg
xchg
and
cld
mov
jmp
hlt
ds
shrb
lods
add
daa
dec
imul
subb
sbb
data16
mov
add
loopne
leave
je
xchg
js
mov
add
adc
movsb
stc
nop
mov
dec
repnz
ret
in
rcrl
in
xor
js
fwait
arpl
add
lods
aam
add
dec
and
repz
or
lahf
sbb
add
sbb
rcr
cmp
imul
pop
clc
mov
inc
int3
jnp
ret
hlt
pop
ljmp
jecxz
add
es
pop
lds
xchg
imul
jl
leave
add
jg
iret
stos
inc
call
inc
pop
mov
mov
fmuls
clc
mov
inc
push
add
pop
add
xorb
test
pop
pushf
enter
or
enter
pop
add
nop
sbb
lods
adc
dec
arpl
stos
push
out
add
arpl
sub
mov
dec
adc
xcrypt-cfb
cmpsl
mov
xadd
sahf
cmp
cmpb
cmpsb
imul
pop
adc
in
or
cli
pop
xor
pop
sbb
jbe
dec
add
jle
das
insb
lsl
pop
loope
push
je
inc
out
add
pop
jns
add
add
mov
scas
xor
cmp
add
xchg
sahf
movb
dec
inc
jg
adc
addr16
cmp
data16
mov
pop
mov
lock
or
add
insb
cmp
jle
pop
xchg
add
jl
inc
add
aaa
movsl
or
stos
mov
in
add
cmp
add
jns
pop
loope
xor
jno
ret
nop
es
sub
xchg
or
and
cmp
and
jno
cs
mov
add
pop
inc
outsl
shrb
lea
pop
push
jnp
cmc
sub
dec
adc
mov
add
ficompl
das
inc
xchg
out
mov
dec
push
xchg
cltd
mov
xchg
imul
xchg
cmp
arpl
imul
daa
fcomps
fiadds
pop
xor
rorb
nop
repz
dec
lods
xchg
addr16
jbe
add
push
lret
fbstp
push
movsl
add
inc
fsubrl
add
xor
and
mov
addr16
cmpb
pop
pop
test
xor
pop
add
imul
pop
rcrl
mov
add
scas
pushf
fnstsw
xor
les
add
std
mov
inc
pop
adc
mov
and
je
pop
into
add
push
jbe
add
add
in
in
and
or
xor
push
add
pop
pop
adc
jne
add
lcall
xchg
ror
fcomp
pop
add
out
negl
outsb
add
int3
arpl
dec
add
mov
adc
add
ja
hlt
fs
add
jne
push
pop
pop
or
sub
pop
xchg
clc
pop
mov
lods
test
adc
clc
add
dec
cwtl
add
inc
add
cli
popf
push
clc
and
test
adc
dec
jno
fwait
add
iret
jnp
loop
inc
insl
push
jecxz
xor
cmp
or
sub
xchg
jl
adc
sub
mov
arpl
sbb
jle
ffree
add
push
daa
xchg
add
movsb
cmpxchg
filds
repnz
jecxz
in
add
rolb
leave
jo
add
aaa
mov
notl
and
shrl
fs
test
xor
add
into
andb
jae
mov
cmp
jge
inc
movsb
call
and
movb
pushf
leave
jle
add
test
push
mov
jnp
mov
mov
inc
jmp
mov
push
inc
add
mov
push
push
test
inc
rcrl
push
das
flds
push
or
pop
lock
fstl
fidivs
cmp
and
cld
aam
pop
stos
inc
adc
sub
jnp
add
mov
xor
mov
or
fs
je
add
out
sub
fcoml
fcom
add
pop
sbb
xor
xor
mov
sub
test
xchg
add
int3
in
nop
out
pop
and
push
jp
xchg
lahf
sbb
add
pusha
adc
testb
leave
jl
out
inc
cmpsl
add
pop
bound
mov
outsb
add
push
jnp
add
rcl
aad
lret
and
push
inc
or
scas
lret
jge
add
roll
test
sub
fsubrs
add
inc
mov
inc
push
aaa
fadds
push
mov
xor
mov
adc
mov
leave
xor
add
sbb
pop
mov
fdivl
mov
jge
add
test
inc
dec
repnz
push
add
enter
or
add
jns
xchg
stc
fcoml
cs
mov
jecxz
sbb
lret
add
iret
imul
or
daa
jmp
aam
movsl
add
pushf
mov
xor
repz
add
test
lcall
sbb
imul
xchg
or
mov
or
jo
sub
sahf
jg
ret
out
loop
push
mov
mov
mov
out
in
es
add
add
movsb
clc
outsl
add
rolb
cs
fcompl
add
jns
mov
fadds
pop
lahf
fwait
inc
push
sahf
cmp
shrl
loop
stc
sub
popa
in
add
cmc
mov
gs
push
add
push
add
ret
lahf
testl
jg
dec
cmpsl
add
test
cmp
pop
adc
flds
cwtl
or
mov
xchg
cmp
mov
jp
sbb
sbb
pushf
adc
rclb
xor
mov
push
dec
push
lock
or
jb
dec
aam
or
add
mov
sbb
pop
push
inc
mov
xchg
adc
stc
mov
cmp
out
adc
pushf
adc
pop
add
pop
add
pop
or
es
inc
lcall
dec
pxor
xchg
mov
mov
or
punpcklwd
pop
test
ffreep
rcrl
fsubl
xor
xchg
adcl
mov
add
repz
and
dec
repnz
out
mov
jo
xchg
lods
mov
iret
jl
and
inc
add
cltd
and
mov
roll
pop
lcall
out
add
jmp
cltd
or
xor
cmp
add
adc
jp
xlat
mov
lea
loopne
sub
mov
out
cmp
or
aam
test
loopne
pop
add
xor
add
icebp
adc
xor
sbb
mov
and
jg
mov
mov
mov
add
jle
test
xor
gs
add
push
or
loop
push
adc
and
pop
pop
xchg
rcl
mov
jae
mov
cmp
pop
nop
in
test
jo
lods
add
es
loope
shl
add
push
iret
btr
gs
sub
xorb
lock
in
xor
cmc
scas
data16
in
xor
jae
xchg
int
out
movsb
sbb
fimull
sbb
pushf
dec
fistpll
orl
insl
in
mov
jae
loope
adc
popf
fsubrs
lods
cmpsb
mov
sahf
sbb
stos
in
mov
sub
push
cmp
inc
gs
xchg
jle
cmpb
pop
add
into
int3
sbb
add
mov
mov
rcrl
cmp
cmpsl
add
fcoms
jle
in
icebp
jge
add
and
jno
sbb
push
lret
push
xor
push
add
and
sub
add
jge
xchg
mov
mov
test
insb
add
sbb
mov
lret
inc
add
sub
xor
faddl
les
adc
movsb
addb
mov
mov
add
mov
testl
out
pop
pop
xchg
mov
add
cld
add
fldl
push
popf
test
xorb
addb
in
bound
cmp
cmpsb
fucomip
stos
jae
push
and
add
mov
jo
and
pop
sarl
js
xchg
clc
sub
cli
scas
xchg
and
xor
mov
mov
rol
test
repnz
insl
mov
pop
xor
push
daa
imul
outsl
insl
stos
push
repz
sbb
and
ja
out
cmpsb
push
das
hlt
push
add
shrb
and
psubsw
fbstp
and
xor
lret
jae
xlat
add
out
lock
add
dec
fadd
add
addr16
mov
pop
lods
mov
push
js
lahf
add
nop
jmp
push
jg
lcall
clc
inc
push
mov
sbb
add
xchg
sti
hlt
pop
add
add
dec
leave
loopne
imul
and
push
xor
pop
cmp
rorl
cmpsb
mov
adc
ds
push
aam
sub
mov
cmp
out
ret
add
sbbb
psraw
lock
push
mov
aam
dec
add
ss
inc
add
loope
stc
imul
loopne
pushf
adc
inc
arpl
ret
mov
inc
sbb
jbe
mov
or
loopne
mov
dec
pop
inc
fwait
cmp
pop
jmp
into
arpl
pop
xor
js
rcrl
test
pop
push
into
push
imul
ds
mov
dec
and
adc
iret
nop
adc
add
jle
push
jo
enter
sub
mov
aam
mov
ss
lret
loopne
adc
sbb
test
in
sbb
inc
mov
std
push
or
jno
data16
bound
hlt
leave
push
pusha
sti
test
fmull
les
add
jmp
jecxz
je
sbb
hlt
loop
test
sbb
cmp
jno
mov
addr16
add
lock
test
mov
hlt
gs
inc
imulb
add
inc
sub
sbb
push
adc
add
mov
test
sub
out
addb
sbb
es
les
jmp
cwtl
and
lea
out
roll
jns
jno
clc
push
sbb
add
fwait
lahf
rcll
add
sbb
aaa
jne
pop
jecxz
jns
add
adc
or
outsl
cmp
mov
out
pop
xor
add
ljmp
jp
adc
sbb
sti
mov
sub
and
cld
ljmp
pop
scas
adc
fcoms
enter
test
xor
push
sub
adc
jg
or
cli
sbb
fdivs
js
sbb
and
add
and
mov
add
jae
mov
mov
shlb
and
lret
add
andl
lds
jp
and
push
fwait
loope
add
lods
adcl
xlat
in
cmp
push
adc
push
nop
mov
das
add
shlb
push
lock
ret
cmp
or
mov
xchg
pop
cwtl
pop
push
dec
dec
shr
pop
xor
inc
add
lcall
adc
arpl
jo
into
aad
add
inc
movb
mov
repnz
aas
jp
push
aad
add
ja
repz
lock
jp
add
fisubrs
dec
add
add
test
sar
imul
adc
jecxz
adc
jl
push
xchg
sbb
testl
inc
cld
dec
jmp
add
adc
orl
mov
cld
sarl
popa
aad
sub
rol
fpatan
push
cmpsl
sub
dec
pop
je
add
out
mov
push
test
pop
xlat
mov
adc
add
loope
push
and
out
cwtl
repnz
movb
into
cmp
jne
lret
dec
sbbb
mov
mov
add
aaa
jmp
add
mov
fdivr
mov
add
sub
mov
xchg
sarb
fdivrp
xor
adc
stos
inc
dec
add
jmp
or
push
cmpsb
pop
pop
cs
mov
sub
adc
shlb
insl
mov
jge
pop
push
ljmp
lahf
jns
add
sbb
adc
sbbl
mov
add
add
arpl
jne
pop
cmp
push
setge
mov
add
addl
mov
lods
xor
je
pop
leave
fisttpl
pusha
mov
fadds
or
push
sub
add
pop
jb
ljmp
mov
adc
add
dec
stc
into
test
lock
ss
mov
lahf
add
das
jno
xor
xor
xor
sbb
push
xchg
adc
testl
jge
adc
adc
add
xchg
loop
mov
fcoms
or
shlb
sub
sub
jb
fsts
adc
pop
loop
sbb
mov
aaa
add
lods
leave
enter
xchg
icebp
clc
add
push
adcl
hlt
iret
push
mov
in
add
push
in
jp
loopne
and
push
outsb
inc
add
pop
fsqrt
dec
gs
cs
adc
pop
pop
add
icebp
inc
cld
sbb
iret
pop
adc
jp
add
mov
lds
sub
int3
addb
or
and
jbe
in
test
add
or
ja
xchg
subb
cmp
clc
cmp
loop
dec
mov
jo
dec
sbbl
adc
das
aaa
addr16
adc
leave
cld
add
and
xchg
cmp
popf
lret
test
rolb
cmp
js
add
sub
jg
ja
sbb
mov
xor
jmp
mov
sbb
mov
add
push
adc
ds
add
pop
jns
xorb
dec
mov
xchg
ss
pop
dec
jg
out
in
or
push
cmp
add
xchg
inc
and
add
dec
mov
nop
addr16
pusha
adc
icebp
out
push
add
push
add
add
push
xlat
cmp
nop
out
stos
cmp
push
sbb
cmp
popa
pusha
xchg
add
mov
flds
add
aaa
mov
inc
pop
add
jle
xchg
mov
dec
fdivrl
aam
andb
loopne
out
lret
pop
lea
jae
popf
adc
les
xchg
mov
shll
out
pop
push
add
scas
mov
addb
aas
bound
or
icebp
jmp
dec
loop
pop
cld
add
int3
sti
mov
pmovmskb
jle
or
inc
lcall
aaa
movsl
lock
out
add
stc
arpl
cmp
push
adcb
cmp
push
mov
add
sbb
out
gs
add
adc
pushf
mov
mov
fadds
cmovae
mov
ljmp
jnp
mov
popa
add
add
shll
cmpsl
aam
dec
es
test
inc
jb
add
or
mov
cmpsl
rcrb
ror
mov
popa
xchg
jl
nop
adc
add
xchg
push
outsb
mov
fs
push
push
pop
daa
in
cmp
jl
adc
cs
mov
rorl
out
dec
in
loope
mov
lcall
cmp
add
sarb
inc
add
les
or
sub
iret
xor
add
mov
and
inc
les
fistpll
mov
xor
data16
jmp
clc
movaps
or
push
fsubrs
pop
int3
lcall
or
and
repz
xor
bound
lds
cmp
mov
stc
popf
add
mov
adc
or
loope
ret
shll
cmpl
into
add
filds
adc
aas
adc
add
adc
ret
imul
mov
cmpb
test
loopne
push
sub
faddl
cmp
gs
shrb
and
xchg
nop
fadds
subb
aas
cmp
incl
mov
pop
fs
jae
add
cmpsb
stos
add
adc
sbb
or
pop
adc
xor
mov
repz
push
push
enter
psrad
ds
xor
add
cs
arpl
mov
pop
scas
fs
stc
add
mov
or
xor
in
inc
outsb
mov
add
int3
notl
cmp
lcall
jae
daa
out
adc
loopne
hlt
test
mov
mov
push
loopne
add
pop
push
mov
xor
jo
jmp
xchg
stos
movsb
mov
xlat
and
in
cmp
rcrl
in
jge
dec
dec
nop
cmp
cmp
pop
dec
ss
and
mov
add
sub
daa
sbb
cmp
mov
add
testb
xor
lods
sub
mov
push
pusha
dec
cwtl
icebp
inc
inc
add
pop
ss
sbb
dec
add
scas
mov
or
cld
push
mov
cmp
testb
lock
in
imul
inc
sbb
loopne
sarb
ret
push
add
fistl
fcomps
pop
loopne
in
push
add
or
jns
popf
fcompl
ds
adc
jno
addr16
xor
incl
call
orb
jae
xor
cmp
adc
xchg
push
pop
icebp
rcr
shlb
add
lea
mov
repz
mov
dec
inc
test
mov
inc
stc
push
dec
mov
push
inc
scas
ficompl
xchg
cmc
hlt
aas
outsl
cli
add
cltd
mov
add
dec
inc
jb
in
loopne
mov
mov
sar
dec
out
add
push
cmc
pop
les
push
add
inc
dec
xor
inc
loop
stc
int3
dec
inc
xchg
inc
push
cmc
cmpsb
aas
leave
sub
cmp
fstpt
add
test
xchg
add
lods
cli
fcomps
std
int3
ret
inc
xchg
jne
mov
add
sbb
ds
add
dec
adc
pop
add
divb
cmpsl
subb
bound
popw
xchg
dec
push
xor
push
icebp
rorb
insl
jp
lods
addr16
fdivrl
add
mov
dec
pusha
sub
mov
jg
rolb
or
inc
mov
adc
xlat
mov
mov
sbb
add
add
xchg
call
lock
icebp
mov
pop
cld
dec
push
or
sub
repz
add
fsub
or
dec
icebp
pop
scas
movsl
mov
out
pop
cltd
inc
out
int
ss
jge
add
cwtl
in
sbb
cmpsb
mov
fsubs
sbb
xor
pusha
pop
dec
adc
movsb
or
jmp
mov
addr16
pop
fdivs
or
pushf
ja
nop
rclb
fwait
daa
cmp
xchg
inc
ret
ds
lods
pop
rolb
movsl
adc
shl
pop
mov
les
iret
int3
inc
mov
outsb
dec
in
mov
test
add
mov
mov
add
lahf
dec
fs
xchg
fcoms
call
pop
mov
add
push
pusha
cmp
push
pusha
jo
jmp
mov
pop
outsb
lea
dec
or
and
pop
popf
jecxz
iret
mov
xchg
sub
inc
pop
xchg
add
sub
dec
push
push
iret
jne
fisttpll
or
pop
das
pusha
mov
add
or
or
xchg
xlat
pop
mov
cmc
inc
jnp
jb
add
adc
adc
fidivs
repz
out
jp
test
sahf
ret
shlb
jo
dec
sub
push
shl
movsb
fsubs
jg
push
and
jo
repnz
adc
scas
ja
or
xchg
xchg
adc
cmp
lea
xor
loopne
pop
hlt
flds
cmp
leave
pop
add
ljmp
push
sub
sbb
fbstp
rcrb
push
dec
cltd
push
add
in
jb
and
lret
and
adc
fistps
pop
and
aaa
xor
les
sbbb
insl
add
rcrb
push
pop
jae
jne
ss
movsl
and
jo
mov
enter
jno
mov
adc
mov
subl
and
or
add
ljmp
js
jbe
ja
lods
ss
test
loope
sub
jg
add
out
cmp
dec
or
cmp
add
mov
mov
mov
daa
lret
adc
jo
mull
or
or
aam
test
popa
ljmp
add
xor
lahf
push
pusha
inc
xor
dec
jb
repz
imull
lds
call
inc
scas
mov
add
loopne
imul
mov
popa
sbb
add
inc
cltd
sahf
loopne
or
fcmovb
sub
adc
test
or
xor
fcompl
testl
add
pop
lret
push
inc
test
cmp
inc
sbb
mov
in
add
test
mov
mov
push
sub
div
pop
dec
jne
cli
int
cmp
inc
mov
cmpsl
js
shll
or
test
idivb
cwtl
sti
add
addl
lods
dec
pushf
call
ds
and
and
inc
or
fiadds
sbb
xchg
dec
and
xor
sub
stc
add
add
cmp
adc
jns
sbb
and
and
xor
fldcw
pop
mov
adc
and
dec
xorl
dec
cwtl
xor
stc
cmp
cmp
xor
adc
or
cmp
inc
or
cmp
or
sub
and
stc
dec
inc
xchg
jno
mov
or
sub
add
pop
cmpsb
mov
push
adc
or
add
sbb
sub
aad
data16
cmp
test
and
xchg
loopne
adc
adc
fwait
and
and
fnsave
mov
jns
mov
adc
cltd
push
push
adc
cwtl
jno
adc
daa
adcl
mov
adc
and
std
popf
and
mov
xor
lahf
sub
adc
popa
mov
sbb
addl
enter
pop
xor
adc
jno
inc
imul
dec
movsb
xor
mov
rcll
mov
inc
loopne
test
movb
inc
movsl
out
cmp
adc
test
loope
inc
adc
inc
sub
orl
sbb
sub
mov
lahf
dec
sbb
dec
fsubr
and
mov
mov
inc
filds
mov
sbb
or
and
adc
fs
je
xor
xlat
or
aad
xor
dec
imul
adc
fdivr
mov
loope
rorl
mov
icebp
dec
rorb
mov
push
outsb
sbb
push
lock
push
movsl
sbb
subl
cmp
cmp
mov
fmull
imul
mov
pop
jp
movsb
jbe
pop
sbb
cmp
inc
or
loope
and
sbb
jne
bound
xor
pop
rcrb
je
dec
int
mov
sbb
pushf
repnz
xchg
cld
sar
cmpsl
sbb
and
sti
shlb
sub
sbb
in
aas
adc
lret
insb
dec
lret
cmp
js
xchg
inc
xor
mov
cmp
and
jno
bswap
fdivrl
int3
mull
loope
ja
inc
inc
add
sub
jno
out
dec
lds
rorl
xor
add
ss
and
ret
push
and
nop
mov
sarb
fists
and
xchg
shrl
inc
and
jne
je
cmp
and
aam
js
push
xchg
addb
inc
sarl
and
sub
les
pop
or
mov
xor
sub
jp
add
push
pop
mov
je
pusha
lret
hlt
inc
push
cs
lods
and
push
push
icebp
je
popa
or
and
popl
or
pop
ds
mov
pop
add
in
hlt
or
mov
cld
and
into
enter
xor
andl
cmp
and
sub
sub
shlb
xor
adc
and
loop
outsl
test
inc
dec
fsubl
adc
lock
dec
mov
inc
lods
add
push
sub
shrb
sub
inc
pop
scas
add
inc
jne
stc
push
adc
sub
xchg
inc
and
ret
add
gs
mov
lods
adc
inc
hlt
ret
mov
inc
in
iret
aaa
orb
fisubs
bswap
or
sbb
jl
push
dec
or
clc
stc
lock
mov
mov
sbb
out
icebp
add
mov
adc
sbb
xor
idivl
mov
cli
icebp
add
sbb
adc
aaa
inc
in
imul
lret
outsl
sbb
add
push
iret
push
cmc
in
push
adc
adc
imul
stos
mov
sbb
fisubrs
mov
js
sti
cld
or
and
test
adc
in
addr16
mov
jp
aam
mov
jmp
lods
sub
adc
mov
sub
jns
cmp
jle
push
mov
cmp
insl
shlb
or
cmpsl
push
and
xor
adcl
cmp
and
jns
adc
fsts
std
mov
dec
sbb
test
or
cmp
shlb
lcall
or
adc
cmp
hlt
mov
adc
jle
add
in
ss
sub
insl
data16
sub
outsb
and
jae
add
and
outsl
test
push
ds
inc
mov
out
mov
mov
movsl
cmpsb
inc
dec
or
push
fisubrl
dec
add
push
mov
cwtl
insl
sbb
lahf
popa
je
xor
cmp
ljmp
popf
pop
jb
push
mov
inc
cli
add
ljmp
jl
cmp
clc
xor
rcrb
inc
sbb
aaa
adc
loopne
out
push
into
lahf
pushf
stc
enter
push
lret
push
xchg
je
add
sbb
or
add
data16
add
mov
add
leave
xor
cmpsb
cmp
cmp
add
icebp
sbb
icebp
jle
cmp
or
popf
cmp
loope
add
mov
lcall
movsl
sub
add
mov
mov
jecxz
pop
out
and
testl
loop
pop
push
push
rolb
cld
mov
dec
les
dec
movl
icebp
cmp
push
adc
loop
adc
ja
gs
inc
mov
inc
sub
das
mov
cltd
xchg
loope
and
sbb
fld
add
mov
pop
data16
popl
jb
mov
and
jle
add
inc
fisubs
or
adc
aas
int3
mov
jne
ret
add
addr16
pop
add
jp
xorl
push
in
fstl
lea
push
cltd
jmp
rolb
xchg
repz
add
je
lea
inc
mov
jne
cmp
test
sbb
dec
mov
add
imul
pop
scas
add
mov
push
insb
out
addr16
add
loope
imul
aad
and
cli
or
jb
sub
mov
call
lcall
cmpsb
fcomip
sti
and
lret
add
mov
adc
sbb
cld
sbb
cmp
mov
fildl
xor
mov
es
dec
incb
mov
test
nop
js
outsb
push
xor
mov
jmp
arpl
ret
mov
xor
add
rol
std
pop
pusha
sbb
jnp
arpl
sbb
cmp
out
negb
dec
sbb
cltd
add
imul
aas
insl
cmp
arpl
loop
add
call
or
or
mov
test
mov
mov
add
sub
add
and
dec
ja
out
pop
stos
dec
jmp
add
pop
cmp
hlt
adc
add
adcb
dec
jae
ljmp
in
out
cmpb
mov
aad
xchg
repnz
pop
cwtl
inc
add
or
jae
scas
push
cmpb
scas
leave
icebp
addr16
loopne
rolb
sub
dec
iret
jae
mov
inc
add
stos
sbb
cmpsl
ljmp
mov
mov
inc
pop
add
xor
cmp
nop
xor
adc
aam
ret
es
pop
mov
cwtl
mov
and
enter
fisubrl
ja
add
push
ret
adc
sarl
shl
or
arpl
lcall
add
out
sar
or
add
outsb
aaa
sub
arpl
leave
pop
je
aam
push
add
subb
jle
add
roll
or
ljmp
lods
mov
mov
pop
add
inc
xchg
cli
jecxz
leave
add
stos
loopne
popa
sbb
or
add
stc
fsubl
add
lods
scas
test
insl
fldl
out
popf
imulb
pop
dec
cmp
jge
aam
jl
xor
or
add
pop
ret
loopne
xor
fcomps
cmp
pop
add
or
ss
mov
jno
add
xchg
mov
mov
push
repz
bnd
imul
add
jns
and
icebp
jmp
and
cmp
dec
mov
getsec
fdivrs
xchg
add
mov
cmp
xor
sub
sbbb
dec
mov
into
aam
and
icebp
push
pop
xorb
push
and
add
push
push
int3
add
or
ja
or
test
dec
xchg
add
jns
xchg
mov
add
fdiv
xchg
sbb
test
or
scas
xchg
add
out
add
daa
xchg
dec
xor
loopne
ds
rorl
or
push
mov
roll
mov
in
dec
outsl
int3
pop
fcomps
movswl
rolb
fldt
mov
add
lahf
jp
cli
aam
cwtl
nop
add
jo
je
mov
nop
add
cmp
mov
outsl
xor
add
mov
icebp
push
adc
test
test
add
or
sarl
pop
add
nop
mov
test
into
lock
popf
cmpb
mov
in
rorb
mov
mov
in
movl
out
pusha
adc
popf
mov
adc
or
mov
outsl
rcr
adc
lock
std
push
lock
pop
sahf
add
mov
inc
jmp
xchg
test
in
jae
xor
push
lsl
test
mov
cmp
std
xchg
insl
mov
jp
je
cwtl
cs
in
cmpsl
pop
in
rorl
cmp
dec
push
inc
es
add
rcrl
adc
dec
rolb
jmp
mov
push
adcl
out
aam
addr16
test
dec
inc
aam
outsb
pop
sbb
cs
cmp
pop
orb
test
sbb
mov
movsb
lods
sarl
cmp
daa
movl
bound
jae
cmp
int3
push
jb
jecxz
jbe
sbb
hlt
hlt
inc
out
and
inc
xchg
stc
mov
add
inc
or
push
mov
cmpsb
add
sub
rorb
pushf
test
bound
xlat
shrl
popf
jp
add
cmp
sub
mov
scas
sbb
imul
mov
xchg
xchg
add
in
mov
pop
pop
cmp
mov
and
sbb
push
adc
xlat
fldl
outsl
call
ss
addb
cmc
add
lret
sub
pusha
inc
sub
stos
cmc
add
stos
stos
push
push
dec
or
cs
jbe
or
dec
xor
jne
add
xchg
mov
stos
adc
push
cs
lret
lock
cmp
lahf
add
dec
popf
imul
leave
aam
mov
add
mov
jb
jle,pt
add
lea
loope
pop
lods
shlb
mov
aam
jg
cli
mov
push
add
push
add
int3
pop
push
mulb
test
mov
nop
and
xchg
mov
call
xor
push
sbb
jle
add
sbb
sarb
mov
add
shll
hlt
mov
daa
popa
sbb
popl
stc
jp
pop
push
js
aaa
add
xchg
int3
cmp
inc
add
fistpl
add
xlat
je
mov
add
dec
inc
dec
repz
push
cld
add
test
fldenv
inc
ror
orb
fsubs
fsubrl
jb
cmp
scas
mov
mov
and
jp
push
lea
movsl
leave
adc
rolb
mov
mov
loop
add
push
gs
jb
test
pop
rol
xor
insb
imul
adc
and
or
mov
inc
mov
call
stos
mov
sarb
push
cwtl
pop
jmp
pop
aas
and
inc
cmp
ret
pop
loopew
mov
pop
jl
sti
push
sub
adc
inc
ffreep
push
jb
fsubrs
pop
jecxz
lea
pusha
pop
call
sub
add
dec
add
jecxz
lock
xchg
jmp
shl
jb
jnp
stos
mov
imul
push
add
or
push
out
pop
scas
les
push
sbb
push
jp
aas
std
xchg
andb
int3
sbb
xor
add
sbb
out
push
mov
pop
add
sbb
mov
fs
mov
push
push
mov
jecxz
adc
and
cld
arpl
push
xchg
pminsw
inc
shrb
insl
fldenv
fs
sarb
mov
or
jno
les
in
mov
pop
data16
pop
pusha
cmpb
cmp
outsl
imul
in
push
dec
or
xchg
or
popa
pop
add
std
in
in
adc
imul
push
flds
je
subl
fadd
ljmp
jo
sbb
push
cmp
movb
push
add
fwait
mov
cmp
in
cmp
jno
push
loopne,pt
cmp
jbe
or
frstor
mov
pop
popa
call
rolb
cmp
inc
add
push
sbb
nop
jnp
adc
iret
sbb
incl
test
imul
add
mov
pop
aaa
dec
dec
call
jl
dec
sbb
push
out
push
jae
xchg
clc
jle
sub
test
ret
add
rorl
add
loope
mov
pop
jae
pusha
lds
mov
cmp
mov
ljmp
fstpl
or
aaa
inc
mov
add
xor
jae
mov
in
arpl
cmp
xor
decb
xor
sbb
add
and
cwtl
or
and
cmp
inc
cmpsl
and
xchg
adc
and
bound
testl
jmp
sbb
cmpsl
add
fbstp
mov
inc
xchg
add
push
aad
mov
or
js
mov
cmp
out
add
lods
test
fiadds
test
xchg
add
jo
add
in
hlt
jne
mov
adc
adc
fistpll
pop
inc
mov
outsb
add
adc
int
push
add
pushf
dec
mov
inc
xor
sbb
leave
add
lret
sbb
lahf
or
mov
jno
lea
pop
inc
push
xchg
pop
call
add
das
and
les
lds
flds
jecxz
jae
imul
jne
call
push
ss
lret
pop
pusha
out
add
jg
fldcw
xchg
aas
jnp
es
push
cmc
pop
cs
dec
adc
gs
imul
sub
inc
mov
cmpsb
shrl
hlt
push
out
ficompl
or
bound
mov
pushl
int
pusha
inc
popa
mov
test
or
rorb
in
testl
sahf
cwtl
mov
xor
movb
sbb
pop
mov
gs
cmp
jo
call
add
bnd
add
cwtl
jg
add
dec
aam
mov
adc
sahf
out
cmp
sbb
pusha
movsb
int3
add
cltd
nop
incl
scas
mov
push
bound
aad
push
sahf
loopne
dec
icebp
push
call
fisubs
jg
jae
dec
jge
xchg
and
fstpt
aas
sbbl
push
push
and
xchg
pusha
movsl
mov
cmpb
sbb
popa
sti
rol
xchg
in
out
mov
add
mov
sbb
mov
xor
dec
data16
rolb
out
rorb
add
popf
inc
and
jbe
push
cltd
mov
xchg
pusha
mov
lret
cmp
jmp
rcrl
dec
aaa
cmp
lahf
add
addr16
shrb
jmp
movsl
cwtl
fwait
adc
cmp
int
sbb
out
cmp
pop
ss
pop
fnstsw
add
push
adc
adc
in
and
nop
add
adc
cmpsl
and
xor
inc
movsb
add
int
sbb
pop
add
leave
mov
mov
pop
or
aam
cs
add
into
sbb
pop
adc
test
pusha
insb
sbb
add
sbb
lret
orb
dec
adc
mov
xchg
sbb
pop
jno
lock
cmp
mov
fnstenv
sahf
xchg
push
push
mov
jno
push
fwait
adcl
or
pop
add
fldenv
insl
shlb
in
sbb
and
mov
lds
movb
popa
in
lea
sbb
adc
xor
sbb
pushf
lret
add
pop
xchg
xchg
dec
mul
add
outsb
out
fwait
into
xorb
sub
mov
adc
ret
sbb
lahf
mov
subl
push
aam
out
clc
add
shll
sbb
pop
cmpl
std
aam
pmullw
sub
mov
out
movsl
pop
jns
adc
xchg
sub
mov
inc
sbb
mov
dec
loop
pop
xor
out
push
jb
ret
mov
sbb
fisttpll
add
push
jbe
sbb
ds
jb
fs
popl
stos
mov
cli
sbb
add
lods
cmp
rol
into
addb
addr16
push
std
xor
scas
xor
cpuid
inc
push
popf
loopne
cltd
inc
bound
mov
adc
dec
jge
sub
push
imul
or
push
loope
cmpsl
shrb
hlt
pop
enter
and
ret
int
dec
push
iret
push
inc
out
sbb
jmp
icebp
or
cmpl
jge
add
ljmp
enter
rcr
add
jmp
mov
jle
and
add
mov
cmp
sub
popf
or
xor
test
testl
and
insl
loopne
es
stos
xor
jle
std
add
or
mov
sbb
test
mov
outsl
dec
int3
sub
ljmp
push
leave
sti
lret
add
sahf
jl
ds
aam
or
je
or
push
outsl
add
into
cmc
mov
mov
sub
fwait
lahf
jg
add
xchg
xlat
mov
dec
cltd
and
cmpb
rep
xor
sahf
push
xor
inc
xchg
daa
sbb
sub
push
add
dec
add
loop
sub
scas
and
mov
lahf
sbb
sbb
pop
js
push
loop
add
lret
and
push
push
ja
ds
fs
add
js
into
sbb
repz
add
test
ja
enter
loope
add
fsubr
or
sub
add
xor
xchg
mov
inc
out
push
or
ret
aas
sbb
cmpsb
jae
pusha
mov
adc
pop
xlat
rolb
dec
inc
push
lahf
mov
test
mov
enter
imul
lcall
insb
das
dec
xor
scas
add
int
cmpsl
aas
and
test
push
cld
push
test
ja
jno
sbb
push
add
xchg
test
imul
and
mov
and
cmp
jmp
rcll
das
dec
mov
push
cltd
outsb
out
sub
mov
je
add
imul
icebp
test
push
sub
mov
inc
aam
imul
adc
aad
add
push
or
push
add
or
or
leave
idivl
add
jns
test
addr16
cmpsl
and
enter
xchg
ret
cld
xchg
sub
test
xor
fwait
leave
icebp
out
mov
add
mov
xor
xor
or
andb
cld
scas
or
mov
add
call
mov
add
adc
mov
add
jb
push
sbb
add
or
ss
pop
in
xchg
add
xor
sbb
cmp
inc
jb
loopne
pop
mov
push
mov
into
pop
js
push
or
aas
cmpsl
sbb
xor
mov
mov
stos
pop
adc
shll
xchg
mov
insl
pusha
inc
push
sbb
adc
mov
jno
jb
add
std
add
or
add
jmp
ds
push
dec
shl
inc
cmpb
sbb
sbbb
sti
cltd
out
ss
aaa
loope
jge
rcrb
jl
xor
inc
adc
ljmp
xor
jo
push
push
addb
xor
loopne
cmp
push
or
dec
xor
cmp
out
in
sub
movups
or
daa
jecxz
sbb
mov
inc
sbb
jo
jg
or
loope
push
repz
xchg
pop
sub
test
fmuls
aam
and
test
dec
in
inc
jp
bound
addl
mov
and
inc
or
test
cmp
pushf
add
repnz
aas
sbb
cmp
add
and
mov
fidivl
push
cmpsl
les
sbbb
movsl
inc
mov
test
rolb
add
popa
stos
std
gs
dec
rcrb
out
mov
or
lock
stos
add
loopne
dec
add
andl
dec
movsl
sbb
push
sub
gs
cwtl
popa
push
test
adc
lock
jo
ds
or
gs
xchg
fildll
add
and
lret
ficoms
sbb
mov
flds
stc
add
fsub
add
xchg
rorb
dec
add
dec
ret
inc
inc
pop
sub
cltd
js
rcrb
sub
fwait
int
or
jbe
and
dec
rorb
movsl
mov
push
add
daa
int3
frstor
sub
jno
fists
pushf
xor
cmp
mov
insb
lcall
imul
bound
lret
fbstp
jo
mov
pop
mov
outsb
dec
dec
dec
pop
ja
fs
jbe
fdivr
xor
add
out
loopne
sbb
jbe
cmp
rolb
and
push
int3
add
xchg
cmc
enter
fdivs
add
jge
adc
mov
scas
inc
mov
xor
push
and
inc
cltd
add
xchg
scas
and
pop
cmpsl
je
movhps
xchg
daa
inc
ret
jo
aas
jne
or
leave
std
xor
and
xchg
mov
cmp
jge
xor
cld
push
add
cmc
cld
cmp
add
fadd
iret
imul
jg
je
cld
xor
cwtl
jge
mov
push
dec
aam
int3
cs
sub
lea
pop
loope
jge
add
xchg
popa
aas
pop
inc
outsl
mov
std
popa
cli
rorw
or
add
push
sbb
popf
xchg
push
mov
pop
mov
cmp
scas
jl
add
push
add
dec
or
jo
or
pcmpeqb
ret
xor
sub
add
inc
dec
add
nop
mov
xor
out
je
push
cltd
mov
jl
imul
nop
pop
insl
aaa
int3
xor
pop
add
and
dec
push
adc
or
add
cmp
sbbb
push
dec
add
insl
jp
int
sub
pop
shll
push
add
inc
xchg
add
sahf
mov
jg
sub
cmp
lea
jnp
mov
ja
cmp
push
inc
test
add
push
stc
or
xchg
fwait
cmp
add
pop
and
mov
jno
sub
movsb
xchg
and
jecxz
push
push
jne
xchg
jo
push
sub
add
and
dec
movsb
xor
add
cmc
and
push
scas
lods
test
jge
inc
fsubs
leave
add
shrb
inc
shrb
roll
stos
pop
fdivrp
sbb
in
pop
sti
mov
add
push
or
ja
rorb
or
push
movsl
inc
ret
xchg
icebp
add
jecxz
sub
mov
sbb
ds
rolb
or
aas
or
xchg
lahf
xchg
fbld
pushf
scas
or
xchg
xchg
inc
je
dec
cli
orb
fisttpll
cmp
add
enter
or
cli
add
hlt
sbb
sbb
xor
addb
sub
icebp
mov
packssdw
cli
pushf
add
mov
mov
lds
xor
adc
mulb
xchg
aad
push
inc
mov
pop
sbb
pop
inc
lods
roll
jnp
outsb
pop
in
inc
jle
cmp
rcr
mov
cmp
add
iret
cwtl
xor
push
sbb
shr
inc
loope
bound
mov
cwtl
int
cwtl
mov
xor
and
xor
or
inc
rorb
mov
mov
adc
cmp
add
mov
sbb
loopne
test
pop
mov
mov
mov
mov
in
loope
popa
jmp
dec
add
mov
lret
in
pusha
and
mov
inc
xchg
pop
and
cmp
push
sarl
jecxz
shlb
or
gs
lret
dec
mov
dec
daa
xor
movb
test
xchg
cli
add
jae
shl
inc
call
cmp
mov
das
pop
push
jae
add
push
dec
push
imul
sub
xor
movsl
sbb
pop
call
sbb
add
sub
mov
push
scas
add
xchg
aad
and
jle
call
jg
sub
ret
xor
pusha
stos
sbb
lods
jmp
mov
inc
imul
popa
inc
testl
out
cmp
imul
mov
add
sbbb
mov
xor
pushf
push
nop
cmp
movsl
adc
arpl
add
cld
push
in
mov
mov
cwtl
hlt
mov
mov
push
maxps
cmpsb
loop
cli
ret
nop
cmc
daa
and
movsb
sbb
xor
xor
cltd
insb
pop
add
dec
imul
leave
pop
dec
push
push
inc
push
add
pop
mov
cmp
std
add
or
andl
adc
mov
push
mov
add
xchg
sub
ficomps
add
xor
xchg
mov
adc
and
das
push
add
dec
sar
or
add
xlat
mov
mov
shll
xor
xchg
add
push
out
and
cmp
and
fs
rcrb
inc
pop
and
pop
andb
cltd
push
stc
rclb
gs
jl
pop
or
dec
sbb
dec
adc
jl
adc
cwtl
test
mov
mov
loopne
add
sbbb
pop
fwait
adc
add
xor
add
subl
add
pop
cwtl
test
and
mov
lds
call
mov
cmp
inc
bound
fimull
dec
add
xchg
jle
add
or
pop
int
jge
inc
xchg
jmp
ret
dec
add
adc
popa
add
mov
xchg
sub
mov
mov
xor
pop
add
iret
dec
sub
pusha
push
mov
cmp
vphaddubq
mov
mov
mov
pushf
xlat
in
sub
ja
jb
mov
ret
jecxz
es
and
mov
xchg
and
dec
pop
push
mov
mov
scas
aaa
add
repnz
mov
add
mov
cmpsb
cs
mov
xor
out
add
in
enter
and
pop
call
cmc
ss
add
rcrb
stos
dec
ret
pop
sub
xrelease
int
or
dec
jns
dec
cmpl
fdivrs
int
in
dec
xlat
mov
add
or
add
sub
push
out
xchg
add
push
sub
xchg
sub
add
cmpsb
inc
rorb
and
lds
add
std
pop
popf
hlt
fwait
or
leave
shrl
orb
pop
rolb
aad
mov
jns
jno
add
rcrl
inc
pop
adc
mov
sub
pusha
aam
add
cmp
xchg
sbb
push
pop
add
adc
push
or
mov
test
in
adc
sub
xchg
dec
mov
mov
pusha
adc
or
pushf
addr16
fwait
les
sbb
shll
mov
leave
clc
add
loope
push
popf
pop
daa
sbb
sub
mov
subb
pop
add
xchg
les
lock
jo
cmp
fildl
jp
adcb
jns
les
rorl
or
push
xchg
sbb
sbb
inc
arpl
pusha
lcall
test
cmp
incb
das
sub
cmpsb
push
push
cltd
add
ficomps
inc
imul
jecxz
sbb
inc
fs
jmp
jns
xor
outsb
add
jae
lods
fdivr
fbstp
add
scas
in
sub
bound
adc
xor
jae
and
cwtl
nop
sarl
dec
stc
sub
loop
push
out
into
push
and
iret
xchg
test
jecxz
lea
mov
add
inc
les
mov
add
test
xor
imul
mov
jmp
or
sbb
mov
add
jnp
xor
push
out
pop
mov
insl
inc
loope
sbb
and
sbb
inc
imulb
cmp
inc
add
add
sbb
sarb
mov
cwtl
dec
xchg
call
add
icebp
pop
inc
daa
imull
push
sub
sub
loop
aam
and
inc
pop
sbb
loop
inc
lcall
pop
sub
popf
leave
add
jecxz
pop
out
and
pop
adc
es
mov
inc
add
add
xor
dec
add
fidivrl
inc
xlat
bnd
nop
out
jg
add
sub
fs
dec
lea
dec
jo
add
lcall
lds
pop
lahf
out
push
sbb
and
add
inc
imul
shl
insl
in
add
mov
mov
adc
fdivs
clc
xor
cwtl
int
popa
rcrl
outsl
mov
mov
jl
push
and
mov
std
add
aad
les
cld
call
cmp
cmp
mov
call
aaa
pop
add
xchg
nop
mov
imul
mov
orb
lea
ja
jl
jp
das
inc
add
in
cli
fdivl
mov
add
mov
sub
add
in
imul
mov
jp
xor
jno
fdivrs
add
jae
adc
jno
inc
push
ja
add
or
hlt
lods
pusha
jg
add
xor
pushf
add
enter
inc
cmp
add
into
jne
add
adc
adc
pop
movsb
sub
add
pushf
cmp
xor
jl
push
xchg
mov
dec
rolb
repz
cld
nop
shrd
xchg
loopne
sbb
or
add
aam
xor
or
stc
xsha256
or
xchg
mov
add
adc
add
imul
cmp
ja
inc
and
pop
mov
fldenv
dec
mov
fisubrl
lcall
pcmpeqb
xor
xor
sti
test
cmp
in
shlb
roll
iret
cmc
push
adc
inc
cs
test
imul
es
xchg
testb
mov
out
imul
mulb
out
leave
dec
sbb
cmp
cmp
mov
cmp
inc
adc
cs
add
jge
adc
mov
inc
orl
sbb
scas
xor
sahf
pop
add
or
aam
aaa
addl
xor
inc
mov
mov
fwait
add
push
add
mov
test
popa
and
add
jge
push
add
mov
push
jo
add
xchg
rclb
mov
scas
dec
fldl
ljmp
cld
add
xchg
or
ja
rolb
lret
jmp
adc
sbb
mov
cmc
sub
fdivr
mov
add
clc
push
adc
inc
mov
xor
add
hlt
cmp
popl
ret
or
inc
xchg
aas
mov
insl
and
lock
or
data16
leave
xchg
sub
or
add
pop
jnp
mov
mov
push
add
jne
adc
mov
cmpsb
cli
sub
cmp
jne
cmc
shll
add
loop
scas
pop
xchg
add
cs
enter
ds
jnp
fisubs
clc
sbb
test
stc
inc
das
in
add
push
iret
mov
mov
inc
sub
xor
cld
cmp
add
inc
out
jo
adc
testb
inc
pop
adc
jecxz
dec
inc
sbb
lods
and
insl
push
jne
add
roll
cmovg
lods
shlb
rorl
push
push
or
jge
add
xor
jo
addr16
add
cmp
insb
lods
fiaddl
jnp
sbb
mov
orl
and
hlt
pop
add
shl
popf
lcall
jge
lds
add
cs
cltd
add
or
outsw
mov
sbb
gs
mov
fldt
cmp
fsts
pushf
xchg
push
jne
push
push
das
and
add
cs
mov
jl
push
loopne
pop
xor
and
sbb
mov
jb
int
dec
inc
cli
ljmp
insb
cmp
ja
pop
xchg
cmpsl
adc
fwait
push
jl
test
sub
pop
jp
ljmp
dec
fdiv
sbb
in
xor
or
xchg
jne
pop
sub
jae
xor
jle
jmp
xor
not
js,pt
notb
in
daa
aas
push
sbb
xchg
adc
or
push
mov
fs
lods
push
mov
loope
and
sti
push
cmp
lret
add
sbb
mov
sbb
sub
je
add
clc
xchg
ja
pop
dec
aas
inc
sahf
add
in
cltd
dec
stc
loop
push
mov
sub
add
xor
mov
push
add
movsb
and
cs
add
test
movsb
out
pusha
fwait
hlt
add
rcl
femms
add
pop
test
or
lea
jbe
add
mov
jnp
add
mov
push
sbb
mov
sbb
cmp
xchg
lods
pop
dec
lock
dec
jp
add
dec
repnz
js
pop
addr16
or
and
cmp
mov
push
mov
add
mov
mov
insl
inc
add
fmull
xchg
add
sub
lock
dec
les
mov
loope
push
add
mov
lahf
lahf
loopne
ret
push
incb
or
mov
pop
xchg
fldl
inc
mov
loop
jmp
cmp
test
adc
fs
enter
jecxz
and
xor
js
mov
sbbb
mov
adc
mov
repz
mov
mov
lret
dec
jo
sbb
roll
xchg
pop
push
dec
lock
shr
in
fldpi
adc
loopne
aad
popa
fisubs
aas
xchg
xor
inc
sub
xchg
add
nop
push
sti
jne
in
push
jae
xor
and
popa
out
shlb
call
mov
push
mov
repz
cmpsb
mov
jg
cld
ret
mov
xchg
cmc
mov
cmpb
inc
stc
xchg
cld
inc
and
out
mov
jmp
fimuls
out
or
in
add
loopne
or
xor
jb
inc
and
shll
xor
aad
in
pop
clc
pop
add
call
and
inc
cmp
sbb
sbb
sub
adc
rolb
nop
inc
push
adc
hlt
pop
pusha
or
mov
push
mov
insl
divb
push
inc
xor
leave
lret
testl
enter
movsl
pop
sbb
add
adc
xchg
inc
std
in
orb
arpl
sbb
mov
je
pop
sub
mov
xchg
jae
add
ja
mov
jmp
cli
rolb
mov
jo
shll
sbb
bound
mov
add
cltd
popa
fcmovb
fwait
add
xbegin
add
mov
shlb
sub
std
cltd
fisttpl
out
xchg
sahf
sbb
enter
lret
out
div
sbb
es
xor
xchg
xor
or
fisttpl
subl
inc
pop
cwtl
lock
andl
jb
cltd
adc
add
and
sbb
insl
test
inc
sbb
cli
and
adc
and
mov
clc
scas
xchg
mov
lods
test
sbb
test
sbb
nop
xchg
push
adc
xchg
imul
cwtl
nop
mov
test
adc
insb
lea
jge
rorb
fmull
jmp
adc
bound
xor
xorb
pop
cli
cld
add
push
jnp
push
fisubs
scas
popl
inc
gs
mov
adc
push
and
dec
mov
adc
test
inc
and
mov
mov
enter
adc
stc
pop
cmpsb
rolb
mov
sub
jecxz
hlt
cmp
gs
test
jno
push
out
mov
out
jmp
and
push
lock
adc
inc
sbbb
int
into
push
mov
adcl
pop
push
sub
pop
mov
dec
pop
rolb
and
sub
sub
mov
aas
sub
mov
and
cli
add
jg
out
adc
lds
push
in
outsb
test
xor
mov
mov
mov
xchg
sar
sub
ds
add
xchg
incl
jmp
push
idivb
dec
es
adc
add
push
es
add
rclb
inc
fidivl
push
or
icebp
adc
xor
xor
add
pop
sub
sarl
rorl
xor
fwait
stos
inc
stc
push
pop
push
cmp
int3
iret
add
xor
fiadds
mov
sbb
sbb
stc
sbb
out
aaa
aam
cmpsl
shr
sub
cmp
insb
and
cmp
add
bound
sbb
xor
std
rclb
iret
cmp
xor
mov
je
push
cwtl
test
add
sub
jp
sbb
mov
sbb
and
mov
mov
xor
add
xchg
jecxz
clc
loopne
test
shlb
popa
cmpsl
addl
mov
inc
cmp
add
xchg
stos
cmp
sbbb
xchg
pop
cs
cwtl
rolb
es
push
subb
dec
jns
popf
loop
add
cmpsl
rorl
fmull
lods
pushf
sub
mov
shr
push
call
add
out
sahf
mov
sbb
adc
icebp
or
xor
call
cmp
hlt
xor
sbb
test
in
push
pop
les
mov
sub
add
xor
cli
adc
dec
or
fwait
test
rol
adc
fidivl
mov
xor
inc
popa
mov
xor
das
sub
aaa
test
adc
mov
sti
push
call
adc
les
cmp
jle
cmp
shl
inc
add
jmp
mov
lods
stos
add
mov
add
ss
sbb
fnstsw
inc
and
adcl
test
sub
movl
mov
pop
fcompl
add
call
in
inc
enter
in
push
mov
and
add
orb
add
push
push
cmpb
sub
aaa
pop
inc
mov
sbb
add
test
sub
clc
inc
aaa
lahf
sbb
loope
nop
cmp
push
jns
and
imul
ss
cmp
enter
and
adc
dec
push
lcall
pop
stc
jmp
mov
test
movsb
and
xor
rcll
sarl
add
push
arpl
mov
adc
and
stc
pop
and
enter
je
or
sbb
push
mov
add
scas
mov
lcall
add
iret
mov
push
add
negl
rcl
shrb
bt
enter
mov
inc
add
lcall
outsl
and
mov
push
xlat
sub
cmp
sbb
add
shll
enter
add
rol
ljmp
mov
sbb
jmp
push
aaa
dec
mov
mov
rolb
mov
cmc
jg
in
popa
push
adc
cmpsl
push
fnstcw
lcall
pushf
mov
dec
mov
cmpsb
into
push
popf
jmp
add
bound
add
xchg
imul
sub
dec
adc
sarb
and
mov
inc
enter
jno
add
cmp
xor
lea
test
or
clc
xorb
lods
out
xchg
cmp
xor
sub
jge
cmp
cmpsb
into
xchg
repz
mov
xchg
add
dec
ficompl
mov
mov
outsl
jecxz
ret
xor
cmp
sub
cmpsl
adc
jmp
sbb
hlt
mov
add
dec
adc
add
or
xchg
and
cld
push
sbbl
inc
add
xor
cmp
push
lock
loope
add
inc
ss
shrb
cmp
imul
flds
aam
ss
iret
inc
cwtl
movsl
movb
adc
sub
pop
es
pop
jg
add
nop
lods
or
jae
push
addb
insb
push
cmp
mov
xchg
jae
inc
clc
mov
cld
add
pop
push
sub
lods
add
pusha
mov
hlt
jo
push
aaa
lock
rclb
fsubs
icebp
jge
jno
add
xchg
test
mov
arpl
frstor
rcrb
and
mov
call
add
jl
je
add
fimull
mov
add
mov
xchg
inc
add
jge
add
jmp
call
enter
loopne
lahf
imul
adc
idivb
ja
add
fsts
cmp
test
adc
je
sahf
push
shr
xorb
out
pushf
sub
addb
or
add
in
jo
add
mov
jae
clc
xor
in
jge
adc
sbb
sbb
push
fmuls
lret
inc
aam
mov
test
adc
loopne
add
jb
rorb
xor
xor
ss
sub
in
lea
sahf
test
into
lret
fdivrl
mov
add
cmp
inc
pop
xchg
xchg
and
add
or
mov
or
repz
add
and
icebp
xchg
clc
insb
pop
cmp
adcb
sub
jns
mov
and
bnd
shlb
add
mov
add
xor
jns
popf
stos
pop
cwtl
add
shrb
or
jno
cld
ljmp
sub
add
leave
cmp
or
mov
les
sub
push
out
add
jmp
sub
in
and
sub
ds
fstpt
add
dec
stos
add
adc
data16
cltd
jno
js
cmp
xor
loopne
add
mov
jne
inc
lock
loope
push
aam
aas
pop
loope
inc
into
push
flds
repz
adc
aad
iret
add
cmpsb
in
pop
fisubl
movsw
dec
or
add
imul
and
lea
mov
add
stos
xor
pop
mov
pop
cwtl
data16
es
rcl
adc
pusha
xor
pusha
fisubrs
dec
add
fucomi
ret
repnz
imul
mov
aas
fimull
add
dec
je
sbb
sub
es
hlt
orb
cli
pop
in
andl
sbb
push
jbe
cmp
lret
mov
arpl
mov
mov
mov
pop
sub
add
adc
push
xor
scas
xchg
sbb
dec
mov
adc
sub
push
in
and
xchg
or
fldenv
xor
xchg
add
or
or
fs
xlat
pusha
es
hlt
mov
test
lret
adc
clc
lods
mov
sahf
int
outsb
pop
fcmovb
jns
test
pushf
lds
add
aad
test
gs
pop
add
aas
roll
imul
call
mov
inc
sahf
push
ss
adc
sbb
push
xor
mov
pop
ret
addr16
and
sarw
add
cltd
push
imul
lcall
add
in
adc
xor
push
xchg
jns
mov
cmp
xor
aas
add
lcall
aam
mov
movntps
addb
mov
flds
add
inc
sub
sub
add
pop
jnp
fnstsw
cmp
add
nop
rclb
push
pop
arpl
into
rcl
adc
add
test
nop
nop
in
add
sbb
rep
push
sbb
jns
lcall
lahf
sahf
dec
outsb
imul
or
nop
cmpsl
push
add
xorl
cwtl
add
ret
jae
and
pop
filds
pop
mov
scas
mov
nop
jo
sbb
cmp
push
out
add
push
cld
xchg
jl
shll
add
or
add
outsb
push
mov
pop
lcall
add
cwtl
flds
dec
add
dec
repnz
or
sub
nop
inc
adc
mov
sbb
adc
jne
add
addr16
out
lahf
cmpsb
push
pop
sub
jae
jmp
mov
and
dec
adc
mov
mov
popf
cwtl
repz
test
test
inc
sub
test
add
sbb
xchg
mov
add
js
stc
jnp
xchg
add
fcomps
out
arpl
popf
loop
add
incb
add
push
inc
jge
cmp
mov
sbb
sub
mov
mov
cmp
inc
pop
or
out
cmp
sub
pop
mov
stc
aam
mov
dec
iret
sub
adc
jp
xorb
loop
jmp
xlat
jecxz
mov
dec
and
sarl
adc
xchg
mov
rcr
cld
add
dec
or
pop
pop
rolb
es
lret
pop
add
fsubrs
rorb
das
inc
pop
add
les
imul
les
and
lahf
xor
stos
shr
cltd
rcrb
pop
sub
iret
add
sbb
jno
jns
icebp
mov
in
inc
mov
test
add
pop
adc
addb
or
mov
xchg
ds
enter
add
scas
bound
xor
jle
pop
cmpsl
xchg
rolb
add
fmuls
cmpl
and
bound
lahf
dec
adcb
mov
and
cmovs
rcrb
sub
daa
sbb
fdivrp
loop
or
mov
sti
sbb
mov
xor
inc
clc
adcb
pop
stos
test
adcl
scas
leave
mov
mov
pop
mov
cmp
rclb
mov
das
sbb
pop
sbb
add
leave
repnz
push
lods
add
test
sbb
cmp
movsb
rorl
xchg
nop
cmp
xor
adc
shrb
mov
add
jns
and
in
ljmp
insl
sbb
out
add
stos
push
xor
pop
in
and
jmp
push
je
mov
add
mov
push
push
faddp
add
jo
mov
pop
add
jmp
je
cmpb
ficoms
inc
faddl
mov
mov
jo
enter
lret
and
clc
cmp
add
ficoms
sub
dec
leave
adc
xchg
push
and
pop
pop
add
cli
lea
push
jb
out
testb
mov
push
fstpl
mov
cmpsb
mov
mov
fsubr
add
lock
add
xchg
leave
xchg
add
ljmp
jmp
loopne
push
push
pop
les
mov
daa
rclb
push
or
andb
mov
adc
mov
pushf
hlt
jge
sub
or
lock
fbstp
mov
in
arpl
add
jl
sti
call
mov
mov
inc
lahf
and
fdivrp
add
push
pusha
loopne
pop
pop
aam
repnz
xor
mov
arpl
inc
add
mov
push
in
add
add
shrl
les
gs
jl
dec
add
sub
or
aaa
and
cmc
mov
lods
bound
gs
les
test
xor
xor
orb
inc
ja
xchg
add
int3
mov
add
repz
orb
pop
mov
scas
je
mov
add
mov
pop
add
and
mov
data16
add
icebp
mov
scas
jl
in
dec
cmp
mov
test
cmp
push
mov
jo
clc
repnz
add
pop
pop
insb
xor
pop
fs
int3
mov
cld
jno
ja
xchg
sbb
or
jmp
jne
or
sub
mov
and
inc
cld
in
sti
insl
cmp
cwtl
adc
push
vpandn
imul
test
adc
popa
inc
lret
das
lods
ss
add
mov
pcmpeqb
jns
jo
add
int3
push
xchg
ret
arpl
shll
pushf
sbb
test
in
add
mov
xlat
loop
loopne
sbb
mov
and
cmpsb
dec
add
xor
jg
push
sbb
jo
mov
arpl
mov
test
loopne
jle
add
jp
loope
adc
mov
mov
int3
add
xchg
jle
in
sub
add
cmp
adc
inc
push
popa
jmp
cltd
les
push
add
into
sbb
add
fiaddl
fnsave
sarl
mulb
add
faddp
popl
mov
add
mov
nop
xor
notl
out
jl
or
adc
mov
mov
lea
lock
xadd
icebp
fsubp
mov
mov
int3
sbb
mov
xchg
adc
pminub
sbb
xor
sub
add
sbb
ret
iret
add
clc
mov
sbb
scas
lahf
cli
or
and
lret
xor
loopne
mov
add
mov
pusha
pop
fisubs
dec
add
daa
mov
xor
in
or
add
mov
outsb
cmp
cmp
xorb
push
xor
mov
call
insb
push
out
sbb
pop
pop
stc
cmc
clc
subb
inc
addl
das
add
push
pop
adcb
mov
add
mov
inc
cld
sub
inc
dec
iret
mov
xchg
add
fcoml
add
jbe
adc
pop
clc
out
call
shlb
add
inc
leave
mov
pop
xchg
aaa
add
daa
fidivs
data16
pusha
sbbb
int3
das
in
inc
insb
push
xor
ret
inc
loopne
jge
es
andl
or
sbb
push
shr
pop
sbb
xor
xchg
adc
shll
test
movsl
mov
push
mov
mov
add
insb
pop
andb
add
lcall
pop
inc
cmp
fadds
addr16
or
movsb
xchg
shl
stos
inc
adc
xor
xchg
add
testl
add
je
in
add
lods
add
sub
add
dec
sbbl
xlat
pop
add
repz
add
cmp
or
es
jne
mov
add
add
dec
xchg
add
pop
inc
mov
or
popf
pop
andb
clc
dec
jno
es
mov
dec
add
jae
pop
lcall
or
xor
xchg
lds
and
dec
mov
pop
xorb
rorb
ss
adc
pop
add
js
push
enter
outsb
fsubrl
cmpsb
adc
dec
sbbb
fmulp
dec
cmpsl
sub
jecxz
fisttpll
and
xchg
cld
inc
push
xchg
arpl
mov
cmp
rolb
jge
dec
pushf
add
xchg
dec
mov
add
pusha
or
push
clc
xor
sbb
jmp
test
cmp
xchg
fisttps
mov
mov
int3
aad
fwait
jns
jmp
xor
sbb
mov
cmp
add
fwait
mov
aas
add
sbb
push
in
add
into
adcb
ljmp
or
enter
or
xchg
mov
jg
add
insb
scas
xchg
push
stos
lock
or
add
cmp
in
add
push
xorb
jo
add
dec
inc
lahf
pop
lret
cmpsb
xor
cmp
cmp
subb
jno
sbb
cld
push
call
and
jo
xchg
add
or
movb
stos
stos
mov
mov
jp
mov
out
mov
roll
xchg
mov
out
sub
dec
mov
cmpb
cli
cmp
xor
mov
cld
int
imul
in
sbb
popa
adc
mov
fsubrl
pushf
popf
fcoms
add
and
mov
adc
xchg
cltd
in
add
inc
mov
in
ljmp
imul
mov
cmp
loop
push
add
push
imul
sbb
add
pop
or
pop
imull
sbb
or
stos
sbb
les
fisttps
insb
xor
clc
inc
push
dec
divb
mov
pop
add
out
inc
dec
and
mov
mov
push
fnstsw
jle
cmp
push
fbld
add
imul
jl
cwtl
add
int
sub
test
xchg
lods
add
or
mov
push
dec
stos
jb
lcall
fadd
imul
and
test
xchg
adc
xlat
jb
sbb
cmp
mov
push
lcall
cmp
push
sub
add
aam
xchg
add
rorb
dec
mov
push
fdecstp
add
cltd
je
pop
test
mov
dec
negb
adc
jb
outsl
add
add
adc
popa
ret
mov
add
leave
mov
mov
lcall
ja
fwait
inc
popw
xchg
std
cmp
and
push
ret
push
or
cwtl
add
es
jg
add
pop
jmp
aaa
or
lret
loopne
sbb
and
lret
add
and
ret
pop
add
arpl
xor
mov
jno
fwait
out
fsubl
aas
pop
xchg
sub
test
mov
lahf
lods
add
sub
jge
std
out
sub
fwait
mov
push
push
xorb
add
inc
lea
xchg
inc
sub
repnz
add
test
aam
add
xchg
dec
ljmp
cmpsb
sub
push
cwtl
arpl
aam
shlb
add
pop
dec
xor
icebp
stos
pusha
push
mov
pop
imul
jge
pop
inc
and
xchg
add
mov
das
jg
lahf
add
jp
repz
jne
mov
rcrl
cmp
mov
add
adc
mov
fadd
and
inc
sub
push
ss
lret
adc
pop
in
sub
inc
inc
mov
bound
adc
clc
das
inc
sub
mov
add
mov
mov
bound
jg
imul
loopne
mov
mov
mov
movl
mov
sbb
inc
ds
cmp
fwait
add
cmp
add
call
add
dec
add
xlat
enter
add
aas
cmpsl
aaa
inc
or
adc
ss
adc
push
sub
jae
sbb
pop
inc
and
add
add
loopne
xchg
add
pushf
push
xchg
sub
aam
aad
inc
mov
inc
inc
subb
mov
adc
orl
dec
mov
incb
mov
fcoms
adc
stc
xchg
pop
aad
mov
xor
or
and
clc
rcrb
nop
xlat
jnp
add
add
sub
mov
mov
push
shrb
or
std
inc
cmp
nop
loopne
pop
adc
fbld
and
in
sbb
popf
aad
jbe
xor
push
and
xchg
push
inc
dec
cmp
mov
or
or
addr16
lcall
mov
repnz
enter
add
sub
pop
repnz
adc
movsl
dec
shl
pop
inc
test
dec
mov
lret
add
movsb
out
pop
data16
lods
stc
xchg
add
push
data16
xlat
nop
test
insb
or
push
pop
inc
xor
les
call
stos
pop
in
add
push
in
nop
add
test
rcrl
testl
add
cwtl
add
sub
enter
mov
ljmp
pop
enter
mov
cmp
add
rcll
sbb
outsb
add
orb
scas
dec
fcoms
cld
push
cmp
iret
cmp
adc
dec
nop
xor
test
xor
push
into
jo
out
jl
dec
add
ljmp
pop
or
or
sbb
stos
pop
test
lret
sti
add
push
sbbl
add
or
inc
cwtl
pop
pusha
sbb
add
or
loopne
jle
inc
or
add
push
xor
insl
js
cltd
orl
cmp
push
fldl
mov
sub
pop
or
lahf
dec
pop
fwait
loop
icebp
push
bound
add
cmpl
add
icebp
pop
add
test
mov
mov
insl
arpl
int
in
out
aas
faddl
aaa
push
mov
std
add
cmp
in
ret
in
and
in
jbe
adc
les
xor
fimull
mov
xor
mov
outsl
sar
jecxz
lahf
daa
mov
jl
movl
cld
mov
test
push
jne
pop
or
int
mov
aam
insb
sarb
mov
sbb
push
out
cmc
pop
push
cltd
inc
add
mov
cs
ret
fstps
lahf
shlb
dec
fildll
mov
iret
testb
in
add
push
fucomip
roll
popf
pop
ja
add
dec
out
das
sbb
adcl
adc
mov
add
leave
popa
aad
xor
and
sbbb
shll
mov
add
and
movaps
mov
leave
xor
mov
mov
mov
cmpsb
and
int3
add
dec
les
pcmpgtw
and
std
push
pop
add
xorb
cmp
mov
cmp
insl
es
push
out
adc
loop
test
loope
pusha
xor
sysexit
lcall
mov
push
daa
pop
mov
mov
rcrb
aaa
dec
mov
and
loop
cmp
int
pusha
sub
rolb
stc
test
cmp
mov
std
cmp
in
and
cwtl
mov
mov
clc
sub
subb
shlb
xchg
xor
xor
add
add
or
mov
jae
aad
xchg
xor
aas
pushf
push
cwtl
sub
negb
push
cmp
push
add
mov
stos
scas
or
or
push
fcomps
add
dec
pop
sbb
mov
bound
orb
pop
test
cmp
inc
in
shlb
shll
xchg
cwtl
mov
cmp
jmp
cld
sbb
scas
popf
sar
sub
pop
rcl
jb
rolb
sbb
int3
js
fsubs
arpl
inc
adc
jecxz
xchg
add
les
gs
xchg
andb
add
in
fisttpll
lods
stc
jbe
lcall
and
xchg
into
add
and
push
mov
push
xor
mov
ds
lock
test
enter
daa
dec
adc
xchg
lods
adc
sub
cmp
mov
orb
mov
sarl
cmp
add
cmp
fwait
mov
add
out
cli
add
dec
loope
mov
popf
xor
add
iret
popa
cmp
pop
ds
mov
sbb
test
add
dec
call
sub
insl
add
sbb
sahf
dec
adc
loopne
xchg
push
adc
in
out
add
clc
sarl
pop
jge
movsb
ja
add
mov
dec
shlb
in
push
aaa
xchg
adc
cs
or
ljmp
test
stos
das
and
loopne
sbb
mov
push
xchg
imul
lock
cmpsb
loope
ret
and
or
sbb
rorb
jo
imul
je
pusha
or
pop
mov
sub
add
jnp
or
aaa
adc
add
push
dec
rolb
cli
jp
fs
test
mov
cwtl
add
repz
sbb
and
dec
aad
stc
mov
ja
sbb
enter
mov
and
cmp
call
sub
mov
pop
fcomip
jg
sbb
out
xchg
pop
pusha
jge
mov
in
dec
mov
icebp
dec
xchg
int
adc
sub
mov
or
cmp
mov
sub
lea
xchg
cmp
test
xchg
cld
sub
popf
xchg
in
ret
sahf
in
push
lock
mov
hlt
jne
dec
mov
sub
insl
add
cmp
pop
jae
push
pop
aas
adc
add
addr16
insb
xor
inc
addb
jmp
inc
imul
dec
ror
sbb
loopne
bound
xchg
ror
xor
push
or
or
ss
icebp
inc
xchg
lods
mov
pop
fstpl
fcoms
int3
sub
and
aas
mov
notl
int
movsb
adc
add
movb
add
cmp
int
outsl
sahf
jecxz
cmpsl
addr16
lods
outsb
push
lea
sbb
inc
inc
jmp
pushl
pushf
xor
or
or
push
aaa
pop
cmpsl
insb
mov
clc
push
push
cmp
mov
xor
aaa
dec
add
pop
cmp
pop
mov
jle
je
mov
int
jbe
xlat
in
xor
dec
in
sub
nop
sarl
loopne
cmp
ss
sbbb
mov
sbb
sbb
mov
test
mov
add
out
ficomps
mov
push
or
dec
pop
add
jb
imulb
mov
pop
pusha
sub
mov
adcb
and
jle
repz
cmp
sub
cs
leave
mov
add
jmp
movsb
and
and
pushf
xchg
ret
or
andb
xlat
cmpsb
adc
fnstcw
add
stos
xchg
nop
inc
subl
cmp
pop
push
add
adc
push
adc
add
inc
dec
mov
push
dec
inc
mov
adc
jo
add
stos
xor
jb
cmp
cmpb
in
jle
push
in
pusha
jb
lcall
push
add
xchg
enter
add
mov
lret
add
testl
jl
or
cwtl
ljmp
decb
popw
adc
bnd
pop
add
cmp
pop
cwtl
call
in
roll
rorb
mov
nop
rorb
mov
jo
pop
adc
add
enter
shlb
sub
adc
fists
dec
icebp
xor
and
mov
shrl
stos
cltd
xchg
jne
add
add
dec
sahf
dec
jecxz
les
lods
cmpb
ret
aad
cmp
cmpsl
and
and
inc
ljmp
sub
fildl
and
inc
push
cmc
dec
inc
loopne
lahf
add
shlb
jge
cmp
add
cs
icebp
or
and
mov
xor
sub
repnz
pop
pushf
insb
clc
jb
push
cmp
add
jo
pop
in
xchg
dec
sbb
or
add
mull
pop
push
outsl
add
in
enter
pop
mov
iret
movsl
out
xor
pop
leave
mov
add
pop
test
add
cs
lret
stos
sub
rcr
add
insl
movb
sub
call
rolb
xlat
cmp
add
loope
push
jecxz
data16
mov
loop
lock
mov
roll
push
push
adc
mov
push
mov
and
fdivp
mov
xchg
call
xor
xlat
pop
sub
cli
scas
mov
test
js
xor
loope
pop
mov
mov
or
sub
and
pop
jne
in
stos
xchg
add
cmp
mov
mov
repz
add
fdivrp
mov
jns
in
jmp
out
and
add
je
xchg
fadds
test
dec
jnp
adc
mov
arpl
dec
inc
add
movsb
xchg
das
add
jb
sbbb
add
cmp
icebp
jnp
xlat
add
lods
in
loope
loopne
sbb
cmp
xchg
cltd
mov
jo
decb
pop
test
out
out
cmp
and
pushf
daa
push
filds
mov
adc
cmp
fwait
add
mov
add
pop
add
mov
pop
les
aad
movsb
push
push
insl
jns
push
inc
call
add
cmc
shrb
pop
add
adc
jbe
mov
je
fs
pop
loope
or
pop
inc
icebp
jl
xchg
add
cs
add
mov
sbb
test
jo
shlb
inc
add
add
mov
sbb
push
add
fistps
dec
jge
jae
add
pushf
nop
fiadds
out
adc
mov
add
andl
aas
data16
add
adc
sbb
fsubrl
fisubl
sbb
lock
adc
dec
sbb
out
jno
add
and
jmp
dec
mov
iret
push
adc
push
inc
popf
mov
jg,pt
pushf
lods
jp
adc
fs
pop
sub
test
call
ljmp
push
mov
pop
dec
mov
add
pop
cmp
fildl
sub
pop
out
add
and
jae
loope
add
orb
push
sub
push
mov
fisubrs
rolb
cmpsb
in
test
jge
sbb
shll
insl
add
lock
adc
dec
sar
clc
cs
push
cld
add
add
inc
mov
lret
js
pop
enter
nop
push
add
cmp
fstps
mov
ret
scas
js
dec
pop
popa
jmp
in
dec
insl
cwtl
add
jae
rep
inc
add
std
rcrb
mov
push
cmp
fsubrp
mov
pop
daa
pop
inc
inc
in
sub
push
push
add
pushf
sahf
nop
fwait
lds
cmp
push
in
cmp
test
jnp
rcrb
enter
sub
dec
fldcw
add
mov
out
xor
push
fadds
adc
push
repnz
add
jg
mov
xchg
add
jo
test
lea
add
fmull
inc
in
cmp
aad
loopne
insb
add
std
mov
lds
nop
test
sbb
sbb
ficoml
cmp
inc
call
in
jp
fidivs
nop
cwtl
daa
mov
orl
mov
mov
or
pop
pop
arpl
and
mov
cmp
mov
repz
dec
xchg
popa
mov
inc
sbb
xor
loopne
sbb
jo
lret
push
shll
imul
sbbb
ret
jle
xchg
pop
stos
mov
push
add
mov
and
push
lods
lock
push
out
lcall
jl
or
inc
loopne
add
cs
mov
xor
pop
loope
and
stos
sbb
mov
dec
pusha
sbb
push
lahf
add
mov
popf
cmp
stos
shll
aad
out
les
cld
add
add
cmp
push
into
fmuls
sbb
add
cmpsl
jmp
add
clc
inc
pop
aas
dec
mov
pop
dec
mov
add
icebp
cmpsl
add
ds
mov
fstpl
jmp
fsubrs
add
push
testl
int
cmpl
xchg
dec
jmp
jl
adc
add
movsl
call
dec
add
aam
outsb
stc
aad
sub
mov
data16
loopne,pn
add
mov
xor
addb
lcall
xchg
pop
mov
mov
xchg
mov
gs
je
test
fcoml
and
mov
xorl
mov
mov
add
repz
inc
dec
fiadds
sar
jbe
lock
popf
outsb
jmp
int3
add
dec
psrlq
cmp
shlb
add
icebp
add
ss
sbb
pop
xor
add
ret
cltd
cmp
hlt
cmp
mov
cmp
in
add
inc
lods
in
adc
nop
arpl
loopne
sbb
cmp
add
loope
adc
stos
jp
add
push
fsubrs
shlb
je
inc
rcrb
sbb
shl
mov
js
mov
addl
xchg
mov
rcrl
and
fs
sub
xchg
cs
jl
add
nop
push
dec
out
add
ja
add
movsb
aam
stc
shl
add
in
or
hlt
enter
mov
add
mov
cli
push
sbb
or
mov
rcrb
pusha
xchg
decb
jno
cmp
call
psrld
dec
std
add
pop
pop
mov
xor
xchg
cmc
clc
pusha
out
push
ret
mov
add
dec
outsl
rol
xor
and
sbb
push
add
call
scas
sub
out
insb
stos
jnp
add
ret
out
sbb
test
jb
lock
repz
fidivl
adc
pop
outsb
inc
mov
jnp
das
out
cmp
pop
push
adc
push
bound
jle
cld
push
out
aaa
pop
xlat
add
jl,pn
shrb
nop
gs
ret
mov
mov
and
iret
mov
push
pop
or
jbe
dec
and
adc
mov
push
cmp
inc
pop
jae
hlt
cli
mov
xor
jnp
cs
cmp
rolb
je
jg
daa
sub
sub
stos
lahf
xchg
mov
or
mov
in
dec
pop
pusha
push
mov
push
jg
or
out
sbb
and
adc
xchg
add
or
push
jge
add
cmpsb
movaps
lods
and
inc
add
sbb
mov
rcl
aas
lods
enter
mov
movsb
push
add
hlt
jnp
ljmp
daa
cld
int
pop
mov
test
mov
xlat
cmc
repz
mov
lcall
add
adc
cmp
adc
sub
imul
add
xor
pop
adc
lock
mov
pop
je
cmp
sti
xchg
add
fnstcw
adc
add
sbb
cwtl
loop
out
movsb
jo
aam
inc
dec
mov
and
push
add
push
loop
mov
mov
add
and
pop
jp
in
push
mov
fdiv
shl
in
and
xor
or
push
sbb
pop
shlb
xchg
mov
jge
add
jb
xlat
adc
aaa
xor
adcl
sbb
stos
cmpsb
xchg
sbb
or
pop
imul
mov
add
mov
icebp
xor
popa
cli
lea
fxch
mov
movsb
add
sub
or
call
push
jae
jg
add
adc
mov
push
mov
xchg
xor
jno
loope
repz
sub
bound
jmp
add
cmp
fisttpll
push
shrb
insb
pop
ret
sbb
pop
add
add
or
jno
add
xchg
add
lock
fbstp
xchg
fnstcw
into
cld
xchg
and
aaa
sub
sub
outsb
orl
notl
xlat
pusha
sbb
int3
sub
adcl
js
lea
pop
add
xchg
stos
in
jge
mov
pop
test
push
les
xor
mov
cld
fistpll
dec
cs
pop
add
fsubr
cmp
mov
outsb
pop
dec
repnz
jmp
or
xor
out
hlt
add
pop
sub
dec
incb
adc
cmpb
push
mov
fcoml
mov
outsb
inc
in
inc
orb
adc
sbb
popa
gs
jle
adc
int
fdivs
xorl
add
scas
sbb
jle
dec
enter
push
loop
in
xchg
ljmp
into
cmpb
add
fnop
mov
pop
stc
jge
pop
test
fildl
cltd
in
sub
call
aas
push
and
mov
and
mov
cmpsb
pusha
ds
test
fdivs
push
out
inc
icebp
fisttps
adc
add
mov
adc
and
cmpl
sub
or
clc
mov
push
std
dec
mov
add
ja
aas
xchg
mov
fldcw
inc
adc
loopne
xchg
xor
aam
xor
int
xor
inc
les
add
jns
pop
add
sbbb
paddusb
cmp
mov
push
push
cmc
popf
mov
fsts
jp
xchg
push
cmpsl
inc
and
add
test
je
xor
pusha
sub
cmp
fldcw
add
push
mov
cmp
fdivrs
aam
movsb
movb
xchg
imul
in
out
icebp
int
sbb
jle
das
shlb
jl
cwtl
inc
push
in
fdivrl
xor
lods
cli
imul
sub
sbb
mov
push
movsl
jb
mov
pushf
mov
repz
lock
mov
add
lahf
ret
dec
orb
mov
pusha
mov
cmpsl
jae
cwtl
fisttpl
add
outsl
movsb
sub
jnp
inc
das
nop
mov
dec
movsl
push
int
jl
mov
bound
or
mov
and
add
aas
sbb
repz
pop
add
lret
add
push
and
mov
add
bound
loopne
lahf
test
es
sbb
and
xchg
add
jne
cs
notb
xor
call
mov
mov
cmp
bound
push
out
cltd
and
mov
mov
cld
jnp
or
xchg
lahf
mov
cmc
insl
std
xor
or
nop
lods
fistps
xchg
adc
xchg
add
jo
addr16
jecxz
fwait
inc
iret
loop
jnp
add
push
inc
adc
sbb
sarb
je
add
dec
sti
or
push
shl
rcrl
rorb
push
mov
pop
xor
add
imul
push
jne
test
or
mov
sbb
pop
inc
dec
adc
mov
add
les
jmp
push
add
dec
clc
adc
push
xchg
or
add
inc
inc
js
std
pop
lahf
cli
movsl
add
push
pop
jmp
add
test
mov
movsb
dec
xlat
jnp
mov
jns
js
das
cmpsb
and
jl
sbb
pusha
inc
mov
pop
lea
sub
rcrl
fcmovbe
and
add
mov
add
jmp
insb
in
xor
add
lock
add
fst
xor
add
xor
mov
pushf
jmp
cmp
cltd
out
in
in
sbb
bound
add
xor
dec
insb
dec
lret
cmp
dec
addb
call
daa
jle
mov
testb
pop
setle
or
xor
mov
dec
pop
add
mov
test
aam
add
repnz
add
xchg
pusha
push
movl
mov
push
rorb
clc
jg
add
inc
mov
enter
pop
movsb
out
add
pusha
ja
cmp
adc
sbb
jl
faddl
std
cld
fstps
mov
into
dec
cmp
loopne
test
adc
lret
lods
push
loopne
mov
nop
aam
arpl
mov
or
add
sbbb
add
fldt
sub
jbe
add
dec
or
adc
sbb
out
xchg
das
cmp
cmp
and
add
mov
aad
mov
add
pop
and
nop
mov
push
ret
lahf
xchg
inc
pop
pop
int3
test
mov
inc
jno
or
cli
jg
add
xchg
mov
lea
xor
jae
and
lods
sub
xchg
mov
cmpb
fildl
add
mov
dec
cwtl
mov
add
pop
jl
pop
xor
sub
jbe
mov
mov
adc
loopne
add
sbb
shrb
pop
popa
filds
adc
aas
inc
notl
add
leave
dec
mov
pop
jl
xor
jecxz
add
loope
add
es
shlb
mov
add
xchg
inc
pop
adc
in
popf
xor
les
inc
ds
jge
xor
sbb
sahf
loopne
jb
hlt
orb
imull
int
cltd
sub
add
insb
testb
cld
out
pusha
add
add
lods
filds
into
xor
xchg
in
call
pop
lret
adc
mov
cmpsb
jb
add
fcoml
hlt
xchg
sub
push
xchg
jae
scas
call
lods
fsubl
jmp
rcrb
sbb
lret
push
add
sbb
mov
jo
sbb
dec
in
cmp
fs
adcl
icebp
and
in
hlt
pop
add
aam
dec
dec
es
pop
shll
jmp
inc
addb
cmpps
xchg
mov
adc
xchg
bound
add
dec
and
fmuls
mov
add
enter
pop
bound
add
add
addb
sbb
add
out
test
mov
jg
cmp
lret
sbb
mov
jle
in
add
inc
gs
fs
popf
sbb
push
pop
dec
inc
dec
fdivs
xchg
add
repz
inc
pusha
xor
fcomps
addb
push
nop
dec
xor
imul
lock
decb
mov
daa
mov
inc
lea
sbb
jbe
or
add
mov
lds
nop
pop
and
in
sub
mov
jbe
add
test
clc
cwtl
call
lahf
fidivrl
lret
and
push
jnp
push
adc
pop
add
mov
push
sub
div
imul
sub
adc
popf
lret
je
add
cmpsl
fdivrl
add
mov
or
lcall
pusha
testl
cmp
xor
lock
mov
sub
icebp
call
ficompl
mov
inc
cltd
leave
or
xor
test
mov
push
or
ret
inc
ds
loop
sbb
gs
addr16
rclb
sbb
std
es
cmp
loopne
addl
test
dec
mov
stos
outsb
cmpl
and
out
loop
and
jg
add
fsubrl
add
aad
jo
rolb
addl
daa
inc
add
fistps
inc
test
mov
xchg
add
rol
cmp
das
addb
ds
call
sub
push
push
dec
inc
lret
pop
sbb
jo
jmp
push
mov
loop
dec
adc
add
sub
xchg
add
adc
push
mov
add
insl
mov
push
js
rcrb
cmp
dec
pop
icebp
add
nop
cmc
ljmp
cmpsb
out
out
add
sbb
mov
push
mov
sbb
andl
mov
testl
or
sarb
add
scas
xor
subb
int3
outsl
add
push
dec
lcall
mov
inc
dec
call
fs
fsubrs
movsb
cltd
xchg
shrl
sbb
pop
bound
fwait
loope
jb
adc
pop
pop
add
aam
loop
lock
out
add
inc
sub
add
add
pop
mov
je
inc
adc
addl
movsl
fs
mov
mov
or
cs
cmp
and
call
outsl
fnstsw
out
stos
sbb
sub
decb
add
dec
inc
xor
test
cmp
add
int
in
out
sub
inc
fcompl
aam
pop
cmp
imul
push
pop
sub
pop
push
adc
out
push
push
mov
jmp
inc
sbb
cli
add
loope
shl
cmc
push
add
lods
add
sbb
mov
cld
mov
in
push
sbb
andps
mov
xor
incb
lret
sbb
loopne
dec
cld
adc
jge
lea
popf
jo
iret
xlat
cmp
or
xor
add
mov
add
jge
mov
js
and
fcoms
xor
sarb
add
jno
lods
push
mov
cltd
add
ret
scas
pop
sbb
rolb
dec
jle
add
pop
and
xchg
test
push
mov
aam
je
inc
sti
add
push
aaa
xor
std
rorl
cmp
jo
hlt
jne
outsl
add
xor
sti
push
jge
cmp
mov
pop
in
sahf
lret
sarl
pushf
add
push
jmp
pop
jge
dec
jae
movswl
cld
rclb
inc
movb
ja
out
fidivl
loop
ror
sub
jb
sub
enter
lods
xchg
ja
aaa
call
or
fdivrs
add
dec
dec
add
fcoml
outsb
and
push
add
jns
adc
adc
push
sbbl
pop
fwait
jg
add
sbb
shr
pop
ja
jbe
sbb
cmc
loope
int3
cmp
mov
je
cmp
test
addb
jne
lea
xchg
inc
inc
add
cmpsb
dec
pmaddwd
inc
add
mov
jge
movswl
inc
fildll
sub
addb
fcoms
cs
andl
xor
out
mov
ret
rcl
add
mov
adc
stos
add
dec
dec
fstpt
mov
add
push
cltd
mov
add
jo
jmp
pop
add
xchg
mov
jo
ss
xor
add
negb
add
in
xchg
pop
add
push
aad
pushl
and
push
ret
xchg
add
out
push
xchg
xchg
and
nop
pop
negl
sbbl
add
ret
incl
repnz
adc
mov
in
test
pushf
cmpsl
dec
scas
leave
jmp
xchg
xchg
and
clc
lock
stos
in
or
mov
ss
xor
inc
mov
mov
lods
jno
daa
fadds
stos
add
test
int
add
mov
pushf
xor
cmp
push
into
inc
cmp
stos
das
add
xchg
jp
jl
add
and
push
lods
xor
cld
pop
jg
cwtl
in
arpl
xchg
ret
js
lahf
bt
and
push
or
fisttpll
sti
mov
jnp
mov
in
sub
fld
pop
cmp
fwait
xchg
sub
cmp
stc
ljmp
fsubs
sub
std
dec
and
sti
add
push
fcmovbe
add
and
xchg
pop
dec
adc
dec
xchg
mov
fcmovu
adcb
inc
insl
lea
xchg
fiaddl
push
adc
popa
addb
pop
icebp
iret
andb
fs
data16
xor
add
repz
add
into
subb
jb
adcb
repnz
daa
pop
sets
mov
jbe
inc
test
out
or
cmovno
inc
mov
xorb
es
add
push
pop
ja
inc
fs
adcl
loopne
pop
push
shlb
stos
out
add
out
sub
sbb
dec
pop
lret
mull
sbb
adc
popa
push
pop
dec
cmp
out
cs
ret
or
xchg
add
push
mov
add
sub
dec
jmp
addb
sbb
hlt
jecxz
nop
lock
insb
insb
inc
mov
int3
xchg
jecxz
sub
add
movsb
stos
sti
xor
test
adc
cmpb
outsl
ficoml
mov
aad
push
inc
std
jb,pn
xor
ret
nop
xchg
pop
dec
jne
fmull
adc
scas
push
es
lock
add
sbb
outsl
cmp
add
sahf
addr16
xor
and
add
push
iret
sub
in
xor
test
lcall
and
sub
add
jo
daa
jbe
and
adc
or
mov
sbb
cmp
xor
push
inc
das
pop
jns
cmc
popf
cmp
xor
mov
pop
mov
sbb
mov
outsl
pop
data16
mov
pusha
pop
mov
mov
and
movsl
push
xor
jbe
cld
gs
mov
in
out
pop
add
adc
add
jl
stc
js
sbb
pop
insb
add
hlt
pop
fs
daa
cmpsl
cwtl
add
push
loope
stos
addb
jae
inc
jb
ds
xchg
xor
push
mov
ret
mov
popf
dec
pop
imul
xchg
rorb
mov
add
insl
mov
int
push
and
movsl
les
or
lret
xorb
roll
add
cmp
or
in
cmp
lods
xchg
dec
add
xor
fstpl
fidivl
in
and
inc
pusha
les
push
sbb
inc
xchg
pop
loopne
xchg
ss
hlt
cli
dec
mov
andb
ds
call
dec
test
ret
loopne
repz
dec
xchg
dec
stos
add
inc
cmp
cmp
les
ss
add
and
test
cltd
adc
dec
prefetchwt1
cwtl
xor
and
mov
sub
mov
pop
call
jecxz
rcrl
dec
push
mov
jne
leave
sub
in
movsb
mov
scas
loopne
add
lea
cwtl
cwtl
imul
es
mov
bound
dec
in
andb
push
jo
mov
inc
lods
mov
les
adc
dec
loope
lds
loop
in
mov
add
lods
les
mov
ja
mov
dec
add
and
xchg
daa
mov
mov
popf
add
push
pop
cs
pop
mov
add
dec
xchg
inc
pusha
sbb
add
add
dec
xchg
cmp
add
cmp
clc
sbb
push
insb
xor
mov
xor
outsb
sbb
iret
jne
fstps
aas
jle
adcb
loop
push
pop
orl
sub
clc
mov
and
dec
cmp
add
sbb
sahf
jno
clc
cmp
dec
mov
or
cltd
or
jbe
mov
hlt
imul
mov
js
sub
add
stos
arpl
out
mov
mov
pop
jl
pop
sub
push
bound
fst
loope
mov
fsts
hlt
pusha
test
dec
clc
add
fldt
loopne
push
add
xchg
scas
pop
jb
leave
dec
lods
cwtl
inc
mov
pop
pop
push
push
sbb
and
insl
cltd
andl
sbb
lock
jmp
stc
push
addr16
sbb
sbbb
repnz
int3
mov
pop
call
mov
pusha
xchg
jns
outsl
or
push
xor
lahf
cwtl
lods
aaa
mov
aas
sub
sahf
jp
jno
push
adc
inc
rolb
mov
bound
aad
dec
adc
push
mov
cmp
fwait
mov
add
push
hlt
js
add
lea
test
push
mov
mov
or
pop
arpl
inc
roll
popa
push
sub
push
sbb
fcoms
subl
cmp
push
leave
xchg
add
add
xchg
add
xorl
mov
dec
mov
jns
scas
mov
add
cmp
inc
in
add
mov
jno
incb
aas
mov
cmpb
adc
imul
dec
movsl
push
mov
stos
data16
dec
divl
call
ljmp
rorb
dec
add
mov
mov
jge
sub
das
mov
or
insl
dec
push
add
push
mov
cld
fstpt
or
insl
and
leave
test
push
xchg
cmpl
adc
mov
mov
inc
xor
movsl
int
sti
add
addr16
enter
and
mov
inc
add
inc
rolb
jbe
or
pop
sub
fwait
and
cli
popf
cmp
adc
imul
ds
shl
nop
xchg
sub
add
jbe
mov
pop
dec
jp
out
jmp
push
add
sbb
jl
aas
pushf
push
sbb
jmp
jg
cs
sahf
push
daa
cmpb
mov
js
add
jg
add
movsb
mov
jmp
push
test
pop
lods
adc
jno
add
xchg
je
sbb
clc
cltd
sub
add
adc
push
push
int3
incl
pop
icebp
mov
lock
xor
mov
rcr
adc
add
mov
inc
in
xor
or
aam
cwtl
clc
imul
lret
in
xchg
iret
pop
cmp
nop
stc
jmp
sub
sub
adc
dec
rol
push
addr16
cs
fsubs
pop
mov
sarb
adc
aas
jmp
lds
and
push
aam
push
add
add
inc
sub
mov
pop
inc
mov
ds
int
xchg
test
arpl
hlt
xchg
out
call
add
push
shl
mov
outsb
push
xchg
loopne
in
jne
jp
add
cli
jmp
cmpsl
add
fldenv
jne
pop
add
sahf
sbb
cwtl
pop
xchg
repz
mov
test
add
mov
push
add
ret
outsl
mov
mov
or
cmpb
sti
dec
sbb
idivl
and
mov
pop
mov
push
repnz
dec
mov
movsb
lock
add
mov
fucomp
xchg
mov
adc
sub
sbb
aaa
jb
aam
push
das
mov
mov
inc
subps
jnp
lods
push
and
lods
andl
clc
cmp
test
jge
pop
dec
cwtl
add
xlat
pop
loope
mov
int
xorb
or
mov
out
and
cmpb
inc
fldl
push
cs
push
and
in
clc
add
loopne
fildl
stc
nop
sbb
push
jecxz
fcompl
test
jae
jle
clc
sub
xchg
add
fadds
leave
sbb
jle
stc
sub
loope
mov
adc
loope
scas
notb
cmp
inc
cmp
cli
add
mov
ljmp
cmp
pusha
and
xor
je
push
mov
xchg
pushf
popf
add
or
cmp
add
ljmp
sbb
stos
and
xor
push
push
ds
mov
loopne
dec
outsb
cmpsb
cltd
in
repz
or
adc
pop
ds
xchg
xor
pop
and
out
mov
push
lock
mov
add
sub
int3
into
and
jns
nop
leave
adc
push
hlt
mov
xor
cmp
add
shll
pop
stos
dec
mov
scas
iret
xchg
add
sub
xchg
mov
add
mov
mov
mov
test
in
dec
sbb
pop
and
add
adc
xor
jne,pn
push
add
lret
mov
cltd
pop
add
push
mov
add
filds
nop
iret
clc
loopne
xlat
test
aas
jno
push
mov
sub
adc
in
ja
rcl
push
add
in
data16
rorb
jp
ret
dec
mov
add
fistpll
loopne
mov
mov
stc
sbb
imul
in
or
cmp
add
mov
jnp
pop
aaa
add
cld
mov
add
push
mov
movsl
inc
adc
inc
out
out
js
int
mov
cmp
test
mov
pop
jns
cwtl
repz
icebp
sub
push
mov
gs
lock
pushf
sti
ja
jp
sbb
add
call
inc
inc
mov
or
pop
repz
mov
xor
add
adc
lods
dec
pushf
sub
sbb
lds
stc
lock
sti
push
sub
or
push
add
inc
push
mov
add
xor
pop
sub
and
mov
jecxz
add
repz
mov
daa
add
add
cmp
cmp
enter
mov
pop
mov
icebp
cld
inc
sti
add
lcall
add
popl
fwait
popa
ja
popf
orl
push
mov
add
pop
and
mov
out
repnz
sbb
movsl
dec
xor
add
jae
add
push
aad
jg
hlt
scas
xor
inc
lock
and
testl
test
jg
imull
addb
call
or
add
and
mov
imul
in
pop
mov
fiaddl
ret
xchg
xchg
mov
cs
mov
sti
pop
lds
iret
rclb
pop
push
add
aad
add
call
add
cmp
xchg
pop
andb
lcall
inc
sarb
aas
sti
int
call
fbld
mov
xor
fisubs
test
add
out
stos
loop
mov
movsb
mov
jmp
sbb
pushl
orl
mov
sub
int
sbb
mov
lods
pop
sub
insl
scas
cmp
mov
aas
inc
stc
jmp
sub
cli
bnd
lret
js
or
hlt
xor
fidivrs
in
pop
jno
pop
aad
mov
mov
pop
jb
psubq
mov
adc
icebp
hlt
xor
insl
ja
sbb
adc
pop
add
lods
inc
push
fcoms
jae
jl
push
sbb
icebp
and
inc
mov
mov
jge
cmp
fs
cmp
inc
lds
and
pop
mov
test
lods
xchg
jg
loope
imul
cmpl
jmp
dec
add
cmp
push
pop
add
push
pop
xor
sub
testl
mov
test
inc
jno
jl
sbb
loopne
push
imul
test
clc
jle
push
mov
pusha
cmp
mov
imul
mov
outsb
sbb
xor
out
mov
mov
repz
push
add
int
and
stos
pop
pop
add
mov
mov
lods
pop
xorb
loopne
pop
xchg
rcrb
push
cmpl
js
jl
xlat
dec
push
sbb
call
les
jb
nop
adc
aad
nop
pushf
push
lods
data16
jns
test
push
movb
adc
out
outsb
andb
and
push
je
xchg
inc
les
and
pusha
add
mov
sbb
test
dec
sbb
pop
or
insl
xchg
sbb
and
dec
mov
test
inc
mov
inc
jno
add
daa
mov
or
subb
lods
jmp
or
loop
mov
xchg
pop
add
and
cmp
mov
pop
movsb
shlb
inc
in
in
sbb
mov
imul
xchg
jl
repnz
inc
clc
nop
dec
sbb
das
jbe
scas
xor
or
popl
xlat
scas
je
jl
or
daa
aaa
xchg
rolb
cmpsl
mov
std
mov
jl
or
and
inc
stos
add
pop
insb
or
xor
inc
jnp
adc
push
mov
mov
sbbl
ss
pop
pop
push
dec
inc
pop
inc
cmc
or
fsts
sbb
les
jp
jb
push
jge
fs
mov
sbb
data16
inc
dec
cs
add
add
xor
lcall
push
repz
and
pusha
call
in
jno
repnz
dec
xchg
jl
sarb
xchg
js
pop
bound
add
pop
movsl
popf
and
sbb
in
xchg
sub
sub
adc
mov
lods
cld
push
xchg
and
sub
jl
add
xor
jp
dec
hlt
sub
push
or
mov
mov
jp
xchg
inc
and
xor
jl
std
push
push
add
loope
push
lcall
xor
sbb
inc
sub
add
dec
out
loopne
iret
push
xchg
lods
xchg
pop
leave
xor
jns
sub
mov
xor
or
push
mov
mov
add
inc
inc
out
xchg
js
xchg
hlt
or
and
jo
imul
add
lds
add
testl
push
add
rol
adc
push
int3
and
fcoms
cmpsb
jo
dec
mov
imulb
mov
xor
jae
addr16
sbb
jo
pusha
fmul
je
andb
mov
movsl
xor
dec
test
cmp
sarb
sub
std
pop
jl
movsl
rorb
pop
stos
sub
pop
xchg
inc
rorl
loopne
je
sysret
dec
and
dec
mov
in
es
pusha
call
andb
cmp
and
cwtl
popa
insl
addr16
and
pop
sub
sub
dec
xor
pop
mov
mov
clc
xor
in
dec
je
add
inc
jmp
cli
shrl
pop
or
popa
shrb
loope
pop
iret
jo
repz
scas
mov
arpl
add
addr16
mov
mov
rorl
mov
pop
aaa
movsl
add
dec
stc
pop
sahf
enter
test
sub
jecxz
aam
les
add
cld
ja
push
xor
add
sti
sub
test
repz
or
cmp
mov
adc
fimuls
bound
cld
mov
js
pop
test
imul
dec
cmpsb
sbb
add
movsb
scas
cmp
adc
mov
mov
dec
ds
subb
js
dec
inc
out
and
sahf
push
and
jg
or
cltd
mov
js,pn
sbb
push
lock
sbb
sub
dec
dec
outsb
add
push
push
cmp
pop
mov
outsl
mov
ja
rorb
into
sub
cltd
or
in
inc
out
jg
jns
add
xchg
lcall
inc
xorl
add
mov
cmp
ja
cltd
pop
xchg
arpl
mov
mov
push
pusha
loopne
loop
mov
cwtl
movsb
and
lahf
sahf
les
inc
arpl
clc
mov
ja
out
sbb
cmc
pusha
and
les
push
lret
pop
or
inc
es
add
jmp
out
add
inc
mov
test
nop
sbb
test
xor
sub
mov
decl
mov
push
or
in
and
add
fnstenv
and
inc
or
popa
negb
mov
adc
pop
cmp
je
sbbb
xchg
add
addl
stc
rcrl
loop
push
jmp
mov
xor
inc
popl
sbb
and
bound
test
cwtl
pushf
and
cmp
fs
inc
orl
push
xchg
test
add
sub
inc
push
out
jl
lret
sub
or
loopne
mov
in
and
stos
or
fiaddl
sbb
add
cmp
push
jmp
xor
add
xchg
sub
adc
xor
pop
add
test
jnp
xor
jo
mov
xchg
nop
or
xchg
mov
xchg
cs
rclb
add
clc
xor
in
jo
loop
rcll
into
cwtl
adc
sub
test
sbb
out
out
cld
jl
or
shll
push
and
xchg
icebp
pop
add
popa
sbb
movsl
and
repnz
cltd
sbb
xlat
pop
jl
repz
call
shl
push
movsl
repnz
xor
sbb
sub
mov
push
xor
push
out
add
cs
test
aas
jb
ljmp
lods
sbb
dec
adc
aam
add
fstps
loop
jo
push
pop
repnz
mov
rorb
cli
je
scas
push
xor
enter
stos
jae
in
push
mov
test
cmp
addr16
xor
mov
adc
fnstcw
cwtl
add
mov
bound
add
or
or
xchg
jmp
or
insb
dec
shl
and
rolb
rcrl
lods
mov
xor
out
movb
adc
pop
jns
lea
dec
out
lock
sbb
out
sti
add
gs
hlt
fwait
add
data16
add
into
xor
inc
inc
fldl
iret
inc
pop
orb
ror
push
loop
mov
mov
add
xor
dec
dec
lds
inc
out
sti
add
pusha
or
push
push
in
mov
aas
push
ret
popa
push
cmp
jg
jne
cli
sbbb
inc
out
xorl
jns
shl
xchg
ljmp
add
call
mov
in
or
lcall
sub
and
or
xor
sti
pop
dec
add
and
test
or
xor
inc
sbb
dec
add
dec
mov
inc
jns
jl
jne
and
and
loopne
add
mov
test
and
xchg
rclb
in
inc
xor
sub
adc
xor
inc
fld
icebp
sti
xor
or
or
orb
add
push
pop
movsl
and
push
mov
addl
mov
repz
push
jno
mov
negl
add
jl
divl
in
xor
lods
xor
sub
fsts
stc
loop
cmp
stos
ret
push
adc
mov
jno
adc
out
loopne
xchg
mov
and
out
sarb
cmp
sbbl
addl
out
pusha
inc
daa
push
into
adc
fnstcw
test
adc
gs
pusha
shll
test
add
icebp
js
sbb
and
mov
sub
or
ljmp
add
nop
lods
inc
leave
mov
jmp
mov
add
push
mov
ds
ja
mov
mov
jmp
fcoms
les
cmp
inc
loopne
je
xchg
sti
xchg
popa
jge
dec
and
fldt
add
push
mov
sub
adc
aas
fnsave
and
mov
andb
cld
andl
push
push
add
subl
out
mov
jnp
les
int
or
rclb
popa
nop
fldenv
outsl
inc
int
push
rcll
mov
shl
js
inc
fld
test
dec
fisttps
mov
xor
popa
lea
pusha
js
or
cwtl
les
in
ficomps
sbb
loop
cmp
aam
adc
loopne
sub
popa
in
xor
cvtps2pi
or
jo
push
popf
adc
clc
inc
push
ret
repnz
add
jmp
ljmp
lcall
jecxz
sbb
test
in
push
inc
mov
xchg
or
ss
pop
push
mov
adcl
sub
out
mov
enter
sbbb
fidivs
xchg
jo
dec
xchg
dec
sub
add
mov
cwtl
inc
lods
sti
jl
sub
mov
out
and
dec
pusha
fadd
mov
xor
inc
mov
add
sahf
xor
xlat
dec
mov
aaa
mov
xor
sbb
inc
lods
pusha
subl
dec
inc
lods
pusha
subl
dec
inc
pusha
mov
negl
sub
inc
inc
rcll
rolb
push
cli
popa
into
and
ror
rcl
mov
pop
push
or
pop
rclb
and
gs
inc
pop
add
loopne
sub
add
push
and
cmp
stc
scas
gs
sbb
cmpsl
pop
imul
lret
push
jl
sub
das
fs
popa
addr16
and
sbb
roll
adc
lds
jbe
add
dec
int
or
push
ficompl
adc
jg
pop
enter
cltd
dec
xor
add
or
cmp
cwtl
pop
sub
scas
cmp
xor
addl
cmp
sbb
ds
mov
dec
pop
insb
and
test
xchg
daa
and
lret
push
fcomp
cmp
ret
adc
mov
add
xor
ds
add
adc
jne
sub
sbb
imul
std
inc
dec
adc
mov
adc
sub
push
and
mov
subb
test
inc
scas
lret
scas
pusha
add
stc
cmp
sub
cltd
dec
add
add
int3
inc
enter
push
adc
xor
imul
outsl
add
shl
adc
mov
mov
bound
stos
sbb
sbb
mov
xor
xor
sub
mov
push
adc
aad
fstpt
xor
sub
popa
dec
mov
adc
or
cmp
test
mov
popa
dec
add
loopne
xor
clc
xor
push
jo
xchg
mov
xor
popa
jmp
pop
pusha
add
and
mov
mov
cmpsb
jl
in
and
inc
mov
nop
cmp
enter
xchg
xlat
aas
mov
push
fidivrs
push
movsl
and
fnstenv
dec
mov
inc
xor
mov
orb
and
pop
in
adc
mov
addl
xchg
popa
lock
into
sbb
ret
repz
popa
push
push
dec
cmp
push
fsubp
xorl
or
cld
push
aad
nop
test
sbb
test
popa
jo
lods
pusha
subl
sbb
pusha
rcrb
mov
sahf
cmpsl
or
sti
addb
sbb
lods
pusha
sub
jl
adc
mov
in
mov
push
xchg
mov
xor
cmp
mov
adc
loop
sub
shlb
imul
out
inc
ret
adc
fadds
dec
and
and
loopnew
adc
push
int3
loope
shrb
nop
popf
cmp
and
pusha
mov
mov
jo
sti
xlat
jecxz
pop
sub
shlb
xor
or
push
arpl
adc
pop
insl
daa
push
fwait
cmp
inc
sarl
test
data16
lahf
push
xorb
loopne
outsb
jl
sbb
sub
xor
and
xor
push
or
xor
mov
jmp
sti
test
and
pop
pushf
mov
lock
clc
mov
and
je
push
pop
loopne
fdivrs
mov
pop
popl
roll
nop
adc
sub
jo
and
xlat
sub
shlb
shlb
push
inc
enter
pusha
jecxz
add
clc
and
push
pop
push
add
xchg
pop
cltd
inc
lock
js
dec
movsb
xor
xor
pop
pusha
jp
mov
jnp
adc
in
and
leave
in
sub
popl
out
pusha
loopne
sub
bound
mov
mov
mov
xchg
adc
shlb
dec
pop
popa
lock
scas
rolb
xor
punpcklbw
sub
push
pop
push
push
pop
nop
adc
popa
in
pop
pusha
push
iret
cmpsl
out
pop
popa
dec
jo
test
sbb
pop
pusha
or
cmpsl
rolb
pusha
out
adc
fptan
or
jbe
lock
cmpsb
out
fbld
les
xor
test
outsb
pop
sarb
sbb
inc
pop
sbb
mov
pop
pusha
push
sbb
movsl
push
xor
jo
pusha
outsl
add
xchg
add
sub
lock
outsl
js
add
lds
test
ds
fadd
and
cmp
mov
or
and
push
xor
in
or
roll
test
test
ds
and
loop
jle
test
and
out
mov
sub
lahf
push
adc
test
push
or
dec
scas
mov
imul
pop
cmp
inc
jge
fcmovnu
push
jecxz
and
shl
emms
popl
addl
js
pop
mov
pop
sbb
pop
fisttps
popa
and
jp
call
xlat
call
push
xor
sbbl
pop
adc
enter
jne
or
and
loopne
out
inc
movsb
rolb
pop
mov
jo
fadd
xchg
inc
insl
inc
sbb
adc
jb
add
clc
cltd
lcall
push
push
int
out
inc
jnp
pop
mov
lea
adc
xchg
add
mov
cmpsl
pop
lock
test
idiv
add
mov
push
outsl
mov
or
sub
mov
sti
loopne
and
mov
push
aas
popa
pop
adc
xchg
mov
jg
clc
mov
and
loopne
adc
and
sarb
ds
and
inc
stc
shll
ds
xchg
popa
lcall
loopne
sub
idivl
or
sub
rorb
aas
lcall
cld
insb
mov
shlb
out
ret
je
adc
hlt
lock
add
sub
rolb
loopne
lock
or
sub
push
mov
stc
inc
lcall
ljmp
push
jl
and
jno
pop
mov
jle
and
out
ret
and
pop
ds
stos
jmp
clc
sbb
and
and
or
lock
lcall
jecxz
test
sub
popl
sub
mov
insl
mov
or
mov
clc
xor
in
icebp
fbld
rcr
push
es
aas
push
jo
push
inc
out
cltd
popa
sub
add
rcr
add
ds
xchg
into
xor
mov
shrb
sarb
dec
popl
rcr
pop
push
sbb
cmp
fsub
xchg
jmp
les
lahf
pop
jl
je
inc
cmpsb
incl
and
pop
inc
push
rcll
xor
rcll
pop
push
pop
and
pop
dec
mov
mov
jg
cwtl
clc
xor
xor
push
pop
inc
push
jl,pt
mov
jbe
xchg
popa
in
adc
push
mov
dec
jne
shr
rorb
fsubp
cmpsb
andb
in
inc
jle
fs
mov
adc
and
adc
pusha
rcrb
shl
enter
pusha
loopne
fcoms
lcall
stc
in
ja
sub
in
fstpt
popa
pusha
rorl
cli
call
mov
dec
out
clc
jmp
and
lods
inc
out
and
sub
mov
dec
inc
and
mov
clc
jmp
xor
mov
add
sbb
push
fiadds
clc
mov
add
mov
dec
inc
jae
and
mov
or
add
ds
sub
rolb
sbb
xor
cmp
inc
addl
xor
cmp
and
dec
mov
or
int
dec
test
js
jo
call
add
push
fsubl
lret
outsl
popa
inc
sbb
pusha
push
arpl
jl
inc
js
cmp
mov
fsubl
dec
inc
rcll
ret
adc
lock
repz
add
pop
call
orb
rcrb
or
xchg
xor
nop
fwait
jb
fsub
mov
pop
popa
jl
push
pusha
or
mov
pop
cli
ja
mov
mov
cmp
pusha
fcomps
js
lds
dec
sbb
jg
xor
and
mov
dec
shlb
or
clc
push
xchg
fwait
into
cmp
sbb
cmp
sbb
and
adc
pusha
cmp
mov
cmpsl
adc
pop
lock
push
jecxz
cmp
pop
push
test
add
pusha
add
mov
mov
cld
pop
jl
or
inc
ret
inc
cmp
dec
sbb
push
pusha
or
xor
xor
push
pusha
add
hlt
into
roll
inc
push
add
and
jl
dec
inc
or
cmp
mov
or
dec
aas
mov
dec
test
pusha
add
icebp
stos
jecxz
cwtl
pop
mov
pusha
add
rcrb
ds
repz
xor
push
pusha
add
in
cmp
xchg
xorb
mov
and
jmp
fcompl
cmp
pop
pusha
add
pushf
add
pop
xchg
mov
icebp
sti
bound
cld
mov
xorb
popf
aaa
test
xor
xchg
xor
punpcklbw
adcl
nop
pop
cmp
jl
pusha
lock
jge
inc
sub
xchg
cmc
iret
inc
adc
pop
add
pop
pushf
mov
or
and
mov
and
pop
mov
lahf
and
xor
mov
sbb
ds
jb
and
pusha
cmp
mov
inc
and
aaa
lock
lds
mov
or
mov
dec
sub
rolb
jnp
cs
add
fbstp
xlat
jecxz
or
xor
divb
sbb
pusha
js
push
fisubrl
adc
xorb
xor
sub
push
or
cmp
pusha
addr16
adcl
and
pushf
xchg
add
jno
and
mov
mov
dec
inc
mov
adcb
in
fs
and
shlb
dec
inc
shr
cli
cltd
outsl
fstl
arpl
xlat
adc
dec
inc
push
out
mov
cmp
enter
sub
subb
dec
push
sahf
leave
xor
adc
arpl
pusha
push
or
sub
pop
and
dec
push
or
push
and
push
inc
jp
xor
and
cmp
dec
lcall
cmp
sub
outsb
xor
dec
or
and
sbb
push
mov
adc
sub
in
push
ss
add
sbb
xchg
loop,pt
nop
mov
add
and
subb
xchg
sahf
xor
out
adc
ficoml
xchg
ret
sub
xchg
adc
mov
adc
and
sbb
push
jl
inc
cmpsl
icebp
sbb
mov
fists
loopne
mov
and
fdivs
xor
pop
add
add
pop
ds
shll
popa
mov
ds
inc
jge
inc
sbb
mov
cmp
jmp
xchg
sarb
sub
and
shll
andb
and
or
ret
imull
push
popl
jle
add
jl
adc
arpl
rorb
aas
inc
jle
sbb
sbbl
and
jl
adc
adc
mov
jo
sub
add
fdivs
adc
sbb
addr16
mov
aam
dec
pop
insb
das
jns
aad
loop
add
push
stos
or
cmovge
aaa
push
roll
mov
sbb
fnstcw
cmpl
rol
dec
add
lahf
fwait
lcall
mov
mov
fsubl
iret
jnp
cwtl
push
add
enter
leave
testl
out
push
adc
mov
sbb
fcompp
stc
sbb
cmp
push
loopne
mov
iret
or
fisttpll
insb
popf
dec
adc
adcb
add
es
add
or
xchg
je
rorl
cwtl
push
xchg
call
add
lea
pusha
push
mov
and
jo
ds
xchg
or
jecxz
jae
pop
sub
rorb
push
jne
mov
pop
cmp
add
daa
fbld
inc
add
mov
xor
rol
adc
push
lcall
add
fcmovnbe
sbb
js
push
sbb
nop
arpl
xchg
push
pop
jp
add
inc
cltd
loopne
add
xor
dec
inc
fcoms
adc
push
shl
cmp
bound
xchg
loopne
in
addr16
add
hlt
les
nop
scas
xchg
lods
jae
fsubrl
add
icebp
pop
adc
scas
add
sub
add
cmp
maskmovq
negl
xor
jne
xor
mov
cmpsb
inc
out
jecxz
enter
icebp
movd
add
lds
push
add
cmc
outsb
inc
icebp
xchg
out
shlb
pop
into
and
add
out
or
aas
jno,pt
xor
push
xor
push
in
je
or
mov
pusha
fsubs
pop
jl
add
loopne
adc
add
adc
lret
sbb
jp
mov
add
xchg
stos
push
stc
push
lret
xlat
int
and
js
or
stos
add
dec
and
mov
push
and
and
inc
dec
sbb
push
or
add
and
jmp
and
loopne
mov
sub
pop
inc
scas
aam
jbe
add
loopne
cmpsb
add
cmp
and
incb
xchg
push
push
add
test
out
push
jle
enter
cmpsb
loop
icebp
loop
add
out
faddl
daa
mov
fs
adc
add
call
popl
inc
xchg
adc
rcrl
fimull
xor
stc
loopne
pmaxub
jp
in
cmp
pop
adc
lea
popl
fmul
sbb
mov
js
clc
out
xorl
negb
mov
pop
test
xchg
test
push
sbb
fadd
fisubl
repz
pop
xor
nop
sub
pop
dec
loopne
add
mov
rolb
data16
mov
xor
scas
and
xor
xchg
mov
add
pop
mov
pusha
icebp
cwtl
mov
je
jle
mov
adc
cmc
mov
loope
stos
out
iret
scas
and
add
ljmp
ds
jp
in
mov
pop
sbb
and
adc
pop
fmuls
xor
mov
out
cmp
mov
stos
add
sbb
movsl
rcll
call
js
inc
ds
adc
dec
negl
push
add
pop
mov
inc
mov
scas
jl
inc
inc
add
outsl
popf
jne
pop
or
add
inc
rcll
push
pop
addb
push
rorb
rclb
jb
xlat
add
mov
rol
add
inc
lcall
stos
pushf
cli
mov
clc
femms
lea
xor
mov
loopne
adc
fnstsw
mov
push
jns
lock
les
sub
mov
out
mov
cmc
neg
mov
add
adc
rorb
or
pop
mov
addr16
mov
mulb
inc
inc
and
inc
jno
in
push
loop
dec
loope
add
and
cmp
aad
rclb
cs
push
lods
mov
mov
fidivs
in
aam
push
xchg
adc
add
arpl
lea
popf
push
dec
pushf
push
push
inc
mov
outsb
lds
and
sbb
add
fcomp
adc
push
rcr
adc
push
sub
xor
add
pop
insb
or
es
cmp
or
mov
mov
sahf
roll
and
add
xor
orb
and
or
in
add
adc
das
adc
stos
or
inc
sbb
push
sti
imul
outsb
add
xchg
push
jbe
mov
shr
arpl
dec
push
test
add
cmpl
inc
sub
mov
mov
cmp
xor
jg
inc
sbb
bound
mov
add
cmpsb
dec
adc
add
std
jno
insl
fcmovnu
sarl
or
jmp
jl
add
loop
cmpsb
or
jmp
shll
pop
jo
and
add
icebp
loopne
add
inc
sub
dec
jae
or
mov
add
lds
push
sbb
xchg
enter
cmpl
lock
scas
pop
or
add
xlat
xchg
popf
and
pop
mov
insb
rcll
dec
pop
scas
lret
mov
in
out
into
jbe
fsubr
cmp
jb
adc
add
push
jne
jmp
movsl
add
sbb
and
loopne
lea
or
incl
scas
fisttps
adc
scas
mov
mov
mov
mov
loopne
cmp
cmpsb
leave
dec
mov
sti
scas
ja
sbb
sbb
inc
out
or
scas
lret
adc
sub
add
pop
ret
sbb
sbb
mov
rcll
ficoml
syscall
xchg
std
jle
sbb
xor
add
fnstenv
mov
push
add
or
inc
pop
mov
or
jo
mov
movsb
add
mov
jecxz
sbb
inc
add
imul
add
out
insl
jmp
add
and
andb
lret
ljmp
xor
fwait
sbb
adc
cmp
movsl
pop
stc
js
or
xor
fistpll
add
shll
pusha
add
xlat
pop
daa
hlt
cmp
mov
jb
subb
lock
scas
add
push
mov
sub
mov
mov
mov
push
clc
pop
mov
notl
insb
and
jle
push
xchg
stc
lret
xor
rcl
pop
mov
add
sbb
cmp
incl
nop
inc
jl
outsb
add
push
lea
mov
add
rol
pop
add
or
rorb
loope
dec
jbe
pusha
fs
mov
add
inc
mov
add
in
test
jnp
adc
mov
mov
dec
mov
mov
gs
add
in
jae
mov
or
test
mov
dec
add
loope
xchg
xor
add
jne
add
push
mov
inc
inc
ficomps
leave
outsb
pop
mov
test
add
gs
paddb
push
sbb
mov
je
divl
or
sbb
add
lods
lahf
shl
jmp
je
or
ja
popa
ficompl
shrb
js
sub
mov
push
jl
add
jl
repz
mov
mov
push
movl
mov
pop
xchg
aad
pop
sub
xorb
in
mov
mov
push
hlt
pop
push
add
or
dec
stos
ret
pop
jmp
add
xchg
addl
roll
lret
call
lcall
iret
pop
adc
data16
test
fidivl
mov
imul
inc
jecxz
cmpsl
enter
adc
cmp
sub
into
push
jb
mov
sbb
pop
daa
pusha
rol
fsubrs
out
andb
lahf
pusha
shl
ja
dec
mov
popa
sbb
mov
mov
rorl
test
push
xchg
std
mov
add
jle
inc
rcr
and
sub
pop
sbb
je
add
jo
dec
add
pop
adc
jae
pop
repnz
jp
pop
lods
in
test
xor
in
jnp
add
add
es
int
pusha
cmp
add
nop
call
sbb
movsb
loope
pop
rcl
xchg
shl
clc
and
jp
test
xlat
int
repz
add
sub
mov
test
push
adc
mov
cmc
pusha
pop
push
mov
jnp
andb
add
mov
hlt
cmc
jbe
push
loop
sar
inc
dec
or
push
and
int3
in
add
add
mov
jb
sbb
mov
sub
std
lods
ficomps
mov
je
add
jno
ja
or
mov
mov
push
call
aam
add
xor
or
mov
and
cmp
inc
pop
xchg
mov
in
dec
cmp
into
cld
mov
push
inc
adc
add
mov
adc
xor
add
dec
pushf
mov
aad
jne
loopne
pop
xchg
int3
jnp
movsl
jge
add
incb
dec
push
roll
imul
mov
imulb
ret
sbb
dec
inc
dec
decb
xor
jp
jge
clc
jnp
xor
add
cmp
xchg
sub
mov
or
and
mov
jp
add
add
xor
dec
test
cmp
shlb
arpl
and
movsl
add
xchg
sub
sarb
add
ja
sarb
rcll
loope
loop
ret
push
jl
xchg
cltd
inc
leave
sub
add
addr16
xlat
add
mov
fildll
push
pop
add
pusha
out
jo
add
mov
xor
jg
push
add
ficompl
mov
lcall
dec
fdivl
rclb
call
dec
fldl
jge
int
aam
add
push
add
add
pop
cmpsl
les
cli
pop
mov
jmp
push
add
leave
mov
lret
mov
popl
and
addl
fisttps
pop
xor
lret
divb
add
sahf
sub
bound
pop
nop
cmp
mov
rcr
xchg
cmp
push
pop
out
add
mov
cwtl
jecxz
test
xchg
sbb
xchg
adc
sarl
mov
cs
mov
adcb
adc
push
jo
sbb
inc
mov
mov
pop
xlat
push
mov
popa
mov
fnstenv
xor
cltd
add
xor
insl
imul
adc
addb
sbb
adc
fcoms
jmp
rol
or
roll
xor
push
lock
or
and
les
out
lret
sbb
mov
add
add
mov
pop
popf
mov
inc
mov
iret
jl
mov
std
pop
jns
rol
test
imul
xchg
or
jge
inc
inc
call
dec
insl
sub
aam
xchg
add
push
gs
call
nop
xchg
mov
in
out
mov
add
mov
stc
lock
jmp
test
mov
dec
pushf
nop
push
sbb
shlb
dec
add
sarb
add
fisttpl
repz
push
push
xor
sbb
sbb
lds
or
arpl
andps
pusha
mov
fsubl
popf
push
jecxz
inc
pop
add
cld
mov
mov
jo
in
pop
lds
sub
pop
sti
jae,pt
shrb
str
subl
clc
iret
dec
add
and
in
sub
fsts
test
jle
loope
outsl
push
inc
cli
cmc
mov
dec
jo
stc
mov
add
pop
mov
addr16
adc
add
mov
fisubrs
push
out
jae
scas
fstp
jo
jnp
pop
add
shll
movsb
xchg
test
nop
leave
jecxz,pt
cmp
adc
adc
fistps
call
out
insb
pop
mov
mull
cmp
xchg
adc
fnstsw
pop
test
mov
sbb
pop
mov
push
mov
mov
sbb
inc
mov
into
gs
sahf
jmp
push
mov
jge
add
inc
cmp
add
add
lret
dec
xchg
stc
pop
int
test
data16
mov
lcall
xchg
mov
mov
sbb
cltd
mov
jle
add
mov
or
add
dec
push
add
sub
in
call
out
adc
add
pushaw
aaa
adc
or
sbb
nop
call
jg
push
sarb
clc
mov
jne
repz
ret
xor
hlt
pop
sbb
mov
push
ljmp
add
lret
xor
jo
xchg
iret
sub
add
mov
and
les
sbb
cld
add
out
popf
jge
xchg
jo
adc
popl
add
push
xchg
out
enter
shlb
and
data16
inc
lock
cmp
sbb
xor
push
add
xor
mov
add
mov
sub
les
sbb
loopne
movsb
ficomps
cmpsl
mov
sahf
or
lret
shrl
add
sub
add
mov
mov
add
leave
jo
pop
lods
shll
inc
add
xchg
arpl
nop
fcompl
add
data16
pop
into
mov
in
mov
push
pop
inc
add
add
xor
hlt
stc
add
push
mov
sbb
je
mov
sub
and
aad
add
sub
pop
lcall
xor
xorl
and
mov
outsl
mov
add
xchg
xorb
or
sub
les
fs
mov
shlb
adc
add
les
imul
sarl
bound
negl
jbe
sub
or
aaa
movsl
sbb
adc
popf
sldt
sti
mov
rorb
and
push
push
mov
add
ljmp
or
popa
cld
cmpb
mov
test
dec
popf
or
push
stos
adcb
mov
addl
repnz
adc
add
dec
in
aam
mov
cli
lahf
add
sbb
aas
cmp
fisubl
or
sbb
mov
out
push
call
dec
mov
lret
mov
xchg
inc
ja
mov
xor
lret
pop
std
xchg
inc
lock
imul
repz
pop
adc
pop
add
repnz
lcall
sbb
mov
push
decb
jp
imul
jle
dec
xchg
adc
add
sub
shll
pushf
je
mov
mov
test
shlb
adc
cwtl
cmc
les
in
pop
lock
repz
out
in
xchg
xchg
js
ja
rcr
add
adc
cwtl
rcll
xchg
pusha
xor
dec
inc
out
push
addl
add
push
and
mov
mov
add
movsl
in
mov
sub
pusha
fwait
loope
stos
mov
mov
or
and
adc
adc
insl
dec
daa
js
subb
js
jbe
add
das
push
aas
in
mov
pop
sub
ret
mov
cli
jb
stos
sbb
es
add
add
fadds
loope
nop
insl
das
lods
icebp
hlt
jl
add
adc
or
out
ljmp
call
loope
xchg
adc
jbe
add
mov
sbb
xor
pusha
push
je
mov
sbb
sub
and
aaa
cmp
out
and
cmp
scas
mov
jg
cmp
icebp
psrlw
clc
pusha
cmp
sub
add
pop
sbb
jmp
sub
pushf
jp
mov
inc
xchg
sti
sbb
dec
push
aas
cmc
out
pop
outsl
int
and
add
mov
enter
out
cmp
sub
add
icebp
pop
adc
add
pop
dec
iret
fwait
in
inc
imulb
cmp
adc
xchg
incl
js
mov
std
addb
sub
jecxz
push
xchg
fmull
and
cmc
aam
add
rclb
nop
mov
lods
stc
js
add
mov
popf
in
push
add
lret
andb
mov
testb
insl
mov
shufps
mov
adc
test
sbb
scas
outsl
pusha
out
dec
adcb
add
fcmovnb
pop
movsl
aam
cmp
pop
es
pop
lods
enter
insb
xor
sbb
rorl
movsl
xchg
cmpxchg
ret
dec
rol
push
or
outsl
repz
add
ficoms
lods
sbb
jl
add
shll
outsl
nop
mov
popa
daa
repz
cmpb
cwtl
sldt
jg
add
fsts
fiadds
out
pusha
xchg
pushf
je
sbb
xchg
test
cld
add
push
sbb
cli
aad
jp
add
push
sti
pop
lds
hlt
dec
mov
jb
dec
lcall
call
rcll
lods
or
dec
push
mov
js
add
lcall
or
dec
divb
push
push
test
add
cmp
push
mov
xchg
ds
xorb
and
pop
int3
jecxz
fadd
xor
ret
jo
xor
rol
hlt
add
bound
mov
inc
cwtl
and
inc
adc
lret
sarb
sbb
rorb
loopne
add
mov
int3
out
ljmp
ret
fildl
or
mov
cmp
imul
notl
jns
leave
push
jl
add
imulb
sub
loope
ss
cmp
push
mov
jae
add
fcoms
push
or
add
cmpsl
call
adc
mov
push
jecxz
cmp
cltd
nop
mov
cwtl
xchg
or
addl
stc
sbbb
dec
aas
repnz
xor
jb
dec
pushf
rcr
outsl
cmpsb
or
and
orb
cmp
and
iret
pop
lods
sub
cmc
call
add
push
add
outsb
mov
js
add
and
mov
inc
or
dec
cmp
xor
add
ds
pop
fbld
dec
and
movl
inc
inc
lods
jb
es
inc
cltd
mov
pop
add
fdivl
dec
xor
cmpsl
jge
sbb
test
fmuls
ss
add
pop
lock
and
inc
rorb
negb
sub
add
outsb
out
push
test
ja
mov
cmp
mov
mov
and
mov
sbb
repnz
movsb
les
mov
jae
jg
neg
push
icebp
mov
inc
add
les
add
ret
add
out
std
int
pop
add
leave
sti
out
push
daa
arpl
jecxz
mov
add
es
repz
cmp
add
cmp
push
mov
sbb
aad
mov
test
xchg
repz
mov
add
pop
fcoms
in
sbb
cwtl
pop
fsubl
inc
loop
adc
adc
jecxz
mov
sbb
inc
inc
cmp
adcl
push
mov
dec
data16
int3
cwtl
adc
adc
push
push
test
and
out
cmp
cmp
jp
xchg
sbb
xchg
pop
sbb
cltd
adc
pop
pushf
fbld
pusha
clc
andl
pushf
sub
shlb
aad
push
xor
adc
enter
rcll
cmpb
or
cmpsl
inc
jecxz
inc
in
or
in
pop
aam
lods
push
subl
adc
sbb
and
pop
ljmp
out
leave
jg
jo
add
mov
dec
sub
xchg
mov
scas
in
imul
notb
dec
test
sahf
pop
jge
add
xchg
enter
add
sub
and
push
jb
xor
ucomiss
and
pop
mov
inc
aad
push
dec
mov
and
mov
ja
mov
iret
add
ss
sbb
rorb
jge
add
xor
nop
in
pop
mov
fistpll
sub
add
xchg
dec
imul
adc
adc
and
or
mov
sub
and
xorb
adc
sbb
lret
mov
jmp
into
cmp
cli
cmp
popa
mov
loopne
orb
jbe
pusha
and
cmc
xor
pop
fsubl
movsb
mov
je
adc
icebp
xor
mov
dec
stos
loope,pn
lahf
add
stos
push
mov
es
in
fists
jno
pop
add
sub
sbb
fdivrs
add
jecxz
mov
adc
add
icebp
mov
sbb
fldcw
mov
pop
inc
mov
push
std
cwtl
pop
adc
sub
add
clc
sbb
dec
mov
add
call
and
dec
imul
das
sar
fsubl
cmp
hlt
imul
mov
add
add
jno
pop
or
cmpsb
push
std
mov
jecxz
sbb
sub
mov
adc
pop
test
push
mov
hlt
push
aad
ja
pop
cli
int3
leave
out
mov
cmp
xor
or
aam
pop
hlt
rorb
inc
xchg
pop
add
pusha
xor
lods
movsb
mov
mov
test
add
inc
inc
sti
xchg
jmp
stc
xchg
adc
jnp
add
sar
in
fdivl
push
shrb
insb
cmp
enter
adcl
mov
sub
xchg
test
pop
mov
and
xor
push
or
pop
add
sbb
xchg
push
mov
fcoml
dec
push
jo
add
mov
mov
dec
enter
add
mov
outsl
sbb
testl
rorb
fsubrl
pop
dec
js
cld
add
mov
addr16
add
xor
and
jno
das
jmp
jne
xor
stos
aad
and
hlt
sbb
mov
subb
xor
fwait
cs
push
iret
jg
sbb
xor
out
out
sahf
dec
rolb
cld
aam
jge
rorl
xor
push
dec
sub
cwtl
adc
leave
clc
pop
ljmp
rorb
xchg
sub
aaa
cmp
loop
pop
xor
add
sbb
imul
or
jo
add
adc
inc
jmp
xchg
daa
mov
cs
pusha
in
sbb
push
lcall
add
add
pop
lahf
je
mov
icebp
jns
in
mov
nop
add
mov
mov
add
and
fs
ja
jl
add
xchg
pop
aad
inc
adc
or
add
leave
divl
pop
xor
and
out
sbb
sbb
jbe
add
je
dec
dec
cld
sti
imul
leave
mov
hlt
add
jne
cmp
les
mov
sbb
lea
jae
inc
add
fadds
insb
mov
adc
adc
iret
ss
xor
test
cwtl
js
add
sti
push
in
cwtl
iret
xor
add
in
adc
push
mov
xor
xchg
jl
add
jp
push
xlat
testb
into
lods
imul
jp
add
pusha
mov
jns
fstpl
dec
jae
es
loopne
inc
xchg
push
sub
flds
loop
jp
push
mov
mov
cmpsl
mov
mov
push
mov
cmp
ljmp
add
shll
mov
jo
jecxz
inc
xor
jns
test
mov
add
push
xchg
sarw
imul
dec
pop
xor
or
movsl
jmp
jle
xchg
fmull
sub
fcoml
add
adc
add
cmp
nop
cmp
std
and
std
cmp
lods
scas
faddp
add
lret
mov
adc
mov
jo
pusha
sbb
pushf
pop
inc
add
xchg
or
add
add
add
inc
sarl
add
sti
lods
and
pop
pop
fiaddl
mov
xor
dec
cmp
mov
add
sub
sub
rorb
add
push
jbe
ds
test
jo
roll
shl
cli
or
cltd
subb
lcall
fs
dec
add
lret
push
and
clc
mov
adc
cmp
add
add
xchg
mov
push
mov
jge
loope
rcrb
fs
lock
and
xchg
icebp
aam
ja
mov
pop
insl
and
rorl
sub
cmp
rol
sbb
xchg
popa
cmp
pop
pop
test
inc
pusha
insb
leave
and
push
lret
mov
mov
xchg
jnp
push
and
pushf
xchg
dec
jmp
inc
sub
lods
sbb
sub
outsb
mov
shr
inc
jle
ficomps
sub
mov
sahf
add
sbb
inc
mov
add
jg
out
pop
mov
add
subl
xor
xor
sub
rol
enter
int3
or
out
fs
fdivrs
jbe
call
and
mov
xchg
xor
movsb
cli
lods
adc
pop
cmp
mov
jb
jmp
jbe
or
jmp
or
shlb
nop
pop
in
add
ret
push
dec
cmpsl
mov
sub
mov
push
adcb
and
pop
pop
pop
test
inc
fisttps
add
xor
popa
adc
stos
push
and
rorl
mov
movsb
xchg
insb
subb
rolb
lret
and
fdivl
dec
mov
jns
shlb
daa
ss
sbb
loopne
dec
sub
xchg
add
dec
xchg
push
repz
sub
add
stc
in
or
cld
add
push
lret
sbb
mov
dec
pop
pop
idivl
add
mov
add
test
andb
out
pop
fsubrl
lods
add
jo
inc
add
stos
and
inc
rcrb
add
ret
sub
popl
add
mov
jmp
iret
mov
jo
rclb
sub
lcall
fldcw
into
sbb
mov
xor
ja
pop
push
andb
notb
mov
daa
ficoml
cmpsb
add
imul
ja
in
repz
pop
stos
add
or
add
ja
jae
push
cltd
in
hlt
xor
loop
stos
mov
loopne
jns
add
cmp
sahf
and
testb
or
imul
sub
mov
mov
mov
cmp
xchg
push
cmpsb
test
sub
shrb
imul
aaa
js
sbb
add
sub
rcl
adc
sbb
fwait
xor
iret
ss
push
cmp
inc
jle
add
mov
dec
adc
pop
or
jecxz
out
mov
jb
adc
xchg
or
push
call
outsb
aad
or
lds
sbb
xchg
dec
add
xchg
pop
inc
add
fisttpll
rclb
sbb
insb
dec
pop
jl
jg
mov
sbb
test
push
inc
xchg
jb
add
sbb
adc
mov
add
daa
movsl
xchg
ret
lods
imul
fsubl
cmp
sbb
jg
xchg
mov
je
jns
xor
cmp
sti
fucomip
fidivs
arpl
xlat
cmp
lea
or
nop
pop
mov
xchg
inc
jl
int3
pop
push
add
mov
fmul
fidivrs
sbb
xchg
pop
jo
add
loopne
or
incl
rclb
aam
pop
sbb
pusha
xchg
mov
xor
mov
xchg
xor
or
jns
sbb
xor
movsl
sarl
mov
push
cs
mov
lock
cmp
add
fcompl
ret
icebp
jo
stc
loopne
clc
or
scas
jecxz
lds
addl
sti
leave
push
test
adc
inc
add
pop
mov
mov
sbb
pop
ljmp
push
push
in
or
add
pop
push
dec
outsb
repnz
call
orb
ds
test
push
push
adc
push
test
loopne
popa
add
in
cld
out
add
fcomps
push
xchg
sbb
push
push
leave
cmp
pusha
mov
add
outsl
lock
add
cmp
pop
xchg
lea
lock
cmp
dec
xchg
sub
xor
push
jbe
push
cmpsl
dec
out
xchg
add
repz
push
std
push
adc
sub
ret
cmp
dec
xchg
mov
xchg
inc
or
or
addr16
xor
pop
sub
gs
push
cwtl
in
dec
repz
es
push
jp
mov
ds
call
mov
xor
lea
adc
push
loopne
add
call
je
mov
mov
push
mov
add
mov
out
insb
lods
lods
adc
loopne
jp
jnp
mov
mov
ds
fisttps
mov
fimuls
adc
imul
xchg
leave
add
es
or
add
filds
sbb
iret
mov
cmp
fisubs
gs
cld
repnz
add
xor
fisttpl
adc
or
inc
mov
lret
rolb
sub
xor
jns
jns
add
cltd
push
cmpl
mov
addl
and
and
lret
repnz
and
mov
addr16
add
leave
mov
andl
add
push
sbb
loop
cmpl
les
test
mov
dec
in
lock
push
mov
jne
inc
gs
jo
outsl
jp
test
mov
loope
std
xchg
fsubrl
mov
xorb
leave
shl
sbb
cli
movsl
lds
jno
add
out
xor
and
pop
xchg
inc
les
add
mov
cwtl
inc
adc
adc
imul
loopne
adc
js
rcl
and
mov
adc
adc
mov
push
cmp
scas
pop
es
lods
sti
andl
dec
and
mov
mov
pushl
lods
out
jnp
jb
sti
lods
nop
and
enter
add
jl
stos
or
inc
push
insb
in
add
outsb
pop
jno
jle
cltd
pause
sti
adc
pop
out
adc
cmp
xlat
dec
or
scas
inc
or
lcall
xor
imul
lock
insb
xor
adc
cmp
mov
lret
cld
adc
adc
shll
adcb
scas
cmp
movl
into
sbb
mov
or
fs
add
pusha
and
loop
into
inc
mov
aam
inc
and
loop
mov
mov
add
adc
xchg
inc
daa
pusha
push
cmp
les
mov
sbb
push
imul
js
lret
lods
sub
hlt
and
ficompl
sbb
fisttps
pop
inc
out
out
test
sub
push
pop
insb
enter
cltd
adc
rcrb
cmp
and
add
bound
pop
cwtl
add
fidivrl
and
fs
iret
pushf
pop
push
jns
xor
clc
mov
ret
xor
es
sub
lock
scas
inc
and
jo
inc
pusha
imul
sub
sub
xchg
sbb
outsb
or
ljmp
push
ja
xor
and
pop
xor
add
mov
les
inc
adc
or
dec
aam
xchg
or
adc
inc
pop
pop
js
cmp
negl
add
xchg
aad
shrl
push
loop
sub
mov
int3
inc
stc
fcompl
add
dec
std
mov
push
add
pop
bound
cmp
xchg
nop
dec
add
push
outsl
cmpsb
sub
and
sub
push
js
add
loopne
or
fnstsw
adc
in
insl
dec
repnz
enter
rcrl
push
orb
add
div
inc
sub
push
xor
arpl
adc
mov
clc
adc
xchg
inc
and
cmpsb
mov
add
mov
add
adc
subb
fadds
fcomi
or
dec
hlt
pop
and
sbb
daa
loop
push
rolb
pop
repz
mov
fidivrs
hlt
push
add
mov
sub
mov
andl
loop
mov
mov
pusha
sub
push
adc
push
cmp
je
and
mov
add
loopne
xchg
mov
lock
add
dec
mov
push
sub
push
mov
pop
mov
add
push
fiadds
shll
inc
mov
sbb
hlt
sbbb
scas
jg
push
scas
add
jl
fiadds
push
inc
lock
movaps
inc
shll
push
push
or
call
mov
sbb
iret
pop
sbb
or
shlb
xor
scas
scas
pusha
xchg
dec
enter
inc
iret
add
xor
pop
dec
add
cli
sbb
push
add
xchg
bound
loop
fs
cs
fmuls
push
sub
mov
sub
cmp
add
test
sbb
sbb
adc
loop
fadds
jo
pop
add
mov
fs
sub
fdivrl
jecxz
adc
dec
xchg
repz
sbb
xchg
clc
inc
cmp
icebp
or
mov
fimull
cwtl
movsl
pusha
cs
rorb
cltd
xchg
movsb
inc
xchg
ficompl
inc
jo
add
mov
adc
lret
push
movsb
pop
aas
les
add
xlat
xor
jno
adc
cmpb
inc
outsb
iret
xchg
sub
lret
test
mov
xlat
sbb
sbb
es
ficompl
push
pusha
inc
mov
scas
incl
cld
jg
adcl
mov
mov
xor
cwtl
je
pusha
out
mov
cmp
fsubl
repnz
lock
data16
rorl
or
sbb
inc
jnp
shll
cld
cwtl
clc
cld
add
jb
test
repnz
push
inc
shrb
dec
inc
hlt
inc
add
divl
addb
or
mov
jmp
loopne
pop
mov
mov
adc
inc
pop
push
pop
in
data16
mov
xor
popa
scas
inc
stos
addr16
and
test
or
or
inc
dec
push
cmp
jne
and
inc
aam
jmp
add
ljmp
leave
call
sub
add
inc
ja
push
add
js
scas
and
xchg
jecxz
mov
jbe
add
insb
pop
inc
push
jb
cltd
outsb
jecxz
add
shl
rorl
jne
ret
dec
loopne
dec
dec
mov
sub
and
dec
or
xlat
push
or
add
mov
jb
pop
sbb
jge
adc
cmp
fcomp
xor
jle
sbb
clc
sbb
add
sub
jle
fmulp
enter
leave
sbb
es
fst
lcall
ret
adc
insb
in
inc
xor
pushf
sbb
or
add
and
jmp
insb
sarb
repnz
lds
adc
adc
or
sti
popa
mov
fs
les
hlt
inc
mov
aaa
outsl
inc
inc
xchg
mov
js
mov
push
call
and
or
andps
js
pop
mov
std
add
or
mov
and
scas
sub
inc
daa
hlt
mov
add
adc
and
add
adc
xor
rcrb
movsb
in
ljmp
lcall
addr16
mov
or
mov
fnstsw
cmc
add
shlb
push
gs
insb
lods
and
inc
add
roll
mov
xor
push
cmp
filds
add
push
and
inc
adc
xchg
hlt
add
mov
faddl
pop
adc
dec
add
dec
adc
movups
push
rclb
add
add
pop
push
repnz
icebp
fcoml
out
adcb
loopne,pn
add
push
mov
lock
rcrl
fcoms
lds
and
push
dec
mov
ficoms
xor
push
outsb
and
cs
int
mov
leave
test
sbb
pusha
rolb
push
mov
scas
push
gs
add
and
je
inc
dec
xor
push
repnz
add
adc
jl
es
push
call
adc
fstpt
jo
addl
sbb
call
pop
movsl
sbb
js
loopne
pop
pop
add
mov
mov
test
add
or
jle
xchg
xchg
sti
add
mov
scas
subb
adc
xor
inc
push
ret
or
iret
sub
fistpll
mov
fcomi
inc
loop
pusha
mov
outsb
faddl
fbstp
sub
or
push
xor
sti
fadds
int3
cli
popa
or
lcall
orb
mov
add
xchg
add
hlt
and
sub
rolb
ja
stos
jae
movsb
add
push
mov
pop
and
ret
lea
and
or
stc
push
add
mov
call
inc
repnz
test
clc
cmpb
sub
iret
push
cmp
das
addr16
jns
es
outsb
add
jle
aad
in
js
jmp
pusha
add
pusha
js
add
xchg
outsl
xchg
shlb
push
adc
adc
add
push
pop
push
push
inc
dec
int
fnstcw
add
pop
das
xorb
pop
aaa
and
js
jbe
xor
daa
test
pop
movsb
adc
xor
bsf
push
insb
cmp
or
mov
iret
out
or
mov
sub
add
popf
mov
mov
lahf
es
xchg
mov
into
jge
mov
nop
in
test
or
loopne
js
lcall
and
mov
add
sbb
or
push
pop
add
mov
xor
add
push
mov
or
mov
adc
or
push
mov
adc
ja
shl
pop
mov
sti
and
rolb
loope
leave
inc
outsb
push
js
hlt
add
arpl
or
addb
dec
pop
pop
and
dec
les
jp
loop
out
add
adc
dec
mov
inc
fcoms
in
roll
pop
inc
sub
and
lret
int
jecxz
or
xlat
ljmp
stos
sbb
push
pop
push
xor
fs
nop
clc
inc
inc
icebp
adc
pop
xlat
popf
sub
pop
inc
inc
push
add
xchg
subl
js
shl
mov
aam
or
stos
push
dec
fiadds
das
sarl
add
dec
xchg
xchg
mov
jl
or
int3
addr16
mov
cmp
xchg
or
mov
das
inc
sub
lods
and
push
shl
test
push
je
dec
jne
loope
or
repz
jno
sub
push
fmull
test
mov
inc
mov
arpl
sub
add
mov
lods
xor
mov
subb
add
insb
add
fdivrs
lock
pop
pop
and
and
aam
push
es
adcb
sahf
jg
movb
pop
or
out
lahf
not
pop
cli
mov
out
insb
cmp
iret
jg
or
iret
push
out
cmp
push
cmp
add
or
loopne
lds
push
sub
subb
addl
into
in
jno
mov
fsubl
jl
adc
jge
dec
hlt
stc
push
inc
jo
les
orb
mov
dec
xor
fs
dec
mov
fs
pop
push
and
adcb
repz
cmp
cwtl
cmp
ret
add
and
push
xchg
es
sub
or
push
mov
xlat
sarb
out
fidivrl
iret
popa
lods
push
call
xor
out
mov
loope
int
in
aad
jg
dec
mov
push
adc
popa
cmpsb
and
sub
xor
in
adc
jecxz
and
dec
adc
inc
mov
add
jle
clc
rcrb
mov
add
popf
and
mov
cmp
mov
xor
imulb
jns
and
add
and
adc
mov
jle
sub
push
jmp
cmp
dec
outsb
mov
insl
push
fdivrs
stc
adc
enter
inc
push
sub
insb
add
add
mov
mov
and
push
fsubl
mov
pop
js
movsb
enter
add
sahf
enter
cld
pop
add
mov
and
xor
push
jge
add
xor
pop
mov
add
push
pop
pop
test
int3
jb
hlt
add
xchg
cmp
loope
lret
and
movsb
add
sub
mov
pop
jp
mov
dec
and
cmp
jmp
or
mov
in
pop
push
fst
cmp
cwtl
adc
sbb
and
cmp
enter
dec
xchg
popa
push
mov
imul
sti
repnz
andb
xchg
adc
bound
mov
or
push
mov
stos
inc
xor
add
pop
or
dec
leave
pop
jb
add
adc
addr16
cmp
add
or
movsl
mov
lret
pusha
xchg
ficoml
sar
add
mov
jmp
movsl
out
push
fs
inc
popa
adc
add
lds
jecxz
fwait
or
cs
lahf
in
packuswb
inc
jmp
cld
jne
sub
mov
or
jo
xchg
xchg
or
xchg
xchg
cmp
scas
adc
movsl
daa
or
ds
cld
cltd
hlt
dec
aam
popa
test
mov
ror
movsl
mov
push
loope
sub
or
enter
and
sub
adcl
adc
dec
mov
ret
mov
subl
sbb
imul
ss
push
mov
je
pusha
in
mov
lcall
clc
pop
xor
sbb
xchg
and
addr16
jns
orl
dec
and
daa
add
cs
xchg
add
outsl
add
test
jmp
add
push
pop
mov
and
mov
jno
pusha
movsl
adc
jo
cmp
cld
mov
fstl
pop
push
dec
mov
push
add
xchg
add
sub
add
test
cld
rorb
inc
aad
loope
sub
pop
ljmp
lock
mov
push
push
decl
fisubl
fwait
andb
jle
pusha
into
fisubrs
insb
xchg
mov
test
insl
loopne
and
clc
mov
mov
inc
cwtl
mov
add
cmp
in
jo
cwtl
pop
sti
cmpsl
jmp
mov
cld
mov
popf
or
outsb
or
pop
test
sub
push
xor
xchg
sub
add
inc
xchg
cmc
cwtl
cld
lret
negb
adc
mov
js
addb
mov
and
jp
jmp
in
jmp
push
dec
mov
or
rolb
xchg
lods
mov
pop
and
mov
add
mov
push
test
push
add
pop
sub
jno
mov
xor
mov
sub
shlb
sar
and
mov
mov
inc
lcall
adc
mov
push
lret
jae
es
add
test
xchg
sbb
push
rcl
in
jmp
addr16
push
repnz
clc
sub
add
add
scas
xchg
movsb
dec
dec
xchg
add
sbb
cmpsb
int
jo
daa
sbb
jnp
jb
rolb
adc
into
andb
cmpsl
push
or
mov
or
adc
faddl
jo
sbb
sbb
add
lret
mov
add
mov
fisttpll
test
loope
imul
out
in
pushl
add
push
hlt
add
and
xchg
xchg
adc
add
push
sti
sub
movsl
add
jns
push
out
inc
cmpsb
push
in
push
xor
mov
mov
or
fmul
enter
stc
or
add
push
or
pop
jp
and
std
adc
pop
adc
add
movsb
cs
adc
push
pop
add
movl
adc
and
adc
xchg
mov
push
xor
movsl
xchg
imul
push
nop
mov
lds
jae
pop
sub
stos
xchg
mov
adc
fcoml
xchg
push
stc
lods
out
mov
ja
arpl
hlt
aam
outsb
pop
mov
pop
insl
push
cmp
xchg
popf
ret
add
aad
cmp
push
in
jl
incb
jle
movsl
pop
stc
fwait
loop
cmp
imul
mov
adc
push
jecxz
and
dec
push
xchg
and
mov
pop
mov
add
loop
or
fadds
jb
jo
sub
push
add
sbb
push
shrl
aas
mov
sbb
outsl
rorb
fsubl
mov
orb
pop
pop
loope
and
mov
or
mov
rorb
sbb
mov
mov
and
cwtl
cmp
inc
daa
loop
or
add
andb
mov
push
dec
or
imul
dec
cld
and
xchg
lcall
mov
pop
incl
in
inc
or
jnp
cmp
dec
enter
neg
int3
or
ljmp
fnstsw
pushf
and
addr16
adc
ja
adc
sub
in
adc
rorl
adc
mov
sbb
mov
test
in
add
lds
or
push
add
cld
data16
sbb
in
xchg
and
jmp
dec
xor
movsb
cmp
add
lea
inc
js
xchg
push
push
sub
xlat
insb
or
xchg
test
inc
xchg
push
mov
cmp
sub
adc
jo
xchg
jns
clc
cwtl
test
das
outsl
or
cmp
jne
mov
mov
mov
xchg
popa
adc
push
aad
adc
movsb
fs
cltd
sub
nop
and
add
cmp
push
fsubl
pop
filds
sub
push
aad
mov
ljmp
gs
inc
pop
ljmp
loopne
mov
jge
push
rcrl
rorb
jns
int
pusha
xchg
int3
pop
out
add
mov
pop
xchg
or
push
lds
sbbb
cwtl
in
incw
add
sub
out
daa
sub
test
adc
aam
push
repnz
or
mov
ds
or
adc
inc
lods
jo
add
outsl
fs
cmp
ror
ja
arpl
mov
mov
pop
xor
add
jmp
sbb
sub
jmp
push
dec
adc
ret
jle
pop
mov
inc
jns
sbb
push
sar
adc
int
and
pop
add
pushf
les
sub
call
mov
xor
and
adcb
ljmp
cs
push
push
pushf
inc
push
lods
pop
cmp
rclb
inc
push
add
int
add
mov
je
inc
mov
les
push
pop
sbb
nop
call
loopne
addb
add
icebp
iret
arpl
loop
cmp
insl
push
add
or
es
mov
subl
mov
shrb
stos
out
pop
adc
inc
sbb
mov
clc
lret
dec
jp
pop
repnz
insb
ud2
std
scas
mov
push
mov
xchg
cmp
lea
inc
xchg
popa
aam
loopne
adc
pop
loope
mov
gs
pop
xchg
xor
addr16
lock
daa
and
movb
jae
loop
adc
out
cmp
pusha
dec
mov
push
add
notb
clc
mov
push
add
push
jnp
fisubrl
push
test
mov
inc
inc
jp
loopne
repz
xor
test
dec
bswap
cmp
pop
je
adc
dec
call
and
push
loop
pop
inc
pop
lock
fcomps
adc
add
xor
repnz
addl
sub
or
adc
shrb
and
mov
pop
and
clc
sub
jns
sub
daa
lods
xor
shlb
data16
fldenv
sarb
pushf
xlat
imul
xor
push
call
xchg
stos
inc
mov
sub
aad
pusha
addb
and
fs
or
sbb
dec
adc
adc
fmull
aaa
cmpsb
and
pop
adc
ret
cli
xchg
nop
movsl
test
add
lock
subl
add
xchg
rorl
xchg
jp
nop
insb
pop
jp
mov
add
mov
xor
mov
add
sti
mov
rorb
inc
jl
push
lret
mov
add
rcr
and
cmpsb
lcall
in
mov
jge
add
out
in
cwtl
xlat
push
stos
scas
scas
gs
cmp
and
adc
and
sub
cmp
sbb
push
jbe
in
sub
js
mov
and
inc
xor
adc
arpl
mov
add
loop
iret
mov
jnp
js,pn
rolb
and
test
sbb
arpl
xor
fcomps
mov
lcall
mov
je
in
xchg
rclb
adc
in
mov
pop
inc
push
pop
cmp
aam
mov
loopne
xchg
xchg
cmp
adc
push
add
movsl
mov
inc
sti
add
or
push
popa
ja,pt
daa
clc
in
add
push
or
jmp
push
or
inc
jae
nop
movsl
nop
out
ja
mov
cmpsl
cmp
mov
std
cs
add
xlat
fcomps
pop
cmp
pop
or
sub
jg
cmp
sahf
js
cli
test
fdivs
loop,pt
add
and
mov
add
add
int3
mov
pop
mov
in
jmp
inc
and
ret
mov
pop
cmp
ljmp
dec
loopne
nop
jae
adc
movsl
jp
cmp
pop
icebp
in
mov
iret
mov
andb
fsts
in
inc
adc
lods
push
pop
or
jecxz
pusha
add
fmul
js
btr
ja
shr
dec
lret
xchg
orb
and
mov
inc
cltd
incl
pop
sahf
push
xchg
sub
add
jl
adc
mov
popa
push
out
jle
sub
xchg
mov
and
es
stc
popa
sbb
xor
dec
jg
call
cmp
sahf
fnstsw
pusha
test
inc
xchg
add
cmpsb
test
aam
adc
mov
and
jns
pop
sbb
add
mov
xchg
jo
push
lods
xchg
and
mov
pop
sub
sub
inc
hlt
mov
sti
or
xchg
fcomps
orb
mov
mov
fisubrs
add
jae
add
loope
mov
insb
cld
mov
sarl
js
cmp
pop
lcall
out
in
leave
fstl
jo
clc
ss
xor
sub
cld
pop
jmp
mov
mov
sbb
or
push
pop
cltd
icebp
loop
shlb
pop
mov
repz
jp
dec
sbb
ja
aad
cld
hlt
mov
ret
mov
push
int3
movsb
adc
mov
sbbb
aam
cwtl
push
lahf
nop
mov
popf
xchg
arpl
fildll
mov
push
cmp
mov
jnp
outsb
aaa
idivb
fildll
sub
add
jo
aaa
mov
jmp
sahf
xchg
frstor
adc
cmpsl
inc
xor
pop
outsb
jno
movsb
pop
mov
aad
dec
shll
push
sbb
mov
push
mov
add
jg
scas
daa
cmp
push
add
loopne
sar
popf
leave
or
add
scas
fdivrl
aas
in
daa
mov
and
test
inc
cli
and
mov
pop
es
add
jle
loopne
add
sub
adc
fidivs
les
mov
xor
inc
pop
cli
pop
adc
xchg
ljmp
mov
mov
faddl
mov
idiv
syscall
cwtl
repnz
andb
pop
rol
mov
test
in
cwtl
std
fs
jae
add
mov
outsl
pusha
cld
mov
adc
sarl
stc
sar
fadds
or
or
nop
cwtl
in
in
orl
adc
dec
addl
xchg
mov
fs
add
xchg
inc
cmp
scas
pushf
rorl
das
bound
dec
sub
cmp
stc
test
inc
mov
lahf
add
cmpsb
in
shlb
or
mov
add
sub
dec
out
jae
jge
add
rclb
ds
add
enter
pusha
push
add
jns
add
push
pop
leave
dec
aam
add
pushf
imul
clc
sahf
inc
in
cs
faddl
add
les
sub
daa
faddl
lcall
add
cmp
call
aam
rclb
cltd
arpl
fwait
imul
cmp
je
fimuls
adc
fadds
inc
jl
test
jecxz
add
sub
cmp
mov
jmp
push
cmpsb
ljmp
out
dec
lret
inc
xchg
inc
push
cmp
inc
add
orb
dec
cmpsl
movsb
lods
aaa
mov
add
and
cli
or
xor
inc
and
aam
fwait
orl
or
or
lahf
pop
mov
ds
stc
push
sub
out
je
mov
imul
nop
in
outsl
and
repnz
adc
add
adc
loop
lock
in
jno
adc
mov
rorb
push
inc
in
add
sbb
mov
popf
inc
dec
rorl
iret
mov
sbbl
ret
push
lods
adc
sti
mov
sbb
xchg
mov
fs
popl
sti
mov
add
pop
inc
push
pop
cltd
sub
fldt
cmp
std
add
lret
jo
out
or
mov
jo
push
mov
adc
mov
add
jne
je
add
lret
hlt
jbe
add
loop
mov
outsb
shr
hlt
add
fs
inc
aas
mov
push
or
pushf
xorb
clc
out
or
and
lea
outsl
roll
lahf
xor
mov
clc
icebp
std
stos
push
pop
in
test
inc
adc
rcll
add
aad
pop
xor
adc
faddl
les
jmp
or
or
js
and
sub
neg
xor
mov
inc
roll
sub
jb
xchg
xchg
fadds
ds
lcall
cli
sbb
in
add
xchg
sbb
lea
sbb
popa
cmpsb
test
lods
icebp
andl
and
add
roll
adc
aas
mov
faddl
mov
stos
mov
push
inc
push
stos
adc
aad
dec
xor
add
inc
and
dec
mov
xchg
mov
pop
cmpsb
mov
es
jmp
ja
jbe
inc
pop
jmp
and
sbb
scas
jp
dec
and
mov
lret
push
lock
jae
adc
fisttpl
push
xchg
inc
iret
cli
repnz
mov
imul
inc
xor
inc
add
dec
aam
out
iret
leave
add
mov
loop
movsl
xor
daa
in
sub
nop
mov
and
repnz
enter
mov
xlat
or
dec
inc
nop
sbb
shl
sub
mov
js
sub
sbb
add
sbb
subb
pop
mov
push
gs
inc
sbb
and
add
imulb
fmuls
sbb
inc
and
fdivp
push
lret
or
ret
push
sbbb
ja
mov
cs
add
jge
pop
jne
in
jmp
addr16
inc
in
mov
arpl
jne
xchg
push
fidivrs
and
nop
aas
jb
pop
pop
or
ret
and
ret
and
mov
pop
jo
push
std
sub
mov
call
push
lcall
add
and
adc
xchg
fimull
and
inc
mov
cmp
sbb
fistl
push
out
xchg
in
cmpb
mov
std
add
movsb
push
push
xchg
adcb
divl
inc
pop
inc
pop
mov
fiaddl
shlb
sbb
mov
pop
xlat
mov
dec
sub
push
es
sub
rcrb
mov
add
sub
or
sub
in
addr16
pusha
push
push
insb
fcoms
sahf
jg
mov
mov
lcall
sti
fisttps
inc
sub
and
add
xor
gs
lods
xchg
dec
xchg
clc
add
mov
mov
mov
or
jno
xchg
and
adc
notb
fucom
cli
and
sub
popa
mov
fists
nop
mov
and
inc
or
cmpsb
and
mov
push
jmp
add
mov
mov
xor
out
mov
adcb
sbb
out
int3
jp
inc
push
cli
aas
sub
les
loop
fmull
dec
out
sbb
js
cwtl
mov
lds
inc
rolb
dec
cmpsb
roll
xor
pop
dec
daa
nop
int3
xchg
xchg
fsubrl
or
push
orl
hlt
sbb
cmovbe
cmpsb
adc
mov
imul
fs
iret
adc
inc
in
add
xchg
and
loop
test
into
adc
add
insl
stos
and
xchg
addr16
mov
add
cwtl
das
pop
aaa
iret
mov
push
jne
lret
std
push
sbb
inc
mov
subb
mov
test
inc
push
aas
shrb
cmp
push
js
adc
in
les
jbe
movsb
loopne
add
push
repz
dec
ds
je
nop
ljmp
and
aaa
stos
pusha
je
xchg
add
sub
shlb
push
xlat
push
jbe
rolb
ficomps
mov
add
jp
cmp
and
xor
cwtl
jle
add
mov
dec
mov
pop
add
cmp
mov
or
pop
mov
and
loopne
pop
jne
or
jno
addl
je
cmp
dec
ficoms
enter
pop
aam
movsb
or
rclb
nop
add
sbb
sarb
push
loopne
push
in
pusha
add
dec
lret
xor
dec
aad
add
adc
loop
pop
call
les
pusha
nop
cmp
mov
jl
dec
push
mov
dec
xor
jae
sbbb
or
shlb
sub
stos
daa
mov
jo
and
sub
dec
mov
jno
push
push
adc
jl
add
mov
add
dec
adc
and
loopne
cmp
push
xor
and
jns
pop
add
jne
pop
xor
jmp
fmuls
sbb
outsl
push
clc
cmpb
cs
cld
incb
in
hlt
out
js
mov
loop
adc
push
adc
adc
push
push
or
or
test
sbbl
mov
mov
cmp
xchg
test
dec
andb
push
mov
cli
add
outsl
popf
jmp
mov
lret
inc
fadds
mov
xchg
adc
ror
ja
cld
sub
out
add
js
bound
popf
push
loop
xor
xor
jo
mov
push
push
pop
filds
sub
jecxz
adc
add
and
pop
adc
add
jo
loop
repnz
jle
sti
jae
add
push
jp
jno
add
cmp
popa
cmpsb
call
or
fcoms
mov
or
pop
cwtl
xor
add
sbb
shll
inc
or
xchg
pop
lahf
adc
and
xchg
or
popf
das
out
pop
dec
mov
adc
imul
adc
and
mov
mov
aas
dec
fs
pop
je
loopne
popa
cmp
std
jb
loop
mov
nop
adc
or
out
pop
rorb
ja
rorl
or
insb
mov
add
lahf
aas
cmp
ljmp
sub
nop
add
xchg
mov
push
test
scas
les
mov
cmp
push
fs
sar
dec
sub
sbb
add
scas
fdivs
push
cld
outsb
or
or
je
push
add
mov
es
je
sbb
jo
lods
push
xchg
inc
das
nop
clc
bound
dec
mov
add
cltd
pusha
mov
push
loope
cwtl
or
push
sbb
jns
or
roll
outsb
out
out
in
fbstp
mov
add
add
loop
xlat
and
lcall
out
or
and
enter
loope
pop
add
rcr
jno
xor
lcall
rcl
and
inc
or
incl
xor
add
cmpsl
lock
cmp
pop
stos
sbb
leave
add
cltd
out
sbb
sbb
dec
ja
lods
sbb
nop
push
add
pop
push
enter
leave
stc
jo
sub
mov
lahf
sub
outsl
push
or
enterw
mov
in
mov
lods
or
push
mov
xor
repnz
mov
enter
rclb
adc
add
lods
ljmp
mov
cmpsl
lds
pop
es
mov
push
out
add
cmpl
pop
pop
sbb
loop
dec
inc
push
rcrb
add
pusha
adc
push
add
jbe
mov
pop
push
push
dec
fdivr
add
and
cmp
sti
and
ss
add
add
inc
mov
jo
mov
bound
add
test
add
jmp
mov
add
icebp
fstpt
add
add
sti
add
js
sahf
test
push
loop
out
inc
cmp
pop
xchg
mov
jp
push
jl
rcl
adc
cmp
ja
out
out
dec
mov
push
cs
fstl
loopne
mov
mov
fsubl
fimuls
rcrb
in
sub
fidivrl
stc
nop
dec
fwait
out
mov
orb
jl
addr16
fdivrs
and
add
sbb
bound
call
cmp
insb
sub
in
xchg
add
jl
dec
inc
into
xchg
fs
cld
dec
xor
popa
pop
insl
mov
inc
cmp
adc
insl
or
push
mov
xchg
insb
mov
inc
sbb
gs
movsl
aad
mov
inc
es
int3
pop
repnz
inc
getsec
xchg
push
mov
pop
leave
pop
sbb
rorb
pop
stc
cmpb
cwtl
das
add
andl
aaa
dec
insb
or
mov
shlb
xchg
insb
or
sub
pop
popa
shrl
in
addb
add
data16
out
dec
push
xchg
add
adc
and
ss
cmp
add
pop
scas
sub
add
in
loope
ret
or
pop
orb
mov
rolb
adc
jp
iret
out
pop
mov
rclb
mov
mov
lahf
nop
cwtl
outsb
inc
pop
xchg
jnp
out
push
sahf
mov
cmp
orb
pop
xchg
push
push
mov
pop
lahf
aad
das
icebp
xchg
pop
jg
jnp
or
rcr
mov
xor
ljmp
push
cmpsl
or
sahf
clc
push
sbb
push
divb
and
cmp
mov
stos
pop
and
pusha
or
out
mov
pusha
addr16
mov
mov
bound
nop
jns
adc
das
pop
add
jg
pop
bound
mov
mov
mov
push
or
shlb
or
mov
pop
clc
cmp
adc
xchg
or
fisubrs
jmp
dec
adc
popa
pusha
shlb
mov
xchg
pop
or
fidivrs
cld
js
repnz
add
xchg
ds
or
lock
test
add
inc
pop
or
daa
call
mov
ja
mov
or
mov
jo
cwtl
adc
push
sub
push
inc
dec
or
ret
ret
jl
and
sub
gs
pop
cmp
les
inc
xor
mov
adc
add
mov
mov
repnz
mov
aas
out
fisttpll
arpl
cmpsb
and
ret
push
inc
mov
pushf
stos
lcall
pop
inc
inc
daa
orb
sbb
lcall
call
adc
mov
add
out
sub
xchg
or
shrb
mov
cli
popa
or
push
add
jge
shl
stos
outsb
add
mov
pop
mov
mov
xor
lret
mov
xchg
repnz
or
mov
test
mov
add
sbb
addr16
or
add
xchg
inc
ljmp
sub
insb
aaa
and
sar
xchg
or
and
shl
jle
jo
es
pop
jns
or
out
add
mov
or
jecxz
adcl
inc
daa
sbb
pushf
adc
shr
int3
ds
inc
ret
sbb
jo
sub
mov
clc
cmp
stc
jbe
push
mov
push
adc
inc
dec
push
nop
mov
push
stc
jo
sti
dec
xlat
cmp
aad
add
sbb
pop
js
dec
pop
test
inc
outsl
sbb
sahf
in
ds
testb
mov
movsb
inc
leave
sub
or
sbb
es
les
push
in
add
fsts
lret
inc
lods
dec
jnp
push
cmpsb
sbbb
mov
pop
movsb
fcmovnbe
cwtl
push
jle
add
sti
mov
inc
hlt
call
jmp
or
push
jg
xchg
cmp
clc
adc
inc
jo
and
enter
xchg
push
push
pop
pop
pushf
enter
add
mov
loopne
jne
add
nop
mov
fs
cs
adc
xor
or
incb
mov
add
std
push
pushf
test
cmp
sbb
mov
movsb
adc
add
into
or
add
mov
lods
icebp
out
or
in
outsl
inc
push
cld
xchg
pop
add
addr16
jb
add
mov
xor
iret
cmp
loopne
lds
mov
mov
or
lret
fmull
push
test
fisttpl
mov
aam
sti
lock
sub
fcoms
mov
mov
push
add
call
inc
test
xchg
loop
xor
sub
je
or
int3
mov
add
aaa
push
lods
cmpsl
and
mov
into
xlat
mov
loopne
std
es
test
dec
or
sub
cmc
out
clc
pop
mov
in
aam
jbe
jp
pop
jo
and
not
jmp
jl
cmp
insb
mov
aam
test
xor
add
popf
pop
mov
mov
push
test
inc
add
xchg
bound
test
enter
xchg
and
repnz
cs
and
inc
mov
push
ret
push
shrb
insb
daa
or
inc
stos
inc
test
daa
mov
addr16
dec
add
jns
inc
sub
sub
stos
pop
pop
jp
hlt
mov
mov
lods
aad
sbb
scas
dec
pop
push
jb
dec
das
add
inc
fs
mov
enter
daa
jns
ds
xor
aas
das
add
push
cmp
mov
push
push
int3
cmp
add
xor
jnp
or
bsf
pop
xchg
int3
push
dec
add
fildll
add
into
add
and
ss
pop
lods
sarb
inc
adc
add
push
mov
sub
xor
loopne
adc
fcoml
pusha
and
pop
hlt
sti
cmp
jo
mov
inc
shlb
hlt
hlt
add
pop
and
ja
lock
add
lods
pop
test
push
test
dec
add
insb
mov
sbb
sub
jne
jmp
test
jge
test
jmp
add
and
pop
pcmpeqw
scas
push
arpl
xchg
shl
sub
push
shlb
lods
pop
sbb
fiaddl
in
lahf
inc
mov
add
ljmp
scas
mov
not
sub
lock
xor
inc
cwtl
rclb
pushw
enter
nop
add
push
movsb
mov
outsl
jl
add
add
aam
add
xor
jne
add
xchg
mov
inc
dec
movsl
test
in
fadd
cmpsl
pusha
xor
inc
addb
ret
or
daa
add
rclb
or
cltd
in
cmp
gs
call
incb
xor
jbe
lret
add
cmp
jno
add
out
lea
ret
or
mov
int
pop
add
pop
arpl
add
sbb
mov
cld
sti
adc
mov
enter
or
fwait
xchg
popa
and
xlat
icebp
mov
data16
mov
aaa
sub
mov
int3
inc
loop
jp
ret
jns
push
xchg
sbb
outsl
pop
in
dec
or
iret
mov
adcl
push
enter
cmp
cwtl
dec
pop
iret
inc
and
fcompl
add
mov
mov
or
adc
in
pop
or
inc
mov
or
add
and
cwtl
add
jg
dec
mov
sub
lret
ja
pop
sub
lock
xorb
sysret
loop
and
adc
mov
add
pusha
outsb
jb
cmp
add
pop
adc
add
test
fsubl
add
sbb
xlat
inc
loope
loop
fisubrs
dec
xchg
into
xor
xor
add
push
pop
or
pop
lcall
mov
arpl
hlt
and
rclb
add
addr16
cmp
ret
test
xchg
mov
cmpsl
adc
aam
clc
mov
addb
add
xchg
sbb
dec
lcall
mov
popfw
movsl
jo
jb
add
jno
dec
lods
cmp
mov
jl
icebp
cmp
repz
dec
xchg
dec
ret
test
in
add
cmp
push
js
aad
inc
adc
add
test
dec
sub
and
stos
add
mov
sub
out
dec
add
jge
pop
inc
pop
dec
xor
mov
add
dec
fisubrl
sar
popa
in
mov
addr16
sub
push
push
vplzcntq
ja
adc
push
add
test
das
jge
cmpsl
fisttpll
andb
add
push
in
xor
add
xor
ljmp
adc
loope
push
dec
iret
dec
dec
adc
js
outsl
shlb
mov
xchg
fs
xchg
enter
push
into
stos
nop
add
mov
aam
inc
add
stos
test
pop
dec
cmp
jmp
jge
add
in
sbb
movsl
mov
les
mov
xchg
cmp
xchg
lock
add
push
adc
lods
dec
ret
sbb
mov
mov
add
aas
xor
stos
andl
mov
js
pop
mov
xor
mov
addl
in
mov
pop
int3
out
pop
add
xor
add
lds
or
and
inc
push
lock
icebp
or
xchg
frndint
and
call
mov
mov
ds
sub
add
rolb
into
fiadds
scas
inc
rcrb
icebp
jg
fisubs
pop
mov
xchg
lods
and
push
cs
xchg
xchg
xchg
jae
sbb
cmp
fsubl
fmul
int3
add
mov
sub
dec
adc
inc
push
imul
cmp
sahf
add
in
mov
mov
mov
mov
mov
stos
adc
mov
icebp
adc
loope
add
sbb
mov
jae
pusha
xchg
jl
sub
mov
in
adc
dec
pop
loope
push
addl
andl
dec
pop
sub
mov
xchg
loopne
xchg
mov
adc
lret
mov
fs
add
jge
lods
loope
out
scas
dec
and
add
xchg
imul
pusha
fists
push
pop
ljmp
in
icebp
pop
push
xchg
les
dec
sub
pop
das
mov
sbb
shlb
sbb
mov
xor
add
stos
pop
sbb
sub
and
out
rorb
dec
sbb
fistps
mov
movb
sti
je
call
inc
or
popf
pusha
ret
mov
cmp
in
or
test
and
xchg
mov
enterw
out
js
mov
sub
add
insb
iret
lds
adc
push
xor
xor
rol
stos
shll
adc
pop
adc
movb
mov
ret
ret
inc
hlt
data16
pushf
inc
xor
or
cmc
xchg
add
inc
faddl
cmpsl
mov
fisttpll
jecxz
mov
inc
mov
inc
dec
xor
dec
daa
and
mov
inc
and
ret
es
xor
jmp
add
lods
imul
xchg
pop
roll
into
push
nop
add
sub
fimull
sbb
jp
and
mov
mov
pop
push
dec
aaa
das
dec
pop
dec
inc
adc
xchg
lods
add
ret
pushf
outsl
inc
add
cli
call
inc
hlt
aad
jle
aaa
cmp
sub
push
nop
dec
mov
andl
push
push
and
sbb
or
pusha
jmp
cmpb
test
pushf
mov
sbb
jb
popf
insl
mov
jo
cli
sub
and
jno
aam
adc
mov
pop
add
and
fs
and
or
inc
xor
data16
add
ja
and
lret
pop
add
jbe
sub
iret
cmc
ret
pop
add
aaa
adc
or
inc
cmp
int3
pop
ret
fwait
test
push
fs
jns
add
or
cmpsl
nop
mov
scas
outsb
sub
pop
stos
dec
add
fmull
popa
ret
in
dec
dec
les
add
mov
cmp
mov
lock
add
aas
scas
jl
arpl
jbe
les
sub
fldenv
subl
pop
dec
mov
xor
sub
add
cmp
lret
leave
lods
in
add
outsb
mov
add
fdecstp
fsubrs
push
push
enter
or
or
loopne
cli
push
mov
adc
sub
movsb
xor
adc
push
and
arpl
cmp
insb
add
push
xchg
jo
pop
and
lret
sbb
sub
mov
inc
and
jg
mov
repz
shll
fcomps
xchg
into
push
shlb
push
dec
cmp
inc
mov
int3
push
or
add
push
out
inc
add
xchg
dec
into
imul
or
mov
pop
cmove
xchg
aaa
lret
add
pop
imul
pushf
inc
sbb
and
or
aam
ja
push
push
add
push
test
loope
fmulp
inc
mov
pop
mov
cltd
xchg
mov
in
insb
mov
mov
aam
hlt
fmull
or
mov
push
orb
loop
sbb
fisttpll
mov
push
pop
push
inc
pop
pop
xchg
jns
clc
ret
or
jle
pop
aas
cs
inc
xchg
sbb
prefetch
or
and
and
sub
call
mov
and
dec
into
add
mov
jae
dec
pop
sub
enter
lret
jno
jne
jp
mov
inc
inc
and
cmp
rcrl
jb
xchg
add
and
mov
fldl
and
sti
sahf
mov
inc
ror
push
or
js
xchg
or
inc
adc
es
cltd
roll
ds
and
adc
jle
add
pop
repz
cmp
sarb
loope
mov
cmp
test
xchg
hlt
inc
fcomps
mov
mov
arpl
add
int
adc
cwtl
push
pop
lahf
hlt
and
into
sub
dec
add
lds
into
sbb
clc
andb
fdivrl
aam
sbb
or
and
add
ss
call
add
loopne
adc
dec
add
fs
iret
or
adc
sub
ds
cs
add
iret
pop
or
xor
push
pushf
pusha
push
sub
push
jg
mov
es
add
pop
push
and
je
inc
add
aas
lcall
cmpsb
xor
and
inc
test
std
push
inc
xor
sbb
add
mov
xchg
pop
add
dec
jb
add
imul
push
sub
mov
scas
cli
add
daa
enter
je
iret
sbb
adc
loopne
add
fcmovb
jae
aas
and
int
jbe
add
stos
pop
dec
add
xchg
sbb
jmp
and
and
pop
mov
push
aam
ja
xlat
adc
nop
xor
shl
and
inc
test
xor
pop
mov
dec
xchg
iret
cmp
jg
icebp
or
sbb
jns
lret
xchg
aam
scas
enter
pop
pop
or
jp
sub
inc
test
inc
mov
mov
test
xor
dec
cmp
imul
ret
insl
pop
dec
test
addl
sbb
loope
pop
outsl
mov
pusha
aam
movsl
pop
movsb
add
insb
push
sub
add
stc
fs
mov
and
dec
data16
aas
es
cmp
sub
mov
push
inc
mov
out
inc
mov
mov
or
fs
shr
rcrb
add
pop
fwait
clc
and
and
adc
push
je
pop
xchg
movsb
aam
dec
inc
stos
scas
movsb
pop
xor
nop
push
cltd
aaa
jmp
sti
dec
jbe
int3
jp
push
test
inc
pop
rcrb
push
mov
dec
jns
push
das
mov
push
push
jmp
sbb
sbb
pusha
adc
lods
rorb
out
dec
xchg
in
bnd
pusha
and
and
sub
fildll
test
push
and
sub
push
sbb
mov
nop
pop
add
into
mov
mov
pushf
rcrb
adc
pop
push
movsl
lea
addb
add
mov
add
leave
les
push
int3
add
push
ja
mov
mov
pop
mov
pop
pusha
pop
mov
mov
inc
lretw
sbb
mov
push
xchg
push
and
push
pop
cmp
inc
cmp
dec
add
dec
push
push
or
hlt
rcll
push
add
cli
repnz
sub
cs
cmp
ret
nop
push
dec
rcl
cmp
sub
push
in
fisubrl
xchg
push
and
call
xchg
arpl
cmp
inc
push
sbb
dec
xchg
sub
cwtl
mov
das
pop
pop
adc
cwtl
mov
mov
jmp
adc
fs
fldcw
data16
mov
std
and
clc
andl
and
sub
test
jno
add
outsl
mov
divb
mov
or
shrb
pop
dec
loopne
jl
pop
mov
inc
loopne
or
jne
ret
or
pusha
add
clc
pushf
push
stc
add
out
int
inc
cmp
mov
dec
iret
in
add
inc
int3
mov
push
scas
test
popf
nop
fs
mov
sub
lret
adcb
popf
data16
loop
xor
mov
pop
adc
ja
stos
add
xchg
aas
xchg
adc
enter
inc
scas
push
out
mov
in
shl
jl
cmp
loopne
sbb
inc
add
lahf
cmpsb
cs
stc
add
xlat
inc
cld
push
xor
xor
adc
mov
aas
mov
mov
aaa
popa
push
icebp
mov
push
movsl
dec
jbe
rclb
add
add
call
adc
pop
add
dec
push
xor
icebp
adc
dec
int3
add
mov
inc
or
lret
mov
cmp
pop
mov
push
inc
scas
rolb
shlb
lret
inc
or
sub
xchg
dec
rolb
push
fsubl
pop
push
cmc
scas
and
ljmp
lock
inc
clc
sub
in
aas
xor
pop
shlb
call
inc
fwait
push
adc
lods
add
in
pop
mov
cmp
ret
mov
test
lods
imull
mov
ja
xchg
mov
dec
pusha
loop
push
and
mov
inc
xchg
mov
mov
sbb
ret
rorl
sar
jle
jle
add
dec
and
pusha
jge
fwait
sbb
inc
lahf
mov
add
pushf
add
xorb
pop
jae
call
cmp
out
dec
add
sub
xor
sub
push
lock
add
cld
ja
popf
or
bound
and
mov
xor
mov
push
cwtl
stc
adc
mov
daa
push
loopne
cmpsb
movsb
mov
push
enter
or
insl
cmp
or
mov
inc
nop
mov
lods
nop
mov
add
sbb
sub
xor
les
shlb
and
imul
stos
inc
push
adcl
mov
subb
mov
jne
repnz
pop
fistps
cmpsl
out
das
hlt
mov
clc
inc
es
cwtl
nop
test
cmc
andb
add
pop
cmp
mov
jg
cld
jecxz
cltd
mov
jo
mov
stos
mov
push
inc
add
add
jp
push
xchg
push
and
add
dec
lcall
push
jecxz
push
clc
add
pop
fcoml
dec
cwtl
int
mov
loop
sub
inc
push
std
test
dec
sub
mov
xorl
ljmp
mov
inc
push
jmp
adc
ret
mov
add
int
add
dec
loopne,pn
xchg
and
ljmp
popa
test
mov
adc
mov
inc
cmp
call
clc
sbb
jmp
add
dec
xor
dec
adc
fwait
icebp
mov
insl
adc
lea
test
dec
mov
jnp
xchg
sub
xor
leave
out
loope
lcall
or
lock
add
inc
aad
dec
pop
out
add
in
push
repz
add
mov
out
les
adc
or
scas
xchg
xchg
aam
cld
and
shll
gs
out
call
cmp
sub
add
call
inc
push
and
add
or
mov
sbb
adc
fsubl
lds
insb
mov
cmc
cltd
pop
dec
fcomps
lock
push
bound
push
cmp
lea
nop
mov
add
arpl
adc
test
iret
cltd
jge
test
test
add
fwait
orl
out
add
add
std
loope
aaa
js
xor
add
xlat
test
dec
mov
dec
sbb
and
mov
push
and
push
add
pop
push
jnp
mov
daa
pop
add
mov
mov
rolb
test
push
fldt
add
out
mov
fwait
or
movl
test
adc
add
inc
ret
cmpsl
and
shl
adc
pop
pop
rclb
out
and
add
lock
jae
clc
mov
push
ja
cmc
xchg
add
aaa
or
lret
jo
push
icebp
into
mov
add
repnz
mov
ljmp
repz
data16
xor
mov
add
mov
inc
xor
adc
sub
dec
sbb
lahf
cmc
xchg
out
bound
imul
add
jmp
inc
sbb
xlat
jb
stc
push
lods
add
sbb
pop
jns
xchg
adc
lods
fstl
testb
push
call
mov
addl
cwtl
xchg
xchg
fdivr
jmp
lds
sti
stos
mov
add
mov
adc
out
mov
push
sub
add
push
lock
test
mov
dec
adc
mov
xor
adc
lock
ljmp
mov
jns
inc
int
in
inc
pop
add
clc
aad
or
stos
jle
repnz
nop
mov
lcall
xor
shrb
rcll
fsubrl
sbb
dec
and
jo
cmc
or
clc
jbe
and
addr16
mov
and
ja
sub
push
add
push
or
adc
into
in
sarl
push
pop
dec
stos
test
dec
cmpb
movsb
or
mov
xor
nop
or
xor
rcrl
cmp
stos
inc
leave
sub
dec
mov
sub
call
adc
add
add
sub
xchg
in
dec
js
insb
mov
mov
sbb
inc
push
jae
pop
pop
xor
popf
pop
pusha
korq
stos
sub
add
cwtl
push
add
js
xor
sbb
add
sub
xchg
test
pusha
lock
add
dec
daa
xchg
mov
pop
adc
lods
and
jnp
xchg
jns
nop
xor
lds
push
aas
cwtl
sbb
add
cld
push
jnp
jmp
cmp
cmpsl
shl
rolb
or
mov
lods
mov
mov
mov
movsb
lock
aas
call
aaa
pushf
sbb
adc
cli
fcoml
mov
fimuls
inc
fwait
cmpb
rcrb
add
pop
cmp
mov
insb
inc
ret
inc
inc
repz
imul
pop
adc
sbbb
inc
sub
sbb
and
and
push
and
push
cmp
cs
outsl
pop
orb
pop
aas
lret
movsb
jno
mov
insb
sub
pop
aaa
fisttpll
into
mov
enter
pop
xchg
cmp
mov
repz
adc
mov
inc
xchg
mov
ret
and
mov
mov
pushf
inc
add
and
xchg
hlt
push
mov
and
std
aaa
adc
jp
add
ja
adc
fwait
inc
xor
mov
xchg
movsb
ds
xchg
subl
push
mov
mov
addr16
lahf
arpl
and
add
stos
ficoml
adc
add
mov
xor
adc
int
cwtl
push
lret
add
das
add
push
in
pop
nop
mov
dec
pop
out
outsl
hlt
rcl
xchg
cltd
in
into
pop
bound
add
mov
push
inc
jae
jp
add
fdivrs
dec
shufps
push
aas
cwtl
jle
mov
mov
jns
mov
insl
imul
in
mov
mov
inc
outsl
rolb
call
and
dec
sarl
cmp
xor
test
faddl
mov
add
cmpb
cmpl
cwtl
jbe
mov
mov
imul
in
push
movl
les
mov
popa
dec
pop
nop
push
test
sahf
add
loope
pushf
jmp
cmp
pop
call
cmc
push
fmul
sub
lcall
jl
loopne
arpl
xchg
idivl
adc
js
repz
xor
mov
loopne
pop
mov
test
sub
addr16
xor
lret
add
inc
rolb
add
mov
jmp
jl
ja
mov
ds
xchg
enter
mov
cmp
push
sub
mov
movl
push
cmp
xor
pushf
mov
popa
mov
push
inc
or
sub
push
pop
mov
jo
cmc
out
push
iret
mov
shl
pushf
inc
aam
lret
repnz
sub
cwtl
pop
test
in
lods
add
cmc
jmp
sbb
sub
xor
outsb
mov
bswap
dec
push
enter
or
sahf
inc
cs
add
enter
cmc
push
mov
ret
icebp
xchg
xor
push
xchg
adc
adc
dec
movsl
sub
imull
ss
icebp
lods
sub
mov
lcall
pop
fwait
cmp
adc
shlb
xor
xchg
call
mov
rolb
mov
push
dec
push
out
andb
adc
in
push
sbbb
and
incl
inc
or
adc
mov
xor
sub
xchg
in
dec
je
add
mov
inc
push
mov
or
call
ror
xor
fildll
cmpsb
mov
bound
sub
jg
add
sub
ljmp
cmpsb
mov
sub
mov
in
daa
lods
sti
mov
pop
jge
das
jmp
out
test
ljmp
cmp
adc
imul
add
sti
lret
mov
jge
and
cld
mov
lods
mov
nop
cmp
dec
test
add
fs
push
fwait
jge
pop
scas
cwtl
mov
shlb
mov
add
fdivp
test
cmp
mov
adc
and
xor
shrb
stc
sub
sbb
adc
push
enter
aas
mov
pop
push
add
lahf
jb
push
adc
xor
shrb
add
push
mov
lods
sbbl
mov
ficomps
sbb
pop
mov
jge
or
xchg
testl
xchg
and
push
mov
popf
mov
jae
mov
and
add
lcall
cmp
dec
daa
cmp
loop
sarb
inc
mov
mov
pop
addr16
js
ss
fmuls
cmp
in
xchg
xor
lock
ja
or
popl
fwait
sbb
repnz
das
xor
jge
pushf
push
or
hlt
xchg
jmp
lss
push
jae
imul
outsb
push
cmp
xchg
scas
adc
scas
out
adc
cmp
test
and
popf
inc
or
fistl
jae
popl
aaa
cmp
sub
shlb
xchg
mov
add
leave
ds
test
cmc
out
mov
xor
and
add
add
rcrl
cmpsb
or
fs
mov
cmp
add
scas
fcmovnb
jns
popf
jg
nop
and
mov
jno
push
ret
pop
enter
xchg
add
fistpll
sbb
jecxz
mov
js
cmp
xchg
addb
clc
movb
daa
in
aad
lret
jnp
add
ss
das
push
jne
call
cmp
and
inc
add
sti
jns
rolb
mov
mov
xlat
stos
adc
pusha
scas
cmc
movsl
shrl
and
cmp
div
cmpsb
lret
push
dec
jle
mov
stc
repz
mov
ja
xchg
add
movsl
inc
fstps
push
jbe
movsb
cld
mov
sbb
fadds
push
sub
cmp
inc
subb
js
xlat
pop
push
nop
movsb
push
pop
jl
add
cmpsl
imul
mov
pop
xchg
ja
fsubrs
inc
and
sbb
inc
mov
xor
adc
roll
nop
cld
dec
adc
cmp
push
dec
and
in
add
dec
stos
jmp
cmp
jl
je
push
repnz
mov
mov
mov
adc
add
shll
fcoms
stos
adc
and
scas
sub
inc
jle
lret
xor
sbb
mov
movsl
stos
lea
test
lods
xor
or
imulb
or
test
mov
fdivr
repnz
mov
xor
sub
pop
test
out
mov
mov
add
dec
insl
and
dec
and
dec
ficoml
pop
mov
test
dec
repnz
push
add
mov
sub
out
mov
aaa
push
mov
enter
les
mov
adc
cmp
fwait
add
mov
mov
loopne
enter
pushf
dec
add
xor
lods
sbb
inc
in
and
push
cmp
dec
out
inc
and
lcall
and
and
add
flds
add
or
cmp
cmp
jmp
sbb
ljmp
sarb
shlb
lods
or
push
add
pushf
lods
push
ljmp
mov
dec
inc
enter
mov
les
nop
rclb
testb
in
xor
ret
cltd
xor
loopne
fwait
xor
sarb
add
pop
mov
pop
add
jmp
ret
cmp
mov
dec
rorb
push
pop
and
mov
or
lds
add
inc
add
outsb
add
incb
bound
xchg
xor
dec
pop
fildl
mov
aam
out
add
ret
into
scas
in
add
ss
add
inc
mov
or
xor
cltd
sarb
mov
pop
xrelease
icebp
mov
add
cwtl
jge
jmp
inc
mov
cmc
mov
fldcw
jp
xchg
rolb
xor
mov
mov
in
add
or
aad
dec
mov
or
aas
pop
add
xor
xchg
cwtl
dec
loopne
cmp
mov
pop
mov
nop
scas
out
push
jl
add
or
fcoms
dec
jae
xchg
or
mov
cltd
popa
xor
data16
xchg
loop
add
xchg
cmp
ret
push
ss
ret
les
cmp
test
pop
fnstenv
test
jb
add
lods
jbe
es
js
enter
subl
dec
adc
mov
push
add
add
fsubrl
testb
lahf
inc
xor
pusha
mov
mov
sbb
or
adc
mov
fiadds
or
lods
push
sub
inc
sti
mov
sbb
xorb
push
xchg
mov
pop
repz
nop
or
sub
dec
mov
fdivrs
arpl
xchg
in
das
adc
adcl
mov
mov
les
test
and
mov
faddl
xor
clc
add
xor
test
add
xor
lcall
repnz
add
loope
mov
add
pop
or
cmpl
mov
pushf
pop
mov
cmp
push
fildl
mov
ds
or
fcoms
jno
xor
pop
repnz
mov
inc
sahf
xor
cld
sbb
mov
loope
jge
mov
mov
xor
pop
dec
fsubr
adc
mov
test
mov
sbb
rcl
sbbl
icebp
scas
repnz
dec
add
jl
dec
xchg
sbbb
push
add
ja
loopne
lcall
test
xor
mov
and
pop
cmp
sub
cmp
inc
or
shr
popl
jg
mov
mov
dec
mov
nop
mov
mov
adc
xor
mov
or
rorl
adc
mov
popl
rclb
cld
sub
xchg
cwtl
pop
mov
sbb
mov
jle
popl
mov
push
clc
test
fs
dec
scas
inc
enter
jecxz
push
lret
loopne
pop
je
push
add
mov
cmp
mov
mov
jbe
aaa
ds
imul
push
add
movb
shr
jmp
jo
pop
sub
cmpsb
loop
add
test
pop
mov
test
subl
das
pop
aad
inc
popa
addr16
pop
lret
jmp
outsb
push
or
jae
add
fadd
xchg
sbb
clc
dec
movsb
cli
mov
out
or
mov
add
mov
xchg
dec
mov
sbbl
mov
lock
pop
out
test
mov
ret
mov
xor
dec
xchg
mov
mov
movsl
cmp
cmpsb
pop
or
adc
push
push
repz
adc
clc
sub
xor
pop
push
mov
jo
jo
push
jl
or
or
add
xor
mov
lret
and
fsubrl
cmp
stos
mov
mov
xor
testb
mov
insl
jbe
fidivs
dec
cmp
dec
sub
dec
cmc
add
jo
adc
cmp
das
add
mov
rcrb
fwait
cmp
add
scas
je
int3
inc
clc
icebp
cmc
sub
in
js
lock
pop
xchg
inc
loopne
fsubs
pop
repz
std
sub
data16
pushf
popa
cld
test
pop
test
inc
xor
adc
xchg
and
cmp
std
add
and
push
bound
cwtl
fcoms
mov
cmpsb
xlat
sub
mov
imul
mov
mov
lods
cld
shlb
out
pop
je
test
fidivl
dec
std
in
or
scas
pop
add
std
xor
xchg
fs
jns
popf
faddl
cwtl
sub
add
pop
xor
jb
call
cltd
cld
int
mov
imul
cmp
out
pop
mov
mov
or
add
push
lock
add
push
add
fwait
mov
dec
pop
add
mov
test
pop
xchg
test
cmp
and
fwait
or
push
mov
mov
fistps
ret
xchg
stos
call
jecxz
adc
cwtl
xor
push
daa
jge
stos
mov
loopne
lahf
xchg
add
pop
add
mov
jnp
js
lcall
mov
stos
adc
loop
add
rorl
add
jge
inc
push
repz
clc
or
pop
loopne
mov
and
pop
adc
jns
mov
fs
lea
dec
pop
xor
add
pop
lods
iret
jecxz
jb
mov
aad
icebp
insl
or
cmp
push
mov
mov
popa
mov
fwait
imul
jmp
xchg
xor
inc
add
shl
rcrb
loop
loope
cmpsb
or
fwait
add
movsl
jmp
in
add
cmpsl
roll
mov
fmull
mov
adc
mov
js
mov
xor
repnz
stc
pop
call
out
jbe
addr16
add
fildl
cmp
add
stos
or
and
dec
adc
ret
mov
mov
sub
mov
and
stc
pop
shld
ljmp
cwtl
sbb
adc
rolb
insb
jae
mov
in
xor
push
or
or
rol
cmp
mov
and
jmp
pop
sti
add
filds
loop
push
call
add
sub
sub
sbb
add
jno
add
call
stos
rcll
dec
repnz
in
inc
cmp
sub
addr16
lret
loope
cmp
repnz
push
fisttpl
leave
and
mov
inc
iret
mov
mov
ret
shlb
jl
pushl
cmp
nop
hlt
dec
cmp
jp
adc
sbbl
lahf
pop
add
nop
sahf
pop
lock
rorb
wbinvd
ljmp
xor
jl
jne
add
mov
push
add
pop
js
and
cmp
xchg
add
add
and
das
adc
lock
jno
sub
mov
orb
add
loopne
and
pushf
and
or
rcrl
dec
and
inc
dec
add
xchg
sbb
pop
jnp
mov
jo
fsubl
js
loopne
push
inc
insl
sbb
add
test
fcoml
daa
inc
test
hlt
adc
shrb
stc
addr16
add
or
pop
sub
movsl
fsubrs
add
push
add
adc
and
faddl
fwait
pop
popa
xchg
sbb
xchg
cs
xchg
cmp
and
es
mov
xor
xchg
mov
orl
js
pop
call
lcall
xchg
and
xor
mov
xchg
cli
or
push
mov
les
xchg
add
adc
and
mov
dec
fwait
push
mov
xchg
dec
nop
and
and
inc
sbb
clc
inc
cli
mov
mov
filds
lcall
inc
jp
push
fwait
or
test
or
dec
dec
in
cmp
add
push
cmp
jecxz
mov
int3
je
add
sbb
les
repnz
sbb
add
cmp
or
or
pusha
add
fisubl
cmp
mov
out
push
mov
push
es
push
add
iret
pop
call
push
ds
add
or
xor
xor
loope
mov
popl
inc
call
xchg
loopne
cld
fbld
or
push
xor
xor
int
cwtl
addr16
add
sbb
cmp
stc
aam
xchg
mov
xchg
loop
fbstp
nop
int3
add
les
xor
cwtl
xor
or
add
ja
nop
adc
sbb
cmp
add
lods
outsb
xlat
daa
and
hlt
inc
add
inc
add
add
ret
dec
icebp
add
enter
clc
int3
add
fstps
iret
neg
ss
lods
pop
cmc
test
and
pop
dec
les
and
out
pop
mov
dec
push
and
mov
xlat
jnp
add
ljmp
dec
mov
mov
or
scas
inc
sbb
pushf
cmp
push
add
int3
pop
xor
and
and
test
add
inc
jle
sub
mov
cwtl
sbb
int3
into
adc
jge
mov
fstpt
adc
adc
imul
test
cmp
call
mov
mov
pushf
hlt
dec
pusha
mov
leave
fdivs
add
mov
jecxz
cltd
or
add
int
mov
inc
test
inc
inc
mov
test
cmp
xchg
out
sbb
adc
sub
cmp
xor
add
inc
mov
adc
lahf
mov
cli
pop
lret
dec
push
ficompl
cld
icebp
subb
jbe
mov
aad
or
cs
xchg
fadd
mov
push
int3
sbb
enter
inc
mull
sub
cwtl
push
dec
add
lgs
push
add
xchg
or
xor
push
mov
add
mov
icebp
mov
mov
rcll
insb
mov
push
add
popf
push
adc
sbb
scas
xor
jle
les
sbb
rorb
out
mov
inc
fnstenv
add
and
push
lret
test
cld
in
loopne
push
icebp
scas
movsb
sub
add
xchg
dec
or
pop
adcl
push
or
movsb
push
loop
cwtl
nop
add
and
pop
mov
dec
jbe
sub
test
clc
scas
dec
mov
cwtl
imul
or
jp
dec
andl
adc
and
adc
sbb
repz
dec
or
mov
pop
ja
cld
push
xchg
mov
xor
add
add
adcl
adc
es
movsl
sbb
adc
mov
in
in
inc
or
jecxz
rcll
les
aaa
test
xchg
sbb
xrelease
leave
pushf
cli
sbbb
lret
and
rorb
add
and
fs
pop
adcl
fstpl
fadds
push
rcrl
call
cmp
imul
cwtl
mov
repnz
mov
loop
mov
js
loopne
outsl
mov
repz
fnstcw
pop
or
scas
stos
mov
or
mov
mov
push
xor
jmp
lods
add
inc
fs
mov
stos
add
jno
xor
add
and
mov
push
aas
test
jmp
dec
ret
jo
ljmp
mov
into
cltd
add
jbe
xor
pop
mov
cmp
les
sti
and
mov
lock
add
dec
in
cmp
inc
inc
fadds
jg
add
fwait
cmp
cmp
push
push
pop
lcall
mov
or
push
or
fldcw
stos
dec
popa
add
adc
aas
xchg
dec
adc
add
and
mov
mov
dec
je
pop
push
mov
mov
ss
rcrl
cmp
sub
fs
dec
test
jbe
test
test
fs
adc
movsb
dec
mov
inc
pop
xchg
mov
cwtl
ja
daa
roll
int3
pusha
mov
ja
mov
inc
sbb
cld
sub
dec
addr16
inc
and
adc
test
cwtl
emms
push
inc
cmp
fdiv
in
push
inc
int3
icebp
and
pop
sub
pop
or
addr16
es
test
mov
or
icebp
aam
jbe
mov
xor
mov
jb
rol
cmp
nop
and
jg
cmp
add
sbb
sbb
add
repnz
clc
dec
shrl
sbbl
in
add
xchg
stos
or
xor
repnz
fnstenv
push
rclb
sub
mov
xchg
sbb
and
adc
xchg
aas
mov
cmp
movsl
call
xchg
ror
add
push
adc
sbbl
out
nop
and
cltd
push
xlat
std
mov
xchg
cmp
dec
sub
inc
xor
xor
cwtl
mov
mov
in
xchg
sbb
pop
pop
roll
xor
mov
or
dec
xchg
mov
sub
mov
mov
dec
in
jle
fstps
xorb
or
shlb
ret
add
cmp
sti
mov
add
jnp
adc
aaa
icebp
faddl
nop
cmp
sbb
ss
mov
clc
loope
mov
mov
lcall
adc
jge
pop
lds
cmpb
adc
mov
fdivrl
sub
stos
aad
sbbb
add
mov
mov
adc
jae
jne
and
adc
movsb
cld
dec
dec
lock
ret
xchg
inc
pop
push
adc
fld
and
mov
ret
cmp
lahf
sub
loopne
mov
or
arpl
xchg
dec
aas
add
adc
das
and
aam
rcrb
mov
mov
add
push
addl
and
or
sub
idivl
add
fcoml
adc
lods
cmp
test
lods
mov
dec
stc
mov
pushf
add
sub
jbe
int3
insb
gs
sti
adc
sbb
push
or
mov
hlt
stc
jne
pop
faddl
ret
or
xchg
xor
mov
rcr
mov
sbb
pusha
add
mov
xchg
xchg
add
int
lahf
add
push
jo
jae
add
xlat
test
adc
mov
lea
jecxz
rcrl
popa
xor
push
sub
add
inc
stc
xor
add
repnz
jo
pop
in
pop
adc
pushf
arpl
stos
xor
add
fwait
test
adc
adc
sub
push
mov
adc
daa
xchg
cld
into
adc
cltd
add
lahf
sbb
stos
test
in
das
add
fildll
add
insl
add
push
xor
sbb
mov
add
std
icebp
jecxz
lret
xchg
arpl
rorl
popf
movsb
xor
inc
lahf
in
push
cli
xor
lea
jbe
xchg
push
and
outsl
or
roll
fwait
into
xor
add
adc
or
negb
lds
mov
xor
add
jl
in
jmp
and
jnp
orl
test
inc
ret
rcl
mov
sbb
jle
fdivs
pop
mov
pop
xor
pop
pop
pop
outsl
add
mov
mov
or
push
or
mov
mov
pop
gs
int
adc
cmp
mov
pop
int
mov
jge
or
mov
or
inc
add
roll
pop
add
push
nop
lock
imul
or
sbb
inc
aam
das
push
ret
add
shrb
daa
lods
enter
or
mov
xor
mov
mov
and
xchg
jo
mov
push
push
das
cmp
dec
nop
xor
lret
xlat
je
and
andl
dec
mov
out
cmp
push
insb
xor
clc
pop
sub
pop
cmpsl
cld
out
mov
popa
xor
or
adc
push
mov
popf
insb
ljmp
cltd
xor
ss
dec
pop
lock
inc
inc
push
div
call
add
push
lods
add
jmp
cld
or
pop
xchg
call
dec
das
nop
hlt
mov
lahf
daa
or
lret
roll
int
pop
iret
xchg
insb
subb
gs
add
jno
ss
mov
cmp
stc
add
movsl
jne
cmp
mov
sbbl
cmp
pop
aas
adc
dec
xlat
mov
xchg
mov
sbb
xor
enter
loope
test
or
adcb
popf
sub
push
mov
shrb
adc
insb
push
cmp
adc
inc
pop
sarb
xchg
pusha
ja
sbb
fst
test
push
mov
cli
or
jbe
jle
add
push
xchg
adc
add
sbb
jecxz
pop
push
dec
inc
sub
adc
rcrb
add
xor
sbb
add
adc
movsb
push
inc
and
fldcw
sbb
adc
movsb
mov
mov
pop
push
outsl
push
test
push
sub
popa
lret
fidivrl
shl
xorl
fnstsw
push
lods
or
dec
sti
or
sub
aaa
call
jne
inc
and
nop
or
pop
and
loope
stos
inc
je
mov
cmpb
aam
add
inc
push
mov
call
lods
and
dec
js
mov
int3
and
adc
or
leave
sub
dec
and
mov
cwtl
mov
mov
push
xchg
lock
loopne
add
fwait
jmp
lods
xchg
mov
ja
jge
push
shlb
out
inc
xchg
pop
or
mov
xchg
mov
stos
test
dec
insb
push
push
movsb
add
lods
xchg
fnsave
sub
shr
push
out
mov
adc
mov
mov
add
pop
jbe
cltd
sub
dec
push
push
sarl
jns
mov
push
fsubp
add
adc
repnz
cld
fists
pop
sub
in
mov
add
das
or
mov
inc
add
push
stc
adc
out
adc
lcall
fcoml
sbb
mov
adc
es
xor
jae
and
pop
insl
inc
push
add
xor
orb
dec
mov
in
loope
and
add
incl
push
xor
out
push
adc
xchg
loopne
pusha
int3
pop
jnp
mov
push
push
stc
cli
xor
insb
dec
and
pop
fwait
and
or
pop
xchg
out
cmp
and
xchg
xchg
add
daa
mov
loop
xor
mov
test
and
cmp
xchg
sbb
mov
fdivl
adc
stos
mov
movl
sti
out
mov
mov
or
sti
xchg
add
inc
mov
pop
cmp
sub
int3
test
inc
add
inc
mov
fmuls
sbb
and
ret
cmpsb
push
push
cmp
in
dec
divb
mov
pop
jge
fidivrs
jmp
dec
ss
adc
add
fmuls
sub
push
rolb
xchg
xchg
call
addr16
lds
sub
scas
testb
ret
lods
call
and
cwtl
cmp
xchg
subb
dec
inc
pop
mov
add
fstl
cld
test
xchg
or
mov
mov
movb
push
enter
pop
xchg
rol
xor
add
and
les
jmp
jo
xor
aad
xchg
test
test
popf
shlb
mov
sbb
xor
stos
mov
mov
xor
sbb
cmp
mov
or
mov
xlat
cmp
add
add
and
outsl
fidivl
test
xor
mov
inc
pop
shl
or
gs
pusha
jae
jnp
add
dec
imul
sub
test
in
pop
fisubl
adc
push
and
into
pop
xor
ss
sarl
shrb
xchg
int
fcompl
scas
add
push
loop
dec
insl
mov
adc
orb
in
incb
add
cmp
add
lret
lahf
and
add
out
push
pop
in
lds
stos
fwait
cwtl
mov
cmp
pusha
aam
pushf
mov
mov
cmp
cmp
sbb
push
jmp
stos
dec
rorl
and
xchg
mov
inc
xor
add
mov
cld
pop
lods
dec
hlt
std
add
lahf
fbld
lods
add
testl
sbbb
test
jecxz
add
mov
je
add
out
mov
adc
push
stos
inc
add
push
and
cmp
nop
cmp
repz
cmp
jbe
push
sbb
cltd
js
sti
lock
add
inc
icebp
out
mov
pop
pop
dec
xor
sbb
mov
pop
test
dec
xchg
add
hlt
add
scas
adc
scas
add
mov
add
mov
jbe
popa
loopne
cmp
mov
sahf
rcl
adc
mov
cmp
add
and
mov
xchg
ds
mov
or
pusha
and
sahf
pop
mov
mov
aaa
push
xchg
and
nop
pop
mov
cwtl
mov
inc
add
stos
or
or
adc
cmp
mov
mov
andl
and
roll
pop
aaa
stc
lcall
popf
inc
xor
xor
pop
adc
mov
add
lods
jg
lcall
add
push
int3
cmp
outsb
rclb
iret
push
test
sub
fsubrp
add
sbb
out
stos
jns
sbb
movsl
mov
aaa
ficoml
mov
push
push
adc
xchg
sbb
fadd
or
mov
adc
pop
shll
push
add
mov
sbb
adc
enter
cmp
loop
jne
insb
mov
push
and
pop
int3
jg
je
aaa
movsb
daa
add
jp
dec
adc
imul
add
inc
sub
mov
pusha
sub
dec
into
mov
enter
mov
lods
aaa
mov
sub
sbb
mov
sti
dec
fsubrs
in
inc
jp
add
xorl
pop
add
arpl
or
mov
mov
stos
push
out
lods
add
ror
add
fwait
les
pop
pushaw
xor
inc
mov
jns
jl
es
xor
loopne
addl
add
or
or
insb
xor
subb
jmp
rclb
dec
aam
adc
ret
adc
pusha
or
pop
xchg
andb
mov
push
fwait
add
add
jbe
add
lods
icebp
stc
push
inc
nop
je
repnz
pop
popf
es
and
sub
lods
adc
sbbl
je
add
adc
xchg
cmp
jne
or
pop
or
xchg
jnp
in
pop
scas
add
pop
sbb
das
dec
jnp
adc
xchg
test
add
add
xor
sti
adc
xchg
ret
mov
xor
jmp
lea
lods
sahf
ret
cmp
js
and
sub
or
xor
add
dec
inc
out
jae
shrb
push
cmpl
subb
mov
test
mov
adc
mov
mov
movb
das
push
insb
jl
add
mov
lret
pop
fs
adc
ds
sarb
add
movsb
inc
sub
pusha
dec
pop
call
or
push
or
jg
cmc
stos
loopne
sub
xlat
out
test
sbb
push
push
inc
pop
mov
jns
push
jo
xchg
push
adc
xchg
sarb
fdivrl
ss
subl
loop
pop
add
sahf
xchg
lcall
dec
hlt
call
jmp
add
outsb
inc
cmpsb
lret
add
cwtl
inc
inc
xchg
add
push
stos
fnstcw
or
xor
adc
fldl
test
fldenv
mov
aad
sub
add
out
xor
jp
fcmovnbe
nop
hlt
jecxz
jl
mov
inc
test
add
xor
out
sbbl
pop
insl
pop
dec
mov
jecxz
data16
aam
lods
subb
clc
adc
pop
xchg
test
ret
and
call
or
sti
shlb
scas
add
push
imul
and
cmp
xchg
add
popa
pop
dec
xor
xchg
lds
mov
decb
adc
add
int
mov
mov
jae
movzwl
fdivrs
or
add
adc
push
add
cmp
leave
gs
inc
push
jecxz
aas
mov
adc
stc
movsb
jb
adc
sub
or
aas
les
jbe
loop
in
cmp
add
xor
push
jae
loop
in
in
pop
shl
cld
and
loop
xor
inc
dec
cmp
cmp
sub
hlt
adc
add
lds
xor
sub
iret
pushf
lods
stos
lea
bound
sub
loope
mov
int
addr16
ror
cmp
and
pop
filds
repnz
jbe
sbb
lcall
adc
push
mov
shlb
clc
rorl
test
jno
enter
xor
or
push
lea
fldenv
lock
push
and
adcb
add
dec
pop
jle
cmp
mov
add
insb
lret
mov
and
mov
sub
pop
std
out
lcall
or
pushf
lret
ja
jmp
mov
adc
mov
testl
xchg
aam
push
push
insl
add
or
pop
stc
cmp
enter
cwtl
add
push
add
sub
mov
mov
dec
dec
add
adc
inc
xor
popa
mov
inc
add
xor
rolb
push
or
rolb
aam
cmp
lret
push
test
call
dec
roll
add
pop
std
xchg
out
inc
xchg
pop
movsl
push
add
mov
outsb
jg
and
je
rcr
lea
lahf
movsl
hlt
xchg
rcrb
xchg
pop
jo
jbe
add
dec
pop
popf
sub
arpl
adc
xchg
movsb
mov
push
call
adc
push
add
dec
cs
inc
sbb
push
fmuls
das
ret
call
cmp
loop
xor
jns
mov
out
fcom
mov
lods
inc
mov
stc
mov
add
gs
mov
adc
in
call
adc
adc
cmp
das
mov
add
lods
iret
in
daa
sbb
add
lods
pop
push
push
push
dec
sub
mov
popa
je
and
jg
movsl
test
pop
std
lds
adc
pusha
push
pop
lahf
push
add
cld
cmp
aad
inc
add
pop
bound
and
lock
mov
clc
sub
cmp
setae
push
in
andb
jmp
ljmp
jle
cmpsb
lods
and
and
pop
movb
xchg
xchg
adc
sbb
add
push
xor
gs
mov
mov
pop
xchg
xchg
or
and
adc
add
pop
sub
bound
add
scas
loopne
add
cwtl
popa
outsb
mov
mov
add
adc
or
hlt
dec
inc
xchg
xor
mov
imul
insb
test
sub
mov
fldt
sti
mov
gs
loopne
fwait
in
movsl
adc
scas
cmp
or
ret
jb
add
imul
scas
cmp
jbe
jge
inc
stc
add
xchg
rcrl
add
xor
pushf
pushf
inc
mov
mov
mov
pop
add
sub
mov
hlt
xchg
enter
fidivrs
xchg
inc
mov
mov
cmp
mov
mov
iret
add
push
mov
add
test
pop
dec
ljmp
adcb
fistps
fs
lods
jmpw
pusha
shll
stos
cmp
out
out
das
mov
add
aam
fcoml
int
push
xor
adc
scas
fs
or
jmp
or
out
test
inc
adc
cmp
out
jbe
add
sbb
mov
xchg
loop
mov
inc
nop
shrl
nop
mov
sbb
fdivrs
dec
enter
xchg
mov
flds
add
mov
test
inc
leave
cwtl
pusha
push
gs
jle
loope
mov
insl
inc
adc
mov
pop
cld
and
xor
mov
fmulp
push
or
hlt
pop
mov
pop
nop
loopne
and
adc
lret
insl
cltd
jno
push
cld
push
xor
data16
lods
mov
xor
lock
sbbl
call
cwtl
and
mov
inc
pop
lock
and
hlt
or
outsl
cltd
mov
add
adc
ret
xchg
test
fstps
idivb
fcoms
ss
add
imulb
or
dec
mov
or
pop
daa
push
cwtl
mov
cmp
sbbl
sub
lods
in
inc
adcb
add
cmc
outsl
push
dec
mov
add
xchg
shll
in
aas
hlt
or
enter
adc
sub
xchg
lods
out
inc
inc
inc
jecxz
pop
add
fists
fwait
jae
pop
pop
mov
sub
icebp
mov
data16
or
shrb
lret
add
dec
mov
mov
xor
fwait
push
or
add
das
aam
dec
lods
mov
jmp
xor
pop
call
mov
scas
xor
fnstsw
or
stos
cmp
add
push
xor
mov
dec
mov
add
jb
mov
adc
pop
xor
enter
pop
scas
mov
aaa
cwtl
das
and
xchg
and
add
jno
in
mov
out
shrb
xor
dec
sbb
or
scas
rolb
mov
or
test
dec
in
loopne
out
lds
test
xchg
popf
mov
cmp
movsb
loope
xor
jne
nop
mov
lock
adc
orl
adc
push
imul
lahf
mov
data16
adc
shll
jo
mov
cmp
js
stos
andb
add
inc
xchg
jo
xchg
add
mov
fs
int3
pop
or
mov
leave
cld
dec
cmp
add
cmpsl
out
insl
jmp
sbb
mov
les
xor
add
push
xor
pop
out
xchg
or
sbb
adc
mov
lock
xchg
inc
cmp
inc
or
xchg
inc
adc
xchg
cmp
sbb
add
mov
jo
sub
jns
loop
adc
mov
in
lods
loopne
lods
in
dec
fwait
in
nop
adc
pop
inc
ret
pusha
enter
sub
mov
add
add
cs
mov
add
orb
adc
xchg
ljmp
push
repz
call
lea
arpl
sbb
dec
mov
rolb
repnz
add
and
mov
stos
push
and
sbb
and
imul
jl
lahf
fstps
inc
lods
push
jne
rolb
in
and
pop
cwtl
negb
cs
and
add
sarb
and
pop
mov
push
mov
addb
nop
and
mov
cld
dec
mov
pop
ljmp
mov
pop
pop
lret
mov
cmp
lds
cld
or
and
jle
loop
and
xor
jecxz
sbb
sub
add
push
add
mov
and
enter
decl
rolb
add
push
ret
cwtl
mov
pop
iret
add
pushf
loop
bound
popa
add
add
lcall
or
xor
or
aad
jecxz
insb
int3
hlt
add
pop
or
xchg
mov
in
lret
dec
cld
cmpl
sbb
or
push
dec
js
cmp
mov
rcll
fisttpl
cwtl
pusha
jecxz
pop
rorl
xchg
leave
lods
daa
mov
mov
jb
cmp
jbe
xchg
lahf
mov
cmpsl
fcoms
or
hlt
xorb
mov
add
push
psubusb
jg,pt
push
inc
lret
cmp
adc
loope
ret
jl
cltd
icebp
dec
xor
std
add
mov
mov
xor
jne
cwtl
mov
mov
fidivrs
add
aad
push
jo
jns
mov
mov
push
mov
adc
nop
or
push
push
mov
lods
or
lcall
and
inc
jmp
les
inc
or
jno
mov
or
dec
insl
sub
dec
je
loop
cmp
add
push
adc
add
imul
dec
add
nop
mov
push
mov
inc
loop
xor
and
dec
mov
repnz
add
movsl
stos
push
addb
inc
fmul
gs
js
mov
jo
scas
nop
int3
inc
inc
add
ret
leave
imul
sahf
jne
xor
inc
stos
lds
jo
in
nop
inc
ljmp
pop
sbb
sbb
call
jbe
pop
inc
jge
push
and
cli
sub
pop
adc
and
add
mov
hlt
aaa
xor
mov
ljmp
jecxz
xlat
pop
loop
imul
xchg
out
in
fstl
pop
lods
add
shrl
movl
xchg
and
adc
into
loop
pop
push
and
mov
xchg
test
ljmp
cwtl
jo
xor
pop
das
outsb
mov
scas
lret
in
sub
sub
mov
push
cld
push
fcoml
aas
subb
adc
and
mov
ja
cmp
ficompl
stos
bound
call
gs
or
or
push
subb
lret
fdivs
lods
xor
and
and
dec
xor
pop
adcl
adc
inc
or
and
loope
jo
pop
inc
cltd
and
push
pop
cmpsl
cmpb
sub
mov
std
sub
or
xor
into
and
subb
mov
adc
xorl
das
add
inc
jmp
mov
jmp
orl
lods
sbb
xor
jp
xor
inc
sub
push
loope
inc
pop
or
aam
jmp
and
xor
aad
movb
xchg
lds
popf
push
mov
adc
mov
jno
push
cmp
addr16
push
insb
mov
jl
loopne
xchg
sti
inc
or
shrb
mov
fs
jbe
stos
pop
dec
sub
cld
xchg
aad
mov
cltd
cmc
sub
inc
stc
mov
adc
negl
leave
out
loopne
inc
fcmovnbe
pop
daa
repnz
in
add
adc
fsubl
hlt
lret
es
and
add
jmp
mov
lods
push
push
packuswb
jge
cld
push
xchg
std
test
shlb
sub
dec
and
call
stos
and
outsb
out
add
aam
loope
xor
inc
adc
mov
xchg
dec
addb
add
mov
into
sub
mov
mov
dec
dec
xchg
dec
enter
add
wrmsr
mov
repnz
clc
add
sub
fucomi
jl
add
mov
or
add
pop
fdivrl
push
xchg
andb
mov
nop
add
mov
out
insb
mov
add
andl
gs
lahf
xchg
and
sbb
pop
mov
mov
enter
cltd
lahf
jns
out
mov
xchg
mov
gs
aad
push
mov
inc
lock
jo
dec
mov
adc
add
js
shrb
fs
jae
hlt
ljmp
sub
shl
and
sub
call
push
rorb
add
sbb
adc
nop
jl
daa
lods
adc
pop
fs
leave
gs
push
stc
cmpsl
adc
rorl
add
add
dec
xchg
ds
mov
pop
xchg
mov
hlt
enter
ret
or
lcall
enter
je
cmp
movsb
dec
dec
xlat
adc
clc
nop
rorb
adcl
icebp
sti
mov
movsb
cwtl
aad
jmp
dec
inc
add
mov
and
cmpb
shr
push
and
mov
inc
mov
push
pop
dec
mov
fwait
add
js
ja
add
xchg
mov
ja
les
and
push
add
popa
xlat
xor
cmp
xchg
cmp
dec
mov
movsb
or
xchg
push
ret
dec
stos
inc
inc
dec
data16
call
jecxz
cld
and
xchg
mov
ret
jbe
push
jl
cmp
hlt
sarb
out
cmp
orl
add
mov
fmulp
add
out
int3
cs
aam
add
scas
rcrb
add
dec
popf
dec
lcall
xor
pop
aaa
add
pushf
stc
and
xchg
shrb
dec
mov
shlb
add
jmp
in
jl
xorb
test
xor
jnp
push
sub
and
pop
dec
lods
xor
xor
cld
test
shll
aam
fdivr
lods
add
adc
ljmp
subl
daa
cli
inc
movsb
pop
adc
push
mov
xor
inc
dec
adc
enter
mov
xchg
movsb
shrb
in
lahf
push
fsubp
iret
fwait
cmpsl
add
pop
push
lret
aad
cvtpi2ps
mov
enter
mov
and
pop
out
scas
leave
jns
pop
jbe
pop
sbb
xadd
fbld
xor
scas
mov
sub
cmp
and
inc
mov
xor
fiadds
repnz
pop
push
jl
adcb
mov
push
or
and
rcrl
subl
or
ror
xchg
sub
xchg
fsubs
sbb
aaa
ds
repz
call
js
lods
dec
out
add
lds
fsubs
je
in
or
insl
mov
push
cmp
fstpt
and
adc
mov
loopne
add
pop
leave
bswap
cld
clc
add
lods
push
jmp
mov
add
xacquire
das
lods
movsl
xor
jbe
repnz
rolb
fmul
out
daa
mov
cwtl
stos
aam
mov
clc
dec
jns
mov
sar
out
sub
pop
fsubrl
or
je
mov
dec
add
pushf
scas
cmp
mov
sub
push
pusha
inc
pushf
cli
jp
push
sub
dec
iret
popa
scas
lock
pop
mov
ljmp
pop
sbb
adc
mov
lods
sbbl
xchg
iret
sub
jl
dec
mov
add
test
xor
sbbb
aas
and
sysret
sub
and
dec
mov
xorl
dec
nopl
call
addr16
add
xchg
pusha
js
aad
inc
pop
jne
mov
add
loope
xchg
addb
add
jg
add
jns
cmpsb
out
add
sub
add
mov
jecxz
leave
icebp
adc
add
pop
add
xchg
mov
cmp
sub
sbb
sti
adc
push
clc
jmp
stc
add
inc
push
insb
mov
sub
mov
inc
add
add
stos
into
dec
lahf
shlb
pop
jo
cmpsl
clc
jg
xor
push
dec
stos
push
pop
mov
test
inc
adc
movsl
add
mov
mov
test
pushf
or
xchg
or
mov
mov
inc
imul
test
cmp
popa
sub
mov
adc
push
mov
xchg
mov
sub
lcall
mov
stos
jae
movsb
fs
aam
lods
and
add
cld
jne
pop
test
cmpxchg
xchg
das
sub
mov
lret
adc
xchg
jae
add
int3
stc
add
sub
mov
pop
loopne
test
imul
xor
enter
jl
and
mov
repnz
adc
jecxz
daa
test
shl
les
dec
xchg
and
cld
inc
ljmp
int
cli
ror
les
jb
add
test
or
adcl
inc
test
or
hlt
or
sub
push
adc
cld
push
cli
push
dec
xchg
mov
pop
fldl
nop
dec
data16
nop
les
add
xchg
incl
dec
push
add
push
sub
sbbb
add
push
sub
test
movsb
in
andl
js
mov
add
push
mov
or
pop
fisubs
js
adc
or
rol
test
pop
push
sbb
pop
adc
or
frstor
in
popa
add
nop
mov
lret
dec
and
xchg
sbb
shlb
push
xor
adc
arpl
sti
push
sbb
or
hlt
push
jo
cvttps2pi
xor
dec
adc
lea
mov
out
cmc
push
cmp
push
xor
mov
ljmp
add
cmp
lcall
test
sub
ret
mov
into
adc
add
fs
sbb
add
xor
xor
jns
iret
and
jo
stos
add
xchg
add
inc
mov
popf
clc
dec
stc
lods
cld
js
icebp
in
aaa
cmp
or
and
movsl
mov
push
sub
cmpsb
add
test
out
aad
jge
sbb
adc
rclb
xchg
and
femms
or
jmp
xchg
jb
xor
add
lahf
nop
hlt
mov
mov
icebp
rolb
lock
and
add
push
cltd
das
les
cmp
or
bound
push
pop
pop
push
ljmp
outsb
adc
nop
push
adc
pop
lock
pop
sub
loopne
mov
stc
push
leave
xor
dec
sbb
into
jle
sbb
stos
mov
add
shll
sahf
das
add
mov
aas
sti
bnd
xor
daa
push
pusha
jle
dec
stos
pop
sarl
inc
push
jg
das
dec
data16
stc
shrb
cli
adc
push
sbb
pop
int3
test
popl
lock
nop
cmp
pop
cmp
aaa
dec
in
fwait
loop
gs
test
or
xor
push
and
sarl
inc
orb
in
sarb
pop
rcrb
cltd
pop
clc
shlb
xchg
add
lock
addr16
cmp
xchg
and
iret
mov
adc
cwtl
and
dec
sub
hlt
gs
scas
aad
fmuls
fsubs
and
and
or
insl
adc
sbbb
inc
or
jne
or
sub
fnsave
push
push
dec
arpl
mov
xor
xchg
lods
jo
push
xchg
adc
in
paddsb
addb
popa
xchg
jmp
lods
xor
pop
int
shlb
ret
ja
dec
into
add
nop
push
jg
add
push
jns
int
push
push
dec
pop
xchg
aad
enter
jbe
adcb
icebp
or
or
stc
push
add
es
leave
add
scas
push
ret
add
jl
and
dec
mov
fsubl
add
aaa
mov
mov
flds
data16
or
or
push
adc
jae
add
arpl
xchg
mov
dec
popa
clc
or
mov
mov
cmp
xor
pop
xchg
lds
add
dec
dec
mov
or
xchg
mov
clc
push
and
add
xor
sub
in
dec
aad
in
jge
add
fadds
and
mov
mov
adc
and
sti
ja
clc
int3
xchg
sub
in
add
and
mov
cld
gs
mov
dec
mov
xchg
test
pop
xchg
inc
nop
addl
push
fsubrl
mov
pop
adc
ja
inc
xor
add
mov
loope
sub
pushf
xchg
adc
inc
xor
sub
movsb
lock
stc
and
mov
insb
cmpb
xchg
push
adc
add
sbb
jae
lcall
es
in
inc
lret
sti
clc
std
xchg
rorb
in
jmp
scas
pop
adc
cmc
out
add
rol
movl
jg
or
adc
push
test
mov
or
lret
sbb
mov
loopne
out
inc
adc
int3
jb
mov
loope
sbb
dec
add
adc
mov
cmp
iret
pop
dec
fildll
inc
outsb
sub
testl
cmc
and
add
call
sarb
or
or
movsb
add
xchg
xor
lret
fcoml
xchg
imul
dec
pop
nop
add
lcall
add
sbb
scas
jno
lods
fcomps
push
mov
shll
push
jge
and
pushf
cmp
insl
adc
fidivl
pop
lcall
mov
push
ja
rcrb
xchg
mov
mov
test
cmp
bound
pop
xchg
outsb
lods
add
insb
push
sbb
pop
inc
cmpsb
and
cmova
and
ss
aaa
or
jg
inc
sub
pop
mov
ror
not
or
sti
add
insb
mov
mov
xor
enter
shrl
sahf
pop
loope
out
ret
test
ret
fisttps
loopne
mov
sbb
jge
add
dec
stos
mov
and
shlb
int
xlat
das
fsubrl
or
inc
cmp
dec
and
sarl
cmp
ja
sahf
movsl
mov
lcall
mov
adc
pop
popa
cmp
fsubrs
enter
ror
sbbb
sub
add
jecxz
cltd
add
inc
lea
cmpb
add
test
mov
mov
repnz
pop
test
in
xchg
pop
xchg
adc
outsl
test
cwtl
mov
xchg
lods
cmpsb
push
lret
lahf
add
push
pop
and
aad
jne
loop
mov
ljmp
mov
dec
rclb
inc
pop
shrb
lret
sbb
cltd
mov
fwait
xchg
ret
xorb
leave
ficompl
int3
movd
shlb
xchg
cmp
fsts
sbb
loopne
add
nop
and
sbb
xor
xor
aaa
adc
add
pop
movsb
clc
xchg
add
stc
cmp
mov
adc
fs
or
sbb
adc
in
bound
push
push
xlat
add
add
xor
roll
push
bound
mov
ds
loop
adc
add
mov
test
push
les
jno
in
add
sub
sbb
sub
jecxz
xchg
sti
in
dec
mov
push
ja
add
inc
dec
stos
lret
xor
add
mov
cmp
pop
popa
rcrb
enter
push
add
in
leave
clc
addr16
faddl
insl
cmp
xorb
mov
test
cli
sbb
push
xor
mov
add
in
sbbb
add
jo
fisubs
inc
xchg
add
xor
sbb
loopne
dec
cmp
add
or
and
cmpl
je
add
inc
aam
popl
pop
ret
push
and
add
sbb
outsb
scas
lods
stc
add
mov
iret
loop
mov
pushf
fstps
aam
dec
add
xor
std
lret
loopne
inc
mov
pop
out
orl
es
lock
and
xlat
pushf
mov
push
aas
push
loop
fs
shlb
add
push
loope
sbbl
jmp
mov
push
mov
mov
pop
sub
jle
jecxz
pop
clc
and
adc
adc
sub
dec
cmp
cmpsl
fstpl
movups
mov
faddl
mov
add
int
push
loopne
mov
or
sbbl
data16
adc
mov
mov
pop
iret
hlt
int
mov
add
dec
ret
add
test
fldcw
sahf
fmull
push
pusha
dec
adc
sub
inc
add
int3
push
test
xor
push
ret
add
fisttpl
mov
add
in
out
repz
add
cmp
mov
clc
int3
add
push
jp
sub
jecxz
pushf
xchg
mov
sahf
and
dec
and
dec
mov
inc
and
adc
rcr
andb
add
ror
lock
incb
int3
or
test
pop
std
aas
movsl
mov
lods
arpl
cmp
xor
mov
add
mov
mov
inc
dec
ret
xchg
mov
arpl
inc
pusha
push
mov
xor
popa
insl
mov
or
fadd
roll
inc
mov
in
and
sti
dec
jo
and
dec
je
pushf
pop
movsl
lock
or
push
mov
sbbb
xor
pop
xchg
add
stos
pop
sahf
aad
add
mov
arpl
jbe
xorb
push
pmaxsw
or
push
loop
dec
add
cmp
lock
cmpsb
and
lret
add
add
sti
rcll
mov
addl
rcrb
adc
std
add
pop
pop
mov
jg
sub
rcll
mov
sbb
adc
and
add
es
add
lahf
fimuls
aam
and
or
push
jae
loopne
add
pop
mov
in
sbb
inc
push
add
xor
add
fstp
jo
cmp
nop
jl
les
outsb
xlat
pop
mov
xor
or
fdivl
pushf
xchg
pop
cmp
xchg
sbbb
sti
imull
jp
cmpsb
inc
insb
push
mov
pop
dec
cmp
lret
or
sbb
and
add
aaa
pop
or
xchg
push
test
int3
mov
add
cmovl
ljmp
lds
pop
push
ret
enter
add
mov
jo
imul
in
add
insb
pop
xor
sub
sub
inc
int3
addb
push
or
add
sub
xchg
rcrl
cmp
xor
ret
jo
add
inc
push
push
dec
data16
sub
add
dec
push
push
or
fcoms
sub
or
fxch
divb
add
mov
push
sti
stc
mov
push
adc
loopne
sub
inc
inc
je
js
cld
jmp
sub
pop
adc
push
cmp
add
outsl
mov
aam
xor
ret
cltd
popa
loopne
jl
mov
and
lock
add
fdivrp
aam
int3
sbb
test
add
lret
mov
lock
fnstsw
or
mov
nop
lcall
dec
xchg
test
movb
pop
dec
jne
push
ret
dec
cmp
mov
andb
mov
pop
movb
daa
add
sbb
sbb
cwtl
pop
adc
cmp
je
jmp
xchg
cmp
rcll
push
add
jle
pminsw
test
xor
jb
addl
cmc
push
jg
idivb
dec
add
repz
sbb
and
push
cwtl
cmp
loopne
imul
cmpsl
daa
leave
xor
add
sbb
sbb
or
sub
faddl
out
pop
xchg
xchg
sub
mull
mov
cmp
xor
andb
xchg
jo
pop
shll
popa
or
push
jmp
cmp
lret
stc
add
lds
roll
jo
or
int3
jp
and
and
or
jmp
cmp
test
add
mov
pop
add
pop
mov
cmp
sub
loopne
shl
bound
adc
loopne
mov
out
add
cmpsl
loop
lock
jmp
repz
pop
rcr
pusha
sbb
rolb
mov
daa
jmp
cs
aas
sbb
scas
mov
aad
add
pop
add
jp
inc
add
test
add
movsb
mov
and
mov
and
sub
lret
pop
arpl
inc
insb
sbb
push
adc
movb
adc
iret
sub
movups
jns
inc
add
out
mov
cmp
lret
sbb
xlat
rorl
pop
push
xchg
cmpb
testb
xchg
inc
pop
lds
orb
lock
push
add
call
pop
fldl
cmp
adc
ret
stos
mov
mov
jg
push
enter
cmp
popl
xchg
mov
xchg
test
lods
jecxz
addl
enter
or
clc
cli
add
sarb
bound
mull
xchg
push
or
pop
pop
adc
and
clc
addr16
push
iret
mov
mov
lret
jnp
out
jmp
orb
mov
sbb
add
sub
int
in
mov
cmp
call
in
stos
mov
sub
clc
add
mov
push
sub
ljmp
orb
mov
sbb
movb
sti
and
add
mov
adc
int3
rclb
add
repnz
les
pop
add
shlb
int3
dec
incb
push
sub
xor
pop
inc
mov
cli
mov
xchg
add
and
adc
cmp
pop
dec
mov
sbbb
mov
cmc
rcl
das
ds
jle
hlt
mov
xchg
mov
pop
mov
add
mov
enter
sbb
jecxz
xchg
je
and
cmovp
xchg
add
loope
cmp
mov
ljmp
push
inc
add
xchg
inc
mov
add
mov
roll
out
repz
sbb
pop
test
push
imul
pop
frstor
hlt
icebp
mov
add
jmp
js
jle
add
rorl
ja
add
test
xor
add
push
movsb
mov
xchg
add
lea
scas
aaa
add
shl
insl
imul
add
cwtl
xor
ds
loopne
ss
je
lods
cli
popf
es
scas
leave
adc
xchg
xor
neg
in
cltd
lret
add
inc
out
ss
lea
int
cmpsb
dec
jns
jle
and
fildl
out
lods
and
push
adc
popa
in
push
shlb
pop
shr
movsb
xchg
mov
loopne
iret
clc
add
adc
sti
push
inc
pop
xchg
xchg
shl
stos
mov
mov
cmp
test
or
outsb
and
cs
mov
fs
mov
dec
xor
xchg
mov
out
sub
dec
jns
add
push
dec
outsb
loop,pt
clc
jo
cs
cmp
iret
lret
test
sarb
pop
jae
dec
jno
iret
rorl
int3
jg
sub
jle
mov
movl
rcr
mov
rcrb
int3
pop
xchg
or
outsl
or
mov
or
inc
push
xor
adc
pusha
sub
add
cmc
sahf
clc
in
popa
rclb
fbld
lret
ss
pop
cmp
and
rcrb
add
loopne
mov
add
add
cmovns
pop
lahf
cmp
push
ds
es
inc
adc
fcmovnu
sbb
jmp
mov
xchg
scas
outsb
loop
push
mov
push
rdmsr
out
add
stos
and
inc
sbb
push
or
adc
sarb
popf
add
adc
push
insb
inc
ja
pushf
out
jmp
add
dec
xor
or
inc
les
add
cs
icebp
xchg
dec
mov
mov
insb
ja
push
adcl
dec
xor
xacquire
in
add
jnp
mov
pop
push
add
aaa
mov
sub
and
sbb
dec
dec
outsb
xchg
test
add
cmp
inc
lea
icebp
add
cmp
arpl
fistps
aam
sti
add
inc
jns
pop
insb
add
adc
cmp
imulb
ds
cmp
adc
add
adc
sbb
adc
clc
cmpsl
roll
push
or
and
lock
mov
std
cmp
subb
pop
add
jb
xchg
lcall
xchg
ljmp
dec
aaa
lods
in
push
cmp
xor
sub
add
sbbl
rolb
dec
mov
fisubrs
add
pusha
ds
xorb
jmp
fs
jle
jp
mov
test
mov
push
and
add
cmp
xor
lahf
add
xchg
dec
stc
xchg
lock
adc
push
mov
loop
dec
inc
pop
stc
and
sbb
jno
xchg
xchg
xor
call
inc
jp
jo
jmp
push
sub
inc
push
in
xor
out
mov
in
add
or
pop
jns
pusha
outsb
sub
xor
adc
roll
stos
cmpsl
dec
mov
shll
jl
pop
adc
add
mov
cmp
pop
and
fsubs
mov
jno
mov
pushf
push
pusha
or
sahf
cltd
orl
xchg
call
sbb
and
add
sbb
pop
add
cmpsb
push
jae
test
jne
inc
daa
dec
jge
add
sub
clc
mov
xor
cmp
or
pop
es
add
mov
pop
test
jns
in
cmp
pop
data16
adc
mov
mov
jge
add
enter
xchg
mov
fsubs
jp
jns
ret
jnp
mov
push
test
or
push
push
cmp
test
ds
aad
jmp
jg
enter
test
add
pop
xchg
add
xor
movsb
push
cmp
push
cld
inc
add
enter
popf
sbb
adc
xchg
mov
dec
mov
add
in
mov
scas
add
mov
repnz
adc
xor
fildl
stos
scas
ret
in
test
add
mov
sahf
jo
mov
push
sti
pop
test
fld
lds
jmp
push
sbb
loope
imul
daa
add
outsl
in
call
pop
or
testl
fiadds
add
pop
fdivl
mulb
add
dec
roll
cmp
jg
testb
mov
ds
sbb
jg
loopne
add
testb
xchg
add
addr16
mov
and
or
test
loop
jge
xor
dec
mov
sub
add
in
xor
push
mov
fsubrl
scas
rcrl
inc
add
add
sub
add
add
mov
into
lods
into
cmp
stos
add
xchg
fs
or
popa
std
add
ljmp
inc
sahf
mov
sbb
scas
inc
shrb
add
mov
rcl
fs
repz
call
mov
aas
orb
pop
cld
test
pusha
lahf
xchg
sarb
cwtl
cld
xor
sbb
gs
or
sub
test
rolb
xlat
pop
pop
mov
jecxz
lcall
cmp
gs
mov
lea
lods
aad
inc
xchg
jo
pop
xchg
add
popf
ljmp
jne
jge
lahf
ret
test
or
sbb
mov
js
dec
add
mov
add
add
sbbl
lock
adcb
add
dec
shll
lret
test
jns
pop
xor
out
mov
shlb
leave
add
pop
cwtl
jnp
add
jecxz,pn
pop
xchg
dec
lahf
mov
mov
lret
mov
add
adc
mov
insb
pop
add
pop
or
push
roll
mov
add
jbe
ss
lret
adc
pop
cmp
jmp
in
aaa
xchg
mov
test
enter
push
dec
mov
shlb
pop
mov
jp
rclb
aam
push
add
daa
lret
sbb
shrl
fidivs
add
aad
dec
js
orl
addb
add
sub
mov
xor
int3
or
xor
rolb
cld
aad
push
jne
inc
jbe
sub
xor
push
in
add
pop
std
cmp
int3
shlb
fdiv
add
cmp
pop
loopne
push
mov
sahf
in
inc
cmp
cmp
add
xchg
sbb
lea
enter
fldt
adc
rcrl
xor
sub
mov
push
mov
sub
jle
testb
mov
xor
ucomiss
sub
or
cmpb
add
ljmp
enter
gs
push
sti
ja
js
fdivrs
push
hlt
and
fsubrl
sbb
je
scas
push
and
jb
js
add
and
sub
add
pop
stos
sarb
sbb
cld
add
jne
mov
add
jnp
shlb
ds
jns
push
cmpsl
adc
sbb
jmp
jmp
push
in
pop
hlt
cld
mov
push
out
push
jge
add
testb
pop
xor
dec
iret
add
in
jle
xor
pushf
in
stc
rclb
add
addl
mov
jo
add
mov
mov
and
jns
dec
cmp
imul
es
mov
pop
inc
xor
insb
sub
fdivl
cmpb
adc
sub
add
xchg
mov
mov
stos
inc
add
sub
sti
or
jl
and
pop
push
push
cmp
bound
das
push
addb
scas
lods
mov
pushf
js
ficomps
test
arpl
ljmp
sub
and
imul
xchg
test
add
les
and
test
sbb
xor
lods
mov
out
subl
enter
jbe
rcll
xchg
or
jle
mov
shll
mov
dec
pop
cld
xor
fs
and
addb
add
xchg
fs
sbb
incl
dec
cld
ljmp
fiaddl
jne
cmp
pop
add
mov
or
into
jns
ret
add
outsl
int3
call
mov
mov
sub
xchg
add
enter
cmpb
sub
cmpsb
jge
nop
rolb
mov
pop
daa
jno
fistl
int
add
sub
call
xchg
out
jecxz
mov
dec
sbb
jo
mov
adc
sub
jecxz
mov
jbe
mov
test
enter
test
sbb
mov
insl
hlt
shlb
or
mov
cld
add
stos
cmp
stos
pop
test
and
sbb
fildl
outsb
test
add
loope
nop
mov
xor
call
or
mov
add
sbb
testb
add
xorl
ss
adc
fs
aad
pop
mov
lea
cmp
pop
sbb
neg
cmp
add
in
sbb
inc
mov
movl
add
incl
mov
add
cmovb
in
sub
outsb
mov
loopne
add
inc
lods
lea
mov
sbb
push
xchg
add
pusha
and
add
in
fisttpl
xchg
outsl
and
outsb
cld
push
inc
cmpsb
cmc
add
data16
mov
xor
testb
mov
add
xorb
jbe
add
push
adc
xor
ficomps
jns
push
into
fcompl
inc
cs
add
lcall
cli
scas
cmpl
sub
cltd
rcr
pop
cmp
int
icebp
dec
push
push
mov
sub
jle
jge
bt
jl
sbb
dec
es
movl
xor
jno
add
lea
mov
xor
xor
mov
lahf
mov
pop
xor
out
std
dec
out
add
add
clc
in
icebp
sbb
out
cld
pop
push
add
insl
insb
and
popa
adc
movsl
outsb
or
cmp
inc
add
ja
pop
xchg
add
add
iret
pushf
jae
es
pop
dec
cmpsl
call
push
aaa
addl
or
pusha
imul
or
adc
cmp
jmp
push
or
out
add
xchg
adc
add
repz
mov
clc
movsl
sub
out
inc
call
cmp
cmp
pop
pop
mov
or
and
cmp
add
dec
adc
jmp
or
gs
jno
adc
jne
inc
add
and
pushf
cmp
mov
loopne
and
aad
pop
add
sub
jg
and
jp
jae
pop
cld
cwtl
scas
movsb
call
jo
sub
das
fwait
or
inc
repz
inc
fisttpl
mov
std
xor
xor
add
imul
gs
add
mov
popf
in
das
pop
mov
add
ds
adc
test
cwtl
aas
add
sub
fwait
sarl
in
shlb
mov
lea
and
and
cld
loope
inc
or
and
lahf
pop
adc
loop
cmpsl
imul
pushf
xor
jo
hlt
xchg
imul
sbb
shll
add
scas
rcll
arpl
jb
mov
mov
sbb
sub
mov
cli
or
adc
pop
enter
xor
mov
add
xor
jno
add
pusha
and
dec
add
insb
rcrb
and
cmpsl
sti
movsl
add
mov
pop
push
faddl
pop
sbb
stc
pshufw
xlat
arpl
or
xor
add
mov
xchg
shlb
cmp
je
lea
mov
rclb
xchg
orl
nop
sbb
or
mov
fistpll
cltd
out
outsb
add
fisttpll
adc
test
lods
inc
mov
das
mov
mov
in
mov
out
dec
stos
adcl
mov
dec
rorb
mov
cmpl
sbb
xor
inc
pop
rcr
aas
jl
orb
xchg
fstpl
sbb
jmp
dec
xchg
mov
dec
and
mov
scas
sbb
mov
cmpl
out
jbe
inc
push
add
mov
push
dec
add
jb
push
add
repnz
cs
pop
cmp
add
dec
out
pop
xchg
ror
into
pop
mov
push
push
xor
push
clc
shll
mov
das
call
sahf
enter
daa
in
es
add
push
jne
jb
add
add
out
movsb
test
fwait
push
mov
jle
inc
and
add
ret
mov
sub
jae
or
adc
xor
cmp
sub
jns
pop
adc
or
dec
and
cmpsl
call
mov
xchg
sub
es
pop
shrb
cltd
hlt
mov
aad
filds
mov
lock
lods
xor
pusha
cltd
sub
jno
or
mov
in
imul
or
and
lds
lret
push
dec
les
push
inc
sbb
sub
jno
pushf
movsl
sbb
add
and
outsl
pop
pop
jp
dec
inc
add
mov
mov
int3
jb
pusha
push
call
cmp
loop
xchg
orb
insl
add
and
pop
mov
lret
cli
pop
pop
aas
test
pusha
adc
addr16
jge
or
mov
lret
sub
call
rolb
out
daa
xchg
dec
pop
xchg
xor
or
cmp
aas
fwait
je
call
ret
mov
xchg
jns
test
shrl
mov
push
shlb
add
popa
lret
shll
xchg
subl
and
fdiv
rorb
stos
add
ss
pop
jbe
mov
test
cmp
rol
mov
add
inc
cmp
mov
sbb
cmpsb
mov
add
and
add
sbb
ja
loopne
mov
cld
sbb
xchg
or
mov
cmp
push
cmc
cmp
sbb
sar
lock
add
ret
add
or
insb
add
cmp
pop
mov
icebp
stos
mov
xor
mov
add
stos
xlat
shr
stc
pop
adc
rcrb
add
fcomp
and
pmaxub
cmp
sbb
loope
xchg
ja
rolb
loopne
cmp
add
and
call
into
cmp
lock
pop
or
in
jns
jge
push
add
and
cs
cwtl
mov
add
xor
inc
xchg
inc
or
inc
rolb
sub
clc
add
popf
mov
ret
dec
cld
or
in
std
dec
add
cmp
adc
stos
xchg
jo
stos
cli
cwtl
add
mov
sbb
cmp
orb
mov
add
mov
sbb
add
jno
adc
mov
cmp
loop
add
sub
inc
test
sbb
pusha
xor
dec
mov
ja
mov
test
dec
pop
mov
hlt
sub
xchg
xor
jg
out
xor
mov
jo
aam
add
pop
sub
movsl
les
sub
pop
adc
imul
add
inc
loope
xchg
loopne
sbb
sub
inc
cmp
mov
mov
imul
shll
push
push
dec
test
jne
mov
jmp
sbbb
rorl
pop
lret
add
xchg
and
stos
adc
popf
sbb
sub
jl
mov
jp
sbb
lahf
add
insl
scas
sbbb
rorb
jb
jl
cli
mov
fists
or
pop
mov
mov
mov
ljmp
pop
mov
jne
hlt
shll
pop
je
enter
mulb
lret
pop
cld
add
shl
mov
sub
icebp
test
jecxz,pn
inc
add
fwait
add
daa
pushf
xor
push
rolb
pushf
adc
jg
gs
hlt
pop
in
fwait
jl
pop
mov
push
into
cwtl
pop
add
repnz
pop
mov
nop
leave
int3
add
push
enter
test
inc
sbb
jle
fistl
sbb
lret
cmp
mov
jb
add
imul
add
outsb
push
imul
lock
rclb
cmpsl
xchg
testb
cwtl
sub
nop
movsl
add
lods
imul
imul
mov
leave
sahf
sbb
cmc
insl
lcall
pop
addl
fs
pop
adc
les
sub
lcall
cltd
add
int3
test
test
and
adc
fdiv
fistps
cmp
xchg
and
popa
enter
sbb
xchg
pop
mov
testl
inc
and
sbbb
jmp
xchg
and
push
popf
inc
pop
imul
push
add
xchg
sub
add
xchg
cwtl
iret
adc
cmpsl
aad
in
add
dec
adc
xor
imul
pop
popf
les
cmp
push
and
and
into
repz
and
pop
clc
aad
xor
call
arpl
dec
mov
icebp
call
cmp
pop
test
fldt
xor
dec
pop
adc
add
mov
jp
lret
aaa
inc
call
addb
jl
js
repnz
outsb
cld
inc
out
jmp
jae
xor
xchg
push
stc
out
push
cli
push
xlat
andb
movsb
pop
imul
mov
add
mov
and
imul
ret
in
rcr
jne
adc
jecxz
add
push
jmp
push
adc
dec
adc
add
test
push
dec
icebp
sub
or
seto
add
add
cmc
fisubl
je
add
mov
dec
jge
data16
or
jbe
fdivrs
add
shlb
std
add
or
jge
xor
adc
add
cmpsl
inc
jl
sub
movb
or
or
add
fs
xor
dec
add
out
pop
add
add
add
testb
push
inc
cwtl
in
xlat
inc
inc
lahf
xchg
pusha
insb
pop
sbb
fidivrl
in
jmp
add
sub
aaa
jo
pop
add
inc
dec
jno
cmp
fsincos
mov
aad
out
clc
sub
add
cmp
repnz
lahf
adc
dec
sub
mov
xchg
inc
push
das
jecxz
push
and
mov
adc
insl
sbb
sbb
mov
xchg
add
push
jmp
pop
scas
fiadds
lods
rcl
int3
aad
push
jmp
xor
mov
or
sbb
pushf
sub
ds
inc
fmuls
mov
push
add
or
pop
push
add
inc
lds
xchg
loopne
in
or
subl
xchg
inc
add
xor
cld
lods
dec
sub
jp
pop
in
jae
or
insl
mov
cli
push
inc
or
nop
aad
add
outsb
and
inc
cmp
cmpsl
cmp
hlt
sahf
ret
pop
jne
xchg
or
or
arpl
test
jne
add
in
xor
inc
cmp
add
adc
xchg
mov
mov
mov
push
sbb
push
adc
cmc
pop
add
and
xor
in
xchg
sbb
pop
cltd
cli
add
jle
jae
cmp
sbb
jnp
add
or
sarb
adc
push
sbb
dec
add
push
lods
filds
enter
xor
xchg
out
outsl
mov
lcall
sbb
aad
fmuls
fs
jbe
aam
cmovnp
popf
inc
in
mov
sub
pop
lds
loopne
bound
bnd
mov
push
xor
out
test
push
icebp
add
pop
and
dec
push
mov
jne
lods
inc
call
js
repnz
jg
pop
fwait
mov
ds
aas
lods
out
add
xchg
stc
cld
push
cmp
inc
cmp
push
jo
inc
add
negl
add
mov
cmc
shl
xor
packsswb
aaa
sbb
data16
push
imul
call
movsb
push
aad
mov
out
loope
mov
in
push
nop
xchg
ror
mov
out
test
dec
shlb
pop
cli
loopne
fs
fists
mov
mov
test
outsl
xor
idivb
sahf
incl
push
push
add
push
sbb
nop
adc
roll
xorl
adc
mov
bound
in
repz
pop
sbb
testb
mov
cmp
xor
add
mov
and
fsts
loope
fsubs
add
pop
or
dec
mov
fistl
lock
dec
mov
add
loope
inc
inc
add
cmpsb
add
les
add
xchg
std
jg
mov
pop
lds
push
insl
repnz
jmp
jecxz
push
dec
adc
mov
xchg
arpl
ljmp
add
cltd
cltd
pop
popf
pushf
add
daa
orl
mov
filds
mov
in
popa
sbbb
dec
mov
lds
psrlw
mov
scas
adc
fimuls
mov
xor
rcrl
jne
subb
inc
ret
and
int
roll
std
mov
mov
xor
push
aaa
add
or
aas
dec
inc
xor
pop
push
cwtl
out
add
push
dec
cmpb
pop
dec
xor
xchg
sbb
mov
cmpsl
mov
enter
subl
shr
aad
jo
add
push
sbb
sub
ja
add
cmpsl
xor
push
jb
add
fistpl
and
pushf
mov
mov
push
mov
mov
inc
jl
movd
mov
xchg
adc
imul
or
pop
out
pop
jge
adc
add
gs
jne
mov
cmc
mov
add
fcoml
xlat
xchg
cmp
pop
push
lret
shr
sbb
roll
pop
rolb
and
lock
and
xlat
in
pop
das
add
loope
sbb
into
sub
repnz
jo
fistpl
or
jo
jno
xor
add
pop
jns
sub
cmp
lret
jle
add
cs
add
add
gs
xor
xchg
and
sbb
and
and
andb
add
pop
cmp
lret
daa
or
cs
test
adc
jecxz
nop
mov
cmpl
fldcw
sarb
add
pop
into
dec
data16
add
psubusb
inc
in
jo
mov
nop
push
or
add
cmpsl
jge
es
in
daa
jne
add
mov
cmp
ljmp
pop
mov
mov
push
sub
mov
inc
mov
add
cmp
scas
mov
aam
push
jle
aaa
pop
dec
add
mov
pop
test
and
sub
stos
testb
jl
jmp
mov
cmp
rcr
inc
or
add
mov
psraw
sbb
push
sub
pop
adc
cwtl
jmp
std
mov
rclb
add
dec
out
sub
lea
pop
insb
sub
add
ret
mov
in
push
and
add
adc
pusha
push
arpl
add
push
repz
and
enter
add
clc
jp
sub
mulb
add
mov
jge
sbb
mov
arpl
xor
sbb
xchg
fucomip
mov
and
pusha
mov
jno
or
and
jb
jns
cmp
sub
xchg
mov
or
ds
negl
lods
sub
xchg
pop
jp
mov
movsb
lret
jb
xor
mov
sub
jns
mov
call
and
cmp
int3
xor
jno
pop
inc
cmp
add
in
arpl
adc
test
call
enter
sub
cwtl
cmp
inc
push
outsl
vpunpckhqdq
fcoml
pop
mov
popf
xchg
js
clc
push
test
inc
pop
dec
inc
les
outsb
inc
in
pop
mov
dec
ret
movsb
push
mov
dec
inc
stos
negl
ds
xchg
push
std
in
fisubs
mov
mov
sub
sti
xor
std
add
test
dec
jle
loop
dec
pop
add
fs
sub
pop
fwait
test
cld
pop
sbb
sub
xchg
or
daa
pusha
imul
or
call
add
clc
outsb
iret
and
mov
mov
pusha
xchg
push
fs
sbb
mov
imul
loopne
aaa
jo
scas
pop
or
mov
inc
mov
or
out
push
adc
lods
jae
sub
test
push
enter
dec
add
and
loope
ja
sub
sar
push
mov
test
aad
mov
stc
fchs
add
jns
jle
mov
sub
nop
dec
pusha
and
jg
ljmp
shrl
xor
mov
imull
sbb
mov
add
ficompl
sbb
and
pop
and
sarl
test
add
mov
outsb
mov
adc
push
ds
xchg
test
nop
lods
mov
std
add
cmp
dec
jmp
mov
and
leave
rcr
push
nop
or
or
cltd
push
add
fwait
mov
lds
jb
push
or
xchg
inc
adc
push
insl
push
dec
ret
cmp
mov
mov
adc
xchg
push
xor
xchg
rcll
fdivs
inc
or
jp
add
cltd
or
es
mov
divb
push
es
fistpl
push
and
mov
bound
add
je
popl
test
insl
les
or
iret
add
fistl
xchg
inc
inc
add
push
mov
ret
outsl
fadds
add
sahf
pushf
lret
jo
add
rcl
inc
add
jle
pop
pusha
push
sub
xor
aaa
adcb
pop
nop
push
outsb
gs
cmpsb
out
popa
sahf
sub
fisttpll
dec
add
jl
jne
gs
jle
add
cmpsb
lods
enter
xchg
pop
mov
add
pop
inc
mov
adc
xchg
xor
jmp
in
lret
add
pop
cwtl
push
push
or
sub
add
mov
test
and
pushf
push
pusha
add
and
lahf
cmp
lock
jmp
cmc
pop
mov
and
scas
cs
dec
mov
clc
add
cld
or
xchg
into
pop
mov
add
cli
add
add
lcall
or
and
repz
mov
shrb
sbb
pusha
shrb
fistps
xchg
sub
lods
add
lret
mov
push
mov
aas
push
cmpsl
add
ljmp
divb
jae
xchg
add
add
mov
inc
or
in
add
popa
inc
lock
adc
test
sbb
cmp
mov
rclb
lret
inc
jg
adc
cwtl
mov
sbb
jbe
js
or
flds
rcrl
mov
and
hlt
adc
add
mov
aaa
sub
add
movsl
push
cs
and
popa
shlb
inc
xchg
mov
push
xor
add
inc
hlt
or
push
jo
mov
loope
xchg
pushf
hlt
sbb
or
cmp
addr16
add
dec
cs
push
push
mov
testl
add
movsl
and
cmc
imul
fdivrs
xchg
jg
out
sub
sbb
cmp
mov
cltd
gs
mov
cmc
xchg
lods
jmp
jno
add
or
fisubrl
jl
xchg
incb
sub
jns
ljmp
and
shl
add
add
cld
mov
cmpl
mov
sub
test
xlat
lret
addr16
movsl
mov
add
repnz
sbb
call
ljmp
adc
or
dec
and
xor
mov
or
inc
cltd
adc
jnp
add
fcomp
jle
xchg
movsb
xchg
pop
incb
jbe
leave
gs
dec
clc
push
loop
lock
popa
add
dec
mov
jmp
or
cmpsb
jp
jae
cwtl
dec
sbb
add
mov
push
add
mov
push
mov
negl
in
push
add
mov
orb
lea
mov
xor
add
adc
jp
pop
pop
fdivrs
inc
je
inc
add
jbe
mov
or
fistpl
hlt
add
loopne
mov
inc
add
mov
stos
popf
add
xchg
dec
std
aad
mov
cltd
and
int
add
xchg
imul
cmp
fs
add
cli
movsb
in
sbb
movsl
loope
flds
stc
mov
push
inc
mov
jo
xchg
push
mov
adc
scas
loopne
push
incb
int3
cmc
mov
add
fmuls
inc
lods
push
cmp
inc
and
jmp
insb
lahf
add
sub
push
sbb
and
dec
add
fwait
stc
out
mov
test
jo
xor
push
sub
dec
dec
xchg
inc
dec
in
stc
push
test
xchg
cld
sbb
add
icebp
push
test
aaa
psubusw
out
ret
andl
push
and
push
imul
daa
call
lcall
cmp
lahf
subb
pusha
push
leave
xchg
orl
and
dec
and
test
xchg
mov
pop
pop
dec
and
icebp
jbe
add
jo
out
pop
dec
ss
jne
inc
or
pop
rsqrtps
mov
sahf
add
popa
das
add
inc
jle
xchg
dec
or
fdivs
cmp
and
andb
xchg
add
mov
mov
xor
ffree
dec
stc
fcoml
and
mov
js
add
mov
jb
mov
adc
pop
jl
daa
xchg
mov
mov
push
pop
cmp
cmp
popa
cmp
pop
ds
test
int3
add
jecxz
in
cld
mov
fwait
adc
cmp
dec
inc
or
pushf
cli
or
dec
ljmp
aas
push
or
mov
and
and
push
popa
loop
add
loopne
pop
insb
mov
or
shrb
icebp
jmp
and
inc
adc
popa
mov
mov
lds
fcompl
cmp
and
jae
dec
jmp
inc
add
stos
push
insl
iret
push
scas
jae
add
outsl
ret
mov
sbb
decl
nop
jecxz
insl
js
adc
adc
sub
popa
nop
and
add
andb
add
mov
inc
test
std
add
or
mov
pop
les
movl
cld
cli
pop
pop
push
and
push
mov
jecxz
rolb
mov
ret
mov
jmp
inc
dec
mov
add
test
imul
adc
mov
add
sahf
insl
test
jno
mov
push
ss
and
es
add
cmpsl
add
insb
add
and
push
xor
dec
xchg
jbe
test
jnp
into
rcll
sub
and
mov
mov
int3
fmuls
cmp
adc
adc
pusha
add
icebp
adc
mov
aam
xchg
dec
popa
jg
or
into
lods
out
mov
add
cltd
add
push
std
sbb
sbb
gs
in
sbb
roll
ja
cmpsl
decb
pop
lds
mov
outsb
int3
cli
andb
dec
adc
mov
pop
cmp
daa
jne
and
es
push
shll
out
mov
shlb
xchg
lods
add
pop
nop
and
dec
lret
cmp
adc
and
test
int3
popf
add
jecxz
insb
scas
mov
shl
adc
mov
add
loop
jecxz
cwtl
popf
mov
add
and
out
loop
push
sbb
roll
push
aas
js
jo
add
jp
hlt
add
dec
push
imul
add
or
loopne
push
mov
adc
test
push
sub
iret
dec
sub
xchg
add
out
add
sbb
lea
lcall
cmp
lret
pop
mov
pusha
mov
push
inc
jmp
data16
dec
testl
rcrb
inc
repz
jp
xchg
xor
inc
mov
pusha
daa
cs
mov
sub
push
ret
lcall
push
adc
mov
adcl
test
dec
rolb
aam
add
sub
fisubrl
jae
nop
enter
idivl
push
push
jle
out
and
add
mov
adc
cmpsb
mov
xchg
adc
stos
xchg
scas
incl
fcmove
scas
sub
idivl
mov
int3
add
and
adc
in
fwait
jo
xor
cmp
sbb
arpl
enter
pop
sbb
int3
gs
mov
jp
adc
iret
sbbb
sub
mov
jle
pop
cmp
inc
inc
das
popf
sbb
inc
in
sti
jl
cmc
mov
jle
inc
pushf
and
pop
xorb
xlat
xchg
pop
add
pop
or
mov
inc
negl
sub
xor
add
push
push
or
or
lahf
add
jle
add
ljmp
fnstcw
lahf
rolb
not
scas
push
stc
ret
sub
test
aas
add
sub
in
and
daa
divl
add
xor
mov
incl
add
and
pop
xchg
pop
add
shlb
loopne
xchg
cs
lret
addl
mov
or
push
fbld
jg
mov
jmp
sbb
hlt
add
and
push
xchg
jno
movl
adc
imul
ss
and
or
add
jg
jae
maxps
mov
add
sub
mov
sar
adc
sbb
jbe
add
xor
out
movsb
add
xchg
dec
mov
add
cmpsb
sarl
mov
jnp
push
xchg
xlat
lret
push
std
cmc
mov
adc
repnz
add
sub
mov
adc
fwait
mov
sbbb
es
daa
xchg
adc
inc
aam
add
lods
add
jo
mov
mov
fcoms
mov
adc
or
add
lock
cli
add
mov
ret
dec
cmpsl
imul
enter
add
xor
add
fyl2xp1
aad
test
inc
insl
inc
unpckhps
inc
pop
bound
dec
arpl
push
xor
pop
xchg
xor
movl
mov
xchg
push
ret
movsl
and
xor
orb
xchg
mov
shl
movsb
fdivs
or
xchg
inc
or
add
lock
test
jl
jb
push
inc
add
movsb
icebp
inc
push
xchg
popf
dec
push
adc
or
adc
pop
fs
orb
xchg
subps
cld
out
mov
int
xor
adc
nop
test
push
loopne
lods
out
loop
insl
or
add
add
repnz
xchg
scas
mov
clc
loop
lods
add
aas
adc
sbbb
js
hlt
imul
and
mov
add
pop
lods
pop
jle
loopne
daa
add
pop
call
adc
aad
pop
add
jecxz
dec
push
leave
lret
fisubl
mov
mov
add
and
dec
ror
aad
add
repnz
in
add
testb
ja
aaa
jb
add
lods
pop
inc
mov
mov
or
dec
popf
ja
mov
sbb
rcrb
test
jae
scas
pop
insb
jno
add
or
xor
push
push
roll
repz
push
add
adc
sbb
jle
jecxz
push
movlps
inc
roll
sub
arpl
add
xchg
add
adc
cli
clc
pusha
divl
ss
pop
shlb
mov
cmpsl
or
mov
push
icebp
movsl
xor
and
ss
jge
add
in
in
sub
mulb
int3
arpl
filds
push
or
shlb
pop
jecxz
add
mov
pop
leave
mov
pop
add
loopne
jg
popa
cmp
add
mov
jp
fisubl
icebp
ljmp
je
outsb
loope
and
lea
fnstcw
pop
or
pusha
mov
out
or
add
loope
mov
aas
mov
cmp
jo
mov
cwtl
aam
in
xor
cmp
clc
push
repz
add
jo
jmp
cmp
fisttpl
mov
and
pop
xchg
ficompl
mov
repnz
in
adc
cltd
mov
push
add
push
mov
mov
cmp
add
xor
fwait
loop
imul
dec
add
cmp
cwtl
je
adc
add
push
adc
inc
ss
es
push
call
push
jno
add
aam
adc
and
arpl
pop
ja
mov
outsb
add
inc
pop
les
adc
sub
pop
sahf
aas
jb
fdivr
xchg
roll
add
and
or
stc
xchg
xchg
add
neg
sbb
cmc
cmpsl
sbb
cltd
and
inc
lret
dec
add
mov
mov
sti
mov
jmp
cmpsl
cmpsb
pop
ljmp
sub
imul
loopne
dec
sub
mov
mov
add
fldt
int
inc
dec
aam
jbe
sbb
js
and
add
rclb
roll
in
xchg
mov
xor
cmp
mov
push
cld
imul
jnp
add
or
xor
jecxz
mov
mov
push
inc
loopne
pop
fistpl
inc
mov
jl
data16
call
lret
in
mov
dec
xlat
cmpsl
iret
das
aaa
ss
ret
add
adc
xchg
in
add
push
xor
sti
jp
sbb
sbb
pop
lods
fcoml
je
addr16
inc
mov
xor
lods
xchg
ljmp
or
lods
nop
pop
loopne
clc
mov
hlt
loop
xchg
pop
pmulhw
mov
sub
inc
mov
cmp
xor
add
lods
xor
loopne
add
jecxz
xlat
jle
cmp
xor
insl
mov
mov
mov
add
sbb
jo
lds
ja
jbe
pop
inc
leave
into
and
aam
push
pop
js
pop
sbb
xor
je
clc
xchg
push
cld
dec
ljmp
fwait
test
push
icebp
cmp
pop
add
or
and
scas
in
lahf
mov
cmp
adcl
loopne
add
rcrb
push
adc
push
shll
adcb
test
push
test
sarl
inc
jl
xlat
loopne
sbb
movsb
rolb
sbb
imul
or
in
mov
clc
push
add
ds
push
jmp
test
dec
cmc
call
add
aam
add
in
jmp
dec
mov
inc
push
push
lea
scas
frstor
add
jb
inc
cs
mov
sub
add
xorl
cmp
sbb
push
addb
aas
je
and
pop
mov
and
xchg
fcoms
pop
add
fsubl
push
aad
ret
jnp
add
imul
in
repnz
adc
cmp
das
out
or
pusha
mov
pop
pop
arpl
sub
mov
mov
pop
cmpsb
shll
mov
add
orl
fisubrl
add
pop
adc
jmp
clc
ror
jg
add
cmc
mov
in
sti
add
jp
call
push
sbb
inc
adc
jl
pop
or
xchg
add
std
mov
dec
mov
add
stos
loope
mov
dec
jo
add
sbb
scas
fidivrl
rorl
or
push
pop
stos
add
and
rolb
cwtl
add
cli
mov
jns
sub
lock
movsb
dec
push
out
fadds
ljmp
and
addr16
jl
mov
je
xchg
add
lcall
stc
sbb
jmp
or
sbb
ja
ds
jl
pop
cmp
jle
jg
sbb
lock
inc
mov
add
or
loopne
add
in
outsl
pushf
sbb
xchg
sarb
test
jae
or
dec
cltd
add
scas
add
inc
stc
pop
insb
xchg
sub
add
jne
clc
pop
test
add
mov
lret
iret
mov
pop
call
mov
xchg
pop
and
xor
inc
outsl
jnp
pop
jno
pop
push
add
add
adc
imul
mov
hlt
jo
jnp
xchg
mov
add
call
out
out
lahf
aad
je
sbb
jns
stos
pop
mov
fsubs
rolb
adc
mov
mov
sub
cltd
shrl
add
dec
repnz
hlt
mov
xchg
andl
xor
adc
mov
mov
into
cmpl
xor
and
fmuls
sub
add
or
mov
fnstsw
add
in
lcall
dec
popa
punpckhbw
ljmp
mov
and
lcall
mov
fdivs
mov
xor
add
sbb
imul
add
mov
mov
jnp
rolb
fisubs
fucomi
sahf
xchg
jle
add
push
ret
mov
add
cmc
out
test
hlt
int3
jb
jecxz
aas
daa
outsb
insl
mov
cwtl
or
jmp
push
adc
push
ret
jge
clc
es
sbb
dec
call
and
sbb
mov
adc
test
cltd
push
ljmp
jne
shl
push
cmp
loope
subb
mov
or
aas
mov
mov
push
push
inc
and
aam
xchg
push
int
pop
adc
xorb
mov
sbb
inc
pop
stos
pusha
sbb
call
add
loopne
mov
repnz
mov
shr
dec
pusha
das
mov
jno
mov
sbb
mov
add
add
das
fiaddl
add
xor
mov
add
je
cmp
fisttpl
rcl
mov
add
jb
pop
dec
mov
jg
add
and
push
sbb
fwait
stc
ljmp
mov
mov
xor
push
dec
push
loopne
into
aam
mov
cltd
mov
inc
push
xchg
cmpb
push
ljmp
jecxz
gs
iret
fsubl
lods
or
mov
mov
add
dec
push
xor
pop
fnstcw
add
pushl
dec
nop
in
aaa
push
lods
jmp
in
cld
popa
push
pusha
es
and
dec
mov
lods
dec
ds
mov
xchg
movsb
and
dec
je
adc
inc
add
fwait
or
jns
and
roll
outsb
rcr
jp
aad
and
ljmp
mov
xor
js
in
addb
enter
sbb
outsl
or
andb
mov
adc
punpckhbw
cmp
sti
enter
xor
es
out
xlat
add
xor
nop
subb
jmp
push
orl
int
pop
shlb
sbb
mov
add
adc
jg
pop
mov
sub
repnz
into
pop
sti
cmp
loopne
test
out
add
xchg
invd
cmp
dec
or
sahf
add
pop
xor
lret
pushf
lock
aas
mov
add
sbb
mov
push
push
xchg
sbb
pusha
xchg
sarb
sahf
lea
or
repz
xchg
add
or
cld
loopne
pop
xor
in
push
ret
mov
push
movsb
pushf
roll
in
push
std
loop
add
addr16
cmpsb
adcl
ja
pop
xchg
dec
and
and
test
pop
stos
data16
nop
lods
clc
xchg
mov
aas
sbb
not
test
add
xor
jle
xchg
and
mulb
inc
mov
jb
inc
les
inc
pop
xor
adc
push
jecxz
dec
jge
push
or
pop
fidivrs
call
sti
cmp
cld
subb
in
lret
dec
fwait
mov
fldenv
es
inc
in
aaa
adc
jne
add
sbb
ffreep
add
sub
std
add
js
scas
movsb
in
add
fcoml
sbb
andb
je
add
sbb
mov
add
lret
pop
mov
cmp
jg
add
pop
inc
mov
add
cmp
push
or
pop
test
cmpsb
sbb
sqrtps
cmc
lret
add
leave
cmp
dec
and
and
add
add
cmpb
lods
rclb
dec
add
enter
xchg
ds
adc
lock
and
push
mov
popf
cmp
cltd
add
push
jmp
and
out
andb
sbb
jmp
xchg
icebp
xor
and
xchg
sbb
ret
roll
mov
push
cmpb
push
mov
xchg
or
push
hlt
pop
or
add
dec
data16
sub
push
mov
test
test
shlb
iret
or
les
ffree
lock
sbb
lea
sbb
dec
mov
add
mov
push
jg
sub
adc
sbb
cs
test
push
cmp
inc
imul
test
cmp
sarl
mov
pop
outsb
pusha
test
pop
mov
repz
roll
call
and
mov
fstp
loop
xchg
xor
sbb
mov
cmc
or
sbb
xchg
sub
sbb
sbb
add
in
nop
insb
mov
xor
sub
adc
shlb
add
mov
push
clc
minps
in
mov
dec
add
sub
in
in
rcrb
dec
xchg
jmp
in
add
xorl
test
test
dec
gs
jl
cmp
divb
bound
add
cltd
cmp
inc
xchg
std
lock
add
or
sub
inc
and
insb
punpcklbw
xchg
lret
and
or
push
and
test
lcall
xor
push
test
aad
movsb
out
mov
jo
sub
or
or
push
xorl
fcmovbe
or
sahf
call
mov
push
repnz
ss
rorl
test
mov
sahf
xchg
mov
jo
add
mov
pop
sbb
and
test
dec
lods
js
adc
hlt
fstpt
sbb
pop
stc
jmp
movsb
jb
shll
js
and
push
add
aam
jno
sbb
out
pop
call
insb
mov
mov
inc
inc
mov
adc
jl
and
and
adc
mov
push
sahf
sbb
loopne
add
addr16
nop
pop
or
pop
mov
dec
out
test
sbb
int3
adc
sbb
pusha
mov
or
test
repnz
rolb
inc
sbb
sub
idivl
lcall
inc
add
and
stos
inc
mov
mov
test
xor
repnz
mov
clc
ja
lock
xor
ret
or
fcompl
lcall
in
mov
je,pt
int3
add
add
add
dec
jp
cmp
imulb
insb
pop
mov
push
lcall
adc
or
fcmovu
rorl
cli
dec
mov
sbb
jae
cmp
jge
cwtl
xor
add
sbb
out
mov
cmp
add
int
pmullw
loopne
and
sbb
test
push
les
pop
pop
adc
faddl
je
ficoml
sbb
pop
mov
icebp
cmp
xchg
add
mov
mov
imul
pusha
xchg
inc
sbb
pusha
pop
mov
sbb
idivl
sbb
test
iret
and
inc
lea
adc
imul
pusha
fcoml
adc
add
xchg
into
sbb
mov
roll
cmp
adc
jl
mov
cmp
or
out
sbb
imul
pop
lahf
lock
dec
pop
repnz
xchg
sub
push
clc
xor
push
movsb
dec
push
test
es
cmpb
or
xchg
add
mov
sbb
cmpsl
xchg
add
inc
enter
call
rclb
cmp
pop
es
fs
les
cltd
push
adc
push
cmp
and
push
fstpl
mov
jge
stc
and
testb
in
pop
repz
ficoms
add
test
adc
lret
jbe
pusha
inc
jns
test
loopne
fdivl
cmp
aam
xlat
xchg
cwtl
adc
xor
ja
sub
add
stos
pop
and
cs
xor
or
jae
jmp
sub
adc
sahf
cltd
adc
test
inc
rclb
sub
scas
xor
add
xchg
push
loopne
push
js
xchg
je
mov
or
sub
jo
ret
or
mov
dec
push
sub
rcr
mov
test
pop
je
pop
fsubr
leave
mov
test
stos
mov
addr16
cli
jmp
mov
ja
or
mov
pop
jg
fadds
sub
push
addb
fcomps
shl
xchg
inc
mov
or
and
movb
lcall
cltd
sbb
add
mov
cmpsb
jne
pushf
ror
fdivrp
mov
hlt
mov
and
sbb
ficoml
mov
cld
jp
and
sbb
hlt
movl
mov
jne
shrb
add
inc
add
pop
stos
lock
adc
cmpb
sub
in
xchg
dec
popa
mov
push
inc
mov
out
mov
xor
mov
or
out
mov
cmp
xchg
xacquire
cltd
inc
insb
add
aam
pop
or
popf
push
cld
xchg
lock
pop
mov
adc
mov
or
jo
hlt
or
push
pop
test
and
pop
pop
int3
add
xchg
xor
add
clc
loope
std
ffreep
in
scas
mov
sbb
jne
in
in
orb
daa
add
or
fiaddl
push
mov
stos
add
test
mov
sub
push
je
push
sub
push
mov
shlb
jae
mov
push
inc
les
sbb
clc
outsl
push
mov
sbb
out
add
ficoml
test
hlt
and
mov
rcrb
pusha
lock
inc
movaps
xchg
mov
add
fiaddl
fwait
data16
add
imull
jl
cmpb
jae
pop
pop
push
pop
call
cmp
xchg
int3
ror
nop
or
movsl
add
add
loope
and
mov
in
aam
movsb
inc
cwtl
push
add
mov
xchg
xor
imul
dec
push
sub
rorb
sbb
mov
outsb
dec
mov
mov
mov
push
xchg
sub
shrb
ljmp
repz
jmp
stos
in
add
or
lods
push
adc
adc
and
add
rcl
nop
test
pop
xor
loopne
or
fcmovbe
stos
adc
rorb
sbb
call
sbb
test
mov
mov
fsubrl
rcll
or
andl
mov
pushf
and
push
rorl
mov
and
adc
sbb
mov
mov
add
insb
shlb
and
sbb
add
cmpsb
aam
or
pusha
in
aas
dec
jnp
jle
aam
jg
into
sub
mov
jo
xchg
add
repz
cmpsb
dec
or
add
adc
and
addb
adc
imul
pop
pop
and
loopne
push
ret
jge
add
fcoml
add
dec
rol
fs
orps
push
or
sbb
dec
and
jg
cmp
add
mov
inc
add
je
ja
cmp
jae
mov
lea
data16
jg
out
test
int3
add
lods
push
je
rcl
fidivrs
cmp
cmp
out
mov
pusha
sub
cld
jmp
dec
add
popf
jp
and
and
sub
mov
inc
pop
shl
sbb
add
cmp
mov
push
cli
jl
inc
incl
push
cmp
sbb
leave
mov
das
jo
cmp
adc
add
aaa
ds
pop
dec
in
push
add
jg
scas
mov
add
and
sub
into
ja
xor
adc
pusha
mov
inc
pop
lods
xor
leave
or
outsb
into
mov
add
jo
mov
pop
ret
scas
pop
sbb
in
mov
push
lods
xchg
jns
lahf
cltd
fdivrs
add
dec
or
or
nop
or
push
pop
roll
pop
jbe
sub
add
adc
mov
xlat
mov
jge
cwtl
lock
pop
sbb
cld
aas
cmpxchg
fidivs
adc
mov
aam
sub
and
jmp
or
gs
mov
ffreep
jle
push
add
mov
cwtl
cmpsl
push
inc
lahf
rsm
loope
jl
xchg
dec
enter
add
ltr
xlat
lret
adc
add
jl
mov
testb
push
add
out
add
out
mov
dec
xor
fbstp
aas
push
xchg
fmuls
mov
push
mov
ret
xchg
fadds
bound
std
mov
add
enter
outsl
lret
notl
fmull
add
cmp
and
sar
hlt
pusha
inc
mov
or
add
inc
pop
add
jp
mov
push
mov
mov
cmp
add
data16
outsb
xchg
aas
jecxz
xorb
shl
inc
cmp
pop
icebp
enter
cs
lds
std
fdivl
mov
add
xor
and
xchg
add
mov
sbb
inc
outsl
xor
add
leave
nop
jle
add
sti
xchg
jl
repnz
inc
rclb
inc
popa
stc
cmp
add
in
mov
pusha
in
pop
jecxz
mov
jge
xor
inc
adc
fsub
lahf
mov
stos
sub
mov
adc
push
jp
arpl
in
mov
jbe
iret
dec
or
cs
jg
add
aas
mov
out
ja
pop
pop
dec
adc
hlt
push
roll
fsts
cli
pop
aaa
xor
push
enter
add
ret
fimuls
add
fs
lock
mov
sub
icebp
push
sti
cmpsl
fists
jbe
mov
jle
adc
jge
mov
int3
xor
ret
int
iret
pop
mov
filds
popa
ja
sub
and
add
cmp
add
push
pop
sbb
pop
dec
jge
shlb
testl
inc
aam
shrl
inc
lods
add
and
loop
mov
mov
mov
fsin
add
xlat
out
dec
add
cltd
es
je
or
xor
or
add
or
fmuls
adc
into
or
push
and
cwtl
push
and
inc
pop
and
push
sbb
jl
xor
mov
pop
sbbb
les
out
push
es
sbb
adc
bound
push
stc
mov
mov
mov
add
xor
pop
add
leave
push
fdivrl
xor
mov
push
aad
jns
loop
or
data16
in
add
push
adc
idiv
sbb
sbb
jmp
enter
int3
sbbb
inc
jmp
andl
addb
in
jb
and
add
mov
xor
sbb
iret
lock
add
test
xor
dec
add
sahf
xchg
pop
negb
add
lds
add
cmp
andl
test
test
push
push
fsubrl
dec
iret
push
popa
add
pop
mov
inc
enter
xor
add
test
sbb
pop
lcall
pop
icebp
cmpsl
lock
xchg
and
cs
add
cltd
mov
aaa
cmpsb
frstor
cmp
pop
daa
cmp
push
out
add
jmp
mov
int3
ljmp
dec
xchg
add
out
push
movsb
mov
inc
aam
inc
dec
push
jo
or
loopne
mov
pop
incb
lret
testl
push
bnd
add
int
pop
inc
jns
fstpl
mov
fdivrs
pop
lea
sbb
and
call
lock
cwtl
cmc
push
divb
lret
pop
into
xlat
rorl
ret
cmpb
sti
cwtl
mov
mov
ds
sub
in
sahf
gs
pop
add
jno
lock
icebp
cmp
cwtl
loope
add
adc
clc
movsl
imul
inc
es
dec
add
cmpsl
mov
mov
pop
xchg
or
or
jg
sahf
fcompl
and
add
mov
add
sti
pop
mov
sbb
icebp
add
test
sbb
sti
mov
cmp
cli
add
cwtl
or
push
pop
add
std
sbb
adc
inc
pop
out
stos
dec
xchg
shlb
cmpsb
mov
js
add
inc
or
xchg
dec
test
insl
stos
dec
enter
mov
aam
push
subb
pop
xor
in
inc
leave
sbb
mov
or
cmpsl
dec
adc
popf
add
stos
in
cwtl
add
jae
loop
jns
dec
add
sub
mov
add
stc
loope
add
adc
dec
adc
jne
jnp
mov
mov
dec
pushf
imul
pop
movsb
add
mov
and
push
insl
xor
xlat
dec
pop
aaa
add
imul
add
cmp
cmc
adc
std
scas
or
rclb
jbe
add
jne
iret
cmp
pusha
inc
mov
jecxz
cmp
and
cmp
lcall
xchg
jmp
pop
dec
jno
add
insb
xchg
pop
push
test
sbb
jle
cmp
daa
clc
xor
out
cmp
shrb
add
or
add
push
out
xor
add
add
into
imul
pusha
xlat
lods
loope
fiaddl
shrl
enter
add
xor
std
mov
cli
mov
or
pop
push
sub
mov
es
test
dec
mov
jl
data16
loop
clc
sub
add
adc
lock
push
jmp
adc
sub
mov
pop
cmc
pavgw
jl
xchg
mov
daa
sbb
cmp
add
xchg
jl
xchg
mov
sbb
cmpb
std
xor
pop
rol
loop
dec
test
cmp
push
cmp
xchg
ret
test
inc
xor
jne
add
out
lock
adc
ljmp
inc
xchg
fiadds
and
cmp
ds
adcb
mov
cld
pop
mov
int
or
inc
push
cmpsb
add
lds
add
push
xchg
mov
pop
sbb
jmp
jge
sbbb
mov
or
adc
cmpsl
add
sub
ds
int3
adc
je
cmp
xchg
or
jo
jne
add
xchg
jge
or
ja
inc
and
cltd
adc
out
inc
test
add
pusha
cli
xor
repnz
add
sub
add
fsubs
mov
dec
ja
fsubr
push
mov
pop
sub
mov
lods
rcrl
je
or
mov
xor
paddd
mov
add
add
cltd
idivb
pushf
fbld
cli
add
push
jg
sarb
out
mov
cmpsl
test
mov
push
mov
cs
sbb
fwait
and
ja
push
icebp
gs
stos
push
incl
idivl
pop
imul
or
mov
mov
fcomps
movsb
ret
fdivrs
mov
and
icebp
fidivrl
cs
andb
jge
jbe
pop
jns
fcmovbe
das
es
mov
ss
xor
call
loop
scas
lahf
sbb
pop
mov
cmp
lock
jge
sbb
xor
dec
ret
xchg
aas
loopne
ja
into
xor
push
xchg
add
dec
movsb
jp
ja
or
test
cmovno
nop
adcl
sbb
add
xchg
inc
adc
daa
addl
xor
push
mov
adc
mov
add
xchg
stos
sub
pop
test
and
shlb
push
add
push
inc
nop
add
sub
hlt
fdivr
je
sbb
ds
cmp
push
sbb
sbb
cltd
and
loopne
xchg
ficoms
inc
addb
push
sub
mov
mov
or
cmp
aam
test
dec
lock
pusha
sbb
mov
mov
sarb
xchg
mov
or
add
mov
cltd
out
imull
sbb
into
addb
andb
mov
adc
popa
dec
outsl
xchg
add
jns
add
xchg
mov
push
inc
sbb
jmp
in
out
inc
push
ja
lods
sub
add
mov
xchg
and
popa
adc
and
and
cmp
pop
out
in
or
pop
int3
repz
cwtl
fdivs
mov
push
push
cld
cmp
aaa
xor
add
fnsave
xor
int3
sub
push
xchg
jnp
cmovbe
cmp
xchg
or
lahf
gs
sub
adc
inc
movsl
adc
xchg
cmp
inc
std
je
test
faddl
mov
out
xchg
add
jns
inc
mov
mov
pop
and
jae
add
push
test
addb
xchg
lods
sbb
add
ljmp
mov
adc
loope
jno
testl
js
add
mov
lret
push
std
inc
insb
adcb
or
pop
or
scas
hlt
sub
add
adc
or
fwait
mov
stos
xchg
pushf
add
sarl
xchg
ljmp
dec
dec
or
xchg
test
loopne
outsb
ja
mov
cld
movsl
pop
jns
sti
xchg
sbb
add
cmc
mov
jo
xchg
sbb
push
imul
or
jmp
sub
or
or
mov
ss
insl
add
imul
mov
sbb
push
orl
mov
adc
aaa
int
or
add
std
and
jnp
inc
pop
repnz
jne
sbb
rcll
sarb
adc
not
outsb
push
imul
and
cld
push
push
pop
adcb
adc
cltd
jecxz
shll
fistpll
pop
or
test
jmp
repz
pop
push
push
ficomps
cmp
push
add
lea
sub
and
dec
inc
add
pop
shl
dec
adc
dec
dec
loope
add
add
popa
outsl
fadds
or
cmp
shll
sub
xor
out
mov
mov
mov
pop
adc
jg
add
cmp
fld
sbb
or
and
pop
cmovs
pop
rclb
gs
pop
add
pop
roll
ja
mov
sub
in
sub
mov
add
aam
jg
scas
mov
add
xchg
lea
pusha
out
push
mov
outsb
add
aam
mov
in
cmp
add
insb
push
shlb
incl
jmp
inc
dec
pop
enter
pop
lret
mov
daa
dec
lock
and
sbb
jae
or
jge
pop
mov
negb
mov
dec
loope
arpl
mov
xor
jl
cmp
mov
mov
lsl
insl
push
shrb
push
movsb
lods
popf
lidtl
or
xor
add
aad
pop
scas
mov
push
and
pop
shlb
cmpsl
and
in
or
cvtps2pi
enter
lock
add
mov
jg
adc
xchg
cmp
jle
pop
mov
push
scas
jae
lds
and
stos
pop
mov
add
iret
fadds
mov
pop
dec
call
ja
inc
inc
mov
push
aas
xlat
and
mov
dec
scas
inc
adc
cmp
add
push
add
daa
jge
dec
cmpsb
push
inc
cmp
lods
sbb
jecxz
pusha
inc
add
mov
hlt
lahf
lock
push
jecxz
pop
push
shlb
xchg
xor
xchg
enter
icebp
lahf
out
int3
push
xor
and
push
mov
jecxz
jp
add
fiaddl
or
xor
inc
pushf
mov
out
js
add
popl
cmpsb
rolb
inc
push
addl
pop
rcrl
xchg
lods
std
jo
test
inc
fneni(8087
pop
jg
rolb
mov
mov
ret
jge
inc
mov
push
xor
sbb
ret
mov
or
mov
addb
dec
popf
mov
mov
add
jae
aas
mov
jge
pop
jg
das
mov
pusha
rcrb
inc
sti
jle
add
push
cmp
ret
sub
and
movsl
lds
ret
arpl
or
rorb
pop
mov
out
scas
sub
cmp
cmp
jne
add
ja
add
shl
xor
out
push
or
adc
int3
jne
shr
mov
cld
push
outsb
cmp
xchg
inc
pop
cli
xor
jnp
fiaddl
mov
fs
xchg
loop
shll
xchg
and
lahf
mov
lcall
cmpb
add
push
pop
jnp
mov
add
lock
adc
lock
push
cmp
call
rclb
mov
pop
add
int3
adc
dec
movsl
inc
add
add
add
add
js
loope
push
fnsave
add
push
scas
mov
xor
int
leave
xor
les
clc
inc
sbb
pop
fdiv
lods
and
sub
push
pop
xchg
sub
andl
roll
stos
dec
lahf
ja
cwtl
push
add
loope
pushf
fstpl
sub
adcb
mov
cmc
jo
add
das
int3
xlat
jbe
add
arpl
hlt
dec
lods
fadds
cmpsb
cli
outsl
out
decb
push
jp
or
iret
push
inc
cmp
scas
add
cld
in
aam
add
arpl
fs
popl
rolb
cs
push
pusha
xlat
and
mov
mov
int
sbb
adc
push
outsl
pop
cmp
pop
addb
or
fidivrl
mov
add
adc
adc
mov
enter
dec
pop
icebp
add
xor
or
mov
out
inc
cld
in
sub
pop
push
pop
gs
or
dec
rolb
xor
mov
add
inc
std
push
pop
and
fwait
add
movsl
adc
das
dec
outsb
add
icebp
je
push
in
push
popa
add
cmpsb
cld
dec
add
js
xchg
dec
ret
mov
mov
inc
sub
dec
add
inc
inc
adc
sbb
test
shl
shr
mov
roll
adc
push
std
add
xor
or
push
enter
dec
add
fbstp
dec
xor
inc
add
push
in
lods
add
cpuid
sti
add
out
lcall
nop
jb
pop
push
rorl
and
xor
inc
dec
mov
mov
xchg
jae
cld
addr16
xchg
mov
add
lcall
xchg
cmpsl
jns
inc
sbb
fists
xor
add
add
fndisi(8087
add
aaa
mov
scas
sbbl
fstps
sbb
push
jl
push
mov
push
or
test
fadd
insl
add
add
xor
stc
pusha
xchg
mov
shr
repz
add
out
sub
pusha
jmp
jne
sub
mov
std
xadd
nop
ds
pop
add
cmpsb
jbe
addr16
mov
mov
fdivrs
icebp
add
pop
lahf
xchg
sbb
aas
jo
add
test
add
pop
aas
leave
sbb
iret
and
loop
push
dec
mov
or
fidivrs
rcrb
jl
lds
push
xchg
cmp
ret
cmp
inc
add
insb
mov
and
loopne
adc
add
pop
add
test
aam
sbb
sbb
pop
jae
je
pop
mov
mov
mov
shrl
stos
out
loop
add
and
pop
add
mov
jo
sub
add
inc
in
leave
add
mov
popl
das
add
mov
mov
inc
inc
and
fstpl
jbe
add
cltd
rorb
add
add
add
xchg
jae
mov
int3
xor
gs
add
loope
pop
mov
cltd
mov
test
out
jne
xchg
add
hlt
or
enter
add
incb
dec
push
js
push
xlat
add
cmp
cmc
adcb
jnp
wrmsr
pop
add
cwtl
aad
jae
call
and
std
pop
mov
pop
mov
or
out
add
rol
cwtl
cmp
inc
add
mov
lods
ret
enter
xor
loopne
cmpsb
mov
xor
cmc
and
jnp
add
int
cmp
push
cli
shlb
ret
jo
sbb
pop
mov
inc
int3
add
lea
adc
and
pop
test
lret
loop
dec
scas
add
dec
fcmovbe
shl
mov
icebp
stos
adc
int
cmp
sbb
push
andl
cs
in
and
add
sub
loop
fwait
repz
push
adc
xchg
cli
mov
pusha
mov
xor
xchg
gs
pusha
pop
js
lock
or
test
fidivrs
int3
or
insb
add
pop
cmpsb
dec
xorl
mov
imul
add
mov
jnp
push
cwtl
incb
cltd
xchg
idivl
mov
add
sbb
loop
cmc
pop
push
fldl
and
add
xor
lret
fadd
jae
xor
dec
enter
dec
and
leave
jb
mov
sub
mov
fidivrl
sysexit
cmpl
pusha
jle
pop
sbb
sti
sbb
inc
push
sbb
lock
add
push
inc
les
stc
jmp
and
fdivrs
pop
dec
or
inc
and
inc
xchg
inc
mov
jle
jmp
dec
sub
dec
push
arpl
mov
xor
mov
outsb
mov
cmp
pop
fistps
loopne
fwait
dec
movsb
jbe
xor
mov
add
sbb
add
ret
dec
popf
xchg
xor
repnz
adc
sbb
lahf
loopne
and
adc
imul
cmp
sub
repnz
pop
adc
or
mov
nop
mov
adc
sbb
je
call
lcall
ret
out
lock
pop
or
loopne
mov
jbe
sub
add
mov
sarl
and
jg
mov
xor
and
cmp
mov
ss
arpl
dec
xor
test
jb
fiadds
pop
and
adc
lock
cmp
les
imul
jmp
cmp
push
insb
and
inc
shll
jo
jmp
xor
and
ss
stos
xchg
cmpsl
dec
mov
or
dec
push
add
add
push
add
push
outsl
and
sub
imul
mov
inc
ds
aad
test
cmpsb
ja
cmp
add
bound
and
mov
cs
fdivrl
xchg
fadds
imul
mov
scas
mov
add
xlat
lcall
add
in
adc
adc
pop
movsl
add
mov
and
mov
jl
jecxz
addl
lods
mov
mov
out
and
sub
pop
pop
arpl
fldt
mov
fidivrs
add
pop
adc
dec
hlt
jl
add
push
dec
std
mov
and
insl
mov
in
mov
mov
jp
adc
pop
arpl
fwait
jge
add
lods
mov
jle
stos
push
pusha
jl
or
aaa
xlat
pop
int3
loop
mov
sbb
sub
in
xchg
scas
fbld
shrb
mov
mov
mov
dec
jle
xchg
xor
add
fdivs
add
out
xchg
jecxz
inc
mov
mov
fdivr
jecxz
push
mov
mov
outsb
cmp
loope
int
cmc
push
rolb
in
jle
test
add
jge
call
jnp
mov
jl
in
mov
sub
push
jecxz
cmp
push
pushf
jo
add
rclb
jmp
mov
xchg
or
test
test
pop
mov
addl
cmp
in
sbb
out
add
adc
das
push
loope
pop
in
mov
cmpsb
inc
dec
bound
nop
fsubs
pop
inc
in
loop
mov
dec
jnp
dec
rolb
andb
inc
sub
adc
movsb
add
fists
adc
jae
pop
test
sbb
test
imul
div
icebp
xchg
sub
or
repz
cs
loopne
xchg
inc
sbb
inc
sub
call
rcl
jge
adc
jle
mov
sbb
pop
and
xor
les
test
jmp
add
xor
les
xor
pop
jb
cmp
xor
add
add
sub
add
cmp
sub
jo
add
xchg
out
pop
xor
jecxz
je
add
fs
es
cmp
rcll
int
add
xchg
call
xor
adc
mov
jo
aas
or
mov
lcall
xor
inc
pop
roll
xchg
pusha
mov
leave
push
lock
push
rolb
negl
mov
push
aam
cmp
inc
rcrl
mov
pop
push
add
dec
outsb
iret
jle
xchg
and
sarb
and
xor
popa
mov
sbbb
roll
pusha
add
xor
clc
dec
cmp
mov
mov
arpl
jbe
imul
rcrb
add
and
ss
and
rcrb
push
mov
jbe
push
dec
xor
xchg
jnp
sub
xor
and
add
sub
push
loopne
dec
fildl
ljmp
mov
sub
popa
nop
xor
das
test
stc
inc
mov
push
data16
fldl
or
jl
sub
push
out
add
push
movsb
test
lock
nop
mov
pushf
add
xlat
jle
add
sbb
ja
push
mov
add
pop
dec
aad
stos
outsl
incb
inc
push
inc
xchg
sarb
cltd
lds
sbb
add
sti
dec
mov
movsl
add
aad
movsb
add
outsb
push
popa
iret
idivl
or
xor
popl
cmp
mov
xchg
leave
lret
add
lods
and
mov
out
add
adc
adc
add
lret
leave
popa
int3
outsl
add
dec
js
out
pop
das
enter
add
xor
mov
pushf
cld
add
das
push
fbld
mov
in
test
rclb
pop
or
fistps
cmp
fstpt
add
cmp
push
adc
mov
and
push
adc
adc
push
xchg
cwtl
outsl
dec
pop
test
jne
xchg
pop
push
add
and
xor
hlt
mov
pop
and
pop
sub
ljmp
mov
add
mov
mov
in
ljmp
adc
xor
lcall
cmpsl
xor
in
mov
dec
out
xchg
and
fidivs
jno
addr16
ja
mov
jmp
sbb
inc
pop
leave
rorb
pusha
mov
cwtl
scas
or
add
pop
pop
dec
add
outsl
xchg
push
dec
ds
out
jb
loopne
push
jp
pop
inc
cld
es
dec
push
adc
daa
dec
or
fcompl
enter
aas
fs
add
or
cli
add
imul
mov
add
out
out
lret
pop
mov
sbb
push
test
jb
add
sbb
test
shrl
out
dec
bound
jmp
sar
and
xor
ja
loope
int3
sub
push
add
jae
nop
jle
out
dec
and
les
mov
aad
dec
add
jmp
xor
das
repz
mov
cltd
js
in
bound
jae
add
jb
addl
cmp
loope
mov
call
mov
lods
push
enter
nop
add
jo
aad
xorb
ret
scas
sub
and
push
outsl
int3
shlb
xor
pusha
loopne
ret
mov
pop
add
push
push
jno
aad
icebp
repz
incl
lret
sbb
add
xchg
push
xorb
add
dec
or
into
xchg
out
xor
call
add
cmp
aam
cmp
cltd
aad
add
stos
or
adc
push
ret
push
in
sub
popa
aas
lret
add
cmp
hlt
or
lock
test
arpl
clc
shll
cwtl
pop
xchg
push
add
xchg
dec
jnp
sub
add
adc
or
sbbb
mov
inc
push
fidivs
push
add
jne
pop
add
lds
das
adc
arpl
and
pusha
jne
push
and
jns
addr16
add
movsb
xchg
cmp
jno
iret
add
pop
add
dec
loope
scas
jp
test
fstpt
std
push
je
add
iret
sub
inc
nop
push
rolb
inc
andb
test
pop
add
jb
jmp
rclb
jae
aaa
insl
sbb
or
push
sbb
jmp
not
push
shr
data16
push
int3
ljmp
mov
loope
sti
push
lahf
pushf
sbb
xorl
pusha
lret
arpl
mov
push
mov
addl
dec
shl
add
cld
xor
aaa
test
lret
mov
out
aas
pop
in
cmp
or
loope
cmp
and
push
push
jge
subb
xlat
addl
inc
push
xor
mov
in
sbbb
sbb
xchg
test
pop
mov
in
cmpb
sahf
or
add
mov
loopne
stos
adc
push
lahf
out
push
shrl
add
cwtl
add
nop
dec
cmp
cmp
outsb
push
push
xchg
in
mov
inc
insl
or
dec
add
mov
mov
jle
add
test
clc
cmp
js
fnstsw
add
xchg
pop
sahf
xor
inc
push
dec
add
pop
es
pop
jmp
lock
xchg
mov
lcall
jns
lock
lods
mov
js
pop
add
and
imul
in
mov
pop
xorl
pop
arpl
push
rclb
pop
int
inc
mov
lret
inc
outsl
mov
sbb
fbld
ds
mov
insb
xchg
mov
fsubrs
pop
sahf
mov
lods
in
pop
pop
addl
add
in
xorb
lods
add
clc
xchg
ja,pn
aaa
add
loop
ss
jns
pusha
mov
jmp
cli
fidivrl
cmpsl
hlt
mov
mov
cs
test
or
imul
add
imul
fadds
mov
xchg
push
xchg
cmp
pop
lea
push
out
fisubrl
movsb
xor
push
and
mov
imul
scas
mov
icebp
cmc
in
shl
mov
inc
pop
js
out
jmp
and
and
xor
adc
mov
mov
fwait
xchg
in
or
les
xor
sbb
add
fnsave
loope
mov
push
xor
xor
add
pop
push
enter
lret
push
or
adc
out
dec
push
pusha
test
inc
adcl
inc
dec
mov
adcl
out
cwtl
or
lds
cmp
and
out
or
inc
enter
out
add
bound
in
mov
or
cmpsb
xor
mov
aas
mov
rcr
je
outsl
xchg
lret
enter
add
add
adc
lcall
rorb
adc
addl
addl
lods
lods
xor
jg
cli
cmp
aaa
pop
sub
adc
repz
jo
mov
pop
mov
xor
mov
cmp
jns
add
or
loopne
dec
add
jnp
pop
fldl
ret
mov
inc
rolb
pop
sbb
xor
outsb
add
aam
sub
jg
pusha
jnp
mov
aaa
cmp
pop
add
lahf
and
lock
pop
add
xor
jno
xchg
les
push
inc
loopne
push
push
bound
movsb
repnz
pop
adc
pop
mov
adc
cmp
mov
adc
das
fnsave
int3
add
orl
cmp
jnp
lcall
and
rcl
insb
lcall
shrb
jo
jne
add
in
mov
sub
adc
jmp
or
adc
je
add
shl
xchg
add
das
fmull
in
in
test
fisubrs
add
jb
into
add
push
ret
inc
xor
sub
pop
dec
out
sub
bound
push
rcr
jmp
mov
lods
cmp
mov
mov
add
jo
ss
pop
pushf
stc
into
xchg
mov
adc
test
pop
pop
jns
push
push
out
sub
dec
in
xchg
adc
push
clc
stc
xor
and
mov
les
hlt
adc
sbb
or
pop
popa
cmp
pop
movsl
dec
insb
pop
imul
inc
xor
movsb
enter
pusha
jg
mov
add
push
fwait
stc
pusha
call
mov
pusha
and
ds
ret
dec
stc
inc
clc
scas
and
incl
popf
or
and
in
repz
xor
jb
or
aad
addb
push
imul
fsubr
fisubrl
xor
rcrb
dec
push
add
inc
adc
loop
mov
les
lock
enter
push
inc
mov
xchg
fdivl
sbb
jle
shll
or
push
test
nop
icebp
cli
fiaddl
addl
inc
rcll
ja
loopne
scas
lods
outsb
add
mov
jmp
sbb
in
in
sbb
mov
cs
add
stos
add
add
aam
pop
ja
popa
xor
push
cmp
negl
jmp
test
xchg
std
and
jmp
cmpsl
add
lods
loopne
add
sbb
inc
sub
add
js
jnp
cmp
hlt
pop
xor
gs
icebp
adc
mov
scas
mov
pusha
daa
insl
add
mov
mov
mov
aaa
mov
jnp
fbld
aad
test
add
clc
xlat
int
mov
sub
mov
jle
push
imul
xor
xchg
sbb
fs
push
loope
xchg
ret
and
cwtl
xor
insl
mov
push
push
sub
or
add
lock
pop
dec
ja
adc
loope
aad
xor
pop
rcll
mov
jns
mov
push
dec
dec
les
add
adc
add
inc
push
fisttpll
mov
shll
add
iret
xchg
add
xor
and
test
cltd
xchg
cmpsl
mov
lcall
cwtl
daa
mov
lock
xchg
sub
mov
lods
xchg
fiaddl
sub
mov
jnp
push
scas
jg
sahf
cwtl
add
or
pop
mov
daa
and
inc
insb
sbb
inc
mov
lret
stc
push
je
sbb
lods
adc
cs
xchg
add
or
jnp
add
dec
out
das
bound
scas
or
xor
push
dec
add
cmc
ret
int3
shlb
shll
or
push
loopne
in
orb
sbb
out
in
test
cmovnp
orl
xor
cmp
lock
push
fisubrl
pop
add
in
cwtl
ljmp
popa
movsb
jno
push
push
add
icebp
cwtl
mov
movsl
mov
sti
jnp
int3
shrb
add
aad
mov
cs
test
add
mov
testl
mov
lahf
mov
push
and
xor
stos
inc
mov
dec
add
out
or
xor
sbb
jmp
imul
cmp
shlb
mov
mov
fistpl
call
ja
jmp
pop
pop
jle
jne
mov
dec
add
mov
pop
cmc
dec
and
mul
add
pop
mov
xor
push
lods
subl
inc
popa
pop
add
xchg
dec
outsl
dec
pandn
xor
fs
imul
jg
scas
push
in
gs
aam
and
mov
repnz
and
shlb
cmc
addl
and
repnz
mov
dec
pop
dec
fs
sbb
mov
jo
sbb
mov
inc
xchg
js
xchg
mov
das
call
pop
cmp
pop
add
int
nop
bound
jae
xor
rol
pop
xchg
in
and
fdivrp
mov
sub
and
int
mov
das
pop
aad
sbb
cld
aam
popa
sbb
clc
cs
xchg
mov
sbb
repz
mov
insl
gs
add
rorb
fldcw
cltd
out
mov
inc
es
add
subb
popf
cld
pusha
add
mov
gs
add
mov
mov
cmp
xor
mov
inc
aas
push
lods
rclb
clc
inc
subb
sbb
add
inc
jle
aam
xor
inc
dec
xor
push
push
popa
filds
xchg
mov
jns
add
cmp
xlat
adc
daa
enter
dec
jb
mov
nop
mov
aad
add
test
inc
inc
push
add
clc
mov
add
push
in
add
sti
out
mov
xchg
dec
jae
popa
add
sub
sbb
shrb
dec
sbb
scas
addl
or
dec
fldenv
adcb
test
add
in
fcomp
fs
in
mov
add
cmp
xchg
mov
adc
cld
push
stos
xor
ljmp
outsl
repnz
push
popa
pop
orl
and
sti
sbb
iret
add
outsb
cmp
xor
jmp
inc
jno
add
out
pushf
xor
mov
or
arpl
inc
xchg
out
cmp
std
add
cs
fistps
or
mov
stc
sub
jns
fs
mov
jge
cs
out
repnz
push
mov
adc
inc
push
cli
jae
adcb
int3
lods
add
hlt
leave
xchg
push
sub
and
stos
addl
mov
ss
loopne
or
fcompl
adc
sti
add
mov
jne
js
dec
adc
insb
rcr
sbb
filds
clc
out
xchg
dec
scas
ret
sbb
push
aad
lods
add
stc
jle
rolb
inc
daa
fxch
gs
cmp
shlb
mov
pusha
sti
xor
leave
inc
mov
inc
addb
xlat
add
and
testb
cmp
fsubrl
std
fnstenv
or
mov
add
jnp
push
cltd
or
add
lock
cmp
and
call
js
testl
sbb
xchg
inc
shlb
cmpsb
les
xor
cld
repnz
cmp
or
jg
dec
dec
add
cmc
cmp
add
lret
jmp
mov
inc
or
mov
outsb
cld
xchg
and
nop
leave
inc
lret
dec
inc
test
addb
shlb
sub
rcrb
fcmovbe
jb
xor
jbe
movb
push
inc
adc
add
ss
mov
shll
aam
xchg
cmpsl
mov
out
mov
mov
mov
xor
fsubrs
pop
pushf
stos
subb
or
sub
adc
arpl
adc
xchg
mov
dec
mov
imul
mov
test
mov
mov
pusha
mov
icebp
ficompl
cli
add
cmp
xchg
mov
dec
adc
mov
xchg
shll
xor
test
xor
imul
mov
rcr
loope
jo
and
mov
xchg
or
or
xlat
rcl
dec
add
pop
shll
movsb
aam
js
add
xor
jmp
jns
push
or
mov
leave
cmpsl
cmp
lahf
push
lcall
cli
in
cwtl
hlt
jmp
nop
xchg
add
push
mov
lcall
cmpsb
xchg
xor
insb
cmp
mov
and
sarl
mov
iret
loopne
adc
inc
cld
mov
aas
and
shrl
pop
rcr
bound
mov
add
fstps
inc
sbb
scas
pop
popf
dec
ret
in
sub
add
xor
add
movsb
fwait
andb
into
add
fbstp
mov
push
pop
xor
xor
out
hlt
push
sub
jmp
jle
mov
xchg
out
cmpsl
test
stos
sbb
jne
mov
sub
mov
insb
cwtl
or
and
add
aam
rcr
sbb
cmp
xlat
aas
mov
dec
rorl
push
push
fcmovbe
and
push
push
rolb
add
lock
xor
bound
add
aad
ss
mov
add
jnp
push
lret
push
sub
fs
cmp
insb
loope
and
add
jp
mov
ja
jo
xor
sti
pop
sbb
pop
call
dec
shll
inc
mov
out
sbb
xorb
inc
addb
xlat
mov
mov
fsts
mov
add
rcl
imul
mov
int3
add
inc
mov
das
mov
popa
inc
pop
in
add
push
mov
movsl
mov
xor
xchg
rolb
mov
popa
cmpsb
sub
lds
ljmp
lret
add
mov
push
mov
xor
pushf
pop
mov
jnp
loop
push
loope
mov
push
mov
dec
inc
lods
js
cmpl
hlt
xor
mov
lret
aam
cmp
cmp
lods
aad
adc
cltd
push
add
sub
int
jo
loopne
and
jg
out
ret
jno
nop
popf
fdivs
add
shlb
in
push
mov
out
mov
in
add
cmc
fmul
dec
pop
jmp
add
subb
call
and
add
add
movsb
cltd
ret
jne
push
ret
and
movsb
dec
mov
pop
popa
out
out
fiaddl
ds
inc
sbb
dec
repnz
popa
push
aad
imul
insl
or
jo
sbb
sbb
fcompl
mov
mov
jp
dec
in
pop
push
or
es
adc
das
ja
add
fnstsw
mov
xor
call
scas
add
mov
dec
dec
sbb
and
aam
mov
into
je
xlat
insb
out
push
add
insl
inc
xchg
mov
mov
xor
and
mov
xor
add
fwait
inc
dec
aas
orb
or
sti
sub
sbb
jmp
mov
sub
sbb
and
adc
les
adc
and
dec
ret
sub
cmpsl
xor
mov
push
dec
sub
clc
sbb
out
jl
add
insl
jnp
cmp
adc
push
scas
xchg
popf
add
flds
icebp
mov
xchg
das
in
add
xchg
mov
jo
mov
add
adc
sub
mov
jno
addr16
pusha
inc
shll
ror
or
ret
push
std
xchg
dec
and
inc
cmp
roll
jl
jns
add
ret
dec
enter
and
cmp
sub
or
push
stos
lret
leave
add
xchg
sbb
push
sub
fldl
mov
mov
cs
or
icebp
mov
jmp
jne
inc
sbb
rolb
mov
sub
xchg
pusha
push
fwait
popa
dec
addl
sub
add
cmpsl
add
stos
inc
add
jbe
mov
lcall
jns
pop
test
iret
pop
mov
lea
xor
cmp
cmp
mov
test
dec
add
xor
sbb
mov
xchg
in
sub
mov
sub
mov
dec
cmc
pop
fwait
add
movsb
cs
add
push
shr
push
in
jno
aam
adc
push
std
push
test
push
add
dec
cmp
xchg
lahf
rorl
mov
cmp
adc
cmpsl
add
fidivrs
add
cmp
jo
jge
push
inc
cmp
je
xor
adc
xrelease
inc
bswap
shrb
cmpsb
sub
cmpsb
cmp
ss
outsb
pop
aad
lret
push
subb
jp
or
lods
push
add
mov
push
fimull
inc
jmp
push
add
sahf
dec
rclb
xchg
jne
lret
nop
je
dec
jbe
sub
in
call
pop
test
imul
stc
add
icebp
jno
add
pop
mov
add
mov
cltd
add
inc
in
and
add
daa
pop
jg
mov
cmp
mov
cli
ja
dec
int3
xchg
int3
add
add
cmp
rcrb
cmp
push
mov
popf
xchg
adc
rolb
lahf
mov
jbe
pop
ljmp
rorb
in
sbb
push
sysenter
jbe
out
andl
incb
jns
dec
inc
add
or
xor
lahf
add
scas
jnp
jno
out
or
mov
pop
push
or
push
out
push
jae
mov
mov
loope
add
push
adc
cld
jg
or
inc
and
inc
out
or
xchg
cmp
mov
xchg
pop
idivb
mov
sarb
stc
arpl
xlat
add
push
shlb
add
xchg
mov
adc
stc
fs
xchg
ljmp
add
jne
ss
arpl
test
inc
adc
or
in
insl
aas
mov
add
ret
and
or
xlat
add
fwait
push
aam
dec
xchg
add
sub
dec
stc
insb
inc
andb
jmp
dec
icebp
sarb
pop
mov
and
inc
fs
xchg
ja
arpl
std
lock
cli
sub
and
inc
jle
inc
mov
dec
adc
dec
mov
xchg
lock
push
hlt
add
and
jno
and
mov
inc
inc
cmp
ret
add
mov
mov
sbb
xchg
mov
sub
mov
ds
sub
inc
lret
rorl
add
add
addr16
out
jns
pusha
add
jmp
mov
xchg
pusha
inc
xor
pop
pushf
push
test
mov
outsl
jge
into
ror
cmp
icebp
in
mov
xchg
jae
scas
jp
pop
cli
and
push
loope
adc
jno
sub
insb
inc
adc
dec
cmp
int
insb
shl
cltd
xor
or
adc
faddl
fildl
mov
and
cmovne
jecxz
notb
jl
inc
fmull
or
inc
subb
or
dec
mov
in
incb
jp
clc
aas
pop
aam
or
cmp
add
pop
loop
shlb
aas
mov
sahf
mov
sub
sbb
pop
push
mov
push
or
mov
shr
das
push
mov
jb
xor
enter
mov
scas
gs
lock
pop
sub
push
xchg
ret
repz
cmp
icebp
dec
xchg
add
and
fdivs
leave
jb
dec
cmpsb
and
test
add
sub
jnp
xchg
aaa
and
shll
xchg
mov
repnz
vmovsd
mov
jg
js
jnp
add
subl
mov
mov
mov
adc
mov
sbb
arpl
and
push
pop
add
loope
jmp
or
xor
sbb
mov
push
mov
sub
and
add
cmpsl
mov
cld
or
xor
adc
aad
add
or
cmp
ljmp
mov
stc
ja
adc
jecxz
inc
jno
mov
sub
hlt
inc
dec
or
mov
call
pop
dec
mov
inc
fucomp
in
or
ret
add
stc
dec
rcll
push
mov
add
repz
inc
adc
iret
mov
push
loopne
or
jecxz
mov
cmpsb
test
dec
xchg
add
adc
je
cmp
mov
inc
sarb
add
cmc
int3
insb
xor
xchg
inc
mov
and
out
add
mov
insl
data16
or
mov
add
mov
dec
int
cmp
lds
rolb
fbstp
push
mov
fwait
es
and
dec
mov
push
push
mov
xor
lds
into
icebp
cmp
aam
pop
cmpsb
add
jne
push
jl
mov
sub
or
push
fldenv
iret
xor
in
dec
popa
shlb
sahf
insb
add
jne
test
xor
cmp
adc
cmp
push
rclb
sub
xchg
vpsllq
jns
out
fcoms
jo
xchg
dec
fldcw
mov
gs
shlb
int3
mov
sub
ret
sub
sbb
fistps
lea
add
data16
mov
cmp
add
hlt
aam
and
adc
add
fmul
or
adc
mov
iret
popf
fnstenv
and
inc
movsb
dec
adcb
mov
jb
and
dec
xor
cmpsl
pusha
cmp
add
add
repnz
roll
sub
push
inc
fsts
ljmp
and
sub
or
adc
in
cmp
xor
add
cmp
fisubs
add
jo
pop
sbb
push
popf
rcll
and
jo
and
dec
sti
scas
mov
fwait
out
add
pop
xlat
jmp
push
push
roll
movsb
jge
popa
cmpsb
add
adc
add
stc
cmp
xchg
cmp
fcmovnb
mov
pop
es
jg
aad
test
or
xor
loop
add
mov
sbb
sub
loopne
leave
cmp
icebp
sti
fldl
pop
and
mov
aam
mov
iret
loop
jbe
ret
or
push
pushf
mov
xor
cmpsl
jb
mov
test
cmp
dec
mov
jne
fmuls
mov
clc
inc
and
pop
stos
mov
and
dec
mov
jge
and
cmp
pop
xorb
adc
dec
sti
and
mov
mov
out
inc
push
out
sti
shlb
jnp
jns
fmull
hlt
in
dec
and
sbb
imul
sbb
xchg
daa
aas
cmp
stos
imul
pop
leave
pusha
add
sbb
fnstsw
add
mov
push
imul
dec
cwtl
leave
repnz
sub
push
xchg
in
jl
add
and
push
and
addl
fimull
xchg
xchg
insb
and
inc
mov
jno
push
cs
out
adc
test
add
push
out
pop
dec
mov
jmp
push
xor
and
out
inc
and
sti
inc
scas
add
xor
dec
xchg
movsb
and
fdivrs
or
insl
lock
mov
pop
lds
flds
mov
sub
pop
sti
stos
rol
cmp
inc
loopne
pop
dec
push
pcmpgtb
ficoml
ret
neg
add
in
aas
mov
lock
sub
mov
add
and
mov
inc
aam
test
insb
mov
push
add
loopne
inc
xchg
addb
push
fnsetpm(287
std
imul
outsl
gs
rorb
sub
mov
mov
cmp
add
push
lret
pop
mov
mulb
js
repz
dec
adc
testl
shrl
xchg
popa
sti
push
fcmovbe
or
loopne
jl
add
ds
jae
adc
orl
cmp
xor
mov
out
mov
add
int3
inc
push
mov
rorb
in
arpl
cwtl
dec
mov
cmp
push
xchg
sbb
nop
in
js
lahf
add
iret
into
adc
push
xor
mov
xchg
jge
add
aaa
pop
xor
push
add
data16
lret
shlb
sub
xlat
pop
pop
mov
cld
cmp
mov
cmp
fs
fwait
mov
inc
ss
ss
cli
outsb
call
pop
and
xchg
adc
mov
push
push
ja
xorb
and
ss
in
sbb
scas
mov
pop
ret
pop
movsb
and
sbb
ds
or
jnp
push
fs
inc
cmp
fistl
test
add
pop
inc
dec
mov
add
mov
fildll
mov
lock
test
and
stos
shrb
mov
add
sbb
leave
in
push
dec
mov
jns
mov
addb
add
pop
mov
inc
adc
push
pop
sti
xchg
pushl
mov
fstps
std
test
push
fs
mov
mov
cmp
pop
mov
mov
push
fadd
aad
rorb
jno
dec
shrl
mov
or
sbbb
sahf
push
xlat
or
repnz
call
in
and
inc
cmp
imul
xchg
push
adc
cmp
adc
test
jbe
or
and
mov
add
push
pop
mov
xchg
dec
pop
fs
add
es
lock
lods
push
int
mov
xchg
pop
xchg
addb
add
xchg
fsts
push
repz
pushf
mov
inc
dec
lock
dec
mov
mov
jne
call
adc
les
mov
cmpsl
and
fmuls
in
out
jp
push
pop
cli
test
sbb
js
bswap
mov
popa
dec
in
add
frstor
jnp
xchg
pcmpgtb
cs
jle
xlat
inc
mov
add
push
cmp
ljmp
pusha
cmp
adc
sub
in
lcall
fs
xor
jno
mov
pop
loop
lock
dec
addb
add
push
shll
cmpsb
dec
adc
add
mov
aad
xchg
push
xchg
mov
pop
roll
lret
dec
adc
jne
xchg
xchg
nop
loopne
jp
lret
cmp
sub
add
je
mov
pop
xchg
adc
jg
mov
js
es
push
add
js
add
sbb
out
add
popa
or
push
js
add
cmpsb
pop
je
fcmovbe
es
jmp
ficoms
adcb
stos
in
movsb
pop
xchg
sarb
or
ljmp
call
pop
push
mov
and
shrb
sbb
mov
les
jae
stc
repnz
mov
iret
in
loop
fdivs
aad
in
and
jl
add
jecxz
rcrb
test
in
add
data16
stos
xorb
mov
jne
xchg
mov
cmp
or
andb
addr16
xor
jp
mov
dec
add
lret
pop
bound
xchg
shl
pop
xor
cmp
movsb
lods
add
sbb
dec
mov
test
jl
and
or
daa
add
xor
jle
hlt
fs
nop
incb
xchg
cli
ja
dec
dec
xchg
sbb
add
add
dec
mov
mov
enter
fbstp
add
out
push
sbb
cli
in
loop
or
mov
lock
sahf
add
cli
test
ret
out
mov
mov
sub
call
pushf
add
fiadds
repnz
je
int3
mov
js
add
jae
dec
leave
xor
and
pop
xchg
mov
imul
pusha
nop
jp
arpl
ror
sbb
imul
idivb
inc
adc
jmp
or
and
sub
imul
push
hlt
dec
cld
jo
add
ja
outsl
mov
push
add
pop
outsb
adc
lods
ja
mov
push
or
mov
ja
adc
mov
addb
xchg
or
mov
movsb
pop
cmc
add
inc
rcl
dec
popf
xchg
test
mov
repz
add
jns
add
xor
add
sahf
adc
add
inc
movsb
xchg
mov
mov
push
xor
sub
pop
fcompl
test
int
mov
lret
jmp
xor
mov
clc
lcall
inc
fstl
add
movsl
ret
cwtl
mov
testb
lret
fidivrs
shlb
add
mov
jge
pop
push
sbb
adc
mov
insl
cmp
pop
push
dec
xchg
frstor
mov
js
adcb
fmuls
aad
ja
cmp
mov
add
push
cmp
icebp
add
or
in
sbb
shrb
test
lahf
das
push
rorl
cs
cltd
rolb
movl
movsl
inc
push
add
loopne
push
ljmp
inc
fldt
lods
dec
and
or
negl
add
outsl
or
sbbb
mov
mov
hlt
pop
xchg
pop
lock
ds
and
dec
int3
loop
int3
mov
lock
adc
jl
pop
mov
xchg
xor
es
in
adc
idivb
sti
xor
add
jne
jo
pop
rcll
push
and
pop
iret
scas
mov
fcom
mov
pop
xlat
adc
and
cmp
iret
rclb
ja
cmpsb
popa
mov
pop
push
cmpsl
xchg
and
pop
mov
add
mov
mov
jmp
dec
aam
push
pop
std
dec
punpckhdq
test
or
adc
mov
mov
lret
mov
jne
adc
mov
inc
cwtl
sarl
add
inc
or
mov
jle
imul
cmp
test
mov
iret
fcom
adc
imul
fs
insb
sbb
gs
adc
sub
or
cwtl
xchg
andb
xor
jl
or
xor
add
mov
fdivrs
add
lret
cmpsb
enter
mov
fcompl
add
jbe
push
sbb
xchg
mov
mov
add
mov
pop
inc
ud2
push
pop
adc
pushf
cmp
push
add
hlt
xchg
and
int3
mov
jp
imul
sub
cwtl
rdmsr
pop
cld
call
rolb
push
repnz
mov
int
push
push
xor
add
xchg
push
mov
add
push
cmp
lock
fadd
mov
movsb
mov
call
push
and
add
mov
insb
dec
mov
adcb
inc
push
int3
clc
das
cmp
out
neg
push
jecxz
add
hlt
bound
sbb
inc
flds
sub
add
fcmovnb
ret
jg
cmp
and
fs
xchg
and
lock
orb
enter
sub
mov
dec
je
leave
lock
stc
xchg
add
inc
xchg
orb
pusha
sarl
cwtl
push
pop
dec
cmpsl
mov
cmp
ret
inc
roll
inc
cmpsl
cld
push
sahf
in
lret
add
incl
fwait
sbb
lock
sbb
mov
pusha
mov
sub
dec
imul
sbb
push
adc
inc
jp
je
nop
or
push
mov
add
into
xor
lock
data16
shll
mov
pop
jno,pt
cltd
call
push
pop
add
push
cwtl
cmp
mov
xchg
add
inc
sbbl
mov
mov
xchg
shlb
movsb
addl
cmp
sub
or
nop
loopne
or
dec
sbb
and
les
cmp
add
cmpsb
jo
adc
pop
cmovs
dec
dec
pmuludq
jmp
fstpt
jg
add
lret
mov
dec
inc
in
into
lahf
shrb
pop
pop
push
loope
iret
shl
dec
das
and
xchg
mov
ret
adc
or
scas
dec
jae
jmp
pop
nop
mov
add
fs
and
pop
addr16
stos
into
add
faddl
shlb
imul
mov
add
outsb
loope
lock
add
lahf
int
xor
stc
repnz
loope
xchg
cs
sub
cwtl
jo
mov
adc
push
push
or
fiaddl
out
std
loope
mov
push
adc
dec
add
cs
mov
cmpsb
mov
out
lods
call
mov
sbb
xchg
lcall
inc
mov
pop
outsb
int3
add
aaa
pop
rolb
jecxz
movsb
pop
cs
in
add
mov
sti
add
push
lock
dec
jno
pusha
fldcw
es
push
sbb
je
cmp
and
lods
das
or
pop
out
int3
add
stos
mov
jbe
fs
je
dec
lock
mov
inc
dec
push
out
out
xor
orb
jl
fisttpll
xchg
loop
sarb
add
mov
or
test
sahf
add
notl
jae
stc
mov
or
test
icebp
gs
inc
rcrl
sti
jae
add
ja
jns
and
pop
lret
xchg
fldl
lahf
cmp
add
adc
scas
ret
push
out
aam
cmp
mov
cmp
test
inc
xchg
pop
add
std
lock
ds
push
mov
push
lret
ss
or
movsb
test
cmp
out
fnstcw
push
adc
aas
xchg
mov
mov
ja
push
and
xchg
movsl
fnstenv
pop
pop
xchg
lds
lea
xor
sbb
mov
pop
pop
push
add
clc
sub
mov
add
jbe
dec
rorl
pop
ror
xchg
pop
out
mov
and
into
into
andb
mov
cwtl
rcll
icebp
fsubl
jbe
sbb
stos
das
mov
xchg
pop
test
sahf
dec
and
inc
xorb
mov
xor
arpl
sub
sub
and
mov
dec
pop
xchg
push
add
out
add
xchg
mov
add
out
movsl
or
lds
int
add
movsb
mov
sbb
testl
push
mov
xchg
pop
inc
xchg
xchg
add
das
push
loop
adc
sbb
lahf
ja
add
jae
cmpl
pushf
xor
movsl
das
movl
addl
mov
adc
ja
rorl
or
lret
mov
add
lds
les
fsubl
out
or
mov
rcrl
push
adc
cltd
pop
loopne
push
fisttps
mov
jl
inc
pop
cmp
jo
push
cld
test
outsl
pushf
jne
cmp
xor
and
pop
push
pop
cmp
andb
or
or
mov
mov
xor
sub
mov
add
add
mov
ljmp
or
push
addb
cltd
or
roll
rolb
dec
add
mov
ret
aas
push
add
stc
test
pop
icebp
xor
push
push
add
dec
inc
std
or
jo
add
loope
andb
or
and
adc
xor
pusha
push
sbb
mov
mov
dec
or
adc
test
jmp
into
fcomps
into
sub
xchg
cli
sbbb
or
leave
clc
xchg
pop
dec
jbe
jbe
or
xchg
sbb
loopne
add
rcrl
pushf
add
fimull
and
aaa
or
leave
push
add
xor
popa
and
loope
pop
sbb
sbb
xorb
inc
cmp
cltd
testb
std
add
outsl
xchg
mov
jl
cltd
or
add
xchg
and
call
add
jbe
jno
movsl
popf
addb
jo
pop
mov
shll
dec
mov
cs
nop
mov
in
sbb
jne
xor
inc
jge
add
xchg
add
rorb
dec
jbe
cmpb
cmp
stos
clc
dec
mov
mov
test
adc
add
sub
mov
rorb
xchg
mov
sqrtps
cli
mov
ljmp
hlt
inc
add
stos
push
dec
cwtl
notb
dec
dec
cmp
or
cmp
xchg
xchg
lods
cmpsb
loopne
mov
ja
adc
mov
shlb
dec
add
sub
sub
pusha
test
xor
jp
xchg
add
mov
mov
cmp
leave
pop
mov
mov
mov
xchg
xchg
xor
mov
pusha
popa
push
int3
fldcw
lods
sub
sbb
inc
adc
outsl
push
push
dec
icebp
xlat
pop
and
jge
pavgb
add
or
jbe
dec
add
cmpl
fsubl
nop
and
lea
fsubrl
pusha
ret
cmp
cltd
jecxz
or
imul
xchg
imul
xor
pop
cld
or
jno
aas
push
call
mov
mov
pop
adc
xchg
mov
cld
or
pop
cmp
ret
lods
mov
aam
sub
clc
xchg
nop
xchg
loop
cmp
adc
xchg
adcb
inc
inc
out
add
mov
rcll
mov
add
sub
lret
pusha
xlat
roll
aam
cmpb
out
jecxz
jbe
cmp
and
jl
cwtl
movb
or
sbb
add
leave
sub
out
and
hlt
cmp
sub
fwait
and
inc
xor
cmp
adc
lea
pop
jne
rolb
insb
xchg
lcall
pop
jno
sub
or
sbb
sub
adc
and
and
icebp
cltd
pop
jo
mov
xchg
push
call
adc
or
push
addr16
loop
dec
ret
mov
roll
out
addr16
rcll
in
add
cmp
scas
jl
movsb
test
out
mov
ja
inc
adcl
fldl
divl
test
inc
jle
xchg
outsb
cld
stc
call
shll
inc
add
mov
add
adc
fucompp
sub
shll
mov
hlt
adc
rclb
cmp
pop
fcomps
test
adc
dec
mov
push
jbe
mov
popa
imul
cmp
mov
dec
adc
je
cmp
cwtl
fcoml
cmp
lcall
aad
movsl
fadds
in
add
inc
rolb
adc
xor
xor
out
xchg
sbb
and
push
inc
pop
insl
clc
or
scas
test
xchg
cmp
mov
xchg
repnz
or
jl
or
aaa
xor
mov
sub
movsl
push
mov
pop
pop
xchg
data16
jl
jp
scas
paddb
in
push
dec
daa
movsl
outsb
add
mov
xchg
push
add
outsl
dec
or
in
loopne
mov
sbb
int3
add
add
test
in
scas
mov
and
sub
add
or
push
push
scas
add
mov
or
cltd
in
xchg
adc
test
pop
lods
shlb
into
add
aam
mov
xchg
das
inc
adc
test
out
or
out
ror
xchg
imul
jecxz
fbld
jno
cltd
jbe
push
add
insl
cmp
add
lods
int3
mov
cmp
push
lea
dec
sahf
and
nop
clc
pop
pop
xchg
adc
sub
icebp
cwtl
lock
bound
mov
rcl
add
mov
std
rcll
add
push
xlat
xor
test
cs
dec
add
pop
lods
cmp
mov
shll
sbb
dec
lret
mov
bound
and
xchg
add
mov
cmp
lret
es
pop
add
lret
inc
jns
in
mov
dec
data16
outsb
psrad
add
cmp
into
inc
dec
mov
pop
or
clc
dec
mov
pop
sbb
jmp
loope
lods
int
push
insl
es
xor
add
loopne
leave
stos
sbb
test
jl
adcb
add
mov
jge
imul
mov
xor
xchg
pop
push
pop
cmp
sbb
and
sub
aaa
or
xor
mov
xchg
inc
sub
lock
add
jecxz
or
xchg
aaa
mov
fnstsw
testb
loope
and
je
inc
and
dec
iret
dec
xchg
and
and
sbb
lods
repnz
and
and
adc
mov
inc
mov
mov
loop
jecxz
loope
xchg
movsl
fisubl
lret
aad
xor
cmp
inc
mov
inc
add
and
out
jmp
adc
lds
add
mov
pusha
clc
les
aas
lret
xor
fists
pop
xlat
inc
add
pop
repz
loop
mov
lods
jle
into
call
and
int
call
mov
push
fidivs
push
jno
shrb
mov
mov
jg
cmp
dec
xchg
jnp
or
pushf
fimull
jo
mov
lcall
call
arpl
cmpsl
sti
aam
gs
test
js
add
rcrb
int3
add
jno
outsb
push
insb
sahf
push
pop
nop
js
and
pusha
aad
rcll
cwtl
xchg
jns
jb
jno
sub
jae
cmp
ds
or
xor
call
aaa
add
roll
jge
adc
or
repnz
mov
in
xchg
inc
pop
xorb
rclb
movsl
jne
jns
adc
dec
fisttpl
dec
xor
sub
push
daa
push
je
popf
ss
jbe
add
or
cs
mov
xor
icebp
je
cs
inc
popf
test
cmc
cli
add
nop
add
mov
pop
data16
hlt
xchg
mov
movb
stc
add
shrl
xchg
enter
add
in
push
testb
stos
popa
out
lods
sbb
hlt
push
std
mov
ficoms
enter
dec
or
fnsave
ret
loopne
movsl
out
add
rol
sub
and
mov
call
push
les
push
jne
xchg
shll
adc
pushf
repz
sbb
mov
hlt
aam
enter
fxch
scas
sqrtps
iret
mov
mov
das
loopne
lock
sbb
daa
cltd
lods
xchg
mov
sti
and
pop
add
in
and
mov
mov
pop
or
cmp
popa
clc
rdtsc
test
or
mov
je
sbb
ljmp
jmp
in
jle
mov
inc
xor
xchg
clc
repz
shll
mov
add
or
test
add
jmp
add
xchg
cmp
testb
rcrl
mov
cmp
subl
adc
xor
movsl
shll
dec
cmp
sub
xor
mov
add
dec
shll
add
fs
mov
test
mov
stc
jo
jbe
push
jns
outsb
insb
imul
cwtl
add
pop
outsb
punpcklwd
sbb
sub
xchg
inc
pushf
enter
add
push
add
addl
test
or
mov
aas
je
lock
in
mov
cmp
add
cmp
sub
nop
test
pop
dec
sub
lret
ja
add
cltd
aam
and
inc
mov
cld
mov
and
push
add
and
lcall
insb
dec
inc
jbe
subl
cmp
stos
mov
cmp
cmp
out
adcb
clc
aad
inc
push
mov
ror
or
dec
cmp
add
jecxz
sbbb
sub
add
dec
int3
lret
inc
inc
mov
add
fprem1
pusha
insl
add
and
scas
xchg
shlb
mov
dec
jo
xchg
mov
repz
std
inc
fildl
jbe
or
or
call
fsubrl
cmpsl
xor
in
or
test
movsl
jno
and
loope
shll
cmp
dec
out
or
out
pushf
in
dec
sahf
mov
or
aas
aam
lcall
arpl
inc
xorl
movsl
xchg
pop
ss
ficoms
int3
pop
hlt
imul
mov
sbb
inc
mov
nop
clc
lret
mov
sub
cwtl
mov
pop
jns
fs
cwtl
push
das
nop
xor
and
xor
je
incb
sbb
pop
dec
testb
cmp
mov
fucomip
or
mov
lds
mov
mov
mov
outsb
pushf
test
add
xchg
fadds
mov
push
and
xor
pop
mov
add
add
add
and
or
mov
add
add
insl
icebp
jg
and
fisubrl
cmp
adc
rol
add
and
adc
mov
cwtl
add
popa
add
and
push
call
cli
out
sub
jmp
sub
aaa
popa
xor
clc
nop
dec
jns
dec
or
pop
inc
cmp
repz
pop
adc
das
test
cmpb
mov
cmp
daa
xchg
fisubs
ret
add
mov
int
xor
xchg
mov
loop
xchg
mov
pop
pop
mov
and
pop
cmp
inc
xchg
iret
out
push
add
fwait
mov
sub
jnp
add
jg
lock
js
mov
adc
fdivs
add
fstl
cltd
dec
mov
pop
psadbw
add
int3
int3
xchg
and
movsl
ret
enter
fsubl
and
into
pop
xor
xchg
or
add
rcrb
push
xchg
adc
repnz
dec
and
aad
out
movsl
nop
or
mov
insl
loop
popa
add
es
sub
stc
push
shrb
and
dec
push
push
mov
add
fsts
hlt
movsb
or
or
sbb
fcomps
adc
sub
inc
clc
add
mov
cmp
push
mov
in
mov
imul
pop
sub
sbbb
jo
and
out
jl
rcr
pop
out
add
ror
jae
cmp
call
cmp
daa
mov
or
push
xlat
xorl
cmpsb
push
add
ret
jecxz
xor
jns
sub
cmp
in
in
mov
and
jae
adc
call
cmp
dec
or
add
fcompl
loopne
cltd
cmc
sbb
or
sub
push
imul
sub
jmp
into
xor
arpl
test
xchg
lret
xchg
daa
adc
addr16
adc
outsl
dec
repnz
add
inc
pop
jmp
cld
lahf
add
mov
ja
add
add
aad
cmp
daa
add
inc
cld
push
lcall
mov
in
add
xor
add
daa
rolb
mov
rcrb
fwait
jns
add
lea
stos
adcb
cmc
in
inc
jbe
ret
inc
or
lret
rol
or
xchg
jae
jbe
sub
mov
enter
cmp
xchg
mov
enter
pushf
mov
dec
ja
add
sti
shll
cmpsl
aas
es
mov
xchg
and
add
jbe
push
adc
lods
mov
mov
jno
push
out
xor
cmp
pop
push
adc
imul
add
sub
mov
mov
jg
sub
pop
cmp
mov
xchg
pushf
stc
fstl
das
add
xchg
mov
je
cmp
xchg
in
pop
addr16
add
test
sbb
jbe
test
push
enter
into
enter
xor
nop
and
hlt
xchg
roll
cltd
jbe
mov
jo
adc
and
ljmp
bsr
sub
mov
repz
sub
hlt
mov
jno
pop
faddp
sahf
pop
les
cmpsb
outsl
fcompl
and
cli
hlt
es
pusha
adc
fsubr
add
pop
jp
pop
push
sbbb
mov
repnz
push
adc
out
subw
pushf
clc
mov
test
or
insb
rolb
test
ds
dec
cwtl
test
or
inc
jge
data16
rcrl
sub
push
stos
iret
and
mov
inc
and
lods
lock
dec
xchg
or
and
fsts
ret
movntps
sbb
in
dec
add
dec
or
dec
fsubs
mov
rorl
enter
sbb
sub
jp
mov
cmpsb
loop
test
sbb
jbe
xor
xorl
or
movsb
and
out
popf
xchg
push
int3
add
sti
pusha
add
push
dec
add
push
dec
add
dec
