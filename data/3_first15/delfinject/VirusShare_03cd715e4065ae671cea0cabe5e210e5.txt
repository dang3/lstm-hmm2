out
mov
add
inc
outsl
outsl
insb
gs
outsb
add
add
add
inc
popa
insb
jae
add
jb
lea
sub
add
push
mov
jmp
push
nop
inc
add
dec
outsb
je
addr16
sbb
shlb
add
jns
insb
es
outsl
jb
notb
addb
inc
movsb
imul
jnp
add
cwtl
or
push
je
sub
push
in
add
and
add
add
sub
xor
int
cmp
cmp
and
cwtl
insl
in
sti
jg
pop
push
dec
bound
arpl
pop
sbb
loopne
or
insl
pop
sbb
or
or
mov
popaw
arpl
lds
leave
inc
add
inc
and
clc
jmp
adc
fiadds
cmp
dec
or
int3
jl
push
dec
dec
mov
xchg
cs
add
push
jno
xorb
or
mov
out
addb
lea
push
and
notrack
enter
fcompl
sarb
fdivl
lods
test
mov
pushf
cwtl
xchg
nop
pushf
pushf
pushf
pushf
mov
mov
lock
call
jl
and
cld
pushf
pushf
pushf
fmull
clc
je
insb
fistps
push
add
mov
or
push
call
sub
je
movzwl
in
mulb
mov
ss
pop
ret
pop
pop
leave
leave
leave
leave
push
push
dec
dec
fcmovne
leave
inc
inc
hlt
mov
cmp
jne
push
jle
push
add
or
jmp
lahf
std
xor
mov
jmp
and
adc
mov
fwait
ss
add
mov
push
roll
push
ljmp
or
inc
cmp
jne
add
pop
add
add
or
jnp
xor
xchg
push
push
sbb
fwait
out
out
repnz
jl
incb
jmp
ja
add
inc
add
adc
mov
jbe
adc
and
out
push
jnp
mov
pop
pop
mov
push
testl
adc
dec
cmp
pop
repz
repz
dec
add
loopne
or
popw
push
push
outsl
mov
lock
mov
jbe
push
pop
push
add
pop
mov
lret
add
cmp
jne
xor
add
inc
inc
or
or
pop
jmp
add
jo
outsl
or
shlb
cmp
aaa
sbbl
mov
mov
xor
je
pusha
adc
pop
pop
jo
jbe
insb
rcr
hlt
or
aam
push
mov
jecxz
addb
pop
sub
add
in
loopne
fbstp
push
and
push
add
movhps
ds
aas
pop
push
cmpl
push
push
add
dec
cmpb
les
or
xor
aas
out
pop
mov
add
sub
mov
enter
jle
dec
or
addr16
pop
jmp
dec
roll
es
inc
cmp
pop
add
xchg
xor
mov
xchg
pop
adc
jge
mov
or
adc
pop
xchg
test
add
add
and
push
add
mov
test
insl
fadds
je
xor
es
adc
cmp
dec
ficoms
push
pop
ja
sub
push
pop
subb
sbb
fildll
lahf
push
pop
icebp
fmul
mov
push
push
dec
pushf
sbb
scas
mov
arpl
sub
repz
mov
mov
push
adc
and
adc
pop
cmp
xor
in
or
pop
pop
cmp
lcall
jo
ja
and
jae
or
lods
mov
inc
push
insb
cwtl
jbe
or
dec
jo
idiv
std
test
or
add
mov
jno
clc
xchg
insl
cmp
jne
inc
pop
xchg
ja
mov
je
jno
inc
sub
mov
pusha
push
inc
mov
fcomip
mov
je
mov
ret
mov
and
mov
cmp
loop
mov
or
aad
stos
adc
adc
fdivs
jmp
push
add
add
xor
cmp
or
jmp
pop
out
cmp
jae
sbb
sti
cmp
push
push
es
dec
push
aad
sahf
loopne
jmp
stc
pop
mov
das
add
sub
jnp
ljmp
popa
in
insb
jnp
nop
inc
add
cmp
add
data16
adc
add
outsb
jl
loopne
adc
popf
xchg
hlt
inc
int3
in
jge
mov
rol
sbb
adc
inc
cmp
jg
mov
xor
mov
testl
pop
add
in
cmp
fildl
inc
sahf
fdiv
jmp
icebp
shrb
jne
add
in
jno
lea
and
dec
cwtl
push
pop
sti
fstl
sub
shl
cmp
sbb
push
cli
xchg
or
pop
or
pop
out
mov
sbb
or
insb
push
sarb
jne
or
or
pop
mov
sub
fwait
push
add
inc
or
or
dec
lock
mov
cmp
sub
sub
or
sub
xchg
test
push
inc
out
rorb
xor
stos
mov
add
inc
push
xchg
loopne
jg
jmp
stc
cmp
jne
pop
jg
inc
js
jae
jl
in
cmp
or
inc
lock
fcmovne
xor
pop
cmpsl
jl
sub
leave
lea
cli
mov
adc
jge
cmp
pop
rcrb
pop
call
cwtl
or
sbb
cmp
jne
cmp
rolb
cwtl
popa
aam
adc
ja
and
mov
sub
mov
push
push
or
pushl
mov
push
mov
test
adc
inc
jle
and
adc
add
fbstp
push
sub
cmp
mov
in
adc
inc
es
jl
in
movl
aaa
pop
loope
push
cld
js
adc
adcl
push
testb
pop
pop
pop
fs
negl
cmpsl
adcb
ret
push
sub
jmp
mov
popa
pop
pop
scas
test
pusha
mov
push
out
call
push
into
push
inc
shll
and
pusha
scas
or
mov
add
iret
xor
jmp
or
inc
movhps
cmp
jmp
fdivr
cmpl
sbb
mov
mov
cmp
or
pop
pop
je
pop
pop
cmp
clc
cmp
adc
adc
cli
into
jg
adc
jecxz
fdivs
test
jns
ret
cli
add
ds
hlt
jmp
sub
sbb
mov
xchg
mov
adc
mov
sbb
jmp
push
mov
pop
and
adc
fimuls
cmp
add
adc
inc
cmp
xchg
movl
pop
or
dec
stc
add
sub
lea
mov
cmp
lods
shr
adc
movl
or
xor
sub
add
pcmpeqd
add
leave
jle
int3
inc
or
mov
ljmp
ljmp
je
stos
fucomip
adc
jl
or
insb
rolb
jo
call
ret
inc
push
push
push
xchg
dec
subl
or
jnp
std
fiaddl
enter
ret
aas
sub
pop
or
testb
je
mov
lahf
icebp
jb
sub
xor
jo
xchg
lea
pop
add
les
out
fdivs
testb
and
fsubs
test
aaa
mov
sub
inc
xor
andl
mov
pop
cmpsl
hlt
pop
imul
pop
mov
out
dec
in
js
mov
xchg
scas
rorb
xor
mov
sub
push
movl
dec
cmovge
or
dec
adc
xor
inc
add
mov
xchg
cmp
aad
sahf
loope
fisttpll
xor
jp
mov
pusha
movl
lea
rolb
mov
test
mov
ret
rcrl
mov
mov
mov
add
or
movsb
sti
mov
pop
test
jo
sar
loope
xchg
in
mov
lret
and
testb
and
xchg
adc
mov
mov
inc
lods
or
or
cli
add
or
pcmpeqb
popf
adc
cltd
scas
lock
addb
mov
mov
aas
call
hlt
lret
adc
enter
sbb
add
sbbl
outsb
pop
movsb
test
test
movsl
mov
dec
adc
jne
test
dec
pop
mov
hlt
fdivs
xchg
mov
add
or
insb
mov
fisubl
jae
sysenter
sub
cmp
jne
addl
fisubrs
paddsb
std
roll
mov
lea
xor
enter
mov
pop
or
mov
mov
je
ret
inc
mov
inc
and
test
popa
lods
je
shlb
mov
or
pop
adcb
sub
sbb
and
cmpl
or
out
add
insb
mov
jno
mov
sbb
jne
sub
cmp
pushf
jle
inc
fs
mov
and
or
bound
push
cmp
pop
jbe
stos
les
pop
je
cwtl
jbe
push
pusha
mov
xchg
pusha
addb
mov
cmp
mov
jmp
adc
cmp
mov
jl
push
fmull
cmpl
pop
adc
jp
sbb
sbb
sub
sub
jl
add
jmp
mov
pusha
add
mov
and
outsb
mov
rcll
or
pushf
scas
dec
jne
lahf
orb
sub
aad
add
aad
pop
add
in
push
mov
dec
or
test
les
add
xlat
inc
cld
adc
or
pop
or
insl
clc
and
cmp
add
pop
push
testl
push
clc
jb
cwtl
jb
clc
stos
mov
fsubs
aam
push
pop
in
push
sub
sbb
mov
add
push
jne
aaa
jmp
notl
mov
rorl
pop
push
insb
mov
fsub
push
pop
pop
push
mov
and
test
test
fsubp
shrl
jg
sub
cs
mov
sbb
test
mov
mov
jno
mov
inc
faddl
in
or
shl
push
add
sbb
jne
out
xchg
pop
dec
mov
insb
pop
pop
scas
ret
inc
enter
pop
clc
inc
sub
in
out
push
adc
jne
cltd
or
sub
or
sub
mov
add
or
bound
lock
test
rorl
lcall
lahf
ret
std
lock
or
mov
lods
pop
jl
inc
push
sbb
and
in
pop
pop
stos
jle
dec
out
xor
push
lock
test
je
sub
push
addr16
add
or
lahf
jbe
cmp
or
jmp
push
repnz
pop
aaa
outsb
or
orb
or
test
sub
pop
pop
push
mov
cmp
shrb
cmp
pop
mov
jge
loope
pop
xor
out
xchg
lret
cmp
add
sbbl
add
sbb
scas
fdivl
sub
lds
adc
sub
outsl
push
and
sbb
inc
mov
add
adc
or
aad
std
mov
lret
fwait
std
int
push
sub
mov
cltd
cmpsl
mov
sub
jne
divps
cmp
jg
sub
add
sbb
out
xor
leave
in
lock
fsubrl
movb
or
and
mov
fdivs
fdivs
das
mov
add
les
mov
lds
push
shrl
push
movsl
sub
test
das
mov
lret
dec
add
pop
dec
jl
xor
jmp
sub
sub
sub
aaa
push
adc
adc
sbb
add
sbb
xor
adc
xor
add
sbb
xchg
sbb
cmpl
mov
jmp
adcl
loopne
push
mov
push
jge
cmp
pop
jl
je
fmul
xchg
push
sbb
jle
and
popf
shrb
inc
addb
mov
incl
sbb
inc
xchg
dec
lock
jne
fisubs
mov
add
mov
push
adc
imul
inc
jno
or
ret
div
ljmp
or
shlb
mov
dec
dec
pop
or
xchg
negb
mov
ret
push
jmp
xchg
out
insl
jne
sub
bound
rolb
jp
sub
fidivrs
adc
adc
sbb
xchg
mov
xor
push
inc
adc
jg
pop
mov
dec
and
mov
into
push
or
xor
mov
out
jne
cs
sti
sbb
or
jne
icebp
sysenter
cwtl
fs
cmp
ja
mov
mov
orb
pop
xadd
mov
loopne
out
push
sbb
sbb
adc
pop
jne
xor
lret
imul
mov
or
mov
mov
push
cld
aaa
mov
sub
jg
sub
inc
add
adc
fnstsw
jg
sarl
mov
inc
rep
jmp
mov
leave
jmp
or
jmp
mov
mov
xchg
ficoms
ds
ljmp
jbe
mov
bound
divl
je
sar
js
rep
xchg
loope
scas
mov
xor
lea
xor
std
xor
sarl
ds
inc
push
push
stc
js
jecxz
or
outsb
or
xlat
insl
popf
or
daa
adc
iret
popw
sub
loop
sub
jnp
fcmovnbe
push
in
or
adc
in
or
sub
loop
fwait
orw
insb
mov
or
fldcw
pop
inc
and
roll
sbb
xor
decl
mov
jb
mov
xchg
dec
sub
jae
mov
pop
mov
shrl
pop
jb
adc
pop
or
fwait
sbb
mov
insb
enter
loopne
cmp
push
sbb
sbb
fbstp
scas
jb
or
and
int3
xlat
push
jne
call
mov
test
adc
sbb
adc
dec
dec
call
int3
jne
mov
mov
cmp
jbe
lret
mov
inc
inc
and
imul
in
sar
pushl
rorb
inc
in
add
ret
ljmp
aad
lods
pop
cmp
jne
dec
dec
mov
pop
add
fwait
negb
or
loop
push
adc
add
imul
add
push
cmp
jne
push
adc
add
adc
clc
mov
cmpsb
add
jne
add
jmp
pop
cmp
cmp
jne
shr
das
add
jmp
adc
add
mov
out
into
shr
or
pop
ret
pop
outsb
scas
cmp
shrb
mov
loopne
mov
cmp
jne
dec
dec
dec
adc
dec
sbb
pop
jecxz
or
jbe
in
int
int
loopne
data16
stos
adc
clc
ret
inc
adc
imul
bound
push
mov
mov
pop
push
add
mov
push
out
sti
stos
inc
xor
je
mov
or
je
or
je
fmulp
int
and
je
pop
je
xor
dec
push
stos
stos
shlb
dec
inc
mov
fmuls
mov
jg
sub
or
cmp
ja
lea
push
add
push
das
clc
notb
out
int
or
jge
jmp
inc
hlt
neg
jle
scas
push
mov
sub
jmp
inc
inc
jmp
mov
popf
mov
je
andb
xchg
and
xor
add
scas
leave
aam
stos
aad
mov
pop
xor
mov
xlat
mov
cmp
clc
notb
stc
sbb
icebp
jg
jb
mov
dec
jne
pop
mov
addr16
jno
gs
repz
mov
and
jbe
jl
pcmpeqd
cld
adc
lea
mov
dec
pop
lea
fldt
sub
add
je
das
and
imul
dec
gs
mov
xor
das
test
jmp
fstp
fldt
ret
in
adc
out
mov
push
add
mov
add
add
or
repnz
daa
push
ret
mov
adc
stc
enter
mov
sbb
pop
fcmovne
xchg
and
inc
mov
mov
lock
lret
es
test
out
sub
pop
jecxz
pop
stc
xchg
xor
leave
sbb
mov
stc
lahf
stc
cmp
fidivrs
call
mov
bound
outsl
dec
mov
xlat
fadds
outsb
xor
xchg
push
or
jg
push
push
int3
into
sbb
rorl
mov
push
pop
test
enter
call
mov
inc
mov
hlt
daa
lret
into
pop
inc
test
xchg
clc
js
aas
sbbl
or
mov
addr16
leave
repnz
bound
and
cld
gs
sahf
mov
mov
lods
lds
iret
decl
js
inc
mov
stos
mov
cmp
incl
test
stos
pop
out
sub
imul
divl
jl
xor
cmp
call
xchg
push
mov
inc
mov
sti
jmp
stos
push
inc
mov
push
sbb
sarb
dec
repnz
test
nop
fildl
daa
movsb
lahf
nop
inc
pop
stos
clc
scas
adc
inc
pop
pushf
mov
incl
pushf
mov
fs
aam
imul
loope
jp
iret
inc
bound
ds
push
cmpsb
scas
mov
sbb
mov
addl
cmp
xor
in
cmp
sahf
fcomip
call
and
push
movsl
mov
popa
fmull
stc
repz
mov
dec
pop
fldl
mov
push
pusha
les
outsb
bound
xor
cmp
fwait
push
dec
aam
idiv
cmp
jne
push
pop
cmp
repz
jbe
push
adc
cld
dec
xlat
hlt
movzwl
mov
test
rolb
and
push
jle
lcall
inc
hlt
movsl
imul
push
data16
add
fnstsw
mov
pop
and
sub
outsl
stos
les
and
data16
aas
or
jg
or
add
inc
push
push
inc
push
inc
pop
inc
clc
ljmp
insb
popa
outsb
fs
inc
gs
jo
imul
push
dec
popa
jae
push
popa
insb
jne
daa
fcompl
fninit
fwait
lods
jg
ret
hlt
movsl
daa
xlat
mov
adc
leave
mov
inc
fwait
into
push
lock
or
push
mov
or
dec
cld
jne
dec
mov
xor
js
or
out
jne
mov
cs
or
sbb
add
outsl
daa
inc
and
or
xor
rcrb
in
pop
aaa
jge
cmc
jnp
inc
or
fsubrs
ja
xor
sub
push
movups
mov
fadd
xor
mov
fs
sub
loopne
mov
roll
cld
ret
cmpsb
ret
jl
mov
xor
cmp
jmp
pop
sbb
mov
or
fcomps
jl
mov
jmp
cmp
je
pop
mov
add
jae
push
push
mov
inc
clc
add
mov
push
sbb
cmp
scas
cld
pop
sti
mov
mov
mov
shl
clc
cmp
mov
xchg
cmp
subb
bswap
add
jmp
pop
mov
xor
mov
ja
loope
je
lahf
push
push
aad
xchg
sbb
jb
sahf
inc
in
push
es
clc
sub
or
mov
adc
or
ja
mov
adc
mov
out
or
lea
inc
push
sbb
and
mov
setne
es
add
and
lock
pop
xor
inc
mov
ja
push
push
mov
cmp
lods
jb
cmp
hlt
adc
xor
or
jne
or
popa
sbb
insb
je
inc
pop
fsubrl
pop
imul
mov
lods
add
daa
js
mov
ja
add
push
mov
mov
cmp
out
loope
jecxz
dec
jle
jne
mov
mov
push
xchg
jmp
jg
adc
loop
shlb
add
repnz
mov
or
divb
pop
add
sub
mov
pop
mov
push
mov
pop
pop
add
sbb
out
jmp
pop
mov
shrb
int
cmpsb
aaa
repz
pop
mov
in
mov
in
mov
les
or
callw
sub
adc
sub
icebp
pop
mov
in
lock
sub
decl
loopne
in
mov
add
sbb
add
dec
jne
shl
lcall
push
jmp
add
sbb
jecxz
push
mov
dec
cmp
xlat
lahf
push
popf
data16
adc
sbb
pop
lcall
xor
call
jb
push
pop
add
mov
jl
ja
test
inc
hlt
xor
nop
sub
mov
shl
pop
clc
mov
movl
or
or
or
mov
cmp
or
roll
sub
iret
adc
push
clc
xchg
sub
sbb
ret
outsb
jg
jb
lea
inc
aam
rolb
mov
leave
int3
in
sub
std
adc
mov
enter
push
cmp
xor
pop
iret
mov
repnz
add
add
mov
sub
or
jae
sub
testb
push
and
sbb
jmp
mov
movsbl
inc
inc
jmp
add
sbb
testb
sbb
jecxz
flds
adc
pusha
fsub
nop
loop
fdivrl
adc
rorb
jecxz
pop
mov
inc
add
cmp
les
test
faddl
mov
push
inc
dec
adc
outsb
shlb
pop
int
jmp
clc
rorb
test
xchg
notb
out
les
loop
addl
je
dec
xchg
fbstp
add
test
mov
sahf
negb
lods
dec
js
pop
jbe
dec
add
enter
adc
xor
popa
jne
push
lea
aas
or
je
orl
ficomps
jbe
mov
push
sub
push
data16
mov
cmp
mov
pop
outsl
or
test
outsb
aas
in
jecxz
lahf
mov
movsb
fucomip
adc
xor
loopne
or
lock
mov
dec
or
inc
sub
mov
push
inc
pop
adc
push
or
hlt
ja
rcrb
lea
mov
add
mov
out
sub
add
addb
filds
fdivrs
dec
fdivs
mov
divl
out
or
mov
jg
pushw
lock
mov
shrb
int3
outsl
inc
or
mov
daa
mov
in
dec
daa
lahf
adc
dec
inc
push
daa
adc
push
stos
add
loopne
and
adc
sub
adc
mov
arpl
pop
ret
or
mov
inc
popf
fs
push
subb
or
and
outsl
mov
push
push
push
push
push
mov
pop
out
jns
and
stc
es
inc
lahf
fildll
mov
cmp
or
pusha
add
divl
js
in
or
js
and
sub
loopne
and
pop
or
cmc
xchg
inc
xor
sahf
jae
mov
ljmp
insl
inc
jmp
ret
xor
jecxz
xor
xchg
ret
outsb
pop
or
push
add
scas
jl
sub
pop
cmp
push
sub
sti
lcall
dec
jmp
add
sub
jb
je
jmp
cmp
mov
xchg
push
cs
adc
jmp
sub
ljmp
es
mov
jmp
mov
jmp
mov
jmp
mov
jmp
push
push
lcall
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
dec
insl
shlb
pusha
call
shll
jo
fsubp
jge
divl
outsl
jp
cmp
push
pop
test
mov
pop
push
inc
sbb
cli
addr16
add
jl
fmuls
out
push
inc
sti
pusha
shrb
pop
lcall
loopne
sub
cmp
xor
sub
xor
fmul
sub
push
xor
ja
data16
mov
cmp
fcos
xchg
xchg
push
repnz
cmp
jne
and
xchg
push
aas
mov
add
dec
dec
push
mov
add
pop
call
or
dec
sbb
ss
inc
fcomp
fiadds
cmp
pop
add
push
clc
xor
in
sbb
test
jmp
mov
lret
or
jecxz
sbb
xchg
lret
mov
loope
cmp
jle
flds
rcrb
roll
sbb
jg
fists
adc
dec
jg
jge
mov
push
sahf
dec
rcrb
dec
mov
idivl
sbb
lea
mov
add
or
mov
pop
lahf
roll
cld
mov
filds
insb
dec
or
mov
loopne
dec
adc
add
mov
push
add
dec
mov
adc
jl
scas
test
pop
sub
or
fxch
jmp
sbb
ljmp
stos
sbb
push
dec
lret
out
or
sbb
push
fadds
fidivrl
dec
and
dec
jne
pop
pop
pop
inc
in
mov
dec
jmp
dec
shrb
addb
inc
add
xchg
or
mov
jo
adc
addl
idiv
add
clc
dec
jnp
mov
mov
es
aam
mov
sbb
mov
mov
nop
scas
mov
push
push
hlt
mov
je
dec
mov
out
cmpsb
cmp
cmpsl
neg
sbb
inc
maxps
jno
outsl
adc
ja
add
mov
push
pop
leave
push
mov
xchg
inc
repnz
adcw
dec
rorl
std
adc
add
mov
cli
push
insb
lock
push
push
add
fmuls
xor
xor
pop
ret
mov
mov
cmpsb
fwait
jne
push
pusha
jo
cmp
aas
or
xor
lods
adc
jnp
insb
push
xchg
iret
rolb
dec
test
cwtl
push
lods
and
out
sub
xor
pop
and
push
jne
aas
aam
sahf
push
add
inc
or
xor
push
xor
xor
adc
ficomps
and
adc
push
jne
mov
jne
je
jle
cmp
daa
add
add
sub
push
sbb
and
sbb
daa
and
scas
jmp
push
dec
inc
sti
shrl
popa
dec
mov
nop
inc
inc
dec
je
pop
cmp
cld
sub
daa
mov
dec
jl
lock
or
loope
clc
scas
jle
jbe
in
mov
push
sbb
add
or
lods
cmp
dec
jne
cmpsb
add
inc
jg
cwtl
inc
mov
mov
dec
sbb
pop
pop
jmp
ljmp
pop
xorb
xchg
xchg
jle
cmp
aam
pop
jle
push
add
and
push
push
sbb
dec
push
pop
movw
mov
push
cld
movl
inc
xlat
cltd
mov
mov
das
movhps
stc
mov
ljmp
and
mov
cmpsl
sahf
and
sbb
push
push
jbe
push
push
push
pop
je,pt
mov
mov
insl
mov
mov
add
cmp
jg
fmuls
or
jmp
lea
cmp
incl
sahf
sub
mov
mov
js
jl
fwait
mov
and
fnstsw
jnp
add
sbb
cmp
pop
sbb
ret
jge
xor
loope
call
loop
or
inc
xor
ret
cmp
je
pusha
add
adc
add
pop
out
mov
test
call
pop
sub
jmp
mov
pop
sub
and
pop
pop
or
imul
push
or
addr16
in
add
addr16
xor
mov
inc
xchg
orb
es
ret
adc
rcrl
rcrl
mov
in
mov
jle
cld
add
cmp
jl
in
inc
pop
xchg
add
add
aas
int3
loop
lahf
xorl
inc
je
lock
lret
mov
push
cld
add
cmp
pop
sahf
mov
mov
mov
adc
mov
icebp
sbb
sub
jmp
cmp
adc
or
pop
xor
sub
pop
jno
mov
loopne
cld
add
je
sti
popf
call
mov
lds
push
sbb
stos
push
rolb
mov
jmp
sahf
or
xchg
jbe
lds
decl
cmp
xor
and
mov
dec
jmp
dec
sub
add
cmpb
dec
dec
jne
mov
orb
ja
jge
and
aaa
add
dec
jmp
jmp
push
into
inc
pushf
sbb
or
out
into
pop
dec
jne
mov
add
sbbl
pop
add
lea
jmp
lahf
div
inc
lods
cmp
sarb
and
imul
pop
je
enter
push
cmp
inc
roll
cmp
and
cli
mov
jo
jo
imul
shr
aam
cmc
adcl
inc
test
dec
in
lods
ja
ret
add
dec
das
pop
push
movsl
cmp
jo
dec
xchg
cmc
mov
sub
pop
adc
dec
inc
cltd
push
add
pop
mov
ja
test
jge
test
cs
dec
push
je
jl
cmp
jge
sub
push
sbb
adc
push
outsb
sbb
cmp
jmp
push
test
push
inc
jmp
and
xor
mov
lret
aaa
sub
dec
jl
sub
mov
mov
cmp
fstpt
inc
sub
add
lea
inc
dec
movsb
add
cli
mov
xor
adc
inc
dec
jge
mov
adc
imul
add
gs
stos
shrl
cmp
mov
adc
lock
pop
addb
lock
clc
jmp
pushf
negb
mov
push
insb
dec
js
mov
inc
jb
xor
adc
loopne
cmp
pop
fdivl
adc
clc
bound
adc
xlat
push
fs
mov
and
sbb
push
sbbl
cmpsb
stos
push
and
or
rorb
arpl
cli
pop
cmp
fwait
dec
pop
adc
ret
mov
in
cmp
cmpsl
push
push
das
loopne
cs
loopne
mov
out
or
xor
cmpsl
push
cmp
cmp
scas
mov
sub
fdivs
in
adc
pop
cld
dec
sahf
xchg
pop
xor
jle
test
sub
or
cmp
pop
push
sub
push
ret
cmp
js
jbe
decl
das
data16
add
xor
pusha
inc
add
xchg
pop
add
add
sbb
jns
popf
fiaddl
add
cmp
pop
add
shr
xchg
je
mov
inc
mov
xchg
or
ss
add
and
xlat
pop
pushaw
and
mov
pop
adc
fdivrs
stc
and
or
imul
sbb
pop
dec
cmp
nop
pushf
lcall
ffree
xchg
sub
cmp
push
lods
add
dec
dec
pop
sub
lds
xchg
adc
popa
sub
sub
jae
sbb
mov
or
cmp
xchg
test
push
push
lods
fsubr
cmovnp
push
mov
push
lea
popa
lock
mov
xlat
js
push
movsb
aas
cmp
stos
jg
fldl
out
cmpsb
mov
pushl
add
cmp
je
cmp
je
mov
or
je
cmp
cmp
je
mov
shlb
dec
mov
inc
adc
or
adc
cmpsb
out
mov
aad
push
cs
add
mov
mov
dec
cs
adc
cmp
pop
jmp
cmp
add
cmpsb
cmp
rolb
cmp
dec
mov
and
aad
bound
ret
mov
call
push
inc
adcl
data16
out
ds
pop
jbe
xchg
pushf
test
push
mov
mov
test
int3
jg
dec
and
lret
in
mov
ja
push
addl
inc
adc
sbb
repz
mov
test
cmp
xor
lods
addb
push
dec
mov
jmp
mov
xor
scas
enter
scas
pop
sbb
cmp
push
pusha
xor
mov
lea
outsl
cld
scas
js
or
clc
push
push
add
sarl
add
xchg
rolb
mov
lock
cmp
xor
pop
cmp
pop
dec
or
pop
jo
push
jbe
push
pusha
lock
mov
xor
cs
or
jmp
and
clc
insb
lea
push
mov
xchg
xchg
push
inc
dec
orb
aas
mov
jmp
aas
add
sarl
xor
sbb
and
ds
test
test
fs
sbbb
sbb
mov
decl
or
and
mov
in
inc
push
nop
inc
cs
popa
jge
pushf
pop
sbb
nop
add
pop
dec
xor
inc
dec
jne
sub
jae
sub
jmp
cmpsl
std
adc
jo
push
sub
dec
xor
add
cmpsl
testb
es
ja
sti
add
add
inc
ljmp
mov
icebp
mov
jo
add
adc
cmp
fmul
or
lock
sub
jl
mov
filds
mov
mull
mov
lahf
lret
ficomps
fs
add
cli
adc
loope
sbb
pop
pop
ret
pop
xchg
inc
test
or
jo
pushl
cmp
aam
sbb
push
xor
in
dec
push
mov
lret
push
call
mov
faddl
mov
xlat
cltd
cmp
nop
inc
jns
incl
mov
sahf
cmp
ss
clc
movzbl
add
test
sbb
pop
adc
in
add
out
ss
cs
lock
andl
jbe
mov
cmpl
jne
push
push
in
sti
jle
out
cmpb
mov
andl
sub
pop
enter
fiadds
in
jmp
push
lcall
sub
mov
cmp
jge
mov
cltd
sub
mov
adc
mov
add
push
jl
xchg
test
rorl
mov
mov
sub
inc
nop
cmp
dec
adc
inc
in
inc
add
sbb
shrl
xlat
mov
or
add
mov
sbb
out
add
or
dec
lods
mov
inc
xor
insb
outsb
lea
shl
mov
mov
jne
aad
test
in
rolb
inc
sub
inc
scas
pop
xor
inc
cld
xchg
jne
es
or
lcall
mov
cld
movsb
sti
add
xchg
out
inc
xchg
mov
test
test
fcomps
jg
push
mov
incl
das
pop
pop
out
out
pop
bound
sub
enter
sbb
or
std
jmp
push
ja
dec
je
xchg
hlt
aaa
inc
call
clc
fcmovu
cmpl
xchg
sbb
sub
fdivs
test
sub
in
push
sbb
push
xchg
xor
xor
fiaddl
or
jbe
pop
inc
mov
and
mov
movsb
cmp
or
sub
sbb
test
mov
jmp
lret
mov
sti
mov
pop
and
je
cmpsl
push
xchg
lea
aam
xor
mov
add
or
sub
pop
jne
sbb
inc
add
insl
jbe
pusha
mov
loop
inc
cwtl
push
xlat
sub
pusha
mov
cmp
mov
push
test
and
fdivr
outsb
dec
outsb
in
rorl
clc
push
sub
add
mov
cmpb
inc
vmread
pop
fsubl
mov
sbb
add
or
xor
inc
das
mov
orb
sub
mov
inc
add
jmp
fwait
and
in
sub
xlat
les
pop
xchg
ret
inc
cmp
inc
inc
lret
insb
mov
jne
stos
cwtl
rcl
mov
cmp
andl
decl
in
xor
cwtl
lea
sbb
mov
jg
movb
ret
dec
push
push
mov
inc
mov
xor
in
roll
lods
inc
and
jg
pusha
imul
gs
xor
cs
insb
cmova
out
test
decl
addr16
popa
je
dec
popa
insl
gs
daa
scas
fmul
push
outsl
mov
fucomip
outsl
dec
sarl
pop
movb
into
push
in
adc
dec
or
cmc
sub
mov
and
test
and
mov
jne
sarb
push
or
pop
xor
mov
into
pusha
adcl
add
iret
cmp
add
sub
push
repnz
inc
push
push
sub
movl
cmp
rcrl
fdivrl
add
js
push
xor
cmpb
jmp
test
or
push
jmp
jnp
xchg
pop
repnz
jmp
stos
in
in
fdivs
mov
cmp
jne
adc
movsl
incl
mul
sub
pop
jo
jae
ret
and
rol
leave
and
jb
je
cs
mov
ja
cmp
jae
ret
ret
out
iret
push
outsl
data16
popa
jb
pop
test
in
cmp
arpl
gs
aaa
mov
mov
inc
or
add
push
sub
loopne
pop
cmpl
mov
mov
call
clc
cmp
or
jne
pop
fstl
jp
outsl
jg
shrd
jle
addr16
mov
jbe
out
add
mov
dec
inc
add
mov
jmp
add
jne
das
push
cmp
gs
push
adc
jmp
adc
ljmp
inc
bound
pop
mov
imul
pop
outsl
aas
je
lock
hlt
fildll
into
daa
dec
jae
xchg
test
loop
add
or
push
dec
dec
sub
gs
push
cmpps
cmp
pop
mov
adc
insb
popa
sub
sbb
ds
xor
dec
and
cmp
test
cltd
jmp
das
sub
dec
and
cmp
cmp
jmp
and
mov
scas
sub
mov
xchg
js
addb
sub
jbe
mov
mov
mov
out
xor
mov
push
inc
test
sub
fidivs
xchg
push
push
mov
adc
pop
pop
sbb
mov
add
pop
ret
sbb
and
lret
lock
enter
test
sbb
and
xchg
cld
sub
adc
icebp
xchg
and
and
and
adc
or
dec
mov
call
fildll
mov
or
sbb
push
decl
push
push
mov
push
shlb
pop
lock
xchg
lcall
mov
adc
inc
cmp
ja
mov
inc
jmp
cmp
cmp
lea
cmp
ja
fcmovb
jmp
or
jg
mul
mov
adc
sbb
and
lret
leave
mov
jmp
pusha
add
xor
dec
jnp
pusha
rolb
rcrl
add
mov
add
dec
movb
push
push
push
pop
and
sbb
or
pop
add
cmp
lea
ret
adc
lock
jns
push
bound
sbb
push
leave
rcl
pop
jp
out
cld
test
clc
or
mov
inc
test
mov
or
jae
and
je
incb
cmpl
mov
sti
orb
mov
cmp
cwtl
and
mov
rorl
mov
dec
dec
cld
mov
enter
inc
inc
outsb
lock
pusha
lcall
adc
loop
sbb
movl
xlat
sbb
inc
mov
ret
xor
sbbl
cli
xorb
sub
dec
lods
sbb
or
jb
inc
mov
test
scas
popf
pushf
ljmp
mov
test
push
fcoms
xor
pop
adc
lea
lahf
push
ficomps
xor
pushf
inc
push
and
aaa
pushf
divb
dec
xor
mov
dec
outsl
jmp
adc
push
repz
dec
repnz
clc
daa
push
dec
cmp
adc
test
pusha
push
sbb
and
pop
sbb
inc
aaa
and
inc
dec
adc
inc
lods
inc
cmp
test
in
and
push
outsl
pop
fistps
and
repnz
dec
out
add
dec
fcoml
in
cmp
jge
add
hlt
scas
xchg
jae
add
inc
xchg
push
or
subb
adcb
aam
imul
jg
add
stos
push
lea
push
push
xchg
jle
mov
dec
mov
pop
sbb
pusha
dec
or
cli
push
lds
bound
sbb
adc
add
lea
mov
sbb
je
adc
fidivl
or
mov
push
mul
clc
subl
loope
hlt
add
loope
jl
jl
sbb
pop
sub
inc
xor
pop
add
and
push
sahf
cld
jp
cmp
adc
sbb
in
mov
adc
add
cmp
and
add
sub
mov
jnp
and
lahf
and
mov
ret
adc
clc
lods
xor
and
unpcklps
jno
jmp
fcoms
test
push
fdivrl
lahf
mov
inc
out
xor
and
push
inc
insb
lods
ds
mov
or
imul
xor
daa
dec
dec
cwtl
push
mov
push
test
sub
scas
rcrb
jecxz
mov
in
mov
push
sbb
and
ljmp
es
int3
lea
je
dec
adc
or
scas
std
and
pop
mov
or
or
inc
pop
add
test
jne
mov
adc
nop
add
mov
mov
inc
test
dec
nop
mov
mov
push
push
push
mov
mov
cmp
pusha
mov
sti
pushf
push
inc
pop
pop
pushl
inc
xor
test
push
xchg
push
je
mov
les
sbbb
pop
jbe
cmp
push
inc
loopne
decb
mov
sahf
loope
sub
inc
mov
mov
mov
fnstcw
add
push
or
leave
dec
jns,pn
xor
dec
sbb
cs
add
dec
sbb
es
add
xor
fbstp
pop
or
push
gs
push
gs
jb
insl
sar
mov
adc
inc
imul
inc
push
lret
jg
inc
outsl
arpl
inc
gs
jne
je
dec
outsl
je
imul
push
mov
gs
outsl
inc
arpl
or
adc
ret
or
jb
push
fisubl
xor
outsl
insl
bound
outsl
js
imul
incl
outsl
ja
rclb
andps
outsb
dec
inc
dec
push
add
je
dec
add
leave
xchg
xchg
fldt
sub
fs
leave
leave
leave
pusha
pop
pop
push
leave
leave
leave
leave
push
dec
dec
inc
leave
leave
leave
leave
inc
cmp
xor
leave
leave
leave
xor
and
leave
leave
leave
and
adc
leave
leave
leave
adc
add
in
enter
clc
hlt
in
in
lock
call
in
aam
in
in
int3
enter
in
sarb
mov
test
in
in
mov
in
in
mov
in
jl
je
in
in
insb
push
jb
and
and
jb
and
and
jb
jb
and
and
dec
dec
or
and
dec
dec
outsb
add
cmovl
dec
dec
dec
dec
inc
cmp
xor
dec
dec
dec
xor
and
dec
dec
dec
and
adc
dec
dec
dec
adc
add
daa
inc
dec
add
cld
clc
hlt
daa
daa
daa
daa
lock
call
daa
loopne
fcom
daa
daa
daa
daa
ror
enter
daa
daa
sarb
mov
test
daa
daa
daa
daa
mov
daa
daa
daa
nop
mov
daa
cmpb
xchg
xchg
xchg
mov
xchg
xchg
xchg
mov
xchg
xchg
xchg
cwtl
xchg
nop
mov
test
xchg
js
jo
xchg
xchg
xchg
xchg
push
xchg
xchg
xchg
pop
push
push
dec
xchg
xchg
xchg
xchg
dec
inc
inc
cmp
xchg
xchg
xchg
cmp
sub
xchg
xchg
xchg
sub
sbb
xchg
xchg
xchg
sbb
or
xchg
xchg
xchg
or
and
leave
clc
hlt
lock
leave
leave
leave
leave
call
fcmovne
leave
fcom
sarb
xchg
enter
xchg
xchg
xchg
xchg
mov
xchg
xchg
xchg
test
mov
xchg
cwtl
xchg
nop
jl
mov
pop
js
jo
daa
daa
daa
daa
push
daa
daa
daa
pop
push
push
dec
daa
daa
daa
daa
dec
inc
inc
cmp
daa
daa
daa
cmp
sub
daa
daa
daa
sub
sbb
daa
daa
daa
sbb
or
daa
daa
daa
or
and
xchg
xchg
xchg
cld
clc
hlt
lock
xchg
xchg
xchg
in
call
xchg
xchg
aam
xchg
xchg
xchg
xchg
int3
enter
xchg
xchg
xchg
mov
xchg
xchg
xchg
lods
test
mov
pushf
cwtl
xchg
nop
xchg
xchg
xchg
xchg
mov
leave
adc
leave
leave
leave
leave
and
and
mov
mov
add
shl
or
ret
xchg
sbb
mov
xchg
ret
nop
sahf
shlb
cmp
add
push
mov
ficoms
mov
or
les
mov
push
outsl
insb
ret
movsb
dec
push
in
outsl
add
add
inc
and
mov
outsb
insl
aam
push
mov
and
xor
adc
push
sub
pop
inc
ret
and
pop
pop
filds
cld
mov
dec
repz
or
adc
repz
sbb
and
leave
loope
aas
push
push
push
popf
sub
jae
dec
stos
xchg
stos
pop
ret
add
add
and
push
fptan
pop
in
or
add
or
insb
cmp
fcoms
pusha
pop
test
add
pop
rcrb
pop
fsubr
adc
sbb
push
shrb
clc
sarb
pop
repnz
aas
inc
rol
jae
pop
or
inc
push
xorb
fwait
cmpb
dec
popa
gs
inc
and
push
dec
inc
inc
dec
add
aad
daa
outsl
jb
push
and
dec
testl
push
push
mov
push
push
pop
sub
push
inc
dec
pop
dec
dec
dec
inc
push
das
xchg
dec
repnz
pop
lds
sub
int3
dec
fsubl
daa
out
movsb
lock
icebp
repnz
daa
daa
daa
hlt
cmc
div
daa
daa
daa
daa
clc
stc
cli
sti
daa
daa
daa
daa
cld
std
jmp
daa
daa
daa
loopne
loop
daa
daa
daa
daa
in
out
iret
jnp
es
pushf
push
jmp
jns
ljmp
jb
out
out
rcl
jb
jb
rcl
aam
jb
jb
xlat
fcomp
jb
jb
fcmovu
jb
jb
rol
jb
jb
ret
lds
jb
mov
leave
jb
jb
lret
int
jb
jb
iret
mov
jb
jb
mov
mov
jb
jb
mov
mov
jb
mov
jb
mov
jb
jb
mov
jb
cmpsb
cmpsl
test
xchg
inc
movsl
jae
aas
aad
nop
pushf
fs
fdivrl
je
js
xor
add
out
and
mov
mov
add
or
arpl
je
outsl
outsb
pushf
add
ds
call
stos
fcom
push
inc
dec
gs
jo
nop
mov
xchg
sbb
dec
clc
arpl
add
aas
or
dec
jne
dec
dec
gs
outsl
jb
mov
add
outsl
idiv
dec
add
or
outsb
mov
or
and
lods
lods
lcall
cs
xchg
dec
ss
xchg
adc
mov
sbb
or
sbb
jb
cmp
mov
in
jg
or
imul
pop
data16
xor
ds
xchg
mov
popa
outsb
gs
insb
in
xor
insb
or
dec
jbe
fisubs
pop
outsl
ja
mov
xor
pusha
mov
repnz
sub
addr16
ds
data16
out
sub
jbe
imul
jb
js
mov
test
insl
jle
gs
rcrb
nop
mov
inc
mov
sbb
xlat
push
mov
andnps
mov
adc
and
addb
movsbl
imul
mov
fmull
lea
popa
mov
repnz
jae
fildll
ds
jo
add
inc
inc
dec
rcl
inc
rolb
mov
xchg
xchg
clc
add
add
inc
cwtl
jae
push
dec
pusha
addb
hlt
dec
shll
push
jb
xchg
add
lock
insb
xchg
push
inc
xor
ds
push
cs
cmp
add
test
xchg
mov
popa
fidivs
inc
xlat
imul
push
popa
dec
mov
or
pop
sub
and
pop
mov
icebp
push
mov
popa
fsubl
xchg
mov
mov
push
push
bound
orb
insb
sbb
int3
ds
retw
in
jo
je
pop
add
mov
stos
jb
sbb
push
data16
int3
inc
fdivl
add
popa
gs
inc
ss
insb
in
add
aaa
xor
add
out
xchg
dec
invd
jle
and
insb
inc
insb
jae
insl
or
fbld
and
insl
daa
fisubl
xchg
cmp
adc
jb
popa
mov
mov
push
int3
add
cmp
jb
test
xor
movsb
sarl
and
aam
iret
jnp
aam
mov
mov
iret
repz
movsl
lods
xchg
adc
sbb
jl
pushf
fists
jno
cmp
ja
adc
in
lock
pop
and
testl
push
dec
rclb
lds
push
mov
or
push
fadd
lods
outsb
arpl
cmp
fadds
in
ret
adc
repz
mov
xor
add
iret
mov
mov
push
lret
mov
mov
and
lea
fwait
outsl
pop
sbb
pop
lahf
adc
leave
mov
ffreep
loopne
adc
outsl
addr16
cmp
dec
call
pop
add
adc
push
loop
push
mov
cmp
push
cmp
ja
std
add
add
rorb
jbe,pt
sub
test
lahf
inc
lcall
jecxz
xor
inc
rorb
out
mov
cmp
jbe
shl
mov
cmpsb
je
movzbl
push
push
call
dec
scas
mov
mov
add
or
cmpsl
jne
jp
add
das
pop
mov
mov
das
dec
pusha
pop
mov
or
xchg
fisubrl
push
out
and
sti
je
loopne
push
add
pop
out
sbb
pop
lcall
mov
pusha
xchg
sbb
notl
dec
loope
push
sysenter
and
adc
imul
cmc
push
inc
ss
cs
add
outsl
add
icebp
mov
call
push
push
popa
push
push
adc
pop
mov
insl
jg
ljmp
sbb
mov
mov
jl
cmpb
jbe
adc
or
lea
dec
sub
clc
push
sub
inc
jb
outsb
add
jno
cld
aas
es
inc
add
icebp
and
fwait
idiv
dec
mov
add
sub
jb
sub
je
jae
cmp
jl
inc
mov
lods
cltd
testb
rolb
push
stc
pop
or
pusha
or
jae
inc
dec
jne
lcall
leave
jne
sarb
mov
call
movsb
jno
mov
inc
dec
mov
ret
mov
rorb
inc
jmp
cmp
xor
add
ret
push
aam
mov
jbe
add
sti
call
mov
sub
jmp
mov
dec
jne
push
mov
sub
xor
push
outsb
or
push
ficomps
mov
and
xchg
sbbb
and
jo
pushl
mov
push
aam
cs
push
pop
push
jb
sub
dec
inc
sbb
xor
push
cmpsb
mov
sbb
shlb
or
movsl
mov
adc
pop
mov
popa
lahf
push
in
andl
mov
and
fistps
ret
add
add
sub
add
rol
jecxz
dec
fprem
fdivr
mov
xor
lock
add
sub
rcrl
loope
and
ffree
ffree
ffree
fldl
andl
int3
aam
pop
add
aad
fnstsw
xchg
lcall
adc
pop
aaa
cmp
sbb
mov
inc
push
push
mov
adc
push
xlat
lods
inc
mov
jl
aam
lock
pop
mov
les
xor
sub
outsb
mov
sbb
aam
imul
pop
daa
sbb
cmpsl
mov
cwtl
pop
mov
jmp
jmp
fsubrs
mov
inc
fcomp
mov
mov
cmp
dec
mov
jmp
mov
add
insl
add
sub
shl
outsl
icebp
xchg
inc
popa
hlt
xchg
xchg
loopne
push
and
pop
repnz
movb
repnz
jl
inc
jne
fldcw
adc
mov
fcomps
jecxz
push
pop
and
loopne
mov
add
mov
nop
adc
insl
lock
adc
les
xchg
add
dec
ss
push
std
cmp
dec
pop
je
pop
addr16
xchg
scas
int3
and
mov
js
inc
orl
fistl
xor
sbb
iret
jl
icebp
bound
pop
mov
jp
loop
adc
jmp
sub
mov
and
xlat
rorb
icebp
dec
sub
loope
out
jne
push
or
popa
je
or
mov
lahf
add
les
mov
fiaddl
push
loop
sti
add
out
xchg
cmp
and
add
jnp
sbb
add
pop
dec
and
pop
test
pop
jle
xor
push
test
aam
mov
in
and
cmp
and
cmp
push
or
sub
add
clc
or
repz
cmp
ja
mov
and
mov
push
push
adc
sub
mov
pop
push
push
mov
jge
jns
das
xor
shlb
movsl
popf
or
lcall
dec
out
jbe
pushf
push
push
lret
cmpsb
xor
xchg
loopne
mov
add
int3
sbb
push
add
mov
mov
sbb
sub
push
mov
jge
xor
add
sub
mov
cmp
mov
mov
test
push
mov
pushf
cmp
je
adc
jne
cmpsl
lods
lods
and
mov
cmp
hlt
and
pop
dec
popa
pop
movsl
cmc
int
ja
inc
jle
pop
andl
test
clc
bound
sbb
test
push
add
mov
dec
add
decb
add
add
push
lcall
or
fwait
and
repnz
jge
shrb
mov
data16
mov
dec
jne
add
scas
test
push
dec
push
jg
test
out
jnp
cli
pushf
shll
mov
sub
flds
add
cmp
cld
push
dec
pop
cmp
or
in
push
imul
push
lret
xchg
les
adc
jno
sbb
daa
movsb
rcl
dec
lcall
or
push
add
jo
push
mov
imull
enter
and
adc
les
inc
ss
or
and
mov
lock
adc
fldt
mov
adc
enter
das
lea
daa
subb
mov
add
pop
lods
dec
add
test
rorl
clc
std
xor
cmpsl
movsb
pop
pop
ret
or
lret
dec
mov
inc
test
inc
sub
pop
lret
add
pop
fld1
pop
pusha
inc
mov
lcall
outsl
add
adc
or
out
dec
iret
addl
arpl
pop
or
dec
add
xor
xor
repz
mov
mov
or
xchg
lock
inc
je
dec
cmp
aaa
push
pop
cmp
cli
into
and
imul
and
fldt
addb
mov
das
rcr
add
mov
stc
mov
sub
or
sar
add
adc
dec
mov
cmp
jne
rclb
orl
push
hlt
inc
inc
loopne
lock
pop
mov
fcomp
pop
dec
je
mov
mov
pop
sub
jbe
sbb
pop
xchg
add
pop
jl
lods
in
adc
mov
shll
loop
cmp
fisttps
xchg
rorb
popa
pusha
subl
stos
pop
clc
cs
aaa
inc
test
loope
pop
sbb
xchg
push
cmpsb
jg
jnp
mov
jle
cwtl
mov
ficoms
jl
adc
or
xor
or
jbe
mov
mov
sub
jne
fadds
pop
xchg
movb
les
and
sub
and
and
push
push
lahf
dec
pop
in
pusha
cmpl
je
mov
rcrl
add
add
or
add
xchg
push
je
inc
imul
cmpsb
add
adc
inc
mov
cmc
and
rorb
and
repz
test
les
and
sub
fistpll
decb
sub
lods
fdivr
fidivrl
jge
cmp
jne
cs
and
lods
jmp
adc
mov
aaa
cmp
sub
sub
mov
call
jge
pop
mov
jae
pop
outsl
scas
xor
cmpb
or
lret
roll
movsb
lock
fadds
rep
sbb
cmpl
ret
js
xor
mov
dec
fldt
jmp
sub
jb
push
addr16
cmp
ja
imul
mov
add
and
xor
shrb
pop
dec
mov
or
jg
decl
cld
or
jl
lods
jg
mov
or
shrl
push
pop
pop
jne
lea
push
jmp
lcall
mov
push
imul
jg
push
das
push
pslld
xor
das
pop
enter
es
rolb
ret
jae
sbb
xchg
jbe
aam
pop
fsubrs
shl
cld
lods
aaa
gs
jnp
lea
and
sub
xor
push
repz
xor
and
stos
sbb
or
imul
in
movsl
outsb
adc
xor
pushl
and
cmp
jne
loopne
ret
sbb
outsl
nop
push
jbe
mov
aad
or
cltd
jge
jmp
xor
inc
inc
hlt
lods
and
jmp
mov
push
add
aas
and
stc
cld
call
pop
js
mov
add
js
pushf
cmp
ja
pushf
cltd
add
scas
jmp
push
shlb
jecxz
dec
mov
add
int
mov
jge
loopne
inc
lods
out
push
mov
push
xor
cli
outsb
mov
inc
insl
mov
mov
or
je
mov
inc
je
mov
dec
je
mov
jl
mov
mov
ret
pop
subb
mov
jne
xchg
and
jmp
fdivrl
mov
mov
lods
push
notb
dec
and
cmpsl
aaa
mov
xor
and
pop
push
pop
lahf
ds
or
iret
ja
xchg
sbb
sub
nop
xchg
ret
lock
push
call
lcall
repnz
xor
mov
icebp
jb
mov
popf
mov
xchg
call
adc
sarl
test
push
incb
cmp
jecxz
test
fdivs
pop
fmuls
loopne
mov
clc
jbe
testb
lea
sbb
leave
jle
movsl
jg
xchg
in
sti
xor
clc
jl
jmp
add
test
adc
add
xchg
jne
iret
std
fnstcw
xlat
repz
dec
mov
or
pop
pop
push
xor
lea
push
fcomip
mov
mov
neg
jmp
or
or
dec
or
data16
test
ljmp
mov
dec
pusha
in
or
jg
dec
mov
stos
cmp
jne
pop
pop
adc
xor
mov
sub
jb
lret
pusha
pop
sbb
insb
mov
adc
mov
adc
xchg
jge
jno
adc
fwait
jle
repz
xor
mov
lods
daa
add
add
negb
jmp
test
cld
movzwl
cmp
je
sbb
mov
fwait
adcb
mov
mov
add
sub
insl
in
fildll
or
or
mov
add
jl
or
add
mov
cld
cld
jmp
jg
fisubs
mov
inc
dec
lods
or
xor
jge
push
jo
ret
std
mov
aam
push
sub
jg
cmp
jl
pop
sbb
mov
cmp
sbb
stos
jmp
addl
mov
stos
loop
movlps
pop
pop
inc
xchg
push
pop
pop
clc
dec
les
push
stos
frstor
or
dec
sbb
rolb
jbe
sub
add
leave
mov
cmp
mov
push
insl
xor
cmpsb
jl
cli
adc
mov
lock
add
je
mov
lahf
jge
enter
repz
inc
test
jne
sbb
mov
push
cli
inc
in
stos
xor
call
push
sti
add
je
inc
jne
pop
cmp
pop
test
test
orl
sbb
mov
insb
jg
int3
mov
add
lea
mov
dec
jle
inc
je
inc
cmp
xlat
adc
sbb
sbb
add
jne
repnz
int3
loop
mov
test
add
add
and
and
adc
and
in
jbe
sub
sub
xor
inc
xlat
mov
sbb
and
sub
jbe
cmp
fs
xor
es
xor
sub
sub
cmpsl
loopne
test
jne
call
dec
je
test
mov
mov
adc
or
inc
push
cmc
mov
or
aas
ret
mov
movb
test
std
pop
mov
loopne
adc
pop
cmp
out
fabs
push
ljmp
frndint
rcr
scas
or
fstps
std
fcomi
fwait
mov
testb
je
fidivl
jne
lea
fcomip
out
add
inc
sub
nop
shr
and
add
cld
mov
loope
cmp
jge
jns
outsl
cmpsl
aaa
jb
mov
cmp
pushf
or
out
daa
cmpb
jb
movb
js
decb
and
int
mov
pop
data16
pusha
xor
enter
cmp
pusha
rcr
inc
xor
push
or
shr
mov
push
out
jb
clc
xor
fs
adc
sbb
push
pop
adcl
or
je
test
neg
sbb
das
cmp
or
or
jl
add
pop
mov
push
inc
sub
mov
loopne
jae
dec
add
outsl
push
inc
loopne
push
in
insl
or
test
int
pop
ret
fidivl
test
sbb
push
push
sub
pushf
and
jne
and
sub
cmp
pop
in
fsubl
inc
or
ljmp
enter
push
add
divl
pop
jmp
sbb
push
je
mov
iret
jmp
js
inc
pop
pop
rorb
xchg
inc
ret
outsl
jns
fwait
es
das
icebp
icebp
mov
out
cmpsb
xchg
ds
lods
or
mov
cmc
sub
xchg
outsl
aaa
mov
or
cmp
icebp
je
push
and
cmp
jmp
sti
inc
jne
inc
push
sub
add
jg
jne
mov
mov
add
mov
mov
adc
aas
jmp
fstpt
or
test
or
test
insl
inc
jo
add
add
and
mov
sub
add
jae
fimull
or
add
jmp
aaa
mov
idiv
adc
or
push
inc
imul
mov
cmp
aaa
add
sub
or
mov
push
and
sub
out
add
push
pop
fbld
pop
mov
aaa
test
in
std
mov
lds
loopne
cwtl
iret
sbb
loopne
imul
sub
fstpl
fwait
dec
es
add
push
flds
fcmovnb
out
out
fadds
aaa
xor
ret
or
mov
push
test
mov
adc
mov
nop
adc
push
adc
adc
mov
or
add
out
andb
dec
or
cmp
inc
stc
inc
aam
movsl
jl
jae
test
aad
mov
add
lret
dec
retw
cmp
sub
add
addb
add
pop
std
push
lret
movsl
xor
shll
insb
std
pushf
pushl
xor
sub
cmp
mov
lea
mov
lret
addr16
roll
add
iret
and
mulb
mov
push
enter
loopne
imull
popf
sbb
adc
insb
mov
outsl
jmp
sti
testb
nop
add
loopne
add
add
add
sbb
push
inc
in
insl
mov
add
add
outsl
pop
sbb
incb
jb
mov
ja
jge
pop
sarl
or
ja
sti
jno
aad
sti
pop
enter
ja
sbb
adc
into
or
sub
inc
dec
jne
xor
dec
mov
test
pop
dec
cltd
idiv
imul
mov
subl
cs
stc
add
pop
ret
or
push
andl
and
movsb
dec
in
enter
shl
dec
call
mov
je
clc
add
add
sbb
pop
outsb
mov
inc
pop
inc
fstpt
mov
dec
es
add
jl
addl
xchg
adc
inc
and
jp
lds
xchg
lods
mov
pop
sbb
decl
cmpl
xor
push
fcoms
lcall
add
add
lcall
dec
pop
or
lds
jae
inc
push
xchg
push
in
push
jle
es
enter
dec
mov
adc
pushf
cmp
jb
sbb
movsb
fwait
sub
fcoml
xor
inc
push
call
shll
push
push
cmpsb
push
sbb
movsl
mov
mov
popa
mov
cmp
adc
stc
xchg
inc
or
or
or
or
add
and
mov
or
cltd
cld
insb
rcrl
fiaddl
iret
and
and
xchg
jnp
add
mov
jp
sti
pop
xor
mov
mov
shl
in
fwait
dec
push
jle
insb
in
adc
or
call
add
inc
xchg
jbe
js
push
fnstcw
std
cmp
test
aas
clc
imul
cmp
je
sbb
inc
sub
add
sub
js
add
out
xlat
push
cmp
adc
add
push
lea
or
lock
repnz
jb
fbstp
push
in
jge
div
pop
cs
stc
add
or
or
adc
xchg
lods
adc
je
movsl
or
inc
xor
mov
ljmp
pop
adc
sub
jle
call
or
call
push
inc
fs
in
fsubs
and
push
add
mov
xor
inc
lods
adc
and
or
mov
adc
aaa
mov
outsb
int3
pusha
cmpl
sub
adc
lcall
jb
push
fstps
cmp
js
ret
test
movsb
xlat
dec
jp
xor
in
test
ret
ss
xchg
push
mov
sbb
pop
nop
arpl
in
out
popa
repnz
addr16
xlat
in
and
enter
or
popa
and
leave
out
repnz
jg
pusha
mov
and
or
dec
cs
in
je
jle
or
jmp
jne
dec
cmpb
jne
push
or
jo
mov
dec
lret
pop
shrl
adc
lock
jns
add
add
add
aam
aam
test
mov
cmp
sbb
xchg
fidivrl
sub
xor
push
inc
mov
loop
leave
push
sub
incl
lods
xlat
js
pusha
push
jecxz
js
cmpsl
leave
and
and
jne
stc
bt
jmp
lret
aas
and
sbb
pop
and
pushf
rorl
cwtl
test
add
hlt
cmpsb
inc
cmp
adc
inc
dec
jne
adc
loopne
loop
dec
dec
mov
mov
lcall
ja
les
xchg
sbb
and
or
vmwrite
push
or
inc
pop
or
or
sbb
push
pop
add
or
or
cmp
or
int
jns
xchg
adc
sahf
bound
iret
jnp
sub
mov
or
out
or
or
pop
or
pop
and
dec
mov
fyl2x
mov
mov
xchg
pop
bound
mov
dec
andb
pushw
and
pop
test
sub
js
mov
or
scas
sbb
into
sbb
xor
arpl
or
sub
mov
jbe
xorb
add
and
jg
aad
push
lahf
adc
add
pop
push
jb
xchg
add
xor
fbld
xor
jl
sub
dec
lods
scas
dec
inc
cmp
ss
adc
stos
adc
inc
mov
mov
dec
jg
js
out
or
or
push
jmp
fiaddl
or
je
or
je
jmp
nop
mov
push
cmc
push
jp
xlat
mov
sub
imul
aas
cmp
add
sbb
pop
addr16
dec
in
xor
mov
pushl
cmp
mov
add
add
cmp
sti
mov
or
jmp
or
or
or
xor
or
mov
orb
test
arpl
add
and
pushf
mov
lret
add
in
xchg
sub
out
pop
jmp
push
ljmp
xchg
mov
inc
aas
push
lds
pop
addl
rcll
sarl
add
ja
sub
xor
adc
mov
mov
or
add
xor
scas
cwtl
ss
sbbl
cwtl
add
add
add
and
or
push
mov
adcl
call
or
or
in
sarb
push
scas
mov
outsb
enter
cmp
push
pop
rcll
or
dec
nop
or
gs
mov
leave
jmp
or
and
inc
rorl
jb
aam
cmpb
je
dec
or
ror
mov
sub
jp
popa
fwait
inc
push
push
jmp
sbb
dec
push
dec
test
fisubl
mov
cmp
xchg
xchg
loope
or
addb
in
test
dec
das
push
dec
add
mov
xlat
push
dec
adc
in
mov
mov
aaa
pop
test
movntps
or
push
ret
ja
or
pop
xchg
sbb
ljmp
ljmp
jno
in
addr16
xor
dec
sub
hlt
sub
mov
add
jmp
je
mov
mov
hlt
adc
mov
dec
pop
sbb
or
dec
jne
js
mov
xor
xchg
add
adc
xor
dec
pusha
push
pop
jbe
xor
ret
lods
hlt
fildl
add
sub
jae
jmp
xor
lahf
lods
int
sbb
popf
xchg
ret
add
mov
pop
and
out
mov
fsubrp
testl
and
cltd
lods
xor
nop
inc
lods
xchg
sub
orb
push
movsl
dec
mov
pusha
loope
push
push
mov
xchg
mov
js
cld
inc
sub
or
dec
mov
popa
mov
pop
cmpsb
jo
xor
pop
in
cmp
add
pop
pushf
divl
mov
jmp
pop
sar
sub
je
dec
je
sub
sub
je
xchg
mov
add
sbb
push
push
and
push
inc
ss
popa
mov
jle
fadd
pushl
add
cmpsl
sti
pusha
add
mov
mov
jg
jl
pop
pop
xor
jle
dec
push
push
mov
sarl
mov
or
jnp
push
sub
pop
dec
loopne
adc
mov
add
add
test
or
jne
push
mov
stos
inc
adc
cmp
push
shr
jg
popf
ror
adc
jg
cltd
xor
sub
add
add
sti
pop
cli
stc
imul
add
js
add
adc
pop
cld
jmp
mov
cmp
dec
cld
gs
push
shll
loopne
push
rorl
push
and
or
inc
or
subb
push
jle
hlt
mov
inc
adc
mov
aad
ds
xor
xlat
inc
cmp
dec
and
cmp
in
mov
setp
popa
movsl
cmp
xor
mov
xchg
cmp
pushf
test
stos
inc
jle
outsb
and
bnd
test
ljmp
into
add
lock
mov
xchg
sub
jb
and
cmp
push
adc
lock
in
call
je
cmp
arpl
ss
lcall
hlt
jmp
bound
lock
push
add
mov
repnz
mov
jge
add
fbstp
cs
push
fstps
mov
dec
loop
aaa
add
xorb
jle
and
fs
jne
mov
add
or
ds
and
daa
or
xor
xor
pop
dec
mov
addr16
cmpsb
aaa
jl
cmp
fwait
inc
icebp
imul
jmp
out
and
cmpb
mov
cmp
jmp
xlat
sub
fildl
xchg
not
neg
fsubrl
fbstp
fcomps
fsubrs
xor
xchg
repnz
out
addb
dec
mov
testl
sahf
pop
cwtl
icebp
xchg
sbb
lods
stc
jno
ret
mov
add
test
or
push
xchg
push
cltd
xor
and
lods
lods
lods
or
and
fucomi
sub
jo
sbb
cmp
stos
sub
pop
and
insl
push
push
xlat
and
add
xor
cmp
or
push
xchg
dec
cmpsl
nop
cmpsl
mov
ret
orl
add
pop
xor
inc
or
add
cltd
in
sbb
or
loopne
test
xor
fcmovne
ret
and
or
loope,pt
cmp
add
je
mov
sub
daa
js
cmp
push
add
pop
sub
or
push
or
loopne
aam
mov
jmp
or
repnz
add
mov
xchg
into
hlt
push
dec
pop
icebp
sbb
or
inc
push
or
cmp
and
mov
jno
add
cmp
fwait
cmp
dec
ficomps
cmp
ret
jne
dec
outsl
jmp
fst
out
mov
or
pop
fwait
jmp
sbb
push
mov
add
dec
push
mov
push
push
mov
lods
jmp
mov
push
mov
sub
jb
or
dec
cmp
lret
xchg
and
dec
xlat
xchg
fwait
stc
pop
or
fcoml
xor
enter
jmp
and
loop
xor
das
int3
cwtl
clc
or
add
ret
addl
call
sbb
lods
xor
movsl
mov
or
dec
adcb
dec
call
sbbl
add
mov
sbb
popf
jp
mov
or
push
push
mov
shr
ret
lea
dec
lret
lock
xchg
out
and
inc
lock
cmp
inc
push
rolb
idiv
or
add
and
mov
xchg
push
push
pop
cmp
xor
es
loope
dec
call
ret
push
sub
call
fstpt
je
cmpsl
repnz
das
xor
shlb
stos
push
jl
je
xchg
cmp
add
testl
adc
js
in
adc
das
mov
jno
cmp
sub
xchg
fstpl
mov
pop
mov
push
test
cld
jnp
add
in
mov
adc
lahf
jo
out
inc
lods
fistpll
nop
cmp
subl
addl
mov
ja
fstl
mov
pop
pop
repnz
or
push
nop
sub
inc
jb
cmpsb
fsubs
inc
out
outsl
xor
xchg
or
jne
sbbb
mov
and
and
cmpsb
cwtl
mov
add
add
sub
lcall
cmpsl
out
mov
jmp
mov
sub
je
sub
je
scas
xor
sbb
les
call
cmpsb
xor
lods
mov
cs
sbb
pop
lea
filds
icebp
pop
lock
jbe
lods
add
jg
mov
pop
mov
cmovp
je
test
jmp
dec
lods
add
das
and
add
push
fwait
cmovle
jmp
int
add
push
xor
dec
aas
xchg
dec
in
jle
faddl
push
add
cs
xor
in
add
cs
addr16
loopne
pop
add
add
sub
jo
mov
mov
lret
pop
and
orb
cmp
test
mov
jmp
jl
mov
data16
jne
lahf
ljmp
rorb
push
and
pop
pop
inc
lods
aaa
andl
or
jmp
sub
inc
jle
mov
pop
push
inc
stos
push
push
inc
push
out
pop
test
push
bound
push
test
out
bswap
jl
pop
sbb
call
or
or
and
cmp
sahf
jge
test
xchg
std
inc
pop
cmpb
je
jae
mov
ljmp
add
and
xchg
lea
add
mov
out
or
test
lods
xchg
push
mov
push
mov
xchg
dec
sbb
or
push
enter
jnp
xor
lea
sub
subb
xchg
add
push
insb
pushf
mov
mov
mov
call
mov
std
jns
push
outsl
adc
push
or
out
mov
xchg
or
ds
and
cmp
mov
aas
fmuls
dec
xor
cmp
sarb
leave
xchg
pop
push
mov
inc
vmovntps
bound
inc
and
test
fwait
or
cmp
stos
add
cld
test
push
inc
mov
pop
sub
enter
andl
and
stos
dec
or
cmpb
cmp
jmp
fsincos
sarl
push
and
ret
ja
dec
repnz
or
fwait
adc
jo
xchg
adc
adcl
les
std
std
or
mov
call
add
and
xchg
push
add
fst
xor
sbbb
jb
pop
sti
push
jg
cmp
sbb
add
xchg
call
sbb
cld
dec
mov
mov
stos
inc
mov
pop
dec
cli
imulb
and
push
xchg
push
sar
lret
push
out
push
sar
adc
ljmp
nop
jmp
and
and
repnz
in
rcrb
pop
add
or
push
mov
stos
add
addb
aaa
loopne
cld
es
dec
dec
loope
lods
je
fsubs
shl
mov
add
cmpb
add
push
or
imul
in
and
fmull
repz
shl
imul
test
lods
jnp
lds
or
or
insl
add
mov
mov
lods
orb
jg
jo
push
dec
clc
push
bound
and
pop
cs
push
push
cmp
je
push
pop
adc
or
fdivl
jmp
sub
sub
jmp
sti
aas
xchg
das
and
add
mov
add
push
xor
shll
or
or
inc
dec
rorl
repnz
lods
les
add
in
imul
test
lahf
pop
fisubrs
pop
orb
rorb
daa
nop
sbb
mov
inc
sbb
mov
push
xchg
and
ret
mov
and
mov
xlat
cltd
das
sbb
cltd
orl
fs
or
mov
mov
xor
sub
js
xlat
add
ja
jae
or
fcmove
enter
ror
xor
adc
stc
ret
lea
rorb
stc
push
cmp
pop
xor
lret
and
pushf
pushf
xor
nop
add
xchg
aaa
scas
sub
or
pop
mov
mov
out
pop
aad
or
stos
adc
sub
cmp
rolb
push
jne
lods
or
sbb
and
loop
lcall
dec
mov
xlat
hlt
add
cmp
xor
std
and
lahf
fs
popa
fs
push
cmpsl
dec
add
orb
and
test
push
inc
js
aad
add
das
lahf
mov
pavgb
adc
xor
xchg
out
add
sub
adc
adc
add
mov
jne
mov
dec
sbb
inc
sbbb
test
mov
sbb
out
ficoml
in
mov
shufps
inc
loopne
lods
lods
pop
inc
sub
xchg
xchg
xchg
andb
aaa
mov
xor
cs
xor
sbb
adc
jb
test
pusha
insb
stos
lret
les
adc
lret
and
repnz
or
sbb
adc
std
add
push
repnz
jp
test
push
adc
push
rcrb
mov
fstpt
add
jne
cmp
cmpsl
jle
nop
je
repnz
call
rolb
loope
mov
adc
jne
pop
pushf
xor
jae
and
pop
outsl
out
push
movsb
and
scas
cmp
push
movsb
pop
mov
mov
xorb
mov
lods
or
jbe
repz
adcl
mov
cwtl
shlb
clc
mov
cmpb
out
push
rol
or
dec
or
push
testl
mov
and
add
jb
je
and
lock
sbb
add
inc
insb
push
imulb
es
add
adc
mov
or
adc
push
je
sbb
loopne
push
sbb
cmp
daa
fnstenv
lock
adc
xor
mov
mov
push
in
adc
lcall
inc
mov
mov
jno
popf
or
jp
sti
jl
dec
or
test
dec
inc
dec
jge
loopne
xorb
lret
cltd
nop
xchg
notb
inc
test
mov
daa
cltd
cmp
jge
mov
xrelease
and
add
mov
sbb
jmp
loopne
mov
test
aas
js
aaa
in
nop
mov
cs
jge
push
imul
jg
test
out
test
jg
or
or
mov
mov
mov
movl
mov
iret
es
jge
roll
pop
mov
jb
std
ficompl
sub
das
push
pushl
ja
mov
and
adcl
movsl
pushl
dec
push
and
push
pop
dec
push
and
xor
ret
push
ja
insl
xor
xor
dec
adc
push
inc
adc
mov
sub
pop
pop
outsl
pusha
xchg
push
call
out
inc
and
scas
rolb
mov
and
fidivl
mov
xlat
sub
popl
or
test
push
push
mov
add
push
push
sbb
loopne
add
xor
ss
add
or
pop
mov
lds
xor
dec
cli
sarb
bnd
and
aas
cvtps2pi
dec
ret
mov
add
or
dec
adc
mov
sbb
loopne
xchg
lcall
or
jnp
hlt
pop
sbb
je
mov
sub
pop
dec
loopne
and
inc
cmp
mov
add
fstps
pop
repnz
and
push
hlt
adc
stc
push
imul
pop
adc
cli
sub
int3
mov
pop
mov
pop
mov
pop
xchg
mov
jge
in
push
xlat
loopne
sbb
push
fwait
aam
std
ljmp
add
aaa
push
mov
sub
jb
inc
mov
mov
fisubrs
push
test
lret
jne
movsl
pop
neg
mov
pop
or
pop
jne
jg
mov
jae
clc
pop
ja
or
sbb
lret
setb
pop
je
movl
jb
inc
sbb
out
sbb
dec
data16
enter
popf
sbb
fimuls
popa
in
fucomp
or
inc
mov
mov
inc
xlat
lds
jne
mov
mov
dec
add
dec
cmpb
std
inc
inc
xlat
ja
mov
xchg
ret
mov
dec
and
popa
mov
mov
inc
inc
into
pop
jne
lea
int
mov
xchg
call
add
jg
ja
cmpw
xchg
test
add
rorl
or
push
dec
jne
jmp
push
pop
pop
sbb
push
dec
inc
mov
fcmovnb
subb
pop
outsl
push
push
mov
pop
add
stc
push
adc
mov
cmp
mov
movsb
ja
addr16
in
outsl
xor
mov
dec
movl
std
jge
cwtl
mov
pop
pusha
sub
lahf
addb
mov
mov
xorl
jbe
es
mov
sbb
in
mov
mov
inc
mov
pop
fsubl
movsb
mov
mov
in
aam
mov
and
fmuls
mov
sbb
mov
int3
mov
push
in
movsb
xchg
int3
inc
fdivrs
cwtl
push
cwtl
icebp
test
in
and
enter
adc
into
inc
mov
in
lock
imul
and
hlt
jecxz
cmp
pushl
rcr
sub
cld
push
xchg
pushf
dec
cmpsb
mov
cmp
mov
lock
dec
dec
cmp
mov
mov
sbb
rcrb
das
jmp
mov
fs
pop
aaa
cltd
notb
popa
insl
pop
jo
sbb
cmc
pop
push
and
testb
sbb
inc
aas
cmp
pop
push
cmp
aam
push
jo
mov
daa
loopnew
shr
test
or
or
aaa
push
and
sbb
sarb
push
jmp
es
lods
cld
aam
push
je
sub
sub
sbb
mov
ret
shr
xchg
mov
movsl
sbb
xor
jecxz
xor
push
hlt
mov
pop
inc
cld
pushf
add
sbb
or
orb
inc
lods
dec
cmp
or
ljmp
dec
pusha
movups
jmp
add
add
ret
lea
stos
cmp
pop
sbb
pop
add
je
sub
push
test
aad
test
xor
icebp
inc
pop
push
mov
data16
lock
and
mov
clc
mov
cld
imul
gs
jo
sub
js
add
xchg
lock
inc
push
clc
xlat
dec
xor
pop
dec
ret
xchg
inc
add
sbb
test
sub
jecxz
je
or
xorb
push
xor
js
add
dec
push
nop
rclb
add
loope
notb
jne
mov
loop
and
sbbb
pop
sbb
push
pop
sub
push
pushf
in
decb
jl
inc
jmp
ss
mov
mov
adc
test
lods
push
jbe
xchg
mov
pop
clc
cmp
jne
jb
gs
int3
adc
hlt
xor
mov
and
or
jl
hlt
add
fldl2t
mov
lods
and
mov
int3
xor
shll
inc
enter
xor
and
in
sysenter
icebp
mov
cmpl
xor
mov
rorb
mov
je
sub
or
push
mov
or
add
stos
add
fists
jg
adc
xchg
and
movl
cmp
add
dec
mov
jne
fsubs
or
adc
sbb
add
jae
and
mov
andb
aad
cmp
inc
fisubl
adc
pop
out
and
mov
jle
aas
inc
push
push
or
sub
cmp
in
dec
push
sbb
test
adc
jmp
mov
je
jbe
clc
cmp
test
adc
inc
jecxz
mov
push
sbb
xchg
ret
les
sarb
mov
jmp
adc
sti
mov
sbb
test
sub
push
repnz
xor
inc
jne
mov
in
mov
dec
cmp
sete
incl
add
push
mov
and
or
and
dec
sbb
jnp
xchg
mov
rcr
jo
stc
ret
in
or
add
xorb
jl
inc
fcmovnu
mov
inc
or
jg
adc
and
inc
cmp
pop
push
cmp
rcrl
daa
lea
rol
inc
inc
adc
daa
mov
mov
int
jg
dec
or
dec
xor
dec
in
inc
or
inc
xor
ror
cmp
pop
hlt
jmp
and
fdivl
fs
mov
xchg
mov
sbb
outsb
dec
mov
xchg
xor
test
adc
add
and
add
sub
ret
and
mov
js
xor
mov
jnp
icebp
adc
push
jne
sbbl
leave
add
ret
ret
mov
lods
shr
dec
movd
push
and
outsb
pushf
aaa
les
jge
and
lcall
out
mov
xor
jmp
push
xor
imul
mov
mov
inc
call
push
or
js
add
rolb
cld
out
jns
or
push
hlt
mov
cs
in
fs
fdivr
lock
repz
test
int3
call
mov
dec
adc
lods
mov
movsb
je
pushf
sbb
xchg
iret
repz
testl
test
out
out
push
push
je
insb
push
sub
mov
movsb
push
pop
insb
dec
push
cld
mov
js
inc
cld
cmp
adc
out
mov
ds
ss
sub
add
in
lret
pop
xchg
std
xor
and
jo
iret
leave
jae
or
sbb
sbb
cmp
adc
decb
cmp
iret
or
inc
or
in
push
ljmp
ja
pushf
clc
xor
pop
xor
lock
mov
mov
pop
cmp
sahf
call
jns
iret
in
fsubrs
fsubl
imul
mov
rorb
jns
iret
int3
add
enter
xchg
sub
shl
mov
dec
mov
pop
out
fcompl
lods
inc
test
daa
fwait
xchg
dec
movsb
cld
in
mov
dec
pushf
das
cwtl
pop
add
in
cmp
jo
jecxz
pop
sub
enter
push
popl
cwtl
cltd
lea
cmc
or
push
dec
xchg
out
int3
jmp
sub
nop
fucomip
sub
add
xchg
mov
mov
lds
jne
xchg
jae
or
fstl
xchg
add
add
and
or
enter
mov
and
mov
and
aam
rclb
cmp
lahf
enter
sbb
sub
les
filds
xor
add
dec
mov
pop
xchg
leave
xor
mov
xchg
jl
adc
in
mov
pop
pop
ja
js
leave
push
and
mov
pushf
jns
sbb
loop
cmp
ret
outsl
call
jl
in
fdivr
and
xchg
mov
and
jmp
data16
or
dec
mov
mov
jl
ret
mov
pop
or
das
xchg
push
cmp
pop
lret
or
jo
xchg
mov
mov
adc
cmpb
add
cmp
ret
lock
jb
fs
mov
enter
push
enter
sub
adc
jp
movsb
nop
and
adc
sub
inc
sbb
clc
jecxz
gs
movsb
cmp
clc
clc
lea
aas
decb
je
cmpb
cmc
sbb
je
mov
mov
and
ret
cld
pop
ret
pop
pushf
xor
or
jp
ss
xchg
push
jb
cmp
rclb
repnz
inc
dec
leave
and
push
cwtl
fs
shlb
adc
leave
test
je
jo
add
orb
out
ret
stos
xchg
fcmovne
scas
nop
cmpsl
fcom
ret
or
je
cmp
sahf
push
rol
movl
jne
inc
cld
lock
jo
push
repnz
push
pushf
int
push
stc
sbbb
sub
dec
movsb
dec
test
leave
and
les
pop
leave
and
dec
mov
mov
xchg
dec
xor
jo
dec
xor
mov
xor
and
mov
xchg
lret
and
nop
int3
rcrb
rcr
mov
aam
dec
mov
gs
lret
fmul
and
xor
loopne
loopne
dec
in
in
lock
testl
js
roll
in
mov
dec
mov
call
pop
lea
adcl
dec
jg
cmp
push
inc
push
lret
out
popf
push
push
daa
dec
add
outsl
je
shl
inc
fs
jne
std
test
or
fmuls
dec
fs
mov
adc
outsl
fs
outsb
dec
jb
pop
ja
enter
pop
inc
insl
jo
inc
jb
insl
push
je
pop
addb
pop
xor
and
mov
jae
cwtl
sbb
pop
and
call
inc
xor
clc
sar
add
fnstenv
mov
push
idivb
and
pop
clc
movsb
adc
js
cmp
mov
and
jo
rcll
cmp
add
dec
fildl
mov
idivl
repz
andb
popf
jge
cmpsl
ss
hlt
negl
or
out
ss
es
push
inc
jne
dec
aad
push
cmp
nop
mulb
xor
outsb
outsl
andb
or
jae
test
out
shlb
push
mov
adc
pop
push
inc
mov
and
orl
adc
adc
inc
cs
mov
or
add
ds
pop
and
or
addr16
push
push
jnp
pop
and
int3
int3
push
arpl
fs
add
leave
aad
ds
dec
xor
sbb
xchg
adc
dec
outsl
push
jb
mov
cwtl
imul
gs
or
ds
fisubrl
adc
dec
insl
jo
sub
xchg
lods
movsl
rol
in
sbb
pop
inc
lds
push
outsb
divb
test
ret
call
add
xor
lods
sub
arpl
pop
xchg
repnz
xor
xchg
push
xchg
test
cld
shlb
out
and
stos
cmpsb
std
mov
in
add
add
lods
in
fsubrs
lret
testb
out
hlt
mov
or
add
jo
faddp
daa
call
or
in
clc
in
mov
cmp
xor
add
adc
xor
enter
subb
fmuls
fstps
incl
push
daa
inc
push
and
and
jb
pop
jb
fs
sub
psubusw
or
push
sub
fcmovnb
sbb
cmp
fsubl
sbb
add
fbstp
sub
or
inc
pop
push
scas
fildl
or
aas
out
mov
bound
lcall
es
out
rcrl
pop
cmp
inc
adc
cmpb
aam
jo
mov
xor
lods
sub
pop
clc
pop
and
int3
mov
hlt
andb
out
push
dec
lock
pop
in
xchg
in
add
in
aad
repnz
call
sbb
mov
mov
loopne
arpl
loopne
inc
jecxz
dec
xlat
inc
xor
fcmove
or
inc
sub
lahf
cmpsb
jns
fcomp
enter
push
shrb
enter
adc
es
scas
sub
mov
clc
into
ret
fnstcw
lods
adc
xor
int
push
je
stos
ret
push
ss
xlat
cwtl
jmp
adc
cmp
and
push
enter
in
mov
aad
sbb
aaa
inc
dec
xchg
pop
add
rcrl
adc
adc
xchg
sbb
lahf
push
sbb
rol
mov
and
adc
push
push
imulb
repnz
sub
divl
xchg
jne
pushf
xchg
pop
dec
adc
mov
lret
push
mov
push
fsubl
aas
call
clc
aaa
andb
inc
add
push
int3
mov
jbe
add
rcr
int3
sub
and
xchg
push
adc
and
xchg
pop
les
imul
mov
outsl
ss
and
lock
test
sbb
inc
xor
lea
push
call
mov
lea
push
jno
rol
ror
mov
test
aaa
fcomps
fnstcw
sub
inc
pop
dec
inc
jbe
arpl
ja
jmp
inc
mov
jb
push
lea
mov
in
repz
dec
imul
je
fs
in
outsb
xor
ja
pop
in
loopne
sarb
mov
fsts
movsb
jne
push
cld
inc
add
leave
insb
iret
das
movsb
or
das
movsb
js
adc
or
push
aas
jmp
stos
add
aas
dec
insb
insl
dec
lea
jmp
xchg
sarl
sbb
jmp
xor
div
and
add
and
lcall
adc
jo
jmp
mov
or
xchg
xchg
mov
mov
jl
push
push
push
roll
jne
ret
aas
filds
in
fmull
push
inc
es
inc
ss
lea
sbb
pop
push
jmp
sbb
adc
fsubr
enter
call
pop
fcoml
lock
mov
add
decb
jne
and
fimuls
jo
and
mov
imul
in
push
xchg
nop
call
push
cs
bound
xchg
pop
sub
nop
decb
mov
nop
push
xchg
and
lcall
ds
mov
decl
push
cmp
or
mov
sbb
cmp
cld
jmp
dec
adc
cmp
cmp
sbb
jmp
cmp
test
ret
hlt
fbld
xchg
push
push
stos
dec
push
pusha
cmpsb
mov
call
lods
pop
jg
cmp
je
pop
jne
sub
andb
push
dec
jnp
loop
cli
inc
add
or
loopw
xor
or
mov
inc
and
loope
addr16
jbe
sub
or
inc
cwtl
push
pop
call
push
add
fmuls
outsl
dec
pop
addl
lds
mulps
popf
push
xchg
mov
or
pop
push
mov
push
and
inc
add
add
cmp
cmp
dec
jnp
push
jbe
xor
inc
lock
lcall
hlt
ja
loopne
add
fs
xor
aas
push
lea
mov
jbe
xor
sub
dec
push
mov
inc
sbb
inc
in
cmp
andb
scas
daa
in
add
push
cmp
push
jp
hlt
jecxz
jg
cmp
jg
pop
in
shrb
in
adc
push
cltd
cmp
add
imul
sub
ds
jl
les
in
imul
sbb
add
xchg
and
lods
add
nop
sbb
in
mov
or
loope
cmpb
sub
push
add
pop
rcll
rcll
jne
or
into
pop
sbb
mov
in
jno
pop
roll
sbb
scas
into
push
std
ljmp
movzwl
cmp
ja
sub
shl
push
repnz
jns
out
out
inc
pop
jl
out
fwait
out
xlat
out
into
push
cld
out
mov
pop
xor
add
sahf
imul
xor
addb
or
lock
hlt
push
test
mov
mov
add
xor
add
clc
fldcw
and
in
mov
xor
xchg
mov
or
or
cli
loop
cmp
nop
cmpsb
jb
mov
push
sub
out
jl
cmpl
push
loopne
jg
lock
mov
sub
loopne
aaa
fsubs
adc
aam
xor
sarb
rcl
fildl
sarb
ror
cmp
jne
out
sar
mov
lods
push
enter
adc
pop
dec
je
jmp
jb
rclb
and
dec
repz
les
test
out
add
jo
repnz
adc
jo
cmp
push
ljmp
jns
mov
cli
jmp
and
mulb
pushw
xor
jns
andl
shlb
mov
add
sarl
sbb
flds
jae
mov
xchg
fnsave
and
dec
cmp
cs
adc
add
test
ja
jno
popf
test
push
imul
es
outsb
mov
or
adcl
add
leave
sbb
cwtl
jmp
sbb
fsubl
dec
mov
jmp
nop
nop
inc
and
scas
sub
fmull
adc
mov
movb
cwtl
fmuls
sbb
adc
test
in
inc
fnsave
iret
mov
dec
jmp
mov
jp
or
or
jmp
jbe
dec
and
push
mov
cmp
jmp
or
cmp
call
push
xor
dec
pop
shr
xchg
xor
jne
mov
push
loopne
sub
movsb
in
loopne
pop
xchg
adc
bound
cmp
ret
ret
push
cmp
bound
cmp
sahf
or
in
mov
sahf
out
sahf
inc
pusha
jp
mov
jns
out
loopne
out
mov
jns
cmpsl
pop
pop
sub
dec
dec
and
cltd
cmp
aad
inc
xchg
push
push
insb
stos
or
cmp
dec
cmp
es
mov
inc
cmp
inc
cmp
mov
push
aaa
dec
adc
sbb
and
imul
and
fsubl
fsubl
test
xor
and
aam
movsb
and
es
jg
int
inc
or
ljmp
pusha
and
mov
and
cmp
icebp
push
out
lea
jns
lock
dec
inc
mov
pop
or
daa
js
xchg
ret
repz
in
adc
xchg
les
sbbl
mov
mov
arpl
movsb
sub
ret
mov
popa
and
mov
mov
orl
lods
and
adc
mov
dec
dec
add
pop
mov
je
fidivrl
pop
mov
dec
adc
pushf
dec
pop
adc
and
add
outsl
aaa
dec
mov
mov
cltd
lock
push
fwait
push
or
jmp
rcll
test
aad
dec
mov
mov
insl
enterw
ret
jno
das
lret
movsl
sbb
xchg
adc
testw
mov
xor
bnd
cmp
ss
cs
mov
inc
mov
or
mov
inc
xchg
or
lods
cmpsl
pop
or
push
push
or
sub
push
cltd
in
inc
scas
fiaddl
js
fs
fstpl
fwait
push
daa
mov
push
add
js
push
xchg
lea
in
and
lret
out
rclb
pop
push
pop
push
push
rol
sub
stc
mov
fcmovnbe
or
xlat
js
outsl
jge
sub
mov
xchg
push
dec
xor
cmovle
mov
and
popa
je
cwtl
cwtl
lcall
dec
inc
push
ds
lcall
pop
inc
outsl
jne
xchg
jb
outsb
mov
or
dec
nop
das
dec
pusha
mov
sbb
xchg
cmp
stos
xchg
add
mov
adc
rcrl
lcall
popa
fwait
aas
push
outsb
imul
adc
and
arpl
daa
xorl
xor
push
sbb
add
ljmp
aaa
push
xor
mov
add
aaa
adc
clc
cwtl
xor
push
ret
cmc
mov
sti
pop
mov
cli
and
es
test
xlat
aaa
arpl
or
repz
das
cmc
xor
inc
sti
ss
mov
insb
enter
fmuls
jno
pop
cmc
cmp
addl
pop
push
adc
pop
mov
xor
lock
push
add
push
lea
loopne
jb
sub
mov
adc
adc
test
dec
outsb
pop
sbb
in
inc
jo
mov
mov
scas
adc
and
in
ja
outsb
jns
sarl
mov
gs
push
dec
and
pusha
aad
jae
jle
sahf
push
js
loope
clc
mov
and
push
jno
xor
mov
sub
ret
jne
push
mov
ss
or
xchg
jle
push
je
mulb
jne
test
dec
xorl
push
push
pop
sub
hlt
cwtl
cmp
mov
pushl
cmpb
in
imulb
mov
push
insb
fimuls
adc
inc
inc
das
xchg
push
loope
dec
or
clc
fadds
mov
js
imul
jge
cmp
je
pop
and
push
xchg
clc
xchg
testl
mov
pop
adc
imul
xor
cmp
inc
call
ret
testl
add
addb
mov
push
mov
call
or
pop
mov
add
ret
xchg
adc
dec
loop
cmc
push
sti
cs
adc
sub
sub
push
mov
sbb
repz
clc
mov
mov
jle
or
es
sbb
push
addb
or
mov
xchg
in
out
mov
mov
add
paddusb
addr16
lret
xchg
ljmp
dec
or
pop
pop
xlat
addl
aas
loopne
cmp
push
add
dec
jb
or
sbb
xor
dec
pusha
mov
xchg
sbb
std
stc
nop
mov
in
or
cmp
lahf
jno
nop
ret
fbld
inc
mov
or
fnstenv
ret
inc
loope
xchg
xchg
sbb
lock
pushf
loopne
rorb
daa
cli
jbe
js
mov
cli
pop
mov
jl
inc
ds
cmp
xor
inc
sbb
add
sbb
or
jecxz
das
sbb
mov
movsl
adcl
scas
xor
sbb
and
inc
dec
jne
xchg
cli
pusha
inc
dec
or
mov
aaa
cmpb
dec
inc
mov
adcb
sbb
data16
mov
xchg
mulb
push
push
adc
mov
jns
fisttps
sti
push
in
outsb
jb
scas
sti
test
jne
fiadds
cmp
adc
inc
adc
cmp
xlat
dec
mov
inc
aas
hlt
jmp
ds
in
cwtl
jp
stc
sbb
or
sub
cmp
mov
in
in
das
pusha
xor
test
rcrl
arpl
jmp
xchg
xchg
dec
subl
scas
scas
nop
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
cwtl
cltd
xchg
xchg
xchg
xchg
lcall
xchg
sahf
lahf
addb
addl
xchg
add
cld
rcll
xchg
xchg
cmp
enter
lret
cmp
pop
mov
inc
or
in
push
push
add
inc
push
xchg
push
add
inc
enter
jo
test
add
cli
mov
sub
addb
ljmp
pop
adc
xor
test
jne
mov
push
or
pop
inc
dec
xor
cmp
jle
sub
dec
cwtl
push
push
xlat
cmp
in
jae
cs
xchg
mov
cli
jge
mov
dec
repnz
jp
aaa
sub
mov
mulb
or
and
or
cmpsl
pop
inc
gs
lcall
mov
adc
add
fisttpl
mov
dec
jl
add
ret
push
or
mov
sbb
lret
je
mov
dec
and
sbb
lds
ret
mov
mov
fbstp
loop
mov
insb
sbb
test
sub
add
lock
cmp
aas
mov
cmpb
je
dec
push
adc
push
lar
decb
ja
mov
adc
sbb
mov
add
pop
inc
jb
cld
push
add
add
popa
loopne
and
movsbl
or
pop
jle
add
pusha
sbbl
loopne
aas
fdivs
mov
in
ds
in
push
decl
test
cli
and
add
cmpb
sahf
das
clc
ja
jb
add
add
call
out
pop
mov
or
loope
xchg
mov
push
mov
add
call
dec
xchg
cmp
scas
lcall
sti
jg
pop
into
inc
mov
lods
cmp
lcall
pop
cwtl
add
test
pop
or
cmp
mov
loopne
outsl
adc
xor
fldenv
add
clc
jg
add
daa
dec
sbb
aaa
clc
stc
adc
sbb
mov
pop
add
pop
mov
pop
lcall
inc
pop
sbb
sbb
xchg
or
or
fstpl
dec
outsb
or
cwtl
aam
lock
add
add
rorb
mov
add
add
test
mov
pushl
and
scas
xor
mov
dec
cmp
decb
cwtl
add
das
push
jmp
ss
jmp
or
fisttpl
mov
mov
nop
call
adc
scas
pop
mov
scas
and
adcb
clc
dec
mov
mov
addl
test
movb
loopne
ds
xor
xchg
loop
jns
xchg
mov
insl
fwait
int3
outsb
aas
mov
add
cs
adc
pusha
or
lcall
data16
data16
negb
insl
fmuls
inc
aaa
mov
pop
lret
add
cmpsb
dec
xchg
dec
push
xor
sbb
push
or
add
inc
push
push
ret
add
push
push
sbb
fwait
test
mov
frstor
sub
sub
or
fistpll
jne
repz
ja
and
sarl
mull
push
sbb
jmp
add
jmp
sbb
sub
sbb
adc
push
or
adc
ja
add
rolb
mov
jp
test
cli
push
clc
pushl
pushl
lods
fildl
sbb
adc
shlb
add
aaa
pushf
popa
cmp
cmp
sbb
jne
lahf
mov
sub
or
add
repnz
mov
mov
mov
mov
pop
arpl
sbb
iret
dec
cmp
inc
cmp
dec
fisttpll
scas
or
dec
mov
add
daa
inc
mov
in
push
call
dec
in
cmp
into
aam
daa
stc
sub
add
inc
jne
ret
pop
jbe
dec
icebp
stos
push
subl
add
xlat
pop
and
std
mov
insl
add
aas
sbb
adc
or
inc
imul
sbbl
fs
gs
outsl
push
add
mov
cmp
sbb
adc
les
movsl
sbb
sbb
sub
scas
rorb
push
inc
dec
outsb
insb
jns
inc
insb
popa
loop
in
xor
scas
test
xchg
out
imul
push
push
imul
or
jb
or
test
cmpsl
or
dec
imul
sbb
jns
nop
test
push
or
imul
test
push
dec
jg
mov
js
add
das
add
push
or
fld
shlb
ss
in
push
or
fimull
jns
push
jae
cltd
loope
fnstcw
push
adc
inc
jne
mov
mov
mov
inc
jbe
push
js
push
push
mov
xor
add
outsb
push
inc
les
sbb
insl
dec
and
arpl
mov
sub
das
mov
test
xor
mov
leave
inc
mov
or
rcrl
int
mov
sub
or
outsb
pop
and
mov
or
ret
cs
xor
or
cwtl
and
hlt
sbbb
leave
mov
mov
inc
pop
add
adc
or
dec
ds
ljmp
fiadds
dec
pop
xchg
sbb
nop
mov
movsb
sbb
movsb
and
mov
ds
and
imul
xor
jae
mov
mov
cmp
inc
shrl
and
adc
mov
adcb
insl
jo
das
xor
push
mov
dec
pop
insb
out
push
push
nop
sub
jb
sub
enter
enter
shl
sub
sbb
js
in
jg
sub
insb
pop
adc
push
xor
xor
pop
fadds
les
and
mov
sbb
and
dec
pop
mov
in
add
in
add
mov
and
pop
push
or
out
fimull
push
add
and
into
divb
sub
aaa
cmp
ss
add
push
push
lock
lcall
clc
push
dec
mov
jae
mov
arpl
shlb
sbb
jo
imull
pusha
or
mov
cmp
push
mov
mov
xor
movsl
lods
cmpsb
push
sub
loopne
idivl
fs
push
dec
or
jp
insl
and
filds
cmp
xor
adc
rcr
out
xor
mov
xor
dec
cmc
aaa
nop
sub
inc
fs
jo
mov
mov
pushf
jae
push
rclb
sahf
cmpsb
add
scas
cmp
pusha
pop
xchg
iret
unpcklps
and
mov
xsha256
cmpsb
adc
fldenv
inc
dec
xlat
cmp
xchg
insl
and
push
cmp
fidivrs
add
pusha
inc
cld
inc
add
and
jnp
push
repnz
xorb
nop
mov
addr16
fnstenv
data16
aas
mov
sahf
idivl
push
dec
mov
pop
ret
ja
inc
shlb
outsb
pop
or
scas
pop
sbb
jmp
pop
fmuls
or
inc
xchg
outsb
inc
dec
dec
or
aaa
adc
mov
fdivl
pop
push
enter
and
rolb
pushf
cmp
repz
aam
pop
dec
dec
push
int
fs
test
dec
jl
mov
xchg
push
sahf
sbb
pop
push
into
add
mov
je
xor
jo
sub
or
pop
jbe
push
lods
inc
out
ret
sbb
lock
push
mov
mov
dec
and
push
out
adc
adc
mov
ja
push
mov
paddsb
dec
mov
adc
adc
push
fmulp
test
xchg
pop
adc
out
dec
push
int3
push
loopne
nop
fbstp
xchg
xor
push
mov
jnp
inc
adc
pusha
and
and
xchg
out
addb
mov
in
out
and
xlat
sbb
movsb
mov
fdivl
push
adc
in
and
jge
notl
xor
in
inc
repnz
adc
adc
idivl
ds
faddl
push
mov
mov
repz
divb
int3
sbb
cmpsl
cs
insl
notl
andps
repz
in
or
push
in
push
or
adc
push
in
sbb
inc
push
in
and
xchg
xchg
mov
xor
popa
in
in
add
insb
sahf
out
push
orb
repz
jmp
push
pop
push
adc
lock
dec
sub
push
cmp
xchg
xor
into
adc
push
notb
xchg
push
push
xchg
mov
xchg
pop
sahf
addr16
fcompl
pusha
popa
aad
jns
js
push
filds
leave
addr16
es
sarl
or
es
or
add
cltd
push
adc
add
inc
sti
xchg
and
mov
jp
mov
push
stos
pop
fneni(8087
lahf
jg
test
sarl
test
int
insb
push
pop
or
bound
subl
es
mov
push
pop
xor
bound
popa
call
aaa
sub
ds
sub
pcmpgtd
or
mov
outsb
and
es
lret
xor
inc
sarb
sub
sbb
jecxz
adc
outsl
mov
bound
insb
aaa
nop
dec
inc
fsubrs
xchg
fcoml
fwait
sbb
ja
inc
aam
adc
sti
je
ds
jno
jg
imul
mov
mov
xchg
push
aaa
fdivrp
pop
inc
int
dec
addb
cs
jnp
jns
aas
pop
sub
pop
and
sbb
push
xchg
mov
adc
les
adc
in
mov
add
dec
jnp
in
js
push
push
sbb
pusha
push
nop
xchg
test
jge
jo
push
out
add
jp
sbb
hlt
std
cld
jmp
lcall
push
cli
stc
clc
push
push
push
push
push
push
loop
repz
jle
push
or
sub
repz
xor
inc
out
jle
cmp
dec
xchg
xor
adc
xchg
pop
or
nop
xlat
pop
and
mov
lods
add
pop
mov
cltd
pop
add
add
imul
add
stc
ljmp
sbb
adc
xor
add
idivl
add
push
pop
jp
lahf
mov
push
arpl
sbb
in
les
cmp
sbb
sbb
ja
push
mov
adc
cmpsl
in
pop
xchg
mov
out
flds
xchg
jl
push
mov
in
push
inc
push
sub
or
lcall
or
push
cmp
mov
mov
sbb
add
sbb
scas
mov
lcall
insb
pop
dec
push
pop
cmpsl
mov
pushf
popfw
sub
push
sbbl
aaa
fwait
xchg
popf
lock
sahf
pushf
int3
add
and
sbb
or
pmaxsw
mov
gs
insb
pop
and
imul
add
fildl
fs
dec
jb
pop
enter
pop
inc
push
inc
test
dec
outsb
dec
inc
dec
dec
es
mov
inc
or
loopne
lea
push
dec
fcomps
fimuls
or
outsb
and
aas
lea
xchg
sarb
and
in
rorl
push
push
leave
and
mov
nop
mov
addr16
lock
mov
mov
leave
dec
cltd
or
or
jg,pt
mov
pop
jp
inc
push
jne
aas
sbb
mov
and
scas
jae
or
dec
push
xor
inc
std
adc
sti
xor
xchg
push
mov
dec
xor
xor
xlat
bound
jb
add
das
je
test
mov
aad
and
jmp
or
mov
dec
cmp
scas
pop
or
xchg
sub
jbe
ficompl
dec
jmp
pop
je
movsl
in
cltd
jge
inc
cld
sub
jne
fcmovu
aaa
aaa
iret
and
jmp
sbb
adc
mov
and
push
sbb
pop
jmp
stc
mov
cmc
xchg
pop
xchg
mov
add
fcoml
in
in
add
sbb
inc
cmp
or
push
test
cwtl
loopne
sbb
xchg
jo
je
add
loopne
or
inc
stos
adc
out
mov
xchg
andb
pop
jae
add
and
sbb
lcall
je
clc
mov
jge
shlb
dec
sub
jne
or
push
jns
and
pop
popa
pop
sbb
pop
pop
mov
enter
sub
jb
or
nop
or
pop
lds
or
in
add
gs
mov
push
xchg
hlt
xchg
inc
and
or
sub
add
sbb
adc
jae
inc
pop
add
hlt
cmp
xchg
mov
or
push
adc
or
loop
outsl
jmp
hlt
cs
xor
ret
arpl
ds
ret
pop
xor
sub
jge
setge
add
inc
inc
hlt
cmp
sub
push
add
nop
incl
cmp
and
pusha
sbb
adc
pop
repnz
jp
xchg
das
insb
dec
orl
ror
rorb
sahf
fsubrs
pop
in
bound
imul
imul
fwait
rolb
je
stos
ret
popa
testb
out
jo
jp
aad
pop
icebp
pop
push
mov
xchg
rol
inc
cli
lcall
add
push
lcall
fistl
pop
cld
cmp
popf
cmp
push
push
adc
cmp
inc
adc
xor
iret
push
lea
push
insb
jne
mov
dec
mov
sbb
jg
out
inc
dec
jne
pop
rcrl
xchg
call
outsb
lds
inc
sbb
out
sub
jg
enter
insl
aaa
sbb
int3
hlt
push
mov
pop
cwtl
stos
ds
popf
fmull
pop
cld
cmp
xchg
sub
leave
add
in
cmpsl
dec
pop
lret
push
pop
mov
dec
lahf
das
add
inc
outsl
outsb
add
xchg
push
push
fwait
pop
pop
sub
insl
mov
cwtl
inc
push
mov
or
rorb
jl
cmp
je
jl
pop
push
sbb
xlat
shll
inc
xchg
ret
je
jp
push
call
fwait
xor
xor
xorb
inc
pop
sbb
lock
jae
sub
cmp
push
xor
mov
jecxz
out
and
xchg
daa
add
je
lock
movd
and
pop
cwtl
iret
lahf
adcb
inc
aaa
and
lret
out
and
rcr
test
dec
mov
mov
sbb
in
int
add
loopne
rorb
lods
cmp
jg
pop
xor
aad
cmp
pop
inc
xchg
ja
mov
dec
xchg
mov
mov
scas
mov
xchg
mov
test
add
pushf
or
add
daa
cli
sahf
or
pop
mov
das
mov
or
ret
adc
and
mov
xor
push
enter
call
add
es
mov
cmp
add
adc
ss
push
lods
es
pop
or
xchg
mov
xlat
stos
nop
inc
lahf
push
push
andl
xorb
mov
hlt
or
xchg
cs
pop
push
inc
pop
rol
and
cmpsl
daa
or
inc
enter
adc
xchg
xor
lods
xchg
sti
daa
adcb
or
jge
xlat
add
or
inc
gs
daa
xchg
loope
enter
sub
daa
pop
xor
bound
or
fldenv
addb
fbld
daa
addr16
mov
sbb
out
sbb
gs
jmp
cmp
cmp
insb
insb
repnz
shll
cmpsb
push
fbld
push
sbb
pusha
add
adc
xchg
and
insl
mov
sbb
push
sub
daa
mov
stos
in
mov
sub
in
sbb
scas
outsb
push
add
or
adc
dec
or
jae
les
dec
add
dec
rcrl
or
or
dec
movsb
push
fistl
dec
js
xor
sarb
sub
pop
clc
xor
dec
cli
lock
sub
pop
popa
and
stos
add
mov
or
jecxz
and
mov
addr16
mov
mov
outsl
test
pop
sub
lea
aaa
sbb
movsl
xchg
in
dec
cld
mov
jmp
ret
rolb
sbbl
filds
sub
inc
xchg
call
add
sbb
sbb
inc
filds
mov
mov
outsl
or
jmp
add
push
mov
or
jecxz
pop
outsb
and
cmp
jbe
mov
xor
xlat
pop
adc
into
sarb
sahf
pop
mov
pusha
packssdw
mov
sbbl
lcall
stc
sbb
xchg
adc
ja
sahf
push
add
sbb
mov
fcoms
jae
sti
xchg
dec
push
xor
adc
inc
cmp
shll
movsb
push
sbb
test
push
loopne
push
sub
xchg
loopne
or
push
inc
sub
nop
roll
negl
ret
sbb
mov
mov
push
aas
xlat
jmp
mov
mov
mov
xchg
sbb
and
addb
xor
xor
and
mov
push
or
insb
cmpl
dec
pop
adc
arpl
inc
faddl
sbb
andb
sarl
sahf
je
inc
std
xchg
jl
jo
je
mov
insb
ret
cwtl
je
mov
cmp
or
mov
aad
jno
dec
shr
sub
add
xor
jecxz
jo
popl
sub
cmpsl
ret
cs
std
sbb
and
sub
insb
das
add
rolb
inc
divb
cmp
mov
iret
push
std
int3
gs
and
fcoml
insl
and
or
das
cmp
aas
cmc
sub
cmpb
cmp
push
cmpsl
push
or
and
jmp
insl
mov
or
ret
inc
adc
cmp
incl
or
leave
inc
insl
mov
dec
add
xchg
or
or
add
push
adc
imul
lds
cwtl
or
jl
call
rorl
sar
mov
dec
idivl
fwait
insb
in
jge
sub
enter
in
adc
or
ret
push
inc
cmpsl
sbb
lods
out
cmp
mov
out
data16
or
js
push
dec
fcmovnbe
push
mov
sub
test
or
icebp
jecxz,pn
addb
sub
xor
fisubs
sub
mov
shrb
mov
xlat
xor
out
sbb
jbe
inc
insb
fmuls
ret
jg
push
stos
mov
loope
cmova
mov
or
sub
mov
fdivrl
dec
pop
add
leave
test
push
mov
xor
jmp
and
mov
pop
lcall
mov
rorl
inc
cmp
jge
std
or
add
adc
jne
sbb
leave
stos
cwtl
push
dec
pop
shll
push
mov
jle
push
test
sub
push
xchg
adcl
shl
sbb
xchg
inc
ret
adc
adc
push
cli
sub
and
in
call
in
fdivs
hlt
das
mov
and
sub
into
lock
out
out
cmp
js
dec
inc
push
mov
shl
xchg
pop
pop
enter
xorb
add
je
pop
insb
add
and
sbb
test
inc
inc
orl
push
push
mov
dec
mov
sub
jg
dec
sbb
dec
mov
sub
sub
pop
jmp
push
inc
sbb
and
aad
mov
mov
sub
and
ja
xor
and
xor
je
test
push
scas
mov
inc
mov
mov
xchg
mov
xor
enter
cmpb
mov
xchg
inc
jne
xchg
mov
js
jmp
dec
add
add
and
inc
xor
pop
sahf
adc
js
push
inc
or
cmp
aaa
ja
add
lds
push
xchg
push
pop
pop
subl
imul
call
mov
sarb
roll
popf
add
adcl
jge
mov
jbe
and
pop
sar
mov
shl
pcmpgtd
sbb
call
out
je
and
push
fstpt
jb
mov
xor
mov
or
call
inc
sub
pop
mov
jmp
mov
or
adc
mov
push
pop
mov
push
add
lss
leave
je
stos
adc
btr
addb
mov
ficoms
imul
xchg
cld
jmp
cld
aam
cwtl
das
fmuls
dec
inc
lock
add
sub
mov
xor
xor
cmp
ja
and
bt
jb
ja
aas
xor
ret
ret
fdivrp
mov
adc
push
inc
cmp
jne
inc
decl
jne
les
lods
and
mov
dec
xchg
xor
add
movsb
and
scas
and
movsb
sahf
in
aaa
and
and
out
sbb
iret
adc
add
inc
test
push
mov
pop
or
mov
jmp
loope
in
decb
push
aaa
sub
inc
mov
dec
dec
lock
inc
in
or
dec
int3
adc
sbb
mov
inc
mov
sbb
ljmp
jns
ljmp
sarl
adc
xchg
and
xor
pop
and
pusha
pop
dec
add
xorb
mov
or
cmp
fisttps
cmp
add
inc
pop
xchg
xor
push
aas
or
mov
xchg
aad
inc
pushf
pop
cmpb
adc
push
aam
or
cmpsl
add
sarb
mov
stos
jle
push
mov
xchg
sbb
mov
jmp
dec
dec
xlat
clc
mov
inc
pop
or
jg
mov
xor
adc
inc
cwtl
inc
bound
or
mov
pop
mov
movsl
int
pusha
cwtl
adc
pop
out
or
inc
sahf
cmp
clc
mov
mov
hlt
rcll
cmp
imull
mov
iret
cmp
sub
clc
icebp
adc
xor
clc
sti
or
or
sbb
mov
mov
cmp
pop
inc
xor
pop
cmp
lods
addl
mov
out
bound
jno
loopne
or
imul
in
icebp
inc
mov
mov
push
mov
adc
pop
mov
mov
or
xchg
and
pop
std
pop
jp
adc
ss
daa
lret
movsb
out
call
lret
xor
lahf
or
jo
sub
mov
sbb
dec
mov
add
clc
rcl
stos
repz
adc
gs
xchg
push
jecxz
lahf
nop
test
cmp
iret
stos
mul
mov
jge
dec
inc
xor
cmpsl
popf
rol
mov
pop
filds
pop
ret
mov
sub
xor
jp
dec
sarl
loope
mov
xchg
add
vmptrld
loopne
das
xor
xchg
push
xchg
fdivrs
jecxz
cmp
push
in
sahf
rol
jnp
ss
and
add
sbb
cmp
int3
add
mov
out
jns
mov
or
dec
sub
jb
push
iret
lds
sub
pop
xchg
adcl
cmp
push
cmp
loope
xchg
adc
rclb
cmp
rcr
aam
stos
cmp
bsf
cmp
cmp
mulb
outsl
inc
ss
mov
fisttpl
cmpsb
clc
daa
sbb
or
femms
loopne
pushf
ds
ret
push
jb
loopne
js
rcrl
sbb
push
cs
xor
add
xor
and
cmp
push
sub
cmp
mov
push
push
push
daa
push
stos
mov
dec
jb
add
adc
call
sbb
and
pop
sbb
cmp
nop
fwait
push
icebp
out
add
add
inc
mov
adc
addl
jl
push
inc
movsl
out
movsl
and
lock
shll
push
shll
inc
pop
aaa
adcb
dec
enter
pop
in
and
addr16
lahf
sbb
addr16
adc
and
js
icebp
inc
mov
in
xchg
test
lret
inc
gs
and
sbb
and
mov
int3
test
nop/reserved
enter
xchg
fiadds
xor
and
xchg
out
cli
cmpsl
enter
cmp
je
mov
aad
out
or
pop
insl
adc
pop
push
or
xlat
and
pusha
jle
xor
callw
rclb
xor
add
add
xlat
inc
xchg
aas
out
cs
add
inc
fwait
pop
cwtl
bound
jg
clc
imul
cmp
sysexit
sub
decl
sub
lea
push
jns
into
push
push
sbb
jmp
jmp
ljmp
inc
daa
and
fldenv
inc
adc
outsl
das
icebp
aaa
pop
sbb
pop
in
xor
roll
add
pop
lods
bound
dec
push
adc
adc
xlat
loope
or
hlt
adc
xchg
les
jns
jmp
call
cltd
pop
popa
xor
in
jno
les
stc
inc
fcoms
loop
sbb
push
outsl
je
push
adc
jns
mov
push
inc
cmc
push
pop
push
pushf
add
in
pusha
adc
fsubrp
push
xchg
push
lds
int
dec
enter
fildll
mov
leave
dec
cs
das
js
cmp
movsl
pop
filds
push
mov
mov
mov
adc
adcb
mov
or
subb
sub
add
outsb
push
divb
aaa
add
push
daa
inc
adc
jno
xchg
and
sub
cmpsb
add
inc
sbb
lock
lock
sub
add
jle
loop
xor
jmp
mov
and
add
add
xor
sub
sahf
add
mov
sub
aad
sbb
aas
lock
pop
faddp
sbb
cmp
in
cmp
inc
aam
pop
add
inc
icebp
lea
and
lea
ret
xchg
push
cmp
mov
sbb
cmpb
loopne
adc
jmp
pop
jecxz
add
inc
add
cmp
jno
mov
xlat
test
pop
jne
testb
orb
sbb
loope
hlt
push
pop
shrb
je
jbe
and
sub
cmp
mov
adc
adc
nop
ret
inc
jbe
pop
or
std
cmp
je
lock
cmpb
mov
sub
jo,pn
xchg
sbb
ljmp
sbb
jmp
std
rclb
mov
add
sbb
add
sub
pop
or
and
repnz
and
pop
dec
jae
mov
sub
mov
js
sbb
fcoml
adc
cwtl
cmp
sub
movl
adc
pop
andb
shr
ds
inc
stos
stc
sbb
inc
adc
or
mov
push
movsb
rol
insb
fstl
decl
iret
movsb
cmp
dec
int3
mov
lahf
pushf
pop
add
ret
cmp
and
lods
getsec
sbb
jmp
loop
jmp
add
push
add
push
mov
loope
sub
popa
inc
in
movsl
add
cmpsl
pusha
mov
cmpsb
or
fcomp
fstpt
je
jg
mov
jmp
ficoml
scas
shlb
mov
jg
pop
sarl
lea
jmp
dec
xchg
sub
or
jbe
inc
add
loope
fldl
out
sbb
dec
ljmp
jg
sub
push
or
ret
lahf
add
stos
js
cmp
dec
push
sbb
lea
js
add
cld
push
lcall
or
pop
push
xcrypt-cbc
cmpsl
shll
mov
scas
push
mov
scas
pop
inc
fs
add
or
je
jo
xchg
pop
xor
cmp
std
inc
jmp
pop
xcrypt-cfb
cmpsl
gs
inc
xchg
jg
cld
imul
or
nop
test
pop
jo
mov
jno
mov
ficomps
push
or
inc
inc
nop
lods
ret
jl
repz
push
xchg
push
mov
lods
test
sbb
xchg
adc
mov
sbb
or
xor
or
or
hlt
shr
and
aam
pop
movsb
xor
adc
movsb
repnz
jg
out
push
fidivrs
neg
testb
jne
mov
or
or
mov
and
lock
dec
inc
jge
sbb
jle
jno
mov
dec
in
cmpl
test
lock
or
lea
or
pop
pop
dec
loopne
out
je
inc
pop
mov
xor
xchg
addb
mov
and
arpl
pop
pusha
pushf
int3
or
adc
rorl
gs
nop
add
pop
xchg
sub
add
push
jl
bound
loopne
pop
jnp
popa
and
or
and
popl
jle
sbb
mov
sub
mov
inc
mov
jbe
sub
cmp
insl
ret
jno
repnz
sub
fwait
insl
fnstcw
subb
dec
fcoms
mov
pop
adc
ret
lahf
out
mov
jmp
push
xorb
add
add
fldt
push
jbe
and
pop
enter
add
enter
imul
bound
mov
outsl
rorl
iret
scas
arpl
push
test
lds
push
sub
out
push
lcall
xor
mov
mov
xchg
shl
mov
insb
pop
or
cmp
outsb
jne
sbb
dec
cmp
xor
jne
dec
movsb
int3
jp
xor
cltd
push
outsb
add
out
fists
push
clc
sti
push
cmp
movsb
push
lret
std
adc
mov
mov
or
push
ficomps
leave
mov
pop
xor
or
dec
or
sbb
in
outsl
adc
aam
loope
dec
or
sbb
jne
movb
loop
bound
mov
sbb
push
jbe
add
sar
or
jmp
inc
mov
push
and
enter
int3
cmp
fwait
pop
xchg
inc
add
jbe
add
mov
jmp
push
push
enter
jl
arpl
rcr
loopne
sub
push
mov
mov
push
roll
jmp
inc
fucomp
pop
mov
icebp
sub
xchg
jg
mov
push
cmp
push
jo
insl
push
xor
cmc
xor
jge
loopne
mov
call
or
sbb
xchg
pop
icebp
mov
mov
inc
add
xchg
fs
lods
dec
jne
fcompl
call
out
cmp
ja
cltd
xchg
and
pushf
mov
push
lods
push
inc
in
mov
pop
sarb
cmp
push
hlt
mov
ss
test
or
push
dec
bound
inc
dec
pop
out
cmpsb
sbb
faddl
inc
sbb
outsb
inc
shlb
add
sbb
mov
imul
sbb
repnz
or
ss
lea
pop
scas
js
sub
xor
scas
iret
and
in
or
xchg
mov
pushf
pop
inc
jmp
mov
sarl
es
idivb
enter
sbb
dec
faddl
hlt
pushf
xorl
push
fsubl
addb
leave
or
xorl
push
sub
or
xor
sbb
aam
or
and
add
sub
test
jle
cmp
push
jge
or
or
ror
loop
jge
jg
or
jg
lods
add
add
je
data16
fcompl
jmp
pushf
or
add
add
sbb
inc
mov
popf
movsl
add
push
mov
or
mov
icebp
and
mov
pop
sbb
mov
ficoms
cmp
lods
xchg
pop
sbb
aam
rol
dec
ret
dec
or
pop
fs
xchg
iret
repnz
sub
jge
pushfw
add
push
js
xor
call
inc
insb
data16
add
outsl
loopne
test
mov
cli
rol
pop
fiadds
je
lret
push
les
pop
cwtl
aas
dec
push
or
inc
mov
push
fldl
add
pop
insb
das
push
inc
outsb
dec
lahf
sti
and
aas
add
loope
and
xlat
or
push
xlat
push
push
ljmp
cld
cmp
mov
mov
cmp
jle
test
xchg
xlat
shll
add
mov
and
add
cmpsl
pop
test
push
and
xchg
repz
mov
xchg
inc
sbb
push
popf
xor
xor
and
push
add
cmp
pop
push
mov
inc
pop
lds
push
stc
enter
movsb
add
push
inc
pop
xchg
into
cmc
int3
and
dec
xor
dec
push
push
or
orb
inc
sbb
sub
daa
cmp
inc
xor
pop
mov
xorl
rolb
jg
sbb
jmp
sub
dec
call
or
ret
test
dec
jmp
mov
add
cmp
pop
push
sbb
sahf
test
adcl
push
jb
jo
imul
pop
push
scas
lcall
mov
push
call
aaa
xor
mov
mov
and
fadds
jo
sbb
hlt
or
or
inc
rcrl
add
adc
bound
adc
lret
rcrl
jecxz
mov
std
ja
sbb
add
icebp
inc
pushl
cli
push
sub
sarb
mov
inc
and
pop
outsl
es
cmp
loopne
jne
inc
lret
jp
sbb
dec
insl
push
pop
dec
sti
ja
inc
pusha
add
outsl
add
cmp
mov
rolb
ret
jne
jae
mov
dec
call
iret
test
dec
and
sub
cmp
jne
adcb
lods
into
mov
and
push
mov
fwait
push
add
rolb
js
sub
jae
in
dec
clc
xchg
clc
pop
fldcw
cli
nop
add
mov
test
xlat
or
sbb
add
xchg
frstor
negb
adc
clc
jne
mov
mov
lret
outsb
arpl
cmp
dec
mov
cwtl
inc
popl
xor
mov
jl
inc
das
and
outsl
xchg
clc
adc
pushf
or
push
cld
xchg
xchg
mov
mov
xor
jmp
cmpsl
inc
xchg
inc
arpl
add
clc
pop
and
cmp
or
and
lds
dec
xor
pop
xchg
jmp
mov
mov
inc
push
hlt
mov
inc
cmp
sub
mov
xchg
sbb
rolb
mov
adc
sub
pop
mov
insl
jmp
aaa
pop
sbb
cmp
jl
or
and
adc
or
orl
mov
loopne
andw
mov
mov
lret
and
lahf
jmp
pushf
push
and
inc
or
pop
clc
int
out
push
sbb
popa
stos
xor
leave
pop
xor
ds
inc
out
iret
dec
adcl
xor
and
xchg
popa
push
adc
stc
adc
add
or
pop
mov
nop
data16
dec
je
and
xor
addb
cmp
and
cmp
rorb
mov
inc
push
and
or
pop
cmp
ss
pop
dec
mov
or
imul
imul
add
add
or
psubusw
outsb
sbb
js
xchg
sub
add
add
ret
push
xchg
cmp
dec
jp
sbb
jle
ret
das
mov
dec
lods
sbb
lods
mov
pop
adc
push
inc
adc
pop
popf
sar
cli
jo
ret
dec
sbb
dec
out
mov
jb
pusha
cmc
out
mov
mov
std
adc
stos
adc
sbb
pop
jo
push
movb
adc
jo
mov
std
and
fsubs
arpl
sti
xorl
hlt
aaa
cmp
sub
test
leave
stos
pop
pusha
add
shlb
icebp
mov
mov
bound
xorb
pop
xchg
jmp
fs
inc
lret
jl
xchg
icebp
call
mov
push
movsb
push
or
adc
mov
lsl
cld
daa
pusha
mov
popf
or
cmp
mov
scas
xchg
mov
enter
daa
add
inc
test
nop
bswap
add
fs
sbbl
sar
cmp
push
add
push
push
or
jne
add
jns
and
out
loope
popa
sub
repnz
pusha
sahf
dec
dec
xor
lret
inc
inc
dec
dec
sub
js
cld
hlt
push
clc
jl
pusha
dec
push
pop
nop
xor
mov
pop
adc
and
or
dec
mov
loope
or
dec
daa
sub
btr
xor
leave
xor
xor
fiaddl
cmpsl
inc
dec
lcall
sub
bound
inc
jne
cwtl
pop
cld
cmp
movsb
rolb
sbb
add
daa
xor
cmc
popa
add
je
repz
ficoms
fst
es
adc
add
push
ja
xchg
mov
adc
cmp
inc
inc
jnp
adc
sbb
data16
adc
mov
sbb
sbb
mov
xchg
nop
xor
test
aaa
inc
dec
jne
icebp
insb
lods
jp
mov
sub
push
sbbb
jae
jb
outsb
mov
daa
shrl
andb
or
loop
rcll
sub
ret
lcall
lods
dec
fldt
pop
pusha
inc
fdivrs
sub
mov
jmp
mov
loopne
lock
ja
mov
jg
sbb
fsts
pop
inc
dec
fsts
lret
addb
mov
dec
mov
js
xchg
push
cld
aad
pop
fcom
fsubrs
sete
adc
fcoml
mov
jae
sahf
xor
pop
lcall
cld
or
mov
jp
mov
jle
push
mov
add
mov
dec
fs
js
cltd
test
dec
and
call
dec
pop
cmp
jmp
mov
rcrb
outsb
les
mov
mov
jmp
jo
mov
shll
jl
mov
pop
enter
pop
mov
sbb
js
and
ss
and
fs
daa
xchg
dec
inc
aas
mov
pop
vmovdqa
daa
into
mov
add
and
int3
jg
jge
repnz
clc
sub
inc
in
inc
mov
inc
push
sub
pusha
movsl
lea
arpl
pop
push
dec
mov
cld
inc
jl
jne
cmpsl
test
push
std
adc
inc
add
push
aas
cmpb
test
mov
mov
or
fs
xor
insl
notb
sub
shlb
sub
int3
ret
pop
pop
mov
add
mov
fs
xor
push
decl
movsw
orl
in
cmp
pop
pop
test
xchg
xchg
popa
mov
add
mov
shlb
jbe
shr
adc
repnz
and
jno
pop
andb
and
in
sub
xchg
int
xchg
jo
imul
adc
mov
xchg
in
add
into
js
xor
fs
mov
push
pop
mov
dec
sbb
adc
addl
ret
mov
dec
sub
lret
cmp
cmp
sbb
test
out
jb
push
and
in
mov
or
outsl
jb
push
or
outsl
mov
clc
in
rol
xchg
sbb
xor
repnz
dec
aam
adc
and
cmp
xchg
or
jne
in
and
pop
inc
enter
sub
pushf
pop
mov
adc
xor
adc
cmovne
xor
inc
es
dec
dec
dec
fmuls
cmpb
leave
inc
les
imul
inc
test
divl
ficompl
or
jnp
adc
xlat
pop
push
inc
lods
sub
fcoml
pop
or
sbb
fsubs
imull
fdivrl
push
idivb
lods
pop
insb
push
data16
stc
sbb
mov
fistps
addr16
adc
pop
mov
mov
mov
pop
popf
jne
addr16
cmp
mov
pop
data16
and
rcrb
jp
iret
in
adc
fwait
add
adc
subl
in
mov
inc
pusha
sbb
push
je
ffreep
lcall
adcb
or
adc
push
rorl
inc
mov
adc
adc
mov
cmp
or
shl
jp
nop
aaa
or
imul
fsubrl
fdivs
mov
jo
out
pop
dec
xchg
test
ja
or
nop
pop
fst
or
push
roll
push
inc
xor
xor
jb
rorb
add
es
fmuls
popa
imul
mov
jmp
cmp
popf
mov
ds
out
xchg
popf
lock
inc
push
sbb
adc
hlt
mov
fadd
lcall
sub
sahf
cmp
divl
js
mov
jge
popa
add
jae
sub
or
imul
insb
movsl
add
jns
stc
adc
sub
sbb
or
jmp
adc
js
sbb
mov
xor
dec
adc
insb
and
pusha
push
loop
cmp
cmp
xchg
sahf
and
xor
add
or
repnz
jle
fstps
add
lock
cs
dec
loopne
or
out
xchg
insl
sbb
fildll
add
mov
add
and
fstpl
fldl
insl
mov
daa
mov
or
mov
mov
add
enter
addb
in
iret
repz
push
fs
add
add
jnp
inc
loopne
xchg
sub
jnp
mov
das
sbb
mov
sar
jle
jns
popf
or
sbb
bound
popa
es
clc
sub
pop
movsb
pop
adc
and
ss
adc
sbbb
jo
dec
xor
mov
mov
adc
pop
adc
xlat
mov
cmp
ret
jno
adc
sqrtps
arpl
lock
loopne
mov
cmp
mov
stos
outsl
les
cmp
jne
mov
and
testb
mov
push
clts
inc
jno
cmp
or
and
fisubl
out
pusha
rcll
dec
add
aam
test
movsl
inc
arpl
xchg
loopne
bound
test
es
movsl
xorb
or
pop
add
cwtl
fdivrl
push
jmp
sub
enter
lret
hlt
aad
lret
cli
in
daa
and
pop
mov
adc
pop
cmp
mov
push
jb
push
enter
xor
popa
test
mov
ss
hlt
aam
std
xchg
and
orl
cmpb
mov
mov
mov
sub
mov
add
hlt
inc
daa
mov
cmpsl
daa
adc
push
jo
enter
std
mov
jmp
cmpsl
lcall
scas
sub
cmpb
cld
add
das
xchg
in
pop
call
in
movsl
jo
pop
mov
lods
inc
pop
test
jno
iret
loopne
arpl
cli
in
iret
je
jmp
push
mov
push
lahf
add
inc
sub
bound
imul
outsb
rcrl
mov
orb
ds
pop
cmovns
dec
xor
jnp
jle
cmpb
push
fistpl
les
inc
add
jb
outsl
imul
ss
add
jo
sbb
movsb
or
mov
push
cmp
stc
mov
adc
cmpsl
mov
cwtl
push
ss
push
call
pop
mov
jg
lahf
xchg
lret
jno
lahf
movb
mov
pop
pop
test
sbb
add
cmp
test
loope
jae
fisttps
in
loope
push
mov
or
sbb
add
aad
repnz
and
xor
or
call
les
dec
clc
out
jns
add
pop
pusha
aaa
je
ret
les
add
call
imul
pop
and
test
xor
add
mov
cmpsl
sbb
cmc
dec
imul
jne
jl
andl
adc
xchg
sahf
out
ja
or
inc
push
dec
push
nop
lods
aam
mov
das
jbe,pn
inc
daa
repz
adc
push
pop
pop
ds
push
dec
push
int
leave
js
xchg
dec
in
jb
cmp
rorb
push
inc
xchg
xor
mov
gs
xor
aaa
mov
loopne
lock
mov
push
xchg
in
mov
add
fdivl
jl
fcoml
fldenv
pop
mov
mov
inc
mov
jnp
out
cmp
sub
xchg
sbb
ljmp
push
xor
ja
inc
cltd
sar
insb
inc
push
test
xor
aam
or
xorl
fwait
sahf
dec
sarb
repz
add
adc
fiadds
sub
pop
push
aaa
sbb
push
mov
jbe
dec
pop
incl
push
aas
enter
pop
lea
aad
sarb
lods
test
loope
decb
test
fwait
mov
aaa
shll
jmp
inc
push
mov
mov
jne
imul
fsubl
cmc
shrl
sub
incb
sbb
and
cwtl
and
test
xor
repnz
and
movsl
jo
push
out
int3
popf
sub
subb
mov
sbb
test
out
dec
dec
inc
fcmovbe
jg
pop
aad
mov
faddl
cwtl
call
lods
cltd
xchg
fidivrs
adc
sbb
pop
mov
cmp
jne
fisttps
xor
jmp
sub
psubw
xchg
mov
pusha
rcl
je
ja
fdivrl
sbb
stc
mov
add
adc
mov
sub
je
inc
test
imul
jns
cmp
xor
adc
xor
and
mov
dec
outsl
or
cmpl
ss
lds
pop
dec
jp
fsubrl
xchg
ret
test
jbe
dec
shrb
je
add
or
enter
jp
orl
call
xor
fistps
or
dec
je
in
and
mov
test
adc
sub
dec
pop
imul
fucomi
mov
daa
pop
or
pop
or
xchg
push
and
jp
mov
test
stos
cmp
push
pop
mov
push
add
xorl
jnp
push
and
push
cs
push
mov
sahf
inc
nop
mov
hlt
gs
dec
mov
sbbl
sahf
fisttps
stos
ret
jmp
cmc
lods
pop
or
push
dec
mov
or
loop
daa
in
sub
in
je
incb
pop
ret
push
lret
push
xor
cltd
jmp
sub
rolb
sub
mov
jne
jnp
push
out
add
sahf
ret
xchg
push
push
je
lods
inc
int
push
adc
ljmp
ds
or
in
xor
pushf
inc
insb
cmp
inc
popa
sti
pop
jg
js
or
jge
jae
mov
cld
loopne
or
aaa
dec
ja
inc
add
shrb
jmp
femms
shll
inc
cmp
ds
pusha
mov
push
dec
cmpl
rorl
cltd
add
cmp
xor
lret
mov
call
mov
call
jle
das
nop
pushf
push
pop
fdiv
int
daa
addr16
test
push
inc
loope
ret
cld
push
add
add
daa
cs
add
pop
shll
and
scas
ror
adc
jbe
aam
cmp
add
mov
leave
mov
rolb
repz
and
mov
inc
pop
subb
loope
ret
dec
repz
pop
dec
pop
push
jo
jl
mov
mov
aas
inc
aam
mov
in
pop
cli
push
add
adc
jns
and
ds
jmp
xchg
hlt
mov
dec
mov
and
add
cmp
shll
int3
mov
xchg
xor
insl
das
pop
push
adc
add
inc
mov
fsubs
cmp
inc
dec
test
imul
mov
or
adc
mov
dec
push
test
pushl
imul
fadd
repnz
push
out
push
mov
cmp
cmp
shr
mov
andl
iret
jns
ret
dec
adcb
dec
mov
add
jno
sbb
or
mov
cmpsb
push
push
sti
dec
xchg
jae
push
call
cmp
add
dec
cmp
jne
incb
sbbb
and
andl
pop
push
dec
rorb
test
xchg
daa
js
inc
cmpb
push
sbb
cmp
inc
call
jo
sbb
jmp
xor
into
mov
imul
sbb
inc
out
cmpsb
sbb
pop
dec
sahf
dec
ss
sbb
rclb
or
mov
mov
inc
test
add
push
dec
imul
aam
sbb
fcoml
cmp
pop
sub
add
sub
insl
mov
and
js
sarl
jmp
test
xlat
movsb
inc
popa
test
sti
mov
pop
xor
pusha
mov
and
movsb
rolb
inc
jge
or
enter
mov
sahf
mov
pushf
pop
pop
fidivl
mov
test
jg
mov
mov
clc
jae
rcrl
mov
cmpsb
test
sbb
sti
cmp
xlat
test
or
xor
xorb
push
rcr
test
adc
sbb
call
and
cld
or
mov
mov
sub
aas
sbb
sub
hlt
xor
and
pop
roll
or
and
jle
movsl
push
lcall
es
cmp
push
data16
outsb
daa
jl
cmp
push
adc
jo
jns
and
dec
xchg
jge
pop
pop
cli
or
cli
test
lea
flds
mov
mov
xchg
lret
xor
aam
cmp
and
cld
insb
test
jb
push
div
fs
in
insl
xor
add
mov
push
out
clc
xor
imul
int3
jmp
clc
in
cmpsl
nop
daa
mov
inc
push
hlt
out
mov
sbb
push
sub
xor
sub
xor
aad
shrl
sbb
andb
sub
rolb
xchg
dec
out
repz
dec
or
dec
loopne
loope
pop
cmp
sub
shr
lods
inc
or
inc
adc
cmp
xor
dec
es
in
cmp
jg
add
movsl
mov
sbb
or
bound
sti
aam
mov
packuswb
std
jle,pt
jl
or
sbb
sbb
xchg
cmp
dec
notl
ds
and
and
mulb
jg
mov
push
add
mov
mov
add
mov
out
movsl
push
pop
outsl
lds
call
outsb
sbb
and
adc
insl
and
push
test
dec
pop
sbb
or
pusha
adc
sbb
mov
leave
xchg
xchg
push
and
sbb
enter
rclb
mov
dec
sbb
rcrl
in
push
push
sub
push
mov
test
xor
jno
insb
pop
inc
scas
addr16
insb
mov
test
pop
pop
orl
pop
sub
jbe
dec
test
xor
mov
inc
sub
sbb
mov
cmp
je
sbb
mov
dec
add
or
push
enter
mov
jecxz
inc
jmp
das
xor
addr16
push
xchg
fistl
ss
clc
mov
add
dec
or
mov
sub
and
jns
sbb
call
das
popa
mov
das
insb
jne
fmull
sbb
or
xchg
ror
or
scas
das
adc
cmp
or
jp
mov
mov
mov
push
ja
icebp
add
jg
and
lahf
sbb
mov
and
jecxz
add
dec
mov
rolb
cmp
mov
jg
pop
pusha
inc
into
push
pushf
sub
es
mov
or
mov
shl
sub
je
cmpl
cmpsl
jno
fists
add
sar
push
insb
sbb
or
xor
or
fmull
shrl
call
add
ss
adc
in
mov
cwtl
fists
adc
leave
bound
and
sbb
cmc
rolb
mov
iret
rclb
jp
daa
sbb
out
fs
mov
sbb
add
push
adc
loopne
ja
repz
sub
sub
pop
hlt
add
or
mov
imul
or
push
cmp
push
mov
cli
aam
loope
jae
jnp
aam
inc
insb
ret
or
mov
and
ds
scas
mov
dec
push
mov
bound
mov
dec
rcrb
imul
inc
lds
mov
add
add
cmc
sbb
js
and
jmp
cmp
jno
jl
enter
mov
mov
pop
adc
add
stos
adc
scas
pop
sti
lds
orl
lret
adc
and
adc
add
sbb
push
adc
sbb
and
adc
adc
icebp
adc
mov
add
and
mov
adc
inc
cmovb
xlat
adc
iret
outsb
cmp
jl
push
dec
jge
pop
xor
mov
cwtl
and
adc
push
outsb
mov
outsb
push
xchg
dec
jo
push
setne
out
fwait
bound
add
cmp
ss
or
add
pusha
addl
data16
push
pop
jo
jmp
add
test
jo
incl
and
mov
insb
ja
or
inc
inc
pop
inc
dec
mov
arpl
decb
add
dec
pop
imul
or
stos
add
cvtpi2ps
inc
ljmp
and
cmp
jne
jae
mov
daa
nop
xchg
and
jne
hlt
or
mov
cli
inc
sub
mov
push
sahf
xchg
jmp
pop
or
and
xchg
es
sbb
mov
hlt
pop
dec
pop
enter
sub
jnp
cmpl
sub
sbb
aad
inc
jo
adc
arpl
loopne
xor
inc
add
cmpsl
pop
mov
fsubrs
popa
pop
add
loopne
jle
mov
rcll
lcall
divl
jmp
sbb
xchg
loopne
adc
aam
lods
push
dec
daa
adc
pop
sbbb
pop
or
and
xchg
inc
sbb
add
leave
jno
cs
ret
jp
push
fstp
and
jge
cmp
jg
push
dec
cmp
out
mov
insb
sub
adc
jecxz
call
pop
loopne
mov
add
loopne
outsl
mov
call
insb
sbb
sub
or
rolb
popf
pusha
pushf
push
stos
jb
incl
dec
ja
repnz
xor
sbb
and
movsb
mov
mov
push
mov
outsl
dec
rcrl
mov
repnz
daa
inc
pusha
or
xor
dec
loop
push
and
jl
and
ja
and
inc
mov
pop
in
pusha
jne
adc
pop
jne
out
adcb
scas
adc
or
inc
and
sahf
pop
mov
insb
xchg
or
jbe
sbb
nop
sahf
xchg
and
aaa
or
notl
cmp
or
maxps
pop
pop
nop
ja
pop
xchg
cwtl
loopne
inc
fmull
adc
movsl
sub
mov
xchg
xchg
setle
inc
xchg
out
mov
push
sbb
sarl
pop
pusha
popa
sub
xchg
mov
add
sub
fs
add
or
bound
sbb
lds
mov
cmc
inc
das
pop
xchg
jmp
lcall
nop
repnz
sbb
push
daa
out
inc
push
mov
dec
lahf
push
bound
cltd
ja
add
xchg
ja
mov
xor
into
pop
push
dec
or
push
jmp
addl
adc
mov
xchg
pop
mov
mov
outsb
lahf
rolb
or
inc
je
dec
push
int
cltd
test
stos
xor
shrb
adc
out
popf
into
and
push
popa
and
xchg
cmp
loop
or
and
add
mov
cmp
ror
cld
ficompl
adc
and
adc
fs
frstor
wrmsr
rol
adc
inc
xchg
inc
pop
xchg
das
xchg
sbb
sub
cwtl
mov
inc
adc
sub
shrl
data16
add
nop
and
add
sbb
leave
into
xchg
clc
aad
fidivs
mov
btc
add
cmp
xor
xchg
xor
dec
adc
cmpl
outsb
adc
xchg
outsl
insb
mov
fidivs
leave
test
xchg
aas
or
and
adc
add
test
adc
test
inc
inc
or
sahf
fdivr
add
add
push
sbb
inc
lret
ss
gs
or
sub
cltd
cmp
cmp
inc
add
and
xlat
pop
sti
cwtl
scas
pop
dec
xchg
and
jmp
add
jne
lds
mov
sub
lret
test
cmp
lret
or
and
sub
sahf
mov
cld
addr16
cli
addr16
or
mov
pop
or
adc
cs
mov
sahf
adc
mov
adc
add
rorl
sar
push
cltd
cmpsb
xor
jg
or
call
adc
rcl
mov
lret
ds
jle
push
scas
sbb
dec
push
adc
xchg
test
outsl
inc
or
movsb
loopne
add
fmull
les
and
push
pop
ret
orl
pop
loopne
sub
dec
dec
pop
push
and
xor
sarl
loopne
nop
jp
repz
sbb
pusha
je
js
push
jp
shlb
fwait
sub
xchg
adc
xchg
out
shll
sbb
mov
pop
sbb
loopne
sbb
dec
in
call
cwtl
dec
sbb
int
cmp
ret
cmp
shll
sbb
lret
pop
scas
mov
add
pop
leave
dec
push
ret
push
push
cmp
add
or
addr16
sbb
movl
add
xchg
adc
sbb
and
mov
jecxz
es
pop
imul
das
or
inc
ficoml
sub
in
pop
fwait
popa
push
push
mov
and
and
insl
and
pop
pop
leave
push
add
sub
mov
out
ftst
sbbl
setl
and
pop
fildll
in
repz
ds
pop
cs
je
push
mov
jecxz
rclb
cmp
cs
push
push
dec
fistpll
outsb
inc
fistpl
xchg
jge
pop
leave
mov
lea
jae
push
das
add
push
out
cmpsl
push
sbb
cwtl
fidivl
push
and
lahf
in
in
mov
inc
push
mov
aad
and
add
xchg
ret
repz
xchg
adc
jo
jl
ss
adc
ret
test
fucomip
mov
lea
push
cmpb
mov
ljmp
or
mov
cwtl
loopne
insl
xor
into
lock
loopne
ror
xlat
pusha
inc
cmp
xchg
mov
xchg
enter
adc
in
pop
sahf
sub
out
sbb
inc
sub
cmp
ret
rorb
inc
mov
into
xchg
dec
nop
sub
jmp
fdivs
movl
xchg
jno
xchg
inc
xor
pop
arpl
dec
mov
pop
sub
cmp
pusha
mov
sbb
push
mov
inc
cmp
lret
pop
xor
xor
fisubs
nop
mov
iret
mov
pop
andl
mov
pop
adc
push
pop
mov
mov
enter
fadds
popa
pop
dec
fwait
mov
mov
jo
push
jb
cmp
loop
xchg
js
jg
gs
lret
add
pop
adc
imul
popa
insb
dec
data16
movl
push
arpl
pop
adc
aaa
push
imul
dec
repnz
rcrb
xchg
popl
cmp
jne
cmp
xor
lret
jb
pop
nop
or
mov
inc
mov
icebp
or
inc
jp
sbb
call
int3
cmp
fidivs
cmp
mov
sbb
icebp
add
es
adc
or
scas
in
push
mov
jle
dec
xor
xor
mov
cmp
loop
leave
xor
xor
inc
add
push
push
adc
movsl
add
ss
dec
push
adc
mov
mov
hlt
adc
rcl
test
cli
sbb
pop
push
jmp
push
jmp
fs
mov
add
cld
out
pop
mov
cli
mov
notl
movlps
and
int
mov
mov
dec
outsl
adc
adc
add
push
mov
imul
insl
mov
addl
or
inc
cmp
iret
push
mov
mov
xor
mov
push
gs
mov
icebp
nop
ss
pusha
pop
inc
test
test
push
inc
mov
mov
pop
or
push
push
divl
jmp
hlt
adc
movsb
and
pop
lods
cmp
movsl
test
mov
mov
faddp
clc
cmp
je
pop
inc
pop
dec
dec
negl
mov
in
xor
pusha
xchg
pusha
push
jbe
insb
sub
xlat
ljmp
jge
nop
test
inc
adc
pop
les
lret
pop
push
cld
outsl
add
mov
mov
mov
out
pop
or
xor
adc
sbb
or
and
lret
xchg
push
jne
sbb
sbb
sbb
sub
xchg
push
and
mov
test
lea
sub
lods
pop
adc
adc
push
cmpsb
xor
sub
xor
inc
pop
pusha
pusha
jb
inc
test
mov
movsl
xchg
loopne
call
inc
and
js
mov
or
sub
ret
cmp
push
cmp
stos
sbb
pop
and
rcll
sub
inc
adc
fcoml
xchg
xchg
xchg
ja
mov
xchg
mov
xchg
xchg
jo
jb
xchg
xchg
xchg
xchg
je
jbe
xchg
xchg
xchg
xchg
js
jp
xchg
xchg
xchg
xchg
jl
jle
xchg
xchg
xchg
xchg
pusha
popa
bound
xchg
xchg
xchg
fs
xchg
xchg
xchg
push
xor
mov
outsb
xor
xor
outsl
push
push
push
xor
xor
push
push
push
push
xor
xor
push
pop
pop
pop
xor
xor
pop
pop
pop
pop
xor
xor
pop
inc
inc
inc
xor
xor
inc
inc
inc
inc
sub
xor
leave
dec
es
push
cmpsl
or
push
jle
mov
ret
cs
push
es
pop
and
subl
scas
cmpsl
test
or
add
mov
ja
in
jns
mov
inc
xchg
or
lock
test
cmp
or
outsb
adc
add
add
or
jmp
adc
les
add
data16
xchg
fistps
xchg
adcl
or
or
clc
dec
dec
pop
pop
fidivs
je
insb
sbb
xor
push
data16
enter
lcall
adc
mov
outsb
gs
or
push
fisubrs
jle
jae
mov
push
or
xchg
das
cmpsb
pop
sub
fcoms
push
mov
pop
jo
outsl
sbb
push
inc
popa
jae
add
or
je
sbb
or
lods
rorl
push
inc
jl
or
adc
subb
ds
push
es
aaa
mov
insl
inc
insb
push
insl
jnp
push
push
je
into
insl
dec
outsl
jo
je
push
inc
add
insl
jns
sbb
mov
push
jb
gs
and
add
sbb
pop
pop
xor
pop
lret
mov
fnsave
aas
mov
negl
add
adc
pop
or
test
jne
pop
stc
sbb
test
jbe
mov
add
leave
or
lods
arpl
inc
inc
xor
out
fiadds
jb
jae
es
pop
outsl
stos
rcrb
xchg
stos
mov
int3
push
aam
mov
inc
or
adc
test
cmp
push
adc
mov
iret
sahf
inc
pop
in
mov
clc
lret
ret
xchg
stos
adc
add
mov
sub
mov
jg
and
insl
dec
sarl
lahf
stos
mov
push
les
je
xchg
pushf
dec
rolb
aaa
js
mov
stos
adc
pop
lret
shrb
iret
pop
adc
cmp
mov
push
push
les
or
addr16
fisubl
inc
jnp
pop
push
sbb
fs
lea
push
add
mov
inc
xchg
lods
add
cwtl
cli
jl
gs
fadds
mov
xor
or
inc
jge
in
jns
inc
push
loop
test
inc
push
mov
push
jl
lods
nop
sub
pop
xor
fidivrs
mov
lds
mov
sub
sbb
out
dec
push
les
addl
push
xor
sbb
ja
lock
add
sub
cmp
dec
jge
sarl
pop
nop
cmpsl
je,pt
lsl
pop
add
sbb
scas
ljmp
scas
sbb
call
enter
nop
lahf
pop
sbb
add
add
dec
sbb
add
test
lret
movsb
pusha
adc
cmp
jmp
pop
in
pop
daa
lret
and
addb
cmp
imul
rcrb
push
inc
popa
sbb
pop
sbb
shld
xchg
add
int3
frstor
ds
aas
push
jo
sub
mov
mov
test
push
adc
into
cld
insl
add
lods
and
ret
adc
add
jg
pusha
das
pop
fcoml
push
xchg
ret
popf
and
fadd
insb
xor
fcoml
push
out
scas
mov
ror
cmpsb
lret
mov
adc
mov
data16
loope
adc
pop
and
and
aam
mov
add
sahf
pop
or
or
fildl
in
inc
out
emms
cmp
jge
out
out
call
sub
mov
inc
xchg
es
lock
lods
pop
adc
call
add
and
push
leave
add
inc
mov
mov
mov
lock
push
or
push
xchg
jbe
sbb
addr16
mov
das
movsb
je
mov
fiaddl
push
int3
or
mov
inc
pop
push
jl
mov
mov
mov
and
push
hlt
dec
popw
lahf
testb
test
std
std
pushf
dec
push
dec
out
pop
fwait
in
add
in
or
or
fcompl
xchg
adc
add
data16
out
adc
outsb
or
insb
push
or
pop
xchg
addr16
sbb
xchg
adc
mov
sub
loopne
hlt
dec
xchg
push
je
push
dec
arpl
mov
movsb
or
xchg
push
mov
xor
mov
or
scas
loopne
fiaddl
repnz
adc
jo
push
mov
aam
hlt
push
push
lock
push
in
call
je
push
nop
xlat
xchg
mov
sahf
sub
xor
loope
in
ja
dec
pop
sbb
imul
xchg
inc
mov
je
lods
push
pop
aaa
sub
hlt
mov
ds
add
adc
lock
dec
popa
outsb
nop
loope
jmp
fimuls
shlb
add
jne
xchg
lock
jg
mov
addl
mov
arpl
sub
outsb
lods
dec
ret
adc
movzwl
dec
popf
mov
mov
popa
adc
mov
pop
dec
add
add
pushl
data16
mov
outsl
jne
sbb
aam
outsb
outsl
mov
roll
in
xlat
pop
inc
cmp
xor
outsl
dec
cmpsb
test
mov
pop
dec
adc
cmp
push
dec
or
sahf
add
push
addr16
out
xor
mov
sub
leave
lret
mov
mov
nop
adc
pop
test
out
mov
mov
das
pop
in
push
in
decl
outsb
js
or
rolb
xor
cvtps2pi
cmp
push
jmp
imul
mov
repz
mov
inc
mov
fists
sub
or
pusha
lds
sub
jmp
sbb
in
lea
cmp
cmp
rcrb
mov
xchg
inc
xor
sub
mov
aaa
icebp
cmc
mov
test
mov
inc
add
jecxz
enter
push
loope
int3
pop
mov
dec
or
lcall
and
lock
jge
push
jge
add
gs
push
enter
fnstenv
test
xorl
mov
jmp
cmp
xor
negl
shlb
xlat
mov
mov
adc
and
adcl
jl
repnz
cmpsl
or
shlb
adc
in
es
jmp
cmpsl
arpl
jmp
or
jb
movsb
arpl
or
movsb
cmc
pop
daa
dec
outsb
pop
dec
insb
repnz
and
lods
aaa
xchg
jbe
add
mov
pop
push
pop
jo
inc
inc
pusha
mov
pop
jle
pop
xchg
cmpsb
jb
add
out
xchg
xor
pop
gs
cmp
cld
xchg
fildl
inc
jne
push
and
addl
mov
pop
or
pusha
adc
jns
add
jbe
bound
in
and
push
adc
inc
addr16
outsl
dec
jg,pt
push
int3
shrl
jo
pop
imul
pop
inc
xor
das
inc
inc
xor
push
addr16
das
xchg
inc
je
inc
push
xchg
dec
push
adc
inc
insb
outsl
or
sbb
je
jg
pusha
mov
jg
sub
mov
inc
daa
pop
orl
lcall
aas
and
cmp
xchg
adcb
inc
fimull
mulps
int3
push
adc
adc
andb
repz
adc
imul
or
shll
inc
push
cwtl
cmpb
outsb
jne
repnz
adc
insb
and
iret
or
lahf
jno
sbb
arpl
jne
leave
sbb
mov
imul
push
lods
shrl
mov
rorb
scas
daa
or
in
das
or
test
mov
out
or
fcompl
ret
push
das
jl
cmp
hlt
sub
fs
pop
sub
ret
out
or
lock
movsl
mov
mov
test
mov
pop
lock
mov
push
dec
pop
inc
dec
inc
push
push
inc
push
add
std
xlat
ja
inc
inc
inc
push
dec
push
xor
push
pop
dec
inc
dec
dec
arpl
inc
inc
push
add
sub
adc
inc
push
dec
dec
push
mov
and
inc
push
xchg
inc
dec
dec
nop
aas
insb
lods
and
out
inc
inc
xor
xor
xchg
fcomps
stc
mov
inc
xor
inc
dec
mov
push
push
dec
sub
dec
lods
insl
imul
bound
das
sbb
mov
push
inc
inc
inc
das
mov
push
push
push
test
mov
int
push
dec
pop
adc
push
push
and
outsl
push
dec
push
inc
scas
dec
inc
dec
arpl
jecxz
adc
cmc
clc
pop
jg
xchg
mov
inc
mov
out
orb
test
and
cmp
daa
subl
mov
mov
jg
add
dec
or
sbbb
jne
add
add
or
push
mov
hlt
cmp
adc
std
sbb
idivl
pop
sbb
shrd
in
clc
push
dec
inc
or
cmp
add
or
jmp
add
adc
xchg
pusha
cmpsl
add
loopne
rol
jne
or
icebp
fsubs
inc
and
xchg
mov
jmp
xchg
sbb
dec
mov
add
shrl
aas
mov
cmpl
cmpsb
pop
cmp
sub
adc
icebp
popf
and
inc
push
mov
mov
ret
das
shl
dec
xchg
sbb
jnp
add
ss
ss
add
add
dec
jne
pop
shr
push
call
sub
pop
jnp
cmp
mov
mov
cwtl
add
incl
jb
movsl
jns
jae
and
fsubrs
out
sbbb
push
cmp
ljmp
pop
out
mov
or
stos
mov
mov
xor
ret
and
cmp
xchg
fisubl
test
mov
sub
ret
out
sbb
adc
rolb
enter
sbb
dec
sbb
je
rolb
jmp
adc
cs
mov
aad
inc
sti
fcomps
mov
adc
cmpsl
cmc
sbb
sbb
mov
cmp
push
nop
xor
xor
mov
add
clc
rep
pop
movsb
sub
mov
inc
fiaddl
cmp
imul
js
pop
push
sti
fwait
or
or
fisttpl
xchg
les
imul
cmpl
sbb
rolb
dec
inc
pmaxsw
xor
and
inc
cmpsb
rcl
test
add
mov
sahf
fwait
sarl
push
fildl
xor
sub
mov
pop
mov
inc
sbb
mov
or
call
sbb
jne
jb
out
aam
inc
push
pop
js
lea
xorb
fdiv
sub
mov
dec
sub
pushf
dec
mov
mov
fildll
xor
fsubr
mov
inc
push
das
loopne
outsb
mov
neg
push
push
sbb
ljmp
imul
or
imul
push
outsb
inc
sbb
sti
ret
mov
out
xchg
pop
mov
inc
pop
sbb
or
dec
negb
dec
sahf
mov
movb
and
aaa
faddl
adc
lods
les
cmpl
lret
xchg
and
mov
sub
sub
adc
stc
movsb
add
inc
movsl
add
in
add
jb
cs
fs
dec
push
cmpsb
pop
lock
jns
adc
mov
jne
fbstp
mov
inc
cmp
call
sbb
mov
negb
pop
jne
pop
sbb
jp
dec
cmc
push
leave
dec
in
push
or
and
rorl
or
push
cmp
mov
das
sbb
xchg
pusha
leave
lock
or
stc
mov
mov
sbb
pop
or
loopne
dec
inc
adc
loopne
mov
js
enter
dec
and
and
test
mov
movsb
push
stos
xchg
loop
nop
js
and
jb
aas
leave
sbb
loope
add
and
mov
fisttpll
inc
ds
sub
pop
mov
loopne
and
add
fmuls
xor
xlat
and
add
lock
lret
and
mov
and
data16
negb
out
das
cmp
and
adc
sub
mov
dec
or
add
mov
jmp
sub
jmp
je
inc
jecxz
ss
adc
repz
hlt
popa
gs
cmpsl
xchg
dec
mov
cmp
inc
adc
fdivr
or
loop
push
es
nop
add
in
dec
and
mov
cmp
add
das
adcb
or
inc
jle
and
cmpsl
xchg
jo
les
inc
sub
sbb
fcoms
inc
jb
gs
movsb
adc
sub
cmp
inc
and
scas
pop
sub
icebp
lret
pusha
mov
popf
xor
xor
mov
push
call
inc
push
adc
pop
dec
adc
inc
cmp
adc
cmp
dec
or
jge
or
dec
sbb
cmpb
lods
sbb
mov
push
mov
sub
or
sub
or
or
pop
rorl
xchg
push
sub
jnp
add
pop
pop
mov
or
add
lods
je
cmpsb
scas
in
or
shll
arpl
mov
es
cmc
leave
inc
xor
ds
sarl
dec
popf
dec
insb
test
inc
xchg
and
push
xor
ljmp
test
iret
sbb
sbb
sbb
sbb
sub
jns
xchg
rcrl
in
in
or
test
inc
or
jge
in
mov
fs
insl
push
mov
xchg
sub
rclb
fnstsw
mov
addl
and
add
daa
cs
nop/reserved
popf
push
ret
and
hlt
iret
adc
pop
shlb
iret
into
cmp
sub
inc
mov
add
xlat
mov
fldcw
mov
rcll
ljmp
test
mov
daa
jae
les
rclb
cmp
dec
jnp
inc
mulb
lret
jae
pop
aam
stos
xor
test
pusha
leave
dec
incl
or
or
sbb
adc
sbb
in
push
iret
inc
sbb
mov
pushf
pop
fstl
dec
mov
int
scas
sub
nop
popa
test
jo
fimull
xchg
leave
gs
ret
arpl
mov
sbb
out
clc
data16
psubsw
pop
inc
jae
dec
push
rclb
and
mov
cmp
je
dec
cwtl
shl
test
fistl
add
cmpsb
and
mov
sbbb
das
add
lea
mov
aam
and
sbb
cltd
mov
add
add
arpl
incb
dec
or
push
pop
push
xor
addr16
pop
push
cmp
or
shll
sbb
cmp
and
ret
je
dec
and
ret
mov
jle
jnp
dec
jmp
mov
jl
add
and
push
nop
xchg
jo
push
add
or
or
mov
pop
xor
push
xor
push
dec
xchg
adc
xchg
shlb
or
xchg
cmp
add
sbb
sub
adc
pop
xor
mov
sbb
and
pusha
shlb
or
shrl
xor
add
notb
je
sbb
adc
xor
sti
ja
in
mov
aas
rorb
or
pushf
xlat
xchg
pushf
fildl
outsl
daa
outsb
add
rcrb
xchg
nop
cld
inc
arpl
and
std
mov
add
sbb
ja
sbb
inc
push
aaa
aaa
mov
mov
fistl
leave
shlb
imul
add
aam
ret
pop
mov
insl
pusha
dec
push
aaa
fcmovnbe
enter
addl
push
jb
inc
addb
adc
int3
mov
dec
ret
mov
jge
fnstcw
fcmovu
adc
in
aad
js
xchg
es
push
push
cmp
int3
popa
or
pop
cmp
xor
aam
cmc
in
xchg
mov
aam
imul
aam
pop
mov
loopne
dec
aam
inc
movsl
pop
or
mov
pop
sub
and
sbb
in
push
mov
aam
jle
push
out
fmuls
jne
or
scas
pusha
in
xlat
ret
adc
sub
inc
sbb
or
or
outsl
ljmp
movb
push
or
mov
in
mov
add
shl
lcall
adc
not
and
aas
pop
rcl
xchg
dec
enter
jne
pop
pop
pop
aam
es
xchg
je
cmpl
add
pop
sub
test
add
jne
jbe
jo
nop
popa
and
jns
in
sbb
push
loopne
test
push
stc
ret
mov
enter
xor
inc
arpl
test
ss
dec
rorl
sub
in
and
and
xlat
repz
scas
test
push
mov
movsb
arpl
aaa
cmpsb
fdivrl
mov
push
push
sbb
or
daa
jnp
push
jp
mov
arpl
sbb
inc
inc
pop
fsubl
and
into
push
mov
lock
jmp
jns
pusha
lock
dec
add
or
mov
mov
sub
inc
inc
das
inc
popf
sub
inc
add
fs
sbb
push
lods
xchg
mov
data16
and
shrb
or
mov
dec
ret
pop
call
push
dec
cmp
mov
fisubl
loopne
fwait
sub
xchg
sbb
fdivrl
sbb
push
sar
int
aam
or
add
dec
ja
jp
mov
mov
add
dec
dec
or
push
sub
push
sbb
dec
lret
or
xchg
mov
dec
xchg
pop
sti
and
mov
imul
mov
add
inc
dec
jne
cmpl
or
pusha
imul
mov
add
pusha
add
fcmovb
fstpl
fiadds
mov
pop
aam
fidivrs
adc
mov
cmp
mov
bswap
shr
mov
dec
jns
jmp
out
pop
mov
jecxz
adc
jecxz
mov
mov
jmp
dec
cmp
clc
movw
dec
rcl
and
cld
push
mov
ret
orb
pop
ficoml
inc
mov
insb
mov
adc
mov
ss
xchg
xchg
cmpl
add
ds
fidivrs
imul
mov
dec
jp
std
lea
push
sub
cmp
cs
jmp
imul
out
or
mov
jne
fcmovu
imull
push
add
pop
mov
pop
shlb
je
mov
mov
ja
je
ds
dec
fidivl
adc
scas
push
pushf
mov
dec
das
jl
ret
xor
in
loopne
jmp
inc
mov
sub
sbb
arpl
into
add
cld
sub
daa
movsl
pop
push
cltd
push
pop
push
push
addr16
test
dec
ss
pop
mov
int
inc
aas
or
adc
dec
xchg
les
fmuls
test
popa
jge
mov
adc
sbb
fisubrl
push
xchg
mov
inc
push
sti
and
mov
aam
outsb
add
and
negl
ss
mov
push
mov
aam
and
sbb
cmp
add
lds
lret
ret
sbb
mov
push
lods
dec
pushf
fcmovnbe
push
and
push
push
scas
sbb
popf
sbb
add
das
test
ja
and
das
ret
sub
orl
call
icebp
nop
outsb
shrb
or
cmp
jne
push
rolb
gs
outsb
xchg
push
in
cmpsl
mov
add
cmpl
xchg
gs
aam
jmp
jne
push
mov
or
cwtl
cli
mov
movl
stc
adc
xchg
fstl
lret
call
mov
pop
fidivrs
enter
fisttpll
add
pushf
sub
rolb
push
cmp
rorb
adc
dec
les
cli
mov
mov
sbb
xchg
sub
jp
lret
aam
fisttpl
pop
ficomps
testb
ss
sbb
jo
push
dec
imul
adc
data16
decl
es
jle
cmp
jl
mov
enter
popf
cmpsb
cmp
jg
les
pop
clc
jle
xor
push
lods
mov
nop
push
and
pop
push
sbb
dec
ret
or
aad
xchg
or
inc
cli
sbb
add
fldenv
scas
lock
push
mov
orb
fidivl
jo
pop
arpl
cmp
out
push
mov
push
xlat
mov
add
add
scas
sub
scas
adc
inc
clc
or
in
sub
sub
sub
sub
mov
fdivrs
imul
sbb
adc
pop
lcall
inc
outsb
mov
push
jg
or
jl
push
cmp
sbb
dec
es
mov
push
mov
jmp
dec
jne
cmp
punpckldq
push
inc
push
xor
ja
js
xchg
xor
cli
in
mov
loopne
lock
push
test
add
sub
push
negl
or
es
lods
fcmovnbe
and
dec
enter
xor
mov
fldt
imul
enter
mov
cwtl
mov
mov
jbe
inc
pushf
lahf
jne
sbb
mov
and
andl
adc
cmp
shrb
sahf
shlb
in
rclb
int3
and
leave
xor
and
and
icebp
out
arpl
pop
or
add
mov
mov
loop
push
dec
inc
mov
pop
or
loope
jno
adc
sbb
test
test
bound
sbb
outsl
lods
gs
pop
dec
andb
push
outsl
loopne
sbb
pop
pop
mov
aas
add
sbb
cmp
jb
mov
je
clc
sub
mov
lock
fldl
xchg
or
add
je
dec
add
outsl
imul
jle
lock
jmp
out
jb
mov
and
jb
jae
jmp
lret
sbb
jecxz
push
imull
push
xor
cmp
popa
mov
ss
cmp
sbbb
sub
lret
pop
imul
pop
cmpb
ficoml
fdivrs
xchg
shr
fsub
sub
jl
mov
out
adc
inc
mov
sbb
or
adc
les
and
flds
loope
sub
add
cmpsb
adc
out
pop
cmp
add
xor
pause
cmc
add
adc
xchg
leave
adc
add
imul
hlt
inc
jecxz
stos
popa
ss
xor
fstpl
fstpl
clc
or
stos
rcll
ret
lods
xchg
rorb
es
jp
cwtl
adcb
inc
mov
xchg
test
and
add
push
push
jg
fildl
pop
cmp
inc
push
nop
cs
dec
std
jns
nop
mov
in
sbb
adc
mov
mov
inc
add
daa
aad
inc
add
mov
pop
push
push
in
hlt
xchg
scas
ret
ror
inc
call
enter
sbbl
rcrb
lock
jp
sub
fdiv
mov
or
jl
faddl
mov
shl
jl
ss
add
adc
xor
sbb
mov
xor
sub
inc
fmuls
fidivl
mov
dec
lods
mov
mov
or
lods
pop
push
pusha
andb
push
mov
fsubrl
jbe
mov
push
lods
mov
cmpl
hlt
shlb
fldt
sbb
in
in
ret
hlt
jae
pop
adc
hlt
jle
pusha
rcr
pop
leave
fcoml
jne
push
cmc
int3
xorl
xor
lds
ds
xor
movb
xchg
xor
adc
das
addr16
sar
cld
dec
loop
aaa
pop
mov
xorl
sbb
rorl
or
adc
addr16
pop
inc
mov
aas
test
jle
xor
inc
push
adc
pushf
pop
cwtl
add
out
fwait
or
aad
bound
popa
xchg
pop
dec
xor
arpl
and
or
dec
loopne
sarb
or
mov
mov
jne
add
mov
add
int3
dec
out
in
mov
mov
sbbl
in
xor
stc
adc
xchg
movsl
xchg
mov
or
pop
jne
cmp
cmp
and
dec
addl
pop
out
out
mov
mov
sti
mov
scas
mov
ret
pop
shlb
out
push
shl
rolb
mov
sbb
pop
adc
push
adc
xchg
repz
xchg
rcrl
ljmp
ret
outsl
pop
jb
pushf
call
outsb
sahf
or
dec
fistpll
push
and
ror
rorb
jae
xor
pop
jb
jmp
add
jmp
fnstsw
add
push
scas
mov
hlt
add
ljmp
orb
es
or
popf
sarb
sub
loopne
hlt
xor
add
arpl
adc
jmp
inc
inc
popa
dec
jl
sbb
jbe
test
into
je
xor
mov
ljmp
mov
dec
lods
add
jne
dec
aad
or
adc
sub
sub
pop
xchg
cmc
ljmp
es
push
test
sub
sbb
cmp
and
ljmp
addr16
bound
incb
lret
ja
imul
add
movl
add
add
int
scas
sub
push
pop
lods
push
lahf
outsb
and
adc
push
in
test
or
xchg
pop
and
rcrb
mov
in
jmp
xor
icebp
dec
pop
pop
fbstp
pop
ror
dec
repnz
in
aas
cmp
adcb
roll
aaa
incl
mov
push
iret
insl
dec
add
and
sbbl
pop
int3
push
rclb
mov
pusha
imul
leave
dec
pop
rcl
xchg
in
inc
add
push
or
add
ret
js
pusha
dec
add
jne
adc
mov
push
pop
nop
sbb
adc
push
lahf
fdivrs
imul
inc
or
or
insb
pandn
xor
cmpsl
cmp
test
push
mov
mov
or
push
fistl
or
btr
xor
sahf
push
lock
rorl
cwtl
push
mov
jns
or
xchg
in
aas
mov
js
and
adc
lds
loop
enter
jmp
movl
and
mov
jbe
in
into
jnp
jle
push
testb
je
fiaddl
jne
mov
mov
mov
pop
movl
movsb
or
loopne
dec
pop
cmpsl
lods
cld
scas
call
adc
add
jo
stos
pop
test
add
or
jno
les
sub
mov
and
repz
sbb
mov
sbb
sub
or
cmc
add
outsb
and
nop
dec
mov
fidivs
inc
bound
xchg
push
push
mov
dec
adc
stos
pop
xchg
outsb
test
outsl
ljmp
jae
loopne
pop
call
inc
adc
jge
pop
scas
or
push
or
sti
fs
xchg
icebp
jnp
sbb
pusha
ret
inc
mov
dec
or
faddl
icebp
js
pop
add
cwtl
add
push
shl
mov
add
sub
and
test
jbe
xchg
push
sbb
push
lods
cmp
lock
sbb
frstpm(287
jns
xchg
inc
push
and
lods
inc
shrl
fistpl
int3
sub
push
or
push
cmp
lcall
dec
cmp
cmp
lock
mov
inc
data16
cmpsl
hlt
cmp
je
mov
pusha
stos
aad
in
push
fiadds
and
sbb
inc
cmp
and
rcrl
insl
out
sbb
jle
loop
cmp
je
mov
pop
imul
mov
sub
push
adc
mov
sbb
inc
mov
lea
test
mov
test
mov
test
cmp
adc
dec
cmp
jne
adc
jbe
xchg
test
mov
jecxz
mov
icebp
jg
test
pop
test
pop
or
pop
sbb
mov
das
pop
fs
imul
jg
pusha
fcoms
or
mov
repz
mov
in
adc
and
mov
sbb
add
insl
cmp
mov
mov
or
inc
xor
inc
xor
pusha
pop
in
test
mov
or
cmpb
inc
sbb
bound
and
aam
shlb
dec
repnz
and
repz
inc
dec
jp
mov
pop
sbb
fadds
push
ret
dec
fdivl
xor
loopne
xor
and
or
push
adc
orl
andb
or
call
push
inc
pop
xor
jne
repz
xor
push
repz
movsb
sub
push
jecxz
adc
loope
adc
add
sbb
pop
jbe
adc
sbb
xor
ret
add
test
add
xchg
inc
nop
cltd
iret
add
xor
dec
cmp
jle
inc
add
xlat
or
xor
jo
hlt
add
add
loopne
ret
push
arpl
push
xor
out
add
push
sbbl
mov
xchg
pop
out
inc
nop
lret
sbb
rolb
sub
inc
arpl
jecxz
push
test
iret
mov
loope
mov
inc
ret
cmpsl
imull
dec
jp
andl
aaa
inc
push
or
sahf
leave
hlt
mov
adcl
fwait
movsb
movb
pop
data16
inc
test
or
out
popa
js
sub
fdivrs
out
push
data16
or
call
mov
sub
cmpsb
lock
imul
jge
xchg
push
test
sub
xchg
pop
fcmovb
lods
mov
in
xor
rorl
and
test
lea
aaa
xor
or
mov
cmpsl
add
dec
movl
and
mov
ja
ds
ficompl
stc
in
dec
jle
push
add
loopne
pop
insb
popl
or
jo
inc
sub
lea
das
cmc
adc
fbstp
mov
shrl
test
pop
push
ret
or
or
push
xor
and
mov
jns
movsl
mov
xor
add
dec
pusha
adcb
nop
push
test
sub
add
daa
clc
pop
test
flds
scas
adc
repz
pop
lods
and
push
addl
and
movsb
dec
inc
pop
and
cwtl
mov
cmp
ret
fstl
xor
push
ret
xchg
clc
xchg
in
jo
lods
hlt
orb
andb
sbb
subb
xorb
cmpsl
test
jmp
clc
inc
lds
cld
sbb
pop
mov
out
cld
inc
sub
push
or
jge
aas
rclb
inc
xor
flds
lahf
fcoms
sbb
inc
outsl
sbb
xor
pop
sub
daa
sub
sbb
xor
or
mov
rorl
push
adcb
mov
pop
in
jae
popa
sbb
ret
xchg
pop
inc
lcall
mov
icebp
mov
cmp
and
sbb
movsb
imul
jle
pfrcp
icebp
in
mov
sub
dec
sub
scas
shr
push
jno
add
add
stos
aaa
mov
pop
cmp
repz
dec
pop
sbb
sbb
punpcklwd
mov
xor
imul
xor
pop
leave
and
push
fs
pop
rolb
inc
fnstenv
add
loope
call
enter
call
xchg
mov
or
inc
or
inc
rcrb
sub
inc
sbb
pop
and
pop
mov
cs
add
mov
scas
or
mov
pusha
in
ffree
mov
adc
das
adc
mov
pop
push
notl
cmp
in
xchg
jo
aad
xlat
sub
pop
sub
mov
push
subb
testb
add
enter
loopne
lock
cli
push
and
mov
in
sbb
sub
inc
sub
sub
enter
sub
xorl
jle
jnp
adc
sbb
jne
loop
ja
xchg
test
add
addr16
adc
pop
xor
inc
xor
fstpt
push
cmpsb
fldl
cmp
inc
dec
add
cmc
rclb
mov
test
ljmp
push
adc
pop
sbb
je
mov
jmp
loopne
lea
and
in
sub
aas
jmp
je
sbb
or
incb
lods
and
in
pop
adcb
lea
cmp
jne
in
fwait
mov
nop
jmp
ja
dec
jecxz
mov
pop
sub
call
add
xor
pop
pop
mov
mov
mov
pop
fists
test
mov
aad
xorl
movl
lahf
dec
enter
pop
aaa
and
mov
data16
mov
jbe
je
adc
push
ja
jae
mov
test
mov
lahf
sub
mov
mov
pop
xchg
pop
inc
iret
jne
lahf
and
mov
inc
cmpsb
insl
and
ret
or
in
mov
pop
incl
cmp
xchg
dec
add
adc
inc
jmp
in
das
test
jo
jo
fucomi
add
mov
rcrb
xor
rcrb
xor
jno
lds
ja
pop
fsub
mov
adcl
push
or
sbb
inc
adc
in
push
mov
dec
movb
push
xor
pop
rclb
clc
mov
cmpb
pop
fiaddl
xchg
adc
push
fsts
push
jnp
je
call
orl
lret
rorb
sub
sub
xchg
mov
or
fsts
scas
orb
mov
push
sub
ljmp
adc
jmp
inc
mov
jo
pop
jno
inc
push
aas
sbb
xchg
adc
adc
movb
mov
cmp
lahf
sub
add
jae
sbb
adc
sbb
mov
mov
jmp
jo
not
inc
or
inc
jo
add
jl
jg
inc
and
mov
jecxz
lret
add
jle
jmp
enter
jo
push
xlat
dec
pop
push
icebp
mov
jg
add
push
xor
call
call
jp
mov
ljmp
sub
or
mov
or
test
es
daa
insb
inc
adc
or
xchg
dec
ja
adc
inc
lods
adc
ret
cwtl
lea
add
loope
xchg
test
xchg
or
dec
imul
adcl
or
cmp
xchg
jle
xorb
in
test
ffreep
filds
mov
mov
dec
mov
xchg
mov
push
enter
roll
sbb
cld
in
push
aad
orl
mov
scas
lds
jae
inc
pop
mov
int
push
mov
pushw
or
fdiv
out
push
sub
adc
add
inc
mov
sub
les
cmp
xor
je
pop
loopne
movsl
enter
xor
pop
push
lahf
add
sbb
push
aam
inc
fisttpll
orl
test
mov
push
xadd
cmp
pop
mov
and
stos
add
or
bound
test
neg
ja
inc
adc
dec
or
dec
clc
or
in
cmp
aaa
ss
je
or
jne
ljmp
push
insl
ss
dec
sbb
push
in
lods
xor
and
je
adc
rol
inc
xchg
or
adc
xchg
jle
mov
push
add
in
ret
and
xchg
pop
loopne
dec
mov
adc
dec
lahf
jmp
lock
jbe
mov
ds
xlat
cld
jns
in
adc
ja
and
call
or
vpmaxsw
test
in
jno
fbld
pop
lods
and
sub
cmc
aam
fdivrl
jmp
jbe
mov
cmp
cmc
sahf
shrb
scas
ret
stos
int3
std
mov
lock
repz
inc
in
and
pop
adc
inc
sbb
xchg
movsl
push
in
add
cmc
loopne
push
adc
dec
dec
jp
sarb
pop
or
pop
mov
stos
int
pop
movsl
mov
push
loopne
xor
in
inc
in
popa
stc
adcb
inc
nop
mov
fsubs
scas
lea
pop
mov
in
out
or
mov
jbe
adc
adc
mov
adc
fs
movsl
add
scas
and
je
ficoml
movsl
cwtl
and
adc
mov
test
inc
add
lock
in
movsb
pop
push
sahf
or
inc
ficompl
fisttpl
movsb
push
or
pushf
mov
fs
mov
push
fisttps
push
lds
loope
pop
data16
sub
adc
or
jo
loopne
add
mov
fs
test
jmp
or
and
xchg
mov
int
push
test
or
dec
push
jle
mov
mov
adc
test
sbb
fmull
sbb
adcb
pop
inc
sar
imul
mov
int3
mov
addr16
test
lods
daa
std
sub
fadd
les
mov
xchg
jle
insl
mov
and
bound
sbb
testl
fcom
push
jo
jg
fs
push
inc
mov
fadds
faddl
cld
xchg
loop
push
fisttpll
dec
cwtl
mov
das
push
pop
decl
push
jo
xchg
int
push
adc
xchg
mov
lea
sahf
mulb
out
dec
adc
into
or
adc
je
nop
lea
push
sbb
sbb
lods
imul
jle
adc
jmp
xor
add
lea
mov
jmp
push
sbb
xchg
fiaddl
push
movsb
clc
sub
and
or
outsb
inc
mov
push
and
inc
cli
ret
xchg
adc
jg
ret
fidivs
jp
push
add
mov
ror
dec
inc
rcrl
fcmovbe
loope
out
add
mov
and
sub
inc
xlat
adc
pusha
xor
sub
xchg
mov
or
lock
push
adc
roll
jge
and
imul
inc
mov
ljmp
dec
mov
push
cmpsl
jp
iret
push
or
inc
ljmp
hlt
mov
adc
inc
and
and
lds
nop
dec
sbb
push
repnz
add
mov
mov
iret
dec
or
xchg
xchg
and
ret
jb
and
adc
out
fbld
push
lds
rorb
loopne
pop
jmp
pop
insb
fbld
jge
push
xchg
or
clc
mov
dec
inc
or
xchg
stos
dec
sbb
push
inc
mov
or
mov
or
jge
and
or
lahf
dec
bound
mov
ja
adc
add
jae
add
shrb
and
jg
cwtl
cmpsl
or
jg
sub
pushf
push
pushaw
popf
into
je
xor
pop
push
imul
sbb
cmp
jae
inc
arpl
ds
adc
loope
subl
fdivrl
adc
inc
or
adc
sbb
or
fiadds
and
cmpsl
adc
roll
xor
or
fisubrs
daa
adc
sub
and
sbb
pop
jnp
and
or
ds
and
mov
push
add
xchg
cmp
adc
and
es
roll
loope
jle
test
js
push
addr16
jmp
inc
std
adc
sbb
inc
add
orl
add
cmp
lcall
mov
fwait
jb
inc
rolb
sbb
push
mov
dec
cmp
push
or
dec
mov
fdivrs
mov
mov
xchg
xlat
mov
mov
add
jle
xlat
lret
add
push
mov
aam
das
lret
add
pop
sbb
jo
sbb
test
scas
or
mov
mov
adc
leave
test
add
fildll
xchg
or
and
sub
adc
fistps
jmp
push
imul
adc
sbb
bound
push
pushf
jmp
sub
and
dec
or
in
add
loope
ja
mov
adc
mov
mov
add
les
or
xor
daa
cmp
add
add
add
pop
mov
inc
adc
enter
jecxz
adc
add
sub
test
cld
push
fidivs
pop
dec
in
subl
clc
add
call
mov
ret
add
jmp
test
sbb
and
fldenv
dec
jo
in
imul
lods
adc
push
ds
xor
xchg
or
aam
and
leave
adc
push
adc
inc
test
xchg
and
insb
mov
pop
fstps
je
jecxz
add
push
shlb
and
cmp
daa
pop
sub
cvttps2pi
movsl
jnp
add
mov
pusha
adc
cli
ds
sbb
push
jno
mov
pop
imul
or
xchg
outsl
adc
xchg
push
xchg
jo
or
cmp
sbb
adc
pop
pop
inc
dec
rcl
addr16
mov
mov
push
fidivs
mov
rolb
xlat
aaa
sub
movsb
or
or
js
mov
cmpsl
subb
daa
push
mov
imul
mov
pop
insb
mov
add
jnp
add
ds
xlat
pop
fcmovnu
push
enter
xchg
and
stc
xchg
push
mov
fists
add
pop
and
jnp
aam
add
or
push
imul
iret
xchg
movsb
xorb
sub
dec
imul
jne
mov
push
cld
ja
mov
pop
push
mov
and
pop
bound
test
fiaddl
mov
nop
icebp
ds
dec
inc
add
add
sub
sbb
add
pop
insb
add
out
add
xlat
scas
leave
push
inc
or
push
int3
add
cmpb
and
push
add
jno
lret
mov
sub
notl
outsb
jge
in
mov
add
fimull
shrl
jge
push
cmovge
je
mov
inc
mov
or
or
mov
testb
test
mov
fisttpll
mov
test
add
xor
lods
clc
inc
test
sbb
mov
popf
leave
dec
dec
or
and
xorb
add
xor
outsl
add
lahf
sub
enter
sbb
and
call
pop
add
nop
pop
or
cmp
jne
inc
cmp
ret
jl
inc
pop
test
push
mov
bound
daa
movsb
loop
jb
pop
mov
daa
daa
push
sub
les
add
sti
add
orb
aas
adc
add
xor
pop
ret
punpcklwd
pop
je
mov
mov
daa
stc
or
pop
add
icebp
nop
out
popf
mov
pop
mov
fcoml
fdivrs
pop
xchg
out
pop
sub
loopne
imul
dec
or
in
inc
insb
js
loopne
adc
mov
test
fwait
or
xchg
jle
pop
mov
clc
sbb
sub
mov
add
hlt
rcll
pop
shl
fwait
adc
pop
mov
push
sbb
pushf
push
mov
in
test
pop
test
add
subb
sbb
jmp
fsubrs
adc
adc
aaa
loopne
mov
pop
cmp
popa
and
ljmp
nop
lods
movsb
mov
iret
out
jl
cmpsl
and
inc
es
xchg
cmp
xchg
push
ret
nop
lahf
sbb
or
add
xchg
outsl
repnz
sahf
dec
jg
out
push
in
fs
inc
fs
movsl
andb
mov
cwtl
inc
je
mov
jle
or
push
stc
movsb
mov
mov
repz
jbe
idivl
push
cmp
sbb
or
outsl
jo
push
mov
stos
jno
imul
and
push
imul
pop
dec
pop
js
and
insb
pop
mov
and
outsl
int3
or
jl
mov
push
dec
gs
popf
mov
sbb
jno
or
xor
lahf
sbb
pop
and
xchg
jns
dec
xchg
pop
nop
outsb
sbb
or
aaa
les
push
push
or
jge
cmp
pop
pop
imul
fwait
xchg
xchg
pmuludq
push
pusha
pop
cs
pushf
push
dec
mov
sbb
add
sub
sbb
xor
mov
std
out
pusha
lea
in
jmp
ljmp
es
in
push
and
clc
nop
push
push
push
pop
lds
test
pop
and
fmull
xor
and
je
adc
or
adc
pusha
iret
int
xchg
fiaddl
dec
outsb
adc
rcrb
test
jl
push
add
aad
test
push
jbe
pop
sub
jo
jbe
das
or
or
dec
sbb
js
out
jns
or
or
sti
add
daa
adc
lds
push
or
pop
xchg
inc
inc
mov
mov
es
call
mov
mov
adc
enter
cmp
test
or
gs
inc
mov
movsl
inc
mov
mov
lods
or
rclb
stos
adc
push
cli
add
int3
inc
cmpsl
arpl
mov
and
and
and
cmp
test
call
es
push
mov
add
jecxz
cmp
pop
add
pop
xor
push
cmp
push
adc
jmp
inc
enter
adc
or
pop
jle
and
and
xchg
hlt
mov
pop
or
jmp
pushl
jecxz
jo
shlb
loope
sbb
or
aad
xlat
dec
loope
inc
nop
fucomip
sub
sbb
push
mov
fidivrs
clc
mov
cmpsl
jmp
inc
popa
add
or
lods
shlb
xlat
testb
sub
sub
or
jg
or
and
sub
sub
mov
mov
or
xlat
mov
inc
hlt
in
leave
mov
cmp
testb
push
push
sub
inc
xor
sbbb
pop
xor
ret
sbb
popa
ss
daa
enter
mov
imul
cmp
ret
jge
and
xor
adc
sbb
mov
push
ds
imul
clc
sub
xchg
lcall
rcrl
movsb
outsl
daa
test
dec
sbb
inc
dec
jbe
insb
cmp
xlat
and
adc
test
pop
pop
xor
mov
jg
je
add
cmp
dec
sbb
stos
jecxz
mov
jge
dec
mov
mov
or
sti
mov
out
mov
xor
pusha
push
addb
and
adc
addl
in
addr16
scas
pop
cmp
in
dec
dec
outsb
inc
jmp
pop
jmp
in
testb
cs
push
jmp
fwait
push
pop
jg
and
sbb
sbb
push
hlt
and
mov
or
pop
xchg
shlb
mov
js
into
leave
call
jl
sub
subl
dec
xchg
test
lea
jge
flds
cmp
insb
push
popf
push
aas
ss
lds
lahf
mov
stos
sub
jns
or
lods
xorb
test
mov
push
mov
adc
orb
jge
push
push
or
dec
insb
push
add
adc
push
pop
xchg
pop
xchg
pop
sbbl
jo
dec
cmp
arpl
cs
adc
add
xor
sbb
cmpl
cwtl
dec
and
je
or
fdivl
mov
inc
fstl
shlb
adc
pop
cld
xor
sbb
jns
and
mov
pop
faddl
mov
xor
aas
clc
js
add
inc
shll
jns
add
addl
cmp
mov
rclb
jp
loopne
lret
sarb
sbb
mov
dec
add
loopne
loope
orl
arpl
push
ror
add
daa
fistps
test
sub
stos
cmp
icebp
fwait
add
sbbb
xchg
lds
movsb
pop
cwtl
mov
nop
out
cmc
pop
xchg
inc
movq
je
mov
adc
lret
leave
dec
pop
mov
rclb
aaa
xor
movsb
add
push
jg
inc
sub
scas
movsb
icebp
outsb
inc
hlt
add
outsb
cmp
jg
dec
addr16
scas
or
mov
jp
clc
sub
cli
add
shl
fcompl
sbb
lar
in
add
lods
and
iret
sub
add
test
dec
mov
push
mov
push
jmp
gs
dec
into
sbbb
scas
int3
iret
movsl
pop
xor
push
hlt
iret
push
jl
imul
loopne
shrb
push
lahf
sbb
mov
cmp
iret
push
lret
dec
ljmp
or
and
sbb
pushf
or
lret
fwait
xor
je
cmpb
push
jns
push
push
test
ficoml
jne
fucomi
sbb
push
add
imul
pusha
aad
xchg
jae
dec
xchg
mov
inc
pop
in
ss
ja
inc
push
push
mov
ds
xchg
imul
jb
sub
das
add
dec
push
pmulhuw
in
inc
inc
cmp
out
in
xor
push
jbe
mov
sub
and
in
in
sbb
adc
in
in
or
add
jb
in
es
clc
hlt
pushf
adc
lock
sub
negl
add
push
xchg
xchg
sub
cmp
add
and
jmp
jno
test
clc
les
leave
cli
push
jge
sbb
sub
xor
and
adc
mov
sbb
jle
mov
mov
push
popa
pop
xor
adc
and
pop
mov
add
jmp
in
or
add
movb
imul
mov
jge
scas
je
bound
je
jb
inc
sarb
dec
out
insl
sub
adc
andb
loopne
add
jmp
sub
test
ret
ljmp
dec
adc
or
and
pushf
xchg
and
adc
adc
jns
sahf
pop
adc
sub
adc
sbb
or
cs
lret
cmpsl
and
xor
add
and
xor
and
push
nop
mov
imul
add
add
push
pop
sub
test
inc
add
gs
add
inc
sbb
sub
andl
pop
sbb
jne
cmp
dec
movsl
and
or
pop
stos
aas
lds
jmp
sbb
xchg
sub
cmp
add
pop
xchg
sbb
fcoml
or
lock
adc
fs
inc
daa
adc
sbb
or
aas
cmp
shrl
das
pop
and
jnp
loope
push
imul
imul
sub
es
and
lock
lcall
inc
or
or
sbbl
nop
adc
push
lock
rcll
sub
mov
xor
cmp
ret
aam
cmpl
jb
into
rcl
cmp
ret
push
xchg
rorb
loopne
or
or
insl
faddl
jg
inc
pop
xchg
push
lea
lea
jp
aas
nop
pop
movl
push
xor
xor
xchg
pop
lret
pushf
leave
cmpsl
xchg
shll
push
add
xchg
sbb
dec
push
push
dec
inc
pop
cmpsl
cld
shlb
xor
sbb
xchg
sbb
sub
xor
iret
jl
cmp
cmpsl
xor
sbb
push
add
daa
xchg
dec
enter
push
aam
int
ja
jne
xor
xor
push
les
pop
and
push
movl
fcomps
push
inc
fidivs
pop
and
inc
sbb
test
flds
xor
rclb
lahf
push
inc
lock
je
bound
push
xor
mov
mov
adc
fcompl
pop
sbb
sbb
or
sub
xchg
mov
test
xor
dec
mov
adc
inc
cmp
or
xor
inc
outsb
jne
jle
popa
jns
lock
and
jl
sub
add
pop
sub
add
repz
inc
cmp
inc
daa
or
out
stc
sahf
adc
adc
jo
jg
fwait
lret
xor
sbb
in
ret
push
push
pop
aaa
or
inc
push
mov
dec
es
or
xor
leave
xor
lcall
cmp
xor
test
lock
or
sub
cld
mov
pop
rcll
mov
cmp
dec
jns
cmp
inc
in
adc
ud2
inc
enter
imul
mov
cmp
movups
cmp
fbstp
push
imul
pop
fld
pop
lods
movlps
fsubrs
or
add
lods
cmpsb
inc
mov
unpckhps
jo
or
xchg
popa
jbe
mov
add
xor
jo
sub
gs
inc
outsl
pushf
sub
dec
xor
imul
aad
jnp
add
ss
pop
mov
dec
pop
daa
push
scas
cmp
and
xchg
mov
xor
dec
test
fdivrl
mov
mov
inc
movsb
fcoms
clc
jb
imul
cmp
mov
cmp
mov
mov
or
mov
iret
repz
lods
dec
push
push
pop
xor
inc
cmp
repz
mov
cmp
xchg
adc
xchg
push
mov
sub
mov
jl
repz
filds
mov
aaa
xchg
aas
sub
pop
filds
xlat
mov
mov
xchg
and
push
fsts
xchg
dec
dec
cmovl
cmp
dec
psubb
cmp
popa
mov
cmpsb
ljmp
jae
xor
mov
clc
pop
mov
sbb
push
sbb
call
inc
daa
jo
lods
aam
cmc
das
and
mov
jnp
pop
cmp
jmp
lahf
and
push
cmpsl
mov
adc
das
add
sub
sub
mov
inc
and
movl
pop
addr16
rol
xchg
adc
cmp
xor
inc
mov
frstor
xorb
xchg
sbb
cmp
sub
pusha
pop
rcll
ret
pop
pop
popl
dec
xor
hlt
hlt
pusha
xchg
dec
and
jmp
dec
lds
push
jno
mov
sub
call
sub
mov
mov
jb
int3
sbb
jae
dec
mov
in
and
sub
sbb
bound
add
or
sbb
xchg
sub
ljmp
mov
ja
pop
mov
add
sbb
sbb
cmp
xor
js
and
jne
cmp
pop
mov
inc
lcall
dec
mov
sub
and
push
sbb
xchg
adc
test
jmp
jne
lea
pop
or
cs
and
adc
sbb
in
insl
mov
cmp
sub
inc
dec
sub
push
ret
je
and
movsb
test
xor
and
packuswb
mov
jmp
aad
test
adc
and
mov
sbb
daa
mov
jne
mov
sbb
or
fsubs
pop
fxch
aaa
jne
js
jge
or
ljmp
cmp
pop
inc
inc
mov
adc
mov
mov
lds
das
lea
sbb
push
xlat
and
or
add
aas
lea
adc
adc
rorl
sbb
xchg
cmpsb
ja
add
daa
xor
mov
pop
addb
cmpsl
add
inc
pop
in
sub
or
lods
rorl
push
or
pop
es
mov
lods
sub
inc
pop
roll
push
mov
shlb
add
in
pop
xchg
inc
rcll
sbbl
push
and
mov
xchg
xor
fmull
ja
sbb
dec
adc
out
pushf
in
sbb
fadd
cmp
ja
mov
hlt
cmp
in
jge
dec
lea
shr
mov
into
mov
loopne
ror
roll
inc
jmp
mov
dec
sbb
and
inc
pusha
mov
ret
dec
sub
cld
cwtl
nop
daa
call
insb
xchg
xor
sbb
xchg
push
pop
mov
inc
adc
jne
cmp
and
mov
insl
inc
inc
cltd
cmpsb
cmp
xchg
lock
lahf
cmpsb
imul
in
mov
mov
sbb
nop
es
rolb
call
push
mov
jnp
xchg
fs
test
aam
mov
mov
cmp
outsl
test
imul
in
call
and
pop
jl
adc
xchg
inc
cmp
out
xor
sbb
cmp
lock
dec
sbb
stos
inc
lcall
clc
or
addr16
cwtl
lahf
inc
xchg
push
and
arpl
rclb
shrb
cmp
es
mov
aas
sub
mov
inc
movsl
loope
mov
je
dec
sub
or
push
rclb
test
in
xchg
out
xor
and
cmp
ds
adc
das
and
add
cmp
mov
inc
lods
inc
cwtl
add
sbb
sub
les
xchg
add
leave
adc
xor
nop
js
cmp
sbb
jmp
push
adc
inc
push
fs
adc
add
in
sbb
pop
movsb
inc
out
cmpl
inc
js
inc
arpl
dec
je
subl
icebp
and
or
out
jne
and
je
cmp
mov
nop
push
repz
out
out
xchg
inc
inc
xor
dec
sbb
xchg
or
cmp
popa
dec
mov
sbbb
popa
xchg
sbb
push
in
xchg
rcr
leave
arpl
not
jne
test
neg
sbb
push
addr16
adcl
dec
js
xchg
xor
je
loopne
daa
inc
lret
sub
jl
dec
gs
insb
jo
je
or
xor
movsl
fisttpl
inc
dec
out
sbb
mov
les
cmp
pop
nop
and
push
test
and
pop
pop
repnz
adc
sub
and
push
sbb
fs
fs
xchg
inc
push
push
cld
pop
and
insl
arpl
push
dec
dec
pop
mov
jnp
adc
popa
je
inc
daa
push
or
fldcw
maxps
xchg
les
in
push
das
push
inc
outsb
lea
and
outsl
ja
mov
mov
adc
pop
outsl
jae
push
jg
fbstp
leave
mov
insb
ret
dec
inc
subb
jae
xchg
decl
loope
inc
ds
inc
mov
push
push
dec
pusha
push
fs
push
cmp
pop
popa
testb
inc
dec
dec
sbb
xchg
jg
andl
dec
test
fsub
adc
xlat
inc
les
das
push
les
pop
call
mov
or
sbb
jge
daa
push
insb
dec
add
je
stos
sub
loopne
push
cmp
add
dec
and
and
sub
pop
test
data16
dec
out
leave
sbb
mov
jle
decl
ja
in
sub
cmpl
or
and
mov
and
and
and
and
and
and
and
int3
rcl
and
and
fcomp
loopne
and
and
call
das
and
clc
cld
sbb
add
and
and
or
adc
and
and
sbb
and
and
and
sub
xor
and
and
rorl
ret
sub
out
inc
test
fsubr
mov
jno
mov
arpl
daa
nop
fidivl
mov
xor
sub
add
add
and
mov
stc
or
gs
nop
dec
or
cmp
gs
sub
pushf
inc
mov
push
movsb
push
test
lods
pushf
lret
push
mov
mov
push
sbb
push
addr16
sub
rorb
lcall
xchg
add
push
movsb
xor
inc
aam
sbb
faddl
add
loopne
test
pushf
call
add
lock
hlt
call
clc
cld
cld
push
adc
dec
addr16
push
and
and
inc
push
push
movsb
xor
adc
nop
lret
js
inc
sub
push
test
test
mov
int3
xor
xchg
add
in
cmpb
xor
push
sbb
dec
scas
ljmp
pushl
mov
and
adc
xchg
jp
je
gs
gs
mov
or
inc
insb
outsl
jae
and
sbb
mov
xchg
adc
nop
bound
add
mov
adc
aas
imulb
pop
inc
je
daa
test
je
adc
sub
test
inc
adc
cmp
aas
sbb
mov
mov
adcb
dec
jae
fsubrs
and
fs
lea
adc
push
jp
jae
sbb
or
inc
outsl
xchg
xchg
and
aas
pop
pop
pop
dec
inc
fidivl
lods
cmp
pop
ficoms
dec
or
popa
xchg
sub
lock
or
adc
sub
mov
lcall
add
fdivs
pop
adc
xor
and
inc
fidivrl
sub
jns
xor
outsb
add
fidivrl
imul
push
outsb
lock
sub
daa
rcr
adc
in
pop
xchg
sbb
pop
pop
xchg
inc
xor
out
push
sbb
ja
and
xchg
or
jns
inc
pop
je
addr16
jne
sbb
pop
fs
movb
mov
das
pop
popf
in
int
inc
xchg
cmpsl
jno
arpl
arpl
or
push
xchg
xchg
popa
add
push
mov
sbb
mov
hlt
sbb
insl
add
icebp
into
cmc
push
xlat
lea
int3
inc
jne
xchg
push
add
jmp
dec
xor
jg
daa
aad
mov
xchg
test
jae
jnp
or
inc
clc
test
iret
mov
dec
aaa
fildl
nop
jo
mov
push
cmp
cmp
sub
fisttpll
addr16
sub
imul
insl
xchg
and
xor
xor
sub
xor
dec
dec
ret
push
fldcw
xor
push
out
mov
lcall
repz
jge
mov
pop
adc
outsl
pop
js
out
sbb
aas
fs
pop
pop
es
ja
jnp
jb
jb
popa
or
gs
mov
add
data16
es
sti
pop
pop
scas
gs
pop
jo
addr16
jb
addr16
add
insl
lods
mov
inc
cmpsb
insb
daa
push
sahf
out
mov
je
outsb
insb
fstpt
loop
sbb
and
xchg
pop
lcall
cmp
pop
je
jo
mov
bound
jns
outsl
imul
das
add
in
jnp
imul
gs
nop
imul
mov
aas
push
fmull
mov
mov
pop
xor
xchg
shlb
jnp
sub
pop
mov
sbb
xlat
cmpsl
pop
cmpsl
push
cmpsl
push
dec
aaa
or
mov
mov
mov
inc
loopne
in
xchg
sbb
and
or
adc
mov
cmp
jbe
adc
std
les
dec
add
addr16
dec
fsubr
cmpb
js
push
or
or
nop
cld
in
push
ret
or
adc
mov
addr16
mov
mov
ret
inc
inc
mov
fstpl
jmp
popf
dec
dec
mov
stos
adc
icebp
movsl
int3
and
sbb
mov
into
loopne
push
stc
iret
fdivrl
mov
xchg
xchg
testl
cmpb
push
mov
movb
lahf
mov
xchg
mov
lock
inc
test
adc
and
rorb
dec
test
dec
jmp
sub
dec
pop
add
mov
movl
loope
adc
xchg
add
pop
nop
push
or
sub
inc
mov
cs
push
mov
jae
jmp
push
in
pop
dec
pop
xor
shll
add
add
push
repz
filds
pop
or
or
or
or
or
or
cmp
adc
adc
adc
cmp
repz
pop
sbb
sbb
iret
repz
and
and
fcomps
out
ss
loopne
push
negl
sbb
sahf
out
sahf
cmp
jg
jns
out
mov
repz
out
pop
pop
sbb
cmp
repz
dec
pop
insl
jle
mov
mov
rcr
in
js
addr16
pop
or
and
sbb
imul
movsb
jb
add
cs
push
push
dec
sub
xchg
lret
or
or
movsb
jb
in
sbb
sbb
pop
push
mov
sub
movaps
and
adc
in
xor
xor
pop
push
mov
adc
inc
push
inc
pop
and
sbb
xchg
lret
sbb
movsb
jb
pop
sbb
in
cmp
xor
sbb
test
imul
dec
in
arpl
fs
dec
in
aas
and
and
stos
push
and
and
inc
add
rcrb
sub
and
add
sub
or
js
test
lahf
adc
orl
push
jmp
inc
lret
aaa
dec
cmp
roll
pop
scas
or
add
call
mov
ds
cwtl
test
and
nop
jo
push
stc
clc
push
adc
push
add
incb
call
jp
mov
add
lock
out
sbb
int3
mov
push
ja
ret
sbb
cli
je
add
push
loopne
push
or
mov
sub
dec
int3
mov
dec
push
mov
loope
or
and
ja
rorl
cltd
fsubl
xchg
or
pop
or
sub
lcall
decl
cmp
push
pop
mov
js
aas
xchg
scas
pop
and
push
mov
pop
adc
repnz
push
div
cmp
pop
inc
jo
dec
outsb
mov
imull
mov
outsl
pusha
pop
leave
sbbb
cwtl
jb
sbbb
pusha
pop
jb
add
pusha
pop
add
xchg
dec
fs
or
xor
cmp
insb
sbb
inc
push
cld
imul
insb
mov
mov
mov
mov
mov
push
pop
pop
dec
push
push
inc
and
mov
mov
loopne
add
push
push
push
shl
les
data16
das
mov
or
and
mov
push
lods
mov
inc
nop
xchg
insl
inc
jl
js
xchg
sbb
adc
ret
popf
lods
inc
sub
inc
mov
adc
mov
pop
dec
outsb
mull
xorb
clc
movb
add
jl
mov
push
mov
aad
cmpb
pusha
fmuls
add
mov
add
adc
jb
pop
pop
jne
int
mov
mov
inc
sub
adc
or
cmp
mov
adc
loope
ljmp
mov
jmp
pop
or
pop
pop
jae
inc
jo
or
sub
fs
inc
add
lock
lods
lret
cwtl
mov
push
dec
enter
pop
stos
clc
cmp
or
or
xchg
mov
fbstp
je
pop
xchg
dec
xor
xor
js
clc
inc
insl
in
pop
decb
bswap
leave
leave
leave
xor
xor
leave
leave
leave
leave
xor
ss
leave
leave
leave
leave
cmp
cmp
leave
leave
leave
leave
cmp
ds
leave
leave
leave
leave
and
and
leave
leave
leave
leave
and
es
leave
leave
leave
leave
sub
sub
leave
leave
leave
leave
sub
cs
leave
leave
leave
leave
adc
adc
leave
leave
leave
leave
adc
push
pop
leave
leave
leave
leave
sbb
sbb
inc
and
iret
sbb
insl
stc
iret
repz
push
or
adc
out
ss
clc
or
add
cmp
rep
cld
loopne
fsubr
repz
repz
enter
repz
aam
int3
mov
test
iret
repz
mov
cmp
pause
movsb
mov
xchg
js
jo
push
jl
je
insb
repz
repz
fs
pop
inc
iret
repz
push
cmp
sub
repz
and
sub
cmp
repz
sbb
out
sahf
int
idiv
or
add
repz
call
fsubr
cmp
repz
in
fadd
repz
repz
int3
mov
cmp
cmp
test
mov
dec
jb
in
jne
in
pushf
mov
das
fs
inc
movsl
divl
and
arpl
pop
stos
add
adc
pop
int3
loope
or
inc
and
leave
adc
js
dec
mov
lahf
js
movsb
data16
pop
inc
clc
fidivl
in
add
pop
add
push
sbb
das
out
data16
push
scas
push
pminsw
test
add
std
mov
or
and
imul
pmulhuw
outsb
test
push
pop
sub
in
push
add
and
sbb
pop
addl
fs
pop
add
mov
or
dec
stos
mov
inc
test
xchg
inc
cmp
or
push
test
xor
mov
lcall
dec
add
inc
enter
jl
mov
inc
decl
sbb
test
jne
mov
mov
adc
les
ret
pop
cmp
add
push
sbb
and
aad
inc
jge
adcb
pop
sub
mov
dec
xor
addr16
adc
cmc
dec
sbb
ret
outsl
popa
in
jne
xchg
xor
or
mov
pop
add
inc
or
push
pop
pop
scas
cmp
loop
pop
aaa
div
adc
cltd
dec
jb
inc
out
cs
call
insb
call
mov
add
dec
mov
xchg
push
call
add
push
inc
or
lock
jnp
imul
and
and
leave
ja
pop
cs
loop
sub
and
cmpsl
daa
mov
jle
adc
mov
add
add
dec
or
fcom
inc
dec
aaa
bound
out
push
fcmovbe
ss
jns
pop
dec
outsb
inc
gs
fiaddl
in
lret
xchg
outsl
pop
or
and
and
or
int3
cli
nop
into
call
dec
test
mulb
pop
inc
push
imul
insl
aad
lea
pusha
pusha
cld
or
jg
test
mov
pop
sub
insl
fs
addr16
push
add
inc
imul
adc
popa
sarb
cmp
int3
lods
or
mov
out
pop
sbb
mov
jl
pop
js
cld
leave
out
fcoml
je
das
jo
enter
iret
insb
mov
mov
push
pop
cmp
xlat
sub
and
or
mov
jb
loopne
jno
imul
sbb
jne
mov
lock
mov
in
add
stc
xor
push
popf
inc
mov
cs
test
mov
cmp
pop
dec
sub
pop
pop
inc
mov
mov
shll
cmp
mov
daa
xor
inc
hlt
ret
inc
mov
dec
mov
add
neg
mov
imul
insb
or
xchg
insb
mov
add
or
insb
fcom
or
push
insl
inc
xor
imul
inc
add
push
mov
notb
inc
add
fldt
rcrb
movups
xchg
push
add
test
hlt
or
and
dec
in
and
pop
and
test
adc
je
outsb
mov
loope
std
and
mov
in
mov
icebp
adcb
movb
pop
jb
push
iret
insl
jmp
xchg
insl
lock
or
cmpsb
lret
and
mov
psllq
pop
and
enter
loopne
pushf
mov
in
insl
jb
sub
push
ror
in
jae
shld
loopne
xor
and
loopne
iret
repz
outsb
jne
jg
sub
repz
dec
push
pop
gs
rep
or
add
call
xchg
test
aaa
fs
test
jl
fcoms
decl
stos
in
xchg
and
jp
iret
add
test
adc
and
sbbl
dec
push
pop
je
mov
test
push
adc
adc
je
adc
xchg
dec
enter
push
dec
pop
fbstp
sbb
inc
fisubl
int
sub
mov
je
cld
mov
insl
jne
ret
rcrl
aad
pusha
test
add
sub
sbb
sti
rorb
adc
push
cmp
daa
fisubl
outsb
push
fistps
mov
and
or
sbb
xchg
outsl
movsb
jne
xchg
inc
add
hlt
out
add
scas
and
stos
sbb
jge
cmc
mov
rorb
ret
or
stc
ret
rol
sub
ret
add
lods
or
mov
fldl
sbb
push
lahf
dec
cmp
dec
test
js
add
loopne
adc
push
in
pop
sbb
push
fs
mov
test
add
addb
dec
ror
push
mov
nop
push
xor
and
jg
add
dec
dec
arpl
aad
sub
push
in
xor
xchg
pop
jl
cld
lds
jne
or
in
in
and
add
or
clc
iret
in
leave
shrb
cmp
test
cmp
popa
xor
add
inc
mov
js
adc
sub
clc
jae
bound
or
jmp
jl
mov
inc
sub
sub
and
std
and
sub
push
pop
sbb
cmp
sub
sub
and
push
or
xor
cs
add
movb
add
xorl
add
or
xor
leave
jg
dec
add
and
je
enter
aaa
lock
gs
jne
stos
add
mov
inc
mov
or
push
push
sub
add
push
fldcw
gs
adc
xchg
aas
mov
push
or
cmp
pop
adc
push
push
stc
jne
ljmp
jne
jo
inc
call
mov
fsubl
pushf
ret
mov
mov
test
in
adc
mov
or
jne
dec
pop
mov
aas
add
or
xlat
mov
and
daa
add
sbb
cmp
pusha
cmp
xor
pop
xor
mov
test
stc
adc
sub
ja
loop
outsb
jo
and
cmp
xor
or
and
cld
jle
dec
inc
sbb
or
or
add
sbb
adc
cli
pop
jno
in
movsb
sbb
lcall
adc
adc
xchg
adc
pop
shl
repz
adc
nop
fistpl
es
inc
emms
fs
adc
xlat
rorl
mov
lea
das
jnp
pop
pop
mov
xchg
les
push
jp
mov
cmpl
add
mov
xor
lcall
mov
jbe
push
dec
dec
dec
inc
dec
push
add
and
pusha
mov
and
and
mov
xor
aaa
aaa
sbb
sbb
add
mov
shll
xor
ret
and
arpl
pop
add
lds
pop
mov
sub
pop
adc
jno
pushl
sub
jb
jne
mov
insl
outsl
sbb
and
cmp
pop
pusha
inc
repnz
loop
lods
and
xchg
popa
fdivl
push
lock
sbb
sub
les
or
sbb
pop
adc
hlt
mov
xchg
sbb
jnp
mov
inc
movsb
mov
xchg
xor
mov
in
lds
lcall
gs
sbb
ret
cmp
bnd
movsl
cmc
or
or
inc
pop
xchg
pop
sarb
pop
pop
adc
pop
adc
cmpsl
loopne
or
push
mov
add
jp
movsb
jne
mov
aaa
je,pt
adc
mov
daa
dec
dec
cmp
inc
and
jnp
test
push
out
add
lahf
outsl
xor
add
sub
sar
or
rcr
add
shlb
sbb
add
push
mov
aaa
inc
jae
jb
cmc
inc
rcr
cs
push
push
fstpt
insl
pop
lds
lods
xchg
mov
add
fnsave
shrb
add
add
dec
mov
add
inc
jb
pop
ret
adc
adc
repnz
and
jl
xor
mov
xchg
fsts
lahf
inc
mov
test
push
iret
jnp
sahf
in
dec
push
mov
push
idivb
xchg
mov
pop
and
or
mov
jl
inc
cmp
ret
lods
cmp
nop
inc
mov
or
sbb
pusha
lock
adc
cmp
sbb
push
inc
cmp
push
or
in
sbbb
jge
xchg
inc
fs
in
xor
int3
mov
daa
mov
push
cs
adcb
sar
adc
dec
dec
clc
mov
push
adc
inc
bnd
inc
js
jle
jle
jo
mov
mov
xchg
xchg
mov
xor
insb
mov
cld
data16
aas
push
jnp
or
imul
or
inc
wrmsr
les
and
jb
and
jg
jle
movsb
and
cs
inc
adc
roll
shlb
pop
in
adc
loopne
pop
fadds
in
and
adc
outsb
cs
push
sbb
nop
movl
rorl
shlb
lcall
adc
pop
sbb
inc
add
add
mov
dec
scas
add
mov
negl
inc
jo
sub
repz
mov
fs
pop
shlb
jnp
loopne
dec
hlt
push
cmpsb
mov
or
ret
mov
push
mov
add
push
xor
or
or
cmp
dec
lock
insl
bound
in
add
or
push
loop
loope
leave
inc
add
inc
add
xorl
aam
insl
fs
xor
inc
jne
js
xchg
cmp
ja
repz
sarb
inc
mov
pop
in
fimuls
adc
or
fcoms
or
cmp
mov
sbb
imul
or
cmp
out
imul
rorb
sbbb
clc
enter
outsl
jb
add
push
popa
imul
jne
add
or
imul
mov
or
jns
sbbb
lea
add
frstor
popa
xor
mov
icebp
test
rolb
mov
aaa
xchg
pop
out
push
push
push
adc
dec
jae
std
dec
lock
xor
or
out
sub
pop
js
fadds
das
inc
subb
or
js
fstp
xchg
mov
or
repnz
and
testb
decl
or
ja
adc
subl
sub
dec
mov
pusha
dec
or
sbb
fwait
add
ret
mov
insb
aam
lds
add
int3
sub
imul
add
inc
xchg
test
int3
mov
adc
and
testl
dec
pop
push
jb
add
xor
cmp
jnp
jne
or
outsb
jb
push
and
rol
push
lcall
sub
cmp
adc
dec
addb
outsb
dec
pusha
fildl
repz
mov
adc
push
testb
adc
cs
dec
test
aam
call
gs
push
cmpsl
addb
push
ja
lods
or
ja
and
add
mov
cwtl
mov
pusha
add
add
mov
xchg
mov
pusha
push
outsb
and
icebp
das
call
out
or
cmp
adc
sub
dec
cmp
add
stos
mov
xchg
xor
leave
or
xchg
daa
shrl
xchg
sbb
roll
dec
adc
sbb
in
mov
fisttpll
jnp
adc
add
add
das
xchg
xchg
add
add
out
add
das
mov
mov
mov
xchg
push
jp
add
push
pusha
rolb
mov
fadds
sbb
fwait
and
xchg
jnp
clc
mov
or
inc
gs
add
pop
out
rclb
pop
in
and
testb
fadds
xor
decl
and
gs
flds
loope
or
orps
xor
pop
sub
loop
cld
sub
mov
or
andnps
and
mov
ja
cmc
repz
out
and
popa
jo
add
jo
adc
stos
iret
mov
int
xchg
push
mov
inc
cld
pop
lcall
jns
or
pop
jmp
es
mov
testb
jmp
add
add
fisubl
or
mov
dec
mov
fidivrl
fisttpl
and
insb
fisubs
push
in
dec
ss
mov
sbbb
mov
fucomp
iret
int3
cmpsb
rol
lock
pusha
cmp
ud2
test
pusha
test
add
add
pop
aad
std
add
add
add
inc
clc
add
decl
add
add
or
or
mov
mov
mov
mov
mov
mov
mov
mov
aaa
cmp
cmp
sti
ljmp
call
jmp
lcall
loop
loope
jmp
fdivrp
fdivr
fcos
fdivr
xlat
call
call
call
call
call
call
call
push
lock
dec
pop
into
dec
dec
dec
dec
les
leave
dec
loope
push
fidivrs
pop
add
loopne
jecxz
in
push
or
pop
sahf
addr16
mov
cwtl
in
xor
iret
out
test
out
ror
jns
out
jle
push
sub
fadds
int3
mov
iret
jnp
and
sub
ss
jmp
fisttpll
in
clc
es
xorb
int
jl
inc
loopne
aad
cmp
in
out
dec
mov
mov
out
jnp
outsb
aam
ss
push
repz
loopne
ljmp
scas
mov
into
idivb
cmpsb
jbe
sahf
mov
fmuls
int
fnsave
ror
mov
jnp
int3
push
iret
fmull
nop
mov
sbb
stos
adc
pop
or
adc
repnz
mov
mov
mov
mov
adc
lock
ret
aas
dec
ret
adc
lds
add
sahf
gs
int
cmp
jns
cmp
mov
incl
push
pop
adc
pop
incl
enter
test
incl
xchg
or
sub
mov
bound
cmpb
inc
and
cmpb
les
pop
dec
pushf
in
or
ljmp
rorb
cmp
adc
ljmp
test
in
inc
mov
jmp
pop
push
test
fmul
dec
movsl
insl
test
jge
call
mov
mov
cld
mov
add
cmp
mov
std
sbb
adc
cwtl
pusha
mov
cmpsl
loope
or
push
xchg
dec
push
xchg
in
loop
cmp
in
add
dec
lahf
add
cmp
sahf
cmp
add
pusha
lahf
repnz
out
xchg
push
aaa
out
push
fdivrs
lahf
add
fadds
inc
xor
jbe
adc
into
or
data16
xor
push
sub
fldl
fsubr
xor
in
jnp
cld
add
add
push
pop
inc
inc
mov
imull
movsb
ficoms
paddsb
inc
pushf
pop
and
mov
push
jl
mov
sub
outsl
clc
inc
ficoms
add
adc
cmp
sub
push
push
iret
push
add
inc
mov
add
add
add
js
clc
mov
mov
test
adc
sbb
jmp
add
sbb
add
add
adc
mov
mov
mov
mov
mov
or
cld
pushl
adc
sbb
jne
pop
mov
mov
mov
mov
pop
mov
mov
pop
add
mov
mov
mov
call
fcom
sbb
lret
inc
inc
inc
inc
inc
inc
inc
sub
add
mov
mov
mov
and
sub
stc
lcall
mov
mov
addr16
mov
cwtl
push
adc
adc
fwait
out
lods
int3
lock
adc
insb
sahf
int
pop
in
movsb
hlt
sbb
fidivrs
out
pop
and
push
and
aam
and
addr16
sahf
and
and
xor
jnp
mov
push
dec
ds
je
iret
mov
ficomps
insb
jl
cmp
fs
mov
cmp
inc
xchg
test
cmp
mov
negl
sub
enter
fidivrs
mov
in
es
sub
sub
cmp
sti
push
sub
push
fsub
call
into
out
sub
sub
sub
sarb
xor
mov
and
push
xor
sub
ds
mov
sbb
push
dec
ja
pop
cmpl
cmpsl
fnstcw
and
adc
and
inc
mov
cmp
push
ret
movb
or
push
xor
jmp
push
inc
pop
and
mov
outsl
daa
add
pop
xchg
call
imul
push
xor
nop
xor
adcl
dec
shrb
jl
dec
add
mov
add
pop
push
xchg
sub
mov
pop
sub
push
mov
ret
ja
xchg
les
cwtl
push
mov
mov
adc
dec
dec
add
fdivl
adc
inc
dec
inc
sbb
sarb
les
aam
ds
or
mov
add
inc
inc
mov
push
mov
inc
sub
pushf
flds
xor
pop
xchg
and
leave
push
inc
scas
xchg
add
test
add
shrb
add
add
pop
pop
pop
mov
pop
dec
add
unpckhps
lods
jg
and
sub
xor
add
and
les
or
enter
mov
mov
dec
cmp
repz
pop
data16
inc
cmp
repz
cmp
dec
xor
cwtl
cbtw
adc
cwtl
lods
js
pop
xor
into
cmpsb
or
xchg
data16
rcrb
add
fs
inc
xor
int
dec
push
out
push
leave
push
es
adc
cltd
add
add
ds
add
push
jle
loop
aad
lea
jecxz
mov
nop
add
sbb
and
sub
lock
insb
add
push
and
mov
and
or
sub
push
sub
and
add
inc
movl
mov
xchg
adc
dec
add
push
push
icebp
in
sbb
xchg
fsubl
add
sbb
rcrb
cwtl
mov
insl
push
adc
aaa
push
fisttpll
adc
xor
xor
les
imul
clc
jno
adc
sub
shrb
cmc
xor
mov
jg
pop
sbb
push
adc
pop
sbb
or
nop
jb
add
inc
pop
daa
lret
push
fimull
lcall
pop
dec
inc
xlat
or
or
lods
sbb
lods
mov
xchg
daa
push
fmuls
push
leave
pop
push
push
inc
push
inc
cs
pop
daa
push
jo
daa
or
or
popa
clts
and
mov
mov
dec
outsl
and
daa
dec
push
sbb
enter
mov
pop
mov
sub
movl
mov
orl
aam
testb
out
subl
push
jbe
pushf
cmp
mov
prefetch
sbb
fcomps
mov
sbb
inc
lret
fstl
bound
mov
jge
ret
push
sbb
xchg
ljmp
sbb
add
out
nop
in
dec
adc
mov
adc
stc
dec
sbb
cmpsl
cmc
push
out
sub
scas
mov
push
outsb
and
ljmp
xor
sbb
inc
scas
sub
popf
mov
mov
pop
inc
xor
sahf
push
mov
push
rcrl
pop
int3
out
adc
icebp
pop
dec
loope
push
jo
mov
add
inc
adc
insl
inc
jne
lcall
push
cli
jle
or
test
orl
sub
rorb
or
ds
cmp
test
dec
add
mov
es
mov
mov
enter
adc
add
xlat
and
dec
pushf
lret
and
adc
cmp
shrl
pop
xchg
add
ret
cs
pop
sbb
mov
das
push
jg
or
pop
push
add
dec
dec
jne
xor
cmpsl
xlat
push
int
push
in
or
or
add
add
or
push
dec
fs
add
rclb
push
push
fildll
cmpsb
lods
or
adc
cmpsb
imul
imul
std
fs
push
push
dec
mov
dec
in
lret
dec
xlat
dec
push
add
or
mov
rcll
ret
or
nop
adc
fidivrl
pop
mov
push
fisttps
xchg
cmp
je
sub
les
inc
or
insl
mov
sahf
mov
dec
je
adc
add
ror
pop
pop
mov
mov
adc
ljmp
jmp
mov
jo
mov
inc
jbe
jne
pop
mov
lods
sarb
dec
sub
adc
or
sbb
and
push
xor
inc
or
das
and
pop
fdivr
data16
mov
jmp
or
pushl
sbbb
aaa
push
dec
cmpb
mov
repnz
pop
xor
or
cmp
stos
sbb
aad
stos
rorb
and
xchg
push
movsl
sbb
inc
jecxz
addb
add
inc
mov
add
push
jmp
lcall
leave
sbb
outsb
dec
fbld
cmpsl
xor
mov
pop
xsavec
inc
mov
add
lea
test
sub
daa
sbb
fwait
pop
pop
dec
insb
shlb
dec
push
pop
pop
cmp
test
mov
add
jae
mov
pushf
push
pop
in
test
xchg
lds
cmpsl
inc
enter
pop
adc
in
adc
and
push
xchg
push
push
pop
push
insb
insb
repz
jnp
movsl
push
pop
test
popa
dec
pop
inc
jp
faddl
lock
pop
mov
addr16
in
shrb
bound
enter
ss
cli
adc
add
mov
mov
lock
outsb
add
add
and
imul
xchg
mov
sub
adc
stc
imulb
or
adc
cmp
sbb
mov
mov
ficoms
sub
inc
divps
jae
fistps
mov
mov
ficompl
cmpsl
mov
or
inc
arpl
adc
stc
mov
add
push
pushl
add
jp
loopne
push
add
sub
mov
sarl
jb
lock
pop
push
movb
adc
xor
inc
xchg
popa
addb
pusha
jl
add
jmp
inc
stc
xlat
rol
cmpsl
jmp
mov
imull
cmpb
js
mov
subb
pop
or
push
xchg
fidivrl
loope
adc
loop
ficoml
sub
nop
fdivrl
cmp
leave
jp
or
wrmsr
sbb
sub
or
dec
inc
in
es
mov
cmp
jge
shlb
and
xor
test
cmp
jecxz
push
adc
xor
test
sarb
fwait
mov
in
sub
add
insb
inc
call
sbb
mov
aas
cmp
je
cwtl
or
push
in
dec
lcall
aas
cs
fisttps
push
jno
pop
in
lea
xchg
cmp
add
lea
rcr
rorl
jg
and
jp
hlt
ljmp
push
fisttps
test
shlb
xor
or
mov
jne
cmp
incb
outsb
lods
jl
addr16
jg
jnp
sub
movsb
push
lock
mov
ja
inc
lea
jp
jno
icebp
or
cmpsb
sub
movsb
daa
pop
lcall
gs
inc
push
sbb
adc
inc
inc
jo
ljmp
xor
pop
test
mov
daa
push
xchg
push
in
add
jno
push
imul
mov
sbb
js
test
and
popa
lea
or
and
ret
loope
push
jne
mov
aad
nop
mov
mov
iret
sbb
ss
dec
popf
popa
or
cmp
or
fsubs
test
shlb
jo
subb
and
cmp
sbb
add
adc
or
sbb
int3
lock
sbb
cmp
push
js
test
sbb
push
lock
dec
sahf
inc
rclb
inc
cmp
mov
jne
insl
imul
xchg
test
sbb
and
mov
add
cmp
bound
mov
jmp
xchg
push
cmpsl
add
enter
push
xor
dec
aas
inc
lcall
daa
sub
mov
or
aaa
leave
call
rolb
push
popa
data16
inc
xchg
sti
jb
les
pop
and
xchg
mov
daa
or
mov
jno
xchg
or
aaa
jp
lods
xchg
xorb
mov
cmpl
fistpll
sbb
jl
adc
dec
jne
xchg
sbb
add
je
std
mov
call
fdivl
dec
movsb
dec
xchg
adc
push
push
lcall
inc
sbb
xorb
ss
rcl
scas
mov
jmp
sub
mov
push
dec
add
daa
loopne
stos
xor
mov
xchg
push
xor
cmp
push
or
add
pop
pop
es
popa
cmpsl
mov
pop
sbb
or
aad
out
sub
ret
int
add
insl
sub
adc
or
popa
add
mov
adc
out
adc
jns
mov
lahf
add
ret
or
es
or
mov
inc
pop
jno
adc
insb
negb
add
je
push
cs
adc
arpl
dec
inc
or
cmpsb
hlt
push
fidivs
inc
std
lds
mov
or
testb
fimuls
mov
aad
sub
cwtl
clc
sub
mov
cmovno
xor
xchg
and
popf
movsl
ffree
pop
test
mov
mov
pop
push
push
sub
inc
scas
and
test
pop
sbb
push
push
cmp
inc
or
xchg
mov
cltd
pop
pop
and
fimuls
imul
inc
push
mov
and
adc
test
jne
dec
pop
subl
push
loope
inc
mov
fbstp
dec
xchg
mov
aad
adc
popa
mov
add
in
lcall
mov
xor
push
or
pop
int3
outsb
icebp
sub
loopne
aaa
sub
in
sbb
lahf
sub
mov
call
test
in
jb
clc
aam
sub
fsubr
jp
aad
and
and
jp
es
aas
cmp
stc
fstpl
fwait
jmp
mov
into
push
insb
and
out
and
lret
test
mov
xor
sub
fsubs
cli
imul
mov
sub
insb
and
shll
mov
dec
adc
or
aad
sbb
xchg
lock
adc
xor
mov
cmp
cmpb
dec
mov
daa
loopne
es
mov
setbe
lret
add
cwtl
mov
lret
mov
jb
aam
add
and
mov
cmp
pop
repz
dec
popf
add
inc
leave
lods
push
xchg
jecxz
sbb
lahf
fsubs
hlt
and
mov
jnp
gs
push
cs
dec
ret
jecxz
cmpl
pop
lods
cli
sub
jge
push
push
inc
inc
js
mov
popa
add
loopne
cltd
lret
xlat
jmp
call
cmpsb
sbb
push
sub
add
ret
fidivrs
dec
pop
jno
dec
sub
push
leave
push
aad
lods
lods
adc
loop
xchg
push
cmp
pusha
xor
loope
adc
hlt
icebp
scas
inc
mov
dec
ja
push
jmp
sbb
dec
mov
push
sub
mov
test
add
or
movsb
movsb
xor
sub
incb
cmpb
adc
mov
rolb
inc
into
jno
xor
das
mov
das
push
movb
cli
fbstp
add
mov
mov
mov
cltd
es
jo
and
pushf
sbb
mov
sbb
sahf
popa
mov
cmc
sub
or
cmp
xchg
sub
cli
cmp
or
or
inc
pop
pushf
stc
test
sub
insb
insb
adc
adc
loop
xchg
inc
cs
push
lods
orb
outsl
je
lods
cwtl
xor
add
mov
cmp
xchg
outsl
cld
addb
aad
sub
and
or
sarb
pop
in
sbb
cmp
pop
jo
das
sbb
add
add
cvtpi2ps
jo
shr
or
sub
mov
and
add
push
daa
inc
mov
adc
xchg
dec
lcall
lds
adc
or
and
cmpsl
cld
loop
xlat
enter
push
and
notb
xchg
adc
add
mov
mov
imul
notl
rol
loop
jmp
daa
dec
into
jp
gs
jecxz
fwait
jns
adc
nop
shl
into
gs
add
xchg
jns
and
or
pusha
out
adc
mov
inc
mov
stos
dec
cld
stos
mov
mov
enter
push
sub
xor
add
sbb
add
inc
loopne
lock
bound
or
mov
cmp
fnsave
stos
movsl
sbb
pusha
xchg
xchg
cmp
xchg
fldl
pop
shll
pop
push
dec
pop
es
mov
test
inc
mov
iret
testb
or
lock
cmpsb
icebp
loope
out
pop
sbb
sub
add
mov
sbb
lret
mov
aas
jnp
xor
mov
sbb
mov
addr16
negl
pop
mov
inc
add
mov
sarl
sbb
add
cltd
and
cli
sub
dec
push
push
push
hlt
pop
flds
add
inc
and
xchg
dec
rorb
pop
ja
sbb
loopne
push
jmp
mov
icebp
pop
hlt
leave
push
adc
mov
xor
pop
mov
inc
ja
jecxz
loopne
jnp
sub
add
xor
xchg
xor
jb
pop
xchg
add
test
xor
mov
mov
pop
hlt
or
sub
cltd
insb
cmp
packuswb
clc
push
pop
add
test
mov
push
ja
mov
pop
jp
add
cwtl
or
andl
push
jle
pop
pop
xor
and
sbbb
adc
and
push
adc
outsb
cwtl
cmpsb
adc
pop
or
dec
pusha
xor
getsec
cmp
setne
ljmp
dec
out
pop
jmp
cmp
je
mov
test
jbe
xor
push
adc
or
xchg
out
ret
cmp
push
or
adc
push
mov
pop
je
sub
jbe
cmp
cmp
cltd
movsb
popf
sbb
or
popl
sbb
or
pop
aad
icebp
dec
push
sbb
sub
inc
ljmp
mov
adc
push
dec
jbe
or
outsl
test
add
cmpb
cmp
mov
inc
dec
aad
adc
pop
cs
jmp
bswap
push
in
mov
repnz
aad
jecxz
jl
and
les
mov
push
fwait
mov
aas
repnz
insb
in
and
push
daa
repz
add
push
sub
lret
jae
ret
fwait
adcb
movl
lcall
fadd
mov
int3
pop
negl
cmp
jo
ret
jae
addr16
shll
and
jl
or
push
cmp
sbb
orb
cmp
push
notl
jnp
adc
cmp
mov
ret
xchg
and
aaa
push
push
aaa
scas
add
mov
sub
sbb
xor
fs
jg
add
mov
mov
sbb
lret
cmp
mov
xchg
adc
jge
adc
mov
sub
dec
inc
or
mov
mov
cmp
cmp
dec
sbb
aam
push
add
into
aas
mov
cmp
lods
and
xor
shll
lds
xorl
mov
inc
incl
dec
xor
mov
lret
mov
adc
push
mov
mov
pop
fisttpll
inc
inc
mov
push
xor
cmpsb
mov
push
dec
je
outsl
xor
sbb
jl
movl
sahf
test
push
add
pop
pop
pop
sbbl
adc
push
pop
add
jp
or
sub
shlb
imul
push
je
aad
stos
and
xor
ja
add
or
adc
dec
xchg
adcb
adc
xor
push
cmpsl
outsb
aam
les
xor
push
into
int3
mov
or
popf
sub
sbb
insb
xor
sbb
jae
push
push
push
xchg
inc
cmc
mov
mov
pop
ret
jae
ficoml
add
cli
xor
out
sbb
aas
mov
rcrb
add
fisttpl
mov
jo
mov
insb
xlat
mov
daa
mov
pop
inc
xor
mov
lock
pop
xor
aas
out
or
xorps
push
ret
pushl
push
cmpsb
lds
ret
subl
mov
cmpsl
xlat
ret
adc
fmull
push
and
loope
test
fistpl
inc
push
movsb
push
push
outsl
adc
ret
repnz
aam
scas
mov
subl
sbb
adc
push
fldcw
adcb
push
mov
lahf
mov
inc
ljmp
add
push
ret
shl
int3
mull
mov
push
add
dec
mov
testl
adc
insb
xlat
and
icebp
mov
ret
sbbl
clc
or
popa
mov
or
jbe
test
xlat
or
sub
arpl
sub
push
out
jl
or
mov
and
xchg
cmp
sti
or
push
pushl
and
jle
jne
cmp
in
in
out
fsubr
and
clc
jne
sub
loopne
push
imul
push
xor
pop
aas
cmp
test
aam
fbstp
adc
cltd
mov
push
je
enter
lock
push
out
dec
sub
mov
out
fisttps
ljmp
adc
xor
and
mov
repnz
inc
dec
push
push
xor
inc
mov
faddl
jle
in
push
movsb
or
adc
adc
inc
ja
cmp
pop
inc
jbe
jnp
dec
fstpl
dec
jne
lds
dec
lods
in
dec
and
push
sahf
adc
iret
cmp
mov
mov
sub
or
mov
jl
inc
add
testb
and
cmc
test
sub
cmpb
push
adc
pusha
add
aaa
loopne
sub
testl
inc
mov
nop
sete
ret
sbb
mov
dec
mov
push
adc
or
clc
or
sub
or
fidivs
push
dec
mov
dec
pop
add
sub
rolb
push
cmp
cmpl
and
xchg
jg
js
mov
and
mov
xor
fucomi
adc
dec
das
shlb
jne
dec
xor
das
in
rolb
push
js
fimull
roll
ffreep
scas
inc
inc
lret
inc
dec
aad
mov
add
push
xchg
dec
into
add
fadds
push
inc
or
in
push
pop
popa
loop
add
jo
andl
sub
push
and
cmp
test
daa
inc
mov
cmpl
andl
popf
and
cmp
xor
adc
inc
aam
out
mov
in
cmp
cli
clc
dec
sbbl
pop
rcrb
bound
xchg
lds
sahf
outsb
or
mov
pop
repz
aam
fwait
or
shlb
or
ds
mov
aad
and
adc
incl
cmpsl
mov
adc
xchg
sbb
dec
cmp
loope
mov
inc
cmp
mov
or
outsb
dec
add
add
enter
cmp
dec
fsubs
pop
pop
push
ret
cmp
inc
add
loope
push
in
add
lds
int
mov
in
jae
xor
lea
inc
pop
inc
pop
sub
mov
orb
mov
lds
int3
add
ja
movsl
sbb
daa
leave
lods
or
xchg
stc
insb
lods
in
mov
ja
pop
lret
cmp
mov
incb
mov
dec
add
test
jl
sti
sub
cmp
pop
push
add
or
je
js
add
jae
inc
xchg
fiaddl
sub
mov
les
add
cwtl
test
inc
add
pop
in
push
mov
sub
pop
inc
and
and
push
and
loop
sbb
popa
xor
fistps
add
mov
mov
cmpsl
inc
mov
cmc
into
scas
test
add
cmp
inc
adc
xor
mov
shll
filds
jns
sub
inc
pusha
and
test
or
jg
inc
or
ja
sub
sahf
or
pop
jmp
mov
mov
push
ss
iret
xchg
mov
outsb
inc
ret
adc
inc
in
add
jle
jmp
sbb
sarb
push
add
mov
add
pop
jp
sbb
mov
daa
xchg
mov
insb
add
ss
jl
ret
lcall
sahf
or
or
lret
adc
mov
or
sbb
test
pop
movsb
test
mov
int
pop
pop
ret
xchg
pop
fstl
xchg
pop
addb
les
hlt
bound
movsb
mov
pop
push
aaa
rcrb
xchg
jge
adc
pop
sub
pusha
mov
ret
pop
je
mov
pop
or
xchg
daa
push
adc
inc
xchg
clc
inc
leave
add
push
and
xor
popa
and
test
add
push
aad
mov
ud2
pusha
jecxz
pop
and
and
iret
inc
add
shll
leave
test
imul
jo
xor
dec
mov
mov
adc
sbb
inc
or
jo
dec
xor
inc
scas
jp
jno
aas
cmp
aas
inc
push
decl
ss
add
adc
int
adc
lock
pop
es
cmp
je
jp
pop
jl,pt
mov
adc
test
or
pop
cltd
mov
pop
je
mov
push
in
xchg
push
sahf
or
pop
push
add
mov
lods
lahf
sarb
or
fmuls
es
and
xor
mov
jo
inc
mov
xor
pop
sarl
xor
xor
mov
inc
adc
xchg
test
lods
lods
xchg
sub
movsb
push
dec
add
cmpsl
mov
lds
and
adc
xor
in
or
outsb
pop
je
mov
xor
repnz
pusha
add
cmpsb
ljmp
push
cmp
and
push
popf
cmp
bound
mov
push
cs
push
nop
push
aaa
push
and
data16
frstor
cli
xor
aas
mov
xor
add
sbb
in
xchg
or
sti
mov
cltd
sbb
mov
mov
dec
rorb
in
cmp
pop
mov
xchg
xchg
movsb
mov
dec
jb
xchg
pop
pop
or
cmp
inc
mov
inc
data16
fsubrs
ja
sub
mov
clc
sub
sbb
ror
sbb
lcall
mov
js
jne
addr16
sbbb
insl
pop
outsb
pop
scas
dec
inc
cs
inc
mov
xor
xor
fnstsw
add
adc
push
sti
ror
add
fistl
leave
je
jnp
cld
jge
mov
push
rclb
jae
jo
ret
lahf
fwait
into
cmc
or
sbbb
mov
ljmp
dec
mov
mov
dec
dec
xor
or
jl
xor
in
cmp
mov
and
mov
or
or
cmp
inc
push
test
fcompl
rcl
fdivrl
mov
adc
out
pop
pop
adc
push
add
xor
pop
gs
xor
test
xor
adc
cmp
push
add
push
or
push
adc
aas
call
cld
add
jnp
dec
fs
push
ret
ljmp
lret
mov
mov
ljmp
ds
xchg
mov
and
inc
js
mov
cmp
clc
pop
xor
cmp
je
int3
cmp
mov
aaa
pop
push
js
pop
shlb
mov
pop
pop
add
shlb
adc
cmp
add
cmpb
xor
shll
jne
mov
lcall
outsb
movsb
adc
jl
push
rorl
dec
inc
ret
std
std
pop
cld
add
push
popa
inc
mov
sbb
test
mov
pop
int
mov
mov
jb
mov
mov
enter
jmp
pop
lods
and
or
jns
das
add
ret
outsb
pop
mov
insb
cld
sbb
mov
mov
nop
lahf
inc
or
and
jb
scas
pusha
mov
jl
cmp
iret
fdivl
iret
scas
add
adc
jne
mov
sub
fildl
js
push
mov
outsl
arpl
cmp
and
and
dec
js
cli
pop
int3
or
add
cmp
test
or
ret
jo
mov
cmp
dec
and
scas
subb
pusha
subb
inc
outsb
aas
xor
push
arpl
push
add
add
stos
pop
sbb
orb
mov
push
mov
addr16
das
jnp
icebp
sbb
or
cs
bound
push
pop
in
call
push
add
adc
inc
add
inc
adc
sbb
movsb
xorb
jo
movsl
mov
les
add
adc
adcb
push
xor
mov
and
adc
loopne
mov
add
dec
and
inc
or
loope
lcall
sub
inc
xchg
mov
fwait
lea
fst
mov
ss
fucomp
adc
pop
loop
jle
add
mov
lea
scas
sub
inc
and
ret
clc
sub
je
cwtl
jl
mov
push
insb
push
rcl
fisttpll
pop
mov
inc
sbb
cmp
lahf
mov
shrb
mov
nop
xchg
push
jb
add
or
push
mov
inc
add
push
add
negl
xor
idivb
pop
mov
je
cmp
push
pop
notb
lahf
sub
cmp
xchg
cmp
pop
and
nop
jne
add
push
push
pushf
ret
inc
adc
sub
mov
daa
aam
sbbb
lock
neg
xor
enter
adc
fsubr
adc
loopne
fmuls
insb
mov
js
lea
sub
adc
test
add
cmp
push
clc
cmp
or
out
mov
mov
sub
mov
bound
dec
dec
pop
add
xor
shll
sub
insb
push
sbb
or
loopne
jmp
loopne
add
sbb
mov
cmpsb
dec
add
mov
faddl
enter
mov
sub
xor
dec
out
jge
xchg
and
mov
ret
mov
mov
testb
dec
aam
push
sub
cmp
aaa
call
fistps
sub
das
in
or
inc
lea
xor
pop
out
xor
sub
adcb
test
call
pop
es
mov
mov
add
or
push
adc
jo
aam
les
add
push
int
inc
jo
in
add
test
xchg
mov
js
add
pop
loop
aaa
mov
xlat
ljmp
push
mov
mov
clc
les
and
push
dec
or
les
inc
adc
fidivs
or
xor
xor
mov
sbb
pop
pusha
xor
lret
xor
inc
int3
jo
mov
mov
jne
add
or
orl
adc
subl
outsl
push
and
xchg
add
pop
movsb
jmp
push
faddl
fs
pop
inc
inc
out
jbe
inc
cmp
js
das
sbb
nop
cmp
call
sbb
int3
push
pop
sub
pop
add
out
xchg
mov
jne
stos
in
inc
dec
js
aad
aam
sti
jmp
mov
loope
xor
cmpl
ret
sbb
xchg
js
cmp
mov
ret
pop
inc
pop
sub
lret
cmp
sbb
mov
andb
ret
push
add
js
or
adc
push
adc
pop
adc
js
jne
addr16
sbbl
imul
js
push
jno
imul
fxch
and
in
pop
mov
xor
ds
mov
push
ret
add
sbb
test
push
and
ss
loop
sub
cmp
js
adc
ret
int3
sbb
push
and
mov
xchg
es
and
xor
inc
and
sub
movsl
push
xlat
outsl
xor
add
ret
js
xor
mov
lods
push
test
mov
inc
sbb
add
out
sbb
inc
into
adc
or
das
sub
das
out
mov
movsb
test
and
add
addb
push
pop
daa
call
sub
jae
mov
pop
loopne
orb
lods
les
ret
ret
xor
and
fcmovnbe
jecxz
ss
lret
lcall
push
add
jb
enter
clc
sar
xchg
push
int
mov
mov
js
pop
subb
pop
int
add
xor
movsl
test
adc
or
push
jb
sub
add
adc
cwtl
jbe
insb
push
pop
repz
rorb
adc
inc
jmp
dec
mov
sub
or
pushf
pop
or
xchg
xor
push
fstpl
mov
lock
push
loopne
or
cwtl
test
or
add
roll
or
or
xor
mov
pop
jmp
sub
push
add
push
adc
test
inc
fs
rorb
push
mov
ss
inc
lock
jp
cmp
xchg
mov
ficoml
ja
mov
seta
cmpb
dec
mov
mov
sbb
or
inc
jmp
jl
mov
testb
add
inc
or
mov
dec
inc
push
jmp
sub
dec
aam
xchg
popa
aaa
pop
shrb
gs
imul
je
add
or
adc
pop
insl
add
adc
sbb
cmpb
int3
test
adc
cmp
add
cmp
mov
adc
outsb
pusha
or
xchg
mov
jbe
out
out
fdivp
jg
jb
adc
pop
jl
mov
push
xorb
add
faddl
add
addl
adc
dec
je
sbb
sbb
cmp
popa
adc
int
lret
dec
pop
add
xor
in
add
jle
push
jmp
lahf
addb
adc
pop
popa
les
cmp
jne
mov
clc
xchg
xor
and
mov
enter
int
mov
xchg
xchg
lea
not
mov
xchg
push
adc
and
orl
pusha
mov
add
rcll
mov
dec
popa
leave
in
jmp
call
add
mov
mov
add
and
fistps
and
cld
fs
pop
xor
pop
fildl
iret
pop
pop
sbb
adc
inc
lock
dec
sub
gs
xor
and
jg
add
enter
aaa
push
shll
adc
leave
sbb
mov
inc
pop
pop
xchg
nop
cs
push
lcall
dec
leave
mov
xor
cmpsb
cmp
dec
add
ret
pop
mov
xchg
es
andb
add
les
xor
addl
xor
imul
adc
ficoml
push
ss
jle
pushf
or
sbb
sbb
push
sub
xchg
outsl
sub
sub
cmp
pushw
dec
mov
mov
imul
xchg
div
push
js
inc
push
xor
jg
xchg
jg
adc
stos
adcb
je
sbb
decb
mov
ret
dec
or
xchg
aad
movswl
or
sbb
adc
and
add
mov
cmp
call
int
sbb
or
adc
lahf
jb
into
loope
cmpb
mov
les
xchg
pop
and
aaa
rcl
xor
rclb
jmp
movsl
lea
movsb
test
jmp
or
idivl
pavgw
add
aam
or
in
jo
mov
push
ds
cmp
loopne
jp
jb,pn
or
sbb
dec
cmp
adc
or
lods
mov
mov
ret
xchg
sub
cmp
or
dec
scas
xchg
sbb
sub
leave
cwtl
inc
fistps
movsb
add
imul
adc
leave
movsl
add
mov
fs
cmpl
sub
pop
shll
jp
or
cmp
push
ret
pop
aam
push
mov
or
mov
loop
loopne
xor
sub
adc
imul
call
push
mov
jbe
push
sbb
cmp
inc
cmp
in
xchg
data16
dec
das
inc
outsb
in
js
xchg
mov
pop
adc
sbb
out
mov
add
add
addr16
pop
cmpsl
jne
push
xchg
xchg
sbb
daa
nop
sbb
jns
add
mov
inc
mov
add
out
mov
jl
or
xor
addr16
jbe
add
sub
test
ret
push
pop
pop
ret
and
je
pop
outsl
incb
nop
out
jle
pop
dec
push
incl
or
imul
mov
out
jle
adc
or
movsl
test
sbb
xchg
pop
je
shll
decl
jne
testb
dec
ss
add
cmc
sbb
arpl
sti
addl
push
rorb
je
les
push
inc
sub
rcrb
xchg
add
jmp
popa
mov
comiss
jg
lods
jne
cmpl
lret
int3
xchg
jmp
fcomps
jo
data16
popa
pusha
inc
mov
decb
or
sub
das
mov
outsl
aam
inc
mov
inc
dec
push
mov
mov
sub
xor
rclb
push
rcll
adc
cwtl
fadd
loop
mov
inc
sub
test
rsqrtps
jg
mov
cmp
orb
xchg
fcmovne
xchg
cmp
pop
adc
sbb
out
pop
pop
push
in
data16
mov
dec
jno
sarl
mov
popl
jle
and
insb
ret
nop
in
arpl
adc
test
loope
push
out
ds
cmp
inc
mov
cmp
fdivs
ficoml
and
bound
pusha
mov
ret
and
mov
adc
pop
sub
dec
lds
sbb
ret
add
outsb
inc
cld
add
push
inc
or
push
mov
xor
lea
lea
test
push
fdivs
dec
push
sub
jno
test
hlt
or
mov
push
pop
sub
push
inc
add
push
cld
xor
mul
add
push
fwait
push
lret
pop
add
es
outsb
push
cld
cmp
daa
dec
or
in
insb
jo
andb
push
xor
sbb
xchg
sub
sub
xchg
sub
add
lea
inc
mov
ret
ljmp
and
lock
imul
mov
popf
daa
ror
fwait
mov
and
pop
push
clc
fstpl
inc
mov
fs
push
push
dec
and
inc
scas
movsb
pop
test
mov
cltd
cmpb
adc
jle
pop
or
push
test
inc
adc
and
or
stc
addb
and
adc
jb
and
leave
ljmp
cmp
mov
add
movaps
nop
mov
push
out
insb
lods
lds
lret
inc
inc
jb
sbb
aas
cmp
lcall
cwtl
ror
dec
jnp
shlb
or
js
outsl
ffree
inc
and
mov
cwtl
push
push
push
sbb
inc
mov
xchg
sbb
mov
daa
mov
mov
pop
mov
pushl
ss
push
lock
test
in
push
push
xchg
pop
cmp
mov
fldl
stos
fcompl
test
fiadds
dec
aas
adc
xor
ja
enter
pop
jno
jo
js
adcb
pop
mov
xchg
in
cmp
lock
add
add
jns
or
add
insl
cmp
movsb
or
ljmp
lock
mov
or
sbb
sub
fisubs
sbb
sbb
shl
jl
xor
and
adc
testb
dec
mov
or
in
push
jmp
bnd
in
aam
int3
or
mov
and
xlat
sbb
pop
sub
mov
fmuls
ret
sbbb
aaa
xor
leavew
call
push
dec
push
push
dec
insb
push
fisubrl
fbstp
fnstsw
add
mov
leave
shlb
xchg
mov
mov
xchg
mov
and
pop
movl
aam
stos
pop
add
lock
hlt
aad
shrb
out
adc
inc
pushf
nop
push
jmp
jmp
adc
rorb
cmp
xchg
lds
or
shrl
or
out
jmp
add
test
insb
xor
or
popa
sbb
push
mov
rcrb
mov
pop
insl
mov
les
loope
push
sub
inc
jo
loope
or
xor
sub
mov
rolb
xor
mov
mov
sub
daa
mov
xchg
ja
mov
sbb
loopne
sub
mov
inc
mov
cmp
inc
and
data16
lock
cmp
push
sub
or
mov
add
lret
addl
je
or
mov
pop
sti
dec
movb
loop
addr16
and
and
jne
mov
lods
jmp
sbb
lahf
stos
sbb
pop
hlt
add
dec
mov
sbb
mov
add
fs
xchg
shrl
xchg
pop
sbb
pop
sbb
lds
mov
adc
cld
inc
cmp
mov
enter
jge
popa
pusha
out
test
and
lcall
dec
push
in
dec
dec
std
pusha
cmpl
jnp
xchg
cld
xor
mov
pop
clc
into
xchg
and
push
imul
insl
push
jne
or
push
movsb
enter
sbb
and
or
sub
lahf
lds
pop
shlb
adc
loopne
mov
adc
push
cmp
daa
repnz
sbb
mov
cmp
pusha
push
add
xchg
movsb
xor
xor
rcr
aaa
nop
mov
jle
pop
jge
mov
add
xor
outsl
rcr
jne
jns
bound
or
or
test
out
repnz
add
es
out
cmp
or
sti
xchg
ja
addr16
jne
das
mov
fsubrs
pop
or
mov
outsb
inc
adc
xor
xchg
adc
out
or
mov
notl
sbb
inc
jp
pop
and
jno
sar
cmp
mov
repz
xor
loope
ljmp
pushf
adc
or
jno
inc
dec
mov
dec
scas
shlb
cmp
and
sarl
dec
inc
dec
adc
sub
and
insb
mov
pop
pop
rcl
lock
xor
mov
mov
inc
popa
ljmp
ret
mov
xchg
stos
jl
rol
aam
lret
inc
dec
lock
outsb
sbb
inc
lret
pop
in
mov
and
dec
adc
enter
add
inc
push
call
jl
jo
or
cmp
adc
adcb
mov
orb
sti
in
in
jmp
aaa
hlt
jmp
xorl
inc
sbb
fcoms
xchg
mov
cli
adc
dec
mov
sbbl
mov
push
cs
aaa
lock
xchg
xchg
popa
std
add
mov
popf
movb
inc
add
pusha
gs
cmp
push
mov
push
jne
icebp
lret
sub
in
dec
cmp
push
sub
dec
jl
push
push
xor
add
dec
or
pop
or
add
sub
pusha
or
pop
add
xchg
cmp
jne
lock
mov
push
xchg
and
cmc
incb
mulb
idivb
dec
daa
imul
add
or
popa
lahf
popa
lods
or
fs
add
jmp
sbb
sbb
dec
or
daa
and
mov
in
push
adc
xor
mov
xor
push
andl
mov
cvttps2pi
adc
imul
div
cmpl
mov
or
inc
retw
xlat
inc
push
inc
cli
add
cs
negl
push
sahf
aaa
dec
stc
loope
out
outsb
jle
push
sub
add
jnp
sub
insb
cmpsb
jecxz
bound
in
inc
pop
mov
sbb
adc
daa
push
testl
fldcw
sub
cmc
sbb
sbb
mov
jle
dec
insb
pop
adc
cmp
jne
outsl
jecxz
mov
cltd
fnstenv
lea
mov
addr16
sub
in
pop
cmp
mov
out
cmpb
test
adc
inc
int
loopne
xchg
adc
js
adc
push
cmp
inc
push
add
mov
shll
inc
jge
adc
sbb
and
and
cmp
jo
add
inc
and
adc
js
inc
push
hlt
idivl
xorl
int
into
flds
xchg
outsb
stos
repz
cmpsl
rclb
jne
pop
add
test
das
pop
inc
loopne
push
bound
mov
pop
daa
pushf
test
or
pop
andl
mov
loopne
push
or
xor
xchg
inc
inc
test
clc
sub
xchg
testl
sub
mov
call
push
cmp
ret
dec
push
sbb
mov
mov
mov
inc
test
pop
aam
cli
push
inc
mull
enter
add
push
mov
cmp
cmp
push
js
pop
or
xor
add
jbe
rcr
inc
insl
gs
pusha
pop
push
dec
push
jb
jnp
cltd
pop
push
cli
testl
aaa
adc
inc
decb
lcall
incl
ffreep
push
mov
jne
and
stos
sub
sub
add
and
push
sbb
xchg
sti
and
popa
mov
pop
push
xor
mov
inc
test
pop
mov
cmp
and
xor
shrb
push
xor
sub
sub
test
mov
cld
shll
les
pop
push
dec
call
or
cwtl
push
add
mov
and
push
sub
icebp
jle
add
int3
stos
cld
cmc
xbegin
fs
inc
cli
rcrl
push
adc
mov
inc
dec
mov
ficomps
aas
cld
cld
jmp
repnz
lock
mov
mov
rolb
adc
add
rcl
test
adc
mov
fisubs
adc
testl
cmp
xor
sub
xchg
lods
add
sbb
push
push
jmp
mov
xor
in
jg
jo
pusha
push
mov
pop
xchg
pop
pop
fs
mov
sbb
or
xor
cmpsb
movsl
mov
jne
test
dec
dec
mov
or
sub
repz
mov
jge
out
std
subb
test
inc
rolb
inc
inc
inc
mov
xchg
jl
adc
iret
or
jo
aam
jnp
repz
inc
push
dec
add
and
or
sarb
jmp
adc
jmp
jnp
into
and
pop
mov
or
jno
lods
test
sbb
jmp
jae
dec
cmp
or
sar
add
add
cli
sarb
popf
mov
push
sub
and
mov
je
add
sbb
mov
cmc
jp
xor
jb
idivl
xchg
call
out
inc
xor
and
movzwl
in
push
or
ret
or
ja
adc
pop
fs
push
orl
add
out
enterw
add
sub
push
inc
inc
jle
cmp
in
or
fisubrs
push
stos
xchg
push
xchg
imul
jl
and
mov
mov
mov
sub
push
orl
xor
or
outsl
adc
and
cmp
dec
sarb
jp
inc
dec
shll
adc
mov
sbb
lods
jle
pop
sub
and
pop
jo
test
or
cltd
sbb
call
jl
cmp
inc
sub
aas
and
orb
inc
dec
shlb
mov
or
xchg
xor
sbbl
fisttpl
call
inc
or
jmp
je
inc
arpl
xchg
adc
test
testb
mov
scas
and
test
push
sbb
dec
and
aam
xchg
test
dec
or
lea
outsb
call
lods
pop
fstl
inc
pushf
mov
aad
xchg
add
fbstp
adc
xchg
push
inc
je
popa
add
xchg
cltd
lret
push
dec
outsb
in
lods
cwtl
stos
in
data16
loopne
loopne
pop
mov
and
add
and
jnp
jge
jge
push
sub
add
xor
imul
lcall
or
imull
cmp
xchg
gs
lods
inc
mov
fwait
jg
cmpsl
lea
push
or
adc
mov
jns
movsb
adc
dec
push
jnp
push
cli
dec
push
aam
push
xor
mov
push
add
enter
cwtl
movsl
mov
dec
sbb
mov
jl
dec
pop
xor
movsl
jae
insl
xchg
out
negb
inc
xchg
cli
sbb
cmp
lea
dec
fdivr
mov
inc
dec
insl
pop
push
jae
mov
jno
push
adc
stos
testl
push
mov
das
adc
xor
sbb
sbb
cmp
clc
cmpb
enter
incb
jne
sbb
lea
or
dec
lea
or
xchg
mov
loop
mov
push
icebp
inc
cmp
fucomip
mov
inc
xor
add
push
lods
insb
int3
mov
adc
loopne
adc
roll
dec
pop
jmp
inc
mov
adc
mov
loop
popf
inc
fs
lea
sbb
pusha
ret
or
pop
add
int
insb
xlat
imul
mov
dec
xlat
leave
add
repnz
in
dec
repz
sub
rcrl
rcll
popf
sub
mov
outsl
pop
popl
in
inc
pop
ret
out
xchg
sub
int3
sbb
outsl
jmp
push
shl
fadd
aad
fdivrs
mov
xor
mov
test
mov
push
scas
andl
inc
arpl
mov
mov
ss
sub
pop
dec
les
loope
adc
and
push
sbb
test
inc
push
cmpsl
fmuls
cmp
pop
dec
outsl
je
out
test
mov
sub
mov
in
xchg
mov
cmpl
mov
mov
mov
sbb
pop
inc
adc
int3
ret
pop
mov
mov
adcl
mov
push
or
rol
cmp
pop
cwtl
cs
lds
mov
jbe
cwtl
pop
cld
je
aam
iret
push
orb
sbb
mov
add
add
adc
fidivs
xor
daa
mov
mov
jmp
or
popa
sub
dec
popa
aas
mov
pop
pop
test
incb
dec
add
xlat
mov
fcomp
int
cmp
push
arpl
faddl
cmp
das
add
adc
bound
add
push
divl
mov
jmp
cmpsb
push
mov
pop
mov
xor
add
inc
loop
cltd
sub
pop
hlt
inc
or
data16
pop
xchg
cmpl
or
xor
inc
or
addr16
push
test
clc
inc
loopne
xchg
push
add
push
inc
push
sub
frstor
std
push
cmp
fidivl
add
test
les
dec
jnp
mov
inc
push
mov
mov
xor
mov
and
sbb
mov
sbb
hlt
push
or
movb
cs
pop
in
in
icebp
les
out
inc
or
gs
popf
inc
push
pop
fwait
mov
push
shll
dec
es
push
ljmp
adc
sub
xchg
daa
insl
cwtl
pusha
adcb
push
or
test
pop
xor
adc
test
xor
and
sbb
xlat
push
inc
dec
pop
sbb
mov
scas
fsub
pop
pushf
mov
mov
push
repz
or
push
insl
bound
ret
scas
icebp
inc
or
jp
sbb
daa
push
cmp
push
pop
adc
je
push
pop
insl
test
sub
rorb
or
addr16
or
or
or
sahf
push
idivb
dec
jbe
jmp
xorl
sub
jno
inc
add
hlt
fnsave
inc
dec
add
mov
adc
mov
mov
lods
add
sbb
pushl
inc
dec
jne
jae
push
xor
mov
jle
stos
jmp
mov
jmp
dec
loopne
inc
mov
sbb
sbb
mov
mov
ss
cmp
xor
add
cmpsb
out
cmp
mov
test
outsb
insb
js
push
rcll
into
jle
jg
pop
jb,pn
add
jmp
mov
push
sub
int3
decb
dec
lret
xor
gs
imul
inc
cwtl
xchg
mov
cmpb
rcrl
add
jae
pop
xor
scas
xor
mov
lods
shll
xchg
clc
or
pop
dec
jne
imull
inc
jl
inc
or
xor
roll
lcall
sbb
xor
add
xor
pop
xchg
pop
mov
and
pushf
es
mov
inc
jmp
or
lock
xchg
addb
fcompl
xor
inc
fcmovbe
test
loopne
mov
push
ds
cld
test
or
inc
je
cmp
fnsave
dec
je
daa
insl
xor
dec
mov
and
enter
add
ds
dec
loopne
inc
xor
sub
jmp
in
sub
loopne
sbb
push
and
xor
push
jecxz
add
popa
mov
scas
sub
cltd
cwtl
movl
mov
jmp
sbb
push
sbb
add
mov
inc
pop
fistl
push
add
push
xchg
aad
and
sbb
xor
jno
pandn
mov
inc
pop
test
lea
push
sub
inc
cmp
js
addb
rolb
ss
inc
dec
cmovnp
mov
push
fdivrl
mov
lds
cs
les
cmp
pop
sub
in
adc
jge
xchg
std
inc
mov
push
pop
lahf
nop
mov
or
mov
mov
movsb
pusha
orb
pushf
clc
add
cmpsl
and
popa
in
mov
xor
mov
nop
or
mov
mov
push
ud2
das
mov
push
inc
inc
addl
push
push
cmp
xor
dec
out
fmulp
xor
adc
xchg
pop
jns
mov
rcrb
inc
gs
cltd
inc
decl
add
dec
sbb
les
pop
jg
and
nop
roll
outsb
xchg
push
push
push
mov
jmp
ret
sub
in
jmp
inc
fsubrs
leave
test
les
push
mov
inc
test
jne
inc
add
rclb
adc
mov
pop
sbb
sbb
lods
loopne
fistl
pop
roll
adc
loopne
dec
pop
cmp
sbb
scas
xchg
cmp
jno
and
xor
repz
inc
adcl
sahf
out
jne
push
lds
mov
cmpsl
xchg
jmp
sysret
sub
jecxz
nop
sarl
je
mov
inc
sub
or
lahf
lods
rclb
mov
aam
sub
mov
sub
rcrb
xchg
pushf
push
push
cmp
xchg
je
push
push
xchg
ret
and
jno
outsb
movsb
aam
ljmp
add
xor
mov
das
adc
or
aaa
inc
add
sub
aas
mov
push
cmpsl
adc
xchg
xchg
add
outsb
dec
cld
outsl
test
adc
roll
loop
test
stos
es
insl
ss
aas
mov
inc
aam
or
ja
mov
adc
and
pop
mov
mov
and
pop
sub
nop
daa
addr16
cmpb
dec
movsb
or
sbb
dec
sub
dec
adc
xor
sbb
xchg
and
mov
pop
loope
movsl
shr
push
mov
push
push
shlb
repz
fidivl
movsl
xor
loope
je
add
pop
and
adc
nop
mov
adc
andnps
sar
stos
and
cwtl
hlt
insb
test
sbb
or
mov
adc
adc
adc
adc
in
xchg
sbb
adc
xor
push
inc
ljmp
adcb
sbb
shlb
or
movsl
xchg
out
add
in
adc
add
sbb
add
dec
inc
adc
push
adc
push
orl
sbb
sub
xchg
imul
or
inc
adc
and
inc
lea
add
repz
test
cmp
xor
xchg
jbe
cmp
adc
cs
mov
cmp
inc
mov
or
mov
dec
sbb
rolb
adc
nop
cmpsb
mov
js
inc
jnp
add
pop
je
movswl
pop
or
cld
ja
jmp
cmpw
ss
orl
sub
cmpsb
xchg
or
mov
hlt
mov
xor
push
xor
jo
inc
fs
scas
daa
jl
mov
sbb
xchg
xor
daa
add
movsl
mov
inc
push
mov
jo
leave
cmp
dec
inc
subb
fcmovbe
adc
cmp
jae
je
lods
jns
popa
fsubs
cmp
test
dec
ret
cmp
rcrl
adc
dec
popf
xlat
push
xchg
insb
jmp
adc
inc
cmp
daa
cltd
mov
mov
clc
push
sbb
or
sti
sbb
loopne
adcl
repz
test
and
or
add
sbbb
xor
mov
push
fcompl
xor
push
mov
pop
repnz
inc
rcrb
push
inc
ret
sbb
xchg
rolb
sub
mov
and
bound
inc
jne
cmp
or
dec
mov
sbb
movsl
pop
jge
lcall
cs
mov
inc
shll
add
push
out
xlat
cs
js
adc
mov
hlt
pop
ds
ret
xchg
cmp
sbb
clc
push
mov
repnz
iret
push
hlt
jmp
cmpsb
mov
push
sarb
xor
fisttpl
fnsave
int
jne
js
add
pop
sub
hlt
mov
stos
push
ja
mov
notb
xchg
aaa
hlt
add
shlb
jb
clc
mov
icebp
addr16
loope
push
aam
imul
lods
add
rorb
adc
pushf
lret
subl
aaa
out
adc
sbb
mov
call
push
dec
std
jnp
dec
das
out
test
mov
nop
call
adc
jg
mov
stc
nop
call
push
jo
inc
xchg
mov
mov
or
xor
sbb
fdivl
inc
andl
add
ja
xor
in
je
mov
jne
xorb
pusha
mov
clc
pop
or
sub
or
mov
dec
fsts
shl
leave
sbb
aad
jno
adc
mov
dec
and
call
and
enter
and
inc
sbb
imul
fldt
adc
xchg
mov
lea
mov
push
xor
mov
add
push
pop
push
fmull
cmp
adc
mov
inc
dec
popa
inc
ljmp
mov
add
sub
pop
cmc
push
into
enter
das
imul
lea
add
add
test
xchg
addb
inc
sub
test
inc
jecxz
or
imul
repz
pop
inc
pop
inc
xchg
loope
ret
jo
enter
mov
mov
mov
and
xchg
fcoml
pop
lods
and
and
push
dec
inc
sbb
rcr
cmp
push
flds
adc
inc
cld
push
inc
add
loopne
lcall
push
mov
fidivrs
xchg
pop
push
and
mov
cmpsl
adc
fcompl
inc
mov
jb
xchg
or
ljmp
and
jno
filds
xchg
or
popa
lods
fs
jb
loop
loopne
cmp
mov
jns
or
jle
jge
test
andl
xor
push
jo
inc
outsl
mov
inc
ret
addl
jmp
sbbb
xorl
mov
je
bound
je
fwait
loopne,pn
dec
pop
dec
adc
mov
mov
and
pop
lret
jp
std
dec
mov
aam
push
sbb
xor
and
and
push
and
dec
and
mov
in
pop
sub
and
sub
mov
mov
iret
add
adc
sub
pop
inc
jo
insl
or
outsl
add
and
pop
add
push
lock
jne
pusha
or
cli
stos
push
lcall
jae
pop
inc
adc
pushw
or
mov
push
ja
sub
and
daa
mov
adc
daa
xor
xchg
rcrb
mov
jno
shrb
insb
add
inc
add
mov
and
pushl
sbb
and
sbb
jne
adc
pop
mov
jne
push
or
inc
pushl
popf
movsl
lret
add
add
add
add
les
shlb
rolb
out
mov
jle
movsb
push
and
insl
push
fsub
sub
es
mov
jno
xor
inc
adc
sbb
pop
mov
and
cmp
cmp
and
movl
inc
add
rorl
xor
out
adc
sub
movsb
mov
mov
pusha
inc
faddp
xorl
aaa
cmp
and
mov
fdivs
push
notl
or
sbb
pop
sbb
inc
mov
addr16
into
xor
mov
gs
in
add
adc
dec
lds
orl
das
dec
les
ret
sbb
xchg
mov
or
daa
or
sub
mov
mov
mov
ret
mov
outsl
push
jmp
test
push
xor
jns
cmpb
sub
jg
and
insl
pop
dec
mov
cmpl
lret
jne
or
hlt
scas
mov
and
jmp
shlb
and
mov
xorl
add
mov
add
add
and
jo
jg
test
rol
lret
xlat
add
sub
or
movsl
movb
or
sti
jne
adc
jg
in
mov
adc
xlat
insb
adc
ljmp
inc
popa
stos
ljmp
adc
hlt
xor
cltd
add
inc
adc
add
inc
xchg
jo
jmp
mov
stos
dec
sbb
mov
add
push
rcrl
push
xchg
out
lods
test
rolb
enter
sub
and
adc
inc
outsl
dec
mov
std
mov
xchg
idiv
xor
cmp
jg
je
cmp
or
jo
adc
imull
add
adc
or
push
mov
inc
mov
add
dec
out
mov
push
mov
jbe
xchg
daa
clc
xor
fists
ficoms
gs
or
js
dec
pop
inc
les
movsl
push
cltd
mov
sbb
loopne
jb
jmp
add
jo
mov
adc
jb
fdivrs
test
push
lods
loop
and
add
out
mov
xor
push
mov
and
lahf
mov
push
cld
and
and
xchg
out
mov
xchg
repz
or
sbb
adc
xor
adc
jecxz
dec
test
adc
fadd
push
loope
data16
cltd
inc
loope
add
sub
insl
sbb
les
adc
jecxz
inc
jmp
pop
sub
movsl
cltd
negl
call
jl
and
push
test
data16
les
addl
test
outsl
sub
cmp
mov
inc
push
addb
push
push
popf
test
jp
cli
jns
dec
and
jb
sbb
cmp
xor
fcoms
push
jb
loope
xor
hlt
sbb
add
xchg
dec
add
mov
out
nop
push
loop
adc
jnp
lcall
add
add
cmpl
xchg
daa
mov
dec
scas
ljmp
sub
dec
pop
cmp
div
push
movsb
icebp
aas
pusha
push
inc
pop
ret
and
clc
xor
sub
aam
dec
sarb
sbb
rcl
aam
push
sbb
inc
mov
dec
cmp
and
mov
push
inc
sub
lock
add
jg
les
push
andb
adc
or
sbb
test
test
shll
daa
mov
loope
cmp
rcl
ficompl
adc
jle
and
mov
and
lahf
pop
mov
test
call
dec
jo
imul
mov
lret
add
mov
add
ljmp
add
adc
mov
push
push
push
ret
mov
adc
xor
sahf
or
sbb
inc
jbe
pop
push
or
and
mov
xor
bound
jp
xchg
jmp
push
pop
or
scas
pop
pop
scas
pushf
push
pop
adc
orl
add
pop
and
push
mov
movsb
jae
lcall
ljmp
sbb
push
ljmp
fimull
pop
and
pop
or
sbb
jp
dec
adcb
pusha
outsl
sbb
sbb
add
jne
cmpsb
es
xor
or
xor
daa
fmuls
add
mov
sbb
test
ja
rorl
pop
fisttpl
imul
sub
dec
or
fstps
dec
lret
push
and
push
adc
data16
scas
clc
js
cs
sub
pop
mov
xchg
xchg
pop
cltd
and
inc
mov
cmp
jle
testb
and
xchg
or
add
jle
adc
jnp
mov
or
es
scas
or
lahf
dec
call
add
lds
mov
push
lsl
inc
lahf
mov
dec
xor
cmp
mov
sub
add
pop
cmpb
insb
lods
adc
jl
cmp
add
lea
testb
and
js
jl
adc
cmp
xchg
dec
push
cs
mov
cmp
xlat
sub
or
ret
shll
and
into
cmp
je
mov
cmp
cmpsb
aad
mov
push
pop
lret
sbb
ret
xchg
pop
shlb
xor
pop
jns
iret
xchg
cmpsl
das
mov
pop
inc
test
add
ret
xor
mov
adc
mov
or
mov
ret
je
lock
push
test
roll
add
push
xor
push
imul
adc
adc
and
lcall
adc
xchg
mov
sub
dec
or
add
inc
shrl
mov
test
push
ja
inc
xor
jo
insb
push
mov
xchg
jmp
xchg
or
inc
push
nop
mov
or
xchg
inc
in
push
add
stos
adc
cmpsb
pop
mov
adc
imul
sbb
add
clc
add
pop
lds
mov
mov
adc
and
inc
xor
push
inc
xchg
push
sbb
sbb
call
and
mov
cmpb
adc
xchg
add
add
xchg
jge
xchg
adc
pop
add
je
dec
ss
mov
or
in
sub
fldenv
add
xor
pop
xchg
gs
or
xlat
addr16
and
rcrb
push
cli
dec
enter
xchg
rol
stos
or
inc
add
jl
loope
clc
int3
or
fidivrl
or
movsl
pop
je
addb
pop
inc
ficoml
cmp
adc
mov
adc
icebp
pop
or
adc
or
je
jne
sbb
or
movsl
or
push
add
imul
sub
xlat
mov
push
adc
aad
xchg
lcall
shrl
icebp
mull
cmp
dec
mov
inc
inc
nop
stos
sub
cli
fwait
pop
mov
dec
scas
sub
sub
push
add
jo
jmpw
cmp
sub
push
clc
clc
lock
xchg
dec
jae
in
or
call
add
outsb
or
std
rorb
fcoml
int3
or
les
inc
jl
jmp
repnz
cmp
add
mov
dec
mov
xchg
fbstp
xor
daa
test
ret
sbbb
push
adc
aam
and
jmp
movb
or
cmp
add
or
lret
jne
test
cmp
bnd
inc
lea
stos
je
pushf
or
mov
cmpsb
sub
cmpsl
js
jmp
pop
add
or
rcll
mov
xlat
rolb
ljmp
mov
mov
fcomp
cs
mov
push
repnz
push
dec
or
xchg
cmpsb
sub
sub
imul
push
mov
loop
popf
mov
jmp
inc
and
mov
sarb
dec
dec
or
lcall
jl
outsl
das
lcall
sahf
adc
adc
sti
push
and
jle
adc
sbb
mov
mov
add
add
dec
sub
dec
jo
mov
adc
out
jbe
adc
fmul
adc
ja
or
or
and
into
adc
into
inc
dec
add
mov
repnz
mov
aad
addl
in
daa
leave
mov
dec
faddl
jle
sbb
push
fsubl
in
inc
lcall
or
imul
fdivrs
enter
je
sbb
es
and
or
cmpsb
inc
jmp
jg
sgdtl
in
add
ss
push
fcomps
das
mov
push
into
add
iret
insb
cld
and
add
inc
das
pop
xchg
cmc
aad
add
sarb
pop
iret
mov
fcomps
dec
push
mov
por
inc
inc
xchg
jge
dec
pop
xchg
add
out
repz
mov
jp
stos
push
pop
add
xchg
mov
imul
mov
popf
push
out
cltd
insb
sbb
push
push
imul
cmp
mov
cmp
inc
adc
xchg
adcl
mov
xchg
fsubl
enter
cmpsl
sbb
lock
fstl
add
adc
mov
dec
sbb
xlat
push
daa
pusha
ja
jmp
mov
inc
sub
cmp
movb
push
ret
ret
je
int
mov
inc
jle
mov
push
push
or
or
mov
adc
add
subl
xchg
test
fmull
shlb
int3
hlt
add
mov
inc
add
pop
sbb
and
pop
shlb
enter
push
inc
das
faddl
cmpb
jp
xor
arpl
add
and
jae
fs
divb
js
push
adc
ret
dec
pop
push
cltd
jne
sub
pop
or
xchg
pop
ret
rorl
cmp
lea
test
dec
fadds
int
adc
or
dec
movsl
sbb
das
loope
imul
pop
lcall
sbb
stos
sbb
hlt
mov
pop
jne
sahf
sbb
add
push
inc
push
insl
add
in
aas
sbbb
cmp
gs
mov
cwtl
add
sub
mov
pop
inc
ss
add
sbb
pushl
iret
add
test
inc
cs
adc
xchg
arpl
loopne
sub
xchg
push
adc
addr16
jo
xchg
orl
lods
push
and
movsl
mov
xor
arpl
sbb
fs
sbb
sbb
shl
fsubrs
arpl
push
mov
les
xchg
mov
aam
aad
je
shll
call
inc
push
inc
inc
sub
lock
inc
sbb
xchg
cvtps2pi
pop
push
or
add
nop
push
adc
dec
filds
and
pop
mov
adc
clc
adc
int3
xchg
data16
in
in
hlt
aaa
cmp
inc
xor
std
adc
mov
sub
jae
and
add
dec
aaa
sbb
shlb
jp
add
cmp
pop
sub
adc
cmp
aam
add
add
and
rolb
push
mov
sbb
rorb
pop
or
and
push
mov
sub
dec
int3
dec
xorb
sbb
stos
xchg
add
into
clc
adc
mov
inc
js
push
scas
cltd
mov
sbb
add
adc
inc
dec
call
lcall
orb
outsb
adcb
adc
adcl
lods
nop
pop
js
inc
cmp
orl
cs
xor
aam
aam
inc
or
int3
es
outsl
lea
inc
adc
pop
loopne
cmp
inc
in
stc
inc
mov
or
in
ret
out
addb
sub
or
addb
sbb
adc
adc
ljmp
adc
insl
mov
and
jae
inc
popa
mov
shrl
add
lret
sti
pop
jbe
mov
les
mov
jp
push
adc
pop
sub
adc
and
cld
jb
mov
push
or
subl
sbb
out
xchg
xor
inc
add
cmpb
and
sbb
int
jle
sbb
xor
in
mov
adc
mov
or
push
inc
roll
dec
xchg
xor
pop
cmp
mov
flds
xor
pmulhuw
push
add
add
lret
push
cmc
pop
inc
pop
addb
fisttpll
cmc
add
add
inc
cmp
or
mov
adc
hlt
rcrb
jle
push
dec
call
push
dec
call
lcall
sub
cmp
push
jge
push
fwait
jo
cmp
cmp
js
imul
pop
pop
jecxz
push
lret
inc
jge
enter
sbb
push
sbb
int3
add
jg
and
pop
sbb
add
sbb
sub
fs
inc
xchg
movsl
push
push
jle
std
adcl
or
mov
out
iret
fisubrs
xor
xor
cmp
orl
adc
inc
bound
stos
arpl
lock
or
cmpsb
adc
testl
inc
popa
loopne
stos
iret
gs
ds
or
scas
add
sub
addr16
shlb
ds
dec
dec
mov
inc
cltd
sbbb
push
sub
js
out
jmp
cmp
or
les
add
es
ja
ret
sub
add
adc
adc
movsl
add
and
dec
testl
call
mov
dec
test
je
sub
add
int
push
in
cld
mov
hlt
xchg
jnp
jmp
sub
push
test
mov
push
rorb
test
xlat
dec
rolb
xor
mov
mov
dec
and
push
loopne
add
cmpsl
rolb
call
sbb
cmp
sub
imul
mov
inc
clc
iret
xchg
int3
mov
mov
mov
push
or
cmp
sbb
jg
inc
addl
addb
ss
cld
ret
scas
cmp
movsl
mov
cmp
jnp
dec
or
xor
sbb
dec
mov
push
xchg
mov
aad
call
pop
ret
mov
ret
cmp
je
pop
dec
xchg
mov
pop
test
roll
ret
lret
mov
subl
pop
test
add
mov
outsl
or
popa
mov
movsb
adc
aaa
pop
and
mov
push
fprem1
or
xorl
outsl
iret
aam
dec
enter
aam
add
lahf
das
dec
pop
or
shr
mov
sarl
xor
lods
subb
repz
andb
jg
test
or
pushf
dec
stc
xor
mov
mov
dec
imul
add
pop
clc
inc
mov
outsl
push
test
ja
add
stc
daa
subb
aaa
sarl
int
mov
ss
cmp
aaa
sarb
rcrb
les
dec
notl
bound
lret
enter
sbb
decb
xchg
pop
xor
fsubl
xchg
add
push
and
jl
movsb
mov
fwait
dec
les
jle
cmpsl
out
pop
cmpb
push
sbb
inc
fs
push
test
and
add
addb
or
daa
lret
or
or
xor
ficoml
inc
xchg
mov
lea
mov
aas
pusha
push
push
add
fsubs
lock
mov
pop
cmpsl
inc
and
push
push
cld
jbe
dec
sub
mov
pop
dec
sub
cmp
push
lods
jle
mov
push
idivb
fs
mov
push
add
imul
in
push
jmp
fldl
aaa
test
adc
dec
or
sub
pop
pop
adc
sub
ja
imul
adc
dec
hlt
sbb
adc
xor
mov
fsubr
pop
flds
movsl
push
dec
mov
pop
add
into
or
dec
jne
pop
jnp
mov
popa
inc
cmpb
pop
lock
and
sbb
mov
push
addr16
adc
mov
shlb
repz
pop
add
out
sub
pushf
push
push
add
push
adc
sub
imul
mov
setp
mov
lods
clc
sub
cwtl
xor
sti
ljmp
stos
push
cmp
add
inc
add
lds
iret
dec
pop
sbb
daa
or
dec
mov
jnp
xor
inc
adc
mov
adc
and
imul
aad
mov
fistpl
mov
loop
mov
xlat
adc
je
aaa
xchg
xchg
mov
jp
add
jae
outsl
jnp
loop
or
popa
cmp
push
leave
mov
inc
lcall
test
shl
dec
pop
pushf
das
xchg
jp
in
xchg
cmp
cmp
dec
mov
ds
mov
mov
or
mov
adc
push
repz
mov
inc
cmp
xchg
push
bound
mov
xlat
xlat
pop
xlat
hlt
and
mov
push
cmp
cwtl
sub
pop
or
push
cmp
lret
movsl
xor
inc
loopne
push
jbe
lahf
fs
push
add
mov
dec
push
add
dec
popf
sbb
jp
push
test
mov
mov
pop
cmp
sbb
lock
add
xor
mov
pop
clc
or
sbb
pop
sti
loopne
cmp
imul
stos
sub
mov
and
test
daa
add
dec
adc
nop
pop
enter
jl
je
insl
loop
in
clc
loope
fs
cwtl
or
sbb
jo
mov
push
mov
das
imul
cmc
and
push
mov
scas
fldenv
pusha
pop
call
push
and
inc
and
push
stos
js
int3
and
inc
and
jne
inc
pop
push
sub
mov
cld
and
shlb
jae
sub
add
insl
dec
sarl
fdivl
pop
imul
out
sbb
std
dec
fldt
ja
inc
es
std
les
jg
push
push
outsb
nop
stc
add
aad
loope
mov
mov
movsl
in
pop
aaa
pop
sbb
sbb
movsb
dec
or
addb
pop
add
and
xor
and
push
push
mov
test
xchg
or
in
xor
lret
call
cmp
mov
add
rcrl
push
shlb
cmp
xor
stos
test
push
cld
add
pusha
out
adc
pop
lahf
mov
and
in
fs
sbb
push
add
addr16
sub
mov
dec
sti
dec
cmp
xor
test
cmp
sub
sti
aam
sbb
std
mov
push
xor
push
xor
ficoml
mov
cmpsl
xchg
gs
jg
loope
fisubrl
add
add
sub
ret
addl
incl
push
dec
insb
js
add
or
outsb
fs
add
loopne
test
daa
insb
pop
push
adc
sbb
sbb
and
and
mov
aaa
or
push
mov
outsl
add
sbb
ficoml
fcomps
fs
push
or
dec
mov
mov
addb
lods
test
mov
pusha
lods
pop
pop
xchg
and
mov
mov
or
or
mov
pop
mov
out
int
lahf
jmp
jg
in
xchg
add
inc
xchg
xlat
mov
cmp
rclb
or
dec
sbb
mov
lods
addl
fadds
jae
in
cwtl
cmp
mov
xor
add
es
mov
push
ja
jmp
pop
inc
adc
add
call
rolb
fstl
pop
ret
rclb
and
xlat
aas
or
and
sub
xor
ret
dec
in
and
lock
and
pop
adc
dec
pop
aad
lret
xor
inc
adc
push
outsl
clc
push
pop
add
test
mov
imul
pop
sbb
fistps
data16
and
fisubrl
sub
cli
pushf
dec
fimuls
filds
aas
dec
jne
mov
xor
hlt
pop
cmp
jmp
lock
or
test
mov
push
mov
test
inc
push
add
xchg
popf
jo
and
mov
jmp
add
push
into
push
scas
dec
add
cmp
add
sbb
pusha
push
ds
xor
shll
sbb
notl
pop
inc
stos
mov
push
or
fwait
mov
and
bound
test
jp
sbb
fwait
inc
das
outsl
dec
stos
jmp
push
movl
dec
loopne
cmp
cmp
pop
or
testl
and
cwtl
push
lock
push
mov
cmp
dec
dec
jmp
xor
sbb
jbe
test
inc
insl
pop
add
inc
dec
add
xchg
adcl
xchg
pop
fdivr
ja
push
lds
push
or
sbb
imul
or
or
or
xchg
js
or
and
cmc
rcrl
push
mov
add
shll
js
jmp
mov
daa
sbb
or
lds
cltd
inc
sub
xchg
cmp
daa
fldenv
or
bound
or
push
push
or
xor
loopne
mov
sub
pop
les
sbb
push
inc
mov
add
sub
xchg
add
dec
add
pop
loopne
fdivrl
push
and
sbb
loopne
pop
xchg
or
ret
inc
icebp
flds
jl
and
sub
jmp
add
movl
aad
testb
add
add
push
sbb
pop
add
jle
aaa
xlat
sbb
xchg
cmp
jns
push
sub
xlat
out
push
and
jg
add
sbb
xor
push
cmp
mov
add
aaa
mov
mov
push
and
testb
adc
mov
js
add
jge
sarl
lods
jns
jg
sti
loopne
fcompl
jg
pop
jg
pusha
jnp
jne
add
xor
adc
outsl
mov
add
jmp
cmc
pusha
lea
add
mov
push
sbb
dec
loopne
add
inc
mov
loope
fldl
pop
clc
imull
sbb
cmp
pop
add
xor
cmpsl
xor
pop
sub
add
fs
sbb
add
lods
cmpsb
lcall
or
xchg
lods
adc
adc
adc
pop
sbb
mov
pop
mov
add
mov
jge
jo
xchg
mov
dec
jp
cmp
mov
jo
and
push
and
sub
push
daa
or
pop
ret
jne
xchg
cmpsl
pusha
mov
mov
test
sub
popf
jp
orb
and
and
xlat
fdivrs
add
push
fs
mov
sbb
enter
or
icebp
inc
mov
icebp
rorl
jge
fiadds
sbb
pusha
js
les
xchg
test
and
inc
xlat
lock
jmp
addr16
sbb
add
inc
sbb
inc
clc
lock
sarl
shlb
push
adcb
in
or
add
mov
hlt
addl
adc
insb
imul
jg
jae
mov
push
mov
cmpsb
push
mov
scas
xchg
test
mov
adc
imull
fs
jo
inc
loopne
push
movsb
faddl
xor
in
or
fsubrp
fidivs
and
pop
cmp
sub
inc
lods
sbb
cmp
daa
in
mov
push
test
jle
in
fldl
fcomp
outsb
inc
cmp
mov
push
lea
pop
shl
pusha
pop
or
js
icebp
cmp
inc
sbbb
aas
lods
sub
add
js
movl
push
mov
mov
loope
xor
sbb
jbe
sub
dec
loopne
lahf
das
pop
popa
orb
mov
pop
push
insb
and
sbb
fiadds
bound
adcb
adc
dec
and
sub
daa
pop
jge
lock
push
push
or
inc
mov
call
pop
sbb
fmull
ljmp
sbb
fstl
inc
dec
cmpsl
loopne
je
push
jg
or
sub
inc
inc
pop
pusha
jae
mov
sbb
outsb
stos
hlt
add
cltd
in
imul
add
inc
or
push
stos
mov
push
mov
pusha
or
fdivrp
clc
and
cmp
push
inc
rorb
xor
inc
adc
jecxz
arpl
inc
adc
xor
push
pusha
pusha
stos
iret
ss
dec
ret
ret
cmp
jne
pushf
sub
pop
and
int
dec
add
sub
adc
inc
call
lock
pusha
sub
and
je
in
dec
lock
adc
cmpsb
das
push
scas
mov
push
rorb
arpl
xlat
add
dec
test
loopne
fs
pop
movsb
push
mov
cmp
pop
imul
js
cmp
dec
adc
and
arpl
add
push
enter
and
bound
cltd
pusha
add
dec
pop
nop
stos
jle
int
adc
scas
sbb
je
push
push
or
jp
sbb
or
adc
ficoms
fiaddl
pop
or
das
pop
lret
insb
jge
jmp
or
mov
dec
nop
test
jo
xchg
or
pop
inc
sbb
xchg
clc
sar
jns
adc
cmpsl
adcl
mov
or
es
push
outsb
dec
lcall
hlt
add
or
iret
cmp
icebp
jo
pop
push
addl
sub
mov
shll
mov
popf
or
pop
push
dec
push
adc
cmp
je
or
sbb
push
or
sbb
mov
ror
push
cmp
pop
fs
rolb
xchg
push
and
inc
popf
jecxz
push
xchg
out
and
push
dec
movsl
pop
mov
dec
mov
add
cmp
xchg
sbb
sbb
pop
sbb
pop
or
dec
fstpl
mov
hlt
xchg
iret
xor
hlt
lock
hlt
push
inc
xor
inc
xchg
clc
mov
mov
xchg
xchg
andb
insb
subl
or
clc
fsts
repz
mov
rolb
sbb
mov
imul
jnp
pop
jmp
mov
dec
and
sbb
inc
adc
mov
mov
mov
not
mov
mov
jecxz
and
testl
fidivrs
je
jmp
mov
cmpsb
cmp
cs
push
pop
or
mov
out
sbb
imul
orl
push
int3
sbb
jmp
pop
jb
and
sbb
sub
pop
call
sahf
popf
rcl
nop
dec
jo
roll
das
subl
push
push
inc
xchg
add
sbb
and
dec
adc
pop
int3
or
popf
mov
movsl
adc
ljmp
sbb
mov
fisttps
lock
jbe
sbb
push
adc
test
jle
lret
sbb
xor
fldl
std
xchg
inc
push
les
fcmovnu
xor
sub
dec
mov
push
pop
jecxz
or
in
add
inc
test
sub
call
into
cmp
fcoml
sub
jl
push
cmp
es
adcb
fwait
mov
add
or
adc
jns
gs
sbb
mov
xchg
push
push
adcb
stos
push
pop
cli
push
stos
popa
jp
jle
cmp
adc
incl
xchg
sbb
mov
mov
outsb
bound
and
xor
rcrl
popa
push
pop
insb
repnz
inc
sub
sub
sbb
lea
cmpsl
in
in
sbb
dec
pop
shlb
adc
xorb
pop
xor
add
adc
sub
ss
cmc
adc
pusha
inc
sub
cmp
ja
pop
fsts
xchg
xchg
faddl
hlt
in
test
adc
lahf
push
push
xchg
push
lret
lock
xor
in
insb
aaa
inc
sti
sub
call
jne
lea
inc
adc
loopne
push
adc
sbb
mov
daa
addr16
loop
jmp
dec
mov
sbb
mov
sub
jae
xchg
adc
adc
xor
dec
sub
adc
sub
fwait
or
cmpsl
aaa
lock
addb
jb
mov
adc
lds
inc
mov
pop
dec
arpl
dec
loope
jb
push
pop
or
or
adc
cmp
adc
icebp
cltd
add
push
mov
push
pusha
fs
fcoms
adc
call
roll
push
in
roll
push
push
mov
pushf
pop
lods
mov
xchg
and
adcb
bound
pusha
jb
jp
adc
add
loope
push
mov
pop
and
daa
push
arpl
and
and
push
fcomps
sub
xor
mov
sarb
and
pop
lods
mov
rcl
out
movsb
icebp
or
pusha
scas
rorl
mov
and
test
call
mov
xlat
xchg
pusha
inc
sub
push
push
lahf
xorl
mov
mov
inc
adc
add
ret
inc
mov
xchg
push
and
adc
leave
lret
xchg
sub
push
push
dec
aam
arpl
inc
mov
in
pop
cld
je
popa
xor
pop
inc
jae
sbb
mov
or
jmp
ret
sbb
cmp
sbb
adc
sbb
xchg
cmp
mov
pop
sub
jo
xor
mov
clc
mov
add
push
xchg
xor
push
inc
mov
pop
dec
jle
int3
es
push
or
rolb
mov
and
sahf
test
fnstsw
jle
jl
xor
dec
shll
lock
ss
ss
lods
mov
add
es
push
lahf
in
mov
rol
jg
mov
jecxz
jbe
add
std
sub
inc
and
movsb
pop
js
data16
imul
fisttpl
rclb
jno
pop
push
add
dec
cmp
xor
mov
shlb
mov
adc
jo
popf
aad
jno
lods
shll
pop
adc
push
inc
jo
dec
and
insb
jb
pop
dec
in
adc
jbe
add
fistl
pop
mov
pop
adc
sub
push
mov
pop
sub
cmp
cmp
pop
sahf
and
add
cltd
pop
inc
mov
mov
aaa
or
insl
adc
inc
jp
ficompl
flds
dec
rcrb
push
insl
push
mov
jno
pusha
add
lcall
lds
cli
lea
lret
and
lcall
inc
pop
dec
mov
aaa
mov
shl
push
inc
push
add
xor
lods
hlt
inc
cwtl
inc
adcb
jo
aad
push
inc
test
ds
mov
pop
fmuls
jo
pop
push
je
cltd
idivb
add
pop
cmp
jl
or
das
addr16
mov
sub
jg
jmp
xchg
xchg
or
add
dec
or
and
xchg
fidivrs
outsb
imul
and
and
xchg
mov
pop
sti
lock
sub
addb
mov
sub
cmp
adc
test
and
mov
cmpl
rcrb
dec
sub
out
jb
jns
pusha
outsb
pop
inc
ret
add
aas
xor
xchg
pop
xchg
in
push
dec
mov
push
dec
jae
pop
push
ret
mov
pop
adc
sbb
and
adc
push
inc
stos
jecxz
nop
push
icebp
nop
fwait
add
hlt
cmp
fcomp
xchg
sbb
adc
je
loopne
into
in
jne
dec
cmp
or
pop
adc
stos
add
or
xchg
adc
xchg
adc
push
pop
adc
sti
leave
adc
xorl
or
xor
sbb
adc
out
add
mov
shlb
outsb
sub
and
pop
lock
sbb
call
adcb
rcr
cwtl
adc
or
lods
and
and
inc
add
int
and
aas
sbb
imul
test
ja
adc
mov
push
cmp
das
addl
movb
push
xor
lret
inc
push
fwait
imul
enter
xchg
cmpl
cmc
xchg
or
jp
loopne
xchg
aas
imul
sub
adc
imul
jmp
xor
adc
adcl
mov
add
xor
inc
js
lea
cmp
or
dec
dec
loopne
jne
test
sbb
xor
lret
mov
push
jle
jbe
in
or
or
push
sub
push
daa
jg
adc
xchg
or
inc
or
gs
aam
outsl
add
xchg
mov
mov
icebp
insl
or
rsqrtps
shl
pusha
test
clc
push
push
test
jge
clc
inc
cmp
fsubrs
cmp
inc
mov
push
sub
jno
adc
or
ljmp
pop
rolb
std
pop
movsb
sub
orb
push
xchg
mov
movsb
inc
and
imul
pusha
pop
push
push
jo
cwtl
push
inc
cwtl
rcr
inc
dec
add
imul
jbe
or
and
push
popa
je
jnp
int3
or
sbb
nop
pusha
cs
sub
inc
lock
xchg
jmp
test
add
mov
add
test
push
fwait
lods
mov
xor
xchg
add
cwtl
sbb
in
mov
push
hlt
dec
cmp
into
push
add
jnp
aaa
outsl
mov
mov
mov
adc
and
or
and
adc
push
cs
sbb
push
mov
and
inc
sub
test
cltd
and
fcompl
pop
mov
dec
mov
fisttps
pop
dec
dec
push
pop
loopne
push
lret
dec
dec
adc
insl
bound
push
push
rorl
gs
leave
pop
push
gs
cwtl
or
inc
jbe
add
repnz
push
ljmp
insl
jo
adc
dec
inc
jnp
movsl
mov
inc
out
push
outsl
aas
dec
roll
dec
jae
mov
sbb
daa
pop
out
mov
cmp
mov
xor
xchg
sub
nop
fbld
mov
lock
lods
jl
cmp
mov
sbb
mov
and
mov
sub
es
ret
jle
jp
sbb
sbb
cmp
adc
and
sbb
push
loopne
ret
mov
ret
mov
and
adc
add
adcb
sub
inc
movsl
cmp
push
popa
addb
push
sub
dec
cmp
mov
dec
fucomp
push
sbb
aaa
mov
ficoml
outsl
sub
or
pop
push
or
xor
push
cmp
dec
sbb
jmp
sbb
add
add
data16
dec
mov
int3
xor
push
push
imul
repnz
inc
sti
test
sbb
sarb
imul
mov
jb
lea
lock
enter
fdiv
cmp
imul
int3
ja
jno
rclb
roll
addb
iret
fildl
and
mov
sub
adc
aas
lock
lds
nop
pushf
sbb
sbb
clts
add
dec
jg
or
push
xor
loope
test
repz
les
out
pop
sbb
inc
or
add
xchg
jbe
mov
ljmp
and
inc
outsb
pop
cwtl
dec
cmpsl
pop
xchg
iret
jg
lahf
or
jne
test
or
outsb
call
dec
stc
pushf
mov
xorb
cmpsb
adc
add
add
cmpsl
iret
mov
push
je
jge
inc
setae
mov
jge
inc
mov
xchg
dec
pop
add
pop
dec
enter
pop
sbb
xorb
add
push
int3
pusha
adc
stc
fcmovbe
ja
push
clc
pusha
inc
add
lock
and
xchg
inc
ficoml
push
je
adc
mov
out
sti
ss
jne
sahf
xchg
jl
mov
inc
pop
inc
jb
jmp
filds
rorb
roll
sbb
xlat
addb
sbb
js
or
dec
movsl
xor
imul
orb
das
and
cmpb
xchg
add
mov
inc
cwtl
add
jbe
repz
push
dec
and
mov
imul
cmpsl
add
lea
and
xchg
test
shll
cs
psubb
xchg
add
and
or
subb
pop
sub
and
cmp
andl
hlt
push
test
test
and
add
inc
call
addl
in
add
jl
in
aam
out
outsb
inc
xchg
inc
push
insb
or
and
imul
dec
in
or
andl
adc
enter
and
jo
and
adc
jp
nop
push
movsb
mov
loope
testb
out
inc
pop
pop
pusha
movsb
out
sahf
push
add
outsl
add
push
test
push
sbb
pop
fs
pop
sbb
mov
sub
pop
aad
pop
pop
dec
xor
mov
ds
aaa
pusha
fldl
sub
add
rcrb
add
sbb
cld
push
sbbl
ss
push
xchg
or
test
add
jo
xor
xor
inc
add
nop
idivl
push
lea
inc
or
loopne
mov
push
jmp
jbe
ret
rcr
movsl
mov
es
rorl
xchg
sub
pop
or
clc
sub
cmp
fucom
ret
xor
add
sbb
sti
loope
and
in
adc
ss
pop
insb
int
scas
lock
xchg
add
int3
xor
leave
daa
and
scas
add
xor
add
ds
roll
cwtl
mov
add
adc
popf
out
xor
xorb
add
jmp
bound
adcb
lock
lea
sbb
push
pop
dec
imul
cmp
lods
cwtl
shl
pop
or
test
xor
push
aad
pop
mov
int3
pop
nop
sub
out
rorl
cmpsl
cmp
push
cwtl
xchg
mov
adc
and
add
andb
lea
cmp
and
pop
push
je
xor
addb
arpl
inc
movb
mov
and
pop
lahf
or
fsubr
scas
inc
rcl
jo
loope
ja
cmc
pop
xor
xchg
stos
inc
scas
mov
or
inc
sub
imul
cwtl
and
jo
push
xchg
adc
pop
incl
lods
sti
and
cld
xor
pop
lock
lcall
stc
push
sub
ret
das
pop
add
stos
test
sbb
push
popf
xchg
enter
xchg
sub
ds
push
push
jmp
xorb
lret
or
xchg
inc
xchg
mov
nop
mov
ss
push
xchg
lea
lds
adc
daa
adc
pop
and
xchg
adc
cmp
mov
push
add
out
jb
mov
adc
dec
pushf
movsb
mov
lea
rorl
sub
xchg
ja
adc
adc
cmpl
lea
in
aas
fs
push
pop
mov
mov
je
data16
nop
xor
jnp
inc
add
cmpsb
jge
xchg
add
inc
dec
or
imul
mov
adcl
xchg
xchg
outsb
sti
daa
push
adc
call
dec
cmp
fmull
fbstp
sub
jne
mov
pop
sbb
out
and
or
add
mov
ret
js
xor
pop
imul
fmuls
adc
mov
loopne
dec
xchg
adc
loope
mov
test
mov
jle
out
push
jnp
stos
or
std
add
inc
lock
sub
js
cld
je
lds
cs
imul
sbb
jne
cmp
push
pop
inc
ljmp
pop
cmp
mov
lods
outsl
jmp
sub
dec
sub
add
enter
mov
sbb
sti
out
or
mov
loope
shlb
insl
orb
xor
inc
ja
leave
pusha
call
sub
scas
jb
pop
cmp
je
test
xchg
andb
jg
add
adc
or
enter
nop
orl
iret
je
jne
add
rcrl
mov
mov
adc
enter
or
jo
fstpt
mov
mov
popf
adc
sbb
mov
pop
mov
shl
repz
rorl
pop
sbbl
ret
jne
adc
ret
lea
aam
sar
sbb
sbbb
test
inc
out
pusha
cmp
movsb
lock
lea
mov
sbb
pop
mov
dec
inc
in
inc
cmpb
cmpb
jg
sbb
or
xor
add
imul
or
inc
cmp
insb
loopne
pop
iret
add
pop
adcl
xchg
movsb
scas
aaa
jmp
movl
mov
fs
xchg
xor
mov
xchg
pop
test
add
cmp
addb
es
add
dec
sbb
cmpsb
mov
add
and
xlat
xchg
pushf
fstl
add
add
xor
mov
adc
and
push
and
inc
jp
cmp
test
mov
push
adc
mov
push
xor
cmpl
clc
add
loopne
mov
in
xchg
lods
push
sahf
cld
push
mov
mov
pusha
push
lcall
cmpsl
cmp
mov
aaa
push
push
dec
adc
in
pusha
xor
jg
pop
xor
cmp
xorl
subl
or
pop
je
dec
sbb
test
cmp
xor
aad
cmp
aas
mov
xor
movl
rorb
fnsave
add
dec
pop
xchg
imul
sub
xchg
push
insb
ja
xchg
sbb
das
xchg
insb
sbb
test
push
and
addl
push
push
or
xchg
popf
call
xor
lcall
cmc
push
stc
mov
stos
push
xor
jge
add
int3
idiv
nop
add
cmp
inc
inc
sub
mov
add
imul
inc
jne
dec
sbb
cwtl
and
xchg
adc
call
adc
in
int3
sub
add
call
sub
int3
xor
and
fwait
test
loopne
inc
cmp
and
add
out
jge
xchg
sbbb
hlt
pop
sub
int3
push
js
lahf
xchg
mov
icebp
aas
or
add
mov
xabort
xor
out
aas
pusha
inc
mov
dec
cmp
cmp
jecxz
or
xchg
xor
out
and
mov
cli
outsb
adc
xchg
iret
xchg
movsb
mov
das
dec
pop
xor
sahf
fisttpll
lahf
test
adc
mov
and
fs
ljmp
xor
or
adc
loopne
jmp
add
cmpb
push
popa
cmp
pop
or
push
push
xor
scas
js
sets
jno
cmp
icebp
inc
jmp
cmp
fmull
push
xchg
inc
push
xor
shr
sbb
cmp
rorb
dec
cmp
shlb
int3
jno
inc
or
insl
dec
cmpsb
push
inc
cltd
sbb
hlt
adc
lock
push
nop
xchg
add
repz
or
and
mov
xor
push
cmp
push
adc
outsl
add
mov
cmp
push
or
nop
iret
inc
xor
push
inc
adc
cwtl
je
test
push
dec
js
hlt
jl
mov
repnz
fmul
push
xchg
push
daa
nop
std
testl
mov
je
xor
ret
xor
inc
popf
xchg
sbb
popa
cmp
or
mov
out
insb
sbb
cs
fldt
test
mov
push
sub
jbe
pop
pushf
fimuls
inc
lcall
loope
mov
lock
pop
loope
mov
loop
inc
add
pop
aam
dec
push
xchg
xor
call
mov
pop
dec
test
adc
orl
dec
sbbb
xor
sub
xor
mov
or
aaa
mov
and
add
or
shll
and
jne
pop
or
mov
lods
sbbl
push
cmpb
push
sbb
rolb
movsb
sti
roll
rcr
pop
mov
xchg
ss
das
add
jnp
and
dec
jecxz
loop
and
call
and
mov
adc
les
js
push
daa
out
test
sbb
xchg
dec
adc
dec
xchg
mov
in
sub
ret
enter
popf
lock
xor
xlat
int3
shlb
and
repz
or
shrl
jno
jb
sbb
sbb
icebp
adc
adc
dec
test
dec
inc
mov
in
xchg
shll
addl
pop
call
xor
xor
and
addb
neg
shlb
and
test
leave
xor
push
add
xchg
test
insb
aas
lahf
mov
mov
adc
rolb
dec
inc
inc
mov
or
sub
push
inc
cmc
push
inc
inc
and
mov
cmp
cwtl
dec
test
daa
jmp
sub
and
rcrb
or
and
insl
jno
push
cmpsl
inc
dec
jns
sbb
push
and
arpl
push
push
inc
mov
lods
cmpsl
outsl
mov
adc
mov
sbb
les
insl
cmp
and
inc
jl
mov
fs
push
xor
sbbb
xchg
and
push
je
mov
ja
lret
inc
adc
mov
sub
and
cmc
in
jg
xchg
pop
sbb
xchg
outsl
sbb
adc
decl
rolb
es
test
push
ljmp
fcmovnb
dec
or
add
stos
in
or
ljmp
xor
dec
and
mov
adc
pushl
out
cmp
or
mov
aam
or
lods
push
jae
and
add
mov
test
scas
movl
and
cmp
jmp
or
adc
movsl
add
sub
mov
xor
sbb
das
sbb
add
lock
cmc
push
xor
mov
sbb
push
shll
shrl
orl
loopne
xor
adc
add
xchg
ja
pop
adc
inc
sub
adc
pop
sbb
pop
jp
and
aam
popa
adc
aas
lock
std
jne
add
cmpsb
add
pop
sub
xor
adc
dec
push
shl
add
add
xor
aad
jl
push
orl
or
popa
bound
mov
fwait
sbb
in
imul
loope
xchg
shlb
es
imul
and
rorb
loopne
in
mov
push
sub
daa
pushf
data16
push
mov
cwtl
pop
mov
push
movsl
add
daa
inc
imul
scas
adc
jo
sar
adc
ret
jno
rorb
lret
mov
and
in
and
ret
arpl
inc
mov
push
dec
inc
push
mov
push
loopne
push
aas
movsl
sub
cmp
adc
ss
dec
filds
xchg
xchg
xchg
dec
xchg
sbb
in
push
mov
add
xchg
add
dec
sub
lods
and
in
ret
sbb
xchg
xlat
mov
adcl
enter
jns
cmpsl
push
icebp
cmp
mov
xchg
ficomps
out
mov
sub
pop
sub
out
add
mov
dec
cltd
in
xchg
jne
dec
cmp
and
scas
or
mov
or
xchg
orl
jmp
xchg
loopne
or
lock
pop
cmpsb
jmp
mov
test
mov
mov
or
ret
add
add
mov
pop
mov
mov
out
pop
mov
and
repz
xor
repz
or
xorl
inc
clc
pop
filds
inc
dec
sub
daa
sub
movsl
insb
shlb
adc
fsubrs
sbb
inc
push
sbb
xor
pop
push
mov
imul
cmp
jne
insl
insl
pop
test
inc
mov
or
das
jb
and
les
adc
sbb
add
and
fs
inc
imul
inc
or
mov
xchg
or
outsl
push
cmp
dec
fisubl
imul
pop
test
and
test
lcall
add
icebp
and
jg
cld
incl
ret
push
push
jle
decl
cmpb
flds
movb
xor
xor
add
dec
pop
adc
lds
adc
test
es
stos
sbb
adc
cmp
test
xchg
inc
dec
mov
adc
imul
add
xchg
xchg
aam
jp
out
sti
in
incb
or
or
popa
jb
add
dec
push
jle
or
in
test
xor
or
push
mov
mov
push
bound
insb
jnp
add
jge
scas
dec
lahf
int3
or
pop
inc
sub
or
inc
std
and
mov
add
push
mov
and
dec
jae
stos
cmp
sbb
push
int
fs
arpl
xor
shlb
pop
insb
icebp
push
or
mov
adc
addl
push
jne
add
ljmp
mov
add
add
inc
insb
and
les
inc
aad
movsb
insb
or
adc
in
mov
or
xchg
dec
push
call
out
add
inc
add
pmulhuw
shl
ret
adc
dec
fimuls
pop
test
push
fdivrs
iret
jnp
push
jl
rorl
mov
pop
rorl
push
int3
in
push
mov
pusha
pop
les
mov
daa
fldcw
dec
scas
adc
lods
rclb
das
mov
mov
cmpsb
enter
sbb
in
sbb
ret
inc
repz
fucomp
lret
cs
rorb
mul
add
into
in
xorl
ja
addr16
dec
pop
mull
clc
jae
cmp
jecxz
ja
iret
in
inc
call
cmp
pop
cmp
pop
sbb
daa
cwtl
ss
jo
test
and
lea
test
nop
je
pop
test
imul
nop
sub
or
jbe
in
repz
inc
xchg
xchg
or
nop
xchg
out
gs
dec
cmp
dec
add
mov
and
fs
cmp
add
mov
imul
scas
dec
cltd
loope
sub
pop
pushf
mov
aas
sbb
addb
cld
ficoms
loop
mov
sbb
inc
aad
add
inc
in
insb
xor
mov
or
js
adc
cmp
in
xchg
or
mov
rcr
out
mov
or
aas
inc
push
icebp
mov
loop
incb
sbb
gs
push
out
push
mov
loop
push
fs
push
xchg
mov
fsub
stos
mov
stos
sub
jecxz
mov
test
dec
jp
sbb
mov
jo
mov
rcll
cmp
popa
fs
int3
push
loopne
push
inc
pusha
xchg
js
inc
outsb
test
adc
or
sbb
ds
mov
adc
cmp
loopne
jae
lock
pop
inc
orb
imul
nop
jae
xorl
xor
add
pop
enter
dec
flds
pop
pop
lods
mov
mov
jbe
das
mov
daa
mov
push
jo
into
mov
pop
and
inc
or
pop
imul
popf
inc
ss
inc
cmc
mov
sbb
ret
inc
push
xchg
in
je
call
es
test
pop
jge
push
enter
roll
aaa
mov
fiadds
adc
mov
popf
filds
in
mov
pop
pop
in
inc
mov
xchg
add
mov
movsl
xor
in
add
jle
add
insb
fisubrs
push
push
pop
and
sub
inc
push
cmp
scas
or
fs
bnd
add
test
aas
xor
loopne
pop
push
mov
sub
mov
adc
sub
or
pushf
sti
mov
js
xor
and
push
incl
jbe
je
push
jnp
std
enter
pusha
push
or
pop
inc
jne
movsb
iretw
cld
adc
pop
cmpsl
pop
inc
hlt
mov
and
or
or
lea
mov
add
push
cmp
mov
cltd
pop
insl
dec
std
je
cmpb
push
jo
imulb
pushf
fisttpll
push
aam
and
mov
sub
cmp
dec
mov
add
or
out
fdivs
or
xchg
sbb
ffreep
add
jae
add
xchg
mov
fmull
adc
gs
sbb
jo
fistps
lea
mov
and
push
sbb
mov
nop
into
mov
push
push
add
mov
mov
or
in
lock
or
push
add
ss
pusha
scas
in
or
rorb
push
nop
pop
pop
daa
inc
pop
imul
fcoms
or
inc
pusha
es
enter
mov
enter
pop
orl
push
and
xchg
and
ja
mov
sbb
and
xor
mov
mov
and
data16
sahf
push
imul
jecxz
and
or
addb
leave
sub
pushf
sbb
or
in
sbb
stos
add
paddsb
out
addb
xchg
add
inc
mov
repnz
mov
add
lds
pop
rolb
sub
adc
push
cmc
hlt
ret
xchg
and
lcall
xor
ss
cmp
xor
inc
inc
cmp
dec
inc
dec
dec
dec
dec
dec
dec
dec
dec
xchg
rcl
mov
push
push
pop
pop
pop
jge
imul
mov
xlat
xchg
sub
xchg
dec
dec
adc
mov
push
or
lret
push
add
xor
push
lods
sub
xor
or
std
xchg
out
aad
enterw
push
inc
mov
adc
jo
mov
jns
xor
fdivr
mov
pushf
test
std
sub
jnp
pop
push
xor
add
incb
pusha
lods
imul
xchg
or
pop
loopne
sub
jge
add
rcr
sahf
dec
imulb
add
ret
and
sub
out
mov
mov
push
push
inc
jge
shlb
dec
or
sarb
stos
pop
inc
lcall
sbb
fidivl
test
cli
add
call
das
pop
daa
pcmpgtb
and
add
add
mov
js
or
pop
jmp
loope
movsb
cmp
out
add
es
jmp
inc
inc
aas
sbb
insb
inc
dec
pusha
sub
lret
push
dec
xor
dec
mov
jmp
or
popa
loope
leave
xor
dec
ffreep
pop
push
sub
mov
sbb
xor
and
cmp
and
xor
pop
xchg
add
xchg
test
leave
les
pusha
roll
jns
add
or
cvtps2pd
cmp
iret
cli
in
or
jo
ljmp
mov
cmp
push
mov
in
inc
aaa
clc
push
xor
popf
jge
daa
or
insb
cmp
jmp
adc
or
sbb
out
mov
jmp
popa
nop
inc
cs
mov
jmp
add
sub
aaa
sub
mov
lcall
gs
xchg
or
jmp
inc
sti
push
add
add
inc
pusha
sub
in
xchg
aaa
lock
into
pop
cmp
mov
xchg
add
jbe
mov
and
iret
jmp
cmp
stos
or
or
push
push
fistpll
cmc
mov
mov
and
adc
xor
mov
cmp
je
mov
add
xor
cmp
jg
mov
ret
push
sub
and
xor
inc
lods
dec
shl
fcmovnbe
imul
insl
clc
orl
push
jp
sub
mov
pop
add
dec
inc
adc
fisubrl
stos
arpl
cli
sub
add
outsl
sub
call
cmp
ja
jo
clc
ja
jbe
mov
pusha
pop
xor
jmp
ss
xor
and
popa
hlt
xor
nop
into
pop
leave
pop
nop
pushl
aaa
sbb
mov
in
inc
or
shll
ret
sub
inc
leave
roll
cmpsl
add
arpl
lock
orb
lds
out
popa
movsb
jns
mov
fs
sbb
fwait
add
nop
fwait
mov
mov
movsl
fldl
iret
inc
cmp
nop
lret
add
pop
mov
cmp
inc
dec
push
faddl
dec
pop
mov
add
push
push
inc
loop
imul
iret
int3
sub
sar
insb
movzbl
cmp
fistps
gs
inc
inc
adc
or
inc
sub
inc
ficoml
pusha
add
push
inc
xchg
and
or
push
pop
xchg
out
in
lock
cmp
xlat
add
test
je
sbb
add
sbb
and
lcall
mov
insl
push
mov
dec
or
pop
or
in
push
inc
aas
je
add
aas
inc
jecxz
movsl
xchg
iret
fwait
inc
jmp
mov
inc
movb
fsubrs
imul
add
inc
data16
mov
inc
mov
hlt
in
inc
js
test
adc
sub
inc
pusha
or
insb
or
pop
out
sbb
push
or
in
fildl
jb
mov
jle
adc
adc
cmp
add
aam
add
dec
jae
cmpsb
cmp
js
mov
inc
loopne
rolw
leave
add
nop
cmp
fstl
adc
rolb
cli
xor
pop
sub
jnp
adc
fldcw
dec
dec
pop
xor
fistpll
adc
fucomi
dec
test
pusha
insb
cmp
mov
pushf
fs
add
popa
mov
or
mov
mov
mov
popf
xor
daa
outsb
imul
cmp
mov
lock
add
shr
push
lock
jle
and
mov
jge
aaa
mov
adc
out
lock
pusha
pop
xor
movb
pop
test
xchg
sti
nop
push
sbb
mov
dec
dec
sub
out
or
sti
cwtl
pusha
adc
je
mull
notb
cmp
pop
cmp
js
inc
into
pop
xlat
add
xchg
data16
sbb
or
xchg
rclb
insb
inc
and
pop
adc
test
adc
pop
adc
xor
lea
cmp
dec
sub
or
std
in
adc
pop
mov
into
adc
les
pop
daa
jo
xor
adcl
andl
je
dec
mov
cmp
cld
and
notb
cmp
test
xchg
pop
pop
jo
sbb
icebp
add
sti
dec
jo
sub
adc
or
add
mov
adc
stc
cmp
into
dec
loope
bound
rcr
xchg
inc
loop
mov
add
add
dec
dec
adc
mov
cli
rclb
testb
mov
inc
ss
and
loope
incb
mov
mov
sbb
mov
add
dec
aaa
mov
fs
pop
jecxz
push
dec
aam
mov
adc
stos
push
je
jp
adc
movsb
dec
in
jne
dec
loope
and
je
repnz
in
mov
sub
pop
sahf
cmp
dec
or
sti
inc
add
push
inc
push
cmpl
inc
jecxz
adc
inc
jg
push
dec
cmpl
jo
sbb
and
pop
je
add
dec
xorb
inc
and
xlat
and
and
mov
xchg
mov
movl
and
cmp
jae
mulb
cmp
jmp
jbe
sbb
clc
add
cmp
xor
add
mov
cmovbe
fucomip
push
sbb
jmp
adc
push
or
mov
lds
shll
dec
push
daa
inc
sbb
icebp
mov
cwtl
mov
ret
jp
sbb
cwtl
or
cmpsb
test
rol
dec
or
in
in
or
lret
or
data16
adc
call
mov
mov
and
incl
cmpsl
subb
push
and
or
add
add
subl
add
and
daa
subb
cmp
es
pmaxub
arpl
push
rcr
and
mov
xor
outsb
cmp
enter
xor
inc
sub
ret
push
sub
mov
fsubrl
lret
lds
fprem
cmpb
mov
bound
jnp
add
dec
or
mov
sbb
inc
push
ret
mov
sub
push
fisubrl
or
sarb
roll
sar
adc
inc
aaa
jbe
inc
movsb
subl
mov
mov
ret
enter
adc
cwtl
out
dec
and
adc
push
cmp
ret
and
jo
movhps
xchg
es
add
inc
push
mov
xchg
adc
dec
xlat
lret
and
xorl
scas
sbb
adc
stos
pop
mov
test
fildl
outsb
push
leave
fmul
fidivrl
adc
or
and
dec
scas
sub
xchg
adc
inc
stc
loopne
inc
outsb
movsb
inc
jle
cmpl
inc
iret
mov
dec
lret
rorb
sub
lcall
daa
fprem
das
loopne
lock
and
mov
enter
std
push
or
sub
lock
cmp
movsb
outsl
cs
mov
cmp
insl
xor
inc
cltd
pop
inc
movsb
jle
mov
adc
sbb
shlb
sub
test
or
cmp
jo
jl
inc
test
push
add
ds
mov
inc
add
mov
mov
cmp
ret
shlb
and
add
sub
sarb
lock
add
mulb
out
movaps
xor
jmp
push
add
inc
sahf
dec
adc
negb
mov
push
cmp
iretw
cmp
decl
push
fmuls
jns
scas
inc
or
push
cmpb
mov
fmuls
dec
and
lock
and
imul
pusha
mov
xchg
dec
test
lock
inc
cwtl
pop
cmp
lds
mov
popw
push
push
inc
adc
cmp
adc
fsubrs
sub
loope
lcall
testb
iret
pop
mov
ret
push
fcomp
ret
push
or
and
cltd
add
outsb
sbb
popf
mov
pop
push
or
fwait
fwait
dec
or
sub
sub
push
add
inc
push
sub
pop
sbb
sub
roll
pop
movsl
inc
push
xorb
or
movsl
rolb
test
ja
mov
adc
push
add
dec
cmc
sub
fadd
push
lock
lret
or
cmp
sbb
mov
xor
repnz
pop
pop
iret
hlt
cmp
hlt
pop
in
dec
insl
into
hlt
sub
push
add
mov
stos
sub
repz
push
shl
pop
jns
inc
pusha
sbb
pop
addb
clc
push
mov
rorl
cld
add
sub
sar
fs
and
sqrtps
cltd
add
jo
imul
orl
mov
dec
or
sar
loopne
mov
nop
or
cmc
shrb
ja
outsb
movsb
xor
fistps
loope
cmp
sahf
add
loopne
and
fwait
sbb
add
pop
fcoms
jne
push
dec
mov
test
ds
lcall
pusha
cld
xchg
or
movsl
adc
lcall
sbb
add
or
imul
push
bound
orb
aam
sbb
xlat
xchg
add
pop
jecxz
or
dec
or
leave
in
out
add
shrb
inc
test
in
mov
aaa
subb
repz
and
pop
push
cmp
or
data16
ret
push
xor
mov
pop
lods
mov
sub
out
aas
add
pushf
in
in
ret
aam
adc
adc
cmpsl
dec
adc
sbb
push
push
call
push
pushf
push
jb
dec
mov
icebp
int3
inc
imul
mov
lods
clc
sub
test
push
enter
push
leave
add
jns
lock
clc
repnz
ficompl
mov
stos
inc
add
imul
arpl
rclb
pop
pop
and
lock
and
sbb
dec
and
add
call
adc
in
lods
adc
or
and
cmp
inc
dec
jge
xchg
mov
push
daa
fs
adc
add
fwait
cmp
das
adc
mov
mov
or
test
sbb
cmp
inc
add
pop
cltd
test
cmp
sbb
push
addb
rcr
sbb
sbb
shl
mov
ja
je
inc
jnp
cmp
sub
jo
or
leave
fwait
jae
jl
jge
sub
dec
shlb
cld
pop
insb
mov
or
pop
adc
mov
push
push
lcall
push
lock
mov
add
sub
push
je
sub
imul
pop
fwait
jbe
sti
pop
pop
inc
push
sbbl
and
adc
adc
lret
lret
je
pop
mov
dec
push
fs
fs
jl
cmp
pop
jl
or
cs
sbb
xchg
test
aaa
mov
mov
push
add
add
and
jns
sarb
sbb
dec
jl
mov
add
inc
inc
dec
and
movl
mov
mov
mov
dec
movsl
push
sbb
lahf
aas
lret
dec
fsub
adc
hlt
mov
loope
pop
inc
or
inc
rol
adc
inc
gs
mov
inc
call
cmp
push
push
push
ret
xor
jns
and
sbb
push
pop
cmp
xchg
jmp
dec
into
out
cwtd
test
cltd
insb
mov
push
push
shl
push
or
stc
cmpsb
dec
mov
xor
push
pop
or
xchg
or
push
mov
sbbl
or
add
in
ja
or
dec
sbb
popl
das
or
sub
je
cmp
inc
push
and
push
add
fldcw
push
xchg
mov
in
push
cmc
popa
ret
ljmp
jnp
add
pusha
mov
test
adc
sub
and
fsubrl
lock
or
mov
adc
das
push
push
inc
add
div
adc
ret
dec
adc
mov
insb
and
inc
sub
mov
jb
jle
pop
fistpll
mov
jp
aas
or
inc
bound
xor
pop
xchg
fs
sub
or
lea
ss
daa
push
add
jg
xor
or
push
xlat
add
sbb
xchg
mov
xchg
pop
lods
push
add
hlt
cmpb
loope
jo
fbstp
cmpsl
cmp
pop
lods
or
xor
mov
xchg
sti
mov
add
insl
or
pop
cwtl
cmp
adc
out
insl
daa
mov
mov
sub
jne
add
addr16
popa
and
push
inc
lods
mov
adc
add
xor
pop
ds
cmpsb
das
pop
sub
pop
sbbb
ret
out
mov
outsb
imul
fidivrs
ds
inc
push
push
and
dec
inc
jo
add
shll
sub
mov
xor
add
jecxz
cmp
jnp
outsl
push
lret
add
int3
aaa
js
test
cwtl
xor
stos
add
ljmp
aam
addr16
pop
pop
rclb
cmp
cmp
lret
and
inc
lret
aaa
cs
dec
sub
push
pop
movb
and
fimuls
cwtl
and
sub
loop
and
jge
insl
loope
or
pop
mov
rolb
lcall
adc
ljmp
mov
and
loop
sub
dec
aas
popa
icebp
cltd
inc
ja
inc
xor
addb
pop
inc
sbb
sbb
ljmp
adc
pop
test
ss
adc
adc
push
or
xchg
mov
xor
das
insb
stos
fs
push
faddl
lods
adc
cmp
subb
test
add
or
test
adc
mov
je
cmp
sub
sub
pop
and
pop
add
or
add
jmp
sti
fdivs
push
arpl
movsb
icebp
adc
bnd
movsb
fs
mov
mov
ss
adc
mov
pop
sub
lock
sub
xor
adc
flds
orb
fnsave
xor
ss
notl
push
lock
inc
xchg
jmp
cwtl
sbb
ja
fmuls
adc
push
adc
jecxz
xchg
insb
cmp
push
mov
out
jmp
iret
les
add
dec
inc
mov
dec
jno
out
dec
pop
inc
dec
or
inc
push
ja
push
aas
cvtps2pd
dec
sbb
nop
mov
fs
inc
inc
inc
add
pop
and
push
sub
mov
xor
add
sbb
pop
fcoms
mov
lods
out
add
mov
or
add
lock
ret
iret
int
popf
jle
out
add
gs
outsb
popf
les
cmp
cmp
ss
mov
push
scas
ret
inc
lret
in
ja
cmp
je
mov
cmp
or
xchg
dec
jnp
lret
and
xor
lds
test
lahf
les
test
push
bound
xchg
push
jo
jle
lock
dec
mov
sbb
cmp
movsb
push
mov
push
ja
mov
int3
sbb
pusha
push
pop
pop
or
inc
pop
xchg
fldenv
ja
movsl
aas
insb
jge
dec
xor
inc
inc
xchg
jne
add
push
push
data16
pop
ds
hlt
and
movsl
pop
pop
pop
in
gs
dec
adc
dec
push
es
insl
push
lods
and
pop
cmp
pop
xlat
hlt
test
xchg
inc
and
inc
jb
aas
and
xchg
pop
and
cmp
pop
leave
inc
jb
inc
inc
adcb
push
xchg
out
push
mov
add
movsb
inc
adc
cmp
in
dec
mov
push
dec
xor
sub
and
xor
push
jno
popf
or
out
fisttpl
jmp
push
pop
in
push
dec
fsubrl
or
enter
cmpsl
jl
sbbl
jl
add
imul
fdivrs
shlb
ds
add
ss
pop
push
push
insl
in
ja
mov
and
fldt
pop
mov
or
pop
dec
or
add
xchg
rolb
or
and
movsb
pop
adc
int3
xor
cwtl
in
pop
xor
setnp
sub
sbb
mov
mov
xchg
outsb
call
or
add
daa
or
lret
add
out
cmpsl
mov
test
adc
ret
push
mov
jnp
xchg
fmuls
or
out
pop
test
cmp
testb
jne
add
push
jbe
sarb
pop
inc
out
faddl
enter
imul
jnp
pop
xlat
mov
or
sbb
out
add
sub
jno
dec
in
aaa
pushl
dec
inc
add
push
pop
movsb
mov
test
icebp
out
int
inc
push
sbb
ja
add
sub
push
xor
adc
les
daa
xor
add
call
add
push
add
pushf
mov
addl
cltd
cmc
push
or
sbb
mov
in
arpl
mov
xor
popa
adc
fisttps
scas
fs
mov
in
fimull
leave
and
repnz
into
fmuls
mov
cld
or
mov
les
mov
lods
adc
sbb
les
andb
mov
bnd
dec
push
pop
dec
xor
loopne
fs
sbb
aam
sbb
dec
std
je
push
sbb
dec
in
imul
shlb
out
test
mov
push
pop
lret
xlat
pusha
pop
push
jl
decl
and
into
lea
sub
xchg
cmpsb
dec
ds
scas
push
lods
test
inc
fidivl
add
adc
dec
or
dec
int
arpl
fsubrl
mov
adc
lahf
filds
jae
inc
jmp
outsb
sbb
jmp
jns
mov
dec
loope
aaa
xchg
sbb
add
mov
lahf
dec
push
and
enter
mov
in
xor
std
fmuls
gs
dec
jmp
inc
fldt
pop
mov
sub
adc
arpl
in
sbb
test
mov
pop
cmp
xor
fsub
adc
popa
imul
lods
sub
add
push
loope
sahf
cwtl
jno
xor
cwtl
dec
sub
int
sbb
jbe
pop
outsb
dec
popa
ret
clc
or
add
jmp
jmp
push
xor
adc
mov
add
icebp
xor
mov
test
sbb
aad
mov
jecxz
cmpsl
ret
xlat
repz
arpl
aaa
cmc
fsubrs
fstps
adc
call
js
mov
ds
test
sub
cmp
aad
inc
fdivs
push
iret
dec
and
xor
pushf
insb
xor
xor
sbb
add
dec
xchg
sbbb
adc
loope
xchg
ds
push
mov
jnp
xor
sub
jl
inc
test
jbe
add
or
fadds
or
movb
pushf
add
dec
ret
in
shll
lea
mov
or
inc
test
or
dec
mov
add
pop
pushf
inc
test
loope
inc
inc
call
jl
adc
and
aaa
dec
and
inc
jb
dec
inc
jne
mov
xchg
dec
ret
inc
aas
idivb
push
aaa
mov
mov
sub
cmpl
ds
push
adc
cmc
sbb
push
lock
pop
add
and
adc
pusha
out
add
ret
mov
push
cmp
and
inc
jmp
andb
clc
and
or
pop
fdivrs
add
cmp
add
pop
subl
sub
pop
push
push
xor
inc
movsb
xchg
xchg
sub
xchg
add
popf
mov
es
and
pop
ret
or
jns
stc
daa
pop
neg
jp
xchg
rclb
or
mov
jo
inc
ret
push
lahf
mov
inc
popa
cmpsl
mov
or
pop
cwtl
ret
aaa
and
sub
sub
lods
nop
daa
sbb
pusha
xchg
stos
call
mov
pushf
daa
add
fcmovnb
adc
xor
fistpll
pop
mov
xchg
pop
adc
add
loop
adc
loope
push
ljmp
add
mov
data16
pop
rol
gs
pusha
cld
add
or
shlb
and
aad
notl
data16
call
adc
int3
js
inc
mov
fcmovne
mov
jmp
pop
pop
or
dec
shlb
pop
mov
cltd
dec
inc
minps
jle
ret
inc
pop
sbb
addr16
loop
push
add
adc
pop
or
cmp
stos
xchg
inc
aas
pop
ss
das
test
adc
add
cmp
mov
sahf
data16
mov
push
add
bound
movsb
addr16
call
sbb
pop
shl
push
and
rcrb
and
add
jp
xor
roll
hlt
das
push
nop
push
push
or
jae
adc
imul
outsl
pop
add
cmp
out
push
fisubrs
push
add
cmp
imul
out
mov
xor
cli
inc
push
addr16
push
cli
in
mov
loopne
push
push
lods
stos
imul
in
fwait
xchg
cmpl
je
jecxz
pop
push
js
rolb
cmp
js
fs
mov
add
pusha
pop
int3
cmp
jp
xchg
jl
leave
cli
gs
adc
add
sbb
adc
push
pop
mov
cmovp
xchg
mov
in
xlat
loopne
mov
xor
push
cli
data16
mov
movsb
cli
inc
cmc
add
lods
xchg
push
lds
jge
inc
sub
sbb
and
inc
or
je
andb
in
daa
pop
jecxz
and
sub
cltd
sti
xchg
repz
jo
imul
inc
shrb
cld
or
push
dec
inc
mov
repz
sti
outsb
addr16
adc
testb
repz
cltd
test
inc
test
popa
pop
clc
push
sbb
mov
xor
xchg
or
das
subb
andl
dec
and
inc
arpl
hlt
ds
mov
sub
push
enter
into
jg
pop
enter
inc
jb
std
mov
cli
add
rolb
ret
xor
push
shl
xor
xlat
or
lcall
ret
mov
mov
mov
cmp
add
add
lock
mov
mov
ljmp
stos
std
es
mov
and
hlt
sub
adc
cwtl
addb
add
inc
mov
in
jns
jb
push
stos
adc
mov
aam
xchg
xlat
std
pop
movb
incl
or
daa
fucom
add
pop
cmp
testb
or
jb
jo
push
sbb
test
int3
loopne
sbb
enter
adc
sub
ret
jle
cld
jo
cmp
pop
or
xchg
jl
sbb
or
je
stos
push
sarb
push
xor
inc
fildl
jmp
icebp
arpl
dec
push
das
lds
ljmp
mov
pop
ret
mov
jl
add
lahf
in
inc
outsb
movsl
ja
push
decb
or
sbb
mov
test
inc
imul
aas
sbb
insb
out
dec
std
inc
jle
xor
jnp
mov
mov
xchg
lea
sbbl
fwait
jno
sahf
and
xlat
add
push
adcb
out
lock
and
jae
hlt
or
clc
pop
pusha
insl
xor
test
cmp
lahf
pop
nop
or
mov
dec
lret
dec
push
mov
xor
das
pop
cmp
daa
mov
mov
lock
adc
cli
pop
and
xor
xor
test
je
push
mov
mov
or
in
pop
shl
jmp
xor
nop
pop
xor
cmp
cmp
add
ljmp
push
dec
xor
push
xor
pop
or
mov
jmp
ss
testb
push
insl
or
and
cmp
lods
inc
xor
and
cltd
loop,pt
or
push
pop
repz
xchg
ficoms
add
mov
and
pop
movsl
push
push
outsb
call
cli
inc
xor
inc
or
xchg
shl
or
aad
add
stos
pusha
loop
mov
pop
and
aas
lret
enter
lock
sbb
in
push
or
add
shlb
dec
jg
mov
clc
push
mov
or
pop
adc
scas
incl
movsbl
aaa
les
sbb
and
out
sub
addr16
lods
adc
sbb
add
jl
adc
repz
push
in
nop
call
dec
sub
rcl
pushf
xor
in
in
fdivrl
jnp
rcr
fwait
jmp
and
push
and
or
and
sbb
adc
inc
clc
jle
push
in
aaa
in
and
pop
xchg
sarl
xchg
or
ss
ret
loope
repz
adc
daa
cmp
mov
inc
xchg
push
push
inc
sarb
adc
dec
or
lahf
cmp
vmwrite
jb
int
dec
add
pop
push
insb
mov
das
cmp
out
sbb
inc
clc
mov
mov
push
lock
inc
inc
adc
pop
clc
aaa
aaa
sbb
ljmp
add
sbb
sub
adc
push
roll
mov
aas
scas
test
mov
jge
push
sahf
and
ss
xor
cmp
mov
cmp
push
sbb
pop
jno
in
nop
arpl
leave
adc
pusha
xor
inc
fwait
jno
inc
loopne
add
pop
imul
daa
add
js
xor
sub
cld
imul
push
outsl
fmuls
pop
ja
rcll
cs
xchg
adcb
xor
or
cmpsl
adc
add
arpl
nop
and
addb
aaa
push
pop
jmp
push
fcomps
add
inc
sub
addl
dec
arpl
adc
inc
cmpsb
jg
call
cmp
dec
or
push
in
sti
aad
sub
xlat
sub
sub
je
inc
pop
add
add
insb
das
sub
adc
out
xchg
es
cmp
dec
dec
mov
push
push
dec
jp
xor
and
pop
pop
jo
imul
outsb
imul
xor
inc
push
test
add
cmp
cwtl
add
aad
mov
mov
pop
je
dec
sbb
adc
sbb
roll
loop
mov
fldt
hlt
iret
and
xchg
cmp
mov
cmpsb
fmuls
sbb
icebp
and
mov
mov
arpl
loopne
inc
or
xlat
pop
adc
and
and
or
add
mov
inc
or
pop
sub
push
subb
mov
push
dec
mov
clc
mov
or
out
jp
or
clc
or
add
xchg
or
popa
lret
orl
xor
jo
add
inc
or
fdivl
xor
or
ret
je
xor
testl
mov
inc
lods
xchg
fsubl
call
sub
cmpsb
fsubr
sbbb
sub
clc
inc
test
push
push
lea
ljmp
lods
mov
sbb
pop
mov
out
insl
xor
cmc
shlb
fisubl
adc
pop
fdivs
fsubrl
adc
or
in
or
enter
or
or
in
or
push
in
add
or
addl
or
mov
or
and
ret
in
loope
add
je
scas
push
outsb
cmp
call
sbb
imul
outsl
mov
dec
push
add
mov
sbb
xchg
inc
jo
push
push
lds
mov
add
xchg
mulb
or
adc
push
pop
pop
add
decb
mov
inc
daa
sub
andb
push
inc
cmp
mov
cmp
dec
add
lods
movl
push
ret
mov
sub
je
jge
push
add
enter
add
insl
add
pop
clc
dec
push
add
divb
and
push
fcomps
ja
push
ret
dec
push
ret
jo
into
xchg
aaa
sub
xor
cvtpi2ps
sahf
add
std
jmp
and
xor
iret
divl
xchg
add
xchg
jns
pushf
nop
xor
xchg
or
or
jecxz
mov
push
pop
jb
sbb
and
cwtl
dec
cmp
int3
push
sbb
lret
addr16
scas
pop
pop
std
or
cmc
pop
or
pop
cmp
inc
xor
int3
ficompl
pop
or
ljmp
push
mov
sub
mov
lock
mov
pop
imul
cmp
pop
xchg
fsts
push
out
dec
push
stos
pop
cld
mov
xor
pop
jecxz
or
and
jno
or
cmp
ficomps
es
and
cmp
dec
xor
or
jmp
movsb
inc
xchg
jno
dec
aad
fadds
rcr
movsb
push
testb
or
mov
or
and
xor
push
sbb
push
cli
and
sbb
jmp
negb
xorb
mov
sbb
sbb
pop
enter
push
mov
fisubrl
stos
xchg
jmp
aas
shrb
add
sbb
or
call
cmp
or
movsl
xchg
inc
jmp
cmp
and
shlb
mov
xor
or
lret
jl
mov
jg
add
jne
ud1
in
jmp
sbb
cmp
cs
inc
jg
test
inc
add
xchg
imul
pop
pop
mov
cmp
add
adc
and
xorb
and
lock
jl
inc
or
insl
mov
ret
xchg
cmpsl
mov
addr16
add
in
add
rolb
mov
lods
mov
stc
push
jle
shll
aad
jne
dec
jmp
jb
mov
repz
push
xor
xor
out
cmp
dec
sub
or
mov
or
mov
sbb
cmp
pop
adc
mov
or
rcrb
or
mov
out
ss
push
cli
cld
in
lret
push
adc
sbb
add
hlt
cmp
jne
inc
scas
mov
sbb
adc
mov
push
add
cltd
add
loop
scas
sti
outsb
mov
jnp
push
cld
inc
xchg
add
shll
lods
fs
mov
clc
or
xor
daa
leave
or
push
mov
mov
inc
mov
fidivrl
inc
xchg
xor
int
cli
adc
add
ds
outsb
arpl
mov
inc
xchg
ss
rdmsr
mov
pop
mov
movsb
or
lods
mov
jne
ss
adc
in
xchg
sub
or
or
add
add
or
test
lock
out
xor
adc
xor
aad
cmp
stos
loopne
mov
xor
sub
lods
and
mov
xchg
and
or
dec
roll
and
pop
dec
inc
jle
cmp
out
rorl
aas
decb
jl
jle
xor
aas
or
or
add
push
push
mov
push
or
sbb
pop
cmp
mov
mov
xor
and
and
dec
cmp
je
mov
push
push
or
inc
pusha
ret
fimuls
cmp
push
fadds
dec
in
int
cmp
jmp
push
insl
outsl
fs
add
cmp
sbb
sbbb
pop
add
es
push
fidivrs
test
or
insl
bound
or
or
arpl
insb
and
sbb
in
movsb
cmpsl
sbbb
adc
mov
add
mov
cmp
ja
dec
into
enter
sbb
dec
inc
imul
inc
mov
mov
dec
shlb
in
movsb
push
lret
and
out
aas
mov
adc
pop
adc
pop
add
add
dec
add
adc
lock
int
les
add
int
outsb
push
inc
xchg
add
cs
sbb
sub
ja
cmp
in
cmp
sbb
fwait
dec
jnp
clc
push
inc
inc
mov
hlt
pop
push
adc
add
jbe
jp
popa
sarb
nop
xchg
pop
xor
jmp
sbb
add
push
or
pop
stos
push
in
inc
int3
or
cwtl
add
imul
xor
dec
adc
add
sub
mov
jg
add
bound
or
out
cmpsl
push
cltd
shrb
fstpt
aad
adc
int
inc
xor
mov
jae
enter
aad
dec
daa
dec
imul
add
incl
ljmp
inc
std
das
mov
pop
xchg
mov
lahf
data16
invd
dec
dec
into
sub
or
data16
add
fidivrl
cmp
xlat
push
sub
mov
xchg
ja
in
mov
rorw
adc
stos
es
es
or
pop
or
cmp
outsb
or
sbb
lahf
jl
or
sahf
test
mov
js
imul
outsb
jne
sbb
lods
add
dec
jnp
adc
out
and
int3
push
or
add
nop
or
add
cmp
xchg
pop
loopne
jo
addr16
adc
fsubs
add
fsubs
icebp
and
gs
clc
cmp
imul
mov
xor
add
insb
and
outsl
pop
subb
in
movhps
mov
mov
push
jb
test
or
ss
adc
xor
mov
push
outsb
addb
sbb
popa
dec
pop
rolb
adc
int3
push
push
fldl
mov
and
ds
add
add
nop
mov
sbb
or
add
inc
sbb
mov
or
imul
or
iret
push
mov
mov
sbb
rcr
hlt
lods
sbb
test
adc
jo
xchg
js
and
outsb
dec
or
add
les
push
ja
adc
dec
jae
dec
or
addr16
push
push
dec
jle
mov
les
or
or
add
insb
add
pop
cmp
add
fwait
popa
dec
adc
cld
pop
xchg
or
pop
dec
mov
fidivl
push
sbb
adc
sbbl
dec
cmp
pop
dec
add
xor
outsl
adc
mov
sbb
inc
shll
dec
test
push
inc
or
jle
lock
add
nop
sub
push
add
dec
inc
inc
inc
xchg
pop
sbb
xchg
add
aaa
adc
mov
mov
mov
push
add
push
insl
insb
cmp
inc
adcl
int3
addl
jnp
dec
int3
push
dec
dec
mov
divl
dec
scas
mov
jo
add
js
adc
cmp
jp
push
adc
fs
pop
cli
aaa
add
cmp
adc
pop
add
add
ljmp
add
add
add
add
adc
push
mov
sbb
inc
mov
mov
adc
dec
add
add
dec
add
mov
add
add
mov
mov
dec
fbld
mov
mov
pushl
scas
ljmp
pop
lods
ljmp
shl
out
fisubrs
loopne
dec
inc
ja
js
push
test
fwait
addr16
push
jns
test
je
ss
repz
clc
jnp
push
fistpll
inc
jge
push
jle,pt
jle
jnp
mov
push
hlt
adcb
nop
xchg
fidivs
xchg
push
subl
sub
jns
in
data16
cmpb
jno
dec
push
sub
xor
pop
js
mov
es
xchg
push
insb
mov
jge
mov
xchg
lock
push
sbb
mov
ss
jbe
mov
imulb
push
pop
test
push
lock
xchg
mov
test
mov
mov
popl
jnp
pop
and
adc
pop
insl
in
aaa
sbb
sbb
pop
les
sbb
add
jo
notb
pop
lret
push
mov
call
or
dec
mov
popl
stos
outsl
cs
mov
or
les
sahf
xchg
insb
pop
pop
nop
inc
dec
lret
jne
add
pop
loopne
xchg
loopne
shrl
jo
popa
inc
insb
sbb
push
push
sbb
xor
adc
mov
addb
add
sbbl
add
jle
loop
loope
sbb
jo
push
testl
pop
sbb
mov
or
inc
jae
roll
int3
dec
testl
push
enter
das
insb
mov
add
fs
je
mov
dec
sub
adc
sbb
pop
push
add
in
add
push
sbb
or
sub
into
push
xchg
adc
sbb
lds
test
jl
push
push
mov
sbb
push
in
pop
iret
dec
cmp
bsr
fmull
fdivs
fisubl
push
mov
sbb
push
subb
xchg
outsl
shrb
dec
xchg
or
jns
data16
xchg
in
push
mov
cmp
shr
je
push
pop
adc
lock
pop
add
mov
and
cmpsl
add
and
and
push
push
jae
push
lea
int
xor
jns
loopne
mov
push
and
das
frstor
or
add
xor
sub
out
lcall
pop
and
and
in
dec
inc
inc
xor
pusha
and
inc
mov
ljmp
add
sbb
daa
ror
add
push
dec
or
loope
dec
sbb
sub
jp
test
das
bound
mov
adc
mov
loope
pushf
dec
sbb
push
loope
push
xor
incl
push
sub
push
or
mov
dec
shrl
in
scas
xchg
sbb
sbb
into
sub
push
hlt
inc
add
jbe
ja
stc
lods
xor
dec
xlat
arpl
jmp
mov
sbb
test
lods
cs
and
mov
scas
dec
pusha
and
push
fisttpl
adc
movl
dec
scas
lcall
mov
or
mov
out
push
imul
mov
sbb
fmull
add
cmp
xor
gs
dec
rclb
xor
xor
pop
xor
sahf
or
and
test
mov
mul
sub
xor
addb
jo
int
xor
hlt
out
push
sbb
and
fcmovb
cmp
xorb
dec
cmp
cmp
fimull
cmp
lcall
gs
repz
push
push
push
push
push
lods
fsubrp
pop
and
lods
or
lea
adc
sbb
lea
repnz
movsl
sub
movsb
cmp
dec
movsl
pop
rolb
mov
push
cs
sub
dec
cmp
in
pusha
mov
dec
cmp
rorb
and
sbb
pop
mov
in
or
add
pusha
nop
fcoms
push
inc
inc
movsb
cwtl
adc
inc
lods
cmp
mov
push
adc
add
dec
pop
add
or
mov
loopne
pusha
aaa
sub
pop
inc
sbb
shrl
rol
xchg
jno
inc
sbb
push
inc
inc
pop
add
mov
cmpsb
mov
jns
inc
test
sub
mov
lock
inc
inc
popa
cmc
xchg
jbe
loopne
enter
pop
bnd
aaa
dec
mov
dec
add
mov
test
lds
rclb
adc
inc
dec
or
sub
dec
xchg
push
or
or
inc
cmpb
out
jecxz
mov
rolb
and
add
mov
or
sub
pop
dec
and
ja
push
and
sbb
push
xchg
popf
fwait
add
dec
inc
inc
rolb
fadds
orl
cmp
inc
add
inc
shl
push
adc
subb
ret
xchg
call
push
push
push
dec
push
aam
test
push
sub
mov
repnz
fcoms
pop
add
std
xchg
sub
rcrl
in
out
dec
fisttps
push
lea
cmp
test
dec
mov
inc
push
add
nop
cmpsl
ja
aaa
push
dec
adc
pop
mov
mov
mov
outsb
or
pop
mov
and
shr
fistpl
pop
enter
ror
enter
mov
sub
adc
mov
addr16
das
pushf
and
lahf
jne
dec
aam
inc
sahf
lock
sbb
icebp
or
inc
out
fisubrl
mov
fs
pushf
aas
enter
xchg
js
xchg
adc
add
loopne
adc
or
sbb
push
xchg
sbb
xchg
or
hlt
out
ss
push
or
rol
or
out
pop
sub
jo
adc
shll
sub
push
lds
cmp
ja
aam
push
pop
fistpl
pop
cmpsl
sub
xchg
lds
pop
in
push
lock
loop
xchg
adc
rclb
push
divl
movb
cwtl
clc
inc
xor
test
imul
adc
or
testb
inc
xchg
mov
js
sub
shlb
pop
and
add
pop
xor
stos
xor
add
ja
dec
push
or
xor
andps
or
pusha
or
pop
and
stos
adc
mov
mull
sbb
cld
fidivrl
add
cmp
push
jne
or
jmp
push
je
and
lock
adc
mov
and
nop
inc
adcb
mov
in
gs
inc
mov
data16
adc
jmp
fisttps
and
ss
sub
push
push
inc
sbb
jg
int3
es
adc
dec
pop
pop
mov
mov
fists
popa
loopne
cmp
pop
into
jae
hlt
outsl
mov
hlt
push
dec
jge
add
mov
ret
insb
sbbl
push
push
shrb
mov
mov
and
out
fisubrl
fisttpl
popa
loope
movsb
stc
jg
add
xchg
call
js
insb
hlt
ret
mov
aaa
cmpsl
add
pop
dec
into
pusha
jmp
sar
and
adc
or
jbe
rolb
leave
dec
or
mov
cmpsl
dec
or
inc
cmp
mov
ss
push
test
mov
in
pop
mov
imul
call
popa
jbe
in
call
jmp
sub
movnti
call
mov
negl
cmp
test
xor
pop
lods
cmp
mov
cmp
lods
lcall
adc
fldl
mov
les
lock
cmp
bound
mov
sub
dec
in
push
stos
test
cmpsl
outsl
shlb
test
jae
inc
inc
push
mov
fld
jae
addr16
loopne
cmpsl
rcl
aam
lock
loopne
outsb
add
lret
add
or
or
xchg
add
adc
adc
or
pop
sbb
test
inc
outsl
cmp
out
add
mov
mov
dec
pop
ja
testb
fcmovb
adc
adc
add
add
pop
js
movsl
add
xchg
add
leave
test
sbb
and
push
push
sbb
pop
push
aam
inc
jb
mov
shlb
cs
nop
lea
sahf
xor
leave
push
outsb
dec
loopne
mov
mov
sarb
cwtl
inc
pop
sbb
icebp
xor
or
mov
or
loop
negl
mov
dec
or
rorb
sarl
fcompl
inc
or
and
xor
and
and
sahf
ret
or
push
ds
push
cvtpi2ps
add
inc
jmp
mov
mov
or
add
popa
sub
aaa
test
adc
das
int
or
jo
adc
icebp
popa
movsl
add
xlat
fstpl
mov
ss
std
test
jnp
mov
or
pusha
push
sbb
pop
das
sbb
mov
jae
mov
sub
xchg
cmp
inc
jg
lock
je
bound
mov
adc
sub
or
push
inc
add
cltd
inc
shlb
sub
dec
or
xor
push
hlt
cs
leave
xlat
dec
sbb
ss
add
sbb
or
xor
int
adc
xlat
dec
pop
test
mov
ljmp
pop
ror
xchg
push
inc
outsl
int
inc
inc
pop
mov
rcrb
lods
push
xchg
push
cmp
inc
sti
xor
pop
jmp
sub
jo
or
push
mov
inc
das
xchg
sub
test
xor
add
mov
push
jp
pop
or
repz
sbb
lock
mov
pop
aam
lock
lods
add
xchg
mov
imul
mov
dec
mov
pusha
xor
adc
inc
lret
cmp
js
dec
sbb
and
xor
fdivrp
dec
xor
sub
neg
jmp
arpl
lods
add
je
sbb
sub
sbb
stc
push
push
loop
bound
and
push
outsl
repnz
sbb
push
mov
ss
fcmovne
test
insl
les
mov
xor
adc
in
lahf
jno
xor
outsl
jp
ret
aaa
add
call
pushf
sub
push
jae
push
cli
sbb
aas
mov
lods
add
shlb
mov
movswl
or
or
push
shll
std
cmp
xor
mov
cmp
js
adc
insl
adc
or
adcl
jmp
push
push
inc
fs
cs
pop
rcr
sub
into
std
scas
xorb
sub
mov
hlt
cmp
sbb
dec
dec
pop
lret
fcmovb
mov
insl
out
maxps
lock
repz
subb
sub
jge
test
sub
xor
add
sub
inc
sbb
fldl
cli
sub
push
inc
sub
cltd
int
sti
ret
aaa
and
leave
aam
adc
push
mov
mov
in
dec
ss
mov
popa
sbb
cmp
pop
nop
lock
dec
mov
lds
ljmp
ja
push
negb
adc
dec
jo
push
mov
jns
in
cmp
and
mov
sar
aaa
add
lcall
adc
inc
xor
in
xchg
mov
jle
push
int
add
dec
push
dec
out
fs
in
subl
inc
sbb
mov
or
mov
sub
ret
push
adc
mov
cmp
dec
add
psadbw
mov
dec
arpl
movsl
lock
add
lock
or
sti
add
call
inc
das
sub
or
inc
sub
mov
push
dec
inc
sbb
shrb
sub
sub
xor
push
dec
xchg
add
cmp
pushf
xor
movlps
xor
xchg
push
mov
mov
mov
add
insb
cmp
bound
cmpsb
cmp
je
pop
das
andl
or
sub
sbb
es
mov
daa
lahf
jl
add
push
lods
sar
xchg
jecxz
cmp
inc
xchg
shr
jmp
push
cmp
push
inc
jns
add
ja
and
jb
clc
xor
sbb
or
xor
pminub
mov
outsl
add
int
mov
mov
das
mov
test
inc
pop
test
jge
pop
dec
jecxz
xor
and
bound
add
xor
test
mov
or
cld
mov
dec
sbb
mov
sub
add
jnp
sub
sbb
int3
sub
inc
mov
inc
adc
mov
aam
and
sub
enter
and
add
sbb
inc
jb
or
inc
xor
xor
sub
pop
addb
adc
andl
ror
shlb
push
mov
nop
sarl
lock
sub
push
out
mov
push
mov
sbb
jp
mov
clc
in
es
sub
jae
inc
fisubs
dec
clc
push
loop
cmp
les
xchg
enter
pop
xchg
sbb
ljmp
fwait
shr
aas
or
arpl
lret
sub
pop
adc
xor
lea
inc
ret
xchg
int
xor
aad
add
xchg
mov
add
cmpsb
sbb
cmpb
leave
pushf
or
je
xchg
mov
ret
xchg
xor
and
push
fsubrs
lahf
push
inc
je
xorl
push
cmp
mov
add
add
jle
movb
insl
xor
xchg
pusha
mov
int
hlt
add
pushw
sbb
arpl
inc
nop
push
add
sbb
and
or
out
add
mov
inc
pop
xchg
xor
and
mov
inc
stc
xchg
pop
adc
add
lods
push
pop
pop
lock
insb
mov
pop
aas
or
out
inc
add
cmc
orb
lret
imull
movsb
jo
scas
cvttps2pi
mov
pop
mov
aaa
inc
jg
sub
outsb
and
dec
add
pop
or
and
push
in
push
les
xor
int
arpl
inc
mov
stos
pop
jmp
mov
fcompl
fistpl
mov
pop
je
mov
fisttpl
sub
outsl
test
fldl
sbb
loopne
aaa
outsl
ja
xchg
jl
insl
pop
or
mov
sbb
test
fdivl
push
inc
notl
movb
movsb
fndisi(8087
aaa
push
xchg
mov
sbb
mov
lods
mov
pop
dec
outsl
or
push
in
or
add
popa
les
inc
ficoms
dec
ja
sbb
jp
adc
xor
add
cmc
dec
jecxz
loopne
cld
pop
xor
push
mov
rcrl
rorl
std
xor
or
sbb
and
rorb
inc
sbb
cwtl
xchg
xor
mov
mov
ja
cmpsl
push
push
lea
push
mov
push
sbb
outsb
adc
and
xchg
icebp
xor
jg
mov
outsl
or
lds
sbb
out
fstpl
in
or
pop
mov
xor
jle
mov
dec
ja
mov
dec
xor
and
ss
or
sbb
insl
scas
mov
pop
mov
lcall
jns
jge
and
xlat
adc
ss
adc
xchg
jle
xor
mov
stos
inc
fcompl
loopne
or
xor
fsts
dec
cmp
or
andb
in
add
sarb
enter
dec
add
mov
incl
inc
inc
add
mov
adc
add
push
fidivs
pop
dec
je
lcall
add
and
and
mov
inc
lea
leave
jns
pop
cmpl
jnp
xor
or
pusha
jne
jg
or
call
test
ds
jbe
test
mov
inc
or
cmc
inc
cs
ret
cmc
sbb
outsl
xor
inc
xchg
xor
sbb
xchg
mov
enter
lcall
adcl
je
xorb
icebp
repnz
xchg
push
mov
xchg
shll
adc
or
cmp
pop
cltd
add
dec
stos
cmp
enter
push
loopne
std
push
xlat
dec
adc
test
inc
jg
dec
movsb
mov
and
and
test
lea
sbb
jo
leave
xlat
xchg
shl
in
stos
orb
xor
leave
insl
mov
inc
mov
sbb
incb
inc
scas
and
aam
dec
mov
fsubr
sbb
stos
sub
pop
arpl
iret
mov
jp
and
mov
cmpl
lea
mov
sahf
stos
ja
aas
or
dec
js
jl
inc
xor
pusha
iret
shlb
mov
lock
ret
adc
les
xor
and
sub
fadd
daa
orl
adc
and
and
imul
push
clc
shll
lds
mov
or
sbb
add
add
pop
inc
sub
sbbl
ret
mov
es
in
nop
addr16
ret
push
test
add
mov
cmpsb
add
add
pushf
adc
and
mov
inc
test
stos
setae
adc
pop
mov
push
jl
xor
mov
mov
cmc
adc
pop
mov
add
mov
and
or
daa
lods
test
pop
jb
xchg
fwait
mov
cmp
xchg
aad
jne
sub
cmp
sbb
lock
or
lea
xchg
or
scas
pop
dec
mov
mov
shlb
xchg
enter
add
or
mov
aad
rorb
cmpsb
mov
stos
leave
lods
push
shll
outsl
mov
int
leave
in
pop
dec
neg
inc
add
fsubs
test
xchg
pop
jae
pop
cmp
and
jo
jmp
andb
add
cmp
jp
add
shrb
imul
rcrb
sbb
jne
ja
dec
int
or
add
mov
into
lea
push
pop
sub
setne
das
in
jbe
test
cmp
jne
hlt
in
mov
add
insb
xchg
xchg
roll
cmpsb
vpaddusw
lret
std
jmp
cmp
imul
pusha
jnp
push
andb
iret
xchg
dec
loopne
mov
movsb
push
pop
rorl
push
pop
xor
in
pop
subl
and
fisttpl
sarb
pop
xor
xor
mov
pop
mov
loopne
enter
pop
jo
dec
cmpl
movups
push
and
cmp
daa
sbb
rclb
jo
mov
sbb
ret
pusha
out
out
sub
fwait
xchg
sub
xchg
hlt
xchg
mov
xchg
mov
mov
add
adcl
lock
stos
sbb
and
push
adc
aas
not
sbb
nop
sub
inc
test
and
cmp
xchg
inc
daa
adc
mov
outsl
inc
repnz
sarb
push
sbb
sahf
push
mov
push
inc
and
or
mov
sbb
and
push
sub
inc
jmp
xchg
sti
or
mov
cmp
inc
adc
mov
xchg
mov
fs
jp
xor
xlat
lods
mov
cmp
push
lock
or
sbb
add
mov
ffree
shll
ja
push
sbb
lods
scas
test
pushf
mov
dec
out
cmp
shl
sbb
mov
adc
daa
leave
addb
pop
add
addr16
gs
xor
ficoms
or
mov
jns
and
mov
and
je
cmpl
pop
pusha
or
and
scas
out
js
imul
sub
mov
mov
inc
test
xchg
pop
clc
adc
aas
cmpb
push
xchg
jne
rorb
inc
lods
fnstenv
aad
sub
jae
mov
cwtl
xchg
xchg
cmpb
sbb
cmpsb
adc
nop
pushf
sub
sbb
cmc
lock
add
adcl
xchg
add
sbb
xchg
sub
into
pop
aas
mov
cmp
mov
aas
int3
mov
push
enter
or
int
int3
xlat
xor
fs
or
adc
push
push
js
sbb
mov
cmc
incb
lock
imul
fsubrs
xchg
loopne
dec
or
aaa
imul
push
addr16
mov
in
add
call
add
add
ret
sub
add
fnstsw
hlt
add
xchg
cmp
inc
xchg
adc
das
aaa
les
xor
test
cli
push
xchg
and
pop
xchg
mov
mov
push
xchg
je
mov
je
inc
outsl
xor
lcall
rcrb
out
fsub
adc
ja
or
sbb
mov
loopne
or
jo
or
and
or
test
or
or
jb
lret
push
xchg
mov
orb
adc
ret
rclb
cmp
addl
leave
dec
test
push
push
push
push
dec
lods
popf
popa
pop
int3
xorl
push
imul
or
push
push
push
scas
dec
es
mull
mov
hlt
push
xchg
ret
mov
push
or
xor
cmp
sbb
or
insb
test
add
inc
mov
adc
outsl
add
dec
das
and
cli
inc
jg
cmp
and
adc
cli
mov
pop
nop
or
push
dec
or
imul
sbb
ret
je
daa
cli
sti
fmuls
shrl
sub
pop
jne
jecxz
add
or
test
jne
outsl
pop
clc
cmpsb
sub
loope
or
pop
sbb
bound
jne
cmp
inc
jnp
xor
pop
rep
cmp
gs
out
je
mov
xor
xor
and
jmp
pop
add
js
ljmp
leave
xor
outsb
adc
sub
cmp
dec
sbb
inc
sub
or
mov
mov
cwtl
jge
add
inc
or
adc
fs
imulb
popf
add
pop
cmp
or
sub
jmp
add
hlt
pop
dec
and
dec
dec
in
clc
cmp
pop
push
lods
sbb
adc
outsb
mov
hlt
in
in
mov
adc
pop
xor
cmpl
pop
imulb
lcall
fldl
pop
push
out
inc
daa
test
arpl
jecxz
xor
add
pop
push
jns
nop
cmpsl
sub
push
xor
lock
push
pop
xor
mov
dec
or
out
cmp
or
push
add
pop
inc
add
bound
fnstcw
mov
and
and
or
js
mov
push
pop
or
adc
xor
fisubl
imul
adc
cmc
fcoms
sbb
cmpsl
popa
sub
movsl
or
aam
add
mov
jno
sub
mov
jno
add
test
add
sysenter
xor
sbb
jle
mov
pop
adc
inc
xchg
adc
pop
pop
out
inc
icebp
clc
xchg
aam
outsl
jne
sub
dec
aam
sbb
inc
test
outsb
pop
je
mov
cmpsl
sub
and
dec
movsb
lcall
add
xchg
jnp
fiaddl
add
out
pop
push
push
dec
nop
add
popa
sbb
pop
dec
jb
call
fs
sub
push
jo
sub
pop
out
clc
and
jb
add
pop
bound
sub
jecxz
xchg
mov
je
sbb
into
mov
ficompl
neg
clc
movsb
xchg
fstl
pop
adcl
pop
jo
push
fcomps
leave
adc
inc
leave
arpl
in
or
rcrb
sbb
adc
es
cltd
dec
cmp
jle
sub
or
fmul
push
adc
adcb
loopne
aam
add
test
pop
jmp
insb
mov
daa
pop
and
pushf
sbb
idivl
dec
pushf
cmp
shrb
mov
cmpsl
icebp
mov
push
cmp
dec
pop
int
mov
adc
das
rorl
sbb
and
push
and
and
sbb
jno
pop
add
add
addb
js
popf
sub
adc
adc
pop
imul
lea
or
jbe
shlb
and
mov
scas
ret
cmp
xchg
pop
aaa
int
loop
mov
testb
pop
adc
imul
jnp
aam
loopne
daa
mov
popa
xor
xor
fstl
dec
cmp
sbb
xchg
sub
xor
fwait
test
xchg
mov
mov
mov
int3
mov
jmp
sbb
jbe
xchg
sub
imull
xchg
les
sahf
or
movsl
and
and
popf
xchg
sub
into
loope
lahf
xor
aas
aaa
or
xchg
cs
xor
dec
sub
fmull
fbstp
cli
nop
and
cmp
and
add
add
sub
adc
sub
mov
sbb
data16
mov
cmpsl
mov
add
outsl
or
in
xlat
cmp
mov
push
int
xchg
push
les
sub
sub
pop
mov
adc
pop
inc
popa
fldt
fcom
and
stc
sbbb
pop
dec
outsl
ljmp
adc
mov
pusha
int3
ja
fsubs
inc
jb
pop
and
jno
cmp
add
sub
pop
add
add
movsb
movsl
mov
setae
int3
or
enter
movl
je
mov
ljmp
mov
scas
jnp
mov
add
aad
inc
sbb
loope
outsb
pop
pop
cmp
int3
xchg
jne
mov
mov
outsb
out
call
cmpl
adc
pop
add
mov
xchg
nop
stos
xor
xchg
and
mov
inc
push
scas
or
cmp
rcr
out
mov
mov
add
mov
jle
jne
outsb
ret
bound
iret
xchg
popa
adc
xchg
jo
push
inc
lcall
and
std
cmp
sub
stc
mov
sub
xchg
add
push
cld
jne
in
inc
test
cmpl
mov
adc
insb
fcoms
mov
mov
data16
cmc
push
mov
jo
dec
or
popa
aaa
xchg
xor
dec
je
add
push
mov
ret
and
clc
je
cmp
jnp
arpl
jmp
int
and
sub
imul
and
lahf
int
shr
rorb
dec
jo
and
inc
je
xchg
pop
stos
aam
lock
adc
push
lret
and
adc
es
loope
call
adc
nop
adc
ret
pushf
pop
cmp
add
add
mov
push
sbb
mov
sbb
cmp
test
fldenv
pusha
sarb
add
sbb
or
jo
or
xor
pop
pop
xchg
scas
add
mov
inc
xchg
or
inc
jo
daa
sti
sub
adc
das
xchg
mov
sub
jnp
pop
mov
jb
pop
mov
push
scas
ffree
mov
imull
in
cmc
push
mov
pop
and
sbb
cmpsb
dec
arpl
push
push
in
or
sbb
cmpsl
in
lret
jnp
and
xor
add
inc
add
and
orb
inc
mov
sub
sub
movsb
inc
ja
lcall
outsl
push
push
xchg
sbb
push
cmp
cwtl
xor
pop
das
mov
out
cmp
movsl
stc
push
test
mov
cs
jae
fs
pop
xchg
xchg
cmp
jbe
mov
jge
cmc
xor
insb
imul
and
push
xorb
mov
aas
xor
add
jp
mov
push
fistpll
add
push
and
test
or
pop
add
push
cmp
call
arpl
call
push
pop
aad
lcall
sti
or
or
jg
imul
or
scas
sub
xor
sbb
shll
or
cmpsb
icebp
nop
add
fisubrl
xor
sub
in
mov
addl
cmpsb
repnz
stos
mov
or
or
inc
dec
adc
sub
mov
icebp
imul
add
jo
xor
mov
cwtl
inc
jmp
fcmovnu
or
push
outsl
daa
adc
cmpsl
movsl
aas
rclb
loopne
icebp
addr16
lods
jne
cmpl
push
and
int
sbb
and
dec
add
or
orl
iret
cmp
xchg
rclb
adc
lahf
sub
pusha
cmpb
test
popa
add
add
jnp
movsl
cmp
popf
rcrl
mov
and
push
lcall
test
dec
pop
pop
adc
mov
shlb
insb
dec
jmp
sbb
shr
notb
add
jne
adc
mov
dec
or
iret
mov
xor
add
xchg
xchg
adc
mov
jno
push
mov
jne
inc
pop
push
mov
add
shl
fdivs
sub
ja
add
xchg
push
cmpsl
je
push
inc
dec
outsl
adc
xchg
add
push
cmpsb
je
sub
sbb
data16
push
andb
adc
xor
into
movsb
mov
add
push
or
or
jge
clc
sub
pop
loopne
add
sub
pop
or
aas
lahf
add
adc
aas
rcrb
xor
or
testb
rsm
sub
rolb
das
repz
inc
or
cmp
pop
lods
xchg
adc
inc
movsl
mov
idivb
add
pop
es
loopne
push
lods
sbb
ret
inc
mov
adc
leave
push
xor
lods
cmpsb
mov
and
fdiv
mov
in
or
int3
add
xchg
fisubl
cld
dec
idivb
dec
mov
mov
push
xor
push
ret
test
add
sub
or
pushl
inc
dec
push
pop
dec
jmp
popf
jo
adc
popa
dec
mov
sub
adc
cld
or
sbb
test
dec
fidivs
xor
inc
push
add
je
fsubl
dec
jnp
add
inc
or
call
xor
adc
cld
adc
adc
in
gs
sahf
and
test
add
pop
sbbb
mov
mov
cmp
sbb
mov
jl
push
cli
mov
mov
andl
js
cld
xor
push
xchg
aaa
add
pusha
xor
mov
pop
or
and
or
cmp
add
xchg
inc
xchg
inc
cmpl
jne
xchg
mov
adc
rcrl
push
shlb
aam
or
dec
xchg
stos
jo
mov
xchg
and
mov
sbb
fbstp
xchg
sahf
push
roll
push
mov
or
sbb
in
loopne
sub
add
mov
daa
dec
or
out
les
xchg
and
fimuls
std
dec
popa
or
imul
xor
testb
iret
sahf
cs
or
and
and
push
arpl
popa
lret
add
lret
call
adc
or
bound
lock
mov
jl
rcll
or
and
pop
fs
loop
pop
push
loopne
fsubl
sub
add
mov
cmp
dec
jmp
daa
loopne
ljmp
cmpb
lock
adc
push
data16
jl
dec
arpl
int3
push
mov
adc
call
ljmp
mov
fs
mov
xor
mov
cmp
cmp
dec
add
or
pop
sbb
adc
mov
fsts
xor
rcr
or
hlt
sbb
sub
inc
mov
mov
mov
mov
inc
cmp
mov
inc
and
jne
mov
mov
fs
and
mov
adc
ja
out
mov
cld
push
sbb
test
pop
xchg
jl
dec
add
mov
sahf
push
sub
das
push
jae
cmp
jmp
mov
and
pop
mov
xchg
or
mov
sahf
xchg
xchg
pop
in
pop
jg
and
adcl
das
test
pop
test
lock
nop
cmp
loopne
cltd
scas
pop
mov
xchg
dec
jg
test
aaa
cmpl
push
sbb
and
dec
inc
xor
rcrb
jge
rcrb
scas
push
add
sbb
addl
and
mov
sub
dec
arpl
test
das
loop
sahf
call
or
or
jnp
pop
mov
cmpl
cwtl
push
test
imul
jecxz
dec
xor
repz
popl
sahf
jne
mov
jns
push
mov
sbb
movsl
dec
push
mov
push
or
adc
xor
adc
mov
in
inc
ficoms
cmpsl
xchg
sbb
and
jle
push
cmp
sub
inc
mov
test
push
mov
xchg
loopne
add
cmpsl
xor
mov
lret
hlt
out
mov
add
mov
and
dec
pop
mov
inc
push
mov
in
jbe
cmp
push
and
js
nop
pop
sub
jbe
shrb
pop
jbe
movsl
pop
mov
xchg
sbb
mov
aas
add
push
gs
mov
fisttpl
or
mov
ficompl
call
xor
inc
dec
pusha
sub
outsb
xchg
ljmp
push
push
jne
inc
js
lahf
loop
cmp
sete
int3
dec
jne
arpl
inc
xorb
add
xchg
pop
clc
or
ffreep
inc
sub
jne
dec
cltd
jmp
cli
ja
or
addb
xor
mov
sub
xor
jmp
push
sub
or
sub
insb
loopne
and
xchg
fs
fmul
or
inc
lcall
add
or
inc
or
push
nop
or
pop
popa
popa
ja
and
pop
daa
addl
lods
outsl
xchg
rcll
push
pop
loop
jmp
pop
and
and
imul
lods
in
push
adc
popa
daa
mov
xor
es
enter
in
mov
pop
sbb
dec
rcrb
and
xor
sbbl
outsl
or
dec
aaa
add
adcb
fsubrs
packsswb
inc
rclb
aam
lcall
sub
lcall
add
je
data16
mov
lret
pop
or
pop
push
pop
or
movsb
mov
stos
add
push
mov
mov
or
add
and
sub
xor
aaa
cmc
sbb
leave
add
stos
inc
inc
push
or
mov
filds
test
push
mov
les
adc
hlt
pop
into
inc
arpl
test
cmp
roll
mov
inc
rolb
sbb
mov
pop
ret
rcl
xor
enter
xchg
mov
pop
and
call
and
loopne
add
addb
testb
inc
sub
add
inc
push
xchg
add
adc
jmp
sbb
inc
cmpsl
enter
cmpsl
enter
adc
in
pusha
sbbb
jecxz
pop
pop
mov
add
xchg
mov
andnps
mov
mov
mov
adc
xchg
scas
fists
repz
lock
mov
push
mov
stc
rcl
sbb
mov
inc
mov
mov
push
or
push
sahf
call
push
or
cmpb
mov
and
or
mov
pop
mov
or
sar
je
roll
jo
inc
addr16
xchg
sbb
sbb
rolb
mov
arpl
xchg
mov
adc
shl
cmpl
xchg
xlat
insb
mov
cmpsl
call
adc
pop
stos
aas
sub
or
outsb
dec
jmp
pop
mov
sub
and
iret
test
push
add
mov
jmp
mov
mov
adc
cmp
in
jno
inc
add
popa
xchg
in
adcb
sarb
pop
cmp
loope
aaa
push
and
and
add
aam
adc
pop
ret
xchg
shll
fisubs
fld
lds
nop
in
mov
add
inc
out
add
xor
lea
xchg
or
sub
xor
push
inc
inc
xor
or
add
lods
mov
xlat
xchg
adc
jo
sub
adc
nop
jg
pushf
rcrb
jne
outsb
push
pop
addps
sbb
sbb
lods
addl
add
mov
push
pop
xor
inc
sub
fidivrl
lahf
cmp
into
xor
test
mov
add
ds
idivl
mov
sub
pop
fcompl
mov
push
pop
int3
sub
pop
nop
lods
dec
lock
sbb
sub
mov
pop
arpl
lds
jl
or
testb
sahf
cmpsb
jne
push
sub
in
jb
inc
lret
jne
jo
clc
mov
pop
jmp
push
sub
call
lock
loopne
arpl
test
push
inc
or
mov
jp
imul
sub
dec
push
enter
dec
mov
test
adc
fs
cmpsb
std
add
or
aad
rcrl
inc
and
and
sbb
insb
shlb
and
pop
and
test
add
sub
push
in
icebp
adc
cld
and
xor
sbb
cmpb
and
xchg
inc
or
pop
sarl
movsl
mov
inc
cmpsb
outsb
cwtl
les
mulb
inc
dec
lcall
pop
aas
loopne
lock
or
mov
and
loopne
mov
nop
add
inc
js
mov
xchg
mov
loope
lods
add
pop
jl
test
jb
sub
jp
das
out
xor
cmp
inc
pop
xchg
in
jne
popf
roll
in
mov
xchg
mov
push
shl
xor
push
cli
daa
mov
sub
push
xorl
and
pop
es
xchg
xor
pop
and
cli
jge
or
je
pop
add
int3
fisubrl
insl
add
and
jg
push
pop
es
das
xor
and
mov
repnz
jmp
and
or
mov
and
sarb
push
insl
pop
or
adc
mov
jne
pop
jg
psrld
sub
xor
sti
movsb
roll
aaa
js
sbb
outsl
mov
aam
xor
imul
adc
cmp
frstor
shr
stc
pop
fwait
push
or
test
push
in
cmp
xchg
sub
sub
enter
sbb
scas
ret
or
and
inc
or
jmp
jne
test
out
xor
sub
lahf
sub
jl
add
xchg
xor
mov
mov
cmp
and
push
inc
popf
push
pop
sbb
or
adc
xor
out
ss
sub
dec
push
insl
jmp
inc
mov
mov
sub
jno
sub
inc
push
lret
mov
nop
jbe
add
add
mov
pushf
ljmp
aaa
xchg
add
and
data16
insb
hlt
or
or
mov
pop
push
lea
stos
in
cmp
jnp
mov
pushf
and
mov
les
or
jbe
sarb
and
jmp
das
enter
in
and
xor
add
push
sbb
add
sub
sbb
mov
add
inc
inc
pop
jl
or
pop
xchg
sbb
mov
xchg
ja
cmpb
dec
mov
and
test
pop
jmp
ret
xorl
pop
cs
rcll
push
and
in
jmp
ja
mov
stos
sub
push
mov
insb
push
cmp
jo
mov
mov
insl
jb
adc
xchg
ja
xchg
js
or
cmpsb
push
xchg
sub
aam
mov
inc
mov
or
inc
notl
icebp
movsb
jmp
mov
jmp
sbb
add
mov
lods
mov
xchg
mov
inc
xchg
adc
jg
fs
rcrl
and
dec
lcall
and
cwtl
std
xor
iret
stc
mov
inc
add
add
into
dec
xchg
or
sbb
or
jbe
jmp
js
xchg
fwait
xchg
jmp
pop
call
inc
sub
sbb
sub
inc
inc
jg
dec
jecxz
insb
sbb
mov
add
gs
mov
lods
and
adc
or
add
cmp
and
jge
in
jmp
mov
or
mov
cmpsl
xor
adc
mov
push
sbb
or
je
or
lea
push
push
loopne
and
loop
cwtl
pop
loopne
xlat
mov
mov
sbb
or
js
sbb
and
inc
sub
jge
js
arpl
xor
pop
notl
callw
negb
mov
mov
ret
popa
lods
rcll
stc
les
dec
jecxz
in
pusha
popf
add
adc
lock
mov
push
pop
jo
aam
cmpb
xor
or
sbb
ret
mov
inc
dec
mov
flds
mov
mov
add
outsb
pop
jmp
mov
inc
jo
ss
mov
std
fs
ds
dec
movsl
loope
xor
sbb
in
or
push
das
mov
pop
jl
push
lods
add
and
fisubrl
add
xchg
shlb
and
js
loope
cs
in
xchg
orb
lock
loopne
xchg
loope
negl
mov
mov
inc
gs
or
movsb
lock
lock
jnp
sbb
sbb
mov
add
adc
sbb
dec
adc
fdiv
dec
pop
insb
rorb
pop
xchg
faddl
push
sub
mov
out
mov
dec
xor
adc
test
xchg
and
popa
repz
test
loope
fstpt
pop
xchg
and
sarb
and
leave
mov
addb
nop
das
jne
bound
mov
sbb
push
or
push
aam
cs
push
jo
movsb
decl
add
dec
adc
roll
fs
mov
mov
inc
xchg
rorl
aaa
cmp
cld
loop
xor
popa
mov
mov
mov
push
rcrl
xor
push
test
out
jg
dec
jmp
nop
sbb
nop
add
fwait
add
outsl
lock
cmp
inc
push
cmp
pop
xchg
lret
dec
lods
out
sub
sbb
test
es
cltd
pop
pop
inc
mov
add
push
stc
test
sub
pop
lret
shlb
cwtl
xor
cmc
push
sub
mov
lea
add
mov
leave
pop
das
jno
jge
aaa
adc
sub
push
xchg
pop
movsb
mov
push
xchg
xchg
pushf
ret
xchg
adc
or
xchg
loopne
adc
aad
inc
xchg
ret
arpl
add
fcoms
sti
sub
or
adc
arpl
shll
dec
sbb
xchg
or
into
mov
sbb
je
testl
orps
sbb
add
loopne
dec
pop
aaa
push
adc
loopne
jge
pusha
push
mov
mov
js
in
call
out
jecxz
or
add
jp
mov
nop
add
adc
paddw
inc
dec
pop
ret
es
cmp
fisttpll
mov
and
je
lcall
xchg
in
or
jo
stc
and
add
popa
aam
jmp
add
mov
adc
add
sti
pop
sub
and
aad
xchg
and
cmpsl
rorb
inc
mov
dec
jnp
rcrb
rclb
sbb
icebp
enter
xchg
and
cmpsl
or
sbb
pop
push
movsb
aaa
cmc
and
adc
lods
xor
sbb
or
or
divb
xchg
xchg
movb
fiadds
aaa
clc
sbb
xor
stc
adc
inc
xchg
and
xchg
push
jne
xor
fistps
ret
mov
movsb
mov
pop
fisttps
mov
loop
or
inc
add
add
mov
pop
xor
test
xor
fisttpll
add
fcomp
jmp
or
pop
push
xor
xchg
and
jns
aaa
cmp
sub
xor
je
arpl
push
outsb
pop
fnstcw
mov
pop
stos
xchg
faddl
shll
ss
sbb
mov
xlat
insl
push
js
mov
sub
nop
add
or
add
add
jnp
cmp
push
add
jo
fwait
mov
pop
mov
xchg
into
and
std
or
cmp
xor
sub
push
out
test
loop
and
jmp
sbb
cld
cld
inc
je
inc
cld
dec
push
cld
and
and
cld
sbb
xchg
aad
add
inc
xlat
das
mov
call
imul
cmp
inc
es
jle
inc
sbbl
and
pop
pop
into
pop
add
lock
push
movsb
and
out
add
fsubs
popf
ljmp
push
sub
dec
cmpsl
cmp
or
lahf
addr16
nop
pop
sub
jbe
xchg
push
sub
lock
inc
fs
inc
sub
pop
adc
mov
or
rcl
pushf
outsb
push
jns
dec
ja
pushf
pushf
sbb
test
pop
and
cmp
or
push
push
mov
fisubl
inc
es
addb
sbb
dec
in
xchg
xchg
and
xchg
add
and
popa
movsb
cmp
lock
mov
mov
xchg
add
comiss
js
adc
test
outsb
cmovne
dec
xor
dec
dec
dec
xor
pop
insb
insb
mov
sti
and
pop
jno
pop
lds
add
or
cmp
xor
pop
test
lds
sbb
add
ret
xlat
in
dec
outsb
pop
dec
dec
dec
mov
and
dec
popl
es
movsb
sahf
pop
pop
xor
fimuls
jne
push
push
dec
xor
or
dec
inc
dec
mov
adc
xlat
push
aaa
andl
sbb
sbb
ficompl
add
push
xchg
mov
push
das
and
sub
sub
adc
mov
outsl
jo
mov
adc
dec
ss
push
and
sbb
sbb
cltd
mov
inc
xchg
jp
jne
loope
das
pop
xchg
pop
add
or
mov
shlb
cld
mov
sub
or
jle
lods
cmp
nop
lcall
mov
inc
rcrb
cmp
push
sbb
lret
add
pop
mov
nop
jp
inc
push
add
xchg
ljmp
hlt
adc
inc
test
and
sbb
loope
jno
push
push
mov
outsb
aaa
xchg
adcl
add
push
push
pop
push
jo
pop
popa
sbb
xchg
mov
xchg
adc
js
les
adc
or
movsl
mov
dec
push
mov
mov
sub
push
inc
sub
inc
mov
inc
movsb
adc
outsl
add
pop
inc
jl
mov
jno
xor
lret
xchg
sbb
cmp
into
les
push
sub
lock
add
and
add
hlt
icebp
mov
add
je
out
mov
ficoml
cs
sub
popf
lea
lods
ja
movsb
add
sahf
out
adc
adc
mov
and
fcmovnb
cmp
lea
jmp
pop
sub
xor
pop
inc
push
cmp
or
insl
inc
lock
dec
in
call
fimuls
movb
or
addr16
xor
xchg
jge
or
push
fadds
das
add
negb
adc
fisubl
popa
jns
jne
jae
pop
mov
outsb
insb
sbb
scas
mov
sub
popf
lods
inc
push
dec
push
test
push
push
test
xchg
jecxz
ds
daa
mov
das
test
inc
and
jne
rolb
mov
sub
pushf
pop
lahf
daa
mov
in
push
push
push
xor
cmp
dec
add
xchg
or
rorb
mov
imul
cmp
scas
pop
add
sbb
dec
mov
push
push
inc
push
fmuls
rcrl
dec
adc
cmp
faddl
pop
into
mov
divb
test
xor
xor
faddl
ljmp
add
add
call
cmp
push
xor
add
inc
aam
push
sub
xlat
pop
and
dec
arpl
out
add
insb
pop
sbb
sub
and
cs
xor
mov
xchg
jno
shrl
ret
and
pop
pushf
daa
jmp
pop
sbb
fcoml
sub
jmp
jecxz
in
lds
movl
xor
add
orb
mov
and
lret
push
enter
sbb
inc
pop
or
fisubs
xor
shrl
mov
mov
push
es
lahf
push
rorl
movsl
mov
push
mov
adc
xlat
push
testb
mov
mul
dec
dec
and
es
jns
inc
dec
pop
testb
and
pop
dec
ljmp
icebp
cs
jmp
dec
inc
add
dec
imul
inc
lret
and
cmp
inc
stos
imul
sbb
rolb
push
cltd
test
jbe
das
sub
dec
loop
inc
dec
in
sbb
add
lods
xor
push
dec
add
jl
dec
dec
daa
ret
push
mov
add
sarb
add
mov
cmpsb
ret
hlt
push
add
pop
movsl
add
mov
rcrb
adc
cmp
inc
push
lock
sbb
out
aas
je
jmp
sbb
aad
xor
std
sub
inc
add
into
push
cmp
arpl
std
jmp
inc
push
or
jne
sub
pusha
pusha
and
cmp
je
pusha
add
pop
mov
sahf
out
push
add
dec
push
mov
jno
data16
or
push
dec
mov
inc
and
int
popl
lock
sub
fcomp
andb
inc
jmp
sbb
xchg
cmpsb
mov
nop
push
es
sub
add
loopne
jmp
hlt
fsts
push
pop
jne
sbb
push
test
mov
cmp
lea
popf
push
ficoms
psrld
das
aas
lock
mov
sub
rcrb
nop
inc
test
neg
and
popa
mov
pop
jnp
add
inc
dec
mov
rolb
je
pusha
mov
out
sbb
cmp
dec
loopne
sub
xlat
cmp
test
inc
sbb
adc
subl
movsl
pusha
pop
lods
and
xchg
or
add
insl
fbstp
aas
mov
mov
loope
ret
xchg
cltd
sbb
jbe
lea
jns
adc
xchg
aaa
xlat
xorb
shl
adc
push
xor
sbb
add
addr16
ficompl
nop
mov
jl
pop
adc
add
push
sbb
jmp
sub
shr
cmc
or
mov
jmp
mov
sbb
mov
in
imul
testl
push
and
ss
in
adc
push
fcmovnbe
sahf
jo
popf
and
or
loopne
and
or
repnz
add
pop
sbb
mov
repnz
or
adc
xchg
push
pop
cmp
test
mov
lret
xorb
and
sbb
sarl
xlat
mov
inc
add
adc
sub
and
sub
clc
inc
sbb
daa
inc
test
adc
jmp
adc
fs
cmp
ljmp
lods
jns
nop
push
jb
ja
adcb
mov
leave
adc
and
mov
mov
cwtl
adc
push
movsl
bound
xor
push
call
xchg
outsb
jbe
pop
int3
mov
cmp
xchg
adc
sub
mov
dec
je
lods
dec
loope
push
mov
leave
je
pop
jle
inc
rcrb
xorl
bound
jmp
and
insb
jne
push
adc
fsubrs
dec
sub
hlt
and
mov
push
leave
or
dec
pop
dec
push
shlb
pop
cmp
ss
cmpsb
push
jno
pop
jge
outsl
dec
in
test
add
in
leave
cmc
mov
in
and
and
mov
out
push
ret
sub
pop
jno
add
addr16
xchg
pop
in
dec
mov
xor
push
mov
inc
xor
and
imul
out
or
movl
jb
arpl
mov
ja
sahf
mov
les
dec
or
add
inc
imul
cmp
pop
push
loopne
and
adc
ficoml
sub
enter
jmp
pop
or
push
and
or
mov
bound
jl
mov
dec
jns
cs
in
xchg
xor
jecxz
imul
xor
xchg
inc
jae
mov
lods
shll
dec
inc
inc
pop
out
mov
aaa
mov
push
xchg
cli
or
pop
les
dec
inc
dec
dec
ds
adc
mov
lods
push
test
les
lods
js
rcr
dec
adc
add
or
aam
mov
sbb
sbb
or
and
jbe
jmp
lret
sbbb
jl
jmp
lock
jo
xorb
and
sahf
test
aam
push
mov
cmp
xchg
push
add
inc
and
add
dec
adc
dec
push
jmp
shr
xchg
rclb
sbb
add
movsl
int3
adc
sub
scas
in
dec
xor
daa
sub
imul
mov
pop
jle
mov
inc
inc
and
cld
sar
imul
loopne
cmp
or
mov
dec
or
std
jo
push
lods
rorb
mov
adc
and
jmp
adc
push
pop
jge
lock
sub
inc
dec
movsb
xchg
and
or
mov
rcll
sub
mov
jbe
xor
repnz
adc
xor
in
sbb
lcall
inc
stos
xchg
ja
mov
lcall
push
rolb
sub
push
fs
sbb
jae
aaa
fwait
or
sbb
sbb
insb
inc
dec
pushf
ss
js
je
add
test
jg
outsl
ss
xor
cmp
decl
sbb
fwait
pop
lret
xchg
jo
or
inc
ss
arpl
inc
add
adc
add
xchg
je
or
xor
lods
dec
ret
or
mov
dec
mov
clc
add
mov
dec
mov
jnp
int
and
shlb
test
lret
dec
adc
scas
pop
stos
je
scas
cmc
and
xor
or
push
imulb
movsb
pusha
and
inc
xor
clc
daa
push
or
sub
add
call
faddl
sbb
sahf
in
xor
and
imul
aad
lret
sub
in
mov
dec
es
rorl
dec
fwait
ret
xchg
pop
imul
inc
adc
pop
or
enter
sub
add
js
pop
and
mov
push
enter
inc
test
fadds
repnz
xchg
and
aas
xor
orb
add
jmp
add
adc
xchg
popf
pop
xor
inc
push
inc
sub
mov
loopne
jns
jne
adc
sbb
mov
or
mov
cmpl
push
push
rorb
or
cmpsb
roll
and
and
adc
inc
cmp
push
in
ret
out
mov
dec
test
ja
test
xor
and
insl
push
sub
xor
cmp
add
sbb
inc
mov
or
mov
cmpsb
int3
sub
xor
and
pop
insl
loope
add
xchg
and
call
push
popf
xor
cld
sarl
call
mov
out
ror
clc
outsb
dec
clc
push
jg
or
jg
adc
movsb
divb
lea
insb
daa
adc
jb
cmpsl
jbe
mov
pop
aas
mov
push
addr16
outsb
pop
push
sbb
call
and
ret
imul
stos
sub
js
popf
insb
jg
cmp
dec
imull
push
cmp
sub
sub
xor
jns
pop
test
js
add
sub
insb
mov
stos
and
cltd
lret
negl
dec
out
add
mov
lret
and
movsl
adc
or
shlb
mov
dec
jne
mov
pop
dec
jae
ret
mov
test
das
xor
aad
inc
xchg
or
jl
jg
movl
fisubrl
sar
js
cmp
xor
or
pop
nop
dec
mov
pushf
or
and
sub
inc
fbstp
js
fs
cltd
xor
cltd
adc
das
mov
cmp
stos
shlb
pop
lods
dec
mov
fwait
repz
mov
scas
mov
cmpsl
mov
fldt
jbe
and
add
inc
push
adc
inc
push
xor
sub
rcrb
push
xchg
pop
icebp
cmp
jae
mov
push
fimuls
test
add
and
loopne
cmp
mov
or
daa
jbe
sub
lods
inc
mov
sub
rcr
mov
int3
sub
push
les
lea
sub
xorl
mov
cmpl
in
xor
or
call
mov
jae
scas
adc
jb
inc
cmp
cs
rcrb
es
je
and
sub
jo
lret
rcr
leave
pop
xor
outsb
out
iret
pop
add
xchg
addl
xor
push
inc
dec
jne
pop
inc
mov
mov
or
sbb
cmp
push
cmp
les
and
cltd
mov
andl
aad
jno
xlat
nop
mov
push
int
mov
pop
into
inc
mov
jno
movsl
lods
nop
inc
mov
inc
fldcw
jae
je
fldcw
adc
xor
test
or
out
ret
movb
sub
push
or
sbb
jl
adcb
xchg
shlb
mov
loope
push
insb
je
mov
insb
add
aaa
cmp
jb
movsl
or
sarb
nop
test
orl
fisubl
pop
cwtl
adc
out
and
pop
xor
inc
inc
mov
daa
je
push
lock
sub
inc
ret
mov
inc
push
dec
xchg
les
push
xor
cmc
jmp
nopl
fcompl
xorb
dec
sbb
pop
test
cmp
pop
mov
dec
sbb
icebp
or
inc
addr16
add
and
mov
pop
add
adc
fcompl
jns
jp
int3
mov
popa
push
pop
push
or
mov
inc
sub
sub
mov
test
mov
stos
sub
or
testl
and
aaa
push
in
push
pusha
mov
call
ret
adc
xor
les
inc
insl
xor
xchg
xchg
cmp
jne
push
mov
inc
adc
ja
in
mov
pop
pop
add
pop
sub
js
incl
test
add
jb
xchg
in
dec
in
jno
jne
mov
sbb
test
mov
shll
sbb
sbb
mov
fidivs
pusha
jmp
cmp
addr16
dec
adc
adc
aam
mov
and
pop
sbb
and
cli
fisubrs
test
pop
pop
xchg
fmull
lret
outsb
xorb
fwait
daa
push
outsl
arpl
pop
int3
mov
pop
xor
jecxz
mov
adc
and
adcb
iret
mull
add
pop
sbb
jne
loopne
add
or
push
pop
or
xchg
inc
or
call
mov
daa
cmp
mov
sbb
sbb
add
fstpl
or
cmp
pop
cmpsl
mov
pusha
nop
in
jg
and
sub
mov
movsb
inc
jmp
pop
lcall
ret
dec
fs
stc
mov
outsb
jnp
lret
ret
pusha
inc
push
sbb
and
hlt
inc
mov
in
push
mov
add
aam
inc
and
es
jle
fs
sub
or
sbb
jge
fwait
jg
arpl
mov
fbld
add
adcb
aam
inc
and
aad
lea
mov
sti
inc
daa
cmp
inc
fidivrs
cmp
push
icebp
xchg
dec
shll
adc
pop
push
je
xor
hlt
mov
or
mov
stos
and
add
call
pushl
inc
mov
fldcw
icebp
pusha
jnp
les
ret
and
loopne
add
sar
dec
roll
and
xor
rolb
rcrb
outsl
jnp
enter
lock
je
movsl
mov
or
and
shlb
xor
mov
cs
test
cmp
mov
adcl
in
insl
inc
mov
rcll
clc
clc
cmp
test
adc
insl
loope
rolb
xor
jno
xor
ja
rol
int
xchg
insb
inc
ljmp
or
jl
jnp
push
aad
mov
push
insl
aaa
mov
ret
pop
cmp
dec
daa
ret
insb
popa
add
cmp
inc
pop
add
pop
lcall
add
push
dec
push
lahf
loopne
jg
lret
push
in
stos
popa
pop
ss
push
sti
push
jecxz
push
xor
pushf
xchg
xchg
test
es
adc
movsb
jb
repnz
sarb
lret
mov
pop
sub
adc
add
nop
clc
xor
jne
mov
xchg
add
fs
arpl
es
xor
mov
adc
arpl
sub
sbb
add
push
or
fdivl
xchg
push
jge
dec
mov
inc
dec
mov
pop
cmpl
outsb
xor
adc
inc
jg
inc
rol
dec
push
jns
out
jbe
jmp
sbb
mov
push
in
inc
push
jg
inc
dec
pop
leave
movb
mov
mov
push
sub
mov
fists
push
push
scas
mov
mov
and
xchg
adc
das
push
ret
add
mov
arpl
add
fnstcw
and
pop
ret
lock
mov
xchg
cmc
rorb
dec
sbb
sbb
dec
inc
aam
pop
int
rorb
loopne
pop
xor
adc
lds
adc
pop
adc
lds
or
mov
and
push
cmp
xchg
mov
push
jmp
jl
add
addl
push
jmp
ja
push
adc
adc
nop
lret
mov
mov
loopne
pop
dec
pushf
nop
mov
nop
sbb
test
add
rorl
ja
cmp
rcll
sbb
lcall
cmp
je
orl
sbb
notl
push
push
cmp
jne
iret
imul
dec
rorl
adc
add
and
pop
repnz
ret
mov
test
popa
arpl
or
repnz
add
pop
dec
inc
pop
push
inc
hlt
inc
sbb
jp
pop
dec
cmc
lods
sti
rorb
mov
daa
test
and
adc
xor
mov
sub
pop
sub
movsb
mov
lahf
sbbb
cmpsl
iret
jne
xor
inc
das
mov
fs
xor
xor
sub
nop
sbb
fs
mov
and
mov
leave
inc
test
jg
test
sbb
jbe
pop
loop
xchg
adc
insl
sarl
dec
scas
imul
xchg
insb
insl
test
push
add
je
enter
mov
jge
shlb
cmp
xchg
lea
rorl
adc
inc
cld
cmpsl
add
cmp
mov
push
jnp
insl
xchg
cmp
push
inc
mov
mov
fiadds
cs
cmp
xchg
and
stos
sub
andl
inc
ljmp
adc
or
clc
pop
jmp
mov
mov
xchg
sbb
dec
scas
lret
sbb
jge
nop
cmp
loope
mov
movl
pop
mov
cmp
mov
or
dec
cmpsl
push
sbb
add
jno
push
xor
adc
push
adc
data16
sub
dec
mov
repnz
adc
add
and
in
xor
inc
adc
test
mov
ret
lret
or
adc
neg
jmp
pusha
jne
xchg
repz
pop
add
jns
and
es
jg
inc
pop
mov
pop
add
inc
or
xor
push
inc
js
inc
or
cs
fistpl
daa
imul
rcr
mov
or
or
jmp
inc
test
imul
adc
add
ret
xchg
mov
lea
ljmp
pop
jp
stc
mov
pop
add
or
mov
xor
sub
inc
shrb
imulb
pop
in
iret
sub
xlat
mov
add
cmp
xchg
add
xor
cli
fadds
scas
mov
dec
cmpsl
test
nop
dec
adc
les
cld
jo
add
cmp
pop
roll
ret
sbb
shl
je
mov
pop
xchg
fstpl
dec
cmp
jno
pushf
imul
pushf
cmp
jbe
pop
add
xor
push
imul
pop
and
test
movl
xlat
mov
sub
test
sub
lcall
fxch
mov
int3
and
sbb
add
rol
xor
sbb
adc
push
adc
nop
mov
inc
and
loopne
lods
mov
pop
cmp
mov
inc
mov
loope
int3
and
pop
faddp
and
xlat
or
aaa
adc
pop
fisttpll
push
popa
fadd
test
shlb
xor
cwtl
add
and
mov
or
push
or
cmpsl
push
push
push
and
cmp
xor
jp
sub
in
jmp
or
jb
push
rorb
inc
and
enter
f2xm1
sub
adc
add
or
xor
movl
jo
adc
xor
and
fmull
push
and
add
mov
dec
pop
flds
js
out
lock
iret
rcrb
pushf
push
fildl
int
sbb
jp
fs
jne
call
inc
imulb
xor
lods
jno
add
daa
sub
imul
andb
add
mov
or
cmp
arpl
mov
mov
loope
aas
jmp
jo,pn
in
movsl
xchg
adc
push
xchg
in
sbb
enter
addb
rorl
and
inc
sbb
mov
jae
or
and
pop
enter
xchg
mov
mov
test
jmp
les
adc
add
rcrb
push
pop
pop
xor
cltd
push
movsb
sub
and
add
mov
mov
cmpb
and
fwait
iret
mov
cs
sbb
jecxz
iret
jl
shll
xor
xchg
xor
sub
mov
push
fistpl
inc
pop
xlat
xorl
dec
xor
jns
test
adc
lock
xchg
pop
repz
add
bound
mov
xchg
imul
inc
pop
push
push
adc
rcrl
fdiv
pop
xchg
mov
push
add
scas
mov
js
xchg
mov
adc
ss
insb
jo
add
adc
punpckhwd
xorl
inc
jne
pusha
insb
or
mov
mov
orb
mov
fucomip
sub
push
aam
sbb
mov
inc
pop
add
rorb
shl
mov
mov
mov
lahf
daa
cmc
xchg
arpl
mov
rorb
xchg
adc
cmp
push
pop
daa
movsl
shll
stos
loopne
rcr
test
adc
call
js
dec
cwtl
dec
sti
aaa
inc
outsb
inc
cmp
je
test
aaa
lds
sub
sbb
mov
adc
or
add
loop
mov
pop
rorl
nop
scas
test
fs
sub
dec
lret
xchg
nop
add
mov
sti
aam
adc
add
or
xchg
je
adcl
test
sub
or
clc
sub
jo
test
ret
mov
in
mov
or
xchg
daa
jg
aam
fwait
or
and
pop
shll
je
sub
xor
rorl
addb
mov
push
xchg
add
sub
shr
xchg
adc
pop
add
sbbl
es
lods
imul
cs
bound
pop
loopne
push
fildl
aad
movq
les
add
dec
inc
mov
mov
les
adc
sbb
xchg
ret
add
mov
pop
lds
loopne
imul
rclb
pushf
shlb
cmp
pop
pop
and
push
inc
flds
push
jmp
lret
dec
clc
or
xlat
and
and
cmp
or
mov
pushf
xchg
dec
les
neg
test
sbbb
rorb
sbb
mov
sbb
outsb
adc
sar
add
sbb
nop
out
pop
addr16
pop
adc
movzbl
add
outsl
nop
lea
adc
xchg
inc
ss
nop
cmpsb
in
mov
fdivrs
jae
lock
imul
shl
jne
jo
xchg
xchg
dec
shl
ror
sbb
pop
shlb
adc
enter
inc
pop
insb
cmpsb
enter
cs
inc
jae
mov
add
outsb
imul
fdivrs
or
call
andl
add
jmp
sub
repz
cmpsb
xor
or
addl
cmp
push
mov
xor
pop
jmp
add
or
outsb
cmpl
sub
add
int
ja
je
les
and
add
xlat
scas
aaa
inc
pop
and
sbb
mov
ss
pop
ljmp
adc
add
add
adc
shlb
dec
push
sbb
mov
push
iret
add
aam
lock
jl
sbb
test
cmpb
dec
cmp
push
fsub
push
lea
jl
insl
xor
loopne
incl
dec
jb
inc
push
mov
movzwl
shr
jmp
adc
hlt
cmp
adc
pop
push
pop
mov
push
add
iret
scas
bnd
test
ja
fwait
add
and
mov
cmp
pop
add
imul
std
sbb
cmc
pop
pusha
sbb
mov
pop
pop
xor
dec
add
pop
dec
mov
push
xor
ret
iret
test
xor
shl
mov
nop
push
pop
dec
adc
dec
sub
or
sti
filds
lds
inc
dec
jne
mov
sqrtps
mov
xor
lahf
loope
cld
lock
add
push
dec
ljmp
call
cmpl
daa
mov
dec
nop
or
aas
es
jb
fcompl
and
jge
ja
push
test
clc
enter
pushl
cmp
push
cmp
push
divb
idivl
sbb
shll
mov
push
or
mov
inc
int3
fnsave
xchg
pop
cmp
stos
fiadds
add
xchg
push
mov
mov
lea
inc
fnstcw
jns
rorb
iret
xor
shrb
pop
outsb
or
inc
sbb
sbb
cld
fisubl
arpl
mov
adc
jne
in
jno
adc
xor
inc
and
jo
aas
inc
add
cmp
adcl
cmc
xchg
jne
mov
pushf
scas
adc
hlt
test
cmc
test
cmc
xchg
push
inc
sbb
jno
mov
or
out
push
sbb
mov
and
cs
loopne
sub
xchg
jmp
scas
mov
scas
push
cmp
sbb
rolb
xor
xlat
lock
push
or
lcall
and
test
mov
and
pop
and
gs
dec
mov
fs
dec
ja
push
xor
pop
push
sbb
jnp
test
push
fs
addr16
and
loope
cmp
data16
xor
sub
cmp
inc
ja
and
cmp
out
or
enter
insl
sbb
aam
in
mov
add
fs
jg
pop
incl
jb
adc
lret
popa
int3
adcb
jg
dec
scas
xlat
xor
dec
ss
inc
inc
xor
xor
xor
cmp
adc
adc
xor
add
or
or
add
adc
daa
fs
outsb
xchg
dec
sbb
call
sbb
repnz
imul
mov
imul
cmp
shl
ficoms
shrl
jb
inc
and
into
or
adc
dec
jo
aas
xor
add
cmp
faddl
dec
dec
push
mov
inc
fidivrl
shr
not
xor
cmp
adc
and
pop
int3
mov
add
clc
call
imul
and
adc
xor
or
movsl
rcrb
pop
jb
popf
call
aas
mov
inc
popa
pop
mov
jmp
adc
or
push
fucom
add
xor
loopne
imul
inc
ret
or
hlt
lock
mov
or
aas
mov
adc
cmpb
cmpsb
loopne
icebp
nop
jg
inc
mov
inc
inc
inc
les
int
xor
inc
inc
cmpsl
out
stos
jg
aaa
xor
ss
dec
adc
call
inc
xor
mov
inc
aaa
aaa
imul
lahf
inc
xor
ss
cs
xor
inc
inc
xor
xor
push
jnp
sti
insl
inc
inc
sub
inc
cmp
aaa
inc
pop
inc
inc
xor
xor
pop
lds
inc
pop
inc
xor
adc
inc
cmp
adc
xorl
xor
add
mov
push
dec
cmp
ret
outsl
dec
xor
xor
fldt
and
push
cwtl
push
mov
ss
or
mov
rolb
inc
pushf
int
leave
pusha
push
aad
dec
insl
sbb
push
sbb
cmpsl
jns
data16
loopne
mov
xor
cmp
push
sti
or
cli
nop
cld
int3
pushf
out
ss
push
rolb
andb
fidivs
cmpsb
call
cmpsb
sbb
cmp
sub
insb
fidivs
sub
xor
movsl
cmp
mov
mov
insb
jecxz
jbe
clc
push
push
out
out
notb
fiadds
jg
push
inc
outsb
dec
dec
mov
fadds
test
pop
fdivl
test
mov
es
push
dec
pop
inc
sahf
out
out
pop
faddl
aam
pushf
mov
fidivrs
mov
pop
push
fs
xor
inc
sub
jge
imul
les
xchg
sub
iret
gs
and
push
imul
mov
insb
insb
add
enter
lahf
inc
out
cmp
test
push
pushf
push
sar
rclb
loope
mov
jb
je
call
dec
cltd
inc
mov
mov
aas
xor
shlb
imul
ficoms
and
push
cmp
nop
mov
aas
wrmsr
mov
add
xor
add
outsl
mov
mov
cmp
in
adc
lret
jne
dec
enter
enter
fcomp
fxch
loopne
jecxz
in
dec
aam
mov
inc
mov
ret
gs
and
jp
ja
popa
je
xor
xor
adc
jns
sbb
sub
mov
xor
es
and
add
sbb
mov
insl
xor
or
lods
inc
push
flds
jns
mov
sbb
push
mov
xor
fwait
test
test
aas
jbe
pop
es
and
addb
nop
out
sahf
out
mov
out
sahf
ror
fsub
call
lock
bound
or
repz
repz
sub
cmp
repz
inc
dec
push
pop
pusha
push
jo
bound
popa
cmp
bound
sbb
test
es
enter
mov
fs
pushf
pushf
and
and
inc
dec
dec
js
push
xchg
and
hlt
mov
cmovl
pop
and
add
ror
add
sbb
das
rcrl
pop
pushf
sub
dec
notl
out
push
mov
scas
adc
mov
adc
repz
inc
push
push
js
cwtl
lods
mov
int3
loopne
pushf
push
sahf
out
sahf
adc
xor
pusha
jnp
in
jns
test
add
adc
iret
cld
faddl
in
cld
dec
out
pop
repnz
xor
mov
cld
mov
ficompl
xchg
mov
push
and
xchg
test
imul
aas
add
mov
xchg
in
sub
mov
out
orb
andb
ss
pmuludq
psubw
push
adc
push
push
decl
cmp
in
mov
iret
push
pop
push
xchg
cmc
insb
insb
or
sarb
std
jb
rcr
cmpsb
lret
mov
mov
sub
or
or
sbb
jb
add
adc
adc
and
adc
mov
lahf
and
adc
adc
sub
cmp
push
or
inc
mov
add
in
xchg
pop
aam
call
cmp
stc
mov
pop
push
sahf
and
jle
dec
adc
add
xchg
push
pushf
or
inc
mov
js
mov
enter
add
fmuls
lock
mov
mov
dec
xchg
and
push
test
add
inc
mov
mov
add
push
and
pushf
pop
jbe
adc
add
or
or
push
mov
cs
push
dec
popa
push
jne
jle
in
jbe
xchg
sbb
push
fnstcw
aad
pop
and
jnp
negl
push
pusha
mov
out
fsubr
cld
push
iret
repz
or
sub
dec
pop
cmp
repz
orb
repz
sbb
adcb
and
mov
in
xorb
ja
popf
add
jmp
pushl
sub
push
sub
jle
jmp
das
sti
ja
out
xchg
add
daa
daa
daa
adc
adc
cmp
xlat
addr16
in
push
or
in
in
sbb
add
rcl
pop
aaa
rcll
movhps
mov
pop
movsl
mov
jns
call
imull
push
dec
out
sahf
out
pusha
jo
nop
jmp
lods
mov
rep
sahf
out
call
xchg
into
adc
and
mov
outsl
adc
mov
pop
or
nop
xchg
out
dec
popf
pop
lcall
jb
enter
cli
enter
and
sbb
negl
sub
in
xchg
hlt
inc
repz
repnz
inc
mov
js
mov
mov
enter
in
fsubr
call
fs
lods
xchg
pop
sbb
adc
or
mov
dec
aaa
add
bound
les
loope
fiadds
xchg
out
out
dec
and
pop
pop
outsb
xchg
inc
or
scas
std
add
or
or
iret
add
push
xchg
push
lcall
aaa
rolb
mov
add
inc
add
jbe
pusha
cmp
ja
je
scas
add
pop
pop
add
sbb
icebp
das
movl
xchg
adc
orl
mov
and
jb
mov
xchg
pop
add
outsl
xchg
stc
mov
mov
sti
cld
std
sahf
out
sahf
incb
add
cmpb
idivb
cmpl
push
add
and
pop
mov
add
jecxz
and
das
movb
loop
push
rcll
jno
das
nop
pop
fidivrs
inc
pusha
lcall
clc
aad
ss
cmp
lock
jecxz
xor
or
ds
js
dec
pop
movsl
daa
fdiv
aad
jecxz
dec
xor
outsl
push
loopne
mov
movsl
inc
out
mov
mov
pusha
cmpsb
mov
mov
mov
call
out
imul
int3
pop
out
ficomps
jbe
mov
fdivl
jge
sti
cld
test
pusha
scas
fisubs
imul
js
mov
loopne
adc
or
sub
call
cmpsb
faddl
cs
cmpsl
add
inc
push
adc
sub
test
mov
rcrb
jg
fsubr
out
mov
mov
mov
sarl
push
es
out
out
mov
clc
cld
jl
cmp
dec
lock
push
push
sbb
sahf
sti
mov
out
iret
push
jge
idivl
pusha
lock
sbb
sti
int3
sbb
out
loopne
mov
aam
pop
mov
sbb
cld
xchg
and
pop
add
mov
jle
lahf
enter
jmp
das
push
jmp
fnstsw
es
pusha
mov
sbb
jnp
loope
ds
popa
ja
into
cmp
fcomip
cs
aam
sbb
ja
out
clc
popw
pop
in
fiadds
fstp
ss
xchg
es
jns
cmp
dec
pop
push
mov
out
fs
sub
pop
dec
fisubrs
fiadds
sbb
jbe
mov
out
push
hlt
pop
es
push
addl
jp
inc
ds
dec
les
push
xchg
or
mov
pop
inc
ja
sar
fmul
cld
pop
xchg
pop
sarl
xor
and
xrstors
fistpll
xlat
dec
cs
jnp
pop
in
mov
je
inc
ss
or
sbbb
pusha
inc
cwtl
call
push
jbe
or
mov
pop
loopne
dec
mov
je
rcll
js
fmuls
movsb
cmp
daa
subb
out
adc
sub
mov
add
subb
add
dec
add
dec
add
dec
add
and
and
out
jns
mov
or
inc
sbb
ds
dec
jecxz
jnp
inc
push
outsb
push
and
out
jne
into
dec
push
sub
dec
push
add
push
cmp
out
stc
clc
adc
mov
mov
outsl
aaa
fwait
int
mov
add
gs
call
fldl
mov
fisubrs
stos
xchg
xchg
mov
lea
fists
push
mov
in
xchg
xchg
lcall
int
cmc
fcmovne
jp
stos
xchg
push
dec
aas
jg
jg
out
stc
in
mov
jle
ljmp
clc
std
out
aas
cld
decb
cmc
stc
in
jle
das
stc
xor
das
sbb
outsl
cmc
out
std
ds
mov
pushf
clc
dec
cmc
aaa
cmp
jle
cmpsb
out
das
or
add
cmp
outsb
outsb
lock
add
aas
pop
out
jle
aas
lds
scas
cmpsl
iret
mov
scas
xor
jg
jg
adcb
outsl
stos
ds
decl
sti
mov
lea
rorb
ret
cmp
dec
cld
jg
lock
or
pop
inc
mov
inc
jg
ror
int3
lods
clc
ljmp
jle
shr
cmp
sub
mov
mov
pop
idiv
fldpi
call
sbb
fs
divb
nop
xchg
lcall
dec
not
cli
mov
add
sbb
cli
pop
outsb
fdivr
mov
xchg
mov
ljmp
fsin
clc
mov
mov
adc
jb
cmpsb
add
mov
sbb
nop
lea
roll
jg
sub
jmp
inc
cli
shlb
scas
jmp
rcrl
sbb
add
mov
push
jle
mov
xor
loope
repz
inc
sti
xchg
inc
call
idiv
incl
repnz
shll
stos
mov
xchg
lcall
adc
xchg
pushl
fs
mov
mov
lea
data16
xchg
aas
movsb
mov
rcrb
ljmp
adc
stos
push
in
cmpsl
fbld
les
add
xor
lcall
jl,pt
inc
jp
incl
hlt
push
mov
shl
test
sbb
cwtl
and
push
mov
stos
push
or
les
sti
imulb
xchg
xchg
ja
fidivrl
mov
jg
decl
icebp
lahf
push
rsqrtps
cmp
int3
rcl
ss
out
cmpsl
jmp
sti
call
aaa
jg
adcb
sbb
add
pop
sbb
insb
and
test
and
fmuls
cld
out
test
inc
and
lcall
inc
insb
adc
inc
inc
mov
sub
int
cmc
inc
hlt
outsl
stos
les
decb
cli
lock
mov
jmp
pop
outsb
ficoms
lock
cmp
add
jmp
imul
dec
lock
and
out
xchg
mov
nop
mov
inc
jbe
jmp
jl
stc
sar
int3
aas
jbe
fistl
je
mov
repz
mov
ljmp
sub
pop
and
jb
cs
jbe
push
push
push
cmp
jmp
mov
mov
and
aad
xchg
lock
lret
pop
je
in
ret
cmp
jmp
addl
or
call
add
dec
pop
test
adc
push
imul
xchg
repz
ja
jmp
cmp
fcoml
sti
dec
nop
adc
ret
sub
xchg
enter
jbe
cld
out
mov
jge
in
xor
sti
dec
pop
pop
add
fcompl
std
shlb
ud0
inc
lret
les
mov
stos
incl
call
lahf
les
jb
std
mov
les
mov
int
mov
cld
test
sbb
xchg
push
mov
js
lock
cs
ret
clc
les
repz
mov
sub
cmp
ja
aas
sbb
pop
cmpsl
push
mull
inc
xchg
leave
xchg
es
fwait
sub
icebp
inc
and
mov
jge
push
push
adc
in
roll
fcomip
orb
mov
icebp
mov
loopne
jno
outsl
popf
dec
sahf
fisttpl
lock
adc
loopne,pt
popf
xchg
mov
scas
adc
je
cld
movsl
aad
orb
aad
adc
push
aad
jbe
aam
jge
inc
aaa
add
cmpsb
adc
pop
pop
ds
adc
loopne
ret
jg
lods
pop
lock
insl
int
out
je
dec
push
outsl
jns
and
fists
xor
sub
push
adc
jle
paddsb
incb
jbe
sti
xchg
xchg
mov
mov
push
jp
jns
mov
lret
inc
adc
push
das
lret
in
mov
mov
scas
mov
xor
cmp
lock
xchg
data16
std
jg
incl
andb
bound
xchg
sti
pusha
ret
mov
fdivs
pop
push
scas
test
pop
or
dec
ret
push
repnz
aad
insl
ret
cmp
add
pushl
jno
inc
rep
out
cld
cmpsl
cmp
pop
lods
repnz
jge
adc
xor
adc
jge
mov
cmp
jl
or
sub
xchg
mov
push
idivl
loope
decl
jle
mov
cmc
sahf
jge
cli
or
add
push
pop
rclb
decl
dec
sub
rolb
stc
xchg
stc
mov
clc
imul
add
sub
push
pop
fsubr
mov
and
pop
jl
es
mov
cld
lcall
loope
pop
inc
jb
aas
sbb
mov
sbb
inc
repnz
jg
out
test
and
out
push
jmp
out
ret
push
movsb
jnp
adc
sbb
mov
loopne
es
mov
stc
lcall
dec
mov
test
aas
call
loop
xor
aam
scas
fnstenv
xor
pop
notb
dec
sub
gs
inc
clc
mov
jg
mov
dec
jmp
ret
pop
adc
xchg
icebp
sbb
test
mov
pop
mov
mov
sbb
call
xchg
shll
scas
mov
xchg
call
or
mov
sbb
mov
ds
loope
les
pushl
in
loopne
je
pop
addr16
int3
xchg
insl
addr16
imul
and
mov
and
stos
add
rorl
mov
pop
xorl
repz
fidivrs
cli
out
and
fsubrs
aas
notb
sbb
imul
jle
sti
cmpsb
cmp
mov
inc
sbb
stc
loop
rorl
clc
sub
push
int
push
jo
cmpsb
je
aam
lret
lock
xchg
repz
jmp
push
xor
ljmp
repz
xchg
aam
xchg
icebp
jae
mov
out
lret
add
or
std
aaa
lret
mov
inc
cmp
lods
push
les
mov
pop
mov
add
out
mov
sub
jmp
ljmp
pop
mov
loop
lods
aaa
inc
pushf
sbb
jg
fucomp
nop
dec
addb
sub
adc
and
pop
sti
pop
or
jg
jg
sbb
jp
mov
jo
pop
pop
pop
sarb
sub
sub
decl
pusha
and
pop
adc
aad
sar
loop
inc
pop
je
scas
mov
xchg
das
jecxz
add
fwait
push
dec
pop
push
pushf
push
stos
dec
ret
std
and
jg
mov
jmp
cmc
ficompl
mov
and
fidivrs
in
xlat
cmp
push
ret
fst
jge
push
jge
add
push
cmp
adc
in
jge
mov
sub
mov
repz
pushl
jg
enter
out
icebp
pop
out
cmp
cmp
daa
mov
ret
mov
add
rclb
cmp
lret
sbb
cmpsb
mov
sub
cmp
fcomps
js
add
sub
iret
pop
xchg
ljmp
mov
jbe
mov
repz
decl
mov
jmp
shr
movb
and
add
cs
sbb
in
dec
addr16
jg
inc
adc
in
push
mov
mov
or
loop
adc
out
or
xor
jmp
incl
adc
sti
jl
idiv
ljmp
scas
idivl
xor
adc
sbb
pop
loopne
jl
lahf
jmp
pop
shrb
out
add
dec
mov
pushl
je
outsb
sub
pop
mov
icebp
dec
adc
fsubp
dec
out
cmpsb
movsl
pusha
scas
je
mov
jne
pop
stc
out
jbe
adc
jle
cs
mov
out
jp
mov
out
repz
loop
in
int
ret
loope
daa
dec
out
or
test
repnz
sti
jb
jbe
outsb
andl
cmc
std
clc
notl
mov
mov
sti
xor
ss
shll
push
cwtl
test
fisttps
dec
xor
jl
imul
fs
and
add
inc
add
repz
mov
fildl
aas
sti
sub
insb
in
add
std
cmp
lods
test
test
and
push
jle
hlt
mov
sub
dec
add
int3
out
or
pop
dec
pushl
or
decb
out
mov
aad
mov
jns
out
add
xchg
and
and
inc
and
and
int3
or
outsl
in
nop
call
decl
jmp
pop
hlt
les
push
std
mov
xlat
pushf
icebp
mov
lret
mov
mov
outsl
fwait
test
test
sbb
mov
jmp
jo
jle
sti
cmp
pop
clc
dec
xorl
and
andl
shll
paddq
pushl
std
fwait
inc
cmp
sub
sub
xchg
sbb
or
mov
pushl
add
iret
jb
sti
fidivs
imul
pop
sub
imul
xlat
ja
and
clc
std
enter
das
mov
jb
xor
decl
lock
sub
dec
das
lods
stos
xchg
dec
nop
out
push
scas
ja
aaa
dec
jmp
dec
cld
ret
pop
repz
mov
les
mov
xor
inc
push
and
inc
dec
dec
mov
mov
push
jg
out
imul
enter
push
testl
sti
cmp
ret
xor
lock
sbb
subl
ja
sti
addr16
movq
jmp
xchg
jl
jecxz
cmpl
clc
stc
outsl
fdivl
pusha
xor
daa
fbld
ja
push
xchg
enter
repz
in
inc
jo
jnp
inc
xchg
roll
cli
es
mov
push
mov
push
outsb
icebp
inc
lods
xchg
das
enter
cmc
pop
ret
imulb
fmul
in
notb
push
add
decl
test
mov
push
cmp
jl
adc
sbb
mov
sbb
test
decl
pop
pop
cli
lret
inc
aaa
mov
jb
ss
dec
sar
push
pop
ja
in
jb
cmp
and
icebp
loop
mov
leave
in
subb
jmp
jmp
loopne
rolb
out
mov
or
jl
fcomi
push
pop
dec
mov
pop
cmpb
js
movsl
xchg
xor
inc
mov
pop
out
inc
xor
enter
lock
pushl
je
out
mov
movsb
shll
fsubl
movsl
div
cli
mov
out
inc
popf
jmp
call
pushl
iret
push
nop
inc
adc
jne
icebp
js
pop
jge
rorl
mov
jg
cmc
adc
jmp
repnz
into
idivb
jl
pop
cmpsl
out
js
jmp
lret
mov
loop
je
pop
cmp
es
lock
inc
cmpsl
jle
xchg
adc
or
stc
add
push
pop
sti
fstpl
cmp
je
pop
jecxz
adc
push
mov
clc
pusha
dec
mov
int3
and
decl
and
mov
and
clc
frstor
cmp
ds
decl
dec
gs
mov
or
xor
sti
stc
ficompl
shrb
out
cli
jl
add
int3
jae
in
cli
inc
xor
lcall
lea
pop
call
mov
xor
adc
lret
movsb
xlat
fldl
in
mov
mov
decl
mov
enter
mov
loop
and
sbbl
xchg
gs
pop
cmc
incl
mov
icebp
xchg
cwtl
ja
stc
dec
sti
fbld
cld
jnp
mov
cmp
loop
mov
jmp
jae
cmpsb
or
scas
cmp
add
inc
adc
jbe
in
out
ss
cmp
cmpb
pop
fwait
xlat
inc
stc
std
dec
lcall
aaa
or
xor
neg
cmp
fdivp
push
cmp
jbe
pop
mov
rcr
push
and
adc
je
or
lock
xchg
ret
jns
mov
scas
sub
test
mov
repz
clc
push
call
jle
out
ret
arpl
daa
ret
lods
addr16
popf
add
or
incl
aam
cmp
push
mov
cmp
xlat
cld
jmp
dec
jle
lea
hlt
push
cmp
out
jb
in
push
fstpl
sub
mov
out
jg
sub
hlt
mov
jl
adc
sub
or
stos
jl
cmc
out
les
shrb
adc
mov
xor
and
mov
and
loop
out
mov
call
je
jle
decl
fld
loopne
cmp
or
incl
mov
xor
inc
jg
call
aam
cmp
ljmp
mov
icebp
push
cmp
xor
jecxz
decl
js
cld
aad
shr
das
xchg
repnz
scas
push
ds
add
std
lcall
out
and
xchg
cli
cltd
pushf
into
clc
insb
jmp
pop
je
xchg
mov
add
incl
pop
lcall
inc
fsubrl
lock
jmp
fldt
push
sbb
cmp
cs
jg
idiv
fimull
push
popf
ds
inc
sahf
push
fdivl
sub
incb
add
cmp
jecxz
pop
aam
jbe
mov
cli
aaa
mov
jmp
loopne
imul
pusha
aad
stc
inc
or
aad
enter
cmp
cmp
out
ljmp
loop
cmc
repz
jp
push
mov
fwait
call
xlat
out
fwait
in
fidivl
gs
lahf
outsb
pop
aam
ljmp
sbb
mov
adc
and
lahf
push
stc
mov
popaw
mov
lock
incl
ljmp
mov
and
xor
scas
jecxz
or
jbe
xchg
push
aam
fs
bound
jns
jp
and
outsl
add
mov
pop
xlat
sub
fisttpl
ds
mov
scas
es
push
push
lahf
xchg
sbb
ljmp
inc
clc
cmp
mov
dec
std
mov
add
xchg
mov
lds
into
jnp
mov
scas
jbe
ljmp
mov
jbe
fsubrs
push
shr
sbb
sub
sahf
mov
aam
popf
out
ljmp
mov
sbb
inc
mov
pop
add
mov
je
sbb
cltd
fsincos
movsl
lret
cmp
outsl
cli
ja
mov
aas
cmpsb
test
xchg
push
scas
xlat
sbb
decl
push
jmp
xchg
sbb
sbb
jmp
negl
addl
clc
stos
jmp
jnp
sbb
adc
sbbb
add
fcmovu
jne
jne
jmp
jge
push
in
inc
popf
and
and
sbb
lods
gs
call
mov
pop
cmpb
into
aas
rorb
dec
push
out
outsl
mov
out
mov
jbe
je
nop
xchg
int
cmc
stc
mov
gs
push
dec
rorl
push
push
loop
jmp
inc
ds
sub
mov
inc
rcrb
into
ss
sub
jo
outsl
xor
adc
clc
pop
shrb
mov
cmc
outsl
out
mov
cmp
adc
xchg
cmp
or
jns
add
lcall
push
ja
mov
add
and
cmp
cmp
cmp
add
std
jmp
ja
hlt
jns
sub
xchg
adc
adc
aam
iret
cwtl
mov
ret
test
std
enter
rcr
push
cltd
pop
fcmovnbe
and
es
loope
fbstp
mov
jp
mull
out
cmpsl
cmpb
rolb
repz
es
mov
hlt
or
cmp
es
jg
inc
gs
cmpsb
mov
sar
mov
inc
sub
les
std
jno
push
dec
sub
cmc
dec
sub
jg
addr16
or
shll
incl
icebp
jge
out
sar
mov
xor
lahf
pop
lods
out
sub
dec
incl
std
ja
xchg
inc
cmp
jbe
out
div
pop
xchg
ja
in
scas
and
stc
jmp
and
and
test
xchg
mov
jg
loope
outsl
sub
and
xchg
push
jp
inc
adc
sub
stc
mov
dec
push
out
mov
mov
aas
adc
lods
rcr
xchg
pusha
mov
repnz
int
sti
push
xchg
loope
jnp
and
jmp
jne
imul
sti
out
cltd
mov
lret
jns
divl
daa
orl
jl
jo
hlt
add
cmp
negl
in
push
scas
std
lcall
adc
xor
repz
mov
lods
jle
jnp
xchg
repz
std
stos
mov
xor
jb
mov
std
mov
jnp
and
ljmp
pusha
mov
test
and
leave
cli
and
mov
jle
mov
mov
sti
lods
movsl
sub
jo
push
les
es
imul
movsl
mov
push
xchg
flds
sbb
mov
jbe
adc
xchg
std
fwait
jnp
add
lahf
mov
ljmp
dec
jb
xchg
pop
shlb
leave
ficoml
stc
scas
dec
xchg
mov
push
jle
lret
xchg
and
dec
lahf
jmp
push
call
mov
call
jmp
repnz
jmp
fbld
data16
pushl
scas
in
mov
dec
icebp
pop
adc
repz
inc
ljmp
jb
ret
sub
cmp
mov
cmp
loope
xchg
filds
cmp
shll
lock
cmpsl
mov
mov
test
push
sarb
mov
dec
ret
mov
decl
cltd
jl
std
mov
insl
sub
das
or
int3
and
call
cmp
scas
add
inc
cwtl
das
cld
fldenvs
imul
call
inc
incl
mov
sub
and
sub
loop
sub
cmp
cmpsl
and
add
ljmp
lahf
or
scas
test
stos
repz
out
dec
in
sbb
jo
sbb
mov
adc
mov
out
jmp
sub
push
adc
les
push
jecxz
mov
stc
push
aas
cmpsb
mov
mov
imull
insl
mov
cmpsl
imul
rorb
sub
cltd
or
push
std
call
sub
aaa
lcall
pop
hlt
loope
mov
or
adc
jle
movsl
gs
mov
enter
pop
push
clc
jbe
into
sub
das
inc
pushl
pop
cmpsb
lods
jge
push
mov
jmp
sub
ja
aad
push
mov
roll
push
ja
adc
shll
movsl
ss
insb
jmp
lcall
je
ja
mov
int3
sbb
inc
fadds
jae
mov
xlat
xor
pusha
mov
lods
ds
icebp
je
es
decl
je
nop
dec
lods
and
std
in
jl
idivl
mov
sbb
jg
or
add
movsl
jl
cld
stos
jae
xchg
imul
xchg
enter
lds
decl
fwait
gs
dec
out
and
add
repnz
out
ds
incl
adcl
mov
adc
divl
and
jge
adc
aas
cmp
in
aas
xor
jne
iret
mov
push
lods
jge
lods
mov
mov
mov
into
test
sub
xchg
scas
iret
sbb
call
sahf
or
xchg
jg
add
in
dec
cmp
pop
add
add
out
cmp
mov
inc
test
mov
popf
add
push
in
xchg
incl
pop
xchg
enter
sarl
stos
xchg
mov
pusha
jl
add
xor
push
cld
decl
mov
popa
jecxz
insl
jecxz
ficoms
loop
out
ja
jbe
icebp
pushl
aad
pop
test
jge
cmc
aad
testb
mov
dec
ljmp
pop
inc
int
xchg
insb
sub
jnp
outsb
cld
into
cmc
jbe
or
sub
aaa
pushl
lahf
push
in
xchg
gs
cmpsl
test
jl
pop
idivb
or
inc
push
add
hlt
mov
lcall
outsl
out
orb
sbb
jmp
repz
mov
push
mov
cmovbe
mov
inc
add
inc
xlat
sbb
xchg
je
mov
in
mov
push
cmc
in
mov
dec
in
xor
or
mov
xchg
scas
sub
movsb
jbe
jae
leave
lods
mov
inc
add
add
ljmp
cld
lods
jmp
mov
fiaddl
out
repz
ret
or
push
mov
adc
dec
out
xor
adc
ret
lds
push
js
out
sahf
adc
divl
sbb
mov
pushl
and
lods
mov
stos
mov
je,pt
push
call
mov
js
ret
idivl
mov
cmp
lahf
test
fists
cmp
inc
fstpt
je
cmpsl
into
fnstenv
ret
inc
xor
icebp
in
das
fisubs
push
and
ss
cmp
sub
dec
cli
jb
pusha
fsub
push
mov
fsubrs
pop
xor
jecxz
add
fs
sub
in
sub
dec
cmp
xlat
pop
std
mov
popa
jnp
or
aad
xchg
sbb
push
adc
jg
pop
inc
pop
js
pop
mov
mov
cli
ljmp
jne
jbe
icebp
sti
sti
add
mov
mov
lahf
and
repz
inc
inc
jmp
jmp
xchg
jmp
jbe
je
xbegin
out
xchg
scas
mov
dec
inc
shlb
addr16
ljmp
sysret
mov
jge
cld
dec
pusha
jle
rorb
adc
incl
hlt
es
cwtl
cmp
shlb
cld
fbstp
xchg
icebp
paddd
dec
std
xor
xor
dec
loop
cmp
ljmp
sbb
daa
in
aam
int3
scas
and
or
test
icebp
cmp
clc
cmp
push
push
nop
inc
and
push
pop
out
push
pop
aas
stc
lock
mov
or
cmpsb
fisttps
rorb
mov
push
xchg
test
mov
mov
fnsave
sahf
fists
cmc
sarb
in
pushl
addb
adc
add
jb
jg
aas
daa
lods
sbb
add
mov
subb
mov
subb
adc
movsl
and
ljmp
out
pop
mov
lock
mov
jge
lea
leave
stos
cs
je
pusha
mov
icebp
ljmp
cli
out
cli
mov
jg
xchg
int3
push
adc
ss
sti
push
sub
dec
in
imul
mov
shrb
inc
add
nop
or
cli
aam
in
inc
stc
mov
std
lcall
or
adc
mov
lock
mov
mov
cmp
jl
xor
addl
decl
jmp
jb
add
lcall
loop
or
dec
mov
jo
and
pop
cli
mov
shl
sti
sub
decl
popa
adc
mov
push
repz
call
aam
push
jecxz
adc
and
and
adc
or
repz
sbb
call
std
daa
sub
and
aaa
fs
aaa
cli
add
dec
jg
test
fimull
in
jg
addr16
filds
out
xchg
adc
rolb
dec
in
cli
pop
mov
out
pop
sub
xchg
adcb
mov
in
aad
jnp
pop
jns
fistps
dec
shr
and
pop
cmpsb
pop
mov
inc
ss
lret
cmp
inc
pop
dec
enter
mov
and
lods
xor
or
sahf
add
and
push
cmp
push
mov
fldcw
daa
mov
xchg
jg
push
pushl
les
hlt
shr
push
mov
adc
xor
cmp
jnp
mov
adc
outsb
pop
lahf
cmpsb
cmp
inc
pop
nop
pop
stos
mov
fdivs
xor
jmp
pop
xchg
loopne
enter
scas
mov
sub
jo
mov
sti
xor
decl
fnstsw
lahf
adc
test
sub
add
push
push
cmp
mov
pushl
pop
jmp
sbb
sub
fisttpl
add
ss
push
decl
jmp
mov
push
cmp
add
jg
or
lods
jne
mov
adc
push
scas
aas
add
aam
aad
push
inc
mov
pushl
or
fnstcw
fcomps
dec
sub
xor
cmp
jg
cltd
push
add
arpl
fwait
mov
push
out
stos
lcall
scas
inc
data16
and
shll
cmp
push
pop
push
pop
out
pop
mov
pop
sbb
test
lret
adc
clc
ljmp
mov
movsl
pop
movd
iret
push
je
rcll
mov
or
es
push
inc
clc
decl
xchg
inc
clc
pop
adc
mov
cmp
sub
xor
out
inc
mov
test
int3
and
inc
xor
aam
push
test
pop
add
push
addr16
test
mov
sahf
loop
mov
incl
and
testl
imul
mov
pusha
sub
mov
jb
push
sub
jmp
pushl
add
mov
mov
sahf
adc
jg
inc
xchg
adc
pop
cltd
pushf
cltd
hlt
cmp
push
jno
lods
mov
stos
test
mov
mov
xchg
sahf
xchg
fwait
mov
xchg
xchg
mov
mov
scas
stos
mov
mov
push
mov
fs
adc
sti
xchg
scas
je
jp
pop
cmc
pushl
pop
jecxz
add
std
mov
push
je
shl
jg
inc
mov
mov
mov
adc
pop
push
push
ss
and
or
xchg
ljmp
aaa
std
gs
inc
repnz
sub
and
ljmp
ror
repnz
and
shr
inc
daa
nop
jnp
inc
shr
pop
mov
ljmp
sar
in
jbe
jo
in
pop
push
jp
addr16
jmp
pop
clc
decl
addr16
mov
add
push
je
daa
into
aas
scas
ds
std
mov
push
cmpsb
push
rcl
test
pushl
out
mov
or
and
pushl
in
adc
sub
in
out
loope
int3
xor
js
call
jecxz
mov
add
je
je
aas
je
cmpsl
shrb
int3
cmp
xor
int
mov
push
cs
out
lock
jmp
cld
int3
push
negl
sbb
cmp
dec
lahf
pushl
fwait
pusha
cmp
jg
test
dec
lcall
popa
cmp
in
lock
mull
fcoml
fistl
xchg
or
sub
repz
and
lods
jnp
jmp
dec
adc
in
mov
mov
xchg
incl
cmp
inc
or
fidivl
and
mov
pop
mov
call
je
inc
cmovbe
or
iret
jae
sti
les
out
xor
div
mov
repz
pop
lea
sub
insl
sbb
repnz
mov
les
pop
scas
and
or
cli
shrb
mov
mov
decl
fisubrl
imul
xchg
sub
mov
shlb
mov
jmp
cmpsl
aas
aaa
je
mov
dec
mov
push
cmpsb
cmpsl
std
add
xor
hlt
sbb
das
pop
xchg
dec
dec
cld
pop
mov
jo
cmp
pop
pop
sbb
fcomps
test
fucomi
cltd
add
mov
dec
test
push
mov
dec
mov
adc
xlat
out
mov
xchg
bound
mov
jl
std
jne
stc
es
xor
adc
nop
or
lcall
repz
iret
stc
int
jg
adc
ja
sbb
and
inc
lcall
jl
add
loop
and
push
and
adc
lret
stc
movsb
mov
fdivr
fcomip
decl
cmpsl
and
jp
mov
in
roll
and
jg
call
loopne
inc
test
adc
test
add
mov
and
cmp
mov
je
jbe
jbe
idivl
mov
push
inc
cmpsl
lcall
nop
movsl
insl
stos
incl
icebp
incb
push
sbbl
jle
aad
and
inc
jne
add
scas
les
jno
faddl
incl
test
mov
loope
repnz
in
pop
inc
add
icebp
add
jmp
dec
call
mov
enter
lahf
mov
leave
sbb
daa
lea
sub
pop
sti
push
xchg
in
cld
lcall
into
pop
sub
lea
mov
fidivl
jg
push
mov
test
fs
repz
aas
mov
pop
enter
loopne
jmp
cld
out
fmulp
xlat
scas
sbb
mov
iret
repnz
fwait
cmp
mov
fidivl
cmpsl
cmp
inc
push
dec
invd
mov
in
out
jg
dec
gs
in
xorb
pop
aas
xchg
popf
sub
icebp
sbb
lock
mov
incl
sbb
shlb
sub
or
repnz
in
in
repnz
iret
mov
jp
addr16
mov
add
int3
jmp
push
repz
aaa
repz
loop
jg
decl
ljmp
jnp
incl
xchg
loopw
cli
dec
in
mov
mov
std
mov
std
lods
in
icebp
xlat
arpl
push
lds
jne
dec
call
jmp
jmp
xchg
aam
pop
inc
nop
imull
mov
pusha
mov
lcall
push
jecxz
in
add
ja
out
jbe
mov
nop
jb
lret
shrb
inc
mov
int3
mov
subb
cmp
jmp
movsl
addr16
pop
inc
ss
pop
int
push
ljmp
sub
repz
inc
jge
jg
flds
stc
stc
daa
les
in
pusha
mov
xchg
pop
idivl
jne
call
cltd
add
aas
scas
repz
pop
cmp
cmp
xchg
fcomp
pushl
mov
mov
pusha
popf
push
mov
ljmp
enter
push
in
mov
movsb
out
cmc
xchg
addr16
ret
mov
int
pushf
sti
aam
std
scas
shl
and
cmp
pop
cmp
xchg
in
adc
cs
mov
scas
imul
add
clc
mov
daa
or
push
fiaddl
fxch
cmp
cltd
icebp
or
fsub
divb
mov
xchg
adc
or
jecxz
mov
push
int
decl
and
adc
in
mov
cwtl
mov
xchg
xchg
cmpl
incl
aad
cld
jecxz
sbb
std
insl
cmp
rep
cli
pushl
stos
sar
ret
sbb
dec
mov
mov
mov
sti
out
adc
cmp
fcmovb
mov
mov
lahf
cli
mov
incb
fistps
pop
lods
ret
or
ret
insb
lods
sarl
adc
add
xor
into
ficoml
add
call
ss
dec
xor
loope
rcrb
lcall
fistl
adc
dec
daa
adc
dec
and
stc
dec
pushl
fistpl
ja
cwtl
or
repnz
jo
mov
mov
decl
push
stos
test
mov
push
push
mov
out
loop
fnstcw
aad
ljmp
pop
and
notb
inc
mov
jecxz
xchg
leave
movsb
xchg
cli
loopne
pop
test
jg
ljmp
lret
int
iret
cmp
jle
enter
lods
inc
xor
pop
jbe
inc
cli
push
xchg
cmp
push
pop
ret
jae
pop
ljmp
pop
imul
movsb
fwait
jle
idivl
decb
lock
jmp
fcompl
iret
inc
inc
sbb
push
mov
arpl
std
inc
push
sub
mov
mov
cmpsl
mov
jmp
movl
inc
imul
adc
dec
and
pop
ljmp
jecxz
push
les
in
sti
daa
sub
xchg
in
aas
mov
sbb
pop
push
mov
lcall
mov
mov
mov
out
ja
mov
adc
jg
aas
sub
shr
stos
cmp
repz
insb
clc
decl
out
lds
incb
pop
daa
incb
ljmp
adc
movsb
int
jge
mov
out
sarb
mov
mov
mov
jne
xchg
fidivs
ds
add
je
call
pop
inc
mov
movsb
into
or
daa
ds
jnp
mov
sbb
out
and
jecxz
sti
test
xchg
in
rol
jne
dec
jmp
jne
cmp
scas
iret
mov
mov
adc
js
pop
or
out
mov
and
pop
jnp
in
shl
shll
inc
hlt
pop
pop
in
gs
cmpsl
ss
iret
std
and
test
jle
decl
ljmp
pop
and
jg
xlat
cmp
ret
lret
xor
cmc
xchg
popf
out
push
call
sti
xchg
jb
mov
pop
es
es
in
subb
inc
inc
jg
fcomip
incl
daa
hlt
fisubrs
ds
mov
jg
xlat
xchg
jmp
jmp
mov
popf
xor
stos
adc
cmp
mov
out
cli
lds
fcoms
pop
rorb
es
mov
popf
in
sbb
and
call
jecxz
test
clc
add
notb
test
inc
inc
xchg
incl
cld
arpl
and
popa
pop
mov
das
mov
shr
loop
push
pop
sub
mov
addr16
outsl
incl
mov
and
pop
lds
bound
jae
add
jl
movsl
daa
xchg
mov
inc
stos
ljmp
ror
je
out
lods
int
std
testl
inc
jle
movsb
cmp
cmpsl
jno
pop
aas
xlat
incb
in
or
dec
inc
in
out
add
adc
lcall
insl
cmpsb
jmp
cmp
icebp
cmp
scas
inc
ja
scas
test
pushl
scas
pop
sbb
jne
lahf
outsb
pop
jne
out
test
aas
or
je
pop
mov
out
repz
ljmp
push
push
mov
nop
je
lods
in
cld
icebp
decl
test
mov
adc
mov
insb
cmpsb
xchg
loopne
or
jbe
cmpsl
jmp
jmp
pop
call
mov
mov
lods
inc
jns
subl
scas
jl
cmc
jl
lcall
test
cltd
cmp
sbb
cmpsb
faddl
cmp
out
iret
cmp
incl
cmp
mov
cld
leave
jge
pop
rolb
jbe
pop
in
xor
js
stos
jb
ret
inc
push
sub
cmp
adc
scas
je
jae
or
negl
cmpsb
ljmp
jmp
jg
call
add
cmp
push
add
mov
and
pushl
jle
add
test
cld
flds
rorl
lcall
jmp
mov
and
and
sub
stos
sbb
lods
or
mov
rol
hlt
xchg
popa
jl
outsb
sbb
jecxz
mov
push
gs
mov
js
jmp
mov
cld
sub
mov
mov
cs
mov
jl
lret
mov
mull
or
push
gs
icebp
cmc
stc
cwtl
sbb
fdivr
ficompl
in
lock
insl
xchg
aas
fildll
add
aas
or
cmpsl
mov
decl
lods
adcb
add
xchg
scas
lret
lahf
nop
sub
adcl
sarl
and
sti
mov
hlt
cmp
jmp
aaa
adc
ljmp
mov
pop
add
xchg
loope
inc
adc
mov
sbb
mov
shlb
rclb
mov
cmp
cmovo
dec
icebp
inc
add
mov
fwait
push
and
jbe
rcl
mov
sbb
lcall
out
adc
test
dec
jbe
cmp
lods
loop
loope
out
lods
test
jne
pop
je
jbe
push
ljmp
aad
pop
iret
add
imul
jmp
repz
pop
nop
rcrl
je
je
add
cwtl
jge
rclb
mov
adc
call
jge
mov
andb
insb
add
es
shrb
jbe
loopne
test
push
pop
sbb
xor
mov
push
pop
in
push
jne
shll
xor
push
fisubl
pop
imul
std
dec
push
xor
rcll
mov
sub
pushl
std
ljmp
lret
and
jb
jle
cmp
jle
or
fisubrs
fnstsw
fbld
add
adc
sub
adc
test
lahf
pop
scas
pop
mov
pop
xchg
push
dec
push
out
dec
scas
push
cmc
sub
mov
loop
repnz
in
scas
add
out
push
scas
sub
mov
test
sbb
fcomip
mov
sbbb
je
xchg
mov
les
out
iret
and
aas
jl
pushl
loope
pop
inc
xor
sub
adc
call
mov
cmp
xor
adc
sbb
dec
sbb
push
insl
adc
or
call
pop
push
cmp
mov
add
inc
or
test
or
adc
mov
mov
lcall
sub
and
dec
sbb
add
adc
cltd
je
push
imul
in
rorl
jecxz
incb
dec
push
aaa
cmpsl
inc
scas
push
cld
cmpl
mov
and
int3
cmp
lcall
incl
in
stc
mov
jbe
mov
popf
mov
cld
jmp
sub
fst
das
pop
cmpsb
ja
popf
sti
imulb
add
push
fdivr
pushl
fnstcw
out
loopne
jge
adc
imull
mov
jbe
fisttpll
and
cmp
xlat
xor
push
dec
aaa
mov
push
and
fs
cmp
ljmp
xchg
scas
xor
imul
cmc
stos
rcrl
es
icebp
scas
rolb
xchg
push
sub
jo
loopne
repz
pop
mov
sub
ljmp
jmp
scas
cmpsl
sbb
mov
cmpsl
mov
sbb
adc
push
popa
xchg
lcall
mov
cmp
outsl
std
nop
ss
ret
pop
cmp
mov
add
ljmp
push
movsb
add
jbe
stos
lahf
jns
fsubrl
cmc
not
loopne
or
xor
daa
xor
incl
stc
xor
aad
stos
mov
sub
pop
cmp
dec
ljmp
mov
cld
mov
test
int3
lock
mov
jae
movsb
test
mov
stos
mov
add
out
mov
lcall
outsb
outsb
loop
lock
shl
movsl
jbe
push
and
orl
fwait
dec
std
incl
pop
clc
mov
cmp
mov
lods
mov
inc
test
repz
mov
outsb
sub
sahf
mov
mov
lcall
pop
lea
je
sub
ss
jno
ljmp
fcomip
pop
ss
ljmp
pop
imul
jmp
sti
popf
js
jmp
test
adc
add
ljmp
mov
int
jl
cmp
cmc
cmpsb
sbb
xlat
dec
cmp
lcall
out
pop
rorl
mov
bound
test
aas
sbb
lock
mov
lcall
mov
mov
lock
out
mov
fldl2t
push
in
lcall
cmp
mov
sti
div
fucomi
push
inc
dec
call
stos
sar
jg
aad
pop
adc
mov
jmp
mov
jno
call
mov
push
insb
push
dec
ss
mov
ret
adc
std
push
ja
and
incl
std
dec
out
aaa
enter
jmp
jmp
fcmove
or
xor
scas
mov
mulb
and
je
cwtl
xorl
jg
jmp
fiadds
mov
dec
xabort
mov
mov
pushf
in
mov
rorl
psrlw
adc
sti
ja
mov
mov
sti
jb
cwtl
cltd
fildll
adc
sti
cmp
xor
xchg
cmpsl
icebp
js
fdivrs
xchg
stos
mov
fisubs
jns
lods
rol
mov
sbb
cld
decl
cld
pop
das
cmc
push
jns
aam
mov
scas
aaa
clc
mov
mov
aad
mov
ds
bound
mov
out
test
mov
aaa
out
call
loopne
sub
imul
mov
lds
mov
std
aad
orl
push
sbb
shr
cli
test
divl
push
aas
jne
mov
scas
pushf
testb
testl
ret
out
lea
stc
mov
pop
mov
adc
push
ss
ljmp
xchg
jb
jmp
out
movsb
in
adc
inc
insl
xor
push
push
idivb
jecxz
inc
rcl
scas
jbe
cmp
dec
cs
iret
fisttpll
or
fldcw
mov
stos
mov
jp
push
cmpsb
maxps
sub
aas
enter
rcrl
call
std
lods
push
stos
jno
mov
out
outsb
arpl
adc
inc
jp
and
aad
ljmp
push
shlb
stos
mov
jb
daa
lods
jmp
push
xor
mov
push
mov
jg
enter
shll
dec
mov
push
ja
jmp
loopne
nop
jnp
mov
incl
addr16
inc
jmp
sahf
in
aam
cmp
pop
sub
lods
mov
incl
sub
mov
js
aam
pop
jo
stos
sti
fidivrl
je
push
lret
repnz
mov
lcall
shll
repnz
test
jg
cmp
lds
incl
or
cld
pop
push
fldt
or
push
mov
fcomi
ds
adc
bound
scas
test
cmp
inc
pop
mov
mov
icebp
repz
jg
dec
push
inc
lret
sbb
push
mov
mov
in
cmp
jne
mov
inc
jmp
out
mov
mov
fimull
pop
test
fmuls
mov
pop
pop
cmp
sti
icebp
inc
dec
pusha
jo
in
cmp
mov
je
in
shl
lea
test
incl
icebp
sti
push
sar
ljmp
or
add
iret
adc
sbb
adc
out
fwait
outsl
leave
inc
lcall
out
je
testb
or
fnstsw
scas
test
filds
mov
adc
adc
cmp
mov
jnp
aas
cltd
xchg
lock
incl
jae
scas
in
add
notl
in
repz
xchg
movl
out
stos
add
repnz
adc
sub
daa
sub
mov
jmp
iret
fmul
or
ret
repz
rolb
pop
incl
loopne
inc
ret
loopne
jg
mov
jmp
xor
sti
call
sub
xor
in
nop
insl
aas
adc
lock
sub
sbb
xor
daa
jp
inc
out
movl
dec
mov
jnp
add
fs
xchg
imul
mov
jae
sbb
ret
cmc
call
xchg
leave
mov
push
mov
jae
mov
mov
ret
clc
dec
fistpll
arpl
xchg
enter
call
sub
pop
adc
jecxz
gs
adc
mov
out
pop
push
mov
add
rorb
leave
push
bound
roll
adc
add
adc
mov
inc
push
repnz
xlat
les
mull
jl
fisubs
iret
imull
roll
out
add
mov
push
sub
cmp
clc
call
xor
jbe
xchg
adc
jle
pushf
out
add
mov
test
jge
add
outsl
orb
sbbb
aad
sbb
test
int3
mov
cmpsb
cs
test
dec
call
and
xorb
data16
lret
scas
mov
incb
jno
mov
hlt
mov
lds
hlt
cmp
loope
sbb
incb
or
mov
xchg
push
sti
add
mov
mov
cmpsb
add
std
dec
or
mov
jl
lock
je
pop
xchg
cmpb
arpl
int3
sti
outsl
clc
call
xor
clc
mov
mov
lds
add
shrb
rol
cmp
jg
xor
out
pop
pop
mov
mov
sub
mov
jo
out
scas
lods
jbe
add
lcall
pushf
xchg
sbb
mov
inc
jns,pn
faddl
das
mov
pop
cmpsb
mov
out
out
pushl
cmpsl
mov
orb
in
scas
mov
js
cmp
mov
test
cld
mov
call
xchg
cli
lahf
inc
fninit
dec
das
add
sub
mov
lods
cmp
cmpsl
mov
adc
clc
inc
in
cmc
out
test
ja
or
test
mov
popf
fdivl
aam
inc
dec
push
mov
mov
ret
push
stc
mov
mov
je
pushl
std
inc
movsl
int3
mov
add
pop
rcrb
xchg
pop
insb
jmp
adc
sbb
push
cli
add
call
xrelease
fwait
scas
divb
and
push
mov
movsb
mov
mov
call
nop
iret
xor
inc
mov
adc
cmp
pop
scas
aam
inc
xchg
and
mov
or
ljmp
in
inc
scas
jecxz
ffreep
mov
mov
mov
rorb
das
idivb
mov
jb
lcall
ljmp
push
insl
push
pop
dec
das
jl
adcb
dec
push
popf
sbb
or
ret
sub
dec
and
mov
mov
push
aam
jae
addr16
dec
mov
lahf
push
decl
dec
or
mov
loopne
loop
hlt
loop
cmp
scas
lods
das
dec
mov
mov
jb
mov
sti
xor
jp
mov
jle
les
add
lahf
xchg
lcall
enter
jmp
call
add
mov
scas
sahf
mov
mov
fcoms
shrl
sub
xchg
pusha
add
or
mov
out
ljmp
dec
ja
xchg
mov
or
fmull
jnp
xchg
lret
sbb
sub
pop
fwait
add
mov
testb
jg
jmp
push
mov
bound
mov
lahf
lahf
sti
jbe
or
orl
cli
fucomi
leave
mov
jns
sbb
add
push
fcomip
call
repnz
cld
mov
lods
sbb
jne
mov
add
ljmp
call
inc
fnstcw
test
call
hlt
ljmp
mov
aam
in
mov
xchg
mov
jl
inc
aas
imul
hlt
mov
lcall
mov
inc
mov
std
xchg
cmpsl
dec
imul
xchg
rorb
or
jmp
call
aas
xor
inc
fdivrl
lea
lcall
lcall
int3
mov
add
stos
pop
push
sti
repz
jg
mov
out
add
lcall
mov
cltd
pop
pop
mov
sti
xchg
in
sbb
incl
xor
int3
sbb
mov
repz
gs
lcall
leave
fstl
or
mov
push
jne
sub
call
and
dec
loop,pn
pop
fs
jnp
lret
psrad
cwtl
movb
decl
js
mov
fcoms
jg
repnz
mov
and
pushl
or
add
rcrl
cwtl
jp
cli
mov
in
hlt
dec
mov
mov
mov
sub
adc
pop
and
push
aam
and
ds
mov
fchs
or
popf
ficompl
std
lods
shll
fisubrs
mov
scas
mov
into
mov
loopne
out
jb
js
sub
in
stos
scas
add
nop
mov
dec
call
mov
movsb
ja
les
xor
fcomp
xor
sub
jmp
sub
mov
mov
xchg
sarl
sbb
mov
out
lcall
scas
clc
mov
inc
jp
push
mov
ljmp
std
xchg
jg
jmp
add
repnz
insb
adc
in
cmp
mov
or
into
sub
inc
jae
push
in
or
ss
jg
js
dec
lock
jmp
mov
lret
outsb
out
mov
decl
incb
int
ljmp
stos
and
movsb
xlat
adc
icebp
call
adc
adc
stc
jg
shrb
mov
in
xor
sub
adc
les
lahf
aas
add
mov
mov
mov
jne
je
clc
push
rcl
leave
sti
fcmovne
jecxz
in
mov
adc
aam
cmc
clc
mov
jb
cwtl
test
sub
je
dec
in
lods
call
add
test
movsl
popf
cmp
test
sti
ret
sub
add
mov
adc
mov
aas
call
cmp
jg,pt
repz
jl
lahf
and
jle
push
sar
inc
mov
insb
out
sub
inc
xlat
pop
sbbb
lock
mov
js
jg
and
sbb
nop
sbb
or
mov
movsb
jb
cltd
mov
add
sub
sbb
mov
mov
mov
xchg
jl
mov
scas
cmp
mov
dec
mov
adc
lods
pop
mov
ja
mov
leave
jecxz
add
out
je
enter
inc
mov
cmp
or
push
push
cld
decl
in
xchg
cmp
aad
jmp
idivb
call
mov
mov
push
test
and
mov
aaa
or
or
bnd
das
nop
movsl
das
or
jb
gs
mov
adc
push
ficompl
dec
push
lahf
push
test
push
lods
daa
test
jnp
outsl
rol
jle
mov
rorb
sub
fldl
mov
xchg
mov
nop
mov
movsl
sti
rcrl
cmp
pop
loop
lcall
and
cmp
pop
cmp
in
cld
fs
sub
aas
mov
sub
jp
mov
pushf
sub
data16
fldenv
ljmp
cmpsl
loope
lods
sbb
mov
addl
iret
pmuludq
xchg
jbe
push
mov
jg
lcall
sahf
scas
and
push
sbb
aad
add
inc
cmp
xchg
pop
pushl
sub
dec
cltd
lds
dec
jb
aas
in
out
in
mov
popa
pop
aad
inc
into
test
or
lcall
pop
loope
sbb
int3
ss
push
call
std
add
shll
mov
filds
pop
das
add
cltd
repz
xchg
or
push
dec
stos
decl
out
fistpll
lret
repz
pop
mov
mov
fisubs
mov
dec
xor
pushl
sbb
mov
cmpsb
adc
dec
test
xchg
mov
jmp
mov
pop
lret
addb
and
sub
dec
sbb
imul
sar
ja
sub
push
cwtl
lret
sarl
insb
mov
ljmp
lcall
ret
iret
rcl
push
adc
scas
lcall
scas
mov
fimuls
aam
push
sbb
incl
fnstsw
xchg
mov
mov
pushl
ja
or
cmp
mov
and
sub
add
negb
incl
mov
fs
sahf
mov
inc
adc
call
sub
daa
xchg
mov
repz
mov
xchg
enter
xchg
cmpl
rorl
rol
iret
stc
ret
addr16
or
ja
out
adc
adc
ljmp
sahf
jbe
jbe
sti
or
out
cwtl
aad
xchg
ss
mov
jecxz
sbb
aaa
xchg
cld
stos
test
rcll
rcrl
or
adc
es
jbe
jg
fcmovu
clc
jge
movsl
sti
mov
lcall
out
xchg
js
es
cld
std
ror
pushl
testl
cmc
nop
fwait
lods
lcall
xchg
push
hlt
fldenv
flds
inc
mov
xchg
jmp
jle
call
sbb
lds
lods
sub
lods
xchg
lahf
lea
mov
call
mov
xchg
cwtl
xchg
ljmp
lcall
mov
pop
hlt
out
xchg
lods
ljmp
clc
cmp
inc
push
orl
xchg
popf
nop
popf
add
test
std
mov
add
nop
mov
stos
mov
xchg
out
lcall
fstp
js
sub
ss
dec
and
sub
add
sar
out
xor
cmp
aas
inc
inc
imul
ljmp
pop
jg
push
xor
insb
outsb
fcom
sbb
fildll
out
iret
cld
movsb
or
sti
std
call
ss
add
or
insb
pop
shlb
dec
mov
or
fisubrs
xor
ds
sahf
dec
dec
rcpps
pop
sahf
into
mov
outsb
dec
aas
jg
js
addl
repnz
xchg
fwait
lahf
mov
mov
mov
ror
iret
rcl
add
add
jg
cld
add
aas
push
call
add
jg
dec
iret
sbb
mov
sub
lret
ficomps
add
idiv
sbb
incl
push
pop
lock
cmp
pop
sbb
loopne
xchg
sti
bswap
inc
jns
cli
dec
aas
sub
push
sti
das
add
ja
movq
adc
ja
fisttpll
stos
imull
lea
addr16
fistpl
push
lods
sbb
outsl
popa
mov
push
rorb
stos
mov
mov
mov
inc
fbld
mov
and
xorps
outsb
mov
mov
cmp
mov
cmovg
nop
outsl
or
jle
xchg
arpl
jp
add
sahf
call
add
sub
cmpsl
test
push
or
lret
add
loopne
mov
aas
out
lock
sti
ss
pop
xchg
or
dec
mov
mov
subl
push
jns
fldl
aas
pop
jg
scas
insl
insb
jb
jnp
ja
outsb
add
mov
aas
fwait
mov
insb
add
lods
mov
add
or
add
dec
lcall
ds
pop
pushf
test
adc
cmp
int
mov
outsl
sbb
decl
aas
outsl
lcall
call
test
outsl
loop
dec
pop
int3
rcr
xor
jle
add
or
movl
std
jbe
sti
push
cltd
je
xlat
int
jg
cwtl
movsb
push
or
xchg
adc
aad
pop
fdivs
add
pushl
add
add
je
repz
out
jmp
xor
das
xchg
ret
in
xchg
negl
das
xchg
addr16
incl
pop
and
cmp
aaa
repnz
cwtl
cmp
mov
inc
scas
fimuls
out
mov
std
call
lahf
jae
xchg
sti
xor
cwtl
jecxz
arpl
repnz
or
lcall
jecxz
jbe
xchg
lret
call
clc
fwait
or
scas
adc
fnstcw
fs
out
repz
icebp
out
mov
divl
push
mov
fdivs
mov
sahf
cltd
xchg
cli
adc
mov
test
mov
nop
pushl
mov
dec
push
out
mov
lods
and
stos
iret
lods
stos
mov
ljmp
xchg
xor
andl
call
xchg
fsts
dec
push
push
mov
sbbl
push
in
pop
std
lods
pop
testb
or
sysret
push
add
jp
and
sbb
sbb
sbb
pop
jns
push
adc
fsubrs
add
sub
sub
daa
es
call
cmp
cmp
pop
xor
fidivrs
xor
mov
dec
dec
dec
dec
dec
xchg
push
pop
jns
inc
inc
inc
inc
mov
pop
pop
pop
scas
addb
pop
pop
pop
sub
nop
fisttps
push
jb
out
test
cmp
jl
jg
pop
and
imulb
daa
pop
cmp
popa
cmp
mov
in
or
repz
xlat
imul
inc
dec
cmpsb
mull
cmp
adc
pushf
inc
imul
adc
mov
mov
pushl
dec
xchg
dec
push
in
jge
xor
dec
jge
icebp
mov
fstpt
decl
mov
dec
adc
mov
mov
xchg
nop
lea
std
movsb
rorl
add
roll
hlt
mov
mov
push
out
daa
pushl
jmp
push
push
icebp
iret
jl
rcll
arpl
fs
mov
pop
sub
filds
adc
in
dec
ss
aam
fists
pop
mov
sahf
in
mov
xchg
mov
outsl
mov
fidivl
ljmp
fucomip
adc
add
sub
repnz
dec
mov
nop
mov
call
dec
rcl
pop
pop
js
xchg
ss
lea
imul
inc
mov
mov
outsl
ljmp
in
jnp
xchg
mov
ljmp
or
mov
in
mov
xchg
push
loope
push
adc
dec
outsl
push
and
div
lock
scas
nop
cld
call
xchg
idivl
loopne
bound
lock
cmp
push
fwait
dec
sub
xor
je
stos
cmpsb
shl
iret
test
popf
ret
mov
lcall
mov
mov
mov
mov
ja
mov
js
mov
or
incl
push
xchg
cs
int3
lds
cli
lods
mov
lds
adc
mov
xchg
mov
jmp
imul
fists
jo
dec
cmpsl
jae
sbb
inc
adc
sbb
lcall
mov
fwait
outsl
aam
dec
clc
inc
flds
sti
jne
aam
popf
dec
lods
jge
xchg
lods
push
sbb
pop
cld
pushl
addr16
rcl
test
mov
dec
pop
shl
sti
call
pushl
std
dec
cmp
cltd
pop
mov
add
lcall
out
je
out
adc
clc
cld
shr
pop
xor
mov
mull
ljmp
adc
lret
mov
out
sbb
inc
fistl
out
xchg
out
mov
push
or
mov
stos
stos
mov
sahf
fwait
pop
cld
jne
sarb
mov
adc
testl
call
aas
lock
sub
rcr
scas
jnp
xor
test
popa
or
sbb
movsl
call
gs
cmp
bound
xchg
cs
jae
push
mov
loop
mov
test
scas
jbe
movsb
int
or
hlt
jmp
pop
lock
iret
clc
ss
div
dec
out
ret
dec
in
sbb
and
repnz
dec
call
insb
inc
fists
cmc
ds
jle
cmp
lds
movsl
mov
in
dec
push
mov
adc
cltd
or
sbbb
in
jbe
dec
pop
xor
mov
xorl
jae
movsb
cmp
icebp
rorb
ljmp
mov
dec
jg
popa
in
pop
sahf
xchg
push
cmp
pop
mov
sub
cmpsl
mov
pop
sbb
dec
dec
iret
fstps
ja
fsubrs
les
jbe
jbe
call
xor
dec
lock
in
stos
adc
sbb
aad
in
testl
out
or
testb
mov
insl
enter
mov
ljmp
mov
loop
call
mov
mov
in
mov
idiv
jbe
mov
test
dec
ljmp
pop
movsb
dec
adc
add
cmp
xor
out
aad
ja
add
sbb
or
or
mov
pop
dec
add
insl
mov
mov
or
loope
aad
bound
cld
jg
mov
and
mov
aam
xchg
inc
inc
sub
movsl
sbb
mov
gs
ljmp
fsubp
ja
imul
aaa
jp
add
sub
ja
jne
getsec
push
rorl
into
subb
xor
xchg
sahf
and
pop
subb
inc
jp
out
jnp
popl
nop
sub
decl
icebp
pop
orb
xor
fidivl
jmp
sbb
fwait
adc
jg
jne
data16
mov
sbb
std
mov
mov
add
mov
jmp
cmc
je
and
bnd
jg
cmpsl
sub
xor
and
lods
dec
jns
data16
imul
xlat
add
ljmp
clc
icebp
pusha
jge
adc
and
out
inc
jb
xor
std
pushl
or
loop
dec
leave
push
adc
es
jp
dec
stc
inc
mov
cld
call
sbb
enter
sub
sarb
dec
stos
and
sbb
call
mov
cmc
pop
popf
push
xor
lock
push
pop
lahf
mov
xor
pop
cli
ljmp
push
sbb
das
aam
loope
filds
les
insb
pushf
popf
adc
xchg
cmpsl
cli
add
je
push
aam
test
jecxz
ds
and
mov
std
adc
lods
test
rorb
std
lcall
inc
and
xchg
pop
aad
jo
mov
stc
sti
inc
je
sub
shl
cmc
repz
xchg
lret
inc
push
jmp
aam
inc
push
jne
rcrl
sub
das
jg
cmc
ljmp
xchg
lds
sub
add
orl
test
decl
and
rorl
mov
inc
cmc
jmp
into
sub
sub
mov
jg
decl
fistpl
or
mov
xor
dec
iret
sub
ja
inc
dec
add
decl
in
and
jp
jg
out
into
lods
xchg
data16
cmpsl
call
ret
pop
cli
mov
js
out
fdivl
pop
mov
mov
jbe
ljmp
test
jl
pop
call
stc
pop
push
bound
push
cmp
and
dec
in
lahf
pop
pop
sti
popf
jle
jg
cld
cltd
jle
pop
inc
lret
shr
jbe
mov
cmp
out
data16
imul
cwtl
mov
xchg
testb
xchg
fcomi
and
adc
inc
cmpsl
inc
and
mov
testl
ds
sbb
push
jne
iret
ret
push
sti
add
and
shll
ljmp
add
pushf
dec
ljmp
and
and
cmpsb
mov
xor
and
jg
hlt
sti
push
or
pop
loopne
lods
lods
cwtl
negl
test
mov
jl
sbb
mov
test
inc
imul
pop
mov
sub
cmp
add
je
rcll
jg
jg
xchg
fwait
pop
cwtl
jns
and
or
or
sub
xchg
mov
inc
pop
fdiv
or
mov
pop
or
mov
jbe
sti
mov
xchg
loope
and
pop
push
pop
xlat
sub
xor
arpl
lds
lret
xchg
lock
imul
push
outsl
stc
fwait
insl
les
outsl
daa
lret
incl
leave
dec
loop
push
into
sti
repz
mov
pop
dec
adc
xor
mov
add
jp
adc
fisttpll
sarl
gs
sbbb
adc
icebp
mov
lcall
neg
lret
sub
mov
cmp
sub
jge
in
aas
out
and
ud0
jmp
loop
push
imul
inc
push
add
call
stos
add
mov
ficoml
ret
cmpsb
cwtl
cli
add
xor
fwait
call
mov
cmp
call
xchg
mov
xchg
imul
repz
inc
cmp
xchg
push
jbe
mov
loopne
adc
fisubrs
inc
pushl
inc
jne
dec
add
jmp
lahf
jmp
iret
sbb
scas
les
mov
adc
mov
std
roll
add
movaps
lahf
sbb
call
mov
pop
or
jne
icebp
dec
xchg
cmp
xchg
push
xadd
mov
pop
sub
jns
pop
ror
nop
scas
es
lcall
mov
jb
push
fidivrl
or
lods
lahf
lahf
pusha
aad
dec
not
icebp
popa
decl
loopne
push
rclb
lea
clc
push
hlt
pushf
stos
add
in
sbbl
incl
and
mov
add
or
out
mov
gs
in
test
pushl
sub
xchg
cmp
popf
pop
fdivrs
mov
mov
jae
stc
push
mov
pop
mov
in
loopne
aas
fwait
daa
adc
pop
add
adc
out
call
jnp
out
adc
jno
jmp
jnp
mov
test
inc
aam
mov
cld
call
in
std
cld
cmp
movsl
mov
stos
sbb
sub
stos
mov
mov
cmp
add
inc
js
or
mov
sbb
adc
and
jmp
add
xchg
ja
aam
js
jge
pop
sub
out
out
fdivrl
call
xchg
mov
mov
adc
shll
push
lahf
fdivrl
in
mov
pusha
lcall
aas
inc
mov
sbb
mov
sub
pop
ret
std
mov
jge
or
nop
decl
call
and
mov
roll
inc
cmc
mov
jecxz
jae
das
sub
lcall
pushl
or
jbe
fisubl
data16
pop
ljmp
cmp
pop
and
cmc
clc
lock
roll
and
test
icebp
xor
inc
mov
stos
inc
cwtl
sbb
sbb
lods
pop
jo
add
stos
cmc
mov
icebp
aas
decl
jmp
cwtl
in
mov
int3
mov
ss
filds
jae
addr16
clc
jo
imulb
xchg
jnp
movsb
aaa
jl
fisttpl
mov
pop
stos
and
push
sbb
mov
das
add
fildll
aam
pop
clc
dec
in
in
aad
movsb
sar
lcall
test
push
loop
call
sub
femms
xchg
push
and
jg
mov
mov
jle
pop
xchg
mov
je
repz
sbb
add
cltd
mov
mov
out
dec
mov
add
mov
jmp
nop
inc
add
idivb
ret
pop
std
or
decl
jae
add
cltd
sti
pop
out
test
jmp
add
or
jbe
mov
pop
outsl
or
pop
cld
test
mov
ljmp
cli
lods
jmp
mov
in
stos
xor
mov
stos
clc
movsl
enter
push
mov
fmul
scas
inc
lock
mov
xlat
out
mov
idivl
mov
jo
into
call
loopne
or
cwtl
add
or
mov
xchg
pusha
clc
cmp
ljmp
adc
gs
repz
nop
or
loope
out
test
es
js
ficomps
pop
movsb
clc
jecxz
mov
repz
in
cmc
and
xor
sub
stc
mov
icebp
call
lods
fdivr
mov
jnp
mov
repz
mov
mov
aaa
inc
inc
sub
aad
mov
jecxz
fldl
jge
sub
out
jbe
test
jmp
imul
and
xchg
jno
pushf
and
xchg
enter
out
cmc
fnstsw
outsl
clc
ljmp
xor
loope
mov
mov
ljmp
test
pop
pop
jb
xor
pop
adcl
je
mov
ljmp
pop
call
sahf
movsl
movl
lods
or
mov
movntq
mov
mov
push
ljmp
insb
cmp
jecxz
cmp
mov
call
jg
jnp
add
sub
inc
xlat
jl
decl
ljmp
sub
dec
xchg
cltd
push
cmpsb
rcrb
aas
imul
decl
xor
pop
test
mov
out
mov
jl
sbb
push
pop
add
pop
orb
push
mov
sbb
mov
cmp
jp
bound
decl
incl
jae
ja
sbb
pop
mov
adcl
jno
push
std
xchg
jecxz
sarl
push
adc
or
ret
mov
inc
ds
test
incl
and
mov
or
frndint
frstor
sbbb
xor
sub
ljmp
rcrl
es
addr16
jle
incb
adc
bnd
movsl
cmpsb
je
pop
cltd
call
dec
fidivl
cmc
nop
icebp
in
in
rol
decl
ror
lock
mull
sbb
aas
cmp
cld
sbb
fwait
out
flds
adc
add
bound
jecxz
sub
aaa
std
incl
push
scas
or
mov
sbb
jmp
je
gs
pop
add
push
pusha
inc
sbb
fneni(8087
pushl
mov
xor
aad
icebp
push
scas
mov
repz
cmpsb
enter
and
jl
pop
jmp
cs
add
jb
dec
sti
and
cli
jg
mov
or
pushl
mov
push
in
push
cmc
stos
arpl
pop
adcb
pop
mov
cld
push
mov
aas
popa
cmp
mov
bnd
jg
lods
lock
xlat
ret
test
loop
cltd
add
in
aas
ljmp
sub
or
mov
ss
mov
adc
inc
lret
mov
and
xchg
inc
fcmovbe
mov
fisttpll
js
mov
add
movsb
xchg
jbe
hlt
push
mov
or
in
dec
ret
frstor
mov
mov
push
add
add
clc
push
mov
push
dec
sar
lcall
inc
add
test
sbb
push
dec
dec
incl
clc
sub
mov
shrl
inc
mov
addr16
mov
mov
or
push
loopne
sti
incl
mov
and
rclb
dec
push
mov
imul
not
dec
and
jl
in
jmp
scas
bound
sub
xor
xchg
mov
insb
shrl
pop
push
push
mov
out
cli
fcmovu
xor
lcall
icebp
cmp
lret
push
outsb
scas
test
fists
aam
hlt
inc
inc
out
sti
int3
xchg
movsl
aas
cmp
out
incl
push
mov
add
dec
mov
dec
jge
dec
sub
mov
divb
insb
fistps
xchg
outsb
push
push
sti
pop
shrl
int
repz
outsb
sub
in
sbb
jp
adc
push
ljmp
add
mov
into
leave
mov
into
lcall
adc
xor
and
mov
jmp
sar
xchg
inc
jae
fnstenv
or
test
sarb
pop
fisubl
cmc
arpl
ret
adc
adc
negb
divl
push
insl
scas
jbe
inc
dec
arpl
shrb
pop
cmp
mov
and
or
xor
sbb
call
loopne
mov
jnp
adc
in
and
inc
jns
push
pop
jnp
or
sar
pop
ja
sbb
or
cmp
mov
push
mov
fs
adc
mov
pushl
mov
adc
push
jmp
in
bound
sbb
shrl
jg
call
jb
mov
jnp
fcmovnu
fisubs
add
xchg
scas
sub
mov
filds
mov
cmp
inc
pop
adc
iret
in
jle
jmp
popa
repnz
cli
inc
in
add
add
fcoms
add
cli
xor
inc
mov
mov
add
add
mull
sub
leave
push
dec
push
cmp
fstpt
fs
mov
sub
loop
push
add
cmpsl
mov
mov
jne
push
sub
jmp
or
in
mov
sbb
mov
cmp
popf
xchg
lcall
js
adc
dec
neg
jne
mov
aas
mov
mov
lds
lcall
lock
or
push
jge
jns
sub
sub
test
xchg
ret
stos
mov
cli
inc
aas
sbb
aas
pop
loopne
xor
adc
mov
jbe
mov
or
sbb
push
dec
pushl
mov
sub
and
es
adc
dec
loope
push
sbb
xchg
out
and
xchg
push
mov
mov
or
or
stc
cmc
stos
jmp
stos
loop
pop
jb
hlt
scas
add
xchg
ljmp
decl
sub
cmc
mov
imul
out
push
std
pop
lret
inc
idivl
xor
aaa
cld
ja
mov
std
or
jne
aad
call
or
dec
and
in
into
fcmovnbe
mov
inc
pop
shl
aad
fnstcw
sbb
neg
ljmp
sbb
jb
mov
iret
xlat
xlat
int
pop
xor
lcall
push
jbe
dec
xchg
pop
lds
imul
sti
dec
divl
lcall
call
adc
or
lahf
cmp
add
data16
mov
mov
decl
xchg
push
or
or
mov
aas
pop
out
mov
cld
adc
jns
push
lods
lods
out
add
xor
icebp
and
and
or
mov
cli
mulb
int3
add
loopne
pop
cli
andl
mov
cmp
aas
pop
sti
jg
lock
cli
iret
iret
test
arpl
sub
outsb
or
xchg
imulb
ja
cmpsl
les
nop
pop
repz
jl
in
mov
jg
incl
pop
xor
inc
mov
mov
jle
adc
or
fcmovb
mov
adc
out
and
pop
xchg
cld
movsb
adc
rorb
aam
ret
xchg
jecxz
out
xchg
sahf
mov
or
jbe
in
inc
adc
jg
adc
jge
in
mov
in
adc
lock
shll
mov
sbb
jns
fbstp
jmp
sti
icebp
cmc
add
jmp
sti
and
lods
mov
and
mov
inc
loop
mov
and
cmc
add
cli
adc
mov
push
nop
and
jge
mov
inc
jno
out
jg
lock
mov
arpl
lock
mov
adc
push
cmpsl
xor
repnz
aaa
std
cltd
push
rcr
mov
mov
cld
dec
cmpsl
aaa
cmp
xor
jg
cmp
test
pop
in
adc
sub
xor
in
pop
or
hlt
sub
cli
pushf
div
inc
shl
adc
push
xor
test
sbb
sarl
push
add
inc
and
rorb
mov
ret
pushf
add
jns
mov
mov
mov
mov
adc
dec
aas
add
mov
mov
jbe
pop
jns
cld
popa
sti
fildl
adc
pop
iret
out
or
cmp
rcrb
repnz
fdivr
fstpt
xchg
mov
adc
mov
xor
lret
out
jnp
push
rol
sti
cmc
mov
and
xchg
call
adc
call
cmp
shll
icebp
mov
or
call
outsl
lea
cmpsl
test
xor
stos
dec
out
lock
stos
insb
mov
jecxz
addr16
test
jmp
rorl
mov
sub
push
or
dec
sarl
lock
aas
inc
sub
add
and
lret
and
shrl
ficompl
les
adc
jnp
into
and
and
idivl
ret
fs
ss
add
dec
push
int
adc
in
cli
repnz
mov
jp
scas
jbe
inc
test
sbb
into
cli
or
subb
fisttps
adc
sub
pushf
insb
insb
mov
fildll
dec
adc
mov
sbb
lcall
sub
jmp
adc
add
out
sahf
cmp
push
pop
mul
pop
cld
jmp
out
sbb
dec
aad
sub
jp
pop
mov
cmp
mov
js
pop
xor
xchg
pop
mov
pop
daa
inc
jb
cmp
pop
cld
pushl
and
sarl
add
sub
in
mov
mov
test
xorl
incl
cltd
aad
mov
mov
sysret
je
popf
in
lds
and
fildl
sub
inc
fmuls
fisubrs
test
jl
push
mov
divps
decl
in
mov
decb
jae
dec
jge
addb
mov
gs
xorb
mov
cs
cmp
and
and
cltd
sub
jg
xchg
cld
pushl
xor
mov
cmp
les
mov
call
and
mov
mov
rorl
loopne
iret
xor
shlb
lcall
jecxz
stos
cld
or
daa
and
cld
pop
cmp
jle
push
outsb
clc
stc
movsl
or
test
ss
lock
inc
mov
cmpsb
mov
cmp
pushf
sub
out
fstp
into
sbb
push
cmp
mov
jp
cmp
scas
nop
or
dec
sbb
pop
or
insb
sbbb
std
mov
lcall
mov
pop
mov
inc
jle
dec
in
mov
repz
pop
das
xor
clc
flds
decl
sbb
punpcklwd
outsb
pop
cltd
fs
hlt
push
mov
nop
jp
dec
jmp
xchg
mov
test
lods
xlat
add
and
cli
cmpsb
mov
jmp
pop
cmp
mov
shll
mov
dec
je
fldcw
adc
iret
addl
aaa
subl
arpl
icebp
hlt
in
in
mov
mov
cwtl
inc
or
in
or
jmp
mov
sti
push
push
mov
incl
pushf
dec
arpl
cli
mov
sarb
inc
nop
aas
push
xchg
incl
insl
mov
paddusw
popf
jae
fcomi
xlat
cmp
xchg
jp
dec
ret
jae
mov
ljmp
mov
jmp
out
out
ret
imul
push
mov
stos
push
out
pushf
pop
in
fdivp
in
scas
fdivrl
adc
in
mov
fwait
repnz
in
lock
ljmp
stc
aas
xor
mov
mov
fwait
or
addr16
xor
push
mov
decl
sub
or
out
popa
inc
cmpsb
shrb
add
sti
sbbl
pop
xchg
decl
call
pop
pop
jo
inc
push
icebp
jmp
shl
lret
fcoms
or
ljmp
out
jg
std
test
xchg
jnp
mov
aas
out
mov
dec
fcos
cmp
decl
repz
dec
repz
imul
jb
or
addb
lahf
test
jg
lcall
out
mov
mov
test
inc
addl
fldt
adc
push
cs
pop
scas
and
pop
out
jb
or
fcompl
sbb
daa
push
jecxz
clc
and
repnz
adc
lahf
and
stc
cmpsl
inc
adcl
jg
lods
imul
pop
pushf
or
jecxz
sub
nop
mov
mov
mov
pushl
stos
inc
repz
jle
mov
and
rcll
andb
jg
decl
dec
cld
sub
in
and
pop
jl
xchg
aaa
ss
lcall
insb
or
cmp
cmp
inc
mov
cld
cmp
clc
insl
pop
sahf
andb
popf
sbb
in
in
cmp
das
scas
push
enter
or
aaa
xchg
into
pop
addr16
out
adc
int3
mov
or
jne
mov
sub
xor
sbb
xchg
das
clc
inc
push
stc
mov
push
cld
or
adc
js
mov
fcmovne
adc
arpl
mov
mov
iret
mov
mov
pop
xchg
dec
outsl
cmp
sarl
fwait
lcall
xor
out
adc
in
add
mov
add
call
insb
roll
or
push
mov
lret
xchg
inc
sti
fisttpll
outsl
subb
lahf
sub
sbb
decl
lret
jns
ret
pop
or
pusha
je
jmp
mov
decl
repnz
cmp
movsl
lock
jecxz
stc
push
pop
and
mov
loop
aaa
incl
jmp
mov
mov
daa
sbbb
fnstenv
imul
pushl
dec
lock
adc
dec
test
jp
pop
test
stc
inc
cmp
lock
stos
loope
je
std
stc
jns
clc
testb
adc
jne
enter
ljmp
push
push
or
dec
dec
adc
lret
pusha
sbb
dec
mov
or
ja
and
cltd
test
incl
sub
daa
adc
repz
scas
cmpsl
fmull
inc
es
dec
sti
lock
pusha
clc
inc
ss
push
mov
bound
mov
out
daa
cmpsl
popa
add
aam
or
dec
dec
daa
xchg
in
or
inc
xor
adc
out
jle
rolb
mov
push
bound
test
das
push
repz
lahf
inc
pop
mov
mov
xchg
lcall
xchg
and
adcb
adc
ror
clc
fs
inc
or
lds
push
popf
pop
mov
fistpl
sahf
ss
incl
jnp
clc
mov
cmpsb
rcrl
add
jg
int
das
fbstp
inc
jl
out
das
mov
mov
call
cmc
jp
mov
cld
call
lea
in
icebp
adc
repz
mov
nop
pop
nop
idiv
mov
inc
lret
ja
adc
mov
inc
decl
inc
mov
mov
lret
dec
enter
sub
or
ja
cmp
testl
int
mov
not
add
je
jo
int
leave
mov
loop
lcall
cmc
divl
sti
cmc
adc
les
sbb
cmc
push
int3
test
mov
and
mov
inc
dec
sbb
filds
jmp
insb
mov
rcrl
lods
pop
xchg
sbb
les
repz
aaa
push
inc
fidivrs
sbb
push
loopne
sub
sbb
std
std
clc
inc
jne
dec
orb
inc
call
arpl
into
push
lcall
cmpsl
mov
test
std
sub
aam
clc
pusha
and
xchg
test
sbb
dec
loop
ljmp
ljmp
adc
pop
jecxz
cld
and
xchg
jg
jb
xchg
call
mov
mov
inc
test
es
dec
das
mov
pop
std
cmp
cmp
divb
mov
dec
inc
bound
dec
lods
xchg
and
adc
out
xlat
and
cmc
jns
out
mov
out
sbb
lret
or
incb
jge
mov
gs
mov
out
mov
ljmp
mov
mov
fstps
or
repz
lcall
cmp
add
jmp
add
stos
inc
inc
sbb
push
cli
pop
pop
inc
imul
mov
mov
inc
rclb
cmpsb
mov
pushf
sub
push
mov
jnp
pop
popf
outsb
sar
adc
sbb
les
pusha
ljmp
clc
adc
jno
loop
or
or
rclb
shr
out
ds
stos
mov
in
or
aas
leave
out
mov
jmp
stos
loopne
insb
add
test
xchg
cli
ds
cmp
std
shr
mov
pop
xchg
xchg
insb
lea
and
icebp
push
fwait
jnp
sar
add
ja
xlat
jbe
mov
jbe
jmp
neg
cmp
inc
sahf
stos
mov
jg
push
sub
push
and
std
out
cmpsb
out
clc
incl
aam
xor
out
outsl
cmpsl
cmp
jp
in
and
aad
jecxz
xor
cmp
cmpsl
pushf
mov
jle
jmp
jge
xor
clc
sbb
clc
enter
lcall
popf
add
push
fcomip
sbb
sarb
mov
mov
pop
call
repz
out
dec
std
adc
cmp
dec
dec
popf
mov
fldenv
xorl
jp
sbb
mov
adc
rclb
ja
cld
andb
je
cld
xor
call
cmp
xchg
fiaddl
mov
cltd
pop
subb
lods
xchg
inc
pop
stos
jmp
adc
jae
enter
dec
decl
stos
cmpsl
incl
mov
cmpsl
scas
out
outsl
mov
js
jl
shr
mov
jl
pushf
sub
fcmovnbe
out
mov
add
aam
cld
aaa
aad
push
xchg
aas
fwait
cld
jbe
fildll
mov
aaa
in
testb
stc
repnz
jg
mov
xchg
mov
lcall
cmc
mov
sti
and
cmp
inc
cmp
jecxz
mov
pop
push
call
push
lock
jae
jge
cmp
ja
fidivrl
mov
mov
lret
mov
incl
cli
insb
push
test
je
mov
jecxz
aas
test
pop
jp
fcomip
jmp
push
emms
jno
addb
inc
daa
add
shll
xor
jmp
adc
push
push
sti
into
dec
test
pop
into
imul
adc
or
fidivrs
inc
movsb
jne
js
push
pop
jle,pt
cvttps2pi
or
inc
lea
cmp
cmp
fcoms
adc
and
icebp
dec
jl
fwait
icebp
je
leave
enter
mov
xor
insl
aaa
adcl
jmp
test
gs
jg
mov
xchg
inc
and
aaa
mov
pushl
push
cmp
cmpsb
cltd
and
cmc
ret
mov
jg
jo
fistps
cmc
decl
fdivl
insb
jno
decb
hlt
or
scas
lahf
cmc
rorl
jecxz
lcall
scas
sbb
inc
into
sbb
pop
fs
jne
fcompl
push
sbb
lcall
mov
dec
lcall
mov
stos
jmp
fsubs
dec
mov
test
es
and
sbb
sub
dec
call
fbld
psubw
mov
sti
xchg
fstpl
cltd
popf
out
ljmp
lcall
js
idivl
mov
add
cltd
hlt
pushl
pusha
jmp
in
fildl
cmp
mov
aad
jg
mov
jg
push
cld
cld
jnp
dec
inc
js
xchg
sub
push
add
scas
mov
mov
fcoml
add
jmp
jecxz
ljmp
incl
jl
cld
cmpsb
aaa
cld
out
sub
dec
int
jo
xor
in
sti
into
xchg
adc
incl
lods
int3
add
xlat
sbb
pop
mov
inc
mov
push
jecxz
adc
test
jmp
scas
sar
jg
push
out
icebp
repz
adc
pop
xor
rclb
dec
pusha
dec
call
pusha
xchg
outsb
push
ljmp
push
pop
fists
insl
cmp
cmc
lcall
cwtl
out
iret
mov
dec
sbb
pop
lret
dec
decb
cmp
int3
push
xor
loop
jbe
out
sbb
fsts
cmp
repnz
dec
sub
adc
fsubs
sub
sti
aas
cmp
mov
loop
push
mov
loopne
adc
out
out
out
ja
clc
push
notb
mov
clc
cwtl
adc
stos
mov
jmp
pop
int
adc
push
icebp
jne
mov
jg
and
or
bound
repz
movsb
fdivr
pop
hlt
incl
pop
and
jb
and
xchg
insl
jb
in
test
dec
scas
cmp
cmpb
mov
into
scas
and
insl
push
scas
dec
sbb
scas
jge
or
lcall
imul
jmp
ss
ljmp
arpl
jl
cmpsb
inc
mov
mov
je
mov
lahf
push
fdivs
fucomip
cmp
add
adc
test
sub
sbb
stos
xchg
hlt
sbb
dec
cli
incl
arpl
adc
outsb
aad
add
nopl
sti
mov
lock
mov
mov
add
decl
mov
sti
lret
mov
xchg
enter
adc
add
aas
into
push
insl
sbb
jle
loope
mov
adc
sbb
testl
rcrb
mov
jno
and
cmp
loopne
adc
dec
imul
call
in
fxtract
stc
jg
push
es
frstor
es
fildll
cmp
dec
shlb
lods
stos
call
and
jbe
loop
out
int3
mov
and
jg
adc
jl
shlb
and
adc
cmp
cmp
lock
leave
call
incl
daa
mov
jl
ret
xchg
sti
test
xor
setne
and
pop
std
sbb
call
out
movsl
cmp
add
mov
xchg
cld
scas
sarl
incl
inc
mov
mov
outsl
in
mov
ss
std
inc
sbb
mov
ret
shlb
mulb
cmp
pop
arpl
call
repz
cmp
pop
mov
adc
jne
sarl
mov
iret
sub
jge
popf
stc
jno
push
push
das
incb
sbb
mov
mov
cltd
fisubrs
rorb
aaa
iret
stos
inc
fbld
inc
add
rsqrtps
cld
mov
out
mov
push
pop
adc
and
iret
cld
adc
inc
mov
lock
mov
jl
insb
push
or
adc
scas
inc
sahf
fs
iret
iret
aaa
and
push
cmpsb
mov
icebp
lret
xchg
outsb
nop
sti
adc
in
mov
addr16
iret
insl
adc
inc
outsl
cmc
mov
out
out
dec
divl
mov
jg
dec
xchg
in
rcr
fstp
popa
jae
sar
mov
cmp
lahf
cmp
xor
incl
testl
sbb
out
daa
and
out
mov
clc
adc
push
jp
out
push
sbb
cmp
clc
lretw
xchg
adc
lods
notl
not
dec
lcall
dec
mov
sub
mov
in
mov
je
inc
out
mov
stos
jle
cld
call
addr16
pop
sbb
in
sbb
hlt
mov
jb
dec
add
loop
in
cmp
std
pushl
cmp
das
adcb
ret
jecxz
icebp
loope
mov
jl
orl
rcr
xchg
add
jp
cwtl
cmp
cmp
jl
sbb
push
dec
movsl
or
dec
rcll
aad
mov
add
mov
jmp
cmp
push
pop
cmp
lret
imul
sti
adc
repnz
outsb
add
out
aam
incl
testb
jnp
aaa
or
jo
icebp
push
mov
incb
and
call
mov
enter
scas
fstpt
or
or
cmp
pusha
push
add
scas
adc
ljmp
orb
xchg
pop
mull
mov
xchg
out
cmp
inc
gs
push
mov
test
lret
cwtl
push
aad
cmp
jb
jge
mov
push
add
push
std
pushl
cltd
aad
adc
jg
rcrb
insl
decb
pop
sbb
mov
icebp
cmp
iret
bound
imul
ljmp
jge
test
aam
stos
sub
add
aaa
mov
push
and
and
lods
xor
lcall
jne
popf
mov
cmp
mov
xchg
xchg
xchg
stc
jae
lock
jnp
cld
incl
lahf
mov
in
imulb
stos
pop
notl
push
mov
pop
test
xor
or
mov
inc
out
jl
idiv
mov
and
ljmp
jnp
stc
fs
sbb
pop
ljmp
cmp
stos
in
lahf
mov
repnz
inc
ret
jbe
xrelease
ret
rol
mov
stos
ud0
jmp
lods
pop
das
add
jnp
stc
out
mov
adc
mov
push
sub
fs
icebp
call
arpl
or
sahf
scas
xlat
push
fdivp
aaa
icebp
xchg
adc
hlt
lea
or
add
idivb
call
cltd
rcrb
fldl
xacquire
xor
jg
lock
push
repnz
dec
jb
jge
clc
incl
xlat
dec
or
repz
orb
sbb
cmp
jmp
in
jg
xchg
scas
inc
stos
mov
or
sahf
fisttps
out
outsl
aaa
cld
mov
pop
inc
in
inc
sub
sbb
or
xchg
cmp
popf
gs
scas
inc
fwait
push
cltd
nop
cld
stc
outsl
xor
xchg
xor
jb
je
lcall
ljmp
ret
mov
repnz
int3
mov
adc
mov
fucomi
sti
decl
lock
rcr
loop
sub
adc
dec
cld
cmp
sti
sti
cli
stc
clc
imull
decl
xchg
ret
ds
inc
push
cli
pop
ja
scas
je
cmp
lcall
aaa
cld
divb
out
cmc
push
lahf
imul
xchg
out
sub
clc
sub
test
cmc
push
outsl
fldenv
jnp
adc
mov
call
adc
jg
pop
mov
dec
sbb
mov
and
or
inc
push
xorb
inc
lock
jb
ljmp
jmp
jbe
incl
cmp
sbb
xor
cs
loopne
pop
dec
xor
repz
sbb
xor
cmp
jae
cmc
call
jle
inc
push
sarb
jo
add
into
outsl
subb
inc
arpl
ljmp
int
pop
outsl
fucom
jae
inc
add
jo
dec
cmp
and
push
fstp
and
jns
outsl
shrl
mov
stos
sbb
mov
das
jl
add
clc
push
adc
icebp
cmc
mov
and
repnz
cmp
lea
decl
pop
pop
dec
iret
sbb
fimuls
popa
sbb
lods
push
and
push
jmp
pushl
push
and
out
insb
jecxz
outsb
pop
fsubr
or
fcomps
push
call
inc
imul
rcrb
aad
aad
xchg
aas
jmp
inc
jo
sub
decl
scas
daa
xor
das
mov
or
sti
inc
lds
movq
mov
ljmp
jg
sub
pop
lock
rol
js
out
ljmp
mov
arpl
cmpsb
adc
mov
enter
clc
nop
pmaxsw
mov
out
aaa
xor
ljmp
push
inc
jg
lcall
cmp
pop
adc
pop
push
pop
adc
loope
xchg
outsl
insl
sti
fdivr
mov
stc
stos
lcall
add
or
and
loope
inc
push
negl
jmp
out
sub
inc
and
cli
testl
mov
ljmp
mov
dec
push
call
or
jnp
sub
pushl
bound
cmp
or
mov
leave
icebp
fcoms
mov
add
cld
jns
outsb
mov
shll
loopne
jmp
inc
sub
xor
mov
lcall
aad
cli
lcall
out
daa
mov
lcall
dec
decl
add
das
fisttpl
jne
stc
jmp
mov
repz
je
xchg
test
pushl
aad
aas
fsubrl
in
jne
iret
jle
shl
repnz
out
jnp
jnp
fisttpl
xchg
es
jg
pushl
dec
cld
clc
add
dec
sti
insb
std
je
aas
mov
js
mov
mov
inc
xchg
jo
in
adc
cmp
ss
clc
bound
xchg
movsl
mov
cmp
sub
test
add
loop
mov
mov
in
mov
mov
jb
test
dec
adc
lahf
push
int3
out
cmpsl
outsb
cmc
loope
repnz
jge
mov
mov
ret
jnp
pop
mov
in
mov
dec
call
call
cmp
fadd
mov
sub
decl
loop
mov
push
jae
in
jbe
in
jecxz
xchg
rcrb
inc
inc
sub
daa
mov
sub
pop
loope
icebp
inc
push
mov
in
lds
ljmp
jmp
testl
cmpsl
out
jle
mov
dec
mov
stc
call
sub
xor
lock
std
inc
dec
lock
mov
int3
in
and
call
notl
scas
push
mov
call
stos
sbb
mov
mov
sti
jl
jg
data16
iret
clc
xor
lcall
cmp
lahf
daa
add
xchg
cmc
out
fildl
jecxz
mov
daa
repnz
decl
cwtl
fidivrs
cmpsl
pop
xor
add
sbb
jmp
inc
jecxz
cwtl
fwait
or
mov
jnp
ds
incl
jmp
jo
mov
or
jb
cmp
lret
jmp
movsl
loopne
sbb
adc
in
pop
int
mov
mov
push
enter
jne
fnsave
filds
js
cmp
faddl
xorb
mov
pop
add
jl
xrelease
dec
jl
movsl
decl
pop
iret
int
adc
pop
push
cmp
outsb
sti
xor
lock
lock
cmp
mov
incl
pop
lcall
sbb
inc
pop
jae
xchg
filds
sar
loop
xor
mov
or
icebp
pop
jge
nop
mov
mov
mov
inc
fdivs
sub
ljmp
cld
xchg
out
std
clc
in
add
loope
and
movsb
pusha
lock
push
mov
jecxz
aaa
fiaddl
lcall
sahf
pop
frstor
mov
imul
daa
xchg
and
mov
mov
movl
dec
lcall
xor
enter
enter
in
ja
add
outsb
push
mov
cli
or
cld
das
and
fcoml
and
in
mov
cmp
jo
pushf
cmp
or
jns
loopne
cmp
xlat
push
pop
incl
dec
in
mov
xor
and
test
mov
in
in
cltd
pop
jl
jg
decl
jbe
sahf
daa
pop
ret
aaa
gs
clc
jae
das
inc
inc
iret
inc
testl
out
enter
push
push
xor
decl
or
sbb
push
mov
jecxz
inc
mov
cmp
mov
call
decl
xlat
pop
lock
ja
and
mov
jb
cwtl
and
loopne
push
ja
std
mov
or
pushf
lret
enter
daa
std
insl
clc
pop
jo
xchg
adc
std
inc
call
incl
mov
imul
roll
sti
inc
push
mov
adc
xchg
mov
xchg
lcall
pushl
aas
pop
xchg
aad
imul
mov
mov
out
clc
decl
mov
lods
jg
and
jo
mov
pushl
push
dec
pop
stc
pop
shll
jle
pop
jmp
ret
jg
stos
cmova
adc
add
incl
cld
xchg
xlat
enter
insb
or
cmp
idiv
pop
dec
roll
push
out
in
add
push
jae
rolb
je
sbb
sbb
sbb
stos
gs
fidivl
and
sti
pop
data16
loope
dec
scas
sbb
flds
inc
outsl
sub
rcll
idiv
daa
inc
imul
insl
jl
dec
out
inc
sbb
repz
das
inc
arpl
mov
jg
jg
inc
jg
pop
iret
inc
aas
jbe
xor
mov
sbb
aaa
repnz
clc
sbb
mov
fistpl
mov
pop
jp
cmpl
sbb
das
test
xor
stc
out
xchg
inc
stos
pop
inc
sbb
sub
fwait
mov
adc
ja
loope
xorb
rsm
jecxz
shll
mov
jg
pxor
rep
std
loop
rcrb
sbb
and
sub
inc
mov
aas
fwait
rol
push
xchg
fistps
aam
push
cmp
mov
jg
jecxz
mov
loopne
stos
mov
lds
mov
loopne
mov
faddl
decl
daa
cld
decb
mov
sti
shll
cld
push
push
or
lret
dec
adcl
testb
in
in
adc
jl
mov
dec
shl
js
jge,pn
inc
mov
cmp
xchg
addb
scas
je
cmc
mov
sub
lods
xchg
dec
repnz
out
cli
mov
inc
jo
inc
sub
cld
sub
dec
jl
xchg
movsb
mov
push
fcom
mov
jmp
in
int
lahf
in
push
mov
sahf
mov
mov
test
pop
mov
or
faddl
les
cmp
mov
add
dec
xor
add
scas
cli
decl
cmp
cmp
jno
cmpsl
jle
lret
jmp
and
ljmp
mov
fidivrl
test
cmpsl
push
inc
mov
cs
js
dec
adc
pop
movsb
jnp
in
je
xlat
ds
mov
mov
mov
cmp
mull
aaa
pop
dec
mov
cld
ret
mov
mov
cmpl
incl
ret
lret
pop
push
loope
movsl
xchg
pop
mov
push
pop
cmpsl
pop
adc
pop
icebp
ljmp
dec
mov
movsb
daa
aas
mov
mov
imul
push
aam
call
mov
enter
add
cmp
inc
pushl
push
call
mov
jge
xlat
xchg
js
inc
dec
mov
out
in
arpl
pushl
jnp
pusha
xchg
xchg
sarb
popf
setbe
adc
outsb
shlb
in
push
xchg
decb
inc
mov
int3
movsl
jmp
fcomip
cmp
pop
mov
jae
mov
fsubp
add
jg
cld
popa
fildl
in
sbb
xchg
rorl
adc
dec
flds
idivb
mov
push
adc
mov
sub
les
mov
repz
mov
incl
sbbl
jbe
cmp
pop
or
jmp
xchg
add
in
ljmp
je
dec
out
adc
test
stos
mov
xchg
idiv
jp
lret
xchg
dec
fwait
orl
stos
dec
out
repz
jae
cmp
cmp
or
popl
icebp
movsl
sahf
sub
cmp
in
pop
add
pop
lahf
mov
jmp
jecxz
inc
pop
push
fwait
dec
jecxz
mov
dec
add
les
aad
jns
cmpsl
stos
mov
ss
dec
sbb
adc
shrl
jmp
xchg
lcall
cmp
mov
shr
and
scas
out
cmp
cmp
adc
jmp
int3
adc
pop
decl
pop
les
scas
bound
sub
cld
pop
push
repnz
pslld
cmp
mov
lock
ljmp
inc
xchg
pop
out
stos
cmp
out
movsb
cmpsl
bound
clc
adc
jp
int
dec
int3
ret
loope
in
out
pop
pop
ja
shlb
xlat
js
jge
mov
sbb
dec
add
icebp
pushl
ret
mov
arpl
cli
cwtl
scas
fcoms
jl
jecxz
aas
fs
daa
cmc
cmp
cld
cmp
addr16
mov
dec
lods
loop
bound
js
jae
pop
cli
mov
sti
inc
faddp
mov
adcl
xchg
fnstsw
rclb
push
incl
aad
shll
mov
lods
adc
cs
mov
es
data16
push
sub
jle
pop
out
ds
out
jp
cmp
test
sarl
jmp
cmp
cmp
push
lds
hlt
fildl
rorb
insl
lock
out
out
mov
test
aas
push
sbb
in
xchg
ds
jmp
cmpsl
out
test
xchg
jecxz
sub
decl
adc
in
loopne
mov
xchg
pushf
scas
daa
mov
andl
pop
lahf
les
mov
lcall
enter
add
inc
cmp
pushf
fwait
test
push
adc
and
out
mov
int3
push
cs
iret
push
mov
clc
jno
icebp
mov
ss
sub
cmp
jecxz
cmp
adc
lcall
repz
and
sub
inc
sti
mov
inc
add
ret
xchg
lea
mov
mov
loope
sbb
jecxz
loope
sub
xor
xor
xor
clc
mov
mov
dec
ds
sbb
push
inc
adc
mov
inc
popa
imul
loope
pop
popa
fwait
insb
icebp
sub
decl
and
inc
jns
scas
dec
stos
xor
jp
xchg
dec
test
cmp
ficompl
dec
ret
and
int3
or
mov
les
mov
cmp
std
fbld
xlat
jmp
fisttps
mov
sub
bound
sbb
decl
lock
adc
pop
push
jmp
or
and
decl
and
mov
jg
jmp
cmpsb
lods
or
mov
mov
rorl
pop
mov
sbb
pushl
jmp
jns
cs
insl
inc
daa
call
ret
fsubl
das
jno
inc
xor
jecxz
lcall
sub
mov
mov
jmp
adc
mov
dec
cmpsl
dec
jo
jae
divb
inc
gs
xor
cs
int
imul
jbe
pop
stos
sub
outsl
jg
sub
cmp
out
mov
sahf
sub
jnp
sbb
sbb
aaa
lcall
pushl
std
dec
cmp
sbb
sbb
ss
int3
bound
adc
pushl
rep
cmp
cld
aaa
jmp
repz
mov
jg
jecxz
mov
outsl
mov
mov
outsl
fdivrl
jnp
pop
pop
mov
mov
sub
mov
int3
outsb
adc
rolb
rol
mov
mov
xlat
inc
daa
cmp
in
outsb
insb
popf
data16
pushf
and
mov
jg
inc
inc
xchg
xor
idivl
lret
lcall
outsb
clc
mov
sar
leave
test
das
add
js
jle
fwait
outsb
nop
mov
sub
clc
inc
fdivrp
mov
fiaddl
incl
rorb
cmp
and
das
mov
inc
call
shl
mov
xor
adc
adc
repz
adc
or
je
jmp
mov
mov
pop
popf
jecxz
out
inc
add
add
fistpll
and
shll
int
jecxz
data16
test
arpl
ljmp
test
fistpll
lds
push
gs
jp
test
movzwl
decl
imul
enter
pop
jb
add
cmp
ss
jg
add
or
aas
mov
call
xor
mov
cmp
ds
not
push
out
lret
sub
mov
fs
jmp
xchg
jecxz
hlt
mov
push
lcall
jg
jmp
aaa
sti
or
jmp
fstl
out
cld
xlat
jnp
testl
outsl
sbb
mov
jmp
call
and
push
pop
std
cmp
push
fdivrl
pushl
out
data16
add
xchg
daa
lret
setle
incl
ljmp
and
inc
jg
xchg
cld
sbbl
addr16
outsb
mov
push
arpl
jg
fwait
insl
xor
or
inc
or
mov
shrb
xor
fcos
out
int
cmp
aaa
and
xor
insl
push
adc
out
fwait
inc
push
pop
subl
insl
ret
jmp
or
sbb
ss
adc
sbb
lret
push
cmc
sti
jg
int
xor
shll
push
xor
fwait
or
fwait
fisttps
nop
mov
xor
outsb
inc
or
jne
xchg
decl
fdivs
nop
mov
out
ror
mov
add
scas
cli
pushl
fwait
inc
cwtl
mov
in
cmpsl
nop
lea
sbb
mov
lea
loopne
cwtl
mov
jnp
cld
fdivl
sarb
mov
xchg
dec
fnstenv
mov
loopne
loopne
ds
add
add
or
incl
fimuls
lret
push
enter
repnz
mov
rclb
enter
cld
jg
dec
and
mov
in
xchg
jge
fcos
decl
cmp
shl
icebp
dec
xchg
and
lahf
or
or
add
sti
out
add
sub
outsb
push
call
add
jnp
inc
pushl
clc
xchg
jl
adc
push
adc
mov
icebp
mov
fbld
fildll
lahf
cwtl
jmp
mov
lcall
add
dec
sar
mov
pop
ja
mov
pop
xor
outsl
xchg
lock
cld
decl
fsubs
push
pop
insl
je
cmp
ss
cld
add
pop
data16
testb
cmp
jns
mov
cmp
sti
mov
fwait
and
filds
sarl
or
add
xchg
pushf
test
mov
mov
cmp
fidivs
out
int
lret
nop
test
jg
jl
sub
xor
lcall
mov
cld
ljmp
lock
int
icebp
cmp
pop
out
cmp
call
jg
sub
jo
pop
sbb
scas
das
sbb
or
pop
mov
jp
jg
push
cmp
fstps
mov
cmp
xchg
test
push
jbe
fmull
jo
jae
std
mov
mov
lcall
decb
sti
inc
out
es
mov
xchg
xor
xchg
popf
add
call
pushl
pop
sbb
sbb
cld
mov
cs
mov
out
cld
enter
lcall
arpl
outsl
pop
fstps
dec
sbb
sbb
nop
pop
inc
mov
jmp
shr
ljmp
std
js
and
cmp
pop
mov
jl
mov
add
stos
stos
fistps
icebp
aam
repz
adc
dec
add
aaa
sahf
pop
mov
adc
fnstsw
mov
sti
mov
mov
fidivrl
cmc
add
stc
cmc
mul
loope
and
add
add
jnp
insl
sbb
aaa
push
rsm
rolb
pop
ret
mov
pushf
loop
hlt
sub
fwait
pusha
test
clc
insb
adc
cmp
sbb
lahf
shl
dec
push
fadds
into
add
mov
sysret
pop
roll
aaa
and
xor
outsl
cli
incl
mov
daa
add
sub
pop
cmpsl
inc
aaa
push
sbb
call
inc
adc
xchg
push
jne
test
xor
mov
jle
mov
cld
jmp
adc
fbstp
dec
mov
sub
push
jmp
es
xor
jbe
das
repz
cmp
inc
daa
and
es
lods
ljmp
std
ds
icebp
ja
ja
daa
loope
in
out
sub
aad
mov
call
push
jne
pop
je
pop
ret
inc
jle
popa
adc
mov
icebp
mov
dec
cmp
mov
pushl
repz
test
sub
in
je
or
jecxz
cli
out
aaa
inc
or
push
push
jo
std
ljmp
scas
push
jge
or
jp
adc
mov
out
cli
icebp
shrl
xor
ljmp
ja
sub
out
mov
or
pushf
push
decl
std
movsb
pusha
pop
scas
aaa
push
cmp
ds
cld
jmp
std
repz
jl
lock
jmp
mov
jle
ljmp
aas
mov
jns
or
dec
hlt
std
jg
mov
loopne
adc
movsb
out
dec
jp
xchg
call
cmc
lcall
dec
dec
ret
das
jae
xchg
in
lods
fmulp
pop
insl
sub
das
jmp
pop
add
mov
hlt
or
clc
ja
xor
xorb
aaa
std
rclb
or
lock
scas
adc
mov
mov
adc
decl
fcoml
fbstp
dec
rorl
bound
shlb
xchg
mov
stc
push
pushl
dec
cltd
mov
mov
mov
sbb
and
decl
enter
std
adc
sbb
fsubrs
mov
rol
mov
jae
mov
mov
cmp
divb
lods
mov
inc
mov
pop
or
sbb
jp
ljmp
push
lret
ret
adc
roll
fiadds
aas
decl
int
mov
lcall
lods
rclb
insb
pop
cmpb
sub
call
mov
dec
adc
aad
cmc
imul
lds
mov
scas
test
fidivrl
lods
push
stc
mov
je
mov
testb
fistl
data16
adc
out
lret
mov
stc
lret
dec
rorb
scas
mov
stos
or
add
jae
imul
mov
add
cld
ja
cmp
mov
je
cli
adc
out
cmp
ljmp
sbb
ss
pop
call
pop
and
insl
dec
shld
inc
sar
cli
mov
jp
push
dec
pop
clc
stc
mov
mov
shr
jge
or
fucomip
inc
lods
sbb
rol
lahf
add
fcompl
mov
hlt
mov
test
lock
jmp
mov
outsl
mov
hlt
mov
jle
call
nop
outsl
out
aaa
sub
cld
out
and
loope
cmp
pop
xor
incl
call
dec
adc
cmp
lds
jle
push
jge
mov
mov
cmp
inc
out
mov
pusha
xchg
or
adc
sbb
sbb
mov
xor
sbb
xlat
mov
movsl
mov
sub
ljmp
fsts
lret
and
pop
sbb
mov
repz
jp
xchg
repz
decl
or
mov
push
stc
mov
adc
jmp
neg
adc
stc
sub
mov
mov
pushl
cmp
stos
inc
push
aas
clc
mov
mov
and
mov
movsb
xlat
test
dec
inc
adc
decl
sbb
out
mov
inc
dec
shll
outsl
jmp
neg
inc
scas
mov
repnz
popa
push
jg
roll
mov
mov
pop
dec
pop
adc
movsl
pop
aad
out
cmp
xchg
mov
decl
mov
test
jmp
pop
push
add
jne
bound
mov
mov
int3
inc
lahf
repnz
xorl
arpl
dec
mov
call
ss
sti
je
sahf
jecxz
flds
sqrtps
icebp
enter
fwait
jle
out
pushf
mov
dec
enter
cwtl
ja
push
das
les
mov
mov
cltd
ret
out
inc
fdivs
aaa
inc
loope
mov
inc
je
pop
das
mov
push
js
dec
repnz
imul
and
jno
hlt
stc
mov
movsl
pushl
or
lcall
outsl
div
sbb
loop
mov
test
cs
pushl
or
push
std
mov
sub
lock
ljmp
scas
enter
int3
push
or
pcmpeqb
clc
addb
add
push
lock
mov
xor
enter
jmp
xchg
int3
pop
sub
xchg
and
cwtl
outsl
insb
repz
aas
cli
pop
inc
sahf
pop
pop
xchg
ljmp
icebp
push
ret
outsl
and
adc
fcomip
mov
xchg
inc
xor
mov
xor
out
clc
add
add
test
ljmp
ja
adc
mov
dec
sbb
out
cmp
jno
loope
pushf
add
call
mov
cwtl
repnz
or
dec
push
push
push
mov
inc
sub
pop
xlat
inc
adc
in
nop
ret
and
and
cmc
icebp
int
dec
in
and
inc
pushl
out
xor
out
lds
sub
loop
sbbb
imulb
cwtl
lcall
mov
outsb
mov
adc
pop
out
mov
test
jg
fcomps
push
and
cmpsl
fistps
and
mov
push
icebp
adc
in
push
ja
or
mov
lock
shrb
cmc
movsl
lods
in
pop
adc
adc
icebp
stc
jp
xor
stos
hlt
jae
nop
cltd
jecxz
cmp
fcomip
or
iret
cmp
cmc
jbe
mov
jnp
adc
mov
pushl
mov
lcall
icebp
loope
stc
adc
shlb
out
add
mov
jmp
fldenv
sub
cmp
leave
out
fsubrs
or
sbb
js
out
gs
nop
xchg
repnz
call
scas
lret
nop
shlb
lock
fnclex
je
push
loopne
incb
ljmp
cmpsl
or
mov
and
mov
psubsw
lret
loop
jmp
fidivrs
cmc
cli
in
dec
cmp
das
xlat
iret
xchg
push
dec
int
leave
jl
je
ljmp
in
add
jl
push
out
mov
add
mov
lcall
jmp
xchg
fiaddl
inc
sbb
dec
xor
ljmp
inc
popa
mov
clc
fdivrs
mov
rcrl
or
nop
push
jmp
ret
fsubs
stc
aaa
sub
incl
mul
shrl
int
cmpb
loopne
nop
mov
nop
mov
dec
xchg
push
pop
ljmp
jnp
dec
and
dec
xchg
and
fcoms
scas
cmp
xlat
dec
sbb
hlt
sbb
fwait
js
cli
jmp
shl
cmpsb
or
add
hlt
enter
cmp
test
jo
call
jmp
cs
loop
pop
cli
sbb
jecxz
jno
and
lcall
out
dec
pop
stc
std
adc
into
sbb
fldcw
pop
adc
jg
decb
pushf
jnp
movsb
idivl
sbbl
inc
mov
popf
xchg
pop
push
jg
mov
adc
pop
sti
js
jl
mov
ss
cli
pop
jg
les
mov
ss
mov
movsl
mov
fcomp
lods
mov
shl
stc
lods
mov
xchg
inc
jg
cmp
jl
fstps
add
or
ret
repz
sbb
dec
bound
loop
pop
cmpsb
incl
jge
mov
sbb
adc
out
arpl
test
pop
mov
stos
inc
xchg
repz
imulb
lds
mov
jg
dec
in
add
clc
mov
stos
std
xor
ljmp
ljmp
inc
pop
cld
fadds
sti
cli
jge
mov
mov
mov
cmp
int3
pop
lcall
lods
icebp
outsl
lods
xchg
fcompl
add
jmp
mov
pusha
shr
cmp
sbb
push
mov
bound
loope
stc
xchg
rcl
stc
into
mov
cmp
mov
dec
lret
dec
incl
movsb
push
dec
or
test
dec
mov
ss
sub
mov
je
call
jg
sub
ljmp
outsl
das
outsl
pop
jo
in
mov
sub
ja
xchg
outsl
or
mov
lahf
jge
in
and
enter
hlt
cs
push
jmp
enter
in
lret
icebp
add
mov
cwtl
xbegin
mov
ss
mov
scas
test
lods
fwait
jo
in
add
je
ja
sub
push
jnp
jb
cmp
sbb
mov
std
fstps
test
orl
les
jg
inc
out
and
inc
adc
fwait
jge
test
inc
jmp
daa
fbld
in
fldenv
xor
push
mul
xchg
out
scas
xor
pop
fsubrl
pop
pop
inc
out
pop
xchg
cmp
push
jne
in
movsb
fnstsw
sbb
pop
xchg
mov
mov
dec
out
insb
jmp
pop
push
push
mov
decl
lock
loop
dec
push
stc
pop
jmp
ljmp
in
pop
addr16
pop
incl
in
xchg
adc
adc
jae
pusha
stc
dec
mov
mov
movntps
mov
popa
mov
scas
es
inc
leave
prefetch
or
cmp
pushf
rep
and
and
adc
clc
fwait
outsb
insl
cld
dec
fst
fildl
in
in
xchg
fmuls
lods
push
leave
je
aas
aas
out
dec
aaa
cmp
call
inc
insl
rcr
stc
inc
test
cmpl
stc
or
std
loop
mov
jge
cmp
jecxz
xor
sub
lods
or
loope
mov
ljmp
mov
pop
test
loope
fwait
andb
push
inc
xor
js
and
fdiv
sbb
jmp
std
outsb
stos
das
icebp
das
lea
mov
pushf
fisubrl
adc
decl
xchg
dec
repnz
enter
fdivrl
pushl
loopne
push
adc
test
push
test
dec
adc
pop
jle
in
and
mov
sub
into
xchg
push
inc
in
mov
out
pushl
repz
mov
ljmp
mov
gs
or
jb
xor
mov
jmp
fistpll
sub
ret
imul
cmc
inc
cmc
cwtl
hlt
incl
out
incl
cld
hlt
sti
sub
aam
lods
in
sub
adc
loope
lahf
lahf
jnp
adc
aam
sub
decl
repz
lahf
xlat
cmpsl
dec
ss
outsl
cmc
scas
repz
xchg
xor
or
icebp
jg
ljmp
ss
jmp
sub
xor
incl
dec
sbb
xor
loope
clc
xor
mov
xchg
xor
pop
pop
cmc
jns
test
test
faddp
cmpsl
test
adc
out
mov
adc
ljmp
nop
mov
lods
xchg
inc
call
sbb
mov
lock
js
ret
js
jnp
das
lods
sti
mov
insb
daa
xor
sar
mov
xlat
loop
pop
push
pop
jb
jo
leave
and
mov
pushf
js
mov
mov
lods
clc
mov
mov
decl
repz
cmp
mov
and
xchg
fcomps
push
stc
add
loope
mov
and
stc
jge
jp
push
cld
lcall
in
movsb
in
in
ljmp
movsb
mov
lods
in
mov
jmp
jg
lea
mov
scas
call
push
xchg
fdivrl
jbe
jmp
aad
adc
push
and
xor
into
jne
ljmp
cmpsb
aam
hlt
incb
xor
daa
cmp
aam
pop
pusha
adc
test
pushl
std
adc
fsin
call
jnp
pusha
data16
pop
and
shl
idiv
mov
and
inc
cmp
fs
mov
imul
cmc
and
push
lahf
adc
bound
dec
rcl
sub
jecxz
out
jbe
decl
and
addr16
jge
mov
adc
dec
or
outsb
jge
aam
jg
push
es
jno
push
sub
or
repz
in
mov
sub
incb
out
dec
clc
scas
push
pusha
cltd
subl
js
xor
call
inc
push
inc
push
pop
pop
ljmp
jnp
shrb
dec
inc
pushl
xchg
iret
ret
fcomps
mov
orb
movsb
ss
add
and
inc
mov
addr16
mov
jle
adc
jle
jb
insl
adc
push
pop
xchg
decl
jo
call
jge
fisttpl
mov
repz
lock
push
inc
jns
flds
clc
sub
stc
repnz
movsb
jmp
dec
sbb
sbb
sub
pop
pushf
icebp
sub
mov
loopne
mov
pop
cmp
and
pop
cmp
cld
call
dec
lret
pop
cltd
sbb
rcl
aam
dec
jns
or
push
call
inc
adc
fmuls
outsl
xor
idivb
das
mov
xchg
pop
sarb
int3
lcall
aas
push
cmp
sub
pop
jg
sub
cmp
cli
mov
add
lahf
test
mov
hlt
and
shll
dec
cmpsl
pop
sub
adc
fsts
mov
sar
mov
decl
jns
imul
ret
adc
sub
add
sbb
ljmp
jmp
movsb
fwait
rcrb
dec
fwait
daa
lcall
sub
test
mov
adc
lret
mov
dec
cmp
ljmp
lock
dec
scas
fistl
out
dec
scas
fsubl
mov
adc
and
pop
inc
aam
fdivs
sbb
sti
in
lcall
mov
push
mov
aad
ljmp
clc
imul
and
les
ret
xchg
mov
aaa
into
ds
negb
xchg
mov
inc
sub
mov
hlt
jbe
push
xabort
aad
pop
ss
jnp
loop
adc
in
inc
rol
or
jg
out
sti
add
pushl
mov
lahf
mov
lods
ud2
xchg
jge
and
lcall
push
je
dec
fsubrs
aam
icebp
mov
mov
mov
clc
call
adc
inc
inc
add
sar
loope
and
mov
ror
popa
and
test
ljmp
jp
xor
add
add
add
clc
adc
mov
and
mov
add
in
jmp
pusha
mov
out
inc
ret
sub
dec
neg
push
sbb
addr16
int
shl
jp
ret
stos
mov
xlat
clc
mov
in
push
out
mov
push
inc
mov
mov
test
pop
gs
and
push
stc
or
icebp
aad
hlt
pop
std
fstpl
mov
dec
clc
mov
xchg
fcmovbe
ljmp
incl
aad
int3
insl
pop
cmpsb
sub
imul
imul
adc
mov
imul
outsl
outsb
les
lret
cmpsb
or
push
dec
outsb
clc
ss
lods
call
outsl
mov
clc
out
rorl
xchg
xlat
inc
int
adc
stc
jecxz
popa
in
pop
shlb
jle
cmc
stc
loope
pop
pushl
stc
xchg
aas
leave
insl
push
iret
pop
cli
and
inc
mov
fistl
mov
idivl
iret
popf
jge
cmc
fldenv
xchg
inc
fmul
cmp
push
xor
ret
inc
xor
ud0
gs
daa
out
dec
shl
loop
loope
mov
dec
int
jl
xor
ds
daa
in
test
das
lret
mov
dec
add
out
cmp
sbb
sar
mul
sbb
outsb
sbb
incl
push
mov
test
into
enter
fdiv
mov
int3
pop
icebp
jg
sbb
mov
xor
or
addb
sub
das
rcrb
ret
ss
dec
cmp
sahf
cmc
fidivrl
xchg
mov
and
push
movsb
scas
lahf
cmp
decl
fsubl
dec
dec
jge
repz
sub
inc
popf
cli
sarl
das
sarb
dec
rorb
int
call
or
push
jg
lcall
div
and
in
aaa
jae
pop
addr16
repz
jne
jecxz
jg
xchg
nop
incl
mov
outsl
repnz
xchg
cs
push
int
push
dec
push
inc
idivl
clc
incl
xchg
mov
stc
in
in
loopne
fcompl
je
cli
pop
inc
les
lcall
mov
fnstenv
rdmsr
addr16
mov
cs
js
ficomps
lret
xor
ds
cmpsb
cmp
outsb
pop
dec
jle
ljmp
pop
mov
lahf
sub
sbb
mov
jp
lock
mov
ror
psubusw
cmpb
mov
ljmp
stc
inc
mov
mov
xor
xchg
pcmpeqw
mov
inc
jmp
aam
jle
enter
jg
fnstcw
loope
test
cmp
cld
out
mov
call
fsubr
leave
jp
jge
jo
mov
mov
outsb
leave
scas
sti
sbb
out
fidivl
iret
stos
iret
jmp
xchg
insl
mov
push
push
les
js
std
daa
sbb
icebp
add
mov
add
mov
or
fdivp
scas
andb
mov
dec
sub
in
shl
xchg
shlb
stos
loope
clc
popl
mov
shrl
cmp
and
fstpl
imul
pusha
pop
pop
inc
pushf
cltd
mov
mov
fildll
sbb
adc
jmp
xor
scas
int3
pop
out
xlat
dec
outsl
out
add
gs
data16
xorb
out
inc
or
incl
call
loop
out
or
add
push
jecxz
pop
call
fidivs
lahf
pop
lret
fsubl
pop
cltd
cmp
or
jnp
jae
sub
lcall
add
jns
and
jne
jbe
xchg
das
mov
out
sub
mov
cld
adc
out
inc
ss
push
fsincos
lods
aaa
mov
std
cld
push
xlat
and
aad
decl
inc
push
nop
divb
pushf
out
mull
push
hlt
std
sbb
jp
jg
clc
sub
psubw
shrb
mov
call
xchg
fadds
stc
pop
ljmp
push
divl
iret
jl
movsb
pop
jno
jo
jg
aaa
inc
sbb
inc
mov
insb
dec
dec
rol
push
iret
xchg
lods
push
enter
inc
push
ds
ret
pop
and
je
fmulp
sahf
push
add
push
sbb
decl
aad
subb
pop
lds
outsw
mov
into
mov
arpl
call
jge
mov
pushl
mov
cli
fiadds
pop
adc
lcall
xlat
out
mov
mov
ds
fmul
lret
cmp
xorl
int
mov
aaa
jnp
push
mov
decl
mov
xor
loopne
or
jg
imull
es
ret
aad
jp
idiv
ljmp
vpacksswb
in
sahf
mov
fdivrs
inc
jae
push
sub
add
hlt
adc
stos
jnp
stc
shrl
ffreep
aaa
icebp
mov
movsl
sub
lret
sub
push
lcall
pusha
iret
and
mov
push
rorl
pop
gs
jmp
push
adcl
into
push
push
pop
lods
ret
outsl
addr16
mov
clc
pop
add
fld
nop
cli
mov
pusha
inc
sub
cmp
cli
jg
mov
mov
sahf
call
cli
inc
sub
xchg
in
decl
mov
ret
int3
push
xchg
ret
xchg
mov
push
add
loopne
xchg
iret
cmp
cmp
mov
ret
push
or
sahf
ret
inc
pop
div
cli
mov
push
out
cli
sbb
out
mov
cmp
fsubl
adc
jmp
enter
pop
mov
sub
ljmp
filds
mov
clc
dec
rorl
xchg
adc
into
xor
rclb
fmull
xor
mov
sar
std
mov
test
pop
mov
nop
test
cmpsb
lcall
das
adc
fbstp
fdivr
mov
std
ja
fcomip
and
fbld
faddl
in
ror
inc
add
jle
mov
push
aad
cbtw
sub
repz
ret
into
iret
push
jge
push
fcoml
lahf
ljmp
inc
xchg
fdivl
in
inc
xor
mov
mov
jno
cmp
push
notb
sahf
add
outsb
les
rcr
bound
lret
inc
mov
in
out
outsl
lods
outsl
xchg
fcmove
lret
dec
sbb
iret
popa
inc
sti
push
outsl
leave
fldenv
inc
negb
out
movsl
je
mov
cmp
imul
mov
repnz
setns
test
subb
pop
mov
std
dec
or
in
mov
loope
cwtl
sarb
outsb
adc
rclb
scas
rcl
push
cmp
ret
mov
test
xchg
dec
fwait
in
bnd
jmp
mov
cltd
and
push
rolb
add
lret
jns
arpl
and
cmpsl
out
ljmp
divl
mov
adc
inc
aad
aam
and
dec
push
jmp
cltd
lcall
iret
cltd
sar
mov
movsl
mov
out
mov
repz
out
mov
idiv
sti
std
test
loope
rcr
xchg
cltd
or
dec
jmp
vmwrite
cmp
sti
mov
cld
decl
cli
cltd
cmp
inc
mov
jmp
pusha
mov
ret
mov
cmp
pushl
ljmp
ja
les
orb
adc
pop
jge
std
loope
ret
push
lcall
jle
jmp
push
popf
adc
ljmp
mov
xchg
mov
push
xor
pusha
inc
std
leave
test
clc
mov
iret
sti
fdiv
jmp
mov
inc
pop
aam
pop
mov
lret
dec
outsb
ud1
and
outsl
shlb
clc
jecxz
xchg
ficompl
jge
insl
loopne
fldcw
fdivs
mov
jp
pusha
incl
cli
mov
jo
pop
std
cltd
pop
ljmp
pop
add
add
mov
jmp
dec
sti
cli
ljmp
in
jnp
sbb
push
and
popf
and
fisttpl
fildll
jne
mov
into
cs
jg
lods
divb
pusha
or
test
es
xor
fcomp
and
je
in
jg
call
shll
jmp
sbb
xchg
movsb
in
push
add
scas
test
adc
mov
jg
divl
cli
xlat
std
xchg
in
pop
add
aaa
xchg
push
adc
decb
mov
lret
jg
jg
outsb
dec
lds
jb
fwait
or
push
frstor
aaa
dec
cmp
aam
push
adc
outsb
jg
in
jne
ja
ljmp
mov
out
mull
std
mov
les
je
das
add
mov
or
jp
mov
mov
fsts
cmc
mov
lret
mov
in
adc
mov
test
icebp
ljmp
mov
scas
mov
push
cltd
sti
push
les
lock
clc
std
or
repnz
data16
iret
dec
cwtl
out
and
mov
incl
push
and
push
sbb
loop
lods
adc
ljmp
aad
pop
xor
es
je
test
push
call
in
and
call
iret
leave
mov
and
adc
in
mov
sti
mov
push
psubusw
lea
call
int3
out
and
sub
repz
int
ljmp
cmp
add
loope
cmp
repnz
pushl
hlt
jle
imul
dec
jmp
jl
cmc
lock
mov
aaa
jle
inc
clc
cmp
jg
cld
sbb
mov
jp
sar
sbb
add
push
jle
inc
repnz
ja
dec
decl
cli
in
loopne
sti
jb
out
pop
xor
popa
push
cmp
jg
push
pop
pusha
out
and
pop
es
sub
in
mov
inc
mov
call
mov
mov
mov
clc
jmp
adc
shl
out
inc
in
fwait
ljmp
gs
mov
mov
pop
jg
popf
or
sub
dec
clc
daa
mov
pusha
cmpsl
sbb
out
and
out
add
ds
mov
daa
popa
xlat
inc
pop
pop
lret
decl
sbb
jl
and
adc
mov
cmp
sub
hlt
jp
mov
jns
mov
ljmp
jg
cmp
sub
push
mov
movl
out
mov
out
push
repz
call
imul
adc
mov
jne
std
icebp
in
lods
inc
inc
incl
lcall
shll
jl
iret
xchg
insl
test
sahf
je
xchg
dec
lahf
aad
cld
mov
cmp
sub
shl
fdiv
loope
xor
xchg
iret
inc
leave
add
xchg
fcmovu
pop
jmp
sub
or
lods
mov
adc
adc
es
or
dec
add
decl
inc
shll
hlt
push
xchg
sbb
lcall
push
jns
add
insl
pop
in
add
add
popf
aaa
mov
dec
lds
pushl
xchg
jmp
fnstsw
pusha
fdivl
dec
dec
pop
cmc
xchg
push
ret
mov
mov
jp
loopne
push
test
mov
pop
ret
imul
jmp
addr16
xor
rcl
cmc
orl
clc
mov
adc
fisubrs
repnz
sbb
mov
cmc
je
hlt
daa
insb
ret
cmp
fistps
in
ficoms
clc
decl
arpl
insb
jbe
pop
lret
outsl
test
pop
dec
test
sbb
mov
call
mov
ljmp
lods
xchg
sahf
lods
fadds
sub
int
in
subb
xchg
lcall
nop
mov
subb
mov
loope
lea
lock
cltd
pop
ret
mov
jg
call
push
push
sbb
push
cmpsl
mov
fldenv
inc
sar
ljmp
mov
repz
out
xchg
iret
cltd
mov
sub
mov
imul
pop
pop
mov
cli
nop
sbb
enter
cmp
mov
fwait
jl
popf
outsl
mov
add
sub
adc
jno
jmp
js
or
jmp
aas
lock
out
movl
outsl
pop
data16
icebp
fists
jb
adcb
push
call
mov
outsb
daa
sub
dec
pop
dec
adc
and
pop
dec
jecxz
mov
jmp
lahf
mov
mov
fs
hlt
lcall
ljmp
lods
mov
clc
mov
fstpt
mov
sbb
pop
arpl
adc
pusha
xor
jg
or
int3
mov
ret
std
lret
lods
lcall
cmc
in
adc
pop
aas
in
scas
push
idiv
jns
mov
out
movsl
aas
jae
fmuls
call
mov
and
lcall
testb
ljmp
ficoms
in
jmp
out
pop
sbb
data16
nop
out
or
jg
jno
pop
adc
enter
mov
pop
mov
push
lcall
and
xlat
fdivrp
pop
scas
repnz
enter
adc
in
xor
lods
cmpsl
inc
mov
pop
cs
out
je
sub
jae
imul
mov
mull
push
sbb
mov
adc
loop
pop
mov
jmp
enter
add
ds
and
jecxz
mov
adc
nop
inc
insl
icebp
rolb
jg
push
sub
xor
or
cmpsb
pushl
aad
fs
ret
xchg
test
dec
sar
lock
dec
sub
push
stos
inc
outsb
inc
ficompl
int3
addl
sahf
dec
jne
decl
xor
stc
jo
mov
jle
sti
push
pop
loope
xchg
addr16
cli
pop
mov
das
roll
mov
mov
jne
insl
mov
cli
jae
decl
sarl
xchg
ret
xchg
stc
jmp
cmp
cmpsl
bound
adc
xor
addr16
shlb
cld
sbb
fidivl
lcall
jo
ljmp
push
jne
or
call
call
and
loopne
push
or
xchg
in
add
fisubrs
lahf
loopw
pushl
popf
pop
jnp
inc
push
push
sub
call
push
bswap
xlat
in
xchg
out
daa
add
xchg
repnz
scas
std
jnp
mov
xchg
stos
cwtl
push
cmp
incl
sbb
dec
test
and
scas
ja
dec
loope
jecxz
imul
cmp
or
jmp
aas
inc
mov
push
shl
lods
xchg
in
jg
hlt
mov
jl
pushf
cwtl
out
cli
sub
push
pop
adc
imul
aaa
test
sub
pop
mov
lcall
dec
paddusw
adc
add
bnd
test
ficoml
ffreep
aaa
nop
hlt
ret
repnz
aaa
icebp
jg
pushl
std
aad
sub
mov
jno
cmc
cwtl
fs
mov
cmpsl
movsl
pop
xchg
sar
adc
cmp
sti
pop
rclb
fiaddl
dec
push
leave
enter
or
out
sub
repz
outsl
push
mov
fmuls
add
inc
jnp
jmp
ret
mov
mov
movsb
repz
loopne,pt
subl
clc
jmp
fstpt
pop
out
lret
ss
incb
js
pop
in
mov
and
push
mov
stc
push
testb
mov
xlat
movsb
mov
mov
cmpsl
and
push
lahf
xor
adc
mov
sub
cs
cmp
ljmp
cmp
jl
jb
mov
enter
push
out
mov
outsl
clc
adc
dec
je
lds
jno
mov
in
sub
pushf
push
jge
jl
sub
mov
jg
cld
lcall
lds
inc
or
lahf
jge
cmp
test
push
jecxz
jp
jmp
pop
sti
mov
mov
out
dec
adc
xorl
dec
test
test
idiv
jmp
pop
stos
lods
ja
sub
mov
and
jmp
mov
pop
stc
sti
insb
imul
push
push
arpl
and
cmpl
jle
lret
aas
jl
jp
js
jbe
je
jb
es
ljmp
cmp
mov
icebp
enter
and
xchg
sarl
jg
jp
ss
mov
jb
out
std
pusha
or
jecxz
fmull
inc
lcall
jmp
sbb
std
mov
mov
aaa
and
sbb
mov
daa
and
decl
lret
test
movsl
jnp
jecxz
fwait
mov
cmp
mov
cmpb
incl
mov
mov
mov
push
xchg
pushf
js
jp
daa
in
cmp
insb
aas
repnz
pop
pop
call
mov
mov
ss
xchg
xor
ds
add
ljmp
pop
pop
mov
js
add
mov
xlat
imul
repz
xor
push
incl
andb
stc
jne
popf
in
jne
out
add
ljmp
and
icebp
sarl
pop
andl
jnp
inc
sub
pop
dec
inc
aad
mov
std
fwait
mov
cmp
test
ds
push
and
xlat
xlat
sub
loop
cmp
mov
mov
jns
add
sahf
mov
cs
jp
cli
leave
jne
iret
and
int
cmp
out
jne
cmc
lock
and
je
mov
push
cltd
je
in
jmp
sub
fucom
in
jmp
sti
ja
sub
mov
sbb
cli
mulb
jo
fdivrl
decl
lock
xor
out
cmp
sbb
fistl
jbe
xlat
adc
incl
fnstsw
adc
icebp
and
add
mov
icebp
hlt
imul
out
out
mov
daa
pushl
jl
repz
in
lahf
test
lods
je
sti
jnp
nop
push
adc
je
adc
movsb
mov
das
sar
cwtl
notb
mov
add
cmc
mov
shr
ljmp
je
cs
jne
outsb
sub
pushf
inc
je
dec
sti
jg
clc
pop
dec
ljmp
adcb
cmp
rorb
jmp
cmp
inc
mov
ds
sti
icebp
sti
std
repnz
dec
mov
addr16
imul
loope
jmp
sbb
out
add
loope
in
dec
push
enter
shrl
xor
out
jle
cltd
jg
std
pushl
je
idivl
hlt
add
push
pop
data16
insl
into
or
sub
pcmpeqb
aaa
ja
or
pushl
repz
dec
dec
pop
inc
insb
sti
clc
mov
es
inc
lods
or
negb
jg
adc
addl
cld
and
mov
out
mov
jp
cwtl
xor
bnd
inc
mov
std
push
aaa
fnstsw
push
ja
xor
sbb
sub
pop
clc
decl
scas
sub
fsub
and
leave
lods
testb
cmp
push
decl
adc
rorb
lds
dec
flds
js
and
pop
mov
rcrb
lahf
or
fildl
std
lcall
cmc
cmp
cmp
test
popf
jae
jmp
pop
jmp
inc
mov
cld
mov
in
cs
xor
mov
arpl
or
movsb
and
test
lods
imul
pop
add
jbe
jne
jg
enter
pop
clc
ss
int3
fs
jmp
cld
test
xchg
fwait
push
hlt
pop
out
xchg
add
in
in
jg
je
mov
sbb
es
mov
push
repnz
lods
scas
shr
jmp
jnp
jb
jg
push
dec
shl
fwait
cld
cmpsl
fwait
arpl
xchg
loopne
arpl
std
pushl
adc
rorb
into
jb
jg
lret
or
mov
ficoml
cmp
mov
in
inc
adc
decl
fdivrl
mov
ss
ret
sti
unpcklps
idiv
mov
mov
dec
das
cli
in
js
or
and
aam
xor
aam
mov
mov
ret
pop
cld
jg
js
jl
cmp
push
gs
ss
pop
adcb
and
cli
icebp
mov
cmp
mov
jmp
ljmp
cmp
repnz
push
out
ret
mov
lret
in
xor
xchg
xchg
pop
sbb
fstpt
xor
shlb
scas
cli
mov
and
push
lock
jp
repz
das
gs
ljmp
das
mov
mov
sar
ret
jg
sbbb
adcb
cwtl
popa
insl
sar
cmp
lret
cltd
jle
or
cltd
out
mull
push
pop
test
cwtl
mov
adc
ljmp
imulb
lahf
hlt
je
out
push
fsubs
sub
movsl
jae
cmpsb
cmp
and
incl
aad
jecxz
aam
in
loopne
sub
inc
mov
mov
sbb
jmp
pop
sub
and
push
mov
lock
scas
inc
pop
jge
sbb
neg
mov
lcall
pop
xchg
jbe
mov
stos
inc
mov
or
mov
push
sbb
cmp
in
es
cmpsb
fnsave
mov
push
popf
inc
scas
xchg
stos
shll
mov
ljmp
repnz
xchg
and
inc
add
jae
xor
das
leave
ret
pop
stos
push
addb
idiv
clc
mov
shrb
aas
lret
xchg
adc
xlat
shrl
stc
add
or
mov
call
ret
push
and
movb
orl
insb
ljmp
xor
test
and
sahf
dec
or
in
jg
pushl
mov
jecxz
jmp
test
test
aaa
or
jb
jg
mov
pop
decl
pop
and
cld
out
in
mov
ljmp
testl
cmpsl
movsb
daa
xchg
cmpsb
sti
xor
je
inc
pop
shr
add
cli
mov
jne
mov
call
xor
cwtl
cmp
mov
idiv
int3
jnp
jg
push
nop
daa
dec
pop
addl
ljmp
repnz
in
lcall
cmp
shr
aad
pop
jg
dec
cld
jle
test
mov
mov
repz
cld
push
sbb
bound
mov
jecxz
xor
out
sub
cs
inc
ret
iret
ret
xorl
add
pop
dec
popf
ljmp
or
inc
or
cmp
lods
sub
mov
pop
pop
mov
and
notl
f2xm1
ljmp
repz
loopne
ljmp
in
rol
sub
cmp
loopne
pop
lret
sarb
clc
pushl
xor
cli
clc
and
icebp
repz
jmp
enter
mov
cs
jnp
jb
scas
push
adc
pop
mov
enter
mov
mov
jns
andl
mov
mov
mov
or
icebp
insb
cmp
fmuls
or
test
or
inc
sub
iret
out
cltd
mov
fildll
arpl
loop
fs
add
mov
call
mov
jge
fs
mov
mov
inc
push
sbb
jmp
popf
fwait
stos
nop
jp
dec
xor
in
jecxz
jmp
and
mov
loopne
xlat
mov
dec
mov
mov
mov
test
mov
cltd
xchg
mov
sub
xlat
in
loope
stos
xchg
xchg
popf
call
stos
xor
adc
leave
jno
mov
je
pop
jecxz
or
incl
cmp
movsb
adcb
imul
stc
hlt
stos
or
incl
or
or
cltd
xchg
jg
xchg
inc
std
outsl
daa
lock
filds
enter
jle
jg
mov
cmp
pushf
test
and
mov
out
xchg
pop
xchg
xlat
sti
pop
cmp
mov
push
xor
decl
pop
mov
out
and
dec
fisttpll
mov
mov
stc
lods
lcall
pop
outsb
mov
repz
lcall
scas
hlt
xchg
scas
add
call
dec
dec
pop
scas
icebp
iret
mov
test
lcall
mov
repnz
aad
push
aad
ds
cs
dec
hlt
mov
xor
mov
mov
and
lea
mov
mov
mov
lcall
pushl
mov
mov
rcll
jmp
mov
xchg
dec
test
fst
fildll
dec
xor
ja
rcrl
push
sbb
dec
xor
call
mov
xchg
fsubs
adc
ret
ret
cltd
repnz
xor
inc
cmp
call
sub
and
clc
add
jne
in
icebp
das
divb
fidivrl
mov
xchg
cmp
adc
mov
add
inc
je
aad
fldenv
shl
out
cmp
arpl
icebp
mov
decl
mov
in
xchg
fistpl
inc
xor
jl
cmpsb
aad
and
lcall
pusha
daa
ror
pusha
leave
jmp
cld
cmp
xor
dec
jl
and
dec
hlt
test
dec
repnz
pusha
and
jle
ds
xchg
pop
test
test
leave
xchg
ret
out
call
out
or
adc
inc
pop
stc
jmp
jecxz
jmp
pop
je
std
decl
cwtl
sbb
clc
jnp
pop
outsl
push
jp
xchg
in
mov
shrb
mov
sahf
repz
fucomi
mov
and
stos
mov
rorb
les
fildll
sub
push
std
loopne
mov
fdivp
out
repz
or
std
push
push
mov
aam
repnz
push
mov
clc
lret
sub
inc
in
outsl
push
cwtl
repz
in
xor
sub
mov
jmp
pop
inc
pop
loope
stc
cld
pushl
sti
popf
and
icebp
stos
or
mov
xchg
out
cltd
pop
mov
sarb
pop
dec
lods
xchg
mov
or
cmp
out
call
cmp
push
stc
push
push
inc
sbb
mov
xlat
mov
xlat
clc
cmp
xor
dec
or
and
push
sti
call
lahf
cli
adc
sti
push
in
jle
in
sub
clc
fiadds
xchg
xchg
dec
push
mov
inc
fstenv
mov
stos
out
jge
imul
ljmp
rcr
mov
loope
clc
into
mov
scas
inc
loop
dec
fdecstp
repz
lcall
cmpsb
mov
stos
jnp
pop
add
lret
rolb
icebp
jmp
adc
scas
pop
les
test
ljmp
cmp
aaa
loopne
ljmp
push
jae
push
ja
lods
dec
mov
mov
stos
decl
jecxz
stc
mov
ds
imul
xchg
les
mov
clc
cmovle
dec
nop
xor
mov
mov
sub
insl
cli
push
lock
imul
int3
loop
rcrb
imull
aas
lcall
add
icebp
hlt
push
fstps
leave
fidivrs
add
std
xchg
lock
std
mov
push
or
in
cmp
cmp
lcall
cmp
outsl
fwait
cmp
xorb
cmp
dec
icebp
mov
cwtl
pop
stc
mov
jmp
xchg
cmp
lods
cmp
les
sbb
sub
aaa
cld
das
pop
inc
pop
cmp
stc
inc
lcall
pop
in
mov
sub
jne
aas
les
push
imul
dec
mov
and
sub
pop
cltd
incl
xor
push
cld
call
incl
mov
fildl
ja
popf
loope
cmp
mov
push
repnz
mov
daa
fucomip
ss
scas
push
push
aas
push
rorb
clc
decl
sub
and
ljmp
jecxz
mov
lcall
xchg
cmp
std
scas
pushf
ret
in
jae
and
or
or
xor
mov
call
sub
mov
dec
pop
add
and
jmp
cs
adc
mov
jmp
mov
jg
repnz
outsb
inc
mov
out
arpl
mov
or
adc
lods
popa
adc
ds
jo
mul
repz
jle
out
jmp
mov
out
sub
into
mov
sti
pop
jnp
int
adc
leave
or
sar
das
adc
je
dec
add
pop
paddsb
jmp
pop
test
shr
enter
mov
xor
insw
adc
sub
and
sbb
mov
lret
ret
mov
cld
ret
xchg
aaa
push
jnp
nop
xchg
cmp
jecxz
outsl
jnp
push
cltd
mov
testl
sub
jg
outsl
jns
pop
sbb
cmpsl
insl
push
adc
dec
adc
cmp
fcomip
fldt
push
cmpl
mov
and
imul
cmp
es
and
xchg
and
xchg
and
add
andl
out
movsb
loopne
xor
xor
lcall
sahf
pop
push
sub
mov
add
mov
call
xlat
std
in
jmp
daa
xor
mov
xchg
test
decl
scas
jge
adc
test
mov
adc
push
ret
cmp
mov
push
dec
aad
jbe
in
aam
repz
mov
mov
push
xor
aas
sub
mov
sti
push
ljmp
fs
inc
pop
sbb
daa
mov
nop
inc
mov
subl
sub
xlat
cwtl
out
mov
loopne,pn
sti
sub
pop
mov
jle
in
pop
xor
jl
jmp
or
hlt
push
je
cmp
jle
je
jns
cmpsb
mov
lahf
clc
ljmp
pop
icebp
mov
incb
popf
mov
or
xchg
stc
mov
enter
call
dec
mov
iret
fcmovnb
test
push
add
mov
fwait
iret
mov
push
push
mov
mov
leave
cmp
xor
cli
sub
xchg
ljmp
add
lcall
xchg
or
sub
cmp
sub
adc
lcall
std
pop
js
rclb
mov
out
fcmovne
xor
loopne
push
stc
adc
mov
test
outsl
sub
icebp
pushf
jecxz
fsubrp
cmp
out
rolb
cmp
incl
loope
cmp
clc
sti
ret
lock
ss
in
ss
loopne
insb
arpl
jg
ljmp
lds
test
jmp
cmpsl
lret
mov
aas
pxor
icebp
aaa
dec
clc
jmp
movsb
cltd
nop
lahf
mov
pop
mov
xchg
add
jns
sbb
jmp
ljmp
mov
push
mov
lret
or
mov
leave
xchg
enter
jmp
popa
incl
jecxz
roll
enter
mov
test
fsubr
push
popa
push
mov
mov
lods
lret
repz
shlb
sti
jp
fisubs
mov
mov
mul
test
cmpsb
push
and
sub
mov
pop
loop
inc
mov
testl
mov
sahf
sahf
arpl
mov
out
jl
notl
std
leave
in
inc
pop
pop
jg
incl
mov
js
das
ds
std
outsl
cmc
adc
lea
and
add
icebp
xchg
lock
incl
mov
repnz
js
notb
adc
lcall
je
divl
outsl
mov
add
nop
xor
mov
jp
ljmp
or
fstl
xor
inc
push
ds
and
sbb
cwtl
mov
mov
decb
pop
jo
add
icebp
inc
xchg
ja
cmp
fsubs
daa
xchg
loope
incl
int
jecxz
xchg
adc
xor
jp
pop
and
cld
ljmp
add
push
push
add
sub
pop
pop
sbb
lcall
fstl
mov
enter
jns
scas
sub
addl
scas
je
mov
incl
sbb
mov
xchg
sbb
repz
mov
pop
sti
cli
fisubs
das
in
nop
iret
ret
or
leave
fidivrl
xchg
sbb
xor
incl
sub
xor
adc
inc
pop
rcl
in
mov
ljmp
mov
xor
in
cmp
je
movsl
or
mov
sbb
pushl
js
fnsave
fs
xchg
lea
pushf
bnd
pop
out
test
mov
xacquire
iret
xchg
mov
push
push
and
inc
push
and
jb
stos
jle
ljmp
loop
sub
sub
fistpl
movsl
inc
scas
lods
call
decl
or
mov
jnp
mov
neg
ficoms
xchg
fsubrs
xchg
incl
lcall
ds
adc
xlat
shl
subl
sahf
loopne
cmc
jecxz
icebp
pop
dec
push
and
sti
sti
ljmp
mov
das
outsl
js
nop
hlt
xchg
xchg
leave
in
es
mov
mov
mov
ljmp
clc
in
fistpll
mov
stos
pop
adc
jnp
fistpll
fnsave
lcall
cmpsl
push
xor
out
mov
in
cmp
daa
push
lock
cmp
mov
sahf
lcall
aas
xlat
call
incl
adc
out
adc
lods
jb
push
sahf
pop
xchg
mov
loop
xchg
std
out
cli
push
mov
adc
fisubs
inc
sbb
mov
adc
movsl
sub
dec
js
mov
js
xchg
cmp
jg
add
fmul
jge
and
aad
mov
inc
mov
fildll
js
pop
mov
fldl
adc
imul
mov
dec
jmp
mov
ss
insl
bound
pop
pminsw
lods
stc
jno
ret
dec
pop
sti
inc
repnz
jns
mov
ljmp
ss
push
jmp
cmc
or
ror
jp
pop
pop
in
mov
das
adc
lcall
dec
xchg
sub
lret
test
aas
pop
pop
inc
jg
in
mov
decl
test
and
clc
cld
mov
enter
and
jg
lods
hlt
hlt
mov
xchg
maxps
inc
mov
insb
jo
push
jno
sbb
es
pushl
les
inc
and
jl
xchg
xchg
sbb
ljmp
ret
jbe
push
movsb
and
xor
jecxz
mov
test
cmp
lcall
sbb
jbe
jecxz
inc
outsl
fldcw
dec
and
sbb
icebp
pop
xor
das
jo
loop
jg
pop
clc
xchg
ror
push
dec
movsb
lret
iret
aas
pop
cmpsl
hlt
jbe
shrl
pushl
and
inc
jecxz
push
or
push
xchg
or
mull
jmp
mov
into
add
leave
add
or
cmpsl
hlt
les
fisttps
ljmp
int3
fcmove
aaa
jle
push
xor
push
rorb
movsb
gs
mov
pop
fcos
mov
pop
stc
outsl
je
aam
inc
pop
sub
cmp
dec
mov
test
push
mov
mov
je
mov
ret
sahf
repz
pop
icebp
pop
xchg
int
insb
jp
std
test
mov
xor
lea
nop
clc
mov
mov
fwait
and
outsb
mov
je
jmp
lahf
addr16
pushf
or
mov
cmp
outsb
push
xor
pop
mov
popl
jmp
popl
outsb
sbb
push
push
in
js
inc
cmpsl
rcrw
and
decl
cmpsl
fbstp
mov
push
fbld
bound
jl
jge
push
mov
sbb
and
push
sub
adc
push
andl
mov
mov
or
arpl
fistpl
ss
ljmp
outsl
cmp
insb
ficoms
jg
sbb
jl
icebp
xor
mov
call
cmp
pop
xorb
jle
aaa
xor
push
fistpll
std
sti
shrb
test
add
cmp
push
imul
shr
mov
lock
jmp
pushl
call
repnz
dec
mov
jmp
mov
push
adc
inc
je
lods
push
int3
iret
xchg
js
or
xchg
enter
cmp
ret
dec
in
ss
fcoms
jae
inc
les
jmp
jmp
push
dec
in
hlt
xchg
imul
mov
xchg
or
push
fwait
sub
sarl
push
cli
mov
jb
or
add
fdivr
scas
cli
jl
pop
test
adc
jmp
mov
repnz
sbb
lods
mov
ljmp
out
pop
cld
mov
outsl
gs
pop
in
add
fildl
test
cmc
xchg
aad
mov
fidivs
cmpsl
pushf
test
sub
mov
je
je
pop
out
and
loopne
jmp
xchg
lahf
imull
aam
pop
iret
das
jno
fdivs
mov
imul
lods
jne
jl
jmp
and
jo
scas
sub
mov
sub
xlat
cmc
xchg
jns
cmc
jmp
repnz
ljmp
je
mov
mov
mov
pop
filds
jl
out
sahf
adc
mov
mov
aas
rorl
std
lcall
inc
aaa
jbe
jo
dec
std
lods
push
ret
push
mov
mov
imul
aas
popf
cmp
call
out
cmp
xor
jbe
cltd
mov
adc
adc
inc
jl
out
shll
jmp
mov
jno
icebp
imul
rcrl
pushl
dec
pop
scas
ja
or
xor
inc
shrb
fldt
sbb
sub
add
stos
ljmp
jmp
add
jbe
add
call
pop
cmp
mov
ja
dec
inc
lret
mov
ljmp
imul
in
push
and
out
fdecstp
mov
sbb
in
in
stc
dec
lahf
fidivs
and
mov
aaa
add
cwtl
cli
xchg
push
jp
mov
or
ljmp
or
popa
insl
in
xor
jge
sub
call
pop
mov
in
bound
ds
ss
das
decl
mov
xorl
pop
sbb
fdivrs
aaa
mov
or
ljmp
pop
inc
mov
movsb
loop
stos
sub
out
loop
mov
or
loop
mov
mov
add
push
cmp
iret
jp
jl
adc
popf
or
filds
sbb
jg
inc
inc
fldl2e
pop
repz
stos
test
das
mov
lock
push
mov
popf
xor
lods
dec
mov
cmp
cld
sub
pushl
hlt
rol
scas
push
pop
fwait
aad
popf
addl
or
sarb
inc
xchg
aas
pushf
mov
mov
adc
lods
mov
xchg
and
lret
lock
dec
add
hlt
int3
lods
sti
xchg
pop
adc
outsb
mov
or
incl
mov
jge
idivl
jge
sbb
aas
lea
mov
cld
mov
incl
mov
mov
inc
add
lahf
pop
push
out
aad
ds
std
sbb
hlt
pushl
adc
sub
push
add
fnstcw
pop
or
popf
push
scas
in
ljmp
mov
cmp
leave
fst
or
test
mov
pop
lock
hlt
das
loope
mov
inc
push
in
arpl
call
inc
cmp
mov
scas
xor
sub
mov
ljmp
incl
mov
idivb
imul
ss
lds
fildll
popa
pop
es
clc
incl
in
cli
scas
xchg
out
xor
decl
mov
xchg
pop
xor
je
or
ljmp
fwait
jo
subl
or
fdivrl
sbb
and
decl
nop
mov
mov
push
les
mov
sub
sbb
inc
fdivrs
repnz
pop
imul
cmp
xlat
dec
dec
xor
jl
or
in
inc
mov
cwtl
xor
mov
and
bound
inc
sub
push
decl
test
adc
sub
xchg
dec
sbb
dec
pop
roll
in
setno
xchg
fwait
ljmp
ds
clc
fsub
add
js
mov
popf
dec
sbb
jmp
int3
and
or
mov
mov
or
std
xchg
mov
add
add
incl
mov
ja
addl
xchg
je
mov
jo
mov
sub
cmp
fildll
lret
adc
adc
in
mov
mov
push
sub
xor
cld
sbb
sbb
pushl
or
mov
cmpl
mov
mov
mov
adc
and
out
fsub
mov
inc
dec
repnz
popf
pop
mov
inc
sub
cmp
dec
insb
movl
add
movsl
pop
jl
jno
mov
jmp
into
sub
ret
call
mov
scas
daa
fldz
jg
lock
stos
testl
sti
mov
mov
fcmove
nop
data16
ds
out
xchg
ds
cli
je
ds
in
sub
idivb
fnstsw
lea
insl
aaa
cmp
cmc
mov
ljmp
inc
push
fwait
fs
imul
inc
cmp
fucom
pushl
std
mov
jmp
movsb
rorb
mov
dec
mov
lea
xor
call
lock
stc
jl
fidivs
mov
mov
movsb
iret
es
and
int
mov
fwait
sbb
push
incl
and
imul
mov
cmp
call
ffreep
pop
test
and
sub
sub
fcomip
sbb
mov
mov
inc
mov
jmp
test
movsl
dec
enter
dec
int3
addb
jmp
jle
repnz
insb
mov
lret
xchg
add
mov
mov
push
aaa
data16
in
pop
mov
fcmovu
mov
jp
hlt
pop
leave
std
and
pushl
movsl
fsubrl
outsb
xchg
sbb
je
call
xor
cli
pop
add
cmpsb
hlt
sbb
mov
in
outsb
lcall
int3
je
cli
cs
imul
out
push
cmp
out
adc
incl
cmpsl
repnz
shlb
ret
dec
cltd
inc
and
adc
lcall
jmp
xchg
jge
xor
mov
pop
test
push
push
mov
xchg
sti
lcall
inc
cld
int3
sti
shll
fists
out
sbb
mov
mov
push
cmp
in
loop
adc
pop
hlt
call
cld
add
xchg
xor
out
pop
push
pop
lret
dec
pop
int3
lret
lahf
jge
sub
shll
orb
lcall
mov
cwtl
shll
dec
lret
movsl
mov
ja
fst
adc
mov
stc
decl
mov
outsb
mov
or
pop
not
cmc
ljmp
cmp
xchg
js
push
repz
xchg
mov
inc
mov
mov
fdivr
mov
das
add
mov
jbe
inc
sahf
je
jmp
inc
fwait
pop
xor
fimuls
shr
jge
repz
sbb
ds
std
test
adc
and
pop
into
jno
or
inc
and
ret
sahf
pop
jle
je
out
cmp
mov
adc
mov
outsl
ljmp
cli
popf
fwait
lds
das
jecxz
cmp
jns
sarl
in
pushl
sub
rorl
lock
gs
cmp
jg
sub
mov
call
stc
decl
xor
out
mov
xor
arpl
fdivr
iret
les
cmpsb
in
call
iret
or
jno
push
popl
cmp
test
jo
xchg
lcall
subl
sub
pop
pop
add
fcomip
lcall
lcall
popw
fidivs
push
cld
add
fadd
aad
cld
jmp
cmpsb
repnz
sbb
pop
mov
test
repz
xchg
fstp
nop
and
out
hlt
call
fwait
push
push
lcall
dec
mov
inc
dec
out
mov
pop
popf
mov
inc
movsl
sub
mov
xchg
lcall
mov
inc
inc
jno
fisttpl
test
pop
ljmp
std
stc
decl
icebp
dec
movsb
mov
sar
add
push
sahf
std
icebp
leave
jne
cmp
mov
cmpsl
mull
xchg
lock
imul
test
dec
cmc
pop
popa
call
jle
js
add
inc
ds
sti
cltd
mov
ljmp
into
xchg
sti
fwait
adc
cli
pop
or
popa
pop
pop
lcall
fcomps
jnp
aas
inc
cmovs
mov
scas
leave
mov
pop
dec
leave
scas
aam
push
jl
mov
cwtl
rcrb
shll
je
lret
clc
call
and
xor
jnp
sahf
stos
mov
ss
push
ret
sbb
jmp
pop
rcrl
cmp
lea
into
push
mov
adc
incl
enter
sti
lret
and
loopne
notl
sbb
loope
fsub
ljmp
xchg
test
lret
icebp
adc
inc
jmp
test
call
mov
sti
iret
xchg
les
sahf
test
mov
stc
repnz
adc
cld
jmp
dec
mov
mov
push
adc
sub
ljmp
ljmp
mov
add
jne
aad
das
iret
pop
sti
outsb
dec
movb
cwtl
fdivr
mov
rorl
lock
stc
std
arpl
pop
lret
pop
das
xchg
jle
std
jg
lods
dec
test
inc
dec
es
sbb
push
adc
movsl
daa
dec
dec
xchg
clc
push
aas
add
jns
cmp
call
js
mov
lock
jg
decb
scas
loop
out
cmp
xor
out
movsl
sub
jg
adc
popf
aas
inc
fiadds
adc
push
pop
pop
sub
cmp
ja
int
sahf
out
push
cli
pusha
cmp
jbe
mov
call
jg
outsl
incl
jl
repz
xchg
jb
cmc
add
notb
gs
mov
aad
lock
pushl
pop
jb
push
loope
sbb
xor
incl
outsb
fisttpll
inc
ret
and
cmp
jae
and
movsl
into
jecxz
jbe
dec
and
jg
jmp
adc
pop
arpl
push
inc
movsb
cmp
call
xchg
adc
xor
jg
fbstp
lret
or
sbb
ja
sti
out
clc
clc
jo
jmp
xor
mov
clc
xchg
mov
lds
push
xchg
rcrb
inc
or
xor
adc
cli
lahf
pop
rorb
or
fcomp
sub
js
stos
mov
es
sbb
dec
test
pusha
cmp
mov
pusha
jns
gs
testb
xchg
or
jnp
into
idivl
jg
in
push
cmpsb
sbb
test
imulb
cld
jle
das
out
adc
fucom
ds
scas
ret
mov
xrelease
outsl
pop
imul
dec
lock
push
dec
add
les
mov
mov
jmp
imul
stos
xchg
pop
push
sbb
ret
imul
push
nop
fistpll
cld
ljmp
repnz
sub
loopne
dec
imul
adc
mov
cmpsl
iret
pushl
call
dec
add
sbb
fadd
lock
dec
dec
stc
jle
test
jg
or
aaa
dec
movsb
sub
xor
mov
outsb
cli
ljmp
xchg
xor
rcrb
sub
or
sub
push
test
dec
ljmp
mov
add
fisttpl
pop
repnz
inc
mov
mov
or
mov
out
ret
in
outsb
hlt
mulb
mov
jae
jbe
sub
mov
call
cmp
push
and
xchg
mov
push
dec
pop
or
fisubrs
jmp
jmp
jno
outsl
xor
dec
add
fcmovnbe
mov
and
jg
dec
inc
outsl
fdivrs
pop
out
cmp
inc
je
fidivrs
sbb
das
xchg
mov
lcall
mov
cli
ja
sub
fdivrs
inc
fimull
js
insb
mov
mov
daa
std
ljmp
mull
mov
or
cli
jnp
cmc
daa
and
mov
loope
xor
inc
xor
cmpsl
sub
and
jmp
int
adc
repz
sbb
mov
xor
dec
inc
shrl
jne
sub
dec
cli
decl
mov
or
mov
stos
mov
shr
cmpsl
mov
or
or
jp
pop
pop
std
pop
jno
mov
cmpsl
push
divl
xor
out
roll
stos
or
mov
push
mov
shrl
js
call
lahf
jecxz
stc
idiv
lds
stos
pop
sbb
out
divb
out
loopne
inc
out
add
pop
mov
jo
es
mov
pop
test
mov
mov
ljmp
ficoml
in
cltd
sub
mov
or
xchg
outsb
pop
jnp
lock
scas
dec
outsb
pop
mov
lcall
test
xor
inc
icebp
inc
pusha
mov
sbb
jae
lcall
jmp
add
fnsave
pop
mov
in
das
fildl
push
push
movsb
pop
repnz
incl
jmp
insl
sub
or
jle
dec
xchg
stc
pop
mov
adc
and
jo
push
mov
pop
aas
mov
pop
call
movb
pushl
sub
dec
aam
jb
xor
inc
mov
call
lcall
gs
inc
jo
mov
mov
lret
jnp
in
aaa
fwait
mov
movsb
jae
cmpsl
jmp
xor
stc
icebp
mov
sbb
mov
loopne
ret
inc
sub
loopne
adc
incl
sub
out
mov
xlat
in
into
popf
ret
aam
outsl
popf
arpl
filds
hlt
xchg
das
shlb
jns
or
mov
sbb
mov
fidivl
push
stos
jg
sbb
roll
fadds
pop
ror
or
xchg
fldcw
xchg
mov
push
lcall
jle
mov
aaa
dec
imul
daa
inc
adc
in
fiaddl
orb
jmp
stc
out
iret
mov
adc
iret
dec
out
jb
mov
cmc
test
fsubrl
mull
call
addb
sub
adc
lods
shl
mov
cmp
push
cmp
add
decl
inc
movb
sbb
mov
cltd
in
dec
pop
clc
addr16
pushl
enter
incl
sar
adc
xchg
jge
mov
mov
repnz
cmc
ljmp
mov
jecxz
mov
add
dec
shlb
jmp
inc
mov
xor
scas
test
jge
outsb
outsl
repz
xlat
ret
aas
pusha
push
push
xor
adc
int
ds
test
scas
hlt
inc
pop
imul
enter
lret
jne
incl
jp
mov
push
cmp
std
jmp
icebp
pop
add
loope
out
outsb
push
mov
jmp
mov
cmpsl
mov
loop
add
fstpt
pop
add
call
notl
jle
test
rolb
jmp
push
jmp
popa
or
adc
call
loopne
add
mov
repz
push
je
daa
jg
push
lcall
jge
mov
mov
and
jo
pop
xchg
ret
inc
lds
adc
pop
decl
cmp
leave
or
dec
loopne
mov
movsb
shlb
mov
incl
and
mov
cmc
ja
mov
xor
std
std
stc
ret
insb
test
cs
mov
movsb
mov
clc
sti
pop
lods
mov
sti
clc
call
daa
sti
jmp
mov
dec
pop
pop
fldenv
je
jmp
dec
aaa
out
imul
pop
xchg
in
lret
push
pop
hlt
mov
das
aaa
xchg
ret
enter
orl
pop
jl
jmp
shll
or
cli
xor
stc
mov
xchg
fsts
sahf
int3
aad
mov
jle
fisubrs
ds
pop
outsb
nop
je
in
rorl
cld
cmc
jg
push
mov
dec
inc
cmpsl
lret
adc
enter
sub
aaa
xchg
ja
jmp
int3
lret
push
lods
ljmp
cli
jmp
test
mov
push
in
inc
call
ljmp
call
sti
ud1
cmp
adc
ss
mov
aaa
dec
push
bound
cld
das
lock
dec
fcompl
jmp
jp
repz
xor
dec
imul
pop
int3
xchg
add
cld
sub
mov
and
jmp
fdivrs
lock
call
loopne
sarb
ja
fisubrs
fwait
in
pop
clc
fstpt
clc
sar
icebp
pushl
imul
rorb
ret
xorb
cs
decl
mov
ja
enter
pop
jne
test
divb
or
std
jmp
repnz
push
movsl
mov
sbb
fs
cmpsb
in
ret
jae
hlt
fwait
out
hlt
aas
iret
add
sub
xchg
lcall
stc
jmp
shl
pop
push
ror
std
popf
shll
popf
mov
out
or
decl
cmp
add
leave
out
loopne
lods
dec
mov
je
clc
icebp
lock
xor
out
jg
call
scas
adc
cmovae
sub
sub
xchg
mov
xchg
inc
jp
pop
cli
sub
pop
jg
xchg
jg
test
push
rorl
shll
jg
stos
or
pop
out
out
jp
adc
mov
jecxz
out
adc
cmc
daa
mov
in
std
decl
xchg
in
outsl
or
dec
loop
scas
imul
sub
lahf
mov
outsl
mov
call
xor
outsb
out
sbb
cld
mov
lret
fildll
sub
add
push
fdivl
pushl
out
cmpb
pop
push
jecxz
fisttpll
dec
sahf
and
add
vpsubq
mov
sti
decl
mov
in
sub
cld
mov
jge
sti
cmp
incl
hlt
jb
ret
cli
mov
out
sbb
mov
pop
scas
cli
jmp
add
push
adc
jae
fdiv
mov
std
mov
repz
daa
push
jnp
inc
stc
inc
mov
outsl
outsb
imul
xlat
jg
sbb
jmp
mov
jg
loope
test
cmp
sti
push
shl
cmpsl
pop
sub
fisttps
jo
cmpsl
lods
adc
inc
xorb
fsubrp
jmp
xchg
and
loope
dec
xor
jno
inc
mov
in
jne
js
shl
push
sbb
std
pop
aaa
pop
aad
pop
adc
sbb
mov
in
dec
mov
imulb
nop
fildl
inc
sub
jl
ret
aas
and
xchg
jle
pop
call
or
inc
rclb
or
negl
scas
xchg
inc
sbb
movl
ljmp
sbb
pop
mov
js
insb
adc
xchg
testb
mov
aas
xor
xchg
xlat
pop
test
dec
sbb
cmpsb
mov
mov
dec
les
pop
pop
ja
repz
cmp
cmp
add
jns
call
dec
lods
divb
lret
out
cmp
cs
xchg
pusha
xchg
pop
outsl
imul
out
mov
jnp
out
sbb
cli
and
pop
mov
pop
push
fs
lahf
shl
aas
or
cmc
push
call
xor
dec
cmpsl
jbe
jb
aaa
mov
frstor
cmp
jg
scas
mulb
jecxz
out
ror
js
neg
popa
dec
xor
lods
nop
ret
xchg
testb
cli
je
jnp
popf
sbb
push
incl
pop
dec
popf
jmp
xor
data16
movsl
out
in
mov
addb
popa
mov
jmp
into
jne
xor
pop
test
push
jae
pop
jg
adc
pop
jmp
adc
and
and
xor
xor
jmp
pusha
shrl
insl
rorl
pop
lods
cmpsb
jl
inc
mov
je
dec
decl
mov
jbe
sti
jo
jmp
adc
lods
dec
xchg
inc
jae
jmp
cli
pop
fs
ret
lods
inc
cli
in
mov
sbb
mov
lcall
scas
jle
call
add
pushf
pop
imull
nop
inc
add
in
shlb
scas
fisubrl
incl
xchg
js
dec
and
mov
fwait
jg
lods
stc
popf
sbb
mov
leave
notb
mov
inc
mov
lcall
xor
inc
inc
jae
es
inc
sub
jb
add
scas
cmp
add
jg
jmp
pop
in
sub
inc
ja
dec
jg
or
loopne
in
call
lahf
mov
js
call
mov
pop
pop
call
mov
popf
fisttps
pop
dec
test
js
je
xor
push
jns
sub
cmc
fimuls
std
ss
ret
xchg
mov
jg
xchg
cld
sub
cli
std
adc
idiv
fbld
scas
mov
cltd
call
gs
fisubs
bound
pushl
sbb
cltd
jl
or
mov
cltd
add
notl
repz
nop
int3
jmp
cld
scas
idiv
mov
sub
je
mov
ror
cmp
scas
mov
xor
jmp
mov
mov
sub
xor
or
call
xor
cmp
pop
js
sbb
mov
jae
mov
jae
dec
lock
repnz
mov
pushl
clc
lret
pop
test
das
fwait
in
inc
dec
imul
push
fcomip
xor
test
cmpsb
mov
sar
jecxz
push
sub
js
push
pop
cmpsb
aas
enter
or
cmp
and
mov
lock
incl
popf
mov
repz
add
out
jo
xchg
mov
pop
daa
cld
jge
setns
or
pop
push
and
outsl
add
xchg
mov
pop
mov
jmp
mov
addr16
incl
xchg
fdivs
test
rcrb
mov
lcall
dec
jg
xlat
bound
xor
sbb
je
cld
add
inc
out
and
ljmp
rolb
ljmp
pushl
cmp
fstl
decl
cmpsl
or
and
cmpsl
mov
incl
in
aam
dec
add
or
pop
data16
push
mov
das
cli
jg
mov
ret
ret
das
popf
add
jb
out
inc
mov
jmp
stc
pop
cmp
sti
and
test
sarb
and
jmp
int3
shl
adc
ljmp
inc
mov
cmc
push
adc
push
in
bnd
lcall
call
mov
divl
add
lret
mov
cli
ret
sub
sbb
pushl
inc
aas
sbb
mov
cltd
jae
jb
push
pop
dec
scas
lahf
repz
outsb
gs
fdivr
call
std
mov
iret
js
jnp
push
and
test
mov
fbld
pushf
mov
xchg
incl
and
in
adc
and
icebp
test
out
push
or
mov
lcall
decl
ja
jbe
sarb
imul
pop
fucomip
pop
jmp
repz
adc
shlb
cmp
sub
xchg
sub
pop
pop
mov
popa
jle
dec
sub
call
jae
adc
stos
scas
lea
add
jmp
xor
sbb
ja
ljmp
ret
xor
adc
pop
shlb
fcmovb
jns
les
mov
xchg
movsb
jmp
not
mov
popf
jle
push
idiv
movb
sub
ret
lea
stos
push
nop
repz
jne
call
cmc
sbb
jg
cmp
out
in
in
int3
pop
ret
push
or
decl
div
dec
outsb
xchg
pop
cmp
mov
adc
in
incl
out
jmp
ficomps
rorl
mov
jl
cli
pop
jno
push
jo,pt
lods
push
sub
mov
rcrl
movsb
sti
jle
jecxz
xchg
mov
cmc
ljmp
sarb
jge
fsubp
in
xchg
sub
hlt
cld
cmc
pop
subb
pushf
imul
out
sbb
outsl
pop
pop
mov
adc
fimuls
sub
inc
jecxz
xchg
xor
jg
test
neg
imul
mov
jno
addb
ss
std
gs
in
bound
cmpl
out
sbb
outsb
icebp
stos
sub
sub
test
fisubs
loope
pop
xor
in
or
dec
xchg
int
cmp
repz
add
call
sub
out
subl
lcall
arpl
push
outsl
xchg
pop
int3
fnstsw
sahf
loop
pushf
jno
jns
mov
insb
jp
dec
push
nop
jg
test
nop
or
in
rclb
cmp
mov
test
pop
mov
push
jg
mov
rorb
ljmp
mov
test
cmc
add
cmp
cmp
adc
aam
or
dec
movsb
cmpsl
mov
jae
std
aaa
pop
inc
sub
add
fldz
aad
loope
mov
incl
loopne
icebp
fdivl
add
es
daa
cmp
mov
daa
cmp
rcrb
bound
push
mov
lds
ljmp
clc
inc
outsb
fwait
push
iret
cli
in
jns
adc
mov
mov
imul
add
hlt
cmp
jg
roll
fldenv
sbb
dec
ds
test
pop
jnp
dec
movsb
pushl
xor
cli
dec
push
in
xchg
loopne
pop
pop
jmp
mov
imul
and
cld
pusha
scas
mov
mov
pop
dec
loop
call
inc
mov
xchg
out
push
mov
ljmp
lcall
mov
stc
or
mov
cld
cli
sub
cmp
incl
pop
cmp
aad
fsubrs
cmp
hlt
cmp
pop
rolb
js
push
call
push
out
adc
loopne
fidivs
cmp
push
dec
popf
imull
push
rcl
dec
sub
scas
mov
jnp
into
outsl
call
sbb
jnp
je
cmp
and
testb
xchg
test
data16
xor
mov
mov
pushl
jl
icebp
cmp
mov
mov
imul
inc
lds
aaa
cmp
or
push
xchg
call
das
outsl
mov
gs
mov
pushl
js
ret
pop
jnp
add
lahf
std
push
movsl
add
andnps
scas
push
scas
lcall
mov
and
call
sub
loope
push
loop
movl
mov
fldenv
test
out
pop
dec
xchg
mov
scas
dec
jg
imul
into
jp
jno
jno
and
outsb
es
fwait
and
mov
inc
les
adc
pop
icebp
repz
cmp
jnp
push
sub
and
test
shrb
pop
into
fbld
andl
mov
repz
out
cmp
sbb
ret
mov
notl
test
cltd
out
or
lds
jl
pop
out
or
stos
aad
das
mov
jmp
aad
int3
pushl
adc
cmpl
std
mov
mov
inc
fucomp
xchg
and
push
cmpsl
ss
pop
mov
sub
into
or
ja
sub
cwtl
xor
fcos
decl
pop
mov
dec
mov
test
or
fbld
test
push
push
jmp
cld
nop
cmp
mov
or
cmp
mov
decl
clc
jbe
mov
clc
sub
fistpll
rcll
and
enter
sbb
mov
ret
pushl
test
bound
enter
fistl
ja
jge
ds
into
ljmp
cli
xchg
in
lods
clc
jno
iret
mov
mov
ss
mov
pushl
dec
xor
loope
enter
mov
cli
jle
mov
jecxz
and
test
dec
dec
sub
mov
int3
mov
lods
push
and
cmp
clc
pushl
sbb
fwait
sbb
inc
push
lods
punpcklbw
inc
xlat
call
pop
and
mov
jbe
mov
jg
mov
jns
pop
dec
insl
mov
in
inc
in
pop
dec
jb
push
ja
push
pop
lcall
cmp
mov
xchg
xor
incl
mov
xchg
or
sti
les
fimuls
dec
fsubrl
add
inc
ja
cli
and
es
fmull
neg
test
dec
lahf
pop
pushl
ljmp
jo
es
shld
mov
std
dec
dec
mov
sbb
lret
icebp
ficompl
xor
jg
and
lds
inc
sbb
addr16
xchg
les
ljmp
inc
mov
and
lock
push
cld
pushl
or
xchg
mov
add
pop
popf
dec
jl
jo
push
cmp
arpl
lcall
sahf
jle
mov
or
jp
addr16
je
jecxz
hlt
test
insl
pop
es
sub
enter
inc
xor
shr
jns
ret
inc
jge
fs
jg
test
mov
push
push
push
mov
cld
lods
andb
jnp
negb
incl
popf
push
ss
decl
xor
xchg
jecxz
call
push
insl
ljmp
fistpl
mov
mov
adc
ljmp
pop
xchg
les
add
sub
and
aas
and
test
pushl
mov
stc
fs
dec
out
aaa
cltd
les
adc
mov
mov
dec
repz
mov
call
scas
call
ror
data16
mov
xor
pop
icebp
cwtl
inc
ret
cli
nop
xchg
icebp
call
loopne
sbb
scas
lods
push
pop
dec
repz
lcall
dec
sbb
into
repnz
filds
fs
nop
sub
push
lret
call
cltd
jbe
jmp
mov
sti
in
sbb
sti
jle
dec
dec
jle
out
cli
cmpsl
jmp
push
testl
sarl
mov
pop
cld
out
cmp
ljmp
mov
popf
jnp
cwtl
fistl
cmp
jmp
mov
lcall
mov
jmp
shll
cwtl
jecxz
pop
pop
mov
push
lcall
loop
or
adc
fmull
xchg
and
lret
fbld
out
loopne
inc
xorb
das
inc
mov
cltd
pop
pop
sbb
adc
das
or
das
fcomip
jns
out
sti
cmp
lret
mov
push
fcomps
ret
incl
aaa
imul
test
jecxz
stos
scas
in
pop
cld
in
lret
dec
and
ds
mov
test
mov
repnz
dec
lock
enter
test
stc
lods
data16
sahf
outsl
enter
mov
adc
cs
loope
rcrl
push
cmp
sbb
roll
out
adc
insl
loope
xchg
out
es
lods
gs
mov
shll
dec
sti
clc
sbb
inc
jle
or
out
in
pop
cmp
xchg
mov
sbb
loopne
sub
jg
adc
loop
notb
call
fnstenv
and
dec
shlb
ret
add
cld
xchg
dec
scas
int3
js
fdivrs
lahf
xlat
sbb
sbb
cmpsl
es
pop
mov
ljmp
cs
imul
xlat
push
lcall
mov
stos
cli
xchg
sub
incl
cmp
sub
jnp
stos
sahf
imul
jecxz
xor
push
out
outsl
jns
pusha
into
loop
std
lcall
es
ss
dec
es
repz
roll
neg
icebp
push
xor
pop
add
stos
sbb
idiv
pushl
and
insl
xchg
xchg
imul
out
in
mov
pushf
dec
jns
out
shlb
sbb
dec
adc
ret
inc
clc
jg
sbb
push
ret
es
sbb
test
cmp
iret
stos
stc
ja
dec
rol
cmpsl
imul
das
js
jb
jecxz
cmp
call
hlt
dec
das
sarb
lods
icebp
je
stos
outsl
fsub
sbb
or
pusha
mov
pop
jmp
push
xchg
adc
sahf
out
out
rcrb
shlb
pop
leave
adc
clc
das
test
inc
sbbb
dec
ljmp
stos
jbe
mov
cli
imulb
mov
jae
je
sub
ret
in
mov
fwait
cltd
cmp
push
inc
mov
dec
aad
repnz
nop
xor
or
icebp
nop
pop
sti
adc
lods
pop
adc
cmpsl
cmp
push
rorl
stc
subl
clc
aaa
stc
ljmp
std
xchg
xchg
mov
push
in
das
push
xchg
jbe,pt
mov
mov
fsubrl
ljmp
jo
push
out
xor
lea
fstps
pop
sub
pop
cmp
in
pop
jle
pop
add
int
popf
pop
js
insb
inc
shlb
adc
jl
stos
mov
js
arpl
stos
bound
add
lret
into
mov
adc
call
cmpsb
pop
insb
flds
or
ja
push
iret
add
sbb
or
addr16
pushl
sub
pop
adc
cmc
mov
leave
push
out
pop
xchg
jnp
in
std
pop
or
int
aas
dec
adc
lock
lds
fwait
lods
xchg
add
ret
iret
movsl
mov
fldt
das
repnz
test
push
mov
adc
jg
sub
outsl
cmpsl
jle
std
adc
enter
cmp
pushl
and
iret
push
repz
test
jbe
mov
int3
loop,pn
jmp
repnz
sub
out
and
xchg
mov
sbb
add
cmp
lods
jl
fisttps
out
jp
fidivrs
or
adc
fsubrp
movsb
or
push
movsb
in
test
jnp
sahf
das
cs
cmp
sub
lock
jecxz
xacquire
dec
jbe
iret
call
add
mov
xor
mov
ret
jp
adc
call
das
iret
sbb
out
mov
mov
mov
adc
mov
aaa
into
jns
push
or
iret
aaa
sbb
jbe
adc
lret
sub
lcall
ljmp
loop
cs
pop
icebp
sti
sub
and
jae
dec
push
push
xor
pop
cmp
loopne
sbb
sbb
mov
outsb
neg
xchg
enter
xchg
sbb
bnd
inc
lcall
xchg
test
call
mov
or
or
out
jg
or
lcall
pop
dec
mov
adc
lock
cmc
call
les
iret
pusha
mov
test
jg
cmc
mov
adc
jae
das
stc
adc
push
int3
nop
xchg
add
pushl
push
mov
fnstsw
jns
sbbl
xor
sbb
mov
aaa
std
dec
and
sbb
daa
shll
iret
jmp
inc
xor
sti
incl
mov
test
push
aam
fbstp
inc
leave
inc
jmp
test
and
aaa
ss
les
mov
stos
and
jbe
jo
adc
mov
add
jbe
adc
adc
push
test
data16
mov
mov
mov
sub
daa
daa
cmp
in
sar
ljmp
cmp
xor
addr16
lock
aaa
push
and
xor
das
sbb
test
stos
and
jno
test
repz
mov
jg
or
xor
jns
and
daa
insb
mov
decl
shr
stos
test
popl
and
fnstsw
jbe
push
push
aaa
pop
subb
mov
out
and
sbb
fimull
out
outsb
das
adc
sti
sub
adc
cmp
call
rorb
repz
imull
xchg
loop
jae
jo
and
or
cmp
iret
or
call
clc
sub
mov
jge
add
or
data16
lret
stos
jo
cmp
mov
add
les
mov
and
out
inc
mov
aad
or
push
std
mov
cmp
xor
sub
xchg
pusha
cmp
pop
cwtl
mov
rolb
mov
mov
sbb
or
xchg
pop
lret
adc
rcll
jns
jb
pushl
lret
mov
aam
es
insl
mov
leave
lea
les
call
jp
mov
or
cli
and
dec
rclb
push
sti
dec
aad
fistps
int
stc
mov
scas
jl
adcb
imul
lcall
jne
call
sbb
cmc
les
icebp
cmp
in
ljmp
mov
addr16
hlt
rcrb
adc
int3
div
push
aaa
mov
or
lods
jns
fisttpl
dec
lcall
fnstsw
loopne
push
jns
add
mov
push
mov
adc
lods
xchg
hlt
inc
fcomip
mov
push
imul
and
or
insb
out
dec
ljmp
jmp
xchg
and
cmp
mov
jns
push
jbe
mov
jnp
stc
fidivrl
idiv
mov
scas
mov
pslld
dec
inc
xchg
ljmp
repz
data16
movsl
cmp
xor
dec
scas
xlat
mov
mov
pop
fmulp
sub
pop
cld
call
fcom
imul
push
and
stos
stc
stc
in
adc
lcall
jno,pn
lods
xchg
scas
jns
roll
idivb
imul
repz
ret
stos
sub
jg
call
fcmovnb
xchg
cmovp
cld
push
pusha
lahf
shrl
add
ljmp
cmp
sti
je
sarl
mov
in
mov
mov
xchg
sti
jl
scas
mov
pop
in
stc
xchg
cmp
xchg
add
push
je
in
int3
out
pop
cld
add
hlt
fidivs
ss
call
jle
mov
mov
and
dec
cwtl
push
push
mov
into
das
xlat
sbb
jg
lcall
test
loopne
test
mov
cmp
push
sub
in
cmpsl
jns
push
rcr
pop
cmp
add
xchg
mov
mov
or
inc
call
imul
movsl
or
mov
mov
mov
icebp
outsb
incb
xor
or
inc
incl
ljmp
loope
rol
fnstcw
push
movsl
mov
sub
and
xchg
xchg
push
sbb
cmpsb
call
es
fdivr
jmp
dec
push
lahf
cmp
and
xor
jecxz
inc
mov
mov
cltd
push
lock
mov
inc
loopne
insl
dec
sub
jns
in
cmc
xchg
popf
repz
xchg
ljmp
sarb
add
add
aaa
fmul
incl
in
cmpsl
pop
sub
shrl
ljmp
aad
loope
cli
aaa
jge
fldl
rcr
iret
in
cmovg
mov
adc
aas
jg
in
orps
sub
push
push
cmovnp
fisubs
scas
add
mov
leave
cli
sub
cmp
push
push
jae
xchg
mov
jbe
mov
xchg
lods
test
faddl
pop
hlt
incl
ficoml
scas
fcomps
jle
mov
pusha
scas
push
out
arpl
cmpsl
add
dec
jecxz
iret
jbe
lods
push
idivb
xor
pop
stos
and
mov
fistpll
jmp
pop
mov
mov
push
shl
sub
adc
sub
in
hlt
xchg
xor
call
pop
mov
or
call
mov
sub
loope
stos
xchg
cs
mov
fwait
pop
out
push
mov
sub
mov
test
inc
push
mov
clc
fidivs
in
inc
cmp
jmp
out
mov
call
mov
ret
adc
out
jle
pop
popf
imull
cmpsl
adc
add
mov
out
leave
jae
push
mov
out
mov
aas
scas
scas
popf
xchg
frstor
fnstenv
fstpl
lahf
mov
icebp
decl
inc
test
cmpsl
mov
jp
aaa
inc
loopne
cmp
ss
ljmp
clc
decl
shll
mov
popa
fwait
in
cld
stc
push
cmp
or
sub
call
xchg
lret
in
lcall
sub
add
pop
fwait
lahf
je
mov
jg
call
jecxz
adc
inc
fstps
sub
sbb
shl
out
int
sub
mov
adc
fidivl
push
incl
and
icebp
fidivrl
sbb
es
shr
cmp
test
rclb
daa
xchg
dec
pop
clc
inc
jmp
rcrl
insb
sbb
xchg
jo
sbb
jmp
jge
sub
mov
test
jg
decl
pop
das
lock
dec
dec
add
push
push
lret
leave
ret
jb
ret
das
clc
xlat
add
push
cld
call
cmp
jmp
ficoml
daa
rorl
aas
xlat
sbb
popa
stos
stos
jbe
decl
dec
sbb
sbb
rolb
add
inc
cmp
mov
std
push
pop
dec
ret
decl
pop
mov
out
sub
out
sbb
jmp
adc
sub
cmpsb
insb
std
mov
sbb
ja
dec
mov
mov
movsl
fimull
add
push
ja
push
jnp
mov
ja
add
adc
sti
out
mov
or
repz
fidivs
jp
adc
ss
scas
and
movsl
mov
loop
pushf
les
lret
xor
jg
adc
aaa
or
loop
mov
aam
data16
in
out
xor
call
jecxz
sub
cmp
or
js
out
or
sarl
subb
xor
xor
mov
mov
decl
mov
aas
push
insl
andb
aas
int3
sbb
cs
std
mov
ror
cld
clc
ljmp
test
aaa
mov
push
xchg
stc
sub
cld
gs
mov
sbb
in
pop
jbe
adc
jo
fnstsw
sar
jle
push
sti
idiv
call
cmpsl
testb
cmp
cwtl
cmp
ljmp
inc
xlat
sbb
push
ljmp
cltd
sub
cmc
cli
dec
call
test
icebp
shl
add
in
sbb
jbe
mov
in
lret
fs
clc
push
inc
fdiv
in
call
dec
pop
mov
fsubl
push
fs
jmp
add
movsl
add
sub
xlat
iret
shr
pop
xchg
mov
dec
inc
cli
adc
lcall
jno
or
shll
daa
xchg
lods
dec
or
jmp
and
cmp
loopne
test
mov
int3
test
int3
cmp
dec
mov
ljmp
call
and
fucomi
xchg
repnz
dec
faddp
in
push
fnsetpm(287
shl
call
pushl
cmp
repz
rdmsr
sub
lods
ds
sbb
dec
jg
ljmp
cltd
loopne
lahf
mov
test
jmp
jno
aad
lcall
fistpll
pop
repnz
je,pt
stc
adc
ret
addr16
cwtl
push
int
inc
stc
repz
rcrb
lcall
pop
dec
sub
adc
fistpll
mov
pop
addr16
xor
mov
cmp
adc
or
and
dec
je
mov
xor
dec
cld
fbstp
clc
pushl
mov
jg
mov
jo
in
test
mov
loopne
dec
into
cmp
pop
mov
scas
fnstcw
cmp
pop
cli
out
fildl
mov
jne
and
call
fdivr
call
jg
scas
xchg
ljmp
inc
mov
je
repz
stc
cld
add
cmc
ljmp
shl
loopne
xor
fiadds
jns
idivb
sarl
scas
clc
in
push
adc
jb
push
fsubrl
lahf
aaa
xorb
fnstcw
pop
bswap
sbb
ret
incl
loopne
ljmp
hlt
movl
mov
clc
and
imul
mov
and
cmp
adc
dec
lock
pop
mov
lcall
cwtl
ds
add
mov
jo
imul
mov
popf
sahf
fdivrl
xlat
jl
cli
pushl
cmp
pop
imul
lods
in
inc
add
insb
pop
lahf
testb
xchg
cli
aad
pushf
loope
cmpsb
es
adc
test
ljmp
ljmp
sbb
adc
pop
in
and
test
add
ret
pop
decl
jecxz
mov
pusha
xchg
ffreep
cmp
dec
cmp
sbb
fstpl
mov
mov
loope
ds
xlat
sti
pmuludq
mov
aas
das
int
jp
lods
sub
or
ret
daa
cli
jb
out
leave
and
xchg
insl
movsb
mov
cmpsb
cmpsl
fadd
loop
imul
mov
in
hlt
in
nop
daa
repz
inc
aas
daa
popa
rcr
aas
cld
xchg
jp
sbb
hlt
dec
notb
inc
fcmovne
inc
daa
cmp
jmp
inc
lret
xchg
repnz
imul
hlt
ds
cmp
pushl
rolb
popa
jg
fists
daa
and
in
push
icebp
cmpsb
lods
mov
enter
ror
jl
ljmp
and
cld
or
icebp
inc
std
jne
sub
in
cmp
sub
mov
dec
fcmovu
mov
in
dec
in
in
lahf
cmp
insl
and
sbb
dec
in
loopne
mov
pushl
and
pop
stos
repnz
ljmp
je
sbb
jmp
iret
out
sub
pop
fildll
ss
neg
inc
pusha
lock
dec
jg
call
jecxz
jg
adc
mov
icebp
adc
sbb
lock
outsl
repnz
fcompl
fcomip
decl
xchg
mov
pop
fwait
adc
roll
clc
std
icebp
cs
mov
repnz
adc
push
adc
sti
add
jg
push
ret
movsl
aas
or
mov
dec
pop
lret
mov
faddl
mov
ljmp
jg
or
pinsrw
jge
test
xchg
adc
cmp
push
mov
adc
xchg
lock
sahf
ljmp
mov
cmp
push
push
dec
jnp
sti
lock
sub
dec
pop
movsl
ret
fistps
adc
dec
mov
pop
lds
mov
repnz
mov
cwtl
mov
inc
or
push
dec
sub
cwtl
repnz
xor
stos
mov
jae
sar
lahf
bnd
or
fwait
jp
in
mov
cmpsl
jno
adc
mov
inc
loop
dec
in
xchg
sub
ljmp
fsubr
inc
sbbb
ljmp
mov
adc
aaa
inc
sbb
adc
stc
or
les
xchg
jp
loopne
fcomip
loope
movsl
pop
mov
lret
clc
pop
xorl
fcoml
push
push
divb
jb
inc
mov
lds
sbb
mov
jbe
sub
out
or
je
cmp
jo
mov
pop
ljmp
sub
adc
pop
inc
inc
mov
jns
les
pop
jge
pop
push
decl
xchg
jbe
loop
test
test
test
outsb
in
mov
adc
bnd
cmp
out
loop
in
mov
ljmp
test
mov
gs
sbb
fidivrl
lods
cmova
fcomip
movsl
outsl
test
sti
hlt
pop
movsb
and
aas
and
adc
cmpsl
lods
ds
lcall
xor
cmp
push
pop
xlat
fstpl
pop
cmpsb
pop
mov
in
adc
imul
dec
and
decl
insb
cmp
out
mov
pop
xchg
pop
push
repz
jmp
pop
jg
fisubrl
fisttpll
pushf
mov
inc
mov
cmc
xchg
icebp
jp
paddusb
incl
insl
pop
jno
icebp
dec
cltd
int3
jp
mov
push
dec
inc
ljmp
in
mov
in
mov
aaa
imul
sbb
xchg
jle
pop
lods
and
das
add
incl
pop
adc
mov
pusha
lods
xchg
push
test
out
xchg
cmp
cmp
fistpll
mov
shlb
and
jnp
push
js
mov
pushl
shlb
adc
aam
jp
sahf
dec
add
mov
icebp
inc
jp
inc
jp
cmp
push
pop
jo
call
jmp
aad
sub
mov
jno
pushl
int
or
ljmp
xchg
clc
fsubrp
stos
jo
lods
push
rcrl
sar
incl
lret
loopne
ljmp
push
loopne
shrl
dec
sub
push
fidivrs
dec
ds
ljmp
cmp
dec
mov
cmp
incl
iret
dec
jp
mov
mov
in
stc
sbb
jmp
call
jo
jg
fucomi
fsubl
pop
mov
mov
lock
lahf
pop
push
push
inc
jmp
fisttps
fcmove
loope
sub
in
lds
sti
jmp
sbb
call
fs
jnp
outsb
sbb
dec
mov
inc
sbb
xchg
rcrb
std
arpl
jmp
pop
fld1
addr16
sbb
pop
outsb
dec
loope
push
out
das
scas
mulb
ljmp
inc
jl
stos
out
movsl
mov
ds
int
jl,pt
inc
xor
dec
push
fisubl
decl
mov
xorb
rclb
shrl
mov
and
sbb
ljmp
stc
fbld
jae
mov
adc
fdivrl
ja
lock
cmp
cmp
sbb
adc
shl
in
sets
decl
into
cwtl
sbb
mov
add
sub
cld
push
lea
sti
lcall
call
mov
cwtl
pop
popf
cmpsl
and
adc
std
jmp
cmp
jnp
ds
scas
dec
dec
ffreep
xchg
dec
test
cli
xchg
pop
ja
imul
stc
sub
jg
jnp
mov
lcall
xchg
jle
cli
inc
sub
iret
cmp
adc
jnp
rolb
popa
inc
or
test
xchg
jb
dec
std
push
incl
ficoml
ds
fsubl
enter
cmp
sti
sbb
mul
shl
test
cmp
and
sub
in
sarb
imul
stc
call
inc
movb
jbe
dec
sti
jecxz
jecxz
jmp
scas
mov
decl
in
jae
mov
sbb
sbb
hlt
out
xor
sub
incl
ja
cmp
and
ficomps
mov
jmp
pop
daa
shl
lcall
cld
push
cs
mov
xlat
pop
mov
cmc
loop
call
push
and
jg
rol
inc
into
out
dec
ret
and
mov
adc
lret
dec
sbbl
out
jecxz
lret
scas
cld
lahf
dec
inc
inc
jg
ss
xchg
incl
inc
jmp
sti
cmp
or
pusha
hlt
cmp
adc
das
sti
push
mov
jg
xchg
incl
cmp
sbb
jmp
repz
xchg
out
pop
jl
sbb
push
in
pushl
or
and
insl
fs
popf
pop
test
xchg
sahf
cmp
push
cmc
in
call
cld
sub
xchg
lods
mov
fsubp
or
sbb
idivl
jb
mov
cmp
ljmp
int
sbb
in
in
adc
outsl
sbbb
adc
outsl
pushl
clc
fstpt
cld
push
pusha
jnp
cmc
mov
xor
test
ds
mov
decb
int3
ss
nop
fnstcw
sbb
mov
lcall
popa
and
mov
adc
and
fisubrs
push
or
into
incl
pop
mov
stc
stc
lock
out
aad
mov
popa
pop
and
push
hlt
lcall
jecxz
mov
dec
out
bswap
notl
aam
repz
das
sar
repz
push
or
cmp
sbb
int3
in
loop
lcall
push
pushl
aaa
xor
mov
stos
inc
adc
push
in
imul
xchg
call
loopne
cs
das
lret
shl
pop
lds
popf
mov
cmp
aad
xor
rorl
inc
xchg
subb
fdivr
lcall
xor
addr16
sbb
mov
ret
and
lea
rclb
push
neg
out
rorl
push
and
adc
loop
mov
sub
shrl
ljmp
fdivrs
xchg
cmc
dec
inc
push
into
or
sbb
sbb
call
push
lret
mov
pushl
fcmovu
aas
in
outsl
popf
outsb
in
pop
and
xchg
dec
mul
mov
pop
decl
divb
jmp
pop
in
sub
xchg
push
fisubrl
int3
fildll
outsl
fstl
lret
and
mov
ds
incl
mov
scas
dec
sub
adc
in
aaa
aaa
sar
ljmp
jmp
and
lahf
sub
int
pop
or
out
jg
pop
movq
cmp
pop
in
fisubrl
mov
lret
lock
jmp
jb
les
mov
pop
fisubrs
xchg
sbb
out
mov
adc
dec
outsl
sbb
jns
cs
lcall
add
add
pcmpeqd
rorl
dec
xor
jle
js
pop
hlt
jg
out
int3
in
iret
clc
rcll
sub
xor
mov
sub
jmp
jle
shl
push
ret
ja
pop
insl
fadd
int
imul
fimull
or
or
je
in
jge
idivb
iret
xchg
movsl
fs
pop
repz
inc
incl
repz
xchg
jbe
push
cmc
jmp
pop
sarl
mov
aas
es
push
dec
jmp
xlat
xor
loopne
aam
adc
lods
cmp
stc
aam
lahf
cld
repz
sub
pop
popf
xchg
xchg
pop
lock
fstpt
xchg
movsl
xor
mov
sti
jmp
ljmp
xor
scas
pop
push
fbld
jle
inc
out
sub
hlt
sbb
test
dec
cmp
cmc
fwait
jl
adc
dec
in
lret
sub
jo
pushl
outsb
lds
push
loop
std
sbb
repnz
cmp
int3
pop
or
dec
lret
fldln2
sbb
popf
fcmovbe
pop
jbe
repz
fcomip
mov
std
push
lahf
cli
mov
fidivrl
rclb
clc
call
jl
hlt
and
testl
adc
mov
ficoms
jne
lods
loopne
lahf
inc
mov
jnp
out
mov
cmp
jnp
inc
mov
jmp
std
push
cmc
negl
in
ljmp
loop
ja
ror
pop
pop
sub
inc
jmp
std
jle
jecxz
test
push
push
mov
imul
fisubrs
aas
pop
push
imul
ljmp
mov
data16
mov
adcb
pop
les
das
nop
add
adcl
jg
imul
imul
jnp
bound
add
arpl
push
ja
jmp
jmp
mov
sbbl
clc
ja
pop
fmuls
cli
out
xchg
shl
push
add
nop
rolb
dec
aad
xchg
push
jmp
hlt
les
and
mov
test
xlat
jmp
mov
cli
out
fcoml
add
or
negb
cmp
jmp
std
mov
add
push
cmp
mov
sub
je
inc
cmpb
pushl
aas
fistps
dec
or
cmp
or
movsl
inc
inc
and
mov
mov
mov
xchg
mov
sti
xor
loopne
xchg
adc
inc
mov
jae
sti
push
lret
sti
std
inc
push
lret
or
dec
inc
inc
ret
ficoml
pop
in
mul
cmp
cmp
xchg
push
pusha
xchg
out
clc
fisttpll
adcl
out
mov
dec
xchg
mov
jl
scas
clc
sub
aad
in
jg
clc
mov
push
pop
jo
outsl
loop
mov
jmp
cs
test
ja
xlat
jle
lahf
je
dec
pop
out
shlb
jg
or
mov
test
mov
cmpsb
pop
mov
out
inc
ds
jmp
pushl
mov
jne
ljmp
adc
fists
int
jnp
rol
sub
icebp
call
cmc
or
sub
sbb
mov
fidivs
bound
aaa
outsl
push
xchg
cltd
fwait
dec
or
mov
inc
je
inc
in
lret
mov
imul
or
sbb
ss
cli
ret
mov
push
enter
decl
gs
imul
fwait
inc
cld
mov
cmp
mov
xlat
cmp
dec
out
adc
idivl
in
push
bound
mov
mov
cmovo
push
or
call
sub
sub
xor
mov
sub
daa
fdivrl
pop
cmpsl
adc
cmpsl
cmpsl
adc
or
and
and
ss
jge
enter
push
push
nop
pop
leave
mov
mov
lock
movsl
jae
pop
or
sub
adc
stos
dec
adc
imul
dec
out
stos
ljmp
lds
movsb
cwtl
movsb
mov
clc
mov
cmpsl
mov
xchg
in
sub
push
iret
push
push
lods
clc
and
filds
push
stc
in
jmp
mov
shl
out
dec
in
ret
call
repnz
ja
xchg
shll
cmc
js
pop
int3
nop
iret
xor
and
call
xor
cmp
cmp
stc
cmc
mov
arpl
jo
sbb
jmp
test
xchg
stos
pop
jbe
das
cmpsl
outsb
add
jmp
add
pop
adc
in
sar
loop
cltd
jle
jmp
lahf
sbb
scas
xor
jo
cltd
test
fsub
or
out
sbbb
jg
jmp
fs
mul
fildll
leave
out
data16
aas
cmp
test
pushl
icebp
sub
nop
lret
inc
call
fcmovnb
pushf
or
out
ljmp
cmpsl
clc
sub
fucomip
test
out
sub
xchg
pusha
in
or
and
movsb
or
dec
jle
mov
out
sahf
cltd
fistps
pop
icebp
jnp
mov
push
out
lock
jno
subl
xchg
sub
int
cltd
pop
ja
insl
cltd
cld
sub
daa
xchg
in
jmp
ljmp
into
and
pop
pop
adc
mov
mov
mov
jno
fcomps
push
decl
mov
mov
in
lods
xchg
mov
loope
lahf
xchg
adc
xor
xchg
hlt
in
inc
mov
dec
cli
and
out
jo
stc
dec
enter
sub
fbstp
cmp
cli
maxps
aaa
pop
push
out
sub
inc
adc
adc
call
lret
fiadds
push
push
ja
inc
sarb
sahf
xor
lods
xchg
out
rorl
jmp
sbb
and
daa
iret
loope
int
push
mov
mov
cmpsb
incl
in
add
ret
out
cwtl
mov
stos
nop
clc
in
jmp
call
pop
lods
icebp
or
pushf
mov
call
mov
add
jle
movsl
mov
in
stos
addr16
loopne
xor
cmp
incl
les
fimuls
sar
out
xchg
rorb
shrb
incl
jmp
mov
test
pop
repz
idiv
xlat
cmpb
nop
outsl
mov
lcall
mov
icebp
dec
loop
jl
out
pop
and
adc
pop
mov
das
cli
aas
xchg
sub
xchg
aam
dec
sbb
cmp
jo
sar
incl
pop
mov
xchg
pusha
mov
aas
mov
sub
jbe
out
cmpsl
cli
pop
sbbb
pop
sbb
js
popa
orb
in
outsb
push
cwtl
out
loop
sahf
fnsave
subb
bound
add
sahf
insb
lcall
adc
mov
mov
mov
mov
ss
iret
in
incl
out
xchg
sbb
adc
test
cmp
mov
out
scas
push
cmp
ljmp
inc
mov
sub
push
imul
xchg
aam
mov
adc
repz
jecxz
dec
inc
push
push
sbb
in
insb
mov
adc
stos
out
jmp
mov
xor
jg
movsl
adc
call
mov
push
mov
stc
mov
inc
int
lahf
mov
jge
in
cld
in
sub
incl
cmp
adc
stos
cmc
push
jae
ljmp
movsb
lcall
in
mov
lahf
mov
jl
aaa
shll
addr16
jmp
out
jmp
sbbb
adc
test
sub
loop
out
adc
test
dec
ljmp
cmp
mov
mov
in
leave
dec
fildll
popf
jmp
enter
rolb
out
cmpsb
out
insl
or
mov
sti
call
mov
clc
cmc
iret
daa
std
test
lock
push
test
adc
sbb
jg
pushl
dec
mov
hlt
popf
pushf
push
xor
decb
test
incb
mov
incl
xlat
mov
jecxz
jmp
icebp
cmc
fsubrl
add
inc
mov
push
lcall
jno
in
call
pop
cmp
scas
add
fcomps
jb
scas
lcall
or
sbb
negb
clc
std
inc
cmc
les
push
cmp
mov
test
pop
mov
fs
pop
mov
insb
movsb
call
mov
enter
incl
mov
repz
scas
clc
jecxz
inc
neg
in
sub
cwtl
mov
in
sbb
and
leave
aad
cltd
pusha
inc
lds
sbb
push
repz
mov
les
pop
add
inc
pop
mov
xchg
fisubl
jmp
lock
dec
es
jmp
bnd
shrb
js
jge
std
mov
out
adc
xlat
das
mov
hlt
fstl
xchg
mov
or
ljmp
xor
ret
push
cmpsb
cmp
leave
into
pop
sarb
and
sbb
daa
dec
xchg
jbe
repz
jg
sub
pop
mov
cli
jl
sub
cli
xchg
jmp
xlat
nop
xchg
xchg
call
insl
cld
outsl
mov
sub
lock
inc
xor
dec
imulb
inc
add
das
xor
arpl
out
cmp
adcl
mov
call
xor
mov
jmp
jnp
cli
cmp
ljmp
fdivrs
cli
sub
das
cmc
cli
arpl
hlt
testl
push
fdivrs
jmp
jge
sub
mov
cli
xor
mov
push
and
inc
sub
cli
in
dec
or
cld
mov
loopne
insb
pop
dec
fimull
mov
int
lea
pop
sbb
pushl
arpl
repnz
out
ss
inc
stc
loope
aaa
out
and
pop
fs
mov
mov
call
int
xchg
repnz
mov
clc
inc
ljmp
mov
mov
ljmp
cli
decl
or
adc
push
cld
in
mov
leave
inc
shrl
jmp
es
and
and
adc
pop
out
mov
xchg
fcomps
cmp
mov
xchg
xchg
call
js
push
aas
cmp
sub
or
out
out
iret
xchg
sub
sahf
sbb
jns
loope
jmp
in
xor
testl
pushf
mov
and
mov
jmp
out
pushf
pop
out
shrl
fstl
jb
mov
imul
dec
and
lcall
cmpsb
inc
mov
in
mov
pop
das
xor
call
push
push
pop
jns
mov
lcall
loope
jne
adc
clc
mov
jne
cld
cmp
rcll
idiv
ljmp
mov
lods
xchg
iret
cld
nop
inc
push
incl
xchg
std
dec
cmpsl
push
stos
jb
test
xchg
inc
enter
lcall
js
in
jno
mov
decl
test
dec
scas
mov
fcoml
push
icebp
jne
aad
dec
add
cmp
ljmp
mov
aas
into
sub
pusha
fnstenv
xor
je
add
inc
call
jmp
pop
mov
cmpsl
adc
and
xlat
cmp
repz
in
ljmp
sahf
rcll
lahf
pushf
inc
xchg
ret
or
inc
leave
shlb
sub
dec
jnp
cld
cmp
add
call
ret
jmp
test
add
mov
pop
xorl
pop
and
arpl
je
mov
popa
cli
divl
jg
and
ficomps
out
int3
xchg
ljmp
scas
xchg
pop
xchg
std
cmpsl
cld
inc
arpl
mov
pop
or
xchg
pop
or
mov
push
cs
fsubr
cwtl
ret
stos
add
mov
dec
call
stc
cmpl
call
xchg
das
jmp
jae
rorb
test
inc
mov
cmc
mov
test
ljmp
fildl
cmp
outsl
sub
pop
incl
cwtl
int3
mov
subb
xchg
cmpsl
out
cltd
arpl
lcall
into
in
testl
cmp
cmp
xchg
clc
jg
nop
and
scas
xchg
rorl
cmp
jno
xchg
inc
xchg
shll
and
jmp
inc
jmpw
cmp
int3
inc
mov
push
ss
lds
incl
pop
fistps
add
scas
and
shl
push
mov
pop
call
mov
sbb
jp
mov
cmp
cmp
call
jl
sub
xor
cvtps2pd
orb
or
pop
mov
das
xchg
icebp
dec
sbb
add
cwtl
lock
dec
inc
push
sbb
mov
xchg
xor
mov
pushf
aas
or
stos
xchg
xchg
xchg
xchg
lret
mov
scas
scas
lods
lods
cmp
lcall
movsl
movsb
mov
mov
scas
mov
mov
mov
mov
mov
iret
into
int
jg
sub
loopne
ds
les
into
mov
jmp
enter
iret
cwtl
ret
sbb
ss
test
repnz
sub
call
bnd
shl
jmp
cmpsl
fimuls
fdivp
mov
inc
cs
pushl
int3
dec
rorl
hlt
out
aad
mov
jns
jno
mov
ja
lret
movsb
sar
inc
or
aam
negb
sub
jo
stc
jno
mov
imul
jg
sub
xchg
add
ss
call
mov
out
dec
fsts
dec
test
iret
stc
cltd
mov
cltd
dec
repz
mov
push
out
movsb
inc
adc
mov
enter
lcall
mov
mov
outsb
call
xchg
call
popf
sbbl
icebp
pop
sar
imul
lcall
and
ds
test
mov
ja
jge
xor
mov
mov
lcall
hlt
repz
adc
mov
jl
test
mov
hlt
sahf
xor
in
out
lret
lock
cmc
out
inc
adc
pop
ljmp
cwtl
lcall
cmpsl
test
lret
js
and
xchg
loopne
lret
cmc
pushl
stc
shl
bound
in
pop
vmulsd
mov
cltd
insb
into
xlat
dec
push
mov
mov
clc
jecxz
sub
mov
repz
mov
push
dec
jne
xchg
test
pop
xchg
jg
push
popf
sub
jmp
mov
call
cli
nop
lea
call
mov
mov
mov
leave
pop
stc
clc
lahf
out
and
mov
ss
sbb
pop
ret
inc
clc
out
jg
ret
daa
push
push
lcall
int
xchg
inc
sub
xor
fisttpll
pop
es
gs
cmc
shr
inc
js
jmp
pop
loop
stc
and
loope
fucompp
adc
fdivp
jmp
xlat
mov
aad
jmp
mov
push
int3
pusha
push
popf
aam
or
ljmp
mov
mov
das
lahf
stc
daa
incb
das
lds
lcall
sbb
mov
mov
dec
adc
mov
inc
cld
call
ret
lret
lret
scas
xchg
cmp
inc
imul
fwait
nop
std
pop
push
movl
mov
cmp
lods
sbb
incl
fwait
mov
stc
nop
mov
es
shlb
jecxz
or
movsb
in
pop
inc
cli
jmp
cli
insl
addl
sti
fs
loop
pushl
cmp
popf
jle
or
stos
pushf
sti
mov
outsb
sti
nop
pop
ds
scas
push
mov
fidivrl
mov
cld
shrl
iret
aas
lret
mov
pop
std
push
pop
data16
fcmovnb
push
fwait
lret
jmp
insb
scas
push
fistpll
inc
out
rorl
insl
mov
pop
ja
addr16
cmpsb
cmp
js
call
or
cwtl
jecxz
shlb
outsb
xchg
mov
jl
dec
jg
jg
rclb
out
jmp
call
ror
out
das
stos
decl
xchg
xchg
sbb
cmp
hlt
fcomp
sar
jmp
xor
inc
test
je
pop
mov
mov
push
sub
cmpsb
mov
ret
out
iret
xchg
xchg
sahf
mov
mov
mov
mov
lods
jnp
fstpt
cmpsl
mov
std
and
popa
mov
mov
adc
cmp
mov
fwait
cmp
inc
sub
out
jl
jnp
and
sbb
mov
fcomi
dec
mov
cmp
clc
add
incb
xlat
icebp
push
mov
jmp
jl
push
jge
or
clc
repz
jmp
popa
es
jnp
lret
jp
addr16
push
dec
dec
lcall
dec
jb
inc
mov
mov
push
dec
jo
jge
cld
mov
ja
pop
aaa
mov
mov
std
les
pop
movsl
jb
repnz
pop
add
cmp
lock
lods
imul
fdivrs
sti
incl
mov
aad
or
aad
push
jo
xchg
push
call
dec
popl
mov
loopne
jle
ds
pop
int
mov
mov
and
add
fldcw
fnstenv
data16
jg
aas
gs
push
xor
jmp
pop
pusha
stos
inc
mov
mov
push
or
imul
bound
pop
fcomip
jmp
pop
xor
pop
imul
xchg
out
pop
or
arpl
ljmp
das
dec
xchg
adc
addr16
mov
je
adc
je
xchg
dec
daa
loopne
push
in
xor
xchg
int
ss
and
call
xchg
mov
sub
jmp
sub
fwait
pop
test
fldenv
das
lret
xor
testb
stos
push
shll
or
testl
jno
xchg
lahf
cmpsl
fnstenv
lock
imulb
push
shl
fwait
imul
call
mov
xlat
xchg
inc
incb
out
jo
insl
push
dec
lods
mov
jne
jbe
fmuls
add
dec
aas
cltd
ds
cli
int
mov
jbe
gs
or
lcall
lcall
cmp
push
lods
jo
mov
outsl
cmp
in
aas
ds
lea
in
daa
sub
scas
imull
fstpt
fwait
testl
sbb
ficoml
movups
decl
daa
out
nop
mov
out
mov
std
and
dec
loope
sbb
cli
push
in
in
mov
imul
ret
mov
scas
xor
outsl
incl
mov
loope
hlt
test
dec
xlat
fnsave
add
dec
sbb
lods
rclb
xor
cmp
push
jge
jns
imul
pushl
mov
cmp
in
out
subl
jbe
mov
lea
push
out
out
out
fstl
mov
ss
sub
or
test
movb
sub
rcll
or
mov
xor
add
jbe
dec
fstpt
lods
adc
int3
enter
insl
push
sbb
decl
mov
adc
dec
push
lock
ss
xor
adc
stos
ficoml
decl
in
popf
div
mov
addb
and
cmp
cltd
pextrw
loopne
shr
or
sbb
lea
adc
cwtl
mov
ja
cltd
in
push
jp
call
ret
add
sbb
sbb
sbbl
call
mov
push
jmp
or
nop
movsb
js
insb
outsl
jge
xchg
lock
shlb
pushf
xchg
aas
mov
lcall
lea
push
lret
mov
cltd
fwait
xchg
lea
aas
xchg
loopne
xchg
arpl
push
dec
out
jns
pushl
scas
or
ss
mov
stos
lcall
sti
sbbl
jg
cmpsl
lea
scas
ret
mov
mov
mov
adc
pusha
mov
xchg
mov
lea
xchg
mov
call
ret
in
xchg
ljmp
xchg
xchg
fisttpll
rolb
mov
mov
mov
dec
and
pusha
neg
rcrb
shl
fists
pushf
push
inc
mov
stc
arpl
pop
cmpsl
xchg
pushf
call
out
test
sub
adc
jno
dec
sarb
xchg
mov
jae
mov
cmp
ljmp
xor
inc
insb
shl
movsb
mov
call
decl
cs
push
mov
sub
loopne
gs
mov
pop
mov
lock
sbbb
int
cmp
and
out
sti
pop
imul
mov
shrl
daa
into
test
fmuls
cmp
xchg
stc
jne
decl
mov
idiv
add
icebp
xor
ror
jae
leave
pusha
mov
rol
sbb
lods
pushf
out
lcall
and
cmp
test
mov
mov
cli
in
jo
xor
adc
mov
ror
push
icebp
push
ljmp
in
and
lret
adc
sbb
lret
cmp
int3
inc
xlat
pop
clc
fucomip
loopne
pushl
or
pop
cmp
gs
or
jb
ljmp
loopne
add
xor
mov
mov
mov
mov
sub
mov
mov
mov
lret
cmpsb
mov
js
call
mov
mov
pushf
cmp
jb
jecxz
mov
stos
mov
lods
inc
frstor
mov
ljmp
mov
fistpll
push
je
movsb
ror
int3
sbb
in
fists
mov
dec
outsl
shlb
cmpsb
dec
sbbl
mov
cmpsb
sub
mov
mov
sub
cmp
jecxz
mov
push
pop
mov
lahf
mov
cmp
js
push
inc
inc
repz
xor
das
loope
call
stos
loopne
decl
fisubs
mov
xchg
out
inc
adc
lock
push
jo
mov
pop
leave
test
incl
pop
cmpsl
or
pushf
jge
lods
rclb
jbe
xchg
ret
js
dec
decl
ljmp
inc
stos
mov
idivl
idiv
shlb
std
decl
cmp
int3
or
scas
mov
ja
test
or
mov
inc
in
pushl
adc
dec
loopne
pop
mov
fcomi
lret
in
inc
popf
jb
mov
push
jb
cmc
cmc
std
adc
hlt
push
mov
lahf
pop
stos
ljmp
pusha
aas
pop
push
push
push
dec
mov
cmp
notl
sar
pop
call
jecxz
cmpsl
scas
out
inc
xlat
dec
sub
jmp
enter
jmp
scas
cmp
imul
cmpsb
pushf
mov
jecxz
pop
out
dec
and
leave
mov
and
mov
xchg
fistpll
rcl
ds
mov
decb
cmp
cmc
mov
xor
shrl
mov
ljmp
mov
pop
push
pop
adc
add
in
stos
xchg
aad
cmc
addr16
mov
add
pop
stos
testb
fdivl
ret
pop
icebp
add
sti
das
push
jb
add
cmpsl
adc
xor
adc
mov
xor
mov
test
incl
out
mov
shll
repz
jo
sub
inc
inc
xchg
push
std
lcall
cld
lds
xlat
dec
mov
push
pop
push
lods
loope
aas
dec
pop
push
cli
mov
sbb
mov
pop
mov
xor
inc
ja
mov
ljmp
adc
out
outsl
push
into
lcall
sub
sti
loopne
xor
sub
das
in
xor
in
sub
jl
in
lahf
add
cmp
inc
mov
ja
in
cmp
rcr
inc
out
jg
es
idivb
dec
lret
dec
jmp
or
stc
daa
fisttps
adc
adc
xlat
and
cmc
jmp
sub
adc
lcall
lret
dec
ret
ror
scas
sbb
adc
mov
dec
daa
ja
test
push
std
jmp
sbbb
lods
push
mov
sub
jg
mov
sub
lcall
sub
push
ret
cmpsl
test
out
out
out
xchg
jg
aas
push
or
enter
in
jb
fiaddl
mov
scas
xchg
mov
incl
sarl
dec
sbb
sub
add
mov
nop
jmp
es
icebp
addb
incl
lret
mov
push
shlb
or
jne
xchg
mov
push
in
lods
sbb
xchg
das
sar
fld
mov
dec
xor
repnz
and
xchg
loopne
sti
popa
call
cwtl
pusha
dec
test
xchg
pop
push
mov
stc
pop
sbb
cmc
test
sub
pop
mov
cmp
lcall
jnp
div
shrb
leave
sbb
mov
mov
hlt
popf
aaa
jp
mov
fisubs
pushl
or
mov
inc
mov
lcall
mov
cmp
sbb
cmpsl
adc
scas
loope
out
lods
fildll
cli
popf
sbb
jmp
xchg
cmp
xchg
jnp
popf
xor
subl
jg
mov
loopne
jl
jl
incl
lcall
imul
pushf
sbb
push
std
push
outsl
hlt
adc
cmp
out
jmp
pop
iret
int
sbb
scas
pop
loopne
jecxz
pop
jne
int
or
fcoms
jle
and
mov
call
popf
data16
je
cwtl
pop
fdiv
ficoms
mov
lcall
test
push
fwait
sub
jne
stc
dec
outsb
and
in
stc
int3
mov
mov
cmp
sti
test
inc
and
pop
or
popf
jbe
sub
iret
cmp
inc
stos
daa
jg
mov
pushl
mov
cmp
mov
or
psubsw
cmc
inc
dec
arpl
ret
pop
std
mov
fdiv
popa
cltd
mov
xchg
lock
push
xor
lret
sarb
cmp
aaa
push
sti
mov
mulb
stc
sub
lock
mov
outsl
sub
pusha
call
mov
lcall
jp
cltd
pop
arpl
popf
lods
loope
stos
inc
adc
in
call
loope
es
dec
les
ja
das
fisubrl
testl
fwait
daa
in
inc
mov
jmp
loopne
mov
mov
fsqrt
xor
jecxz
jae
inc
jg
sarl
sub
ja
add
insl
loope
fistpll
pop
jnp
repnz
mov
int3
xchg
pcmpgtd
sbb
lahf
mov
and
mov
jae
fcmovnu
pop
es
movl
stos
pop
jmp
aas
jne
xor
pop
ljmp
jmp
das
out
xchg
inc
and
dec
dec
mov
xlat
test
call
testl
lcall
xor
imul
out
fucomi
dec
stos
rcrl
or
cwtl
daa
dec
pop
in
outsl
mov
adc
icebp
push
lods
stc
push
jg
mov
incl
xchg
jp
js
cmp
sub
xor
leave
lods
iret
jnp
cmp
decl
or
push
push
and
cli
pop
mov
push
cld
xor
not
ret
pop
mov
pop
jmp
mov
cmp
incl
mov
out
lods
out
mov
pop
scas
test
ljmp
pop
loop
ss
cli
incl
push
scas
ds
cmc
mov
dec
sub
mov
add
mov
incl
push
sahf
dec
mov
jge
sbb
jg
loop
xchg
jmp
bnd
jl
fnsave
fwait
sub
and
cmp
sub
aaa
dec
fldcw
xor
ljmp
mov
mov
inc
jo
mov
pop
sbb
iret
push
fistps
out
inc
test
mov
xor
sub
xchg
repnz
lahf
sbb
xchg
std
fdivrl
jle
cmp
nop
scas
loopne
mov
xchg
inc
fwait
pop
pushf
jg
cmp
sbb
mov
dec
xchg
hlt
sbb
jp
pop
pop
in
jg
jp
and
push
fcomps
shl
daa
mov
repz
enter
std
dec
cs
mov
inc
fadds
test
mov
mov
clc
jecxz
ljmp
adc
fmuls
push
enter
adc
cmp
loope
sarl
mov
cltd
nop
out
jmp
repnz
scas
xchg
xchg
pop
mov
es
ljmp
pop
ds
incl
mov
fwait
add
push
out
xor
sbb
rorb
arpl
test
clc
pushl
cli
sbb
jecxz
das
mov
push
lods
lcall
jg
and
or
mov
jne
test
pop
and
and
adc
ljmp
and
addr16
ja
jbe
jmp
lret
cmp
pushf
sub
fldenv
mov
in
clc
xchg
xor
cmp
idiv
jg
testl
adc
outsl
cli
decl
mov
and
jbe
testl
mov
pushl
xchg
lods
outsl
mov
leave
cmp
inc
push
shll
data16
mov
scas
std
mov
jmp
not
aas
and
adc
stc
pop
clc
movsb
and
iret
mov
fyl2xp1
icebp
jl
stc
cmpsb
jle
js
jno
inc
orl
fistpl
sub
out
and
jmp
mov
ficompl
in
stos
dec
leave
test
test
xor
lcall
cmc
pop
imul
mov
mov
mov
sbb
loop
in
jmp
int3
shll
mov
cli
js
and
sbb
dec
addr16
or
mov
mov
enter
mov
sub
inc
repz
outsl
pop
imul
ret
xchg
mov
decl
mov
jg
call
loop
std
fldenv
pop
dec
aas
sti
push
hlt
lods
aam
cmpsl
xchg
test
ffreep
lcall
imul
loope
test
shl
cmc
inc
inc
jg
dec
fucom
cld
insb
in
enter
lcall
pop
cld
mov
lret
out
data16
lahf
jns
sub
cltd
ret
lock
flds
icebp
xchg
les
jnp
and
inc
gs
xor
jge
adc
jnp
out
subl
add
sahf
sub
es
jmp
xchg
push
cli
xor
and
inc
cli
jmp
mov
pop
xchg
push
dec
stos
dec
je
cs
clc
fsubr
jg
cmp
jecxz
sub
xchg
call
dec
mov
cmp
adc
test
xchg
adc
and
cmc
test
into
sub
clc
incl
lcall
out
lret
pop
xchg
or
inc
mov
gs
adc
add
mov
inc
cs
dec
sub
sub
lcall
mov
iret
or
fdivrl
xchg
movsl
pop
xor
rcll
fwait
inc
imul
cmp
dec
test
out
stos
dec
dec
mov
lock
ret
inc
mov
jecxz
cmp
cmp
pushl
pop
aas
sahf
push
lcall
loopne
mov
inc
ffreep
pop
mov
lods
in
scas
clc
jg
jns
imul
data16
gs
call
jbe
sti
jnp
xor
decl
mov
pop
jmp
test
sti
cmp
ljmp
bound
or
mov
and
jno
call
xchg
jnp
cmp
mov
xor
push
out
mov
and
mov
jmp
fwait
xchg
add
cmc
xor
xorb
fwait
aas
cld
jbe
test
jmp
cltd
call
pushl
mov
sbb
loopne
iret
or
xlat
jns
icebp
mov
js
mov
lock
ret
push
std
cmp
and
je
iret
pop
test
les
inc
decl
jmp
xor
jb
outsl
jb
lods
enter
jecxz
hlt
jne
fucom
outsl
cltd
int3
out
lock
nop
pop
jle
scas
cli
ljmp
pushl
sub
imul
in
adc
outsl
jp
ja
jmp
jmp
stc
sub
xor
movsl
add
std
sahf
and
cmc
mov
or
aam
mov
sub
jno
lcall
repz
sti
pop
inc
in
mov
mov
hlt
and
sub
call
jmp
xchg
hlt
push
push
fnstsw
pusha
add
call
jbe
mov
or
add
rcr
cmp
xlat
out
ds
push
lods
mov
decl
mov
pop
cltd
cmp
cld
out
add
jae
add
ja
repz
jns
push
std
push
add
lret
and
xchg
jbe
pop
loope
sub
lock
add
aas
cmp
js
out
movsb
into
lods
ljmp
jmp
jg
pop
pusha
mov
and
sbb
jns
sbbb
leave
dec
inc
clc
lods
les
xor
ret
cwtl
and
mov
movb
inc
inc
jb
jle
shl
sti
sarb
xor
lds
pop
ret
sbb
pop
call
mov
out
add
pop
jl
aad
shlb
push
mov
or
std
std
movsl
push
sbb
leave
lret
pop
testl
mov
pop
out
test
dec
jp
mov
es
pop
popf
cmp
inc
cld
in
lret
lods
cwtl
pop
out
mov
lcall
mov
fs
sub
loopne
ljmp
cmpsb
icebp
xchg
mov
cmp
mov
cmp
pop
and
pushl
sub
cmp
lcall
insl
push
xlat
sbb
xchg
stc
pop
js
std
decl
lock
dec
fistps
lcall
sti
scas
sti
in
clc
decl
or
push
aas
xchg
test
sti
lods
inc
decb
or
ljmp
jmp
cld
mov
mov
sbb
inc
movsl
icebp
push
clc
arpl
xchg
idiv
ljmp
xchg
mov
cmp
cs
push
xor
test
in
jmp
icebp
shr
test
push
lcall
sahf
push
aas
insl
movsl
outsb
js
loop
fistl
fnstenv
sqrtps
cmc
dec
test
lcall
dec
mov
inc
jle
ljmp
jb
mov
pop
dec
stc
icebp
push
dec
fsubrl
ljmp
jo
fcompl
pop
iret
push
sub
in
fstpt
mov
inc
cmp
scas
fcomi
outsl
mov
mov
pop
mov
jnp
mov
test
inc
lahf
lods
fsubrp
repnz
les
pop
hlt
je
xor
enter
pop
mov
cltd
out
push
jo
rorl
aad
sti
or
dec
jns
decb
jg
dec
loop
sbb
mov
inc
fldt
and
mov
jp
pushl
cmp
dec
enter
ret
aaa
adc
or
xor
clc
sub
jg
loop
stos
mov
out
sti
mov
fwait
push
enter
fnstenv
ljmp
incb
in
hlt
pushf
aam
fildl
enter
leave
mov
mov
sti
out
fiadds
lret
daa
dec
andl
repz
sti
dec
imul
mov
testl
sub
iret
dec
add
movsl
xchg
outsl
jp
xchg
pushl
std
jmp
mov
insl
orb
cmc
mov
mov
shll
push
decl
and
adc
pop
sbb
les
jae
fldcw
inc
xor
cli
mov
xorl
sub
bound
aas
ljmp
call
into
ljmp
aad
ss
loopne
or
push
ljmp
and
mov
ja
inc
and
daa
fdiv
dec
jns
push
mov
repnz
and
aaa
ret
lret
sti
xchg
loop
decl
mov
pusha
and
and
dec
in
push
dec
lahf
loope
push
mov
jmp
fs
repz
notl
and
cmpl
out
cmp
enter
push
into
sti
decl
pop
mov
cmp
je
dec
stc
dec
movsl
fsts
push
sub
mov
mov
rcll
dec
popa
fcomip
jmp
popf
icebp
enter
nop
in
push
movb
mov
in
mov
jno
mov
ljmp
or
sbb
sbb
les
pop
stos
stos
xchg
stos
pop
mov
clc
cmpsb
sub
mov
push
sub
outsb
insl
ja
xchg
in
cmc
cmp
adc
push
sahf
hlt
cld
decl
imul
out
sbb
push
std
lock
cmp
dec
mov
aad
mov
icebp
adc
pop
ret
dec
pop
cmc
iret
adc
push
es
pop
xchg
fistpll
push
push
or
in
cltd
outsl
js
lea
mov
sbb
in
jle
ret
jg
call
cld
pop
xchg
jg
pop
mov
jne
icebp
xlat
cmpsb
sbb
data16
cli
call
dec
stos
dec
lods
cmpsl
test
mov
dec
jg
ret
and
dec
sbb
ljmp
in
mov
repz
aad
cld
pushf
adc
sub
sbb
cmp
mov
loopne
or
clc
and
outsl
or
nop
lret
cmp
hlt
jbe
ja
fisubrs
mov
call
cmp
jns
dec
push
sahf
leave
int
shll
pop
call
stos
xchg
in
dec
outsl
das
ljmp
mov
mov
add
pusha
dec
mov
sahf
or
decl
pusha
testl
in
mov
fmull
mov
filds
push
pop
ja
sub
sub
mov
iret
outsb
lea
ljmp
cli
clc
pop
ds
jo
sub
shl
dec
fwait
jge
mov
loopne
dec
aaa
mov
mov
imul
frstor
jle
ret
dec
insb
pop
pop
jmp
sbb
or
cmp
pop
jb
push
hlt
ds
stos
stos
sbb
xor
insl
pop
fisttpl
sbb
repnz
incl
lgs
or
fsubr
or
cltd
xor
js
dec
push
and
ljmp
adc
xlat
ss
stc
push
jne
push
cmp
clc
lret
jno
hlt
ljmp
cltd
jbe
push
push
pop
dec
mov
xchg
test
fstps
bnd
fildll
or
out
adc
mov
fsubrs
pop
dec
dec
sub
inc
scas
cli
jg
loopne
and
cs
daa
jg
or
xor
xchg
notl
ljmp
jl
jne
shl
and
adc
mov
xchg
iret
mov
jmp
pusha
add
jg
pushl
and
push
call
pop
ror
in
sub
imul
out
movsb
test
aaa
shl
lret
loopne
cmpb
stos
popf
add
ljmp
cwtl
jnp
mov
aas
push
jl
imull
rcrb
mov
js
mov
inc
stos
dec
sbb
jmp
inc
out
out
test
hlt
insl
dec
adc
rcrb
push
sub
rcl
mov
pop
cmp
or
into
mov
pusha
jnp
lods
ljmp
clc
es
mov
xor
addr16
mov
xchg
jne
pop
jg
movsb
cmpsb
dec
mov
cmp
push
mov
sbb
lods
add
add
mov
out
mov
inc
icebp
decl
hlt
jp
jge
scas
adc
cmp
pop
cltd
in
je
shrb
pop
cmpsl
insl
aaa
jne
xchg
out
clc
call
adc
jge
daa
sub
adc
scas
mov
inc
jmp
test
sahf
xorb
jne
ja
cli
repz
fnstcw
fists
mov
loope
mov
cmp
out
sbb
jns
fldenv
stos
lds
cmp
jmp
cvtpi2ps
dec
addr16
add
mov
jecxz
and
cs
and
outsb
adc
add
add
push
mov
iret
arpl
mov
cwtl
dec
ljmp
xchg
xchg
sub
insb
add
fcmovu
daa
jmp
sti
aaa
lret
xchg
lahf
into
hlt
cmpsb
in
and
cli
decl
outsl
mov
add
aas
jbe
aaa
xchg
cmp
cld
xor
lcall
and
test
sti
mov
cmc
lock
testl
cmpsb
ja
int
mov
inc
ljmp
sbb
add
jnp
mov
sti
int3
dec
nop
cltd
loop
or
inc
push
jb
stos
inc
call
les
sti
xchg
ds
ss
jmp
jbe
test
jg
push
in
loop
jmp
mov
enter
mov
or
gs
xchg
lock
incl
sbb
inc
mov
mov
call
adc
jnp
call
clc
lcall
in
dec
pop
xchg
out
test
pop
mov
test
lahf
jmp
repnz
inc
jmp
pop
addr16
cmp
jmp
arpl
in
call
or
mov
insb
cli
pop
insb
and
call
mov
dec
fisttps
decl
icebp
and
and
enter
xchg
repnz
push
clc
cmc
jb
arpl
fimuls
aas
ljmp
addr16
xchg
xchg
add
push
mov
xchg
ja
add
js
je
jnp
xorb
sbb
unpckhps
call
cmc
pop
insb
jbe
lods
push
mov
xor
ret
jae
ljmp
jo
mov
scas
ja
and
mov
inc
fldenv
mov
call
push
lcall
xor
rorb
call
fisttps
loop
sti
jnp
iret
push
call
pop
repnz
add
pushl
cli
mov
out
jl
xor
fistps
jb
ss
mov
aad
pop
jns
les
pop
mov
das
outsb
enter
hlt
jns
mov
in
and
pop
fistpll
in
fcomip
push
mov
subb
and
insb
decl
outsb
add
mov
pop
lret
repz
mov
nop
cmp
pop
std
push
movl
iret
jg
sbb
inc
fsub
xchg
cmpsl
and
sbb
and
js
dec
addr16
mov
or
lret
inc
popf
sar
out
aad
fmull
pop
rcrl
fisttps
ret
pushl
mov
fpatan
ret
aaa
pop
ljmp
nop
lock
pop
jp
jecxz
xchg
mov
decl
mov
das
leave
cmp
mov
jae
and
xlat
rorl
lahf
std
lcall
lock
pusha
in
addb
sbb
jbe
xchg
xor
les
lahf
push
scas
cmpsb
hlt
mov
lea
pop
arpl
mov
sbb
cmp
orl
pop
jl
out
gs
je
jne
jl
pop
mov
add
pushl
std
pushl
nop
jg
out
mov
jae
loope
pop
aam
inc
repnz
mov
mov
loope
call
lret
lds
cmc
lea
or
mov
cld
pop
dec
sarb
cmpl
mov
out
and
call
ljmp
out
not
sub
fnstenv
decl
mov
pushf
pop
mov
shr
jb
inc
cmpsl
fwait
int3
and
in
cmpb
lcall
mov
adc
jle
out
sti
enter
aas
cs
shlb
inc
jge
push
push
mov
test
push
or
in
mov
mov
aam
cwtl
jmp
push
and
push
int
inc
lds
loopne
sub
call
in
addl
mov
ljmp
fsubl
call
jnp
mov
or
into
pop
sub
dec
rcll
push
js
push
jp
sub
jno
jge
jns
stos
mov
lahf
leave
mov
mov
test
pop
add
mov
cltd
lods
push
test
in
repz
in
lcall
aas
jecxz
inc
test
ja
shll
iret
bound
in
cmp
mov
lcall
jb
add
sbb
stc
pop
lahf
lea
std
rdtsc
int3
testb
adcb
xor
jle
loopne
jge
cld
adc
loop
clc
cmpl
push
cld
pop
xchg
jb
aas
clc
jae
inc
jp
iret
lods
xchg
idiv
in
sti
xor
test
outsl
into
cmc
cld
mov
cmpsl
sbb
ljmp
and
int3
mov
jmp
sub
xchg
jecxz
aas
pushf
push
stos
sahf
mov
out
push
inc
inc
addr16
cmp
sub
mull
pop
or
jle
out
mov
mov
call
ss
pop
add
inc
inc
outsl
pop
ds
pop
sarl
mov
jg
jnp
out
adc
xor
mov
jnp
fsubl
pop
loope
std
call
mov
and
jl
and
pop
cmp
ficompl
call
or
mov
rcrl
imul
rcr
push
sub
sarl
decl
add
jecxz
lahf
icebp
fildll
jmp
push
divb
hlt
ja
jecxz
enter
mov
inc
and
dec
call
push
inc
jne
mov
mov
xlat
push
xchg
jle
hlt
mov
mov
jae
imul
icebp
shll
mov
movsl
jo
xlat
ljmp
stos
push
cmp
inc
mov
jg
sub
out
ret
out
xlat
repnz
insb
add
fdivr
fcomip
mov
xchg
lret
fdivrp
mov
stos
stos
push
stc
es
decl
adc
jl
dec
mov
test
push
inc
aaa
xchg
fsts
dec
ljmp
sbb
xor
mov
xchg
outsb
lahf
pop
scas
inc
ljmp
add
test
cli
push
mov
dec
ljmp
and
mov
daa
decl
sti
push
mov
outsl
and
xor
mov
mov
insb
add
pop
mov
sub
lahf
ljmp
dec
cmpb
daa
scas
imulb
mov
es
cmp
movsb
daa
cli
fwait
jmp
int3
mov
lods
or
mov
xchg
dec
xlat
xor
mov
pop
test
std
fcomip
daa
into
mov
and
push
jmp
pop
sbb
lahf
xlat
clc
cmp
sbb
mov
pop
outsl
sub
mov
insb
or
mov
into
stc
cmp
stos
jae
add
jg
push
fdivrl
lock
test
das
test
call
lock
cs
xor
push
cmc
cmp
dec
xchg
sti
cmp
les
mov
dec
inc
pop
lcall
fwait
iret
add
mov
stos
data16
cmc
xor
clc
movsb
pushl
sbb
add
popa
shlb
jp
add
in
push
pop
jge
aas
mov
incb
cld
lcall
or
repnz
repz
sub
mov
mov
nop
loopne
call
mov
push
mov
sbb
cmc
jecxz
sub
push
inc
test
push
ljmp
push
clc
je
ss
xchg
hlt
mov
jnp
mov
mov
fstps
sti
test
push
mov
ror
cmp
popl
jle
push
lods
aam
inc
sti
dec
jp
jg
decl
scas
sub
mov
repnz
pusha
and
loope
out
mov
popa
dec
leave
lcall
jle
pop
ss
inc
mov
enter
add
xlat
push
rolb
mov
push
shll
pop
iret
xor
enter
decl
fmull
pop
std
clc
jo,pt
lcall
mov
sbb
incl
sub
scas
jmp
call
xchg
cmpsb
mov
push
fbstp
imul
jbe
jp
mov
jae
lcall
push
leave
out
ds
push
jnp
dec
xor
mov
mov
adc
push
inc
outsl
adc
mov
mov
out
mov
and
jecxz
jecxz
call
and
mov
pop
jecxz
cmpsl
lea
in
dec
lcall
mov
orl
inc
out
adc
jnp
cmp
imul
gs
jg
xchg
outsl
inc
gs
cmp
in
cltd
inc
fimuls
fcomi
mov
std
jnp
sti
jmp
push
pop
lock
sbb
xchg
inc
cmp
in
mov
repz
decl
xchg
in
psrlw
repnz
fldlg2
pop
cmp
bound
rcr
ret
leave
push
call
lahf
std
mov
sub
adc
sub
cmc
or
pop
adc
add
incl
lcall
int
ja
pushl
mov
inc
add
xor
movntq
out
mov
push
mov
cmpsl
cmp
fstps
adc
mov
and
pop
loope
sub
or
pop
sub
cmp
in
imul
subl
push
jno
lods
sbb
mov
es
loope
das
int
xor
std
ljmp
mov
pop
dec
xlat
inc
jne
or
faddl
decl
lock
in
das
pop
test
dec
jmp
les
sbb
dec
push
add
ljmp
scas
repz
out
or
cs
push
out
xor
xchg
jmp
mov
in
lahf
cmpsl
pop
ds
leave
mov
inc
fsubr
imul
negl
je
insl
cmc
rorb
and
aas
mov
lret
add
dec
mov
incl
xorb
imul
cmp
mov
mov
test
or
lock
ljmp
jnp
mov
push
push
inc
xorb
or
mov
mov
jmp
das
test
and
jne
add
mov
psrlq
or
arpl
enter
fcoms
test
pop
lods
jbe
mov
push
jmp
js
leave
push
in
mov
repz
or
cmpsl
popf
pop
sarb
mov
dec
inc
decl
js
sub
jle
cmp
scas
adc
dec
sub
jl
das
negb
jae
jo
subl
std
mov
and
sub
mov
cli
decl
mov
adc
ds
in
adcl
inc
jl
inc
idivl
je
jmp
pop
cld
xlat
mov
movsb
test
shlb
repz
mov
das
clc
lods
cmpsl
das
push
xor
sub
std
call
pop
data16
jp
pop
cmc
decl
mov
pop
cld
push
xchg
pop
stc
lock
push
mov
std
mov
test
jge
pop
icebp
sub
mov
stc
aaa
or
pushf
pop
or
scas
xchg
lock
ret
incl
loopne
mov
cmp
lods
imul
dec
cmp
inc
or
mulb
outsl
jg
icebp
shl
out
cmc
sbb
call
add
stos
inc
xor
icebp
int
mov
cmp
icebp
lods
stc
mov
mov
xchg
leave
cmc
stos
sbb
inc
daa
scas
test
ljmp
mov
jo
lock
repz
hlt
jbe
dec
jmp
imul
out
xor
mov
and
ljmp
jg
call
aam
pusha
sub
das
lret
push
push
pop
pop
sbb
std
mov
cmp
cmpsl
in
ret
mov
dec
mov
fsubr
pop
add
or
fidivs
mov
mov
push
fisubs
or
call
mov
lods
push
pop
or
adc
mov
cmp
cwtl
popa
das
aaa
shll
mov
sub
jl
cld
pushf
aas
leave
cmpsl
les
jo
cli
mov
incl
adc
sahf
lods
insl
sbb
pop
xor
insb
mov
sbb
faddl
mov
jge
lock
mov
jl
lds
mov
push
es
cmp
icebp
out
xchg
pop
ss
in
daa
rcrl
jbe
lcall
sbb
xor
fisubs
mov
das
in
loopne
dec
stos
bnd
in
std
jmp
lds
pushf
cli
int3
in
sub
mov
arpl
pop
ds
fists
add
aaa
xor
std
xchg
scas
out
push
jbe
insb
andl
jmp
out
in
xchg
and
std
outsb
movsl
xlat
sbb
addr16
aaa
mov
and
inc
loope
push
jl
sbb
call
cmp
cld
scas
adc
vpunpckldq
mov
inc
jns
lret
out
std
jo
cmp
js
sub
les
xlat
fcomi
add
push
sub
shlb
loopne
lahf
add
loop
adc
lods
lcall
aas
out
and
sub
rclb
sbb
and
pop
pop
xchg
fsubr
insb
push
outsb
inc
call
pushl
xlat
cli
psllq
fwait
cld
lret
sbb
jne
lds
ja
dec
clc
jmp
stos
mov
fdivp
fdivr
bound
pushaw
sahf
hlt
push
cmp
pop
mov
ud0
incl
daa
in
mov
pop
mov
cmp
adc
insl
sbb
adc
sub
nop
out
lock
jb
out
jne
pop
mov
xor
dec
mov
ds
adc
lods
mov
out
je
mov
lock
xor
push
out
mov
fisubrl
mov
mov
fildll
cmp
sti
adc
fs
inc
js
test
in
lcall
inc
popf
jmp
jmp
loop
mov
cwtl
inc
or
loop
add
mov
push
inc
fs
jg
ljmp
repz
jbe
stc
ffreep
out
mov
out
add
jl
fcomps
lcall
jb
iret
test
lahf
pushf
dec
psllw
cs
xchg
sub
mov
ljmp
add
in
ja
push
stos
inc
fcomi
in
add
mov
add
lcall
fnstsw
mov
push
mov
mov
adcb
sub
outsb
lcall
dec
adcb
or
mov
push
popa
adc
cld
jne
lcall
cmpsb
xor
xor
and
clc
mov
or
dec
sarb
fdivr
outsl
mov
int3
outsb
mov
filds
dec
cwtl
data16
jno
testl
comiss
push
icebp
pop
inc
xorb
jne
xchg
xchg
jp
or
add
imull
lcall
pushl
mull
cmpsb
xchg
and
ficomps
sti
adc
test
fs
je
dec
mov
sub
mov
jmp
lods
pop
sahf
incl
mov
mov
push
inc
popf
fisttpll
test
jns
test
jns
pushl
jbe
lret
jno
push
gs
cmp
ss
addb
leave
mov
aad
test
decl
xchg
mov
fwait
sub
and
not
cmp
add
pushl
ret
pop
pop
lock
mov
push
aad
mov
data16
or
shrb
decl
xchg
incl
repz
jmp
xchg
pop
jns
ds
xor
pop
addr16
jmp
inc
mov
clc
rcrb
fcomp
mov
adc
popf
fbstp
cld
mov
fmuls
out
mov
jmp
mov
iret
dec
loope
cmc
xchg
adc
mov
fldenv
adc
jmp
and
jecxz
pusha
loopne
cwtl
sub
adc
mov
loop
sub
mulb
ljmp
out
ret
adc
popa
xchg
inc
gs
jns
icebp
mov
clc
aad
stos
mov
ljmp
mov
cld
std
xchg
pop
stos
jbe
andb
out
sti
loopne
daa
test
push
pushf
insl
incl
insb
dec
movsl
push
dec
jle,pn
scas
xchg
mov
cli
adc
out
mov
mov
push
sar
jo
mov
push
inc
lea
push
lock
sbb
adc
jmp
sahf
stos
fdivs
insl
jmp
mov
stos
leave
xor
loope
call
sti
xlat
aas
mov
rcrl
cli
and
call
outsb
out
mov
roll
in
pop
fnstcw
repz
cmpsb
leave
loope
adc
hlt
push
mov
out
cmp
cmp
xor
pop
jns
fs
xchg
mov
inc
out
sar
jmp
bound
lock
out
sahf
sub
std
or
ret
clc
or
decl
dec
mov
test
cmpsl
mov
jae
pop
sbb
shl
cmpsl
lcall
lock
dec
popf
cmp
loop
sub
sahf
clc
jle
sbb
std
inc
adc
pushl
and
jmp
rcrl
negb
imul
adc
push
jge
jno
push
rcl
dec
mov
pop
imul
push
or
pop
cmp
sarb
stos
adc
insl
lods
int3
pusha
hlt
jg
test
mov
cli
pop
dec
xor
inc
imul
decl
xor
imul
je
mov
or
xchg
ja
lock
out
mov
cld
out
out
test
xchg
cld
sbb
fdivrs
movsl
hlt
mov
cmp
lret
aas
cmp
in
dec
cmp
sar
pushl
pop
adcl
or
push
into
jge
dec
nop
cmp
jbe
call
adc
jle
nop
mov
js
repz
or
div
cmp
call
aam
lahf
in
cmc
lock
out
push
sub
jnp
push
add
daa
xchg
and
sbb
fcomip
lcall
sub
push
js
ror
push
push
jg
rcrl
cmp
popa
sbb
sub
xchg
xor
cmp
ljmp
fldt
imul
movsl
call
sbb
mov
jle
xor
lcall
lcall
cmp
aaa
dec
incb
scas
mov
mov
andb
divl
fcmove
test
pop
dec
ljmp
test
pop
hlt
lcall
inc
std
push
data16
jg
enter
push
sarl
clc
pushl
cld
adc
inc
clc
inc
fistpll
and
pop
lret
in
les
movsb
sub
incl
xchg
jge
nop
jl
cli
cmpl
jl
lcall
enter
faddl
jmp
inc
cmc
data16
mov
push
int
add
mov
jne
test
aas
pop
jb
stc
sub
sti
mov
loop
pop
inc
call
xor
pop
jg
iret
insl
mov
xor
lahf
insb
fsubrs
sarb
incl
dec
std
pop
dec
out
sahf
aad
cltd
fldenv
aam
add
pop
mov
call
cli
push
hlt
jo
mov
pop
daa
cmp
out
insb
jns
and
dec
jle
lcall
rorl
out
lret
icebp
push
pop
mov
jno
hlt
inc
cmc
pop
stos
lret
imulb
and
jae
iret
mov
js
std
xchg
shll
or
lcall
fldcw
mov
loope
mov
xor
mov
xchg
push
das
adc
xchg
jmp
xor
cmp
lock
cmp
js
push
sbb
xchg
mov
js
mov
out
hlt
fadds
cld
decl
cmp
mov
daa
lods
pop
pusha
sub
out
int3
jl
imul
mov
imul
pop
into
fstpl
adc
jg
pop
outsb
adc
jg
outsl
pusha
stc
sub
xor
lock
xchg
or
push
pop
int3
adc
lahf
aam
lods
test
cmp
lcall
pop
in
sbb
js
sbb
loopne
jno
inc
pop
inc
inc
mov
decl
pop
repnz
mov
insb
mov
mov
dec
jnp
pop
pop
nop
adc
mov
lret
das
pushf
stos
in
xchg
clc
insl
cld
incl
sti
pop
push
xchg
cli
call
lods
repnz
fbld
stos
push
pop
test
jecxz
in
imul
lcall
adc
mov
mov
add
jg
pop
sub
call
jmp
popa
gs
jbe
push
inc
pop
cmpsl
lahf
stos
xchg
cmp
lret
add
sbb
jg
jmp
cmp
les
cmp
mov
cmp
adc
mov
dec
or
sar
out
xchg
faddp
arpl
das
xor
test
jmp
lcall
add
or
sub
sub
test
subl
negb
aam
idiv
jg
jo
rcr
fnstcw
int
cmc
cmc
cmp
lcall
xor
jle
xor
sub
xor
shrb
inc
mov
lret
mov
fsubrp
mov
icebp
call
icebp
jl
dec
aad
bound
cmc
shr
in
xor
aas
push
sarl
insl
fsubl
scas
into
sti
bound
pushl
inc
notl
stc
and
iret
divl
jp
stc
mov
pop
sti
lahf
sbb
in
inc
push
mov
mov
testl
es
ss
pop
fiaddl
sarl
aad
lea
data16
push
icebp
loope
pushl
lret
pop
cmpsb
fwait
rclb
inc
test
pop
stos
jp
adc
mov
inc
les
sti
cmp
nop
xchg
add
jge
call
mov
mulb
xchg
xchg
jb
pop
cltd
push
push
ret
fsts
cmc
lcall
sti
hlt
lods
add
in
jp
push
sbb
adc
loop
enter
pop
shl
stos
scas
mov
inc
push
and
mov
sar
jge
sub
mov
sbb
cmp
lret
lock
lea
xchg
xchg
fdivrs
mov
inc
mov
mov
lret
test
jg
push
mov
dec
jbe
dec
aas
mov
nop
leave
aad
jne
es
pop
cmp
repz
cli
aaa
dec
sar
clc
push
not
dec
pushl
out
push
jnp
mov
scas
xchg
repz
fcomps
lock
scas
lods
xchg
repnz
cmpb
pop
test
out
cmpsl
jo
lods
cmp
mov
adc
xor
cwtl
lods
das
pop
ficoms
add
mov
decl
fs
push
sbb
jo
sahf
lahf
mov
and
sbb
nop
loop
cwtl
popa
mov
xchg
clc
jl
stc
int3
cmp
jg
out
flds
pushf
aaa
cli
ds
mov
mov
push
lea
push
stos
movsl
test
mov
jne
outsb
pop
sub
mov
outsl
mov
xchg
jmp
inc
xor
sbb
adc
mov
inc
xchg
pusha
mov
adc
jl
mov
je
aas
push
repnz
mov
mov
scas
cltd
jecxz
jmp
hlt
call
std
ja
mov
dec
sar
int
imulb
xor
and
stc
dec
outsl
je
mov
inc
mov
call
insl
mov
mov
adc
pop
prefetch
jns
mov
mov
add
outsl
xor
mov
sbb
out
push
je
pop
adc
adc
bound
ret
xlat
inc
sbb
jnp
sub
notl
inc
mov
add
rcrl
out
push
aas
pop
rcl
loope
movsl
ss
mov
adc
cmp
incb
cmp
stc
mov
aas
daa
mov
mov
mov
mov
mov
sti
sbb
xchg
iret
jmp
dec
clc
mov
xchg
roll
push
mov
xchg
cmp
mov
std
in
mov
jge
jmp
jmp
cld
test
rcrb
sbb
mov
mov
stc
lods
xchg
lret
out
xchg
clc
out
fdivrp
pop
push
push
daa
jmp
mov
int
faddl
jl,pt
lods
push
out
std
call
jmp
mov
incl
mov
into
lea
cmpsb
mov
mov
fcomi
repz
add
jecxz
sahf
cld
andl
call
incl
lret
in
fisubl
push
jno
iret
icebp
and
xchg
inc
mov
adc
inc
insb
cmp
call
call
dec
fadds
in
aas
cld
decl
test
sbb
fidivrs
push
rorl
ljmp
xchg
incl
aam
jle
js
enter
cs
outsb
mov
sub
fidivrl
lcall
xchg
mov
xchg
add
bnd
xor
jmp
push
mov
mov
out
in
lahf
xchg
subl
sbb
in
or
inc
mov
push
jg
fiadds
lret
pop
cmp
and
jmp
mov
out
jle
or
adc
xchg
fstpl
popa
lock
call
push
iret
adcl
pushl
div
mov
and
inc
into
lods
in
in
test
sub
jb
rclb
mov
pop
mov
shll
out
rep
mov
mov
scas
push
int3
push
call
jg
jb
sub
icebp
mov
jge
mov
lods
push
mov
repz
inc
mov
in
add
jecxz
fucomi
outsl
and
jmp
push
xor
insb
cwtl
sbb
sbb
decl
in
push
cmp
orb
enter
cmp
clc
mov
add
call
dec
movsb
xchg
jecxz
dec
inc
sahf
adc
dec
jle
jno
js
ja
clc
mov
push
cmp
add
rol
int
add
pop
sub
daa
xor
mov
cli
xchg
mov
imul
aaa
leave
test
mov
faddl
ljmp
push
adc
shr
cmp
into
sbb
incl
sbb
push
mov
jae
sti
stc
jno
out
cmpb
and
jg
pushl
xchg
loope
loopne
cmp
sbb
cli
push
or
repz
push
add
flds
out
cmp
jmp
cmp
add
cli
incl
cmp
lods
mov
std
gs
and
ficompl
xlat
ss
lcall
mov
fstps
jg
in
xor
ret
test
je
pop
icebp
jo
fwait
fcomip
xlat
mov
mov
adc
ljmp
and
mov
cmp
push
idivl
cld
or
divl
xchg
hlt
cmp
pop
inc
mov
jg
gs
int3
test
and
testb
pop
outsl
test
stos
dec
leave
xchg
gs
mov
testl
test
ss
cmp
decl
fadd
fwait
xchg
cld
leave
mov
adc
maskmovq
cmc
and
mov
mov
call
aas
and
cmp
adc
mov
push
mov
stos
stos
mov
movsl
icebp
testb
mov
test
data16
fs
daa
std
jg
mov
sbb
es
mov
ds
lock
cmp
ss
jg
add
cld
xor
xor
stc
icebp
add
pushl
cli
repnz
pushf
or
mov
enter
ret
xor
repnz
pusha
ret
call
rorl
cld
push
je
icebp
fwait
lcall
jge
popf
flds
xlat
sub
outsl
push
aad
test
sarl
lcall
outsl
sbb
dec
jb
lock
stos
pushl
std
lds
repnz
das
lcall
inc
std
inc
fcomps
mov
clc
pop
in
flds
push
jnp
mov
inc
pop
imul
pop
decl
mov
pop
mov
sbb
pop
inc
mov
incl
call
xchg
addb
scas
fcomi
push
inc
jge
jo
jl
xor
mov
dec
rclb
sar
shl
jmp
mov
ljmp
pop
mov
mov
cwtl
aaa
js
rcrl
bound
cmp
fstpt
mov
pop
pop
sahf
mov
ljmp
scas
inc
mov
push
out
dec
sub
ficoml
mov
jb
or
out
jp
cmp
mov
inc
mov
cmp
mov
jno
fidivl
mov
shrl
je
call
jg
gs
push
jge
xchg
sbb
outsl
pop
xor
sbbb
testl
incl
mov
sbb
sub
sti
cli
xchg
sub
shl
sbb
ja
pop
cmovnp
pop
pop
mov
jg
das
sbb
adcl
xchg
ret
mov
jle
filds
jmp
iret
jecxz
decl
shrb
sar
insl
and
push
mov
call
mov
aad
push
mov
push
mov
cmp
inc
mov
push
mov
xor
jge
sub
cli
or
cmp
bound
shr
insl
outsl
bound
cmc
jecxz
mov
pushf
and
call
fsubs
out
xlat
das
sar
adc
movnti
out
inc
mov
pop
xlat
pop
pop
jmp
mov
jbe
xor
push
xor
sbb
cs
pmullw
stos
test
or
addl
aam
lods
pop
popa
sbb
cli
negb
cmpsl
push
mov
pushl
mov
out
inc
cmpsb
mov
repnz
insb
push
cmovo
fistps
into
aaa
iret
xchg
sbb
mov
into
and
lock
fcomps
shrb
insl
jo
cmpsb
lock
ljmp
sti
in
adc
ds
lret
in
jns
jno
or
cld
in
decl
mov
sub
push
stos
sti
sub
jno
inc
mov
incl
fyl2xp1
repz
dec
icebp
lcall
sbb
or
cld
dec
fdivl
dec
adc
ljmp
mov
dec
mov
push
bound
sub
shlb
push
xor
jg
das
pop
insb
test
cld
jl
mov
adc
xchg
cmp
call
pop
scas
cli
cmp
mov
jb
adc
in
movzwl
popf
pushl
or
push
xor
ds
mov
inc
mov
gs
mov
add
push
jp
repnz
dec
sbb
push
outsl
fcoms
pop
stos
xchg
and
cmp
movsb
sub
cmp
orb
shlb
scas
add
adc
mov
cltd
mov
pop
push
test
fwait
and
pop
dec
decl
inc
in
sbb
pop
push
mov
adc
xchg
xlat
cmp
pushf
mov
subl
ss
and
inc
incl
push
out
mov
les
scas
ljmp
fdivl
mov
jmp
push
sahf
call
push
push
pop
loop
std
shl
sub
ret
bswap
pop
ds
cmpsl
stc
push
fwait
xchg
inc
les
jmp
or
sbb
push
jl
stc
lret
cld
test
in
int3
shl
faddl
ljmp
sub
jle
pop
push
adc
jmp
mov
mov
add
xchg
jg
add
dec
cltd
add
mov
jns
stos
js
inc
jp
and
outsb
adcb
fsubr
inc
xchg
aas
mov
scas
jg
mov
mov
sub
fnstsw
fistpll
cmp
pusha
shlb
out
rolb
ret
mov
loop
mov
pop
pop
cld
cld
push
stos
jmp
outsl
test
jmp
shlb
cld
ja
arpl
subb
or
mov
pushf
shrb
call
xor
repz
sbb
stc
roll
stos
in
or
sub
adc
mov
mov
jge
mov
mov
hlt
pushl
jmp
out
js
daa
test
inc
cmc
out
sub
incl
mov
dec
xor
icebp
mov
lods
adc
and
call
jmp
inc
fsts
loope
jg
aad
stos
mov
inc
jbe
push
xchg
lahf
pop
addr16
in
lock
or
inc
pop
xchg
pop
jecxz
mov
stos
outsl
test
mov
cmpsl
sbb
mov
lods
out
mov
push
fistps
int
push
fwait
ljmp
ficomps
insl
jecxz
repz
xchg
mov
pop
in
ret
repz
out
dec
push
mov
mov
sub
icebp
fs
mov
sti
dec
das
aam
mov
mov
push
ja
aaa
xor
sahf
mov
fsubrs
cmp
mov
aam
push
xchg
xor
aad
lcall
out
sbb
loopne
mov
das
rorl
adc
movsl
mov
pop
filds
or
aas
stc
and
decb
hlt
fsubp
aas
xchg
call
movsb
daa
divb
and
stc
icebp
stos
inc
jmp
outsl
out
and
jmp
cmp
and
lock
clc
dec
out
stos
xchg
sbb
lods
fwait
shr
xchg
lcall
cmc
shrb
push
in
jno
stc
sbbl
in
dec
es
mov
call
and
mov
jbe
mov
loop
or
jp
jp
jg
and
loopne
dec
enter
xor
incl
inc
and
stos
int
cmc
push
icebp
out
jecxz
mov
push
das
mov
test
jp
insl
mov
lcall
mov
shll
movsl
xchg
add
cmp
mov
push
decb
push
push
dec
dec
inc
inc
pop
sub
mov
cmp
sub
sub
and
sbb
push
pop
or
fisttpll
imul
add
movsl
ds
out
xor
jg
xlat
ror
lret
jecxz
std
adc
shrb
insl
push
mov
inc
sbb
sbb
frstor
jnp
jecxz
int
cld
decl
adc
je
mov
outsl
dec
mov
pop
push
fistl
out
arpl
push
mov
repz
shll
sbb
outsl
xor
dec
cmc
insb
andb
xchg
lock
mov
push
push
ja
arpl
cmp
sub
adc
ret
fdivr
scas
or
sti
sbb
fistl
and
std
pop
movsb
xchg
mov
inc
adc
outsl
or
out
decl
pop
dec
add
idiv
push
or
std
lods
inc
fwait
lcall
repz
out
out
lahf
mov
lret
push
mov
test
insb
xor
in
std
repz
aad
dec
iret
aaa
repz
lret
les
faddp
lret
cmpsl
aad
add
call
pop
mov
mov
test
mov
xchg
mov
loop
mov
stos
in
mov
cmpsl
add
xchg
mov
fimuls
mov
fdivrp
ljmp
mov
repz
ljmp
sub
sub
mov
fdivrs
call
in
mov
inc
mov
push
dec
push
cwtl
mov
cmc
mov
cwtl
mov
incl
loopne
or
sarb
cmp
mov
popf
push
popa
fdivs
repz
daa
adc
stos
call
pop
sbb
mov
adc
loopne
pop
loopne
ds
jg
push
mov
and
jns
xchg
out
int3
fdivrl
clc
in
lock
jmp
leave
sti
add
loopne
sti
stc
mov
test
cmp
fcmove
lea
xlat
sahf
xchg
sbb
call
les
push
pop
dec
xor
dec
lods
test
xor
sub
mov
adc
sar
push
jmp
ds
loopne
out
cmp
mov
into
mov
in
in
add
add
into
in
ds
adc
pushl
outsb
mov
fsub
mov
adcb
out
and
lcall
aas
shlb
outsb
ret
mov
pop
in
rcrl
out
jp
clc
scas
insb
decl
dec
jge
mov
cmp
and
jmp
cmp
push
hlt
lret
sarl
xchg
cli
xchg
fcos
jmp
or
mov
insb
imul
mov
ljmp
pusha
sbb
jl
jnp
pushf
aas
jae
std
cmp
fs
jns
out
int3
inc
inc
roll
mov
mov
nop
cmp
int
adcl
adc
mov
inc
and
pop
ss
imul
aam
xchg
add
xor
int
shl
ljmp
ja
mov
xchg
iret
pop
out
mov
adc
sub
std
nop
pop
sar
jmp
xchg
jmp
pusha
xor
jmp
add
call
adc
mov
cmc
lds
inc
adc
lds
jns
sbb
add
mov
out
sub
mov
movsl
cwtl
mov
nop
mov
lea
int3
inc
cltd
cli
push
inc
adc
dec
fstpl
and
outsl
add
xchg
xchg
test
push
xchg
or
incl
sbb
das
inc
call
or
fmuls
les
movsb
inc
cld
decl
scas
test
cmpb
inc
adc
mov
jmp
jg
xor
cmc
xchg
or
adc
js
out
mov
mov
xlat
pop
fdivr
lcall
inc
enter
and
push
cli
inc
xchg
inc
mov
repz
lock
push
cmp
xlat
sti
out
ljmp
pop
jp
fcoms
cmp
sub
out
lds
lods
fmul
jnp
jae
inc
loop
jg
stc
and
testl
xchg
add
sbb
clc
fwait
push
xlat
push
out
inc
lock
stc
lods
scas
cmp
jg
mov
push
jg
cli
or
pop
stos
into
dec
push
sub
test
xchg
add
jg
dec
jno
test
add
xchg
fsubr
faddl
pushl
hlt
cmp
loop
incl
xchg
jnp
cmp
pop
mov
ljmp
push
sub
mov
dec
lods
add
push
xor
inc
push
dec
xchg
mov
and
jmp
lock
cli
push
pop
xchg
lcall
addb
pop
std
lcall
cmpb
fldz
es
lahf
insb
pop
xor
imul
sub
pop
fcos
fwait
cli
stos
sub
pop
icebp
incl
push
push
fistpll
xchg
das
mov
jmp
iret
push
adc
in
xor
clc
outsl
loope
mov
mov
jne
push
lods
or
call
lock
cld
lret
xor
loopne
dec
adc
in
repz
ljmp
mov
push
sahf
div
loopne
div
cmc
hlt
hlt
repz
call
mov
in
shlb
call
fcomip
in
mov
pusha
jecxz
loope
fstp
fcmovnu
repz
dec
add
sub
pop
cmc
negl
or
adc
kmovw
adc
jo
dec
cmp
mov
clc
push
adc
sbb
mov
xchg
popa
adc
cmp
imul
iret
pop
sub
and
lea
sub
cli
fdivrp
idiv
mov
icebp
stc
push
lret
fsubrl
jg
jne
fsubp
cmp
xor
cmp
mov
shll
cmp
imul
lret
in
cmp
inc
ljmp
lods
fldcw
mov
mov
push
scas
in
cmp
in
pop
adc
cmpsl
jecxz
xor
in
xlat
clc
mov
ljmp
xchg
loopne
movsb
push
ret
push
fistps
rcr
into
pop
inc
dec
fs
fcomps
ficoml
sbb
xchg
adc
or
lcall
aam
push
adc
lret
mov
cmp
daa
mov
fiadds
mov
sub
pop
cmp
dec
xchg
fs
sar
decl
xchg
std
dec
push
int3
sub
push
cltd
cli
in
es
add
mov
loop
or
inc
call
cmc
lock
sbb
pop
sbb
fmull
out
and
inc
pop
adc
test
push
mov
pop
repnz
jmp
int3
fstl
push
mov
arpl
xor
mov
stos
enter
jbe
es
push
call
rcrl
fnstcw
setb
add
sbb
push
mov
fwait
jbe
mov
mov
call
push
ds
popa
cwtl
imul
push
lret
test
inc
jp
add
ljmp
adc
lahf
das
ret
loop
or
jno
ficomps
add
sti
fnstcw
dec
negl
pushl
and
in
stos
sti
sbbl
mov
imull
dec
pop
mov
pop
sub
inc
xor
in
adc
stc
pushl
cld
jl
fistl
mov
lret
aas
leave
cmp
outsl
push
xor
das
clc
gs
lahf
inc
es
cmp
mov
js
mull
jg
or
mov
and
cli
sub
push
popa
cltd
inc
mov
insl
loope
jmp
iret
inc
pop
es
pop
mov
popf
and
inc
pop
inc
xor
and
fistps
dec
cltd
ss
add
icebp
arpl
and
jecxz
daa
fwait
gs
pushl
cltd
and
or
dec
pop
sar
ljmp
and
and
jmp
sub
hlt
xchg
sub
jg
test
jmp
stc
not
pop
ljmp
decl
lods
fwait
push
jmp
inc
in
dec
test
into
pop
xchg
mov
ja
push
stc
inc
pop
clc
push
add
das
dec
jmp
fbstp
loop
hlt
push
mov
jmp
mov
sbb
into
fildl
pop
inc
and
mov
sahf
mov
stos
test
lock
or
in
les
push
mov
inc
out
xchg
mov
mov
lds
std
clc
test
out
lret
mov
mov
cwtl
dec
jnp
push
cmc
pushl
aad
arpl
mov
hlt
mov
ljmp
mov
fsubrl
cwtl
shl
mov
les
add
mov
push
jg
ljmp
arpl
movsl
inc
mov
sub
addb
ss
xor
jne
mov
or
aad
out
mov
add
or
in
cmpsl
insb
lcall
bound
mov
outsb
fwait
mov
in
outsb
int
push
cmpsb
cld
xchg
mov
popa
dec
xor
xchg
jl
mov
xor
pop
xchg
mov
out
jl
jbe
out
cmpsl
dec
sbb
in
mov
imul
outsl
inc
outsb
jmp
mov
and
push
dec
push
mov
jmp
cli
loope
outsl
xor
fnstenv
movl
call
lods
adc
inc
loopne
cmp
pop
and
lds
cmp
out
les
std
cmpl
push
xor
mov
pop
cltd
call
sub
sbb
int3
cld
jle
in
andb
popa
imul
or
insb
mov
ljmp
cmp
decl
aas
inc
mov
mov
repz
push
insl
mov
cmp
jno
xchg
jle
dec
mov
out
clc
loope
aas
mov
dec
cmc
fldt
mov
stc
mov
loopne
icebp
cmp
mov
jmp
daa
ja
stc
stc
mov
mov
mov
pop
lds
mov
sahf
xchg
lods
mov
in
jae
mov
decl
or
xor
xlat
das
xchg
fcoml
mov
ljmp
imul
fimull
imul
mov
push
jmp
popf
pop
inc
lods
fxch
mov
dec
pop
cmp
push
push
test
fdivs
ja
outsl
xor
xlat
pushl
repnz
cmc
xlat
dec
cs
fldcw
scas
lods
sbb
aaa
movsb
or
and
out
andl
lcall
cmp
or
imul
insl
cmp
ds
mov
ljmp
negl
push
aam
fisubrs
mov
xchg
into
enter
ds
std
inc
mov
pop
std
lcall
pop
loop
ja
stos
aas
mov
shlb
adc
lods
mov
bound
call
test
mov
iret
iret
enter
shl
push
and
fldenv
decl
clc
mov
mov
pop
xchg
xchg
stos
imul
cmc
out
notb
cld
stos
mov
inc
jns
lcall
push
scas
xlat
cmpl
mov
sbb
popf
test
mov
lcall
stc
imul
hlt
lret
mov
rcr
outsb
shrb
cltd
jl
or
scas
test
repz
mov
pop
and
aaa
out
push
push
aas
mov
fs
mov
xor
cld
filds
mov
sbb
xchg
mov
mov
daa
daa
out
cmpsl
jg
mov
filds
inc
and
mov
pushf
mov
sbb
mov
pop
xchg
fimull
fldt
jmp
aad
mov
pushw
dec
fistps
sub
inc
mov
ret
repz
xlat
jmp
jnp
lods
nop
cmp
rcll
jg
lock
clc
inc
fisubrl
jl
roll
jge
sub
jmp
xchg
sbb
inc
xchg
push
into
mov
shr
stos
pop
fisttpl
pushl
imul
stc
nop
imul
lahf
in
sti
and
std
je
repz
pushl
fst
std
mov
jmp
jmp
jl
les
sbb
pop
push
addr16
sbb
inc
fwait
add
push
cmp
stc
sbb
cmp
adc
js
jbe
jnp
cld
sbb
addr16
dec
mov
sbb
in
mov
jno
sub
pop
mov
or
push
neg
sarl
cmc
call
stc
jecxz
sbb
mov
shrb
loope
mov
lret
mov
popa
pop
call
call
jmp
fbstp
icebp
dec
mov
adc
in
js
and
inc
stos
cwtl
adc
ljmp
pop
cmp
test
les
xchg
call
call
mov
orb
pop
xor
dec
out
cmp
lcall
pop
negb
lods
jnp
outsl
lahf
mov
cmp
push
jnp
rcrl
sub
stos
mov
jne
pop
jne
pop
ja
mov
ja
push
mov
mov
xor
mov
cmp
shrl
decl
das
test
je
nop
and
call
popf
dec
lock
out
stos
mov
mov
xchg
pop
dec
lcall
mov
mov
mul
repnz
call
sub
add
arpl
pop
fisubrs
fnstsw
or
pop
les
pop
and
xor
stc
sti
push
inc
pop
jns
adc
decl
pop
stc
ja
xor
popa
mov
xchg
xorl
dec
cmp
lea
sbb
addr16
mov
leave
icebp
xor
sbb
add
decl
mov
cmpsl
fldt
loopne
add
adc
scas
xor
fdivr
lcall
jnp
or
icebp
popl
xor
inc
or
xchg
movsl
outsl
stc
fcomps
call
into
insl
jg
push
or
stos
lcall
jno
mov
pop
arpl
adc
test
pop
ds
out
clc
in
cld
add
sarb
sti
inc
mov
iret
push
push
lahf
scas
hlt
sti
cmc
ss
mov
pop
out
clc
outsb
icebp
mov
xchg
push
lock
dec
int3
shll
incl
jmp
vprotq
or
sahf
mov
lods
ljmp
xchg
push
mov
out
lea
fisubrl
testl
enter
cld
out
imul
lret
fildll
and
sti
lea
jb
loop
adc
add
xlat
fsubrl
mov
xlat
aad
pushl
push
shll
pushl
call
icebp
dec
xor
sahf
leave
ret
bound
bnd
leave
mov
orb
out
or
loopne
jmp
cwtl
out
pushl
sub
in
sub
fwait
adc
pop
add
fbld
movsl
mov
mov
jmp
xor
or
jae
fisttps
int
icebp
lret
repz
cmp
ja
cmp
loop
push
fcomip
std
ret
rcrl
cmp
push
sub
inc
and
mov
push
pusha
lcall
mov
into
insl
add
jmp
lock
in
sbbl
or
xchg
insb
or
in
lock
adc
icebp
or
imul
jbe
repnz
add
jg
pushl
jg
adc
jbe
outsb
fdivs
sbb
pop
cld
xor
push
jne
ljmp
stc
rclb
push
inc
pop
cmp
jne
leavew
ja
cld
rcrl
and
xchg
mov
ds
add
push
out
iret
sbb
pop
xor
test
jle
push
jl
outsb
pop
das
das
decl
ss
testl
jno
incb
sbb
pusha
mov
adc
mov
dec
cld
shlb
mov
dec
sub
mov
jnp
rcll
test
fisttpl
sub
sbb
js
lret
dec
adc
iret
fdivrs
jmp
mov
dec
mov
mov
icebp
call
adc
mov
add
pop
inc
push
aam
sbb
hlt
shrl
pop
mov
add
add
aas
cmp
sub
jnp
push
add
ficoms
das
psubsb
xlat
mov
adcl
mov
mov
push
ror
jecxz
stos
jge
dec
add
mov
pop
mov
ret
imul
sub
decl
mov
scas
in
mov
xchg
jl
fs
sub
cmp
out
jmp
mov
jg
jns
add
out
pop
mov
enter
mov
out
lahf
lcall
fdivrl
add
aas
pop
inc
das
stos
in
repnz
add
leave
jo
sub
insb
xchg
push
mov
mov
cld
or
int3
lea
loop
add
sub
xor
imul
or
pop
lcall
inc
mov
lahf
gs
out
call
cltd
cmpsl
lds
jg
or
or
mov
jl
mov
mov
and
jg
pushf
cmovo
sbb
mov
lock
ffree
cli
addl
pop
jl
out
or
jmp
je
popa
jae
xchg
push
pop
inc
xchg
and
adc
mov
lahf
lds
ljmp
repz
pop
jnp
mov
cmp
lret
mov
cmpsb
ljmp
mov
lret
inc
lods
scas
mov
sub
jg
dec
cli
jle
xor
lret
dec
jnp
pop
jg
ss
cli
and
xor
int3
add
pop
jb
cmp
push
and
inc
lock
loop
lahf
cmp
jmp
mov
leave
inc
add
ret
repz
lock
decl
cmp
shrb
mov
stos
mov
frstor
and
or
les
jecxz
ret
jmp
push
clc
inc
shl
ret
nop
inc
scas
sub
inc
or
fcmovb
je
std
ljmp
lahf
dec
mov
sbb
inc
mov
sub
std
ds
jbe
dec
cld
ljmp
stos
mov
daa
xchg
push
lds
push
xor
push
adc
in
fnstcw
faddl
jmp
insb
int
nop
les
leave
cs
pop
add
xchg
fcomip
aad
sbb
cli
je
popf
push
lock
xor
mov
out
push
mov
sub
sahf
mov
push
subb
mov
xchg
jmp
jnp,pt
jb
cmp
and
pop
add
dec
jo
jl
sub
or
stc
cmc
xchg
jg
cmp
clc
cltd
jle
jne
xchg
add
and
pop
cld
cli
lahf
inc
dec
into
sar
jecxz
sbb
in
xor
lea
fdivr
jle
sahf
pop
add
push
call
push
lahf
adc
cmp
loope
push
sti
cld
mov
ljmp
and
ret
mov
cmp
in
pushf
dec
clc
dec
scas
pushf
mov
sar
cli
out
fcmovu
call
std
dec
jbe
xlat
mov
hlt
jecxz
out
jne
lret
in
adc
mov
in
scas
xor
jb
mov
addr16
aaa
std
cltd
cli
cmp
in
dec
mov
xchg
stc
imul
mov
neg
inc
pop
ja
inc
sahf
mov
lock
sub
xchg
ljmp
pop
cmp
xchg
lock
inc
icebp
and
iret
mov
int3
int
ljmp
push
pop
mov
xor
ret
add
sub
push
cld
call
xchg
fbld
insw
push
jo
iret
addr16
stc
jbe
fdivrl
mov
inc
ss
pop
xchg
bound
mov
aaa
cmp
inc
dec
mov
mov
mov
ds
inc
test
push
fiadds
dec
add
cmp
inc
push
xchg
das
jmp
mov
fidivs
call
cmp
lcall
xchg
xor
lock
in
aad
in
lahf
xlat
mov
std
xchg
pushf
pop
sti
dec
mov
enter
js
or
out
push
jno
sub
rep
dec
aas
jmp
xchg
mov
push
lahf
cs
dec
lock
addr16
mov
adc
mov
pop
ret
add
fists
mov
pop
std
pop
mov
pop
inc
mov
shrb
jg
ret
mull
les
fstpt
test
outsb
jbe
pop
jp
xor
cmp
jmp
mov
mov
mov
popa
bound
lock
daa
xlat
sbb
push
jge
ds
lock
or
inc
stc
mov
pop
adc
cmc
and
ljmp
fdivl
add
pop
jbe
in
mov
das
std
inc
jo
dec
push
xchg
cmp
fcoml
jg
fwait
mov
cmc
or
cmpsb
bswap
mov
xchg
fdiv
ret
ret
push
dec
stos
fldl
mov
insb
popf
fisubrl
repz
outsl
clc
sti
push
xorl
inc
into
mov
ljmp
cmpsb
sbb
xor
mov
shr
or
aas
lea
mov
mov
xor
rolb
lods
inc
or
hlt
into
push
jp
or
movsb
scas
xor
ljmp
jecxz
test
arpl
cmp
in
arpl
inc
stc
jl
iret
mov
shrb
mov
scas
mov
out
sahf
std
movsl
or
and
mov
imull
fldt
out
mov
push
mov
jmp
hlt
fwait
in
sub
pop
test
outsb
lret
adc
and
mov
xcrypt-cfb
cmpsl
in
icebp
or
pop
std
lcall
sbb
jns
pop
in
into
insb
mov
lock
in
cmp
fyl2x
cld
ret
and
pop
daa
test
jle
sti
call
pmovmskb
xchg
push
push
pushl
incl
das
lods
test
dec
or
dec
and
repnz
inc
outsl
call
iret
xchg
sub
stos
sarb
fnstenv
mov
arpl
std
inc
into
dec
in
sahf
jl
std
lcall
out
push
pop
mov
pushf
repz
pop
ljmp
dec
jae
jmp
decl
mov
mov
dec
popf
lret
mov
incl
cmpsl
cld
and
lret
out
lds
stc
dec
bound
loopne
or
ss
cmpsb
dec
imul
stos
fmull
xor
dec
ffreep
sbb
jmp
push
and
iret
repnz
pop
pop
loop
lods
inc
addr16
mov
popf
repz
fstp
insl
pushl
mov
cmc
pop
ficompl
jbe
jns
or
icebp
pop
mov
push
adc
cmp
std
scas
xchg
leave
out
sub
adc
hlt
aas
fcomp
sar
xchg
pop
cli
xchg
int
adc
pop
jle
nop
ss
mov
mov
std
adc
jg
mov
lahf
in
push
xchg
xchg
sbb
das
enter
lcall
mov
lods
jns
dec
test
out
mov
shll
xor
xchg
div
test
sar
fisttps
loop
nop
dec
into
aam
xor
xchg
pop
out
iret
pop
das
sub
hlt
mov
or
stos
sahf
xor
push
sbb
ljmp
das
jmp
out
pop
jbe
lret
inc
mov
mov
sti
dec
movsl
fwait
cmp
aaa
out
fidivrl
incl
addr16
int3
jae
loop
and
ds
xchg
jns
leave
mov
jmp
scas
incl
int3
cmp
push
pusha
cmpsl
pop
sbb
clc
xchg
leave
loope
dec
mov
addr16
mov
std
adc
add
test
test
in
pop
icebp
fcmovnu
subl
jmp
lea
fisubl
jl
bnd
mov
icebp
mov
jnp
pop
lret
cmp
pop
mov
inc
enter
adc
jnp
mov
test
jp
jmp
jb
mov
imul
cmp
insl
rorl
inc
add
adc
mov
mov
add
sahf
decb
jmp
and
fmul
jmp
jl
adc
nop
inc
xor
aam
out
mov
incl
rcrl
xlat
push
gs
dec
push
push
push
inc
arpl
xchg
sbb
fildll
dec
leave
leave
gs
jecxz
add
mov
andl
scas
repz
rcll
fldcw
iret
pop
mov
mov
mov
je
in
mov
xchg
push
gs
inc
cs
mov
call
cld
out
xchg
add
daa
out
xchg
sbb
pop
clc
mul
movsb
jge
outsl
cli
decl
add
jp
out
addr16
lret
xchg
idiv
jmp
rol
adc
xor
dec
lods
out
fwait
push
loopne
xchg
hlt
je
dec
mov
push
lods
pop
or
ds
and
sbb
jge
imul
sub
scas
cmp
nopl
jg
clc
test
lcall
out
pop
cld
adc
ficompl
dec
push
bnd
lret
decl
addr16
cmp
inc
shrl
mov
xchg
call
mov
inc
scas
xor
call
sub
shrb
adc
iret
fists
fcoms
mov
add
loopne
xchg
xor
mov
outsb
jge
add
in
dec
leave
iret
add
sbb
icebp
ret
lret
mov
fsubs
lds
mov
mov
sahf
xchg
pop
testl
mov
fldt
lea
xchg
sahf
xchg
decl
pushf
fimuls
test
addb
cmp
ljmp
outsb
lret
jge
ljmp
into
mov
pop
idivb
call
cmp
sbb
pushf
fstpt
movsl
nop
fdivrl
pop
add
enter
and
push
cmp
data16
mov
fdiv
lcall
pop
lret
mov
add
or
repz
fistpll
lock
rolb
push
xor
mov
popa
daa
sbb
dec
leave
ret
std
es
sub
scas
jl
sbb
mov
pusha
fs
jbe
repz
inc
dec
idiv
ljmp
mov
lods
mov
mov
dec
jbe
push
addb
div
ljmp
inc
std
jle
sti
int
jae
xor
negb
xchg
xchg
push
ret
mov
xchg
fucom
mov
jo
mov
mov
jne
pop
dec
xchg
test
inc
insb
sub
aam
add
call
and
je
jmp
pop
pop
je
sub
cmp
or
fisttps
cmp
push
test
repnz
mov
xchg
xchg
sarb
pop
sbb
mov
dec
xchg
lret
lods
mov
jmp
in
je
iret
dec
mov
clc
dec
movsb
mov
clc
out
add
xor
fistpl
jns
jl
jmp
idivb
add
mov
stos
stos
mov
sub
loope
sbb
cs
or
gs
ljmp
or
mov
cmpsl
adc
cmc
loopne
mov
cmpsl
jmp
jmp
mov
pxor
push
inc
loop
cmpsb
xchg
sbb
jmp
add
cmp
js
ficoml
in
cltd
pop
cli
inc
mov
pop
imul
fistpl
aaa
mov
js
xorl
out
xor
and
mov
xchg
mov
push
scas
adc
es
pop
stos
sub
pop
loopne
cli
jmp
push
ror
scas
jl
push
adc
xchg
mov
cld
and
sub
add
lahf
int
incl
es
jg
or
cmpsb
sti
mov
pop
std
jo
jmp
insl
dec
sbb
xchg
fwait
push
into
fmul
fwait
xchg
fcoms
pop
repnz
xchg
mull
sarl
xchg
mov
jo
xchg
lcall
lcall
fcomip
xor
cltd
sub
pop
lret
popf
stc
lods
xor
sub
lcall
lea
test
pop
mov
mov
sub
xchg
adc
mov
jmp
popf
out
xchg
jae
sbbl
push
imul
lock
out
inc
jle
mov
and
aam
push
stc
stos
rorl
dec
dec
hlt
loopne
dec
ret
or
push
mov
cld
jle
inc
jp
mov
jg
xor
popa
enter
out
das
pop
fucomp
mov
jae
fwait
xchg
std
xor
loopne
mov
cmc
cmp
cwtl
test
orb
cmpsb
cwtl
jnp
dec
xor
mov
sarl
mov
scas
dec
push
xlat
fidivrl
imul
lret
sub
stos
lcall
add
add
sub
xor
fucomp
int3
bnd
incl
jle
cmp
jnp
and
and
add
pop
rol
xchg
push
icebp
adc
jae
das
sar
mov
loope
adc
stos
xor
adc
icebp
decl
hlt
mov
cmp
dec
jne
pop
lds
movsl
shl
xchg
out
push
lcall
out
in
scas
mov
mov
push
leave
enter
sbb
lock
push
cmpsb
adc
movsb
push
jmp
aaa
ss
or
rcl
out
out
in
in
aas
rcrb
jle
in
ja
jle
std
cld
leave
jecxz
jg
pusha
jle
div
hlt
dec
xor
sar
jmp
adc
call
sahf
inc
rcll
xor
xchg
add
mov
mull
xchg
roll
mov
das
sbb
and
into
sub
call
mov
ret
testl
dec
arpl
inc
add
adc
and
pop
ja
jg
das
xchg
aas
xchg
out
lcall
dec
addr16
stmxcsr
addr16
cld
outsl
ja
jg
jecxz
out
in
push
push
notb
xor
mov
iret
ljmp
mov
push
out
add
jge
mov
mov
in
mov
jnp
fwait
shlb
adc
ljmp
mov
outsb
test
stos
in
jl
jge
adc
xlat
loopne
xor
out
dec
rorb
not
and
out
lcall
and
mov
call
mov
fldt
add
pop
mov
jmp
mov
cli
push
out
jge
adc
cmpsl
sbb
xchg
cmc
jno
int3
stc
jnp
stos
jge
in
call
fisttps
test
out
retw
in
add
sar
call
out
inc
jnp
inc
xchg
mov
out
mov
pushf
hlt
cmpsb
jb
and
pop
push
loope
in
cmp
imulb
lds
in
sbb
mov
inc
in
cld
iret
fisubrs
lahf
or
mov
jnp
jp
sub
cmpsb
push
rcrl
push
pop
fdivr
jo
pop
or
lods
jb
lods
ljmp
jnp
decl
push
or
cmp
push
in
enter
cld
dec
jle
daa
xor
jmp
lcall
mov
aaa
pop
add
push
cmp
xlat
movsb
jmp
sub
push
adc
mov
xlat
jnp
xor
roll
imul
mov
pop
and
pop
xchg
xchg
jg
inc
cld
int
lds
int
fwait
mov
inc
jp
push
fistps
pop
mov
cltd
pop
ds
xchg
int3
or
push
fs
mov
push
jmp
mov
aas
jb
stos
push
retw
cmp
push
mov
xchg
mov
out
rcrl
test
or
and
mov
insb
sar
in
clc
cmp
cld
fists
lcall
cmpsl
inc
call
cmp
inc
mov
xor
hlt
lcall
fs
pushf
jno
lods
jmp
xchg
mov
std
dec
push
adc
cmp
mov
sub
mov
shrl
push
das
xchg
pop
int3
cmp
or
add
mov
jge
lods
sub
mov
or
int3
xchg
mov
in
pop
sarl
out
adc
inc
cmp
inc
fisubs
hlt
dec
repz
std
out
cli
mov
sbb
xchg
adc
cwtl
mov
pop
cmpb
mov
es
push
pushf
scas
xor
jno
jge
clc
sbb
push
faddl
xor
inc
pop
cltd
sbb
xchg
mov
jmp
bound
aaa
addr16
inc
dec
or
test
sbb
mov
ja
lret
inc
jnp
mov
dec
call
iret
inc
mov
or
decl
fs
xchg
in
icebp
cmp
push
pop
ds
das
push
ret
rcrl
pop
clc
test
inc
xchg
inc
add
sub
je
mov
ror
inc
or
shlb
fadd
insb
fcompl
jp
jno
lret
xor
test
outsl
xor
inc
jbe
repnz
gs
lcall
cmp
push
and
jg
loopne
push
add
rorl
repnz
and
fstl
mov
sbb
mov
push
mov
cmpsb
mov
in
xchg
push
mov
fcom
and
mov
stc
and
test
in
daa
incl
pushf
mov
lds
pop
lods
push
popf
mov
lahf
outsl
fwait
hlt
stos
jl
pushf
xchg
int
call
clc
enter
cmpsl
push
xchg
fistpl
fnsave
icebp
cmp
inc
mov
inc
jne
call
mov
mov
sub
pop
test
aad
fnsave
mov
arpl
push
mov
in
addr16
ljmp
pop
arpl
stc
xchg
xchg
loopne
dec
gs
and
das
sarb
mov
arpl
iret
lret
out
inc
inc
xor
cmp
rclb
xor
jnp
mov
xor
pop
xchg
incl
cld
jbe
mov
jle
sbb
mov
std
popa
xchg
cld
pop
pop
fdivrp
in
adc
rcr
push
enter
jmp
jnp
adc
out
hlt
std
nop
xchg
incb
ret
stos
cmp
mov
in
jmp
movhps
cmpsl
sbbb
iret
outsl
jo
ds
mov
cmp
fldl
push
repnz
mov
test
test
pop
ljmp
mov
out
fcomip
inc
pop
ljmp
sbb
outsl
push
fwait
and
outsl
mov
xchg
add
cld
decl
lods
fidivs
stc
jo
mov
cltd
fists
jmp
icebp
lahf
xchg
cmpsl
xchg
js
movsb
nop
sahf
imul
into
mull
fbld
bnd
jg
imul
push
inc
idiv
sahf
pop
aad
cld
sti
xchg
pop
leave
clc
push
nop
jne
mov
xchg
mov
test
mov
jg
or
les
call
fs
adc
fmulp
out
pop
jmp
jbe
dec
fcmovnu
into
inc
iret
subl
inc
jns
fadd
push
loopne
gs
popf
cmp
call
lcall
mov
sbb
mov
push
int
std
ret
iret
insl
and
pop
xchg
jg
dec
je
sahf
sahf
rol
insl
push
pop
dec
push
cmp
or
sti
loop
ret
fsubs
lret
jp
mov
xor
xor
aam
mov
out
mov
lahf
cmp
mov
lock
cmc
popa
lcall
pushf
stos
dec
mov
sub
jg
incl
gs
fwait
loop
loope
ret
test
push
loope
lcall
into
fwait
lds
lret
cmc
incb
insb
and
pop
decl
inc
shl
rol
test
negb
mov
mov
dec
enter
mov
test
dec
adc
out
lret
inc
rcl
fsubr
mov
cmc
ror
fstp
xchg
sahf
mov
mov
into
int3
rcl
fcmovne
and
ljmp
cmp
mov
cmp
xchg
fcmovnb
adc
jno
ljmp
mul
scas
addr16
gs
xchg
pop
pop
imul
orl
loopne
jg
cmp
ret
ret
outsl
mov
clc
das
jl
lahf
ret
adc
popa
adc
jbe
xchg
and
ljmp
lret
loope
push
test
jl
cmc
pop
pop
out
lock
mov
ja
inc
inc
js
gs
jmp
ljmp
data16
or
pop
pop
jmp
and
xchg
add
dec
je,pn
sbb
call
inc
adc
loop
clc
cmpsb
clc
mov
divb
sub
decl
pop
inc
shr
dec
mov
int3
out
je
lock
lcall
cltd
adc
pop
and
cmp
push
xchg
fcomps
cmp
call
fdivrl
repnz
loope
clc
movsb
pop
cmpsb
jg
shll
sti
ljmp
sti
es
cmp
mov
popf
jnp
out
enter
add
out
cli
adc
cmp
mov
cmc
lds
lcall
in
xor
iret
clc
fbld
add
es
lcall
call
xor
ljmp
mov
sti
lahf
pushf
jnp
repz
dec
in
dec
scas
push
das
pop
push
call
pop
imul
in
scas
cli
mov
adc
sahf
clc
push
pop
lret
jmp
pushf
outsb
bound
movsb
sub
lods
mov
ja
das
cli
call
scas
fs
addr16
jne
lret
int
out
repnz
into
add
sbb
test
mov
sub
push
ja
lret
daa
dec
repnz
dec
mov
inc
outsl
repnz
int
dec
cmp
xchg
cmp
mov
scas
sti
mov
notl
ljmp
mov
leave
pop
mov
das
add
inc
lds
adc
ljmp
fcomip
in
jmp
xor
xchg
iret
fwait
or
test
mov
mov
pushl
and
jno
fbld
cmp
dec
lret
pusha
leave
lahf
out
push
enter
mov
bnd
clc
call
cmc
shl
cmp
fisttpl
daa
pop
xchg
xchg
mov
sub
jmp
call
mov
out
jge
xchg
mov
aad
adc
dec
pop
or
mov
push
inc
roll
lock
rcl
loop
jle
popf
inc
jo
and
int
mov
idivb
mov
iret
mov
call
cmc
lcall
jnp
mov
inc
xchg
cwtl
movsl
or
data16
cli
or
gs
inc
cmc
incl
in
shl
adc
xor
stc
in
xor
aaa
dec
mov
lret
fstps
and
les
xor
lcall
mov
gs
bnd
aad
imul
mov
pop
pop
int3
lret
xchg
aas
enter
hlt
decl
jecxz
fisubrl
xlat
mov
cmpsl
inc
cmp
outsl
pop
dec
clc
stos
pop
std
cpuid
mov
mov
loopne
mov
jle
mov
pop
in
xlat
stc
sahf
sbb
repz
jg
pushl
div
mov
xchg
mov
and
pop
rol
push
int3
mov
jae
cmp
fcmovne
fldcw
mov
pusha
xchg
dec
decl
ljmp
mov
sbb
xchg
imul
cltd
div
adc
jmp
dec
clc
fidivs
jmp
out
in
jb
int
mov
mov
ret
pop
adcl
xchg
insl
jle
mov
stc
xchg
js
stos
jne
ljmp
jle
xchg
mov
jl
test
clc
test
pop
out
movsl
jp,pt
outsl
sbb
js
ljmp
das
addl
cmp
rorl
mov
in
stos
subb
call
std
jmp
jp
mov
bound
jmp
pushf
pop
mov
jecxz
ds
decl
daa
in
xlat
mov
mov
icebp
mov
mov
das
and
nop
arpl
iret
adc
inc
sbb
mov
mov
add
fsubr
cli
js
imul
mov
cmp
mov
jle
push
insl
dec
jecxz
sbb
addr16
jg
mov
inc
outsl
shl
stos
in
jae
popf
and
xor
dec
call
incl
xchg
dec
fldenv
xlat
ret
mov
rcrb
decl
iret
mov
pop
lods
xchg
shr
jl
mov
and
outsl
mov
cwtl
inc
imul
adc
loope
mov
cmp
dec
incl
fisubrl
je
into
mov
out
mov
pop
pop
aam
dec
mov
negl
push
mov
out
ljmp
incl
inc
lcall
bound
call
adc
dec
xchg
in
sahf
mov
fidivrl
lcall
js
adc
adc
call
dec
push
lcall
cltd
pop
ja
cmc
imull
ret
mov
dec
inc
fdivr
mov
xchg
mov
pop
imul
ds
push
xchg
adc
inc
lcall
jo
cmpsb
inc
pop
inc
mov
jp
int3
xchg
arpl
xchg
or
idiv
mov
ja
stos
cld
pop
sbb
sbb
pop
jns
jg
loope,pt
loope
rorb
cli
push
cld
inc
stos
push
add
int
in
pop
lret
call
mov
cli
aas
les
mov
insl
icebp
cmp
mov
imul
inc
fiadds
shrb
inc
insl
xchg
mov
jg
lock
add
sarb
jb,pn
mov
jmp
mov
mov
stc
clc
cs
in
sti
in
pop
jb
and
outsl
jmp
cmpsb
jg
or
sub
cmp
mov
adc
dec
sub
jno
or
sti
imul
xor
popf
xchg
sbb
sub
out
mov
inc
cld
cld
leave
loope
cltd
ficoms
mov
das
lcall
ja
push
lret
pop
pop
aas
jle
int
xlat
lock
and
loop
mov
mov
loope
rcr
loope
fadd
cli
sarb
sarb
mov
cmp
mov
idivb
clc
in
fidivrs
test
incl
aam
mov
ja
clc
jg
xor
inc
xchg
mov
decl
and
mov
insb
push
xor
sub
jo
stos
cli
repnz
mov
xor
mov
mov
lret
scas
clc
shlb
xor
lret
lcall
push
shll
rcr
push
jne
xchg
call
scas
rcrl
stos
repz
sub
sbb
outsb
xor
lcall
sub
sbb
xchg
cli
xor
hlt
and
test
push
ljmp
stos
nop
loop
rcrb
scas
lock
push
in
jnp
cmp
push
sar
mov
rcll
es
mov
iret
and
fisttps
out
repnz
xchg
mov
pushf
repz
mov
idiv
adc
cmpsl
pop
in
call
dec
rcrb
jg
cwtl
lods
cmpsl
push
iret
mov
pop
jle,pt
loopne
xchg
notl
aas
sahf
jo
lcall
js
xchg
add
jae
sbb
sub
cli
push
loop
jmp
adc
adc
in
inc
dec
mov
xchg
jbe
push
out
push
insl
call
call
cli
cmc
sahf
icebp
js
sahf
std
xlat
xor
mov
scas
jecxz
cmp
repnz
decl
jmp
lahf
add
icebp
movsb
ds
add
sarl
xchg
test
dec
clc
call
movsb
aas
in
inc
dec
jb
inc
mov
sub
ja
loopne
pop
call
loope
out
incl
movsb
ret
dec
push
xchg
jae
inc
jl
mov
bnd
clc
aaa
xor
je
add
add
loopne
adc
subl
aas
cltd
mov
mov
jmp
push
fwait
pusha
stc
daa
xlat
jmp
jns
jbe
mov
popl
stos
insl
mov
add
std
ljmp
std
stc
std
aam
enter
repz
std
cmc
std
loopne
mov
cmp
enter
testl
pop
cld
decl
jge
inc
ljmp
dec
or
dec
mov
dec
test
or
loope
or
sbb
sbb
sbb
sbb
mov
and
mov
mov
sub
sub
mov
sbb
ljmp
enter
or
add
test
ss
xlat
dec
sbb
dec
std
pushl
fmuls
jnp
sub
push
adc
dec
rorb
jg
push
xchg
shll
xchg
inc
pop
push
ret
mov
out
mov
add
inc
outsl
outsl
insb
gs
outsb
add
add
add
inc
popa
insb
jae
add
jb
lea
sub
add
push
mov
jmp
push
nop
inc
add
dec
outsb
je
addr16
sbb
shlb
add
jns
insb
es
outsl
jb
notb
addb
inc
movsb
imul
jnp
add
cwtl
or
push
je
sub
push
in
add
and
add
add
sub
xor
int
cmp
cmp
and
cwtl
insl
in
sti
jg
pop
push
dec
bound
arpl
pop
sbb
loopne
or
insl
pop
sbb
or
or
mov
popaw
arpl
lds
leave
inc
add
inc
and
clc
jmp
adc
fiadds
cmp
dec
or
int3
jl
push
dec
dec
mov
xchg
cs
add
push
jno
xorb
or
mov
out
addb
lea
push
and
notrack
enter
fcompl
sarb
fdivl
lods
test
mov
pushf
cwtl
xchg
nop
pushf
pushf
pushf
pushf
mov
mov
lock
call
jl
and
cld
pushf
pushf
pushf
fmull
clc
je
insb
fistps
push
add
mov
or
push
call
sub
je
movzwl
in
mulb
mov
ss
pop
ret
pop
pop
leave
leave
leave
leave
push
push
dec
dec
fcmovne
leave
inc
inc
hlt
mov
cmp
jne
push
jle
push
add
or
jmp
lahf
std
xor
mov
jmp
and
adc
mov
fwait
ss
add
mov
push
roll
push
ljmp
or
inc
cmp
jne
add
pop
add
add
or
jnp
xor
xchg
push
push
sbb
fwait
out
out
repnz
jl
incb
jmp
ja
add
inc
add
adc
mov
jbe
adc
and
out
push
jnp
mov
pop
pop
mov
push
testl
adc
dec
cmp
pop
repz
repz
dec
add
loopne
or
popw
push
push
outsl
mov
lock
mov
jbe
push
pop
push
add
pop
mov
lret
add
cmp
jne
xor
add
inc
inc
or
or
pop
jmp
add
jo
outsl
or
shlb
cmp
aaa
sbbl
mov
mov
xor
je
pusha
adc
pop
pop
jo
jbe
insb
rcr
hlt
or
aam
push
mov
jecxz
addb
pop
sub
add
in
loopne
fbstp
push
and
push
add
movhps
ds
aas
pop
push
cmpl
push
push
add
dec
cmpb
les
or
xor
aas
out
pop
mov
add
sub
mov
enter
jle
dec
or
addr16
pop
jmp
dec
roll
es
inc
cmp
pop
add
xchg
xor
mov
xchg
pop
adc
jge
mov
or
adc
pop
xchg
test
add
add
and
push
add
mov
test
insl
fadds
je
xor
es
adc
cmp
dec
ficoms
push
pop
ja
sub
push
pop
subb
sbb
fildll
lahf
push
pop
icebp
fmul
mov
push
push
dec
pushf
sbb
scas
mov
arpl
sub
repz
mov
mov
push
adc
and
adc
pop
cmp
xor
in
or
pop
pop
cmp
lcall
jo
ja
and
jae
or
lods
mov
inc
push
insb
cwtl
jbe
or
dec
jo
idiv
std
test
or
add
mov
jno
clc
xchg
insl
cmp
jne
inc
pop
xchg
ja
mov
je
jno
inc
sub
mov
pusha
push
inc
mov
fcomip
mov
je
mov
ret
mov
and
mov
cmp
loop
mov
or
aad
stos
adc
adc
fdivs
jmp
push
add
add
xor
cmp
or
jmp
pop
out
cmp
jae
sbb
sti
cmp
push
push
es
dec
push
aad
sahf
loopne
jmp
stc
pop
mov
das
add
sub
jnp
ljmp
popa
in
insb
jnp
nop
inc
add
cmp
add
data16
adc
add
outsb
jl
loopne
adc
popf
xchg
hlt
inc
int3
in
jge
mov
rol
sbb
adc
inc
cmp
jg
mov
xor
mov
testl
pop
add
in
cmp
fildl
inc
sahf
fdiv
jmp
icebp
shrb
jne
add
in
jno
lea
and
dec
cwtl
push
pop
sti
fstl
sub
shl
cmp
sbb
push
cli
xchg
or
pop
or
pop
out
mov
sbb
or
insb
push
sarb
jne
or
or
pop
mov
sub
fwait
push
add
inc
or
or
dec
lock
mov
cmp
sub
sub
or
sub
xchg
test
push
inc
out
rorb
xor
stos
mov
add
inc
push
xchg
loopne
jg
jmp
stc
cmp
jne
pop
jg
inc
js
jae
jl
in
cmp
or
inc
lock
fcmovne
xor
pop
cmpsl
jl
sub
leave
lea
cli
mov
adc
jge
cmp
pop
rcrb
pop
call
cwtl
or
sbb
cmp
jne
cmp
rolb
cwtl
popa
aam
adc
ja
and
mov
sub
mov
push
push
or
pushl
mov
push
mov
test
adc
inc
jle
and
adc
add
fbstp
push
sub
cmp
mov
in
adc
inc
es
jl
in
movl
aaa
pop
loope
push
cld
js
adc
adcl
push
testb
pop
pop
pop
fs
negl
cmpsl
adcb
ret
push
sub
jmp
mov
popa
pop
pop
scas
test
pusha
mov
push
out
call
push
into
push
inc
shll
and
pusha
scas
or
mov
add
iret
xor
jmp
or
inc
movhps
cmp
jmp
fdivr
cmpl
sbb
mov
mov
cmp
or
pop
pop
je
pop
pop
cmp
clc
cmp
adc
adc
cli
into
jg
adc
jecxz
fdivs
test
jns
ret
cli
add
ds
hlt
jmp
sub
sbb
mov
xchg
mov
adc
mov
sbb
jmp
push
mov
pop
and
adc
fimuls
cmp
add
adc
inc
cmp
xchg
movl
pop
or
dec
stc
add
sub
lea
mov
cmp
lods
shr
adc
movl
or
xor
sub
add
pcmpeqd
add
leave
jle
int3
inc
or
mov
ljmp
ljmp
je
stos
fucomip
adc
jl
or
insb
rolb
jo
call
ret
inc
push
push
push
xchg
dec
subl
or
jnp
std
fiaddl
enter
ret
aas
sub
pop
or
testb
je
mov
lahf
icebp
jb
sub
xor
jo
xchg
lea
pop
add
les
out
fdivs
testb
and
fsubs
test
aaa
mov
sub
inc
xor
andl
mov
pop
cmpsl
hlt
pop
imul
pop
mov
out
dec
in
js
mov
xchg
scas
rorb
xor
mov
sub
push
movl
dec
cmovge
or
dec
adc
xor
inc
add
mov
xchg
cmp
aad
sahf
loope
fisttpll
xor
jp
mov
pusha
movl
lea
rolb
mov
test
mov
ret
rcrl
mov
mov
mov
add
or
movsb
sti
mov
pop
test
jo
sar
loope
xchg
in
mov
lret
and
testb
and
xchg
adc
mov
mov
inc
lods
or
or
cli
add
or
pcmpeqb
popf
adc
cltd
scas
lock
addb
mov
mov
aas
call
hlt
lret
adc
enter
sbb
add
sbbl
outsb
pop
movsb
test
test
movsl
mov
dec
adc
jne
test
dec
pop
mov
hlt
fdivs
xchg
mov
add
or
insb
mov
fisubl
jae
sysenter
sub
cmp
jne
addl
fisubrs
paddsb
std
roll
mov
lea
xor
enter
mov
pop
or
mov
mov
je
ret
inc
mov
inc
and
test
popa
lods
je
shlb
mov
or
pop
adcb
sub
sbb
and
cmpl
or
out
add
insb
mov
jno
mov
sbb
jne
sub
cmp
pushf
jle
inc
fs
mov
and
or
bound
push
cmp
pop
jbe
stos
les
pop
je
cwtl
jbe
push
pusha
mov
xchg
pusha
addb
mov
cmp
mov
jmp
adc
cmp
mov
jl
push
fmull
cmpl
pop
adc
jp
sbb
sbb
sub
sub
jl
add
jmp
mov
pusha
add
mov
and
outsb
mov
rcll
or
pushf
scas
dec
jne
lahf
orb
sub
aad
add
aad
pop
add
in
push
mov
dec
or
test
les
add
xlat
inc
cld
adc
or
pop
or
insl
clc
and
cmp
add
pop
push
testl
push
clc
jb
cwtl
jb
clc
stos
mov
fsubs
aam
push
pop
in
push
sub
sbb
mov
add
push
jne
aaa
jmp
notl
mov
rorl
pop
push
insb
mov
fsub
push
pop
pop
push
mov
and
test
test
fsubp
shrl
jg
sub
cs
mov
sbb
test
mov
mov
jno
mov
inc
faddl
in
or
shl
push
add
sbb
jne
out
xchg
pop
dec
mov
insb
pop
pop
scas
ret
inc
enter
pop
clc
inc
sub
in
out
push
adc
jne
cltd
or
sub
or
sub
mov
add
or
bound
lock
test
rorl
lcall
lahf
ret
std
lock
or
mov
lods
pop
jl
inc
push
sbb
and
in
pop
pop
stos
jle
dec
out
xor
push
lock
test
je
sub
push
addr16
add
or
lahf
jbe
cmp
or
jmp
push
repnz
pop
aaa
outsb
or
orb
or
test
sub
pop
pop
push
mov
cmp
shrb
cmp
pop
mov
jge
loope
pop
xor
out
xchg
lret
cmp
add
sbbl
add
sbb
scas
fdivl
sub
lds
adc
sub
outsl
push
and
sbb
inc
mov
add
adc
or
aad
std
mov
lret
fwait
std
int
push
sub
mov
cltd
cmpsl
mov
sub
jne
divps
cmp
jg
sub
add
sbb
out
xor
leave
in
lock
fsubrl
movb
or
and
mov
fdivs
fdivs
das
mov
add
les
mov
lds
push
shrl
push
movsl
sub
test
das
mov
lret
dec
add
pop
dec
jl
xor
jmp
sub
sub
sub
aaa
push
adc
adc
sbb
add
sbb
xor
adc
xor
add
sbb
xchg
sbb
cmpl
mov
jmp
adcl
loopne
push
mov
push
jge
cmp
pop
jl
je
fmul
xchg
push
sbb
jle
and
popf
shrb
inc
addb
mov
incl
sbb
inc
xchg
dec
lock
jne
fisubs
mov
add
mov
push
adc
imul
inc
jno
or
ret
div
ljmp
or
shlb
mov
dec
dec
pop
or
xchg
negb
mov
ret
push
jmp
xchg
out
insl
jne
sub
bound
rolb
jp
sub
fidivrs
adc
adc
sbb
xchg
mov
xor
push
inc
adc
jg
pop
mov
dec
and
mov
into
push
or
xor
mov
out
jne
cs
sti
sbb
or
jne
icebp
sysenter
cwtl
fs
cmp
ja
mov
mov
orb
pop
xadd
mov
loopne
out
push
sbb
sbb
adc
pop
jne
xor
lret
imul
mov
or
mov
mov
push
cld
aaa
mov
sub
jg
sub
inc
add
adc
fnstsw
jg
sarl
mov
inc
rep
jmp
mov
leave
jmp
or
jmp
mov
mov
xchg
ficoms
ds
ljmp
jbe
mov
bound
divl
je
sar
js
rep
xchg
loope
scas
mov
xor
lea
xor
std
xor
sarl
ds
inc
push
push
stc
js
jecxz
or
outsb
or
xlat
insl
popf
or
daa
adc
iret
popw
sub
loop
sub
jnp
fcmovnbe
push
in
or
adc
in
or
sub
loop
fwait
orw
insb
mov
or
fldcw
pop
inc
and
roll
sbb
xor
decl
mov
jb
mov
xchg
dec
sub
jae
mov
pop
mov
shrl
pop
jb
adc
pop
or
fwait
sbb
mov
insb
enter
loopne
cmp
push
sbb
sbb
fbstp
scas
jb
or
and
int3
xlat
push
jne
call
mov
test
adc
sbb
adc
dec
dec
call
int3
jne
mov
mov
cmp
jbe
lret
mov
inc
inc
and
imul
in
sar
pushl
rorb
inc
in
add
ret
ljmp
aad
lods
pop
cmp
jne
dec
dec
mov
pop
add
fwait
negb
or
loop
push
adc
add
imul
add
push
cmp
jne
push
adc
add
adc
clc
mov
cmpsb
add
jne
add
jmp
pop
cmp
cmp
jne
shr
das
add
jmp
adc
add
mov
out
into
shr
or
pop
ret
pop
outsb
scas
cmp
shrb
mov
loopne
mov
cmp
jne
dec
dec
dec
adc
dec
sbb
pop
jecxz
or
jbe
in
int
int
loopne
data16
stos
adc
clc
ret
inc
adc
imul
bound
push
mov
mov
pop
push
add
mov
push
out
sti
stos
inc
xor
je
mov
or
je
or
je
fmulp
int
and
je
pop
je
xor
dec
push
stos
stos
shlb
dec
inc
mov
fmuls
mov
jg
sub
or
cmp
ja
lea
push
add
push
das
clc
notb
out
int
or
jge
jmp
inc
hlt
neg
jle
scas
push
mov
sub
jmp
inc
inc
jmp
mov
popf
mov
je
andb
xchg
and
xor
add
scas
leave
aam
stos
aad
mov
pop
xor
mov
xlat
mov
cmp
clc
notb
stc
sbb
icebp
jg
jb
mov
dec
jne
pop
mov
addr16
jno
gs
repz
mov
and
jbe
jl
pcmpeqd
cld
adc
lea
mov
dec
pop
lea
fldt
sub
add
je
das
and
imul
dec
gs
mov
xor
das
test
jmp
fstp
fldt
ret
in
adc
out
mov
push
add
mov
add
add
or
repnz
daa
push
ret
mov
adc
stc
enter
mov
sbb
pop
fcmovne
xchg
and
inc
mov
mov
lock
lret
es
test
out
sub
pop
jecxz
pop
stc
xchg
xor
leave
sbb
mov
stc
lahf
stc
cmp
fidivrs
call
mov
bound
outsl
dec
mov
xlat
fadds
outsb
xor
xchg
push
or
jg
push
push
int3
into
sbb
rorl
mov
push
pop
test
enter
call
mov
inc
mov
hlt
daa
lret
into
pop
inc
test
xchg
clc
js
aas
sbbl
or
mov
addr16
leave
repnz
bound
and
cld
gs
sahf
mov
mov
lods
lds
iret
decl
js
inc
mov
stos
mov
cmp
incl
test
stos
pop
out
sub
imul
divl
jl
xor
cmp
call
xchg
push
mov
inc
mov
sti
jmp
stos
push
inc
mov
push
sbb
sarb
dec
repnz
test
nop
fildl
daa
movsb
lahf
nop
inc
pop
stos
clc
scas
adc
inc
pop
pushf
mov
incl
pushf
mov
fs
aam
imul
loope
jp
iret
inc
bound
ds
push
cmpsb
scas
mov
sbb
mov
addl
cmp
xor
in
cmp
sahf
fcomip
call
and
push
movsl
mov
popa
fmull
stc
repz
mov
dec
pop
fldl
mov
push
pusha
les
outsb
bound
xor
cmp
fwait
push
dec
aam
idiv
cmp
jne
push
pop
cmp
repz
jbe
push
adc
cld
dec
xlat
hlt
movzwl
mov
test
rolb
and
push
jle
lcall
inc
hlt
movsl
imul
push
data16
add
fnstsw
mov
pop
and
sub
outsl
stos
les
and
data16
aas
or
jg
or
add
inc
push
push
inc
push
inc
pop
inc
clc
ljmp
insb
popa
outsb
fs
inc
gs
jo
imul
push
dec
popa
jae
push
popa
insb
jne
daa
fcompl
fninit
fwait
lods
jg
ret
hlt
movsl
daa
xlat
mov
adc
leave
mov
inc
fwait
into
push
lock
or
push
mov
or
dec
cld
jne
dec
mov
xor
js
or
out
jne
mov
cs
or
sbb
add
outsl
daa
inc
and
or
xor
rcrb
in
pop
aaa
jge
cmc
jnp
inc
or
fsubrs
ja
xor
sub
push
movups
mov
fadd
xor
mov
fs
sub
loopne
mov
roll
cld
ret
cmpsb
ret
jl
mov
xor
cmp
jmp
pop
sbb
mov
or
fcomps
jl
mov
jmp
cmp
je
pop
mov
add
jae
push
push
mov
inc
clc
add
mov
push
sbb
cmp
scas
cld
pop
sti
mov
mov
mov
shl
clc
cmp
mov
xchg
cmp
subb
bswap
add
jmp
pop
mov
xor
mov
ja
loope
je
lahf
push
push
aad
xchg
sbb
jb
sahf
inc
in
push
es
clc
sub
or
mov
adc
or
ja
mov
adc
mov
out
or
lea
inc
push
sbb
and
mov
setne
es
add
and
lock
pop
xor
inc
mov
ja
push
push
mov
cmp
lods
jb
cmp
hlt
adc
xor
or
jne
or
popa
sbb
insb
je
inc
pop
fsubrl
pop
imul
mov
lods
add
daa
js
mov
ja
add
push
mov
mov
cmp
out
loope
jecxz
dec
jle
jne
mov
mov
push
xchg
jmp
jg
adc
loop
shlb
add
repnz
mov
or
divb
pop
add
sub
mov
pop
mov
push
mov
pop
pop
add
sbb
out
jmp
pop
mov
shrb
int
cmpsb
aaa
repz
pop
mov
in
mov
in
mov
les
or
callw
sub
adc
sub
icebp
pop
mov
in
lock
sub
decl
loopne
in
mov
add
sbb
add
dec
jne
shl
lcall
push
jmp
add
sbb
jecxz
push
mov
dec
cmp
xlat
lahf
push
popf
data16
adc
sbb
pop
lcall
xor
call
jb
push
pop
add
mov
jl
ja
test
inc
hlt
xor
nop
sub
mov
shl
pop
clc
mov
movl
or
or
or
mov
cmp
or
roll
sub
iret
adc
push
clc
xchg
sub
sbb
ret
outsb
jg
jb
lea
inc
aam
rolb
mov
leave
int3
in
sub
std
adc
mov
enter
push
cmp
xor
pop
iret
mov
repnz
add
add
mov
sub
or
jae
sub
testb
push
and
sbb
jmp
mov
movsbl
inc
inc
jmp
add
sbb
testb
sbb
jecxz
flds
adc
pusha
fsub
nop
loop
fdivrl
adc
rorb
jecxz
pop
mov
inc
add
cmp
les
test
faddl
mov
push
inc
dec
adc
outsb
shlb
pop
int
jmp
clc
rorb
test
xchg
notb
out
les
loop
addl
je
dec
xchg
fbstp
add
test
mov
sahf
negb
lods
dec
js
pop
jbe
dec
add
enter
adc
xor
popa
jne
push
lea
aas
or
je
orl
ficomps
jbe
mov
push
sub
push
data16
mov
cmp
mov
pop
outsl
or
test
outsb
aas
in
jecxz
lahf
mov
movsb
fucomip
adc
xor
loopne
or
lock
mov
dec
or
inc
sub
mov
push
inc
pop
adc
push
or
hlt
ja
rcrb
lea
mov
add
mov
out
sub
add
addb
filds
fdivrs
dec
fdivs
mov
divl
out
or
mov
jg
pushw
lock
mov
shrb
int3
outsl
inc
or
mov
daa
mov
in
dec
daa
lahf
adc
dec
inc
push
daa
adc
push
stos
add
loopne
and
adc
sub
adc
mov
arpl
pop
ret
or
mov
inc
popf
fs
push
subb
or
and
outsl
mov
push
push
push
push
push
mov
pop
out
jns
and
stc
es
inc
lahf
fildll
mov
cmp
or
pusha
add
divl
js
in
or
js
and
sub
loopne
and
pop
or
cmc
xchg
inc
xor
sahf
jae
mov
ljmp
insl
inc
jmp
ret
xor
jecxz
xor
xchg
ret
outsb
pop
or
push
add
scas
jl
sub
pop
cmp
push
sub
sti
lcall
dec
jmp
add
sub
jb
je
jmp
cmp
mov
xchg
push
cs
adc
jmp
sub
ljmp
es
mov
jmp
mov
jmp
mov
jmp
mov
jmp
push
push
lcall
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
dec
insl
shlb
pusha
call
shll
jo
fsubp
jge
divl
outsl
jp
cmp
push
pop
test
mov
pop
push
inc
sbb
cli
addr16
add
jl
fmuls
out
push
inc
sti
pusha
shrb
pop
lcall
loopne
sub
cmp
xor
sub
xor
fmul
sub
push
xor
ja
data16
mov
cmp
fcos
xchg
xchg
push
repnz
cmp
jne
and
xchg
push
aas
mov
add
dec
dec
push
mov
add
pop
call
or
dec
sbb
ss
inc
fcomp
fiadds
cmp
pop
add
push
clc
xor
in
sbb
test
jmp
mov
lret
or
jecxz
sbb
xchg
lret
mov
loope
cmp
jle
flds
rcrb
roll
sbb
jg
fists
adc
dec
jg
jge
mov
push
sahf
dec
rcrb
dec
mov
idivl
sbb
lea
mov
add
or
mov
pop
lahf
roll
cld
mov
filds
insb
dec
or
mov
loopne
dec
adc
add
mov
push
add
dec
mov
adc
jl
scas
test
pop
sub
or
fxch
jmp
sbb
ljmp
stos
sbb
push
dec
lret
out
or
sbb
push
fadds
fidivrl
dec
and
dec
jne
pop
pop
pop
inc
in
mov
dec
jmp
dec
shrb
addb
inc
add
xchg
or
mov
jo
adc
addl
idiv
add
clc
dec
jnp
mov
mov
es
aam
mov
sbb
mov
mov
nop
scas
mov
push
push
hlt
mov
je
dec
mov
out
cmpsb
cmp
cmpsl
neg
sbb
inc
maxps
jno
outsl
adc
ja
add
mov
push
pop
leave
push
mov
xchg
inc
repnz
adcw
dec
rorl
std
adc
add
mov
cli
push
insb
lock
push
push
add
fmuls
xor
xor
pop
ret
mov
mov
cmpsb
fwait
jne
push
pusha
jo
cmp
aas
or
xor
lods
adc
jnp
insb
push
xchg
iret
rolb
dec
test
cwtl
push
lods
and
out
sub
xor
pop
and
push
jne
aas
aam
sahf
push
add
inc
or
xor
push
xor
xor
adc
ficomps
and
adc
push
jne
mov
jne
je
jle
cmp
daa
add
add
sub
push
sbb
and
sbb
daa
and
scas
jmp
push
dec
inc
sti
shrl
popa
dec
mov
nop
inc
inc
dec
je
pop
cmp
cld
sub
daa
mov
dec
jl
lock
or
loope
clc
scas
jle
jbe
in
mov
push
sbb
add
or
lods
cmp
dec
jne
cmpsb
add
inc
jg
cwtl
inc
mov
mov
dec
sbb
pop
pop
jmp
ljmp
pop
xorb
xchg
xchg
jle
cmp
aam
pop
jle
push
add
and
push
push
sbb
dec
push
pop
movw
mov
push
cld
movl
inc
xlat
cltd
mov
mov
das
movhps
stc
mov
ljmp
and
mov
cmpsl
sahf
and
sbb
push
push
jbe
push
push
push
pop
je,pt
mov
mov
insl
mov
mov
add
cmp
jg
fmuls
or
jmp
lea
cmp
incl
sahf
sub
mov
mov
js
jl
fwait
mov
and
fnstsw
jnp
add
sbb
cmp
pop
sbb
ret
jge
xor
loope
call
loop
or
inc
xor
ret
cmp
je
pusha
add
adc
add
pop
out
mov
test
call
pop
sub
jmp
mov
pop
sub
and
pop
pop
or
imul
push
or
addr16
in
add
addr16
xor
mov
inc
xchg
orb
es
ret
adc
rcrl
rcrl
mov
in
mov
jle
cld
add
cmp
jl
in
inc
pop
xchg
add
add
aas
int3
loop
lahf
xorl
inc
je
lock
lret
mov
push
cld
add
cmp
pop
sahf
mov
mov
mov
adc
mov
icebp
sbb
sub
jmp
cmp
adc
or
pop
xor
sub
pop
jno
mov
loopne
cld
add
je
sti
popf
call
mov
lds
push
sbb
stos
push
rolb
mov
jmp
sahf
or
xchg
jbe
lds
decl
cmp
xor
and
mov
dec
jmp
dec
sub
add
cmpb
dec
dec
jne
mov
orb
ja
jge
and
aaa
add
dec
jmp
jmp
push
into
inc
pushf
sbb
or
out
into
pop
dec
jne
mov
add
sbbl
pop
add
lea
jmp
lahf
div
inc
lods
cmp
sarb
and
imul
pop
je
enter
push
cmp
inc
roll
cmp
and
cli
mov
jo
jo
imul
shr
aam
cmc
adcl
inc
test
dec
in
lods
ja
ret
add
dec
das
pop
push
movsl
cmp
jo
dec
xchg
cmc
mov
sub
pop
adc
dec
inc
cltd
push
add
pop
mov
ja
test
jge
test
cs
dec
push
je
jl
cmp
jge
sub
push
sbb
adc
push
outsb
sbb
cmp
jmp
push
test
push
inc
jmp
and
xor
mov
lret
aaa
sub
dec
jl
sub
mov
mov
cmp
fstpt
inc
sub
add
lea
inc
dec
movsb
add
cli
mov
xor
adc
inc
dec
jge
mov
adc
imul
add
gs
stos
shrl
cmp
mov
adc
lock
pop
addb
lock
clc
jmp
pushf
negb
mov
push
insb
dec
js
mov
inc
jb
xor
adc
loopne
cmp
pop
fdivl
adc
clc
bound
adc
xlat
push
fs
mov
and
sbb
push
sbbl
cmpsb
stos
push
and
or
rorb
arpl
cli
pop
cmp
fwait
dec
pop
adc
ret
mov
in
cmp
cmpsl
push
push
das
loopne
cs
loopne
mov
out
or
xor
cmpsl
push
cmp
cmp
scas
mov
sub
fdivs
in
adc
pop
cld
dec
sahf
xchg
pop
xor
jle
test
sub
or
cmp
pop
push
sub
push
ret
cmp
js
jbe
decl
das
data16
add
xor
pusha
inc
add
xchg
pop
add
add
sbb
jns
popf
fiaddl
add
cmp
pop
add
shr
xchg
je
mov
inc
mov
xchg
or
ss
add
and
xlat
pop
pushaw
and
mov
pop
adc
fdivrs
stc
and
or
imul
sbb
pop
dec
cmp
nop
pushf
lcall
ffree
xchg
sub
cmp
push
lods
add
dec
dec
pop
sub
lds
xchg
adc
popa
sub
sub
jae
sbb
mov
or
cmp
xchg
test
push
push
lods
fsubr
cmovnp
push
mov
push
lea
popa
lock
mov
xlat
js
push
movsb
aas
cmp
stos
jg
fldl
out
cmpsb
mov
pushl
add
cmp
je
cmp
je
mov
or
je
cmp
cmp
je
mov
shlb
dec
mov
inc
adc
or
adc
cmpsb
out
mov
aad
push
cs
add
mov
mov
dec
cs
adc
cmp
pop
jmp
cmp
add
cmpsb
cmp
rolb
cmp
dec
mov
and
aad
bound
ret
mov
call
push
inc
adcl
data16
out
ds
pop
jbe
xchg
pushf
test
push
mov
mov
test
int3
jg
dec
and
lret
in
mov
ja
push
addl
inc
adc
sbb
repz
mov
test
cmp
xor
lods
addb
push
dec
mov
jmp
mov
xor
scas
enter
scas
pop
sbb
cmp
push
pusha
xor
mov
lea
outsl
cld
scas
js
or
clc
push
push
add
sarl
add
xchg
rolb
mov
lock
cmp
xor
pop
cmp
pop
dec
or
pop
jo
push
jbe
push
pusha
lock
mov
xor
cs
or
jmp
and
clc
insb
lea
push
mov
xchg
xchg
push
inc
dec
orb
aas
mov
jmp
aas
add
sarl
xor
sbb
and
ds
test
test
fs
sbbb
sbb
mov
decl
or
and
mov
in
inc
push
nop
inc
cs
popa
jge
pushf
pop
sbb
nop
add
pop
dec
xor
inc
dec
jne
sub
jae
sub
jmp
cmpsl
std
adc
jo
push
sub
dec
xor
add
cmpsl
testb
es
ja
sti
add
add
inc
ljmp
mov
icebp
mov
jo
add
adc
cmp
fmul
or
lock
sub
jl
mov
filds
mov
mull
mov
lahf
lret
ficomps
fs
add
cli
adc
loope
sbb
pop
pop
ret
pop
xchg
inc
test
or
jo
pushl
cmp
aam
sbb
push
xor
in
dec
push
mov
lret
push
call
mov
faddl
mov
xlat
cltd
cmp
nop
inc
jns
incl
mov
sahf
cmp
ss
clc
movzbl
add
test
sbb
pop
adc
in
add
out
ss
cs
lock
andl
jbe
mov
cmpl
jne
push
push
in
sti
jle
out
cmpb
mov
andl
sub
pop
enter
fiadds
in
jmp
push
lcall
sub
mov
cmp
jge
mov
cltd
sub
mov
adc
mov
add
push
jl
xchg
test
rorl
mov
mov
sub
inc
nop
cmp
dec
adc
inc
in
inc
add
sbb
shrl
xlat
mov
or
add
mov
sbb
out
add
or
dec
lods
mov
inc
xor
insb
outsb
lea
shl
mov
mov
jne
aad
test
in
rolb
inc
sub
inc
scas
pop
xor
inc
cld
xchg
jne
es
or
lcall
mov
cld
movsb
sti
add
xchg
out
inc
xchg
mov
test
test
fcomps
jg
push
mov
incl
das
pop
pop
out
out
pop
bound
sub
enter
sbb
or
std
jmp
push
ja
dec
je
xchg
hlt
aaa
inc
call
clc
fcmovu
cmpl
xchg
sbb
sub
fdivs
test
sub
in
push
sbb
push
xchg
xor
xor
fiaddl
or
jbe
pop
inc
mov
and
mov
movsb
cmp
or
sub
sbb
test
mov
jmp
lret
mov
sti
mov
pop
and
je
cmpsl
push
xchg
lea
aam
xor
mov
add
or
sub
pop
jne
sbb
inc
add
insl
jbe
pusha
mov
loop
inc
cwtl
push
xlat
sub
pusha
mov
cmp
mov
push
test
and
fdivr
outsb
dec
outsb
in
rorl
clc
push
sub
add
mov
cmpb
inc
vmread
pop
fsubl
mov
sbb
add
or
xor
inc
das
mov
orb
sub
mov
inc
add
jmp
fwait
and
in
sub
xlat
les
pop
xchg
ret
inc
cmp
inc
inc
lret
insb
mov
jne
stos
cwtl
rcl
mov
cmp
andl
decl
in
xor
cwtl
lea
sbb
mov
jg
movb
ret
dec
push
push
mov
inc
mov
xor
in
roll
lods
inc
and
jg
pusha
imul
gs
xor
cs
insb
cmova
out
test
decl
addr16
popa
je
dec
popa
insl
gs
daa
scas
fmul
push
outsl
mov
fucomip
outsl
dec
sarl
pop
movb
into
push
in
adc
dec
or
cmc
sub
mov
and
test
and
mov
jne
sarb
push
or
pop
xor
mov
into
pusha
adcl
add
iret
cmp
add
sub
push
repnz
inc
push
push
sub
movl
cmp
rcrl
fdivrl
add
js
push
xor
cmpb
jmp
test
or
push
jmp
jnp
xchg
pop
repnz
jmp
stos
in
in
fdivs
mov
cmp
jne
adc
movsl
incl
mul
sub
pop
jo
jae
ret
and
rol
leave
and
jb
je
cs
mov
ja
cmp
jae
ret
ret
out
iret
push
outsl
data16
popa
jb
pop
test
in
cmp
arpl
gs
aaa
mov
mov
inc
or
add
push
sub
loopne
pop
cmpl
mov
mov
call
clc
cmp
or
jne
pop
fstl
jp
outsl
jg
shrd
jle
addr16
mov
jbe
out
add
mov
dec
inc
add
mov
jmp
add
jne
das
push
cmp
gs
push
adc
jmp
adc
ljmp
inc
bound
pop
mov
imul
pop
outsl
aas
je
lock
hlt
fildll
into
daa
dec
jae
xchg
test
loop
add
or
push
dec
dec
sub
gs
push
cmpps
cmp
pop
mov
adc
insb
popa
sub
sbb
ds
xor
dec
and
cmp
test
cltd
jmp
das
sub
dec
and
cmp
cmp
jmp
and
mov
scas
sub
mov
xchg
js
addb
sub
jbe
mov
mov
mov
out
xor
mov
push
inc
test
sub
fidivs
xchg
push
push
mov
adc
pop
pop
sbb
mov
add
pop
ret
sbb
and
lret
lock
enter
test
sbb
and
xchg
cld
sub
adc
icebp
xchg
and
and
and
adc
or
dec
mov
call
fildll
mov
or
sbb
push
decl
push
push
mov
push
shlb
pop
lock
xchg
lcall
mov
adc
inc
cmp
ja
mov
inc
jmp
cmp
cmp
lea
cmp
ja
fcmovb
jmp
or
jg
mul
mov
adc
sbb
and
lret
leave
mov
jmp
pusha
add
xor
dec
jnp
pusha
rolb
rcrl
add
mov
add
dec
movb
push
push
push
pop
and
sbb
or
pop
add
cmp
lea
ret
adc
lock
jns
push
bound
sbb
push
leave
rcl
pop
jp
out
cld
test
clc
or
mov
inc
test
mov
or
jae
and
je
incb
cmpl
mov
sti
orb
mov
cmp
cwtl
and
mov
rorl
mov
dec
dec
cld
mov
enter
inc
inc
outsb
lock
pusha
lcall
adc
loop
sbb
movl
xlat
sbb
inc
mov
ret
xor
sbbl
cli
xorb
sub
dec
lods
sbb
or
jb
inc
mov
test
scas
popf
pushf
ljmp
mov
test
push
fcoms
xor
pop
adc
lea
lahf
push
ficomps
xor
pushf
inc
push
and
aaa
pushf
divb
dec
xor
mov
dec
outsl
jmp
adc
push
repz
dec
repnz
clc
daa
push
dec
cmp
adc
test
pusha
push
sbb
and
pop
sbb
inc
aaa
and
inc
dec
adc
inc
lods
inc
cmp
test
in
and
push
outsl
pop
fistps
and
repnz
dec
out
add
dec
fcoml
in
cmp
jge
add
hlt
scas
xchg
jae
add
inc
xchg
push
or
subb
adcb
aam
imul
jg
add
stos
push
lea
push
push
xchg
jle
mov
dec
mov
pop
sbb
pusha
dec
or
cli
push
lds
bound
sbb
adc
add
lea
mov
sbb
je
adc
fidivl
or
mov
push
mul
clc
subl
loope
hlt
add
loope
jl
jl
sbb
pop
sub
inc
xor
pop
add
and
push
sahf
cld
jp
cmp
adc
sbb
in
mov
adc
add
cmp
and
add
sub
mov
jnp
and
lahf
and
mov
ret
adc
clc
lods
xor
and
unpcklps
jno
jmp
fcoms
test
push
fdivrl
lahf
mov
inc
out
xor
and
push
inc
insb
lods
ds
mov
or
imul
xor
daa
dec
dec
cwtl
push
mov
push
test
sub
scas
rcrb
jecxz
mov
in
mov
push
sbb
and
ljmp
es
int3
lea
je
dec
adc
or
scas
std
and
pop
mov
or
or
inc
pop
add
test
jne
mov
adc
nop
add
mov
mov
inc
test
dec
nop
mov
mov
push
push
push
mov
mov
cmp
pusha
mov
sti
pushf
push
inc
pop
pop
pushl
inc
xor
test
push
xchg
push
je
mov
les
sbbb
pop
jbe
cmp
push
inc
loopne
decb
mov
sahf
loope
sub
inc
mov
mov
mov
fnstcw
add
push
or
leave
dec
jns,pn
xor
dec
sbb
cs
add
dec
sbb
es
add
xor
fbstp
pop
or
push
gs
push
gs
jb
insl
sar
mov
adc
inc
imul
inc
push
lret
jg
inc
outsl
arpl
inc
gs
jne
je
dec
outsl
je
imul
push
mov
gs
outsl
inc
arpl
or
adc
ret
or
jb
push
fisubl
xor
outsl
insl
bound
outsl
js
imul
incl
outsl
ja
rclb
andps
outsb
dec
inc
dec
push
add
je
dec
add
leave
xchg
xchg
fldt
sub
fs
leave
leave
leave
pusha
pop
pop
push
leave
leave
leave
leave
push
dec
dec
inc
leave
leave
leave
leave
inc
cmp
xor
leave
leave
leave
xor
and
leave
leave
leave
and
adc
leave
leave
leave
adc
add
in
enter
clc
hlt
in
in
lock
call
in
aam
in
in
int3
enter
in
sarb
mov
test
in
in
mov
in
in
mov
in
jl
je
in
in
insb
push
jb
and
and
jb
and
and
jb
jb
and
and
dec
dec
or
and
dec
dec
outsb
add
cmovl
dec
dec
dec
dec
inc
cmp
xor
dec
dec
dec
xor
and
dec
dec
dec
and
adc
dec
dec
dec
adc
add
daa
inc
dec
add
cld
clc
hlt
daa
daa
daa
daa
lock
call
daa
loopne
fcom
daa
daa
daa
daa
ror
enter
daa
daa
sarb
mov
test
daa
daa
daa
daa
mov
daa
daa
daa
nop
mov
daa
cmpb
xchg
xchg
xchg
mov
xchg
xchg
xchg
mov
xchg
xchg
xchg
cwtl
xchg
nop
mov
test
xchg
js
jo
xchg
xchg
xchg
xchg
push
xchg
xchg
xchg
pop
push
push
dec
xchg
xchg
xchg
xchg
dec
inc
inc
cmp
xchg
xchg
xchg
cmp
sub
xchg
xchg
xchg
sub
sbb
xchg
xchg
xchg
sbb
or
xchg
xchg
xchg
or
and
leave
clc
hlt
lock
leave
leave
leave
leave
call
fcmovne
leave
fcom
sarb
xchg
enter
xchg
xchg
xchg
xchg
mov
xchg
xchg
xchg
test
mov
xchg
cwtl
xchg
nop
jl
mov
pop
js
jo
daa
daa
daa
daa
push
daa
daa
daa
pop
push
push
dec
daa
daa
daa
daa
dec
inc
inc
cmp
daa
daa
daa
cmp
sub
daa
daa
daa
sub
sbb
daa
daa
daa
sbb
or
daa
daa
daa
or
and
xchg
xchg
xchg
cld
clc
hlt
lock
xchg
xchg
xchg
in
call
xchg
xchg
aam
xchg
xchg
xchg
xchg
int3
enter
xchg
xchg
xchg
mov
xchg
xchg
xchg
lods
test
mov
pushf
cwtl
xchg
nop
xchg
xchg
xchg
xchg
mov
leave
adc
leave
leave
leave
leave
and
and
mov
mov
add
shl
or
ret
xchg
sbb
mov
xchg
ret
nop
sahf
shlb
cmp
add
push
mov
ficoms
mov
or
les
mov
push
outsl
insb
ret
movsb
dec
push
in
outsl
add
add
inc
and
mov
outsb
insl
aam
push
mov
and
xor
adc
push
sub
pop
inc
ret
and
pop
pop
filds
cld
mov
dec
repz
or
adc
repz
sbb
and
leave
loope
aas
push
push
push
popf
sub
jae
dec
stos
xchg
stos
pop
ret
add
add
and
push
fptan
pop
in
or
add
or
insb
cmp
fcoms
pusha
pop
test
add
pop
rcrb
pop
fsubr
adc
sbb
push
shrb
clc
sarb
pop
repnz
aas
inc
rol
jae
pop
or
inc
push
xorb
fwait
cmpb
dec
popa
gs
inc
and
push
dec
inc
inc
dec
add
aad
daa
outsl
jb
push
and
dec
testl
push
push
mov
push
push
pop
sub
push
inc
dec
pop
dec
dec
dec
inc
push
das
xchg
dec
repnz
pop
lds
sub
int3
dec
fsubl
daa
out
movsb
lock
icebp
repnz
daa
daa
daa
hlt
cmc
div
daa
daa
daa
daa
clc
stc
cli
sti
daa
daa
daa
daa
cld
std
jmp
daa
daa
daa
loopne
loop
daa
daa
daa
daa
in
out
iret
jnp
es
pushf
push
jmp
jns
ljmp
jb
out
out
rcl
jb
jb
rcl
aam
jb
jb
xlat
fcomp
jb
jb
fcmovu
jb
jb
rol
jb
jb
ret
lds
jb
mov
leave
jb
jb
lret
int
jb
jb
iret
mov
jb
jb
mov
mov
jb
jb
mov
mov
jb
mov
jb
mov
jb
jb
mov
jb
cmpsb
cmpsl
test
xchg
inc
movsl
jae
aas
aad
nop
pushf
fs
fdivrl
je
js
xor
add
out
and
mov
mov
add
or
arpl
je
outsl
outsb
pushf
add
ds
call
stos
fcom
push
inc
dec
gs
jo
nop
mov
xchg
sbb
dec
clc
arpl
add
aas
or
dec
jne
dec
dec
gs
outsl
jb
mov
add
outsl
idiv
dec
add
or
outsb
mov
or
and
lods
lods
lcall
cs
xchg
dec
ss
xchg
adc
mov
sbb
or
sbb
jb
cmp
mov
in
jg
or
imul
pop
data16
xor
ds
xchg
mov
popa
outsb
gs
insb
in
xor
insb
or
dec
jbe
fisubs
pop
outsl
ja
mov
xor
pusha
mov
repnz
sub
addr16
ds
data16
out
sub
jbe
imul
jb
js
mov
test
insl
jle
gs
rcrb
nop
mov
inc
mov
sbb
xlat
push
mov
andnps
mov
adc
and
addb
movsbl
imul
mov
fmull
lea
popa
mov
repnz
jae
fildll
ds
jo
add
inc
inc
dec
rcl
inc
rolb
mov
xchg
xchg
clc
add
add
inc
cwtl
jae
push
dec
pusha
addb
hlt
dec
shll
push
jb
xchg
add
lock
insb
xchg
push
inc
xor
ds
push
cs
cmp
add
test
xchg
mov
popa
fidivs
inc
xlat
imul
push
popa
dec
mov
or
pop
sub
and
pop
mov
icebp
push
mov
popa
fsubl
xchg
mov
mov
push
push
bound
orb
insb
sbb
int3
ds
retw
in
jo
je
pop
add
mov
stos
jb
sbb
push
data16
int3
inc
fdivl
add
popa
gs
inc
ss
insb
in
add
aaa
xor
add
out
xchg
dec
invd
jle
and
insb
inc
insb
jae
insl
or
fbld
and
insl
daa
fisubl
xchg
cmp
adc
jb
popa
mov
mov
push
int3
add
cmp
jb
test
xor
movsb
sarl
and
aam
iret
jnp
aam
mov
mov
iret
repz
movsl
lods
xchg
adc
sbb
jl
pushf
fists
jno
cmp
ja
adc
in
lock
pop
and
testl
push
dec
rclb
lds
push
mov
or
push
fadd
lods
outsb
arpl
cmp
fadds
in
ret
adc
repz
mov
xor
add
iret
mov
mov
push
lret
mov
mov
and
lea
fwait
outsl
pop
sbb
pop
lahf
adc
leave
mov
ffreep
loopne
adc
outsl
addr16
cmp
dec
call
pop
add
adc
push
loop
push
mov
cmp
push
cmp
ja
std
add
add
rorb
jbe,pt
sub
test
lahf
inc
lcall
jecxz
xor
inc
rorb
out
mov
cmp
jbe
shl
mov
cmpsb
je
movzbl
push
push
call
dec
scas
mov
mov
add
or
cmpsl
jne
jp
add
das
pop
mov
mov
das
dec
pusha
pop
mov
or
xchg
fisubrl
push
out
and
sti
je
loopne
push
add
pop
out
sbb
pop
lcall
mov
pusha
xchg
sbb
notl
dec
loope
push
sysenter
and
adc
imul
cmc
push
inc
ss
cs
add
outsl
add
icebp
mov
call
push
push
popa
push
push
adc
pop
mov
insl
jg
ljmp
sbb
mov
mov
jl
cmpb
jbe
adc
or
lea
dec
sub
clc
push
sub
inc
jb
outsb
add
jno
cld
aas
es
inc
add
icebp
and
fwait
idiv
dec
mov
add
sub
jb
sub
je
jae
cmp
jl
inc
mov
lods
cltd
testb
rolb
push
stc
pop
or
pusha
or
jae
inc
dec
jne
lcall
leave
jne
sarb
mov
call
movsb
jno
mov
inc
dec
mov
ret
mov
rorb
inc
jmp
cmp
xor
add
ret
push
aam
mov
jbe
add
sti
call
mov
sub
jmp
mov
dec
jne
push
mov
sub
xor
push
outsb
or
push
ficomps
mov
and
xchg
sbbb
and
jo
pushl
mov
push
aam
cs
push
pop
push
jb
sub
dec
inc
sbb
xor
push
cmpsb
mov
sbb
shlb
or
movsl
mov
adc
pop
mov
popa
lahf
push
in
andl
mov
and
fistps
ret
add
add
sub
add
rol
jecxz
dec
fprem
fdivr
mov
xor
lock
add
sub
rcrl
loope
and
ffree
ffree
ffree
fldl
andl
int3
aam
pop
add
aad
fnstsw
xchg
lcall
adc
pop
aaa
cmp
sbb
mov
inc
push
push
mov
adc
push
xlat
lods
inc
mov
jl
aam
lock
pop
mov
les
xor
sub
outsb
mov
sbb
aam
imul
pop
daa
sbb
cmpsl
mov
cwtl
pop
mov
jmp
jmp
fsubrs
mov
inc
fcomp
mov
mov
cmp
dec
mov
jmp
mov
add
insl
add
sub
shl
outsl
icebp
xchg
inc
popa
hlt
xchg
xchg
loopne
push
and
pop
repnz
movb
repnz
jl
inc
jne
fldcw
adc
mov
fcomps
jecxz
push
pop
and
loopne
mov
add
mov
nop
adc
insl
lock
adc
les
xchg
add
dec
ss
push
std
cmp
dec
pop
je
pop
addr16
xchg
scas
int3
and
mov
js
inc
orl
fistl
xor
sbb
iret
jl
icebp
bound
pop
mov
jp
loop
adc
jmp
sub
mov
and
xlat
rorb
icebp
dec
sub
loope
out
jne
push
or
popa
je
or
mov
lahf
add
les
mov
fiaddl
push
loop
sti
add
out
xchg
cmp
and
add
jnp
sbb
add
pop
dec
and
pop
test
pop
jle
xor
push
test
aam
mov
in
and
cmp
and
cmp
push
or
sub
add
clc
or
repz
cmp
ja
mov
and
mov
push
push
adc
sub
mov
pop
push
push
mov
jge
jns
das
xor
shlb
movsl
popf
or
lcall
dec
out
jbe
pushf
push
push
lret
cmpsb
xor
xchg
loopne
mov
add
int3
sbb
push
add
mov
mov
sbb
sub
push
mov
jge
xor
add
sub
mov
cmp
mov
mov
test
push
mov
pushf
cmp
je
adc
jne
cmpsl
lods
lods
and
mov
cmp
hlt
and
pop
dec
popa
pop
movsl
cmc
int
ja
inc
jle
pop
andl
test
clc
bound
sbb
test
push
add
mov
dec
add
decb
add
add
push
lcall
or
fwait
and
repnz
jge
shrb
mov
data16
mov
dec
jne
add
scas
test
push
dec
push
jg
test
out
jnp
cli
pushf
shll
mov
sub
flds
add
cmp
cld
push
dec
pop
cmp
or
in
push
imul
push
lret
xchg
les
adc
jno
sbb
daa
movsb
rcl
dec
lcall
or
push
add
jo
push
mov
imull
enter
and
adc
les
inc
ss
or
and
mov
lock
adc
fldt
mov
adc
enter
das
lea
daa
subb
mov
add
pop
lods
dec
add
test
rorl
clc
std
xor
cmpsl
movsb
pop
pop
ret
or
lret
dec
mov
inc
test
inc
sub
pop
lret
add
pop
fld1
pop
pusha
inc
mov
lcall
outsl
add
adc
or
out
dec
iret
addl
arpl
pop
or
dec
add
xor
xor
repz
mov
mov
or
xchg
lock
inc
je
dec
cmp
aaa
push
pop
cmp
cli
into
and
imul
and
fldt
addb
mov
das
rcr
add
mov
stc
mov
sub
or
sar
add
adc
dec
mov
cmp
jne
rclb
orl
push
hlt
inc
inc
loopne
lock
pop
mov
fcomp
pop
dec
je
mov
mov
pop
sub
jbe
sbb
pop
xchg
add
pop
jl
lods
in
adc
mov
shll
loop
cmp
fisttps
xchg
rorb
popa
pusha
subl
stos
pop
clc
cs
aaa
inc
test
loope
pop
sbb
xchg
push
cmpsb
jg
jnp
mov
jle
cwtl
mov
ficoms
jl
adc
or
xor
or
jbe
mov
mov
sub
jne
fadds
pop
xchg
movb
les
and
sub
and
and
push
push
lahf
dec
pop
in
pusha
cmpl
je
mov
rcrl
add
add
or
add
xchg
push
je
inc
imul
cmpsb
add
adc
inc
mov
cmc
and
rorb
and
repz
test
les
and
sub
fistpll
decb
sub
lods
fdivr
fidivrl
jge
cmp
jne
cs
and
lods
jmp
adc
mov
aaa
cmp
sub
sub
mov
call
jge
pop
mov
jae
pop
outsl
scas
xor
cmpb
or
lret
roll
movsb
lock
fadds
rep
sbb
cmpl
ret
js
xor
mov
dec
fldt
jmp
sub
jb
push
addr16
cmp
ja
imul
mov
add
and
xor
shrb
pop
dec
mov
or
jg
decl
cld
or
jl
lods
jg
mov
or
shrl
push
pop
pop
jne
lea
push
jmp
lcall
mov
push
imul
jg
push
das
push
pslld
xor
das
pop
enter
es
rolb
ret
jae
sbb
xchg
jbe
aam
pop
fsubrs
shl
cld
lods
aaa
gs
jnp
lea
and
sub
xor
push
repz
xor
and
stos
sbb
or
imul
in
movsl
outsb
adc
xor
pushl
and
cmp
jne
loopne
ret
sbb
outsl
nop
push
jbe
mov
aad
or
cltd
jge
jmp
xor
inc
inc
hlt
lods
and
jmp
mov
push
add
aas
and
stc
cld
call
pop
js
mov
add
js
pushf
cmp
ja
pushf
cltd
add
scas
jmp
push
shlb
jecxz
dec
mov
add
int
mov
jge
loopne
inc
lods
out
push
mov
push
xor
cli
outsb
mov
inc
insl
mov
mov
or
je
mov
inc
je
mov
dec
je
mov
jl
mov
mov
ret
pop
subb
mov
jne
xchg
and
jmp
fdivrl
mov
mov
lods
push
notb
dec
and
cmpsl
aaa
mov
xor
and
pop
push
pop
lahf
ds
or
iret
ja
xchg
sbb
sub
nop
xchg
ret
lock
push
call
lcall
repnz
xor
mov
icebp
jb
mov
popf
mov
xchg
call
adc
sarl
test
push
incb
cmp
jecxz
test
fdivs
pop
fmuls
loopne
mov
clc
jbe
testb
lea
sbb
leave
jle
movsl
jg
xchg
in
sti
xor
clc
jl
jmp
add
test
adc
add
xchg
jne
iret
std
fnstcw
xlat
repz
dec
mov
or
pop
pop
push
xor
lea
push
fcomip
mov
mov
neg
jmp
or
or
dec
or
data16
test
ljmp
mov
dec
pusha
in
or
jg
dec
mov
stos
cmp
jne
pop
pop
adc
xor
mov
sub
jb
lret
pusha
pop
sbb
insb
mov
adc
mov
adc
xchg
jge
jno
adc
fwait
jle
repz
xor
mov
lods
daa
add
add
negb
jmp
test
cld
movzwl
cmp
je
sbb
mov
fwait
adcb
mov
mov
add
sub
insl
in
fildll
or
or
mov
add
jl
or
add
mov
cld
cld
jmp
jg
fisubs
mov
inc
dec
lods
or
xor
jge
push
jo
ret
std
mov
aam
push
sub
jg
cmp
jl
pop
sbb
mov
cmp
sbb
stos
jmp
addl
mov
stos
loop
movlps
pop
pop
inc
xchg
push
pop
pop
clc
dec
les
push
stos
frstor
or
dec
sbb
rolb
jbe
sub
add
leave
mov
cmp
mov
push
insl
xor
cmpsb
jl
cli
adc
mov
lock
add
je
mov
lahf
jge
enter
repz
inc
test
jne
sbb
mov
push
cli
inc
in
stos
xor
call
push
sti
add
je
inc
jne
pop
cmp
pop
test
test
orl
sbb
mov
insb
jg
int3
mov
add
lea
mov
dec
jle
inc
je
inc
cmp
xlat
adc
sbb
sbb
add
jne
repnz
int3
loop
mov
test
add
add
and
and
adc
and
in
jbe
sub
sub
xor
inc
xlat
mov
sbb
and
sub
jbe
cmp
fs
xor
es
xor
sub
sub
cmpsl
loopne
test
jne
call
dec
je
test
mov
mov
adc
or
inc
push
cmc
mov
or
aas
ret
mov
movb
test
std
pop
mov
loopne
adc
pop
cmp
out
fabs
push
ljmp
frndint
rcr
scas
or
fstps
std
fcomi
fwait
mov
testb
je
fidivl
jne
lea
fcomip
out
add
inc
sub
nop
shr
and
add
cld
mov
loope
cmp
jge
jns
outsl
cmpsl
aaa
jb
mov
cmp
pushf
or
out
daa
cmpb
jb
movb
js
decb
and
int
mov
pop
data16
pusha
xor
enter
cmp
pusha
rcr
inc
xor
push
or
shr
mov
push
out
jb
clc
xor
fs
adc
sbb
push
pop
adcl
or
je
test
neg
sbb
das
cmp
or
or
jl
add
pop
mov
push
inc
sub
mov
loopne
jae
dec
add
outsl
push
inc
loopne
push
in
insl
or
test
int
pop
ret
fidivl
test
sbb
push
push
sub
pushf
and
jne
and
sub
cmp
pop
in
fsubl
inc
or
ljmp
enter
push
add
divl
pop
jmp
sbb
push
je
mov
iret
jmp
js
inc
pop
pop
rorb
xchg
inc
ret
outsl
jns
fwait
es
das
icebp
icebp
mov
out
cmpsb
xchg
ds
lods
or
mov
cmc
sub
xchg
outsl
aaa
mov
or
cmp
icebp
je
push
and
cmp
jmp
sti
inc
jne
inc
push
sub
add
jg
jne
mov
mov
add
mov
mov
adc
aas
jmp
fstpt
or
test
or
test
insl
inc
jo
add
add
and
mov
sub
add
jae
fimull
or
add
jmp
aaa
mov
idiv
adc
or
push
inc
imul
mov
cmp
aaa
add
sub
or
mov
push
and
sub
out
add
push
pop
fbld
pop
mov
aaa
test
in
std
mov
lds
loopne
cwtl
iret
sbb
loopne
imul
sub
fstpl
fwait
dec
es
add
push
flds
fcmovnb
out
out
fadds
aaa
xor
ret
or
mov
push
test
mov
adc
mov
nop
adc
push
adc
adc
mov
or
add
out
andb
dec
or
cmp
inc
stc
inc
aam
movsl
jl
jae
test
aad
mov
add
lret
dec
retw
cmp
sub
add
addb
add
pop
std
push
lret
movsl
xor
shll
insb
std
pushf
pushl
xor
sub
cmp
mov
lea
mov
lret
addr16
roll
add
iret
and
mulb
mov
push
enter
loopne
imull
popf
sbb
adc
insb
mov
outsl
jmp
sti
testb
nop
add
loopne
add
add
add
sbb
push
inc
in
insl
mov
add
add
outsl
pop
sbb
incb
jb
mov
ja
jge
pop
sarl
or
ja
sti
jno
aad
sti
pop
enter
ja
sbb
adc
into
or
sub
inc
dec
jne
xor
dec
mov
test
pop
dec
cltd
idiv
imul
mov
subl
cs
stc
add
pop
ret
or
push
andl
and
movsb
dec
in
enter
shl
dec
call
mov
je
clc
add
add
sbb
pop
outsb
mov
inc
pop
inc
fstpt
mov
dec
es
add
jl
addl
xchg
adc
inc
and
jp
lds
xchg
lods
mov
pop
sbb
decl
cmpl
xor
push
fcoms
lcall
add
add
lcall
dec
pop
or
lds
jae
inc
push
xchg
push
in
push
jle
es
enter
dec
mov
adc
pushf
cmp
jb
sbb
movsb
fwait
sub
fcoml
xor
inc
push
call
shll
push
push
cmpsb
push
sbb
movsl
mov
mov
popa
mov
cmp
adc
stc
xchg
inc
or
or
or
or
add
and
mov
or
cltd
cld
insb
rcrl
fiaddl
iret
and
and
xchg
jnp
add
mov
jp
sti
pop
xor
mov
mov
shl
in
fwait
dec
push
jle
insb
in
adc
or
call
add
inc
xchg
jbe
js
push
fnstcw
std
cmp
test
aas
clc
imul
cmp
je
sbb
inc
sub
add
sub
js
add
out
xlat
push
cmp
adc
add
push
lea
or
lock
repnz
jb
fbstp
push
in
jge
div
pop
cs
stc
add
or
or
adc
xchg
lods
adc
je
movsl
or
inc
xor
mov
ljmp
pop
adc
sub
jle
call
or
call
push
inc
fs
in
fsubs
and
push
add
mov
xor
inc
lods
adc
and
or
mov
adc
aaa
mov
outsb
int3
pusha
cmpl
sub
adc
lcall
jb
push
fstps
cmp
js
ret
test
movsb
xlat
dec
jp
xor
in
test
ret
ss
xchg
push
mov
sbb
pop
nop
arpl
in
out
popa
repnz
addr16
xlat
in
and
enter
or
popa
and
leave
out
repnz
jg
pusha
mov
and
or
dec
cs
in
je
jle
or
jmp
jne
dec
cmpb
jne
push
or
jo
mov
dec
lret
pop
shrl
adc
lock
jns
add
add
add
aam
aam
test
mov
cmp
sbb
xchg
fidivrl
sub
xor
push
inc
mov
loop
leave
push
sub
incl
lods
xlat
js
pusha
push
jecxz
js
cmpsl
leave
and
and
jne
stc
bt
jmp
lret
aas
and
sbb
pop
and
pushf
rorl
cwtl
test
add
hlt
cmpsb
inc
cmp
adc
inc
dec
jne
adc
loopne
loop
dec
dec
mov
mov
lcall
ja
les
xchg
sbb
and
or
vmwrite
push
or
inc
pop
or
or
sbb
push
pop
add
or
or
cmp
or
int
jns
xchg
adc
sahf
bound
iret
jnp
sub
mov
or
out
or
or
pop
or
pop
and
dec
mov
fyl2x
mov
mov
xchg
pop
bound
mov
dec
andb
pushw
and
pop
test
sub
js
mov
or
scas
sbb
into
sbb
xor
arpl
or
sub
mov
jbe
xorb
add
and
jg
aad
push
lahf
adc
add
pop
push
jb
xchg
add
xor
fbld
xor
jl
sub
dec
lods
scas
dec
inc
cmp
ss
adc
stos
adc
inc
mov
mov
dec
jg
js
out
or
or
push
jmp
fiaddl
or
je
or
je
jmp
nop
mov
push
cmc
push
jp
xlat
mov
sub
imul
aas
cmp
add
sbb
pop
addr16
dec
in
xor
mov
pushl
cmp
mov
add
add
cmp
sti
mov
or
jmp
or
or
or
xor
or
mov
orb
test
arpl
add
and
pushf
mov
lret
add
in
xchg
sub
out
pop
jmp
push
ljmp
xchg
mov
inc
aas
push
lds
pop
addl
rcll
sarl
add
ja
sub
xor
adc
mov
mov
or
add
xor
scas
cwtl
ss
sbbl
cwtl
add
add
add
and
or
push
mov
adcl
call
or
or
in
sarb
push
scas
mov
outsb
enter
cmp
push
pop
rcll
or
dec
nop
or
gs
mov
leave
jmp
or
and
inc
rorl
jb
aam
cmpb
je
dec
or
ror
mov
sub
jp
popa
fwait
inc
push
push
jmp
sbb
dec
push
dec
test
fisubl
mov
cmp
xchg
xchg
loope
or
addb
in
test
dec
das
push
dec
add
mov
xlat
push
dec
adc
in
mov
mov
aaa
pop
test
movntps
or
push
ret
ja
or
pop
xchg
sbb
ljmp
ljmp
jno
in
addr16
xor
dec
sub
hlt
sub
mov
add
jmp
je
mov
mov
hlt
adc
mov
dec
pop
sbb
or
dec
jne
js
mov
xor
xchg
add
adc
xor
dec
pusha
push
pop
jbe
xor
ret
lods
hlt
fildl
add
sub
jae
jmp
xor
lahf
lods
int
sbb
popf
xchg
ret
add
mov
pop
and
out
mov
fsubrp
testl
and
cltd
lods
xor
nop
inc
lods
xchg
sub
orb
push
movsl
dec
mov
pusha
loope
push
push
mov
xchg
mov
js
cld
inc
sub
or
dec
mov
popa
mov
pop
cmpsb
jo
xor
pop
in
cmp
add
pop
pushf
divl
mov
jmp
pop
sar
sub
je
dec
je
sub
sub
je
xchg
mov
add
sbb
push
push
and
push
inc
ss
popa
mov
jle
fadd
pushl
add
cmpsl
sti
pusha
add
mov
mov
jg
jl
pop
pop
xor
jle
dec
push
push
mov
sarl
mov
or
jnp
push
sub
pop
dec
loopne
adc
mov
add
add
test
or
jne
push
mov
stos
inc
adc
cmp
push
shr
jg
popf
ror
adc
jg
cltd
xor
sub
add
add
sti
pop
cli
stc
imul
add
js
add
adc
pop
cld
jmp
mov
cmp
dec
cld
gs
push
shll
loopne
push
rorl
push
and
or
inc
or
subb
push
jle
hlt
mov
inc
adc
mov
aad
ds
xor
xlat
inc
cmp
dec
and
cmp
in
mov
setp
popa
movsl
cmp
xor
mov
xchg
cmp
pushf
test
stos
inc
jle
outsb
and
bnd
test
ljmp
into
add
lock
mov
xchg
sub
jb
and
cmp
push
adc
lock
in
call
je
cmp
arpl
ss
lcall
hlt
jmp
bound
lock
push
add
mov
repnz
mov
jge
add
fbstp
cs
push
fstps
mov
dec
loop
aaa
add
xorb
jle
and
fs
jne
mov
add
or
ds
and
daa
or
xor
xor
pop
dec
mov
addr16
cmpsb
aaa
jl
cmp
fwait
inc
icebp
imul
jmp
out
and
cmpb
mov
cmp
jmp
xlat
sub
fildl
xchg
not
neg
fsubrl
fbstp
fcomps
fsubrs
xor
xchg
repnz
out
addb
dec
mov
testl
sahf
pop
cwtl
icebp
xchg
sbb
lods
stc
jno
ret
mov
add
test
or
push
xchg
push
cltd
xor
and
lods
lods
lods
or
and
fucomi
sub
jo
sbb
cmp
stos
sub
pop
and
insl
push
push
xlat
and
add
xor
cmp
or
push
xchg
dec
cmpsl
nop
cmpsl
mov
ret
orl
add
pop
xor
inc
or
add
cltd
in
sbb
or
loopne
test
xor
fcmovne
ret
and
or
loope,pt
cmp
add
je
mov
sub
daa
js
cmp
push
add
pop
sub
or
push
or
loopne
aam
mov
jmp
or
repnz
add
mov
xchg
into
hlt
push
dec
pop
icebp
sbb
or
inc
push
or
cmp
and
mov
jno
add
cmp
fwait
cmp
dec
ficomps
cmp
ret
jne
dec
outsl
jmp
fst
out
mov
or
pop
fwait
jmp
sbb
push
mov
add
dec
push
mov
push
push
mov
lods
jmp
mov
push
mov
sub
jb
or
dec
cmp
lret
xchg
and
dec
xlat
xchg
fwait
stc
pop
or
fcoml
xor
enter
jmp
and
loop
xor
das
int3
cwtl
clc
or
add
ret
addl
call
sbb
lods
xor
movsl
mov
or
dec
adcb
dec
call
sbbl
add
mov
sbb
popf
jp
mov
or
push
push
mov
shr
ret
lea
dec
lret
lock
xchg
out
and
inc
lock
cmp
inc
push
rolb
idiv
or
add
and
mov
xchg
push
push
pop
cmp
xor
es
loope
dec
call
ret
push
sub
call
fstpt
je
cmpsl
repnz
das
xor
shlb
stos
push
jl
je
xchg
cmp
add
testl
adc
js
in
adc
das
mov
jno
cmp
sub
xchg
fstpl
mov
pop
mov
push
test
cld
jnp
add
in
mov
adc
lahf
jo
out
inc
lods
fistpll
nop
cmp
subl
addl
mov
ja
fstl
mov
pop
pop
repnz
or
push
nop
sub
inc
jb
cmpsb
fsubs
inc
out
outsl
xor
xchg
or
jne
sbbb
mov
and
and
cmpsb
cwtl
mov
add
add
sub
lcall
cmpsl
out
mov
jmp
mov
sub
je
sub
je
scas
xor
sbb
les
call
cmpsb
xor
lods
mov
cs
sbb
pop
lea
filds
icebp
pop
lock
jbe
lods
add
jg
mov
pop
mov
cmovp
je
test
jmp
dec
lods
add
das
and
add
push
fwait
cmovle
jmp
int
add
push
xor
dec
aas
xchg
dec
in
jle
faddl
push
add
cs
xor
in
add
cs
addr16
loopne
pop
add
add
sub
jo
mov
mov
lret
pop
and
orb
cmp
test
mov
jmp
jl
mov
data16
jne
lahf
ljmp
rorb
push
and
pop
pop
inc
lods
aaa
andl
or
jmp
sub
inc
jle
mov
pop
push
inc
stos
push
push
inc
push
out
pop
test
push
bound
push
test
out
bswap
jl
pop
sbb
call
or
or
and
cmp
sahf
jge
test
xchg
std
inc
pop
cmpb
je
jae
mov
ljmp
add
and
xchg
lea
add
mov
out
or
test
lods
xchg
push
mov
push
mov
xchg
dec
sbb
or
push
enter
jnp
xor
lea
sub
subb
xchg
add
push
insb
pushf
mov
mov
mov
call
mov
std
jns
push
outsl
adc
push
or
out
mov
xchg
or
ds
and
cmp
mov
aas
fmuls
dec
xor
cmp
sarb
leave
xchg
pop
push
mov
inc
vmovntps
bound
inc
and
test
fwait
or
cmp
stos
add
cld
test
push
inc
mov
pop
sub
enter
andl
and
stos
dec
or
cmpb
cmp
jmp
fsincos
sarl
push
and
ret
ja
dec
repnz
or
fwait
adc
jo
xchg
adc
adcl
les
std
std
or
mov
call
add
and
xchg
push
add
fst
xor
sbbb
jb
pop
sti
push
jg
cmp
sbb
add
xchg
call
sbb
cld
dec
mov
mov
stos
inc
mov
pop
dec
cli
imulb
and
push
xchg
push
sar
lret
push
out
push
sar
adc
ljmp
nop
jmp
and
and
repnz
in
rcrb
pop
add
or
push
mov
stos
add
addb
aaa
loopne
cld
es
dec
dec
loope
lods
je
fsubs
shl
mov
add
cmpb
add
push
or
imul
in
and
fmull
repz
shl
imul
test
lods
jnp
lds
or
or
insl
add
mov
mov
lods
orb
jg
jo
push
dec
clc
push
bound
and
pop
cs
push
push
cmp
je
push
pop
adc
or
fdivl
jmp
sub
sub
jmp
sti
aas
xchg
das
and
add
mov
add
push
xor
shll
or
or
inc
dec
rorl
repnz
lods
les
add
in
imul
test
lahf
pop
fisubrs
pop
orb
rorb
daa
nop
sbb
mov
inc
sbb
mov
push
xchg
and
ret
mov
and
mov
xlat
cltd
das
sbb
cltd
orl
fs
or
mov
mov
xor
sub
js
xlat
add
ja
jae
or
fcmove
enter
ror
xor
adc
stc
ret
lea
rorb
stc
push
cmp
pop
xor
lret
and
pushf
pushf
xor
nop
add
xchg
aaa
scas
sub
or
pop
mov
mov
out
pop
aad
or
stos
adc
sub
cmp
rolb
push
jne
lods
or
sbb
and
loop
lcall
dec
mov
xlat
hlt
add
cmp
xor
std
and
lahf
fs
popa
fs
push
cmpsl
dec
add
orb
and
test
push
inc
js
aad
add
das
lahf
mov
pavgb
adc
xor
xchg
out
add
sub
adc
adc
add
mov
jne
mov
dec
sbb
inc
sbbb
test
mov
sbb
out
ficoml
in
mov
shufps
inc
loopne
lods
lods
pop
inc
sub
xchg
xchg
xchg
andb
aaa
mov
xor
cs
xor
sbb
adc
jb
test
pusha
insb
stos
lret
les
adc
lret
and
repnz
or
sbb
adc
std
add
push
repnz
jp
test
push
adc
push
rcrb
mov
fstpt
add
jne
cmp
cmpsl
jle
nop
je
repnz
call
rolb
loope
mov
adc
jne
pop
pushf
xor
jae
and
pop
outsl
out
push
movsb
and
scas
cmp
push
movsb
pop
mov
mov
xorb
mov
lods
or
jbe
repz
adcl
mov
cwtl
shlb
clc
mov
cmpb
out
push
rol
or
dec
or
push
testl
mov
and
add
jb
je
and
lock
sbb
add
inc
insb
push
imulb
es
add
adc
mov
or
adc
push
je
sbb
loopne
push
sbb
cmp
daa
fnstenv
lock
adc
xor
mov
mov
push
in
adc
lcall
inc
mov
mov
jno
popf
or
jp
sti
jl
dec
or
test
dec
inc
dec
jge
loopne
xorb
lret
cltd
nop
xchg
notb
inc
test
mov
daa
cltd
cmp
jge
mov
xrelease
and
add
mov
sbb
jmp
loopne
mov
test
aas
js
aaa
in
nop
mov
cs
jge
push
imul
jg
test
out
test
jg
or
or
mov
mov
mov
movl
mov
iret
es
jge
roll
pop
mov
jb
std
ficompl
sub
das
push
pushl
ja
mov
and
adcl
movsl
pushl
dec
push
and
push
pop
dec
push
and
xor
ret
push
ja
insl
xor
xor
dec
adc
push
inc
adc
mov
sub
pop
pop
outsl
pusha
xchg
push
call
out
inc
and
scas
rolb
mov
and
fidivl
mov
xlat
sub
popl
or
test
push
push
mov
add
push
push
sbb
loopne
add
xor
ss
add
or
pop
mov
lds
xor
dec
cli
sarb
bnd
and
aas
cvtps2pi
dec
ret
mov
add
or
dec
adc
mov
sbb
loopne
xchg
lcall
or
jnp
hlt
pop
sbb
je
mov
sub
pop
dec
loopne
and
inc
cmp
mov
add
fstps
pop
repnz
and
push
hlt
adc
stc
push
imul
pop
adc
cli
sub
int3
mov
pop
mov
pop
mov
pop
xchg
mov
jge
in
push
xlat
loopne
sbb
push
fwait
aam
std
ljmp
add
aaa
push
mov
sub
jb
inc
mov
mov
fisubrs
push
test
lret
jne
movsl
pop
neg
mov
pop
or
pop
jne
jg
mov
jae
clc
pop
ja
or
sbb
lret
setb
pop
je
movl
jb
inc
sbb
out
sbb
dec
data16
enter
popf
sbb
fimuls
popa
in
fucomp
or
inc
mov
mov
inc
xlat
lds
jne
mov
mov
dec
add
dec
cmpb
std
inc
inc
xlat
ja
mov
xchg
ret
mov
dec
and
popa
mov
mov
inc
inc
into
pop
jne
lea
int
mov
xchg
call
add
jg
ja
cmpw
xchg
test
add
rorl
or
push
dec
jne
jmp
push
pop
pop
sbb
push
dec
inc
mov
fcmovnb
subb
pop
outsl
push
push
mov
pop
add
stc
push
adc
mov
cmp
mov
movsb
ja
addr16
in
outsl
xor
mov
dec
movl
std
jge
cwtl
mov
pop
pusha
sub
lahf
addb
mov
mov
xorl
jbe
es
mov
sbb
in
mov
mov
inc
mov
pop
fsubl
movsb
mov
mov
in
aam
mov
and
fmuls
mov
sbb
mov
int3
mov
push
in
movsb
xchg
int3
inc
fdivrs
cwtl
push
cwtl
icebp
test
in
and
enter
adc
into
inc
mov
in
lock
imul
and
hlt
jecxz
cmp
pushl
rcr
sub
cld
push
xchg
pushf
dec
cmpsb
mov
cmp
mov
lock
dec
dec
cmp
mov
mov
sbb
rcrb
das
jmp
mov
fs
pop
aaa
cltd
notb
popa
insl
pop
jo
sbb
cmc
pop
push
and
testb
sbb
inc
aas
cmp
pop
push
cmp
aam
push
jo
mov
daa
loopnew
shr
test
or
or
aaa
push
and
sbb
sarb
push
jmp
es
lods
cld
aam
push
je
sub
sub
sbb
mov
ret
shr
xchg
mov
movsl
sbb
xor
jecxz
xor
push
hlt
mov
pop
inc
cld
pushf
add
sbb
or
orb
inc
lods
dec
cmp
or
ljmp
dec
pusha
movups
jmp
add
add
ret
lea
stos
cmp
pop
sbb
pop
add
je
sub
push
test
aad
test
xor
icebp
inc
pop
push
mov
data16
lock
and
mov
clc
mov
cld
imul
gs
jo
sub
js
add
xchg
lock
inc
push
clc
xlat
dec
xor
pop
dec
ret
xchg
inc
add
sbb
test
sub
jecxz
je
or
xorb
push
xor
js
add
dec
push
nop
rclb
add
loope
notb
jne
mov
loop
and
sbbb
pop
sbb
push
pop
sub
push
pushf
in
decb
jl
inc
jmp
ss
mov
mov
adc
test
lods
push
jbe
xchg
mov
pop
clc
cmp
jne
jb
gs
int3
adc
hlt
xor
mov
and
or
jl
hlt
add
fldl2t
mov
lods
and
mov
int3
xor
shll
inc
enter
xor
and
in
sysenter
icebp
mov
cmpl
xor
mov
rorb
mov
je
sub
or
push
mov
or
add
stos
add
fists
jg
adc
xchg
and
movl
cmp
add
dec
mov
jne
fsubs
or
adc
sbb
add
jae
and
mov
andb
aad
cmp
inc
fisubl
adc
pop
out
and
mov
jle
aas
inc
push
push
or
sub
cmp
in
dec
push
sbb
test
adc
jmp
mov
je
jbe
clc
cmp
test
adc
inc
jecxz
mov
push
sbb
xchg
ret
les
sarb
mov
jmp
adc
sti
mov
sbb
test
sub
push
repnz
xor
inc
jne
mov
in
mov
dec
cmp
sete
incl
add
push
mov
and
or
and
dec
sbb
jnp
xchg
mov
rcr
jo
stc
ret
in
or
add
xorb
jl
inc
fcmovnu
mov
inc
or
jg
adc
and
inc
cmp
pop
push
cmp
rcrl
daa
lea
rol
inc
inc
adc
daa
mov
mov
int
jg
dec
or
dec
xor
dec
in
inc
or
inc
xor
ror
cmp
pop
hlt
jmp
and
fdivl
fs
mov
xchg
mov
sbb
outsb
dec
mov
xchg
xor
test
adc
add
and
add
sub
ret
and
mov
js
xor
mov
jnp
icebp
adc
push
jne
sbbl
leave
add
ret
ret
mov
lods
shr
dec
movd
push
and
outsb
pushf
aaa
les
jge
and
lcall
out
mov
xor
jmp
push
xor
imul
mov
mov
inc
call
push
or
js
add
rolb
cld
out
jns
or
push
hlt
mov
cs
in
fs
fdivr
lock
repz
test
int3
call
mov
dec
adc
lods
mov
movsb
je
pushf
sbb
xchg
iret
repz
testl
test
out
out
push
push
je
insb
push
sub
mov
movsb
push
pop
insb
dec
push
cld
mov
js
inc
cld
cmp
adc
out
mov
ds
ss
sub
add
in
lret
pop
xchg
std
xor
and
jo
iret
leave
jae
or
sbb
sbb
cmp
adc
decb
cmp
iret
or
inc
or
in
push
ljmp
ja
pushf
clc
xor
pop
xor
lock
mov
mov
pop
cmp
sahf
call
jns
iret
in
fsubrs
fsubl
imul
mov
rorb
jns
iret
int3
add
enter
xchg
sub
shl
mov
dec
mov
pop
out
fcompl
lods
inc
test
daa
fwait
xchg
dec
movsb
cld
in
mov
dec
pushf
das
cwtl
pop
add
in
cmp
jo
jecxz
pop
sub
enter
push
popl
cwtl
cltd
lea
cmc
or
push
dec
xchg
out
int3
jmp
sub
nop
fucomip
sub
add
xchg
mov
mov
lds
jne
xchg
jae
or
fstl
xchg
add
add
and
or
enter
mov
and
mov
and
aam
rclb
cmp
lahf
enter
sbb
sub
les
filds
xor
add
dec
mov
pop
xchg
leave
xor
mov
xchg
jl
adc
in
mov
pop
pop
ja
js
leave
push
and
mov
pushf
jns
sbb
loop
cmp
ret
outsl
call
jl
in
fdivr
and
xchg
mov
and
jmp
data16
or
dec
mov
mov
jl
ret
mov
pop
or
das
xchg
push
cmp
pop
lret
or
jo
xchg
mov
mov
adc
cmpb
add
cmp
ret
lock
jb
fs
mov
enter
push
enter
sub
adc
jp
movsb
nop
and
adc
sub
inc
sbb
clc
jecxz
gs
movsb
cmp
clc
clc
lea
aas
decb
je
cmpb
cmc
sbb
je
mov
mov
and
ret
cld
pop
ret
pop
pushf
xor
or
jp
ss
xchg
push
jb
cmp
rclb
repnz
inc
dec
leave
and
push
cwtl
fs
shlb
adc
leave
test
je
jo
add
orb
out
ret
stos
xchg
fcmovne
scas
nop
cmpsl
fcom
ret
or
je
cmp
sahf
push
rol
movl
jne
inc
cld
lock
jo
push
repnz
push
pushf
int
push
stc
sbbb
sub
dec
movsb
dec
test
leave
and
les
pop
leave
and
dec
mov
mov
xchg
dec
xor
jo
dec
xor
mov
xor
and
mov
xchg
lret
and
nop
int3
rcrb
rcr
mov
aam
dec
mov
gs
lret
fmul
and
xor
loopne
loopne
dec
in
in
lock
testl
js
roll
in
mov
dec
mov
call
pop
lea
adcl
dec
jg
cmp
push
inc
push
lret
out
popf
push
push
daa
dec
add
outsl
je
shl
inc
fs
jne
std
test
or
fmuls
dec
fs
mov
adc
outsl
fs
outsb
dec
jb
pop
ja
enter
pop
inc
insl
jo
inc
jb
insl
push
je
pop
addb
pop
xor
and
mov
jae
cwtl
sbb
pop
and
call
inc
xor
clc
sar
add
fnstenv
mov
push
idivb
and
pop
clc
movsb
adc
js
cmp
mov
and
jo
rcll
cmp
add
dec
fildl
mov
idivl
repz
andb
popf
jge
cmpsl
ss
hlt
negl
or
out
ss
es
push
inc
jne
dec
aad
push
cmp
nop
mulb
xor
outsb
outsl
andb
or
jae
test
out
shlb
push
mov
adc
pop
push
inc
mov
and
orl
adc
adc
inc
cs
mov
or
add
ds
pop
and
or
addr16
push
push
jnp
pop
and
int3
int3
push
arpl
fs
add
leave
aad
ds
dec
xor
sbb
xchg
adc
dec
outsl
push
jb
mov
cwtl
imul
gs
or
ds
fisubrl
adc
dec
insl
jo
sub
xchg
lods
movsl
rol
in
sbb
pop
inc
lds
push
outsb
divb
test
ret
call
add
xor
lods
sub
arpl
pop
xchg
repnz
xor
xchg
push
xchg
test
cld
shlb
out
and
stos
cmpsb
std
mov
in
add
add
lods
in
fsubrs
lret
testb
out
hlt
mov
or
add
jo
faddp
daa
call
or
in
clc
in
mov
cmp
xor
add
adc
xor
enter
subb
fmuls
fstps
incl
push
daa
inc
push
and
and
jb
pop
jb
fs
sub
psubusw
or
push
sub
fcmovnb
sbb
cmp
fsubl
sbb
add
fbstp
sub
or
inc
pop
push
scas
fildl
or
aas
out
mov
bound
lcall
es
out
rcrl
pop
cmp
inc
adc
cmpb
aam
jo
mov
xor
lods
sub
pop
clc
pop
and
int3
mov
hlt
andb
out
push
dec
lock
pop
in
xchg
in
add
in
aad
repnz
call
sbb
mov
mov
loopne
arpl
loopne
inc
jecxz
dec
xlat
inc
xor
fcmove
or
inc
sub
lahf
cmpsb
jns
fcomp
enter
push
shrb
enter
adc
es
scas
sub
mov
clc
into
ret
fnstcw
lods
adc
xor
int
push
je
stos
ret
push
ss
xlat
cwtl
jmp
adc
cmp
and
push
enter
in
mov
aad
sbb
aaa
inc
dec
xchg
pop
add
rcrl
adc
adc
xchg
sbb
lahf
push
sbb
rol
mov
and
adc
push
push
imulb
repnz
sub
divl
xchg
jne
pushf
xchg
pop
dec
adc
mov
lret
push
mov
push
fsubl
aas
call
clc
aaa
andb
inc
add
push
int3
mov
jbe
add
rcr
int3
sub
and
xchg
push
adc
and
xchg
pop
les
imul
mov
outsl
ss
and
lock
test
sbb
inc
xor
lea
push
call
mov
lea
push
jno
rol
ror
mov
test
aaa
fcomps
fnstcw
sub
inc
pop
dec
inc
jbe
arpl
ja
jmp
inc
mov
jb
push
lea
mov
in
repz
dec
imul
je
fs
in
outsb
xor
ja
pop
in
loopne
sarb
mov
fsts
movsb
jne
push
cld
inc
add
leave
insb
iret
das
movsb
or
das
movsb
js
adc
or
push
aas
jmp
stos
add
aas
dec
insb
insl
dec
lea
jmp
xchg
sarl
sbb
jmp
xor
div
and
add
and
lcall
adc
jo
jmp
mov
or
xchg
xchg
mov
mov
jl
push
push
push
roll
jne
ret
aas
filds
in
fmull
push
inc
es
inc
ss
lea
sbb
pop
push
jmp
sbb
adc
fsubr
enter
call
pop
fcoml
lock
mov
add
decb
jne
and
fimuls
jo
and
mov
imul
in
push
xchg
nop
call
push
cs
bound
xchg
pop
sub
nop
decb
mov
nop
push
xchg
and
lcall
ds
mov
decl
push
cmp
or
mov
sbb
cmp
cld
jmp
dec
adc
cmp
cmp
sbb
jmp
cmp
test
ret
hlt
fbld
xchg
push
push
stos
dec
push
pusha
cmpsb
mov
call
lods
pop
jg
cmp
je
pop
jne
sub
andb
push
dec
jnp
loop
cli
inc
add
or
loopw
xor
or
mov
inc
and
loope
addr16
jbe
sub
or
inc
cwtl
push
pop
call
push
add
fmuls
outsl
dec
pop
addl
lds
mulps
popf
push
xchg
mov
or
pop
push
mov
push
and
inc
add
add
cmp
cmp
dec
jnp
push
jbe
xor
inc
lock
lcall
hlt
ja
loopne
add
fs
xor
aas
push
lea
mov
jbe
xor
sub
dec
push
mov
inc
sbb
inc
in
cmp
andb
scas
daa
in
add
push
cmp
push
jp
hlt
jecxz
jg
cmp
jg
pop
in
shrb
in
adc
push
cltd
cmp
add
imul
sub
ds
jl
les
in
imul
sbb
add
xchg
and
lods
add
nop
sbb
in
mov
or
loope
cmpb
sub
push
add
pop
rcll
rcll
jne
or
into
pop
sbb
mov
in
jno
pop
roll
sbb
scas
into
push
std
ljmp
movzwl
cmp
ja
sub
shl
push
repnz
jns
out
out
inc
pop
jl
out
fwait
out
xlat
out
into
push
cld
out
mov
pop
xor
add
sahf
imul
xor
addb
or
lock
hlt
push
test
mov
mov
add
xor
add
clc
fldcw
and
in
mov
xor
xchg
mov
or
or
cli
loop
cmp
nop
cmpsb
jb
mov
push
sub
out
jl
cmpl
push
loopne
jg
lock
mov
sub
loopne
aaa
fsubs
adc
aam
xor
sarb
rcl
fildl
sarb
ror
cmp
jne
out
sar
mov
lods
push
enter
adc
pop
dec
je
jmp
jb
rclb
and
dec
repz
les
test
out
add
jo
repnz
adc
jo
cmp
push
ljmp
jns
mov
cli
jmp
and
mulb
pushw
xor
jns
andl
shlb
mov
add
sarl
sbb
flds
jae
mov
xchg
fnsave
and
dec
cmp
cs
adc
add
test
ja
jno
popf
test
push
imul
es
outsb
mov
or
adcl
add
leave
sbb
cwtl
jmp
sbb
fsubl
dec
mov
jmp
nop
nop
inc
and
scas
sub
fmull
adc
mov
movb
cwtl
fmuls
sbb
adc
test
in
inc
fnsave
iret
mov
dec
jmp
mov
jp
or
or
jmp
jbe
dec
and
push
mov
cmp
jmp
or
cmp
call
push
xor
dec
pop
shr
xchg
xor
jne
mov
push
loopne
sub
movsb
in
loopne
pop
xchg
adc
bound
cmp
ret
ret
push
cmp
bound
cmp
sahf
or
in
mov
sahf
out
sahf
inc
pusha
jp
mov
jns
out
loopne
out
mov
jns
cmpsl
pop
pop
sub
dec
dec
and
cltd
cmp
aad
inc
xchg
push
push
insb
stos
or
cmp
dec
cmp
es
mov
inc
cmp
inc
cmp
mov
push
aaa
dec
adc
sbb
and
imul
and
fsubl
fsubl
test
xor
and
aam
movsb
and
es
jg
int
inc
or
ljmp
pusha
and
mov
and
cmp
icebp
push
out
lea
jns
lock
dec
inc
mov
pop
or
daa
js
xchg
ret
repz
in
adc
xchg
les
sbbl
mov
mov
arpl
movsb
sub
ret
mov
popa
and
mov
mov
orl
lods
and
adc
mov
dec
dec
add
pop
mov
je
fidivrl
pop
mov
dec
adc
pushf
dec
pop
adc
and
add
outsl
aaa
dec
mov
mov
cltd
lock
push
fwait
push
or
jmp
rcll
test
aad
dec
mov
mov
insl
enterw
ret
jno
das
lret
movsl
sbb
xchg
adc
testw
mov
xor
bnd
cmp
ss
cs
mov
inc
mov
or
mov
inc
xchg
or
lods
cmpsl
pop
or
push
push
or
sub
push
cltd
in
inc
scas
fiaddl
js
fs
fstpl
fwait
push
daa
mov
push
add
js
push
xchg
lea
in
and
lret
out
rclb
pop
push
pop
push
push
rol
sub
stc
mov
fcmovnbe
or
xlat
js
outsl
jge
sub
mov
xchg
push
dec
xor
cmovle
mov
and
popa
je
cwtl
cwtl
lcall
dec
inc
push
ds
lcall
pop
inc
outsl
jne
xchg
jb
outsb
mov
or
dec
nop
das
dec
pusha
mov
sbb
xchg
cmp
stos
xchg
add
mov
adc
rcrl
lcall
popa
fwait
aas
push
outsb
imul
adc
and
arpl
daa
xorl
xor
push
sbb
add
ljmp
aaa
push
xor
mov
add
aaa
adc
clc
cwtl
xor
push
ret
cmc
mov
sti
pop
mov
cli
and
es
test
xlat
aaa
arpl
or
repz
das
cmc
xor
inc
sti
ss
mov
insb
enter
fmuls
jno
pop
cmc
cmp
addl
pop
push
adc
pop
mov
xor
lock
push
add
push
lea
loopne
jb
sub
mov
adc
adc
test
dec
outsb
pop
sbb
in
inc
jo
mov
mov
scas
adc
and
in
ja
outsb
jns
sarl
mov
gs
push
dec
and
pusha
aad
jae
jle
sahf
push
js
loope
clc
mov
and
push
jno
xor
mov
sub
ret
jne
push
mov
ss
or
xchg
jle
push
je
mulb
jne
test
dec
xorl
push
push
pop
sub
hlt
cwtl
cmp
mov
pushl
cmpb
in
imulb
mov
push
insb
fimuls
adc
inc
inc
das
xchg
push
loope
dec
or
clc
fadds
mov
js
imul
jge
cmp
je
pop
and
push
xchg
clc
xchg
testl
mov
pop
adc
imul
xor
cmp
inc
call
ret
testl
add
addb
mov
push
mov
call
or
pop
mov
add
ret
xchg
adc
dec
loop
cmc
push
sti
cs
adc
sub
sub
push
mov
sbb
repz
clc
mov
mov
jle
or
es
sbb
push
addb
or
mov
xchg
in
out
mov
mov
add
paddusb
addr16
lret
xchg
ljmp
dec
or
pop
pop
xlat
addl
aas
loopne
cmp
push
add
dec
jb
or
sbb
xor
dec
pusha
mov
xchg
sbb
std
stc
nop
mov
in
or
cmp
lahf
jno
nop
ret
fbld
inc
mov
or
fnstenv
ret
inc
loope
xchg
xchg
sbb
lock
pushf
loopne
rorb
daa
cli
jbe
js
mov
cli
pop
mov
jl
inc
ds
cmp
xor
inc
sbb
add
sbb
or
jecxz
das
sbb
mov
movsl
adcl
scas
xor
sbb
and
inc
dec
jne
xchg
cli
pusha
inc
dec
or
mov
aaa
cmpb
dec
inc
mov
adcb
sbb
data16
mov
xchg
mulb
push
push
adc
mov
jns
fisttps
sti
push
in
outsb
jb
scas
sti
test
jne
fiadds
cmp
adc
inc
adc
cmp
xlat
dec
mov
inc
aas
hlt
jmp
ds
in
cwtl
jp
stc
sbb
or
sub
cmp
mov
in
in
das
pusha
xor
test
rcrl
arpl
jmp
xchg
xchg
dec
subl
scas
scas
nop
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
cwtl
cltd
xchg
xchg
xchg
xchg
lcall
xchg
sahf
lahf
addb
addl
xchg
add
cld
rcll
xchg
xchg
cmp
enter
lret
cmp
pop
mov
inc
or
in
push
push
add
inc
push
xchg
push
add
inc
enter
jo
test
add
cli
mov
sub
addb
ljmp
pop
adc
xor
test
jne
mov
push
or
pop
inc
dec
xor
cmp
jle
sub
dec
cwtl
push
push
xlat
cmp
in
jae
cs
xchg
mov
cli
jge
mov
dec
repnz
jp
aaa
sub
mov
mulb
or
and
or
cmpsl
pop
inc
gs
lcall
mov
adc
add
fisttpl
mov
dec
jl
add
ret
push
or
mov
sbb
lret
je
mov
dec
and
sbb
lds
ret
mov
mov
fbstp
loop
mov
insb
sbb
test
sub
add
lock
cmp
aas
mov
cmpb
je
dec
push
adc
push
lar
decb
ja
mov
adc
sbb
mov
add
pop
inc
jb
cld
push
add
add
popa
loopne
and
movsbl
or
pop
jle
add
pusha
sbbl
loopne
aas
fdivs
mov
in
ds
in
push
decl
test
cli
and
add
cmpb
sahf
das
clc
ja
jb
add
add
call
out
pop
mov
or
loope
xchg
mov
push
mov
add
call
dec
xchg
cmp
scas
lcall
sti
jg
pop
into
inc
mov
lods
cmp
lcall
pop
cwtl
add
test
pop
or
cmp
mov
loopne
outsl
adc
xor
fldenv
add
clc
jg
add
daa
dec
sbb
aaa
clc
stc
adc
sbb
mov
pop
add
pop
mov
pop
lcall
inc
pop
sbb
sbb
xchg
or
or
fstpl
dec
outsb
or
cwtl
aam
lock
add
add
rorb
mov
add
add
test
mov
pushl
and
scas
xor
mov
dec
cmp
decb
cwtl
add
das
push
jmp
ss
jmp
or
fisttpl
mov
mov
nop
call
adc
scas
pop
mov
scas
and
adcb
clc
dec
mov
mov
addl
test
movb
loopne
ds
xor
xchg
loop
jns
xchg
mov
insl
fwait
int3
outsb
aas
mov
add
cs
adc
pusha
or
lcall
data16
data16
negb
insl
fmuls
inc
aaa
mov
pop
lret
add
cmpsb
dec
xchg
dec
push
xor
sbb
push
or
add
inc
push
push
ret
add
push
push
sbb
fwait
test
mov
frstor
sub
sub
or
fistpll
jne
repz
ja
and
sarl
mull
push
sbb
jmp
add
jmp
sbb
sub
sbb
adc
push
or
adc
ja
add
rolb
mov
jp
test
cli
push
clc
pushl
pushl
lods
fildl
sbb
adc
shlb
add
aaa
pushf
popa
cmp
cmp
sbb
jne
lahf
mov
sub
or
add
repnz
mov
mov
mov
mov
pop
arpl
sbb
iret
dec
cmp
inc
cmp
dec
fisttpll
scas
or
dec
mov
add
daa
inc
mov
in
push
call
dec
in
cmp
into
aam
daa
stc
sub
add
inc
jne
ret
pop
jbe
dec
icebp
stos
push
subl
add
xlat
pop
and
std
mov
insl
add
aas
sbb
adc
or
inc
imul
sbbl
fs
gs
outsl
push
add
mov
cmp
sbb
adc
les
movsl
sbb
sbb
sub
scas
rorb
push
inc
dec
outsb
insb
jns
inc
insb
popa
loop
in
xor
scas
test
xchg
out
imul
push
push
imul
or
jb
or
test
cmpsl
or
dec
imul
sbb
jns
nop
test
push
or
imul
test
push
dec
jg
mov
js
add
das
add
push
or
fld
shlb
ss
in
push
or
fimull
jns
push
jae
cltd
loope
fnstcw
push
adc
inc
jne
mov
mov
mov
inc
jbe
push
js
push
push
mov
xor
add
outsb
push
inc
les
sbb
insl
dec
and
arpl
mov
sub
das
mov
test
xor
mov
leave
inc
mov
or
rcrl
int
mov
sub
or
outsb
pop
and
mov
or
ret
cs
xor
or
cwtl
and
hlt
sbbb
leave
mov
mov
inc
pop
add
adc
or
dec
ds
ljmp
fiadds
dec
pop
xchg
sbb
nop
mov
movsb
sbb
movsb
and
mov
ds
and
imul
xor
jae
mov
mov
cmp
inc
shrl
and
adc
mov
adcb
insl
jo
das
xor
push
mov
dec
pop
insb
out
push
push
nop
sub
jb
sub
enter
enter
shl
sub
sbb
js
in
jg
sub
insb
pop
adc
push
xor
xor
pop
fadds
les
and
mov
sbb
and
dec
pop
mov
in
add
in
add
mov
and
pop
push
or
out
fimull
push
add
and
into
divb
sub
aaa
cmp
ss
add
push
push
lock
lcall
clc
push
dec
mov
jae
mov
arpl
shlb
sbb
jo
imull
pusha
or
mov
cmp
push
mov
mov
xor
movsl
lods
cmpsb
push
sub
loopne
idivl
fs
push
dec
or
jp
insl
and
filds
cmp
xor
adc
rcr
out
xor
mov
xor
dec
cmc
aaa
nop
sub
inc
fs
jo
mov
mov
pushf
jae
push
rclb
sahf
cmpsb
add
scas
cmp
pusha
pop
xchg
iret
unpcklps
and
mov
xsha256
cmpsb
adc
fldenv
inc
dec
xlat
cmp
xchg
insl
and
push
cmp
fidivrs
add
pusha
inc
cld
inc
add
and
jnp
push
repnz
xorb
nop
mov
addr16
fnstenv
data16
aas
mov
sahf
idivl
push
dec
mov
pop
ret
ja
inc
shlb
outsb
pop
or
scas
pop
sbb
jmp
pop
fmuls
or
inc
xchg
outsb
inc
dec
dec
or
aaa
adc
mov
fdivl
pop
push
enter
and
rolb
pushf
cmp
repz
aam
pop
dec
dec
push
int
fs
test
dec
jl
mov
xchg
push
sahf
sbb
pop
push
into
add
mov
je
xor
jo
sub
or
pop
jbe
push
lods
inc
out
ret
sbb
lock
push
mov
mov
dec
and
push
out
adc
adc
mov
ja
push
mov
paddsb
dec
mov
adc
adc
push
fmulp
test
xchg
pop
adc
out
dec
push
int3
push
loopne
nop
fbstp
xchg
xor
push
mov
jnp
inc
adc
pusha
and
and
xchg
out
addb
mov
in
out
and
xlat
sbb
movsb
mov
fdivl
push
adc
in
and
jge
notl
xor
in
inc
repnz
adc
adc
idivl
ds
faddl
push
mov
mov
repz
divb
int3
sbb
cmpsl
cs
insl
notl
andps
repz
in
or
push
in
push
or
adc
push
in
sbb
inc
push
in
and
xchg
xchg
mov
xor
popa
in
in
add
insb
sahf
out
push
orb
repz
jmp
push
pop
push
adc
lock
dec
sub
push
cmp
xchg
xor
into
adc
push
notb
xchg
push
push
xchg
mov
xchg
pop
sahf
addr16
fcompl
pusha
popa
aad
jns
js
push
filds
leave
addr16
es
sarl
or
es
or
add
cltd
push
adc
add
inc
sti
xchg
and
mov
jp
mov
push
stos
pop
fneni(8087
lahf
jg
test
sarl
test
int
insb
push
pop
or
bound
subl
es
mov
push
pop
xor
bound
popa
call
aaa
sub
ds
sub
pcmpgtd
or
mov
outsb
and
es
lret
xor
inc
sarb
sub
sbb
jecxz
adc
outsl
mov
bound
insb
aaa
nop
dec
inc
fsubrs
xchg
fcoml
fwait
sbb
ja
inc
aam
adc
sti
je
ds
jno
jg
imul
mov
mov
xchg
push
aaa
fdivrp
pop
inc
int
dec
addb
cs
jnp
jns
aas
pop
sub
pop
and
sbb
push
xchg
mov
adc
les
adc
in
mov
add
dec
jnp
in
js
push
push
sbb
pusha
push
nop
xchg
test
jge
jo
push
out
add
jp
sbb
hlt
std
cld
jmp
lcall
push
cli
stc
clc
push
push
push
push
push
push
loop
repz
jle
push
or
sub
repz
xor
inc
out
jle
cmp
dec
xchg
xor
adc
xchg
pop
or
nop
xlat
pop
and
mov
lods
add
pop
mov
cltd
pop
add
add
imul
add
stc
ljmp
sbb
adc
xor
add
idivl
add
push
pop
jp
lahf
mov
push
arpl
sbb
in
les
cmp
sbb
sbb
ja
push
mov
adc
cmpsl
in
pop
xchg
mov
out
flds
xchg
jl
push
mov
in
push
inc
push
sub
or
lcall
or
push
cmp
mov
mov
sbb
add
sbb
scas
mov
lcall
insb
pop
dec
push
pop
cmpsl
mov
pushf
popfw
sub
push
sbbl
aaa
fwait
xchg
popf
lock
sahf
pushf
int3
add
and
sbb
or
pmaxsw
mov
gs
insb
pop
and
imul
add
fildl
fs
dec
jb
pop
enter
pop
inc
push
inc
test
dec
outsb
dec
inc
dec
dec
es
mov
inc
or
loopne
lea
push
dec
fcomps
fimuls
or
outsb
and
aas
lea
xchg
sarb
and
in
rorl
push
push
leave
and
mov
nop
mov
addr16
lock
mov
mov
leave
dec
cltd
or
or
jg,pt
mov
pop
jp
inc
push
jne
aas
sbb
mov
and
scas
jae
or
dec
push
xor
inc
std
adc
sti
xor
xchg
push
mov
dec
xor
xor
xlat
bound
jb
add
das
je
test
mov
aad
and
jmp
or
mov
dec
cmp
scas
pop
or
xchg
sub
jbe
ficompl
dec
jmp
pop
je
movsl
in
cltd
jge
inc
cld
sub
jne
fcmovu
aaa
aaa
iret
and
jmp
sbb
adc
mov
and
push
sbb
pop
jmp
stc
mov
cmc
xchg
pop
xchg
mov
add
fcoml
in
in
add
sbb
inc
cmp
or
push
test
cwtl
loopne
sbb
xchg
jo
je
add
loopne
or
inc
stos
adc
out
mov
xchg
andb
pop
jae
add
and
sbb
lcall
je
clc
mov
jge
shlb
dec
sub
jne
or
push
jns
and
pop
popa
pop
sbb
pop
pop
mov
enter
sub
jb
or
nop
or
pop
lds
or
in
add
gs
mov
push
xchg
hlt
xchg
inc
and
or
sub
add
sbb
adc
jae
inc
pop
add
hlt
cmp
xchg
mov
or
push
adc
or
loop
outsl
jmp
hlt
cs
xor
ret
arpl
ds
ret
pop
xor
sub
jge
setge
add
inc
inc
hlt
cmp
sub
push
add
nop
incl
cmp
and
pusha
sbb
adc
pop
repnz
jp
xchg
das
insb
dec
orl
ror
rorb
sahf
fsubrs
pop
in
bound
imul
imul
fwait
rolb
je
stos
ret
popa
testb
out
jo
jp
aad
pop
icebp
pop
push
mov
xchg
rol
inc
cli
lcall
add
push
lcall
fistl
pop
cld
cmp
popf
cmp
push
push
adc
cmp
inc
adc
xor
iret
push
lea
push
insb
jne
mov
dec
mov
sbb
jg
out
inc
dec
jne
pop
rcrl
xchg
call
outsb
lds
inc
sbb
out
sub
jg
enter
insl
aaa
sbb
int3
hlt
push
mov
pop
cwtl
stos
ds
popf
fmull
pop
cld
cmp
xchg
sub
leave
add
in
cmpsl
dec
pop
lret
push
pop
mov
dec
lahf
das
add
inc
outsl
outsb
add
xchg
push
push
fwait
pop
pop
sub
insl
mov
cwtl
inc
push
mov
or
rorb
jl
cmp
je
jl
pop
push
sbb
xlat
shll
inc
xchg
ret
je
jp
push
call
fwait
xor
xor
xorb
inc
pop
sbb
lock
jae
sub
cmp
push
xor
mov
jecxz
out
and
xchg
daa
add
je
lock
movd
and
pop
cwtl
iret
lahf
adcb
inc
aaa
and
lret
out
and
rcr
test
dec
mov
mov
sbb
in
int
add
loopne
rorb
lods
cmp
jg
pop
xor
aad
cmp
pop
inc
xchg
ja
mov
dec
xchg
mov
mov
scas
mov
xchg
mov
test
add
pushf
or
add
daa
cli
sahf
or
pop
mov
das
mov
or
ret
adc
and
mov
xor
push
enter
call
add
es
mov
cmp
add
adc
ss
push
lods
es
pop
or
xchg
mov
xlat
stos
nop
inc
lahf
push
push
andl
xorb
mov
hlt
or
xchg
cs
pop
push
inc
pop
rol
and
cmpsl
daa
or
inc
enter
adc
xchg
xor
lods
xchg
sti
daa
adcb
or
jge
xlat
add
or
inc
gs
daa
xchg
loope
enter
sub
daa
pop
xor
bound
or
fldenv
addb
fbld
daa
addr16
mov
sbb
out
sbb
gs
jmp
cmp
cmp
insb
insb
repnz
shll
cmpsb
push
fbld
push
sbb
pusha
add
adc
xchg
and
insl
mov
sbb
push
sub
daa
mov
stos
in
mov
sub
in
sbb
scas
outsb
push
add
or
adc
dec
or
jae
les
dec
add
dec
rcrl
or
or
dec
movsb
push
fistl
dec
js
xor
sarb
sub
pop
clc
xor
dec
cli
lock
sub
pop
popa
and
stos
add
mov
or
jecxz
and
mov
addr16
mov
mov
outsl
test
pop
sub
lea
aaa
sbb
movsl
xchg
in
dec
cld
mov
jmp
ret
rolb
sbbl
filds
sub
inc
xchg
call
add
sbb
sbb
inc
filds
mov
mov
outsl
or
jmp
add
push
mov
or
jecxz
pop
outsb
and
cmp
jbe
mov
xor
xlat
pop
adc
into
sarb
sahf
pop
mov
pusha
packssdw
mov
sbbl
lcall
stc
sbb
xchg
adc
ja
sahf
push
add
sbb
mov
fcoms
jae
sti
xchg
dec
push
xor
adc
inc
cmp
shll
movsb
push
sbb
test
push
loopne
push
sub
xchg
loopne
or
push
inc
sub
nop
roll
negl
ret
sbb
mov
mov
push
aas
xlat
jmp
mov
mov
mov
xchg
sbb
and
addb
xor
xor
and
mov
push
or
insb
cmpl
dec
pop
adc
arpl
inc
faddl
sbb
andb
sarl
sahf
je
inc
std
xchg
jl
jo
je
mov
insb
ret
cwtl
je
mov
cmp
or
mov
aad
jno
dec
shr
sub
add
xor
jecxz
jo
popl
sub
cmpsl
ret
cs
std
sbb
and
sub
insb
das
add
rolb
inc
divb
cmp
mov
iret
push
std
int3
gs
and
fcoml
insl
and
or
das
cmp
aas
cmc
sub
cmpb
cmp
push
cmpsl
push
or
and
jmp
insl
mov
or
ret
inc
adc
cmp
incl
or
leave
inc
insl
mov
dec
add
xchg
or
or
add
push
adc
imul
lds
cwtl
or
jl
call
rorl
sar
mov
dec
idivl
fwait
insb
in
jge
sub
enter
in
adc
or
ret
push
inc
cmpsl
sbb
lods
out
cmp
mov
out
data16
or
js
push
dec
fcmovnbe
push
mov
sub
test
or
icebp
jecxz,pn
addb
sub
xor
fisubs
sub
mov
shrb
mov
xlat
xor
out
sbb
jbe
inc
insb
fmuls
ret
jg
push
stos
mov
loope
cmova
mov
or
sub
mov
fdivrl
dec
pop
add
leave
test
push
mov
xor
jmp
and
mov
pop
lcall
mov
rorl
inc
cmp
jge
std
or
add
adc
jne
sbb
leave
stos
cwtl
push
dec
pop
shll
push
mov
jle
push
test
sub
push
xchg
adcl
shl
sbb
xchg
inc
ret
adc
adc
push
cli
sub
and
in
call
in
fdivs
hlt
das
mov
and
sub
into
lock
out
out
cmp
js
dec
inc
push
mov
shl
xchg
pop
pop
enter
xorb
add
je
pop
insb
add
and
sbb
test
inc
inc
orl
push
push
mov
dec
mov
sub
jg
dec
sbb
dec
mov
sub
sub
pop
jmp
push
inc
sbb
and
aad
mov
mov
sub
and
ja
xor
and
xor
je
test
push
scas
mov
inc
mov
mov
xchg
mov
xor
enter
cmpb
mov
xchg
inc
jne
xchg
mov
js
jmp
dec
add
add
and
inc
xor
pop
sahf
adc
js
push
inc
or
cmp
aaa
ja
add
lds
push
xchg
push
pop
pop
subl
imul
call
mov
sarb
roll
popf
add
adcl
jge
mov
jbe
and
pop
sar
mov
shl
pcmpgtd
sbb
call
out
je
and
push
fstpt
jb
mov
xor
mov
or
call
inc
sub
pop
mov
jmp
mov
or
adc
mov
push
pop
mov
push
add
lss
leave
je
stos
adc
btr
addb
mov
ficoms
imul
xchg
cld
jmp
cld
aam
cwtl
das
fmuls
dec
inc
lock
add
sub
mov
xor
xor
cmp
ja
and
bt
jb
ja
aas
xor
ret
ret
fdivrp
mov
adc
push
inc
cmp
jne
inc
decl
jne
les
lods
and
mov
dec
xchg
xor
add
movsb
and
scas
and
movsb
sahf
in
aaa
and
and
out
sbb
iret
adc
add
inc
test
push
mov
pop
or
mov
jmp
loope
in
decb
push
aaa
sub
inc
mov
dec
dec
lock
inc
in
or
dec
int3
adc
sbb
mov
inc
mov
sbb
ljmp
jns
ljmp
sarl
adc
xchg
and
xor
pop
and
pusha
pop
dec
add
xorb
mov
or
cmp
fisttps
cmp
add
inc
pop
xchg
xor
push
aas
or
mov
xchg
aad
inc
pushf
pop
cmpb
adc
push
aam
or
cmpsl
add
sarb
mov
stos
jle
push
mov
xchg
sbb
mov
jmp
dec
dec
xlat
clc
mov
inc
pop
or
jg
mov
xor
adc
inc
cwtl
inc
bound
or
mov
pop
mov
movsl
int
pusha
cwtl
adc
pop
out
or
inc
sahf
cmp
clc
mov
mov
hlt
rcll
cmp
imull
mov
iret
cmp
sub
clc
icebp
adc
xor
clc
sti
or
or
sbb
mov
mov
cmp
pop
inc
xor
pop
cmp
lods
addl
mov
out
bound
jno
loopne
or
imul
in
icebp
inc
mov
mov
push
mov
adc
pop
mov
mov
or
xchg
and
pop
std
pop
jp
adc
ss
daa
lret
movsb
out
call
lret
xor
lahf
or
jo
sub
mov
sbb
dec
mov
add
clc
rcl
stos
repz
adc
gs
xchg
push
jecxz
lahf
nop
test
cmp
iret
stos
mul
mov
jge
dec
inc
xor
cmpsl
popf
rol
mov
pop
filds
pop
ret
mov
sub
xor
jp
dec
sarl
loope
mov
xchg
add
vmptrld
loopne
das
xor
xchg
push
xchg
fdivrs
jecxz
cmp
push
in
sahf
rol
jnp
ss
and
add
sbb
cmp
int3
add
mov
out
jns
mov
or
dec
sub
jb
push
iret
lds
sub
pop
xchg
adcl
cmp
push
cmp
loope
xchg
adc
rclb
cmp
rcr
aam
stos
cmp
bsf
cmp
cmp
mulb
outsl
inc
ss
mov
fisttpl
cmpsb
clc
daa
sbb
or
femms
loopne
pushf
ds
ret
push
jb
loopne
js
rcrl
sbb
push
cs
xor
add
xor
and
cmp
push
sub
cmp
mov
push
push
push
daa
push
stos
mov
dec
jb
add
adc
call
sbb
and
pop
sbb
cmp
nop
fwait
push
icebp
out
add
add
inc
mov
adc
addl
jl
push
inc
movsl
out
movsl
and
lock
shll
push
shll
inc
pop
aaa
adcb
dec
enter
pop
in
and
addr16
lahf
sbb
addr16
adc
and
js
icebp
inc
mov
in
xchg
test
lret
inc
gs
and
sbb
and
mov
int3
test
nop/reserved
enter
xchg
fiadds
xor
and
xchg
out
cli
cmpsl
enter
cmp
je
mov
aad
out
or
pop
insl
adc
pop
push
or
xlat
and
pusha
jle
xor
callw
rclb
xor
add
add
xlat
inc
xchg
aas
out
cs
add
inc
fwait
pop
cwtl
bound
jg
clc
imul
cmp
sysexit
sub
decl
sub
lea
push
jns
into
push
push
sbb
jmp
jmp
ljmp
inc
daa
and
fldenv
inc
adc
outsl
das
icebp
aaa
pop
sbb
pop
in
xor
roll
add
pop
lods
bound
dec
push
adc
adc
xlat
loope
or
hlt
adc
xchg
les
jns
jmp
call
cltd
pop
popa
xor
in
jno
les
stc
inc
fcoms
loop
sbb
push
outsl
je
push
adc
jns
mov
push
inc
cmc
push
pop
push
pushf
add
in
pusha
adc
fsubrp
push
xchg
push
lds
int
dec
enter
fildll
mov
leave
dec
cs
das
js
cmp
movsl
pop
filds
push
mov
mov
mov
adc
adcb
mov
or
subb
sub
add
outsb
push
divb
aaa
add
push
daa
inc
adc
jno
xchg
and
sub
cmpsb
add
inc
sbb
lock
lock
sub
add
jle
loop
xor
jmp
mov
and
add
add
xor
sub
sahf
add
mov
sub
aad
sbb
aas
lock
pop
faddp
sbb
cmp
in
cmp
inc
aam
pop
add
inc
icebp
lea
and
lea
ret
xchg
push
cmp
mov
sbb
cmpb
loopne
adc
jmp
pop
jecxz
add
inc
add
cmp
jno
mov
xlat
test
pop
jne
testb
orb
sbb
loope
hlt
push
pop
shrb
je
jbe
and
sub
cmp
mov
adc
adc
nop
ret
inc
jbe
pop
or
std
cmp
je
lock
cmpb
mov
sub
jo,pn
xchg
sbb
ljmp
sbb
jmp
std
rclb
mov
add
sbb
add
sub
pop
or
and
repnz
and
pop
dec
jae
mov
sub
mov
js
sbb
fcoml
adc
cwtl
cmp
sub
movl
adc
pop
andb
shr
ds
inc
stos
stc
sbb
inc
adc
or
mov
push
movsb
rol
insb
fstl
decl
iret
movsb
cmp
dec
int3
mov
lahf
pushf
pop
add
ret
cmp
and
lods
getsec
sbb
jmp
loop
jmp
add
push
add
push
mov
loope
sub
popa
inc
in
movsl
add
cmpsl
pusha
mov
cmpsb
or
fcomp
fstpt
je
jg
mov
jmp
ficoml
scas
shlb
mov
jg
pop
sarl
lea
jmp
dec
xchg
sub
or
jbe
inc
add
loope
fldl
out
sbb
dec
ljmp
jg
sub
push
or
ret
lahf
add
stos
js
cmp
dec
push
sbb
lea
js
add
cld
push
lcall
or
pop
push
xcrypt-cbc
cmpsl
shll
mov
scas
push
mov
scas
pop
inc
fs
add
or
je
jo
xchg
pop
xor
cmp
std
inc
jmp
pop
xcrypt-cfb
cmpsl
gs
inc
xchg
jg
cld
imul
or
nop
test
pop
jo
mov
jno
mov
ficomps
push
or
inc
inc
nop
lods
ret
jl
repz
push
xchg
push
mov
lods
test
sbb
xchg
adc
mov
sbb
or
xor
or
or
hlt
shr
and
aam
pop
movsb
xor
adc
movsb
repnz
jg
out
push
fidivrs
neg
testb
jne
mov
or
or
mov
and
lock
dec
inc
jge
sbb
jle
jno
mov
dec
in
cmpl
test
lock
or
lea
or
pop
pop
dec
loopne
out
je
inc
pop
mov
xor
xchg
addb
mov
and
arpl
pop
pusha
pushf
int3
or
adc
rorl
gs
nop
add
pop
xchg
sub
add
push
jl
bound
loopne
pop
jnp
popa
and
or
and
popl
jle
sbb
mov
sub
mov
inc
mov
jbe
sub
cmp
insl
ret
jno
repnz
sub
fwait
insl
fnstcw
subb
dec
fcoms
mov
pop
adc
ret
lahf
out
mov
jmp
push
xorb
add
add
fldt
push
jbe
and
pop
enter
add
enter
imul
bound
mov
outsl
rorl
iret
scas
arpl
push
test
lds
push
sub
out
push
lcall
xor
mov
mov
xchg
shl
mov
insb
pop
or
cmp
outsb
jne
sbb
dec
cmp
xor
jne
dec
movsb
int3
jp
xor
cltd
push
outsb
add
out
fists
push
clc
sti
push
cmp
movsb
push
lret
std
adc
mov
mov
or
push
ficomps
leave
mov
pop
xor
or
dec
or
sbb
in
outsl
adc
aam
loope
dec
or
sbb
jne
movb
loop
bound
mov
sbb
push
jbe
add
sar
or
jmp
inc
mov
push
and
enter
int3
cmp
fwait
pop
xchg
inc
add
jbe
add
mov
jmp
push
push
enter
jl
arpl
rcr
loopne
sub
push
mov
mov
push
roll
jmp
inc
fucomp
pop
mov
icebp
sub
xchg
jg
mov
push
cmp
push
jo
insl
push
xor
cmc
xor
jge
loopne
mov
call
or
sbb
xchg
pop
icebp
mov
mov
inc
add
xchg
fs
lods
dec
jne
fcompl
call
out
cmp
ja
cltd
xchg
and
pushf
mov
push
lods
push
inc
in
mov
pop
sarb
cmp
push
hlt
mov
ss
test
or
push
dec
bound
inc
dec
pop
out
cmpsb
sbb
faddl
inc
sbb
outsb
inc
shlb
add
sbb
mov
imul
sbb
repnz
or
ss
lea
pop
scas
js
sub
xor
scas
iret
and
in
or
xchg
mov
pushf
pop
inc
jmp
mov
sarl
es
idivb
enter
sbb
dec
faddl
hlt
pushf
xorl
push
fsubl
addb
leave
or
xorl
push
sub
or
xor
sbb
aam
or
and
add
sub
test
jle
cmp
push
jge
or
or
ror
loop
jge
jg
or
jg
lods
add
add
je
data16
fcompl
jmp
pushf
or
add
add
sbb
inc
mov
popf
movsl
add
push
mov
or
mov
icebp
and
mov
pop
sbb
mov
ficoms
cmp
lods
xchg
pop
sbb
aam
rol
dec
ret
dec
or
pop
fs
xchg
iret
repnz
sub
jge
pushfw
add
push
js
xor
call
inc
insb
data16
add
outsl
loopne
test
mov
cli
rol
pop
fiadds
je
lret
push
les
pop
cwtl
aas
dec
push
or
inc
mov
push
fldl
add
pop
insb
das
push
inc
outsb
dec
lahf
sti
and
aas
add
loope
and
xlat
or
push
xlat
push
push
ljmp
cld
cmp
mov
mov
cmp
jle
test
xchg
xlat
shll
add
mov
and
add
cmpsl
pop
test
push
and
xchg
repz
mov
xchg
inc
sbb
push
popf
xor
xor
and
push
add
cmp
pop
push
mov
inc
pop
lds
push
stc
enter
movsb
add
push
inc
pop
xchg
into
cmc
int3
and
dec
xor
dec
push
push
or
orb
inc
sbb
sub
daa
cmp
inc
xor
pop
mov
xorl
rolb
jg
sbb
jmp
sub
dec
call
or
ret
test
dec
jmp
mov
add
cmp
pop
push
sbb
sahf
test
adcl
push
jb
jo
imul
pop
push
scas
lcall
mov
push
call
aaa
xor
mov
mov
and
fadds
jo
sbb
hlt
or
or
inc
rcrl
add
adc
bound
adc
lret
rcrl
jecxz
mov
std
ja
sbb
add
icebp
inc
pushl
cli
push
sub
sarb
mov
inc
and
pop
outsl
es
cmp
loopne
jne
inc
lret
jp
sbb
dec
insl
push
pop
dec
sti
ja
inc
pusha
add
outsl
add
cmp
mov
rolb
ret
jne
jae
mov
dec
call
iret
test
dec
and
sub
cmp
jne
adcb
lods
into
mov
and
push
mov
fwait
push
add
rolb
js
sub
jae
in
dec
clc
xchg
clc
pop
fldcw
cli
nop
add
mov
test
xlat
or
sbb
add
xchg
frstor
negb
adc
clc
jne
mov
mov
lret
outsb
arpl
cmp
dec
mov
cwtl
inc
popl
xor
mov
jl
inc
das
and
outsl
xchg
clc
adc
pushf
or
push
cld
xchg
xchg
mov
mov
xor
jmp
cmpsl
inc
xchg
inc
arpl
add
clc
pop
and
cmp
or
and
lds
dec
xor
pop
xchg
jmp
mov
mov
inc
push
hlt
mov
inc
cmp
sub
mov
xchg
sbb
rolb
mov
adc
sub
pop
mov
insl
jmp
aaa
pop
sbb
cmp
jl
or
and
adc
or
orl
mov
loopne
andw
mov
mov
lret
and
lahf
jmp
pushf
push
and
inc
or
pop
clc
int
out
push
sbb
popa
stos
xor
leave
pop
xor
ds
inc
out
iret
dec
adcl
xor
and
xchg
popa
push
adc
stc
adc
add
or
pop
mov
nop
data16
dec
je
and
xor
addb
cmp
and
cmp
rorb
mov
inc
push
and
or
pop
cmp
ss
pop
dec
mov
or
imul
imul
add
add
or
psubusw
outsb
sbb
js
xchg
sub
add
add
ret
push
xchg
cmp
dec
jp
sbb
jle
ret
das
mov
dec
lods
sbb
lods
mov
pop
adc
push
inc
adc
pop
popf
sar
cli
jo
ret
dec
sbb
dec
out
mov
jb
pusha
cmc
out
mov
mov
std
adc
stos
adc
sbb
pop
jo
push
movb
adc
jo
mov
std
and
fsubs
arpl
sti
xorl
hlt
aaa
cmp
sub
test
leave
stos
pop
pusha
add
shlb
icebp
mov
mov
bound
xorb
pop
xchg
jmp
fs
inc
lret
jl
xchg
icebp
call
mov
push
movsb
push
or
adc
mov
lsl
cld
daa
pusha
mov
popf
or
cmp
mov
scas
xchg
mov
enter
daa
add
inc
test
nop
bswap
add
fs
sbbl
sar
cmp
push
add
push
push
or
jne
add
jns
and
out
loope
popa
sub
repnz
pusha
sahf
dec
dec
xor
lret
inc
inc
dec
dec
sub
js
cld
hlt
push
clc
jl
pusha
dec
push
pop
nop
xor
mov
pop
adc
and
or
dec
mov
loope
or
dec
daa
sub
btr
xor
leave
xor
xor
fiaddl
cmpsl
inc
dec
lcall
sub
bound
inc
jne
cwtl
pop
cld
cmp
movsb
rolb
sbb
add
daa
xor
cmc
popa
add
je
repz
ficoms
fst
es
adc
add
push
ja
xchg
mov
adc
cmp
inc
inc
jnp
adc
sbb
data16
adc
mov
sbb
sbb
mov
xchg
nop
xor
test
aaa
inc
dec
jne
icebp
insb
lods
jp
mov
sub
push
sbbb
jae
jb
outsb
mov
daa
shrl
andb
or
loop
rcll
sub
ret
lcall
lods
dec
fldt
pop
pusha
inc
fdivrs
sub
mov
jmp
mov
loopne
lock
ja
mov
jg
sbb
fsts
pop
inc
dec
fsts
lret
addb
mov
dec
mov
js
xchg
push
cld
aad
pop
fcom
fsubrs
sete
adc
fcoml
mov
jae
sahf
xor
pop
lcall
cld
or
mov
jp
mov
jle
push
mov
add
mov
dec
fs
js
cltd
test
dec
and
call
dec
pop
cmp
jmp
mov
rcrb
outsb
les
mov
mov
jmp
jo
mov
shll
jl
mov
pop
enter
pop
mov
sbb
js
and
ss
and
fs
daa
xchg
dec
inc
aas
mov
pop
vmovdqa
daa
into
mov
add
and
int3
jg
jge
repnz
clc
sub
inc
in
inc
mov
inc
push
sub
pusha
movsl
lea
arpl
pop
push
dec
mov
cld
inc
jl
jne
cmpsl
test
push
std
adc
inc
add
push
aas
cmpb
test
mov
mov
or
fs
xor
insl
notb
sub
shlb
sub
int3
ret
pop
pop
mov
add
mov
fs
xor
push
decl
movsw
orl
in
cmp
pop
pop
test
xchg
xchg
popa
mov
add
mov
shlb
jbe
shr
adc
repnz
and
jno
pop
andb
and
in
sub
xchg
int
xchg
jo
imul
adc
mov
xchg
in
add
into
js
xor
fs
mov
push
pop
mov
dec
sbb
adc
addl
ret
mov
dec
sub
lret
cmp
cmp
sbb
test
out
jb
push
and
in
mov
or
outsl
jb
push
or
outsl
mov
clc
in
rol
xchg
sbb
xor
repnz
dec
aam
adc
and
cmp
xchg
or
jne
in
and
pop
inc
enter
sub
pushf
pop
mov
adc
xor
adc
cmovne
xor
inc
es
dec
dec
dec
fmuls
cmpb
leave
inc
les
imul
inc
test
divl
ficompl
or
jnp
adc
xlat
pop
push
inc
lods
sub
fcoml
pop
or
sbb
fsubs
imull
fdivrl
push
idivb
lods
pop
insb
push
data16
stc
sbb
mov
fistps
addr16
adc
pop
mov
mov
mov
pop
popf
jne
addr16
cmp
mov
pop
data16
and
rcrb
jp
iret
in
adc
fwait
add
adc
subl
in
mov
inc
pusha
sbb
push
je
ffreep
lcall
adcb
or
adc
push
rorl
inc
mov
adc
adc
mov
cmp
or
shl
jp
nop
aaa
or
imul
fsubrl
fdivs
mov
jo
out
pop
dec
xchg
test
ja
or
nop
pop
fst
or
push
roll
push
inc
xor
xor
jb
rorb
add
es
fmuls
popa
imul
mov
jmp
cmp
popf
mov
ds
out
xchg
popf
lock
inc
push
sbb
adc
hlt
mov
fadd
lcall
sub
sahf
cmp
divl
js
mov
jge
popa
add
jae
sub
or
imul
insb
movsl
add
jns
stc
adc
sub
sbb
or
jmp
adc
js
sbb
mov
xor
dec
adc
insb
and
pusha
push
loop
cmp
cmp
xchg
sahf
and
xor
add
or
repnz
jle
fstps
add
lock
cs
dec
loopne
or
out
xchg
insl
sbb
fildll
add
mov
add
and
fstpl
fldl
insl
mov
daa
mov
or
mov
mov
add
enter
addb
in
iret
repz
push
fs
add
add
jnp
inc
loopne
xchg
sub
jnp
mov
das
sbb
mov
sar
jle
jns
popf
or
sbb
bound
popa
es
clc
sub
pop
movsb
pop
adc
and
ss
adc
sbbb
jo
dec
xor
mov
mov
adc
pop
adc
xlat
mov
cmp
ret
jno
adc
sqrtps
arpl
lock
loopne
mov
cmp
mov
stos
outsl
les
cmp
jne
mov
and
testb
mov
push
clts
inc
jno
cmp
or
and
fisubl
out
pusha
rcll
dec
add
aam
test
movsl
inc
arpl
xchg
loopne
bound
test
es
movsl
xorb
or
pop
add
cwtl
fdivrl
push
jmp
sub
enter
lret
hlt
aad
lret
cli
in
daa
and
pop
mov
adc
pop
cmp
mov
push
jb
push
enter
xor
popa
test
mov
ss
hlt
aam
std
xchg
and
orl
cmpb
mov
mov
mov
sub
mov
add
hlt
inc
daa
mov
cmpsl
daa
adc
push
jo
enter
std
mov
jmp
cmpsl
lcall
scas
sub
cmpb
cld
add
das
xchg
in
pop
call
in
movsl
jo
pop
mov
lods
inc
pop
test
jno
iret
loopne
arpl
cli
in
iret
je
jmp
push
mov
push
lahf
add
inc
sub
bound
imul
outsb
rcrl
mov
orb
ds
pop
cmovns
dec
xor
jnp
jle
cmpb
push
fistpl
les
inc
add
jb
outsl
imul
ss
add
jo
sbb
movsb
or
mov
push
cmp
stc
mov
adc
cmpsl
mov
cwtl
push
ss
push
call
pop
mov
jg
lahf
xchg
lret
jno
lahf
movb
mov
pop
pop
test
sbb
add
cmp
test
loope
jae
fisttps
in
loope
push
mov
or
sbb
add
aad
repnz
and
xor
or
call
les
dec
clc
out
jns
add
pop
pusha
aaa
je
ret
les
add
call
imul
pop
and
test
xor
add
mov
cmpsl
sbb
cmc
dec
imul
jne
jl
andl
adc
xchg
sahf
out
ja
or
inc
push
dec
push
nop
lods
aam
mov
das
jbe,pn
inc
daa
repz
adc
push
pop
pop
ds
push
dec
push
int
leave
js
xchg
dec
in
jb
cmp
rorb
push
inc
xchg
xor
mov
gs
xor
aaa
mov
loopne
lock
mov
push
xchg
in
mov
add
fdivl
jl
fcoml
fldenv
pop
mov
mov
inc
mov
jnp
out
cmp
sub
xchg
sbb
ljmp
push
xor
ja
inc
cltd
sar
insb
inc
push
test
xor
aam
or
xorl
fwait
sahf
dec
sarb
repz
add
adc
fiadds
sub
pop
push
aaa
sbb
push
mov
jbe
dec
pop
incl
push
aas
enter
pop
lea
aad
sarb
lods
test
loope
decb
test
fwait
mov
aaa
shll
jmp
inc
push
mov
mov
jne
imul
fsubl
cmc
shrl
sub
incb
sbb
and
cwtl
and
test
xor
repnz
and
movsl
jo
push
out
int3
popf
sub
subb
mov
sbb
test
out
dec
dec
inc
fcmovbe
jg
pop
aad
mov
faddl
cwtl
call
lods
cltd
xchg
fidivrs
adc
sbb
pop
mov
cmp
jne
fisttps
xor
jmp
sub
psubw
xchg
mov
pusha
rcl
je
ja
fdivrl
sbb
stc
mov
add
adc
mov
sub
je
inc
test
imul
jns
cmp
xor
adc
xor
and
mov
dec
outsl
or
cmpl
ss
lds
pop
dec
jp
fsubrl
xchg
ret
test
jbe
dec
shrb
je
add
or
enter
jp
orl
call
xor
fistps
or
dec
je
in
and
mov
test
adc
sub
dec
pop
imul
fucomi
mov
daa
pop
or
pop
or
xchg
push
and
jp
mov
test
stos
cmp
push
pop
mov
push
add
xorl
jnp
push
and
push
cs
push
mov
sahf
inc
nop
mov
hlt
gs
dec
mov
sbbl
sahf
fisttps
stos
ret
jmp
cmc
lods
pop
or
push
dec
mov
or
loop
daa
in
sub
in
je
incb
pop
ret
push
lret
push
xor
cltd
jmp
sub
rolb
sub
mov
jne
jnp
push
out
add
sahf
ret
xchg
push
push
je
lods
inc
int
push
adc
ljmp
ds
or
in
xor
pushf
inc
insb
cmp
inc
popa
sti
pop
jg
js
or
jge
jae
mov
cld
loopne
or
aaa
dec
ja
inc
add
shrb
jmp
femms
shll
inc
cmp
ds
pusha
mov
push
dec
cmpl
rorl
cltd
add
cmp
xor
lret
mov
call
mov
call
jle
das
nop
pushf
push
pop
fdiv
int
daa
addr16
test
push
inc
loope
ret
cld
push
add
add
daa
cs
add
pop
shll
and
scas
ror
adc
jbe
aam
cmp
add
mov
leave
mov
rolb
repz
and
mov
inc
pop
subb
loope
ret
dec
repz
pop
dec
pop
push
jo
jl
mov
mov
aas
inc
aam
mov
in
pop
cli
push
add
adc
jns
and
ds
jmp
xchg
hlt
mov
dec
mov
and
add
cmp
shll
int3
mov
xchg
xor
insl
das
pop
push
adc
add
inc
mov
fsubs
cmp
inc
dec
test
imul
mov
or
adc
mov
dec
push
test
pushl
imul
fadd
repnz
push
out
push
mov
cmp
cmp
shr
mov
andl
iret
jns
ret
dec
adcb
dec
mov
add
jno
sbb
or
mov
cmpsb
push
push
sti
dec
xchg
jae
push
call
cmp
add
dec
cmp
jne
incb
sbbb
and
andl
pop
push
dec
rorb
test
xchg
daa
js
inc
cmpb
push
sbb
cmp
inc
call
jo
sbb
jmp
xor
into
mov
imul
sbb
inc
out
cmpsb
sbb
pop
dec
sahf
dec
ss
sbb
rclb
or
mov
mov
inc
test
add
push
dec
imul
aam
sbb
fcoml
cmp
pop
sub
add
sub
insl
mov
and
js
sarl
jmp
test
xlat
movsb
inc
popa
test
sti
mov
pop
xor
pusha
mov
and
movsb
rolb
inc
jge
or
enter
mov
sahf
mov
pushf
pop
pop
fidivl
mov
test
jg
mov
mov
clc
jae
rcrl
mov
cmpsb
test
sbb
sti
cmp
xlat
test
or
xor
xorb
push
rcr
test
adc
sbb
call
and
cld
or
mov
mov
sub
aas
sbb
sub
hlt
xor
and
pop
roll
or
and
jle
movsl
push
lcall
es
cmp
push
data16
outsb
daa
jl
cmp
push
adc
jo
jns
and
dec
xchg
jge
pop
pop
cli
or
cli
test
lea
flds
mov
mov
xchg
lret
xor
aam
cmp
and
cld
insb
test
jb
push
div
fs
in
insl
xor
add
mov
push
out
clc
xor
imul
int3
jmp
clc
in
cmpsl
nop
daa
mov
inc
push
hlt
out
mov
sbb
push
sub
xor
sub
xor
aad
shrl
sbb
andb
sub
rolb
xchg
dec
out
repz
dec
or
dec
loopne
loope
pop
cmp
sub
shr
lods
inc
or
inc
adc
cmp
xor
dec
es
in
cmp
jg
add
movsl
mov
sbb
or
bound
sti
aam
mov
packuswb
std
jle,pt
jl
or
sbb
sbb
xchg
cmp
dec
notl
ds
and
and
mulb
jg
mov
push
add
mov
mov
add
mov
out
movsl
push
pop
outsl
lds
call
outsb
sbb
and
adc
insl
and
push
test
dec
pop
sbb
or
pusha
adc
sbb
mov
leave
xchg
xchg
push
and
sbb
enter
rclb
mov
dec
sbb
rcrl
in
push
push
sub
push
mov
test
xor
jno
insb
pop
inc
scas
addr16
insb
mov
test
pop
pop
orl
pop
sub
jbe
dec
test
xor
mov
inc
sub
sbb
mov
cmp
je
sbb
mov
dec
add
or
push
enter
mov
jecxz
inc
jmp
das
xor
addr16
push
xchg
fistl
ss
clc
mov
add
dec
or
mov
sub
and
jns
sbb
call
das
popa
mov
das
insb
jne
fmull
sbb
or
xchg
ror
or
scas
das
adc
cmp
or
jp
mov
mov
mov
push
ja
icebp
add
jg
and
lahf
sbb
mov
and
jecxz
add
dec
mov
rolb
cmp
mov
jg
pop
pusha
inc
into
push
pushf
sub
es
mov
or
mov
shl
sub
je
cmpl
cmpsl
jno
fists
add
sar
push
insb
sbb
or
xor
or
fmull
shrl
call
add
ss
adc
in
mov
cwtl
fists
adc
leave
bound
and
sbb
cmc
rolb
mov
iret
rclb
jp
daa
sbb
out
fs
mov
sbb
add
push
adc
loopne
ja
repz
sub
sub
pop
hlt
add
or
mov
imul
or
push
cmp
push
mov
cli
aam
loope
jae
jnp
aam
inc
insb
ret
or
mov
and
ds
scas
mov
dec
push
mov
bound
mov
dec
rcrb
imul
inc
lds
mov
add
add
cmc
sbb
js
and
jmp
cmp
jno
jl
enter
mov
mov
pop
adc
add
stos
adc
scas
pop
sti
lds
orl
lret
adc
and
adc
add
sbb
push
adc
sbb
and
adc
adc
icebp
adc
mov
add
and
mov
adc
inc
cmovb
xlat
adc
iret
outsb
cmp
jl
push
dec
jge
pop
xor
mov
cwtl
and
adc
push
outsb
mov
outsb
push
xchg
dec
jo
push
setne
out
fwait
bound
add
cmp
ss
or
add
pusha
addl
data16
push
pop
jo
jmp
add
test
jo
incl
and
mov
insb
ja
or
inc
inc
pop
inc
dec
mov
arpl
decb
add
dec
pop
imul
or
stos
add
cvtpi2ps
inc
ljmp
and
cmp
jne
jae
mov
daa
nop
xchg
and
jne
hlt
or
mov
cli
inc
sub
mov
push
sahf
xchg
jmp
pop
or
and
xchg
es
sbb
mov
hlt
pop
dec
pop
enter
sub
jnp
cmpl
sub
sbb
aad
inc
jo
adc
arpl
loopne
xor
inc
add
cmpsl
pop
mov
fsubrs
popa
pop
add
loopne
jle
mov
rcll
lcall
divl
jmp
sbb
xchg
loopne
adc
aam
lods
push
dec
daa
adc
pop
sbbb
pop
or
and
xchg
inc
sbb
add
leave
jno
cs
ret
jp
push
fstp
and
jge
cmp
jg
push
dec
cmp
out
mov
insb
sub
adc
jecxz
call
pop
loopne
mov
add
loopne
outsl
mov
call
insb
sbb
sub
or
rolb
popf
pusha
pushf
push
stos
jb
incl
dec
ja
repnz
xor
sbb
and
movsb
mov
mov
push
mov
outsl
dec
rcrl
mov
repnz
daa
inc
pusha
or
xor
dec
loop
push
and
jl
and
ja
and
inc
mov
pop
in
pusha
jne
adc
pop
jne
out
adcb
scas
adc
or
inc
and
sahf
pop
mov
insb
xchg
or
jbe
sbb
nop
sahf
xchg
and
aaa
or
notl
cmp
or
maxps
pop
pop
nop
ja
pop
xchg
cwtl
loopne
inc
fmull
adc
movsl
sub
mov
xchg
xchg
setle
inc
xchg
out
mov
push
sbb
sarl
pop
pusha
popa
sub
xchg
mov
add
sub
fs
add
or
bound
sbb
lds
mov
cmc
inc
das
pop
xchg
jmp
lcall
nop
repnz
sbb
push
daa
out
inc
push
mov
dec
lahf
push
bound
cltd
ja
add
xchg
ja
mov
xor
into
pop
push
dec
or
push
jmp
addl
adc
mov
xchg
pop
mov
mov
outsb
lahf
rolb
or
inc
je
dec
push
int
cltd
test
stos
xor
shrb
adc
out
popf
into
and
push
popa
and
xchg
cmp
loop
or
and
add
mov
cmp
ror
cld
ficompl
adc
and
adc
fs
frstor
wrmsr
rol
adc
inc
xchg
inc
pop
xchg
das
xchg
sbb
sub
cwtl
mov
inc
adc
sub
shrl
data16
add
nop
and
add
sbb
leave
into
xchg
clc
aad
fidivs
mov
btc
add
cmp
xor
xchg
xor
dec
adc
cmpl
outsb
adc
xchg
outsl
insb
mov
fidivs
leave
test
xchg
aas
or
and
adc
add
test
adc
test
inc
inc
or
sahf
fdivr
add
add
push
sbb
inc
lret
ss
gs
or
sub
cltd
cmp
cmp
inc
add
and
xlat
pop
sti
cwtl
scas
pop
dec
xchg
and
jmp
add
jne
lds
mov
sub
lret
test
cmp
lret
or
and
sub
sahf
mov
cld
addr16
cli
addr16
or
mov
pop
or
adc
cs
mov
sahf
adc
mov
adc
add
rorl
sar
push
cltd
cmpsb
xor
jg
or
call
adc
rcl
mov
lret
ds
jle
push
scas
sbb
dec
push
adc
xchg
test
outsl
inc
or
movsb
loopne
add
fmull
les
and
push
pop
ret
orl
pop
loopne
sub
dec
dec
pop
push
and
xor
sarl
loopne
nop
jp
repz
sbb
pusha
je
js
push
jp
shlb
fwait
sub
xchg
adc
xchg
out
shll
sbb
mov
pop
sbb
loopne
sbb
dec
in
call
cwtl
dec
sbb
int
cmp
ret
cmp
shll
sbb
lret
pop
scas
mov
add
pop
leave
dec
push
ret
push
push
cmp
add
or
addr16
sbb
movl
add
xchg
adc
sbb
and
mov
jecxz
es
pop
imul
das
or
inc
ficoml
sub
in
pop
fwait
popa
push
push
mov
and
and
insl
and
pop
pop
leave
push
add
sub
mov
out
ftst
sbbl
setl
and
pop
fildll
in
repz
ds
pop
cs
je
push
mov
jecxz
rclb
cmp
cs
push
push
dec
fistpll
outsb
inc
fistpl
xchg
jge
pop
leave
mov
lea
jae
push
das
add
push
out
cmpsl
push
sbb
cwtl
fidivl
push
and
lahf
in
in
mov
inc
push
mov
aad
and
add
xchg
ret
repz
xchg
adc
jo
jl
ss
adc
ret
test
fucomip
mov
lea
push
cmpb
mov
ljmp
or
mov
cwtl
loopne
insl
xor
into
lock
loopne
ror
xlat
pusha
inc
cmp
xchg
mov
xchg
enter
adc
in
pop
sahf
sub
out
sbb
inc
sub
cmp
ret
rorb
inc
mov
into
xchg
dec
nop
sub
jmp
fdivs
movl
xchg
jno
xchg
inc
xor
pop
arpl
dec
mov
pop
sub
cmp
pusha
mov
sbb
push
mov
inc
cmp
lret
pop
xor
xor
fisubs
nop
mov
iret
mov
pop
andl
mov
pop
adc
push
pop
mov
mov
enter
fadds
popa
pop
dec
fwait
mov
mov
jo
push
jb
cmp
loop
xchg
js
jg
gs
lret
add
pop
adc
imul
popa
insb
dec
data16
movl
push
arpl
pop
adc
aaa
push
imul
dec
repnz
rcrb
xchg
popl
cmp
jne
cmp
xor
lret
jb
pop
nop
or
mov
inc
mov
icebp
or
inc
jp
sbb
call
int3
cmp
fidivs
cmp
mov
sbb
icebp
add
es
adc
or
scas
in
push
mov
jle
dec
xor
xor
mov
cmp
loop
leave
xor
xor
inc
add
push
push
adc
movsl
add
ss
dec
push
adc
mov
mov
hlt
adc
rcl
test
cli
sbb
pop
push
jmp
push
jmp
fs
mov
add
cld
out
pop
mov
cli
mov
notl
movlps
and
int
mov
mov
dec
outsl
adc
adc
add
push
mov
imul
insl
mov
addl
or
inc
cmp
iret
push
mov
mov
xor
mov
push
gs
mov
icebp
nop
ss
pusha
pop
inc
test
test
push
inc
mov
mov
pop
or
push
push
divl
jmp
hlt
adc
movsb
and
pop
lods
cmp
movsl
test
mov
mov
faddp
clc
cmp
je
pop
inc
pop
dec
dec
negl
mov
in
xor
pusha
xchg
pusha
push
jbe
insb
sub
xlat
ljmp
jge
nop
test
inc
adc
pop
les
lret
pop
push
cld
outsl
add
mov
mov
mov
out
pop
or
xor
adc
sbb
or
and
lret
xchg
push
jne
sbb
sbb
sbb
sub
xchg
push
and
mov
test
lea
sub
lods
pop
adc
adc
push
cmpsb
xor
sub
xor
inc
pop
pusha
pusha
jb
inc
test
mov
movsl
xchg
loopne
call
inc
and
js
mov
or
sub
ret
cmp
push
cmp
stos
sbb
pop
and
rcll
sub
inc
adc
fcoml
xchg
xchg
xchg
ja
mov
xchg
mov
xchg
xchg
jo
jb
xchg
xchg
xchg
xchg
je
jbe
xchg
xchg
xchg
xchg
js
jp
xchg
xchg
xchg
xchg
jl
jle
xchg
xchg
xchg
xchg
pusha
popa
bound
xchg
xchg
xchg
fs
xchg
xchg
xchg
push
xor
mov
outsb
xor
xor
outsl
push
push
push
xor
xor
push
push
push
push
xor
xor
push
pop
pop
pop
xor
xor
pop
pop
pop
pop
xor
xor
pop
inc
inc
inc
xor
xor
inc
inc
inc
inc
sub
xor
leave
dec
es
push
cmpsl
or
push
jle
mov
ret
cs
push
es
pop
and
subl
scas
cmpsl
test
or
add
mov
ja
in
jns
mov
inc
xchg
or
lock
test
cmp
or
outsb
adc
add
add
or
jmp
adc
les
add
data16
xchg
fistps
xchg
adcl
or
or
clc
dec
dec
pop
pop
fidivs
je
insb
sbb
xor
push
data16
enter
lcall
adc
mov
outsb
gs
or
push
fisubrs
jle
jae
mov
push
or
xchg
das
cmpsb
pop
sub
fcoms
push
mov
pop
jo
outsl
sbb
push
inc
popa
jae
add
or
je
sbb
or
lods
rorl
push
inc
jl
or
adc
subb
ds
push
es
aaa
mov
insl
inc
insb
push
insl
jnp
push
push
je
into
insl
dec
outsl
jo
je
push
inc
add
insl
jns
sbb
mov
push
jb
gs
and
add
sbb
pop
pop
xor
pop
lret
mov
fnsave
aas
mov
negl
add
adc
pop
or
test
jne
pop
stc
sbb
test
jbe
mov
add
leave
or
lods
arpl
inc
inc
xor
out
fiadds
jb
jae
es
pop
outsl
stos
rcrb
xchg
stos
mov
int3
push
aam
mov
inc
or
adc
test
cmp
push
adc
mov
iret
sahf
inc
pop
in
mov
clc
lret
ret
xchg
stos
adc
add
mov
sub
mov
jg
and
insl
dec
sarl
lahf
stos
mov
push
les
je
xchg
pushf
dec
rolb
aaa
js
mov
stos
adc
pop
lret
shrb
iret
pop
adc
cmp
mov
push
push
les
or
addr16
fisubl
inc
jnp
pop
push
sbb
fs
lea
push
add
mov
inc
xchg
lods
add
cwtl
cli
jl
gs
fadds
mov
xor
or
inc
jge
in
jns
inc
push
loop
test
inc
push
mov
push
jl
lods
nop
sub
pop
xor
fidivrs
mov
lds
mov
sub
sbb
out
dec
push
les
addl
push
xor
sbb
ja
lock
add
sub
cmp
dec
jge
sarl
pop
nop
cmpsl
je,pt
lsl
pop
add
sbb
scas
ljmp
scas
sbb
call
enter
nop
lahf
pop
sbb
add
add
dec
sbb
add
test
lret
movsb
pusha
adc
cmp
jmp
pop
in
pop
daa
lret
and
addb
cmp
imul
rcrb
push
inc
popa
sbb
pop
sbb
shld
xchg
add
int3
frstor
ds
aas
push
jo
sub
mov
mov
test
push
adc
into
cld
insl
add
lods
and
ret
adc
add
jg
pusha
das
pop
fcoml
push
xchg
ret
popf
and
fadd
insb
xor
fcoml
push
out
scas
mov
ror
cmpsb
lret
mov
adc
mov
data16
loope
adc
pop
and
and
aam
mov
add
sahf
pop
or
or
fildl
in
inc
out
emms
cmp
jge
out
out
call
sub
mov
inc
xchg
es
lock
lods
pop
adc
call
add
and
push
leave
add
inc
mov
mov
mov
lock
push
or
push
xchg
jbe
sbb
addr16
mov
das
movsb
je
mov
fiaddl
push
int3
or
mov
inc
pop
push
jl
mov
mov
mov
and
push
hlt
dec
popw
lahf
testb
test
std
std
pushf
dec
push
dec
out
pop
fwait
in
add
in
or
or
fcompl
xchg
adc
add
data16
out
adc
outsb
or
insb
push
or
pop
xchg
addr16
sbb
xchg
adc
mov
sub
loopne
hlt
dec
xchg
push
je
push
dec
arpl
mov
movsb
or
xchg
push
mov
xor
mov
or
scas
loopne
fiaddl
repnz
adc
jo
push
mov
aam
hlt
push
push
lock
push
in
call
je
push
nop
xlat
xchg
mov
sahf
sub
xor
loope
in
ja
dec
pop
sbb
imul
xchg
inc
mov
je
lods
push
pop
aaa
sub
hlt
mov
ds
add
adc
lock
dec
popa
outsb
nop
loope
jmp
fimuls
shlb
add
jne
xchg
lock
jg
mov
addl
mov
arpl
sub
outsb
lods
dec
ret
adc
movzwl
dec
popf
mov
mov
popa
adc
mov
pop
dec
add
add
pushl
data16
mov
outsl
jne
sbb
aam
outsb
outsl
mov
roll
in
xlat
pop
inc
cmp
xor
outsl
dec
cmpsb
test
mov
pop
dec
adc
cmp
push
dec
or
sahf
add
push
addr16
out
xor
mov
sub
leave
lret
mov
mov
nop
adc
pop
test
out
mov
mov
das
pop
in
push
in
decl
outsb
js
or
rolb
xor
cvtps2pi
cmp
push
jmp
imul
mov
repz
mov
inc
mov
fists
sub
or
pusha
lds
sub
jmp
sbb
in
lea
cmp
cmp
rcrb
mov
xchg
inc
xor
sub
mov
aaa
icebp
cmc
mov
test
mov
inc
add
jecxz
enter
push
loope
int3
pop
mov
dec
or
lcall
and
lock
jge
push
jge
add
gs
push
enter
fnstenv
test
xorl
mov
jmp
cmp
xor
negl
shlb
xlat
mov
mov
adc
and
adcl
jl
repnz
cmpsl
or
shlb
adc
in
es
jmp
cmpsl
arpl
jmp
or
jb
movsb
arpl
or
movsb
cmc
pop
daa
dec
outsb
pop
dec
insb
repnz
and
lods
aaa
xchg
jbe
add
mov
pop
push
pop
jo
inc
inc
pusha
mov
pop
jle
pop
xchg
cmpsb
jb
add
out
xchg
xor
pop
gs
cmp
cld
xchg
fildl
inc
jne
push
and
addl
mov
pop
or
pusha
adc
jns
add
jbe
bound
in
and
push
adc
inc
addr16
outsl
dec
jg,pt
push
int3
shrl
jo
pop
imul
pop
inc
xor
das
inc
inc
xor
push
addr16
das
xchg
inc
je
inc
push
xchg
dec
push
adc
inc
insb
outsl
or
sbb
je
jg
pusha
mov
jg
sub
mov
inc
daa
pop
orl
lcall
aas
and
cmp
xchg
adcb
inc
fimull
mulps
int3
push
adc
adc
andb
repz
adc
imul
or
shll
inc
push
cwtl
cmpb
outsb
jne
repnz
adc
insb
and
iret
or
lahf
jno
sbb
arpl
jne
leave
sbb
mov
imul
push
lods
shrl
mov
rorb
scas
daa
or
in
das
or
test
mov
out
or
fcompl
ret
push
das
jl
cmp
hlt
sub
fs
pop
sub
ret
out
or
lock
movsl
mov
mov
test
mov
pop
lock
mov
push
dec
pop
inc
dec
inc
push
push
inc
push
add
std
xlat
ja
inc
inc
inc
push
dec
push
xor
push
pop
dec
inc
dec
dec
arpl
inc
inc
push
add
sub
adc
inc
push
dec
dec
push
mov
and
inc
push
xchg
inc
dec
dec
nop
aas
insb
lods
and
out
inc
inc
xor
xor
xchg
fcomps
stc
mov
inc
xor
inc
dec
mov
push
push
dec
sub
dec
lods
insl
imul
bound
das
sbb
mov
push
inc
inc
inc
das
mov
push
push
push
test
mov
int
push
dec
pop
adc
push
push
and
outsl
push
dec
push
inc
scas
dec
inc
dec
arpl
jecxz
adc
cmc
clc
pop
jg
xchg
mov
inc
mov
out
orb
test
and
cmp
daa
subl
mov
mov
jg
add
dec
or
sbbb
jne
add
add
or
push
mov
hlt
cmp
adc
std
sbb
idivl
pop
sbb
shrd
in
clc
push
dec
inc
or
cmp
add
or
jmp
add
adc
xchg
pusha
cmpsl
add
loopne
rol
jne
or
icebp
fsubs
inc
and
xchg
mov
jmp
xchg
sbb
dec
mov
add
shrl
aas
mov
cmpl
cmpsb
pop
cmp
sub
adc
icebp
popf
and
inc
push
mov
mov
ret
das
shl
dec
xchg
sbb
jnp
add
ss
ss
add
add
dec
jne
pop
shr
push
call
sub
pop
jnp
cmp
mov
mov
cwtl
add
incl
jb
movsl
jns
jae
and
fsubrs
out
sbbb
push
cmp
ljmp
pop
out
mov
or
stos
mov
mov
xor
ret
and
cmp
xchg
fisubl
test
mov
sub
ret
out
sbb
adc
rolb
enter
sbb
dec
sbb
je
rolb
jmp
adc
cs
mov
aad
inc
sti
fcomps
mov
adc
cmpsl
cmc
sbb
sbb
mov
cmp
push
nop
xor
xor
mov
add
clc
rep
pop
movsb
sub
mov
inc
fiaddl
cmp
imul
js
pop
push
sti
fwait
or
or
fisttpl
xchg
les
imul
cmpl
sbb
rolb
dec
inc
pmaxsw
xor
and
inc
cmpsb
rcl
test
add
mov
sahf
fwait
sarl
push
fildl
xor
sub
mov
pop
mov
inc
sbb
mov
or
call
sbb
jne
jb
out
aam
inc
push
pop
js
lea
xorb
fdiv
sub
mov
dec
sub
pushf
dec
mov
mov
fildll
xor
fsubr
mov
inc
push
das
loopne
outsb
mov
neg
push
push
sbb
ljmp
imul
or
imul
push
outsb
inc
sbb
sti
ret
mov
out
xchg
pop
mov
inc
pop
sbb
or
dec
negb
dec
sahf
mov
movb
and
aaa
faddl
adc
lods
les
cmpl
lret
xchg
and
mov
sub
sub
adc
stc
movsb
add
inc
movsl
add
in
add
jb
cs
fs
dec
push
cmpsb
pop
lock
jns
adc
mov
jne
fbstp
mov
inc
cmp
call
sbb
mov
negb
pop
jne
pop
sbb
jp
dec
cmc
push
leave
dec
in
push
or
and
rorl
or
push
cmp
mov
das
sbb
xchg
pusha
leave
lock
or
stc
mov
mov
sbb
pop
or
loopne
dec
inc
adc
loopne
mov
js
enter
dec
and
and
test
mov
movsb
push
stos
xchg
loop
nop
js
and
jb
aas
leave
sbb
loope
add
and
mov
fisttpll
inc
ds
sub
pop
mov
loopne
and
add
fmuls
xor
xlat
and
add
lock
lret
and
mov
and
data16
negb
out
das
cmp
and
adc
sub
mov
dec
or
add
mov
jmp
sub
jmp
je
inc
jecxz
ss
adc
repz
hlt
popa
gs
cmpsl
xchg
dec
mov
cmp
inc
adc
fdivr
or
loop
push
es
nop
add
in
dec
and
mov
cmp
add
das
adcb
or
inc
jle
and
cmpsl
xchg
jo
les
inc
sub
sbb
fcoms
inc
jb
gs
movsb
adc
sub
cmp
inc
and
scas
pop
sub
icebp
lret
pusha
mov
popf
xor
xor
mov
push
call
inc
push
adc
pop
dec
adc
inc
cmp
adc
cmp
dec
or
jge
or
dec
sbb
cmpb
lods
sbb
mov
push
mov
sub
or
sub
or
or
pop
rorl
xchg
push
sub
jnp
add
pop
pop
mov
or
add
lods
je
cmpsb
scas
in
or
shll
arpl
mov
es
cmc
leave
inc
xor
ds
sarl
dec
popf
dec
insb
test
inc
xchg
and
push
xor
ljmp
test
iret
sbb
sbb
sbb
sbb
sub
jns
xchg
rcrl
in
in
or
test
inc
or
jge
in
mov
fs
insl
push
mov
xchg
sub
rclb
fnstsw
mov
addl
and
add
daa
cs
nop/reserved
popf
push
ret
and
hlt
iret
adc
pop
shlb
iret
into
cmp
sub
inc
mov
add
xlat
mov
fldcw
mov
rcll
ljmp
test
mov
daa
jae
les
rclb
cmp
dec
jnp
inc
mulb
lret
jae
pop
aam
stos
xor
test
pusha
leave
dec
incl
or
or
sbb
adc
sbb
in
push
iret
inc
sbb
mov
pushf
pop
fstl
dec
mov
int
scas
sub
nop
popa
test
jo
fimull
xchg
leave
gs
ret
arpl
mov
sbb
out
clc
data16
psubsw
pop
inc
jae
dec
push
rclb
and
mov
cmp
je
dec
cwtl
shl
test
fistl
add
cmpsb
and
mov
sbbb
das
add
lea
mov
aam
and
sbb
cltd
mov
add
add
arpl
incb
dec
or
push
pop
push
xor
addr16
pop
push
cmp
or
shll
sbb
cmp
and
ret
je
dec
and
ret
mov
jle
jnp
dec
jmp
mov
jl
add
and
push
nop
xchg
jo
push
add
or
or
mov
pop
xor
push
xor
push
dec
xchg
adc
xchg
shlb
or
xchg
cmp
add
sbb
sub
adc
pop
xor
mov
sbb
and
pusha
shlb
or
shrl
xor
add
notb
je
sbb
adc
xor
sti
ja
in
mov
aas
rorb
or
pushf
xlat
xchg
pushf
fildl
outsl
daa
outsb
add
rcrb
xchg
nop
cld
inc
arpl
and
std
mov
add
sbb
ja
sbb
inc
push
aaa
aaa
mov
mov
fistl
leave
shlb
imul
add
aam
ret
pop
mov
insl
pusha
dec
push
aaa
fcmovnbe
enter
addl
push
jb
inc
addb
adc
int3
mov
dec
ret
mov
jge
fnstcw
fcmovu
adc
in
aad
js
xchg
es
push
push
cmp
int3
popa
or
pop
cmp
xor
aam
cmc
in
xchg
mov
aam
imul
aam
pop
mov
loopne
dec
aam
inc
movsl
pop
or
mov
pop
sub
and
sbb
in
push
mov
aam
jle
push
out
fmuls
jne
or
scas
pusha
in
xlat
ret
adc
sub
inc
sbb
or
or
outsl
ljmp
movb
push
or
mov
in
mov
add
shl
lcall
adc
not
and
aas
pop
rcl
xchg
dec
enter
jne
pop
pop
pop
aam
es
xchg
je
cmpl
add
pop
sub
test
add
jne
jbe
jo
nop
popa
and
jns
in
sbb
push
loopne
test
push
stc
ret
mov
enter
xor
inc
arpl
test
ss
dec
rorl
sub
in
and
and
xlat
repz
scas
test
push
mov
movsb
arpl
aaa
cmpsb
fdivrl
mov
push
push
sbb
or
daa
jnp
push
jp
mov
arpl
sbb
inc
inc
pop
fsubl
and
into
push
mov
lock
jmp
jns
pusha
lock
dec
add
or
mov
mov
sub
inc
inc
das
inc
popf
sub
inc
add
fs
sbb
push
lods
xchg
mov
data16
and
shrb
or
mov
dec
ret
pop
call
push
dec
cmp
mov
fisubl
loopne
fwait
sub
xchg
sbb
fdivrl
sbb
push
sar
int
aam
or
add
dec
ja
jp
mov
mov
add
dec
dec
or
push
sub
push
sbb
dec
lret
or
xchg
mov
dec
xchg
pop
sti
and
mov
imul
mov
add
inc
dec
jne
cmpl
or
pusha
imul
mov
add
pusha
add
fcmovb
fstpl
fiadds
mov
pop
aam
fidivrs
adc
mov
cmp
mov
bswap
shr
mov
dec
jns
jmp
out
pop
mov
jecxz
adc
jecxz
mov
mov
jmp
dec
cmp
clc
movw
dec
rcl
and
cld
push
mov
ret
orb
pop
ficoml
inc
mov
insb
mov
adc
mov
ss
xchg
xchg
cmpl
add
ds
fidivrs
imul
mov
dec
jp
std
lea
push
sub
cmp
cs
jmp
imul
out
or
mov
jne
fcmovu
imull
push
add
pop
mov
pop
shlb
je
mov
mov
ja
je
ds
dec
fidivl
adc
scas
push
pushf
mov
dec
das
jl
ret
xor
in
loopne
jmp
inc
mov
sub
sbb
arpl
into
add
cld
sub
daa
movsl
pop
push
cltd
push
pop
push
push
addr16
test
dec
ss
pop
mov
int
inc
aas
or
adc
dec
xchg
les
fmuls
test
popa
jge
mov
adc
sbb
fisubrl
push
xchg
mov
inc
push
sti
and
mov
aam
outsb
add
and
negl
ss
mov
push
mov
aam
and
sbb
cmp
add
lds
lret
ret
sbb
mov
push
lods
dec
pushf
fcmovnbe
push
and
push
push
scas
sbb
popf
sbb
add
das
test
ja
and
das
ret
sub
orl
call
icebp
nop
outsb
shrb
or
cmp
jne
push
rolb
gs
outsb
xchg
push
in
cmpsl
mov
add
cmpl
xchg
gs
aam
jmp
jne
push
mov
or
cwtl
cli
mov
movl
stc
adc
xchg
fstl
lret
call
mov
pop
fidivrs
enter
fisttpll
add
pushf
sub
rolb
push
cmp
rorb
adc
dec
les
cli
mov
mov
sbb
xchg
sub
jp
lret
aam
fisttpl
pop
ficomps
testb
ss
sbb
jo
push
dec
imul
adc
data16
decl
es
jle
cmp
jl
mov
enter
popf
cmpsb
cmp
jg
les
pop
clc
jle
xor
push
lods
mov
nop
push
and
pop
push
sbb
dec
ret
or
aad
xchg
or
inc
cli
sbb
add
fldenv
scas
lock
push
mov
orb
fidivl
jo
pop
arpl
cmp
out
push
mov
push
xlat
mov
add
add
scas
sub
scas
adc
inc
clc
or
in
sub
sub
sub
sub
mov
fdivrs
imul
sbb
adc
pop
lcall
inc
outsb
mov
push
jg
or
jl
push
cmp
sbb
dec
es
mov
push
mov
jmp
dec
jne
cmp
punpckldq
push
inc
push
xor
ja
js
xchg
xor
cli
in
mov
loopne
lock
push
test
add
sub
push
negl
or
es
lods
fcmovnbe
and
dec
enter
xor
mov
fldt
imul
enter
mov
cwtl
mov
mov
jbe
inc
pushf
lahf
jne
sbb
mov
and
andl
adc
cmp
shrb
sahf
shlb
in
rclb
int3
and
leave
xor
and
and
icebp
out
arpl
pop
or
add
mov
mov
loop
push
dec
inc
mov
pop
or
loope
jno
adc
sbb
test
test
bound
sbb
outsl
lods
gs
pop
dec
andb
push
outsl
loopne
sbb
pop
pop
mov
aas
add
sbb
cmp
jb
mov
je
clc
sub
mov
lock
fldl
xchg
or
add
je
dec
add
outsl
imul
jle
lock
jmp
out
jb
mov
and
jb
jae
jmp
lret
sbb
jecxz
push
imull
push
xor
cmp
popa
mov
ss
cmp
sbbb
sub
lret
pop
imul
pop
cmpb
ficoml
fdivrs
xchg
shr
fsub
sub
jl
mov
out
adc
inc
mov
sbb
or
adc
les
and
flds
loope
sub
add
cmpsb
adc
out
pop
cmp
add
xor
pause
cmc
add
adc
xchg
leave
adc
add
imul
hlt
inc
jecxz
stos
popa
ss
xor
fstpl
fstpl
clc
or
stos
rcll
ret
lods
xchg
rorb
es
jp
cwtl
adcb
inc
mov
xchg
test
and
add
push
push
jg
fildl
pop
cmp
inc
push
nop
cs
dec
std
jns
nop
mov
in
sbb
adc
mov
mov
inc
add
daa
aad
inc
add
mov
pop
push
push
in
hlt
xchg
scas
ret
ror
inc
call
enter
sbbl
rcrb
lock
jp
sub
fdiv
mov
or
jl
faddl
mov
shl
jl
ss
add
adc
xor
sbb
mov
xor
sub
inc
fmuls
fidivl
mov
dec
lods
mov
mov
or
lods
pop
push
pusha
andb
push
mov
fsubrl
jbe
mov
push
lods
mov
cmpl
hlt
shlb
fldt
sbb
in
in
ret
hlt
jae
pop
adc
hlt
jle
pusha
rcr
pop
leave
fcoml
jne
push
cmc
int3
xorl
xor
lds
ds
xor
movb
xchg
xor
adc
das
addr16
sar
cld
dec
loop
aaa
pop
mov
xorl
sbb
rorl
or
adc
addr16
pop
inc
mov
aas
test
jle
xor
inc
push
adc
pushf
pop
cwtl
add
out
fwait
or
aad
bound
popa
xchg
pop
dec
xor
arpl
and
or
dec
loopne
sarb
or
mov
mov
jne
add
mov
add
int3
dec
out
in
mov
mov
sbbl
in
xor
stc
adc
xchg
movsl
xchg
mov
or
pop
jne
cmp
cmp
and
dec
addl
pop
out
out
mov
mov
sti
mov
scas
mov
ret
pop
shlb
out
push
shl
rolb
mov
sbb
pop
adc
push
adc
xchg
repz
xchg
rcrl
ljmp
ret
outsl
pop
jb
pushf
call
outsb
sahf
or
dec
fistpll
push
and
ror
rorb
jae
xor
pop
jb
jmp
add
jmp
fnstsw
add
push
scas
mov
hlt
add
ljmp
orb
es
or
popf
sarb
sub
loopne
hlt
xor
add
arpl
adc
jmp
inc
inc
popa
dec
jl
sbb
jbe
test
into
je
xor
mov
ljmp
mov
dec
lods
add
jne
dec
aad
or
adc
sub
sub
pop
xchg
cmc
ljmp
es
push
test
sub
sbb
cmp
and
ljmp
addr16
bound
incb
lret
ja
imul
add
movl
add
add
int
scas
sub
push
pop
lods
push
lahf
outsb
and
adc
push
in
test
or
xchg
pop
and
rcrb
mov
in
jmp
xor
icebp
dec
pop
pop
fbstp
pop
ror
dec
repnz
in
aas
cmp
adcb
roll
aaa
incl
mov
push
iret
insl
dec
add
and
sbbl
pop
int3
push
rclb
mov
pusha
imul
leave
dec
pop
rcl
xchg
in
inc
add
push
or
add
ret
js
pusha
dec
add
jne
adc
mov
push
pop
nop
sbb
adc
push
lahf
fdivrs
imul
inc
or
or
insb
pandn
xor
cmpsl
cmp
test
push
mov
mov
or
push
fistl
or
btr
xor
sahf
push
lock
rorl
cwtl
push
mov
jns
or
xchg
in
aas
mov
js
and
adc
lds
loop
enter
jmp
movl
and
mov
jbe
in
into
jnp
jle
push
testb
je
fiaddl
jne
mov
mov
mov
pop
movl
movsb
or
loopne
dec
pop
cmpsl
lods
cld
scas
call
adc
add
jo
stos
pop
test
add
or
jno
les
sub
mov
and
repz
sbb
mov
sbb
sub
or
cmc
add
outsb
and
nop
dec
mov
fidivs
inc
bound
xchg
push
push
mov
dec
adc
stos
pop
xchg
outsb
test
outsl
ljmp
jae
loopne
pop
call
inc
adc
jge
pop
scas
or
push
or
sti
fs
xchg
icebp
jnp
sbb
pusha
ret
inc
mov
dec
or
faddl
icebp
js
pop
add
cwtl
add
push
shl
mov
add
sub
and
test
jbe
xchg
push
sbb
push
lods
cmp
lock
sbb
frstpm(287
jns
xchg
inc
push
and
lods
inc
shrl
fistpl
int3
sub
push
or
push
cmp
lcall
dec
cmp
cmp
lock
mov
inc
data16
cmpsl
hlt
cmp
je
mov
pusha
stos
aad
in
push
fiadds
and
sbb
inc
cmp
and
rcrl
insl
out
sbb
jle
loop
cmp
je
mov
pop
imul
mov
sub
push
adc
mov
sbb
inc
mov
lea
test
mov
test
mov
test
cmp
adc
dec
cmp
jne
adc
jbe
xchg
test
mov
jecxz
mov
icebp
jg
test
pop
test
pop
or
pop
sbb
mov
das
pop
fs
imul
jg
pusha
fcoms
or
mov
repz
mov
in
adc
and
mov
sbb
add
insl
cmp
mov
mov
or
inc
xor
inc
xor
pusha
pop
in
test
mov
or
cmpb
inc
sbb
bound
and
aam
shlb
dec
repnz
and
repz
inc
dec
jp
mov
pop
sbb
fadds
push
ret
dec
fdivl
xor
loopne
xor
and
or
push
adc
orl
andb
or
call
push
inc
pop
xor
jne
repz
xor
push
repz
movsb
sub
push
jecxz
adc
loope
adc
add
sbb
pop
jbe
adc
sbb
xor
ret
add
test
add
xchg
inc
nop
cltd
iret
add
xor
dec
cmp
jle
inc
add
xlat
or
xor
jo
hlt
add
add
loopne
ret
push
arpl
push
xor
out
add
push
sbbl
mov
xchg
pop
out
inc
nop
lret
sbb
rolb
sub
inc
arpl
jecxz
push
test
iret
mov
loope
mov
inc
ret
cmpsl
imull
dec
jp
andl
aaa
inc
push
or
sahf
leave
hlt
mov
adcl
fwait
movsb
movb
pop
data16
inc
test
or
out
popa
js
sub
fdivrs
out
push
data16
or
call
mov
sub
cmpsb
lock
imul
jge
xchg
push
test
sub
xchg
pop
fcmovb
lods
mov
in
xor
rorl
and
test
lea
aaa
xor
or
mov
cmpsl
add
dec
movl
and
mov
ja
ds
ficompl
stc
in
dec
jle
push
add
loopne
pop
insb
popl
or
jo
inc
sub
lea
das
cmc
adc
fbstp
mov
shrl
test
pop
push
ret
or
or
push
xor
and
mov
jns
movsl
mov
xor
add
dec
pusha
adcb
nop
push
test
sub
add
daa
clc
pop
test
flds
scas
adc
repz
pop
lods
and
push
addl
and
movsb
dec
inc
pop
and
cwtl
mov
cmp
ret
fstl
xor
push
ret
xchg
clc
xchg
in
jo
lods
hlt
orb
andb
sbb
subb
xorb
cmpsl
test
jmp
clc
inc
lds
cld
sbb
pop
mov
out
cld
inc
sub
push
or
jge
aas
rclb
inc
xor
flds
lahf
fcoms
sbb
inc
outsl
sbb
xor
pop
sub
daa
sub
sbb
xor
or
mov
rorl
push
adcb
mov
pop
in
jae
popa
sbb
ret
xchg
pop
inc
lcall
mov
icebp
mov
cmp
and
sbb
movsb
imul
jle
pfrcp
icebp
in
mov
sub
dec
sub
scas
shr
push
jno
add
add
stos
aaa
mov
pop
cmp
repz
dec
pop
sbb
sbb
punpcklwd
mov
xor
imul
xor
pop
leave
and
push
fs
pop
rolb
inc
fnstenv
add
loope
call
enter
call
xchg
mov
or
inc
or
inc
rcrb
sub
inc
sbb
pop
and
pop
mov
cs
add
mov
scas
or
mov
pusha
in
ffree
mov
adc
das
adc
mov
pop
push
notl
cmp
in
xchg
jo
aad
xlat
sub
pop
sub
mov
push
subb
testb
add
enter
loopne
lock
cli
push
and
mov
in
sbb
sub
inc
sub
sub
enter
sub
xorl
jle
jnp
adc
sbb
jne
loop
ja
xchg
test
add
addr16
adc
pop
xor
inc
xor
fstpt
push
cmpsb
fldl
cmp
inc
dec
add
cmc
rclb
mov
test
ljmp
push
adc
pop
sbb
je
mov
jmp
loopne
lea
and
in
sub
aas
jmp
je
sbb
or
incb
lods
and
in
pop
adcb
lea
cmp
jne
in
fwait
mov
nop
jmp
ja
dec
jecxz
mov
pop
sub
call
add
xor
pop
pop
mov
mov
mov
pop
fists
test
mov
aad
xorl
movl
lahf
dec
enter
pop
aaa
and
mov
data16
mov
jbe
je
adc
push
ja
jae
mov
test
mov
lahf
sub
mov
mov
pop
xchg
pop
inc
iret
jne
lahf
and
mov
inc
cmpsb
insl
and
ret
or
in
mov
pop
incl
cmp
xchg
dec
add
adc
inc
jmp
in
das
test
jo
jo
fucomi
add
mov
rcrb
xor
rcrb
xor
jno
lds
ja
pop
fsub
mov
adcl
push
or
sbb
inc
adc
in
push
mov
dec
movb
push
xor
pop
rclb
clc
mov
cmpb
pop
fiaddl
xchg
adc
push
fsts
push
jnp
je
call
orl
lret
rorb
sub
sub
xchg
mov
or
fsts
scas
orb
mov
push
sub
ljmp
adc
jmp
inc
mov
jo
pop
jno
inc
push
aas
sbb
xchg
adc
adc
movb
mov
cmp
lahf
sub
add
jae
sbb
adc
sbb
mov
mov
jmp
jo
not
inc
or
inc
jo
add
jl
jg
inc
and
mov
jecxz
lret
add
jle
jmp
enter
jo
push
xlat
dec
pop
push
icebp
mov
jg
add
push
xor
call
call
jp
mov
ljmp
sub
or
mov
or
test
es
daa
insb
inc
adc
or
xchg
dec
ja
adc
inc
lods
adc
ret
cwtl
lea
add
loope
xchg
test
xchg
or
dec
imul
adcl
or
cmp
xchg
jle
xorb
in
test
ffreep
filds
mov
mov
dec
mov
xchg
mov
push
enter
roll
sbb
cld
in
push
aad
orl
mov
scas
lds
jae
inc
pop
mov
int
push
mov
pushw
or
fdiv
out
push
sub
adc
add
inc
mov
sub
les
cmp
xor
je
pop
loopne
movsl
enter
xor
pop
push
lahf
add
sbb
push
aam
inc
fisttpll
orl
test
mov
push
xadd
cmp
pop
mov
and
stos
add
or
bound
test
neg
ja
inc
adc
dec
or
dec
clc
or
in
cmp
aaa
ss
je
or
jne
ljmp
push
insl
ss
dec
sbb
push
in
lods
xor
and
je
adc
rol
inc
xchg
or
adc
xchg
jle
mov
push
add
in
ret
and
xchg
pop
loopne
dec
mov
adc
dec
lahf
jmp
lock
jbe
mov
ds
xlat
cld
jns
in
adc
ja
and
call
or
vpmaxsw
test
in
jno
fbld
pop
lods
and
sub
cmc
aam
fdivrl
jmp
jbe
mov
cmp
cmc
sahf
shrb
scas
ret
stos
int3
std
mov
lock
repz
inc
in
and
pop
adc
inc
sbb
xchg
movsl
push
in
add
cmc
loopne
push
adc
dec
dec
jp
sarb
pop
or
pop
mov
stos
int
pop
movsl
mov
push
loopne
xor
in
inc
in
popa
stc
adcb
inc
nop
mov
fsubs
scas
lea
pop
mov
in
out
or
mov
jbe
adc
adc
mov
adc
fs
movsl
add
scas
and
je
ficoml
movsl
cwtl
and
adc
mov
test
inc
add
lock
in
movsb
pop
push
sahf
or
inc
ficompl
fisttpl
movsb
push
or
pushf
mov
fs
mov
push
fisttps
push
lds
loope
pop
data16
sub
adc
or
jo
loopne
add
mov
fs
test
jmp
or
and
xchg
mov
int
push
test
or
dec
push
jle
mov
mov
adc
test
sbb
fmull
sbb
adcb
pop
inc
sar
imul
mov
int3
mov
addr16
test
lods
daa
std
sub
fadd
les
mov
xchg
jle
insl
mov
and
bound
sbb
testl
fcom
push
jo
jg
fs
push
inc
mov
fadds
faddl
cld
xchg
loop
push
fisttpll
dec
cwtl
mov
das
push
pop
decl
push
jo
xchg
int
push
adc
xchg
mov
lea
sahf
mulb
out
dec
adc
into
or
adc
je
nop
lea
push
sbb
sbb
lods
imul
jle
adc
jmp
xor
add
lea
mov
jmp
push
sbb
xchg
fiaddl
push
movsb
clc
sub
and
or
outsb
inc
mov
push
and
inc
cli
ret
xchg
adc
jg
ret
fidivs
jp
push
add
mov
ror
dec
inc
rcrl
fcmovbe
loope
out
add
mov
and
sub
inc
xlat
adc
pusha
xor
sub
xchg
mov
or
lock
push
adc
roll
jge
and
imul
inc
mov
ljmp
dec
mov
push
cmpsl
jp
iret
push
or
inc
ljmp
hlt
mov
adc
inc
and
and
lds
nop
dec
sbb
push
repnz
add
mov
mov
iret
dec
or
xchg
xchg
and
ret
jb
and
adc
out
fbld
push
lds
rorb
loopne
pop
jmp
pop
insb
fbld
jge
push
xchg
or
clc
mov
dec
inc
or
xchg
stos
dec
sbb
push
inc
mov
or
mov
or
jge
and
or
lahf
dec
bound
mov
ja
adc
add
jae
add
shrb
and
jg
cwtl
cmpsl
or
jg
sub
pushf
push
pushaw
popf
into
je
xor
pop
push
imul
sbb
cmp
jae
inc
arpl
ds
adc
loope
subl
fdivrl
adc
inc
or
adc
sbb
or
fiadds
and
cmpsl
adc
roll
xor
or
fisubrs
daa
adc
sub
and
sbb
pop
jnp
and
or
ds
and
mov
push
add
xchg
cmp
adc
and
es
roll
loope
jle
test
js
push
addr16
jmp
inc
std
adc
sbb
inc
add
orl
add
cmp
lcall
mov
fwait
jb
inc
rolb
sbb
push
mov
dec
cmp
push
or
dec
mov
fdivrs
mov
mov
xchg
xlat
mov
mov
add
jle
xlat
lret
add
push
mov
aam
das
lret
add
pop
sbb
jo
sbb
test
scas
or
mov
mov
adc
leave
test
add
fildll
xchg
or
and
sub
adc
fistps
jmp
push
imul
adc
sbb
bound
push
pushf
jmp
sub
and
dec
or
in
add
loope
ja
mov
adc
mov
mov
add
les
or
xor
daa
cmp
add
add
add
pop
mov
inc
adc
enter
jecxz
adc
add
sub
test
cld
push
fidivs
pop
dec
in
subl
clc
add
call
mov
ret
add
jmp
test
sbb
and
fldenv
dec
jo
in
imul
lods
adc
push
ds
xor
xchg
or
aam
and
leave
adc
push
adc
inc
test
xchg
and
insb
mov
pop
fstps
je
jecxz
add
push
shlb
and
cmp
daa
pop
sub
cvttps2pi
movsl
jnp
add
mov
pusha
adc
cli
ds
sbb
push
jno
mov
pop
imul
or
xchg
outsl
adc
xchg
push
xchg
jo
or
cmp
sbb
adc
pop
pop
inc
dec
rcl
addr16
mov
mov
push
fidivs
mov
rolb
xlat
aaa
sub
movsb
or
or
js
mov
cmpsl
subb
daa
push
mov
imul
mov
pop
insb
mov
add
jnp
add
ds
xlat
pop
fcmovnu
push
enter
xchg
and
stc
xchg
push
mov
fists
add
pop
and
jnp
aam
add
or
push
imul
iret
xchg
movsb
xorb
sub
dec
imul
jne
mov
push
cld
ja
mov
pop
push
mov
and
pop
bound
test
fiaddl
mov
nop
icebp
ds
dec
inc
add
add
sub
sbb
add
pop
insb
add
out
add
xlat
scas
leave
push
inc
or
push
int3
add
cmpb
and
push
add
jno
lret
mov
sub
notl
outsb
jge
in
mov
add
fimull
shrl
jge
push
cmovge
je
mov
inc
mov
or
or
mov
testb
test
mov
fisttpll
mov
test
add
xor
lods
clc
inc
test
sbb
mov
popf
leave
dec
dec
or
and
xorb
add
xor
outsl
add
lahf
sub
enter
sbb
and
call
pop
add
nop
pop
or
cmp
jne
inc
cmp
ret
jl
inc
pop
test
push
mov
bound
daa
movsb
loop
jb
pop
mov
daa
daa
push
sub
les
add
sti
add
orb
aas
adc
add
xor
pop
ret
punpcklwd
pop
je
mov
mov
daa
stc
or
pop
add
icebp
nop
out
popf
mov
pop
mov
fcoml
fdivrs
pop
xchg
out
pop
sub
loopne
imul
dec
or
in
inc
insb
js
loopne
adc
mov
test
fwait
or
xchg
jle
pop
mov
clc
sbb
sub
mov
add
hlt
rcll
pop
shl
fwait
adc
pop
mov
push
sbb
pushf
push
mov
in
test
pop
test
add
subb
sbb
jmp
fsubrs
adc
adc
aaa
loopne
mov
pop
cmp
popa
and
ljmp
nop
lods
movsb
mov
iret
out
jl
cmpsl
and
inc
es
xchg
cmp
xchg
push
ret
nop
lahf
sbb
or
add
xchg
outsl
repnz
sahf
dec
jg
out
push
in
fs
inc
fs
movsl
andb
mov
cwtl
inc
je
mov
jle
or
push
stc
movsb
mov
mov
repz
jbe
idivl
push
cmp
sbb
or
outsl
jo
push
mov
stos
jno
imul
and
push
imul
pop
dec
pop
js
and
insb
pop
mov
and
outsl
int3
or
jl
mov
push
dec
gs
popf
mov
sbb
jno
or
xor
lahf
sbb
pop
and
xchg
jns
dec
xchg
pop
nop
outsb
sbb
or
aaa
les
push
push
or
jge
cmp
pop
pop
imul
fwait
xchg
xchg
pmuludq
push
pusha
pop
cs
pushf
push
dec
mov
sbb
add
sub
sbb
xor
mov
std
out
pusha
lea
in
jmp
ljmp
es
in
push
and
clc
nop
push
push
push
pop
lds
test
pop
and
fmull
xor
and
je
adc
or
adc
pusha
iret
int
xchg
fiaddl
dec
outsb
adc
rcrb
test
jl
push
add
aad
test
push
jbe
pop
sub
jo
jbe
das
or
or
dec
sbb
js
out
jns
or
or
sti
add
daa
adc
lds
push
or
pop
xchg
inc
inc
mov
mov
es
call
mov
mov
adc
enter
cmp
test
or
gs
inc
mov
movsl
inc
mov
mov
lods
or
rclb
stos
adc
push
cli
add
int3
inc
cmpsl
arpl
mov
and
and
and
cmp
test
call
es
push
mov
add
jecxz
cmp
pop
add
pop
xor
push
cmp
push
adc
jmp
inc
enter
adc
or
pop
jle
and
and
xchg
hlt
mov
pop
or
jmp
pushl
jecxz
jo
shlb
loope
sbb
or
aad
xlat
dec
loope
inc
nop
fucomip
sub
sbb
push
mov
fidivrs
clc
mov
cmpsl
jmp
inc
popa
add
or
lods
shlb
xlat
testb
sub
sub
or
jg
or
and
sub
sub
mov
mov
or
xlat
mov
inc
hlt
in
leave
mov
cmp
testb
push
push
sub
inc
xor
sbbb
pop
xor
ret
sbb
popa
ss
daa
enter
mov
imul
cmp
ret
jge
and
xor
adc
sbb
mov
push
ds
imul
clc
sub
xchg
lcall
rcrl
movsb
outsl
daa
test
dec
sbb
inc
dec
jbe
insb
cmp
xlat
and
adc
test
pop
pop
xor
mov
jg
je
add
cmp
dec
sbb
stos
jecxz
mov
jge
dec
mov
mov
or
sti
mov
out
mov
xor
pusha
push
addb
and
adc
addl
in
addr16
scas
pop
cmp
in
dec
dec
outsb
inc
jmp
pop
jmp
in
testb
cs
push
jmp
fwait
push
pop
jg
and
sbb
sbb
push
hlt
and
mov
or
pop
xchg
shlb
mov
js
into
leave
call
jl
sub
subl
dec
xchg
test
lea
jge
flds
cmp
insb
push
popf
push
aas
ss
lds
lahf
mov
stos
sub
jns
or
lods
xorb
test
mov
push
mov
adc
orb
jge
push
push
or
dec
insb
push
add
adc
push
pop
xchg
pop
xchg
pop
sbbl
jo
dec
cmp
arpl
cs
adc
add
xor
sbb
cmpl
cwtl
dec
and
je
or
fdivl
mov
inc
fstl
shlb
adc
pop
cld
xor
sbb
jns
and
mov
pop
faddl
mov
xor
aas
clc
js
add
inc
shll
jns
add
addl
cmp
mov
rclb
jp
loopne
lret
sarb
sbb
mov
dec
add
loopne
loope
orl
arpl
push
ror
add
daa
fistps
test
sub
stos
cmp
icebp
fwait
add
sbbb
xchg
lds
movsb
pop
cwtl
mov
nop
out
cmc
pop
xchg
inc
movq
je
mov
adc
lret
leave
dec
pop
mov
rclb
aaa
xor
movsb
add
push
jg
inc
sub
scas
movsb
icebp
outsb
inc
hlt
add
outsb
cmp
jg
dec
addr16
scas
or
mov
jp
clc
sub
cli
add
shl
fcompl
sbb
lar
in
add
lods
and
iret
sub
add
test
dec
mov
push
mov
push
jmp
gs
dec
into
sbbb
scas
int3
iret
movsl
pop
xor
push
hlt
iret
push
jl
imul
loopne
shrb
push
lahf
sbb
mov
cmp
iret
push
lret
dec
ljmp
or
and
sbb
pushf
or
lret
fwait
xor
je
cmpb
push
jns
push
push
test
ficoml
jne
fucomi
sbb
push
add
imul
pusha
aad
xchg
jae
dec
xchg
mov
inc
pop
in
ss
ja
inc
push
push
mov
ds
xchg
imul
jb
sub
das
add
dec
push
pmulhuw
in
inc
inc
cmp
out
in
xor
push
jbe
mov
sub
and
in
in
sbb
adc
in
in
or
add
jb
in
es
clc
hlt
pushf
adc
lock
sub
negl
add
push
xchg
xchg
sub
cmp
add
and
jmp
jno
test
clc
les
leave
cli
push
jge
sbb
sub
xor
and
adc
mov
sbb
jle
mov
mov
push
popa
pop
xor
adc
and
pop
mov
add
jmp
in
or
add
movb
imul
mov
jge
scas
je
bound
je
jb
inc
sarb
dec
out
insl
sub
adc
andb
loopne
add
jmp
sub
test
ret
ljmp
dec
adc
or
and
pushf
xchg
and
adc
adc
jns
sahf
pop
adc
sub
adc
sbb
or
cs
lret
cmpsl
and
xor
add
and
xor
and
push
nop
mov
imul
add
add
push
pop
sub
test
inc
add
gs
add
inc
sbb
sub
andl
pop
sbb
jne
cmp
dec
movsl
and
or
pop
stos
aas
lds
jmp
sbb
xchg
sub
cmp
add
pop
xchg
sbb
fcoml
or
lock
adc
fs
inc
daa
adc
sbb
or
aas
cmp
shrl
das
pop
and
jnp
loope
push
imul
imul
sub
es
and
lock
lcall
inc
or
or
sbbl
nop
adc
push
lock
rcll
sub
mov
xor
cmp
ret
aam
cmpl
jb
into
rcl
cmp
ret
push
xchg
rorb
loopne
or
or
insl
faddl
jg
inc
pop
xchg
push
lea
lea
jp
aas
nop
pop
movl
push
xor
xor
xchg
pop
lret
pushf
leave
cmpsl
xchg
shll
push
add
xchg
sbb
dec
push
push
dec
inc
pop
cmpsl
cld
shlb
xor
sbb
xchg
sbb
sub
xor
iret
jl
cmp
cmpsl
xor
sbb
push
add
daa
xchg
dec
enter
push
aam
int
ja
jne
xor
xor
push
les
pop
and
push
movl
fcomps
push
inc
fidivs
pop
and
inc
sbb
test
flds
xor
rclb
lahf
push
inc
lock
je
bound
push
xor
mov
mov
adc
fcompl
pop
sbb
sbb
or
sub
xchg
mov
test
xor
dec
mov
adc
inc
cmp
or
xor
inc
outsb
jne
jle
popa
jns
lock
and
jl
sub
add
pop
sub
add
repz
inc
cmp
inc
daa
or
out
stc
sahf
adc
adc
jo
jg
fwait
lret
xor
sbb
in
ret
push
push
pop
aaa
or
inc
push
mov
dec
es
or
xor
leave
xor
lcall
cmp
xor
test
lock
or
sub
cld
mov
pop
rcll
mov
cmp
dec
jns
cmp
inc
in
adc
ud2
inc
enter
imul
mov
cmp
movups
cmp
fbstp
push
imul
pop
fld
pop
lods
movlps
fsubrs
or
add
lods
cmpsb
inc
mov
unpckhps
jo
or
xchg
popa
jbe
mov
add
xor
jo
sub
gs
inc
outsl
pushf
sub
dec
xor
imul
aad
jnp
add
ss
pop
mov
dec
pop
daa
push
scas
cmp
and
xchg
mov
xor
dec
test
fdivrl
mov
mov
inc
movsb
fcoms
clc
jb
imul
cmp
mov
cmp
mov
mov
or
mov
iret
repz
lods
dec
push
push
pop
xor
inc
cmp
repz
mov
cmp
xchg
adc
xchg
push
mov
sub
mov
jl
repz
filds
mov
aaa
xchg
aas
sub
pop
filds
xlat
mov
mov
xchg
and
push
fsts
xchg
dec
dec
cmovl
cmp
dec
psubb
cmp
popa
mov
cmpsb
ljmp
jae
xor
mov
clc
pop
mov
sbb
push
sbb
call
inc
daa
jo
lods
aam
cmc
das
and
mov
jnp
pop
cmp
jmp
lahf
and
push
cmpsl
mov
adc
das
add
sub
sub
mov
inc
and
movl
pop
addr16
rol
xchg
adc
cmp
xor
inc
mov
frstor
xorb
xchg
sbb
cmp
sub
pusha
pop
rcll
ret
pop
pop
popl
dec
xor
hlt
hlt
pusha
xchg
dec
and
jmp
dec
lds
push
jno
mov
sub
call
sub
mov
mov
jb
int3
sbb
jae
dec
mov
in
and
sub
sbb
bound
add
or
sbb
xchg
sub
ljmp
mov
ja
pop
mov
add
sbb
sbb
cmp
xor
js
and
jne
cmp
pop
mov
inc
lcall
dec
mov
sub
and
push
sbb
xchg
adc
test
jmp
jne
lea
pop
or
cs
and
adc
sbb
in
insl
mov
cmp
sub
inc
dec
sub
push
ret
je
and
movsb
test
xor
and
packuswb
mov
jmp
aad
test
adc
and
mov
sbb
daa
mov
jne
mov
sbb
or
fsubs
pop
fxch
aaa
jne
js
jge
or
ljmp
cmp
pop
inc
inc
mov
adc
mov
mov
lds
das
lea
sbb
push
xlat
and
or
add
aas
lea
adc
adc
rorl
sbb
xchg
cmpsb
ja
add
daa
xor
mov
pop
addb
cmpsl
add
inc
pop
in
sub
or
lods
rorl
push
or
pop
es
mov
lods
sub
inc
pop
roll
push
mov
shlb
add
in
pop
xchg
inc
rcll
sbbl
push
and
mov
xchg
xor
fmull
ja
sbb
dec
adc
out
pushf
in
sbb
fadd
cmp
ja
mov
hlt
cmp
in
jge
dec
lea
shr
mov
into
mov
loopne
ror
roll
inc
jmp
mov
dec
sbb
and
inc
pusha
mov
ret
dec
sub
cld
cwtl
nop
daa
call
insb
xchg
xor
sbb
xchg
push
pop
mov
inc
adc
jne
cmp
and
mov
insl
inc
inc
cltd
cmpsb
cmp
xchg
lock
lahf
cmpsb
imul
in
mov
mov
sbb
nop
es
rolb
call
push
mov
jnp
xchg
fs
test
aam
mov
mov
cmp
outsl
test
imul
in
call
and
pop
jl
adc
xchg
inc
cmp
out
xor
sbb
cmp
lock
dec
sbb
stos
inc
lcall
clc
or
addr16
cwtl
lahf
inc
xchg
push
and
arpl
rclb
shrb
cmp
es
mov
aas
sub
mov
inc
movsl
loope
mov
je
dec
sub
or
push
rclb
test
in
xchg
out
xor
and
cmp
ds
adc
das
and
add
cmp
mov
inc
lods
inc
cwtl
add
sbb
sub
les
xchg
add
leave
adc
xor
nop
js
cmp
sbb
jmp
push
adc
inc
push
fs
adc
add
in
sbb
pop
movsb
inc
out
cmpl
inc
js
inc
arpl
dec
je
subl
icebp
and
or
out
jne
and
je
cmp
mov
nop
push
repz
out
out
xchg
inc
inc
xor
dec
sbb
xchg
or
cmp
popa
dec
mov
sbbb
popa
xchg
sbb
push
in
xchg
rcr
leave
arpl
not
jne
test
neg
sbb
push
addr16
adcl
dec
js
xchg
xor
je
loopne
daa
inc
lret
sub
jl
dec
gs
insb
jo
je
or
xor
movsl
fisttpl
inc
dec
out
sbb
mov
les
cmp
pop
nop
and
push
test
and
pop
pop
repnz
adc
sub
and
push
sbb
fs
fs
xchg
inc
push
push
cld
pop
and
insl
arpl
push
dec
dec
pop
mov
jnp
adc
popa
je
inc
daa
push
or
fldcw
maxps
xchg
les
in
push
das
push
inc
outsb
lea
and
outsl
ja
mov
mov
adc
pop
outsl
jae
push
jg
fbstp
leave
mov
insb
ret
dec
inc
subb
jae
xchg
decl
loope
inc
ds
inc
mov
push
push
dec
pusha
push
fs
push
cmp
pop
popa
testb
inc
dec
dec
sbb
xchg
jg
andl
dec
test
fsub
adc
xlat
inc
les
das
push
les
pop
call
mov
or
sbb
jge
daa
push
insb
dec
add
je
stos
sub
loopne
push
cmp
add
dec
and
and
sub
pop
test
data16
dec
out
leave
sbb
mov
jle
decl
ja
in
sub
cmpl
or
and
mov
and
and
and
and
and
and
and
int3
rcl
and
and
fcomp
loopne
and
and
call
das
and
clc
cld
sbb
add
and
and
or
adc
and
and
sbb
and
and
and
sub
xor
and
and
rorl
ret
sub
out
inc
test
fsubr
mov
jno
mov
arpl
daa
nop
fidivl
mov
xor
sub
add
add
and
mov
stc
or
gs
nop
dec
or
cmp
gs
sub
pushf
inc
mov
push
movsb
push
test
lods
pushf
lret
push
mov
mov
push
sbb
push
addr16
sub
rorb
lcall
xchg
add
push
movsb
xor
inc
aam
sbb
faddl
add
loopne
test
pushf
call
add
lock
hlt
call
clc
cld
cld
push
adc
dec
addr16
push
and
and
inc
push
push
movsb
xor
adc
nop
lret
js
inc
sub
push
test
test
mov
int3
xor
xchg
add
in
cmpb
xor
push
sbb
dec
scas
ljmp
pushl
mov
and
adc
xchg
jp
je
gs
gs
mov
or
inc
insb
outsl
jae
and
sbb
mov
xchg
adc
nop
bound
add
mov
adc
aas
imulb
pop
inc
je
daa
test
je
adc
sub
test
inc
adc
cmp
aas
sbb
mov
mov
adcb
dec
jae
fsubrs
and
fs
lea
adc
push
jp
jae
sbb
or
inc
outsl
xchg
xchg
and
aas
pop
pop
pop
dec
inc
fidivl
lods
cmp
pop
ficoms
dec
or
popa
xchg
sub
lock
or
adc
sub
mov
lcall
add
fdivs
pop
adc
xor
and
inc
fidivrl
sub
jns
xor
outsb
add
fidivrl
imul
push
outsb
lock
sub
daa
rcr
adc
in
pop
xchg
sbb
pop
pop
xchg
inc
xor
out
push
sbb
ja
and
xchg
or
jns
inc
pop
je
addr16
jne
sbb
pop
fs
movb
mov
das
pop
popf
in
int
inc
xchg
cmpsl
jno
arpl
arpl
or
push
xchg
xchg
popa
add
push
mov
sbb
mov
hlt
sbb
insl
add
icebp
into
cmc
push
xlat
lea
int3
inc
jne
xchg
push
add
jmp
dec
xor
jg
daa
aad
mov
xchg
test
jae
jnp
or
inc
clc
test
iret
mov
dec
aaa
fildl
nop
jo
mov
push
cmp
cmp
sub
fisttpll
addr16
sub
imul
insl
xchg
and
xor
xor
sub
xor
dec
dec
ret
push
fldcw
xor
push
out
mov
lcall
repz
jge
mov
pop
adc
outsl
pop
js
out
sbb
aas
fs
pop
pop
es
ja
jnp
jb
jb
popa
or
gs
mov
add
data16
es
sti
pop
pop
scas
gs
pop
jo
addr16
jb
addr16
add
insl
lods
mov
inc
cmpsb
insb
daa
push
sahf
out
mov
je
outsb
insb
fstpt
loop
sbb
and
xchg
pop
lcall
cmp
pop
je
jo
mov
bound
jns
outsl
imul
das
add
in
jnp
imul
gs
nop
imul
mov
aas
push
fmull
mov
mov
pop
xor
xchg
shlb
jnp
sub
pop
mov
sbb
xlat
cmpsl
pop
cmpsl
push
cmpsl
push
dec
aaa
or
mov
mov
mov
inc
loopne
in
xchg
sbb
and
or
adc
mov
cmp
jbe
adc
std
les
dec
add
addr16
dec
fsubr
cmpb
js
push
or
or
nop
cld
in
push
ret
or
adc
mov
addr16
mov
mov
ret
inc
inc
mov
fstpl
jmp
popf
dec
dec
mov
stos
adc
icebp
movsl
int3
and
sbb
mov
into
loopne
push
stc
iret
fdivrl
mov
xchg
xchg
testl
cmpb
push
mov
movb
lahf
mov
xchg
mov
lock
inc
test
adc
and
rorb
dec
test
dec
jmp
sub
dec
pop
add
mov
movl
loope
adc
xchg
add
pop
nop
push
or
sub
inc
mov
cs
push
mov
jae
jmp
push
in
pop
dec
pop
xor
shll
add
add
push
repz
filds
pop
or
or
or
or
or
or
cmp
adc
adc
adc
cmp
repz
pop
sbb
sbb
iret
repz
and
and
fcomps
out
ss
loopne
push
negl
sbb
sahf
out
sahf
cmp
jg
jns
out
mov
repz
out
pop
pop
sbb
cmp
repz
dec
pop
insl
jle
mov
mov
rcr
in
js
addr16
pop
or
and
sbb
imul
movsb
jb
add
cs
push
push
dec
sub
xchg
lret
or
or
movsb
jb
in
sbb
sbb
pop
push
mov
sub
movaps
and
adc
in
xor
xor
pop
push
mov
adc
inc
push
inc
pop
and
sbb
xchg
lret
sbb
movsb
jb
pop
sbb
in
cmp
xor
sbb
test
imul
dec
in
arpl
fs
dec
in
aas
and
and
stos
push
and
and
inc
add
rcrb
sub
and
add
sub
or
js
test
lahf
adc
orl
push
jmp
inc
lret
aaa
dec
cmp
roll
pop
scas
or
add
call
mov
ds
cwtl
test
and
nop
jo
push
stc
clc
push
adc
push
add
incb
call
jp
mov
add
lock
out
sbb
int3
mov
push
ja
ret
sbb
cli
je
add
push
loopne
push
or
mov
sub
dec
int3
mov
dec
push
mov
loope
or
and
ja
rorl
cltd
fsubl
xchg
or
pop
or
sub
lcall
decl
cmp
push
pop
mov
js
aas
xchg
scas
pop
and
push
mov
pop
adc
repnz
push
div
cmp
pop
inc
jo
dec
outsb
mov
imull
mov
outsl
pusha
pop
leave
sbbb
cwtl
jb
sbbb
pusha
pop
jb
add
pusha
pop
add
xchg
dec
fs
or
xor
cmp
insb
sbb
inc
push
cld
imul
insb
mov
mov
mov
mov
mov
push
pop
pop
dec
push
push
inc
and
mov
mov
loopne
add
push
push
push
shl
les
data16
das
mov
or
and
mov
push
lods
mov
inc
nop
xchg
insl
inc
jl
js
xchg
sbb
adc
ret
popf
lods
inc
sub
inc
mov
adc
mov
pop
dec
outsb
mull
xorb
clc
movb
add
jl
mov
push
mov
aad
cmpb
pusha
fmuls
add
mov
add
adc
jb
pop
pop
jne
int
mov
mov
inc
sub
adc
or
cmp
mov
adc
loope
ljmp
mov
jmp
pop
or
pop
pop
jae
inc
jo
or
sub
fs
inc
add
lock
lods
lret
cwtl
mov
push
dec
enter
pop
stos
clc
cmp
or
or
xchg
mov
fbstp
je
pop
xchg
dec
xor
xor
js
clc
inc
insl
in
pop
decb
bswap
leave
leave
leave
xor
xor
leave
leave
leave
leave
xor
ss
leave
leave
leave
leave
cmp
cmp
leave
leave
leave
leave
cmp
ds
leave
leave
leave
leave
and
and
leave
leave
leave
leave
and
es
leave
leave
leave
leave
sub
sub
leave
leave
leave
leave
sub
cs
leave
leave
leave
leave
adc
adc
leave
leave
leave
leave
adc
push
pop
leave
leave
leave
leave
sbb
sbb
inc
and
iret
sbb
insl
stc
iret
repz
push
or
adc
out
ss
clc
or
add
cmp
rep
cld
loopne
fsubr
repz
repz
enter
repz
aam
int3
mov
test
iret
repz
mov
cmp
pause
movsb
mov
xchg
js
jo
push
jl
je
insb
repz
repz
fs
pop
inc
iret
repz
push
cmp
sub
repz
and
sub
cmp
repz
sbb
out
sahf
int
idiv
or
add
repz
call
fsubr
cmp
repz
in
fadd
repz
repz
int3
mov
cmp
cmp
test
mov
dec
jb
in
jne
in
pushf
mov
das
fs
inc
movsl
divl
and
arpl
pop
stos
add
adc
pop
int3
loope
or
inc
and
leave
adc
js
dec
mov
lahf
js
movsb
data16
pop
inc
clc
fidivl
in
add
pop
add
push
sbb
das
out
data16
push
scas
push
pminsw
test
add
std
mov
or
and
imul
pmulhuw
outsb
test
push
pop
sub
in
push
add
and
sbb
pop
addl
fs
pop
add
mov
or
dec
stos
mov
inc
test
xchg
inc
cmp
or
push
test
xor
mov
lcall
dec
add
inc
enter
jl
mov
inc
decl
sbb
test
jne
mov
mov
adc
les
ret
pop
cmp
add
push
sbb
and
aad
inc
jge
adcb
pop
sub
mov
dec
xor
addr16
adc
cmc
dec
sbb
ret
outsl
popa
in
jne
xchg
xor
or
mov
pop
add
inc
or
push
pop
pop
scas
cmp
loop
pop
aaa
div
adc
cltd
dec
jb
inc
out
cs
call
insb
call
mov
add
dec
mov
xchg
push
call
add
push
inc
or
lock
jnp
imul
and
and
leave
ja
pop
cs
loop
sub
and
cmpsl
daa
mov
jle
adc
mov
add
add
dec
or
fcom
inc
dec
aaa
bound
out
push
fcmovbe
ss
jns
pop
dec
outsb
inc
gs
fiaddl
in
lret
xchg
outsl
pop
or
and
and
or
int3
cli
nop
into
call
dec
test
mulb
pop
inc
push
imul
insl
aad
lea
pusha
pusha
cld
or
jg
test
mov
pop
sub
insl
fs
addr16
push
add
inc
imul
adc
popa
sarb
cmp
int3
lods
or
mov
out
pop
sbb
mov
jl
pop
js
cld
leave
out
fcoml
je
das
jo
enter
iret
insb
mov
mov
push
pop
cmp
xlat
sub
and
or
mov
jb
loopne
jno
imul
sbb
jne
mov
lock
mov
in
add
stc
xor
push
popf
inc
mov
cs
test
mov
cmp
pop
dec
sub
pop
pop
inc
mov
mov
shll
cmp
mov
daa
xor
inc
hlt
ret
inc
mov
dec
mov
add
neg
mov
imul
insb
or
xchg
insb
mov
add
or
insb
fcom
or
push
insl
inc
xor
imul
inc
add
push
mov
notb
inc
add
fldt
rcrb
movups
xchg
push
add
test
hlt
or
and
dec
in
and
pop
and
test
adc
je
outsb
mov
loope
std
and
mov
in
mov
icebp
adcb
movb
pop
jb
push
iret
insl
jmp
xchg
insl
lock
or
cmpsb
lret
and
mov
psllq
pop
and
enter
loopne
pushf
mov
in
insl
jb
sub
push
ror
in
jae
shld
loopne
xor
and
loopne
iret
repz
outsb
jne
jg
sub
repz
dec
push
pop
gs
rep
or
add
call
xchg
test
aaa
fs
test
jl
fcoms
decl
stos
in
xchg
and
jp
iret
add
test
adc
and
sbbl
dec
push
pop
je
mov
test
push
adc
adc
je
adc
xchg
dec
enter
push
dec
pop
fbstp
sbb
inc
fisubl
int
sub
mov
je
cld
mov
insl
jne
ret
rcrl
aad
pusha
test
add
sub
sbb
sti
rorb
adc
push
cmp
daa
fisubl
outsb
push
fistps
mov
and
or
sbb
xchg
outsl
movsb
jne
xchg
inc
add
hlt
out
add
scas
and
stos
sbb
jge
cmc
mov
rorb
ret
or
stc
ret
rol
sub
ret
add
lods
or
mov
fldl
sbb
push
lahf
dec
cmp
dec
test
js
add
loopne
adc
push
in
pop
sbb
push
fs
mov
test
add
addb
dec
ror
push
mov
nop
push
xor
and
jg
add
dec
dec
arpl
aad
sub
push
in
xor
xchg
pop
jl
cld
lds
jne
or
in
in
and
add
or
clc
iret
in
leave
shrb
cmp
test
cmp
popa
xor
add
inc
mov
js
adc
sub
clc
jae
bound
or
jmp
jl
mov
inc
sub
sub
and
std
and
sub
push
pop
sbb
cmp
sub
sub
and
push
or
xor
cs
add
movb
add
xorl
add
or
xor
leave
jg
dec
add
and
je
enter
aaa
lock
gs
jne
stos
add
mov
inc
mov
or
push
push
sub
add
push
fldcw
gs
adc
xchg
aas
mov
push
or
cmp
pop
adc
push
push
stc
jne
ljmp
jne
jo
inc
call
mov
fsubl
pushf
ret
mov
mov
test
in
adc
mov
or
jne
dec
pop
mov
aas
add
or
xlat
mov
and
daa
add
sbb
cmp
pusha
cmp
xor
pop
xor
mov
test
stc
adc
sub
ja
loop
outsb
jo
and
cmp
xor
or
and
cld
jle
dec
inc
sbb
or
or
add
sbb
adc
cli
pop
jno
in
movsb
sbb
lcall
adc
adc
xchg
adc
pop
shl
repz
adc
nop
fistpl
es
inc
emms
fs
adc
xlat
rorl
mov
lea
das
jnp
pop
pop
mov
xchg
les
push
jp
mov
cmpl
add
mov
xor
lcall
mov
jbe
push
dec
dec
dec
inc
dec
push
add
and
pusha
mov
and
and
mov
xor
aaa
aaa
sbb
sbb
add
mov
shll
xor
ret
and
arpl
pop
add
lds
pop
mov
sub
pop
adc
jno
pushl
sub
jb
jne
mov
insl
outsl
sbb
and
cmp
pop
pusha
inc
repnz
loop
lods
and
xchg
popa
fdivl
push
lock
sbb
sub
les
or
sbb
pop
adc
hlt
mov
xchg
sbb
jnp
mov
inc
movsb
mov
xchg
xor
mov
in
lds
lcall
gs
sbb
ret
cmp
bnd
movsl
cmc
or
or
inc
pop
xchg
pop
sarb
pop
pop
adc
pop
adc
cmpsl
loopne
or
push
mov
add
jp
movsb
jne
mov
aaa
je,pt
adc
mov
daa
dec
dec
cmp
inc
and
jnp
test
push
out
add
lahf
outsl
xor
add
sub
sar
or
rcr
add
shlb
sbb
add
push
mov
aaa
inc
jae
jb
cmc
inc
rcr
cs
push
push
fstpt
insl
pop
lds
lods
xchg
mov
add
fnsave
shrb
add
add
dec
mov
add
inc
jb
pop
ret
adc
adc
repnz
and
jl
xor
mov
xchg
fsts
lahf
inc
mov
test
push
iret
jnp
sahf
in
dec
push
mov
push
idivb
xchg
mov
pop
and
or
mov
jl
inc
cmp
ret
lods
cmp
nop
inc
mov
or
sbb
pusha
lock
adc
cmp
sbb
push
inc
cmp
push
or
in
sbbb
jge
xchg
inc
fs
in
xor
int3
mov
daa
mov
push
cs
adcb
sar
adc
dec
dec
clc
mov
push
adc
inc
bnd
inc
js
jle
jle
jo
mov
mov
xchg
xchg
mov
xor
insb
mov
cld
data16
aas
push
jnp
or
imul
or
inc
wrmsr
les
and
jb
and
jg
jle
movsb
and
cs
inc
adc
roll
shlb
pop
in
adc
loopne
pop
fadds
in
and
adc
outsb
cs
push
sbb
nop
movl
rorl
shlb
lcall
adc
pop
sbb
inc
add
add
mov
dec
scas
add
mov
negl
inc
jo
sub
repz
mov
fs
pop
shlb
jnp
loopne
dec
hlt
push
cmpsb
mov
or
ret
mov
push
mov
add
push
xor
or
or
cmp
dec
lock
insl
bound
in
add
or
push
loop
loope
leave
inc
add
inc
add
xorl
aam
insl
fs
xor
inc
jne
js
xchg
cmp
ja
repz
sarb
inc
mov
pop
in
fimuls
adc
or
fcoms
or
cmp
mov
sbb
imul
or
cmp
out
imul
rorb
sbbb
clc
enter
outsl
jb
add
push
popa
imul
jne
add
or
imul
mov
or
jns
sbbb
lea
add
frstor
popa
xor
mov
icebp
test
rolb
mov
aaa
xchg
pop
out
push
push
push
adc
dec
jae
std
dec
lock
xor
or
out
sub
pop
js
fadds
das
inc
subb
or
js
fstp
xchg
mov
or
repnz
and
testb
decl
or
ja
adc
subl
sub
dec
mov
pusha
dec
or
sbb
fwait
add
ret
mov
insb
aam
lds
add
int3
sub
imul
add
inc
xchg
test
int3
mov
adc
and
testl
dec
pop
push
jb
add
xor
cmp
jnp
jne
or
outsb
jb
push
and
rol
push
lcall
sub
cmp
adc
dec
addb
outsb
dec
pusha
fildl
repz
mov
adc
push
testb
adc
cs
dec
test
aam
call
gs
push
cmpsl
addb
push
ja
lods
or
ja
and
add
mov
cwtl
mov
pusha
add
add
mov
xchg
mov
pusha
push
outsb
and
icebp
das
call
out
or
cmp
adc
sub
dec
cmp
add
stos
mov
xchg
xor
leave
or
xchg
daa
shrl
xchg
sbb
roll
dec
adc
sbb
in
mov
fisttpll
jnp
adc
add
add
das
xchg
xchg
add
add
out
add
das
mov
mov
mov
xchg
push
jp
add
push
pusha
rolb
mov
fadds
sbb
fwait
and
xchg
jnp
clc
mov
or
inc
gs
add
pop
out
rclb
pop
in
and
testb
fadds
xor
decl
and
gs
flds
loope
or
orps
xor
pop
sub
loop
cld
sub
mov
or
andnps
and
mov
ja
cmc
repz
out
and
popa
jo
add
jo
adc
stos
iret
mov
int
xchg
push
mov
inc
cld
pop
lcall
jns
or
pop
jmp
es
mov
testb
jmp
add
add
fisubl
or
mov
dec
mov
fidivrl
fisttpl
and
insb
fisubs
push
in
dec
ss
mov
sbbb
mov
fucomp
iret
int3
cmpsb
rol
lock
pusha
cmp
ud2
test
pusha
test
add
add
pop
aad
std
add
add
add
inc
clc
add
decl
add
add
or
or
mov
mov
mov
mov
mov
mov
mov
mov
aaa
cmp
cmp
sti
ljmp
call
jmp
lcall
loop
loope
jmp
fdivrp
fdivr
fcos
fdivr
xlat
call
call
call
call
call
call
call
push
lock
dec
pop
into
dec
dec
dec
dec
les
leave
dec
loope
push
fidivrs
pop
add
loopne
jecxz
in
push
or
pop
sahf
addr16
mov
cwtl
in
xor
iret
out
test
out
ror
jns
out
jle
push
sub
fadds
int3
mov
iret
jnp
and
sub
ss
jmp
fisttpll
in
clc
es
xorb
int
jl
inc
loopne
aad
cmp
in
out
dec
mov
mov
out
jnp
outsb
aam
ss
push
repz
loopne
ljmp
scas
mov
into
idivb
cmpsb
jbe
sahf
mov
fmuls
int
fnsave
ror
mov
jnp
int3
push
iret
fmull
nop
mov
sbb
stos
adc
pop
or
adc
repnz
mov
mov
mov
mov
adc
lock
ret
aas
dec
ret
adc
lds
add
sahf
gs
int
cmp
jns
cmp
mov
incl
push
pop
adc
pop
incl
enter
test
incl
xchg
or
sub
mov
bound
cmpb
inc
and
cmpb
les
pop
dec
pushf
in
or
ljmp
rorb
cmp
adc
ljmp
test
in
inc
mov
jmp
pop
push
test
fmul
dec
movsl
insl
test
jge
call
mov
mov
cld
mov
add
cmp
mov
std
sbb
adc
cwtl
pusha
mov
cmpsl
loope
or
push
xchg
dec
push
xchg
in
loop
cmp
in
add
dec
lahf
add
cmp
sahf
cmp
add
pusha
lahf
repnz
out
xchg
push
aaa
out
push
fdivrs
lahf
add
fadds
inc
xor
jbe
adc
into
or
data16
xor
push
sub
fldl
fsubr
xor
in
jnp
cld
add
add
push
pop
inc
inc
mov
imull
movsb
ficoms
paddsb
inc
pushf
pop
and
mov
push
jl
mov
sub
outsl
clc
inc
ficoms
add
adc
cmp
sub
push
push
iret
push
add
inc
mov
add
add
add
js
clc
mov
mov
test
adc
sbb
jmp
add
sbb
add
add
adc
mov
mov
mov
mov
mov
or
cld
pushl
adc
sbb
jne
pop
mov
mov
mov
mov
pop
mov
mov
pop
add
mov
mov
mov
call
fcom
sbb
lret
inc
inc
inc
inc
inc
inc
inc
sub
add
mov
mov
mov
and
sub
stc
lcall
mov
mov
addr16
mov
cwtl
push
adc
adc
fwait
out
lods
int3
lock
adc
insb
sahf
int
pop
in
movsb
hlt
sbb
fidivrs
out
pop
and
push
and
aam
and
addr16
sahf
and
and
xor
jnp
mov
push
dec
ds
je
iret
mov
ficomps
insb
jl
cmp
fs
mov
cmp
inc
xchg
test
cmp
mov
negl
sub
enter
fidivrs
mov
in
es
sub
sub
cmp
sti
push
sub
push
fsub
call
into
out
sub
sub
sub
sarb
xor
mov
and
push
xor
sub
ds
mov
sbb
push
dec
ja
pop
cmpl
cmpsl
fnstcw
and
adc
and
inc
mov
cmp
push
ret
movb
or
push
xor
jmp
push
inc
pop
and
mov
outsl
daa
add
pop
xchg
call
imul
push
xor
nop
xor
adcl
dec
shrb
jl
dec
add
mov
add
pop
push
xchg
sub
mov
pop
sub
push
mov
ret
ja
xchg
les
cwtl
push
mov
mov
adc
dec
dec
add
fdivl
adc
inc
dec
inc
sbb
sarb
les
aam
ds
or
mov
add
inc
inc
mov
push
mov
inc
sub
pushf
flds
xor
pop
xchg
and
leave
push
inc
scas
xchg
add
test
add
shrb
add
add
pop
pop
pop
mov
pop
dec
add
unpckhps
lods
jg
and
sub
xor
add
and
les
or
enter
mov
mov
dec
cmp
repz
pop
data16
inc
cmp
repz
cmp
dec
xor
cwtl
cbtw
adc
cwtl
lods
js
pop
xor
into
cmpsb
or
xchg
data16
rcrb
add
fs
inc
xor
int
dec
push
out
push
leave
push
es
adc
cltd
add
add
ds
add
push
jle
loop
aad
lea
jecxz
mov
nop
add
sbb
and
sub
lock
insb
add
push
and
mov
and
or
sub
push
sub
and
add
inc
movl
mov
xchg
adc
dec
add
push
push
icebp
in
sbb
xchg
fsubl
add
sbb
rcrb
cwtl
mov
insl
push
adc
aaa
push
fisttpll
adc
xor
xor
les
imul
clc
jno
adc
sub
shrb
cmc
xor
mov
jg
pop
sbb
push
adc
pop
sbb
or
nop
jb
add
inc
pop
daa
lret
push
fimull
lcall
pop
dec
inc
xlat
or
or
lods
sbb
lods
mov
xchg
daa
push
fmuls
push
leave
pop
push
push
inc
push
inc
cs
pop
daa
push
jo
daa
or
or
popa
clts
and
mov
mov
dec
outsl
and
daa
dec
push
sbb
enter
mov
pop
mov
sub
movl
mov
orl
aam
testb
out
subl
push
jbe
pushf
cmp
mov
prefetch
sbb
fcomps
mov
sbb
inc
lret
fstl
bound
mov
jge
ret
push
sbb
xchg
ljmp
sbb
add
out
nop
in
dec
adc
mov
adc
stc
dec
sbb
cmpsl
cmc
push
out
sub
scas
mov
push
outsb
and
ljmp
xor
sbb
inc
scas
sub
popf
mov
mov
pop
inc
xor
sahf
push
mov
push
rcrl
pop
int3
out
adc
icebp
pop
dec
loope
push
jo
mov
add
inc
adc
insl
inc
jne
lcall
push
cli
jle
or
test
orl
sub
rorb
or
ds
cmp
test
dec
add
mov
es
mov
mov
enter
adc
add
xlat
and
dec
pushf
lret
and
adc
cmp
shrl
pop
xchg
add
ret
cs
pop
sbb
mov
das
push
jg
or
pop
push
add
dec
dec
jne
xor
cmpsl
xlat
push
int
push
in
or
or
add
add
or
push
dec
fs
add
rclb
push
push
fildll
cmpsb
lods
or
adc
cmpsb
imul
imul
std
fs
push
push
dec
mov
dec
in
lret
dec
xlat
dec
push
add
or
mov
rcll
ret
or
nop
adc
fidivrl
pop
mov
push
fisttps
xchg
cmp
je
sub
les
inc
or
insl
mov
sahf
mov
dec
je
adc
add
ror
pop
pop
mov
mov
adc
ljmp
jmp
mov
jo
mov
inc
jbe
jne
pop
mov
lods
sarb
dec
sub
adc
or
sbb
and
push
xor
inc
or
das
and
pop
fdivr
data16
mov
jmp
or
pushl
sbbb
aaa
push
dec
cmpb
mov
repnz
pop
xor
or
cmp
stos
sbb
aad
stos
rorb
and
xchg
push
movsl
sbb
inc
jecxz
addb
add
inc
mov
add
push
jmp
lcall
leave
sbb
outsb
dec
fbld
cmpsl
xor
mov
pop
xsavec
inc
mov
add
lea
test
sub
daa
sbb
fwait
pop
pop
dec
insb
shlb
dec
push
pop
pop
cmp
test
mov
add
jae
mov
pushf
push
pop
in
test
xchg
lds
cmpsl
inc
enter
pop
adc
in
adc
and
push
xchg
push
push
pop
push
insb
insb
repz
jnp
movsl
push
pop
test
popa
dec
pop
inc
jp
faddl
lock
pop
mov
addr16
in
shrb
bound
enter
ss
cli
adc
add
mov
mov
lock
outsb
add
add
and
imul
xchg
mov
sub
adc
stc
imulb
or
adc
cmp
sbb
mov
mov
ficoms
sub
inc
divps
jae
fistps
mov
mov
ficompl
cmpsl
mov
or
inc
arpl
adc
stc
mov
add
push
pushl
add
jp
loopne
push
add
sub
mov
sarl
jb
lock
pop
push
movb
adc
xor
inc
xchg
popa
addb
pusha
jl
add
jmp
inc
stc
xlat
rol
cmpsl
jmp
mov
imull
cmpb
js
mov
subb
pop
or
push
xchg
fidivrl
loope
adc
loop
ficoml
sub
nop
fdivrl
cmp
leave
jp
or
wrmsr
sbb
sub
or
dec
inc
in
es
mov
cmp
jge
shlb
and
xor
test
cmp
jecxz
push
adc
xor
test
sarb
fwait
mov
in
sub
add
insb
inc
call
sbb
mov
aas
cmp
je
cwtl
or
push
in
dec
lcall
aas
cs
fisttps
push
jno
pop
in
lea
xchg
cmp
add
lea
rcr
rorl
jg
and
jp
hlt
ljmp
push
fisttps
test
shlb
xor
or
mov
jne
cmp
incb
outsb
lods
jl
addr16
jg
jnp
sub
movsb
push
lock
mov
ja
inc
lea
jp
jno
icebp
or
cmpsb
sub
movsb
daa
pop
lcall
gs
inc
push
sbb
adc
inc
inc
jo
ljmp
xor
pop
test
mov
daa
push
xchg
push
in
add
jno
push
imul
mov
sbb
js
test
and
popa
lea
or
and
ret
loope
push
jne
mov
aad
nop
mov
mov
iret
sbb
ss
dec
popf
popa
or
cmp
or
fsubs
test
shlb
jo
subb
and
cmp
sbb
add
adc
or
sbb
int3
lock
sbb
cmp
push
js
test
sbb
push
lock
dec
sahf
inc
rclb
inc
cmp
mov
jne
insl
imul
xchg
test
sbb
and
mov
add
cmp
bound
mov
jmp
xchg
push
cmpsl
add
enter
push
xor
dec
aas
inc
lcall
daa
sub
mov
or
aaa
leave
call
rolb
push
popa
data16
inc
xchg
sti
jb
les
pop
and
xchg
mov
daa
or
mov
jno
xchg
or
aaa
jp
lods
xchg
xorb
mov
cmpl
fistpll
sbb
jl
adc
dec
jne
xchg
sbb
add
je
std
mov
call
fdivl
dec
movsb
dec
xchg
adc
push
push
lcall
inc
sbb
xorb
ss
rcl
scas
mov
jmp
sub
mov
push
dec
add
daa
loopne
stos
xor
mov
xchg
push
xor
cmp
push
or
add
pop
pop
es
popa
cmpsl
mov
pop
sbb
or
aad
out
sub
ret
int
add
insl
sub
adc
or
popa
add
mov
adc
out
adc
jns
mov
lahf
add
ret
or
es
or
mov
inc
pop
jno
adc
insb
negb
add
je
push
cs
adc
arpl
dec
inc
or
cmpsb
hlt
push
fidivs
inc
std
lds
mov
or
testb
fimuls
mov
aad
sub
cwtl
clc
sub
mov
cmovno
xor
xchg
and
popf
movsl
ffree
pop
test
mov
mov
pop
push
push
sub
inc
scas
and
test
pop
sbb
push
push
cmp
inc
or
xchg
mov
cltd
pop
pop
and
fimuls
imul
inc
push
mov
and
adc
test
jne
dec
pop
subl
push
loope
inc
mov
fbstp
dec
xchg
mov
aad
adc
popa
mov
add
in
lcall
mov
xor
push
or
pop
int3
outsb
icebp
sub
loopne
aaa
sub
in
sbb
lahf
sub
mov
call
test
in
jb
clc
aam
sub
fsubr
jp
aad
and
and
jp
es
aas
cmp
stc
fstpl
fwait
jmp
mov
into
push
insb
and
out
and
lret
test
mov
xor
sub
fsubs
cli
imul
mov
sub
insb
and
shll
mov
dec
adc
or
aad
sbb
xchg
lock
adc
xor
mov
cmp
cmpb
dec
mov
daa
loopne
es
mov
setbe
lret
add
cwtl
mov
lret
mov
jb
aam
add
and
mov
cmp
pop
repz
dec
popf
add
inc
leave
lods
push
xchg
jecxz
sbb
lahf
fsubs
hlt
and
mov
jnp
gs
push
cs
dec
ret
jecxz
cmpl
pop
lods
cli
sub
jge
push
push
inc
inc
js
mov
popa
add
loopne
cltd
lret
xlat
jmp
call
cmpsb
sbb
push
sub
add
ret
fidivrs
dec
pop
jno
dec
sub
push
leave
push
aad
lods
lods
adc
loop
xchg
push
cmp
pusha
xor
loope
adc
hlt
icebp
scas
inc
mov
dec
ja
push
jmp
sbb
dec
mov
push
sub
mov
test
add
or
movsb
movsb
xor
sub
incb
cmpb
adc
mov
rolb
inc
into
jno
xor
das
mov
das
push
movb
cli
fbstp
add
mov
mov
mov
cltd
es
jo
and
pushf
sbb
mov
sbb
sahf
popa
mov
cmc
sub
or
cmp
xchg
sub
cli
cmp
or
or
inc
pop
pushf
stc
test
sub
insb
insb
adc
adc
loop
xchg
inc
cs
push
lods
orb
outsl
je
lods
cwtl
xor
add
mov
cmp
xchg
outsl
cld
addb
aad
sub
and
or
sarb
pop
in
sbb
cmp
pop
jo
das
sbb
add
add
cvtpi2ps
jo
shr
or
sub
mov
and
add
push
daa
inc
mov
adc
xchg
dec
lcall
lds
adc
or
and
cmpsl
cld
loop
xlat
enter
push
and
notb
xchg
adc
add
mov
mov
imul
notl
rol
loop
jmp
daa
dec
into
jp
gs
jecxz
fwait
jns
adc
nop
shl
into
gs
add
xchg
jns
and
or
pusha
out
adc
mov
inc
mov
stos
dec
cld
stos
mov
mov
enter
push
sub
xor
add
sbb
add
inc
loopne
lock
bound
or
mov
cmp
fnsave
stos
movsl
sbb
pusha
xchg
xchg
cmp
xchg
fldl
pop
shll
pop
push
dec
pop
es
mov
test
inc
mov
iret
testb
or
lock
cmpsb
icebp
loope
out
pop
sbb
sub
add
mov
sbb
lret
mov
aas
jnp
xor
mov
sbb
mov
addr16
negl
pop
mov
inc
add
mov
sarl
sbb
add
cltd
and
cli
sub
dec
push
push
push
hlt
pop
flds
add
inc
and
xchg
dec
rorb
pop
ja
sbb
loopne
push
jmp
mov
icebp
pop
hlt
leave
push
adc
mov
xor
pop
mov
inc
ja
jecxz
loopne
jnp
sub
add
xor
xchg
xor
jb
pop
xchg
add
test
xor
mov
mov
pop
hlt
or
sub
cltd
insb
cmp
packuswb
clc
push
pop
add
test
mov
push
ja
mov
pop
jp
add
cwtl
or
andl
push
jle
pop
pop
xor
and
sbbb
adc
and
push
adc
outsb
cwtl
cmpsb
adc
pop
or
dec
pusha
xor
getsec
cmp
setne
ljmp
dec
out
pop
jmp
cmp
je
mov
test
jbe
xor
push
adc
or
xchg
out
ret
cmp
push
or
adc
push
mov
pop
je
sub
jbe
cmp
cmp
cltd
movsb
popf
sbb
or
popl
sbb
or
pop
aad
icebp
dec
push
sbb
sub
inc
ljmp
mov
adc
push
dec
jbe
or
outsl
test
add
cmpb
cmp
mov
inc
dec
aad
adc
pop
cs
jmp
bswap
push
in
mov
repnz
aad
jecxz
jl
and
les
mov
push
fwait
mov
aas
repnz
insb
in
and
push
daa
repz
add
push
sub
lret
jae
ret
fwait
adcb
movl
lcall
fadd
mov
int3
pop
negl
cmp
jo
ret
jae
addr16
shll
and
jl
or
push
cmp
sbb
orb
cmp
push
notl
jnp
adc
cmp
mov
ret
xchg
and
aaa
push
push
aaa
scas
add
mov
sub
sbb
xor
fs
jg
add
mov
mov
sbb
lret
cmp
mov
xchg
adc
jge
adc
mov
sub
dec
inc
or
mov
mov
cmp
cmp
dec
sbb
aam
push
add
into
aas
mov
cmp
lods
and
xor
shll
lds
xorl
mov
inc
incl
dec
xor
mov
lret
mov
adc
push
mov
mov
pop
fisttpll
inc
inc
mov
push
xor
cmpsb
mov
push
dec
je
outsl
xor
sbb
jl
movl
sahf
test
push
add
pop
pop
pop
sbbl
adc
push
pop
add
jp
or
sub
shlb
imul
push
je
aad
stos
and
xor
ja
add
or
adc
dec
xchg
adcb
adc
xor
push
cmpsl
outsb
aam
les
xor
push
into
int3
mov
or
popf
sub
sbb
insb
xor
sbb
jae
push
push
push
xchg
inc
cmc
mov
mov
pop
ret
jae
ficoml
add
cli
xor
out
sbb
aas
mov
rcrb
add
fisttpl
mov
jo
mov
insb
xlat
mov
daa
mov
pop
inc
xor
mov
lock
pop
xor
aas
out
or
xorps
push
ret
pushl
push
cmpsb
lds
ret
subl
mov
cmpsl
xlat
ret
adc
fmull
push
and
loope
test
fistpl
inc
push
movsb
push
push
outsl
adc
ret
repnz
aam
scas
mov
subl
sbb
adc
push
fldcw
adcb
push
mov
lahf
mov
inc
ljmp
add
push
ret
shl
int3
mull
mov
push
add
dec
mov
testl
adc
insb
xlat
and
icebp
mov
ret
sbbl
clc
or
popa
mov
or
jbe
test
xlat
or
sub
arpl
sub
push
out
jl
or
mov
and
xchg
cmp
sti
or
push
pushl
and
jle
jne
cmp
in
in
out
fsubr
and
clc
jne
sub
loopne
push
imul
push
xor
pop
aas
cmp
test
aam
fbstp
adc
cltd
mov
push
je
enter
lock
push
out
dec
sub
mov
out
fisttps
ljmp
adc
xor
and
mov
repnz
inc
dec
push
push
xor
inc
mov
faddl
jle
in
push
movsb
or
adc
adc
inc
ja
cmp
pop
inc
jbe
jnp
dec
fstpl
dec
jne
lds
dec
lods
in
dec
and
push
sahf
adc
iret
cmp
mov
mov
sub
or
mov
jl
inc
add
testb
and
cmc
test
sub
cmpb
push
adc
pusha
add
aaa
loopne
sub
testl
inc
mov
nop
sete
ret
sbb
mov
dec
mov
push
adc
or
clc
or
sub
or
fidivs
push
dec
mov
dec
pop
add
sub
rolb
push
cmp
cmpl
and
xchg
jg
js
mov
and
mov
xor
fucomi
adc
dec
das
shlb
jne
dec
xor
das
in
rolb
push
js
fimull
roll
ffreep
scas
inc
inc
lret
inc
dec
aad
mov
add
push
xchg
dec
into
add
fadds
push
inc
or
in
push
pop
popa
loop
add
jo
andl
sub
push
and
cmp
test
daa
inc
mov
cmpl
andl
popf
and
cmp
xor
adc
inc
aam
out
mov
in
cmp
cli
clc
dec
sbbl
pop
rcrb
bound
xchg
lds
sahf
outsb
or
mov
pop
repz
aam
fwait
or
shlb
or
ds
mov
aad
and
adc
incl
cmpsl
mov
adc
xchg
sbb
dec
cmp
loope
mov
inc
cmp
mov
or
outsb
dec
add
add
enter
cmp
dec
fsubs
pop
pop
push
ret
cmp
inc
add
loope
push
in
add
lds
int
mov
in
jae
xor
lea
inc
pop
inc
pop
sub
mov
orb
mov
lds
int3
add
ja
movsl
sbb
daa
leave
lods
or
xchg
stc
insb
lods
in
mov
ja
pop
lret
cmp
mov
incb
mov
dec
add
test
jl
sti
sub
cmp
pop
push
add
or
je
js
add
jae
inc
xchg
fiaddl
sub
mov
les
add
cwtl
test
inc
add
pop
in
push
mov
sub
pop
inc
and
and
push
and
loop
sbb
popa
xor
fistps
add
mov
mov
cmpsl
inc
mov
cmc
into
scas
test
add
cmp
inc
adc
xor
mov
shll
filds
jns
sub
inc
pusha
and
test
or
jg
inc
or
ja
sub
sahf
or
pop
jmp
mov
mov
push
ss
iret
xchg
mov
outsb
inc
ret
adc
inc
in
add
jle
jmp
sbb
sarb
push
add
mov
add
pop
jp
sbb
mov
daa
xchg
mov
insb
add
ss
jl
ret
lcall
sahf
or
or
lret
adc
mov
or
sbb
test
pop
movsb
test
mov
int
pop
pop
ret
xchg
pop
fstl
xchg
pop
addb
les
hlt
bound
movsb
mov
pop
push
aaa
rcrb
xchg
jge
adc
pop
sub
pusha
mov
ret
pop
je
mov
pop
or
xchg
daa
push
adc
inc
xchg
clc
inc
leave
add
push
and
xor
popa
and
test
add
push
aad
mov
ud2
pusha
jecxz
pop
and
and
iret
inc
add
shll
leave
test
imul
jo
xor
dec
mov
mov
adc
sbb
inc
or
jo
dec
xor
inc
scas
jp
jno
aas
cmp
aas
inc
push
decl
ss
add
adc
int
adc
lock
pop
es
cmp
je
jp
pop
jl,pt
mov
adc
test
or
pop
cltd
mov
pop
je
mov
push
in
xchg
push
sahf
or
pop
push
add
mov
lods
lahf
sarb
or
fmuls
es
and
xor
mov
jo
inc
mov
xor
pop
sarl
xor
xor
mov
inc
adc
xchg
test
lods
lods
xchg
sub
movsb
push
dec
add
cmpsl
mov
lds
and
adc
xor
in
or
outsb
pop
je
mov
xor
repnz
pusha
add
cmpsb
ljmp
push
cmp
and
push
popf
cmp
bound
mov
push
cs
push
nop
push
aaa
push
and
data16
frstor
cli
xor
aas
mov
xor
add
sbb
in
xchg
or
sti
mov
cltd
sbb
mov
mov
dec
rorb
in
cmp
pop
mov
xchg
xchg
movsb
mov
dec
jb
xchg
pop
pop
or
cmp
inc
mov
inc
data16
fsubrs
ja
sub
mov
clc
sub
sbb
ror
sbb
lcall
mov
js
jne
addr16
sbbb
insl
pop
outsb
pop
scas
dec
inc
cs
inc
mov
xor
xor
fnstsw
add
adc
push
sti
ror
add
fistl
leave
je
jnp
cld
jge
mov
push
rclb
jae
jo
ret
lahf
fwait
into
cmc
or
sbbb
mov
ljmp
dec
mov
mov
dec
dec
xor
or
jl
xor
in
cmp
mov
and
mov
or
or
cmp
inc
push
test
fcompl
rcl
fdivrl
mov
adc
out
pop
pop
adc
push
add
xor
pop
gs
xor
test
xor
adc
cmp
push
add
push
or
push
adc
aas
call
cld
add
jnp
dec
fs
push
ret
ljmp
lret
mov
mov
ljmp
ds
xchg
mov
and
inc
js
mov
cmp
clc
pop
xor
cmp
je
int3
cmp
mov
aaa
pop
push
js
pop
shlb
mov
pop
pop
add
shlb
adc
cmp
add
cmpb
xor
shll
jne
mov
lcall
outsb
movsb
adc
jl
push
rorl
dec
inc
ret
std
std
pop
cld
add
push
popa
inc
mov
sbb
test
mov
pop
int
mov
mov
jb
mov
mov
enter
jmp
pop
lods
and
or
jns
das
add
ret
outsb
pop
mov
insb
cld
sbb
mov
mov
nop
lahf
inc
or
and
jb
scas
pusha
mov
jl
cmp
iret
fdivl
iret
scas
add
adc
jne
mov
sub
fildl
js
push
mov
outsl
arpl
cmp
and
and
dec
js
cli
pop
int3
or
add
cmp
test
or
ret
jo
mov
cmp
dec
and
scas
subb
pusha
subb
inc
outsb
aas
xor
push
arpl
push
add
add
stos
pop
sbb
orb
mov
push
mov
addr16
das
jnp
icebp
sbb
or
cs
bound
push
pop
in
call
push
add
adc
inc
add
inc
adc
sbb
movsb
xorb
jo
movsl
mov
les
add
adc
adcb
push
xor
mov
and
adc
loopne
mov
add
dec
and
inc
or
loope
lcall
sub
inc
xchg
mov
fwait
lea
fst
mov
ss
fucomp
adc
pop
loop
jle
add
mov
lea
scas
sub
inc
and
ret
clc
sub
je
cwtl
jl
mov
push
insb
push
rcl
fisttpll
pop
mov
inc
sbb
cmp
lahf
mov
shrb
mov
nop
xchg
push
jb
add
or
push
mov
inc
add
push
add
negl
xor
idivb
pop
mov
je
cmp
push
pop
notb
lahf
sub
cmp
xchg
cmp
pop
and
nop
jne
add
push
push
pushf
ret
inc
adc
sub
mov
daa
aam
sbbb
lock
neg
xor
enter
adc
fsubr
adc
loopne
fmuls
insb
mov
js
lea
sub
adc
test
add
cmp
push
clc
cmp
or
out
mov
mov
sub
mov
bound
dec
dec
pop
add
xor
shll
sub
insb
push
sbb
or
loopne
jmp
loopne
add
sbb
mov
cmpsb
dec
add
mov
faddl
enter
mov
sub
xor
dec
out
jge
xchg
and
mov
ret
mov
mov
testb
dec
aam
push
sub
cmp
aaa
call
fistps
sub
das
in
or
inc
lea
xor
pop
out
xor
sub
adcb
test
call
pop
es
mov
mov
add
or
push
adc
jo
aam
les
add
push
int
inc
jo
in
add
test
xchg
mov
js
add
pop
loop
aaa
mov
xlat
ljmp
push
mov
mov
clc
les
and
push
dec
or
les
inc
adc
fidivs
or
xor
xor
mov
sbb
pop
pusha
xor
lret
xor
inc
int3
jo
mov
mov
jne
add
or
orl
adc
subl
outsl
push
and
xchg
add
pop
movsb
jmp
push
faddl
fs
pop
inc
inc
out
jbe
inc
cmp
js
das
sbb
nop
cmp
call
sbb
int3
push
pop
sub
pop
add
out
xchg
mov
jne
stos
in
inc
dec
js
aad
aam
sti
jmp
mov
loope
xor
cmpl
ret
sbb
xchg
js
cmp
mov
ret
pop
inc
pop
sub
lret
cmp
sbb
mov
andb
ret
push
add
js
or
adc
push
adc
pop
adc
js
jne
addr16
sbbl
imul
js
push
jno
imul
fxch
and
in
pop
mov
xor
ds
mov
push
ret
add
sbb
test
push
and
ss
loop
sub
cmp
js
adc
ret
int3
sbb
push
and
mov
xchg
es
and
xor
inc
and
sub
movsl
push
xlat
outsl
xor
add
ret
js
xor
mov
lods
push
test
mov
inc
sbb
add
out
sbb
inc
into
adc
or
das
sub
das
out
mov
movsb
test
and
add
addb
push
pop
daa
call
sub
jae
mov
pop
loopne
orb
lods
les
ret
ret
xor
and
fcmovnbe
jecxz
ss
lret
lcall
push
add
jb
enter
clc
sar
xchg
push
int
mov
mov
js
pop
subb
pop
int
add
xor
movsl
test
adc
or
push
jb
sub
add
adc
cwtl
jbe
insb
push
pop
repz
rorb
adc
inc
jmp
dec
mov
sub
or
pushf
pop
or
xchg
xor
push
fstpl
mov
lock
push
loopne
or
cwtl
test
or
add
roll
or
or
xor
mov
pop
jmp
sub
push
add
push
adc
test
inc
fs
rorb
push
mov
ss
inc
lock
jp
cmp
xchg
mov
ficoml
ja
mov
seta
cmpb
dec
mov
mov
sbb
or
inc
jmp
jl
mov
testb
add
inc
or
mov
dec
inc
push
jmp
sub
dec
aam
xchg
popa
aaa
pop
shrb
gs
imul
je
add
or
adc
pop
insl
add
adc
sbb
cmpb
int3
test
adc
cmp
add
cmp
mov
adc
outsb
pusha
or
xchg
mov
jbe
out
out
fdivp
jg
jb
adc
pop
jl
mov
push
xorb
add
faddl
add
addl
adc
dec
je
sbb
sbb
cmp
popa
adc
int
lret
dec
pop
add
xor
in
add
jle
push
jmp
lahf
addb
adc
pop
popa
les
cmp
jne
mov
clc
xchg
xor
and
mov
enter
int
mov
xchg
xchg
lea
not
mov
xchg
push
adc
and
orl
pusha
mov
add
rcll
mov
dec
popa
leave
in
jmp
call
add
mov
mov
add
and
fistps
and
cld
fs
pop
xor
pop
fildl
iret
pop
pop
sbb
adc
inc
lock
dec
sub
gs
xor
and
jg
add
enter
aaa
push
shll
adc
leave
sbb
mov
inc
pop
pop
xchg
nop
cs
push
lcall
dec
leave
mov
xor
cmpsb
cmp
dec
add
ret
pop
mov
xchg
es
andb
add
les
xor
addl
xor
imul
adc
ficoml
push
ss
jle
pushf
or
sbb
sbb
push
sub
xchg
outsl
sub
sub
cmp
pushw
dec
mov
mov
imul
xchg
div
push
js
inc
push
xor
jg
xchg
jg
adc
stos
adcb
je
sbb
decb
mov
ret
dec
or
xchg
aad
movswl
or
sbb
adc
and
add
mov
cmp
call
int
sbb
or
adc
lahf
jb
into
loope
cmpb
mov
les
xchg
pop
and
aaa
rcl
xor
rclb
jmp
movsl
lea
movsb
test
jmp
or
idivl
pavgw
add
aam
or
in
jo
mov
push
ds
cmp
loopne
jp
jb,pn
or
sbb
dec
cmp
adc
or
lods
mov
mov
ret
xchg
sub
cmp
or
dec
scas
xchg
sbb
sub
leave
cwtl
inc
fistps
movsb
add
imul
adc
leave
movsl
add
mov
fs
cmpl
sub
pop
shll
jp
or
cmp
push
ret
pop
aam
push
mov
or
mov
loop
loopne
xor
sub
adc
imul
call
push
mov
jbe
push
sbb
cmp
inc
cmp
in
xchg
data16
dec
das
inc
outsb
in
js
xchg
mov
pop
adc
sbb
out
mov
add
add
addr16
pop
cmpsl
jne
push
xchg
xchg
sbb
daa
nop
sbb
jns
add
mov
inc
mov
add
out
mov
jl
or
xor
addr16
jbe
add
sub
test
ret
push
pop
pop
ret
and
je
pop
outsl
incb
nop
out
jle
pop
dec
push
incl
or
imul
mov
out
jle
adc
or
movsl
test
sbb
xchg
pop
je
shll
decl
jne
testb
dec
ss
add
cmc
sbb
arpl
sti
addl
push
rorb
je
les
push
inc
sub
rcrb
xchg
add
jmp
popa
mov
comiss
jg
lods
jne
cmpl
lret
int3
xchg
jmp
fcomps
jo
data16
popa
pusha
inc
mov
decb
or
sub
das
mov
outsl
aam
inc
mov
inc
dec
push
mov
mov
sub
xor
rclb
push
rcll
adc
cwtl
fadd
loop
mov
inc
sub
test
rsqrtps
jg
mov
cmp
orb
xchg
fcmovne
xchg
cmp
pop
adc
sbb
out
pop
pop
push
in
data16
mov
dec
jno
sarl
mov
popl
jle
and
insb
ret
nop
in
arpl
adc
test
loope
push
out
ds
cmp
inc
mov
cmp
fdivs
ficoml
and
bound
pusha
mov
ret
and
mov
adc
pop
sub
dec
lds
sbb
ret
add
outsb
inc
cld
add
push
inc
or
push
mov
xor
lea
lea
test
push
fdivs
dec
push
sub
jno
test
hlt
or
mov
push
pop
sub
push
inc
add
push
cld
xor
mul
add
push
fwait
push
lret
pop
add
es
outsb
push
cld
cmp
daa
dec
or
in
insb
jo
andb
push
xor
sbb
xchg
sub
sub
xchg
sub
add
lea
inc
mov
ret
ljmp
and
lock
imul
mov
popf
daa
ror
fwait
mov
and
pop
push
clc
fstpl
inc
mov
fs
push
push
dec
and
inc
scas
movsb
pop
test
mov
cltd
cmpb
adc
jle
pop
or
push
test
inc
adc
and
or
stc
addb
and
adc
jb
and
leave
ljmp
cmp
mov
add
movaps
nop
mov
push
out
insb
lods
lds
lret
inc
inc
jb
sbb
aas
cmp
lcall
cwtl
ror
dec
jnp
shlb
or
js
outsl
ffree
inc
and
mov
cwtl
push
push
push
sbb
inc
mov
xchg
sbb
mov
daa
mov
mov
pop
mov
pushl
ss
push
lock
test
in
push
push
xchg
pop
cmp
mov
fldl
stos
fcompl
test
fiadds
dec
aas
adc
xor
ja
enter
pop
jno
jo
js
adcb
pop
mov
xchg
in
cmp
lock
add
add
jns
or
add
insl
cmp
movsb
or
ljmp
lock
mov
or
sbb
sub
fisubs
sbb
sbb
shl
jl
xor
and
adc
testb
dec
mov
or
in
push
jmp
bnd
in
aam
int3
or
mov
and
xlat
sbb
pop
sub
mov
fmuls
ret
sbbb
aaa
xor
leavew
call
push
dec
push
push
dec
insb
push
fisubrl
fbstp
fnstsw
add
mov
leave
shlb
xchg
mov
mov
xchg
mov
and
pop
movl
aam
stos
pop
add
lock
hlt
aad
shrb
out
adc
inc
pushf
nop
push
jmp
jmp
adc
rorb
cmp
xchg
lds
or
shrl
or
out
jmp
add
test
insb
xor
or
popa
sbb
push
mov
rcrb
mov
pop
insl
mov
les
loope
push
sub
inc
jo
loope
or
xor
sub
mov
rolb
xor
mov
mov
sub
daa
mov
xchg
ja
mov
sbb
loopne
sub
mov
inc
mov
cmp
inc
and
data16
lock
cmp
push
sub
or
mov
add
lret
addl
je
or
mov
pop
sti
dec
movb
loop
addr16
and
and
jne
mov
lods
jmp
sbb
lahf
stos
sbb
pop
hlt
add
dec
mov
sbb
mov
add
fs
xchg
shrl
xchg
pop
sbb
pop
sbb
lds
mov
adc
cld
inc
cmp
mov
enter
jge
popa
pusha
out
test
and
lcall
dec
push
in
dec
dec
std
pusha
cmpl
jnp
xchg
cld
xor
mov
pop
clc
into
xchg
and
push
imul
insl
push
jne
or
push
movsb
enter
sbb
and
or
sub
lahf
lds
pop
shlb
adc
loopne
mov
adc
push
cmp
daa
repnz
sbb
mov
cmp
pusha
push
add
xchg
movsb
xor
xor
rcr
aaa
nop
mov
jle
pop
jge
mov
add
xor
outsl
rcr
jne
jns
bound
or
or
test
out
repnz
add
es
out
cmp
or
sti
xchg
ja
addr16
jne
das
mov
fsubrs
pop
or
mov
outsb
inc
adc
xor
xchg
adc
out
or
mov
notl
sbb
inc
jp
pop
and
jno
sar
cmp
mov
repz
xor
loope
ljmp
pushf
adc
or
jno
inc
dec
mov
dec
scas
shlb
cmp
and
sarl
dec
inc
dec
adc
sub
and
insb
mov
pop
pop
rcl
lock
xor
mov
mov
inc
popa
ljmp
ret
mov
xchg
stos
jl
rol
aam
lret
inc
dec
lock
outsb
sbb
inc
lret
pop
in
mov
and
dec
adc
enter
add
inc
push
call
jl
jo
or
cmp
adc
adcb
mov
orb
sti
in
in
jmp
aaa
hlt
jmp
xorl
inc
sbb
fcoms
xchg
mov
cli
adc
dec
mov
sbbl
mov
push
cs
aaa
lock
xchg
xchg
popa
std
add
mov
popf
movb
inc
add
pusha
gs
cmp
push
mov
push
jne
icebp
lret
sub
in
dec
cmp
push
sub
dec
jl
push
push
xor
add
dec
or
pop
or
add
sub
pusha
or
pop
add
xchg
cmp
jne
lock
mov
push
xchg
and
cmc
incb
mulb
idivb
dec
daa
imul
add
or
popa
lahf
popa
lods
or
fs
add
jmp
sbb
sbb
dec
or
daa
and
mov
in
push
adc
xor
mov
xor
push
andl
mov
cvttps2pi
adc
imul
div
cmpl
mov
or
inc
retw
xlat
inc
push
inc
cli
add
cs
negl
push
sahf
aaa
dec
stc
loope
out
outsb
jle
push
sub
add
jnp
sub
insb
cmpsb
jecxz
bound
in
inc
pop
mov
sbb
adc
daa
push
testl
fldcw
sub
cmc
sbb
sbb
mov
jle
dec
insb
pop
adc
cmp
jne
outsl
jecxz
mov
cltd
fnstenv
lea
mov
addr16
sub
in
pop
cmp
mov
out
cmpb
test
adc
inc
int
loopne
xchg
adc
js
adc
push
cmp
inc
push
add
mov
shll
inc
jge
adc
sbb
and
and
cmp
jo
add
inc
and
adc
js
inc
push
hlt
idivl
xorl
int
into
flds
xchg
outsb
stos
repz
cmpsl
rclb
jne
pop
add
test
das
pop
inc
loopne
push
bound
mov
pop
daa
pushf
test
or
pop
andl
mov
loopne
push
or
xor
xchg
inc
inc
test
clc
sub
xchg
testl
sub
mov
call
push
cmp
ret
dec
push
sbb
mov
mov
mov
inc
test
pop
aam
cli
push
inc
mull
enter
add
push
mov
cmp
cmp
push
js
pop
or
xor
add
jbe
rcr
inc
insl
gs
pusha
pop
push
dec
push
jb
jnp
cltd
pop
push
cli
testl
aaa
adc
inc
decb
lcall
incl
ffreep
push
mov
jne
and
stos
sub
sub
add
and
push
sbb
xchg
sti
and
popa
mov
pop
push
xor
mov
inc
test
pop
mov
cmp
and
xor
shrb
push
xor
sub
sub
test
mov
cld
shll
les
pop
push
dec
call
or
cwtl
push
add
mov
and
push
sub
icebp
jle
add
int3
stos
cld
cmc
xbegin
fs
inc
cli
rcrl
push
adc
mov
inc
dec
mov
ficomps
aas
cld
cld
jmp
repnz
lock
mov
mov
rolb
adc
add
rcl
test
adc
mov
fisubs
adc
testl
cmp
xor
sub
xchg
lods
add
sbb
push
push
jmp
mov
xor
in
jg
jo
pusha
push
mov
pop
xchg
pop
pop
fs
mov
sbb
or
xor
cmpsb
movsl
mov
jne
test
dec
dec
mov
or
sub
repz
mov
jge
out
std
subb
test
inc
rolb
inc
inc
inc
mov
xchg
jl
adc
iret
or
jo
aam
jnp
repz
inc
push
dec
add
and
or
sarb
jmp
adc
jmp
jnp
into
and
pop
mov
or
jno
lods
test
sbb
jmp
jae
dec
cmp
or
sar
add
add
cli
sarb
popf
mov
push
sub
and
mov
je
add
sbb
mov
cmc
jp
xor
jb
idivl
xchg
call
out
inc
xor
and
movzwl
in
push
or
ret
or
ja
adc
pop
fs
push
orl
add
out
enterw
add
sub
push
inc
inc
jle
cmp
in
or
fisubrs
push
stos
xchg
push
xchg
imul
jl
and
mov
mov
mov
sub
push
orl
xor
or
outsl
adc
and
cmp
dec
sarb
jp
inc
dec
shll
adc
mov
sbb
lods
jle
pop
sub
and
pop
jo
test
or
cltd
sbb
call
jl
cmp
inc
sub
aas
and
orb
inc
dec
shlb
mov
or
xchg
xor
sbbl
fisttpl
call
inc
or
jmp
je
inc
arpl
xchg
adc
test
testb
mov
scas
and
test
push
sbb
dec
and
aam
xchg
test
dec
or
lea
outsb
call
lods
pop
fstl
inc
pushf
mov
aad
xchg
add
fbstp
adc
xchg
push
inc
je
popa
add
xchg
cltd
lret
push
dec
outsb
in
lods
cwtl
stos
in
data16
loopne
loopne
pop
mov
and
add
and
jnp
jge
jge
push
sub
add
xor
imul
lcall
or
imull
cmp
xchg
gs
lods
inc
mov
fwait
jg
cmpsl
lea
push
or
adc
mov
jns
movsb
adc
dec
push
jnp
push
cli
dec
push
aam
push
xor
mov
push
add
enter
cwtl
movsl
mov
dec
sbb
mov
jl
dec
pop
xor
movsl
jae
insl
xchg
out
negb
inc
xchg
cli
sbb
cmp
lea
dec
fdivr
mov
inc
dec
insl
pop
push
jae
mov
jno
push
adc
stos
testl
push
mov
das
adc
xor
sbb
sbb
cmp
clc
cmpb
enter
incb
jne
sbb
lea
or
dec
lea
or
xchg
mov
loop
mov
push
icebp
inc
cmp
fucomip
mov
inc
xor
add
push
lods
insb
int3
mov
adc
loopne
adc
roll
dec
pop
jmp
inc
mov
adc
mov
loop
popf
inc
fs
lea
sbb
pusha
ret
or
pop
add
int
insb
xlat
imul
mov
dec
xlat
leave
add
repnz
in
dec
repz
sub
rcrl
rcll
popf
sub
mov
outsl
pop
popl
in
inc
pop
ret
out
xchg
sub
int3
sbb
outsl
jmp
push
shl
fadd
aad
fdivrs
mov
xor
mov
test
mov
push
scas
andl
inc
arpl
mov
mov
ss
sub
pop
dec
les
loope
adc
and
push
sbb
test
inc
push
cmpsl
fmuls
cmp
pop
dec
outsl
je
out
test
mov
sub
mov
in
xchg
mov
cmpl
mov
mov
mov
sbb
pop
inc
adc
int3
ret
pop
mov
mov
adcl
mov
push
or
rol
cmp
pop
cwtl
cs
lds
mov
jbe
cwtl
pop
cld
je
aam
iret
push
orb
sbb
mov
add
add
adc
fidivs
xor
daa
mov
mov
jmp
or
popa
sub
dec
popa
aas
mov
pop
pop
test
incb
dec
add
xlat
mov
fcomp
int
cmp
push
arpl
faddl
cmp
das
add
adc
bound
add
push
divl
mov
jmp
cmpsb
push
mov
pop
mov
xor
add
inc
loop
cltd
sub
pop
hlt
inc
or
data16
pop
xchg
cmpl
or
xor
inc
or
addr16
push
test
clc
inc
loopne
xchg
push
add
push
inc
push
sub
frstor
std
push
cmp
fidivl
add
test
les
dec
jnp
mov
inc
push
mov
mov
xor
mov
and
sbb
mov
sbb
hlt
push
or
movb
cs
pop
in
in
icebp
les
out
inc
or
gs
popf
inc
push
pop
fwait
mov
push
shll
dec
es
push
ljmp
adc
sub
xchg
daa
insl
cwtl
pusha
adcb
push
or
test
pop
xor
adc
test
xor
and
sbb
xlat
push
inc
dec
pop
sbb
mov
scas
fsub
pop
pushf
mov
mov
push
repz
or
push
insl
bound
ret
scas
icebp
inc
or
jp
sbb
daa
push
cmp
push
pop
adc
je
push
pop
insl
test
sub
rorb
or
addr16
or
or
or
sahf
push
idivb
dec
jbe
jmp
xorl
sub
jno
inc
add
hlt
fnsave
inc
dec
add
mov
adc
mov
mov
lods
add
sbb
pushl
inc
dec
jne
jae
push
xor
mov
jle
stos
jmp
mov
jmp
dec
loopne
inc
mov
sbb
sbb
mov
mov
ss
cmp
xor
add
cmpsb
out
cmp
mov
test
outsb
insb
js
push
rcll
into
jle
jg
pop
jb,pn
add
jmp
mov
push
sub
int3
decb
dec
lret
xor
gs
imul
inc
cwtl
xchg
mov
cmpb
rcrl
add
jae
pop
xor
scas
xor
mov
lods
shll
xchg
clc
or
pop
dec
jne
imull
inc
jl
inc
or
xor
roll
lcall
sbb
xor
add
xor
pop
xchg
pop
mov
and
pushf
es
mov
inc
jmp
or
lock
xchg
addb
fcompl
xor
inc
fcmovbe
test
loopne
mov
push
ds
cld
test
or
inc
je
cmp
fnsave
dec
je
daa
insl
xor
dec
mov
and
enter
add
ds
dec
loopne
inc
xor
sub
jmp
in
sub
loopne
sbb
push
and
xor
push
jecxz
add
popa
mov
scas
sub
cltd
cwtl
movl
mov
jmp
sbb
push
sbb
add
mov
inc
pop
fistl
push
add
push
xchg
aad
and
sbb
xor
jno
pandn
mov
inc
pop
test
lea
push
sub
inc
cmp
js
addb
rolb
ss
inc
dec
cmovnp
mov
push
fdivrl
mov
lds
cs
les
cmp
pop
sub
in
adc
jge
xchg
std
inc
mov
push
pop
lahf
nop
mov
or
mov
mov
movsb
pusha
orb
pushf
clc
add
cmpsl
and
popa
in
mov
xor
mov
nop
or
mov
mov
push
ud2
das
mov
push
inc
inc
addl
push
push
cmp
xor
dec
out
fmulp
xor
adc
xchg
pop
jns
mov
rcrb
inc
gs
cltd
inc
decl
add
dec
sbb
les
pop
jg
and
nop
roll
outsb
xchg
push
push
push
mov
jmp
ret
sub
in
jmp
inc
fsubrs
leave
test
les
push
mov
inc
test
jne
inc
add
rclb
adc
mov
pop
sbb
sbb
lods
loopne
fistl
pop
roll
adc
loopne
dec
pop
cmp
sbb
scas
xchg
cmp
jno
and
xor
repz
inc
adcl
sahf
out
jne
push
lds
mov
cmpsl
xchg
jmp
sysret
sub
jecxz
nop
sarl
je
mov
inc
sub
or
lahf
lods
rclb
mov
aam
sub
mov
sub
rcrb
xchg
pushf
push
push
cmp
xchg
je
push
push
xchg
ret
and
jno
outsb
movsb
aam
ljmp
add
xor
mov
das
adc
or
aaa
inc
add
sub
aas
mov
push
cmpsl
adc
xchg
xchg
add
outsb
dec
cld
outsl
test
adc
roll
loop
test
stos
es
insl
ss
aas
mov
inc
aam
or
ja
mov
adc
and
pop
mov
mov
and
pop
sub
nop
daa
addr16
cmpb
dec
movsb
or
sbb
dec
sub
dec
adc
xor
sbb
xchg
and
mov
pop
loope
movsl
shr
push
mov
push
push
shlb
repz
fidivl
movsl
xor
loope
je
add
pop
and
adc
nop
mov
adc
andnps
sar
stos
and
cwtl
hlt
insb
test
sbb
or
mov
adc
adc
adc
adc
in
xchg
sbb
adc
xor
push
inc
ljmp
adcb
sbb
shlb
or
movsl
xchg
out
add
in
adc
add
sbb
add
dec
inc
adc
push
adc
push
orl
sbb
sub
xchg
imul
or
inc
adc
and
inc
lea
add
repz
test
cmp
xor
xchg
jbe
cmp
adc
cs
mov
cmp
inc
mov
or
mov
dec
sbb
rolb
adc
nop
cmpsb
mov
js
inc
jnp
add
pop
je
movswl
pop
or
cld
ja
jmp
cmpw
ss
orl
sub
cmpsb
xchg
or
mov
hlt
mov
xor
push
xor
jo
inc
fs
scas
daa
jl
mov
sbb
xchg
xor
daa
add
movsl
mov
inc
push
mov
jo
leave
cmp
dec
inc
subb
fcmovbe
adc
cmp
jae
je
lods
jns
popa
fsubs
cmp
test
dec
ret
cmp
rcrl
adc
dec
popf
xlat
push
xchg
insb
jmp
adc
inc
cmp
daa
cltd
mov
mov
clc
push
sbb
or
sti
sbb
loopne
adcl
repz
test
and
or
add
sbbb
xor
mov
push
fcompl
xor
push
mov
pop
repnz
inc
rcrb
push
inc
ret
sbb
xchg
rolb
sub
mov
and
bound
inc
jne
cmp
or
dec
mov
sbb
movsl
pop
jge
lcall
cs
mov
inc
shll
add
push
out
xlat
cs
js
adc
mov
hlt
pop
ds
ret
xchg
cmp
sbb
clc
push
mov
repnz
iret
push
hlt
jmp
cmpsb
mov
push
sarb
xor
fisttpl
fnsave
int
jne
js
add
pop
sub
hlt
mov
stos
push
ja
mov
notb
xchg
aaa
hlt
add
shlb
jb
clc
mov
icebp
addr16
loope
push
aam
imul
lods
add
rorb
adc
pushf
lret
subl
aaa
out
adc
sbb
mov
call
push
dec
std
jnp
dec
das
out
test
mov
nop
call
adc
jg
mov
stc
nop
call
push
jo
inc
xchg
mov
mov
or
xor
sbb
fdivl
inc
andl
add
ja
xor
in
je
mov
jne
xorb
pusha
mov
clc
pop
or
sub
or
mov
dec
fsts
shl
leave
sbb
aad
jno
adc
mov
dec
and
call
and
enter
and
inc
sbb
imul
fldt
adc
xchg
mov
lea
mov
push
xor
mov
add
push
pop
push
fmull
cmp
adc
mov
inc
dec
popa
inc
ljmp
mov
add
sub
pop
cmc
push
into
enter
das
imul
lea
add
add
test
xchg
addb
inc
sub
test
inc
jecxz
or
imul
repz
pop
inc
pop
inc
xchg
loope
ret
jo
enter
mov
mov
mov
and
xchg
fcoml
pop
lods
and
and
push
dec
inc
sbb
rcr
cmp
push
flds
adc
inc
cld
push
inc
add
loopne
lcall
push
mov
fidivrs
xchg
pop
push
and
mov
cmpsl
adc
fcompl
inc
mov
jb
xchg
or
ljmp
and
jno
filds
xchg
or
popa
lods
fs
jb
loop
loopne
cmp
mov
jns
or
jle
jge
test
andl
xor
push
jo
inc
outsl
mov
inc
ret
addl
jmp
sbbb
xorl
mov
je
bound
je
fwait
loopne,pn
dec
pop
dec
adc
mov
mov
and
pop
lret
jp
std
dec
mov
aam
push
sbb
xor
and
and
push
and
dec
and
mov
in
pop
sub
and
sub
mov
mov
iret
add
adc
sub
pop
inc
jo
insl
or
outsl
add
and
pop
add
push
lock
jne
pusha
or
cli
stos
push
lcall
jae
pop
inc
adc
pushw
or
mov
push
ja
sub
and
daa
mov
adc
daa
xor
xchg
rcrb
mov
jno
shrb
insb
add
inc
add
mov
and
pushl
sbb
and
sbb
jne
adc
pop
mov
jne
push
or
inc
pushl
popf
movsl
lret
add
add
add
add
les
shlb
rolb
out
mov
jle
movsb
push
and
insl
push
fsub
sub
es
mov
jno
xor
inc
adc
sbb
pop
mov
and
cmp
cmp
and
movl
inc
add
rorl
xor
out
adc
sub
movsb
mov
mov
pusha
inc
faddp
xorl
aaa
cmp
and
mov
fdivs
push
notl
or
sbb
pop
sbb
inc
mov
addr16
into
xor
mov
gs
in
add
adc
dec
lds
orl
das
dec
les
ret
sbb
xchg
mov
or
daa
or
sub
mov
mov
mov
ret
mov
outsl
push
jmp
test
push
xor
jns
cmpb
sub
jg
and
insl
pop
dec
mov
cmpl
lret
jne
or
hlt
scas
mov
and
jmp
shlb
and
mov
xorl
add
mov
add
add
and
jo
jg
test
rol
lret
xlat
add
sub
or
movsl
movb
or
sti
jne
adc
jg
in
mov
adc
xlat
insb
adc
ljmp
inc
popa
stos
ljmp
adc
hlt
xor
cltd
add
inc
adc
add
inc
xchg
jo
jmp
mov
stos
dec
sbb
mov
add
push
rcrl
push
xchg
out
lods
test
rolb
enter
sub
and
adc
inc
outsl
dec
mov
std
mov
xchg
idiv
xor
cmp
jg
je
cmp
or
jo
adc
imull
add
adc
or
push
mov
inc
mov
add
dec
out
mov
push
mov
jbe
xchg
daa
clc
xor
fists
ficoms
gs
or
js
dec
pop
inc
les
movsl
push
cltd
mov
sbb
loopne
jb
jmp
add
jo
mov
adc
jb
fdivrs
test
push
lods
loop
and
add
out
mov
xor
push
mov
and
lahf
mov
push
cld
and
and
xchg
out
mov
xchg
repz
or
sbb
adc
xor
adc
jecxz
dec
test
adc
fadd
push
loope
data16
cltd
inc
loope
add
sub
insl
sbb
les
adc
jecxz
inc
jmp
pop
sub
movsl
cltd
negl
call
jl
and
push
test
data16
les
addl
test
outsl
sub
cmp
mov
inc
push
addb
push
push
popf
test
jp
cli
jns
dec
and
jb
sbb
cmp
xor
fcoms
push
jb
loope
xor
hlt
sbb
add
xchg
dec
add
mov
out
nop
push
loop
adc
jnp
lcall
add
add
cmpl
xchg
daa
mov
dec
scas
ljmp
sub
dec
pop
cmp
div
push
movsb
icebp
aas
pusha
push
inc
pop
ret
and
clc
xor
sub
aam
dec
sarb
sbb
rcl
aam
push
sbb
inc
mov
dec
cmp
and
mov
push
inc
sub
lock
add
jg
les
push
andb
adc
or
sbb
test
test
shll
daa
mov
loope
cmp
rcl
ficompl
adc
jle
and
mov
and
lahf
pop
mov
test
call
dec
jo
imul
mov
lret
add
mov
add
ljmp
add
adc
mov
push
push
push
ret
mov
adc
xor
sahf
or
sbb
inc
jbe
pop
push
or
and
mov
xor
bound
jp
xchg
jmp
push
pop
or
scas
pop
pop
scas
pushf
push
pop
adc
orl
add
pop
and
push
mov
movsb
jae
lcall
ljmp
sbb
push
ljmp
fimull
pop
and
pop
or
sbb
jp
dec
adcb
pusha
outsl
sbb
sbb
add
jne
cmpsb
es
xor
or
xor
daa
fmuls
add
mov
sbb
test
ja
rorl
pop
fisttpl
imul
sub
dec
or
fstps
dec
lret
push
and
push
adc
data16
scas
clc
js
cs
sub
pop
mov
xchg
xchg
pop
cltd
and
inc
mov
cmp
jle
testb
and
xchg
or
add
jle
adc
jnp
mov
or
es
scas
or
lahf
dec
call
add
lds
mov
push
lsl
inc
lahf
mov
dec
xor
cmp
mov
sub
add
pop
cmpb
insb
lods
adc
jl
cmp
add
lea
testb
and
js
jl
adc
cmp
xchg
dec
push
cs
mov
cmp
xlat
sub
or
ret
shll
and
into
cmp
je
mov
cmp
cmpsb
aad
mov
push
pop
lret
sbb
ret
xchg
pop
shlb
xor
pop
jns
iret
xchg
cmpsl
das
mov
pop
inc
test
add
ret
xor
mov
adc
mov
or
mov
ret
je
lock
push
test
roll
add
push
xor
push
imul
adc
adc
and
lcall
adc
xchg
mov
sub
dec
or
add
inc
shrl
mov
test
push
ja
inc
xor
jo
insb
push
mov
xchg
jmp
xchg
or
inc
push
nop
mov
or
xchg
inc
in
push
add
stos
adc
cmpsb
pop
mov
adc
imul
sbb
add
clc
add
pop
lds
mov
mov
adc
and
inc
xor
push
inc
xchg
push
sbb
sbb
call
and
mov
cmpb
adc
xchg
add
add
xchg
jge
xchg
adc
pop
add
je
dec
ss
mov
or
in
sub
fldenv
add
xor
pop
xchg
gs
or
xlat
addr16
and
rcrb
push
cli
dec
enter
xchg
rol
stos
or
inc
add
jl
loope
clc
int3
or
fidivrl
or
movsl
pop
je
addb
pop
inc
ficoml
cmp
adc
mov
adc
icebp
pop
or
adc
or
je
jne
sbb
or
movsl
or
push
add
imul
sub
xlat
mov
push
adc
aad
xchg
lcall
shrl
icebp
mull
cmp
dec
mov
inc
inc
nop
stos
sub
cli
fwait
pop
mov
dec
scas
sub
sub
push
add
jo
jmpw
cmp
sub
push
clc
clc
lock
xchg
dec
jae
in
or
call
add
outsb
or
std
rorb
fcoml
int3
or
les
inc
jl
jmp
repnz
cmp
add
mov
dec
mov
xchg
fbstp
xor
daa
test
ret
sbbb
push
adc
aam
and
jmp
movb
or
cmp
add
or
lret
jne
test
cmp
bnd
inc
lea
stos
je
pushf
or
mov
cmpsb
sub
cmpsl
js
jmp
pop
add
or
rcll
mov
xlat
rolb
ljmp
mov
mov
fcomp
cs
mov
push
repnz
push
dec
or
xchg
cmpsb
sub
sub
imul
push
mov
loop
popf
mov
jmp
inc
and
mov
sarb
dec
dec
or
lcall
jl
outsl
das
lcall
sahf
adc
adc
sti
push
and
jle
adc
sbb
mov
mov
add
add
dec
sub
dec
jo
mov
adc
out
jbe
adc
fmul
adc
ja
or
or
and
into
adc
into
inc
dec
add
mov
repnz
mov
aad
addl
in
daa
leave
mov
dec
faddl
jle
sbb
push
fsubl
in
inc
lcall
or
imul
fdivrs
enter
je
sbb
es
and
or
cmpsb
inc
jmp
jg
sgdtl
in
add
ss
push
fcomps
das
mov
push
into
add
iret
insb
cld
and
add
inc
das
pop
xchg
cmc
aad
add
sarb
pop
iret
mov
fcomps
dec
push
mov
por
inc
inc
xchg
jge
dec
pop
xchg
add
out
repz
mov
jp
stos
push
pop
add
xchg
mov
imul
mov
popf
push
out
cltd
insb
sbb
push
push
imul
cmp
mov
cmp
inc
adc
xchg
adcl
mov
xchg
fsubl
enter
cmpsl
sbb
lock
fstl
add
adc
mov
dec
sbb
xlat
push
daa
pusha
ja
jmp
mov
inc
sub
cmp
movb
push
ret
ret
je
int
mov
inc
jle
mov
push
push
or
or
mov
adc
add
subl
xchg
test
fmull
shlb
int3
hlt
add
mov
inc
add
pop
sbb
and
pop
shlb
enter
push
inc
das
faddl
cmpb
jp
xor
arpl
add
and
jae
fs
divb
js
push
adc
ret
dec
pop
push
cltd
jne
sub
pop
or
xchg
pop
ret
rorl
cmp
lea
test
dec
fadds
int
adc
or
dec
movsl
sbb
das
loope
imul
pop
lcall
sbb
stos
sbb
hlt
mov
pop
jne
sahf
sbb
add
push
inc
push
insl
add
in
aas
sbbb
cmp
gs
mov
cwtl
add
sub
mov
pop
inc
ss
add
sbb
pushl
iret
add
test
inc
cs
adc
xchg
arpl
loopne
sub
xchg
push
adc
addr16
jo
xchg
orl
lods
push
and
movsl
mov
xor
arpl
sbb
fs
sbb
sbb
shl
fsubrs
arpl
push
mov
les
xchg
mov
aam
aad
je
shll
call
inc
push
inc
inc
sub
lock
inc
sbb
xchg
cvtps2pi
pop
push
or
add
nop
push
adc
dec
filds
and
pop
mov
adc
clc
adc
int3
xchg
data16
in
in
hlt
aaa
cmp
inc
xor
std
adc
mov
sub
jae
and
add
dec
aaa
sbb
shlb
jp
add
cmp
pop
sub
adc
cmp
aam
add
add
and
rolb
push
mov
sbb
rorb
pop
or
and
push
mov
sub
dec
int3
dec
xorb
sbb
stos
xchg
add
into
clc
adc
mov
inc
js
push
scas
cltd
mov
sbb
add
adc
inc
dec
call
lcall
orb
outsb
adcb
adc
adcl
lods
nop
pop
js
inc
cmp
orl
cs
xor
aam
aam
inc
or
int3
es
outsl
lea
inc
adc
pop
loopne
cmp
inc
in
stc
inc
mov
or
in
ret
out
addb
sub
or
addb
sbb
adc
adc
ljmp
adc
insl
mov
and
jae
inc
popa
mov
shrl
add
lret
sti
pop
jbe
mov
les
mov
jp
push
adc
pop
sub
adc
and
cld
jb
mov
push
or
subl
sbb
out
xchg
xor
inc
add
cmpb
and
sbb
int
jle
sbb
xor
in
mov
adc
mov
or
push
inc
roll
dec
xchg
xor
pop
cmp
mov
flds
xor
pmulhuw
push
add
add
lret
push
cmc
pop
inc
pop
addb
fisttpll
cmc
add
add
inc
cmp
or
mov
adc
hlt
rcrb
jle
push
dec
call
push
dec
call
lcall
sub
cmp
push
jge
push
fwait
jo
cmp
cmp
js
imul
pop
pop
jecxz
push
lret
inc
jge
enter
sbb
push
sbb
int3
add
jg
and
pop
sbb
add
sbb
sub
fs
inc
xchg
movsl
push
push
jle
std
adcl
or
mov
out
iret
fisubrs
xor
xor
cmp
orl
adc
inc
bound
stos
arpl
lock
or
cmpsb
adc
testl
inc
popa
loopne
stos
iret
gs
ds
or
scas
add
sub
addr16
shlb
ds
dec
dec
mov
inc
cltd
sbbb
push
sub
js
out
jmp
cmp
or
les
add
es
ja
ret
sub
add
adc
adc
movsl
add
and
dec
testl
call
mov
dec
test
je
sub
add
int
push
in
cld
mov
hlt
xchg
jnp
jmp
sub
push
test
mov
push
rorb
test
xlat
dec
rolb
xor
mov
mov
dec
and
push
loopne
add
cmpsl
rolb
call
sbb
cmp
sub
imul
mov
inc
clc
iret
xchg
int3
mov
mov
mov
push
or
cmp
sbb
jg
inc
addl
addb
ss
cld
ret
scas
cmp
movsl
mov
cmp
jnp
dec
or
xor
sbb
dec
mov
push
xchg
mov
aad
call
pop
ret
mov
ret
cmp
je
pop
dec
xchg
mov
pop
test
roll
ret
lret
mov
subl
pop
test
add
mov
outsl
or
popa
mov
movsb
adc
aaa
pop
and
mov
push
fprem1
or
xorl
outsl
iret
aam
dec
enter
aam
add
lahf
das
dec
pop
or
shr
mov
sarl
xor
lods
subb
repz
andb
jg
test
or
pushf
dec
stc
xor
mov
mov
dec
imul
add
pop
clc
inc
mov
outsl
push
test
ja
add
stc
daa
subb
aaa
sarl
int
mov
ss
cmp
aaa
sarb
rcrb
les
dec
notl
bound
lret
enter
sbb
decb
xchg
pop
xor
fsubl
xchg
add
push
and
jl
movsb
mov
fwait
dec
les
jle
cmpsl
out
pop
cmpb
push
sbb
inc
fs
push
test
and
add
addb
or
daa
lret
or
or
xor
ficoml
inc
xchg
mov
lea
mov
aas
pusha
push
push
add
fsubs
lock
mov
pop
cmpsl
inc
and
push
push
cld
jbe
dec
sub
mov
pop
dec
sub
cmp
push
lods
jle
mov
push
idivb
fs
mov
push
add
imul
in
push
jmp
fldl
aaa
test
adc
dec
or
sub
pop
pop
adc
sub
ja
imul
adc
dec
hlt
sbb
adc
xor
mov
fsubr
pop
flds
movsl
push
dec
mov
pop
add
into
or
dec
jne
pop
jnp
mov
popa
inc
cmpb
pop
lock
and
sbb
mov
push
addr16
adc
mov
shlb
repz
pop
add
out
sub
pushf
push
push
add
push
adc
sub
imul
mov
setp
mov
lods
clc
sub
cwtl
xor
sti
ljmp
stos
push
cmp
add
inc
add
lds
iret
dec
pop
sbb
daa
or
dec
mov
jnp
xor
inc
adc
mov
adc
and
imul
aad
mov
fistpl
mov
loop
mov
xlat
adc
je
aaa
xchg
xchg
mov
jp
add
jae
outsl
jnp
loop
or
popa
cmp
push
leave
mov
inc
lcall
test
shl
dec
pop
pushf
das
xchg
jp
in
xchg
cmp
cmp
dec
mov
ds
mov
mov
or
mov
adc
push
repz
mov
inc
cmp
xchg
push
bound
mov
xlat
xlat
pop
xlat
hlt
and
mov
push
cmp
cwtl
sub
pop
or
push
cmp
lret
movsl
xor
inc
loopne
push
jbe
lahf
fs
push
add
mov
dec
push
add
dec
popf
sbb
jp
push
test
mov
mov
pop
cmp
sbb
lock
add
xor
mov
pop
clc
or
sbb
pop
sti
loopne
cmp
imul
stos
sub
mov
and
test
daa
add
dec
adc
nop
pop
enter
jl
je
insl
loop
in
clc
loope
fs
cwtl
or
sbb
jo
mov
push
mov
das
imul
cmc
and
push
mov
scas
fldenv
pusha
pop
call
push
and
inc
and
push
stos
js
int3
and
inc
and
jne
inc
pop
push
sub
mov
cld
and
shlb
jae
sub
add
insl
dec
sarl
fdivl
pop
imul
out
sbb
std
dec
fldt
ja
inc
es
std
les
jg
push
push
outsb
nop
stc
add
aad
loope
mov
mov
movsl
in
pop
aaa
pop
sbb
sbb
movsb
dec
or
addb
pop
add
and
xor
and
push
push
mov
test
xchg
or
in
xor
lret
call
cmp
mov
add
rcrl
push
shlb
cmp
xor
stos
test
push
cld
add
pusha
out
adc
pop
lahf
mov
and
in
fs
sbb
push
add
addr16
sub
mov
dec
sti
dec
cmp
xor
test
cmp
sub
sti
aam
sbb
std
mov
push
xor
push
xor
ficoml
mov
cmpsl
xchg
gs
jg
loope
fisubrl
add
add
sub
ret
addl
incl
push
dec
insb
js
add
or
outsb
fs
add
loopne
test
daa
insb
pop
push
adc
sbb
sbb
and
and
mov
aaa
or
push
mov
outsl
add
sbb
ficoml
fcomps
fs
push
or
dec
mov
mov
addb
lods
test
mov
pusha
lods
pop
pop
xchg
and
mov
mov
or
or
mov
pop
mov
out
int
lahf
jmp
jg
in
xchg
add
inc
xchg
xlat
mov
cmp
rclb
or
dec
sbb
mov
lods
addl
fadds
jae
in
cwtl
cmp
mov
xor
add
es
mov
push
ja
jmp
pop
inc
adc
add
call
rolb
fstl
pop
ret
rclb
and
xlat
aas
or
and
sub
xor
ret
dec
in
and
lock
and
pop
adc
dec
pop
aad
lret
xor
inc
adc
push
outsl
clc
push
pop
add
test
mov
imul
pop
sbb
fistps
data16
and
fisubrl
sub
cli
pushf
dec
fimuls
filds
aas
dec
jne
mov
xor
hlt
pop
cmp
jmp
lock
or
test
mov
push
mov
test
inc
push
add
xchg
popf
jo
and
mov
jmp
add
push
into
push
scas
dec
add
cmp
add
sbb
pusha
push
ds
xor
shll
sbb
notl
pop
inc
stos
mov
push
or
fwait
mov
and
bound
test
jp
sbb
fwait
inc
das
outsl
dec
stos
jmp
push
movl
dec
loopne
cmp
cmp
pop
or
testl
and
cwtl
push
lock
push
mov
cmp
dec
dec
jmp
xor
sbb
jbe
test
inc
insl
pop
add
inc
dec
add
xchg
adcl
xchg
pop
fdivr
ja
push
lds
push
or
sbb
imul
or
or
or
xchg
js
or
and
cmc
rcrl
push
mov
add
shll
js
jmp
mov
daa
sbb
or
lds
cltd
inc
sub
xchg
cmp
daa
fldenv
or
bound
or
push
push
or
xor
loopne
mov
sub
pop
les
sbb
push
inc
mov
add
sub
xchg
add
dec
add
pop
loopne
fdivrl
push
and
sbb
loopne
pop
xchg
or
ret
inc
icebp
flds
jl
and
sub
jmp
add
movl
aad
testb
add
add
push
sbb
pop
add
jle
aaa
xlat
sbb
xchg
cmp
jns
push
sub
xlat
out
push
and
jg
add
sbb
xor
push
cmp
mov
add
aaa
mov
mov
push
and
testb
adc
mov
js
add
jge
sarl
lods
jns
jg
sti
loopne
fcompl
jg
pop
jg
pusha
jnp
jne
add
xor
adc
outsl
mov
add
jmp
cmc
pusha
lea
add
mov
push
sbb
dec
loopne
add
inc
mov
loope
fldl
pop
clc
imull
sbb
cmp
pop
add
xor
cmpsl
xor
pop
sub
add
fs
sbb
add
lods
cmpsb
lcall
or
xchg
lods
adc
adc
adc
pop
sbb
mov
pop
mov
add
mov
jge
jo
xchg
mov
dec
jp
cmp
mov
jo
and
push
and
sub
push
daa
or
pop
ret
jne
xchg
cmpsl
pusha
mov
mov
test
sub
popf
jp
orb
and
and
xlat
fdivrs
add
push
fs
mov
sbb
enter
or
icebp
inc
mov
icebp
rorl
jge
fiadds
sbb
pusha
js
les
xchg
test
and
inc
xlat
lock
jmp
addr16
sbb
add
inc
sbb
inc
clc
lock
sarl
shlb
push
adcb
in
or
add
mov
hlt
addl
adc
insb
imul
jg
jae
mov
push
mov
cmpsb
push
mov
scas
xchg
test
mov
adc
imull
fs
jo
inc
loopne
push
movsb
faddl
xor
in
or
fsubrp
fidivs
and
pop
cmp
sub
inc
lods
sbb
cmp
daa
in
mov
push
test
jle
in
fldl
fcomp
outsb
inc
cmp
mov
push
lea
pop
shl
pusha
pop
or
js
icebp
cmp
inc
sbbb
aas
lods
sub
add
js
movl
push
mov
mov
loope
xor
sbb
jbe
sub
dec
loopne
lahf
das
pop
popa
orb
mov
pop
push
insb
and
sbb
fiadds
bound
adcb
adc
dec
and
sub
daa
pop
jge
lock
push
push
or
inc
mov
call
pop
sbb
fmull
ljmp
sbb
fstl
inc
dec
cmpsl
loopne
je
push
jg
or
sub
inc
inc
pop
pusha
jae
mov
sbb
outsb
stos
hlt
add
cltd
in
imul
add
inc
or
push
stos
mov
push
mov
pusha
or
fdivrp
clc
and
cmp
push
inc
rorb
xor
inc
adc
jecxz
arpl
inc
adc
xor
push
pusha
pusha
stos
iret
ss
dec
ret
ret
cmp
jne
pushf
sub
pop
and
int
dec
add
sub
adc
inc
call
lock
pusha
sub
and
je
in
dec
lock
adc
cmpsb
das
push
scas
mov
push
rorb
arpl
xlat
add
dec
test
loopne
fs
pop
movsb
push
mov
cmp
pop
imul
js
cmp
dec
adc
and
arpl
add
push
enter
and
bound
cltd
pusha
add
dec
pop
nop
stos
jle
int
adc
scas
sbb
je
push
push
or
jp
sbb
or
adc
ficoms
fiaddl
pop
or
das
pop
lret
insb
jge
jmp
or
mov
dec
nop
test
jo
xchg
or
pop
inc
sbb
xchg
clc
sar
jns
adc
cmpsl
adcl
mov
or
es
push
outsb
dec
lcall
hlt
add
or
iret
cmp
icebp
jo
pop
push
addl
sub
mov
shll
mov
popf
or
pop
push
dec
push
adc
cmp
je
or
sbb
push
or
sbb
mov
ror
push
cmp
pop
fs
rolb
xchg
push
and
inc
popf
jecxz
push
xchg
out
and
push
dec
movsl
pop
mov
dec
mov
add
cmp
xchg
sbb
sbb
pop
sbb
pop
or
dec
fstpl
mov
hlt
xchg
iret
xor
hlt
lock
hlt
push
inc
xor
inc
xchg
clc
mov
mov
xchg
xchg
andb
insb
subl
or
clc
fsts
repz
mov
rolb
sbb
mov
imul
jnp
pop
jmp
mov
dec
and
sbb
inc
adc
mov
mov
mov
not
mov
mov
jecxz
and
testl
fidivrs
je
jmp
mov
cmpsb
cmp
cs
push
pop
or
mov
out
sbb
imul
orl
push
int3
sbb
jmp
pop
jb
and
sbb
sub
pop
call
sahf
popf
rcl
nop
dec
jo
roll
das
subl
push
push
inc
xchg
add
sbb
and
dec
adc
pop
int3
or
popf
mov
movsl
adc
ljmp
sbb
mov
fisttps
lock
jbe
sbb
push
adc
test
jle
lret
sbb
xor
fldl
std
xchg
inc
push
les
fcmovnu
xor
sub
dec
mov
push
pop
jecxz
or
in
add
inc
test
sub
call
into
cmp
fcoml
sub
jl
push
cmp
es
adcb
fwait
mov
add
or
adc
jns
gs
sbb
mov
xchg
push
push
adcb
stos
push
pop
cli
push
stos
popa
jp
jle
cmp
adc
incl
xchg
sbb
mov
mov
outsb
bound
and
xor
rcrl
popa
push
pop
insb
repnz
inc
sub
sub
sbb
lea
cmpsl
in
in
sbb
dec
pop
shlb
adc
xorb
pop
xor
add
adc
sub
ss
cmc
adc
pusha
inc
sub
cmp
ja
pop
fsts
xchg
xchg
faddl
hlt
in
test
adc
lahf
push
push
xchg
push
lret
lock
xor
in
insb
aaa
inc
sti
sub
call
jne
lea
inc
adc
loopne
push
adc
sbb
mov
daa
addr16
loop
jmp
dec
mov
sbb
mov
sub
jae
xchg
adc
adc
xor
dec
sub
adc
sub
fwait
or
cmpsl
aaa
lock
addb
jb
mov
adc
lds
inc
mov
pop
dec
arpl
dec
loope
jb
push
pop
or
or
adc
cmp
adc
icebp
cltd
add
push
mov
push
pusha
fs
fcoms
adc
call
roll
push
in
roll
push
push
mov
pushf
pop
lods
mov
xchg
and
adcb
bound
pusha
jb
jp
adc
add
loope
push
mov
pop
and
daa
push
arpl
and
and
push
fcomps
sub
xor
mov
sarb
and
pop
lods
mov
rcl
out
movsb
icebp
or
pusha
scas
rorl
mov
and
test
call
mov
xlat
xchg
pusha
inc
sub
push
push
lahf
xorl
mov
mov
inc
adc
add
ret
inc
mov
xchg
push
and
adc
leave
lret
xchg
sub
push
push
dec
aam
arpl
inc
mov
in
pop
cld
je
popa
xor
pop
inc
jae
sbb
mov
or
jmp
ret
sbb
cmp
sbb
adc
sbb
xchg
cmp
mov
pop
sub
jo
xor
mov
clc
mov
add
push
xchg
xor
push
inc
mov
pop
dec
jle
int3
es
push
or
rolb
mov
and
sahf
test
fnstsw
jle
jl
xor
dec
shll
lock
ss
ss
lods
mov
add
es
push
lahf
in
mov
rol
jg
mov
jecxz
jbe
add
std
sub
inc
and
movsb
pop
js
data16
imul
fisttpl
rclb
jno
pop
push
add
dec
cmp
xor
mov
shlb
mov
adc
jo
popf
aad
jno
lods
shll
pop
adc
push
inc
jo
dec
and
insb
jb
pop
dec
in
adc
jbe
add
fistl
pop
mov
pop
adc
sub
push
mov
pop
sub
cmp
cmp
pop
sahf
and
add
cltd
pop
inc
mov
mov
aaa
or
insl
adc
inc
jp
ficompl
flds
dec
rcrb
push
insl
push
mov
jno
pusha
add
lcall
lds
cli
lea
lret
and
lcall
inc
pop
dec
mov
aaa
mov
shl
push
inc
push
add
xor
lods
hlt
inc
cwtl
inc
adcb
jo
aad
push
inc
test
ds
mov
pop
fmuls
jo
pop
push
je
cltd
idivb
add
pop
cmp
jl
or
das
addr16
mov
sub
jg
jmp
xchg
xchg
or
add
dec
or
and
xchg
fidivrs
outsb
imul
and
and
xchg
mov
pop
sti
lock
sub
addb
mov
sub
cmp
adc
test
and
mov
cmpl
rcrb
dec
sub
out
jb
jns
pusha
outsb
pop
inc
ret
add
aas
xor
xchg
pop
xchg
in
push
dec
mov
push
dec
jae
pop
push
ret
mov
pop
adc
sbb
and
adc
push
inc
stos
jecxz
nop
push
icebp
nop
fwait
add
hlt
cmp
fcomp
xchg
sbb
adc
je
loopne
into
in
jne
dec
cmp
or
pop
adc
stos
add
or
xchg
adc
xchg
adc
push
pop
adc
sti
leave
adc
xorl
or
xor
sbb
adc
out
add
mov
shlb
outsb
sub
and
pop
lock
sbb
call
adcb
rcr
cwtl
adc
or
lods
and
and
inc
add
int
and
aas
sbb
imul
test
ja
adc
mov
push
cmp
das
addl
movb
push
xor
lret
inc
push
fwait
imul
enter
xchg
cmpl
cmc
xchg
or
jp
loopne
xchg
aas
imul
sub
adc
imul
jmp
xor
adc
adcl
mov
add
xor
inc
js
lea
cmp
or
dec
dec
loopne
jne
test
sbb
xor
lret
mov
push
jle
jbe
in
or
or
push
sub
push
daa
jg
adc
xchg
or
inc
or
gs
aam
outsl
add
xchg
mov
mov
icebp
insl
or
rsqrtps
shl
pusha
test
clc
push
push
test
jge
clc
inc
cmp
fsubrs
cmp
inc
mov
push
sub
jno
adc
or
ljmp
pop
rolb
std
pop
movsb
sub
orb
push
xchg
mov
movsb
inc
and
imul
pusha
pop
push
push
jo
cwtl
push
inc
cwtl
rcr
inc
dec
add
imul
jbe
or
and
push
popa
je
jnp
int3
or
sbb
nop
pusha
cs
sub
inc
lock
xchg
jmp
test
add
mov
add
test
push
fwait
lods
mov
xor
xchg
add
cwtl
sbb
in
mov
push
hlt
dec
cmp
into
push
add
jnp
aaa
outsl
mov
mov
mov
adc
and
or
and
adc
push
cs
sbb
push
mov
and
inc
sub
test
cltd
and
fcompl
pop
mov
dec
mov
fisttps
pop
dec
dec
push
pop
loopne
push
lret
dec
dec
adc
insl
bound
push
push
rorl
gs
leave
pop
push
gs
cwtl
or
inc
jbe
add
repnz
push
ljmp
insl
jo
adc
dec
inc
jnp
movsl
mov
inc
out
push
outsl
aas
dec
roll
dec
jae
mov
sbb
daa
pop
out
mov
cmp
mov
xor
xchg
sub
nop
fbld
mov
lock
lods
jl
cmp
mov
sbb
mov
and
mov
sub
es
ret
jle
jp
sbb
sbb
cmp
adc
and
sbb
push
loopne
ret
mov
ret
mov
and
adc
add
adcb
sub
inc
movsl
cmp
push
popa
addb
push
sub
dec
cmp
mov
dec
fucomp
push
sbb
aaa
mov
ficoml
outsl
sub
or
pop
push
or
xor
push
cmp
dec
sbb
jmp
sbb
add
add
data16
dec
mov
int3
xor
push
push
imul
repnz
inc
sti
test
sbb
sarb
imul
mov
jb
lea
lock
enter
fdiv
cmp
imul
int3
ja
jno
rclb
roll
addb
iret
fildl
and
mov
sub
adc
aas
lock
lds
nop
pushf
sbb
sbb
clts
add
dec
jg
or
push
xor
loope
test
repz
les
out
pop
sbb
inc
or
add
xchg
jbe
mov
ljmp
and
inc
outsb
pop
cwtl
dec
cmpsl
pop
xchg
iret
jg
lahf
or
jne
test
or
outsb
call
dec
stc
pushf
mov
xorb
cmpsb
adc
add
add
cmpsl
iret
mov
push
je
jge
inc
setae
mov
jge
inc
mov
xchg
dec
pop
add
pop
dec
enter
pop
sbb
xorb
add
push
int3
pusha
adc
stc
fcmovbe
ja
push
clc
pusha
inc
add
lock
and
xchg
inc
ficoml
push
je
adc
mov
out
sti
ss
jne
sahf
xchg
jl
mov
inc
pop
inc
jb
jmp
filds
rorb
roll
sbb
xlat
addb
sbb
js
or
dec
movsl
xor
imul
orb
das
and
cmpb
xchg
add
mov
inc
cwtl
add
jbe
repz
push
dec
and
mov
imul
cmpsl
add
lea
and
xchg
test
shll
cs
psubb
xchg
add
and
or
subb
pop
sub
and
cmp
andl
hlt
push
test
test
and
add
inc
call
addl
in
add
jl
in
aam
out
outsb
inc
xchg
inc
push
insb
or
and
imul
dec
in
or
andl
adc
enter
and
jo
and
adc
jp
nop
push
movsb
mov
loope
testb
out
inc
pop
pop
pusha
movsb
out
sahf
push
add
outsl
add
push
test
push
sbb
pop
fs
pop
sbb
mov
sub
pop
aad
pop
pop
dec
xor
mov
ds
aaa
pusha
fldl
sub
add
rcrb
add
sbb
cld
push
sbbl
ss
push
xchg
or
test
add
jo
xor
xor
inc
add
nop
idivl
push
lea
inc
or
loopne
mov
push
jmp
jbe
ret
rcr
movsl
mov
es
rorl
xchg
sub
pop
or
clc
sub
cmp
fucom
ret
xor
add
sbb
sti
loope
and
in
adc
ss
pop
insb
int
scas
lock
xchg
add
int3
xor
leave
daa
and
scas
add
xor
add
ds
roll
cwtl
mov
add
adc
popf
out
xor
xorb
add
jmp
bound
adcb
lock
lea
sbb
push
pop
dec
imul
cmp
lods
cwtl
shl
pop
or
test
xor
push
aad
pop
mov
int3
pop
nop
sub
out
rorl
cmpsl
cmp
push
cwtl
xchg
mov
adc
and
add
andb
lea
cmp
and
pop
push
je
xor
addb
arpl
inc
movb
mov
and
pop
lahf
or
fsubr
scas
inc
rcl
jo
loope
ja
cmc
pop
xor
xchg
stos
inc
scas
mov
or
inc
sub
imul
cwtl
and
jo
push
xchg
adc
pop
incl
lods
sti
and
cld
xor
pop
lock
lcall
stc
push
sub
ret
das
pop
add
stos
test
sbb
push
popf
xchg
enter
xchg
sub
ds
push
push
jmp
xorb
lret
or
xchg
inc
xchg
mov
nop
mov
ss
push
xchg
lea
lds
adc
daa
adc
pop
and
xchg
adc
cmp
mov
push
add
out
jb
mov
adc
dec
pushf
movsb
mov
lea
rorl
sub
xchg
ja
adc
adc
cmpl
lea
in
aas
fs
push
pop
mov
mov
je
data16
nop
xor
jnp
inc
add
cmpsb
jge
xchg
add
inc
dec
or
imul
mov
adcl
xchg
xchg
outsb
sti
daa
push
adc
call
dec
cmp
fmull
fbstp
sub
jne
mov
pop
sbb
out
and
or
add
mov
ret
js
xor
pop
imul
fmuls
adc
mov
loopne
dec
xchg
adc
loope
mov
test
mov
jle
out
push
jnp
stos
or
std
add
inc
lock
sub
js
cld
je
lds
cs
imul
sbb
jne
cmp
push
pop
inc
ljmp
pop
cmp
mov
lods
outsl
jmp
sub
dec
sub
add
enter
mov
sbb
sti
out
or
mov
loope
shlb
insl
orb
xor
inc
ja
leave
pusha
call
sub
scas
jb
pop
cmp
je
test
xchg
andb
jg
add
adc
or
enter
nop
orl
iret
je
jne
add
rcrl
mov
mov
adc
enter
or
jo
fstpt
mov
mov
popf
adc
sbb
mov
pop
mov
shl
repz
rorl
pop
sbbl
ret
jne
adc
ret
lea
aam
sar
sbb
sbbb
test
inc
out
pusha
cmp
movsb
lock
lea
mov
sbb
pop
mov
dec
inc
in
inc
cmpb
cmpb
jg
sbb
or
xor
add
imul
or
inc
cmp
insb
loopne
pop
iret
add
pop
adcl
xchg
movsb
scas
aaa
jmp
movl
mov
fs
xchg
xor
mov
xchg
pop
test
add
cmp
addb
es
add
dec
sbb
cmpsb
mov
add
and
xlat
xchg
pushf
fstl
add
add
xor
mov
adc
and
push
and
inc
jp
cmp
test
mov
push
adc
mov
push
xor
cmpl
clc
add
loopne
mov
in
xchg
lods
push
sahf
cld
push
mov
mov
pusha
push
lcall
cmpsl
cmp
mov
aaa
push
push
dec
adc
in
pusha
xor
jg
pop
xor
cmp
xorl
subl
or
pop
je
dec
sbb
test
cmp
xor
aad
cmp
aas
mov
xor
movl
rorb
fnsave
add
dec
pop
xchg
imul
sub
xchg
push
insb
ja
xchg
sbb
das
xchg
insb
sbb
test
push
and
addl
push
push
or
xchg
popf
call
xor
lcall
cmc
push
stc
mov
stos
push
xor
jge
add
int3
idiv
nop
add
cmp
inc
inc
sub
mov
add
imul
inc
jne
dec
sbb
cwtl
and
xchg
adc
call
adc
in
int3
sub
add
call
sub
int3
xor
and
fwait
test
loopne
inc
cmp
and
add
out
jge
xchg
sbbb
hlt
pop
sub
int3
push
js
lahf
xchg
mov
icebp
aas
or
add
mov
xabort
xor
out
aas
pusha
inc
mov
dec
cmp
cmp
jecxz
or
xchg
xor
out
and
mov
cli
outsb
adc
xchg
iret
xchg
movsb
mov
das
dec
pop
xor
sahf
fisttpll
lahf
test
adc
mov
and
fs
ljmp
xor
or
adc
loopne
jmp
add
cmpb
push
popa
cmp
pop
or
push
push
xor
scas
js
sets
jno
cmp
icebp
inc
jmp
cmp
fmull
push
xchg
inc
push
xor
shr
sbb
cmp
rorb
dec
cmp
shlb
int3
jno
inc
or
insl
dec
cmpsb
push
inc
cltd
sbb
hlt
adc
lock
push
nop
xchg
add
repz
or
and
mov
xor
push
cmp
push
adc
outsl
add
mov
cmp
push
or
nop
iret
inc
xor
push
inc
adc
cwtl
je
test
push
dec
js
hlt
jl
mov
repnz
fmul
push
xchg
push
daa
nop
std
testl
mov
je
xor
ret
xor
inc
popf
xchg
sbb
popa
cmp
or
mov
out
insb
sbb
cs
fldt
test
mov
push
sub
jbe
pop
pushf
fimuls
inc
lcall
loope
mov
lock
pop
loope
mov
loop
inc
add
pop
aam
dec
push
xchg
xor
call
mov
pop
dec
test
adc
orl
dec
sbbb
xor
sub
xor
mov
or
aaa
mov
and
add
or
shll
and
jne
pop
or
mov
lods
sbbl
push
cmpb
push
sbb
rolb
movsb
sti
roll
rcr
pop
mov
xchg
ss
das
add
jnp
and
dec
jecxz
loop
and
call
and
mov
adc
les
js
push
daa
out
test
sbb
xchg
dec
adc
dec
xchg
mov
in
sub
ret
enter
popf
lock
xor
xlat
int3
shlb
and
repz
or
shrl
jno
jb
sbb
sbb
icebp
adc
adc
dec
test
dec
inc
mov
in
xchg
shll
addl
pop
call
xor
xor
and
addb
neg
shlb
and
test
leave
xor
push
add
xchg
test
insb
aas
lahf
mov
mov
adc
rolb
dec
inc
inc
mov
or
sub
push
inc
cmc
push
inc
inc
and
mov
cmp
cwtl
dec
test
daa
jmp
sub
and
rcrb
or
and
insl
jno
push
cmpsl
inc
dec
jns
sbb
push
and
arpl
push
push
inc
mov
lods
cmpsl
outsl
mov
adc
mov
sbb
les
insl
cmp
and
inc
jl
mov
fs
push
xor
sbbb
xchg
and
push
je
mov
ja
lret
inc
adc
mov
sub
and
cmc
in
jg
xchg
pop
sbb
xchg
outsl
sbb
adc
decl
rolb
es
test
push
ljmp
fcmovnb
dec
or
add
stos
in
or
ljmp
xor
dec
and
mov
adc
pushl
out
cmp
or
mov
aam
or
lods
push
jae
and
add
mov
test
scas
movl
and
cmp
jmp
or
adc
movsl
add
sub
mov
xor
sbb
das
sbb
add
lock
cmc
push
xor
mov
sbb
push
shll
shrl
orl
loopne
xor
adc
add
xchg
ja
pop
adc
inc
sub
adc
pop
sbb
pop
jp
and
aam
popa
adc
aas
lock
std
jne
add
cmpsb
add
pop
sub
xor
adc
dec
push
shl
add
add
xor
aad
jl
push
orl
or
popa
bound
mov
fwait
sbb
in
imul
loope
xchg
shlb
es
imul
and
rorb
loopne
in
mov
push
sub
daa
pushf
data16
push
mov
cwtl
pop
mov
push
movsl
add
daa
inc
imul
scas
adc
jo
sar
adc
ret
jno
rorb
lret
mov
and
in
and
ret
arpl
inc
mov
push
dec
inc
push
mov
push
loopne
push
aas
movsl
sub
cmp
adc
ss
dec
filds
xchg
xchg
xchg
dec
xchg
sbb
in
push
mov
add
xchg
add
dec
sub
lods
and
in
ret
sbb
xchg
xlat
mov
adcl
enter
jns
cmpsl
push
icebp
cmp
mov
xchg
ficomps
out
mov
sub
pop
sub
out
add
mov
dec
cltd
in
xchg
jne
dec
cmp
and
scas
or
mov
or
xchg
orl
jmp
xchg
loopne
or
lock
pop
cmpsb
jmp
mov
test
mov
mov
or
ret
add
add
mov
pop
mov
mov
out
pop
mov
and
repz
xor
repz
or
xorl
inc
clc
pop
filds
inc
dec
sub
daa
sub
movsl
insb
shlb
adc
fsubrs
sbb
inc
push
sbb
xor
pop
push
mov
imul
cmp
jne
insl
insl
pop
test
inc
mov
or
das
jb
and
les
adc
sbb
add
and
fs
inc
imul
inc
or
mov
xchg
or
outsl
push
cmp
dec
fisubl
imul
pop
test
and
test
lcall
add
icebp
and
jg
cld
incl
ret
push
push
jle
decl
cmpb
flds
movb
xor
xor
add
dec
pop
adc
lds
adc
test
es
stos
sbb
adc
cmp
test
xchg
inc
dec
mov
adc
imul
add
xchg
xchg
aam
jp
out
sti
in
incb
or
or
popa
jb
add
dec
push
jle
or
in
test
xor
or
push
mov
mov
push
bound
insb
jnp
add
jge
scas
dec
lahf
int3
or
pop
inc
sub
or
inc
std
and
mov
add
push
mov
and
dec
jae
stos
cmp
sbb
push
int
fs
arpl
xor
shlb
pop
insb
icebp
push
or
mov
adc
addl
push
jne
add
ljmp
mov
add
add
inc
insb
and
les
inc
aad
movsb
insb
or
adc
in
mov
or
xchg
dec
push
call
out
add
inc
add
pmulhuw
shl
ret
adc
dec
fimuls
pop
test
push
fdivrs
iret
jnp
push
jl
rorl
mov
pop
rorl
push
int3
in
push
mov
pusha
pop
les
mov
daa
fldcw
dec
scas
adc
lods
rclb
das
mov
mov
cmpsb
enter
sbb
in
sbb
ret
inc
repz
fucomp
lret
cs
rorb
mul
add
into
in
xorl
ja
addr16
dec
pop
mull
clc
jae
cmp
jecxz
ja
iret
in
inc
call
cmp
pop
cmp
pop
sbb
daa
cwtl
ss
jo
test
and
lea
test
nop
je
pop
test
imul
nop
sub
or
jbe
in
repz
inc
xchg
xchg
or
nop
xchg
out
gs
dec
cmp
dec
add
mov
and
fs
cmp
add
mov
imul
scas
dec
cltd
loope
sub
pop
pushf
mov
aas
sbb
addb
cld
ficoms
loop
mov
sbb
inc
aad
add
inc
in
insb
xor
mov
or
js
adc
cmp
in
xchg
or
mov
rcr
out
mov
or
aas
inc
push
icebp
mov
loop
incb
sbb
gs
push
out
push
mov
loop
push
fs
push
xchg
mov
fsub
stos
mov
stos
sub
jecxz
mov
test
dec
jp
sbb
mov
jo
mov
rcll
cmp
popa
fs
int3
push
loopne
push
inc
pusha
xchg
js
inc
outsb
test
adc
or
sbb
ds
mov
adc
cmp
loopne
jae
lock
pop
inc
orb
imul
nop
jae
xorl
xor
add
pop
enter
dec
flds
pop
pop
lods
mov
mov
jbe
das
mov
daa
mov
push
jo
into
mov
pop
and
inc
or
pop
imul
popf
inc
ss
inc
cmc
mov
sbb
ret
inc
push
xchg
in
je
call
es
test
pop
jge
push
enter
roll
aaa
mov
fiadds
adc
mov
popf
filds
in
mov
pop
pop
in
inc
mov
xchg
add
mov
movsl
xor
in
add
jle
add
insb
fisubrs
push
push
pop
and
sub
inc
push
cmp
scas
or
fs
bnd
add
test
aas
xor
loopne
pop
push
mov
sub
mov
adc
sub
or
pushf
sti
mov
js
xor
and
push
incl
jbe
je
push
jnp
std
enter
pusha
push
or
pop
inc
jne
movsb
iretw
cld
adc
pop
cmpsl
pop
inc
hlt
mov
and
or
or
lea
mov
add
push
cmp
mov
cltd
pop
insl
dec
std
je
cmpb
push
jo
imulb
pushf
fisttpll
push
aam
and
mov
sub
cmp
dec
mov
add
or
out
fdivs
or
xchg
sbb
ffreep
add
jae
add
xchg
mov
fmull
adc
gs
sbb
jo
fistps
lea
mov
and
push
sbb
mov
nop
into
mov
push
push
add
mov
mov
or
in
lock
or
push
add
ss
pusha
scas
in
or
rorb
push
nop
pop
pop
daa
inc
pop
imul
fcoms
or
inc
pusha
es
enter
mov
enter
pop
orl
push
and
xchg
and
ja
mov
sbb
and
xor
mov
mov
and
data16
sahf
push
imul
jecxz
and
or
addb
leave
sub
pushf
sbb
or
in
sbb
stos
add
paddsb
out
addb
xchg
add
inc
mov
repnz
mov
add
lds
pop
rolb
sub
adc
push
cmc
hlt
ret
xchg
and
lcall
xor
ss
cmp
xor
inc
inc
cmp
dec
inc
dec
dec
dec
dec
dec
dec
dec
dec
xchg
rcl
mov
push
push
pop
pop
pop
jge
imul
mov
xlat
xchg
sub
xchg
dec
dec
adc
mov
push
or
lret
push
add
xor
push
lods
sub
xor
or
std
xchg
out
aad
enterw
push
inc
mov
adc
jo
mov
jns
xor
fdivr
mov
pushf
test
std
sub
jnp
pop
push
xor
add
incb
pusha
lods
imul
xchg
or
pop
loopne
sub
jge
add
rcr
sahf
dec
imulb
add
ret
and
sub
out
mov
mov
push
push
inc
jge
shlb
dec
or
sarb
stos
pop
inc
lcall
sbb
fidivl
test
cli
add
call
das
pop
daa
pcmpgtb
and
add
add
mov
js
or
pop
jmp
loope
movsb
cmp
out
add
es
jmp
inc
inc
aas
sbb
insb
inc
dec
pusha
sub
lret
push
dec
xor
dec
mov
jmp
or
popa
loope
leave
xor
dec
ffreep
pop
push
sub
mov
sbb
xor
and
cmp
and
xor
pop
xchg
add
xchg
test
leave
les
pusha
roll
jns
add
or
cvtps2pd
cmp
iret
cli
in
or
jo
ljmp
mov
cmp
push
mov
in
inc
aaa
clc
push
xor
popf
jge
daa
or
insb
cmp
jmp
adc
or
sbb
out
mov
jmp
popa
nop
inc
cs
mov
jmp
add
sub
aaa
sub
mov
lcall
gs
xchg
or
jmp
inc
sti
push
add
add
inc
pusha
sub
in
xchg
aaa
lock
into
pop
cmp
mov
xchg
add
jbe
mov
and
iret
jmp
cmp
stos
or
or
push
push
fistpll
cmc
mov
mov
and
adc
xor
mov
cmp
je
mov
add
xor
cmp
jg
mov
ret
push
sub
and
xor
inc
lods
dec
shl
fcmovnbe
imul
insl
clc
orl
push
jp
sub
mov
pop
add
dec
inc
adc
fisubrl
stos
arpl
cli
sub
add
outsl
sub
call
cmp
ja
jo
clc
ja
jbe
mov
pusha
pop
xor
jmp
ss
xor
and
popa
hlt
xor
nop
into
pop
leave
pop
nop
pushl
aaa
sbb
mov
in
inc
or
shll
ret
sub
inc
leave
roll
cmpsl
add
arpl
lock
orb
lds
out
popa
movsb
jns
mov
fs
sbb
fwait
add
nop
fwait
mov
mov
movsl
fldl
iret
inc
cmp
nop
lret
add
pop
mov
cmp
inc
dec
push
faddl
dec
pop
mov
add
push
push
inc
loop
imul
iret
int3
sub
sar
insb
movzbl
cmp
fistps
gs
inc
inc
adc
or
inc
sub
inc
ficoml
pusha
add
push
inc
xchg
and
or
push
pop
xchg
out
in
lock
cmp
xlat
add
test
je
sbb
add
sbb
and
lcall
mov
insl
push
mov
dec
or
pop
or
in
push
inc
aas
je
add
aas
inc
jecxz
movsl
xchg
iret
fwait
inc
jmp
mov
inc
movb
fsubrs
imul
add
inc
data16
mov
inc
mov
hlt
in
inc
js
test
adc
sub
inc
pusha
or
insb
or
pop
out
sbb
push
or
in
fildl
jb
mov
jle
adc
adc
cmp
add
aam
add
dec
jae
cmpsb
cmp
js
mov
inc
loopne
rolw
leave
add
nop
cmp
fstl
adc
rolb
cli
xor
pop
sub
jnp
adc
fldcw
dec
dec
pop
xor
fistpll
adc
fucomi
dec
test
pusha
insb
cmp
mov
pushf
fs
add
popa
mov
or
mov
mov
mov
popf
xor
daa
outsb
imul
cmp
mov
lock
add
shr
push
lock
jle
and
mov
jge
aaa
mov
adc
out
lock
pusha
pop
xor
movb
pop
test
xchg
sti
nop
push
sbb
mov
dec
dec
sub
out
or
sti
cwtl
pusha
adc
je
mull
notb
cmp
pop
cmp
js
inc
into
pop
xlat
add
xchg
data16
sbb
or
xchg
rclb
insb
inc
and
pop
adc
test
adc
pop
adc
xor
lea
cmp
dec
sub
or
std
in
adc
pop
mov
into
adc
les
pop
daa
jo
xor
adcl
andl
je
dec
mov
cmp
cld
and
notb
cmp
test
xchg
pop
pop
jo
sbb
icebp
add
sti
dec
jo
sub
adc
or
add
mov
adc
stc
cmp
into
dec
loope
bound
rcr
xchg
inc
loop
mov
add
add
dec
dec
adc
mov
cli
rclb
testb
mov
inc
ss
and
loope
incb
mov
mov
sbb
mov
add
dec
aaa
mov
fs
pop
jecxz
push
dec
aam
mov
adc
stos
push
je
jp
adc
movsb
dec
in
jne
dec
loope
and
je
repnz
in
mov
sub
pop
sahf
cmp
dec
or
sti
inc
add
push
inc
push
cmpl
inc
jecxz
adc
inc
jg
push
dec
cmpl
jo
sbb
and
pop
je
add
dec
xorb
inc
and
xlat
and
and
mov
xchg
mov
movl
and
cmp
jae
mulb
cmp
jmp
jbe
sbb
clc
add
cmp
xor
add
mov
cmovbe
fucomip
push
sbb
jmp
adc
push
or
mov
lds
shll
dec
push
daa
inc
sbb
icebp
mov
cwtl
mov
ret
jp
sbb
cwtl
or
cmpsb
test
rol
dec
or
in
in
or
lret
or
data16
adc
call
mov
mov
and
incl
cmpsl
subb
push
and
or
add
add
subl
add
and
daa
subb
cmp
es
pmaxub
arpl
push
rcr
and
mov
xor
outsb
cmp
enter
xor
inc
sub
ret
push
sub
mov
fsubrl
lret
lds
fprem
cmpb
mov
bound
jnp
add
dec
or
mov
sbb
inc
push
ret
mov
sub
push
fisubrl
or
sarb
roll
sar
adc
inc
aaa
jbe
inc
movsb
subl
mov
mov
ret
enter
adc
cwtl
out
dec
and
adc
push
cmp
ret
and
jo
movhps
xchg
es
add
inc
push
mov
xchg
adc
dec
xlat
lret
and
xorl
scas
sbb
adc
stos
pop
mov
test
fildl
outsb
push
leave
fmul
fidivrl
adc
or
and
dec
scas
sub
xchg
adc
inc
stc
loopne
inc
outsb
movsb
inc
jle
cmpl
inc
iret
mov
dec
lret
rorb
sub
lcall
daa
fprem
das
loopne
lock
and
mov
enter
std
push
or
sub
lock
cmp
movsb
outsl
cs
mov
cmp
insl
xor
inc
cltd
pop
inc
movsb
jle
mov
adc
sbb
shlb
sub
test
or
cmp
jo
jl
inc
test
push
add
ds
mov
inc
add
mov
mov
cmp
ret
shlb
and
add
sub
sarb
lock
add
mulb
out
movaps
xor
jmp
push
add
inc
sahf
dec
adc
negb
mov
push
cmp
iretw
cmp
decl
push
fmuls
jns
scas
inc
or
push
cmpb
mov
fmuls
dec
and
lock
and
imul
pusha
mov
xchg
dec
test
lock
inc
cwtl
pop
cmp
lds
mov
popw
push
push
inc
adc
cmp
adc
fsubrs
sub
loope
lcall
testb
iret
pop
mov
ret
push
fcomp
ret
push
or
and
cltd
add
outsb
sbb
popf
mov
pop
push
or
fwait
fwait
dec
or
sub
sub
push
add
inc
push
sub
pop
sbb
sub
roll
pop
movsl
inc
push
xorb
or
movsl
rolb
test
ja
mov
adc
push
add
dec
cmc
sub
fadd
push
lock
lret
or
cmp
sbb
mov
xor
repnz
pop
pop
iret
hlt
cmp
hlt
pop
in
dec
insl
into
hlt
sub
push
add
mov
stos
sub
repz
push
shl
pop
jns
inc
pusha
sbb
pop
addb
clc
push
mov
rorl
cld
add
sub
sar
fs
and
sqrtps
cltd
add
jo
imul
orl
mov
dec
or
sar
loopne
mov
nop
or
cmc
shrb
ja
outsb
movsb
xor
fistps
loope
cmp
sahf
add
loopne
and
fwait
sbb
add
pop
fcoms
jne
push
dec
mov
test
ds
lcall
pusha
cld
xchg
or
movsl
adc
lcall
sbb
add
or
imul
push
bound
orb
aam
sbb
xlat
xchg
add
pop
jecxz
or
dec
or
leave
in
out
add
shrb
inc
test
in
mov
aaa
subb
repz
and
pop
push
cmp
or
data16
ret
push
xor
mov
pop
lods
mov
sub
out
aas
add
pushf
in
in
ret
aam
adc
adc
cmpsl
dec
adc
sbb
push
push
call
push
pushf
push
jb
dec
mov
icebp
int3
inc
imul
mov
lods
clc
sub
test
push
enter
push
leave
add
jns
lock
clc
repnz
ficompl
mov
stos
inc
add
imul
arpl
rclb
pop
pop
and
lock
and
sbb
dec
and
add
call
adc
in
lods
adc
or
and
cmp
inc
dec
jge
xchg
mov
push
daa
fs
adc
add
fwait
cmp
das
adc
mov
mov
or
test
sbb
cmp
inc
add
pop
cltd
test
cmp
sbb
push
addb
rcr
sbb
sbb
shl
mov
ja
je
inc
jnp
cmp
sub
jo
or
leave
fwait
jae
jl
jge
sub
dec
shlb
cld
pop
insb
mov
or
pop
adc
mov
push
push
lcall
push
lock
mov
add
sub
push
je
sub
imul
pop
fwait
jbe
sti
pop
pop
inc
push
sbbl
and
adc
adc
lret
lret
je
pop
mov
dec
push
fs
fs
jl
cmp
pop
jl
or
cs
sbb
xchg
test
aaa
mov
mov
push
add
add
and
jns
sarb
sbb
dec
jl
mov
add
inc
inc
dec
and
movl
mov
mov
mov
dec
movsl
push
sbb
lahf
aas
lret
dec
fsub
adc
hlt
mov
loope
pop
inc
or
inc
rol
adc
inc
gs
mov
inc
call
cmp
push
push
push
ret
xor
jns
and
sbb
push
pop
cmp
xchg
jmp
dec
into
out
cwtd
test
cltd
insb
mov
push
push
shl
push
or
stc
cmpsb
dec
mov
xor
push
pop
or
xchg
or
push
mov
sbbl
or
add
in
ja
or
dec
sbb
popl
das
or
sub
je
cmp
inc
push
and
push
add
fldcw
push
xchg
mov
in
push
cmc
popa
ret
ljmp
jnp
add
pusha
mov
test
adc
sub
and
fsubrl
lock
or
mov
adc
das
push
push
inc
add
div
adc
ret
dec
adc
mov
insb
and
inc
sub
mov
jb
jle
pop
fistpll
mov
jp
aas
or
inc
bound
xor
pop
xchg
fs
sub
or
lea
ss
daa
push
add
jg
xor
or
push
xlat
add
sbb
xchg
mov
xchg
pop
lods
push
add
hlt
cmpb
loope
jo
fbstp
cmpsl
cmp
pop
lods
or
xor
mov
xchg
sti
mov
add
insl
or
pop
cwtl
cmp
adc
out
insl
daa
mov
mov
sub
jne
add
addr16
popa
and
push
inc
lods
mov
adc
add
xor
pop
ds
cmpsb
das
pop
sub
pop
sbbb
ret
out
mov
outsb
imul
fidivrs
ds
inc
push
push
and
dec
inc
jo
add
shll
sub
mov
xor
add
jecxz
cmp
jnp
outsl
push
lret
add
int3
aaa
js
test
cwtl
xor
stos
add
ljmp
aam
addr16
pop
pop
rclb
cmp
cmp
lret
and
inc
lret
aaa
cs
dec
sub
push
pop
movb
and
fimuls
cwtl
and
sub
loop
and
jge
insl
loope
or
pop
mov
rolb
lcall
adc
ljmp
mov
and
loop
sub
dec
aas
popa
icebp
cltd
inc
ja
inc
xor
addb
pop
inc
sbb
sbb
ljmp
adc
pop
test
ss
adc
adc
push
or
xchg
mov
xor
das
insb
stos
fs
push
faddl
lods
adc
cmp
subb
test
add
or
test
adc
mov
je
cmp
sub
sub
pop
and
pop
add
or
add
jmp
sti
fdivs
push
arpl
movsb
icebp
adc
bnd
movsb
fs
mov
mov
ss
adc
mov
pop
sub
lock
sub
xor
adc
flds
orb
fnsave
xor
ss
notl
push
lock
inc
xchg
jmp
cwtl
sbb
ja
fmuls
adc
push
adc
jecxz
xchg
insb
cmp
push
mov
out
jmp
iret
les
add
dec
inc
mov
dec
jno
out
dec
pop
inc
dec
or
inc
push
ja
push
aas
cvtps2pd
dec
sbb
nop
mov
fs
inc
inc
inc
add
pop
and
push
sub
mov
xor
add
sbb
pop
fcoms
mov
lods
out
add
mov
or
add
lock
ret
iret
int
popf
jle
out
add
gs
outsb
popf
les
cmp
cmp
ss
mov
push
scas
ret
inc
lret
in
ja
cmp
je
mov
cmp
or
xchg
dec
jnp
lret
and
xor
lds
test
lahf
les
test
push
bound
xchg
push
jo
jle
lock
dec
mov
sbb
cmp
movsb
push
mov
push
ja
mov
int3
sbb
pusha
push
pop
pop
or
inc
pop
xchg
fldenv
ja
movsl
aas
insb
jge
dec
xor
inc
inc
xchg
jne
add
push
push
data16
pop
ds
hlt
and
movsl
pop
pop
pop
in
gs
dec
adc
dec
push
es
insl
push
lods
and
pop
cmp
pop
xlat
hlt
test
xchg
inc
and
inc
jb
aas
and
xchg
pop
and
cmp
pop
leave
inc
jb
inc
inc
adcb
push
xchg
out
push
mov
add
movsb
inc
adc
cmp
in
dec
mov
push
dec
xor
sub
and
xor
push
jno
popf
or
out
fisttpl
jmp
push
pop
in
push
dec
fsubrl
or
enter
cmpsl
jl
sbbl
jl
add
imul
fdivrs
shlb
ds
add
ss
pop
push
push
insl
in
ja
mov
and
fldt
pop
mov
or
pop
dec
or
add
xchg
rolb
or
and
movsb
pop
adc
int3
xor
cwtl
in
pop
xor
setnp
sub
sbb
mov
mov
xchg
outsb
call
or
add
daa
or
lret
add
out
cmpsl
mov
test
adc
ret
push
mov
jnp
xchg
fmuls
or
out
pop
test
cmp
testb
jne
add
push
jbe
sarb
pop
inc
out
faddl
enter
imul
jnp
pop
xlat
mov
or
sbb
out
add
sub
jno
dec
in
aaa
pushl
dec
inc
add
push
pop
movsb
mov
test
icebp
out
int
inc
push
sbb
ja
add
sub
push
xor
adc
les
daa
xor
add
call
add
push
add
pushf
mov
addl
cltd
cmc
push
or
sbb
mov
in
arpl
mov
xor
popa
adc
fisttps
scas
fs
mov
in
fimull
leave
and
repnz
into
fmuls
mov
cld
or
mov
les
mov
lods
adc
sbb
les
andb
mov
bnd
dec
push
pop
dec
xor
loopne
fs
sbb
aam
sbb
dec
std
je
push
sbb
dec
in
imul
shlb
out
test
mov
push
pop
lret
xlat
pusha
pop
push
jl
decl
and
into
lea
sub
xchg
cmpsb
dec
ds
scas
push
lods
test
inc
fidivl
add
adc
dec
or
dec
int
arpl
fsubrl
mov
adc
lahf
filds
jae
inc
jmp
outsb
sbb
jmp
jns
mov
dec
loope
aaa
xchg
sbb
add
mov
lahf
dec
push
and
enter
mov
in
xor
std
fmuls
gs
dec
jmp
inc
fldt
pop
mov
sub
adc
arpl
in
sbb
test
mov
pop
cmp
xor
fsub
adc
popa
imul
lods
sub
add
push
loope
sahf
cwtl
jno
xor
cwtl
dec
sub
int
sbb
jbe
pop
outsb
dec
popa
ret
clc
or
add
jmp
jmp
push
xor
adc
mov
add
icebp
xor
mov
test
sbb
aad
mov
jecxz
cmpsl
ret
xlat
repz
arpl
aaa
cmc
fsubrs
fstps
adc
call
js
mov
ds
test
sub
cmp
aad
inc
fdivs
push
iret
dec
and
xor
pushf
insb
xor
xor
sbb
add
dec
xchg
sbbb
adc
loope
xchg
ds
push
mov
jnp
xor
sub
jl
inc
test
jbe
add
or
fadds
or
movb
pushf
add
dec
ret
in
shll
lea
mov
or
inc
test
or
dec
mov
add
pop
pushf
inc
test
loope
inc
inc
call
jl
adc
and
aaa
dec
and
inc
jb
dec
inc
jne
mov
xchg
dec
ret
inc
aas
idivb
push
aaa
mov
mov
sub
cmpl
ds
push
adc
cmc
sbb
push
lock
pop
add
and
adc
pusha
out
add
ret
mov
push
cmp
and
inc
jmp
andb
clc
and
or
pop
fdivrs
add
cmp
add
pop
subl
sub
pop
push
push
xor
inc
movsb
xchg
xchg
sub
xchg
add
popf
mov
es
and
pop
ret
or
jns
stc
daa
pop
neg
jp
xchg
rclb
or
mov
jo
inc
ret
push
lahf
mov
inc
popa
cmpsl
mov
or
pop
cwtl
ret
aaa
and
sub
sub
lods
nop
daa
sbb
pusha
xchg
stos
call
mov
pushf
daa
add
fcmovnb
adc
xor
fistpll
pop
mov
xchg
pop
adc
add
loop
adc
loope
push
ljmp
add
mov
data16
pop
rol
gs
pusha
cld
add
or
shlb
and
aad
notl
data16
call
adc
int3
js
inc
mov
fcmovne
mov
jmp
pop
pop
or
dec
shlb
pop
mov
cltd
dec
inc
minps
jle
ret
inc
pop
sbb
addr16
loop
push
add
adc
pop
or
cmp
stos
xchg
inc
aas
pop
ss
das
test
adc
add
cmp
mov
sahf
data16
mov
push
add
bound
movsb
addr16
call
sbb
pop
shl
push
and
rcrb
and
add
jp
xor
roll
hlt
das
push
nop
push
push
or
jae
adc
imul
outsl
pop
add
cmp
out
push
fisubrs
push
add
cmp
imul
out
mov
xor
cli
inc
push
addr16
push
cli
in
mov
loopne
push
push
lods
stos
imul
in
fwait
xchg
cmpl
je
jecxz
pop
push
js
rolb
cmp
js
fs
mov
add
pusha
pop
int3
cmp
jp
xchg
jl
leave
cli
gs
adc
add
sbb
adc
push
pop
mov
cmovp
xchg
mov
in
xlat
loopne
mov
xor
push
cli
data16
mov
movsb
cli
inc
cmc
add
lods
xchg
push
lds
jge
inc
sub
sbb
and
inc
or
je
andb
in
daa
pop
jecxz
and
sub
cltd
sti
xchg
repz
jo
imul
inc
shrb
cld
or
push
dec
inc
mov
repz
sti
outsb
addr16
adc
testb
repz
cltd
test
inc
test
popa
pop
clc
push
sbb
mov
xor
xchg
or
das
subb
andl
dec
and
inc
arpl
hlt
ds
mov
sub
push
enter
into
jg
pop
enter
inc
jb
std
mov
cli
add
rolb
ret
xor
push
shl
xor
xlat
or
lcall
ret
mov
mov
mov
cmp
add
add
lock
mov
mov
ljmp
stos
std
es
mov
and
hlt
sub
adc
cwtl
addb
add
inc
mov
in
jns
jb
push
stos
adc
mov
aam
xchg
xlat
std
pop
movb
incl
or
daa
fucom
add
pop
cmp
testb
or
jb
jo
push
sbb
test
int3
loopne
sbb
enter
adc
sub
ret
jle
cld
jo
cmp
pop
or
xchg
jl
sbb
or
je
stos
push
sarb
push
xor
inc
fildl
jmp
icebp
arpl
dec
push
das
lds
ljmp
mov
pop
ret
mov
jl
add
lahf
in
inc
outsb
movsl
ja
push
decb
or
sbb
mov
test
inc
imul
aas
sbb
insb
out
dec
std
inc
jle
xor
jnp
mov
mov
xchg
lea
sbbl
fwait
jno
sahf
and
xlat
add
push
adcb
out
lock
and
jae
hlt
or
clc
pop
pusha
insl
xor
test
cmp
lahf
pop
nop
or
mov
dec
lret
dec
push
mov
xor
das
pop
cmp
daa
mov
mov
lock
adc
cli
pop
and
xor
xor
test
je
push
mov
mov
or
in
pop
shl
jmp
xor
nop
pop
xor
cmp
cmp
add
ljmp
push
dec
xor
push
xor
pop
or
mov
jmp
ss
testb
push
insl
or
and
cmp
lods
inc
xor
and
cltd
loop,pt
or
push
pop
repz
xchg
ficoms
add
mov
and
pop
movsl
push
push
outsb
call
cli
inc
xor
inc
or
xchg
shl
or
aad
add
stos
pusha
loop
mov
pop
and
aas
lret
enter
lock
sbb
in
push
or
add
shlb
dec
jg
mov
clc
push
mov
or
pop
adc
scas
incl
movsbl
aaa
les
sbb
and
out
sub
addr16
lods
adc
sbb
add
jl
adc
repz
push
in
nop
call
dec
sub
rcl
pushf
xor
in
in
fdivrl
jnp
rcr
fwait
jmp
and
push
and
or
and
sbb
adc
inc
clc
jle
push
in
aaa
in
and
pop
xchg
sarl
xchg
or
ss
ret
loope
repz
adc
daa
cmp
mov
inc
xchg
push
push
inc
sarb
adc
dec
or
lahf
cmp
vmwrite
jb
int
dec
add
pop
push
insb
mov
das
cmp
out
sbb
inc
clc
mov
mov
push
lock
inc
inc
adc
pop
clc
aaa
aaa
sbb
ljmp
add
sbb
sub
adc
push
roll
mov
aas
scas
test
mov
jge
push
sahf
and
ss
xor
cmp
mov
cmp
push
sbb
pop
jno
in
nop
arpl
leave
adc
pusha
xor
inc
fwait
jno
inc
loopne
add
pop
imul
daa
add
js
xor
sub
cld
imul
push
outsl
fmuls
pop
ja
rcll
cs
xchg
adcb
xor
or
cmpsl
adc
add
arpl
nop
and
addb
aaa
push
pop
jmp
push
fcomps
add
inc
sub
addl
dec
arpl
adc
inc
cmpsb
jg
call
cmp
dec
or
push
in
sti
aad
sub
xlat
sub
sub
je
inc
pop
add
add
insb
das
sub
adc
out
xchg
es
cmp
dec
dec
mov
push
push
dec
jp
xor
and
pop
pop
jo
imul
outsb
imul
xor
inc
push
test
add
cmp
cwtl
add
aad
mov
mov
pop
je
dec
sbb
adc
sbb
roll
loop
mov
fldt
hlt
iret
and
xchg
cmp
mov
cmpsb
fmuls
sbb
icebp
and
mov
mov
arpl
loopne
inc
or
xlat
pop
adc
and
and
or
add
mov
inc
or
pop
sub
push
subb
mov
push
dec
mov
clc
mov
or
out
jp
or
clc
or
add
xchg
or
popa
lret
orl
xor
jo
add
inc
or
fdivl
xor
or
ret
je
xor
testl
mov
inc
lods
xchg
fsubl
call
sub
cmpsb
fsubr
sbbb
sub
clc
inc
test
push
push
lea
ljmp
lods
mov
sbb
pop
mov
out
insl
xor
cmc
shlb
fisubl
adc
pop
fdivs
fsubrl
adc
or
in
or
enter
or
or
in
or
push
in
add
or
addl
or
mov
or
and
ret
in
loope
add
je
scas
push
outsb
cmp
call
sbb
imul
outsl
mov
dec
push
add
mov
sbb
xchg
inc
jo
push
push
lds
mov
add
xchg
mulb
or
adc
push
pop
pop
add
decb
mov
inc
daa
sub
andb
push
inc
cmp
mov
cmp
dec
add
lods
movl
push
ret
mov
sub
je
jge
push
add
enter
add
insl
add
pop
clc
dec
push
add
divb
and
push
fcomps
ja
push
ret
dec
push
ret
jo
into
xchg
aaa
sub
xor
cvtpi2ps
sahf
add
std
jmp
and
xor
iret
divl
xchg
add
xchg
jns
pushf
nop
xor
xchg
or
or
jecxz
mov
push
pop
jb
sbb
and
cwtl
dec
cmp
int3
push
sbb
lret
addr16
scas
pop
pop
std
or
cmc
pop
or
pop
cmp
inc
xor
int3
ficompl
pop
or
ljmp
push
mov
sub
mov
lock
mov
pop
imul
cmp
pop
xchg
fsts
push
out
dec
push
stos
pop
cld
mov
xor
pop
jecxz
or
and
jno
or
cmp
ficomps
es
and
cmp
dec
xor
or
jmp
movsb
inc
xchg
jno
dec
aad
fadds
rcr
movsb
push
testb
or
mov
or
and
xor
push
sbb
push
cli
and
sbb
jmp
negb
xorb
mov
sbb
sbb
pop
enter
push
mov
fisubrl
stos
xchg
jmp
aas
shrb
add
sbb
or
call
cmp
or
movsl
xchg
inc
jmp
cmp
and
shlb
mov
xor
or
lret
jl
mov
jg
add
jne
ud1
in
jmp
sbb
cmp
cs
inc
jg
test
inc
add
xchg
imul
pop
pop
mov
cmp
add
adc
and
xorb
and
lock
jl
inc
or
insl
mov
ret
xchg
cmpsl
mov
addr16
add
in
add
rolb
mov
lods
mov
stc
push
jle
shll
aad
jne
dec
jmp
jb
mov
repz
push
xor
xor
out
cmp
dec
sub
or
mov
or
mov
sbb
cmp
pop
adc
mov
or
rcrb
or
mov
out
ss
push
cli
cld
in
lret
push
adc
sbb
add
hlt
cmp
jne
inc
scas
mov
sbb
adc
mov
push
add
cltd
add
loop
scas
sti
outsb
mov
jnp
push
cld
inc
xchg
add
shll
lods
fs
mov
clc
or
xor
daa
leave
or
push
mov
mov
inc
mov
fidivrl
inc
xchg
xor
int
cli
adc
add
ds
outsb
arpl
mov
inc
xchg
ss
rdmsr
mov
pop
mov
movsb
or
lods
mov
jne
ss
adc
in
xchg
sub
or
or
add
add
or
test
lock
out
xor
adc
xor
aad
cmp
stos
loopne
mov
xor
sub
lods
and
mov
xchg
and
or
dec
roll
and
pop
dec
inc
jle
cmp
out
rorl
aas
decb
jl
jle
xor
aas
or
or
add
push
push
mov
push
or
sbb
pop
cmp
mov
mov
xor
and
and
dec
cmp
je
mov
push
push
or
inc
pusha
ret
fimuls
cmp
push
fadds
dec
in
int
cmp
jmp
push
insl
outsl
fs
add
cmp
sbb
sbbb
pop
add
es
push
fidivrs
test
or
insl
bound
or
or
arpl
insb
and
sbb
in
movsb
cmpsl
sbbb
adc
mov
add
mov
cmp
ja
dec
into
enter
sbb
dec
inc
imul
inc
mov
mov
dec
shlb
in
movsb
push
lret
and
out
aas
mov
adc
pop
adc
pop
add
add
dec
add
adc
lock
int
les
add
int
outsb
push
inc
xchg
add
cs
sbb
sub
ja
cmp
in
cmp
sbb
fwait
dec
jnp
clc
push
inc
inc
mov
hlt
pop
push
adc
add
jbe
jp
popa
sarb
nop
xchg
pop
xor
jmp
sbb
add
push
or
pop
stos
push
in
inc
int3
or
cwtl
add
imul
xor
dec
adc
add
sub
mov
jg
add
bound
or
out
cmpsl
push
cltd
shrb
fstpt
aad
adc
int
inc
xor
mov
jae
enter
aad
dec
daa
dec
imul
add
incl
ljmp
inc
std
das
mov
pop
xchg
mov
lahf
data16
invd
dec
dec
into
sub
or
data16
add
fidivrl
cmp
xlat
push
sub
mov
xchg
ja
in
mov
rorw
adc
stos
es
es
or
pop
or
cmp
outsb
or
sbb
lahf
jl
or
sahf
test
mov
js
imul
outsb
jne
sbb
lods
add
dec
jnp
adc
out
and
int3
push
or
add
nop
or
add
cmp
xchg
pop
loopne
jo
addr16
adc
fsubs
add
fsubs
icebp
and
gs
clc
cmp
imul
mov
xor
add
insb
and
outsl
pop
subb
in
movhps
mov
mov
push
jb
test
or
ss
adc
xor
mov
push
outsb
addb
sbb
popa
dec
pop
rolb
adc
int3
push
push
fldl
mov
and
ds
add
add
nop
mov
sbb
or
add
inc
sbb
mov
or
imul
or
iret
push
mov
mov
sbb
rcr
hlt
lods
sbb
test
adc
jo
xchg
js
and
outsb
dec
or
add
les
push
ja
adc
dec
jae
dec
or
addr16
push
push
dec
jle
mov
les
or
or
add
insb
add
pop
cmp
add
fwait
popa
dec
adc
cld
pop
xchg
or
pop
dec
mov
fidivl
push
sbb
adc
sbbl
dec
cmp
pop
dec
add
xor
outsl
adc
mov
sbb
inc
shll
dec
test
push
inc
or
jle
lock
add
nop
sub
push
add
dec
inc
inc
inc
xchg
pop
sbb
xchg
add
aaa
adc
mov
mov
mov
push
add
push
insl
insb
cmp
inc
adcl
int3
addl
jnp
dec
int3
push
dec
dec
mov
divl
dec
scas
mov
jo
add
js
adc
cmp
jp
push
adc
fs
pop
cli
aaa
add
cmp
adc
pop
add
add
ljmp
add
add
add
add
adc
push
mov
sbb
inc
mov
mov
adc
dec
add
add
dec
add
mov
add
add
mov
mov
dec
fbld
mov
mov
pushl
scas
ljmp
pop
lods
ljmp
shl
out
fisubrs
loopne
dec
inc
ja
js
push
test
fwait
addr16
push
jns
test
je
ss
repz
clc
jnp
push
fistpll
inc
jge
push
jle,pt
jle
jnp
mov
push
hlt
adcb
nop
xchg
fidivs
xchg
push
subl
sub
jns
in
data16
cmpb
jno
dec
push
sub
xor
pop
js
mov
es
xchg
push
insb
mov
jge
mov
xchg
lock
push
sbb
mov
ss
jbe
mov
imulb
push
pop
test
push
lock
xchg
mov
test
mov
mov
popl
jnp
pop
and
adc
pop
insl
in
aaa
sbb
sbb
pop
les
sbb
add
jo
notb
pop
lret
push
mov
call
or
dec
mov
popl
stos
outsl
cs
mov
or
les
sahf
xchg
insb
pop
pop
nop
inc
dec
lret
jne
add
pop
loopne
xchg
loopne
shrl
jo
popa
inc
insb
sbb
push
push
sbb
xor
adc
mov
addb
add
sbbl
add
jle
loop
loope
sbb
jo
push
testl
pop
sbb
mov
or
inc
jae
roll
int3
dec
testl
push
enter
das
insb
mov
add
fs
je
mov
dec
sub
adc
sbb
pop
push
add
in
add
push
sbb
or
sub
into
push
xchg
adc
sbb
lds
test
jl
push
push
mov
sbb
push
in
pop
iret
dec
cmp
bsr
fmull
fdivs
fisubl
push
mov
sbb
push
subb
xchg
outsl
shrb
dec
xchg
or
jns
data16
xchg
in
push
mov
cmp
shr
je
push
pop
adc
lock
pop
add
mov
and
cmpsl
add
and
and
push
push
jae
push
lea
int
xor
jns
loopne
mov
push
and
das
frstor
or
add
xor
sub
out
lcall
pop
and
and
in
dec
inc
inc
xor
pusha
and
inc
mov
ljmp
add
sbb
daa
ror
add
push
dec
or
loope
dec
sbb
sub
jp
test
das
bound
mov
adc
mov
loope
pushf
dec
sbb
push
loope
push
xor
incl
push
sub
push
or
mov
dec
shrl
in
scas
xchg
sbb
sbb
into
sub
push
hlt
inc
add
jbe
ja
stc
lods
xor
dec
xlat
arpl
jmp
mov
sbb
test
lods
cs
and
mov
scas
dec
pusha
and
push
fisttpl
adc
movl
dec
scas
lcall
mov
or
mov
out
push
imul
mov
sbb
fmull
add
cmp
xor
gs
dec
rclb
xor
xor
pop
xor
sahf
or
and
test
mov
mul
sub
xor
addb
jo
int
xor
hlt
out
push
sbb
and
fcmovb
cmp
xorb
dec
cmp
cmp
fimull
cmp
lcall
gs
repz
push
push
push
push
push
lods
fsubrp
pop
and
lods
or
lea
adc
sbb
lea
repnz
movsl
sub
movsb
cmp
dec
movsl
pop
rolb
mov
push
cs
sub
dec
cmp
in
pusha
mov
dec
cmp
rorb
and
sbb
pop
mov
in
or
add
pusha
nop
fcoms
push
inc
inc
movsb
cwtl
adc
inc
lods
cmp
mov
push
adc
add
dec
pop
add
or
mov
loopne
pusha
aaa
sub
pop
inc
sbb
shrl
rol
xchg
jno
inc
sbb
push
inc
inc
pop
add
mov
cmpsb
mov
jns
inc
test
sub
mov
lock
inc
inc
popa
cmc
xchg
jbe
loopne
enter
pop
bnd
aaa
dec
mov
dec
add
mov
test
lds
rclb
adc
inc
dec
or
sub
dec
xchg
push
or
or
inc
cmpb
out
jecxz
mov
rolb
and
add
mov
or
sub
pop
dec
and
ja
push
and
sbb
push
xchg
popf
fwait
add
dec
inc
inc
rolb
fadds
orl
cmp
inc
add
inc
shl
push
adc
subb
ret
xchg
call
push
push
push
dec
push
aam
test
push
sub
mov
repnz
fcoms
pop
add
std
xchg
sub
rcrl
in
out
dec
fisttps
push
lea
cmp
test
dec
mov
inc
push
add
nop
cmpsl
ja
aaa
push
dec
adc
pop
mov
mov
mov
outsb
or
pop
mov
and
shr
fistpl
pop
enter
ror
enter
mov
sub
adc
mov
addr16
das
pushf
and
lahf
jne
dec
aam
inc
sahf
lock
sbb
icebp
or
inc
out
fisubrl
mov
fs
pushf
aas
enter
xchg
js
xchg
adc
add
loopne
adc
or
sbb
push
xchg
sbb
xchg
or
hlt
out
ss
push
or
rol
or
out
pop
sub
jo
adc
shll
sub
push
lds
cmp
ja
aam
push
pop
fistpl
pop
cmpsl
sub
xchg
lds
pop
in
push
lock
loop
xchg
adc
rclb
push
divl
movb
cwtl
clc
inc
xor
test
imul
adc
or
testb
inc
xchg
mov
js
sub
shlb
pop
and
add
pop
xor
stos
xor
add
ja
dec
push
or
xor
andps
or
pusha
or
pop
and
stos
adc
mov
mull
sbb
cld
fidivrl
add
cmp
push
jne
or
jmp
push
je
and
lock
adc
mov
and
nop
inc
adcb
mov
in
gs
inc
mov
data16
adc
jmp
fisttps
and
ss
sub
push
push
inc
sbb
jg
int3
es
adc
dec
pop
pop
mov
mov
fists
popa
loopne
cmp
pop
into
jae
hlt
outsl
mov
hlt
push
dec
jge
add
mov
ret
insb
sbbl
push
push
shrb
mov
mov
and
out
fisubrl
fisttpl
popa
loope
movsb
stc
jg
add
xchg
call
js
insb
hlt
ret
mov
aaa
cmpsl
add
pop
dec
into
pusha
jmp
sar
and
adc
or
jbe
rolb
leave
dec
or
mov
cmpsl
dec
or
inc
cmp
mov
ss
push
test
mov
in
pop
mov
imul
call
popa
jbe
in
call
jmp
sub
movnti
call
mov
negl
cmp
test
xor
pop
lods
cmp
mov
cmp
lods
lcall
adc
fldl
mov
les
lock
cmp
bound
mov
sub
dec
in
push
stos
test
cmpsl
outsl
shlb
test
jae
inc
inc
push
mov
fld
jae
addr16
loopne
cmpsl
rcl
aam
lock
loopne
outsb
add
lret
add
or
or
xchg
add
adc
adc
or
pop
sbb
test
inc
outsl
cmp
out
add
mov
mov
dec
pop
ja
testb
fcmovb
adc
adc
add
add
pop
js
movsl
add
xchg
add
leave
test
sbb
and
push
push
sbb
pop
push
aam
inc
jb
mov
shlb
cs
nop
lea
sahf
xor
leave
push
outsb
dec
loopne
mov
mov
sarb
cwtl
inc
pop
sbb
icebp
xor
or
mov
or
loop
negl
mov
dec
or
rorb
sarl
fcompl
inc
or
and
xor
and
and
sahf
ret
or
push
ds
push
cvtpi2ps
add
inc
jmp
mov
mov
or
add
popa
sub
aaa
test
adc
das
int
or
jo
adc
icebp
popa
movsl
add
xlat
fstpl
mov
ss
std
test
jnp
mov
or
pusha
push
sbb
pop
das
sbb
mov
jae
mov
sub
xchg
cmp
inc
jg
lock
je
bound
mov
adc
sub
or
push
inc
add
cltd
inc
shlb
sub
dec
or
xor
push
hlt
cs
leave
xlat
dec
sbb
ss
add
sbb
or
xor
int
adc
xlat
dec
pop
test
mov
ljmp
pop
ror
xchg
push
inc
outsl
int
inc
inc
pop
mov
rcrb
lods
push
xchg
push
cmp
inc
sti
xor
pop
jmp
sub
jo
or
push
mov
inc
das
xchg
sub
test
xor
add
mov
push
jp
pop
or
repz
sbb
lock
mov
pop
aam
lock
lods
add
xchg
mov
imul
mov
dec
mov
pusha
xor
adc
inc
lret
cmp
js
dec
sbb
and
xor
fdivrp
dec
xor
sub
neg
jmp
arpl
lods
add
je
sbb
sub
sbb
stc
push
push
loop
bound
and
push
outsl
repnz
sbb
push
mov
ss
fcmovne
test
insl
les
mov
xor
adc
in
lahf
jno
xor
outsl
jp
ret
aaa
add
call
pushf
sub
push
jae
push
cli
sbb
aas
mov
lods
add
shlb
mov
movswl
or
or
push
shll
std
cmp
xor
mov
cmp
js
adc
insl
adc
or
adcl
jmp
push
push
inc
fs
cs
pop
rcr
sub
into
std
scas
xorb
sub
mov
hlt
cmp
sbb
dec
dec
pop
lret
fcmovb
mov
insl
out
maxps
lock
repz
subb
sub
jge
test
sub
xor
add
sub
inc
sbb
fldl
cli
sub
push
inc
sub
cltd
int
sti
ret
aaa
and
leave
aam
adc
push
mov
mov
in
dec
ss
mov
popa
sbb
cmp
pop
nop
lock
dec
mov
lds
ljmp
ja
push
negb
adc
dec
jo
push
mov
jns
in
cmp
and
mov
sar
aaa
add
lcall
adc
inc
xor
in
xchg
mov
jle
push
int
add
dec
push
dec
out
fs
in
subl
inc
sbb
mov
or
mov
sub
ret
push
adc
mov
cmp
dec
add
psadbw
mov
dec
arpl
movsl
lock
add
lock
or
sti
add
call
inc
das
sub
or
inc
sub
mov
push
dec
inc
sbb
shrb
sub
sub
xor
push
dec
xchg
add
cmp
pushf
xor
movlps
xor
xchg
push
mov
mov
mov
add
insb
cmp
bound
cmpsb
cmp
je
pop
das
andl
or
sub
sbb
es
mov
daa
lahf
jl
add
push
lods
sar
xchg
jecxz
cmp
inc
xchg
shr
jmp
push
cmp
push
inc
jns
add
ja
and
jb
clc
xor
sbb
or
xor
pminub
mov
outsl
add
int
mov
mov
das
mov
test
inc
pop
test
jge
pop
dec
jecxz
xor
and
bound
add
xor
test
mov
or
cld
mov
dec
sbb
mov
sub
add
jnp
sub
sbb
int3
sub
inc
mov
inc
adc
mov
aam
and
sub
enter
and
add
sbb
inc
jb
or
inc
xor
xor
sub
pop
addb
adc
andl
ror
shlb
push
mov
nop
sarl
lock
sub
push
out
mov
push
mov
sbb
jp
mov
clc
in
es
sub
jae
inc
fisubs
dec
clc
push
loop
cmp
les
xchg
enter
pop
xchg
sbb
ljmp
fwait
shr
aas
or
arpl
lret
sub
pop
adc
xor
lea
inc
ret
xchg
int
xor
aad
add
xchg
mov
add
cmpsb
sbb
cmpb
leave
pushf
or
je
xchg
mov
ret
xchg
xor
and
push
fsubrs
lahf
push
inc
je
xorl
push
cmp
mov
add
add
jle
movb
insl
xor
xchg
pusha
mov
int
hlt
add
pushw
sbb
arpl
inc
nop
push
add
sbb
and
or
out
add
mov
inc
pop
xchg
xor
and
mov
inc
stc
xchg
pop
adc
add
lods
push
pop
pop
lock
insb
mov
pop
aas
or
out
inc
add
cmc
orb
lret
imull
movsb
jo
scas
cvttps2pi
mov
pop
mov
aaa
inc
jg
sub
outsb
and
dec
add
pop
or
and
push
in
push
les
xor
int
arpl
inc
mov
stos
pop
jmp
mov
fcompl
fistpl
mov
pop
je
mov
fisttpl
sub
outsl
test
fldl
sbb
loopne
aaa
outsl
ja
xchg
jl
insl
pop
or
mov
sbb
test
fdivl
push
inc
notl
movb
movsb
fndisi(8087
aaa
push
xchg
mov
sbb
mov
lods
mov
pop
dec
outsl
or
push
in
or
add
popa
les
inc
ficoms
dec
ja
sbb
jp
adc
xor
add
cmc
dec
jecxz
loopne
cld
pop
xor
push
mov
rcrl
rorl
std
xor
or
sbb
and
rorb
inc
sbb
cwtl
xchg
xor
mov
mov
ja
cmpsl
push
push
lea
push
mov
push
sbb
outsb
adc
and
xchg
icebp
xor
jg
mov
outsl
or
lds
sbb
out
fstpl
in
or
pop
mov
xor
jle
mov
dec
ja
mov
dec
xor
and
ss
or
sbb
insl
scas
mov
pop
mov
lcall
jns
jge
and
xlat
adc
ss
adc
xchg
jle
xor
mov
stos
inc
fcompl
loopne
or
xor
fsts
dec
cmp
or
andb
in
add
sarb
enter
dec
add
mov
incl
inc
inc
add
mov
adc
add
push
fidivs
pop
dec
je
lcall
add
and
and
mov
inc
lea
leave
jns
pop
cmpl
jnp
xor
or
pusha
jne
jg
or
call
test
ds
jbe
test
mov
inc
or
cmc
inc
cs
ret
cmc
sbb
outsl
xor
inc
xchg
xor
sbb
xchg
mov
enter
lcall
adcl
je
xorb
icebp
repnz
xchg
push
mov
xchg
shll
adc
or
cmp
pop
cltd
add
dec
stos
cmp
enter
push
loopne
std
push
xlat
dec
adc
test
inc
jg
dec
movsb
mov
and
and
test
lea
sbb
jo
leave
xlat
xchg
shl
in
stos
orb
xor
leave
insl
mov
inc
mov
sbb
incb
inc
scas
and
aam
dec
mov
fsubr
sbb
stos
sub
pop
arpl
iret
mov
jp
and
mov
cmpl
lea
mov
sahf
stos
ja
aas
or
dec
js
jl
inc
xor
pusha
iret
shlb
mov
lock
ret
adc
les
xor
and
sub
fadd
daa
orl
adc
and
and
imul
push
clc
shll
lds
mov
or
sbb
add
add
pop
inc
sub
sbbl
ret
mov
es
in
nop
addr16
ret
push
test
add
mov
cmpsb
add
add
pushf
adc
and
mov
inc
test
stos
setae
adc
pop
mov
push
jl
xor
mov
mov
cmc
adc
pop
mov
add
mov
and
or
daa
lods
test
pop
jb
xchg
fwait
mov
cmp
xchg
aad
jne
sub
cmp
sbb
lock
or
lea
xchg
or
scas
pop
dec
mov
mov
shlb
xchg
enter
add
or
mov
aad
rorb
cmpsb
mov
stos
leave
lods
push
shll
outsl
mov
int
leave
in
pop
dec
neg
inc
add
fsubs
test
xchg
pop
jae
pop
cmp
and
jo
jmp
andb
add
cmp
jp
add
shrb
imul
rcrb
sbb
jne
ja
dec
int
or
add
mov
into
lea
push
pop
sub
setne
das
in
jbe
test
cmp
jne
hlt
in
mov
add
insb
xchg
xchg
roll
cmpsb
vpaddusw
lret
std
jmp
cmp
imul
pusha
jnp
push
andb
iret
xchg
dec
loopne
mov
movsb
push
pop
rorl
push
pop
xor
in
pop
subl
and
fisttpl
sarb
pop
xor
xor
mov
pop
mov
loopne
enter
pop
jo
dec
cmpl
movups
push
and
cmp
daa
sbb
rclb
jo
mov
sbb
ret
pusha
out
out
sub
fwait
xchg
sub
xchg
hlt
xchg
mov
xchg
mov
mov
add
adcl
lock
stos
sbb
and
push
adc
aas
not
sbb
nop
sub
inc
test
and
cmp
xchg
inc
daa
adc
mov
outsl
inc
repnz
sarb
push
sbb
sahf
push
mov
push
inc
and
or
mov
sbb
and
push
sub
inc
jmp
xchg
sti
or
mov
cmp
inc
adc
mov
xchg
mov
fs
jp
xor
xlat
lods
mov
cmp
push
lock
or
sbb
add
mov
ffree
shll
ja
push
sbb
lods
scas
test
pushf
mov
dec
out
cmp
shl
sbb
mov
adc
daa
leave
addb
pop
add
addr16
gs
xor
ficoms
or
mov
jns
and
mov
and
je
cmpl
pop
pusha
or
and
scas
out
js
imul
sub
mov
mov
inc
test
xchg
pop
clc
adc
aas
cmpb
push
xchg
jne
rorb
inc
lods
fnstenv
aad
sub
jae
mov
cwtl
xchg
xchg
cmpb
sbb
cmpsb
adc
nop
pushf
sub
sbb
cmc
lock
add
adcl
xchg
add
sbb
xchg
sub
into
pop
aas
mov
cmp
mov
aas
int3
mov
push
enter
or
int
int3
xlat
xor
fs
or
adc
push
push
js
sbb
mov
cmc
incb
lock
imul
fsubrs
xchg
loopne
dec
or
aaa
imul
push
addr16
mov
in
add
call
add
add
ret
sub
add
fnstsw
hlt
add
xchg
cmp
inc
xchg
adc
das
aaa
les
xor
test
cli
push
xchg
and
pop
xchg
mov
mov
push
xchg
je
mov
je
inc
outsl
xor
lcall
rcrb
out
fsub
adc
ja
or
sbb
mov
loopne
or
jo
or
and
or
test
or
or
jb
lret
push
xchg
mov
orb
adc
ret
rclb
cmp
addl
leave
dec
test
push
push
push
push
dec
lods
popf
popa
pop
int3
xorl
push
imul
or
push
push
push
scas
dec
es
mull
mov
hlt
push
xchg
ret
mov
push
or
xor
cmp
sbb
or
insb
test
add
inc
mov
adc
outsl
add
dec
das
and
cli
inc
jg
cmp
and
adc
cli
mov
pop
nop
or
push
dec
or
imul
sbb
ret
je
daa
cli
sti
fmuls
shrl
sub
pop
jne
jecxz
add
or
test
jne
outsl
pop
clc
cmpsb
sub
loope
or
pop
sbb
bound
jne
cmp
inc
jnp
xor
pop
rep
cmp
gs
out
je
mov
xor
xor
and
jmp
pop
add
js
ljmp
leave
xor
outsb
adc
sub
cmp
dec
sbb
inc
sub
or
mov
mov
cwtl
jge
add
inc
or
adc
fs
imulb
popf
add
pop
cmp
or
sub
jmp
add
hlt
pop
dec
and
dec
dec
in
clc
cmp
pop
push
lods
sbb
adc
outsb
mov
hlt
in
in
mov
adc
pop
xor
cmpl
pop
imulb
lcall
fldl
pop
push
out
inc
daa
test
arpl
jecxz
xor
add
pop
push
jns
nop
cmpsl
sub
push
xor
lock
push
pop
xor
mov
dec
or
out
cmp
or
push
add
pop
inc
add
bound
fnstcw
mov
and
and
or
js
mov
push
pop
or
adc
xor
fisubl
imul
adc
cmc
fcoms
sbb
cmpsl
popa
sub
movsl
or
aam
add
mov
jno
sub
mov
jno
add
test
add
sysenter
xor
sbb
jle
mov
pop
adc
inc
xchg
adc
pop
pop
out
inc
icebp
clc
xchg
aam
outsl
jne
sub
dec
aam
sbb
inc
test
outsb
pop
je
mov
cmpsl
sub
and
dec
movsb
lcall
add
xchg
jnp
fiaddl
add
out
pop
push
push
dec
nop
add
popa
sbb
pop
dec
jb
call
fs
sub
push
jo
sub
pop
out
clc
and
jb
add
pop
bound
sub
jecxz
xchg
mov
je
sbb
into
mov
ficompl
neg
clc
movsb
xchg
fstl
pop
adcl
pop
jo
push
fcomps
leave
adc
inc
leave
arpl
in
or
rcrb
sbb
adc
es
cltd
dec
cmp
jle
sub
or
fmul
push
adc
adcb
loopne
aam
add
test
pop
jmp
insb
mov
daa
pop
and
pushf
sbb
idivl
dec
pushf
cmp
shrb
mov
cmpsl
icebp
mov
push
cmp
dec
pop
int
mov
adc
das
rorl
sbb
and
push
and
and
sbb
jno
pop
add
add
addb
js
popf
sub
adc
adc
pop
imul
lea
or
jbe
shlb
and
mov
scas
ret
cmp
xchg
pop
aaa
int
loop
mov
testb
pop
adc
imul
jnp
aam
loopne
daa
mov
popa
xor
xor
fstl
dec
cmp
sbb
xchg
sub
xor
fwait
test
xchg
mov
mov
mov
int3
mov
jmp
sbb
jbe
xchg
sub
imull
xchg
les
sahf
or
movsl
and
and
popf
xchg
sub
into
loope
lahf
xor
aas
aaa
or
xchg
cs
xor
dec
sub
fmull
fbstp
cli
nop
and
cmp
and
add
add
sub
adc
sub
mov
sbb
data16
mov
cmpsl
mov
add
outsl
or
in
xlat
cmp
mov
push
int
xchg
push
les
sub
sub
pop
mov
adc
pop
inc
popa
fldt
fcom
and
stc
sbbb
pop
dec
outsl
ljmp
adc
mov
pusha
int3
ja
fsubs
inc
jb
pop
and
jno
cmp
add
sub
pop
add
add
movsb
movsl
mov
setae
int3
or
enter
movl
je
mov
ljmp
mov
scas
jnp
mov
add
aad
inc
sbb
loope
outsb
pop
pop
cmp
int3
xchg
jne
mov
mov
outsb
out
call
cmpl
adc
pop
add
mov
xchg
nop
stos
xor
xchg
and
mov
inc
push
scas
or
cmp
rcr
out
mov
mov
add
mov
jle
jne
outsb
ret
bound
iret
xchg
popa
adc
xchg
jo
push
inc
lcall
and
std
cmp
sub
stc
mov
sub
xchg
add
push
cld
jne
in
inc
test
cmpl
mov
adc
insb
fcoms
mov
mov
data16
cmc
push
mov
jo
dec
or
popa
aaa
xchg
xor
dec
je
add
push
mov
ret
and
clc
je
cmp
jnp
arpl
jmp
int
and
sub
imul
and
lahf
int
shr
rorb
dec
jo
and
inc
je
xchg
pop
stos
aam
lock
adc
push
lret
and
adc
es
loope
call
adc
nop
adc
ret
pushf
pop
cmp
add
add
mov
push
sbb
mov
sbb
cmp
test
fldenv
pusha
sarb
add
sbb
or
jo
or
xor
pop
pop
xchg
scas
add
mov
inc
xchg
or
inc
jo
daa
sti
sub
adc
das
xchg
mov
sub
jnp
pop
mov
jb
pop
mov
push
scas
ffree
mov
imull
in
cmc
push
mov
pop
and
sbb
cmpsb
dec
arpl
push
push
in
or
sbb
cmpsl
in
lret
jnp
and
xor
add
inc
add
and
orb
inc
mov
sub
sub
movsb
inc
ja
lcall
outsl
push
push
xchg
sbb
push
cmp
cwtl
xor
pop
das
mov
out
cmp
movsl
stc
push
test
mov
cs
jae
fs
pop
xchg
xchg
cmp
jbe
mov
jge
cmc
xor
insb
imul
and
push
xorb
mov
aas
xor
add
jp
mov
push
fistpll
add
push
and
test
or
pop
add
push
cmp
call
arpl
call
push
pop
aad
lcall
sti
or
or
jg
imul
or
scas
sub
xor
sbb
shll
or
cmpsb
icebp
nop
add
fisubrl
xor
sub
in
mov
addl
cmpsb
repnz
stos
mov
or
or
inc
dec
adc
sub
mov
icebp
imul
add
jo
xor
mov
cwtl
inc
jmp
fcmovnu
or
push
outsl
daa
adc
cmpsl
movsl
aas
rclb
loopne
icebp
addr16
lods
jne
cmpl
push
and
int
sbb
and
dec
add
or
orl
iret
cmp
xchg
rclb
adc
lahf
sub
pusha
cmpb
test
popa
add
add
jnp
movsl
cmp
popf
rcrl
mov
and
push
lcall
test
dec
pop
pop
adc
mov
shlb
insb
dec
jmp
sbb
shr
notb
add
jne
adc
mov
dec
or
iret
mov
xor
add
xchg
xchg
adc
mov
jno
push
mov
jne
inc
pop
push
mov
add
shl
fdivs
sub
ja
add
xchg
push
cmpsl
je
push
inc
dec
outsl
adc
xchg
add
push
cmpsb
je
sub
sbb
data16
push
andb
adc
xor
into
movsb
mov
add
push
or
or
jge
clc
sub
pop
loopne
add
sub
pop
or
aas
lahf
add
adc
aas
rcrb
xor
or
testb
rsm
sub
rolb
das
repz
inc
or
cmp
pop
lods
xchg
adc
inc
movsl
mov
idivb
add
pop
es
loopne
push
lods
sbb
ret
inc
mov
adc
leave
push
xor
lods
cmpsb
mov
and
fdiv
mov
in
or
int3
add
xchg
fisubl
cld
dec
idivb
dec
mov
mov
push
xor
push
ret
test
add
sub
or
pushl
inc
dec
push
pop
dec
jmp
popf
jo
adc
popa
dec
mov
sub
adc
cld
or
sbb
test
dec
fidivs
xor
inc
push
add
je
fsubl
dec
jnp
add
inc
or
call
xor
adc
cld
adc
adc
in
gs
sahf
and
test
add
pop
sbbb
mov
mov
cmp
sbb
mov
jl
push
cli
mov
mov
andl
js
cld
xor
push
xchg
aaa
add
pusha
xor
mov
pop
or
and
or
cmp
add
xchg
inc
xchg
inc
cmpl
jne
xchg
mov
adc
rcrl
push
shlb
aam
or
dec
xchg
stos
jo
mov
xchg
and
mov
sbb
fbstp
xchg
sahf
push
roll
push
mov
or
sbb
in
loopne
sub
add
mov
daa
dec
or
out
les
xchg
and
fimuls
std
dec
popa
or
imul
xor
testb
iret
sahf
cs
or
and
and
push
arpl
popa
lret
add
lret
call
adc
or
bound
lock
mov
jl
rcll
or
and
pop
fs
loop
pop
push
loopne
fsubl
sub
add
mov
cmp
dec
jmp
daa
loopne
ljmp
cmpb
lock
adc
push
data16
jl
dec
arpl
int3
push
mov
adc
call
ljmp
mov
fs
mov
xor
mov
cmp
cmp
dec
add
or
pop
sbb
adc
mov
fsts
xor
rcr
or
hlt
sbb
sub
inc
mov
mov
mov
mov
inc
cmp
mov
inc
and
jne
mov
mov
fs
and
mov
adc
ja
out
mov
cld
push
sbb
test
pop
xchg
jl
dec
add
mov
sahf
push
sub
das
push
jae
cmp
jmp
mov
and
pop
mov
xchg
or
mov
sahf
xchg
xchg
pop
in
pop
jg
and
adcl
das
test
pop
test
lock
nop
cmp
loopne
cltd
scas
pop
mov
xchg
dec
jg
test
aaa
cmpl
push
sbb
and
dec
inc
xor
rcrb
jge
rcrb
scas
push
add
sbb
addl
and
mov
sub
dec
arpl
test
das
loop
sahf
call
or
or
jnp
pop
mov
cmpl
cwtl
push
test
imul
jecxz
dec
xor
repz
popl
sahf
jne
mov
jns
push
mov
sbb
movsl
dec
push
mov
push
or
adc
xor
adc
mov
in
inc
ficoms
cmpsl
xchg
sbb
and
jle
push
cmp
sub
inc
mov
test
push
mov
xchg
loopne
add
cmpsl
xor
mov
lret
hlt
out
mov
add
mov
and
dec
pop
mov
inc
push
mov
in
jbe
cmp
push
and
js
nop
pop
sub
jbe
shrb
pop
jbe
movsl
pop
mov
xchg
sbb
mov
aas
add
push
gs
mov
fisttpl
or
mov
ficompl
call
xor
inc
dec
pusha
sub
outsb
xchg
ljmp
push
push
jne
inc
js
lahf
loop
cmp
sete
int3
dec
jne
arpl
inc
xorb
add
xchg
pop
clc
or
ffreep
inc
sub
jne
dec
cltd
jmp
cli
ja
or
addb
xor
mov
sub
xor
jmp
push
sub
or
sub
insb
loopne
and
xchg
fs
fmul
or
inc
lcall
add
or
inc
or
push
nop
or
pop
popa
popa
ja
and
pop
daa
addl
lods
outsl
xchg
rcll
push
pop
loop
jmp
pop
and
and
imul
lods
in
push
adc
popa
daa
mov
xor
es
enter
in
mov
pop
sbb
dec
rcrb
and
xor
sbbl
outsl
or
dec
aaa
add
adcb
fsubrs
packsswb
inc
rclb
aam
lcall
sub
lcall
add
je
data16
mov
lret
pop
or
pop
push
pop
or
movsb
mov
stos
add
push
mov
mov
or
add
and
sub
xor
aaa
cmc
sbb
leave
add
stos
inc
inc
push
or
mov
filds
test
push
mov
les
adc
hlt
pop
into
inc
arpl
test
cmp
roll
mov
inc
rolb
sbb
mov
pop
ret
rcl
xor
enter
xchg
mov
pop
and
call
and
loopne
add
addb
testb
inc
sub
add
inc
push
xchg
add
adc
jmp
sbb
inc
cmpsl
enter
cmpsl
enter
adc
in
pusha
sbbb
jecxz
pop
pop
mov
add
xchg
mov
andnps
mov
mov
mov
adc
xchg
scas
fists
repz
lock
mov
push
mov
stc
rcl
sbb
mov
inc
mov
mov
push
or
push
sahf
call
push
or
cmpb
mov
and
or
mov
pop
mov
or
sar
je
roll
jo
inc
addr16
xchg
sbb
sbb
rolb
mov
arpl
xchg
mov
adc
shl
cmpl
xchg
xlat
insb
mov
cmpsl
call
adc
pop
stos
aas
sub
or
outsb
dec
jmp
pop
mov
sub
and
iret
test
push
add
mov
jmp
mov
mov
adc
cmp
in
jno
inc
add
popa
xchg
in
adcb
sarb
pop
cmp
loope
aaa
push
and
and
add
aam
adc
pop
ret
xchg
shll
fisubs
fld
lds
nop
in
mov
add
inc
out
add
xor
lea
xchg
or
sub
xor
push
inc
inc
xor
or
add
lods
mov
xlat
xchg
adc
jo
sub
adc
nop
jg
pushf
rcrb
jne
outsb
push
pop
addps
sbb
sbb
lods
addl
add
mov
push
pop
xor
inc
sub
fidivrl
lahf
cmp
into
xor
test
mov
add
ds
idivl
mov
sub
pop
fcompl
mov
push
pop
int3
sub
pop
nop
lods
dec
lock
sbb
sub
mov
pop
arpl
lds
jl
or
testb
sahf
cmpsb
jne
push
sub
in
jb
inc
lret
jne
jo
clc
mov
pop
jmp
push
sub
call
lock
loopne
arpl
test
push
inc
or
mov
jp
imul
sub
dec
push
enter
dec
mov
test
adc
fs
cmpsb
std
add
or
aad
rcrl
inc
and
and
sbb
insb
shlb
and
pop
and
test
add
sub
push
in
icebp
adc
cld
and
xor
sbb
cmpb
and
xchg
inc
or
pop
sarl
movsl
mov
inc
cmpsb
outsb
cwtl
les
mulb
inc
dec
lcall
pop
aas
loopne
lock
or
mov
and
loopne
mov
nop
add
inc
js
mov
xchg
mov
loope
lods
add
pop
jl
test
jb
sub
jp
das
out
xor
cmp
inc
pop
xchg
in
jne
popf
roll
in
mov
xchg
mov
push
shl
xor
push
cli
daa
mov
sub
push
xorl
and
pop
es
xchg
xor
pop
and
cli
jge
or
je
pop
add
int3
fisubrl
insl
add
and
jg
push
pop
es
das
xor
and
mov
repnz
jmp
and
or
mov
and
sarb
push
insl
pop
or
adc
mov
jne
pop
jg
psrld
sub
xor
sti
movsb
roll
aaa
js
sbb
outsl
mov
aam
xor
imul
adc
cmp
frstor
shr
stc
pop
fwait
push
or
test
push
in
cmp
xchg
sub
sub
enter
sbb
scas
ret
or
and
inc
or
jmp
jne
test
out
xor
sub
lahf
sub
jl
add
xchg
xor
mov
mov
cmp
and
push
inc
popf
push
pop
sbb
or
adc
xor
out
ss
sub
dec
push
insl
jmp
inc
mov
mov
sub
jno
sub
inc
push
lret
mov
nop
jbe
add
add
mov
pushf
ljmp
aaa
xchg
add
and
data16
insb
hlt
or
or
mov
pop
push
lea
stos
in
cmp
jnp
mov
pushf
and
mov
les
or
jbe
sarb
and
jmp
das
enter
in
and
xor
add
push
sbb
add
sub
sbb
mov
add
inc
inc
pop
jl
or
pop
xchg
sbb
mov
xchg
ja
cmpb
dec
mov
and
test
pop
jmp
ret
xorl
pop
cs
rcll
push
and
in
jmp
ja
mov
stos
sub
push
mov
insb
push
cmp
jo
mov
mov
insl
jb
adc
xchg
ja
xchg
js
or
cmpsb
push
xchg
sub
aam
mov
inc
mov
or
inc
notl
icebp
movsb
jmp
mov
jmp
sbb
add
mov
lods
mov
xchg
mov
inc
xchg
adc
jg
fs
rcrl
and
dec
lcall
and
cwtl
std
xor
iret
stc
mov
inc
add
add
into
dec
xchg
or
sbb
or
jbe
jmp
js
xchg
fwait
xchg
jmp
pop
call
inc
sub
sbb
sub
inc
inc
jg
dec
jecxz
insb
sbb
mov
add
gs
mov
lods
and
adc
or
add
cmp
and
jge
in
jmp
mov
or
mov
cmpsl
xor
adc
mov
push
sbb
or
je
or
lea
push
push
loopne
and
loop
cwtl
pop
loopne
xlat
mov
mov
sbb
or
js
sbb
and
inc
sub
jge
js
arpl
xor
pop
notl
callw
negb
mov
mov
ret
popa
lods
rcll
stc
les
dec
jecxz
in
pusha
popf
add
adc
lock
mov
push
pop
jo
aam
cmpb
xor
or
sbb
ret
mov
inc
dec
mov
flds
mov
mov
add
outsb
pop
jmp
mov
inc
jo
ss
mov
std
fs
ds
dec
movsl
loope
xor
sbb
in
or
push
das
mov
pop
jl
push
lods
add
and
fisubrl
add
xchg
shlb
and
js
loope
cs
in
xchg
orb
lock
loopne
xchg
loope
negl
mov
mov
inc
gs
or
movsb
lock
lock
jnp
sbb
sbb
mov
add
adc
sbb
dec
adc
fdiv
dec
pop
insb
rorb
pop
xchg
faddl
push
sub
mov
out
mov
dec
xor
adc
test
xchg
and
popa
repz
test
loope
fstpt
pop
xchg
and
sarb
and
leave
mov
addb
nop
das
jne
bound
mov
sbb
push
or
push
aam
cs
push
jo
movsb
decl
add
dec
adc
roll
fs
mov
mov
inc
xchg
rorl
aaa
cmp
cld
loop
xor
popa
mov
mov
mov
push
rcrl
xor
push
test
out
jg
dec
jmp
nop
sbb
nop
add
fwait
add
outsl
lock
cmp
inc
push
cmp
pop
xchg
lret
dec
lods
out
sub
sbb
test
es
cltd
pop
pop
inc
mov
add
push
stc
test
sub
pop
lret
shlb
cwtl
xor
cmc
push
sub
mov
lea
add
mov
leave
pop
das
jno
jge
aaa
adc
sub
push
xchg
pop
movsb
mov
push
xchg
xchg
pushf
ret
xchg
adc
or
xchg
loopne
adc
aad
inc
xchg
ret
arpl
add
fcoms
sti
sub
or
adc
arpl
shll
dec
sbb
xchg
or
into
mov
sbb
je
testl
orps
sbb
add
loopne
dec
pop
aaa
push
adc
loopne
jge
pusha
push
mov
mov
js
in
call
out
jecxz
or
add
jp
mov
nop
add
adc
paddw
inc
dec
pop
ret
es
cmp
fisttpll
mov
and
je
lcall
xchg
in
or
jo
stc
and
add
popa
aam
jmp
add
mov
adc
add
sti
pop
sub
and
aad
xchg
and
cmpsl
rorb
inc
mov
dec
jnp
rcrb
rclb
sbb
icebp
enter
xchg
and
cmpsl
or
sbb
pop
push
movsb
aaa
cmc
and
adc
lods
xor
sbb
or
or
divb
xchg
xchg
movb
fiadds
aaa
clc
sbb
xor
stc
adc
inc
xchg
and
xchg
push
jne
xor
fistps
ret
mov
movsb
mov
pop
fisttps
mov
loop
or
inc
add
add
mov
pop
xor
test
xor
fisttpll
add
fcomp
jmp
or
pop
push
xor
xchg
and
jns
aaa
cmp
sub
xor
je
arpl
push
outsb
pop
fnstcw
mov
pop
stos
xchg
faddl
shll
ss
sbb
mov
xlat
insl
push
js
mov
sub
nop
add
or
add
add
jnp
cmp
push
add
jo
fwait
mov
pop
mov
xchg
into
and
std
or
cmp
xor
sub
push
out
test
loop
and
jmp
sbb
cld
cld
inc
je
inc
cld
dec
push
cld
and
and
cld
sbb
xchg
aad
add
inc
xlat
das
mov
call
imul
cmp
inc
es
jle
inc
sbbl
and
pop
pop
into
pop
add
lock
push
movsb
and
out
add
fsubs
popf
ljmp
push
sub
dec
cmpsl
cmp
or
lahf
addr16
nop
pop
sub
jbe
xchg
push
sub
lock
inc
fs
inc
sub
pop
adc
mov
or
rcl
pushf
outsb
push
jns
dec
ja
pushf
pushf
sbb
test
pop
and
cmp
or
push
push
mov
fisubl
inc
es
addb
sbb
dec
in
xchg
xchg
and
xchg
add
and
popa
movsb
cmp
lock
mov
mov
xchg
add
comiss
js
adc
test
outsb
cmovne
dec
xor
dec
dec
dec
xor
pop
insb
insb
mov
sti
and
pop
jno
pop
lds
add
or
cmp
xor
pop
test
lds
sbb
add
ret
xlat
in
dec
outsb
pop
dec
dec
dec
mov
and
dec
popl
es
movsb
sahf
pop
pop
xor
fimuls
jne
push
push
dec
xor
or
dec
inc
dec
mov
adc
xlat
push
aaa
andl
sbb
sbb
ficompl
add
push
xchg
mov
push
das
and
sub
sub
adc
mov
outsl
jo
mov
adc
dec
ss
push
and
sbb
sbb
cltd
mov
inc
xchg
jp
jne
loope
das
pop
xchg
pop
add
or
mov
shlb
cld
mov
sub
or
jle
lods
cmp
nop
lcall
mov
inc
rcrb
cmp
push
sbb
lret
add
pop
mov
nop
jp
inc
push
add
xchg
ljmp
hlt
adc
inc
test
and
sbb
loope
jno
push
push
mov
outsb
aaa
xchg
adcl
add
push
push
pop
push
jo
pop
popa
sbb
xchg
mov
xchg
adc
js
les
adc
or
movsl
mov
dec
push
mov
mov
sub
push
inc
sub
inc
mov
inc
movsb
adc
outsl
add
pop
inc
jl
mov
jno
xor
lret
xchg
sbb
cmp
into
les
push
sub
lock
add
and
add
hlt
icebp
mov
add
je
out
mov
ficoml
cs
sub
popf
lea
lods
ja
movsb
add
sahf
out
adc
adc
mov
and
fcmovnb
cmp
lea
jmp
pop
sub
xor
pop
inc
push
cmp
or
insl
inc
lock
dec
in
call
fimuls
movb
or
addr16
xor
xchg
jge
or
push
fadds
das
add
negb
adc
fisubl
popa
jns
jne
jae
pop
mov
outsb
insb
sbb
scas
mov
sub
popf
lods
inc
push
dec
push
test
push
push
test
xchg
jecxz
ds
daa
mov
das
test
inc
and
jne
rolb
mov
sub
pushf
pop
lahf
daa
mov
in
push
push
push
xor
cmp
dec
add
xchg
or
rorb
mov
imul
cmp
scas
pop
add
sbb
dec
mov
push
push
inc
push
fmuls
rcrl
dec
adc
cmp
faddl
pop
into
mov
divb
test
xor
xor
faddl
ljmp
add
add
call
cmp
push
xor
add
inc
aam
push
sub
xlat
pop
and
dec
arpl
out
add
insb
pop
sbb
sub
and
cs
xor
mov
xchg
jno
shrl
ret
and
pop
pushf
daa
jmp
pop
sbb
fcoml
sub
jmp
jecxz
in
lds
movl
xor
add
orb
mov
and
lret
push
enter
sbb
inc
pop
or
fisubs
xor
shrl
mov
mov
push
es
lahf
push
rorl
movsl
mov
push
mov
adc
xlat
push
testb
mov
mul
dec
dec
and
es
jns
inc
dec
pop
testb
and
pop
dec
ljmp
icebp
cs
jmp
dec
inc
add
dec
imul
inc
lret
and
cmp
inc
stos
imul
sbb
rolb
push
cltd
test
jbe
das
sub
dec
loop
inc
dec
in
sbb
add
lods
xor
push
dec
add
jl
dec
dec
daa
ret
push
mov
add
sarb
add
mov
cmpsb
ret
hlt
push
add
pop
movsl
add
mov
rcrb
adc
cmp
inc
push
lock
sbb
out
aas
je
jmp
sbb
aad
xor
std
sub
inc
add
into
push
cmp
arpl
std
jmp
inc
push
or
jne
sub
pusha
pusha
and
cmp
je
pusha
add
pop
mov
sahf
out
push
add
dec
push
mov
jno
data16
or
push
dec
mov
inc
and
int
popl
lock
sub
fcomp
andb
inc
jmp
sbb
xchg
cmpsb
mov
nop
push
es
sub
add
loopne
jmp
hlt
fsts
push
pop
jne
sbb
push
test
mov
cmp
lea
popf
push
ficoms
psrld
das
aas
lock
mov
sub
rcrb
nop
inc
test
neg
and
popa
mov
pop
jnp
add
inc
dec
mov
rolb
je
pusha
mov
out
sbb
cmp
dec
loopne
sub
xlat
cmp
test
inc
sbb
adc
subl
movsl
pusha
pop
lods
and
xchg
or
add
insl
fbstp
aas
mov
mov
loope
ret
xchg
cltd
sbb
jbe
lea
jns
adc
xchg
aaa
xlat
xorb
shl
adc
push
xor
sbb
add
addr16
ficompl
nop
mov
jl
pop
adc
add
push
sbb
jmp
sub
shr
cmc
or
mov
jmp
mov
sbb
mov
in
imul
testl
push
and
ss
in
adc
push
fcmovnbe
sahf
jo
popf
and
or
loopne
and
or
repnz
add
pop
sbb
mov
repnz
or
adc
xchg
push
pop
cmp
test
mov
lret
xorb
and
sbb
sarl
xlat
mov
inc
add
adc
sub
and
sub
clc
inc
sbb
daa
inc
test
adc
jmp
adc
fs
cmp
ljmp
lods
jns
nop
push
jb
ja
adcb
mov
leave
adc
and
mov
mov
cwtl
adc
push
movsl
bound
xor
push
call
xchg
outsb
jbe
pop
int3
mov
cmp
xchg
adc
sub
mov
dec
je
lods
dec
loope
push
mov
leave
je
pop
jle
inc
rcrb
xorl
bound
jmp
and
insb
jne
push
adc
fsubrs
dec
sub
hlt
and
mov
push
leave
or
dec
pop
dec
push
shlb
pop
cmp
ss
cmpsb
push
jno
pop
jge
outsl
dec
in
test
add
in
leave
cmc
mov
in
and
and
mov
out
push
ret
sub
pop
jno
add
addr16
xchg
pop
in
dec
mov
xor
push
mov
inc
xor
and
imul
out
or
movl
jb
arpl
mov
ja
sahf
mov
les
dec
or
add
inc
imul
cmp
pop
push
loopne
and
adc
ficoml
sub
enter
jmp
pop
or
push
and
or
mov
bound
jl
mov
dec
jns
cs
in
xchg
xor
jecxz
imul
xor
xchg
inc
jae
mov
lods
shll
dec
inc
inc
pop
out
mov
aaa
mov
push
xchg
cli
or
pop
les
dec
inc
dec
dec
ds
adc
mov
lods
push
test
les
lods
js
rcr
dec
adc
add
or
aam
mov
sbb
sbb
or
and
jbe
jmp
lret
sbbb
jl
jmp
lock
jo
xorb
and
sahf
test
aam
push
mov
cmp
xchg
push
add
inc
and
add
dec
adc
dec
push
jmp
shr
xchg
rclb
sbb
add
movsl
int3
adc
sub
scas
in
dec
xor
daa
sub
imul
mov
pop
jle
mov
inc
inc
and
cld
sar
imul
loopne
cmp
or
mov
dec
or
std
jo
push
lods
rorb
mov
adc
and
jmp
adc
push
pop
jge
lock
sub
inc
dec
movsb
xchg
and
or
mov
rcll
sub
mov
jbe
xor
repnz
adc
xor
in
sbb
lcall
inc
stos
xchg
ja
mov
lcall
push
rolb
sub
push
fs
sbb
jae
aaa
fwait
or
sbb
sbb
insb
inc
dec
pushf
ss
js
je
add
test
jg
outsl
ss
xor
cmp
decl
sbb
fwait
pop
lret
xchg
jo
or
inc
ss
arpl
inc
add
adc
add
xchg
je
or
xor
lods
dec
ret
or
mov
dec
mov
clc
add
mov
dec
mov
jnp
int
and
shlb
test
lret
dec
adc
scas
pop
stos
je
scas
cmc
and
xor
or
push
imulb
movsb
pusha
and
inc
xor
clc
daa
push
or
sub
add
call
faddl
sbb
sahf
in
xor
and
imul
aad
lret
sub
in
mov
dec
es
rorl
dec
fwait
ret
xchg
pop
imul
inc
adc
pop
or
enter
sub
add
js
pop
and
mov
push
enter
inc
test
fadds
repnz
xchg
and
aas
xor
orb
add
jmp
add
adc
xchg
popf
pop
xor
inc
push
inc
sub
mov
loopne
jns
jne
adc
sbb
mov
or
mov
cmpl
push
push
rorb
or
cmpsb
roll
and
and
adc
inc
cmp
push
in
ret
out
mov
dec
test
ja
test
xor
and
insl
push
sub
xor
cmp
add
sbb
inc
mov
or
mov
cmpsb
int3
sub
xor
and
pop
insl
loope
add
xchg
and
call
push
popf
xor
cld
sarl
call
mov
out
ror
clc
outsb
dec
clc
push
jg
or
jg
adc
movsb
divb
lea
insb
daa
adc
jb
cmpsl
jbe
mov
pop
aas
mov
push
addr16
outsb
pop
push
sbb
call
and
ret
imul
stos
sub
js
popf
insb
jg
cmp
dec
imull
push
cmp
sub
sub
xor
jns
pop
test
js
add
sub
insb
mov
stos
and
cltd
lret
negl
dec
out
add
mov
lret
and
movsl
adc
or
shlb
mov
dec
jne
mov
pop
dec
jae
ret
mov
test
das
xor
aad
inc
xchg
or
jl
jg
movl
fisubrl
sar
js
cmp
xor
or
pop
nop
dec
mov
pushf
or
and
sub
inc
fbstp
js
fs
cltd
xor
cltd
adc
das
mov
cmp
stos
shlb
pop
lods
dec
mov
fwait
repz
mov
scas
mov
cmpsl
mov
fldt
jbe
and
add
inc
push
adc
inc
push
xor
sub
rcrb
push
xchg
pop
icebp
cmp
jae
mov
push
fimuls
test
add
and
loopne
cmp
mov
or
daa
jbe
sub
lods
inc
mov
sub
rcr
mov
int3
sub
push
les
lea
sub
xorl
mov
cmpl
in
xor
or
call
mov
jae
scas
adc
jb
inc
cmp
cs
rcrb
es
je
and
sub
jo
lret
rcr
leave
pop
xor
outsb
out
iret
pop
add
xchg
addl
xor
push
inc
dec
jne
pop
inc
mov
mov
or
sbb
cmp
push
cmp
les
and
cltd
mov
andl
aad
jno
xlat
nop
mov
push
int
mov
pop
into
inc
mov
jno
movsl
lods
nop
inc
mov
inc
fldcw
jae
je
fldcw
adc
xor
test
or
out
ret
movb
sub
push
or
sbb
jl
adcb
xchg
shlb
mov
loope
push
insb
je
mov
insb
add
aaa
cmp
jb
movsl
or
sarb
nop
test
orl
fisubl
pop
cwtl
adc
out
and
pop
xor
inc
inc
mov
daa
je
push
lock
sub
inc
ret
mov
inc
push
dec
xchg
les
push
xor
cmc
jmp
nopl
fcompl
xorb
dec
sbb
pop
test
cmp
pop
mov
dec
sbb
icebp
or
inc
addr16
add
and
mov
pop
add
adc
fcompl
jns
jp
int3
mov
popa
push
pop
push
or
mov
inc
sub
sub
mov
test
mov
stos
sub
or
testl
and
aaa
push
in
push
pusha
mov
call
ret
adc
xor
les
inc
insl
xor
xchg
xchg
cmp
jne
push
mov
inc
adc
ja
in
mov
pop
pop
add
pop
sub
js
incl
test
add
jb
xchg
in
dec
in
jno
jne
mov
sbb
test
mov
shll
sbb
sbb
mov
fidivs
pusha
jmp
cmp
addr16
dec
adc
adc
aam
mov
and
pop
sbb
and
cli
fisubrs
test
pop
pop
xchg
fmull
lret
outsb
xorb
fwait
daa
push
outsl
arpl
pop
int3
mov
pop
xor
jecxz
mov
adc
and
adcb
iret
mull
add
pop
sbb
jne
loopne
add
or
push
pop
or
xchg
inc
or
call
mov
daa
cmp
mov
sbb
sbb
add
fstpl
or
cmp
pop
cmpsl
mov
pusha
nop
in
jg
and
sub
mov
movsb
inc
jmp
pop
lcall
ret
dec
fs
stc
mov
outsb
jnp
lret
ret
pusha
inc
push
sbb
and
hlt
inc
mov
in
push
mov
add
aam
inc
and
es
jle
fs
sub
or
sbb
jge
fwait
jg
arpl
mov
fbld
add
adcb
aam
inc
and
aad
lea
mov
sti
inc
daa
cmp
inc
fidivrs
cmp
push
icebp
xchg
dec
shll
adc
pop
push
je
xor
hlt
mov
or
mov
stos
and
add
call
pushl
inc
mov
fldcw
icebp
pusha
jnp
les
ret
and
loopne
add
sar
dec
roll
and
xor
rolb
rcrb
outsl
jnp
enter
lock
je
movsl
mov
or
and
shlb
xor
mov
cs
test
cmp
mov
adcl
in
insl
inc
mov
rcll
clc
clc
cmp
test
adc
insl
loope
rolb
xor
jno
xor
ja
rol
int
xchg
insb
inc
ljmp
or
jl
jnp
push
aad
mov
push
insl
aaa
mov
ret
pop
cmp
dec
daa
ret
insb
popa
add
cmp
inc
pop
add
pop
lcall
add
push
dec
push
lahf
loopne
jg
lret
push
in
stos
popa
pop
ss
push
sti
push
jecxz
push
xor
pushf
xchg
xchg
test
es
adc
movsb
jb
repnz
sarb
lret
mov
pop
sub
adc
add
nop
clc
xor
jne
mov
xchg
add
fs
arpl
es
xor
mov
adc
arpl
sub
sbb
add
push
or
fdivl
xchg
push
jge
dec
mov
inc
dec
mov
pop
cmpl
outsb
xor
adc
inc
jg
inc
rol
dec
push
jns
out
jbe
jmp
sbb
mov
push
in
inc
push
jg
inc
dec
pop
leave
movb
mov
mov
push
sub
mov
fists
push
push
scas
mov
mov
and
xchg
adc
das
push
ret
add
mov
arpl
add
fnstcw
and
pop
ret
lock
mov
xchg
cmc
rorb
dec
sbb
sbb
dec
inc
aam
pop
int
rorb
loopne
pop
xor
adc
lds
adc
pop
adc
lds
or
mov
and
push
cmp
xchg
mov
push
jmp
jl
add
addl
push
jmp
ja
push
adc
adc
nop
lret
mov
mov
loopne
pop
dec
pushf
nop
mov
nop
sbb
test
add
rorl
ja
cmp
rcll
sbb
lcall
cmp
je
orl
sbb
notl
push
push
cmp
jne
iret
imul
dec
rorl
adc
add
and
pop
repnz
ret
mov
test
popa
arpl
or
repnz
add
pop
dec
inc
pop
push
inc
hlt
inc
sbb
jp
pop
dec
cmc
lods
sti
rorb
mov
daa
test
and
adc
xor
mov
sub
pop
sub
movsb
mov
lahf
sbbb
cmpsl
iret
jne
xor
inc
das
mov
fs
xor
xor
sub
nop
sbb
fs
mov
and
mov
leave
inc
test
jg
test
sbb
jbe
pop
loop
xchg
adc
insl
sarl
dec
scas
imul
xchg
insb
insl
test
push
add
je
enter
mov
jge
shlb
cmp
xchg
lea
rorl
adc
inc
cld
cmpsl
add
cmp
mov
push
jnp
insl
xchg
cmp
push
inc
mov
mov
fiadds
cs
cmp
xchg
and
stos
sub
andl
inc
ljmp
adc
or
clc
pop
jmp
mov
mov
xchg
sbb
dec
scas
lret
sbb
jge
nop
cmp
loope
mov
movl
pop
mov
cmp
mov
or
dec
cmpsl
push
sbb
add
jno
push
xor
adc
push
adc
data16
sub
dec
mov
repnz
adc
add
and
in
xor
inc
adc
test
mov
ret
lret
or
adc
neg
jmp
pusha
jne
xchg
repz
pop
add
jns
and
es
jg
inc
pop
mov
pop
add
inc
or
xor
push
inc
js
inc
or
cs
fistpl
daa
imul
rcr
mov
or
or
jmp
inc
test
imul
adc
add
ret
xchg
mov
lea
ljmp
pop
jp
stc
mov
pop
add
or
mov
xor
sub
inc
shrb
imulb
pop
in
iret
sub
xlat
mov
add
cmp
xchg
add
xor
cli
fadds
scas
mov
dec
cmpsl
test
nop
dec
adc
les
cld
jo
add
cmp
pop
roll
ret
sbb
shl
je
mov
pop
xchg
fstpl
dec
cmp
jno
pushf
imul
pushf
cmp
jbe
pop
add
xor
push
imul
pop
and
test
movl
xlat
mov
sub
test
sub
lcall
fxch
mov
int3
and
sbb
add
rol
xor
sbb
adc
push
adc
nop
mov
inc
and
loopne
lods
mov
pop
cmp
mov
inc
mov
loope
int3
and
pop
faddp
and
xlat
or
aaa
adc
pop
fisttpll
push
popa
fadd
test
shlb
xor
cwtl
add
and
mov
or
push
or
cmpsl
push
push
push
and
cmp
xor
jp
sub
in
jmp
or
jb
push
rorb
inc
and
enter
f2xm1
sub
adc
add
or
xor
movl
jo
adc
xor
and
fmull
push
and
add
mov
dec
pop
flds
js
out
lock
iret
rcrb
pushf
push
fildl
int
sbb
jp
fs
jne
call
inc
imulb
xor
lods
jno
add
daa
sub
imul
andb
add
mov
or
cmp
arpl
mov
mov
loope
aas
jmp
jo,pn
in
movsl
xchg
adc
push
xchg
in
sbb
enter
addb
rorl
and
inc
sbb
mov
jae
or
and
pop
enter
xchg
mov
mov
test
jmp
les
adc
add
rcrb
push
pop
pop
xor
cltd
push
movsb
sub
and
add
mov
mov
cmpb
and
fwait
iret
mov
cs
sbb
jecxz
iret
jl
shll
xor
xchg
xor
sub
mov
push
fistpl
inc
pop
xlat
xorl
dec
xor
jns
test
adc
lock
xchg
pop
repz
add
bound
mov
xchg
imul
inc
pop
push
push
adc
rcrl
fdiv
pop
xchg
mov
push
add
scas
mov
js
xchg
mov
adc
ss
insb
jo
add
adc
punpckhwd
xorl
inc
jne
pusha
insb
or
mov
mov
orb
mov
fucomip
sub
push
aam
sbb
mov
inc
pop
add
rorb
shl
mov
mov
mov
lahf
daa
cmc
xchg
arpl
mov
rorb
xchg
adc
cmp
push
pop
daa
movsl
shll
stos
loopne
rcr
test
adc
call
js
dec
cwtl
dec
sti
aaa
inc
outsb
inc
cmp
je
test
aaa
lds
sub
sbb
mov
adc
or
add
loop
mov
pop
rorl
nop
scas
test
fs
sub
dec
lret
xchg
nop
add
mov
sti
aam
adc
add
or
xchg
je
adcl
test
sub
or
clc
sub
jo
test
ret
mov
in
mov
or
xchg
daa
jg
aam
fwait
or
and
pop
shll
je
sub
xor
rorl
addb
mov
push
xchg
add
sub
shr
xchg
adc
pop
add
sbbl
es
lods
imul
cs
bound
pop
loopne
push
fildl
aad
movq
les
add
dec
inc
mov
mov
les
adc
sbb
xchg
ret
add
mov
pop
lds
loopne
imul
rclb
pushf
shlb
cmp
pop
pop
and
push
inc
flds
push
jmp
lret
dec
clc
or
xlat
and
and
cmp
or
mov
pushf
xchg
dec
les
neg
test
sbbb
rorb
sbb
mov
sbb
outsb
adc
sar
add
sbb
nop
out
pop
addr16
pop
adc
movzbl
add
outsl
nop
lea
adc
xchg
inc
ss
nop
cmpsb
in
mov
fdivrs
jae
lock
imul
shl
jne
jo
xchg
xchg
dec
shl
ror
sbb
pop
shlb
adc
enter
inc
pop
insb
cmpsb
enter
cs
inc
jae
mov
add
outsb
imul
fdivrs
or
call
andl
add
jmp
sub
repz
cmpsb
xor
or
addl
cmp
push
mov
xor
pop
jmp
add
or
outsb
cmpl
sub
add
int
ja
je
les
and
add
xlat
scas
aaa
inc
pop
and
sbb
mov
ss
pop
ljmp
adc
add
add
adc
shlb
dec
push
sbb
mov
push
iret
add
aam
lock
jl
sbb
test
cmpb
dec
cmp
push
fsub
push
lea
jl
insl
xor
loopne
incl
dec
jb
inc
push
mov
movzwl
shr
jmp
adc
hlt
cmp
adc
pop
push
pop
mov
push
add
iret
scas
bnd
test
ja
fwait
add
and
mov
cmp
pop
add
imul
std
sbb
cmc
pop
pusha
sbb
mov
pop
pop
xor
dec
add
pop
dec
mov
push
xor
ret
iret
test
xor
shl
mov
nop
push
pop
dec
adc
dec
sub
or
sti
filds
lds
inc
dec
jne
mov
sqrtps
mov
xor
lahf
loope
cld
lock
add
push
dec
ljmp
call
cmpl
daa
mov
dec
nop
or
aas
es
jb
fcompl
and
jge
ja
push
test
clc
enter
pushl
cmp
push
cmp
push
divb
idivl
sbb
shll
mov
push
or
mov
inc
int3
fnsave
xchg
pop
cmp
stos
fiadds
add
xchg
push
mov
mov
lea
inc
fnstcw
jns
rorb
iret
xor
shrb
pop
outsb
or
inc
sbb
sbb
cld
fisubl
arpl
mov
adc
jne
in
jno
adc
xor
inc
and
jo
aas
inc
add
cmp
adcl
cmc
xchg
jne
mov
pushf
scas
adc
hlt
test
cmc
test
cmc
xchg
push
inc
sbb
jno
mov
or
out
push
sbb
mov
and
cs
loopne
sub
xchg
jmp
scas
mov
scas
push
cmp
sbb
rolb
xor
xlat
lock
push
or
lcall
and
test
mov
and
pop
and
gs
dec
mov
fs
dec
ja
push
xor
pop
push
sbb
jnp
test
push
fs
addr16
and
loope
cmp
data16
xor
sub
cmp
inc
ja
and
cmp
out
or
enter
insl
sbb
aam
in
mov
add
fs
jg
pop
incl
jb
adc
lret
popa
int3
adcb
jg
dec
scas
xlat
xor
dec
ss
inc
inc
xor
xor
xor
cmp
adc
adc
xor
add
or
or
add
adc
daa
fs
outsb
xchg
dec
sbb
call
sbb
repnz
imul
mov
imul
cmp
shl
ficoms
shrl
jb
inc
and
into
or
adc
dec
jo
aas
xor
add
cmp
faddl
dec
dec
push
mov
inc
fidivrl
shr
not
xor
cmp
adc
and
pop
int3
mov
add
clc
call
imul
and
adc
xor
or
movsl
rcrb
pop
jb
popf
call
aas
mov
inc
popa
pop
mov
jmp
adc
or
push
fucom
add
xor
loopne
imul
inc
ret
or
hlt
lock
mov
or
aas
mov
adc
cmpb
cmpsb
loopne
icebp
nop
jg
inc
mov
inc
inc
inc
les
int
xor
inc
inc
cmpsl
out
stos
jg
aaa
xor
ss
dec
adc
call
inc
xor
mov
inc
aaa
aaa
imul
lahf
inc
xor
ss
cs
xor
inc
inc
xor
xor
push
jnp
sti
insl
inc
inc
sub
inc
cmp
aaa
inc
pop
inc
inc
xor
xor
pop
lds
inc
pop
inc
xor
adc
inc
cmp
adc
xorl
xor
add
mov
push
dec
cmp
ret
outsl
dec
xor
xor
fldt
and
push
cwtl
push
mov
ss
or
mov
rolb
inc
pushf
int
leave
pusha
push
aad
dec
insl
sbb
push
sbb
cmpsl
jns
data16
loopne
mov
xor
cmp
push
sti
or
cli
nop
cld
int3
pushf
out
ss
push
rolb
andb
fidivs
cmpsb
call
cmpsb
sbb
cmp
sub
insb
fidivs
sub
xor
movsl
cmp
mov
mov
insb
jecxz
jbe
clc
push
push
out
out
notb
fiadds
jg
push
inc
outsb
dec
dec
mov
fadds
test
pop
fdivl
test
mov
es
push
dec
pop
inc
sahf
out
out
pop
faddl
aam
pushf
mov
fidivrs
mov
pop
push
fs
xor
inc
sub
jge
imul
les
xchg
sub
iret
gs
and
push
imul
mov
insb
insb
add
enter
lahf
inc
out
cmp
test
push
pushf
push
sar
rclb
loope
mov
jb
je
call
dec
cltd
inc
mov
mov
aas
xor
shlb
imul
ficoms
and
push
cmp
nop
mov
aas
wrmsr
mov
add
xor
add
outsl
mov
mov
cmp
in
adc
lret
jne
dec
enter
enter
fcomp
fxch
loopne
jecxz
in
dec
aam
mov
inc
mov
ret
gs
and
jp
ja
popa
je
xor
xor
adc
jns
sbb
sub
mov
xor
es
and
add
sbb
mov
insl
xor
or
lods
inc
push
flds
jns
mov
sbb
push
mov
xor
fwait
test
test
aas
jbe
pop
es
and
addb
nop
out
sahf
out
mov
out
sahf
ror
fsub
call
lock
bound
or
repz
repz
sub
cmp
repz
inc
dec
push
pop
pusha
push
jo
bound
popa
cmp
bound
sbb
test
es
enter
mov
fs
pushf
pushf
and
and
inc
dec
dec
js
push
xchg
and
hlt
mov
cmovl
pop
and
add
ror
add
sbb
das
rcrl
pop
pushf
sub
dec
notl
out
push
mov
scas
adc
mov
adc
repz
inc
push
push
js
cwtl
lods
mov
int3
loopne
pushf
push
sahf
out
sahf
adc
xor
pusha
jnp
in
jns
test
add
adc
iret
cld
faddl
in
cld
dec
out
pop
repnz
xor
mov
cld
mov
ficompl
xchg
mov
push
and
xchg
test
imul
aas
add
mov
xchg
in
sub
mov
out
orb
andb
ss
pmuludq
psubw
push
adc
push
push
decl
cmp
in
mov
iret
push
pop
push
xchg
cmc
insb
insb
or
sarb
std
jb
rcr
cmpsb
lret
mov
mov
sub
or
or
sbb
jb
add
adc
adc
and
adc
mov
lahf
and
adc
adc
sub
cmp
push
or
inc
mov
add
in
xchg
pop
aam
call
cmp
stc
mov
pop
push
sahf
and
jle
dec
adc
add
xchg
push
pushf
or
inc
mov
js
mov
enter
add
fmuls
lock
mov
mov
dec
xchg
and
push
test
add
inc
mov
mov
add
push
and
pushf
pop
jbe
adc
add
or
or
push
mov
cs
push
dec
popa
push
jne
jle
in
jbe
xchg
sbb
push
fnstcw
aad
pop
and
jnp
negl
push
pusha
mov
out
fsubr
cld
push
iret
repz
or
sub
dec
pop
cmp
repz
orb
repz
sbb
adcb
and
mov
in
xorb
ja
popf
add
jmp
pushl
sub
push
sub
jle
jmp
das
sti
ja
out
xchg
add
daa
daa
daa
adc
adc
cmp
xlat
addr16
in
push
or
in
in
sbb
add
rcl
pop
aaa
rcll
movhps
mov
pop
movsl
mov
jns
call
imull
push
dec
out
sahf
out
pusha
jo
nop
jmp
lods
mov
rep
sahf
out
call
xchg
into
adc
and
mov
outsl
adc
mov
pop
or
nop
xchg
out
dec
popf
pop
lcall
jb
enter
cli
enter
and
sbb
negl
sub
in
xchg
hlt
inc
repz
repnz
inc
mov
js
mov
mov
enter
in
fsubr
call
fs
lods
xchg
pop
sbb
adc
or
mov
dec
aaa
add
bound
les
loope
fiadds
xchg
out
out
dec
and
pop
pop
outsb
xchg
inc
or
scas
std
add
or
or
iret
add
push
xchg
push
lcall
aaa
rolb
mov
add
inc
add
jbe
pusha
cmp
ja
je
scas
add
pop
pop
add
sbb
icebp
das
movl
xchg
adc
orl
mov
and
jb
mov
xchg
pop
add
outsl
xchg
stc
mov
mov
sti
cld
std
sahf
out
sahf
incb
add
cmpb
idivb
cmpl
push
add
and
pop
mov
add
jecxz
and
das
movb
loop
push
rcll
jno
das
nop
pop
fidivrs
inc
pusha
lcall
clc
aad
ss
cmp
lock
jecxz
xor
or
ds
js
dec
pop
movsl
daa
fdiv
aad
jecxz
dec
xor
outsl
push
loopne
mov
movsl
inc
out
mov
mov
pusha
cmpsb
mov
mov
mov
call
out
imul
int3
pop
out
ficomps
jbe
mov
fdivl
jge
sti
cld
test
pusha
scas
fisubs
imul
js
mov
loopne
adc
or
sub
call
cmpsb
faddl
cs
cmpsl
add
inc
push
adc
sub
test
mov
rcrb
jg
fsubr
out
mov
mov
mov
sarl
push
es
out
out
mov
clc
cld
jl
cmp
dec
lock
push
push
sbb
sahf
sti
mov
out
iret
push
jge
idivl
pusha
lock
sbb
sti
int3
sbb
out
loopne
mov
aam
pop
mov
sbb
cld
xchg
and
pop
add
mov
jle
lahf
enter
jmp
das
push
jmp
fnstsw
es
pusha
mov
sbb
jnp
loope
ds
popa
ja
into
cmp
fcomip
cs
aam
sbb
ja
out
clc
popw
pop
in
fiadds
fstp
ss
xchg
es
jns
cmp
dec
pop
push
mov
out
fs
sub
pop
dec
fisubrs
fiadds
sbb
jbe
mov
out
push
hlt
pop
es
push
addl
jp
inc
ds
dec
les
push
xchg
or
mov
pop
inc
ja
sar
fmul
cld
pop
xchg
pop
sarl
xor
and
xrstors
fistpll
xlat
dec
cs
jnp
pop
in
mov
je
inc
ss
or
sbbb
pusha
inc
cwtl
call
push
jbe
or
mov
pop
loopne
dec
mov
je
rcll
js
fmuls
movsb
cmp
daa
subb
out
adc
sub
mov
add
subb
add
dec
add
dec
add
dec
add
and
and
out
jns
mov
or
inc
sbb
ds
dec
jecxz
jnp
inc
push
outsb
push
and
out
jne
into
dec
push
sub
dec
push
add
push
cmp
out
stc
clc
adc
mov
mov
outsl
aaa
fwait
int
mov
add
gs
call
fldl
mov
fisubrs
stos
xchg
xchg
mov
lea
fists
push
mov
in
xchg
xchg
lcall
int
cmc
fcmovne
jp
stos
xchg
push
dec
aas
jg
jg
out
stc
in
mov
jle
ljmp
clc
std
out
aas
cld
decb
cmc
stc
in
jle
das
stc
xor
das
sbb
outsl
cmc
out
std
ds
mov
pushf
clc
dec
cmc
aaa
cmp
jle
cmpsb
out
das
or
add
cmp
outsb
outsb
lock
add
aas
pop
out
jle
aas
lds
scas
cmpsl
iret
mov
scas
xor
jg
jg
adcb
outsl
stos
ds
decl
sti
mov
lea
rorb
ret
cmp
dec
cld
jg
lock
or
pop
inc
mov
inc
jg
ror
int3
lods
clc
ljmp
jle
shr
cmp
sub
mov
mov
pop
idiv
fldpi
call
sbb
fs
divb
nop
xchg
lcall
dec
not
cli
mov
add
sbb
cli
pop
outsb
fdivr
mov
xchg
mov
ljmp
fsin
clc
mov
mov
adc
jb
cmpsb
add
mov
sbb
nop
lea
roll
jg
sub
jmp
inc
cli
shlb
scas
jmp
rcrl
sbb
add
mov
push
jle
mov
xor
loope
repz
inc
sti
xchg
inc
call
idiv
incl
repnz
shll
stos
mov
xchg
lcall
adc
xchg
pushl
fs
mov
mov
lea
data16
xchg
aas
movsb
mov
rcrb
ljmp
adc
stos
push
in
cmpsl
fbld
les
add
xor
lcall
jl,pt
inc
jp
incl
hlt
push
mov
shl
test
sbb
cwtl
and
push
mov
stos
push
or
les
sti
imulb
xchg
xchg
ja
fidivrl
mov
jg
decl
icebp
lahf
push
rsqrtps
cmp
int3
rcl
ss
out
cmpsl
jmp
sti
call
aaa
jg
adcb
sbb
add
pop
sbb
insb
and
test
and
fmuls
cld
out
test
inc
and
lcall
inc
insb
adc
inc
inc
mov
sub
int
cmc
inc
hlt
outsl
stos
les
decb
cli
lock
mov
jmp
pop
outsb
ficoms
lock
cmp
add
jmp
imul
dec
lock
and
out
xchg
mov
nop
mov
inc
jbe
jmp
jl
stc
sar
int3
aas
jbe
fistl
je
mov
repz
mov
ljmp
sub
pop
and
jb
cs
jbe
push
push
push
cmp
jmp
mov
mov
and
aad
xchg
lock
lret
pop
je
in
ret
cmp
jmp
addl
or
call
add
dec
pop
test
adc
push
imul
xchg
repz
ja
jmp
cmp
fcoml
sti
dec
nop
adc
ret
sub
xchg
enter
jbe
cld
out
mov
jge
in
xor
sti
dec
pop
pop
add
fcompl
std
shlb
ud0
inc
lret
les
mov
stos
incl
call
lahf
les
jb
std
mov
les
mov
int
mov
cld
test
sbb
xchg
push
mov
js
lock
cs
ret
clc
les
repz
mov
sub
cmp
ja
aas
sbb
pop
cmpsl
push
mull
inc
xchg
leave
xchg
es
fwait
sub
icebp
inc
and
mov
jge
push
push
adc
in
roll
fcomip
orb
mov
icebp
mov
loopne
jno
outsl
popf
dec
sahf
fisttpl
lock
adc
loopne,pt
popf
xchg
mov
scas
adc
je
cld
movsl
aad
orb
aad
adc
push
aad
jbe
aam
jge
inc
aaa
add
cmpsb
adc
pop
pop
ds
adc
loopne
ret
jg
lods
pop
lock
insl
int
out
je
dec
push
outsl
jns
and
fists
xor
sub
push
adc
jle
paddsb
incb
jbe
sti
xchg
xchg
mov
mov
push
jp
jns
mov
lret
inc
adc
push
das
lret
in
mov
mov
scas
mov
xor
cmp
lock
xchg
data16
std
jg
incl
andb
bound
xchg
sti
pusha
ret
mov
fdivs
pop
push
scas
test
pop
or
dec
ret
push
repnz
aad
insl
ret
cmp
add
pushl
jno
inc
rep
out
cld
cmpsl
cmp
pop
lods
repnz
jge
adc
xor
adc
jge
mov
cmp
jl
or
sub
xchg
mov
push
idivl
loope
decl
jle
mov
cmc
sahf
jge
cli
or
add
push
pop
rclb
decl
dec
sub
rolb
stc
xchg
stc
mov
clc
imul
add
sub
push
pop
fsubr
mov
and
pop
jl
es
mov
cld
lcall
loope
pop
inc
jb
aas
sbb
mov
sbb
inc
repnz
jg
out
test
and
out
push
jmp
out
ret
push
movsb
jnp
adc
sbb
mov
loopne
es
mov
stc
lcall
dec
mov
test
aas
call
loop
xor
aam
scas
fnstenv
xor
pop
notb
dec
sub
gs
inc
clc
mov
jg
mov
dec
jmp
ret
pop
adc
xchg
icebp
sbb
test
mov
pop
mov
mov
sbb
call
xchg
shll
scas
mov
xchg
call
or
mov
sbb
mov
ds
loope
les
pushl
in
loopne
je
pop
addr16
int3
xchg
insl
addr16
imul
and
mov
and
stos
add
rorl
mov
pop
xorl
repz
fidivrs
cli
out
and
fsubrs
aas
notb
sbb
imul
jle
sti
cmpsb
cmp
mov
inc
sbb
stc
loop
rorl
clc
sub
push
int
push
jo
cmpsb
je
aam
lret
lock
xchg
repz
jmp
push
xor
ljmp
repz
xchg
aam
xchg
icebp
jae
mov
out
lret
add
or
std
aaa
lret
mov
inc
cmp
lods
push
les
mov
pop
mov
add
out
mov
sub
jmp
ljmp
pop
mov
loop
lods
aaa
inc
pushf
sbb
jg
fucomp
nop
dec
addb
sub
adc
and
pop
sti
pop
or
jg
jg
sbb
jp
mov
jo
pop
pop
pop
sarb
sub
sub
decl
pusha
and
pop
adc
aad
sar
loop
inc
pop
je
scas
mov
xchg
das
jecxz
add
fwait
push
dec
pop
push
pushf
push
stos
dec
ret
std
and
jg
mov
jmp
cmc
ficompl
mov
and
fidivrs
in
xlat
cmp
push
ret
fst
jge
push
jge
add
push
cmp
adc
in
jge
mov
sub
mov
repz
pushl
jg
enter
out
icebp
pop
out
cmp
cmp
daa
mov
ret
mov
add
rclb
cmp
lret
sbb
cmpsb
mov
sub
cmp
fcomps
js
add
sub
iret
pop
xchg
ljmp
mov
jbe
mov
repz
decl
mov
jmp
shr
movb
and
add
cs
sbb
in
dec
addr16
jg
inc
adc
in
push
mov
mov
or
loop
adc
out
or
xor
jmp
incl
adc
sti
jl
idiv
ljmp
scas
idivl
xor
adc
sbb
pop
loopne
jl
lahf
jmp
pop
shrb
out
add
dec
mov
pushl
je
outsb
sub
pop
mov
icebp
dec
adc
fsubp
dec
out
cmpsb
movsl
pusha
scas
je
mov
jne
pop
stc
out
jbe
adc
jle
cs
mov
out
jp
mov
out
repz
loop
in
int
ret
loope
daa
dec
out
or
test
repnz
sti
jb
jbe
outsb
andl
cmc
std
clc
notl
mov
mov
sti
xor
ss
shll
push
cwtl
test
fisttps
dec
xor
jl
imul
fs
and
add
inc
add
repz
mov
fildl
aas
sti
sub
insb
in
add
std
cmp
lods
test
test
and
push
jle
hlt
mov
sub
dec
add
int3
out
or
pop
dec
pushl
or
decb
out
mov
aad
mov
jns
out
add
xchg
and
and
inc
and
and
int3
or
outsl
in
nop
call
decl
jmp
pop
hlt
les
push
std
mov
xlat
pushf
icebp
mov
lret
mov
mov
outsl
fwait
test
test
sbb
mov
jmp
jo
jle
sti
cmp
pop
clc
dec
xorl
and
andl
shll
paddq
pushl
std
fwait
inc
cmp
sub
sub
xchg
sbb
or
mov
pushl
add
iret
jb
sti
fidivs
imul
pop
sub
imul
xlat
ja
and
clc
std
enter
das
mov
jb
xor
decl
lock
sub
dec
das
lods
stos
xchg
dec
nop
out
push
scas
ja
aaa
dec
jmp
dec
cld
ret
pop
repz
mov
les
mov
xor
inc
push
and
inc
dec
dec
mov
mov
push
jg
out
imul
enter
push
testl
sti
cmp
ret
xor
lock
sbb
subl
ja
sti
addr16
movq
jmp
xchg
jl
jecxz
cmpl
clc
stc
outsl
fdivl
pusha
xor
daa
fbld
ja
push
xchg
enter
repz
in
inc
jo
jnp
inc
xchg
roll
cli
es
mov
push
mov
push
outsb
icebp
inc
lods
xchg
das
enter
cmc
pop
ret
imulb
fmul
in
notb
push
add
decl
test
mov
push
cmp
jl
adc
sbb
mov
sbb
test
decl
pop
pop
cli
lret
inc
aaa
mov
jb
ss
dec
sar
push
pop
ja
in
jb
cmp
and
icebp
loop
mov
leave
in
subb
jmp
jmp
loopne
rolb
out
mov
or
jl
fcomi
push
pop
dec
mov
pop
cmpb
js
movsl
xchg
xor
inc
mov
pop
out
inc
xor
enter
lock
pushl
je
out
mov
movsb
shll
fsubl
movsl
div
cli
mov
out
inc
popf
jmp
call
pushl
iret
push
nop
inc
adc
jne
icebp
js
pop
jge
rorl
mov
jg
cmc
adc
jmp
repnz
into
idivb
jl
pop
cmpsl
out
js
jmp
lret
mov
loop
je
pop
cmp
es
lock
inc
cmpsl
jle
xchg
adc
or
stc
add
push
pop
sti
fstpl
cmp
je
pop
jecxz
adc
push
mov
clc
pusha
dec
mov
int3
and
decl
and
mov
and
clc
frstor
cmp
ds
decl
dec
gs
mov
or
xor
sti
stc
ficompl
shrb
out
cli
jl
add
int3
jae
in
cli
inc
xor
lcall
lea
pop
call
mov
xor
adc
lret
movsb
xlat
fldl
in
mov
mov
decl
mov
enter
mov
loop
and
sbbl
xchg
gs
pop
cmc
incl
mov
icebp
xchg
cwtl
ja
stc
dec
sti
fbld
cld
jnp
mov
cmp
loop
mov
jmp
jae
cmpsb
or
scas
cmp
add
inc
adc
jbe
in
out
ss
cmp
cmpb
pop
fwait
xlat
inc
stc
std
dec
lcall
aaa
or
xor
neg
cmp
fdivp
push
cmp
jbe
pop
mov
rcr
push
and
adc
je
or
lock
xchg
ret
jns
mov
scas
sub
test
mov
repz
clc
push
call
jle
out
ret
arpl
daa
ret
lods
addr16
popf
add
or
incl
aam
cmp
push
mov
cmp
xlat
cld
jmp
dec
jle
lea
hlt
push
cmp
out
jb
in
push
fstpl
sub
mov
out
jg
sub
hlt
mov
jl
adc
sub
or
stos
jl
cmc
out
les
shrb
adc
mov
xor
and
mov
and
loop
out
mov
call
je
jle
decl
fld
loopne
cmp
or
incl
mov
xor
inc
jg
call
aam
cmp
ljmp
mov
icebp
push
cmp
xor
jecxz
decl
js
cld
aad
shr
das
xchg
repnz
scas
push
ds
add
std
lcall
out
and
xchg
cli
cltd
pushf
into
clc
insb
jmp
pop
je
xchg
mov
add
incl
pop
lcall
inc
fsubrl
lock
jmp
fldt
push
sbb
cmp
cs
jg
idiv
fimull
push
popf
ds
inc
sahf
push
fdivl
sub
incb
add
cmp
jecxz
pop
aam
jbe
mov
cli
aaa
mov
jmp
loopne
imul
pusha
aad
stc
inc
or
aad
enter
cmp
cmp
out
ljmp
loop
cmc
repz
jp
push
mov
fwait
call
xlat
out
fwait
in
fidivl
gs
lahf
outsb
pop
aam
ljmp
sbb
mov
adc
and
lahf
push
stc
mov
popaw
mov
lock
incl
ljmp
mov
and
xor
scas
jecxz
or
jbe
xchg
push
aam
fs
bound
jns
jp
and
outsl
add
mov
pop
xlat
sub
fisttpl
ds
mov
scas
es
push
push
lahf
xchg
sbb
ljmp
inc
clc
cmp
mov
dec
std
mov
add
xchg
mov
lds
into
jnp
mov
scas
jbe
ljmp
mov
jbe
fsubrs
push
shr
sbb
sub
sahf
mov
aam
popf
out
ljmp
mov
sbb
inc
mov
pop
add
mov
je
sbb
cltd
fsincos
movsl
lret
cmp
outsl
cli
ja
mov
aas
cmpsb
test
xchg
push
scas
xlat
sbb
decl
push
jmp
xchg
sbb
sbb
jmp
negl
addl
clc
stos
jmp
jnp
sbb
adc
sbbb
add
fcmovu
jne
jne
jmp
jge
push
in
inc
popf
and
and
sbb
lods
gs
call
mov
pop
cmpb
into
aas
rorb
dec
push
out
outsl
mov
out
mov
jbe
je
nop
xchg
int
cmc
stc
mov
gs
push
dec
rorl
push
push
loop
jmp
inc
ds
sub
mov
inc
rcrb
into
ss
sub
jo
outsl
xor
adc
clc
pop
shrb
mov
cmc
outsl
out
mov
cmp
adc
xchg
cmp
or
jns
add
lcall
push
ja
mov
add
and
cmp
cmp
cmp
add
std
jmp
ja
hlt
jns
sub
xchg
adc
adc
aam
iret
cwtl
mov
ret
test
std
enter
rcr
push
cltd
pop
fcmovnbe
and
es
loope
fbstp
mov
jp
mull
out
cmpsl
cmpb
rolb
repz
es
mov
hlt
or
cmp
es
jg
inc
gs
cmpsb
mov
sar
mov
inc
sub
les
std
jno
push
dec
sub
cmc
dec
sub
jg
addr16
or
shll
incl
icebp
jge
out
sar
mov
xor
lahf
pop
lods
out
sub
dec
incl
std
ja
xchg
inc
cmp
jbe
out
div
pop
xchg
ja
in
scas
and
stc
jmp
and
and
test
xchg
mov
jg
loope
outsl
sub
and
xchg
push
jp
inc
adc
sub
stc
mov
dec
push
out
mov
mov
aas
adc
lods
rcr
xchg
pusha
mov
repnz
int
sti
push
xchg
loope
jnp
and
jmp
jne
imul
sti
out
cltd
mov
lret
jns
divl
daa
orl
jl
jo
hlt
add
cmp
negl
in
push
scas
std
lcall
adc
xor
repz
mov
lods
jle
jnp
xchg
repz
std
stos
mov
xor
jb
mov
std
mov
jnp
and
ljmp
pusha
mov
test
and
leave
cli
and
mov
jle
mov
mov
sti
lods
movsl
sub
jo
push
les
es
imul
movsl
mov
push
xchg
flds
sbb
mov
jbe
adc
xchg
std
fwait
jnp
add
lahf
mov
ljmp
dec
jb
xchg
pop
shlb
leave
ficoml
stc
scas
dec
xchg
mov
push
jle
lret
xchg
and
dec
lahf
jmp
push
call
mov
call
jmp
repnz
jmp
fbld
data16
pushl
scas
in
mov
dec
icebp
pop
adc
repz
inc
ljmp
jb
ret
sub
cmp
mov
cmp
loope
xchg
filds
cmp
shll
lock
cmpsl
mov
mov
test
push
sarb
mov
dec
ret
mov
decl
cltd
jl
std
mov
insl
sub
das
or
int3
and
call
cmp
scas
add
inc
cwtl
das
cld
fldenvs
imul
call
inc
incl
mov
sub
and
sub
loop
sub
cmp
cmpsl
and
add
ljmp
lahf
or
scas
test
stos
repz
out
dec
in
sbb
jo
sbb
mov
adc
mov
out
jmp
sub
push
adc
les
push
jecxz
mov
stc
push
aas
cmpsb
mov
mov
imull
insl
mov
cmpsl
imul
rorb
sub
cltd
or
push
std
call
sub
aaa
lcall
pop
hlt
loope
mov
or
adc
jle
movsl
gs
mov
enter
pop
push
clc
jbe
into
sub
das
inc
pushl
pop
cmpsb
lods
jge
push
mov
jmp
sub
ja
aad
push
mov
roll
push
ja
adc
shll
movsl
ss
insb
jmp
lcall
je
ja
mov
int3
sbb
inc
fadds
jae
mov
xlat
xor
pusha
mov
lods
ds
icebp
je
es
decl
je
nop
dec
lods
and
std
in
jl
idivl
mov
sbb
jg
or
add
movsl
jl
cld
stos
jae
xchg
imul
xchg
enter
lds
decl
fwait
gs
dec
out
and
add
repnz
out
ds
incl
adcl
mov
adc
divl
and
jge
adc
aas
cmp
in
aas
xor
jne
iret
mov
push
lods
jge
lods
mov
mov
mov
into
test
sub
xchg
scas
iret
sbb
call
sahf
or
xchg
jg
add
in
dec
cmp
pop
add
add
out
cmp
mov
inc
test
mov
popf
add
push
in
xchg
incl
pop
xchg
enter
sarl
stos
xchg
mov
pusha
jl
add
xor
push
cld
decl
mov
popa
jecxz
insl
jecxz
ficoms
loop
out
ja
jbe
icebp
pushl
aad
pop
test
jge
cmc
aad
testb
mov
dec
ljmp
pop
inc
int
xchg
insb
sub
jnp
outsb
cld
into
cmc
jbe
or
sub
aaa
pushl
lahf
push
in
xchg
gs
cmpsl
test
jl
pop
idivb
or
inc
push
add
hlt
mov
lcall
outsl
out
orb
sbb
jmp
repz
mov
push
mov
cmovbe
mov
inc
add
inc
xlat
sbb
xchg
je
mov
in
mov
push
cmc
in
mov
dec
in
xor
or
mov
xchg
scas
sub
movsb
jbe
jae
leave
lods
mov
inc
add
add
ljmp
cld
lods
jmp
mov
fiaddl
out
repz
ret
or
push
mov
adc
dec
out
xor
adc
ret
lds
push
js
out
sahf
adc
divl
sbb
mov
pushl
and
lods
mov
stos
mov
je,pt
push
call
mov
js
ret
idivl
mov
cmp
lahf
test
fists
cmp
inc
fstpt
je
cmpsl
into
fnstenv
ret
inc
xor
icebp
in
das
fisubs
push
and
ss
cmp
sub
dec
cli
jb
pusha
fsub
push
mov
fsubrs
pop
xor
jecxz
add
fs
sub
in
sub
dec
cmp
xlat
pop
std
mov
popa
jnp
or
aad
xchg
sbb
push
adc
jg
pop
inc
pop
js
pop
mov
mov
cli
ljmp
jne
jbe
icebp
sti
sti
add
mov
mov
lahf
and
repz
inc
inc
jmp
jmp
xchg
jmp
jbe
je
xbegin
out
xchg
scas
mov
dec
inc
shlb
addr16
ljmp
sysret
mov
jge
cld
dec
pusha
jle
rorb
adc
incl
hlt
es
cwtl
cmp
shlb
cld
fbstp
xchg
icebp
paddd
dec
std
xor
xor
dec
loop
cmp
ljmp
sbb
daa
in
aam
int3
scas
and
or
test
icebp
cmp
clc
cmp
push
push
nop
inc
and
push
pop
out
push
pop
aas
stc
lock
mov
or
cmpsb
fisttps
rorb
mov
push
xchg
test
mov
mov
fnsave
sahf
fists
cmc
sarb
in
pushl
addb
adc
add
jb
jg
aas
daa
lods
sbb
add
mov
subb
mov
subb
adc
movsl
and
ljmp
out
pop
mov
lock
mov
jge
lea
leave
stos
cs
je
pusha
mov
icebp
ljmp
cli
out
cli
mov
jg
xchg
int3
push
adc
ss
sti
push
sub
dec
in
imul
mov
shrb
inc
add
nop
or
cli
aam
in
inc
stc
mov
std
lcall
or
adc
mov
lock
mov
mov
cmp
jl
xor
addl
decl
jmp
jb
add
lcall
loop
or
dec
mov
jo
and
pop
cli
mov
shl
sti
sub
decl
popa
adc
mov
push
repz
call
aam
push
jecxz
adc
and
and
adc
or
repz
sbb
call
std
daa
sub
and
aaa
fs
aaa
cli
add
dec
jg
test
fimull
in
jg
addr16
filds
out
xchg
adc
rolb
dec
in
cli
pop
mov
out
pop
sub
xchg
adcb
mov
in
aad
jnp
pop
jns
fistps
dec
shr
and
pop
cmpsb
pop
mov
inc
ss
lret
cmp
inc
pop
dec
enter
mov
and
lods
xor
or
sahf
add
and
push
cmp
push
mov
fldcw
daa
mov
xchg
jg
push
pushl
les
hlt
shr
push
mov
adc
xor
cmp
jnp
mov
adc
outsb
pop
lahf
cmpsb
cmp
inc
pop
nop
pop
stos
mov
fdivs
xor
jmp
pop
xchg
loopne
enter
scas
mov
sub
jo
mov
sti
xor
decl
fnstsw
lahf
adc
test
sub
add
push
push
cmp
mov
pushl
pop
jmp
sbb
sub
fisttpl
add
ss
push
decl
jmp
mov
push
cmp
add
jg
or
lods
jne
mov
adc
push
scas
aas
add
aam
aad
push
inc
mov
pushl
or
fnstcw
fcomps
dec
sub
xor
cmp
jg
cltd
push
add
arpl
fwait
mov
push
out
stos
lcall
scas
inc
data16
and
shll
cmp
push
pop
push
pop
out
pop
mov
pop
sbb
test
lret
adc
clc
ljmp
mov
movsl
pop
movd
iret
push
je
rcll
mov
or
es
push
inc
clc
decl
xchg
inc
clc
pop
adc
mov
cmp
sub
xor
out
inc
mov
test
int3
and
inc
xor
aam
push
test
pop
add
push
addr16
test
mov
sahf
loop
mov
incl
and
testl
imul
mov
pusha
sub
mov
jb
push
sub
jmp
pushl
add
mov
mov
sahf
adc
jg
inc
xchg
adc
pop
cltd
pushf
cltd
hlt
cmp
push
jno
lods
mov
stos
test
mov
mov
xchg
sahf
xchg
fwait
mov
xchg
xchg
mov
mov
scas
stos
mov
mov
push
mov
fs
adc
sti
xchg
scas
je
jp
pop
cmc
pushl
pop
jecxz
add
std
mov
push
je
shl
jg
inc
mov
mov
mov
adc
pop
push
push
ss
and
or
xchg
ljmp
aaa
std
gs
inc
repnz
sub
and
ljmp
ror
repnz
and
shr
inc
daa
nop
jnp
inc
shr
pop
mov
ljmp
sar
in
jbe
jo
in
pop
push
jp
addr16
jmp
pop
clc
decl
addr16
mov
add
push
je
daa
into
aas
scas
ds
std
mov
push
cmpsb
push
rcl
test
pushl
out
mov
or
and
pushl
in
adc
sub
in
out
loope
int3
xor
js
call
jecxz
mov
add
je
je
aas
je
cmpsl
shrb
int3
cmp
xor
int
mov
push
cs
out
lock
jmp
cld
int3
push
negl
sbb
cmp
dec
lahf
pushl
fwait
pusha
cmp
jg
test
dec
lcall
popa
cmp
in
lock
mull
fcoml
fistl
xchg
or
sub
repz
and
lods
jnp
jmp
dec
adc
in
mov
mov
xchg
incl
cmp
inc
or
fidivl
and
mov
pop
mov
call
je
inc
cmovbe
or
iret
jae
sti
les
out
xor
div
mov
repz
pop
lea
sub
insl
sbb
repnz
mov
les
pop
scas
and
or
cli
shrb
mov
mov
decl
fisubrl
imul
xchg
sub
mov
shlb
mov
jmp
cmpsl
aas
aaa
je
mov
dec
mov
push
cmpsb
cmpsl
std
add
xor
hlt
sbb
das
pop
xchg
dec
dec
cld
pop
mov
jo
cmp
pop
pop
sbb
fcomps
test
fucomi
cltd
add
mov
dec
test
push
mov
dec
mov
adc
xlat
out
mov
xchg
bound
mov
jl
std
jne
stc
es
xor
adc
nop
or
lcall
repz
iret
stc
int
jg
adc
ja
sbb
and
inc
lcall
jl
add
loop
and
push
and
adc
lret
stc
movsb
mov
fdivr
fcomip
decl
cmpsl
and
jp
mov
in
roll
and
jg
call
loopne
inc
test
adc
test
add
mov
and
cmp
mov
je
jbe
jbe
idivl
mov
push
inc
cmpsl
lcall
nop
movsl
insl
stos
incl
icebp
incb
push
sbbl
jle
aad
and
inc
jne
add
scas
les
jno
faddl
incl
test
mov
loope
repnz
in
pop
inc
add
icebp
add
jmp
dec
call
mov
enter
lahf
mov
leave
sbb
daa
lea
sub
pop
sti
push
xchg
in
cld
lcall
into
pop
sub
lea
mov
fidivl
jg
push
mov
test
fs
repz
aas
mov
pop
enter
loopne
jmp
cld
out
fmulp
xlat
scas
sbb
mov
iret
repnz
fwait
cmp
mov
fidivl
cmpsl
cmp
inc
push
dec
invd
mov
in
out
jg
dec
gs
in
xorb
pop
aas
xchg
popf
sub
icebp
sbb
lock
mov
incl
sbb
shlb
sub
or
repnz
in
in
repnz
iret
mov
jp
addr16
mov
add
int3
jmp
push
repz
aaa
repz
loop
jg
decl
ljmp
jnp
incl
xchg
loopw
cli
dec
in
mov
mov
std
mov
std
lods
in
icebp
xlat
arpl
push
lds
jne
dec
call
jmp
jmp
xchg
aam
pop
inc
nop
imull
mov
pusha
mov
lcall
push
jecxz
in
add
ja
out
jbe
mov
nop
jb
lret
shrb
inc
mov
int3
mov
subb
cmp
jmp
movsl
addr16
pop
inc
ss
pop
int
push
ljmp
sub
repz
inc
jge
jg
flds
stc
stc
daa
les
in
pusha
mov
xchg
pop
idivl
jne
call
cltd
add
aas
scas
repz
pop
cmp
cmp
xchg
fcomp
pushl
mov
mov
pusha
popf
push
mov
ljmp
enter
push
in
mov
movsb
out
cmc
xchg
addr16
ret
mov
int
pushf
sti
aam
std
scas
shl
and
cmp
pop
cmp
xchg
in
adc
cs
mov
scas
imul
add
clc
mov
daa
or
push
fiaddl
fxch
cmp
cltd
icebp
or
fsub
divb
mov
xchg
adc
or
jecxz
mov
push
int
decl
and
adc
in
mov
cwtl
mov
xchg
xchg
cmpl
incl
aad
cld
jecxz
sbb
std
insl
cmp
rep
cli
pushl
stos
sar
ret
sbb
dec
mov
mov
mov
sti
out
adc
cmp
fcmovb
mov
mov
lahf
cli
mov
incb
fistps
pop
lods
ret
or
ret
insb
lods
sarl
adc
add
xor
into
ficoml
add
call
ss
dec
xor
loope
rcrb
lcall
fistl
adc
dec
daa
adc
dec
and
stc
dec
pushl
fistpl
ja
cwtl
or
repnz
jo
mov
mov
decl
push
stos
test
mov
push
push
mov
out
loop
fnstcw
aad
ljmp
pop
and
notb
inc
mov
jecxz
xchg
leave
movsb
xchg
cli
loopne
pop
test
jg
ljmp
lret
int
iret
cmp
jle
enter
lods
inc
xor
pop
jbe
inc
cli
push
xchg
cmp
push
pop
ret
jae
pop
ljmp
pop
imul
movsb
fwait
jle
idivl
decb
lock
jmp
fcompl
iret
inc
inc
sbb
push
mov
arpl
std
inc
push
sub
mov
mov
cmpsl
mov
jmp
movl
inc
imul
adc
dec
and
pop
ljmp
jecxz
push
les
in
sti
daa
sub
xchg
in
aas
mov
sbb
pop
push
mov
lcall
mov
mov
mov
out
ja
mov
adc
jg
aas
sub
shr
stos
cmp
repz
insb
clc
decl
out
lds
incb
pop
daa
incb
ljmp
adc
movsb
int
jge
mov
out
sarb
mov
mov
mov
jne
xchg
fidivs
ds
add
je
call
pop
inc
mov
movsb
into
or
daa
ds
jnp
mov
sbb
out
and
jecxz
sti
test
xchg
in
rol
jne
dec
jmp
jne
cmp
scas
iret
mov
mov
adc
js
pop
or
out
mov
and
pop
jnp
in
shl
shll
inc
hlt
pop
pop
in
gs
cmpsl
ss
iret
std
and
test
jle
decl
ljmp
pop
and
jg
xlat
cmp
ret
lret
xor
cmc
xchg
popf
out
push
call
sti
xchg
jb
mov
pop
es
es
in
subb
inc
inc
jg
fcomip
incl
daa
hlt
fisubrs
ds
mov
jg
xlat
xchg
jmp
jmp
mov
popf
xor
stos
adc
cmp
mov
out
cli
lds
fcoms
pop
rorb
es
mov
popf
in
sbb
and
call
jecxz
test
clc
add
notb
test
inc
inc
xchg
incl
cld
arpl
and
popa
pop
mov
das
mov
shr
loop
push
pop
sub
mov
addr16
outsl
incl
mov
and
pop
lds
bound
jae
add
jl
movsl
daa
xchg
mov
inc
stos
ljmp
ror
je
out
lods
int
std
testl
inc
jle
movsb
cmp
cmpsl
jno
pop
aas
xlat
incb
in
or
dec
inc
in
out
add
adc
lcall
insl
cmpsb
jmp
cmp
icebp
cmp
scas
inc
ja
scas
test
pushl
scas
pop
sbb
jne
lahf
outsb
pop
jne
out
test
aas
or
je
pop
mov
out
repz
ljmp
push
push
mov
nop
je
lods
in
cld
icebp
decl
test
mov
adc
mov
insb
cmpsb
xchg
loopne
or
jbe
cmpsl
jmp
jmp
pop
call
mov
mov
lods
inc
jns
subl
scas
jl
cmc
jl
lcall
test
cltd
cmp
sbb
cmpsb
faddl
cmp
out
iret
cmp
incl
cmp
mov
cld
leave
jge
pop
rolb
jbe
pop
in
xor
js
stos
jb
ret
inc
push
sub
cmp
adc
scas
je
jae
or
negl
cmpsb
ljmp
jmp
jg
call
add
cmp
push
add
mov
and
pushl
jle
add
test
cld
flds
rorl
lcall
jmp
mov
and
and
sub
stos
sbb
lods
or
mov
rol
hlt
xchg
popa
jl
outsb
sbb
jecxz
mov
push
gs
mov
js
jmp
mov
cld
sub
mov
mov
cs
mov
jl
lret
mov
mull
or
push
gs
icebp
cmc
stc
cwtl
sbb
fdivr
ficompl
in
lock
insl
xchg
aas
fildll
add
aas
or
cmpsl
mov
decl
lods
adcb
add
xchg
scas
lret
lahf
nop
sub
adcl
sarl
and
sti
mov
hlt
cmp
jmp
aaa
adc
ljmp
mov
pop
add
xchg
loope
inc
adc
mov
sbb
mov
shlb
rclb
mov
cmp
cmovo
dec
icebp
inc
add
mov
fwait
push
and
jbe
rcl
mov
sbb
lcall
out
adc
test
dec
jbe
cmp
lods
loop
loope
out
lods
test
jne
pop
je
jbe
push
ljmp
aad
pop
iret
add
imul
jmp
repz
pop
nop
rcrl
je
je
add
cwtl
jge
rclb
mov
adc
call
jge
mov
andb
insb
add
es
shrb
jbe
loopne
test
push
pop
sbb
xor
mov
push
pop
in
push
jne
shll
xor
push
fisubl
pop
imul
std
dec
push
xor
rcll
mov
sub
pushl
std
ljmp
lret
and
jb
jle
cmp
jle
or
fisubrs
fnstsw
fbld
add
adc
sub
adc
test
lahf
pop
scas
pop
mov
pop
xchg
push
dec
push
out
dec
scas
push
cmc
sub
mov
loop
repnz
in
scas
add
out
push
scas
sub
mov
test
sbb
fcomip
mov
sbbb
je
xchg
mov
les
out
iret
and
aas
jl
pushl
loope
pop
inc
xor
sub
adc
call
mov
cmp
xor
adc
sbb
dec
sbb
push
insl
adc
or
call
pop
push
cmp
mov
add
inc
or
test
or
adc
mov
mov
lcall
sub
and
dec
sbb
add
adc
cltd
je
push
imul
in
rorl
jecxz
incb
dec
push
aaa
cmpsl
inc
scas
push
cld
cmpl
mov
and
int3
cmp
lcall
incl
in
stc
mov
jbe
mov
popf
mov
cld
jmp
sub
fst
das
pop
cmpsb
ja
popf
sti
imulb
add
push
fdivr
pushl
fnstcw
out
loopne
jge
adc
imull
mov
jbe
fisttpll
and
cmp
xlat
xor
push
dec
aaa
mov
push
and
fs
cmp
ljmp
xchg
scas
xor
imul
cmc
stos
rcrl
es
icebp
scas
rolb
xchg
push
sub
jo
loopne
repz
pop
mov
sub
ljmp
jmp
scas
cmpsl
sbb
mov
cmpsl
mov
sbb
adc
push
popa
xchg
lcall
mov
cmp
outsl
std
nop
ss
ret
pop
cmp
mov
add
ljmp
push
movsb
add
jbe
stos
lahf
jns
fsubrl
cmc
not
loopne
or
xor
daa
xor
incl
stc
xor
aad
stos
mov
sub
pop
cmp
dec
ljmp
mov
cld
mov
test
int3
lock
mov
jae
movsb
test
mov
stos
mov
add
out
mov
lcall
outsb
outsb
loop
lock
shl
movsl
jbe
push
and
orl
fwait
dec
std
incl
pop
clc
mov
cmp
mov
lods
mov
inc
test
repz
mov
outsb
sub
sahf
mov
mov
lcall
pop
lea
je
sub
ss
jno
ljmp
fcomip
pop
ss
ljmp
pop
imul
jmp
sti
popf
js
jmp
test
adc
add
ljmp
mov
int
jl
cmp
cmc
cmpsb
sbb
xlat
dec
cmp
lcall
out
pop
rorl
mov
bound
test
aas
sbb
lock
mov
lcall
mov
mov
lock
out
mov
fldl2t
push
in
lcall
cmp
mov
sti
div
fucomi
push
inc
dec
call
stos
sar
jg
aad
pop
adc
mov
jmp
mov
jno
call
mov
push
insb
push
dec
ss
mov
ret
adc
std
push
ja
and
incl
std
dec
out
aaa
enter
jmp
jmp
fcmove
or
xor
scas
mov
mulb
and
je
cwtl
xorl
jg
jmp
fiadds
mov
dec
xabort
mov
mov
pushf
in
mov
rorl
psrlw
adc
sti
ja
mov
mov
sti
jb
cwtl
cltd
fildll
adc
sti
cmp
xor
xchg
cmpsl
icebp
js
fdivrs
xchg
stos
mov
fisubs
jns
lods
rol
mov
sbb
cld
decl
cld
pop
das
cmc
push
jns
aam
mov
scas
aaa
clc
mov
mov
aad
mov
ds
bound
mov
out
test
mov
aaa
out
call
loopne
sub
imul
mov
lds
mov
std
aad
orl
push
sbb
shr
cli
test
divl
push
aas
jne
mov
scas
pushf
testb
testl
ret
out
lea
stc
mov
pop
mov
adc
push
ss
ljmp
xchg
jb
jmp
out
movsb
in
adc
inc
insl
xor
push
push
idivb
jecxz
inc
rcl
scas
jbe
cmp
dec
cs
iret
fisttpll
or
fldcw
mov
stos
mov
jp
push
cmpsb
maxps
sub
aas
enter
rcrl
call
std
lods
push
stos
jno
mov
out
outsb
arpl
adc
inc
jp
and
aad
ljmp
push
shlb
stos
mov
jb
daa
lods
jmp
push
xor
mov
push
mov
jg
enter
shll
dec
mov
push
ja
jmp
loopne
nop
jnp
mov
incl
addr16
inc
jmp
sahf
in
aam
cmp
pop
sub
lods
mov
incl
sub
mov
js
aam
pop
jo
stos
sti
fidivrl
je
push
lret
repnz
mov
lcall
shll
repnz
test
jg
cmp
lds
incl
or
cld
pop
push
fldt
or
push
mov
fcomi
ds
adc
bound
scas
test
cmp
inc
pop
mov
mov
icebp
repz
jg
dec
push
inc
lret
sbb
push
mov
mov
in
cmp
jne
mov
inc
jmp
out
mov
mov
fimull
pop
test
fmuls
mov
pop
pop
cmp
sti
icebp
inc
dec
pusha
jo
in
cmp
mov
je
in
shl
lea
test
incl
icebp
sti
push
sar
ljmp
or
add
iret
adc
sbb
adc
out
fwait
outsl
leave
inc
lcall
out
je
testb
or
fnstsw
scas
test
filds
mov
adc
adc
cmp
mov
jnp
aas
cltd
xchg
lock
incl
jae
scas
in
add
notl
in
repz
xchg
movl
out
stos
add
repnz
adc
sub
daa
sub
mov
jmp
iret
fmul
or
ret
repz
rolb
pop
incl
loopne
inc
ret
loopne
jg
mov
jmp
xor
sti
call
sub
xor
in
nop
insl
aas
adc
lock
sub
sbb
xor
daa
jp
inc
out
movl
dec
mov
jnp
add
fs
xchg
imul
mov
jae
sbb
ret
cmc
call
xchg
leave
mov
push
mov
jae
mov
mov
ret
clc
dec
fistpll
arpl
xchg
enter
call
sub
pop
adc
jecxz
gs
adc
mov
out
pop
push
mov
add
rorb
leave
push
bound
roll
adc
add
adc
mov
inc
push
repnz
xlat
les
mull
jl
fisubs
iret
imull
roll
out
add
mov
push
sub
cmp
clc
call
xor
jbe
xchg
adc
jle
pushf
out
add
mov
test
jge
add
outsl
orb
sbbb
aad
sbb
test
int3
mov
cmpsb
cs
test
dec
call
and
xorb
data16
lret
scas
mov
incb
jno
mov
hlt
mov
lds
hlt
cmp
loope
sbb
incb
or
mov
xchg
push
sti
add
mov
mov
cmpsb
add
std
dec
or
mov
jl
lock
je
pop
xchg
cmpb
arpl
int3
sti
outsl
clc
call
xor
clc
mov
mov
lds
add
shrb
rol
cmp
jg
xor
out
pop
pop
mov
mov
sub
mov
jo
out
scas
lods
jbe
add
lcall
pushf
xchg
sbb
mov
inc
jns,pn
faddl
das
mov
pop
cmpsb
mov
out
out
pushl
cmpsl
mov
orb
in
scas
mov
js
cmp
mov
test
cld
mov
call
xchg
cli
lahf
inc
fninit
dec
das
add
sub
mov
lods
cmp
cmpsl
mov
adc
clc
inc
in
cmc
out
test
ja
or
test
mov
popf
fdivl
aam
inc
dec
push
mov
mov
ret
push
stc
mov
mov
je
pushl
std
inc
movsl
int3
mov
add
pop
rcrb
xchg
pop
insb
jmp
adc
sbb
push
cli
add
call
xrelease
fwait
scas
divb
and
push
mov
movsb
mov
mov
call
nop
iret
xor
inc
mov
adc
cmp
pop
scas
aam
inc
xchg
and
mov
or
ljmp
in
inc
scas
jecxz
ffreep
mov
mov
mov
rorb
das
idivb
mov
jb
lcall
ljmp
push
insl
push
pop
dec
das
jl
adcb
dec
push
popf
sbb
or
ret
sub
dec
and
mov
mov
push
aam
jae
addr16
dec
mov
lahf
push
decl
dec
or
mov
loopne
loop
hlt
loop
cmp
scas
lods
das
dec
mov
mov
jb
mov
sti
xor
jp
mov
jle
les
add
lahf
xchg
lcall
enter
jmp
call
add
mov
scas
sahf
mov
mov
fcoms
shrl
sub
xchg
pusha
add
or
mov
out
ljmp
dec
ja
xchg
mov
or
fmull
jnp
xchg
lret
sbb
sub
pop
fwait
add
mov
testb
jg
jmp
push
mov
bound
mov
lahf
lahf
sti
jbe
or
orl
cli
fucomi
leave
mov
jns
sbb
add
push
fcomip
call
repnz
cld
mov
lods
sbb
jne
mov
add
ljmp
call
inc
fnstcw
test
call
hlt
ljmp
mov
aam
in
mov
xchg
mov
jl
inc
aas
imul
hlt
mov
lcall
mov
inc
mov
std
xchg
cmpsl
dec
imul
xchg
rorb
or
jmp
call
aas
xor
inc
fdivrl
lea
lcall
lcall
int3
mov
add
stos
pop
push
sti
repz
jg
mov
out
add
lcall
mov
cltd
pop
pop
mov
sti
xchg
in
sbb
incl
xor
int3
sbb
mov
repz
gs
lcall
leave
fstl
or
mov
push
jne
sub
call
and
dec
loop,pn
pop
fs
jnp
lret
psrad
cwtl
movb
decl
js
mov
fcoms
jg
repnz
mov
and
pushl
or
add
rcrl
cwtl
jp
cli
mov
in
hlt
dec
mov
mov
mov
sub
adc
pop
and
push
aam
and
ds
mov
fchs
or
popf
ficompl
std
lods
shll
fisubrs
mov
scas
mov
into
mov
loopne
out
jb
js
sub
in
stos
scas
add
nop
mov
dec
call
mov
movsb
ja
les
xor
fcomp
xor
sub
jmp
sub
mov
mov
xchg
sarl
sbb
mov
out
lcall
scas
clc
mov
inc
jp
push
mov
ljmp
std
xchg
jg
jmp
add
repnz
insb
adc
in
cmp
mov
or
into
sub
inc
jae
push
in
or
ss
jg
js
dec
lock
jmp
mov
lret
outsb
out
mov
decl
incb
int
ljmp
stos
and
movsb
xlat
adc
icebp
call
adc
adc
stc
jg
shrb
mov
in
xor
sub
adc
les
lahf
aas
add
mov
mov
mov
jne
je
clc
push
rcl
leave
sti
fcmovne
jecxz
in
mov
adc
aam
cmc
clc
mov
jb
cwtl
test
sub
je
dec
in
lods
call
add
test
movsl
popf
cmp
test
sti
ret
sub
add
mov
adc
mov
aas
call
cmp
jg,pt
repz
jl
lahf
and
jle
push
sar
inc
mov
insb
out
sub
inc
xlat
pop
sbbb
lock
mov
js
jg
and
sbb
nop
sbb
or
mov
movsb
jb
cltd
mov
add
sub
sbb
mov
mov
mov
xchg
jl
mov
scas
cmp
mov
dec
mov
adc
lods
pop
mov
ja
mov
leave
jecxz
add
out
je
enter
inc
mov
cmp
or
push
push
cld
decl
in
xchg
cmp
aad
jmp
idivb
call
mov
mov
push
test
and
mov
aaa
or
or
bnd
das
nop
movsl
das
or
jb
gs
mov
adc
push
ficompl
dec
push
lahf
push
test
push
lods
daa
test
jnp
outsl
rol
jle
mov
rorb
sub
fldl
mov
xchg
mov
nop
mov
movsl
sti
rcrl
cmp
pop
loop
lcall
and
cmp
pop
cmp
in
cld
fs
sub
aas
mov
sub
jp
mov
pushf
sub
data16
fldenv
ljmp
cmpsl
loope
lods
sbb
mov
addl
iret
pmuludq
xchg
jbe
push
mov
jg
lcall
sahf
scas
and
push
sbb
aad
add
inc
cmp
xchg
pop
pushl
sub
dec
cltd
lds
dec
jb
aas
in
out
in
mov
popa
pop
aad
inc
into
test
or
lcall
pop
loope
sbb
int3
ss
push
call
std
add
shll
mov
filds
pop
das
add
cltd
repz
xchg
or
push
dec
stos
decl
out
fistpll
lret
repz
pop
mov
mov
fisubs
mov
dec
xor
pushl
sbb
mov
cmpsb
adc
dec
test
xchg
mov
jmp
mov
pop
lret
addb
and
sub
dec
sbb
imul
sar
ja
sub
push
cwtl
lret
sarl
insb
mov
ljmp
lcall
ret
iret
rcl
push
adc
scas
lcall
scas
mov
fimuls
aam
push
sbb
incl
fnstsw
xchg
mov
mov
pushl
ja
or
cmp
mov
and
sub
add
negb
incl
mov
fs
sahf
mov
inc
adc
call
sub
daa
xchg
mov
repz
mov
xchg
enter
xchg
cmpl
rorl
rol
iret
stc
ret
addr16
or
ja
out
adc
adc
ljmp
sahf
jbe
jbe
sti
or
out
cwtl
aad
xchg
ss
mov
jecxz
sbb
aaa
xchg
cld
stos
test
rcll
rcrl
or
adc
es
jbe
jg
fcmovu
clc
jge
movsl
sti
mov
lcall
out
xchg
js
es
cld
std
ror
pushl
testl
cmc
nop
fwait
lods
lcall
xchg
push
hlt
fldenv
flds
inc
mov
xchg
jmp
jle
call
sbb
lds
lods
sub
lods
xchg
lahf
lea
mov
call
mov
xchg
cwtl
xchg
ljmp
lcall
mov
pop
hlt
out
xchg
lods
ljmp
clc
cmp
inc
push
orl
xchg
popf
nop
popf
add
test
std
mov
add
nop
mov
stos
mov
xchg
out
lcall
fstp
js
sub
ss
dec
and
sub
add
sar
out
xor
cmp
aas
inc
inc
imul
ljmp
pop
jg
push
xor
insb
outsb
fcom
sbb
fildll
out
iret
cld
movsb
or
sti
std
call
ss
add
or
insb
pop
shlb
dec
mov
or
fisubrs
xor
ds
sahf
dec
dec
rcpps
pop
sahf
into
mov
outsb
dec
aas
jg
js
addl
repnz
xchg
fwait
lahf
mov
mov
mov
ror
iret
rcl
add
add
jg
cld
add
aas
push
call
add
jg
dec
iret
sbb
mov
sub
lret
ficomps
add
idiv
sbb
incl
push
pop
lock
cmp
pop
sbb
loopne
xchg
sti
bswap
inc
jns
cli
dec
aas
sub
push
sti
das
add
ja
movq
adc
ja
fisttpll
stos
imull
lea
addr16
fistpl
push
lods
sbb
outsl
popa
mov
push
rorb
stos
mov
mov
mov
inc
fbld
mov
and
xorps
outsb
mov
mov
cmp
mov
cmovg
nop
outsl
or
jle
xchg
arpl
jp
add
sahf
call
add
sub
cmpsl
test
push
or
lret
add
loopne
mov
aas
out
lock
sti
ss
pop
xchg
or
dec
mov
mov
subl
push
jns
fldl
aas
pop
jg
scas
insl
insb
jb
jnp
ja
outsb
add
mov
aas
fwait
mov
insb
add
lods
mov
add
or
add
dec
lcall
ds
pop
pushf
test
adc
cmp
int
mov
outsl
sbb
decl
aas
outsl
lcall
call
test
outsl
loop
dec
pop
int3
rcr
xor
jle
add
or
movl
std
jbe
sti
push
cltd
je
xlat
int
jg
cwtl
movsb
push
or
xchg
adc
aad
pop
fdivs
add
pushl
add
add
je
repz
out
jmp
xor
das
xchg
ret
in
xchg
negl
das
xchg
addr16
incl
pop
and
cmp
aaa
repnz
cwtl
cmp
mov
inc
scas
fimuls
out
mov
std
call
lahf
jae
xchg
sti
xor
cwtl
jecxz
arpl
repnz
or
lcall
jecxz
jbe
xchg
lret
call
clc
fwait
or
scas
adc
fnstcw
fs
out
repz
icebp
out
mov
divl
push
mov
fdivs
mov
sahf
cltd
xchg
cli
adc
mov
test
mov
nop
pushl
mov
dec
push
out
mov
lods
and
stos
iret
lods
stos
mov
ljmp
xchg
xor
andl
call
xchg
fsts
dec
push
push
mov
sbbl
push
in
pop
std
lods
pop
testb
or
sysret
push
add
jp
and
sbb
sbb
sbb
pop
jns
push
adc
fsubrs
add
sub
sub
daa
es
call
cmp
cmp
pop
xor
fidivrs
xor
mov
dec
dec
dec
dec
dec
xchg
push
pop
jns
inc
inc
inc
inc
mov
pop
pop
pop
scas
addb
pop
pop
pop
sub
nop
fisttps
push
jb
out
test
cmp
jl
jg
pop
and
imulb
daa
pop
cmp
popa
cmp
mov
in
or
repz
xlat
imul
inc
dec
cmpsb
mull
cmp
adc
pushf
inc
imul
adc
mov
mov
pushl
dec
xchg
dec
push
in
jge
xor
dec
jge
icebp
mov
fstpt
decl
mov
dec
adc
mov
mov
xchg
nop
lea
std
movsb
rorl
add
roll
hlt
mov
mov
push
out
daa
pushl
jmp
push
push
icebp
iret
jl
rcll
arpl
fs
mov
pop
sub
filds
adc
in
dec
ss
aam
fists
pop
mov
sahf
in
mov
xchg
mov
outsl
mov
fidivl
ljmp
fucomip
adc
add
sub
repnz
dec
mov
nop
mov
call
dec
rcl
pop
pop
js
xchg
ss
lea
imul
inc
mov
mov
outsl
ljmp
in
jnp
xchg
mov
ljmp
or
mov
in
mov
xchg
push
loope
push
adc
dec
outsl
push
and
div
lock
scas
nop
cld
call
xchg
idivl
loopne
bound
lock
cmp
push
fwait
dec
sub
xor
je
stos
cmpsb
shl
iret
test
popf
ret
mov
lcall
mov
mov
mov
mov
ja
mov
js
mov
or
incl
push
xchg
cs
int3
lds
cli
lods
mov
lds
adc
mov
xchg
mov
jmp
imul
fists
jo
dec
cmpsl
jae
sbb
inc
adc
sbb
lcall
mov
fwait
outsl
aam
dec
clc
inc
flds
sti
jne
aam
popf
dec
lods
jge
xchg
lods
push
sbb
pop
cld
pushl
addr16
rcl
test
mov
dec
pop
shl
sti
call
pushl
std
dec
cmp
cltd
pop
mov
add
lcall
out
je
out
adc
clc
cld
shr
pop
xor
mov
mull
ljmp
adc
lret
mov
out
sbb
inc
fistl
out
xchg
out
mov
push
or
mov
stos
stos
mov
sahf
fwait
pop
cld
jne
sarb
mov
adc
testl
call
aas
lock
sub
rcr
scas
jnp
xor
test
popa
or
sbb
movsl
call
gs
cmp
bound
xchg
cs
jae
push
mov
loop
mov
test
scas
jbe
movsb
int
or
hlt
jmp
pop
lock
iret
clc
ss
div
dec
out
ret
dec
in
sbb
and
repnz
dec
call
insb
inc
fists
cmc
ds
jle
cmp
lds
movsl
mov
in
dec
push
mov
adc
cltd
or
sbbb
in
jbe
dec
pop
xor
mov
xorl
jae
movsb
cmp
icebp
rorb
ljmp
mov
dec
jg
popa
in
pop
sahf
xchg
push
cmp
pop
mov
sub
cmpsl
mov
pop
sbb
dec
dec
iret
fstps
ja
fsubrs
les
jbe
jbe
call
xor
dec
lock
in
stos
adc
sbb
aad
in
testl
out
or
testb
mov
insl
enter
mov
ljmp
mov
loop
call
mov
mov
in
mov
idiv
jbe
mov
test
dec
ljmp
pop
movsb
dec
adc
add
cmp
xor
out
aad
ja
add
sbb
or
or
mov
pop
dec
add
insl
mov
mov
or
loope
aad
bound
cld
jg
mov
and
mov
aam
xchg
inc
inc
sub
movsl
sbb
mov
gs
ljmp
fsubp
ja
imul
aaa
jp
add
sub
ja
jne
getsec
push
rorl
into
subb
xor
xchg
sahf
and
pop
subb
inc
jp
out
jnp
popl
nop
sub
decl
icebp
pop
orb
xor
fidivl
jmp
sbb
fwait
adc
jg
jne
data16
mov
sbb
std
mov
mov
add
mov
jmp
cmc
je
and
bnd
jg
cmpsl
sub
xor
and
lods
dec
jns
data16
imul
xlat
add
ljmp
clc
icebp
pusha
jge
adc
and
out
inc
jb
xor
std
pushl
or
loop
dec
leave
push
adc
es
jp
dec
stc
inc
mov
cld
call
sbb
enter
sub
sarb
dec
stos
and
sbb
call
mov
cmc
pop
popf
push
xor
lock
push
pop
lahf
mov
xor
pop
cli
ljmp
push
sbb
das
aam
loope
filds
les
insb
pushf
popf
adc
xchg
cmpsl
cli
add
je
push
aam
test
jecxz
ds
and
mov
std
adc
lods
test
rorb
std
lcall
inc
and
xchg
pop
aad
jo
mov
stc
sti
inc
je
sub
shl
cmc
repz
xchg
lret
inc
push
jmp
aam
inc
push
jne
rcrl
sub
das
jg
cmc
ljmp
xchg
lds
sub
add
orl
test
decl
and
rorl
mov
inc
cmc
jmp
into
sub
sub
mov
jg
decl
fistpl
or
mov
xor
dec
iret
sub
ja
inc
dec
add
decl
in
and
jp
jg
out
into
lods
xchg
data16
cmpsl
call
ret
pop
cli
mov
js
out
fdivl
pop
mov
mov
jbe
ljmp
test
jl
pop
call
stc
pop
push
bound
push
cmp
and
dec
in
lahf
pop
pop
sti
popf
jle
jg
cld
cltd
jle
pop
inc
lret
shr
jbe
mov
cmp
out
data16
imul
cwtl
mov
xchg
testb
xchg
fcomi
and
adc
inc
cmpsl
inc
and
mov
testl
ds
sbb
push
jne
iret
ret
push
sti
add
and
shll
ljmp
add
pushf
dec
ljmp
and
and
cmpsb
mov
xor
and
jg
hlt
sti
push
or
pop
loopne
lods
lods
cwtl
negl
test
mov
jl
sbb
mov
test
inc
imul
pop
mov
sub
cmp
add
je
rcll
jg
jg
xchg
fwait
pop
cwtl
jns
and
or
or
sub
xchg
mov
inc
pop
fdiv
or
mov
pop
or
mov
jbe
sti
mov
xchg
loope
and
pop
push
pop
xlat
sub
xor
arpl
lds
lret
xchg
lock
imul
push
outsl
stc
fwait
insl
les
outsl
daa
lret
incl
leave
dec
loop
push
into
sti
repz
mov
pop
dec
adc
xor
mov
add
jp
adc
fisttpll
sarl
gs
sbbb
adc
icebp
mov
lcall
neg
lret
sub
mov
cmp
sub
jge
in
aas
out
and
ud0
jmp
loop
push
imul
inc
push
add
call
stos
add
mov
ficoml
ret
cmpsb
cwtl
cli
add
xor
fwait
call
mov
cmp
call
xchg
mov
xchg
imul
repz
inc
cmp
xchg
push
jbe
mov
loopne
adc
fisubrs
inc
pushl
inc
jne
dec
add
jmp
lahf
jmp
iret
sbb
scas
les
mov
adc
mov
std
roll
add
movaps
lahf
sbb
call
mov
pop
or
jne
icebp
dec
xchg
cmp
xchg
push
xadd
mov
pop
sub
jns
pop
ror
nop
scas
es
lcall
mov
jb
push
fidivrl
or
lods
lahf
lahf
pusha
aad
dec
not
icebp
popa
decl
loopne
push
rclb
lea
clc
push
hlt
pushf
stos
add
in
sbbl
incl
and
mov
add
or
out
mov
gs
in
test
pushl
sub
xchg
cmp
popf
pop
fdivrs
mov
mov
jae
stc
push
mov
pop
mov
in
loopne
aas
fwait
daa
adc
pop
add
adc
out
call
jnp
out
adc
jno
jmp
jnp
mov
test
inc
aam
mov
cld
call
in
std
cld
cmp
movsl
mov
stos
sbb
sub
stos
mov
mov
cmp
add
inc
js
or
mov
sbb
adc
and
jmp
add
xchg
ja
aam
js
jge
pop
sub
out
out
fdivrl
call
xchg
mov
mov
adc
shll
push
lahf
fdivrl
in
mov
pusha
lcall
aas
inc
mov
sbb
mov
sub
pop
ret
std
mov
jge
or
nop
decl
call
and
mov
roll
inc
cmc
mov
jecxz
jae
das
sub
lcall
pushl
or
jbe
fisubl
data16
pop
ljmp
cmp
pop
and
cmc
clc
lock
roll
and
test
icebp
xor
inc
mov
stos
inc
cwtl
sbb
sbb
lods
pop
jo
add
stos
cmc
mov
icebp
aas
decl
jmp
cwtl
in
mov
int3
mov
ss
filds
jae
addr16
clc
jo
imulb
xchg
jnp
movsb
aaa
jl
fisttpl
mov
pop
stos
and
push
sbb
mov
das
add
fildll
aam
pop
clc
dec
in
in
aad
movsb
sar
lcall
test
push
loop
call
sub
femms
xchg
push
and
jg
mov
mov
jle
pop
xchg
mov
je
repz
sbb
add
cltd
mov
mov
out
dec
mov
add
mov
jmp
nop
inc
add
idivb
ret
pop
std
or
decl
jae
add
cltd
sti
pop
out
test
jmp
add
or
jbe
mov
pop
outsl
or
pop
cld
test
mov
ljmp
cli
lods
jmp
mov
in
stos
xor
mov
stos
clc
movsl
enter
push
mov
fmul
scas
inc
lock
mov
xlat
out
mov
idivl
mov
jo
into
call
loopne
or
cwtl
add
or
mov
xchg
pusha
clc
cmp
ljmp
adc
gs
repz
nop
or
loope
out
test
es
js
ficomps
pop
movsb
clc
jecxz
mov
repz
in
cmc
and
xor
sub
stc
mov
icebp
call
lods
fdivr
mov
jnp
mov
repz
mov
mov
aaa
inc
inc
sub
aad
mov
jecxz
fldl
jge
sub
out
jbe
test
jmp
imul
and
xchg
jno
pushf
and
xchg
enter
out
cmc
fnstsw
outsl
clc
ljmp
xor
loope
mov
mov
ljmp
test
pop
pop
jb
xor
pop
adcl
je
mov
ljmp
pop
call
sahf
movsl
movl
lods
or
mov
movntq
mov
mov
push
ljmp
insb
cmp
jecxz
cmp
mov
call
jg
jnp
add
sub
inc
xlat
jl
decl
ljmp
sub
dec
xchg
cltd
push
cmpsb
rcrb
aas
imul
decl
xor
pop
test
mov
out
mov
jl
sbb
push
pop
add
pop
orb
push
mov
sbb
mov
cmp
jp
bound
decl
incl
jae
ja
sbb
pop
mov
adcl
jno
push
std
xchg
jecxz
sarl
push
adc
or
ret
mov
inc
ds
test
incl
and
mov
or
frndint
frstor
sbbb
xor
sub
ljmp
rcrl
es
addr16
jle
incb
adc
bnd
movsl
cmpsb
je
pop
cltd
call
dec
fidivl
cmc
nop
icebp
in
in
rol
decl
ror
lock
mull
sbb
aas
cmp
cld
sbb
fwait
out
flds
adc
add
bound
jecxz
sub
aaa
std
incl
push
scas
or
mov
sbb
jmp
je
gs
pop
add
push
pusha
inc
sbb
fneni(8087
pushl
mov
xor
aad
icebp
push
scas
mov
repz
cmpsb
enter
and
jl
pop
jmp
cs
add
jb
dec
sti
and
cli
jg
mov
or
pushl
mov
push
in
push
cmc
stos
arpl
pop
adcb
pop
mov
cld
push
mov
aas
popa
cmp
mov
bnd
jg
lods
lock
xlat
ret
test
loop
cltd
add
in
aas
ljmp
sub
or
mov
ss
mov
adc
inc
lret
mov
and
xchg
inc
fcmovbe
mov
fisttpll
js
mov
add
movsb
xchg
jbe
hlt
push
mov
or
in
dec
ret
frstor
mov
mov
push
add
add
clc
push
mov
push
dec
sar
lcall
inc
add
test
sbb
push
dec
dec
incl
clc
sub
mov
shrl
inc
mov
addr16
mov
mov
or
push
loopne
sti
incl
mov
and
rclb
dec
push
mov
imul
not
dec
and
jl
in
jmp
scas
bound
sub
xor
xchg
mov
insb
shrl
pop
push
push
mov
out
cli
fcmovu
xor
lcall
icebp
cmp
lret
push
outsb
scas
test
fists
aam
hlt
inc
inc
out
sti
int3
xchg
movsl
aas
cmp
out
incl
push
mov
add
dec
mov
dec
jge
dec
sub
mov
divb
insb
fistps
xchg
outsb
push
push
sti
pop
shrl
int
repz
outsb
sub
in
sbb
jp
adc
push
ljmp
add
mov
into
leave
mov
into
lcall
adc
xor
and
mov
jmp
sar
xchg
inc
jae
fnstenv
or
test
sarb
pop
fisubl
cmc
arpl
ret
adc
adc
negb
divl
push
insl
scas
jbe
inc
dec
arpl
shrb
pop
cmp
mov
and
or
xor
sbb
call
loopne
mov
jnp
adc
in
and
inc
jns
push
pop
jnp
or
sar
pop
ja
sbb
or
cmp
mov
push
mov
fs
adc
mov
pushl
mov
adc
push
jmp
in
bound
sbb
shrl
jg
call
jb
mov
jnp
fcmovnu
fisubs
add
xchg
scas
sub
mov
filds
mov
cmp
inc
pop
adc
iret
in
jle
jmp
popa
repnz
cli
inc
in
add
add
fcoms
add
cli
xor
inc
mov
mov
add
add
mull
sub
leave
push
dec
push
cmp
fstpt
fs
mov
sub
loop
push
add
cmpsl
mov
mov
jne
push
sub
jmp
or
in
mov
sbb
mov
cmp
popf
xchg
lcall
js
adc
dec
neg
jne
mov
aas
mov
mov
lds
lcall
lock
or
push
jge
jns
sub
sub
test
xchg
ret
stos
mov
cli
inc
aas
sbb
aas
pop
loopne
xor
adc
mov
jbe
mov
or
sbb
push
dec
pushl
mov
sub
and
es
adc
dec
loope
push
sbb
xchg
out
and
xchg
push
mov
mov
or
or
stc
cmc
stos
jmp
stos
loop
pop
jb
hlt
scas
add
xchg
ljmp
decl
sub
cmc
mov
imul
out
push
std
pop
lret
inc
idivl
xor
aaa
cld
ja
mov
std
or
jne
aad
call
or
dec
and
in
into
fcmovnbe
mov
inc
pop
shl
aad
fnstcw
sbb
neg
ljmp
sbb
jb
mov
iret
xlat
xlat
int
pop
xor
lcall
push
jbe
dec
xchg
pop
lds
imul
sti
dec
divl
lcall
call
adc
or
lahf
cmp
add
data16
mov
mov
decl
xchg
push
or
or
mov
aas
pop
out
mov
cld
adc
jns
push
lods
lods
out
add
xor
icebp
and
and
or
mov
cli
mulb
int3
add
loopne
pop
cli
andl
mov
cmp
aas
pop
sti
jg
lock
cli
iret
iret
test
arpl
sub
outsb
or
xchg
imulb
ja
cmpsl
les
nop
pop
repz
jl
in
mov
jg
incl
pop
xor
inc
mov
mov
jle
adc
or
fcmovb
mov
adc
out
and
pop
xchg
cld
movsb
adc
rorb
aam
ret
xchg
jecxz
out
xchg
sahf
mov
or
jbe
in
inc
adc
jg
adc
jge
in
mov
in
adc
lock
shll
mov
sbb
jns
fbstp
jmp
sti
icebp
cmc
add
jmp
sti
and
lods
mov
and
mov
inc
loop
mov
and
cmc
add
cli
adc
mov
push
nop
and
jge
mov
inc
jno
out
jg
lock
mov
arpl
lock
mov
adc
push
cmpsl
xor
repnz
aaa
std
cltd
push
rcr
mov
mov
cld
dec
cmpsl
aaa
cmp
xor
jg
cmp
test
pop
in
adc
sub
xor
in
pop
or
hlt
sub
cli
pushf
div
inc
shl
adc
push
xor
test
sbb
sarl
push
add
inc
and
rorb
mov
ret
pushf
add
jns
mov
mov
mov
mov
adc
dec
aas
add
mov
mov
jbe
pop
jns
cld
popa
sti
fildl
adc
pop
iret
out
or
cmp
rcrb
repnz
fdivr
fstpt
xchg
mov
adc
mov
xor
lret
out
jnp
push
rol
sti
cmc
mov
and
xchg
call
adc
call
cmp
shll
icebp
mov
or
call
outsl
lea
cmpsl
test
xor
stos
dec
out
lock
stos
insb
mov
jecxz
addr16
test
jmp
rorl
mov
sub
push
or
dec
sarl
lock
aas
inc
sub
add
and
lret
and
shrl
ficompl
les
adc
jnp
into
and
and
idivl
ret
fs
ss
add
dec
push
int
adc
in
cli
repnz
mov
jp
scas
jbe
inc
test
sbb
into
cli
or
subb
fisttps
adc
sub
pushf
insb
insb
mov
fildll
dec
adc
mov
sbb
lcall
sub
jmp
adc
add
out
sahf
cmp
push
pop
mul
pop
cld
jmp
out
sbb
dec
aad
sub
jp
pop
mov
cmp
mov
js
pop
xor
xchg
pop
mov
pop
daa
inc
jb
cmp
pop
cld
pushl
and
sarl
add
sub
in
mov
mov
test
xorl
incl
cltd
aad
mov
mov
sysret
je
popf
in
lds
and
fildl
sub
inc
fmuls
fisubrs
test
jl
push
mov
divps
decl
in
mov
decb
jae
dec
jge
addb
mov
gs
xorb
mov
cs
cmp
and
and
cltd
sub
jg
xchg
cld
pushl
xor
mov
cmp
les
mov
call
and
mov
mov
rorl
loopne
iret
xor
shlb
lcall
jecxz
stos
cld
or
daa
and
cld
pop
cmp
jle
push
outsb
clc
stc
movsl
or
test
ss
lock
inc
mov
cmpsb
mov
cmp
pushf
sub
out
fstp
into
sbb
push
cmp
mov
jp
cmp
scas
nop
or
dec
sbb
pop
or
insb
sbbb
std
mov
lcall
mov
pop
mov
inc
jle
dec
in
mov
repz
pop
das
xor
clc
flds
decl
sbb
punpcklwd
outsb
pop
cltd
fs
hlt
push
mov
nop
jp
dec
jmp
xchg
mov
test
lods
xlat
add
and
cli
cmpsb
mov
jmp
pop
cmp
mov
shll
mov
dec
je
fldcw
adc
iret
addl
aaa
subl
arpl
icebp
hlt
in
in
mov
mov
cwtl
inc
or
in
or
jmp
mov
sti
push
push
mov
incl
pushf
dec
arpl
cli
mov
sarb
inc
nop
aas
push
xchg
incl
insl
mov
paddusw
popf
jae
fcomi
xlat
cmp
xchg
jp
dec
ret
jae
mov
ljmp
mov
jmp
out
out
ret
imul
push
mov
stos
push
out
pushf
pop
in
fdivp
in
scas
fdivrl
adc
in
mov
fwait
repnz
in
lock
ljmp
stc
aas
xor
mov
mov
fwait
or
addr16
xor
push
mov
decl
sub
or
out
popa
inc
cmpsb
shrb
add
sti
sbbl
pop
xchg
decl
call
pop
pop
jo
inc
push
icebp
jmp
shl
lret
fcoms
or
ljmp
out
jg
std
test
xchg
jnp
mov
aas
out
mov
dec
fcos
cmp
decl
repz
dec
repz
imul
jb
or
addb
lahf
test
jg
lcall
out
mov
mov
test
inc
addl
fldt
adc
push
cs
pop
scas
and
pop
out
jb
or
fcompl
sbb
daa
push
jecxz
clc
and
repnz
adc
lahf
and
stc
cmpsl
inc
adcl
jg
lods
imul
pop
pushf
or
jecxz
sub
nop
mov
mov
mov
pushl
stos
inc
repz
jle
mov
and
rcll
andb
jg
decl
dec
cld
sub
in
and
pop
jl
xchg
aaa
ss
lcall
insb
or
cmp
cmp
inc
mov
cld
cmp
clc
insl
pop
sahf
andb
popf
sbb
in
in
cmp
das
scas
push
enter
or
aaa
xchg
into
pop
addr16
out
adc
int3
mov
or
jne
mov
sub
xor
sbb
xchg
das
clc
inc
push
stc
mov
push
cld
or
adc
js
mov
fcmovne
adc
arpl
mov
mov
iret
mov
mov
pop
xchg
dec
outsl
cmp
sarl
fwait
lcall
xor
out
adc
in
add
mov
add
call
insb
roll
or
push
mov
lret
xchg
inc
sti
fisttpll
outsl
subb
lahf
sub
sbb
decl
lret
jns
ret
pop
or
pusha
je
jmp
mov
decl
repnz
cmp
movsl
lock
jecxz
stc
push
pop
and
mov
loop
aaa
incl
jmp
mov
mov
daa
sbbb
fnstenv
imul
pushl
dec
lock
adc
dec
test
jp
pop
test
stc
inc
cmp
lock
stos
loope
je
std
stc
jns
clc
testb
adc
jne
enter
ljmp
push
push
or
dec
dec
adc
lret
pusha
sbb
dec
mov
or
ja
and
cltd
test
incl
sub
daa
adc
repz
scas
cmpsl
fmull
inc
es
dec
sti
lock
pusha
clc
inc
ss
push
mov
bound
mov
out
daa
cmpsl
popa
add
aam
or
dec
dec
daa
xchg
in
or
inc
xor
adc
out
jle
rolb
mov
push
bound
test
das
push
repz
lahf
inc
pop
mov
mov
xchg
lcall
xchg
and
adcb
adc
ror
clc
fs
inc
or
lds
push
popf
pop
mov
fistpl
sahf
ss
incl
jnp
clc
mov
cmpsb
rcrl
add
jg
int
das
fbstp
inc
jl
out
das
mov
mov
call
cmc
jp
mov
cld
call
lea
in
icebp
adc
repz
mov
nop
pop
nop
idiv
mov
inc
lret
ja
adc
mov
inc
decl
inc
mov
mov
lret
dec
enter
sub
or
ja
cmp
testl
int
mov
not
add
je
jo
int
leave
mov
loop
lcall
cmc
divl
sti
cmc
adc
les
sbb
cmc
push
int3
test
mov
and
mov
inc
dec
sbb
filds
jmp
insb
mov
rcrl
lods
pop
xchg
sbb
les
repz
aaa
push
inc
fidivrs
sbb
push
loopne
sub
sbb
std
std
clc
inc
jne
dec
orb
inc
call
arpl
into
push
lcall
cmpsl
mov
test
std
sub
aam
clc
pusha
and
xchg
test
sbb
dec
loop
ljmp
ljmp
adc
pop
jecxz
cld
and
xchg
jg
jb
xchg
call
mov
mov
inc
test
es
dec
das
mov
pop
std
cmp
cmp
divb
mov
dec
inc
bound
dec
lods
xchg
and
adc
out
xlat
and
cmc
jns
out
mov
out
sbb
lret
or
incb
jge
mov
gs
mov
out
mov
ljmp
mov
mov
fstps
or
repz
lcall
cmp
add
jmp
add
stos
inc
inc
sbb
push
cli
pop
pop
inc
imul
mov
mov
inc
rclb
cmpsb
mov
pushf
sub
push
mov
jnp
pop
popf
outsb
sar
adc
sbb
les
pusha
ljmp
clc
adc
jno
loop
or
or
rclb
shr
out
ds
stos
mov
in
or
aas
leave
out
mov
jmp
stos
loopne
insb
add
test
xchg
cli
ds
cmp
std
shr
mov
pop
xchg
xchg
insb
lea
and
icebp
push
fwait
jnp
sar
add
ja
xlat
jbe
mov
jbe
jmp
neg
cmp
inc
sahf
stos
mov
jg
push
sub
push
and
std
out
cmpsb
out
clc
incl
aam
xor
out
outsl
cmpsl
cmp
jp
in
and
aad
jecxz
xor
cmp
cmpsl
pushf
mov
jle
jmp
jge
xor
clc
sbb
clc
enter
lcall
popf
add
push
fcomip
sbb
sarb
mov
mov
pop
call
repz
out
dec
std
adc
cmp
dec
dec
popf
mov
fldenv
xorl
jp
sbb
mov
adc
rclb
ja
cld
andb
je
cld
xor
call
cmp
xchg
fiaddl
mov
cltd
pop
subb
lods
xchg
inc
pop
stos
jmp
adc
jae
enter
dec
decl
stos
cmpsl
incl
mov
cmpsl
scas
out
outsl
mov
js
jl
shr
mov
jl
pushf
sub
fcmovnbe
out
mov
add
aam
cld
aaa
aad
push
xchg
aas
fwait
cld
jbe
fildll
mov
aaa
in
testb
stc
repnz
jg
mov
xchg
mov
lcall
cmc
mov
sti
and
cmp
inc
cmp
jecxz
mov
pop
push
call
push
lock
jae
jge
cmp
ja
fidivrl
mov
mov
lret
mov
incl
cli
insb
push
test
je
mov
jecxz
aas
test
pop
jp
fcomip
jmp
push
emms
jno
addb
inc
daa
add
shll
xor
jmp
adc
push
push
sti
into
dec
test
pop
into
imul
adc
or
fidivrs
inc
movsb
jne
js
push
pop
jle,pt
cvttps2pi
or
inc
lea
cmp
cmp
fcoms
adc
and
icebp
dec
jl
fwait
icebp
je
leave
enter
mov
xor
insl
aaa
adcl
jmp
test
gs
jg
mov
xchg
inc
and
aaa
mov
pushl
push
cmp
cmpsb
cltd
and
cmc
ret
mov
jg
jo
fistps
cmc
decl
fdivl
insb
jno
decb
hlt
or
scas
lahf
cmc
rorl
jecxz
lcall
scas
sbb
inc
into
sbb
pop
fs
jne
fcompl
push
sbb
lcall
mov
dec
lcall
mov
stos
jmp
fsubs
dec
mov
test
es
and
sbb
sub
dec
call
fbld
psubw
mov
sti
xchg
fstpl
cltd
popf
out
ljmp
lcall
js
idivl
mov
add
cltd
hlt
pushl
pusha
jmp
in
fildl
cmp
mov
aad
jg
mov
jg
push
cld
cld
jnp
dec
inc
js
xchg
sub
push
add
scas
mov
mov
fcoml
add
jmp
jecxz
ljmp
incl
jl
cld
cmpsb
aaa
cld
out
sub
dec
int
jo
xor
in
sti
into
xchg
adc
incl
lods
int3
add
xlat
sbb
pop
mov
inc
mov
push
jecxz
adc
test
jmp
scas
sar
jg
push
out
icebp
repz
adc
pop
xor
rclb
dec
pusha
dec
call
pusha
xchg
outsb
push
ljmp
push
pop
fists
insl
cmp
cmc
lcall
cwtl
out
iret
mov
dec
sbb
pop
lret
dec
decb
cmp
int3
push
xor
loop
jbe
out
sbb
fsts
cmp
repnz
dec
sub
adc
fsubs
sub
sti
aas
cmp
mov
loop
push
mov
loopne
adc
out
out
out
ja
clc
push
notb
mov
clc
cwtl
adc
stos
mov
jmp
pop
int
adc
push
icebp
jne
mov
jg
and
or
bound
repz
movsb
fdivr
pop
hlt
incl
pop
and
jb
and
xchg
insl
jb
in
test
dec
scas
cmp
cmpb
mov
into
scas
and
insl
push
scas
dec
sbb
scas
jge
or
lcall
imul
jmp
ss
ljmp
arpl
jl
cmpsb
inc
mov
mov
je
mov
lahf
push
fdivs
fucomip
cmp
add
adc
test
sub
sbb
stos
xchg
hlt
sbb
dec
cli
incl
arpl
adc
outsb
aad
add
nopl
sti
mov
lock
mov
mov
add
decl
mov
sti
lret
mov
xchg
enter
adc
add
aas
into
push
insl
sbb
jle
loope
mov
adc
sbb
testl
rcrb
mov
jno
and
cmp
loopne
adc
dec
imul
call
in
fxtract
stc
jg
push
es
frstor
es
fildll
cmp
dec
shlb
lods
stos
call
and
jbe
loop
out
int3
mov
and
jg
adc
jl
shlb
and
adc
cmp
cmp
lock
leave
call
incl
daa
mov
jl
ret
xchg
sti
test
xor
setne
and
pop
std
sbb
call
out
movsl
cmp
add
mov
xchg
cld
scas
sarl
incl
inc
mov
mov
outsl
in
mov
ss
std
inc
sbb
mov
ret
shlb
mulb
cmp
pop
arpl
call
repz
cmp
pop
mov
adc
jne
sarl
mov
iret
sub
jge
popf
stc
jno
push
push
das
incb
sbb
mov
mov
cltd
fisubrs
rorb
aaa
iret
stos
inc
fbld
inc
add
rsqrtps
cld
mov
out
mov
push
pop
adc
and
iret
cld
adc
inc
mov
lock
mov
jl
insb
push
or
adc
scas
inc
sahf
fs
iret
iret
aaa
and
push
cmpsb
mov
icebp
lret
xchg
outsb
nop
sti
adc
in
mov
addr16
iret
insl
adc
inc
outsl
cmc
mov
out
out
dec
divl
mov
jg
dec
xchg
in
rcr
fstp
popa
jae
sar
mov
cmp
lahf
cmp
xor
incl
testl
sbb
out
daa
and
out
mov
clc
adc
push
jp
out
push
sbb
cmp
clc
lretw
xchg
adc
lods
notl
not
dec
lcall
dec
mov
sub
mov
in
mov
je
inc
out
mov
stos
jle
cld
call
addr16
pop
sbb
in
sbb
hlt
mov
jb
dec
add
loop
in
cmp
std
pushl
cmp
das
adcb
ret
jecxz
icebp
loope
mov
jl
orl
rcr
xchg
add
jp
cwtl
cmp
cmp
jl
sbb
push
dec
movsl
or
dec
rcll
aad
mov
add
mov
jmp
cmp
push
pop
cmp
lret
imul
sti
adc
repnz
outsb
add
out
aam
incl
testb
jnp
aaa
or
jo
icebp
push
mov
incb
and
call
mov
enter
scas
fstpt
or
or
cmp
pusha
push
add
scas
adc
ljmp
orb
xchg
pop
mull
mov
xchg
out
cmp
inc
gs
push
mov
test
lret
cwtl
push
aad
cmp
jb
jge
mov
push
add
push
std
pushl
cltd
aad
adc
jg
rcrb
insl
decb
pop
sbb
mov
icebp
cmp
iret
bound
imul
ljmp
jge
test
aam
stos
sub
add
aaa
mov
push
and
and
lods
xor
lcall
jne
popf
mov
cmp
mov
xchg
xchg
xchg
stc
jae
lock
jnp
cld
incl
lahf
mov
in
imulb
stos
pop
notl
push
mov
pop
test
xor
or
mov
inc
out
jl
idiv
mov
and
ljmp
jnp
stc
fs
sbb
pop
ljmp
cmp
stos
in
lahf
mov
repnz
inc
ret
jbe
xrelease
ret
rol
mov
stos
ud0
jmp
lods
pop
das
add
jnp
stc
out
mov
adc
mov
push
sub
fs
icebp
call
arpl
or
sahf
scas
xlat
push
fdivp
aaa
icebp
xchg
adc
hlt
lea
or
add
idivb
call
cltd
rcrb
fldl
xacquire
xor
jg
lock
push
repnz
dec
jb
jge
clc
incl
xlat
dec
or
repz
orb
sbb
cmp
jmp
in
jg
xchg
scas
inc
stos
mov
or
sahf
fisttps
out
outsl
aaa
cld
mov
pop
inc
in
inc
sub
sbb
or
xchg
cmp
popf
gs
scas
inc
fwait
push
cltd
nop
cld
stc
outsl
xor
xchg
xor
jb
je
lcall
ljmp
ret
mov
repnz
int3
mov
adc
mov
fucomi
sti
decl
lock
rcr
loop
sub
adc
dec
cld
cmp
sti
sti
cli
stc
clc
imull
decl
xchg
ret
ds
inc
push
cli
pop
ja
scas
je
cmp
lcall
aaa
cld
divb
out
cmc
push
lahf
imul
xchg
out
sub
clc
sub
test
cmc
push
outsl
fldenv
jnp
adc
mov
call
adc
jg
pop
mov
dec
sbb
mov
and
or
inc
push
xorb
inc
lock
jb
ljmp
jmp
jbe
incl
cmp
sbb
xor
cs
loopne
pop
dec
xor
repz
sbb
xor
cmp
jae
cmc
call
jle
inc
push
sarb
jo
add
into
outsl
subb
inc
arpl
ljmp
int
pop
outsl
fucom
jae
inc
add
jo
dec
cmp
and
push
fstp
and
jns
outsl
shrl
mov
stos
sbb
mov
das
jl
add
clc
push
adc
icebp
cmc
mov
and
repnz
cmp
lea
decl
pop
pop
dec
iret
sbb
fimuls
popa
sbb
lods
push
and
push
jmp
pushl
push
and
out
insb
jecxz
outsb
pop
fsubr
or
fcomps
push
call
inc
imul
rcrb
aad
aad
xchg
aas
jmp
inc
jo
sub
decl
scas
daa
xor
das
mov
or
sti
inc
lds
movq
mov
ljmp
jg
sub
pop
lock
rol
js
out
ljmp
mov
arpl
cmpsb
adc
mov
enter
clc
nop
pmaxsw
mov
out
aaa
xor
ljmp
push
inc
jg
lcall
cmp
pop
adc
pop
push
pop
adc
loope
xchg
outsl
insl
sti
fdivr
mov
stc
stos
lcall
add
or
and
loope
inc
push
negl
jmp
out
sub
inc
and
cli
testl
mov
ljmp
mov
dec
push
call
or
jnp
sub
pushl
bound
cmp
or
mov
leave
icebp
fcoms
mov
add
cld
jns
outsb
mov
shll
loopne
jmp
inc
sub
xor
mov
lcall
aad
cli
lcall
out
daa
mov
lcall
dec
decl
add
das
fisttpl
jne
stc
jmp
mov
repz
je
xchg
test
pushl
aad
aas
fsubrl
in
jne
iret
jle
shl
repnz
out
jnp
jnp
fisttpl
xchg
es
jg
pushl
dec
cld
clc
add
dec
sti
insb
std
je
aas
mov
js
mov
mov
inc
xchg
jo
in
adc
cmp
ss
clc
bound
xchg
movsl
mov
cmp
sub
test
add
loop
mov
mov
in
mov
mov
jb
test
dec
adc
lahf
push
int3
out
cmpsl
outsb
cmc
loope
repnz
jge
mov
mov
ret
jnp
pop
mov
in
mov
dec
call
call
cmp
fadd
mov
sub
decl
loop
mov
push
jae
in
jbe
in
jecxz
xchg
rcrb
inc
inc
sub
daa
mov
sub
pop
loope
icebp
inc
push
mov
in
lds
ljmp
jmp
testl
cmpsl
out
jle
mov
dec
mov
stc
call
sub
xor
lock
std
inc
dec
lock
mov
int3
in
and
call
notl
scas
push
mov
call
stos
sbb
mov
mov
sti
jl
jg
data16
iret
clc
xor
lcall
cmp
lahf
daa
add
xchg
cmc
out
fildl
jecxz
mov
daa
repnz
decl
cwtl
fidivrs
cmpsl
pop
xor
add
sbb
jmp
inc
jecxz
cwtl
fwait
or
mov
jnp
ds
incl
jmp
jo
mov
or
jb
cmp
lret
jmp
movsl
loopne
sbb
adc
in
pop
int
mov
mov
push
enter
jne
fnsave
filds
js
cmp
faddl
xorb
mov
pop
add
jl
xrelease
dec
jl
movsl
decl
pop
iret
int
adc
pop
push
cmp
outsb
sti
xor
lock
lock
cmp
mov
incl
pop
lcall
sbb
inc
pop
jae
xchg
filds
sar
loop
xor
mov
or
icebp
pop
jge
nop
mov
mov
mov
inc
fdivs
sub
ljmp
cld
xchg
out
std
clc
in
add
loope
and
movsb
pusha
lock
push
mov
jecxz
aaa
fiaddl
lcall
sahf
pop
frstor
mov
imul
daa
xchg
and
mov
mov
movl
dec
lcall
xor
enter
enter
in
ja
add
outsb
push
mov
cli
or
cld
das
and
fcoml
and
in
mov
cmp
jo
pushf
cmp
or
jns
loopne
cmp
xlat
push
pop
incl
dec
in
mov
xor
and
test
mov
in
in
cltd
pop
jl
jg
decl
jbe
sahf
daa
pop
ret
aaa
gs
clc
jae
das
inc
inc
iret
inc
testl
out
enter
push
push
xor
decl
or
sbb
push
mov
jecxz
inc
mov
cmp
mov
call
decl
xlat
pop
lock
ja
and
mov
jb
cwtl
and
loopne
push
ja
std
mov
or
pushf
lret
enter
daa
std
insl
clc
pop
jo
xchg
adc
std
inc
call
incl
mov
imul
roll
sti
inc
push
mov
adc
xchg
mov
xchg
lcall
pushl
aas
pop
xchg
aad
imul
mov
mov
out
clc
decl
mov
lods
jg
and
jo
mov
pushl
push
dec
pop
stc
pop
shll
jle
pop
jmp
ret
jg
stos
cmova
adc
add
incl
cld
xchg
xlat
enter
insb
or
cmp
idiv
pop
dec
roll
push
out
in
add
push
jae
rolb
je
sbb
sbb
sbb
stos
gs
fidivl
and
sti
pop
data16
loope
dec
scas
sbb
flds
inc
outsl
sub
rcll
idiv
daa
inc
imul
insl
jl
dec
out
inc
sbb
repz
das
inc
arpl
mov
jg
jg
inc
jg
pop
iret
inc
aas
jbe
xor
mov
sbb
aaa
repnz
clc
sbb
mov
fistpl
mov
pop
jp
cmpl
sbb
das
test
xor
stc
out
xchg
inc
stos
pop
inc
sbb
sub
fwait
mov
adc
ja
loope
xorb
rsm
jecxz
shll
mov
jg
pxor
rep
std
loop
rcrb
sbb
and
sub
inc
mov
aas
fwait
rol
push
xchg
fistps
aam
push
cmp
mov
jg
jecxz
mov
loopne
stos
mov
lds
mov
loopne
mov
faddl
decl
daa
cld
decb
mov
sti
shll
cld
push
push
or
lret
dec
adcl
testb
in
in
adc
jl
mov
dec
shl
js
jge,pn
inc
mov
cmp
xchg
addb
scas
je
cmc
mov
sub
lods
xchg
dec
repnz
out
cli
mov
inc
jo
inc
sub
cld
sub
dec
jl
xchg
movsb
mov
push
fcom
mov
jmp
in
int
lahf
in
push
mov
sahf
mov
mov
test
pop
mov
or
faddl
les
cmp
mov
add
dec
xor
add
scas
cli
decl
cmp
cmp
jno
cmpsl
jle
lret
jmp
and
ljmp
mov
fidivrl
test
cmpsl
push
inc
mov
cs
js
dec
adc
pop
movsb
jnp
in
je
xlat
ds
mov
mov
mov
cmp
mull
aaa
pop
dec
mov
cld
ret
mov
mov
cmpl
incl
ret
lret
pop
push
loope
movsl
xchg
pop
mov
push
pop
cmpsl
pop
adc
pop
icebp
ljmp
dec
mov
movsb
daa
aas
mov
mov
imul
push
aam
call
mov
enter
add
cmp
inc
pushl
push
call
mov
jge
xlat
xchg
js
inc
dec
mov
out
in
arpl
pushl
jnp
pusha
xchg
xchg
sarb
popf
setbe
adc
outsb
shlb
in
push
xchg
decb
inc
mov
int3
movsl
jmp
fcomip
cmp
pop
mov
jae
mov
fsubp
add
jg
cld
popa
fildl
in
sbb
xchg
rorl
adc
dec
flds
idivb
mov
push
adc
mov
sub
les
mov
repz
mov
incl
sbbl
jbe
cmp
pop
or
jmp
xchg
add
in
ljmp
je
dec
out
adc
test
stos
mov
xchg
idiv
jp
lret
xchg
dec
fwait
orl
stos
dec
out
repz
jae
cmp
cmp
or
popl
icebp
movsl
sahf
sub
cmp
in
pop
add
pop
lahf
mov
jmp
jecxz
inc
pop
push
fwait
dec
jecxz
mov
dec
add
les
aad
jns
cmpsl
stos
mov
ss
dec
sbb
adc
shrl
jmp
xchg
lcall
cmp
mov
shr
and
scas
out
cmp
cmp
adc
jmp
int3
adc
pop
decl
pop
les
scas
bound
sub
cld
pop
push
repnz
pslld
cmp
mov
lock
ljmp
inc
xchg
pop
out
stos
cmp
out
movsb
cmpsl
bound
clc
adc
jp
int
dec
int3
ret
loope
in
out
pop
pop
ja
shlb
xlat
js
jge
mov
sbb
dec
add
icebp
pushl
ret
mov
arpl
cli
cwtl
scas
fcoms
jl
jecxz
aas
fs
daa
cmc
cmp
cld
cmp
addr16
mov
dec
lods
loop
bound
js
jae
pop
cli
mov
sti
inc
faddp
mov
adcl
xchg
fnstsw
rclb
push
incl
aad
shll
mov
lods
adc
cs
mov
es
data16
push
sub
jle
pop
out
ds
out
jp
cmp
test
sarl
jmp
cmp
cmp
push
lds
hlt
fildl
rorb
insl
lock
out
out
mov
test
aas
push
sbb
in
xchg
ds
jmp
cmpsl
out
test
xchg
jecxz
sub
decl
adc
in
loopne
mov
xchg
pushf
scas
daa
mov
andl
pop
lahf
les
mov
lcall
enter
add
inc
cmp
pushf
fwait
test
push
adc
and
out
mov
int3
push
cs
iret
push
mov
clc
jno
icebp
mov
ss
sub
cmp
jecxz
cmp
adc
lcall
repz
and
sub
inc
sti
mov
inc
add
ret
xchg
lea
mov
mov
loope
sbb
jecxz
loope
sub
xor
xor
xor
clc
mov
mov
dec
ds
sbb
push
inc
adc
mov
inc
popa
imul
loope
pop
popa
fwait
insb
icebp
sub
decl
and
inc
jns
scas
dec
stos
xor
jp
xchg
dec
test
cmp
ficompl
dec
ret
and
int3
or
mov
les
mov
cmp
std
fbld
xlat
jmp
fisttps
mov
sub
bound
sbb
decl
lock
adc
pop
push
jmp
or
and
decl
and
mov
jg
jmp
cmpsb
lods
or
mov
mov
rorl
pop
mov
sbb
pushl
jmp
jns
cs
insl
inc
daa
call
ret
fsubl
das
jno
inc
xor
jecxz
lcall
sub
mov
mov
jmp
adc
mov
dec
cmpsl
dec
jo
jae
divb
inc
gs
xor
cs
int
imul
jbe
pop
stos
sub
outsl
jg
sub
cmp
out
mov
sahf
sub
jnp
sbb
sbb
aaa
lcall
pushl
std
dec
cmp
sbb
sbb
ss
int3
bound
adc
pushl
rep
cmp
cld
aaa
jmp
repz
mov
jg
jecxz
mov
outsl
mov
mov
outsl
fdivrl
jnp
pop
pop
mov
mov
sub
mov
int3
outsb
adc
rolb
rol
mov
mov
xlat
inc
daa
cmp
in
outsb
insb
popf
data16
pushf
and
mov
jg
inc
inc
xchg
xor
idivl
lret
lcall
outsb
clc
mov
sar
leave
test
das
add
js
jle
fwait
outsb
nop
mov
sub
clc
inc
fdivrp
mov
fiaddl
incl
rorb
cmp
and
das
mov
inc
call
shl
mov
xor
adc
adc
repz
adc
or
je
jmp
mov
mov
pop
popf
jecxz
out
inc
add
add
fistpll
and
shll
int
jecxz
data16
test
arpl
ljmp
test
fistpll
lds
push
gs
jp
test
movzwl
decl
imul
enter
pop
jb
add
cmp
ss
jg
add
or
aas
mov
call
xor
mov
cmp
ds
not
push
out
lret
sub
mov
fs
jmp
xchg
jecxz
hlt
mov
push
lcall
jg
jmp
aaa
sti
or
jmp
fstl
out
cld
xlat
jnp
testl
outsl
sbb
mov
jmp
call
and
push
pop
std
cmp
push
fdivrl
pushl
out
data16
add
xchg
daa
lret
setle
incl
ljmp
and
inc
jg
xchg
cld
sbbl
addr16
outsb
mov
push
arpl
jg
fwait
insl
xor
or
inc
or
mov
shrb
xor
fcos
out
int
cmp
aaa
and
xor
insl
push
adc
out
fwait
inc
push
pop
subl
insl
ret
jmp
or
sbb
ss
adc
sbb
lret
push
cmc
sti
jg
int
xor
shll
push
xor
fwait
or
fwait
fisttps
nop
mov
xor
outsb
inc
or
jne
xchg
decl
fdivs
nop
mov
out
ror
mov
add
scas
cli
pushl
fwait
inc
cwtl
mov
in
cmpsl
nop
lea
sbb
mov
lea
loopne
cwtl
mov
jnp
cld
fdivl
sarb
mov
xchg
dec
fnstenv
mov
loopne
loopne
ds
add
add
or
incl
fimuls
lret
push
enter
repnz
mov
rclb
enter
cld
jg
dec
and
mov
in
xchg
jge
fcos
decl
cmp
shl
icebp
dec
xchg
and
lahf
or
or
add
sti
out
add
sub
outsb
push
call
add
jnp
inc
pushl
clc
xchg
jl
adc
push
adc
mov
icebp
mov
fbld
fildll
lahf
cwtl
jmp
mov
lcall
add
dec
sar
mov
pop
ja
mov
pop
xor
outsl
xchg
lock
cld
decl
fsubs
push
pop
insl
je
cmp
ss
cld
add
pop
data16
testb
cmp
jns
mov
cmp
sti
mov
fwait
and
filds
sarl
or
add
xchg
pushf
test
mov
mov
cmp
fidivs
out
int
lret
nop
test
jg
jl
sub
xor
lcall
mov
cld
ljmp
lock
int
icebp
cmp
pop
out
cmp
call
jg
sub
jo
pop
sbb
scas
das
sbb
or
pop
mov
jp
jg
push
cmp
fstps
mov
cmp
xchg
test
push
jbe
fmull
jo
jae
std
mov
mov
lcall
decb
sti
inc
out
es
mov
xchg
xor
xchg
popf
add
call
pushl
pop
sbb
sbb
cld
mov
cs
mov
out
cld
enter
lcall
arpl
outsl
pop
fstps
dec
sbb
sbb
nop
pop
inc
mov
jmp
shr
ljmp
std
js
and
cmp
pop
mov
jl
mov
add
stos
stos
fistps
icebp
aam
repz
adc
dec
add
aaa
sahf
pop
mov
adc
fnstsw
mov
sti
mov
mov
fidivrl
cmc
add
stc
cmc
mul
loope
and
add
add
jnp
insl
sbb
aaa
push
rsm
rolb
pop
ret
mov
pushf
loop
hlt
sub
fwait
pusha
test
clc
insb
adc
cmp
sbb
lahf
shl
dec
push
fadds
into
add
mov
sysret
pop
roll
aaa
and
xor
outsl
cli
incl
mov
daa
add
sub
pop
cmpsl
inc
aaa
push
sbb
call
inc
adc
xchg
push
jne
test
xor
mov
jle
mov
cld
jmp
adc
fbstp
dec
mov
sub
push
jmp
es
xor
jbe
das
repz
cmp
inc
daa
and
es
lods
ljmp
std
ds
icebp
ja
ja
daa
loope
in
out
sub
aad
mov
call
push
jne
pop
je
pop
ret
inc
jle
popa
adc
mov
icebp
mov
dec
cmp
mov
pushl
repz
test
sub
in
je
or
jecxz
cli
out
aaa
inc
or
push
push
jo
std
ljmp
scas
push
jge
or
jp
adc
mov
out
cli
icebp
shrl
xor
ljmp
ja
sub
out
mov
or
pushf
push
decl
std
movsb
pusha
pop
scas
aaa
push
cmp
ds
cld
jmp
std
repz
jl
lock
jmp
mov
jle
ljmp
aas
mov
jns
or
dec
hlt
std
jg
mov
loopne
adc
movsb
out
dec
jp
xchg
call
cmc
lcall
dec
dec
ret
das
jae
xchg
in
lods
fmulp
pop
insl
sub
das
jmp
pop
add
mov
hlt
or
clc
ja
xor
xorb
aaa
std
rclb
or
lock
scas
adc
mov
mov
adc
decl
fcoml
fbstp
dec
rorl
bound
shlb
xchg
mov
stc
push
pushl
dec
cltd
mov
mov
mov
sbb
and
decl
enter
std
adc
sbb
fsubrs
mov
rol
mov
jae
mov
mov
cmp
divb
lods
mov
inc
mov
pop
or
sbb
jp
ljmp
push
lret
ret
adc
roll
fiadds
aas
decl
int
mov
lcall
lods
rclb
insb
pop
cmpb
sub
call
mov
dec
adc
aad
cmc
imul
lds
mov
scas
test
fidivrl
lods
push
stc
mov
je
mov
testb
fistl
data16
adc
out
lret
mov
stc
lret
dec
rorb
scas
mov
stos
or
add
jae
imul
mov
add
cld
ja
cmp
mov
je
cli
adc
out
cmp
ljmp
sbb
ss
pop
call
pop
and
insl
dec
shld
inc
sar
cli
mov
jp
push
dec
pop
clc
stc
mov
mov
shr
jge
or
fucomip
inc
lods
sbb
rol
lahf
add
fcompl
mov
hlt
mov
test
lock
jmp
mov
outsl
mov
hlt
mov
jle
call
nop
outsl
out
aaa
sub
cld
out
and
loope
cmp
pop
xor
incl
call
dec
adc
cmp
lds
jle
push
jge
mov
mov
cmp
inc
out
mov
pusha
xchg
or
adc
sbb
sbb
mov
xor
sbb
xlat
mov
movsl
mov
sub
ljmp
fsts
lret
and
pop
sbb
mov
repz
jp
xchg
repz
decl
or
mov
push
stc
mov
adc
jmp
neg
adc
stc
sub
mov
mov
pushl
cmp
stos
inc
push
aas
clc
mov
mov
and
mov
movsb
xlat
test
dec
inc
adc
decl
sbb
out
mov
inc
dec
shll
outsl
jmp
neg
inc
scas
mov
repnz
popa
push
jg
roll
mov
mov
pop
dec
pop
adc
movsl
pop
aad
out
cmp
xchg
mov
decl
mov
test
jmp
pop
push
add
jne
bound
mov
mov
int3
inc
lahf
repnz
xorl
arpl
dec
mov
call
ss
sti
je
sahf
jecxz
flds
sqrtps
icebp
enter
fwait
jle
out
pushf
mov
dec
enter
cwtl
ja
push
das
les
mov
mov
cltd
ret
out
inc
fdivs
aaa
inc
loope
mov
inc
je
pop
das
mov
push
js
dec
repnz
imul
and
jno
hlt
stc
mov
movsl
pushl
or
lcall
outsl
div
sbb
loop
mov
test
cs
pushl
or
push
std
mov
sub
lock
ljmp
scas
enter
int3
push
or
pcmpeqb
clc
addb
add
push
lock
mov
xor
enter
jmp
xchg
int3
pop
sub
xchg
and
cwtl
outsl
insb
repz
aas
cli
pop
inc
sahf
pop
pop
xchg
ljmp
icebp
push
ret
outsl
and
adc
fcomip
mov
xchg
inc
xor
mov
xor
out
clc
add
add
test
ljmp
ja
adc
mov
dec
sbb
out
cmp
jno
loope
pushf
add
call
mov
cwtl
repnz
or
dec
push
push
push
mov
inc
sub
pop
xlat
inc
adc
in
nop
ret
and
and
cmc
icebp
int
dec
in
and
inc
pushl
out
xor
out
lds
sub
loop
sbbb
imulb
cwtl
lcall
mov
outsb
mov
adc
pop
out
mov
test
jg
fcomps
push
and
cmpsl
fistps
and
mov
push
icebp
adc
in
push
ja
or
mov
lock
shrb
cmc
movsl
lods
in
pop
adc
adc
icebp
stc
jp
xor
stos
hlt
jae
nop
cltd
jecxz
cmp
fcomip
or
iret
cmp
cmc
jbe
mov
jnp
adc
mov
pushl
mov
lcall
icebp
loope
stc
adc
shlb
out
add
mov
jmp
fldenv
sub
cmp
leave
out
fsubrs
or
sbb
js
out
gs
nop
xchg
repnz
call
scas
lret
nop
shlb
lock
fnclex
je
push
loopne
incb
ljmp
cmpsl
or
mov
and
mov
psubsw
lret
loop
jmp
fidivrs
cmc
cli
in
dec
cmp
das
xlat
iret
xchg
push
dec
int
leave
jl
je
ljmp
in
add
jl
push
out
mov
add
mov
lcall
jmp
xchg
fiaddl
inc
sbb
dec
xor
ljmp
inc
popa
mov
clc
fdivrs
mov
rcrl
or
nop
push
jmp
ret
fsubs
stc
aaa
sub
incl
mul
shrl
int
cmpb
loopne
nop
mov
nop
mov
dec
xchg
push
pop
ljmp
jnp
dec
and
dec
xchg
and
fcoms
scas
cmp
xlat
dec
sbb
hlt
sbb
fwait
js
cli
jmp
shl
cmpsb
or
add
hlt
enter
cmp
test
jo
call
jmp
cs
loop
pop
cli
sbb
jecxz
jno
and
lcall
out
dec
pop
stc
std
adc
into
sbb
fldcw
pop
adc
jg
decb
pushf
jnp
movsb
idivl
sbbl
inc
mov
popf
xchg
pop
push
jg
mov
adc
pop
sti
js
jl
mov
ss
cli
pop
jg
les
mov
ss
mov
movsl
mov
fcomp
lods
mov
shl
stc
lods
mov
xchg
inc
jg
cmp
jl
fstps
add
or
ret
repz
sbb
dec
bound
loop
pop
cmpsb
incl
jge
mov
sbb
adc
out
arpl
test
pop
mov
stos
inc
xchg
repz
imulb
lds
mov
jg
dec
in
add
clc
mov
stos
std
xor
ljmp
ljmp
inc
pop
cld
fadds
sti
cli
jge
mov
mov
mov
cmp
int3
pop
lcall
lods
icebp
outsl
lods
xchg
fcompl
add
jmp
mov
pusha
shr
cmp
sbb
push
mov
bound
loope
stc
xchg
rcl
stc
into
mov
cmp
mov
dec
lret
dec
incl
movsb
push
dec
or
test
dec
mov
ss
sub
mov
je
call
jg
sub
ljmp
outsl
das
outsl
pop
jo
in
mov
sub
ja
xchg
outsl
or
mov
lahf
jge
in
and
enter
hlt
cs
push
jmp
enter
in
lret
icebp
add
mov
cwtl
xbegin
mov
ss
mov
scas
test
lods
fwait
jo
in
add
je
ja
sub
push
jnp
jb
cmp
sbb
mov
std
fstps
test
orl
les
jg
inc
out
and
inc
adc
fwait
jge
test
inc
jmp
daa
fbld
in
fldenv
xor
push
mul
xchg
out
scas
xor
pop
fsubrl
pop
pop
inc
out
pop
xchg
cmp
push
jne
in
movsb
fnstsw
sbb
pop
xchg
mov
mov
dec
out
insb
jmp
pop
push
push
mov
decl
lock
loop
dec
push
stc
pop
jmp
ljmp
in
pop
addr16
pop
incl
in
xchg
adc
adc
jae
pusha
stc
dec
mov
mov
movntps
mov
popa
mov
scas
es
inc
leave
prefetch
or
cmp
pushf
rep
and
and
adc
clc
fwait
outsb
insl
cld
dec
fst
fildl
in
in
xchg
fmuls
lods
push
leave
je
aas
aas
out
dec
aaa
cmp
call
inc
insl
rcr
stc
inc
test
cmpl
stc
or
std
loop
mov
jge
cmp
jecxz
xor
sub
lods
or
loope
mov
ljmp
mov
pop
test
loope
fwait
andb
push
inc
xor
js
and
fdiv
sbb
jmp
std
outsb
stos
das
icebp
das
lea
mov
pushf
fisubrl
adc
decl
xchg
dec
repnz
enter
fdivrl
pushl
loopne
push
adc
test
push
test
dec
adc
pop
jle
in
and
mov
sub
into
xchg
push
inc
in
mov
out
pushl
repz
mov
ljmp
mov
gs
or
jb
xor
mov
jmp
fistpll
sub
ret
imul
cmc
inc
cmc
cwtl
hlt
incl
out
incl
cld
hlt
sti
sub
aam
lods
in
sub
adc
loope
lahf
lahf
jnp
adc
aam
sub
decl
repz
lahf
xlat
cmpsl
dec
ss
outsl
cmc
scas
repz
xchg
xor
or
icebp
jg
ljmp
ss
jmp
sub
xor
incl
dec
sbb
xor
loope
clc
xor
mov
xchg
xor
pop
pop
cmc
jns
test
test
faddp
cmpsl
test
adc
out
mov
adc
ljmp
nop
mov
lods
xchg
inc
call
sbb
mov
lock
js
ret
js
jnp
das
lods
sti
mov
insb
daa
xor
sar
mov
xlat
loop
pop
push
pop
jb
jo
leave
and
mov
pushf
js
mov
mov
lods
clc
mov
mov
decl
repz
cmp
mov
and
xchg
fcomps
push
stc
add
loope
mov
and
stc
jge
jp
push
cld
lcall
in
movsb
in
in
ljmp
movsb
mov
lods
in
mov
jmp
jg
lea
mov
scas
call
push
xchg
fdivrl
jbe
jmp
aad
adc
push
and
xor
into
jne
ljmp
cmpsb
aam
hlt
incb
xor
daa
cmp
aam
pop
pusha
adc
test
pushl
std
adc
fsin
call
jnp
pusha
data16
pop
and
shl
idiv
mov
and
inc
cmp
fs
mov
imul
cmc
and
push
lahf
adc
bound
dec
rcl
sub
jecxz
out
jbe
decl
and
addr16
jge
mov
adc
dec
or
outsb
jge
aam
jg
push
es
jno
push
sub
or
repz
in
mov
sub
incb
out
dec
clc
scas
push
pusha
cltd
subl
js
xor
call
inc
push
inc
push
pop
pop
ljmp
jnp
shrb
dec
inc
pushl
xchg
iret
ret
fcomps
mov
orb
movsb
ss
add
and
inc
mov
addr16
mov
jle
adc
jle
jb
insl
adc
push
pop
xchg
decl
jo
call
jge
fisttpl
mov
repz
lock
push
inc
jns
flds
clc
sub
stc
repnz
movsb
jmp
dec
sbb
sbb
sub
pop
pushf
icebp
sub
mov
loopne
mov
pop
cmp
and
pop
cmp
cld
call
dec
lret
pop
cltd
sbb
rcl
aam
dec
jns
or
push
call
inc
adc
fmuls
outsl
xor
idivb
das
mov
xchg
pop
sarb
int3
lcall
aas
push
cmp
sub
pop
jg
sub
cmp
cli
mov
add
lahf
test
mov
hlt
and
shll
dec
cmpsl
pop
sub
adc
fsts
mov
sar
mov
decl
jns
imul
ret
adc
sub
add
sbb
ljmp
jmp
movsb
fwait
rcrb
dec
fwait
daa
lcall
sub
test
mov
adc
lret
mov
dec
cmp
ljmp
lock
dec
scas
fistl
out
dec
scas
fsubl
mov
adc
and
pop
inc
aam
fdivs
sbb
sti
in
lcall
mov
push
mov
aad
ljmp
clc
imul
and
les
ret
xchg
mov
aaa
into
ds
negb
xchg
mov
inc
sub
mov
hlt
jbe
push
xabort
aad
pop
ss
jnp
loop
adc
in
inc
rol
or
jg
out
sti
add
pushl
mov
lahf
mov
lods
ud2
xchg
jge
and
lcall
push
je
dec
fsubrs
aam
icebp
mov
mov
mov
clc
call
adc
inc
inc
add
sar
loope
and
mov
ror
popa
and
test
ljmp
jp
xor
add
add
add
clc
adc
mov
and
mov
add
in
jmp
pusha
mov
out
inc
ret
sub
dec
neg
push
sbb
addr16
int
shl
jp
ret
stos
mov
xlat
clc
mov
in
push
out
mov
push
inc
mov
mov
test
pop
gs
and
push
stc
or
icebp
aad
hlt
pop
std
fstpl
mov
dec
clc
mov
xchg
fcmovbe
ljmp
incl
aad
int3
insl
pop
cmpsb
sub
imul
imul
adc
mov
imul
outsl
outsb
les
lret
cmpsb
or
push
dec
outsb
clc
ss
lods
call
outsl
mov
clc
out
rorl
xchg
xlat
inc
int
adc
stc
jecxz
popa
in
pop
shlb
jle
cmc
stc
loope
pop
pushl
stc
xchg
aas
leave
insl
push
iret
pop
cli
and
inc
mov
fistl
mov
idivl
iret
popf
jge
cmc
fldenv
xchg
inc
fmul
cmp
push
xor
ret
inc
xor
ud0
gs
daa
out
dec
shl
loop
loope
mov
dec
int
jl
xor
ds
daa
in
test
das
lret
mov
dec
add
out
cmp
sbb
sar
mul
sbb
outsb
sbb
incl
push
mov
test
into
enter
fdiv
mov
int3
pop
icebp
jg
sbb
mov
xor
or
addb
sub
das
rcrb
ret
ss
dec
cmp
sahf
cmc
fidivrl
xchg
mov
and
push
movsb
scas
lahf
cmp
decl
fsubl
dec
dec
jge
repz
sub
inc
popf
cli
sarl
das
sarb
dec
rorb
int
call
or
push
jg
lcall
div
and
in
aaa
jae
pop
addr16
repz
jne
jecxz
jg
xchg
nop
incl
mov
outsl
repnz
xchg
cs
push
int
push
dec
push
inc
idivl
clc
incl
xchg
mov
stc
in
in
loopne
fcompl
je
cli
pop
inc
les
lcall
mov
fnstenv
rdmsr
addr16
mov
cs
js
ficomps
lret
xor
ds
cmpsb
cmp
outsb
pop
dec
jle
ljmp
pop
mov
lahf
sub
sbb
mov
jp
lock
mov
ror
psubusw
cmpb
mov
ljmp
stc
inc
mov
mov
xor
xchg
pcmpeqw
mov
inc
jmp
aam
jle
enter
jg
fnstcw
loope
test
cmp
cld
out
mov
call
fsubr
leave
jp
jge
jo
mov
mov
outsb
leave
scas
sti
sbb
out
fidivl
iret
stos
iret
jmp
xchg
insl
mov
push
push
les
js
std
daa
sbb
icebp
add
mov
add
mov
or
fdivp
scas
andb
mov
dec
sub
in
shl
xchg
shlb
stos
loope
clc
popl
mov
shrl
cmp
and
fstpl
imul
pusha
pop
pop
inc
pushf
cltd
mov
mov
fildll
sbb
adc
jmp
xor
scas
int3
pop
out
xlat
dec
outsl
out
add
gs
data16
xorb
out
inc
or
incl
call
loop
out
or
add
push
jecxz
pop
call
fidivs
lahf
pop
lret
fsubl
pop
cltd
cmp
or
jnp
jae
sub
lcall
add
jns
and
jne
jbe
xchg
das
mov
out
sub
mov
cld
adc
out
inc
ss
push
fsincos
lods
aaa
mov
std
cld
push
xlat
and
aad
decl
inc
push
nop
divb
pushf
out
mull
push
hlt
std
sbb
jp
jg
clc
sub
psubw
shrb
mov
call
xchg
fadds
stc
pop
ljmp
push
divl
iret
jl
movsb
pop
jno
jo
jg
aaa
inc
sbb
inc
mov
insb
dec
dec
rol
push
iret
xchg
lods
push
enter
inc
push
ds
ret
pop
and
je
fmulp
sahf
push
add
push
sbb
decl
aad
subb
pop
lds
outsw
mov
into
mov
arpl
call
jge
mov
pushl
mov
cli
fiadds
pop
adc
lcall
xlat
out
mov
mov
ds
fmul
lret
cmp
xorl
int
mov
aaa
jnp
push
mov
decl
mov
xor
loopne
or
jg
imull
es
ret
aad
jp
idiv
ljmp
vpacksswb
in
sahf
mov
fdivrs
inc
jae
push
sub
add
hlt
adc
stos
jnp
stc
shrl
ffreep
aaa
icebp
mov
movsl
sub
lret
sub
push
lcall
pusha
iret
and
mov
push
rorl
pop
gs
jmp
push
adcl
into
push
push
pop
lods
ret
outsl
addr16
mov
clc
pop
add
fld
nop
cli
mov
pusha
inc
sub
cmp
cli
jg
mov
mov
sahf
call
cli
inc
sub
xchg
in
decl
mov
ret
int3
push
xchg
ret
xchg
mov
push
add
loopne
xchg
iret
cmp
cmp
mov
ret
push
or
sahf
ret
inc
pop
div
cli
mov
push
out
cli
sbb
out
mov
cmp
fsubl
adc
jmp
enter
pop
mov
sub
ljmp
filds
mov
clc
dec
rorl
xchg
adc
into
xor
rclb
fmull
xor
mov
sar
std
mov
test
pop
mov
nop
test
cmpsb
lcall
das
adc
fbstp
fdivr
mov
std
ja
fcomip
and
fbld
faddl
in
ror
inc
add
jle
mov
push
aad
cbtw
sub
repz
ret
into
iret
push
jge
push
fcoml
lahf
ljmp
inc
xchg
fdivl
in
inc
xor
mov
mov
jno
cmp
push
notb
sahf
add
outsb
les
rcr
bound
lret
inc
mov
in
out
outsl
lods
outsl
xchg
fcmove
lret
dec
sbb
iret
popa
inc
sti
push
outsl
leave
fldenv
inc
negb
out
movsl
je
mov
cmp
imul
mov
repnz
setns
test
subb
pop
mov
std
dec
or
in
mov
loope
cwtl
sarb
outsb
adc
rclb
scas
rcl
push
cmp
ret
mov
test
xchg
dec
fwait
in
bnd
jmp
mov
cltd
and
push
rolb
add
lret
jns
arpl
and
cmpsl
out
ljmp
divl
mov
adc
inc
aad
aam
and
dec
push
jmp
cltd
lcall
iret
cltd
sar
mov
movsl
mov
out
mov
repz
out
mov
idiv
sti
std
test
loope
rcr
xchg
cltd
or
dec
jmp
vmwrite
cmp
sti
mov
cld
decl
cli
cltd
cmp
inc
mov
jmp
pusha
mov
ret
mov
cmp
pushl
ljmp
ja
les
orb
adc
pop
jge
std
loope
ret
push
lcall
jle
jmp
push
popf
adc
ljmp
mov
xchg
mov
push
xor
pusha
inc
std
leave
test
clc
mov
iret
sti
fdiv
jmp
mov
inc
pop
aam
pop
mov
lret
dec
outsb
ud1
and
outsl
shlb
clc
jecxz
xchg
ficompl
jge
insl
loopne
fldcw
fdivs
mov
jp
pusha
incl
cli
mov
jo
pop
std
cltd
pop
ljmp
pop
add
add
mov
jmp
dec
sti
cli
ljmp
in
jnp
sbb
push
and
popf
and
fisttpl
fildll
jne
mov
into
cs
jg
lods
divb
pusha
or
test
es
xor
fcomp
and
je
in
jg
call
shll
jmp
sbb
xchg
movsb
in
push
add
scas
test
adc
mov
jg
divl
cli
xlat
std
xchg
in
pop
add
aaa
xchg
push
adc
decb
mov
lret
jg
jg
outsb
dec
lds
jb
fwait
or
push
frstor
aaa
dec
cmp
aam
push
adc
outsb
jg
in
jne
ja
ljmp
mov
out
mull
std
mov
les
je
das
add
mov
or
jp
mov
mov
fsts
cmc
mov
lret
mov
in
adc
mov
test
icebp
ljmp
mov
scas
mov
push
cltd
sti
push
les
lock
clc
std
or
repnz
data16
iret
dec
cwtl
out
and
mov
incl
push
and
push
sbb
loop
lods
adc
ljmp
aad
pop
xor
es
je
test
push
call
in
and
call
iret
leave
mov
and
adc
in
mov
sti
mov
push
psubusw
lea
call
int3
out
and
sub
repz
int
ljmp
cmp
add
loope
cmp
repnz
pushl
hlt
jle
imul
dec
jmp
jl
cmc
lock
mov
aaa
jle
inc
clc
cmp
jg
cld
sbb
mov
jp
sar
sbb
add
push
jle
inc
repnz
ja
dec
decl
cli
in
loopne
sti
jb
out
pop
xor
popa
push
cmp
jg
push
pop
pusha
out
and
pop
es
sub
in
mov
inc
mov
call
mov
mov
mov
clc
jmp
adc
shl
out
inc
in
fwait
ljmp
gs
mov
mov
pop
jg
popf
or
sub
dec
clc
daa
mov
pusha
cmpsl
sbb
out
and
out
add
ds
mov
daa
popa
xlat
inc
pop
pop
lret
decl
sbb
jl
and
adc
mov
cmp
sub
hlt
jp
mov
jns
mov
ljmp
jg
cmp
sub
push
mov
movl
out
mov
out
push
repz
call
imul
adc
mov
jne
std
icebp
in
lods
inc
inc
incl
lcall
shll
jl
iret
xchg
insl
test
sahf
je
xchg
dec
lahf
aad
cld
mov
cmp
sub
shl
fdiv
loope
xor
xchg
iret
inc
leave
add
xchg
fcmovu
pop
jmp
sub
or
lods
mov
adc
adc
es
or
dec
add
decl
inc
shll
hlt
push
xchg
sbb
lcall
push
jns
add
insl
pop
in
add
add
popf
aaa
mov
dec
lds
pushl
xchg
jmp
fnstsw
pusha
fdivl
dec
dec
pop
cmc
xchg
push
ret
mov
mov
jp
loopne
push
test
mov
pop
ret
imul
jmp
addr16
xor
rcl
cmc
orl
clc
mov
adc
fisubrs
repnz
sbb
mov
cmc
je
hlt
daa
insb
ret
cmp
fistps
in
ficoms
clc
decl
arpl
insb
jbe
pop
lret
outsl
test
pop
dec
test
sbb
mov
call
mov
ljmp
lods
xchg
sahf
lods
fadds
sub
int
in
subb
xchg
lcall
nop
mov
subb
mov
loope
lea
lock
cltd
pop
ret
mov
jg
call
push
push
sbb
push
cmpsl
mov
fldenv
inc
sar
ljmp
mov
repz
out
xchg
iret
cltd
mov
sub
mov
imul
pop
pop
mov
cli
nop
sbb
enter
cmp
mov
fwait
jl
popf
outsl
mov
add
sub
adc
jno
jmp
js
or
jmp
aas
lock
out
movl
outsl
pop
data16
icebp
fists
jb
adcb
push
call
mov
outsb
daa
sub
dec
pop
dec
adc
and
pop
dec
jecxz
mov
jmp
lahf
mov
mov
fs
hlt
lcall
ljmp
lods
mov
clc
mov
fstpt
mov
sbb
pop
arpl
adc
pusha
xor
jg
or
int3
mov
ret
std
lret
lods
lcall
cmc
in
adc
pop
aas
in
scas
push
idiv
jns
mov
out
movsl
aas
jae
fmuls
call
mov
and
lcall
testb
ljmp
ficoms
in
jmp
out
pop
sbb
data16
nop
out
or
jg
jno
pop
adc
enter
mov
pop
mov
push
lcall
and
xlat
fdivrp
pop
scas
repnz
enter
adc
in
xor
lods
cmpsl
inc
mov
pop
cs
out
je
sub
jae
imul
mov
mull
push
sbb
mov
adc
loop
pop
mov
jmp
enter
add
ds
and
jecxz
mov
adc
nop
inc
insl
icebp
rolb
jg
push
sub
xor
or
cmpsb
pushl
aad
fs
ret
xchg
test
dec
sar
lock
dec
sub
push
stos
inc
outsb
inc
ficompl
int3
addl
sahf
dec
jne
decl
xor
stc
jo
mov
jle
sti
push
pop
loope
xchg
addr16
cli
pop
mov
das
roll
mov
mov
jne
insl
mov
cli
jae
decl
sarl
xchg
ret
xchg
stc
jmp
cmp
cmpsl
bound
adc
xor
addr16
shlb
cld
sbb
fidivl
lcall
jo
ljmp
push
jne
or
call
call
and
loopne
push
or
xchg
in
add
fisubrs
lahf
loopw
pushl
popf
pop
jnp
inc
push
push
sub
call
push
bswap
xlat
in
xchg
out
daa
add
xchg
repnz
scas
std
jnp
mov
xchg
stos
cwtl
push
cmp
incl
sbb
dec
test
and
scas
ja
dec
loope
jecxz
imul
cmp
or
jmp
aas
inc
mov
push
shl
lods
xchg
in
jg
hlt
mov
jl
pushf
cwtl
out
cli
sub
push
pop
adc
imul
aaa
test
sub
pop
mov
lcall
dec
paddusw
adc
add
bnd
test
ficoml
ffreep
aaa
nop
hlt
ret
repnz
aaa
icebp
jg
pushl
std
aad
sub
mov
jno
cmc
cwtl
fs
mov
cmpsl
movsl
pop
xchg
sar
adc
cmp
sti
pop
rclb
fiaddl
dec
push
leave
enter
or
out
sub
repz
outsl
push
mov
fmuls
add
inc
jnp
jmp
ret
mov
mov
movsb
repz
loopne,pt
subl
clc
jmp
fstpt
pop
out
lret
ss
incb
js
pop
in
mov
and
push
mov
stc
push
testb
mov
xlat
movsb
mov
mov
cmpsl
and
push
lahf
xor
adc
mov
sub
cs
cmp
ljmp
cmp
jl
jb
mov
enter
push
out
mov
outsl
clc
adc
dec
je
lds
jno
mov
in
sub
pushf
push
jge
jl
sub
mov
jg
cld
lcall
lds
inc
or
lahf
jge
cmp
test
push
jecxz
jp
jmp
pop
sti
mov
mov
out
dec
adc
xorl
dec
test
test
idiv
jmp
pop
stos
lods
ja
sub
mov
and
jmp
mov
pop
stc
sti
insb
imul
push
push
arpl
and
cmpl
jle
lret
aas
jl
jp
js
jbe
je
jb
es
ljmp
cmp
mov
icebp
enter
and
xchg
sarl
jg
jp
ss
mov
jb
out
std
pusha
or
jecxz
fmull
inc
lcall
jmp
sbb
std
mov
mov
aaa
and
sbb
mov
daa
and
decl
lret
test
movsl
jnp
jecxz
fwait
mov
cmp
mov
cmpb
incl
mov
mov
mov
push
xchg
pushf
js
jp
daa
in
cmp
insb
aas
repnz
pop
pop
call
mov
mov
ss
xchg
xor
ds
add
ljmp
pop
pop
mov
js
add
mov
xlat
imul
repz
xor
push
incl
andb
stc
jne
popf
in
jne
out
add
ljmp
and
icebp
sarl
pop
andl
jnp
inc
sub
pop
dec
inc
aad
mov
std
fwait
mov
cmp
test
ds
push
and
xlat
xlat
sub
loop
cmp
mov
mov
jns
add
sahf
mov
cs
jp
cli
leave
jne
iret
and
int
cmp
out
jne
cmc
lock
and
je
mov
push
cltd
je
in
jmp
sub
fucom
in
jmp
sti
ja
sub
mov
sbb
cli
mulb
jo
fdivrl
decl
lock
xor
out
cmp
sbb
fistl
jbe
xlat
adc
incl
fnstsw
adc
icebp
and
add
mov
icebp
hlt
imul
out
out
mov
daa
pushl
jl
repz
in
lahf
test
lods
je
sti
jnp
nop
push
adc
je
adc
movsb
mov
das
sar
cwtl
notb
mov
add
cmc
mov
shr
ljmp
je
cs
jne
outsb
sub
pushf
inc
je
dec
sti
jg
clc
pop
dec
ljmp
adcb
cmp
rorb
jmp
cmp
inc
mov
ds
sti
icebp
sti
std
repnz
dec
mov
addr16
imul
loope
jmp
sbb
out
add
loope
in
dec
push
enter
shrl
xor
out
jle
cltd
jg
std
pushl
je
idivl
hlt
add
push
pop
data16
insl
into
or
sub
pcmpeqb
aaa
ja
or
pushl
repz
dec
dec
pop
inc
insb
sti
clc
mov
es
inc
lods
or
negb
jg
adc
addl
cld
and
mov
out
mov
jp
cwtl
xor
bnd
inc
mov
std
push
aaa
fnstsw
push
ja
xor
sbb
sub
pop
clc
decl
scas
sub
fsub
and
leave
lods
testb
cmp
push
decl
adc
rorb
lds
dec
flds
js
and
pop
mov
rcrb
lahf
or
fildl
std
lcall
cmc
cmp
cmp
test
popf
jae
jmp
pop
jmp
inc
mov
cld
mov
in
cs
xor
mov
arpl
or
movsb
and
test
lods
imul
pop
add
jbe
jne
jg
enter
pop
clc
ss
int3
fs
jmp
cld
test
xchg
fwait
push
hlt
pop
out
xchg
add
in
in
jg
je
mov
sbb
es
mov
push
repnz
lods
scas
shr
jmp
jnp
jb
jg
push
dec
shl
fwait
cld
cmpsl
fwait
arpl
xchg
loopne
arpl
std
pushl
adc
rorb
into
jb
jg
lret
or
mov
ficoml
cmp
mov
in
inc
adc
decl
fdivrl
mov
ss
ret
sti
unpcklps
idiv
mov
mov
dec
das
cli
in
js
or
and
aam
xor
aam
mov
mov
ret
pop
cld
jg
js
jl
cmp
push
gs
ss
pop
adcb
and
cli
icebp
mov
cmp
mov
jmp
ljmp
cmp
repnz
push
out
ret
mov
lret
in
xor
xchg
xchg
pop
sbb
fstpt
xor
shlb
scas
cli
mov
and
push
lock
jp
repz
das
gs
ljmp
das
mov
mov
sar
ret
jg
sbbb
adcb
cwtl
popa
insl
sar
cmp
lret
cltd
jle
or
cltd
out
mull
push
pop
test
cwtl
mov
adc
ljmp
imulb
lahf
hlt
je
out
push
fsubs
sub
movsl
jae
cmpsb
cmp
and
incl
aad
jecxz
aam
in
loopne
sub
inc
mov
mov
sbb
jmp
pop
sub
and
push
mov
lock
scas
inc
pop
jge
sbb
neg
mov
lcall
pop
xchg
jbe
mov
stos
inc
mov
or
mov
push
sbb
cmp
in
es
cmpsb
fnsave
mov
push
popf
inc
scas
xchg
stos
shll
mov
ljmp
repnz
xchg
and
inc
add
jae
xor
das
leave
ret
pop
stos
push
addb
idiv
clc
mov
shrb
aas
lret
xchg
adc
xlat
shrl
stc
add
or
mov
call
ret
push
and
movb
orl
insb
ljmp
xor
test
and
sahf
dec
or
in
jg
pushl
mov
jecxz
jmp
test
test
aaa
or
jb
jg
mov
pop
decl
pop
and
cld
out
in
mov
ljmp
testl
cmpsl
movsb
daa
xchg
cmpsb
sti
xor
je
inc
pop
shr
add
cli
mov
jne
mov
call
xor
cwtl
cmp
mov
idiv
int3
jnp
jg
push
nop
daa
dec
pop
addl
ljmp
repnz
in
lcall
cmp
shr
aad
pop
jg
dec
cld
jle
test
mov
mov
repz
cld
push
sbb
bound
mov
jecxz
xor
out
sub
cs
inc
ret
iret
ret
xorl
add
pop
dec
popf
ljmp
or
inc
or
cmp
lods
sub
mov
pop
pop
mov
and
notl
f2xm1
ljmp
repz
loopne
ljmp
in
rol
sub
cmp
loopne
pop
lret
sarb
clc
pushl
xor
cli
clc
and
icebp
repz
jmp
enter
mov
cs
jnp
jb
scas
push
adc
pop
mov
enter
mov
mov
jns
andl
mov
mov
mov
or
icebp
insb
cmp
fmuls
or
test
or
inc
sub
iret
out
cltd
mov
fildll
arpl
loop
fs
add
mov
call
mov
jge
fs
mov
mov
inc
push
sbb
jmp
popf
fwait
stos
nop
jp
dec
xor
in
jecxz
jmp
and
mov
loopne
xlat
mov
dec
mov
mov
mov
test
mov
cltd
xchg
mov
sub
xlat
in
loope
stos
xchg
xchg
popf
call
stos
xor
adc
leave
jno
mov
je
pop
jecxz
or
incl
cmp
movsb
adcb
imul
stc
hlt
stos
or
incl
or
or
cltd
xchg
jg
xchg
inc
std
outsl
daa
lock
filds
enter
jle
jg
mov
cmp
pushf
test
and
mov
out
xchg
pop
xchg
xlat
sti
pop
cmp
mov
push
xor
decl
pop
mov
out
and
dec
fisttpll
mov
mov
stc
lods
lcall
pop
outsb
mov
repz
lcall
scas
hlt
xchg
scas
add
call
dec
dec
pop
scas
icebp
iret
mov
test
lcall
mov
repnz
aad
push
aad
ds
cs
dec
hlt
mov
xor
mov
mov
and
lea
mov
mov
mov
lcall
pushl
mov
mov
rcll
jmp
mov
xchg
dec
test
fst
fildll
dec
xor
ja
rcrl
push
sbb
dec
xor
call
mov
xchg
fsubs
adc
ret
ret
cltd
repnz
xor
inc
cmp
call
sub
and
clc
add
jne
in
icebp
das
divb
fidivrl
mov
xchg
cmp
adc
mov
add
inc
je
aad
fldenv
shl
out
cmp
arpl
icebp
mov
decl
mov
in
xchg
fistpl
inc
xor
jl
cmpsb
aad
and
lcall
pusha
daa
ror
pusha
leave
jmp
cld
cmp
xor
dec
jl
and
dec
hlt
test
dec
repnz
pusha
and
jle
ds
xchg
pop
test
test
leave
xchg
ret
out
call
out
or
adc
inc
pop
stc
jmp
jecxz
jmp
pop
je
std
decl
cwtl
sbb
clc
jnp
pop
outsl
push
jp
xchg
in
mov
shrb
mov
sahf
repz
fucomi
mov
and
stos
mov
rorb
les
fildll
sub
push
std
loopne
mov
fdivp
out
repz
or
std
push
push
mov
aam
repnz
push
mov
clc
lret
sub
inc
in
outsl
push
cwtl
repz
in
xor
sub
mov
jmp
pop
inc
pop
loope
stc
cld
pushl
sti
popf
and
icebp
stos
or
mov
xchg
out
cltd
pop
mov
sarb
pop
dec
lods
xchg
mov
or
cmp
out
call
cmp
push
stc
push
push
inc
sbb
mov
xlat
mov
xlat
clc
cmp
xor
dec
or
and
push
sti
call
lahf
cli
adc
sti
push
in
jle
in
sub
clc
fiadds
xchg
xchg
dec
push
mov
inc
fstenv
mov
stos
out
jge
imul
ljmp
rcr
mov
loope
clc
into
mov
scas
inc
loop
dec
fdecstp
repz
lcall
cmpsb
mov
stos
jnp
pop
add
lret
rolb
icebp
jmp
adc
scas
pop
les
test
ljmp
cmp
aaa
loopne
ljmp
push
jae
push
ja
lods
dec
mov
mov
stos
decl
jecxz
stc
mov
ds
imul
xchg
les
mov
clc
cmovle
dec
nop
xor
mov
mov
sub
insl
cli
push
lock
imul
int3
loop
rcrb
imull
aas
lcall
add
icebp
hlt
push
fstps
leave
fidivrs
add
std
xchg
lock
std
mov
push
or
in
cmp
cmp
lcall
cmp
outsl
fwait
cmp
xorb
cmp
dec
icebp
mov
cwtl
pop
stc
mov
jmp
xchg
cmp
lods
cmp
les
sbb
sub
aaa
cld
das
pop
inc
pop
cmp
stc
inc
lcall
pop
in
mov
sub
jne
aas
les
push
imul
dec
mov
and
sub
pop
cltd
incl
xor
push
cld
call
incl
mov
fildl
ja
popf
loope
cmp
mov
push
repnz
mov
daa
fucomip
ss
scas
push
push
aas
push
rorb
clc
decl
sub
and
ljmp
jecxz
mov
lcall
xchg
cmp
std
scas
pushf
ret
in
jae
and
or
or
xor
mov
call
sub
mov
dec
pop
add
and
jmp
cs
adc
mov
jmp
mov
jg
repnz
outsb
inc
mov
out
arpl
mov
or
adc
lods
popa
adc
ds
jo
mul
repz
jle
out
jmp
mov
out
sub
into
mov
sti
pop
jnp
int
adc
leave
or
sar
das
adc
je
dec
add
pop
paddsb
jmp
pop
test
shr
enter
mov
xor
insw
adc
sub
and
sbb
mov
lret
ret
mov
cld
ret
xchg
aaa
push
jnp
nop
xchg
cmp
jecxz
outsl
jnp
push
cltd
mov
testl
sub
jg
outsl
jns
pop
sbb
cmpsl
insl
push
adc
dec
adc
cmp
fcomip
fldt
push
cmpl
mov
and
imul
cmp
es
and
xchg
and
xchg
and
add
andl
out
movsb
loopne
xor
xor
lcall
sahf
pop
push
sub
mov
add
mov
call
xlat
std
in
jmp
daa
xor
mov
xchg
test
decl
scas
jge
adc
test
mov
adc
push
ret
cmp
mov
push
dec
aad
jbe
in
aam
repz
mov
mov
push
xor
aas
sub
mov
sti
push
ljmp
fs
inc
pop
sbb
daa
mov
nop
inc
mov
subl
sub
xlat
cwtl
out
mov
loopne,pn
sti
sub
pop
mov
jle
in
pop
xor
jl
jmp
or
hlt
push
je
cmp
jle
je
jns
cmpsb
mov
lahf
clc
ljmp
pop
icebp
mov
incb
popf
mov
or
xchg
stc
mov
enter
call
dec
mov
iret
fcmovnb
test
push
add
mov
fwait
iret
mov
push
push
mov
mov
leave
cmp
xor
cli
sub
xchg
ljmp
add
lcall
xchg
or
sub
cmp
sub
adc
lcall
std
pop
js
rclb
mov
out
fcmovne
xor
loopne
push
stc
adc
mov
test
outsl
sub
icebp
pushf
jecxz
fsubrp
cmp
out
rolb
cmp
incl
loope
cmp
clc
sti
ret
lock
ss
in
ss
loopne
insb
arpl
jg
ljmp
lds
test
jmp
cmpsl
lret
mov
aas
pxor
icebp
aaa
dec
clc
jmp
movsb
cltd
nop
lahf
mov
pop
mov
xchg
add
jns
sbb
jmp
ljmp
mov
push
mov
lret
or
mov
leave
xchg
enter
jmp
popa
incl
jecxz
roll
enter
mov
test
fsubr
push
popa
push
mov
mov
lods
lret
repz
shlb
sti
jp
fisubs
mov
mov
mul
test
cmpsb
push
and
sub
mov
pop
loop
inc
mov
testl
mov
sahf
sahf
arpl
mov
out
jl
notl
std
leave
in
inc
pop
pop
jg
incl
mov
js
das
ds
std
outsl
cmc
adc
lea
and
add
icebp
xchg
lock
incl
mov
repnz
js
notb
adc
lcall
je
divl
outsl
mov
add
nop
xor
mov
jp
ljmp
or
fstl
xor
inc
push
ds
and
sbb
cwtl
mov
mov
decb
pop
jo
add
icebp
inc
xchg
ja
cmp
fsubs
daa
xchg
loope
incl
int
jecxz
xchg
adc
xor
jp
pop
and
cld
ljmp
add
push
push
add
sub
pop
pop
sbb
lcall
fstl
mov
enter
jns
scas
sub
addl
scas
je
mov
incl
sbb
mov
xchg
sbb
repz
mov
pop
sti
cli
fisubs
das
in
nop
iret
ret
or
leave
fidivrl
xchg
sbb
xor
incl
sub
xor
adc
inc
pop
rcl
in
mov
ljmp
mov
xor
in
cmp
je
movsl
or
mov
sbb
pushl
js
fnsave
fs
xchg
lea
pushf
bnd
pop
out
test
mov
xacquire
iret
xchg
mov
push
push
and
inc
push
and
jb
stos
jle
ljmp
loop
sub
sub
fistpl
movsl
inc
scas
lods
call
decl
or
mov
jnp
mov
neg
ficoms
xchg
fsubrs
xchg
incl
lcall
ds
adc
xlat
shl
subl
sahf
loopne
cmc
jecxz
icebp
pop
dec
push
and
sti
sti
ljmp
mov
das
outsl
js
nop
hlt
xchg
xchg
leave
in
es
mov
mov
mov
ljmp
clc
in
fistpll
mov
stos
pop
adc
jnp
fistpll
fnsave
lcall
cmpsl
push
xor
out
mov
in
cmp
daa
push
lock
cmp
mov
sahf
lcall
aas
xlat
call
incl
adc
out
adc
lods
jb
push
sahf
pop
xchg
mov
loop
xchg
std
out
cli
push
mov
adc
fisubs
inc
sbb
mov
adc
movsl
sub
dec
js
mov
js
xchg
cmp
jg
add
fmul
jge
and
aad
mov
inc
mov
fildll
js
pop
mov
fldl
adc
imul
mov
dec
jmp
mov
ss
insl
bound
pop
pminsw
lods
stc
jno
ret
dec
pop
sti
inc
repnz
jns
mov
ljmp
ss
push
jmp
cmc
or
ror
jp
pop
pop
in
mov
das
adc
lcall
dec
xchg
sub
lret
test
aas
pop
pop
inc
jg
in
mov
decl
test
and
clc
cld
mov
enter
and
jg
lods
hlt
hlt
mov
xchg
maxps
inc
mov
insb
jo
push
jno
sbb
es
pushl
les
inc
and
jl
xchg
xchg
sbb
ljmp
ret
jbe
push
movsb
and
xor
jecxz
mov
test
cmp
lcall
sbb
jbe
jecxz
inc
outsl
fldcw
dec
and
sbb
icebp
pop
xor
das
jo
loop
jg
pop
clc
xchg
ror
push
dec
movsb
lret
iret
aas
pop
cmpsl
hlt
jbe
shrl
pushl
and
inc
jecxz
push
or
push
xchg
or
mull
jmp
mov
into
add
leave
add
or
cmpsl
hlt
les
fisttps
ljmp
int3
fcmove
aaa
jle
push
xor
push
rorb
movsb
gs
mov
pop
fcos
mov
pop
stc
outsl
je
aam
inc
pop
sub
cmp
dec
mov
test
push
mov
mov
je
mov
ret
sahf
repz
pop
icebp
pop
xchg
int
insb
jp
std
test
mov
xor
lea
nop
clc
mov
mov
fwait
and
outsb
mov
je
jmp
lahf
addr16
pushf
or
mov
cmp
outsb
push
xor
pop
mov
popl
jmp
popl
outsb
sbb
push
push
in
js
inc
cmpsl
rcrw
and
decl
cmpsl
fbstp
mov
push
fbld
bound
jl
jge
push
mov
sbb
and
push
sub
adc
push
andl
mov
mov
or
arpl
fistpl
ss
ljmp
outsl
cmp
insb
ficoms
jg
sbb
jl
icebp
xor
mov
call
cmp
pop
xorb
jle
aaa
xor
push
fistpll
std
sti
shrb
test
add
cmp
push
imul
shr
mov
lock
jmp
pushl
call
repnz
dec
mov
jmp
mov
push
adc
inc
je
lods
push
int3
iret
xchg
js
or
xchg
enter
cmp
ret
dec
in
ss
fcoms
jae
inc
les
jmp
jmp
push
dec
in
hlt
xchg
imul
mov
xchg
or
push
fwait
sub
sarl
push
cli
mov
jb
or
add
fdivr
scas
cli
jl
pop
test
adc
jmp
mov
repnz
sbb
lods
mov
ljmp
out
pop
cld
mov
outsl
gs
pop
in
add
fildl
test
cmc
xchg
aad
mov
fidivs
cmpsl
pushf
test
sub
mov
je
je
pop
out
and
loopne
jmp
xchg
lahf
imull
aam
pop
iret
das
jno
fdivs
mov
imul
lods
jne
jl
jmp
and
jo
scas
sub
mov
sub
xlat
cmc
xchg
jns
cmc
jmp
repnz
ljmp
je
mov
mov
mov
pop
filds
jl
out
sahf
adc
mov
mov
aas
rorl
std
lcall
inc
aaa
jbe
jo
dec
std
lods
push
ret
push
mov
mov
imul
aas
popf
cmp
call
out
cmp
xor
jbe
cltd
mov
adc
adc
inc
jl
out
shll
jmp
mov
jno
icebp
imul
rcrl
pushl
dec
pop
scas
ja
or
xor
inc
shrb
fldt
sbb
sub
add
stos
ljmp
jmp
add
jbe
add
call
pop
cmp
mov
ja
dec
inc
lret
mov
ljmp
imul
in
push
and
out
fdecstp
mov
sbb
in
in
stc
dec
lahf
fidivs
and
mov
aaa
add
cwtl
cli
xchg
push
jp
mov
or
ljmp
or
popa
insl
in
xor
jge
sub
call
pop
mov
in
bound
ds
ss
das
decl
mov
xorl
pop
sbb
fdivrs
aaa
mov
or
ljmp
pop
inc
mov
movsb
loop
stos
sub
out
loop
mov
or
loop
mov
mov
add
push
cmp
iret
jp
jl
adc
popf
or
filds
sbb
jg
inc
inc
fldl2e
pop
repz
stos
test
das
mov
lock
push
mov
popf
xor
lods
dec
mov
cmp
cld
sub
pushl
hlt
rol
scas
push
pop
fwait
aad
popf
addl
or
sarb
inc
xchg
aas
pushf
mov
mov
adc
lods
mov
xchg
and
lret
lock
dec
add
hlt
int3
lods
sti
xchg
pop
adc
outsb
mov
or
incl
mov
jge
idivl
jge
sbb
aas
lea
mov
cld
mov
incl
mov
mov
inc
add
lahf
pop
push
out
aad
ds
std
sbb
hlt
pushl
adc
sub
push
add
fnstcw
pop
or
popf
push
scas
in
ljmp
mov
cmp
leave
fst
or
test
mov
pop
lock
hlt
das
loope
mov
inc
push
in
arpl
call
inc
cmp
mov
scas
xor
sub
mov
ljmp
incl
mov
idivb
imul
ss
lds
fildll
popa
pop
es
clc
incl
in
cli
scas
xchg
out
xor
decl
mov
xchg
pop
xor
je
or
ljmp
fwait
jo
subl
or
fdivrl
sbb
and
decl
nop
mov
mov
push
les
mov
sub
sbb
inc
fdivrs
repnz
pop
imul
cmp
xlat
dec
dec
xor
jl
or
in
inc
mov
cwtl
xor
mov
and
bound
inc
sub
push
decl
test
adc
sub
xchg
dec
sbb
dec
pop
roll
in
setno
xchg
fwait
ljmp
ds
clc
fsub
add
js
mov
popf
dec
sbb
jmp
int3
and
or
mov
mov
or
std
xchg
mov
add
add
incl
mov
ja
addl
xchg
je
mov
jo
mov
sub
cmp
fildll
lret
adc
adc
in
mov
mov
push
sub
xor
cld
sbb
sbb
pushl
or
mov
cmpl
mov
mov
mov
adc
and
out
fsub
mov
inc
dec
repnz
popf
pop
mov
inc
sub
cmp
dec
insb
movl
add
movsl
pop
jl
jno
mov
jmp
into
sub
ret
call
mov
scas
daa
fldz
jg
lock
stos
testl
sti
mov
mov
fcmove
nop
data16
ds
out
xchg
ds
cli
je
ds
in
sub
idivb
fnstsw
lea
insl
aaa
cmp
cmc
mov
ljmp
inc
push
fwait
fs
imul
inc
cmp
fucom
pushl
std
mov
jmp
movsb
rorb
mov
dec
mov
lea
xor
call
lock
stc
jl
fidivs
mov
mov
movsb
iret
es
and
int
mov
fwait
sbb
push
incl
and
imul
mov
cmp
call
ffreep
pop
test
and
sub
sub
fcomip
sbb
mov
mov
inc
mov
jmp
test
movsl
dec
enter
dec
int3
addb
jmp
jle
repnz
insb
mov
lret
xchg
add
mov
mov
push
aaa
data16
in
pop
mov
fcmovu
mov
jp
hlt
pop
leave
std
and
pushl
movsl
fsubrl
outsb
xchg
sbb
je
call
xor
cli
pop
add
cmpsb
hlt
sbb
mov
in
outsb
lcall
int3
je
cli
cs
imul
out
push
cmp
out
adc
incl
cmpsl
repnz
shlb
ret
dec
cltd
inc
and
adc
lcall
jmp
xchg
jge
xor
mov
pop
test
push
push
mov
xchg
sti
lcall
inc
cld
int3
sti
shll
fists
out
sbb
mov
mov
push
cmp
in
loop
adc
pop
hlt
call
cld
add
xchg
xor
out
pop
push
pop
lret
dec
pop
int3
lret
lahf
jge
sub
shll
orb
lcall
mov
cwtl
shll
dec
lret
movsl
mov
ja
fst
adc
mov
stc
decl
mov
outsb
mov
or
pop
not
cmc
ljmp
cmp
xchg
js
push
repz
xchg
mov
inc
mov
mov
fdivr
mov
das
add
mov
jbe
inc
sahf
je
jmp
inc
fwait
pop
xor
fimuls
shr
jge
repz
sbb
ds
std
test
adc
and
pop
into
jno
or
inc
and
ret
sahf
pop
jle
je
out
cmp
mov
adc
mov
outsl
ljmp
cli
popf
fwait
lds
das
jecxz
cmp
jns
sarl
in
pushl
sub
rorl
lock
gs
cmp
jg
sub
mov
call
stc
decl
xor
out
mov
xor
arpl
fdivr
iret
les
cmpsb
in
call
iret
or
jno
push
popl
cmp
test
jo
xchg
lcall
subl
sub
pop
pop
add
fcomip
lcall
lcall
popw
fidivs
push
cld
add
fadd
aad
cld
jmp
cmpsb
repnz
sbb
pop
mov
test
repz
xchg
fstp
nop
and
out
hlt
call
fwait
push
push
lcall
dec
mov
inc
dec
out
mov
pop
popf
mov
inc
movsl
sub
mov
xchg
lcall
mov
inc
inc
jno
fisttpl
test
pop
ljmp
std
stc
decl
icebp
dec
movsb
mov
sar
add
push
sahf
std
icebp
leave
jne
cmp
mov
cmpsl
mull
xchg
lock
imul
test
dec
cmc
pop
popa
call
jle
js
add
inc
ds
sti
cltd
mov
ljmp
into
xchg
sti
fwait
adc
cli
pop
or
popa
pop
pop
lcall
fcomps
jnp
aas
inc
cmovs
mov
scas
leave
mov
pop
dec
leave
scas
aam
push
jl
mov
cwtl
rcrb
shll
je
lret
clc
call
and
xor
jnp
sahf
stos
mov
ss
push
ret
sbb
jmp
pop
rcrl
cmp
lea
into
push
mov
adc
incl
enter
sti
lret
and
loopne
notl
sbb
loope
fsub
ljmp
xchg
test
lret
icebp
adc
inc
jmp
test
call
mov
sti
iret
xchg
les
sahf
test
mov
stc
repnz
adc
cld
jmp
dec
mov
mov
push
adc
sub
ljmp
ljmp
mov
add
jne
aad
das
iret
pop
sti
outsb
dec
movb
cwtl
fdivr
mov
rorl
lock
stc
std
arpl
pop
lret
pop
das
xchg
jle
std
jg
lods
dec
test
inc
dec
es
sbb
push
adc
movsl
daa
dec
dec
xchg
clc
push
aas
add
jns
cmp
call
js
mov
lock
jg
decb
scas
loop
out
cmp
xor
out
movsl
sub
jg
adc
popf
aas
inc
fiadds
adc
push
pop
pop
sub
cmp
ja
int
sahf
out
push
cli
pusha
cmp
jbe
mov
call
jg
outsl
incl
jl
repz
xchg
jb
cmc
add
notb
gs
mov
aad
lock
pushl
pop
jb
push
loope
sbb
xor
incl
outsb
fisttpll
inc
ret
and
cmp
jae
and
movsl
into
jecxz
jbe
dec
and
jg
jmp
adc
pop
arpl
push
inc
movsb
cmp
call
xchg
adc
xor
jg
fbstp
lret
or
sbb
ja
sti
out
clc
clc
jo
jmp
xor
mov
clc
xchg
mov
lds
push
xchg
rcrb
inc
or
xor
adc
cli
lahf
pop
rorb
or
fcomp
sub
js
stos
mov
es
sbb
dec
test
pusha
cmp
mov
pusha
jns
gs
testb
xchg
or
jnp
into
idivl
jg
in
push
cmpsb
sbb
test
imulb
cld
jle
das
out
adc
fucom
ds
scas
ret
mov
xrelease
outsl
pop
imul
dec
lock
push
dec
add
les
mov
mov
jmp
imul
stos
xchg
pop
push
sbb
ret
imul
push
nop
fistpll
cld
ljmp
repnz
sub
loopne
dec
imul
adc
mov
cmpsl
iret
pushl
call
dec
add
sbb
fadd
lock
dec
dec
stc
jle
test
jg
or
aaa
dec
movsb
sub
xor
mov
outsb
cli
ljmp
xchg
xor
rcrb
sub
or
sub
push
test
dec
ljmp
mov
add
fisttpl
pop
repnz
inc
mov
mov
or
mov
out
ret
in
outsb
hlt
mulb
mov
jae
jbe
sub
mov
call
cmp
push
and
xchg
mov
push
dec
pop
or
fisubrs
jmp
jmp
jno
outsl
xor
dec
add
fcmovnbe
mov
and
jg
dec
inc
outsl
fdivrs
pop
out
cmp
inc
je
fidivrs
sbb
das
xchg
mov
lcall
mov
cli
ja
sub
fdivrs
inc
fimull
js
insb
mov
mov
daa
std
ljmp
mull
mov
or
cli
jnp
cmc
daa
and
mov
loope
xor
inc
xor
cmpsl
sub
and
jmp
int
adc
repz
sbb
mov
xor
dec
inc
shrl
jne
sub
dec
cli
decl
mov
or
mov
stos
mov
shr
cmpsl
mov
or
or
jp
pop
pop
std
pop
jno
mov
cmpsl
push
divl
xor
out
roll
stos
or
mov
push
mov
shrl
js
call
lahf
jecxz
stc
idiv
lds
stos
pop
sbb
out
divb
out
loopne
inc
out
add
pop
mov
jo
es
mov
pop
test
mov
mov
ljmp
ficoml
in
cltd
sub
mov
or
xchg
outsb
pop
jnp
lock
scas
dec
outsb
pop
mov
lcall
test
xor
inc
icebp
inc
pusha
mov
sbb
jae
lcall
jmp
add
fnsave
pop
mov
in
das
fildl
push
push
movsb
pop
repnz
incl
jmp
insl
sub
or
jle
dec
xchg
stc
pop
mov
adc
and
jo
push
mov
pop
aas
mov
pop
call
movb
pushl
sub
dec
aam
jb
xor
inc
mov
call
lcall
gs
inc
jo
mov
mov
lret
jnp
in
aaa
fwait
mov
movsb
jae
cmpsl
jmp
xor
stc
icebp
mov
sbb
mov
loopne
ret
inc
sub
loopne
adc
incl
sub
out
mov
xlat
in
into
popf
ret
aam
outsl
popf
arpl
filds
hlt
xchg
das
shlb
jns
or
mov
sbb
mov
fidivl
push
stos
jg
sbb
roll
fadds
pop
ror
or
xchg
fldcw
xchg
mov
push
lcall
jle
mov
aaa
dec
imul
daa
inc
adc
in
fiaddl
orb
jmp
stc
out
iret
mov
adc
iret
dec
out
jb
mov
cmc
test
fsubrl
mull
call
addb
sub
adc
lods
shl
mov
cmp
push
cmp
add
decl
inc
movb
sbb
mov
cltd
in
dec
pop
clc
addr16
pushl
enter
incl
sar
adc
xchg
jge
mov
mov
repnz
cmc
ljmp
mov
jecxz
mov
add
dec
shlb
jmp
inc
mov
xor
scas
test
jge
outsb
outsl
repz
xlat
ret
aas
pusha
push
push
xor
adc
int
ds
test
scas
hlt
inc
pop
imul
enter
lret
jne
incl
jp
mov
push
cmp
std
jmp
icebp
pop
add
loope
out
outsb
push
mov
jmp
mov
cmpsl
mov
loop
add
fstpt
pop
add
call
notl
jle
test
rolb
jmp
push
jmp
popa
or
adc
call
loopne
add
mov
repz
push
je
daa
jg
push
lcall
jge
mov
mov
and
jo
pop
xchg
ret
inc
lds
adc
pop
decl
cmp
leave
or
dec
loopne
mov
movsb
shlb
mov
incl
and
mov
cmc
ja
mov
xor
std
std
stc
ret
insb
test
cs
mov
movsb
mov
clc
sti
pop
lods
mov
sti
clc
call
daa
sti
jmp
mov
dec
pop
pop
fldenv
je
jmp
dec
aaa
out
imul
pop
xchg
in
lret
push
pop
hlt
mov
das
aaa
xchg
ret
enter
orl
pop
jl
jmp
shll
or
cli
xor
stc
mov
xchg
fsts
sahf
int3
aad
mov
jle
fisubrs
ds
pop
outsb
nop
je
in
rorl
cld
cmc
jg
push
mov
dec
inc
cmpsl
lret
adc
enter
sub
aaa
xchg
ja
jmp
int3
lret
push
lods
ljmp
cli
jmp
test
mov
push
in
inc
call
ljmp
call
sti
ud1
cmp
adc
ss
mov
aaa
dec
push
bound
cld
das
lock
dec
fcompl
jmp
jp
repz
xor
dec
imul
pop
int3
xchg
add
cld
sub
mov
and
jmp
fdivrs
lock
call
loopne
sarb
ja
fisubrs
fwait
in
pop
clc
fstpt
clc
sar
icebp
pushl
imul
rorb
ret
xorb
cs
decl
mov
ja
enter
pop
jne
test
divb
or
std
jmp
repnz
push
movsl
mov
sbb
fs
cmpsb
in
ret
jae
hlt
fwait
out
hlt
aas
iret
add
sub
xchg
lcall
stc
jmp
shl
pop
push
ror
std
popf
shll
popf
mov
out
or
decl
cmp
add
leave
out
loopne
lods
dec
mov
je
clc
icebp
lock
xor
out
jg
call
scas
adc
cmovae
sub
sub
xchg
mov
xchg
inc
jp
pop
cli
sub
pop
jg
xchg
jg
test
push
rorl
shll
jg
stos
or
pop
out
out
jp
adc
mov
jecxz
out
adc
cmc
daa
mov
in
std
decl
xchg
in
outsl
or
dec
loop
scas
imul
sub
lahf
mov
outsl
mov
call
xor
outsb
out
sbb
cld
mov
lret
fildll
sub
add
push
fdivl
pushl
out
cmpb
pop
push
jecxz
fisttpll
dec
sahf
and
add
vpsubq
mov
sti
decl
mov
in
sub
cld
mov
jge
sti
cmp
incl
hlt
jb
ret
cli
mov
out
sbb
mov
pop
scas
cli
jmp
add
push
adc
jae
fdiv
mov
std
mov
repz
daa
push
jnp
inc
stc
inc
mov
outsl
outsb
imul
xlat
jg
sbb
jmp
mov
jg
loope
test
cmp
sti
push
shl
cmpsl
pop
sub
fisttps
jo
cmpsl
lods
adc
inc
xorb
fsubrp
jmp
xchg
and
loope
dec
xor
jno
inc
mov
in
jne
js
shl
push
sbb
std
pop
aaa
pop
aad
pop
adc
sbb
mov
in
dec
mov
imulb
nop
fildl
inc
sub
jl
ret
aas
and
xchg
jle
pop
call
or
inc
rclb
or
negl
scas
xchg
inc
sbb
movl
ljmp
sbb
pop
mov
js
insb
adc
xchg
testb
mov
aas
xor
xchg
xlat
pop
test
dec
sbb
cmpsb
mov
mov
dec
les
pop
pop
ja
repz
cmp
cmp
add
jns
call
dec
lods
divb
lret
out
cmp
cs
xchg
pusha
xchg
pop
outsl
imul
out
mov
jnp
out
sbb
cli
and
pop
mov
pop
push
fs
lahf
shl
aas
or
cmc
push
call
xor
dec
cmpsl
jbe
jb
aaa
mov
frstor
cmp
jg
scas
mulb
jecxz
out
ror
js
neg
popa
dec
xor
lods
nop
ret
xchg
testb
cli
je
jnp
popf
sbb
push
incl
pop
dec
popf
jmp
xor
data16
movsl
out
in
mov
addb
popa
mov
jmp
into
jne
xor
pop
test
push
jae
pop
jg
adc
pop
jmp
adc
and
and
xor
xor
jmp
pusha
shrl
insl
rorl
pop
lods
cmpsb
jl
inc
mov
je
dec
decl
mov
jbe
sti
jo
jmp
adc
lods
dec
xchg
inc
jae
jmp
cli
pop
fs
ret
lods
inc
cli
in
mov
sbb
mov
lcall
scas
jle
call
add
pushf
pop
imull
nop
inc
add
in
shlb
scas
fisubrl
incl
xchg
js
dec
and
mov
fwait
jg
lods
stc
popf
sbb
mov
leave
notb
mov
inc
mov
lcall
xor
inc
inc
jae
es
inc
sub
jb
add
scas
cmp
add
jg
jmp
pop
in
sub
inc
ja
dec
jg
or
loopne
in
call
lahf
mov
js
call
mov
pop
pop
call
mov
popf
fisttps
pop
dec
test
js
je
xor
push
jns
sub
cmc
fimuls
std
ss
ret
xchg
mov
jg
xchg
cld
sub
cli
std
adc
idiv
fbld
scas
mov
cltd
call
gs
fisubs
bound
pushl
sbb
cltd
jl
or
mov
cltd
add
notl
repz
nop
int3
jmp
cld
scas
idiv
mov
sub
je
mov
ror
cmp
scas
mov
xor
jmp
mov
mov
sub
xor
or
call
xor
cmp
pop
js
sbb
mov
jae
mov
jae
dec
lock
repnz
mov
pushl
clc
lret
pop
test
das
fwait
in
inc
dec
imul
push
fcomip
xor
test
cmpsb
mov
sar
jecxz
push
sub
js
push
pop
cmpsb
aas
enter
or
cmp
and
mov
lock
incl
popf
mov
repz
add
out
jo
xchg
mov
pop
daa
cld
jge
setns
or
pop
push
and
outsl
add
xchg
mov
pop
mov
jmp
mov
addr16
incl
xchg
fdivs
test
rcrb
mov
lcall
dec
jg
xlat
bound
xor
sbb
je
cld
add
inc
out
and
ljmp
rolb
ljmp
pushl
cmp
fstl
decl
cmpsl
or
and
cmpsl
mov
incl
in
aam
dec
add
or
pop
data16
push
mov
das
cli
jg
mov
ret
ret
das
popf
add
jb
out
inc
mov
jmp
stc
pop
cmp
sti
and
test
sarb
and
jmp
int3
shl
adc
ljmp
inc
mov
cmc
push
adc
push
in
bnd
lcall
call
mov
divl
add
lret
mov
cli
ret
sub
sbb
pushl
inc
aas
sbb
mov
cltd
jae
jb
push
pop
dec
scas
lahf
repz
outsb
gs
fdivr
call
std
mov
iret
js
jnp
push
and
test
mov
fbld
pushf
mov
xchg
incl
and
in
adc
and
icebp
test
out
push
or
mov
lcall
decl
ja
jbe
sarb
imul
pop
fucomip
pop
jmp
repz
adc
shlb
cmp
sub
xchg
sub
pop
pop
mov
popa
jle
dec
sub
call
jae
adc
stos
scas
lea
add
jmp
xor
sbb
ja
ljmp
ret
xor
adc
pop
shlb
fcmovb
jns
les
mov
xchg
movsb
jmp
not
mov
popf
jle
push
idiv
movb
sub
ret
lea
stos
push
nop
repz
jne
call
cmc
sbb
jg
cmp
out
in
in
int3
pop
ret
push
or
decl
div
dec
outsb
xchg
pop
cmp
mov
adc
in
incl
out
jmp
ficomps
rorl
mov
jl
cli
pop
jno
push
jo,pt
lods
push
sub
mov
rcrl
movsb
sti
jle
jecxz
xchg
mov
cmc
ljmp
sarb
jge
fsubp
in
xchg
sub
hlt
cld
cmc
pop
subb
pushf
imul
out
sbb
outsl
pop
pop
mov
adc
fimuls
sub
inc
jecxz
xchg
xor
jg
test
neg
imul
mov
jno
addb
ss
std
gs
in
bound
cmpl
out
sbb
outsb
icebp
stos
sub
sub
test
fisubs
loope
pop
xor
in
or
dec
xchg
int
cmp
repz
add
call
sub
out
subl
lcall
arpl
push
outsl
xchg
pop
int3
fnstsw
sahf
loop
pushf
jno
jns
mov
insb
jp
dec
push
nop
jg
test
nop
or
in
rclb
cmp
mov
test
pop
mov
push
jg
mov
rorb
ljmp
mov
test
cmc
add
cmp
cmp
adc
aam
or
dec
movsb
cmpsl
mov
jae
std
aaa
pop
inc
sub
add
fldz
aad
loope
mov
incl
loopne
icebp
fdivl
add
es
daa
cmp
mov
daa
cmp
rcrb
bound
push
mov
lds
ljmp
clc
inc
outsb
fwait
push
iret
cli
in
jns
adc
mov
mov
imul
add
hlt
cmp
jg
roll
fldenv
sbb
dec
ds
test
pop
jnp
dec
movsb
pushl
xor
cli
dec
push
in
xchg
loopne
pop
pop
jmp
mov
imul
and
cld
pusha
scas
mov
mov
pop
dec
loop
call
inc
mov
xchg
out
push
mov
ljmp
lcall
mov
stc
or
mov
cld
cli
sub
cmp
incl
pop
cmp
aad
fsubrs
cmp
hlt
cmp
pop
rolb
js
push
call
push
out
adc
loopne
fidivs
cmp
push
dec
popf
imull
push
rcl
dec
sub
scas
mov
jnp
into
outsl
call
sbb
jnp
je
cmp
and
testb
xchg
test
data16
xor
mov
mov
pushl
jl
icebp
cmp
mov
mov
imul
inc
lds
aaa
cmp
or
push
xchg
call
das
outsl
mov
gs
mov
pushl
js
ret
pop
jnp
add
lahf
std
push
movsl
add
andnps
scas
push
scas
lcall
mov
and
call
sub
loope
push
loop
movl
mov
fldenv
test
out
pop
dec
xchg
mov
scas
dec
jg
imul
into
jp
jno
jno
and
outsb
es
fwait
and
mov
inc
les
adc
pop
icebp
repz
cmp
jnp
push
sub
and
test
shrb
pop
into
fbld
andl
mov
repz
out
cmp
sbb
ret
mov
notl
test
cltd
out
or
lds
jl
pop
out
or
stos
aad
das
mov
jmp
aad
int3
pushl
adc
cmpl
std
mov
mov
inc
fucomp
xchg
and
push
cmpsl
ss
pop
mov
sub
into
or
ja
sub
cwtl
xor
fcos
decl
pop
mov
dec
mov
test
or
fbld
test
push
push
jmp
cld
nop
cmp
mov
or
cmp
mov
decl
clc
jbe
mov
clc
sub
fistpll
rcll
and
enter
sbb
mov
ret
pushl
test
bound
enter
fistl
ja
jge
ds
into
ljmp
cli
xchg
in
lods
clc
jno
iret
mov
mov
ss
mov
pushl
dec
xor
loope
enter
mov
cli
jle
mov
jecxz
and
test
dec
dec
sub
mov
int3
mov
lods
push
and
cmp
clc
pushl
sbb
fwait
sbb
inc
push
lods
punpcklbw
inc
xlat
call
pop
and
mov
jbe
mov
jg
mov
jns
pop
dec
insl
mov
in
inc
in
pop
dec
jb
push
ja
push
pop
lcall
cmp
mov
xchg
xor
incl
mov
xchg
or
sti
les
fimuls
dec
fsubrl
add
inc
ja
cli
and
es
fmull
neg
test
dec
lahf
pop
pushl
ljmp
jo
es
shld
mov
std
dec
dec
mov
sbb
lret
icebp
ficompl
xor
jg
and
lds
inc
sbb
addr16
xchg
les
ljmp
inc
mov
and
lock
push
cld
pushl
or
xchg
mov
add
pop
popf
dec
jl
jo
push
cmp
arpl
lcall
sahf
jle
mov
or
jp
addr16
je
jecxz
hlt
test
insl
pop
es
sub
enter
inc
xor
shr
jns
ret
inc
jge
fs
jg
test
mov
push
push
push
mov
cld
lods
andb
jnp
negb
incl
popf
push
ss
decl
xor
xchg
jecxz
call
push
insl
ljmp
fistpl
mov
mov
adc
ljmp
pop
xchg
les
add
sub
and
aas
and
test
pushl
mov
stc
fs
dec
out
aaa
cltd
les
adc
mov
mov
dec
repz
mov
call
scas
call
ror
data16
mov
xor
pop
icebp
cwtl
inc
ret
cli
nop
xchg
icebp
call
loopne
sbb
scas
lods
push
pop
dec
repz
lcall
dec
sbb
into
repnz
filds
fs
nop
sub
push
lret
call
cltd
jbe
jmp
mov
sti
in
sbb
sti
jle
dec
dec
jle
out
cli
cmpsl
jmp
push
testl
sarl
mov
pop
cld
out
cmp
ljmp
mov
popf
jnp
cwtl
fistl
cmp
jmp
mov
lcall
mov
jmp
shll
cwtl
jecxz
pop
pop
mov
push
lcall
loop
or
adc
fmull
xchg
and
lret
fbld
out
loopne
inc
xorb
das
inc
mov
cltd
pop
pop
sbb
adc
das
or
das
fcomip
jns
out
sti
cmp
lret
mov
push
fcomps
ret
incl
aaa
imul
test
jecxz
stos
scas
in
pop
cld
in
lret
dec
and
ds
mov
test
mov
repnz
dec
lock
enter
test
stc
lods
data16
sahf
outsl
enter
mov
adc
cs
loope
rcrl
push
cmp
sbb
roll
out
adc
insl
loope
xchg
out
es
lods
gs
mov
shll
dec
sti
clc
sbb
inc
jle
or
out
in
pop
cmp
xchg
mov
sbb
loopne
sub
jg
adc
loop
notb
call
fnstenv
and
dec
shlb
ret
add
cld
xchg
dec
scas
int3
js
fdivrs
lahf
xlat
sbb
sbb
cmpsl
es
pop
mov
ljmp
cs
imul
xlat
push
lcall
mov
stos
cli
xchg
sub
incl
cmp
sub
jnp
stos
sahf
imul
jecxz
xor
push
out
outsl
jns
pusha
into
loop
std
lcall
es
ss
dec
es
repz
roll
neg
icebp
push
xor
pop
add
stos
sbb
idiv
pushl
and
insl
xchg
xchg
imul
out
in
mov
pushf
dec
jns
out
shlb
sbb
dec
adc
ret
inc
clc
jg
sbb
push
ret
es
sbb
test
cmp
iret
stos
stc
ja
dec
rol
cmpsl
imul
das
js
jb
jecxz
cmp
call
hlt
dec
das
sarb
lods
icebp
je
stos
outsl
fsub
sbb
or
pusha
mov
pop
jmp
push
xchg
adc
sahf
out
out
rcrb
shlb
pop
leave
adc
clc
das
test
inc
sbbb
dec
ljmp
stos
jbe
mov
cli
imulb
mov
jae
je
sub
ret
in
mov
fwait
cltd
cmp
push
inc
mov
dec
aad
repnz
nop
xor
or
icebp
nop
pop
sti
adc
lods
pop
adc
cmpsl
cmp
push
rorl
stc
subl
clc
aaa
stc
ljmp
std
xchg
xchg
mov
push
in
das
push
xchg
jbe,pt
mov
mov
fsubrl
ljmp
jo
push
out
xor
lea
fstps
pop
sub
pop
cmp
in
pop
jle
pop
add
int
popf
pop
js
insb
inc
shlb
adc
jl
stos
mov
js
arpl
stos
bound
add
lret
into
mov
adc
call
cmpsb
pop
insb
flds
or
ja
push
iret
add
sbb
or
addr16
pushl
sub
pop
adc
cmc
mov
leave
push
out
pop
xchg
jnp
in
std
pop
or
int
aas
dec
adc
lock
lds
fwait
lods
xchg
add
ret
iret
movsl
mov
fldt
das
repnz
test
push
mov
adc
jg
sub
outsl
cmpsl
jle
std
adc
enter
cmp
pushl
and
iret
push
repz
test
jbe
mov
int3
loop,pn
jmp
repnz
sub
out
and
xchg
mov
sbb
add
cmp
lods
jl
fisttps
out
jp
fidivrs
or
adc
fsubrp
movsb
or
push
movsb
in
test
jnp
sahf
das
cs
cmp
sub
lock
jecxz
xacquire
dec
jbe
iret
call
add
mov
xor
mov
ret
jp
adc
call
das
iret
sbb
out
mov
mov
mov
adc
mov
aaa
into
jns
push
or
iret
aaa
sbb
jbe
adc
lret
sub
lcall
ljmp
loop
cs
pop
icebp
sti
sub
and
jae
dec
push
push
xor
pop
cmp
loopne
sbb
sbb
mov
outsb
neg
xchg
enter
xchg
sbb
bnd
inc
lcall
xchg
test
call
mov
or
or
out
jg
or
lcall
pop
dec
mov
adc
lock
cmc
call
les
iret
pusha
mov
test
jg
cmc
mov
adc
jae
das
stc
adc
push
int3
nop
xchg
add
pushl
push
mov
fnstsw
jns
sbbl
xor
sbb
mov
aaa
std
dec
and
sbb
daa
shll
iret
jmp
inc
xor
sti
incl
mov
test
push
aam
fbstp
inc
leave
inc
jmp
test
and
aaa
ss
les
mov
stos
and
jbe
jo
adc
mov
add
jbe
adc
adc
push
test
data16
mov
mov
mov
sub
daa
daa
cmp
in
sar
ljmp
cmp
xor
addr16
lock
aaa
push
and
xor
das
sbb
test
stos
and
jno
test
repz
mov
jg
or
xor
jns
and
daa
insb
mov
decl
shr
stos
test
popl
and
fnstsw
jbe
push
push
aaa
pop
subb
mov
out
and
sbb
fimull
out
outsb
das
adc
sti
sub
adc
cmp
call
rorb
repz
imull
xchg
loop
jae
jo
and
or
cmp
iret
or
call
clc
sub
mov
jge
add
or
data16
lret
stos
jo
cmp
mov
add
les
mov
and
out
inc
mov
aad
or
push
std
mov
cmp
xor
sub
xchg
pusha
cmp
pop
cwtl
mov
rolb
mov
mov
sbb
or
xchg
pop
lret
adc
rcll
jns
jb
pushl
lret
mov
aam
es
insl
mov
leave
lea
les
call
jp
mov
or
cli
and
dec
rclb
push
sti
dec
aad
fistps
int
stc
mov
scas
jl
adcb
imul
lcall
jne
call
sbb
cmc
les
icebp
cmp
in
ljmp
mov
addr16
hlt
rcrb
adc
int3
div
push
aaa
mov
or
lods
jns
fisttpl
dec
lcall
fnstsw
loopne
push
jns
add
mov
push
mov
adc
lods
xchg
hlt
inc
fcomip
mov
push
imul
and
or
insb
out
dec
ljmp
jmp
xchg
and
cmp
mov
jns
push
jbe
mov
jnp
stc
fidivrl
idiv
mov
scas
mov
pslld
dec
inc
xchg
ljmp
repz
data16
movsl
cmp
xor
dec
scas
xlat
mov
mov
pop
fmulp
sub
pop
cld
call
fcom
imul
push
and
stos
stc
stc
in
adc
lcall
jno,pn
lods
xchg
scas
jns
roll
idivb
imul
repz
ret
stos
sub
jg
call
fcmovnb
xchg
cmovp
cld
push
pusha
lahf
shrl
add
ljmp
cmp
sti
je
sarl
mov
in
mov
mov
xchg
sti
jl
scas
mov
pop
in
stc
xchg
cmp
xchg
add
push
je
in
int3
out
pop
cld
add
hlt
fidivs
ss
call
jle
mov
mov
and
dec
cwtl
push
push
mov
into
das
xlat
sbb
jg
lcall
test
loopne
test
mov
cmp
push
sub
in
cmpsl
jns
push
rcr
pop
cmp
add
xchg
mov
mov
or
inc
call
imul
movsl
or
mov
mov
mov
icebp
outsb
incb
xor
or
inc
incl
ljmp
loope
rol
fnstcw
push
movsl
mov
sub
and
xchg
xchg
push
sbb
cmpsb
call
es
fdivr
jmp
dec
push
lahf
cmp
and
xor
jecxz
inc
mov
mov
cltd
push
lock
mov
inc
loopne
insl
dec
sub
jns
in
cmc
xchg
popf
repz
xchg
ljmp
sarb
add
add
aaa
fmul
incl
in
cmpsl
pop
sub
shrl
ljmp
aad
loope
cli
aaa
jge
fldl
rcr
iret
in
cmovg
mov
adc
aas
jg
in
orps
sub
push
push
cmovnp
fisubs
scas
add
mov
leave
cli
sub
cmp
push
push
jae
xchg
mov
jbe
mov
xchg
lods
test
faddl
pop
hlt
incl
ficoml
scas
fcomps
jle
mov
pusha
scas
push
out
arpl
cmpsl
add
dec
jecxz
iret
jbe
lods
push
idivb
xor
pop
stos
and
mov
fistpll
jmp
pop
mov
mov
push
shl
sub
adc
sub
in
hlt
xchg
xor
call
pop
mov
or
call
mov
sub
loope
stos
xchg
cs
mov
fwait
pop
out
push
mov
sub
mov
test
inc
push
mov
clc
fidivs
in
inc
cmp
jmp
out
mov
call
mov
ret
adc
out
jle
pop
popf
imull
cmpsl
adc
add
mov
out
leave
jae
push
mov
out
mov
aas
scas
scas
popf
xchg
frstor
fnstenv
fstpl
lahf
mov
icebp
decl
inc
test
cmpsl
mov
jp
aaa
inc
loopne
cmp
ss
ljmp
clc
decl
shll
mov
popa
fwait
in
cld
stc
push
cmp
or
sub
call
xchg
lret
in
lcall
sub
add
pop
fwait
lahf
je
mov
jg
call
jecxz
adc
inc
fstps
sub
sbb
shl
out
int
sub
mov
adc
fidivl
push
incl
and
icebp
fidivrl
sbb
es
shr
cmp
test
rclb
daa
xchg
dec
pop
clc
inc
jmp
rcrl
insb
sbb
xchg
jo
sbb
jmp
jge
sub
mov
test
jg
decl
pop
das
lock
dec
dec
add
push
push
lret
leave
ret
jb
ret
das
clc
xlat
add
push
cld
call
cmp
jmp
ficoml
daa
rorl
aas
xlat
sbb
popa
stos
stos
jbe
decl
dec
sbb
sbb
rolb
add
inc
cmp
mov
std
push
pop
dec
ret
decl
pop
mov
out
sub
out
sbb
jmp
adc
sub
cmpsb
insb
std
mov
sbb
ja
dec
mov
mov
movsl
fimull
add
push
ja
push
jnp
mov
ja
add
adc
sti
out
mov
or
repz
fidivs
jp
adc
ss
scas
and
movsl
mov
loop
pushf
les
lret
xor
jg
adc
aaa
or
loop
mov
aam
data16
in
out
xor
call
jecxz
sub
cmp
or
js
out
or
sarl
subb
xor
xor
mov
mov
decl
mov
aas
push
insl
andb
aas
int3
sbb
cs
std
mov
ror
cld
clc
ljmp
test
aaa
mov
push
xchg
stc
sub
cld
gs
mov
sbb
in
pop
jbe
adc
jo
fnstsw
sar
jle
push
sti
idiv
call
cmpsl
testb
cmp
cwtl
cmp
ljmp
inc
xlat
sbb
push
ljmp
cltd
sub
cmc
cli
dec
call
test
icebp
shl
add
in
sbb
jbe
mov
in
lret
fs
clc
push
inc
fdiv
in
call
dec
pop
mov
fsubl
push
fs
jmp
add
movsl
add
sub
xlat
iret
shr
pop
xchg
mov
dec
inc
cli
adc
lcall
jno
or
shll
daa
xchg
lods
dec
or
jmp
and
cmp
loopne
test
mov
int3
test
int3
cmp
dec
mov
ljmp
call
and
fucomi
xchg
repnz
dec
faddp
in
push
fnsetpm(287
shl
call
pushl
cmp
repz
rdmsr
sub
lods
ds
sbb
dec
jg
ljmp
cltd
loopne
lahf
mov
test
jmp
jno
aad
lcall
fistpll
pop
repnz
je,pt
stc
adc
ret
addr16
cwtl
push
int
inc
stc
repz
rcrb
lcall
pop
dec
sub
adc
fistpll
mov
pop
addr16
xor
mov
cmp
adc
or
and
dec
je
mov
xor
dec
cld
fbstp
clc
pushl
mov
jg
mov
jo
in
test
mov
loopne
dec
into
cmp
pop
mov
scas
fnstcw
cmp
pop
cli
out
fildl
mov
jne
and
call
fdivr
call
jg
scas
xchg
ljmp
inc
mov
je
repz
stc
cld
add
cmc
ljmp
shl
loopne
xor
fiadds
jns
idivb
sarl
scas
clc
in
push
adc
jb
push
fsubrl
lahf
aaa
xorb
fnstcw
pop
bswap
sbb
ret
incl
loopne
ljmp
hlt
movl
mov
clc
and
imul
mov
and
cmp
adc
dec
lock
pop
mov
lcall
cwtl
ds
add
mov
jo
imul
mov
popf
sahf
fdivrl
xlat
jl
cli
pushl
cmp
pop
imul
lods
in
inc
add
insb
pop
lahf
testb
xchg
cli
aad
pushf
loope
cmpsb
es
adc
test
ljmp
ljmp
sbb
adc
pop
in
and
test
add
ret
pop
decl
jecxz
mov
pusha
xchg
ffreep
cmp
dec
cmp
sbb
fstpl
mov
mov
loope
ds
xlat
sti
pmuludq
mov
aas
das
int
jp
lods
sub
or
ret
daa
cli
jb
out
leave
and
xchg
insl
movsb
mov
cmpsb
cmpsl
fadd
loop
imul
mov
in
hlt
in
nop
daa
repz
inc
aas
daa
popa
rcr
aas
cld
xchg
jp
sbb
hlt
dec
notb
inc
fcmovne
inc
daa
cmp
jmp
inc
lret
xchg
repnz
imul
hlt
ds
cmp
pushl
rolb
popa
jg
fists
daa
and
in
push
icebp
cmpsb
lods
mov
enter
ror
jl
ljmp
and
cld
or
icebp
inc
std
jne
sub
in
cmp
sub
mov
dec
fcmovu
mov
in
dec
in
in
lahf
cmp
insl
and
sbb
dec
in
loopne
mov
pushl
and
pop
stos
repnz
ljmp
je
sbb
jmp
iret
out
sub
pop
fildll
ss
neg
inc
pusha
lock
dec
jg
call
jecxz
jg
adc
mov
icebp
adc
sbb
lock
outsl
repnz
fcompl
fcomip
decl
xchg
mov
pop
fwait
adc
roll
clc
std
icebp
cs
mov
repnz
adc
push
adc
sti
add
jg
push
ret
movsl
aas
or
mov
dec
pop
lret
mov
faddl
mov
ljmp
jg
or
pinsrw
jge
test
xchg
adc
cmp
push
mov
adc
xchg
lock
sahf
ljmp
mov
cmp
push
push
dec
jnp
sti
lock
sub
dec
pop
movsl
ret
fistps
adc
dec
mov
pop
lds
mov
repnz
mov
cwtl
mov
inc
or
push
dec
sub
cwtl
repnz
xor
stos
mov
jae
sar
lahf
bnd
or
fwait
jp
in
mov
cmpsl
jno
adc
mov
inc
loop
dec
in
xchg
sub
ljmp
fsubr
inc
sbbb
ljmp
mov
adc
aaa
inc
sbb
adc
stc
or
les
xchg
jp
loopne
fcomip
loope
movsl
pop
mov
lret
clc
pop
xorl
fcoml
push
push
divb
jb
inc
mov
lds
sbb
mov
jbe
sub
out
or
je
cmp
jo
mov
pop
ljmp
sub
adc
pop
inc
inc
mov
jns
les
pop
jge
pop
push
decl
xchg
jbe
loop
test
test
test
outsb
in
mov
adc
bnd
cmp
out
loop
in
mov
ljmp
test
mov
gs
sbb
fidivrl
lods
cmova
fcomip
movsl
outsl
test
sti
hlt
pop
movsb
and
aas
and
adc
cmpsl
lods
ds
lcall
xor
cmp
push
pop
xlat
fstpl
pop
cmpsb
pop
mov
in
adc
imul
dec
and
decl
insb
cmp
out
mov
pop
xchg
pop
push
repz
jmp
pop
jg
fisubrl
fisttpll
pushf
mov
inc
mov
cmc
xchg
icebp
jp
paddusb
incl
insl
pop
jno
icebp
dec
cltd
int3
jp
mov
push
dec
inc
ljmp
in
mov
in
mov
aaa
imul
sbb
xchg
jle
pop
lods
and
das
add
incl
pop
adc
mov
pusha
lods
xchg
push
test
out
xchg
cmp
cmp
fistpll
mov
shlb
and
jnp
push
js
mov
pushl
shlb
adc
aam
jp
sahf
dec
add
mov
icebp
inc
jp
inc
jp
cmp
push
pop
jo
call
jmp
aad
sub
mov
jno
pushl
int
or
ljmp
xchg
clc
fsubrp
stos
jo
lods
push
rcrl
sar
incl
lret
loopne
ljmp
push
loopne
shrl
dec
sub
push
fidivrs
dec
ds
ljmp
cmp
dec
mov
cmp
incl
iret
dec
jp
mov
mov
in
stc
sbb
jmp
call
jo
jg
fucomi
fsubl
pop
mov
mov
lock
lahf
pop
push
push
inc
jmp
fisttps
fcmove
loope
sub
in
lds
sti
jmp
sbb
call
fs
jnp
outsb
sbb
dec
mov
inc
sbb
xchg
rcrb
std
arpl
jmp
pop
fld1
addr16
sbb
pop
outsb
dec
loope
push
out
das
scas
mulb
ljmp
inc
jl
stos
out
movsl
mov
ds
int
jl,pt
inc
xor
dec
push
fisubl
decl
mov
xorb
rclb
shrl
mov
and
sbb
ljmp
stc
fbld
jae
mov
adc
fdivrl
ja
lock
cmp
cmp
sbb
adc
shl
in
sets
decl
into
cwtl
sbb
mov
add
sub
cld
push
lea
sti
lcall
call
mov
cwtl
pop
popf
cmpsl
and
adc
std
jmp
cmp
jnp
ds
scas
dec
dec
ffreep
xchg
dec
test
cli
xchg
pop
ja
imul
stc
sub
jg
jnp
mov
lcall
xchg
jle
cli
inc
sub
iret
cmp
adc
jnp
rolb
popa
inc
or
test
xchg
jb
dec
std
push
incl
ficoml
ds
fsubl
enter
cmp
sti
sbb
mul
shl
test
cmp
and
sub
in
sarb
imul
stc
call
inc
movb
jbe
dec
sti
jecxz
jecxz
jmp
scas
mov
decl
in
jae
mov
sbb
sbb
hlt
out
xor
sub
incl
ja
cmp
and
ficomps
mov
jmp
pop
daa
shl
lcall
cld
push
cs
mov
xlat
pop
mov
cmc
loop
call
push
and
jg
rol
inc
into
out
dec
ret
and
mov
adc
lret
dec
sbbl
out
jecxz
lret
scas
cld
lahf
dec
inc
inc
jg
ss
xchg
incl
inc
jmp
sti
cmp
or
pusha
hlt
cmp
adc
das
sti
push
mov
jg
xchg
incl
cmp
sbb
jmp
repz
xchg
out
pop
jl
sbb
push
in
pushl
or
and
insl
fs
popf
pop
test
xchg
sahf
cmp
push
cmc
in
call
cld
sub
xchg
lods
mov
fsubp
or
sbb
idivl
jb
mov
cmp
ljmp
int
sbb
in
in
adc
outsl
sbbb
adc
outsl
pushl
clc
fstpt
cld
push
pusha
jnp
cmc
mov
xor
test
ds
mov
decb
int3
ss
nop
fnstcw
sbb
mov
lcall
popa
and
mov
adc
and
fisubrs
push
or
into
incl
pop
mov
stc
stc
lock
out
aad
mov
popa
pop
and
push
hlt
lcall
jecxz
mov
dec
out
bswap
notl
aam
repz
das
sar
repz
push
or
cmp
sbb
int3
in
loop
lcall
push
pushl
aaa
xor
mov
stos
inc
adc
push
in
imul
xchg
call
loopne
cs
das
lret
shl
pop
lds
popf
mov
cmp
aad
xor
rorl
inc
xchg
subb
fdivr
lcall
xor
addr16
sbb
mov
ret
and
lea
rclb
push
neg
out
rorl
push
and
adc
loop
mov
sub
shrl
ljmp
fdivrs
xchg
cmc
dec
inc
push
into
or
sbb
sbb
call
push
lret
mov
pushl
fcmovu
aas
in
outsl
popf
outsb
in
pop
and
xchg
dec
mul
mov
pop
decl
divb
jmp
pop
in
sub
xchg
push
fisubrl
int3
fildll
outsl
fstl
lret
and
mov
ds
incl
mov
scas
dec
sub
adc
in
aaa
aaa
sar
ljmp
jmp
and
lahf
sub
int
pop
or
out
jg
pop
movq
cmp
pop
in
fisubrl
mov
lret
lock
jmp
jb
les
mov
pop
fisubrs
xchg
sbb
out
mov
adc
dec
outsl
sbb
jns
cs
lcall
add
add
pcmpeqd
rorl
dec
xor
jle
js
pop
hlt
jg
out
int3
in
iret
clc
rcll
sub
xor
mov
sub
jmp
jle
shl
push
ret
ja
pop
insl
fadd
int
imul
fimull
or
or
je
in
jge
idivb
iret
xchg
movsl
fs
pop
repz
inc
incl
repz
xchg
jbe
push
cmc
jmp
pop
sarl
mov
aas
es
push
dec
jmp
xlat
xor
loopne
aam
adc
lods
cmp
stc
aam
lahf
cld
repz
sub
pop
popf
xchg
xchg
pop
lock
fstpt
xchg
movsl
xor
mov
sti
jmp
ljmp
xor
scas
pop
push
fbld
jle
inc
out
sub
hlt
sbb
test
dec
cmp
cmc
fwait
jl
adc
dec
in
lret
sub
jo
pushl
outsb
lds
push
loop
std
sbb
repnz
cmp
int3
pop
or
dec
lret
fldln2
sbb
popf
fcmovbe
pop
jbe
repz
fcomip
mov
std
push
lahf
cli
mov
fidivrl
rclb
clc
call
jl
hlt
and
testl
adc
mov
ficoms
jne
lods
loopne
lahf
inc
mov
jnp
out
mov
cmp
jnp
inc
mov
jmp
std
push
cmc
negl
in
ljmp
loop
ja
ror
pop
pop
sub
inc
jmp
std
jle
jecxz
test
push
push
mov
imul
fisubrs
aas
pop
push
imul
ljmp
mov
data16
mov
adcb
pop
les
das
nop
add
adcl
jg
imul
imul
jnp
bound
add
arpl
push
ja
jmp
jmp
mov
sbbl
clc
ja
pop
fmuls
cli
out
xchg
shl
push
add
nop
rolb
dec
aad
xchg
push
jmp
hlt
les
and
mov
test
xlat
jmp
mov
cli
out
fcoml
add
or
negb
cmp
jmp
std
mov
add
push
cmp
mov
sub
je
inc
cmpb
pushl
aas
fistps
dec
or
cmp
or
movsl
inc
inc
and
mov
mov
mov
xchg
mov
sti
xor
loopne
xchg
adc
inc
mov
jae
sti
push
lret
sti
std
inc
push
lret
or
dec
inc
inc
ret
ficoml
pop
in
mul
cmp
cmp
xchg
push
pusha
xchg
out
clc
fisttpll
adcl
out
mov
dec
xchg
mov
jl
scas
clc
sub
aad
in
jg
clc
mov
push
pop
jo
outsl
loop
mov
jmp
cs
test
ja
xlat
jle
lahf
je
dec
pop
out
shlb
jg
or
mov
test
mov
cmpsb
pop
mov
out
inc
ds
jmp
pushl
mov
jne
ljmp
adc
fists
int
jnp
rol
sub
icebp
call
cmc
or
sub
sbb
mov
fidivs
bound
aaa
outsl
push
xchg
cltd
fwait
dec
or
mov
inc
je
inc
in
lret
mov
imul
or
sbb
ss
cli
ret
mov
push
enter
decl
gs
imul
fwait
inc
cld
mov
cmp
mov
xlat
cmp
dec
out
adc
idivl
in
push
bound
mov
mov
cmovo
push
or
call
sub
sub
xor
mov
sub
daa
fdivrl
pop
cmpsl
adc
cmpsl
cmpsl
adc
or
and
and
ss
jge
enter
push
push
nop
pop
leave
mov
mov
lock
movsl
jae
pop
or
sub
adc
stos
dec
adc
imul
dec
out
stos
ljmp
lds
movsb
cwtl
movsb
mov
clc
mov
cmpsl
mov
xchg
in
sub
push
iret
push
push
lods
clc
and
filds
push
stc
in
jmp
mov
shl
out
dec
in
ret
call
repnz
ja
xchg
shll
cmc
js
pop
int3
nop
iret
xor
and
call
xor
cmp
cmp
stc
cmc
mov
arpl
jo
sbb
jmp
test
xchg
stos
pop
jbe
das
cmpsl
outsb
add
jmp
add
pop
adc
in
sar
loop
cltd
jle
jmp
lahf
sbb
scas
xor
jo
cltd
test
fsub
or
out
sbbb
jg
jmp
fs
mul
fildll
leave
out
data16
aas
cmp
test
pushl
icebp
sub
nop
lret
inc
call
fcmovnb
pushf
or
out
ljmp
cmpsl
clc
sub
fucomip
test
out
sub
xchg
pusha
in
or
and
movsb
or
dec
jle
mov
out
sahf
cltd
fistps
pop
icebp
jnp
mov
push
out
lock
jno
subl
xchg
sub
int
cltd
pop
ja
insl
cltd
cld
sub
daa
xchg
in
jmp
ljmp
into
and
pop
pop
adc
mov
mov
mov
jno
fcomps
push
decl
mov
mov
in
lods
xchg
mov
loope
lahf
xchg
adc
xor
xchg
hlt
in
inc
mov
dec
cli
and
out
jo
stc
dec
enter
sub
fbstp
cmp
cli
maxps
aaa
pop
push
out
sub
inc
adc
adc
call
lret
fiadds
push
push
ja
inc
sarb
sahf
xor
lods
xchg
out
rorl
jmp
sbb
and
daa
iret
loope
int
push
mov
mov
cmpsb
incl
in
add
ret
out
cwtl
mov
stos
nop
clc
in
jmp
call
pop
lods
icebp
or
pushf
mov
call
mov
add
jle
movsl
mov
in
stos
addr16
loopne
xor
cmp
incl
les
fimuls
sar
out
xchg
rorb
shrb
incl
jmp
mov
test
pop
repz
idiv
xlat
cmpb
nop
outsl
mov
lcall
mov
icebp
dec
loop
jl
out
pop
and
adc
pop
mov
das
cli
aas
xchg
sub
xchg
aam
dec
sbb
cmp
jo
sar
incl
pop
mov
xchg
pusha
mov
aas
mov
sub
jbe
out
cmpsl
cli
pop
sbbb
pop
sbb
js
popa
orb
in
outsb
push
cwtl
out
loop
sahf
fnsave
subb
bound
add
sahf
insb
lcall
adc
mov
mov
mov
mov
ss
iret
in
incl
out
xchg
sbb
adc
test
cmp
mov
out
scas
push
cmp
ljmp
inc
mov
sub
push
imul
xchg
aam
mov
adc
repz
jecxz
dec
inc
push
push
sbb
in
insb
mov
adc
stos
out
jmp
mov
xor
jg
movsl
adc
call
mov
push
mov
stc
mov
inc
int
lahf
mov
jge
in
cld
in
sub
incl
cmp
adc
stos
cmc
push
jae
ljmp
movsb
lcall
in
mov
lahf
mov
jl
aaa
shll
addr16
jmp
out
jmp
sbbb
adc
test
sub
loop
out
adc
test
dec
ljmp
cmp
mov
mov
in
leave
dec
fildll
popf
jmp
enter
rolb
out
cmpsb
out
insl
or
mov
sti
call
mov
clc
cmc
iret
daa
std
test
lock
push
test
adc
sbb
jg
pushl
dec
mov
hlt
popf
pushf
push
xor
decb
test
incb
mov
incl
xlat
mov
jecxz
jmp
icebp
cmc
fsubrl
add
inc
mov
push
lcall
jno
in
call
pop
cmp
scas
add
fcomps
jb
scas
lcall
or
sbb
negb
clc
std
inc
cmc
les
push
cmp
mov
test
pop
mov
fs
pop
mov
insb
movsb
call
mov
enter
incl
mov
repz
scas
clc
jecxz
inc
neg
in
sub
cwtl
mov
in
sbb
and
leave
aad
cltd
pusha
inc
lds
sbb
push
repz
mov
les
pop
add
inc
pop
mov
xchg
fisubl
jmp
lock
dec
es
jmp
bnd
shrb
js
jge
std
mov
out
adc
xlat
das
mov
hlt
fstl
xchg
mov
or
ljmp
xor
ret
push
cmpsb
cmp
leave
into
pop
sarb
and
sbb
daa
dec
xchg
jbe
repz
jg
sub
pop
mov
cli
jl
sub
cli
xchg
jmp
xlat
nop
xchg
xchg
call
insl
cld
outsl
mov
sub
lock
inc
xor
dec
imulb
inc
add
das
xor
arpl
out
cmp
adcl
mov
call
xor
mov
jmp
jnp
cli
cmp
ljmp
fdivrs
cli
sub
das
cmc
cli
arpl
hlt
testl
push
fdivrs
jmp
jge
sub
mov
cli
xor
mov
push
and
inc
sub
cli
in
dec
or
cld
mov
loopne
insb
pop
dec
fimull
mov
int
lea
pop
sbb
pushl
arpl
repnz
out
ss
inc
stc
loope
aaa
out
and
pop
fs
mov
mov
call
int
xchg
repnz
mov
clc
inc
ljmp
mov
mov
ljmp
cli
decl
or
adc
push
cld
in
mov
leave
inc
shrl
jmp
es
and
and
adc
pop
out
mov
xchg
fcomps
cmp
mov
xchg
xchg
call
js
push
aas
cmp
sub
or
out
out
iret
xchg
sub
sahf
sbb
jns
loope
jmp
in
xor
testl
pushf
mov
and
mov
jmp
out
pushf
pop
out
shrl
fstl
jb
mov
imul
dec
and
lcall
cmpsb
inc
mov
in
mov
pop
das
xor
call
push
push
pop
jns
mov
lcall
loope
jne
adc
clc
mov
jne
cld
cmp
rcll
idiv
ljmp
mov
lods
xchg
iret
cld
nop
inc
push
incl
xchg
std
dec
cmpsl
push
stos
jb
test
xchg
inc
enter
lcall
js
in
jno
mov
decl
test
dec
scas
mov
fcoml
push
icebp
jne
aad
dec
add
cmp
ljmp
mov
aas
into
sub
pusha
fnstenv
xor
je
add
inc
call
jmp
pop
mov
cmpsl
adc
and
xlat
cmp
repz
in
ljmp
sahf
rcll
lahf
pushf
inc
xchg
ret
or
inc
leave
shlb
sub
dec
jnp
cld
cmp
add
call
ret
jmp
test
add
mov
pop
xorl
pop
and
arpl
je
mov
popa
cli
divl
jg
and
ficomps
out
int3
xchg
ljmp
scas
xchg
pop
xchg
std
cmpsl
cld
inc
arpl
mov
pop
or
xchg
pop
or
mov
push
cs
fsubr
cwtl
ret
stos
add
mov
dec
call
stc
cmpl
call
xchg
das
jmp
jae
rorb
test
inc
mov
cmc
mov
test
ljmp
fildl
cmp
outsl
sub
pop
incl
cwtl
int3
mov
subb
xchg
cmpsl
out
cltd
arpl
lcall
into
in
testl
cmp
cmp
xchg
clc
jg
nop
and
scas
xchg
rorl
cmp
jno
xchg
inc
xchg
shll
and
jmp
inc
jmpw
cmp
int3
inc
mov
push
ss
lds
incl
pop
fistps
add
scas
and
shl
push
mov
pop
call
mov
sbb
jp
mov
cmp
cmp
call
jl
sub
xor
cvtps2pd
orb
or
pop
mov
das
xchg
icebp
dec
sbb
add
cwtl
lock
dec
inc
push
sbb
mov
xchg
xor
mov
pushf
aas
or
stos
xchg
xchg
xchg
xchg
lret
mov
scas
scas
lods
lods
cmp
lcall
movsl
movsb
mov
mov
scas
mov
mov
mov
mov
mov
iret
into
int
jg
sub
loopne
ds
les
into
mov
jmp
enter
iret
cwtl
ret
sbb
ss
test
repnz
sub
call
bnd
shl
jmp
cmpsl
fimuls
fdivp
mov
inc
cs
pushl
int3
dec
rorl
hlt
out
aad
mov
jns
jno
mov
ja
lret
movsb
sar
inc
or
aam
negb
sub
jo
stc
jno
mov
imul
jg
sub
xchg
add
ss
call
mov
out
dec
fsts
dec
test
iret
stc
cltd
mov
cltd
dec
repz
mov
push
out
movsb
inc
adc
mov
enter
lcall
mov
mov
outsb
call
xchg
call
popf
sbbl
icebp
pop
sar
imul
lcall
and
ds
test
mov
ja
jge
xor
mov
mov
lcall
hlt
repz
adc
mov
jl
test
mov
hlt
sahf
xor
in
out
lret
lock
cmc
out
inc
adc
pop
ljmp
cwtl
lcall
cmpsl
test
lret
js
and
xchg
loopne
lret
cmc
pushl
stc
shl
bound
in
pop
vmulsd
mov
cltd
insb
into
xlat
dec
push
mov
mov
clc
jecxz
sub
mov
repz
mov
push
dec
jne
xchg
test
pop
xchg
jg
push
popf
sub
jmp
mov
call
cli
nop
lea
call
mov
mov
mov
leave
pop
stc
clc
lahf
out
and
mov
ss
sbb
pop
ret
inc
clc
out
jg
ret
daa
push
push
lcall
int
xchg
inc
sub
xor
fisttpll
pop
es
gs
cmc
shr
inc
js
jmp
pop
loop
stc
and
loope
fucompp
adc
fdivp
jmp
xlat
mov
aad
jmp
mov
push
int3
pusha
push
popf
aam
or
ljmp
mov
mov
das
lahf
stc
daa
incb
das
lds
lcall
sbb
mov
mov
dec
adc
mov
inc
cld
call
ret
lret
lret
scas
xchg
cmp
inc
imul
fwait
nop
std
pop
push
movl
mov
cmp
lods
sbb
incl
fwait
mov
stc
nop
mov
es
shlb
jecxz
or
movsb
in
pop
inc
cli
jmp
cli
insl
addl
sti
fs
loop
pushl
cmp
popf
jle
or
stos
pushf
sti
mov
outsb
sti
nop
pop
ds
scas
push
mov
fidivrl
mov
cld
shrl
iret
aas
lret
mov
pop
std
push
pop
data16
fcmovnb
push
fwait
lret
jmp
insb
scas
push
fistpll
inc
out
rorl
insl
mov
pop
ja
addr16
cmpsb
cmp
js
call
or
cwtl
jecxz
shlb
outsb
xchg
mov
jl
dec
jg
jg
rclb
out
jmp
call
ror
out
das
stos
decl
xchg
xchg
sbb
cmp
hlt
fcomp
sar
jmp
xor
inc
test
je
pop
mov
mov
push
sub
cmpsb
mov
ret
out
iret
xchg
xchg
sahf
mov
mov
mov
mov
lods
jnp
fstpt
cmpsl
mov
std
and
popa
mov
mov
adc
cmp
mov
fwait
cmp
inc
sub
out
jl
jnp
and
sbb
mov
fcomi
dec
mov
cmp
clc
add
incb
xlat
icebp
push
mov
jmp
jl
push
jge
or
clc
repz
jmp
popa
es
jnp
lret
jp
addr16
push
dec
dec
lcall
dec
jb
inc
mov
mov
push
dec
jo
jge
cld
mov
ja
pop
aaa
mov
mov
std
les
pop
movsl
jb
repnz
pop
add
cmp
lock
lods
imul
fdivrs
sti
incl
mov
aad
or
aad
push
jo
xchg
push
call
dec
popl
mov
loopne
jle
ds
pop
int
mov
mov
and
add
fldcw
fnstenv
data16
jg
aas
gs
push
xor
jmp
pop
pusha
stos
inc
mov
mov
push
or
imul
bound
pop
fcomip
jmp
pop
xor
pop
imul
xchg
out
pop
or
arpl
ljmp
das
dec
xchg
adc
addr16
mov
je
adc
je
xchg
dec
daa
loopne
push
in
xor
xchg
int
ss
and
call
xchg
mov
sub
jmp
sub
fwait
pop
test
fldenv
das
lret
xor
testb
stos
push
shll
or
testl
jno
xchg
lahf
cmpsl
fnstenv
lock
imulb
push
shl
fwait
imul
call
mov
xlat
xchg
inc
incb
out
jo
insl
push
dec
lods
mov
jne
jbe
fmuls
add
dec
aas
cltd
ds
cli
int
mov
jbe
gs
or
lcall
lcall
cmp
push
lods
jo
mov
outsl
cmp
in
aas
ds
lea
in
daa
sub
scas
imull
fstpt
fwait
testl
sbb
ficoml
movups
decl
daa
out
nop
mov
out
mov
std
and
dec
loope
sbb
cli
push
in
in
mov
imul
ret
mov
scas
xor
outsl
incl
mov
loope
hlt
test
dec
xlat
fnsave
add
dec
sbb
lods
rclb
xor
cmp
push
jge
jns
imul
pushl
mov
cmp
in
out
subl
jbe
mov
lea
push
out
out
out
fstl
mov
ss
sub
or
test
movb
sub
rcll
or
mov
xor
add
jbe
dec
fstpt
lods
adc
int3
enter
insl
push
sbb
decl
mov
adc
dec
push
lock
ss
xor
adc
stos
ficoml
decl
in
popf
div
mov
addb
and
cmp
cltd
pextrw
loopne
shr
or
sbb
lea
adc
cwtl
mov
ja
cltd
in
push
jp
call
ret
add
sbb
sbb
sbbl
call
mov
push
jmp
or
nop
movsb
js
insb
outsl
jge
xchg
lock
shlb
pushf
xchg
aas
mov
lcall
lea
push
lret
mov
cltd
fwait
xchg
lea
aas
xchg
loopne
xchg
arpl
push
dec
out
jns
pushl
scas
or
ss
mov
stos
lcall
sti
sbbl
jg
cmpsl
lea
scas
ret
mov
mov
mov
adc
pusha
mov
xchg
mov
lea
xchg
mov
call
ret
in
xchg
ljmp
xchg
xchg
fisttpll
rolb
mov
mov
mov
dec
and
pusha
neg
rcrb
shl
fists
pushf
push
inc
mov
stc
arpl
pop
cmpsl
xchg
pushf
call
out
test
sub
adc
jno
dec
sarb
xchg
mov
jae
mov
cmp
ljmp
xor
inc
insb
shl
movsb
mov
call
decl
cs
push
mov
sub
loopne
gs
mov
pop
mov
lock
sbbb
int
cmp
and
out
sti
pop
imul
mov
shrl
daa
into
test
fmuls
cmp
xchg
stc
jne
decl
mov
idiv
add
icebp
xor
ror
jae
leave
pusha
mov
rol
sbb
lods
pushf
out
lcall
and
cmp
test
mov
mov
cli
in
jo
xor
adc
mov
ror
push
icebp
push
ljmp
in
and
lret
adc
sbb
lret
cmp
int3
inc
xlat
pop
clc
fucomip
loopne
pushl
or
pop
cmp
gs
or
jb
ljmp
loopne
add
xor
mov
mov
mov
mov
sub
mov
mov
mov
lret
cmpsb
mov
js
call
mov
mov
pushf
cmp
jb
jecxz
mov
stos
mov
lods
inc
frstor
mov
ljmp
mov
fistpll
push
je
movsb
ror
int3
sbb
in
fists
mov
dec
outsl
shlb
cmpsb
dec
sbbl
mov
cmpsb
sub
mov
mov
sub
cmp
jecxz
mov
push
pop
mov
lahf
mov
cmp
js
push
inc
inc
repz
xor
das
loope
call
stos
loopne
decl
fisubs
mov
xchg
out
inc
adc
lock
push
jo
mov
pop
leave
test
incl
pop
cmpsl
or
pushf
jge
lods
rclb
jbe
xchg
ret
js
dec
decl
ljmp
inc
stos
mov
idivl
idiv
shlb
std
decl
cmp
int3
or
scas
mov
ja
test
or
mov
inc
in
pushl
adc
dec
loopne
pop
mov
fcomi
lret
in
inc
popf
jb
mov
push
jb
cmc
cmc
std
adc
hlt
push
mov
lahf
pop
stos
ljmp
pusha
aas
pop
push
push
push
dec
mov
cmp
notl
sar
pop
call
jecxz
cmpsl
scas
out
inc
xlat
dec
sub
jmp
enter
jmp
scas
cmp
imul
cmpsb
pushf
mov
jecxz
pop
out
dec
and
leave
mov
and
mov
xchg
fistpll
rcl
ds
mov
decb
cmp
cmc
mov
xor
shrl
mov
ljmp
mov
pop
push
pop
adc
add
in
stos
xchg
aad
cmc
addr16
mov
add
pop
stos
testb
fdivl
ret
pop
icebp
add
sti
das
push
jb
add
cmpsl
adc
xor
adc
mov
xor
mov
test
incl
out
mov
shll
repz
jo
sub
inc
inc
xchg
push
std
lcall
cld
lds
xlat
dec
mov
push
pop
push
lods
loope
aas
dec
pop
push
cli
mov
sbb
mov
pop
mov
xor
inc
ja
mov
ljmp
adc
out
outsl
push
into
lcall
sub
sti
loopne
xor
sub
das
in
xor
in
sub
jl
in
lahf
add
cmp
inc
mov
ja
in
cmp
rcr
inc
out
jg
es
idivb
dec
lret
dec
jmp
or
stc
daa
fisttps
adc
adc
xlat
and
cmc
jmp
sub
adc
lcall
lret
dec
ret
ror
scas
sbb
adc
mov
dec
daa
ja
test
push
std
jmp
sbbb
lods
push
mov
sub
jg
mov
sub
lcall
sub
push
ret
cmpsl
test
out
out
out
xchg
jg
aas
push
or
enter
in
jb
fiaddl
mov
scas
xchg
mov
incl
sarl
dec
sbb
sub
add
mov
nop
jmp
es
icebp
addb
incl
lret
mov
push
shlb
or
jne
xchg
mov
push
in
lods
sbb
xchg
das
sar
fld
mov
dec
xor
repnz
and
xchg
loopne
sti
popa
call
cwtl
pusha
dec
test
xchg
pop
push
mov
stc
pop
sbb
cmc
test
sub
pop
mov
cmp
lcall
jnp
div
shrb
leave
sbb
mov
mov
hlt
popf
aaa
jp
mov
fisubs
pushl
or
mov
inc
mov
lcall
mov
cmp
sbb
cmpsl
adc
scas
loope
out
lods
fildll
cli
popf
sbb
jmp
xchg
cmp
xchg
jnp
popf
xor
subl
jg
mov
loopne
jl
jl
incl
lcall
imul
pushf
sbb
push
std
push
outsl
hlt
adc
cmp
out
jmp
pop
iret
int
sbb
scas
pop
loopne
jecxz
pop
jne
int
or
fcoms
jle
and
mov
call
popf
data16
je
cwtl
pop
fdiv
ficoms
mov
lcall
test
push
fwait
sub
jne
stc
dec
outsb
and
in
stc
int3
mov
mov
cmp
sti
test
inc
and
pop
or
popf
jbe
sub
iret
cmp
inc
stos
daa
jg
mov
pushl
mov
cmp
mov
or
psubsw
cmc
inc
dec
arpl
ret
pop
std
mov
fdiv
popa
cltd
mov
xchg
lock
push
xor
lret
sarb
cmp
aaa
push
sti
mov
mulb
stc
sub
lock
mov
outsl
sub
pusha
call
mov
lcall
jp
cltd
pop
arpl
popf
lods
loope
stos
inc
adc
in
call
loope
es
dec
les
ja
das
fisubrl
testl
fwait
daa
in
inc
mov
jmp
loopne
mov
mov
fsqrt
xor
jecxz
jae
inc
jg
sarl
sub
ja
add
insl
loope
fistpll
pop
jnp
repnz
mov
int3
xchg
pcmpgtd
sbb
lahf
mov
and
mov
jae
fcmovnu
pop
es
movl
stos
pop
jmp
aas
jne
xor
pop
ljmp
jmp
das
out
xchg
inc
and
dec
dec
mov
xlat
test
call
testl
lcall
xor
imul
out
fucomi
dec
stos
rcrl
or
cwtl
daa
dec
pop
in
outsl
mov
adc
icebp
push
lods
stc
push
jg
mov
incl
xchg
jp
js
cmp
sub
xor
leave
lods
iret
jnp
cmp
decl
or
push
push
and
cli
pop
mov
push
cld
xor
not
ret
pop
mov
pop
jmp
mov
cmp
incl
mov
out
lods
out
mov
pop
scas
test
ljmp
pop
loop
ss
cli
incl
push
scas
ds
cmc
mov
dec
sub
mov
add
mov
incl
push
sahf
dec
mov
jge
sbb
jg
loop
xchg
jmp
bnd
jl
fnsave
fwait
sub
and
cmp
sub
aaa
dec
fldcw
xor
ljmp
mov
mov
inc
jo
mov
pop
sbb
iret
push
fistps
out
inc
test
mov
xor
sub
xchg
repnz
lahf
sbb
xchg
std
fdivrl
jle
cmp
nop
scas
loopne
mov
xchg
inc
fwait
pop
pushf
jg
cmp
sbb
mov
dec
xchg
hlt
sbb
jp
pop
pop
in
jg
jp
and
push
fcomps
shl
daa
mov
repz
enter
std
dec
cs
mov
inc
fadds
test
mov
mov
clc
jecxz
ljmp
adc
fmuls
push
enter
adc
cmp
loope
sarl
mov
cltd
nop
out
jmp
repnz
scas
xchg
xchg
pop
mov
es
ljmp
pop
ds
incl
mov
fwait
add
push
out
xor
sbb
rorb
arpl
test
clc
pushl
cli
sbb
jecxz
das
mov
push
lods
lcall
jg
and
or
mov
jne
test
pop
and
and
adc
ljmp
and
addr16
ja
jbe
jmp
lret
cmp
pushf
sub
fldenv
mov
in
clc
xchg
xor
cmp
idiv
jg
testl
adc
outsl
cli
decl
mov
and
jbe
testl
mov
pushl
xchg
lods
outsl
mov
leave
cmp
inc
push
shll
data16
mov
scas
std
mov
jmp
not
aas
and
adc
stc
pop
clc
movsb
and
iret
mov
fyl2xp1
icebp
jl
stc
cmpsb
jle
js
jno
inc
orl
fistpl
sub
out
and
jmp
mov
ficompl
in
stos
dec
leave
test
test
xor
lcall
cmc
pop
imul
mov
mov
mov
sbb
loop
in
jmp
int3
shll
mov
cli
js
and
sbb
dec
addr16
or
mov
mov
enter
mov
sub
inc
repz
outsl
pop
imul
ret
xchg
mov
decl
mov
jg
call
loop
std
fldenv
pop
dec
aas
sti
push
hlt
lods
aam
cmpsl
xchg
test
ffreep
lcall
imul
loope
test
shl
cmc
inc
inc
jg
dec
fucom
cld
insb
in
enter
lcall
pop
cld
mov
lret
out
data16
lahf
jns
sub
cltd
ret
lock
flds
icebp
xchg
les
jnp
and
inc
gs
xor
jge
adc
jnp
out
subl
add
sahf
sub
es
jmp
xchg
push
cli
xor
and
inc
cli
jmp
mov
pop
xchg
push
dec
stos
dec
je
cs
clc
fsubr
jg
cmp
jecxz
sub
xchg
call
dec
mov
cmp
adc
test
xchg
adc
and
cmc
test
into
sub
clc
incl
lcall
out
lret
pop
xchg
or
inc
mov
gs
adc
add
mov
inc
cs
dec
sub
sub
lcall
mov
iret
or
fdivrl
xchg
movsl
pop
xor
rcll
fwait
inc
imul
cmp
dec
test
out
stos
dec
dec
mov
lock
ret
inc
mov
jecxz
cmp
cmp
pushl
pop
aas
sahf
push
lcall
loopne
mov
inc
ffreep
pop
mov
lods
in
scas
clc
jg
jns
imul
data16
gs
call
jbe
sti
jnp
xor
decl
mov
pop
jmp
test
sti
cmp
ljmp
bound
or
mov
and
jno
call
xchg
jnp
cmp
mov
xor
push
out
mov
and
mov
jmp
fwait
xchg
add
cmc
xor
xorb
fwait
aas
cld
jbe
test
jmp
cltd
call
pushl
mov
sbb
loopne
iret
or
xlat
jns
icebp
mov
js
mov
lock
ret
push
std
cmp
and
je
iret
pop
test
les
inc
decl
jmp
xor
jb
outsl
jb
lods
enter
jecxz
hlt
jne
fucom
outsl
cltd
int3
out
lock
nop
pop
jle
scas
cli
ljmp
pushl
sub
imul
in
adc
outsl
jp
ja
jmp
jmp
stc
sub
xor
movsl
add
std
sahf
and
cmc
mov
or
aam
mov
sub
jno
lcall
repz
sti
pop
inc
in
mov
mov
hlt
and
sub
call
jmp
xchg
hlt
push
push
fnstsw
pusha
add
call
jbe
mov
or
add
rcr
cmp
xlat
out
ds
push
lods
mov
decl
mov
pop
cltd
cmp
cld
out
add
jae
add
ja
repz
jns
push
std
push
add
lret
and
xchg
jbe
pop
loope
sub
lock
add
aas
cmp
js
out
movsb
into
lods
ljmp
jmp
jg
pop
pusha
mov
and
sbb
jns
sbbb
leave
dec
inc
clc
lods
les
xor
ret
cwtl
and
mov
movb
inc
inc
jb
jle
shl
sti
sarb
xor
lds
pop
ret
sbb
pop
call
mov
out
add
pop
jl
aad
shlb
push
mov
or
std
std
movsl
push
sbb
leave
lret
pop
testl
mov
pop
out
test
dec
jp
mov
es
pop
popf
cmp
inc
cld
in
lret
lods
cwtl
pop
out
mov
lcall
mov
fs
sub
loopne
ljmp
cmpsb
icebp
xchg
mov
cmp
mov
cmp
pop
and
pushl
sub
cmp
lcall
insl
push
xlat
sbb
xchg
stc
pop
js
std
decl
lock
dec
fistps
lcall
sti
scas
sti
in
clc
decl
or
push
aas
xchg
test
sti
lods
inc
decb
or
ljmp
jmp
cld
mov
mov
sbb
inc
movsl
icebp
push
clc
arpl
xchg
idiv
ljmp
xchg
mov
cmp
cs
push
xor
test
in
jmp
icebp
shr
test
push
lcall
sahf
push
aas
insl
movsl
outsb
js
loop
fistl
fnstenv
sqrtps
cmc
dec
test
lcall
dec
mov
inc
jle
ljmp
jb
mov
pop
dec
stc
icebp
push
dec
fsubrl
ljmp
jo
fcompl
pop
iret
push
sub
in
fstpt
mov
inc
cmp
scas
fcomi
outsl
mov
mov
pop
mov
jnp
mov
test
inc
lahf
lods
fsubrp
repnz
les
pop
hlt
je
xor
enter
pop
mov
cltd
out
push
jo
rorl
aad
sti
or
dec
jns
decb
jg
dec
loop
sbb
mov
inc
fldt
and
mov
jp
pushl
cmp
dec
enter
ret
aaa
adc
or
xor
clc
sub
jg
loop
stos
mov
out
sti
mov
fwait
push
enter
fnstenv
ljmp
incb
in
hlt
pushf
aam
fildl
enter
leave
mov
mov
sti
out
fiadds
lret
daa
dec
andl
repz
sti
dec
imul
mov
testl
sub
iret
dec
add
movsl
xchg
outsl
jp
xchg
pushl
std
jmp
mov
insl
orb
cmc
mov
mov
shll
push
decl
and
adc
pop
sbb
les
jae
fldcw
inc
xor
cli
mov
xorl
sub
bound
aas
ljmp
call
into
ljmp
aad
ss
loopne
or
push
ljmp
and
mov
ja
inc
and
daa
fdiv
dec
jns
push
mov
repnz
and
aaa
ret
lret
sti
xchg
loop
decl
mov
pusha
and
and
dec
in
push
dec
lahf
loope
push
mov
jmp
fs
repz
notl
and
cmpl
out
cmp
enter
push
into
sti
decl
pop
mov
cmp
je
dec
stc
dec
movsl
fsts
push
sub
mov
mov
rcll
dec
popa
fcomip
jmp
popf
icebp
enter
nop
in
push
movb
mov
in
mov
jno
mov
ljmp
or
sbb
sbb
les
pop
stos
stos
xchg
stos
pop
mov
clc
cmpsb
sub
mov
push
sub
outsb
insl
ja
xchg
in
cmc
cmp
adc
push
sahf
hlt
cld
decl
imul
out
sbb
push
std
lock
cmp
dec
mov
aad
mov
icebp
adc
pop
ret
dec
pop
cmc
iret
adc
push
es
pop
xchg
fistpll
push
push
or
in
cltd
outsl
js
lea
mov
sbb
in
jle
ret
jg
call
cld
pop
xchg
jg
pop
mov
jne
icebp
xlat
cmpsb
sbb
data16
cli
call
dec
stos
dec
lods
cmpsl
test
mov
dec
jg
ret
and
dec
sbb
ljmp
in
mov
repz
aad
cld
pushf
adc
sub
sbb
cmp
mov
loopne
or
clc
and
outsl
or
nop
lret
cmp
hlt
jbe
ja
fisubrs
mov
call
cmp
jns
dec
push
sahf
leave
int
shll
pop
call
stos
xchg
in
dec
outsl
das
ljmp
mov
mov
add
pusha
dec
mov
sahf
or
decl
pusha
testl
in
mov
fmull
mov
filds
push
pop
ja
sub
sub
mov
iret
outsb
lea
ljmp
cli
clc
pop
ds
jo
sub
shl
dec
fwait
jge
mov
loopne
dec
aaa
mov
mov
imul
frstor
jle
ret
dec
insb
pop
pop
jmp
sbb
or
cmp
pop
jb
push
hlt
ds
stos
stos
sbb
xor
insl
pop
fisttpl
sbb
repnz
incl
lgs
or
fsubr
or
cltd
xor
js
dec
push
and
ljmp
adc
xlat
ss
stc
push
jne
push
cmp
clc
lret
jno
hlt
ljmp
cltd
jbe
push
push
pop
dec
mov
xchg
test
fstps
bnd
fildll
or
out
adc
mov
fsubrs
pop
dec
dec
sub
inc
scas
cli
jg
loopne
and
cs
daa
jg
or
xor
xchg
notl
ljmp
jl
jne
shl
and
adc
mov
xchg
iret
mov
jmp
pusha
add
jg
pushl
and
push
call
pop
ror
in
sub
imul
out
movsb
test
aaa
shl
lret
loopne
cmpb
stos
popf
add
ljmp
cwtl
jnp
mov
aas
push
jl
imull
rcrb
mov
js
mov
inc
stos
dec
sbb
jmp
inc
out
out
test
hlt
insl
dec
adc
rcrb
push
sub
rcl
mov
pop
cmp
or
into
mov
pusha
jnp
lods
ljmp
clc
es
mov
xor
addr16
mov
xchg
jne
pop
jg
movsb
cmpsb
dec
mov
cmp
push
mov
sbb
lods
add
add
mov
out
mov
inc
icebp
decl
hlt
jp
jge
scas
adc
cmp
pop
cltd
in
je
shrb
pop
cmpsl
insl
aaa
jne
xchg
out
clc
call
adc
jge
daa
sub
adc
scas
mov
inc
jmp
test
sahf
xorb
jne
ja
cli
repz
fnstcw
fists
mov
loope
mov
cmp
out
sbb
jns
fldenv
stos
lds
cmp
jmp
cvtpi2ps
dec
addr16
add
mov
jecxz
and
cs
and
outsb
adc
add
add
push
mov
iret
arpl
mov
cwtl
dec
ljmp
xchg
xchg
sub
insb
add
fcmovu
daa
jmp
sti
aaa
lret
xchg
lahf
into
hlt
cmpsb
in
and
cli
decl
outsl
mov
add
aas
jbe
aaa
xchg
cmp
cld
xor
lcall
and
test
sti
mov
cmc
lock
testl
cmpsb
ja
int
mov
inc
ljmp
sbb
add
jnp
mov
sti
int3
dec
nop
cltd
loop
or
inc
push
jb
stos
inc
call
les
sti
xchg
ds
ss
jmp
jbe
test
jg
push
in
loop
jmp
mov
enter
mov
or
gs
xchg
lock
incl
sbb
inc
mov
mov
call
adc
jnp
call
clc
lcall
in
dec
pop
xchg
out
test
pop
mov
test
lahf
jmp
repnz
inc
jmp
pop
addr16
cmp
jmp
arpl
in
call
or
mov
insb
cli
pop
insb
and
call
mov
dec
fisttps
decl
icebp
and
and
enter
xchg
repnz
push
clc
cmc
jb
arpl
fimuls
aas
ljmp
addr16
xchg
xchg
add
push
mov
xchg
ja
add
js
je
jnp
xorb
sbb
unpckhps
call
cmc
pop
insb
jbe
lods
push
mov
xor
ret
jae
ljmp
jo
mov
scas
ja
and
mov
inc
fldenv
mov
call
push
lcall
xor
rorb
call
fisttps
loop
sti
jnp
iret
push
call
pop
repnz
add
pushl
cli
mov
out
jl
xor
fistps
jb
ss
mov
aad
pop
jns
les
pop
mov
das
outsb
enter
hlt
jns
mov
in
and
pop
fistpll
in
fcomip
push
mov
subb
and
insb
decl
outsb
add
mov
pop
lret
repz
mov
nop
cmp
pop
std
push
movl
iret
jg
sbb
inc
fsub
xchg
cmpsl
and
sbb
and
js
dec
addr16
mov
or
lret
inc
popf
sar
out
aad
fmull
pop
rcrl
fisttps
ret
pushl
mov
fpatan
ret
aaa
pop
ljmp
nop
lock
pop
jp
jecxz
xchg
mov
decl
mov
das
leave
cmp
mov
jae
and
xlat
rorl
lahf
std
lcall
lock
pusha
in
addb
sbb
jbe
xchg
xor
les
lahf
push
scas
cmpsb
hlt
mov
lea
pop
arpl
mov
sbb
cmp
orl
pop
jl
out
gs
je
jne
jl
pop
mov
add
pushl
std
pushl
nop
jg
out
mov
jae
loope
pop
aam
inc
repnz
mov
mov
loope
call
lret
lds
cmc
lea
or
mov
cld
pop
dec
sarb
cmpl
mov
out
and
call
ljmp
out
not
sub
fnstenv
decl
mov
pushf
pop
mov
shr
jb
inc
cmpsl
fwait
int3
and
in
cmpb
lcall
mov
adc
jle
out
sti
enter
aas
cs
shlb
inc
jge
push
push
mov
test
push
or
in
mov
mov
aam
cwtl
jmp
push
and
push
int
inc
lds
loopne
sub
call
in
addl
mov
ljmp
fsubl
call
jnp
mov
or
into
pop
sub
dec
rcll
push
js
push
jp
sub
jno
jge
jns
stos
mov
lahf
leave
mov
mov
test
pop
add
mov
cltd
lods
push
test
in
repz
in
lcall
aas
jecxz
inc
test
ja
shll
iret
bound
in
cmp
mov
lcall
jb
add
sbb
stc
pop
lahf
lea
std
rdtsc
int3
testb
adcb
xor
jle
loopne
jge
cld
adc
loop
clc
cmpl
push
cld
pop
xchg
jb
aas
clc
jae
inc
jp
iret
lods
xchg
idiv
in
sti
xor
test
outsl
into
cmc
cld
mov
cmpsl
sbb
ljmp
and
int3
mov
jmp
sub
xchg
jecxz
aas
pushf
push
stos
sahf
mov
out
push
inc
inc
addr16
cmp
sub
mull
pop
or
jle
out
mov
mov
call
ss
pop
add
inc
inc
outsl
pop
ds
pop
sarl
mov
jg
jnp
out
adc
xor
mov
jnp
fsubl
pop
loope
std
call
mov
and
jl
and
pop
cmp
ficompl
call
or
mov
rcrl
imul
rcr
push
sub
sarl
decl
add
jecxz
lahf
icebp
fildll
jmp
push
divb
hlt
ja
jecxz
enter
mov
inc
and
dec
call
push
inc
jne
mov
mov
xlat
push
xchg
jle
hlt
mov
mov
jae
imul
icebp
shll
mov
movsl
jo
xlat
ljmp
stos
push
cmp
inc
mov
jg
sub
out
ret
out
xlat
repnz
insb
add
fdivr
fcomip
mov
xchg
lret
fdivrp
mov
stos
stos
push
stc
es
decl
adc
jl
dec
mov
test
push
inc
aaa
xchg
fsts
dec
ljmp
sbb
xor
mov
xchg
outsb
lahf
pop
scas
inc
ljmp
add
test
cli
push
mov
dec
ljmp
and
mov
daa
decl
sti
push
mov
outsl
and
xor
mov
mov
insb
add
pop
mov
sub
lahf
ljmp
dec
cmpb
daa
scas
imulb
mov
es
cmp
movsb
daa
cli
fwait
jmp
int3
mov
lods
or
mov
xchg
dec
xlat
xor
mov
pop
test
std
fcomip
daa
into
mov
and
push
jmp
pop
sbb
lahf
xlat
clc
cmp
sbb
mov
pop
outsl
sub
mov
insb
or
mov
into
stc
cmp
stos
jae
add
jg
push
fdivrl
lock
test
das
test
call
lock
cs
xor
push
cmc
cmp
dec
xchg
sti
cmp
les
mov
dec
inc
pop
lcall
fwait
iret
add
mov
stos
data16
cmc
xor
clc
movsb
pushl
sbb
add
popa
shlb
jp
add
in
push
pop
jge
aas
mov
incb
cld
lcall
or
repnz
repz
sub
mov
mov
nop
loopne
call
mov
push
mov
sbb
cmc
jecxz
sub
push
inc
test
push
ljmp
push
clc
je
ss
xchg
hlt
mov
jnp
mov
mov
fstps
sti
test
push
mov
ror
cmp
popl
jle
push
lods
aam
inc
sti
dec
jp
jg
decl
scas
sub
mov
repnz
pusha
and
loope
out
mov
popa
dec
leave
lcall
jle
pop
ss
inc
mov
enter
add
xlat
push
rolb
mov
push
shll
pop
iret
xor
enter
decl
fmull
pop
std
clc
jo,pt
lcall
mov
sbb
incl
sub
scas
jmp
call
xchg
cmpsb
mov
push
fbstp
imul
jbe
jp
mov
jae
lcall
push
leave
out
ds
push
jnp
dec
xor
mov
mov
adc
push
inc
outsl
adc
mov
mov
out
mov
and
jecxz
jecxz
call
and
mov
pop
jecxz
cmpsl
lea
in
dec
lcall
mov
orl
inc
out
adc
jnp
cmp
imul
gs
jg
xchg
outsl
inc
gs
cmp
in
cltd
inc
fimuls
fcomi
mov
std
jnp
sti
jmp
push
pop
lock
sbb
xchg
inc
cmp
in
mov
repz
decl
xchg
in
psrlw
repnz
fldlg2
pop
cmp
bound
rcr
ret
leave
push
call
lahf
std
mov
sub
adc
sub
cmc
or
pop
adc
add
incl
lcall
int
ja
pushl
mov
inc
add
xor
movntq
out
mov
push
mov
cmpsl
cmp
fstps
adc
mov
and
pop
loope
sub
or
pop
sub
cmp
in
imul
subl
push
jno
lods
sbb
mov
es
loope
das
int
xor
std
ljmp
mov
pop
dec
xlat
inc
jne
or
faddl
decl
lock
in
das
pop
test
dec
jmp
les
sbb
dec
push
add
ljmp
scas
repz
out
or
cs
push
out
xor
xchg
jmp
mov
in
lahf
cmpsl
pop
ds
leave
mov
inc
fsubr
imul
negl
je
insl
cmc
rorb
and
aas
mov
lret
add
dec
mov
incl
xorb
imul
cmp
mov
mov
test
or
lock
ljmp
jnp
mov
push
push
inc
xorb
or
mov
mov
jmp
das
test
and
jne
add
mov
psrlq
or
arpl
enter
fcoms
test
pop
lods
jbe
mov
push
jmp
js
leave
push
in
mov
repz
or
cmpsl
popf
pop
sarb
mov
dec
inc
decl
js
sub
jle
cmp
scas
adc
dec
sub
jl
das
negb
jae
jo
subl
std
mov
and
sub
mov
cli
decl
mov
adc
ds
in
adcl
inc
jl
inc
idivl
je
jmp
pop
cld
xlat
mov
movsb
test
shlb
repz
mov
das
clc
lods
cmpsl
das
push
xor
sub
std
call
pop
data16
jp
pop
cmc
decl
mov
pop
cld
push
xchg
pop
stc
lock
push
mov
std
mov
test
jge
pop
icebp
sub
mov
stc
aaa
or
pushf
pop
or
scas
xchg
lock
ret
incl
loopne
mov
cmp
lods
imul
dec
cmp
inc
or
mulb
outsl
jg
icebp
shl
out
cmc
sbb
call
add
stos
inc
xor
icebp
int
mov
cmp
icebp
lods
stc
mov
mov
xchg
leave
cmc
stos
sbb
inc
daa
scas
test
ljmp
mov
jo
lock
repz
hlt
jbe
dec
jmp
imul
out
xor
mov
and
ljmp
jg
call
aam
pusha
sub
das
lret
push
push
pop
pop
sbb
std
mov
cmp
cmpsl
in
ret
mov
dec
mov
fsubr
pop
add
or
fidivs
mov
mov
push
fisubs
or
call
mov
lods
push
pop
or
adc
mov
cmp
cwtl
popa
das
aaa
shll
mov
sub
jl
cld
pushf
aas
leave
cmpsl
les
jo
cli
mov
incl
adc
sahf
lods
insl
sbb
pop
xor
insb
mov
sbb
faddl
mov
jge
lock
mov
jl
lds
mov
push
es
cmp
icebp
out
xchg
pop
ss
in
daa
rcrl
jbe
lcall
sbb
xor
fisubs
mov
das
in
loopne
dec
stos
bnd
in
std
jmp
lds
pushf
cli
int3
in
sub
mov
arpl
pop
ds
fists
add
aaa
xor
std
xchg
scas
out
push
jbe
insb
andl
jmp
out
in
xchg
and
std
outsb
movsl
xlat
sbb
addr16
aaa
mov
and
inc
loope
push
jl
sbb
call
cmp
cld
scas
adc
vpunpckldq
mov
inc
jns
lret
out
std
jo
cmp
js
sub
les
xlat
fcomi
add
push
sub
shlb
loopne
lahf
add
loop
adc
lods
lcall
aas
out
and
sub
rclb
sbb
and
pop
pop
xchg
fsubr
insb
push
outsb
inc
call
pushl
xlat
cli
psllq
fwait
cld
lret
sbb
jne
lds
ja
dec
clc
jmp
stos
mov
fdivp
fdivr
bound
pushaw
sahf
hlt
push
cmp
pop
mov
ud0
incl
daa
in
mov
pop
mov
cmp
adc
insl
sbb
adc
sub
nop
out
lock
jb
out
jne
pop
mov
xor
dec
mov
ds
adc
lods
mov
out
je
mov
lock
xor
push
out
mov
fisubrl
mov
mov
fildll
cmp
sti
adc
fs
inc
js
test
in
lcall
inc
popf
jmp
jmp
loop
mov
cwtl
inc
or
loop
add
mov
push
inc
fs
jg
ljmp
repz
jbe
stc
ffreep
out
mov
out
add
jl
fcomps
lcall
jb
iret
test
lahf
pushf
dec
psllw
cs
xchg
sub
mov
ljmp
add
in
ja
push
stos
inc
fcomi
in
add
mov
add
lcall
fnstsw
mov
push
mov
mov
adcb
sub
outsb
lcall
dec
adcb
or
mov
push
popa
adc
cld
jne
lcall
cmpsb
xor
xor
and
clc
mov
or
dec
sarb
fdivr
outsl
mov
int3
outsb
mov
filds
dec
cwtl
data16
jno
testl
comiss
push
icebp
pop
inc
xorb
jne
xchg
xchg
jp
or
add
imull
lcall
pushl
mull
cmpsb
xchg
and
ficomps
sti
adc
test
fs
je
dec
mov
sub
mov
jmp
lods
pop
sahf
incl
mov
mov
push
inc
popf
fisttpll
test
jns
test
jns
pushl
jbe
lret
jno
push
gs
cmp
ss
addb
leave
mov
aad
test
decl
xchg
mov
fwait
sub
and
not
cmp
add
pushl
ret
pop
pop
lock
mov
push
aad
mov
data16
or
shrb
decl
xchg
incl
repz
jmp
xchg
pop
jns
ds
xor
pop
addr16
jmp
inc
mov
clc
rcrb
fcomp
mov
adc
popf
fbstp
cld
mov
fmuls
out
mov
jmp
mov
iret
dec
loope
cmc
xchg
adc
mov
fldenv
adc
jmp
and
jecxz
pusha
loopne
cwtl
sub
adc
mov
loop
sub
mulb
ljmp
out
ret
adc
popa
xchg
inc
gs
jns
icebp
mov
clc
aad
stos
mov
ljmp
mov
cld
std
xchg
pop
stos
jbe
andb
out
sti
loopne
daa
test
push
pushf
insl
incl
insb
dec
movsl
push
dec
jle,pn
scas
xchg
mov
cli
adc
out
mov
mov
push
sar
jo
mov
push
inc
lea
push
lock
sbb
adc
jmp
sahf
stos
fdivs
insl
jmp
mov
stos
leave
xor
loope
call
sti
xlat
aas
mov
rcrl
cli
and
call
outsb
out
mov
roll
in
pop
fnstcw
repz
cmpsb
leave
loope
adc
hlt
push
mov
out
cmp
cmp
xor
pop
jns
fs
xchg
mov
inc
out
sar
jmp
bound
lock
out
sahf
sub
std
or
ret
clc
or
decl
dec
mov
test
cmpsl
mov
jae
pop
sbb
shl
cmpsl
lcall
lock
dec
popf
cmp
loop
sub
sahf
clc
jle
sbb
std
inc
adc
pushl
and
jmp
rcrl
negb
imul
adc
push
jge
jno
push
rcl
dec
mov
pop
imul
push
or
pop
cmp
sarb
stos
adc
insl
lods
int3
pusha
hlt
jg
test
mov
cli
pop
dec
xor
inc
imul
decl
xor
imul
je
mov
or
xchg
ja
lock
out
mov
cld
out
out
test
xchg
cld
sbb
fdivrs
movsl
hlt
mov
cmp
lret
aas
cmp
in
dec
cmp
sar
pushl
pop
adcl
or
push
into
jge
dec
nop
cmp
jbe
call
adc
jle
nop
mov
js
repz
or
div
cmp
call
aam
lahf
in
cmc
lock
out
push
sub
jnp
push
add
daa
xchg
and
sbb
fcomip
lcall
sub
push
js
ror
push
push
jg
rcrl
cmp
popa
sbb
sub
xchg
xor
cmp
ljmp
fldt
imul
movsl
call
sbb
mov
jle
xor
lcall
lcall
cmp
aaa
dec
incb
scas
mov
mov
andb
divl
fcmove
test
pop
dec
ljmp
test
pop
hlt
lcall
inc
std
push
data16
jg
enter
push
sarl
clc
pushl
cld
adc
inc
clc
inc
fistpll
and
pop
lret
in
les
movsb
sub
incl
xchg
jge
nop
jl
cli
cmpl
jl
lcall
enter
faddl
jmp
inc
cmc
data16
mov
push
int
add
mov
jne
test
aas
pop
jb
stc
sub
sti
mov
loop
pop
inc
call
xor
pop
jg
iret
insl
mov
xor
lahf
insb
fsubrs
sarb
incl
dec
std
pop
dec
out
sahf
aad
cltd
fldenv
aam
add
pop
mov
call
cli
push
hlt
jo
mov
pop
daa
cmp
out
insb
jns
and
dec
jle
lcall
rorl
out
lret
icebp
push
pop
mov
jno
hlt
inc
cmc
pop
stos
lret
imulb
and
jae
iret
mov
js
std
xchg
shll
or
lcall
fldcw
mov
loope
mov
xor
mov
xchg
push
das
adc
xchg
jmp
xor
cmp
lock
cmp
js
push
sbb
xchg
mov
js
mov
out
hlt
fadds
cld
decl
cmp
mov
daa
lods
pop
pusha
sub
out
int3
jl
imul
mov
imul
pop
into
fstpl
adc
jg
pop
outsb
adc
jg
outsl
pusha
stc
sub
xor
lock
xchg
or
push
pop
int3
adc
lahf
aam
lods
test
cmp
lcall
pop
in
sbb
js
sbb
loopne
jno
inc
pop
inc
inc
mov
decl
pop
repnz
mov
insb
mov
mov
dec
jnp
pop
pop
nop
adc
mov
lret
das
pushf
stos
in
xchg
clc
insl
cld
incl
sti
pop
push
xchg
cli
call
lods
repnz
fbld
stos
push
pop
test
jecxz
in
imul
lcall
adc
mov
mov
add
jg
pop
sub
call
jmp
popa
gs
jbe
push
inc
pop
cmpsl
lahf
stos
xchg
cmp
lret
add
sbb
jg
jmp
cmp
les
cmp
mov
cmp
adc
mov
dec
or
sar
out
xchg
faddp
arpl
das
xor
test
jmp
lcall
add
or
sub
sub
test
subl
negb
aam
idiv
jg
jo
rcr
fnstcw
int
cmc
cmc
cmp
lcall
xor
jle
xor
sub
xor
shrb
inc
mov
lret
mov
fsubrp
mov
icebp
call
icebp
jl
dec
aad
bound
cmc
shr
in
xor
aas
push
sarl
insl
fsubl
scas
into
sti
bound
pushl
inc
notl
stc
and
iret
divl
jp
stc
mov
pop
sti
lahf
sbb
in
inc
push
mov
mov
testl
es
ss
pop
fiaddl
sarl
aad
lea
data16
push
icebp
loope
pushl
lret
pop
cmpsb
fwait
rclb
inc
test
pop
stos
jp
adc
mov
inc
les
sti
cmp
nop
xchg
add
jge
call
mov
mulb
xchg
xchg
jb
pop
cltd
push
push
ret
fsts
cmc
lcall
sti
hlt
lods
add
in
jp
push
sbb
adc
loop
enter
pop
shl
stos
scas
mov
inc
push
and
mov
sar
jge
sub
mov
sbb
cmp
lret
lock
lea
xchg
xchg
fdivrs
mov
inc
mov
mov
lret
test
jg
push
mov
dec
jbe
dec
aas
mov
nop
leave
aad
jne
es
pop
cmp
repz
cli
aaa
dec
sar
clc
push
not
dec
pushl
out
push
jnp
mov
scas
xchg
repz
fcomps
lock
scas
lods
xchg
repnz
cmpb
pop
test
out
cmpsl
jo
lods
cmp
mov
adc
xor
cwtl
lods
das
pop
ficoms
add
mov
decl
fs
push
sbb
jo
sahf
lahf
mov
and
sbb
nop
loop
cwtl
popa
mov
xchg
clc
jl
stc
int3
cmp
jg
out
flds
pushf
aaa
cli
ds
mov
mov
push
lea
push
stos
movsl
test
mov
jne
outsb
pop
sub
mov
outsl
mov
xchg
jmp
inc
xor
sbb
adc
mov
inc
xchg
pusha
mov
adc
jl
mov
je
aas
push
repnz
mov
mov
scas
cltd
jecxz
jmp
hlt
call
std
ja
mov
dec
sar
int
imulb
xor
and
stc
dec
outsl
je
mov
inc
mov
call
insl
mov
mov
adc
pop
prefetch
jns
mov
mov
add
outsl
xor
mov
sbb
out
push
je
pop
adc
adc
bound
ret
xlat
inc
sbb
jnp
sub
notl
inc
mov
add
rcrl
out
push
aas
pop
rcl
loope
movsl
ss
mov
adc
cmp
incb
cmp
stc
mov
aas
daa
mov
mov
mov
mov
mov
sti
sbb
xchg
iret
jmp
dec
clc
mov
xchg
roll
push
mov
xchg
cmp
mov
std
in
mov
jge
jmp
jmp
cld
test
rcrb
sbb
mov
mov
stc
lods
xchg
lret
out
xchg
clc
out
fdivrp
pop
push
push
daa
jmp
mov
int
faddl
jl,pt
lods
push
out
std
call
jmp
mov
incl
mov
into
lea
cmpsb
mov
mov
fcomi
repz
add
jecxz
sahf
cld
andl
call
incl
lret
in
fisubl
push
jno
iret
icebp
and
xchg
inc
mov
adc
inc
insb
cmp
call
call
dec
fadds
in
aas
cld
decl
test
sbb
fidivrs
push
rorl
ljmp
xchg
incl
aam
jle
js
enter
cs
outsb
mov
sub
fidivrl
lcall
xchg
mov
xchg
add
bnd
xor
jmp
push
mov
mov
out
in
lahf
xchg
subl
sbb
in
or
inc
mov
push
jg
fiadds
lret
pop
cmp
and
jmp
mov
out
jle
or
adc
xchg
fstpl
popa
lock
call
push
iret
adcl
pushl
div
mov
and
inc
into
lods
in
in
test
sub
jb
rclb
mov
pop
mov
shll
out
rep
mov
mov
scas
push
int3
push
call
jg
jb
sub
icebp
mov
jge
mov
lods
push
mov
repz
inc
mov
in
add
jecxz
fucomi
outsl
and
jmp
push
xor
insb
cwtl
sbb
sbb
decl
in
push
cmp
orb
enter
cmp
clc
mov
add
call
dec
movsb
xchg
jecxz
dec
inc
sahf
adc
dec
jle
jno
js
ja
clc
mov
push
cmp
add
rol
int
add
pop
sub
daa
xor
mov
cli
xchg
mov
imul
aaa
leave
test
mov
faddl
ljmp
push
adc
shr
cmp
into
sbb
incl
sbb
push
mov
jae
sti
stc
jno
out
cmpb
and
jg
pushl
xchg
loope
loopne
cmp
sbb
cli
push
or
repz
push
add
flds
out
cmp
jmp
cmp
add
cli
incl
cmp
lods
mov
std
gs
and
ficompl
xlat
ss
lcall
mov
fstps
jg
in
xor
ret
test
je
pop
icebp
jo
fwait
fcomip
xlat
mov
mov
adc
ljmp
and
mov
cmp
push
idivl
cld
or
divl
xchg
hlt
cmp
pop
inc
mov
jg
gs
int3
test
and
testb
pop
outsl
test
stos
dec
leave
xchg
gs
mov
testl
test
ss
cmp
decl
fadd
fwait
xchg
cld
leave
mov
adc
maskmovq
cmc
and
mov
mov
call
aas
and
cmp
adc
mov
push
mov
stos
stos
mov
movsl
icebp
testb
mov
test
data16
fs
daa
std
jg
mov
sbb
es
mov
ds
lock
cmp
ss
jg
add
cld
xor
xor
stc
icebp
add
pushl
cli
repnz
pushf
or
mov
enter
ret
xor
repnz
pusha
ret
call
rorl
cld
push
je
icebp
fwait
lcall
jge
popf
flds
xlat
sub
outsl
push
aad
test
sarl
lcall
outsl
sbb
dec
jb
lock
stos
pushl
std
lds
repnz
das
lcall
inc
std
inc
fcomps
mov
clc
pop
in
flds
push
jnp
mov
inc
pop
imul
pop
decl
mov
pop
mov
sbb
pop
inc
mov
incl
call
xchg
addb
scas
fcomi
push
inc
jge
jo
jl
xor
mov
dec
rclb
sar
shl
jmp
mov
ljmp
pop
mov
mov
cwtl
aaa
js
rcrl
bound
cmp
fstpt
mov
pop
pop
sahf
mov
ljmp
scas
inc
mov
push
out
dec
sub
ficoml
mov
jb
or
out
jp
cmp
mov
inc
mov
cmp
mov
jno
fidivl
mov
shrl
je
call
jg
gs
push
jge
xchg
sbb
outsl
pop
xor
sbbb
testl
incl
mov
sbb
sub
sti
cli
xchg
sub
shl
sbb
ja
pop
cmovnp
pop
pop
mov
jg
das
sbb
adcl
xchg
ret
mov
jle
filds
jmp
iret
jecxz
decl
shrb
sar
insl
and
push
mov
call
mov
aad
push
mov
push
mov
cmp
inc
mov
push
mov
xor
jge
sub
cli
or
cmp
bound
shr
insl
outsl
bound
cmc
jecxz
mov
pushf
and
call
fsubs
out
xlat
das
sar
adc
movnti
out
inc
mov
pop
xlat
pop
pop
jmp
mov
jbe
xor
push
xor
sbb
cs
pmullw
stos
test
or
addl
aam
lods
pop
popa
sbb
cli
negb
cmpsl
push
mov
pushl
mov
out
inc
cmpsb
mov
repnz
insb
push
cmovo
fistps
into
aaa
iret
xchg
sbb
mov
into
and
lock
fcomps
shrb
insl
jo
cmpsb
lock
ljmp
sti
in
adc
ds
lret
in
jns
jno
or
cld
in
decl
mov
sub
push
stos
sti
sub
jno
inc
mov
incl
fyl2xp1
repz
dec
icebp
lcall
sbb
or
cld
dec
fdivl
dec
adc
ljmp
mov
dec
mov
push
bound
sub
shlb
push
xor
jg
das
pop
insb
test
cld
jl
mov
adc
xchg
cmp
call
pop
scas
cli
cmp
mov
jb
adc
in
movzwl
popf
pushl
or
push
xor
ds
mov
inc
mov
gs
mov
add
push
jp
repnz
dec
sbb
push
outsl
fcoms
pop
stos
xchg
and
cmp
movsb
sub
cmp
orb
shlb
scas
add
adc
mov
cltd
mov
pop
push
test
fwait
and
pop
dec
decl
inc
in
sbb
pop
push
mov
adc
xchg
xlat
cmp
pushf
mov
subl
ss
and
inc
incl
push
out
mov
les
scas
ljmp
fdivl
mov
jmp
push
sahf
call
push
push
pop
loop
std
shl
sub
ret
bswap
pop
ds
cmpsl
stc
push
fwait
xchg
inc
les
jmp
or
sbb
push
jl
stc
lret
cld
test
in
int3
shl
faddl
ljmp
sub
jle
pop
push
adc
jmp
mov
mov
add
xchg
jg
add
dec
cltd
add
mov
jns
stos
js
inc
jp
and
outsb
adcb
fsubr
inc
xchg
aas
mov
scas
jg
mov
mov
sub
fnstsw
fistpll
cmp
pusha
shlb
out
rolb
ret
mov
loop
mov
pop
pop
cld
cld
push
stos
jmp
outsl
test
jmp
shlb
cld
ja
arpl
subb
or
mov
pushf
shrb
call
xor
repz
sbb
stc
roll
stos
in
or
sub
adc
mov
mov
jge
mov
mov
hlt
pushl
jmp
out
js
daa
test
inc
cmc
out
sub
incl
mov
dec
xor
icebp
mov
lods
adc
and
call
jmp
inc
fsts
loope
jg
aad
stos
mov
inc
jbe
push
xchg
lahf
pop
addr16
in
lock
or
inc
pop
xchg
pop
jecxz
mov
stos
outsl
test
mov
cmpsl
sbb
mov
lods
out
mov
push
fistps
int
push
fwait
ljmp
ficomps
insl
jecxz
repz
xchg
mov
pop
in
ret
repz
out
dec
push
mov
mov
sub
icebp
fs
mov
sti
dec
das
aam
mov
mov
push
ja
aaa
xor
sahf
mov
fsubrs
cmp
mov
aam
push
xchg
xor
aad
lcall
out
sbb
loopne
mov
das
rorl
adc
movsl
mov
pop
filds
or
aas
stc
and
decb
hlt
fsubp
aas
xchg
call
movsb
daa
divb
and
stc
icebp
stos
inc
jmp
outsl
out
and
jmp
cmp
and
lock
clc
dec
out
stos
xchg
sbb
lods
fwait
shr
xchg
lcall
cmc
shrb
push
in
jno
stc
sbbl
in
dec
es
mov
call
and
mov
jbe
mov
loop
or
jp
jp
jg
and
loopne
dec
enter
xor
incl
inc
and
stos
int
cmc
push
icebp
out
jecxz
mov
push
das
mov
test
jp
insl
mov
lcall
mov
shll
movsl
xchg
add
cmp
mov
push
decb
push
push
dec
dec
inc
inc
pop
sub
mov
cmp
sub
sub
and
sbb
push
pop
or
fisttpll
imul
add
movsl
ds
out
xor
jg
xlat
ror
lret
jecxz
std
adc
shrb
insl
push
mov
inc
sbb
sbb
frstor
jnp
jecxz
int
cld
decl
adc
je
mov
outsl
dec
mov
pop
push
fistl
out
arpl
push
mov
repz
shll
sbb
outsl
xor
dec
cmc
insb
andb
xchg
lock
mov
push
push
ja
arpl
cmp
sub
adc
ret
fdivr
scas
or
sti
sbb
fistl
and
std
pop
movsb
xchg
mov
inc
adc
outsl
or
out
decl
pop
dec
add
idiv
push
or
std
lods
inc
fwait
lcall
repz
out
out
lahf
mov
lret
push
mov
test
insb
xor
in
std
repz
aad
dec
iret
aaa
repz
lret
les
faddp
lret
cmpsl
aad
add
call
pop
mov
mov
test
mov
xchg
mov
loop
mov
stos
in
mov
cmpsl
add
xchg
mov
fimuls
mov
fdivrp
ljmp
mov
repz
ljmp
sub
sub
mov
fdivrs
call
in
mov
inc
mov
push
dec
push
cwtl
mov
cmc
mov
cwtl
mov
incl
loopne
or
sarb
cmp
mov
popf
push
popa
fdivs
repz
daa
adc
stos
call
pop
sbb
mov
adc
loopne
pop
loopne
ds
jg
push
mov
and
jns
xchg
out
int3
fdivrl
clc
in
lock
jmp
leave
sti
add
loopne
sti
stc
mov
test
cmp
fcmove
lea
xlat
sahf
xchg
sbb
call
les
push
pop
dec
xor
dec
lods
test
xor
sub
mov
adc
sar
push
jmp
ds
loopne
out
cmp
mov
into
mov
in
in
add
add
into
in
ds
adc
pushl
outsb
mov
fsub
mov
adcb
out
and
lcall
aas
shlb
outsb
ret
mov
pop
in
rcrl
out
jp
clc
scas
insb
decl
dec
jge
mov
cmp
and
jmp
cmp
push
hlt
lret
sarl
xchg
cli
xchg
fcos
jmp
or
mov
insb
imul
mov
ljmp
pusha
sbb
jl
jnp
pushf
aas
jae
std
cmp
fs
jns
out
int3
inc
inc
roll
mov
mov
nop
cmp
int
adcl
adc
mov
inc
and
pop
ss
imul
aam
xchg
add
xor
int
shl
ljmp
ja
mov
xchg
iret
pop
out
mov
adc
sub
std
nop
pop
sar
jmp
xchg
jmp
pusha
xor
jmp
add
call
adc
mov
cmc
lds
inc
adc
lds
jns
sbb
add
mov
out
sub
mov
movsl
cwtl
mov
nop
mov
lea
int3
inc
cltd
cli
push
inc
adc
dec
fstpl
and
outsl
add
xchg
xchg
test
push
xchg
or
incl
sbb
das
inc
call
or
fmuls
les
movsb
inc
cld
decl
scas
test
cmpb
inc
adc
mov
jmp
jg
xor
cmc
xchg
or
adc
js
out
mov
mov
xlat
pop
fdivr
lcall
inc
enter
and
push
cli
inc
xchg
inc
mov
repz
lock
push
cmp
xlat
sti
out
ljmp
pop
jp
fcoms
cmp
sub
out
lds
lods
fmul
jnp
jae
inc
loop
jg
stc
and
testl
xchg
add
sbb
clc
fwait
push
xlat
push
out
inc
lock
stc
lods
scas
cmp
jg
mov
push
jg
cli
or
pop
stos
into
dec
push
sub
test
xchg
add
jg
dec
jno
test
add
xchg
fsubr
faddl
pushl
hlt
cmp
loop
incl
xchg
jnp
cmp
pop
mov
ljmp
push
sub
mov
dec
lods
add
push
xor
inc
push
dec
xchg
mov
and
jmp
lock
cli
push
pop
xchg
lcall
addb
pop
std
lcall
cmpb
fldz
es
lahf
insb
pop
xor
imul
sub
pop
fcos
fwait
cli
stos
sub
pop
icebp
incl
push
push
fistpll
xchg
das
mov
jmp
iret
push
adc
in
xor
clc
outsl
loope
mov
mov
jne
push
lods
or
call
lock
cld
lret
xor
loopne
dec
adc
in
repz
ljmp
mov
push
sahf
div
loopne
div
cmc
hlt
hlt
repz
call
mov
in
shlb
call
fcomip
in
mov
pusha
jecxz
loope
fstp
fcmovnu
repz
dec
add
sub
pop
cmc
negl
or
adc
kmovw
adc
jo
dec
cmp
mov
clc
push
adc
sbb
mov
xchg
popa
adc
cmp
imul
iret
pop
sub
and
lea
sub
cli
fdivrp
idiv
mov
icebp
stc
push
lret
fsubrl
jg
jne
fsubp
cmp
xor
cmp
mov
shll
cmp
imul
lret
in
cmp
inc
ljmp
lods
fldcw
mov
mov
push
scas
in
cmp
in
pop
adc
cmpsl
jecxz
xor
in
xlat
clc
mov
ljmp
xchg
loopne
movsb
push
ret
push
fistps
rcr
into
pop
inc
dec
fs
fcomps
ficoml
sbb
xchg
adc
or
lcall
aam
push
adc
lret
mov
cmp
daa
mov
fiadds
mov
sub
pop
cmp
dec
xchg
fs
sar
decl
xchg
std
dec
push
int3
sub
push
cltd
cli
in
es
add
mov
loop
or
inc
call
cmc
lock
sbb
pop
sbb
fmull
out
and
inc
pop
adc
test
push
mov
pop
repnz
jmp
int3
fstl
push
mov
arpl
xor
mov
stos
enter
jbe
es
push
call
rcrl
fnstcw
setb
add
sbb
push
mov
fwait
jbe
mov
mov
call
push
ds
popa
cwtl
imul
push
lret
test
inc
jp
add
ljmp
adc
lahf
das
ret
loop
or
jno
ficomps
add
sti
fnstcw
dec
negl
pushl
and
in
stos
sti
sbbl
mov
imull
dec
pop
mov
pop
sub
inc
xor
in
adc
stc
pushl
cld
jl
fistl
mov
lret
aas
leave
cmp
outsl
push
xor
das
clc
gs
lahf
inc
es
cmp
mov
js
mull
jg
or
mov
and
cli
sub
push
popa
cltd
inc
mov
insl
loope
jmp
iret
inc
pop
es
pop
mov
popf
and
inc
pop
inc
xor
and
fistps
dec
cltd
ss
add
icebp
arpl
and
jecxz
daa
fwait
gs
pushl
cltd
and
or
dec
pop
sar
ljmp
and
and
jmp
sub
hlt
xchg
sub
jg
test
jmp
stc
not
pop
ljmp
decl
lods
fwait
push
jmp
inc
in
dec
test
into
pop
xchg
mov
ja
push
stc
inc
pop
clc
push
add
das
dec
jmp
fbstp
loop
hlt
push
mov
jmp
mov
sbb
into
fildl
pop
inc
and
mov
sahf
mov
stos
test
lock
or
in
les
push
mov
inc
out
xchg
mov
mov
lds
std
clc
test
out
lret
mov
mov
cwtl
dec
jnp
push
cmc
pushl
aad
arpl
mov
hlt
mov
ljmp
mov
fsubrl
cwtl
shl
mov
les
add
mov
push
jg
ljmp
arpl
movsl
inc
mov
sub
addb
ss
xor
jne
mov
or
aad
out
mov
add
or
in
cmpsl
insb
lcall
bound
mov
outsb
fwait
mov
in
outsb
int
push
cmpsb
cld
xchg
mov
popa
dec
xor
xchg
jl
mov
xor
pop
xchg
mov
out
jl
jbe
out
cmpsl
dec
sbb
in
mov
imul
outsl
inc
outsb
jmp
mov
and
push
dec
push
mov
jmp
cli
loope
outsl
xor
fnstenv
movl
call
lods
adc
inc
loopne
cmp
pop
and
lds
cmp
out
les
std
cmpl
push
xor
mov
pop
cltd
call
sub
sbb
int3
cld
jle
in
andb
popa
imul
or
insb
mov
ljmp
cmp
decl
aas
inc
mov
mov
repz
push
insl
mov
cmp
jno
xchg
jle
dec
mov
out
clc
loope
aas
mov
dec
cmc
fldt
mov
stc
mov
loopne
icebp
cmp
mov
jmp
daa
ja
stc
stc
mov
mov
mov
pop
lds
mov
sahf
xchg
lods
mov
in
jae
mov
decl
or
xor
xlat
das
xchg
fcoml
mov
ljmp
imul
fimull
imul
mov
push
jmp
popf
pop
inc
lods
fxch
mov
dec
pop
cmp
push
push
test
fdivs
ja
outsl
xor
xlat
pushl
repnz
cmc
xlat
dec
cs
fldcw
scas
lods
sbb
aaa
movsb
or
and
out
andl
lcall
cmp
or
imul
insl
cmp
ds
mov
ljmp
negl
push
aam
fisubrs
mov
xchg
into
enter
ds
std
inc
mov
pop
std
lcall
pop
loop
ja
stos
aas
mov
shlb
adc
lods
mov
bound
call
test
mov
iret
iret
enter
shl
push
and
fldenv
decl
clc
mov
mov
pop
xchg
xchg
stos
imul
cmc
out
notb
cld
stos
mov
inc
jns
lcall
push
scas
xlat
cmpl
mov
sbb
popf
test
mov
lcall
stc
imul
hlt
lret
mov
rcr
outsb
shrb
cltd
jl
or
scas
test
repz
mov
pop
and
aaa
out
push
push
aas
mov
fs
mov
xor
cld
filds
mov
sbb
xchg
mov
mov
daa
daa
out
cmpsl
jg
mov
filds
inc
and
mov
pushf
mov
sbb
mov
pop
xchg
fimull
fldt
jmp
aad
mov
pushw
dec
fistps
sub
inc
mov
ret
repz
xlat
jmp
jnp
lods
nop
cmp
rcll
jg
lock
clc
inc
fisubrl
jl
roll
jge
sub
jmp
xchg
sbb
inc
xchg
push
into
mov
shr
stos
pop
fisttpl
pushl
imul
stc
nop
imul
lahf
in
sti
and
std
je
repz
pushl
fst
std
mov
jmp
jmp
jl
les
sbb
pop
push
addr16
sbb
inc
fwait
add
push
cmp
stc
sbb
cmp
adc
js
jbe
jnp
cld
sbb
addr16
dec
mov
sbb
in
mov
jno
sub
pop
mov
or
push
neg
sarl
cmc
call
stc
jecxz
sbb
mov
shrb
loope
mov
lret
mov
popa
pop
call
call
jmp
fbstp
icebp
dec
mov
adc
in
js
and
inc
stos
cwtl
adc
ljmp
pop
cmp
test
les
xchg
call
call
mov
orb
pop
xor
dec
out
cmp
lcall
pop
negb
lods
jnp
outsl
lahf
mov
cmp
push
jnp
rcrl
sub
stos
mov
jne
pop
jne
pop
ja
mov
ja
push
mov
mov
xor
mov
cmp
shrl
decl
das
test
je
nop
and
call
popf
dec
lock
out
stos
mov
mov
xchg
pop
dec
lcall
mov
mov
mul
repnz
call
sub
add
arpl
pop
fisubrs
fnstsw
or
pop
les
pop
and
xor
stc
sti
push
inc
pop
jns
adc
decl
pop
stc
ja
xor
popa
mov
xchg
xorl
dec
cmp
lea
sbb
addr16
mov
leave
icebp
xor
sbb
add
decl
mov
cmpsl
fldt
loopne
add
adc
scas
xor
fdivr
lcall
jnp
or
icebp
popl
xor
inc
or
xchg
movsl
outsl
stc
fcomps
call
into
insl
jg
push
or
stos
lcall
jno
mov
pop
arpl
adc
test
pop
ds
out
clc
in
cld
add
sarb
sti
inc
mov
iret
push
push
lahf
scas
hlt
sti
cmc
ss
mov
pop
out
clc
outsb
icebp
mov
xchg
push
lock
dec
int3
shll
incl
jmp
vprotq
or
sahf
mov
lods
ljmp
xchg
push
mov
out
lea
fisubrl
testl
enter
cld
out
imul
lret
fildll
and
sti
lea
jb
loop
adc
add
xlat
fsubrl
mov
xlat
aad
pushl
push
shll
pushl
call
icebp
dec
xor
sahf
leave
ret
bound
bnd
leave
mov
orb
out
or
loopne
jmp
cwtl
out
pushl
sub
in
sub
fwait
adc
pop
add
fbld
movsl
mov
mov
jmp
xor
or
jae
fisttps
int
icebp
lret
repz
cmp
ja
cmp
loop
push
fcomip
std
ret
rcrl
cmp
push
sub
inc
and
mov
push
pusha
lcall
mov
into
insl
add
jmp
lock
in
sbbl
or
xchg
insb
or
in
lock
adc
icebp
or
imul
jbe
repnz
add
jg
pushl
jg
adc
jbe
outsb
fdivs
sbb
pop
cld
xor
push
jne
ljmp
stc
rclb
push
inc
pop
cmp
jne
leavew
ja
cld
rcrl
and
xchg
mov
ds
add
push
out
iret
sbb
pop
xor
test
jle
push
jl
outsb
pop
das
das
decl
ss
testl
jno
incb
sbb
pusha
mov
adc
mov
dec
cld
shlb
mov
dec
sub
mov
jnp
rcll
test
fisttpl
sub
sbb
js
lret
dec
adc
iret
fdivrs
jmp
mov
dec
mov
mov
icebp
call
adc
mov
add
pop
inc
push
aam
sbb
hlt
shrl
pop
mov
add
add
aas
cmp
sub
jnp
push
add
ficoms
das
psubsb
xlat
mov
adcl
mov
mov
push
ror
jecxz
stos
jge
dec
add
mov
pop
mov
ret
imul
sub
decl
mov
scas
in
mov
xchg
jl
fs
sub
cmp
out
jmp
mov
jg
jns
add
out
pop
mov
enter
mov
out
lahf
lcall
fdivrl
add
aas
pop
inc
das
stos
in
repnz
add
leave
jo
sub
insb
xchg
push
mov
mov
cld
or
int3
lea
loop
add
sub
xor
imul
or
pop
lcall
inc
mov
lahf
gs
out
call
cltd
cmpsl
lds
jg
or
or
mov
jl
mov
mov
and
jg
pushf
cmovo
sbb
mov
lock
ffree
cli
addl
pop
jl
out
or
jmp
je
popa
jae
xchg
push
pop
inc
xchg
and
adc
mov
lahf
lds
ljmp
repz
pop
jnp
mov
cmp
lret
mov
cmpsb
ljmp
mov
lret
inc
lods
scas
mov
sub
jg
dec
cli
jle
xor
lret
dec
jnp
pop
jg
ss
cli
and
xor
int3
add
pop
jb
cmp
push
and
inc
lock
loop
lahf
cmp
jmp
mov
leave
inc
add
ret
repz
lock
decl
cmp
shrb
mov
stos
mov
frstor
and
or
les
jecxz
ret
jmp
push
clc
inc
shl
ret
nop
inc
scas
sub
inc
or
fcmovb
je
std
ljmp
lahf
dec
mov
sbb
inc
mov
sub
std
ds
jbe
dec
cld
ljmp
stos
mov
daa
xchg
push
lds
push
xor
push
adc
in
fnstcw
faddl
jmp
insb
int
nop
les
leave
cs
pop
add
xchg
fcomip
aad
sbb
cli
je
popf
push
lock
xor
mov
out
push
mov
sub
sahf
mov
push
subb
mov
xchg
jmp
jnp,pt
jb
cmp
and
pop
add
dec
jo
jl
sub
or
stc
cmc
xchg
jg
cmp
clc
cltd
jle
jne
xchg
add
and
pop
cld
cli
lahf
inc
dec
into
sar
jecxz
sbb
in
xor
lea
fdivr
jle
sahf
pop
add
push
call
push
lahf
adc
cmp
loope
push
sti
cld
mov
ljmp
and
ret
mov
cmp
in
pushf
dec
clc
dec
scas
pushf
mov
sar
cli
out
fcmovu
call
std
dec
jbe
xlat
mov
hlt
jecxz
out
jne
lret
in
adc
mov
in
scas
xor
jb
mov
addr16
aaa
std
cltd
cli
cmp
in
dec
mov
xchg
stc
imul
mov
neg
inc
pop
ja
inc
sahf
mov
lock
sub
xchg
ljmp
pop
cmp
xchg
lock
inc
icebp
and
iret
mov
int3
int
ljmp
push
pop
mov
xor
ret
add
sub
push
cld
call
xchg
fbld
insw
push
jo
iret
addr16
stc
jbe
fdivrl
mov
inc
ss
pop
xchg
bound
mov
aaa
cmp
inc
dec
mov
mov
mov
ds
inc
test
push
fiadds
dec
add
cmp
inc
push
xchg
das
jmp
mov
fidivs
call
cmp
lcall
xchg
xor
lock
in
aad
in
lahf
xlat
mov
std
xchg
pushf
pop
sti
dec
mov
enter
js
or
out
push
jno
sub
rep
dec
aas
jmp
xchg
mov
push
lahf
cs
dec
lock
addr16
mov
adc
mov
pop
ret
add
fists
mov
pop
std
pop
mov
pop
inc
mov
shrb
jg
ret
mull
les
fstpt
test
outsb
jbe
pop
jp
xor
cmp
jmp
mov
mov
mov
popa
bound
lock
daa
xlat
sbb
push
jge
ds
lock
or
inc
stc
mov
pop
adc
cmc
and
ljmp
fdivl
add
pop
jbe
in
mov
das
std
inc
jo
dec
push
xchg
cmp
fcoml
jg
fwait
mov
cmc
or
cmpsb
bswap
mov
xchg
fdiv
ret
ret
push
dec
stos
fldl
mov
insb
popf
fisubrl
repz
outsl
clc
sti
push
xorl
inc
into
mov
ljmp
cmpsb
sbb
xor
mov
shr
or
aas
lea
mov
mov
xor
rolb
lods
inc
or
hlt
into
push
jp
or
movsb
scas
xor
ljmp
jecxz
test
arpl
cmp
in
arpl
inc
stc
jl
iret
mov
shrb
mov
scas
mov
out
sahf
std
movsl
or
and
mov
imull
fldt
out
mov
push
mov
jmp
hlt
fwait
in
sub
pop
test
outsb
lret
adc
and
mov
xcrypt-cfb
cmpsl
in
icebp
or
pop
std
lcall
sbb
jns
pop
in
into
insb
mov
lock
in
cmp
fyl2x
cld
ret
and
pop
daa
test
jle
sti
call
pmovmskb
xchg
push
push
pushl
incl
das
lods
test
dec
or
dec
and
repnz
inc
outsl
call
iret
xchg
sub
stos
sarb
fnstenv
mov
arpl
std
inc
into
dec
in
sahf
jl
std
lcall
out
push
pop
mov
pushf
repz
pop
ljmp
dec
jae
jmp
decl
mov
mov
dec
popf
lret
mov
incl
cmpsl
cld
and
lret
out
lds
stc
dec
bound
loopne
or
ss
cmpsb
dec
imul
stos
fmull
xor
dec
ffreep
sbb
jmp
push
and
iret
repnz
pop
pop
loop
lods
inc
addr16
mov
popf
repz
fstp
insl
pushl
mov
cmc
pop
ficompl
jbe
jns
or
icebp
pop
mov
push
adc
cmp
std
scas
xchg
leave
out
sub
adc
hlt
aas
fcomp
sar
xchg
pop
cli
xchg
int
adc
pop
jle
nop
ss
mov
mov
std
adc
jg
mov
lahf
in
push
xchg
xchg
sbb
das
enter
lcall
mov
lods
jns
dec
test
out
mov
shll
xor
xchg
div
test
sar
fisttps
loop
nop
dec
into
aam
xor
xchg
pop
out
iret
pop
das
sub
hlt
mov
or
stos
sahf
xor
push
sbb
ljmp
das
jmp
out
pop
jbe
lret
inc
mov
mov
sti
dec
movsl
fwait
cmp
aaa
out
fidivrl
incl
addr16
int3
jae
loop
and
ds
xchg
jns
leave
mov
jmp
scas
incl
int3
cmp
push
pusha
cmpsl
pop
sbb
clc
xchg
leave
loope
dec
mov
addr16
mov
std
adc
add
test
test
in
pop
icebp
fcmovnu
subl
jmp
lea
fisubl
jl
bnd
mov
icebp
mov
jnp
pop
lret
cmp
pop
mov
inc
enter
adc
jnp
mov
test
jp
jmp
jb
mov
imul
cmp
insl
rorl
inc
add
adc
mov
mov
add
sahf
decb
jmp
and
fmul
jmp
jl
adc
nop
inc
xor
aam
out
mov
incl
rcrl
xlat
push
gs
dec
push
push
push
inc
arpl
xchg
sbb
fildll
dec
leave
leave
gs
jecxz
add
mov
andl
scas
repz
rcll
fldcw
iret
pop
mov
mov
mov
je
in
mov
xchg
push
gs
inc
cs
mov
call
cld
out
xchg
add
daa
out
xchg
sbb
pop
clc
mul
movsb
jge
outsl
cli
decl
add
jp
out
addr16
lret
xchg
idiv
jmp
rol
adc
xor
dec
lods
out
fwait
push
loopne
xchg
hlt
je
dec
mov
push
lods
pop
or
ds
and
sbb
jge
imul
sub
scas
cmp
nopl
jg
clc
test
lcall
out
pop
cld
adc
ficompl
dec
push
bnd
lret
decl
addr16
cmp
inc
shrl
mov
xchg
call
mov
inc
scas
xor
call
sub
shrb
adc
iret
fists
fcoms
mov
add
loopne
xchg
xor
mov
outsb
jge
add
in
dec
leave
iret
add
sbb
icebp
ret
lret
mov
fsubs
lds
mov
mov
sahf
xchg
pop
testl
mov
fldt
lea
xchg
sahf
xchg
decl
pushf
fimuls
test
addb
cmp
ljmp
outsb
lret
jge
ljmp
into
mov
pop
idivb
call
cmp
sbb
pushf
fstpt
movsl
nop
fdivrl
pop
add
enter
and
push
cmp
data16
mov
fdiv
lcall
pop
lret
mov
add
or
repz
fistpll
lock
rolb
push
xor
mov
popa
daa
sbb
dec
leave
ret
std
es
sub
scas
jl
sbb
mov
pusha
fs
jbe
repz
inc
dec
idiv
ljmp
mov
lods
mov
mov
dec
jbe
push
addb
div
ljmp
inc
std
jle
sti
int
jae
xor
negb
xchg
xchg
push
ret
mov
xchg
fucom
mov
jo
mov
mov
jne
pop
dec
xchg
test
inc
insb
sub
aam
add
call
and
je
jmp
pop
pop
je
sub
cmp
or
fisttps
cmp
push
test
repnz
mov
xchg
xchg
sarb
pop
sbb
mov
dec
xchg
lret
lods
mov
jmp
in
je
iret
dec
mov
clc
dec
movsb
mov
clc
out
add
xor
fistpl
jns
jl
jmp
idivb
add
mov
stos
stos
mov
sub
loope
sbb
cs
or
gs
ljmp
or
mov
cmpsl
adc
cmc
loopne
mov
cmpsl
jmp
jmp
mov
pxor
push
inc
loop
cmpsb
xchg
sbb
jmp
add
cmp
js
ficoml
in
cltd
pop
cli
inc
mov
pop
imul
fistpl
aaa
mov
js
xorl
out
xor
and
mov
xchg
mov
push
scas
adc
es
pop
stos
sub
pop
loopne
cli
jmp
push
ror
scas
jl
push
adc
xchg
mov
cld
and
sub
add
lahf
int
incl
es
jg
or
cmpsb
sti
mov
pop
std
jo
jmp
insl
dec
sbb
xchg
fwait
push
into
fmul
fwait
xchg
fcoms
pop
repnz
xchg
mull
sarl
xchg
mov
jo
xchg
lcall
lcall
fcomip
xor
cltd
sub
pop
lret
popf
stc
lods
xor
sub
lcall
lea
test
pop
mov
mov
sub
xchg
adc
mov
jmp
popf
out
xchg
jae
sbbl
push
imul
lock
out
inc
jle
mov
and
aam
push
stc
stos
rorl
dec
dec
hlt
loopne
dec
ret
or
push
mov
cld
jle
inc
jp
mov
jg
xor
popa
enter
out
das
pop
fucomp
mov
jae
fwait
xchg
std
xor
loopne
mov
cmc
cmp
cwtl
test
orb
cmpsb
cwtl
jnp
dec
xor
mov
sarl
mov
scas
dec
push
xlat
fidivrl
imul
lret
sub
stos
lcall
add
add
sub
xor
fucomp
int3
bnd
incl
jle
cmp
jnp
and
and
add
pop
rol
xchg
push
icebp
adc
jae
das
sar
mov
loope
adc
stos
xor
adc
icebp
decl
hlt
mov
cmp
dec
jne
pop
lds
movsl
shl
xchg
out
push
lcall
out
in
scas
mov
mov
push
leave
enter
sbb
lock
push
cmpsb
adc
movsb
push
jmp
aaa
ss
or
rcl
out
out
in
in
aas
rcrb
jle
in
ja
jle
std
cld
leave
jecxz
jg
pusha
jle
div
hlt
dec
xor
sar
jmp
adc
call
sahf
inc
rcll
xor
xchg
add
mov
mull
xchg
roll
mov
das
sbb
and
into
sub
call
mov
ret
testl
dec
arpl
inc
add
adc
and
pop
ja
jg
das
xchg
aas
xchg
out
lcall
dec
addr16
stmxcsr
addr16
cld
outsl
ja
jg
jecxz
out
in
push
push
notb
xor
mov
iret
ljmp
mov
push
out
add
jge
mov
mov
in
mov
jnp
fwait
shlb
adc
ljmp
mov
outsb
test
stos
in
jl
jge
adc
xlat
loopne
xor
out
dec
rorb
not
and
out
lcall
and
mov
call
mov
fldt
add
pop
mov
jmp
mov
cli
push
out
jge
adc
cmpsl
sbb
xchg
cmc
jno
int3
stc
jnp
stos
jge
in
call
fisttps
test
out
retw
in
add
sar
call
out
inc
jnp
inc
xchg
mov
out
mov
pushf
hlt
cmpsb
jb
and
pop
push
loope
in
cmp
imulb
lds
in
sbb
mov
inc
in
cld
iret
fisubrs
lahf
or
mov
jnp
jp
sub
cmpsb
push
rcrl
push
pop
fdivr
jo
pop
or
lods
jb
lods
ljmp
jnp
decl
push
or
cmp
push
in
enter
cld
dec
jle
daa
xor
jmp
lcall
mov
aaa
pop
add
push
cmp
xlat
movsb
jmp
sub
push
adc
mov
xlat
jnp
xor
roll
imul
mov
pop
and
pop
xchg
xchg
jg
inc
cld
int
lds
int
fwait
mov
inc
jp
push
fistps
pop
mov
cltd
pop
ds
xchg
int3
or
push
fs
mov
push
jmp
mov
aas
jb
stos
push
retw
cmp
push
mov
xchg
mov
out
rcrl
test
or
and
mov
insb
sar
in
clc
cmp
cld
fists
lcall
cmpsl
inc
call
cmp
inc
mov
xor
hlt
lcall
fs
pushf
jno
lods
jmp
xchg
mov
std
dec
push
adc
cmp
mov
sub
mov
shrl
push
das
xchg
pop
int3
cmp
or
add
mov
jge
lods
sub
mov
or
int3
xchg
mov
in
pop
sarl
out
adc
inc
cmp
inc
fisubs
hlt
dec
repz
std
out
cli
mov
sbb
xchg
adc
cwtl
mov
pop
cmpb
mov
es
push
pushf
scas
xor
jno
jge
clc
sbb
push
faddl
xor
inc
pop
cltd
sbb
xchg
mov
jmp
bound
aaa
addr16
inc
dec
or
test
sbb
mov
ja
lret
inc
jnp
mov
dec
call
iret
inc
mov
or
decl
fs
xchg
in
icebp
cmp
push
pop
ds
das
push
ret
rcrl
pop
clc
test
inc
xchg
inc
add
sub
je
mov
ror
inc
or
shlb
fadd
insb
fcompl
jp
jno
lret
xor
test
outsl
xor
inc
jbe
repnz
gs
lcall
cmp
push
and
jg
loopne
push
add
rorl
repnz
and
fstl
mov
sbb
mov
push
mov
cmpsb
mov
in
xchg
push
mov
fcom
and
mov
stc
and
test
in
daa
incl
pushf
mov
lds
pop
lods
push
popf
mov
lahf
outsl
fwait
hlt
stos
jl
pushf
xchg
int
call
clc
enter
cmpsl
push
xchg
fistpl
fnsave
icebp
cmp
inc
mov
inc
jne
call
mov
mov
sub
pop
test
aad
fnsave
mov
arpl
push
mov
in
addr16
ljmp
pop
arpl
stc
xchg
xchg
loopne
dec
gs
and
das
sarb
mov
arpl
iret
lret
out
inc
inc
xor
cmp
rclb
xor
jnp
mov
xor
pop
xchg
incl
cld
jbe
mov
jle
sbb
mov
std
popa
xchg
cld
pop
pop
fdivrp
in
adc
rcr
push
enter
jmp
jnp
adc
out
hlt
std
nop
xchg
incb
ret
stos
cmp
mov
in
jmp
movhps
cmpsl
sbbb
iret
outsl
jo
ds
mov
cmp
fldl
push
repnz
mov
test
test
pop
ljmp
mov
out
fcomip
inc
pop
ljmp
sbb
outsl
push
fwait
and
outsl
mov
xchg
add
cld
decl
lods
fidivs
stc
jo
mov
cltd
fists
jmp
icebp
lahf
xchg
cmpsl
xchg
js
movsb
nop
sahf
imul
into
mull
fbld
bnd
jg
imul
push
inc
idiv
sahf
pop
aad
cld
sti
xchg
pop
leave
clc
push
nop
jne
mov
xchg
mov
test
mov
jg
or
les
call
fs
adc
fmulp
out
pop
jmp
jbe
dec
fcmovnu
into
inc
iret
subl
inc
jns
fadd
push
loopne
gs
popf
cmp
call
lcall
mov
sbb
mov
push
int
std
ret
iret
insl
and
pop
xchg
jg
dec
je
sahf
sahf
rol
insl
push
pop
dec
push
cmp
or
sti
loop
ret
fsubs
lret
jp
mov
xor
xor
aam
mov
out
mov
lahf
cmp
mov
lock
cmc
popa
lcall
pushf
stos
dec
mov
sub
jg
incl
gs
fwait
loop
loope
ret
test
push
loope
lcall
into
fwait
lds
lret
cmc
incb
insb
and
pop
decl
inc
shl
rol
test
negb
mov
mov
dec
enter
mov
test
dec
adc
out
lret
inc
rcl
fsubr
mov
cmc
ror
fstp
xchg
sahf
mov
mov
into
int3
rcl
fcmovne
and
ljmp
cmp
mov
cmp
xchg
fcmovnb
adc
jno
ljmp
mul
scas
addr16
gs
xchg
pop
pop
imul
orl
loopne
jg
cmp
ret
ret
outsl
mov
clc
das
jl
lahf
ret
adc
popa
adc
jbe
xchg
and
ljmp
lret
loope
push
test
jl
cmc
pop
pop
out
lock
mov
ja
inc
inc
js
gs
jmp
ljmp
data16
or
pop
pop
jmp
and
xchg
add
dec
je,pn
sbb
call
inc
adc
loop
clc
cmpsb
clc
mov
divb
sub
decl
pop
inc
shr
dec
mov
int3
out
je
lock
lcall
cltd
adc
pop
and
cmp
push
xchg
fcomps
cmp
call
fdivrl
repnz
loope
clc
movsb
pop
cmpsb
jg
shll
sti
ljmp
sti
es
cmp
mov
popf
jnp
out
enter
add
out
cli
adc
cmp
mov
cmc
lds
lcall
in
xor
iret
clc
fbld
add
es
lcall
call
xor
ljmp
mov
sti
lahf
pushf
jnp
repz
dec
in
dec
scas
push
das
pop
push
call
pop
imul
in
scas
cli
mov
adc
sahf
clc
push
pop
lret
jmp
pushf
outsb
bound
movsb
sub
lods
mov
ja
das
cli
call
scas
fs
addr16
jne
lret
int
out
repnz
into
add
sbb
test
mov
sub
push
ja
lret
daa
dec
repnz
dec
mov
inc
outsl
repnz
int
dec
cmp
xchg
cmp
mov
scas
sti
mov
notl
ljmp
mov
leave
pop
mov
das
add
inc
lds
adc
ljmp
fcomip
in
jmp
xor
xchg
iret
fwait
or
test
mov
mov
pushl
and
jno
fbld
cmp
dec
lret
pusha
leave
lahf
out
push
enter
mov
bnd
clc
call
cmc
shl
cmp
fisttpl
daa
pop
xchg
xchg
mov
sub
jmp
call
mov
out
jge
xchg
mov
aad
adc
dec
pop
or
mov
push
inc
roll
lock
rcl
loop
jle
popf
inc
jo
and
int
mov
idivb
mov
iret
mov
call
cmc
lcall
jnp
mov
inc
xchg
cwtl
movsl
or
data16
cli
or
gs
inc
cmc
incl
in
shl
adc
xor
stc
in
xor
aaa
dec
mov
lret
fstps
and
les
xor
lcall
mov
gs
bnd
aad
imul
mov
pop
pop
int3
lret
xchg
aas
enter
hlt
decl
jecxz
fisubrl
xlat
mov
cmpsl
inc
cmp
outsl
pop
dec
clc
stos
pop
std
cpuid
mov
mov
loopne
mov
jle
mov
pop
in
xlat
stc
sahf
sbb
repz
jg
pushl
div
mov
xchg
mov
and
pop
rol
push
int3
mov
jae
cmp
fcmovne
fldcw
mov
pusha
xchg
dec
decl
ljmp
mov
sbb
xchg
imul
cltd
div
adc
jmp
dec
clc
fidivs
jmp
out
in
jb
int
mov
mov
ret
pop
adcl
xchg
insl
jle
mov
stc
xchg
js
stos
jne
ljmp
jle
xchg
mov
jl
test
clc
test
pop
out
movsl
jp,pt
outsl
sbb
js
ljmp
das
addl
cmp
rorl
mov
in
stos
subb
call
std
jmp
jp
mov
bound
jmp
pushf
pop
mov
jecxz
ds
decl
daa
in
xlat
mov
mov
icebp
mov
mov
das
and
nop
arpl
iret
adc
inc
sbb
mov
mov
add
fsubr
cli
js
imul
mov
cmp
mov
jle
push
insl
dec
jecxz
sbb
addr16
jg
mov
inc
outsl
shl
stos
in
jae
popf
and
xor
dec
call
incl
xchg
dec
fldenv
xlat
ret
mov
rcrb
decl
iret
mov
pop
lods
xchg
shr
jl
mov
and
outsl
mov
cwtl
inc
imul
adc
loope
mov
cmp
dec
incl
fisubrl
je
into
mov
out
mov
pop
pop
aam
dec
mov
negl
push
mov
out
ljmp
incl
inc
lcall
bound
call
adc
dec
xchg
in
sahf
mov
fidivrl
lcall
js
adc
adc
call
dec
push
lcall
cltd
pop
ja
cmc
imull
ret
mov
dec
inc
fdivr
mov
xchg
mov
pop
imul
ds
push
xchg
adc
inc
lcall
jo
cmpsb
inc
pop
inc
mov
jp
int3
xchg
arpl
xchg
or
idiv
mov
ja
stos
cld
pop
sbb
sbb
pop
jns
jg
loope,pt
loope
rorb
cli
push
cld
inc
stos
push
add
int
in
pop
lret
call
mov
cli
aas
les
mov
insl
icebp
cmp
mov
imul
inc
fiadds
shrb
inc
insl
xchg
mov
jg
lock
add
sarb
jb,pn
mov
jmp
mov
mov
stc
clc
cs
in
sti
in
pop
jb
and
outsl
jmp
cmpsb
jg
or
sub
cmp
mov
adc
dec
sub
jno
or
sti
imul
xor
popf
xchg
sbb
sub
out
mov
inc
cld
cld
leave
loope
cltd
ficoms
mov
das
lcall
ja
push
lret
pop
pop
aas
jle
int
xlat
lock
and
loop
mov
mov
loope
rcr
loope
fadd
cli
sarb
sarb
mov
cmp
mov
idivb
clc
in
fidivrs
test
incl
aam
mov
ja
clc
jg
xor
inc
xchg
mov
decl
and
mov
insb
push
xor
sub
jo
stos
cli
repnz
mov
xor
mov
mov
lret
scas
clc
shlb
xor
lret
lcall
push
shll
rcr
push
jne
xchg
call
scas
rcrl
stos
repz
sub
sbb
outsb
xor
lcall
sub
sbb
xchg
cli
xor
hlt
and
test
push
ljmp
stos
nop
loop
rcrb
scas
lock
push
in
jnp
cmp
push
sar
mov
rcll
es
mov
iret
and
fisttps
out
repnz
xchg
mov
pushf
repz
mov
idiv
adc
cmpsl
pop
in
call
dec
rcrb
jg
cwtl
lods
cmpsl
push
iret
mov
pop
jle,pt
loopne
xchg
notl
aas
sahf
jo
lcall
js
xchg
add
jae
sbb
sub
cli
push
loop
jmp
adc
adc
in
inc
dec
mov
xchg
jbe
push
out
push
insl
call
call
cli
cmc
sahf
icebp
js
sahf
std
xlat
xor
mov
scas
jecxz
cmp
repnz
decl
jmp
lahf
add
icebp
movsb
ds
add
sarl
xchg
test
dec
clc
call
movsb
aas
in
inc
dec
jb
inc
mov
sub
ja
loopne
pop
call
loope
out
incl
movsb
ret
dec
push
xchg
jae
inc
jl
mov
bnd
clc
aaa
xor
je
add
add
loopne
adc
subl
aas
cltd
mov
mov
jmp
push
fwait
pusha
stc
daa
xlat
jmp
jns
jbe
mov
popl
stos
insl
mov
add
std
ljmp
std
stc
std
aam
enter
repz
std
cmc
std
loopne
mov
cmp
enter
testl
pop
cld
decl
jge
inc
ljmp
dec
or
dec
mov
dec
test
or
loope
or
sbb
sbb
sbb
sbb
mov
and
mov
mov
sub
sub
mov
sbb
ljmp
enter
or
add
test
ss
xlat
dec
sbb
dec
std
pushl
fmuls
jnp
sub
push
adc
dec
rorb
jg
push
xchg
shll
xchg
inc
pop
push
ret
mov
or
xchg
ljmp
std
dec
inc
ss
stc
ret
adc
mov
and
mov
in
inc
push
push
dec
es
xor
pop
outsl
pop
sti
inc
pop
adcb
icebp
pop
adc
popf
or
out
mov
stc
imul
stos
inc
popa
jg
ficomps
adc
int
dec
clc
xor
mov
shll
sbb
inc
stc
lret
jmp
push
insl
add
call
loopne
ss
xlat
int3
stc
mov
adc
xchg
lret
rep
mov
je
fs
adc
adc
push
icebp
dec
les
pop
and
rcrb
push
ret
or
hlt
lods
mov
mov
mov
mov
jns
cli
mov
dec
dec
test
scas
clc
xor
pop
xor
iret
cmc
mov
loopne
xor
movsl
add
mov
xor
push
mov
incl
je
pop
cmp
std
mov
pop
daa
lds
mov
fisubrl
imul
cmc
fbld
stos
movsl
jmp
lcall
test
push
imul
stc
push
sti
insb
adcl
iret
ljmp
sbb
icebp
jbe
into
pop
hlt
lods
in
cmp
jecxz
call
notb
push
ficompl
sbb
insb
mov
movsb
imul
lods
mov
insl
sahf
mov
sbb
mov
out
shl
mov
mov
jg
lods
mov
dec
dec
cwtl
mov
xlat
in
push
cltd
mov
cmp
movsb
movsb
lcall
js
icebp
mov
outsl
mov
nop
shlb
cli
das
mov
test
mov
pusha
decl
ds
jnp
lods
sahf
arpl
clc
addr16
ss
push
daa
xchg
jno
rclb
inc
lcall
push
mov
insb
mov
call
fimuls
add
imul
jmp
jg
lods
pushl
xchg
push
jmp
mov
decl
leave
mov
sahf
cli
cmp
hlt
stc
popf
iret
daa
clc
xchg
out
out
cmc
es
sar
ljmp
clc
ljmp
fs
xchg
or
mov
push
stc
movnti
ljmp
jge
inc
andnps
das
rcr
sbb
popl
js
cmp
out
pop
in
mov
mov
testl
cmp
cmp
push
sub
or
gs
dec
out
clc
cld
std
add
shrb
shll
jge
incl
xchg
out
mov
xor
into
cld
test
aad
repnz
icebp
incb
decl
dec
push
idivb
incl
pop
mov
in
mov
flds
jg
call
inc
and
dec
dec
rorb
dec
es
pop
testl
rorl
dec
lret
dec
dec
cmp
jne
or
and
or
xchg
scas
pop
cmp
mov
cmp
insb
or
pop
pop
hlt
mov
fidivs
xor
dec
add
psubusw
add
cmc
decl
pop
sbb
sbb
xchg
pop
push
ret
xor
cmp
ja
ds
insl
popf
je
lret
sbb
mov
xchg
decl
stc
mov
andl
flds
jae
clc
andb
push
inc
sti
out
sub
ljmp
mov
pop
cmp
inc
push
test
push
dec
xor
pusha
mov
in
mov
or
pushl
fs
or
mov
and
jmp
and
sti
mov
popa
mov
cltd
push
stc
dec
out
jmp
and
push
outsl
popa
add
ljmp
push
dec
xor
movl
shrl
cwtl
xchg
sub
cltd
decl
xchg
jns
and
lret
jmp
iret
addr16
cld
jae
sbb
fs
ja,pn
lahf
adc
arpl
in
jmp
cltd
xor
fidivl
and
pop
fwait
or
mov
mov
inc
aas
and
daa
rclb
adc
std
jmp
movsl
push
test
mov
fbstp
nop
lcall
incb
push
sti
adc
jmp
ja
decl
jecxz
cld
out
mov
gs
out
xchg
mov
cmp
loopne
jne
mov
icebp
push
scas
aaa
fdiv
loope
jg
testl
out
cli
in
cmp
sahf
dec
in
jmp
xchg
out
jmp
mov
jge
ljmp
cmp
dec
aas
ljmp
icebp
xchg
call
add
add
pushl
shl
dec
jmp
stos
mov
or
sub
in
clc
jle,pn
std
jg
mov
fimull
push
xchg
add
sub
pushf
loopne
roll
loop
cmp
lcall
gs
fistl
aad
cwtl
add
clc
stc
xor
xor
xlat
test
adc
in
push
repnz
lods
push
cmc
cli
outsb
loopne
pop
mov
cwtl
outsl
cmp
fbld
dec
fdivs
dec
aaa
je
cmpsl
sub
or
aaa
sbb
push
pop
sti
call
xor
addr16
div
aaa
pop
mov
jmp
bnd
xor
out
push
cmp
ror
jae
ljmp
add
popf
frstor
jo
outsl
fisubl
dec
xchg
cli
cmp
aas
xor
cwtl
pushf
mov
inc
decl
mov
dec
xchg
stc
adc
xchg
push
xchg
inc
mov
or
lcall
incb
add
lret
ret
push
push
jns
fidivl
lret
mov
decl
testl
maxps
mov
push
addr16
pop
out
ss
cld
jle
popf
mov
out
imul
xchg
lock
mov
lock
clc
xor
xchg
loop
clc
into
xor
or
scas
movsl
stc
pop
jg
ljmp
int
repz
jg
jmp
fs
cli
clc
loop
loope
cmpsl
cld
in
movsl
fdivrs
push
cmpsb
ljmp
lods
in
xor
mov
les
clc
jg
insb
mov
sbb
lret
push
pushl
out
cmp
pminsw
jbe
daa
js
loope
or
cmp
lods
je
cmc
mov
cli
cmp
pop
fxch
outsl
aas
xchg
fisttpl
push
idivl
ficomps
adc
in
aas
jbe
lods
scas
bound
mull
mov
mov
decl
outsb
mov
movsl
das
loop
and
call
cmc
mov
mov
lret
loopne
mov
push
jbe
xchg
ret
ds
mov
dec
fsubrs
cmpsb
jecxz
cli
push
call
loopne
mov
and
in
out
scas
lods
xchg
mov
rcr
mov
aas
out
lcall
add
fmuls
jmp
lods
xchg
loopne
loopne
jmp
xchg
push
mov
mov
mov
lret
fldt
lret
sahf
push
mov
iret
fcomip
fbld
mov
inc
and
cld
fdiv
mov
cmpsl
roll
cmpsb
push
xchg
lret
rcrb
mov
ds
jle
aaa
inc
fdivs
mov
inc
xchg
cmp
pop
pop
fmuls
mov
sahf
scas
adc
stc
cmc
jbe
sub
in
call
daa
dec
aam
ljmp
rcr
cmp
gs
dec
adc
nop
fdivs
ljmp
jg
decl
loopne
pop
jnp
jle
orb
in
lods
and
jae
scas
test
out
clc
mov
cmp
adc
das
testl
sub
jns
fdivr
out
outsb
add
out
ret
add
out
in
pop
push
clc
es
divb
filds
push
pop
jg
cli
pop
adc
sbb
popf
test
ljmp
cli
mov
loope,pt
movsb
iret
inc
sbb
xchg
jl
push
sub
jge
cmp
out
mov
mov
mov
jb
or
pop
out
ja
test
ror
popa
xor
call
lret
pop
xor
sub
add
mov
lahf
jno
mov
mov
mov
or
push
mov
dec
or
jmp
cmp
sbb
loopne
adc
cld
pop
mov
out
outsb
or
sar
lcall
push
sub
cld
mov
ds
pop
loopne
into
shrl
mov
cmp
or
jl
sbb
push
je
lcall
fiadds
dec
jle
imul
push
mov
rclb
js
pop
ret
xor
jmp
mov
fsubl
jle
xchg
je
outsl
stos
aad
xor
mov
pop
lret
aaa
inc
pushl
push
sub
fsubrs
pop
xchg
gs
cmc
repz
jmp
leave
fwait
mov
pop
add
jmp
xchg
and
fcmovnbe
xlat
rcl
out
std
ret
sub
inc
dec
jl
sti
mov
int
inc
loopne
cmp
and
pop
xor
cld
lcall
lcall
or
nop
add
es
aad
mov
cld
pop
and
lahf
mov
mov
xlat
pop
call
aad
scas
mov
and
adc
dec
cs
jg
sti
and
mov
inc
cmpsl
testl
ljmp
sar
popf
xchg
arpl
aaa
adc
out
jle
sarl
mov
fiaddl
sbb
mov
pop
sub
repz
mov
sar
dec
std
das
clc
incl
xor
xchg
rol
int
lock
in
mov
out
outsl
mov
ljmp
decl
lret
mov
ret
lret
push
out
jmp
clc
lcall
or
ffreep
fwait
call
incl
mov
leave
xchg
inc
cmpsl
xchg
rorl
aam
inc
fistpl
imul
leave
jb
es
push
cmpsb
clc
xchg
adc
adc
jne
in
jmp
cmp
out
stc
mov
mov
cltd
inc
and
dec
or
xor
daa
xchg
out
cmc
mov
push
mov
and
fcmove
or
call
jae
in
cmp
cmpsb
mov
test
cmpsb
loopne
mov
xchg
inc
loop
jg
xchg
jp
enter
add
xchg
scas
repz
sbb
ja
into
pop
mov
mov
xchg
jp
pop
jnp
sar
pushl
lods
mov
push
call
mov
fwait
sbb
fists
arpl
sahf
in
lcall
cmpsl
jbe
cmpsl
jmp
xchg
lods
stc
aad
mov
or
xorl
fstpt
jmp
mov
jb
inc
cwtl
jb
jne
sbb
js
sahf
sbb
jb
jle
cmp
mov
push
jmp
fistpll
pop
nop
mov
xor
repz
call
mov
dec
xchg
jl
push
sbb
call
popf
pop
mov
addr16
mov
ljmp
sub
or
push
scas
inc
lea
inc
lahf
jb
and
mov
or
clc
jmp
xor
or
in
adc
jl
out
cld
adc
outsl
clc
cmpsl
rcrb
je
les
gs
xor
mov
test
add
outsl
xchg
pusha
dec
and
ljmp
notl
cmp
push
jge
sub
std
std
push
std
jecxz
sti
mov
sbb
stc
cld
sar
mov
decl
cmp
xor
sarb
xchg
sti
mov
ljmp
cli
mov
in
bswap
repz
test
or
sub
fcom
das
xchg
hlt
call
mov
and
data16
xchg
pop
ljmp
and
mov
pop
add
data16
mov
decl
pusha
mov
push
add
or
push
ret
mov
mov
pop
mov
stos
scas
sbb
push
incl
cmp
mov
ljmp
or
fstl
clc
outsl
mov
insl
andl
rorb
jbe
les
ljmp
into
data16
stc
repnz
into
mov
bound
mov
adc
inc
ljmp
adc
jns
sahf
mov
iret
cmpb
push
mov
sti
idivl
lcall
pusha
popw
xchg
mov
push
out
jge
cltd
push
cmpl
aaa
push
decl
jmp
fimuls
add
mov
nop
xor
jae
jp
xlat
lcall
cmc
pusha
pop
cmpb
cmovge
adc
mov
jg
pop
outsb
jns
jge
stc
pop
jb
test
scas
cli
jmp
pop
sub
mov
jnp
xchg
sbbb
stos
and
call
cmc
mov
mov
sbb
xchg
popf
mov
ljmp
mov
mov
decl
fldenv
repnz
push
or
in
mov
push
jg
mov
div
pop
stc
dec
cmpsl
std
out
out
jno
mov
inc
sbb
dec
sbb
mov
sbb
mov
cmp
stos
add
ljmp
push
cltd
xchg
cmc
lea
jo
pop
das
jl
sub
lcall
push
xchg
jnp
xor
mov
jmp
adc
repz
mov
inc
movq
ljmp
inc
pop
xor
mov
mov
sub
mov
lods
and
pcmpeqb
jg
mov
in
stos
test
outsl
mov
dec
mov
sbb
das
pop
aad
js
adc
mov
in
xor
in
push
fcomi
xchg
push
cmp
cmp
jmp
in
fwait
cmp
sbb
scas
repz
push
jl
ljmp
mov
jbe
mov
decl
cmc
jb
mov
xchg
rolb
loop
sarl
aaa
cmc
push
std
ljmp
je
mov
ja
int
fisubrl
cwtl
test
idivl
je
decl
sbb
inc
or
jle
cmpb
mov
inc
dec
repnz
or
clc
out
xchg
or
push
cmp
fsubrs
sbb
rclb
mov
add
lods
mov
xchg
push
or
ficoms
dec
cwtl
xchg
js
cmp
ljmp
sbb
pop
xchg
jecxz
jge
out
mov
cmp
std
inc
fimuls
cmp
arpl
icebp
aam
cli
test
sbb
sub
imul
dec
movsb
ljmp
jns
jne
fs
sbb
clc
inc
fsts
jbe
fstps
pop
loop
xor
pop
push
scas
add
xchg
hlt
sub
push
stos
es
aas
jb
mov
in
cmp
decl
fdivrp
enter
xorl
cld
out
pop
push
cli
pop
mov
fdivr
daa
in
xchg
jmp
mov
test
push
pusha
dec
out
stos
icebp
jmp
call
test
data16
jnp
and
loopne
fdivrp
or
stc
adc
les
shll
push
xchg
pop
icebp
ljmp
clc
adc
std
dec
cmp
pop
pop
or
sub
mov
push
jne
fists
out
lret
jl
sub
hlt
mov
popf
adc
decl
aam
leave
hlt
mov
fs
pop
loopne
repnz
lock
incl
mov
daa
push
int3
lods
jo
sti
pusha
outsl
in
adc
std
cwtl
mov
sub
or
lcall
add
pusha
mov
adc
es
addr16
jmp
and
cs
mov
ja
stos
jmp
pop
in
mov
push
shll
pushl
into
push
mov
jge
divb
push
lock
aad
lock
loope
pushl
and
out
into
in
jbe
sti
xchg
test
mov
cmp
mov
ljmp
movsl
cmp
pop
loope
jp
hlt
sub
shlb
decl
aad
pop
and
loop
mov
dec
jo
sbb
jg
fsubrl
jb
jnp
in
mov
cmpsl
push
mov
test
das
aad
inc
out
push
push
adc
mov
mov
xchg
and
and
jmp
mov
int3
jnp
xor
jmp
or
scas
jg
cld
sbb
ds
cmpsb
xlat
jl
ljmp
mov
insl
loopne
jmp
xchg
nop
test
notb
outsl
jg
sbb
jecxz
mov
or
out
push
push
addr16
ret
repz
mov
cld
push
int
dec
xchg
cmp
iret
lods
mov
jecxz
inc
inc
mov
loop
jmp
js
stos
xchg
pop
xor
outsb
ds
ljmp
or
ljmp
mov
push
sbb
mov
stos
ja
ret
test
jg
mov
lods
sub
out
incl
outsb
mov
mov
push
xchg
mov
arpl
fistl
hlt
aas
incl
insb
xlat
das
cwtl
in
sbb
xorl
mov
jecxz
inc
jl
lcall
inc
and
push
jecxz
mov
xchg
cld
daa
inc
mov
cwtl
daa
insl
ljmp
lcall
jmp
fxch
loopne
push
xchg
clc
insb
imul
jmp
dec
rclb
and
dec
sub
sub
rorb
test
cld
incl
mov
cmp
scas
data16
incl
dec
fnstsw
jmp
leave
out
stos
inc
repnz
add
cmc
push
cwtl
negl
lcall
or
hlt
arpl
lea
jecxz
pop
add
inc
filds
add
dec
mov
and
stos
add
out
push
stos
ljmp
lahf
popf
cmp
and
arpl
lahf
and
xchg
icebp
mov
pop
ret
mov
inc
call
ret
xchg
and
cmc
xchg
fmull
fcos
pop
fs
pop
cmpsb
pop
dec
lret
jge
rep
pop
xchg
jmp
out
cmp
leave
das
incl
iret
adc
sbb
pushf
mov
and
test
xchg
pop
xor
push
in
les
ljmp
ljmp
jle
add
push
repz
aas
cmp
ljmp
lds
jo
rolb
std
lock
lods
dec
call
jl
repnz
outsl
popa
sbb
lret
jb
push
jmp
imul
outsb
xor
cmp
in
jl
rep
fsubrs
adc
jbe
outsb
xchg
jae
movsb
dec
cmpsl
rol
idiv
incl
fimull
ljmp
scas
loop
loopne
stos
add
xor
pop
or
adc
out
and
add
xchg
ljmp
pop
mov
decl
push
pushf
adc
fdivs
cmp
fs
call
xchg
fidivl
int
ja
fnstcw
adc
in
hlt
lahf
sbb
sbb
adc
incl
notb
push
lods
das
push
xchg
cld
xchg
insb
pop
divb
sti
inc
pop
cmp
xor
pop
dec
mov
xor
mov
das
stos
testb
mov
mov
loop
pop
or
mov
hlt
outsl
stos
cld
test
push
sarb
pavgw
mov
fiaddl
xor
scas
clc
cmp
sub
xor
xor
ja
sbb
pushl
xchg
add
cli
cmc
mov
inc
call
rolb
inc
scas
in
jbe
sub
jmp
mov
daa
cld
repz
pusha
mov
mov
insl
stc
ret
lods
daa
inc
jmp
mov
lcall
jns
jl
test
cmp
xchg
or
clc
lret
ja
stos
jmp
inc
testb
ss
xlat
test
pop
xor
xor
rcl
mov
lea
aaa
add
jp
div
call
pop
movsl
jb
outsb
sti
insl
dec
sub
fbld
loopne
sbb
fwait
out
jg
ficoms
in
scas
mov
lock
mov
stc
aas
mov
stc
int
inc
jne
movsb
push
gs
movsl
sub
lahf
cs
fwait
dec
jecxz
scas
shll
cmpsl
sub
push
jbe
jns
cld
lea
iret
shrb
idivb
stos
jg
stos
test
sarb
stos
ja
incl
mov
push
push
shl
jb
out
mov
jl
lods
fstl
mov
lret
decl
cmp
push
mov
imul
jl
andb
pop
loopne
lcall
sti
imul
or
lds
mov
out
inc
xor
pushl
mov
cmp
repz
sarl
sarl
decl
cwtl
ljmp
mov
ret
mov
ret
and
mov
addr16
fisubl
cmp
push
out
fldt
sar
mov
push
inc
cmp
sbb
inc
ja
mov
sahf
int
mov
push
xchg
std
mov
fwait
sbb
adcl
call
and
jns
sahf
dec
mov
sbb
mov
je
inc
andl
leave
mov
out
ljmp
cltd
or
cmp
fwait
sbb
cmc
fbstp
push
decl
call
stc
testl
mov
mov
xlat
je
call
cmp
inc
hlt
rolb
fwait
mov
push
jmp
push
fnstsw
and
push
test
hlt
les
xlat
fisttpl
xlat
xchg
xchg
daa
push
call
pop
jg
in
jnp
movsl
fcomps
jecxz
jg
dec
lret
fcmovnb
mov
pop
in
pushl
adc
dec
scas
out
les
mov
in
loop
stos
inc
push
daa
and
ss
adc
out
rolb
decb
enter
dec
js
sbb
fwait
push
loope
lds
ljmp
mov
daa
mov
fneni(8087
lcall
mov
enter
inc
test
pop
repnz
push
push
in
sbb
mov
les
scas
push
mov
aam
and
ret
popf
xor
jnp
sarb
xchg
lret
cwtl
shl
ja
xor
mov
movsl
xor
and
es
ret
rorl
sub
jae
xor
std
lods
dec
mov
jb
mov
mov
lahf
xchg
xor
adc
push
mov
jecxz
out
dec
cmpb
pushl
mov
stc
cmpsl
test
cmpsb
movsl
jl
stos
jmp
stc
bound
cltd
jmp
pushl
icebp
sbb
cli
pop
jle
xchg
incb
aam
into
push
mov
mov
mov
jecxz
int
jns
jge
jle
sti
inc
test
jo
jb
mov
lock
lcall
ret
scas
mov
adc
inc
mov
lcall
jb
xor
imulb
fsub
push
add
pusha
cmp
sbb
cs
cld
push
rol
call
std
mov
cmc
pop
sub
sub
shl
test
sub
inc
xchg
cmp
aas
fucom
stos
fimull
iret
fcoms
cld
jge
ja
fs
xor
mov
je
add
mov
lods
lds
push
pop
aam
int3
cmp
setbe
jmp
and
enter
adcb
pop
xor
fidivs
add
adcb
mov
cmc
cmpsb
sub
inc
mov
jb
sbb
decl
mov
ljmp
int
std
jg
movsl
pusha
jb
stos
ficompl
test
mov
incl
pop
movsl
push
mov
xor
mov
es
add
jnp
addr16
cmp
pop
cmc
movsw
mov
push
cmpsl
pop
testl
ds
jns
mov
xchg
adc
xlat
and
cli
add
jbe
movsb
test
push
cmp
sarl
mov
add
ljmp
das
pop
push
and
popf
sarb
cmp
cmc
ljmp
divl
xor
stos
filds
ljmp
adc
decl
lret
push
iret
out
test
fsubrp
or
mov
cld
lcall
pushl
xchg
cmp
inc
out
call
hlt
add
psubq
jne
adc
inc
decl
mov
stos
adc
fbld
das
je
imul
js
ret
xor
sbb
jge
in
xchg
decl
adcb
decl
sub
mov
hlt
repz
scas
fildll
xor
cmp
cmp
sarl
inc
fsubrl
pop
and
rcll
scas
in
add
mov
insb
cli
call
cmp
mov
xor
fdivs
and
lahf
mov
outsl
in
dec
in
stos
test
sbb
mov
mov
movsb
xchg
pop
mov
incl
fstpl
dec
jg
lods
test
jno
pop
mov
mov
xlat
pop
cmc
incl
pop
xorl
test
cli
adc
xor
and
dec
mov
scas
xchg
sbb
sarl
mov
pop
loop
add
mov
xchg
or
jmp
mov
or
and
mov
ja
sub
das
xlat
ds
and
pushl
mov
jp
xor
aaa
push
gs
mov
aam
xchg
push
add
pop
std
xor
repnz
push
ljmp
incl
imul
xor
jl
js
in
mov
push
mov
cmpsb
jno
out
mov
ljmp
mov
pusha
call
fisttpl
dec
lret
repz
mov
sub
jno
adc
xor
stos
xor
test
jns
pop
push
or
incl
push
mov
ja
xchg
push
outsb
adc
pop
icebp
call
xchg
jle
test
xchg
mov
out
mov
call
push
fdivs
out
ret
mov
jae
add
in
xchg
leave
shrb
stos
shll
mov
and
cld
lcall
mov
mov
or
mov
jmp
jbe
loope
push
jmp
mov
cmp
outsl
mov
fisubs
push
sbb
movsb
imul
mov
xchg
repz
fwait
leave
add
cmp
insl
repnz
ljmp
cli
lcall
fsts
movsl
or
negl
or
cmp
dec
popa
mov
lds
in
mov
jb
movsb
fwait
mov
xor
lahf
fnstenv
mov
aaa
jecxz
mov
call
cmp
inc
stc
adc
add
fstpl
mov
movsl
rclb
mov
out
cmpb
ret
ficoml
jge
mov
sub
xor
fcoml
cmp
jmp
cmpsl
xchg
out
enter
js
outsl
pop
adc
push
xor
subb
mov
jmp
iret
repz
mov
ficompl
sbb
outsl
negb
xchg
sarl
fisttps
add
stc
stc
idivl
mov
inc
push
sub
rorb
cld
and
je
lods
mov
lcall
aam
lods
data16
in
daa
imul
push
enter
dec
jle
mov
jmp
dec
clc
iret
mov
sbb
lcall
or
jmp
sti
jmp
out
fdivp
in
es
test
repnz
repz
push
ss
idiv
push
sub
repz
pushf
dec
daa
insl
jb
add
mov
outsb
in
scas
clc
addb
add
mov
in
mov
ss
int3
fwait
std
xlat
test
decl
xor
xor
std
iret
jmp
mov
fists
jecxz
aas
push
pop
rcrl
cmp
pushl
push
test
int3
jbe
cld
outsl
outsl
pop
repnz
movsb
and
aam
jns
jg
data16
pushf
iret
push
imul
xchg
mov
mov
sbb
fdiv
or
ds
jnp
sbb
jecxz
fsubl
mov
sub
and
mov
mov
stos
and
cmpsl
cmc
jmp
mov
cmc
imul
mov
mov
call
sub
cli
popf
out
pop
mov
pop
loop
sub
mov
lods
push
lock
jns
bound
mov
dec
mov
cli
daa
in
ret
mov
pushl
cld
mov
mov
pushf
xor
dec
xor
or
push
jg
fimuls
lods
hlt
rorl
jle
mov
icebp
aad
cwtl
adc
ficoms
jg
lock
pushl
iret
pusha
fldl
fdivp
and
jae
add
lods
ljmp
sbb
lahf
pop
daa
scas
or
scas
sub
scas
jmp
dec
call
mov
fcomip
lods
mov
xor
sbb
sbb
idivb
adc
aas
imul
mov
paddb
dec
out
cmp
fisubrl
clc
inc
mov
cwtl
repnz
cld
pushl
ja
shrl
mov
cmp
arpl
shrb
cmpsl
mov
insb
sbb
sti
stos
dec
repnz
loopne
cmp
sbb
ljmp
inc
neg
int
sub
or
mov
jle
orl
sar
inc
sti
cmp
cmp
sbb
inc
xchg
in
movsb
push
insb
int
mov
call
idivl
idivb
repnz
sub
insb
mov
call
hlt
scas
pop
sti
ds
or
fs
outsl
jg
loopne
mov
rclb
lock
jp,pn
add
aas
pop
push
mov
jmp
lahf
decl
lret
pop
adc
les
push
push
mov
loope
leave
xchg
sahf
jle
enter
pop
icebp
mov
sbb
shll
xchg
sti
xchg
ret
lcall
sub
mov
and
in
inc
jne
lret
fdivr
jae
rcl
cmpsb
mov
ja
leave
pop
lcall
mov
hlt
add
outsl
fsubp
ja
cmp
test
lcall
fnstsw
cmp
enter
fisttps
les
int
lahf
imul
movsl
repnz
sub
movsl
add
cmpl
xchg
insl
ret
lcall
and
ret
lock
js
es
ja
out
imul
jne
dec
sbb
dec
mov
dec
out
lahf
test
xlat
cmc
xor
sahf
jns
jb
lahf
and
movsb
arpl
je
jno
cld
decl
xor
insl
decl
out
push
mov
xchg
dec
std
mov
not
xorl
and
sub
add
fiaddl
mov
aaa
std
mov
xchg
mov
xchg
jae
incl
fwait
mov
jae
ret
sbb
lods
shr
mov
loopne
hlt
lock
in
insl
mov
loop
mov
jecxz
iret
sbb
iret
mov
sbb
mov
rcl
mov
cs
mov
push
xchg
cld
call
add
jbe
int
jg
decl
and
adc
xchg
loopne
icebp
das
pop
or
xchg
jmp
cmp
sub
ja
adc
mov
in
mov
out
mov
scas
xor
jge
lods
push
mov
adc
adc
adcb
or
cmpsl
lahf
xchg
jecxz
cmp
inc
scas
xor
inc
mov
mov
subb
mov
scas
rcr
mov
enter
test
cld
pushl
lds
mov
mov
ret
ss
in
sub
inc
mov
xchg
push
mov
lods
cmpsl
add
mov
fdivp
xchg
imul
enter
push
sti
jle
cmc
das
stc
dec
dec
lock
cmp
ljmp
js
dec
jge
push
xor
jo
ss
mov
pop
mov
mov
lods
mov
frstor
sbb
inc
scas
sahf
mov
mov
nop
pop
decl
dec
mov
loopne
fldt
lahf
sub
addr16
lcall
dec
push
cmp
fwait
test
ljmp
repnz
sarb
cs
data16
jle
aad
shlb
dec
lods
sti
test
rolb
sub
jg
aam
pop
adc
stc
rclb
jg
jg
xchg
add
adc
xchg
incl
fdivrl
lcall
and
xchg
jl
std
std
adc
push
sbb
testl
cld
xchg
and
fidivl
jb
idivb
xchg
lcall
mov
stc
ljmp
dec
push
jle
jge
jg
adc
push
popa
sti
xor
pop
icebp
stos
andps
xor
push
call
sub
sbb
test
leave
mov
cli
idiv
pushl
mov
cmc
inc
loop
cs
jb
enter
outsb
mov
fisubs
and
mov
imul
sahf
xchg
mov
fimuls
adc
sbb
and
mov
and
and
adc
cmp
xbegin
xchg
fcom
out
fst
mov
sub
cmpb
jbe
stc
and
ljmp
ja
push
xor
mov
fsin
xor
in
aad
mov
pushl
cli
fucomip
ljmp
and
lods
stos
lods
xchg
in
mov
call
mulb
lods
cs
sub
dec
sti
cmc
sbb
out
repnz
add
lcall
mov
xor
ret
ja
decl
in
or
or
leave
jg
ret
jp
lock
pushl
pusha
pop
daa
mov
xchg
test
mov
pushf
jl
xchg
or
call
fimull
daa
ljmp
push
jle
leave
fwait
and
aam
dec
imul
ljmp
clc
pop
xchg
mov
rcll
clc
cmp
out
addr16
idiv
std
push
clc
insl
inc
mov
mov
outsl
mov
fnstcw
jmp
cmp
pop
push
mov
into
insl
xor
mov
jecxz
cmc
ds
xor
negl
push
sbbb
notl
fists
sbb
pushf
jbe
adcl
cmpsl
scas
out
out
pop
mov
mov
cmp
cmp
cmp
aas
inc
icebp
mov
push
xchg
inc
movb
jg
movsl
das
js
xchg
inc
mov
stos
cmp
pop
aam
popa
std
cmp
inc
nop
outsl
fdivrs
jle
sub
inc
sbb
fnstsw
in
push
cmp
clc
mov
sbb
dec
out
xchg
in
neg
jb
ljmp
push
or
test
in
pop
lock
aas
sbb
xlat
lcall
pop
js
out
inc
push
xchg
jg
outsl
cli
mov
jmp
in
pop
insb
mov
mov
mov
xor
mov
and
scas
leave
dec
or
pushl
lods
aam
mov
repz
fidivrs
mov
jg
in
jb
jge
call
shlb
pop
lock
out
sub
mov
jmp
mov
pop
icebp
pushf
fstl
andb
push
shll
aam
ds
jg
jp
sub
xchg
std
rcr
jns
cwtl
inc
push
fsubl
test
sti
popa
mov
mov
das
xor
and
outsl
jno
inc
out
push
xchg
fldt
decl
pop
and
xor
es
sarl
xor
mov
ljmp
divl
mov
incl
jno
jge
into
mov
neg
in
dec
mov
mov
imul
sbb
test
das
cli
ljmp
divb
add
fsubs
sub
xchg
inc
icebp
notb
decl
mov
cld
adc
out
test
cmpsl
inc
mov
cmp
jp
xchg
xchg
shr
stc
and
call
scas
xchg
dec
push
xchg
push
cmp
testl
loopne
je
mov
add
push
sahf
lahf
push
mov
push
jg
jmp
adcb
xchg
les
adc
data16
push
cmp
or
mov
push
xchg
subb
nop
ret
jg
cltd
stc
add
cld
cmp
mov
sarl
jae
mov
mov
das
push
jb
sbb
int
pop
icebp
pushl
cmp
lret
push
lock
cwtl
inc
jne
adc
movsb
pop
pop
jg
add
ljmp
mov
jbe
shrl
push
std
mov
mov
or
test
call
out
or
stos
mov
shr
cmc
xchg
mov
push
jo
sbb
jle
incl
push
adc
mov
mov
bound
mov
push
lcall
mov
dec
cltd
cmp
cmc
mov
icebp
cli
jmp
shrl
repz
jae
push
cli
decl
sar
aam
mov
scas
mov
outsl
mov
pop
clc
xchg
nop
jbe
inc
frstor
repz
sub
or
aam
sbb
aas
xchg
rcl
cmp
aas
mov
dec
jle
rol
push
out
lods
mov
into
imull
iret
ret
js
add
push
mov
shl
shr
mov
xchg
inc
cli
ds
clc
repz
xchg
aad
adc
sar
icebp
leave
fmulp
imul
icebp
xchg
xor
sub
mov
lcall
xchg
pop
fistpll
push
xlat
mov
jbe
push
nop
jns
lods
shr
incl
ret
pop
out
mov
push
scas
lods
ret
je
jbe
ljmp
inc
cs
movsb
movsl
mov
cwtl
dec
cltd
shll
dec
mov
mov
xor
out
mov
dec
leave
jae
mov
mov
push
in
fwait
adc
cs
ficompl
lcall
push
push
stos
hlt
int3
mov
push
movsl
pop
sti
xchg
push
sbb
inc
scas
std
nop
push
pop
xchg
cld
pop
pushl
sbb
inc
test
shlb
call
shr
fisttps
je
in
sbbb
std
xor
leave
cmp
popa
adcb
sub
ljmp
clc
xlat
jmp
jmp
scas
push
cmp
outsl
test
enter
xchg
sar
pop
inc
mov
mov
es
popf
pop
movsb
inc
xchg
mov
loop
pushl
adc
imul
stos
mov
out
adc
lcall
sub
aam
scas
mov
adc
repz
cwtl
rol
iret
xor
fwait
ret
xchg
ljmp
cmp
imul
aam
mov
fwait
bound
std
cld
sarb
cmpsl
ja
or
pop
xchg
call
sub
ret
and
out
mov
das
xor
mov
mov
ljmp
mov
or
mov
mov
idivb
ret
adc
inc
outsl
mov
mov
clc
aas
iret
out
cli
lcall
sti
arpl
loop
roll
rolb
cmc
incl
inc
and
std
mov
imull
inc
inc
mov
ja
jg
mov
icebp
mov
mov
ljmp
push
ja
cli
inc
mov
xor
jl
mov
lods
mov
ja
lcall
sbb
pusha
mov
fildl
insb
push
adc
adc
jge
aam
mov
cmp
pop
lcall
ja
iret
les
lds
loope
jg
add
mov
fwait
xchg
movl
lock
icebp
in
cmp
mov
xlat
dec
int3
add
shrl
js
push
cmp
repnz
int
mov
repnz
fxtract
jle
sbb
jmp
sub
stos
stos
addr16
rcrb
out
mov
shlb
out
cmp
ja
cmc
cmc
pushl
ljmp
fisubrl
popa
mov
lock
mov
ja
fidivrs
pop
hlt
fisttps
cld
mov
lret
fistpl
fiaddl
sub
pushl
jecxz
repz
scas
mov
shlb
cli
inc
push
clc
je
jb
jmp
push
and
jg
and
sub
lea
ds
cmpb
decl
lods
jl
or
push
push
sahf
ljmp
xchg
cmpsb
sbb
pushl
ret
adc
mov
fmuls
lea
int
in
mov
ja
shl
jmp
cmpl
lock
repnz
les
jo
mov
push
jbe
jb
fldl
mov
lcall
xchg
mov
and
insl
insb
pop
xor
dec
insb
jno
xchg
mov
nop
lock
pushl
gs
sbb
cmp
and
push
mov
push
sti
pop
mov
int
mov
movsb
sub
pop
sbb
mov
mov
stos
scas
pushf
cld
stos
sub
idivb
mov
scas
das
loope
jg
and
mov
idiv
sarl
incl
aam
cs
pop
mov
in
mov
icebp
push
cmp
mov
mov
sti
clc
cmp
xor
xchg
fucomp
push
outsl
adcb
xlat
adc
incl
push
int
pushf
scas
nop
cld
mov
repz
js
lods
icebp
out
pop
mov
pop
ret
aad
mov
std
outsl
cli
jmp
lds
mov
hlt
negl
neg
mov
call
cmp
rclb
call
imul
mov
mov
jmp
mov
xchg
scas
jnp
lret
dec
push
inc
sbb
popf
into
repnz
imul
add
jge
adc
inc
cwtl
cmc
in
mov
pop
mov
mov
imul
shlb
mov
lcall
ja
rorb
clc
lods
in
add
in
pushf
jg
sti
popa
mov
incl
ljmp
je
clc
sbb
sbb
mov
jmp
in
cmpsb
ljmp
fs
orl
xchg
rcll
xor
cmp
loop
dec
sahf
add
lods
insb
movsl
cmpsb
cmc
jae
out
mov
mov
sub
nop
ljmp
push
mov
pop
mov
push
cmp
cmp
fwait
jo
ja
mov
and
add
push
inc
cs
mov
cmc
mov
cmp
xchg
repz
call
jge
and
xchg
fisubl
jg
popw
aas
out
js
pushl
push
in
and
je
xchg
loop
lahf
and
adc
mov
adc
push
pushl
cld
inc
rcrb
cmp
xchg
xor
mov
cmp
shl
ljmp
ljmp
jmp
fdivrs
outsb
sub
jl
fsubl
std
cmpsb
mov
repnz
in
call
std
out
mov
adc
xchg
jmp
xor
in
jle
sti
aam
jnp
sahf
adc
js
mov
aam
jnp
repz
ds
xlat
inc
jnp
sarb
sbb
pushl
cld
mov
icebp
or
mov
adc
lcall
mov
ja
lret
sahf
mov
iret
inc
icebp
aam
and
sti
or
addr16
cld
and
xorb
mov
jb
lahf
pop
pop
jb
mov
push
sub
clc
jnp
xchg
sti
frstor
mov
cmp
imul
push
ja
dec
ds
cli
scas
lret
cltd
xlat
in
enter
fistps
dec
cli
sub
mov
rcrl
pop
sub
pushl
cltd
inc
inc
cmp
imul
lea
jge
cmc
push
pop
lret
in
pop
dec
test
fsub
jp
fldenv
test
cld
sub
test
mov
mov
scas
mov
clc
sahf
mov
inc
jg
xchg
adc
data16
out
mov
mov
int
jle
incl
push
add
push
jg
fwait
divl
aas
push
inc
sub
xchg
in
xchg
mov
xlat
push
repz
inc
imulb
fwait
repz
push
lock
lahf
das
ss
inc
cltd
sub
icebp
ljmp
cmp
mov
scas
cmc
out
xlat
ss
and
xor
mov
ja
movl
call
lea
popf
out
out
xor
lret
arpl
push
adc
fsubrs
cmp
sbb
jg
insb
out
inc
in
cmpl
mov
ljmp
ljmp
jns
cmp
mov
out
jl
and
shrl
pop
or
inc
out
jg
out
and
std
leave
lret
ja
aad
jecxz
mov
daa
in
iret
add
test
ret
mov
sub
cmp
mov
clc
dec
cld
aas
adc
repz
mov
clc
adc
add
ja
decl
xchg
les
insl
lds
ficoms
sub
mov
fs
decl
jmp
iret
pusha
sbb
xchg
iret
jecxz
lret
jmp
lods
call
pushl
mov
or
jl
pop
repz
repnz
icebp
adc
or
xor
rcrl
scas
call
std
and
mov
and
int3
push
cmpsl
push
fsub
cmp
call
ret
out
aad
aas
sbb
dec
lods
stc
mov
scas
sti
push
leave
mov
adc
decl
std
cmc
out
push
and
inc
sub
mov
adc
rcrb
out
cmp
pop
xchg
cmp
clc
adc
repnz
mov
jge
loopne
pop
mov
mov
mov
pop
divb
ret
mov
pop
lock
ret
push
jge
mov
dec
lcall
ss
lcall
cmp
repnz
xbegin
and
lds
sbb
mov
pop
sub
test
rorl
jo
push
pop
mov
mov
dec
rorl
fstpt
mov
cmp
push
arpl
das
lock
bound
into
ljmp
ret
pop
jns
ljmp
out
add
std
mov
sti
xor
mov
lret
lret
fmuls
cld
fbstp
dec
shrl
ficoms
aaa
push
sbb
jg
insb
pop
cmc
incl
xchg
push
into
cmp
xor
decl
lock
xchg
filds
inc
cmp
sbbb
push
dec
inc
out
pushl
and
icebp
jae
ja
push
pop
jmp
xor
pop
in
aas
pop
push
cmc
ret
xor
dec
and
xchg
add
jmp
outsb
jo
ljmp
inc
outsb
fwait
xchg
repnz
out
sahf
fnstsw
aas
mov
ss
fbld
lcall
call
jg
sub
mov
leave
jnp
psubb
sti
loop
mov
xchg
shrb
sbb
jmp
mov
aas
nop
sub
and
out
jae
aam
mov
mov
or
loopne
aas
sbb
adc
mov
adc
dec
xor
fs
cmp
test
cmp
mov
sti
mov
ret
lods
inc
insl
inc
arpl
mov
jmp
pop
lret
decl
lret
xchg
mov
out
cmp
dec
out
fldcw
push
data16
addb
les
addb
jno
iret
jg
dec
mov
aam
xchg
mov
mov
jge
add
incl
sbb
cmp
test
xchg
ret
cld
inc
sahf
jnp
mov
lock
incl
pushf
pusha
je
adc
jmp
xchg
cmp
adc
in
sbb
into
pop
imul
in
dec
loop
or
mov
sti
stc
mov
arpl
aas
dec
adc
xor
fistpll
lret
inc
or
mov
xchg
les
jecxz
jmp
cld
cwtl
and
int
sub
addr16
mov
mov
lds
ljmp
dec
xchg
jb
mov
pop
xor
ja
pop
adc
scas
shll
notb
cmp
lcall
jg
mov
pop
shl
cli
daa
xor
repnz
add
fdivrl
inc
imul
xor
fs
or
xchg
pop
mov
lds
jb
stos
dec
dec
aas
fmull
jp
add
aaa
dec
inc
sub
lahf
fnstsw
mov
ljmp
int3
pushl
cld
out
jge
outsl
jbe
pop
adc
jge
out
pop
dec
xor
into
or
jle
sarl
sub
in
xchg
leave
dec
and
cs
dec
outsl
jl
sti
xor
fnstcw
std
imul
les
pop
enter
fwait
sbb
in
mov
and
mov
push
cmp
shrl
mov
std
filds
inc
push
out
or
sti
dec
fimuls
call
xor
aas
sbb
sbb
push
inc
jbe
sti
rcll
out
pusha
cmpsb
out
sub
push
lahf
cmp
popf
push
mov
in
daa
pop
push
imul
cld
insl
mov
jne
xorb
stc
add
repz
int3
cmp
mov
ljmp
in
out
jg
push
addr16
repz
sti
xchg
adc
adc
out
adc
out
pushl
cmp
leave
push
push
xor
scas
test
das
in
mov
jne
jg
decl
jg
dec
pop
ds
sub
ja
aam
push
imul
ljmp
sbb
mov
stos
lahf
xchg
xor
mov
cmp
jo
inc
xor
lods
popf
cmp
ljmp
fdiv
sub
xchg
scas
mov
mov
ret
iret
loop
sbb
loopne
jnp
ljmp
in
jle
stc
sub
cmp
or
rcll
mov
shrb
frstor
call
call
orl
mov
fimull
pushw
dec
fwait
jnp
adc
push
stos
mov
lahf
push
jae
dec
pop
into
scas
mov
fsubrl
adc
sbb
rcr
mov
sbb
js
adc
mov
lock
push
std
mov
les
mull
push
xlat
cmp
fldt
mov
lret
leave
jae
inc
sub
xor
call
repnz
pop
decb
pop
lret
mov
adc
je
lfs
das
push
jo
xor
cmpsb
pop
mov
cmpsb
lcall
inc
nop
inc
es
lcall
shlb
lods
clc
dec
int
pop
inc
mov
mov
popa
lock
daa
movsb
jb
js
shrl
adc
stos
cmp
cmp
imull
cmpsb
call
loop
rclb
mov
and
stos
xchg
sbb
aad
aas
out
je
fisttps
into
inc
cld
mov
subb
dec
inc
add
incl
cmpsb
xor
or
jne
push
mov
stos
jl
in
mov
out
std
cld
repz
ljmp
popf
stc
shll
sbb
jae
mov
rcrl
mov
xchg
cwtl
inc
xor
sub
xor
mov
inc
inc
mov
sbb
xchg
lcall
notl
mov
test
je
pop
aam
push
push
call
rcrb
jno
sbb
push
sub
fs
loopne
add
hlt
xchg
in
xor
lcall
inc
scas
shll
faddl
sti
out
fcos
lcall
cmp
rolb
add
jnp
sub
fnsave
jp
dec
mov
ljmp
ss
lea
test
sahf
xor
test
aam
cmpsb
inc
mov
leave
into
mov
jmp
into
xchg
pushl
stos
rep
mov
xchg
xor
mov
shlb
jmp
add
decb
ljmp
mov
ret
sarl
sub
sub
mov
fildl
sbb
dec
pop
and
ljmp
lods
in
cld
in
ljmp
push
dec
shll
cs
fs
mov
loop
add
shll
sbb
or
pop
mov
incl
jle
cld
into
andl
xchg
mov
jmp
das
jno
ljmp
std
xchg
mov
icebp
rcll
stos
jbe
outsb
les
xchg
jmp
fimull
fisttps
loope
outsb
lock
jns
lods
mov
lcall
xor
xchg
bound
mov
dec
jle
push
push
push
jo
insb
idiv
call
loopne
in
in
ret
lock
adc
xchg
xchg
shll
add
lcall
gs
js
test
in
add
cli
xchg
ljmp
cmp
pop
push
xchg
sub
test
clc
cld
cmc
stc
push
cli
loop
lods
mov
push
mov
and
addr16
je
sarb
jmp
sbb
call
shl
cmp
sahf
xchg
xor
mov
xchg
in
dec
ljmp
push
sarl
mov
in
fcomip
call
push
es
inc
icebp
cli
fwait
sub
popa
fsub
enter
in
cmpsb
stos
xchg
filds
out
sub
sub
pop
rcrb
fiadds
xchg
xchg
cmp
pushf
out
jmp
ds
mov
les
fidivrs
pushl
sub
mov
out
mov
xor
stos
sbb
jmp
lock
push
out
sub
lcall
add
hlt
idivl
mov
jne
test
aam
mov
out
imul
cmp
pop
sub
divl
jns
icebp
loopne
mov
lock
incl
jmp
sub
aaa
daa
mov
sub
inc
pop
call
loopne
jb
enter
in
js
mov
xor
pop
xor
ljmp
cmpsl
fwait
cmpsb
xchg
repz
shlb
and
stc
push
xchg
test
fcomi
movsb
ljmp
adc
and
xchg
decb
std
dec
insl
jns
repz
jmp
xor
xchg
dec
pop
mov
inc
loopne
push
xchg
or
out
mov
jmp
jmp
mov
cmp
fsub
xchg
ds
pop
jns
mov
fcomi
jns
and
ljmp
cltd
mulb
jns
es
mov
stc
jmp
pushl
std
notb
fidivrs
mov
lret
xchg
mov
test
cs
mov
lds
inc
addr16
outsl
sub
arpl
iret
jp
mov
imul
sar
push
pushl
mov
mov
jecxz
mov
cmc
das
clc
mov
repnz
fs
push
loopne
sub
loopne
arpl
lcall
lcall
fcoms
sbbl
xchg
cmpsl
push
inc
mov
push
mov
decl
push
mov
pusha
shl
addr16
and
jns
popa
sti
inc
dec
jbe
sbb
ret
add
stos
and
in
mov
add
test
ficoms
jmp
or
sbb
jmp
xchg
jmp
or
jp
int
cmp
jmp
mov
mov
jbe
aam
call
andb
aad
divb
fmuls
fs
dec
lcall
jmp
xchg
test
stc
adc
aaa
fwait
inc
clc
lock
pop
jbe
pusha
shll
cli
or
sti
jbe
dec
lret
cltd
mov
call
ror
je,pn
cmp
ret
mov
xchg
mov
add
insb
pop
add
call
and
mov
mov
ja
outsl
pop
test
push
xchg
mov
adc
xor
jecxz
imul
sahf
pusha
ja
push
jno
rcrb
pop
aad
nop
mov
fcmovb
sub
scas
push
pop
daa
mov
in
cmc
pop
imul
fstpt
push
mov
sub
outsl
lea
inc
addr16
dec
jae
push
mov
lock
fwait
lock
cld
pusha
jae
fildll
cmpsl
sub
jnp
or
arpl
xchg
lods
mov
shl
cmp
outsb
js
out
incl
leave
add
push
jo
imul
outsb
pop
pop
cmp
enter
sub
call
jmp
pop
js
mov
inc
hlt
dec
sub
sub
xor
ljmp
push
in
shll
and
or
inc
pop
jp
cwtl
js
bound
fcos
rcll
loop
xchg
xor
cmp
jmp
decl
insl
je
arpl
cmp
fbld
int
or
push
pop
or
mov
jnp
in
fists
jmp
sub
ljmp
lahf
rclb
jl
call
mov
push
and
lea
jnp
outsl
js
cmp
sti
imul
add
inc
mov
ja
jg
imul
xlat
add
dec
push
ja
incl
push
icebp
out
sbb
pop
or
dec
xlat
fisubl
out
out
movsb
ljmp
mov
xor
aad
pop
mov
call
or
push
mov
imul
stos
decl
repnz
lds
mov
pop
jns
orb
and
clc
lret
jecxz
inc
jecxz
jmp
lret
xlat
loope
sbb
lahf
sub
jg
adc
aas
cmp
jbe
fidivrs
jmp
fistl
and
sub
test
loop
lret
xchg
mov
sbb
fcomip
sbb
rcll
repz
xlat
in
dec
pop
dec
dec
jo
fsubs
in
jmp
clc
jle
sub
scas
adc
dec
xchg
dec
mov
pushf
mov
and
jmp
roll
jnp
jmp
or
in
jge
push
rcrl
adc
mov
stc
push
outsl
mov
pop
jmp
push
jle
and
dec
cmp
xchg
lock
and
or
movsb
arpl
push
pop
pop
mov
lret
sti
xor
mov
icebp
mov
call
cwtl
cld
aaa
add
nop
mov
scas
je
jg
dec
and
push
popl
sti
or
ficoms
repz
call
xchg
inc
cmp
and
int
jmp
or
sub
lcall
aas
notb
into
cmp
ret
mov
adc
mov
pushl
pushf
inc
jns
mov
jmp
mov
scas
cltd
or
inc
push
xchg
mov
fwait
sub
mov
ja
pushl
incb
aam
push
dec
out
int
fcoms
dec
sub
add
out
adc
cmc
and
bound
jecxz
mov
in
pop
lock
adc
and
pop
insl
cmpsl
loop
cmc
sub
lcall
out
sti
fs
mov
xor
inc
shr
xchg
push
fnstsw
ljmp
das
xchg
decl
jno
xchg
mov
repz
push
pop
in
stc
ret
out
pop
clc
ds
call
xchg
sbb
fidivrl
je
cltd
adc
inc
cli
fcomi
lock
sahf
xor
rcrb
in
jo
cmc
mov
pop
inc
call
inc
outsl
testl
xchg
stc
sbb
mov
inc
mov
cmp
jg
ficoml
cmp
jp
insl
pop
jae
in
add
cmp
add
fucomi
test
cli
lcall
xchg
hlt
jae
mov
out
jl
mov
ljmp
mov
lds
ficomps
fidivl
push
jb
lods
sub
into
call
dec
jmp
test
leave
sbb
jl
test
jae
stos
dec
stos
or
jecxz
xor
xchg
repz
ljmp
daa
rsm
jae
xor
sti
xchg
enter
data16
enter
call
incl
xor
xchg
xchg
sub
add
and
lcall
add
adc
ret
dec
jbe
outsl
fmull
inc
lcall
pusha
ret
xchg
jge
js
aas
sbb
repz
mov
leave
inc
cs
cld
popa
push
push
ja
or
cmp
add
orl
cmp
mov
mov
dec
or
fisttpl
aam
push
or
cli
into
out
xchg
push
rcl
pop
jl
jecxz
mov
stos
or
cmpsb
lcall
mov
add
cmp
mov
inc
mov
xchg
mov
inc
pop
iret
cwtl
aam
mov
dec
pop
das
mov
cmpsb
enter
imul
inc
push
subb
dec
pushl
jge
inc
ds
in
out
call
xchg
lcall
push
andl
mov
out
sbb
jge
push
mov
mov
mov
das
cli
jg
xchg
sahf
mov
xchg
adc
enter
loopne
jmp
aad
std
mov
sub
push
or
pop
pushf
and
ljmp
clc
jmp
mov
stos
mov
push
popa
jmp
lods
lock
and
dec
mov
lock
jle
leave
jne
pop
loop
sub
nop/reserved
fdivr
sti
add
pushf
fistpll
lcall
mov
cltd
cld
cmpl
fcmovbe
mov
push
pop
fcomip
jmp
add
xchg
mov
pop
inc
lock
sub
lcall
daa
pop
into
jg
pop
mov
js
lret
push
sub
decl
std
adc
xchg
icebp
jl
push
cmp
scas
iret
cli
fistpll
pop
out
xchg
gs
out
jns
pop
lock
jnp
insl
xchg
inc
or
scas
les
sub
out
fsubs
mov
jmp
mov
out
and
jmp
add
rcl
and
fldenv
cwtl
or
xor
sub
js
cwtl
addr16
push
movsb
js
test
push
or
mov
icebp
mov
shll
xlat
shr
inc
mov
pushf
adc
inc
push
test
mov
int
cwtl
insl
sahf
loope
dec
xchg
mov
cli
add
ds
pop
jo
test
in
cltd
hlt
jmp
lcall
fmull
mov
les
inc
jmp
insb
jg
out
insb
ret
shlb
mov
xadd
pop
push
lods
xchg
mov
aad
dec
into
dec
sub
shll
jecxz
cmp
icebp
pop
out
pop
dec
inc
dec
pop
xor
clc
repz
ret
filds
sbb
lock
mov
xchg
jle
out
mov
ret
aas
lcall
jg
sub
push
stos
jnp
dec
stos
in
mov
jmp
arpl
fucomip
pop
shl
mov
xchg
add
mov
orl
mov
mov
incl
lods
inc
aas
pop
fwait
push
adc
sub
lret
and
sub
call
or
fdivrs
mov
shlb
pusha
das
mov
aad
cld
in
xor
mov
scas
jp
xor
push
adc
cmp
stc
fimuls
adc
movsl
or
cmpsb
xor
pop
jnp
sub
dec
out
aad
scas
fwait
inc
in
sub
inc
and
out
xchg
xor
icebp
daa
pop
mov
ljmp
adc
outsb
inc
lcall
rol
cltd
imul
pop
ljmp
lods
mov
incl
inc
fcompl
pop
scas
and
test
setae
pushl
scas
sub
test
fsub
and
dec
lods
aad
lret
decl
lds
mov
xchg
negb
or
xchg
and
loop
mov
aas
addr16
scas
int3
movsl
adc
sub
stc
push
in
in
xchg
fildll
adc
jecxz
cmc
jmp
push
jnp
cmp
ss
mov
xchg
mov
mov
out
idiv
fcomip
jmp
mov
pop
push
jl
cltd
jle
fbld
jmp
das
push
jecxz
clc
scas
cli
mov
enter
and
loope
sar
outsb
or
arpl
hlt
pop
jo
lret
repz
fsubrl
jg
and
push
dec
inc
loope
notb
push
mov
insl
xor
loop
mov
push
inc
cld
roll
icebp
jbe
or
icebp
lahf
aam
jbe
push
sti
or
push
jp
mov
das
jp
dec
out
cmp
add
outsl
pop
imul
mov
popf
jg
jmp
incl
mov
loop
mov
or
stos
cmc
leave
jbe
dec
addl
mov
xchg
cwtl
lret
mov
imul
ljmp
adc
roll
jns
cmp
sahf
daa
fdivr
fldlg2
sub
js
or
push
jp
es
push
es
jp
jbe
dec
aas
push
clc
ljmp
ret
and
push
xchg
les
or
enter
jnp
loope
and
mov
ljmp
pop
icebp
or
mov
out
and
icebp
int3
xchg
mov
addr16
pop
mov
incl
faddl
sbb
hlt
sbb
outsl
cli
pop
sbb
adc
pop
push
jno
fxtract
std
sti
push
fdivr
ljmp
mov
iret
jle
sbb
into
shr
imul
sti
dec
pop
jp
mov
ljmp
iret
xchg
mov
push
popa
popa
cmp
loop
cmp
xor
insl
jbe
mov
ja
test
or
insb
leave
int
xchg
sub
outsl
mov
or
ljmp
lret
js
inc
or
mov
cwtl
jle
lret
stc
and
bound
xchg
in
stc
addl
call
add
ljmp
ud0
jle
in
xor
inc
push
xchg
ljmp
mov
movq
adc
test
test
popf
gs
ret
inc
xchg
popa
mov
call
adc
cmpb
clc
je
stc
and
xchg
pop
ret
scas
xchg
or
mov
aas
dec
xchg
pop
xchg
push
mov
stc
add
jmp
cwtl
mov
push
pop
xchg
cld
test
out
dec
addr16
xor
mov
mov
mov
mov
lods
les
inc
aad
lock
push
sar
decl
inc
test
mov
leave
jne
rcrb
js
ret
fmuls
jmp
call
loope
out
clc
movswl
dec
fcompl
fldenv
push
xchg
xchg
shlb
loope
cmc
jg
gs
mov
aam
fdivr
mov
and
fbld
xor
outsl
clc
incl
mov
fbstp
fwait
jg
mov
fbstp
cmpl
pushl
sbb
in
mov
xchg
cmpsl
xchg
xchg
mov
mov
xor
ss
mov
cmp
mov
in
mov
pop
stos
lock
in
aaa
fidivl
movsl
out
pop
popa
or
scas
or
xchg
sbb
adc
xlat
ds
call
add
mov
jecxz
iret
fildl
or
stc
and
cmc
out
dec
outsl
jnp
movsb
clc
mov
js
pop
and
and
sbb
ja
and
xchg
in
xor
add
or
aas
or
push
and
fnstenv
xchg
xlat
pushf
fsubr
out
xlat
cmc
mov
cmpsb
stos
jne
mov
imul
psubd
testb
adc
push
or
repnz
testl
jmp
mov
cld
push
fists
aas
jns
mov
stos
dec
das
jmp
daa
movsl
subb
call
adc
stc
aam
les
mov
mov
andb
mov
mov
dec
mov
cmpsb
lcall
arpl
xor
out
imul
pop
push
mov
stos
sti
pop
fldl
lock
int3
mov
adc
ffree
out
cli
ljmp
outsb
negb
shlb
ja
ficoms
fs
sti
pop
mov
push
clc
xchg
cmc
sbb
jg
jl
jbe
je
shrb
stos
dec
add
out
mov
std
pop
cmp
pause
rcrb
fidivrs
mov
adc
push
repnz
mov
and
in
push
or
mov
mov
inc
in
jae
stos
outsb
mov
mov
mov
cmp
negb
xchg
add
xchg
inc
in
dec
fcmovbe
mov
mov
xchg
sbbb
lods
in
ror
and
sub
cmpsl
jno
pushl
sbb
scas
lahf
pinsrw
cmp
and
seta
jmp
mov
cmp
ret
dec
aad
lods
clc
ret
in
mov
inc
jmp
cmc
lret
incl
jmp
cmp
cwtl
inc
mov
mov
aas
aas
rcrl
mov
incl
push
out
rolb
pop
mov
repz
cmp
sub
sub
lcall
sub
push
sub
fmull
adc
lcall
push
jl
sbb
jecxz
xor
fisttpl
sub
les
sbb
incl
mov
js
into
dec
pop
test
mov
repz
ret
jge
loop
call
jns
addr16
cmc
cmpsl
outsb
or
dec
and
inc
xchg
ret
jg
pop
ljmp
and
fldcw
int3
movsl
das
mov
roll
xchg
fistl
jmp
repnz
lods
iret
out
rorb
stc
push
js
outsl
pushf
pop
gs
ret
mov
mov
sub
mov
lods
mov
cmc
push
pop
xchg
repnz
fs
mov
xlat
push
cli
hlt
test
ljmp
lret
xchg
stos
std
int
pop
push
rcrl
lcall
sti
pop
fdivr
nop
hlt
mov
mov
inc
xchg
pop
jo
ljmp
pop
cmp
jmp
out
mov
xchg
inc
out
mov
sarb
xchg
mov
fidivs
jns
nop
jle
jle
aaa
ljmp
scas
hlt
cmp
pushl
cmovs
cmpsb
movsl
inc
or
xchg
enter
dec
mov
je
lds
loope
es
push
mov
mov
jle
push
je
sub
decl
call
xor
cmc
mov
mov
mov
or
adc
out
cwtl
jmp
push
lds
jnp
sbb
ds
cmpsl
xor
add
jle
incl
mov
outsb
cwtl
aas
dec
add
imul
jg
icebp
jmp
pop
cmp
cwtl
xor
push
std
scas
subb
out
jmp
jae
filds
icebp
sbb
jecxz
sbb
dec
testl
fsts
call
xchg
add
jp
lds
lahf
fildll
icebp
cld
mov
push
or
jp
mov
and
sub
inc
sub
push
lods
ljmp
dec
xorb
or
fbstp
push
stos
in
mov
mov
out
dec
and
nop
mov
in
pop
push
ret
jns
ja
inc
scas
jp
mov
xor
ja
dec
mov
sub
rcll
mov
xlat
imul
adc
or
jl
and
lea
cmpsb
vpacksswb
repz
push
mov
aam
decl
sub
jns
mov
inc
loope
into
pop
aas
dec
loop
js
mov
decl
jnp
scas
out
lcall
add
mov
jge
push
adc
cmpsl
mov
jmp
loopne
lock
jg
jae
lods
out
xor
leave
jecxz
call
pop
pop
ret
imul
mov
push
inc
out
cli
xor
dec
lret
and
pop
cmc
fsubrl
cltd
iret
fldl
mov
pop
inc
scas
je
pop
ds
es
decl
repz
es
popf
hlt
xchg
mov
xchg
jmp
inc
lea
scas
pop
sub
mov
jle
les
mov
cmc
push
loope
das
es
jbe
sbbb
fidivrs
pop
mov
mov
mov
lods
enter
mov
pop
add
dec
daa
adc
mov
xlat
sahf
dec
out
stos
out
lret
aam
adc
lcall
out
rcrl
cltd
xchg
jl
push
add
imul
and
mov
loopne
adc
sub
test
call
pop
mov
push
outsl
fs
push
in
sub
adc
dec
jns
pop
into
add
sahf
lcall
sub
mov
inc
aas
mov
inc
adc
push
jl
jmp
ficompl
jl
testb
xchg
mov
add
mov
adc
cli
pop
xor
imul
add
adc
xor
aad
cmp
cld
xlat
mov
fldenv
out
push
mov
fdivl
mov
ljmp
or
sub
aam
mov
cld
aam
jg
in
fldenv
fdivp
pop
xor
mov
mov
cmp
in
mov
jno
xlat
xchg
das
xor
jmp
fstps
cmp
shlb
sti
mov
movsb
clc
dec
fdivs
out
adc
pushf
fists
test
roll
mov
fimull
cmp
add
jp
adc
loop
pushf
mov
ja
test
dec
addr16
jo
cmp
pushf
push
sub
fldt
jo
decl
je
sub
incl
mov
in
aam
lods
cmp
push
popa
loop
mov
pop
mov
dec
inc
mov
dec
adc
subb
xor
lock
fisubs
mov
shrl
pop
mov
mov
xor
pop
aas
push
sub
xchg
inc
push
outsl
mov
fidivs
aam
pop
mov
adc
call
std
mov
sub
out
adc
aam
call
sub
sti
lods
xchg
mov
sti
push
ds
sbb
cmpsl
mulb
out
mov
cld
stos
stos
scas
fmuls
xor
nop
pop
push
push
mov
lret
out
jmp
inc
shll
jge
xchg
jne
jne
fnclex
pusha
mov
sub
dec
int
inc
sti
and
hlt
adc
pop
faddp
addr16
jo
repnz
cmp
push
outsb
cmp
data16
dec
stos
jmp
and
cmpsw
ja
push
leave
and
decl
js
cmp
xchg
mov
adc
jmp
xchg
lcall
in
les
cmp
xchg
leave
jb
ljmp
jbe
test
lods
testl
lcall
cmpsl
iret
icebp
and
mov
std
lcall
outsb
das
arpl
sbbb
sub
call
bound
push
lret
xchg
movsl
sub
jnp
push
cmp
loop
xchg
cmp
outsl
xchg
push
pop
in
jle
jnp
xchg
ret
std
cmp
jg
mov
cmp
mov
sti
shr
inc
jne
and
jmp
sbb
and
mov
iret
and
imul
jno
xlat
fneni(8087
or
push
cld
stos
push
or
mov
rcll
pushl
fidivrl
or
xor
cs
in
movsl
in
inc
out
jmp
xor
fdivr
inc
pop
xor
loopne
in
and
lock
cmp
add
inc
lret
movsb
repnz
sub
mov
xchg
rcll
xor
repnz
scas
testl
cmp
mov
stos
test
jmp
xchg
mov
sbb
mov
insb
pop
rorb
sbb
pushf
xchg
jbe
das
stos
jae
lret
add
jg
jmp
add
shrl
mov
xor
mov
dec
push
subb
test
test
leave
push
add
adc
stos
into
adc
add
adc
fsts
ljmp
jg
into
aad
xchg
cmp
ljmp
fdivrs
push
aam
mov
sti
push
lahf
lret
jg
shr
sar
incl
mov
jmp
push
int
mov
dec
sbb
ja
dec
mov
inc
clc
mov
jbe
pop
jb
lahf
mov
fdivrl
add
filds
xchg
jbe
adc
sar
jmp
filds
cli
cld
out
dec
mov
or
in
sub
scas
ds
out
mov
jecxz
xor
rep
inc
dec
sar
aad
adcb
adc
mov
cwtl
pusha
repz
loopne
and
iret
insb
cmp
decl
fidivrs
idivb
adc
ret
test
mov
dec
cmc
not
and
cmp
lahf
pop
subl
std
sti
jg
lods
cld
sbb
dec
or
cli
fwait
jmp
daa
rcrb
dec
and
xor
fisubrs
pushl
adc
add
cmp
sbb
adc
jmp
lcall
cs
jo
lods
sbbl
jae
gs
pop
lret
out
adc
pop
add
mov
fwait
push
jp
pop
or
jg
icebp
fists
je
pop
out
jbe
test
sbb
mov
adc
inc
ljmp
imul
fists
fucomi
gs
jnp
in
xor
pusha
ja
pop
aad
xchg
test
pop
pop
cld
out
jg
repnz
and
rol
inc
pop
mov
xchg
push
in
in
into
sbb
cltd
jb
jb
mov
xchg
mov
jmp
push
aam
push
inc
pop
inc
push
test
mov
inc
out
and
jmp
adc
cli
outsl
clc
push
in
out
fsubrs
pop
loope
pop
shld
pop
fistl
call
mov
lods
push
jns
bound
mulb
xor
push
pop
daa
aaa
ljmp
cmp
loope
adc
adc
mov
fimuls
lahf
fldt
ror
call
cld
stc
dec
inc
mov
daa
insb
lret
add
push
insl
jmp
adcb
sbb
mov
adc
cmp
lret
dec
test
call
ds
aaa
scas
jne
cmc
stos
iret
ja
ret
icebp
ljmp
mov
cltd
sbb
inc
js
les
xlat
inc
in
cmp
adc
mov
popa
ret
mov
xchg
mov
push
inc
dec
xor
cmc
pushl
fs
rorl
inc
stos
or
std
add
aad
stc
inc
jne
xlat
dec
call
das
adc
mov
inc
stos
dec
loope
idivb
mov
xor
and
inc
cmp
in
pop
mov
mov
jmp
jg
xlat
hlt
loop
incl
rcrl
in
lods
inc
fsubl
cmp
mov
lods
mov
stos
packssdw
shl
sub
inc
adc
add
mov
stos
out
fsubl
xor
jg
lock
adcl
dec
out
dec
lods
fsubrl
sub
fs
mov
cmp
inc
mov
lods
jp
xchg
adc
outsb
popf
mov
out
mov
sub
mov
cli
mov
hlt
out
lds
adc
xor
jge
jae
int
out
mov
js
push
dec
mov
lds
pop
out
sub
sub
jge
jecxz
aad
ljmp
add
hlt
filds
repnz
and
push
daa
xor
movsl
dec
nop
push
fisubl
jmp
clc
rcrb
scas
mov
pop
into
mov
call
mov
dec
in
jp
daa
andl
das
jmp
insb
cmp
in
mov
and
mov
mov
bnd
cli
jb
mov
jae
and
imul
pop
lods
jg
xchg
sub
jno
mov
sub
loop
and
ljmp
incl
icebp
out
lock
fbstp
xchg
xchg
pop
data16
insb
ja
stos
mov
jne
mov
stc
dec
test
pushl
pop
mov
gs
mov
cmp
movsb
enter
inc
xchg
out
daa
jb
adc
in
aam
inc
add
pop
insb
repz
jmp
push
loop
xor
mov
sub
pop
daa
decl
jnp
cmp
dec
sti
adc
inc
inc
ss
icebp
pop
jg
sti
sbb
inc
lods
pop
mov
fidivs
fsubr
roll
dec
xor
sub
or
fcmovnbe
aad
or
incl
xchg
and
out
sar
std
mov
mov
jp
fwait
jmp
fwait
push
imul
outsl
cli
jmp
xor
push
dec
insb
dec
jnp
inc
ljmp
pop
adc
pop
add
ss
adc
sub
xchg
mov
jl
and
add
add
fldenv
popa
scas
mov
pushf
outsb
das
out
add
iret
push
out
popf
ja
or
xchg
pop
stc
ljmp
and
cmp
jmp
mov
push
dec
cltd
or
clc
add
fdivrs
mov
ret
int3
dec
int3
movsb
jns
das
mov
cmp
imul
incl
xchg
push
stos
fcoms
andl
daa
mov
jecxz
outsl
pop
subl
decl
cmpsb
xchg
add
mov
jb
cmp
xor
sub
inc
mov
cmp
xchg
shlb
pop
repz
and
jbe
cld
addr16
jp
lock
fwait
call
cmp
push
add
popf
repnz
sub
std
daa
inc
or
fnstenv
mov
inc
mov
mov
mulb
jmp
cmp
cmc
ds
xor
icebp
sbb
cwtl
mov
ljmp
loop
cmp
in
in
insl
jg
mov
cld
ret
pop
or
xchg
cmp
icebp
ss
lcall
ret
jg
fwait
repnz
fnsave
outsl
call
adc
ret
jle
int
push
xchg
int
fdivrp
cmp
pop
xchg
shrb
jnp
mov
jne
fidivrs
mov
push
jns
mov
xlat
or
xor
enter
rcrb
cmc
mov
and
jmp
mov
loope
jo
sti
in
int
push
insb
ljmp
repnz
test
sub
cli
adc
cmpsb
outsb
push
and
add
sub
adc
aad
call
test
mov
and
call
xchg
fistps
outsl
adc
ret
push
mov
add
incl
mov
pop
mov
cmpxchg
and
lds
xorl
mov
dec
jmp
pop
mov
lods
cli
incl
or
cld
adc
das
insb
xor
sti
aad
ja
rcr
cmp
pop
dec
daa
imul
jg
pop
test
dec
jmp
mov
ljmp
scas
xor
test
xor
cmpsb
push
mov
ss
jle
mov
inc
fimuls
add
fldcw
data16
jg
inc
inc
pop
pop
popf
imulb
mov
sbb
mov
push
jl
mov
ljmp
cmp
mov
lcall
inc
mov
lock
fadd
xchg
rclb
push
ljmp
jns
iret
jmp
cmp
fildll
stc
ljmp
jp
fnstsw
xor
jl
sub
dec
ficomps
ret
mov
lea
call
push
inc
shlb
dec
icebp
js
test
xor
popf
xor
in
dec
push
out
cli
jnp
xor
mov
mov
fildl
xchg
push
icebp
in
dec
call
fwait
les
or
xor
jmp
call
mov
icebp
cmc
xchg
stos
repnz
pop
paddd
scas
push
arpl
mov
call
mov
jg
cs
cmp
out
cmp
call
cmp
int
mov
ljmp
icebp
pop
xchg
xchg
dec
stc
mov
std
push
adc
addr16
pop
cmp
inc
lret
cmp
loope
in
out
sub
jne
out
xor
lock
cmp
xchg
cmp
jmp
cld
mov
cmp
xchg
fadds
insb
jmp
scas
jge
push
adc
out
xchg
shll
pop
pop
in
cmpl
xchg
or
push
jg
sar
jp
and
in
loop
jecxz
mov
fwait
jg
idivb
inc
cmp
add
cmpsb
lahf
jl
mov
pop
xchg
rcrb
stos
or
jg
mov
arpl
lock
into
sbb
dec
cli
call
mov
mov
sbbl
aad
inc
js
inc
ljmp
and
test
inc
ljmp
ja
mov
jle
inc
cmp
and
les
ljmp
push
xor
popf
push
inc
jle
in
cmp
das
add
fsubr
fistpll
jmp
loop
sbb
jns
rep
cmp
jns
movsb
sarl
stc
repz
xchg
push
gs
ljmp
mov
movsl
test
aam
daa
mov
dec
sub
out
xchg
lock
xlat
call
loop
ss
decl
push
and
movsl
cmp
sarl
xchg
and
push
lcall
popa
enter
fistpll
mov
ficoml
lahf
pop
push
fiaddl
jge
inc
mov
sbb
lods
outsl
movsb
cmp
arpl
es
movsl
je
icebp
adc
call
mov
cmpsl
sti
rcll
hlt
das
insl
cmp
mov
movsl
movsl
dec
cld
mov
outsb
or
push
fdivr
repnz
std
jg
cmp
es
adc
pop
je
and
mov
popf
pushf
imul
jg
daa
push
out
int3
xchg
and
pushl
sbb
je
sahf
ljmp
lcall
pushf
mov
insl
js
aam
daa
cmpsl
outsb
shr
mov
es
xchg
jbe
xchg
inc
add
pop
adc
pusha
mov
pop
cmpsb
sahf
xchg
out
inc
pop
dec
cmp
push
inc
sar
push
xchg
xchg
repz
add
pop
sti
cmc
pushl
pushf
popf
or
cmp
jg
mov
test
sbb
and
les
incl
fwait
sbb
test
stos
jns
ja
xor
dec
pop
decl
jmp
xchg
int
pop
or
cmp
cmp
les
sarl
cmp
jg
jmp
cmp
fwait
jl
sub
xor
jle
repnz
mov
mov
lret
jno
int
dec
idiv
insb
sub
hlt
cmp
adc
in
cmpsb
fldt
insl
push
ljmp
sub
mov
dec
cmc
stc
xor
xor
add
inc
ljmp
push
pop
xchg
add
xor
daa
outsb
stc
mov
rcl
jmp
rcrl
pop
roll
jge
jmp
sti
xor
aad
cmc
insb
ljmp
jg
jns
push
fdivp
aas
mov
das
dec
stc
aas
mov
xor
test
jle
ja
stc
loopne
fcmovnbe
and
mov
mov
lcall
cld
ret
adc
mov
add
ljmp
ret
and
dec
mov
mov
sbb
cmp
jmp
dec
aas
mov
push
sub
lock
ret
roll
mov
or
lock
jae
fsin
ljmp
test
cs
inc
jecxz
stc
sti
mov
cli
movsl
mov
jg
lods
daa
fadds
xor
xor
pop
mov
mov
mov
js
aam
jne
test
fisubrs
add
loope
mov
push
jnp
pop
adc
jmp
mov
push
pushf
push
pop
rolb
xchg
rcrl
mov
decl
mov
push
jmp
hlt
movb
fst
outsb
pop
nop
test
bound
lcall
xchg
jmp
mov
jbe
mov
aad
div
repnz
mov
and
test
pushl
movsl
les
sub
xchg
stos
cmp
push
sbb
popf
mov
cmpsl
mov
jnp
scas
sub
mov
testl
addl
adc
dec
icebp
mov
xchg
adc
imul
in
jmp
jle
adc
mov
adc
in
call
aam
mov
clc
repnz
fiadds
mov
mov
ss
sbb
mov
and
sub
push
scas
fwait
lds
xchg
ficoml
aaa
outsl
and
cmp
cld
out
not
cmpsl
push
pop
mov
xchg
out
out
cmp
jg
pop
pop
add
shll
je
in
xchg
xchg
push
sarb
ljmp
leave
pop
hlt
fidivs
call
sub
in
jge
hlt
dec
out
cmovl
loop
jmp
pop
out
add
repnz
stos
lods
popf
add
adc
lods
loopne
mov
jmp
fstps
xor
push
scas
out
rorb
imul
test
cmp
cmpsb
scas
cmpsb
jo
jae
push
inc
repz
or
inc
inc
in
jge
stc
fucomi
dec
dec
dec
stos
icebp
mov
jne
movl
mov
or
lock
pop
out
sti
popa
mov
loopne
cld
pop
sbb
and
mov
add
xor
dec
call
sub
rcrl
sbb
jl
cmp
jmp
mov
jb
icebp
sub
jl
xchg
sub
sub
push
lret
je
addr16
mov
daa
int
inc
dec
test
rsm
push
filds
adc
push
pop
and
fdivp
fstps
imul
aad
dec
dec
pop
cmpsl
cmp
repz
sbb
call
std
call
dec
xor
and
xchg
mov
incl
or
cwtl
adc
adc
imul
fwait
shrb
jmp
mov
jle
stc
insb
mov
shll
mov
ljmp
mov
les
imul
and
out
mov
push
cmpsl
repz
sub
jmp
cli
add
ljmp
mov
scas
xchg
cmp
daa
ss
push
or
pushl
jp
cs
xchg
mov
mov
cmp
int
or
outsl
pop
clc
ret
sub
std
call
stos
mov
xlat
adc
arpl
aam
rcr
and
lahf
xchg
andl
mov
incl
jg
shlb
inc
xchg
enter
xcrypt-cfb
cmpsl
out
out
incl
cs
in
mov
cmpsl
imul
in
sub
mov
inc
add
fildll
out
or
mov
ret
rorb
ljmp
lcall
les
or
stos
mov
or
mov
cmpsb
cmp
inc
sbb
decl
iret
jg
imulb
cmpsl
push
dec
cld
sbb
aaa
mov
scas
sbb
push
fbstp
cmpb
push
insb
int3
pop
add
pushl
je
jbe
iret
cmc
ret
pop
jns
leave
add
notl
pop
mov
ljmp
adc
test
dec
mov
lahf
xchg
loop
mov
or
fcomp
arpl
mov
jo
sti
jl
fcomip
mov
sub
out
or
nop
clc
mov
xor
sahf
jg
push
movsb
ret
iret
scas
dec
jnp
xchg
xor
jle
push
repz
arpl
xchg
fstps
pop
call
adc
dec
adc
outsl
mov
aas
bound
jns
push
loope
add
pushl
out
push
sarb
fwait
fwait
cmc
cmc
stos
outsl
add
pop
sub
jmp
call
fisttpl
jmp
sub
mov
cmp
movsl
sub
sbb
jg
ficoms
ljmp
sbb
and
hlt
pusha
loop
and
out
testl
jbe
mov
jg
shlb
js
sbb
xchg
into
bndldx
jl
addr16
in
lret
inc
sbb
pusha
in
inc
sub
incl
jge
addr16
bnd
sti
out
mov
in
fwait
iret
jle
pop
test
mov
mov
mov
sbbb
lods
pop
pop
lods
cmp
pushl
mov
out
lahf
pop
push
push
arpl
pop
pop
xchg
mov
jnp
in
sub
xchg
std
jno
mov
xchg
lock
pop
mov
mov
into
lods
sarl
out
mov
pop
push
int
cld
jecxz
jmp
xchg
push
adc
call
mov
jg
mov
es
imulb
mov
lcall
shlb
popf
call
shlb
dec
inc
std
decl
xchg
push
subl
mov
mov
pop
pop
js
xor
fistpll
icebp
and
imul
call
stos
or
sti
mov
jbe
mov
ret
jmp
sub
jb
filds
adc
lcall
jg
or
aas
icebp
ret
cmp
inc
mov
arpl
incl
ret
jp
xor
clc
fs
inc
aas
repz
inc
cmp
mov
mov
pop
shlb
mov
inc
inc
jg
insb
cmp
aad
or
lock
fwait
cmp
pop
cld
cs
xchg
lret
lcall
cmp
std
mov
call
xchg
push
es
lock
mov
popf
addr16
test
addr16
rcl
cmp
fdivp
out
mov
jg
mov
out
repz
lock
repnz
aam
inc
sar
push
jbe
mov
out
mov
and
out
lcall
mov
mov
sub
fsubs
out
cld
addl
ljmp
jnp
in
fisttps
push
loopne
sar
call
lds
lds
sub
xor
insl
movsl
fwait
in
mov
ret
fcomip
in
jp
jmp
ficoms
decl
fwait
sahf
mov
add
int
pop
aam
lret
push
fwait
cmpb
adc
ljmp
ror
push
mov
or
std
push
cli
lock
cmp
xchg
jg
repnz
ss
jecxz
pushf
enter
push
sub
jo
loop
add
out
xchg
test
mov
in
add
fldl
pop
dec
pop
enter
dec
sti
and
call
jl
lock
dec
mov
sbb
fisubs
dec
leave
dec
xchg
nop
jge
hlt
jecxz
decl
andb
mov
into
cli
or
or
jb
xchg
add
adc
push
cmp
std
mov
sub
xchg
pop
xchg
jle
push
add
or
loop
sar
push
inc
daa
mov
mov
xor
lock
sahf
adc
xchg
mov
or
rorl
push
enter
in
cs
ljmp
or
and
je
sahf
fucomip
jecxz
lret
movsl
jge
cld
movsb
repnz
out
enter
mov
adc
in
stos
in
cmc
hlt
sub
or
pushl
xchg
insb
sub
jecxz
shll
mov
xlat
loop
lret
scas
xchg
xchg
movsl
aaa
std
call
mov
test
ficomps
aad
stos
fmuls
cpuid
jmp
ds
fwait
into
gs
jns
loope
pop
jne
jge
in
bound
push
jmp
add
pop
cld
dec
add
pop
into
push
into
and
and
out
cltd
xchg
adc
mov
lods
decl
push
ds
scas
sub
mov
cmp
stos
dec
stos
lahf
xchg
xlat
jg
cmpsb
rorb
cmpsb
push
fidivrs
shll
mov
jg
hlt
mov
movsl
in
mov
and
scas
push
push
test
mov
imul
ljmp
cli
sub
imul
adc
lods
out
inc
lcall
je
xlat
fstpl
mov
xor
in
arpl
inc
out
test
inc
xchg
mov
pushl
adc
xchg
sub
addr16
mov
lock
cmc
mov
test
adc
ret
decb
jb
jmp
adc
fld
jmp
jmp
jnp
daa
or
testb
dec
daa
daa
mov
pop
ret
out
mov
leave
xorb
cli
call
int
cmp
out
sbb
imul
les
fs
xor
xor
mov
mov
cld
xor
mov
dec
rolb
scas
int3
push
jge
jns
movsb
inc
mov
faddl
out
inc
jbe
outsl
dec
clc
add
add
cmpsb
dec
sub
stos
loop
out
dec
jb
hlt
out
xor
es
mov
loopne
cmpsl
mov
in
dec
mov
pop
push
cltd
mov
ret
lret
mov
in
add
xlat
jns
scas
out
ss
pop
das
xor
and
frstor
mov
lahf
idiv
add
mov
add
mov
xor
dec
cs
mov
mov
out
fldl
pop
inc
std
mov
mov
fcmovbe
les
cmp
mov
lods
jbe
loope
in
setae
stc
cmp
fnstcw
dec
arpl
mov
sbb
mov
orl
pop
sar
ljmp
pop
lock
aad
dec
leave
mov
add
iret
mov
mov
shrl
sbb
stos
gs
icebp
jmp
mov
aas
xlat
mov
or
pop
xchg
mov
pop
das
stc
repz
leave
add
jg
clc
push
out
pusha
lock
arpl
es
rcll
ds
mov
imull
sbb
scas
xchg
cmc
cmp
push
insb
aas
jle
mov
popa
dec
or
icebp
inc
shl
aad
nop
incl
imul
in
dec
outsl
popf
out
test
pop
shll
adc
cld
pushl
iret
mov
xchg
jno
rcll
stos
mul
cmc
cmp
jg
dec
dec
and
xchg
inc
lock
and
std
mov
repz
gs
ljmp
push
push
and
lret
hlt
int
mov
sub
popa
mov
jnp
add
call
mov
xchg
ljmp
rcr
inc
mulb
xorb
dec
pushl
cld
or
imul
pop
repnz
or
jb
push
lcall
sbb
pop
aam
insb
fsubs
inc
aas
imul
js
mov
clc
stos
in
test
mov
push
mov
sbb
jmp
divl
add
jg
mov
inc
dec
fwait
dec
jns
mov
fcmovnb
mov
mov
push
imulb
jg
xor
sub
mov
mov
sar
es
lds
scas
cmc
std
shl
movsb
call
data16
inc
sahf
cmc
rcrb
dec
fidivs
ret
sbb
mov
cmp
pop
jmp
out
or
das
into
mull
cmp
stos
sub
sti
jae
jmp
or
cmpsl
arpl
aas
loope
aad
cmc
push
jecxz
pushl
ja
cmp
lds
shrb
aam
dec
test
mov
mov
dec
in
mov
cmp
xlat
push
or
cs
lcall
sbb
jp
dec
in
sub
cmp
leave
or
sbbl
in
iret
mov
aas
lret
inc
movsb
test
daa
aaa
sbb
fsubrs
movsl
shr
pushf
nop
fnsave
fsubrs
cmp
lcall
fldpi
scas
or
inc
xor
outsb
jg
in
sbb
lea
add
outsl
cli
shl
hlt
sti
mov
jne
bound
xchg
cs
repnz
mov
cmp
repz
jecxz
xchg
rolb
adc
mov
scas
ljmp
mov
popf
test
sub
outsb
sub
mov
cld
insb
jae
jmp
loop
cmp
mov
rcr
test
in
lock
cmp
daa
mov
pop
lock
out
add
mov
cmpsl
add
cltd
neg
inc
jp
cmp
and
cmp
lcall
ja
push
mov
or
imul
mov
clc
and
stc
push
cmp
mov
mov
and
and
jg
test
cwtl
cltd
aam
pushf
js
mov
repnz
ljmp
pop
xchg
ret
sbb
jge
xchg
pushf
push
jo
lahf
sub
xchg
vpmaddwd
lea
mov
pop
lea
mov
dec
int3
pop
mov
jns
clc
pushl
xchg
sub
inc
xlat
dec
mov
fbstp
xchg
xchg
sub
add
ds
ja
cli
data16
sahf
icebp
and
fs
or
repnz
out
mov
pop
iret
shr
loopne
mov
jmp
xchg
xrelease
cld
incl
push
out
adc
jns
mov
jecxz
push
out
iret
out
inc
sar
pop
call
cmp
movsl
jecxz
sbb
sahf
lahf
shll
jb
js
dec
mov
jmp
lahf
cmp
ljmp
adc
lret
lods
mulb
cwtl
and
test
adc
ret
js
sarb
add
rorl
jb,pn
jg
out
enter
inc
mov
xchg
dec
mov
pop
call
cwtl
sbb
mov
mov
decl
dec
into
sub
lods
mov
adc
das
clc
incl
in
loopne
aam
in
ror
out
jl
pusha
pop
fidivs
cmpsl
cli
jle
pop
pop
mov
push
nop
stc
lea
scas
in
xchg
idivl
mov
add
xchg
outsl
or
push
enter
loope
enter
in
lcall
lcall
jno
cmp
int3
mov
js
mov
mov
fcomp
std
call
into
popf
mov
ja
fsubrs
inc
push
dec
iret
ja
adc
ja
loope
scas
cli
dec
xchg
ret
aaa
mov
cld
daa
data16
inc
add
out
mov
push
cld
lods
stos
incb
pushf
jmp
rcrl
cli
dec
push
cmpsb
loope
pop
pushf
bound
lret
push
enter
std
insb
lock
mov
pop
jns
hlt
loope
icebp
iret
jns
test
lahf
xor
dec
jbe
jbe
mov
mov
ds
ljmp
lret
mov
mov
lods
pusha
jle
cmpb
mov
push
sahf
iret
insl
mov
out
lretw
jp
out
es
push
cmp
pushl
xor
leave
dec
in
and
iret
lea
mov
rorl
scas
lods
mov
test
ja
decl
pop
hlt
jnp
or
leave
incb
mov
adc
adc
fcomip
jmp
in
out
jno
or
aad
enter
pop
mov
sub
call
call
imul
ljmp
jle
dec
adc
cld
xchg
test
icebp
fwait
pop
ljmp
push
scas
outsl
sub
out
jb
int3
jg
pop
bound
cmp
call
and
repz
adc
dec
adc
leave
cld
adc
sbb
mov
cld
jmp
pusha
mov
out
mov
dec
xchg
ficomps
in
mov
add
call
int3
iret
pop
cltd
out
aam
mov
jo
mov
dec
sarl
call
scas
jecxz
push
int
call
pop
mov
cli
cmpsl
scas
adc
mov
mov
int3
scas
cmpsb
out
sarl
dec
jbe
fcmovnbe
add
filds
dec
addl
int3
lock
sbb
dec
daa
jns
jmp
call
or
testb
mov
or
jmp
psubd
sarb
adc
les
test
in
popf
aad
push
mov
decl
push
sbb
xchg
xchg
xchg
inc
mov
lods
mov
and
push
inc
test
aas
aam
lret
testb
adc
cmc
sar
gs
cmpb
les
test
xchg
lret
mov
jbe
mov
cs
or
ljmp
lds
mov
hlt
mov
shlb
fidivrs
cwtl
daa
testl
sub
mov
push
mov
jbe
scas
clc
decl
testb
adc
xchg
std
outsb
jmp
aam
cmpsb
and
out
adc
inc
loope
mov
faddl
xorl
std
sbb
dec
and
jg
cli
in
div
mov
dec
aas
mov
fbstp
lods
xchg
rclb
test
lds
mov
or
fcomip
jecxz
orl
imul
fcmovu
lahf
int
mov
pop
mov
inc
lock
cmpsl
sbb
xchg
cs
push
stos
mov
out
xchg
pushl
mov
ds
inc
inc
xchg
pop
shlb
adc
lcall
xor
call
imul
dec
nop
jbe
sar
in
mov
rcrb
mov
out
mov
xchg
icebp
cmp
jb
ljmp
jg
jne
xchg
loop
push
mov
nop
mov
and
push
push
mov
sub
fldt
loop
mov
gs
mov
ja
and
decl
cmpsl
jecxz
repz
jb
test
push
ret
fdivr
cmp
ret
daa
dec
in
repz
icebp
mov
inc
pop
inc
clc
dec
icebp
jnp
xor
repz
in
dec
lea
xor
ljmp
shll
ds
out
xchg
dec
jp
arpl
mov
xchg
out
mov
sub
ljmp
pushl
test
jo
rcr
mov
mov
inc
sti
jle
cmp
push
icebp
cmp
push
in
data16
push
aaa
pop
test
inc
arpl
adc
push
lock
incl
pop
shrl
mov
sub
xor
jmp
mov
dec
imul
nop
iret
mov
mov
adc
jg
jmp
mov
in
dec
pushl
jp
pop
mov
jecxz
loop
mov
pushf
cmp
cmp
push
lcall
addr16
adc
inc
idivb
sub
loope
inc
dec
cmp
and
mov
call
cmc
sbbb
cmp
out
out
jne
cmp
cmp
sub
movsb
mov
pushl
cwtl
pushf
push
jg
or
jns
or
ja
cli
mov
in
out
sbb
incl
fists
dec
cmp
es
xor
cmp
cmp
or
jb
fstpt
add
pop
ds
call
in
fbld
mov
cld
lds
int3
lds
jg
fwait
add
jmp
lcall
scas
sahf
lahf
mov
adc
adc
out
mov
mov
pop
xlat
lds
jno
pop
insl
mov
mov
inc
cmc
out
pushl
push
iret
jp
add
or
ljmp
xor
mov
lcall
movsl
mov
daa
mov
pusha
movsl
push
in
sbb
pop
push
addr16
decl
cli
ljmp
enter
sti
and
push
fsubrs
call
mov
fucomip
mov
mov
push
push
mov
jecxz
sbb
jmp
jp
dec
roll
jecxz
inc
iret
cs
iret
outsl
xchg
and
jg
stos
lahf
push
xchg
aam
mov
mov
lods
jg
inc
jmp
aad
xchg
iret
dec
pop
jmp
mov
mov
mov
es
fnsave
mov
ljmp
repz
in
fisubs
mov
enter
xchg
popl
shl
mov
lods
mov
adc
loope
mov
mov
ds
loopne
lcall
in
lods
cli
scas
clc
jl
fdivrs
aam
mov
int3
pop
inc
sbb
out
dec
nop
out
out
dec
icebp
xor
aaa
push
rorl
sahf
xor
fwait
dec
fists
sbb
cmpl
jg
lcall
sahf
mov
stos
dec
imul
int
ret
inc
add
mov
in
int3
add
iret
lods
in
leave
pop
or
fdivp
jne
into
push
jmp
push
push
incl
jmp
push
scas
and
sub
movb
push
out
cli
cmp
inc
dec
fcomip
neg
jg
scas
inc
mov
pop
fimull
call
out
fistps
mov
call
aaa
sahf
aad
imull
stos
mov
lahf
ljmp
cli
add
inc
xor
scas
mov
jbe
clc
ficoms
sbb
shrb
lcall
pop
inc
push
stos
inc
mov
mov
or
ljmp
sub
inc
lods
fildll
test
cld
es
ljmp
jge
jb
aaa
sbb
call
xor
sbb
and
les
ja
push
and
incl
es
mov
shrd
testb
aad
sub
aad
inc
inc
mov
push
mov
xor
call
xchg
pop
jecxz
mov
or
lods
repnz
push
call
mov
add
push
sbb
jp
pusha
shlb
decl
xchg
pop
and
mov
bound
je
pop
mov
mov
mov
mov
and
shl
mov
inc
cmp
pushl
fidivs
pop
aad
push
imul
mov
dec
pusha
inc
push
jg
les
pusha
outsl
jno
inc
lods
lcall
lea
in
popf
or
insb
cli
inc
pop
idivl
inc
xchg
pushl
aaa
negb
cmpb
outsl
jae
sub
out
dec
jbe
pop
rorb
ljmp
nop
ja
mov
inc
mov
mov
pop
mov
aaa
jg
incl
add
adc
adc
stc
sub
stc
out
adc
jnp
aad
cmc
fcmovnb
lahf
imul
lea
enter
cmp
fists
jns
and
mov
aaa
pop
or
mov
fwait
fs
xchg
ljmp
cli
call
stc
dec
fdivr
out
loopne
push
sub
pop
stos
push
arpl
dec
into
mov
bound
pop
shll
mov
fs
mov
mov
shrl
ljmp
dec
push
lcall
outsl
data16
sar
jp
rep
jae
jbe
mov
in
das
out
arpl
and
les
sbbl
xlat
repnz
das
mov
lret
jmp
rorl
call
test
decl
decl
repnz
mov
cmc
mov
inc
lods
mov
clc
out
mov
mov
push
dec
pop
call
jns
sbbb
pop
test
subl
sti
frstor
insb
icebp
xor
ljmp
cld
fwait
lock
rclb
sbb
inc
fbstp
xchg
popa
addr16
mov
pusha
clc
iret
cmp
std
stos
lret
hlt
jmp
cld
js
cld
jl
adc
fwait
nop
mov
pop
push
dec
into
movsb
fcomps
in
adc
mov
stc
add
stc
mov
enter
ja
arpl
icebp
mov
imul
popa
adc
mov
aaa
stos
xchg
clc
popf
rolb
xchg
mov
leave
fcomp
fidivl
das
insl
mov
in
jle
lret
clc
iret
dec
sahf
nop
out
faddp
pop
xor
cli
sbb
dec
loop
pop
in
xchg
jae
sbb
inc
mov
mov
stc
mov
pop
jnp
sbb
mov
sub
test
mov
dec
cld
push
ljmp
in
jbe
loop
ret
sbb
imul
sbb
cwtl
sar
mov
adc
je
enter
decl
lcall
movsl
aam
pop
test
xchg
mov
fidivrl
out
divb
clc
xchg
cmp
in
push
enter
fsubrs
jmp
rorl
sbb
inc
jo
loop
outsl
clc
jg
and
ja
jb
sbb
or
cmc
clc
call
adc
fdivr
shr
leave
adc
out
sbb
inc
out
jb
add
mov
scas
mov
cmc
cmp
iret
daa
cmpsl
movsl
xchg
int3
adc
pop
loope
xchg
es
mov
xor
sahf
sbb
fdivrp
ljmp
mov
cs
xlat
repz
pop
rcrb
ret
xchg
adc
repz
sub
decl
cmpsb
out
fcomps
enter
xchg
sub
mov
jbe
in
jmp
lcall
cmpsb
enter
mov
andl
out
lea
enter
sar
out
cmp
xchg
mov
les
jp
mov
add
cld
fnstcw
mov
iret
pop
or
pop
dec
mov
jmp
fs
and
shr
mov
aam
sahf
inc
xchg
insl
jl
pop
repz
rcll
mov
adc
jmp
inc
sti
inc
push
loope
sti
pusha
loop
mov
jp
mov
shl
ljmp
mov
cmpl
mov
rcrl
add
cmp
lcall
das
add
push
jnp
in
cld
sbb
shll
arpl
icebp
cmp
mov
imul
ret
in
sahf
repz
cli
push
fcoms
mov
pop
inc
lret
repz
call
into
sbb
lods
mov
mov
stos
scas
hlt
scas
adc
ficompl
fdivrs
mov
jmp
enter
jno
ja
decl
mov
jb
sub
call
push
fcom
hlt
pushl
std
mov
mov
pop
dec
hlt
clc
cwtl
inc
jb
sti
dec
xchg
xchg
ss
fsub
cltd
fstp
jl,pt
stos
adc
mov
ja
xchg
repz
and
incl
sub
xlat
in
or
mov
xor
je
shlb
mov
ljmp
clc
dec
pusha
fldl2t
mov
dec
stc
stos
lret
rol
mov
js
out
and
pushl
jno
gs
add
cld
mov
jae
adc
and
lcall
mov
iret
dec
cmc
cmpsl
inc
add
addb
sub
pusha
xchg
imul
lahf
xlat
lds
xchg
repnz
sarb
int
cmp
decl
out
mov
or
cmpsl
mov
and
mov
shrb
xchg
ljmp
gs
pop
mov
jge
rolb
add
or
mov
sahf
out
outsl
jbe
sub
jge
jecxz
jno
xchg
dec
shll
pushl
mov
fimull
xchg
mov
loop
cmp
sti
ret
movsl
clc
cmp
mov
addr16
mov
jns
jl
outsl
jp
mov
mov
adc
jg
xor
dec
and
mov
cmc
push
fs
into
sub
lahf
pop
lods
pop
dec
jne
xor
jno
jmp
inc
movsb
dec
lret
negb
mov
mov
add
rep
outsb
xchg
sub
mov
call
inc
cmp
hlt
xchg
test
pop
repnz
cltd
inc
stos
outsl
xchg
gs
mov
xchg
pop
sbb
cltd
inc
scas
mov
adc
mov
lds
mov
out
call
inc
mov
fwait
mov
lods
sbb
adc
jbe
sbb
enter
dec
mov
std
in
pop
add
mov
mov
fcomi
jmp
scas
xchg
jge
inc
mov
sbb
pop
aas
jne
lds
jmp
xchg
dec
cmc
mull
ret
jae
push
mov
jp
jg
push
loopne
xchg
cmc
call
jl
xchg
movsl
lret
ljmp
mov
movsl
mov
jae
dec
in
mov
in
mov
push
imull
dec
push
stos
sub
call
loopne
jnp
dec
xlat
mov
fidivrl
ljmp
add
test
fisttps
cwtl
xchg
pop
not
xchg
sbb
xchg
arpl
and
mov
cmp
fsub
or
push
xlat
mov
pop
sub
insl
pop
lahf
mov
jg
incl
int
lret
cmp
insb
dec
mov
or
cmpsb
and
jg
fildl
mov
stc
mov
mov
pop
sar
mov
add
enter
dec
lcall
mov
pushl
or
stos
push
mov
cmp
mov
cmp
xchg
rorb
inc
ret
icebp
out
add
jnp
stc
enter
dec
pop
or
xchg
shlb
loop
std
das
jle,pt
xor
lahf
stc
adc
and
push
jg
mov
mov
inc
mov
add
iret
or
lock
sar
decl
jbe
ja
cmp
fnstsw
pop
into
mov
sarl
call
sbb
ss
cmp
jge
jmp
hlt
das
lods
pop
ss
subb
mov
ljmp
mov
sbb
jp
mov
into
pop
mov
mov
jnp
xor
mov
decl
aas
xchg
jnp
dec
cmp
cmp
scas
sbb
iret
in
inc
mov
jb
ljmp
or
fidivs
clc
andl
add
sub
pop
xchg
dec
cmp
dec
std
shlb
jmp
push
loop
mov
pushl
adc
scas
out
mov
inc
fyl2xp1
test
push
insl
pushl
icebp
push
lock
imul
push
mov
inc
fwait
mov
lahf
add
loopne
call
stc
mov
into
push
or
repz
subb
cld
xchg
cmp
bound
dec
subl
xchg
test
cmpsb
fbld
clc
inc
lods
std
cmp
pop
stc
into
xchg
cmp
iret
nop
adc
mov
ja
lret
ror
shrl
mov
fldenv
sbb
inc
cmp
aam
cmp
mov
sbb
push
add
lds
mov
pop
icebp
incl
push
xchg
add
in
jp
xchg
cmp
negl
jl
test
jmp
out
jle
mov
dec
jno
adcb
out
cmpsl
sti
int3
clc
stc
or
xchg
mov
out
je
and
pushf
mov
sarl
pop
or
bound
decl
add
jb
testl
push
mov
push
loope
rep
test
or
dec
push
shlb
nop
jmp
xchg
cli
insb
lcall
test
sub
cmp
incl
lahf
mov
mov
pushf
mov
fstl
in
pop
mov
push
pop
pop
mov
pop
xchg
push
inc
lahf
cld
ret
lcall
in
mov
sbb
iret
push
xchg
push
and
mov
adc
pop
loopne
mov
sbb
movsl
jg
cmpsb
pop
pop
sub
pop
int3
in
andb
sub
daa
sbb
loopne
pushl
lock
adc
in
jmp
test
mov
mov
out
fsubs
xor
les
push
xlat
aas
cs
decl
mov
rcrb
mov
rcl
sub
filds
push
fisubl
out
mov
sub
lcall
mov
jmp
jmp
lret
enter
decl
cld
enter
aas
fimull
pop
pop
lock
dec
cs
nop
fistpll
cmpsl
repz
jg
pushl
dec
jle
xchg
pop
and
fimull
cmp
sbb
pushl
xchg
jle
mov
shlb
mov
mul
dec
inc
mov
pop
and
sti
or
insl
outsl
clc
incl
cmpsl
mov
pop
fistl
lea
lock
pop
in
arpl
shr
push
pop
sti
addl
inc
add
das
repz
mov
out
push
bnd
add
js
lods
push
inc
mov
mov
sub
ljmp
out
lret
cs
or
pop
or
xchg
test
ss
mov
xor
loope
test
mov
add
mov
jmp
mov
mov
xor
jbe
mov
pop
pop
fidivl
je
fwait
xchg
loop
lods
jl
fbld
mov
fcmovnu
fsubrl
pop
out
pop
orl
fistps
out
pop
ret
dec
pop
cmp
sbb
or
mov
popf
sbb
ss
inc
xchg
js
push
jbe
rorb
mov
mov
sti
jge
decb
jo
data16
jne
fldcw
lcall
cmpsl
cli
dec
jne
mov
inc
movsl
mov
mov
or
outsl
cmc
pushf
mov
mov
cmp
pop
lods
push
ja
neg
adc
hlt
pop
push
icebp
arpl
pushl
xchg
fisubrs
push
das
dec
mov
sahf
mull
cmp
insb
iret
mov
jge,pn
cmpsb
clc
in
rolb
push
pop
nop
popf
fldpi
cli
sub
mov
sub
jno
rcll
fistpll
mov
jbe
lock
cli
lcall
in
fcmovnb
stc
mov
ja
cmp
dec
sub
rcrb
call
and
daa
sub
cltd
jmp
mov
sub
cmp
xchg
aas
jne
mov
lcall
xchg
fstp
stos
mov
out
adc
xlat
mov
mov
icebp
pusha
adc
loope
lock
dec
repz
fisubl
imul
mov
dec
xchg
int
mov
jle
jnp
jg
mov
adc
xchg
or
mov
ds
cmp
mov
sub
lcall
jnp
sar
in
xchg
fdivl
cmp
fistpll
mov
inc
lahf
mov
fisttpl
cmp
jne
lcall
cmp
push
mov
mov
in
dec
mul
inc
ret
mov
cmpb
push
mov
xor
mov
push
xlat
adc
mov
fcoml
mov
pushl
out
adc
and
pop
lret
jnp
jmp
jmp
pop
pop
fsubp
daa
xor
jmp
int3
ljmp
mov
mov
fistps
sbb
ljmp
push
mov
insb
lods
lds
push
push
fdivp
push
aas
pushl
jne
xor
lods
mov
test
jnp
dec
mov
lds
pop
mov
pslld
pop
fsubl
sub
pop
mov
dec
mov
xchg
jle
mov
adc
adc
insb
ret
stos
lcall
or
int
outsb
jge
fwait
das
jmp
sub
mov
js
mov
aaa
xchg
outsl
out
xchg
jnp
add
movsl
xchg
pop
xor
jg
negb
add
neg
call
mov
dec
and
in
cmp
ljmp
adc
mov
das
cmpsb
out
test
je
mov
orb
mov
jmp
mov
movsl
scas
mov
jmp
sub
loope
loop
loop
push
jp
ja
enter
jmp
lds
push
out
pop
fstl
xchg
add
mov
icebp
fimuls
ds
push
pop
cli
in
inc
adc
je
cmpsb
xor
sbb
outsb
test
and
dec
jns
pushl
subl
xchg
ja
sbb
cmp
mov
repz
mov
or
sbb
lcall
movzwl
aam
decb
cmp
mov
jne
addr16
lcall
inc
js
enter
aam
dec
loop
mov
ljmp
imul
xor
mov
cmp
fsub
pop
mov
mov
push
stos
dec
xor
mov
into
out
sub
imul
std
add
fstpt
add
incl
shl
push
cmp
test
lock
test
clc
in
jns
arpl
pop
xchg
sti
xchg
mov
ljmp
xchg
in
mov
call
pop
ljmp
clc
int
inc
aam
fwait
pop
rolb
shr
inc
movsl
mov
jb,pn
fwait
repz
mov
pop
mov
mov
inc
dec
mov
je
mov
pop
sahf
xchg
repnz
test
ljmp
sti
ja
ret
lcall
sub
inc
push
jl
pop
jmp
std
jns
and
add
int3
lcall
ljmp
jp
in
add
pop
add
pop
mov
jg
cmpsl
or
sbb
cmp
outsb
in
into
cli
pushf
ja
lcall
clc
sbb
js
dec
add
adcl
and
loop
hlt
mov
xor
test
mov
icebp
cmc
mov
lods
jo
fnstsw
jmp
lods
mov
pop
lock
mov
popf
xchg
clc
repz
adc
icebp
sahf
ljmp
imul
call
jecxz
xchg
cld
testb
insl
push
cmp
lods
lcall
jne
add
fs
push
iret
addr16
sub
std
incl
dec
jae
aam
or
fbld
fnsetpm(287
lret
scas
adc
xor
or
xlat
subl
xchg
ja
dec
push
es
pushf
xchg
push
xor
pop
adc
cmp
fdivr
jg
sarb
stc
xor
mov
fisubl
iret
orb
insb
shr
ljmp
out
mov
jnp
adc
push
push
cwtl
sbb
loope
jno
mov
popa
out
and
out
pop
jl
and
adc
pop
lcall
shll
mov
inc
outsb
mov
add
insb
sarb
incb
push
ljmp
outsl
std
pushl
jle
xor
test
and
lock
xchg
stc
pop
add
imul
sbb
dec
call
pop
adc
loopne
add
out
in
clc
sub
pop
jg
jmp
ret
jle
std
jmp
dec
popf
popa
cmp
lcall
stc
sub
jecxz
decl
std
sbb
inc
mov
daa
dec
xchg
or
insl
jno
or
into
insb
movsl
loope
cli
jle
pop
inc
mov
into
iret
enter
arpl
push
iret
cmpsb
pusha
mov
mov
stc
add
pop
xor
inc
gs
dec
stc
repz
mov
arpl
sub
fidivs
jns
or
inc
inc
mov
add
adc
push
movsl
insl
sbb
lock
sar
pushl
les
scas
jl
js
icebp
mov
jnp
lcall
js
cmc
cs
mov
test
aad
hlt
cmc
xchg
inc
rcl
inc
cld
cmpl
pushl
data16
mov
or
popl
nop
outsl
fisubrs
neg
sub
decl
dec
outsb
push
mov
lret
sub
aas
stos
mov
add
enter
push
incl
outsl
les
push
ljmp
sub
lahf
dec
sbb
idivb
movsl
loope
cmp
dec
dec
clc
ds
stos
cmpsb
invd
lock
cs
psubq
push
int3
lcall
push
dec
adc
and
mov
cmp
mov
call
mov
lods
cmc
repnz
or
xchg
data16
xchg
or
ret
lods
sahf
fwait
test
inc
ss
push
out
outsl
xchg
iret
imul
push
and
out
jl
test
hlt
addr16
aam
inc
in
in
ja
clc
mov
jmp
incl
cmc
dec
xlat
dec
pop
mov
add
ljmp
test
in
mov
sbb
dec
fdivr
jmp
cltd
stos
pop
in
movsb
jnp
rcrl
sbb
pop
loop
jp
in
fldenv
call
clc
push
decb
sbb
cmp
push
cmpl
xchg
push
cs
jg
push
xor
add
stc
sbb
lret
bound
dec
cli
test
clc
ljmp
cld
dec
clc
decl
adc
push
xchg
jae
push
out
inc
cmp
sti
or
dec
jns
or
xchg
mov
cli
sbb
outsl
mov
sahf
pause
je
clc
clc
fidivrs
sar
hlt
push
push
stos
adcb
push
popf
sub
inc
mov
mov
ljmp
mov
addr16
push
xchg
test
and
ljmp
and
pop
xor
in
stc
jbe
test
in
or
test
in
sub
ss
sbb
mov
adc
sbb
ficompl
lahf
test
jmp
mov
mov
outsb
inc
or
adc
stos
inc
cmpsb
inc
pop
out
mov
stc
sahf
ljmp
cld
inc
repz
test
arpl
in
and
es
mov
lret
repnz
imul
mov
add
push
loope
fisttps
call
xor
das
iret
sbb
xlat
adc
repz
in
movsb
pop
push
jbe
testb
fbstp
dec
out
stc
in
xchg
mov
ja
stc
icebp
incb
sbb
outsl
clc
jg
repnz
pop
xchg
cmp
fstl
push
scas
and
mov
gs
pop
clc
das
out
ss
shlb
lahf
ficomps
adc
pop
outsl
fdivr
xor
mov
fstpt
xlat
mov
test
jmp
and
hlt
sub
push
sbb
lret
xchg
add
decl
sbb
push
fwait
ja
hlt
repz
mov
inc
sub
push
pusha
jecxz
adc
mov
fdivp
adc
aad
cld
cmp
push
clc
daa
sarb
into
gs
dec
mov
push
sub
pop
mov
cld
jmp
pop
jl
mov
dec
cs
push
nop
jle
jno
add
outsb
lret
lret
mov
and
pop
test
in
mov
mov
scas
out
lods
stos
stos
lods
sub
jmp
repz
outsl
xchg
sbb
ljmp
sub
xchg
popf
mov
xchg
pushf
aad
sahf
pusha
push
add
int
nop
scas
imul
xorl
scas
pop
mov
push
dec
adc
pop
add
mov
add
ja
mov
mov
stos
repnz
loop
and
fdivr
jg
test
enter
jae
push
daa
outsl
imul
lods
jno
push
decb
mov
add
test
mov
in
xchg
lock
jae
add
rolb
fdivrs
jno
ljmp
test
in
xchg
sar
sbb
xchg
sti
jb
cmpl
sub
ja
ljmp
shl
xchg
lock
pusha
pop
rclb
subl
call
add
fildl
dec
movsb
or
in
fbld
xchg
sti
jns
pop
ret
push
adc
xlat
jg
adc
insb
jmp
jle
in
jl
jecxz
sti
mov
inc
daa
jns
pop
lods
pop
mov
loopne
xchg
icebp
mov
jg
lahf
mov
mov
nop
ljmp
frstor
out
in
lock
loope
ljmp
ss
jnp
pop
xchg
pop
mov
cmp
repnz
xor
add
jmp
cmp
fwait
out
in
mov
mov
mov
lcall
adc
dec
jle
cmpsb
cmp
dec
add
enter
lock
push
jmp
or
pop
sbb
jae
fnstenv
cmp
cmp
push
mov
push
pop
jp
outsl
cmp
out
pop
or
call
insl
inc
fdivp
dec
repnz
mov
jne
inc
mov
cmp
sbb
inc
iret
stos
sarb
xchg
mov
push
rorl
insb
mov
jmp
out
xchg
dec
rcl
shrl
je
and
pop
jb
leave
std
sbb
out
lcall
dec
sub
std
es
cmpsl
jns
ljmp
mov
mov
fisttps
fidivrs
popf
aaa
popa
and
scas
scas
rcrl
dec
cld
sub
pop
in
sbb
pop
mov
lcall
sub
adc
dec
pop
mov
mov
inc
rclb
mov
jmp
int
lcall
lods
std
sbb
imul
xor
iret
cld
cmpb
mov
scas
incl
fisubrl
and
mov
xchg
pop
je
test
pop
cmc
aad
jge
movsb
mov
adc
jle
iret
das
adc
sarb
jl
hlt
iret
pushf
mov
call
call
push
adc
sbb
imul
test
mov
adc
or
scas
leave
jg
cmpsb
int
adc
leave
adc
xchg
incl
cld
mov
add
add
pop
nop
mov
adc
mov
enter
call
sub
sbb
cwtl
divl
rcrb
xchg
push
mov
mov
roll
pushl
mov
out
popf
insb
inc
fcompl
daa
aam
pop
js
adc
shr
mov
mov
lret
jg
dec
rcl
mov
lret
ljmp
mov
pop
xchg
pop
sbb
mov
repz
call
or
ljmp
notl
jg
ret
repz
mov
jmp
xchg
lock
lods
shl
call
movsl
cltd
xchg
pop
sub
inc
mov
mov
mov
pushl
xchg
mov
cmpsb
dec
xchg
stos
lods
cmc
inc
jo
mov
jge
sub
incl
ficompl
xchg
jnp
adc
in
mov
shr
mov
mov
pop
mov
inc
mov
pushl
stos
mov
outsl
cmp
or
sti
rol
ja
jno
jl
dec
mov
cld
lcall
mov
jnp
pop
mov
jg
rolb
or
std
sub
mov
sar
mov
ret
std
rorb
cwtl
cli
pushl
xor
mov
lret
addr16
outsb
inc
pop
popa
ljmp
push
mov
bndldx
andb
push
aad
jp
aaa
push
add
adc
dec
test
stc
sbb
mov
outsl
das
imul
fldl
pop
fbstp
xchg
test
dec
icebp
xchg
idivb
or
push
lods
dec
xchg
leave
dec
or
dec
mov
push
jge
in
push
call
loopne
lret
cltd
movsb
push
ds
ror
sbb
add
jg
cmp
sub
cmp
ja
leave
xchg
xor
lods
pop
hlt
pushl
cld
push
lahf
or
push
arpl
dec
xchg
xchg
jp
popl
outsl
inc
mov
decl
dec
mov
cltd
aas
arpl
mov
fnstcw
je
jbe
cmc
insb
jge
inc
subb
jb
loope
das
clc
jmp
xor
lret
cmpb
push
adc
sub
mov
pminub
jmp
notb
mov
mov
mov
cmpsb
lahf
mov
add
mov
mov
orb
xchg
dec
jmp
mov
pushl
mov
jmp
sub
cmp
jae
and
sub
fistpll
jp
add
out
jg
lret
push
call
xchg
movsl
sub
aad
cltd
call
mov
js
cld
jge
mov
pop
cmc
pop
insl
das
outsl
fnstcw
dec
std
inc
rcl
cmc
adc
ja
clc
xor
decl
scas
pop
sbb
xchg
xchg
aam
fldcw
repnz
lods
jmp
add
mov
pop
or
into
push
fnsave
sbb
call
into
iret
cmc
in
adc
gs
lcall
test
fcos
shl
mov
adc
lcall
inc
inc
lock
pop
rclb
outsl
jmp
sub
incl
mov
sarl
in
dec
adc
inc
cmp
pop
scas
clc
mov
in
inc
repz
out
inc
jo
jmp
das
fwait
lds
jle
pusha
adc
sbb
cmp
mov
scas
jne
in
push
or
xchg
not
push
jnp
rcrl
ja
in
jbe
xchg
cld
add
stos
inc
ss
mov
mov
pop
fnstcw
repz
mov
jmp
push
test
mov
fcomps
push
in
fstpl
or
cmp
jecxz
test
xchg
adc
add
out
pushf
push
sub
add
dec
pop
cli
xor
sbb
decl
int3
rclb
cld
repnz
xorb
jmp
cmp
adc
insl
xchg
xchg
leave
stos
jge
fidivs
cmpsl
jb
hlt
fbstp
fmul
loope
je
and
incl
inc
decl
fadd
mov
inc
clc
mov
mov
mov
add
lds
out
jmp
aad
int
addr16
lock
in
push
mov
inc
sarb
mov
fwait
test
mov
repz
mov
daa
adc
stos
lods
cmc
pop
in
jge
dec
lret
cmp
dec
fucomp
dec
pop
popa
mov
and
notl
xchg
ja
inc
xor
push
push
iret
popf
in
inc
adc
cld
lcall
mov
mov
fistpll
pop
add
cmp
pushl
rcrl
fnstenv
out
dec
aas
pop
add
lea
std
and
jge
ljmp
jle
rcll
movsb
xor
cmp
mov
and
jg
hlt
jb
test
mov
loope
es
sahf
xlat
aaa
mov
decl
ds
icebp
dec
outsl
fisttpl
cmp
lcall
fisttps
xchg
in
call
sarb
push
je
repz
pcmpgtw
mov
cmp
mov
xchg
mov
mov
stos
lcall
popa
dec
and
push
jecxz
inc
addb
sahf
movsb
repnz
xchg
call
pop
hlt
sub
push
leave
cmp
pop
xchg
inc
repnz
sbb
push
xchg
inc
mov
icebp
push
mov
lcall
addr16
fistps
js
cld
popa
cmp
pop
arpl
xchg
or
test
jmp
jne
gs
imulb
aam
das
xchg
outsl
push
jmp
mov
mov
and
out
or
add
cmp
mov
mov
and
in
in
sbb
dec
repnz
sahf
loope
mov
cli
in
nop
adc
mov
lcall
into
pop
stos
sub
jl
das
cmp
enter
fmul
inc
fcos
call
leave
dec
fiadds
insl
mov
adc
sbb
aaa
outsl
dec
fidivl
jnp
lcall
add
cld
cmc
rorl
xchg
rorl
sbb
imul
mov
scas
add
incl
xchg
sbb
pop
ljmp
test
call
mov
pop
or
push
gs
addr16
fcmove
xor
mov
inc
clc
lcall
fldenv
or
mov
lret
incl
jb
cmp
cmovle
jno
inc
aas
cld
mov
rcrb
adc
cmp
mov
jne
mov
add
or
xchg
fisttps
xchg
add
xor
scas
daa
sbb
repz
repz
xor
insl
call
mov
sub
out
pop
sarl
jmp
inc
push
mov
pop
hlt
or
js
pop
xchg
mov
lcall
dec
jl
xor
scas
mov
and
push
scas
daa
xchg
mov
xor
aad
cld
sub
dec
mov
mov
dec
repz
jg
clc
dec
add
cmp
imul
jo
ja
dec
cmpsl
mov
mull
cltd
fs
mov
cltd
adc
insb
dec
mov
or
mov
mov
aam
sub
sub
aaa
cmpsl
xchg
repz
mov
sbb
sahf
cs
bound
sti
fadds
xlat
iret
pop
mov
dec
jle
aam
nopl
aas
loopne
faddl
mov
out
cld
dec
sbb
dec
test
call
in
les
jg
in
repz
sub
aam
rcr
push
movsl
fisttpl
lcall
inc
and
fbstp
lahf
push
lea
mov
out
int3
xor
movzbl
mov
jo
xor
cmp
mov
and
call
or
mov
mov
in
jp
scas
adc
inc
decl
jl
mov
sub
mov
aam
das
idivb
xchg
aas
adc
jmp
ret
into
cltd
and
xchg
pop
iret
loope
std
pop
xchg
push
sti
jg
add
fs
sti
test
inc
mov
pop
jg
jg
and
inc
push
test
out
mov
std
cmp
add
mov
cltd
scas
mov
decl
mov
lods
out
cs
mov
ds
loope
dec
dec
maskmovq
idivl
arpl
pushl
jmp
xchg
inc
and
ljmp
out
ljmp
pop
jp
arpl
repnz
push
shrb
inc
ror
lock
ror
imul
jg
push
push
adc
std
repz
dec
jp
loope
push
aas
les
adc
jp
out
jmp
cli
je
xchg
cwtl
jp
out
fidivl
mov
mov
cmp
cwtl
xlat
mov
fisubrl
lcall
loop
cmp
popf
loopne
mov
sub
sbb
mov
cmp
jl
mov
mov
stos
ljmp
cwtl
pop
xchg
xchg
roll
std
in
dec
mov
jnp
jg
adc
pushf
mov
jns
mov
sub
call
imul
pop
cmp
mov
jnp
out
test
cmovae
pushl
lock
call
jg
les
push
pushf
das
loopne
mov
leave
sub
cmp
jae
call
sbb
mov
movsb
cmp
or
push
add
jle
or
decl
mov
das
ja
sti
push
mov
sub
xchg
mov
mov
frstpm(287
out
fdivr
andb
fcomps
sbb
fwait
notb
call
jbe
test
sbb
cmp
pop
fdiv
cmp
outsl
js
pop
icebp
pushl
sbb
call
in
cmp
pop
insb
push
pushl
clc
lods
lock
shlb
lea
js
push
jp
mov
call
outsl
mov
repnz
gs
jge
dec
shlb
xor
pushl
mov
das
inc
mov
mov
es
cmp
mov
jl
mov
in
frstor
iret
dec
out
lret
fdivrl
jb
jnp
hlt
xchg
shlb
clc
inc
fwait
ljmp
orl
sub
jp
out
ljmp
out
jge
aaa
int
jmp
inc
jo
cmp
stos
inc
outsb
sarl
sub
push
mov
or
jne
ljmp
test
and
jbe
pop
push
lret
xchg
jg
xchg
iret
xchg
dec
cmp
sti
ljmp
mov
hlt
dec
decb
mov
idiv
push
es
jg
or
dec
mov
jmp
sbb
mov
jg
pushf
cltd
cmpsb
jbe
je
sub
loope
mov
stos
jecxz
jp
imul
ljmp
popf
add
sub
test
popfw
movsl
shll
xor
xchg
out
hlt
xor
cmpsl
movsb
or
call
popa
cmc
cmp
ljmp
incl
movsb
mov
stos
sahf
cs
jne
lahf
sbb
cli
lea
jp
incl
iret
shlb
mov
pop
jns
mov
cmpsb
cmc
fstps
jns
jecxz
stc
sti
scas
jns
gs
mov
loop
xchg
out
cwtl
mov
or
jg
incl
jp
push
jbe
add
push
aam
ret
or
repnz
addl
jg
jmp
lret
or
sti
cmp
hlt
sub
fnstenv
and
xlat
inc
iret
lcall
jmp
out
shlb
sahf
fdivrl
jb
pop
jge
mov
fsub
push
call
mov
in
mov
ljmp
xchg
adc
cmpsl
sahf
xchg
shlb
mov
push
sti
fwait
xor
lret
dec
je
inc
in
cmp
std
mov
iret
out
lea
decl
mov
sub
das
jnp
xchg
imul
cmc
or
addl
call
dec
xchg
pop
mov
cld
lcall
pop
fdivrl
pop
cs
cmp
negb
mov
stc
idiv
and
flds
scas
jg
or
xlat
fs
mov
jo
test
std
stc
jge
mov
ja
xchg
pop
lods
jle
iret
mov
mov
std
mov
icebp
sbb
ljmp
fsubrl
lret
notl
xlat
mov
fidivl
add
nop
aas
mov
mov
lahf
inc
cltd
jbe
inc
xchg
dec
jmp
mov
neg
mov
cmp
ljmp
xor
cmp
rclb
lret
jb
sub
faddl
outsb
lcall
jmp
inc
inc
add
ficoml
inc
mov
mov
out
out
pusha
shl
xchg
sbb
xor
daa
pop
jmp
fcoms
dec
adc
fld
cli
cmp
scas
xor
test
jmp
pop
mov
dec
movsl
int
loopne
cltd
push
and
jmp
cmpl
test
inc
lock
cmp
loope
mov
pushl
xchg
lea
jecxz
fwait
out
inc
inc
sub
xchg
adc
mov
fdivl
loope
in
push
pop
sub
andl
popa
add
dec
out
mov
iret
dec
test
repnz
mov
mov
stc
lock
sbb
icebp
enter
jns
xchg
cmp
sub
inc
xor
add
pop
push
push
sbb
mov
call
and
stos
lea
aam
sbb
sub
fucomip
in
and
mov
jg
xchg
stos
sub
mov
lods
jne
jecxz
pslld
mov
outsl
jbe
imul
pop
loopne
adc
xchg
aaa
aaa
jb
mov
daa
icebp
mov
insl
add
jmp
inc
mov
shlb
ds
js
pop
cmp
xchg
lcall
jmp
out
mov
in
inc
int3
push
scas
call
fistps
inc
lods
sbb
adc
ljmp
jg
dec
mull
lea
mul
push
mov
daa
cld
in
test
aad
jecxz
jmp
fdivr
int
or
rclb
xchg
fcoml
adc
dec
aad
fmuls
pop
cld
lcall
cmp
fcomps
lds
mov
mull
popf
cmp
cwtl
lock
or
and
decl
int
xchg
daa
mov
mov
mov
pop
mov
std
lock
mov
fstpt
shrl
arpl
ja
mov
cmc
jl
and
enter
loop
cmp
int3
mov
pushl
enter
icebp
jne
repz
ret
insb
xchg
in
dec
add
and
das
mov
adc
xor
add
jg
cmp
out
test
adc
ret
icebp
outsb
roll
inc
repz
pushl
dec
add
and
stc
mov
sbb
pop
in
xchg
push
lods
fs
xchg
xor
push
fadd
xchg
xor
mov
in
mov
leave
jno
in
dec
pop
cmpsl
mov
jmp
int
xor
xchg
subb
add
idivb
and
and
push
cmp
test
insl
cmp
fwait
or
cmp
cmp
or
outsb
lret
pushf
ret
daa
pop
xor
inc
jmp
loopne
mov
xchg
pop
push
sub
sti
imul
adc
or
fcomps
jg
fldl
xlat
mov
insl
je
ret
je
sbb
insl
mul
dec
push
pushf
cmp
mov
pushl
pop
fistpll
stos
cmpsl
lods
mov
test
sti
inc
cmpsl
xor
inc
xchg
stos
movsl
xlat
jle
scas
test
testl
stos
hlt
push
dec
adc
pushl
test
push
inc
popa
pop
out
les
jge
out
xchg
repz
add
in
inc
or
sub
ja
push
aaa
mov
in
jle
fwait
jle
pop
mov
xor
push
lahf
iret
lret
sbb
std
or
lret
lods
xchg
fmul
insl
pop
dec
xor
lcall
push
fiaddl
fnstcw
in
in
dec
std
xchg
cmp
mov
loopne
dec
cmp
jmp
adc
xchg
cmp
fcoml
adcb
shlb
xchg
out
sub
lcall
jecxz
pop
jbe
ljmp
xchg
add
fdecstp
mov
sbb
add
pop
bnd
push
lahf
mov
sahf
pop
out
mov
imul
jnp
sub
arpl
pop
adc
pushl
mov
lods
imul
xchg
fadds
imull
add
daa
lock
jl
cld
jmp
in
seta
stos
xchg
sbb
std
fcmovnb
xorb
enter
incl
leave
mov
out
inc
mov
out
inc
jg
mov
sbb
ja
or
notb
shlb
mov
lcall
push
mov
inc
fld1
xchg
and
mov
insl
lahf
pop
cmp
sti
pop
icebp
incl
mov
pop
ja
sbb
insb
cmp
mov
sbb
fcomps
lcall
jecxz
jae
mov
lcall
mov
cmpsl
cmpsb
pop
lods
cmpsl
sub
ljmp
jl
or
adc
lods
into
fiadds
ss
mov
mov
in
mov
jmp
repz
push
jge
fisubl
sub
mov
decl
mov
fndisi(8087
repz
sbb
jno
pushf
sub
jbe
jno
scas
mov
adc
mov
cmp
xor
jecxz
pop
imul
jmp
mov
mov
aas
iret
scas
sbb
jae
inc
popa
das
jnp
popa
outsl
push
sbb
fst
ret
mov
cld
xor
stc
test
out
mov
ret
and
cmpsb
idivl
jg
test
and
loope
idivb
repnz
xchg
cmp
sub
out
in
jg
xchg
lret
push
mov
jp
daa
push
aas
push
jbe
out
fcmovb
sahf
add
std
mov
cld
mov
pop
test
mov
stc
mov
fdivp
xchg
lret
mov
adc
cli
dec
outsl
icebp
leave
add
jecxz
out
clc
sbb
imul
enter
push
shlb
testl
insl
inc
mov
aas
cmc
push
mov
mov
cmpsb
scas
daa
test
sub
call
call
and
pop
dec
push
lret
out
cmpsb
push
divl
lcall
movsl
xor
cmp
data16
cltd
xchg
mov
lret
hlt
pop
sbb
lds
ljmp
sahf
cmp
in
test
sub
sub
orb
add
add
jmp
in
push
or
sbb
out
js
sbbl
jg
xchg
insb
sbb
out
out
lock
sbb
popf
jae
test
xchg
movsb
cmp
lods
jbe
in
incl
mov
add
loop
repz
cli
clc
pop
mov
aas
rdtsc
jne
inc
adcl
xchg
pop
rol
push
imul
stc
das
xor
std
pushl
rcll
out
mov
es
stos
lcall
jbe
push
stos
jne
je
test
int3
add
add
sarb
lcall
mov
dec
aaa
mov
cmp
fcomip
jbe
pop
mov
shll
push
into
push
shlb
xchg
fisubl
icebp
jg
inc
mov
fst
lret
lret
cld
std
pop
int
out
stos
outsb
pop
sub
and
sti
je
dec
aaa
cli
addl
mov
mov
jmp
or
inc
ret
mulb
sbb
call
push
pop
loope
ror
sub
cmp
test
jecxz
test
mov
cmp
cld
xchg
sub
jp
xor
mov
outsb
sub
dec
sbb
mov
mov
pop
mov
ljmp
mov
fdivl
testl
lds
es
push
cmp
pop
pushl
sti
pushl
int
cmp
mov
ja
adc
incl
insb
sahf
push
or
fstpl
fnop
repz
ss
call
jb
jg
rep
mov
jns
loope
pusha
pop
mov
cmp
jo
shlb
outsl
cmpsl
int3
adc
ficoms
movsb
xchg
rclb
dec
jne
outsl
fcomps
cld
idivl
or
out
cmp
pushl
fimull
xorb
xor
add
push
adc
sub
inc
sub
xchg
lcall
cld
mov
pop
inc
or
loopne
cmp
add
adc
mov
sti
ds
pop
stos
xor
stos
rcll
les
adc
pushl
push
cld
hlt
fisttps
fisubrs
sub
ficomps
test
and
xchg
leave
mov
mov
cltd
xorl
sti
mov
out
aad
mov
incl
sti
dec
clc
in
jmp
dec
sets
dec
fcoms
repz
jg
pushl
out
loopne
int3
jnp
mov
scas
sbb
push
push
mov
leave
mov
mov
enter
pushl
stos
cmp
pop
xor
out
jne
mov
pop
push
mov
fdivrl
push
pop
push
std
mov
std
mov
jmp
mov
aas
scas
iret
mov
fucomi
sub
decl
aam
cmp
mov
adc
daa
dec
inc
out
mov
and
inc
shll
jg
mov
or
cld
icebp
std
xchg
cmp
jmp
lahf
arpl
nop
cltd
je
repnz
adc
add
adc
push
ljmp
aas
movsb
push
xchg
fs
mov
lahf
popf
inc
mov
jecxz
mov
xchg
out
pop
int3
sti
mov
add
and
xchg
dec
jge
pop
test
stos
xor
int
add
mov
ret
mov
loope
push
insl
cs
mov
dec
cmp
outsl
fidivrl
jne
ficompl
xor
into
out
push
js
mov
ljmp
repnz
add
pop
xchg
int
cmc
dec
cmpsl
jg
xor
lock
icebp
call
fists
dec
cmpb
jg
lods
sbb
pop
js
xchg
jns
cmp
addr16
or
dec
fwait
dec
std
fbstp
inc
movsl
ds
mov
mov
sti
ljmp
inc
inc
pushf
fistps
mov
mov
clc
movsb
nop
mov
pushf
xor
cmp
jbe
cmc
sahf
push
push
out
sbb
mov
pushl
sahf
enter
push
pop
jb
dec
adcb
dec
enter
je
jb
lret
lcall
push
fiaddl
fcmovbe
jmp
xor
mov
mov
cli
mov
jg
out
aaa
lahf
pop
add
mov
scas
adc
outsb
cmpb
mov
xchg
test
scas
cmp
xchg
aas
orw
les
pop
jne
lock
cmp
icebp
aaa
cld
pand
imul
jae
add
ljmp
xor
or
aam
cld
addr16
mov
jg
xor
rcrb
mov
in
sbb
sbb
cmp
sub
cmp
ss
mov
mov
pop
ss
enter
hlt
jmp
js
jl
lock
adc
inc
imul
adc
jbe
and
fwait
movsb
std
add
stos
out
ret
lcall
loopne
inc
lahf
cmpsb
cli
add
inc
jae
aaa
lock
ret
push
stos
aas
ret
pop
mov
or
call
sahf
mov
scas
shlb
aaa
sbb
into
pushf
out
push
das
ljmp
pop
cs
mov
mov
cli
mov
mov
mov
inc
arpl
push
sub
test
cmpsl
cld
mov
jmp
mov
xor
inc
push
adc
test
iret
mov
jbe
cli
in
xchg
arpl
jp
jns
das
sar
adc
mov
addl
incb
out
daa
mov
popa
inc
jnp
adc
pusha
std
push
stc
lock
jle
sbb
mov
jae
sbb
or
push
ds
sti
dec
movsb
cmp
call
xchg
aam
mov
ds
aaa
cmpsl
mov
mov
xchg
pushl
pushf
inc
mov
or
les
mov
push
out
cli
ljmp
aam
sahf
idiv
out
int3
or
cmp
pop
cld
fcmovbe
pop
imull
movsl
dec
cmp
jecxz
cwtl
jo
clc
jg
sub
lock
mov
loope
adc
dec
pop
push
push
call
icebp
ficompl
push
dec
xchg
jg
test
add
pop
sub
fists
mov
test
jg
push
sub
lods
ret
decb
mov
stos
pop
jae
mov
ljmp
cmpsb
int3
jp
xor
loopne
jmp
or
add
std
mov
xchg
punpckhbw
jp
mov
out
cli
mov
cmpsl
fmuls
sub
sub
invd
adc
call
and
jmp
jnp
cmc
sbb
jmp
adcb
mov
sub
pop
dec
decl
cmp
int
enter
cmp
loop
jbe
arpl
push
iret
or
pushl
scas
jns
sub
pop
cmp
pop
mov
iret
xor
cltd
add
call
xlat
loopne
ret
js
rorl
xor
mulb
mov
push
xchg
fcomip
inc
ja
jmp
jge
sub
jb
in
ljmp
stc
out
stos
adc
adc
inc
fcos
mov
inc
shl
jl
push
mov
addr16
mov
push
out
arpl
cmp
clc
out
clc
xlat
jo
shlb
mov
add
cmpsl
lahf
inc
lahf
loop
aaa
std
add
loopne
es
adc
jnp
adc
ja
icebp
andl
jb
adc
lds
push
std
jg
pop
cwtl
stos
sti
popa
lret
push
fimull
enter
call
xor
jne
mov
xchg
jle
into
sub
std
fcomip
inc
js
jb
cmc
inc
das
adc
les
jmp
adc
decl
std
mov
xchg
jae
cmp
ret
testl
mov
das
mov
sar
pop
jbe
mov
outsl
sbb
out
sbb
hlt
std
mov
enter
je
fsubr
jbe
fisubrs
movsl
push
pushf
std
scas
push
loopne
pop
rcrb
sti
clc
jbe
sti
inc
and
loope
lret
mov
or
mov
call
cmc
lret
jecxz
add
jns
fdivrp
and
pushf
cli
mov
cmp
push
ljmp
popa
jae
jle
iret
out
and
mov
out
aaa
fs
fistps
cmp
jnp
lcall
pop
sbb
and
jnp
xchg
mov
rcll
loope
cwtl
pushf
fcomp
xor
mov
lods
decl
aad
adc
jg
insl
flds
or
inc
pop
inc
cmp
into
and
decl
fwait
xchg
xchg
mov
in
cmp
mov
cmp
lcall
or
in
jp
mov
decb
sbb
mov
push
mov
mov
mov
in
fnsave
jne
or
or
push
lods
lcall
cltd
popa
push
stc
sar
movsb
in
cmpsb
daa
icebp
in
jb
out
push
fnsave
jg
sub
pop
aas
repnz
mov
jg
out
cmpsl
in
subb
into
fcmovnbe
xlat
or
cmp
mov
jmp
rclb
mov
testl
adc
adc
jp
sbb
and
cli
ljmp
cmc
pop
aam
cmp
call
xchg
fstpt
notl
jb
cmpsb
jge
ljmp
enter
add
loopne
fists
xor
mov
lahf
fdivrp
jg
add
std
sbb
imul
jle
imul
sar
cli
les
or
bound
insl
and
pop
mov
pop
out
repz
call
mov
inc
arpl
loop
dec
jp
mov
pushl
icebp
xchg
repz
jb
jecxz
xor
subl
imul
leave
mov
outsl
icebp
fsubr
in
daa
test
sti
inc
inc
lcall
pop
dec
mov
and
sbb
mov
dec
xchg
dec
inc
add
xor
into
sub
pushl
repz
and
sarb
and
les
jmp
inc
push
rolb
outsl
ljmp
iret
mov
sub
rcll
nop
gs
adcb
inc
dec
jb
cld
or
cmp
mov
scas
cmp
pushf
xchg
clc
ljmp
sbb
xchg
shl
mov
dec
xor
out
dec
mov
neg
mov
clc
pushl
in
jmp
cmpsb
rcr
inc
dec
js
lods
test
aaa
pop
xor
stc
es
cwtl
mov
sti
inc
lcall
into
mov
aaa
outsl
inc
jne
dec
pop
rclb
loope
inc
ret
pop
mov
shl
insb
cmp
movsb
jmp
mov
in
out
iret
popf
into
mov
or
dec
icebp
pushl
sub
cmc
xchg
icebp
xor
xor
push
add
jge
test
decl
jl,pt
clc
add
arpl
outsl
adc
or
sti
repnz
xchg
arpl
mov
jmp
outsb
repnz
jo
mov
out
insl
mov
clc
addr16
xor
jae
pushl
xor
lock
shll
dec
movsl
add
scas
sub
xor
lret
sbb
sbb
and
sbb
and
push
movsb
push
mov
jg
mov
shrl
inc
xchg
cltd
hlt
shrl
aaa
cld
dec
adc
xchg
ds
sbbb
shl
and
outsb
ret
add
fcmovu
jg
test
xchg
pop
cmpsb
insb
cmovne
lods
add
call
mov
js
sub
jmp
cmpsb
ret
loopne
fdivl
jo
adc
repz
jg
enter
or
cmpsb
loope
mov
inc
rcll
lret
cmc
hlt
out
test
push
loopne
lahf
inc
icebp
out
in
shll
stc
pop
cmp
call
out
out
xchg
add
ror
adc
cmp
fldenv
mov
jg
movsb
dec
sbb
adc
inc
mov
cmpsl
fisubl
inc
iret
pop
into
cld
add
jg
push
scas
add
mov
stos
mov
std
xor
in
add
inc
in
mov
test
les
and
lcall
sbb
sub
loopne
cmpb
dec
mov
jp
pop
dec
or
pushl
pop
cmp
roll
out
cmpsl
sub
mov
cmc
jbe
cltd
xor
icebp
jl
xchg
loopne
xchg
push
cmp
mov
icebp
mov
hlt
xorb
pop
mov
jne
push
in
iret
xchg
sub
pop
xchg
lahf
icebp
fldt
push
cli
jl
lcall
and
loope
or
xor
inc
scas
sbb
xchg
mov
daa
sub
sbb
add
loope
lret
icebp
out
xor
add
push
dec
push
dec
cmp
es
sti
popa
int3
sub
and
sbb
clc
push
adcl
dec
mov
jmp
in
lock
inc
mov
test
mov
mov
lock
mov
lret
je
cli
in
test
jge
pusha
fwait
cmc
out
adc
mov
fisttps
jne
aas
outsb
push
lahf
je
decl
or
dec
cmp
sbbl
ficomps
mov
pushf
cld
dec
insl
andl
cld
jmp
cmpsl
xlat
push
ficoms
fiaddl
dec
imul
cmc
idivl
incl
pop
lods
stc
mov
adc
std
adc
fisttps
mov
pop
rol
stc
jle
aas
xor
int
lcall
mov
clc
into
cli
mov
movsl
ljmp
cmp
jge
push
adc
mov
int3
iret
jl
incl
cmpsb
inc
shrl
fdivl
mov
ds
dec
scas
or
leave
sbb
ss
dec
or
call
jl
repnz
cmp
ja
lcall
jg
jno
imul
mov
pushl
addr16
shl
sti
mov
or
dec
cli
dec
scas
in
sti
dec
mov
in
dec
in
mov
mov
leave
mov
mov
sahf
lods
xchg
nop
mov
sbb
push
repz
xchg
hlt
sub
lret
ret
xchg
outsl
inc
add
or
mov
inc
shrl
popf
cmp
mov
push
jns
loop
hlt
jl
cmp
loopne
mov
pop
jecxz
cli
fucomip
repz
ds
stos
adc
shl
add
cltd
xchg
cli
decl
decl
cld
stos
out
mov
xchg
rorb
xchg
mov
xchg
loopne
jmp
push
and
jge
adc
mov
leave
clc
call
mov
in
xchg
clc
jne
and
scas
in
aam
mov
decl
fdivrl
pop
jecxz
jmp
mov
call
mov
cmc
nop
ret
dec
adc
int
dec
jg
push
std
cmpsl
flds
daa
insb
adc
test
pushl
ljmp
clc
lret
pop
iret
adc
scas
add
fcmovnb
in
lods
xchg
icebp
fwait
imul
jg
or
mov
test
repz
jmp
jae
movsl
add
out
stos
inc
nop
pop
popa
jnp
pushf
mov
mov
dec
clc
mov
repz
gs
fisubrl
ljmp
stc
adc
out
stos
nop
pop
mov
lcall
inc
pop
dec
push
mov
mov
das
xor
incb
mov
cmp
in
jns
aaa
jge
mov
loop
loope
inc
rcl
outsb
aas
mov
scas
jmp
decl
sahf
enter
jo
mov
xlat
out
cld
test
daa
pop
add
sahf
push
mov
mov
jecxz
cmc
mov
mov
iret
and
iret
test
cltd
data16
inc
not
ljmp
ljmp
das
loop
scas
aas
cwtl
imul
shlb
fisubl
ror
bound
xchg
adc
insb
adcb
ljmp
jmp
or
dec
push
cli
add
lock
outsb
outsl
add
cwtl
dec
call
mov
inc
jns,pt
pop
cmc
nop
cwtl
test
pop
repz
jmp
loope
pop
out
fdivrp
incl
jl
js
fdiv
int3
lret
int
adc
shl
pop
out
ja
aas
sbb
push
mov
xor
hlt
inc
jge
fdivrl
addr16
in
xchg
pop
fdivr
adc
andb
dec
in
scas
lea
pop
xchg
jge
xchg
addr16
inc
repz
lock
xor
cmp
icebp
outsl
cli
decl
scas
xchg
jl
mov
lahf
sahf
pusha
pop
int
ds
mov
mov
jne
adc
xchg
sarb
jg
cwtl
jb
adc
adc
decl
mov
adc
daa
shll
cmc
sbb
ljmp
xorl
iret
cmpsl
mov
out
ds
arpl
negl
pusha
xor
fdivrl
xchg
ljmp
xchg
mov
mov
sti
adc
xchg
mov
lds
call
sbb
cltd
hlt
call
mov
incb
mov
or
out
jecxz
cld
pop
mov
pop
sti
mov
jp
push
ret
imul
mov
cltd
and
daa
adc
adcl
jmp
add
xchg
pop
imul
call
rcl
dec
in
xor
jl
mov
loope
add
fdivrl
sbb
mov
lcall
sarb
sub
icebp
xchg
lret
push
fsts
in
clc
pop
fdivrs
dec
add
imull
dec
cltd
add
iret
pop
std
fs
jg
jmp
ret
rcrb
mov
jae
cmp
cmp
sub
loop
jmp
pushl
xor
loopne
add
mov
adc
jbe
hlt
test
shrb
and
scas
sub
icebp
out
push
fwait
ret
std
imul
fistps
sbb
inc
or
jb
in
out
call
loopne
mov
out
xlat
xchg
jb
mov
xor
xor
jmp
loop
dec
call
jns
in
repnz
dec
ljmp
inc
icebp
mov
dec
push
testl
insl
aas
test
sqrtps
pop
lds
decl
divb
sub
gs
sbb
fildll
stc
sbb
call
push
and
jnp
or
xchg
shll
add
mov
lret
mov
adc
mov
aas
mov
sar
scas
xchg
bound
test
std
mov
imul
adc
fwait
jmp
sar
jecxz
leave
rep
test
imul
xor
fbstp
mov
dec
mov
push
cld
cmp
mov
cltd
dec
xor
add
fnstcw
add
xchg
and
jno
cmp
in
popa
sbb
pop
incl
fwait
mov
std
mov
je
pusha
clc
fidivrl
jb
push
das
xchg
gs
cmpsb
sub
lock
and
mov
adc
stos
ret
cltd
sub
xchg
push
ljmp
mov
mov
cld
jmp
icebp
add
push
aad
cltd
fbld
dec
int
lret
xor
mov
xor
ds
int
jmp
aaa
pop
jo
cli
outsl
cltd
lret
incl
insl
push
mov
xor
test
stos
mov
sbb
out
jae
fcomip
or
mov
dec
dec
call
fildll
cmpsl
call
mov
xchg
out
sub
mov
mov
dec
sahf
pop
in
aad
jmp
push
bound
push
mov
mov
mov
pop
cltd
jge
hlt
pop
xor
stos
movsl
cmp
fists
pop
call
mov
jns
xchg
push
xor
out
pop
or
fsubrs
dec
cs
daa
imul
fnsave
fcmovbe
std
push
xchg
jg
mov
leave
xor
mov
lahf
add
and
insl
dec
clc
jecxz
mov
shr
inc
pop
repz
pop
xor
push
jne
and
cltd
loope
loope
ljmp
enter
push
test
push
jmp
cli
push
ja
fnstsw
psllw
jl
ret
inc
into
ret
clc
dec
cld
mov
aas
cli
inc
call
lcall
shll
cmp
mov
push
or
fidivs
scas
stc
jbe
sub
lock
incl
fmul
jnp
loop
mov
mov
lret
mov
add
inc
fnstcw
lret
outsb
scas
out
incl
clc
test
dec
jnp
out
cs
and
lret
ja
xor
cltd
imul
jmp
movsl
mov
adc
inc
aam
sarb
push
inc
clc
jb
cmc
xchg
enter
decl
test
jp
mov
in
or
inc
mull
jp
lret
andb
jge
or
pop
pushl
adc
jle
lahf
shrb
cmp
aaa
cmp
cli
pop
fidivrs
sahf
es
jl
sarl
jno
into
scas
xchg
xchg
lcall
jae
aad
sahf
lahf
or
pop
jp
sub
pushl
loope
into
mov
cmp
movsl
lret
jo
mov
jmp
xorb
in
and
sbb
inc
clc
xor
mov
xlat
test
lods
jecxz
scas
cmpsb
andl
ja
pop
and
mov
ds
jl
push
in
jg
ret
lods
hlt
incl
popf
flds
sti
jmp
mov
rorl
add
mov
push
testl
cmpsb
jnp
dec
je
in
call
repz
clc
mov
cli
rcr
jnp
movsl
negl
std
loope
adc
fistpll
call
fcomi
mov
cli
in
testl
imul
push
std
incl
addr16
jl
dec
push
mov
mov
fbstp
fldenv
mov
hlt
dec
ljmp
xlat
mov
rcrb
mov
scas
push
mov
inc
mov
std
pushl
cs
imul
mov
xchg
inc
mov
loope
lcall
or
dec
dec
mov
std
pop
addr16
fcmovne
inc
outsl
fisttps
xchg
testl
xor
mov
push
cld
movsb
mov
das
pushl
pop
scas
outsl
das
inc
icebp
notl
mov
pop
es
hlt
icebp
loop
mov
stc
push
mov
push
decl
ret
stos
push
cli
and
adc
stc
outsb
xchg
cmp
es
mov
inc
outsl
push
cld
sbb
lret
and
shrl
scas
lret
ja
leave
jnp
jb
gs
adc
mov
out
ja
lret
lret
arpl
lret
shl
lods
ja
and
stos
cwtl
mov
dec
pop
cld
pushl
inc
shrl
jp
mov
aaa
sub
sub
push
xor
pushl
lret
aad
mov
repnz
xor
cmpsb
cmpsb
fdivrl
mov
bound
fnstenv
jge
aaa
aaa
fstpt
lret
dec
cmpsb
je
mov
outsl
cs
clc
add
jb
fcmovnu
ljmp
add
loope
jo
add
test
mov
and
fcos
jg
addr16
fisttpll
js
inc
scas
sti
xchg
leave
hlt
dec
cmp
inc
add
xchg
lret
fs
xor
xor
pop
incl
lcall
push
xchg
mov
adc
sbb
or
std
lcall
mov
and
add
lcall
fidivrl
imull
mov
xor
lock
stc
mov
cmp
pop
mov
mov
lret
xchg
mov
add
push
push
xchg
cmpsb
jge
sti
or
mov
sti
sub
xlat
rol
addr16
notb
cli
jmp
cmpsl
adc
lock
clc
test
fldenv
jl
test
stc
test
ljmp
aaa
aas
mov
xchg
stos
in
test
iret
aam
dec
rep
inc
cmpsl
jl
out
mov
ljmp
clc
fiaddl
jle
cmp
dec
mov
mov
fs
aad
xchg
adc
decl
pop
xchg
lods
pop
shr
loope
aaa
fs
sub
adc
jmp
jmp
add
and
call
fmuls
iret
push
or
stos
in
adc
dec
sub
cmp
in
in
iret
push
ds
cmp
iret
imul
shr
xchg
xchg
lcall
mov
mov
xor
in
das
mov
sub
stc
cld
mov
outsb
test
jg
test
loope
stos
or
aas
insb
add
pushl
mov
loopne
out
inc
cmc
hlt
out
pop
jl
mov
sar
mov
popa
push
xlat
sahf
push
vmread
jmp
push
sahf
out
mov
cwtl
pop
mov
out
scas
jb
sub
incl
dec
jg
icebp
mov
and
fsubrl
sbb
jmp
cld
incl
cmp
push
ss
js
gs
fisubrs
jg
and
push
inc
ljmp
mov
repz
jno
icebp
add
inc
jg
sti
loop
repz
stc
out
lcall
and
or
cld
pusha
mov
aaa
std
mov
es
jmp
in
jp
cmp
cmp
jg
cli
stc
or
jl
imul
xor
insb
add
mov
fadd
cmp
sub
lods
popf
push
aaa
adcb
pop
icebp
pop
pop
cmpsl
xor
inc
inc
mov
lret
aam
int
loopne
je
fistpll
enter
rcrl
ja
lds
pusha
pushf
xor
call
dec
fcompl
jecxz
pop
repz
outsl
sarl
inc
dec
lods
fcoms
adc
jg
cltd
add
jecxz
mov
dec
sub
pushl
push
out
icebp
clc
or
popa
xor
idiv
out
out
shlb
pusha
jecxz
data16
incl
add
cs
enter
decb
insl
inc
stos
loopne
jecxz
incb
add
or
lret
push
xor
fistps
pop
inc
jbe
fcomip
and
stc
ljmp
cli
stc
mov
cs
jns
loop
sarl
jp
jecxz
repnz
out
sbb
call
jmp
add
aas
pop
fsubr
movsl
pusha
jl
push
mov
scas
vmwrite
jns
int3
dec
sar
jmp
cmpsl
mov
xor
clc
loope
out
push
jg
and
incl
sahf
mov
inc
scas
xchg
push
pop
shll
cmc
mov
popf
jo
mov
mov
jbe
mov
or
call
bnd
repz
adc
ficomps
loope
cmc
mov
shll
mov
add
jo
daa
sbb
je
jne
gs
adc
adc
shll
dec
jg
add
repz
fdivrs
out
mov
jecxz
dec
adc
dec
dec
jg
sti
movsb
sub
jmp
lods
fisubl
sub
lcall
inc
dec
jb
daa
call
dec
pop
arpl
lret
jp
mov
ret
adc
inc
mov
pop
fidivrs
mov
mov
jg
mov
push
lods
mov
mov
idiv
decl
sbb
fistl
scas
or
push
push
cmpsb
pop
loop
mov
sbb
cmp
stos
adc
mov
sbb
push
test
lcall
pop
int3
out
push
push
mov
ret
addr16
mov
fistps
je
jns
stos
or
push
jae
in
lcall
in
or
test
sub
nop
jmp
mov
jns
into
mov
cld
adc
iret
sbb
fldl
jg
ret
cmp
push
sahf
push
adc
adc
fsub
int
ja
loopne
add
icebp
std
mov
jp
aas
inc
cld
sub
inc
xchg
stos
and
jmp
dec
sub
xchg
cmp
in
popf
cwtl
inc
pop
aas
pushl
lods
dec
add
out
add
push
or
fdivl
adc
call
or
rcrl
push
xlat
sbb
pop
insl
nop
add
cmc
jg
ds
push
fstpl
orb
push
and
lcall
cmpsb
push
xchg
outsl
mov
cld
inc
adc
pop
mov
das
push
pushf
jp
dec
mov
movsb
and
push
add
pushl
das
shl
mov
sub
inc
gs
shlb
lock
inc
jbe
js
decl
mov
cli
adc
dec
fsubrl
push
dec
push
gs
fsubrl
in
pop
push
sbb
pop
jmp
lret
daa
stos
imul
out
sbb
jo
xchg
pop
lret
and
mov
push
jl
cmp
mov
adc
jmp
das
cmp
pop
and
stos
out
shll
dec
xor
rorb
call
jp
cld
jle
push
dec
pop
mov
cmp
dec
cs
in
and
dec
int3
jmp
pop
cwtl
jne
in
aam
lds
push
decl
cld
fldt
out
scas
negl
movsl
sub
sahf
mov
lea
lahf
jno
call
out
mov
outsl
sahf
nop
pop
leave
mov
pop
add
test
mov
cmpsl
adc
xchg
js
test
repnz
repnz
mov
cmpsl
insl
pop
and
adc
sbb
loop
out
fistpl
lcall
fwait
icebp
ficoms
lcall
inc
push
mov
lret
inc
jle
jmp
fdivrs
mov
stos
mov
pop
mov
js
cmp
lea
jmp
call
lcall
sarb
fidivl
popa
mov
out
mov
and
or
pop
test
repnz
sti
fldt
or
xlat
mov
xchg
sar
ja
cld
adc
lcall
add
scas
rol
lret
das
xchg
gs
add
mov
cmc
sub
idivb
fists
lea
pop
mov
pop
hlt
in
sub
idivl
lcall
lcall
leave
clc
push
clc
cmp
inc
repnz
add
adc
cmp
aam
in
loopne
ljmp
clc
dec
push
lahf
push
out
stos
jb
int
fisttps
test
jb
or
inc
ljmp
add
scas
out
jg
test
mov
jmp
jno
lahf
nop
pop
imul
lret
push
decl
jae
nop
xor
jl
ja
out
xchg
jl
ss
incl
dec
insl
cmp
cmp
push
inc
cltd
mov
test
gs
jbe
fcomps
cmp
jmp
cmpsb
jns
in
push
dec
cmp
mov
pop
mov
movl
fists
lret
sub
std
aaa
push
aas
fistl
ficomps
lcall
mov
jge
rol
xor
jle
iret
sarl
aaa
iret
lret
scas
inc
imul
dec
clc
movsb
out
sbb
aam
in
jb
adc
int
stos
or
outsl
mov
stc
dec
jmp
inc
cmc
xor
js
lods
subb
call
mov
decl
mov
enter
lret
std
decl
ret
fnstcw
cmp
mov
adc
fidivl
pop
in
cmc
mul
in
into
pop
adc
push
mov
ljmp
and
xchg
out
lock
xlat
cmpsb
jmp
xor
jb
mov
ss
lahf
mov
das
cli
mov
test
push
push
sar
arpl
std
aas
mov
data16
movsl
xor
dec
sbb
sahf
idivl
mov
mov
pushl
in
mov
repnz
hlt
cli
aas
add
test
das
rol
cmp
bound
in
mov
lock
dec
aam
mov
repnz
sar
clc
pop
push
aam
push
xchg
cli
mov
or
jl
fildl
js
test
cmp
repz
fbstp
arpl
sbb
pop
in
ljmp
fdivr
pop
push
push
std
decl
mov
dec
insb
test
and
lea
dec
js
icebp
movups
test
packuswb
repnz
fld
popf
call
std
fwait
push
insb
or
jno
icebp
rcrl
xchg
push
enter
fldenv
mov
movsl
mov
fisubrs
push
inc
jge
int3
loopne
shr
sub
lcall
imul
cmc
cld
pop
icebp
push
stc
faddp
jnp
rolb
aaa
stc
adc
fidivrl
rolb
clc
sti
xchg
nop
xchg
push
jmp
mov
insb
lret
test
loop
adc
jnp
pop
hlt
call
dec
mov
outsl
repz
repnz
xchg
scas
inc
pusha
jnp
scas
lcall
cmpsb
fwait
xor
adc
xor
mov
insl
jmp
decl
push
add
dec
push
cmp
jns
dec
mov
dec
add
adc
mov
repz
ljmp
ret
lcall
jnp
and
adc
cwtl
jmp
out
incb
test
xchg
cmc
int
ret
daa
inc
mov
add
pushl
repz
shrb
xchg
inc
repz
aas
dec
shlb
addr16
ja
decl
lock
out
out
scas
loopne
mov
or
inc
mov
stos
inc
ljmp
in
stc
in
push
std
loope
in
iret
sub
lods
xor
shr
rclb
jmp
repz
clc
je
mov
les
dec
cmp
stc
sub
push
leave
in
notl
cld
jns
dec
push
fisubs
or
pop
ss
lahf
popa
sub
push
icebp
call
mov
lret
cmp
pop
leave
add
subl
dec
push
or
adcl
and
pop
pop
insl
jg
mov
dec
pop
cmp
shl
call
xchg
mul
in
outsl
pop
pop
outsl
push
push
cmpsb
cld
push
ja
ja
sub
fadds
jg
jecxz
aaa
incl
cld
call
mov
cli
mulb
stos
movsl
mov
cmc
addr16
call
aas
gs
hlt
loope
and
inc
pop
out
inc
dec
jnp
pop
lods
imul
push
clc
out
and
mul
ret
adc
cmovb
mov
cmp
push
insl
pop
cmp
test
mov
jg
and
xor
aaa
test
cmp
in
add
lods
out
in
cmp
cwtl
enter
mov
hlt
sub
mov
pop
or
jmp
add
add
inc
cmp
and
jecxz
inc
aas
addb
ljmp
sti
imul
cmc
scas
lcall
sub
or
sbb
push
sti
pop
sub
std
call
hlt
scas
sub
ljmp
sti
sahf
or
mov
pop
jmp
dec
mov
pop
mov
jno
aas
int3
pop
clc
std
jmp
dec
movsl
mov
cmc
mov
dec
mov
push
jp
sub
mov
fwait
push
data16
mov
jbe
pop
mov
mov
std
and
jb
test
push
daa
cmp
imul
inc
dec
imul
pop
lret
bnd
or
insl
lea
jg
lret
lds
std
incl
xor
stc
sbb
adc
nop
in
mov
and
jmp
push
jmp
pop
jb
sbb
push
wbinvd
jl
fisttps
clc
outsb
mov
dec
pop
fsubs
push
lods
cmp
mov
incl
cld
xor
pop
jnp
inc
lahf
out
jge
inc
ljmp
lods
divps
je
bound
stos
aaa
shlb
mov
into
shlb
repnz
dec
fdivrs
je
jns
lret
ljmp
mov
cmp
repz
pop
inc
ret
ja
xlat
les
xchg
xchg
cmp
repz
ficomps
adc
filds
dec
jl
lods
lret
cltd
mov
inc
flds
xchg
mov
sub
jg
adc
jmp
inc
mov
mul
inc
loope
adc
sti
add
mov
cmc
lcall
xchg
mov
in
leave
dec
pop
pop
push
test
and
test
incl
mov
sub
xchg
hlt
loop
rcll
fbld
shll
cld
daa
xchg
dec
dec
adc
stos
dec
dec
arpl
ljmp
idivl
enter
xchg
mov
push
pushf
sub
jnp
adc
lds
inc
std
fwait
pushl
mov
jge
sbb
mov
or
repnz
mov
ljmp
lea
mov
mov
mov
fildll
mov
das
sbb
pop
out
xor
cld
shrb
xlat
cld
xchg
nop
dec
push
or
push
mov
and
mov
sbb
andl
fdivrs
push
mov
stos
sti
mov
nop
ljmp
fildll
jmp
cmpsl
movsb
xlat
jb
mov
addb
pop
mov
adc
out
not
fisubl
or
call
and
enter
jge
xor
push
or
jmp
cld
mov
out
mov
mov
push
cli
fsts
xchg
mov
jg
add
rcll
or
cmp
xor
and
and
enter
sbb
fbld
jg
mov
sti
xor
sub
xchg
insl
jmp
jns
pushl
shl
subl
fisubrs
fisttpl
cmpsb
xchg
xchg
ljmp
dec
clc
push
add
int3
aam
decl
jl
add
xor
dec
mov
es
outsb
push
inc
call
adc
xchg
lods
sbb
mov
stc
fisubrs
scas
fidivrs
dec
rcr
scas
cmp
ljmp
jmp
mov
add
dec
sbbb
jae
out
cmp
mov
lods
das
adc
xchg
insb
or
cmp
inc
psubb
popa
cld
push
repnz
fimuls
mov
cmp
adc
loopne
mov
cli
faddl
inc
sbb
insb
sbb
scas
icebp
sti
lcall
fucomip
hlt
ljmp
mov
ds
push
pusha
inc
push
sar
filds
pop
mulb
ljmp
pop
push
test
fldt
adc
aaa
das
mov
into
rclb
mov
ret
imul
test
ror
add
imul
test
incl
lods
jns
incl
jmp
sahf
leave
jae
mov
int
jae
stos
cli
lcall
scas
int3
add
repz
jae
jp
js
or
lcall
test
cmp
outsb
xor
call
or
outsl
sti
out
push
ffree
call
cmpsl
into
mov
push
das
ficomps
mov
int
jecxz
jg
test
sarb
jo
inc
sub
mov
push
sbb
adc
pop
xchg
out
cmpsb
clc
lods
scas
push
push
jnp
fimuls
cli
xchg
call
and
mov
cmp
mov
test
sarb
fstpt
roll
inc
arpl
pop
mov
pop
dec
divl
gs
aas
mov
fadd
xor
ljmp
mov
mov
out
push
jge
sahf
jne
lods
outsl
mov
cmp
jge
clc
fucomi
push
mov
pop
je
dec
jne
lcall
dec
push
popa
insl
std
imul
call
pop
out
aam
and
je
sbb
dec
ljmp
and
into
xor
xchg
sub
lahf
cld
pop
cmp
repz
push
add
das
sub
inc
lret
decl
scas
jl
push
aad
mov
xchg
add
xchg
lcall
jg
out
les
mov
idiv
stc
scas
pop
cmp
sahf
ret
inc
push
dec
pushf
push
lcall
mov
inc
sbb
lock
sub
leave
pop
flds
adc
fstpl
scas
push
clc
lcall
incb
int
sub
cmp
lock
stos
es
lcall
push
fs
jb
out
inc
sub
test
cmp
or
dec
adc
popf
outsl
shr
sub
fs
call
dec
jecxz
lods
das
lods
cld
dec
das
mov
xchg
in
clc
mov
cwtl
lcall
sbb
and
decl
std
mov
dec
push
xor
xor
pop
jg
inc
mov
das
popf
sti
jle
test
pop
leave
in
and
out
xchg
inc
aas
jbe
ljmp
in
jo
les
push
cwtl
push
fbld
sbb
sbb
xor
cmp
xorb
jg
loopne
fdivrl
out
aas
test
pop
add
loope
and
clc
pop
pop
mov
call
xchg
je
jns
dec
jp
xor
mov
jmp
std
testb
sub
xchg
ljmp
mov
aam
add
ficompl
dec
fwait
testb
decl
jmp
adc
fists
and
jecxz
jle
push
cmpsl
jnp
jp
mov
in
sar
decl
data16
pop
mov
movl
ret
cmp
add
stos
xlat
dec
pop
and
mov
mov
jne
dec
jle
decl
gs
mov
sbb
sub
mov
lcall
mov
inc
xchg
inc
cld
push
xor
mov
out
jp
mov
testl
fidivrl
pushl
and
repz
out
lret
mov
or
inc
jae
imul
std
lcall
cmpsb
mov
out
lods
dec
mov
adc
inc
shll
icebp
jmp
xchg
test
out
pop
iret
ret
pop
leave
mov
icebp
in
jp
add
loope
mov
shll
add
mov
filds
sahf
adc
jbe
jg
dec
mov
xor
mov
xchg
ret
scas
imul
aad
mov
and
dec
or
lcall
and
rclb
in
cwtl
fwait
sbb
iret
jmp
pop
cmp
sti
gs
cmp
cmp
xchg
sbb
pop
fstps
lock
mov
jg
mov
jbe
in
or
fmul
stos
dec
rolb
dec
push
shlb
sbb
fcoms
cmp
repnz
xchg
xchg
and
clc
in
cmp
mov
jle
out
cwtl
lahf
decl
enter
ret
scas
cltd
insl
shlb
insl
fsubp
lret
push
out
lods
scas
arpl
call
lds
call
lods
aaa
stc
inc
inc
inc
repnz
out
ret
ljmp
mov
sub
mov
and
push
add
sub
ja
mov
dec
sbb
iret
std
mov
js
mov
jae
mov
pop
xchg
add
dec
push
sti
pop
dec
xchg
subb
add
jg
fildll
sbb
jb
and
pusha
loope
cmpsb
ss
fwait
bound
push
in
in
fists
pushl
pcmpgtb
repz
mov
insb
push
jmp
pop
sbb
int3
jno
sbb
mov
sar
decl
ret
cmp
popl
lods
jmp
mov
call
loope
sbb
mov
loop
xchg
inc
push
adc
scas
or
mov
je
decl
sti
hlt
dec
lods
mov
sti
into
icebp
pop
ret
push
sbb
test
fs
pop
jae
in
and
mov
pushl
imul
lock
enter
and
out
inc
je
jg
and
inc
int3
jbe
imul
cld
mov
js
std
add
mov
or
incl
out
test
dec
push
insb
lock
in
jecxz
jle
stos
sahf
test
incl
push
adc
pushf
push
loope
sar
mov
push
call
loopne
mov
jbe
fisubl
aaa
stos
inc
cwtl
sti
nop
scas
cli
std
pop
pusha
add
fs
test
jno
add
pop
shlb
loop
out
push
icebp
shlb
sti
push
mov
lcall
lea
fcomi
sub
int
mov
insl
jns
bound
inc
stc
stc
and
dec
mov
ret
incl
xchg
in
xchg
mov
int
mov
fwait
adc
jo
incl
inc
bound
cmp
jnp
jle
out
lock
dec
lds
mov
cmp
mov
cli
aaa
or
lock
cld
push
push
test
incl
repnz
sbb
adc
ljmp
int3
mov
outsb
dec
mov
ret
hlt
jmp
jmp
add
bswap
inc
sub
jns
call
leave
add
lock
mov
lcall
and
js
mov
pop
and
xchg
mov
mov
pushl
flds
insb
into
mov
rcll
movsl
jg,pn
sar
pushl
add
jne
push
cmp
cli
inc
data16
je
int
mov
incl
in
ficoml
cmpsb
sub
pop
jnp
mov
jg
add
lea
test
push
insb
cmp
sbb
lret
or
inc
mov
sbb
je
xchg
xor
jl
push
xlat
fsubs
cmpb
lcall
imul
jge
adc
mov
xchg
out
fcomi
hlt
push
dec
movsl
and
cli
out
ljmp
lds
inc
test
ds
sahf
hlt
mov
cmp
clc
decl
adc
mov
mov
jbe
and
ds
mov
mov
call
lds
pop
push
lret
push
or
xchg
scas
in
jg
incb
testb
fwait
lods
xlat
push
inc
adc
jns
push
or
out
jmp
call
pop
out
push
outsb
jnp
sbbl
into
mov
mov
push
mov
sub
incl
jl
mov
sti
jno
lret
mov
add
xchg
cmp
add
xchg
iret
pop
jnp
jb
jp
add
adc
sbb
cmp
inc
mov
pop
inc
scas
fsubr
pop
mov
cmc
and
mov
out
mov
cmp
movsl
mov
out
pop
push
xchg
lea
jb
jbe
add
push
sti
pop
sbb
fstps
and
scas
add
fistps
decl
add
add
cmp
jo
ficoml
sub
cmc
jmp
imul
sar
mov
aaa
push
fmull
dec
mov
call
pop
sub
or
test
es
jp
pop
mov
ja
fs
inc
ret
enter
cmpsb
lods
ja
mov
out
push
ret
mov
inc
scas
inc
aaa
dec
mov
xor
cli
cmp
jne
pop
ret
xchg
adc
enter
inc
and
cld
aam
dec
mov
popf
mov
push
mov
jns
add
jle
jg
icebp
fsts
sub
fbstp
and
lret
mov
mov
stc
call
out
pop
in
xchg
sti
arpl
movsl
outsb
cli
clc
jmp
outsl
mov
ljmp
in
jp
test
aad
cmpsl
push
andb
outsl
mov
incl
sbb
fidivs
andb
pop
aas
insl
sub
mov
push
jbe
mov
decl
sti
mov
jb
subb
sar
call
jno
test
push
cmp
push
sub
xchg
sbb
cmc
repz
clc
ljmp
adc
out
push
or
shll
lea
adc
aaa
and
dec
mov
and
ljmp
scas
push
pop
adc
cwtl
add
fsubrs
cmp
ficoml
mov
ljmp
fcmovne
pop
or
cli
jbe
icebp
in
fcoms
es
adc
inc
dec
pop
int
addr16
cmp
popa
xchg
rclb
fstpl
mov
dec
mov
and
pushl
mov
fildll
int3
int
cmp
mov
mov
jl
aas
fnstcw
test
gs
pushl
jbe
jp
cli
adc
sti
jae
ret
fistpl
dec
repz
and
xchg
mov
and
movsb
out
cmpsb
cmc
arpl
aam
cmp
or
cmp
test
inc
rorb
xor
or
sub
shrb
dec
stc
add
insb
mov
loopne
loope
lret
pop
stos
inc
mov
popf
out
add
int3
push
jns
push
jno
lock
cld
or
insl
shlb
cmp
and
repz
loope
mov
xchg
pushl
xchg
sahf
mov
std
jae
test
mov
mov
in
outsl
jno
adc
jmp
adc
ljmp
shl
jmp
lcall
adc
add
test
jnp
in
mov
xchg
repz
cli
mov
mov
cmp
mov
loope
jmp
mov
xorb
icebp
lods
in
adc
jns
repz
jne
pop
icebp
mov
ret
push
out
pusha
add
push
cld
cltd
std
adc
sub
dec
std
jmp
imul
mov
shll
fadd
sbb
and
lret
lcall
jnp
stc
xchg
out
clc
lock
loop
arpl
loop
out
hlt
mov
inc
test
jae
jmp
adc
or
pop
gs
mov
outsb
fwait
push
or
incl
mov
stos
out
das
mov
and
fisttpll
daa
enter
sbb
pop
ret
lock
sti
out
mov
dec
jae
cmc
mov
daa
mov
das
movsl
inc
adc
call
iret
out
xchg
push
jmp
jle
ljmp
out
out
bound
mov
incl
cld
sti
out
hlt
add
stos
loop
add
sbb
aas
ds
ret
add
call
dec
mov
ret
adc
fimuls
mov
movsl
sbb
stos
push
pop
cli
jmp
dec
int
shrl
stc
or
mov
cmpsl
mov
mov
jecxz
xor
dec
fxtract
inc
fnsave
fists
leave
test
in
daa
xlat
out
dec
push
mov
inc
ja
ljmp
adc
cmpsl
popf
fwait
out
fwait
imul
in
mov
std
lcall
push
jp
addb
dec
and
jmp
shrb
adc
xchg
sbb
ljmp
mov
mov
mov
aas
outsl
and
jnp
mov
bound
rcrb
ljmp
out
sbb
adc
decl
jl
aaa
in
xchg
subb
subl
imul
incl
out
test
pop
jo
jns
dec
jb
and
repnz
aas
js
das
inc
pop
hlt
inc
mov
out
cli
sub
mov
jmp
out
int
pop
jbe
fbld
das
sar
or
mov
xchg
stos
fsubp
aas
sub
jg
pcmpeqb
leave
lcall
xchg
cmc
dec
pop
inc
scas
and
stos
xor
loop
add
push
int3
mov
mov
mov
ja
sti
mov
sar
ljmp
mov
sar
jl
mov
cmp
test
stc
lods
sarb
cmpxchg
fmull
testb
daa
hlt
adc
rol
je
fwait
cmc
xchg
aas
add
xor
mulb
push
dec
cli
ljmp
call
jb
or
push
out
jg
decl
les
mov
mov
popf
sahf
mov
inc
out
std
xor
push
decb
lahf
inc
cmpsl
jae
mov
pushl
mov
xor
incb
xchg
dec
lret
mov
fnstenv
stos
push
incl
rcrl
bound
in
pushl
hlt
in
outsb
push
inc
mov
notb
add
jmp
fbstp
sar
pusha
push
sarl
or
mov
jg
das
aam
std
shlb
int3
lret
dec
pop
out
mov
popa
lret
psrld
psubd
ljmp
in
aam
ja
shlb
jp
ret
movsl
inc
shr
outsl
scas
loop
je
hlt
in
dec
cmp
fmuls
xor
mov
int
test
leave
imul
cltd
decl
in
jo
xchg
xor
sbb
cmp
mov
imulb
add
jmp
pop
xchg
xchg
out
movsb
or
cmp
mov
jno
lcall
in
ljmp
decl
pop
fwait
sahf
cmpsl
scas
call
cmp
hlt
fdivs
in
jg
decl
out
out
or
sbb
fnstenv
mov
xchg
cmp
adc
push
fucomip
mov
add
cmp
xor
les
jg
mov
fsubl
inc
fwait
mov
cmp
mov
fcomip
mov
fiadds
scas
jp
pop
divl
int3
icebp
xor
pop
mov
roll
ljmp
sub
loopne
pushl
xchg
sarb
and
jae
xchg
aam
aaa
je
subb
out
push
mov
repnz
iret
xchg
jmp
ljmp
aas
lret
fwait
icebp
push
jle
call
fdivrl
stc
in
inc
pushl
hlt
in
mov
inc
fbld
cli
mov
addr16
insb
push
clc
ss
pusha
ljmp
incb
jmp
push
pop
mov
cli
jecxz
jl
sbb
outsb
test
inc
decl
popa
xchg
aam
mov
mov
mov
ret
repz
cmp
fwait
push
add
fnstenv
jg
repnz
cmp
rorb
xchg
je
fwait
in
mov
add
les
arpl
outsb
cwtl
cli
or
iret
mov
mov
fcomi
bound
out
clc
lcall
cmpsb
pop
push
je
pop
std
mov
jbe
stos
push
cmp
out
sub
in
or
cmp
icebp
mov
and
pop
mov
shr
add
pop
dec
jecxz
call
call
insb
fisubrs
jg
and
iret
sbb
cmp
sbb
sbb
push
pop
adc
xor
js
inc
inc
mov
dec
sti
sub
frstor
movsb
sbb
movsl
mov
test
pop
aas
icebp
fists
aaa
in
into
movsb
pop
insb
sti
ret
xlat
adc
jae
pop
lods
mov
pop
sub
jg
jmp
in
mov
mov
imul
xchg
mov
mov
leave
aaa
dec
mov
mov
mov
in
sbb
lret
pop
adc
cmp
movsb
icebp
into
mov
jg
sbb
movsb
mov
add
xor
les
mov
fwait
mov
sub
incl
fisubrs
mov
push
nop
sarb
insb
dec
ss
or
out
jmp
hlt
lahf
dec
test
mov
inc
mov
or
sub
mov
lcall
lahf
out
lret
sub
jmp
jecxz
xlat
cli
mov
adc
aam
xlat
int
and
fstpt
clc
fsubr
push
ja
ljmp
push
mov
test
outsl
adc
das
sub
push
push
cltd
xlat
xor
add
lcall
test
out
daa
jbe
cmpsb
in
inc
insb
cmp
add
decl
xchg
clc
out
mov
mov
jl
aaa
into
out
in
bound
scas
jge
shll
repnz
jmp
scas
cmpsl
lds
and
push
movsb
not
loop
jmp
ljmp
idiv
decl
cli
les
pop
imul
xor
filds
push
inc
pop
adc
cmc
test
jmp
sbb
xchg
pop
sti
push
aas
cmp
sbb
mov
ficompl
mov
cmp
ret
popf
lret
mov
jmp
jp
fmulp
fcomp
pushf
or
hlt
negl
pushl
cmp
add
sti
mov
push
cli
and
daa
icebp
out
jns
in
add
sbb
in
out
idivl
adc
mov
ds
jb
out
cmp
inc
sarl
lock
inc
clc
cmp
xor
ficoml
mov
xchg
fbstp
cmp
mov
gs
sub
loope
or
xchg
sti
or
and
lock
lret
dec
shl
jge
mov
mov
ficoms
cld
sub
ja
in
mov
pop
jb
adc
outsl
cmp
decl
jmp
or
xor
add
test
pop
aas
lock
das
xor
mov
mov
repz
xchg
in
cmpsl
pushl
es
mov
out
test
mov
ljmp
fiadds
push
pushw
cmp
js
in
in
mov
test
pop
mov
test
out
decl
lds
out
fwait
lcall
ljmp
mov
mov
fsubl
dec
jns
call
mov
movsl
clc
scas
and
lock
out
ljmp
xchg
mov
lcall
pop
mov
cmpl
std
cmp
out
stos
call
hlt
jne
ret
icebp
mov
mov
and
clc
adc
mov
cwtl
sahf
int3
add
pop
mov
push
les
es
imul
dec
cld
rcrb
sahf
mov
add
outsb
leave
lods
pop
ret
xor
sahf
pop
incl
fdivrl
sub
xchg
in
in
mov
orb
out
insb
repz
dec
mov
jmp
loop
pop
insb
cmp
es
dec
lahf
mov
pop
sub
push
fistps
std
jle
sbb
aas
loopne
ljmp
sub
and
aas
cmpsl
xor
mov
ljmp
into
nop
push
aam
inc
sar
sub
and
iret
jmp
pop
dec
dec
pushl
shlb
and
adc
cmp
lahf
push
lods
sub
decl
mov
push
fcmovu
cmc
rorb
add
jle
outsl
push
xchg
push
scas
mov
mov
cwtl
lods
mov
ret
notb
fistpl
out
jecxz
fcoms
xlat
cmpsb
cmpsl
sbb
jmp
ss
in
mov
repnz
push
dec
loopne
jecxz
adc
in
xchg
xchg
flds
jle
pushl
arpl
fdivrl
movsb
cmp
xchg
jg
leave
dec
and
das
push
fdivrl
mov
pop
cmp
mov
lds
loop
pop
movsb
stc
adc
sahf
dec
add
fldl
inc
negl
ljmp
pusha
mov
jo
jne
adc
call
movntq
stc
loop
lods
loop
jb
jle
sbb
scas
mov
mov
sbb
cmc
xchg
sbb
mov
xlat
outsl
ja
xchg
jmp
push
call
out
iret
insb
cmpsl
cmp
fdiv
xchg
sub
fwait
idivl
mov
repz
pop
std
ljmp
xchg
das
out
imul
xchg
jmp
aam
lods
jo
loop
mov
roll
cmp
jbe
mov
jmp
xor
sbb
fsubrl
iret
loop
push
xchg
out
mov
jae
mov
icebp
mov
sbb
das
pop
call
mov
mov
mov
repz
enter
lcall
jne
or
cmpsl
sub
out
pop
sub
sub
mov
add
mov
jmp
and
addl
negb
cmp
lret
adc
jg
cwtl
les
xor
pop
cmp
pushf
scas
clc
dec
sbb
test
mov
outsl
xor
mov
mov
cmpsb
lcall
pop
jo
stc
pop
sbb
fld
mov
push
xchg
fcoml
addr16
xchg
popf
xchg
xchg
inc
cld
incl
cltd
pop
out
jp
jno
mov
sti
int
insb
int
mov
pop
mov
fwait
mov
cld
dec
push
sbbb
decl
shl
cmc
ret
daa
jmp
dec
loopne
cmpsb
subb
mov
xor
aaa
push
sub
ljmp
mov
lret
notb
jle
cmpsl
into
scas
pushf
ret
cmpsb
insl
xchg
push
xchg
or
cmp
adc
push
jmp
mov
xchg
cmp
lahf
pushf
insb
cmc
pushf
add
add
jl
hlt
mov
mov
test
in
sbb
addr16
test
je
mov
cld
incl
cld
aad
sbb
jmp
and
dec
and
fidivrl
jae
cmp
inc
jmp
jg
fsubs
xchg
in
push
cmpsl
in
sbb
push
clc
call
in
lcall
sti
sub
xor
rorb
lods
lahf
call
add
add
sbb
fbld
lock
xchg
xchg
or
adc
outsl
xor
test
fsubrp
out
imul
push
mov
jmp
xchg
dec
cmp
pop
xchg
mov
push
rcr
mov
jp
call
in
lcall
mov
or
dec
xchg
hlt
cmp
es
shrb
movsb
pop
inc
jle
fildl
hlt
mov
inc
ret
in
clc
fimull
lret
sti
mov
inc
call
addr16
mov
xchg
inc
jle
xchg
jb
mov
add
jo
mov
andl
lcall
jle
push
scas
mov
cmpb
or
sub
lds
jb
shr
faddl
pushf
mov
mov
jle
pop
add
jl
jbe
mov
adc
jp
nopl
mov
fwait
dec
jmp
out
cmc
cmc
pop
jmp
sub
dec
mov
pop
imul
inc
testb
fcmovne
jae
lcall
shrl
out
pop
xchg
dec
mov
sti
insl
sbb
lods
push
jl
and
mov
jecxz
ljmp
cld
cmpsl
outsl
sbb
pop
add
sub
gs
mov
lcall
addr16
dec
dec
sub
sbb
mov
dec
jo
mov
lds
sbb
lahf
outsl
scas
xchg
lods
pushl
jns
mov
repnz
faddl
sub
fadds
mov
push
in
add
repnz
js
ljmp
push
scas
cltd
ljmp
stc
push
jo
int
cmpsl
incl
adc
xor
lods
loopne
jge
adc
stos
call
push
sbb
cli
xchg
pop
sbbl
or
dec
insl
rorb
fsubrl
push
mov
pop
cmp
and
mov
dec
loopne
lcall
loop
iret
mov
idivb
inc
das
dec
xchg
cmp
add
sahf
ja
loopne
pop
iret
mov
jle
call
cmpl
xchg
sub
inc
arpl
cwtl
pop
adc
pushf
jbe
push
aam
shrl
out
or
ret
jnp
dec
mov
cltd
popa
decb
sub
inc
mov
out
jo
in
shrl
mov
out
dec
paddd
std
adc
xor
pop
xor
mov
mov
mov
jnp
es
lods
lahf
insb
mov
nop
or
jmp
fcoml
enter
pop
mov
jp
iret
mov
pop
shll
mov
lret
mov
inc
std
jp
and
sahf
cmpsl
orl
test
mov
popl
lahf
nop
mov
sahf
fisubl
ficompl
cmp
xor
sbb
cmpsl
jno
aam
mov
fdiv
addr16
mov
scas
ss
pushl
das
mov
mov
pop
lret
mov
je
repz
stos
cmp
mov
pop
xor
lret
fistpll
aas
fcomp
cli
scas
ja
xchg
pop
mov
das
hlt
inc
sub
stos
js
jb
mov
lret
lret
insb
cmpsl
jns
push
fcmovnu
ja
xor
dec
inc
cmpsb
sub
loope
xchg
mov
clc
lcall
fbld
adc
xchg
fistps
divl
sbb
in
sub
pop
in
pop
test
dec
mov
iret
and
cmp
ljmp
inc
fistps
sbb
jl
inc
jns
out
lods
lods
pop
cmpsb
pop
pushl
mov
das
mov
jmp
push
or
sbb
hlt
loop
jns
ror
ds
pop
hlt
in
xchg
adc
stos
lods
push
dec
mov
xlat
int3
add
subb
add
fucom
mov
lods
lods
out
data16
das
insl
xchg
mov
inc
jb
decl
test
mov
xchg
cmpl
clc
fwait
scas
sub
inc
std
pushf
cmpsl
out
push
ds
jg
fldt
ljmp
cmp
aas
lods
cwtl
cmp
pop
nop
addr16
mov
add
out
inc
les
loope
mov
dec
cmp
scas
cmp
adcb
xor
mov
mov
sub
frstor
call
mov
cmc
fimuls
repz
call
nop
push
leave
xchg
pop
cmp
jo
call
push
repnz
add
or
sbb
aaa
mov
cmp
jmp
mov
lcall
mov
aam
add
mov
arpl
dec
or
js
fdivrl
xor
test
lcall
jmp
pop
xor
jg
pop
ja
pop
dec
ret
xchg
or
add
fcoml
jle
add
jb
leave
inc
pop
xchg
jp
sub
mov
push
shll
dec
sar
pushl
dec
lock
lret
push
push
les
sbb
mov
aaa
test
xchg
out
cli
test
mov
inc
repz
or
ret
lahf
ljmp
inc
cmc
enter
jmp
jle
dec
mov
jg
push
pop
cld
cmp
mov
add
bound
fists
nop
cmp
mov
mov
xchg
xchg
mov
pushl
in
inc
mov
mov
gs
push
mov
scas
mov
enter
gs
ljmp
stos
in
imul
sti
push
std
and
jns
sti
mov
cmp
mov
sub
xchg
in
pop
ja
mov
jmp
insl
fdivr
stc
sbb
cld
lahf
mov
and
cmp
jno
xchg
jmp
mov
daa
mov
in
flds
jmp
es
dec
sub
sbbl
jbe,pn
push
lret
hlt
in
les
daa
push
div
xchg
jns
imul
mov
mov
cmp
push
outsl
adc
or
fadds
mov
lods
sarl
lock
pop
std
jg
pop
outsb
ror
sub
jle
idiv
dec
cli
ret
inc
sub
std
decl
xchg
outsb
cmp
clc
pop
pop
sbb
push
mov
or
inc
dec
push
cmpsl
in
pop
out
out
jle
xlat
stc
lods
fimull
jb
ljmp
cwtl
xchg
in
cld
cmc
daa
sbb
test
lahf
jmp
mov
inc
outsl
mov
pop
nop
jecxz
in
scas
add
repz
and
mov
aaa
push
and
sub
out
jecxz
stos
xchg
pop
sar
and
les
mov
insb
clc
mov
in
in
out
sub
popf
sub
fiaddl
ds
jmp
add
lods
jge
push
insl
cmp
movsb
addr16
dec
lods
sub
mov
fwait
rorl
aam
dec
and
cmp
xlat
xchg
movsl
enter
incl
pop
cmp
xor
mov
jmp
dec
ja
outsl
pop
das
inc
gs
int
pusha
dec
cmp
pop
add
cli
dec
cmp
sbb
mov
lcall
ficoml
ljmp
stos
xchg
jp
stos
jle
xchg
cmpsb
out
and
ljmp
adc
lret
js
push
jnp
and
push
stc
lcall
dec
push
hlt
xchg
loope
jg
je
push
mov
insb
pop
call
mov
jnp
stos
lock
add
dec
lret
sbb
cmpsl
cmp
xor
mov
fmul
dec
lcall
fucomip
jo
pop
dec
call
push
cltd
or
clc
dec
cmp
sub
push
pop
ss
mov
dec
push
jg
jo
aas
fisttpl
push
outsl
ret
xchg
mov
xor
repz
lcall
sahf
mov
adcb
mov
xor
scas
enter
fbld
test
ljmp
ds
repz
aad
movsb
jl
mov
xchg
fildl
roll
incl
mul
jge
hlt
lret
outsb
dec
push
push
nop
out
stc
rcll
dec
mov
mov
divl
lock
loop
sub
inc
out
in
stc
aaa
jecxz
aaa
cld
incl
aas
iret
lods
or
insl
clc
pop
ret
scas
lods
pop
inc
ljmp
clc
xchg
loope
inc
adc
cmp
or
adc
ret
hlt
lock
sar
decl
iret
or
dec
lds
mov
incb
mov
dec
std
adc
decl
xlat
lret
or
cmc
aam
mov
idiv
loop
insl
lcall
jg
jle
jnp
mov
rep
addr16
popf
aad
jo
inc
test
je
adc
jmp
in
sbb
sub
push
ljmp
movsb
fs
popf
xchg
jne
aam
mov
push
jmp
push
xchg
inc
aad
inc
lea
out
mov
scas
mov
out
ret
in
xor
jp
loope
mov
push
cmp
pop
rcrl
and
addr16
not
mov
int
push
inc
scas
clc
pop
cld
hlt
notl
xchg
loop
mov
mov
xor
incl
fldl2t
jecxz
bswap
cmpsl
enter
mov
push
jbe
pop
push
sub
sahf
data16
in
and
pop
dec
inc
xor
or
hlt
fs
mov
loop
sahf
stos
sub
xchg
lahf
inc
cld
xor
call
nop
shlb
inc
int3
aas
sti
into
dec
mov
mov
and
jmp
clc
int3
jb
mov
push
mov
in
cmp
mov
pop
lcall
mov
lahf
add
mov
pop
cwtl
rol
sti
and
mov
out
sbb
lret
jl
lret
in
or
test
mov
outsl
cmp
lock
loop
mov
add
pushl
stos
xchg
adcb
cmp
xchg
out
mov
fcoms
popf
repz
pushl
sbb
test
lcall
jae
pushl
or
mov
mov
push
pop
jmp
addl
into
xchg
outsl
out
mov
lahf
xchg
pusha
fsubrs
stos
scas
int3
ss
add
sbb
cli
dec
dec
arpl
jg
dec
lds
push
sar
xor
lret
stc
pop
adc
stc
mov
pop
mov
daa
mov
scas
insl
sarb
mov
out
cmp
aas
lea
mov
out
or
and
mov
lret
pop
cmc
outsb
loope
xlat
xchg
push
inc
lods
filds
mov
stc
add
loop
or
enter
shll
decl
sub
incl
mov
movl
std
fcmove
ret
mov
ja
cmp
fbld
decl
cli
mov
ffree
mov
mov
jbe
inc
loope
cmp
ljmp
mov
fxam
loope
or
mov
jae
cmp
nop
add
aaa
dec
bound
lock
pushl
inc
mov
adc
sahf
leave
loopne
jno
mov
rolb
jle
insb
push
repnz
sbb
inc
or
cmpsb
mov
pop
aas
lock
loopne
scas
repz
icebp
or
in
xchg
call
cli
xchg
lcall
outsb
mov
xor
ret
or
ljmp
call
sbb
dec
std
into
push
mov
in
lock
mov
out
xor
xchg
movsl
jecxz
out
mov
movsl
cwtl
in
jnp
incl
decb
or
xor
ror
push
mov
mov
iret
cmc
cmp
mov
pop
notb
scas
fcompl
sti
push
fstpl
icebp
pop
les
mov
jg
add
jne
fldln2
adc
aaa
sbb
fisubs
or
enter
pop
inc
incb
dec
inc
sub
decl
hlt
jmp
jmp
ror
das
sti
icebp
ljmp
adc
in
scas
mov
mov
cmpb
push
add
mov
lods
nop
mov
cmp
dec
popa
or
ljmp
push
pop
in
cmp
pop
les
mov
push
cli
mov
push
push
inc
push
sbb
push
jp
inc
ss
jg
pusha
xor
out
pop
push
mov
add
mov
ljmp
sbb
lcall
jmp
out
adc
lcall
cmp
sub
es
pop
xchg
js
test
outsl
imul
jmp
enter
aaa
xor
and
push
fld
jns
lahf
jmp
sti
cmp
mov
jnp
lock
cltd
cmpsb
xor
mov
das
loop
mov
call
outsb
inc
dec
cmp
xchg
mov
cmp
and
jg
test
add
lret
sti
jp
mov
dec
fnstsw
ljmp
xor
cmp
mov
mov
inc
scas
push
mov
lret
imul
or
test
mov
push
ljmp
iret
addb
fidivrl
shr
gs
icebp
enter
lcall
jb
lcall
outsl
pop
jle
movups
sub
nop
mov
pusha
cld
mov
and
mov
incl
cmp
pop
xchg
adc
xorb
stc
daa
push
pusha
sub
push
add
movsl
movsb
orl
push
push
inc
aaa
adc
incl
or
pop
fucomip
pop
test
rcr
ja
sbb
nop
pusha
aas
ljmp
jl
inc
rep
iret
nop
scas
cwtl
mov
fdivl
fnstcw
mov
sbb
sbbb
xchg
sbb
sbb
out
dec
dec
je
cmp
cmpsl
jno
mov
gs
jmp
popa
dec
mov
pop
push
and
loop
and
repz
push
popf
out
adc
out
push
jecxz
cwtl
jp
fcmovbe
out
incl
push
dec
pop
lods
imul
mov
int
cld
or
jge
cmp
in
xlat
decl
jg
outsl
test
fs
aaa
enter
sbb
imul
cli
ljmp
sarb
xor
mov
scas
mov
xchg
incl
movsb
aas
std
xchg
adc
pop
mov
lock
cmc
mov
out
mov
leave
mov
stos
inc
fwait
mov
xchg
xor
mull
jnp
ss
addb
pushl
enter
jge
mov
cmp
pop
xchg
sahf
inc
xchg
inc
das
and
ds
test
push
fldl
xchg
mov
cltd
sbb
call
ss
fldl
lods
test
ror
mul
test
adc
sub
mov
lahf
push
mov
lcall
cmp
das
cmc
out
xor
push
jg
xchg
rdpmc
cmpsb
dec
xchg
pop
lds
mov
push
lret
call
xchg
lret
cltd
daa
scas
adc
cmp
adc
int3
mov
std
pop
cmp
mov
fisubrl
mov
cld
pop
je
push
int3
icebp
fistpll
mov
adc
or
cmp
mov
cmp
cld
fldt
jnp
pop
call
xlat
fildl
jg
shl
xchg
jecxz
jg
and
dec
adc
xchg
jl
add
cmp
add
lds
fcomps
stos
cmp
addr16
incl
jl
xor
mov
xorl
daa
pop
xchg
inc
cmp
ljmp
cmpsb
jecxz
xchg
mov
imul
decl
lock
ds
jnp
cli
mov
loopne
popa
call
push
mov
insl
push
repz
xor
push
cwtl
inc
mov
fstp
fcmovnu
jg
ljmp
ljmp
lock
xchg
add
push
or
rcl
jmp
stos
inc
loopne
push
inc
aam
shrl
icebp
aaa
clc
fists
inc
ljmp
mov
xor
adc
pop
pushl
movsb
cmp
dec
mov
ljmp
mov
lahf
and
cmovno
fucomi
daa
out
leave
js
inc
loopne
fadds
call
in
clc
in
stos
es
mov
jmp
jmp
rcr
adc
sbb
ja
ret
cmp
lcall
out
push
sbb
jge
xlat
xchg
cld
mov
popf
push
in
inc
sti
pop
mov
loop
int3
jle
ljmp
mov
push
aas
andb
or
mov
and
sub
pushl
sub
xchg
lods
leave
lods
in
fidivrl
xor
shl
jo
inc
xor
call
outsb
sub
imul
ret
in
mov
pop
lds
insl
aam
mov
insb
rorb
cmp
jecxz
xchg
js
or
stc
rorb
jecxz
lret
incl
out
sti
pop
out
add
push
xchg
fisubrl
popa
sub
daa
jg
aam
mov
adc
addr16
sub
cmp
sub
sub
cltd
int3
incb
in
in
lcall
push
loopne
mov
pop
repnz
nop
stc
sahf
arpl
in
xor
xor
xor
jmp
or
and
lret
add
aas
cmp
fwait
lret
jle
push
hlt
pop
cltd
imulb
mov
repnz
hlt
cmp
js
cmp
ljmp
dec
aaa
jnp
test
sub
fbstp
fs
adc
cmc
hlt
mov
addr16
push
sbb
or
out
iret
mov
cmp
das
cli
shl
bnd
ret
mov
test
add
cmpsb
push
mov
mov
fld
adc
mov
sbb
int3
sub
sbb
push
adc
xor
decl
push
and
push
fwait
insl
leave
stos
xor
test
sahf
ss
das
ljmp
mov
pusha
sbb
movsb
fiadds
mov
push
xlat
xchg
ja
mov
push
pop
aam
xlat
push
aas
dec
loop
cmpsb
cs
lret
mov
push
clc
sub
fsub
loope
mov
lcall
cmp
lahf
cmp
out
push
mov
icebp
in
xchg
mov
xchg
push
lock
insl
iret
sub
xchg
mov
in
mov
fildl
lahf
fiaddl
scas
pop
divl
ret
inc
arpl
mov
divb
push
sti
pop
mov
xchg
fdivrs
decl
pop
pop
icebp
lcall
dec
adc
ficoms
inc
jae
incl
dec
jg
cs
dec
sahf
hlt
add
jb
loop
push
movsl
add
pushl
loop
out
mov
inc
mov
movl
pop
lcall
cs
lods
mov
mov
inc
jecxz
jmp
cmc
stos
or
ds
popa
sub
and
jae
push
test
std
jbe
daa
cwtl
xchg
shrb
ja
lods
dec
push
dec
add
rclb
adc
jmp
out
sar
xor
stc
push
adcl
in
cmp
das
gs
stos
std
lcall
ret
or
imul
pop
mov
dec
or
mov
xor
decl
mov
lret
push
adc
ljmp
fadds
outsb
loopne
sti
in
out
pop
mov
inc
loope
enter
loope
or
mov
call
and
cmp
rorb
ret
jmp
dec
out
add
xor
dec
mov
xor
inc
push
ljmp
jmp
test
adcb
and
push
call
inc
push
ljmp
dec
nop
cltd
call
fcompl
mov
fs
aad
jecxz
fildll
icebp
decl
push
jp
mov
std
fucom
cli
lcallw
call
sbb
cmp
fdivrs
sbb
dec
pop
shl
rorb
push
shrl
push
adc
or
pop
loopne
xlat
mov
push
data16
mov
inc
daa
jg
aas
hlt
loopne
out
jl
push
cld
mov
dec
dec
xchg
or
cwtl
rorb
stos
stos
mov
cmp
test
addr16
aaa
inc
sbb
or
and
jmp
mov
mov
push
lahf
lock
and
es
add
leave
jb
pop
clc
popf
sbb
in
scas
cli
out
imulb
and
test
jge
lret
pusha
cmp
hlt
out
mov
cltd
aaa
cmp
or
fisubrs
pop
out
jb
int3
imul
out
int3
mov
clc
pop
inc
add
sbb
adc
outsl
es
or
imull
aas
daa
cli
xchg
sbb
sub
jb
out
sbb
mov
ror
jecxz
fisubrl
dec
cld
outsl
clc
decl
mov
mov
fdivp
jbe
xchg
cli
and
pop
jae
cmp
cmp
mov
jl
sahf
pop
add
or
pop
hlt
pop
fidivl
out
dec
dec
rorl
add
jle,pt
js
pop
mov
xor
mov
pop
rcrb
iret
mov
loopne
dec
mov
lcall
rclb
iret
adc
inc
mov
lock
out
lcall
jmp
mov
jecxz
les
andb
push
fwait
adc
jle
fwait
inc
push
fildll
movsb
pop
jmp
pushf
xchg
mov
hlt
ror
mov
xor
comiss
lahf
xchg
xlat
mov
push
lahf
sub
jle
loope
jmp
cmpsl
out
cmpsb
cwtl
mov
loopne
jle
icebp
mov
inc
mov
iret
pop
mov
inc
pop
xchg
dec
mov
nop
xchg
mov
jns
jnp
je
adc
push
fwait
ljmp
mov
adc
js
movsb
xchg
mov
xor
lock
sub
mov
or
bound
fucomi
shr
ds
inc
pop
dec
lcall
clc
std
hlt
fcmove
jmp
sti
inc
daa
in
pop
push
adc
fdivrl
push
lock
cli
mov
dec
jmp
cmc
stos
les
jl
dec
repnz
pop
pop
ljmp
and
xorl
addb
fstpl
mov
test
dec
imul
adc
call
sbb
add
pop
dec
push
es
jo
cli
ljmp
inc
stc
mov
mov
test
mov
hlt
and
enter
das
sar
mov
lods
xchg
cmpsl
fmull
scas
aaa
cmp
xchg
or
mov
std
aad
push
mov
sahf
or
out
xor
loop
and
ret
mov
paddusw
call
xchg
popl
jb
aam
cmc
mov
imull
dec
or
mov
lahf
cmp
sbb
push
xchg
std
and
jo
sar
scas
stos
movsb
or
or
jmp
dec
clc
or
mov
mov
out
mov
add
outsb
mov
std
lret
adc
outsb
cli
mov
incl
adc
jnp
loope
xor
pop
pop
xor
arpl
sbb
xor
test
ljmp
aad
inc
into
scas
and
mov
pop
xchg
cld
test
fwait
cli
call
lcall
mov
inc
and
inc
sbb
jg
and
and
ret
clc
or
mov
xor
repz
out
frstor
mov
lcall
cmp
pop
sbb
es
xchg
movsl
movsl
in
icebp
pop
sbb
in
adc
or
jecxz
data16
ljmp
sub
pop
shrb
sub
mov
jp
jns
seta
xlat
xlat
jg
incl
inc
js
pushf
ja
mov
test
xchg
mov
test
adc
call
pop
dec
dec
ljmp
fdivs
jecxz
pop
sub
mov
dec
inc
scas
les
pop
adc
ud0
fimull
jmp
cld
jmp
ror
xor
xlat
lds
inc
jmp
cld
ror
iret
mov
sub
out
mov
pop
pop
call
in
dec
fildll
lds
loopne
repz
push
cmpsl
jbe
cmp
cmp
push
jmp
mov
or
sbbl
call
lahf
jo
push
dec
icebp
dec
out
adcl
in
scas
cmpsl
jg
jle
out
or
cmp
mov
sub
ljmp
cmp
cmc
clc
scas
loopne
add
cli
fildll
imul
jmp
inc
inc
add
hlt
xchg
jne
scas
clc
aad
outsb
rcl
fimull
notb
sbb
inc
ds
decl
fs
out
mov
jge
leave
pinsrw
ljmp
fisubrs
lods
sub
fimuls
jecxz
mov
push
jnp
jg
xor
sti
movsb
incl
fnstsw
dec
mov
adc
hlt
pop
mov
fsubrl
sub
jmp
out
fistpl
xchg
loop
insl
gs
icebp
mov
push
stos
bound
nop
xorl
mov
add
dec
mov
lahf
xchg
jae
bndstx
ja
aad
pushl
repnz
data16
mov
mov
scas
or
cli
mov
je
mov
in
sub
call
and
std
fdivrs
push
aaa
arpl
shr
cld
or
sub
test
ljmp
popf
cwtl
pop
movsb
insl
and
loopne
imul
sub
mov
xchg
pushf
call
cmc
sub
lcall
ljmp
ja
lahf
fiadds
insb
pusha
shl
shrl
out
and
cli
push
mov
incl
adc
and
out
mov
orl
pop
clc
mov
rcrl
aas
lahf
das
ljmp
repz
imul
xchg
lods
out
fmulp
cmpsb
mov
cld
call
cli
lcall
sarb
loope
js
jne
push
fdivrs
push
push
and
jns
xor
pop
shll
dec
xor
mov
or
lcall
adc
mov
mov
stos
lahf
lahf
fiaddl
insl
aaa
add
and
aaa
cld
std
movsl
mov
dec
out
mov
cmpsb
shrl
and
test
fbld
cmpb
cmc
scas
fwait
ljmp
xchg
mov
mov
jg
inc
sbb
and
out
stc
mov
leave
inc
adc
xor
dec
pop
sub
mov
and
adc
out
icebp
lcall
fwait
loop
call
ljmp
jns
imul
jmp
aaa
pop
arpl
test
mov
scas
clc
fisubrs
loope
mov
sbb
data16
decl
mov
lds
sbb
popa
ja
cli
ljmp
cmp
or
xor
dec
arpl
lret
sahf
or
in
pop
dec
out
push
push
xlat
sti
clc
loopne
addr16
mov
aaa
push
mov
or
or
stos
loop
jmp
cmc
gs
lds
push
shlb
std
jmp
push
sarl
emms
dec
mov
ljmp
cwtl
clc
ja
xchg
lock
cmp
ja
pop
sarb
xchg
je
addr16
and
in
mov
imul
cmc
jae
push
out
stos
clc
sub
pop
mov
mov
mov
pushl
dec
mull
test
out
lea
loope
jmp
mov
mov
sar
lcall
mov
and
repnz
mov
adc
in
adc
jle
into
popa
fisubrs
cs
inc
cmp
jmp
mov
jge
loopne
jnp
loop
dec
add
and
jg
cmpsb
clc
add
push
inc
lock
inc
in
imul
or
xchg
iret
fwait
cli
cltd
pop
dec
fnstcw
call
cmc
mov
testb
iret
fimuls
pop
mov
addr16
lcall
cltd
mov
in
rcrb
cltd
inc
loop
mov
inc
dec
push
jnp
test
adc
sub
push
lret
mov
lods
inc
ljmp
pop
test
jne
bound
mov
dec
lods
xor
ret
push
bound
icebp
sbb
pop
shlb
sahf
rorl
jecxz
fcomip
lock
shr
cmp
popa
fwait
out
fstpt
mov
xor
pop
cmp
ljmp
lods
jl
or
fistpll
mov
mov
stos
and
adc
mov
jmp
xor
jb
cmp
repnz
lods
lahf
xchg
dec
aaa
add
incl
in
sarb
jmp
addl
lods
pop
jo
xchg
out
jno
dec
add
call
sub
jo
push
lods
push
cmc
stc
out
push
push
push
pop
jo
jg
in
lods
lret
mov
loop
ds
sbb
add
mov
pop
jmp
fidivrs
mov
ret
mov
mov
jae
jb
inc
push
repz
add
lret
cld
push
enter
mov
push
push
inc
aaa
imul
fwait
incl
pop
cmpsl
ja
dec
xlat
div
hlt
je
fld
std
sbb
fcmovne
sub
mov
divl
popl
pushf
cmpsb
xchg
nop
nop
popf
fmuls
ja
incl
aaa
shll
or
pop
mov
loop
mov
mull
imul
cmp
out
mov
mov
aaa
inc
cmp
jns
cmp
adc
and
das
cli
dec
push
adc
loopne
aas
mov
test
mov
ljmp
xor
add
xchg
imul
stc
mov
cmpl
cli
xor
rcr
ljmp
cmpsl
or
jbe
adc
pop
inc
or
stos
and
inc
test
or
and
mov
addr16
pop
imul
std
nop
addr16
daa
aam
js
lcall
ud0
dec
incl
out
cwtl
mov
mov
or
arpl
loopne
bound
sbb
incl
icebp
lock
add
pop
jp
lret
enter
ds
pop
insb
incl
xor
cmp
ljmp
sbb
xchg
xchg
mov
sub
pop
ret
movsl
es
dec
enter
data16
out
pop
jl
std
pop
sbb
movsl
rclb
pushl
movb
rolb
pop
dec
jno
mov
mov
dec
dec
sbb
jmp
mov
cmp
adcl
cs
outsl
out
adc
loope
daa
mov
out
rcll
das
adc
outsl
or
mov
rorl
jbe
and
mov
mov
fdivrl
mov
pop
outsl
and
jmp
cltd
cld
cmpsl
mov
jbe
mov
xchg
shrl
icebp
ljmp
push
mov
sti
jmp
xor
daa
jns
xchg
dec
frstor
pop
mov
sbb
popa
outsl
pushf
xchg
mov
mov
leave
repnz
sbb
loop
fidivs
movsl
pusha
jp
jl
jp
jmp
xchg
adc
cmova
sbb
mov
sbb
add
xor
arpl
in
fnstsw
jp
lcall
jne
stos
xlat
stos
dec
std
jg
mov
icebp
rolb
scas
icebp
dec
jg
push
lahf
fldln2
xchg
pop
ljmp
fdivrl
jge
mov
fistpll
add
fs
or
mov
push
jbe,pn
dec
insb
jp
out
test
xor
das
jmp
repz
mov
lahf
adc
bound
push
mov
adc
or
outsl
adc
scas
jb
or
pop
jo
decl
jg
jne
and
hlt
test
mov
movsb
mov
cmp
or
mov
jge
mov
stos
scas
cmp
adc
out
shll
pop
sub
jns
js
cmpsb
mov
mov
and
jne
mov
lods
imull
cmpsb
ja
sbb
cld
loopne
int
test
adc
adc
xchg
pop
insl
mov
or
aas
and
xchg
pushf
xor
shrb
inc
inc
pop
mov
stos
scas
clc
mov
xor
xchg
jg
or
push
std
ljmp
clc
in
cmp
dec
cmpsb
push
pop
in
mull
inc
rcll
js
pop
in
push
scas
pushl
adcl
aas
xchg
mulps
jo
jmp
xchg
sahf
subl
jl
imul
dec
jb
jno
jo
loopne
sub
add
shll
cli
imulb
decl
mov
mov
sub
movsl
aam
mov
xor
mov
mov
decl
das
sub
mov
and
xchg
sahf
mov
pop
mov
clc
call
mov
pop
xchg
mov
data16
call
fsubs
into
cmp
lds
rorl
mov
adc
test
aas
sub
lahf
call
jmp
dec
mov
sti
cli
outsl
divb
aaa
dec
stos
ficomps
inc
cmp
adc
mov
loope
in
mov
or
mov
mov
mov
dec
fs
or
sbb
or
mov
cmp
movb
fildll
cmp
dec
arpl
test
mov
ljmp
dec
sub
hlt
pop
sbb
xchg
ret
enter
mov
lcall
decl
scas
xor
ret
and
xchg
mov
xlat
sti
je
jns
and
in
lcall
fisubl
and
inc
push
and
cli
xlat
xchg
mov
jmp
jmp
cmp
ljmp
pop
rorl
lcall
fwait
or
pusha
lmsw
push
fidivrl
add
sbb
dec
mov
add
inc
stc
xor
sar
rorl
xor
push
movsl
and
or
sbb
sub
inc
out
inc
dec
push
fistps
push
push
repz
xchg
xchg
adc
mov
jmp
fdivr
add
decl
repnz
mov
idivb
xor
mov
clc
mov
sub
cmpsl
shlb
pushl
jp
fisubl
nop
loopne
xchg
aad
push
mov
cmpsb
add
add
aam
cli
pop
subb
shr
mov
out
fldenv
out
cmp
pop
ljmp
in
add
dec
adc
pop
inc
mov
fsubp
jg
in
or
push
pop
pop
das
pop
scas
iret
lods
sub
pop
loopne
xor
cmpsb
shrb
pushl
loopne
scas
jl
lods
and
lahf
pop
shll
clc
movsl
add
mov
movsl
mov
sbb
icebp
push
inc
imulb
stos
iret
das
fisubl
sub
dec
es
jnp
out
inc
test
pushf
cmp
jb
xchg
out
mov
lods
test
jnp
mov
inc
push
hlt
loop
lock
cmp
or
xchg
filds
dec
xor
cltd
mov
ljmp
or
pusha
es
and
stos
lods
enter
mov
iret
cmpl
fs
call
lock
and
mov
outsb
mov
in
push
push
sbb
xchg
xor
sarl
xchg
cli
cmpsb
mov
and
fwait
icebp
out
jg
repnz
xorl
std
fsubrl
push
int3
sub
cmc
push
sarl
data16
push
xchg
adc
into
in
sbb
repnz
adc
mov
cli
mov
sub
daa
movsb
daa
das
rcr
pop
mov
adc
into
mov
call
repnz
repnz
mov
out
jecxz
push
stos
fsts
fstpt
and
jno
idivl
mov
sub
inc
mov
jns
jb
xlat
fdivr
loopne
dec
loopne
jg
ljmp
cmpb
pop
enter
cltd
mov
jg
into
sahf
jecxz
mov
mov
cmp
mov
jecxz
xchg
pop
mov
mov
mov
fdiv
xlat
imul
jmp
stos
push
sbb
mov
xchg
in
repz
mov
inc
cmp
fisttpll
push
fsubr
incl
movsl
stos
fsubrs
jae
mov
jne
int3
pop
int
lock
outsb
ret
pop
fwait
arpl
dec
addb
scas
stc
lods
lret
sbb
push
dec
outsl
push
push
dec
adc
fs
rolb
dec
lock
cmp
jl
adc
out
js
popf
inc
mov
mov
fiaddl
push
jg
cmp
jnp
sbb
decl
sub
fwait
xchg
pop
iret
mov
adc
jnp
push
xorl
xchg
cmp
pop
cmp
decl
ret
aas
mov
repnz
jae
mov
mov
lcall
stos
pop
pop
inc
and
ret
add
rcl
ficoms
jo
sbb
cmp
lahf
push
mov
decl
jge
pop
pop
aam
movsb
fmull
out
daa
into
int
xor
fwait
cmpsb
lds
test
mov
push
mov
xchg
xchg
andl
mov
bound
icebp
sbb
outsb
and
inc
or
imul
adc
imulb
call
adc
pop
lea
add
push
and
sahf
adc
jg
in
jae
fstpt
loopne
push
sti
mov
cltd
cli
mov
out
out
mov
ret
sar
sbb
cmc
clc
mov
repz
and
jp
mov
jmp
sub
lret
pop
outsl
jbe
iret
mov
insl
fadds
decb
je
stos
jle
out
shll
inc
jl
pushf
incl
xor
push
add
das
sti
add
jbe
pop
inc
cltd
shl
icebp
xchg
sti
stos
dec
xor
orb
sahf
int
icebp
xor
sahf
adc
mov
jg
scas
adc
jnp
sub
jae
and
xor
sbb
addr16
push
xchg
jg
lock
inc
xor
push
mov
adc
xchg
cs
jno
pop
movsl
ret
ljmp
inc
push
pop
or
fisttpl
inc
cmp
repnz
lock
lret
inc
aas
add
sbb
iret
clc
or
movsb
sti
popa
xchg
decb
mov
cmp
clc
arpl
in
jo
pop
mov
aam
mov
es
jg
add
mov
ljmp
test
repz
fldcw
imul
and
call
inc
push
scas
sti
mov
sahf
rorl
cmp
jmp
cwtl
xchg
fisubrs
dec
pop
sub
stc
cs
pop
push
cmpsb
adc
and
pop
cmc
rolb
mov
movsl
pop
mov
mov
inc
insb
sahf
jae
cmpsb
test
mov
decl
testb
sbb
out
mov
cli
xor
sarl
out
cli
jmp
adc
jae
aas
xchg
insl
jbe
push
imul
out
and
cmp
pushl
and
dec
icebp
or
jb
movsb
pop
rcr
cmp
dec
cmpsb
fildll
lcall
dec
test
test
jmp
dec
adc
mov
movsb
sbb
jge
ds
popf
mov
decl
negl
imul
jnp
movsl
jae
testb
out
pop
xorb
negb
mov
or
mov
call
jmp
push
lods
ds
mov
idiv
dec
pop
icebp
adc
inc
ror
sbb
leave
insb
imul
in
iret
mov
cmp
das
and
sar
push
push
xlat
ret
test
mov
enter
mov
lret
push
push
mov
lods
popl
test
repnz
lcall
or
lock
hlt
lods
mov
decl
add
imul
add
nop
std
xchg
jns
mov
xlat
adc
incl
cmp
fsubrl
in
lret
adc
fcmovb
xor
xchg
lea
push
xchg
or
jae
mov
sub
and
jecxz
inc
pop
pop
nop
lahf
pop
pop
imul
pop
loopne
and
incl
xchg
sti
push
sub
jge
mov
call
call
fucomip
repnz
dec
ficompl
repz
xor
ror
push
jle
cmc
adc
lret
xchg
adc
fnstenv
lock
or
add
nop
es
pushl
cmp
aas
aam
rcrb
repnz
cld
adc
fdivrs
fcomp
jbe
fwait
add
decl
int3
out
rclb
in
or
lcall
fs
inc
xor
jle
pop
jnp
and
cmp
mov
stos
jecxz
loop
movsb
ja
mov
fimuls
mov
and
iret
dec
inc
enter
scas
and
mov
dec
xchg
ljmp
mov
mov
icebp
push
in
pop
js
enter
or
addb
ljmp
lcall
out
out
xchg
fdivrl
ja
cmp
mov
loop
jge
xchg
cli
fisubrs
or
loopne
rsm
mov
pop
dec
lcall
test
incl
cmpsl
push
rcrb
repnz
bound
or
pop
pop
mov
xor
stos
pop
mov
ss
shrl
push
imul
pusha
lcall
xchg
ljmp
sbb
in
mull
loope
jle
and
mov
out
jl
roll
mov
push
xchg
jg
mov
mov
add
fcoml
sub
aaa
sub
testl
push
sub
loope
add
in
fs
out
lea
lock
mov
push
cwtl
cli
enter
push
push
mov
je
cmp
idiv
mov
decl
dec
das
rclb
aas
sub
into
cld
call
mov
subl
dec
insb
pusha
add
std
mov
mov
lahf
cld
sub
addr16
inc
shrb
leave
inc
call
mov
inc
push
out
mov
sub
fwait
movsb
lds
pop
push
mov
sbb
inc
adc
dec
enter
fsts
shrb
iret
popf
push
xchg
cs
out
cltd
lock
in
ljmp
fcmovu
scas
lret
jno
outsl
out
jns
movsb
add
push
push
fsubrl
add
push
ficoml
mov
push
in
lcall
inc
xchg
hlt
jo
lret
xchg
leave
bound
push
mov
adc
sub
cmpb
mov
sbb
mov
and
mov
dec
aam
lahf
pop
cmpsl
subb
mov
incl
mov
jb
cmpl
jns
movsl
xchg
sub
call
jmp
lea
pop
inc
nop
jg
cli
repz
movsb
movsl
xchg
pop
stc
ss
cltd
repz
cmp
mull
aam
hlt
outsl
div
call
mov
rorb
insb
mov
aaa
cmp
ljmp
push
pop
in
and
std
adc
sti
mov
mov
rcll
cmp
sbb
jge
out
rclb
dec
cli
dec
inc
cmp
pop
fnstcw
cmp
pop
cld
xor
pop
hlt
incl
jp
cmp
pop
push
dec
cli
jbe
sbb
mov
xchg
aaa
pop
mov
jmp
js
cmp
pop
repz
jecxz
lcall
add
negl
mov
xor
in
je
sub
jg
push
mov
mov
inc
push
hlt
aaa
dec
outsb
inc
and
incb
cwtl
cmc
loop
das
push
lea
add
jg
arpl
mov
repz
insb
lret
icebp
sub
lcall
std
outsl
xor
aad
clc
cmc
in
cmp
sbb
adc
jno,pt
inc
loopne
shr
fidivrs
cli
pop
jmp
xchg
push
call
and
push
movsl
cmp
inc
cmp
xor
vdivps
mov
xor
das
jg
mov
scas
into
ss
sub
mov
inc
push
mov
enter
inc
andb
adc
daa
or
sti
incl
aaa
ret
pop
loope
stc
sub
dec
or
int
jmp
out
and
arpl
sahf
push
xchg
fisttps
xchg
dec
pop
sarb
mov
movsl
jbe
lret
aas
aas
mov
movsb
cmpsb
cmp
push
push
stc
fstpt
jmp
lcall
adc
dec
pop
call
scas
mov
out
jmp
pop
repnz
stos
xor
into
pop
jne
inc
fsubrl
aaa
fimuls
cli
mov
sub
cmp
lahf
jl
jge
shrb
data16
sbb
lcall
jle
in
addl
or
jnp
in
sbb
and
push
xchg
adc
dec
push
cmpsl
out
or
outsb
dec
mov
pop
pop
fcmovu
jno
decl
sbb
sub
push
add
sub
cmp
or
jg
cmp
xchg
test
cli
mov
pop
out
xchg
mov
ret
dec
clc
decl
imul
add
scas
idivb
nop
and
loope
idivb
add
idiv
jns
inc
loop
popa
shlb
iret
mov
icebp
orb
ss
repz
gs
cmp
inc
dec
adc
jecxz
mov
cltd
cmp
fs
xchg
out
xor
cmp
mov
pushl
mov
mov
pop
lahf
rcl
push
xor
out
std
mov
sbb
pop
sub
pushl
mov
rcll
cmp
jmp
cmp
cmp
mov
test
jmp
dec
push
repnz
pushf
mov
push
fistpl
mov
mov
aad
push
inc
xchg
push
and
insb
shr
cmp
cmp
mov
lahf
pop
pop
mov
push
cmp
cmp
or
stos
or
cmp
shl
sahf
pop
outsl
pop
mov
call
cmp
inc
jl
push
dec
and
jle
pop
pop
or
in
aad
lods
xorb
std
bnd
mov
pushf
rep
ljmp
dec
fwait
push
mov
into
mov
mov
push
push
adc
ds
popa
push
mull
pop
loopne
lods
ret
xchg
bound
clc
bound
push
notl
decl
xchg
je
test
cli
jge
sbbb
mov
mov
dec
push
mov
jg
je
cmp
dec
and
shlb
and
or
adc
push
push
ja
mov
std
mov
int3
in
dec
jno
dec
mov
push
jbe
sbb
fbld
jmp
cwtl
imul
dec
xor
leave
cli
mov
incl
jmp
scas
aaa
js
adc
out
imul
icebp
pop
cmpsl
dec
jmp
das
pusha
xor
ljmp
sbb
or
push
sbb
fiaddl
xchg
mov
test
jmp
jle
dec
xchg
insb
test
sahf
shr
dec
fmull
sub
mov
rol
mov
push
int
mov
pushl
mov
fidivrs
jbe
xor
pop
add
shr
shl
sub
jae
xchg
adc
jmp
scas
cmc
xchg
clc
mov
call
push
jp
xor
pop
loopne
and
mov
cmp
mov
call
arpl
inc
ljmp
imul
cs
mov
mov
decl
inc
mov
mov
adc
imul
mov
dec
xlat
xchg
jge
ss
adc
incl
xchg
xor
adc
or
add
imul
jns
popa
sbb
in
shll
adc
clc
pop
ret
out
std
adc
cld
adc
sti
cmpsb
test
cli
adc
and
in
into
push
in
sahf
jmp
mov
fbstp
fdivr
pushl
sbb
dec
adc
mov
mov
cmpb
shrl
xor
adc
ja
notb
jle
xor
dec
mov
dec
inc
jg
in
cli
lcall
out
xchg
dec
mov
pop
push
stos
js
mov
mov
dec
scas
cmp
iret
jns
adc
addb
into
lret
push
cli
rorb
xchg
in
subb
sub
stos
pushl
add
and
lcall
mov
cmpsb
or
lock
ja
pop
pushl
inc
test
lcall
ret
inc
pop
lods
pop
scas
add
nop
cli
call
int
dec
sar
pop
or
jmp
in
imul
sbb
ljmp
sub
mov
sub
mov
sub
call
xor
js
hlt
and
fdivr
mov
inc
jecxz
lcall
pop
mov
xor
inc
in
fcoms
mov
inc
call
and
outsb
les
loop
add
jno
inc
into
testl
mov
push
xor
jns
cmp
scas
mov
lods
xchg
mov
pop
icebp
push
or
out
pop
ds
add
sub
fcmovb
lcall
fadds
cli
mov
testb
sarb
inc
adc
dec
test
lods
fistps
enter
repnz
or
iret
or
hlt
dec
inc
pop
or
push
insb
dec
test
pushl
sbb
push
cmp
iret
sti
rclb
cwtl
lret
leave
daa
call
jns
outsb
aaa
push
cmc
push
cmp
in
mov
cld
mov
scas
mov
jmp
jmp
jle
jl
jne
or
dec
out
in
mov
mov
pop
push
mov
xor
outsl
sub
sti
popl
hlt
repz
and
and
mov
cs
out
dec
pop
cmp
push
insb
rorl
jle
jmp
lret
and
fucomp
jmp
inc
pop
clc
movsb
push
repz
jmp
cmc
cmovbe
cmp
cmp
mov
push
jmp
adc
mov
fbstp
in
aas
mov
out
sbb
out
negl
int3
sbb
ds
test
repz
mov
lods
pushl
rol
int3
out
clc
das
pop
dec
cmc
dec
xchg
pop
xchg
movsb
scas
mov
fstpt
adc
repz
stc
nop
or
aad
sbb
mov
lock
clc
out
cld
push
dec
cmp
std
filds
push
and
add
mov
adc
gs
int
pop
outsb
shll
sbb
inc
mov
filds
iret
push
fsub
aad
sub
call
jecxz
cmp
add
dec
lea
incl
repz
mov
jmp
xchg
lret
jns
jecxz
cli
cmc
mov
pop
mov
xlat
xchg
and
decl
pop
mov
movsb
das
xchg
mov
lcall
hlt
cmpsb
mov
adc
inc
mov
sbb
mov
test
repnz
mov
in
repz
dec
iret
aas
jo
iret
sub
loop
add
loope
pop
jno
sub
pushl
sub
cld
lea
xchg
cmp
cmp
ficoml
outsl
add
aaa
std
mov
imul
mov
or
jo
jg
or
jmp
adc
imul
inc
pop
jmp
outsl
fdivrp
les
lock
js
cmp
mov
add
sbb
or
sti
cmc
pop
scas
cmpsl
cmpb
std
dec
cmpsl
jmp
aaa
mov
pop
sbb
hlt
stc
mov
sub
decl
jb
arpl
stos
cld
pop
in
loopne
nop
aaa
out
arpl
in
mov
cli
push
jg
jne
xor
dec
inc
mov
mov
insl
daa
ret
jge
jns
iret
into
mov
lcall
inc
mov
aad
popf
aam
subb
ds
mov
ret
es
and
cmc
fstps
dec
mov
dec
incl
sbb
popa
pop
and
inc
push
jecxz
fbstp
loopne
and
cwtl
stos
testb
aam
outsb
lret
rorb
arpl
mov
incl
mov
mov
mull
jmp
and
movsb
incl
mov
sti
cmp
rcr
lcall
lret
sti
insl
pusha
jl
cmp
incl
adcb
cmp
jg
fistps
mov
pop
fsubr
cmc
sub
jmp
arpl
lds
xorl
jmp
mov
ja
dec
cmpsb
mov
adc
stos
add
rorl
inc
pop
repz
lret
push
inc
loop
call
bound
sub
jnp
cmp
loope
xchg
cltd
jbe
jae
pop
fwait
cmp
sbb
mov
xchg
jg
icebp
xchg
jge
dec
adc
adcl
test
rol
fidivrl
mov
pushf
in
ret
adc
imul
or
aaa
bnd
mov
add
and
std
cld
mov
aaa
ds
fidivs
mov
outsb
and
mov
add
mov
jns
lret
ljmp
adc
jp
cmpsb
mov
push
jo
dec
jmp
es
fwait
mov
jb
fbld
adc
std
mov
cmp
ljmp
push
inc
into
mov
mov
push
test
jae
pop
jno
fadd
cmc
push
xchg
cli
sub
repz
or
lcall
lock
popf
movsb
sbb
loopne
add
pmulhw
inc
sub
jmp
std
jge
and
popf
lret
mov
mov
in
js
push
mov
mov
mov
ljmp
sub
out
jbe
hlt
adc
lcall
ret
bnd
cmp
mov
dec
sbb
jp
repnz
cmp
push
sbb
jmp
pop
jb
pop
enter
sbb
push
jecxz
insl
outsl
mov
in
out
cmpsl
mov
dec
pop
push
call
call
imul
sti
jo
clc
push
aaa
scas
adc
xor
div
decl
pusha
fs
sahf
das
scas
mov
jnp
lret
sub
cmpsl
push
xor
decl
jb
test
icebp
mov
fwait
pop
sub
jmp
jnp
add
ljmp
das
push
mov
pop
sub
push
mov
rcll
pushl
out
push
das
fcoms
daa
cmp
fildll
loope
jno
sbb
and
push
paddusw
dec
and
pushl
pop
and
frstor
xor
mov
fsqrt
icebp
js,pt
sahf
mov
insl
xor
iret
push
sub
outsl
jmp
xlat
jg
sar
jl
fimull
stc
mov
jns
mov
jg
pop
mov
mov
aaa
jmp
bnd
outsl
call
lcall
in
int3
scas
sub
insl
mov
fdivr
sar
lahf
js
pushl
cmpsl
or
lcall
cmp
fbstp
and
adc
mov
movl
decl
repz
xor
insb
xchg
pop
hlt
adcb
xor
fsubr
dec
jmp
pop
addl
int3
sub
jno
and
pusha
sbbl
sbb
incl
outsb
mov
movsl
out
fstl
pop
fucomip
rcrl
push
push
dec
fcomip
ljmp
into
mov
test
divl
push
mov
mov
cs
in
loop
divps
lds
mov
filds
jnp
fsub
sbb
jg
mov
mov
jg
adc
loop
pop
mov
lcall
inc
inc
in
cli
mov
sbb
push
cli
xchg
push
pop
inc
pop
out
hlt
out
xchg
ljmp
cmpb
daa
add
test
out
mov
call
jmp
lahf
xor
jp
in
stc
adc
shlb
mov
pushl
mov
cltd
adc
pop
push
loope
ret
ss
pop
hlt
mov
pusha
cld
cmpsb
into
mov
adc
push
push
sbb
jmp
clc
call
shrl
xchg
outsl
cli
std
cli
mov
aas
ljmp
inc
fs
stos
rorl
dec
mov
push
cmpsb
repz
jl
popf
in
sbb
jmp
sbb
loopne
ret
mov
and
dec
sbb
jle
cwtl
mov
inc
jecxz
xchg
cli
bound
test
jmp
gs
out
push
icebp
pop
xchg
jl
pop
jns
xor
mov
mov
mov
in
jns
cmp
mov
stc
clc
dec
sahf
adc
test
mov
dec
incl
push
mov
inc
fs
jb
xchg
or
pop
decl
dec
mov
jbe
mov
mulb
hlt
aas
clc
js
cltd
or
xchg
or
sar
jmp
sub
ljmp
dec
es
nop
jne
push
cli
pop
iret
test
pop
icebp
jmp
xlat
ret
add
ficoms
mov
test
pop
sbb
cld
ljmp
cmp
jg
inc
icebp
cwtl
sub
xchg
test
sbb
add
ja
clc
mov
or
mov
ret
jp
rcll
and
fldl
xchg
sar
lcall
les
daa
lahf
mov
mov
xchg
dec
jp
xlat
out
sbb
push
mov
lcall
xor
mov
mov
pop
inc
add
xor
arpl
decl
jl
ficompl
add
sbb
mov
loopne
add
cmp
xlat
pushf
out
out
incl
mov
mov
or
pushl
cmc
push
pop
xchg
out
push
clc
int3
cli
jnp
cmp
dec
call
in
lock
pushl
pop
mov
cli
push
mov
mov
pusha
ret
repz
pop
lock
icebp
mov
and
outsb
std
mov
push
pop
pop
fdivrl
adc
lahf
iret
jae
push
xlat
mov
dec
push
cltd
je
sbb
ljmp
cli
jge
cmp
fwait
add
icebp
movnti
lock
jg
inc
std
cmp
int3
ja
iret
imul
ljmp
push
out
pop
adc
mov
incl
popf
sub
stos
mov
pop
in
push
mov
push
push
sbb
push
push
push
dec
cli
scas
jecxz
mov
jo
push
xor
scas
aam
andb
bnd
clc
mov
mov
pop
and
push
xchg
pop
icebp
jmp
xor
dec
popa
mov
out
jns
js
jmp
loop
xorb
dec
faddp
cld
adc
out
lret
push
repz
ficompl
pop
lcall
in
mov
ljmp
insb
lahf
pop
fst
push
lret
mov
jg
fcmovnbe
or
js
pop
popa
mov
repnz
lods
out
insl
je
repz
jg
xchg
mov
xchg
jns
mov
xor
incl
xor
mov
ja
fdivrs
imul
sbb
fcos
call
mov
pop
dec
or
loop
adc
and
and
ds
incl
lret
sbb
cmp
outsl
insl
cltd
outsl
or
fidivl
pop
mov
mov
lcall
das
imul
mov
in
call
ss
sub
jl
call
push
clc
outsb
push
fistpl
lahf
and
adc
pop
adc
js
push
ja
lcall
adc
adc
enter
mov
adc
sub
ljmp
pushl
cmp
movsl
movsl
mov
clc
repz
mov
arpl
js
jnp
addr16
add
jg
decb
dec
jbe
loopne
sbb
push
arpl
or
dec
inc
inc
dec
inc
inc
out
jo
clc
incl
dec
fwait
nop
or
dec
je
cmc
mov
and
push
in
adc
jl
fstpt
fsubrl
js
mov
nop
into
jnp
xchg
and
xlat
fsubrl
mov
sahf
adc
outsl
jp
sti
es
add
push
sbb
inc
stos
or
repnz
aaa
push
aas
int3
sub
adc
xchg
das
add
push
ret
test
jg
xchg
xlat
and
sub
lret
movsb
popa
mov
inc
push
das
push
sti
lcall
cmpb
jbe
mov
lea
lahf
add
jmp
push
into
data16
inc
sub
cltd
sub
jae
stc
xor
dec
push
jae
pop
stc
jge
dec
cli
call
dec
fcmovnbe
mov
arpl
sbb
pushl
aaa
fdivp
movsb
mul
jns
imul
aam
hlt
and
outsl
ret
decl
lods
or
mov
and
imull
out
or
test
pop
test
cli
cmpsl
loop
mov
mov
out
shll
rclb
xchg
cmp
leave
test
mov
mov
call
out
mov
addr16
decl
repnz
mov
sub
adc
test
xchg
push
cmp
fisubl
pop
adc
ljmp
xlat
mov
filds
xchg
pop
cwtl
xchg
jg
xchg
fsub
repz
stc
and
fildl
add
out
jnp
fidivs
push
sbb
mov
call
imul
pop
jecxz
ja
jbe
mov
mov
loop
inc
ss
jg
mov
sub
push
cmc
jno
shlb
mov
dec
push
push
in
mov
ret
test
aam
push
cli
je
out
or
fidivrl
out
jmp
jl
insb
xchg
scas
pop
inc
pop
test
pop
fcmovbe
stos
adc
push
dec
sti
lret
outsb
dec
mov
test
cmp
ljmp
cmp
lcall
sub
mov
fdivl
scas
cmp
push
push
les
and
loope
lods
mov
jb
outsl
ljmp
clc
inc
cld
jo
into
cmp
cmpsb
mov
call
add
sbb
mov
mov
subb
lahf
cmp
add
inc
inc
mov
jmp
and
jne
xlat
pmaxsw
dec
jb
das
sti
loope
fists
jbe
dec
jg
lds
mov
lahf
sbbl
push
je
lret
hlt
rorl
mov
mov
sbb
dec
cmp
inc
les
js
inc
out
leave
loopne
daa
xor
adc
sub
add
jg
rol
or
cltd
movsl
das
xor
leave
aas
je
dec
mov
sub
xchg
test
aad
ljmp
mov
movsb
sub
push
jl
pop
dec
outsb
shlb
out
mov
or
dec
inc
jb
ljmp
dec
popf
sbbl
cld
incl
dec
jbe
pop
xchg
pushf
sub
divb
out
fimuls
scas
push
pop
mov
xchg
les
dec
out
push
ljmp
das
lcall
rep
add
enter
into
out
lret
push
adc
push
ljmp
jae
stos
jecxz
mov
mov
pusha
jg
mov
int
loopne
jg
sbb
aaa
insl
std
pop
push
outsl
mov
mov
or
stos
mov
inc
popa
stos
cmp
in
jl
orb
call
arpl
sub
iret
pop
dec
call
subl
inc
idivb
jmp
mov
adc
mov
ss
shll
clc
xor
cmp
call
dec
leave
fsubrp
ficomps
jmp
aaa
push
pop
xchg
xchg
xor
sub
inc
cmp
sar
jmp
dec
std
push
jbe
mov
rclb
cmp
pop
pop
cmc
jmp
lods
call
lcall
nop
call
sub
xor
inc
dec
dec
into
fildll
mov
aad
jmp
aam
ficomps
outsl
sbb
mov
ja
jmp
pop
xchg
mov
arpl
std
sbb
inc
incl
xchg
insb
mov
leave
xchg
hlt
sar
outsl
mov
xchg
inc
mov
add
je
and
jnp
imul
xlat
ror
mov
imul
fs
call
jmp
fwait
xor
shrb
fisttpll
mov
xlat
mov
mov
sti
in
cmp
out
rolb
std
test
std
push
jmp
lahf
push
mov
pop
mov
in
sub
cmp
pushf
addr16
pop
xchg
jp
mov
shl
lds
hlt
xchg
mov
fdivr
popa
or
loope
push
ja
rcll
jbe
mov
rcrl
push
aam
push
call
or
inc
jo
out
push
pushf
sti
mov
dec
mov
push
std
movsb
repz
fdivp
imul
mov
fistpl
std
adcl
sahf
outsl
sar
testb
pop
imul
icebp
stc
jle
sub
xchg
nop
inc
mov
arpl
test
loopne
pop
adc
inc
stc
repnz
sbb
test
loope
mov
jne
repz
jmp
xchg
outsl
jne
mov
lcall
loopne
mov
dec
lret
leave
adc
jge
das
push
stc
adc
cmp
aam
dec
rorl
out
mov
addr16
loopne
jmp
rcrl
lcall
pop
aas
ret
shr
mov
andl
dec
addr16
imul
jmp
mov
rorl
outsl
repnz
addr16
mov
call
stos
into
insb
das
int
nop
jecxz
mov
and
aad
xor
rclb
mov
pop
mov
idiv
loopne
shrl
jp
adc
clc
ljmp
ret
push
es
mov
in
fsubp
xchg
fstpt
jns
jp
lea
jg
out
insb
daa
cli
aad
sti
xchg
and
or
jg
daa
mov
pop
sub
iret
cmpsl
imul
mov
mov
jl
loop
push
xor
decl
repnz
aaa
stc
ret
test
jg
fadd
addb
jmp
cli
jmp
ret
and
cmc
xlat
fwait
ret
insl
imul
dec
and
pushl
or
cltd
gs
cmp
in
ret
pushl
mov
xor
jne
jge
xor
lock
call
pop
push
add
cli
dec
cmc
ds
lahf
xchg
addr16
add
cmp
icebp
hlt
icebp
mov
inc
sahf
push
pand
lds
es
add
inc
mov
cmpsb
insl
idivl
ja
std
mov
ljmp
mov
inc
jno
mov
push
mov
push
jo
repnz
iret
mov
fildll
push
shlb
mov
mov
lods
idivb
adc
call
adc
aas
fnstenv
movsb
hlt
loop
and
mov
divb
mov
pushl
pop
out
popf
sbb
jge
xor
mov
push
jbe
mov
loopne
pushl
popa
pop
in
enter
sbb
stc
mov
decl
and
hlt
insl
jns
push
les
jmp
fisubl
and
clc
mov
in
pop
ret
cmp
addr16
cmc
mov
mov
movsl
mov
ljmp
cld
dec
fldcw
jnp
aas
hlt
lcall
mov
sti
scas
loope
call
pop
cld
stc
jmp
repnz
addr16
test
add
push
icebp
pop
mov
outsb
fs
fcoml
cmc
test
out
dec
ret
jmp
mov
testb
rcrb
clc
dec
aaa
loope
ss
jg
mov
and
scas
pop
mov
sbb
sbb
call
das
sub
xchg
cli
mov
pop
aaa
test
mov
lods
outsb
cld
aas
cmp
ljmp
dec
push
sub
and
ficoml
maskmovq
divl
dec
jbe
rclb
cli
pop
sbb
out
dec
idivl
dec
fmulp
outsb
or
hlt
push
loope
roll
imulb
lret
mov
std
push
and
sub
loope
or
mov
lods
mov
pop
dec
add
cwtl
ja
xchg
cmc
fs
dec
mov
daa
popf
mov
ljmp
mov
ficompl
cmc
pusha
jl
out
cltd
adc
mov
ljmp
stc
andl
fisubs
icebp
jo
jmp
pop
sub
mov
mov
mov
cmc
stc
out
fistps
xor
cmp
clc
nop
sub
hlt
decl
sar
push
jl
shl
cmc
out
pop
popf
stos
call
cld
out
fbld
shr
cli
aaa
push
inc
mov
lret
hlt
in
stos
dec
loope
xchg
icebp
scas
mov
jg
ljmp
lret
repnz
pop
data16
stc
test
negb
xor
out
enter
scas
sti
bnd
aaa
aam
icebp
jns
imul
add
ds
hlt
js
out
sbb
mov
cmc
imul
shr
add
jmp
sub
lock
ja
mov
and
ret
sahf
pop
out
decb
cmp
jp
lods
mov
fsubl
jmp
cwtl
fcomi
sub
mov
adc
mov
and
lods
fnstsw
pop
mov
aam
lods
outsl
add
jb
jo
lret
mov
nop
test
ljmp
fsubr
call
dec
pop
push
dec
sub
cmpsl
lcall
mov
fcomip
jg
in
ret
jbe
das
push
out
and
mov
arpl
lahf
sub
in
decl
sbb
leave
es
loopne
lock
outsl
mov
jg
mov
mov
xchg
mov
push
aad
jae
jecxz
outsb
mov
fbstp
mov
cmpsl
mov
stc
jp
pop
cwtl
movsb
or
add
test
test
jae
jge
jnp
mov
popa
adc
xlat
fldenv
stc
cltd
add
pusha
xor
ret
fidivl
inc
mov
inc
aas
jno
stc
lret
shll
subl
xchg
pop
movsl
cltd
mov
incl
aad
pop
repnz
lock
ljmp
in
aam
iret
ljmp
adc
lods
call
dec
jmp
dec
dec
lds
test
sbb
decl
dec
and
cmc
out
xchg
or
into
jne
jmp
pop
testl
bound
leave
xchg
shll
imul
or
fcomip
lcall
mov
xor
xor
dec
mov
repnz
popa
loope
push
idivl
sub
outsl
pusha
cmp
cmp
loopne
lcall
nop
jecxz
fistps
imul
das
sbb
xor
aad
pushl
std
lcall
jb
repz
xchg
xchg
mov
mov
scas
je
call
mov
scas
lret
jge
cli
push
mov
pop
mov
jmp
aas
pop
movsb
outsb
in
scas
lea
hlt
scas
clc
jmp
jns
insl
dec
pop
cmpsb
lock
jo
sub
pushl
cmp
xchg
sbbl
mov
jo
ret
ja
mov
fisttps
pushl
inc
xor
fwait
pop
in
xchg
pop
xchg
pop
push
int
mul
loopne
mov
mov
lret
mov
push
rcll
cmp
jns
inc
icebp
cmp
mov
orl
add
jmp
xor
mov
mov
jb
pop
mov
mov
sar
lcall
push
push
ficoms
sbb
adc
fmuls
mul
mull
cmc
stc
mov
scas
les
mov
dec
sbb
outsl
clc
mov
ljmp
data16
mov
mov
mov
dec
lret
loope
mov
aam
lds
pop
ja
clc
xlat
or
rcll
mov
adc
inc
sub
mov
inc
xchg
shll
jmp
jo
popa
leave
mov
and
nop
ljmp
out
dec
xchg
test
das
push
cli
int
insl
hlt
aad
add
scas
movsb
fnstsw
ljmp
in
or
out
mov
iret
sub
imul
or
stos
nop
scas
jge
movsl
lcall
std
jle
pop
cmp
lods
jg
outsl
pop
pushl
xor
dec
insl
mov
je
outsb
push
lds
jnp
inc
outsb
fbld
dec
lret
cli
decl
outsl
pop
sbb
jecxz
cmpsl
fcompl
imul
lahf
shll
mov
rclb
sub
jnp
pop
popl
dec
int3
std
hlt
xchg
mov
lock
pop
jmp
or
or
pop
popf
jne
mov
or
outsl
cli
pushl
std
inc
sub
aaa
aaa
mov
push
inc
sbb
cmpsb
scas
sti
jne
cs
repnz
rorb
mov
lock
jge
icebp
or
cmp
lods
pusha
ljmp
adc
push
cmpsb
mov
sbb
hlt
and
mov
cli
hlt
sets
lds
xor
pop
clc
xchg
call
dec
lcall
fiaddl
clc
mov
out
pushf
shld
and
or
pop
pop
leave
pop
cmp
frstor
mov
lcall
lock
out
fidivs
xchg
ljmp
and
clc
pop
mov
mov
lods
jecxz
mov
imul
xlat
stc
mov
loop
out
incl
cmc
xchg
repnz
ret
lods
in
and
mov
stc
mov
jg
stos
movsb
sub
mov
inc
xlat
adc
test
dec
mov
int
test
jge
cmpsb
movsl
pop
std
call
bound
mov
fwait
das
jg
jmp
scas
scas
mov
lods
cmp
xchg
call
add
decl
push
ffree
lret
jmp
xlat
jle
call
repnz
mov
aad
in
sahf
jns
je
push
clc
test
fwait
cltd
dec
cmc
lods
mov
jno
sub
jecxz
mov
jmp
pushl
xchg
stc
xchg
das
repnz
outsl
xchg
ret
fmul
push
xchg
aam
jae
mov
sti
push
dec
push
loop
xor
out
arpl
ja
iret
push
stos
repnz
bswap
fistl
and
call
mov
adc
in
ljmp
dec
pusha
outsl
js
stc
decl
mov
jmp
lret
xchg
jbe
cmc
test
dec
ds
aam
add
mov
jmp
fidivrs
and
cmpsb
aam
pushf
fcomp
inc
in
mov
lcall
pushl
xchg
test
shrl
mov
pop
mov
dec
lods
test
out
lret
fcomip
lcall
jae
repz
cmpsl
call
fidivrl
scas
ffreep
xlat
rcrb
fwait
mov
cmp
dec
in
cld
call
and
pop
add
mov
in
fnstenv
cmp
js
sub
aad
jecxz
xchg
mov
pusha
dec
jg
ljmp
ret
addr16
popa
stc
xchg
xchg
mov
lret
pop
jmp
arpl
dec
xor
insl
shr
bndstx
adc
popa
lahf
xor
test
and
sbb
cmc
mov
sbb
loope
push
decl
jg
ja
out
cmc
out
jge
inc
sbb
addr16
pop
push
clc
into
mov
sbb
and
cmp
lret
push
xlat
sub
decl
insl
add
mov
out
mov
push
mov
dec
call
notl
push
mov
mov
out
cli
pop
jo
insb
mov
insl
xor
jmp
jmp
xchg
inc
incl
mov
mov
repnz
testb
xchg
std
dec
add
pop
imul
pop
adc
mov
mov
push
shrb
mov
sahf
push
xchg
ss
jg
dec
cli
inc
cmc
mov
stc
ljmp
cmp
sub
jmp
push
out
mov
cmp
jns
filds
push
arpl
sbb
jmp
shrl
incl
out
jnp
xlat
inc
ficomps
mov
ds
cmp
insb
je
ljmp
in
dec
jne
lods
movsl
imul
jo
imul
int
pop
mov
in
out
xor
fbstp
and
and
mov
in
sbb
or
add
sub
mov
outsl
and
jle
mov
test
sub
inc
push
out
lcall
out
sub
jnp
insb
xchg
je
mov
cmpsl
fistps
add
enter
jae
notl
xchg
pop
inc
add
push
inc
cmc
aaa
jl
fildl
lock
ds
imul
dec
aad
ljmp
out
addr16
fdivl
incl
xchg
mov
push
repnz
xorb
add
adc
popf
int
sti
rcrb
jb
mov
jmp
out
hlt
pop
add
push
out
ffreep
pop
push
aas
inc
jne
imul
shl
lds
lds
inc
jbe
xor
loopne
jae
inc
das
mov
cmpsl
cmp
sub
call
imul
adc
xchg
sub
xchg
rorb
ss
fldt
cmp
in
cld
lock
lahf
sub
stc
sbb
push
mov
pushl
movsl
outsl
jmp
add
repz
test
jmp
jp
arpl
stc
dec
or
xor
std
repz
fsts
lea
cwtl
movhlps
fildll
fs
mov
mov
xor
push
scas
cmc
incl
jge
sub
movsb
xor
movsb
mov
gs
lcall
pop
out
xchg
dec
iret
popf
out
mov
or
jg
cmc
int
cmp
fwait
adc
out
push
jl
vmovss
adc
jbe
cs
popa
jno
sub
jmp
lret
scas
cltd
ds
mov
scas
adc
mov
les
mov
decl
rolb
adc
fstpt
adc
cmp
jbe
cmp
mov
arpl
or
jbe
jl
jp,pt
pop
sub
xlat
sar
mov
sahf
sar
sub
es
and
in
pop
jg
pop
outsl
shl
cltd
or
xchg
cmc
shl
adc
dec
push
dec
mov
xor
ljmp
add
mov
test
jb
arpl
repnz
ljmp
sar
sti
in
in
push
pop
out
dec
je
cmp
add
dec
loopne
jno
lcall
jo
dec
inc
cmpsb
mov
inc
fistpll
repnz
das
les
pop
mov
out
mov
lret
and
fcomip
loopne
sar
cmc
into
or
jl
mov
cmp
int3
aas
add
movsl
cmc
cltd
loop
loop
incb
orl
push
iret
and
scas
mov
mov
mov
cmp
pushl
xor
in
xor
jb
movnti
sub
sub
xchg
repnz
decl
divl
cmp
lret
mov
push
mov
lret
ljmp
lds
in
sub
add
jnp
mov
mov
jo
pop
jecxz
jb
jecxz
pop
nop
out
push
shlb
lods
inc
out
sbb
jecxz
loopne
lret
push
pushf
hlt
shl
das
jo
frstor
sub
lret
xchg
pop
int
std
sbbl
or
jg
faddp
lock
fisttpll
test
sti
push
and
jb
repz
cs
decl
xor
sub
and
ja
pop
lahf
sti
jp
push
fucomp
pop
and
jg
call
sbb
xchg
ljmp
shrl
adc
push
pop
jle
lock
lret
loope
incl
cld
jnp
mov
pop
xchg
lahf
xlat
sub
inc
sbb
movsb
mov
adc
push
inc
stc
lcall
adc
jp
mov
stos
sub
pop
pop
hlt
fsubrs
jb
add
incl
sti
push
mov
mov
rcrl
aam
lahf
add
call
cmovg
mov
out
mov
in
cli
js
mov
cmp
lahf
popf
or
dec
pop
lret
pop
sbb
push
sbb
stos
stc
es
mov
adc
dec
mov
xchg
lcall
jle
addb
mul
inc
scas
fistpl
dec
push
mov
dec
decl
adc
jb
test
shll
adc
shlb
xor
jb
in
ljmp
xlat
or
clc
outsb
sub
dec
iret
ds
mov
out
sbb
or
mov
mov
mov
lock
push
rorl
cli
push
add
mov
cltd
xor
or
sub
pushl
stos
sbb
adc
jae
out
xchg
cmp
clc
cld
test
push
movsl
sbb
jmp
pop
int3
cmc
ljmp
hlt
ljmp
insl
sub
cli
fisubl
call
loope
out
pusha
push
les
std
dec
mov
xor
bound
sub
cmp
out
cmpsl
js
sar
add
adc
loop
fdivrp
addb
and
lcall
mov
idivl
and
incl
lret
ja
aad
push
inc
hlt
add
jno
pop
dec
in
das
jnp
sub
cs
outsl
bound
xchg
push
in
push
out
dec
and
fcmovnbe
clc
cmp
dec
inc
mov
xchg
cwtl
call
lods
push
cld
pushl
insb
int3
ss
call
inc
leave
loopne
out
cmp
fsub
adc
lcall
jmp
push
aas
sub
jbe
mov
mov
push
add
es
jo
push
mov
jl
mov
cmpsb
ss
movsl
iret
cmpsl
mov
mov
cwtl
aas
mov
dec
loopne
push
test
jmp
popa
pop
push
inc
mov
loope
div
call
std
into
in
scas
sarl
in
mov
adc
inc
loope
cmp
lahf
dec
and
pop
fsub
cs
sbb
incl
stc
inc
clc
icebp
ljmp
dec
inc
inc
nop
mov
out
or
sbb
in
add
sub
sahf
xchg
xchg
xchg
icebp
mov
push
imul
jl
lahf
mov
inc
jge
push
ljmp
out
stos
aad
les
jbe
sar
fcmovnu
push
fnstcw
enter
jge
fidivl
inc
in
pop
insl
xchg
jg
sub
pushf
arpl
jnp
push
lods
dec
add
mov
inc
mov
stos
mov
mov
sbb
fs
mov
mov
inc
pushl
leave
repnz
bound
cmpsl
jg
std
or
in
test
out
mov
jmp
inc
stc
mov
mov
es
mov
sbb
fldl
fucom
or
sub
and
lock
xor
dec
decl
ljmp
fistl
mov
mov
into
std
xor
out
and
aad
es
idiv
call
and
cli
xorb
sbb
mov
push
in
ficompl
fcomp
sub
or
lcall
push
push
sar
rorb
fisttpl
push
pushl
lcall
pushf
dec
lret
inc
cmpsl
ret
insl
std
je
cld
mov
in
jle
sub
cmp
pop
adc
mov
sarb
sbb
ja
fidivrl
js
xchg
ja
push
xor
jg
push
mov
shrb
pop
sbb
mov
shlb
mov
out
shr
push
push
pop
cmpb
outsl
cwtl
in
and
incl
pop
clc
dec
in
outsb
std
push
scas
dec
or
xlat
cmc
push
mov
ljmp
pusha
shlb
popa
cmc
outsb
leave
fwait
stos
aam
xchg
sahf
jnp
aad
mov
cmp
ljmp
jo
iret
mov
lods
pop
insl
ja
push
add
dec
push
push
loop
or
idiv
lcall
push
cmp
mov
dec
rolb
push
aaa
mov
cmpsl
int3
aas
sahf
adc
sub
aad
call
clc
sub
fmull
and
cmpsb
sub
inc
gs
jp
add
jmp
lds
sbb
push
add
sbb
xchg
push
adc
shl
add
filds
dec
jnp
push
insl
subl
fstpl
cmc
scas
sahf
sbb
lods
fists
mov
decl
mov
ret
dec
jbe
imulb
mov
or
sar
fcmove
xor
insl
std
mov
fdivs
mov
and
cmc
xchg
fisttps
inc
lods
into
repnz
into
rcr
pop
repz
push
push
sub
clc
incl
jg
adc
aam
dec
dec
xchg
jne
sub
xchg
or
repz
adc
call
es
popf
jle
pushf
cmp
mov
fs
out
std
stc
pop
pop
cmpsl
sub
mov
sar
outsl
cli
inc
push
push
adc
xchg
inc
push
fdivl
pop
adc
xchg
and
sarb
xchg
fimull
std
push
pop
cld
repz
das
pushf
fsts
jg
cli
inc
stos
push
push
stos
int
sti
push
sahf
xchg
je
push
notb
outsb
mov
mov
ljmp
jl,pt
mov
inc
ss
mov
rclb
popa
mov
out
movsb
outsb
cmp
fisttpll
sub
ljmp
in
jnp
lret
movsb
sbb
out
push
mov
or
jecxz
sarb
shl
push
dec
xchg
cmp
sti
lods
js
cmp
dec
daa
sbb
jl
fisttps
stc
nop
sub
push
cltd
mov
notl
push
pop
jp
adc
dec
pop
notl
icebp
ficoms
mov
adc
sub
push
inc
aam
jmp
cmp
lcall
pop
es
ds
cwtl
outsl
test
push
in
insl
xchg
arpl
xchg
push
lock
ja
xor
dec
in
jecxz
fcomip
push
pop
xor
jo
push
pop
jnp
mov
aaa
fnstcw
mov
dec
dec
lcall
pop
es
fnstsw
jg
pop
test
pop
jmp
in
mov
je
iret
shrb
sbb
fucomp
jae
and
pop
lock
pop
das
mov
mov
shll
pop
adc
xchg
jecxz
mov
mov
jg
cmp
cmp
out
int3
sbb
push
rcr
ret
std
jne
jno
add
lcall
movsb
imul
shll
adc
cmp
testl
lock
int
mov
out
mov
leave
shll
and
xor
adc
lock
incl
rcrl
jp
call
pop
push
sub
push
shrb
mov
aas
outsb
cltd
mov
cmp
sahf
out
std
cmp
imull
mov
in
mov
fsubrl
in
sti
xchg
iret
outsb
xlat
das
cli
xchg
dec
push
pop
fsin
decl
out
lea
nop
xchg
insb
cld
lret
lea
test
imul
inc
cli
xor
mov
fdivp
jecxz
push
pushl
faddl
inc
out
clc
ljmp
mov
fisubs
pusha
iret
shl
sti
adc
loope
in
cli
pushl
adc
cmp
lds
xchg
fldenv
fistpll
mov
test
es
sar
ljmp
adc
addb
mov
test
push
lcall
pop
mov
jecxz
mov
aam
sub
mov
rorb
mov
lods
in
inc
pop
pop
nop
dec
sti
sub
loopne
cmp
inc
rcrb
mov
mov
push
shl
lock
xchg
lret
inc
xchg
cmpsb
pop
mov
cltd
nop
push
call
loop
cld
ja
fnsave
lds
xor
jae
test
mov
mov
cli
jmp
fadd
stc
jp
aaa
ss
dec
rcr
lods
push
fnstenv
add
out
imulb
into
adc
mov
and
mov
jno
nop
cmc
pushf
add
lcall
sub
cmp
jecxz
xchg
das
inc
jae
jmp
leave
jbe
fwait
imul
mov
sbb
outsb
mov
push
pop
add
jp
jge
lods
xchg
sub
mov
jecxz
cmp
xchg
dec
or
jmp
mov
loop
sub
das
adc
pop
pop
fildl
or
xchg
pop
leavew
ja
pop
jle
add
addr16
outsb
ffree
xor
dec
mov
jge
sti
std
arpl
int3
enter
push
lock
filds
mov
popf
and
xchg
mov
mov
scas
xchg
out
mov
fimuls
pop
scas
fildll
pop
movsb
dec
add
fmulp
dec
cli
xor
les
fxam
fwait
ret
lcall
daa
pop
loopne
lock
loop
push
fistpl
push
and
push
andb
lret
mov
cltd
sub
scas
inc
fs
pop
rcll
jp
imul
cmp
jle
sarl
dec
orl
movsb
sti
mov
scas
cmpsb
incl
pop
and
int
ret
add
mov
in
fiadds
push
jle
std
xchg
std
dec
std
pushl
int3
pop
add
decl
pop
out
in
test
cmp
call
cld
pushl
int
in
loop
aas
xor
pop
call
lock
jg
movsb
cmc
jmp
pop
pop
aam
fdivs
jecxz
aad
push
jl
and
xor
mov
int
ret
loope
data16
ja
mov
lahf
cmc
es
popf
sbb
push
sti
or
mov
dec
out
fwait
jmp
dec
int3
int
scas
xor
enter
cmc
fisubl
data16
fcomps
lcall
sbb
xchg
inc
pop
or
mov
in
pop
imul
mov
fsubl
decl
je
mov
fcmovu
cmp
mov
rorb
jbe
decl
xchg
pop
ljmp
gs
addl
push
fiadds
mov
es
sub
xchg
icebp
sbb
in
shlb
in
adcl
push
clc
aam
hlt
incl
adc
in
jmp
call
adc
jle
jp
mov
pop
je
inc
pinsrw
xchg
sbb
jo
popa
popa
daa
pop
mov
lret
repnz
jg
lods
cmpsl
ds
out
mov
lds
in
iret
mov
push
mov
shrl
cmp
sbbl
xchg
push
pushl
cmpsb
imul
sub
nop
mov
incl
sahf
stc
pop
paddw
call
sahf
mov
out
mov
mov
inc
lods
jbe
test
mov
jmp
mov
xlat
mov
sti
cmpsb
fidivrl
inc
stos
in
push
xor
sti
test
bound
pop
adc
call
adcl
mov
mov
xor
push
es
dec
js
pushl
jg
sub
mov
add
and
jecxz
mov
xor
mov
mov
pop
sbb
dec
lock
outsb
popf
out
sbb
mov
fbstp
jle
xchg
cli
decl
jle
dec
les
call
mov
and
cwtl
jl
inc
pushl
xchg
mov
sti
leave
scas
jbe
and
cmpl
repz
leave
add
mov
adc
test
mov
leave
data16
jp
addr16
inc
pop
pop
icebp
xchg
pop
lcall
pushf
push
lcall
add
daa
stos
movsl
pop
push
enter
sub
adc
jle
lock
jl
rol
daa
hlt
jmp
fwait
mov
add
pop
cmpsb
sar
fbld
cmp
mov
test
ss
aaa
loopne
cld
fucom
jg
dec
push
leave
push
ljmp
jae
jmp
pop
jae
push
fisttpll
add
dec
sti
mov
mov
mov
stos
sti
adc
stc
aad
out
cmpb
stos
imull
jae
into
and
xchg
daa
xchg
mov
jmp
inc
push
fdivr
incl
je
leave
xor
pop
mov
cmpsl
incl
js
stos
mov
sbb
dec
daa
sbb
push
jo
andb
incl
jbe
call
mov
inc
std
jmp
mov
jl
mov
jmp
incl
fisttps
loop
arpl
scas
mov
xchg
sbb
or
lret
mov
fs
shrl
mov
pop
and
mov
xchg
or
loop
mov
push
movl
mov
cmp
int
aas
fbstp
push
mov
sbb
and
and
jl
faddl
pop
scas
in
pop
outsb
out
jecxz
loopne
add
repz
sarb
scas
aas
les
sbb
jbe
out
loopne
pop
sub
mov
push
lahf
fistps
sahf
decl
dec
cmp
jge
lods
jecxz
fidivs
por
cmp
sub
mov
sahf
jae
add
jns
inc
movsb
mov
xchg
out
xchg
popw
pushl
mov
adc
cmp
fadd
ja
aad
jbe
dec
ds
lds
ret
rclb
pushl
aad
test
push
mov
ja
mov
cwtl
dec
mov
mov
loop
mov
push
mov
and
mov
roll
lea
fimull
pushl
out
test
lock
mov
fisubrs
notl
incl
sbb
repz
and
mov
outsl
and
xlat
xchg
cmpsl
insl
insb
aam
daa
ljmp
cmpsl
lret
pop
cld
mov
ljmp
call
dec
jb
addr16
xchg
and
sbb
out
sahf
in
mov
std
and
inc
insb
clc
out
icebp
mov
jmp
mov
imul
jbe
lods
dec
sarb
inc
sub
hlt
sar
xor
cmp
jl
xchg
mov
movsl
xchg
aaa
xchg
lods
mov
jmp
sub
dec
push
or
decl
in
and
rol
xchg
popa
cli
mov
out
push
xchg
add
ss
call
sub
out
mov
lahf
mov
in
and
testl
ds
mov
xchg
leave
test
pop
add
cmp
dec
decl
int
sbb
jae
test
and
or
dec
xor
pop
pop
and
imulb
stc
out
nop
ljmp
call
lcall
andl
push
in
push
or
or
inc
scas
jge
ret
mov
stos
dec
mov
mov
inc
add
add
adc
cmpsb
decl
adc
mov
add
in
dec
inc
dec
mov
mov
mov
xchg
scas
movsl
push
movsl
sbb
jle
fs
hlt
inc
dec
mov
jg
fucomp
in
popa
push
cld
iret
cmp
fildll
mov
push
in
idiv
xchg
xlat
int
sbb
mov
lods
cmc
ljmp
outsl
in
dec
fwait
and
push
and
test
fs
lcall
or
in
test
loope
jg
cmc
fisttps
adc
rcll
push
std
sbb
movsl
xchg
adcl
test
jmp
cwtl
jl
push
daa
jb
ds
dec
cld
ret
cmp
in
push
mov
das
xchg
stos
mov
pop
cltd
dec
lret
fwait
sar
int3
xchg
imul
xchg
add
cs
mov
adc
cld
mov
or
leave
aaa
aad
std
xchg
jo
pop
and
sbb
xchg
xchg
jecxz
inc
cmc
push
jmp
filds
fdivr
cmc
decb
imul
mov
out
xchg
jg
lock
jge
and
jl
jne
push
scas
push
call
es
xor
call
mov
stos
fucom
dec
mov
dec
loope
call
mov
push
ret
imul
cld
mov
testl
and
xor
fstps
loopne
fistps
fdivp
stos
add
sarl
clc
stc
pop
ljmp
dec
and
xchg
mov
div
out
jge
cli
sbb
shll
imul
adc
mov
sbb
cmp
div
or
mov
add
xor
subb
add
mov
jmp
insb
hlt
sahf
sbb
and
mov
sub
adc
sar
pushl
outsl
mov
cltd
sbb
mov
sti
push
jae
hlt
ljmp
mov
dec
cwtl
cmpb
xchg
pop
adc
fucomp
dec
mov
sbb
ror
jecxz
decl
popa
std
rcr
test
cld
jmp
lret
push
scas
sbb
pushl
push
fdivrs
pop
xor
stos
pop
fsubl
pop
icebp
cmc
jl
in
push
mov
mov
cmc
push
icebp
cld
sbb
pop
or
pop
mov
idiv
std
sub
out
sbb
xor
lahf
add
pop
fldt
jp
mov
push
in
add
fwait
mov
xchg
xchg
jmp
or
call
rolb
shl
stos
or
cmp
cmp
negl
std
xchg
es
push
movsb
lahf
rcll
xchg
insb
loop
call
mov
xor
stos
mov
mov
repnz
or
lcall
rcrl
test
cmp
dec
jg
movsb
pop
or
iret
test
or
ret
sar
hlt
adc
jmp
adc
mov
jecxz
call
lods
inc
fwait
popf
les
ret
mov
movsl
sub
nop
daa
das
xor
lock
jmp
xlat
inc
fcmovnu
int3
jg
stos
gs
sti
test
sub
dec
pop
cmp
repz
push
cli
popf
movsb
pop
in
outsb
push
pop
jno
or
mov
in
mov
repz
decl
adc
push
dec
aad
push
xchg
push
add
fildll
xchg
sub
ljmp
jecxz
movsb
movsb
jns
inc
jmp
push
pop
xor
jbe
inc
ds
movsb
enter
mov
jl
and
mov
popf
pusha
pop
subb
sti
fsts
pop
pop
cmp
or
inc
mov
jl
js
cld
int3
mov
or
push
jmp
mov
out
test
fisttps
call
decl
test
mov
lock
jmp
roll
jnp
std
pop
or
xchg
stc
xchg
jmp
dec
sub
push
arpl
inc
hlt
or
sbb
mov
push
adc
call
cld
call
mov
out
test
stos
cmpb
ljmp
dec
cs
lcall
inc
test
push
gs
cmp
iret
movsl
pushl
and
sub
sar
cmp
incb
mov
add
pushl
pop
or
into
adc
and
mov
cli
mov
fsubp
loope
lock
cmp
cmc
xor
lret
xchg
jne
inc
in
ds
pop
sahf
push
push
cld
call
xchg
shll
jmp
pushl
push
jmp
iret
and
add
sarb
jb
push
jg
incb
fwait
xchg
hlt
cwtl
or
push
xchg
jbe
inc
cmp
test
mov
or
cmc
pop
push
xchg
jbe
push
enter
arpl
clc
loopne
xchg
pop
insb
or
dec
test
pop
jmp
push
mov
loope
vmovntps
and
into
ljmp
inc
popf
or
mov
adc
push
sti
push
mov
mov
sbb
fxch
jl
xchg
pop
out
idivl
rclb
push
notl
clc
lret
mov
inc
and
dec
repz
int3
je
pop
outsl
movsb
test
das
xchg
movsb
pushl
xlat
loope
test
cmp
repnz
jmp
insb
jmp
cli
mov
repz
cmp
cmpsb
decl
dec
adc
jmp
sub
or
fnstenv
xor
negb
lcall
aad
and
mov
xchg
mov
scas
pushl
and
lahf
outsl
and
sbb
dec
js
hlt
lods
fstp
jle
cmp
adc
mov
jg
mov
cs
and
xor
frstpm(287
xor
push
lods
inc
mov
cmp
mov
jne
mov
push
pop
icebp
decl
fisttpl
jns
arpl
ret
jmp
insb
sti
cmovb
jmp
scas
addr16
fcmovb
ss
test
push
add
xor
and
add
cmp
lret
jmp
jno
jae
je
insl
and
xchg
loopne
std
lcall
lcall
mov
push
mov
int3
and
mov
les
dec
hlt
call
lods
or
fisttps
enter
mov
outsl
mov
and
jns
movzwl
jmp
mov
lods
sahf
mov
jl
ljmp
cmp
mov
pushf
das
loope
fwait
push
insb
pop
mov
ljmp
stos
and
ret
and
scas
pop
mov
fcomps
add
fbstp
dec
mov
or
push
in
inc
in
insb
mov
push
cmp
hlt
cmp
fstpt
fidivrl
hlt
sub
mov
mov
jecxz
sub
lcall
jl
inc
xor
mov
decl
mov
stos
lds
lret
aaa
mov
cmc
xchg
dec
dec
xorb
pop
jg
movsb
xor
ja
mov
fnstsw
jg
adc
mov
mov
inc
into
call
in
loop
lret
je
call
cld
not
in
inc
ret
movsl
fistl
repnz
iret
ficompl
fbld
jmp
or
into
lahf
or
std
insb
jae
pop
mov
sbb
lret
pusha
adc
fcompl
xorl
add
lods
mov
mov
jmp
lods
pop
jp
adc
in
add
scas
into
dec
and
pop
mov
sub
into
pop
sub
inc
sub
jmp
cmp
mov
test
mov
std
cmp
sbb
call
test
into
cmp
addr16
dec
sahf
push
mov
xchg
mov
xchg
cmpb
sub
loop
ss
cmp
inc
push
dec
dec
rclb
cmc
sti
hlt
jl
stc
icebp
adc
int3
ss
sub
mov
sti
xchg
loop
lods
loopne
mov
cld
add
fdivrs
imul
jns
xlat
filds
add
cmp
cmp
cmpsl
imul
cmp
jb
sub
cld
mov
scas
inc
adc
cld
lret
mov
xchg
call
add
or
mov
adc
ret
push
and
filds
mov
adc
ds
mov
pop
clc
test
lcall
es
and
scas
fwait
mov
rcr
sbb
inc
cmpsl
test
pushf
or
jmp
in
push
jns
xchg
lock
pop
jecxz
and
pop
cltd
and
pusha
js
dec
sahf
fdivr
push
outsb
sbb
mov
out
push
push
fsubp
je
jle
xchg
in
jecxz
lcall
mov
out
out
cmp
shrb
push
sar
lcall
dec
sub
push
rcrl
mov
pop
or
leave
xchg
xor
inc
pushf
lods
adc
repnz
aam
mov
jl
xor
bnd
push
call
outsl
jnp
inc
repz
mov
cmp
ljmp
dec
outsl
dec
fdivr
mov
mulb
lcall
jg
call
and
mov
std
pop
mov
out
adc
std
incl
fwait
lret
sbb
jecxz
pop
and
jae
movsl
jns
jg
loopne
cmp
xlat
pushl
cmp
mov
sti
pop
dec
and
movsb
icebp
add
dec
sahf
lret
pop
hlt
jg
repz
ret
cmp
out
xlat
and
movsb
in
mov
clc
pushf
sti
inc
pop
js
das
pushf
cmp
jbe
in
nop
jne
xchg
xor
dec
sti
adc
mov
movsl
aaa
push
std
ljmp
mov
clc
xor
jns
out
jae
cmp
clc
decl
dec
cmp
mov
ror
jecxz
stos
pushf
add
jge
lret
in
rcr
xor
jns
xor
loop
das
dec
ja
or
dec
lds
cmpsl
sbb
sbb
daa
and
xchg
lock
push
shlb
sti
int
clc
dec
insl
clc
subl
jne
imul
testl
stos
push
cmp
jne
and
ret
dec
loopne
repnz
jmp
rclb
lock
jns
jl
cs
inc
sbb
pop
sti
pop
std
jns
jmp
hlt
sarb
adc
ror
add
rcr
jl
int3
dec
cs
push
insl
ja
andl
clc
ljmp
pushf
sub
mov
jmp
inc
movsb
xchg
fbstp
in
mov
cs
or
jnp
inc
jp
jbe
mov
mov
mov
test
in
mov
cmpsl
add
sbb
xchg
rol
inc
dec
jl
sub
mulb
mov
std
mov
ljmp
popw
mov
cmp
add
mov
aas
lods
lods
scas
dec
dec
out
jne
cmp
rclb
push
mov
repnz
fnstsw
dec
les
mov
lret
mov
mov
mov
test
dec
mov
mov
sbb
xchg
inc
cld
add
lea
inc
cmp
or
test
incl
inc
lahf
lret
fcompl
jmp
test
lahf
lcall
jno
mov
or
incl
add
std
or
imul
vmovq
pop
out
fadd
jp
dec
jnp
test
adc
sbb
out
aad
jns
leave
in
mov
sub
cmc
fnstcw
sti
mov
fcmove
or
out
faddp
into
jnp
ret
mov
ss
call
movsl
push
std
andb
incb
add
push
cmpsl
out
scas
rorl
out
or
add
dec
mov
mov
int
pop
dec
ficoml
sub
sub
mov
dec
inc
push
jmp
mov
xchg
outsl
test
aam
push
cmp
mov
mov
out
ljmp
das
push
mov
outsb
rolb
lods
add
jns
call
sbb
out
std
mov
out
ja
int3
pop
jmp
mov
fbstp
inc
fldenv
xchg
aaa
cli
std
fidivs
ds
pop
enter
and
cmp
mull
xchg
xor
das
ror
sbb
sub
fbstp
shl
shrb
into
mov
outsl
xchg
mov
decl
test
adc
dec
hlt
pop
cwtl
cld
mov
sbb
pop
cmpsl
aad
hlt
xchg
sbb
jmp
sub
or
aam
cmp
jns
cmp
in
jg
out
stos
pop
leave
dec
pop
fstpt
dec
enter
or
mov
inc
cmc
jg
cmp
leave
lock
mov
stc
mov
lret
mov
fsubp
je
mov
out
mov
push
cmp
fwait
stc
xchg
cwtl
orb
into
scas
test
fisttpll
jg
aaa
lret
sub
addr16
lds
popf
mov
jg
jbe
in
adc
push
stos
stc
xchg
cmc
leave
into
outsl
hlt
out
fs
pushl
pop
add
pushl
mov
xchg
aam
cmp
adc
les
incl
lock
cmp
shrb
jo
repnz
mov
lcall
call
pop
pop
dec
push
xor
repnz
sbb
jne
in
xor
das
roll
lcall
nop
push
and
pushf
xor
subb
mov
in
cltd
in
mov
mov
es
fcos
mov
cmpsb
orb
cmpsb
lock
mov
cwtl
xchg
ds
mov
inc
mov
hlt
sub
pushf
outsl
ss
repz
iret
jle
push
mov
into
sbb
notl
fstpt
fisubs
in
sbb
and
sbb
les
cld
sub
into
lcall
adc
and
in
in
cmpsl
out
repz
xchg
gs
xchg
push
mov
call
or
popf
lahf
scas
out
icebp
lahf
mov
out
imul
cld
call
stos
mov
mov
mov
jns
shl
sahf
jae
iret
jb
adc
jb
loop
pop
lcall
incb
ss
sbb
std
cmp
jno
repnz
jmp
push
popa
fldl
mov
sub
test
jmp
mov
pushl
sub
movl
mov
dec
adcb
jg
sub
lock
cmc
push
call
movsl
and
mov
aam
adc
stc
int3
dec
sub
ret
sbb
call
and
mov
push
push
inc
mov
sub
pop
das
pop
jnp
pop
inc
mov
pop
incl
cmpsl
nop
adc
insb
pop
mov
inc
jmp
jle
pop
mov
cmp
pop
jg
mov
int3
rorl
mov
out
in
cmpsl
jb
push
sub
incl
mov
mov
dec
sti
xchg
or
xlat
andb
pop
loopne
lcall
decl
sub
jns
dec
cld
ret
mov
lods
mov
incl
add
inc
adc
jp
push
push
adc
adc
movsl
imul
mov
daa
frstor
push
dec
lret
add
iret
fstps
dec
inc
fwait
scas
fcomip
decl
cmp
sub
movsl
mov
int
jae
push
cmp
outsb
lods
lcall
daa
inc
add
scas
cld
in
push
sahf
mov
sar
and
jg
into
test
ja
fpatan
or
push
jl
add
lret
pop
jp
or
lcall
add
addr16
fldenv
stos
nop
data16
insb
jle
fcoms
dec
cmpsl
fcompl
pop
je
push
cmp
out
xchg
ret
or
dec
stc
push
fistl
daa
cmp
mov
adcb
daa
mov
imul
jmp
hlt
or
std
push
scas
movb
cmp
cvtps2pi
sar
mov
xor
jmp
ljmp
dec
jno
sbb
gs
sbb
cmp
cli
leave
adcb
mov
cmp
mov
outsl
ljmp
cli
fmul
enter
sub
call
pop
mov
aas
lock
ror
pop
and
ljmp
arpl
add
inc
ja
call
pop
outsb
into
clc
subl
scas
lods
aam
std
lret
in
lret
leave
jno
jae
adc
mov
sub
into
pi2fw
pop
les
icebp
call
movsb
fistpll
pushf
xchg
mov
push
xchg
sar
mov
adc
sbb
xlat
jle
inc
sub
add
sub
cli
pop
cld
ljmp
enter
stc
adc
scas
enter
jp
push
mov
popf
sbb
inc
add
jmp
mov
sbb
popf
test
jl
pushl
cld
je
ds
jmp
inc
cmp
and
imulb
lret
or
mov
or
add
mull
jne
sub
mov
gs
jbe
aad
ds
and
je
pop
aaa
sbb
xchg
out
test
es
out
mov
ret
mov
push
pop
mov
inc
imul
not
jnp
and
out
clc
aaa
cld
jmp
mov
mov
xchg
lods
xor
jge
sbb
mov
jmp
xlat
adc
repnz
jno
insl
lods
lcall
add
xor
jns
sahf
fistpll
jb
fs
fwait
loop
rclb
pop
stc
inc
pop
mov
mov
mov
cld
ror
or
stos
jno
fisubrs
lret
pop
call
or
xchg
sub
out
dec
lods
push
pop
xchg
ss
call
xor
cmpsl
jp
addr16
jbe
mov
out
mov
jp
adc
lcall
push
xor
iret
cmpsl
ss
and
ud0
outsb
sar
incl
fdivl
shl
fnstsw
paddusw
mov
in
out
clc
pop
leave
cmp
aaa
xor
notb
dec
fistpll
mov
rcll
out
lds
hlt
mov
idivb
icebp
int3
push
out
stc
jne
xchg
icebp
decl
mov
jecxz
inc
xor
mov
cmp
push
sarb
pushl
std
ljmp
dec
pop
mov
jg
inc
fldcw
mov
cs
lock
rcl
das
ss
rcr
push
jle
ljmp
aaa
inc
pop
jne
loop
lds
mov
push
add
push
filds
cwtl
mov
out
int
addr16
mov
jmp
movsl
pop
loope
push
cwtl
inc
mov
mov
cmp
xchg
or
out
les
fbstp
cltd
fmull
decl
mov
out
cmp
pop
pop
mov
ret
fadd
in
xlat
ljmp
xchg
pop
cmp
jno
mov
rcr
and
rorb
push
pop
out
jo
jnp
mov
push
xchg
out
in
arpl
loopne
inc
xchg
call
and
popf
jg
test
cmp
adcl
stc
push
xchg
fldcw
je
call
xchg
jnp
mov
push
dec
sub
push
aam
adc
pusha
cltd
and
push
jecxz
pop
cmp
jg
cmc
cwtl
stc
and
lret
sti
fildl
add
repz
scas
lods
mov
andl
cs
lcall
arpl
imul
mov
lcall
sbb
shl
andb
repz
out
jecxz
das
pop
pop
adc
loop
mov
xchg
stc
aaa
or
faddl
xchg
pop
cs
mov
in
jae
std
jmp
sub
jmp
or
xchg
dec
mov
sbb
xor
jbe
repnz
call
pushl
fdivrp
cwtl
popf
or
mov
cmpsl
imul
shrb
sub
mov
mov
mov
mov
xlat
adc
pop
or
cld
ja
cld
outsl
lods
xchg
jg
fisubs
das
fidivrl
ljmp
cli
fwait
cmp
leave
ljmp
test
mov
imul
gs
jp
jg
and
mov
jle
fstl
mov
lret
xchg
mov
push
out
sarl
inc
test
fidivs
hlt
add
xchg
adc
fs
jg
adc
lds
fcomip
pop
aas
cwtl
push
and
cld
ljmp
jecxz
test
arpl
dec
sub
test
cmc
sbb
pop
cli
xchg
stos
out
cmp
fldenv
cwtl
clc
jmp
jnp
jge
outsb
cmpsl
je
cmp
and
incl
push
aam
idivl
pop
lret
leave
aam
mov
mov
dec
push
sar
jmp
arpl
push
std
jbe
ljmp
mov
out
inc
mov
in
sti
pop
ret
shlb
neg
mov
jl
cmp
addl
dec
mov
cmp
stos
mov
std
ret
jns
add
mov
mov
pop
lret
mov
test
mov
aas
mov
mov
mov
das
mov
es
mov
adc
arpl
cmp
clc
cmpsb
jmp
cmpsl
popf
lcall
mull
sbb
fnstcw
fnstsw
clc
decl
cmpsb
mov
lret
inc
leave
or
decl
popa
jmp
std
testl
lcall
and
lret
cmp
fidivl
fimuls
cli
lods
aas
dec
repnz
ljmp
cmp
mov
pop
add
pop
pushf
sti
sbb
pushl
clc
das
pop
mov
cmp
cmp
dec
sarl
push
dec
out
stos
mov
jmp
loopne
xor
mov
pop
repnz
stc
enter
dec
jge
mov
or
dec
mov
insl
xchg
imul
icebp
movsb
or
mov
pusha
or
dec
ss
call
and
hlt
int
out
jne
pop
out
test
call
jmp
mov
iret
inc
hlt
mov
aam
data16
adc
mov
decl
lock
aam
lods
push
jle
scas
fdivr
in
jnp
inc
mov
idiv
mov
idivl
in
out
jnp
shlb
sbb
fsubl
xchg
mov
ftst
mov
fdivrp
fistpll
jp
adc
stc
push
xchg
shll
rolb
fnclex
rcll
rol
ja
lods
sub
push
mov
mov
jecxz
or
bnd
mov
pop
out
cmpsb
das
jo
ds
aas
xor
mov
sbb
repz
ljmp
repnz
pushf
sub
ja
fsubs
xorl
cmpsl
outsl
pop
inc
mov
pop
aaa
inc
sbb
mov
sub
jnp
inc
dec
ja
xchg
jmp
cltd
std
add
pop
inc
mov
repnz
aas
sub
add
mov
stc
sub
pusha
mov
mov
decl
mov
dec
xor
cmc
insb
xchg
mov
repnz
rorl
mov
fs
sbb
dec
cmp
in
sahf
stc
adc
stc
add
xor
jmp
insb
mov
fisttps
aam
lcall
fwait
push
bound
test
lcall
popa
iret
jl
notl
or
lods
mov
incb
je
mov
jge
icebp
lcall
cld
and
scas
mov
mov
rorb
push
cmp
loop
push
xor
jle
pop
cmc
das
in
jg
lahf
outsl
enter
cs
pop
outsl
clc
fld
inc
sahf
fistps
data16
in
jo
and
aam
cli
inc
call
add
test
imull
xor
fisttps
fcomip
pop
pop
fisttpl
mov
ljmp
int3
repz
out
insb
jnp
jmp
incl
test
movsb
aas
mov
xor
test
inc
sbbb
jbe
mov
add
mov
inc
add
lret
fcos
incl
cld
repz
adc
imul
ret
mov
jge
movsb
loop
lcall
cmp
push
addr16
insb
sbb
inc
jmp
pop
jo
out
es
xchg
scas
ljmp
insb
push
outsb
add
call
das
inc
cld
iret
sar
adc
outsb
sbb
fbld
out
insl
mov
iret
mov
sti
xor
mov
loope
incl
loopne
and
dec
mov
dec
js
iret
pop
push
sub
and
and
ljmp
les
cmpsb
test
out
insl
hlt
inc
imul
mov
iret
iret
fisttps
dec
fs
mov
and
sarl
jle
fldz
shlb
pop
das
inc
leave
or
call
cs
jg
mov
jo
and
fcmovnb
sub
daa
sub
jle
inc
push
xchg
int
lret
cltd
leave
ljmp
rcrb
into
rolb
push
lea
rorb
call
call
jae
lds
scas
dec
and
jae
and
pop
pop
pushf
test
daa
or
pop
sub
mov
jg
xor
arpl
mov
fnstsw
out
jg
enter
mov
mov
hlt
and
cld
call
xchg
data16
adc
shl
sub
aaa
dec
jg
fprem
test
pop
je
out
push
je
movsb
icebp
call
mov
sub
gs
push
xchg
jmp
jnp
divl
repz
mov
fs
mov
decl
lods
push
mov
scas
xor
cmp
xchg
push
out
ja
dec
cli
pushl
mov
gs
js
test
adc
sbb
pop
jg
pop
shll
decl
adc
or
xchg
mov
imul
cmp
push
test
ljmp
fsubl
shlb
or
push
imul
cld
add
std
sbb
adc
cmp
add
subl
or
mov
inc
shll
cli
mov
add
les
aas
adc
xor
inc
shlb
rorl
lods
repnz
ljmp
ficoml
test
mov
mov
testb
sbb
fidivrl
jge
leave
adc
clc
pop
xlat
out
int3
addb
iret
ss
test
bound
pop
dec
adc
aaa
rorb
shlb
mov
in
clc
pop
add
add
negl
cmp
pushl
sbb
sbb
pop
aam
adc
stc
es
std
cmc
in
pop
inc
arpl
js
lock
mov
xor
mov
fs
jne
imul
ljmp
sbb
jg
cli
ja
setp
pop
fldt
enter
int
int3
out
incl
jmp
push
adc
in
hlt
xchg
xlat
pop
inc
out
dec
dec
sti
shll
sbb
xchg
hlt
stos
mov
imul
sarl
cmp
dec
mov
test
mov
inc
xor
mov
fsubrl
les
xchg
adc
call
insb
je
dec
rcrb
xchg
out
lahf
punpcklwd
pop
out
test
fistps
lcall
inc
int
mov
mov
movsb
sub
jb
mov
icebp
ljmp
and
xchg
push
inc
lahf
out
test
dec
mov
call
dec
mov
mov
lock
and
pop
decl
pop
nop
jbe
repnz
mov
ljmp
dec
scas
lcall
call
loop
jp
sarl
mov
out
test
decb
mov
mov
iret
movsb
sub
inc
fwait
inc
sbb
jb
mov
cli
incl
push
pop
or
lea
std
rcr
aad
mov
jmp
aaa
push
inc
cmp
jle
mov
sub
jbe
sar
jmp
fsubl
nop
sti
push
jno
jg
flds
dec
ret
outsl
jg
nop
test
imul
mov
nop
imul
in
inc
sbb
das
jl
pop
rorb
push
cmpsl
sub
outsl
mov
adc
sarl
shrl
fnstenv
test
stos
andb
shll
mov
sarl
fwait
pop
push
jmp
pop
jp
ljmp
or
andb
clc
jle
aam
mov
sbb
mov
jl
jne
add
stos
into
jmp
pop
sbb
iret
mov
cmc
clc
adc
sti
pop
cmpsb
or
scas
insb
mov
repz
sarb
jg
cld
cld
cltd
sbb
dec
cmpsl
inc
push
xor
dec
dec
out
push
int3
cmp
lcall
push
in
dec
pop
stos
adc
je
pop
lret
popl
mov
aad
pop
jo
lcall
add
lret
add
pop
push
rcrl
decl
lock
mov
mov
jge
repnz
repz
push
pop
xor
outsl
enter
pop
js
lea
lods
hlt
push
icebp
jg
jle
pop
scas
fwait
jbe
pop
xor
loopne
lcall
call
pop
mov
icebp
in
push
jmp
pop
push
test
pop
fisubrl
call
push
dec
incb
cmp
scas
movsl
cmp
xor
cmp
mov
push
pop
inc
icebp
cmc
imul
cmpsl
rcrl
ja
psrlw
cmp
jg
mov
lds
ret
in
pushf
gs
loop
sub
cmovne
cwtl
inc
ljmp
dec
xor
loop
arpl
cld
xchg
mov
pop
sti
loope
nop
out
fnstenv
pop
out
and
clc
ljmp
adc
add
sbb
fdivr
mov
js
shll
nop
movq
imul
daa
test
daa
jae
push
xchg
cmp
incl
imul
scas
lock
push
lret
ljmp
inc
sbb
stc
mov
std
pushl
jp
jg
rcrb
mov
shrb
sub
fildll
mov
jp
dec
pushl
sbbl
out
and
ja
sub
loope
push
outsb
aaa
inc
mov
adc
test
test
call
std
sbb
inc
xchg
push
fldl
call
pop
cwtl
add
cld
sti
adc
pmaddwd
push
add
in
cmp
xchg
xchg
jge
cld
dec
arpl
mov
dec
inc
dec
push
mov
or
lret
nop
sbb
setg
dec
fldt
cmpsb
cld
sub
std
mov
bound
and
jns
lahf
sarb
add
jl
add
in
dec
xchg
jg
jo
cs
jle
faddp
inc
outsl
sbb
xchg
xchg
and
pop
loop
xchg
aas
adc
ljmp
xchg
decl
jmp
xchg
les
in
mov
rcll
sbb
ret
mov
pusha
hlt
mov
std
lock
cs
lea
or
push
dec
mov
mov
pushl
push
stc
pop
xlat
adc
jle
sbb
icebp
mov
iret
cmp
decl
push
stc
adc
lcall
daa
out
lock
fcomip
pushl
outsl
mov
dec
xor
std
sahf
dec
sbb
fidivrs
pushl
aaa
mov
repz
cmp
bound
or
mov
pushl
cld
decl
insb
jecxz
rolb
repnz
push
gs
mov
shl
rcrb
out
in
les
dec
out
xor
imul
add
test
loope
inc
dec
xor
push
insb
stos
adc
sbb
adc
aas
xchg
aad
fsub
out
repz
sti
and
xchg
push
xchg
xchg
popf
scas
shrl
or
fdivr
mov
pop
inc
into
push
sub
mov
push
mov
in
dec
mov
sar
cmp
add
jecxz
stc
xor
shlb
enter
or
popf
jno
in
aas
push
fldt
out
push
es
dec
iret
adcl
xlat
and
mov
call
fsubrp
in
sbb
in
lea
dec
pop
add
fwait
push
inc
out
and
mov
dec
and
jmp
call
xchg
push
and
xor
pop
icebp
and
xor
out
jmp
xor
cmp
ret
rorl
lds
fldt
add
mov
ljmp
in
loope
out
xchg
sub
or
xchg
mov
jne
pop
jle
pop
test
push
jmp
or
dec
aas
add
data16
repnz
mov
fstl
xor
out
sti
icebp
dec
out
jae
fistps
jmp
sarl
dec
dec
push
daa
xchg
loope
daa
jno
pushf
cmpb
inc
ljmp
push
jp
ss
outsl
jecxz
ret
jnp
jl
mov
in
add
cmp
filds
sbb
mov
mov
call
mov
leave
fidivl
inc
mov
pop
lods
enter
scas
fdiv
mov
jl
fcmovb
jno
lock
sbb
sbb
iret
sub
mov
loopne
nop
add
dec
lret
shr
xchg
push
js
incl
cld
pop
stc
shr
int3
cli
fwait
sarb
je
leave
add
sub
cld
lods
fbld
in
loope
add
pop
insl
fsubr
das
fisttpl
mov
outsl
mov
jmp
addr16
xor
xor
cmp
js
mov
cli
mov
jmp
push
scas
js
push
ljmp
push
mov
mov
dec
xor
aaa
mov
stc
fldl
dec
in
push
pop
ret
dec
dec
cmp
rorl
xchg
das
mov
cmc
adcl
mov
fnstsw
call
mov
jmp
xchg
jl
xchg
mov
ja
mov
cmp
shr
xchg
cmpsb
pop
popa
call
movsl
ss
mull
and
lock
pushl
aad
lea
dec
movsb
and
mov
sub
dec
or
das
adc
jmp
pop
scas
pusha
jg
dec
pop
and
push
dec
cmp
mov
test
repnz
mov
clc
sbb
lock
push
mov
and
es
fwait
lea
pop
out
cmp
cmp
std
in
xchg
dec
cwtl
xor
xor
xor
and
cld
cmp
notb
cmp
icebp
mov
in
sar
ljmp
outsb
ret
jnp
xchg
mov
movsl
addr16
jecxz
cmpsb
push
jge
jmp
inc
add
push
lahf
sti
callw
and
ficoms
xchg
call
shl
aaa
ljmp
das
sahf
jb
das
mov
jge
add
je
scas
les
sar
lods
outsl
loop
call
mov
pop
or
inc
cld
ljmp
jnp
and
inc
out
mov
xchg
xlat
pushf
pushf
xchg
pop
and
inc
fwait
outsl
clc
jg
clc
shll
mov
mov
or
jnp
mov
imul
sbb
add
pop
adc
andl
repnz
lea
popa
fwait
inc
rcr
cli
outsb
rcr
sub
xorb
xchg
inc
movsl
adc
add
fcomip
sub
inc
lahf
xor
aas
rorl
mov
push
mov
div
je
pushl
mov
fnstcw
xchg
cmpsb
pop
cmp
sbb
repz
pop
and
jmp
test
mov
jp
fwait
ds
nop
enter
insb
loop
arpl
xchg
sbb
sub
daa
add
rorb
out
popf
imul
jb
sbb
mov
aas
adc
scas
mov
das
cs
loopne
lret
and
and
and
and
aas
ds
mov
xor
xor
sub
dec
dec
dec
push
addb
inc
inc
inc
scas
mov
pop
pop
pop
pop
pop
jp
nop
push
push
push
push
jg
push
push
push
push
movq
insb
imul
push
push
sub
pop
cwtl
ret
int3
out
cld
int
or
fists
push
rolb
lahf
das
lods
or
out
imul
mov
clc
add
mov
sti
dec
add
pop
ss
jmp
fsubrs
mulb
mov
adc
out
fnstenv
mov
jnp
pop
bound
test
out
sub
out
incl
adc
sub
daa
pop
movsl
mov
adc
shr
icebp
jbe
pop
sbb
fstpt
dec
cmp
cmpsb
jmp
mov
xor
sub
xor
fisubs
dec
call
push
not
push
repz
js
xchg
ret
mov
inc
shr
daa
jmp
dec
add
mov
out
les
jmp
lea
insb
push
into
jo
fcmovnu
fprem
inc
ds
fcmovbe
xlat
aaa
xchg
sbb
rcl
daa
rcl
iret
dec
dec
add
std
std
sbb
pop
add
or
pop
fstps
ja
ret
mov
mov
sub
sbb
mov
add
dec
push
aas
mov
adc
xchg
sub
xorb
daa
stos
stos
dec
ret
xchg
sbb
cmpsb
movsl
test
fld
or
outsb
aas
fwait
lcall
pop
lcall
nop
ljmp
or
mov
jmp
repz
push
mov
repnz
xchg
enter
das
out
jmp
mov
jmp
call
mov
xchg
xchg
pop
loopne
cli
jmp
jae
ljmp
push
sbb
cltd
sbb
and
fwait
loope
xchg
int3
sbb
clc
incl
lock
sub
cltd
vmread
in
mov
mov
mov
inc
mov
mov
fmuls
shlb
jg
mov
mov
xchg
loopne
insb
mov
xchg
shlb
clc
fcomip
in
cmp
popa
in
inc
fadds
pop
and
int3
mov
mov
and
cmp
mov
lahf
call
jmp
and
mov
cmp
adc
mov
outsl
mov
inc
mov
sarb
ljmp
fdivl
sahf
rclb
out
cmp
icebp
sbb
mov
push
leave
mov
stos
lds
idivb
mov
ljmp
or
fldenv
sub
sbb
imul
dec
decl
decl
jecxz
fnstsw
mov
ret
clc
fsubrs
loope
test
loop
pushl
dec
test
ret
jne
xchg
xchg
addb
fwait
lock
ljmp
loop
dec
and
scas
test
mov
call
and
incl
push
mov
jmp
arpl
jns
lods
ret
pop
push
lea
enter
push
ds
and
mov
cld
outsl
jmp
xchg
in
call
ja
movsl
lods
shll
stos
shrb
incl
jb
jne
imul
arpl
fdiv
ljmp
rcr
or
mov
and
xor
cltd
mov
stos
shrb
push
push
das
xchg
inc
mov
cmpsl
fisttpll
pop
mov
cli
test
xchg
or
in
imul
movsb
dec
or
lahf
loopne
imul
imul
pop
shrl
xor
mov
inc
add
push
std
xchg
jne
call
cmovp
ljmp
pusha
push
fcmovnu
pop
stos
mov
lret
inc
cmc
icebp
cltd
xchg
cwtl
push
xchg
in
jnp
xchg
fbstp
scas
cli
jmp
mov
mov
jecxz
fbld
mov
pop
mov
mull
sar
incl
add
xor
or
jl
push
adc
and
mov
cld
sti
xchg
in
pop
jnp
outsl
loop
aad
aas
in
rcrb
mov
clc
int
push
adc
mov
outsb
fildll
scas
pop
jp
out
aas
testb
test
ljmp
pop
in
push
sub
cld
jge
push
movsl
pop
je
repz
cmp
mov
test
mov
mov
jae
aas
mov
enter
jecxz
in
sub
mov
or
cmp
mov
xchg
mov
notl
lret
inc
and
aad
pop
lds
call
ja
test
cmp
jg
lea
repnz
jmp
mov
out
inc
cltd
or
inc
adc
out
clc
jp
sbb
jns
sub
jg
pop
mov
mov
dec
and
mov
in
loopne
cld
js
pop
in
or
mov
stc
dec
mov
sarl
icebp
call
loop
orl
mov
rcrb
adc
dec
in
sub
jge
outsl
jg
call
jo
mov
cmp
fldl
sub
icebp
lcall
fcomps
xor
test
mov
pushl
sub
lock
xchg
dec
dec
dec
movsl
out
out
negl
sbb
daa
push
shll
fcomip
ljmp
xor
mov
out
add
fildll
rcrb
mov
mov
dec
out
jle
add
out
push
xchg
add
lcall
btl
inc
negl
rol
jmp
jmp
add
lcall
jg
fnstenv
out
fisubl
sub
aam
in
std
mov
xor
push
out
es
es
scas
adc
push
lods
call
dec
push
loop
jns
jge
mov
insl
gs
idiv
cmova
mov
pushl
mov
shl
repnz
and
aas
stc
dec
adc
and
movsb
scas
inc
stos
ljmp
dec
sub
dec
mov
imul
pop
fisubrl
or
cmc
push
dec
fstpl
mov
out
ret
mov
addr16
mov
int3
fidivs
pushl
mov
loopne
sub
out
pop
add
js
fwait
mov
call
jecxz,pt
dec
sbb
adcl
inc
mov
shlb
int
jnp
nop
clc
jg
rorl
and
test
and
and
in
faddl
decl
or
and
adcb
jbe
inc
cld
daa
je
push
inc
xor
adc
mov
and
std
pop
jae
add
jmp
cli
push
inc
xor
mov
ret
pop
pop
hlt
loop
add
notl
daa
hlt
push
rcl
lods
pop
add
inc
mov
daa
fiadds
mov
lcall
incl
push
xor
inc
out
hlt
add
mov
xchg
outsl
addr16
mov
xchg
mov
in
sahf
adc
movb
outsl
out
cli
mov
data16
inc
cmp
cmp
bound
fs
cld
pushl
push
jne
hlt
lcall
idiv
jg
fwait
inc
xchg
pop
inc
lahf
repnz
in
dec
pop
pop
jne
lret
sbb
leave
lahf
xlat
jecxz
cmp
sti
inc
in
repz
jge
lahf
add
call
in
sub
lcall
incl
dec
and
scas
fmul
out
push
outsl
xor
das
mov
xlat
mov
loop
call
stos
mov
fcomip
mov
sbb
mov
call
sbb
cld
mov
ret
or
or
decl
rcr
cmpsl
fildll
fildll
shll
fiadds
dec
push
jb
pop
hlt
call
mov
pop
inc
inc
aad
pop
xchg
das
mov
insb
call
cli
mov
in
sub
scas
jmp
bnd
sub
inc
fdivr
jae
in
jp
sub
cmp
adc
decl
call
dec
add
cld
pop
loope
push
dec
cmpsb
es
xlat
sub
punpckhwd
icebp
cmpsb
call
stc
ljmp
outsb
shl
ljmp
fs
mov
dec
mov
mov
stc
outsl
adc
or
decl
stc
sti
sbb
aas
pop
sbb
add
dec
adc
fildll
lret
adc
popf
dec
add
inc
pusha
or
fcmovnb
mov
scas
adc
pushl
lret
and
test
stc
arpl
sbb
cwtl
cmp
cli
push
cmp
inc
les
out
sbbl
cld
fwait
ljmp
cmpsb
sbb
fcomps
jp
es
scas
sbb
sub
ja
pop
jmp
pop
fildl
insb
sbb
jmp
cmp
inc
lcall
xor
ds
xlat
out
pop
mov
sub
cmp
and
cltd
negl
mov
pushl
jb
jge
sub
xor
dec
cli
clc
in
or
or
or
pslld
clc
in
stc
in
aas
scas
inc
dec
jmp
and
sahf
cli
mov
sahf
or
idivl
repz
lahf
out
out
scas
lods
pop
xchg
std
cmp
add
aaa
dec
lret
xor
loope
out
adc
mov
mov
loopne
call
cltd
lds
adcb
pop
movsb
jmp
das
add
mov
cmp
rcr
jge
sar
call
or
wbinvd
div
das
nop
sub
test
loop
jmp
and
int3
pop
cmpsl
mov
rcrl
jl
pushf
out
mov
mov
adc
lcall
xchg
dec
or
ret
into
mov
dec
jl
call
xchg
mov
mull
push
xchg
jmp
jb
std
das
repz
xchg
repz
xor
out
mov
sbb
popa
std
stc
cld
or
pushf
dec
sbb
pop
adc
or
outsl
jmp
adc
stos
repz
pop
fnstcw
jl
repz
je
jne
pop
adc
cmc
les
jns
nop
jmp
out
fisubrs
adc
popf
sbb
and
adc
lcall
add
rcr
insb
sbb
xchg
jle
dec
inc
push
dec
repz
dec
cmc
out
lods
aaa
gs
aaa
add
ljmp
flds
daa
dec
push
sbb
out
xor
push
push
aam
xchg
cmp
jmp
aam
pop
mov
sub
sub
loopne
flds
test
js
mov
fisttpll
or
push
xchg
mov
add
dec
xchg
cli
add
or
aad
out
out
cld
sbbl
jns
sar
outsl
pop
shrb
fdivs
in
push
loop
dec
fnstsw
mov
add
daa
jp
fsubrl
xchg
sub
jmp
das
sti
aad
movsb
loop
subb
lcall
scas
sbb
cld
fidivrs
inc
fbld
dec
leave
mov
inc
xchg
pop
out
out
jge
decl
dec
fidivs
icebp
fwait
mov
jb
inc
bound
jle
xchg
sahf
jp
mov
out
clc
incl
ficoml
lret
inc
cmp
push
divl
dec
sub
xchg
and
xchg
sbb
mov
iret
or
mov
test
lahf
push
addr16
hlt
mov
jg
icebp
sti
leave
fnstenv
fidivs
mov
jae
adc
xchg
mov
pop
jae
negb
dec
cld
fistps
test
cwtl
mov
mov
addr16
xlat
ss
dec
dec
lcall
adc
xchg
jae
stos
mov
mov
ds
movsl
adc
inc
pop
lcall
movb
pop
adc
adc
nop
divl
out
std
ror
sti
pushf
out
popf
std
adc
ss
pop
lods
jae
or
dec
or
lods
jge
push
adc
jnp
shl
mov
mov
push
ljmp
and
int
lret
ljmp
sub
lea
movb
cmpsb
adc
lahf
pop
jmp
in
fsubrl
shl
decl
mov
xchg
je
and
jno
mov
pusha
inc
lahf
aaa
pop
out
test
jle
sub
adc
sub
in
repz
loopne
sub
sub
push
jne
out
mov
std
pop
or
mov
push
out
roll
popa
shll
mov
fmul
jl
dec
adc
mov
loopne
lahf
hlt
push
lock
and
dec
sar
fsubl
nop
or
pop
sub
sub
iret
loope
push
incl
and
fdivr
into
push
xchg
mov
push
shrb
iret
bound
pop
insl
loopne
stc
mov
into
sbb
repz
das
mov
sarb
enter
or
pop
xchg
pop
mov
fwait
ljmp
ja
ret
adc
imul
inc
shrd
adc
mov
into
stc
int
jo
and
mov
jp
repz
scas
jne
icebp
push
mov
jg
xchg
mov
scas
pop
mov
sub
sub
icebp
clc
insb
and
movsb
push
pop
adc
in
mov
sbb
icebp
fisubrs
sbb
fbstp
adc
dec
jbe
pop
sbb
adc
inc
jo
insl
pop
loop
lock
icebp
data16
ja
insl
add
add
mov
ja
inc
adc
fs
jle
fistpll
pop
mov
xchg
mov
sub
hlt
les
adc
lcall
pop
sub
mov
lret
pop
dec
ss
mull
sub
int
lock
aas
cmp
sub
dec
mov
movsb
cmp
cmp
rolb
aad
fcomip
pushl
pop
jo
dec
jl
rolb
dec
adc
into
mov
adc
dec
pushl
lcall
mov
test
xchg
sub
pop
pop
add
jp
mov
decb
stos
lret
xlat
dec
and
mov
push
cmp
sub
cmp
push
adc
call
jmp
pop
lcall
mov
scas
jecxz
xchg
dec
pop
cmc
ret
mov
cmp
or
pop
nop
lock
jecxz
fistl
pushl
mov
scas
mov
cs
mov
or
sti
into
push
lock
imul
arpl
aaa
cld
decl
int3
pop
jb
aad
pushl
test
and
mov
jl
cmp
adc
fsubs
jmp
sarb
jnp
and
movsl
mov
scas
mov
xchg
add
or
pop
mov
je
in
pop
push
cld
call
mov
xchg
loop
pop
ret
out
imull
jnp
mov
stc
jb
outsl
xlat
mov
xor
jle
jmp
das
inc
mov
jl
mov
sub
inc
pop
dec
sub
push
ds
fdivs
std
cmc
xor
lret
loopne
add
scas
jg
decl
and
xchg
pop
cmp
sbb
das
adcl
out
sub
lcall
cmpsl
popa
xchg
stos
or
mov
cmp
pop
cmp
jae
add
adc
lcall
lock
mov
pop
std
test
rcll
dec
mov
aam
loopne
mov
stos
jg
ficompl
in
popa
loopne
inc
fsub
icebp
loope
jne
mov
sahf
mov
add
pop
enter
jmp
cmp
jp
cltd
pop
inc
push
push
ds
cmpl
loope
jae
popf
ror
jns
ja
sub
out
sti
pop
mov
dec
lock
clc
jmp
mov
fidivrl
push
adc
aad
lret
stos
and
jg
mov
push
test
outsb
lock
sbb
mov
lds
cmpsl
lea
mov
and
or
pop
fcoml
push
jp
push
int
xchg
or
dec
ja
jmp
xor
sbb
pop
out
xor
or
fmul
sub
subb
lcall
sub
mov
clc
fldl
cmp
shl
icebp
in
scas
rclb
pop
add
jge
add
enter
xchg
repnz
frstor
cmc
rolb
enter
mov
pusha
sbb
scas
sbb
xchg
sub
jnp
lds
pop
sbb
sbb
jp
and
fiaddl
test
vmovd
clc
mov
add
dec
pop
ret
imul
decl
negl
lea
dec
mov
mov
or
aad
clc
jmp
leave
or
hlt
xchg
sub
out
rcrl
add
pop
jae
xor
incl
das
out
cli
dec
daa
mov
sbb
jmp
ljmp
jl
push
push
jnp
std
mov
cld
inc
cmpl
call
mov
out
sti
rorb
dec
mov
pop
cli
enter
inc
sbb
add
add
movsb
adcl
xor
scas
mov
arpl
pushf
mov
mov
xchg
fwait
decl
cltd
sbb
xchg
fstpt
aam
call
adc
xchg
ret
xchg
xchg
xchg
cs
mov
mov
pusha
insl
pushf
mov
mov
pop
popa
or
pushl
add
rol
jnp
fwait
sub
pop
push
lcall
cli
xor
js
std
jbe
repnz
nop
loop
aaa
jmp
xchg
nop
popf
push
sti
mov
jg
lock
mov
fisubrs
cmp
aam
cmp
mov
mov
sub
jnp
and
jp
jge
dec
stos
nop
xor
std
mov
das
fimull
xor
and
or
xor
es
ljmp
and
pop
iret
into
mov
push
pop
out
orb
in
cmovl
outsl
mov
lea
lcall
ljmp
fnsave
je
xchg
jnp
sarb
je
pop
inc
add
adc
mov
repz
fwait
jge
shl
daa
fcmove
and
or
sub
cli
ljmp
inc
rolb
fwait
mov
mov
push
getsec
movsb
ljmp
xchg
cmpsb
out
and
jnp
enter
scas
xor
push
xor
xor
xchg
push
cmpsb
pop
xlat
push
and
pushl
std
pop
cmp
daa
mov
rorl
push
sub
add
xor
push
fcmovbe
and
mov
mov
scas
call
sbb
jbe
xor
lock
jmp
mov
inc
jmp
cld
das
lea
ss
and
out
sbb
inc
cmpsb
repnz
ljmp
icebp
out
rorb
xchg
pusha
xchg
loope
and
loope
sbb
scas
cmp
mov
pop
lret
dec
shlb
sarb
lcall
loope
out
aam
inc
hlt
out
mov
test
fisttps
stc
pop
mov
mov
mov
push
std
or
sub
mov
inc
xor
pop
push
sar
mov
out
fnstcw
adc
incl
fcompl
and
pop
cmpl
ljmp
outsl
test
cltd
and
inc
cmc
imul
jle
xor
ja
incl
fdivrl
fucomp
shrb
in
xor
in
imul
pop
adc
lods
cli
ljmp
ror
gs
lret
adc
lock
std
mov
adc
mov
cmpsl
dec
int
nop
out
imul
lcall
and
or
and
adc
jno
lea
push
mov
idiv
pushl
sub
xchg
loopne
in
push
push
jno
jns
out
aaa
ljmp
mov
out
ljmp
int
push
divb
inc
std
sub
fnsave
push
fildll
push
int
and
lahf
mov
fdivp
loopne
aaa
push
jo
incl
dec
cld
cmc
push
sub
cmpsb
mov
ljmp
mov
jno
mov
adc
in
inc
jg
ficomps
jne
sbb
nop
inc
sbb
pop
xchg
insb
add
loop
loope
pushf
sub
inc
cmp
in
out
aam
mov
incl
and
repz
rorl
in
cmpsl
lcall
lret
and
adc
call
push
sti
inc
pushl
pop
idivl
fistpll
cld
jne
cltd
sarl
leave
jp
cmc
mov
mov
dec
cli
movsb
sub
leave
push
add
sbb
sahf
sti
jae
adc
jb
popf
adc
push
incl
fnstsw
aad
mov
icebp
mov
les
push
stos
ljmp
out
add
mov
lods
gs
lret
sbb
out
call
ret
cld
mov
push
repnz
arpl
or
daa
dec
cmc
jecxz
outsb
fdivs
fistps
push
scas
jns
xor
out
mov
aad
or
lret
and
sti
xchg
pop
loopne
mov
cld
adc
cmp
dec
fwait
push
ljmp
decb
pop
xor
mov
jbe
test
jecxz
pushl
cld
fs
ja
fimull
pushf
cmp
std
pop
dec
jp
hlt
push
das
pop
lock
ljmp
jg
mov
mov
std
insb
lds
lcall
mov
clc
dec
cmp
repz
jae
pop
out
pop
jp
mov
clc
xchg
add
mov
cmp
adc
iret
dec
div
jne
pop
rcll
inc
dec
clc
jmp
cmc
mov
adc
sahf
hlt
jb
ljmp
mov
out
mov
cmp
mov
nop
or
xchg
stc
aam
ror
clc
mov
aaa
in
and
xchg
stc
out
in
loope
dec
das
mov
sbb
lcall
push
imul
dec
jb
sbb
inc
das
mov
adc
int
std
ds
mov
mull
inc
outsl
mov
inc
inc
inc
pusha
shll
gs
dec
dec
sbb
call
adc
cmova
or
dec
jge
cmp
inc
adc
xchg
push
xchg
dec
add
mov
pushl
sbb
mov
mov
mov
xchg
mov
or
xor
mov
xchg
cmc
lcall
mov
mov
inc
testb
das
inc
lock
mov
pop
in
popa
pusha
out
and
fnstsw
testb
div
jmp
incl
sbb
outsb
cmc
fcomip
shl
xor
push
aaa
imul
loope
dec
fdivrs
mov
mov
lods
imul
mov
out
and
add
call
mov
mov
test
fcmove
gs
aaa
sbb
jg
sub
mov
add
sub
lcall
or
jbe
inc
dec
fs
int3
dec
lock
out
jmp
pop
cmc
repnz
testb
add
jg
ljmp
mov
lahf
fildl
lcall
frstor
adc
iret
fwait
notb
cld
xor
fcmovnu
sbb
push
data16
pushl
movq
jecxz
lahf
sub
call
mov
xlat
test
jmp
xlat
lcall
dec
loopne
push
aas
jle
fwait
jo
sub
frstor
fcoms
sti
mov
mov
and
into
sti
pop
ds
fistps
inc
cmp
xchg
and
fs
and
ret
mov
es
fdivrp
ljmp
cmp
lcall
imul
adc
fadds
jns
repz
mov
adc
add
testb
dec
in
stos
mov
push
insb
pop
pop
cmp
pop
sub
subb
inc
mov
pop
and
push
call
mov
fldenv
stc
lahf
lds
mov
fnstcw
in
ret
xchg
cmp
hlt
incl
mov
gs
xchg
test
xor
das
cli
mov
mov
mov
or
or
jp
clc
cmp
xlat
lods
pop
fnstenv
movsl
jmp
ja
xchg
jo
sbb
pop
mov
pop
sbb
mov
into
outsl
adc
test
int
cmp
pop
cmc
xchg
xor
in
call
pop
call
jmp
in
jecxz
sub
pop
iret
xlat
mov
jnp
fildll
test
jno
clc
mov
dec
inc
repnz
and
adc
cmp
mov
fcmovnu
sub
stc
jle
cmp
out
sbb
and
push
test
cmp
mov
or
pop
loopne
das
ds
enter
mov
jno
dec
mov
fbstp
fstps
mov
lcall
test
les
inc
jl
stc
lods
xchg
outsb
hlt
clc
lcall
ds
push
loope
mov
cmp
outsl
loop
cmc
in
inc
inc
xor
daa
es
incl
mov
dec
push
mov
and
cmp
cmpsb
nop
and
fs
loop
adc
dec
jl
test
aas
add
incl
lcall
test
notl
mov
cld
clc
jns
subb
cmpb
or
adc
jmp
pop
notl
sahf
xchg
js
dec
nop
jle
pop
adc
cld
adc
das
push
lret
cli
mov
sarb
decl
and
fstpt
pop
mov
jle
test
push
fadd
or
pop
aad
mov
mov
jecxz
xchg
adc
fdivrp
lock
dec
sub
pop
iret
repz
inc
cwtl
test
xor
push
push
xorl
jns
jbe
xor
cmp
jno,pn
cld
stos
mov
jne
cs
call
orl
aaa
inc
repz
dec
sar
sbb
mov
cmpsb
lock
and
pop
test
jb
divl
sub
xchg
mov
xor
mov
and
add
out
out
and
test
das
cwtl
add
filds
ds
fbstp
addr16
mov
sub
mov
mov
push
ret
pop
adc
int3
in
jl
sarb
add
mov
stos
inc
aam
pop
mov
push
pop
popa
inc
mov
cli
sbb
pop
enter
mov
fstl
clc
stc
mov
loope
test
jle
call
push
cld
jmp
mov
mov
imul
les
pop
xchg
decl
push
jmp
insl
sub
and
aaa
mov
call
lcall
cltd
pop
sub
pop
jmp
mov
jle
ja
test
repnz
xchg
call
mov
decl
sbb
cmp
dec
stc
sbb
cli
inc
std
cltd
mov
insb
cmc
shl
mov
mov
inc
pop
std
add
bound
xchg
jns
mov
inc
testl
lods
stos
or
pusha
call
ljmp
mov
outsb
fcoml
mov
push
mov
inc
call
mov
xchg
mov
lret
ffree
adc
mov
and
xchg
xchg
call
mov
shrl
pop
xchg
dec
leave
push
cli
or
xchg
aas
mov
jl
shl
call
fisttpll
jmp
mov
test
scas
into
outsb
rcrl
in
testb
cld
pusha
xor
dec
jg
insl
repz
les
pop
inc
les
cmp
cs
fincstp
ja
mov
decl
inc
xor
out
pop
mov
adc
jmp
stc
pop
or
aas
add
into
xchg
jmp
addr16
addr16
aaa
jmp
cld
shll
testb
out
mov
clc
in
xchg
idiv
mov
notl
cmp
outsb
jno
sti
xchg
mov
pop
mov
in
out
imul
imul
mov
inc
push
inc
sarb
jg
pop
andb
sbb
popa
jg
fisubl
sbb
mov
dec
mov
push
ds
pop
mov
cwtl
pusha
fwait
data16
insb
call
mov
jp
xor
insl
test
imul
jecxz
or
jns
fimuls
mov
out
mov
jl
jno
popa
xchg
mov
jmp
in
and
push
std
ja
les
mov
movsb
inc
fsubs
flds
and
lcall
xchg
out
enter
jne
sub
aaa
or
fisubrs
cmp
xor
push
pop
inc
push
call
dec
or
cmpl
lret
mov
decl
ja
xor
fbstp
rclb
out
loope
cmpb
or
clc
xor
xchg
push
dec
xchg
out
ljmp
cmp
in
in
sub
push
test
dec
xchg
push
xchg
sbb
add
pop
outsl
xchg
fildl
notl
push
call
das
xchg
sbb
xchg
jo
and
stos
pop
fiadds
xor
and
icebp
repnz
adc
or
inc
leave
cltd
data16
iret
std
out
enter
pop
repnz
mov
jge
or
in
cmp
dec
pop
push
ljmp
pop
in
or
cli
dec
mov
imul
clc
cmp
mov
xchg
repz
iret
and
cmpsl
aas
popf
insl
adc
neg
popf
test
mov
nop
mov
fucomip
inc
mov
daa
lock
jecxz
mov
sub
ljmp
cli
stc
cs
lret
or
mov
and
push
adc
decl
sti
repz
mov
jg
aaa
xchg
nop
or
xlat
pop
pop
cmpsb
xchg
incl
or
je
push
jge
imul
cmc
jg
insl
imul
std
call
pushl
cli
in
push
mov
lods
loopne
ds
xor
push
inc
or
hlt
or
jecxz
fcmovbe
jmp
fucom
push
mov
out
fwait
cli
pop
inc
repnz
jg
leave
aam
aas
inc
fdivr
mov
add
push
loope
int3
icebp
sarb
and
lods
cmpsb
fists
incl
pushl
ja
jle
ss
xchg
mov
loop
jecxz
js
jp
incl
out
cmp
loope
cmp
mov
imull
sbb
cmpsb
aam
leave
sahf
ljmp
pushf
add
fwait
mov
notb
add
cli
jl
pop
jl
xchg
out
int
sbb
or
loope
jnp
repz
fisttps
loopne
mov
sub
hlt
push
popf
add
jne
cmc
xor
push
push
sub
or
fmulp
imul
cmpsl
sahf
add
mov
mull
push
je
push
arpl
mov
cli
fsubs
xor
lcall
sahf
pop
iret
dec
aaa
fists
fdivl
ud2
mov
decb
xor
std
cmp
int3
jae
ret
pop
sub
mov
lods
pop
cltd
les
add
jecxz
xor
jg
inc
mov
jecxz
out
std
fisttpll
pop
jno
mov
jecxz
mov
push
rcr
jne
fwait
add
xchg
decl
adc
stc
mov
loopne
jae
sub
lret
aaa
pop
ja
addl
push
mov
pop
popa
mov
in
nop
jae
fildll
inc
ljmp
push
std
xor
mov
incb
aad
in
push
enter
xchg
push
lcall
sub
stos
cmpsl
xchg
aas
adc
push
mov
cmp
dec
loopne
shrl
xchg
sub
inc
fisttps
mov
adc
mov
inc
int3
outsl
iret
outsl
jns
mov
ret
fcomip
cld
mov
dec
pop
sti
mov
out
outsl
push
inc
cmp
icebp
jnp
cmp
pushl
std
add
adc
xlat
sub
mov
dec
mov
ret
icebp
add
icebp
ljmp
pop
mov
mov
nop
xor
pop
dec
loope
sahf
mov
cld
pushf
add
popa
fiadds
ret
outsl
jmp
fistl
shll
aaa
adc
push
not
jnp
cmp
jbe
sub
mov
jmp
pop
xchg
dec
in
fyl2x
xor
lret
mov
or
and
lcall
dec
sbb
jns
sar
arpl
adc
mov
ljmp
jg
fsub
or
xor
mov
aaa
sti
cli
inc
xor
lock
sbb
sbb
cli
fsubl
lea
fistpl
and
jle
ds
stos
inc
sub
mov
pushf
jge
and
iret
jmp
mov
rolb
jmp
sub
out
out
repz
sub
add
sub
mov
fdivl
mov
xor
popf
or
xor
out
popf
jp
sbb
push
sar
push
push
clc
lods
add
or
dec
push
enter
cmp
imul
lahf
jp
iret
jmp
mov
je
repz
movsb
jecxz
pop
xor
std
pop
mov
std
sbb
cmp
repnz
je
nop
scas
loop
fisubrl
and
les
dec
call
incl
or
outsb
pop
sub
or
into
adc
pop
out
es
aad
adc
jne
cli
in
ficoml
jne
adcl
or
ret
jmp
mov
add
call
mov
aad
xcrypt-cfb
cmpsl
fs
stc
outsb
cmpsl
rol
mov
call
add
xchg
stos
lret
fsubrs
dec
sahf
out
aas
xor
adc
xor
jl
rolb
push
jmp
jne
loopne
mov
ja
jmp
xor
sarl
les
in
ja
outsl
cs
xor
dec
incl
pushl
ds
movsl
cs
push
fs
push
mov
push
mov
aam
jg
xchg
push
fsubs
fistpll
mov
pop
push
pop
push
ljmp
fsubl
sub
incl
push
fldcw
mov
shrl
mov
nop
loop
lahf
mov
cli
sbb
out
adc
pusha
roll
mov
or
movsb
mov
and
sbb
repnz
decl
push
mov
iret
cmp
in
hlt
and
fbstp
call
pop
ret
insl
test
pop
into
xor
incl
in
aas
out
je
fiadds
ljmp
icebp
sbb
punpcklwd
cmpsl
dec
adc
int3
jg
cmc
outsb
out
and
cld
jmp
mov
nop
inc
sbb
rorl
shl
stos
stos
dec
ret
or
in
jae,pt
mov
mov
test
dec
js
rep
out
lret
lcall
fs
pop
lds
in
xlat
or
bound
adc
cld
ljmp
hlt
andb
xchg
mov
fcmovne
mov
or
cmc
jno
sub
jno
dec
dec
int
jno
call
ret
stc
add
nop
jg
jle
cmp
div
out
call
mov
lcall
adc
inc
or
mul
rep
ss
pop
mov
jb
jg
sub
hlt
lods
xchg
shlb
daa
ss
and
aad
cs
inc
mov
mov
mov
fsubs
cmp
xor
push
dec
inc
xor
fwait
cmp
stc
scas
pushf
mov
dec
ret
push
xchg
je
call
stc
imul
push
adc
pushl
out
aas
pop
sahf
addr16
inc
loopne
sbb
decl
jb
sub
outsl
inc
cmp
cmc
pop
jp
imul
push
push
test
jmp
bound
dec
insl
cmp
mulb
mov
mov
jecxz
scas
push
aaa
cmpsb
movsl
clc
sbb
jl
sub
mov
mov
push
fnsave
ljmp
out
ljmp
jmp
shrl
aaa
xchg
cmpsl
jbe
or
daa
movsl
out
test
pop
insb
js
out
mov
cmp
out
jp
sub
sub
lcall
xor
lret
mov
xchg
xor
and
dec
jg
sub
jge
sahf
sbb
jmp
and
test
or
inc
inc
lcall
mov
fidivrl
inc
test
lods
cmc
out
inc
call
jmp
imul
ljmp
cmp
pop
stos
jo
cli
into
jno
fcomip
mov
popf
scas
push
add
xchg
out
ret
loop
pusha
dec
and
lret
or
decl
mov
mov
fisttpll
ds
pop
or
aas
add
add
pop
or
adc
cltd
mov
iret
ret
mov
xchg
xchg
imul
ljmp
mov
or
add
push
mov
or
jb
pop
pop
and
pop
or
call
cwtl
clc
nop
lea
mov
jg
mov
into
decl
in
jge
loopne
das
mov
and
loopne
movsb
mov
addb
pop
dec
pop
scas
mov
jecxz
ljmp
dec
push
leave
sbb
js
cmp
pusha
fidivl
stc
iret
sub
push
sbb
sahf
and
and
cmc
clc
xchg
jle
incl
cmc
call
xchg
inc
jns
shl
aas
jb
call
mov
or
sbb
adc
decl
mov
nop
sbb
in
xor
rcr
mov
ljmp
repz
cli
pusha
inc
andb
int
iret
mov
inc
mov
lock
lret
and
jbe
mov
jmp
and
dec
jecxz
ljmp
push
inc
cmc
mov
lahf
or
int
jecxz
push
mov
repz
adc
and
lock
push
jns
test
mov
mov
bnd
nop
call
ret
xlat
notb
icebp
sbb
lock
call
imul
pop
into
adc
in
mov
mov
lret
in
mov
pop
mov
add
lcall
mov
stos
scas
pop
mov
pop
lret
add
fbstp
xchg
dec
sar
and
xchg
shl
mov
push
das
adc
int
sub
cmp
lods
jmp
jg
inc
jbe
sub
mov
mov
ret
rorl
aaa
loope
pushl
repnz
aad
subb
push
fimuls
mov
lods
ljmp
cltd
out
lods
rcrl
mov
jg
mov
cmp
jge,pn
mov
push
lahf
push
in
ljmp
lock
test
rcrl
addr16
negb
in
add
push
loope
and
test
cmc
jp
mov
mov
hlt
add
jle
fnstsw
loop
or
cmc
movsb
fsubrs
or
sahf
sub
ficoms
cltd
mov
scas
inc
lret
std
incl
cli
in
shl
aad
loopne
stos
sub
mov
jecxz
lahf
mov
pushl
fidivrs
rclb
xchg
fucomip
test
xchg
cmpsl
dec
stc
sarb
out
cli
out
outsb
test
sub
sub
stos
in
das
dec
fidivrs
sbb
jg
push
and
sbb
int3
xchg
and
aad
cli
mov
pop
pop
sbb
xlat
mov
outsl
xchg
cmpl
cmp
sti
sbb
call
lock
cmpsl
aam
adc
cmc
leave
int
pop
imul
lahf
jg
and
sub
adc
sub
cmp
and
decl
mov
mov
xchg
jg
lods
mov
movb
cwtl
ret
pop
lcall
hlt
int3
jle
push
sbb
repz
pop
jp
inc
xchg
pop
fstpt
ljmp
scas
std
in
jne
mov
mov
dec
inc
icebp
mov
outsl
mov
pop
mov
cs
lock
mov
es
dec
imul
mov
mov
test
jbe
jg
call
push
xor
fwait
icebp
xchg
xchg
jmp
cltd
cltd
popa
aam
sub
lcall
jecxz
push
mov
sub
xor
xchg
dec
push
stos
cmc
push
jle
mov
mov
imul
aaa
sbb
lock
out
xor
fistpll
dec
shll
fwait
dec
mov
cmp
mov
dec
js
repz
mov
ja
loopne
ss
mov
in
ficompl
out
mov
ljmp
insb
sub
dec
cmp
lcall
mov
push
xchg
call
mov
out
iret
push
jmp
ljmp
out
mov
pop
dec
push
jnp
jp
sub
mov
jmp
popf
dec
int
push
rcrl
or
pop
dec
aam
sbb
lret
fs
flds
jmp
ja
push
inc
pop
fimuls
mov
movsb
cmp
jecxz
fbstp
loope
stc
into
ret
leave
test
aad
out
call
ret
mov
mov
fcomip
jg
dec
jnp
mov
mov
out
fildl
mov
sbb
sbb
in
mov
stos
pop
cmp
or
inc
pop
mov
std
jle
mov
sti
mov
pop
jo
xchg
rcrb
jne
roll
outsl
cmp
pop
or
fistps
lea
enter
cmp
pop
pop
add
pop
inc
and
jg
cli
cld
or
pop
pop
cmp
mov
xchg
dec
jmp
loope
incl
popf
pop
cmpl
and
bound
mov
pop
aad
inc
test
cmpsb
cli
loop
movsb
iret
fs
sub
sub
cmp
lcall
sbb
inc
mov
inc
jmp
sub
sahf
in
jle
repnz
pop
lcall
je
leave
xchg
out
ds
pop
fidivs
fwait
pop
adc
sbb
lahf
mov
js
jge
fwait
sbb
stos
and
inc
fs
dec
fidivrl
or
cwtl
mov
addl
incl
xchg
cltd
inc
mov
aad
adc
jmp
into
js
mov
in
jo
in
loop
shlb
fst
and
enter
mov
ljmp
popa
dec
mov
icebp
jl
pop
in
pusha
cmp
aam
jg
shlb
sbb
sub
test
mov
leave
mov
shlb
jmp
inc
mov
inc
mov
xchg
mov
xchg
jb
rcrl
mov
jle
add
repnz
xchg
test
decl
dec
fldt
add
and
push
add
mov
sti
jg
lret
lcall
and
daa
loop
sub
or
jecxz
mov
leave
jno
mov
mov
and
cli
jg
js
add
inc
push
add
or
mov
inc
jecxz
inc
mov
add
imul
jae
mov
mov
xchg
xchg
mov
stc
add
test
sarb
ljmp
xchg
ret
outsb
sbb
cli
mov
enter
xlat
mov
dec
cmpsl
test
pop
loopne
jmp
std
subb
rcr
aas
popf
xor
cmp
insb
movb
and
ja
shll
mov
inc
jg
cmp
lcall
mov
fimull
fdivr
xchg
cmc
jae
cli
sbb
ret
mov
sub
adc
jmp
pop
mov
mov
jne
insb
sbb
xchg
mov
sbb
dec
cltd
loopne
lock
and
mov
iret
pop
mov
call
sbb
jns
std
cmpsl
repnz
mov
repz
cld
call
enter
push
dec
xchg
scas
cmp
clc
xchg
xchg
test
dec
sbb
stc
or
insl
pop
icebp
repz
pop
lret
addr16
loope
aaa
loopne
stos
ljmp
jecxz
mov
sub
jl
mov
xor
scas
cli
lcall
sub
cs
xchg
cld
imul
popf
sub
int3
test
mov
fstl
lods
mov
or
inc
daa
dec
mov
push
shrb
insb
arpl
pushl
aas
fsubp
xor
call
dec
lcall
enter
aaa
adc
lcall
loopne
shl
mov
mov
shl
or
sub
call
lock
xlat
shlb
call
call
mov
mov
adc
jle
xchg
rcrl
sub
mov
test
mov
push
shl
push
mov
sub
mov
push
mov
cmc
and
xchg
push
or
decb
mov
fneni(8087
or
mov
dec
mov
pop
push
lock
mov
addl
ljmp
cltd
fsubrs
xor
lods
loope
rcr
add
mov
jmp
shlb
pop
jno
fcomip
pushl
mov
popa
test
adc
xchg
sub
fbld
fistps
jg
test
addb
ja
inc
arpl
pushl
xchg
lahf
lret
aaa
lret
imul
cmc
pushl
inc
bt
push
divl
sar
mov
pop
jmp
in
call
adc
sbb
mov
nop
mov
icebp
mov
incl
xchg
cmp
in
mov
jg
sahf
xor
jne
mov
push
cld
scas
fchs
or
push
es
cmp
cmp
icebp
mov
push
repz
stos
gs
push
roll
adc
out
jae
mov
call
inc
outsl
cmp
test
aad
movsl
stos
ja
or
pop
pop
scas
jg
jp
xor
xor
aaa
or
mov
scas
add
cmpsl
jnp
addr16
std
aas
ja
les
sub
pop
sahf
testl
cli
mov
lock
xchg
lcall
hlt
loope
mov
sbbb
jnp
pop
fisttps
jp
cmc
mov
movsb
jg
mov
mov
es
scas
and
cmp
decl
xor
jmp
sbb
fstpt
imul
dec
mov
mov
hlt
sbb
mov
mov
insl
call
out
mov
aaa
mov
mov
andl
push
dec
scas
ret
pushl
out
ror
stos
pop
sbb
lahf
mov
cltd
inc
sbb
pushl
jge
movsb
aad
insl
jl
leave
shlb
dec
mov
scas
iret
push
sub
call
loop
incl
rorb
ficoms
sub
mov
sub
sub
cmpsl
rorl
jmp
jmp
inc
fsubrp
dec
je
add
ljmp
rcll
push
ficoms
mov
push
lea
shll
push
mov
mov
ret
jmp
loop
scas
arpl
jnp
popf
icebp
pop
scas
lret
mov
ljmp
sub
roll
lahf
dec
leave
clc
clc
out
xor
aaa
jmp
clc
cmp
fidivs
mov
decl
sbb
jmp
jp
push
xchg
std
and
ret
jo
divl
xchg
mov
ljmp
ds
push
stc
xor
xor
int3
das
repnz
dec
push
in
jo
add
data16
incl
scas
cli
outsl
sti
inc
sbb
jecxz
xchg
fcmovu
pop
fwait
clc
mov
incl
out
aas
lret
mov
into
lret
ss
not
ret
gs
scas
stos
std
iret
fstl
je
jne
inc
adc
in
shl
out
dec
test
je
jne
insl
pop
shlb
imul
adc
add
pop
sti
hlt
gs
push
iret
jmp
rcl
fs
dec
cmp
or
outsl
stc
add
imul
int
mov
or
and
cmp
sahf
lods
roll
jge
incl
cwtl
pop
jge
ret
nop
movl
loope
xchg
mov
jns
sbb
or
pop
mov
adc
icebp
pushf
call
xchg
ret
xchg
dec
icebp
xchg
cmpsl
mov
aam
inc
jmp
pop
mov
jmp
inc
xchg
xlat
mov
mov
outsl
lods
leave
not
mov
hlt
mov
incl
fistpll
adc
lret
cli
push
and
dec
addl
repz
sub
clc
xchg
pop
jg
repnz
in
fildll
outsl
fldt
pop
push
sub
mov
dec
ss
dec
jle
inc
repnz
enter
and
adc
cmc
push
ficoms
jae
mov
outsl
aaa
jecxz
cld
fwait
mov
ret
imull
xchg
stos
pop
sbb
fbstp
mov
arpl
mov
test
stc
jecxz
mov
stos
mov
flds
xchg
lret
and
in
shll
inc
jae
jae
jmp
xchg
lods
stc
pushf
idiv
testl
push
movl
mov
push
sub
std
lcall
fwait
hlt
pop
lcall
jae
outsl
mov
shlb
jg
icebp
inc
push
in
sbbb
std
mov
das
fimuls
sbb
xlat
fbstp
fdivp
cld
test
mov
loop
call
xchg
inc
in
mov
out
test
out
aad
mov
out
jp
fwait
stc
mov
incl
jp
mov
pop
add
rcl
movsl
test
mov
push
out
pop
stos
or
mov
mov
cmc
or
dec
adc
cs
out
in
mov
scas
mov
lock
daa
add
sub
jb
movsb
and
scas
ret
dec
lcall
sar
jmp
jbe
stos
std
mov
cmpsl
lods
repz
addr16
jo
gs
dec
or
fcomip
jmp
jecxz
mov
movsb
and
jmp
outsl
cltd
sbb
mov
fidivl
ret
dec
jns
xchg
call
pusha
imulb
aaa
arpl
icebp
incl
lds
insl
insb
xor
jae
ja
inc
jnp
cld
lcall
stos
inc
mov
aam
aas
ja
rorl
stos
mov
dec
xor
pushl
negb
mov
ficoml
inc
stos
movsb
out
xchg
jmp
decl
mov
cmpsb
and
lods
pop
mov
jge
pop
inc
shl
mov
xchg
cmp
arpl
cmp
sahf
mov
pop
and
addr16
pop
ljmp
lret
rcrb
push
mov
xor
aas
inc
fdivr
adcb
out
clc
mov
cltd
movsb
sti
xor
repz
repnz
incb
pop
out
adc
mov
loopne
mov
inc
lahf
ds
test
mov
lcall
xor
cwtl
lcall
sbb
neg
push
jmp
sub
test
stos
and
pushf
xchg
jmp
xor
sar
pop
loopne
xchg
adc
fwait
dec
mov
mov
cmp
jg
push
out
xor
sbb
lods
mov
daa
cld
imul
mov
in
mov
inc
scas
inc
cmp
sub
arpl
jge
fisttps
xor
mov
test
fcmovb
mov
mov
cmp
jo
scas
ret
outsb
add
repz
decl
testb
lea
xchg
dec
addr16
ds
dec
lods
cmp
mov
jnp
lods
repnz
fmull
lods
cmp
imul
push
pop
outsb
inc
sub
decl
pop
sahf
mov
inc
mov
rorl
pop
mov
ljmp
mov
out
push
js
enter
lahf
cmp
stc
cmp
mov
call
sub
mov
mov
push
jp
pop
mov
aad
mov
push
jl
test
imull
push
push
cli
in
xlat
cli
jg
fs
jae
sbb
inc
push
adc
jo
sbb
add
jo
pop
pop
call
mov
int
xor
pop
lahf
rorl
or
aaa
adcb
das
pop
incl
cld
pop
mov
stos
push
pop
xorb
lcall
sarb
pop
mov
movsb
lahf
push
mov
and
inc
aam
push
fwait
arpl
shll
fdivrs
pop
dec
add
lods
and
bswap
mov
jg
inc
cld
outsl
and
adc
mov
aaa
xchg
fsubrs
and
ljmp
ficomps
jb
jb
lahf
fcomi
xlat
fdivl
imul
jg
ds
or
cmp
mov
adc
or
dec
lcall
dec
clc
inc
push
cmc
xchg
test
pop
andl
mov
mov
loopne
xor
push
sbb
mov
adc
les
jbe
mov
dec
xchg
or
into
ljmp
lret
nop
daa
mul
loopne
lret
btsl
inc
scas
mov
lods
mov
icebp
cmp
std
movsb
mov
mov
jl
outsb
jecxz
add
leave
data16
pushf
jg
test
sub
icebp
cli
test
test
adc
aad
into
pop
xchg
mov
jmp
add
stc
mov
shlb
clc
call
lock
ljmp
pusha
mov
int
shl
lahf
cwtl
mov
pushf
nop
jp
ljmp
xchg
leave
out
pop
dec
cmp
imul
xchg
fcomip
inc
mov
ret
ja
mov
push
pushf
rclb
fistpl
adc
adc
add
hlt
mov
pushl
out
cmpsb
dec
jle
xlat
jb
js
mov
pop
aam
mov
push
xor
cld
call
jmp
cmp
ds
arpl
nop
mov
jg
jne
mov
adc
cmp
jl
icebp
jg
add
xchg
dec
jno
jl
test
repnz
dec
jnp
rolb
adc
js
pushf
jg
incb
daa
lods
inc
outsl
dec
aaa
scas
mov
sti
mov
insl
jp
decl
xchg
mov
insb
ret
stos
incb
out
aas
fiadds
lock
push
inc
loop
pop
pop
dec
jecxz
push
xor
lcall
push
mov
stos
icebp
dec
ja
jae
push
push
mov
mov
lcall
cmp
inc
aaa
stos
xor
das
arpl
mov
sbb
sub
loope
outsl
xor
pop
xlat
pop
lea
scas
fists
sbb
jne
pop
sbb
push
add
dec
cmp
das
sti
adc
pusha
ljmp
nop
and
fsub
popa
iret
ja
fsubs
jecxz
jg
dec
push
xlat
negl
inc
xorb
lret
inc
stc
test
mov
mov
xchg
xchg
xlat
in
int
lods
add
fisttpl
mov
mov
mov
jl
rorl
in
sub
mov
loop
lea
jno
mov
lcall
mov
in
mov
mov
jbe
and
and
jnp
push
ja
mov
into
push
jae
adc
int
jg
pmaddwd
push
loopne
lahf
pop
mov
jg
arpl
outsl
pop
pop
mov
push
push
inc
mov
sub
aas
clc
jmp
push
decl
dec
iret
inc
mov
aas
adc
aad
loop
inc
jecxz
cmp
aas
jecxz
pop
in
sub
mov
repz
cld
ret
shrl
shl
mov
mov
mov
rolb
jg
cmp
aas
out
cmp
push
push
sub
mov
ljmp
test
aas
sbb
adc
arpl
int
adc
out
out
jo
jge
pop
outsl
decl
shll
sbb
pushf
out
sti
mov
sbb
mov
outsb
out
fdivr
mov
jmp
hlt
mov
out
stc
fmull
pop
or
fistpl
xlat
inc
int
or
aad
cwtl
inc
xor
lret
insl
cmp
xchg
in
mov
je
inc
mov
mov
scas
test
jg
xchg
aaa
or
je
scas
mov
sbb
xchg
testb
mov
test
jg
mov
push
dec
scas
imul
and
mov
dec
xchg
xchg
pop
xchg
push
popf
mov
ljmp
iret
or
pop
sbbb
lret
dec
rolb
mov
add
loopne
sbb
cmp
das
out
in
jno
or
mov
repz
movsb
cmp
mov
aas
lock
pushf
popf
xchg
xchg
loopne
les
cmpsl
mov
filds
dec
pushf
mov
ss
inc
rclb
cltd
ljmp
xchg
imul
shlb
fwait
inc
mov
pusha
mov
jge
popf
jl
mov
mov
dec
mov
jp
or
fbstp
mov
nop
xchg
sahf
filds
inc
das
sub
int
int3
add
mov
mov
jg
sbb
loope
div
out
das
mov
xchg
mov
ljmp
mov
jae
jae
jb
lea
mov
mov
js
ljmp
pop
insl
xor
push
jp
outsb
pop
and
xchg
and
repz
clc
push
aaa
out
pop
jo
cmpsl
andb
popa
pop
inc
pop
or
mov
mov
ret
sub
imul
push
sub
xchg
mov
mov
popf
cmp
rcrb
push
int3
lcall
enter
movsb
pusha
int3
int3
pop
xor
decb
mov
push
pop
shr
pop
push
fisttps
rclb
mov
pop
push
sbb
decl
cmpsb
movsb
sub
push
mov
push
push
inc
xchg
add
inc
out
imul
movsb
mov
mov
or
test
mov
mov
scas
cli
jmp
add
jno
xchg
leave
cltd
nop
jg
popf
dec
adc
mov
jae
add
mov
xor
hlt
or
inc
mov
or
or
scas
xchg
fwait
mov
movsb
test
ljmp
nop
clc
push
and
ds
nop
in
stc
sti
lock
cld
ds
nop
mov
xchg
add
push
leave
inc
aaa
dec
lret
lock
cmpsb
sub
mov
mov
jo
stos
inc
loopne
repz
ret
fldcw
loop
loopne
push
pushl
xchg
daa
mov
rcrb
fwait
xchg
mov
sahf
cs
or
lcall
inc
lcall
fs
inc
in
aaa
stos
pusha
out
outsb
dec
push
stc
mov
outsb
inc
ljmp
mov
pushf
adc
call
mov
mov
pop
testl
mov
fwait
popa
xor
dec
in
mov
push
popf
flds
mov
cmc
fcmovb
jbe
nop
fldenv
call
in
and
mov
fidivs
mov
imul
scas
xchg
fstps
xchg
mov
adc
incl
push
js
inc
push
add
rorl
shrb
or
xchg
or
ficompl
jbe
in
xchg
movsl
adc
add
or
push
push
in
push
lcall
orb
hlt
inc
cld
lea
daa
add
and
cli
loopne
jmp
mov
icebp
mov
sub
jo
lods
push
pushf
mov
decl
and
jl
mov
dec
adc
xchg
ja
push
sub
ljmp
lcall
sub
rorb
shrb
out
loope
jo
mov
jmp
stos
sub
decl
mov
dec
out
push
fistpl
cmp
mov
mov
shll
sbb
jmp
call
in
mov
std
lea
arpl
and
mov
repz
divb
std
pop
rorb
nop
mov
or
ficompl
jnp
push
jmp
pushl
mov
dec
mov
cmpsb
iret
gs
orb
add
test
decl
sarb
enter
ror
mov
test
cmp
int
mov
cltd
push
cli
jp
inc
movl
movsb
cmp
jns
pushl
cmpsl
dec
outsl
popf
adc
jl
outsl
mov
mov
mov
and
sub
jns
xchg
inc
jl
movsb
out
test
mov
cld
mov
push
jno
jbe
mov
enter
sti
push
mov
and
pop
mov
fcomip
pop
jae
js
mov
stc
pop
out
jne
ljmp
or
jmp
mov
mov
rcrb
pop
jbe
lcall
movsl
daa
jg
dec
dec
xor
outsl
jne
mov
popa
dec
pop
mov
call
mov
negb
lds
sar
lcall
lret
jo
jae
ss
mov
dec
js
mov
sarl
call
aaa
daa
test
sub
fucomi
add
push
xor
call
aad
inc
std
push
stc
lock
in
out
pop
pop
jo
pop
mov
or
call
cmpsb
hlt
stc
loope
cmc
pop
mov
mov
fistl
int
cmpsb
stc
int
into
leave
imul
cmp
inc
cmpsl
xor
ja
add
jl
mov
jns
mov
arpl
sbbb
clc
xchg
mov
mov
sub
lock
mov
cltd
mov
cwtl
movsb
mov
mov
jg
cli
mov
movsb
inc
push
mov
mov
sub
jmp
push
jnp
push
jmp
in
ss
sti
dec
and
sbb
insb
cmp
pop
pop
das
ffree
mov
inc
in
lea
push
lods
out
imulb
ds
mov
or
sti
cli
sbb
sbb
mov
out
lock
mov
jmp
mov
mov
xchg
xchg
mov
shl
repnz
mov
rcll
lcall
andb
pop
cmc
cmp
mov
mov
test
adc
mov
ds
int
pop
jbe
mov
lret
dec
or
cmc
inc
mov
pushl
xor
aam
push
pop
sub
icebp
stos
jae
fsub
dec
or
mov
leave
testb
and
test
add
fcmove
clc
xchg
ss
add
pop
cmp
cmpsb
cli
ljmp
push
int
push
movsb
dec
dec
outsb
fdivrs
ret
mov
mov
pushf
call
fistpll
icebp
loope
and
xchg
xorl
mov
jle
jle
push
push
cld
aaa
adc
lret
pop
jmp
jo
stc
pushl
cmp
pushf
call
adc
not
aam
fcmovbe
into
inc
stos
mov
push
hlt
fstl
shlb
ror
mov
pop
jb
ret
pushf
mov
loope
cwtl
adc
fcompl
clc
pop
shr
daa
push
pop
dec
das
xchg
mov
inc
pop
jp
jp
ds
inc
mov
mov
out
mov
mov
mov
incl
xchg
cmp
idiv
sarb
inc
aas
imul
clc
insb
js
mov
sub
mov
adc
insb
mov
mov
mov
xchg
cltd
in
cmp
adc
decl
jg
cmpl
ljmp
mov
in
mov
out
jg
mov
sbb
fsubr
cmp
ficoms
aad
jg
incl
inc
cli
adc
cmp
and
mov
jns
jb
loop
incl
cmpb
jns
jae
dec
xchg
jl
idivb
out
clc
loop
imul
lcall
incb
mov
adc
cltd
mov
out
xchg
shll
cli
stos
and
stc
shrb
lods
daa
scas
pop
xlat
push
push
jo
sbb
rolb
inc
xchg
inc
sbb
inc
jecxz
sub
call
inc
pop
movsb
and
cmp
mov
and
sub
int3
rcrl
sti
insl
mov
fdivs
push
inc
xchg
cltd
dec
mov
nop
sahf
mov
call
pop
push
xchg
std
jne
ljmp
xchg
cld
mov
xchg
pop
pop
xchg
aas
lret
and
dec
cli
movsb
push
mov
pushl
pop
sbb
fists
mov
out
aas
stos
pop
ret
inc
imul
int3
mov
lcall
and
adc
cmp
sti
daa
mov
push
ret
add
mov
fwait
pushf
iret
and
add
sub
inc
xchg
ss
repnz
jmp
scas
out
lret
pop
inc
fcmovb
cld
rcpps
mov
in
gs
dec
in
mov
push
lahf
addr16
pop
xor
sub
sbb
push
cli
ljmp
shl
loop
repnz
stos
insb
stos
inc
mov
inc
push
ljmp
jecxz
dec
jmp
jae
sarb
pop
fcmovnu
daa
lods
cmp
inc
faddp
mov
lcall
xlat
outsb
out
mov
scas
xor
std
mov
lock
cli
sbb
sbb
nop
cmp
addb
incl
mov
or
data16
inc
jns
and
mov
stc
and
ret
xor
out
pushf
or
leave
xor
add
outsl
das
sar
xchg
jnp
sub
int
xchg
dec
sub
or
mov
pop
rcrb
fwait
inc
xor
fwait
decl
inc
test
pop
movl
lods
pop
aaa
push
incl
xor
xor
and
out
mov
aas
inc
inc
jg
mov
sbb
sub
das
clc
jmp
xchg
cld
fs
mov
dec
mov
pop
mov
cs
pop
dec
pushl
add
mov
lds
sbb
aam
pop
dec
dec
aaa
or
std
sbb
jbe
jmp
popa
in
hlt
movsl
jae
xorb
repz
in
mov
mov
lea
inc
ljmp
outsb
hlt
je
mov
sub
daa
and
mov
xchg
mov
jb
ljmp
rorl
rcrl
into
jle
nop
jbe
int3
repz
jo
test
inc
mov
jge
push
enter
outsl
test
stc
inc
in
ljmp
test
incl
pop
cltd
pop
sbb
test
cld
out
enter
xor
sbb
stc
in
lret
jmp
imulb
jmp
xchg
leave
jge
cwtl
fwait
xchg
dec
dec
mov
jmp
and
jmp
xor
mov
cmpsl
jge
sub
dec
add
dec
in
push
sbb
add
lods
cli
mov
pop
lret
mov
jae
push
lock
arpl
pushl
out
dec
jo
inc
jb
sahf
cmpsl
sahf
outsb
jns
xlat
xchg
sbb
std
out
mov
ror
out
aad
jle
cld
mull
loopne
mov
cld
jle
out
cli
add
sbb
subb
std
jg
fmulp
shrb
inc
cmpsl
cmpsl
jmp
mov
test
shrb
cmp
or
fnsave
mov
std
jecxz
rclb
pop
mov
jl
sbb
call
mov
dec
sbb
bound
lock
incl
fstpt
jp
mov
xor
cld
aaa
pop
inc
fs
lods
call
cmp
mov
out
xchg
decb
inc
mov
xor
jo
addr16
mov
ds
ss
out
or
lret
xchg
movl
mov
subb
fs
mov
add
notb
filds
imull
dec
push
mov
fcomip
inc
pusha
daa
jp
cmp
jge
xchg
arpl
ljmp
imul
scas
push
out
push
movsl
nop
and
xchg
or
and
mov
xor
pop
inc
cld
das
in
mov
in
ss
sub
pushl
sbb
xlat
adc
jno
scas
test
cmp
push
sub
or
popa
bound
or
push
in
insb
push
ljmp
in
cld
dec
adc
stos
in
out
test
jl
xchg
movsl
stos
xor
out
inc
xchg
pop
jo
cltd
aas
scas
mov
out
sub
mov
das
clc
lahf
mov
adc
xor
incl
pusha
xchg
mov
js
decl
pop
sahf
cltd
mov
jnp
out
xchg
call
dec
pop
jg
jmp
push
inc
xchg
out
iret
mov
std
test
ja
xchg
mov
ror
pop
pop
ljmp
mov
push
pop
inc
arpl
test
repz
loop
stos
xlat
insl
out
jg
sahf
inc
rcll
hlt
mov
dec
xchg
adc
fcomps
adc
in
ja
jle
cmp
icebp
add
cmp
push
int
fbstp
mov
call
mov
and
out
mov
decl
xchg
movsb
rorl
call
fistps
cltd
cmc
cmpsl
rcl
mulb
sbb
jg
adc
lods
fbstp
xchg
jbe
pop
adc
jns
das
ja
out
out
or
fstpl
fistpll
mov
fldenv
push
mov
repnz
out
leave
cmp
xchg
sbb
call
insl
mov
sbb
jmp
lahf
fmull
ret
push
filds
mov
mov
lret
cmpsl
xor
ficompl
ret
jns
lock
decb
dec
mov
daa
dec
jmp
xchg
lock
test
mov
out
pop
loopne
inc
mov
dec
add
ficomps
mov
push
addr16
ret
insl
xor
sti
xchg
sbb
sub
out
das
push
mov
stc
call
cld
pop
push
test
add
jl
ret
mov
fsts
push
xor
push
mov
es
cwtl
xor
xlat
or
sahf
mov
pop
lock
repz
pop
dec
push
jmp
mov
dec
shr
ja
adc
arpl
aas
pop
icebp
sahf
xchg
jle
jmp
cmpl
cli
les
sti
stc
arpl
sbb
data16
icebp
pop
jmp
jle
inc
jg
lods
xor
add
jmp
cli
pusha
arpl
jecxz
sbb
xchg
jmp
arpl
cli
lods
mov
jl
imul
push
aad
sub
pop
add
decl
push
mov
dec
hlt
xorl
hlt
xchg
stc
out
cmc
push
pop
stos
in
mov
incl
mov
fdivrs
push
bound
push
mov
xchg
pushf
xor
jmp
and
rorb
ljmp
pop
imul
popf
or
pop
pop
repz
outsb
mov
stos
cmp
xor
ja
call
je
lret
push
fwait
cmp
or
jne
pushf
stos
nop
push
aas
dec
aas
jg
inc
cld
mov
push
pop
mov
push
mov
lahf
jbe
mov
fbld
add
push
push
fstps
pop
cmp
mov
decl
iret
pop
test
test
enter
flds
pminsw
xchg
cli
lcall
pop
fadds
and
in
add
inc
lahf
sahf
xor
outsb
jae
sub
inc
cmpsl
mov
popa
js
pop
pmaxub
jg
sahf
jg
xchg
mov
call
cmc
shlb
outsl
pop
mov
sbb
jg
mov
sti
ja
ret
out
loopne
jne
ljmpw
pop
sbb
loope
rol
or
out
cmpsl
mov
jg
cli
fwait
pop
loope
dec
ljmp
mov
scas
mov
arpl
fdivl
lcall
pushf
xor
rcrl
jecxz
push
pop
jo
int
mov
mov
inc
and
out
inc
pop
mov
adc
stos
aad
aad
fistps
push
cmp
xchg
xor
dec
fs
js
test
subl
sub
ja
cmpb
mov
mov
stos
and
mov
sbb
sub
out
rcll
je,pt
negl
imul
aad
fwait
outsl
cli
inc
cld
inc
xchg
fdivrl
push
mov
dec
clc
cmp
call
jle
push
fs
jb
mov
dec
push
cmp
test
pop
loopne
int3
into
ret
mov
enter
xlat
insb
pusha
shrl
lret
adc
pop
adc
in
nop
cltd
mov
ss
lcall
inc
ljmp
popw
jg
push
in
xlat
and
pop
seta
incb
inc
ljmp
jmp
inc
mov
inc
dec
mov
cmc
cmp
fs
hlt
hlt
sbb
ljmp
leave
push
xchg
andl
cmp
data16
jle
xchg
cmc
ljmp
in
shlb
in
testb
test
cmp
sub
xorl
xchg
pop
sub
inc
outsb
das
jle
popf
mov
int3
mov
adc
mov
pop
icebp
ficoml
push
cltd
pop
inc
lods
xchg
iret
jb
xlat
fmull
rclb
lcall
jmp
mov
pop
xchg
ficoms
ret
xchg
xor
and
pop
or
sub
scas
jno
outsl
pushl
xor
pop
add
mov
push
dec
fcoms
jecxz
incl
ss
inc
and
push
outsl
inc
push
lods
mov
pop
xor
mov
cli
das
shlb
adc
fimull
sbb
loop
ljmp
enter
push
or
clc
jl
mov
mov
decl
dec
push
sub
xor
jno
jbe
push
clc
lcall
ljmp
pop
xchg
sub
loope
jbe
mov
dec
repnz
cli
incl
insb
and
jns
sbb
lcall
out
jb
dec
lods
dec
mov
in
nop
and
rclb
inc
fisubs
insb
lock
test
out
jbe
mov
jge
mov
aas
hlt
mov
mov
pop
cld
xchg
repnz
pop
sbb
aas
xor
adc
xlat
enter
lcall
cmp
aaa
scas
mov
pop
cli
xchg
gs
inc
jmp
icebp
ja
movzbl
and
aam
stc
idiv
aaa
sarb
mov
jb
aad
aaa
cmp
dec
mov
sarb
pop
push
mov
lock
das
push
dec
hlt
imul
scas
xchg
push
adc
daa
scas
outsb
cmp
jmp
jg
push
mov
mov
fistpl
data16
jmp
arpl
mov
call
sub
cmp
add
scas
out
push
mov
mov
sub
jg
jnp
mov
cmpsb
pop
aad
loopne
dec
ret
insl
call
xchg
mov
dec
repz
stos
cmpsl
dec
jg
int3
push
ss
push
sbb
mov
ljmp
fcoml
adc
push
jmp
adc
dec
sbb
sahf
dec
cmp
scas
sar
lods
js
or
lcall
and
mov
adcb
je
std
inc
sub
cmpsb
hlt
leave
xor
mov
int
in
aam
dec
dec
mov
insb
cmp
fbld
push
mov
loopne
adc
or
jae
inc
cmp
lods
xchg
adc
testl
int
sub
scas
stos
push
decb
fidivrs
out
dec
std
roll
incb
iret
sub
lcall
cld
or
mov
push
inc
loopne
mov
sub
into
fmulp
mov
mov
inc
adc
cmp
and
xor
cmp
lcall
test
jo
mov
sbb
xor
and
incb
setge
std
mov
pop
in
nop
cmp
push
in
or
and
imul
repz
cmp
add
cmp
lret
xor
or
out
mov
shl
xchg
pushl
in
inc
mov
cld
test
addl
iret
xor
pushf
pusha
and
fildll
movsb
dec
sar
fbld
mov
ds
jle
xchg
imul
xchg
repz
aam
push
jl
mov
xchg
mov
ljmp
out
xchg
jg
out
xchg
xchg
fdivl
cmpsl
dec
test
xchg
js,pt
iret
insb
out
lcall
push
test
outsl
aam
mov
add
gs
xor
notb
insb
stos
jl
mov
lock
in
jg
cmc
movsl
pop
mov
fidivrl
push
jmp
cmp
loop
es
stos
out
lret
mov
leave
bnd
jae
adc
push
cmp
mov
sti
sti
in
dec
nop
je
or
iret
out
out
mov
das
push
stc
jg
jl
lea
mov
sbb
fistps
sbbl
mov
ljmp
mov
xor
int3
int
pop
mov
jg
clc
cmp
jns
idivl
ret
out
jmp
into
push
sub
jae
js
shrl
pop
clc
test
sub
xchg
loopne
aaa
test
mov
push
sysret
mov
out
mov
xlat
push
std
lcall
cmp
test
push
cltd
cmp
pop
jnp
cmpsl
jp
popf
and
sbb
pop
call
and
adc
cmp
fisubrs
xchg
sub
popf
sti
ds
mov
pushl
in
sub
mov
pop
sub
paddusb
out
inc
nop
aad
imul
xchg
fcmovnu
xchg
ud1
push
fwait
inc
ror
call
jns
mov
je
rolb
cmp
pop
out
lahf
add
xchg
mov
clc
jp
cmp
enter
insb
cwtl
sti
mov
shll
xchg
adc
ljmp
out
test
jle
dec
add
cltd
fcomip
pushl
xor
cmp
mov
or
lahf
sbb
inc
mov
dec
out
xorb
rcr
test
shlb
push
jns
incl
add
daa
cld
jp
imul
dec
jecxz
pushf
es
ljmp
ljmp
repnz
push
mov
int
xchg
mov
xlat
int
adc
jle
jecxz
mov
or
das
icebp
out
cltd
shl
sbb
mov
in
out
and
filds
xchg
or
stos
sub
test
data16
stc
jae
inc
mov
in
jnp
jg
les
enter
clc
jmp
dec
cmp
movsl
mov
push
inc
ret
push
lods
in
jns
hlt
push
in
dec
out
add
cmp
roll
adc
shll
rcll
std
inc
loopne
aad
xchg
cmp
iret
ss
fstl
jle
xchg
sbb
jl
pushl
sti
xor
std
ja
pop
movsl
adc
imul
jnp
sub
out
pop
std
lods
sahf
fisubrs
push
inc
out
orl
repnz
lret
sbb
pop
loop
mov
push
arpl
pop
shl
je
adc
clc
das
jle
mov
decl
ja
test
repnz
fsub
push
fldcw
mov
lods
mov
mov
jmp
jbe
dec
fsubrl
repz
push
cmc
ss
enter
mov
inc
jle
pop
add
adc
repz
inc
add
cmp
out
mov
jle
mov
fdivrl
dec
dec
mov
mov
or
test
mov
lret
jecxz
fsubrs
mov
incb
mov
mov
outsl
push
xchg
int3
mov
ret
hlt
cmpsb
into
cli
dec
push
push
lahf
out
jp
outsb
sbb
test
push
or
ljmp
cmc
aaa
cwtl
add
mov
scas
pop
jecxz
std
call
push
enter
decl
mov
jecxz
cmp
ds
ret
pop
insb
add
in
add
push
movsb
mov
push
leave
shr
xchg
aaa
inc
push
mov
jg
cmpsl
movsl
in
mov
ret
pop
mov
push
daa
shr
addr16
inc
or
pop
fdiv
push
jp
ret
ljmp
sarl
mov
in
mov
push
pop
inc
lahf
loope
mov
lcall
mov
jmp
mov
fwait
sbb
sub
mov
fisttps
jle
cli
cltd
dec
mov
dec
rol
jo
jmp
xchg
pop
mov
mov
jo
cmp
mov
mov
jge
decl
pop
xor
adc
push
movsb
push
gs
test
mov
push
sbb
dec
pushf
or
push
cmp
pop
xchg
jle
cld
and
jg
shr
jbe
sbb
aaa
lret
stos
pop
lret
loop
inc
in
jg
pop
fsubrs
sub
aaa
or
std
pop
lret
in
decl
sub
pop
jae
dec
push
jl
hlt
fstps
daa
cmpl
lock
out
insb
addr16
jmp
mov
cmpsb
jb
or
aas
lods
popf
xchg
test
cmp
hlt
cmp
not
mov
fiadds
jp
mov
outsl
sub
adc
ds
jb
in
mov
test
mov
push
sbbl
mov
icebp
jo,pt
test
mov
incl
or
dec
mov
outsb
mov
out
sbb
bound
loopne
insl
mov
mov
es
roll
sub
mov
out
imul
cmpl
lret
fcomps
mov
outsb
cmp
scas
pop
mov
incl
sti
dec
fistpl
dec
mov
pop
rorb
push
jl
sar
mov
sbb
push
fdivr
into
mov
addl
idivb
les
aaa
lret
pop
adc
adc
psadbw
lcall
add
cvtpi2ps
cmpsb
mov
cmp
pop
clc
sbb
dec
pop
ss
ss
call
in
clc
mov
pop
add
fcoml
aaa
dec
dec
and
ffreep
pop
mov
ljmp
stos
outsl
js
out
push
popf
adc
mov
bound
lcall
cli
adc
pop
cld
jp
push
and
adc
xor
icebp
xchg
stos
ljmp
push
mov
mov
icebp
sti
insb
ljmp
ljmp
mov
jg
test
shll
scas
lea
scas
gs
loopne
mov
mov
ficompl
daa
mov
jg
aad
mov
cmp
mov
cmp
in
hlt
xchg
cld
jmp
int
hlt
mov
or
mov
cmp
add
jg
jg
xor
addr16
and
fs
inc
xchg
ret
xchg
pop
pop
ja
jmp
sub
repz
cmpsl
hlt
mov
loopne
out
sub
pushl
outsb
das
inc
clc
lret
dec
dec
pusha
pop
xchg
clc
dec
call
loope
pop
dec
jbe
pop
mov
pop
and
stc
rcrl
xchg
lods
push
xor
xchg
mov
data16
ljmp
fildll
stos
lock
fcmovb
fldt
cmp
xchg
pop
insb
xchg
scas
push
mov
icebp
lcall
imul
jmp
idivl
cmpsl
lods
ljmp
clc
stos
xchg
lods
fildll
cmpsl
popf
xchg
jnp
cmpsb
pushf
mov
test
divb
jg
mov
push
cltd
xchg
cmp
mov
mov
mov
adc
jecxz
mov
jp
mov
icebp
aam
lds
lods
das
nop
out
cmp
push
pop
mov
scas
lcall
pusha
cmp
popa
addb
insb
leave
mov
jae
or
arpl
cld
ljmp
js
jp
dec
sub
sub
in
cmp
xchg
ret
push
imul
fcomip
mov
cmp
shlb
add
cmp
push
or
incl
jl
xor
xorl
pop
xor
jecxz
jb
adc
mov
fistps
and
imul
notb
mov
gs
mov
std
sub
jmp
out
rclb
scas
xlat
push
loopne
cmp
mov
fisttpl
decl
lock
and
dec
jge
xchg
movsb
fsubrs
leave
scas
ret
outsl
mov
aam
loopne
mov
loope
dec
clc
sub
push
cmp
adc
mov
dec
sti
xor
ljmp
movsl
decl
adc
push
stos
pop
cmpsl
jbe
in
sti
aad
lcall
pop
sbb
jnp
mov
clc
in
pop
cmpsl
ljmp
cmp
hlt
jg
in
lods
out
dec
aaa
shll
and
pushf
fs
dec
clc
out
or
jl
adc
decl
lea
jge
roll
and
adc
lcall
jle
xchg
dec
shll
dec
lret
inc
push
fucomi
xchg
xor
dec
imul
and
cmp
jmp
gs
dec
mov
inc
mov
pop
repz
inc
pop
mov
lcall
and
sub
xchg
sub
push
jle
push
sbb
nop
ds
roll
test
pop
mov
sbb
xchg
xchg
int3
cmp
cs
sbb
pushl
popf
and
jmp
xlat
xchg
cs
rcl
cmp
push
add
jmp
in
cmp
lcall
dec
or
nop
cli
jp
and
decl
sub
pushf
in
jbe
mov
cs
cmp
xor
out
jns
mov
lock
retw
xor
cmp
into
mov
mov
fincstp
movsb
test
jbe
pop
inc
jp
roll
lret
sbb
mov
add
cmp
pop
xchg
sbb
aad
pop
adc
xchg
incl
mov
cmc
jb
and
sub
sbb
in
mov
and
ljmp
stc
mov
mov
xchg
ja
jo
mov
or
mov
xchg
pop
jns
das
sar
ret
mov
dec
mov
adc
mov
push
jg
in
cmp
imul
fcomip
lods
std
js
movsb
mov
negl
cmpsb
sti
stc
or
fbstp
xlat
sub
pushl
and
les
jnp
xor
icebp
and
lods
mov
les
les
fcmovb
or
test
dec
pop
pusha
jl
mul
push
and
sbb
mov
out
pop
push
out
push
out
xor
jge
or
pushl
call
pop
dec
lock
and
hlt
in
lds
aam
iret
push
hlt
scas
test
mov
lods
mov
jmp
add
out
std
std
test
movsl
js
cmp
jmp
mov
cli
or
fstp
sti
pop
inc
add
mov
repz
inc
cld
sbb
in
inc
or
lds
ljmp
mov
cmpsl
sar
push
sbb
imull
cs
in
pop
jmp
clc
inc
mov
dec
lahf
dec
mov
js
mov
repnz
cli
add
xchg
xchg
ret
inc
ret
mov
mov
insb
cmpsl
outsl
push
lods
inc
pop
mov
jg
movsb
add
mov
lock
xchg
jge
fistl
bound
ss
xchg
pop
jnp
pop
sub
inc
sbb
scas
dec
cmpsl
inc
lods
ljmp
pop
in
ljmp
fldz
sti
icebp
xor
mov
lret
js
cmc
out
out
out
and
jnp
mov
adc
ljmp
mov
bound
stc
xchg
push
fucomi
scas
pusha
inc
test
add
in
lea
push
lahf
inc
inc
mov
sahf
lret
fs
lcall
lods
fidivs
pushl
in
repz
jp
js
inc
cld
adc
jne
movb
ljmp
mov
cmp
cmp
adc
loopne
out
stos
test
xlat
xlat
ljmp
stc
xor
sti
into
jle
bswap
push
fisttps
push
lcall
out
clc
mov
int3
jbe
add
fs
push
pop
and
pop
cwtl
aam
in
mov
popa
xchg
shrl
or
ffreep
jbe
ror
sar
xor
idivl
and
jl
sarb
adc
call
stos
scas
imul
cmp
jae
mov
mov
pop
adc
mov
jnp
outsb
outsb
cltd
jge
fcomip
ljmp
addr16
in
outsb
popa
dec
mov
clc
ljmp
in
adc
out
inc
ljmp
ds
jbe
out
cld
ret
insl
insb
jno
adc
outsl
pop
jmp
ljmp
xchg
test
mov
pop
int
clc
cmpb
lock
push
hlt
mov
loope
pop
and
pushl
mov
mov
ret
and
and
in
adc
vhaddpd
das
in
and
ljmp
and
ljmp
jnp
sub
mov
filds
jb
and
sub
pop
incl
mov
dec
in
dec
mov
xlat
dec
ljmp
fidivs
xchg
loope
lock
incl
xchg
mov
xrelease
adc
xchg
xor
ds
jg
clc
adc
and
incl
lock
jmp
xor
mov
int3
xchg
mov
in
cmpsl
scas
out
push
xchg
imul
int
or
cmp
or
xchg
cmpsb
lods
test
jg
jp
addb
jmp
sbbb
mov
cli
sti
or
popa
add
or
or
call
sub
aas
cli
cld
rcrl
pop
addr16
push
js
pop
leave
loop
jg
gs
xor
push
into
ss
test
xor
jmp
mov
dec
or
mov
aad
cmp
cs
je
aad
add
lcall
imul
add
dec
sahf
int3
das
push
mov
std
mov
jne
sahf
mov
mov
jns
push
or
movsl
movsb
repz
int
clc
ljmp
notb
sub
and
orb
push
fstpl
stc
or
enter
insb
adc
push
idiv
cld
xor
loopne
dec
lea
push
mov
fisubrs
pop
aas
pop
int
in
mov
call
fiadds
leave
movsb
loope
ss
cmp
mov
pop
repnz
adc
repz
loopne
das
pop
pop
xchg
xchg
mov
dec
sar
jg
cmp
cmp
lahf
cld
cmpsb
mov
pushf
cmc
jmp
cmp
xlat
popf
popa
cmp
fsubrs
xorl
cs
inc
adc
aad
lcall
fwait
xor
push
sbb
push
mov
dec
daa
out
idivl
adc
mov
inc
mov
jne
xchg
into
sbb
das
lret
in
mov
rorl
inc
repz
insl
jg
dec
test
divl
xchg
int3
and
pop
ror
out
fcomip
push
mov
ret
add
or
mov
mov
mov
mov
scas
out
mov
mov
in
mov
dec
and
mov
stos
mov
mov
test
clc
popf
cmp
ret
popf
xor
jne
cli
orb
push
out
mov
dec
jge
jns
addr16
cmp
int3
mov
dec
fstpt
pusha
cs
test
xchg
mov
lcall
add
xor
sbbb
xor
div
add
scas
and
fcmovne
pop
cmp
scas
mov
dec
call
lea
outsl
lods
aam
sahf
je
cmp
dec
inc
fimuls
inc
inc
cmpsl
fcomip
sub
push
iret
enter
icebp
mov
adc
je
test
jns
fs
adc
subb
aad
ret
je
pushf
repz
movsl
inc
call
dec
in
mov
ret
inc
adc
pop
mov
fbld
jb
scas
pushf
popf
mov
jno
imul
rcll
test
sub
daa
test
jl
aaa
repz
outsl
inc
decl
inc
repnz
imul
gs
std
or
push
pop
cli
aad
push
jl
dec
and
jns
xchg
cmp
fdivr
ljmp
push
loope
paddq
insl
inc
loope
test
jmp
pop
icebp
mov
push
mov
mov
test
dec
mov
jns
imul
repnz
in
cld
std
cli
or
enter
addr16
sbb
div
or
xchg
aam
aaa
ficompl
jno
jmp
sub
sub
inc
mov
add
aaa
cmp
out
mov
sbb
icebp
jecxz
sbb
call
inc
out
cli
into
xchg
xor
pop
xchg
add
mov
cmp
pop
les
mov
fdivl
sbb
pop
pop
fucomi
inc
fistl
add
loopne
dec
add
sbb
in
mov
mov
dec
pop
insb
repz
push
rclb
jnp
jp
mov
xchg
sbbb
pop
cmp
jmp
mov
mov
fistps
testb
mov
xor
and
cwtl
sbb
dec
jg
dec
in
sub
incl
iret
mov
cld
pop
mov
dec
adc
cwtl
test
jp
pop
push
repz
popl
fcomip
sti
cmp
and
testl
ljmp
push
mov
stc
jmp
enter
pop
mov
lahf
ljmp
and
mov
ljmp
push
stos
cli
pop
mov
seto
int
cmp
mov
repz
xchg
push
and
fcomip
lcall
mov
imul
mov
mulb
jp
add
xor
sub
stc
daa
sti
ja
sahf
in
movsb
pushf
decb
imul
add
repz
in
push
mov
in
sub
sub
cmp
ljmp
mov
cs
pop
aas
pop
es
push
pop
pop
cmpsl
loop
loop
sub
test
cld
fadds
dec
xor
mov
sbb
icebp
notl
std
test
test
sar
cmpsb
cmpsb
dec
in
inc
movsb
pop
inc
jo
imul
outsb
sar
decl
and
ss
xor
push
mov
adc
shr
and
and
loopne
mov
jmp
psllw
mov
sbb
sbbb
mov
fwait
shrl
push
ds
orl
inc
cs
push
imul
outsl
loopne
fimull
mov
addr16
hlt
mov
call
pop
add
scas
mov
cwtl
loope
inc
clc
adc
hlt
idivb
fstl
mov
cwtl
mov
in
or
inc
iret
scas
out
and
jp
pushf
cmp
jmp
inc
in
aam
inc
sbb
int
push
cmpsl
adcl
cmpsl
jg
aaa
hlt
addr16
inc
pop
das
or
out
clc
jmp
ror
pushf
out
xlat
cld
call
imul
push
divl
jle
lcall
sub
xchg
sahf
push
cmp
pushf
scas
in
stos
out
xor
cmp
test
jp
inc
push
push
sahf
inc
xchg
xchg
fs
mov
ljmp
add
lret
xchg
movsb
in
repnz
mull
mov
pop
push
test
outsl
cltd
iret
lcall
decl
jle
pop
sbb
jb
jnp
mov
cmp
push
cmpsl
jne
cmpsl
jno
add
das
add
dec
ljmp
adc
cmp
insb
popf
jb
sub
stos
sbb
loopne
inc
mov
adc
imul
dec
mov
fildll
jmp
lahf
test
outsl
sbb
insb
jmp
sbb
ja
fsubrl
fisubl
loope
nop
lock
aas
jge
nop
xchg
xchg
mov
mov
mov
repnz
push
cmp
jmp
dec
mov
jmp
push
addl
xor
fcompl
outsl
adc
lcall
mov
inc
pop
int
push
stc
gs
xchg
clc
and
and
stc
testb
pushf
push
lcall
xor
xor
frstor
negl
mov
cli
mov
jg
movsl
loope
aas
dec
popa
adc
dec
adc
xchg
stos
push
ja
cmp
jle
call
add
divb
out
cmpsb
lds
xlat
lds
incl
mov
je
push
arpl
cli
imul
in
mov
push
jmp
lods
jne
adc
adc
sbb
loope
leave
fdivs
pop
or
or
test
in
decl
divl
add
leave
lret
jmp
iret
movsl
mov
add
decl
clc
push
sbb
xlat
fidivs
aad
aas
mov
push
jo
cmc
lret
and
fidivrs
pop
into
sub
jecxz
jg
pusha
cld
and
mov
in
dec
and
jne
incl
mov
rolb
mov
lods
mov
dec
add
inc
ljmp
pop
inc
out
mov
adc
movsl
imul
hlt
pop
insb
cmp
push
jge
repnz
jg
mov
test
or
xlat
add
cmp
cmpb
call
lahf
xchg
inc
clc
cli
enter
testb
test
sbb
lcall
fcomip
push
movsb
test
iret
movsb
faddl
sti
lret
sti
and
or
jg
mov
mov
cli
mov
mov
ljmp
les
cmp
jbe
pop
cmc
mov
inc
jp
pop
mov
shrb
jecxz
jle
movsb
inc
push
mov
cs
adc
fmuls
pop
jg
mov
adc
push
outsl
push
ljmp
cmpsb
add
jae
in
sarb
pushl
jne
inc
shr
pusha
jnp
arpl
adc
push
out
repnz
jb
or
movsl
ljmp
push
lods
out
adc
xchg
ljmp
std
call
les
repz
hlt
std
call
and
lahf
insb
lret
sub
outsl
push
push
xchg
cmp
mov
add
lret
lock
jle
mov
pop
sub
push
cmp
or
lret
add
push
dec
jp
stos
inc
sahf
cltd
loopne
incl
cmp
fcompl
sti
cmpsb
lret
mov
in
clc
sub
sub
jne,pt
je
inc
xchg
mov
fiaddl
xchg
out
dec
stos
in
push
mov
mov
sbb
outsb
or
jg
mov
or
push
jmp
push
test
lock
adc
jecxz
loop
ljmp
adc
mov
xchg
in
mov
jp
mov
cmp
pop
mov
sub
push
sti
scas
add
fdivrl
cmpsb
loop
mov
pop
mov
mov
fisttpll
push
leave
out
dec
jg
pop
in
mov
cmc
shrb
mov
mov
fadds
push
pushl
pop
es
or
fisttpll
inc
into
or
adc
loopne
in
shl
fsub
jmp
adc
jg
popf
in
enter
mov
cmp
leave
mov
jbe
and
jmp
mov
shr
mov
pushf
in
cmpsb
icebp
pop
rol
leave
push
xchg
sub
sbb
call
pushf
enter
inc
adc
push
pop
iret
rdmsr
outsl
ret
repnz
push
in
mov
mov
daa
cmp
cli
pop
call
outsb
and
in
mov
sarb
icebp
pushl
out
pop
cmpsl
sbb
movsb
mov
fisubl
imul
pushl
mov
lfs
lcall
loope
push
dec
mulb
scas
ficoml
insl
hlt
dec
mov
cmpsl
ljmp
jl
sahf
adc
mov
shlb
pop
loop
in
aaa
mov
aaa
cltd
ja
insb
movl
inc
aas
and
outsl
jns
mov
dec
xor
outsl
outsl
ss
sbb
call
std
dec
daa
or
fimuls
shrb
repz
inc
inc
icebp
outsl
cmp
mov
mov
movntps
subl
jmp
js
clc
mov
push
sti
pop
sub
scas
jo
lret
adcb
or
jg
popa
in
lea
lret
xchg
jbe
dec
or
pop
mov
jbe
pop
int3
adc
lcall
push
xlat
dec
pop
mov
and
mov
call
jge
call
stos
jae
pop
insl
mov
push
cmc
mov
jnp
push
pop
les
enter
leave
pop
das
cli
incl
jns
notb
cli
inc
add
icebp
fidivl
sub
in
int
ret
loope
or
jg
fdivs
das
push
xlat
lods
jb
sarl
or
clc
xchg
sahf
xchg
push
decl
cmp
fldcw
xchg
outsl
out
nop
sbb
jmp
and
mov
mov
mov
cmp
fsts
dec
loope
cmp
mov
aaa
hlt
xlat
lock
imull
movaps
pusha
mov
mov
lds
out
mov
mov
cmp
je
je
mov
ljmp
push
sar
and
int3
xchg
add
andb
sbbb
mov
mov
cltd
or
fiadds
jmp
mov
test
mov
pushf
xchg
in
insl
cmp
hlt
scas
cli
decl
push
rcl
cmpsl
outsl
in
or
jle
xlat
mov
or
enter
dec
cmovne
push
test
stos
mov
bound
mov
lret
mov
sub
call
jbe
push
insb
add
cmpsl
inc
push
mov
ret
cmc
jno
jb
pop
dec
int3
filds
xlat
cmp
push
insl
sarb
mov
arpl
push
sbb
inc
scas
dec
mov
pushf
shlb
xor
inc
stos
ds
mov
mov
adc
inc
dec
dec
jno
add
icebp
push
stos
sti
in
stos
mov
jb
decl
cwtl
icebp
mov
in
gs
movsl
jp
sbb
mov
mov
pushl
push
cmp
mov
adc
sti
mov
inc
fisttpl
btc
leave
push
and
xchg
popfw
in
std
mov
jns
cmp
fcomip
jmp
ret
dec
iret
inc
hlt
pusha
in
dec
lret
jnp
jle
shr
test
and
jle
cltd
sbb
pop
jnp
and
in
call
scas
jg
jnp
cmp
mov
lods
mov
stos
mov
lahf
and
dec
fnstsw
call
xchg
jecxz
mov
lcall
jle
mov
mov
fisttpll
aas
into
push
jg
cmc
clc
adc
push
imul
ret
add
xor
sbb
sub
push
iret
bound
mov
mov
das
pop
test
cmpsb
mov
sub
pop
jge
add
adc
es
dec
int
push
imul
test
xchg
ljmp
cmpsl
jle
nop
out
cmpsl
out
ss
and
call
jmp
mov
in
lahf
aam
push
inc
popf
mov
orl
inc
add
cmp
fwait
mov
xor
jp
xor
sub
pushf
aas
leave
adc
out
mov
add
inc
sti
dec
xchg
pop
dec
jne
push
mov
incl
mov
call
imul
mov
cmpb
pop
adc
loope
push
fistpll
xchg
dec
imul
xchg
sbb
sub
clc
mov
xor
lea
in
jle
out
mov
scas
cmpsb
movsl
decl
mulb
pop
popa
enter
push
inc
and
ja
lds
add
dec
jecxz
stos
cli
xor
subb
xchg
mov
mov
iret
out
push
fucomp
mov
adc
inc
xor
hlt
inc
cwtl
lods
call
cmc
pushl
mov
pop
push
push
stos
mov
cmpsl
mov
mov
xor
sbb
sub
mov
pop
imul
jp
fisubrs
jg
int3
dec
push
mov
stos
mov
sub
or
ja
or
lret
je
push
jbe
outsl
jmp
cmp
shr
test
dec
sbb
pushl
rcrb
aad
loop
sub
inc
ljmp
or
out
shr
xchg
mov
add
in
leave
inc
jmp
movsl
scas
cmpsl
lock
incl
push
ss
dec
out
int
imul
divl
out
in
inc
js
loop
in
add
rclb
cmpsb
out
andb
loop
cmc
js
sub
push
lea
mov
cmpsl
adc
cmp
rclb
push
dec
test
daa
inc
lods
clc
xor
dec
fnstsw
dec
push
mov
shrb
jae
mov
ss
out
adc
pushl
push
mov
mov
mov
imulb
inc
movb
mov
adc
cld
sahf
out
dec
mov
pushl
hlt
mov
mov
enter
adc
xchg
and
jmp
and
lds
aas
cmc
jg
add
les
xchg
cmpsl
movsl
test
pop
ret
ja
mov
cmp
mov
sti
int
sbb
ljmp
fisubs
sub
add
pushl
lods
shl
or
sti
hlt
pop
ret
push
out
cld
in
mov
bound
cmp
rcrl
sti
cmp
adc
es
push
out
push
fimuls
stc
and
mov
add
les
inc
cld
jg
mov
sbb
mov
imul
lea
mov
push
adc
mov
stc
cmpsb
and
decl
je
sub
shrb
test
insl
mov
or
stos
mov
aam
mov
ds
ret
mov
outsb
mov
sub
fs
jno
insb
mov
lods
les
outsb
xchg
test
loopne
idiv
out
pop
xlat
call
push
xchg
jns
lahf
call
in
mov
push
inc
mov
pushf
scas
clc
jg
jmp
pop
mov
fmuls
pop
pushf
hlt
iret
sbb
ljmp
ja
add
jle
mov
pop
call
inc
sub
in
jnp
hlt
dec
mov
mov
into
hlt
mov
iret
cmpsb
mov
cmp
pop
mov
xchg
mov
enter
loope
test
xchg
sub
iret
mov
add
ljmp
sahf
outsl
lahf
and
clc
mov
jnp
aam
add
pop
add
xchg
mov
pushf
in
xchg
or
loopne
fdivrs
loop
decl
je
pop
jno
jns
mov
stc
sbb
push
mov
mov
add
jmp
sahf
and
lret
mov
push
sbb
pushl
out
mov
sti
mov
in
iret
les
movsb
outsb
xchg
jle
clc
sbb
cld
decl
insl
dec
lcall
fcmovnu
sti
fldt
outsl
scas
jecxz
mov
movsl
les
leave
stc
xchg
loop
cwtl
imul
scas
test
aas
hlt
cmp
daa
xchg
in
stos
fcmovnb
scas
dec
and
xchg
xor
cmpsl
div
add
mov
ja
lcall
pushl
stc
mov
movzbl
fdivrl
lcall
jns
mov
imul
xchg
add
scas
sahf
setb
mov
lock
xchg
xor
fwait
ds
pminsw
push
filds
imul
mov
push
iret
fidivs
inc
xor
dec
stos
mov
cltd
inc
xchg
sub
cmp
lcall
sti
pop
test
sahf
dec
out
dec
pop
dec
sahf
mov
add
sub
scas
push
or
jecxz
pop
int3
hlt
incl
js
lret
addr16
iret
push
out
cli
pop
pop
popf
vpsrlw
sub
jg
das
nop
andb
call
lds
icebp
stc
pop
xchg
mov
xchg
pop
mov
cmp
div
out
mov
gs
out
push
rcl
jecxz
push
into
incl
fnstsw
jle
mov
aad
std
mov
inc
xchg
push
lock
std
push
mov
pushf
loopne
sbb
es
adc
push
lret
insb
sbb
aaa
sbb
jecxz
stc
loope
ret
call
es
mov
call
mov
fcompl
inc
cmpsl
clc
shrb
xchg
stos
jmp
mov
pop
and
push
repnz
pop
sub
mov
jl
dec
add
sub
daa
mov
pop
cld
shrl
mov
sbb
sbb
mov
adc
aam
nop
imull
pop
imul
shrb
cmp
push
in
xchg
mov
inc
push
jg
leave
dec
test
lock
xchg
adc
ljmp
repnz
mov
cmc
shrb
lret
daa
repz
cmc
mov
js
daa
mov
clc
mov
xor
mov
lcall
fnstsw
lret
fcoml
dec
jns
xor
adc
lds
jge
nop
xchg
scas
xor
repz
cmp
pushl
jae
dec
add
pusha
or
cli
lock
mov
dec
call
sbb
jmp
sahf
adc
pop
repz
in
js
clc
jo
inc
std
enter
ljmp
sub
scas
pop
xchg
shrl
cld
test
out
xor
incl
in
sub
fidivrl
mov
jmp
push
std
mov
daa
shlb
cld
jmp
mov
cmp
inc
cmp
push
iret
mov
pop
lcall
sub
stos
in
push
mov
outsb
and
dec
in
mov
call
mov
and
fldcw
fisubrs
jle
fs
xchg
das
mov
ja
adc
inc
jmp
jmp
jbe
testl
xchg
dec
jmp
gs
and
xchg
mov
ret
sub
lock
jg
sub
in
jno
enter
adc
iret
call
dec
push
repz
bound
into
and
lcall
leave
filds
cmp
int
clc
cs
inc
movsb
jmp
and
out
lock
add
movsl
jmp
in
pop
cmp
cmpsb
outsl
adc
ja
mov
dec
pusha
sub
iret
adc
sti
call
cli
lahf
xor
xchg
inc
pop
out
xchg
in
pusha
test
int3
jmp
clc
incl
out
fbld
call
sti
jb
data16
add
add
rep
mov
lock
decl
out
mov
negb
push
mov
dec
add
mov
scas
mov
jo
cmp
xor
sti
repz
cli
cli
inc
cmp
sbb
fs
ret
jno
mov
call
std
jle
ljmp
ret
or
or
sbb
jecxz
in
fwait
mov
push
adc
mov
push
mov
or
call
pop
adc
dec
push
mov
inc
xchg
daa
popf
loop
es
fwait
sti
and
inc
jecxz
xor
aaa
imull
adc
add
popa
cli
sub
adc
cli
mov
lahf
push
lods
push
repz
cmp
sbb
fdiv
pop
fincstp
sub
push
into
xchg
stos
fisttpll
out
flds
mov
jmp
aas
rcrl
call
sbb
sub
popa
jnp
adc
lcall
inc
mov
loop
pushl
test
cmp
repnz
gs
jno
ja
push
mov
in
or
add
enter
push
loop
sbb
or
mov
call
mov
lcall
clc
test
aad
sub
ds
lods
icebp
sti
dec
dec
mov
sub
mov
fidivrl
and
sbb
mov
loop
in
adc
or
dec
or
push
jno
pop
ja
xor
or
fs
roll
jb
stc
das
cli
mov
mov
and
xchg
jmp
mov
rolb
pop
add
ret
mov
es
aaa
xor
in
in
mov
add
notl
mov
sti
fisubrl
mov
js
lahf
push
mov
jmp
jmp
cs
pushf
cmc
xchg
sbb
jmp
cmp
mov
sub
in
cmp
fs
inc
jb
je
scas
lods
sub
xchg
jbe
lret
outsl
leave
cld
mov
ljmp
subl
shrl
cmp
scas
mov
cld
sub
cmpsl
lock
jg
pusha
or
sbb
hlt
clc
cmp
sub
inc
push
or
call
into
dec
std
inc
int3
jae
xchg
jb
jg
dec
dec
imul
loope
aaa
repnz
shlb
lcall
mov
cmpb
cmp
mov
mov
jecxz
ror
push
loop
ja
dec
or
psrad
faddl
mov
mov
mov
sub
gs
scas
cli
rorb
stc
jmp
sbb
jg
out
outsb
frstor
stc
sub
mov
push
nop
ret
movsb
inc
cmp
xchg
add
and
mov
fsts
inc
cld
mov
outsb
stos
xchg
loop
dec
dec
sar
lcall
call
es
sbb
loope
addr16
lahf
and
add
jg
nop
push
fiaddl
in
sub
cli
inc
dec
sti
loop
and
cmp
push
iret
lods
cmp
gs
jns
data16
mov
xor
push
push
aad
insb
push
popf
cld
rolb
dec
int
ret
ljmp
and
inc
jo
out
shll
rolb
adc
incl
ret
shl
cmpsb
jae
dec
jne
lods
pushf
stc
jmp
int
lods
xchg
call
out
jmp
push
xor
mov
aaa
test
scas
shlb
fldenv
test
cmp
ljmp
incb
xor
mov
ljmp
add
push
pop
bswap
out
call
decl
jmp
xchg
add
fsts
jo
aam
xchg
mov
int3
sahf
mov
mov
pop
test
fistl
sbb
test
ficomps
enter
test
decl
push
cld
out
fldenv
cmpsl
les
jmp
push
pop
cld
add
outsl
jge
xlat
fsubrp
sahf
lcall
aas
mov
out
and
inc
xchg
pushf
out
loope
jge
jmp
push
pop
aam
lcall
mov
mov
cmp
xchg
iret
adc
dec
neg
daa
int3
mov
dec
movsb
pop
out
lds
and
fidivs
or
decb
scas
pop
int3
jp
shl
or
ljmp
fidivs
xchg
out
clc
mov
stos
cli
adc
jmp
jg
outsl
dec
mov
inc
addr16
pushl
mov
dec
dec
jne
mov
mov
inc
scas
mov
jmp
inc
add
inc
push
cmpsb
aad
jg
je
stc
cmc
enter
sbb
dec
fmuls
rolb
lea
psadbw
push
rorb
cli
jmp
push
incl
call
mov
inc
nop
inc
jecxz
cld
push
leave
xor
sarl
pop
movsb
jecxz
ljmp
inc
jl
clc
rolb
xchg
mov
mov
clc
ljmp
mov
xor
icebp
filds
jb
ljmp
xchg
add
sbb
and
call
pop
and
in
jg
decl
adc
out
incb
sahf
jge
insb
loop
ss
adcb
in
fcmovnu
es
out
lret
sub
cmpsl
rol
cmp
fcmove
fisttps
push
std
or
lcall
jbe
inc
push
pushf
xorl
outsb
pop
in
out
std
jmp
inc
mull
cltd
popf
fisubs
xchg
aad
jle
cmp
xchg
cmc
push
or
jne
fstpl
sbb
mov
push
jbe
push
cltd
out
jb
decl
jge
sub
movsb
lcall
dec
xchg
testb
mov
and
xchg
mov
mov
add
mov
cltd
lret
loop
pop
push
shrl
mov
ja
fidivrs
xchg
js
inc
int3
xorb
loop
fstpt
fbstp
adc
outsb
mov
cld
inc
sub
dec
je
jl
clc
jb
jl
in
dec
push
clc
inc
loope
lea
cmp
xchg
mov
in
incl
repz
mov
inc
lahf
or
scas
xor
dec
repnz
sbb
mov
mov
xlat
rcrb
es
push
shlb
fsub
fsts
hlt
cs
mov
js
test
movsl
add
loope
push
inc
xlat
or
lock
loop
dec
adc
jo
aas
and
dec
fistps
lahf
aad
fs
push
xchg
outsl
lods
repnz
ja
call
cs
fildll
in
mov
add
push
push
cmc
shrb
cmpsl
push
mov
cmp
sbb
dec
adc
insl
lock
lods
push
stc
pop
rcrb
xor
js
inc
ss
jmp
cmp
push
jg
shlb
mov
loopne
mov
fcmovu
push
insb
or
aad
testl
ljmp
out
iret
cmp
jnp
fidivl
adc
mov
pop
stos
push
fisubrs
ljmp
jge
mov
mov
lcall
enter
ss
lcall
jg
cmp
lret
repnz
jp
xchg
sbb
and
jmp
test
insl
add
popf
pop
stos
adcl
imul
loop
push
push
pop
or
cmc
out
cmc
nop
jp
or
cmp
cmpsl
stc
ret
insb
stc
or
gs
mov
mov
sub
cmp
push
mov
cmp
aas
add
hlt
adc
fcmovbe
push
call
push
sbb
and
push
sbb
jle
decl
mov
cltd
dec
loopne
mov
push
data16
stos
inc
jle
lods
dec
dec
xor
xchg
fwait
cmpb
cmpb
jle
push
sbb
add
adcl
mov
ret
sub
popf
call
inc
mov
aad
xchg
roll
push
xor
fwait
or
pop
and
jmp
cmp
pop
int
roll
cmp
outsl
cmpsl
loop
loope
ljmp
mov
outsl
out
mov
sti
stc
fcomip
dec
push
out
popf
subps
cmp
sbb
adc
std
movsl
push
sub
jl
mov
inc
mov
lods
outsb
sub
sbbb
int
ljmp
fidivs
fidivl
arpl
clc
fdivs
int
pop
sbb
clc
ljmp
xor
fldl
sbb
loope
ljmp
cmp
jge
fisttpll
cli
mov
pop
dec
sub
mov
push
das
sahf
dec
xcrypt-cfb
cmpsl
mov
aas
aam
add
mull
xchg
mov
mov
fdivs
rorl
mov
icebp
sahf
cmpsb
clc
mov
sbb
dec
fwait
adc
loope
lods
add
inc
stc
imul
call
clc
mov
dec
int3
outsl
pop
jle
in
scas
inc
mov
sub
fcomi
adc
loope
pushl
cmpsb
cld
cmpsl
dec
xor
mov
mov
or
mov
out
jg
sub
jmp
mov
sub
fmulp
mov
lcall
fcmovnb
test
add
negb
shr
mov
je
adc
test
decl
in
sub
scas
fs
pop
ret
dec
stos
xor
xchg
sbb
call
mov
daa
enter
mull
xchg
dec
js
xchg
sti
scas
hlt
mov
decl
daa
fidivs
in
sbb
nop
ret
in
ret
inc
mov
fildll
inc
jno
aam
out
ja
pusha
imul
jg
sub
in
out
cmp
imul
in
fistpll
push
dec
pop
fcmovnbe
pop
scas
decl
lock
iret
jbe
clc
sbb
enter
xchg
xchg
push
jg
lods
xchg
enter
xchg
add
push
int
sti
dec
mov
enter
jno
shrb
in
or
int
push
add
ljmp
aas
in
cmp
pop
and
sub
clc
mov
cmc
pop
out
dec
dec
ljmp
movsl
push
mov
mov
sbb
call
lods
xchg
aam
adc
jmp
sub
mov
rol
fsubp
add
mov
mov
cli
addb
ds
out
test
jle
je
sbb
mov
sub
in
imul
push
jl
mov
mov
inc
dec
mov
filds
xchg
sti
add
rcrb
jmp
stc
test
dec
jmp
push
das
fmuls
add
mov
mull
bswap
fs
push
pop
repnz
into
push
add
fdivrl
jnp
les
fildll
clc
sub
jmp
mov
or
mov
jae
jecxz
les
notb
mov
out
sbb
mov
mov
xchg
jo
clc
decl
jb
jnp
mov
and
add
inc
lret
js
leave
sub
ret
out
inc
xchg
in
les
cmpsl
scas
or
xchg
fbld
sbb
xchg
cwtl
icebp
stos
loopne
mov
les
push
pop
int3
or
cli
mov
imul
push
and
add
rcr
shrb
leave
sbb
ret
and
imul
xchg
xchg
jg
xchg
faddl
xchg
adc
insl
lret
fcoml
pop
ret
ds
push
sbb
in
roll
addr16
push
out
cmp
mov
popf
mov
push
add
lcall
mov
test
repz
sbb
jne
decl
jg
mov
out
push
mov
jmp
outsl
cltd
insb
stos
cmp
mov
ficompl
cmpsl
ss
sub
and
aam
jo
jmp
push
fmuls
pop
cmpb
push
push
ja
mov
clc
pop
into
inc
je
aaa
xor
and
mov
and
mov
enter
repz
mov
mov
mov
push
inc
cli
fdivrs
jl
mov
cmc
and
inc
out
icebp
xchg
sbb
jg
mov
outsb
in
out
pop
xor
mov
sub
fwait
xor
pushf
nop
jb
arpl
jns
mov
call
sarl
lods
iret
dec
mov
outsb
push
js
mov
fmulp
xchg
pop
fs
adc
push
icebp
xchg
dec
out
fsubr
clc
incl
dec
gs
jmp
xlat
push
add
and
pop
sbb
ret
mov
push
or
sti
cmp
sub
jg
das
test
or
stos
decl
decl
or
idiv
int
adc
jns
out
adc
push
icebp
pushl
and
jnp
lret
and
lcall
xchg
fistpl
jmp
sub
push
stos
dec
cmp
pushl
decl
daa
stos
loope
cs
and
data16
jno
xor
jb
lcall
jge
std
lret
push
lret
cmc
lret
cwtl
mov
clc
lahf
mov
fistpll
mov
aas
std
pop
lret
mov
adc
mov
push
lods
mov
inc
stos
lods
mov
stos
cwtl
lret
jmp
test
mov
sti
sbb
lret
out
jno
cli
out
cmpsb
test
lcall
sti
dec
ret
int3
xchg
sar
xor
hlt
rcrl
xchg
lods
rcll
and
clc
fidivl
lcall
xor
cmp
loope
mov
mov
outsl
lret
jo
repnz
int
std
add
clc
lods
clc
cmp
inc
scas
shlb
pushl
call
lcall
out
pop
dec
mov
out
stc
and
jecxz
lret
cmp
das
div
inc
mov
fsubp
inc
sub
or
cli
mov
sub
repnz
mov
cmp
addb
sbb
jbe
outsb
inc
ja
lds
std
imul
inc
idiv
ds
jl
and
mov
repz
xor
jb
scas
jmp
mov
std
ss
mov
ret
mov
mov
fdivs
mov
mov
inc
dec
mov
pop
test
scas
jnp
mov
mov
int3
mov
mov
ljmp
jmp
out
mov
sahf
ret
push
std
adc
jecxz
jl
jle
jl
jmp
inc
cltd
jl
outsb
xor
lcall
out
jns
imul
ljmp
jb
adc
adc
jmp
cld
ljmp
sbb
jg
daa
cmpsb
pushl
jg
out
ss
xor
push
pop
in
mov
nop
cmp
push
pop
xchg
add
lods
cli
mov
push
mov
mov
mov
mov
sub
adc
loop
out
mov
xchg
jo
outsb
mov
xchg
pushl
movb
mov
pop
insb
je
aas
jge
cld
inc
adc
jnp
cli
jge
xchg
xchg
sbb
fwait
or
hlt
pop
xchg
xor
jecxz
cld
mov
test
addr16
sahf
jns
cmpsl
arpl
icebp
out
ljmp
mov
in
dec
into
fsubp
xchg
xchg
inc
or
cmc
lcall
cwtl
mov
jno
hlt
clc
call
mov
and
mov
sahf
jecxz
cltd
les
xchg
mov
ja
add
insb
or
fst
cmpsl
xchg
mov
mov
test
xlat
shr
mov
imul
mov
int
dec
cmpsl
jnp
jecxz
aas
xchg
add
cmpsb
jg
notb
mov
out
jge
lahf
imul
mov
in
and
test
xchg
add
mov
rclb
mov
pushf
xorb
push
push
dec
add
xchg
sbb
jmp
leave
lods
pop
outsl
ret
iret
movsb
aas
xchg
jg
jo
cmpsb
fildll
loopne
lods
pusha
mov
or
and
fidivs
jmp
cmp
ja
inc
iret
ja
pop
dec
jmp
cmp
sbb
lods
ret
and
ljmp
mov
cwtl
out
pop
ret
sub
mov
in
mov
neg
xor
decl
mov
xchg
push
xor
fnstcw
loope
cli
loop
rclb
lds
jecxz
sbb
insb
out
clc
repz
out
ss
mov
or
and
and
pop
push
and
scas
incl
cmpl
popf
std
dec
loope
jno
mov
dec
sbb
fbstp
mov
pop
mov
sbb
inc
leave
jmp
or
adc
adc
jo
fcoml
sarl
aas
ljmp
adc
out
lret
lods
mov
xlat
fcompl
rcll
push
jmp
es
lcall
std
cld
jo
pop
push
adc
jge
sub
pop
cld
imul
push
dec
aad
ljmp
dec
jp
dec
lret
pop
fmull
mov
and
jb
push
in
outsb
xor
add
jg
and
or
movsl
xor
faddl
outsl
clc
pushl
repz
leave
xchg
popf
jg
ret
dec
std
sub
adc
mov
jne
iret
comiss
add
gs
decl
mov
mov
out
mov
ss
mov
decl
cmpsb
sbb
mov
int
sub
outsl
ret
cmc
add
call
mov
jnp
out
fs
add
sbb
pop
mov
jg
ss
out
xchg
cli
cmpsb
mov
int
pushf
or
add
sbb
icebp
or
test
bound
ljmp
mov
ret
xchg
fxtract
xor
in
push
xchg
repnz
cmp
xor
inc
test
shl
aad
movsb
mov
ja
mov
icebp
enter
dec
cmp
imul
jo
shufps
std
mov
adc
lcall
mov
out
pop
call
and
imul
scas
xor
push
and
scas
add
pop
pop
outsb
push
shlb
decl
add
mov
mov
sarb
fwait
cwtl
cltd
je
pusha
outsb
add
push
popf
jecxz
dec
push
mov
cld
push
xchg
data16
dec
bound
aas
pushf
insb
sarl
jp
pop
cmp
lcall
ja
xchg
fstps
pop
dec
adc
fisttpl
jno
ljmp
mov
xor
into
fldt
loope
fbld
daa
jl
mov
pop
pusha
adc
lret
and
mov
cld
add
jmp
jg
or
test
jp
in
jno
in
jg
cmp
mov
adc
jb
xor
mov
incl
cwtl
or
not
cmp
jne
mov
orb
and
addl
mov
fstl
pop
push
call
xchg
dec
std
dec
popf
ss
push
aam
pop
ss
loope
adc
incl
into
stc
bts
mov
push
jmp
imul
or
cli
imul
popf
fucomp
scas
mov
pushl
push
fsubrs
adc
cmc
mov
call
jne
or
cld
jg
mov
xchg
cmpsl
repz
jp
sbb
sub
pop
icebp
push
add
pop
outsl
dec
rcr
cmp
test
and
xchg
pop
jg
push
jmp
std
mov
cld
mov
mov
imul
inc
scas
push
icebp
stos
jmp
push
cli
pusha
jne
loop
mov
jge
enter
xchg
add
inc
in
cmp
out
outsb
stc
adc
ja
call
aad
pop
into
cmp
aas
fidivrl
and
sub
push
add
mov
cmpsl
and
push
cld
call
fidivrs
icebp
pop
dec
push
mov
sbb
mov
inc
mov
std
jbe
fistl
rclb
xlat
adc
or
xor
dec
mov
or
lret
adc
mov
cmc
xchg
insb
mov
or
ret
push
es
out
rolb
imul
adc
pushl
xchg
push
mov
and
dec
jg
inc
fs
fsubl
les
jnp
or
jo
rcll
pop
sarl
out
xchg
jge
repnz
push
out
mov
xchg
repz
jge
dec
mov
pop
ja
sub
or
xor
ja
dec
lret
mov
mov
rcr
sarl
inc
test
push
jb
inc
cmpsl
mov
ljmp
lcall
outsl
ss
xchg
sahf
push
jns
mov
in
lcall
aam
adc
sbb
ds
push
jg
outsl
mov
aas
faddp
jae
insl
insb
testl
imul
mov
aam
xchg
sar
inc
jmp
imul
cmp
and
sahf
je
push
jle
arpl
inc
hlt
mov
push
leave
pop
je
xchg
xchg
loop
enter
jns
fdiv
dec
adcl
call
or
icebp
mov
dec
incl
dec
sub
and
cmp
mov
fidivs
sar
push
fistl
jns
fcmovnu
xchg
mov
add
mov
test
shlb
mov
fisttps
pop
cmpsl
jmp
ljmp
adc
int
icebp
fninit
fisubrs
and
cld
lea
daa
sub
xor
fldt
fcomp
sub
arpl
or
data16
push
lods
mov
int3
push
ljmp
pushl
cmp
xlat
cld
or
jnp
test
cmp
sbb
jecxz
mov
sbb
jg
incl
aam
dec
mov
dec
hlt
xchg
rorb
int3
push
outsb
fstpl
int
push
push
aaa
in
idiv
idivb
push
push
pop
jmp
rcl
pop
push
cld
out
xchg
mov
add
mov
pop
arpl
add
rep
arpl
aaa
imul
outsb
fisttpl
xorb
fsubrl
fdivrp
ss
subb
dec
iret
ficomps
jns
cmp
jae
sub
int
stos
cmp
push
lods
clc
and
mov
push
xchg
js
out
int
imul
pop
sub
mull
xchg
outsb
or
jecxz
jle
out
lcall
das
mov
pop
rolb
xlat
and
push
stos
fsubs
xchg
inc
repz
ret
dec
mov
pop
inc
sbb
and
dec
incl
sub
nop
popf
sub
push
sbb
nop
jbe
out
pushf
imul
movsl
xchg
mov
lcall
cs
and
mov
xor
mov
lock
out
add
lock
dec
adc
jo
rcl
loopne
cli
fwait
lret
call
les
cmp
mov
call
pop
icebp
loope
negl
sub
xchg
add
ret
add
addb
adc
popf
in
dec
jecxz
inc
sarb
mov
adc
fistpll
cs
hlt
aad
aaa
imul
hlt
mov
mov
push
pop
ljmp
rcrl
loopne
xor
out
inc
sahf
loope
pop
icebp
int3
pop
xchg
incl
sbbb
ret
push
xchg
scas
aam
cli
ficomps
idivl
dec
call
daa
sub
loope,pn
fucomi
ficomps
mov
dec
psubsb
jle
ds
pushl
pushf
or
push
fadd
and
movsl
loop
dec
mov
push
sub
jb
inc
sbb
ljmp
xor
roll
mov
mov
xor
jle,pt
ror
jp
cwtl
addr16
into
call
push
cli
aas
addr16
dec
ret
ljmp
iret
xor
inc
sbb
xchg
add
testl
xchg
nop
inc
and
out
call
lcall
pushl
mov
jae
in
xchg
add
xchg
mov
lret
cmp
movsb
jb
fidivrl
fxtract
pop
shrl
inc
insl
aaa
cltd
jb
mov
xor
repnz
mov
incl
rolb
mov
call
int3
or
dec
push
outsl
adc
dec
cmpsl
cli
fisttpll
sbb
data16
fimuls
rcrb
sti
call
nop
cmp
mov
inc
call
lcall
fists
pushl
stos
inc
sub
mov
adc
aas
lret
jp
jl
ficompl
cmp
jge
dec
loope
decl
mov
cltd
aad
xchg
hlt
cmpsl
idiv
xchg
cli
lret
clc
decl
cmp
cli
imul
dec
lahf
sti
mov
cli
mov
xor
sub
mov
or
leave
mov
outsl
ja
lret
ja
leave
push
or
mov
fxch
push
jge
mov
enter
push
sbb
ljmp
andl
int
dec
movsb
out
mov
stos
mov
push
xchg
sar
filds
cs
fisttpl
fnstenv
pop
imull
xchg
stos
pusha
mov
sub
rol
fwait
mov
lahf
jle
mov
cld
xchg
xor
pop
dec
sub
mov
mov
shl
jbe
push
out
mov
call
fildl
addl
jg
cld
ss
iret
adc
jmp
mov
add
push
ret
jo
jg
adcb
ret
push
aas
lock
jg
pop
add
inc
in
sub
lods
sub
mov
jmp
out
mov
int3
adc
sub
pop
xor
aad
pop
xchg
cmc
data16
fucomip
xor
jnp
sbb
jne
sub
popf
mov
repz
stos
out
mov
cmp
pushl
sub
ja
lock
jp
shr
push
icebp
inc
mov
or
fcmovb
push
cld
mov
ljmp
shl
mov
or
shrb
add
push
jne
jecxz
mov
cld
lds
pavgw
test
out
mov
das
mov
adc
std
cmp
inc
mov
stos
jae
bound
jmp
mov
stc
mov
or
push
and
inc
lret
sti
std
sbb
test
dec
lret
lahf
aas
pop
push
leave
inc
mov
xor
add
je
scas
mov
jns
clc
xchg
shrb
push
xchg
call
xchg
or
adc
xchg
out
shlb
imul
ret
xor
xor
push
pop
or
xor
imul
pop
fisubrs
in
mov
ja
shll
or
xchg
jb
pop
fsubrl
mov
add
out
sub
out
stos
jb
lcall
clc
js
out
scas
out
out
fwait
shll
mov
jg
push
repnz
lret
inc
xchg
fisubs
pop
pop
jae
nop
dec
fwait
pop
and
add
or
pushl
pusha
andl
je
fcomp
sub
cwtl
lcall
call
mov
xchg
and
sahf
int
mov
cld
std
ret
adc
test
cmp
sub
jae
fimuls
iret
mov
out
std
pushl
and
cmp
jb
fisubrs
test
or
aam
cmc
pop
lret
adc
push
jg
dec
pop
sbb
movsb
mov
xchg
xchg
pop
out
sbb
pushl
and
push
push
push
pusha
mov
mov
pop
cmp
and
mov
push
enter
mov
in
and
out
iret
lock
fcomip
jns
outsl
rclb
and
popf
sub
fmul
inc
lret
mov
push
incl
sahf
hlt
jge
pop
mov
pushf
outsl
jmp
xchg
and
lcall
test
jg
sahf
add
out
mov
scas
aas
pop
push
pop
sahf
aam
sahf
insl
jns
ret
out
xchg
fdivs
cli
add
mov
xor
into
add
jg
push
mov
daa
or
out
xchg
out
nop
in
std
or
ljmp
repz
clc
call
mov
pop
lods
cmpsl
xchg
leave
rclb
std
cld
push
xor
inc
out
lahf
mov
fstps
adc
lods
in
sub
pop
adc
decl
xor
icebp
outsl
ret
mov
stos
iret
cwtl
outsl
aad
pop
insl
jae
js
ud0
lcall
divb
jp
stc
or
pop
in
xchg
inc
pop
lret
pusha
inc
xchg
ljmp
popa
call
ret
sti
push
sahf
out
loopne
add
inc
pop
jnp
movl
sahf
cmp
push
lahf
pop
dec
es
jo
xor
mov
cmc
xrelease
lods
cli
xor
mov
xchg
rcrl
stos
adc
adc
incl
pushf
fsubs
out
scas
sub
dec
repnz
fwait
add
mov
pop
mov
xlat
pop
je
outsl
lcall
fistpl
lcall
push
les
pop
cmp
sti
add
adc
decl
dec
outsb
sub
sub
mov
sub
sbbb
imul
aas
jg
ljmp
hlt
pop
fildll
jecxz
dec
push
ss
pushl
shll
movsb
rcrb
ds
stc
fcoms
outsl
cld
outsl
cmp
ret
mov
push
mov
inc
fildll
mov
jg
sbb
jge
popa
push
fbstp
jmp
shlb
sahf
pop
mov
pop
or
jmp
pop
out
jno
in
shl
mov
pop
or
scas
xor
jmp
leave
sub
imul
mov
test
sub
dec
jle
or
fcos
call
add
stos
mov
cmp
mov
push
inc
out
push
pop
out
movsl
js
xchg
insb
decl
or
xor
arpl
pop
fcomps
pushf
aas
jmp
rcrb
and
out
cwtl
shll
sub
ja
std
jl
dec
mov
xlat
sub
adc
sti
test
mov
or
cld
fbld
icebp
ss
test
cmc
out
popa
add
mov
lcall
ljmp
in
sub
jle
add
pushw
pop
std
or
mov
mov
ret
mov
add
push
add
sub
test
push
and
jmp
outsl
fisubrl
ljmp
in
outsl
addb
pop
pop
or
ljmp
les
ljmp
or
or
sahf
insb
pop
sbbb
add
pop
sbb
sbb
pop
fmul
les
es
inc
sbb
enter
sbb
mov
push
cmp
xchg
cmp
les
lcall
push
push
daa
mov
mov
outsl
lock
in
imul
in
fs
out
fcmovnu
imull
sub
cld
sahf
mov
xor
fcmovne
pop
push
push
shrb
mov
mov
rol
inc
mov
pslld
das
mov
mov
aas
jns
call
mov
fnstsw
loop
shl
aas
xlat
fdiv
dec
fmul
shrb
arpl
repz
out
sbb
sti
pop
mov
pushl
fimull
or
mov
mov
xchg
roll
call
mov
inc
scas
mov
ja
shll
repnz
mov
aas
cmc
mov
sub
test
insl
cmp
jg
rcrb
data16
mov
stos
mov
push
jl
cmp
push
add
jg
cmpsb
add
int
add
shrb
xorb
inc
sti
push
std
stos
call
daa
call
fimull
mov
mov
add
hlt
ljmp
inc
fdivrs
insb
call
xchg
lcall
ljmp
imulb
inc
cli
and
out
xchg
cmc
lods
xchg
pop
hlt
jmp
outsl
loope
fists
sub
pop
mov
mov
mov
fmull
repnz
scas
shl
repz
div
xchg
pop
mov
xchg
aas
jl
decl
mov
sbb
out
dec
xor
xor
or
mov
rol
aaa
decl
jle
mov
stos
mov
popf
out
not
les
mov
shll
mov
xchg
sti
clc
cmp
lods
cld
sub
mov
subl
mov
adc
pop
mov
in
sub
pop
jle
push
insb
enter
cli
adc
dec
ret
jecxz
sbb
mov
out
loopne
pop
iret
jmp
leave
or
aad
and
jecxz
shll
movsl
jmp
pop
insl
jmp
data16
inc
xchg
fisttps
decl
xchg
dec
sub
stos
out
mov
repz
loopne
jmp
out
loop
adc
inc
cs
xchg
das
sbb
xlat
xorb
cli
call
daa
in
es
ret
sub
adc
and
jle
pop
xchg
pushl
test
out
es
pop
sti
lret
adc
pop
scas
cmpsl
push
out
add
cmp
aaa
lods
add
and
fcomps
pop
fwait
lock
and
iret
add
mov
ror
fistpll
scas
xor
jnp
push
mov
fcomip
sub
mov
mov
fwait
xlat
ficomps
push
and
jp
mov
jg
pop
popa
cmc
push
xlat
cmpsl
pop
xchg
cli
iret
xchg
out
push
xchg
aas
xchg
xchg
aas
out
jae
mov
daa
sbb
scas
cli
jg
mov
pop
les
jecxz
and
push
aam
fstl
flds
out
dec
in
inc
pop
out
pop
outsl
int
pop
xchg
adc
jg
mov
jge
push
lret
test
mov
clc
pop
out
mul
cmp
pushl
dec
mov
movsb
dec
sarl
bswap
ror
xchg
mov
incl
jns
fildl
mov
aad
cld
movsb
pop
or
xchg
daa
fdivrl
jmp
popf
imul
clc
and
sbb
mov
xchg
stos
das
mov
call
pop
inc
lahf
jmp
lcall
or
js
into
in
cld
pop
test
call
call
cli
in
movsl
xor
cmp
inc
sub
pushl
inc
imul
ss
mov
jg
pop
pusha
enter
sub
out
lock
leave
outsl
clc
mov
int3
mov
mov
xchg
mov
jg
stos
mov
mov
lret
mov
adc
int3
dec
cmpsl
iret
sub
mov
stos
int3
xchg
iret
lret
int
lret
add
mov
lret
mov
dec
lret
jno
cltd
lret
jge
xor
lret
xchg
mov
push
std
mov
int3
cmpsl
dec
cld
mov
add
adc
dec
mov
jge
mov
lods
popf
movsb
sub
std
cltd
mov
mov
loop
add
cmp
mov
mov
fcoms
clc
mov
jl
lret
mov
xchg
hlt
or
mov
incl
clc
iret
out
into
leave
je
mov
decl
mov
popa
idivb
mov
mov
aad
iret
lcall
rcrl
push
xchg
push
push
gs
pop
nop
sarl
jg
dec
mov
ret
test
sub
mov
mov
adc
out
lret
leave
into
mov
xchg
js
lahf
iret
test
ljmp
pop
or
data16
jb
in
je
iret
jle
fists
popf
push
mov
clc
pop
or
mov
loop
mov
clc
decl
int3
and
fadds
mov
aad
mov
inc
jno
ljmp
pusha
jmp
ficomps
jl
sahf
xor
add
cmpsl
inc
leave
cmp
scas
movsl
int
repnz
aaa
cld
cwtl
shll
stc
stos
dec
mov
pop
mov
mov
andb
cmp
mov
js
dec
loop
mov
mov
lea
dec
xchg
addr16
inc
cmp
lret
xlat
mov
pop
fcomps
pusha
shll
sub
sbb
xchg
nop
mov
push
xchg
fndisi(8087
decb
cld
push
lret
add
ret
lret
cli
push
mov
jno
ror
xchg
ljmp
notl
mov
scas
mov
xchg
mov
call
sahf
icebp
jl
mov
shr
pop
int
mov
in
fidivs
cs
out
lret
inc
mov
mov
stc
jno
andl
ds
or
into
or
ljmp
lret
and
inc
dec
xchg
int
lods
incl
jecxz
xor
orps
xor
xchg
xor
pushf
or
jae
xor
leave
stos
jge
dec
ds
jg
lods
push
mov
into
loopne
fwait
adc
mov
mov
rorb
ss
loope
or
mov
dec
movl
mov
mov
pop
pop
aad
lcall
icebp
xchg
mov
mov
mov
push
jle
int
popf
sahf
dec
ud0
jnp
rorb
ljmp
sbb
stc
jge
lea
test
cmpsb
lret
rcr
ljmp
leave
jge
push
movsb
repz
into
jo
xor
xchg
or
stc
pop
xchg
pop
push
xchg
mov
in
popa
push
inc
mov
enter
mov
ljmp
adc
dec
pop
int3
sub
test
ror
lret
jecxz
jmp
iret
fcmovu
mov
xchg
sub
mov
into
pusha
add
or
or
ljmp
int
rcrl
push
cli
ljmp
insl
mov
push
sti
adc
mov
jno
ljmp
int3
std
jnp
cmpsb
jae
mov
cmp
sar
in
out
sti
mov
inc
rcrb
push
test
lds
dec
pop
rcrb
mov
mov
iret
or
test
xor
je
pop
cmp
mov
sahf
cmc
sub
out
mov
dec
sbb
cmp
mov
int
popa
jae
fdivrl
inc
cmpsb
cmc
lcall
adc
push
push
xchg
mov
mov
jl
jg
sbb
lcall
cmp
rclb
lock
push
add
das
mov
adc
lret
cwtl
pop
ds
leave
hlt
test
stos
or
decl
xor
sub
loop
ret
lcall
sub
jno
pop
cli
lahf
mov
jl
lock
mov
add
inc
adc
adc
loop
into
nop
adc
pop
loope
push
lret
or
loopne
mov
mov
imul
mov
xchg
into
in
pushl
sbb
jns
out
xor
cld
std
call
xor
insb
out
jo
loope
pop
jmp
aas
mov
and
jo
and
in
icebp
enter
mov
cli
in
mov
jno
lock
lods
shll
or
lcall
daa
push
sbb
icebp
repz
and
test
fadds
cmp
mov
aas
dec
arpl
inc
mov
xor
xchg
aad
dec
sub
cs
or
jmp
inc
les
into
jbe
lret
mov
lret
call
lcall
mul
pushl
testb
imul
fcmovne
pop
daa
inc
add
insb
or
in
andb
add
hlt
fdivrs
loop
pop
xchg
dec
jno
jne
add
clc
incl
icebp
pop
test
push
repz
xchg
lret
push
fucomp
mov
das
clc
incl
jl
inc
in
xchg
sarl
xlat
xor
std
lds
test
stc
pop
aam
add
sti
inc
mov
js
xorl
mov
sahf
dec
ljmp
out
unpcklps
lods
daa
sbb
lret
mov
sub
mov
dec
movsl
dec
xchg
mov
jo
orb
mov
hlt
in
jg
stc
je
or
pop
aas
cs
and
sbb
add
call
pop
lret
xor
ret
out
jg
sub
push
mov
incl
cli
mov
mov
inc
pushl
fsubr
pop
aad
lret
jge
loope
sub
xlat
xchg
cmp
call
fnstenv
gs
mov
shr
stc
dec
insl
xchg
loope
lret
lock
fildll
push
mov
nop
lret
push
mov
ljmp
lret
jne
and
outsb
fldt
mov
lock
adc
inc
sbb
mov
out
jnp
fldt
ret
arpl
xchg
call
cmp
jl
push
mov
repz
push
add
jl
lock
and
enter
cmc
cmp
jns
incl
bound
mov
jno
jmp
dec
dec
test
dec
test
std
jg
sub
les
aad
rcll
mov
jge
pushf
std
mov
ja
outsb
repz
xor
add
pop
aam
cmp
mov
mov
jns
jg
das
leave
repz
jp
mov
lahf
or
in
or
mov
std
dec
sahf
inc
int
and
aas
sbb
push
sbb
call
push
sbb
pop
std
fimuls
xor
inc
cmpsb
push
out
stc
icebp
xor
lahf
push
sub
dec
and
push
cmp
xchg
daa
push
push
lods
pop
jg
cmp
pop
loop
add
adc
mov
outsb
and
add
ljmp
lcall
xchg
push
pop
cmp
lods
jg
dec
lret
or
ljmp
adc
in
or
daa
push
cmp
pop
ret
cld
dec
out
sbb
dec
sbb
call
loopne
jge
pushf
mov
cmpsl
push
jae
fisttpll
sahf
push
inc
jl
mov
push
das
and
bound
in
push
xchg
cwtl
lods
and
sub
jg
sub
je
in
insb
lods
sub
jnp
cmp
jae
outsl
jbe
mov
ret
fcomip
lcall
int
out
fsub
fmuls
pop
jne
shl
cmp
cmp
mov
call
dec
xchg
xchg
xchg
mov
sbb
fwait
insb
mov
fstl
pushl
pop
enter
mov
jl
mov
flds
push
pop
sarl
test
lret
rcrl
pop
ja
ror
cmp
std
pop
lret
xchg
shlb
aam
mov
repnz
jecxz
dec
cmp
sbb
inc
cltd
insl
int
xchg
jae
jl
daa
lahf
add
out
push
sbb
imul
testl
lret
jns
or
inc
add
pop
lods
aas
out
pop
pop
and
adc
xchg
mov
aas
fucomp
sarl
test
mov
dec
js
outsb
cli
ljmp
mov
in
cmp
jae
punpcklwd
push
lcall
adc
cwtl
inc
in
cld
stc
sbb
lods
stos
jle
incl
or
into
jne
jg
mov
push
cmp
inc
and
mov
in
ret
into
inc
mov
cmp
xor
pushl
into
stc
repnz
mov
iret
in
popa
js
or
mov
outsl
ss
jmp
adc
clc
cmp
xchg
push
mov
test
fs
inc
lods
stc
test
mov
lcall
test
xor
sub
mov
lret
and
or
decl
ds
mov
lret
cltd
dec
icebp
mov
adcb
shlb
jecxz
adc
lock
sarl
mov
dec
js
lods
iret
xlat
call
adc
iret
js
push
call
mov
cld
lock
cmpsl
shll
clc
or
and
or
jns
sub
jo
das
addb
mov
cmp
jle
adc
stc
mov
sub
adc
test
loope
and
leave
pushf
fwait
in
icebp
mov
cmp
in
cmp
dec
ret
jmp
push
sar
sub
pop
mov
xchg
or
pusha
std
lcall
icebp
pop
push
or
pop
mov
outsl
lods
fmuls
dec
imul
fisubrl
hlt
fstpt
shlb
mov
lea
aam
insb
je
ffreep
shl
ljmp
lahf
mov
int
jo
mov
cmp
imul
lret
ret
xor
pop
cmp
movb
and
sub
scas
in
jecxz
fwait
push
decl
mov
ss
jl
aad
xchg
push
out
imul
pop
incb
jne
push
jne
fnstcw
pop
mov
icebp
lret
push
sbb
fistpl
decl
jns
inc
test
lahf
push
aaa
push
idivb
and
fs
sub
lock
test
test
movsb
cltd
movsb
dec
xor
jmp
addr16
jmp
testb
out
jb
and
lcall
lcall
fstpt
into
std
jecxz
fcomip
repz
adc
cli
js
aaa
fidivs
enter
imul
dec
jns
sbb
push
pxor
sbb
mov
inc
into
dec
lock
out
shlb
out
lods
mov
xchg
out
dec
pop
out
das
cli
pushl
fstpl
xchg
arpl
or
cmp
scas
pop
jl
mov
nop
push
xchg
sahf
pushf
mov
rcrb
push
repz
in
sbb
lods
mov
aam
rorl
cwtl
cltd
cld
aad
sbb
push
jg
mov
lret
hlt
jno
rolb
xchg
lock
mov
pop
dec
lret
mov
xchg
inc
mov
inc
cld
mov
jno
nop
adc
repz
std
and
int
jae
and
decl
loope
inc
jno
jbe
out
jle
pusha
es
cmp
stos
cmp
inc
ja
out
aas
imull
mov
push
cwtl
movsb
jne
in
repz
loopne
xchg
mov
sbb
sbb
out
pop
or
adc
lahf
xchg
xchg
mulb
inc
outsb
mov
cmp
pop
repnz
jb
pop
sub
mov
dec
jge
inc
int3
call
cld
xor
inc
sti
jnp
inc
sbb
cmp
jg
lret
push
iret
stos
pmulhw
sbb
dec
xchg
xchg
outsb
push
dec
adc
aas
aad
cli
dec
mov
cmp
and
inc
mov
xor
cmpsw
std
test
and
lcall
js
mov
inc
test
and
lahf
bound
fildll
data16
mov
xchg
nop
add
incl
movsl
cmpsl
lret
adc
mov
sbb
hlt
imull
cmpsl
or
ja
xor
sub
rcrl
div
mov
mov
mov
mov
js
and
cmp
out
clc
pop
lods
cmp
idiv
mov
mov
push
mov
movsl
and
jnp
and
cmp
jp
mov
inc
rorb
cmc
push
arpl
out
inc
cmp
daa
insl
push
ss
sbb
call
mov
dec
push
insl
shl
insl
push
dec
out
add
mov
push
fisttps
jmp
or
lret
stos
add
inc
pop
and
fdivs
lock
and
ljmp
mov
push
dec
pop
pop
out
adc
xchg
xchg
jmp
xor
or
pop
pop
data16
cmp
cmp
negl
bound
loop
stos
push
or
mov
addr16
ficompl
outsl
mov
out
and
je
pushf
movsb
xor
push
mov
ljmp
hlt
addr16
movsb
jl
cltd
mov
mov
icebp
add
incl
mov
insb
push
mov
call
mov
fisubs
cmc
mov
lret
xchg
pop
xchg
sbb
loope
addl
jle
ja
mov
mov
push
rdtsc
dec
es
pop
rol
jg
adc
stc
pop
lret
and
lret
jle
push
mov
lcall
pop
add
mov
mov
sub
iret
inc
stc
inc
mov
dec
pop
or
dec
mov
ret
mov
mov
cmp
stos
push
insb
adc
adc
sbb
shll
jl
or
pushl
stc
pop
sbb
gs
cmpb
leave
outsl
into
lcall
adc
lods
mov
cli
mov
faddp
test
or
jg
orl
adc
jg
sub
push
adc
shll
add
mov
xlat
xlat
roll
sar
jnp
bound
fistps
orl
adc
xchg
shlb
xor
jmp
mov
decl
icebp
cmpsl
jns
and
cmpsl
add
stc
imull
daa
sub
mov
daa
inc
or
xlat
jmp
das
sub
xchg
clc
inc
fsts
aas
scas
inc
dec
std
adc
cmpsl
ret
push
fcmovnb
pop
mov
pop
pop
bnd
jno
call
aaa
xchg
ds
jg
mov
and
sbb
sbb
mov
push
add
sub
lea
loope
and
lret
mov
xlat
daa
ret
cmc
test
idivl
jecxz
jg
adc
adc
stc
repz
and
dec
scas
sbb
fwait
or
test
shr
xchg
inc
call
cld
das
mov
sbb
xlat
sti
mov
cld
xchg
mov
divb
sti
in
cli
cmpsb
fcompp
cld
jg
stc
adc
inc
adc
mov
rorl
test
adc
add
ljmp
imul
stc
arpl
inc
xchg
stc
jecxz
fsts
icebp
decl
or
clc
jecxz
push
mov
ret
stc
adc
ss
ret
jmp
loope
outsl
xor
pushf
xchg
gs
lret
lret
inc
or
mov
pushl
aas
pop
xchg
aas
dec
outsl
sub
fs
stc
sub
adc
push
or
idivl
sub
fisubrl
leave
adc
inc
lret
mov
inc
adc
cmp
je
call
lcall
js
xor
sbb
mov
inc
add
clc
out
call
fdivp
mov
icebp
lahf
std
int3
in
je
xchg
gs
lcall
test
test
fcmovnu
out
sub
imul
aaa
call
aaa
xor
and
and
push
sbb
sbb
test
jmp
clc
ljmp
cmpsb
xor
fbstp
lcall
inc
sahf
mov
out
push
push
push
sub
pop
mov
int
loopne
mov
jl
stc
loope
push
scas
hlt
dec
loop
and
push
ja
popa
loope
insb
insb
clc
mov
out
jno
mov
ljmp
lret
pop
stc
mul
subl
mov
aad
addl
xorb
pop
push
add
out
mov
sbb
sbb
out
mov
sti
jg
jmp
fcmovnbe
ret
push
lret
ret
mov
add
scas
popf
nop
mov
push
xchg
ljmp
out
jno
cwtl
mov
adcb
repz
out
fists
cmpsb
pop
inc
fdivrl
js
fbstp
insb
dec
ljmp
lret
sbb
mov
jne
scas
or
mov
in
mov
pop
iret
jmp
cli
rcrl
sbb
clc
cld
idiv
ror
mov
inc
mulb
ret
xchg
add
loopne
std
jmp
std
and
and
xchg
les
lret
adc
inc
movsb
faddl
leave
in
in
clc
pop
dec
and
idiv
ljmp
idiv
aad
movsb
or
aad
jl
xlat
insl
aas
lcall
scas
loopne
popa
div
aam
jb
subl
out
mov
push
loope
xlat
outsl
leave
mov
shll
sbb
mov
push
xchg
xchg
sub
inc
xor
xchg
xchg
dec
std
fldt
inc
adc
mov
adc
add
scas
mov
incl
mov
nop
cmp
sbb
mov
icebp
mov
fildll
test
lcall
stos
mov
mov
in
negl
loope
or
std
mov
cmp
jg
xchg
sti
stos
shl
jg
aas
sbb
ds
movsb
mov
pop
inc
mov
fistpll
outsl
gs
inc
or
inc
pop
add
loopne
mov
sar
sub
pop
roll
xor
pop
test
jmp
std
rcr
jmp
mov
shrl
ss
ja
pop
in
adc
sub
adc
pushl
push
loope
test
push
ret
cmp
mov
lahf
insl
push
test
mov
in
cld
mov
add
in
cmp
daa
push
loop
push
insb
add
jl
iret
clc
push
and
sbb
mov
icebp
sbb
sarb
notb
sti
das
push
cmp
adc
mov
xchg
jge
jnp
arpl
aad
icebp
outsl
sbb
loop
sub
jp
hlt
add
sbb
pop
iret
dec
pop
dec
lahf
dec
xchg
push
clc
pop
xchg
aad
push
cmp
adc
aas
adc
add
scas
dec
leave
jno
in
frndint
xchg
outsl
xchg
popl
cli
mov
incl
clc
lret
icebp
mov
lock
into
fisttpll
popf
test
inc
pop
mov
paddd
incl
mov
les
jns
adc
test
adc
cmp
sub
or
cld
out
sar
mov
mov
inc
pop
pop
dec
bound
sbb
hlt
sub
mov
pop
out
les
stos
pushf
push
idiv
fldl
fwait
sbb
adc
icebp
cmpsl
jg
repnz
outsl
sbb
push
push
sahf
out
cmpsb
jle
in
lret
fcomps
mov
icebp
ljmp
jg
jg
jg
repnz
js
mov
out
add
dec
je
add
call
cli
dec
gs
enter
and
enter
lea
lock
dec
sahf
lods
sbb
cmp
xchg
sub
incl
cld
in
out
std
pop
push
sti
clc
test
add
and
mov
mov
mov
sub
sbb
adc
orb
cltd
pop
int
repz
hlt
jle
sbb
sti
int3
out
filds
inc
or
adc
jne
and
add
call
mov
pusha
cld
clc
repnz
icebp
lock
outsl
loopne
xchg
loopne
cld
scas
push
sbb
xor
xor
mov
pop
scas
jl
fucomip
mov
lahf
or
arpl
add
or
iret
nopl
adc
adc
xchg
jno
fists
lret
adc
mov
mov
call
dec
pop
sarl
repnz
mov
out
adc
mov
divl
push
or
sub
movsl
xchg
mov
mov
idivb
xor
jo
adc
js
sbb
and
outsl
loopne
out
pop
jp
mov
cmc
stc
dec
fcom
cwtl
pop
push
and
pop
xchg
pop
sub
cwtl
cmpsb
sti
inc
xchg
xor
xchg
rcl
push
into
mov
jg
rorb
xchg
ljmp
hlt
jns
mov
ljmp
stos
js
cwtl
fdivrs
aam
or
dec
xchg
js
stc
push
je
pop
mov
add
cmp
sti
call
fs
cmpl
fs
cld
cld
fsubs
ja
xor
push
es
push
pop
cmp
xor
loopne
daa
test
decb
je
in
mov
arpl
adc
adc
cmpsl
fsubp
push
aas
xchg
adc
incl
and
mov
icebp
inc
jmp
cmp
jno
sub
cmc
loopne
ljmp
stos
out
aad
shll
xchg
add
dec
fcomp
fldcw
cmp
pop
lods
into
xor
push
jecxz
sub
mov
cld
push
dec
ficoms
in
and
add
ret
jg
push
mov
lret
imul
xor
push
fidivrl
rclb
adc
push
ret
xor
cmp
les
xor
stos
pop
mov
jl
mov
or
add
fwait
test
adcl
sub
incb
pop
pop
mov
inc
test
test
xor
mov
xchg
or
jnp
lock
xchg
sub
mov
mov
imul
addr16
nop
push
clc
push
sti
mov
aaa
daa
adcl
adc
push
pop
arpl
xor
ja
cmp
das
jmp
xor
and
xchg
ret
adc
jnp
das
sbb
aaa
push
push
cmpsb
push
lea
and
das
lea
ret
push
mov
mov
imull
jg
mov
lret
add
jle
fldl
stos
mov
pop
push
mov
sysret
xchg
mov
jle
test
int
std
and
mull
hlt
push
scas
repz
add
ss
das
repz
xchg
mov
push
cmp
ret
add
clc
out
mov
out
dec
mov
pop
xlat
and
pop
mov
mov
ret
lahf
inc
mov
std
mov
mov
add
jg
repnz
push
mov
pop
adc
pop
xlat
mov
imul
xchg
xchg
cmpl
jnp
jecxz
push
mov
insb
jb
imul
arpl
pop
sub
std
idiv
mov
add
mov
mov
mov
and
sub
inc
ret
roll
ljmp
cmp
aaa
xchg
test
out
nop
or
js
adc
lcall
jae
and
adc
nop
arpl
fwait
rclb
dec
lods
jno
aam
ljmp
mov
call
or
jmp
jl
inc
push
or
jmp
xorb
xchg
outsl
lds
daa
xor
lahf
pop
out
addr16
scas
adc
je
add
jecxz
lret
mov
jg
cmpsl
fwait
popl
inc
call
rol
sub
pop
push
inc
pusha
adc
das
and
fwait
aaa
cwtl
fistpll
lock
iret
mov
inc
xlat
mov
push
push
xlat
testb
in
jne
test
insb
outsl
inc
insb
pop
pushl
ret
mov
aaa
cmp
lret
mov
cli
add
xchg
fcmovnbe
cltd
mov
sbb
rorb
andb
arpl
sar
jo
or
in
cmc
es
xchg
faddl
cmp
incl
inc
cmp
icebp
sub
mov
cmp
cmp
nop
rorl
fisttps
sub
sbb
divl
jmp
lcall
or
mov
adc
jmp
clc
xchg
roll
cwtl
stos
fwait
ret
add
pop
adc
outsl
aas
add
pushl
clc
xor
push
add
aas
stc
stos
imul
inc
xor
push
jno
stc
sbb
stc
rorb
cmp
cmpsl
sub
in
repz
repz
call
test
daa
stc
xlat
mov
scas
push
fcomps
xor
cli
ss
aaa
lcall
les
xor
roll
cmp
lcall
roll
mov
dec
mov
popaw
sub
imul
int3
xchg
neg
inc
sbb
inc
test
popa
lret
fisttpll
and
stc
push
adc
jns
xor
loope
adc
call
out
pop
pop
and
and
ret
sub
adc
rorl
jecxz
pop
xchg
je
in
pop
inc
push
mov
dec
fsts
sbb
cmp
icebp
clc
jp
scas
cmp
push
xchg
test
lock
push
adc
mov
pop
icebp
jae
mov
and
dec
pop
imul
pop
aaa
jno
shl
mov
mov
ret
jg
adc
or
call
addr16
mov
cmp
jmp
dec
shll
jg
in
add
mov
inc
aas
dec
icebp
dec
push
jg
shrl
icebp
xchg
ljmp
dec
adc
sti
test
inc
mov
adc
cltd
addr16
ret
test
xchg
or
fdivrs
imul
shlb
stc
sub
and
mov
mov
adc
psrlq
jge
add
jbe
jp
stc
xor
shll
fcmove
cmp
sub
shrl
xchg
mov
mov
push
incl
cwtl
mov
mov
mov
pop
mov
into
das
out
jg
or
sahf
inc
mov
xchg
adc
pop
mov
cmp
mov
jg
ss
jns
xor
lahf
sti
mov
cmp
shl
mov
xchg
out
add
clc
pop
mov
lock
cld
jns
xorl
icebp
pop
incl
mov
aas
fcmovnb
xor
fld
mov
cmp
ret
xchg
mov
pop
test
mov
test
fcomip
mov
test
mov
add
test
push
movsl
call
ja
decl
mov
enter
out
js
push
mov
and
inc
push
fildl
sub
pop
test
decl
addl
test
and
test
fmull
jle
mov
xor
sbb
sub
rcl
inc
cmp
adc
or
pop
jns
or
and
shr
aaa
add
incl
jmp
aas
inc
and
sbb
fcmovu
mov
xchg
loope
out
cli
or
mov
mov
push
or
or
test
pop
icebp
fstps
xchg
mov
push
stc
adc
mov
jg
andl
out
cmp
or
or
xchg
mov
fwait
lock
xor
loope
jecxz
inc
push
popa
jp
sbb
sbb
ret
js
push
pop
hlt
jnp
sbb
or
xor
pop
add
or
outsl
dec
sti
daa
scas
adc
call
mov
call
mov
sbbl
les
iret
dec
bound
jg
decl
jmp
jecxz
ret
jecxz
jae
jmp
add
xlat
mov
ljmp
clc
pusha
sbb
mov
lret
stc
jnp
add
lret
pusha
icebp
push
dec
loop
jg
jg
jp
cli
pop
subb
mov
test
enter
std
das
mov
and
push
out
pushf
or
in
mov
ss
lcall
loope
aaa
sub
add
out
stos
fldenv
test
push
mov
lret
rclb
loop
push
incl
mov
xchg
jns
xor
mov
fdivrs
loope
mov
cld
fmul
leave
clc
fstpt
push
jne
ljmp
xor
jmp
cs
ror
aaa
mov
loopne
inc
out
fbstp
pop
fdivr
ljmp
dec
je
push
lahf
jns
mov
lret
lock
cld
mov
push
popa
mov
stos
inc
or
cli
loopne
std
imul
mov
ja
xchg
mov
pop
mov
lods
loopne
enter
jg
dec
scas
mov
aad
fsub
xchg
cltd
test
ret
cmpsb
mov
inc
leave
icebp
mov
push
jne
test
subb
cmp
mov
in
lods
shlb
shrb
jmp
adc
int
in
lds
call
lods
addb
mov
adc
fdivl
mov
pushl
clc
aad
rcl
dec
call
ja
sub
nop
imul
in
add
decb
or
lret
hlt
loope
shlb
sbb
add
dec
test
xchg
mov
sahf
idiv
lcall
and
or
sbb
or
add
aas
cmp
dec
push
incl
inc
mov
push
pop
cs
gs
negl
rcrb
push
test
cmpsl
ljmp
icebp
inc
clc
lods
outsb
push
cwtl
fmull
testl
cwtl
cli
scas
lock
andb
nop
stos
nop
call
sub
in
mov
sub
mov
mov
clc
pop
cld
psubb
pop
bound
shl
out
mov
or
dec
inc
xchg
scas
push
std
loopne
jmp
mov
jo
into
stc
clc
add
roll
stc
and
cli
bound
divl
jae
stc
cltd
decl
decl
pop
dec
or
loopne
incl
sbb
and
adc
and
out
stc
data16
cmp
clc
ja
les
xchg
ficoms
shl
and
cld
pushl
fs
sub
icebp
mov
mov
jmp
idivl
mov
jo
enter
std
pop
lock
lds
mov
jns
pop
enter
cmpsl
push
push
cmp
loope
mov
and
push
xchg
sub
clc
sbb
cwtl
loop
aaa
cmp
adc
in
incl
clc
in
push
mov
and
jno
jg
mov
pop
ret
stc
in
inc
mov
push
filds
in
mov
out
jnp
imul
shlb
movsb
stos
out
mov
incl
jle
add
ret
stc
les
mov
inc
cmpsl
fcomps
pop
out
lret
shlb
mov
repz
mov
pop
add
call
std
test
inc
mov
mov
pop
adcb
clc
jg
push
icebp
icebp
out
jge
in
nop
rclb
and
and
dec
adc
sub
out
pop
and
cmp
ret
xchg
fs
out
mov
mov
or
popa
adc
jg
cwtl
lds
ds
cmpb
testb
xchg
fnstsw
sar
inc
adc
ljmp
frstor
lcall
fstl
mov
add
repz
fidivrl
ret
fsts
mov
call
or
rol
or
fcmovnbe
fcomp
outsb
dec
or
mov
dec
xor
fldln2
and
xchg
out
mov
inc
mov
scas
mov
iret
mov
cld
push
sbb
xchg
scas
jl
test
outsb
stos
cmp
pusha
rorb
mov
and
fdivs
pushl
adc
orb
cmp
pop
pop
cmp
fwait
mov
mov
pop
jg
inc
sbb
or
cmp
mov
fstpt
jb
test
stc
les
mov
or
fdivs
fadds
fxch
fstpl
in
les
sbb
inc
ret
mov
xchg
movsl
rolb
mov
fisubrl
xor
mov
mov
cmp
jo
lcall
pop
pop
int3
scas
mov
sub
ret
add
scas
inc
or
push
lret
cmp
xor
push
add
scas
dec
and
fwait
xchg
fs
clc
cmp
jge
jnp
mov
cmp
or
fstl
cmc
test
sub
out
clc
xchg
les
sar
or
ljmp
call
gs
add
divl
or
fimull
push
adcb
mov
clc
fpatan
clc
mov
int
out
test
lea
mov
fdivs
mov
sbb
mov
leave
and
pop
push
jmp
mov
int3
stc
add
mov
sbb
dec
jno
aam
dec
or
cmc
push
pop
scas
or
lds
daa
jle
cld
jmp
jle
ljmp
and
into
fadd
cltd
mov
les
jge
push
mov
mov
cli
jl
int3
add
sub
cmpb
push
mov
pop
fnstenv
ljmp
fadds
rcr
imulb
mov
adc
cmp
lods
clc
aas
adc
mov
popf
fs
daa
push
cmp
sbb
pop
out
mov
out
pop
ja
enter
insb
icebp
mov
imul
mul
push
pop
adc
ret
jmp
pop
xchg
clc
jbe
iret
mov
cld
inc
pop
loope
pop
pushf
fsubs
mov
rcr
sub
jg
mov
mov
icebp
imul
fmul
push
fstp
pushf
or
jg
loop
dec
lret
xlat
fwait
xchg
call
cmc
stos
dec
mov
sub
pop
xchg
imul
fcomp
fmuls
notl
shlb
iret
mov
cmp
shl
call
pop
cmp
jge
jns
aam
mov
ret
std
jmp
push
enter
jl
int3
imul
adc
push
sub
mov
jmp
ret
dec
fstpt
add
out
out
js
jmp
outsb
fwait
gs
dec
loopne
fisubs
push
nop
fdivs
ljmp
push
bound
stos
xor
push
xchg
or
mov
cmc
stc
ja
pop
shlb
inc
imul
inc
mov
fdivs
mov
and
sbb
and
sub
mov
loop
scas
ljmp
sbb
jbe
pop
arpl
jb
add
pandn
clc
data16
punpcklwd
test
scas
dec
rcrl
test
jge
cmc
push
jg
add
fisttpl
mov
jns
enter
inc
aam
jmp
out
xor
jo
or
inc
lret
mov
lret
mov
mov
fists
cld
leave
jo
fsub
mov
incb
mov
ljmp
int
rol
cmp
rcrl
adc
prefetch
fbstp
mov
and
ja
inc
arpl
sarb
and
jg
movsb
mov
cmp
xchg
aaa
rol
push
fsubs
ret
jnp
lods
sarl
stos
inc
mov
stos
outsb
cmp
mov
sbb
incl
and
and
pop
jne
dec
adc
push
loopne
fsin
lcall
jnp
push
inc
lock
push
mov
lods
stos
repnz
shr
decl
mov
divl
out
sti
in
jg
pop
cwtl
cmpsb
pushl
fwait
dec
xchg
stos
shl
gs
fs
cmp
add
mov
js
add
dec
ffreep
setp
xchg
jne
mov
dec
cmpb
and
mov
idiv
or
icebp
jg
or
cmp
inc
and
adc
ret
sbb
pushl
and
pop
stc
xor
lcall
mov
fsubs
xor
or
fdivrl
nop
decl
xchg
add
inc
mov
inc
xchg
mov
xchg
roll
jbe
pushf
jmp
pushl
test
jmp
mov
inc
cltd
es
inc
mov
cwtl
das
sar
or
xchg
in
std
or
jne
call
sbb
push
shrb
fwait
cmp
popa
add
nop
clc
insl
jns
pushl
jmp
adc
mov
ljmp
movsb
in
test
and
cmp
xchg
test
out
and
sbb
and
and
cmc
loope
stos
popa
xor
mov
inc
clc
xchg
jge
aam
hlt
inc
rcrb
test
lods
fldenv
incl
lock
adc
test
icebp
call
lahf
mov
call
and
cmp
mov
jo
xchg
dec
ret
mov
mov
decl
insl
aad
inc
jne
popf
jns
pushf
mov
scas
clc
ljmp
lcall
push
int3
xor
rorb
ret
imul
jno
mov
push
mov
sub
sahf
cmp
ljmp
mov
sbb
cmpsl
add
pushf
add
pusha
rolb
loopne
mov
hlt
lea
mov
jecxz
jns
or
push
in
in
mov
test
push
cmc
mov
mov
fsubrs
or
xchg
adc
orb
pop
pop
dec
lock
pop
cld
jmp
movsl
outsb
sub
loopne
mov
xchg
lock
movsb
aad
icebp
fwait
aam
jo
cmp
xchg
test
stc
sub
xorb
inc
cld
jge
adc
xchg
dec
sub
movsl
incl
pop
imul
adc
cmovg
dec
and
sbb
in
sbbb
loopne
jle
add
aas
mov
sbb
mov
cs
je
test
lcall
push
cli
hlt
out
aam
mov
adc
repnz
std
mov
cmp
aam
xchg
ds
decl
dec
or
sub
into
mov
jns
fsubl
fisttps
jmp
xchg
or
ret
lcall
in
mov
mov
cli
mov
jmp
test
xchg
xor
pop
hlt
xchg
and
pop
addr16
adc
mov
lcall
sahf
add
popf
in
mov
cli
add
gs
icebp
lods
fwait
rolb
loope
mov
ljmp
sub
jae
jl
cwtl
xor
sti
xor
mov
movsl
cmc
mov
xor
cltd
xchg
sub
mov
lods
movsl
mov
lcall
icebp
nop
movsb
repnz
lcall
popf
je
hlt
cmp
sub
shlb
jg
cmc
ljmp
insb
movsb
push
inc
jns
fs
xor
inc
mov
leave
cld
test
sti
call
xorb
mov
dec
fstpl
call
clc
mov
std
lods
les
xor
loopne
push
and
sub
jmp
dec
jl
nop
push
and
fcoml
push
test
stc
cwtl
je
xchg
call
inc
mov
cmc
fs
fucomip
lahf
pop
add
in
lock
call
call
jne
aad
mov
mov
mov
loope
out
in
incl
sahf
cli
in
iret
mov
xchg
mov
and
and
pop
ret
inc
pop
incl
stos
jge
cli
mov
adc
pushl
mov
or
sub
mov
outsb
cmc
jmp
call
js,pt
and
fbld
push
aad
or
add
sub
loop
mov
sbb
decl
or
test
inc
iret
clc
mov
fnsave
and
jmp
stos
cmp
xchg
lock
cmp
or
jecxz
fisttpl
ljmp
lret
adc
je
jp
outsb
sub
lods
in
sbb
lahf
sbb
push
test
jp
in
in
push
lods
sbb
test
test
dec
push
mov
out
pop
cmpsl
lret
std
sbb
mov
jbe
cwtl
cltd
call
in
and
dec
xchg
mov
cmc
dec
out
int3
lea
jmp
or
mov
adc
cltd
clc
mov
mov
sub
sti
push
xor
jo
push
jl
xchg
pop
cmp
out
push
fcomps
adc
incb
fdivr
incl
xchg
rorl
aaa
mov
mov
cmp
dec
in
mov
xchg
mov
xor
sub
ljmp
icebp
fisubl
in
stos
xchg
imul
lock
out
mov
xchg
dec
hlt
imul
xchg
adc
scas
push
test
cld
ret
test
mov
in
mov
cld
jmp
lock
mov
xchg
push
out
clc
mov
dec
decl
mov
mov
mov
enter
xchg
push
aas
adc
fadds
shrb
add
rclb
jge
scas
mov
and
loopne
in
dec
or
iret
pop
call
shlb
xchg
test
decl
lcall
xor
rcrb
jge
pop
sahf
jmp
pop
dec
int
or
inc
fsts
jl
cwtl
sbb
push
push
mov
int3
adc
out
addr16
or
cmc
jns
andb
out
dec
stos
into
movsb
dec
mov
test
fsubl
mov
call
and
push
xlat
ljmp
push
pop
push
inc
icebp
dec
xchg
adc
lea
movb
fmull
in
and
push
fmuls
mov
rolb
scas
bound
stc
ljmp
inc
test
ljmp
xchg
test
push
jg
fildll
inc
enter
jnp
cmp
fnstsw
mov
pop
and
mov
lcall
repnz
scas
std
in
roll
pop
sbb
stc
les
and
enter
xchg
jo
pop
pop
lahf
into
repz
pushl
lahf
cs
and
adc
pusha
lds
das
sub
adc
jmp
pop
loop
mov
out
lahf
imul
mov
call
js
push
xchg
sub
mov
jg
dec
test
sbb
lahf
cmp
filds
cmp
mov
in
cmp
and
lods
pop
call
adcl
in
mov
movl
in
test
jne
dec
lods
cld
xor
clc
xor
dec
pop
aaa
mov
xchg
and
inc
cmp
test
clc
and
lcall
push
test
outsl
mov
or
aad
jno
mov
cld
push
rcll
je
dec
imul
rorl
jg
mov
inc
aas
insb
adc
lock
mov
jmp
int3
mov
xchg
sti
mov
sbb
mov
ljmp
stos
popf
cmp
movsb
lock
adc
addr16
movsb
js
and
incl
and
xor
push
xchg
hlt
mov
cmp
and
mov
dec
cwtl
sti
nop
and
enter
jno
jl
sbb
ret
mov
dec
shlb
vpaddq
decl
mov
cmp
mov
rorl
mov
mov
jl
sbb
pop
mov
rclb
mov
mov
jmp
jmp
mov
icebp
cmp
cmpsl
xor
insl
jo
and
cwtl
add
xchg
js
movsl
repnz
push
mov
jno
sarb
bound
lcall
and
cmp
pop
hlt
aad
xchg
mov
test
faddl
push
cmpsl
xchg
repnz
repz
cmp
repz
shlb
clc
mov
push
sub
mov
aas
dec
pushl
pop
cli
rclb
les
js
mov
and
fmull
mov
jge
out
sbb
pushf
stc
mov
pop
push
mov
fwait
shll
shll
test
add
and
idiv
call
mov
fsub
mov
adc
scas
ds
dec
cld
inc
mov
mov
xor
lcall
adc
in
scas
rcl
inc
xchg
aam
inc
jg
call
cmp
int3
cmp
call
or
xchg
sub
mov
fs
scas
je
sub
stos
sbb
pop
mov
cmpsl
movsb
pushf
leave
mov
test
lahf
fdiv
mov
sub
js
or
jmp
lods
and
fcompl
into
pop
dec
mov
jl
inc
int3
jmp
notl
jmp
movsb
jmp
mov
not
pop
adc
ja
mov
imul
ljmp
aas
lcall
js
int3
test
mov
inc
dec
lods
push
or
fwait
stos
jp
stos
sarb
pushl
jmp
jb
idivl
pop
in
aaa
je
or
xchg
adc
out
inc
outsl
dec
fs
mov
xchg
inc
pop
or
fbld
jmp
sub
add
call
fcomip
daa
push
and
sbb
aam
mov
mov
mov
and
js
push
mov
cmc
dec
push
jmp
mov
cmpsb
out
mov
push
add
mov
mov
mov
cmc
pushf
std
xchg
fdivrl
cmp
jae
fsubr
and
jecxz
ret
sbb
xchg
pushl
adc
sbb
fs
imul
lret
xchg
pushf
fdivrs
ljmp
pusha
hlt
int
dec
dec
loop
je
xchg
sbb
mov
adc
hlt
dec
sti
inc
jmp
icebp
stos
stos
cld
pushf
pop
cli
leave
mov
repz
decb
jle
out
orb
xor
pusha
test
test
leave
adcb
rorb
incl
test
pop
xchg
or
mov
fiaddl
call
repnz
aam
fcmovb
rorl
fldl
xor
lods
mov
add
dec
std
xor
aaa
push
adc
ret
mov
or
punpckldq
push
clc
fwait
dec
mov
sahf
xchg
mov
in
pushf
jno
push
test
rclb
ljmp
add
adc
xchg
mov
pop
mov
mov
push
stc
test
test
call
push
rcrl
shll
cmp
push
dec
pop
aas
cltd
enter
xchg
lret
mov
cli
gs
xor
je
cmp
in
aad
in
movsb
and
mov
aas
test
mov
bound
sub
fs
mov
push
imul
sub
xor
incl
cwtl
hlt
jle
ret
mov
mov
ss
xchg
and
cmpsl
psadbw
loop
mov
mov
cld
mov
sarb
dec
ss
data16
out
mov
push
mov
push
jne
and
pushl
lods
call
dec
inc
inc
mov
int3
lods
xlat
pop
pop
mov
fbld
call
mov
out
ja
insb
decl
adc
mov
mov
je
xlat
pusha
aam
icebp
pushl
or
or
jns
xlat
dec
call
lret
cmc
stos
insb
cmp
movsl
imul
popf
sub
call
or
pop
lock
mov
cmpsb
xor
mov
dec
jne
shl
fists
aas
je
repz
jo
and
cld
int
pop
sbb
pop
das
xor
xor
test
mov
decl
pop
lods
sbbb
jo
enter
push
push
dec
clc
call
push
inc
mov
clc
outsb
loop
sar
jle
xchg
lcall
jns
ret
inc
xchg
sub
and
rol
lods
in
in
push
cltd
call
dec
push
jge
cmp
rclb
ljmp
xchg
adc
pop
mov
xchg
movsb
loop
cld
rolb
mov
stos
out
xor
aad
sbb
xchg
mov
stc
sub
jp
xor
ljmp
mov
clc
jl
es
test
in
ficompl
pusha
in
stos
push
incl
cmp
je
mov
out
ja
mov
ds
cwtl
mov
mov
add
ret
in
call
adc
sub
xor
adc
sbb
mov
stos
xchg
decl
cmp
repnz
adc
into
out
adc
ss
jo
nop
pushf
jnp
pop
ljmp
addl
loope
fstl
push
loopne
mov
mov
mov
xchg
sbb
cmpsl
pop
pushf
enter
jmp
jne
hlt
out
jp
enter
xlat
sub
les
or
pop
stos
sti
mov
fdivr
lcall
testl
daa
bnd
out
clc
shrb
cwtl
ljmp
loop
test
je
mov
jae
repnz
jnp
je
jmp
adc
mov
dec
xchg
mov
ljmp
movsl
push
jmp
mov
lods
sub
mov
cld
cmp
stos
lcall
shll
push
sbbb
adc
mov
in
js
and
adc
cmc
ljmp
js
shlb
xchg
call
jbe
test
and
into
lahf
fidivl
mov
movsl
adc
in
mov
lds
decl
imul
popf
xchg
lock
mov
mov
in
mov
push
or
rcr
xor
jno
cltd
in
xchg
mov
mov
mov
idiv
clc
pop
rolb
rolb
xchg
add
loop
sti
mov
sub
pop
negl
adc
cs
test
xchg
insb
xlat
fwait
adc
sub
in
dec
in
les
pushf
xor
adc
sahf
clc
lock
mov
adc
push
push
push
push
cmc
std
jle
ficoms
xor
mov
popf
rol
cmpsb
xchg
in
call
in
call
cmp
jo
add
dec
mov
jl
cli
adc
ja
ror
pushf
ret
cli
fbld
test
test
sbb
jns
mov
mov
mov
mov
icebp
cld
cld
sub
xor
add
mov
xchg
and
lock
add
mov
iret
cld
cld
mov
pop
orb
cmp
ss
inc
pop
repnz
pop
cmp
fbld
call
cli
dec
cmpsl
cmp
xchg
cli
pop
std
or
sub
jg
jg
out
jl
mov
adcb
ss
mov
sar
stos
jno
lods
adcl
ret
adc
sub
in
lret
jg
mov
mov
jmp
sub
sbbl
dec
das
ret
lcall
call
call
jno
or
mov
jp
fwait
js
lock
subb
call
mov
pop
insb
jle
hlt
clc
aas
lds
adc
imul
arpl
and
jne
lahf
jb
stc
cmp
push
lds
call
subb
dec
mov
sub
mov
stos
mov
std
call
lahf
fucom
iret
push
movsb
out
mov
icebp
add
dec
xchg
shlb
xchg
fsubp
and
jmp
hlt
mov
cwtl
add
cmp
sahf
stos
push
xlat
mov
leave
std
pushl
dec
fildl
stc
call
cmp
cmpsl
jp
adc
insb
sub
or
cmp
pushl
clc
in
push
dec
push
outsl
inc
jbe
lock
outsb
and
jecxz
or
std
push
mov
in
repnz
sti
jo
in
decl
add
out
stos
xor
sahf
stos
pop
into
adc
loopne
mov
clc
in
jmp
xchg
scas
xchg
mov
rep
jae
loop
xchg
cmc
cltd
test
decl
sbb
xchg
stos
fcomip
js
js
jp
ja,pt
inc
leave
in
xor
sub
mov
sbbb
or
cltd
cmpsl
lcall
les
mov
js
adc
ljmp
jl
and
andl
int3
push
mov
push
insb
mov
movsb
aad
jne
mov
inc
mov
xchg
aas
mov
add
jge
inc
or
mov
jl
leave
ja
loop
mov
add
pop
or
jbe
lcall
ljmp
ja
jne
pop
test
call
jge
fsts
cmp
movsl
aad
mov
jmp
mov
xlat
stos
xor
movsb
test
nop
sbb
mov
xchg
in
jmp
test
jmp
mov
mov
gs
in
xorl
mov
dec
pop
jg
add
fisttpll
sbb
lods
mov
pushl
cld
mov
ljmp
jbe
sub
lcall
aas
imul
ljmp
push
loope
jnp
out
mov
in
jmp
sbb
call
fnsave
jb
sub
out
inc
dec
mov
xchg
loopne
add
pop
cs
stc
lock
ljmp
xchg
into
and
fidivrl
dec
xchg
hlt
dec
imul
sahf
out
iret
mov
and
pop
cld
push
out
add
and
fsubp
xchg
push
decl
ficomps
fdivr
fs
roll
in
lcall
jmp
fidivl
fcomps
ja
lcall
cmpsl
xor
testb
cltd
decl
pop
xchg
add
in
dec
xchg
gs
mov
dec
jbe
in
lcall
scas
fldl2t
mov
hlt
or
rorl
push
les
fnstsw
mov
fcoml
sub
ja
adc
inc
xchg
fs
jecxz
push
out
jle
add
pop
sar
sbb
mov
out
push
sti
cltd
mov
ljmp
push
loop
jbe
xchg
out
cmp
mov
push
fsts
insb
sbb
lea
jnp
outsb
jl
test
mov
pop
mov
outsl
xchg
cld
cmp
loopne
sub
and
jmp
push
lcall
jl
insl
popf
lea
mov
xchg
xchg
mov
mov
mov
mov
out
and
mov
fwait
lret
and
ljmp
inc
cli
fwait
add
sub
adc
outsb
or
xlat
pop
lret
psrlw
outsb
lahf
or
xor
mov
xchg
mov
lds
push
movsb
fxtract
fcomi
cli
pop
testb
decb
jae
mov
jecxz
stos
cltd
mov
std
cld
mov
xchg
data16
ljmp
xchg
mov
dec
cmpsb
xchg
dec
and
jmp
cli
sbb
jns
cmp
fbstp
xchg
fisttpll
xchg
lret
fnstcw
imul
push
popa
push
xchg
cli
das
xor
inc
lcall
movsl
aaa
mov
lock
mov
ljmp
mov
mov
fisttps
jns
dec
repz
in
inc
int
add
out
iret
or
stc
xchg
repz
push
insl
pop
fwait
push
adc
sbb
decl
push
cld
adc
es
js
out
mov
add
mov
inc
enter
shll
ret
cwtl
ljmp
and
or
into
in
and
or
mov
add
test
add
adc
pushl
decl
ljmp
shl
bound
sbb
and
jmp
ds
jnp
clc
lock
outsl
mov
and
mov
popf
popf
cltd
xchg
in
lcall
push
sti
es
repnz
imull
std
jbe
cli
fdivs
frstor
cltd
aam
stos
jmp
ja
xlat
or
lret
mov
pushf
fnsave
in
push
sub
inc
pop
or
call
jle
repnz
shr
test
nop
mov
icebp
decb
leave
jo
or
incl
cmp
dec
in
cli
ret
enter
sub
fildll
cmc
adc
imul
sub
jmp
loopne
xchg
push
lahf
jmp
xlat
popl
inc
add
aam
sahf
xchg
in
or
jp
cld
ljmp
decl
mov
mov
jb
push
clc
dec
out
pop
scas
int
adc
and
data16
clc
dec
xchg
cmp
add
cmc
std
lret
decb
sub
adc
fisubrl
scas
mov
mov
xchg
add
es
sbb
mov
and
pushf
popl
enter
loope
clc
jmp
idivl
js
xchg
push
stos
imul
je
movsl
in
jbe
jl
fdivrs
jmp
sub
jg
nop
cli
xor
lcall
fidivrs
jmp
lcall
dec
in
std
test
jbe
in
fwait
mov
loop
mov
iret
lods
mov
add
mov
pushf
cmpsl
jno
nop
sbbl
pop
sbbb
outsb
xchg
subl
movsb
fdivp
addb
dec
pusha
into
std
jg
out
push
pop
jb
lret
xchg
es
hlt
inc
mov
sub
loopne
pop
and
jg
add
scas
stos
xchg
xchg
decb
mov
ret
fdivrp
jg
push
mov
std
test
xor
push
push
mov
mov
xchg
mov
fisttps
cld
cmp
sti
or
add
mov
jp
mov
rcrl
in
mov
pop
push
std
outsl
cli
lcall
sbbb
and
add
icebp
lcall
and
ds
cmp
jge
movsb
das
lock
xchg
jo
mov
test
dec
leave
mov
dec
pop
fcom
push
loopne
clc
call
pop
stc
push
pop
out
addr16
mov
mov
test
out
jb
pop
mov
pusha
std
add
push
and
inc
push
mov
mov
test
popl
sahf
jnp
loopne
xor
in
js
fmuls
in
ja
divb
decl
add
lods
sbb
jno
mov
call
ds
fildll
dec
iret
xchg
pusha
sbb
scas
insl
mov
xchg
cld
stos
lret
shlb
out
int3
inc
jae
adc
pushl
rcl
xchg
aam
mov
loope
imul
adc
ds
je
sti
push
mul
loop
cmp
daa
fwait
aas
jge
dec
mov
jne
pop
ss
jne
mov
xchg
mov
push
out
dec
push
mov
rclb
jge
lods
and
xchg
pusha
mov
das
pop
pop
adc
cld
jmp
xchg
shlb
mov
fsubr
mov
dec
jne
jle
sub
inc
mov
notl
dec
cmp
pop
fidivrs
jge
dec
mov
stos
and
in
inc
loope
inc
pushl
loop
lcall
pop
inc
pop
cld
push
xlat
mov
mov
pushf
jnp
cli
outsb
mov
inc
out
push
xchg
cs
mov
push
mov
rorb
cld
ljmp
pop
ds
cmp
pop
addr16
pop
nop
mov
jg
ss
push
cmc
movsb
in
out
lock
push
push
fldenv
lcall
in
cmpsb
test
sti
xor
push
das
fwait
jg
mov
mov
pop
mov
stos
movsb
pop
push
repz
lods
pop
pushf
xchg
scas
sahf
sti
rcll
jnp
fstl
jno
sbb
push
mov
sbb
xchg
xchg
fcomip
jg
mov
les
mov
sahf
jae
dec
insb
icebp
fisubrl
inc
incl
incl
mov
dec
add
js
cmpsl
aad
les
fidivrs
call
pop
cld
pop
mov
insb
mov
icebp
dec
inc
pushf
enter
push
mov
incl
sub
mov
fstpl
andl
dec
out
sbb
fildll
sarl
inc
rcr
clc
add
cs
cmp
mov
xchg
dec
mov
cmp
push
sub
adcb
or
mov
cli
sbb
or
and
incl
sbb
movsl
mov
cmp
cwtl
shlb
ljmp
mov
in
fs
aad
aas
lcall
pop
sarb
xlat
xor
lret
fsubp
mov
cli
mov
mov
sub
lds
mov
add
fwait
or
mov
repnz
lea
loopne
std
pushl
movsl
fmull
sub
test
inc
lock
mov
out
pop
jb
aaa
std
or
inc
in
mov
cmp
lock
jbe
aaa
decl
fidivl
loopne
daa
xor
xchg
idivl
mov
lods
jno
pushf
fcomip
jmp
xchg
out
outsb
idivl
jo
and
aas
mov
jge
dec
inc
icebp
decl
lea
xchg
cmp
mov
loope
mov
decl
or
mov
mov
mov
or
ja
lods
push
call
loopne
mov
dec
dec
sahf
mov
into
divl
push
test
cwtl
mov
call
mov
mov
popf
mov
inc
sbb
mov
incl
or
mov
fisubl
inc
idiv
mov
cmp
mov
outsb
stc
jp
cwtl
popf
sarb
rcr
scas
cmpb
or
test
jl
daa
fsubrl
add
outsb
fidivrl
mov
mov
and
mov
xchg
cld
lods
loopne
sub
call
ds
test
fnsave
das
mov
ret
test
pop
or
mov
jecxz
push
jg
imul
xchg
aad
dec
mov
adc
jmp
nop
cli
mov
mov
xchg
out
xor
inc
out
sti
mov
jnp,pn
dec
pop
ret
cli
jmp
test
pop
jp
scas
sub
call
ffreep
dec
sarb
repnz
cmc
ss
popa
jmp
nop
cld
ljmp
cs
std
lods
stos
push
int3
jle
or
jle
rcrl
cmpsb
jl
adc
mov
or
mov
rorb
adcl
mov
ror
push
mov
addr16
add
aas
adc
sub
sbb
mov
ljmp
dec
dec
mov
pushf
daa
mov
iret
or
fwait
mov
sbb
data16
clc
ret
inc
and
mulb
pushl
insl
xor
repz
aam
jns
ja
outsb
outsb
sbb
adc
ljmp
stos
and
fnstenv
loop
fwait
pusha
je
fdivrp
dec
hlt
out
lret
ret
sub
int3
call
loopne
in
xchg
jae
cmp
imul
lahf
pushf
in
negl
shlb
bound
in
outsb
out
fldcw
pop
aas
jno
enter
push
insb
sub
dec
cli
adc
pushl
sbb
pop
idivl
ds
jle
scas
inc
pushf
mov
cmp
mov
inc
lret
mov
sahf
sbb
rcl
lcall
ja
es
nop
dec
push
movsb
cvtps2pd
dec
xchg
mov
mov
enter
mov
sub
cmpsb
clc
jnp
xor
decl
insb
dec
lods
dec
mov
push
adc
arpl
and
in
inc
mov
mov
aam
lahf
gs
mov
lds
cmp
jmp
std
jbe
jnp
arpl
xorl
dec
sbb
fcomip
out
inc
repnz
push
jl
lods
stos
out
push
les
movsl
ljmp
jmp
cli
jl
sbb
lods
lcall
in
daa
aad
mov
or
ficoms
cmpsl
sub
mov
lock
ds
int3
cmpsb
sub
dec
cmp
push
and
repnz
sti
daa
mov
call
mov
divl
in
pop
jno
mov
xlat
mov
data16
inc
dec
lret
pushl
inc
gs
mov
sub
mov
test
xor
xchg
fidivrl
cwtl
cli
push
loop
fadd
dec
jmp
xor
movsb
pop
fs
mov
mov
mov
mov
pop
mov
ljmp
test
push
adc
decl
mov
pushf
xchg
mov
push
dec
cld
fdivr
mov
sar
std
aam
jp
cltd
mov
mov
hlt
pop
test
push
lcall
stos
mov
mov
inc
enter
and
clc
test
mov
jecxz
jmp
mov
movl
dec
shr
loop
repnz
jecxz
mov
cli
jmp
fisubs
mov
shr
insl
ljmp
out
fidivl
lcall
jnp
dec
mov
mov
xchg
out
fmulp
jecxz
pop
lcall
mov
mov
pusha
mov
and
jns
xchg
mov
ljmp
fnstsw
dec
jge
fs
into
dec
jp
les
out
xchg
aaa
dec
jb
lock
inc
jmp
mov
dec
xor
faddl
cmp
push
xchg
fmulp
xchg
cwtl
data16
ljmp
fwait
pop
loopne
ljmp
repnz
mov
mul
ficomps
mov
or
aam
jmp
enter
leave
add
pop
lahf
out
sub
icebp
testl
xchg
sti
ljmp
adc
popf
in
xchg
xchg
loopne
mov
mov
mov
xchg
incl
or
enter
ret
repz
fsubrl
sub
push
jg
test
pop
sub
dec
pop
xor
xchg
push
dec
test
push
xchg
jbe
icebp
jmp
sarl
push
cmpsl
push
scas
mov
aaa
es
mov
inc
jo
lcall
das
jge
popf
in
fstl
push
outsb
jmp
jae
mov
pop
cmc
int
and
lock
cmc
add
ss
mov
out
loopne
aas
icebp
cmpsl
mov
es
dec
rcr
pop
pop
push
inc
lcall
sar
ljmp
jo
mov
scas
jmp
cs
dec
gs
incb
push
nop
clc
dec
xlat
mov
decl
jmp
fstpl
mov
cli
pusha
das
int3
shrl
sahf
mov
xlat
cmp
mov
mov
adc
cld
dec
lcall
out
lods
or
popa
scas
mov
fs
push
aad
iret
outsl
and
stos
aad
in
xchg
sub
sbb
lock
jae
add
std
enter
lahf
inc
ljmp
mov
push
add
js
outsl
xlat
outsl
sahf
scas
mov
add
outsl
or
sti
incl
je
jl
add
add
fisubl
int3
jle
and
mov
aas
cmp
hlt
mov
sbb
test
sub
ret
cmp
jnp
push
test
add
sbb
mov
ds
jg
mov
add
cmp
dec
shr
fdivrl
xorl
inc
jle
lcall
mov
ds
jle
xchg
cs
jb
lock
or
jbe
mov
mov
loopne
or
hlt
je
jl
sti
adc
jl
sti
jl
fistpl
lcall
sbb
jbe
inc
in
mov
pop
ret
decb
add
push
xor
hlt
aas
aas
out
jns
pop
jg
pop
decb
jg
ja
cli
ja
sbb
cmp
cmp
sbb
jb
iret
jo
decb
ds
dec
jo
add
push
dec
in
fadd
xchg
or
jmp
mov
jbe
jl
sti
adc
and
or
out
push
int3
outsb
cmc
fildl
inc
mov
scas
stos
xchg
sti
lods
test
sub
jo
rolw
xchg
mov
sahf
jb
fstpt
inc
or
cmp
jb
jmp
fwait
shrb
pop
mov
add
add
xor
insl
outsl
jnp
scas
add
std
push
dec
sbb
ds
jnp
mov
lock
aas
push
cmc
aas
divb
cmpsb
not
dec
out
repnz
sub
popa
mov
or
repz
push
out
aas
scas
cld
mov
pop
sti
out
fidivrl
cmc
out
dec
mov
cmp
ja
in
out
xor
ds
lret
adc
push
fwait
and
daa
dec
add
adc
das
insl
sarl
jbe
or
stc
out
add
sti
mov
ds
out
sub
push
or
scas
push
sti
push
aas
stos
loopne
xchg
or
push
enter
or
aad
jle
mov
inc
int3
idivb
push
xchg
mov
out
iret
outsl
cmpl
out
sahf
imulb
idiv
push
ja
dec
ds
in
loope
sahf
pop
jg
push
push
cld
ljmp
xchg
data16
std
pop
or
cmpsl
and
dec
leave
out
shlb
gs
inc
nop
fcomp
add
aas
das
jo
test
dec
cmp
push
mov
push
aas
dec
nop
mov
in
push
sahf
lret
cld
cmc
or
or
cli
cmc
aas
fdiv
imul
or
and
bound
and
mov
jle
push
sti
shll
loop
pop
and
jmp
mov
lahf
call
ss
pusha
aad
pop
icebp
pop
cli
in
lock
sahf
idivl
xchg
adc
jne,pt
repz
jnp
cs
push
push
iret
lcall
loopne
clc
or
out
push
or
sub
or
clc
cs
mov
push
cmp
repz
pop
aas
add
repz
add
mull
cmc
out
roll
add
call
lds
sar
call
bnd
call
loope
dec
ja
jle
in
mov
ljmp
fwait
pop
mov
out
mov
pop
in
std
ss
xchg
int
jno
loop
loopne
fucomp
mov
sahf
repz
sbb
pop
pop
jg
dec
xor
ds
out
xchg
aas
ja
stc
in
lret
and
push
cs
out
clc
faddp
ja
lock
repz
dec
aas
sarl
out
lahf
dec
cmovo
and
inc
loope
int
insb
ds
add
out
sarb
decl
or
mov
idivl
jg
and
mov
pushf
dec
in
jo
xlat
std
shl
and
sar
and
filds
dec
pop
mov
lock
pop
dec
lret
sub
or
sub
sti
pop
jle
testb
out
cmpsl
cmp
add
incl
daa
mov
out
mov
mov
es
jecxz
int
inc
test
shlb
sahf
shrl
fmull
outsb
add
push
in
mov
cmc
mov
xchg
push
add
jne,pt
addr16
pop
xlat
cmp
imul
in
loopne
jmp
mov
push
lods
dec
call
jns
dec
mov
pop
dec
xchg
gs
adc
jg
xor
mov
dec
jg
fs
ljmp
outsl
mov
fwait
out
stc
mov
jg
scas
dec
mov
notl
popf
outsl
je
mov
mov
pop
fcmovne
mull
clc
cmp
ds
test
mov
mov
scas
pop
add
sbb
repnz
and
jmp
ja
jle
sub
shr
xchg
mov
movsl
mov
sbb
pop
mov
xchg
xchg
outsl
outsb
fwait
popf
out
in
pop
mov
push
stos
cs
push
mov
fldcw
fwait
fwait
out
addr16
xor
jnp
push
mov
mov
out
stc
test
ds
fisubl
mov
jge
mov
sbb
mov
pop
pminub
mov
inc
clc
push
mov
faddl
jle
push
pushl
jle
fnstsw
or
or
mov
out
push
inc
cmp
add
and
idiv
outsl
or
pop
es
mul
jmp
int3
mov
mov
aad
aas
call
cmpsl
in
cmp
mov
das
fdiv
jg
mov
jle
repz
mov
mov
and
je
dec
cmp
cwtl
cwtl
cltd
mov
xlat
icebp
fisttps
imul
aas
hlt
std
mov
fistpl
fldcw
test
mov
cmp
lea
mov
aad
mov
std
lcall
aas
adc
mov
mov
aas
test
ds
jbe
loope
xchg
test
or
addb
test
mov
mov
sarb
divb
je
call
lds
jmp
testl
inc
fildl
xchg
dec
enter
shl
imul
sbb
dec
lret
pop
jo
lods
sarb
sbbl
mov
dec
iret
jle
inc
inc
jo
ds
mov
aam
pop
jnp
xchg
inc
mov
add
inc
je
add
jmp
outsl
mov
std
inc
outsb
jnp
inc
popa
jnp
pop
outsb
enter
std
clc
dec
out
push
jl
aas
cld
pop
getsec
cltd
adc
mov
das
addr16
movsb
xor
jle
pop
incl
add
jg
int
and
xor
add
add
jle
jo
push
gs
scas
cmp
incb
fdiv
and
inc
sbb
loopne
repz
sbb
or
xlat
negl
ds
std
sti
addb
std
adc
mov
stc
stc
dec
cmc
add
jae
pop
push
mov
sti
push
push
push
mov
dec
fs
in
add
cmp
out
bound
jg
mov
lods
cmp
daa
sbb
sbb
cmp
and
inc
clc
jae
lahf
out
aaa
out
push
ds
push
mov
fildl
jg
inc
jg
jge
jne
dec
dec
outsb
aas
outsl
dec
inc
sub
dec
dec
dec
adc
mov
lods
mov
mov
int
mov
push
push
in
lods
xchg
lcall
fisubrs
xchg
pushf
mov
adc
or
mov
mov
lcall
aaa
adc
pop
outsl
mov
fwait
mov
int
mov
mov
mov
mov
mov
xchg
lcall
fwait
mov
fwait
popf
lea
mov
mov
mov
clc
lea
mov
aaa
ds
repnz
mov
pushf
cmp
insl
pop
lcall
xchg
mov
jmp
mov
mov
inc
lcall
mov
sahf
xchg
mov
inc
stos
xchg
xchg
cs
inc
sahf
es
mov
xchg
and
adc
jl
loopne
mov
xchg
xlat
mov
mov
stos
mov
out
mov
lods
ds
mov
cwtl
pop
cs
mov
mov
lcall
add
sub
out
sahf
ja
and
inc
add
add
add
push
sbb
pop
pop
incb
mov
addb
and
push
sbb
sbb
add
mov
mov
faddl
cld
jg
mov
lock
pop
and
cld
add
pop
or
popa
xchg
testl
sub
xor
inc
addr16
dec
add
test
or
insb
rorb
mov
shrb
add
psubb
pop
adc
data16
push
out
ficompl
sub
jl
cmp
xchg
xchg
xchg
lock
sbb
pop
push
aas
pop
jnp
xchg
pop
cs
pop
xchg
pop
lock
xor
push
pop
std
fiadds
gs
push
fnstsw
add
fisubrs
insb
jl
jb
push
jbe
loop
into
repz
sbbb
add
cmp
iret
rolb
nop
cltd
jecxz
mov
lock
int
ds
push
xor
push
cltd
shr
jo
pop
xor
jg
addr16
push
add
push
cmp
inc
enter
aas
push
add
mov
sub
ret
adc
loopne
xor
cmp
add
fnstsw
aas
dec
pop
outsb
mov
ljmp
pushf
fsubs
fsts
sahf
lock
pop
pop
clc
dec
divl
push
inc
pop
outsl
sub
inc
clc
out
pusha
addr16
push
adcb
loopne
mov
sahf
xlat
pop
sbb
out
sahf
imul
mov
pop
cs
mov
cmp
cmpsl
push
xlat
pop
in
in
mov
adc
out
inc
aas
nopl
aas
xor
add
xchg
push
les
cld
push
cmp
mov
insb
push
fsubrl
aaa
add
lds
lock
aaa
andb
sbb
inc
fwait
int
jge
cmp
sbb
push
sub
mov
insb
ss
add
inc
addl
popa
push
pusha
xor
sbb
push
push
sbb
cwtl
loopne
outsl
aas
jnp
cmp
jne
ret
roll
dec
or
notb
clc
insb
fistpl
jl
sbb
push
sbb
or
test
shrb
inc
adc
xchg
andb
movsb
or
adc
insl
dec
je
imul
adc
push
jo
ss
mov
bound
push
data16
mov
lock
inc
stos
imul
jne
add
aas
addr16
mov
in
loopne
fstpt
addr16
dec
aaa
sbb
xchg
es
add
sbb
out
mov
inc
sbb
dec
push
scas
or
shrb
adc
push
inc
nop
and
xlat
sysret
in
cs
inc
ss
insl
push
or
dec
sbb
ret
faddp
gs
imul
jbe
cmc
fisubrs
push
jae
and
pushw
gs
jno
mov
inc
jb
cli
negb
scas
mov
sbb
inc
movb
inc
cmpsl
inc
out
cmp
mov
lds
cmp
insb
push
outsl
mov
push
imul
sbb
aas
cli
push
or
outsb
daa
out
sub
je
pop
adc
bound
ret
dec
ljmp
inc
sbb
lds
lret
mov
pusha
or
xor
lret
mov
adc
outsb
insb
or
mov
adc
lcall
mov
push
push
repz
jo
adc
stos
add
aaa
rcll
dec
mov
roll
shrb
push
adc
fldl
popa
push
add
inc
push
rorl
jbe
add
push
xor
push
push
mov
adc
pop
mov
jne
pop
inc
jne
mov
imul
ret
cmpsb
inc
out
out
es
dec
out
fcomp
mov
imul
mov
dec
stos
data16
sub
jnp
movb
jbe
rep
sub
fdiv
push
push
push
fisubl
popa
pop
cli
hlt
mov
adc
xorl
ja
pop
rcrb
dec
mov
out
jmp
cs
outsl
daa
add
jnp
loopne
ret
outsb
andl
ja
in
mov
jae
sub
xchg
mov
sub
xlat
sahf
mov
mov
je
rcr
pop
and
daa
xchg
jmp
mov
popa
jae
mov
inc
push
pop
stos
sbb
jbe
push
setg
insl
or
cmp
push
push
sub
mov
push
push
data16
push
cmp
or
mov
or
out
pop
jae
or
inc
ljmp
dec
cmpsl
sub
filds
aaa
bound
iret
mov
push
jo
mov
push
aas
mov
inc
inc
out
movsb
and
push
adc
out
push
dec
ficoms
and
xchg
mov
xchg
adc
fwait
sbb
pop
insb
repz
pop
jo
mov
bound
cmp
rclb
and
rclb
cmc
xor
jp
out
push
push
sbb
mov
jp
xchg
es
cmp
mov
out
lcall
dec
arpl
inc
mov
lret
repnz
ljmp
adc
outsb
jbe
sbb
dec
dec
fistpll
xor
push
sub
cmp
sub
outsl
dec
lret
add
or
sub
imul
lahf
imul
mov
jae
idivb
jb
adc
push
scas
add
arpl
mov
pop
fisubl
pop
add
inc
or
pop
je
add
imul
adc
add
dec
sahf
add
add
mov
push
push
bound
sbb
jns
es
cmp
cmp
scas
or
es
and
mov
pop
xchg
addr16
dec
arpl
mov
lods
lock
jnp
inc
fistpl
mov
add
fs
popa
test
add
addr16
push
fsubrs
cmpsl
ja
roll
pop
mov
rclb
sbb
mov
aas
mov
inc
in
test
push
lcall
xchg
pop
sbb
cmp
ret
xchg
xor
out
addl
das
fwait
or
fbstp
imul
cmpsb
pop
xchg
pop
pop
shll
and
aaa
push
cmc
mov
cmp
lds
jp
xor
shrl
ja
lock
jg
jae
adc
dec
ret
jbe
pop
mov
dec
out
and
adc
imul
ret
push
push
fs
mov
imul
ja
jb
adc
and
jns
loop
ja
nop
jbe
fisubrl
pop
sub
cmp
add
mov
das
pop
cli
or
jmp
pop
jbe
shll
jo
inc
xchg
fistpll
bound
push
ss
pop
lret
stos
call
mov
xchg
mov
addr16
int
shll
das
xlat
xor
mov
shrl
cs
ret
dec
xor
cmp
addr16
xor
jno
ljmp
lret
bound
adc
ret
push
mov
sub
jo
jns
lock
imul
push
push
js
cmp
outsl
das
shrl
lock
lea
pop
xor
add
jno
cmp
imul
imul
ret
mov
dec
pop
data16
cmpl
popa
ret
and
cmp
outsl
push
jnp
insb
push
xchg
and
test
out
xor
sbb
mov
repnz
xor
js
sbb
out
mov
sub
dec
sub
pop
out
pusha
stos
jno
scas
pop
adc
or
cs
sti
cmpsl
push
loop
and
jp
adc
sbbb
xchg
stos
pusha
push
sbb
dec
lods
imul
xchg
ffreep
ja
sbb
or
or
adc
stos
jo
imul
inc
movsb
popf
loop
push
pop
out
add
imul
stos
inc
pop
xorl
aad
or
pcmpeqw
je
stos
out
arpl
or
mov
and
out
stos
or
adc
test
insb
inc
popa
mov
imul
push
or
imul
insl
stos
lds
outsb
addr16
jmp
imul
daa
pop
lods
push
sbb
lcall
pop
push
pop
xor
jmp
xchg
push
pop
sbb
jecxz
mov
jne
aaa
adc
imul
fsubrs
and
inc
je
pusha
out
stos
inc
ja
mov
insl
aas
push
cmp
lea
dec
push
mov
pop
test
inc
xor
bound
outsl
lcall
mov
push
push
pop
pop
ret
push
inc
loope
mov
push
push
imul
dec
jge
mov
sbb
in
jbe
jno
push
jae
or
les
scas
xchg
xchg
xor
iret
inc
and
imul
outsl
outsl
cmpsb
add
or
xchg
outsb
ret
and
mov
aas
jae
sub
mov
out
lods
cs
scas
mov
movsb
mov
jg
sahf
mov
lcall
xlat
push
jb
imul
rcrl
xchg
cmp
jecxz
sbb
adc
dec
cs
and
lock
pop
jp
adc
inc
push
decb
loop
fidivl
inc
cs
inc
or
add
jge
push
inc
aaa
testl
mov
add
jnp
adc
mov
sub
lsl
mov
out
test
out
jb
mov
ficomps
or
jbe
pop
je
shlb
and
popl
add
push
sbb
jge
mov
cvttps2pi
pop
jmp
push
add
orl
jl
fwait
sbb
arpl
mov
adc
or
in
aam
push
and
jmp
repz
iret
sbbl
lods
pusha
and
xor
inc
jge
mov
or
ds
mov
inc
das
mov
mov
mov
xchg
data16
sub
xor
cmp
sub
mov
sysret
dec
mov
push
fisttpl
repz
fildl
lret
aas
mov
push
shrl
je
pop
dec
fimull
or
repz
mov
pop
cmpsl
ljmp
push
add
pop
imul
or
jo
mov
pushl
aam
outsl
scas
and
adc
loop
mov
scas
sbb
sarb
fs
push
je
loopne
adc
jge
cwtl
mov
jmp
cmp
xor
cmp
xor
push
mull
sbb
adc
rorb
pop
add
adc
xlat
add
sbb
test
movsb
push
lock
mov
pop
push
out
inc
and
nop
div
or
arpl
cmp
mov
jae
cmpsl
mov
fwait
das
test
pop
sbb
xlat
dec
xlat
stos
push
bound
ret
stos
or
jg
outsl
or
lds
stos
push
push
mov
insb
clc
repz
aad
sbbl
add
adcb
pop
sbb
or
ret
push
xorl
push
adc
push
sub
sub
add
ja
test
jno
sub
das
xor
mov
stos
cmp
lods
stos
xlat
sub
data16
cs
pop
push
mov
jo
inc
mov
pop
adc
fldt
xchg
add
push
dec
mov
imul
mov
push
jmp
jnp
mov
scas
daa
das
or
pop
pop
add
and
cmpsb
or
lahf
xchg
jae
popa
test
adc
inc
test
ret
fists
mov
jge
cmpsl
dec
ret
xchg
ljmp
inc
mov
add
imul
pop
pop
repz
mov
movsb
aam
push
mov
ficoml
adc
mov
xchg
outsl
add
inc
mov
mov
iret
popa
aaa
rclb
movhps
dec
mov
outsb
psraw
mov
mov
or
shlb
and
push
arpl
outsb
lahf
scas
arpl
js
cs
jo
adc
cmp
jg
xchg
outsl
outsb
dec
mov
ds
stos
arpl
push
adc
push
xlat
add
popl
push
or
daa
pop
mov
fs
mov
push
in
pop
jg
jmp
dec
cmp
xorb
repz
add
fwait
cmp
shlb
xor
jo
xor
rolb
shrb
mov
adc
icebp
sub
std
fsubrp
data16
aad
adc
aas
inc
adc
add
dec
gs
ret
adc
dec
xor
mov
mov
mov
push
push
es
add
or
pop
mov
adc
mov
xorb
or
lahf
idivl
test
jo
dec
or
dec
push
js
adc
push
push
dec
inc
adc
fisttpll
jmp
and
push
fisubs
popa
inc
adc
push
adc
adc
inc
js
inc
inc
je
xchg
fildl
into
add
fbld
mov
jb
sub
data16
ljmp
push
push
push
dec
es
add
dec
loope
xor
cmp
push
js
mov
push
inc
sbb
imul
adc
insl
jbe
inc
orl
mov
push
adc
adc
add
cmp
cmp
in
insl
movsl
inc
dec
dec
inc
insb
mov
aad
sub
adc
sub
mov
clc
pop
aas
cmp
scas
loopne
movsb
out
push
add
loopne
and
fwait
subb
pop
mov
test
inc
jo
mov
dec
mov
lods
mov
add
es
add
add
or
xor
push
add
and
add
jo,pn
and
nop
add
or
push
jnp
inc
dec
push
dec
push
testl
es
jge
fstps
sbb
mov
fisubs
adc
pop
push
negb
popf
pop
xor
pop
and
imul
in
dec
add
pop
push
add
inc
add
iret
test
push
pop
pop
inc
add
popa
subl
ficompl
jmp
lahf
in
imul
dec
add
pop
push
pop
adc
ret
jge
sbb
sbb
sbb
mov
push
adc
clts
or
int
mov
add
das
mov
pop
sti
cmp
imull
pop
adc
and
das
push
cmp
push
cmp
dec
jno
push
cmp
mov
fmull
xor
push
lahf
es
pop
cmp
jb
push
cmp
xorl
jbe
addr16
add
ja
cmpsl
or
ljmp
jg
inc
lahf
jbe
push
dec
cmp
jbe
cmp
jnp
call
inc
ret
lcall
push
aad
push
pop
and
pop
pop
fidivl
push
fwait
mov
push
push
add
push
mov
or
lahf
push
pushl
scas
sti
test
adc
mov
jmp
pop
fidivrs
sbb
inc
adc
decl
inc
xlat
pop
pop
mov
aaa
inc
push
push
cmp
lahf
pushl
scas
mov
xor
xchg
push
aas
mov
lcall
push
inc
or
fidivrs
ja
adc
or
incl
pop
xchg
adc
mov
cmpsb
adc
dec
ficoml
push
insb
int
ja
ja
xchg
scas
cmp
inc
or
pop
xchg
ds
aaa
mov
fld
sahf
pop
jbe
fistpl
incl
mov
sub
push
fdivr
pop
dec
xchg
mov
pop
xchg
into
mov
pushl
int
shr
sub
push
inc
fdivrs
out
xchg
pop
push
icebp
cmpsl
ss
outsb
push
pop
sbb
imull
in
data16
pop
xchg
cmpsl
mov
jle
cmp
mov
push
mov
pop
dec
xlat
pop
cmpsl
loop
into
mov
decl
aaa
mov
mov
lcall
pop
aaa
mov
xchg
out
addr16
into
mov
xchg
andb
dec
dec
sahf
dec
flds
aaa
mov
pop
fs
call
pop
addr16
into
mov
pushl
jnp
mov
push
pop
pop
push
ja
inc
int3
or
adc
lods
xchg
mov
push
dec
inc
insb
outsb
inc
push
out
xor
pop
jle
cmp
pop
xchg
mov
mov
inc
in
mov
lds
push
push
dec
jno
pop
pop
dec
je
sbb
lods
xchg
xor
pop
xchg
xor
fisubs
cmp
sbb
std
mov
dec
jbe
insl
loopne
cmpsl
cld
and
pushf
mov
cmp
js
dec
roll
dec
mov
inc
outsl
loopne
outsb
mov
out
xchg
cmpsl
mov
pushl
cmpl
adc
incl
push
jl
inc
jo
pop
pushf
jnp
add
mov
lret
pop
lahf
das
pop
dec
pusha
test
dec
jae
dec
jb
mov
out
xchg
pop
fwait
outsb
int
adc
call
jle
xchg
out
or
cmpsl
mov
in
adc
push
cmp
push
dec
adc
shrb
bound
mov
cmpsl
mov
mov
rolb
pop
xchg
cmp
sub
mov
mov
pop
push
dec
jbe
jne
push
push
lcall
mov
or
pop
pop
push
xchg
xor
add
sbbl
ja
fidivrs
ss
push
addr16
mov
xchg
mov
fwait
roll
daa
mov
dec
jle
addl
test
jo
scas
pop
cmpb
jle
pop
pop
es
inc
push
movhps
addr16
aas
aas
aam
cld
sbb
xor
jae
add
popf
mov
pop
cmp
es
inc
push
stos
and
sbbb
iret
push
sbb
test
mov
aaa
sbb
testl
add
push
sysret
cmpxchg
movsb
jne
clc
ss
pavgb
cmp
ret
ja
pop
call
addb
inc
test
dec
sbb
aas
stos
dec
pusha
or
sub
add
dec
xchg
add
dec
xchg
add
xchg
push
das
dec
xchg
or
dec
xchg
or
imull
dec
cltd
or
xor
or
dec
xchg
pop
ds
push
xor
push
decl
mov
xchg
add
add
daa
dec
movsl
add
dec
xchg
or
decl
and
xor
inc
jne
xor
out
incb
ja
inc
jg
pop
xor
js
dec
ja
dec
push
pop
xor
and
cmpsb
into
and
loop
cmpb
pushf
add
push
arpl
sti
jg
sub
pop
dec
xor
jge
sbb
mov
repz
sti
push
sarb
hlt
daa
aaa
inc
adcl
sarl
xchg
or
decl
add
dec
imul
cmp
ds
dec
sub
xlat
pop
jg
out
fcoml
es
inc
push
lods
leave
inc
dec
insb
ss
incl
sbb
push
jno
sub
sbb
mov
push
cmp
scas
hlt
call
call
dec
adc
decb
cmp
ss
push
decb
cmp
jbe
dec
jg
mov
inc
mov
or
dec
sar
adc
decb
inc
mov
sysret
fidivrs
adc
addr16
inc
mov
sub
aas
les
adc
int3
mov
inc
lahf
ja
inc
icebp
pop
pusha
mov
inc
mov
xlat
jbe
jnp
mov
adc
incb
pop
mov
pop
pushw
inc
push
sbb
or
inc
lret
lcall
int3
inc
jp
dec
mov
sbb
lret
pop
pop
daa
pop
mov
ja
push
mov
xchg
pushl
inc
outsl
daa
push
pop
jge
ljmp
sarl
aaa
push
hlt
mov
dec
xchg
ds
ret
mov
sti
add
push
sbb
sub
push
fs
decb
fsubs
add
decl
das
inc
xchg
push
sbb
ja
xchg
ret
in
testb
inc
mov
fs
aaa
arpl
aas
imul
shr
cmp
pop
inc
push
fisubs
fimull
mov
inc
lds
mov
sub
inc
outsb
scas
incb
pop
lahf
ss
pop
pop
decl
das
add
push
addr16
jle
clc
xchg
inc
enter
lret
jae
push
out
fisubl
hlt
pop
pandn
daa
lods
cmp
movb
call
xor
inc
int3
sub
dec
shlb
adcl
inc
ss
outsb
inc
pop
pop
pop
daa
pop
cwtl
cs
data16
shrl
lret
sub
jecxz
roll
inc
into
mov
loop
out
jno
addr16
in
decl
push
jg
dec
iret
inc
and
and
dec
fidivrs
jb
pop
push
out
mov
pushw
into
inc
idiv
jg
mov
and
imul
mov
call
outsb
ss
xchg
dec
je
dec
xchg
pop
mov
inc
insl
out
and
imul
rcl
fadds
and
push
ss
fucomi
mov
mov
cld
into
pop
jg
out
fucomp
jle
push
js
loope
es
inc
mov
and
aas
push
icebp
ljmp
and
pop
and
mov
jae
repnz
cmp
fdiv
ja
jmp
pop
es
aaa
inc
jg
cmpsl
mov
xlat
pop
imul
call
fistpl
sbb
dec
sbb
fnop
sub
pop
dec
ja
fwait
xlat
sahf
aaa
inc
fcompl
inc
push
and
adc
lock
orl
add
pop
test
dec
jae
jne
pop
pop
push
adc
inc
add
mov
add
push
orl
cmp
dec
adcb
adc
push
loop
data16
or
push
jg
xor
sub
das
adc
inc
xor
add
dec
jle,pn
out
incl
xchg
pop
inc
mov
adc
pop
test
jmp
aas
push
orb
mov
xor
inc
push
add
mov
dec
fnstcw
push
lock
pop
daa
adc
out
dec
test
xor
xchg
add
inc
mov
adc
in
mov
outsb
inc
scas
aaa
inc
push
inc
mov
jg
sarb
mov
dec
movb
inc
add
add
ja
inc
mov
pop
xchg
push
inc
push
inc
mov
and
inc
sbb
push
in
and
cmp
jno
pop
pop
in
out
ss
push
jle
les
inc
lret
jl
cltd
inc
shll
mov
ss
imul
aas
ja
push
int3
add
ss
push
sbb
adc
inc
mov
into
push
inc
xchg
push
lods
loop
inc
out
pop
ret
mov
ss
push
sbb
lret
push
inc
xlat
shlb
xlat
es
or
pop
mov
dec
into
xchg
inc
shlb
call
faddl
jg
pop
shll
xor
mov
in
dec
pop
daa
pop
and
aaa
inc
xor
and
xor
daa
mov
fndisi(8087
outsl
nop
out
ficoms
loop
lcall
xor
xchg
rolb
popa
fisttpl
insl
push
fmul
dec
jae
icebp
inc
add
pop
sbb
nop
mulb
pusha
pop
loopne
push
rolb
out
mov
sldt
popa
sub
sti
add
dec
movsl
or
pop
fcmovnb
push
push
sti
js
sbb
pushf
add
add
add
or
add
and
xchg
aad
push
inc
pop
xor
add
in
daa
add
in
scas
in
add
lods
ret
nop
adc
add
jmp
add
je
arpl
inc
adc
adc
lret
mov
pop
fadds
mov
lods
adc
and
popa
xor
insl
dec
sbb
jg
imul
pop
addb
adc
sbb
pop
bound
sbb
xchg
popa
loope
lock
and
gs
imul
adcl
movsl
pop
push
and
jo
popa
xchg
and
fildl
xchg
pop
fs
lahf
mov
xchg
loopne
mov
xorb
fs
data16
les
gs
sub
imul
sub
insl
ljmp
sbb
dec
push
jg
data16
sbb
jb
jb
adc
xor
xor
ret
inc
bound
mov
jno
gs
dec
push
stc
pop
sbb
lea
inc
pushf
rorl
push
and
inc
and
and
push
sub
add
pop
push
imul
sbb
inc
adc
adc
or
sbb
fisttpll
dec
inc
das
fcmovnb
movb
mov
and
push
outsb
shll
inc
jb
sbb
inc
inc
mov
sub
and
daa
es
jae
xor
pop
test
jg
push
sbb
sbb
and
push
in
add
insl
adc
push
imul
outsb
or
mov
adc
sbb
push
sub
inc
push
push
scas
xchg
dec
sub
cmp
mov
mov
mov
outsb
mov
ret
mul
jg
push
and
je
pop
fadd
gs
and
insb
jnp
sbb
pop
mov
mov
int3
inc
or
xor
xchg
xor
inc
cmp
jg
sub
cmpsl
loope
push
test
pop
inc
pop
cmc
sbb
sbb
and
add
push
cs
jle
sub
sub
nop
or
jmp
sbb
mov
mov
adc
sub
add
sbb
inc
and
push
sub
or
and
outsl
addb
push
or
push
push
popw
outsb
mov
lret
sub
add
mov
jbe
sub
aad
inc
xchg
sbb
dec
push
sub
std
add
adc
pop
push
jl
inc
aad
push
pop
lods
inc
aad
add
popa
loop
aad
cmp
dec
cli
outsb
pop
add
pop
dec
imul
push
lret
adc
add
push
je
ja
lods
add
adc
imul
and
jo
inc
btc
and
sti
sbb
jl
gs
mov
push
insl
call
mov
pop
rclb
lret
push
pop
inc
add
fdiv
sub
adc
and
outsl
in
or
das
and
orb
inc
loopne
add
cmp
in
xchg
andb
dec
in
xor
outsl
jbe
clc
sub
adc
loop
rclb
andl
mov
ja
and
ljmp
or
jbe
jecxz
sub
cltd
sub
mov
inc
pushf
ja
add
mov
mov
xor
imul
cmpsl
loop
aam
jl
add
mov
aam
xchg
lahf
shlb
ficomps
inc
xorl
jb
js
mov
push
adc
push
inc
fisubrl
jge
xor
mov
dec
push
xor
adc
xchg
add
inc
dec
inc
gs
popa
int
test
sbb
rcl
pop
or
je
loop
or
inc
or
pop
adc
dec
rcll
jnp
jecxz
test
add
and
cmp
outsb
cmc
and
mov
cwtl
and
dec
or
sub
pop
inc
fcoml
mov
inc
mov
mov
xchg
call
push
push
add
fst
inc
fs
mov
dec
pop
or
scas
gs
jmp
xor
sahf
cli
adc
add
stos
rcl
sbb
sub
inc
outsl
pop
pusha
or
sbb
jmp
imul
or
and
push
jg
fimull
out
dec
gs
fstpt
mov
imul
adc
outsb
and
mov
imul
pop
rorl
mov
test
or
daa
jnp
sub
sbb
cmp
hlt
stc
xor
cmp
push
pop
daa
dec
je
mov
into
js
and
jmp
push
push
push
scas
je
int3
popa
data16
sub
int
jl
stos
sub
push
inc
pusha
fs
sub
popa
add
push
jo
sbb
arpl
dec
movsb
adc
sbb
clc
sbb
fisubs
inc
cmpsb
pop
sbb
sub
dec
xor
and
jle
push
daa
dec
pop
push
lds
or
xchg
aaa
jp
mov
cmp
mov
cltd
ret
je
pop
and
xchg
ja
mov
pop
dec
icebp
mov
inc
fwait
add
mov
push
jo
dec
pop
mov
pop
leave
dec
mov
leave
outsl
outsl
imul
adc
dec
sbb
lea
cltd
add
loopne
lds
add
fidivs
sub
aam
stos
arpl
sbb
pop
lods
idivl
and
ret
push
test
add
and
popf
cs
xor
cli
jbe
add
fstps
rcll
sbb
popf
fdivs
xchg
sbb
add
xor
xor
ss
xchg
mov
pop
mov
adc
and
push
cmp
arpl
sub
arpl
mov
push
and
cmp
inc
orl
adc
mov
sbb
ss
outsl
cmpsb
cmp
addl
insl
push
unpcklps
adc
loope
sub
add
mov
push
xchg
je
mov
push
adc
jg
je
jne
rorb
cmpsb
mov
imul
sbb
dec
mov
arpl
jb
into
cs
sub
cmp
mov
enter
jae
cmpl
sub
add
sbb
adc
sbb
mov
popa
pop
adc
and
imul
jne
jae
add
mull
pusha
insb
adc
and
ficoml
fstpl
loope
push
lock
inc
rcrl
es
jae
cmp
jb
inc
and
add
inc
roll
xor
rolb
jno
or
mov
or
xchg
outsl
and
cmpsl
and
sbb
pop
and
jne
push
inc
push
in
popa
inc
inc
jo
mov
dec
inc
adc
fndisi(8087
push
xor
aad
sbb
aam
sbb
push
or
popa
daa
inc
xchg
push
mov
ret
or
les
mov
mov
flds
xchg
adc
and
jns
movsl
sbb
lahf
sub
and
push
leave
adc
inc
sbb
sub
ljmp
dec
xchg
movsl
adcb
sbb
movsl
push
add
fs
pusha
sbb
and
mov
adcl
jbe
lahf
es
adc
mov
aam
and
or
jge
add
xchg
dec
pop
sbb
lds
lods
sbb
gs
push
jg
add
imul
mov
movsb
lods
in
and
mov
shr
or
lea
cmp
jmp
sbb
in
insb
repz
push
sbb
jmp
insl
push
push
scas
sbb
pop
rorb
cld
add
mov
test
mov
sub
pop
shrl
add
and
mov
mov
push
fisttpll
mov
add
jnp,pt
push
adc
adc
or
or
add
sbb
fildll
sbb
sub
or
dec
pop
lock
add
pop
push
jns
pop
push
mov
lock
cmp
or
or
add
push
push
in
div
fistl
adc
push
push
or
adc
xor
fistpll
or
push
push
push
and
inc
add
or
or
sysret
and
outsl
push
decl
or
or
sbb
jb
ss
inc
or
or
cmp
add
push
adc
sub
mov
pop
xor
xor
or
add
ljmp
cs
inc
popa
push
sub
sub
sbb
add
incl
xor
outsb
lock
add
lock
add
adc
or
dec
add
adc
push
push
pop
adc
decl
add
or
sbb
adc
sbb
adc
xor
clc
fcmovnu
pop
sub
wbinvd
sub
and
fs
add
pop
sbb
xor
inc
mov
test
sbb
push
cli
add
push
pop
or
rorl
dec
mov
sub
sbb
sbb
or
or
dec
or
add
jp
lock
and
add
ljmp
push
add
add
push
sbb
lock
adc
adc
scas
or
mov
in
jg
add
orb
mov
add
add
cmp
insl
sbb
cmp
daa
adc
xor
or
outsb
jno
loopne
push
push
add
push
add
pop
mov
adc
lahf
push
lods
sub
push
aad
mov
add
sub
gs
arpl
loope
adc
pop
adc
aam
nop
add
sbb
in
adc
adcb
icebp
add
sbb
jo
jle
or
arpl
or
scas
decl
jg
lock
add
adc
or
mov
lcall
adc
or
sbb
gs
or
lock
add
cli
outsl
add
int3
pop
ret
add
out
and
cmp
push
or
adc
or
lock
cmp
jmp
push
sub
pop
in
and
outsb
pop
cmp
push
jge
jmp
adc
cmp
push
out
dec
aas
aas
and
xor
xor
das
or
cli
out
int3
or
outsl
je
adc
push
mov
and
or
pusha
and
mov
decb
jo
inc
push
push
adc
lods
sub
adc
adc
xor
inc
sti
or
sbb
cmp
and
loopne
pushl
cmp
es
adc
adc
bndldx
cmp
sub
sbb
inc
orb
mov
fbstp
das
push
cmp
and
pop
adcb
pop
push
inc
push
sub
adc
cli
outsl
push
pop
mov
adc
sub
pfcmpge
mov
bound
pop
or
or
pop
divl
push
push
add
push
adc
add
mov
and
push
pop
push
push
xor
push
adc
mov
and
mov
add
mov
pop
adc
sbb
push
push
sbb
adc
or
push
pop
sbb
adc
nop
and
int3
push
adc
adc
mov
rcll
lret
sub
inc
loop
lock
push
add
aas
inc
adc
sbb
add
add
adc
or
nop
addr16
push
add
add
insb
lds
or
jle
and
mov
in
cmp
sub
xor
inc
pop
cmp
inc
push
add
add
xor
push
add
sbb
test
jo
sbb
and
pop
xchg
sbb
and
cmp
mov
imul
cvtps2pi
adc
adc
ljmp
das
add
lahf
cmp
push
pusha
cmp
sbb
cmp
pop
push
xor
sbb
pop
mov
roll
xor
aam
dec
mov
mov
jp
sbb
sbb
mov
lock
pop
adc
jle
adc
scas
and
add
push
adc
loopne
stos
fwait
dec
push
cmp
sbb
adc
jecxz
cs
xor
adc
hlt
rclb
lds
scas
scas
pop
add
popa
mov
sti
sti
dec
dec
or
data16
mov
adc
or
inc
or
and
and
push
lea
adc
in
mov
or
or
or
aaa
or
jp
fcoml
add
sbb
adc
inc
jo
decl
push
sbb
adc
push
or
fistl
push
sahf
sbb
adc
fs
inc
andl
mov
into
inc
andb
mov
int
in
ret
xchg
add
insl
jne
inc
adc
sub
loopne
por
mov
adc
and
ds
or
inc
pop
jo
pop
int
sub
daa
sbb
sub
scas
decl
xor
dec
pop
and
popa
add
pop
shlb
inc
test
mov
mov
adc
add
cmp
jo
or
mov
dec
push
add
sbb
push
and
push
pushf
stos
or
dec
adc
pop
or
add
push
pop
or
adc
and
push
gs
ljmp
and
adc
test
dec
sub
cmp
pop
jg
test
dec
push
sbb
sub
sub
or
push
push
push
outsl
mov
pushl
inc
sub
push
call
in
incl
xor
push
aas
and
arpl
xor
jno
aaa
push
nop
jno
ss
push
mov
stos
sbb
add
sub
pop
push
pop
push
js
push
pop
xor
sbbl
add
push
add
pop
lock
sbb
into
push
cmp
fcompl
pop
cmpl
orl
out
xor
mov
mov
and
and
sub
pusha
add
adc
incl
dec
int
dec
add
sbb
xor
jl
adc
icebp
incl
cmp
dec
and
and
pop
push
call
cld
int
push
lock
inc
adc
and
add
add
cmp
cmp
xor
sub
and
imul
push
ret
adc
orb
jl
pop
mov
scas
std
lock
and
and
sti
add
and
jo
bound
mov
pop
orb
pop
cs
outsl
clc
jo
add
into
add
or
jl
fisttpl
adc
aas
add
mov
xor
mov
or
sub
push
xchg
add
pop
int
jne
sub
lock
inc
jmp
push
cmp
bound
jb
inc
mov
adc
adc
inc
adc
sub
push
or
sbb
jg
insl
or
or
push
sub
or
lock
push
or
or
push
sbb
fbld
xchg
cmp
or
or
pop
add
mov
incb
adc
sbb
adc
aaa
cmp
pop
movsl
sbb
push
adc
add
sub
adc
lods
mov
xchg
sbb
sbb
or
sbb
into
push
add
aas
aaa
fidivl
sbb
or
xor
or
push
imul
xor
adc
add
inc
adcl
and
pop
add
adc
pushl
push
imul
inc
cmp
insl
push
cld
cmp
inc
sub
ss
and
insb
mov
clc
push
sbb
ljmp
cmp
xchg
inc
nop
es
sub
add
pop
fs
stos
in
aaa
sub
and
push
and
je
xchg
add
adc
cmp
nop
mov
sub
aaa
xor
enter
inc
ss
xchg
mov
sub
jle
mov
and
sbb
sar
jg
adc
pop
push
pop
dec
xor
xor
aaa
rolb
mov
nop
sbb
jp
pop
cld
incl
aas
and
dec
mov
fs
dec
lcall
inc
xchg
xchg
adc
popa
sbb
cmp
sub
sub
adc
xor
sbb
add
lahf
push
call
cmp
lock
xor
add
add
push
sub
int
pop
pop
jl
lcall
or
mov
outsb
jne
pop
lock
das
lock
add
add
stos
push
or
sbb
push
jg
cmp
pop
add
test
aas
and
pop
adc
jnp
test
jp
ss
push
push
xor
sub
sbb
lods
js
or
add
testb
jae
imul
mov
adc
or
ds
adc
mov
test
cmp
pop
and
mov
lahf
xor
gs
imul
adc
cltd
or
cwtl
xor
rorl
int3
daa
sub
sbb
xor
or
adc
cmp
pop
jbe
mov
push
or
jle
pop
push
jne
icebp
ljmp
sbb
cmp
ss
adc
push
xchg
push
enter
test
mov
dec
shlb
adc
idivl
inc
adc
insb
or
rolb
push
jnp
jecxz
cld
adc
cmp
and
adc
sub
pop
add
sbb
xor
adc
pop
and
adc
fwait
mov
or
and
sbb
add
bound
mov
sub
and
jg
rdpmc
adc
inc
lods
inc
pop
pop
sbb
and
push
jnp
ficompl
add
cmp
sub
pop
and
pop
and
inc
lock
or
aaa
imul
xor
push
pop
or
sbb
or
add
aad
pop
fimull
add
xchg
ja
stos
popa
mov
or
mov
pop
add
push
adc
pop
adc
mov
add
sbb
xor
jno
pushl
jl
fiaddl
mov
pop
push
pop
insl
lock
cmovo
lock
add
dec
xor
xor
rclb
fiadds
mov
sbb
inc
jp
inc
aas
ss
movsl
orl
add
jno
mov
or
test
adc
or
and
push
pop
and
cmp
adc
lock
mov
and
adc
inc
out
mov
push
loopne
psubusb
mov
and
xor
lret
xor
pop
push
cwtl
pop
popf
cwtl
dec
inc
sbb
test
cmp
or
xor
ud0
add
pop
cmp
sub
and
xor
mov
lcall
dec
pop
dec
arpl
cmp
pop
cmpb
movlps
sbb
add
lret
sbb
xchg
inc
add
pop
inc
pop
add
cmp
mov
sbb
sub
mov
sbb
sbb
xor
adc
cs
and
lock
and
push
and
jne
push
cmp
cmp
inc
add
mov
adc
pop
or
add
push
pop
clc
lods
clc
jne
jp
jb
cli
push
fs
or
mov
add
cmc
push
push
sbb
cmp
add
and
mov
sbb
bound
and
test
subl
adc
fcoml
sahf
adc
fstpl
push
mov
imul
sarb
adc
push
cmp
adc
and
lock
daa
lods
cli
adc
inc
dec
or
xchg
incl
imul
sub
and
aas
lock
test
loope
cmp
hlt
mov
sbb
or
movsl
adc
aas
dec
adc
pop
sbb
dec
xchg
outsb
inc
or
push
or
sbb
push
mov
push
test
daa
mov
fmuls
cmpsb
pop
mov
jge
adc
adc
pop
and
add
inc
or
or
mov
or
or
push
and
cmpsl
sbb
sub
add
stos
lock
sbb
mov
or
loopne
test
or
or
mov
daa
cmp
push
add
adc
jno
ds
rcrb
in
add
mov
inc
sub
fadd
shl
mov
xchg
mov
lock
add
push
in
inc
add
add
lock
cvttps2pi
in
mov
add
and
dec
push
ret
lock
add
lock
inc
jg
ja
lock
dec
aas
sbb
sbb
inc
or
lock
add
popa
or
xchg
lock
add
or
xchg
into
push
lock
es
sub
and
jle
fdivrp
call
out
mov
lock
inc
adc
xor
sub
xor
sub
jge
pushf
add
xor
pop
adc
add
popa
adc
jb
mov
push
mov
xor
cmp
and
sahf
lock
inc
cmp
cmp
sub
imul
cmp
clc
xchg
or
iret
mov
sub
incl
lock
or
jl
pop
push
xor
and
or
and
fisttps
jbe
push
push
xor
addr16
daa
lock
clc
filds
jl
sub
push
push
js
lock
add
jg
outsb
push
in
dec
sbb
shlb
push
pusha
push
pushl
ljmp
sbb
and
outsl
lock
or
jmp
inc
and
sbb
adc
aas
push
pop
add
jge
sar
bndldx
inc
add
dec
cwtl
pop
pop
loop
mov
adc
dec
inc
lock
cmp
xor
xchg
lock
add
aas
dec
fistpl
push
mov
loopne
sbb
test
mov
scas
imul
mov
and
xchg
aaa
sbb
sub
dec
pop
adc
aaa
or
jae
mov
add
sbb
jecxz
decb
int3
xchg
add
add
xor
pop
adc
mov
testb
pop
jnp
ja
or
and
add
or
add
adc
add
movups
loope,pt
or
push
mov
add
aaa
sbb
dec
push
pop
je
adc
pop
ficoms
cmp
mov
push
ljmp
mov
cmp
unpcklps
sahf
cwtl
add
aas
in
outsb
lea
jmp
push
xor
fs
pop
pop
pop
roll
or
or
lods
popa
mov
sbb
or
adc
push
jb
getsec
push
jns
pop
sub
shr
call
inc
mov
lock
add
cs
or
push
sub
mov
fdivrp
pop
test
jge
adc
sbb
das
adc
pop
lock
sbb
sub
and
xlat
or
or
fists
add
push
or
cs
into
pop
fwait
testl
push
jo
cmp
sbb
mov
adc
stos
lea
loope
mov
xchg
sbb
push
or
cwtl
outsl
les
sbb
sbb
or
sub
sahf
pop
and
and
inc
mov
and
in
add
stos
add
and
and
and
lahf
xlat
out
data16
jb
jne
jb
js
jnp
jno
jo
and
movsl
mov
std
adc
sbb
pop
or
sbb
adc
jg
sbb
cmp
add
pushl
lock
adc
jbe
dec
adc
or
push
movsb
or
call
or
jb
and
lock
add
sub
inc
jo
arpl
test
dec
lock
add
lock
sahf
sub
push
ret
and
adc
test
bound
and
jg
lock
push
xor
inc
jge
in
xchg
adc
jg
test
es
fs
sbbl
in
inc
sub
adc
scas
cli
aaa
mov
add
in
pop
lock
je
outsl
add
jg
inc
or
or
sarl
fbstp
or
es
and
mov
xchg
add
push
lock
stos
push
movsb
pop
adc
cld
lcall
adc
push
xor
je
xor
sbb
test
adc
inc
sbb
mov
and
sbb
test
or
fdivs
lock
es
sbb
jne
and
push
sbb
sub
and
sbb
repz
sbb
and
mov
dec
adc
push
and
aaa
sbb
adc
sbb
movb
popa
cmp
add
add
xchg
or
or
xcrypt-ecb
cmpsl
or
mov
or
aad
and
rcrb
and
xchg
sbb
or
sti
in
sbb
sbb
sub
sbb
or
sub
into
sub
and
sbb
push
test
jge
pop
lods
cmpsb
rclb
sahf
adc
ret
mov
sbb
and
sti
ficomps
and
adc
sbb
enter
es
add
cs
sbb
adc
mov
mov
or
and
cmp
add
aad
int
daa
sub
adc
sub
and
pop
lods
sbb
ffree
jns
sub
popa
mov
cmp
jge
adc
push
push
insl
sarl
daa
or
pop
or
jo
sbb
outsl
mov
sbb
adc
adc
push
or
das
push
cmp
xor
push
cmp
sub
test
mov
mov
xor
testl
outsl
mov
repnz
mov
ljmp
fnsave
mov
imul
and
fwait
pop
mov
or
jo
adc
ss
pop
pop
sbb
ja
jmp
push
inc
adc
dec
add
sbb
cmpl
pop
add
xor
or
mov
mov
cmpsb
repnz
insl
sbb
test
sub
ss
and
pop
add
or
adc
ss
or
jne
add
mov
cmpl
sbb
or
push
sub
sub
push
adc
push
and
inc
cli
jg
adc
adc
adc
std
push
sbb
mov
lods
or
idiv
lcall
andb
adc
aaa
pop
cmp
or
unpcklps
push
adc
ud2
pop
and
pop
incl
lock
sub
mov
fstl
cmc
aaa
mov
jmp
loop
adc
or
pop
push
push
rcr
jl
adc
and
or
lcall
sbb
jno
inc
sbb
jbe
xor
psrld
push
or
inc
data16
call
push
test
lods
jo
sub
push
dec
inc
ucomiss
sbb
sub
adc
out
sbb
mov
xchg
lock
add
mov
in
xor
add
or
verw
or
call
add
cmpsl
or
push
inc
adc
xor
sub
xchg
dec
lods
or
pextrw
andl
inc
push
sbb
dec
das
xchg
or
add
or
inc
xor
sbb
adc
push
pop
or
xchg
std
int
ret
or
add
push
adc
push
repnz
sbb
syscall
rcl
add
mov
adc
push
pop
pop
dec
loopne
pop
enter
in
imul
pop
inc
mov
inc
test
clc
add
add
out
cmp
int
adc
cli
add
lock
ja
js
aaa
dec
lock
add
cli
ljmp
xor
aaa
push
fimull
pusha
sub
sbb
lahf
sbb
cmp
and
push
sub
sub
dec
adc
lahf
les
and
cmp
lock
or
adc
data16
pushf
sub
pop
mov
loopne
and
add
sub
pop
and
xor
test
lock
dec
or
add
mov
push
pmaxsw
push
adc
lock
aam
adc
pop
ja
and
and
lret
mov
xor
fmuls
mov
data16
lods
and
sbbb
or
mov
stos
imul
and
mov
mov
pusha
rolb
std
lret
jp
or
inc
pushf
in
or
and
mov
inc
mov
lock
dec
add
add
pop
inc
sub
clc
or
add
add
push
mov
sti
sbb
daa
xor
push
adc
lret
sahf
sti
push
inc
pop
pushf
cmp
lods
dec
dec
sbb
xor
insl
roll
adc
pusha
mov
or
ss
and
mov
ret
jo
pop
push
fwait
cwtl
insb
lock
scas
jl
movb
xor
std
and
inc
push
fcomps
addb
mov
adc
push
stos
cld
nop
sbb
inc
push
push
jno
or
xor
push
xor
lahf
shrb
cltd
xchg
aaa
shll
xor
inc
lahf
mull
push
gs
pusha
dec
add
push
jb,pn
fildl
nop
out
inc
jo
pop
push
jae
push
lock
xlat
jbe
test
jg
lock
fs
cs
or
or
xchg
and
xchg
incl
cmpb
jne
pusha
mov
lea
push
or
jmp
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
popa
xor
ret
add
lea
xor
mov
inc
or
je
cmp
ja
add
mov
xchg
rol
xchg
add
mov
jmp
and
shl
mov
add
jmp
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
