add
add
add
add
sub
add
push
add
add
add
add
add
add
add
add
add
add
add
inc
add
addb
add
add
add
add
add
add
add
or
add
add
sbb
add
test
add
in
add
add
add
add
add
call
add
addb
add
add
add
add
add
add
add
add
add
cwtl
add
add
int
add
adc
add
add
add
add
add
add
clc
add
add
add
add
add
add
add
add
add
or
add
add
add
adc
add
add
in
add
add
add
pop
add
add
push
add
inc
add
add
jns
dec
add
outsl
add
add
add
add
add
and
sbb
add
add
test
add
add
sub
add
and
add
inc
add
add
add
add
add
add
or
add
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
addb
add
rolb
inc
rol
addb
add
rolb
inc
rol
addb
add
rolb
inc
rol
addb
add
rolb
inc
rol
addb
add
rolb
inc
rol
addb
add
rolb
inc
rol
addb
add
rolb
inc
rol
addb
add
rolb
inc
rol
addb
add
rolb
inc
rol
addb
add
rolb
inc
rol
addb
add
rolb
inc
rol
addb
add
rolb
inc
rol
addb
add
rolb
inc
rol
addb
add
rolb
inc
rol
addb
add
rolb
inc
rol
addb
add
rolb
inc
rol
addb
add
rolb
inc
rol
addb
add
rolb
inc
rol
addb
add
rolb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
rolb
addb
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
addb
add
sarb
mov
add
add
add
add
add
add
add
add
add
add
sarb
mov
add
add
add
add
add
add
add
add
rol
rolb
add
rol
rol
add
rol
rol
add
add
add
sarb
mov
add
add
add
add
add
add
add
add
rol
rolb
add
rol
rol
add
rol
rol
add
add
add
sarb
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rolb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
add
incl
add
add
pushl
or
add
add
add
rolb
add
add
ficomps
add
add
add
add
add
aas
add
add
add
add
add
add
rolb
nop
and
add
adc
add
add
add
add
les
add
cmp
add
dec
pop
add
pop
pop
add
imul
add
add
mov
add
add
add
xchg
pop
add
add
add
mov
add
add
add
add
pop
add
jo
add
adc
push
add
and
add
xchg
push
add
sub
push
add
dec
inc
push
dec
inc
dec
xor
cs
dec
dec
add
inc
push
xor
cs
dec
dec
add
inc
inc
push
push
xor
cs
dec
dec
add
push
dec
inc
dec
xor
cs
dec
dec
add
add
fs
imul
add
add
je
jb
arpl
fs
jae
add
add
jb
jne
insb
push
jb
je
arpl
add
jb
jne
insb
inc
insb
insb
outsl
arpl
add
push
imul
jb
add
add
imul
jae
add
inc
push
js
inc
add
add
jae
jb
gs
je
imul
jb
je
push
jb
arpl
jae
gs
outsl
jb
add
add
and
add
push
add
add
add
add
fs
aad
pusha
call
pop
mov
sub
lea
mov
cmp
je
mov
lea
mov
cmp
je
movb
mov
sub
mov
add
lea
add
pusha
push
push
push
push
call
test
je
mov
call
pop
mov
add
push
push
call
popa
mov
mov
add
mov
cmpl
jne
add
mov
jmp
mov
add
add
cmpl
je
add
mov
add
push
push
push
push
pushl
pushl
mov
mov
mov
add
call
pop
pop
pop
pop
cmp
je
add
jmp
push
push
pushl
call
lea
mov
lea
mov
mov
cmp
je
mov
inc
sub
cmp
ja
mov
cmpb
je
mov
cmp
jne
mov
shr
rol
xchg
jmp
mov
xchg
rol
xchg
sub
add
mov
add
sub
mov
loop
call
lea
mov
cmp
je
mov
sub
je
mov
lea
mov
lea
mov
cmp
je
mov
add
mov
jmp
mov
add
mov
xor
mov
inc
or
je
cmp
ja
add
add
jmp
and
shl
mov
add
or
jne
mov
add
jmp
xor
xchg
mov
cmp
je
lods
or
je
add
add
jmp
xor
shr
lods
or
je
add
add
jmp
lea
mov
lea
mov
cmp
jne
add
push
push
push
push
push
push
call
pop
pop
cmp
jne
add
mov
rep
sub
sub
push
pushl
push
push
call
push
pop
sub
xor
mov
cmp
je
inc
lea
mov
push
push
push
push
push
pushl
pushl
mov
add
push
call
pop
pop
pop
pop
add
loop
mov
cmp
je
popa
popf
mov
ret
popa
popf
jmp
mov
or
je
mov
add
cmpl
jne
cmpl
jne
cmpl
jne
jmp
mov
add
push
push
push
lea
add
add
push
call
pop
pop
pop
cmp
je
mov
add
add
xor
mov
cmp
jne
inc
jmp
mov
add
push
push
push
cmpb
jne
inc
mov
and
mov
movb
push
push
pushl
call
pop
pop
pop
pop
cmp
je
mov
mov
pushl
popl
add
inc
jmp
clc
ret
jmp
push
mov
mov
mov
cld
mov
movsb
call
jae
xor
call
jae
xor
call
jae
mov
call
adc
jae
jne
stos
jmp
call
dec
loop
mov
call
jmp
lods
shr
je
adc
mov
jmp
xchg
dec
shl
lods
mov
call
cmp
jae
cmp
jae
cmp
ja
inc
inc
push
mov
sub
rep
pop
jmp
add
jne
mov
inc
adc
ret
xor
inc
call
adc
call
jb
ret
pop
ret
push
call
ret
mov
adc
push
add
or
inc
cmp
add
or
ret
mov
add
adc
mov
cmpl
adc
or
push
and
rolb
add
call
enter
add
shl
or
dec
mov
jne
pop
sbb
add
mov
xor
fildl
or
sub
in
ljmp
jb
sub
or
add
adc
out
xor
inc
out
clc
dec
jne
pop
mov
bound
jp
mov
ret
pop
addr16
cs
ret
push
movzwl
mov
or
movl
jae
mov
mov
sbb
sarb
cli
sar
add
cmp
sbb
lahf
adc
loope
jno
data16
jb
jmp
inc
sub
sahf
clc
fistl
scas
mov
or
int3
shr
sahf
ret
inc
test
ds
add
in
push
push
jbe
jge
sub
jle
mov
xorb
int3
or
xor
aas
std
add
int3
dec
cld
sbb
pop
ret
add
shl
pop
pop
or
sub
cmp
jbe
mov
xchg
inc
cmp
mov
notl
jle
push
lret
inc
pop
or
call
mov
push
or
inc
cmp
jl
adc
leave
popa
fcomi
xor
inc
xchg
outsb
enter
test
or
jo
xchg
mov
push
pop
mov
sar
sub
les
jne
mov
shr
sbb
loopne
add
jbe
aaa
call
or
cmp
sti
inc
inc
shr
sbb
sbb
jbe
pop
mov
xor
adc
mov
test
push
sbbb
icebp
call
es
sub
push
lea
pop
call
cmp
icebp
xor
push
jne
lret
and
mov
lahf
and
add
push
clc
mov
inc
adc
sub
jl
cmp
or
orb
enter
mov
sbb
leave
cltd
dec
hlt
nop
push
call
movsb
data16
orl
push
in
inc
lock
shl
add
xor
dec
dec
into
cmp
cmp
push
adc
fdivl
push
sbb
mov
xorl
fcompl
rep
adc
retw
jne
inc
add
cli
cld
inc
mov
add
xchg
pop
mov
and
mov
adc
hlt
test
fwait
ret
push
les
mov
jbe
sbb
test
movsl
mov
sub
inc
add
movsl
inc
pushf
mov
add
and
leave
push
adc
jge
push
gs
push
jmp
and
or
cmp
or
movsl
sbb
into
pusha
or
divb
pusha
clc
lcall
push
sbb
push
insb
out
add
mov
fsub
mov
iret
push
sbb
push
repnz
scas
adc
add
test
cmp
sbb
sub
sahf
das
mov
inc
dec
inc
xchg
add
rorl
call
pop
cmp
je
sub
incl
setge
sub
clc
lea
xchg
hlt
shll
add
decl
mov
jmp
mov
inc
xor
xchg
jmp
sub
mov
lock
jne
leave
adc
push
mov
cmp
insl
sbb
fldl
test
fwait
push
aad
cltd
jle
mov
or
jmp
lock
in
rorl
sub
mov
xor
or
call
add
mov
add
sub
jp
dec
push
andl
sub
leave
loop
and
sti
dec
repnz
popa
mov
sub
pop
jge
dec
push
in
sub
pop
dec
pop
add
pop
jo
jmp
add
ret
psubq
ds
add
and
inc
adc
imul
nop
leave
dec
xor
dec
cmpb
cmp
sbb
rcl
inc
test
mov
addb
inc
adc
rolb
jle
cmp
icebp
icebp
iret
rorb
nop
stos
mov
shrb
int3
pop
outsb
sbb
movsb
jne
cmpl
lock
adc
jb
mov
orb
shl
dec
add
les
xchg
sbb
push
cs
sub
jb
xor
mov
mov
negb
rcll
rcrl
dec
jne
cmp
jne
dec
sbb
cmp
add
sub
add
popa
jecxz
iret
push
pushf
dec
sbb
jecxz
lcall
inc
mov
sub
mov
cmp
dec
mul
sbb
inc
outsb
addb
xchg
rolb
add
les
xor
add
add
adc
add
pop
add
and
insb
inc
add
add
add
add
add
and
cmp
and
sub
adc
pop
int3
fistps
insw
mov
xchg
jmp
or
push
les
cmp
scas
pop
jg
xchg
lret
add
adc
sahf
roll
adc
mov
mov
negb
jl
inc
icebp
dec
movsb
push
mov
ljmp
rol
andl
in
aas
push
add
jne
jmp
pop
repnz
inc
rclb
cli
push
cli
fdiv
test
pop
inc
loop
cmp
mov
jecxz
scas
jns
push
inc
mov
aas
scas
lea
lods
dec
dec
cmp
and
js
mov
aaa
push
and
mulb
xchg
inc
es
lahf
fisubrs
shl
sbb
int
cltd
adc
mov
mov
adc
push
repz
mov
aam
in
sbb
lods
push
popf
sahf
pop
add
lret
and
addr16
movsl
repnz
repz
mov
jns
mov
shl
pop
test
fcmove
xor
sub
test
pop
ficoms
push
mov
jg
rcrl
dec
shlb
inc
cmc
cld
or
fst
out
sbb
imul
cmp
icebp
mov
or
mov
test
jo
int
add
shlb
and
das
ss
cltd
ss
ret
push
call
mov
mov
lret
pop
fsubrs
xchg
xchg
mov
jge
mov
sarb
scas
out
mov
scas
adc
outsl
xchg
jp
jle
mov
inc
aad
add
xchg
sti
rcr
fwait
sar
out
push
push
dec
mov
jne
sub
pusha
cmp
dec
mov
push
jg,pt
xchg
ret
ljmp
shll
andb
fbld
in
add
pop
xchg
sbb
scas
int3
fs
inc
add
adc
push
outsb
movsb
divb
dec
repnz
mov
xchg
js
xchg
pop
inc
orb
xchg
rolb
dec
shlb
mov
stos
sbb
pop
rolb
inc
xor
es
into
call
push
inc
ftst
js
daa
adc
sub
fs
pop
and
ds
jae
idivl
and
sti
inc
nop
shr
std
dec
icebp
daa
push
add
inc
fldlg2
shll
daa
sbb
cmp
aam
xchg
sub
dec
aaa
add
xchg
mov
cmp
lods
pop
pop
and
fcmove
mov
jb
movsb
and
out
jb
xchg
jmp
jo
inc
repnz
pop
cmpsl
jbe
cltd
lods
push
mov
mov
mov
and
ss
roll
cmc
cltd
sbb
sub
ret
jo
cmp
pop
das
mov
and
loopne
adc
adc
mov
dec
xchg
sub
subb
mov
icebp
adc
stos
push
clc
sti
mov
ss
pop
xor
pop
push
gs
pop
addl
xor
loop
cld
sar
adc
scas
push
add
insb
lock
and
adc
jecxz
test
pop
ret
xchg
push
mov
testb
jnp
ret
int3
popa
jecxz
cmpsl
lea
pop
xchg
sub
jmp
hlt
insb
xchg
adc
lahf
fisubrs
push
sub
ja
lcall
je
pop
and
ret
addb
ret
clc
cmp
enter
rcl
xor
lds
daa
or
ja
scas
xchg
divb
fwait
push
aas
lods
xchg
or
jl
push
test
push
fwait
pop
xchg
jl
out
jbe
adc
mov
fisubrs
jo
out
ss
ds
cmp
nop
cmp
jl
ds
lea
pop
add
jb
and
insl
aad
xor
xchg
aad
mov
cwtl
push
pop
mov
test
les
cmpsl
loopne
push
fs
test
test
xor
imul
jb
test
out
jecxz
xchg
les
scas
dec
sahf
mov
les
fcmovne
xorl
fstl
mov
fsubrp
rorl
and
sbb
mov
and
push
pop
mov
fbstp
push
jge
cs
popf
out
jl
pminsw
mov
movsb
push
xchg
arpl
jl
xchg
addl
adcl
sub
bound
adc
bound
imul
mov
negb
daa
sbb
jbe
sub
insb
stos
imul
mov
pop
jae
inc
rcl
ss
mov
int3
inc
push
aam
pop
add
je
mov
dec
sti
jbe
mov
out
call
stc
pop
pop
in
std
pushf
xchg
ret
pushf
mov
sti
dec
test
push
fdivl
jae
std
loop
xor
outsl
cmp
orl
call
rcrl
fisubs
imul
and
ror
fidivrl
and
movsb
leave
mov
dec
pushf
pop
push
xor
jecxz
in
data16
outsb
adc
jno
bound
stos
test
mov
fildl
adc
imul
pop
movsb
mov
aaa
inc
mov
js
lock
adc
jne
or
or
sbb
cwtl
lcall
mov
fnsave
jle
dec
mov
movsb
push
jmp
sub
and
outsl
adc
and
sub
in
add
in
into
lock
cld
bound
gs
add
clc
sub
jge
mov
ss
cmp
paddsb
xchg
sub
incl
cmp
sbb
negb
stos
inc
mov
pusha
jb
fisttpl
cmp
out
ret
stos
mov
dec
and
cwtl
pop
in
push
or
icebp
pop
jns
fdivr
lcall
mov
mov
gs
and
adc
in
int3
mov
sub
sbb
cmpsl
in
aad
imul
insl
xchg
pop
dec
sub
add
xchg
push
mov
push
xchg
icebp
in
pop
jbe
icebp
int
dec
inc
cmp
mov
xor
test
inc
sahf
dec
scas
js
mov
sbb
loope
pop
daa
xchg
push
mov
repz
mov
jns
stos
push
lea
or
pop
mov
sbbb
jo
pop
xor
jp
mov
scas
dec
push
imul
pop
sti
addr16
mov
sub
negb
repz
jne
pushf
pop
xchg
dec
shl
inc
movsl
mov
subl
jp
sub
mov
outsl
shrb
nop
xor
and
loop
mov
fs
inc
stos
loopne
std
mov
repnz
lahf
ds
pop
scas
mov
add
mov
std
call
pop
cmc
jl
dec
fidivs
pop
lods
pop
xor
mov
adc
insl
les
inc
jns
xor
insl
lea
inc
dec
loopne
jg
outsl
lods
orl
popf
mov
lock
mov
inc
inc
fsubl
in
push
loop
cmp
leave
dec
push
cmpsl
adc
mov
stos
push
repnz
ja
add
ret
roll
mov
je
cmpsl
mov
mov
inc
lahf
frstor
or
inc
ljmp
jp
outsl
fs
sbb
push
push
outsb
push
shll
mov
xchg
or
pop
cmp
sbb
cli
jge
pop
lret
std
icebp
mov
pop
xchg
mov
mov
lcall
mov
jns
lods
loopne
xchg
cli
aaa
add
movsl
push
mov
andl
push
imul
and
xorl
fidivrl
dec
mov
movsb
cmp
lods
and
cmp
push
push
inc
test
pop
and
cmp
pop
adc
xchg
stos
jae
pop
xor
ret
cmc
scas
gs
and
jns
mov
in
into
fucomi
int
leave
mov
das
jl
xlat
notb
mov
push
cmp
iret
sar
imul
rcrb
lock
fnstsw
loop
adc
aaa
mov
scas
in
aam
fcomi
push
scas
sbb
lods
mov
movsl
nop
dec
lret
pop
sbb
push
xor
mov
gs
xlat
add
mov
push
jnp
cwtl
adc
gs
repnz
cmp
or
test
shl
das
fwait
and
fcoms
adc
lods
out
mov
adc
or
sub
add
mov
lahf
pop
jns
push
testl
int3
sub
ret
cmp
push
addr16
inc
push
mov
sub
push
mov
cmp
xor
mov
movsl
dec
xchg
sbb
mov
lds
getsec
adc
out
adc
push
cmp
fdivrs
fwait
push
jecxz
mov
pop
test
cmp
mov
inc
xchg
lods
sbb
mov
inc
loopne
jae
mov
sbb
sub
or
cmp
test
sti
or
cmpsl
dec
mov
cmp
mov
out
pop
sub
xor
inc
dec
and
sbb
js
mov
cs
dec
xlat
mov
shr
xor
jns
xchg
jmp
add
xchg
pusha
sbb
js
pop
dec
clc
cltd
mov
push
mov
or
xlat
sahf
sbb
lock
cwtl
sub
int3
or
scas
inc
mov
jp
mov
sbb
cwtl
sahf
mov
cmp
cmp
decl
outsl
ljmp
push
mov
sbb
ds
int
fistl
push
cmp
mov
jno
leave
mov
adc
icebp
popa
bound
pop
cmc
xchg
adc
cmpsl
clc
xchg
add
aaa
dec
fistpl
and
pop
pop
scas
in
add
test
idiv
leave
mov
sbb
cmp
add
sub
mov
data16
jns
fdivr
andl
cmp
pop
out
lahf
xchg
push
dec
mov
cld
add
mov
outsl
sbb
mov
sub
adc
xchg
cltd
inc
adc
sbb
imul
ret
push
in
push
data16
adc
or
iret
addr16
lods
sar
scas
in
in
outsl
std
sarl
cmovne
xor
out
push
xchg
add
mov
shl
in
pop
and
lcall
jns
and
sub
or
and
fcompl
rcrl
pop
shl
xchg
dec
sub
push
push
int
cmp
cltd
mov
imul
lret
fbstp
ficoml
stos
mov
push
jne
sahf
lret
xor
xchg
cmp
xor
xchg
sub
fdivs
mov
add
xor
ret
jne
inc
add
push
pop
in
add
int3
cmpsl
mov
add
mov
mov
adc
lods
mov
adcl
fisttpll
or
jne
and
cmp
dec
mov
fwait
std
inc
movsb
dec
repz
inc
rcrb
aas
mov
sbb
mov
pop
xchg
int
gs
dec
stc
inc
lea
shrb
lcall
je
sahf
sti
lea
and
out
outsb
sbb
jnp
pop
cli
cmp
stos
and
add
mov
add
dec
push
mov
pop
out
or
adc
add
les
ret
xchg
out
in
stc
stc
ss
scas
push
pop
jg
std
or
dec
adc
icebp
leave
xchg
add
jo
xlat
push
sub
cli
testb
insl
ja
inc
sub
sub
fst
xchg
fucomip
inc
add
jb
hlt
inc
lods
sbb
fistl
pop
test
fwait
pop
pop
mov
inc
adc
mov
adc
jae
xchg
int
adc
jmp
mov
das
mov
mov
dec
lcall
jecxz
out
sbb
dec
out
stos
lahf
fcompl
xor
ret
repz
adc
test
jl
push
inc
lods
or
sub
mov
adcl
mov
mov
fwait
or
mov
jge
add
jmp
push
mov
xchg
das
pop
ljmp
mov
enter
xchg
out
fisttps
jb
sub
xchg
mov
sar
mov
flds
faddp
in
sbb
xchg
lock
icebp
fsts
lds
into
pop
lock
pusha
fildll
aas
jno
push
sbb
xlat
addr16
in
and
mov
adc
cli
mov
ljmp
mov
iret
lcall
push
filds
sbbl
test
iret
inc
mov
and
mov
jno
int3
loopne
mov
lods
repnz
push
andl
mov
sub
orl
or
add
sarb
ljmp
repz
insb
pop
mov
pop
jnp
xchg
inc
cmpsl
or
mov
les
jp
out
je
dec
arpl
cwtl
lods
pop
sub
rcrl
mov
jno
mov
mov
daa
clc
rorb
and
sub
in
pop
mov
pop
push
xor
pop
pop
dec
push
mov
pop
sbb
fcomps
pop
movsb
insb
push
inc
xchg
xchg
flds
dec
mov
ror
and
movsl
fbstp
sahf
pop
int3
dec
push
jmp
push
sub
pop
sahf
incl
xor
adc
xchg
sub
movsb
movsb
or
jg
aaa
ret
mov
mov
xchg
mov
sub
outsl
shrb
push
adc
push
pushf
jl
xchg
dec
and
inc
inc
jecxz
cltd
call
shll
cli
mov
jle
lds
adc
bound
cli
scas
xchg
inc
or
xchg
mov
jle
fidivs
in
into
push
add
addr16
in
mov
jge
ja
arpl
dec
ret
jae
imul
inc
mov
and
shlb
arpl
repz
jo
push
push
mov
loope
xor
in
lret
pop
push
mov
sbb
loope
outsb
rcll
dec
lods
stc
xchg
rclb
and
inc
subb
dec
or
mov
xchg
jp
pop
sub
inc
enter
icebp
jns
jo
stos
jl
mov
in
jge
subl
push
leave
pusha
sub
fs
jmp
xor
aaa
nop
imul
sub
data16
jae
nop
scas
mov
stos
sbb
cmp
sub
scas
cs
dec
or
sbb
xchg
test
add
inc
push
lcall
dec
sub
or
sbb
xchg
push
inc
mov
shlb
push
imul
cs
fwait
xchg
mov
push
or
aaa
fstpl
push
jns
mov
or
mov
push
add
ret
cli
aam
cmp
hlt
xor
xchg
mov
test
je
cwtl
dec
es
push
out
lea
lea
test
fdivs
inc
or
movsl
mov
pop
cmp
in
sbb
aaa
lods
mov
pop
dec
imul
xchg
bswap
out
out
pushl
dec
mov
ds
push
cmpsl
cmp
and
mov
aaa
repz
and
xchg
fists
das
cwtl
loop
add
ret
pop
lret
enter
daa
mov
xchg
jns
out
outsl
push
jmp
daa
push
pop
stos
push
xchg
call
addr16
addr16
cld
hlt
loope
mov
mov
xchg
in
inc
dec
lcall
pop
std
addr16
push
add
ror
xchg
sbb
fbstp
dec
or
xchg
xor
incb
sti
into
sub
stc
lods
int3
rorl
mov
repz
xchg
cmp
push
iret
loop
push
add
outsl
shll
mov
subb
cmp
js
dec
cmp
sbbl
mov
outsb
xchg
fnstsw
cmp
mov
out
outsl
loopne
lahf
out
dec
lock
addr16
mov
jg
cmp
movsb
lock
xchg
cmp
jmp
mov
cld
mov
mov
or
mov
int3
loop
inc
dec
out
dec
mov
add
stos
add
xlat
sarl
idivl
mov
aam
data16
xchg
add
leave
jl
mov
sahf
leave
mov
movsl
lock
jge
and
sub
movsb
jnp
jae
jbe
push
cltd
push
test
pop
mov
cmpsl
mov
lea
xchg
mov
pushf
test
mov
jmp
cmp
scas
mov
cwtl
add
fstpl
bound
out
or
and
mov
or
mov
test
inc
jno
ss
inc
in
addr16
ss
pop
gs
cmp
loopne
popf
rorb
cltd
je
clc
in
mov
cmp
jb
jmp
test
ror
mov
and
mov
out
les
mov
mov
add
sarb
sub
mov
pop
lods
add
push
je
pop
adc
popa
mov
addb
push
sub
int
fistpll
rcl
es
push
shll
lret
push
sbb
inc
scas
dec
xor
adc
jne
jecxz
jl
jo
pop
int
jnp
repz
push
out
inc
pop
addr16
sub
incl
mov
hlt
fistpl
pusha
sub
xor
inc
je
das
subb
xor
test
cltd
cwtl
in
popf
pop
jle
shr
mov
shrl
aad
scas
jl
sub
mov
mov
aas
adcl
and
icebp
mov
in
test
adcb
insb
inc
loope
lds
cmp
and
or
lea
dec
or
sub
loop
icebp
sub
jo
push
cld
inc
xor
jno
add
push
ret
popa
aam
mov
add
jae
inc
fdiv
jl
enter
sarb
fdivrs
and
lret
pop
sbb
jns
push
mov
or
fcompl
sub
outsl
test
push
icebp
adc
mov
sbb
out
mov
aas
mov
in
and
sub
popf
pop
inc
ror
fistpll
lock
das
lret
call
hlt
jp
add
mov
dec
and
or
fiaddl
add
pop
and
jg
test
xchg
and
cltd
adc
pop
xor
xlat
mov
sbb
arpl
adc
mov
mov
jae
mov
dec
cmp
andl
incl
jp
ljmp
push
mov
push
sbb
or
xor
jns
std
pop
xchg
and
call
xchg
cmp
fistl
je
xor
mov
xlat
push
jmp
aam
mov
sahf
in
cwtl
gs
jne
mov
dec
in
jmp
and
add
outsl
xor
movsb
jne
loop,pn
mov
sahf
int
gs
repz
mov
jg
subb
rcr
and
xchg
mov
xchg
es
and
mov
mov
sti
js
add
pusha
dec
ficoms
pop
xchg
in
rorl
inc
adc
test
inc
insl
arpl
dec
mov
lahf
lods
or
cld
repz
aaa
out
adc
mov
add
fcoms
add
test
jge
flds
out
clc
push
stc
dec
sti
adc
jns
push
ret
sbb
pop
jnp
pushf
xchg
or
pop
pop
loopne
jnp
rorb
dec
sbb
movsb
lcall
pop
and
rorb
jbe
cmpsl
mov
mov
push
add
xor
mov
aaa
pop
and
shlb
mov
outsb
cmp
xchg
rolb
jecxz
mov
xor
leave
jbe
add
loope
adc
lcall
add
ret
ljmp
pop
dec
inc
jno
popf
sub
jge
push
aad
mov
lock
push
addr16
push
pop
popa
push
stc
add
xchg
sbb
and
dec
inc
mov
and
cmpl
jle
loop
stos
das
push
push
xchg
pop
and
fisttps
iret
call
and
or
cmpl
jle
sub
inc
jns
test
mov
xchg
pop
jecxz
fbld
sbb
enter
mov
jg
push
adc
jmp
lds
test
int
add
mov
mov
mov
lret
xchg
movl
aam
adc
xor
sbb
pushf
xchg
aas
pop
dec
sub
xchg
ficomps
fstps
jmp
in
scas
cld
fnstsw
xchg
push
jl
or
pop
shll
lods
ds
pushl
pop
out
call
add
xor
xchg
mov
inc
stos
inc
mov
ret
pop
int3
lds
inc
subb
loop
js
ret
adc
xchg
mov
insb
xor
sbb
roll
and
jbe
or
jae
rcrl
push
inc
mov
inc
sbb
push
inc
inc
xor
add
rcrb
push
insl
inc
xchg
outsl
ja
jnp
pop
jge
movsl
xchg
lea
add
adc
popa
sbb
or
gs
mov
pop
test
decb
cmp
mov
js,pt
out
add
mov
sahf
inc
sar
jl
xchg
mov
sbb
adc
psrld
or
dec
xchg
lods
mov
xor
sbb
cmp
and
xor
aaa
jo
jge
jo
mov
push
adc
jmp
pusha
scas
je
cld
mov
pushf
xchg
rorl
outsl
add
cmp
nop
sub
xchg
adc
dec
jle
push
imul
js
pusha
sub
mov
mov
out
mov
sbb
aad
pop
ret
mov
mov
push
leave
mov
addr16
xchg
mov
xor
push
mov
xchg
mov
push
fisttpll
and
mov
aas
das
out
in
and
shrb
cmp
nop
mov
ja
jp
add
mov
mov
es
pop
mov
scas
movsb
mov
and
cmc
dec
std
scas
or
insl
movsb
adc
xor
fldcw
sub
pushf
inc
pop
fstpt
cmp
pop
pusha
rclb
aam
push
int3
gs
stos
mov
push
and
cs
push
stos
cmpsb
pop
imul
and
mov
mov
test
xchg
lahf
rsm
sahf
jmp
repz
repnz
ja
je
in
insb
adc
out
imul
fsubrl
inc
fs
stc
dec
shlb
ss
enter
sarl
aaa
xchg
dec
jno
inc
pop
lock
mov
vmovntps
sti
inc
add
mov
xchg
jmp
sti
loope
sarb
xchg
sbb
rolb
cs
pop
xor
xchg
and
mov
cmp
ds
push
inc
pusha
mov
jge
lret
jp
fs
mov
aam
or
ljmp
scas
pop
insl
popf
insb
enter
lods
loop
mov
or
push
es
test
inc
and
inc
call
inc
adc
out
cmp
jne
inc
cli
imul
rol
int
rorl
and
jnp
aaa
insl
sbb
loope
mov
pop
add
jns
jecxz
lret
in
sbb
leave
stc
dec
test
push
push
setno
lock
mov
mov
test
and
cmp
loopne
and
popf
mov
push
and
in
jge
adc
jo
fs
adc
ja
or
clc
popa
addr16
rorl
mov
xlat
xor
mov
pushf
sub
xchg
fidivs
jge
fcoms
addr16
fwait
xor
addr16
jmp
inc
fcoml
fcoms
into
inc
jno
int
lock
in
xchg
mov
stos
pop
jcxz
xchg
int3
jmp
push
outsl
jle
xchg
adc
test
pop
cmc
inc
sti
sbb
xchg
popf
cmp
subl
lods
int3
arpl
or
lea
rcrl
rorl
pop
dec
cmpsl
movb
mov
mov
or
xchg
jbe
pop
pop
adc
push
sarl
mov
ds
xchg
xor
jg
push
clc
mov
in
xchg
xchg
icebp
inc
mov
aas
leave
push
lock
xor
mov
ljmp
jl
push
pop
push
pop
xor
andb
jmp
mov
push
fsubp
cmp
push
movd
dec
loop
xor
je
bound
jecxz
mov
fsubrl
pop
mov
xchg
xchg
and
enter
adc
mov
out
cmp
adc
jnp
out
sub
daa
cmp
popw
testb
imull
filds
out
out
pop
add
jmp
mov
fsubs
xchg
dec
sbb
ja
push
push
mov
sub
lods
insb
or
sub
cmpsl
scas
sub
insb
cmp
cmp
ret
mov
mov
in
cmc
popa
je
arpl
inc
mov
sbb
lock
ret
lret
jns
sub
push
mov
or
fwait
push
pushf
sub
addl
lahf
adc
pop
or
sbb
push
xlat
mov
inc
insb
or
xchg
mov
ss
rcll
loop
jae
sbb
inc
pop
clc
xchg
sahf
jne
cmp
xchg
jo
sbb
inc
mov
mov
cmp
xchg
rcrb
call
push
in
push
lods
or
jno
sub
or
cmpsl
stos
dec
int
loopne
mov
pop
lahf
lock
mov
fistps
jne
xor
mov
cltd
aaa
push
jp
out
xchg
shrb
dec
add
std
pop
add
push
and
fcmovne
stos
pushf
arpl
rclb
sarl
add
lea
pusha
sub
xchg
inc
inc
mov
repnz
xchg
mov
in
sub
in
outsl
pop
mov
mov
dec
dec
adcl
aam
jns
sbb
loop,pn
pop
inc
adc
mov
scas
fdivrl
add
jb
jnp
mov
xor
jp
fmull
cmp
ficoms
add
iret
loop
xor
cwtl
jb
shrl
add
aam
jmp
outsl
js
js
jp
xchg
or
cmpsb
xor
sub
ret
testl
pop
sub
jno
ja
cmpsb
insb
mov
pusha
dec
cwtl
mov
popf
scas
insb
lods
mov
leave
lods
es
inc
neg
lds
mov
shll
and
mov
xchg
aad
jae
cs
mov
mov
int3
or
pop
je
dec
rcll
jbe
jl
mov
jo
jl
rorl
sbb
mov
js
adc
xchg
das
jno
mov
mov
movsl
jnp
jnp
sti
xor
jae
out
sub
out
frstor
sbb
fcmovu
mov
xchg
arpl
shrl
daa
jb
repnz
mov
ss
inc
subl
lahf
dec
or
mov
out
test
test
mov
dec
shl
mov
and
cmc
sbb
push
push
cli
mov
mov
mov
aas
jo
sbb
imul
cmp
ja
cs
jae
jne
xchg
lods
sahf
pop
dec
sub
cs
scas
cmp
mov
int3
lret
mov
cmp
sub
cmpsl
icebp
addr16
and
mov
imul
push
push
iret
mov
jb
cmpsb
ss
aaa
nop
mov
inc
xchg
andl
rcrb
pop
sub
jge
add
inc
and
repnz
das
fimuls
mov
inc
and
scas
je
loopne
push
dec
cltd
cwtl
add
lret
or
lret
inc
iret
adc
data16
adc
lods
pop
andb
sbb
addr16
adcb
addl
jbe
pop
push
dec
arpl
push
mov
enter
and
or
inc
xor
pop
cmp
jmp
fnsave
xor
sahf
push
mov
in
jo
fstpl
cmp
int
into
out
sbb
pop
inc
mov
fsubr
add
out
call
ficoms
add
imul
enter
pop
ret
in
push
in
or
adc
mov
cli
stc
lcall
lds
xor
loopne
and
jo
mov
xchg
in
enter
xor
sbb
loop
jns
mov
cld
aad
loope
fwait
or
or
dec
sbb
xlat
cmpsb
pushf
sub
mov
dec
mov
orl
fistps
in
je
outsl
xchg
lock
idivb
insb
jp
add
jle
das
stc
dec
mov
mov
inc
loope
sarb
iret
lea
in
dec
or
cli
sub
xor
mov
jg
popa
lret
jno
or
jge
inc
push
loope
iret
gs
mov
or
push
aad
imul
pushf
mov
xchg
add
movsb
test
sbb
stc
jne
xor
aas
mov
pop
dec
pop
push
gs
lock
iret
jae
xchg
pop
pusha
cmpsl
inc
cmpsb
sahf
stos
daa
sbb
mov
push
lds
ss
xchg
pop
lock
mov
scas
or
loopne
xchg
lods
sbb
or
mov
test
subb
cmpsl
das
push
shrl
xchg
xchg
and
xor
nop
jns
aam
dec
rcr
clc
xlat
push
int3
pop
add
clc
xor
mov
jno
fld
pop
aam
mov
dec
pop
fsubs
insl
jns
lahf
in
cwtl
repnz
dec
dec
push
jb
dec
bound
dec
or
mov
movsl
outsb
adc
cld
movsl
sub
jle
popf
jecxz
xor
ret
movsb
xchg
mov
lds
in
lret
push
sbb
inc
iret
jno
dec
or
or
icebp
xchg
sub
cmp
fwait
cmp
ss
pop
dec
xor
dec
ffreep
mov
cltd
stos
cmp
sub
mov
xchg
cmp
daa
std
push
fildl
repnz
push
sbb
nop
lds
mov
js
xor
aam
int
mov
outsb
out
xor
sub
mov
xchg
mov
pop
mov
pop
je
lret
addr16
lret
mov
es
mov
test
push
dec
add
nop
aam
fstpt
jmp
decl
xor
lret
loopne
push
pxor
mov
and
xchg
add
imul
repz
mov
sub
pop
push
rcrb
sahf
push
pop
adc
movsb
test
imul
rorl
pop
push
loope
adc
ret
or
int3
dec
mov
mov
gs
mov
sub
fwait
cld
push
pop
pushl
and
pop
xchg
iret
xchg
pushf
or
jo
into
out
xor
out
cld
jb
lret
pop
push
add
mov
pop
repnz
lds
out
mov
sub
sub
xchg
orl
push
dec
xchg
test
push
adc
push
mov
inc
cmpsl
adc
mov
dec
and
adc
lfs
add
and
jg
xchg
cmp
addl
xor
ficoms
sub
lds
cmp
adc
testl
fdivrl
movsl
mov
push
sub
cmp
ljmp
fstl
shl
movsl
mov
pop
jmp
loopne
into
jae
insb
popf
mov
roll
mov
in
cmp
jns
xor
and
aaa
andb
imul
inc
ret
aas
dec
jmp
mov
sub
faddl
gs
add
mov
add
xchg
mov
enter
xchg
popf
and
inc
push
xchg
pop
or
mov
loope
int3
push
xor
cmp
mov
lds
dec
ds
shll
mov
jle
push
out
jb
pop
mov
stos
bound
push
imul
loop
sbb
pop
fdivrs
mov
adc
pop
cmp
sub
jno
lret
xchg
xor
xchg
push
and
inc
dec
jle
and
xor
hlt
lock
push
fs
sbb
xor
adc
mov
inc
sarb
or
inc
inc
cmp
fstpt
and
push
push
inc
sbb
cld
sbb
ret
lods
stos
imul
pop
pop
inc
jno
and
imul
jmp
jmp
or
hlt
cmp
cs
fxch
xchg
shrl
mov
aaa
xchg
mov
shlb
outsb
call
int
or
movsb
js
xor
adc
push
xchg
dec
rorl
popa
xlat
imull
cmpsl
inc
fst
pop
out
jbe
pop
mov
mov
inc
mov
fcoms
ljmp
xchg
jle
and
cmpsb
fwait
mov
sub
insl
add
das
js
mov
mov
es
shr
xchg
pop
add
rcrb
mov
cmp
cmpsb
pusha
and
cmp
imul
xlat
lcall
sbbl
test
mov
push
cmp
mov
fistps
jecxz
mov
pushf
xchg
cli
cmp
push
enter
out
sub
inc
jnp
dec
jg
mov
mov
pop
pop
sub
loopne
cmpsb
test
fcomps
or
outsb
subb
adc
shl
movd
mov
ror
stos
and
cmp
add
xchg
das
mov
sbb
test
inc
mov
sub
and
mov
sbb
xlat
dec
call
and
popf
pop
xor
lods
mov
fnsave
mov
into
sbb
inc
or
loopne
gs
pop
call
fmuls
dec
dec
mov
shlb
mov
jnp
aas
inc
sub
mov
lea
sbb
aaa
dec
scas
mov
dec
mov
lahf
adc
xchg
repz
aad
jnp
inc
add
xchg
sub
outsl
hlt
pusha
in
adc
cld
popa
mov
or
cmp
cmc
mov
das
push
inc
out
test
idivl
pop
lcall
mov
fidivl
xchg
dec
filds
mul
inc
cli
out
mov
mov
andl
and
dec
cs
or
out
in
inc
stos
int
lret
arpl
divl
ja
push
fcmovnbe
pop
fistpl
pushf
or
push
jge
adc
mov
lret
std
outsb
mov
repz
xchg
cwtl
mov
adc
inc
hlt
sub
mov
fwait
jl
push
imul
dec
fwait
mov
stos
mov
adc
and
pop
pop
xor
sub
test
pop
pop
cmp
add
rcrb
aam
push
outsb
jbe
xchg
xchg
pop
dec
es
sbb
dec
lock
push
or
ja
loop
push
ss
cs
aad
rol
mov
xchg
daa
mov
cmc
stos
push
cmp
inc
lcall
pop
xorb
lods
lods
mov
into
mov
fisubrs
xchg
outsl
mov
sbb
ja
sub
rcrl
repnz
data16
bound
mov
addb
outsl
movsb
push
adc
int3
xchg
sbb
cmpsl
lods
adc
add
cld
add
push
into
sub
sbb
push
xchg
ja
inc
jno
aaa
aad
mov
mov
pushf
xchg
pop
mov
test
loopne
add
jmp
cmp
test
adc
aam
movsl
adc
xlat
ljmp
lret
sub
mov
mov
mov
pop
adc
or
fisubrs
mov
ret
cmp
arpl
fisubrs
and
xchg
push
push
add
sbb
mov
enter
dec
dec
cs
add
jno
dec
movsl
cmpsl
fidivrl
daa
xchg
dec
inc
and
loop
aad
or
cltd
mov
jmp
mov
sub
xor
sbb
dec
inc
idivb
jno
cmc
or
lret
mov
dec
push
repnz
enter
inc
in
inc
test
bswap
jne
outsl
sub
test
pushf
pop
sbb
inc
aaa
pop
sbb
push
pop
push
notb
add
test
lret
stos
inc
pop
mov
mov
dec
mov
out
nopl
lcall
adc
out
shr
pop
data16
inc
mov
negl
test
mov
ljmp
sbb
insl
fcmovne
mov
push
std
lea
shll
lock
jl
adc
inc
in
fcmovnb
sub
cmp
imul
adc
mov
insb
inc
jns
jl
and
pop
in
mov
mov
imul
lea
push
mov
push
in
inc
push
sub
sub
jne
test
cmpsb
xor
es
pop
and
cwtl
shll
dec
mov
lcall
das
icebp
into
jge
and
idivb
mov
rclb
cmpsb
mov
xchg
movsl
lock
push
sbb
cwtl
lret
push
sub
icebp
push
jb
enter
xor
add
lock
pop
in
xchg
clc
sbb
mov
mov
xchg
imul
add
dec
ljmp
test
outsl
mov
mov
jbe
add
xor
jl
hlt
sub
mov
lds
mov
inc
push
fldcw
xchg
pop
mov
xor
cwtl
cwtl
push
mov
mov
fs
mov
aad
push
push
mov
bound
imul
nop
pop
inc
shrb
cltd
mov
xor
mov
xchg
push
ljmp
js
jb
arpl
and
xchg
lods
sarb
push
xchg
mov
sub
movsl
fadd
fwait
lahf
sbb
xchg
add
lds
lds
orl
adc
shlb
push
xor
loopne
add
push
fisttpll
sub
out
in
cmp
pop
int
fstp
mov
cmp
cmc
inc
dec
movsl
fldl
sbb
pop
imul
xor
mov
cmp
sbb
aas
jno
mov
sub
pop
pop
cwtl
xchg
call
mov
gs
iret
mov
xchg
jne
lds
or
xchg
cmc
movsl
mov
push
xchg
cmp
aaa
daa
push
test
pushf
in
push
imul
dec
jb
orb
jmp
es
mov
stc
sbb
cs
mov
add
sub
fnstsw
enter
fimuls
pop
adc
jbe
test
adc
lret
and
sbb
pop
sub
xchg
or
xchg
add
xchg
jmp
dec
fildll
mov
fwait
add
xor
mull
and
jno
popf
imul
push
inc
cmp
outsb
sub
movsb
lods
or
mov
ja
pop
mov
insb
push
push
nop
loopne
aaa
out
sbb
rcrb
mov
xchg
dec
adc
dec
push
shl
push
out
push
outsb
jmp
movsl
push
cmp
in
jne
adc
sub
and
mov
lods
mov
dec
and
lret
out
lcall
lods
in
push
push
cmp
out
sahf
push
shl
xchg
rorb
adc
mov
mov
int3
filds
add
in
gs
dec
and
push
bound
xor
cli
add
jg
xchg
inc
jns
je
aaa
aam
jp
mov
jg
adc
sub
lea
push
lea
cmp
push
inc
rolb
inc
pop
or
or
sbb
dec
xor
es
dec
cmc
adc
mov
dec
js
ja
fists
adc
xor
subb
adc
pushf
in
lea
xchg
je
mov
push
or
mov
fs
and
fs
popa
pop
shrb
insl
shrb
out
and
cli
cmp
in
in
push
pop
cwtl
cmc
push
aam
xchg
xor
xchg
fldl
inc
out
sub
or
mov
mov
lods
mov
and
xchg
cld
inc
call
rclb
or
iret
cmc
clc
dec
jno
mov
ret
cmc
inc
dec
fsubrl
dec
out
push
imul
cli
mov
sbb
clc
repz
loope
jnp
je
xchg
call
aaa
xchg
or
test
sbb
adc
sbb
loop
dec
mov
mov
or
jns
insb
and
inc
loopne
cmp
sbb
lret
dec
ds
stos
sbb
sub
xchg
hlt
fbld
stos
insb
sbb
ret
add
inc
mov
sub
fistl
push
and
mov
pop
mov
mov
scas
xchg
pop
inc
loope
dec
ljmp
test
jno
xchg
movsb
add
bndldx
sbb
mov
sub
scas
loopne
mov
pushf
dec
pop
out
push
push
or
adc
pop
mov
adc
cmp
pop
sub
mov
gs
xor
xchg
mov
fdiv
fldcw
ljmp
in
shll
in
xor
cltd
test
mov
mov
push
sbb
mov
stc
rcrb
call
sbb
mulb
push
add
xchg
ror
mov
mov
jb
xchg
inc
les
cmp
push
mov
test
test
inc
mov
loope
xchg
rclb
dec
cmp
pop
loopne
mov
clc
pop
fcomip
sbbb
inc
std
mov
sub
inc
jg
xchg
xor
jo
clc
adc
or
mov
pop
mov
daa
loopne
inc
pop
dec
mov
mov
cmp
les
mov
xor
addr16
sbb
jle
cld
sbb
mov
mov
mov
jecxz
pop
cltd
push
push
scas
dec
mov
test
push
jb
cmp
arpl
adc
jmp
mov
cmp
inc
xchg
mov
mov
jns
mov
cmp
fsubl
cmp
xchg
mov
or
in
dec
enter
jge
cmp
out
lods
movsb
cmpb
xchg
cmp
jnp
daa
cmp
std
add
lods
insl
lahf
loope
in
imul
add
sbb
int
sbb
fdivrl
ljmp
pop
lahf
add
xchg
inc
lock
repnz
mov
mov
lret
addr16
aam
xlat
test
push
lahf
out
jo
dec
mov
dec
pop
sbb
mov
or
jge
movsl
push
dec
pop
shl
insl
sbb
jl
pop
push
mov
jno
les
hlt
repz
jmp
add
imul
adc
cmp
push
pop
call
jb
xchg
cmp
das
adc
mov
push
call
inc
push
popf
push
push
push
in
mov
fidivl
call
sti
sbb
xchg
pop
call
jno
cmp
adc
mov
xor
or
mov
fcomp
add
xchg
xchg
unpcklps
and
outsl
daa
insb
hlt
test
and
mov
jnp
fs
jp
pop
xchg
mov
cmp
xchg
pop
cmp
pop
arpl
inc
fs
shll
jp
or
push
insl
sti
je
test
fldenv
push
leave
push
adc
pop
xchg
mov
pop
ljmp
xchg
mov
mov
pushf
cmp
inc
inc
lds
test
cwtl
aam
ja
sub
aas
jmp
aaa
paddsb
inc
mov
cmc
lods
mov
jge
loopne
lret
jmp
inc
hlt
jbe
push
in
in
loope
jecxz
rorb
or
push
orb
test
mov
loopne
and
stos
ja
adc
gs
pcmpeqw
scas
jnp
and
mov
jne
stos
rcll
xchg
fistl
repz
add
sbb
pop
loop
std
cmp
cltd
adc
or
out
lret
repnz
jns
fstpl
fsubrp
xchg
push
and
js
pop
in
aas
push
mov
in
dec
push
xorl
xchg
pop
rcrl
int
or
pop
lock
addr16
dec
jne
dec
push
xchg
loope
int
fstpl
push
insb
ss
sbb
and
call
push
xchg
or
dec
cmp
orb
xor
sarb
jge
lret
xchg
loope
adcl
jb
dec
js
add
das
cmpsl
les
sbb
mov
push
enter
pop
stos
fnstenv
mulb
and
imul
call
add
jne
mov
rolb
xor
gs
sahf
pop
test
mov
push
sbb
xchg
iret
mov
add
xchg
out
js
dec
stos
and
mov
sbb
insb
shlb
jne
in
stos
mov
lcall
fnstenv
pushf
inc
shl
mov
inc
dec
enter
fidivl
cmpsl
shr
add
xor
inc
imul
push
mov
and
cmpsb
mov
les
aam
xor
mov
xchg
xchg
and
lcall
fwait
xor
xorb
shl
push
in
push
test
loop
inc
roll
and
insl
xor
in
out
cmp
cmpsb
call
dec
push
sub
mov
test
sub
push
cltd
or
xor
repnz
and
ljmp
mov
lods
fcoms
cmp
add
out
mov
add
xchg
adcb
pop
sbb
xchg
pop
int3
in
xchg
xorb
cld
out
mov
jae
pop
xchg
jo
push
or
mov
cltd
pop
sbb
mov
cmc
inc
mov
mov
add
jge
stos
out
and
and
outsl
mov
ror
in
push
xchg
sahf
ss
inc
test
mov
shrl
or
add
sar
jne
insb
mov
cmpsb
xchg
cmp
sub
xor
insb
in
dec
xchg
or
mov
mov
mov
adc
add
xchg
add
dec
jb
jl
mov
in
in
std
add
das
inc
rcr
nop
xlat
or
out
out
mov
pushf
scas
push
adcb
bound
pop
xchg
aaa
in
cs
sub
mov
sbb
fcomps
pop
mov
xchg
clc
mov
gs
jne
sbb
ja
ret
lcall
bound
out
insl
and
or
jb
sub
sbb
xchg
inc
fldlg2
das
fdivrp
push
outsl
xor
mov
and
push
xchg
mov
add
stc
sub
cmpsl
call
xchg
add
xchg
sub
rcr
mov
lods
or
xchg
shll
cwtl
add
roll
dec
inc
cmp
mov
test
aaa
ret
out
push
add
nop
mov
ret
jb
pushf
mov
inc
ret
imul
cmp
inc
xor
xor
ljmp
mov
pop
mov
shrb
neg
push
daa
dec
jecxz
push
loopne
push
dec
fsubl
dec
lahf
test
aam
and
push
nop
out
pop
mov
es
flds
divb
out
das
sub
cs
xchg
pop
mov
adc
les
xor
fstpl
xchg
ljmp
aam
inc
andb
lock
jne
pop
shll
mov
dec
and
stc
push
stc
and
hlt
lea
push
cld
imul
lock
dec
push
ljmp
adc
add
mov
and
imul
pop
xor
mov
lret
xor
jmp
fwait
cmc
sbb
pop
mov
jp
dec
pop
add
push
ret
dec
ljmp
sbb
inc
xchg
movsl
sub
fmul
repz
ret
pop
inc
sti
dec
lret
pushf
adc
rol
cmpsb
loop
fbstp
sahf
jle
jecxz
movsb
push
iret
xor
sbb
mov
sub
cmpsl
xchg
js
arpl
dec
int
add
addr16
test
mov
test
lds
xchg
pop
out
stos
pop
inc
xchg
cmc
xchg
je
dec
add
rorl
mov
add
les
push
cld
dec
jp
push
filds
jmp
int
aam
fprem1
inc
jecxz
ret
aad
hlt
sahf
pusha
or
loopne
jb
pop
subl
cmp
and
aas
inc
and
xchg
lds
sbb
imul
jecxz
jnp
and
adc
adc
xchg
sub
leave
xchg
pusha
pop
add
and
dec
sub
xor
jp
jl
cmp
jp
and
xchg
iret
or
xchg
push
cmp
loope
pusha
sbbb
in
ret
rcl
negl
insb
lahf
mov
call
pop
aam
ljmp
out
jo
dec
mov
clc
cld
sbb
pop
push
test
sbb
pop
fsubrl
mov
mov
lods
pop
call
adc
fisttps
nop
sub
cmp
mov
push
inc
sbb
pushw
out
mov
in
pop
loop
addl
dec
push
test
stc
sbb
in
mov
sbb
sahf
out
pop
xor
test
jbe
fcoml
mov
xor
pop
ret
xchg
adc
sub
sbb
inc
call
inc
pop
mov
mov
dec
das
cmpsb
dec
mov
push
cs
push
ja
jl
sarl
mov
fldl
lods
cmp
push
es
mov
pop
ret
inc
ja
aas
inc
sbb
inc
loop
sbb
pop
inc
add
and
add
insl
pop
jg
icebp
sub
xchg
out
push
cs
mov
aad
add
inc
or
adc
data16
test
loop
popa
mov
jnp
ffree
sarl
mov
cs
pop
lds
jae
and
ret
jecxz
fs
mov
jecxz
mov
push
sub
scas
js
es
icebp
cmpsl
sti
jb
aaa
test
jbe
and
xchg
jns
cli
cmpsl
add
mov
bound
adc
jbe
cltd
dec
stc
inc
lods
std
imul
fisubrl
mov
xchg
push
movsl
mov
lret
jns
sahf
test
or
mov
fidivl
and
pop
sub
sbb
or
pop
and
sub
lea
push
jecxz
aas
jge
into
xchg
mov
daa
inc
pop
fisttpl
adc
insb
test
cmp
add
out
xchg
jge
cltd
jbe
rclb
sbb
fs
mov
pop
add
dec
pop
mov
xchg
push
xor
lea
rcll
adc
jae
mov
std
xor
scas
dec
dec
fdivrl
xor
repnz
rcll
ficoml
nop
jl
lret
call
pop
pop
jle
and
imul
loop
outsb
or
or
into
dec
ret
lea
aaa
sub
shr
subb
push
pop
test
inc
xchg
clc
inc
dec
jno
jg
sub
jp
clc
into
arpl
sahf
fdivrl
movsl
cmc
ror
sbbb
stc
repnz
push
dec
push
lea
add
mov
cmp
std
cltd
push
sti
aaa
cld
sti
leave
dec
movsb
mov
or
push
iret
cmp
cmpsb
bnd
add
iret
cmp
test
das
inc
push
popa
jno
pop
jb
xchg
fcoms
cmpsl
scas
mov
in
sbb
bts
jecxz
fwait
push
push
in
pop
mov
into
mov
mov
or
and
xchg
sbb
pop
dec
push
jo
aam
inc
clc
mov
ret
xchg
sub
mov
sbb
sbb
sbb
or
pop
repz
cltd
hlt
jae
mov
xchg
or
sub
pop
loope
xor
cmpsl
ljmp
js
push
cmp
and
aas
fcomps
test
scas
jbe
js
sub
mov
mov
subl
fisubrs
sub
xor
sti
adc
mov
aaa
cltd
push
sbb
xor
mov
rorl
inc
sub
lock
fbstp
loop
lods
jo
stos
jb
fisubrs
js
adc
adc
popa
mov
ret
cmp
mov
jecxz
sbb
outsl
xchg
sub
out
ja
repnz
jae
nop
jge
mov
mov
or
adc
insb
pop
add
shll
sub
cld
pop
shrb
inc
add
out
ror
insl
inc
adcl
push
js
inc
arpl
arpl
divb
mov
clc
jne
scas
inc
ljmp
xchg
or
inc
out
fs
out
xor
pop
cwtl
test
jmp
dec
imul
mov
ss
in
lods
add
sbb
sbb
push
mov
xor
or
sbb
out
adc
aas
jg
and
insb
sbb
lock
inc
dec
mov
mov
nop
push
or
scas
cmpb
or
add
cmp
mov
xchg
mov
das
fldlg2
int
lea
dec
mov
popa
mov
cvttps2pi
hlt
push
jp
inc
mov
test
in
sbb
mov
ret
addr16
imull
dec
aad
push
xor
add
aad
fcompl
mov
add
cs
test
mov
sub
sbb
movsl
jbe
add
fucomi
rorl
xchg
xor
add
xlat
pop
jns
adc
inc
sub
add
and
pop
inc
and
xchg
or
out
sbbl
jg
in
lock
inc
adc
pop
mov
cltd
xor
sahf
je
sbb
imul
pushf
pop
iret
mov
mov
imul
loopne
movl
sub
xor
fldt
push
push
and
or
adc
push
xchg
out
daa
fidivl
cmp
sbb
mov
sub
mov
sub
sub
adc
in
or
sub
adc
lods
mov
pop
xor
push
mov
loope
xchg
adc
sbb
cmc
movb
mov
cmp
in
pop
std
sbb
mov
xchg
or
mov
xlat
mov
shll
mov
sbbl
loopne
push
sbb
loope
dec
and
jmp
int
ret
outsb
sbb
mov
cltd
sti
addl
mov
decl
clc
ret
mov
pop
out
sbbl
popf
outsb
bound
lcall
push
push
sub
inc
outsb
scas
xor
dec
jne
stc
jns
fs
cld
pusha
mov
sub
icebp
pop
dec
mov
cld
testl
mov
sub
push
push
int
test
insb
sbb
push
mov
inc
mov
in
add
mov
mov
push
mov
leave
and
out
test
push
popl
pop
cmp
adc
xorl
jne
pop
adcl
arpl
cltd
in
add
xchg
adc
dec
and
adc
xor
dec
dec
das
mulb
or
orb
xchg
fwait
or
add
pop
int
imul
xchg
sti
loop
outsl
jge
movsl
cmpsl
jne
push
mov
inc
std
into
flds
mov
dec
push
and
popf
fldenv
add
xchg
call
insl
outsb
inc
and
fmul
aas
or
or
inc
jno
test
push
in
dec
in
outsb
les
pushf
add
ffree
daa
mov
cmp
sahf
push
insb
mov
inc
xchg
inc
xchg
mov
mov
mov
pop
mov
movsb
xchg
jne
jns
push
push
mov
leave
push
addr16
loope
ret
imul
and
out
xor
popf
clc
lcall
sub
push
loope
in
fwait
mov
xor
dec
adc
jge
pop
ficomps
xchg
cmpsb
test
stos
cmpsb
ljmp
je
sub
push
inc
pop
cmpsb
cltd
orb
mov
adc
fcomps
or
cmp
cmp
aad
mov
mov
loop
sbb
inc
cmc
enter
push
inc
imul
andl
inc
testl
jle
shl
and
xor
mov
icebp
mov
insb
mov
push
insb
sbb
lods
inc
lea
cmp
fdivrs
xchg
pop
inc
and
subb
xchg
pusha
js
rcrl
dec
pop
sti
sbb
movsl
in
jns
fidivrs
xchg
lods
in
lock
push
shrl
inc
cmp
push
add
cmp
addr16
lret
add
rcrl
jbe
pop
mov
les
mov
dec
imul
ds
and
mov
xor
popa
xchg
fs
adc
jbe
cmp
push
mov
pop
mov
xor
hlt
jnp
mov
mov
in
push
jns
xchg
imulb
ja
hlt
xor
decb
xor
call
popa
and
inc
mov
adc
insb
stos
out
add
cltd
ret
mov
lods
xor
mov
lock
sub
repnz
adc
fsubl
pushf
enter
les
xlat
cltd
and
es
arpl
fistpl
add
fidivs
mov
jbe
mov
je
sahf
mov
cmp
lods
mov
insb
jle
shr
inc
inc
xor
mov
mov
pop
repnz
cmc
mov
mov
jle,pt
jbe
aad
icebp
and
repnz
cmpb
xchg
adc
sbbl
xchg
mov
and
lahf
mov
mov
inc
ret
add
sbb
adc
xchg
cmpsl
jae
insb
test
into
std
mov
out
ret
aaa
in
rorb
hlt
xchg
out
xlat
cmpsb
fstl
hlt
sub
jo
mov
mov
sbbb
out
push
cmpsl
bound
es
clc
sbb
mov
loopne
scas
cwtl
aas
and
jmp
sbb
xchg
clc
