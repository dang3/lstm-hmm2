mov
adc
add
jns
add
incl
nop
sbb
or
mov
je
imul
add
je
rorl
cmp
add
cld
mov
je
xchg
int3
pop
push
dec
bound
jge
mov
arpl
pop
or
push
push
jns
stc
jg
jae
insl
or
addl
jmp
pop
jnp
testl
lahf
add
mov
rolb
mov
or
enter
or
adc
rol
leave
in
fisttpll
and
inc
or
pop
sti
fldt
jns
pop
adc
movsb
jb
popa
arpl
shlb
idivl
mov
jmp
pop
inc
inc
pmulhuw
orl
enter
sbb
xor
out
inc
push
sbb
and
and
sbb
sbb
adc
fs
inc
add
in
inc
push
add
addb
orl
cld
cmp
lods
or
enter
lock
and
and
ret
xor
push
add
mov
leave
div
push
add
imulb
je
movzwl
mov
sbb
xor
fadds
aam
fistpll
add
popa
and
and
std
ljmp
insb
popa
outsb
and
imul
xor
xor
add
mov
fistl
mov
add
arpl
das
adc
mov
gs
sub
and
je
popa
and
gs
outsl
out
clc
inc
loope
insl
gs
cmpxchg
ret
sub
sarb
dec
add
inc
pop
dec
add
inc
or
adc
mov
filds
pop
or
or
imul
and
addr16
xchg
lods
adc
adc
adc
fbstp
fildll
add
sbb
and
and
jp
push
mov
insb
add
adc
pop
and
lods
sub
and
sub
ret
sub
xor
mov
xor
mov
cmp
pop
sub
mov
das
xor
inc
inc
xor
addr16
flds
lret
jns
fbld
fildll
jl
add
cmpl
fstp
js
adc
mov
inc
das
fdivrp
mov
or
mov
mov
mov
call
cmpl
rorl
jno
mov
shr
movzbl
mov
and
jbe
jne
jns
adc
mov
fimuls
ljmp
or
add
leave
and
add
dec
mov
cmp
mov
mov
bound
arpl
std
push
shl
or
popa
loopne
lcall
aaa
mov
cld
add
mov
and
adc
dec
add
clc
fucomp
cmp
movsl
das
mov
cld
xchg
lcall
inc
sbb
or
xor
fsubs
add
sti
push
push
and
add
adc
test
push
or
ror
mov
cld
mov
mov
icebp
sub
fcomp
outsb
add
mov
mov
rorl
mov
jne
lret
sub
xor
mov
mov
or
jecxz
xor
and
ja
notb
add
sbb
clc
sbb
sbb
adcl
push
mov
lea
clc
or
add
and
mov
lds
push
rcr
mov
mov
mov
into
xorb
push
adc
test
jnp
outsb
movl
test
sbb
movb
scas
ret
push
ret
pop
pop
pop
pop
arpl
insl
pop
in
sub
xor
pop
addb
mov
and
add
jmp
cmpl
fmul
incl
lea
and
cmp
out
xchg
push
mov
es
incb
mov
lds
pop
push
mov
popa
jecxz
faddl
mov
je
addl
fisubl
mov
je
push
sub
mov
adc
dec
add
sarl
or
outsb
and
dec
or
and
dec
pop
adc
add
pop
xchg
xor
lahf
shlb
mov
enter
sbb
or
leave
cmpb
test
jnp
test
push
lods
xor
adc
and
jbe
fcomps
or
rorb
mov
out
xor
mov
adc
jmp
xor
ja
std
insl
pop
pop
push
les
cmp
xlat
jne
mov
jp
and
mov
xchg
jle
pusha
or
insb
mov
push
jnp
sub
lea
pusha
clc
arpl
hlt
shr
push
xor
icebp
inc
sub
cmp
jb
mov
fucomi
sbb
popf
iret
sub
sub
jle
jbe
mov
sbb
decl
mov
mov
andb
lea
mov
jmp
xor
pop
mov
mov
movl
inc
ret
inc
xchg
movsb
lea
push
or
imull
iret
mov
mov
jo
ds
cmp
sbb
cmp
jo
ja
lea
add
shll
xlat
filds
mov
xchg
shl
cwtl
or
addr16
or
or
cld
ret
pop
rorb
jmp
or
aas
mov
mov
rorb
mov
loopne
xor
sbb
aaa
dec
mov
rcl
mov
mov
sbb
jmp
mov
pushf
jmp
adc
sbb
add
cmp
movl
inc
mov
jmp
mov
test
xor
jb
mov
jns
outsl
dec
add
lock
push
xchg
jns
enter
xchg
push
ret
fs
test
add
mov
jne
subl
je
pop
push
adc
push
pop
xor
inc
das
dec
jbe
cmpsb
mov
xor
insl
dec
cmpsl
aaa
rclb
xor
dec
test
inc
adc
cmp
mov
pop
sub
jo
arpl
loope
xchg
push
push
int
pop
dec
js
into
or
sbb
jmp
nop
nop
or
and
fistl
faddl
lock
mov
push
jnp
lock
xor
inc
dec
pop
outsl
mov
jge
xor
testb
inc
cmpl
push
inc
pop
xor
mov
mov
push
inc
out
mov
and
add
cmp
xor
jmp
pop
dec
clc
sub
push
mov
cmp
test
and
orl
in
loopne
pop
push
push
out
push
sti
cmp
sbb
lea
pop
cmp
inc
cld
daa
movl
nop
pop
lock
cmp
fisttps
mov
push
testb
repnz
movsl
and
icebp
sbb
inc
mov
lret
jb
cmp
mov
stos
hlt
les
mov
mov
mov
mov
pop
jecxz
pop
mov
and
xlat
jno
roll
sar
and
xor
pop
js
jbe
js
addr16
sub
push
jnp
push
sbb
clc
adcb
dec
iret
mov
inc
add
sub
jecxz
clc
push
mov
sub
cmp
jb
insb
ss
cmovp
adc
scas
int3
add
mov
adc
sbb
fcmovnb
jbe
lea
xchg
xchg
lods
roll
jb
mov
push
xor
or
fisttpll
cmovge
pop
cld
or
mov
push
cmpsb
pop
lahf
mov
aas
or
lods
daa
or
pop
nop
ret
roll
xlat
jb
jecxz
push
add
xor
cs
test
or
cmp
adc
test
into
cmp
adc
stc
call
jle
cld
test
int3
loope
loopne
adc
and
sbb
fisttpl
sub
je
inc
sbb
add
fistps
jle
mov
ja,pt
cmp
rclb
jp
outsl
sub
enter
enter
adc
lock
ljmp
shlb
adc
ret
andl
ja
jmp
cmpsl
mov
decl
cld
fstps
gs
sbb
pop
add
or
mov
and
push
test
punpckhbw
or
sbb
iret
push
es
pop
cmp
push
jb
cmp
ds
or
mov
jmp
aaa
dec
jbe
push
jmp
lods
adc
push
and
dec
mov
pop
ja
icebp
shr
dec
jb
and
in
in
pop
cmp
cmp
loope
dec
adc
pop
xor
les
jbe
cld
loop,pt
adc
or
sbb
sbb
inc
cld
neg
fldz
fstl
popf
rorb
or
sar
mov
sbb
fdivr
mov
outsb
add
adc
mov
test
jne
xor
call
sbb
cmp
jb
jmp
mov
pop
cmp
jae
rclb
jle
or
sub
pushf
jmp
insl
popa
test
sbb
or
and
cmp
jbe
mov
repnz
loop
mov
fdivrl
and
lret
inc
ja
incb
sub
mov
adc
add
adc
fwait
sub
pop
add
mul
mov
lret
movsb
loop
pop
jno
orl
xchg
add
pop
mov
pop
mov
fstp
jmp
sbb
xchg
bound
sbb
orl
sbb
dec
and
adc
add
and
add
es
repnz
adc
pop
test
adc
pop
push
icebp
mov
mov
mov
ror
std
sbb
fisubrs
xchg
je
sbb
mov
lret
mov
outsb
ret
pop
jb
in
enter
add
inc
lock
cmp
fstp
add
sbb
pop
in
cmp
cmpb
sub
cmp
mov
ja
inc
lock
xor
adc
js
mov
in
test
or
clc
divb
std
aam
scas
stc
mov
imul
add
and
ja
sbb
add
call
pop
jnp
xor
sub
fidivs
in
sbb
and
out
test
cmp
xor
pusha
gs
pop
mov
pop
lahf
inc
jb
or
mov
aam
pop
jne
push
mov
pop
mov
and
pop
cwtl
jno
xchg
ret
adcl
push
sub
sbb
sbb
or
cs
dec
sbb
lret
addb
mov
incb
std
sub
cmpl
xchg
ds
pop
dec
mov
push
dec
insb
jl
mov
hlt
mov
mov
cmp
cltd
mov
adc
outsl
outsl
in
mov
adc
mov
add
dec
cwtl
push
and
jne
push
add
push
mov
pop
xor
inc
sbb
sub
ret
or
out
dec
in
adc
mov
call
inc
adc
or
lods
jbe
call
lret
loop
fxch
into
push
xchg
adc
sar
cltd
imul
incl
mov
adc
lods
xor
sub
pop
popa
aam
push
stc
cmpsb
incl
fidivrs
adc
mov
mov
outsb
or
jle
and
out
or
jbe
add
jle
or
cmpxchg8b
xor
and
sbb
mov
call
decl
jne
es
je
xor
mov
mov
fcompl
pop
lods
cmp
je
add
or
fldcw
in
pop
jg
mov
xlat
es
xchg
add
add
aaa
xchg
in
xchg
add
xchg
lahf
mov
daa
in
add
push
dec
mov
jne
xor
mulb
test
push
pop
cld
dec
xor
mov
adc
ret
mov
xchg
pop
inc
add
aad
sub
sahf
sbb
push
outsb
adc
adc
data16
mov
test
add
cmp
push
pop
push
call
hlt
mov
mov
and
out
mov
out
in
in
adc
movsl
jne
arpl
out
pop
popa
data16
xchg
sbb
jg
fcos
adc
psubb
mov
lahf
mov
jb
mov
jnp
popa
dec
mov
push
es
jb
fstpt
inc
dec
push
mov
jnp
jbe
dec
sti
movsb
shll
callw
mov
dec
divl
outsl
push
push
call
std
sub
popf
mov
cwtl
adc
pop
sbb
out
or
ds
les
jo
imul
in
push
mov
in
mov
lock
pop
cmp
data16
push
mov
dec
cmpl
jbe
out
iret
divl
mov
sbb
into
cmpb
and
dec
arpl
mov
or
mov
outsl
mov
cwtl
pop
and
mull
sbbb
or
push
or
fs
pop
imul
or
sub
mov
add
je
jmp
mov
imul
sub
mov
es
movzbl
mov
mov
imul
mov
jmp
int3
stos
lods
jg
sub
insl
test
jae
es
fldcw
lcall
mov
cwtl
mov
pop
mov
sbb
dec
xor
inc
es
mov
es
jbe
imul
pop
mov
lods
ja
pushl
out
add
adc
orl
cltd
std
mov
sbb
inc
outsb
and
gs
das
sar
adc
and
insl
outsl
jb
in
popa
imul
mov
jae
outsl
arpl
fs
mov
subl
and
and
xor
or
or
stos
sarb
jae
xor
imul
outsb
test
inc
jae
jp
pop
dec
jae
fiadds
imul
mov
gs
pop
dec
pop
xchg
cltd
int3
push
mov
dec
std
aas
aaa
cmp
push
push
xor
xor
mov
testb
dec
jl
pcmpeqw
add
add
add
clc
outsb
sbb
mov
pop
inc
movsb
sub
and
aaa
jne
adc
jle
imull
dec
mov
roll
movl
in
sbb
inc
in
inc
clc
add
movl
je
out
rolb
and
out
insl
sahf
jae
pop
mov
rclb
mov
adc
loop
les
pop
or
push
cld
push
out
sbb
loope
lea
xorl
xor
fidivrs
push
mov
mov
mov
mov
loopne
icebp
imul
data16
data16
pop
mov
mov
push
jmp
movl
mov
push
sti
lods
or
or
repz
add
test
pop
ljmp
adc
jnp
push
sub
push
push
out
decl
ljmp
adc
add
movl
les
lea
mov
sub
rol
dec
lahf
cmp
mov
push
fistpll
fidivs
mov
dec
gs
adc
in
sub
adc
rcrl
add
rorl
cltd
mov
data16
mov
cld
std
scas
ficomps
call
adc
add
ret
pop
mov
dec
inc
sbbl
dec
xchg
adc
or
xchg
mov
xor
jne
mov
mov
outsl
icebp
test
je
adc
push
and
movsl
or
pop
or
and
mov
out
mov
sbb
or
push
xor
jl
movsl
adc
outsb
xor
fwait
mov
xor
and
xlat
sbb
or
mov
nop
xor
js
roll
cwtl
sbb
bswap
fstl
clc
cmp
ja
or
push
or
mov
sub
sbb
xlat
and
fstpt
neg
and
je
push
push
push
cmp
mov
jnp
sbb
jge
sub
pop
mov
mov
imul
adc
sbb
cmp
jnp
das
mov
sub
push
in
cld
pop
je
mov
pop
or
je
pop
mov
icebp
jle
cmp
jg
sub
inc
xor
sarl
mov
aam
pop
cld
inc
rep
jmp
mov
jmp
mov
jmp
shlb
ret
jnp
in
fisubs
nop
or
arpl
shlb
and
sub
jg
lcall
hlt
sub
or
lret
test
lods
mov
adc
xor
mov
es
add
insb
jno
xor
xchg
push
inc
lea
fildll
sbb
or
or
flds
mov
jl
dec
pop
fstpt
xchg
fisubrs
lret
adc
mov
mov
in
pop
add
and
sub
das
mov
movsl
fisttpl
popf
or
movl
insl
inc
mov
inc
add
mov
adc
add
or
pop
lods
push
or
add
add
pop
mov
and
push
fwait
test
push
and
sti
lret
jbe
and
cmpb
add
xor
mov
fincstp
sbb
jmp
push
xor
std
inc
or
sub
add
cmpb
pop
sbb
or
sub
mov
mov
pop
cmp
mov
cmpsb
jmp
lods
and
sbb
mov
testl
inc
inc
or
repz
xchg
add
xor
clc
bound
jl
mov
and
xchg
xor
add
jne
push
dec
xor
mov
aam
xor
out
fs
les
push
jnp
fdivs
je
addb
jmp
push
ret
dec
mov
jbe
push
sub
jmp
ljmp
jnp
or
sub
data16
dec
jne
inc
adc
dec
jmp
mov
adc
incl
cmp
adc
mov
mov
dec
cmp
sbb
adc
mov
addb
pop
inc
cmp
shlb
sub
mov
or
jne
imul
or
je
orb
fsubp
inc
je
inc
or
sub
out
xchg
orl
movsl
xchg
decl
jb
cmp
ja
mov
mov
imul
jg
and
testl
inc
xchg
xor
cmp
mov
jl
jle
fwait
outsb
inc
stos
dec
add
add
sub
fldl
fstl
mov
shl
fdivrl
pusha
outsl
lea
shl
ficoml
imul
sub
stc
push
mov
aas
mov
and
xor
jmp
pop
dec
sbb
lcall
adc
lahf
imul
es
test
ret
das
pusha
push
loopne
mov
cltd
insb
fnsave
fstpt
push
inc
xchg
mov
pop
or
je
mov
push
sub
je
and
pop
pop
jle
je
pop
je
xor
daa
adc
out
test
inc
test
sub
sti
and
and
addb
add
sub
outsl
filds
je
imul
push
neg
jle
adc
std
js
pop
sub
jmp
lds
jmp
mov
push
sub
aad
dec
pop
mov
mov
dec
xchg
pop
adc
fcoms
ffree
or
sbb
orl
xor
mov
jg
pop
cmp
pop
and
outsb
jl
je
fmul
cmp
andl
fldt
leave
lods
mov
adc
push
xchg
xor
popa
ret
adc
and
mov
push
imul
dec
sahf
stc
xor
sbb
add
push
fstp
fldt
fldz
xchg
jge
shlb
or
inc
push
repnz
enter
cli
or
or
ret
pslld
adc
mov
dec
jle
imul
stc
add
mov
adc
adc
out
xchg
sub
lahf
std
xor
out
sub
pop
jecxz
add
leave
sbb
inc
cs
jbe
imul
cmp
mov
mov
das
jmp
outsl
bound
cmpb
xlat
fadds
outsb
dec
jg
xor
xchg
push
or
push
push
int3
into
sbb
rorl
mov
popa
push
pop
test
enter
mov
inc
cmp
and
daa
decl
test
xchg
clc
js
aas
sbbl
pop
mov
addr16
leave
repnz
dec
bound
and
cld
gs
sahf
mov
sub
inc
aad
iret
decl
js
mov
fwait
lds
stos
mov
cmp
or
mov
pop
out
sub
call
inc
imul
divl
jl
xor
cmp
call
mov
jmp
stos
push
inc
mov
push
sbb
sarb
repnz
test
nop
fildl
daa
movsb
lcall
clc
scas
adc
inc
pop
pushf
mov
pop
pushf
mov
fs
aam
imul
loope
jp
iret
incl
mov
ds
push
cmpsb
scas
mov
pop
or
addl
inc
jmp
mov
cmp
sahf
xchg
pop
cmpsb
lock
ljmp
movsl
mov
popa
mov
and
addr16
repz
mov
mov
and
and
outsb
bound
xor
and
mov
in
dec
sbb
sbb
add
cmp
stc
or
mov
sub
hlt
pop
bound
daa
add
xchg
inc
cld
push
ret
lods
loopne
xor
push
cli
pop
ljmp
cli
push
push
add
mov
movl
push
cwtl
fnstenvs
clc
add
jnp
mov
pop
sub
dec
sub
xchg
hlt
jmp
jno
shlb
lock
sar
data16
or
mov
daa
add
push
inc
push
inc
pop
jns
inc
gs
jo
imul
dec
add
push
dec
popa
jae
push
popa
insb
jne
mov
jecxz
fldcw
add
mov
inc
mov
addr16
rcr
mov
or
sbbb
daa
cmp
sub
loopne
dec
outsb
adc
ror
les
sub
or
or
popl
mov
enter
xlat
xchg
imul
mov
or
push
cld
mov
das
sbb
push
mov
repz
mov
add
stos
test
loop
mov
ljmp
mov
or
aam
sbb
or
adcl
push
int
mov
nopl
or
and
sbb
jecxz
push
lock
push
rorb
orb
leave
jmp
outsl
dec
pop
fistl
adc
jb
xstore-rng
cmpsl
add
stos
jbe
and
adc
inc
fadds
clc
lods
aaa
mov
icebp
mov
jmp
nop
cmp
mov
add
inc
cld
imul
inc
adc
inc
mov
add
and
push
cmp
mov
test
lea
push
sbb
daa
pop
ss
or
clc
push
imul
ret
icebp
cmp
adc
pop
ss
or
adc
push
sti
sub
int
jecxz
mov
jg
mov
cmp
jb
cmp
jne
pop
or
pop
pop
or
or
andl
mov
dec
lds
out
adc
test
jp
push
xor
add
push
xchg
jmp
testb
jmp
test
push
add
repnz
pusha
ret
ret
adc
pop
pop
divb
pop
mov
mov
je
cld
pop
jnp
push
jecxz
dec
xor
dec
mov
and
ljmp
push
faddl
js
daa
jmp
push
push
negb
add
leave
or
ret
ficoml
jmp
add
in
dec
mov
pop
mov
cmp
mov
push
push
push
jl
dec
hlt
std
decl
arpl
adc
mov
mov
movl
test
inc
or
or
pop
cmp
popf
fidivrs
sub
push
mov
push
jge
nop
add
lea
adc
push
clc
jae
mov
clc
loopne
cmp
jge
in
and
bound
iret
jp
popf
scas
adc
push
cmpsb
pop
stos
scas
add
jg
add
call
inc
ret
and
add
or
sub
scas
push
in
push
out
adc
fstp
push
xor
xor
sbb
and
pop
cmpsl
pop
add
ds
and
pop
push
push
cmpsb
pop
icebp
xchg
xlat
sbb
jmp
gs
jne
movsbl
inc
inc
jne
popa
scas
jno
add
and
fldenv
mov
loope
dec
into
push
pop
mov
push
pop
loop
xchg
sbb
mov
fcompl
jns
notl
out
mov
jne
fisubs
xchg
xchg
mov
je
push
imul
icebp
xchg
fiaddl
pop
loope
cmpsl
or
jae
and
lock
in
inc
cmpl
je
arpl
mov
sub
ja,pn
lea
fsubrs
sbb
rolb
pop
add
stos
push
mov
mov
xchg
lods
adc
push
adc
push
mov
std
push
cmp
je
xor
psubsw
sbb
sbb
xchg
ficoml
movsb
cmp
shrb
sbb
cmpsl
loopne
add
pushl
push
lret
std
lea
pop
add
inc
add
sub
clc
sub
jmp
nop
sub
push
mov
inc
in
mov
inc
or
es
insb
or
lret
sub
popl
js
xor
nop
jnp
fstpl
dec
add
mov
lcall
sarl
pop
cmp
adc
imul
imul
inc
cmpsl
push
mov
adc
stos
je
mov
inc
jo
gs
or
or
mov
or
lea
pop
push
push
push
push
push
jmp
or
or
imulb
pop
dec
cmp
mov
inc
or
pusha
add
inc
mov
sub
inc
aam
adc
outsl
pushf
adc
xchg
or
iret
cmp
fs
pop
bound
mov
sub
pop
lods
jg
stos
clc
mov
cmp
je
cmp
push
ljmp
sub
je
jmp
add
mov
sub
jb
je
jmp
cmp
cmp
fbstp
and
cmp
cmp
decl
sub
enter
and
mov
jmp
mov
jmp
bndldx
jmp
mov
jmp
mov
divl
fsincos
pop
xchg
sub
mov
ja
mov
push
or
pop
lock
test
sbb
xor
cmp
sub
mov
push
pop
pop
cmp
push
adc
sbb
test
call
lcall
test
or
ret
cmpsl
push
pushf
mov
inc
mov
out
xlat
xor
sub
xor
xchg
cmc
mov
mov
add
and
mov
les
pop
mov
or
enter
inc
std
push
das
sti
or
add
mov
add
dec
mov
pop
test
push
aas
lds
pusha
ret
jle
dec
mov
je
add
adc
adc
jmp
jmp
or
inc
add
movsb
das
or
repz
cmp
test
mov
cmp
jle
pop
xor
inc
imul
sti
jg
or
fstps
rol
movl
cmpsb
push
mov
adc
rol
dec
mov
xchg
jmp
outsb
scas
xor
dec
insb
ret
push
xor
out
and
mov
lea
mov
mov
add
mov
sbb
or
jmp
pop
mov
mov
cmc
add
inc
or
es
pop
out
into
in
out
mov
xor
inc
dec
mov
add
enter
int3
mov
adc
adc
fwait
pop
dec
dec
ljmp
loopne
jg
mov
and
mov
mov
cmpl
mov
xchg
rolb
fistpl
outsl
adc
testl
and
mov
sub
pop
loop
leave
ret
push
add
sub
or
pop
clc
adc
cmp
mov
mov
add
ret
mov
ds
inc
repz
sbb
push
test
sub
xor
shll
push
cmp
sub
pop
mov
sbb
jbe
jnp
xchg
mov
inc
xchg
cmpb
mov
sbb
loop
mov
pop
testl
addr16
jbe
pop
adc
add
int
cmp
xor
jne
pop
add
cs
mov
pop
sbb
jbe
xchg
push
xchg
adc
pop
sbb
imul
cmp
popa
loopne
fwait
pop
and
mov
jne
xchg
xor
pop
aam
pop
mov
stc
or
icebp
jo
cmpsl
sti
notl
cmp
leave
mov
mov
lret
pop
sub
sar
jmp
repz
jg
sar
dec
jl
lock
mov
sbb
negl
out
mov
adc
sbb
add
aam
xchg
push
or
mov
mov
and
inc
jg
add
cs
test
pop
push
andb
jmp
fdivs
jnp
dec
shrl
jnp
inc
or
ljmp
push
out
or
test
pop
movw
pop
js
push
sub
mov
adc
in
fwait
lret
push
int3
mov
mov
xchg
call
je
rcrl
jecxz
cmp
push
inc
lock
push
add
pushf
xor
inc
and
sbb
clc
dec
fsubrs
add
mov
push
sbb
arpl
xor
outsb
add
jge
push
pop
cmpsl
mov
clc
cld
xor
jl
push
jns
mov
pop
add
adc
fldl
fisttpl
rorl
mov
or
pusha
jb
push
jl
call
loop
aaa
bound
nop
xor
push
ficomps
outsl
hlt
and
or
dec
add
add
je
jg
fistpl
cmpl
rcrl
shr
fstpt
jbe
arpl
sub
and
xor
add
xor
in
add
cmp
adc
jge
cmp
mov
inc
dec
nop
push
sub
repnz
xchg
roll
xor
jnp
pop
pop
sbb
loope
aaa
add
pop
xchg
add
out
daa
sbb
std
das
mov
add
xchg
jns
push
cld
add
les
cli
sub
inc
das
inc
fistl
adc
lret
lods
sub
popa
lods
pop
inc
pop
cmp
into
cmp
mov
sbb
xor
into
arpl
or
cld
cmp
mov
mov
mov
cli
bound
push
push
pop
adc
mov
enter
lret
mov
jae
or
jmp
xor
mov
mov
mov
pop
adc
add
cmp
adc
dec
stos
push
pop
ja
mov
add
dec
aam
rcr
or
sbb
jb
push
add
jne
fstps
lds
icebp
out
dec
mov
cmp
pop
lea
jmp
lret
cmp
call
imul
shrb
out
sub
call
pop
ja
add
push
shr
mov
pop
cmp
jne
dec
je
je
mov
in
add
or
outsb
xorl
loop
or
in
clc
add
and
and
cmp
cmp
in
std
jne
push
adc
mov
add
jmp
pusha
jmp
push
movsl
sti
mov
adc
shr
or
dec
outsl
rcll
inc
divl
cmp
add
pop
test
xor
pop
push
mov
fists
push
pop
pop
or
inc
adc
shl
popf
jns
sti
aaa
and
mov
mov
call
sbb
fidivrl
sub
xor
mov
cli
push
movb
or
xor
call
mov
aam
pop
fcmovnb
add
dec
inc
dec
mov
dec
cmp
jl
xchg
cmp
add
hlt
jbe
mov
fmuls
test
test
xor
lahf
sub
sbb
inc
dec
xor
cmp
jb
add
out
lcall
imul
and
cmp
subl
adc
push
imulb
jp
and
sbb
out
dec
jne
push
out
dec
cwtl
dec
push
lods
nop
fwait
in
daa
adc
outsl
insb
jo
mov
xor
pop
xor
lock
sbb
jne
sub
adc
icebp
mov
hlt
int
pop
mov
call
js
push
sbb
push
push
lock
loopne
sbb
add
inc
pop
sbb
cli
jmp
inc
xchg
jbe
imul
icebp
jl
add
add
mov
xchg
sub
or
in
decl
pop
push
push
pop
in
fs
inc
femms
push
push
pop
nop
cmp
imul
or
and
add
cmc
call
aaa
cmp
rolb
sub
xchg
leave
or
fsts
cmp
leave
add
jmp
pop
push
jle
iret
mov
cmp
dec
es
adc
jnp
jb
cmp
leave
xchg
or
in
mov
movsl
sbb
pop
pushl
add
adc
sbb
mov
iret
in
call
xor
cmp
in
movl
dec
cmp
mov
std
xchg
mov
sub
cmp
cmpps
add
aas
xchg
test
adc
clc
push
cmp
push
mov
pop
ret
sbb
push
je
lock
sahf
jecxz
pop
cmp
add
inc
push
sub
mov
sub
push
mov
xchg
xor
adc
inc
aam
loop
dec
mov
cmp
int3
pop
or
clc
jne
out
xor
scas
cmp
or
mov
call
mov
iret
loopne
jno
std
push
and
add
cmp
je
sbb
ljmp
test
je
cmp
sub
push
cmp
pop
mov
cmp
pop
jecxz
sub
jg
into
adc
scas
shll
pop
test
mov
das
ja
cmp
notb
repz
push
mov
mov
fcmovnu
or
dec
rclb
sbb
scas
ror
call
sbb
mov
lock
sbbb
testb
sbb
jmp
lock
push
jbe
test
sbb
sbb
fisttps
js
in
adc
repz
and
lea
outsl
cld
mov
cmp
sub
jle
icebp
loope
add
xchg
inc
add
jo
inc
jl
cmp
xor
repnz
je
or
jo
mov
xchg
orb
mov
insl
in
rcll
mov
pop
inc
or
jnp
jge
iret
pop
jns
cmp
insb
lea
mov
sbb
stc
clc
push
add
je
mov
ret
sbb
or
cmp
insl
mov
cs
add
cmp
sbb
pop
inc
fcoms
pop
adc
sub
int3
ss
mov
imul
gs
jmp
bound
inc
mov
sbbl
addr16
push
insb
and
mov
testb
inc
push
sbb
xchg
pushf
test
lds
mov
jecxz,pt
rcrb
loope
jp
adc
adc
loop
cwtl
cmp
sbb
mov
outsb
adc
std
add
jns
ljmp
pop
inc
clc
les
mov
push
aaa
cmp
add
sbb
jnp
cmp
xchg
gs
fcoms
xor
out
xor
or
xchg
aam
nop
push
dec
mov
cmpsl
rcr
xor
and
mov
inc
lea
jl
andb
pop
jmp
or
pop
pop
insb
cs
add
push
aas
fstpt
sub
int3
cwtl
aam
testb
ja
adcl
test
movsb
pop
add
ss
cmp
out
mov
cmp
push
push
jne
xorb
fiaddl
and
dec
cmp
add
add
pop
int3
inc
dec
inc
mov
dec
push
sub
push
sub
inc
scas
push
fisttps
aaa
test
imull
and
popa
sbb
jnp
call
or
jmp
mov
cmp
xor
jge
sbb
jg
sti
xchg
imul
cmp
lods
ret
sub
jg
lea
mov
inc
lret
lods
loopne
pop
decl
push
outsb
pop
jae
mov
inc
in
jge
add
fcomp
mov
inc
dec
xor
lods
mov
add
adc
je
out
into
push
cmp
push
arpl
dec
shll
test
pop
or
ss
lods
sub
dec
ret
add
js
jge
jle
int3
or
sbb
push
push
dec
ja
and
lods
ret
or
dec
ficomps
pusha
clc
ret
cmovg
jl
inc
in
mov
xor
mov
xlat
pop
push
lcall
mov
push
xchg
xor
fisubl
pop
mov
xor
lahf
sbb
jo
sbb
adc
dec
test
stos
int3
in
incl
div
mov
mov
in
sbb
pushf
add
sub
jl
sbb
jecxz
cmp
pop
push
cwtl
adc
sbb
out
inc
jo
sarl
sub
jne
mov
les
xor
inc
mov
cmp
mov
add
shll
int3
sbb
rcrl
add
je
mov
jne
dec
inc
jl
sbb
aam
xchg
jne
xor
jnp
data16
ss
push
inc
fs
test
cmp
jne
aad
mov
lods
cli
push
sub
imul
mov
sahf
push
add
out
mov
push
rcll
outsb
ret
xchg
into
test
popa
fidivl
roll
adcb
jmp
cmp
xchg
call
add
aad
fcmovnu
dec
add
jnp
cmpb
std
rolb
ljmp
jne
out
mov
sub
fldenv
fadds
pop
arpl
lea
inc
cmp
faddl
test
inc
push
push
xor
or
inc
mov
dec
mov
mov
out
andb
mov
ja
lock
ret
push
movb
pop
mov
fimuls
insb
cwtl
pop
jle
aas
inc
add
sbb
sub
push
shrl
push
loope
repnz
gs
push
aas
insb
xor
cs
insb
iret
inc
fldt
addr16
popa
jae
testl
inc
adc
loopne
xorb
xchg
jbe
mov
movb
pushw
add
leave
jb
imul
je
sbb
add
cmp
xor
and
stos
jmp
test
cmovb
push
jl
fcomp
mov
adc
dec
mov
pop
addr16
sbb
add
add
add
inc
sub
int
push
clc
std
pop
mov
vmwrite
push
push
repz
mov
test
cmpb
fprem
jecxz
repz
or
lret
dec
sarl
lods
hlt
pop
mov
add
cmp
js
cmp
jne
shrb
inc
inc
je
iret
into
mov
ret
test
push
add
push
fmuls
js
inc
jb
mov
pop
aaa
repz
in
ret
cmc
add
mov
and
jmp
arpl
add
sub
sbb
xchg
inc
pusha
int3
add
sahf
pop
inc
and
pop
inc
loope
roll
mov
negl
mov
push
mov
xchg
lds
mov
movaps
mov
sub
xor
cmc
jge
and
adc
push
mov
adc
ljmp
push
add
or
pop
pop
push
pop
cmp
nop
push
hlt
clc
sbb
push
add
sti
lea
mov
enter
xor
add
aam
push
and
adcb
mov
push
mov
out
push
cmp
inc
push
xchg
cmp
mov
aaa
dec
jne
push
lea
mov
ljmp
jg
mov
call
pop
shrb
adc
or
sub
push
hlt
dec
test
add
fmull
push
mov
push
sub
sub
inc
sbb
inc
add
stos
push
dec
cmp
es
push
xor
fistpll
daa
and
push
dec
adc
mov
aam
sar
mov
jo
sbb
add
lahf
adc
dec
mov
or
cmp
outsl
scas
or
and
add
ret
test
add
mov
aam
shll
cmp
jge
sbb
jns
mov
push
inc
les
loopne
imul
sbb
sub
jno
insb
dec
xor
cwtl
std
movl
inc
fwait
clc
dec
pop
pop
mov
xchg
add
mov
or
add
loopne
pop
lds
inc
ret
cmp
push
rorl
leave
push
inc
xchg
clc
insb
out
mov
pop
pop
lods
enter
push
insl
mov
jmp
inc
es
sub
xchg
daa
adc
lods
fisubl
loop
imul
imul
or
mov
sub
dec
insb
loopne
or
add
fwait
jno
fsubs
cmp
sub
jne
pop
or
hlt
and
cmp
and
fcmovnb
mov
inc
divl
js
pop
xor
dec
push
mov
jae
add
nop
adc
xor
lock
dec
or
ds
aam
pop
add
inc
into
dec
dec
cltd
pop
clc
push
sbb
lock
call
in
fsubl
push
fcom
rclb
enter
sbb
mov
mov
lods
test
fs
inc
movsb
mov
push
cwtl
xchg
nop
nop
inc
push
sbb
cmpb
fs
je
push
inc
mov
jb
pop
clc
stos
cld
in
clc
jle
adc
mov
movsb
jmp
pop
mov
inc
push
stc
pop
sub
icebp
repnz
sbb
hlt
cmc
negb
fs
inc
idiv
stc
fs
inc
push
cli
sti
cld
nop
inc
push
sbb
incl
sbb
loop
sbb
in
out
fs
inc
out
jmp
ljmp
in
out
out
inc
push
sbb
rolb
sbb
aam
sbb
xlat
fcomp
fs
inc
push
fcmovu
fcoml
inc
push
sbb
ret
fs
ret
fs
inc
enter
inc
push
lret
nop
inc
push
sbb
into
iret
inc
push
sbb
mov
sbb
mov
mov
enter
mov
mov
mov
or
mov
xor
mov
xor
and
andl
pop
imul
xchg
pop
add
iret
adc
inc
push
les
pop
leave
add
inc
js
gs
sub
sub
pop
scas
nop
dec
xor
mov
fsubl
inc
dec
gs
jo
nop
les
leave
inc
xchg
sbb
or
mov
inc
dec
jne
dec
push
jae
pusha
mov
pop
fs
pusha
mov
out
xchg
or
outsb
pop
inc
jb
pop
js
sub
xchg
mov
mov
xor
shlb
shrb
notb
xchg
pop
adc
popa
pop
loope
in
xor
jbe
mov
push
mov
add
inc
imul
sub
gs
nop
loopne
enter
mov
cmp
fcompl
mov
outsb
or
mov
insb
outsl
ja
pop
pop
rolb
or
mov
in
mov
bound
jbe
and
mov
imul
inc
arpl
adc
arpl
mov
pushf
fld
adc
imul
push
pop
xor
outsb
fs
addr16
nop
dec
xchg
psraw
maxps
imul
test
pop
or
xchg
inc
pop
cmp
add
gs
add
or
scas
inc
or
js
in
nop
xlat
pusha
pop
pop
les
push
arpl
jmp
inc
jp
mov
mov
and
in
js
jb
insb
gs
sbb
sbb
push
xchg
arpl
nop
je
je
push
push
inc
or
push
inc
ret
or
push
pop
adc
add
lahf
or
inc
jbe
addr16
sub
sbb
ret
mov
or
or
mov
inc
mov
test
bound
jb
nop
in
push
add
cmp
les
inc
push
or
push
sets
mov
stc
xchg
sbb
push
popa
data16
fsubs
hlt
mov
cs
xor
scas
dec
pop
loope
inc
xor
cmp
insb
jae
adc
cmp
je
jnp
fbld
mov
add
mov
adc
std
adc
jb
fs
pop
mov
int3
adcl
fldenv
fmull
cmpsl
jo
inc
push
jmp
cmpsb
jmp
jg
add
lcall
adc
sbb
popa
je
fists
jno
cmp
fildll
mov
or
xor
loope
mov
mov
push
dec
jne
ds
ficoms
gs
insb
pop
push
outsb
arpl
popf
imul
sbb
ret
adc
or
adc
repz
adc
adc
loopne
je
pop
mov
mov
mov
inc
jg
mov
aam
sub
test
mov
adc
je
push
jp
jle
cmp
xchg
and
sti
lcall
add
jne
xor
cmp
jbe
jmp
or
or
fdivr
pop
add
cmpl
je
mov
adc
rorb
pop
mov
dec
add
mov
or
sub
insl
xor
or
rcrb
outsl
outsl
and
enter
inc
push
cld
jo
shr
insb
add
xchg
add
fwait
push
cwtl
fwait
sbbb
cld
sbb
adc
neg
sti
scas
mov
test
push
jl
cld
sub
add
xor
repnz
mov
movzwl
add
cmp
je
cmp
add
ljmp
add
pop
cmp
jg
fwait
idivb
or
jmp
sub
jne
das
add
mov
cmp
je
mov
shr
sub
incl
mov
pop
pop
sbb
push
faddl
add
cld
cmp
add
mov
pop
les
cltd
sahf
add
mov
ficompl
push
roll
out
cli
add
sub
push
push
inc
or
fmull
adc
negb
and
mov
in
mov
mov
sub
inc
cmp
scas
xchg
cmpb
jbe
or
push
or
dec
adc
clc
cmp
sub
inc
mov
pusha
sub
insb
push
mov
jns
push
push
loop
loop
pop
xor
push
ret
scas
push
push
xor
dec
ret
cmp
call
call
mov
or
sub
jbe
add
fidivrl
pushl
add
cli
xor
in
adc
leave
push
aaa
scas
loopne
decl
repnz
test
pusha
imul
insb
ljmp
jo
pushl
mov
negl
cmpl
mov
pop
inc
cmp
hlt
ljmp
push
add
jl
add
cmp
orw
sub
mov
call
push
daa
andl
sti
xchg
fildll
fildll
ret
sub
fidivrs
add
rorl
fildll
stc
mov
pop
add
xor
add
push
push
fisttps
fstsw
sahf
jae
fnstenv
ffree
sub
cmp
ffree
ffree
pop
ljmp
mov
mov
and
mov
icebp
mov
sbb
mov
jnp
and
push
rcrb
push
fldt
sbb
rorl
push
lods
sub
outsb
stos
pop
and
int3
sub
sub
out
ja
js
add
push
push
clc
adc
rcrb
or
aas
sub
rcr
insb
sub
jnp
sbb
jg
in
daa
mov
xor
enter
or
mov
push
xlat
add
jb
imul
mov
jns
adc
movb
xchg
test
inc
mov
mov
or
out
in
mov
cli
mov
dec
rorb
pop
imul
sub
nop
or
mov
push
pop
lea
pop
add
hlt
jne
movzbl
mov
jmp
fisubl
test
push
outsb
enter
fnstsw
mov
adc
insl
lock
setne
jmp
sbb
lods
dec
ret
dec
xor
or
pop
add
mov
xor
movb
and
or
inc
mov
xchg
int3
test
pop
dec
add
data16
or
sub
inc
lods
sbb
xor
lea
sbb
adc
jmp
aam
pop
repnz
loopne
cwtl
lds
cmp
add
psubb
jbe
dec
loope
call
pop
notrack
test
push
sbb
lds
mov
mov
decl
add
dec
outsl
jg
lret
test
adc
jae
push
rcll
jno
pusha
cmp
popf
ss
mov
or
in
sub
pop
cmp
call
popa
out
std
ja
push
push
clc
cld
push
rol
orb
or
pop
test
inc
call
fmull
gs
or
pop
ret
mov
sub
loop
lock
daa
push
adc
repz
pop
dec
nop
xor
xchg
pushl
or
lock
sub
movsl
xlat
fwait
repnz
sub
pop
out
sbb
mov
daa
movb
add
lret
mov
mov
inc
fnstcw
push
sub
movsl
mov
movsb
sub
pop
pop
xor
xchg
mov
xor
or
xor
xchg
pop
fsts
leave
repz
je
mov
sbb
sub
mov
pop
or
add
ja
pop
mov
stos
mov
fildl
mov
add
inc
test
cmp
jne
adc
inc
inc
fbld
push
scas
xchg
rcrb
dec
je
outsb
and
mov
vmwrite
push
lea
mov
mov
mov
push
cmpl
jle
in
lea
in
bound
fldcw
cmp
jbe
mov
pusha
loope
cltd
or
add
dec
mov
shlb
xchg
mov
jo
test
movb
push
lds
in
inc
loopne
sahf
mov
push
subl
mov
outsl
lock
or
call
pop
pop
aad
adc
jmp
mov
xchg
push
or
push
flds
pushf
iret
mov
addl
jge
or
add
push
aam
std
or
and
lea
inc
insl
jnp
sbb
bnd
in
jbe
call
sub
lods
gs
mov
fisubrs
pop
pop
hlt
adc
lods
jmp
xchg
scas
jge
repnz
and
adc
js
xchg
pop
mov
sub
out
jae
fildl
mov
jae
lret
xchg
or
rep
or
cmp
or
loop
loopne
imul
xchg
inc
cmp
mov
xor
sub
pop
cld
cmp
ja
imul
ja
dec
in
add
pop
daa
mov
push
cmp
jg
stos
jle
jae
mov
andl
test
ret
and
mov
dec
sbb
xchg
pop
pop
xor
fimuls
push
dec
push
shll
jne
dec
mov
lcall
das
xor
mov
repz
pop
adc
iret
add
jbe
mov
mov
sub
xor
push
mov
mov
fcompl
in
jmp
push
or
mov
or
popf
lods
cltd
insl
jmp
xor
pop
repnz
mov
sahf
shl
jo
adc
stc
push
jne
mov
ret
push
bound
cmp
jbe
les
push
mov
jmp
or
lods
push
and
lods
adc
cmp
jmp
mov
jne
out
sbb
mov
and
insb
aad
pop
sub
mov
cmp
mov
or
add
cld
mov
cmp
ja
jns
sbb
add
shlb
and
dec
mov
jo
shrb
and
jmp
sbb
and
inc
je
mov
push
inc
je
mov
inc
je
mov
loopne
insb
fisttpll
jp
mov
push
cmp
jbe
mov
lret
push
inc
mov
push
mov
jle
fdivrl
jg
mov
call
xchg
pop
mov
iret
movsb
push
ret
sbb
adc
iretw
add
lahf
push
add
push
cwtl
xchg
cwtl
jo
pop
inc
ljmp
or
or
andb
arpl
ret
add
jo
mov
cmpsb
ret
xchg
addr16
push
nop
xor
hlt
loopne
and
loop
mov
cmp
sarb
clc
enter
dec
addb
jp
jl
add
adc
cli
jbe
mov
into
mov
pop
jg
jmp
nop
mov
insb
add
daa
addr16
mov
push
inc
jle
lds
mov
lea
fcoml
and
outsl
xor
sub
imulb
pop
pop
push
orl
sbb
push
or
rorb
jecxz
mov
ficoms
mov
inc
dec
hlt
adc
jg
in
add
jmp
cmp
jne
pop
pop
or
push
pushf
outsl
aam
fbld
mov
test
cli
mov
mov
mov
psllq
sbb
dec
icebp
mov
pushf
sahf
roll
incl
jge
or
add
mov
movsl
ss
adc
js
add
adc
sub
fmuls
sub
and
std
pop
pop
imul
sbb
fcomps
js
xchg
sub
fisttpll
adc
ja
movswl
cmp
ficomps
add
pop
cmp
shrb
add
cmp
jmp
sbb
popa
sbb
mov
dec
inc
nop
dec
lods
or
xor
cltd
jae
movsl
ret
stos
ret
jle
dec
aam
inc
insb
or
cmp
jl
sub
push
cmp
or
neg
dec
std
inc
inc
je
stos
loop
pop
adc
mov
stos
or
and
daa
push
add
outsl
mov
pop
push
pop
add
mov
sbb
pop
pop
sbb
cmp
fisubrl
xchg
mov
mov
mov
outsl
mov
fsts
ss
adc
shll
xchg
add
inc
loope
push
stos
enter
repz
inc
push
orb
jne
cli
popf
jmp
cmp
stos
sbb
call
add
jnp
out
stos
jecxz
cmp
or
stc
cs
outsb
mov
ret
dec
jns
jno
outsb
cmp
or
cmp
xchg
mov
pushf
sbb
xchg
out
pushf
fwait
sarl
and
push
ljmp
push
push
shr
xlat
fiaddl
lods
or
jmp
insb
std
cmc
pop
pop
inc
loop
push
lock
mov
in
lea
inc
add
and
jnp
jbe
movsl
or
and
adc
inc
sub
mull
sub
or
add
adc
sub
inc
add
pop
sbb
sub
cmp
ljmp
jecxz
add
cld
add
or
insb
ja
dec
or
mov
movsl
ljmp
sarb
push
jne
testw
cmpl
or
add
inc
and
insb
pop
fldt
mov
dec
add
pop
rcll
insl
repz
jne
loope
in
push
fldt
filds
negb
inc
xor
mov
out
mov
fbstp
lea
mov
inc
sub
push
rorb
pcmpgtd
sub
jmp
stos
inc
clc
add
jns
aas
or
fadds
mov
cmp
jae
xchg
cmp
xor
cmp
pop
push
add
or
in
rcr
imul
pop
data16
mov
fs
mov
mov
sbb
xor
push
or
mov
inc
xlat
pop
xor
add
dec
out
cmc
add
adc
mov
mov
dec
sub
xchg
fadds
lods
inc
jge
or
jge
mov
pop
mov
sub
cmpsl
sbb
jae
dec
add
push
lds
in
insl
add
cli
cli
popa
or
xor
push
addr16
pop
fimuls
push
sbb
or
sub
sbb
pcmpeqw
dec
adc
cmp
neg
ret
and
and
mov
dec
adc
adc
aas
movb
mov
cmpb
idivl
fisttpl
push
mov
mov
in
push
xor
pop
mov
adc
mov
fclex
fldcw
test
aaa
jle
mov
cmp
add
sbb
push
outsb
push
mov
fidivs
jne
inc
push
push
cmp
je
adc
ja
or
cmp
test
pop
add
aas
jb
ficoml
iret
mov
add
xorb
fsub
testb
loopne
mov
aas
xlat
fstpt
loopne
in
add
test
mov
jne
lcall
jmp
lcall
std
data16
and
ret
sub
add
jae
fimull
push
mov
add
ljmp
push
sti
scas
stc
xchg
sub
in
jp
push
inc
imul
popl
ljmp
test
loope
rorb
mov
sub
je
les
pop
repnz
leave
xchg
outsl
das
add
add
popf
add
pop
insl
push
cmp
inc
nop
sti
mov
aam
jle
add
fldt
fstpl
fwait
and
popa
or
pop
add
mov
ja
xchg
mov
clc
push
roll
pop
pop
jmp
push
mov
inc
sbb
pusha
or
sub
jge
pop
xchg
sub
inc
add
mov
clc
repz
lret
repnz
sbb
clc
sbb
add
stc
inc
mov
push
mov
hlt
shrb
fistpll
add
shrb
pusha
or
jb
or
call
mov
add
xor
out
jo,pn
sbb
pop
imul
lcall
test
add
ficompl
pop
insl
dec
mov
mov
lret
jo
cmp
aaa
push
xchg
add
cld
call
add
sub
test
mov
add
and
fnstenv
adc
adc
negb
mov
adc
mov
lcall
lods
push
push
fldcw
std
add
bound
push
jg
insl
ret
pop
inc
mov
jge
mov
xchg
subl
mov
pop
call
ja
or
insb
cmp
push
dec
inc
ja
or
aas
adc
test
jnp
add
inc
dec
clc
arpl
mov
rcrl
insl
jmp
xchg
jns
ret
cli
add
repnz
pop
mov
stc
add
xor
add
out
cmp
std
push
loop
sub
xorb
or
push
xor
in
pop
dec
push
loop
call
dec
in
gs
mov
xor
data16
pop
clc
hlt
add
outsb
add
scas
mov
mov
out
cmp
ficoms
xor
jmp
adc
push
repnz
fwait
lods
mov
pushf
sub
add
or
dec
lock
sub
imul
push
fsubrs
dec
rol
outsb
int
pop
sub
lock
dec
mov
fiaddl
adc
fdiv
mov
ret
inc
sub
cmp
repnz
inc
dec
cmp
jb
or
hlt
mov
sub
sbb
mov
inc
test
inc
push
ret
sub
push
dec
scas
pushw
iret
cmp
push
push
xor
aam
push
fdivs
rcrb
sbb
and
push
clc
ret
cmp
cld
mov
sti
sbb
adc
push
adc
and
or
inc
mov
push
roll
fcmovbe
inc
fdivrl
and
loope
and
cwtl
sbb
cli
int
jmp
inc
pop
sub
and
sbb
shll
xchg
loopne
push
cmp
xor
add
movsl
sub
or
xlat
mov
sbb
ret
dec
push
inc
or
insb
dec
jno
ret
stc
or
push
cmp
jo
lods
sub
mov
inc
hlt
xchg
adc
sub
fwait
mov
js
jo
add
bound
dec
lods
jb
mov
fimuls
movb
cmp
jecxz
repnz
out
xor
call
push
jno
mov
stos
test
cld
test
flds
or
xor
inc
cmp
pushf
xor
or
out
out
repnz
sbb
add
push
push
xor
in
or
sbb
dec
add
push
dec
sbb
dec
xor
sub
adc
outsb
popf
mov
pusha
mov
or
mov
mov
jnp
vcmpsd
or
cmpl
mov
lgs
mov
fisubl
fst
clc
sbb
dec
add
fsubs
dec
or
sub
insb
mov
jno
xchg
js
call
xor
xor
or
xor
test
repnz
xor
pop
jg
add
push
enter
xchg
inc
ds
cmp
jg
jp
xchg
or
in
xchg
and
cmpb
jne
dec
ret
or
xchg
and
dec
fnstsw
lock
jns
add
add
mov
aam
push
aam
pop
sbb
sbb
jge
cmp
inc
jge
pop
mov
jns
add
ud0
jmp
add
loope
jle
mov
sbb
in
push
out
add
hlt
imul
pop
lret
mov
leave
adc
sbb
insb
testb
cmpsb
sti
into
inc
icebp
or
add
sub
jae
or
push
cwtl
mov
jge
dec
or
mov
mov
es
jge
fisubs
ja
sub
add
test
mov
xchg
adc
xor
prefetch
push
aam
and
add
pop
add
jg
or
popa
inc
mov
fnstenvs
or
fwait
cmpsb
imul
push
shrl
cmc
cwtl
faddp
pop
sbb
pop
and
push
add
mov
insb
mov
pop
cld
and
add
dec
and
jo
sbb
je
dec
push
xchg
scas
fsubrs
aam
in
cmp
adc
sbb
xor
cmp
add
push
jbe
in
push
fisttpl
add
pop
xchg
dec
je
add
xchg
outsl
fldpi
jg
push
add
fdiv
mov
test
mov
mov
adc
wbinvd
dec
adc
xchg
loopne
ss
out
aaa
sbb
pop
push
iret
mov
sbb
jb
dec
div
sbb
sbb
jnp
and
clc
in
repnz
push
jmp
sub
je
pop
je
jmp
dec
loopne
mov
jne
mov
fistps
inc
bound
sub
pop
repnz
mov
addr16
rcll
adc
add
xchg
daa
xor
inc
ljmp
loope
sbb
fcmovnu
sub
or
or
add
std
sub
xchg
mov
add
fiadds
mov
mov
call
inc
sub
add
and
add
in
inc
sub
and
ljmp
cmp
sbb
pusha
sub
jbe
inc
pushf
cmp
add
fdivs
cmp
loop
dec
sbb
je
xchg
insb
inc
add
xchg
cmp
mov
mov
loop
add
jp
repz
and
in
addr16
das
or
call
or
pop
lret
add
sti
testb
adc
mov
dec
and
jbe
push
aaa
xchg
add
push
or
lds
sub
cmp
pop
or
fcomps
mov
rcll
pop
sub
test
fsts
fldenv
push
sub
adc
mov
lods
sbb
cld
clc
and
adc
mov
and
arpl
dec
add
dec
das
push
dec
icebp
push
add
out
mov
pop
pushf
shrl
push
mov
sub
cltd
jp
mov
sbb
jne
mov
lods
mov
adc
add
add
and
pop
loopne
sbb
out
xor
cmp
push
jmp
je
mov
test
clc
cmp
aaa
add
inc
daa
std
mov
add
inc
das
aam
push
insl
orb
ljmp
add
pop
pop
adc
inc
mov
add
add
sub
jae
shll
pop
test
jle
ret
stc
sub
mov
mov
aam
mov
inc
mov
divl
dec
ljmp
fstps
nop
inc
inc
loope
cmpsb
sbb
call
jmp
repz
test
sub
mov
add
rolb
sbb
ret
xchg
and
rcrl
add
mov
cmpsb
pusha
pop
inc
fcmovnbe
cmp
in
lock
mov
xchg
fstps
aad
jl
push
sar
jg
inc
push
cmp
jne
xchg
subb
dec
pop
adc
mov
adc
sub
je
dec
std
pop
sub
fisubrs
sub
je
jmp
mov
jmp
or
add
sub
cmp
push
inc
testl
push
fcoms
jl
push
xor
mov
xor
xchg
mov
add
test
xchg
fistl
sbbb
roll
mov
add
in
add
sub
lea
pop
add
sbb
xchg
push
xor
or
sbb
mov
or
das
fmuls
aaa
adc
cmp
jg
mov
pop
cltd
xor
sub
add
mov
aas
cli
out
add
fs
sarl
push
push
ds
push
jne
testl
cwtl
add
xor
ret
ret
push
fadds
add
loopne
mov
loop
mov
pop
and
push
outsb
push
sub
add
add
sbb
notl
adc
jne
shrl
subl
inc
jae
and
js
and
pop
les
mov
jo
iret
adc
test
jbe
int3
mov
pop
lock
push
cmp
lock
test
sub
add
movzbl
sbb
mov
cmp
nop
or
rolb
in
jo
shr
fnstenv
jb
push
sbb
cmp
jge
mov
in
in
lock
call
or
xchg
lock
out
sbb
stos
pop
loope
fdivl
clc
jmp
out
add
in
push
add
push
pop
xchg
inc
jmp
shrb
pop
sbb
jge
cmp
jle
adc
fs
cmp
repnz
fcoms
adcl
mov
xchg
or
mov
andb
mov
pushf
and
mov
push
adc
test
or
fs
add
jne
popa
leave
mov
push
xchg
xor
and
xor
sub
mov
push
sub
sbb
xchg
cmp
fsubs
cli
sarb
push
jae
jo
jle
push
lods
sahf
mov
add
pop
inc
mov
jecxz
lods
and
fbld
xchg
fidivl
xor
adc
aad
imul
iret
notl
dec
out
mov
add
lods
test
mov
dec
leave
xlat
pop
pop
mov
push
call
pushf
add
adc
inc
lds
mov
adc
dec
add
or
ficoms
in
push
testl
daa
add
inc
push
cmp
xlat
add
mov
cmp
test
ret
sbb
clc
add
fadds
inc
in
pop
or
ds
scas
jns
jne
or
push
pop
mov
cmpsb
add
lcall
test
push
lods
adc
inc
sub
pushf
xor
lds
mov
add
loopne
ret
cmpsl
sahf
inc
mov
fmulp
mov
insb
je
nop
call
and
pushf
sbb
or
cli
xchg
je
andl
adc
iret
add
aam
andb
add
add
dec
jge
or
sub
jno
add
inc
loop
outsl
pop
xchg
sub
add
sbb
ja
cmc
jb
paddusb
fwait
jmp
or
mov
xor
ffree
and
jb
orb
add
insl
and
push
sub
incb
dec
push
call
pop
pmaxub
pop
stc
xchg
sub
jb
add
je
enter
mov
xchg
jp
cmp
mov
pop
or
dec
les
adc
faddl
or
ror
dec
mov
repnz
enter
icebp
bound
in
push
shlb
adc
lcall
sbb
arpl
insb
mov
push
cli
adc
leave
push
mov
or
call
lret
mov
push
add
les
jmp
lea
sub
adc
mov
pop
add
push
mov
xor
out
and
gs
sbb
add
xchg
daa
cmp
lock
sti
pop
movsl
mov
add
or
insl
out
mov
sbb
decb
in
lods
cmp
es
add
jo
or
call
and
jb
or
adc
test
pop
mov
lret
bound
jno
sbb
fiadds
push
ds
je
dec
cmp
sub
add
fldt
clc
or
mov
imul
jns
sub
fwait
dec
sub
add
cmpsb
jmp
adc
jl
movsb
das
cmp
mov
push
pop
sub
fwait
pop
inc
mov
cwtl
sub
pop
jbe
or
shlb
mov
adc
push
insl
mov
jl
cs
adcl
js
popa
cmp
and
mov
cmpsb
sbb
sbb
push
sub
inc
fld
aad
lret
xor
mov
pop
fldenv
xor
mov
xchg
xor
clc
ret
dec
hlt
jb
adc
cmp
fbstp
jmp
gs
out
ficompl
ljmp
je
sub
je
fmuls
push
pusha
lods
push
jb
dec
insl
ja
inc
jle
ret
pop
mov
movsb
pop
sub
inc
dec
mov
sbb
lock
and
mov
push
add
inc
xlat
std
ds
lea
dec
int
in
or
adc
xor
xchg
sub
rolb
push
push
rclb
mov
pusha
push
pmulhuw
xor
pop
je
jne
sbb
jmp
jb
or
dec
push
mov
popf
lods
movsb
push
inc
call
and
lret
dec
sbb
mov
mov
add
jmp
icebp
rol
adc
sub
cmpsl
fcmovnu
sub
push
std
arpl
cld
mov
mov
iret
or
jne
cmp
retw
sti
push
mov
in
adc
and
test
mov
test
aad
jae
fisubrs
cmp
mov
imul
inc
psllq
lcall
aas
add
add
je
push
xchg
das
push
sub
adc
sub
out
adc
mov
int
out
subl
test
cmp
cld
jo
inc
add
scas
rol
daa
dec
test
mov
aad
push
addr16
mov
cld
movb
mov
mov
and
mov
fiadds
les
aad
ja,pt
jl
inc
lea
sub
data16
mov
mov
add
lods
dec
xor
mov
mov
cmp
inc
mov
add
jmp
cmp
dec
pop
mov
fistl
or
hlt
jg
sub
mov
testl
sbb
sub
cmp
dec
push
or
loop
ficoms
adc
rolb
out
add
adc
js
out
inc
add
or
inc
inc
roll
xchg
push
repz
pop
roll
out
jns
inc
sbb
dec
or
and
bound
adc
or
mov
jge
mov
push
add
idivl
mov
sbb
aam
push
lret
xor
sub
pop
add
int
cmpb
mov
mov
in
inc
push
or
rcrb
push
arpl
hlt
nop
push
pusha
jae
repz
rcrl
lods
js
clc
pop
push
jg
cmp
in
loop
fucom
adc
mov
mov
jmp
mov
xor
in
push
in
push
cld
and
push
xchg
inc
push
mov
or
insb
mov
sbb
and
adcb
dec
test
add
dec
and
jb
rcrl
adc
jmp
pop
sbb
xor
push
es
add
mov
imul
xchg
add
ret
jno
loopne
inc
mov
lods
cld
ss
je
stos
mov
rol
push
xchg
cs
mov
pop
pop
mov
mov
push
xor
hlt
clc
mov
inc
sub
xchg
cmp
loopne
fsubl
jae
fimuls
loopne
and
or
or
mov
mov
mov
dec
iret
aam
shll
addr16
add
xchg
adcb
aaa
jns
arpl
cmp
sbb
add
xor
enter
cmp
je
jmp
xor
inc
enter
xor
lret
testb
and
ret
mov
add
sub
or
or
push
lret
mov
push
push
cmp
xor
xchg
les
push
cmpsl
nop
fwait
or
mov
mov
mov
cmpsb
jle
cld
cmpl
and
ss
xchg
cmpb
sbb
in
jae
lods
aaa
insl
inc
xor
lcall
mov
xor
in
rolb
xor
pusha
sbbl
lea
nop
push
nop
add
or
mov
xchg
int
or
bswap
int3
mov
rclb
arpl
sbb
mov
sbb
leave
mov
adc
jmp
xchg
xchg
ds
enter
pop
pushf
mov
movsb
test
add
in
nop
or
push
push
cmp
cmpsb
nop
popa
sub
and
test
aad
orb
sub
mov
loop
dec
ret
rolb
push
dec
outsl
xchg
or
and
in
cmp
xchg
pop
pop
or
xchg
inc
push
sti
push
popa
hlt
add
mov
test
leave
sub
pusha
push
sahf
xchg
inc
loope
cmp
in
cmpsb
lock
inc
ret
enter
test
stos
push
pop
mov
daa
js
mov
jae
xchg
cmp
sbb
imul
cmp
cmpsb
sub
adc
rep
stc
and
and
mov
jae
pop
int3
adc
mov
daa
jb
mov
std
movb
or
aam
subl
sbb
xchg
sbb
mov
sbb
negb
lahf
adc
and
popa
xchg
int3
pop
push
sbb
xchg
add
dec
xor
mov
lods
xchg
or
mov
mov
mov
mov
add
cmpsb
sbb
adc
or
out
mov
test
mov
inc
mov
adc
insl
dec
mov
mov
bound
inc
pop
xchg
fndisi(8087
pop
inc
adc
ret
nop
dec
jns
inc
mov
dec
xchg
in
negb
mov
idivb
or
sbb
aaa
js
std
iret
sub
and
mov
leave
incb
add
add
inc
sbb
inc
add
cmp
stos
adc
push
add
cwtl
adc
addb
pop
adc
insb
xor
sbb
dec
aam
push
lret
sbb
jmp
cmc
rcll
xor
loopne
fcoml
aas
pop
jg
testb
pop
mov
mov
shlb
enter
jmp
and
pop
rorl
cmp
inc
and
mov
jnp
pushf
xchg
test
in
pcmpgtw
and
inc
push
cmp
inc
imul
jge
cmp
jl
add
and
sbb
fisubl
xor
cvtdq2ps
push
jge
clc
xchg
sbb
mov
inc
cmp
push
jl
cld
sar
mov
test
lds
setle
xchg
pop
jmp
incl
and
push
xor
ret
mov
jmp
repz
ret
push
lahf
and
pop
subl
nop
cmp
jns
xchg
adc
imul
jo
daa
insb
sub
pop
push
data16
arpl
lcall
pusha
push
xor
roll
dec
push
and
pop
adc
add
imul
and
lods
dec
into
or
xor
mov
aad
pusha
mov
pusha
lds
add
jbe
aam
ljmp
subb
jge
and
lahf
jl
je
cmpb
add
xorl
arpl
and
mov
push
mov
jo
mov
int3
add
push
push
outsl
mov
clc
adc
sbb
inc
inc
inc
ret
std
test
sbb
sub
mov
sarb
cli
jbe
lock
xlat
inc
fnsave
fmuls
pop
mov
push
push
xchg
adc
inc
pop
popa
xchg
ljmp
imul
js
mov
xlat
movsl
pop
test
xchg
scas
xor
fldl
and
jne
aas
mov
andb
add
push
push
pop
icebp
push
movsl
lods
scas
inc
aaa
dec
pop
movsb
xchg
aaa
pop
sub
jb
inc
mov
inc
xor
decb
lret
jne
adc
mov
lea
or
pop
jne
push
in
iret
in
mov
and
out
sbb
movl
add
xchg
or
or
data16
mov
mov
rol
or
scas
cmpsl
mov
mov
sbbw
pop
jnp
lods
push
movb
punpckhdq
xchg
fucomp
loop
call
sub
ret
or
loope
pop
or
pop
popf
sbb
bound
xchg
or
or
jne
push
add
mov
or
add
cmp
mov
js
shlb
ficompl
test
cmp
and
lock
xchg
mov
dec
mov
pusha
and
mov
cmp
call
push
call
nop
cmp
shlb
push
pop
dec
and
xor
in
in
or
fisttps
ss
mov
sbb
fcompl
jns,pn
ljmp
sub
pop
pop
push
in
aam
fdivrs
adc
adc
and
sarb
push
sub
sarb
xchg
int3
and
insb
xor
mov
sbb
pusha
or
and
cmp
push
mov
push
les
orl
add
enter
rorb
cmp
nop
fwait
jnp
sub
sysret
hlt
cmp
stos
mov
sbb
nop
inc
push
lods
and
int3
adc
or
into
push
and
femms
mov
mov
add
ja
nop
loop
fs
push
push
insl
add
fs
gs
mov
jg
popa
insl
or
in
or
dec
push
xor
add
and
xchg
push
fbstp
cmp
frstor
cmp
inc
cmpsl
outsl
mov
push
outsb
imul
popa
jns
popa
adc
ja
test
das
push
or
fs
gs
outsb
inc
in
shll
mov
push
hlt
push
xor
ror
mov
add
or
dec
cmc
sub
cli
push
test
imul
pop
adc
insl
stos
mov
or
sbb
add
cmp
jne
or
inc
jb
add
mov
ds
inc
lds
mov
cmpl
jae
jg
or
lea
adc
cmpl
mov
aam
lds
sahf
xor
testb
jb
arpl
test
jle
add
out
add
mov
insb
pop
shr
or
and
insl
sub
sbb
data16
int
scas
pop
rolb
cs
pop
dec
add
mov
mov
and
enter
sub
pop
enter
sbb
xchg
fcmovne
mov
add
or
bound
xchg
lea
imul
out
xor
outsb
sar
add
and
push
into
shlb
cmp
jno
dec
jbe
adc
add
mov
or
adc
bound
and
adc
and
sbb
pop
mov
inc
mov
add
in
in
adc
add
mov
xchg
addb
cmp
mov
cld
cltd
push
or
leave
pop
test
inc
adcl
or
mov
movaps
ret
xchg
jecxz
int3
cmp
std
push
xchg
mov
int3
ret
xor
sbb
call
scas
xor
adc
mov
lods
jge
add
jno
adc
dec
or
daa
inc
imul
add
jo
inc
js
inc
rorl
xchg
lock
in
add
mov
dec
ret
xchg
ret
sbb
rclb
or
adc
push
mov
or
add
inc
int3
or
cmp
rcrb
adc
aad
and
cmp
enter
mov
dec
jle
or
jo
jo
fildll
mov
xor
jo
adc
das
jae
in
adc
sub
movsl
sub
shr
int
xchg
insb
xchg
inc
dec
push
push
xchg
adc
fdivs
sub
mov
nop
mov
movl
jg
xor
lea
imulb
rorl
jl
mov
icebp
push
add
outsl
repz
mov
xor
mov
mov
dec
inc
xchg
cmp
or
mov
or
mov
fnop
inc
mov
mov
test
mov
flds
jmp
je
adc
mov
unpcklps
sbb
fwait
imul
fimull
adc
jae
test
cmpsl
jo
xchg
xchg
pop
mov
and
inc
sbb
or
mov
inc
cmp
cmpsl
movb
in
fmuls
or
cmp
dec
push
sbb
pop
unpcklps
pop
push
dec
imul
add
arpl
clc
cmp
mov
cmpsl
sbbb
inc
sub
pop
inc
loopne
stos
xchg
ret
inc
divl
or
or
sbb
mov
mov
inc
jle
push
mov
sbb
xorl
or
jge
sub
cmp
xchg
xor
ja
insb
xchg
push
out
xchg
dec
sbb
push
stos
in
cmpl
and
inc
data16
pop
inc
push
cmp
test
cmpsb
sbb
addr16
sahf
movsb
fistl
fadds
inc
or
add
inc
and
inc
movsl
jne
ret
fstpt
push
jmp
inc
icebp
pop
lret
sbbb
adc
add
int
mov
insl
dec
or
dec
jbe
outsb
cmp
aam
enter
mov
fmuls
fldpi
sbb
and
pop
sbb
dec
lea
daa
xor
jecxz
pop
les
sbb
pop
icebp
je
enter
movups
adc
inc
adc
mov
push
pop
enter
mov
pop
pusha
mov
shll
sar
test
push
mov
xor
cwtl
push
nop
test
shll
xor
xor
push
pop
shll
dec
pop
lods
xor
jl
pop
pop
xor
xor
sub
inc
and
dec
pop
shll
adc
int3
or
test
fucomi
xor
cmp
mov
xlat
mov
cmp
inc
inc
jmp
adc
sti
dec
xor
fmull
lods
cmp
int
out
in
cmp
cwtl
cmp
fcomps
cmp
cmp
mov
inc
lcall
cmp
xor
mov
dec
xorl
cmp
pushf
lods
les
test
cmp
jae
adc
leave
out
cld
cmp
iret
xchg
cmp
or
or
pop
mov
cmp
or
sbb
nop
cmp
sbb
int
out
sub
pushf
cmp
into
sahf
xchg
cmp
and
cmp
pushf
pusha
test
mov
jae
cmpb
xor
daa
fwait
xchg
int
cwtl
cmp
sub
rcrb
shlb
add
cltd
fadd
sbb
pop
fs
jb
mov
mov
pop
cs
movsb
mov
fcmovnu
xchg
aaa
mov
mov
xlat
or
and
dec
xor
sbb
lea
leave
and
mov
and
in
mov
cmp
mov
movsb
ret
pop
rorb
cli
xor
add
mov
rorb
leave
dec
adc
mov
push
add
ret
dec
jb
cmp
mov
push
push
nop
and
push
les
jecxz
push
sbb
test
sub
stos
pcmpeqw
mov
add
sub
out
sbb
and
mov
and
pop
adc
pop
ret
es
or
fistl
mov
fs
add
mov
jl
mov
or
mov
rcrl
mov
cld
pop
push
inc
pop
and
inc
push
sub
daa
outsb
in
inc
dec
test
xchg
shlb
or
movq
add
in
mov
and
jb
and
cmpb
cmc
sbb
mov
add
clc
sub
push
xchg
jmp
sbb
add
pop
rcll
add
sbb
int
std
iret
outsb
cwtl
xchg
cmp
and
fs
cmp
icebp
pop
roll
lret
dec
jb
daa
jle
cmp
and
out
jno
jecxz
cmp
add
ret
mov
or
dec
inc
lea
and
iret
jne
mov
adc
ret
mov
and
fs
inc
sbb
rcrl
test
push
hlt
add
insl
add
jne
sbb
lahf
cmpsl
push
push
jg
shl
mov
mov
pop
mov
pop
dec
adc
in
dec
shrb
cs
shlb
mov
xor
in
dec
cs
cmp
dec
cs
xchg
mov
dec
leave
xor
or
jb
xor
pop
sbb
leave
xor
sub
mov
cmp
pop
rcrb
pusha
or
pop
mov
js
push
bnd
push
inc
jo,pn
cwtl
je
add
pop
add
loopne
je
aad
out
or
push
lods
cmp
in
pop
adc
add
outsl
je
fs
jne
dec
jne
inc
imul
imul
xchg
dec
dec
jb
pop
outsl
jb
insl
jo
jl
aas
xor
jb
insl
push
je
rsqrtps
pop
enter
je
adc
ja
jle
pop
inc
outsl
outsl
insb
je
pusha
das
and
inc
jns
inc
cmovnp
inc
outsl
aaa
dec
int
inc
dec
adc
lds
orl
sti
and
jne
fistpl
fnstenv
out
lock
adc
int3
insl
mov
je
or
add
shll
add
jmp
add
jae
pusha
aam
inc
pop
cwtl
add
das
lock
jnp
enter
adc
push
inc
jne
or
pop
adc
or
add
jnp
sbb
push
addl
movl
fsubrs
and
or
push
test
adc
adc
xchg
or
adc
jns
arpl
enter
adc
arpl
inc
xchg
sbb
push
inc
jb
shlb
mov
and
or
lock
sub
sbb
gs
cwtl
arpl
sub
xor
push
adc
mov
inc
jbe
lret
lret
out
inc
jb
jl
push
push
sbb
int3
inc
add
insb
dec
push
addr16
arpl
dec
pop
xor
xchg
sbb
or
arpl
jns
lret
movsl
jo
adc
or
adc
lods
push
lret
adc
push
test
jp
and
int3
outsl
fildl
roll
adcl
sub
arpl
or
xor
pop
or
call
and
mov
stos
pop
xor
mov
dec
test
jns
pop
jb
int3
insb
hlt
jb
fs
or
or
aam
mov
mov
fcmove
adc
or
push
mov
loope
add
nop
int
dec
adc
mov
sub
stc
cmp
push
lock
or
push
scas
pop
adc
pop
xor
popl
pop
sub
fnstenv
push
mov
je
dec
je
push
or
sbb
xor
sub
loopne
sti
jbe
push
mov
sahf
mov
aaa
nop
adc
inc
cmp
enter
nop
int
mov
cmp
mov
leave
clc
das
push
hlt
mov
pop
hlt
call
pop
js
lock
leave
and
mov
in
sbb
xchg
xchg
psubsb
popa
pop
repnz
add
xchg
mov
jae
rorb
pop
xor
push
or
test
add
int3
or
sub
xchg
les
push
ror
cmpsl
shlb
xor
shlb
mov
loopne
or
xlat
inc
lea
loopne
sub
outsb
add
cmp
pop
je
in
xchg
sarl
sbb
xor
cmp
rolb
pushf
inc
leave
sarb
mov
add
roll
fwait
adcb
adcl
lahf
jo
push
push
jge
out
pop
imul
add
xor
test
and
ss
or
in
add
xchg
add
adc
fidivrl
adcb
push
dec
adc
lods
fsubr
sar
pop
pop
int3
adc
test
push
add
testb
fwait
push
mov
xor
mov
xor
out
inc
les
pand
test
pop
je
or
das
les
fldenv
into
inc
inc
jae
dec
clc
jmp
adc
fldt
inc
clc
push
lock
sub
add
xor
lea
mov
call
jb
sub
sub
mov
nop
popf
int
in
adc
pop
lods
inc
xchg
add
int3
and
push
add
seto
jnp
sbb
inc
inc
inc
or
stos
stos
movsb
adc
ss
and
push
and
scas
ror
xlat
sub
add
sub
in
out
push
or
dec
push
ss
jne
add
in
das
adc
xor
fldcw
adc
or
push
xchg
cmovo
add
add
mov
nop
push
jmp
cmc
adc
ret
stc
and
push
jmp
or
lods
push
add
in
mov
or
add
in
outsl
cmp
lea
cmpsb
cmp
push
mov
mov
inc
xchg
clc
fimull
in
fwait
add
aas
int3
jae
or
add
jecxz
or
mov
dec
es
loopne
sbb
loopne
and
lods
pop
icebp
sub
sbb
mov
or
or
or
nop
or
push
or
mov
in
loope
or
aaa
pushf
and
xchg
popl
jecxz
xor
ret
cwtl
xchg
jmp
push
in
loopne
xor
lea
inc
or
xorl
xchg
add
jg
movsb
lret
mov
decl
push
or
scas
jp
in
call
add
or
mov
pop
mov
add
mov
lret
shl
sbb
sbb
cwtl
inc
xor
stos
aaa
adc
mov
jle
and
adc
clc
orb
sarl
sub
add
push
es
dec
rep
jne
mov
add
sbb
ljmp
sub
inc
add
addb
or
lret
vsqrtps
adc
icebp
sbb
arpl
mov
enter
push
les
and
pop
adc
subl
stos
xchg
addr16
inc
in
dec
push
mov
adc
or
mov
loopne
mov
dec
je
and
inc
shlb
fists
fdivrp
fildl
push
jns
sub
js
es
pop
ss
and
hlt
pop
mov
sbb
push
add
movsb
jns
xlat
lock
mov
jp
in
cld
mov
aam
dec
repnz
xchg
push
fnsave
or
popa
adc
mov
in
loopne
lea
sbb
adc
pushf
cwtl
mov
sbb
rol
pop
cmp
ja
and
stos
cwtl
fcomps
dec
sbb
mov
repnz
inc
lret
into
cmp
gs
fnstenv
aaa
or
jb
nop
fld
xchg
cld
test
test
sbb
addb
enter
sbb
and
jb
mov
pop
push
and
jae
mov
add
mov
adc
in
and
insb
inc
jmp
dec
jo
cmp
leave
push
xchg
fsubrp
or
add
test
ja
fs
sub
push
cmp
add
outsb
mov
mov
add
pop
cld
adc
jle
imul
mov
cmpsb
xchg
mov
inc
fwait
jecxz
and
into
test
or
call
jae
aad
fcoml
daa
enter
inc
fimuls
mov
xor
pusha
sbb
sbb
bound
cltd
fcmovnu
sbb
cmp
add
jo
pop
enter
or
or
add
ret
inc
xchg
lock
cmp
ret
in
mov
mov
or
sbb
fmull
mov
test
fcomp
sbb
sbb
and
aam
mov
mov
xchg
imul
rcrb
fadds
mov
int3
sbb
cmp
mulb
lods
sbb
inc
ror
sub
or
ljmp
je
jmp
push
jb
mov
sbb
enter
sbb
les
je
outsl
inc
sahf
and
xchg
fxam
addr16
test
dec
fiadds
ret
mov
lcall
jg
xchg
out
mov
and
fnstenv
lret
add
and
insb
cmp
fsts
dec
cmp
pop
enter
sbb
flds
cmp
mov
orb
mov
mov
or
pop
mov
push
inc
ret
lods
pop
lods
push
pop
fbld
mov
test
mov
or
cmp
movsb
ljmp
mov
or
mov
sbb
sbb
add
cmp
jmp
rclb
dec
push
jmp
pop
xchg
dec
nop
nop
and
es
pushf
cs
ret
cmpsb
adc
orb
mov
mov
push
es
gs
add
mov
jb
jns
lock
fbstp
sbb
or
push
in
in
sbb
bound
jl
cltd
sbb
xor
les
fists
enter
jb
fnstsw
push
sbb
nop
in
enter
loopne
adc
repnz
loopne
mov
fs
push
sub
out
xor
in
loopne
loopne
cmp
nop
in
loopne
and
xchg
and
daa
add
dec
push
adc
sub
loope
add
test
ss
imul
push
jecxz
nop
scas
pop
daa
push
paddw
mov
lcall
loopne
push
enter
cmp
in
rorb
daa
xchg
les
insb
test
push
and
and
push
and
mov
dec
push
cmp
sbb
sub
sbb
add
lods
in
in
nop
leave
sahf
sbb
jecxz
mov
sub
sub
sbb
inc
mov
sub
sbb
dec
adc
aam
fldt
dec
bound
cmp
sub
cwtl
into
in
mov
cmp
fstps
enter
or
cmpb
pop
ss
mov
add
jecxz
or
fwait
cmpsb
push
jb
in
mov
leave
adc
repnz
adc
les
rclb
nop
or
and
insb
mov
push
andl
mov
pop
adc
popa
mov
xor
aaa
mov
xor
xor
cwtl
lods
adc
test
test
test
pop
movsb
adc
cs
xor
mov
pushf
cmp
sub
sbb
ror
xchg
pop
mov
xchg
dec
xchg
adc
test
add
fs
mov
lret
ljmp
fistl
enter
jb
in
inc
add
int3
push
adc
sbb
cmc
add
mov
outsl
clc
rorl
jo
jns
ror
mov
mov
invd
push
jl
ret
sbb
sbb
pop
into
fmuls
jb
push
mov
add
inc
outsl
jne
or
inc
fldt
or
andb
mov
dec
xor
xor
adc
gs
outsb
push
fs
sub
mov
cmove
imul
cmpsl
and
inc
out
pop
pop
repnz
fsubs
and
push
outsl
jb
testl
inc
ss
adc
mov
xorl
ret
fs
lret
sti
mov
aaa
movsb
call
push
adc
xchg
add
xchg
sti
repz
loopne
pop
roll
jmp
lea
and
sarb
lea
setne
jl
sbb
jle
out
leave
add
xor
pop
push
pop
lea
jl
aas
testb
adc
pusha
test
nop
outsl
repnz
addl
or
jmp
int3
shr
inc
pop
in
add
in
mov
outsb
jns
ret
repnz
cmp
shll
aaa
pop
sub
or
xor
inc
jo
add
jmp
xor
mov
xchg
adc
inc
push
fcom
xor
mov
nop
sbb
adc
jmp
push
arpl
cltd
inc
pusha
clc
fstpt
mov
cmp
sti
mov
repz
dec
addr16
dec
and
out
shrb
or
push
popa
add
mov
mov
ret
mov
push
loop
pop
pop
cltd
xlat
sbb
pop
loop
shll
popf
xchg
arpl
cmpb
cmp
je
jl
push
out
out
adc
push
lods
inc
sbb
mov
loop
or
or
test
scas
aas
jnp
xor
mov
xchg
lea
add
sub
add
inc
xor
aam
push
sbb
mov
call
jge
test
int3
inc
mov
in
inc
inc
mov
push
sti
aaa
jle
mov
xchg
dec
inc
add
add
loop
orl
cmp
inc
dec
inc
jns
jmp
inc
int
mov
inc
inc
xchg
jp
adc
or
and
sbb
inc
pop
ljmp
cmp
nop
push
loopne
insb
movsl
add
or
or
orl
adc
cwtl
xor
shrl
or
and
pop
or
lahf
lock
jns
es
push
ljmp
ljmp
scas
and
jle
in
or
ja
cmp
mov
pushf
pusha
outsl
inc
xchg
cmp
loopne
fsubs
and
call
pop
push
in
jne
cmp
lret
fs
in
les
shll
dec
adc
in
pushf
jne
mov
pop
test
mov
mov
push
dec
cs
outsb
mov
jns
adc
in
orl
stos
pop
stos
lods
lods
add
add
push
push
adc
cs
add
pop
ret
mov
mov
pop
cmp
test
nop
sbb
inc
dec
and
sbbl
inc
shlb
je
rorl
cltd
lret
in
push
and
adc
sbb
or
add
arpl
add
or
and
pop
negb
pop
xor
push
pop
aaa
pusha
pop
pop
or
add
mov
testb
add
lods
or
leave
call
fcoml
iret
pushf
notl
jae
sahf
loop
in
jae
arpl
adc
pop
inc
insb
popa
jae
jae
push
dec
push
out
fwait
adc
mov
or
inc
pop
leave
test
lods
jne
dec
and
and
fisttpl
nop
lock
push
or
and
shlb
in
mov
sbb
gs
ds
stos
mov
ret
xchg
sub
sub
mov
aad
jge
pop
jecxz
and
test
dec
or
push
dec
mov
aad
lret
fmuls
or
stos
jp
pop
xor
adc
cmp
push
inc
push
cmp
inc
adc
pusha
nop
xchg
mov
jno
fdivs
in
mov
inc
and
jle
popa
sbb
cs
jmp
enter
or
inc
inc
ret
cmp
daa
mov
and
or
sbb
adc
lock
ss
cmp
arpl
sbb
lock
cltd
dec
sbb
or
loope
loopne
cld
loope
loope
jp
movb
nop
pop
popa
inc
ret
dec
sbb
sub
sub
fninit
inc
std
push
mov
adc
jae
xchg
inc
xor
adc
outsb
test
fwait
rcll
lahf
lds
cmp
add
ret
or
xor
dec
and
adc
xor
rorl
lock
fwait
cmp
repz
add
ret
or
js
shl
loop
push
repz
test
xchg
sbb
jae
push
dec
out
pop
or
loope
xchg
lret
xor
inc
add
and
or
adc
push
shll
mov
inc
or
push
insl
ret
mov
sti
out
pusha
daa
sub
pop
ljmp
dec
or
mov
pop
pop
adc
add
sub
adc
decl
pop
jb
fsubl
pop
sbb
add
mov
add
xchg
and
jnp
add
test
inc
sbb
push
lcall
push
jle
test
adc
ret
out
push
shlb
into
mov
hlt
ret
push
mov
push
lock
rcrl
popf
jecxz
cmp
mov
enter
adc
movsb
repz
xor
mov
cli
inc
cmpsb
mov
sub
lret
add
sar
jmp
adc
sub
test
adc
dec
adc
add
mov
dec
add
xchg
push
out
push
or
pop
jle
movsb
cmp
sbb
lea
jo
xor
xchg
add
inc
cltd
cmp
ds
jle
xchg
fmuls
lret
sbb
roll
push
and
jmp
pop
sarl
sub
jg
dec
repz
xor
dec
inc
jne
pop
mov
dec
scas
nop
add
lea
xchg
pop
or
pushl
xor
pop
mov
hlt
mov
dec
pop
out
lcall
sbb
jae
adc
xlat
dec
sub
or
sarb
arpl
pop
push
int3
adc
dec
add
call
add
test
adc
adc
lret
in
add
in
pop
jbe
and
sbb
loopne
fmuls
adc
imull
in
loop
lock
mov
add
sbbb
sub
sbb
xchg
fs
leave
ret
sbbb
fldcw
outsb
imul
enter
cld
push
fdivr
xor
mov
xlat
add
adc
bound
sbb
mov
add
mov
mov
sti
and
mov
inc
dec
clc
aaa
cmp
pop
leave
lret
push
xor
test
and
lret
jmp
and
xor
in
call
adc
mov
jmp
loopne
dec
mov
inc
xchg
lcall
faddl
and
xor
mov
pusha
sub
dec
cs
mov
add
in
gs
sti
cmpsb
je
mov
jb
sub
xchg
jp
sti
hlt
outsb
and
push
inc
and
mov
loopne
cwtl
les
insb
push
xchg
xor
jl
or
bound
xlat
or
test
cli
fwait
mov
inc
xor
mov
scas
xchg
out
pop
inc
dec
jne
lods
sub
int3
mov
adc
in
inc
inc
loop
jae
push
loop
enter
subb
outsb
mov
jmp
pop
xor
dec
mov
shrl
subb
js
adc
jae
adc
cmp
inc
pop
mov
push
imul
mov
aam
pop
sbb
bnd
hlt
adc
shrb
cmp
ss
push
adc
add
mov
sub
aaa
pop
jne
add
ret
jmp
incl
repz
pop
dec
push
mov
sub
mov
in
jae
push
sub
push
pop
sub
and
ss
outsb
jo
mov
pop
jmp
xorl
push
in
loope
orb
hlt
inc
fmuls
fwait
dec
mov
clc
mov
sbb
add
jae
or
inc
pop
shl
bound
in
mov
or
lods
jecxz
dec
sub
add
pop
ds
and
lcall
gs
adc
es
jbe
cmp
repnz
sbb
adc
nopl
std
in
inc
or
push
cmp
xchg
adc
inc
inc
lods
ret
test
mov
les
inc
gs
aam
mov
pop
lea
push
jl
out
add
ret
add
add
and
adc
loop
mov
mov
test
lcall
scas
pushl
mov
add
mov
cmp
mov
push
dec
push
ja
es
pop
inc
mov
arpl
bound
inc
add
mov
push
dec
or
fsubrs
mov
mov
leave
mov
or
stos
dec
test
xor
inc
decl
jne
xchg
inc
rclb
xchg
dec
sahf
fs
test
mov
addl
mov
rorl
pushf
incb
xlat
sbb
stos
js
and
push
xor
aas
clc
mov
call
pop
adc
adc
push
xchg
pop
and
cmp
xor
sbb
loope
xor
fcomps
sbbl
mov
aad
or
lcall
int3
inc
dec
clc
lcall
xor
dec
push
jo
das
lock
je
pop
pop
add
shl
sub
dec
bound
mov
or
nop
dec
jne
mov
clc
shll
shl
jecxz
shl
push
jecxz
or
lods
incl
xor
xchg
pushf
lea
dec
push
lock
push
inc
test
test
mov
xchg
pop
pop
jae
gs
add
jge
iret
flds
xor
xor
nop
push
xor
adc
les
mov
rcrl
flds
in
sbb
adc
push
mov
mov
and
and
dec
jae
push
or
add
sbb
adc
push
rorb
das
sbb
and
xchg
out
sub
and
and
mov
sub
jae
push
jb
xor
pop
dec
cmp
cmp
or
dec
or
dec
mov
dec
push
xchg
xor
jge
mov
das
push
pusha
mov
mov
pusha
ja
nop
mov
xchg
jo
aaa
mov
pop
sbb
or
fs
fs
fs
orb
and
inc
and
xchg
jo
adc
and
jle
inc
outsl
or
jl
shl
nop
in
dec
mov
mov
clc
mov
repz
xchg
mov
sbb
daa
hlt
push
js
sbbb
xor
call
in
in
and
push
push
jns
loopne
mov
jb
mov
fcomp
fdivrl
xchg
faddl
adc
mov
sbbl
int3
nop
or
int3
loopne
jns
fs
mov
repnz
mov
and
mov
push
cmp
inc
push
mov
cs
xchg
test
mov
gs
inc
mov
fs
or
jns,pn
cwtl
pushf
mov
sbb
dec
nop
nop
xchg
mov
dec
xchg
aad
cmp
xchg
sub
and
or
and
addb
cmpsb
test
popa
in
cmp
or
jo
dec
jbe
hlt
push
mov
nop
xchg
wbinvd
cltd
test
inc
cmpb
aaa
adc
or
in
setb
clc
jg
in
fwait
mov
fisttpl
mov
or
fwait
sar
mul
mov
stos
adc
mov
loop
dec
jb
idivb
or
adc
fsts
das
loopne
push
sub
fnstcw
enter
pop
sub
mov
aas
scas
adc
mov
std
xchg
cmpsl
push
dec
lcall
enter
push
insl
xchg
imul
out
ljmp
in
ds
div
fwait
mov
xlat
mov
inc
lret
stos
sbb
mov
js
popl
test
push
cmp
pop
mov
sbb
stc
cmc
mov
push
int3
add
jg
inc
enter
mov
cld
or
ret
popf
lods
inc
jge
add
out
sbb
in
mov
jecxz
test
push
gs
imul
arpl
lea
test
add
ret
shr
add
pusha
aas
pusha
dec
inc
cmpsb
flds
gs
fmuls
loope
xor
in
adc
adc
ljmp
or
add
xor
mov
and
and
pushf
add
mov
push
mov
add
filds
ja
movl
pusha
push
fs
aaa
dec
ja
mov
test
pop
push
pushf
or
enter
xor
dec
movsl
sbb
inc
cltd
xchg
mov
fldenv
sub
inc
cmp
jl
inc
jne
loopne
xor
loopne
cmp
mov
aas
je
mov
push
inc
xchg
add
shlb
pushf
and
hlt
push
insb
add
scas
in
and
add
stc
sbb
add
push
es
and
inc
lea
mov
push
add
mov
hlt
lret
or
dec
je
loope
in
sti
mov
and
sub
or
xchg
sub
std
inc
inc
decl
jne
pop
and
push
sub
sub
test
andb
add
pusha
cmp
clc
pop
add
stos
fistps
push
xor
lret
mov
pop
cmp
or
mov
dec
push
pop
fbstp
sarb
inc
xchg
cltd
fbld
stos
pop
push
aad
pop
push
mov
ret
bound
test
pusha
repz
dec
pop
add
and
add
mov
jns
in
cmp
inc
xchg
out
sahf
add
push
in
nop
lods
dec
enter
add
push
call
pop
clc
pop
or
iret
cmpl
sbb
jae
push
pop
repnz
jo
sub
je
loope
pop
jo
mov
sub
addb
mov
sbbl
push
push
in
cmpl
adc
pop
mov
inc
imul
cmovle
je
sbb
cltd
sbbb
xchg
pusha
movsb
out
or
ss
cmpb
mov
leave
dec
sub
push
stos
bound
cmp
cvtdq2ps
adc
pop
push
push
jb
es
mov
ss
push
sahf
cmp
inc
leave
add
nop
pop
push
push
add
dec
sub
andb
lods
jno
cwtl
fdivr
rcll
movsl
lods
cmpsl
push
push
inc
bound
adcb
adcl
fcmovne
out
inc
add
enter
mov
and
into
enter
lods
xorl
mov
fiadds
int
aam
jae
or
hlt
xorl
inc
inc
rcl
push
mov
inc
das
enter
and
clc
add
int3
mov
leave
fmul
adc
pop
mov
int
xchg
mov
pop
pop
add
fimuls
ss
je
pop
mov
fld
dec
sarb
scas
mov
movsb
sbb
sbb
mov
cltd
test
lea
shll
je
cmp
fistpl
push
or
mov
ret
sbb
dec
testl
hlt
int
loope
dec
or
mov
repnz
adc
inc
hlt
insb
inc
mov
pop
clc
mov
xchg
push
aad
xchg
clc
add
nop
dec
clc
cwtl
adc
cmpsb
outsl
lods
and
bound
adc
adc
sbb
rcrb
cmp
push
fs
adc
out
popa
lret
push
jns
imul
jbe
repnz
xor
inc
fstpt
xor
dec
in
dec
jne
jecxz
inc
add
loop
pop
mov
outsl
out
ret
inc
add
sbb
jns
enter
add
ret
incl
pop
dec
outsb
jae
leave
fsubs
or
jne
iret
gs
pop
jne
gs
adcb
sbb
outsb
inc
sub
push
push
inc
push
daa
in
xchg
sbb
mov
and
push
loop
int
ja
js
jbe
cmpsb
sbb
sub
adc
arpl
pop
xchg
adc
adc
dec
neg
test
inc
mov
out
pushf
push
dec
test
inc
ja
jp
popa
jb
jg
aaa
inc
fdivs
sub
sarb
add
les
insb
adc
inc
add
push
and
inc
add
popa
subl
jb
add
add
pop
mov
adc
adc
enter
popa
jo
pop
insb
outsl
cmp
repz
ja
stc
lahf
mov
mov
outsb
imul
ret
add
pop
popf
inc
mov
in
mov
lods
std
push
bound
inc
pop
pop
pop
stos
test
mov
pusha
aam
std
aas
pop
or
xor
pop
pop
mov
fwait
push
push
cmpsl
push
inc
jae
sbb
imul
xchg
in
lcall
xchg
notl
and
clc
pop
inc
sets
or
lods
pop
pop
mov
mov
pop
test
inc
mov
fcomp
pop
mov
in
clc
inc
cli
add
rcr
pusha
lahf
add
hlt
sub
cmpl
mov
fadds
add
sub
inc
add
dec
test
and
rcrl
data16
or
add
add
sbb
sbb
jae
inc
in
call
mov
dec
jae
stc
or
imul
adc
push
xor
sbb
pop
mov
adc
mov
and
imul
jnp
mov
mov
cmpb
inc
in
mov
outsb
ja
fisubl
movsl
or
inc
insl
jbe
xor
movsl
xchg
sub
ljmp
sahf
aad
cmp
js
fwait
js
cmc
rorl
mov
sbb
in
jb
jns
out
mov
jo
shlb
int3
or
add
lret
mov
sbb
leave
ja
ja
out
test
js
sbb
xchg
out
out
fldcw
loopne
sbb
cmp
in
xor
sbb
mov
jb
ret
mov
and
popa
call
mov
xor
inc
fnstcw
fsubrl
inc
xchg
arpl
dec
add
xor
or
out
dec
iret
mov
addr16
mov
rcll
int3
and
daa
xor
repnz
mov
jb
dec
adc
inc
mov
inc
push
mov
cmp
in
fidivrs
jo
fsubrl
aaa
ds
in
mov
and
outsb
push
pop
mov
je
push
jb
mov
decl
or
or
outsl
or
jne
mov
pop
lock
nop
add
add
addr16
mov
xchg
iret
enter
lock
cmp
daa
lahf
push
add
jl
sbb
imul
and
rcr
inc
or
mov
cmc
cmp
mov
repz
sbb
ds
in
ljmp
mov
fsubrs
inc
adc
outsb
mov
jne
push
push
xlat
cmp
or
aaa
sbb
and
cmp
add
std
lea
call
mov
and
mov
mov
in
or
push
sahf
inc
ds
push
bound
ss
lea
into
xchg
sub
mov
std
xlat
or
jg
push
or
leave
mov
adc
pop
xlat
in
sbb
adc
mov
and
mov
lcall
lcall
fcoml
add
push
sub
or
add
inc
xor
mov
add
dec
popf
inc
lcall
adc
enter
sbb
dec
and
push
inc
sub
xor
push
enter
inc
loopne
mov
dec
adc
push
xchg
mov
pusha
sub
dec
xchg
xchg
mov
dec
nop
cwtl
dec
xchg
sub
rcl
dec
xchg
leave
push
jb
adc
xchg
or
inc
xor
leave
push
xor
mov
ffreep
loopne
mov
pop
push
xor
inc
fchs
jg
add
push
xor
xchg
sub
sbb
test
call
pop
repnz
xchg
pop
orb
or
in
xor
clc
push
jb
insl
push
xchg
sbb
inc
sbb
pop
decl
in
and
int3
enter
enter
popa
fcmovnu
fcmovu
lret
loopne
jecxz
in
add
xor
or
out
sti
imul
add
and
pop
mov
xor
xor
inc
inc
inc
mov
xor
mov
or
push
or
add
sub
in
push
mov
lods
pop
mov
mov
rclb
sub
aas
xor
pop
es
test
add
movsb
lods
mov
int3
imul
xor
cmpsb
cld
add
or
sbb
shll
inc
dec
xor
shll
pop
fs
je
xor
sarl
xchg
pushf
dec
inc
xor
lods
in
mov
add
mov
push
repnz
loopne
in
push
xor
leave
inc
arpl
daa
dec
pusha
shlb
sbb
sbb
sub
dec
dec
sahf
pusha
in
and
or
adc
test
stos
dec
rcrl
sahf
lahf
dec
out
add
xor
shll
mov
aam
imul
cmpsb
imul
scas
cltd
pushf
add
add
je
mov
add
inc
int3
xchg
add
fnstenv
pusha
addl
bsf
leave
data16
pop
sub
jne
add
pop
adc
iret
or
jmp
gs
xor
adc
into
fadds
sbb
add
outsb
mov
daa
in
pop
fbld
iret
andl
or
or
adc
ret
and
imul
out
sbb
or
hlt
xchg
pop
adc
in
mov
arpl
jl
mov
jne
ja
push
cmp
and
and
add
imul
mov
pop
or
sbb
sub
mov
mov
add
psubb
or
in
jge
test
mov
out
ds
fnop
aas
adc
push
pop
xchg
sti
pop
push
fucomp
dec
pop
pop
inc
jmp
and
je
shll
pop
out
cmp
sbb
adc
jne
nop
push
pop
dec
inc
aaa
pop
fsubl
xchg
roll
jb
cmpsl
xchg
sbb
mov
in
mov
xor
shrl
dec
negl
jnp
and
pop
shll
test
sbb
ss
in
les
inc
push
test
push
inc
xchg
and
sub
mov
pop
nop
inc
add
aaa
adc
fbld
add
mov
add
add
add
dec
add
das
inc
roll
pop
or
push
or
mov
inc
add
dec
add
dec
sbb
pop
fiadds
mov
add
inc
add
imul
je
push
add
add
jnp
xchg
fmull
outsl
pop
xor
add
pop
out
pop
or
push
or
mov
adcl
push
popa
pop
xlat
popf
mov
sbb
int3
pop
outsb
imul
adc
mov
and
por
jae
arpl
mov
add
pop
je
add
mov
aaa
sub
or
add
inc
and
xorl
aaa
mov
dec
dec
cmc
jne
jb
or
jne
or
jb
add
testb
push
insb
fsub
mov
test
pop
or
lea
insb
imul
add
lahf
push
aaa
je
insl
add
insl
mov
jmp
dec
push
dec
emms
dec
mov
pop
or
adc
adc
imul
into
pop
add
push
jne
jno
faddl
jb
add
add
jne
mov
aas
sbb
imul
mov
pop
insb
add
fwait
lods
cmp
sub
pop
ja
mov
in
or
sbb
add
popa
out
jne
sbb
jns
rcrl
cmp
das
addr16
or
mov
lret
jo
orl
pop
arpl
popw
movsl
dec
sbb
fistl
es
mov
popa
push
add
loope
xor
xorl
add
subl
imul
ja
jae
and
pxor
jae
pop
xlat
mov
lahf
aas
dec
aaa
jbe
dec
and
pushf
lahf
fwait
dec
dec
jo
jecxz
bound
sub
jae
popa
insb
sub
sbb
outsl
cmp
mov
and
sbb
sub
ret
popa
xor
mov
insb
enter
fnstenvs
jno
pop
sub
sbb
cmp
push
ss
add
adc
jnp
out
or
mov
push
das
inc
clc
pop
insl
daa
xor
test
sbbl
push
jo
outsl
out
sbb
push
test
arpl
es
cmpl
jmp
outsb
jb
xchg
sbb
mov
js
inc
lret
sub
in
or
dec
pop
lret
testb
jge
xchg
mov
inc
jg
repz
and
pop
jnp
dec
xchg
sub
aaa
outsl
fnstenv
jnp
mov
fists
xor
adc
pop
notl
mov
xchg
sbb
push
add
add
shrl
or
pop
icebp
jb
sub
mov
push
adc
push
xchg
and
das
xorl
mov
pop
sbb
idivl
add
adc
andl
punpckhwd
pop
js
orl
pop
pop
adc
xor
cmpsl
and
adc
bound
ja
push
pop
add
pop
fistl
add
andw
shlb
xor
outsb
mov
pop
sti
add
ret
dec
pop
and
and
and
mov
sub
inc
add
lock
ljmp
imul
addr16
fwait
mov
sbb
push
sbbb
cmp
fs
mov
outsl
outsl
pop
ss
pop
int
ret
outsb
sub
lods
adc
aas
fstpt
push
fsubrl
jns
frstor
in
dec
lret
mov
fcomi
test
mov
pusha
insl
fistl
xadd
arpl
xchg
jmp
insl
mov
out
fdivp
ja
jp
xlat
adc
push
adc
jp
mov
push
imul
adc
sbb
inc
sbb
xor
aas
or
sbb
aas
xor
ss
pop
aas
mov
inc
sub
sbb
pop
xor
decl
es
aaa
mov
pop
fwait
cmp
inc
fs
cmp
ljmp
mov
sub
mov
sbb
stc
ret
mov
mov
ljmp
test
dec
pop
shrb
scas
in
jl
and
addr16
fiaddl
popa
pop
repz
jmp
icebp
and
pop
xor
lcall
jl
gs
lea
pop
stos
cmpsl
cmp
in
call
push
jae
pusha
xor
cltd
or
sub
xor
jbe
jo
enter
test
idivl
push
ret
inc
scas
lds
xchg
fcoms
push
mov
leave
sub
add
out
stc
call
dec
xchg
push
mov
insb
int
lcall
and
cmp
and
sbb
pushl
mov
xchg
cltd
cs
aas
mov
pop
inc
add
in
add
iret
adc
ljmp
xor
jecxz
ficomps
call
addb
dec
outsb
and
jmp
lcall
sub
push
cs
cmp
mov
push
movsl
test
clc
cwtl
mov
xchg
inc
mov
fldl
enter
int3
jbe
fmull
jge
cltd
popa
packssdw
ficoms
js
xor
push
adc
and
hlt
xor
popa
into
sti
roll
ljmp
out
mov
stc
cmpsl
push
kxnorw
mov
push
daa
add
lods
jmp
aam
lcall
repz
ret
jmp
ss
jae
mov
fists
fcos
cmp
into
and
xor
or
push
cmp
cli
mov
jmp
jbe
fsubrs
dec
pushl
rcrl
lret
fwait
or
jnp
push
daa
insb
mov
addr16
ljmp
addl
mov
lds
jl
clc
inc
jb
popa
mov
jg
xchg
jmp
out
divb
aam
sbb
adc
cmc
ljmp
movb
fcomi
push
add
stos
repz
adc
movl
xchg
and
mov
filds
xor
inc
in
inc
jmp
shlb
inc
popf
and
adc
inc
and
sbb
inc
xor
es
jne
in
ljmp
shll
xchg
loopne
sti
stc
movsl
push
push
call
mul
jnp
test
jle
xchg
push
fnstenv
ret
movsl
inc
test
mov
cmp
ljmp
insb
push
mov
jne
data16
jle
xor
insl
dec
cmp
add
inc
push
rcrb
xchg
inc
xchg
adc
cmc
inc
lods
and
jmp
sbb
pushl
rclb
pushf
mov
cmp
push
stos
outsb
mov
xchg
mov
aaa
shlb
les
pop
cld
int
fildll
add
dec
xor
lret
cltd
push
xor
sbb
inc
das
bnd
push
push
leave
pop
stc
lds
push
pop
pop
ljmp
and
fiadds
in
mov
enter
add
int
ftst
mov
sbb
loopne
jbe
push
cli
jl
mov
push
jo
js
pusha
push
xor
jno
xor
fsubl
inc
push
inc
outsl
fs
test
sarb
or
call
jb
int
mov
xor
int3
sub
or
shl
int3
push
sub
ljmp
aad
lea
pushf
dec
jmp
dec
les
imul
fwait
pushl
ret
or
pop
pusha
and
push
and
js
jg
bound
mov
mov
call
push
jnp,pt
inc
fwait
loop
xchg
mov
add
jns
push
xchg
repz
fdivl
lods
pop
push
sbb
or
jmp
add
hlt
call
jmp
arpl
es
insl
adc
jle
push
jg
scas
movsb
xchg
jnp,pn
and
idivb
sar
push
cmp
xor
pop
repz
ficompl
add
xchg
mov
pop
idiv
call
pop
or
out
std
test
fstps
mov
hlt
inc
mov
in
or
dec
rol
cmc
je
js
cltd
fistpll
test
ficompl
ljmp
add
pushf
sti
fists
aam
out
in
cwtl
leave
cmp
call
dec
es
xor
sub
jle
and
jbe
rorl
jl
xchg
in
inc
mov
xchg
inc
or
sbb
mov
xchg
sbb
jl
jle
pop
push
or
ljmp
inc
or
out
jb
test
lahf
and
adc
adc
aas
rcl
mov
mov
inc
aas
ljmp
jmp
call
push
ret
in
jmp
fwait
mull
ljmp
movsl
in
pop
mov
and
lcall
outsl
in
rcrb
or
push
jecxz
loop
call
rcr
out
jmp
lods
inc
in
lret
mov
mov
repz
bound
aam
fwait
insl
sub
cwtl
mov
test
sub
pop
test
xorl
add
fnsave
push
aas
les
pushl
in
mov
mov
andb
rolb
scas
jg
fildl
in
packsswb
lcall
pop
push
enter
and
pushf
test
add
or
or
xchg
xor
pushl
lods
incb
push
rcrb
lcall
dec
push
or
and
mov
jle
sub
dec
cmc
and
shlb
mov
sti
mov
sbb
jmp
movsl
leave
cmpsb
mov
cli
and
sbb
jg
ror
scas
cmpl
jne
mov
xor
pop
scas
pop
cmp
mov
jmp
jbe
daa
mov
pushl
pop
std
nop
out
xchg
fwait
mov
imull
call
lret
es
das
mov
bnd
mov
jb
mov
sbb
std
call
out
dec
dec
mov
add
push
dec
ret
xor
xchg
xor
pop
pop
rcl
rcrb
lcall
das
je
push
fcompl
pop
arpl
gs
movsb
movsb
loope
push
pop
mov
in
jbe
jo
and
out
or
scas
sub
sub
and
cld
mov
mov
test
fldcw
es
add
lods
arpl
add
sti
js
insl
js
xchg
jmp
xor
lock
loopne
ficoml
or
jle
dec
cmc
bound
mov
ljmp
push
pop
inc
ss
gs
fs
sbb
rcl
jg
filds
adc
xchg
sahf
cmpsb
adc
cmpsl
jae
incl
push
lods
and
test
sti
scas
nop
iret
int
fsubrs
jg
incl
push
ror
and
fcoml
pop
sahf
jb
repz
shl
call
jb
pop
nop
mov
lods
shll
insl
add
idiv
pop
mov
in
xchg
mull
xchg
cld
xchg
or
lock
pusha
jg
push
jo
jo
loopne
push
cmp
inc
jg
inc
push
into
mov
icebp
mov
lcall
xor
add
mov
and
icebp
nop
inc
into
mov
mov
sub
or
fnsave
mov
inc
sub
mov
call
ljmp
dec
lea
mov
decb
jmp
mov
test
lcall
sbb
aad
ljmp
bound
xchg
stos
add
fisttpl
add
movsl
push
xchg
mov
jae
sbb
test
stc
insl
sbb
xor
fsts
mov
or
sub
aad
pop
mov
cmp
rorl
jl
mov
inc
adc
jne
jmp
inc
rcll
imul
jmp
rorl
in
outsb
flds
lret
stc
mov
xchg
mov
xchg
pusha
into
fldl
mov
scas
inc
pop
inc
xor
mov
mov
decl
push
je
xor
mov
insb
scas
jecxz
out
scas
pop
sbb
cmpl
outsb
movsl
mov
sti
ja
xor
mov
mov
jp
cwtl
adc
xchg
insb
pop
dec
repz
mov
jmp
insb
mov
jge
mov
addl
sub
or
xadd
push
or
pop
mov
push
repnz
pushl
jle
and
mov
xchg
cmp
pop
outsb
sub
lcall
gs
out
jae
push
dec
adc
scas
into
mov
add
repnz
pop
inc
inc
xchg
cmp
dec
cmp
xchg
fiaddl
decl
jns
dec
jne
mov
adc
stos
mov
pop
loope
cmpsl
inc
leave
mov
ljmp
cmpsl
mov
jnp
xchg
fs
dec
lret
add
pusha
xchg
sbb
adcl
jmp
pop
xor
push
fildll
pop
adcl
mov
xor
and
out
ja
jg
mov
and
idiv
pop
cmp
xchg
movb
jg
cld
aam
dec
or
jnp
test
mov
mov
ret
jp
sub
call
mov
jecxz
int
mov
mov
inc
fdivrl
sbb
out
int3
cltd
into
push
or
in
mov
inc
das
flds
mov
jmp
dec
jnp
sarl
mov
lret
outsl
fcmove
mov
jle
cmp
lcall
js
rorl
cmc
jl
into
sub
lods
xor
das
je
faddl
fimuls
mov
cld
movsb
mov
je
stos
das
jge
and
insl
fwait
daa
jnp
repnz
jmp
arpl
pop
cmpsb
mov
push
xorl
aad
add
decl
dec
cmpsb
inc
testl
mov
inc
jp
jno
movsb
lods
pusha
stc
inc
ljmp
ljmp
fstpl
mov
mov
push
xlat
adc
add
pop
jno
sar
aaa
and
xchg
add
icebp
inc
mov
or
js
test
push
cmp
jg
jmp
lods
loope
mov
in
mov
push
iret
and
mov
or
int
dec
push
incl
ficoms
push
mov
mov
fstps
fdivr
inc
sbb
sbb
mov
lods
jp
arpl
out
adc
sarl
cli
jg
jmp
inc
frstor
cmp
in
xchg
xchg
adc
lcall
fildll
pushl
pop
outsb
mov
icebp
inc
movsb
inc
xor
js
cmp
xor
jmp
mov
add
mov
fsts
or
stos
or
imul
jg
jge
xorb
popa
fildll
jmp
dec
call
clc
or
inc
dec
push
mov
pop
dec
jno
pop
mov
adc
dec
mov
mov
test
pushl
sahf
mov
mov
or
cmp
jg
decl
add
sbb
push
jge
mov
test
cs
mov
loop
cmc
xor
and
mov
test
aas
adc
jno
adc
add
loopne
lahf
call
outsl
lcall
mov
ret
clc
xor
push
ret
shlb
jb
adc
pop
jmp
call
xchg
adc
mov
shlb
bound
inc
or
adc
adc
add
adc
popa
or
incl
push
lea
andl
xlat
inc
cmpsl
mov
lret
xor
incl
insb
addr16
notl
mov
sbbb
xchg
std
xorl
test
sbb
cs
lcall
sbb
push
dec
adcb
jp
add
into
jb
push
icebp
scas
inc
mov
sbb
ljmp
jb
lods
mov
imul
mov
subb
iret
notb
pop
xor
or
rclb
jg
xor
out
jecxz
cmp
loope
fucom
xchg
cmp
adc
fdivrp
xchg
outsb
mov
decl
cld
stc
iret
adc
jge
fwait
sub
loopne
inc
mov
fcoms
aad
mov
loopne
test
cmp
stos
gs
jg
rcr
xor
mov
stos
or
icebp
call
imul
cmp
inc
inc
aaa
into
or
int3
mov
shrb
push
xchg
mov
sbb
inc
or
leave
xchg
bound
jmp
cli
lcall
lahf
mov
mov
negl
xorb
fwait
mov
call
aaa
loopne
pop
and
int3
sbb
pop
and
and
addl
mov
lcall
iret
cmc
dec
inc
sbb
cmpl
push
mov
xchg
mov
arpl
sub
mov
aam
vmovntps
push
cwtl
jae
gs
dec
insl
andb
pop
stos
decl
sub
push
inc
mov
test
jnp
mov
jmp
bound
dec
jns
lret
jae
and
sbb
sahf
fsts
mov
cs
push
xchg
mov
mov
jmp
lock
dec
mov
lahf
sbb
jecxz
push
cmpsl
icebp
push
outsl
lock
icebp
dec
icebp
test
push
std
adc
cmpsl
sub
clc
ljmp
sub
pop
cmp
push
mov
scas
scas
xchg
cli
adc
cmpsb
iret
sub
ljmp
jmp
sbb
lods
into
out
xchg
mov
cmpsl
pop
shr
cmp
ljmp
lock
jmp
xchg
and
js
mov
aam
fcompl
xor
jb
xchg
test
decl
outsl
or
cmpsl
sbb
push
movl
lret
adc
sub
push
xor
sub
ljmp
push
jge
lds
pop
mov
push
sar
mov
xchg
xor
aas
and
push
adc
mov
in
inc
out
sbb
das
cmpsb
mov
stc
ret
cmpsb
cwtl
ret
stos
xchg
jp
inc
xchg
nop
mov
jge
sti
inc
mov
cmpsb
das
in
lods
push
mul
pop
jg
jno
sub
ret
pop
popa
imul
lds
lcall
out
fists
sbb
pop
and
xchg
inc
xchg
fldenv
pop
push
movsl
pop
dec
jb
call
dec
or
mov
stos
dec
xchg
cmp
pop
mov
call
imull
in
outsl
lahf
push
pop
and
sarb
mov
mov
push
fidivrl
mov
movsb
and
add
pushl
les
mov
ret
inc
or
lcall
out
sbb
xchg
cmp
mov
movsl
mov
int
lods
fcoms
fldl
push
test
lcall
das
pop
push
adc
and
sar
les
ficoml
aaa
cli
jp
push
mov
nop
ret
in
inc
push
test
mov
mov
loope
es
add
jge
adc
lods
cmc
lret
rcrb
inc
insl
test
mov
sti
sbbb
lods
dec
popa
inc
mov
in
jg
pop
addb
outsl
sbb
mov
iret
or
sbb
movsl
dec
xorl
cmp
pushf
loop
call
scas
pop
mov
mov
pop
jecxz
pop
dec
mov
dec
out
pop
ret
cmp
lret
mov
fidivrl
jae
ljmp
test
mov
mov
dec
icebp
std
jg
xor
mov
ja
stos
xor
inc
sub
jecxz
cmpsl
aad
sub
xchg
jl
ja
sub
mov
push
cmp
outsl
lock
aas
out
cmp
fucomi
aaa
add
pop
add
adc
movsl
cld
aad
cwtl
dec
mov
popa
push
dec
cmc
mov
pop
popa
xchg
cli
cmpsl
dec
ss
add
rclb
dec
shlb
push
es
cmp
ljmp
xchg
push
repnz
mov
pop
sbb
shll
mov
aaa
std
out
test
mov
mov
jmp
out
and
fs
daa
sub
vcvtsd2si
xchg
sbb
in
mov
inc
xor
mov
loopne
je
jo
fisttpl
inc
mov
or
dec
js
or
outsl
inc
pushl
repz
cwtl
xor
pop
sub
adc
jg
outsb
inc
inc
scas
lea
inc
dec
dec
ljmp
mov
jmp
add
pushf
cld
mov
sub
jg
decl
call
jne
jle
lea
inc
mov
loopne,pt
jecxz
test
pop
mov
mov
daa
add
xchg
cmp
and
scas
in
cmp
outsl
push
out
das
jno
les
push
push
pop
xlat
enter
aas
jno
clc
cmp
jno
pop
cmp
decl
pushl
cmp
sti
push
hlt
cld
leave
shr
pushf
lock
enter
sbb
into
push
out
stc
push
mov
jmp
adc
cmp
popf
push
aam
loopne
test
and
add
in
and
fbstp
mov
in
xlat
bound
lods
into
dec
leave
mov
add
aad
pusha
sbb
call
pop
pop
inc
fldcw
or
in
into
push
xchg
fcomp
aaa
insl
mov
push
addr16
cmc
jmp
loope
cmp
cmp
xchg
dec
hlt
jmp
mov
lods
and
pop
subb
sahf
addr16
cmp
add
decl
out
mov
pop
mov
xor
sbb
push
mov
inc
cwtl
xor
pop
mov
cmp
into
sub
sub
sub
cmc
mov
not
inc
mov
sub
in
icebp
lcall
outsl
add
push
in
jne
fwait
mov
or
jmp
call
outsl
cltd
fistl
repnz
cmpsb
pusha
sub
push
stos
add
dec
add
aad
stos
jnp
or
jae
dec
mov
push
lea
jp
sbb
movl
daa
or
push
addb
aad
mov
add
das
sahf
sub
dec
and
call
sub
sahf
subb
ja
mov
and
inc
orb
sbb
icebp
addr16
movsl
sub
xor
in
and
stc
sub
xor
mov
xchg
jge
xchg
and
fisubrs
mov
in
out
mov
rclb
clc
pushl
jnp
stos
ret
loop
cmp
scas
out
mov
inc
pop
pop
fnsave
or
sbb
fdiv
lret
xchg
push
int3
into
arpl
cmc
pop
clc
lea
lahf
shl
adc
out
icebp
cltd
adc
ljmp
lods
arpl
adc
inc
pop
movsb
inc
nop
pop
ljmp
xchg
mov
les
mov
movsb
loop
mov
xorl
adc
push
xchg
cld
fs
mov
cwtl
add
jg
sar
mov
lret
lret
loope
xchg
out
sbb
rcrb
mov
fdivr
lcall
pop
into
addl
stc
cmpsl
xor
and
out
jae
mov
mov
cli
ljmp
lods
jmp
mov
xchg
scas
and
xchg
test
das
std
xor
jnp
mov
jae
and
stos
ret
push
dec
mov
and
ror
or
add
fdivl
inc
fists
or
stos
std
mov
test
xor
es
pop
mov
xor
pop
mov
jmp
loopne
jecxz
call
outsb
out
daa
loop
stc
sbb
jmp
cmp
cmpsb
adc
das
fiadds
repz
es
dec
mov
jecxz
cmp
jg
call
sbb
dec
sub
lahf
ds
pop
add
les
jg
into
decl
arpl
hlt
cltd
hlt
mov
cmp
imul
xor
aad
jbe
sub
sub
push
loop
adc
and
cmp
jmp
fucomip
or
and
popf
pop
fs
jp
sub
addr16
sub
mov
ljmp
insb
call
mov
pop
jns
push
mov
loop
cmc
popa
cmp
mov
lar
data16
icebp
stc
gs
arpl
je
pop
cli
fbld
sub
mov
rorb
inc
lock
push
mov
dec
lahf
and
push
std
mov
outsl
adc
mov
mov
push
sbb
aaa
push
lret
xor
sbbl
adcl
iret
add
icebp
loop
cmp
mov
in
cmpsb
incl
movsb
jl
in
inc
sbb
out
lret
fs
aad
decl
fidivrs
popa
jno
pop
xchg
fildl
cmp
cmpsb
mov
lock
pop
mov
cmp
lods
insl
mov
mov
popf
test
xchg
sbb
lods
nop
mov
mov
dec
ret
xchg
mov
jo
fyl2x
mov
or
sub
push
and
inc
mov
push
scas
lcall
jl
mov
fcomps
sbb
jae
mov
fnstenv
push
das
push
jmp
dec
mov
jg
sub
pop
add
and
cld
mov
lcall
filds
mov
into
dec
mul
lods
in
xchg
dec
pop
faddl
ljmp
or
or
into
idivl
pop
mov
and
rcl
jae
mov
pop
and
in
ja
inc
mov
mov
int
dec
push
push
in
incl
imul
cmpb
xchg
pop
out
xchg
lcall
jg
push
hlt
push
xor
aad
push
cwtl
cwtl
inc
cmp
pop
loop
xchg
pop
lcall
das
std
mov
xchg
fldl
jle
sbb
mov
jns
dec
push
push
add
loop
enter
jg
push
loop
jg
es
adc
jb
xor
insb
clc
push
and
pushf
or
jmp
inc
int3
sarl
ret
insb
push
xor
cs
xchg
sar
dec
insl
std
in
mov
sub
pop
push
sbb
xor
mov
jle
shrl
sub
push
dec
loope
shll
xorl
ljmp
xorb
rcl
and
in
mov
mov
incl
pusha
in
jnp
in
pop
xchg
popa
or
stc
jecxz
jne
and
sahf
pushf
mov
comiss
aad
or
loop
mov
repz
pop
mov
dec
and
dec
pop
loopne
pop
jmp
cmp
add
das
lock
pushl
out
sub
sbb
ss
mov
gs
decl
decb
xlat
mov
push
adc
popa
dec
fmull
cld
jle
mov
lcall
call
push
daa
add
fwait
jns
popa
dec
mov
aam
out
lods
pushl
aam
in
inc
inc
lcall
addr16
ficoms
add
outsl
adc
mov
jl
jg
in
fisttps
jo
not
cmp
mov
mov
aaa
cli
decl
mov
ret
jge
bound
add
mov
cmp
push
out
orb
and
mov
imul
jg
xor
pushl
mov
js
ja
clc
jle
push
jne
insb
stos
mov
push
pop
clc
in
les
adc
jecxz
subl
clc
dec
dec
out
ja
fnstsw
xchg
mov
push
mov
fs
jbe
xor
mov
mov
dec
mov
jmp
cmp
jecxz
push
mov
pop
push
in
std
cmp
xchg
clc
push
mov
hlt
sbb
jbe
repz
or
pandn
pop
mov
push
sbb
mul
js
lock
mov
pop
std
mov
jmp
dec
aam
push
jbe
push
cltd
push
sub
outsl
lock
mov
inc
xor
hlt
ja
xor
mov
or
ss
call
push
lock
cmpb
hlt
bound
inc
push
dec
inc
adc
aad
es
jmp
pop
or
pop
xor
push
out
mov
test
je
pop
loop
daa
cmp
aas
adc
cmc
notb
shrb
test
fisubs
dec
xchg
mov
incl
in
in
test
pop
mov
xchg
out
sub
inc
push
in
std
mov
fistl
mov
ljmp
sbb
adc
mov
mov
out
adc
aam
xchg
mov
add
push
aas
repz
jbe
sbb
ljmp
test
mov
cltd
and
loope
push
pop
sub
jne
or
ds
sbb
ljmp
lret
pop
dec
sbb
push
ret
into
jg
pop
mov
fmuls
xor
pushl
test
or
adc
inc
add
adc
hlt
ds
xor
and
pop
jp
mov
add
lock
or
repnz
mov
call
call
xor
mov
fdivs
pop
insb
inc
jmp
mov
inc
or
and
std
push
clc
cs
les
mov
and
call
lods
ss
call
icebp
mov
push
popf
sahf
pop
popa
xor
and
popa
int
decl
xor
pop
popf
dec
jo
fs
or
dec
or
pop
das
pop
jg
mov
push
lods
js
fucomip
daa
mov
sbb
add
mov
call
mov
loope
ret
cmp
jmp
and
push
jno
dec
mov
ret
das
cld
fsub
cwtl
clc
inc
push
jp
das
pop
fmulp
rorl
cmp
jbe
xor
sbb
loop
push
cld
scas
cmp
jp
iret
xchg
test
or
jle
testl
mov
lcall
push
pop
sub
test
imul
fcomps
adc
fdivr
push
decl
mov
push
iret
nop
fdivs
mov
lcall
jno
push
outsl
aaa
pop
mov
add
pop
sqrtps
iret
sub
ss
jg
nop
gs
ret
pop
stc
pop
mov
adc
popa
das
hlt
call
jp
jne
jbe
test
popf
push
push
pop
mov
jne
jmp
and
lods
daa
pop
or
cs
ljmp
fiadds
in
js
mov
mov
xor
lret
push
or
leave
cmp
fcmovnb
push
push
jmp
js
test
cli
addr16
imul
push
jmp
jle
jg
inc
lcall
rcrb
xor
sbb
scas
test
lods
lods
jmp
roll
push
add
pop
sbb
fbld
out
or
jl
jg
in
lods
inc
cmp
aad
xchg
in
inc
in
jo
hlt
adc
mov
xchg
push
call
sub
xchg
popf
repnz
jg
jmp
pop
insl
imul
lods
fisubs
mov
jmp
cld
cwtl
xor
mov
sbb
imull
dec
ljmp
adc
mov
adc
jmp
sub
iret
cmc
pop
das
xor
js
sbbl
scas
sbb
testb
sub
cld
ljmp
adc
mov
and
inc
or
call
jbe
aaa
dec
sahf
je
lret
dec
jl
in
adc
push
call
add
push
lret
mov
sub
mov
dec
lret
gs
outsb
cmp
lcall
fwait
jg
sar
adc
aaa
mov
mov
pop
icebp
cwtl
fldcw
call
adc
adc
in
push
leave
inc
push
rcll
filds
xchg
stos
ljmp
mov
jno
lahf
sbb
push
push
iret
cmpsl
push
or
jns
jo
outsb
and
mov
push
imul
ret
pop
call
sar
aas
repnz
int
mov
lahf
stos
push
sbb
jg
mov
jnp
xchg
addl
incl
call
nop
jmp
mov
test
es
stos
sub
pop
cltd
call
call
push
sbb
lods
in
xchg
push
mov
jg
mov
jb
sahf
sbb
movsl
fcoml
les
jns
push
call
icebp
dec
push
xor
push
dec
out
add
out
popf
cld
xchg
and
jne
and
mull
frstor
movsb
sti
test
dec
jp
cmp
cmc
cmp
call
outsb
or
rolb
outsl
cmp
insb
mov
test
jg
call
inc
dec
cli
insl
cli
aad
xchg
sarb
jno
out
sub
out
and
inc
and
jge
in
mov
insb
out
out
pusha
push
pusha
outsb
andb
push
and
arpl
flds
icebp
incl
mov
mov
ret
mov
jl
syscall
dec
and
cmpsl
xchg
mov
leave
push
jne
cmp
rcrb
stos
and
lds
mov
loope
xchg
leave
xchg
dec
in
xchg
pop
xchg
jl
jge
sub
push
adc
fbstp
inc
add
jg
ret
push
push
cmp
sbb
xchg
inc
sbb
and
dec
decl
loopne
mov
pop
and
lock
and
pop
jo
rolb
mov
dec
xchg
out
mov
adc
in
gs
fsubl
nop
adc
xchg
outsl
inc
call
sar
sub
repz
mov
cmp
stos
shll
push
lahf
into
mov
movsl
and
cli
aaa
clc
test
gs
popa
push
cmp
adc
push
decl
imul
and
test
sarb
int3
jno
leave
mov
sar
ljmp
lret
cmc
cmp
test
jo
pusha
pop
shll
shrb
mov
decl
add
in
cmp
dec
rep
adc
jmp
hlt
decl
sub
or
jg
pop
xchg
mov
inc
xchg
sub
push
call
sub
push
cli
movsl
outsb
icebp
ja
mov
and
enter
in
call
xchg
and
mov
call
call
incl
sbb
fistpll
push
jl
popf
mov
cmp
iret
cmp
mov
push
shll
cmp
mov
outsl
leave
sti
std
scas
aam
lahf
mov
xchg
loopne
sub
test
jmp
stos
test
mov
cs
jg
mov
scas
or
fmuls
mov
push
int
lcall
std
xchg
in
scas
inc
sbb
jns
and
jbe
aas
push
lock
ljmp
repnz
lcall
xor
mov
and
jmp
add
cmp
cltd
rolb
lock
mov
rcl
push
xchg
addl
push
test
add
pushf
or
mov
aam
jp
dec
cmp
pop
loopne
dec
imul
adc
add
das
cmc
pushl
mov
mov
flds
ljmp
decb
push
loope
cmpl
inc
lods
pop
mov
dec
in
pop
clc
push
incl
in
arpl
pop
arpl
push
xchg
xor
cmpl
xchg
pop
loop
popf
jns
pop
addb
mov
push
insb
push
pusha
sbb
mov
rcll
lahf
mov
addr16
repz
sti
xchg
scas
sbb
pop
mov
and
sub
outsl
push
add
pop
in
or
mov
fsubrl
ret
mov
push
cli
inc
mov
push
out
pop
inc
out
pop
in
test
incb
or
jg
dec
mov
mov
cmp
jo
andb
mov
imul
mov
lcall
push
stos
mov
sti
adc
or
xchg
xlat
mov
or
lahf
xor
sbb
les
lahf
adc
cmc
imul
ds
or
add
cmp
dec
cld
push
fistl
push
dec
mov
mov
mov
pop
push
or
outsb
stos
dec
xchg
int3
lahf
and
jle
inc
push
xor
bnd
mov
jmp
push
jecxz
aam
mov
mov
fwait
shlb
lds
pop
cli
test
into
outsl
std
lcall
pop
popf
dec
in
lea
in
repnz
je
loop
pop
clc
clc
incl
add
and
aaa
lcall
jge
mov
imul
add
inc
adc
ret
es
pop
push
leave
cmp
mov
in
mov
loope
lahf
adc
sbb
pop
cmp
jae
cmp
lret
aam
incl
lret
push
inc
fs
les
adc
les
test
and
mov
adc
pushf
mov
adc
lea
dec
add
imul
repz
mov
sbb
pop
pop
cmpsb
or
adc
cltd
inc
je
mov
jo
loope
pushl
aas
in
and
push
inc
adc
popa
dec
sub
jmp
or
jg
das
xchg
stos
dec
pop
pop
fnstenv
cs
cwtl
mov
xchg
nop
out
imul
incl
enter
je
enter
jmp
jecxz
ljmp
mov
test
xchg
add
xorb
cli
push
in
jo
add
mov
cwtl
jp
ss
outsl
mov
xor
fisttps
stos
push
lcall
loop
push
sub
sub
pop
call
incl
and
jg
inc
adc
dec
les
insb
fwait
and
shrl
call
into
xchg
rcrb
mov
aad
adc
jns
and
mov
lret
sahf
xor
lret
pop
cld
jmp
dec
adc
lock
adc
sub
and
cmp
jge
test
testb
pop
mov
jb
mov
add
decl
mov
fisubl
maxps
gs
iret
movsb
inc
cmp
pop
fs
jg
cli
and
mov
sahf
add
inc
out
dec
inc
inc
icebp
ds
and
mov
and
pop
cmp
pusha
sbb
dec
dec
ds
pop
mov
lea
cmp
and
fistpl
lcall
pop
sub
test
arpl
dec
mov
dec
xor
xor
test
fsts
ret
lret
dec
popf
jbe
push
iret
pop
jmp
mov
add
aad
int
icebp
add
mov
pushl
xchg
aam
scas
in
cmp
xchg
out
incl
cmp
out
fstps
dec
push
adc
cmp
jmp
inc
sbb
push
loopne
call
ds
lret
pop
ja
dec
out
insl
mov
fistpll
ja
call
mov
pop
mov
insb
daa
sbb
mov
mull
call
clc
xlat
mov
stc
add
out
add
cmp
jne
movsb
xchg
clc
push
pushl
xchg
jnp
test
dec
xchg
or
mov
dec
adc
sar
lcall
dec
cmp
xor
out
mov
sub
gs
mov
js
stos
pop
mov
aam
dec
fmulp
or
stos
insb
inc
dec
test
rolb
sti
cmpsl
jmp
mov
cmpsb
xor
add
cmp
xchg
neg
enter
insb
inc
mov
fdivrl
adc
sub
movsb
in
add
sub
test
sub
pop
dec
add
pushf
in
test
mov
enter
cli
jae
decl
xor
or
ljmp
mov
ljmp
dec
or
cli
fistps
lea
imul
fisttpl
add
cmpb
mov
jmp
inc
sar
inc
and
dec
leave
mov
or
gs
add
jle
mov
or
in
xchg
lods
adc
sub
roll
adc
sub
cld
das
jle
jbe
pop
jle
mov
jns
icebp
shlb
mov
fs
xlat
mov
das
jg
and
divl
dec
sbb
lcall
push
sub
dec
rorl
ret
gs
jg
lcall
jecxz
cmp
fcmove
jb
sub
adc
insl
leave
test
mov
scas
push
adc
insb
mov
sub
enter
dec
mov
es
push
ret
xor
clc
jecxz
lret
enter
test
clc
imul
add
pop
ds
call
iret
adc
pop
mov
pushl
arpl
lret
and
outsb
add
loop
pusha
movsb
jns
dec
sbb
pop
das
std
jmp
aad
addr16
mov
add
in
arpl
jbe
pushl
push
out
imul
shrb
cmp
cmp
clc
xchg
clc
fcomp
sub
je
lret
int
repnz
in
jmp
stc
add
xchg
dec
loope
push
dec
enter
popf
lea
test
out
adc
mov
push
jp
mov
shlb
jmp
incl
das
inc
mov
or
cmp
adc
or
push
ljmp
mov
dec
int
bound
insb
mul
xchg
push
pop
outsl
jmp
push
adc
dec
cld
jmp
mov
in
mov
add
std
ljmp
xor
cld
dec
and
cmp
addl
aad
mov
test
xchg
ss
nop
adc
jo
mov
mov
incl
mov
add
and
popa
icebp
sti
clc
pop
clc
cmp
ret
xchg
cmp
pop
add
pushl
ljmp
push
fdivrs
jnp
fdiv
xchg
lcall
in
jge
mov
aad
inc
enter
push
fs
insl
xorl
call
add
cmp
orb
pop
push
xlat
and
cmp
push
iret
dec
sbb
dec
repz
adc
data16
xchg
fnsave
xchg
test
push
mov
dec
mov
incl
inc
add
jne
sti
daa
out
std
mov
fists
jecxz
call
call
pop
add
cmp
and
adc
adc
jo
xlat
stos
fnstsw
jg
or
inc
pop
lea
shll
icebp
dec
ja
pushf
movsb
fsubs
push
pop
mov
sub
mov
adc
push
pushf
xchg
mov
mov
gs
pop
inc
xor
repz
cmp
sub
or
mov
mov
mov
int3
sub
shl
dec
iret
ss
jno
ljmp
in
sub
mov
and
loopne
mov
adc
push
insb
scas
stc
das
in
jmp
pop
out
bound
xor
pop
jl
xchg
mov
incl
or
inc
daa
jp
cld
outsb
imul
xchg
lcall
fadds
cld
outsl
dec
adc
fucomip
lcall
cmp
les
cmc
mov
ljmp
mov
data16
ss
shrb
fidivs
and
push
push
sbb
add
mov
pop
daa
dec
dec
cmp
repnz
push
sbb
enter
sti
loop
decl
in
das
mov
loope
and
pop
pop
mov
mov
jo
dec
fsubrl
rorl
push
call
mov
test
nopl
jge
jle
ja
cmpsl
add
in
jle
aad
fcoml
mov
inc
sar
jmp
cmpsb
adc
xor
add
pop
sub
push
outsl
cmc
xchg
aam
cmp
push
jl
test
cmp
mov
outsl
jne
lcall
movsl
jp
pxor
push
mov
mov
sbb
mov
dec
sbb
or
idiv
or
lcall
add
ret
xor
gs
add
jecxz
loop
xor
mov
testl
adc
add
aam
sub
hlt
jo
pop
cli
pop
cld
mov
xchg
mov
inc
mov
icebp
or
xchg
xchg
xchg
lods
jle
mov
mov
inc
pushf
jbe
adcl
jg
das
dec
push
clc
pop
jp
inc
dec
ss
cmc
jge
add
mov
mov
pushl
ljmp
movl
push
sbb
xchg
cmp
fcoml
das
call
cli
aas
test
add
mov
inc
test
out
sar
pop
ljmp
aad
sub
xchg
mov
cld
orl
mov
jnp
fiaddl
push
loopne
xlat
pop
jno
mov
mov
scas
dec
jp
xor
repnz
xor
testl
dec
and
cli
rcr
jbe
mov
movsb
mov
pop
mov
xchg
lea
xchg
cmp
stc
pop
cs
push
arpl
popf
movsb
ljmp
repz
cmp
outsl
ljmp
jbe
std
jg
cmp
movsl
out
call
loop
das
je
mov
mov
and
sti
mov
pusha
ja
mov
jg
and
or
lods
push
xlat
jmp
jg
aam
mov
mov
inc
rcrl
sbb
rol
ja
push
jmp
js
pop
sbb
push
in
in
xchg
test
mov
outsb
push
xchg
cmc
daa
addb
add
mov
loop
inc
ret
jae
aad
jp
jecxz
int
sub
and
mov
xchg
pop
cli
pushf
push
pop
fwait
adc
xchg
jb
adc
inc
ret
dec
fiadds
shl
dec
or
outsl
xlat
js
popa
and
push
hlt
jg
sub
mov
jmp
mov
push
mov
test
nop
inc
das
ret
lock
or
pop
pop
push
stos
inc
cmc
std
adc
jns
xor
lods
scas
int
mov
sub
scas
je
push
in
data16
lea
call
jg
aam
pop
fiadds
ret
adc
jmp
adc
ds
cmpsb
not
mov
inc
adc
loope
out
and
iret
inc
mov
ds
mov
push
mov
ret
sub
cli
jp
cs
lods
xchg
pop
cmp
mov
pop
pop
into
cmp
adc
push
add
sub
add
incl
pop
fnstenv
adc
jge
push
std
and
mov
pop
jmp
push
sbb
jle
push
test
mov
fwait
loop
rclb
adc
jmp
fbstp
cmp
out
ss
inc
xor
andl
and
gs
lcall
movsl
mov
dec
cmp
xor
or
inc
cmovp
add
adc
call
mov
sbb
xor
mov
cmp
mov
or
or
incl
dec
pop
lahf
pop
and
lods
pop
sbb
pop
mov
lcall
inc
outsl
ss
mov
int3
fsubr
xor
push
adc
cmpsb
and
pushl
fcmovnb
in
sti
xor
dec
jnp
arpl
sbbl
repnz
sub
and
lahf
imull
jmp
aad
or
jb
out
cmpsl
fisubrs
mov
loop
gs
bound
xchg
aad
je
push
call
insl
push
pop
out
call
or
dec
pop
std
jg
std
ljmp
js
outsb
jge
mov
jl
std
maskmovq
testl
std
xchg
clc
jg
xor
aas
push
outsb
push
push
xor
cmpsb
cmc
ud0
jle
ja
stos
int3
xchg
xchg
ret
jnp
or
xchg
jmp
jecxz
jno
xor
idivl
ja
lret
mov
jmp
pusha
jl
cli
cmpsl
adc
jle
jg
loopne
pop
inc
lods
std
and
ljmp
lret
in
sbb
xor
je
dec
adc
loopne
rcr
call
lock
incl
out
cmpb
mull
test
or
and
test
outsl
cmp
sbb
pushl
fidivrl
fnstsw
pushf
push
push
or
push
das
outsl
fadds
mov
lock
decb
cmp
push
aaa
mov
add
lcall
jp
inc
xlat
data16
adc
xchg
inc
cmpsb
in
outsl
cwtl
cmp
lcall
jl
inc
jb
mov
xchg
mov
mov
xchg
in
mov
push
mov
pushl
push
xchg
fcomps
jge
or
imul
stc
lea
clc
jg
rorb
add
xchg
or
mov
or
jp
subl
rorl
out
jne
fimuls
push
dec
mov
subl
and
jp
xor
or
stos
mov
call
push
or
xchg
add
xchg
fdivs
adc
inc
pushl
scas
xchg
aaa
imull
pushf
hlt
push
test
pop
sub
ljmp
loopne
aaa
or
xor
inc
cmpl
notb
dec
lock
ja
call
mov
test
or
sub
and
pop
mov
lods
jmp
push
dec
or
inc
arpl
pop
mov
movsl
dec
in
xor
jmp
cmp
push
mov
mov
insb
popa
mov
sub
imul
out
inc
addl
test
adc
jmp
pushf
dec
and
ffree
cmp
jnp
insl
mov
xlat
cmp
jmp
xchg
rclb
aam
aad
shl
leave
out
stos
cli
push
push
inc
dec
mov
addr16
cmp
jae
ret
out
jg
arpl
inc
sti
push
lcall
xlat
mov
scas
fwait
mov
inc
ret
pusha
enter
adc
pusha
test
pop
clc
incl
mov
dec
test
push
sub
adc
dec
in
push
imul
test
aad
fsubrs
mov
out
fs
sub
push
jp
and
aaa
and
sbb
dec
ss
mov
pop
jbe
dec
test
dec
pop
add
inc
jp
test
pop
jmp
std
fldl
and
cli
arpl
test
sbbl
inc
sub
stos
mov
mov
jo
inc
roll
adcl
mov
sti
cld
and
xor
enter
dec
jecxz
decl
repnz
sbb
push
or
lods
int3
xor
jmp
pop
cmp
shlb
add
ss
push
lret
or
cwtl
repnz
clc
mov
or
mov
jp
and
mov
pop
jg
in
jg
aaa
ret
jb
or
ficomps
jne
or
lock
shll
xchg
xchg
movsb
and
inc
shl
cmp
repnz
push
mov
jb
sbb
mov
stc
les
add
rclb
add
mov
orl
pushl
xor
xor
cwtl
jcxz
inc
push
ljmp
inc
lcall
mov
addr16
cmp
mov
lcall
jmp
mov
jecxz
inc
sbb
jnp
pop
fucomip
adc
fistpll
jns
sbb
dec
fldt
iret
dec
ficompl
out
push
xlat
lea
decl
dec
push
pop
cmp
cli
testl
popf
cmp
les
es
add
nop
mov
test
ljmp
ja
shll
icebp
in
sbb
movsl
push
cmp
mov
sbb
fstpl
xor
sbbb
cmp
call
stc
pop
bound
clc
or
ljmp
fsubl
call
jb
and
es
ret
push
mov
cs
mov
movsb
popl
jg
incl
cmpsl
mov
inc
lds
lahf
mulb
jnp
fisttps
fadds
pop
or
mov
std
mov
mov
ficompl
sub
add
mov
das
xchg
lahf
sbb
mov
ljmp
sar
lcall
std
adc
orl
lds
pop
sub
test
or
out
lcall
cmp
test
jae
jg
movsb
push
push
push
cmp
mov
iret
popf
or
incl
rorb
bound
lea
and
sbb
dec
test
sarb
lods
pushl
es
mov
ret
out
jmp
jno
test
das
push
adc
mov
movsl
or
hlt
xor
jg
add
imul
test
push
shrl
call
push
add
aas
mov
call
push
out
jb
decl
jle
out
push
loope
cmp
push
fwait
xor
sub
call
mov
push
nop
ficoms
sbb
xchg
shlb
mov
mov
mov
push
mov
rcl
pop
clc
mov
xchg
xor
arpl
pop
lcall
push
mov
dec
subb
push
ljmp
jno
int
pop
fisubrs
jmp
xor
jp
rcrb
js
insl
inc
dec
mov
inc
xchg
inc
leave
jl
sub
pop
lahf
std
mov
ljmp
add
sahf
icebp
pushf
sub
pop
pop
jns
testl
inc
push
or
std
cmp
data16
jo
mov
mov
sti
pop
loopne
aaa
xchg
sti
xchg
inc
and
cld
mov
lock
jle
xor
and
push
lahf
iret
pop
pop
jp
mov
inc
int3
mov
inc
xorl
frstor
lret
sarl
das
fcompl
fdivrl
call
sub
sub
jle
inc
cmpsb
inc
cltd
test
decl
add
ret
jecxz
addb
and
in
lcall
mov
mov
xor
xor
mov
adc
test
add
cs
flds
dec
mov
xor
bound
test
mov
mov
mov
jns
sbb
cmp
mov
sbb
popa
mov
xor
adc
dec
scas
out
stos
inc
push
es
hlt
dec
in
mov
dec
sarb
imul
out
loop
cmpsl
mov
sbb
jmp
hlt
pop
stc
dec
data16
aad
fwait
add
ss
loop
cmpxchg
lcall
insb
xchg
fistpl
mov
pop
xor
scas
arpl
sbb
jae
and
add
iret
cmp
xor
fisubl
lods
push
test
mov
or
sbb
add
daa
sbb
xor
jae
aaa
scas
test
lock
decl
add
inc
flds
lds
or
mov
lcall
pop
lds
mov
cld
xchg
test
rclb
jns
mov
jo
mov
sub
pop
subb
fisttpl
int3
cld
ja
in
lock
incl
test
jl
jnp
jne
push
pop
ljmp
adc
call
mov
dec
out
loopne
mov
jge
mov
imul
lods
cwtl
iret
loope
mov
fldcw
cmp
out
aas
xlat
sar
decl
jmp
stos
ljmp
jecxz
jnp
push
clc
cltd
out
cmp
sbbl
mov
aam
stc
push
add
mov
lock
pop
or
loopne
lcall
mov
cmp
dec
pop
mov
int
imul
or
cwtl
scas
decl
jmp
inc
rcl
sbb
pop
pop
or
lcall
cmp
adc
mov
xlat
lcall
push
stc
fsubrs
inc
arpl
fstpt
pushf
test
leave
data16
pop
decl
dec
cwtl
mov
push
mov
pop
lret
cld
and
jno
jbe
fyl2xp1
mov
jg
cmp
inc
out
jmp
loopne
ret
out
pop
lock
incl
inc
daa
movsl
aam
movsl
sub
and
pop
lahf
xor
sbb
pop
call
xorb
mov
adc
adc
xchg
loope
push
insl
inc
shll
ljmp
jmp
and
pop
sub
jns
test
fldcw
sub
cli
sbb
sub
push
mov
sub
cmp
clc
arpl
mov
daa
mov
ljmp
mov
test
sub
pop
popf
subl
dec
mov
jle
jmp
rclb
mov
xchg
and
jne
nop
mov
movsb
loop
mov
pop
jmp
mov
adc
xlat
lret
insl
mov
std
cmpsl
aam
lods
mov
push
jne
inc
xor
xor
cwtl
sub
dec
mov
mov
and
mov
pop
add
dec
loop
stos
loop
sub
push
dec
sbb
mov
pop
lret
out
cmp
jmp
mov
push
dec
mov
xchg
xchg
movsl
mov
lds
incl
scas
loop
mov
daa
jnp
sub
pushf
jmp
cwtl
add
mov
loop
cmc
xchg
jnp
cmp
xor
dec
pop
arpl
repz
jg
lcall
mov
cmp
pop
cli
dec
stos
ljmp
sub
clc
ljmp
adc
jno
and
jno
jne
xchg
ja
pop
sub
incl
push
pop
mov
sub
nop
leave
cli
daa
pop
adc
repz
jmp
movddup
jae
cmp
jge
lret
cmp
add
int3
test
loopne
jns
jmp
mov
adc
fstl
pop
mov
push
xchg
sbb
add
ds
test
jae
pop
inc
test
ror
adc
or
stos
mov
jg
add
loope
mov
clc
adc
stos
and
sti
cld
dec
xchg
jecxz
gs
test
xlat
xchg
sbb
test
inc
add
pmulhuw
aam
inc
decl
test
sbbb
incl
sbb
jp
jge
sbbl
xor
cmp
mov
jecxz
cmp
out
scas
inc
pop
inc
test
icebp
pushl
sub
fnstcw
pusha
lods
mov
repnz
sbbl
mov
mov
incl
push
or
inc
lcall
outsl
testl
call
inc
inc
xchg
add
xor
fiaddl
scas
popf
leave
mov
lahf
aad
inc
dec
dec
adc
mov
mov
lods
push
cmp
add
sub
mov
pop
xlat
std
pop
sbb
movsl
add
push
fwait
mov
hlt
fisttps
fwait
dec
bound
dec
xchg
pop
mov
mov
clc
ljmp
xlat
dec
mov
cmp
cld
adc
incl
stos
ds
jge
cmp
xlat
mov
pop
mov
xchg
push
inc
imul
lea
jmp
dec
daa
adc
sbb
jmp
cmpsb
int
pop
iret
adc
lahf
mov
shr
mov
inc
daa
push
les
jle
xchg
iret
clc
fucomip
das
jnp
fs
mov
adc
sbb
or
ljmp
fdivl
xor
adc
jge
jo
aaa
jle
sub
push
sub
ljmp
xchg
into
scas
stos
sub
lea
mov
fimuls
jle
mov
ljmp
and
ja
insl
imul
call
jmp
mov
call
inc
andb
mov
sti
mov
mov
es
xchg
mov
addr16
call
idivb
int
xor
gs
xchg
mov
or
in
decl
sbb
mov
mov
stos
fcomp
aaa
add
cmp
lret
pop
mov
push
xchg
cmp
decb
jns
and
pop
mov
enter
xor
decl
and
int
pop
fisubrs
cltd
js
sbb
mov
cld
mov
imul
or
pushf
mov
sub
std
xlat
daa
stos
or
jne
mov
mov
outsl
push
rclb
lcall
mov
mov
sbb
cmp
push
movsb
mov
outsb
jae
subl
adc
cmc
fsubl
clc
mov
test
mov
std
leave
mov
bound
add
or
dec
sbb
xor
and
jle
xchg
lock
stos
pop
xlat
push
xchg
jl
lcall
lods
push
or
incb
jne
arpl
add
push
pop
cwtl
push
push
mov
lock
ja
shl
adcl
mov
and
sub
sub
xor
inc
into
outsl
xor
movsl
push
adc
cltd
out
lcall
inc
pushf
mov
out
lea
lcall
xchg
cmc
mov
mov
pop
lods
ds
loop
lcall
cltd
add
out
fidivrl
lcall
push
jns
mov
push
ss
mov
xchg
adcl
jg
call
push
loope
cmp
push
or
ss
cmp
push
xchg
aam
jmp
mov
pushf
inc
lret
push
insb
xor
mov
jmp
shlb
mov
lahf
addr16
das
sub
mov
sbb
sbb
call
loop
call
mov
push
or
inc
sub
xchg
mov
jg
xorl
test
mov
jg
inc
fldt
in
xor
push
xor
xchg
clc
pop
cs
push
outsl
sbb
dec
xchg
lea
gs
jmp
jns
xchg
in
inc
push
xchg
daa
movsl
mov
stos
mov
jmp
adc
leave
mov
in
jge
in
pop
stos
mov
push
xchg
xor
aas
in
xlat
mov
inc
shll
mov
loop
jno
push
push
scas
xor
cmpsb
jecxz
push
mov
insb
sbb
push
adc
add
and
or
cmp
pop
movsb
es
push
cmp
lcall
pop
pop
or
mov
popa
pop
mov
fisttpl
pop
mov
ret
cld
push
pushl
jmp
gs
inc
xor
inc
dec
push
lea
fistl
andl
fstpt
and
xchg
test
test
pop
lods
mov
cld
jg
ret
inc
xchg
xchg
inc
pop
cmp
rcll
sub
jg
movsl
sbb
lret
bound
fidivrs
mov
test
xchg
xchg
jg
xchg
xor
mov
mov
add
lcall
scas
add
sbb
inc
loopne
outsb
adc
ljmp
es
sbb
mov
adc
pop
cli
jne
sbb
mov
lock
jg
aas
mov
imul
lahf
dec
ljmp
jmp
les
mov
xchg
xchg
inc
sti
pop
inc
lret
bnd
movsl
hlt
pop
clc
decl
push
cmp
test
repz
sbb
mov
ljmp
mov
js
jmp
inc
out
aaa
dec
roll
fsubrl
mov
pop
push
xchg
movsl
ljmp
push
adc
lods
xchg
int
shrl
js
and
incl
adcl
cli
mul
inc
mov
std
js
cmp
dec
pop
ljmp
xchg
ss
inc
jmp
jp
xor
sub
in
dec
xchg
mov
jmp
mov
jle
sub
jmp
mov
push
nop
adcb
jg
or
mov
inc
push
cmc
mov
scas
mov
loop
cmpsl
mov
jle
sarl
in
les
in
cmp
out
popa
push
arpl
pop
dec
mov
mov
pop
and
fwait
or
cltd
mov
push
mov
jecxz
dec
in
data16
dec
icebp
out
pop
push
cld
call
fsubrs
push
push
xchg
mov
out
xor
das
decl
aaa
cmp
leave
cmpsb
xchg
push
fstpt
dec
mov
das
push
mov
inc
les
rcrb
dec
std
mov
xchg
xor
push
xchg
insl
sub
lods
xor
incl
pop
pop
dec
js
or
mov
cmp
pop
in
jo
jnp
fistpl
pop
movsb
mov
outsb
cli
fnstsw
dec
lcall
call
jecxz
mov
aam
adc
mov
push
sbb
mov
pop
mov
inc
sti
cs
gs
pop
cmp
push
leave
enter
pop
aas
iret
xor
sarb
cmp
or
lcall
mov
hlt
pushl
cmpsl
mov
arpl
test
rolb
xchg
mov
inc
movsl
xchg
dec
xchg
inc
dec
test
mov
mov
lret
dec
popa
jnp
xor
int
cmpsl
push
add
inc
push
jmp
mov
dec
das
sbb
aad
lcall
shr
jae
mov
lret
mov
aam
repnz
test
sti
mov
push
movsl
ljmp
sbb
adc
dec
loope
mov
sub
lcall
shr
rcrb
out
ja
xchg
out
sub
lret
push
and
push
adc
jmp
and
xchg
jge
mov
mov
cld
sbb
mov
cmpsb
or
pop
inc
ljmp
dec
mov
mov
cs
daa
xor
mov
xchg
sub
sbb
decl
std
call
into
daa
jg
inc
jecxz
pop
loope
bound
inc
std
jl
aaa
push
adcl
or
push
sub
cmpsl
push
mov
popa
in
idivb
ficompl
hlt
ljmp
test
cmp
adc
add
enter
inc
xchg
test
decl
and
or
sub
int
or
mov
pop
call
clc
cmp
mov
nop
inc
ret
jnp
ret
andl
ja
adc
or
mov
lods
pop
jb
push
imul
rol
das
and
push
fimuls
sbb
push
push
out
lcall
mov
iret
fistps
pop
sub
ficoml
stos
cmpsl
int
out
mov
shlb
cwtl
adc
pushf
jg
xchg
push
xchg
in
paddd
je
pop
inc
in
adc
decl
das
xor
hlt
imul
xor
rcrl
scas
aad
insl
incl
pop
jp
xor
mov
xchg
in
mov
xlat
call
aaa
lcall
xchg
xor
cmp
pusha
add
test
icebp
push
jg
sahf
or
cmpsb
ds
sbb
xchg
push
and
imul
mov
incl
jne
dec
and
imul
mov
stos
int3
jecxz
xor
push
mov
dec
incl
out
add
or
mov
cwtd
mov
push
sub
leave
mov
cmp
decl
jl
outsl
jmp
popf
cmp
leave
cmp
je
repz
or
test
lcall
cwtl
cmp
mov
jg
mov
push
ja
pop
sbb
decl
pushf
sub
jnp
mulb
add
testb
orb
mov
adc
aaa
mov
cld
jl
push
cs
rolb
adc
into
ljmp
insb
pop
in
mov
xchg
leave
icebp
mov
or
aad
or
dec
loop
sti
fisttps
adc
std
ljmp
fstps
call
push
cmp
sbb
das
cmc
ljmp
sub
xor
movsl
inc
adc
and
mov
cmpl
in
mov
dec
hlt
dec
cmp
add
xor
adc
lock
call
shrb
out
inc
mov
stc
fstpt
jmp
clc
sar
xor
pop
call
push
ss
dec
sahf
addr16
sub
in
ja
clc
lcall
pop
pop
cltd
adc
int3
daa
mov
pop
jo
pushl
test
add
jle
bnd
aam
repnz
call
bound
aaa
pop
inc
outsl
inc
or
in
incl
ljmp
int
xchg
inc
je
dec
pop
dec
lock
adc
jg
test
adc
movsl
mov
add
js
adc
fsubp
mov
cmp
iret
mov
ja
je
rol
cmpsb
and
add
dec
lds
lcall
les
pop
aad
sub
sbb
and
orb
incl
jl
jg
shrb
popa
jbe
inc
push
mov
lret
and
and
mov
call
add
movsl
enter
in
dec
movsb
cmp
fs
dec
xor
mov
mov
jp
pop
dec
or
shrb
jle
je
leave
pop
sahf
mov
ficoml
mov
call
lahf
cmc
addr16
pop
aaa
insb
aas
aas
in
sahf
mov
arpl
push
call
mov
nop
inc
cmp
jge
dec
push
loope
int3
push
repz
call
clc
inc
dec
bound
mov
aad
outsb
xchg
pushl
xchg
je
inc
decl
nop
sub
cmp
jp
mov
jno
aaa
icebp
cmp
clc
dec
cld
fistl
lock
rol
add
inc
xor
xchg
push
test
mov
shlb
mov
ljmp
inc
fcoml
fstl
cld
lret
sbb
sub
jnp
sub
cmpsb
adc
scas
dec
popf
dec
cmc
jo
mov
jg
sbb
ficomps
cmp
loopne
imull
neg
mov
into
mov
jo
ljmp
or
insb
leave
inc
adc
cwtl
rcrl
pushf
stos
mull
add
ja
lock
fadd
pop
mov
sbb
pusha
dec
pop
add
dec
ja
mov
jecxz
mov
pop
mov
insl
mov
jmp
fwait
stc
or
mov
add
pop
imul
cmp
cmp
add
bound
stos
call
in
cmpsb
or
fnstsw
xor
add
sub
dec
jg
fimull
cmpsl
inc
ret
add
add
out
fcoms
push
sub
call
add
test
pop
cmp
jecxz
adc
sub
pop
int
fs
and
mov
call
dec
xor
or
lret
xor
push
add
pushl
ficoml
in
mov
pop
sub
mov
xlat
pop
in
xlat
dec
add
std
idiv
fxch
sbb
xchg
movsb
ss
fdivl
and
inc
cmp
rolb
add
clc
aad
mov
mov
mov
mov
sub
xchg
das
lods
into
xor
sahf
mov
jns
repnz
ljmp
loopne
mov
mov
lahf
jne
add
push
mov
orps
outsb
cmp
jl
inc
sub
imul
xor
or
in
dec
fistpll
pop
rolb
sub
gs
daa
ffreep
mov
out
and
pop
fistpll
lcall
dec
cmp
inc
rorl
xchg
punpckhdq
mov
dec
and
xchg
imul
lds
push
je
sbb
inc
incl
and
cwtl
out
jl
das
jne
push
rorb
loopne
pop
adc
lahf
inc
mov
nop
lret
mov
test
sbb
les
add
add
push
movsb
xor
and
push
or
lcall
and
fsubs
and
lcall
test
div
mov
jp
jp
arpl
adc
test
test
sbb
filds
push
fucomip
and
adc
sahf
movsl
shrl
jg
decl
inc
inc
jmp
out
add
aad
cs
mov
cmpb
dec
leave
filds
pushl
cli
incl
push
xlat
rcrl
xor
lock
js
jae
fldcw
pop
rcll
insl
push
jle
xor
out
push
mov
das
std
lock
loopne
jmp
test
xor
fwait
pushl
xchg
sub
pusha
cmp
das
out
in
lea
test
imul
call
rcll
pushl
mov
and
ss
or
decl
pop
xchg
js
cli
popa
mov
jbe
pushf
adc
fbstp
out
outsl
hlt
mov
ja
xlat
push
push
icebp
pop
mov
aad
mov
imul
lcall
cld
cwtl
stos
jae
pop
pushf
mov
in
xor
xchg
push
and
out
imul
call
jb
add
rcll
shlb
and
cld
mov
aas
jo
loop
push
scas
adc
push
xchg
ret
cmpsb
sti
push
incl
mov
jmp
jmp
pushf
lahf
dec
mov
mov
addr16
incl
scas
pusha
shll
outsb
lods
xor
ret
add
js
inc
lahf
aas
lods
mov
repz
or
and
stos
dec
inc
jmp
iret
sbb
jno,pn
jecxz
xchg
pop
or
lcall
sbb
icebp
or
test
dec
sbbl
stos
sti
pop
cmp
fcomip
add
hlt
lds
dec
fs
pop
data16
mov
js
mov
or
push
mov
jbe
imull
sbb
ja
mov
sub
dec
out
dec
mov
pushl
adc
sub
lcall
mov
pusha
pop
pop
imul
decl
add
in
push
mov
mov
mov
jae
cs
out
data16
or
mov
and
push
popf
fldt
shlb
sarb
lcall
int
add
push
in
and
lea
xchg
pushf
filds
in
sub
push
sub
mov
xchg
lods
inc
idivb
cld
insl
mov
pushf
int
stc
cmpl
cmpsl
mov
push
call
cmpsb
inc
ljmp
lock
out
push
add
mov
or
fsubl
mov
mov
jae
lods
or
dec
gs
adc
aas
fmulp
mov
fs
push
outsl
stos
pushl
data16
cs
jb
adc
pushl
nop
push
jbe
nop
nop
mov
mov
mov
add
add
lcall
sub
leave
repnz
daa
xlat
clc
out
cmc
inc
movl
mov
mov
ljmp
xchg
push
sub
dec
pop
mov
mov
cld
lcall
push
push
lcall
xchg
cmpsl
push
in
outsl
roll
xor
mov
dec
jo
mov
xchg
xchg
sub
inc
adc
push
and
mov
add
mov
inc
mov
lret
insb
popa
and
int3
les
divl
xlat
repz
cmp
out
push
jns
sub
mov
adc
stos
mov
fldcw
sub
mov
incl
enter
sbbb
test
data16
lds
push
fwait
adc
fildl
xchg
mov
jmp
movsl
and
decl
cs
sub
mov
ret
cltd
repz
mov
ja
mov
pop
sub
mov
xor
jae
call
jmp
call
add
in
mov
out
lea
mov
cmp
lcall
lds
movsl
adc
mov
mul
hlt
ja
xlat
jbe
adc
sbb
ljmp
movsb
mov
mov
push
cmc
mov
repnz
mov
test
pushf
cmp
fcmovne
mov
gs
cs
loop
cld
ljmp
icebp
repz
push
test
fdivrp
loope
int
scas
ret
push
daa
push
decl
and
sbb
outsb
cmp
mov
in
adc
push
adc
or
std
jbe
pop
das
sub
loope
insb
mov
rorb
adc
cmp
das
lock
sbb
js
jl
cmp
testb
lock
repnz
dec
lret
loop
insl
sahf
jbe
push
inc
pop
and
jbe
xchg
push
imul
mov
mov
and
and
subl
loop
lahf
les
push
out
daa
in
push
pop
mov
pop
nop
xor
jmp
ja
xchg
mov
mov
shrb
lock
xor
or
cmp
add
mov
mov
jmp
pop
movsl
adc
xchg
cmp
cli
ljmp
sub
ljmp
jge
fisubrl
fildll
add
and
outsl
mov
scas
fdivr
aaa
scas
mov
push
adc
mull
or
jmp
hlt
test
je
sbb
jmp
xchg
jmp
push
sub
es
cmp
or
je
sbb
sub
jg
cmp
push
movsl
jno
xchg
pop
jae
lret
shll
test
dec
sar
lcall
push
cmp
fwait
lahf
cmp
lahf
jle
push
fcomps
push
test
fdivrl
jb
icebp
test
xchg
or
xor
in
mov
jns
mov
fstpl
sbb
std
inc
loop
test
test
or
out
sti
mov
mov
rcrl
movsl
cmp
addr16
call
imul
sub
out
sub
and
lcall
jle
pushl
popf
ret
daa
mov
addr16
es
popf
mov
addr16
fisttpll
sahf
push
pop
lcall
mov
pushf
loopew
add
mov
outsb
adc
arpl
mov
call
inc
pop
ficomps
and
lcall
push
fsubrl
enter
fcmove
jbe
aad
loop
insl
sub
sbb
xor
sbb
mov
add
mov
inc
jno
adc
cmp
pop
cmp
mov
cmc
out
in
push
scas
sti
adcl
sarl
inc
lret
inc
shll
mov
or
call
fistpl
mov
pop
cmpsl
lods
xchg
insl
or
mov
out
call
repnz
xlat
pop
push
mov
popf
sahf
psrad
pop
into
push
pusha
pop
jg
aam
nop
add
lret
mov
jle
inc
rolb
in
mov
adc
call
cs
out
add
movsl
pop
ss
xor
fdivr
inc
jecxz
fsubl
push
and
aam
leave
daa
sub
outsl
insl
push
test
ret
pop
add
sbb
clc
ljmp
rorl
loope
cmc
scas
jns
cmpsl
mov
rcrl
add
or
movsb
enter
cmpsl
jb
test
xor
daa
je
imul
adc
hlt
mov
jmp
mov
insl
pop
arpl
add
dec
ljmp
out
mov
scas
sbb
xchg
es
or
sub
mov
ljmp
or
lret
lahf
test
lds
mov
cmp
mov
out
mov
lcall
cmc
xchg
or
ror
dec
es
pop
add
jnp
xor
mov
cmp
cmp
pushl
loope
std
aam
hlt
cmc
push
xor
je
hlt
mov
enter
fucomip
cmp
sbb
sbb
dec
outsl
ja
loope
push
mov
cld
adc
rclb
fsubl
push
and
push
mov
outsb
mov
lock
sbb
dec
outsl
fs
dec
les
in
stos
arpl
ljmp
lock
push
mov
push
orb
dec
stos
out
jge
orb
dec
rcrl
jg
pop
out
push
fstl
push
ds
cmc
and
sub
cmp
decl
cmpsl
testb
popl
lods
adc
sahf
jo
in
adc
ljmp
jp
dec
mov
jns
aaa
sub
and
cmp
inc
sbb
out
imul
mov
lcall
pop
push
in
cld
outsl
test
push
das
xchg
pop
pushl
pop
mov
incl
shll
or
es
rcrl
pop
mov
pushl
addb
lds
push
lcall
push
push
jl
pop
and
push
mov
cmp
mov
add
sbb
js
out
inc
pop
out
repnz
std
dec
movsb
push
ficoms
adc
lds
mov
mov
pop
sub
jb
sbbb
add
js
and
ljmp
dec
mov
pop
push
outsl
hlt
xor
call
cmp
inc
sub
mov
popl
mov
mov
clc
jp
mov
mov
clc
and
mov
pop
and
adc
or
xchg
loopne
pop
insl
add
mov
sbb
adc
or
push
jp
jg
jae
adc
cmp
clc
push
jle
xchg
mov
mov
loop
lods
cltd
inc
shll
and
pushl
dec
sti
push
testb
movsb
jno
into
cmpsl
in
into
out
shll
inc
cmp
es
decl
ljmp
addr16
jg
mov
decb
sbbl
jbe
inc
inc
call
cli
movsb
dec
sub
mov
shll
pop
sub
xor
xlat
test
in
mov
inc
cmc
cmpl
mov
pushl
xchg
mov
sbbb
mov
mov
addr16
inc
sub
sbb
stc
cmovns
lret
adc
push
in
xchg
shl
jmp
lcall
in
add
inc
sbb
and
inc
ds
push
adc
push
jg
outsl
notl
fsts
loope
stos
idiv
fdiv
jbe
call
imul
xchg
xor
sar
pop
jmp
or
jle
and
arpl
insb
popa
sbb
test
sbb
jbe
addl
int
and
jge
cmp
mov
mov
mov
pushl
ds
or
xor
pop
dec
int3
out
pslld
sti
addl
ss
call
push
outsb
jbe
inc
jae
popf
mov
scas
fistpll
test
mov
push
mov
addr16
dec
loopne
lcall
add
cmp
loop
out
mov
icebp
xor
pushl
icebp
in
jae
cmp
mov
test
cmp
dec
stos
mov
pop
je
sub
push
adcb
ljmp
jg
dec
adc
push
lds
pop
and
aaa
jle
clc
dec
pushl
fadds
pop
xor
cmovs
decl
jbe
cmp
mov
adc
pusha
pop
jb
xchg
ret
jbe
mov
insl
ret
nop
inc
push
lock
pop
iret
decl
aaa
pop
adc
inc
adcl
mov
mov
fbld
imul
int3
ljmp
jge
inc
outsl
push
rcr
or
arpl
into
test
mov
incl
push
sub
repz
xchg
sbb
push
lcall
fisttpl
mov
pop
fnstsw
push
push
lock
xor
sarl
leave
xchg
mov
ficompl
ljmp
hlt
dec
xchg
push
inc
in
das
repz
cwtl
xor
test
cmp
out
cld
pushl
daa
stos
fstps
dec
int
add
jno
or
jb
jge
decl
push
adc
adc
push
xchg
push
xchg
mov
mov
add
aad
jle
and
dec
add
insl
add
in
adc
lcall
into
mov
mov
addr16
fwait
pusha
clc
addr16
dec
fsub
xchg
iret
aaa
dec
movsb
pop
test
dec
jnp
ljmp
lahf
rcrl
test
incl
xor
lahf
xchg
mov
jecxz
jl
and
shl
jae
mov
jle
imul
jo
in
fs
bound
mov
dec
mov
jg
xchg
ds
or
or
in
pop
insb
sbb
aaa
inc
add
mov
roll
xlat
xchg
or
fisubs
cld
adc
mov
push
incl
test
and
ret
pop
inc
inc
data16
and
shlb
mov
or
mov
idivb
dec
sub
mov
xlat
call
jmp
outsl
push
cmpb
xchg
inc
mov
rorl
mov
lahf
xchg
adc
decl
sub
xlat
std
jecxz
jp
mov
les
je
jecxz
lret
bound
loop
jns
mov
add
dec
cld
push
aaa
sub
test
mov
and
cli
xchg
lret
outsl
and
xor
cmp
pushl
lods
std
jo
xor
test
cwtl
pusha
push
xor
pop
pop
into
idiv
call
dec
aaa
xorb
pop
jnp
js
push
hlt
fwait
incl
cmp
clc
jle
push
pop
cmpsb
test
cmpsl
mov
jge
in
xor
out
or
xchg
test
adc
xchg
lcall
fistps
xchg
or
cmp
in
pop
mov
inc
xchg
idiv
mov
xchg
addr16
jmp
adc
mov
in
cld
add
xor
out
and
sub
lods
pop
mov
decl
out
jmp
adc
jmp
xchg
sub
mov
and
cmp
cmpsb
clc
ljmp
aaa
jle
or
sbb
dec
jge
jns
sub
std
cltd
sub
movsb
test
sbb
mov
fisttpll
mov
inc
rolb
out
movsb
mov
adc
jmp
adc
popf
mov
mov
cltd
jnp
dec
in
hlt
jae
call
lods
rorl
cltd
push
adc
or
movsl
push
xchg
sbb
roll
adc
mov
movsb
pushf
mov
or
dec
scas
leave
shll
ljmp
subb
pop
xchg
and
scas
inc
fwait
mov
mov
inc
mov
es
in
dec
xlat
and
loopne
cmpsb
jg
test
movb
push
mov
pop
push
and
mov
in
iret
fiaddl
imul
sti
sbb
xchg
xlat
dec
jl
and
stc
sbb
push
ret
inc
jnp
jo
adc
cmc
ds
cmp
sarl
add
push
dec
pushf
or
jno
xchg
mov
pop
call
in
clc
dec
add
ljmp
les
loopne
hlt
mov
call
lock
pop
jle
xchg
fdivr
mov
aas
xor
push
pop
inc
pop
loope
stos
leave
cli
fwait
xor
xor
int
xor
es
shrl
cmp
insb
gs
out
mov
cmc
jg
xchg
and
cli
outsl
decl
sbb
in
pop
fisubrs
xchg
dec
jle
inc
call
adc
mov
jno
jle
out
xor
mov
pop
rorl
inc
hlt
jmp
mov
out
xchg
adc
loopne
sub
inc
hlt
cld
or
mov
rcl
call
pop
into
stos
inc
jae
cwtl
lds
cmp
into
popa
aam
inc
ljmp
fucomip
icebp
mov
outsb
loope
rcl
fdivrs
test
or
decl
mov
mov
push
adc
jp
sarb
lcall
arpl
inc
dec
addr16
inc
scas
sub
xchg
ja
xor
jne
inc
test
test
mov
test
push
adc
in
into
les
dec
loop
lods
mov
dec
lods
xchg
insl
cmp
jp
aaa
adc
jg
push
xchg
pop
xor
fcomps
lret
icebp
popa
mov
cmp
call
xor
jo
sub
push
int
jp
fdivrs
fimuls
in
push
mov
adc
clc
call
pop
jmp
pop
dec
jns
std
lcall
fldt
aaa
idivb
xor
mov
std
clc
add
mov
idiv
imul
fs
add
xchg
push
imul
daa
ds
loopne
push
mov
bound
sbb
outsb
mov
rorb
mov
fidivs
cmpsb
jno
imul
jg
cmc
lahf
or
lock
repnz
mov
call
push
in
shll
aam
rcll
pop
out
aaa
dec
jnp
scas
dec
sti
pop
in
cmpsb
mov
sbb
cld
ljmp
fs
xchg
gs
push
push
or
inc
outsl
xchg
pop
lret
lods
adc
lret
sbb
decl
mov
jo
sub
pop
cmpb
push
jmp
sub
push
cmp
call
sub
stos
shrb
push
cmp
ljmp
sti
stc
cli
sahf
xlat
push
pop
insb
loope
cld
pushl
xor
cmp
pop
or
loop
xor
dec
lahf
stos
incl
cmp
xor
adc
mov
jae
ret
sar
jg
movsb
push
push
fiadds
mov
cmp
mov
out
outsb
pop
aam
mov
pop
jmp
pushl
stc
pop
dec
mov
or
dec
or
loope
pop
push
and
mov
jae
pop
xchg
lcall
das
daa
sub
mov
sub
call
cmpsl
push
xchg
xchg
lcall
add
add
xchg
lret
scas
jbe
and
fdivr
sbb
aam
jmp
push
sub
adc
xchg
outsl
stos
fisubs
mov
scas
mov
add
inc
popa
stos
loopne
cwtl
fdiv
mov
xbegin
cs
pusha
dec
lcall
in
mov
ja
and
out
mov
lods
roll
repz
jge
lahf
jmp
cmp
fdivs
cli
aam
jecxz
lock
ljmp
icebp
call
test
inc
jb
mov
fstps
int3
js
mov
jg
lcall
mov
sbb
bound
mov
and
cltd
cs
ljmp
mov
mov
mov
add
sarb
repnz
lcall
outsl
out
lcall
bound
add
fistpll
out
stc
xchg
push
mov
push
and
in
and
add
fcoml
or
incl
sub
popf
movsb
fcomps
mov
xor
iret
jb
and
fcoml
mov
xor
daa
out
lods
loopne
xchg
sub
in
mov
stos
mov
sbb
lret
daa
mov
push
jge
lahf
dec
sbb
les
push
daa
add
movsl
sub
sub
hlt
test
adc
fucomip
scas
sub
int
mov
fucomip
fidivl
icebp
cli
daa
mov
inc
add
pushl
mov
aad
xchg
mov
scas
loop
cmpsl
sbb
pop
dec
stos
movsl
mov
decl
cmc
call
ljmp
pushf
cltd
in
out
test
fcomps
lods
ljmp
pop
popf
dec
dec
pop
cmp
ret
sbbb
incl
jecxz
test
cwtl
push
leave
mov
mov
mov
jg
call
lock
xor
das
arpl
sub
std
ficoms
or
js
cld
ret
movsb
jnp
xor
mov
inc
fsubrs
push
add
mov
shll
ret
mov
inc
and
in
fwait
orb
jg
xchg
push
jge
push
jno
and
xchg
daa
sbb
sbb
popa
inc
call
jecxz
jae
dec
xchg
mov
pop
xchg
mov
repz
inc
adc
imul
inc
ja
cmp
pusha
iret
and
xchg
sbb
ljmp
or
aad
stc
dec
mov
mov
sbb
out
test
jne
mov
and
pop
mov
jmp
mov
stc
dec
pop
inc
aaa
mov
or
test
jmp
xchg
sub
aad
mov
pop
cmp
sbbb
push
test
gs
push
xchg
test
call
idiv
out
dec
jno
movsb
push
js
push
push
in
aad
and
push
stos
cmp
sbb
add
call
add
movsl
push
mov
ja
out
addr16
incl
mov
hlt
add
dec
push
outsb
cmpsl
push
inc
sbb
push
decb
popf
push
aam
cs
and
fucomip
push
addl
lods
mov
pop
loop
inc
stos
ja
mov
sbb
xor
daa
out
sbb
movsl
push
xor
xchg
scas
mov
add
push
mov
ret
dec
jnp
popf
pushl
js
pusha
in
loopne
mov
xchg
aad
call
jecxz
fmul
movsl
das
icebp
dec
pushf
pop
movsl
adc
xchg
insb
mov
cmp
jmp
ja
popf
jb
dec
jmp
rclb
int3
leave
mov
incl
mov
adc
out
cwtl
out
cmp
xchg
std
mov
cwtl
outsb
out
ljmp
mov
clc
push
xchg
mov
test
pushl
imul
mov
mov
stos
sahf
lcall
or
decl
mov
pop
and
outsl
adc
fistpll
mov
sar
mov
push
xor
xchg
dec
iret
mov
xchg
mov
cmp
lcall
xchg
cmp
dec
loope
nop
mov
and
mov
jmp
adc
mov
aad
mov
push
mov
sbb
sbb
call
addr16
push
xor
mov
clc
out
into
fnstsw
pop
add
out
mov
mov
cmp
das
popf
jp
cmpl
shlb
add
in
adc
adc
iret
cmp
add
loop
clc
cli
xchg
shrl
insl
nop
nop
insl
fcompl
xor
xchg
mov
decl
cmp
pop
es
pop
hlt
cmp
test
push
or
mov
popf
mov
add
loop
mov
ret
and
call
bound
cmp
rcll
call
inc
push
ja
loope
mov
mov
lret
aam
sbb
add
popl
fdivr
jmp
sbb
push
mov
jae
outsl
and
ljmp
outsl
or
or
fwait
stos
std
aas
mov
add
dec
popf
out
notb
mov
jecxz
jg
sti
std
jo
lret
and
cld
fnstsw
cmp
mov
ss
cmp
push
pop
cmp
incl
cmp
popa
pop
inc
cmp
int3
inc
lods
push
jne
bound
bound
and
lcall
mov
fwait
cmp
aaa
shrl
into
mov
fwait
inc
call
sbb
fsubrl
lcall
jecxz
xor
push
insb
ds
sbb
or
stc
pop
xchg
inc
cmp
adc
jg
mov
enter
clc
mov
mov
mov
pmaxsw
jmp
mov
into
inc
or
push
shll
jns
push
mov
dec
mov
div
and
ljmp
sbb
mov
mov
dec
mov
dec
xlat
ret
imul
lods
outsl
lock
es
lds
lock
movsl
mov
subl
dec
inc
mov
mov
pop
repz
faddp
out
or
jae
pop
lret
mov
cmp
jg
shlb
add
pop
lcall
pushf
dec
sbb
push
cmp
xchg
sahf
ljmp
stc
cmp
imul
inc
ret
cmp
je
pop
decl
mov
filds
mov
bound
jne
jmp
mov
pop
frstor
dec
sarb
pushf
bound
cmp
dec
outsb
pextrw
adc
push
xchg
test
add
test
mov
subl
push
fdivrl
push
lcall
clc
inc
ss
push
jge
mov
iret
into
or
push
cmpsl
jp
push
mov
cmp
repnz
in
xor
lock
jns
lret
mov
pop
into
push
aad
fsubrp
mov
lock
sub
enter
ds
jmp
mov
jnp
inc
adc
push
sbb
call
repnz
and
call
fisubs
jbe
sub
adc
fdivrl
ds
ss
ret
ljmp
fdivr
mov
repz
xchg
sbb
adc
push
jmp
inc
insl
jo
lahf
adc
cld
insl
std
jg
jg
xlat
mov
xchg
fcomps
xor
mov
xchg
decl
data16
xor
add
sbb
cwtl
xor
dec
cmpsb
loope
cmp
jp
mov
lcall
push
mov
repnz
gs
pushf
dec
jno
cs
xchg
outsb
sbb
and
or
sbb
mov
push
pushf
shll
test
jge
subb
mov
or
inc
out
test
mov
shl
pop
lods
icebp
fidivs
int3
push
sub
shlb
mov
ret
dec
lods
incl
outsl
sahf
outsl
ds
fidivrl
and
movb
lcall
push
adc
hlt
jbe
mov
jl
hlt
jg
fs
cmp
daa
dec
std
mov
and
push
jne
insl
push
jae
lret
ret
decl
inc
pusha
sahf
outsb
repz
insb
mov
cs
cmc
call
push
ja
adc
leave
dec
adc
xchg
or
test
jnp
sbb
cli
call
fcmovne
fldt
fisubrl
movl
push
mov
dec
movsl
and
lret
inc
dec
out
jg
mov
or
pop
xor
call
mov
pop
in
das
jo
and
cmc
add
jmp
test
and
mov
lret
add
mov
jle
popa
lahf
lods
stos
in
jmp
ljmp
sbbb
cmp
pminsw
mov
es
jmp
ss
das
mov
xchg
in
pop
or
test
call
xor
sbb
push
cld
sarl
jecxz
aam
adc
mov
aaa
inc
stos
inc
aaa
ds
popf
sub
xlat
or
leave
cmp
fnstsw
and
inc
shll
arpl
fcoml
add
pop
xchg
clc
ljmp
pop
sbbl
jne
xchg
mov
mov
enter
sbb
lcall
dec
aam
mov
faddp
push
xor
fwait
xchg
jle
lods
in
lcall
int3
sbb
ljmp
orl
and
mov
mov
pop
stos
mov
subl
jmp
push
outsl
add
xor
out
or
rep
imul
dec
pop
push
jge
scas
sub
das
stc
popf
addl
test
xchg
dec
dec
mov
jp
jge
scas
ja
cmp
leave
mov
inc
add
scas
and
lret
mov
call
in
clc
pop
icebp
pop
jp
repz
outsb
addb
inc
cmpsb
mov
js
xor
mov
cmpsb
es
test
push
popf
mov
dec
adc
call
aad
mov
sbb
insb
ja
les
pop
mov
or
mov
loope
jae
pop
test
mov
pop
jb
mov
decl
mov
lret
outsl
sbb
outsb
clc
in
ffree
div
movsl
sub
push
outsl
inc
adc
test
cld
ss
stos
fildl
testb
fs
sbb
or
xor
sti
sarb
cld
jno
decb
std
cmp
loope
mov
repnz
cmp
in
and
scas
sbb
mov
hlt
adc
fiadds
out
inc
and
or
test
jmp
mov
iret
dec
jnp
testb
sahf
mov
das
mov
dec
and
addr16
ja
jb
test
sbb
xchg
movsb
push
push
idivb
xor
aad
and
jb
shl
lods
lahf
mov
jnp
add
jmp
jnp
sbb
out
push
scas
push
jmp
movsl
push
adc
fcos
fsubrs
push
iret
inc
insl
aas
sbb
shrl
aam
popa
cltd
fs
lds
add
inc
inc
sbb
mov
jecxz
scas
adcl
xchg
ljmp
push
fidivs
arpl
test
shrl
cmpsl
inc
sub
cli
lcall
jo
mov
xchg
dec
mov
sub
adc
shlb
mov
fwait
loop
into
outsl
test
sbb
mov
mov
xor
adc
das
or
mov
out
out
dec
imul
outsb
adc
pop
loop
pop
xchg
jle
sub
mov
aaa
jne
dec
sbb
lahf
aad
cmc
jmp
shll
pop
imul
cmpsb
mov
dec
mov
and
push
std
add
enter
fimull
leave
sub
jmp
cmpsb
adcb
loop
shl
js
dec
pop
mov
ja
iret
pop
test
je
ljmp
cmp
jge
and
clc
or
psrad
sub
aaa
fstpl
and
push
lods
sbb
cmp
inc
adc
pop
imul
push
inc
testb
and
pop
mov
pop
ret
pop
sbb
add
pop
push
and
stos
sbb
das
fbld
dec
adc
popf
cmp
lods
jg
dec
push
jge
sbb
cmp
mov
or
outsb
fsubrl
call
outsb
or
adc
jb
in
xchg
in
clc
ret
dec
cmpsb
idivl
inc
incl
or
lret
fisubl
xchg
jp
adc
sbb
iret
and
outsb
push
inc
dec
ss
out
mov
fdivr
outsl
cld
decl
test
or
add
lods
sub
dec
cld
scas
loopne
nop
sbb
jmp
popf
in
inc
and
loope
test
imul
sti
and
cmc
pushl
adc
in
cmp
sub
lock
cs
icebp
das
pusha
stos
add
xchg
sub
pop
sbb
dec
jle
sbb
lcall
outsb
cltd
and
fistpl
aaa
loop
jno
jl
pop
and
pop
mov
pushl
jge
arpl
xor
js
xor
orl
out
data16
outsl
adc
jg
adc
mov
mov
jbe
sbb
cmpsl
fnstenv
ljmp
ret
jmp
ret
mov
cltd
mov
incb
jp
xor
lcall
mov
or
int3
ds
xchg
jecxz
add
das
leave
lods
jmp
clc
mov
adc
jge
xor
and
fadd
in
jbe
ds
jmp
xor
pop
jecxz
add
fcoml
inc
les
add
es
enter
sbb
jmp
inc
jecxz
imul
xchg
cmp
add
xchg
cmp
cli
dec
push
add
aas
sub
test
add
push
stos
addl
pushl
push
pop
pop
test
adc
fildll
jno
cli
clc
sub
lcall
scas
jg
hlt
sahf
lods
enter
call
iret
sub
hlt
cmc
iret
dec
imul
jne
call
push
and
fdivl
sbb
outsb
scas
pop
lock
pop
outsb
fisttpll
push
pop
add
test
fs
xchg
test
mov
jg
inc
lcall
pop
or
lret
cld
int
mov
cmp
fldln2
mov
cmpsb
or
pushl
mov
ja
sub
data16
lock
mov
popa
inc
leave
insl
iret
inc
out
sahf
and
jg
stos
mov
insl
dec
rcl
mov
mov
fildl
add
inc
push
and
and
sub
into
data16
jmp
sbb
movsb
add
jle
mov
xchg
call
in
push
leave
ret
cmp
cmpsb
push
cltd
jo
and
fsubr
cltd
cmc
popf
adc
jmp
nop
xchg
test
xchg
incb
mov
out
pop
mov
lcall
xorb
lods
mov
cmpsb
adc
ss
cmp
imul
outsl
mov
fnstsw
push
not
push
pop
xor
popa
pop
mov
nop
jecxz
decl
push
stos
aad
pop
dec
loope
in
mov
test
and
ficoml
clc
jg
int
and
pop
mov
es
mov
jo
ljmp
sbb
aam
outsl
das
lock
mov
mov
out
jecxz
stos
push
scas
movsb
in
decl
pusha
mov
test
lahf
mov
stos
lods
inc
sahf
daa
inc
xor
into
mov
call
repz
leave
mov
push
in
sbb
in
mov
sbb
shlb
or
jg
push
dec
pop
mov
dec
xchg
pop
in
jg
hlt
lds
sbb
lods
das
jmp
lcall
sub
xchg
insl
sbb
jo
sbb
pop
std
xor
insb
lea
adc
sbb
das
cmpsb
jge
arpl
push
andl
test
addr16
mov
mov
xchg
sbb
push
out
in
ljmp
cmp
or
aaa
aad
adc
cmp
sbb
movsl
das
lock
cmp
fwait
lds
enter
or
rcrl
jg
stos
mov
shll
test
dec
fdivrl
sub
in
ss
hlt
leave
sbb
cld
gs
mov
mov
or
mov
sub
ss
pop
inc
nop
aas
pop
inc
jmp
add
popa
testb
xor
ss
nop
lds
cmpsb
pushf
pop
ljmp
scas
adc
out
ljmp
cld
sbb
dec
xor
lea
decl
pop
je
jno
sbb
push
rol
or
mov
mov
jb
adc
cmp
repnz
out
cmp
stos
inc
mov
lods
mov
jne
sarl
push
or
call
fucom
int
push
jae
cmp
adc
test
mov
push
ret
jbe
shll
dec
push
push
sub
cmpl
lcall
jmp
pusha
into
push
adc
sar
mov
cmp
mov
add
cwtl
xlat
add
dec
fidivrl
or
pop
jl
loop
pop
das
jno
ljmp
and
lahf
int
push
outsl
xchg
out
out
adc
mov
push
cmp
lock
xor
daa
lds
ljmp
scas
jne
and
sbb
jae
lock
push
inc
inc
fnstenv
sub
xor
nop
jle
push
lahf
das
push
ljmp
inc
push
xchg
lea
and
and
subb
cs
fwait
pushf
mov
or
andb
fbstp
inc
xchg
pop
or
movsb
mov
jg
out
dec
mov
pop
shll
add
nop
js
pop
or
mov
scas
sbb
inc
nop
add
pop
and
arpl
cli
push
repz
xchg
fcmovbe
stos
out
dec
inc
ljmp
xchg
rcr
mov
cs
aas
sbb
divb
call
push
fcmovnb
fwait
lret
sub
pushl
cli
push
in
pop
pop
cwtl
cld
bound
hlt
and
inc
xor
jns
outsl
call
js
cmpsl
xor
lret
pop
sbb
aam
xor
decl
pushf
push
sahf
std
mov
cld
mov
scas
leave
rol
cld
lods
fildll
rol
mov
pop
mov
cld
lcall
xor
adc
sbb
popf
mov
jns
adc
fbld
add
movsl
mov
mov
mov
aas
cli
fadds
js
dec
das
adc
or
lock
mov
or
in
roll
outsb
jge
lahf
aas
nop
sub
add
nop
cmp
xchg
inc
orb
decl
dec
push
push
dec
leave
scas
gs
mov
mov
les
mov
iret
and
pusha
pop
pop
std
ficompl
mul
xor
cs
icebp
jne
xor
inc
cwtl
sar
das
cld
cs
les
pop
inc
test
mov
xchg
cmp
jle
nop
loope
or
testl
lcall
cmp
stc
jle
mov
arpl
aad
bnd
mov
fistps
jg
ljmp
iret
cs
dec
call
incb
pop
sbb
test
mov
cltd
loop
orl
xorl
pushl
ret
adc
xchg
test
or
dec
dec
cli
mov
xchg
cli
or
test
pop
lods
rcll
jo
cmp
orb
xor
fcmovu
fstps
xor
adc
data16
std
cmpsl
jne,pt
test
nop
push
xor
inc
and
fucomip
push
jmp
test
or
sub
push
addr16
ljmp
icebp
mov
cli
faddl
adc
inc
push
mov
adc
push
mov
mov
dec
fisubrl
xor
pop
shll
mov
frstor
xlat
sbb
and
or
jmp
popa
mov
push
dec
in
sbb
test
adcl
call
mov
nopl
jmp
in
cld
xchg
or
mov
dec
leave
pop
or
out
add
outsb
pop
or
and
inc
scas
cmpsl
cmp
je
pop
sub
or
in
mov
add
lds
jle
fstp
js
mov
mov
movsl
stos
mov
jge
and
dec
adc
inc
pushl
jmp
fxch
sti
ljmp
push
jmp
out
fwait
lcall
mov
inc
sub
hlt
and
mov
mov
out
in
insl
push
imul
push
dec
sbb
mov
loop
sub
rorl
cmpsb
clc
sbb
xchg
arpl
inc
inc
jno
decl
out
push
xor
push
adc
lock
mov
into
shl
push
aas
call
call
out
sub
pop
rclb
mov
cmove
and
dec
mov
jmp
popf
add
sub
clc
cmp
int
push
inc
fsts
dec
sbbl
lock
js
or
in
fidivrs
in
mov
scas
je
incl
jmp
repz
sbb
sub
pop
clc
jg
leave
stos
cmp
mov
je
in
cmpsl
mov
sbb
adc
add
rolb
sbb
out
cmp
test
int
mov
sub
xchg
incl
jp
cmp
sbb
subb
pushf
sub
xor
dec
push
out
mov
push
push
lods
movsb
push
cmp
pop
push
xor
scas
sub
outsl
fmul
cmp
cmpsl
ret
pop
iret
fcoms
and
and
hlt
mov
lcall
cld
fildll
rol
add
xchg
jp
mov
mov
pushl
or
pop
xchg
into
xchg
add
jl
dec
ds
aam
jl
xor
jle
push
mov
insb
int3
jnp
and
aam
in
cmp
jg
fstps
cltd
adc
ret
mov
bound
dec
mov
lcall
repz
fwait
cmp
jno
add
add
test
jp
jo
pop
movsl
jb
mov
decl
mov
sbb
js
inc
add
adc
cli
cmc
imulb
jg
lock
je
pop
popf
out
jne
jl
int
adc
cmp
cli
dec
popa
jbe
and
bnd
fnstsw
pushl
xchg
or
xchg
nop
jl
push
mov
add
lcall
xchg
adc
inc
lcall
or
lahf
hlt
outsl
je
pushl
xchg
aam
lock
imul
mov
out
idivb
dec
jg
pushl
int3
icebp
lea
dec
scas
enter
xor
ljmp
pushl
push
cld
out
pop
pushf
aaa
xorl
xchg
sbb
or
lcall
mov
iret
pop
push
sbb
cltd
pop
inc
or
xor
aaa
jl
xchg
decl
xchg
xor
mov
adc
sahf
in
std
mov
mov
incl
xchg
sti
loopne
int
lret
xor
stc
and
movsb
int
mov
std
lcall
enter
inc
inc
cmp
enter
push
jae
mov
push
loop
iret
sub
xor
fildl
jnp
or
lcall
fistpll
loope
mov
jno
push
push
fiaddl
jg
mov
aaa
shrb
mov
xor
sbb
imul
mov
push
cmpsl
fmull
xchg
insb
jle
ret
mov
outsb
mov
cmp
jmp
pop
mov
not
leave
mov
aaa
pop
pop
iret
mov
lock
pop
test
xor
call
mov
push
xlat
jg
sbb
ja
popa
movsb
mov
cli
and
mov
mov
jg
sub
pushl
rcl
push
aam
cltd
mov
dec
mov
ret
stos
inc
leave
cmp
mov
mov
push
fucomip
xor
pop
cld
neg
fwait
jo
cmp
lahf
fsubrs
popa
ds
push
push
fidivs
sbb
push
imul
das
into
pop
iret
xchg
pusha
jle
es
call
loop
arpl
cld
adc
push
mov
addr16
push
mov
adc
outsl
inc
cld
incl
mov
mov
and
enter
add
pushl
inc
mov
pop
pushl
shlb
sahf
or
lock
dec
or
aad
mov
ret
jb
add
adc
mov
cmc
pushl
or
or
dec
andb
loopne
iret
in
fstps
and
std
or
vcvttps2dq
in
cmpsl
mov
andl
adc
pushl
cli
fnsave
pushf
lcall
push
xor
test
mov
jg
add
dec
pop
mov
add
das
cltd
addr16
mov
ds
mov
mov
fisubrs
sub
stc
pop
and
sti
mov
aad
lods
sbb
outsl
std
call
ja
xlat
dec
jno
and
in
xchg
or
fs
or
sbb
call
out
xchg
lods
sbbb
sub
fwait
test
dec
push
add
lds
mov
popa
and
and
sub
xor
mov
movsb
loope
sbb
cmp
pop
jle
adc
in
orl
dec
or
pusha
cmc
jmp
push
adc
cltd
jle
shrb
enter
ljmp
iret
and
cltd
call
nop
add
jno
ljmp
adc
aad
dec
std
call
jmp
or
dec
sub
jae
out
or
incl
dec
std
xor
and
xchg
or
jae
pusha
jecxz
cmp
push
cmpsb
hlt
adc
push
lret
or
jne
jl
fidivrs
popa
sbb
test
mov
cli
call
scas
push
adc
push
mov
push
fidivs
bound
sbb
mov
mov
dec
outsb
sbb
neg
add
cmp
loope
xchg
pop
clc
jg
test
clc
cld
xchg
hlt
sub
mov
mov
mov
and
std
ret
sbb
lahf
jg
ljmp
ja
mov
lret
lcall
std
call
mov
xchg
cmp
aam
lods
xchg
push
or
js
xor
dec
rep
pop
lock
lea
jge
bound
cld
decl
cmp
add
je
lea
addb
push
mov
xor
ljmp
add
out
cli
mov
dec
popf
fidivrl
jbe
pop
lfs
and
push
pop
call
or
inc
cltd
or
fucomip
call
sarb
cmp
outsl
mov
xchg
das
fbld
in
ret
add
jmp
nop
lods
sub
loop
sub
sti
sub
xor
les
ljmp
loope
or
inc
push
lods
push
loope
gs
add
jg
sbb
lock
lahf
fnsave
out
push
out
ljmp
loopne
inc
insb
into
jns
mov
loopne
jbe
push
xchg
sub
stc
ljmp
in
and
jmp
clc
xchg
or
mul
push
mov
out
inc
in
in
xor
lret
decl
sti
pop
mov
test
imull
mov
sbb
aas
mov
jg
call
cmc
push
xor
mov
mov
cmpsl
xchg
ficoms
imul
mov
aas
scas
pop
cli
mov
lds
mov
cltd
jp
jbe
decl
push
mov
pop
jne
inc
fwait
icebp
out
loope
std
mov
inc
dec
ds
mov
out
and
pusha
mov
mov
insl
jo
mov
ret
std
pushl
xchg
xlat
xchg
xor
aad
mov
jg
adc
mov
push
out
pop
out
or
xor
call
pushf
imul
cmp
add
shrl
ds
pop
aad
loopne
decl
aaa
movsl
pop
mov
jnp
push
xor
int
or
cmp
add
cmpsl
mov
sti
ret
lods
adc
loope
ficoml
mov
push
into
jge
ret
pop
sub
pop
imul
les
push
stos
daa
mov
push
orb
pop
jg
sbb
xchg
push
outsl
fdivl
iret
les
jmp
jmp
xor
call
popf
inc
mov
mov
ja
sub
inc
adc
in
ror
push
pop
pop
sbb
jp
addr16
add
jg
push
ret
pop
lock
test
dec
std
dec
lds
mov
sub
stc
or
jbe
jg
pop
insl
sub
ja
cmp
insl
int3
xor
jl
pop
das
gs
das
hlt
movsl
ljmp
std
mov
inc
in
mov
std
incl
sti
and
js
sbb
add
lock
xor
jmp
pop
mov
out
add
fistpll
push
clc
notb
lahf
fidivs
incl
add
add
out
pshufw
fwait
push
mov
pushl
clc
mov
shl
xchg
insb
xor
adc
cmp
movsb
sub
ljmp
sbb
and
lods
dec
or
sbb
outsb
xor
subb
out
cmp
mov
stos
fdivrl
sub
sbb
mov
dec
xchg
xor
sti
and
pushf
lret
sub
adc
leave
std
xchg
aas
fs
mov
sbb
lock
pop
xchg
sbb
fists
xchg
sbb
jg
jge
mov
xchg
push
jns
dec
mov
cmp
aaa
and
mov
push
mov
push
shlb
inc
mov
idiv
jmp
repz
xchg
xor
sub
adc
jbe
dec
scas
ja
call
cmp
pop
sub
insb
mov
push
andb
loopne
dec
fucomip
jmp
cld
mov
lea
pop
mov
imul
movsb
scas
jl
loop
ljmp
lcall
imulb
orb
imul
xchg
add
movsl
fidivs
lods
mov
mov
js
addr16
jg
incl
divb
out
or
xor
cmp
jmp
les
dec
mov
call
sub
sbb
mov
loopne
mov
js
int3
insb
imul
mov
cli
jmp
and
add
pop
out
xchg
std
pop
call
test
xchg
pop
ret
cmc
arpl
fldl
mov
add
inc
pop
std
ljmp
mov
cld
loopne
push
sub
daa
lahf
sub
daa
mov
xor
or
ljmp
xchg
and
dec
xor
loope
jo
aad
mov
lds
cwtl
mov
shll
call
int3
andb
inc
push
scas
mov
sbb
mov
imul
call
dec
push
adc
stos
ljmp
adc
stc
xor
cmpsl
add
incl
xchg
dec
pop
xor
lds
xor
lcall
stos
or
pop
ljmp
call
mov
rclb
fs
call
cmp
mov
mov
mull
std
jnp
pusha
lret
add
add
sbb
push
fistps
std
push
or
push
mov
fcoml
or
push
add
std
incl
jp
cli
add
dec
cmp
inc
xchg
call
scas
xor
pop
lds
push
cmp
out
test
pop
cmp
jge
xor
adc
mov
jg
push
sahf
push
mov
jge
mov
leave
push
dec
mov
test
sbb
cmc
dec
sub
adc
clc
fldt
adc
inc
movsl
mov
mov
jg
decl
imul
iret
jp
in
push
pop
movsl
lods
cmp
lods
mov
out
dec
cmp
pop
clc
push
push
loope
insb
shld
fistpl
jge
mov
repnz
fcomps
sub
xlat
sbb
popf
fwait
inc
dec
pushf
xchg
or
mov
aam
in
in
xlat
xchg
scas
push
out
xor
mov
sub
cmpsl
neg
push
mov
fbstp
push
lcall
jl
and
adc
cld
mull
sahf
xor
movsl
and
roll
and
inc
call
clc
shll
fstpt
and
pushl
lods
mov
loopne
mov
fisttpll
or
xor
jecxz
jecxz
pushl
mov
pop
jns
lret
cli
cmp
jae
int
adc
push
mov
stos
xor
sub
call
sbb
in
push
mov
lock
es
push
mov
xchg
jno
outsb
cmp
jb
xchg
xor
push
inc
imul
ret
cmpsb
mov
dec
lods
gs
push
addb
push
and
int3
outsb
cmp
pop
lcall
push
xchg
pop
sub
outsb
push
push
popa
mov
pusha
mov
clc
outsl
cmc
mov
xchg
pop
mov
outsb
fwait
out
call
ja
dec
inc
rcl
add
push
ret
mov
testb
push
xchg
mov
enter
add
push
xchg
rcl
add
lock
mov
es
jne
lret
xchg
pushl
jg
out
cld
mov
pop
int
mov
xor
dec
inc
ljmp
add
and
ds
hlt
xlat
cmpsl
mull
pushl
adc
lret
pop
out
je
xchg
jns
dec
sarl
jmp
cmp
inc
fmull
imul
call
aad
imulb
lcall
sbb
in
fsubrs
mov
fisttpl
sbb
call
mov
scas
lret
xor
adc
jae
sbb
movhps
cs
pop
push
in
cmp
or
mov
pushf
jmp
cmp
xor
out
push
cli
gs
dec
mov
inc
shll
scas
pop
mov
mov
push
push
decl
push
subb
cmp
inc
popf
aam
or
dec
pop
call
dec
dec
fcom
ds
in
js
int
or
add
loope
xor
inc
ret
in
fildll
dec
shlb
int
cmpsb
cmp
fwait
push
add
ss
decl
aaa
outsb
clc
pop
push
adc
sub
add
jmp
cmp
inc
arpl
add
mov
ja
add
imul
fcmovu
lods
test
bound
sbb
inc
lods
or
push
sub
loop
and
dec
mov
scas
orl
ss
push
push
dec
jae
out
adc
or
mov
insl
popa
jne
incl
les
jo
or
push
push
outsl
ja
push
inc
inc
xlat
push
gs
inc
mov
or
add
pop
xor
sbb
push
insb
dec
int
add
jne
call
out
xor
clc
pop
pop
add
or
fisubrl
mov
jbe
pop
xor
jae
daa
lea
jns
repnz
incl
dec
pop
popa
push
cmp
xor
push
inc
jbe
dec
xor
and
cwtl
push
test
fsts
inc
stos
js
push
lock
outsl
jb
adc
mov
fldt
std
mov
push
imul
fnstenv
or
jo
gs
gs
in
or
dec
sub
daa
sub
jns
adc
outsl
fstl
adc
sbb
cmp
insl
push
inc
jae
arpl
mov
inc
imul
jp
adc
push
jp
or
push
push
pop
imul
jp
mov
adc
fs
lret
fs
out
adc
push
and
invlpg
mov
lahf
and
inc
addb
add
push
mov
in
adc
emms
test
lcall
mov
stos
mov
iret
xchg
lock
mov
dec
fs
dec
adc
add
push
mulb
lds
cmp
lcall
inc
outsb
jne
inc
xchg
mov
sub
test
inc
lods
pop
dec
fsubl
add
mov
push
inc
insl
mov
mov
cld
inc
daa
outsl
jae
sbb
push
cli
jae
dec
repnz
sub
or
insb
and
insb
xor
inc
sbb
shlb
sbb
cmp
hlt
or
sub
fwait
adc
dec
fildll
mov
add
arpl
sub
dec
outsb
test
mov
loopne
outsl
mov
xchg
sub
push
or
jns
push
add
or
mov
es
je
xchg
sbbl
mov
out
mov
inc
jge
mov
fmull
cwtl
pand
aad
add
les
xor
bound
mov
je
sbb
inc
or
or
sub
imul
cmp
push
or
imul
test
out
adc
ret
dec
dec
adc
sbb
ret
jo
gs
mov
and
mov
je
cmpsb
cmp
adc
and
stos
dec
add
mov
or
cli
xor
das
adc
fwait
xor
adc
mov
outsl
pop
or
leave
pop
pop
rorb
or
into
xchg
cwtl
fistpll
pop
mov
fwait
pop
push
shl
adc
call
xorb
add
shll
ljmp
arpl
mov
icebp
dec
in
mov
icebp
dec
sbb
mov
mov
fs
jmp
pop
shrb
push
pop
xchg
mov
pop
js
js
xchg
xor
push
lahf
movsb
sub
orl
push
sub
sahf
xor
and
adc
cmp
mov
inc
or
or
pusha
xorb
cs
adc
inc
mov
lret
dec
sarb
add
add
sbb
ret
sub
jb
subb
ret
ds
pop
xlat
or
je
fldz
and
imul
push
push
adcl
jnp
or
adc
jp
inc
shrb
test
xchg
xor
ret
add
daa
xchg
outsb
test
imul
sbb
mov
je
or
nop
ja
orb
sbb
mov
and
inc
daa
gs
or
mov
cs
mov
jb
mov
xor
nop
inc
pusha
add
cld
mov
xor
add
adc
add
incl
add
add
add
add
call
int
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
sbb
inc
add
add
add
add
add
add
push
add
add
add
orb
add
push
add
addb
add
add
add
add
add
add
push
add
sldt
pusha
add
cmp
add
mov
add
mov
add
fadds
add
add
add
sub
add
add
add
add
add
add
add
add
add
js
add
push
rolb
add
add
add
add
add
add
add
add
mov
roll
add
add
add
add
add
add
add
add
add
add
enter
pushf
aam
add
add
in
add
add
add
add
add
add
add
lock
add
add
xchg
add
add
add
add
add
add
add
add
add
sbb
add
test
add
pop
add
add
add
add
add
add
add
add
add
inc
add
add
add
in
add
add
add
add
add
and
add
add
subb
add
dec
add
cmp
add
add
add
add
add
add
add
add
add
cwtl
add
add
add
in
add
add
add
add
add
add
add
rolb
add
add
in
add
add
add
add
add
add
add
call
pop
add
fadds
add
in
add
add
add
add
add
add
add
adc
add
insb
pop
add
sgdtl
add
add
add
add
add
add
add
dec
add
dec
add
add
or
push
add
inc
add
inc
add
inc
add
dec
add
dec
add
add
add
call
xchg
add
cmc
xchg
add
rclb
add
add
add
setae
add
xchg
add
sbb
add
cmp
add
push
xchg
add
fs
add
add
add
jb
add
add
add
adcb
add
add
add
push
dec
inc
dec
xor
cs
dec
dec
add
jbe
jo
xor
cs
insb
add
gs
jne
xor
cs
insb
add
gs
xor
fs
insb
add
add
fs
imul
add
inc
gs
jb
arpl
fs
jae
add
push
imul
jb
je
arpl
push
imul
insb
insb
outsl
arpl
add
jb
jne
insb
inc
jb
add
add
imul
jae
add
push
gs
insb
outsl
jae
dec
gs
add
push
popa
jb
popa
outsb
je
outsl
jo
add
add
popa
jb
gs
inc
add
add
adc
test
push
testb
insb
cmp
cwtl
aaa
cs
dec
sbb
mov
xor
xchg
sbb
mov
repnz
aaa
rcll
pop
ret
fidivl
sbb
mov
stc
es
xchg
in
dec
jg
sbb
fcmovnbe
incl
inc
push
pop
test
fiadds
adc
inc
pusha
xor
pop
sbb
and
sti
ljmp
and
ss
loopne
sub
push
jle
xor
jecxz
aad
fidivs
jmp
rorl
fwait
mov
js
mov
or
in
mov
lcall
andb
retw
sbb
jnp
mov
xor
inc
or
mov
jle
subb
xchg
mov
jl
and
orl
bound
push
popf
rolb
rorb
call
and
jb
sub
in
dec
jno
mov
fs
push
outsl
imul
xlat
jg
mov
pop
ds
push
pop
xchg
jle
cmpsl
jnp
mov
or
xor
int3
xchg
fidivs
jno
pop
ds
push
fwait
sub
xchg
in
cs
es
mov
popa
icebp
test
push
inc
out
adc
js
addr16
jecxz
cmp
pusha
add
xor
ja
das
fs
sub
cmp
sub
cmp
stos
sbb
xchg
xchg
ret
lahf
push
mov
pop
dec
or
in
jne
sahf
pop
push
arpl
gs
sbb
into
fistps
dec
adc
rol
es
in
push
sbb
xor
xor
xor
cmp
insb
lret
nop
sbb
sti
pop
lret
ljmp
cld
and
fnstsw
xchg
or
or
push
adc
in
lret
push
mov
dec
push
push
shll
mov
or
mov
rcrb
mov
ror
shlb
arpl
cltd
and
push
inc
push
push
popa
in
or
pop
add
jbe
shl
cld
xor
out
add
xchg
add
push
frstor
xchg
movsl
dec
das
pop
pop
and
push
out
adc
sub
lods
nop
push
clc
sub
add
test
out
jp
inc
scas
cwtl
or
imul
fnstcw
pop
jge
std
aam
cltd
cmc
sub
jae
iret
popa
push
sub
and
xchg
push
int
addr16
nop
out
sub
add
lods
cli
and
out
or
xchg
fcomp
or
clc
fsubp
pop
iret
sbb
cld
xchg
mov
inc
push
add
mov
loopne
pop
hlt
cmp
shll
pusha
arpl
adc
adc
addr16
inc
scas
fidivrl
mov
out
dec
pop
loopne
hlt
ljmp
and
or
jns
adcb
jle
push
in
mov
push
pusha
lods
xchg
add
mov
pop
xor
pop
pop
scas
sbb
sbb
repz
pushf
cld
cli
pop
fsub
inc
lret
adc
rcll
xchg
mov
dec
xchg
scas
inc
adc
adc
ja
dec
enter
cmpsb
lahf
subb
inc
outsb
sbb
inc
add
sar
imul
jbe
ja
stos
js
inc
and
inc
xor
aaa
cmp
int
mov
xor
adc
popf
das
mov
mov
mov
into
js
xchg
int3
push
repnz
fldt
push
add
pop
outsl
push
mov
dec
or
push
lret
mov
or
mov
dec
or
and
scas
push
or
sub
jp
jb
mov
add
movsb
in
out
imul
mov
jmp
xor
cli
sub
jge
out
scas
xlat
lods
push
pop
scas
fstps
sub
xchg
jg
fmuls
pop
mov
dec
mov
jp
stos
cmpl
loopne
xor
addl
mov
cs
in
fs
push
stc
pop
xchg
cmp
in
incl
mov
and
test
push
in
pop
fsubl
jb
sub
mov
xor
stc
xchg
imul
fistpl
jns
pop
lods
jb
or
bound
sti
inc
adc
mov
fsubs
data16
sub
loop
cmp
pop
sub
mov
mov
mov
dec
lods
test
lahf
mov
in
ja
jne
jno
sbb
cmpsl
sub
jbe
pusha
loop
and
les
das
sub
push
dec
push
test
jb
mov
push
insb
out
add
aam
test
jl
movl
pop
testb
jnp
xchg
adc
push
cli
xor
fs
jg
dec
push
xor
imul
xor
and
sarl
jno
jne
jle
mov
lret
int3
outsl
mov
int
add
test
xor
add
lods
stos
pop
or
inc
add
jg
loopne
testl
ret
cltd
je
js
and
inc
fidivl
testb
xlat
pop
sbb
jae
pop
add
xchg
rolb
mov
test
stos
or
adc
or
dec
sub
xor
sub
and
std
aaa
xorb
cmp
adc
mov
or
lret
cmp
pop
xor
sub
sub
adc
pushf
xchg
cmp
sbb
add
scas
or
or
loope
xor
mov
lock
and
mov
mov
sub
inc
add
in
adc
jbe
jo
cmp
inc
das
dec
jo
and
scas
mov
xchg
out
pop
frstor
mov
imull
fbstp
push
push
xchg
and
sub
mov
fs
sbb
cmpsl
adc
ljmp
gs
jnp
call
int3
xor
ror
add
sub
rol
add
leave
jbe
imull
out
inc
out
mov
jge
xchg
les
ljmp
aas
cmp
insl
dec
hlt
out
cmp
std
ljmp
in
dec
daa
cmp
daa
stc
or
pop
sub
pop
adc
inc
stc
or
sub
aaa
jp
pop
add
cmpsl
xchg
out
clc
mov
fdivr
pop
pop
mov
dec
mov
inc
mov
dec
cmp
sub
lods
jnp
mov
fstpl
inc
fstpl
ret
jecxz
add
unpcklps
insl
adc
pop
push
test
xchg
sbb
xor
cli
test
mov
movsl
sti
xor
or
push
daa
out
push
mov
pop
std
outsb
fimull
cmp
pop
stos
add
dec
gs
jo
dec
insb
and
or
lret
xor
and
ja
mov
sub
int3
inc
cmpb
mov
addr16
sub
sub
sti
outsb
in
insb
loopne
xchg
add
mov
rorl
loop
lods
arpl
xchg
bts
lret
sti
es
push
push
adc
cmpsb
mov
movsl
les
add
xor
jno
xchg
jno
movsl
sub
pop
lods
sbbl
ss
adc
fidivs
and
shlb
mov
or
cmc
daa
dec
mov
cmp
jmp
add
jno
dec
popf
stos
lret
mov
dec
xorl
mov
inc
pop
add
cltd
cli
mov
test
fcmovb
pop
mov
xor
fbld
and
lret
arpl
adcb
push
fs
fsubrl
lea
xchg
xor
lods
pop
scas
mov
inc
aam
mov
adc
xor
xor
or
mov
pop
xchg
int3
subl
add
jne
int3
push
xchg
dec
push
popfw
cmovb
fsubrs
or
rcll
mov
sbb
pop
les
addr16
stos
fbstp
jge
sbb
out
rcll
xchg
sarl
nop
imul
lods
cmp
jmp
mov
gs
mov
mov
sar
mov
dec
rolb
pop
sub
or
pop
arpl
pop
shll
imul
mov
scas
rcrb
or
mov
cs
push
lahf
fistps
imul
pop
loop
outsb
out
hlt
xlat
xor
push
repnz
mov
jo
or
pop
aas
dec
out
mov
ja
hlt
xor
test
xlat
ds
xor
push
stos
or
mov
dec
pop
mov
loopne
nop
daa
dec
add
adc
jg
or
and
and
hlt
push
cmc
repnz
insl
sbb
outsl
pop
pop
das
push
and
xchg
push
xor
sbb
shlb
sub
pop
adcb
cwtl
adc
cmpsl
pop
fcoml
sub
adc
cmp
mov
push
enter
imul
pushf
jbe
dec
out
cmp
dec
jge
inc
dec
jne
and
xchg
fildll
in
sub
test
jp
add
dec
lahf
mov
pop
fiaddl
jmp
xor
xorb
lds
repnz
cmpsb
std
mov
lcall
rol
mov
xor
filds
adc
mov
pop
insl
adc
ret
push
movsl
sbb
cmp
pusha
in
push
inc
ss
push
hlt
and
cmp
call
adc
cmp
mov
sbb
dec
iret
mov
sub
adc
adcb
jnp
inc
ret
pop
mov
push
dec
aas
aam
pop
cmp
pop
pop
xlat
dec
mov
or
loop
mov
movd
inc
mov
xchg
cltd
push
or
mov
test
movsl
push
xor
jne
mov
cmp
jl
inc
xor
push
push
pop
xor
out
sbb
fdivs
icebp
ss
jnp
push
mov
sbb
repnz
xor
sti
cld
jmp
pop
ljmp
pop
orl
mov
push
mov
jnp
insl
inc
loopne
pop
dec
rcrb
mov
cmp
jg
jmp
xorb
add
insb
gs
inc
mov
push
outsb
xchg
rcll
inc
xor
add
inc
out
sarb
add
outsb
sbb
sbb
rclb
and
mov
fisubl
out
int3
les
hlt
mov
xor
shll
nop
fs
iret
hlt
dec
test
les
mov
in
adcl
inc
inc
inc
xchg
or
xorb
pop
adc
xchg
push
popa
and
test
cmp
iret
into
sub
jbe
push
jno
loope
mov
cli
nop
lock
dec
inc
ds
fldt
add
xor
lods
push
cli
sti
inc
shlb
dec
ljmp
stos
outsl
adc
ret
fildl
pop
int3
cmp
popf
pop
inc
into
mov
shrl
jne
ja
insl
fsts
testb
cli
cmp
push
fs
test
sbb
sub
add
jmp
lcall
cmpsl
dec
pop
or
movsb
xchg
test
cmp
and
mov
loope
in
popf
cmp
xchg
outsb
xchg
mov
adc
or
cmpsb
cltd
add
jle
test
aam
dec
lods
js
adcb
das
mov
lcall
push
movsl
lds
in
movsl
and
ror
add
push
shrl
push
je
sahf
adc
in
jle
orl
enter
icebp
xchg
ja
jp
outsb
movsb
dec
rcr
stos
inc
mov
mov
pop
mov
mov
jo
loop
ffreep
xchg
push
pop
fsubrs
mov
cwtl
xlat
mov
ds
adc
lcall
sub
insb
xchg
repz
js
mov
ret
fdivl
jno
int
xchg
jbe
sub
sub
pusha
nop
imul
mov
mov
jge
insb
mov
dec
pop
lds
lahf
repnz
outsb
fisttpll
cmpsb
sti
fists
shrl
test
push
stos
mov
xchg
inc
xchg
mov
inc
jl
jmp
das
movsl
in
sbbl
lfs
ret
imul
add
mov
loopne
das
mov
adc
repnz
jo
aam
jae
xchg
je
pop
loope
hlt
pop
or
xlat
test
push
sbb
cmpl
jecxz
pop
addl
sub
mov
sbb
adc
add
clc
clc
pop
loope
pusha
rclb
cmpsb
inc
mov
mov
loop
pop
aas
pop
dec
mov
dec
push
and
sub
sbb
das
sbb
pusha
jge
shrl
jne
test
dec
aaa
jmp
test
mov
bound
xchg
rorl
movsl
and
add
sbb
mov
sub
xchg
int3
cmp
pop
dec
ret
xchg
sub
stc
sub
adc
push
ljmp
out
jge
xchg
sub
out
pop
fucomp
jg
adc
and
inc
in
jnp
xchg
mov
mov
ret
mov
and
adcb
cmp
push
pop
es
cmp
in
outsl
add
adc
push
imul
aam
fwait
xlat
bound
mov
ret
adc
ret
cs
fdivl
push
jbe
aas
rcll
push
add
mov
mov
adcb
les
inc
sbb
lock
daa
xchg
push
push
jl
cmpsl
fsubl
mov
into
lds
fs
fbld
aam
mov
push
inc
fwait
test
mov
enter
mov
cld
rcrb
mov
xor
lods
mov
jp
bound
out
test
out
and
mov
adc
pushf
lea
and
loope
js
ret
mov
mov
popa
xor
push
lcall
cld
mov
loopne
test
or
jns
cmpsb
push
fimull
pop
sub
pop
cmp
mov
xorb
mov
lret
dec
jp
adc
and
fwait
loope
mov
es
or
mov
jae
cmp
jge
outsl
cmp
pop
or
repnz
test
mov
mov
cmp
mov
pop
std
sub
call
shll
shlb
popf
jmp
push
fiadds
and
xchg
mov
xor
or
xchg
ja
hlt
call
and
cmp
outsl
out
fsubl
xor
inc
lods
or
out
ja
mov
insb
push
push
imul
dec
xor
push
fisubrl
jg
stc
mov
push
jno
movsb
adc
xchg
mov
outsl
mov
push
sub
jg
xchg
mulb
arpl
stos
push
fnstcw
rorb
add
and
cmpsl
and
or
pop
ljmp
aad
nop
push
push
fnstsw
lods
cli
xchg
push
mov
lods
roll
mov
mov
sarb
jne
sub
pop
enter
push
adc
push
xor
aas
sub
arpl
sub
cs
je
sbb
hlt
cmp
xlat
xchg
sahf
or
enter
test
jne
inc
dec
mov
incl
mov
decl
inc
add
sub
leave
fists
cmp
fstpt
xchg
fstpl
mov
xor
jae
sbb
mov
addr16
xorl
fldl
movswl
xchg
xchg
aas
scas
mov
push
push
inc
or
xor
pop
aam
addb
mov
mov
and
and
sub
xor
sbb
in
cmp
lea
or
fsubrs
leave
add
call
mov
mov
push
cmp
je
in
je
jmp
jmp
cli
jg
jg
leave
outsl
imul
xchg
hlt
aad
daa
jns
push
jnp
fs
leave
push
pop
add
fistpll
addb
add
pop
loopne
mov
mov
jge
inc
inc
data16
push
mov
movsb
add
test
mov
sub
or
add
scas
fs
stc
repz
int3
xor
xchg
push
aaa
push
ret
ret
mov
into
scas
lods
or
jae
sub
or
push
fbstp
pop
or
jb
inc
cld
test
push
and
ss
js
xor
mov
pop
dec
or
ret
xlat
and
ret
shlb
jns
insl
cmp
adc
sbb
sbb
jne
xor
iret
popf
jecxz
mov
xor
pushl
js
lds
es
jno
mov
jns
lret
ljmp
push
aad
mov
rclb
repnz
and
fiaddl
iret
inc
mov
hlt
xchg
jbe
fdivl
je
inc
and
inc
mov
jl
mov
aas
jb
xor
arpl
push
lods
sbb
jb
ds
sbb
aas
cmp
and
push
mov
xchg
push
adc
movb
pop
fwait
xchg
lds
cmp
out
and
or
shll
sbb
ret
jae
popf
aas
dec
int3
jmp
and
add
test
repnz
sub
leave
and
cmpsl
decl
movsb
pop
mov
push
pop
mov
sti
sbb
and
mov
div
lcall
movsl
mov
mov
and
clc
je
inc
mov
add
and
pushf
add
test
pop
pop
inc
ficoms
test
mov
fmuls
sbb
ja
ret
cltd
xchg
mov
dec
push
mov
xor
jl
ja
sub
enter
iret
inc
push
adc
adc
xor
push
shrl
popa
or
cmp
cmpsb
jmp
pop
jae
or
or
data16
and
xchg
pushf
mov
push
pop
jecxz
cwtl
jge
insl
xchg
lret
das
add
leave
lods
sbb
fidivrl
cmpsb
mov
pop
jmp
loopne
sbb
mov
arpl
xchg
loop
mov
fs
mov
cmp
xlat
dec
cwtl
xor
les
ja
push
lret
cmp
push
mov
dec
jne
and
arpl
mov
jae
call
das
push
movsb
jmp
sarl
icebp
cmp
sbb
cli
movsb
add
or
xchg
sti
outsb
fidivrl
inc
in
cmp
or
sbb
inc
mov
call
dec
lds
inc
pop
xchg
mov
push
movsl
jnp
ret
inc
push
and
or
clc
rcrb
es
pusha
cmp
call
cmp
add
pop
dec
push
cld
into
sbb
dec
jg
mov
lock
xchg
pusha
jo
int3
aam
mov
mov
outsl
or
jne
add
dec
js
push
mov
ret
shrl
mov
jecxz
jmp
xchg
pop
adc
jecxz
dec
idivb
dec
adc
jno
and
mov
dec
fcmovb
and
push
or
or
push
popf
jns
popf
xchg
jge
leave
lcall
mov
and
outsl
rolb
mov
mov
inc
or
adc
in
push
mov
lock
jg
lret
jb
sub
in
rcll
xchg
aaa
lea
sub
ret
cmp
shl
fmul
jae
jb
mov
lcall
insl
mov
repz
pop
fiaddl
push
pop
popf
sar
cld
cmp
push
mov
rcrl
push
inc
push
dec
add
sbbb
jmp
sbb
inc
ja
sbb
push
cmpsl
xor
pop
jne
xchg
push
xchg
movsb
jle
mov
cmp
inc
iret
loope
enter
hlt
push
fstpt
mov
inc
push
inc
push
push
in
xchg
add
fidivrl
lods
xchg
mov
mov
and
or
js
rclb
shl
mov
push
push
sbbb
mov
pop
stc
rcrl
in
mov
nop
mov
std
pop
insb
jmp
sub
jns
in
fsts
insl
push
mov
ds
mov
pop
xchg
aaa
add
pop
ss
sub
sub
stos
ds
mov
cwtl
fnsave
or
push
dec
push
movsb
cmpb
movsb
mov
pop
or
pusha
subb
push
inc
ds
fstl
or
popa
movsb
jl
add
mov
in
int
dec
push
or
xchg
scas
jns
pop
mov
std
or
mov
and
ljmp
dec
pop
xor
mov
mov
jmp
push
add
ffree
mov
push
xor
inc
jnp
jns
adc
sbb
outsl
push
stos
xor
std
inc
fbld
cmp
nop
pop
mov
lods
loopne
inc
in
sahf
lock
and
incb
cmp
popf
add
data16
shrb
xor
mov
cltd
cld
dec
hlt
xor
fwait
outsl
lock
cmp
push
cmp
loope
add
sbb
sub
jle
mov
sub
test
and
sbb
test
add
filds
vrsqrtss
fcoms
jno
mov
fpatan
mov
and
dec
daa
loope
push
lcall
xchg
cs
push
inc
sarb
push
adc
mov
push
sbbb
mov
mov
jo
stc
imul
pop
add
sbb
dec
jbe
push
js
in
pop
xor
xchg
out
lcall
loop
mov
jp
mov
mov
in
sub
add
push
insl
xchg
lods
aad
push
sarl
icebp
and
mov
in
stc
cltd
sbb
jmp
cwtl
dec
push
pop
outsb
lahf
popa
xchg
mov
sub
pop
inc
and
aam
test
jnp
pop
out
out
xchg
psrld
or
fisubl
mov
and
mov
pop
pop
jns
out
andb
sbb
shll
imul
pop
std
jb
je
cmp
mov
test
leave
ss
jo
sub
jle
or
mov
outsb
jecxz
adc
mov
scas
loope
stos
ss
addr16
adc
mov
cli
jb
pop
rcll
fisttpl
push
mov
jmp
cltd
shrb
pusha
add
sub
stos
mov
scas
loopne
add
test
stos
insl
test
or
dec
cltd
test
insb
insl
mov
xchg
adc
icebp
arpl
mov
mov
out
or
movsb
out
imul
dec
mov
test
fxch
roll
fwait
dec
aad
push
int
fndisi(8087
dec
loopne
mov
jo
mov
inc
jb
movl
xchg
xchg
and
in
sbb
clc
xor
daa
sbbl
jbe
lds
and
xor
int3
call
cwtl
pushf
mov
or
fisubrs
movsl
mov
dec
rclb
loopne
jmp
lods
jl
test
inc
ljmp
pop
insl
xchg
mov
inc
lds
push
dec
addr16
dec
xor
scas
popf
mov
das
mov
add
jbe
cld
lahf
ljmp
popa
push
xchg
int3
add
ss
addr16
iret
aad
jmp
lret
cmpsl
sub
xchg
mov
mov
stos
and
clc
cld
je
jecxz
popf
adc
pop
shll
fsubrl
fst
lcall
orl
push
lret
jecxz
daa
imul
testl
fdiv
clc
mov
and
and
jp
out
add
out
test
cli
popf
dec
adc
scas
xor
xchg
sbb
xchg
jbe
push
pop
lods
jo
mov
sahf
clc
movl
pop
fdivrs
jae
add
mov
imul
mov
adc
iret
xchg
adc
jne
fcmovb
gs
movsb
pop
cwtl
fbstp
in
fcmovb
mov
pop
xor
mov
mov
xchg
push
jge
in
cmp
ret
hlt
in
iret
and
mov
pop
and
hlt
cli
popa
enter
cmp
add
sub
mov
sbb
push
enter
jmp
addl
rclb
jmp
cs
add
in
aam
add
sub
shl
add
div
xor
arpl
or
adc
pop
mov
lahf
mov
sub
cmpsb
mov
sbb
out
lret
pushf
pushf
pop
pop
popl
jle
xchg
loope
jae
lds
movsl
jl
stc
movsl
xchg
sbb
mov
mov
nop
or
pop
pop
mov
xor
push
mov
xchg
push
inc
xor
stos
call
push
cmp
add
sbb
jecxz
mov
popf
pop
loopne
lds
clc
test
jne
push
cli
lds
stos
fistl
dec
xlat
jo
jecxz
cmp
bound
dec
addr16
pop
in
adc
mov
jns
js
clc
jmp
out
xor
adc
and
sub
push
decb
jno
jo
jnp
test
les
pop
xchg
testl
movsb
pop
ficoms
hlt
adc
outsl
or
and
mov
out
or
mov
cmp
inc
xor
add
mov
fcmovne
mov
icebp
adc
sub
mov
add
fildl
pop
pop
cmovs
xchg
lret
add
es
xchg
jp
int
pop
rcll
int
jns
add
inc
pop
jecxz
cmp
das
mov
sbbb
iret
out
jmp
dec
xor
xchg
ret
roll
aam
pop
inc
or
arpl
popf
mov
dec
scas
hlt
outsl
pop
loopne
jle
lock
xor
mov
pop
movsb
daa
leave
clc
data16
jno
popa
pushaw
movl
xor
jle
add
xchg
jmp
dec
inc
std
popf
push
stc
mov
jmp
nop
xchg
inc
xlat
sar
xlat
loopne
pushf
mov
ret
shrl
xchg
and
xchg
mov
jns
mov
call
fcomp
pop
sti
ja
ds
lock
mov
loop
mov
mov
pushf
sbb
adc
or
mov
mov
sub
add
push
push
lods
pusha
leave
adc
icebp
and
dec
sahf
push
jg
sbb
leave
mov
int
stos
sbb
cmp
aam
dec
inc
pop
xor
add
sbb
ret
mov
pop
lahf
hlt
jmp
clc
outsb
out
xlat
in
xor
lcall
stos
mov
push
and
sbbl
xchg
dec
inc
push
xor
lfs
xchg
xor
cmc
and
pop
jo
jg
sbb
and
pusha
je
stos
lea
xor
pop
pop
out
xchg
test
adc
shlb
bound
lcall
enter
mov
rclb
lock
jnp
jle
sub
xchg
cld
scas
into
sub
jne
insb
inc
pushf
in
dec
cmp
leave
lods
or
mov
xor
xchg
loop
rcr
arpl
iret
mov
loopne
inc
add
in
pop
sarl
jle
inc
scas
pmulhuw
aaa
jp
push
mov
and
or
mov
sarb
or
xchg
pop
jo
push
sub
lret
out
sub
jl
and
mov
out
or
pop
sbb
shll
test
sbb
jns
xchg
sbb
pop
lock
or
scas
mov
loopne
xlat
fadds
outsb
icebp
mov
sti
adc
mov
adc
push
outsb
nop
push
pop
cmp
in
cmp
out
test
push
sar
jae
adc
jg
pop
fwait
jp
fs
scas
enter
outsb
cmc
dec
add
inc
movsb
sub
jp
les
fnclex
lcall
and
mov
cwtl
les
push
push
adc
shl
adc
lret
sub
hlt
pop
adc
xchg
sub
inc
or
gs
inc
mov
and
add
xchg
push
jecxz
dec
inc
jmp
cmp
stos
jbe
je
addr16
push
or
cld
xorl
mov
push
int
sub
lock
sti
js
mov
add
dec
dec
and
adc
scas
call
sbbl
push
jbe
ret
add
loope
jecxz
inc
sub
dec
mov
sbb
xor
rorl
jnp
add
sti
or
or
ret
xchg
cmpsl
subb
test
xchg
rep
or
cmpb
popa
jge
inc
cld
adc
push
mov
pop
fldl
adc
jecxz
jno
add
aam
loope
inc
sub
je
xchg
jge
push
jle
popf
stos
ficompl
addr16
add
push
push
lret
pushf
sub
inc
or
jbe
sbb
cmpb
daa
jne
outsl
pop
leave
cmpb
sub
bound
and
xchg
shl
imul
je
into
mov
out
cld
xchg
xor
xor
aam
aad
mov
rol
jmp
mov
out
mov
out
mov
and
add
fstl
fildl
push
aaa
pop
sub
cmp
test
shl
arpl
mov
and
sub
push
sti
repz
cltd
sbb
out
adc
imul
or
cmp
data16
push
xor
adcl
rcrb
mov
pop
sbb
cld
pop
mov
out
clc
adc
adc
inc
icebp
in
or
into
jg
movsb
in
cmp
fs
jle
dec
cmc
and
icebp
ret
std
mov
mov
adc
icebp
fsubrl
push
clc
mov
pop
loope
mov
aam
jbe
sub
adc
jns
fwait
lahf
decl
pusha
cmp
and
inc
fwait
or
or
push
std
pop
cmpsb
pop
out
mov
add
or
movsb
popf
iret
out
dec
sbb
sahf
hlt
mov
fmull
dec
mov
testl
lret
inc
sbb
js
jns
xor
sub
or
xor
sahf
icebp
xchg
stc
orb
in
in
and
adc
dec
test
push
cwtl
pop
arpl
lahf
js
push
sbb
push
mov
adc
cmpsl
imul
push
jnp
mov
loopne
cmp
ret
or
jns
xchg
repnz
fwait
addb
mov
sub
or
insb
shlb
mov
aam
dec
aad
lods
mov
xor
rclb
xor
inc
xchg
xor
idivl
fldenv
ret
fiadds
adc
jns
iret
sbb
mov
inc
inc
rcll
and
arpl
pop
sbb
outsb
and
add
pop
adc
popa
out
out
inc
mov
in
mov
push
inc
es
mov
inc
cmpsb
dec
push
mov
jp
pop
sub
inc
jl
int
mov
es
cmp
or
jg
or
push
cmp
pop
adc
push
mov
pop
inc
xchg
xor
es
insb
pop
repz
out
iret
test
ja
push
sub
add
inc
add
test
pop
cli
mov
mov
loope
cmpsb
dec
fistpl
or
jbe
inc
inc
sbbb
in
jmp
push
dec
pop
and
pop
ljmp
jecxz
lret
add
sub
sub
xor
imul
xor
and
incl
daa
dec
adc
push
clc
aam
dec
scas
mov
sub
jle
push
jae
sub
xor
dec
iret
jno
popa
lcall
jg
hlt
xchg
icebp
jecxz
int3
adc
ds
jp
mov
sarb
lcall
cmp
pop
outsl
mov
xorb
adc
fsubl
dec
dec
sub
xor
xor
push
sub
pop
in
sti
jecxz
imul
or
aad
sbb
pop
push
scas
xor
mov
xchg
sarl
inc
adc
mov
clc
sub
mov
retw
add
lock
jge
repnz
mov
arpl
mov
movsb
mov
loopne
movsl
push
push
ror
cwtl
jmp
cmp
cwtl
jae
inc
lret
mov
fidivl
sbbl
mov
outsb
sub
movsb
mov
xchg
pop
fs
pop
bound
sets
cwtl
sbb
sbb
adc
jle
sbbl
xlat
mov
cmpsl
add
xor
or
aaa
push
jl
fldt
inc
pusha
xchg
stc
pop
enter
cmp
or
and
sub
mov
jmp
push
aaa
pop
sub
mov
nop
inc
dec
xchg
rep
rol
mov
xor
lcall
idiv
addr16
movsb
inc
jle
cli
in
push
dec
mov
loopne
nop
lahf
xorb
jne
adcl
sarb
cmp
mov
mov
lahf
imul
adc
out
pop
pop
mov
jge
inc
clc
adc
jge
cmp
loopne
xor
mov
cs
imull
fidivl
shll
cld
loopne
pop
loopne,pt
rcr
test
outsl
test
addb
mov
fidivrl
ret
sub
gs
loop
jb
call
insl
iret
sarl
in
fistl
or
sar
aam
aad
repz
ds
and
add
out
xlat
sti
call
mov
aas
xchg
fs
enter
mov
decb
je
bound
loopne
mov
xchg
cmp
rcrb
mov
or
inc
mov
ret
scas
xlat
cmpsl
dec
js
cmpsb
dec
in
outsl
pop
inc
jmp
xor
xchg
in
pop
cmp
xchg
ret
ret
insl
cmp
stos
mull
sub
pop
pop
or
imul
mov
inc
icebp
int
adc
jnp
arpl
pop
test
cmp
pop
dec
lfs
pop
push
cmp
sub
sbbl
call
int
mov
sbb
mov
lods
icebp
arpl
mov
test
pop
daa
pop
nop
mov
push
push
mov
mov
rep
lea
ret
shrl
test
xlat
xchg
xor
push
jno
mov
sbb
loope
data16
sti
or
call
pop
clc
sbb
lcall
fucomip
push
fldt
fsts
lahf
stos
or
xchg
aaa
divb
or
cwtl
rclb
gs
adc
fiaddl
pop
lea
jmp
pop
xor
cmp
icebp
scas
cmpsb
sti
xchg
scas
xchg
jns
xor
jmp
jb
sbbl
or
movsb
jmp
jp
test
pop
fldt
xor
jg
movsl
jae
inc
push
sub
or
sbb
shlb
int3
push
jns
push
add
push
push
pushf
lea
mov
outsb
inc
in
adc
mov
mov
jb
mov
push
call
mov
out
add
add
cld
es
mov
push
jmp
lcall
cmp
outsb
rorl
shll
orl
adc
mov
outsb
stc
inc
ret
push
pop
and
int
out
es
aad
xchg
ljmp
push
cwtl
inc
dec
or
in
and
popa
outsl
test
xchg
sub
imul
push
mov
loopne
xchg
mov
mov
andl
rorl
pop
jne
fistpl
jp
fsubl
cmp
adc
arpl
and
dec
xchg
in
cld
push
add
shll
push
imul
adc
xlat
cmp
hlt
dec
adc
lds
jne
xor
loopne
test
repz
jno
jl
push
sbb
pop
filds
mov
mov
adc
clc
add
in
idivl
add
cs
inc
jge
orl
arpl
gs
cmp
dec
or
faddl
ja
iret
ljmp
lods
xlat
mov
push
loopne
sti
clc
add
cmpsl
mov
inc
scas
les
pop
xchg
cld
loop
popf
adc
icebp
mov
add
push
add
shlb
or
repnz
ss
add
data16
data16
xchg
outsb
cmc
or
add
sbb
lcall
adc
mov
or
insb
mov
xchg
cmpsb
je
or
inc
xor
loop
dec
push
sbb
dec
dec
ljmp
iret
fldenv
and
scas
lret
ret
test
adc
xchg
out
imul
push
out
test
cwtl
cmp
xor
out
ss
lock
mov
add
mov
cmp
xor
imul
iret
pop
loop
push
lcall
add
enter
jecxz
sub
test
and
ret
outsl
pop
push
dec
sbb
xor
adcl
lods
mov
pop
pusha
out
lret
aaa
in
out
push
mov
jbe
adc
or
mov
jecxz
xor
cmp
mov
ja
dec
lods
or
jne
clc
lcall
sub
scas
lret
sbb
mov
push
in
cmp
imul
mov
nop
add
fbld
sbb
mov
lods
pop
cli
aam
sbb
xchg
xchg
mul
stos
movsl
mov
inc
repnz
xor
jo
mov
jge
daa
testl
mov
das
jne
adc
popa
jp
xlat
adc
imul
bound
cwtl
shrb
stos
add
repnz
in
cmp
jns
push
aam
fnsave
lahf
icebp
mov
rclb
scas
pop
push
repnz
jns
movsb
xchg
jge
cld
xchg
pop
cmc
stc
mov
out
cmpsb
das
fucompp
xor
sub
push
out
xor
add
mov
xchg
arpl
shlb
jns
add
loope
pop
push
mov
jg
insl
xchg
jge
jae
push
mov
fisubrl
dec
jae
hlt
mulb
icebp
rcrl
cwtl
dec
stos
popf
movsl
push
adc
or
pop
ljmp
imul
scas
int
sahf
and
mov
mov
jne
xlat
xor
aad
ret
shlb
lret
mov
add
xor
sbb
rclb
jle
jae
bound
dec
or
push
insl
fistpl
popf
mov
mov
mov
lds
es
scas
pop
aam
push
and
mov
les
sbb
dec
xchg
fisttpl
jmp
gs
clc
aaa
pop
lock
roll
lods
mov
pop
cs
push
or
ljmp
xor
cs
gs
ret
mov
cmp
nop
pop
pusha
inc
add
sbb
mov
in
pusha
in
mov
pop
ljmp
xor
mov
add
into
xor
adc
pop
sbbl
test
imul
push
jmp
jo
xor
rclb
insl
sahf
cmpsl
lds
mov
jmp
mov
mov
inc
cwtl
add
jg
sbb
pop
sub
fst
sbb
hlt
lods
or
lea
movsb
add
push
xor
sub
cmp
dec
mov
pusha
xor
sbb
pop
mov
add
cmp
fstpt
decl
mov
mov
fdivrl
rorb
iret
cmp
mov
mov
mov
push
push
icebp
sahf
subl
rdseed
out
aad
popl
popa
ret
inc
shlb
out
xor
dec
dec
and
push
jge
adc
test
cld
dec
inc
xchg
jae
dec
mov
out
repz
inc
sarb
mov
xchg
and
mov
xchg
frstor
lcall
cltd
jnp
lods
cli
mov
andb
in
mov
imul
mov
and
or
ja
enter
inc
cmp
pop
inc
pusha
lret
jno
xchg
int
sbb
lds
ljmp
aas
bswap
mov
lock
decl
sub
movsb
xchg
in
xor
pop
push
jl
mov
mov
jne
or
fidivs
dec
add
cmc
mov
sbb
sbb
mov
pop
mov
scas
ss
push
scas
mov
into
push
push
fistpll
repz
ds
ret
jecxz
fidivl
add
orl
test
mov
pop
lahf
pop
das
mov
lcall
jb
stos
cltd
add
inc
jmp
lcall
ljmp
xor
outsb
mov
lcall
or
inc
test
das
push
fmuls
lea
ficoml
iret
push
jbe
sub
fs
xorb
test
push
jns
push
iret
mov
sub
xchg
test
xor
inc
out
hlt
cmp
test
icebp
cs
rorb
call
xor
fidivrs
call
lret
mov
mov
clc
loopne
and
xor
clc
mov
sbb
pop
rcll
xor
cmp
testl
sbb
pop
in
or
mov
iret
shll
xor
test
pusha
test
popa
pop
mov
div
idivb
mov
dec
lods
jbe
and
lds
imul
inc
inc
nop
xor
jmp
add
sub
aas
jmp
into
iret
xchg
iret
xchg
jg
or
stos
mov
aam
jnp
es
push
loop
cwtl
adc
mov
mov
jo
adc
xor
adc
mov
stos
jmp
rol
int
adc
mov
rclb
xchg
cmpsl
inc
mov
imul
outsl
jmp
mov
cmp
xor
add
repnz
dec
or
cmp
faddp
push
jno
repz
push
ficoms
fucomi
push
stc
lods
lret
std
xlat
mov
and
cmp
lods
inc
push
pusha
sbb
std
por
jmp
jle
pop
xchg
pusha
mov
xchg
or
lea
or
mov
test
std
push
sahf
cmpsb
sarl
iret
add
clc
pop
std
ds
cwtl
mov
dec
clc
adc
dec
sbb
mov
in
push
aas
loopne
inc
popa
push
dec
loop
push
or
lds
shrb
inc
adcl
mov
stos
and
fnstcw
sbb
loope
jp
pop
or
mov
inc
and
fimull
bound
sub
sbb
pop
shl
xchg
mov
mov
sub
test
and
jmp
icebp
clc
pop
ja
xchg
gs
in
dec
les
or
dec
push
rclb
sub
test
mov
js
repnz
les
xchg
sti
rcrl
inc
cmpb
xlat
lock
out
xlat
imul
add
out
sub
shll
fwait
cmp
adc
inc
repnz
fdivl
mov
loopne
sbb
pop
cld
xchg
mov
js
and
push
lret
lods
mov
jns,pt
xor
in
je
adc
sbb
inc
xor
iret
jae
arpl
inc
out
xor
insb
adc
mov
mov
cmp
xchg
xor
xchg
cmp
sarl
mov
lret
out
cmpsb
movsl
mov
addr16
sar
or
jb
sbb
jo
popa
cmc
jl
in
test
loope
jbe
dec
jecxz
dec
sub
mov
stos
or
cmp
shlb
xchg
or
mov
ror
lock
sbb
nop
popf
std
int3
mov
push
test
inc
inc
mov
adc
cmpsb
idiv
scas
in
int
fucom
imul
and
push
scas
mov
mov
mov
popf
in
mov
bound
pushf
inc
lret
icebp
mov
dec
imul
jb
scas
dec
pusha
in
sbb
cld
pop
mov
int3
call
rolb
in
inc
sub
fbld
mov
mov
mov
mov
inc
in
rcll
std
out
jecxz
aaa
mov
subb
dec
xchg
ds
jbe
pop
adc
push
jbe
xchg
xchg
dec
ljmp
imul
gs
aas
jp
jne
hlt
pop
xchg
adc
lret
fldcw
gs
cmpsl
xor
movsb
mov
shll
push
sub
and
lret
cmp
jns
xchg
ss
dec
aad
insb
in
jle
dec
fldt
int3
lock
leave
xor
jmp
enter
adc
lahf
cld
fildl
shlb
shl
lret
into
mov
dec
icebp
loope
xchg
loope
mov
daa
fwait
icebp
adc
pop
sub
lret
stos
and
sbb
cmovle
rorl
repnz
out
and
pushf
push
enter
out
or
and
pop
dec
out
pop
inc
mov
out
sbb
loopne
imul
lea
test
push
cmp
or
jg
xor
loopne
lcall
insl
mov
pmuludq
push
and
das
xchg
iret
cmpsl
sub
push
dec
insl
dec
insb
xor
sub
dec
adc
es
daa
call
cmpl
jecxz
iret
push
push
int3
into
inc
xlat
ret
in
stc
xor
jl
xlat
ffree
cs
js
mov
out
fs
cwtl
adc
jno
in
cmp
inc
jne
adc
sbb
stc
stc
fcomip
sbb
cli
shl
int
xlat
dec
push
pop
pop
mov
aad
outsb
xor
mov
popa
add
add
ljmp
xlat
jle
jne
cwtl
les
dec
or
jae
add
ret
movsb
loop
and
or
iret
mov
pop
test
jo
popf
sub
aas
inc
mov
and
xchg
dec
imul
int3
int
cld
aad
pop
xchg
stos
mov
dec
mov
xor
repnz
fnstsw
mov
maskmovq
testl
rorb
into
fcoml
or
insb
push
outsl
add
add
or
mov
ljmp
mov
mov
xor
xor
and
push
xchg
or
jae
pop
imul
push
xor
daa
sub
sbb
mov
mov
dec
aas
lcall
dec
gs
cmp
cmpl
cmc
jae
xor
pop
xchg
testl
and
cmp
fcmovne
rcrb
fwait
sbb
pop
testb
fistpll
scas
add
pop
or
adc
repz
into
ja
cmp
push
inc
in
cli
push
lds
shl
mov
repz
fadds
add
icebp
cmpb
inc
stc
das
stos
push
insb
mov
adc
push
push
ja
xor
adc
int
jecxz
repnz
mov
arpl
repz
mov
roll
dec
xchg
je
mov
cmp
push
cvtps2pi
push
adc
xor
pop
or
std
mov
push
shrb
mov
jo
add
jae
pop
inc
inc
pop
xchg
inc
adc
mov
dec
mov
adc
cmpsb
mov
repnz
bound
in
inc
lahf
dec
xchg
and
loope
push
sbb
mov
shlb
and
enter
mov
inc
leave
in
push
sbb
inc
ss
popa
loope
mov
mov
das
mov
inc
mov
sub
out
popf
jle
push
adc
ds
add
adc
add
loope
into
aaa
sbb
adcl
sub
pop
pop
addr16
popf
fnsave
pop
lock
divl
mov
add
stos
test
or
pusha
out
rcrl
imul
add
ficompl
jne
cs
scas
jbe
mov
loop
ljmp
sub
fwait
xor
cs
mov
clc
sarl
dec
push
loopne
out
ret
sbb
into
mov
mov
int
jne
pop
movsb
scas
js
out
push
pop
cmpl
cmp
xor
cmp
mov
mov
inc
jno
orl
or
jno
repz
ja
aad
adc
and
out
fildll
movsb
dec
hlt
add
fs
in
repz
into
jg
cmp
adcl
lret
fildll
fistpl
and
sub
mov
cs
lock
xor
sub
cli
pop
dec
insl
jp
push
xchg
daa
mov
or
add
flds
lods
and
add
in
orb
fstpt
push
adc
shr
sbb
push
cmp
mov
pusha
mov
push
rorb
xorl
cmpsl
clc
lock
push
pop
mov
inc
cmp
cmp
adc
addr16
xchg
ret
cmc
inc
adc
es
cmpsl
test
int
stos
aaa
xor
pop
rolb
mov
push
inc
into
push
sbb
mov
in
fistpl
dec
int3
roll
outsb
push
out
ficomps
xor
add
loop
adc
xchg
jmp
pop
adc
mov
cli
jmp
cmpsb
inc
mov
mov
gs
add
dec
xor
inc
pop
mov
rcr
into
or
add
ret
sbb
xor
dec
push
mov
aas
push
lret
push
cli
xor
pushl
xor
xor
out
arpl
imulb
lods
inc
lea
bound
insl
pop
mov
outsb
sub
dec
jb
jmp
hlt
fcmovu
es
fistl
loopne
scas
xchg
sbb
repz
loop
iret
add
test
sarb
pop
inc
mov
mov
push
shrb
cwtl
rorl
test
push
sub
jne
push
stos
dec
lcall
fst
call
jp
cmp
mov
mov
nop
mov
push
or
add
insb
mov
and
and
fildll
mov
into
adc
outsb
aas
and
stc
inc
xor
adc
and
jg
hlt
and
movsl
xor
pop
inc
and
jae
lahf
stos
aas
repnz
popa
jbe
adc
add
pop
adc
add
jmp
jmp
rcrl
jns
insb
push
cwtl
aas
mull
popf
cmpl
repnz
push
cli
mov
test
mov
sbbb
mov
push
push
fimull
jmp
add
and
xchg
mov
xchg
add
bound
and
mov
mov
xor
jns
pop
testb
push
fcomip
sbb
sbb
mov
push
dec
std
aas
pop
push
mov
loope
mov
rcrl
sbb
in
cmpsb
sub
push
jb
mov
sub
sub
sub
sbb
inc
xchg
xlat
out
subl
arpl
test
xlat
mov
pusha
data16
ss
je
out
fisttps
movsl
mov
sub
cli
lock
jmp
test
add
push
sub
push
inc
jecxz
test
and
cmp
lods
pop
xor
add
aam
mov
xor
clc
es
sbb
xchg
loopne
xlat
into
daa
neg
imul
push
jecxz
dec
jnp
and
or
fcmovnbe
add
and
cwtl
addl
inc
pop
mov
test
xchg
arpl
add
sub
or
int3
icebp
push
das
test
mov
es
push
and
rcrl
fstps
lods
dec
add
stos
cmp
cmp
pop
sub
jnp
mov
outsl
and
or
in
js
sub
insb
add
nop
lds
test
push
repz
push
movsb
pop
dec
mov
jge
enter
jmp
jmp
lea
mov
ret
mov
repz
mov
cvtdq2ps
xor
add
js
jmp
data16
in
cmp
xor
mov
xchg
mov
fmull
mov
jae
cs
inc
dec
popf
in
xchg
pop
push
sbb
fisubs
sub
divb
sbb
pop
add
sahf
jmp
clc
mov
es
add
mov
in
stos
clc
loopne
mov
mov
sbb
dec
out
fwait
mov
sbb
and
stos
mov
xchg
in
stos
inc
cmp
sti
sbb
std
inc
ret
es
sbb
outsb
cmpsb
or
mov
aad
nop
xlat
sbb
scas
shll
jne
fsubrl
je
clc
int3
jns
scas
movsb
mov
enter
popa
mov
cld
and
cmp
rorl
cltd
popa
xor
repnz
mov
test
inc
lds
.byte
mov
adc
add
jns
add
incl
nop
sbb
or
mov
je
imul
add
je
rorl
cmp
add
cld
mov
je
xchg
int3
pop
push
dec
bound
jge
mov
arpl
pop
or
push
push
jns
stc
jg
jae
insl
or
addl
jmp
pop
jnp
testl
lahf
add
mov
rolb
mov
or
enter
or
adc
rol
leave
in
fisttpll
and
inc
or
pop
sti
fldt
jns
pop
adc
movsb
jb
popa
arpl
shlb
idivl
mov
jmp
pop
inc
inc
pmulhuw
orl
enter
sbb
xor
out
inc
push
sbb
and
and
sbb
sbb
adc
fs
inc
add
in
inc
push
add
addb
orl
cld
cmp
lods
or
enter
lock
and
and
ret
xor
push
add
mov
leave
div
push
add
imulb
je
movzwl
mov
sbb
xor
fadds
aam
fistpll
add
popa
and
and
std
ljmp
insb
popa
outsb
and
imul
xor
xor
add
mov
fistl
mov
add
arpl
das
adc
mov
gs
sub
and
je
popa
and
gs
outsl
out
clc
inc
loope
insl
gs
cmpxchg
ret
sub
sarb
dec
add
inc
pop
dec
add
inc
or
adc
mov
filds
pop
or
or
imul
and
addr16
xchg
lods
adc
adc
adc
fbstp
fildll
add
sbb
and
and
jp
push
mov
insb
add
adc
pop
and
lods
sub
and
sub
ret
sub
xor
mov
xor
mov
cmp
pop
sub
mov
das
xor
inc
inc
xor
addr16
flds
lret
jns
fbld
fildll
jl
add
cmpl
fstp
js
adc
mov
inc
das
fdivrp
mov
or
mov
mov
mov
call
cmpl
rorl
jno
mov
shr
movzbl
mov
and
jbe
jne
jns
adc
mov
fimuls
ljmp
or
add
leave
and
add
dec
mov
cmp
mov
mov
bound
arpl
std
push
shl
or
popa
loopne
lcall
aaa
mov
cld
add
mov
and
adc
dec
add
clc
fucomp
cmp
movsl
das
mov
cld
xchg
lcall
inc
sbb
or
xor
fsubs
add
sti
push
push
and
add
adc
test
push
or
ror
mov
cld
mov
mov
icebp
sub
fcomp
outsb
add
mov
mov
rorl
mov
jne
lret
sub
xor
mov
mov
or
jecxz
xor
and
ja
notb
add
sbb
clc
sbb
sbb
adcl
push
mov
lea
clc
or
add
and
mov
lds
push
rcr
mov
mov
mov
into
xorb
push
adc
test
jnp
outsb
movl
test
sbb
movb
scas
ret
push
ret
pop
pop
pop
pop
arpl
insl
pop
in
sub
xor
pop
addb
mov
and
add
jmp
cmpl
fmul
incl
lea
and
cmp
out
xchg
push
mov
es
incb
mov
lds
pop
push
mov
popa
jecxz
faddl
mov
je
addl
fisubl
mov
je
push
sub
mov
adc
dec
add
sarl
or
outsb
and
dec
or
and
dec
pop
adc
add
pop
xchg
xor
lahf
shlb
mov
enter
sbb
or
leave
cmpb
test
jnp
test
push
lods
xor
adc
and
jbe
fcomps
or
rorb
mov
out
xor
mov
adc
jmp
xor
ja
std
insl
pop
pop
push
les
cmp
xlat
jne
mov
jp
and
mov
xchg
jle
pusha
or
insb
mov
push
jnp
sub
lea
pusha
clc
arpl
hlt
shr
push
xor
icebp
inc
sub
cmp
jb
mov
fucomi
sbb
popf
iret
sub
sub
jle
jbe
mov
sbb
decl
mov
mov
andb
lea
mov
jmp
xor
pop
mov
mov
movl
inc
ret
inc
xchg
movsb
lea
push
or
imull
iret
mov
mov
jo
ds
cmp
sbb
cmp
jo
ja
lea
add
shll
xlat
filds
mov
xchg
shl
cwtl
or
addr16
or
or
cld
ret
pop
rorb
jmp
or
aas
mov
mov
rorb
mov
loopne
xor
sbb
aaa
dec
mov
rcl
mov
mov
sbb
jmp
mov
pushf
jmp
adc
sbb
add
cmp
movl
inc
mov
jmp
mov
test
xor
jb
mov
jns
outsl
dec
add
lock
push
xchg
jns
enter
xchg
push
ret
fs
test
add
mov
jne
subl
je
pop
push
adc
push
pop
xor
inc
das
dec
jbe
cmpsb
mov
xor
insl
dec
cmpsl
aaa
rclb
xor
dec
test
inc
adc
cmp
mov
pop
sub
jo
arpl
loope
xchg
push
push
int
pop
dec
js
into
or
sbb
jmp
nop
nop
or
and
fistl
faddl
lock
mov
push
jnp
lock
xor
inc
dec
pop
outsl
mov
jge
xor
testb
inc
cmpl
push
inc
pop
xor
mov
mov
push
inc
out
mov
and
add
cmp
xor
jmp
pop
dec
clc
sub
push
mov
cmp
test
and
orl
in
loopne
pop
push
push
out
push
sti
cmp
sbb
lea
pop
cmp
inc
cld
daa
movl
nop
pop
lock
cmp
fisttps
mov
push
testb
repnz
movsl
and
icebp
sbb
inc
mov
lret
jb
cmp
mov
stos
hlt
les
mov
mov
mov
mov
pop
jecxz
pop
mov
and
xlat
jno
roll
sar
and
xor
pop
js
jbe
js
addr16
sub
push
jnp
push
sbb
clc
adcb
dec
iret
mov
inc
add
sub
jecxz
clc
push
mov
sub
cmp
jb
insb
ss
cmovp
adc
scas
int3
add
mov
adc
sbb
fcmovnb
jbe
lea
xchg
xchg
lods
roll
jb
mov
push
xor
or
fisttpll
cmovge
pop
cld
or
mov
push
cmpsb
pop
lahf
mov
aas
or
lods
daa
or
pop
nop
ret
roll
xlat
jb
jecxz
push
add
xor
cs
test
or
cmp
adc
test
into
cmp
adc
stc
call
jle
cld
test
int3
loope
loopne
adc
and
sbb
fisttpl
sub
je
inc
sbb
add
fistps
jle
mov
ja,pt
cmp
rclb
jp
outsl
sub
enter
enter
adc
lock
ljmp
shlb
adc
ret
andl
ja
jmp
cmpsl
mov
decl
cld
fstps
gs
sbb
pop
add
or
mov
and
push
test
punpckhbw
or
sbb
iret
push
es
pop
cmp
push
jb
cmp
ds
or
mov
jmp
aaa
dec
jbe
push
jmp
lods
adc
push
and
dec
mov
pop
ja
icebp
shr
dec
jb
and
in
in
pop
cmp
cmp
loope
dec
adc
pop
xor
les
jbe
cld
loop,pt
adc
or
sbb
sbb
inc
cld
neg
fldz
fstl
popf
rorb
or
sar
mov
sbb
fdivr
mov
outsb
add
adc
mov
test
jne
xor
call
sbb
cmp
jb
jmp
mov
pop
cmp
jae
rclb
jle
or
sub
pushf
jmp
insl
popa
test
sbb
or
and
cmp
jbe
mov
repnz
loop
mov
fdivrl
and
lret
inc
ja
incb
sub
mov
adc
add
adc
fwait
sub
pop
add
mul
mov
lret
movsb
loop
pop
jno
orl
xchg
add
pop
mov
pop
mov
fstp
jmp
sbb
xchg
bound
sbb
orl
sbb
dec
and
adc
add
and
add
es
repnz
adc
pop
test
adc
pop
push
icebp
mov
mov
mov
ror
std
sbb
fisubrs
xchg
je
sbb
mov
lret
mov
outsb
ret
pop
jb
in
enter
add
inc
lock
cmp
fstp
add
sbb
pop
in
cmp
cmpb
sub
cmp
mov
ja
inc
lock
xor
adc
js
mov
in
test
or
clc
divb
std
aam
scas
stc
mov
imul
add
and
ja
sbb
add
call
pop
jnp
xor
sub
fidivs
in
sbb
and
out
test
cmp
xor
pusha
gs
pop
mov
pop
lahf
inc
jb
or
mov
aam
pop
jne
push
mov
pop
mov
and
pop
cwtl
jno
xchg
ret
adcl
push
sub
sbb
sbb
or
cs
dec
sbb
lret
addb
mov
incb
std
sub
cmpl
xchg
ds
pop
dec
mov
push
dec
insb
jl
mov
hlt
mov
mov
cmp
cltd
mov
adc
outsl
outsl
in
mov
adc
mov
add
dec
cwtl
push
and
jne
push
add
push
mov
pop
xor
inc
sbb
sub
ret
or
out
dec
in
adc
mov
call
inc
adc
or
lods
jbe
call
lret
loop
fxch
into
push
xchg
adc
sar
cltd
imul
incl
mov
adc
lods
xor
sub
pop
popa
aam
push
stc
cmpsb
incl
fidivrs
adc
mov
mov
outsb
or
jle
and
out
or
jbe
add
jle
or
cmpxchg8b
xor
and
sbb
mov
call
decl
jne
es
je
xor
mov
mov
fcompl
pop
lods
cmp
je
add
or
fldcw
in
pop
jg
mov
xlat
es
xchg
add
add
aaa
xchg
in
xchg
add
xchg
lahf
mov
daa
in
add
push
dec
mov
jne
xor
mulb
test
push
pop
cld
dec
xor
mov
adc
ret
mov
xchg
pop
inc
add
aad
sub
sahf
sbb
push
outsb
adc
adc
data16
mov
test
add
cmp
push
pop
push
call
hlt
mov
mov
and
out
mov
out
in
in
adc
movsl
jne
arpl
out
pop
popa
data16
xchg
sbb
jg
fcos
adc
psubb
mov
lahf
mov
jb
mov
jnp
popa
dec
mov
push
es
jb
fstpt
inc
dec
push
mov
jnp
jbe
dec
sti
movsb
shll
callw
mov
dec
divl
outsl
push
push
call
std
sub
popf
mov
cwtl
adc
pop
sbb
out
or
ds
les
jo
imul
in
push
mov
in
mov
lock
pop
cmp
data16
push
mov
dec
cmpl
jbe
out
iret
divl
mov
sbb
into
cmpb
and
dec
arpl
mov
or
mov
outsl
mov
cwtl
pop
and
mull
sbbb
or
push
or
fs
pop
imul
or
sub
mov
add
je
jmp
mov
imul
sub
mov
es
movzbl
mov
mov
imul
mov
jmp
int3
stos
lods
jg
sub
insl
test
jae
es
fldcw
lcall
mov
cwtl
mov
pop
mov
sbb
dec
xor
inc
es
mov
es
jbe
imul
pop
mov
lods
ja
pushl
out
add
adc
orl
cltd
std
mov
sbb
inc
outsb
and
gs
das
sar
adc
and
insl
outsl
jb
in
popa
imul
mov
jae
outsl
arpl
fs
mov
subl
and
and
xor
or
or
stos
sarb
jae
xor
imul
outsb
test
inc
jae
jp
pop
dec
jae
fiadds
imul
mov
gs
pop
dec
pop
xchg
cltd
int3
push
mov
dec
std
aas
aaa
cmp
push
push
xor
xor
mov
testb
dec
jl
pcmpeqw
add
add
add
clc
outsb
sbb
mov
pop
inc
movsb
sub
and
aaa
jne
adc
jle
imull
dec
mov
roll
movl
in
sbb
inc
in
inc
clc
add
movl
je
out
rolb
and
out
insl
sahf
jae
pop
mov
rclb
mov
adc
loop
les
pop
or
push
cld
push
out
sbb
loope
lea
xorl
xor
fidivrs
push
mov
mov
mov
mov
loopne
icebp
imul
data16
data16
pop
mov
mov
push
jmp
movl
mov
push
sti
lods
or
or
repz
add
test
pop
ljmp
adc
jnp
push
sub
push
push
out
decl
ljmp
adc
add
movl
les
lea
mov
sub
rol
dec
lahf
cmp
mov
push
fistpll
fidivs
mov
dec
gs
adc
in
sub
adc
rcrl
add
rorl
cltd
mov
data16
mov
cld
std
scas
ficomps
call
adc
add
ret
pop
mov
dec
inc
sbbl
dec
xchg
adc
or
xchg
mov
xor
jne
mov
mov
outsl
icebp
test
je
adc
push
and
movsl
or
pop
or
and
mov
out
mov
sbb
or
push
xor
jl
movsl
adc
outsb
xor
fwait
mov
xor
and
xlat
sbb
or
mov
nop
xor
js
roll
cwtl
sbb
bswap
fstl
clc
cmp
ja
or
push
or
mov
sub
sbb
xlat
and
fstpt
neg
and
je
push
push
push
cmp
mov
jnp
sbb
jge
sub
pop
mov
mov
imul
adc
sbb
cmp
jnp
das
mov
sub
push
in
cld
pop
je
mov
pop
or
je
pop
mov
icebp
jle
cmp
jg
sub
inc
xor
sarl
mov
aam
pop
cld
inc
rep
jmp
mov
jmp
mov
jmp
shlb
ret
jnp
in
fisubs
nop
or
arpl
shlb
and
sub
jg
lcall
hlt
sub
or
lret
test
lods
mov
adc
xor
mov
es
add
insb
jno
xor
xchg
push
inc
lea
fildll
sbb
or
or
flds
mov
jl
dec
pop
fstpt
xchg
fisubrs
lret
adc
mov
mov
in
pop
add
and
sub
das
mov
movsl
fisttpl
popf
or
movl
insl
inc
mov
inc
add
mov
adc
add
or
pop
lods
push
or
add
add
pop
mov
and
push
fwait
test
push
and
sti
lret
jbe
and
cmpb
add
xor
mov
fincstp
sbb
jmp
push
xor
std
inc
or
sub
add
cmpb
pop
sbb
or
sub
mov
mov
pop
cmp
mov
cmpsb
jmp
lods
and
sbb
mov
testl
inc
inc
or
repz
xchg
add
xor
clc
bound
jl
mov
and
xchg
xor
add
jne
push
dec
xor
mov
aam
xor
out
fs
les
push
jnp
fdivs
je
addb
jmp
push
ret
dec
mov
jbe
push
sub
jmp
ljmp
jnp
or
sub
data16
dec
jne
inc
adc
dec
jmp
mov
adc
incl
cmp
adc
mov
mov
dec
cmp
sbb
adc
mov
addb
pop
inc
cmp
shlb
sub
mov
or
jne
imul
or
je
orb
fsubp
inc
je
inc
or
sub
out
xchg
orl
movsl
xchg
decl
jb
cmp
ja
mov
mov
imul
jg
and
testl
inc
xchg
xor
cmp
mov
jl
jle
fwait
outsb
inc
stos
dec
add
add
sub
fldl
fstl
mov
shl
fdivrl
pusha
outsl
lea
shl
ficoml
imul
sub
stc
push
mov
aas
mov
and
xor
jmp
pop
dec
sbb
lcall
adc
lahf
imul
es
test
ret
das
pusha
push
loopne
mov
cltd
insb
fnsave
fstpt
push
inc
xchg
mov
pop
or
je
mov
push
sub
je
and
pop
pop
jle
je
pop
je
xor
daa
adc
out
test
inc
test
sub
sti
and
and
addb
add
sub
outsl
filds
je
imul
push
neg
jle
adc
std
js
pop
sub
jmp
lds
jmp
mov
push
sub
aad
dec
pop
mov
mov
dec
xchg
pop
adc
fcoms
ffree
or
sbb
orl
xor
mov
jg
pop
cmp
pop
and
outsb
jl
je
fmul
cmp
andl
fldt
leave
lods
mov
adc
push
xchg
xor
popa
ret
adc
and
mov
push
imul
dec
sahf
stc
xor
sbb
add
push
fstp
fldt
fldz
xchg
jge
shlb
or
inc
push
repnz
enter
cli
or
or
ret
pslld
adc
mov
dec
jle
imul
stc
add
mov
adc
adc
out
xchg
sub
lahf
std
xor
out
sub
pop
jecxz
add
leave
sbb
inc
cs
jbe
imul
cmp
mov
mov
das
jmp
outsl
bound
cmpb
xlat
fadds
outsb
dec
jg
xor
xchg
push
or
push
push
int3
into
sbb
rorl
mov
popa
push
pop
test
enter
mov
inc
cmp
and
daa
decl
test
xchg
clc
js
aas
sbbl
pop
mov
addr16
leave
repnz
dec
bound
and
cld
gs
sahf
mov
sub
inc
aad
iret
decl
js
mov
fwait
lds
stos
mov
cmp
or
mov
pop
out
sub
call
inc
imul
divl
jl
xor
cmp
call
mov
jmp
stos
push
inc
mov
push
sbb
sarb
repnz
test
nop
fildl
daa
movsb
lcall
clc
scas
adc
inc
pop
pushf
mov
pop
pushf
mov
fs
aam
imul
loope
jp
iret
incl
mov
ds
push
cmpsb
scas
mov
pop
or
addl
inc
jmp
mov
cmp
sahf
xchg
pop
cmpsb
lock
ljmp
movsl
mov
popa
mov
and
addr16
repz
mov
mov
and
and
outsb
bound
xor
and
mov
in
dec
sbb
sbb
add
cmp
stc
or
mov
sub
hlt
pop
bound
daa
add
xchg
inc
cld
push
ret
lods
loopne
xor
push
cli
pop
ljmp
cli
push
push
add
mov
movl
push
cwtl
fnstenvs
clc
add
jnp
mov
pop
sub
dec
sub
xchg
hlt
jmp
jno
shlb
lock
sar
data16
or
mov
daa
add
push
inc
push
inc
pop
jns
inc
gs
jo
imul
dec
add
push
dec
popa
jae
push
popa
insb
jne
mov
jecxz
fldcw
add
mov
inc
mov
addr16
rcr
mov
or
sbbb
daa
cmp
sub
loopne
dec
outsb
adc
ror
les
sub
or
or
popl
mov
enter
xlat
xchg
imul
mov
or
push
cld
mov
das
sbb
push
mov
repz
mov
add
stos
test
loop
mov
ljmp
mov
or
aam
sbb
or
adcl
push
int
mov
nopl
or
and
sbb
jecxz
push
lock
push
rorb
orb
leave
jmp
outsl
dec
pop
fistl
adc
jb
xstore-rng
cmpsl
add
stos
jbe
and
adc
inc
fadds
clc
lods
aaa
mov
icebp
mov
jmp
nop
cmp
mov
add
inc
cld
imul
inc
adc
inc
mov
add
and
push
cmp
mov
test
lea
push
sbb
daa
pop
ss
or
clc
push
imul
ret
icebp
cmp
adc
pop
ss
or
adc
push
sti
sub
int
jecxz
mov
jg
mov
cmp
jb
cmp
jne
pop
or
pop
pop
or
or
andl
mov
dec
lds
out
adc
test
jp
push
xor
add
push
xchg
jmp
testb
jmp
test
push
add
repnz
pusha
ret
ret
adc
pop
pop
divb
pop
mov
mov
je
cld
pop
jnp
push
jecxz
dec
xor
dec
mov
and
ljmp
push
faddl
js
daa
jmp
push
push
negb
add
leave
or
ret
ficoml
jmp
add
in
dec
mov
pop
mov
cmp
mov
push
push
push
jl
dec
hlt
std
decl
arpl
adc
mov
mov
movl
test
inc
or
or
pop
cmp
popf
fidivrs
sub
push
mov
push
jge
nop
add
lea
adc
push
clc
jae
mov
clc
loopne
cmp
jge
in
and
bound
iret
jp
popf
scas
adc
push
cmpsb
pop
stos
scas
add
jg
add
call
inc
ret
and
add
or
sub
scas
push
in
push
out
adc
fstp
push
xor
xor
sbb
and
pop
cmpsl
pop
add
ds
and
pop
push
push
cmpsb
pop
icebp
xchg
xlat
sbb
jmp
gs
jne
movsbl
inc
inc
jne
popa
scas
jno
add
and
fldenv
mov
loope
dec
into
push
pop
mov
push
pop
loop
xchg
sbb
mov
fcompl
jns
notl
out
mov
jne
fisubs
xchg
xchg
mov
je
push
imul
icebp
xchg
fiaddl
pop
loope
cmpsl
or
jae
and
lock
in
inc
cmpl
je
arpl
mov
sub
ja,pn
lea
fsubrs
sbb
rolb
pop
add
stos
push
mov
mov
xchg
lods
adc
push
adc
push
mov
std
push
cmp
je
xor
psubsw
sbb
sbb
xchg
ficoml
movsb
cmp
shrb
sbb
cmpsl
loopne
add
pushl
push
lret
std
lea
pop
add
inc
add
sub
clc
sub
jmp
nop
sub
push
mov
inc
in
mov
inc
or
es
insb
or
lret
sub
popl
js
xor
nop
jnp
fstpl
dec
add
mov
lcall
sarl
pop
cmp
adc
imul
imul
inc
cmpsl
push
mov
adc
stos
je
mov
inc
jo
gs
or
or
mov
or
lea
pop
push
push
push
push
push
jmp
or
or
imulb
pop
dec
cmp
mov
inc
or
pusha
add
inc
mov
sub
inc
aam
adc
outsl
pushf
adc
xchg
or
iret
cmp
fs
pop
bound
mov
sub
pop
lods
jg
stos
clc
mov
cmp
je
cmp
push
ljmp
sub
je
jmp
add
mov
sub
jb
je
jmp
cmp
cmp
fbstp
and
cmp
cmp
decl
sub
enter
and
mov
jmp
mov
jmp
bndldx
jmp
mov
jmp
mov
divl
fsincos
pop
xchg
sub
mov
ja
mov
push
or
pop
lock
test
sbb
xor
cmp
sub
mov
push
pop
pop
cmp
push
adc
sbb
test
call
lcall
test
or
ret
cmpsl
push
pushf
mov
inc
mov
out
xlat
xor
sub
xor
xchg
cmc
mov
mov
add
and
mov
les
pop
mov
or
enter
inc
std
push
das
sti
or
add
mov
add
dec
mov
pop
test
push
aas
lds
pusha
ret
jle
dec
mov
je
add
adc
adc
jmp
jmp
or
inc
add
movsb
das
or
repz
cmp
test
mov
cmp
jle
pop
xor
inc
imul
sti
jg
or
fstps
rol
movl
cmpsb
push
mov
adc
rol
dec
mov
xchg
jmp
outsb
scas
xor
dec
insb
ret
push
xor
out
and
mov
lea
mov
mov
add
mov
sbb
or
jmp
pop
mov
mov
cmc
add
inc
or
es
pop
out
into
in
out
mov
xor
inc
dec
mov
add
enter
int3
mov
adc
adc
fwait
pop
dec
dec
ljmp
loopne
jg
mov
and
mov
mov
cmpl
mov
xchg
rolb
fistpl
outsl
adc
testl
and
mov
sub
pop
loop
leave
ret
push
add
sub
or
pop
clc
adc
cmp
mov
mov
add
ret
mov
ds
inc
repz
sbb
push
test
sub
xor
shll
push
cmp
sub
pop
mov
sbb
jbe
jnp
xchg
mov
inc
xchg
cmpb
mov
sbb
loop
mov
pop
testl
addr16
jbe
pop
adc
add
int
cmp
xor
jne
pop
add
cs
mov
pop
sbb
jbe
xchg
push
xchg
adc
pop
sbb
imul
cmp
popa
loopne
fwait
pop
and
mov
jne
xchg
xor
pop
aam
pop
mov
stc
or
icebp
jo
cmpsl
sti
notl
cmp
leave
mov
mov
lret
pop
sub
sar
jmp
repz
jg
sar
dec
jl
lock
mov
sbb
negl
out
mov
adc
sbb
add
aam
xchg
push
or
mov
mov
and
inc
jg
add
cs
test
pop
push
andb
jmp
fdivs
jnp
dec
shrl
jnp
inc
or
ljmp
push
out
or
test
pop
movw
pop
js
push
sub
mov
adc
in
fwait
lret
push
int3
mov
mov
xchg
call
je
rcrl
jecxz
cmp
push
inc
lock
push
add
pushf
xor
inc
and
sbb
clc
dec
fsubrs
add
mov
push
sbb
arpl
xor
outsb
add
jge
push
pop
cmpsl
mov
clc
cld
xor
jl
push
jns
mov
pop
add
adc
fldl
fisttpl
rorl
mov
or
pusha
jb
push
jl
call
loop
aaa
bound
nop
xor
push
ficomps
outsl
hlt
and
or
dec
add
add
je
jg
fistpl
cmpl
rcrl
shr
fstpt
jbe
arpl
sub
and
xor
add
xor
in
add
cmp
adc
jge
cmp
mov
inc
dec
nop
push
sub
repnz
xchg
roll
xor
jnp
pop
pop
sbb
loope
aaa
add
pop
xchg
add
out
daa
sbb
std
das
mov
add
xchg
jns
push
cld
add
les
cli
sub
inc
das
inc
fistl
adc
lret
lods
sub
popa
lods
pop
inc
pop
cmp
into
cmp
mov
sbb
xor
into
arpl
or
cld
cmp
mov
mov
mov
cli
bound
push
push
pop
adc
mov
enter
lret
mov
jae
or
jmp
xor
mov
mov
mov
pop
adc
add
cmp
adc
dec
stos
push
pop
ja
mov
add
dec
aam
rcr
or
sbb
jb
push
add
jne
fstps
lds
icebp
out
dec
mov
cmp
pop
lea
jmp
lret
cmp
call
imul
shrb
out
sub
call
pop
ja
add
push
shr
mov
pop
cmp
jne
dec
je
je
mov
in
add
or
outsb
xorl
loop
or
in
clc
add
and
and
cmp
cmp
in
std
jne
push
adc
mov
add
jmp
pusha
jmp
push
movsl
sti
mov
adc
shr
or
dec
outsl
rcll
inc
divl
cmp
add
pop
test
xor
pop
push
mov
fists
push
pop
pop
or
inc
adc
shl
popf
jns
sti
aaa
and
mov
mov
call
sbb
fidivrl
sub
xor
mov
cli
push
movb
or
xor
call
mov
aam
pop
fcmovnb
add
dec
inc
dec
mov
dec
cmp
jl
xchg
cmp
add
hlt
jbe
mov
fmuls
test
test
xor
lahf
sub
sbb
inc
dec
xor
cmp
jb
add
out
lcall
imul
and
cmp
subl
adc
push
imulb
jp
and
sbb
out
dec
jne
push
out
dec
cwtl
dec
push
lods
nop
fwait
in
daa
adc
outsl
insb
jo
mov
xor
pop
xor
lock
sbb
jne
sub
adc
icebp
mov
hlt
int
pop
mov
call
js
push
sbb
push
push
lock
loopne
sbb
add
inc
pop
sbb
cli
jmp
inc
xchg
jbe
imul
icebp
jl
add
add
mov
xchg
sub
or
in
decl
pop
push
push
pop
in
fs
inc
femms
push
push
pop
nop
cmp
imul
or
and
add
cmc
call
aaa
cmp
rolb
sub
xchg
leave
or
fsts
cmp
leave
add
jmp
pop
push
jle
iret
mov
cmp
dec
es
adc
jnp
jb
cmp
leave
xchg
or
in
mov
movsl
sbb
pop
pushl
add
adc
sbb
mov
iret
in
call
xor
cmp
in
movl
dec
cmp
mov
std
xchg
mov
sub
cmp
cmpps
add
aas
xchg
test
adc
clc
push
cmp
push
mov
pop
ret
sbb
push
je
lock
sahf
jecxz
pop
cmp
add
inc
push
sub
mov
sub
push
mov
xchg
xor
adc
inc
aam
loop
dec
mov
cmp
int3
pop
or
clc
jne
out
xor
scas
cmp
or
mov
call
mov
iret
loopne
jno
std
push
and
add
cmp
je
sbb
ljmp
test
je
cmp
sub
push
cmp
pop
mov
cmp
pop
jecxz
sub
jg
into
adc
scas
shll
pop
test
mov
das
ja
cmp
notb
repz
push
mov
mov
fcmovnu
or
dec
rclb
sbb
scas
ror
call
sbb
mov
lock
sbbb
testb
sbb
jmp
lock
push
jbe
test
sbb
sbb
fisttps
js
in
adc
repz
and
lea
outsl
cld
mov
cmp
sub
jle
icebp
loope
add
xchg
inc
add
jo
inc
jl
cmp
xor
repnz
je
or
jo
mov
xchg
orb
mov
insl
in
rcll
mov
pop
inc
or
jnp
jge
iret
pop
jns
cmp
insb
lea
mov
sbb
stc
clc
push
add
je
mov
ret
sbb
or
cmp
insl
mov
cs
add
cmp
sbb
pop
inc
fcoms
pop
adc
sub
int3
ss
mov
imul
gs
jmp
bound
inc
mov
sbbl
addr16
push
insb
and
mov
testb
inc
push
sbb
xchg
pushf
test
lds
mov
jecxz,pt
rcrb
loope
jp
adc
adc
loop
cwtl
cmp
sbb
mov
outsb
adc
std
add
jns
ljmp
pop
inc
clc
les
mov
push
aaa
cmp
add
sbb
jnp
cmp
xchg
gs
fcoms
xor
out
xor
or
xchg
aam
nop
push
dec
mov
cmpsl
rcr
xor
and
mov
inc
lea
jl
andb
pop
jmp
or
pop
pop
insb
cs
add
push
aas
fstpt
sub
int3
cwtl
aam
testb
ja
adcl
test
movsb
pop
add
ss
cmp
out
mov
cmp
push
push
jne
xorb
fiaddl
and
dec
cmp
add
add
pop
int3
inc
dec
inc
mov
dec
push
sub
push
sub
inc
scas
push
fisttps
aaa
test
imull
and
popa
sbb
jnp
call
or
jmp
mov
cmp
xor
jge
sbb
jg
sti
xchg
imul
cmp
lods
ret
sub
jg
lea
mov
inc
lret
lods
loopne
pop
decl
push
outsb
pop
jae
mov
inc
in
jge
add
fcomp
mov
inc
dec
xor
lods
mov
add
adc
je
out
into
push
cmp
push
arpl
dec
shll
test
pop
or
ss
lods
sub
dec
ret
add
js
jge
jle
int3
or
sbb
push
push
dec
ja
and
lods
ret
or
dec
ficomps
pusha
clc
ret
cmovg
jl
inc
in
mov
xor
mov
xlat
pop
push
lcall
mov
push
xchg
xor
fisubl
pop
mov
xor
lahf
sbb
jo
sbb
adc
dec
test
stos
int3
in
incl
div
mov
mov
in
sbb
pushf
add
sub
jl
sbb
jecxz
cmp
pop
push
cwtl
adc
sbb
out
inc
jo
sarl
sub
jne
mov
les
xor
inc
mov
cmp
mov
add
shll
int3
sbb
rcrl
add
je
mov
jne
dec
inc
jl
sbb
aam
xchg
jne
xor
jnp
data16
ss
push
inc
fs
test
cmp
jne
aad
mov
lods
cli
push
sub
imul
mov
sahf
push
add
out
mov
push
rcll
outsb
ret
xchg
into
test
popa
fidivl
roll
adcb
jmp
cmp
xchg
call
add
aad
fcmovnu
dec
add
jnp
cmpb
std
rolb
ljmp
jne
out
mov
sub
fldenv
fadds
pop
arpl
lea
inc
cmp
faddl
test
inc
push
push
xor
or
inc
mov
dec
mov
mov
out
andb
mov
ja
lock
ret
push
movb
pop
mov
fimuls
insb
cwtl
pop
jle
aas
inc
add
sbb
sub
push
shrl
push
loope
repnz
gs
push
aas
insb
xor
cs
insb
iret
inc
fldt
addr16
popa
jae
testl
inc
adc
loopne
xorb
xchg
jbe
mov
movb
pushw
add
leave
jb
imul
je
sbb
add
cmp
xor
and
stos
jmp
test
cmovb
push
jl
fcomp
mov
adc
dec
mov
pop
addr16
sbb
add
add
add
inc
sub
int
push
clc
std
pop
mov
vmwrite
push
push
repz
mov
test
cmpb
fprem
jecxz
repz
or
lret
dec
sarl
lods
hlt
pop
mov
add
cmp
js
cmp
jne
shrb
inc
inc
je
iret
into
mov
ret
test
push
add
push
fmuls
js
inc
jb
mov
pop
aaa
repz
in
ret
cmc
add
mov
and
jmp
arpl
add
sub
sbb
xchg
inc
pusha
int3
add
sahf
pop
inc
and
pop
inc
loope
roll
mov
negl
mov
push
mov
xchg
lds
mov
movaps
mov
sub
xor
cmc
jge
and
adc
push
mov
adc
ljmp
push
add
or
pop
pop
push
pop
cmp
nop
push
hlt
clc
sbb
push
add
sti
lea
mov
enter
xor
add
aam
push
and
adcb
mov
push
mov
out
push
cmp
inc
push
xchg
cmp
mov
aaa
dec
jne
push
lea
mov
ljmp
jg
mov
call
pop
shrb
adc
or
sub
push
hlt
dec
test
add
fmull
push
mov
push
sub
sub
inc
sbb
inc
add
stos
push
dec
cmp
es
push
xor
fistpll
daa
and
push
dec
adc
mov
aam
sar
mov
jo
sbb
add
lahf
adc
dec
mov
or
cmp
outsl
scas
or
and
add
ret
test
add
mov
aam
shll
cmp
jge
sbb
jns
mov
push
inc
les
loopne
imul
sbb
sub
jno
insb
dec
xor
cwtl
std
movl
inc
fwait
clc
dec
pop
pop
mov
xchg
add
mov
or
add
loopne
pop
lds
inc
ret
cmp
push
rorl
leave
push
inc
xchg
clc
insb
out
mov
pop
pop
lods
enter
push
insl
mov
jmp
inc
es
sub
xchg
daa
adc
lods
fisubl
loop
imul
imul
or
mov
sub
dec
insb
loopne
or
add
fwait
jno
fsubs
cmp
sub
jne
pop
or
hlt
and
cmp
and
fcmovnb
mov
inc
divl
js
pop
xor
dec
push
mov
jae
add
nop
adc
xor
lock
dec
or
ds
aam
pop
add
inc
into
dec
dec
cltd
pop
clc
push
sbb
lock
call
in
fsubl
push
fcom
rclb
enter
sbb
mov
mov
lods
test
fs
inc
movsb
mov
push
cwtl
xchg
nop
nop
inc
push
sbb
cmpb
fs
je
push
inc
mov
jb
pop
clc
stos
cld
in
clc
jle
adc
mov
movsb
jmp
pop
mov
inc
push
stc
pop
sub
icebp
repnz
sbb
hlt
cmc
negb
fs
inc
idiv
stc
fs
inc
push
cli
sti
cld
nop
inc
push
sbb
incl
sbb
loop
sbb
in
out
fs
inc
out
jmp
ljmp
in
out
out
inc
push
sbb
rolb
sbb
aam
sbb
xlat
fcomp
fs
inc
push
fcmovu
fcoml
inc
push
sbb
ret
fs
ret
fs
inc
enter
inc
push
lret
nop
inc
push
sbb
into
iret
inc
push
sbb
mov
sbb
mov
mov
enter
mov
mov
mov
or
mov
xor
mov
xor
and
andl
pop
imul
xchg
pop
add
iret
adc
inc
push
les
pop
leave
add
inc
js
gs
sub
sub
pop
scas
nop
dec
xor
mov
fsubl
inc
dec
gs
jo
nop
les
leave
inc
xchg
sbb
or
mov
inc
dec
jne
dec
push
jae
pusha
mov
pop
fs
pusha
mov
out
xchg
or
outsb
pop
inc
jb
pop
js
sub
xchg
mov
mov
xor
shlb
shrb
notb
xchg
pop
adc
popa
pop
loope
in
xor
jbe
mov
push
mov
add
inc
imul
sub
gs
nop
loopne
enter
mov
cmp
fcompl
mov
outsb
or
mov
insb
outsl
ja
pop
pop
rolb
or
mov
in
mov
bound
jbe
and
mov
imul
inc
arpl
adc
arpl
mov
pushf
fld
adc
imul
push
pop
xor
outsb
fs
addr16
nop
dec
xchg
psraw
maxps
imul
test
pop
or
xchg
inc
pop
cmp
add
gs
add
or
scas
inc
or
js
in
nop
xlat
pusha
pop
pop
les
push
arpl
jmp
inc
jp
mov
mov
and
in
js
jb
insb
gs
sbb
sbb
push
xchg
arpl
nop
je
je
push
push
inc
or
push
inc
ret
or
push
pop
adc
add
lahf
or
inc
jbe
addr16
sub
sbb
ret
mov
or
or
mov
inc
mov
test
bound
jb
nop
in
push
add
cmp
les
inc
push
or
push
sets
mov
stc
xchg
sbb
push
popa
data16
fsubs
hlt
mov
cs
xor
scas
dec
pop
loope
inc
xor
cmp
insb
jae
adc
cmp
je
jnp
fbld
mov
add
mov
adc
std
adc
jb
fs
pop
mov
int3
adcl
fldenv
fmull
cmpsl
jo
inc
push
jmp
cmpsb
jmp
jg
add
lcall
adc
sbb
popa
je
fists
jno
cmp
fildll
mov
or
xor
loope
mov
mov
push
dec
jne
ds
ficoms
gs
insb
pop
push
outsb
arpl
popf
imul
sbb
ret
adc
or
adc
repz
adc
adc
loopne
je
pop
mov
mov
mov
inc
jg
mov
aam
sub
test
mov
adc
je
push
jp
jle
cmp
xchg
and
sti
lcall
add
jne
xor
cmp
jbe
jmp
or
or
fdivr
pop
add
cmpl
je
mov
adc
rorb
pop
mov
dec
add
mov
or
sub
insl
xor
or
rcrb
outsl
outsl
and
enter
inc
push
cld
jo
shr
insb
add
xchg
add
fwait
push
cwtl
fwait
sbbb
cld
sbb
adc
neg
sti
scas
mov
test
push
jl
cld
sub
add
xor
repnz
mov
movzwl
add
cmp
je
cmp
add
ljmp
add
pop
cmp
jg
fwait
idivb
or
jmp
sub
jne
das
add
mov
cmp
je
mov
shr
sub
incl
mov
pop
pop
sbb
push
faddl
add
cld
cmp
add
mov
pop
les
cltd
sahf
add
mov
ficompl
push
roll
out
cli
add
sub
push
push
inc
or
fmull
adc
negb
and
mov
in
mov
mov
sub
inc
cmp
scas
xchg
cmpb
jbe
or
push
or
dec
adc
clc
cmp
sub
inc
mov
pusha
sub
insb
push
mov
jns
push
push
loop
loop
pop
xor
push
ret
scas
push
push
xor
dec
ret
cmp
call
call
mov
or
sub
jbe
add
fidivrl
pushl
add
cli
xor
in
adc
leave
push
aaa
scas
loopne
decl
repnz
test
pusha
imul
insb
ljmp
jo
pushl
mov
negl
cmpl
mov
pop
inc
cmp
hlt
ljmp
push
add
jl
add
cmp
orw
sub
mov
call
push
daa
andl
sti
xchg
fildll
fildll
ret
sub
fidivrs
add
rorl
fildll
stc
mov
pop
add
xor
add
push
push
fisttps
fstsw
sahf
jae
fnstenv
ffree
sub
cmp
ffree
ffree
pop
ljmp
mov
mov
and
mov
icebp
mov
sbb
mov
jnp
and
push
rcrb
push
fldt
sbb
rorl
push
lods
sub
outsb
stos
pop
and
int3
sub
sub
out
ja
js
add
push
push
clc
adc
rcrb
or
aas
sub
rcr
insb
sub
jnp
sbb
jg
in
daa
mov
xor
enter
or
mov
push
xlat
add
jb
imul
mov
jns
adc
movb
xchg
test
inc
mov
mov
or
out
in
mov
cli
mov
dec
rorb
pop
imul
sub
nop
or
mov
push
pop
lea
pop
add
hlt
jne
movzbl
mov
jmp
fisubl
test
push
outsb
enter
fnstsw
mov
adc
insl
lock
setne
jmp
sbb
lods
dec
ret
dec
xor
or
pop
add
mov
xor
movb
and
or
inc
mov
xchg
int3
test
pop
dec
add
data16
or
sub
inc
lods
sbb
xor
lea
sbb
adc
jmp
aam
pop
repnz
loopne
cwtl
lds
cmp
add
psubb
jbe
dec
loope
call
pop
notrack
test
push
sbb
lds
mov
mov
decl
add
dec
outsl
jg
lret
test
adc
jae
push
rcll
jno
pusha
cmp
popf
ss
mov
or
in
sub
pop
cmp
call
popa
out
std
ja
push
push
clc
cld
push
rol
orb
or
pop
test
inc
call
fmull
gs
or
pop
ret
mov
sub
loop
lock
daa
push
adc
repz
pop
dec
nop
xor
xchg
pushl
or
lock
sub
movsl
xlat
fwait
repnz
sub
pop
out
sbb
mov
daa
movb
add
lret
mov
mov
inc
fnstcw
push
sub
movsl
mov
movsb
sub
pop
pop
xor
xchg
mov
xor
or
xor
xchg
pop
fsts
leave
repz
je
mov
sbb
sub
mov
pop
or
add
ja
pop
mov
stos
mov
fildl
mov
add
inc
test
cmp
jne
adc
inc
inc
fbld
push
scas
xchg
rcrb
dec
je
outsb
and
mov
vmwrite
push
lea
mov
mov
mov
push
cmpl
jle
in
lea
in
bound
fldcw
cmp
jbe
mov
pusha
loope
cltd
or
add
dec
mov
shlb
xchg
mov
jo
test
movb
push
lds
in
inc
loopne
sahf
mov
push
subl
mov
outsl
lock
or
call
pop
pop
aad
adc
jmp
mov
xchg
push
or
push
flds
pushf
iret
mov
addl
jge
or
add
push
aam
std
or
and
lea
inc
insl
jnp
sbb
bnd
in
jbe
call
sub
lods
gs
mov
fisubrs
pop
pop
hlt
adc
lods
jmp
xchg
scas
jge
repnz
and
adc
js
xchg
pop
mov
sub
out
jae
fildl
mov
jae
lret
xchg
or
rep
or
cmp
or
loop
loopne
imul
xchg
inc
cmp
mov
xor
sub
pop
cld
cmp
ja
imul
ja
dec
in
add
pop
daa
mov
push
cmp
jg
stos
jle
jae
mov
andl
test
ret
and
mov
dec
sbb
xchg
pop
pop
xor
fimuls
push
dec
push
shll
jne
dec
mov
lcall
das
xor
mov
repz
pop
adc
iret
add
jbe
mov
mov
sub
xor
push
mov
mov
fcompl
in
jmp
push
or
mov
or
popf
lods
cltd
insl
jmp
xor
pop
repnz
mov
sahf
shl
jo
adc
stc
push
jne
mov
ret
push
bound
cmp
jbe
les
push
mov
jmp
or
lods
push
and
lods
adc
cmp
jmp
mov
jne
out
sbb
mov
and
insb
aad
pop
sub
mov
cmp
mov
or
add
cld
mov
cmp
ja
jns
sbb
add
shlb
and
dec
mov
jo
shrb
and
jmp
sbb
and
inc
je
mov
push
inc
je
mov
inc
je
mov
loopne
insb
fisttpll
jp
mov
push
cmp
jbe
mov
lret
push
inc
mov
push
mov
jle
fdivrl
jg
mov
call
xchg
pop
mov
iret
movsb
push
ret
sbb
adc
iretw
add
lahf
push
add
push
cwtl
xchg
cwtl
jo
pop
inc
ljmp
or
or
andb
arpl
ret
add
jo
mov
cmpsb
ret
xchg
addr16
push
nop
xor
hlt
loopne
and
loop
mov
cmp
sarb
clc
enter
dec
addb
jp
jl
add
adc
cli
jbe
mov
into
mov
pop
jg
jmp
nop
mov
insb
add
daa
addr16
mov
push
inc
jle
lds
mov
lea
fcoml
and
outsl
xor
sub
imulb
pop
pop
push
orl
sbb
push
or
rorb
jecxz
mov
ficoms
mov
inc
dec
hlt
adc
jg
in
add
jmp
cmp
jne
pop
pop
or
push
pushf
outsl
aam
fbld
mov
test
cli
mov
mov
mov
psllq
sbb
dec
icebp
mov
pushf
sahf
roll
incl
jge
or
add
mov
movsl
ss
adc
js
add
adc
sub
fmuls
sub
and
std
pop
pop
imul
sbb
fcomps
js
xchg
sub
fisttpll
adc
ja
movswl
cmp
ficomps
add
pop
cmp
shrb
add
cmp
jmp
sbb
popa
sbb
mov
dec
inc
nop
dec
lods
or
xor
cltd
jae
movsl
ret
stos
ret
jle
dec
aam
inc
insb
or
cmp
jl
sub
push
cmp
or
neg
dec
std
inc
inc
je
stos
loop
pop
adc
mov
stos
or
and
daa
push
add
outsl
mov
pop
push
pop
add
mov
sbb
pop
pop
sbb
cmp
fisubrl
xchg
mov
mov
mov
outsl
mov
fsts
ss
adc
shll
xchg
add
inc
loope
push
stos
enter
repz
inc
push
orb
jne
cli
popf
jmp
cmp
stos
sbb
call
add
jnp
out
stos
jecxz
cmp
or
stc
cs
outsb
mov
ret
dec
jns
jno
outsb
cmp
or
cmp
xchg
mov
pushf
sbb
xchg
out
pushf
fwait
sarl
and
push
ljmp
push
push
shr
xlat
fiaddl
lods
or
jmp
insb
std
cmc
pop
pop
inc
loop
push
lock
mov
in
lea
inc
add
and
jnp
jbe
movsl
or
and
adc
inc
sub
mull
sub
or
add
adc
sub
inc
add
pop
sbb
sub
cmp
ljmp
jecxz
add
cld
add
or
insb
ja
dec
or
mov
movsl
ljmp
sarb
push
jne
testw
cmpl
or
add
inc
and
insb
pop
fldt
mov
dec
add
pop
rcll
insl
repz
jne
loope
in
push
fldt
filds
negb
inc
xor
mov
out
mov
fbstp
lea
mov
inc
sub
push
rorb
pcmpgtd
sub
jmp
stos
inc
clc
add
jns
aas
or
fadds
mov
cmp
jae
xchg
cmp
xor
cmp
pop
push
add
or
in
rcr
imul
pop
data16
mov
fs
mov
mov
sbb
xor
push
or
mov
inc
xlat
pop
xor
add
dec
out
cmc
add
adc
mov
mov
dec
sub
xchg
fadds
lods
inc
jge
or
jge
mov
pop
mov
sub
cmpsl
sbb
jae
dec
add
push
lds
in
insl
add
cli
cli
popa
or
xor
push
addr16
pop
fimuls
push
sbb
or
sub
sbb
pcmpeqw
dec
adc
cmp
neg
ret
and
and
mov
dec
adc
adc
aas
movb
mov
cmpb
idivl
fisttpl
push
mov
mov
in
push
xor
pop
mov
adc
mov
fclex
fldcw
test
aaa
jle
mov
cmp
add
sbb
push
outsb
push
mov
fidivs
jne
inc
push
push
cmp
je
adc
ja
or
cmp
test
pop
add
aas
jb
ficoml
iret
mov
add
xorb
fsub
testb
loopne
mov
aas
xlat
fstpt
loopne
in
add
test
mov
jne
lcall
jmp
lcall
std
data16
and
ret
sub
add
jae
fimull
push
mov
add
ljmp
push
sti
scas
stc
xchg
sub
in
jp
push
inc
imul
popl
ljmp
test
loope
rorb
mov
sub
je
les
pop
repnz
leave
xchg
outsl
das
add
add
popf
add
pop
insl
push
cmp
inc
nop
sti
mov
aam
jle
add
fldt
fstpl
fwait
and
popa
or
pop
add
mov
ja
xchg
mov
clc
push
roll
pop
pop
jmp
push
mov
inc
sbb
pusha
or
sub
jge
pop
xchg
sub
inc
add
mov
clc
repz
lret
repnz
sbb
clc
sbb
add
stc
inc
mov
push
mov
hlt
shrb
fistpll
add
shrb
pusha
or
jb
or
call
mov
add
xor
out
jo,pn
sbb
pop
imul
lcall
test
add
ficompl
pop
insl
dec
mov
mov
lret
jo
cmp
aaa
push
xchg
add
cld
call
add
sub
test
mov
add
and
fnstenv
adc
adc
negb
mov
adc
mov
lcall
lods
push
push
fldcw
std
add
bound
push
jg
insl
ret
pop
inc
mov
jge
mov
xchg
subl
mov
pop
call
ja
or
insb
cmp
push
dec
inc
ja
or
aas
adc
test
jnp
add
inc
dec
clc
arpl
mov
rcrl
insl
jmp
xchg
jns
ret
cli
add
repnz
pop
mov
stc
add
xor
add
out
cmp
std
push
loop
sub
xorb
or
push
xor
in
pop
dec
push
loop
call
dec
in
gs
mov
xor
data16
pop
clc
hlt
add
outsb
add
scas
mov
mov
out
cmp
ficoms
xor
jmp
adc
push
repnz
fwait
lods
mov
pushf
sub
add
or
dec
lock
sub
imul
push
fsubrs
dec
rol
outsb
int
pop
sub
lock
dec
mov
fiaddl
adc
fdiv
mov
ret
inc
sub
cmp
repnz
inc
dec
cmp
jb
or
hlt
mov
sub
sbb
mov
inc
test
inc
push
ret
sub
push
dec
scas
pushw
iret
cmp
push
push
xor
aam
push
fdivs
rcrb
sbb
and
push
clc
ret
cmp
cld
mov
sti
sbb
adc
push
adc
and
or
inc
mov
push
roll
fcmovbe
inc
fdivrl
and
loope
and
cwtl
sbb
cli
int
jmp
inc
pop
sub
and
sbb
shll
xchg
loopne
push
cmp
xor
add
movsl
sub
or
xlat
mov
sbb
ret
dec
push
inc
or
insb
dec
jno
ret
stc
or
push
cmp
jo
lods
sub
mov
inc
hlt
xchg
adc
sub
fwait
mov
js
jo
add
bound
dec
lods
jb
mov
fimuls
movb
cmp
jecxz
repnz
out
xor
call
push
jno
mov
stos
test
cld
test
flds
or
xor
inc
cmp
pushf
xor
or
out
out
repnz
sbb
add
push
push
xor
in
or
sbb
dec
add
push
dec
sbb
dec
xor
sub
adc
outsb
popf
mov
pusha
mov
or
mov
mov
jnp
vcmpsd
or
cmpl
mov
lgs
mov
fisubl
fst
clc
sbb
dec
add
fsubs
dec
or
sub
insb
mov
jno
xchg
js
call
xor
xor
or
xor
test
repnz
xor
pop
jg
add
push
enter
xchg
inc
ds
cmp
jg
jp
xchg
or
in
xchg
and
cmpb
jne
dec
ret
or
xchg
and
dec
fnstsw
lock
jns
add
add
mov
aam
push
aam
pop
sbb
sbb
jge
cmp
inc
jge
pop
mov
jns
add
ud0
jmp
add
loope
jle
mov
sbb
in
push
out
add
hlt
imul
pop
lret
mov
leave
adc
sbb
insb
testb
cmpsb
sti
into
inc
icebp
or
add
sub
jae
or
push
cwtl
mov
jge
dec
or
mov
mov
es
jge
fisubs
ja
sub
add
test
mov
xchg
adc
xor
prefetch
push
aam
and
add
pop
add
jg
or
popa
inc
mov
fnstenvs
or
fwait
cmpsb
imul
push
shrl
cmc
cwtl
faddp
pop
sbb
pop
and
push
add
mov
insb
mov
pop
cld
and
add
dec
and
jo
sbb
je
dec
push
xchg
scas
fsubrs
aam
in
cmp
adc
sbb
xor
cmp
add
push
jbe
in
push
fisttpl
add
pop
xchg
dec
je
add
xchg
outsl
fldpi
jg
push
add
fdiv
mov
test
mov
mov
adc
wbinvd
dec
adc
xchg
loopne
ss
out
aaa
sbb
pop
push
iret
mov
sbb
jb
dec
div
sbb
sbb
jnp
and
clc
in
repnz
push
jmp
sub
je
pop
je
jmp
dec
loopne
mov
jne
mov
fistps
inc
bound
sub
pop
repnz
mov
addr16
rcll
adc
add
xchg
daa
xor
inc
ljmp
loope
sbb
fcmovnu
sub
or
or
add
std
sub
xchg
mov
add
fiadds
mov
mov
call
inc
sub
add
and
add
in
inc
sub
and
ljmp
cmp
sbb
pusha
sub
jbe
inc
pushf
cmp
add
fdivs
cmp
loop
dec
sbb
je
xchg
insb
inc
add
xchg
cmp
mov
mov
loop
add
jp
repz
and
in
addr16
das
or
call
or
pop
lret
add
sti
testb
adc
mov
dec
and
jbe
push
aaa
xchg
add
push
or
lds
sub
cmp
pop
or
fcomps
mov
rcll
pop
sub
test
fsts
fldenv
push
sub
adc
mov
lods
sbb
cld
clc
and
adc
mov
and
arpl
dec
add
dec
das
push
dec
icebp
push
add
out
mov
pop
pushf
shrl
push
mov
sub
cltd
jp
mov
sbb
jne
mov
lods
mov
adc
add
add
and
pop
loopne
sbb
out
xor
cmp
push
jmp
je
mov
test
clc
cmp
aaa
add
inc
daa
std
mov
add
inc
das
aam
push
insl
orb
ljmp
add
pop
pop
adc
inc
mov
add
add
sub
jae
shll
pop
test
jle
ret
stc
sub
mov
mov
aam
mov
inc
mov
divl
dec
ljmp
fstps
nop
inc
inc
loope
cmpsb
sbb
call
jmp
repz
test
sub
mov
add
rolb
sbb
ret
xchg
and
rcrl
add
mov
cmpsb
pusha
pop
inc
fcmovnbe
cmp
in
lock
mov
xchg
fstps
aad
jl
push
sar
jg
inc
push
cmp
jne
xchg
subb
dec
pop
adc
mov
adc
sub
je
dec
std
pop
sub
fisubrs
sub
je
jmp
mov
jmp
or
add
sub
cmp
push
inc
testl
push
fcoms
jl
push
xor
mov
xor
xchg
mov
add
test
xchg
fistl
sbbb
roll
mov
add
in
add
sub
lea
pop
add
sbb
xchg
push
xor
or
sbb
mov
or
das
fmuls
aaa
adc
cmp
jg
mov
pop
cltd
xor
sub
add
mov
aas
cli
out
add
fs
sarl
push
push
ds
push
jne
testl
cwtl
add
xor
ret
ret
push
fadds
add
loopne
mov
loop
mov
pop
and
push
outsb
push
sub
add
add
sbb
notl
adc
jne
shrl
subl
inc
jae
and
js
and
pop
les
mov
jo
iret
adc
test
jbe
int3
mov
pop
lock
push
cmp
lock
test
sub
add
movzbl
sbb
mov
cmp
nop
or
rolb
in
jo
shr
fnstenv
jb
push
sbb
cmp
jge
mov
in
in
lock
call
or
xchg
lock
out
sbb
stos
pop
loope
fdivl
clc
jmp
out
add
in
push
add
push
pop
xchg
inc
jmp
shrb
pop
sbb
jge
cmp
jle
adc
fs
cmp
repnz
fcoms
adcl
mov
xchg
or
mov
andb
mov
pushf
and
mov
push
adc
test
or
fs
add
jne
popa
leave
mov
push
xchg
xor
and
xor
sub
mov
push
sub
sbb
xchg
cmp
fsubs
cli
sarb
push
jae
jo
jle
push
lods
sahf
mov
add
pop
inc
mov
jecxz
lods
and
fbld
xchg
fidivl
xor
adc
aad
imul
iret
notl
dec
out
mov
add
lods
test
mov
dec
leave
xlat
pop
pop
mov
push
call
pushf
add
adc
inc
lds
mov
adc
dec
add
or
ficoms
in
push
testl
daa
add
inc
push
cmp
xlat
add
mov
cmp
test
ret
sbb
clc
add
fadds
inc
in
pop
or
ds
scas
jns
jne
or
push
pop
mov
cmpsb
add
lcall
test
push
lods
adc
inc
sub
pushf
xor
lds
mov
add
loopne
ret
cmpsl
sahf
inc
mov
fmulp
mov
insb
je
nop
call
and
pushf
sbb
or
cli
xchg
je
andl
adc
iret
add
aam
andb
add
add
dec
jge
or
sub
jno
add
inc
loop
outsl
pop
xchg
sub
add
sbb
ja
cmc
jb
paddusb
fwait
jmp
or
mov
xor
ffree
and
jb
orb
add
insl
and
push
sub
incb
dec
push
call
pop
pmaxub
pop
stc
xchg
sub
jb
add
je
enter
mov
xchg
jp
cmp
mov
pop
or
dec
les
adc
faddl
or
ror
dec
mov
repnz
enter
icebp
bound
in
push
shlb
adc
lcall
sbb
arpl
insb
mov
push
cli
adc
leave
push
mov
or
call
lret
mov
push
add
les
jmp
lea
sub
adc
mov
pop
add
push
mov
xor
out
and
gs
sbb
add
xchg
daa
cmp
lock
sti
pop
movsl
mov
add
or
insl
out
mov
sbb
decb
in
lods
cmp
es
add
jo
or
call
and
jb
or
adc
test
pop
mov
lret
bound
jno
sbb
fiadds
push
ds
je
dec
cmp
sub
add
fldt
clc
or
mov
imul
jns
sub
fwait
dec
sub
add
cmpsb
jmp
adc
jl
movsb
das
cmp
mov
push
pop
sub
fwait
pop
inc
mov
cwtl
sub
pop
jbe
or
shlb
mov
adc
push
insl
mov
jl
cs
adcl
js
popa
cmp
and
mov
cmpsb
sbb
sbb
push
sub
inc
fld
aad
lret
xor
mov
pop
fldenv
xor
mov
xchg
xor
clc
ret
dec
hlt
jb
adc
cmp
fbstp
jmp
gs
out
ficompl
ljmp
je
sub
je
fmuls
push
pusha
lods
push
jb
dec
insl
ja
inc
jle
ret
pop
mov
movsb
pop
sub
inc
dec
mov
sbb
lock
and
mov
push
add
inc
xlat
std
ds
lea
dec
int
in
or
adc
xor
xchg
sub
rolb
push
push
rclb
mov
pusha
push
pmulhuw
xor
pop
je
jne
sbb
jmp
jb
or
dec
push
mov
popf
lods
movsb
push
inc
call
and
lret
dec
sbb
mov
mov
add
jmp
icebp
rol
adc
sub
cmpsl
fcmovnu
sub
push
std
arpl
cld
mov
mov
iret
or
jne
cmp
retw
sti
push
mov
in
adc
and
test
mov
test
aad
jae
fisubrs
cmp
mov
imul
inc
psllq
lcall
aas
add
add
je
push
xchg
das
push
sub
adc
sub
out
adc
mov
int
out
subl
test
cmp
cld
jo
inc
add
scas
rol
daa
dec
test
mov
aad
push
addr16
mov
cld
movb
mov
mov
and
mov
fiadds
les
aad
ja,pt
jl
inc
lea
sub
data16
mov
mov
add
lods
dec
xor
mov
mov
cmp
inc
mov
add
jmp
cmp
dec
pop
mov
fistl
or
hlt
jg
sub
mov
testl
sbb
sub
cmp
dec
push
or
loop
ficoms
adc
rolb
out
add
adc
js
out
inc
add
or
inc
inc
roll
xchg
push
repz
pop
roll
out
jns
inc
sbb
dec
or
and
bound
adc
or
mov
jge
mov
push
add
idivl
mov
sbb
aam
push
lret
xor
sub
pop
add
int
cmpb
mov
mov
in
inc
push
or
rcrb
push
arpl
hlt
nop
push
pusha
jae
repz
rcrl
lods
js
clc
pop
push
jg
cmp
in
loop
fucom
adc
mov
mov
jmp
mov
xor
in
push
in
push
cld
and
push
xchg
inc
push
mov
or
insb
mov
sbb
and
adcb
dec
test
add
dec
and
jb
rcrl
adc
jmp
pop
sbb
xor
push
es
add
mov
imul
xchg
add
ret
jno
loopne
inc
mov
lods
cld
ss
je
stos
mov
rol
push
xchg
cs
mov
pop
pop
mov
mov
push
xor
hlt
clc
mov
inc
sub
xchg
cmp
loopne
fsubl
jae
fimuls
loopne
and
or
or
mov
mov
mov
dec
iret
aam
shll
addr16
add
xchg
adcb
aaa
jns
arpl
cmp
sbb
add
xor
enter
cmp
je
jmp
xor
inc
enter
xor
lret
testb
and
ret
mov
add
sub
or
or
push
lret
mov
push
push
cmp
xor
xchg
les
push
cmpsl
nop
fwait
or
mov
mov
mov
cmpsb
jle
cld
cmpl
and
ss
xchg
cmpb
sbb
in
jae
lods
aaa
insl
inc
xor
lcall
mov
xor
in
rolb
xor
pusha
sbbl
lea
nop
push
nop
add
or
mov
xchg
int
or
bswap
int3
mov
rclb
arpl
sbb
mov
sbb
leave
mov
adc
jmp
xchg
xchg
ds
enter
pop
pushf
mov
movsb
test
add
in
nop
or
push
push
cmp
cmpsb
nop
popa
sub
and
test
aad
orb
sub
mov
loop
dec
ret
rolb
push
dec
outsl
xchg
or
and
in
cmp
xchg
pop
pop
or
xchg
inc
push
sti
push
popa
hlt
add
mov
test
leave
sub
pusha
push
sahf
xchg
inc
loope
cmp
in
cmpsb
lock
inc
ret
enter
test
stos
push
pop
mov
daa
js
mov
jae
xchg
cmp
sbb
imul
cmp
cmpsb
sub
adc
rep
stc
and
and
mov
jae
pop
int3
adc
mov
daa
jb
mov
std
movb
or
aam
subl
sbb
xchg
sbb
mov
sbb
negb
lahf
adc
and
popa
xchg
int3
pop
push
sbb
xchg
add
dec
xor
mov
lods
xchg
or
mov
mov
mov
mov
add
cmpsb
sbb
adc
or
out
mov
test
mov
inc
mov
adc
insl
dec
mov
mov
bound
inc
pop
xchg
fndisi(8087
pop
inc
adc
ret
nop
dec
jns
inc
mov
dec
xchg
in
negb
mov
idivb
or
sbb
aaa
js
std
iret
sub
and
mov
leave
incb
add
add
inc
sbb
inc
add
cmp
stos
adc
push
add
cwtl
adc
addb
pop
adc
insb
xor
sbb
dec
aam
push
lret
sbb
jmp
cmc
rcll
xor
loopne
fcoml
aas
pop
jg
testb
pop
mov
mov
shlb
enter
jmp
and
pop
rorl
cmp
inc
and
mov
jnp
pushf
xchg
test
in
pcmpgtw
and
inc
push
cmp
inc
imul
jge
cmp
jl
add
and
sbb
fisubl
xor
cvtdq2ps
push
jge
clc
xchg
sbb
mov
inc
cmp
push
jl
cld
sar
mov
test
lds
setle
xchg
pop
jmp
incl
and
push
xor
ret
mov
jmp
repz
ret
push
lahf
and
pop
subl
nop
cmp
jns
xchg
adc
imul
jo
daa
insb
sub
pop
push
data16
arpl
lcall
pusha
push
xor
roll
dec
push
and
pop
adc
add
imul
and
lods
dec
into
or
xor
mov
aad
pusha
mov
pusha
lds
add
jbe
aam
ljmp
subb
jge
and
lahf
jl
je
cmpb
add
xorl
arpl
and
mov
push
mov
jo
mov
int3
add
push
push
outsl
mov
clc
adc
sbb
inc
inc
inc
ret
std
test
sbb
sub
mov
sarb
cli
jbe
lock
xlat
inc
fnsave
fmuls
pop
mov
push
push
xchg
adc
inc
pop
popa
xchg
ljmp
imul
js
mov
xlat
movsl
pop
test
xchg
scas
xor
fldl
and
jne
aas
mov
andb
add
push
push
pop
icebp
push
movsl
lods
scas
inc
aaa
dec
pop
movsb
xchg
aaa
pop
sub
jb
inc
mov
inc
xor
decb
lret
jne
adc
mov
lea
or
pop
jne
push
in
iret
in
mov
and
out
sbb
movl
add
xchg
or
or
data16
mov
mov
rol
or
scas
cmpsl
mov
mov
sbbw
pop
jnp
lods
push
movb
punpckhdq
xchg
fucomp
loop
call
sub
ret
or
loope
pop
or
pop
popf
sbb
bound
xchg
or
or
jne
push
add
mov
or
add
cmp
mov
js
shlb
ficompl
test
cmp
and
lock
xchg
mov
dec
mov
pusha
and
mov
cmp
call
push
call
nop
cmp
shlb
push
pop
dec
and
xor
in
in
or
fisttps
ss
mov
sbb
fcompl
jns,pn
ljmp
sub
pop
pop
push
in
aam
fdivrs
adc
adc
and
sarb
push
sub
sarb
xchg
int3
and
insb
xor
mov
sbb
pusha
or
and
cmp
push
mov
push
les
orl
add
enter
rorb
cmp
nop
fwait
jnp
sub
sysret
hlt
cmp
stos
mov
sbb
nop
inc
push
lods
and
int3
adc
or
into
push
and
femms
mov
mov
add
ja
nop
loop
fs
push
push
insl
add
fs
gs
mov
jg
popa
insl
or
in
or
dec
push
xor
add
and
xchg
push
fbstp
cmp
frstor
cmp
inc
cmpsl
outsl
mov
push
outsb
imul
popa
jns
popa
adc
ja
test
das
push
or
fs
gs
outsb
inc
in
shll
mov
push
hlt
push
xor
ror
mov
add
or
dec
cmc
sub
cli
push
test
imul
pop
adc
insl
stos
mov
or
sbb
add
cmp
jne
or
inc
jb
add
mov
ds
inc
lds
mov
cmpl
jae
jg
or
lea
adc
cmpl
mov
aam
lds
sahf
xor
testb
jb
arpl
test
jle
add
out
add
mov
insb
pop
shr
or
and
insl
sub
sbb
data16
int
scas
pop
rolb
cs
pop
dec
add
mov
mov
and
enter
sub
pop
enter
sbb
xchg
fcmovne
mov
add
or
bound
xchg
lea
imul
out
xor
outsb
sar
add
and
push
into
shlb
cmp
jno
dec
jbe
adc
add
mov
or
adc
bound
and
adc
and
sbb
pop
mov
inc
mov
add
in
in
adc
add
mov
xchg
addb
cmp
mov
cld
cltd
push
or
leave
pop
test
inc
adcl
or
mov
movaps
ret
xchg
jecxz
int3
cmp
std
push
xchg
mov
int3
ret
xor
sbb
call
scas
xor
adc
mov
lods
jge
add
jno
adc
dec
or
daa
inc
imul
add
jo
inc
js
inc
rorl
xchg
lock
in
add
mov
dec
ret
xchg
ret
sbb
rclb
or
adc
push
mov
or
add
inc
int3
or
cmp
rcrb
adc
aad
and
cmp
enter
mov
dec
jle
or
jo
jo
fildll
mov
xor
jo
adc
das
jae
in
adc
sub
movsl
sub
shr
int
xchg
insb
xchg
inc
dec
push
push
xchg
adc
fdivs
sub
mov
nop
mov
movl
jg
xor
lea
imulb
rorl
jl
mov
icebp
push
add
outsl
repz
mov
xor
mov
mov
dec
inc
xchg
cmp
or
mov
or
mov
fnop
inc
mov
mov
test
mov
flds
jmp
je
adc
mov
unpcklps
sbb
fwait
imul
fimull
adc
jae
test
cmpsl
jo
xchg
xchg
pop
mov
and
inc
sbb
or
mov
inc
cmp
cmpsl
movb
in
fmuls
or
cmp
dec
push
sbb
pop
unpcklps
pop
push
dec
imul
add
arpl
clc
cmp
mov
cmpsl
sbbb
inc
sub
pop
inc
loopne
stos
xchg
ret
inc
divl
or
or
sbb
mov
mov
inc
jle
push
mov
sbb
xorl
or
jge
sub
cmp
xchg
xor
ja
insb
xchg
push
out
xchg
dec
sbb
push
stos
in
cmpl
and
inc
data16
pop
inc
push
cmp
test
cmpsb
sbb
addr16
sahf
movsb
fistl
fadds
inc
or
add
inc
and
inc
movsl
jne
ret
fstpt
push
jmp
inc
icebp
pop
lret
sbbb
adc
add
int
mov
insl
dec
or
dec
jbe
outsb
cmp
aam
enter
mov
fmuls
fldpi
sbb
and
pop
sbb
dec
lea
daa
xor
jecxz
pop
les
sbb
pop
icebp
je
enter
movups
adc
inc
adc
mov
push
pop
enter
mov
pop
pusha
mov
shll
sar
test
push
mov
xor
cwtl
push
nop
test
shll
xor
xor
push
pop
shll
dec
pop
lods
xor
jl
pop
pop
xor
xor
sub
inc
and
dec
pop
shll
adc
int3
or
test
fucomi
xor
cmp
mov
xlat
mov
cmp
inc
inc
jmp
adc
sti
dec
xor
fmull
lods
cmp
int
out
in
cmp
cwtl
cmp
fcomps
cmp
cmp
mov
inc
lcall
cmp
xor
mov
dec
xorl
cmp
pushf
lods
les
test
cmp
jae
adc
leave
out
cld
cmp
iret
xchg
cmp
or
or
pop
mov
cmp
or
sbb
nop
cmp
sbb
int
out
sub
pushf
cmp
into
sahf
xchg
cmp
and
cmp
pushf
pusha
test
mov
jae
cmpb
xor
daa
fwait
xchg
int
cwtl
cmp
sub
rcrb
shlb
add
cltd
fadd
sbb
pop
fs
jb
mov
mov
pop
cs
movsb
mov
fcmovnu
xchg
aaa
mov
mov
xlat
or
and
dec
xor
sbb
lea
leave
and
mov
and
in
mov
cmp
mov
movsb
ret
pop
rorb
cli
xor
add
mov
rorb
leave
dec
adc
mov
push
add
ret
dec
jb
cmp
mov
push
push
nop
and
push
les
jecxz
push
sbb
test
sub
stos
pcmpeqw
mov
add
sub
out
sbb
and
mov
and
pop
adc
pop
ret
es
or
fistl
mov
fs
add
mov
jl
mov
or
mov
rcrl
mov
cld
pop
push
inc
pop
and
inc
push
sub
daa
outsb
in
inc
dec
test
xchg
shlb
or
movq
add
in
mov
and
jb
and
cmpb
cmc
sbb
mov
add
clc
sub
push
xchg
jmp
sbb
add
pop
rcll
add
sbb
int
std
iret
outsb
cwtl
xchg
cmp
and
fs
cmp
icebp
pop
roll
lret
dec
jb
daa
jle
cmp
and
out
jno
jecxz
cmp
add
ret
mov
or
dec
inc
lea
and
iret
jne
mov
adc
ret
mov
and
fs
inc
sbb
rcrl
test
push
hlt
add
insl
add
jne
sbb
lahf
cmpsl
push
push
jg
shl
mov
mov
pop
mov
pop
dec
adc
in
dec
shrb
cs
shlb
mov
xor
in
dec
cs
cmp
dec
cs
xchg
mov
dec
leave
xor
or
jb
xor
pop
sbb
leave
xor
sub
mov
cmp
pop
rcrb
pusha
or
pop
mov
js
push
bnd
push
inc
jo,pn
cwtl
je
add
pop
add
loopne
je
aad
out
or
push
lods
cmp
in
pop
adc
add
outsl
je
fs
jne
dec
jne
inc
imul
imul
xchg
dec
dec
jb
pop
outsl
jb
insl
jo
jl
aas
xor
jb
insl
push
je
rsqrtps
pop
enter
je
adc
ja
jle
pop
inc
outsl
outsl
insb
je
pusha
das
and
inc
jns
inc
cmovnp
inc
outsl
aaa
dec
int
inc
dec
adc
lds
orl
sti
and
jne
fistpl
fnstenv
out
lock
adc
int3
insl
mov
je
or
add
shll
add
jmp
add
jae
pusha
aam
inc
pop
cwtl
add
das
lock
jnp
enter
adc
push
inc
jne
or
pop
adc
or
add
jnp
sbb
push
addl
movl
fsubrs
and
or
push
test
adc
adc
xchg
or
adc
jns
arpl
enter
adc
arpl
inc
xchg
sbb
push
inc
jb
shlb
mov
and
or
lock
sub
sbb
gs
cwtl
arpl
sub
xor
push
adc
mov
inc
jbe
lret
lret
out
inc
jb
jl
push
push
sbb
int3
inc
add
insb
dec
push
addr16
arpl
dec
pop
xor
xchg
sbb
or
arpl
jns
lret
movsl
jo
adc
or
adc
lods
push
lret
adc
push
test
jp
and
int3
outsl
fildl
roll
adcl
sub
arpl
or
xor
pop
or
call
and
mov
stos
pop
xor
mov
dec
test
jns
pop
jb
int3
insb
hlt
jb
fs
or
or
aam
mov
mov
fcmove
adc
or
push
mov
loope
add
nop
int
dec
adc
mov
sub
stc
cmp
push
lock
or
push
scas
pop
adc
pop
xor
popl
pop
sub
fnstenv
push
mov
je
dec
je
push
or
sbb
xor
sub
loopne
sti
jbe
push
mov
sahf
mov
aaa
nop
adc
inc
cmp
enter
nop
int
mov
cmp
mov
leave
clc
das
push
hlt
mov
pop
hlt
call
pop
js
lock
leave
and
mov
in
sbb
xchg
xchg
psubsb
popa
pop
repnz
add
xchg
mov
jae
rorb
pop
xor
push
or
test
add
int3
or
sub
xchg
les
push
ror
cmpsl
shlb
xor
shlb
mov
loopne
or
xlat
inc
lea
loopne
sub
outsb
add
cmp
pop
je
in
xchg
sarl
sbb
xor
cmp
rolb
pushf
inc
leave
sarb
mov
add
roll
fwait
adcb
adcl
lahf
jo
push
push
jge
out
pop
imul
add
xor
test
and
ss
or
in
add
xchg
add
adc
fidivrl
adcb
push
dec
adc
lods
fsubr
sar
pop
pop
int3
adc
test
push
add
testb
fwait
push
mov
xor
mov
xor
out
inc
les
pand
test
pop
je
or
das
les
fldenv
into
inc
inc
jae
dec
clc
jmp
adc
fldt
inc
clc
push
lock
sub
add
xor
lea
mov
call
jb
sub
sub
mov
nop
popf
int
in
adc
pop
lods
inc
xchg
add
int3
and
push
add
seto
jnp
sbb
inc
inc
inc
or
stos
stos
movsb
adc
ss
and
push
and
scas
ror
xlat
sub
add
sub
in
out
push
or
dec
push
ss
jne
add
in
das
adc
xor
fldcw
adc
or
push
xchg
cmovo
add
add
mov
nop
push
jmp
cmc
adc
ret
stc
and
push
jmp
or
lods
push
add
in
mov
or
add
in
outsl
cmp
lea
cmpsb
cmp
push
mov
mov
inc
xchg
clc
fimull
in
fwait
add
aas
int3
jae
or
add
jecxz
or
mov
dec
es
loopne
sbb
loopne
and
lods
pop
icebp
sub
sbb
mov
or
or
or
nop
or
push
or
mov
in
loope
or
aaa
pushf
and
xchg
popl
jecxz
xor
ret
cwtl
xchg
jmp
push
in
loopne
xor
lea
inc
or
xorl
xchg
add
jg
movsb
lret
mov
decl
push
or
scas
jp
in
call
add
or
mov
pop
mov
add
mov
lret
shl
sbb
sbb
cwtl
inc
xor
stos
aaa
adc
mov
jle
and
adc
clc
orb
sarl
sub
add
push
es
dec
rep
jne
mov
add
sbb
ljmp
sub
inc
add
addb
or
lret
vsqrtps
adc
icebp
sbb
arpl
mov
enter
push
les
and
pop
adc
subl
stos
xchg
addr16
inc
in
dec
push
mov
adc
or
mov
loopne
mov
dec
je
and
inc
shlb
fists
fdivrp
fildl
push
jns
sub
js
es
pop
ss
and
hlt
pop
mov
sbb
push
add
movsb
jns
xlat
lock
mov
jp
in
cld
mov
aam
dec
repnz
xchg
push
fnsave
or
popa
adc
mov
in
loopne
lea
sbb
adc
pushf
cwtl
mov
sbb
rol
pop
cmp
ja
and
stos
cwtl
fcomps
dec
sbb
mov
repnz
inc
lret
into
cmp
gs
fnstenv
aaa
or
jb
nop
fld
xchg
cld
test
test
sbb
addb
enter
sbb
and
jb
mov
pop
push
and
jae
mov
add
mov
adc
in
and
insb
inc
jmp
dec
jo
cmp
leave
push
xchg
fsubrp
or
add
test
ja
fs
sub
push
cmp
add
outsb
mov
mov
add
pop
cld
adc
jle
imul
mov
cmpsb
xchg
mov
inc
fwait
jecxz
and
into
test
or
call
jae
aad
fcoml
daa
enter
inc
fimuls
mov
xor
pusha
sbb
sbb
bound
cltd
fcmovnu
sbb
cmp
add
jo
pop
enter
or
or
add
ret
inc
xchg
lock
cmp
ret
in
mov
mov
or
sbb
fmull
mov
test
fcomp
sbb
sbb
and
aam
mov
mov
xchg
imul
rcrb
fadds
mov
int3
sbb
cmp
mulb
lods
sbb
inc
ror
sub
or
ljmp
je
jmp
push
jb
mov
sbb
enter
sbb
les
je
outsl
inc
sahf
and
xchg
fxam
addr16
test
dec
fiadds
ret
mov
lcall
jg
xchg
out
mov
and
fnstenv
lret
add
and
insb
cmp
fsts
dec
cmp
pop
enter
sbb
flds
cmp
mov
orb
mov
mov
or
pop
mov
push
inc
ret
lods
pop
lods
push
pop
fbld
mov
test
mov
or
cmp
movsb
ljmp
mov
or
mov
sbb
sbb
add
cmp
jmp
rclb
dec
push
jmp
pop
xchg
dec
nop
nop
and
es
pushf
cs
ret
cmpsb
adc
orb
mov
mov
push
es
gs
add
mov
jb
jns
lock
fbstp
sbb
or
push
in
in
sbb
bound
jl
cltd
sbb
xor
les
fists
enter
jb
fnstsw
push
sbb
nop
in
enter
loopne
adc
repnz
loopne
mov
fs
push
sub
out
xor
in
loopne
loopne
cmp
nop
in
loopne
and
xchg
and
daa
add
dec
push
adc
sub
loope
add
test
ss
imul
push
jecxz
nop
scas
pop
daa
push
paddw
mov
lcall
loopne
push
enter
cmp
in
rorb
daa
xchg
les
insb
test
push
and
and
push
and
mov
dec
push
cmp
sbb
sub
sbb
add
lods
in
in
nop
leave
sahf
sbb
jecxz
mov
sub
sub
sbb
inc
mov
sub
sbb
dec
adc
aam
fldt
dec
bound
cmp
sub
cwtl
into
in
mov
cmp
fstps
enter
or
cmpb
pop
ss
mov
add
jecxz
or
fwait
cmpsb
push
jb
in
mov
leave
adc
repnz
adc
les
rclb
nop
or
and
insb
mov
push
andl
mov
pop
adc
popa
mov
xor
aaa
mov
xor
xor
cwtl
lods
adc
test
test
test
pop
movsb
adc
cs
xor
mov
pushf
cmp
sub
sbb
ror
xchg
pop
mov
xchg
dec
xchg
adc
test
add
fs
mov
lret
ljmp
fistl
enter
jb
in
inc
add
int3
push
adc
sbb
cmc
add
mov
outsl
clc
rorl
jo
jns
ror
mov
mov
invd
push
jl
ret
sbb
sbb
pop
into
fmuls
jb
push
mov
add
inc
outsl
jne
or
inc
fldt
or
andb
mov
dec
xor
xor
adc
gs
outsb
push
fs
sub
mov
cmove
imul
cmpsl
and
inc
out
pop
pop
repnz
fsubs
and
push
outsl
jb
testl
inc
ss
adc
mov
xorl
ret
fs
lret
sti
mov
aaa
movsb
call
push
adc
xchg
add
xchg
sti
repz
loopne
pop
roll
jmp
lea
and
sarb
lea
setne
jl
sbb
jle
out
leave
add
xor
pop
push
pop
lea
jl
aas
testb
adc
pusha
test
nop
outsl
repnz
addl
or
jmp
int3
shr
inc
pop
in
add
in
mov
outsb
jns
ret
repnz
cmp
shll
aaa
pop
sub
or
xor
inc
jo
add
jmp
xor
mov
xchg
adc
inc
push
fcom
xor
mov
nop
sbb
adc
jmp
push
arpl
cltd
inc
pusha
clc
fstpt
mov
cmp
sti
mov
repz
dec
addr16
dec
and
out
shrb
or
push
popa
add
mov
mov
ret
mov
push
loop
pop
pop
cltd
xlat
sbb
pop
loop
shll
popf
xchg
arpl
cmpb
cmp
je
jl
push
out
out
adc
push
lods
inc
sbb
mov
loop
or
or
test
scas
aas
jnp
xor
mov
xchg
lea
add
sub
add
inc
xor
aam
push
sbb
mov
call
jge
test
int3
inc
mov
in
inc
inc
mov
push
sti
aaa
jle
mov
xchg
dec
inc
add
add
loop
orl
cmp
inc
dec
inc
jns
jmp
inc
int
mov
inc
inc
xchg
jp
adc
or
and
sbb
inc
pop
ljmp
cmp
nop
push
loopne
insb
movsl
add
or
or
orl
adc
cwtl
xor
shrl
or
and
pop
or
lahf
lock
jns
es
push
ljmp
ljmp
scas
and
jle
in
or
ja
cmp
mov
pushf
pusha
outsl
inc
xchg
cmp
loopne
fsubs
and
call
pop
push
in
jne
cmp
lret
fs
in
les
shll
dec
adc
in
pushf
jne
mov
pop
test
mov
mov
push
dec
cs
outsb
mov
jns
adc
in
orl
stos
pop
stos
lods
lods
add
add
push
push
adc
cs
add
pop
ret
mov
mov
pop
cmp
test
nop
sbb
inc
dec
and
sbbl
inc
shlb
je
rorl
cltd
lret
in
push
and
adc
sbb
or
add
arpl
add
or
and
pop
negb
pop
xor
push
pop
aaa
pusha
pop
pop
or
add
mov
testb
add
lods
or
leave
call
fcoml
iret
pushf
notl
jae
sahf
loop
in
jae
arpl
adc
pop
inc
insb
popa
jae
jae
push
dec
push
out
fwait
adc
mov
or
inc
pop
leave
test
lods
jne
dec
and
and
fisttpl
nop
lock
push
or
and
shlb
in
mov
sbb
gs
ds
stos
mov
ret
xchg
sub
sub
mov
aad
jge
pop
jecxz
and
test
dec
or
push
dec
mov
aad
lret
fmuls
or
stos
jp
pop
xor
adc
cmp
push
inc
push
cmp
inc
adc
pusha
nop
xchg
mov
jno
fdivs
in
mov
inc
and
jle
popa
sbb
cs
jmp
enter
or
inc
inc
ret
cmp
daa
mov
and
or
sbb
adc
lock
ss
cmp
arpl
sbb
lock
cltd
dec
sbb
or
loope
loopne
cld
loope
loope
jp
movb
nop
pop
popa
inc
ret
dec
sbb
sub
sub
fninit
inc
std
push
mov
adc
jae
xchg
inc
xor
adc
outsb
test
fwait
rcll
lahf
lds
cmp
add
ret
or
xor
dec
and
adc
xor
rorl
lock
fwait
cmp
repz
add
ret
or
js
shl
loop
push
repz
test
xchg
sbb
jae
push
dec
out
pop
or
loope
xchg
lret
xor
inc
add
and
or
adc
push
shll
mov
inc
or
push
insl
ret
mov
sti
out
pusha
daa
sub
pop
ljmp
dec
or
mov
pop
pop
adc
add
sub
adc
decl
pop
jb
fsubl
pop
sbb
add
mov
add
xchg
and
jnp
add
test
inc
sbb
push
lcall
push
jle
test
adc
ret
out
push
shlb
into
mov
hlt
ret
push
mov
push
lock
rcrl
popf
jecxz
cmp
mov
enter
adc
movsb
repz
xor
mov
cli
inc
cmpsb
mov
sub
lret
add
sar
jmp
adc
sub
test
adc
dec
adc
add
mov
dec
add
xchg
push
out
push
or
pop
jle
movsb
cmp
sbb
lea
jo
xor
xchg
add
inc
cltd
cmp
ds
jle
xchg
fmuls
lret
sbb
roll
push
and
jmp
pop
sarl
sub
jg
dec
repz
xor
dec
inc
jne
pop
mov
dec
scas
nop
add
lea
xchg
pop
or
pushl
xor
pop
mov
hlt
mov
dec
pop
out
lcall
sbb
jae
adc
xlat
dec
sub
or
sarb
arpl
pop
push
int3
adc
dec
add
call
add
test
adc
adc
lret
in
add
in
pop
jbe
and
sbb
loopne
fmuls
adc
imull
in
loop
lock
mov
add
sbbb
sub
sbb
xchg
fs
leave
ret
sbbb
fldcw
outsb
imul
enter
cld
push
fdivr
xor
mov
xlat
add
adc
bound
sbb
mov
add
mov
mov
sti
and
mov
inc
dec
clc
aaa
cmp
pop
leave
lret
push
xor
test
and
lret
jmp
and
xor
in
call
adc
mov
jmp
loopne
dec
mov
inc
xchg
lcall
faddl
and
xor
mov
pusha
sub
dec
cs
mov
add
in
gs
sti
cmpsb
je
mov
jb
sub
xchg
jp
sti
hlt
outsb
and
push
inc
and
mov
loopne
cwtl
les
insb
push
xchg
xor
jl
or
bound
xlat
or
test
cli
fwait
mov
inc
xor
mov
scas
xchg
out
pop
inc
dec
jne
lods
sub
int3
mov
adc
in
inc
inc
loop
jae
push
loop
enter
subb
outsb
mov
jmp
pop
xor
dec
mov
shrl
subb
js
adc
jae
adc
cmp
inc
pop
mov
push
imul
mov
aam
pop
sbb
bnd
hlt
adc
shrb
cmp
ss
push
adc
add
mov
sub
aaa
pop
jne
add
ret
jmp
incl
repz
pop
dec
push
mov
sub
mov
in
jae
push
sub
push
pop
sub
and
ss
outsb
jo
mov
pop
jmp
xorl
push
in
loope
orb
hlt
inc
fmuls
fwait
dec
mov
clc
mov
sbb
add
jae
or
inc
pop
shl
bound
in
mov
or
lods
jecxz
dec
sub
add
pop
ds
and
lcall
gs
adc
es
jbe
cmp
repnz
sbb
adc
nopl
std
in
inc
or
push
cmp
xchg
adc
inc
inc
lods
ret
test
mov
les
inc
gs
aam
mov
pop
lea
push
jl
out
add
ret
add
add
and
adc
loop
mov
mov
test
lcall
scas
pushl
mov
add
mov
cmp
mov
push
dec
push
ja
es
pop
inc
mov
arpl
bound
inc
add
mov
push
dec
or
fsubrs
mov
mov
leave
mov
or
stos
dec
test
xor
inc
decl
jne
xchg
inc
rclb
xchg
dec
sahf
fs
test
mov
addl
mov
rorl
pushf
incb
xlat
sbb
stos
js
and
push
xor
aas
clc
mov
call
pop
adc
adc
push
xchg
pop
and
cmp
xor
sbb
loope
xor
fcomps
sbbl
mov
aad
or
lcall
int3
inc
dec
clc
lcall
xor
dec
push
jo
das
lock
je
pop
pop
add
shl
sub
dec
bound
mov
or
nop
dec
jne
mov
clc
shll
shl
jecxz
shl
push
jecxz
or
lods
incl
xor
xchg
pushf
lea
dec
push
lock
push
inc
test
test
mov
xchg
pop
pop
jae
gs
add
jge
iret
flds
xor
xor
nop
push
xor
adc
les
mov
rcrl
flds
in
sbb
adc
push
mov
mov
and
and
dec
jae
push
or
add
sbb
adc
push
rorb
das
sbb
and
xchg
out
sub
and
and
mov
sub
jae
push
jb
xor
pop
dec
cmp
cmp
or
dec
or
dec
mov
dec
push
xchg
xor
jge
mov
das
push
pusha
mov
mov
pusha
ja
nop
mov
xchg
jo
aaa
mov
pop
sbb
or
fs
fs
fs
orb
and
inc
and
xchg
jo
adc
and
jle
inc
outsl
or
jl
shl
nop
in
dec
mov
mov
clc
mov
repz
xchg
mov
sbb
daa
hlt
push
js
sbbb
xor
call
in
in
and
push
push
jns
loopne
mov
jb
mov
fcomp
fdivrl
xchg
faddl
adc
mov
sbbl
int3
nop
or
int3
loopne
jns
fs
mov
repnz
mov
and
mov
push
cmp
inc
push
mov
cs
xchg
test
mov
gs
inc
mov
fs
or
jns,pn
cwtl
pushf
mov
sbb
dec
nop
nop
xchg
mov
dec
xchg
aad
cmp
xchg
sub
and
or
and
addb
cmpsb
test
popa
in
cmp
or
jo
dec
jbe
hlt
push
mov
nop
xchg
wbinvd
cltd
test
inc
cmpb
aaa
adc
or
in
setb
clc
jg
in
fwait
mov
fisttpl
mov
or
fwait
sar
mul
mov
stos
adc
mov
loop
dec
jb
idivb
or
adc
fsts
das
loopne
push
sub
fnstcw
enter
pop
sub
mov
aas
scas
adc
mov
std
xchg
cmpsl
push
dec
lcall
enter
push
insl
xchg
imul
out
ljmp
in
ds
div
fwait
mov
xlat
mov
inc
lret
stos
sbb
mov
js
popl
test
push
cmp
pop
mov
sbb
stc
cmc
mov
push
int3
add
jg
inc
enter
mov
cld
or
ret
popf
lods
inc
jge
add
out
sbb
in
mov
jecxz
test
push
gs
imul
arpl
lea
test
add
ret
shr
add
pusha
aas
pusha
dec
inc
cmpsb
flds
gs
fmuls
loope
xor
in
adc
adc
ljmp
or
add
xor
mov
and
and
pushf
add
mov
push
mov
add
filds
ja
movl
pusha
push
fs
aaa
dec
ja
mov
test
pop
push
pushf
or
enter
xor
dec
movsl
sbb
inc
cltd
xchg
mov
fldenv
sub
inc
cmp
jl
inc
jne
loopne
xor
loopne
cmp
mov
aas
je
mov
push
inc
xchg
add
shlb
pushf
and
hlt
push
insb
add
scas
in
and
add
stc
sbb
add
push
es
and
inc
lea
mov
push
add
mov
hlt
lret
or
dec
je
loope
in
sti
mov
and
sub
or
xchg
sub
std
inc
inc
decl
jne
pop
and
push
sub
sub
test
andb
add
pusha
cmp
clc
pop
add
stos
fistps
push
xor
lret
mov
pop
cmp
or
mov
dec
push
pop
fbstp
sarb
inc
xchg
cltd
fbld
stos
pop
push
aad
pop
push
mov
ret
bound
test
pusha
repz
dec
pop
add
and
add
mov
jns
in
cmp
inc
xchg
out
sahf
add
push
in
nop
lods
dec
enter
add
push
call
pop
clc
pop
or
iret
cmpl
sbb
jae
push
pop
repnz
jo
sub
je
loope
pop
jo
mov
sub
addb
mov
sbbl
push
push
in
cmpl
adc
pop
mov
inc
imul
cmovle
je
sbb
cltd
sbbb
xchg
pusha
movsb
out
or
ss
cmpb
mov
leave
dec
sub
push
stos
bound
cmp
cvtdq2ps
adc
pop
push
push
jb
es
mov
ss
push
sahf
cmp
inc
leave
add
nop
pop
push
push
add
dec
sub
andb
lods
jno
cwtl
fdivr
rcll
movsl
lods
cmpsl
push
push
inc
bound
adcb
adcl
fcmovne
out
inc
add
enter
mov
and
into
enter
lods
xorl
mov
fiadds
int
aam
jae
or
hlt
xorl
inc
inc
rcl
push
mov
inc
das
enter
and
clc
add
int3
mov
leave
fmul
adc
pop
mov
int
xchg
mov
pop
pop
add
fimuls
ss
je
pop
mov
fld
dec
sarb
scas
mov
movsb
sbb
sbb
mov
cltd
test
lea
shll
je
cmp
fistpl
push
or
mov
ret
sbb
dec
testl
hlt
int
loope
dec
or
mov
repnz
adc
inc
hlt
insb
inc
mov
pop
clc
mov
xchg
push
aad
xchg
clc
add
nop
dec
clc
cwtl
adc
cmpsb
outsl
lods
and
bound
adc
adc
sbb
rcrb
cmp
push
fs
adc
out
popa
lret
push
jns
imul
jbe
repnz
xor
inc
fstpt
xor
dec
in
dec
jne
jecxz
inc
add
loop
pop
mov
outsl
out
ret
inc
add
sbb
jns
enter
add
ret
incl
pop
dec
outsb
jae
leave
fsubs
or
jne
iret
gs
pop
jne
gs
adcb
sbb
outsb
inc
sub
push
push
inc
push
daa
in
xchg
sbb
mov
and
push
loop
int
ja
js
jbe
cmpsb
sbb
sub
adc
arpl
pop
xchg
adc
adc
dec
neg
test
inc
mov
out
pushf
push
dec
test
inc
ja
jp
popa
jb
jg
aaa
inc
fdivs
sub
sarb
add
les
insb
adc
inc
add
push
and
inc
add
popa
subl
jb
add
add
pop
mov
adc
adc
enter
popa
jo
pop
insb
outsl
cmp
repz
ja
stc
lahf
mov
mov
outsb
imul
ret
add
pop
popf
inc
mov
in
mov
lods
std
push
bound
inc
pop
pop
pop
stos
test
mov
pusha
aam
std
aas
pop
or
xor
pop
pop
mov
fwait
push
push
cmpsl
push
inc
jae
sbb
imul
xchg
in
lcall
xchg
notl
and
clc
pop
inc
sets
or
lods
pop
pop
mov
mov
pop
test
inc
mov
fcomp
pop
mov
in
clc
inc
cli
add
rcr
pusha
lahf
add
hlt
sub
cmpl
mov
fadds
add
sub
inc
add
dec
test
and
rcrl
data16
or
add
add
sbb
sbb
jae
inc
in
call
mov
dec
jae
stc
or
imul
adc
push
xor
sbb
pop
mov
adc
mov
and
imul
jnp
mov
mov
cmpb
inc
in
mov
outsb
ja
fisubl
movsl
or
inc
insl
jbe
xor
movsl
xchg
sub
ljmp
sahf
aad
cmp
js
fwait
js
cmc
rorl
mov
sbb
in
jb
jns
out
mov
jo
shlb
int3
or
add
lret
mov
sbb
leave
ja
ja
out
test
js
sbb
xchg
out
out
fldcw
loopne
sbb
cmp
in
xor
sbb
mov
jb
ret
mov
and
popa
call
mov
xor
inc
fnstcw
fsubrl
inc
xchg
arpl
dec
add
xor
or
out
dec
iret
mov
addr16
mov
rcll
int3
and
daa
xor
repnz
mov
jb
dec
adc
inc
mov
inc
push
mov
cmp
in
fidivrs
jo
fsubrl
aaa
ds
in
mov
and
outsb
push
pop
mov
je
push
jb
mov
decl
or
or
outsl
or
jne
mov
pop
lock
nop
add
add
addr16
mov
xchg
iret
enter
lock
cmp
daa
lahf
push
add
jl
sbb
imul
and
rcr
inc
or
mov
cmc
cmp
mov
repz
sbb
ds
in
ljmp
mov
fsubrs
inc
adc
outsb
mov
jne
push
push
xlat
cmp
or
aaa
sbb
and
cmp
add
std
lea
call
mov
and
mov
mov
in
or
push
sahf
inc
ds
push
bound
ss
lea
into
xchg
sub
mov
std
xlat
or
jg
push
or
leave
mov
adc
pop
xlat
in
sbb
adc
mov
and
mov
lcall
lcall
fcoml
add
push
sub
or
add
inc
xor
mov
add
dec
popf
inc
lcall
adc
enter
sbb
dec
and
push
inc
sub
xor
push
enter
inc
loopne
mov
dec
adc
push
xchg
mov
pusha
sub
dec
xchg
xchg
mov
dec
nop
cwtl
dec
xchg
sub
rcl
dec
xchg
leave
push
jb
adc
xchg
or
inc
xor
leave
push
xor
mov
ffreep
loopne
mov
pop
push
xor
inc
fchs
jg
add
push
xor
xchg
sub
sbb
test
call
pop
repnz
xchg
pop
orb
or
in
xor
clc
push
jb
insl
push
xchg
sbb
inc
sbb
pop
decl
in
and
int3
enter
enter
popa
fcmovnu
fcmovu
lret
loopne
jecxz
in
add
xor
or
out
sti
imul
add
and
pop
mov
xor
xor
inc
inc
inc
mov
xor
mov
or
push
or
add
sub
in
push
mov
lods
pop
mov
mov
rclb
sub
aas
xor
pop
es
test
add
movsb
lods
mov
int3
imul
xor
cmpsb
cld
add
or
sbb
shll
inc
dec
xor
shll
pop
fs
je
xor
sarl
xchg
pushf
dec
inc
xor
lods
in
mov
add
mov
push
repnz
loopne
in
push
xor
leave
inc
arpl
daa
dec
pusha
shlb
sbb
sbb
sub
dec
dec
sahf
pusha
in
and
or
adc
test
stos
dec
rcrl
sahf
lahf
dec
out
add
xor
shll
mov
aam
imul
cmpsb
imul
scas
cltd
pushf
add
add
je
mov
add
inc
int3
xchg
add
fnstenv
pusha
addl
bsf
leave
data16
pop
sub
jne
add
pop
adc
iret
or
jmp
gs
xor
adc
into
fadds
sbb
add
outsb
mov
daa
in
pop
fbld
iret
andl
or
or
adc
ret
and
imul
out
sbb
or
hlt
xchg
pop
adc
in
mov
arpl
jl
mov
jne
ja
push
cmp
and
and
add
imul
mov
pop
or
sbb
sub
mov
mov
add
psubb
or
in
jge
test
mov
out
ds
fnop
aas
adc
push
pop
xchg
sti
pop
push
fucomp
dec
pop
pop
inc
jmp
and
je
shll
pop
out
cmp
sbb
adc
jne
nop
push
pop
dec
inc
aaa
pop
fsubl
xchg
roll
jb
cmpsl
xchg
sbb
mov
in
mov
xor
shrl
dec
negl
jnp
and
pop
shll
test
sbb
ss
in
les
inc
push
test
push
inc
xchg
and
sub
mov
pop
nop
inc
add
aaa
adc
fbld
add
mov
add
add
add
dec
add
das
inc
roll
pop
or
push
or
mov
inc
add
dec
add
dec
sbb
pop
fiadds
mov
add
inc
add
imul
je
push
add
add
jnp
xchg
fmull
outsl
pop
xor
add
pop
out
pop
or
push
or
mov
adcl
push
popa
pop
xlat
popf
mov
sbb
int3
pop
outsb
imul
adc
mov
and
por
jae
arpl
mov
add
pop
je
add
mov
aaa
sub
or
add
inc
and
xorl
aaa
mov
dec
dec
cmc
jne
jb
or
jne
or
jb
add
testb
push
insb
fsub
mov
test
pop
or
lea
insb
imul
add
lahf
push
aaa
je
insl
add
insl
mov
jmp
dec
push
dec
emms
dec
mov
pop
or
adc
adc
imul
into
pop
add
push
jne
jno
faddl
jb
add
add
jne
mov
aas
sbb
imul
mov
pop
insb
add
fwait
lods
cmp
sub
pop
ja
mov
in
or
sbb
add
popa
out
jne
sbb
jns
rcrl
cmp
das
addr16
or
mov
lret
jo
orl
pop
arpl
popw
movsl
dec
sbb
fistl
es
mov
popa
push
add
loope
xor
xorl
add
subl
imul
ja
jae
and
pxor
jae
pop
xlat
mov
lahf
aas
dec
aaa
jbe
dec
and
pushf
lahf
fwait
dec
dec
jo
jecxz
bound
sub
jae
popa
insb
sub
sbb
outsl
cmp
mov
and
sbb
sub
ret
popa
xor
mov
insb
enter
fnstenvs
jno
pop
sub
sbb
cmp
push
ss
add
adc
jnp
out
or
mov
push
das
inc
clc
pop
insl
daa
xor
test
sbbl
push
jo
outsl
out
sbb
push
test
arpl
es
cmpl
jmp
outsb
jb
xchg
sbb
mov
js
inc
lret
sub
in
or
dec
pop
lret
testb
jge
xchg
mov
inc
jg
repz
and
pop
jnp
dec
xchg
sub
aaa
outsl
fnstenv
jnp
mov
fists
xor
adc
pop
notl
mov
xchg
sbb
push
add
add
shrl
or
pop
icebp
jb
sub
mov
push
adc
push
xchg
and
das
xorl
mov
pop
sbb
idivl
add
adc
andl
punpckhwd
pop
js
orl
pop
pop
adc
xor
cmpsl
and
adc
bound
ja
push
pop
add
pop
fistl
add
andw
shlb
xor
outsb
mov
pop
sti
add
ret
dec
pop
and
and
and
mov
sub
inc
add
lock
ljmp
imul
addr16
fwait
mov
sbb
push
sbbb
cmp
fs
mov
outsl
outsl
pop
ss
pop
int
ret
outsb
sub
lods
adc
aas
fstpt
push
fsubrl
jns
frstor
in
dec
lret
mov
fcomi
test
mov
pusha
insl
fistl
xadd
arpl
xchg
jmp
insl
mov
out
fdivp
ja
jp
xlat
adc
push
adc
jp
mov
push
imul
adc
sbb
inc
sbb
xor
aas
or
sbb
aas
xor
ss
pop
aas
mov
inc
sub
sbb
pop
xor
decl
es
aaa
mov
pop
fwait
cmp
inc
fs
cmp
ljmp
mov
sub
mov
sbb
stc
ret
mov
mov
ljmp
test
dec
pop
shrb
scas
in
jl
and
addr16
fiaddl
popa
pop
repz
jmp
icebp
and
pop
xor
lcall
jl
gs
lea
pop
stos
cmpsl
cmp
in
call
push
jae
pusha
xor
cltd
or
sub
xor
jbe
jo
enter
test
idivl
push
ret
inc
scas
lds
xchg
fcoms
push
mov
leave
sub
add
out
stc
call
dec
xchg
push
mov
insb
int
lcall
and
cmp
and
sbb
pushl
mov
xchg
cltd
cs
aas
mov
pop
inc
add
in
add
iret
adc
ljmp
xor
jecxz
ficomps
call
addb
dec
outsb
and
jmp
lcall
sub
push
cs
cmp
mov
push
movsl
test
clc
cwtl
mov
xchg
inc
mov
fldl
enter
int3
jbe
fmull
jge
cltd
popa
packssdw
ficoms
js
xor
push
adc
and
hlt
xor
popa
into
sti
roll
ljmp
out
mov
stc
cmpsl
push
kxnorw
mov
push
daa
add
lods
jmp
aam
lcall
repz
ret
jmp
ss
jae
mov
fists
fcos
cmp
into
and
xor
or
push
cmp
cli
mov
jmp
jbe
fsubrs
dec
pushl
rcrl
lret
fwait
or
jnp
push
daa
insb
mov
addr16
ljmp
addl
mov
lds
jl
clc
inc
jb
popa
mov
jg
xchg
jmp
out
divb
aam
sbb
adc
cmc
ljmp
movb
fcomi
push
add
stos
repz
adc
movl
xchg
and
mov
filds
xor
inc
in
inc
jmp
shlb
inc
popf
and
adc
inc
and
sbb
inc
xor
es
jne
in
ljmp
shll
xchg
loopne
sti
stc
movsl
push
push
call
mul
jnp
test
jle
xchg
push
fnstenv
ret
movsl
inc
test
mov
cmp
ljmp
insb
push
mov
jne
data16
jle
xor
insl
dec
cmp
add
inc
push
rcrb
xchg
inc
xchg
adc
cmc
inc
lods
and
jmp
sbb
pushl
rclb
pushf
mov
cmp
push
stos
outsb
mov
xchg
mov
aaa
shlb
les
pop
cld
int
fildll
add
dec
xor
lret
cltd
push
xor
sbb
inc
das
bnd
push
push
leave
pop
stc
lds
push
pop
pop
ljmp
and
fiadds
in
mov
enter
add
int
ftst
mov
sbb
loopne
jbe
push
cli
jl
mov
push
jo
js
pusha
push
xor
jno
xor
fsubl
inc
push
inc
outsl
fs
test
sarb
or
call
jb
int
mov
xor
int3
sub
or
shl
int3
push
sub
ljmp
aad
lea
pushf
dec
jmp
dec
les
imul
fwait
pushl
ret
or
pop
pusha
and
push
and
js
jg
bound
mov
mov
call
push
jnp,pt
inc
fwait
loop
xchg
mov
add
jns
push
xchg
repz
fdivl
lods
pop
push
sbb
or
jmp
add
hlt
call
jmp
arpl
es
insl
adc
jle
push
jg
scas
movsb
xchg
jnp,pn
and
idivb
sar
push
cmp
xor
pop
repz
ficompl
add
xchg
mov
pop
idiv
call
pop
or
out
std
test
fstps
mov
hlt
inc
mov
in
or
dec
rol
cmc
je
js
cltd
fistpll
test
ficompl
ljmp
add
pushf
sti
fists
aam
out
in
cwtl
leave
cmp
call
dec
es
xor
sub
jle
and
jbe
rorl
jl
xchg
in
inc
mov
xchg
inc
or
sbb
mov
xchg
sbb
jl
jle
pop
push
or
ljmp
inc
or
out
jb
test
lahf
and
adc
adc
aas
rcl
mov
mov
inc
aas
ljmp
jmp
call
push
ret
in
jmp
fwait
mull
ljmp
movsl
in
pop
mov
and
lcall
outsl
in
rcrb
or
push
jecxz
loop
call
rcr
out
jmp
lods
inc
in
lret
mov
mov
repz
bound
aam
fwait
insl
sub
cwtl
mov
test
sub
pop
test
xorl
add
fnsave
push
aas
les
pushl
in
mov
mov
andb
rolb
scas
jg
fildl
in
packsswb
lcall
pop
push
enter
and
pushf
test
add
or
or
xchg
xor
pushl
lods
incb
push
rcrb
lcall
dec
push
or
and
mov
jle
sub
dec
cmc
and
shlb
mov
sti
mov
sbb
jmp
movsl
leave
cmpsb
mov
cli
and
sbb
jg
ror
scas
cmpl
jne
mov
xor
pop
scas
pop
cmp
mov
jmp
jbe
daa
mov
pushl
pop
std
nop
out
xchg
fwait
mov
imull
call
lret
es
das
mov
bnd
mov
jb
mov
sbb
std
call
out
dec
dec
mov
add
push
dec
ret
xor
xchg
xor
pop
pop
rcl
rcrb
lcall
das
je
push
fcompl
pop
arpl
gs
movsb
movsb
loope
push
pop
mov
in
jbe
jo
and
out
or
scas
sub
sub
and
cld
mov
mov
test
fldcw
es
add
lods
arpl
add
sti
js
insl
js
xchg
jmp
xor
lock
loopne
ficoml
or
jle
dec
cmc
bound
mov
ljmp
push
pop
inc
ss
gs
fs
sbb
rcl
jg
filds
adc
xchg
sahf
cmpsb
adc
cmpsl
jae
incl
push
lods
and
test
sti
scas
nop
iret
int
fsubrs
jg
incl
push
ror
and
fcoml
pop
sahf
jb
repz
shl
call
jb
pop
nop
mov
lods
shll
insl
add
idiv
pop
mov
in
xchg
mull
xchg
cld
xchg
or
lock
pusha
jg
push
jo
jo
loopne
push
cmp
inc
jg
inc
push
into
mov
icebp
mov
lcall
xor
add
mov
and
icebp
nop
inc
into
mov
mov
sub
or
fnsave
mov
inc
sub
mov
call
ljmp
dec
lea
mov
decb
jmp
mov
test
lcall
sbb
aad
ljmp
bound
xchg
stos
add
fisttpl
add
movsl
push
xchg
mov
jae
sbb
test
stc
insl
sbb
xor
fsts
mov
or
sub
aad
pop
mov
cmp
rorl
jl
mov
inc
adc
jne
jmp
inc
rcll
imul
jmp
rorl
in
outsb
flds
lret
stc
mov
xchg
mov
xchg
pusha
into
fldl
mov
scas
inc
pop
inc
xor
mov
mov
decl
push
je
xor
mov
insb
scas
jecxz
out
scas
pop
sbb
cmpl
outsb
movsl
mov
sti
ja
xor
mov
mov
jp
cwtl
adc
xchg
insb
pop
dec
repz
mov
jmp
insb
mov
jge
mov
addl
sub
or
xadd
push
or
pop
mov
push
repnz
pushl
jle
and
mov
xchg
cmp
pop
outsb
sub
lcall
gs
out
jae
push
dec
adc
scas
into
mov
add
repnz
pop
inc
inc
xchg
cmp
dec
cmp
xchg
fiaddl
decl
jns
dec
jne
mov
adc
stos
mov
pop
loope
cmpsl
inc
leave
mov
ljmp
cmpsl
mov
jnp
xchg
fs
dec
lret
add
pusha
xchg
sbb
adcl
jmp
pop
xor
push
fildll
pop
adcl
mov
xor
and
out
ja
jg
mov
and
idiv
pop
cmp
xchg
movb
jg
cld
aam
dec
or
jnp
test
mov
mov
ret
jp
sub
call
mov
jecxz
int
mov
mov
inc
fdivrl
sbb
out
int3
cltd
into
push
or
in
mov
inc
das
flds
mov
jmp
dec
jnp
sarl
mov
lret
outsl
fcmove
mov
jle
cmp
lcall
js
rorl
cmc
jl
into
sub
lods
xor
das
je
faddl
fimuls
mov
cld
movsb
mov
je
stos
das
jge
and
insl
fwait
daa
jnp
repnz
jmp
arpl
pop
cmpsb
mov
push
xorl
aad
add
decl
dec
cmpsb
inc
testl
mov
inc
jp
jno
movsb
lods
pusha
stc
inc
ljmp
ljmp
fstpl
mov
mov
push
xlat
adc
add
pop
jno
sar
aaa
and
xchg
add
icebp
inc
mov
or
js
test
push
cmp
jg
jmp
lods
loope
mov
in
mov
push
iret
and
mov
or
int
dec
push
incl
ficoms
push
mov
mov
fstps
fdivr
inc
sbb
sbb
mov
lods
jp
arpl
out
adc
sarl
cli
jg
jmp
inc
frstor
cmp
in
xchg
xchg
adc
lcall
fildll
pushl
pop
outsb
mov
icebp
inc
movsb
inc
xor
js
cmp
xor
jmp
mov
add
mov
fsts
or
stos
or
imul
jg
jge
xorb
popa
fildll
jmp
dec
call
clc
or
inc
dec
push
mov
pop
dec
jno
pop
mov
adc
dec
mov
mov
test
pushl
sahf
mov
mov
or
cmp
jg
decl
add
sbb
push
jge
mov
test
cs
mov
loop
cmc
xor
and
mov
test
aas
adc
jno
adc
add
loopne
lahf
call
outsl
lcall
mov
ret
clc
xor
push
ret
shlb
jb
adc
pop
jmp
call
xchg
adc
mov
shlb
bound
inc
or
adc
adc
add
adc
popa
or
incl
push
lea
andl
xlat
inc
cmpsl
mov
lret
xor
incl
insb
addr16
notl
mov
sbbb
xchg
std
xorl
test
sbb
cs
lcall
sbb
push
dec
adcb
jp
add
into
jb
push
icebp
scas
inc
mov
sbb
ljmp
jb
lods
mov
imul
mov
subb
iret
notb
pop
xor
or
rclb
jg
xor
out
jecxz
cmp
loope
fucom
xchg
cmp
adc
fdivrp
xchg
outsb
mov
decl
cld
stc
iret
adc
jge
fwait
sub
loopne
inc
mov
fcoms
aad
mov
loopne
test
cmp
stos
gs
jg
rcr
xor
mov
stos
or
icebp
call
imul
cmp
inc
inc
aaa
into
or
int3
mov
shrb
push
xchg
mov
sbb
inc
or
leave
xchg
bound
jmp
cli
lcall
lahf
mov
mov
negl
xorb
fwait
mov
call
aaa
loopne
pop
and
int3
sbb
pop
and
and
addl
mov
lcall
iret
cmc
dec
inc
sbb
cmpl
push
mov
xchg
mov
arpl
sub
mov
aam
vmovntps
push
cwtl
jae
gs
dec
insl
andb
pop
stos
decl
sub
push
inc
mov
test
jnp
mov
jmp
bound
dec
jns
lret
jae
and
sbb
sahf
fsts
mov
cs
push
xchg
mov
mov
jmp
lock
dec
mov
lahf
sbb
jecxz
push
cmpsl
icebp
push
outsl
lock
icebp
dec
icebp
test
push
std
adc
cmpsl
sub
clc
ljmp
sub
pop
cmp
push
mov
scas
scas
xchg
cli
adc
cmpsb
iret
sub
ljmp
jmp
sbb
lods
into
out
xchg
mov
cmpsl
pop
shr
cmp
ljmp
lock
jmp
xchg
and
js
mov
aam
fcompl
xor
jb
xchg
test
decl
outsl
or
cmpsl
sbb
push
movl
lret
adc
sub
push
xor
sub
ljmp
push
jge
lds
pop
mov
push
sar
mov
xchg
xor
aas
and
push
adc
mov
in
inc
out
sbb
das
cmpsb
mov
stc
ret
cmpsb
cwtl
ret
stos
xchg
jp
inc
xchg
nop
mov
jge
sti
inc
mov
cmpsb
das
in
lods
push
mul
pop
jg
jno
sub
ret
pop
popa
imul
lds
lcall
out
fists
sbb
pop
and
xchg
inc
xchg
fldenv
pop
push
movsl
pop
dec
jb
call
dec
or
mov
stos
dec
xchg
cmp
pop
mov
call
imull
in
outsl
lahf
push
pop
and
sarb
mov
mov
push
fidivrl
mov
movsb
and
add
pushl
les
mov
ret
inc
or
lcall
out
sbb
xchg
cmp
mov
movsl
mov
int
lods
fcoms
fldl
push
test
lcall
das
pop
push
adc
and
sar
les
ficoml
aaa
cli
jp
push
mov
nop
ret
in
inc
push
test
mov
mov
loope
es
add
jge
adc
lods
cmc
lret
rcrb
inc
insl
test
mov
sti
sbbb
lods
dec
popa
inc
mov
in
jg
pop
addb
outsl
sbb
mov
iret
or
sbb
movsl
dec
xorl
cmp
pushf
loop
call
scas
pop
mov
mov
pop
jecxz
pop
dec
mov
dec
out
pop
ret
cmp
lret
mov
fidivrl
jae
ljmp
test
mov
mov
dec
icebp
std
jg
xor
mov
ja
stos
xor
inc
sub
jecxz
cmpsl
aad
sub
xchg
jl
ja
sub
mov
push
cmp
outsl
lock
aas
out
cmp
fucomi
aaa
add
pop
add
adc
movsl
cld
aad
cwtl
dec
mov
popa
push
dec
cmc
mov
pop
popa
xchg
cli
cmpsl
dec
ss
add
rclb
dec
shlb
push
es
cmp
ljmp
xchg
push
repnz
mov
pop
sbb
shll
mov
aaa
std
out
test
mov
mov
jmp
out
and
fs
daa
sub
vcvtsd2si
xchg
sbb
in
mov
inc
xor
mov
loopne
je
jo
fisttpl
inc
mov
or
dec
js
or
outsl
inc
pushl
repz
cwtl
xor
pop
sub
adc
jg
outsb
inc
inc
scas
lea
inc
dec
dec
ljmp
mov
jmp
add
pushf
cld
mov
sub
jg
decl
call
jne
jle
lea
inc
mov
loopne,pt
jecxz
test
pop
mov
mov
daa
add
xchg
cmp
and
scas
in
cmp
outsl
push
out
das
jno
les
push
push
pop
xlat
enter
aas
jno
clc
cmp
jno
pop
cmp
decl
pushl
cmp
sti
push
hlt
cld
leave
shr
pushf
lock
enter
sbb
into
push
out
stc
push
mov
jmp
adc
cmp
popf
push
aam
loopne
test
and
add
in
and
fbstp
mov
in
xlat
bound
lods
into
dec
leave
mov
add
aad
pusha
sbb
call
pop
pop
inc
fldcw
or
in
into
push
xchg
fcomp
aaa
insl
mov
push
addr16
cmc
jmp
loope
cmp
cmp
xchg
dec
hlt
jmp
mov
lods
and
pop
subb
sahf
addr16
cmp
add
decl
out
mov
pop
mov
xor
sbb
push
mov
inc
cwtl
xor
pop
mov
cmp
into
sub
sub
sub
cmc
mov
not
inc
mov
sub
in
icebp
lcall
outsl
add
push
in
jne
fwait
mov
or
jmp
call
outsl
cltd
fistl
repnz
cmpsb
pusha
sub
push
stos
add
dec
add
aad
stos
jnp
or
jae
dec
mov
push
lea
jp
sbb
movl
daa
or
push
addb
aad
mov
add
das
sahf
sub
dec
and
call
sub
sahf
subb
ja
mov
and
inc
orb
sbb
icebp
addr16
movsl
sub
xor
in
and
stc
sub
xor
mov
xchg
jge
xchg
and
fisubrs
mov
in
out
mov
rclb
clc
pushl
jnp
stos
ret
loop
cmp
scas
out
mov
inc
pop
pop
fnsave
or
sbb
fdiv
lret
xchg
push
int3
into
arpl
cmc
pop
clc
lea
lahf
shl
adc
out
icebp
cltd
adc
ljmp
lods
arpl
adc
inc
pop
movsb
inc
nop
pop
ljmp
xchg
mov
les
mov
movsb
loop
mov
xorl
adc
push
xchg
cld
fs
mov
cwtl
add
jg
sar
mov
lret
lret
loope
xchg
out
sbb
rcrb
mov
fdivr
lcall
pop
into
addl
stc
cmpsl
xor
and
out
jae
mov
mov
cli
ljmp
lods
jmp
mov
xchg
scas
and
xchg
test
das
std
xor
jnp
mov
jae
and
stos
ret
push
dec
mov
and
ror
or
add
fdivl
inc
fists
or
stos
std
mov
test
xor
es
pop
mov
xor
pop
mov
jmp
loopne
jecxz
call
outsb
out
daa
loop
stc
sbb
jmp
cmp
cmpsb
adc
das
fiadds
repz
es
dec
mov
jecxz
cmp
jg
call
sbb
dec
sub
lahf
ds
pop
add
les
jg
into
decl
arpl
hlt
cltd
hlt
mov
cmp
imul
xor
aad
jbe
sub
sub
push
loop
adc
and
cmp
jmp
fucomip
or
and
popf
pop
fs
jp
sub
addr16
sub
mov
ljmp
insb
call
mov
pop
jns
push
mov
loop
cmc
popa
cmp
mov
lar
data16
icebp
stc
gs
arpl
je
pop
cli
fbld
sub
mov
rorb
inc
lock
push
mov
dec
lahf
and
push
std
mov
outsl
adc
mov
mov
push
sbb
aaa
push
lret
xor
sbbl
adcl
iret
add
icebp
loop
cmp
mov
in
cmpsb
incl
movsb
jl
in
inc
sbb
out
lret
fs
aad
decl
fidivrs
popa
jno
pop
xchg
fildl
cmp
cmpsb
mov
lock
pop
mov
cmp
lods
insl
mov
mov
popf
test
xchg
sbb
lods
nop
mov
mov
dec
ret
xchg
mov
jo
fyl2x
mov
or
sub
push
and
inc
mov
push
scas
lcall
jl
mov
fcomps
sbb
jae
mov
fnstenv
push
das
push
jmp
dec
mov
jg
sub
pop
add
and
cld
mov
lcall
filds
mov
into
dec
mul
lods
in
xchg
dec
pop
faddl
ljmp
or
or
into
idivl
pop
mov
and
rcl
jae
mov
pop
and
in
ja
inc
mov
mov
int
dec
push
push
in
incl
imul
cmpb
xchg
pop
out
xchg
lcall
jg
push
hlt
push
xor
aad
push
cwtl
cwtl
inc
cmp
pop
loop
xchg
pop
lcall
das
std
mov
xchg
fldl
jle
sbb
mov
jns
dec
push
push
add
loop
enter
jg
push
loop
jg
es
adc
jb
xor
insb
clc
push
and
pushf
or
jmp
inc
int3
sarl
ret
insb
push
xor
cs
xchg
sar
dec
insl
std
in
mov
sub
pop
push
sbb
xor
mov
jle
shrl
sub
push
dec
loope
shll
xorl
ljmp
xorb
rcl
and
in
mov
mov
incl
pusha
in
jnp
in
pop
xchg
popa
or
stc
jecxz
jne
and
sahf
pushf
mov
comiss
aad
or
loop
mov
repz
pop
mov
dec
and
dec
pop
loopne
pop
jmp
cmp
add
das
lock
pushl
out
sub
sbb
ss
mov
gs
decl
decb
xlat
mov
push
adc
popa
dec
fmull
cld
jle
mov
lcall
call
push
daa
add
fwait
jns
popa
dec
mov
aam
out
lods
pushl
aam
in
inc
inc
lcall
addr16
ficoms
add
outsl
adc
mov
jl
jg
in
fisttps
jo
not
cmp
mov
mov
aaa
cli
decl
mov
ret
jge
bound
add
mov
cmp
push
out
orb
and
mov
imul
jg
xor
pushl
mov
js
ja
clc
jle
push
jne
insb
stos
mov
push
pop
clc
in
les
adc
jecxz
subl
clc
dec
dec
out
ja
fnstsw
xchg
mov
push
mov
fs
jbe
xor
mov
mov
dec
mov
jmp
cmp
jecxz
push
mov
pop
push
in
std
cmp
xchg
clc
push
mov
hlt
sbb
jbe
repz
or
pandn
pop
mov
push
sbb
mul
js
lock
mov
pop
std
mov
jmp
dec
aam
push
jbe
push
cltd
push
sub
outsl
lock
mov
inc
xor
hlt
ja
xor
mov
or
ss
call
push
lock
cmpb
hlt
bound
inc
push
dec
inc
adc
aad
es
jmp
pop
or
pop
xor
push
out
mov
test
je
pop
loop
daa
cmp
aas
adc
cmc
notb
shrb
test
fisubs
dec
xchg
mov
incl
in
in
test
pop
mov
xchg
out
sub
inc
push
in
std
mov
fistl
mov
ljmp
sbb
adc
mov
mov
out
adc
aam
xchg
mov
add
push
aas
repz
jbe
sbb
ljmp
test
mov
cltd
and
loope
push
pop
sub
jne
or
ds
sbb
ljmp
lret
pop
dec
sbb
push
ret
into
jg
pop
mov
fmuls
xor
pushl
test
or
adc
inc
add
adc
hlt
ds
xor
and
pop
jp
mov
add
lock
or
repnz
mov
call
call
xor
mov
fdivs
pop
insb
inc
jmp
mov
inc
or
and
std
push
clc
cs
les
mov
and
call
lods
ss
call
icebp
mov
push
popf
sahf
pop
popa
xor
and
popa
int
decl
xor
pop
popf
dec
jo
fs
or
dec
or
pop
das
pop
jg
mov
push
lods
js
fucomip
daa
mov
sbb
add
mov
call
mov
loope
ret
cmp
jmp
and
push
jno
dec
mov
ret
das
cld
fsub
cwtl
clc
inc
push
jp
das
pop
fmulp
rorl
cmp
jbe
xor
sbb
loop
push
cld
scas
cmp
jp
iret
xchg
test
or
jle
testl
mov
lcall
push
pop
sub
test
imul
fcomps
adc
fdivr
push
decl
mov
push
iret
nop
fdivs
mov
lcall
jno
push
outsl
aaa
pop
mov
add
pop
sqrtps
iret
sub
ss
jg
nop
gs
ret
pop
stc
pop
mov
adc
popa
das
hlt
call
jp
jne
jbe
test
popf
push
push
pop
mov
jne
jmp
and
lods
daa
pop
or
cs
ljmp
fiadds
in
js
mov
mov
xor
lret
push
or
leave
cmp
fcmovnb
push
push
jmp
js
test
cli
addr16
imul
push
jmp
jle
jg
inc
lcall
rcrb
xor
sbb
scas
test
lods
lods
jmp
roll
push
add
pop
sbb
fbld
out
or
jl
jg
in
lods
inc
cmp
aad
xchg
in
inc
in
jo
hlt
adc
mov
xchg
push
call
sub
xchg
popf
repnz
jg
jmp
pop
insl
imul
lods
fisubs
mov
jmp
cld
cwtl
xor
mov
sbb
imull
dec
ljmp
adc
mov
adc
jmp
sub
iret
cmc
pop
das
xor
js
sbbl
scas
sbb
testb
sub
cld
ljmp
adc
mov
and
inc
or
call
jbe
aaa
dec
sahf
je
lret
dec
jl
in
adc
push
call
add
push
lret
mov
sub
mov
dec
lret
gs
outsb
cmp
lcall
fwait
jg
sar
adc
aaa
mov
mov
pop
icebp
cwtl
fldcw
call
adc
adc
in
push
leave
inc
push
rcll
filds
xchg
stos
ljmp
mov
jno
lahf
sbb
push
push
iret
cmpsl
push
or
jns
jo
outsb
and
mov
push
imul
ret
pop
call
sar
aas
repnz
int
mov
lahf
stos
push
sbb
jg
mov
jnp
xchg
addl
incl
call
nop
jmp
mov
test
es
stos
sub
pop
cltd
call
call
push
sbb
lods
in
xchg
push
mov
jg
mov
jb
sahf
sbb
movsl
fcoml
les
jns
push
call
icebp
dec
push
xor
push
dec
out
add
out
popf
cld
xchg
and
jne
and
mull
frstor
movsb
sti
test
dec
jp
cmp
cmc
cmp
call
outsb
or
rolb
outsl
cmp
insb
mov
test
jg
call
inc
dec
cli
insl
cli
aad
xchg
sarb
jno
out
sub
out
and
inc
and
jge
in
mov
insb
out
out
pusha
push
pusha
outsb
andb
push
and
arpl
flds
icebp
incl
mov
mov
ret
mov
jl
syscall
dec
and
cmpsl
xchg
mov
leave
push
jne
cmp
rcrb
stos
and
lds
mov
loope
xchg
leave
xchg
dec
in
xchg
pop
xchg
jl
jge
sub
push
adc
fbstp
inc
add
jg
ret
push
push
cmp
sbb
xchg
inc
sbb
and
dec
decl
loopne
mov
pop
and
lock
and
pop
jo
rolb
mov
dec
xchg
out
mov
adc
in
gs
fsubl
nop
adc
xchg
outsl
inc
call
sar
sub
repz
mov
cmp
stos
shll
push
lahf
into
mov
movsl
and
cli
aaa
clc
test
gs
popa
push
cmp
adc
push
decl
imul
and
test
sarb
int3
jno
leave
mov
sar
ljmp
lret
cmc
cmp
test
jo
pusha
pop
shll
shrb
mov
decl
add
in
cmp
dec
rep
adc
jmp
hlt
decl
sub
or
jg
pop
xchg
mov
inc
xchg
sub
push
call
sub
push
cli
movsl
outsb
icebp
ja
mov
and
enter
in
call
xchg
and
mov
call
call
incl
sbb
fistpll
push
jl
popf
mov
cmp
iret
cmp
mov
push
shll
cmp
mov
outsl
leave
sti
std
scas
aam
lahf
mov
xchg
loopne
sub
test
jmp
stos
test
mov
cs
jg
mov
scas
or
fmuls
mov
push
int
lcall
std
xchg
in
scas
inc
sbb
jns
and
jbe
aas
push
lock
ljmp
repnz
lcall
xor
mov
and
jmp
add
cmp
cltd
rolb
lock
mov
rcl
push
xchg
addl
push
test
add
pushf
or
mov
aam
jp
dec
cmp
pop
loopne
dec
imul
adc
add
das
cmc
pushl
mov
mov
flds
ljmp
decb
push
loope
cmpl
inc
lods
pop
mov
dec
in
pop
clc
push
incl
in
arpl
pop
arpl
push
xchg
xor
cmpl
xchg
pop
loop
popf
jns
pop
addb
mov
push
insb
push
pusha
sbb
mov
rcll
lahf
mov
addr16
repz
sti
xchg
scas
sbb
pop
mov
and
sub
outsl
push
add
pop
in
or
mov
fsubrl
ret
mov
push
cli
inc
mov
push
out
pop
inc
out
pop
in
test
incb
or
jg
dec
mov
mov
cmp
jo
andb
mov
imul
mov
lcall
push
stos
mov
sti
adc
or
xchg
xlat
mov
or
lahf
xor
sbb
les
lahf
adc
cmc
imul
ds
or
add
cmp
dec
cld
push
fistl
push
dec
mov
mov
mov
pop
push
or
outsb
stos
dec
xchg
int3
lahf
and
jle
inc
push
xor
bnd
mov
jmp
push
jecxz
aam
mov
mov
fwait
shlb
lds
pop
cli
test
into
outsl
std
lcall
pop
popf
dec
in
lea
in
repnz
je
loop
pop
clc
clc
incl
add
and
aaa
lcall
jge
mov
imul
add
inc
adc
ret
es
pop
push
leave
cmp
mov
in
mov
loope
lahf
adc
sbb
pop
cmp
jae
cmp
lret
aam
incl
lret
push
inc
fs
les
adc
les
test
and
mov
adc
pushf
mov
adc
lea
dec
add
imul
repz
mov
sbb
pop
pop
cmpsb
or
adc
cltd
inc
je
mov
jo
loope
pushl
aas
in
and
push
inc
adc
popa
dec
sub
jmp
or
jg
das
xchg
stos
dec
pop
pop
fnstenv
cs
cwtl
mov
xchg
nop
out
imul
incl
enter
je
enter
jmp
jecxz
ljmp
mov
test
xchg
add
xorb
cli
push
in
jo
add
mov
cwtl
jp
ss
outsl
mov
xor
fisttps
stos
push
lcall
loop
push
sub
sub
pop
call
incl
and
jg
inc
adc
dec
les
insb
fwait
and
shrl
call
into
xchg
rcrb
mov
aad
adc
jns
and
mov
lret
sahf
xor
lret
pop
cld
jmp
dec
adc
lock
adc
sub
and
cmp
jge
test
testb
pop
mov
jb
mov
add
decl
mov
fisubl
maxps
gs
iret
movsb
inc
cmp
pop
fs
jg
cli
and
mov
sahf
add
inc
out
dec
inc
inc
icebp
ds
and
mov
and
pop
cmp
pusha
sbb
dec
dec
ds
pop
mov
lea
cmp
and
fistpl
lcall
pop
sub
test
arpl
dec
mov
dec
xor
xor
test
fsts
ret
lret
dec
popf
jbe
push
iret
pop
jmp
mov
add
aad
int
icebp
add
mov
pushl
xchg
aam
scas
in
cmp
xchg
out
incl
cmp
out
fstps
dec
push
adc
cmp
jmp
inc
sbb
push
loopne
call
ds
lret
pop
ja
dec
out
insl
mov
fistpll
ja
call
mov
pop
mov
insb
daa
sbb
mov
mull
call
clc
xlat
mov
stc
add
out
add
cmp
jne
movsb
xchg
clc
push
pushl
xchg
jnp
test
dec
xchg
or
mov
dec
adc
sar
lcall
dec
cmp
xor
out
mov
sub
gs
mov
js
stos
pop
mov
aam
dec
fmulp
or
stos
insb
inc
dec
test
rolb
sti
cmpsl
jmp
mov
cmpsb
xor
add
cmp
xchg
neg
enter
insb
inc
mov
fdivrl
adc
sub
movsb
in
add
sub
test
sub
pop
dec
add
pushf
in
test
mov
enter
cli
jae
decl
xor
or
ljmp
mov
ljmp
dec
or
cli
fistps
lea
imul
fisttpl
add
cmpb
mov
jmp
inc
sar
inc
and
dec
leave
mov
or
gs
add
jle
mov
or
in
xchg
lods
adc
sub
roll
adc
sub
cld
das
jle
jbe
pop
jle
mov
jns
icebp
shlb
mov
fs
xlat
mov
das
jg
and
divl
dec
sbb
lcall
push
sub
dec
rorl
ret
gs
jg
lcall
jecxz
cmp
fcmove
jb
sub
adc
insl
leave
test
mov
scas
push
adc
insb
mov
sub
enter
dec
mov
es
push
ret
xor
clc
jecxz
lret
enter
test
clc
imul
add
pop
ds
call
iret
adc
pop
mov
pushl
arpl
lret
and
outsb
add
loop
pusha
movsb
jns
dec
sbb
pop
das
std
jmp
aad
addr16
mov
add
in
arpl
jbe
pushl
push
out
imul
shrb
cmp
cmp
clc
xchg
clc
fcomp
sub
je
lret
int
repnz
in
jmp
stc
add
xchg
dec
loope
push
dec
enter
popf
lea
test
out
adc
mov
push
jp
mov
shlb
jmp
incl
das
inc
mov
or
cmp
adc
or
push
ljmp
mov
dec
int
bound
insb
mul
xchg
push
pop
outsl
jmp
push
adc
dec
cld
jmp
mov
in
mov
add
std
ljmp
xor
cld
dec
and
cmp
addl
aad
mov
test
xchg
ss
nop
adc
jo
mov
mov
incl
mov
add
and
popa
icebp
sti
clc
pop
clc
cmp
ret
xchg
cmp
pop
add
pushl
ljmp
push
fdivrs
jnp
fdiv
xchg
lcall
in
jge
mov
aad
inc
enter
push
fs
insl
xorl
call
add
cmp
orb
pop
push
xlat
and
cmp
push
iret
dec
sbb
dec
repz
adc
data16
xchg
fnsave
xchg
test
push
mov
dec
mov
incl
inc
add
jne
sti
daa
out
std
mov
fists
jecxz
call
call
pop
add
cmp
and
adc
adc
jo
xlat
stos
fnstsw
jg
or
inc
pop
lea
shll
icebp
dec
ja
pushf
movsb
fsubs
push
pop
mov
sub
mov
adc
push
pushf
xchg
mov
mov
gs
pop
inc
xor
repz
cmp
sub
or
mov
mov
mov
int3
sub
shl
dec
iret
ss
jno
ljmp
in
sub
mov
and
loopne
mov
adc
push
insb
scas
stc
das
in
jmp
pop
out
bound
xor
pop
jl
xchg
mov
incl
or
inc
daa
jp
cld
outsb
imul
xchg
lcall
fadds
cld
outsl
dec
adc
fucomip
lcall
cmp
les
cmc
mov
ljmp
mov
data16
ss
shrb
fidivs
and
push
push
sbb
add
mov
pop
daa
dec
dec
cmp
repnz
push
sbb
enter
sti
loop
decl
in
das
mov
loope
and
pop
pop
mov
mov
jo
dec
fsubrl
rorl
push
call
mov
test
nopl
jge
jle
ja
cmpsl
add
in
jle
aad
fcoml
mov
inc
sar
jmp
cmpsb
adc
xor
add
pop
sub
push
outsl
cmc
xchg
aam
cmp
push
jl
test
cmp
mov
outsl
jne
lcall
movsl
jp
pxor
push
mov
mov
sbb
mov
dec
sbb
or
idiv
or
lcall
add
ret
xor
gs
add
jecxz
loop
xor
mov
testl
adc
add
aam
sub
hlt
jo
pop
cli
pop
cld
mov
xchg
mov
inc
mov
icebp
or
xchg
xchg
xchg
lods
jle
mov
mov
inc
pushf
jbe
adcl
jg
das
dec
push
clc
pop
jp
inc
dec
ss
cmc
jge
add
mov
mov
pushl
ljmp
movl
push
sbb
xchg
cmp
fcoml
das
call
cli
aas
test
add
mov
inc
test
out
sar
pop
ljmp
aad
sub
xchg
mov
cld
orl
mov
jnp
fiaddl
push
loopne
xlat
pop
jno
mov
mov
scas
dec
jp
xor
repnz
xor
testl
dec
and
cli
rcr
jbe
mov
movsb
mov
pop
mov
xchg
lea
xchg
cmp
stc
pop
cs
push
arpl
popf
movsb
ljmp
repz
cmp
outsl
ljmp
jbe
std
jg
cmp
movsl
out
call
loop
das
je
mov
mov
and
sti
mov
pusha
ja
mov
jg
and
or
lods
push
xlat
jmp
jg
aam
mov
mov
inc
rcrl
sbb
rol
ja
push
jmp
js
pop
sbb
push
in
in
xchg
test
mov
outsb
push
xchg
cmc
daa
addb
add
mov
loop
inc
ret
jae
aad
jp
jecxz
int
sub
and
mov
xchg
pop
cli
pushf
push
pop
fwait
adc
xchg
jb
adc
inc
ret
dec
fiadds
shl
dec
or
outsl
xlat
js
popa
and
push
hlt
jg
sub
mov
jmp
mov
push
mov
test
nop
inc
das
ret
lock
or
pop
pop
push
stos
inc
cmc
std
adc
jns
xor
lods
scas
int
mov
sub
scas
je
push
in
data16
lea
call
jg
aam
pop
fiadds
ret
adc
jmp
adc
ds
cmpsb
not
mov
inc
adc
loope
out
and
iret
inc
mov
ds
mov
push
mov
ret
sub
cli
jp
cs
lods
xchg
pop
cmp
mov
pop
pop
into
cmp
adc
push
add
sub
add
incl
pop
fnstenv
adc
jge
push
std
and
mov
pop
jmp
push
sbb
jle
push
test
mov
fwait
loop
rclb
adc
jmp
fbstp
cmp
out
ss
inc
xor
andl
and
gs
lcall
movsl
mov
dec
cmp
xor
or
inc
cmovp
add
adc
call
mov
sbb
xor
mov
cmp
mov
or
or
incl
dec
pop
lahf
pop
and
lods
pop
sbb
pop
mov
lcall
inc
outsl
ss
mov
int3
fsubr
xor
push
adc
cmpsb
and
pushl
fcmovnb
in
sti
xor
dec
jnp
arpl
sbbl
repnz
sub
and
lahf
imull
jmp
aad
or
jb
out
cmpsl
fisubrs
mov
loop
gs
bound
xchg
aad
je
push
call
insl
push
pop
out
call
or
dec
pop
std
jg
std
ljmp
js
outsb
jge
mov
jl
std
maskmovq
testl
std
xchg
clc
jg
xor
aas
push
outsb
push
push
xor
cmpsb
cmc
ud0
jle
ja
stos
int3
xchg
xchg
ret
jnp
or
xchg
jmp
jecxz
jno
xor
idivl
ja
lret
mov
jmp
pusha
jl
cli
cmpsl
adc
jle
jg
loopne
pop
inc
lods
std
and
ljmp
lret
in
sbb
xor
je
dec
adc
loopne
rcr
call
lock
incl
out
cmpb
mull
test
or
and
test
outsl
cmp
sbb
pushl
fidivrl
fnstsw
pushf
push
push
or
push
das
outsl
fadds
mov
lock
decb
cmp
push
aaa
mov
add
lcall
jp
inc
xlat
data16
adc
xchg
inc
cmpsb
in
outsl
cwtl
cmp
lcall
jl
inc
jb
mov
xchg
mov
mov
xchg
in
mov
push
mov
pushl
push
xchg
fcomps
jge
or
imul
stc
lea
clc
jg
rorb
add
xchg
or
mov
or
jp
subl
rorl
out
jne
fimuls
push
dec
mov
subl
and
jp
xor
or
stos
mov
call
push
or
xchg
add
xchg
fdivs
adc
inc
pushl
scas
xchg
aaa
imull
pushf
hlt
push
test
pop
sub
ljmp
loopne
aaa
or
xor
inc
cmpl
notb
dec
lock
ja
call
mov
test
or
sub
and
pop
mov
lods
jmp
push
dec
or
inc
arpl
pop
mov
movsl
dec
in
xor
jmp
cmp
push
mov
mov
insb
popa
mov
sub
imul
out
inc
addl
test
adc
jmp
pushf
dec
and
ffree
cmp
jnp
insl
mov
xlat
cmp
jmp
xchg
rclb
aam
aad
shl
leave
out
stos
cli
push
push
inc
dec
mov
addr16
cmp
jae
ret
out
jg
arpl
inc
sti
push
lcall
xlat
mov
scas
fwait
mov
inc
ret
pusha
enter
adc
pusha
test
pop
clc
incl
mov
dec
test
push
sub
adc
dec
in
push
imul
test
aad
fsubrs
mov
out
fs
sub
push
jp
and
aaa
and
sbb
dec
ss
mov
pop
jbe
dec
test
dec
pop
add
inc
jp
test
pop
jmp
std
fldl
and
cli
arpl
test
sbbl
inc
sub
stos
mov
mov
jo
inc
roll
adcl
mov
sti
cld
and
xor
enter
dec
jecxz
decl
repnz
sbb
push
or
lods
int3
xor
jmp
pop
cmp
shlb
add
ss
push
lret
or
cwtl
repnz
clc
mov
or
mov
jp
and
mov
pop
jg
in
jg
aaa
ret
jb
or
ficomps
jne
or
lock
shll
xchg
xchg
movsb
and
inc
shl
cmp
repnz
push
mov
jb
sbb
mov
stc
les
add
rclb
add
mov
orl
pushl
xor
xor
cwtl
jcxz
inc
push
ljmp
inc
lcall
mov
addr16
cmp
mov
lcall
jmp
mov
jecxz
inc
sbb
jnp
pop
fucomip
adc
fistpll
jns
sbb
dec
fldt
iret
dec
ficompl
out
push
xlat
lea
decl
dec
push
pop
cmp
cli
testl
popf
cmp
les
es
add
nop
mov
test
ljmp
ja
shll
icebp
in
sbb
movsl
push
cmp
mov
sbb
fstpl
xor
sbbb
cmp
call
stc
pop
bound
clc
or
ljmp
fsubl
call
jb
and
es
ret
push
mov
cs
mov
movsb
popl
jg
incl
cmpsl
mov
inc
lds
lahf
mulb
jnp
fisttps
fadds
pop
or
mov
std
mov
mov
ficompl
sub
add
mov
das
xchg
lahf
sbb
mov
ljmp
sar
lcall
std
adc
orl
lds
pop
sub
test
or
out
lcall
cmp
test
jae
jg
movsb
push
push
push
cmp
mov
iret
popf
or
incl
rorb
bound
lea
and
sbb
dec
test
sarb
lods
pushl
es
mov
ret
out
jmp
jno
test
das
push
adc
mov
movsl
or
hlt
xor
jg
add
imul
test
push
shrl
call
push
add
aas
mov
call
push
out
jb
decl
jle
out
push
loope
cmp
push
fwait
xor
sub
call
mov
push
nop
ficoms
sbb
xchg
shlb
mov
mov
mov
push
mov
rcl
pop
clc
mov
xchg
xor
arpl
pop
lcall
push
mov
dec
subb
push
ljmp
jno
int
pop
fisubrs
jmp
xor
jp
rcrb
js
insl
inc
dec
mov
inc
xchg
inc
leave
jl
sub
pop
lahf
std
mov
ljmp
add
sahf
icebp
pushf
sub
pop
pop
jns
testl
inc
push
or
std
cmp
data16
jo
mov
mov
sti
pop
loopne
aaa
xchg
sti
xchg
inc
and
cld
mov
lock
jle
xor
and
push
lahf
iret
pop
pop
jp
mov
inc
int3
mov
inc
xorl
frstor
lret
sarl
das
fcompl
fdivrl
call
sub
sub
jle
inc
cmpsb
inc
cltd
test
decl
add
ret
jecxz
addb
and
in
lcall
mov
mov
xor
xor
mov
adc
test
add
cs
flds
dec
mov
xor
bound
test
mov
mov
mov
jns
sbb
cmp
mov
sbb
popa
mov
xor
adc
dec
scas
out
stos
inc
push
es
hlt
dec
in
mov
dec
sarb
imul
out
loop
cmpsl
mov
sbb
jmp
hlt
pop
stc
dec
data16
aad
fwait
add
ss
loop
cmpxchg
lcall
insb
xchg
fistpl
mov
pop
xor
scas
arpl
sbb
jae
and
add
iret
cmp
xor
fisubl
lods
push
test
mov
or
sbb
add
daa
sbb
xor
jae
aaa
scas
test
lock
decl
add
inc
flds
lds
or
mov
lcall
pop
lds
mov
cld
xchg
test
rclb
jns
mov
jo
mov
sub
pop
subb
fisttpl
int3
cld
ja
in
lock
incl
test
jl
jnp
jne
push
pop
ljmp
adc
call
mov
dec
out
loopne
mov
jge
mov
imul
lods
cwtl
iret
loope
mov
fldcw
cmp
out
aas
xlat
sar
decl
jmp
stos
ljmp
jecxz
jnp
push
clc
cltd
out
cmp
sbbl
mov
aam
stc
push
add
mov
lock
pop
or
loopne
lcall
mov
cmp
dec
pop
mov
int
imul
or
cwtl
scas
decl
jmp
inc
rcl
sbb
pop
pop
or
lcall
cmp
adc
mov
xlat
lcall
push
stc
fsubrs
inc
arpl
fstpt
pushf
test
leave
data16
pop
decl
dec
cwtl
mov
push
mov
pop
lret
cld
and
jno
jbe
fyl2xp1
mov
jg
cmp
inc
out
jmp
loopne
ret
out
pop
lock
incl
inc
daa
movsl
aam
movsl
sub
and
pop
lahf
xor
sbb
pop
call
xorb
mov
adc
adc
xchg
loope
push
insl
inc
shll
ljmp
jmp
and
pop
sub
jns
test
fldcw
sub
cli
sbb
sub
push
mov
sub
cmp
clc
arpl
mov
daa
mov
ljmp
mov
test
sub
pop
popf
subl
dec
mov
jle
jmp
rclb
mov
xchg
and
jne
nop
mov
movsb
loop
mov
pop
jmp
mov
adc
xlat
lret
insl
mov
std
cmpsl
aam
lods
mov
push
jne
inc
xor
xor
cwtl
sub
dec
mov
mov
and
mov
pop
add
dec
loop
stos
loop
sub
push
dec
sbb
mov
pop
lret
out
cmp
jmp
mov
push
dec
mov
xchg
xchg
movsl
mov
lds
incl
scas
loop
mov
daa
jnp
sub
pushf
jmp
cwtl
add
mov
loop
cmc
xchg
jnp
cmp
xor
dec
pop
arpl
repz
jg
lcall
mov
cmp
pop
cli
dec
stos
ljmp
sub
clc
ljmp
adc
jno
and
jno
jne
xchg
ja
pop
sub
incl
push
pop
mov
sub
nop
leave
cli
daa
pop
adc
repz
jmp
movddup
jae
cmp
jge
lret
cmp
add
int3
test
loopne
jns
jmp
mov
adc
fstl
pop
mov
push
xchg
sbb
add
ds
test
jae
pop
inc
test
ror
adc
or
stos
mov
jg
add
loope
mov
clc
adc
stos
and
sti
cld
dec
xchg
jecxz
gs
test
xlat
xchg
sbb
test
inc
add
pmulhuw
aam
inc
decl
test
sbbb
incl
sbb
jp
jge
sbbl
xor
cmp
mov
jecxz
cmp
out
scas
inc
pop
inc
test
icebp
pushl
sub
fnstcw
pusha
lods
mov
repnz
sbbl
mov
mov
incl
push
or
inc
lcall
outsl
testl
call
inc
inc
xchg
add
xor
fiaddl
scas
popf
leave
mov
lahf
aad
inc
dec
dec
adc
mov
mov
lods
push
cmp
add
sub
mov
pop
xlat
std
pop
sbb
movsl
add
push
fwait
mov
hlt
fisttps
fwait
dec
bound
dec
xchg
pop
mov
mov
clc
ljmp
xlat
dec
mov
cmp
cld
adc
incl
stos
ds
jge
cmp
xlat
mov
pop
mov
xchg
push
inc
imul
lea
jmp
dec
daa
adc
sbb
jmp
cmpsb
int
pop
iret
adc
lahf
mov
shr
mov
inc
daa
push
les
jle
xchg
iret
clc
fucomip
das
jnp
fs
mov
adc
sbb
or
ljmp
fdivl
xor
adc
jge
jo
aaa
jle
sub
push
sub
ljmp
xchg
into
scas
stos
sub
lea
mov
fimuls
jle
mov
ljmp
and
ja
insl
imul
call
jmp
mov
call
inc
andb
mov
sti
mov
mov
es
xchg
mov
addr16
call
idivb
int
xor
gs
xchg
mov
or
in
decl
sbb
mov
mov
stos
fcomp
aaa
add
cmp
lret
pop
mov
push
xchg
cmp
decb
jns
and
pop
mov
enter
xor
decl
and
int
pop
fisubrs
cltd
js
sbb
mov
cld
mov
imul
or
pushf
mov
sub
std
xlat
daa
stos
or
jne
mov
mov
outsl
push
rclb
lcall
mov
mov
sbb
cmp
push
movsb
mov
outsb
jae
subl
adc
cmc
fsubl
clc
mov
test
mov
std
leave
mov
bound
add
or
dec
sbb
xor
and
jle
xchg
lock
stos
pop
xlat
push
xchg
jl
lcall
lods
push
or
incb
jne
arpl
add
push
pop
cwtl
push
push
mov
lock
ja
shl
adcl
mov
and
sub
sub
xor
inc
into
outsl
xor
movsl
push
adc
cltd
out
lcall
inc
pushf
mov
out
lea
lcall
xchg
cmc
mov
mov
pop
lods
ds
loop
lcall
cltd
add
out
fidivrl
lcall
push
jns
mov
push
ss
mov
xchg
adcl
jg
call
push
loope
cmp
push
or
ss
cmp
push
xchg
aam
jmp
mov
pushf
inc
lret
push
insb
xor
mov
jmp
shlb
mov
lahf
addr16
das
sub
mov
sbb
sbb
call
loop
call
mov
push
or
inc
sub
xchg
mov
jg
xorl
test
mov
jg
inc
fldt
in
xor
push
xor
xchg
clc
pop
cs
push
outsl
sbb
dec
xchg
lea
gs
jmp
jns
xchg
in
inc
push
xchg
daa
movsl
mov
stos
mov
jmp
adc
leave
mov
in
jge
in
pop
stos
mov
push
xchg
xor
aas
in
xlat
mov
inc
shll
mov
loop
jno
push
push
scas
xor
cmpsb
jecxz
push
mov
insb
sbb
push
adc
add
and
or
cmp
pop
movsb
es
push
cmp
lcall
pop
pop
or
mov
popa
pop
mov
fisttpl
pop
mov
ret
cld
push
pushl
jmp
gs
inc
xor
inc
dec
push
lea
fistl
andl
fstpt
and
xchg
test
test
pop
lods
mov
cld
jg
ret
inc
xchg
xchg
inc
pop
cmp
rcll
sub
jg
movsl
sbb
lret
bound
fidivrs
mov
test
xchg
xchg
jg
xchg
xor
mov
mov
add
lcall
scas
add
sbb
inc
loopne
outsb
adc
ljmp
es
sbb
mov
adc
pop
cli
jne
sbb
mov
lock
jg
aas
mov
imul
lahf
dec
ljmp
jmp
les
mov
xchg
xchg
inc
sti
pop
inc
lret
bnd
movsl
hlt
pop
clc
decl
push
cmp
test
repz
sbb
mov
ljmp
mov
js
jmp
inc
out
aaa
dec
roll
fsubrl
mov
pop
push
xchg
movsl
ljmp
push
adc
lods
xchg
int
shrl
js
and
incl
adcl
cli
mul
inc
mov
std
js
cmp
dec
pop
ljmp
xchg
ss
inc
jmp
jp
xor
sub
in
dec
xchg
mov
jmp
mov
jle
sub
jmp
mov
push
nop
adcb
jg
or
mov
inc
push
cmc
mov
scas
mov
loop
cmpsl
mov
jle
sarl
in
les
in
cmp
out
popa
push
arpl
pop
dec
mov
mov
pop
and
fwait
or
cltd
mov
push
mov
jecxz
dec
in
data16
dec
icebp
out
pop
push
cld
call
fsubrs
push
push
xchg
mov
out
xor
das
decl
aaa
cmp
leave
cmpsb
xchg
push
fstpt
dec
mov
das
push
mov
inc
les
rcrb
dec
std
mov
xchg
xor
push
xchg
insl
sub
lods
xor
incl
pop
pop
dec
js
or
mov
cmp
pop
in
jo
jnp
fistpl
pop
movsb
mov
outsb
cli
fnstsw
dec
lcall
call
jecxz
mov
aam
adc
mov
push
sbb
mov
pop
mov
inc
sti
cs
gs
pop
cmp
push
leave
enter
pop
aas
iret
xor
sarb
cmp
or
lcall
mov
hlt
pushl
cmpsl
mov
arpl
test
rolb
xchg
mov
inc
movsl
xchg
dec
xchg
inc
dec
test
mov
mov
lret
dec
popa
jnp
xor
int
cmpsl
push
add
inc
push
jmp
mov
dec
das
sbb
aad
lcall
shr
jae
mov
lret
mov
aam
repnz
test
sti
mov
push
movsl
ljmp
sbb
adc
dec
loope
mov
sub
lcall
shr
rcrb
out
ja
xchg
out
sub
lret
push
and
push
adc
jmp
and
xchg
jge
mov
mov
cld
sbb
mov
cmpsb
or
pop
inc
ljmp
dec
mov
mov
cs
daa
xor
mov
xchg
sub
sbb
decl
std
call
into
daa
jg
inc
jecxz
pop
loope
bound
inc
std
jl
aaa
push
adcl
or
push
sub
cmpsl
push
mov
popa
in
idivb
ficompl
hlt
ljmp
test
cmp
adc
add
enter
inc
xchg
test
decl
and
or
sub
int
or
mov
pop
call
clc
cmp
mov
nop
inc
ret
jnp
ret
andl
ja
adc
or
mov
lods
pop
jb
push
imul
rol
das
and
push
fimuls
sbb
push
push
out
lcall
mov
iret
fistps
pop
sub
ficoml
stos
cmpsl
int
out
mov
shlb
cwtl
adc
pushf
jg
xchg
push
xchg
in
paddd
je
pop
inc
in
adc
decl
das
xor
hlt
imul
xor
rcrl
scas
aad
insl
incl
pop
jp
xor
mov
xchg
in
mov
xlat
call
aaa
lcall
xchg
xor
cmp
pusha
add
test
icebp
push
jg
sahf
or
cmpsb
ds
sbb
xchg
push
and
imul
mov
incl
jne
dec
and
imul
mov
stos
int3
jecxz
xor
push
mov
dec
incl
out
add
or
mov
cwtd
mov
push
sub
leave
mov
cmp
decl
jl
outsl
jmp
popf
cmp
leave
cmp
je
repz
or
test
lcall
cwtl
cmp
mov
jg
mov
push
ja
pop
sbb
decl
pushf
sub
jnp
mulb
add
testb
orb
mov
adc
aaa
mov
cld
jl
push
cs
rolb
adc
into
ljmp
insb
pop
in
mov
xchg
leave
icebp
mov
or
aad
or
dec
loop
sti
fisttps
adc
std
ljmp
fstps
call
push
cmp
sbb
das
cmc
ljmp
sub
xor
movsl
inc
adc
and
mov
cmpl
in
mov
dec
hlt
dec
cmp
add
xor
adc
lock
call
shrb
out
inc
mov
stc
fstpt
jmp
clc
sar
xor
pop
call
push
ss
dec
sahf
addr16
sub
in
ja
clc
lcall
pop
pop
cltd
adc
int3
daa
mov
pop
jo
pushl
test
add
jle
bnd
aam
repnz
call
bound
aaa
pop
inc
outsl
inc
or
in
incl
ljmp
int
xchg
inc
je
dec
pop
dec
lock
adc
jg
test
adc
movsl
mov
add
js
adc
fsubp
mov
cmp
iret
mov
ja
je
rol
cmpsb
and
add
dec
lds
lcall
les
pop
aad
sub
sbb
and
orb
incl
jl
jg
shrb
popa
jbe
inc
push
mov
lret
and
and
mov
call
add
movsl
enter
in
dec
movsb
cmp
fs
dec
xor
mov
mov
jp
pop
dec
or
shrb
jle
je
leave
pop
sahf
mov
ficoml
mov
call
lahf
cmc
addr16
pop
aaa
insb
aas
aas
in
sahf
mov
arpl
push
call
mov
nop
inc
cmp
jge
dec
push
loope
int3
push
repz
call
clc
inc
dec
bound
mov
aad
outsb
xchg
pushl
xchg
je
inc
decl
nop
sub
cmp
jp
mov
jno
aaa
icebp
cmp
clc
dec
cld
fistl
lock
rol
add
inc
xor
xchg
push
test
mov
shlb
mov
ljmp
inc
fcoml
fstl
cld
lret
sbb
sub
jnp
sub
cmpsb
adc
scas
dec
popf
dec
cmc
jo
mov
jg
sbb
ficomps
cmp
loopne
imull
neg
mov
into
mov
jo
ljmp
or
insb
leave
inc
adc
cwtl
rcrl
pushf
stos
mull
add
ja
lock
fadd
pop
mov
sbb
pusha
dec
pop
add
dec
ja
mov
jecxz
mov
pop
mov
insl
mov
jmp
fwait
stc
or
mov
add
pop
imul
cmp
cmp
add
bound
stos
call
in
cmpsb
or
fnstsw
xor
add
sub
dec
jg
fimull
cmpsl
inc
ret
add
add
out
fcoms
push
sub
call
add
test
pop
cmp
jecxz
adc
sub
pop
int
fs
and
mov
call
dec
xor
or
lret
xor
push
add
pushl
ficoml
in
mov
pop
sub
mov
xlat
pop
in
xlat
dec
add
std
idiv
fxch
sbb
xchg
movsb
ss
fdivl
and
inc
cmp
rolb
add
clc
aad
mov
mov
mov
mov
sub
xchg
das
lods
into
xor
sahf
mov
jns
repnz
ljmp
loopne
mov
mov
lahf
jne
add
push
mov
orps
outsb
cmp
jl
inc
sub
imul
xor
or
in
dec
fistpll
pop
rolb
sub
gs
daa
ffreep
mov
out
and
pop
fistpll
lcall
dec
cmp
inc
rorl
xchg
punpckhdq
mov
dec
and
xchg
imul
lds
push
je
sbb
inc
incl
and
cwtl
out
jl
das
jne
push
rorb
loopne
pop
adc
lahf
inc
mov
nop
lret
mov
test
sbb
les
add
add
push
movsb
xor
and
push
or
lcall
and
fsubs
and
lcall
test
div
mov
jp
jp
arpl
adc
test
test
sbb
filds
push
fucomip
and
adc
sahf
movsl
shrl
jg
decl
inc
inc
jmp
out
add
aad
cs
mov
cmpb
dec
leave
filds
pushl
cli
incl
push
xlat
rcrl
xor
lock
js
jae
fldcw
pop
rcll
insl
push
jle
xor
out
push
mov
das
std
lock
loopne
jmp
test
xor
fwait
pushl
xchg
sub
pusha
cmp
das
out
in
lea
test
imul
call
rcll
pushl
mov
and
ss
or
decl
pop
xchg
js
cli
popa
mov
jbe
pushf
adc
fbstp
out
outsl
hlt
mov
ja
xlat
push
push
icebp
pop
mov
aad
mov
imul
lcall
cld
cwtl
stos
jae
pop
pushf
mov
in
xor
xchg
push
and
out
imul
call
jb
add
rcll
shlb
and
cld
mov
aas
jo
loop
push
scas
adc
push
xchg
ret
cmpsb
sti
push
incl
mov
jmp
jmp
pushf
lahf
dec
mov
mov
addr16
incl
scas
pusha
shll
outsb
lods
xor
ret
add
js
inc
lahf
aas
lods
mov
repz
or
and
stos
dec
inc
jmp
iret
sbb
jno,pn
jecxz
xchg
pop
or
lcall
sbb
icebp
or
test
dec
sbbl
stos
sti
pop
cmp
fcomip
add
hlt
lds
dec
fs
pop
data16
mov
js
mov
or
push
mov
jbe
imull
sbb
ja
mov
sub
dec
out
dec
mov
pushl
adc
sub
lcall
mov
pusha
pop
pop
imul
decl
add
in
push
mov
mov
mov
jae
cs
out
data16
or
mov
and
push
popf
fldt
shlb
sarb
lcall
int
add
push
in
and
lea
xchg
pushf
filds
in
sub
push
sub
mov
xchg
lods
inc
idivb
cld
insl
mov
pushf
int
stc
cmpl
cmpsl
mov
push
call
cmpsb
inc
ljmp
lock
out
push
add
mov
or
fsubl
mov
mov
jae
lods
or
dec
gs
adc
aas
fmulp
mov
fs
push
outsl
stos
pushl
data16
cs
jb
adc
pushl
nop
push
jbe
nop
nop
mov
mov
mov
add
add
lcall
sub
leave
repnz
daa
xlat
clc
out
cmc
inc
movl
mov
mov
ljmp
xchg
push
sub
dec
pop
mov
mov
cld
lcall
push
push
lcall
xchg
cmpsl
push
in
outsl
roll
xor
mov
dec
jo
mov
xchg
xchg
sub
inc
adc
push
and
mov
add
mov
inc
mov
lret
insb
popa
and
int3
les
divl
xlat
repz
cmp
out
push
jns
sub
mov
adc
stos
mov
fldcw
sub
mov
incl
enter
sbbb
test
data16
lds
push
fwait
adc
fildl
xchg
mov
jmp
movsl
and
decl
cs
sub
mov
ret
cltd
repz
mov
ja
mov
pop
sub
mov
xor
jae
call
jmp
call
add
in
mov
out
lea
mov
cmp
lcall
lds
movsl
adc
mov
mul
hlt
ja
xlat
jbe
adc
sbb
ljmp
movsb
mov
mov
push
cmc
mov
repnz
mov
test
pushf
cmp
fcmovne
mov
gs
cs
loop
cld
ljmp
icebp
repz
push
test
fdivrp
loope
int
scas
ret
push
daa
push
decl
and
sbb
outsb
cmp
mov
in
adc
push
adc
or
std
jbe
pop
das
sub
loope
insb
mov
rorb
adc
cmp
das
lock
sbb
js
jl
cmp
testb
lock
repnz
dec
lret
loop
insl
sahf
jbe
push
inc
pop
and
jbe
xchg
push
imul
mov
mov
and
and
subl
loop
lahf
les
push
out
daa
in
push
pop
mov
pop
nop
xor
jmp
ja
xchg
mov
mov
shrb
lock
xor
or
cmp
add
mov
mov
jmp
pop
movsl
adc
xchg
cmp
cli
ljmp
sub
ljmp
jge
fisubrl
fildll
add
and
outsl
mov
scas
fdivr
aaa
scas
mov
push
adc
mull
or
jmp
hlt
test
je
sbb
jmp
xchg
jmp
push
sub
es
cmp
or
je
sbb
sub
jg
cmp
push
movsl
jno
xchg
pop
jae
lret
shll
test
dec
sar
lcall
push
cmp
fwait
lahf
cmp
lahf
jle
push
fcomps
push
test
fdivrl
jb
icebp
test
xchg
or
xor
in
mov
jns
mov
fstpl
sbb
std
inc
loop
test
test
or
out
sti
mov
mov
rcrl
movsl
cmp
addr16
call
imul
sub
out
sub
and
lcall
jle
pushl
popf
ret
daa
mov
addr16
es
popf
mov
addr16
fisttpll
sahf
push
pop
lcall
mov
pushf
loopew
add
mov
outsb
adc
arpl
mov
call
inc
pop
ficomps
and
lcall
push
fsubrl
enter
fcmove
jbe
aad
loop
insl
sub
sbb
xor
sbb
mov
add
mov
inc
jno
adc
cmp
pop
cmp
mov
cmc
out
in
push
scas
sti
adcl
sarl
inc
lret
inc
shll
mov
or
call
fistpl
mov
pop
cmpsl
lods
xchg
insl
or
mov
out
call
repnz
xlat
pop
push
mov
popf
sahf
psrad
pop
into
push
pusha
pop
jg
aam
nop
add
lret
mov
jle
inc
rolb
in
mov
adc
call
cs
out
add
movsl
pop
ss
xor
fdivr
inc
jecxz
fsubl
push
and
aam
leave
daa
sub
outsl
insl
push
test
ret
pop
add
sbb
clc
ljmp
rorl
loope
cmc
scas
jns
cmpsl
mov
rcrl
add
or
movsb
enter
cmpsl
jb
test
xor
daa
je
imul
adc
hlt
mov
jmp
mov
insl
pop
arpl
add
dec
ljmp
out
mov
scas
sbb
xchg
es
or
sub
mov
ljmp
or
lret
lahf
test
lds
mov
cmp
mov
out
mov
lcall
cmc
xchg
or
ror
dec
es
pop
add
jnp
xor
mov
cmp
cmp
pushl
loope
std
aam
hlt
cmc
push
xor
je
hlt
mov
enter
fucomip
cmp
sbb
sbb
dec
outsl
ja
loope
push
mov
cld
adc
rclb
fsubl
push
and
push
mov
outsb
mov
lock
sbb
dec
outsl
fs
dec
les
in
stos
arpl
ljmp
lock
push
mov
push
orb
dec
stos
out
jge
orb
dec
rcrl
jg
pop
out
push
fstl
push
ds
cmc
and
sub
cmp
decl
cmpsl
testb
popl
lods
adc
sahf
jo
in
adc
ljmp
jp
dec
mov
jns
aaa
sub
and
cmp
inc
sbb
out
imul
mov
lcall
pop
push
in
cld
outsl
test
push
das
xchg
pop
pushl
pop
mov
incl
shll
or
es
rcrl
pop
mov
pushl
addb
lds
push
lcall
push
push
jl
pop
and
push
mov
cmp
mov
add
sbb
js
out
inc
pop
out
repnz
std
dec
movsb
push
ficoms
adc
lds
mov
mov
pop
sub
jb
sbbb
add
js
and
ljmp
dec
mov
pop
push
outsl
hlt
xor
call
cmp
inc
sub
mov
popl
mov
mov
clc
jp
mov
mov
clc
and
mov
pop
and
adc
or
xchg
loopne
pop
insl
add
mov
sbb
adc
or
push
jp
jg
jae
adc
cmp
clc
push
jle
xchg
mov
mov
loop
lods
cltd
inc
shll
and
pushl
dec
sti
push
testb
movsb
jno
into
cmpsl
in
into
out
shll
inc
cmp
es
decl
ljmp
addr16
jg
mov
decb
sbbl
jbe
inc
inc
call
cli
movsb
dec
sub
mov
shll
pop
sub
xor
xlat
test
in
mov
inc
cmc
cmpl
mov
pushl
xchg
mov
sbbb
mov
mov
addr16
inc
sub
sbb
stc
cmovns
lret
adc
push
in
xchg
shl
jmp
lcall
in
add
inc
sbb
and
inc
ds
push
adc
push
jg
outsl
notl
fsts
loope
stos
idiv
fdiv
jbe
call
imul
xchg
xor
sar
pop
jmp
or
jle
and
arpl
insb
popa
sbb
test
sbb
jbe
addl
int
and
jge
cmp
mov
mov
mov
pushl
ds
or
xor
pop
dec
int3
out
pslld
sti
addl
ss
call
push
outsb
jbe
inc
jae
popf
mov
scas
fistpll
test
mov
push
mov
addr16
dec
loopne
lcall
add
cmp
loop
out
mov
icebp
xor
pushl
icebp
in
jae
cmp
mov
test
cmp
dec
stos
mov
pop
je
sub
push
adcb
ljmp
jg
dec
adc
push
lds
pop
and
aaa
jle
clc
dec
pushl
fadds
pop
xor
cmovs
decl
jbe
cmp
mov
adc
pusha
pop
jb
xchg
ret
jbe
mov
insl
ret
nop
inc
push
lock
pop
iret
decl
aaa
pop
adc
inc
adcl
mov
mov
fbld
imul
int3
ljmp
jge
inc
outsl
push
rcr
or
arpl
into
test
mov
incl
push
sub
repz
xchg
sbb
push
lcall
fisttpl
mov
pop
fnstsw
push
push
lock
xor
sarl
leave
xchg
mov
ficompl
ljmp
hlt
dec
xchg
push
inc
in
das
repz
cwtl
xor
test
cmp
out
cld
pushl
daa
stos
fstps
dec
int
add
jno
or
jb
jge
decl
push
adc
adc
push
xchg
push
xchg
mov
mov
add
aad
jle
and
dec
add
insl
add
in
adc
lcall
into
mov
mov
addr16
fwait
pusha
clc
addr16
dec
fsub
xchg
iret
aaa
dec
movsb
pop
test
dec
jnp
ljmp
lahf
rcrl
test
incl
xor
lahf
xchg
mov
jecxz
jl
and
shl
jae
mov
jle
imul
jo
in
fs
bound
mov
dec
mov
jg
xchg
ds
or
or
in
pop
insb
sbb
aaa
inc
add
mov
roll
xlat
xchg
or
fisubs
cld
adc
mov
push
incl
test
and
ret
pop
inc
inc
data16
and
shlb
mov
or
mov
idivb
dec
sub
mov
xlat
call
jmp
outsl
push
cmpb
xchg
inc
mov
rorl
mov
lahf
xchg
adc
decl
sub
xlat
std
jecxz
jp
mov
les
je
jecxz
lret
bound
loop
jns
mov
add
dec
cld
push
aaa
sub
test
mov
and
cli
xchg
lret
outsl
and
xor
cmp
pushl
lods
std
jo
xor
test
cwtl
pusha
push
xor
pop
pop
into
idiv
call
dec
aaa
xorb
pop
jnp
js
push
hlt
fwait
incl
cmp
clc
jle
push
pop
cmpsb
test
cmpsl
mov
jge
in
xor
out
or
xchg
test
adc
xchg
lcall
fistps
xchg
or
cmp
in
pop
mov
inc
xchg
idiv
mov
xchg
addr16
jmp
adc
mov
in
cld
add
xor
out
and
sub
lods
pop
mov
decl
out
jmp
adc
jmp
xchg
sub
mov
and
cmp
cmpsb
clc
ljmp
aaa
jle
or
sbb
dec
jge
jns
sub
std
cltd
sub
movsb
test
sbb
mov
fisttpll
mov
inc
rolb
out
movsb
mov
adc
jmp
adc
popf
mov
mov
cltd
jnp
dec
in
hlt
jae
call
lods
rorl
cltd
push
adc
or
movsl
push
xchg
sbb
roll
adc
mov
movsb
pushf
mov
or
dec
scas
leave
shll
ljmp
subb
pop
xchg
and
scas
inc
fwait
mov
mov
inc
mov
es
in
dec
xlat
and
loopne
cmpsb
jg
test
movb
push
mov
pop
push
and
mov
in
iret
fiaddl
imul
sti
sbb
xchg
xlat
dec
jl
and
stc
sbb
push
ret
inc
jnp
jo
adc
cmc
ds
cmp
sarl
add
push
dec
pushf
or
jno
xchg
mov
pop
call
in
clc
dec
add
ljmp
les
loopne
hlt
mov
call
lock
pop
jle
xchg
fdivr
mov
aas
xor
push
pop
inc
pop
loope
stos
leave
cli
fwait
xor
xor
int
xor
es
shrl
cmp
insb
gs
out
mov
cmc
jg
xchg
and
cli
outsl
decl
sbb
in
pop
fisubrs
xchg
dec
jle
inc
call
adc
mov
jno
jle
out
xor
mov
pop
rorl
inc
hlt
jmp
mov
out
xchg
adc
loopne
sub
inc
hlt
cld
or
mov
rcl
call
pop
into
stos
inc
jae
cwtl
lds
cmp
into
popa
aam
inc
ljmp
fucomip
icebp
mov
outsb
loope
rcl
fdivrs
test
or
decl
mov
mov
push
adc
jp
sarb
lcall
arpl
inc
dec
addr16
inc
scas
sub
xchg
ja
xor
jne
inc
test
test
mov
test
push
adc
in
into
les
dec
loop
lods
mov
dec
lods
xchg
insl
cmp
jp
aaa
adc
jg
push
xchg
pop
xor
fcomps
lret
icebp
popa
mov
cmp
call
xor
jo
sub
push
int
jp
fdivrs
fimuls
in
push
mov
adc
clc
call
pop
jmp
pop
dec
jns
std
lcall
fldt
aaa
idivb
xor
mov
std
clc
add
mov
idiv
imul
fs
add
xchg
push
imul
daa
ds
loopne
push
mov
bound
sbb
outsb
mov
rorb
mov
fidivs
cmpsb
jno
imul
jg
cmc
lahf
or
lock
repnz
mov
call
push
in
shll
aam
rcll
pop
out
aaa
dec
jnp
scas
dec
sti
pop
in
cmpsb
mov
sbb
cld
ljmp
fs
xchg
gs
push
push
or
inc
outsl
xchg
pop
lret
lods
adc
lret
sbb
decl
mov
jo
sub
pop
cmpb
push
jmp
sub
push
cmp
call
sub
stos
shrb
push
cmp
ljmp
sti
stc
cli
sahf
xlat
push
pop
insb
loope
cld
pushl
xor
cmp
pop
or
loop
xor
dec
lahf
stos
incl
cmp
xor
adc
mov
jae
ret
sar
jg
movsb
push
push
fiadds
mov
cmp
mov
out
outsb
pop
aam
mov
pop
jmp
pushl
stc
pop
dec
mov
or
dec
or
loope
pop
push
and
mov
jae
pop
xchg
lcall
das
daa
sub
mov
sub
call
cmpsl
push
xchg
xchg
lcall
add
add
xchg
lret
scas
jbe
and
fdivr
sbb
aam
jmp
push
sub
adc
xchg
outsl
stos
fisubs
mov
scas
mov
add
inc
popa
stos
loopne
cwtl
fdiv
mov
xbegin
cs
pusha
dec
lcall
in
mov
ja
and
out
mov
lods
roll
repz
jge
lahf
jmp
cmp
fdivs
cli
aam
jecxz
lock
ljmp
icebp
call
test
inc
jb
mov
fstps
int3
js
mov
jg
lcall
mov
sbb
bound
mov
and
cltd
cs
ljmp
mov
mov
mov
add
sarb
repnz
lcall
outsl
out
lcall
bound
add
fistpll
out
stc
xchg
push
mov
push
and
in
and
add
fcoml
or
incl
sub
popf
movsb
fcomps
mov
xor
iret
jb
and
fcoml
mov
xor
daa
out
lods
loopne
xchg
sub
in
mov
stos
mov
sbb
lret
daa
mov
push
jge
lahf
dec
sbb
les
push
daa
add
movsl
sub
sub
hlt
test
adc
fucomip
scas
sub
int
mov
fucomip
fidivl
icebp
cli
daa
mov
inc
add
pushl
mov
aad
xchg
mov
scas
loop
cmpsl
sbb
pop
dec
stos
movsl
mov
decl
cmc
call
ljmp
pushf
cltd
in
out
test
fcomps
lods
ljmp
pop
popf
dec
dec
pop
cmp
ret
sbbb
incl
jecxz
test
cwtl
push
leave
mov
mov
mov
jg
call
lock
xor
das
arpl
sub
std
ficoms
or
js
cld
ret
movsb
jnp
xor
mov
inc
fsubrs
push
add
mov
shll
ret
mov
inc
and
in
fwait
orb
jg
xchg
push
jge
push
jno
and
xchg
daa
sbb
sbb
popa
inc
call
jecxz
jae
dec
xchg
mov
pop
xchg
mov
repz
inc
adc
imul
inc
ja
cmp
pusha
iret
and
xchg
sbb
ljmp
or
aad
stc
dec
mov
mov
sbb
out
test
jne
mov
and
pop
mov
jmp
mov
stc
dec
pop
inc
aaa
mov
or
test
jmp
xchg
sub
aad
mov
pop
cmp
sbbb
push
test
gs
push
xchg
test
call
idiv
out
dec
jno
movsb
push
js
push
push
in
aad
and
push
stos
cmp
sbb
add
call
add
movsl
push
mov
ja
out
addr16
incl
mov
hlt
add
dec
push
outsb
cmpsl
push
inc
sbb
push
decb
popf
push
aam
cs
and
fucomip
push
addl
lods
mov
pop
loop
inc
stos
ja
mov
sbb
xor
daa
out
sbb
movsl
push
xor
xchg
scas
mov
add
push
mov
ret
dec
jnp
popf
pushl
js
pusha
in
loopne
mov
xchg
aad
call
jecxz
fmul
movsl
das
icebp
dec
pushf
pop
movsl
adc
xchg
insb
mov
cmp
jmp
ja
popf
jb
dec
jmp
rclb
int3
leave
mov
incl
mov
adc
out
cwtl
out
cmp
xchg
std
mov
cwtl
outsb
out
ljmp
mov
clc
push
xchg
mov
test
pushl
imul
mov
mov
stos
sahf
lcall
or
decl
mov
pop
and
outsl
adc
fistpll
mov
sar
mov
push
xor
xchg
dec
iret
mov
xchg
mov
cmp
lcall
xchg
cmp
dec
loope
nop
mov
and
mov
jmp
adc
mov
aad
mov
push
mov
sbb
sbb
call
addr16
push
xor
mov
clc
out
into
fnstsw
pop
add
out
mov
mov
cmp
das
popf
jp
cmpl
shlb
add
in
adc
adc
iret
cmp
add
loop
clc
cli
xchg
shrl
insl
nop
nop
insl
fcompl
xor
xchg
mov
decl
cmp
pop
es
pop
hlt
cmp
test
push
or
mov
popf
mov
add
loop
mov
ret
and
call
bound
cmp
rcll
call
inc
push
ja
loope
mov
mov
lret
aam
sbb
add
popl
fdivr
jmp
sbb
push
mov
jae
outsl
and
ljmp
outsl
or
or
fwait
stos
std
aas
mov
add
dec
popf
out
notb
mov
jecxz
jg
sti
std
jo
lret
and
cld
fnstsw
cmp
mov
ss
cmp
push
pop
cmp
incl
cmp
popa
pop
inc
cmp
int3
inc
lods
push
jne
bound
bound
and
lcall
mov
fwait
cmp
aaa
shrl
into
mov
fwait
inc
call
sbb
fsubrl
lcall
jecxz
xor
push
insb
ds
sbb
or
stc
pop
xchg
inc
cmp
adc
jg
mov
enter
clc
mov
mov
mov
pmaxsw
jmp
mov
into
inc
or
push
shll
jns
push
mov
dec
mov
div
and
ljmp
sbb
mov
mov
dec
mov
dec
xlat
ret
imul
lods
outsl
lock
es
lds
lock
movsl
mov
subl
dec
inc
mov
mov
pop
repz
faddp
out
or
jae
pop
lret
mov
cmp
jg
shlb
add
pop
lcall
pushf
dec
sbb
push
cmp
xchg
sahf
ljmp
stc
cmp
imul
inc
ret
cmp
je
pop
decl
mov
filds
mov
bound
jne
jmp
mov
pop
frstor
dec
sarb
pushf
bound
cmp
dec
outsb
pextrw
adc
push
xchg
test
add
test
mov
subl
push
fdivrl
push
lcall
clc
inc
ss
push
jge
mov
iret
into
or
push
cmpsl
jp
push
mov
cmp
repnz
in
xor
lock
jns
lret
mov
pop
into
push
aad
fsubrp
mov
lock
sub
enter
ds
jmp
mov
jnp
inc
adc
push
sbb
call
repnz
and
call
fisubs
jbe
sub
adc
fdivrl
ds
ss
ret
ljmp
fdivr
mov
repz
xchg
sbb
adc
push
jmp
inc
insl
jo
lahf
adc
cld
insl
std
jg
jg
xlat
mov
xchg
fcomps
xor
mov
xchg
decl
data16
xor
add
sbb
cwtl
xor
dec
cmpsb
loope
cmp
jp
mov
lcall
push
mov
repnz
gs
pushf
dec
jno
cs
xchg
outsb
sbb
and
or
sbb
mov
push
pushf
shll
test
jge
subb
mov
or
inc
out
test
mov
shl
pop
lods
icebp
fidivs
int3
push
sub
shlb
mov
ret
dec
lods
incl
outsl
sahf
outsl
ds
fidivrl
and
movb
lcall
push
adc
hlt
jbe
mov
jl
hlt
jg
fs
cmp
daa
dec
std
mov
and
push
jne
insl
push
jae
lret
ret
decl
inc
pusha
sahf
outsb
repz
insb
mov
cs
cmc
call
push
ja
adc
leave
dec
adc
xchg
or
test
jnp
sbb
cli
call
fcmovne
fldt
fisubrl
movl
push
mov
dec
movsl
and
lret
inc
dec
out
jg
mov
or
pop
xor
call
mov
pop
in
das
jo
and
cmc
add
jmp
test
and
mov
lret
add
mov
jle
popa
lahf
lods
stos
in
jmp
ljmp
sbbb
cmp
pminsw
mov
es
jmp
ss
das
mov
xchg
in
pop
or
test
call
xor
sbb
push
cld
sarl
jecxz
aam
adc
mov
aaa
inc
stos
inc
aaa
ds
popf
sub
xlat
or
leave
cmp
fnstsw
and
inc
shll
arpl
fcoml
add
pop
xchg
clc
ljmp
pop
sbbl
jne
xchg
mov
mov
enter
sbb
lcall
dec
aam
mov
faddp
push
xor
fwait
xchg
jle
lods
in
lcall
int3
sbb
ljmp
orl
and
mov
mov
pop
stos
mov
subl
jmp
push
outsl
add
xor
out
or
rep
imul
dec
pop
push
jge
scas
sub
das
stc
popf
addl
test
xchg
dec
dec
mov
jp
jge
scas
ja
cmp
leave
mov
inc
add
scas
and
lret
mov
call
in
clc
pop
icebp
pop
jp
repz
outsb
addb
inc
cmpsb
mov
js
xor
mov
cmpsb
es
test
push
popf
mov
dec
adc
call
aad
mov
sbb
insb
ja
les
pop
mov
or
mov
loope
jae
pop
test
mov
pop
jb
mov
decl
mov
lret
outsl
sbb
outsb
clc
in
ffree
div
movsl
sub
push
outsl
inc
adc
test
cld
ss
stos
fildl
testb
fs
sbb
or
xor
sti
sarb
cld
jno
decb
std
cmp
loope
mov
repnz
cmp
in
and
scas
sbb
mov
hlt
adc
fiadds
out
inc
and
or
test
jmp
mov
iret
dec
jnp
testb
sahf
mov
das
mov
dec
and
addr16
ja
jb
test
sbb
xchg
movsb
push
push
idivb
xor
aad
and
jb
shl
lods
lahf
mov
jnp
add
jmp
jnp
sbb
out
push
scas
push
jmp
movsl
push
adc
fcos
fsubrs
push
iret
inc
insl
aas
sbb
shrl
aam
popa
cltd
fs
lds
add
inc
inc
sbb
mov
jecxz
scas
adcl
xchg
ljmp
push
fidivs
arpl
test
shrl
cmpsl
inc
sub
cli
lcall
jo
mov
xchg
dec
mov
sub
adc
shlb
mov
fwait
loop
into
outsl
test
sbb
mov
mov
xor
adc
das
or
mov
out
out
dec
imul
outsb
adc
pop
loop
pop
xchg
jle
sub
mov
aaa
jne
dec
sbb
lahf
aad
cmc
jmp
shll
pop
imul
cmpsb
mov
dec
mov
and
push
std
add
enter
fimull
leave
sub
jmp
cmpsb
adcb
loop
shl
js
dec
pop
mov
ja
iret
pop
test
je
ljmp
cmp
jge
and
clc
or
psrad
sub
aaa
fstpl
and
push
lods
sbb
cmp
inc
adc
pop
imul
push
inc
testb
and
pop
mov
pop
ret
pop
sbb
add
pop
push
and
stos
sbb
das
fbld
dec
adc
popf
cmp
lods
jg
dec
push
jge
sbb
cmp
mov
or
outsb
fsubrl
call
outsb
or
adc
jb
in
xchg
in
clc
ret
dec
cmpsb
idivl
inc
incl
or
lret
fisubl
xchg
jp
adc
sbb
iret
and
outsb
push
inc
dec
ss
out
mov
fdivr
outsl
cld
decl
test
or
add
lods
sub
dec
cld
scas
loopne
nop
sbb
jmp
popf
in
inc
and
loope
test
imul
sti
and
cmc
pushl
adc
in
cmp
sub
lock
cs
icebp
das
pusha
stos
add
xchg
sub
pop
sbb
dec
jle
sbb
lcall
outsb
cltd
and
fistpl
aaa
loop
jno
jl
pop
and
pop
mov
pushl
jge
arpl
xor
js
xor
orl
out
data16
outsl
adc
jg
adc
mov
mov
jbe
sbb
cmpsl
fnstenv
ljmp
ret
jmp
ret
mov
cltd
mov
incb
jp
xor
lcall
mov
or
int3
ds
xchg
jecxz
add
das
leave
lods
jmp
clc
mov
adc
jge
xor
and
fadd
in
jbe
ds
jmp
xor
pop
jecxz
add
fcoml
inc
les
add
es
enter
sbb
jmp
inc
jecxz
imul
xchg
cmp
add
xchg
cmp
cli
dec
push
add
aas
sub
test
add
push
stos
addl
pushl
push
pop
pop
test
adc
fildll
jno
cli
clc
sub
lcall
scas
jg
hlt
sahf
lods
enter
call
iret
sub
hlt
cmc
iret
dec
imul
jne
call
push
and
fdivl
sbb
outsb
scas
pop
lock
pop
outsb
fisttpll
push
pop
add
test
fs
xchg
test
mov
jg
inc
lcall
pop
or
lret
cld
int
mov
cmp
fldln2
mov
cmpsb
or
pushl
mov
ja
sub
data16
lock
mov
popa
inc
leave
insl
iret
inc
out
sahf
and
jg
stos
mov
insl
dec
rcl
mov
mov
fildl
add
inc
push
and
and
sub
into
data16
jmp
sbb
movsb
add
jle
mov
xchg
call
in
push
leave
ret
cmp
cmpsb
push
cltd
jo
and
fsubr
cltd
cmc
popf
adc
jmp
nop
xchg
test
xchg
incb
mov
out
pop
mov
lcall
xorb
lods
mov
cmpsb
adc
ss
cmp
imul
outsl
mov
fnstsw
push
not
push
pop
xor
popa
pop
mov
nop
jecxz
decl
push
stos
aad
pop
dec
loope
in
mov
test
and
ficoml
clc
jg
int
and
pop
mov
es
mov
jo
ljmp
sbb
aam
outsl
das
lock
mov
mov
out
jecxz
stos
push
scas
movsb
in
decl
pusha
mov
test
lahf
mov
stos
lods
inc
sahf
daa
inc
xor
into
mov
call
repz
leave
mov
push
in
sbb
in
mov
sbb
shlb
or
jg
push
dec
pop
mov
dec
xchg
pop
in
jg
hlt
lds
sbb
lods
das
jmp
lcall
sub
xchg
insl
sbb
jo
sbb
pop
std
xor
insb
lea
adc
sbb
das
cmpsb
jge
arpl
push
andl
test
addr16
mov
mov
xchg
sbb
push
out
in
ljmp
cmp
or
aaa
aad
adc
cmp
sbb
movsl
das
lock
cmp
fwait
lds
enter
or
rcrl
jg
stos
mov
shll
test
dec
fdivrl
sub
in
ss
hlt
leave
sbb
cld
gs
mov
mov
or
mov
sub
ss
pop
inc
nop
aas
pop
inc
jmp
add
popa
testb
xor
ss
nop
lds
cmpsb
pushf
pop
ljmp
scas
adc
out
ljmp
cld
sbb
dec
xor
lea
decl
pop
je
jno
sbb
push
rol
or
mov
mov
jb
adc
cmp
repnz
out
cmp
stos
inc
mov
lods
mov
jne
sarl
push
or
call
fucom
int
push
jae
cmp
adc
test
mov
push
ret
jbe
shll
dec
push
push
sub
cmpl
lcall
jmp
pusha
into
push
adc
sar
mov
cmp
mov
add
cwtl
xlat
add
dec
fidivrl
or
pop
jl
loop
pop
das
jno
ljmp
and
lahf
int
push
outsl
xchg
out
out
adc
mov
push
cmp
lock
xor
daa
lds
ljmp
scas
jne
and
sbb
jae
lock
push
inc
inc
fnstenv
sub
xor
nop
jle
push
lahf
das
push
ljmp
inc
push
xchg
lea
and
and
subb
cs
fwait
pushf
mov
or
andb
fbstp
inc
xchg
pop
or
movsb
mov
jg
out
dec
mov
pop
shll
add
nop
js
pop
or
mov
scas
sbb
inc
nop
add
pop
and
arpl
cli
push
repz
xchg
fcmovbe
stos
out
dec
inc
ljmp
xchg
rcr
mov
cs
aas
sbb
divb
call
push
fcmovnb
fwait
lret
sub
pushl
cli
push
in
pop
pop
cwtl
cld
bound
hlt
and
inc
xor
jns
outsl
call
js
cmpsl
xor
lret
pop
sbb
aam
xor
decl
pushf
push
sahf
std
mov
cld
mov
scas
leave
rol
cld
lods
fildll
rol
mov
pop
mov
cld
lcall
xor
adc
sbb
popf
mov
jns
adc
fbld
add
movsl
mov
mov
mov
aas
cli
fadds
js
dec
das
adc
or
lock
mov
or
in
roll
outsb
jge
lahf
aas
nop
sub
add
nop
cmp
xchg
inc
orb
decl
dec
push
push
dec
leave
scas
gs
mov
mov
les
mov
iret
and
pusha
pop
pop
std
ficompl
mul
xor
cs
icebp
jne
xor
inc
cwtl
sar
das
cld
cs
les
pop
inc
test
mov
xchg
cmp
jle
nop
loope
or
testl
lcall
cmp
stc
jle
mov
arpl
aad
bnd
mov
fistps
jg
ljmp
iret
cs
dec
call
incb
pop
sbb
test
mov
cltd
loop
orl
xorl
pushl
ret
adc
xchg
test
or
dec
dec
cli
mov
xchg
cli
or
test
pop
lods
rcll
jo
cmp
orb
xor
fcmovu
fstps
xor
adc
data16
std
cmpsl
jne,pt
test
nop
push
xor
inc
and
fucomip
push
jmp
test
or
sub
push
addr16
ljmp
icebp
mov
cli
faddl
adc
inc
push
mov
adc
push
mov
mov
dec
fisubrl
xor
pop
shll
mov
frstor
xlat
sbb
and
or
jmp
popa
mov
push
dec
in
sbb
test
adcl
call
mov
nopl
jmp
in
cld
xchg
or
mov
dec
leave
pop
or
out
add
outsb
pop
or
and
inc
scas
cmpsl
cmp
je
pop
sub
or
in
mov
add
lds
jle
fstp
js
mov
mov
movsl
stos
mov
jge
and
dec
adc
inc
pushl
jmp
fxch
sti
ljmp
push
jmp
out
fwait
lcall
mov
inc
sub
hlt
and
mov
mov
out
in
insl
push
imul
push
dec
sbb
mov
loop
sub
rorl
cmpsb
clc
sbb
xchg
arpl
inc
inc
jno
decl
out
push
xor
push
adc
lock
mov
into
shl
push
aas
call
call
out
sub
pop
rclb
mov
cmove
and
dec
mov
jmp
popf
add
sub
clc
cmp
int
push
inc
fsts
dec
sbbl
lock
js
or
in
fidivrs
in
mov
scas
je
incl
jmp
repz
sbb
sub
pop
clc
jg
leave
stos
cmp
mov
je
in
cmpsl
mov
sbb
adc
add
rolb
sbb
out
cmp
test
int
mov
sub
xchg
incl
jp
cmp
sbb
subb
pushf
sub
xor
dec
push
out
mov
push
push
lods
movsb
push
cmp
pop
push
xor
scas
sub
outsl
fmul
cmp
cmpsl
ret
pop
iret
fcoms
and
and
hlt
mov
lcall
cld
fildll
rol
add
xchg
jp
mov
mov
pushl
or
pop
xchg
into
xchg
add
jl
dec
ds
aam
jl
xor
jle
push
mov
insb
int3
jnp
and
aam
in
cmp
jg
fstps
cltd
adc
ret
mov
bound
dec
mov
lcall
repz
fwait
cmp
jno
add
add
test
jp
jo
pop
movsl
jb
mov
decl
mov
sbb
js
inc
add
adc
cli
cmc
imulb
jg
lock
je
pop
popf
out
jne
jl
int
adc
cmp
cli
dec
popa
jbe
and
bnd
fnstsw
pushl
xchg
or
xchg
nop
jl
push
mov
add
lcall
xchg
adc
inc
lcall
or
lahf
hlt
outsl
je
pushl
xchg
aam
lock
imul
mov
out
idivb
dec
jg
pushl
int3
icebp
lea
dec
scas
enter
xor
ljmp
pushl
push
cld
out
pop
pushf
aaa
xorl
xchg
sbb
or
lcall
mov
iret
pop
push
sbb
cltd
pop
inc
or
xor
aaa
jl
xchg
decl
xchg
xor
mov
adc
sahf
in
std
mov
mov
incl
xchg
sti
loopne
int
lret
xor
stc
and
movsb
int
mov
std
lcall
enter
inc
inc
cmp
enter
push
jae
mov
push
loop
iret
sub
xor
fildl
jnp
or
lcall
fistpll
loope
mov
jno
push
push
fiaddl
jg
mov
aaa
shrb
mov
xor
sbb
imul
mov
push
cmpsl
fmull
xchg
insb
jle
ret
mov
outsb
mov
cmp
jmp
pop
mov
not
leave
mov
aaa
pop
pop
iret
mov
lock
pop
test
xor
call
mov
push
xlat
jg
sbb
ja
popa
movsb
mov
cli
and
mov
mov
jg
sub
pushl
rcl
push
aam
cltd
mov
dec
mov
ret
stos
inc
leave
cmp
mov
mov
push
fucomip
xor
pop
cld
neg
fwait
jo
cmp
lahf
fsubrs
popa
ds
push
push
fidivs
sbb
push
imul
das
into
pop
iret
xchg
pusha
jle
es
call
loop
arpl
cld
adc
push
mov
addr16
push
mov
adc
outsl
inc
cld
incl
mov
mov
and
enter
add
pushl
inc
mov
pop
pushl
shlb
sahf
or
lock
dec
or
aad
mov
ret
jb
add
adc
mov
cmc
pushl
or
or
dec
andb
loopne
iret
in
fstps
and
std
or
vcvttps2dq
in
cmpsl
mov
andl
adc
pushl
cli
fnsave
pushf
lcall
push
xor
test
mov
jg
add
dec
pop
mov
add
das
cltd
addr16
mov
ds
mov
mov
fisubrs
sub
stc
pop
and
sti
mov
aad
lods
sbb
outsl
std
call
ja
xlat
dec
jno
and
in
xchg
or
fs
or
sbb
call
out
xchg
lods
sbbb
sub
fwait
test
dec
push
add
lds
mov
popa
and
and
sub
xor
mov
movsb
loope
sbb
cmp
pop
jle
adc
in
orl
dec
or
pusha
cmc
jmp
push
adc
cltd
jle
shrb
enter
ljmp
iret
and
cltd
call
nop
add
jno
ljmp
adc
aad
dec
std
call
jmp
or
dec
sub
jae
out
or
incl
dec
std
xor
and
xchg
or
jae
pusha
jecxz
cmp
push
cmpsb
hlt
adc
push
lret
or
jne
jl
fidivrs
popa
sbb
test
mov
cli
call
scas
push
adc
push
mov
push
fidivs
bound
sbb
mov
mov
dec
outsb
sbb
neg
add
cmp
loope
xchg
pop
clc
jg
test
clc
cld
xchg
hlt
sub
mov
mov
mov
and
std
ret
sbb
lahf
jg
ljmp
ja
mov
lret
lcall
std
call
mov
xchg
cmp
aam
lods
xchg
push
or
js
xor
dec
rep
pop
lock
lea
jge
bound
cld
decl
cmp
add
je
lea
addb
push
mov
xor
ljmp
add
out
cli
mov
dec
popf
fidivrl
jbe
pop
lfs
and
push
pop
call
or
inc
cltd
or
fucomip
call
sarb
cmp
outsl
mov
xchg
das
fbld
in
ret
add
jmp
nop
lods
sub
loop
sub
sti
sub
xor
les
ljmp
loope
or
inc
push
lods
push
loope
gs
add
jg
sbb
lock
lahf
fnsave
out
push
out
ljmp
loopne
inc
insb
into
jns
mov
loopne
jbe
push
xchg
sub
stc
ljmp
in
and
jmp
clc
xchg
or
mul
push
mov
out
inc
in
in
xor
lret
decl
sti
pop
mov
test
imull
mov
sbb
aas
mov
jg
call
cmc
push
xor
mov
mov
cmpsl
xchg
ficoms
imul
mov
aas
scas
pop
cli
mov
lds
mov
cltd
jp
jbe
decl
push
mov
pop
jne
inc
fwait
icebp
out
loope
std
mov
inc
dec
ds
mov
out
and
pusha
mov
mov
insl
jo
mov
ret
std
pushl
xchg
xlat
xchg
xor
aad
mov
jg
adc
mov
push
out
pop
out
or
xor
call
pushf
imul
cmp
add
shrl
ds
pop
aad
loopne
decl
aaa
movsl
pop
mov
jnp
push
xor
int
or
cmp
add
cmpsl
mov
sti
ret
lods
adc
loope
ficoml
mov
push
into
jge
ret
pop
sub
pop
imul
les
push
stos
daa
mov
push
orb
pop
jg
sbb
xchg
push
outsl
fdivl
iret
les
jmp
jmp
xor
call
popf
inc
mov
mov
ja
sub
inc
adc
in
ror
push
pop
pop
sbb
jp
addr16
add
jg
push
ret
pop
lock
test
dec
std
dec
lds
mov
sub
stc
or
jbe
jg
pop
insl
sub
ja
cmp
insl
int3
xor
jl
pop
das
gs
das
hlt
movsl
ljmp
std
mov
inc
in
mov
std
incl
sti
and
js
sbb
add
lock
xor
jmp
pop
mov
out
add
fistpll
push
clc
notb
lahf
fidivs
incl
add
add
out
pshufw
fwait
push
mov
pushl
clc
mov
shl
xchg
insb
xor
adc
cmp
movsb
sub
ljmp
sbb
and
lods
dec
or
sbb
outsb
xor
subb
out
cmp
mov
stos
fdivrl
sub
sbb
mov
dec
xchg
xor
sti
and
pushf
lret
sub
adc
leave
std
xchg
aas
fs
mov
sbb
lock
pop
xchg
sbb
fists
xchg
sbb
jg
jge
mov
xchg
push
jns
dec
mov
cmp
aaa
and
mov
push
mov
push
shlb
inc
mov
idiv
jmp
repz
xchg
xor
sub
adc
jbe
dec
scas
ja
call
cmp
pop
sub
insb
mov
push
andb
loopne
dec
fucomip
jmp
cld
mov
lea
pop
mov
imul
movsb
scas
jl
loop
ljmp
lcall
imulb
orb
imul
xchg
add
movsl
fidivs
lods
mov
mov
js
addr16
jg
incl
divb
out
or
xor
cmp
jmp
les
dec
mov
call
sub
sbb
mov
loopne
mov
js
int3
insb
imul
mov
cli
jmp
and
add
pop
out
xchg
std
pop
call
test
xchg
pop
ret
cmc
arpl
fldl
mov
add
inc
pop
std
ljmp
mov
cld
loopne
push
sub
daa
lahf
sub
daa
mov
xor
or
ljmp
xchg
and
dec
xor
loope
jo
aad
mov
lds
cwtl
mov
shll
call
int3
andb
inc
push
scas
mov
sbb
mov
imul
call
dec
push
adc
stos
ljmp
adc
stc
xor
cmpsl
add
incl
xchg
dec
pop
xor
lds
xor
lcall
stos
or
pop
ljmp
call
mov
rclb
fs
call
cmp
mov
mov
mull
std
jnp
pusha
lret
add
add
sbb
push
fistps
std
push
or
push
mov
fcoml
or
push
add
std
incl
jp
cli
add
dec
cmp
inc
xchg
call
scas
xor
pop
lds
push
cmp
out
test
pop
cmp
jge
xor
adc
mov
jg
push
sahf
push
mov
jge
mov
leave
push
dec
mov
test
sbb
cmc
dec
sub
adc
clc
fldt
adc
inc
movsl
mov
mov
jg
decl
imul
iret
jp
in
push
pop
movsl
lods
cmp
lods
mov
out
dec
cmp
pop
clc
push
push
loope
insb
shld
fistpl
jge
mov
repnz
fcomps
sub
xlat
sbb
popf
fwait
inc
dec
pushf
xchg
or
mov
aam
in
in
xlat
xchg
scas
push
out
xor
mov
sub
cmpsl
neg
push
mov
fbstp
push
lcall
jl
and
adc
cld
mull
sahf
xor
movsl
and
roll
and
inc
call
clc
shll
fstpt
and
pushl
lods
mov
loopne
mov
fisttpll
or
xor
jecxz
jecxz
pushl
mov
pop
jns
lret
cli
cmp
jae
int
adc
push
mov
stos
xor
sub
call
sbb
in
push
mov
lock
es
push
mov
xchg
jno
outsb
cmp
jb
xchg
xor
push
inc
imul
ret
cmpsb
mov
dec
lods
gs
push
addb
push
and
int3
outsb
cmp
pop
lcall
push
xchg
pop
sub
outsb
push
push
popa
mov
pusha
mov
clc
outsl
cmc
mov
xchg
pop
mov
outsb
fwait
out
call
ja
dec
inc
rcl
add
push
ret
mov
testb
push
xchg
mov
enter
add
push
xchg
rcl
add
lock
mov
es
jne
lret
xchg
pushl
jg
out
cld
mov
pop
int
mov
xor
dec
inc
ljmp
add
and
ds
hlt
xlat
cmpsl
mull
pushl
adc
lret
pop
out
je
xchg
jns
dec
sarl
jmp
cmp
inc
fmull
imul
call
aad
imulb
lcall
sbb
in
fsubrs
mov
fisttpl
sbb
call
mov
scas
lret
xor
adc
jae
sbb
movhps
cs
pop
push
in
cmp
or
mov
pushf
jmp
cmp
xor
out
push
cli
gs
dec
mov
inc
shll
scas
pop
mov
mov
push
push
decl
push
subb
cmp
inc
popf
aam
or
dec
pop
call
dec
dec
fcom
ds
in
js
int
or
add
loope
xor
inc
ret
in
fildll
dec
shlb
int
cmpsb
cmp
fwait
push
add
ss
decl
aaa
outsb
clc
pop
push
adc
sub
add
jmp
cmp
inc
arpl
add
mov
ja
add
imul
fcmovu
lods
test
bound
sbb
inc
lods
or
push
sub
loop
and
dec
mov
scas
orl
ss
push
push
dec
jae
out
adc
or
mov
insl
popa
jne
incl
les
jo
or
push
push
outsl
ja
push
inc
inc
xlat
push
gs
inc
mov
or
add
pop
xor
sbb
push
insb
dec
int
add
jne
call
out
xor
clc
pop
pop
add
or
fisubrl
mov
jbe
pop
xor
jae
daa
lea
jns
repnz
incl
dec
pop
popa
push
cmp
xor
push
inc
jbe
dec
xor
and
cwtl
push
test
fsts
inc
stos
js
push
lock
outsl
jb
adc
mov
fldt
std
mov
push
imul
fnstenv
or
jo
gs
gs
in
or
dec
sub
daa
sub
jns
adc
outsl
fstl
adc
sbb
cmp
insl
push
inc
jae
arpl
mov
inc
imul
jp
adc
push
jp
or
push
push
pop
imul
jp
mov
adc
fs
lret
fs
out
adc
push
and
invlpg
mov
lahf
and
inc
addb
add
push
mov
in
adc
emms
test
lcall
mov
stos
mov
iret
xchg
lock
mov
dec
fs
dec
adc
add
push
mulb
lds
cmp
lcall
inc
outsb
jne
inc
xchg
mov
sub
test
inc
lods
pop
dec
fsubl
add
mov
push
inc
insl
mov
mov
cld
inc
daa
outsl
jae
sbb
push
cli
jae
dec
repnz
sub
or
insb
and
insb
xor
inc
sbb
shlb
sbb
cmp
hlt
or
sub
fwait
adc
dec
fildll
mov
add
arpl
sub
dec
outsb
test
mov
loopne
outsl
mov
xchg
sub
push
or
jns
push
add
or
mov
es
je
xchg
sbbl
mov
out
mov
inc
jge
mov
fmull
cwtl
pand
aad
add
les
xor
bound
mov
je
sbb
inc
or
or
sub
imul
cmp
push
or
imul
test
out
adc
ret
dec
dec
adc
sbb
ret
jo
gs
mov
and
mov
je
cmpsb
cmp
adc
and
stos
dec
add
mov
or
cli
xor
das
adc
fwait
xor
adc
mov
outsl
pop
or
leave
pop
pop
rorb
or
into
xchg
cwtl
fistpll
pop
mov
fwait
pop
push
shl
adc
call
xorb
add
shll
ljmp
arpl
mov
icebp
dec
in
mov
icebp
dec
sbb
mov
mov
fs
jmp
pop
shrb
push
pop
xchg
mov
pop
js
js
xchg
xor
push
lahf
movsb
sub
orl
push
sub
sahf
xor
and
adc
cmp
mov
inc
or
or
pusha
xorb
cs
adc
inc
mov
lret
dec
sarb
add
add
sbb
ret
sub
jb
subb
ret
ds
pop
xlat
or
je
fldz
and
imul
push
push
adcl
jnp
or
adc
jp
inc
shrb
test
xchg
xor
ret
add
daa
xchg
outsb
test
imul
sbb
mov
je
or
nop
ja
orb
sbb
mov
and
inc
daa
gs
or
mov
cs
mov
jb
mov
xor
nop
inc
pusha
add
cld
mov
xor
add
adc
add
incl
add
add
add
add
call
int
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
sbb
inc
add
