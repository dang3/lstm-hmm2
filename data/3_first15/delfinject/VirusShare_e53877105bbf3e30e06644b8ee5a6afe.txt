xor
inc
ret
push
push
call
xor
push
call
cmpw
jne
mov
add
cmpl
jne
movzwl
cmp
je
cmp
je
mov
jmp
cmpl
jbe
xor
cmp
jmp
cmpl
jbe
xor
cmp
setne
mov
mov
push
call
pop
orl
orl
call
mov
mov
call
mov
mov
mov
mov
mov
call
call
cmp
jne
push
call
pop
call
push
push
call
push
call
mov
mov
lea
push
pushl
lea
push
lea
push
lea
push
call
add
mov
cmp
jge
push
call
pop
push
push
call
call
mov
mov
pushl
pushl
pushl
call
add
mov
mov
cmp
jne
push
call
call
jmp
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
mov
cmpl
jne
push
call
call
orl
mov
call
ret
jmp
jmp
cmpl
jne
jmp
push
push
pushl
call
add
ret
pushl
call
neg
sbb
neg
pop
dec
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
jmp
push
push
call
pop
pop
ret
xor
ret
int3
push
mov
push
mov
mov
lea
sub
push
push
push
mov
mov
push
mov
movl
mov
lea
mov
mov
lea
push
mov
call
add
mov
mov
addl
ret
jmp
jmp
add
ret
ret
push
xor
pop
ret
xchg
addl
xchg
ret
add
popl
push
push
pop
push
pop
push
xchg
add
pop
push
xchg
xchg
xor
xchg
push
xor
pop
xchg
popl
push
pushl
ret
jmp
ret
ret
push
push
push
push
push
push
push
push
push
push
push
push
call
add
pop
pop
pop
pop
pop
pop
pop
ret
push
xchg
add
ret
push
pop
ret
push
popl
ret
push
xchg
xchg
xchg
push
pop
push
xchg
add
mul
push
pop
push
pop
push
pop
add
add
ret
pop
push
xchg
ret
pop
push
xchg
ret
push
add
add
ret
push
pop
ret
add
push
mov
push
push
push
xor
push
mov
xchg
mov
push
push
call
push
push
call
call
push
call
push
push
push
push
call
push
push
call
push
push
push
push
call
push
push
push
call
push
push
push
push
call
pushl
pop
call
push
call
call
push
call
push
call
push
cmp
jae
ret
add
call
incl
fimuls
lea
push
push
push
mov
xor
mov
test
je
and
add
add
mov
test
jne
mov
mov
call
mov
add
add
andl
mov
pop
pop
pop
ret
push
push
push
push
add
mov
mov
movb
mov
call
mov
test
je
mov
mov
add
mov
lea
sub
cmp
jg
mov
sub
mov
sub
cmp
jge
lea
mov
sub
add
mov
call
jmp
lea
mov
sub
lea
call
mov
test
je
mov
sub
mov
call
mov
add
mov
add
cmp
jae
lea
sub
call
lea
mov
call
movb
mov
add
pop
pop
pop
pop
ret
lea
push
push
push
mov
mov
mov
mov
mov
add
sub
mov
cmp
jg
mov
test
jns
add
sar
mov
mov
dec
ljmp
xor
jns
jo
pop
int
lods
dec
roll
testl
jp
ss
sub
es
loop,pt
xor
and
jb
popf
mov
fidivrs
shll
out
pushf
xor
add
xor
cltd
jge
aad
pop
pop
into
and
push
sub
cmovno
nop
ret
into
mov
push
aam
in
push
inc
and
xchg
cmc
movsb
mov
mov
sahf
addr16
sti
cld
lret
add
cld
pop
cmp
sbbl
mov
stos
test
sarl
mov
xchg
cmp
scas
pop
das
mov
orl
xor
ret
xor
call
scas
fisubrl
dec
inc
xlat
mov
fstpt
fildll
in
mov
cld
pop
fcos
cltd
lods
je
insl
outsl
cmp
or
arpl
lea
push
daa
fwait
mov
call
imul
jp
std
adc
inc
cs
push
push
dec
std
addr16
test
jne
js
cli
inc
cmpb
sub
ret
dec
mov
add
xor
dec
or
xchg
mov
xor
inc
call
lret
mov
sbb
lret
cmp
inc
inc
orl
inc
stos
out
stc
mov
xor
xchg
sahf
inc
and
ljmp
test
lret
or
mov
adc
incb
adc
arpl
xchg
jmp
out
pusha
jbe
jmp
fists
mov
fsubl
xchg
sub
out
pop
js
mov
sbb
xchg
pop
add
scas
aas
xor
sub
xorb
push
mov
lods
scas
add
cwtl
xor
and
cld
xorl
in
fcoml
icebp
cltd
inc
in
xchg
xor
xor
mov
imul
inc
ljmp
pop
lret
lods
mov
imul
fldt
and
cmc
add
and
cmpsb
xor
mov
outsb
cs
data16
xchg
xchg
je
in
into
lds
scas
inc
inc
arpl
or
mov
or
push
pop
pop
mov
lea
scas
push
inc
add
out
popf
adc
mov
jae
sub
sbb
push
rorb
sub
or
mov
xchg
or
pop
lret
inc
enter
xorb
or
filds
jle
mov
lret
xchg
inc
mov
outsl
ljmp
or
ret
xor
xchg
xor
int3
cmp
repnz
jmp
outsb
pop
icebp
pop
imul
jmp
pop
addb
push
leave
add
lcall
xchg
mov
jp
psubsb
and
and
jno
mov
sarl
mov
test
clc
pop
cmp
fidivrl
in
jno
lret
ret
push
push
std
xor
push
mov
pop
movsb
pushf
sbb
mov
xchg
inc
dec
and
push
cmpsb
inc
xor
jmp
out
xchg
dec
dec
add
mov
push
xchg
sbb
push
paddq
mov
push
test
sub
out
mov
sbb
pop
cmpsb
test
mov
loope
adcb
das
es
clc
adc
sbb
lea
push
sub
jle
jno
sbb
movsl
sbb
adc
xor
mov
cmp
sar
xchg
cmp
xor
ret
add
out
pop
je
adc
fs
leave
add
lods
roll
xor
xor
gs
jle
and
push
dec
in
pop
xlat
ffreep
pop
mov
xchg
in
mov
fidivs
jmp
pushf
mov
push
jns
sub
insl
outsb
mov
mov
cs
aas
inc
lret
test
or
cli
push
jno
aad
cmp
dec
mov
jo
dec
dec
psadbw
ljmp
imul
sbb
rcll
movl
fs
cmp
les
mov
fldl
test
pop
mov
add
stos
sarl
mov
push
push
mov
mov
testb
pop
mov
orl
and
jle
inc
ret
mov
jmp
and
into
xor
and
lods
and
movzwl
shrl
shl
mov
sbb
push
dec
int
mov
mov
test
je
sbb
lret
and
cmp
cmp
adc
lea
lods
inc
or
add
mov
jle
into
inc
sbb
adc
call
stos
test
and
mov
pop
and
fidivs
lods
dec
into
and
adc
dec
push
daa
mov
es
mov
dec
out
xchg
mov
jl
popf
sub
push
ror
or
or
adc
scas
dec
jecxz
test
lahf
pop
inc
mov
sarb
mov
imul
hlt
adc
aaa
push
test
jbe
cld
scas
arpl
lahf
rolb
adc
je
cmp
pop
daa
sbb
adc
nop
push
jecxz
mov
sub
orl
bnd
mov
sub
insb
js
in
cwtl
stc
ret
hlt
add
lods
orb
js
out
inc
xor
sbb
jmp
push
pop
mov
xorl
mov
nop
mov
jae
add
jg
cltd
repz
mov
or
pop
adc
lret
dec
fnstsw
test
mov
in
push
bound
adc
and
xchg
int
adc
adc
rol
pop
xchg
mov
cmp
sub
jge
cltd
fdivrs
ja
mov
outsb
xlat
mov
push
mov
or
lea
loope
push
loope
gs
fistpll
push
dec
push
xchg
das
xor
pop
sub
jp
fnstcw
loop
ja,pn
mov
and
inc
incb
cmp
in
in
popa
stos
mov
push
mov
aaa
xchg
jge
test
xor
fs
kmovd
xor
pop
cs
mov
sub
and
xchg
repnz
sti
inc
inc
jne
insb
out
das
das
out
push
jns
and
scas
pop
xor
add
icebp
mov
xchg
aam
push
je
cmpsb
lret
mov
and
fdivs
scas
into
inc
sahf
test
pop
push
mov
xchg
jecxz
repnz
cmpsl
ljmp
pop
add
and
jmp
xchg
add
push
outsl
nop
pop
mov
data16
loop
ret
out
sub
mov
dec
mov
leave
add
xor
ret
in
jp
mov
or
jb
cmp
jne
lcall
test
mov
adcl
aas
jbe
rorl
inc
in
insb
repnz
or
outsb
jne
int3
daa
ret
pop
sbb
and
xchg
js
pop
cmpl
xor
cmp
iret
add
push
pop
and
inc
push
orl
mov
push
mov
stc
inc
xlat
jnp
jmp
icebp
ljmp
inc
and
out
lock
std
mov
sub
int3
pop
roll
adc
cmpsl
cmpsl
sub
sbb
mov
cmp
xchg
fistpl
fists
pop
inc
push
in
pop
or
aam
rorb
push
out
mov
pop
ret
out
into
mov
jge
pushf
adc
mov
in
jo
int
out
dec
pop
dec
pop
sub
divb
ds
mov
add
dec
mov
xchg
aaa
mov
dec
out
inc
jns
dec
stos
xchg
adc
dec
outsl
cmp
jl
iret
mov
test
arpl
idivb
das
jns
scas
mov
cmp
hlt
or
or
ret
popa
test
mov
inc
xchg
hlt
jnp
xlat
fisubs
adc
jbe
icebp
cltd
xchg
xor
sti
repnz
and
scas
and
xorb
daa
or
push
aas
int3
aam
mov
cld
xchg
mov
ficomps
push
inc
sbb
lret
mov
inc
fs
xor
and
scas
add
loopne
sbb
mov
in
mov
pop
dec
inc
addr16
iret
lcall
pop
mov
xorb
xchg
push
mov
cli
jno
aam
loopne
iret
rep
divl
sub
std
sbb
mov
pop
bound
stos
mov
inc
rcll
cs
jg
add
and
repz
xlat
push
lds
add
mov
loope
pop
inc
mov
jo
or
mov
jg
loop
call
mov
ret
dec
hlt
add
inc
cmp
call
push
or
ja
jno
dec
pop
or
dec
mov
jno
mov
push
cmp
mov
jp
aas
enter
cmp
dec
rol
inc
lds
ret
jmp
jbe
xchg
inc
imul
test
fwait
push
dec
mov
sti
push
mov
xlat
fsts
jg
pusha
lret
xchg
jb
repz
mov
in
ljmp
movsl
add
lcall
loope
fcoml
mov
add
jns,pn
ljmp
bound
scas
jg
iret
call
push
fnstsw
loopne
pop
sub
int3
outsl
lret
mov
inc
pop
push
xor
mov
popf
mov
push
adc
pop
sti
cmp
inc
scas
mov
bound
bound
xchg
push
loop
dec
and
in
mov
les
stos
cmpsb
rorb
call
pop
pop
cmp
mov
sti
inc
stos
add
lds
xchg
adc
push
leave
xor
stos
int3
flds
test
in
inc
out
cld
mov
sbbl
mov
arpl
ret
cld
mov
sub
in
mov
loopne
or
xor
test
or
xchg
les
movsb
std
cmpsl
adc
sub
jmp
and
adc
mov
aam
jmp
addps
in
loop
gs
mov
jge
xor
jbe
nop
push
repnz
inc
and
push
daa
xor
fwait
mov
jl
jbe
jmp
push
add
jb
add
mov
insl
jmp
xor
jmp
scas
loopne
movsb
jns
int3
popf
and
ret
push
add
aas
sub
in
in
shll
jae
ss
xor
gs
mov
xor
movsl
out
pop
stc
mov
test
leave
mov
daa
arpl
stc
mov
push
mov
mov
pop
push
lock
and
and
adc
dec
mov
lcall
in
pop
add
jbe
adc
scas
in
sbb
fstpt
xchg
dec
popf
sub
pushf
and
pop
fs
mov
jecxz
pop
stos
data16
mov
cli
lods
mov
stc
subb
mov
mov
mov
mov
sub
sub
ret
dec
or
out
gs
insb
insb
int
repz
pop
ljmp
adc
in
cltd
aaa
scas
pop
popa
insb
push
stos
pusha
lea
pop
pusha
lods
aad
cli
sub
in
sbb
dec
addr16
jne
jmp
adc
cmp
loope
stos
scas
dec
cli
and
std
pushf
lret
hlt
mov
cli
data16
in
dec
or
cmp
loopne
push
jae
xchg
out
mov
xor
mov
push
xchg
movsl
pop
and
sarb
add
repnz
lds
popa
stos
pushf
push
mov
add
push
imul
sbb
jbe
sahf
xorl
lods
fdivr
dec
jno
mov
int3
in
sub
xchg
iret
push
mov
push
repnz
push
notb
xor
sbb
js
je
xchg
sub
sarb
mov
xchg
repz
and
lcall
lods
lea
popa
aam
cmp
dec
pop
outsl
push
xor
fs
imul
adcb
dec
adc
inc
rolb
ret
sub
subb
push
sub
out
in
lahf
sub
mov
inc
xor
stos
inc
mov
es
and
dec
test
test
sub
jmp
mov
sbb
pop
or
cmp
jp
loopne
push
scas
push
test
cmpsb
pop
jg
mov
inc
mov
in
cmp
push
adc
xchg
movsl
xor
jb
dec
cmp
mov
push
push
push
add
hlt
pop
sahf
leave
ds
imul
outsl
stos
mov
daa
cltd
mov
xor
icebp
mov
repz
cmp
jnp
cmp
xor
cmpsl
dec
leave
pop
fldl
jge
dec
jns
cmc
mov
repz
sub
or
push
push
insl
xchg
fsubrs
xchg
mov
js
iret
scas
lret
sub
adc
fdivrl
insb
xlat
mov
test
in
add
adc
adc
jp
mov
addr16
push
dec
cmp
sbb
shl
rorb
sbb
mov
mov
je
movsb
xchg
iret
or
adc
push
cmp
cs
cmp
cld
jnp
lahf
cltd
stos
push
fld
and
movsb
loop
mov
adc
xchg
inc
jp
and
dec
jns
dec
sahf
jl
lret
mov
inc
dec
imul
push
cwtl
jmp
dec
or
icebp
xchg
movsb
mov
mov
inc
mov
rcr
inc
adc
adc
fadds
popf
mov
sub
fucomi
mov
aam
and
and
ja
ja
test
pushf
ret
pop
rcrb
cmp
mov
mov
outsl
scas
sub
sub
or
push
roll
push
aaa
sti
jnp
emms
movsb
lods
adc
rolb
pop
mov
push
xorl
data16
sub
dec
pushf
cmp
inc
sbb
je
stos
jge
mov
fisubrs
in
push
int3
adc
clc
pop
fstpt
stos
call
xor
inc
push
shlb
les
cmp
inc
xchg
cli
scas
pop
mov
push
or
cmp
shr
ds
mov
cmp
inc
pop
pop
mov
adc
daa
dec
fcoml
stos
and
loope
icebp
fdivrs
ficoms
fwait
mov
cmp
xchg
push
mov
aaa
sub
ja
repz
int3
bound
jno
push
fmul
cld
xchg
or
push
xor
mov
int3
mov
jmp
inc
lcall
ds
cld
mov
cmpsl
loopne
sub
push
inc
xchg
jnp
push
test
bound
out
test
std
pop
mov
mov
pusha
or
push
push
push
or
push
push
push
or
push
push
push
or
push
push
push
or
push
push
push
or
push
push
push
or
push
push
push
or
push
push
push
or
push
push
push
or
push
push
push
or
push
push
push
or
push
push
push
or
push
push
push
or
push
push
push
or
push
push
push
or
push
push
push
or
push
push
push
or
push
push
push
or
push
push
push
or
push
push
push
or
push
push
push
or
push
push
push
or
push
push
push
or
push
push
push
or
push
push
push
or
push
push
push
or
push
push
push
or
push
push
push
or
push
push
push
or
push
push
push
or
push
push
push
or
push
push
push
or
push
push
push
or
push
push
push
or
push
push
push
or
push
push
push
or
push
push
push
or
push
push
push
or
push
push
push
or
push
push
push
or
push
push
push
or
push
push
push
or
push
push
push
or
push
push
push
or
push
push
push
or
push
push
push
or
push
push
push
or
push
push
push
or
push
push
push
or
push
push
push
or
push
push
push
or
push
push
push
or
push
push
push
or
push
push
push
or
push
push
push
or
push
push
push
or
push
push
push
or
push
push
push
or
push
push
push
or
push
push
push
or
push
push
push
or
push
push
push
or
push
push
push
or
push
push
push
or
push
push
push
pop
pop
in
cmp
push
in
jne
cmpb
add
faddl
adc
mov
popf
aam
les
fnstsw
mov
pop
add
xor
push
mov
adc
mov
out
sbb
sar
test
insl
test
subb
adc
dec
mov
add
jp
lds
mov
popa
push
mov
scas
test
iret
xchg
cmp
imul
incb
or
dec
jecxz
jb
mov
pop
xchg
shr
dec
dec
imul
add
adc
pop
stos
xchg
cwtl
fadds
cmc
hlt
sbb
dec
sub
sbb
stos
cmp
sub
and
into
je
mov
mov
push
adc
push
ret
or
outsb
xchg
roll
xchg
push
lret
cmp
rcr
rorb
add
imul
mov
cwtl
push
adc
pop
mov
add
shrb
push
mov
mov
out
cmp
sbb
fimull
add
mov
jmp
out
out
or
in
popa
adc
or
and
out
add
adc
sbb
jmp
dec
das
loop
add
mov
pop
jb
jp
call
push
es
fldenv
icebp
add
lock
jne
adc
jbe
sub
sub
dec
lds
cmpb
lret
dec
push
mov
mov
pop
fmuls
sub
leave
jge
scas
popa
ss
in
enter
push
addr16
lcall
test
arpl
mov
call
and
sbbb
sbb
js
push
or
xchg
aaa
jecxz
sub
sbb
fisttpll
sbb
inc
mov
mov
fs
int
cltd
lds
popa
xor
lods
jecxz
xlat
xchg
xor
cld
cmp
sti
push
pop
sub
adc
pop
or
dec
divb
or
pusha
pop
outsl
mov
jne
sub
mov
cmp
loopne
adc
sub
outsb
jno
lcall
jbe
roll
cmc
dec
ror
je
cmp
mov
jae
fdivrp
dec
mov
imul
andb
inc
jae
and
ficoms
mov
ret
mov
xor
xchg
imulb
mov
lahf
inc
iret
jp
lock
sahf
mov
or
outsl
mov
sub
xchg
sbb
lret
mov
dec
shll
movsl
xor
std
xorb
mov
ja
orb
inc
daa
test
or
sbb
out
test
xlat
lret
push
dec
jne
push
cld
mov
cmp
insl
jge
sahf
jmp
scas
push
mov
cwtl
std
enter
sarb
mov
jae
xchg
outsb
push
cmp
push
outsl
jl
push
enter
fmull
test
cs
xchg
xchg
sub
and
pushf
daa
in
leave
test
fcmovne
push
add
push
sbb
fwait
pop
inc
lret
sahf
mov
push
aam
and
cs
jle
jecxz
dec
pop
aas
pop
sti
fsubl
stos
lret
or
xor
ss
xchg
mov
adc
cld
and
push
inc
adc
cmp
push
in
lock
sbb
imul
call
idivl
outsb
lock
xchg
das
sbb
jmp
aas
cmpsb
push
ds
and
mov
stos
aam
add
xchg
subb
mov
push
nop
mov
sub
lahf
push
add
dec
mov
shlb
jne
pop
dec
inc
clc
mov
jbe
xchg
adc
adc
out
push
mov
into
dec
fimull
cmpsl
cmpb
sbbb
cmp
int3
mov
nop
xchg
in
fsub
outsb
push
lods
fadds
test
dec
mov
cwtl
shrb
xorb
and
out
jmp
jno
mov
fldl
xor
inc
aam
pusha
movsb
mov
cwtl
mov
lret
and
cmp
mov
les
scas
pop
mov
rep
loopne
test
sbb
or
jg
push
out
pop
test
in
cmpsl
repz
pusha
mov
dec
mov
cs
inc
into
add
loopne
shll
sub
paddd
mov
cmp
sbb
ret
test
mov
test
fsubs
or
mov
out
dec
cli
pop
les
into
rol
mov
cli
inc
sahf
push
in
rcr
addr16
add
decb
or
or
sbb
cs
adc
test
movsl
in
insb
in
or
les
stos
jmp
insb
aad
inc
jle
sbb
pushf
mov
push
sbb
enter
pop
mov
sti
inc
sub
fmuls
xor
and
cltd
cli
fs
mov
xor
inc
fadds
push
push
movsb
pusha
xchg
lret
in
inc
fistl
push
push
arpl
mov
xor
jae
xchg
test
ss
shrb
mov
movb
loop
lret
rcrl
sub
dec
add
or
sbb
xor
cmp
xchg
mov
lods
xchg
stos
mov
fstl
pop
xchg
test
sbb
jae
mov
das
hlt
sbb
push
je
stos
test
cmc
adcl
fs
cmp
push
sti
aam
jl
dec
hlt
pop
jae
sbb
fadds
cwtl
mov
cmpsl
mov
mov
jns
cwtl
movl
sbb
pop
sbb
incb
cs
gs
shll
xchg
popf
and
sub
inc
jecxz
xchg
pusha
das
pop
gs
pusha
cld
hlt
xlat
dec
or
imul
adc
mov
and
addr16
mov
and
pop
sti
rcrb
xchg
int
and
test
xor
jge
cmpsl
xchg
adc
popa
adc
imul
mov
sbb
mov
ror
filds
dec
gs
in
xlat
push
test
filds
push
fstl
add
sub
mov
pop
test
cmpsb
inc
mov
loope
cmp
mov
iret
mov
mov
aam
lret
sub
stos
sahf
sbb
inc
imull
push
sbb
cmpsb
ds
mov
add
faddl
pop
sbb
pop
ret
lods
xor
lret
stc
cmp
pop
sbb
xchg
mov
ja
stos
push
xchg
ja
jg
adc
fimuls
mov
and
jl
repnz
push
and
and
mov
int
sub
mov
jns
xchg
xchg
jbe
incb
pop
aad
ss
xchg
add
cli
pop
mov
mov
xor
push
andb
ret
out
js
jae
jbe
mov
pop
sti
jne
sub
inc
iret
mov
xchg
cmpsb
push
inc
loop
in
push
mov
jmp
ljmp
and
mov
or
mov
xchg
nop
mov
pop
lock
and
xor
adc
cld
jp
cmp
adc
sub
adc
inc
imul
and
test
mov
incl
das
jmp
repz
vpmacsdd
jae
repnz
in
lret
mov
popf
adc
icebp
push
xchg
lret
dec
xchg
outsb
cmp
adc
mov
std
mov
jb
fidivrl
insb
fnsave
andb
rorb
mov
and
shll
jb
cmpsl
push
lret
lcall
add
jbe
pop
mov
mov
mov
inc
insb
jg
je
pop
inc
or
jne
jno
movsb
adc
mov
cmpsl
aad
ja
stos
shlb
dec
cmp
scas
xchg
testl
inc
lods
cmp
adc
adc
inc
lret
cmpsb
sub
lds
lcall
xchg
inc
shl
jo
ret
cmc
daa
or
movsb
rol
xchg
mov
xorl
js
popl
jnp
xlat
outsb
mov
lcall
pop
push
cmc
jg
xchg
jle
fistpll
or
sbb
mov
jl
test
stc
jnp
scas
jl
mov
mov
ficoms
cmp
ret
loop
aad
ret
and
out
pop
xor
sbb
fucomp
cmp
push
outsl
ss
dec
and
push
cmp
ret
rcr
add
cmp
add
aam
push
push
data16
in
push
jno
je
ds
aad
insl
sub
jae
pop
xor
xor
lea
sahf
adc
out
inc
dec
aam
std
cltd
mov
inc
or
repnz
iret
mov
adc
push
push
push
or
push
push
push
or
push
push
push
or
push
push
push
or
push
push
push
or
push
push
push
or
push
push
push
or
push
push
push
or
push
push
push
or
push
push
push
or
push
push
push
or
push
push
push
or
push
push
push
or
push
push
push
or
push
push
push
or
push
push
push
or
push
push
push
or
push
push
push
or
push
push
push
or
push
push
push
or
push
push
push
or
push
push
push
or
push
push
push
or
push
push
push
or
push
push
push
or
push
push
push
or
push
push
push
or
push
push
push
or
push
push
push
or
push
push
push
or
push
push
push
or
push
push
push
or
push
push
push
or
push
push
push
or
push
push
push
or
push
push
push
or
push
push
push
or
push
push
push
or
push
push
push
xchg
lods
xchg
nop
aas
or
push
ss
push
inc
dec
rcll
push
js
out
xor
cmp
pop
add
mov
popf
out
js
mov
daa
fistps
mov
std
push
adc
jl
cmp
dec
stos
pop
sub
mov
sbb
rcll
jg
ds
push
xor
aaa
jmp
sbb
lcall
push
dec
in
jle
adcb
stos
or
imul
mov
sbb
mov
jg
movsl
lcall
aam
jge
and
jmp
lret
cltd
pushf
lods
aad
rclb
pop
jmp
push
je
pushf
sbb
lahf
test
or
in
push
insl
push
sbb
test
cwtl
scas
push
or
test
std
pop
or
insb
rorb
out
fwait
adc
and
adc
adc
rol
pop
dec
jnp
or
mov
gs
pop
inc
xor
xor
inc
pop
addr16
push
leave
mov
adc
cmp
sub
jg
mov
jae
jns
pushf
inc
cmp
testb
pop
jmp
pop
dec
mov
test
pop
imul
add
cmpsl
and
es
cmp
xchg
pandn
loop
mov
mov
cmc
push
xchg
pop
push
fwait
and
pop
push
xchg
fiadds
shll
push
inc
fcompl
mov
cltd
arpl
add
inc
mov
repz
stc
ret
insb
adc
dec
sub
dec
push
lret
mov
and
mov
scas
in
add
sarb
inc
push
adcl
push
scas
insl
dec
pop
dec
fistl
push
dec
ljmp
mov
data16
cmp
inc
mov
or
mov
scas
test
xor
rcrb
cmp
pushf
sbb
aaa
lods
mov
in
cli
aad
outsb
pop
pushf
arpl
lret
aaa
mov
cli
test
mov
adc
in
mov
jp
gs
xchg
push
cs
rorl
mov
decb
add
pop
ffreep
xor
rclb
fstl
not
mov
leave
push
dec
mov
xor
loope
mov
xchg
dec
xor
rcrl
xchg
daa
push
jno
adc
nop
or
xor
ds
jg
and
jecxz
ror
adc
jmp
push
or
inc
xlat
decl
xor
test
test
cs
jns
sub
ljmp
leave
adc
push
dec
popf
push
xchg
imul
add
mov
xor
push
in
mov
in
xor
xchg
lcall
xchg
test
stos
xor
insb
fisttps
cltd
cmpsl
ss
pop
lods
jge
clc
bound
clc
cmp
lock
dec
inc
push
movsb
mov
fnstsw
jge
and
lahf
test
shrb
sbb
push
iret
adcl
imul
or
inc
cmp
idivl
sub
sub
int3
sbb
dec
clc
and
mov
div
data16
xor
inc
fdivl
js
inc
sbb
aaa
clc
mov
or
in
pop
in
outsl
jle
sbb
aad
je
test
subl
test
dec
mov
push
sbb
push
sbb
sub
dec
aad
inc
dec
jmpw
cs
sbb
lret
mov
incl
xor
mov
cwtl
movsb
mov
xor
mulb
shlb
lret
xchg
cs
xchg
sub
into
sub
dec
scas
xchg
out
es
sub
jmp
divb
pop
adc
cli
pop
insl
movd
push
cmpsb
pop
test
adc
push
popa
mov
xchg
lret
daa
sbb
cmp
ret
dec
push
lods
xchg
insb
popf
int3
and
ret
mov
fmuls
xor
xor
mov
push
movsb
test
in
aaa
mov
xchg
or
xchg
sti
dec
cmp
push
mov
lahf
shrl
jae
or
icebp
insb
cmp
test
clc
mov
shll
inc
xchg
jno
je
jg
cmc
add
sbb
push
hlt
sub
cmpsl
adc
dec
outsb
xlat
cmc
inc
cld
or
jl
pop
xchg
scas
pop
cmp
cmp
lods
shrl
pop
shll
out
jae
stos
inc
cmc
cmp
jmp
shll
xor
push
jo
dec
fucompp
sub
testl
popf
xchg
mov
push
cmp
jmp
mov
rorb
addr16
in
imul
dec
and
mov
push
int3
aad
testb
jae
xlat
add
cli
add
pop
fimull
mov
cmp
int3
das
mov
cmpsb
xor
lea
mov
jo
sbb
inc
mov
mov
inc
leave
sbb
sbb
mov
insl
and
push
push
into
fildl
xchg
dec
enter
cmp
push
in
aam
shrb
push
xlat
jecxz
bound
popf
hlt
xchg
jae
push
or
imul
cmp
cmp
cld
mov
dec
fistps
insb
push
mov
lods
fdivr
stos
dec
dec
dec
orl
push
lods
mov
es
dec
sahf
mov
xor
stos
mov
scas
push
jns
decb
packuswb
ret
push
aad
sub
xor
movsl
jecxz
jb
xor
int
outsl
enter
nop
aas
or
jno
test
add
cwtl
and
lods
inc
mov
out
adc
mov
ret
sub
sub
pushf
sbb
les
or
pop
cmp
outsb
iret
std
movsb
adc
popf
push
cmpsl
aaa
fcmovne
xorl
mov
cli
pusha
loope
mov
cmp
adc
xchg
test
sub
sarl
jb
daa
sbb
out
out
leave
icebp
xlat
xchg
testl
in
hlt
push
insb
jbe
adc
jmp
mov
cmp
sub
in
sub
icebp
imul
daa
jbe
mov
sbb
daa
xlat
jge
inc
popf
pop
fucomp
jg
inc
psubusw
div
movsl
pop
cmpsl
mov
lcall
test
push
outsl
loop
adc
je
lret
dec
test
mov
ss
inc
clc
and
outsb
aad
scas
pop
mov
cmpsl
cwtl
push
cli
cmpsb
xchg
lea
pop
sbb
movsb
std
nop
dec
out
mov
out
roll
pushf
push
jnp,pt
cmp
je
sbb
xchg
test
mov
xbegin
cltd
mov
adc
jge
xor
add
out
outsl
inc
adc
pusha
cli
add
or
test
fsts
pusha
out
inc
mov
rclb
loope
sbb
outsl
pop
je
ss
insl
cmp
sti
mov
mov
out
adc
in
pop
fs
repz
mov
cltd
adc
out
pop
inc
or
div
rcl
xchg
jo
jge
push
xor
xchg
nop
push
data16
mov
sarb
cmp
aas
push
pop
mov
push
cmp
push
jnp
ss
dec
pop
sub
sub
push
outsl
push
add
mov
jno
jge
adcb
in
imul
or
xchg
ds
or
sbb
into
push
mov
cmp
movsb
mov
insb
aad
jbe
fistps
into
or
jb
xlat
outsb
sbb
rclb
dec
std
fsubrs
test
or
enter
dec
jne
insb
cmp
sahf
pop
jnp
adc
pusha
out
inc
mov
call
int3
cmc
loope
adc
mov
sbb
test
mov
outsl
std
or
outsb
push
dec
xchg
mov
mov
xchg
inc
inc
and
pop
inc
or
div
rcl
sbb
test
out
stos
iret
or
enter
enter
and
fisttpl
cld
pop
aam
mov
mov
push
adc
out
adc
xorb
and
scas
jmp
mov
test
lcall
test
loop
push
mov
xor
fnstsw
dec
stos
mov
inc
cwtl
outsl
push
test
xchg
xchg
jnp
ret
and
std
push
orl
jp
inc
cmp
jp
push
push
dec
cmp
jbe
jbe
popa
in
sub
out
in
inc
lret
push
std
arpl
je
iret
addr16
push
test
pushf
les
es
mov
fists
mov
jb
mov
out
aas
inc
sbb
call
rcl
mov
inc
dec
cmc
fs
imul
mov
xchg
cmpsb
hlt
push
shrl
pop
sub
add
lea
jns
jo
hlt
mov
sbb
push
adc
add
pop
test
cwtl
ret
dec
push
idivl
fnsave
cmc
sbbb
loopne
push
mov
enter
es
mov
xor
pop
mov
int3
cli
rcl
jae
inc
movsb
add
ret
mov
mov
sbb
xchg
lahf
xchg
shrl
imul
xlat
lea
mov
jmp
lahf
fwait
test
inc
cs
aas
adc
cmc
insb
rolb
test
lods
out
dec
data16
jge
jo
rorb
inc
pop
cmpsb
jg
add
and
insl
mov
ret
int
in
pop
lea
stc
imul
dec
xchg
cli
lret
in
pop
push
fimuls
inc
or
inc
sbb
data16
mov
jb
loope
aaa
xor
sti
add
lcall
fcompl
leave
push
inc
rol
sti
jge
pusha
push
cmpsl
out
add
xlat
stos
lods
mov
ja
scas
or
add
sub
aas
adc
push
mov
hlt
cld
mov
sub
fisubrl
pop
or
add
daa
movsl
mov
sbb
jp
pop
mov
mov
mov
int3
lds
js
or
popf
adc
or
and
jae
test
nop
adc
test
mov
mov
cmp
dec
jmp
dec
les
mov
pop
xor
mov
mov
testl
loopne
mov
out
push
das
data16
adc
fs
js
cld
testb
ja
cwtl
cmp
inc
jmp
rol
pop
movsb
mov
stos
stc
pushf
clc
push
cmp
divb
idivb
and
cwtl
lahf
mov
sub
mov
movsl
iret
xchg
loope
pop
into
decb
mov
xchg
mov
call
das
cmp
mov
int3
pusha
lcall
jg
push
adc
aaa
pop
pop
sub
pusha
out
jnp
mov
lret
cmpsb
cwtl
subb
xchg
daa
cli
int3
mov
push
test
aas
add
es
lret
lret
cmp
arpl
push
psubsb
imul
sub
pop
cld
jp
outsb
sbb
movsb
xchg
or
testb
cmp
cmpsl
into
dec
pop
mov
arpl
rcr
dec
jg
lods
aaa
pop
jp
hlt
xor
mov
in
push
xor
add
loopne
ficompl
psllw
push
loope
dec
int3
pop
sti
mov
mov
arpl
leave
ret
popf
push
pop
leave
mov
mov
dec
leave
cltd
cmc
lahf
cld
xchg
ficomps
or
cli
sub
cmp
lods
daa
shlb
push
in
and
and
pop
cmp
push
aad
aam
pop
mov
fildl
pusha
js
shl
ja
shrl
cmp
dec
movsl
ja
sarb
sbb
in
and
push
hlt
mov
xor
ljmp
inc
insb
push
inc
mov
les
test
loopne
ja
in
loopew
add
and
rcl
mov
dec
mov
adc
pop
inc
bt
push
aam
adc
xchg
sbb
cmp
sbb
xchg
movsb
and
das
lods
mov
ret
and
in
mov
cmova
stos
sub
hlt
test
push
sub
pop
sbb
cmp
mov
push
fsubrl
cwtl
xor
or
scas
jno
sti
fnsave
xorl
call
adc
icebp
mov
lock
iret
shll
mov
cmp
or
dec
mov
mov
ljmp
xchg
nop
push
or
pop
jo
cmp
pop
pop
hlt
shrb
sbb
int
jle
cwtl
call
neg
loop
dec
hlt
and
movsl
add
aaa
sub
jg
out
subl
roll
fimuls
jecxz
cli
shlb
lods
jle
jge
lods
popf
pop
add
sarl
pop
xlat
mov
dec
pushf
sahf
ds
jle
int3
jns
cli
fcoml
mov
daa
xchg
inc
das
xlat
inc
ds
inc
dec
loop
fsubp
int
outsl
pop
dec
cmpb
data16
xchg
mov
std
cmp
dec
mov
sahf
enter
test
pop
out
cmp
cmp
sbb
outsl
mov
addb
jp
pop
and
out
push
adc
loopne
loope
fcomps
jge
mov
lods
outsl
fdivrl
repnz
fwait
or
adc
jmp
jle
jp
in
jmp
lahf
push
out
inc
cmpsl
movsl
push
and
dec
loopne
xchg
pop
jb,pn
jmp
adc
scas
cmp
in
ljmp
lcall
int3
xchg
enter
add
mov
and
cmc
jmp
and
fldt
or
lock
lahf
jbe
cmp
loopne
mov
push
and
out
je
pop
xor
push
out
int3
movsl
ja
dec
repnz
jnp
pusha
in
mov
movsb
shrb
jno
or
test
xor
js
loope
dec
ret
xchg
push
loope
aam
fisttpl
fs
std
cvtps2pi
jl
sbb
xchg
xchg
adc
push
cltd
add
dec
adc
xor
jecxz
push
mov
shlb
ds
mov
inc
mov
repz
xlat
movsb
test
mov
push
jno
movsl
xor
or
adc
pop
adc
mov
pop
pop
push
mov
add
leave
add
dec
lods
xor
mov
imul
dec
enter
pop
sub
in
fsts
dec
arpl
cld
jl
movsb
sbb
or
push
jge
jae
push
cmp
fildl
jb
fimull
inc
jb
fstpt
mov
xor
mov
cmp
imul
lahf
pop
lods
mov
mov
popf
cmp
and
mov
dec
jp
add
add
jne
mov
jo,pt
jg
push
cwtl
cs
call
jl
push
push
leave
loope
insb
pop
inc
call
shr
pop
mov
fcomps
cli
pop
lcall
xor
push
hlt
sub
icebp
mul
lods
lret
ds
adc
in
inc
xchg
mov
pop
inc
sahf
lcall
dec
insl
pushf
inc
mov
loop
cmp
jns
push
filds
jmp
add
cmovae
jmp
outsl
mov
mov
xor
fists
lods
add
jo
pop
sbb
sahf
jno
inc
pop
mov
jge
popf
jnp
fdivrl
ja
jno
inc
jle
lods
adc
insb
and
sbbb
mov
in
imul
dec
fcmovbe
push
addr16
mov
push
mov
push
push
push
mov
leave
xlat
popa
mov
sub
mov
jns
lahf
sarb
movsl
movsb
jecxz
or
mov
jmp
mov
xlat
jns
inc
cmp
iret
repz
lods
dec
push
loop
js
sbb
test
mov
rorb
sahf
or
data16
inc
inc
nop
subb
das
mov
mov
rcll
mov
mov
cltd
pusha
push
or
dec
js
jnp
hlt
adc
repz
scas
push
repz
stos
pop
xor
sub
out
inc
xchg
adc
loopne
add
add
push
sub
mov
int3
cmp
add
daa
rorl
sub
dec
les
imul
adc
sbb
fstpt
shrb
aaa
mov
mov
fs
sub
xchg
sub
aad
jp
mov
ret
test
cmp
insl
seto
xchg
test
test
jg
pop
gs
dec
mov
out
inc
daa
xor
js
jp
add
scas
xor
cwtl
pop
sysexit
jnp
clc
pop
or
pop
mov
pushf
movsb
pop
xchg
bnd
iret
scas
imul
movsl
in
inc
cmp
or
in
addr16
outsb
xchg
das
lret
mov
cmc
cmp
loopne
fs
adc
inc
sarl
adcl
aaa
ljmp
jb
mov
jge
add
bound
pop
cmp
shrl
sub
lock
lret
jne
repz
push
lahf
adc
ficoml
push
xor
adc
xchg
pop
data16
jecxz
xchg
je
cmp
cmp
lret
orl
lock
rcl
jne
sub
fists
cwtl
sbb
mov
xchg
scas
or
and
les
pusha
rolb
inc
push
cltd
fidivl
mov
mov
pop
mov
push
add
mov
add
mov
xchg
loopne
aam
cmpsl
test
ds
push
or
pop
dec
int3
shll
cltd
xor
sub
mov
popf
or
push
adc
jnp
push
jecxz
std
lahf
dec
rolb
ja
sub
popa
outsb
mov
add
sbb
scas
aad
cmpsl
aaa
xchg
stos
push
sub
popa
iret
mov
hlt
inc
and
stc
ror
test
adc
cmp
insb
mov
daa
insl
fadd
xor
or
pop
outsb
xchg
xor
loope
insb
stos
cmp
pop
imul
stc
pop
fldenv
xchg
movsl
aas
pop
mov
pop
jle,pn
push
sub
lcall
fstpl
lret
mov
repnz
sbb
xchg
fdivrs
push
aad
mov
mov
add
adc
xchg
std
mov
ds
in
xlat
adc
mov
push
mov
mov
adc
aas
ret
inc
mov
hlt
clc
inc
lea
dec
pop
xchg
add
ret
call
pop
ret
cmp
push
push
sub
or
sub
int3
sbb
sbb
xor
xor
add
add
aad
inc
clc
out
loop
xor
shlb
mov
out
sbb
jp
adc
mov
adc
mov
pop
fdivrp
sub
add
das
cmc
jg
outsb
xor
and
bound
jg
test
add
push
fnstenv
push
dec
or
stos
add
xlat
pop
jo
mov
mov
xchg
lcall
ficoms
or
scas
repz
sub
lret
xchg
push
cmpl
mov
push
loop
pop
and
mov
les
test
inc
clc
out
sbb
jae
fistpll
sbb
dec
pop
out
mov
sbb
xchg
xchg
inc
or
inc
arpl
or
mov
call
xlat
pusha
in
sub
adc
mov
shr
insl
retw
test
sub
xchg
scas
rcrl
sbbb
mov
insl
daa
push
enter
movsb
xor
push
call
ljmp
shrb
lock
mov
mov
mull
xor
push
pop
mov
push
mov
test
jmp
out
iret
jnp
pushf
pop
jecxz
xchg
mov
imul
add
xchg
call
sbb
and
in
adc
mov
loop
cmp
ss
pop
aad
mov
scas
aam
call
and
mov
mov
mov
in
call
mov
movsl
xchg
insl
mov
cltd
xor
push
xchg
bound
sbb
les
xchg
popa
cmp
in
inc
mov
pop
and
mov
fdiv
inc
xchg
and
pusha
sub
mov
mov
cmpsb
cmc
cmp
push
enter
addl
inc
jne
push
fdivrp
mov
mov
test
ds
dec
divb
repz
push
arpl
dec
push
out
push
adc
stos
bound
stos
outsl
mov
sbb
xchg
lret
lea
lahf
adc
sahf
and
and
mov
sbb
int3
xor
daa
rcr
mov
jae
adc
stc
pop
mov
or
push
jns
aam
aad
pushf
or
xor
fadd
sub
fldenv
push
ficomps
dec
frstor
push
sbbl
pop
ret
test
aad
push
iret
mov
inc
aas
inc
xchg
std
and
andl
outsb
sub
cld
pop
add
in
testb
mov
ficoml
fnstcw
inc
or
cli
imul
leave
jmp
push
ret
or
jl
fcmovne
into
mov
push
push
push
pop
loopne
push
pop
lea
add
xchg
addr16
jns
cltd
dec
push
jb
icebp
mov
scas
call
out
dec
dec
mov
jge
mov
push
incl
jbe
pop
add
aad
jmp
mov
xchg
push
sub
jmp
int
mov
adc
inc
and
jae
es
xchg
aam
adc
test
sub
or
movsb
mov
jp
add
scas
fbld
jbe
decl
pop
enter
sbb
call
mov
out
dec
xor
xor
fwait
movsl
pusha
inc
sub
inc
adc
inc
mov
lods
and
int3
inc
adc
mov
xor
xor
adc
negb
lahf
clc
cmp
out
imul
pop
imul
arpl
imul
das
push
aam
and
cmp
dec
jecxz
push
sahf
cmp
mov
mov
dec
in
movsb
cwtl
loopne
cli
push
mov
aam
es
daa
rorl
xchg
mov
mov
fnstcw
sar
xlat
inc
mov
xor
adc
aad
psraw
inc
lcall
sbb
shl
add
add
insb
test
test
and
cmp
scas
or
mov
xor
cs
loope
xchg
mov
sbb
dec
and
pusha
stos
inc
pop
aas
jno
pusha
dec
mov
push
sub
jmp
mov
lods
sahf
push
stos
dec
cmpsl
mov
dec
dec
jno
dec
aaa
cmpsb
xchg
loopne
dec
sub
dec
jb
je
adc
cli
bound
xor
and
stos
xchg
cmpb
das
jbe
in
jne
dec
pop
sub
push
jmp
stos
sbb
iret
or
sub
pushf
pop
pop
pop
sub
in
das
xor
and
adc
aaa
add
movsb
mov
cmp
rorl
push
adc
jg
cwtl
cmp
cmp
push
dec
out
js
negb
movsb
and
sbb
pop
popa
push
push
xor
mov
and
cmp
push
and
sub
sbb
es
dec
sbb
aad
decb
or
add
mov
pop
fisubrl
cs
enter
ja
loopne
repnz
in
adc
lahf
insl
jbe
add
mov
and
add
into
int3
mov
mov
fcompl
pusha
cs
ds
xchg
mov
scas
stos
xchg
mov
leave
inc
popf
stc
iret
jne
cmp
xchg
add
int
lret
xor
js
push
pop
gs
std
sub
jae
aaa
inc
fwait
stos
pop
enter
jns
aad
add
push
loope
mov
inc
pop
in
lcall
fdivl
adc
test
push
add
xor
cmp
out
leave
or
mov
mov
cmp
out
inc
out
in
cmp
xor
pop
fcmovb
mov
popf
cmp
pop
nop
pop
mov
mov
sahf
push
dec
bound
loope
arpl
push
pop
jne
ret
sub
push
out
loope
adc
not
fcmovne
test
jo
popl
cs
imul
int
ret
xor
pop
insl
mov
jp
sub
pop
adc
inc
pop
push
fildl
sub
adc
mov
js
sub
adc
add
jne
out
lcall
xor
pop
mov
and
pop
je
xor
test
je
sub
mov
mov
sub
stc
ret
lret
ja
cmp
push
cmc
imul
xchg
cmp
jp
pop
sub
shrl
and
add
pop
out
jl
or
sub
std
pop
xchg
loop
sbb
cmp
insb
fisttps
icebp
adc
mov
daa
lret
xchg
mov
adc
scas
pop
fidivrl
cmp
jbe
inc
out
js
pop
xor
pop
jne
test
rcl
jecxz
iret
sbb
lret
push
jbe
sub
pusha
mov
adcb
stos
push
mov
mov
outsb
mov
add
outsb
rcll
dec
inc
test
imul
cmp
gs
sar
test
push
pop
inc
mul
mov
cli
jne
in
cwtl
mov
mov
mov
fs
push
xor
adc
sub
inc
loopne
sub
jg
jns
pusha
pop
or
test
add
mov
push
pop
jne
inc
mov
sub
ficoml
daa
pop
push
xchg
inc
push
inc
mov
or
mov
int
pop
pop
mov
jno
mov
jns
jo
mov
cmp
jnp
das
les
add
cmc
in
mov
iret
cli
bound
jnp
pop
push
jns
outsb
lret
andb
push
in
mov
mov
push
decb
clc
or
mov
mov
cmp
xor
xchg
push
sbb
lods
sahf
ret
push
jg
sbb
mov
rcr
cmpsl
xchg
dec
sub
or
bound
and
data16
pop
jo
xor
sub
mov
dec
popf
in
lahf
sbbl
js
xor
inc
aas
dec
aam
es
stc
mov
out
pop
or
es
mov
mov
dec
cmp
mov
cmp
arpl
repz
sti
xchg
or
add
jne
push
pop
pop
outsb
in
notl
add
dec
ja
fisttpll
jbe
ds
xor
inc
push
adc
lods
call
lret
rolb
icebp
test
cwtl
gs
and
jae
aas
dec
inc
xor
adc
bnd
add
mov
add
mov
icebp
and
cmp
les
mov
mov
adc
cmpl
cld
mov
fs
popa
push
sbb
and
stos
pop
mov
pop
in
pop
jns
mov
mov
loopne
iret
cwtl
test
mov
pop
jne
sub
mov
rorb
fwait
negb
mov
jmp
fimull
adc
shlb
aas
repnz
adcb
cmpsb
les
gs
sub
xchg
inc
xor
push
lea
jb
cli
add
cld
fadd
xchg
int
arpl
sbb
dec
xor
or
imul
push
xchg
aam
aam
mov
mov
callw
sti
xchg
cmpsb
negb
mov
movsb
xchg
test
ja
push
out
or
jne
add
jbe
es
inc
gs
xor
sub
lret
push
cmp
push
push
movsb
std
pusha
enter
das
iret
xor
or
loop
sub
cmp
pop
sub
aad
cmp
dec
push
mov
sub
cli
popa
add
inc
lods
testb
push
cmp
jmp
mov
fisttps
dec
test
push
xchg
dec
adc
mov
fisttpll
shll
inc
mov
nop
aam
pop
je
shrb
ss
lcall
fmull
fisttpl
fwait
adc
in
inc
mov
scas
sub
test
in
out
lahf
sbb
or
or
js
shl
mov
jmp
inc
pop
nop
popa
fsubl
cs
mov
or
stos
xor
loop
test
add
dec
shlb
push
and
push
or
mov
inc
pop
adc
mov
ljmp
mov
bound
jg
fiadds
or
jno
pop
push
int3
stos
lods
lods
and
insb
mov
lahf
pusha
sub
movsl
ja
out
std
jp
xchg
movsb
push
and
jb
push
or
jl
push
std
sub
inc
call
out
add
mov
add
or
xor
pop
pop
test
mov
and
fcmovu
lock
mov
repz
in
and
sbb
fwait
pop
cmc
push
aad
leave
popf
push
xchg
outsb
mov
mov
mov
sub
sbb
jmp
rcrl
xor
repnz
cwtl
dec
addl
notl
xlat
mov
cmp
inc
ja
cwtl
mov
adc
mov
cmp
test
loop
stc
push
xor
insb
fisttps
pop
dec
ret
pop
mov
jnp
lret
insb
cmp
fnstcw
cmp
int3
mov
cmp
adc
lcall
pop
pop
into
jns
in
sbb
mov
or
mov
dec
scas
dec
and
cmp
gs
mov
sbb
fdivrp
fcoms
push
out
mov
jp
sbb
hlt
jne
sub
pop
lock
jbe
imul
out
repnz
pop
cmp
jae
insb
fdivrl
inc
and
xchg
mov
shrb
clc
sbb
in
push
sub
gs
sub
aas
rdpmc
negb
pop
push
push
sti
or
mov
ret
pop
daa
sbb
adc
mov
popf
jmp
popa
inc
mov
pop
sbb
sbb
push
jns
inc
lods
es
push
lcall
outsb
inc
fs
fidivs
and
cld
mov
repz
outsl
and
insl
jge,pt
pop
push
dec
pop
cmpsl
xchg
push
cmc
jle
fidivrs
jbe
lods
push
lcall
mov
push
add
les
pop
xchg
adc
add
bound
and
cmp
dec
jo
fninit
pop
fisubrl
mov
hlt
mov
fbld
xchg
mov
movsl
and
clc
mov
inc
cmp
mov
popf
add
adc
rorb
inc
push
rcrl
in
lods
fbld
fwait
cwtl
mov
aam
xor
lret
pop
movsl
mov
clc
push
outsl
repnz
adc
pop
daa
mov
lret
cmc
cli
jmp
xor
pop
lret
int
gs
clc
shlb
jle
pop
dec
push
mov
sub
daa
jl
aad
aas
popa
mov
test
test
bound
sub
popa
add
nop
in
mov
sbb
insb
lea
jl
rorb
imul
repnz
push
xor
ljmp
pop
jge
sub
mov
ja
jne
lock
pusha
pop
jmp
xacquire
jmp
cmpsl
xchg
fists
ret
shlb
xchg
aad
hlt
push
xlat
sub
sti
mov
sbb
lea
int
push
sbb
adc
icebp
dec
pop
add
loope
inc
outsb
repz
xorb
loopne
pop
xchg
pusha
fidivl
jg
mov
mov
xchg
mov
div
jne
dec
mov
lahf
inc
test
jmp
int
add
in
sarb
mov
xlat
adc
out
out
scas
out
and
push
cmp
sahf
jg,pn
sub
movsl
cmpb
or
mov
packuswb
add
cmp
rolb
call
sti
pop
out
out
fldt
mov
push
dec
sub
movsl
inc
push
jmp
imul
cmpsl
adc
sub
cmp
cltd
lods
mov
cmp
or
lods
test
pop
push
add
icebp
or
dec
and
ret
mov
mov
and
aas
push
jb
leave
jg
pop
xchg
add
iret
xor
shrl
adc
ds
in
push
int
jmp
arpl
sbb
mov
icebp
mov
shrb
mov
lcall
in
dec
pop
adc
or
mov
test
and
lret
rcll
sbb
and
xchg
mov
incb
outsb
frstor
pusha
xchg
mov
add
push
cli
lods
dec
pop
dec
lcall
adc
jmp
out
xor
push
les
dec
and
movsl
repnz
arpl
in
addr16
mov
out
adc
lcall
shlb
push
imul
or
test
cli
pop
ja
pushf
add
int3
movsb
push
sbb
jmp
fdivs
jae
idivl
gs
ficoml
adc
cmp
movsl
pop
imul
mov
sub
loop
bound
push
cmpb
sub
cmp
push
xchg
fisttps
or
jl
push
fs
pop
xchg
jns
push
test
or
xchg
xor
sub
ljmp
cmp
xchg
mov
mov
sti
mov
xor
pop
xor
mov
ficoms
mov
cli
jp
pause
push
sub
xor
out
adc
sahf
inc
xor
movsl
fisubs
lock
inc
mov
fcoms
mov
daa
aad
jae
mov
lds
cmpsb
xlat
xchg
das
mov
adc
clc
test
and
jae
pop
fbld
imul
pop
sbbb
mov
jecxz
cmp
out
push
repz
lods
xor
sub
in
or
lds
sbb
mov
push
pop
jno
imul
sub
pushf
repnz
iret
fcompl
out
pop
in
fisubrs
fstpl
int
in
dec
mov
push
movsb
daa
cmpb
mov
mov
sub
mov
fs
dec
cmp
out
and
xor
sbb
sti
or
push
mov
mov
divps
jge
sub
adc
or
mov
sub
outsl
push
sub
faddl
push
jb
xor
or
xchg
mov
dec
jns
ss
inc
fldcw
xor
bound
test
cmpsb
ret
mov
cs
push
push
pop
xchg
roll
test
mov
cwtl
mov
testl
or
int3
xchg
dec
addb
ss
bound
xor
or
jb
push
neg
push
mov
or
je
pop
sub
or
clc
mov
add
dec
mov
insb
aaa
mov
lds
ret
push
cltd
mov
adc
fisubs
sub
mov
mov
insl
test
pop
out
jl
push
mov
pop
sbb
mov
scas
ja
cmp
lods
jge
add
adcb
inc
jecxz
mov
idivl
sub
lods
pushf
pmaxsw
push
push
xchg
and
std
xor
mov
repz
adc
imul
jmp
mov
push
fstl
jp
mov
xchg
and
cmp
movsb
out
fcmovnb
stos
fistpl
lahf
cmpsb
mov
xchg
push
pusha
sbb
add
add
mov
cmpsb
fs
push
repz
movsl
dec
movsb
and
cmp
and
pushf
push
jl
pop
lret
test
sbb
add
or
mov
xchg
xchg
and
push
aas
mov
fistpll
bound
fistpl
cltd
test
cmp
out
sbb
mov
imul
sub
jo
adc
das
sahf
ret
scas
inc
dec
les
icebp
xor
sub
lods
out
inc
mov
jae
aaa
popf
mov
push
fnstenv
cmp
and
icebp
shll
mov
aas
mov
lea
in
lahf
mov
repz
mov
add
test
push
orb
xlat
filds
jo
mov
inc
sbb
ret
stc
test
mov
push
out
sub
inc
ficoms
jmp
loopne
loopne
pusha
dec
push
sbbl
push
rclb
outsb
arpl
or
mov
fcomps
and
cltd
lahf
cmpsb
sbb
dec
nop
mov
sti
jecxz
shrl
pop
mov
pop
add
popf
sub
push
ret
adc
mov
inc
loopne
mov
std
outsl
sub
adc
ffreep
sbb
scas
cmp
push
jmp
inc
out
push
sbb
je
inc
fldcw
inc
sbb
es
adc
mov
enter
mov
test
test
loopne
sarb
inc
lret
int
scas
icebp
pop
test
cmpl
ds
movsl
cmc
or
sahf
add
dec
lods
mov
dec
sub
les
test
xchg
cli
mov
or
dec
or
icebp
mov
pop
pop
hlt
cmp
mov
dec
pushf
iret
andl
popa
arpl
xor
test
dec
mov
dec
fidivrl
test
inc
gs
int3
lock
popa
inc
mov
pop
hlt
inc
orl
pusha
xchg
sub
ret
cmc
aad
mov
ljmp
xor
mov
mov
mov
inc
jge
call
rclb
mov
or
pop
cltd
je
adc
mov
mov
popf
jo
inc
call
add
inc
xchg
and
dec
lcall
adc
sub
pop
out
sahf
cmp
in
mov
add
hlt
dec
jmp
enter
mov
add
mov
dec
push
dec
or
mov
aad
inc
inc
inc
arpl
shrl
mov
dec
ret
stos
xchg
inc
ret
pop
test
xlat
leave
test
jno
cmp
in
stos
rcr
inc
jno
std
loop
inc
xor
je
call
mov
sub
cld
shlb
xchg
stos
mov
xchg
adc
stos
xchg
aad
sti
push
roll
iret
mov
or
add
loopne
lods
scas
push
cmp
andb
in
rorl
mov
movsb
pop
cmp
subl
cmp
sbb
les
aam
push
imulb
pop
imul
lock
lock
arpl
inc
xchg
aam
adc
mov
push
cmp
dec
lock
xchg
adc
in
movzwl
jg
lret
jnp
subb
loop
iret
iret
jle
movsl
lahf
and
stos
rolb
and
test
lret
je
pop
cmpsl
adc
fldt
jle
icebp
mov
stos
pop
outsl
aas
fmul
iret
aad
in
ds
pop
jmp
sti
pop
aaa
aam
dec
adc
mov
jge
adc
jo
fwait
mov
pushf
sub
sti
enter
jne
int3
pop
sbb
sahf
lea
inc
xchg
add
rcrb
mov
push
std
cmp
push
lret
sbb
xor
sbbl
pusha
loope
add
ds
fidivl
lods
jl
xor
sahf
fldcw
fimuls
lods
outsl
daa
aaa
add
dec
or
cmp
xchg
ss
xor
jp
movsl
cmp
scas
fnstsw
push
out
cmp
movsb
insb
lds
test
xchg
and
repz
and
ja
cmp
cs
incb
jno
cmp
push
cmpsl
mov
cmc
jp
dec
mov
xchg
push
sahf
pop
sahf
shl
add
sbb
sbb
daa
adc
lods
orl
sub
fucomi
mov
jge
adc
pop
jg
lret
dec
shl
add
dec
subb
sti
stc
andb
test
jecxz
or
or
sub
cld
or
add
adc
jp
pop
insl
adc
mov
rcrb
fisttpl
xorb
out
jb
sbb
push
fsubl
add
push
stos
jne
pop
int3
cmp
imull
hlt
mov
fimull
inc
pop
cmpsb
cmp
arpl
xchg
mov
cmp
lods
sahf
lahf
fwait
mov
std
add
inc
sub
push
adc
sbb
xchg
mov
push
in
lods
inc
jno
outsb
cmp
pop
enter
mov
jnp
cltd
je
incl
lock
into
sub
test
push
enter
dec
xor
sub
xorl
fs
stos
les
push
clc
dec
mov
pop
add
inc
popf
into
xchg
shl
loopne
and
inc
cld
test
cmp
jb
pop
pop
insb
faddl
pop
sbb
mov
or
add
lds
fsubrp
push
pushl
push
iret
arpl
scas
rcrl
cli
rclb
inc
arpl
jae
pop
sbb
insl
push
xlat
sbb
sub
push
push
mov
mov
aas
les
je
fdivrs
xchg
imul
add
jae
insl
add
sbb
hlt
adc
add
fs
jl
xorb
pop
imul
mov
inc
jmp
mov
cmp
sar
jg
popa
mov
leave
out
dec
inc
jns
fidivl
test
jl
pop
incl
push
sbb
iret
pop
pop
jle
and
jnp
xor
test
pop
mov
ja
repnz
xchg
sub
xchg
add
and
into
and
sbb
mov
jg
jl
sbbb
sahf
aad
and
mov
jno
movhps
fstpt
adc
fld
lea
mov
adc
das
or
in
cmpsl
outsb
call
sub
clc
dec
or
enter
fimull
xor
xor
lea
hlt
imul
fisttpll
pop
push
movsl
cmc
out
add
scas
test
add
cs
fldenvs
mov
fldcw
dec
and
and
mov
jecxz
les
in
incb
add
icebp
xchg
pop
or
orb
es
dec
int
arpl
outsb
sti
jne
movsb
outsb
pop
xchg
jp
cltd
clc
cmp
lret
out
sbb
add
pop
in
cltd
and
dec
std
in
xor
mov
in
inc
out
mov
xchg
cmpsb
jo
xchg
es
jne
inc
stc
imulb
mov
and
dec
mov
sbb
hlt
push
int3
arpl
in
aad
inc
addr16
sub
pop
push
cmp
add
lods
insl
sub
loopne
xor
push
mov
xchg
or
and
int
push
xlat
or
int
pop
mov
inc
push
lcall
xchg
push
ss
and
int
ljmp
xor
cmpb
scas
in
enter
mov
in
jnp
and
fwait
sub
rclb
jb
inc
mov
or
mov
fidivrl
mov
mov
daa
sbb
pop
adc
mov
fldenv
mov
jo
ret
cmc
jne
mov
adc
stc
and
sbb
xchg
mov
jge
aas
cmp
imul
cltd
scas
cmp
lds
pop
sbb
lea
inc
cmpsb
inc
jne
loopne
xor
push
mov
jecxz
mov
mov
jecxz
mov
jge
jle
or
ja
xor
lods
aad
mov
jmp
in
push
mov
insl
push
xor
out
push
in
lahf
rcll
mov
faddp
push
and
cli
push
sbb
in
xchg
adc
ficomps
push
xchg
mov
out
add
ficoml
and
xchg
imul
fisubrs
mov
mov
cltd
cmpsl
out
dec
fstpt
jmp
loop
mov
fldenv
jbe
sbb
ja
cmp
sbb
jnp
cs
push
push
dec
sub
and
xor
imul
mov
ss
aaa
sbb
sub
call
push
cmp
aas
pop
or
lds
xchg
inc
adc
push
pushl
push
cli
mov
insl
loope
jecxz
orl
dec
daa
pop
mov
gs
and
ss
xor
add
inc
aaa
jb
addl
inc
jmp
inc
sub
repz
push
jns
push
aad
test
xor
inc
icebp
dec
inc
mov
xchg
daa
xchg
cmp
xchg
lcall
mov
mov
sub
pop
daa
aam
mov
andb
lods
out
xchg
scas
in
andl
inc
mov
sti
ja
les
xorl
loopne
into
cwtl
mov
in
jp
testb
iret
aad
popl
imul
jbe
int
test
lds
cmp
adc
jne
jo
push
call
sbb
addr16
dec
fs
jnp
imul
loop
cmc
mov
and
add
jl
mov
decb
adc
in
scas
jae
inc
add
xchg
dec
jecxz
mov
adc
mov
add
add
out
mov
lahf
dec
pop
das
jo
and
lcall
popf
add
mov
mov
cmp
sarl
xor
aam
cmp
jg
add
mov
add
stc
insl
imul
jp
inc
inc
test
mov
pop
or
cmp
data16
or
add
ljmp
xchg
imull
fdivr
pop
aaa
outsl
xchg
sub
mov
cld
movl
daa
xchg
inc
mov
incb
xchg
repnz
rcll
pop
push
std
aad
mov
xor
rol
push
lret
cmp
add
xor
out
testl
mov
in
sub
push
in
lods
ret
cli
movsl
outsl
jnp
test
xchg
in
xor
mov
dec
cmpsl
arpl
add
pop
ds
cmp
mov
aas
push
push
adc
adc
enter
dec
mov
ret
outsl
push
inc
lret
push
fsubrp
cmc
cwtl
xor
pop
xchg
test
dec
test
ljmp
add
addr16
iret
jmp
loop
lret
cltd
das
movsb
movl
pusha
imul
push
aaa
addb
mov
cmpsb
in
lahf
cmp
out
mov
xchg
dec
adc
mov
xchg
mov
pop
mov
pop
cmp
test
sub
adc
pop
ljmp
cwtl
push
xchg
push
pop
dec
push
fs
pop
mov
shl
pop
cltd
movsl
push
pop
adc
cmp
sub
ss
lods
dec
mov
ja
sti
pushf
fimuls
out
mov
xor
aaa
jno
inc
xchg
jecxz
loop
add
into
imull
jo
cmc
mov
dec
sbb
arpl
mov
mov
cmp
push
cld
push
repz
or
lret
scas
call
mov
xchg
sub
pop
mov
scas
fsubrl
push
dec
mov
inc
pop
jnp
mov
pxor
pop
mov
jl
ss
cld
xor
loopne
inc
dec
dec
insl
std
sahf
jle
mov
dec
cmp
xor
pop
push
push
mov
inc
fdivrs
mov
lahf
jle
xor
shlb
fbstp
inc
sub
pop
shrl
repnz
clc
test
fists
jnp
sahf
push
add
popa
into
xor
xchg
mov
loopne
dec
jmp
pushf
or
sbb
popl
adc
xor
mov
loop
xchg
jle
inc
cmp
xor
in
setle
test
fildll
and
lock
mov
loope
popa
stc
mov
dec
pop
cmpsb
js
cwtl
or
jmp
push
ret
cltd
idivl
ljmp
mov
inc
push
adc
iret
movsl
xchg
insb
mov
dec
push
push
pushf
lods
insl
pop
cli
jbe
xchg
lahf
add
pop
in
mov
mov
iret
xchg
faddp
xor
xor
imul
scas
testl
xchg
jecxz
push
std
jge
inc
adc
cwtl
xchg
jb
das
push
fcomp
outsb
xchg
add
dec
loopne
cwtl
test
mov
jg
std
ret
mov
pop
adc
sub
sub
sahf
xchg
in
and
sub
ds
push
xchg
adc
sub
popa
jle
pop
push
mov
push
loope
inc
jae
sbb
lds
lock
push
cmp
loope
into
test
addr16
and
cmp
jp
popf
loope
lret
sbb
xchg
in
lret
fldcw
push
jmp
dec
mov
loopne
leave
sub
mov
mov
mov
jecxz
in
ja
cwtl
push
lds
xchg
sarb
imul
subb
sbb
hlt
pop
inc
std
or
or
cs
sbb
shrl
mov
cld
loope
loop
lods
rcrl
js
aam
or
ja
inc
sbb
out
rol
mov
push
xor
popf
ret
xor
ret
jne
call
fwait
cld
inc
jne
dec
popf
rclb
cmp
xchg
mov
push
inc
add
cld
inc
mov
or
dec
pop
mov
or
ret
cli
pop
sahf
cmpsl
das
push
sbb
adc
int3
xor
and
sub
nop
pop
pop
mov
dec
shl
pop
lods
int3
lcall
pop
mov
addb
stos
mov
jg
xchg
gs
and
sub
sahf
shll
mov
sub
pop
or
sbb
rcrb
or
xor
and
scas
fdivl
pop
scas
sbb
xchg
call
jge
dec
repz
sbb
mull
add
loope
movsb
jnp
iret
lcall
ss
cmpsb
aad
dec
dec
xor
gs
movsl
and
fisubl
adc
lahf
sbb
es
lods
jns
xchg
out
addr16
or
mov
pop
xor
mov
cmpsb
inc
jns
fisttpl
pop
adc
add
mov
jnp
sub
repz
cmp
pusha
in
xor
push
shrb
mov
add
das
xchg
pop
sbb
push
mov
xor
inc
sbb
xor
adc
sub
daa
xchg
lea
imulb
sbb
pop
movsl
stos
mov
stos
push
rcrl
test
mov
push
lahf
inc
lea
or
in
lret
rclb
repnz
pop
push
jne
xor
ljmp
js
jne
stos
aaa
test
movsl
popf
mov
data16
jl
xor
or
dec
clc
push
je
rorb
and
aas
loopne
adc
fmull
cltd
sub
fadd
fiaddl
test
xchg
aas
mov
and
xchg
and
jmp
imul
mov
adc
mov
fsts
cwtl
inc
cld
inc
leave
mov
decl
aas
dec
pop
push
inc
mov
je
cwtl
in
dec
lods
cwtl
gs
and
pop
mov
sti
push
call
xchg
andl
incb
sub
sti
jmp
rcrl
mov
mulb
lock
mov
jo
fdivp
aad
adc
iret
cmp
fisubrl
pop
in
jae
dec
and
mov
andl
fbld
pop
mov
mov
pop
xor
fs
jl
dec
sarb
or
jecxz
cmpsb
call
inc
inc
arpl
pop
cwtl
jno
mov
stc
shl
cmp
out
shrb
xor
adc
push
push
xor
pop
inc
loop
xor
stos
sbb
dec
frstor
add
mov
pop
pop
popf
pop
repz
inc
xor
fistpll
jne
int
mull
addr16
clc
aam
mov
pushf
lret
scas
iret
inc
movsb
dec
mov
cmc
xlat
stos
adc
int3
pop
xor
je
mov
dec
or
leave
mov
icebp
shlb
mov
sub
mov
push
je
jmp
xchg
jo
pop
div
cmp
push
testb
jge
pop
pop
mov
jge
push
stc
in
fstpt
sub
arpl
lcall
mov
push
sbb
insb
fsubs
or
and
mov
movl
aas
mov
fnstsw
and
sub
dec
inc
call
mov
push
jo
leave
stc
test
pushf
add
popa
repz
fidivrl
inc
std
cmp
push
cltd
inc
add
les
dec
cmp
xchg
lods
stos
pop
fdivl
xor
mov
push
dec
mov
loop
mov
push
fstpt
test
sarl
or
sub
lret
mov
jo
mov
mov
fs
call
xor
idivb
rcrl
or
xor
mov
cltd
xchg
mov
rol
fmull
adc
lods
lahf
daa
pop
cmpsl
mov
icebp
icebp
popf
dec
lea
cwtl
dec
jbe
hlt
dec
sub
push
ljmp
inc
or
sbb
and
jl
cmp
or
cld
inc
mov
jnp
mov
push
inc
lcall
rclb
fs
xchg
jge
xlat
pop
sbb
add
push
sub
xchg
adcw
mov
pushf
loopne
mul
add
xor
or
push
mov
repnz
jp
cmc
mov
xchg
mov
cmc
push
xor
mov
lret
inc
in
inc
rcll
in
cmp
xor
mov
cmpsb
std
notb
lcall
leave
jp
addl
mov
repz
adc
outsl
add
in
pop
pop
scas
scas
xchg
test
imul
pop
sub
adc
arpl
xor
cmc
mov
pop
jle
push
and
mov
sbb
add
outsb
leave
mov
jns
xchg
push
jg
ss
insl
in
push
je
insl
jns
mov
dec
fstpl
push
mov
repz
mov
enter
xchg
adc
jno
rclb
push
nop
adc
xor
loope
popa
nop
xor
out
aas
fdivrl
ret
pop
mov
mov
adc
push
shlw
push
dec
adc
test
je
dec
sub
sub
or
cmp
gs
shr
out
ret
jle
mov
lods
aas
jae
mov
roll
xchg
xor
das
jge
xorb
inc
aaa
rolb
fidivs
nop
fsub
jg
dec
insl
mov
xchg
nop
sub
jno
push
popf
jmp
arpl
xchg
sbb
cmp
sbb
cmpsb
repnz
pop
mov
sahf
jmp
jp
into
pop
push
bound
repz
mov
testb
jl
jns
clc
repnz
ss
xlat
push
out
test
adc
mov
loop
into
mov
push
push
fbld
mov
push
mov
adc
je
repz
mov
jno
dec
xchg
das
in
not
sub
lods
addl
sub
fwait
mov
jae
test
xor
ja
gs
test
lahf
pushf
popf
mov
pop
lahf
pop
addr16
mov
into
imul
pop
cmp
xchg
fwait
pop
lock
lret
xlat
push
dec
push
aam
fiadds
sub
ret
and
mov
lcall
aam
inc
cld
jle
dec
cli
rcr
out
scas
fmull
lods
mov
and
add
sahf
fwait
out
es
adc
js
mov
pushf
adc
mov
in
jge
push
dec
and
std
inc
add
shr
or
mov
in
into
mov
pop
mov
mov
pushf
mov
dec
mov
nop
and
add
call
and
ret
enter
push
and
add
xchg
std
mov
push
repnz
inc
jecxz
pop
outsl
inc
xchg
sbb
pop
aas
js
push
jecxz
mov
icebp
loopne
pop
cmp
or
sub
popa
lock
stos
and
mov
xor
out
sti
jae
xchg
fidivrs
cld
jg
pusha
or
sub
addr16
cmp
sub
arpl
and
push
push
push
push
xor
jb
sub
mov
in
in
lods
mov
jne
leave
mov
or
cli
mov
sbb
aas
loopne
out
orl
dec
sbb
test
pop
mov
sti
gs
pminsw
jg
es
cmp
fstl
notl
jmp
inc
in
dec
test
inc
push
adc
cmp
xlat
or
pop
mov
inc
cmp
addl
mov
stc
jo
and
push
xor
or
pushf
mov
cli
inc
test
jge
add
int3
dec
jge
pop
addr16
fs
outsb
fld
sbb
call
or
fmuls
inc
gs
lret
adc
inc
in
jne
push
mov
add
in
push
mov
sub
fs
aas
shrb
push
fimull
fwait
cmpsl
rcr
and
jo
loopne
lahf
fidivl
sbb
dec
cmpl
dec
jmp
test
movsb
lea
pop
mov
adc
mov
adc
mov
pop
cmp
mov
int3
jmp
mov
pop
dec
lret
jb
test
xchg
pusha
sub
dec
test
mov
ljmp
aaa
xchg
loop
inc
fldl
lcall
ljmp
add
movsb
cmpsl
leave
and
inc
shll
das
inc
mov
jl
cmp
bound
jge
sbb
cwtl
idivb
fdivrl
call
rcrl
insb
inc
push
pusha
mov
dec
or
shrb
nop
mov
mov
jmp
ds
push
stos
or
lea
xor
fcoms
dec
mov
and
js
sbb
scas
cmc
cltd
test
push
inc
pop
add
add
xchg
cmp
popf
movsl
adc
fistl
stc
int
test
mov
mov
inc
or
push
xor
jae
mov
xchg
mov
jmp
ljmp
inc
add
bswap
scas
xchg
scas
push
jg
sub
push
aas
filds
std
pushl
or
sti
pop
adc
adc
jmp
stos
cmp
loopne
out
ret
or
insb
inc
das
jo
je,pn
xor
outsb
sti
mov
pop
enter
mov
xchg
test
mov
fsubrs
xchg
in
aad
cmp
dec
sahf
out
dec
fwait
scas
daa
data16
pop
enter
mov
dec
add
jg
cmp
mov
ljmp
sbb
leave
data16
clc
icebp
adc
ss
pop
mov
or
and
out
inc
sub
mov
lahf
clc
scas
jle
add
mov
movsl
out
loop
movsb
pop
mul
mov
xchg
and
xchg
pop
test
ret
icebp
lahf
push
mov
pop
dec
mov
and
pop
repz
add
pushf
jl
xlat
setnp
rep
stc
arpl
ss
lret
push
shl
cwtl
mov
jmp
inc
out
sbb
sub
mov
iret
add
mov
jne
imul
movsb
sbb
sbb
dec
lea
lods
adc
fwait
std
jp
xor
sti
fcomp
ret
pusha
into
ss
out
iret
or
scas
add
aam
lods
mov
loop
call
inc
mov
xor
out
xor
negl
scas
dec
shlb
mov
mov
ljmp
incl
clc
pop
jmp
push
xchg
mov
pop
inc
in
mov
test
imul
pusha
sbb
insb
gs
mov
sub
and
adc
pop
sbb
dec
fdivl
xchg
lods
mov
pop
mov
sbbl
xchg
movnti
and
cmpsl
shrb
pusha
mov
in
xchg
mov
out
aam
or
inc
cmpsb
pusha
add
ret
scas
in
jnp
jle
std
xor
jmp
sub
out
fidivrs
dec
fcmovbe
jae
mov
mov
cs
loop
lds
push
loope
and
cmp
fsubs
pop
xchg
dec
sub
aad
push
or
pop
mov
or
je
cmp
into
lods
in
sbb
call
sti
jmp
out
push
dec
in
outsl
mov
mov
jbe
xchg
and
outsl
inc
sbb
addb
or
jns
iret
pop
movsl
sbb
jne
cmp
in
test
cmp
ljmp
daa
or
mov
jg
jmp
add
xor
cmp
filds
pop
es
mov
pmullw
push
aas
pop
cli
lea
push
loopne
lock
fnstsw
inc
sub
fisttpl
jnp
gs
das
std
std
in
or
push
sub
enter
lret
aaa
in
popf
into
test
insb
fildl
adc
pop
dec
movsb
add
ljmp
mov
scas
in
ljmp
out
mov
int3
daa
adc
sub
ss
pop
ljmp
inc
icebp
push
jnp
push
bswap
mov
xchg
add
push
pop
aaa
mov
insb
mov
data16
push
lret
dec
pusha
nop
push
sub
cwtl
loope
add
adc
sarl
xchg
cmc
mov
inc
pop
pop
push
xchg
pop
loop
incb
dec
jle
mov
sbb
das
mov
or
jmp
xlat
mov
jl
mov
mov
mov
cld
mov
xchg
ljmp
cmpsb
sub
adc
pop
stc
cmp
and
sahf
jno
stc
push
add
movsb
int
imul
xchg
xchg
scas
imul
cmpsb
fs
xchg
std
test
les
sub
sti
jno
test
and
pop
sbb
push
sti
jecxz
daa
dec
add
dec
lods
aad
out
push
sbb
mov
sub
fwait
scas
lods
fwait
scas
pusha
rcr
dec
sbb
xchg
dec
add
mov
push
addr16
sbbl
mov
pop
mov
push
cmp
fldcw
pop
sbb
repnz
in
pop
push
lcall
mov
sti
jmp
ret
ror
daa
xchg
jl
or
aad
mov
inc
mov
xchg
xor
and
mov
jns
shlb
pop
sub
pushf
pop
jp
jmpw
rclb
xchg
mov
cmp
fstpl
insl
dec
in
popa
jmp
pop
jb
sbb
in
jl
rorl
sbb
mov
pop
push
pop
ret
gs
xor
adc
loopne
pop
imul
fwait
scas
lds
push
std
cwtl
mov
ret
mov
movntps
xorl
das
push
lods
pop
jb
out
in
faddl
cmp
aas
rcl
mov
jns
bound
cmpsl
in
cmp
movsb
mov
imul
ss
xor
mov
int3
imul
mov
sub
in
push
repnz
sbb
inc
mov
push
adc
pop
lock
loopne
shlb
pop
xor
dec
fidivrl
pop
scas
ja
xor
sahf
insb
inc
jnp
cmp
test
xlat
sbb
sbb
inc
lcall
in
shll
and
pushf
lret
stos
adc
mov
aam
fsubrp
rolb
pop
lods
mov
sahf
sbb
arpl
aaa
mov
ja
mov
add
jge
push
loope
cltd
aaa
int
xchg
lods
ret
sbb
in
pop
data16
fadds
into
in
leave
xchg
in
inc
es
ret
mov
push
insb
dec
adc
adc
jno
cmp
mov
loopne,pn
fcoml
jmp
xchg
sbb
mov
out
or
and
scas
pushf
ja
pop
inc
sbb
fstl
jae
fidivrs
mov
outsl
je
sbb
lods
out
or
mov
sub
cmpsb
jp
cmpsb
out
xlat
rorl
add
stos
adc
mov
sub
jb
inc
xor
lret
popf
in
jp
lock
daa
dec
pop
fsub
sbb
out
dec
sbb
xor
push
rcrb
shrb
sub
pusha
push
or
lret
js
add
cs
add
dec
repnz
jb
xorb
add
mov
test
addr16
data16
add
xchg
xchg
es
decl
mov
aaa
adc
mov
pop
adc
imul
jmp
lret
mov
in
bound
xor
test
divb
cwtl
mov
inc
es
fbstp
push
mov
mov
fwait
adc
push
cmpl
inc
test
xchg
nop
in
imul
stc
lea
gs
inc
mov
out
push
lcall
add
mov
cmpsb
popa
cmp
lock
stos
insb
inc
cs
pop
imul
jo
sbb
sbb
xchg
jno
das
out
das
rcrb
imul
cmp
add
rorl
and
mov
in
xchg
gs
mov
xor
pop
cltd
mov
inc
insl
add
mov
xor
aas
leave
loopne
test
sti
aaa
mov
fcmovnbe
jno
mov
mov
repnz
mov
dec
nop
pop
sub
shrb
or
xor
mov
clc
push
add
in
int
add
jnp
call
and
cvtpi2ps
in
mov
dec
mov
inc
and
out
lods
fstl
int3
mov
sbb
mov
sub
jge
sbb
push
jnp
mov
sarb
sub
fsub
in
bound
push
jmp
dec
fstl
aas
jb
mov
popf
test
push
and
aam
fwait
rolb
xchg
divb
gs
adc
loopne
gs
lds
int
xor
fsubs
pop
mov
mov
pop
rcr
loope
movsl
jbe
gs
shrb
iret
out
clc
adc
leave
movsb
dec
pusha
scas
mov
push
add
insl
jecxz
ss
test
decb
mov
addr16
mov
mov
shrb
sbb
mov
mov
mov
cs
or
jnp
jle
ja
movsb
or
lret
jno
xchg
push
lock
jge
xor
dec
jb
add
sbb
sub
test
sub
cmpsb
mov
rolb
lret
dec
xchg
push
test
les
mov
dec
clc
clc
sub
sub
push
ret
shrl
xchg
xchg
push
bound
and
stc
ljmp
sbb
lret
xchg
adc
or
or
mov
hlt
cmp
inc
cmp
in
arpl
lods
pop
jl
xor
in
std
negl
fimuls
ja
pushf
repz
jecxz
inc
fs
push
nop
dec
sbb
adc
xchg
loope
idivl
aam
repz
adc
out
add
jnp
movsl
int3
popf
fwait
daa
xchg
jno
xchg
sbb
sbb
test
scas
mov
std
cmp
stos
std
lea
das
or
gs
leave
gs
mov
inc
mov
daa
mov
fadd
nop
cmp
andl
imul
stc
in
cld
leave
addl
inc
xorb
xchg
jo
xchg
daa
inc
inc
push
jo
inc
inc
jae
stc
lods
fwait
mov
out
enter
lahf
mov
je
pop
cld
xchg
add
add
xor
movsl
mov
scas
and
inc
push
ljmp
int3
adc
mov
nop
xchg
dec
sbb
mov
repnz
sbb
cmpsb
ja
into
nop
push
js
push
inc
pop
xchg
cltd
stos
cs
pusha
into
jb
fdivrs
rorl
and
push
inc
or
lock
dec
mov
sbb
cli
cmp
cmp
mov
and
aad
add
jg
jb
popf
mov
cmp
pushf
aaa
jne
mov
int3
sbb
adc
and
pushf
sti
pop
mov
negl
hlt
mov
or
pop
mov
imul
push
iret
xor
enter
mov
pop
dec
push
popf
in
fmuls
icebp
enter
xchg
icebp
xchg
aas
aad
subl
bound
hlt
cltd
cmc
xchg
cmp
push
scas
int
push
stos
stos
lea
cwtl
lea
pop
mov
mov
xchg
cld
jl
dec
push
loopne
inc
loop
ljmp
sub
jne
add
loopne
pop
aas
mov
js
out
pushf
faddp
loop
or
xor
cmp
ret
filds
push
inc
fdivrs
jecxz
je
pop
or
jae
out
jle
sub
ficompl
dec
mov
add
clc
mov
std
iret
ja
es
pop
shlb
outsb
xchg
popl
jo
jb
fisubrs
mov
jecxz
pop
mov
cltd
inc
inc
addr16
popf
cmpsl
pop
pop
aad
and
mov
mov
sahf
jns
pop
ljmp
sub
sbb
repz
mov
cmpsl
dec
adc
mov
sub
mov
ds
ror
fwait
sub
xchg
or
jb
ret
mov
outsb
or
stc
or
cmp
cli
stos
fsubrl
in
pop
push
insl
loope
mov
sarl
cs
ret
inc
pop
aad
and
aam
rclb
lcall
xor
adc
push
cmp
push
mov
clc
stos
jg
add
rclb
int3
in
rclb
and
mov
pop
or
and
inc
clc
sbb
aas
cmpsb
ret
shl
mov
adc
imul
xorb
mov
mov
jmp
pop
xor
and
test
xchg
lahf
mov
ds
ljmp
aam
xor
fwait
icebp
shlb
mov
sbb
sahf
fsubr
ljmp
and
push
ja
test
mov
push
loopne
pop
mov
popa
pop
js
mov
sti
test
out
mov
sbb
jne
fsubl
lods
ret
stc
insl
mov
inc
sbb
rep
jnp
scas
addr16
int3
sbb
popf
jns
movsl
loopne
and
lods
std
les
dec
bound
cli
fs
xchg
xchg
shlb
jg
adc
jmp
mov
out
mov
subl
rcl
jno
loop
rolb
std
jb
mov
sbb
cmp
divb
sbbb
cs
cmp
inc
imul
mov
filds
pop
fmuls
add
sub
adc
jbe
or
cwtl
xchg
mov
ret
jl
test
sub
mov
idivb
mov
sbb
adc
test
cld
imul
xchg
lods
adcl
fcmove
fmull
push
scas
and
xchg
std
xor
jecxz
adc
andb
or
bound
push
dec
or
sub
in
pop
pop
es
stc
loopne
addr16
mov
push
xor
mov
mov
mov
outsl
add
mov
sbb
mov
cmpsb
adc
mov
push
and
push
mov
lock
adc
movsb
sub
insb
pop
jb
dec
push
loopne
popa
rorl
xor
or
xchg
imul
mov
mov
mov
mov
rcll
mov
add
jae
xchg
cmp
push
test
adc
call
and
and
sar
dec
jbe
jmp
pop
jge
sub
mov
or
pop
ss
jg
test
out
inc
cmp
inc
mov
iret
fistl
out
arpl
add
scas
imul
pop
mov
dec
lret
movsb
fsubr
int
mov
rclb
push
aad
inc
xchg
inc
outsb
cmpsl
sahf
cwtl
mov
sub
inc
test
inc
stc
mov
or
imul
loop
and
test
push
mov
mov
xor
sbb
push
mov
rclb
add
js
adc
xor
sub
lret
xor
xor
shrb
xor
pushf
dec
lahf
movsb
es
cmpsl
in
repz
out
das
dec
enter
ja
lcall
sbb
adc
scas
loopne
lock
js
pusha
and
mov
push
cmc
lret
jbe
or
ljmp
ret
fnstenv
mov
addb
push
adc
ja
repz
enter
icebp
and
xor
mov
arpl
adc
fdivr
add
pop
jae
roll
sahf
iret
xor
vpsrlq
out
pop
pop
inc
cmp
outsb
loopne
push
mov
lea
out
pop
daa
mov
lcall
dec
and
cs
aas
pop
sti
inc
test
adc
icebp
xor
dec
push
cmpsb
stc
out
push
dec
hlt
aam
leave
or
or
push
pusha
fdivrl
sbb
and
sti
je
inc
in
cmp
clc
push
cmpsl
in
pop
xchg
add
inc
push
mov
mov
jge
popa
data16
sbb
mov
xchg
and
cld
pop
adc
inc
mov
or
mov
mov
cs
push
test
add
out
daa
jno
sub
jecxz
lret
jnp
gs
int
aas
xchg
or
sbb
mov
inc
push
pop
cltd
mov
dec
out
fstpt
cli
xchg
aam
mov
insl
mov
sub
icebp
jg
cmp
cmp
push
cwtl
lret
pop
sub
shl
pusha
fsubs
sub
xchg
jge
jae
cmc
lods
jp
jnp
sbb
cmp
add
pop
fisttpll
or
and
pop
mov
stos
test
xchg
out
daa
sub
idivb
testl
mov
push
push
int
xorl
mov
push
sub
aas
mov
mov
jge
and
inc
dec
call
pop
iret
incb
adc
aad
push
cmc
subb
jae
push
jg,pt
or
mov
sub
inc
dec
insb
ret
add
sahf
int3
add
push
fmuls
popa
add
cli
popa
icebp
into
movsl
add
cmp
push
repnz
loope
sbb
mov
dec
stos
subl
adc
sbb
fcmovne
push
cmp
xchg
inc
sbb
in
loope
xor
insb
adc
pop
sub
mov
fcmovu
adc
shll
jecxz
sbb
incb
pop
mov
adc
hlt
mov
add
fisttpl
aad
jg
mov
shll
mov
jecxz
aad
mov
inc
mov
dec
movsl
cmc
pop
jnp
test
shr
push
pop
jl
lahf
mov
or
sub
lea
stos
pushf
mov
push
dec
inc
or
or
adc
cmpb
ficomps
into
xchg
fbstp
cli
in
push
hlt
enter
outsb
mov
cltd
inc
clc
loopne
ret
pop
xlat
aam
pop
mov
out
or
fidivrl
jg
jb
jnp
inc
icebp
lock
arpl
hlt
add
pop
mov
sub
aaa
int
inc
roll
sub
inc
dec
jb
negl
xchg
jo
iret
imul
call
mov
cmp
in
in
in
dec
inc
xchg
call
loopne
xchg
ja
jmp
mov
add
or
sub
push
fmull
add
fnstenv
repz
js
pop
mov
jle
xchg
add
pop
pop
test
test
imull
je
sbb
jbe
or
jbe
jbe
pop
and
push
insl
fiaddl
sbb
fildl
push
inc
insb
shlb
icebp
dec
mov
testb
stc
push
ret
stos
mov
xchg
push
mov
outsl
sarb
xor
dec
pop
pop
mov
lret
mov
in
pop
lods
rorl
pop
movsl
stos
fildll
pop
jmp
test
cmp
jns
pop
icebp
adc
lret
jle
in
mov
pusha
cmp
xor
cmp
xlat
aam
cltd
push
mov
dec
fwait
mov
movsl
das
push
add
jg
mov
fimuls
or
jle
jl
rcrl
movsb
outsb
sbb
dec
inc
test
lea
xchg
imul
jmp
mov
cs
mov
jmp
lret
xchg
or
outsb
sahf
and
jbe
lods
dec
jl
cmc
cwtl
cmc
test
adc
aam
daa
dec
popa
lahf
mov
inc
mov
bound
jb
xor
cmpl
jle
into
popf
mov
push
inc
adc
arpl
adc
push
sti
popa
stos
push
xchg
cmp
cwtl
pop
jnp
mov
mov
fs
aas
stos
in
testl
pop
mov
xor
aam
mov
lea
mov
push
ret
sbb
jbe
add
mov
movsl
jecxz
cmp
mov
js
xor
push
mov
lcall
icebp
popa
enter
mov
stos
dec
nop
andl
ljmp
ficoml
adc
leave
push
sub
aad
push
jnp
loop
mov
jae
xchg
mov
mov
in
std
push
inc
call
dec
push
pop
fs
mov
ret
jmp
dec
enter
mov
push
and
loopne
jb
pop
sbb
inc
adc
pop
xor
sar
xchg
adc
cmp
popf
mov
pop
jo
fmul
mov
in
xor
cli
mov
inc
and
scas
mov
add
cwtl
shrb
add
imul
in
gs
repnz
jbe
iret
xchg
cmc
push
and
loop
add
add
sbb
mov
fisubrl
popf
pop
cltd
sbb
add
dec
fistpl
fdivs
daa
cltd
push
mov
pop
xor
add
jo
sbb
sti
add
and
cli
repnz
inc
inc
or
jecxz
sbb
pop
cli
scas
movsl
imul
jne
mov
mov
mov
lea
inc
dec
xlat
push
sbb
jns
xchg
sbb
xor
pop
inc
xchg
popf
xchg
jp
add
in
popf
je
lret
mov
cmp
mov
mov
test
lcall
movsw
sbb
repz
cli
pushf
jmp
cmpsl
xorl
lret
jno
pop
mov
adc
mov
mov
mov
out
mov
dec
aad
push
xchg
out
cltd
xchg
sbb
and
pop
mov
ficompl
jmp
dec
adc
sub
xchg
jmp
push
mov
dec
std
xchg
xchg
mov
in
gs
xchg
mov
xor
shll
mov
sbb
movsl
dec
mov
rclb
mov
js
xor
mov
xor
not
xor
mov
add
stos
inc
dec
xchg
call
clc
mov
cmc
rclb
xchg
sub
movsl
pop
jnp
sbb
mov
rolb
add
mov
in
aas
bound
xorb
push
imul
xchg
jns
into
cmp
inc
insb
and
mov
xor
jbe
xlat
sarl
lods
jmp
xor
hlt
scas
fsubrp
pop
add
daa
and
out
mov
aas
cwtl
adc
sahf
mov
fadd
add
cmc
mov
pop
sub
xlat
pop
lcall
xor
je
mul
stos
xchg
mov
clc
jle
mov
fcomps
fmuls
in
cmp
int
es
add
arpl
adc
and
outsb
adc
adc
push
push
xchg
loopne
jl
jmp
js
aas
pop
mov
push
sub
xor
outsb
fiadds
jae
sub
outsl
mov
pop
xorps
scas
and
cmp
jo
sbb
sbb
or
jbe
ret
testl
sbb
push
popf
and
in
sub
daa
repz
pop
sbb
xchg
adc
ret
push
je
mov
imull
jbe
xor
into
adc
adc
or
adc
add
xor
rcrb
mov
adc
lods
jbe
dec
pop
cmc
mov
movsl
inc
mov
stc
icebp
clc
gs
jecxz
test
add
xor
mov
mov
popa
mov
aas
data16
iret
mov
cmpsb
out
lcall
in
rcrb
inc
inc
push
mov
push
mov
sbb
loopne
push
shll
mov
jb
push
cli
out
dec
cmc
xor
out
jmp
push
mov
xchg
inc
std
leave
fiaddl
mov
cmp
mov
push
outsl
sbb
jge
in
call
xor
call
mov
inc
jge
dec
cmp
outsl
setae
mov
jno
lds
mov
mov
mov
mov
dec
test
cmp
out
inc
cmpsb
xor
jg
enter
push
and
rcr
lahf
jbe
xor
add
and
fmul
xor
jg
adc
hlt
test
mov
mov
xor
lret
dec
ljmp
aaa
add
and
add
lock
mov
pop
sub
repz
fsubs
iret
enter
repnz
out
sub
cmp
mov
inc
cwtl
jae
stc
addr16
xchg
cmp
jno
xor
push
mov
bound
sbb
movsl
filds
rcrl
out
mov
pushf
fistpl
xlat
or
pop
iret
pop
stc
jecxz
fstps
in
ds
dec
frstor
inc
adc
dec
iret
sbb
or
in
pop
jae
inc
cmpsb
movsl
dec
ret
lret
jg
jbe
push
push
lds
sarl
icebp
sahf
int3
adc
jo
les
sti
dec
rol
iret
in
outsl
xchg
push
and
hlt
inc
aaa
or
mov
sbb
in
scas
push
rorl
and
out
sbb
xchg
or
mov
test
lcall
clc
inc
stc
mov
cmp
pop
mov
ja
push
subl
push
push
inc
mov
cmp
daa
mov
out
jb
or
lret
push
call
fwait
sti
ret
shrl
mov
xchg
xchg
xchg
iret
mov
scas
idivl
mov
jl
cmp
dec
adc
push
loopne
int
pushf
xchg
adc
fdivrs
lods
dec
pop
adcl
das
mov
inc
fisubl
mov
sti
push
lea
mov
arpl
jae
and
cmc
mov
jb
add
mov
bound
into
add
jg
movsb
fistpll
inc
dec
jne
push
xchg
aam
add
aam
sbb
jl
sbb
leave
jge
sbb
fcoms
and
out
xchg
loopne
adc
inc
dec
and
cwtd
stos
aas
ss
inc
loope
fdivrs
xchg
xor
jecxz
xchg
mov
das
jmp
push
aad
test
ret
out
popf
push
jns
das
imul
inc
data16
and
mull
repz
xchg
fists
out
rolb
add
jle
xor
and
add
in
lcall
cmp
out
testb
inc
ja,pn
push
fucomip
sub
inc
jp
int
or
jle
mov
add
movsb
aas
into
adc
sbb
ja
mov
mov
mov
lret
lods
stos
test
inc
ds
ds
ljmp
rcr
ss
cmpsl
neg
aaa
in
ljmp
insb
jp
gs
into
ret
out
add
add
stos
xor
lret
cmpsl
gs
into
add
cmpsb
ss
shrb
jecxz
xchg
aam
fmuls
call
push
pusha
pop
daa
enter
push
fcomps
push
gs
xor
push
mov
outsl
dec
out
xchg
fisttpl
out
push
shll
cmp
aaa
icebp
lea
pop
cwtl
lahf
lahf
ffreep
xchg
mov
and
xor
aaa
rcll
aaa
jle
stos
rclb
outsl
jl
mov
mov
sbb
and
out
jecxz,pn
jns
add
and
stos
lahf
mov
mov
fnsave
test
xchg
ss
jae
push
ss
mov
subb
std
cld
loop
cmpsb
jmp
sub
push
dec
imul
mov
xor
js
aam
or
loopne
sbb
push
pop
dec
fisubs
les
mov
sbb
daa
cmc
sub
or
shll
mov
jmp
pop
cld
pop
inc
push
dec
js
fucomi
sbb
scas
mov
pop
mov
mov
loopne
cs
mov
in
adc
mov
mov
loop
arpl
mov
cmp
pop
add
scas
pop
or
xor
mov
jo
mov
cld
shll
ss
and
cmpsb
cmp
inc
jl
into
std
sbb
mov
sbb
inc
push
mov
into
cmc
dec
rclb
push
dec
and
and
mov
aaa
mov
cmp
xchg
xchg
inc
push
psrlq
add
lahf
movsb
adc
xchg
inc
adc
add
inc
orl
hlt
sbb
in
sbb
outsb
or
adc
nop
cmp
jmp
int3
jnp
scas
aam
std
inc
jecxz
out
xlat
scas
pop
cmpsl
outsl
xchg
lock
mov
add
lea
mov
imul
ret
shlb
in
mov
sub
mov
adc
outsb
xor
hlt
js
inc
pop
jmp
adc
push
aaa
adc
mov
push
jbe
clc
or
in
push
jae
scas
aad
popa
mov
push
jl
push
mov
cmp
or
stos
dec
mov
cmp
insl
jg
into
or
jae
test
pop
rcl
jnp
je
or
mov
adc
jge
lahf
push
movsb
or
sbbl
push
rorl
lahf
pop
xchg
and
jmp
or
add
shlw
arpl
shrl
xor
icebp
xchg
inc
sbb
enter
pop
push
xor
fs
aad
sbb
jns
in
push
mov
sub
imul
adc
sub
cwtl
lcall
popf
clc
imul
outsl
pshufw
pop
enter
lret
add
push
cmp
hlt
stos
das
bound
pop
cmpsl
pop
loop
and
sub
int3
les
or
push
push
or
xor
jp
mov
nop
jp
push
lods
adc
loopne
xchg
testb
subl
ss
jo
push
int
and
push
push
sub
ljmp
inc
int
mov
stos
push
push
scas
or
out
push
and
shrl
xchg
or
inc
mov
jmp
insl
add
xchg
xor
sub
cwtl
push
rcrl
pop
rcrb
pop
in
or
movsl
pop
jp
daa
bound
mov
mov
pusha
mov
adc
rclb
mov
lock
cmpl
shl
loop
cmpsl
outsb
mov
addr16
mov
adc
pop
adc
mov
dec
dec
pop
push
bound
sbb
mov
dec
std
fs
cmc
add
jge
frstor
ljmp
dec
and
cmpsl
sbb
repz
rcr
sbb
addl
jp
jecxz
jo
shlb
scas
and
stos
fbstp
ja
dec
cli
mov
rcr
or
push
loopne
xchg
pop
sti
das
stc
stc
mov
in
cmp
sbb
cmp
flds
mov
shrb
xchg
mov
loope
add
sub
or
xor
sbb
mov
and
inc
mov
stos
add
lds
jb
popa
xor
adc
inc
rol
insb
ret
dec
popa
add
add
mov
mov
addr16
fwait
mov
adc
jp
pop
dec
mov
jecxz
in
pop
add
mov
loopne
and
nop
xor
sbb
push
lock
roll
stos
mov
push
loop
xchg
mov
adc
in
out
push
out
int3
cmpsw
push
loope
rcll
pop
shl
scas
and
jle
shll
sbb
jg
roll
test
mov
shl
int
jo
sbb
mov
int3
jns
test
mov
jb
push
dec
add
inc
adc
dec
push
jl
fists
jnp
adcb
mov
jo
mov
xor
cwtl
mov
xor
fdivrp
xor
xchg
stos
scas
pushl
mov
adc
fstpt
pop
push
data16
scas
or
jle
push
mov
inc
pusha
lahf
test
mov
xor
mov
dec
or
out
adc
dec
test
or
loopne
cmp
call
and
jl
cld
sub
and
xor
cli
dec
pop
xor
pushf
or
mov
pop
das
push
fucomip
movsb
sub
rol
or
dec
lods
cwtl
push
or
movsl
adc
pop
mov
stos
push
mov
into
mov
adc
ret
int3
in
jecxz
push
in
add
pop
pop
adc
outsl
push
xor
not
mov
movsb
rolb
ror
pop
or
shll
inc
insb
mov
mov
pop
fsubl
out
pusha
jb
cmpsl
dec
xchg
pop
fidivrl
sarb
test
inc
sarl
pop
or
mov
push
cmpsb
repz
cld
xchg
xchg
das
push
cld
in
aad
sbb
or
out
rcrb
dec
xchg
jmp
rcrb
sarl
nop
dec
mov
test
push
imul
xor
cli
in
sbb
mov
sbb
mov
imul
jo
fs
mov
or
cld
mov
sub
sahf
mov
jae
in
sbb
mov
cmp
repz
rolb
negl
lahf
mov
adc
xlat
push
and
fcomps
push
push
sub
sub
pop
sbb
push
hlt
jle
sti
and
int3
leave
es
out
mov
jmp
daa
mov
pushf
cwtl
mov
xchg
mov
loop
adc
push
cld
inc
mov
mov
fists
leave
adc
data16
mov
or
push
cmpsl
outsl
xor
in
adc
add
sub
push
movsl
pop
mov
xchg
jne
lds
incb
icebp
sub
jge
ficomps
jne
jmp
sub
jle
in
adc
insl
sbb
shlb
add
mov
pop
push
mov
cwtl
fwait
aam
dec
int3
xchg
in
dec
imul
or
aaa
add
int3
jnp
ds
cmc
xchg
mov
call
das
mov
inc
iret
jno
in
leave
bound
rcl
gs
inc
jb
inc
ret
xchg
aad
fistpl
and
nop
outsb
pusha
lea
sub
andb
or
dec
out
or
dec
vphsubdq
inc
fmull
mov
inc
mov
test
fsubrs
aam
cmp
adc
mov
iret
aam
cmpl
adc
cwtl
cld
sar
ret
jecxz
push
pop
jle
repz
xchg
enter
xlat
sbb
push
mov
roll
xor
mov
dec
pop
in
sahf
dec
xchg
or
adc
int3
es
in
jb
xor
out
into
jae
call
dec
push
data16
pusha
fwait
popf
fimuls
sahf
sub
insb
mov
xchg
add
mov
xchg
call
idivl
pop
inc
aad
adc
inc
insl
mov
fs
jmp
jl
dec
inc
cli
cli
mov
hlt
cmpsl
inc
mov
xor
cmc
arpl
rcll
shll
jb
xchg
cltd
and
es
orb
jo
bound
add
add
fsubl
add
call
mov
fidivl
jo
sahf
mov
mov
fisubrs
mov
shll
mov
insb
cmp
cwtl
mov
dec
idivb
test
shlb
in
dec
lods
sahf
push
jecxz
lods
inc
scas
xchg
or
es
ljmp
mov
and
pop
hlt
pusha
orl
mov
mov
push
jo
popa
dec
sub
mov
mov
shll
loop
mov
clc
adc
nop
mov
test
stc
sbb
cmpsb
pop
jecxz
push
loop
loope
das
sbb
aam
lret
jle
jne
gs
cmpsl
push
lahf
int
pop
mov
insl
shrb
and
xor
bound
mov
mov
jp
adc
pop
xchg
insl
inc
int
call
popf
andl
jo
mov
outsb
sbb
shll
mov
sti
and
repz
stos
jg
pusha
ss
fsubrl
sbb
repnz
fnstsw
cmp
mov
sarl
mov
dec
lods
lcall
xlat
repnz
xchg
pop
out
jp
aas
inc
inc
les
xor
and
pop
mov
not
cmp
pop
mov
cmovo
dec
mov
mov
testb
mov
mov
stc
pop
mov
cld
mov
shll
notb
stos
ret
or
or
lea
mov
addr16
fistpl
imul
add
dec
or
xlat
repnz
sar
mov
stos
jg
cmp
lea
scas
mov
mov
hlt
test
es
adcb
das
fsubrs
adc
adc
cmc
fistpl
or
dec
mov
cmpsb
loope
push
and
or
das
xor
cmpl
sarl
cli
es
pop
xor
sbb
jae
pop
jg
es
or
mov
adc
push
cmp
xchg
mov
fildll
adcl
lds
inc
sub
out
call
pop
je
icebp
push
rcrl
sub
in
jo
or
loope
sbb
lds
mov
mov
xchg
add
lods
push
lds
mov
cmp
test
scas
push
sub
sbb
xchg
push
push
sti
jns
and
jmp
sub
dec
inc
mov
cmc
jne
imul
lods
repz
jo
ret
pop
test
and
test
mov
push
roll
mov
sub
mov
imul
pop
fmuls
loop
data16
shrl
dec
and
test
cmp
and
mov
inc
nop
outsl
adc
fsubrl
sarb
jb
shll
dec
cmpb
pop
pop
das
adc
pop
mov
scas
dec
add
add
in
adc
sti
insb
movsl
fs
inc
mov
lds
fisubrl
mov
stos
addb
aas
test
push
mov
sbb
test
dec
arpl
test
jge
add
or
sbbl
addr16
mov
push
push
mov
push
fidivrs
fisubl
inc
or
mov
pop
imul
pop
call
ss
sti
adc
mov
jge
lds
or
movsl
mov
in
cmp
lods
xlat
jmp
xchg
add
xchg
jno
push
jge
test
and
cmp
mov
mov
inc
ja
mov
add
sbb
pop
imul
jne
pop
mov
mov
rorl
stos
adc
mov
pop
scas
cmpsl
xor
ds
mov
or
xor
movsl
mov
pop
push
shrb
rcll
outsl
inc
lods
add
or
shlb
insb
pop
or
sbb
or
sub
adc
mov
enter
ret
jle
lds
shll
or
pop
mov
and
sbb
mov
and
bound
popf
ret
sub
inc
idiv
add
repz
sahf
mov
ljmp
xchg
fistps
cs
stc
jae
pop
std
ja
icebp
es
in
sti
test
mov
outsb
inc
lret
cmp
dec
pop
jnp
ror
out
push
sahf
xor
fistl
rorb
mov
xchg
lods
data16
sbb
or
xor
sbb
insb
test
outsb
frstor
sbb
lock
push
pop
add
testl
xchg
cmpsb
inc
sbb
jle
dec
sbb
xor
sti
inc
xchg
les
dec
testb
dec
pop
sub
std
or
fdiv
mov
add
enter
and
mov
std
dec
xchg
in
mov
adc
ja
repnz
sub
sahf
lahf
push
pop
repz
shlb
lcall
cmp
push
mov
mov
stos
fstp
fwait
lret
stos
xor
mov
lcall
xor
pop
push
add
repnz
fs
lods
outsb
cmp
ret
xchg
adc
and
jmp
push
pop
int
jb
sbb
xor
xor
push
pop
sub
pop
cmp
sarb
ljmp
mov
jns
incb
sbb
mov
pop
nop
pop
dec
mov
dec
negl
push
pushf
adc
xor
mov
imul
clc
std
nop
push
jl
inc
dec
sbb
mov
pop
xchg
adc
push
rcrb
mov
xorl
call
das
pop
jge
pop
push
cmp
jmp
sti
insl
sbb
sub
popf
pop
aaa
loop
orb
dec
je
jle
fs
sbb
loopne
push
dec
mov
test
add
iret
or
inc
sbb
movsl
hlt
xchg
fdivs
daa
arpl
cmc
and
js
adc
jg
jmp
ret
ds
std
xor
inc
call
xchg
inc
jb
stc
ja
jge
mov
in
cs
jne
inc
or
mov
out
push
and
sbb
pop
xchg
outsl
inc
mov
mov
xor
push
pop
mov
sbbb
addr16
stos
je
insl
imul
cmp
cs
fwait
iret
and
mov
divb
inc
mov
push
or
inc
cs
rcll
aas
push
ljmp
cmpsl
inc
cli
or
and
and
jno
insl
mov
fwait
mov
mov
pushf
mov
into
nop
pop
mov
xchg
scas
push
repnz
sbb
out
stos
loop
data16
jo
push
mov
adc
outsb
in
aad
cmp
mov
or
mov
cs
xchg
push
ja
mov
pop
and
inc
mov
out
cmp
insl
sbb
adc
inc
dec
xchg
mov
sbb
mov
pop
movb
mov
dec
vpandn
mov
cmpsl
jl
fsubr
addr16
xor
cmp
push
call
mov
dec
push
setno
dec
movsb
push
mov
mov
shll
test
std
jne
scas
adc
loope
adc
adc
movsl
sbb
xor
jl
lcall
push
fdivs
jle
pop
fwait
mov
mov
test
aam
sub
inc
pop
sub
mov
mov
inc
out
dec
and
xor
data16
sahf
mov
imul
pop
add
in
in
jnp
mov
xchg
fstpl
dec
int3
push
cmpsb
in
dec
dec
lods
mov
aas
dec
stos
insb
sbb
pop
push
sub
lret
xor
push
aaa
shl
add
jnp
and
sbb
mov
stc
add
minps
fstp
inc
inc
xchg
fs
jge
lcall
fs
pusha
lcall
cli
stos
mov
mov
sub
xchg
mov
mov
xchg
mov
fisttps
shll
push
fmull
mov
jmp
out
imul
jns
popa
and
pop
loopne
icebp
lods
inc
loope
xchg
add
std
in
inc
xchg
push
pushf
bound
into
lods
jmp
lret
insb
inc
rcr
push
add
jmp
clc
fnstenv
fidivl
xor
xor
cmp
add
xor
sbb
lods
fstps
mov
addl
int
xchg
jmp
lock
or
mov
bound
adcl
ficoml
dec
xor
pushf
xor
movsb
fldt
loop
pop
jl
push
roll
lret
push
cwtl
insb
enter
insl
andl
dec
xor
int3
inc
jbe
xor
enter
cli
sahf
pusha
dec
fmulp
aas
shlb
test
xchg
xor
jecxz
orb
ffree
jno
scas
lret
mov
pmaxub
xor
clc
xor
nop
rep
mov
cmp
pop
test
cmp
inc
jae
scas
add
jecxz
cmp
mov
adc
repz
pop
cli
std
pushf
dec
cmp
adc
dec
or
push
out
inc
sahf
divb
gs
imul
adc
jp
xlat
out
xchg
jg
enter
pop
cmp
iret
outsl
imul
icebp
dec
sbb
stc
fcmovnb
xchg
data16
aas
mov
shrl
repz
imul
in
movsb
jns
into
mov
dec
into
cmp
es
push
mov
fs
pop
loopne
jnp
sub
xor
cmpsb
cmp
sti
les
dec
insb
mov
loop
xor
cmp
bound
outsl
and
mov
pop
fstl
inc
decl
jecxz
fldenv
or
cmp
call
mov
ss
cwtl
and
push
adc
cmpsl
andb
adcb
sti
xchg
pop
or
and
mov
push
xchg
aaa
xchg
mov
clc
xchg
pop
dec
ss
cmp
hlt
pop
enter
aas
js
mov
jo
inc
mov
popf
mov
mov
nop
jae
cmp
stos
jns
or
cwtl
pusha
dec
int
test
enter
lret
cld
and
les
ret
pop
mov
daa
cmp
dec
loopne
les
jb
cmp
adc
ret
adc
add
pusha
psrlq
lds
push
pusha
shlb
mov
add
call
fistl
mov
mov
andps
into
mov
add
adc
movsb
nop
or
mov
fs
xchg
and
shrb
mov
cmpsl
add
outsl
lea
dec
dec
lcall
push
rcll
popa
push
lret
daa
push
sbb
je
pop
les
add
fdivs
mov
test
add
dec
lahf
push
data16
and
xor
mov
pop
pusha
jo
add
mov
fildll
lret
mov
insl
inc
jecxz
inc
fldcw
xor
pusha
repz
popa
fsub
hlt
aaa
aaa
jo
out
insl
into
loopne
inc
add
test
pusha
in
xchg
dec
push
enter
inc
adc
ljmp
inc
fcmovnbe
cld
add
xchg
pop
dec
test
loopne
fmull
iret
inc
out
aad
inc
mov
sub
dec
and
mov
scas
fidivs
loope
lock
sbb
add
add
mov
cmc
repz
mov
pop
push
xchg
or
lods
scas
stos
pop
in
xor
pop
add
inc
xchg
mov
data16
psadbw
jbe
add
or
stc
pop
add
pusha
sub
and
shll
das
lock
jmp
idivb
jns
mov
aad
cmpsb
lds
rorl
sahf
mov
mov
jb
mov
mov
sar
jmp
ja
sar
rcrl
sbb
sti
out
dec
mov
addr16
add
test
ja
testl
pop
or
gs
sub
mov
jecxz
mov
fsts
jmp
movsb
inc
mov
insb
movsl
cmp
mulb
shrb
aad
scas
sbb
adc
xchg
shll
sub
mov
jecxz
cltd
test
adc
repnz
push
jg
mov
add
cmpsb
dec
push
push
adc
xor
and
mov
js
test
lret
out
push
push
lea
nop
jo
mull
add
jb
rcrb
bound
inc
inc
stos
mov
aam
or
test
or
push
aaa
jnp
popa
fwait
jecxz
mov
dec
fs
xor
lahf
sub
cs
cld
nop
repz
mov
pop
test
inc
les
out
mov
aaa
pop
bound
stc
test
pushf
daa
sbbb
stos
pop
cmp
xor
popf
pop
stc
mov
inc
xor
popf
sub
lds
std
jb
adc
mov
fs
daa
cmp
sar
addr16
test
nop
mov
or
cmc
mov
dec
in
jbe
push
dec
or
pop
mov
out
das
mov
mov
cmp
dec
jmp
js
cltd
jae
movsb
mov
mov
and
xlat
or
add
addb
ja
cmp
and
cmc
xchg
add
divb
cwtl
in
je
mov
xor
xor
sbb
mov
dec
inc
imul
cmp
stc
lods
adc
les
push
push
daa
push
adc
inc
pushf
popa
pop
pop
fwait
push
scas
rorl
cmpl
sub
adc
shll
popa
jmp
xor
call
nop
enter
insb
inc
sub
xchg
aas
xlat
std
push
pop
push
add
push
sub
rcl
cmp
js
xor
aas
andb
xchg
fisubrl
fistpll
mov
imul
addr16
adc
nop
sahf
cmp
in
inc
jbe
xchg
int3
mov
popa
jne
mul
adc
add
ss
lock
mov
and
and
add
inc
orl
jne
fcomps
xchg
out
shlb
push
and
fld1
lahf
push
test
jns
push
inc
fstp
ror
decb
mov
adc
and
inc
addr16
dec
xchg
jmp
xchg
lcall
test
mov
fidivl
mov
push
test
cmp
adc
out
add
aad
or
push
cwtl
lret
popa
lds
lret
stos
cmp
or
rorl
push
daa
aaa
js
movsl
or
cmovp
inc
mov
dec
sub
loop
inc
mov
mov
out
fisubs
mov
jg
fnsave
push
and
inc
inc
lods
jmp
and
loop,pn
je
jns
fbld
out
cmp
test
sti
xchg
fcomp
push
mov
fcoms
sahf
push
std
mov
cmp
or
ljmp
add
arpl
add
adc
movsb
imul
xor
jo
push
aam
daa
sub
shll
xor
cmpb
pop
xor
jbe
xor
lcall
je
push
dec
out
or
popa
cmpsb
xor
push
aaa
sbb
jl
sbb
sub
sbb
aam
xchg
add
mov
out
stos
and
out
fs
push
in
mov
or
adc
repz
sbb
movsb
loop
ja
mov
adc
fdivl
or
rolb
pusha
and
rcrl
outsl
push
mov
loop
mov
sbb
loope
lea
pop
or
push
xor
movsb
inc
nop
outsb
jmp
jne
mov
sti
pop
lea
or
mov
daa
cmpsl
int3
push
cltd
push
mov
mov
and
leave
xchg
xor
jmp
pop
pop
imul
ret
test
iret
push
lcall
fwait
jns
push
sahf
xor
or
cwtl
aad
ficoml
inc
dec
adc
lret
pop
shll
lds
out
es
mov
movsb
cmpsl
aaa
outsl
inc
into
jno
popa
pop
inc
in
in
cmc
xchg
movsl
fwait
lret
shlb
ror
stos
xor
sub
sbb
shll
or
inc
xchg
adc
push
out
xor
xorb
mov
and
test
inc
pop
dec
repz
std
aaa
pop
aam
shl
pop
maskmovq
negl
movb
adc
cmp
inc
fsts
adc
lcall
jg
or
cltd
div
lock
mov
xor
cmc
pusha
jns
add
cwtl
aaa
sub
pusha
jecxz
pop
push
add
cld
jle
adc
add
arpl
mov
mov
mov
pusha
jbe
or
mov
jns
rorb
inc
jbe
hlt
push
out
imull
lds
inc
das
xchg
pop
repz
in
dec
xor
mov
jbe
jnp
ret
mov
into
pop
jl
fstl
pop
pop
pop
mov
test
or
call
out
gs
xchg
pop
xchg
out
and
lret
xor
push
pop
push
pushf
addr16
in
jnp
ja
sub
adc
push
push
out
cs
lods
hlt
shll
iret
inc
sar
ret
movsl
mov
xor
in
pusha
fstps
mov
ja
sbb
mov
push
push
push
ret
xor
cmpsb
and
nop
gs
mov
inc
out
jb
mov
je
into
out
dec
movsl
mov
xorl
pop
loopne
cmp
inc
dec
cmp
jne
pop
mov
or
sbb
mov
enter
orl
or
and
ds
or
sbb
sbb
jo
cmp
scas
gs
test
sub
mov
xor
jle
pop
xchg
mov
inc
pop
cmp
int3
inc
insb
xchg
xchg
dec
ret
insb
out
and
dec
pop
or
movsb
ja
inc
iret
mov
xlat
cli
test
mov
testl
in
mov
push
cmp
ja
shll
push
call
jne
scas
lret
sub
out
stos
cmpsb
icebp
addr16
push
dec
mov
lods
leave
push
jne
jl
ror
or
je
dec
es
xchg
add
xor
cltd
shrl
test
data16
mov
mov
jb
sub
fsub
mov
cmp
lret
movsb
mov
dec
adc
int3
stos
push
pop
sahf
and
lahf
cmpl
lcall
test
push
sbbl
call
pop
push
jae
frstor
lods
int3
sti
mov
ficomps
push
popl
inc
nop
mov
andb
and
pop
jmp
inc
push
jle
scas
jp
pushl
pusha
bnd
icebp
sti
dec
inc
in
repz
sti
stc
out
sub
push
rcrl
sbb
pop
adc
shr
mov
out
sub
inc
in
outsb
xor
jl
cmp
je
xor
or
outsb
aam
mov
lcall
and
iret
lahf
or
cmp
ss
inc
xchg
lcall
popf
mov
xchg
cwtl
xchg
outsb
push
xchg
xchg
push
mov
pop
mov
lock
push
notb
lret
cli
xorb
add
mov
sbb
repz
add
and
cmp
fcoml
or
fdivrs
dec
rcll
addb
mov
stos
pop
dec
out
aaa
sub
or
inc
test
mov
std
inc
imul
in
inc
or
in
adc
aad
arpl
push
test
mov
mov
std
pop
mov
jnp
xor
xor
out
adc
fdivp
fistl
pop
cmpb
scas
outsl
lss
pop
lret
or
lret
popa
fnstsw
mov
lods
push
mov
cli
pop
xor
je
and
or
outsl
xchg
cmp
xor
sbb
dec
clc
test
adc
mov
jmp
ja
aad
imul
scas
daa
insb
enter
inc
sbb
pushf
outsb
mov
rcrl
jmp
sbb
sub
inc
push
movsb
xchg
jl
int3
ret
popa
ficoms
out
insl
push
addr16
mov
fadds
lods
lcall
outsb
xor
rcrl
lea
les
mov
xor
adc
cmc
pop
fld
inc
add
loopne
ret
and
scas
jmp
mov
dec
cld
scas
pop
pop
sub
rol
pop
je
sub
out
daa
xchg
mov
cmp
inc
aam
or
add
out
jno
mov
scas
icebp
in
xchg
inc
cmpb
xchg
add
cs
cmp
test
cwtl
ja
sub
pushf
xchg
std
mov
imul
repnz
adc
xchg
ja
hlt
sub
adc
lahf
xor
cltd
push
xchg
or
mov
add
xchg
xlat
orl
mov
jo
dec
add
outsl
lds
in
cmp
sub
jp
xchg
sbb
mov
cli
subl
fistpll
mov
push
push
mov
leave
mov
les
filds
sub
ljmp
pushf
mov
sbb
rolb
in
out
dec
call
aam
cwtl
inc
mov
jecxz
fstl
jne
dec
sub
loop
mov
xor
sbbl
push
int
or
xchg
out
maskmovq
xchg
les
or
lods
stos
push
adc
and
outsb
imul
and
int
sub
lods
push
xlat
stos
loope
cmp
popa
stos
std
lret
inc
scas
inc
mov
insl
cmpsl
clc
xchg
cwtl
in
xchg
and
xor
and
lods
mov
sbb
nop
jae
dec
lret
mov
imul
jne
fmull
imul
and
hlt
sbb
out
cmp
or
cli
mov
inc
mov
cmp
dec
inc
adc
sbb
jae
pop
xchg
cmp
push
inc
scas
mov
sbb
out
mov
lods
adc
mov
out
je
mov
jb
mov
popl
inc
pushf
fcoml
sbb
aaa
jmp
mov
mov
inc
pop
cwtl
mov
and
inc
sbb
cmp
mov
repnz
sbb
aad
or
loope
das
adc
cmp
pop
push
out
ret
sub
mov
mov
adc
inc
ret
jp
add
dec
mov
andl
jge
in
or
xor
cmpsl
jbe
push
lret
ret
les
inc
stos
ret
adc
sti
in
cmp
inc
push
add
pop
in
dec
fwait
pop
sub
jp
inc
mov
adc
or
push
cli
mov
add
xchg
mov
or
xor
push
pop
push
repz
pop
mov
iret
lea
lock
xchg
push
mov
icebp
enter
jbe
push
adc
out
adc
pop
mov
add
fwait
inc
fldl
inc
sub
incb
lods
push
div
inc
pop
mov
xchg
adc
dec
jno
cmp
addl
jae
sbb
cs
xchg
push
adc
or
into
sub
pop
or
push
lods
and
inc
imul
pop
mov
hlt
lahf
pop
addr16
push
cmp
shrl
xchg
fidivs
xchg
call
inc
cli
jp
jmp
orl
aad
dec
mov
subl
cmp
add
daa
call
xor
repnz
jns
inc
movsb
sbb
mov
movsb
inc
dec
xchg
pop
fs
insb
loope
aas
jmp
jle
xchg
cmp
in
sarb
inc
into
mov
lret
lcall
cmp
add
jmp
pop
push
xor
jp
pushf
push
repnz
mov
popa
stc
leave
jno
nop
cmpsl
and
inc
fisubrs
iret
and
push
jmp
push
das
push
insb
jb
mov
push
sub
xor
addl
mov
repnz
mov
fisttpl
lea
inc
pusha
push
mov
scas
mov
mov
loope
pusha
push
outsb
mov
scas
mov
push
jl
movsl
or
les
sbb
push
add
sub
das
add
int3
cmpsl
cld
lret
xor
jg
sub
cmc
sbb
insb
call
test
inc
cmp
pop
movsb
mov
aad
fsts
or
push
in
push
outsb
outsl
mov
xor
push
imul
int
adc
xchg
or
orl
cmpsb
mov
dec
jnp
repnz
mov
push
sti
sbb
pushf
lock
repnz
mov
ror
and
sbb
insl
and
call
add
xchg
jg,pt
push
insl
shrb
xor
push
xchg
pmaxsw
xor
loope
add
cmpsb
inc
inc
jmp
cmp
iret
fldl
xchg
faddl
xor
jge
adc
xor
xor
jecxz
cmp
ficomps
int3
aam
mov
dec
popf
subb
or
xlat
adc
xor
imulb
xchg
pop
pop
xor
add
sbb
shrb
and
jbe
stc
dec
out
cmc
loopne
nop
fsubr
outsb
pop
lahf
fcoms
sub
fstl
xchg
inc
mov
or
in
mov
fsubl
mov
sbb
bound
das
scas
and
sbb
mov
es
fdivl
mov
stc
jle
push
mov
js
fildll
arpl
jbe
push
push
xchg
sub
push
push
cwtl
in
dec
ljmp
movsl
scas
xorl
shr
inc
sbb
imul
xchg
mov
pop
adc
xchg
fadds
hlt
sbb
jae
ljmp
adc
add
xchg
mov
pop
popl
dec
pop
push
addr16
jl
fiaddl
mov
pushf
cwtl
pusha
jnp
test
dec
add
dec
into
icebp
std
ljmp
test
nop
clc
adc
jae
jp
mov
int
fiadds
fwait
cli
inc
mov
mov
mov
adc
outsl
pushf
sti
scas
push
imul
out
inc
push
fwait
xor
mov
xchg
das
and
ret
mov
adc
xchg
push
lret
aad
int
shll
mov
jmp
sub
jb
popa
data16
in
les
pop
loopne
out
shll
push
pop
lods
xlat
shlb
cmc
stc
add
pop
xor
lea
sub
inc
push
ret
lods
push
xor
adc
push
pop
jno
jno
sahf
repnz
cld
add
push
sub
sub
add
add
mov
jge
movsl
mov
xor
cltd
dec
xchg
pop
and
shrb
lcall
jns
fldl
lret
rcrl
jp
pop
call
cli
pop
pop
pop
ret
repz
mov
mov
stos
mov
out
push
ja
daa
cltd
sti
mov
out
sbb
stos
aas
decb
add
mov
sub
shlb
pop
pop
xor
adcb
sub
sbb
aad
cmpsb
mov
pop
out
pop
mov
mov
xchg
ficomps
xchg
sub
fwait
test
out
scas
push
inc
sub
sbb
into
dec
inc
shr
cld
ljmp
cmc
aas
int3
int
scas
xchg
sbb
jb
lret
mov
mov
mov
jb
dec
ljmp
mov
mov
lea
outsb
xorb
in
flds
andb
aam
sub
jp
mov
mov
sub
add
sahf
mov
adc
lods
or
add
test
mov
lcall
and
xlat
adc
jecxz
repz
lret
mov
outsb
aas
xor
addb
sbb
sbb
lret
filds
sbb
cmc
xor
mov
xor
and
int
mov
in
sub
aam
push
in
ret
fcmovb
in
sub
hlt
xchg
mov
ljmp
jae
pop
sti
or
mov
out
stos
repz
adc
ret
ja
mov
dec
xchg
dec
or
cmpsb
inc
xor
fdivl
push
mov
test
and
popf
test
stos
or
xchg
jno
mov
inc
pop
scas
adc
or
lret
cmovge
mov
test
pop
push
pop
mov
cmp
lods
leave
pop
loope
daa
pop
jb
add
cmp
shlb
sbbb
sar
jne
inc
inc
mov
fiaddl
out
scas
xor
sub
and
ljmp
out
pop
cmp
jbe
cmp
mov
dec
in
cwtl
insl
sbb
addr16
cli
inc
pshufw
out
js
inc
fistpl
shr
out
mov
push
mov
insb
adcl
pop
xor
mov
inc
xchg
fsubl
inc
shrl
push
test
out
xor
mov
ret
das
mov
sti
test
loope
sbb
decl
xchg
cmp
push
cmp
jno
push
arpl
xorb
adc
nop
mov
das
in
out
loop
loopne
out
or
aad
sub
jp
sub
xchg
pop
pop
dec
jo
rcrb
inc
sbb
pop
and
cli
xor
jmp
pop
test
fs
mov
lea
shlb
mov
iret
add
in
ds
cmp
or
sahf
sti
mov
mov
jns
or
fldl
xchg
sbb
mov
cmp
sar
mov
mov
cmp
jp
mov
mulb
cmpl
mov
pusha
lods
mov
mov
mov
mov
test
jbe
adc
addr16
divb
xchg
push
int
lea
mov
js
dec
mov
mov
adcb
test
aaa
scas
stc
adc
aam
adc
cmp
xor
in
and
push
push
test
dec
dec
call
jp
int
outsl
pop
or
fimuls
mov
push
clc
sbb
inc
shl
loop
pusha
inc
scas
data16
or
sub
dec
mov
dec
sti
pop
incl
and
movsb
fucomp
insl
loopne
lcall
sub
rcr
movsb
movsl
aaa
and
pop
jmp
dec
into
das
push
xchg
inc
mov
mov
pop
popf
aad
lds
fnstcw
sub
xor
fwait
fwait
clts
fildl
cld
aad
fisubs
jp
cmp
lods
div
and
mov
nop
loopne
sub
insl
and
sbb
sbb
inc
pop
mov
pop
in
push
adc
loopne
jo
cli
add
ret
adc
addr16
jns
ss
pop
std
push
mov
hlt
es
xlat
xchg
inc
mov
and
add
pop
js
pop
push
xchg
addb
or
int
adc
pop
cmpsb
mov
dec
cmp
and
xor
ljmp
ret
fldcw
cmp
ja
or
dec
out
mov
fcmovne
pop
jns
sub
xor
adc
insb
pop
adc
pop
mov
pop
repz
in
int
fists
sbb
cltd
es
iret
repz
out
cmp
inc
outsl
addr16
fisttpl
add
icebp
test
les
mov
daa
sahf
cmp
int
sub
push
dec
jmp
mov
xor
push
pop
daa
jge
sbb
addr16
xchg
cld
xor
insl
ret
mov
rorb
das
cltd
in
sbb
es
push
mov
mov
mov
push
inc
xor
pop
and
movsb
mov
pop
inc
xchg
xchg
rcrb
aas
ja
mov
mov
das
cli
les
mov
adc
xor
adc
push
repnz
sahf
mov
pop
inc
lea
cltd
stos
outsl
sub
loop
push
xchg
lcall
loop
js
movsb
test
mov
push
loopne
ja
pop
iret
mov
mov
push
dec
dec
dec
testl
and
imul
and
mov
loope
or
pop
movsb
adc
sbb
xor
pop
call
inc
lahf
ss
lea
mov
int
push
mov
lods
mov
scas
mov
mov
in
xchg
mov
push
sbb
mov
cmp
push
cmp
arpl
nop
hlt
sbb
in
into
lret
stc
pop
cmp
mov
sbb
fwait
jp
addb
mov
cltd
xorb
mov
jp
cmp
cli
dec
push
cmp
subl
popf
xchg
mov
and
insb
pop
sub
jg
add
sbbb
xchg
inc
xchg
add
lds
inc
xchg
leave
arpl
inc
shl
mov
mov
sub
in
lods
fdivrs
mul
push
test
stc
aam
sub
dec
mov
jno
test
pop
push
jo
das
mov
insb
cltd
or
out
cmp
pop
mov
add
std
jns
sub
aas
sbb
mov
sub
scas
shrl
dec
xor
cli
lcall
int3
out
pop
ret
cmp
jge
mov
add
test
std
shr
or
std
popa
pusha
jo
cmp
cmpb
push
jle
mov
stos
and
adc
ficompl
xlat
notb
or
cld
out
push
mov
arpl
loopne,pn
movsl
push
outsl
roll
insl
jno
mov
and
jl
rorb
xor
loopne
fiadds
cld
pop
maskmovq
imull
jle
es
and
dec
cmp
loope
repnz
or
popf
in
int3
or
int
pop
fldenv
fwait
jne
fistps
popa
js
add
arpl
test
fnclex
cld
inc
xchg
sub
aam
or
push
call
testl
and
loopne
mov
cmp
push
shlb
push
fs
push
daa
cwtl
loope
shll
sti
sbb
addr16
sub
lods
cmp
add
sub
je
add
pop
nop
lahf
xchg
out
adc
mov
in
mov
mov
or
and
cmp
repz
dec
iret
ficomps
dec
add
scas
xlat
jbe
cld
jg
cmp
mov
and
shlb
stos
sub
jle
jg
sti
mov
dec
cmp
add
cmp
mov
pop
mov
jne
push
pop
cld
mov
cmpsb
mov
fimuls
xlat
or
or
sbb
cmp
lret
scas
sub
or
popa
notb
and
fstps
sahf
lods
pop
sub
popa
sbb
adc
xor
cmp
fldenv
lock
les
and
jmp
mov
sub
xor
push
call
mov
push
fstl
add
out
xchg
and
adc
movsl
xor
jmp
xlat
aaa
mov
jle
std
sahf
mov
and
mov
push
fdivrl
outsl
push
push
push
bound
adc
fwait
call
mov
int3
sti
cwtl
mov
pop
sub
push
das
repz
inc
push
mov
mov
push
push
hlt
pop
loop
loop
adc
pop
out
adc
fisttps
mov
or
imul
inc
es
xchg
les
imul
aas
add
fadds
add
mov
add
ja
mov
push
loope
or
in
in
leave
fsts
mov
xor
sbb
mov
sub
mov
xchg
xor
popa
test
push
ret
ficompl
leave
xor
xchg
loop
adc
popf
lds
add
push
cmp
sar
mov
mov
lods
jo
out
mov
fwait
leave
add
push
repz
neg
inc
fsub
jmp
cmp
inc
or
sub
dec
sbbl
add
insb
pop
pop
add
xchg
lret
out
test
jge
lret
jmp
push
movsl
inc
insl
test
xchg
test
fisubrl
mov
jg
int3
jb
pop
frstor
add
imul
adcb
fiadds
lock
imul
mov
mov
dec
mov
pop
mov
cmp
ss
push
movsb
lds
rorb
xchg
mov
test
mov
andl
mov
ret
mov
mov
cwtl
lcall
pusha
imul
mov
xorb
cmpsb
lods
loop
pop
insl
push
mov
push
outsb
mov
mov
jae
imul
add
cwtl
sub
sbb
inc
add
or
push
sub
mov
ja
add
shll
repnz
scas
pop
cmpsl
or
imul
scas
lock
inc
pop
clc
into
pop
jecxz
mov
pop
mov
icebp
fwait
das
out
inc
jo
notb
or
dec
lock
cmp
push
les
inc
push
pushl
iret
mov
shll
arpl
jge
pop
mov
loop
lock
cmc
adc
xlat
cmp
push
movsb
test
adc
enter
sbbb
mov
pusha
push
hlt
xor
in
aam
adc
arpl
popa
std
xor
jl
in
dec
adc
and
jecxz
in
xchg
lods
or
push
insl
frstor
faddp
in
cmpl
paddusw
xchg
popl
iret
and
sub
jno
mov
mov
cli
nop
je
or
sub
ljmp
mov
aaa
pop
xor
mov
hlt
shll
mov
or
push
movsl
lods
cli
mov
dec
pop
jg
xor
popa
aad
push
or
and
mov
push
enter
or
popf
shrb
outsl
sub
mov
shrb
mov
shll
fsts
jbe
insl
mov
into
mov
into
and
or
and
gs
sbb
cs
lds
pop
gs
jmp
pop
xchg
push
mov
ret
dec
jmp
icebp
ds
nop
mov
adc
dec
mov
mov
divl
inc
fnstenv
push
outsb
cmpsl
mov
ret
aaa
sub
out
daa
mov
push
dec
rolb
push
pushf
jle
mov
pop
js
mov
jae
out
sbb
and
pop
push
xchg
add
inc
imul
jne
xor
daa
inc
mov
xchg
xchg
pop
pop
mov
clc
xchg
dec
ss
mov
push
xchg
sub
push
negl
les
fiadds
pop
cmp
ja
pop
insb
mov
imul
sub
shl
andb
sub
jp
push
xor
js
mov
nop
enter
testb
lea
push
fadd
in
mov
xchg
xchg
repz
or
mov
aas
nop
dec
cld
jbe
dec
aad
jmp
push
jle
inc
push
xchg
or
mov
mov
out
fcoms
mov
mov
jmp
int
cmp
in
sub
cmpsl
iret
adc
lret
clc
jbe
mov
ljmp
xor
pushf
xor
das
in
pop
sub
loop
xchg
fwait
adc
push
dec
jg
jmp
lret
scas
adc
lock
in
lds
or
es
stos
cmp
frstor
dec
jmp
pop
push
insl
mov
jp
flds
mov
mov
sub
mov
adc
lods
mov
nop
mov
rcr
push
push
test
out
out
dec
add
lret
hlt
out
or
and
jmp
cmp
jge
lods
sub
repnz
jg
idivl
iret
scas
mov
push
fimull
iret
cltd
pushf
xor
in
daa
mov
xchg
sub
pop
xchg
pop
outsb
mov
and
out
dec
sub
and
inc
mov
test
pusha
stc
push
les
subl
testl
sub
add
fs
dec
popa
and
addr16
mov
mov
mov
sub
gs
cmp
testb
sbb
fistpll
fwait
test
pextrw
jge
mov
out
mov
lods
pop
jge
pop
inc
jns
pushf
dec
jbe
sub
push
mov
dec
subl
xor
lcall
das
mov
cli
cwtl
lret
cmp
inc
push
or
inc
clc
jle
and
test
and
adc
aam
fiadds
or
lret
xor
mov
xor
insl
sub
lods
cli
jns
jl
jmp
adc
pop
inc
fdivs
outsl
jp
popf
dec
in
xchg
movsb
je
addr16
xor
leave
ficoms
adcl
sbb
test
fsubl
pop
mov
adc
jp
sbbl
xchg
je
pop
pop
mov
lds
call
push
ss
das
push
divl
mov
sahf
dec
fucomip
push
adc
sub
pop
or
test
mov
jbe
sti
insl
xchg
addb
stos
mov
dec
and
cld
icebp
imul
test
imul
jns
hlt
jp
cmp
xor
je
cmp
and
sub
daa
mov
mov
ret
fwait
insb
mov
xchg
popf
xorb
mov
adc
iret
push
ljmp
xchg
sub
mov
dec
addl
pop
and
fwait
inc
js
fildll
pop
int
outsl
adc
shrl
movsb
mov
dec
jno
pop
ljmp
xlat
sbb
jbe
mov
jbe
xlat
cmp
pop
ds
cmp
scas
push
test
int3
into
and
cmc
push
lock
ret
inc
xchg
in
in
jo
xchg
jnp
das
jge
mov
cmp
lret
and
mov
add
lret
xchg
add
aad
pop
shlb
out
aad
mov
js
xor
sbb
and
sub
mov
jp
stos
or
add
das
cmpsb
push
sar
das
and
dec
mov
cmp
mov
out
lret
jo
scas
add
lods
jle
xchg
outsl
mov
out
leave
test
call
cmp
pop
dec
loop
cmp
inc
xchg
adc
test
fdivs
int3
xchg
mov
jmp
xchg
outsb
sub
sbb
addb
push
and
xchg
and
or
aam
das
aas
daa
mov
inc
ss
add
pop
shlb
xlat
add
cwtl
mov
jge
mov
nop
push
push
or
je
fildl
jne
shlb
lea
sub
cld
xor
sub
mov
sub
xchg
not
aad
dec
xchg
in
mov
cmpsl
jge
lea
nop
xchg
add
or
stc
ret
in
jecxz
lret
ret
mul
jne
aaa
pop
jmp
push
std
ljmp
xor
dec
les
mov
bound
sbb
loope
shll
out
jno
mov
jnp
cs
push
aam
mov
test
popf
cltd
sbb
and
xor
pop
adc
dec
mov
xchg
je
sbb
movsl
lret
jne
lret
push
test
jne
xchg
fiaddl
lods
outsl
jge
or
pop
adc
push
mov
in
sti
cmp
popf
and
sbb
mov
dec
inc
fldcw
add
fstps
sbb
mov
sub
jnp
icebp
dec
jl
adc
jle
nop
repnz
dec
cmc
mov
adc
or
lds
mov
jbe
and
pop
repnz
je
lods
in
xchg
dec
dec
aam
mov
js
out
xchg
xor
cmp
sub
test
xchg
insb
scas
mov
arpl
scas
mov
inc
lret
add
add
addl
cmpsb
insl
pop
clc
loop
xchg
adc
arpl
fadds
add
jge
and
push
aas
in
lods
xor
xor
push
je
and
out
xor
jb
cmp
stc
pop
jge
es
in
movsl
inc
push
mov
fildl
cmp
stos
and
lods
fwait
popa
movq
data16
pop
insb
ja
aaa
xor
test
jmp
mov
xchg
imul
shr
loope
or
push
cltd
scas
xchg
clc
fcoml
sbb
inc
or
dec
mov
push
xor
aaa
hlt
ljmp
incl
icebp
or
xchg
test
push
push
lret
out
movl
neg
test
fwait
pop
int3
sbbl
in
insb
ds
mov
das
xor
sub
and
and
sbb
bound
incb
jbe
movb
leave
fwait
and
icebp
jecxz
and
jg
mov
loop
sbb
jl
push
inc
jmp
mov
or
scas
gs
and
mov
sbb
inc
inc
test
movsb
pop
xchg
ficomps
in
loopw
ja
xor
adc
mov
shll
or
clc
pop
popf
out
jmp
aam
je
call
in
decb
clc
mov
xchg
sbb
push
stc
jl
mov
inc
and
cld
dec
mov
ds
push
pop
jo
inc
in
inc
jb
mov
rorb
pop
and
inc
test
xor
jno
inc
jne
mov
push
sub
daa
sub
in
fistpl
cmp
mov
andb
shrl
jg
out
outsb
imul
and
test
cmp
bound
es
mov
insb
and
add
jl
ret
inc
xor
xlat
xor
pop
mov
fsubr
punpckhwd
sub
cmpsl
add
cmpsl
push
in
xlat
jg
xchg
mov
outsb
inc
into
int3
cs
lret
ror
mov
in
data16
adc
out
out
adc
pop
push
out
subb
or
pop
xchg
inc
loopne
and
jecxz
mov
in
fistpl
aas
bnd
and
les
jle
add
mov
in
inc
mov
rcl
and
lret
dec
mov
or
cmp
adc
xor
data16
mov
mov
mov
push
cmpsb
dec
sbb
xchg
sbb
rclb
push
fidivl
test
stos
out
cmpsl
ds
jl
inc
fdivs
mov
cmp
mov
mov
jecxz
or
imulb
lahf
js
and
jo
and
inc
cld
xchg
jge
inc
push
imul
mov
mov
pushf
stos
out
fcoml
js
cmp
test
push
test
and
in
push
xchg
jbe
scas
mov
cwtl
push
loopne
addr16
loopne
mov
fwait
outsb
ljmp
inc
mov
pop
js
sub
repz
adc
push
sbb
xchg
fwait
sarl
xlat
arpl
xor
shl
adc
push
ret
out
aam
add
push
jmp
cmp
jmp
cmp
dec
std
adc
pusha
call
jecxz
js
fstpt
jle
xor
aas
out
out
and
inc
cmc
mov
imul
push
xchg
push
adc
mov
ja
sub
popa
add
mov
push
sbb
jle
outsl
push
loop
imul
leave
xor
jg
andb
int
mov
stc
mov
xor
repnz
leave
push
xlat
xor
loop
clc
leave
lods
push
lods
scas
nop
aad
out
imul
arpl
data16
mov
mov
mov
fistps
inc
arpl
add
outsl
aad
push
xchg
sub
aas
int
ret
adc
xchg
outsl
loope
lret
xchg
mov
xchg
roll
xchg
mov
fwait
pop
fwait
cmp
das
mov
push
push
mov
jns
cmp
dec
mov
aas
pop
and
push
leave
dec
jg
ss
pop
push
jne
shll
jo
fs
inc
xchg
pop
xor
repz
cmp
mov
sbb
ret
and
pop
jle
les
lods
dec
jge
test
sbb
js
sarb
or
jge
mov
imul
jno
dec
sub
cmpsl
push
lret
push
addr16
je
lock
inc
jl
fwait
pop
xchg
rclb
sarb
mov
xchg
xchg
add
mov
dec
inc
push
adc
adc
cltd
sbb
ja
test
lcall
and
leave
pop
lret
rolb
dec
out
std
jge
dec
mov
jb
test
xor
mov
add
pop
inc
dec
daa
pop
loopne
mov
mov
pop
mov
sbb
sbb
pusha
mov
mov
cmp
add
inc
jne
sarl
call
jmp
leave
mov
bound
test
xor
std
mov
test
lea
je
pop
imul
mov
adc
mov
int
pop
test
xchg
push
lock
test
add
mov
std
mov
pop
sub
nop
adc
jae
in
das
pushf
call
jge
in
loop
shll
fisttps
pop
cltd
fisubrs
jb
jge
push
push
mov
insl
les
jno
xlat
sbb
je
mov
pop
icebp
pop
push
sub
push
adc
cmp
pop
test
push
repz
test
pushl
xor
xchg
dec
lds
adc
dec
jmp
popa
fldenv
mov
push
dec
or
dec
test
out
push
inc
orl
sbb
dec
xorb
sub
push
pusha
pop
xchg
push
jo
mov
mov
jbe
cmp
scas
lock
pop
push
ja
adc
xchg
in
jp
adc
push
sbb
pop
lock
xor
xchg
les
and
sti
fadd
sysexit
mov
jns
lock
push
movsb
iret
dec
insb
cli
icebp
mov
and
frstor
push
jb
cmp
push
fistpl
stos
dec
leave
leave
add
lock
pop
or
mov
pop
mov
lock
rcl
cltd
pop
js
or
ss
push
repnz
xor
mov
int
aas
nop
mov
sbbl
outsb
mov
mov
out
popa
push
jae
xchg
adc
push
push
rol
and
and
push
divb
jge
movsl
mov
gs
add
jbe
cli
call
ds
jecxz
ja
out
ret
mov
dec
sub
rcrl
aad
ljmp
push
shr
imul
mov
or
xchg
movswl
pop
and
mov
int3
mov
nop
imul
xor
sbb
push
fidivl
xlat
and
pop
rolb
jne
xlat
inc
sub
jmp
and
sub
pop
jo
sub
sub
cmp
ret
iret
daa
loopne
lods
sub
cld
jne
in
cmc
dec
and
fdivp
test
out
or
addr16
sbb
loop
je
sub
arpl
daa
aam
mov
lods
rcrb
insb
insl
fsubs
imul
push
mov
js
stc
jecxz
push
cmp
sbb
clc
js
imul
cmc
popf
test
cmpsb
adc
xchg
jnp
popa
add
xor
pop
push
enter
mov
lret
out
mov
jp
cmc
shll
jmp
and
jmp
dec
leave
mov
add
jnp
adc
pop
enter
repz
popa
mov
inc
dec
out
add
xor
fisttpl
xor
mov
ja
clc
jns
cmp
push
sub
mov
ja
inc
jns
stos
xor
xor
jnp
lods
push
sbb
add
enter
or
outsl
jg
and
fs
ss
cmp
mov
adc
dec
mov
jge
mov
xor
out
stos
push
pop
mov
cmpsl
sub
loop
lcall
xlat
jecxz
or
cmp
lcall
sub
fisttpll
dec
sub
ja
pop
jmp
push
or
bound
or
lock
ja
xor
adc
inc
aad
xor
pop
pop
mov
cltd
pop
cmp
enter
pop
xor
ljmp
loopne
shrb
cld
and
aas
daa
lods
dec
mov
test
sysret
ret
cmp
aad
inc
sbb
mov
lahf
push
and
fimull
dec
jge
pusha
insl
push
rcll
inc
jle
cs
mov
pop
lret
add
adc
xor
in
xor
aas
mov
cmp
xchg
push
inc
mov
sub
js
call
inc
mov
and
lahf
adc
mov
mov
rcl
jbe
sub
hlt
xchg
mov
lods
ds
mov
xchg
rorb
sub
in
ljmp
data16
mov
out
push
hlt
cmp
xor
imul
shr
leave
shl
sbb
mov
stos
test
ljmp
nop
push
xchg
push
repz
mov
test
in
repz
cld
sbb
lds
je
mov
sar
rclb
fimuls
mov
rcrl
adc
push
cli
push
in
rorl
dec
push
mov
add
mov
xor
mov
xor
mov
in
mov
ficoml
stc
jge
pop
mov
outsb
in
adc
scas
mov
pop
imul
je
sti
scas
bndldx
pushl
mov
rol
xor
pop
ror
mov
cwtl
mov
inc
xor
iret
out
xlat
sbb
loope
mov
shll
add
pop
enter
cmp
or
pxor
xor
outsl
jbe
pop
iret
out
lds
cwtl
shrl
ret
shl
in
int3
and
movb
add
sub
pop
add
scas
add
sub
pop
xchg
and
fbld
add
hlt
and
imul
aaa
mov
cwtl
insb
loop
or
movsl
sbb
sbb
insl
push
hlt
or
outsl
jbe
push
test
or
or
pushf
in
int3
movsb
sbb
rol
push
lahf
loope
les
mov
cltd
jmp
lret
jge
inc
pop
xchg
iret
fwait
xor
lahf
or
test
and
ret
rcrl
mov
xor
jae
cmc
pop
out
cmpsb
adc
ss
xor
sub
fcmove
lds
jno
mov
or
and
mov
dec
imul
push
and
decb
sub
push
or
push
aaa
cmp
lcall
and
shll
xchg
jg
mov
pop
fisubrs
xchg
imul
fnsave
pusha
push
dec
cli
jno
dec
test
cld
test
cmp
fwait
jo
shll
icebp
aas
mov
mov
shrb
inc
mov
cmpsl
push
pop
lods
int3
aam
dec
jp
jge
loope
insb
jle
clc
cmc
iret
mov
cmp
sub
jno
add
xor
jnp
sbb
mov
nop
out
mov
nop
movsb
xor
gs
jg
and
imul
leave
mov
sub
cmc
loope
or
mov
es
dec
xor
xor
pop
minps
in
nop
lret
mov
mov
in
mov
xorl
call
push
pushf
iret
adc
adc
jnp
mov
adc
lea
int3
rorb
testb
sbb
push
test
negb
push
sbb
mov
imul
or
and
push
inc
adc
xorl
push
xor
dec
adc
xchg
nop
or
xchg
xor
dec
xchg
jb
xchg
fidivl
mov
push
shlb
xorb
hlt
lahf
stos
into
call
mov
lea
test
pop
push
jb
pop
pop
mov
ret
sub
xor
xchg
cmp
inc
dec
xchg
xchg
rclb
ret
jl
push
or
popa
pop
or
xchg
mov
mov
jl
std
adc
aaa
aad
cmp
push
mov
cmp
xchg
mov
adc
cmpsb
and
sarl
xchg
dec
imul
cmp
or
test
sbb
sbb
mov
scas
mov
dec
std
hlt
mov
out
inc
clc
outsb
mov
jbe
mov
les
add
xchg
daa
add
add
push
movsl
pop
ja
fadds
hlt
pop
and
ret
push
jg
sbb
test
dec
pop
pop
dec
fstps
test
jge
mov
inc
jg
xchg
mov
sub
ja
fisubrs
mov
xlat
jecxz
adcl
add
jmp
xor
test
inc
ss
int
data16
iret
mov
ja
insl
jmp
dec
jle
fidivs
into
xor
mov
or
cmp
lret
xchg
dec
push
pusha
sub
or
mov
pop
rcrb
jecxz
clc
lods
or
xor
mov
add
push
jge
push
lods
add
and
cmp
jb
or
rcl
pop
jp
dec
test
outsl
mov
cltd
das
pop
daa
jg
cmp
mov
push
ljmp
in
fbld
inc
or
gs
dec
mov
roll
roll
popf
xor
rolb
add
sbb
ror
enter
sub
push
jecxz
xor
jnp
repnz
fdivr
sub
loopne
test
mov
xor
push
pop
movsl
pop
xchg
jg
jmp
ss
inc
cmc
or
leave
rolb
cmpsl
cmp
cld
sbb
lahf
xchg
xlat
data16
push
mov
dec
popf
mov
add
xor
into
lock
adc
push
repnz
cmp
test
pop
pusha
divl
fbld
inc
aad
xorl
popf
pop
ja
sub
xchg
cmc
mov
sti
inc
lock
add
int
pop
mov
sbb
movsb
imul
test
mov
test
stc
cmp
push
pop
aaa
push
push
sti
cmp
add
dec
jmp
dec
mov
push
sbb
mov
test
into
jbe
push
inc
test
sbb
or
mov
call
push
aas
fsub
fisttps
sub
mov
jno
mov
sub
pop
or
or
clc
ret
mov
jmp
pop
mov
outsb
push
mov
repnz
xchg
pop
sub
addr16
jle
in
sbb
pusha
add
hlt
or
push
jne
ljmp
pop
adc
push
jae
ret
mov
aaa
sub
sbb
add
mov
push
fisubrl
mov
mov
js
outsl
aaa
jo
jae
hlt
cmpsb
mov
or
cmp
xor
into
cmc
mov
mov
mov
xchg
adc
jmp
lock
mov
mov
jl,pn
mov
cmp
iret
adc
outsl
sub
jb
pop
call
rorb
stc
inc
add
test
sub
ret
mov
or
mov
mov
pop
aam
mov
sub
pop
bound
pop
mov
pop
jge
and
xchg
push
add
popa
xor
or
xlat
push
sbb
cwtl
hlt
sbb
and
jle
adc
cmp
push
sub
iret
pop
inc
js
int3
sbb
cmp
or
aas
es
mov
inc
idivl
ret
mov
cmp
pop
pop
repz
sahf
add
pop
mov
jnp
lret
gs
out
jae
sbb
aad
lcall
orl
adc
pusha
lods
mov
lret
pushf
mov
xchg
fadd
and
arpl
mov
add
pushl
fs
stos
sarl
popa
xchg
scas
mov
xchg
outsb
pop
and
sbb
mov
inc
hlt
add
adc
daa
out
pop
adc
dec
popf
xor
fsubrp
xchg
fwait
xor
mov
insl
mov
pop
mov
cli
jns
inc
sahf
jbe
arpl
lods
xchg
and
jmp
mov
or
sbb
xlat
xor
stos
cmp
je
out
outsl
add
clc
outsl
push
lret
fsubs
sbb
fists
pop
push
les
rcrl
adc
or
xchg
insb
xchg
xchg
xchg
add
sbbb
xchg
cld
jbe
jl
icebp
adc
add
sbb
test
adc
scas
adc
rclb
mov
mov
out
stos
inc
jnp
in
pusha
std
repnz
in
les
pop
or
dec
gs
cmp
ror
icebp
lods
mov
lea
lods
inc
push
mov
sub
rolb
push
inc
xchg
in
fdiv
and
cmpsl
and
outsb
pop
sahf
dec
enter
push
bound
jnp
mov
inc
xor
les
fwait
movsb
xchg
dec
xchg
icebp
inc
std
fisttps
imul
adc
orl
mov
data16
in
cwtl
jmp
hlt
add
jno
jl
stos
adc
xor
jg
add
mov
jns
mov
or
push
cwtl
dec
sarb
push
roll
aam
sub
repz
jle
sub
in
cmp
pop
inc
mov
movb
ljmp
sbb
shlb
sarl
jge
or
mov
push
out
lahf
pop
ja
xchg
adc
daa
push
jmp
xlat
cli
test
cld
mov
cld
mov
fwait
mov
ret
lea
icebp
adc
daa
mov
ds
inc
dec
push
imul
test
lcall
jb
lret
push
mov
je
sbb
fs
jl
sbb
scas
pop
or
sarb
dec
pop
mov
mov
scas
jbe
jne
leave
das
jp
mov
push
jo
jo
jnp
subb
andps
dec
icebp
insl
adc
inc
sahf
push
adc
cmp
jbe
xor
popa
movsl
jg
imul
outsb
jo
popa
mov
mov
pop
jb
mov
push
dec
jecxz
mov
rolb
lahf
loope
sbb
je
xor
mov
clc
icebp
and
hlt
in
cmp
nop
ss
fsts
repz
rcrb
mov
in
cwtl
cmc
out
push
sti
or
jp
cmp
int
pop
xor
or
iret
mov
pop
out
fidivs
cs
fistl
and
ljmp
xchg
or
clc
mov
xchg
cmpsl
test
lods
int
out
test
push
mov
cmpl
xor
sub
iret
in
shlb
movsl
in
repnz
jno
xchg
cmp
cmpsl
loop
add
pop
rcrl
rcll
push
xlat
aaa
insl
test
mov
pop
pop
and
adc
repnz
movb
sbb
mov
cli
movsb
jle
call
test
dec
mov
adcl
shl
cmp
pop
or
clc
push
mov
push
test
das
imul
cwtl
push
xor
jae
frndint
pop
lret
aaa
pop
cmp
ja
test
or
cmp
into
ds
mov
or
adc
push
aas
dec
mov
test
test
into
xchg
stc
jp
inc
cmp
add
cld
inc
out
cmc
jg,pn
in
icebp
ja
outsb
jmp
sti
scas
xchg
outsb
and
cmp
addr16
push
sti
lcall
lret
mov
add
pop
xor
call
sub
inc
xlat
fmuls
and
jbe
dec
jp
test
jge
lcall
xor
leave
dec
pusha
jle
push
leave
test
cmp
push
leave
aad
lahf
mov
aam
adcl
sub
cli
cwtl
cmp
mov
cld
adc
mov
rorb
leave
mov
je
mov
pop
sub
das
jl
je
push
std
leave
ss
daa
loopne
dec
insl
mov
and
scas
fwait
lock
cmp
in
popa
xchg
dec
movsb
leave
sbb
xor
mov
sub
sbb
mov
and
dec
ja
test
lea
sahf
imul
movsb
pop
mov
sub
test
adc
pushl
stc
mov
fidivrs
or
xor
loop
mov
sbb
addr16
sub
lods
or
mov
les
dec
mov
loope
xchg
and
out
lcall
fsubrl
adc
imulb
iret
out
mov
repz
fs
xor
in
inc
pop
daa
jne
pushf
mov
xchg
mov
aas
mov
jno
mov
lds
mov
imul
aad
fstl
test
mov
push
mov
mov
aam
call
rcrb
add
jg
adc
mov
mov
shrb
and
push
aam
mov
movsb
pop
push
push
push
jge
sti
pusha
cmp
orw
cmpsb
sbb
cmp
pop
or
cwtl
inc
scas
xchg
stc
mov
dec
mov
mov
sbb
jns
jnp
cmc
fwait
enter
les
dec
cmp
into
sahf
xor
clc
lock
add
inc
pushf
enter
xor
popa
add
std
mov
and
ret
sbb
pop
shrl
es
pushf
sub
inc
stos
scas
lahf
pushf
popf
jno
add
mov
sti
pop
ret
roll
stos
rcr
divb
gs
inc
cmp
fldenv
scas
imul
jge
ja,pt
outsl
insb
cmpsl
pop
dec
gs
sbb
xor
aam
enter
push
sbb
pop
nop
fsubrs
sbb
incl
fsts
into
into
in
dec
lods
sub
sbb
rcrb
xor
fstpt
pushf
leave
mov
and
js
mov
xchg
outsl
sarb
inc
jle
push
push
mov
int3
daa
mov
or
pop
data16
jl
popa
dec
ljmp
jae
scas
pushf
andb
cwtl
popf
mov
jne
push
add
gs
mov
cmpsl
add
add
mov
aas
outsb
lea
jnp
dec
lock
sub
inc
lcall
popf
dec
push
out
or
pop
mov
add
idivb
mov
cmpsl
lea
cmc
mov
push
into
pusha
fcom
push
ret
add
mov
sub
lods
add
pusha
scas
xchg
sub
fsubrs
add
mov
lods
daa
push
cmp
dec
cwtl
sub
inc
push
mov
inc
cmpsl
push
imul
sbb
mov
add
mov
or
adc
xchg
clc
add
push
mov
xchg
mov
and
add
mov
inc
adc
or
mov
les
jne
push
imul
data16
xchg
rolb
andb
aam
sub
flds
out
jns
std
or
cmp
ja
dec
xlat
sbb
aaa
pop
jmp
stos
aad
push
in
out
pop
lea
frstor
cmp
xchg
jmp
xchg
dec
clc
cltd
cmp
xchg
or
cltd
dec
ljmp
pop
sti
push
mov
mov
inc
lods
xchg
mov
movsl
pusha
sub
xchg
push
adc
sti
mov
sti
mov
mov
mov
test
push
cmp
jecxz
xor
jbe
lahf
pop
xchg
push
fadd
inc
push
mov
dec
mov
dec
cld
xlat
stos
and
cmc
movsb
cltd
and
dec
ret
movsb
cs
and
lcall
mov
cmpl
jg
dec
mov
jbe
lock
nop
mov
adc
loope
cmp
push
jns
leave
push
fcmovb
iret
loope
mov
imul
push
sub
fistps
loop
outsb
scas
xlat
fs
ljmp
mov
notb
add
jmp
cmp
test
mov
sti
jno
imul
lock
push
push
stc
js
test
fisubrs
jmp
iret
inc
test
cmp
rclb
jno
fdiv
mov
push
cmp
fists
in
push
add
xor
loop
sbb
xchg
mov
fcmovnu
pop
adc
sub
mov
addr16
sub
bound
movsl
push
rolb
mov
sbb
jb
das
stos
push
loop
out
popf
or
out
xchg
mov
inc
dec
inc
pop
sbb
out
cli
mov
adc
sub
push
inc
fs
xlat
mov
cmp
cltd
xor
rorl
je
stc
jno
xor
or
cmp
into
push
sbb
loope,pt
popf
adc
insl
dec
jge
mov
stos
adc
pop
iret
lods
xchg
dec
mov
ds
int
push
xchg
shlb
jl
std
iret
mov
outsl
clc
inc
sbb
mov
and
pusha
jns
cs
pop
and
and
popa
or
insl
dec
mov
testl
mov
dec
or
flds
pop
in
scas
les
cmp
push
add
add
aas
jno
in
pop
dec
cld
test
or
mov
mov
or
inc
cmp
lret
hlt
mov
pusha
test
lret
inc
sub
lods
dec
test
xchg
pop
sub
insl
ss
and
push
mov
or
sbb
leave
movl
mov
lret
lock
sbb
mov
dec
inc
es
push
das
ss
and
lahf
test
add
add
mov
outsl
aaa
inc
test
rcll
call
jmp
jbe
mov
fstl
adc
jge
test
lds
scas
push
mov
xchg
enter
mov
fwait
mov
nop
pop
je
in
and
adc
and
out
dec
mov
sbb
outsl
and
mov
xor
bound
mov
mov
loopne
pusha
dec
adc
fisttps
mov
mov
lods
mov
pop
ret
es
pop
cltd
mov
mov
and
mov
sub
pop
iret
fcompl
das
mov
pop
dec
add
cmp
ds
push
je
mov
imul
je
cmp
push
arpl
movsl
pop
dec
fwait
or
mov
mov
enter
push
sbb
or
mov
cmpl
push
arpl
push
and
xchg
mov
ja
inc
xchg
or
xor
loope
es
mov
xchg
lahf
insl
dec
fsubp
sub
dec
pop
lds
pop
lds
aad
rcll
mov
ret
mov
mov
pop
cmpsl
out
test
xor
cltd
scas
lea
je
clc
mov
add
adc
mov
mov
pusha
mov
pop
repz
jnp
dec
enter
test
call
sub
movmskps
mov
iret
add
les
or
arpl
cwtl
dec
ds
jge
mov
jnp
popa
imul
add
fiadds
mov
in
clc
divb
popf
roll
push
hlt
jmp
js
insl
push
pop
out
xor
cmp
repnz
and
adc
jmp
inc
cmp
or
fsubp
or
adc
pop
cmc
arpl
cli
jmp
pop
or
lock
and
insb
fdivrs
mov
mov
outsb
fcomi
mov
popf
add
dec
stc
dec
mov
fprem
pop
mov
jns
cwtl
cmpsb
adc
xchg
andb
add
inc
iret
mov
adcb
add
xchg
jle
ljmp
cmp
sbb
icebp
or
stc
sub
lods
cmp
lock
pop
ds
pop
and
add
leave
lahf
ds
dec
xchg
jb
dec
aad
inc
repnz
adc
xorb
pop
pop
mul
test
mov
repz
xor
out
subb
test
out
push
pop
ss
xchg
dec
ret
xchg
add
mov
sub
repz
mov
test
test
bound
adc
xor
pop
xor
push
jp
sbb
xor
mov
cmp
lcall
xor
stc
sub
ficoml
jmp
sub
push
xchg
stos
mov
mov
mov
rorl
lock
xchg
and
ret
scas
stc
xor
xor
mov
fs
cmp
adc
ret
and
sbbb
mov
fsub
push
pop
rcrb
add
pop
fs
xor
lahf
loope
mov
lds
mov
clc
and
mov
push
pop
or
int3
bnd
lea
mov
aam
cwtl
mov
sbb
popf
xor
inc
add
xchg
ds
das
jl
jb
and
les
sbb
stos
or
fcompl
lret
inc
xor
in
sub
xchg
ja
cs
xbegin
lds
adc
xchg
sbb
add
add
dec
xor
push
gs
stc
stc
loop
push
stc
hlt
mov
mov
xor
sbb
ficompl
fwait
mov
mov
dec
aam
xor
push
fnsave
adc
adc
cltd
pop
sbb
or
jp
std
add
sbb
clc
xchg
dec
fnsave
push
adc
mov
mov
sbb
stc
stc
adc
mov
in
or
mov
cmp
scas
xchg
mov
ret
movsl
dec
popf
dec
xchg
cmp
in
fsub
adc
ror
in
lret
leave
add
cmp
add
lods
sti
cmp
cs
mov
jmp
fisubl
jno
addr16
mov
int
add
pop
push
push
das
dec
das
pop
jmp
xor
pop
xchg
test
pop
leave
sbb
shlb
out
das
pop
insb
xor
jecxz
xor
enter
cmp
push
inc
scas
jnp
or
test
icebp
push
divl
pop
js
imul
mov
inc
xor
jg
inc
stos
sbb
push
insl
out
fldcw
popf
push
outsl
clc
push
mov
pop
pop
mov
cwtl
push
add
sbb
addr16
add
sahf
add
fildl
inc
cmp
cli
dec
cmp
sub
lods
push
sahf
fidivs
cli
fcmovne
mov
cmp
das
jg
insb
sbb
idivb
hlt
ja
daa
outsl
jne
mov
inc
xchg
add
and
mov
xchg
and
test
jbe
outsl
push
jae
mov
jmp
sbb
out
mov
addb
adc
xorb
dec
mov
mov
daa
test
push
rol
xchg
mull
js
insl
mov
cli
in
mov
mov
adcb
out
xchg
pop
pop
lahf
pusha
outsl
inc
jmp
inc
cmp
or
lock
jecxz
scas
fisubs
or
inc
or
subb
popa
fadds
xchg
clc
sahf
ss
mov
cwtl
in
popa
in
or
ret
sbb
push
jle
cmpsb
lods
ret
inc
sbb
pop
aas
pop
scas
pop
xchg
into
das
out
rol
scas
imul
mov
xchg
pop
int
pop
fldt
sbb
cli
push
int
or
pop
mov
shlb
and
dec
in
push
push
cmc
daa
enter
and
fwait
addl
jp
xchg
inc
adc
mov
add
loopne
roll
addr16
shl
pop
notl
pusha
or
add
fidivrl
cli
jnp
ss
clc
rolb
decb
mov
push
mov
inc
adc
mov
out
clc
pusha
movsb
fs
sbb
xchg
test
ljmp
data16
mov
pop
stos
ret
mov
push
push
xchg
push
dec
fistpll
outsb
jg
adc
jae
cwtl
sub
jecxz
in
adc
push
pusha
inc
cwtl
shll
pop
dec
xchg
jo
lds
push
cmp
lahf
jecxz
jp
jmp
loopne
daa
je
fwait
push
jnp
mov
mull
scas
jl
cwtl
mov
loopne
jecxz
push
lcall
mov
sti
test
dec
ror
sub
mov
fidivrs
push
cmp
push
std
ds
cmpsb
xchg
enter
xchg
jg
ret
stc
call
scas
lret
cmpsl
jl
insl
out
movsb
pop
fs
inc
xchg
adc
mov
jmp
jle
fbld
and
divl
cmpsb
fdivl
test
fs
iret
lods
sbb
inc
dec
pop
cmp
ljmp
mov
or
add
mov
outsl
inc
cmp
adc
dec
ja
out
add
push
dec
cmpsb
mov
repz
mov
and
xor
ret
jbe
cmpsl
out
repnz
int3
mov
sub
pop
mov
push
inc
adc
ret
repnz
rcl
lcall
adc
insl
mov
add
cmp
adc
push
inc
dec
imul
pop
mov
in
adc
jl
pop
push
push
setnp
lret
sarl
inc
sti
cmp
add
frstor
cmpl
lret
add
xorl
xacquire
push
test
pop
push
test
or
dec
mov
das
nop
jae
outsb
test
mov
cmp
dec
inc
push
repnz
clc
xor
adc
inc
jbe
sti
jg
xchg
push
inc
push
sbb
test
pop
or
mov
push
sub
push
inc
sbb
popf
jp
mov
cmp
test
inc
es
std
call
mov
dec
lret
mov
cmp
jecxz
subl
mov
mov
push
push
mov
jle
inc
fldcw
jle
rcl
gs
out
and
insl
ret
push
mov
sti
roll
and
dec
push
push
and
xor
call
lret
cmp
xchg
xor
push
nop
mulb
mov
xchg
dec
shll
jne
jnp
xor
insb
pop
popf
stc
fwait
cmp
hlt
sub
inc
add
leave
and
cmpsb
into
fisttpll
aam
sbb
fildl
jbe
cmp
sbb
bound
lret
inc
movsb
adc
nop
jne
inc
dec
incl
iret
adc
xchg
or
xlat
inc
js
std
lods
cmp
or
loop
imul
cmpl
push
loope
jo
mov
imul
xchg
or
xchg
inc
pop
push
out
cmp
dec
ss
cwtl
in
dec
mov
daa
inc
dec
dec
ljmp
enter
cltd
cmc
iret
push
mov
ret
testb
loope
inc
cmpsb
cmp
pop
xchg
cmpb
enter
jns
xor
adc
add
cs
mov
jmp
sbb
js
lcall
lret
cltd
mov
xchg
push
cld
xchg
aaa
rol
dec
jmp
dec
push
pop
aaa
push
dec
add
es
pop
add
sbb
sahf
testl
repnz
sub
shl
xor
add
inc
and
or
je
test
fcomp
sbb
imul
ficoml
das
dec
xchg
aam
call
lret
imul
inc
inc
cwtl
cwtl
mov
arpl
sti
pop
imul
xchg
test
jo
test
ss
push
or
js
push
jl
loopne
inc
mov
div
rclb
rcll
mov
mov
sub
orb
xor
shl
push
gs
ja
jge
jo
jmp
stc
or
in
xchg
data16
push
jmp
push
les
stos
mov
mov
pushw
cltd
mov
mov
dec
ljmp
jp
cmp
push
nop
and
repz
sub
and
scas
sbb
push
ss
rolb
sbb
push
add
jb
into
lods
fsubl
scas
mov
and
call
testb
or
dec
jl,pt
or
in
cmp
dec
push
mull
lods
ja
jo
push
xor
sbb
cs
xchg
mov
jmp
inc
cmp
xchg
out
shll
or
push
mov
mov
ds
adc
push
xchg
popa
add
mov
push
popf
sbb
repz
sbb
or
test
lock
sub
mov
fisubrs
mov
arpl
cmp
mov
cmp
mov
cld
xchg
sbb
sub
repz
rclb
jmp
jg
lods
test
mov
add
push
cmp
movsl
enter
lcall
mov
hlt
fwait
nop
sub
inc
and
setae
data16
mov
out
fildll
xchg
sbb
sub
sbb
ja
jl
fldcw
aaa
mov
pop
fists
dec
or
test
jbe
sti
lcall
inc
sbb
ret
push
mov
int3
ljmp
mov
scas
fwait
inc
in
sbbb
loop
mov
sahf
dec
mov
fdivr
lahf
xor
pop
ds
push
sbb
icebp
ret
out
mov
and
sbb
shlb
out
jo
cmpsl
dec
cmp
lret
rorb
in
es
push
jbe
test
fidivrl
out
cltd
pop
dec
mov
adc
test
push
mov
in
ret
leave
adc
adc
imul
pop
inc
push
and
pop
pop
sbb
jecxz
push
add
jp
push
add
pusha
test
test
cmp
movsl
push
xchg
subb
push
or
or
mov
mov
and
test
mov
ljmp
cmp
out
repz
rorl
jmp
hlt
mov
cmp
xchg
fwait
shrl
inc
lcall
lods
lret
cltd
sub
aaa
dec
push
cltd
int3
mov
fisubl
clc
lods
js
jle
push
js
test
enter
popf
mul
dec
fisubrs
jecxz
scas
push
lea
or
andb
push
lret
nop
jge
jbe
inc
test
push
dec
mov
xchg
adc
mov
test
or
mov
leave
pushf
shlb
js
push
add
xor
notb
insl
shll
dec
jecxz
jns
push
movsl
jmp
pop
cwtl
adc
cmpsb
ljmp
les
cltd
in
cmpsb
sub
loopne
jno
das
rcl
movsw
fs
add
imul
shlb
ficomps
insb
inc
ret
in
jge
mov
sahf
cmpsl
fiaddl
push
fbld
nop
mov
inc
mov
xchg
mov
movsl
mov
mov
stos
or
mov
mov
xchg
push
inc
mov
pop
andl
jnp
bound
andl
xchg
jns
adc
test
adc
pusha
push
int3
mov
mov
add
xor
sub
mov
or
ljmp
adc
push
je
sub
pop
inc
xor
dec
fistpll
daa
pop
push
in
dec
jo
mov
rorl
js
in
ljmp
jl
ss
shl
repz
push
or
sbb
js
stc
jbe
sub
jg
jmp
jmp
cmp
pop
or
lock
sbb
cs
mov
jo
jb
push
push
sub
stos
imul
fcmovnbe
sti
mov
adc
mov
adc
rclb
loope
test
fisttpl
fisubs
jb
mov
pushf
jns
imul
sahf
xchg
fucomp
pop
pop
prefetch
fldcw
daa
mov
xor
mov
pushf
loop
lret
dec
insl
and
jmp
sub
xchg
push
addr16
pop
lret
xor
cwtl
sub
push
pop
js
lcall
sub
icebp
cltd
cs
imul
std
adc
shll
out
inc
mov
ljmp
pop
or
fsub
rcr
jb
cmp
outsb
mov
mull
gs
mov
pop
sub
lret
and
sbb
mul
cltd
cmc
mov
xorb
addb
es
in
sbb
inc
pop
scas
int3
es
fldcw
addr16
sbb
push
pop
sbb
mov
push
data16
iret
sahf
inc
and
rorb
lret
mov
scas
pusha
add
mov
adc
pop
mov
cmc
jne
dec
in
sahf
aas
jp
or
js
fwait
push
dec
push
stc
jno
loopne
jle
outsl
cmp
loopne
adc
xlat
cld
loop
loope
xor
test
xchg
mov
leave
inc
inc
pop
lret
scas
jnp
jns
mov
jl
out
jae
xor
mov
mov
movsl
mov
fstl
vmwrite
stos
push
test
cltd
in
sub
add
sub
loopne
ficomps
mov
in
fists
bnd
rcl
ret
mov
lret
or
pop
and
mov
xchg
adc
stc
call
cwtl
or
inc
ss
call
jns
cs
es
xchg
xor
fists
out
mov
inc
mov
push
sbb
xchg
push
pop
ljmp
push
stos
add
insb
mov
or
jle
mov
mov
jns
dec
fwait
adc
out
jnp
xor
xor
or
leave
push
pop
std
sbb
mov
lcall
pop
mov
jo
js
movsb
ds
loope
dec
cmp
cs
dec
and
sbb
jp
mov
pop
sti
enter
jge
inc
gs
inc
into
pop
or
lret
ror
sbb
mov
cmpsb
lret
add
fs
loop
xor
xor
dec
movsb
cmpsl
mov
into
int3
add
mov
or
mov
adc
sub
mulb
in
adc
inc
xchg
sub
mov
push
xchg
rcll
add
fstpl
in
sub
cmp
std
imul
pop
lret
push
movsl
pop
hlt
popa
inc
xorb
data16
dec
xchg
dec
mov
xchg
test
dec
jae
sbbb
xor
repz
inc
lcall
mov
push
dec
les
fsubrs
sbb
repz
jge
push
call
add
imul
xorl
push
mov
sarl
xchg
enter
fwait
clc
test
cmp
dec
cs
jl
in
call
out
push
pop
adc
gs
inc
push
mov
fidivrs
cs
or
cwtl
outsl
dec
mov
jnp
push
call
mov
cltd
xor
ficoms
shl
lcall
adc
push
sarl
ret
dec
or
xor
jecxz
into
sub
sar
hlt
fs
mov
mov
js
lods
pop
jl
push
arpl
in
out
scas
xor
icebp
ret
aas
lock
adc
mov
js
mov
je
daa
mov
je
fcomi
and
or
jge
xlat
xlat
out
mov
sahf
and
adc
push
aaa
sar
pop
arpl
aas
mov
cmp
mov
repz
jo
push
lahf
push
sbb
imul
mov
xchg
pop
sbb
fsub
std
pop
sbb
xor
pop
adc
das
es
add
add
jge
jle
xor
int
jbe
loopne
mov
pop
insl
cld
cld
xor
imul
hlt
push
push
mov
cmp
or
jmp
xor
xchg
mov
arpl
ret
pop
sub
push
out
arpl
lds
popf
lds
pop
popa
je
scas
mov
dec
incb
in
mov
cmp
dec
sbb
adc
aaa
stc
mov
inc
aam
add
xchg
pop
ret
jmp
dec
mov
xlat
iret
cs
sbbb
ds
mov
adc
pusha
in
xchg
jmp
iret
cmpsb
sbb
pop
cmp
push
cli
out
leave
leave
sub
loope
fsubl
sahf
sbb
cmpsl
adc
mov
inc
xlat
jno
les
inc
and
pop
mov
inc
scas
jecxz
inc
pop
je
sub
out
inc
push
lock
stos
test
dec
inc
popa
call
iret
popf
jns
and
adc
sub
fnstsw
mov
scas
lock
scas
sbb
jg
std
dec
lcall
lods
mov
sbb
mov
add
nop
incl
inc
out
adc
xchg
dec
scas
or
ja
test
sbb
fisttpll
mov
mov
dec
mov
or
cmp
xor
repz
rcr
test
push
aad
mov
jge
push
pop
mov
das
push
mov
es
js
daa
jle,pt
adc
xchg
or
enter
xchg
xchg
push
aam
sahf
es
fldpi
std
scas
inc
inc
test
fildl
sbb
xchg
pop
addr16
cmpl
inc
pusha
inc
mov
and
iret
test
mov
ds
xchg
orb
pop
test
or
and
xlat
adc
jge
aad
rsm
add
jae,pt
and
faddl
icebp
jle
mov
inc
test
sbb
adc
mov
sub
inc
outsl
adc
mov
and
iret
dec
mov
jnp
roll
sub
mov
jns
sbb
lods
mov
shrl
xchg
outsl
idiv
stc
scas
dec
or
int
int3
jmp
je
jo
jge
test
imul
adc
test
push
mov
ret
sub
ja
jo
jne
pop
push
mov
imulb
and
mov
inc
jg
stos
jge
aaa
push
cltd
test
mov
nop
cs
ds
sbb
in
jp
repz
sti
fiaddl
add
adc
insl
popf
mov
int3
out
or
mov
idivb
pinsrw
pop
xchg
daa
sarl
jb
sbb
fstl
dec
xlat
push
mov
or
in
sti
push
mov
cmc
das
inc
inc
es
outsb
sete
rorw
jmp
ffreep
adcl
mov
int3
jno
sub
xor
jo
adc
mov
sub
and
add
jbe
jae
mov
call
xor
fdivrl
inc
dec
test
cli
xorb
popa
inc
out
stos
les
cmp
fidivrl
scas
mov
xor
int3
cmc
pop
or
dec
mov
jnp
lods
cmpsl
pop
movl
xchg
or
out
jo
xor
lea
lret
add
push
in
push
push
jle
cltd
add
scas
dec
inc
test
mov
and
js
cmp
jnp
or
mov
fwait
enter
or
stos
cs
test
bound
add
add
mov
pause
fnstcw
ret
sar
push
or
xchg
jns
lods
push
sbb
std
sbb
push
cwtl
inc
jg
adc
mov
add
mov
jle
or
dec
in
and
mov
shll
rolb
xchg
sub
sahf
call
into
xor
aad
scas
cmp
xchg
leave
popf
xchg
int
je
mov
push
mov
int3
ret
bound
mov
xor
shr
mov
jl
jp
xchg
add
fsubr
fldenv
add
div
scas
aam
mov
mov
push
dec
pop
adc
cmp
jbe
pop
popa
inc
cltd
ret
leave
pop
or
sbb
xor
sub
daa
and
sarb
loopne
lock
add
and
mov
xor
xchg
xchg
xchg
xor
mov
push
mov
inc
jae
sbb
adc
push
addr16
test
ret
pop
sub
popa
or
jo
mov
jmp
mov
jbe
mov
loopne
push
scas
in
push
cld
sub
add
scas
xor
pop
and
xor
subb
sbb
inc
jmp
sbb
xor
push
aam
test
cld
aad
out
fmul
mov
lret
cmp
sbb
mov
xor
loop
stos
xchg
jecxz
xor
mov
clc
mov
sub
bsf
mov
mov
mov
jp
inc
lahf
push
je
fisttpll
pop
inc
movsb
jge
adc
sbb
xchg
or
adc
sub
cmp
std
or
movsl
cmpsl
movsl
cmp
inc
in
sub
cld
adc
jge
mov
push
rcll
arpl
lds
into
xor
out
pushw
push
xchg
mov
mov
push
sbb
cmp
icebp
mov
in
cmp
arpl
in
push
push
push
xchg
sbb
push
pusha
das
sahf
jge
test
pop
xchg
adc
dec
jle
fsubrs
orb
repz
mov
mov
cmp
ljmp
xchg
ja
leave
aad
sti
add
and
adc
sarb
mov
mov
jle
loop
stos
dec
jns
pop
addb
pop
in
push
stos
pop
scas
bound
mov
lea
inc
fcoml
fistpl
int
out
mov
sub
inc
adc
idivb
add
loop
nopl
mov
add
outsb
fcmovnu
mov
jb
fcompl
cmpsb
imul
inc
xchg
out
data16
cmp
daa
loope
aaa
pop
out
inc
test
mov
pop
xorb
mov
popa
inc
enter
addb
jns
push
push
shlb
cmp
jb
fsts
jmp
mov
jl
cs
sbb
popa
jp
inc
push
mov
in
xchg
cwtl
push
jl
cmp
adc
jmp
outsb
or
int
mov
out
lea
and
lea
cli
or
fisttpll
imul
into
inc
das
loop
xor
in
andl
mov
fwait
in
and
sub
or
sub
ljmp
lods
inc
jp
mov
into
ret
mov
sbb
xor
xchg
mov
adc
mov
mov
fcom
fistps
jmp
shl
dec
ss
dec
inc
mov
out
push
push
jns
popf
sbb
mov
xor
lahf
je
cwtl
inc
jo
sahf
imul
subb
push
gs
xlat
mov
mov
fisubl
movsb
push
repz
iret
jge
sbb
aam
iret
mov
mov
cmp
push
data16
es
dec
add
lea
fcmovu
pop
mov
ljmp
loope
and
xor
sahf
jb
cmp
inc
frstor
push
dec
push
mov
mulb
cmp
mov
inc
in
dec
outsb
es
pop
dec
das
cltd
in
add
mov
out
orb
aam
jne
clc
rclb
push
inc
push
mov
cmp
pop
icebp
loop
test
loope
jecxz
loopne
es
xor
mov
xchg
je
lcall
dec
pop
jne
push
mov
lods
mov
jb
insb
pop
mov
inc
jge
jecxz
jnp
ds
dec
cmpsb
jbe
pop
pop
sub
ja
adc
jne
xchg
sub
add
andl
aaa
jns
mov
xchg
addl
in
out
addl
negl
daa
mov
cmp
jge
push
jle
aam
mov
mov
jne
stos
insl
fxch
sub
enter
adc
fst
popf
inc
clc
xchg
jnp
mov
cltd
inc
inc
outsb
and
idivl
jl
cltd
pop
mov
shlb
pop
pop
inc
cmp
or
jno
fnstenv
sub
cli
ss
sbb
inc
ret
xchg
imul
dec
inc
mov
adc
aas
and
mov
ret
jle
xchg
dec
push
mov
jl
mov
fsubl
test
out
jg
cmpsl
sub
xor
insl
lret
or
push
lock
cld
flds
ja
jmp
or
pop
dec
jecxz
push
jo
or
xor
out
stos
shll
cwtl
xchg
adc
pop
in
push
or
jmp
jno
jle
les
dec
loop
jno
lret
rcrl
inc
add
ss
add
shl
xor
push
xchg
fsts
xor
in
push
mov
or
adc
or
adc
js
mov
adc
pop
lahf
gs
jae
loop
xchg
xchg
ja
xchg
dec
pusha
add
fidivl
sub
pop
sbb
std
push
jno
sbb
jmp
jl
ret
xchg
loopne
sbb
lahf
pop
mov
pop
inc
nop
pop
dec
xor
inc
js
mov
mov
pusha
call
cmp
mov
jmp
dec
adc
test
out
popf
andl
into
jnp
in
cmpsl
test
jbe
xor
sbb
mov
push
std
jns
inc
mov
push
les
mov
push
lcall
jge
jl
adcl
lret
mov
mov
mov
lea
xchg
xchg
mov
jae
mov
xor
ja
cmpsb
lahf
jecxz
cmp
xor
test
repnz
and
jb
mov
test
lds
xchg
pusha
cmpb
lods
mov
int
pop
xor
inc
in
mov
pop
mov
repnz
int
inc
bound
push
imul
cmp
mov
in
pop
out
in
dec
cs
or
xor
adc
fsub
lock
std
mov
jo
cmpsl
dec
fimull
pop
push
jmp
jle
lret
adc
icebp
pop
fwait
rol
aas
cmp
popa
push
lods
aas
jo
lcall
xor
mov
test
add
pop
paddd
addps
outsb
data16
push
movsl
sbb
jl
je
es
gs
jne
dec
add
in
xor
popa
or
loope
mov
into
inc
cld
addb
ja
pop
adc
push
mov
dec
xor
ret
fisubrl
mov
scas
mov
aam
add
repz
mov
or
in
fldl
leave
aad
mov
sbb
or
xlat
xchg
cld
push
push
int3
loopne
ljmp
xchg
push
pushf
arpl
push
out
mov
ret
sahf
add
jecxz
ds
sbbl
cwtl
or
and
fdivrl
inc
incl
add
imul
dec
mov
aaa
inc
sbb
in
lret
jge
stos
pop
je
movsb
sub
push
mov
add
mov
popa
and
xchg
xchg
repnz
inc
repnz
rcrl
les
lahf
cwtl
push
jle
scas
fcomps
sbbl
cmp
sbb
lods
pop
jl
cli
aas
lods
xchg
fldt
insl
int
test
cmp
jb
mov
js
cld
dec
sarl
push
and
ret
pop
sub
sub
mov
shll
imul
ficomps
sar
xchg
xor
mov
mov
sub
fistl
pop
sbb
xchg
shrb
bound
cmp
stos
push
popa
cmp
pusha
ljmp
pop
test
push
clc
jge
mov
icebp
fdivrs
cmpsl
mov
std
add
call
sbbl
add
jl
daa
aad
mov
idiv
gs
push
cmp
hlt
and
std
mov
vmwrite
xchg
in
xor
xchg
neg
mov
add
jle
ja
mov
push
mov
ljmp
mov
mov
test
xchg
add
or
xor
inc
lcall
xchg
xor
test
pop
pushf
in
mov
xchg
mov
or
jg
or
and
jmp
popf
pop
loope
sbb
dec
lahf
push
stos
and
xchg
popf
mov
inc
movsl
mov
jmp
sahf
and
movsb
mov
js
pop
ret
and
jne
jg
dec
inc
fadd
lock
mov
pop
adcl
loopne
popa
fsub
inc
jbe
adc
int3
inc
dec
xor
adc
mov
pop
mov
idivl
pop
ss
jge
mov
je
insb
fsts
lea
mov
xlat
adc
add
or
add
js
pop
cwtl
cmp
push
sub
mov
sti
add
xchg
xchg
sbb
out
enter
stos
or
cmpsl
add
mov
cmp
and
rcr
dec
jge
pop
add
shrb
xchg
push
divb
add
mov
iret
add
and
dec
lcall
mov
jge
dec
divb
outsl
lds
jns
xchg
sbb
mov
add
push
jae
mov
rorl
dec
mov
inc
jbe
stc
inc
jae
sub
lods
and
les
push
mov
fs
xorl
pusha
sub
push
add
or
sbb
add
adc
mov
aad
sahf
and
adc
ret
and
dec
add
insl
jg
insl
inc
push
icebp
jnp
push
gs
pop
rep
test
pop
inc
jno
jnp
mov
adc
repnz
pop
mov
sub
mov
mov
push
push
les
xorb
pop
rorl
cli
je
lods
mov
insb
ds
pusha
fwait
xchg
mov
mov
aas
adc
scas
xchg
out
movsb
mov
jge
xor
adc
xlat
sti
repz
incb
out
inc
fbld
inc
test
sub
push
pop
cld
mov
sahf
stc
jmp
xchg
add
pop
gs
sbb
pop
test
sbb
or
addr16
mov
mov
cltd
repnz
mov
mov
or
test
int
or
mov
mov
xor
adc
or
test
cmpsb
mov
ja
test
or
icebp
icebp
mov
rcrb
mov
stos
xchg
lock
mov
imul
jle
mov
xor
insb
les
xchg
ja
sub
aam
or
stos
mov
scas
data16
int
push
out
iret
lock
mov
jl
sub
out
mov
mov
jb
xor
in
jl
divb
sbb
jmp
pop
ljmp
mov
push
xchg
jg
stos
fisttpl
add
cmpb
adc
cld
idivb
xchg
pop
and
stos
mov
jae
mov
jbe
pop
inc
add
pusha
sbb
pop
popa
mov
into
cmp
scas
push
inc
and
add
sahf
dec
cmpsl
gs
jg
xchg
cs
outsb
mull
fisttps
out
mov
sarl
fidivrs
popl
mov
fsubrs
sub
jne
scas
dec
lahf
das
insl
pmullw
cs
pop
mov
sbb
roll
test
push
out
push
mov
sub
leave
sbb
pushf
ss
lret
push
orl
int3
or
int
jg
fimuls
xchg
mov
dec
mov
sub
sbb
dec
and
negl
popf
push
push
iret
mov
movsb
push
aam
repz
jmp
mov
adc
pop
call
sbb
mov
mov
out
scas
sub
orl
insl
ljmp
xchg
lret
dec
aam
mov
push
lea
cmpb
mov
out
dec
dec
in
push
out
pop
imul
sbb
icebp
xchg
gs
cmc
push
sub
adc
pushf
lods
sbb
push
outsl
aas
pushf
push
stc
jb
mov
mov
fldt
aad
push
add
jle
hlt
sub
mov
outsb
sbb
jae
andl
pop
add
inc
cmp
mov
and
inc
and
fidivs
pop
in
xor
jmp
pop
pop
or
insb
inc
mov
cmpsl
cs
into
xchg
inc
lcall
and
push
test
mov
jb
je
sub
mov
add
sbb
add
push
push
mov
xor
div
test
mov
cmp
sub
lret
pop
data16
pusha
push
jl
stc
jmp
adcb
jp
popf
mov
pop
movsl
sahf
popf
stos
xor
lret
arpl
loope
mov
mull
mov
xor
mov
pop
add
stos
addb
push
pop
sbb
pop
xchg
and
dec
adc
pushf
arpl
dec
lcall
pop
dec
icebp
pop
push
or
mov
divl
sbb
in
scas
mov
stos
loop
push
xchg
adc
testl
aad
adc
movsl
jae
mov
in
int
out
mov
pop
mov
add
mov
mov
add
into
arpl
shrb
mov
jle
push
scas
je
lret
pop
mov
ret
shl
xor
mov
testl
cmp
sub
add
leave
adc
cmp
loopne
jmp
jge
mov
mov
es
mov
dec
xchg
pop
xchg
in
int
add
lret
shrb
pusha
add
stc
repz
lods
mov
jp
jb
mov
lea
enter
jae
je
fistpll
jmp
xchg
pop
jno
mov
cmp
in
dec
or
and
js
push
sub
sbb
or
inc
inc
loop
je
mov
cld
into
lret
or
dec
push
and
lcall
das
pushf
dec
bound
lret
add
mov
jg
push
aaa
mov
cmp
es
loope
mov
loopne
mov
int
push
and
ret
pusha
outsl
cltd
or
repz
cmp
cmp
in
int3
push
dec
xlat
outsl
in
dec
dec
mov
das
lods
outsb
loope
loopne
adc
fistpll
loopne
jnp
in
scas
fisttpl
mov
dec
add
cmp
sti
pusha
or
sub
inc
and
cmpsb
xchg
xchg
mov
mov
inc
bswap
fildll
xor
testb
xor
jg
fsubs
xchg
aam
xor
inc
xchg
jae
fstps
stc
ljmp
je
fsubrs
inc
icebp
mov
xchg
js
lret
mov
cmp
inc
inc
clc
mov
dec
push
cmp
call
add
sub
sarl
clc
sbbl
out
push
sub
pop
div
inc
xchg
mov
test
dec
ds
stc
xchg
adc
fdivrl
stc
test
adc
and
jle
orb
mov
adc
leave
mov
sub
push
repnz
leave
adc
dec
sar
ret
in
test
ret
push
stos
add
xchg
sbb
mov
shll
mov
sbb
mov
ljmp
cmp
cs
xchg
pop
ud2
std
mov
lahf
mov
lea
mov
std
daa
push
dec
lret
addr16
int
cmp
or
cs
fsubrs
arpl
ret
pop
push
loopne
ja
stos
clc
icebp
adc
les
movsb
xchg
cld
out
sub
xlat
lds
or
sbb
out
stos
and
mov
sbb
mov
jns
pop
ret
push
in
sub
sbb
inc
xor
pop
and
jg
loope
jg
xor
arpl
dec
test
xor
cmp
mov
and
iret
out
pushf
das
ret
rcrb
mov
lret
dec
fimuls
rcll
or
data16
js
cmpsl
in
movsb
ret
inc
dec
test
lea
cltd
rorb
je
out
data16
mov
and
push
andb
xchg
jbe
ljmp
or
bound
pusha
lahf
xor
pusha
xchg
pop
mov
and
mov
cltd
pop
gs
ss
jnp
xor
push
push
jmp
outsl
sub
repnz
dec
push
jno
ja
and
inc
inc
dec
xor
add
aaa
test
in
inc
sub
cli
hlt
in
push
cmp
in
sbb
pop
ret
lret
dec
out
lods
sub
movsl
insl
dec
adc
ds
jp
xor
dec
int3
icebp
fcmovnb
jmp
adc
iret
lcall
in
cli
lock
jecxz
std
lcall
aas
pusha
shlb
lahf
lea
das
mov
pop
sahf
scas
dec
jge
inc
jns
adc
fsubrs
mov
xchg
les
aas
xor
scas
cmp
add
sub
jnp
fwait
mov
lock
pop
add
dec
repnz
pop
jle
rorb
or
addl
aaa
xor
mov
popa
rolb
lods
insb
cwtl
divps
nop
add
imul
sbb
rorb
aaa
movaps
jo
es
or
or
xchg
sub
and
mov
insb
xchg
fcomps
mov
cvtpi2ps
dec
sahf
scas
mov
stos
into
cli
pcmpeqb
pusha
lods
bound
aas
lcall
shlb
int
cli
rcll
sbb
push
dec
cld
enter
test
dec
xchg
incb
pop
jl
into
lea
cmp
cmp
mov
mov
in
pop
push
jl
cltd
in
loope
dec
push
jge
movsb
iret
int3
dec
pop
mov
mov
sbb
std
arpl
rclb
fisubs
sub
fisttpll
push
and
ljmp
xchg
movsl
pop
lock
out
outsb
lds
outsl
mov
mov
cmp
test
adc
jne
cltd
negl
dec
outsb
or
mov
jg
mov
aad
xchg
inc
dec
mov
jo
jp
addr16
lock
aam
rolb
jb
test
jns
fisubrs
push
mov
and
add
lds
jg
pusha
ss
mov
pusha
jp
jno
jge
outsb
xchg
push
xchg
fistps
sbb
in
sbb
push
inc
adc
dec
xor
add
push
cmp
dec
push
mov
sub
addr16
mov
mov
jle
enter
jp
iret
fisubrs
jno
data16
testb
rol
ja
xchg
mov
clc
pusha
push
inc
dec
push
loope
xor
mov
test
ret
outsl
adc
insl
cmp
push
mov
aaa
or
into
jbe
stos
push
jmp
push
dec
ret
out
xchg
mov
leave
loop,pn
push
mov
sbb
push
adc
add
loop
in
mov
inc
inc
repz
iret
ret
iret
cwtl
fnstsw
outsb
and
sub
add
add
xchg
push
xchg
push
lods
inc
mov
or
add
mov
lock
or
scas
xor
out
xchg
mov
lods
popf
lods
mov
lods
fcmovnb
xchg
lret
pop
inc
dec
in
jo
mov
xchg
cmp
mov
lahf
clc
fst
jl
ror
jae
clc
sti
push
fstpt
adc
mov
lahf
inc
test
shll
xchg
outsb
sbb
jae
push
imul
les
xorl
fsts
subl
pop
stos
enter
jmp
mov
in
ja
lds
aad
dec
or
mov
cwtl
push
aas
mov
iret
mov
ret
sub
push
add
sbb
into
mov
jns
rcll
push
dec
adc
dec
or
or
ret
popf
xchg
sub
insb
mov
push
pop
push
popf
and
dec
out
insb
sub
or
fs
pusha
sbb
mov
mov
inc
jmp
lods
testb
pusha
rorb
or
pop
popf
mov
iret
inc
insb
jne,pt
adc
xor
or
int3
sahf
push
push
clc
shlb
jmp
push
inc
adc
mov
add
fisttps
mov
fnstcw
fldl2e
cmp
mov
negb
mov
stos
push
mov
sub
popa
je
and
inc
mov
fidivrl
jecxz
shrb
loope
dec
pop
xor
sub
push
out
dec
dec
push
jnp
daa
stos
shrl
sbb
mov
stos
fimull
mov
adcl
xor
int3
mov
cmpsl
cmp
pusha
or
test
push
les
and
and
jp
sti
add
xchg
fisttpl
cmp
iret
mov
in
pop
push
int3
jg
pushf
push
xchg
dec
push
data16
fmuls
or
lods
jns
pop
subl
jo
or
addb
mov
testb
shl
add
dec
imul
mov
fidivrl
xorl
mov
add
xorl
adc
mov
fsubrs
jl
and
ss
pop
mov
push
push
jp
lds
inc
xor
xor
int3
mov
mov
push
test
push
adc
into
push
cli
bound
mov
rcl
in
out
xchg
and
or
sti
pop
mov
add
push
aad
mov
cmc
sbb
adc
scas
mov
les
fwait
dec
fcmove
sub
flds
sbb
fcomps
cli
test
cmp
jge
sbb
add
fidivl
add
lret
jns
repz
lds
sub
das
loop
mov
mov
ja
mov
or
ret
push
push
out
pop
gs
test
or
lea
xor
jo
loopne
fcoml
mov
mov
test
addr16
stos
fdivl
outsl
push
or
pop
mov
fiadds
and
cmp
lea
mov
movsl
inc
mov
aaa
cli
mov
shll
arpl
or
push
mov
pop
call
in
lret
sbb
add
lods
inc
add
arpl
gs
or
fcoml
push
out
jl
jg
arpl
push
mov
insb
arpl
jp
sub
stos
rcrb
sbb
jecxz
xor
cmpsl
xchg
xor
idivb
cli
sbbb
aam
add
sbb
dec
idivb
out
int
mov
xchg
jne
mov
mov
inc
aas
push
mov
dec
int3
push
div
aam
mov
sbb
fldt
fdivrs
cli
lret
pushl
int
daa
hlt
mov
out
ljmp
xor
jno
mov
fmull
xchg
inc
mov
addl
sub
divps
shl
fcmove
aaa
pop
sti
xor
cltd
dec
inc
inc
movsl
or
outsl
sub
mov
adc
out
mov
or
pop
pop
sbb
xchg
ljmp
rclb
pop
std
sbb
xlat
das
mov
ret
ljmp
jecxz
push
sti
jns
fnstenv
inc
mov
push
std
dec
mov
ljmp
fildll
das
mov
xor
dec
cld
push
cltd
push
out
daa
lcall
xchg
or
jbe
inc
stos
xor
jbe
sbb
leave
sarl
and
shl
dec
jl
cli
cmp
add
in
xor
xchg
push
iret
into
sbb
xchg
mov
jge
call
sbb
gs
and
sbb
in
out
ss
js
xchg
push
jp
mov
int
mov
call
sbb
add
or
aam
mov
lock
mov
fistl
push
adc
push
loope
adc
push
jae
mov
pop
mov
jbe
in
lods
pop
jne
inc
adc
addb
mov
call
jg
lret
aam
xor
sub
mov
mov
les
insb
or
outsl
xor
lods
je
adc
popf
mov
enter
ret
enter
fucomi
cvtpi2ps
cld
mov
sub
scas
lret
xchg
lcall
and
dec
push
scas
loopne
mov
xchg
popa
call
cld
outsl
sar
sub
and
sub
int3
icebp
lret
adc
fbstp
jno
jbe
jmp
mov
lock
adc
lret
inc
rclb
nop
cli
icebp
and
cmpsl
sbb
ret
aas
xchg
pop
pop
and
out
je
hlt
inc
test
lahf
cli
lods
loopne
jle
jg
cltd
push
in
xchg
setge
dec
sahf
orl
inc
pop
shl
cs
push
fucomi
adc
int3
and
inc
inc
inc
inc
fstl
insl
rclb
fimuls
pusha
push
push
ror
mov
pop
cmp
inc
lret
imul
adc
gs
sahf
int3
and
add
std
jl
jg
xchg
das
pop
insl
mov
jnp
cmp
push
and
pop
jbe
repz
cmp
shlb
mov
xor
adc
and
outsl
jecxz
js
aad
aas
js
popa
popa
test
arpl
int
pop
popf
fisubl
or
inc
push
xchg
movsl
sarb
xor
nop
pop
sbb
lds
subb
xchg
mov
cmc
pop
in
add
shl
cmc
in
ss
jbe
push
mov
lahf
xchg
xor
mov
xchg
push
iret
and
xchg
mov
sarl
pop
sbb
dec
mov
das
test
add
ss
jno
cmp
xchg
rcr
icebp
xchg
fisubl
jno
mov
cmp
push
test
lods
or
loop
ljmp
daa
insl
add
pop
xchg
mov
lods
inc
fdivrl
pop
std
push
cmp
sahf
or
out
adc
fistpl
sub
lea
cmp
adc
ret
or
inc
or
call
pop
cs
jae
mov
cmpsb
cmpsb
inc
mov
dec
cmc
xchg
test
push
jecxz
pop
lods
outsl
incl
repz
inc
xchg
cmc
pop
and
jbe
daa
loop
push
icebp
add
lcall
negb
mov
fcmovne
les
ds
mov
dec
add
out
inc
cld
dec
popf
ja
dec
sarb
outsl
push
lds
movsb
imul
mov
lods
mov
leave
fsubr
data16
pop
push
mov
jp
mov
movsb
xchg
sbb
add
mov
lahf
sub
mov
pop
das
mov
jnp
dec
sub
jl
sbb
aaa
arpl
or
loopne
orb
addb
mov
add
push
pop
into
sub
jbe
xor
and
bound
pop
out
pop
stc
lahf
xchg
mov
jmp
mov
outsb
mov
shlb
jg
shlb
or
jno
cmpsb
and
xchg
inc
decl
jns
shlb
jecxz
adc
shlb
pop
cmc
int3
adc
or
imul
xorb
inc
adc
dec
and
sbb
mov
enter
mov
xorl
fnstsw
dec
stos
repnz
push
jl
mov
jnp
mov
inc
xor
cmpsb
test
dec
pop
mov
lds
sub
mov
ficoml
inc
xchg
jge
sbb
mov
jecxz
scas
mov
cmp
pushf
jmp
filds
jle
cli
cltd
ja
out
data16
ss
aaa
or
push
icebp
movl
pop
test
fucom
pop
push
stc
add
ret
mov
lds
and
test
mov
scas
or
out
into
aad
add
popa
mov
aas
push
inc
in
mov
sub
add
jge
sub
jnp
lock
outsb
daa
pushf
push
jmp
jno
and
popa
mov
ljmp
dec
jl
ret
cwtl
or
lods
das
jo
out
lret
push
and
or
mov
aas
inc
sub
push
lods
rorl
out
sub
jecxz
sbb
sar
scas
sarl
loop
mov
adc
imul
or
inc
pop
pop
jne
or
stos
inc
arpl
ret
fisttpl
outsb
mov
mov
or
or
in
mov
dec
lds
idivl
std
cmpsb
fs
ror
lods
das
xchg
sbb
cwtl
test
in
mov
dec
jae
lods
add
jno
leave
dec
sbb
sbb
inc
jae
out
test
test
pop
lea
push
and
cwtl
jle
int3
lods
add
dec
pop
out
push
nop
or
lret
in
rcrb
push
inc
inc
lods
cmp
jecxz
lods
jmp
lret
std
shlb
sbb
xchg
scas
ficompl
cmp
outsb
frstor
js
scas
sbb
pop
jns
popf
xchg
cmp
stos
addl
push
imul
decb
rcrl
inc
xchg
rorb
add
mov
ja
adc
xchg
sub
dec
adc
cli
es
dec
inc
insb
jbe
shlb
insb
sub
aad
cmp
mov
fistpl
xchg
adc
lahf
loopne
icebp
jl
pop
sahf
xchg
orl
xor
xchg
mov
mov
mov
jg
pop
cmp
icebp
lea
push
adc
icebp
push
mov
jmp
sub
movsl
mov
cmp
and
les
sub
xor
jns
pop
pop
cmp
and
jecxz
mov
add
adc
out
jbe
jne
mov
outsb
js
aas
mov
sbb
aam
cmpsl
dec
mov
insl
xor
xor
jle
addb
pop
out
dec
dec
jp
jae
ret
lods
aaa
repz
cmp
les
push
xor
push
fistps
mov
das
pop
mov
xor
aaa
icebp
xchg
pop
pop
mov
or
in
imul
cmpsb
repz
mov
ja
push
inc
inc
push
push
int3
jns
xchg
xchg
sahf
mov
ret
adc
ljmp
xor
adc
cld
mov
outsl
out
push
cwtl
lcall
scas
scas
mov
mov
xor
sbb
sbb
mov
int3
push
insb
nop
mov
out
dec
cs
inc
mov
lcall
shl
pushf
mov
xor
mov
in
adc
ror
mov
mov
ljmp
repnz
xchg
sbb
dec
int3
mov
cmpsl
ds
xor
test
sbb
test
popa
sbb
mov
fldl
out
gs
das
cs
les
push
out
sbb
fisubl
sub
lahf
push
push
icebp
and
shl
test
mov
rcl
add
and
sti
shrb
mov
clc
enter
dec
lock
inc
insl
in
loopne
cmp
mov
mov
push
frstor
gs
mov
pop
add
aad
imul
shr
xor
stos
push
cmp
pop
lcall
arpl
out
dec
test
pop
aaa
int3
cmp
outsb
mov
fcmovbe
push
xchg
push
addr16
imul
scas
into
bndstx
inc
jns
ficompl
loope
ret
xchg
inc
jne
repnz
fisttpl
mov
insb
inc
cmc
into
jbe
pop
push
push
cli
inc
xchg
jnp
pusha
stos
dec
xor
inc
xchg
lods
mov
jge,pt
mov
rcl
sub
dec
jge
ret
filds
call
sbb
mov
xor
xor
push
je
jp
xor
dec
ret
mov
out
inc
jno
sub
rolb
xlat
sbb
add
clc
in
int3
cltd
lcall
inc
jnp
arpl
inc
lahf
push
push
cmpl
lods
shll
adc
pop
fdivr
rep
pop
aam
sub
mov
stos
enter
mov
test
xchg
pop
mov
test
nop
repnz
mov
push
or
sbb
lods
in
add
mull
iret
in
lret
cmpb
clc
inc
fwait
insw
xor
push
and
add
bound
int
stc
mov
push
mov
mov
dec
xlat
scas
ss
push
lcall
lods
lds
icebp
or
lods
mov
jne
cmp
xor
js
cmp
jl
ret
or
in
cld
icebp
add
xchg
imul
mov
ja
inc
adc
cmp
sub
stc
pop
in
fisubl
pop
sub
sub
push
mov
in
mov
push
sub
mov
adc
pop
or
pop
mov
nop
push
mov
inc
ss
mov
jb
shrl
mov
arpl
dec
popa
insl
sbb
mov
cld
inc
pushl
int
ds
stos
mov
or
ret
adc
push
dec
inc
loopne
cwtl
xchg
fwait
sub
mov
out
daa
sti
ret
cmpsb
inc
cli
iret
addr16
gs
mov
out
idivb
mov
adcb
insl
jb
xor
fnstcw
push
jecxz
pusha
ja
cwtl
cmp
sub
xor
jb
mov
movsl
popf
add
daa
cmp
lock
out
push
and
sub
xor
fisubrs
jg
mov
mov
rorb
xchg
jl
sub
dec
xchg
xor
incl
add
cmpsl
nop
imul
sub
jae
adc
pop
enter
push
or
icebp
nop
fwait
ja
mov
scas
leave
dec
or
and
or
mov
sub
or
aaa
xor
jmp
mov
inc
imul
andb
fildll
sbb
xchg
call
ja
sbb
cltd
jp
dec
and
fistpl
pop
arpl
and
shr
push
lret
rep
in
lea
pop
jecxz
xorb
jle
dec
in
sub
cmpsb
ja
pushf
pop
cmp
lcall
lret
push
daa
cmp
jne
or
stos
add
adc
adc
aam
js
sub
jge
rcrb
iret
push
dec
mov
dec
cs
dec
cwtl
add
repz
fiadds
push
mov
nop
movl
add
sub
xlat
adc
mov
sub
popf
jp
scas
mov
in
push
mov
sbb
outsb
push
xor
dec
shr
loop
xchg
out
mov
xchg
push
jl
shl
mov
std
and
mov
in
outsb
adc
out
dec
mov
or
cmpsb
mov
or
jne,pn
add
lcall
call
add
enter
xchg
jno
mov
aad
mov
aam
xlat
hlt
cmp
or
fmull
adc
push
lea
or
mov
jl
and
popa
jmp
lds
std
aad
int
xchg
jle
outsb
pop
pop
dec
movsl
cwtl
mov
out
loopne
fwait
push
repz
aam
fdivrs
mov
vucomisd
inc
or
push
or
sete
adc
jg
sbb
mov
xlat
mov
clc
mov
fxch
imul
or
jne
aaa
dec
jnp
pop
pmaddwd
push
cmp
mov
or
je
cmp
mov
xchg
xchg
ficomps
sbb
lret
inc
sbb
ss
sahf
fsubrp
rolb
std
and
test
pop
push
inc
jg
dec
in
dec
xor
xor
pop
xchg
stc
fsubr
in
or
sub
outsb
xchg
jbe
xchg
addl
sbb
jne
mov
aaa
fstp
jb
rcrl
mov
outsb
dec
jnp
aad
iret
in
lret
adc
sub
stos
and
aas
inc
dec
cmp
pop
ss
pop
loopne
or
lock
push
jmp
adc
and
pop
popf
xor
dec
enter
mov
adc
ret
daa
inc
or
sub
mov
mov
sbb
sarl
add
inc
mov
pop
sub
rcrl
jbe
inc
movl
imul
outsl
seto
add
in
es
push
dec
int
mov
push
lds
inc
xchg
mov
sbb
pop
mov
pop
movsb
and
popf
mov
mov
ret
push
arpl
sti
cmp
push
mov
fnstenv
mov
and
or
and
sub
sbb
sti
fbstp
or
in
iret
xor
popa
dec
mov
cmp
xor
cmpsb
push
cmp
sbb
mov
pop
mov
lret
sbb
dec
popa
je
aas
push
mov
jle
xchg
add
stos
push
aaa
cmp
int
and
inc
ja
cld
out
adc
out
lcall
out
jno
ds
sub
dec
add
movsb
pop
mov
fcos
orb
movsl
and
mov
adc
mov
dec
dec
xorb
inc
jmp
push
mov
mov
test
sahf
aaa
popf
xor
mov
js
sbb
inc
lods
out
aad
and
cwtl
cli
mov
adc
pushf
int
jo
cwtl
aas
inc
inc
xchg
xchg
lcall
mov
xor
std
fistpll
sub
popa
pop
iret
mov
and
pop
ss
xor
cltd
test
test
cmp
lret
enter
test
pop
lods
mov
lods
jae
loope
icebp
inc
and
mov
inc
ds
adc
jmp
sub
xchg
jbe
test
ret
negb
fsts
and
sub
cli
insb
mov
scas
push
mov
jb
outsb
jb
enter
push
pop
test
push
mov
add
dec
lret
dec
pop
dec
mov
fbld
sbb
inc
and
and
push
jmp
insb
loopne
jl
iret
int3
pop
scas
pop
jbe
mov
lahf
roll
sub
and
or
repz
add
inc
pushf
inc
adcl
aam
sbb
adc
arpl
lret
push
fbstp
sub
shrl
repnz
mov
dec
stos
mov
sub
mov
pop
lret
mov
sbb
clc
adc
bound
and
inc
addr16
cmpsb
push
cmpsl
loop
divb
xchg
out
xchg
sarb
pop
add
int
xchg
std
mov
shrl
or
scas
inc
xchg
adc
ljmp
cs
in
sbb
out
mov
int
in
in
fldl
sti
cmp
jb
push
push
mov
outsb
testb
sub
jae
xor
xor
in
mov
mov
inc
add
ds
push
add
addr16
ja
insl
xchg
mov
insl
stos
ret
test
xor
xchg
mov
subl
push
hlt
sbb
outsl
jne
test
xchg
fsub
sti
dec
test
adc
inc
sub
pop
aad
xor
aas
and
xor
adc
push
jge
stos
imul
add
cmp
xchg
dec
fstpl
cs
mov
imull
imull
test
mov
xor
ret
lret
push
cltd
test
sbbl
xchg
in
ficoml
xor
mov
fisttps
cmpsb
mov
jle
out
jbe
add
imul
ffreep
data16
out
and
ret
jbe
mov
mov
insb
jno
xchg
int3
insl
mov
pop
ja
lods
ja
cmc
pop
lods
adc
imul
clc
loopne
pop
push
adc
cs
xchg
test
xor
cmp
test
adc
stc
lahf
lret
pop
jp
sbb
ja
or
pop
adc
js
outsw
or
pusha
mov
jle,pn
lcall
addb
pop
jns
mov
nop
sbb
mov
push
sar
stos
sub
xchg
cs
mov
clc
lock
mov
insl
bound
sub
sub
andb
repnz
push
pop
aam
adc
jl
loopne
push
gs
dec
cmpl
mov
ss
and
or
dec
dec
mov
rorl
cmpsb
incb
mov
dec
push
outsb
and
and
shrb
shrb
add
cmp
fcompl
push
fwait
es
shll
fnstsw
icebp
cld
jo
lahf
mov
outsb
mov
jp
sbb
push
or
jae
pop
push
mov
jno
fucom
xor
xor
ucomiss
pop
inc
insl
cmpsl
push
dec
cmpb
cmpsb
pop
sbb
xlat
lret
adc
imul
movsb
cmpsl
out
sbb
dec
test
inc
xchg
test
cli
arpl
out
enter
cmp
xor
xlat
lock
lahf
and
stos
aam
lds
gs
fwait
inc
fstp
mov
pop
hlt
stc
and
filds
jp
repnz
scas
inc
xorb
mov
out
cmp
adc
and
sbb
jnp
fwait
pop
outsl
mov
jns
fbld
add
outsl
cmp
mov
mov
adc
jp
ret
ret
mov
loope
movsb
jge
xchg
daa
stos
rol
or
std
xchg
adc
mov
test
push
insb
rorl
lods
dec
and
dec
xchg
outsb
hlt
dec
stos
mov
jae
jnp
mov
rolb
das
imul
mov
enter
gs
enter
mov
push
mov
inc
add
ficoms
add
mov
push
outsl
lahf
outsl
mov
pop
mov
popa
cmp
add
mov
sbb
pop
aad
mov
imul
or
popa
mov
sbb
push
inc
cmc
mov
xchg
out
xlat
sahf
pop
xor
adc
xchg
ja
jne
imul
or
jecxz
pushf
fstl
sub
or
dec
mov
pusha
shll
xor
aad
repnz
push
test
mov
xor
inc
and
mov
es
testb
and
pop
sbb
xor
loop
iret
cmpsl
lret
sbb
scas
std
orb
dec
frstor
cwtl
xor
enter
pusha
ljmp
fidivrl
xchg
ljmp
mov
adc
inc
and
sbb
mov
stos
xor
jp
xchg
mov
add
lcall
lahf
ret
and
pop
push
jmp
bound
cmp
clc
push
cmp
xor
xchg
adc
aad
fmull
jns
int
jmp
dec
jne
fbld
aaa
mov
rdpmc
stc
lahf
xor
ret
sbb
push
jns
jle
fsubrl
jb
pop
lods
jle
aaa
cmpsl
or
loopne
sub
sbb
dec
mov
mov
mov
inc
sub
mov
jmp
or
push
or
sbb
notb
pop
idivl
dec
adc
lock
shr
clc
sbb
sub
dec
rclb
popf
xchg
sbb
mov
int
out
je
sub
in
cld
iret
sub
lret
sti
mov
insl
daa
hlt
or
mov
push
adc
or
jns
adc
in
addr16
add
mov
adc
xor
mov
fcmove
lock
loope
xor
sub
test
or
movsl
xor
nop
mov
inc
loop
lret
xchg
clc
xchg
jmp
repnz
stos
popa
lret
dec
movsl
cwtl
scas
mov
or
add
mov
loop
push
js
mov
mov
lret
aad
jge
push
flds
nop
xor
inc
loop
pusha
mov
dec
add
nop
push
jge
addb
je
pop
adc
int
add
dec
dec
xor
mov
subb
loope
or
cmp
mov
sbbb
and
pop
gs
sub
mov
xor
mov
into
xor
orl
xchg
xchg
or
inc
scas
ds
mov
mov
push
ret
cmp
add
dec
ja
jmp
mov
jg
aas
mov
mov
orl
int
jle
push
mov
movsb
rcr
inc
cmpsb
xchg
dec
fidivrs
sbb
arpl
xor
mov
xorl
stos
sbb
cmpsb
add
out
fiadds
das
push
repnz
test
sahf
cmpsl
js
mov
adc
out
add
nop
negl
or
xchg
out
sahf
lods
test
adc
iret
xchg
add
loopne
add
into
fwait
es
mov
jbe
bound
lcall
test
lock
xor
inc
mov
pop
stc
adcb
lods
mov
and
jl
xchg
pop
xor
loopne
mov
sbb
cmp
orb
mov
dec
mov
pusha
repnz
mov
ds
cwtl
test
loopne
jg
enter
xor
out
dec
mov
rcr
data16
sbb
pop
and
cmp
flds
cli
pushf
dec
cli
icebp
sub
sub
cmpl
xlat
jno
sbb
mov
or
mov
into
lcall
adc
loopne
cltd
mov
push
sbb
adc
or
neg
out
stc
push
mov
lods
lods
mov
xor
sahf
xor
jae
mov
jnp
lods
jp
repz
pop
jl
cmp
test
and
sub
jae
stos
jno
lea
and
xor
mov
fdivrl
dec
lock
loopne
mov
xorb
mov
rolb
dec
fwait
dec
cmp
add
and
cmp
xor
mov
loop
bound
add
sub
in
rcrl
jmp
fadd
push
jmp
mov
js
cltd
xchg
sub
mov
rolb
xchg
dec
xchg
cmpsb
xor
clc
inc
sbb
cmpsb
fsub
je
les
adc
jg
sbb
mov
push
inc
das
pushf
je
std
push
cwtl
or
sbb
adc
stos
loop
sbb
push
ja
popf
and
mov
add
mov
arpl
cld
testb
mov
fistpl
adc
xor
mov
mov
out
test
jnp
loop
pop
mov
sub
mov
pop
nop
push
pusha
rcr
cmp
xor
jg
cltd
lret
xor
dec
movsb
ss
lods
inc
aad
popl
call
loopne
inc
js
sbb
lods
in
lcall
xor
dec
or
inc
sub
mov
loopne
shlb
sub
jno
or
mov
scas
sub
push
push
or
int
scas
jmp
jl
push
cmp
jno
fldl
call
jg
in
scas
mov
fcompl
push
aas
xchg
cld
notl
jge
insb
lahf
adc
pop
out
addr16
and
mov
out
inc
sub
das
xchg
push
mov
or
out
sbb
mov
stc
imul
push
sub
cmpsb
andb
and
scas
cmp
adc
ficoms
les
sbb
out
in
out
mov
jne
int3
push
jg
xlat
cltd
mov
or
cmp
xor
jne
cwtl
in
mov
or
fadd
out
xor
clc
sbb
ljmp
or
xor
adc
outsb
mov
adc
xor
clc
sub
test
lret
aam
push
mov
push
insl
aaa
jmp
dec
movzbl
xor
jp
stos
ss
and
lods
jge
pop
and
loope
add
jo
pusha
mov
xchg
mov
push
ja
in
inc
test
jge
jno
xchg
movsb
mov
jbe
jmp
mov
mov
xor
push
fwait
enter
jns
aad
aad
movsl
push
dec
adc
sbb
mov
inc
out
ss
add
int3
shll
repnz
pop
and
or
repz
jecxz
fsubrp
jnp
push
jne
add
mov
adcb
aad
push
loop
sahf
test
sub
cmpsb
or
jg
aam
ljmp
jno
xlat
scas
add
adc
loope
jo
and
dec
pusha
loop
and
cmpl
push
mov
mov
ficompl
test
push
and
cmp
aaa
mov
push
jg
adc
adc
aam
or
dec
cld
cmp
addr16
data16
das
xor
mov
call
pop
mov
adc
movsl
stos
aaa
in
lock
adc
and
std
adc
je
hlt
jle
shl
outsl
mov
ds
cmp
push
lret
outsl
or
mov
xor
pop
dec
add
mov
dec
shlb
aam
sub
loope
push
or
cmp
jmp
push
jecxz
lock
int3
int3
pop
xor
pop
test
lcall
dec
data16
xchg
push
lods
mov
xchg
popa
cmp
inc
popf
and
int3
sub
clc
les
leave
pusha
mov
xchg
aam
adc
jne
push
ja
fucomip
add
pop
pop
jmp
jg
pop
shrl
fisubrs
dec
cwtl
jg
lods
xor
into
pop
fcoms
lea
movb
test
in
outsb
add
daa
ret
sbb
ret
data16
dec
cs
xlat
pop
cmp
and
into
or
aaa
int3
fstl
xchg
hlt
pop
sub
push
sub
in
xor
lret
push
mov
adc
push
repnz
xlat
jmp
repz
fistps
sbb
fs
add
or
jl
add
and
sbb
jl
mov
lcall
push
xor
lock
inc
cmpsb
jo
mov
mov
es
push
adc
add
cli
lcall
call
adc
mov
sub
fstpt
paddsb
out
out
call
lock
dec
xchg
fistpl
mov
test
enter
adc
jo
xchg
aas
pop
cmpsb
roll
push
insb
ret
into
jns
mov
sbb
shr
pop
les
push
or
outsb
inc
inc
xor
loop
inc
les
out
in
jno
ds
mov
fs
rcrl
fists
sbb
movsl
jae
dec
inc
clc
icebp
sbbl
mov
dec
sbb
push
test
outsb
push
pop
jge
xlat
std
add
gs
mov
cmp
and
push
jge
push
xchg
cmpsb
sub
cmp
imul
jbe
or
xlat
stos
and
push
push
xchg
ret
xchg
push
jecxz
mov
aam
cmpl
or
mov
xlat
sub
push
fsubp
cmp
inc
add
push
addl
movsl
popa
movsl
inc
enter
lds
and
pop
and
leave
push
fisubrs
cltd
popa
popf
popl
mov
call
sbb
xchg
jnp
mov
push
inc
add
fistps
rol
jp
repz
jne
imul
rcll
and
add
lods
jb
pop
ljmp
jp
std
jns
sub
in
outsl
cmpsb
mov
lods
mov
sub
mov
sub
push
mov
in
mov
add
in
stos
fcoml
add
imul
xor
ret
pop
inc
add
mov
add
pop
sub
ret
dec
cmpsl
repnz
mov
xchg
sbb
mov
adc
sbb
in
sbb
lea
dec
seto
xchg
jnp
into
add
mov
inc
rcr
test
ds
nop
repnz
fwait
pop
cmpsb
push
jmp
mov
shlb
pop
pop
roll
sbb
pop
arpl
pop
xlat
loope
into
in
jnp
aaa
xchg
out
xor
push
sbb
scas
adc
jb
shrb
sbbl
cmp
popf
mulb
lret
mov
cli
xorb
inc
mov
outsb
or
jl
adc
sub
hlt
iret
dec
sbb
stos
sub
push
mov
daa
adc
lods
mov
imul
push
mov
andl
shlb
sub
enter
cmp
lcall
fdiv
pop
sahf
xor
inc
xchg
mov
fcmovnb
cmc
out
mov
adc
sub
lret
sbb
rep
jmp
dec
ror
pop
jae
fsubrp
sahf
cmc
cmpsb
push
add
push
xchg
adc
push
sub
lahf
mov
pop
xor
mov
push
push
test
repz
fucom
jb
test
cltd
jp
lret
dec
pushf
mov
adc
adc
pop
shlb
int3
push
pop
push
ss
sbb
loop
inc
enter
jb
stos
mov
pop
es
fcompl
adc
mov
faddp
insl
or
or
adc
add
mov
cli
jb
dec
ljmp
add
mov
push
mov
les
push
das
jge
iret
out
cltd
inc
inc
or
pop
movsl
popa
push
ror
jne
push
sahf
decl
dec
mov
subb
inc
mov
outsb
mov
cmp
mov
mov
push
xchg
mov
adc
dec
dec
scas
mov
cmp
jecxz
out
ret
jae
pop
push
in
out
xchg
cmp
lcall
push
cli
adc
pop
int
mov
out
in
and
mov
mov
aas
sbb
pusha
pop
fisubrl
xor
loopne
cmovge
add
push
lods
aad
mov
inc
and
cwtl
jp
sbb
aad
adc
imul
or
sub
rolb
shll
inc
nop
push
mov
push
out
loope
jecxz
dec
jp
jns
mov
imul
ret
out
jae
lea
jge
and
adc
repnz
push
cmp
std
sub
fldenv
pop
xor
mov
dec
inc
aaa
popf
adc
rorb
sbb
arpl
jns
loopne
xchg
mov
sbb
ret
pop
xchg
adc
jnp
out
jne
sti
xchg
aad
push
lock
and
scas
ret
repnz
vunpcklps
dec
cli
stos
adc
xor
cmp
es
mov
scas
daa
sub
mov
je
jg
sti
test
dec
cmpsl
js
dec
fcompl
stc
cmc
std
stos
lret
loope
adc
movsl
pop
mov
sub
jae
repnz
pop
insb
ds
ss
add
add
loope
mov
imul
aaa
sbb
idivl
sub
adc
in
cmpsb
jne
jecxz
pop
mov
popa
movsl
add
adc
and
ss
jb
sub
adc
cmp
in
stc
push
movsw
roll
sub
rcll
popa
ljmp
in
or
std
fcompl
push
cmpl
push
push
and
mov
fcmovne
cmp
xchg
cmp
add
lret
xor
or
mov
mov
sub
inc
test
jl,pt
dec
push
jecxz
popf
xlat
daa
sub
ds
loope
pop
cltd
xchg
fists
jl
xchg
sbb
mov
int3
push
mov
mov
adc
lret
int3
mov
popf
inc
imul
pop
cmp
hlt
sub
orl
outsl
addr16
in
inc
pop
jb
aam
fisttps
push
fs
jae
data16
jns
popf
add
add
addr16
pop
inc
mov
insb
push
shll
clc
and
aad
add
and
and
fisubrs
xchg
lahf
imul
cmpsb
test
sub
fidivrl
mov
add
in
lock
and
mov
mov
outsl
dec
pop
push
mov
shrb
mov
mov
jg
xchg
inc
push
xor
xchg
enter
mov
fisubrs
and
and
lock
repnz
xchg
add
in
sbb
mov
dec
jbe
inc
sbb
mov
int
jg
xor
aam
stos
adc
adc
loopne
popf
adc
mov
lods
insb
pmaxub
mov
inc
lret
lret
or
scas
ss
push
icebp
stos
xlat
push
jecxz
xchg
pop
mov
out
sbb
movsb
jg
mov
push
adc
cld
sbb
scas
pushf
addr16
ret
fbld
shrb
bound
test
stos
leave
push
sbb
fdivrl
adc
aad
into
popa
inc
loope
negb
mov
cmpsl
add
icebp
ret
shlb
addr16
mov
xchg
cmp
sbb
and
jno
mov
hlt
mov
sbb
mov
mov
xchg
mov
and
inc
or
inc
lea
movsl
xlat
cmp
cwtl
popf
cwtl
js
in
mov
ja
mov
std
jbe
xchg
jg
sbb
dec
test
and
dec
inc
or
dec
dec
cwtl
add
fisubl
mov
rorb
fisubl
test
mov
push
sub
es
in
cmp
push
jmp
daa
mov
in
push
mov
lods
dec
sahf
repnz
pop
shl
int3
popf
mov
rcl
dec
lock
pushf
xchg
movsl
jno
pop
pushf
cmp
xor
pop
popa
int3
inc
jnp
mov
mov
sbb
push
inc
out
cld
bound
inc
jmp
mov
push
jge
and
mov
ret
xor
xchg
aas
dec
idivl
add
out
les
lea
push
popf
bound
adc
inc
sub
mov
into
pop
sub
cmp
out
andb
pop
movsb
test
push
jmp
inc
xor
daa
in
fwait
cmp
pusha
sub
ja
loop
pop
je
push
roll
inc
inc
lea
lcall
cmp
jno
push
cmc
andl
repnz
mov
xor
mov
shlb
iret
nop
pop
add
pop
or
hlt
cmpsb
mov
cmp
xchg
mov
dec
lcall
cltd
stos
and
xlat
jb
ja
pop
jmp
ret
call
mov
mov
cs
fdiv
inc
lea
pop
repnz
mov
jg
rorl
movsb
dec
fs
or
mov
xor
adc
loopne
mov
scas
fidivrs
dec
fwait
or
xlat
xchg
dec
adc
xchg
out
lock
and
into
stos
xor
out
mov
mov
sub
ret
jp
scas
aaa
aaa
shrb
fsubs
scas
mulb
stos
cmc
test
adc
jg
lods
push
mov
or
nop
in
mov
loopne
jle
cmp
xlat
cmp
mov
inc
dec
test
mov
mov
daa
cmp
fildl
sub
enter
xor
mov
and
add
lods
mov
xor
and
sub
stc
daa
mov
dec
pop
je
mov
rcrl
fisubs
repz
mov
xlat
add
mov
pop
cmpsl
pop
sbb
cmp
lret
bound
call
push
idivl
mov
iret
xchg
cld
loope
jnp
sub
out
les
dec
adc
cmpsl
lods
push
sahf
lcall
adc
adc
repnz
pop
out
mov
out
push
cmp
push
imul
int3
dec
pop
pop
cmp
push
inc
insl
xchg
movsb
jg
cli
pushf
cli
stos
mov
movsl
push
adc
xor
loop
push
or
and
flds
dec
cmp
pop
test
fmuls
mov
lcall
xrelease
jae
mov
push
shll
and
cmpsl
adc
outsb
aas
jle
imul
and
sub
es
inc
mov
repz
js
cmp
stc
rolb
fistl
pushf
jno
mov
scas
popf
adc
jp
sub
jae
inc
addb
call
mov
add
push
adc
jp
fnstcw
ljmp
jns
cmp
xchg
adc
fiaddl
movsl
and
or
jle
imul
mov
sub
clc
or
pop
mov
incb
test
push
mov
cmp
inc
fwait
push
xor
push
mov
lret
ds
repz
nop
and
fbld
pushf
pop
inc
mov
cmp
stos
and
inc
ljmp
rcll
leave
push
inc
mov
cwtl
dec
shlb
loope
test
mov
xchg
dec
push
roll
into
sbb
nop
fmull
push
jl
sarl
mov
rcrb
stos
pop
shr
mov
inc
sub
out
data16
loope
test
mov
sub
test
test
pop
push
mov
adc
aam
dec
push
xchg
xchg
push
pop
outsl
pop
fidivrl
cwtl
imul
aad
ss
clc
cmp
cmp
mov
loop
sbb
shrb
out
lds
js
arpl
xchg
negb
add
enter
ljmp
popa
jg
pop
clc
imul
in
inc
pop
adc
ret
popf
cmp
push
or
scas
sub
cmp
cmp
cwtl
xchg
push
or
fwait
sbbb
shl
xchg
mov
xor
ds
xor
shl
dec
mov
sub
push
icebp
cs
pop
int3
sbb
pop
xor
in
cld
jo
push
mov
sbb
cs
jns,pn
lods
rorb
jne
dec
push
fists
in
in
outsl
aam
inc
test
xor
aad
ljmp
gs
push
ljmp
scas
pop
in
push
push
stos
pop
push
pop
std
adc
daa
jl
cli
lret
sub
test
std
xor
xor
mov
adc
enter
sub
mov
add
pop
add
shlb
jae
mov
addr16
mov
pop
stc
iret
add
ret
inc
leave
shll
stc
jne
jns
daa
imul
out
xchg
adc
or
cwtl
xor
lea
and
pushf
leave
aad
cmc
mov
jp
imul
data16
js
stos
ds
or
push
lret
imul
jmp
popa
stos
xchg
rcll
mov
jno
test
ficoms
xor
repz
cmp
in
jnp
aaa
jle
mov
aam
cli
pop
cmp
push
xor
lods
cli
inc
jmp
fisubl
sbbb
xor
dec
pushf
dec
aas
lock
xor
add
push
clc
sbbl
sub
xor
sar
fildll
mov
das
sti
push
jns
jnp
sub
mov
mov
pushf
pusha
popa
mov
aas
or
daa
jbe
out
scas
jle
or
cmp
sbb
add
hlt
mov
imul
int3
cmp
xchg
std
ret
mov
jae
movsl
sti
xlat
adc
out
lock
je
insb
loop
push
jmp
icebp
sbb
cmpsl
pop
add
pop
jb
sub
je
mov
mov
aas
sub
jmp
cltd
repz
sub
dec
cmp
dec
int
bound
icebp
shlb
add
sti
dec
mov
mov
rcll
xor
jb
xchg
sbb
dec
aad
sbb
adc
sbb
enter
mov
mov
pop
or
ficoms
ja
test
dec
push
sub
call
cs
insb
sti
jb
rorl
scas
mov
inc
ss
mov
arpl
aam
stos
insl
call
arpl
inc
jmp
pop
subl
xchg
cmp
outsl
sub
and
or
loope
scas
mov
dec
in
scas
or
movsb
addr16
dec
fcomi
popf
out
jg
jg
push
or
add
jl
adc
pop
out
push
out
aam
bound
jg
and
dec
jg,pt
pushf
cpuid
sti
mov
mov
aam
call
fdivs
sbb
lret
add
sub
enter
fbld
cwtl
sahf
or
aaa
or
lds
aam
jb
imul
cmp
jmp
imul
sbb
stos
mov
adc
cmc
cmp
scas
cmp
cmpl
push
ret
mov
jns
or
jnp
cmp
sub
addr16
outsl
push
call
popf
loope
dec
jns
mov
inc
test
pop
imulb
cmc
adc
arpl
fwait
imul
pusha
out
adc
fistl
and
or
mov
inc
dec
sbbb
jb
cltd
xchg
xchg
es
lahf
imul
insl
jo
cli
xor
cmp
push
pop
push
mov
jno
pop
fidivl
or
and
sar
pop
hlt
inc
neg
jl
inc
fimuls
mov
aam
mov
sbb
mov
or
in
inc
mov
dec
in
imul
push
fidivrl
inc
loop
jmp
sub
mov
push
pop
repnz
and
xchg
dec
jmp
je
shll
iret
shrl
or
jge
leavew
shrl
stos
es
movsb
orb
int
jbe
push
dec
sbb
imul
rcrb
cwtl
dec
ds
pop
cmpsl
stc
ja
dec
or
push
mov
jge
mov
pop
in
ret
jae
push
int
scas
pand
hlt
sub
xor
sub
imul
push
or
adc
adc
cmp
adcl
mov
addr16
out
xor
orb
adc
fisttps
test
clc
cmp
or
in
jno
and
xor
ja
dec
mov
test
daa
lahf
and
je
idivb
xlat
inc
adc
fbld
dec
push
scas
adc
jne
mov
pop
fisttpl
jo
clc
fisttpl
xor
mov
add
mov
inc
movsl
jp
xchg
push
add
outsb
xchg
inc
jl
lds
insb
add
movsl
mov
daa
insl
inc
pop
mov
mov
repz
sbb
pushf
test
test
or
mov
and
dec
out
mov
clc
clc
jmp
push
sbb
shll
out
push
cwtl
add
roll
sbb
pop
push
in
jbe
pop
ror
out
in
dec
movsb
mov
inc
xchg
pop
xchg
mov
fwait
dec
xorl
jns
sbb
mov
cmc
cmpb
loop
add
les
test
scas
fcompl
bnd
pop
mov
in
pop
dec
out
adc
iret
jo
sub
lods
loopne
fimuls
fwait
addl
popa
shll
movl
ja
in
clc
and
jp
cli
aaa
mov
fldt
jl
dec
stos
sub
es
add
lock
mov
pop
cmpsl
fwait
cmc
and
mov
add
mov
mov
cmc
inc
fidivl
mov
insb
mov
fwait
bound
jnp
mov
sarb
in
inc
stc
fcoms
push
xor
xlat
aaa
add
sar
xor
jae
pop
jae
js
sbb
push
sub
loopne
ret
and
mov
fidivl
outsl
lret
mov
jnp
dec
dec
or
mul
adc
mov
mov
and
lods
sub
fs
cld
in
fcomip
divl
xchg
push
cmp
ds
push
cmp
clc
fidivs
xchg
adc
jno
pushf
nop
sub
es
lcall
add
sbb
sbb
fldt
pusha
movsl
in
pop
add
inc
push
jno
fisttps
push
sbb
adc
push
lahf
jnp
push
and
ret
arpl
sub
push
sbb
fiaddl
roll
fsubl
lret
fldlg2
fs
ss
xchg
adc
cmpsl
cld
mov
jb
mov
test
jmp
movzbl
mov
fmull
jno
test
sti
lock
adcl
enter
cltd
xor
push
inc
scas
in
aas
stc
rcll
mov
pop
jp
inc
cmp
addb
mov
sarl
inc
clc
test
push
stos
ret
andb
hlt
icebp
mov
dec
repz
mov
cmc
jl
or
cmp
add
jae
cld
insb
dec
sbb
pop
lcall
mov
sarb
stos
shll
scas
sahf
psubd
scas
aaa
xchg
ljmp
idivl
sub
test
sbb
and
xchg
mov
lret
test
mov
cld
out
pop
stos
and
cmp
cmc
jecxz
hlt
and
push
out
or
scas
outsb
xlat
mov
out
lods
and
cli
sbb
sbb
jmp
jne
outsb
cs
jg
and
jmp
push
jg
cmpsb
ret
sahf
insb
sti
rcrb
cli
mov
jns
out
imul
mov
or
mov
nop
les
jno
in
inc
adc
scas
std
sbb
cmp
pop
movsb
mov
stos
mov
leave
push
pop
adc
in
or
jo
adc
mov
sar
and
fnstsw
adc
add
adc
add
jae
push
inc
mov
and
dec
mov
mov
mov
lahf
aaa
sub
xchg
scas
sbb
test
mov
and
cmc
mov
sarl
inc
mov
out
insb
adc
or
clc
loope
add
or
pop
and
insl
addl
jle
cmc
and
lods
jmp
pop
data16
pop
rorb
mov
xorl
pushf
sbb
pop
jbe
mov
outsl
cmp
mov
pop
xchg
sub
incl
loope
and
or
cmp
int
sub
ror
imul
pusha
imul
cmp
jns
add
subb
pop
ret
cmp
in
dec
mov
out
pop
mov
or
out
mov
mov
sarl
mov
int
aad
cmp
insl
test
push
push
jno
push
pop
mov
push
out
pop
stos
fistpl
out
fnstsw
mov
cmp
test
popf
mov
dec
lahf
popa
xchg
in
mov
pop
enter
mov
outsl
add
ds
aam
mov
cmpb
lcall
loope
pop
inc
test
sbb
mov
adc
add
pusha
dec
icebp
int3
mov
sarb
das
cmp
shlb
sub
push
add
fadds
out
xchg
ret
push
negl
adcl
inc
pop
mov
inc
aas
leave
xchg
mov
cmp
mov
popa
jbe
popf
movsb
pop
xchg
les
in
fisttpl
frstor
pop
sar
pop
call
jecxz
mov
call
ret
fs
push
stos
push
inc
pop
inc
call
daa
mov
fsts
daa
ficompl
roll
cmp
or
sahf
add
in
push
lea
insb
std
pop
call
lock
lock
cmp
imul
and
adc
insl
out
sarb
sarb
fstps
add
adc
or
fistpl
jo
insl
mov
or
or
pop
call
mov
test
fdiv
xor
out
and
mov
push
fdivs
cmp
mov
nop
shlb
or
test
mov
xlat
and
xchg
pop
cld
adc
lret
loop
xchg
pop
lds
lret
rcr
push
lcall
xor
mov
sbb
cli
sahf
fs
int
lock
enter
addr16
std
xor
jae
sahf
xor
icebp
dec
adc
in
mov
jne
pusha
cmpsl
filds
inc
pop
lcall
repnz
pop
pop
push
fcmovbe
jno
push
pop
xchg
mov
lret
xchg
adc
sar
jb
or
aas
dec
dec
mov
jno
inc
push
mov
idiv
or
dec
jnp
sahf
push
xchg
addr16
adc
add
lcall
fsubs
sbb
sub
imul
call
and
in
cmc
xchg
out
cmpsb
sti
dec
mov
and
sub
lock
sar
push
mov
or
jmp
repz
les
push
fstpl
mov
jmp
dec
mov
dec
push
in
in
fdivl
jb
int
ja
push
sahf
jl
inc
cmpsl
jb
mov
xor
fs
jae
lret
lods
xor
cli
cmp
insl
mov
adc
nop
pushf
popa
push
leave
data16
popf
js
into
stos
mov
dec
fs
push
imul
sbb
repz
or
and
ss
out
int
pop
sbb
iret
xchg
and
or
inc
jle
in
jmp
jns
or
sub
fmulp
bound
cmp
add
cs
adc
inc
nop
sub
mov
ds
enter
xor
sbb
adc
lcall
das
adc
sahf
sub
push
ljmp
jp
mov
xchg
pop
jmp
test
das
xchg
movsb
dec
shll
je
and
popa
pop
fwait
test
aas
rcll
orl
push
dec
mov
and
mov
sarb
mov
faddl
mov
bound
nop
std
dec
call
cmpb
test
adc
das
jle
mov
lcall
pop
cltd
pop
jae
leave
inc
jne
or
jbe
xchg
push
dec
int
sub
dec
sub
mov
enter
xlat
push
push
pop
push
xchg
scas
add
mov
scas
and
xor
aad
iret
fucom
mov
sti
dec
xor
js
sub
std
add
jbe
inc
push
dec
xchg
inc
mov
push
jb
jmp
mov
jo
shr
pop
rclb
idivl
cmpsl
test
scas
pop
jnp
roll
decb
andb
fidivrl
mov
divl
fdivl
addr16
mov
popa
fildl
scas
pushf
mov
xor
jno
inc
popa
insl
clc
es
lds
mov
loopne
imul
cmp
jge
and
loopne
outsl
lock
mov
in
aaa
xor
add
pop
test
scas
push
popa
xor
xor
dec
jecxz
imul
lods
fdivrl
ja
mov
jns
or
add
clc
adc
sbb
je
scas
mov
jo
shlb
aas
pop
into
or
adc
std
mov
es
jns
addr16
push
xchg
sahf
sub
fbld
rcr
mov
adc
aas
mov
mov
nopl
push
rorl
sbb
roll
outsl
incl
repz
lods
inc
fwait
inc
pop
in
pop
fstl
lods
addr16
cmp
pop
pop
pop
cli
out
sbb
ffreep
adc
int
push
mov
roll
inc
repz
es
push
pop
bnd
sbb
sub
faddl
mov
rcrl
adcl
mov
mov
xor
fistpll
movsb
and
out
in
fists
ljmp
pop
mulb
push
xor
jle
xorb
outsl
xor
rcrb
clc
mov
movnti
stc
fcoms
dec
xor
pop
orl
cs
cld
push
iret
push
out
arpl
push
jns
out
xchg
ret
arpl
imul
aas
jl
cld
fistl
mov
ja
sar
sbb
jecxz
idivl
mov
int3
gs
adc
xchg
jg
mov
cmp
mov
push
dec
pop
ret
je
mov
std
xorl
cmp
data16
sub
dec
mov
clc
jns
xchg
xchg
shll
out
jp
pop
ja
adc
sbb
sahf
sub
and
mov
mov
add
jne
cwtl
mov
adc
mov
mov
mov
xor
jne
loopne
cli
fstl
test
popf
cwtl
rorb
dec
pop
cmpsl
mov
adc
add
adc
cmpsl
rcrl
pop
lds
sti
mov
hlt
scas
inc
or
push
cli
subb
xlat
cs
add
insb
jmp
fisttpl
pop
aaa
nop
xchg
loop
cltd
lea
lock
jnp
push
adc
inc
js
sub
mov
jmp
es
xchg
jae
fwait
cs
xor
fldenv
es
stos
mov
xor
dec
inc
mov
ret
loopne
jb
fs
lds
insb
mov
jns
and
or
pop
cli
or
xchg
cmp
ret
sub
sbb
mov
cmpsb
xor
add
scas
add
fsubr
fdivrs
push
xchg
mov
push
imul
pusha
shl
fmull
mov
imul
mov
into
sbb
in
in
dec
xchg
loop
jno
mov
cmpsb
cli
xchg
dec
sub
mov
lcall
outsl
test
std
pop
cltd
sbb
sti
push
push
push
loop
and
std
stos
sbb
je
lret
push
cmp
push
lea
add
adc
push
addr16
cld
or
cwtl
xor
lret
stos
mov
lods
jnp
stos
mov
rcrb
add
movsl
ret
pop
loope
test
leave
gs
mov
xchg
jo
jns
xchg
cmp
cld
adc
test
dec
out
add
gs
ret
push
xor
sub
ljmp
jnp
jno
lret
jmp
push
pushf
dec
loope
test
ss
mov
lahf
jno
push
push
das
mov
push
push
and
mov
dec
pop
les
adc
dec
and
sbb
in
jnp
sahf
jle
out
das
pop
bound
xchg
fimuls
outsl
sbb
mov
pop
jge
xchg
in
sarl
enter
outsb
andl
es
inc
out
js
jp
nop
jle
push
shl
popf
xchg
nop
enter
pusha
pop
sbb
mov
repnz
pop
imul
sbb
dec
subl
mov
loopne
add
dec
xchg
rorb
add
dec
xchg
rorl
out
and
sub
xor
imul
test
lds
lcall
mov
sbb
ljmp
cmp
cli
and
mov
idivl
aaa
leave
dec
xlat
out
movb
imul
jp
adc
jne
pop
push
sub
cwtl
scas
pop
xor
dec
mov
jg
mov
adc
popa
mov
rcrb
lock
out
pop
negb
pop
aad
jmp
dec
aas
mov
loop
movsl
jns
cmc
sbbl
and
hlt
sub
mov
ret
and
push
arpl
inc
push
repnz
inc
jge
mov
rcrl
fistpl
ret
cltd
fsubr
pop
push
inc
mov
shl
bound
fbld
and
adc
adc
dec
adc
sti
cmpsl
sbb
add
jl
std
sbb
bound
repz
pop
inc
push
sbb
mov
or
lcall
cld
das
dec
mov
adc
mov
jns
in
mov
fdivrp
push
mov
shrb
dec
sahf
jae
mov
das
dec
std
sub
call
loope
cmp
mov
fscale
sub
push
push
xor
push
jecxz
pop
jb
js
sbb
pop
dec
cmp
addr16
cmpsb
shrl
dec
jmp
add
sbb
xchg
cmp
fsubrl
in
fildll
pop
sub
in
push
cs
mov
add
movsb
push
mov
add
mov
adc
test
iret
stos
pop
pop
sub
shl
sbbl
dec
xchg
and
mov
movsb
sub
idiv
shlb
sbb
sbb
ja
push
testl
aam
arpl
or
cwtl
gs
ds
mov
and
push
popf
dec
push
lea
xor
stos
and
add
add
cmc
add
push
jns
pop
sub
inc
or
mov
inc
in
or
call
cmc
out
lret
inc
xchg
xor
xlat
data16
jmp
xchg
jecxz
pusha
es
incl
and
xor
or
adc
sti
js
int
outsb
testb
shl
cmp
mov
pop
out
sub
mull
sub
lret
push
jecxz
mov
mov
lret
jl
test
int3
add
scas
push
jp
add
jns
push
sbb
mov
sarl
sbb
sti
add
mov
cld
mov
adc
dec
push
pop
pop
xchg
push
push
fcmovnb
fstps
inc
imul
mov
pop
into
xor
push
lcall
pop
cmp
inc
mov
sbbl
push
pop
popf
lret
cmp
dec
les
mov
daa
mov
mov
loope
bound
jecxz
pop
sub
pop
and
pushf
sbb
lcall
les
aam
ja
les
sti
fstl
aaa
cmp
xchg
inc
jecxz
out
aam
fnsave
test
loop
sub
xlat
aam
arpl
test
fsubl
inc
fwait
inc
insb
dec
mov
and
jae
movsl
xchg
in
sbb
sahf
jg
and
mov
call
call
idivl
or
sti
icebp
cltd
or
std
mov
sbb
dec
mov
ljmp
cmp
adc
push
cmpsl
sbbl
push
cmp
push
or
mov
es
pop
xor
es
je
jecxz
imull
inc
aas
ja
fidivrl
bnd
cmp
cwtl
adc
rorb
push
mov
adc
rolb
mov
aaa
int3
mov
add
jecxz
jmp
ret
fnsave
or
mov
or
inc
jl
mov
hlt
negb
popa
popf
nop
insb
lds
pop
js
mov
rcrl
mov
xor
in
cmp
jl
lods
dec
pusha
mov
adc
loopne
xchg
cmp
je
mov
test
sub
jecxz
pop
jmp
push
dec
pop
scas
and
out
ja
mov
fldenv
and
ficompl
into
stc
xlat
aad
sarb
sbb
outsl
mov
push
inc
test
mov
out
or
faddl
mov
loop
fidivs
pop
pop
out
push
dec
jne
mov
cmp
or
xchg
fs
inc
outsl
loop
sti
xchg
les
int
pop
jb
arpl
sub
xchg
pop
aas
lret
mov
xchg
leave
sbb
push
or
xchg
les
push
push
lods
jge
jmp
out
faddl
mov
mov
xchg
shrl
xor
cmp
js
mov
ret
push
lahf
mov
cmc
rorb
or
test
jecxz
xchg
cmp
mov
inc
sub
test
add
into
js
ja
push
xchg
cmp
movsl
pusha
push
mov
fcmovnbe
clc
nop
and
loope
dec
or
mov
inc
push
mov
addl
mov
or
xor
or
dec
pop
cld
xlat
outsl
cmp
adc
lods
xlat
dec
xchg
sarl
insl
xchg
les
sbb
mov
mov
sub
sub
lret
sbb
popf
mov
ret
push
test
aaa
mov
cltd
push
mov
sub
adc
xchg
adc
adc
jecxz
iret
out
mov
stos
data16
fwait
inc
fwait
xor
pushf
pop
loop
aam
imul
shll
and
xor
fwait
shr
jg
xlat
jmp
sbb
or
push
jae
sbb
push
jp
lahf
loopne
pop
push
xchg
aad
sub
sub
push
out
pop
pop
push
and
xchg
push
push
push
sbb
xchg
std
sbbl
xchg
or
mov
test
cwtl
pop
cmpsl
lock
mov
inc
mov
cmp
push
or
dec
pusha
ret
mov
gs
mov
dec
add
push
iret
pushf
jle
pop
sahf
xchg
pusha
fisubl
loop
add
out
out
sub
mov
dec
out
in
sub
fisubrs
sbb
imul
mov
pop
enter
cwtl
cmpsl
loopne
hlt
divb
js
lds
add
inc
mov
lcall
adc
loop
push
or
jne
fbstp
add
mov
ficompl
hlt
aam
mov
cltd
test
adc
fnstcw
adc
inc
pop
cmpsb
cmp
push
adc
loopne
imul
imul
lahf
jnp
out
xor
jp
and
cltd
adc
mov
fisttpl
test
icebp
enter
imul
in
and
stos
int3
push
jae
fldenv
jp
sub
push
xchg
dec
inc
mov
shrl
aad
pop
sahf
loop
sbb
and
mov
push
or
lcall
xchg
xor
hlt
dec
into
pop
push
loope
mov
xor
pop
inc
mov
clc
sub
push
in
jg
or
test
xor
dec
mov
jo
mov
in
test
leave
mov
inc
xchg
fstp
mov
aad
fwait
adc
in
xor
out
cwtl
call
and
mov
xchg
mov
adc
lds
test
out
cmc
push
sbb
or
mov
jb
mov
xchg
ja
call
arpl
loop
push
push
nop
push
jae
mov
idiv
or
dec
push
outsb
push
iret
fsubl
xor
das
and
xchg
sbb
test
mov
data16
sbb
mov
pusha
leave
xchg
mov
popa
or
sbb
pushf
roll
aam
je
inc
sbb
inc
xchg
add
dec
xchg
lds
pop
fimull
int
iret
das
xchg
dec
push
mov
push
xchg
fdivr
stos
inc
inc
and
jecxz
ss
xorl
pop
push
aam
xchg
jl
pop
jb
or
push
cs
xor
test
mov
cmp
out
rcrl
or
dec
sbb
push
mov
aad
scas
jns
loop
inc
stos
shl
outsl
pushf
and
fiadds
into
fisubl
sub
lahf
push
in
pop
aam
mov
xor
ss
push
mov
mov
mov
fistl
mull
mov
jge
xchg
xchg
in
call
rolb
dec
subl
cmpsl
in
jbe
in
cli
sub
push
pop
mov
mov
fsubs
fcmovnb
or
int
insb
scas
jno
test
orl
cs
sarb
std
pop
int3
mov
cmp
aaa
rcrl
fsubs
jne
rclb
dec
mov
out
push
gs
out
dec
adc
push
pop
dec
pop
testb
push
add
cli
xor
jmp
adc
add
adc
and
sbb
mov
ljmp
lds
ret
loopne
jns
mulb
imul
add
rcrb
repz
dec
cmp
adc
sarb
in
mov
imul
outsb
mov
xor
adc
das
adc
sub
pop
imul
std
sub
push
test
jge
movsl
mov
or
sbb
inc
sub
pushf
cmp
xor
push
subb
xchg
jno
test
inc
pop
mov
fisubrs
sub
lahf
cmc
fdivrs
fnsave
xchg
stos
jne
pop
icebp
push
sarl
xor
repnz
pushf
push
lock
cmp
lret
bound
inc
sub
push
dec
test
aaa
pop
scas
xor
and
jle
lret
loope
cmpsb
imul
inc
pop
mov
inc
pop
clc
jge
pop
xorl
fldcw
fwait
rol
sbb
adc
mov
adc
pop
dec
loope
push
cltd
jbe
lods
xchg
out
dec
into
add
xchg
popf
dec
imul
gs
in
push
loopne
pop
aad
addl
push
movsl
jnp
xor
sub
push
inc
jl
cmp
add
sarl
and
mov
pop
popa
and
xor
jecxz
sets
fsts
mov
inc
mov
mov
mov
iret
outsb
jg
out
stos
jnp
aad
and
mov
sub
jl
cmp
sub
sub
repz
pop
into
stos
adc
scas
or
movsb
sbb
loop
mulb
sub
mov
jne
mov
jns
dec
cmp
xlat
sbb
outsb
les
or
adc
stc
mov
mov
jmp
cli
lds
sbb
sub
mov
cmc
mov
lahf
inc
mov
jl
adc
and
or
orl
push
fcos
push
and
ljmp
xor
pop
fadd
mov
xchg
xchg
rcl
repz
push
fisubs
jo
push
inc
add
jmp
daa
nop
into
sti
or
test
test
push
aas
test
icebp
outsb
int
daa
xchg
jecxz
and
xor
aas
fcmove
push
test
addb
les
xchg
inc
lret
test
sub
bswap
pop
dec
test
cltd
push
add
pop
mov
mov
inc
push
dec
aas
fbstp
sti
xor
mov
ucomiss
movsl
test
aaa
leave
push
es
cmp
loope
push
sub
lcall
fldcw
mov
mov
mov
dec
sbb
mov
and
in
cmp
xchg
pop
std
cli
mov
push
mov
jle
ss
jle
icebp
pusha
sub
cs
les
je
xchg
push
jne
cltd
pop
aam
jno
test
scas
lea
xchg
cmp
nop
jg
xor
and
push
cmp
in
or
or
out
cmc
nop
jnp
shrl
inc
push
or
cmpsb
mov
mov
outsl
xor
push
subl
xchg
sub
inc
aam
sub
fs
fldl
mov
dec
stos
push
and
dec
pop
cs
mov
xor
aas
mov
and
pop
inc
pop
icebp
dec
test
test
jl
sahf
mov
mov
dec
or
cld
sub
test
fdivs
stos
aaa
popf
jnp
aas
test
cmpsb
mov
inc
or
jb
jle
or
ss
in
jns
daa
push
lret
sbb
or
lock
add
push
lahf
sbb
fs
pop
sub
cmp
bound
sub
iret
clc
adc
inc
jecxz
xchg
mov
cltd
in
dec
mov
aad
adc
jl
sbb
push
dec
mov
testl
lods
int3
mov
mov
pop
jns
addl
mov
sbb
and
das
lock
rcll
xchg
xlat
rclb
adc
mov
cld
xchg
push
push
pop
aaa
popf
pop
or
jnp
fwait
mov
leave
xchg
inc
push
ret
xor
jle
xchg
iret
and
xor
jle
jns
call
nop
aad
clc
jae
pusha
or
push
add
pop
and
lcall
loope
and
sahf
jge
inc
jnp
ds
push
clc
std
jp
jb
xchg
sub
ss
aas
fwait
imul
pop
or
and
mov
test
mov
cmp
xchg
outsb
repz
cmp
dec
aaa
iret
sar
shlb
jmp
cmp
mov
pop
sub
push
pop
out
sub
cmp
cltd
aaa
ficompl
call
sub
xor
sub
xchg
jl
push
dec
lods
push
popa
or
jl
es
pop
mov
scas
in
orps
cmpsl
mov
xor
fs
ljmp
faddl
aad
ret
xchg
insl
xchg
repz
xchg
xor
daa
sbb
fs
lock
push
cmpl
dec
mov
lcall
lcall
cmc
xchg
nop
mov
notl
cmp
call
sub
repz
ljmp
dec
repnz
push
mov
loope
mov
outsl
mov
fimuls
stos
shl
adc
sbb
jno,pn
insb
xchg
xchg
mov
push
cli
ret
hlt
mov
mov
xchg
cmc
mov
xchg
mov
push
pop
or
test
in
or
aas
dec
dec
aas
adc
push
sub
aaa
sbb
aam
leave
mov
pop
andl
mov
sbb
push
mov
popa
rolb
sarb
pusha
sub
lods
xor
imul
fmuls
inc
insl
jp
pop
push
cli
ret
jp
xor
rep
pop
gs
pop
clc
cwtl
enter
out
daa
mov
data16
cmp
int
add
xchg
sub
rorl
jmp
mov
xchg
jg
pop
xchg
adc
add
shrb
mov
jo
mov
fiadds
sbb
pop
sbb
arpl
or
ljmp
mov
idivb
shl
jg
dec
mov
inc
inc
sub
add
inc
push
sub
or
or
imul
fnstenv
test
jge
stos
int3
dec
dec
in
push
mov
mov
testb
xchg
xor
mov
push
xor
loopne
jle
add
mov
pop
pop
jnp
add
popa
or
jge
icebp
xchg
scas
sub
cmp
sub
lock
dec
out
leave
jb
xchg
jp
add
sbb
cs
xchg
js
lods
push
mov
inc
lods
push
mov
inc
lods
push
mov
inc
lods
push
mov
inc
lods
push
mov
inc
lods
push
mov
inc
lods
push
mov
inc
lods
push
mov
inc
lods
push
mov
les
xor
mov
sti
addl
sbb
and
mov
pop
cmp
jl
mov
and
bound
int3
movsb
add
ljmp
mov
outsl
sub
in
and
cmovb
mov
pop
aas
jae
shlb
push
stc
mov
out
push
test
leave
pop
dec
icebp
push
js
add
nop
mov
lea
xlat
and
cmpsb
rcll
fistpll
loope
push
adc
cli
sub
inc
mov
adc
test
and
aas
call
mov
je
mov
testl
sub
pop
outsb
pop
dec
inc
mov
add
or
aad
bound
and
imul
loop
ret
fsubl
sub
inc
and
ret
sbb
pop
xchg
cmp
lds
bound
push
sbb
pushf
cwtl
rclb
jecxz
js
jns
jb
loopne
cmp
or
xor
sbb
lea
sbb
add
push
xchg
mov
sbb
lret
fs
stos
push
add
push
sbbl
repnz
cs
fnstenv
pop
inc
mov
in
mov
ss
sti
inc
xchg
mov
pop
rorb
popf
mov
out
ret
stc
lcall
lea
es
arpl
push
jge
sub
sahf
or
and
xchg
in
imul
push
mov
xchg
jmp
cld
imul
push
push
xchg
mov
cltd
call
pusha
add
fadd
rclb
rcrb
and
jo
insl
je
out
pop
xchg
incb
dec
stos
pop
icebp
cmp
push
adc
scas
dec
sahf
mov
pop
ret
inc
fwait
in
lods
out
and
or
dec
jbe
testl
mov
push
sub
aad
push
mov
int3
adc
or
mov
add
fmull
in
aas
aam
gs
sarb
cmc
xchg
xlat
leave
jp
or
lock
aad
mov
dec
jae
int3
mov
sbb
ss
jns
std
mov
mov
ljmp
out
sub
xor
mov
loope
push
or
jmp
push
xlat
push
push
lret
mov
imul
popf
xor
xchg
scas
test
jecxz
jb
fisttps
arpl
xchg
ret
scas
popf
inc
mov
in
sti
cltd
roll
jb
pop
cmp
leave
push
dec
pop
mov
mov
xor
in
xchg
ret
mov
sbb
rdmsr
sbb
sbb
dec
jmp
fimuls
ds
push
mov
mov
pop
loope
inc
cmp
mov
in
mov
adc
lock
cmpsl
mov
outsb
repz
sbb
lea
jns
sti
test
jecxz
es
adc
cmpl
out
inc
ljmp
leave
js
mov
push
push
pop
xchg
cld
inc
push
rcl
add
sub
mov
jnp
mov
pop
rcrb
mov
dec
fwait
lea
nop
jnp
dec
mov
idivl
or
sbb
shlb
sub
movsl
lcall
mov
rorl
or
jne
aad
sti
sub
mov
in
xor
dec
sbbl
movsl
cwtl
inc
sarl
mov
aad
pop
pop
pushl
dec
popa
sub
aas
arpl
shrb
add
mov
repz
pop
enter
into
loopne
jp
cmp
xchg
cmpsl
fidivrs
adcl
cmp
xor
xchg
adcb
mov
jno
clc
sbb
mov
and
sub
jbe
xor
mov
xchg
out
xchg
xlat
lods
fsubrl
mov
sbb
lods
leave
repnz
push
hlt
lea
pop
mov
mov
sub
test
mov
xor
mov
lods
push
fnsave
xchg
mov
pushl
mov
test
je
add
mov
lds
jge
outsl
shlb
inc
add
mov
call
inc
sbb
bound
pop
sti
push
pop
inc
dec
arpl
lea
jnp
fists
cmc
xchg
rorb
mov
inc
stos
andl
xchg
aad
stc
mov
jg
ljmp
xchg
lods
pushf
sub
add
addr16
shrb
cmpsb
gs
insb
cmp
dec
mov
jb
sbb
or
jp
or
ficoml
xchg
pop
inc
cmp
push
clc
pop
inc
sub
ljmp
xor
dec
xchg
sarl
loopne
divb
adc
idivb
adc
imul
add
rorl
and
push
call
dec
in
inc
in
lret
fstpt
dec
push
pop
int3
inc
mov
es
orl
mov
push
test
add
fmuls
mov
sub
hlt
lods
test
push
daa
loopne
jge
in
nop
inc
hlt
jg
xchg
in
ret
jae
leave
std
sbb
or
loopne
mov
fwait
mov
xchg
or
mov
fcmovne
imul
push
lods
mov
or
insl
test
icebp
xchg
ret
sbb
sarb
dec
adcb
lds
test
pop
popa
push
aaa
shll
mov
adc
out
stc
and
xchg
xchg
inc
lret
cmp
jecxz
outsb
out
sub
pop
mov
rol
lret
ds
test
bound
xor
popa
sub
mov
jbe
add
out
sub
or
in
mov
xor
dec
imul
or
in
adc
or
iret
and
sub
into
and
sbb
sub
jl
add
dec
pop
sub
pop
aas
out
and
test
push
mov
and
rorl
sarl
gs
movsb
loope
or
lea
lret
ss
int3
loope
mov
out
loopne
mov
rcrb
sbb
nop
pushf
inc
out
jnp
add
and
add
xor
mov
inc
add
iret
test
sti
xchg
aam
fdiv
sti
push
je
xor
movsb
inc
pop
xor
pop
shrl
fwait
push
and
mov
pop
and
pusha
mov
xor
inc
mov
dec
jnp
inc
xchg
lret
ret
scas
outsl
in
fsubrl
and
dec
movsb
xor
mov
dec
ds
in
add
nop
jno
into
lods
xor
outsl
cltd
adc
inc
fisubl
testl
push
fstpl
inc
mov
xor
dec
stos
nop
and
in
xchg
les
test
or
sti
sbb
push
mov
insl
mov
inc
and
push
mov
cmc
int3
fstpl
hlt
sub
icebp
sbb
pop
inc
adc
aad
aad
adc
insb
lcall
sbb
dec
ret
or
mov
inc
push
mov
ss
cld
shr
lea
je
popa
push
andl
inc
push
fiaddl
jecxz
cli
test
stos
pop
cmp
daa
add
aas
inc
das
cmpsl
jae
push
push
adc
push
xchg
dec
mov
fs
hlt
push
xchg
jae
mov
lret
aaa
movsl
jg
fwait
int3
adc
jbe
int
cmp
add
rcrl
loop
dec
mov
pop
popa
fwait
mov
adc
out
push
aas
lahf
jle
loop
test
cmp
mov
loope
mov
push
pop
or
adc
or
je
ljmp
dec
jmp
or
adc
cmp
mov
loop
mov
adc
push
les
mov
fnsave
into
mov
insl
inc
and
nop
cmc
loope
cmpsl
insb
cltd
push
jae
cwtl
xor
je
add
push
roll
neg
xchg
dec
imul
pmaxub
sub
in
mov
movsl
call
addl
in
adc
js
sbb
loopne
mov
pop
nop
pop
in
gs
mov
xchg
xor
cwtl
or
push
dec
cmp
std
pusha
shr
les
lods
movsb
outsb
hlt
mov
nop
mov
notl
mov
dec
inc
jo
jb
add
or
pushf
popa
clc
pop
aas
fwait
popf
xor
insb
push
sarb
or
add
hlt
imul
push
jle
lods
mov
rclb
pop
cltd
outsl
sub
mov
jmp
jno
ficomps
repz
cmp
pop
pop
inc
mov
pop
test
aaa
dec
mov
pop
cwtl
inc
pop
sub
cmp
je
mov
arpl
mov
aam
cmpsb
outsb
jecxz
mov
call
lret
in
or
add
movsl
popf
sbb
aad
mov
and
inc
dec
mov
cmp
scas
xor
out
xchg
sbb
dec
insl
sbb
push
stc
push
lcall
dec
ffree
dec
scas
add
stos
aad
push
outsb
xor
or
push
cmp
clc
repnz
ficomps
inc
mov
cmp
jmp
das
inc
sub
add
jge
xchg
pop
push
je
sub
lahf
fcomi
sub
movsl
adc
adc
scas
dec
add
mov
sub
andl
dec
lret
mov
push
dec
and
adc
mov
jle
ret
mov
gs
cwtl
into
repz
xor
lods
in
push
sbb
cmc
push
daa
inc
testl
xchg
sub
inc
pop
mov
pop
inc
inc
ja
xor
cmp
cmp
sub
xchg
popl
insl
test
rolb
test
dec
cs
int3
or
or
bound
into
sti
test
cmpsb
mov
sbb
mov
repnz
mov
fildl
jge
adc
nop
mov
test
mov
pop
jp
cld
cld
fcoms
push
adc
and
loop
bound
xor
int
dec
sbb
aas
adc
adc
sub
aad
push
imul
into
xor
xchg
leave
xchg
fs
data16
scas
cmpsb
insl
lock
mov
aaa
andb
mov
dec
leave
jo
jp
push
pop
cmp
mov
pop
fwait
pop
aas
or
in
mov
sub
popa
test
in
fwait
jnp
mov
dec
push
lret
xor
fcomip
lcall
das
pop
add
inc
lock
jno
and
ja
movsl
adc
ret
add
add
or
lret
daa
out
and
iret
out
lret
les
mov
leave
pushf
xor
cmc
or
lock
pop
insl
lahf
fcom
or
push
popf
fidivl
test
pop
add
inc
pop
mov
cltd
jo
fistl
xchg
jmp
cmc
and
lds
push
mov
int3
jle
int3
pusha
test
push
mov
cmc
pusha
test
shrb
test
int3
or
cmc
pusha
xor
dec
fnstenvs
jp
out
arpl
sahf
dec
icebp
jne,pn
loope
mov
jmp
push
add
lods
fsts
mov
xchg
jecxz
int
dec
int3
std
jae
addr16
int3
mov
ja
cmp
xchg
xchg
xchg
push
dec
outsb
popa
jno,pt
inc
rsm
lret
mov
dec
and
push
pop
xorb
add
jmp
pop
ret
lea
dec
adc
imul
add
lds
clc
push
mov
push
data16
xchg
das
popa
push
pop
call
pop
mov
sbb
sub
ret
ja
lea
jb
enter
imul
jns
sbb
mov
add
call
rcrb
int3
imul
int3
jg
lods
xor
jns
push
xchg
jns
ret
shlb
mov
outsb
jl
sahf
sahf
jg
scas
scas
pop
sub
xor
mov
movsb
cmp
dec
sbb
rol
jo
add
pop
cmp
sub
and
test
iret
jecxz
daa
movsb
loope
out
imul
lahf
mov
stc
fst
mov
loop
test
jb
icebp
testb
xor
out
push
pop
jae
lods
inc
mov
jno
aad
test
mov
sbb
or
movl
inc
inc
rcrb
add
mov
mov
jp
test
mov
and
pushl
into
iret
sub
cmp
pop
mov
pop
fs
jae
movsb
mov
loope
stos
push
mov
mov
fs
into
lcall
jmp
bound
popa
push
fwait
adc
cltd
or
and
das
in
mov
dec
cmp
mov
mov
lods
fisubs
gs
adc
adc
mov
into
leave
xchg
cmp
insb
jecxz
sahf
cmpsl
and
xor
inc
push
mov
orl
aad
jmp
fdivrl
add
arpl
jle
add
test
push
dec
in
in
loope
pop
inc
jb
test
test
push
loop
add
ljmp
rcll
ss
addr16
test
xor
inc
loopne
jp
sub
xchg
sbb
lea
inc
xor
pop
inc
outsb
pop
inc
lea
mov
ucomiss
or
inc
xor
loop
jg
inc
push
andb
and
jns
xchg
imul
test
mov
mov
jne
inc
or
xchg
pusha
xor
js
inc
fldenv
iret
movsb
cmc
call
add
sub
pop
mov
sub
pop
dec
xchg
xorl
dec
repz
xor
insl
jg
jnp
jne
lods
aaa
stos
sbbl
sub
je
push
pop
xchg
fidivl
cmpsl
push
loop
mov
pop
shl
cld
fildl
lea
cmp
xor
mov
ret
leave
leave
rcrb
adc
inc
call
push
icebp
lret
testl
stos
fisubrs
imul
movsb
dec
fldcw
pop
loop
lods
push
sub
out
ljmp
dec
push
cmpsl
xchg
push
nop
push
bnd
dec
push
leave
sbb
pop
xor
add
rolb
jge
cld
leave
or
ja
popa
add
pop
enter
or
and
and
out
bound
mov
push
loopne
sbb
or
mov
and
movsl
mov
xor
into
and
xor
inc
bound
push
sub
push
mov
mov
sar
mov
jge
pop
movsb
jno
jl
iret
into
mov
lods
pop
loop
int3
pop
stc
test
cmpb
or
je
lock
rclb
mov
fwait
int
out
scas
into
pop
pop
stos
or
les
daa
lock
xor
add
adc
popf
fs
adc
ds
lret
push
sbb
in
stos
mov
mov
pop
mov
es
notb
pop
mov
cli
test
cld
jb
cmc
mov
jne
cld
dec
aad
xor
rcrl
jb
std
jb
iret
lret
movb
lods
aad
inc
mov
inc
xchg
inc
in
ds
fs
jl
rcrl
fstps
mov
mov
mov
push
pop
out
cmp
sbb
push
pop
push
jecxz
adc
in
sbb
aad
enter
sub
jg
cmp
mov
push
jg
mov
add
xchg
mov
movsl
jne
in
inc
leave
cltd
testl
daa
in
push
add
gs
cmp
dec
jge
or
jl
mov
pop
rcrl
push
hlt
cmpsl
ja
cmp
jae
lret
cs
popf
sub
aaa
nop
fwait
inc
sbb
mov
pop
mov
scas
std
mov
aas
pushf
into
inc
data16
in
sbb
inc
popa
dec
and
cmp
dec
ljmp
jo
sbb
cmp
sbb
dec
and
ljmp
cld
jg
sub
jo
adc
cmp
gs
mov
jmp
fld
inc
cltd
jle
lock
mov
mov
lret
ret
clc
mov
sti
add
ds
dec
cmp
sub
sbb
inc
jle
pop
xor
vpmacssdd
push
lock
gs
imul
cld
jns
xchg
mov
mov
adc
xor
js
dec
inc
push
int3
lods
data16
dec
xor
xor
rcr
ret
sub
or
sub
in
ljmp
std
xor
in
xor
cs
cltd
pop
cwtl
add
faddp
or
push
aaa
outsb
cmp
bound
popf
jle
jl
into
aaa
xor
dec
push
or
ficoml
cmp
iret
push
out
dec
sbb
div
add
and
aas
add
jno
pusha
push
cmpsb
and
sub
scas
movsb
in
inc
jecxz
push
xor
inc
cmp
or
fwait
dec
sub
daa
outsb
jns
xchg
imul
sarb
pushf
adc
es
sbb
aas
ds
fs
shrl
sub
push
insl
fcmovbe
mov
notb
push
popf
repnz
jae
jns
aaa
xchg
stos
mov
mov
fdivrs
sbb
mov
nop
enter
repnz
cmp
jge
dec
cld
adcb
inc
jle
data16
push
shlb
xchg
sub
dec
cmp
mov
xor
push
rcrl
popa
insl
jo
mov
adcb
xor
sbb
pusha
jecxz
mov
ret
fimuls
in
mov
mov
test
lahf
mov
cli
mov
scas
and
mov
in
in
xchg
daa
xchg
lds
js
mov
sub
sub
xchg
jecxz
jp
sahf
pop
jno
mov
push
mov
jge
jne
loope
cmpsb
lds
sub
mov
mov
test
sub
inc
test
leave
insl
adc
pop
rcll
repnz
xchg
xchg
movsb
dec
and
lret
aad
adc
add
xchg
notb
xor
jbe
fcoml
push
aaa
in
xchg
loopne
std
out
adc
xchg
pop
sbb
add
sub
mov
fmul
sbb
es
cmp
dec
loope
mov
fmull
or
adc
scas
inc
inc
call
repnz
test
xchg
ss
stos
insb
jb
cmpl
stc
sti
outsl
dec
mov
xor
jne
inc
sbb
sbb
ds
mov
cwtl
lods
repnz
je
std
rol
add
jmp
jb
mov
out
fs
aaa
jb
mov
mov
add
loop
mov
iret
inc
dec
loopne
shll
adc
pop
les
add
sbb
push
leave
ja
nop
push
jmp
fwait
mov
mov
mov
repnz
mov
mov
leave
inc
push
test
adc
sub
sbb
lods
sahf
mov
jo
mov
cmp
hlt
stos
imul
xor
mov
sarb
in
jl
shr
inc
notb
mov
mov
daa
inc
popf
inc
cmp
or
js
add
or
mov
aas
loope
stc
inc
sbb
xchg
pop
add
inc
push
cmpsl
add
gs
mov
iret
cmp
push
inc
mov
ss
cld
call
jp
add
jp
cmp
in
jo
push
insl
rorb
sbb
sti
shlb
aam
mov
scas
mov
push
mov
add
push
xchg
sbb
ja
mov
jmp
fwait
xor
fwait
cmp
popa
sbb
xor
das
sbb
cli
jp
sbb
push
into
js
pop
test
bnd
andb
adc
push
fldenv
out
out
adc
fwait
jno
adc
mov
cmp
pop
push
pop
add
jge
cmp
xchg
clc
pop
mov
mov
fwait
rcrb
dec
fidivs
add
push
nop
cmp
popf
fs
lods
icebp
pop
and
fxch
jg
aam
mov
dec
or
xchg
test
outsl
std
add
jne
jl
mov
loope
sbb
lock
push
inc
jl
pop
rcll
and
pop
out
mov
aas
mov
mov
test
inc
clc
xor
push
lea
push
push
push
jnp
fwait
outsb
fcoml
lea
mov
add
hlt
sub
mov
stc
push
popa
push
and
cltd
dec
sbb
arpl
xchg
jg
mov
cmp
cmp
aad
scas
mov
fdivs
sub
stos
xor
call
xchg
push
ds
subl
pop
xorb
xchg
nop
inc
lds
jecxz
adc
inc
mov
inc
and
xor
xor
or
dec
jp
mov
mov
hlt
outsb
ret
cmpsb
daa
lahf
xor
and
repnz
dec
mov
lss
popf
mov
es
fs
ror
into
movsl
inc
int
pop
fimuls
xchg
xchg
fwait
xchg
jecxz
push
xor
dec
popa
stos
cmpsl
mov
shlb
add
xor
loop
les
sub
out
popa
dec
movsl
pop
daa
repnz
jp,pt
sbbl
nop
jecxz
cld
adc
adc
sub
call
adc
shl
inc
pop
cwtl
out
icebp
ret
aad
ret
popa
lods
scas
pushl
ss
pop
sub
push
ud0
movsl
mov
pop
push
aaa
pop
fs
jnp
loopne
fimuls
clc
imul
lcall
negb
dec
mov
enter
adc
into
clc
push
inc
data16
dec
adc
add
test
mov
lods
mov
adc
mov
jnp
ret
pop
lods
data16
fsubrl
pop
mov
jp
inc
divb
sbb
shl
js
jl
mov
je
aaa
je
or
aaa
and
aas
icebp
adc
int
daa
xchg
popf
es
cwtl
icebp
test
cli
cmpsl
xor
lahf
enter
add
call
into
xchg
mov
lret
hlt
insb
push
sub
dec
sbb
xchg
ds
fwait
insl
aaa
cmp
or
mov
loope
and
adc
xorb
rcll
sub
leave
and
mov
pop
scas
mov
add
jae
cmp
add
pop
xchg
jmp
cld
repz
fcomi
out
ret
in
stc
mov
scas
imul
je
pusha
sti
jne
pop
mov
mov
repnz
sub
jg
dec
dec
call
mov
mov
out
xchg
jmp
fnstsw
ljmp
imul
out
pop
sub
xor
in
cmc
addr16
inc
out
pop
outsb
and
lods
je
loope
and
insb
pop
pop
lahf
cmp
xchg
inc
pop
push
mov
cltd
es
or
jge
in
add
mov
lahf
pop
xor
inc
sbb
adc
clc
aas
push
in
jge
push
addr16
out
dec
push
lret
cmpb
sub
or
adc
and
fldcw
mov
xor
and
pop
call
sbb
int3
dec
rcll
jmp
outsb
add
cmc
dec
adc
into
gs
or
lock
jl
mov
jl
and
fisubs
xor
out
lret
inc
outsl
and
jo
stos
adc
decl
rorl
xor
pop
xlat
mov
loope
jge
push
mov
fstpl
repnz
mov
push
jns
add
cmp
js
push
shl
movsb
sub
aas
push
js
xchg
stos
imul
mov
enter
ficomps
gs
stos
inc
add
fbld
rcr
out
or
xchg
cmp
mov
xchg
es
or
push
ficompl
js
mov
sahf
ret
lds
mov
rcrb
cmpsb
xchg
stos
mov
ret
pop
sub
loope
push
icebp
sub
aaa
mov
xchg
sub
loop
fimuls
xchg
cmp
iret
or
xchg
icebp
popa
xchg
pushf
pop
cmpsb
aaa
mov
lock
in
scas
outsl
out
std
xchg
sar
cmp
outsl
xchg
inc
adc
testl
mov
adc
push
int
cmc
mov
mov
js
pushf
scas
and
mov
loop
mov
adc
lcall
cmpsl
push
sub
dec
sub
shrl
sub
or
mov
repnz
in
notb
and
rcll
mul
inc
mov
int
push
je
in
dec
fcmovu
inc
lcall
and
insb
push
sbb
fistps
ljmp
jns
xchg
or
xor
and
arpl
push
fbld
out
data16
sub
mov
cmp
outsb
lea
loope
test
inc
adc
into
ljmp
jmp
test
jle
or
cwtl
std
lods
out
test
aaa
fildl
imul
int
cmpsb
push
push
add
aam
pop
jnp
scas
repnz
xor
aam
fsubr
fcoml
mov
push
sbb
aaa
xchg
push
dec
ljmp
sub
jns
jmp
mov
push
push
loope
sbb
push
nop
loope
inc
jo
or
xchg
pop
inc
ja
mov
in
and
or
sahf
bound
jnp
sub
int3
xor
out
subb
popa
sub
out
dec
jecxz
mov
xchg
xchg
ljmp
lods
mov
xchg
repz
xor
ljmp
mov
stos
ret
in
xor
push
stos
dec
cld
popf
or
or
dec
mov
dec
sub
test
pop
fdivrs
push
mov
into
mov
push
pop
jl
fstps
leave
stc
push
cmc
call
or
push
test
je
ret
aad
jecxz
idivl
mov
ss
in
data16
ljmp
mov
stos
aam
dec
push
lret
mov
and
test
or
bound
inc
loop
test
push
push
push
mov
dec
or
es
push
and
mov
movsb
push
push
and
pop
pushf
pop
movsl
jmp
fidivs
lret
xchg
cmp
jne
xchg
or
test
push
loopne
xchg
lea
in
fbld
lods
xor
addr16
insl
mov
aas
mov
and
aaa
and
cltd
push
jl
sub
mov
movsl
aad
or
xorb
lret
jle
andl
scas
dec
jl
rep
xor
insl
cmpsb
xor
dec
stc
adc
mov
outsl
xchg
fistpll
test
and
mulb
imul
cmpsl
stos
pusha
loope
and
adc
mov
sete
cli
mov
ljmp
out
insl
dec
jge
mov
ljmp
inc
push
test
xchg
scas
enter
fmuls
jmp
sub
xlat
jne
mov
mov
test
xor
clc
test
inc
int
loopne
mov
jl
pop
jb
inc
lahf
mov
xchg
insl
fidivs
mov
call
mov
addb
cmp
int3
enter
in
xor
xor
mov
xchg
mov
dec
jle
inc
mov
dec
es
pusha
aaa
iret
cmp
cmpsb
je
cld
xchg
out
int
loop
cmp
xchg
pop
pop
scas
push
and
in
pop
sub
rcl
and
into
in
sbb
mov
lcall
mov
leave
leave
mov
mov
and
and
mov
rorb
stos
push
or
lret
fsts
je
xchg
mov
outsb
sbbb
jg
repnz
cmp
mov
cmpsl
add
jmp
pop
pop
dec
outsb
rclb
inc
xchg
aad
loopne
or
pop
adc
pop
scas
mov
pop
and
push
inc
pop
inc
xor
push
sub
add
xchg
pushl
int
and
xor
out
stos
add
lret
dec
fwait
and
pop
jb
mov
pop
cwtl
add
outsl
jae
nop
pop
inc
das
dec
or
xchg
inc
xor
sti
nop
call
jl
jns
aad
adc
hlt
cli
popf
lret
sti
mov
int
xchg
adcl
jle
aaa
mov
loope
fsubrs
ret
sub
lret
fs
nop
mov
adc
mov
add
lds
sub
jb
aam
hlt
notb
sahf
dec
jae
jl
pusha
mov
in
jge
or
pop
outsb
push
sbb
insl
ljmp
adc
xor
test
loop
aad
in
inc
cld
fldl
outsb
mov
cmpb
mov
imul
sbb
lock
movsl
fists
fs
mov
loope
out
pop
lret
xor
push
rcrb
mov
adc
push
imulb
lret
dec
test
pop
pop
sub
pop
movsl
clc
stc
lods
push
or
es
in
ror
jne
fimuls
xchg
loopne
and
daa
lods
sub
mov
ret
pop
mov
mov
imul
shll
jo
mov
jl
cmp
popa
stc
and
lock
in
sbb
cmp
lcall
out
shll
sub
aad
fists
imul
mov
mov
and
cli
inc
mov
pusha
mov
das
inc
mov
clc
hlt
lods
push
add
xor
pop
dec
cmp
push
cmpb
ss
lock
xchg
cmp
xor
lea
jae
sub
iret
xchg
add
rorl
movsb
ds
loope
stos
xchg
mov
sub
rcrl
fistpl
insl
out
js
ficoml
lods
scas
push
dec
test
mov
xor
add
std
enter
mov
imul
inc
and
jb
ss
in
jecxz
pop
sub
jmp
stos
stos
sub
cmp
and
testb
xor
cld
and
dec
das
pop
lret
xchg
call
mov
ss
loopne
mull
or
xlat
lds
sbb
lahf
xchg
andb
dec
add
pop
ljmp
sub
out
roll
leave
imul
test
or
popa
mov
or
jnp
pop
xchg
int
push
mov
mov
lods
fstps
xor
dec
shlw
ja
xchg
add
aas
pop
push
jmp
sbbb
cld
movzwl
cltd
pop
shrl
pop
leave
das
fwait
inc
test
or
xchg
dec
sbb
push
pop
lock
jmp
fs
mov
addr16
cmp
cli
jecxz
popa
dec
sub
mov
stos
jno
pop
mov
mov
mov
adc
outsb
or
pop
mov
mov
xchg
mov
inc
cmp
add
cmpsl
push
es
jmp
and
nop
xchg
addr16
xlat
fcmovbe
jnp
pop
dec
aam
add
ret
movsb
ljmp
mov
push
sub
push
and
mov
cltd
aad
leave
push
mov
mov
dec
dec
ljmp
mov
mov
call
and
xchg
add
iret
xor
inc
leave
add
pop
repnz
aam
adc
add
adc
jmp
jge
sti
dec
mov
and
pop
mov
hlt
movsl
sbb
adc
repnz
xor
push
sti
push
xchg
movsb
nop
fldt
mov
mov
aaa
in
daa
popa
pop
stc
mov
lret
test
pusha
daa
add
test
pop
and
xchg
repnz
push
dec
xchg
lods
xor
imull
shlb
rol
in
mov
sub
push
or
cmp
push
pop
leave
loope
stos
mov
add
push
test
and
sub
or
fmulp
hlt
sbbb
pop
add
arpl
pop
movsl
iret
adc
rol
fidivl
inc
inc
and
mov
mov
xchg
stos
push
inc
fs
add
jmp
jae
in
mulb
dec
test
outsl
xor
lea
inc
dec
mov
xlat
pop
fwait
mov
popa
inc
add
push
int
jbe
dec
adc
in
mov
scas
add
in
mov
cmp
jno
push
lods
subl
xchg
out
and
and
sub
xchg
imul
cwtl
or
cmp
push
jg
daa
mov
xchg
adc
loop
inc
lahf
scas
mov
push
int3
xchg
jnp
xchg
pop
mov
cmp
shlb
mov
xor
les
and
dec
je
jecxz
sub
pop
mov
dec
ss
cmp
lret
test
pop
sbb
push
sbb
rcr
cmp
sbb
push
out
test
js
jl
rorb
cmpsb
in
clc
pushfw
push
inc
in
loope
leave
mov
fsubrs
cmpsl
xor
mov
inc
push
mov
and
in
lcall
push
pop
sbb
push
add
pop
je
push
jno
test
sub
int
imul
pop
dec
into
fstpt
lods
inc
jecxz
std
push
fbld
xchg
push
adc
push
shlb
adc
lods
cmp
cwtl
jmp
das
std
cmp
or
call
test
mov
fwait
inc
cld
push
jae
loopne
add
sbb
mov
fisubl
pop
ljmp
outsb
lds
ds
mov
movsb
out
scas
mov
lock
dec
loope
or
stc
jle
mov
int3
jb
mov
std
sub
pop
add
sbb
xlat
mov
cmc
leave
fcompl
cmc
ds
movsb
jg
adc
imul
push
lea
movsb
es
jmp
fidivrs
jmp
test
rclb
and
jg
pop
mov
loope
xchg
mov
pop
lcall
or
test
andb
rcr
or
pop
mov
arpl
fldt
push
daa
jl
cmp
adc
leave
loopne
lods
fisubs
sbb
outsb
pop
lret
xor
inc
xor
sti
cmp
and
xor
add
scas
pop
cmp
push
dec
inc
push
fadd
sub
jo
jmp
sbb
cmp
xor
sar
or
lods
sti
fldt
xor
imul
test
lods
pop
inc
push
and
fiaddl
stos
push
mov
ror
pusha
mov
pop
inc
mov
shl
imul
enter
adc
and
fucom
dec
in
or
dec
add
lock
mov
lea
sub
inc
clc
in
push
mov
imul
push
mov
xchg
mov
mov
dec
xchg
mov
loope
cli
sti
xlat
push
inc
cmp
jb
jg
jle
cli
sub
pop
jne
movsl
jge
pop
cmp
pushf
sbb
ja
add
sbb
adc
loopne
testl
mov
outsb
cmp
cwtl
ret
adc
cltd
les
imul
outsl
std
push
nop
pop
out
int3
out
push
call
add
cmpsb
stc
iret
sbb
mov
push
push
push
imul
jmp
cld
lahf
test
sahf
imul
adc
pop
mov
test
cld
inc
cmp
mov
mov
push
jne
mov
jo
mov
push
pop
or
pop
jecxz
inc
std
lock
push
out
dec
sub
xchg
popa
movsb
es
stos
outsl
andl
dec
lock
push
imul
fists
sub
mov
xchg
push
jbe
loope
dec
and
test
negl
mov
inc
cmp
mov
stc
push
or
imulb
lds
jbe
and
clc
insl
mov
or
jge
mov
inc
ret
aam
lcall
cmp
push
pop
lcall
sbb
cmc
out
pop
jnp
fs
push
ss
mov
or
jo
popa
aas
inc
pop
aaa
cli
rcrl
enter
lret
lds
inc
movsl
stos
sub
fidivs
mov
cs
adc
xchg
adc
mov
rcll
inc
cmp
sub
push
out
xor
mov
add
outsb
ljmp
mov
or
push
shrb
sbb
inc
ds
andb
push
jecxz
jge
fistpll
lret
sbbb
mov
test
fildl
idivb
movsb
les
pop
cltd
aaa
sub
popa
sbb
push
sbb
test
call
ja
in
lds
add
sub
aaa
dec
jle
cld
pop
xor
dec
mov
scas
dec
mov
rorb
add
inc
icebp
mov
rorb
sti
int
mov
mov
cmpsl
ljmp
inc
daa
cmp
mov
cmp
outsb
sbb
and
cmp
ret
push
addr16
inc
cld
mov
mov
enter
cli
fmulp
jo
jne
mov
adc
icebp
movsb
movsl
xchg
sti
dec
cli
fwait
push
xchg
test
cli
imul
and
imul
in
lock
cmpsl
sub
mov
pop
dec
push
mov
inc
rorl
sti
mov
xrstor
add
lds
pop
and
repnz
push
jbe
imul
adc
pop
pop
inc
xchg
adc
mov
cld
test
cli
test
dec
fwait
push
jns,pt
cmp
shr
fcomps
rolb
js
jle
xchg
shrl
addb
fdivl
pop
mov
mov
sub
or
push
scas
jge
jge
cmp
fwait
movsb
stos
pop
and
mov
xchg
dec
mov
sahf
les
mov
add
xor
inc
hlt
into
push
cmp
lcall
sti
loopne
xorl
cmpl
or
jne
dec
dec
jne
jg
xchg
je
jg
incl
jbe
imul
stos
ss
mov
xlat
clc
sahf
jne
mov
andl
push
dec
push
dec
push
repnz
mov
test
jne
push
mov
xchg
dec
ret
mov
stos
cmp
jmp
rep
fcmovnu
jne
mov
xchg
enter
lods
jmp
lahf
or
leave
push
add
pop
jb
outsl
movl
in
std
sub
imul
in
jns
lahf
aam
std
insl
or
dec
fidivl
push
nop
imul
push
popf
jle
lods
jmp
xor
or
sub
cs
jmp
or
xor
sub
mov
nop
aad
out
and
nop
pop
xchg
imul
inc
xlat
shlb
xlat
adc
test
inc
repnz
fidivl
test
jg
rcr
out
mov
fucomp
je
adcb
cld
xor
in
inc
sub
or
jae
es
mov
insl
insb
mov
stos
or
out
lret
inc
mov
pusha
popf
dec
add
pop
mov
cmp
jae
cmp
lahf
or
shrb
sub
stos
bound
out
cmc
adc
testb
and
pushf
imul
dec
sub
fwait
jno
stos
dec
aad
into
xor
mov
not
xor
xor
movsl
jb
jmp
mov
nop
andb
shlb
mov
scas
out
out
scas
xor
lahf
xchg
stc
or
mov
xor
mov
push
lahf
add
adc
sub
pop
int3
fbstp
inc
loope
testb
sub
fstpl
mov
int
outsl
xor
sbb
movsb
ret
jp
pop
xchg
mov
adc
mov
movsl
mov
cmp
mov
sub
js
mov
shll
sbb
out
dec
mov
aad
psllw
xor
jns
popa
dec
shll
sbb
mov
inc
xor
inc
sbb
cld
xchg
adc
xchg
xor
dec
imul
in
mov
cwtl
inc
adcl
xchg
sub
mov
pop
subl
and
or
sub
adc
or
jmp
cmp
pop
or
ss
pop
cs
pop
gs
stos
dec
push
xchg
enter
adc
mov
sbb
arpl
mov
adc
ret
pop
jo
inc
in
mov
movsl
stc
xchg
push
add
mov
cltd
mov
cmp
cmpsb
gs
push
mov
popa
mov
stos
data16
repnz
in
sbb
inc
jno
int
dec
sbb
dec
mov
adc
pop
and
pop
adc
mov
repnz
add
xor
adc
or
sarb
or
cmpl
call
test
mov
mov
sti
push
mov
push
mov
cs
xchg
and
ljmp
cltd
or
mov
jmp
mov
orb
xor
fwait
push
cwtl
push
push
push
and
leave
adcb
insl
fldln2
pop
sbb
xchg
cmp
shlb
fstps
adc
mov
mov
pop
jl
inc
ds
and
lcall
push
mov
enter
cmp
subb
dec
mov
clc
jle
push
or
sahf
xor
push
jns
push
int3
cmpl
iret
mov
sub
xchg
lcall
fidivs
scas
pop
push
mov
cli
shl
fisubrs
mov
pop
adcl
push
cmp
rcrb
pusha
mov
mov
and
cmpsb
es
sub
and
roll
dec
test
inc
shrl
negb
data16
cli
jmp
push
adc
mov
int
mov
or
popl
push
out
fwait
xchg
fdivrl
mov
inc
mov
mov
popa
mov
lock
clc
dec
insb
cmp
jnp
inc
cwtl
jno
stos
lods
je
cs
mov
and
push
dec
sub
out
ljmp
push
pusha
push
enter
test
adc
pop
popa
pop
sti
imul
fdivrs
cli
sub
fnstenv
mov
mov
jecxz
inc
in
fstp
ja
imul
mov
inc
pop
adc
out
lock
xor
pop
iret
fnstsw
sub
jns
jnp
gs
jno
shlb
mov
test
fstpl
jle
push
or
sbb
sbb
mov
pop
ljmp
sbb
pop
dec
sub
pusha
xor
push
xchg
imul
es
cmc
sub
xorb
jae
mov
pop
fadd
pop
sub
and
ss
cmp
int3
inc
lods
repnz
aaa
test
mov
push
pop
sub
pop
pop
xor
xor
movsl
scas
stos
pop
std
dec
loopne
shrb
stos
pop
adc
jl
nop
notb
out
pop
ja
inc
outsl
pop
es
mov
cwtl
mov
std
popa
sub
jbe
push
fsubr
jae
dec
mov
adc
cmp
xchg
add
jp
add
mov
aas
dec
mov
repnz
xor
decl
push
and
push
jbe
aad
inc
sub
sub
cmp
in
inc
rcrb
cmc
xchg
push
iret
jno
int3
push
push
or
out
xor
sbb
in
inc
inc
cmc
mov
add
movsb
jbe,pt
cmc
cmpsb
pop
pop
jmp
out
sub
push
fildl
xor
xor
and
and
add
shr
inc
xlat
push
data16
pop
sbbb
scas
loope
sub
xor
cltd
mov
xchg
fisubs
aad
dec
dec
out
add
repnz
aad
cmpsl
mov
jg
dec
add
rolb
and
roll
xor
pushf
pop
lds
cli
fisttps
and
mov
dec
in
pop
outsb
in
mov
dec
jae
cmp
imul
cmpsl
mov
xchg
jp
into
xchg
cmp
xchg
add
fnstenv
inc
push
xor
mov
in
jb
and
loop
in
shlb
imul
movsl
dec
jmp
decl
iret
popf
iret
jge
lods
xor
xchg
lret
leave
cmpsb
sbb
fmuls
sbb
in
and
hlt
leave
and
mov
stos
nop
cmp
or
jnp
ret
repnz
lret
sub
mov
std
and
movd
movd
dec
ja
aad
stos
out
in
push
lock
out
jmp
lcall
pop
fildl
lods
push
stos
aaa
dec
test
push
cli
jb,pn
lods
repnz
pop
arpl
lea
das
sbb
iret
xorb
add
fstpt
pop
ja
jecxz
mov
nop
dec
pop
std
mov
loope
jns
mov
push
jno
lcall
and
loop
cld
clc
jo
daa
cmp
mov
fidivs
and
cs
or
jg
pop
iret
add
lahf
out
mov
inc
add
mov
and
lock
es
xor
push
add
dec
dec
mov
mov
andb
cltd
hlt
jge
adc
int
sbb
dec
sbb
lret
je
jb
bnd
push
dec
mov
leave
ret
dec
xchg
jle
mov
popa
jne
jmp
loope
pop
pop
repz
cld
enter
adc
add
sub
test
xchg
movsl
andl
mov
adc
adc
mov
loope
push
shl
jmp
in
sbb
je
les
jg
sar
and
js
mov
incl
aad
cltd
daa
stos
push
sub
sub
sbb
shlb
pop
int
or
xchg
push
or
mov
xchg
int3
test
sarl
mov
stos
leave
mov
jp
popa
or
ds
ret
mov
ror
in
add
aas
sahf
inc
into
add
test
inc
cmp
test
cmp
int3
jl
cmp
test
xchg
out
insb
sbb
mull
daa
mov
lods
push
movsb
clc
adc
and
push
movsl
inc
mov
scas
pop
shlb
mov
das
in
mov
les
cltd
shl
sbb
int
pop
and
jne
push
insl
push
add
jns
jns
aas
xchg
pushf
cmp
cwtl
idiv
xchg
mov
scas
mov
sarl
aam
adc
loop
push
and
lock
imul
jns
xlat
mov
fildll
sub
sbb
jns
nop
sub
and
stos
or
pop
push
adc
out
pushf
xchg
ds
cmp
mov
push
pop
mov
loopne
cmp
mov
loop
clc
mov
hlt
adc
push
in
mov
lahf
adc
inc
insl
je
xchg
cmc
lock
rclb
or
push
sbb
imul
push
popa
imul
push
sbb
enter
and
pop
dec
push
cmp
mov
stos
lds
add
cmp
push
sbb
idiv
les
mov
roll
and
int3
mov
jo
arpl
hlt
lcall
mov
jg
cmp
jno
enter
dec
xor
lock
jecxz,pt
xchg
or
jb
gs
push
daa
pop
lret
mov
mov
sbbl
sbb
mov
mov
mov
iret
xor
loope
or
pop
out
test
cli
mov
loopne
xchg
inc
je,pn
xchg
daa
adc
pop
cltd
sub
ss
inc
nop
cmp
js
outsb
cmp
addr16
dec
fdivs
xor
mov
or
mov
addr16
sub
inc
add
mov
or
adc
lods
jg
xor
push
scas
or
movsb
rclb
and
xchg
add
mov
sbb
mov
insl
jnp
jnp
pop
jns
sbb
icebp
push
outsl
rsqrtps
xlat
rorb
and
push
mov
mov
push
pop
lds
xor
in
inc
inc
mov
mov
mov
mov
lds
pop
xchg
ss
lods
lret
or
mov
and
mov
mov
sub
jmp
addr16
gs
outsb
and
loopne
movsb
sbb
mov
pushf
out
aam
dec
jecxz
adc
repz
dec
out
dec
outsl
mov
mov
adc
lods
fisttps
pop
in
hlt
xor
mov
mov
mov
lret
das
pop
sbb
fildll
nop
lods
jecxz
leave
cmp
xor
xor
shl
sbb
sbb
movsb
insl
xlat
dec
sti
sbb
andl
pop
jne
repnz
orl
and
mov
jl
adc
mov
and
sbb
mov
outsl
pop
in
adc
xor
int3
xchg
sahf
jmp
sarb
xor
movsb
int
int
addr16
push
or
rorb
sbb
rcll
xchg
testl
add
mov
out
ret
andb
iret
movsl
mov
test
fisubs
mov
add
adc
notb
clc
jns
jbe
out
dec
adc
sti
sahf
mov
dec
dec
push
mov
jbe
mov
fwait
mov
lcall
xorl
adc
fisttpl
mov
lahf
outsb
lcall
clc
jmp
lods
dec
pusha
xchg
outsl
lret
jmp
push
jp
scas
dec
inc
rorb
add
out
aad
jo
jo
sbb
lods
dec
push
mov
xor
xor
int
inc
jg
xorb
lret
stc
sub
ss
out
sub
pop
and
mov
pop
xlat
pop
lock
out
lea
test
mov
es
dec
nop
mov
xor
data16
imul
xor
pop
xor
out
pop
mov
adc
int3
adc
xor
int
adc
das
push
adc
dec
mov
call
out
adc
cmp
das
xchg
sbb
pop
xchg
cmc
jle
daa
lcall
xor
test
sub
aaa
rorb
sbb
push
adc
mov
or
inc
insb
lret
xlat
in
fs
aas
cmp
sbb
pshufw
xchg
int3
jnp
inc
adc
mov
js
xchg
aad
xlat
xchg
dec
sti
pop
xchg
ret
jecxz
lahf
xchg
adc
hlt
mov
mov
xchg
mov
icebp
iret
xchg
lea
dec
stos
pop
sbb
je
ljmp
push
sbb
bnd
inc
rorb
inc
mov
mov
sub
cmp
push
popa
scas
mov
xchg
pop
mov
push
push
adc
fstpt
and
loopne
adc
mov
push
push
inc
sbb
stos
in
rcrb
clc
cwtl
js
jb
cmp
ja
outsb
cli
mov
cmpsl
fdivp
mov
stc
dec
testb
add
stos
clc
cmc
ret
dec
lds
xor
orl
data16
jae
in
in
and
inc
mov
in
fdivs
mov
cli
pop
test
adc
scas
int3
iret
je
leave
lock
cli
jg
leave
mov
mov
add
movsl
add
clc
leave
sbb
bound
mov
sbb
push
insl
pusha
orb
repz
leave
xchg
mov
aaa
aas
mov
insl
jnp
loope
int3
inc
int3
call
leave
aaa
lock
xlat
adc
jne
inc
adc
int3
xchg
xchg
lcall
adc
inc
mov
fcmovne
aad
pop
in
pop
jns
ret
sbb
rol
gs
jmp
mov
and
xlat
in
lods
sahf
mov
dec
psllq
shll
clc
fisttpll
popf
ss
pusha
out
fwait
es
lcall
mov
data16
insl
dec
les
pop
insl
push
jae
mov
cmp
add
fstl
mov
pop
and
mov
cld
pop
aam
add
fiaddl
dec
mov
pop
inc
sarb
push
fwait
sub
xor
jge
test
fimull
pop
lods
test
testb
cltd
push
in
int
int
jle
xchg
adc
inc
inc
jae
add
mov
mov
mov
iret
mov
fldcw
pop
mov
cs
or
pop
and
popf
jae
adc
nop
push
shl
sbb
xchg
fcomps
in
rcr
and
das
pop
fimuls
lock
cli
or
inc
push
in
push
aaa
fdivrl
lea
lahf
pop
cmpsb
iret
pop
adcl
xor
scas
test
xor
mov
mov
shr
rol
scas
lcall
out
lret
cmp
dec
lock
lret
xchg
or
movsb
adc
shrl
aaa
jl
cmpsl
dec
sbb
xor
mov
xchg
xchg
push
sarb
cld
cmp
mov
insb
dec
icebp
mov
push
inc
subl
sbb
pop
xchg
sbb
sub
repnz
das
leave
ja
push
das
jbe
cli
addl
push
mov
outsl
scas
and
push
push
mov
jne
mov
lahf
cmp
jmp
pop
ljmp
pop
xor
and
ret
mov
pop
lahf
push
faddl
arpl
scas
mov
insb
fs
pop
push
das
icebp
lret
jno
jns
clc
idivl
jb
jmp
lods
loopne
pop
rcl
js
lahf
xchg
or
push
mov
adc
push
add
cmp
aam
shll
inc
mov
jmp
and
xor
pop
push
inc
into
js
pop
xor
or
sub
cltd
xor
and
pop
push
out
dec
jo
mov
sub
jle
out
xchg
lods
lods
sub
test
mov
lret
out
fistpll
pop
inc
sbb
mov
pop
push
aam
andb
xrstor
push
arpl
fstl
mov
ja
xchg
clc
scas
inc
sahf
dec
mov
sub
outsb
dec
ret
rclb
jecxz,pt
sub
addl
xor
pop
or
std
testb
stos
jl
pop
cmc
xor
pop
adc
cmp
movsb
mov
imul
push
lock
mov
pop
ss
in
daa
xchg
lret
cmp
test
into
call
mov
outsl
imul
sbb
jae
push
mov
sub
mov
mov
outsl
jp
cmp
mov
sbbl
mov
fwait
fwait
in
movntq
out
enter
sbb
mov
adc
dec
aam
imul
sbb
pop
ficoms
jge
fstps
dec
jne
jns
andb
outsb
sub
fnstenv
jp
or
into
popa
mov
or
jmp
and
mov
push
pop
lret
xchg
lcall
xchg
pop
loopne
mov
or
repnz
pusha
xlat
inc
xchg
lea
mov
and
xor
jle
addl
dec
mov
pushf
adc
mov
sub
sub
pop
das
adc
lahf
cmp
shll
xchg
dec
or
stos
aas
popf
cmp
daa
pop
mov
out
add
mov
and
cmp
add
push
xor
jl
dec
mov
lea
pushf
xor
pop
push
push
cmc
imul
dec
pop
xchg
mov
dec
xchg
test
popa
mov
fadds
pop
sbb
ss
testl
sbb
sub
push
mov
mov
mov
sbb
mov
and
xor
dec
and
fwait
rorl
int3
or
xchg
push
push
ss
or
push
icebp
std
shrb
lods
or
or
mov
or
addb
stos
cld
mov
mov
add
stos
insb
push
sbb
cli
pop
popf
jge
pop
cmp
pop
es
loop
jo
sub
movsb
nop
add
lods
int
lods
fs
fadds
hlt
mov
adc
pusha
or
xchg
scas
in
sbb
dec
mov
cld
jns
sub
enter
cwtl
sub
push
inc
cmpsl
push
inc
jns
stos
mov
xchg
out
loope
sbb
test
or
cmp
pop
adc
test
repnz
dec
or
imull
ficoms
push
mov
lds
jb
lret
push
mov
cmp
test
popf
iret
jno
sub
jge
cmp
stos
pop
sti
xchg
fildl
mov
test
sbb
rorb
in
sbb
pop
out
adc
pop
ja
rcrl
sbb
mov
mov
xor
in
je
add
sbb
int
add
or
in
cmc
shlb
push
xchg
in
push
int
inc
loop
sub
xchg
push
mov
fs
add
xchg
popf
xchg
sbbb
sbb
aas
inc
mov
fwait
sub
xchg
push
fdivs
add
cwtl
test
jb
sbb
mov
lock
roll
push
out
fs
push
sub
cmpsl
lcall
xchg
lods
lods
ret
test
fdivp
cmp
js
push
jno
repz
movsb
call
pop
adc
pop
sbb
adcl
and
fcmovnb
mov
inc
xchg
rorb
lods
xor
xor
lret
or
dec
xchg
mov
aas
cmpsb
and
jp
mov
pop
mov
xchg
popa
mov
dec
pop
xor
mov
test
jae
jle
ds
push
xor
cmp
and
ror
scas
cwtl
jg
out
cmp
mov
mov
add
add
mov
fistpll
and
jbe
xor
rclb
les
pop
inc
out
test
lcall
inc
addr16
cwtl
lcall
aad
adc
cs
mov
cmpl
and
xchg
test
xchg
leave
idivl
inc
fcoml
ja
cmp
sbb
std
int3
test
push
fdivs
push
inc
js
arpl
cltd
cltd
idivb
push
or
dec
rclb
dec
pop
cmp
add
call
pop
and
push
lock
add
in
mov
xlat
jae
jb
pop
pop
pop
lds
add
lods
in
andb
mov
vunpckhpd
add
cmc
pop
adc
pop
sub
sbb
andnps
jne
int
imul
sub
mov
dec
cld
sarb
iret
pop
jmp
sub
dec
insb
shlb
push
jg
andl
sbb
adc
insb
fldenv
into
add
cld
push
jl
xchg
xchg
test
cmp
sbb
sahf
imul
scas
cltd
and
or
push
or
lods
scas
cmp
cmp
adc
mov
imul
cld
push
mov
outsl
xor
loopne
sub
pop
mov
or
sbb
mov
popf
add
or
notl
mov
pusha
dec
push
mov
add
adc
lret
in
ss
jae
hlt
push
jle
push
jno
push
inc
add
mov
roll
es
imul
orl
mov
call
aam
add
push
cld
or
jp
decb
out
test
fildll
lret
add
mov
lods
aam
dec
gs
lcall
lds
std
adc
stos
lret
inc
xchg
int3
xchg
jb,pn
pusha
outsb
push
inc
mov
jne
fs
sbb
jl
lret
add
cmp
mov
popf
mov
pop
or
int
fnstcw
xchg
adc
in
dec
ljmp
aaa
nop
push
popf
cwtl
and
data16
lcall
xor
or
bound
ds
push
and
inc
jp
sbbb
jp
pop
shl
adc
pop
ljmp
lods
cmpsl
sbb
enter
inc
jb
push
pop
aaa
dec
lods
xchg
es
ljmp
popa
push
push
sbb
dec
fisttpl
pushf
pop
js
and
int3
loope
push
add
scas
aam
insl
rcll
sbb
push
ja
push
outsb
pop
or
int3
mov
adc
sbb
push
add
and
mov
decl
fwait
mul
div
xlat
and
or
push
stos
andl
mov
jge
in
cmpsb
dec
gs
out
lret
and
and
or
js
add
jae
lcall
sub
arpl
pusha
inc
dec
pop
dec
or
mov
sub
scas
add
xchg
sti
lods
movsl
dec
dec
fs
mov
lahf
je
lea
cld
xor
jmp
ljmp
mov
pop
or
or
sti
fidivrs
or
ljmp
ja
dec
xor
pop
testb
sarl
repz
mov
aaa
ljmp
fmul
aam
bound
xchg
cmp
nop
xchg
imulb
sbb
cmp
mov
sub
push
das
push
arpl
push
sbbl
sbb
pop
jp
cmp
icebp
adc
cmc
hlt
sbb
mov
dec
sub
mov
jl
sahf
sub
jecxz
pop
add
imul
sbb
stc
add
insl
pop
inc
xor
jb
insb
mov
dec
loopne
mov
cmp
ja
aas
je
pop
aaa
bnd
outsb
pop
mov
aad
cld
dec
jle
pop
cmp
push
pop
pop
cli
push
je
out
sarl
push
jns
cmp
cmp
insb
cmp
movsl
inc
mov
sbb
in
pushf
inc
push
cwtl
jne
mov
je
sub
imul
or
xor
sub
subb
loopne
out
sbb
mov
fadd
incb
jge
jg
cmp
push
cltd
imul
lock
loope
push
js
mov
xchg
sub
push
mov
das
test
adc
clc
jecxz
subl
add
or
inc
int
fisttpll
ffreep
lods
rorl
sahf
insb
dec
jmp
clc
push
jb
mov
dec
add
lock
mov
divb
jnp
push
mov
and
mov
mov
loopne
or
stos
andb
call
xchg
add
pop
xor
rcll
jl
mov
or
mov
sbb
pop
les
bound
cmpsl
push
mov
or
pushf
lcall
fcomps
movsl
inc
dec
push
mov
incb
cli
or
aam
fcoml
ret
jae
push
call
mov
jb,pt
add
pop
jno
sbb
test
movb
imul
xchg
and
mov
xor
mov
mov
stc
and
fs
xor
in
sbbb
add
fwait
fcoms
fdivs
and
mov
std
and
add
push
fdivrp
adc
bound
cmpsb
pop
push
jecxz
sub
je
jmp
sub
mov
test
out
push
js
andb
ja
test
push
ret
xchg
orl
cwtl
mov
sbb
cld
scas
xchg
pop
nop
hlt
push
add
jp
orb
mov
or
mov
fdivrl
inc
add
push
repnz
sub
xor
or
sbb
xor
push
lods
adc
mov
inc
or
or
mov
clc
pop
lret
imulb
sar
rolb
mov
lret
movsb
cmp
pop
sub
test
dec
icebp
in
cmp
and
push
pop
inc
xor
fidivrl
pop
xchg
jns
or
mov
add
lcall
gs
repnz
mov
shl
cmpb
out
cwtl
jge
loop
jg
push
mov
xor
je
shr
cmpsl
ljmp
xor
xchg
lcall
fsubl
je
push
and
adc
fbstp
cmp
mov
jb
or
in
fstpt
dec
shrb
mov
imul
data16
sbb
cmp
mov
lcall
out
movsb
adc
lfs
or
mov
push
fldl
jo
fisttpll
sbb
loope
jmp
jg
js
push
stos
out
mov
icebp
mov
mov
jo
mov
hlt
call
and
mov
mov
lods
insb
xor
mov
push
mov
push
pushl
fldt
jge
mov
ljmp
inc
and
aam
pop
push
sbb
add
daa
sbb
jno
in
push
inc
jns
rcl
out
or
out
sub
lds
in
scas
mov
xchg
pop
xchg
push
or
lods
push
testb
sbb
fldenv
fs
js
mov
pop
ss
push
fwait
popa
cmp
bnd
lods
xor
dec
flds
lcall
pcmpgtw
ljmp
and
test
repz
jmp
mov
cmpsl
in
sbb
mov
cmpsb
xchg
rorl
xchg
inc
push
fisubl
dec
jmp
les
sub
sub
aas
sub
mov
jmp
imul
lock
inc
test
push
inc
leave
jmp
pop
mov
inc
pop
rcll
mov
data16
shll
adc
inc
add
lret
dec
mov
fbld
sub
roll
xor
icebp
mov
mov
sub
mov
ret
loop
or
dec
fs
push
dec
in
in
aas
es
mov
test
stos
cmp
pop
ret
enter
sub
movzbl
jne
lods
mov
fidivs
lods
stc
es
test
push
test
outsb
and
lods
lret
rcll
cmpsl
or
adc
js
dec
lret
aaa
xor
lods
lret
fsubrl
xchg
test
mov
mov
jnp
inc
cmp
js
pop
repz
mov
inc
fcmovnbe
and
adc
call
addb
mov
lret
and
xchg
ds
int3
adc
mov
ss
xor
scas
xor
inc
lret
mov
and
outsl
rclb
pop
xchg
ret
mov
mov
xor
in
inc
mov
cmp
ret
sti
pop
push
lcall
mov
inc
movsb
cmp
scas
dec
lock
mov
rcll
sub
pop
loopne
loopne
xchg
xor
aad
outsl
pop
jl
pushw
subb
cwtl
cmc
divb
clc
lahf
daa
in
cs
xchg
dec
xor
movsl
enter
or
outsb
xor
cmp
or
movsl
sub
xchg
fwait
loopne
inc
dec
adc
lds
outsb
cmp
push
in
pop
imul
rcl
and
xchg
sub
push
shl
cmc
mov
pop
pop
pop
or
aaa
adc
inc
and
jmp
xor
jns
xchg
dec
xchg
sbb
lds
into
inc
dec
lock
mov
cmc
sbb
mulb
mov
add
cmp
push
and
out
push
fs
xchg
mov
jmp
es
mov
pusha
add
bound
fadd
dec
in
jb
or
add
adc
in
pop
sub
es
cmp
mov
cmp
xchg
test
sbb
mov
addr16
cmp
inc
dec
jae
lods
jbe
insl
inc
cld
popa
andb
mov
sub
fisttpl
inc
cmpsl
les
stc
ret
push
lcall
jge
ss
sbb
jecxz
push
mov
mov
xlat
adc
pop
dec
out
in
inc
sbb
clc
fcoms
jae
mov
sbb
stos
clc
adc
mov
jle
jge
aaa
in
cmp
test
loope
cwtl
iret
iret
cmp
jno
mov
arpl
add
and
daa
and
ret
xchg
cmp
cwtl
inc
and
mov
xchg
pop
cmp
aas
pop
popf
adc
xchg
xor
mov
and
sahf
dec
out
enter
and
pop
add
push
push
pushf
push
lods
enter
xchg
imul
cmp
rcll
stc
aas
dec
inc
or
mov
inc
ret
out
fsub
dec
cmc
sub
lods
lahf
adc
push
and
jp
lret
inc
add
xor
in
add
jmp
aas
fsts
lock
out
lcall
xchg
iret
stos
cmpsb
mov
fdivl
pop
inc
mov
insl
mov
xchg
or
cs
inc
xor
sbb
inc
lods
push
inc
in
xchg
jne
push
aam
or
leave
daa
cmp
lods
loopw
cli
test
xor
cmp
jbe
inc
mov
jo
mov
sbb
sbb
mov
dec
sub
pop
fmuls
mov
mov
mov
dec
les
or
sub
out
imul
dec
xor
mov
lds
in
sub
stc
testl
sub
push
xor
add
xor
mov
loopne
add
test
inc
xchg
in
mov
sub
mov
call
push
mov
or
or
cld
sub
ss
jp
ja
out
clc
inc
mov
xchg
push
aaa
mov
out
and
push
jge
and
das
popa
inc
add
jae
outsw
rcrb
ja
in
dec
inc
rolb
sub
mov
out
andb
mov
pushf
ficoml
stc
movsl
jno
jmp
dec
test
in
xchg
pop
lret
inc
mov
cmp
push
je
sub
sub
lock
movq
dec
dec
sbb
scas
arpl
mov
cltd
adc
adc
and
push
xchg
jg
pop
or
rclb
out
repz
jge
xor
pop
cli
data16
in
jae
jecxz
push
aam
jnp
pusha
xor
fsubl
into
mov
cltd
pop
mov
hlt
xchg
xor
pushf
fdivrl
pop
scas
xlat
out
cld
jb
es
outsl
testb
jbe
mov
jp
adc
popf
inc
and
in
jl
or
popa
lcall
or
shll
repnz
sub
and
mov
test
push
ja
xchg
jno
stos
into
adc
or
std
mov
jmp
mov
jle
push
mov
pusha
mov
push
hlt
add
clc
add
mov
pop
mov
jecxz
fidivrl
sbbb
or
stos
sbb
nop
arpl
adc
stos
mov
sbb
mov
push
jae
enter
loop
lret
dec
cmp
movsl
mov
push
dec
pop
and
inc
out
repnz
movsb
loop
scas
push
pcmpgtw
jbe
js
mov
dec
xor
pop
cmp
jnp
pop
out
or
jbe
and
add
adc
fwait
push
mov
cmp
scas
ds
inc
loopne
jl
sub
sbb
pop
fucomip
add
testl
ds
adc
mov
fiadds
mov
pextrw
or
ss
mov
cmp
repnz
jp
sahf
stc
xchg
mov
aaa
jb
jnp
mov
jle
xor
call
push
xchg
or
addr16
mov
aaa
out
clc
sub
std
add
push
and
aad
xchg
xor
xchg
aaa
cmp
aaa
pop
inc
out
hlt
rorb
jle
jbe
jl
sub
lea
ss
int3
push
lahf
or
sbb
addr16
adc
jae,pt
das
jg
das
pop
cmpsl
xorl
je
fsubr
jnp
movl
rcll
aam
enter
push
fdivrl
test
pop
mov
aad
mov
stos
mov
pop
in
in
jne
and
xor
mov
push
pop
enter
mov
or
mov
inc
push
push
or
loopne
mov
outsl
xchg
jno
sarb
iret
pinsrw
and
scas
xchg
sub
les
lret
xor
pop
cmp
sahf
dec
and
lret
imul
pop
ss
out
insb
ss
dec
mov
add
pushw
mov
adc
scas
dec
out
outsl
ljmp
pop
mov
aam
pop
filds
sti
push
and
loop
push
mov
cmp
xchg
push
cmp
mov
gs
js
xchg
loope,pt
nop
add
cmp
inc
loop
mov
xor
mov
add
rcrl
cltd
enter
adc
in
mov
sbb
mov
aaa
jmp
in
rol
add
and
or
pop
divb
sbb
scas
cld
mov
shll
ret
js
jmp
cmpb
lcall
sbb
inc
adc
ds
movb
arpl
cld
push
out
fnstenv
push
cs
stos
out
repz
cmp
loopne
push
or
ss
jle
sbb
mov
test
push
bnd
jbe
cwtl
test
orb
shll
mov
add
fucomi
or
dec
and
mov
notl
leave
mov
push
rorb
mov
adc
mov
adc
mov
std
xchg
pop
cmc
daa
nop
push
dec
adc
pop
neg
inc
or
lahf
pop
pop
dec
ret
or
jae
lods
push
aas
out
inc
into
ret
jmp
addr16
popf
cmp
rcl
mov
test
mov
pop
ficoml
test
push
sbb
outsb
pop
or
aam
mov
aaa
lcall
rcll
pop
daa
push
fnsave
fwait
mov
add
jb
pop
or
mov
mov
imul
and
pop
arpl
jmp
repz
dec
divl
aaa
cli
je
ds
loop
andl
dec
js
dec
aad
dec
outsl
jp
loop
push
je
push
xor
xor
lds
adc
fcmovnbe
cmc
add
fs
scas
sbb
cld
insb
imul
stc
xchg
subl
xchg
xchg
xchg
add
lock
pushf
in
and
pop
mov
push
mov
cmp
xchg
cmp
cmpsb
pop
lret
jmp
insl
mov
sbb
ss
rcl
out
jne
jge
je
loopne
jnp
lods
fwait
pop
mov
stc
or
lret
and
arpl
add
enter
adc
stos
inc
je
repz
out
and
jbe
test
jnp
jl
stos
and
add
lods
cmpsl
mov
loopne,pt
fsts
js
inc
js
ds
push
mov
std
push
mov
popa
mov
je
sbbl
jg
sbb
fildll
adc
arpl
and
int3
add
sbb
mov
pop
xchg
ljmp
mov
jle
sbbb
dec
sbb
divl
orl
xchg
rol
mov
mov
sub
xchg
jg
jbe
xchg
mov
mov
daa
popl
lret
and
ss
test
das
pop
arpl
jnp
das
mov
and
das
mov
push
mov
arpl
inc
mov
cmpl
xor
bnd
or
addr16
lds
sub
cmp
ss
mov
movdq2q
nop
or
jae
gs
mov
cltd
pushf
shrb
push
push
inc
pop
and
insb
outsb
dec
lcall
ljmp
mov
in
adc
std
sub
fwait
ss
cli
inc
pop
andb
jae
cwtl
cld
cmpl
sub
jp
out
nop
inc
int3
mul
or
cmp
pop
sbb
xor
jg
sub
lds
in
mov
xor
bound
sub
add
cli
lahf
filds
or
test
cmpsb
sub
sahf
clc
fsubrs
sbb
and
in
push
and
xor
and
sub
push
fcmovnu
push
inc
in
out
outsl
push
cwtl
jae
dec
sub
add
xabort
roll
loop
adc
hlt
dec
js
test
jns
faddl
daa
push
adc
mov
loop
lret
stos
or
adc
pop
adc
mov
cltd
or
pushf
add
idivl
mov
mov
mov
mov
movsl
fidivs
jge
adc
jnp
aam
pop
jl
push
jbe
dec
push
jnp
mov
mov
in
mov
fcoms
sub
or
add
shl
jecxz
xchg
mov
xchg
std
xchg
es
xlat
mov
movsl
sub
jecxz
iret
cmpl
cmpsb
les
insl
jp
adc
or
mov
rcrl
ficompl
push
inc
pop
jg
aam
xchg
sbb
loope
loopne
inc
enter
insl
fsubs
mov
fisubl
out
in
mov
xor
jns
out
xor
jnp
mov
daa
test
inc
lds
lods
xchg
in
add
imulb
out
mov
push
push
pop
and
sbb
mov
fisubl
adc
aad
mov
inc
cmp
or
pop
and
movsl
shll
divl
xchg
pop
pop
subb
test
int3
leave
test
mov
nop
sub
push
into
movsl
sub
enter
pop
or
shll
movsl
adc
pop
repz
and
adc
xchg
imul
mov
inc
aad
movb
hlt
aaa
fiadds
in
and
pop
lods
mov
jecxz
nop
mov
int3
mov
or
mov
xchg
push
dec
sub
push
pushf
cmpsl
and
shlb
outsl
xor
scas
pop
loop
mov
ds
jns
push
mov
adc
out
lret
cmp
arpl
push
lds
test
fisubrs
aaa
xchg
jns
je
lahf
ds
fistpl
daa
push
ret
mov
and
sti
xchg
sub
rcll
pusha
idivl
mov
in
sbb
jmp
pop
cmp
adc
ror
mov
xchg
dec
int
movsb
mov
inc
mov
pop
sub
cs
in
sub
lods
cmp
lock
divl
scas
push
sub
sub
mov
jecxz
rcll
xchg
imull
jno
inc
dec
or
ss
inc
xchg
ret
das
gs
mov
aaa
sbb
push
pop
dec
fdivr
xor
js
mov
jae
insl
loopne
fildll
jg
addl
xchg
mov
lcall
call
inc
fnstcw
jl
enter
xchg
cmpsb
shl
scas
rcrb
mov
add
adc
dec
fcomps
adc
or
fwait
jne
sub
lret
aad
xchg
lods
pop
lret
fidivrl
add
or
dec
xorl
mov
xlat
jmp
cmpsb
dec
cli
pop
js
aaa
pop
lods
mov
cmp
push
dec
out
insb
jno
ret
out
mov
cltd
or
mov
addr16
pop
sub
inc
cmpsb
stc
mov
aaa
loope
es
pop
jmp
lea
imul
fwait
mov
andb
stc
movsb
jbe
mov
push
jg
movsl
jae
out
out
push
jno
inc
cmp
mov
rolb
jnp
or
sti
sar
mov
stos
mov
mov
fistl
mov
mov
lcall
or
mov
jecxz
cmp
stos
arpl
flds
jecxz
push
and
mov
adc
leave
cmp
mov
out
xchg
out
xchg
xor
push
push
xchg
mov
rorl
xchg
jne
fsubrl
mov
pop
cld
cmp
scas
add
scas
aaa
or
add
rclb
or
xor
fs
cld
xchg
mov
out
imul
pop
push
call
xlat
repz
repnz
fdivl
rcl
mov
mov
int3
mov
dec
xorb
popa
dec
xlat
je
mov
jp
test
adc
pop
jge
int
push
jle
adc
leavew
in
lods
mov
add
lret
bound
dec
scas
sub
jo
lahf
in
xchg
arpl
lahf
mov
adcl
sub
mov
scas
jbe
xchg
xchg
add
mov
pop
dec
orb
lret
cmp
rcrb
mov
xor
lahf
xchg
test
sub
sub
clc
mov
jp
sub
scas
movsl
mov
shll
cmp
cli
xor
dec
outsb
imul
adc
cmpsb
insb
stc
mov
mov
push
push
mov
xchg
mov
push
dec
lock
aaa
je
sub
sub
popf
shr
pop
out
bound
jbe
or
push
xchg
faddl
jle
int
cs
mov
scas
xchg
mov
mov
jmp
jecxz
test
xor
xchg
pop
leave
enter
pop
hlt
shrl
outsb
jb
pop
fwait
dec
lods
pop
dec
sahf
push
push
push
pop
lods
adc
aam
js
sbbl
and
mov
aam
mov
jbe
repz
aam
sbb
or
and
sbb
mov
mov
in
cwtl
test
inc
sti
mov
add
pop
or
mov
sar
into
int3
mov
fnstcw
fisttpll
and
or
push
sub
into
cmpsl
and
shlb
iret
jne
call
mov
sub
pusha
pop
pop
aad
inc
mov
push
dec
xchg
es
and
and
mov
add
push
fcmovne
subl
xlat
inc
xor
push
imul
or
pop
lds
sar
or
push
mov
outsl
dec
icebp
ficompl
outsb
jns
add
cmc
mov
fistpll
pop
loope
test
fidivrl
adc
add
pop
mov
notb
icebp
testb
sub
cmp
lret
std
cmp
jns
sub
loope
mov
sub
pop
insb
jns
ja
adc
dec
dec
mov
fsts
mov
fiaddl
mov
xor
imul
scas
inc
mov
arpl
push
movb
ljmp
push
cmp
push
push
pop
idivl
mov
pop
mov
push
lret
aaa
data16
jno
xor
jno
int3
test
jl
mov
add
xchg
jle
sarb
mov
pop
pop
mov
or
sti
mov
adc
cld
ljmp
pop
mov
in
insb
mov
jge
sub
out
loope
ficomps
iret
and
hlt
mov
popf
rolb
movsb
movsl
fidivrl
pop
stos
dec
jnp
ror
push
std
xor
mov
xor
or
jno
out
adc
mov
jge
bound
xchg
jl
xlat
mov
mov
and
jge
ja
push
jl
int
std
and
movsl
outsl
popf
and
pop
pop
sub
leave
std
and
dec
std
arpl
mov
xor
test
dec
loope
std
cmp
shr
lods
inc
sar
lret
xchg
test
insb
cmc
and
imul
xchg
sti
dec
bound
leave
mov
sbb
imul
dec
out
and
insb
xchg
in
aaa
lods
xor
or
imul
ficoml
mov
push
data16
and
popf
xlat
ds
mov
cmp
out
ss
in
jl
pop
inc
fsubrl
sahf
inc
mov
or
adc
xchg
test
lret
mov
pop
fwait
xchg
add
push
add
sbb
lea
dec
into
aad
dec
and
lods
fadd
orl
xor
mov
lcall
fidivrs
movsb
dec
movsb
jp
pop
lds
xchg
repz
xlat
pop
sbb
push
call
into
rolb
sub
lahf
pushl
call
or
pop
cmp
xor
xor
pop
shlb
pop
xor
scas
mov
sub
push
das
mov
adc
push
ljmp
mov
mov
sbb
imulb
test
mov
jb
adc
fcmove
sub
inc
xor
scas
out
insl
xchg
mov
ret
sub
mov
cld
lss
adc
lahf
or
add
lods
enter
ss
push
mov
popf
sub
mov
cltd
jb
push
push
xchg
nop
xchg
iret
out
and
add
pop
jmp
popa
sbb
bound
fcmovu
sahf
leave
add
rcrl
or
out
fwait
jae
arpl
mov
inc
jle
arpl
cwtl
pop
mov
sub
pop
xor
mov
mov
aam
or
or
push
lods
and
jp
in
sub
test
sbb
cmp
mov
xchg
mov
cs
divl
mov
imul
mov
cmpsl
jnp
imul
mov
jmp
cld
jmp
pop
repz
mov
push
push
std
mov
enter
cmp
jns
ja
int3
popf
fsub
mov
mov
pinsrw
and
scas
out
sbb
sbb
push
xchg
adc
and
test
and
jle
cs
sbb
pop
push
xchg
adc
push
andl
push
xor
push
dec
sbb
icebp
mov
repz
sub
xchg
and
or
and
ja
jae
push
inc
or
adc
into
stos
dec
mov
fcompl
out
les
cmp
ljmp
pop
frstor
or
mov
push
mov
xor
push
test
pop
scas
daa
sarb
movsb
enter
adc
or
imul
aad
lahf
lret
in
inc
push
repnz
add
test
or
pop
movsl
mov
ss
and
rolb
mov
fdivr
mov
add
rolb
jnp
shrl
in
in
call
cmp
dec
jne
mov
lret
out
fidivl
rcr
loope
xor
fstps
stos
pushf
popf
mov
fisubs
cmp
shll
hlt
mov
cltd
cmc
out
fists
addr16
cmpsl
xorb
loopne
pop
inc
xor
movsb
mov
mov
fstpt
jmp
cmpsb
inc
das
mov
fs
mov
cvtdq2ps
xchg
dec
test
popf
dec
and
arpl
sub
lcall
and
icebp
hlt
cmpsb
lods
das
xor
fistps
mov
fbld
lahf
int3
inc
inc
sub
shll
pop
mov
jl
fmul
xor
mov
lods
push
xor
enter
mov
xor
loop
push
out
es
pop
lds
loop
mov
xor
jnp
ja
cmp
mov
sbb
inc
mov
xchg
enter
popf
mov
hlt
rorl
mov
movsl
add
aaa
outsb
sbb
xchg
cld
xchg
imul
xchg
out
out
dec
sbb
loopne
push
cld
das
cwtl
xchg
loop
push
ljmp
mov
sub
mov
in
cmpsb
sbbb
jae
mov
mov
sub
dec
jns
jle
add
mov
lahf
pop
jno
fstpt
cltd
or
fldl
adc
into
pop
cmc
int3
xor
outsb
or
dec
lcall
jb
ffree
pop
fsubl
and
ljmp
out
bnd
loop
mov
fmull
icebp
push
sub
subb
ret
sub
inc
je
addb
mov
mov
xor
cmp
fldt
dec
xchg
jb
ror
jecxz
insb
sbbl
sub
inc
decl
or
jge
orb
out
mov
stc
ss
push
int
test
xor
lods
out
pop
fdivr
cltd
pop
outsl
dec
fdivl
movsb
push
outsb
adc
xchg
flds
xchg
negb
mov
mov
inc
pushf
sbb
cld
mov
test
inc
cmp
jae
aaa
fs
push
imul
insb
dec
lea
and
and
lds
icebp
cwtl
ds
mov
lock
sbb
popf
les
mov
gs
dec
fs
dec
mull
sbb
nop
ret
es
push
fisubrs
addr16
call
lods
jmp
lret
lret
pop
push
cmpl
pop
sarb
add
xchg
packuswb
fwait
inc
and
sbb
insl
popa
inc
shl
imul
icebp
test
loop
jae
xchg
sbb
jno
mov
push
test
xchg
mov
insb
ja
data16
mov
mov
mov
imul
add
jno
movsb
add
dec
movsl
mov
or
mov
mov
aad
repnz
pop
pop
aam
test
arpl
iret
dec
dec
incb
aaa
imul
push
jp
roll
cmp
movl
popf
push
mov
cmp
andl
repnz
cmpsl
cmc
lcall
jne
mulb
test
movsb
fcoml
ss
jecxz
data16
mov
stos
cmp
aad
xor
repz
mov
sahf
inc
divl
xchg
cmp
and
mov
xchg
cmpsb
jae
pop
xchg
sub
mov
cmpb
js
adc
movsb
xor
dec
push
dec
sub
fidivl
iret
jecxz
insb
xchg
decb
xchg
pusha
inc
xor
push
lods
mov
iret
fdiv
jbe
dec
aaa
leave
adc
repnz
popa
and
test
rcrb
mov
out
mov
mov
xchg
jnp
mov
insl
xchg
mov
inc
insl
jmp
jb
or
add
aam
lods
or
jg
xchg
mov
mov
jmp
dec
sbb
call
lcall
frstor
sbb
imul
adc
ret
inc
pop
push
inc
jg
push
or
push
xor
inc
popf
out
mov
call
mov
insb
push
test
arpl
xchg
xor
cli
outsl
or
fsubrs
sahf
adc
pop
hlt
cmp
das
mov
mov
xor
jo
mov
das
rcrl
ficomps
fimull
or
inc
test
ja
fwait
xor
cli
xchg
xchg
out
cmpsl
push
test
arpl
add
or
clc
xlat
call
mov
jnp
or
faddl
movsb
sbb
pop
inc
dec
push
mov
mov
xcrypt-ctr
cmpsl
pop
clc
or
pop
and
cmpsb
mov
or
orl
cmp
bound
xchg
stos
inc
movsb
les
add
dec
xlat
dec
mov
arpl
lahf
jg
jle
insl
push
jmp
lahf
ja
mov
dec
mov
push
out
in
add
outsb
push
stc
leave
leave
iret
add
xor
sub
or
fmuls
lds
sub
out
sub
jg
inc
adc
sbb
pop
cmp
push
ret
rorl
insl
shlb
int3
sbb
in
cltd
pop
mov
jo
sub
push
in
adc
mov
imul
enter
inc
xlat
icebp
push
sub
int3
sbb
ja
sub
xchg
repz
dec
scas
nop
lods
jnp
aaa
sub
cmp
bound
stc
cmp
daa
orb
add
mov
shl
cmpsb
imul
out
xchg
fcoml
sub
add
dec
cmpsb
mov
pusha
jl
mov
jge
xchg
rorb
dec
testl
enter
mov
mov
push
push
xlat
pop
mov
insb
insl
adc
icebp
jecxz
jp
das
sbb
cmp
add
ja
pop
or
cmp
inc
xchg
cmp
push
xchg
int3
ret
mov
add
mov
pop
mov
addb
int
cmpsl
and
lods
adc
dec
xchg
mov
imul
repz
xchg
adc
outsb
mov
pop
mov
loopne
push
xchg
mov
adc
aas
scas
imulb
lret
cwtl
movsl
daa
pop
sub
add
dec
push
sbb
cwtl
out
scas
data16
imul
test
filds
cmc
mov
fistpll
jl
or
pop
sub
cmp
inc
movsb
cltd
jo
xchg
fisubrl
push
mov
nop
add
and
jmp
enter
sbb
add
lea
or
shrl
cmpsb
shrl
imul
hlt
and
clc
hlt
test
aaa
call
mov
mov
aaa
mov
mov
stos
or
mov
pop
xorl
inc
dec
cwtl
sti
mov
jg
imul
fisubrs
sub
out
adc
test
aad
dec
inc
sarl
and
mov
orb
pop
sub
test
mov
dec
push
mov
popa
in
jecxz
ret
out
push
pop
and
jp
in
inc
jg
loope
lret
xchg
push
add
int
cld
test
and
xchg
je
imul
aad
xor
sti
cmp
push
jg
in
data16
clc
sub
cmp
popa
pop
dec
imul
sub
and
stos
fnstsw
in
mov
mov
cltd
lock
das
fcoms
xor
cmp
xor
lcall
add
add
add
add
add
add
adc
add
test
std
pop
sub
pop
fstl
inc
mov
shl
imul
inc
sub
std
pop
or
test
std
pop
or
test
std
pop
or
test
std
pop
or
test
std
pop
or
test
std
pop
sub
push
mov
or
test
std
pop
or
test
std
pop
or
test
std
pop
or
test
std
pop
or
test
std
pop
or
test
std
pop
fidivrl
faddp
ss
add
adc
add
pusha
add
pushf
pop
add
lods
add
add
mov
jge
add
add
and
xor
das
inc
add
rolb
add
add
add
add
push
sub
add
sbb
add
add
mov
jo
add
rolb
add
add
add
add
add
jg
add
js
mov
fldl
add
add
add
add
add
mov
add
jg
add
mov
add
cmpsl
or
push
add
add
fimull
stos
inc
mov
mov
add
rolb
add
add
add
add
add
xor
add
add
pop
test
jns
out
inc
add
push
add
add
add
add
adc
add
xor
add
add
dec
lcall
pop
bound
cld
sarb
add
add
mov
mov
add
add
inc
addl
movsl
add
add
test
scas
scas
je
shlb
push
loopne
or
xor
jle
lret
aaa
xchg
push
mov
sub
mov
dec
cmpb
cmp
clc
inc
push
fisttpl
push
es
rorb
clc
mov
clc
sub
xchg
xor
ljmp
stc
or
arpl
dec
add
test
cmpsl
and
aas
lret
aad
dec
mov
roll
in
lods
scas
jo
add
cmp
or
mov
mov
jle
das
sub
push
jbe
cmp
mov
lret
and
inc
inc
sbb
xchg
sbb
pop
and
dec
mov
stc
cmpb
leave
mov
cmp
insl
int
xchg
rorl
cmp
push
cmc
jno
ffreep
lret
adc
stc
and
ret
pop
cmp
or
sub
loopne
push
test
sbbb
enter
add
mov
sbb
test
xor
dec
mov
rcl
inc
mov
mov
faddl
bound
push
je
xchg
xchg
jb
cli
sub
je
adc
add
cli
out
pop
stc
les
cmp
dec
mov
adc
dec
sbb
in
stc
lahf
dec
testl
mov
aaa
and
lahf
push
imul
dec
xchg
stos
sub
pop
sbb
into
sar
inc
adc
sub
fisubrl
mov
addb
loopne
xchg
pop
in
ret
cmpsb
mov
test
mov
add
mov
dec
adc
pop
or
icebp
cmpb
cmpsb
les
fwait
inc
shrl
imul
in
leave
push
adc
sbb
loope
movsl
push
xorb
neg
xchg
mov
inc
sub
cltd
and
cmp
seto
incb
pop
inc
fcmovb
mov
mov
xor
bound
mov
mov
iret
adc
adc
cmp
push
outsb
test
or
cmc
enter
fwait
aad
loop
fdivrs
inc
or
dec
mov
aaa
leave
lret
sbb
pop
testl
inc
test
sub
das
lret
xchg
hlt
dec
fnstenv
pop
ds
loope
call
pop
mov
insl
add
fs
nop
aaa
jle
movsb
ljmp
pop
fs
cwtl
adc
or
stos
mov
push
or
dec
pop
mov
gs
js
dec
mov
sub
push
push
out
insb
ss
stc
icebp
mov
leave
jge
aaa
adc
movsl
xchg
fbld
repz
hlt
div
in
mov
aaa
aas
mov
add
fsts
fbld
xchg
jo
popf
inc
testl
scas
mov
sub
movsb
pop
leave
inc
loope
shl
jge
ds
not
add
jb
jo
dec
cmp
or
in
addb
jle
jns
stos
test
and
incb
ds
outsb
mov
pop
lods
cmp
or
cmp
adc
jmp
jno
lock
or
out
mov
pop
inc
das
stos
dec
dec
dec
and
xchg
rcrl
nop
das
push
dec
sarl
std
mov
lock
repnz
in
test
push
cmc
xor
mov
out
mov
cmpsb
fwait
hlt
call
fisttpll
lret
movb
adc
data16
mov
ss
xor
xchg
push
loope
int
inc
jo
cmp
dec
mov
adc
insl
popf
fldt
dec
mov
adc
test
pushf
jge
in
or
test
in
fisttpll
lods
jne
scas
jbe
adc
pop
nop
mov
cmc
iret
mov
xchg
gs
mov
mov
lock
in
sbb
in
pop
or
aas
bound
int
loopne
pop
mov
lods
xchg
jb
xchg
pop
and
sbb
cmpsl
adc
xchg
and
movsb
sub
movsb
stos
lods
sbb
cmp
decb
xor
lcall
push
test
cltd
das
jne
mov
sti
or
mov
fldcw
rclb
add
jae
xchg
sub
mov
adc
arpl
mov
psubsw
sub
je
and
adc
sub
lcall
push
mov
fcmovnbe
push
ror
jp
insb
cmp
mov
jne
jo
pusha
sub
jbe
xchg
scas
sti
xchg
loop
in
movsb
test
pop
jbe
dec
or
pop
inc
out
pop
arpl
pop
add
adc
enter
popf
call
arpl
ds
mov
or
xchg
movsb
cld
pop
mov
andb
mov
and
pop
fdivs
push
and
sbb
cmp
pop
xor
pop
aad
aas
cld
loop
jg
loope
out
fs
shll
enter
sbb
loopne
inc
jp
js
xchg
xor
rorl
cmpsl
mov
mov
mov
out
lods
popf
xlat
sub
jecxz
int
in
dec
or
push
or
loop
dec
test
cmc
out
rcrb
lock
add
jg
in
mov
or
es
xor
cmp
inc
lret
int3
pop
in
mov
jbe
sub
adc
lods
push
xor
push
pop
cmp
or
pop
repz
imul
xor
imul
xchg
fsubrl
xchg
xchg
push
mov
out
xor
add
or
ds
mov
lret
pop
xchg
dec
xor
sub
repz
lcall
mov
jmp
mov
hlt
fisubs
insl
or
pusha
fists
popa
mov
cmp
xor
dec
mov
cwtl
adc
loope
xor
and
outsl
adcl
mov
lcall
pop
mov
pop
hlt
roll
or
lcall
mov
imul
repnz
pop
mov
add
push
stos
cmpb
shll
mov
dec
sbbl
xchg
push
daa
movsb
xor
push
pushf
scas
out
test
sarb
outsl
inc
cmp
test
aas
xor
inc
in
frstor
push
in
loopne
cmp
pop
xor
push
sarb
jp
mov
mov
push
aam
pusha
sub
fcomps
xor
dec
in
dec
outsl
cli
mov
in
lret
shl
cwtl
sbb
pop
ds
fbstp
mov
leave
mov
fnstcw
pop
jge
jb
mov
pop
mov
andb
movsl
push
popa
aas
xorb
clc
cs
imul
push
xlat
jecxz
add
cmpsb
clc
and
out
loopne
sahf
je
popf
sub
and
xchg
lea
jno
test
jnp
cmp
push
out
mov
cmp
and
and
test
or
jg
xor
out
dec
out
sbb
jbe
int
cwtl
adc
sbb
loop
call
jmp
xchg
gs
mov
mov
and
push
mov
cwtl
push
push
or
outsb
cmp
cmp
pop
push
jo
pusha
icebp
arpl
dec
aas
insl
jp
mov
cmp
lret
fstpt
adc
sub
repz
setbe
jmp
add
testl
scas
int
imul
mov
or
and
cmp
push
and
scas
outsl
imul
xlat
leave
push
sti
mov
stos
lret
dec
xorb
push
inc
aaa
sti
ja
pop
scas
jmp
push
loope
mov
mov
js
xor
in
imul
orl
or
xchg
and
mov
aas
mov
pop
daa
sbb
pop
repnz
das
and
xor
inc
push
pop
stc
pop
mov
imul
mov
mov
sub
sbb
inc
aad
dec
lcall
fcoms
push
xorl
int
leave
mov
pop
jno
push
or
rolb
aam
fisttpll
icebp
mov
imul
mov
pushfw
mov
or
cs
dec
lahf
lret
add
test
mov
dec
add
arpl
mov
xlat
xchg
mov
cmp
sbb
dec
cmpsb
ret
push
mov
dec
jp
xchg
jno
cmp
mov
xor
xor
in
ja
pushf
or
repz
and
or
push
push
dec
pop
js
leave
repnz
out
out
pop
lods
ret
push
inc
add
rolb
lcall
cmp
dec
sbbl
aad
xchg
jmp
mov
int3
scas
cmp
sahf
or
cwtl
cmpsb
jmp
bound
dec
xor
notl
fs
icebp
ror
sbb
and
cmp
cmpsb
out
xor
inc
arpl
clc
lret
or
inc
or
pop
test
or
dec
mov
and
or
pop
std
clc
xchg
repz
sti
nop
mov
inc
cmp
pop
pop
inc
adcb
push
test
jno
pop
xor
sbb
ljmp
or
out
loopne
or
out
pop
cmp
lea
and
adc
ljmp
xchg
cmp
data16
mov
cmpsl
sbb
out
add
xor
sub
inc
xor
mov
mov
addl
cwtl
pop
rclb
lea
mov
jnp
test
sbb
sub
xlat
jne,pt
nop
mov
test
daa
mov
aad
jbe
sahf
das
mov
aad
test
sub
pop
push
lock
sbb
mov
sub
sbb
push
push
inc
lcallw
dec
sub
sbb
cs
pop
in
pusha
pop
faddl
loope
fsubrs
pusha
xor
or
outsb
pop
push
daa
add
mov
leave
or
lret
adc
gs
xorl
dec
sahf
jmp
pop
pop
inc
inc
jecxz
jno
aas
mov
ljmp
push
mov
mov
jb
inc
jns
pop
lahf
into
mov
jo
cmpsb
xor
xchg
outsl
adc
fcomi
stos
add
outsb
or
mov
andps
sbb
bound
fildl
or
decl
xchg
mov
pushf
std
dec
sub
addr16
cmp
ss
and
mov
inc
adc
mov
in
xchg
stos
lcall
mov
inc
lds
adc
push
mov
mov
jae
pop
insl
cmp
imul
push
push
mov
iret
mov
ds
cmpsl
cmp
xlat
popf
push
std
call
movsb
sub
aad
imul
push
js
aas
or
dec
sbb
mov
imul
mov
mov
and
rorb
inc
imul
rorb
aam
mov
loope
je
int
mov
lcall
sti
mov
fcom
xor
pushf
imul
pop
ret
lock
out
lcall
jecxz
popf
aas
fldl
aaa
adc
adc
cmpsl
mov
mov
testl
xor
inc
sbb
call
jle
dec
lds
xchg
adcb
xor
or
lahf
ds
push
sub
adc
insl
xor
in
es
jns
or
clc
fnsave
dec
outsl
mov
ss
push
cld
insb
dec
pusha
dec
adc
incl
jb
dec
test
dec
bswap
lods
xchg
xor
nop
bound
add
add
sbb
mov
push
shll
xor
stos
pop
rep
cmpsb
push
enterw
das
test
js
or
dec
cmp
jnp
cmp
das
scas
mov
imul
lcall
inc
daa
or
mov
mov
xchg
pop
lea
dec
add
dec
pop
repz
aaa
out
aam
adc
dec
aam
push
inc
pop
sub
shlb
lods
test
inc
push
mov
sbb
cmpsl
sbb
and
jo
lock
mov
sub
mov
fdivrl
mov
mov
xchg
push
add
repnz
aam
or
add
xor
dec
jecxz
mov
jp,pt
mov
mov
cmp
in
fst
fwait
orl
xor
add
push
push
loopne
rclb
aad
xchg
push
movsl
sub
mov
scas
lds
dec
sbbl
fs
and
int
arpl
or
mov
dec
cmpsb
test
rorl
out
loopne
mov
mov
test
add
movsl
pop
cli
aad
xchg
es
lcall
jb
test
pop
jecxz
call
push
scas
in
cltd
sbb
mov
int
movsb
stos
pop
fdivrs
pushf
divb
push
test
lret
sbbb
lret
loopne
sub
pop
xchg
add
sub
pop
out
ljmp
popa
sahf
mov
xor
sub
in
or
fucomp
push
outsl
pushf
vpaddsb
xlat
pop
mov
dec
lret
xchg
sub
subb
pop
sub
rcl
jns
mov
ja
mov
cs
mov
aas
pop
stc
inc
cmp
sarb
sub
xchg
sbb
nop
movsl
lods
push
fdivl
mov
cmp
mov
inc
insb
out
aam
cmp
push
shrl
shrl
in
and
lods
mov
jge
xor
sbb
out
enter
jmp
sub
frstor
cmp
sbb
sub
out
inc
add
add
or
ret
and
sbb
pop
lock
cmp
aas
xlat
clc
into
hlt
add
outsl
add
lcall
add
cwtl
jns
lods
jb
stos
cmova
mov
jne
insl
daa
inc
leave
mov
xor
outsb
daa
loope
int
rclb
enter
repz
fidivrl
jle
xchg
lods
dec
cli
jnp
addr16
icebp
mov
mov
adc
scas
mov
mov
jecxz
dec
adc
ja
imul
mov
aam
xchg
lds
test
xor
mov
lds
sub
aad
push
xchg
ja
and
es
orb
cmp
dec
cmp
xor
jae
shlb
cmp
dec
sbb
orb
sub
mov
or
cmc
or
mov
mov
aas
inc
ja
enter
push
mov
dec
divl
jns
jnp
push
dec
push
fisttpl
repnz
in
jbe
ss
push
inc
je
adc
lock
inc
stos
xor
setl
icebp
xchg
out
rcr
sub
xchg
andb
mov
hlt
push
xlat
std
push
push
mov
sub
call
in
xor
rcl
dec
add
jno
cmp
inc
js
rorl
cmp
cmpsb
jno
xchg
je
fsts
adc
les
pop
inc
outsl
insb
pusha
mov
jmpw
pop
sbb
cwtl
mov
or
arpl
or
inc
cwtl
xchg
lea
mov
jecxz
push
cmpsl
mov
cwtl
xor
shrb
push
sbb
or
jmp
insb
stos
fnstcw
sbb
arpl
fcompl
js
xchg
push
imul
addb
mov
xor
sbb
ds
mov
and
mov
pushf
mov
xor
add
stos
fcompl
jae
ds
subl
hlt
push
fwait
xchg
push
leave
ja
insb
out
jp
dec
jecxz
push
or
andb
or
mov
scas
out
or
lea
add
loopne
push
lcall
imul
popf
ficoml
cltd
arpl
les
das
mov
pop
xor
and
xor
or
adc
data16
push
pusha
mov
lds
mov
pusha
andb
orl
andb
ja
and
sbb
sub
bound
pop
loope
test
popa
push
push
bound
push
jmp
xor
mov
out
arpl
jbe
jb
adc
lret
pop
adc
ds
loope
mov
jl
cmpsb
stc
fwait
mov
test
and
mov
out
add
pushf
cmp
adc
mov
imul
pop
or
arpl
stc
lahf
into
sbb
notb
sbbb
jmp
push
xchg
pop
cmpsb
sahf
neg
gs
push
je
ficompl
frstor
loopne
lret
ficoms
add
mov
daa
je
js
inc
mov
lret
cmp
aam
shll
repnz
add
xor
xor
in
scas
cmc
ss
int3
cwtl
mov
sub
xchg
mov
stc
rcrb
nop
pusha
out
xor
stos
or
add
sub
mov
jns
cmpsl
xchg
jge
sbb
jecxz
push
push
test
lods
xchg
inc
cwtl
leave
jmp
inc
repnz
push
loopne
pop
pop
dec
arpl
sbb
xor
mov
std
pop
cmpsb
adc
popf
dec
jle
sbb
sbb
sbb
cli
cmp
adc
pop
enter
stos
jle
in
ret
xchg
mov
neg
addr16
clc
in
es
dec
mov
in
pop
mov
push
lods
inc
lods
lds
mov
imul
add
cs
pop
movl
ss
test
arpl
xchg
xlat
inc
jae
repz
leave
js
adc
dec
addl
pop
adc
rorl
in
inc
mov
ret
cmp
out
inc
popa
adc
shr
ret
inc
loop
ds
stos
mov
outsl
je
enter
fsubrl
sub
add
fstpt
imul
mov
xor
jl
pop
loope
rorl
fwait
and
mov
adc
push
cmp
adc
mov
repz
das
pop
push
outsb
ds
fisubrs
mov
push
or
xchg
in
add
pop
das
rorb
push
out
int3
pop
sbb
inc
pusha
xchg
mov
int
jbe
ljmp
cli
into
rorl
ja
movsl
lods
mov
mov
fucomi
or
dec
insb
inc
ljmp
cmpb
pop
js
insb
xor
out
mov
add
lds
out
gs
adc
movsb
push
imul
push
test
sub
and
test
in
jmp
or
push
xchg
cmpsb
mov
subl
xchg
cmc
mov
aad
lar
push
xor
cmpsl
mov
std
jbe
jne,pn
xlat
orl
xchg
iret
into
and
xor
jbe
lds
aaa
test
clc
xor
jno
xorl
in
fimuls
clc
repz
mov
mov
cmp
add
or
stos
aaa
cs
orl
outsl
inc
gs
and
inc
mov
std
int
push
cmp
fnstsw
mov
addr16
lret
or
lds
mov
scas
jmp
xor
xchg
xchg
dec
cmp
cltd
or
mov
nop
pop
sbb
clc
subl
movsl
xchg
lret
insb
arpl
xchg
jne
dec
sub
and
cmp
push
mov
cli
jg
adc
hlt
iret
jmp
inc
xor
mov
sbb
imul
std
ret
mov
dec
pop
sbb
stc
cmp
push
enter
add
mov
shrl
stc
scas
push
out
cld
push
stos
add
test
xchg
in
jecxz
pop
xor
push
mov
push
call
mov
xchg
out
xor
pop
add
xchg
mov
fstpt
stos
xlat
mov
scas
or
lds
xor
sbb
imul
push
lock
push
enter
in
imul
shrl
into
sbb
cmp
dec
jae
mov
stos
ficoms
or
je,pt
cmpsl
stos
jle
mov
icebp
rcrl
cmp
jmp
push
jl
nop
scas
out
bswap
movsb
xchg
pop
dec
and
pop
not
cmpsb
mov
pop
stos
sub
mov
nop
fstpt
stos
inc
jecxz
mov
hlt
das
push
pop
xor
stos
mov
push
xor
cmpsb
insl
xchg
inc
nop
adc
aad
add
int3
cmc
mov
mov
adc
insl
push
out
dec
out
push
call
int3
pop
or
add
cmpsb
adc
imul
je
xchg
repnz
fbld
cs
cmp
xchg
scas
jns
cmpsl
dec
popf
das
ss
sahf
scas
insb
imul
pop
push
bound
outsl
jmp
insb
fistl
das
mov
inc
outsb
push
outsl
lret
xchg
mov
inc
das
clc
adc
sbb
cltd
push
xor
pop
add
xchg
add
jge
dec
daa
shr
fistpll
jae
cmp
jg
fninit
xchg
mov
pop
mov
sbb
mov
push
or
outsb
adc
push
test
test
bound
loope
mov
out
cltd
xor
cmp
mov
flds
xchg
or
jge
ljmp
das
cmp
dec
bound
pushf
add
inc
mov
push
mov
out
leave
mov
daa
mov
aad
sub
test
jecxz
test
jne
in
xchg
sub
roll
mulb
and
ds
mov
mov
sbb
repnz
rclb
push
and
aas
lods
rcr
jmp
mov
mov
fisubrl
movsl
jne
fistps
mov
add
jp
push
ret
mov
pinsrw
stos
ds
test
sbb
cs
rcl
cltd
fyl2xp1
jae
lcall
mov
pop
sbb
ret
xchg
jb
adc
or
lea
dec
adc
pop
out
std
movsb
xor
xor
xor
pop
icebp
mov
out
adc
dec
call
push
fistps
or
or
in
push
movsl
in
stos
stos
bound
adcl
addr16
fs
aam
shr
dec
repz
jl
notb
push
test
push
jmp
stc
mov
jno
jne
xchg
and
adc
xor
rcrb
push
inc
add
dec
icebp
mov
sbb
int3
mov
je
jbe
and
lcall
jo
fdivl
shr
push
stos
push
mov
lods
hlt
push
jecxz
or
loop
paddusw
es
cmp
int
inc
jno
dec
mov
xor
ja
sub
scas
aad
pop
sub
cld
inc
shl
cmpsb
test
mov
xor
pop
cmp
jo
lret
lahf
push
sub
mov
push
jle
out
or
aaa
sub
xchg
push
enter
fiadds
outsl
nop
shlb
adc
dec
and
xchg
jl
gs
in
mov
push
adc
mov
popa
addr16
lret
je
adc
out
mov
push
lret
xchg
and
xchg
sub
imul
mov
cmp
in
out
push
mov
xchg
or
fisttps
xor
cmp
pop
jle
mov
mov
repnz
xchg
arpl
sbb
push
cmpsl
sar
imul
add
mov
or
jnp
pop
xchg
jecxz
adc
stos
and
jg
shl
sub
repz
xchg
xchg
bnd
aad
test
inc
incb
jne
fsubrp
fiaddl
cmp
xchg
push
sub
popf
xor
xchg
push
cli
mov
lcall
xchg
in
add
lock
pop
xor
jmp
dec
or
js
in
daa
add
push
jp
rcr
out
ss
mov
cmc
xor
mov
stos
add
cmp
mov
fstpt
xchg
or
subb
xchg
jge
std
push
loope
add
mov
out
jle
cmp
rcll
pop
xchg
xacquire
sbb
nop
sbb
lret
ljmp
adc
mov
pop
test
mov
xor
into
dec
push
add
aam
jl
mov
sub
xchg
jbe
dec
jne
cltd
jmp
sub
loope
mov
das
push
cltd
mov
ficoms
adc
jmp
ljmp
inc
xchg
cmp
test
sbb
divl
adc
dec
repz
mov
mov
outsl
push
mov
push
stos
and
pop
pop
push
inc
and
mov
mov
and
push
movsb
add
aas
push
mov
icebp
test
cwtl
or
cmp
xchg
xor
divl
into
or
push
jb
and
dec
loope
push
movsl
imul
pusha
mov
inc
xor
dec
add
inc
and
mov
add
inc
popf
sub
pop
mov
in
xchg
add
mov
xchg
iret
arpl
and
add
sub
push
sti
es
ficoms
out
xchg
test
inc
mov
xchg
and
pop
mov
mov
and
scas
sbbl
xor
test
push
xor
push
movsl
or
push
lahf
std
sub
xlat
sbb
test
pop
jns
pop
dec
inc
iret
xchg
cmp
jp
pushf
push
hlt
dec
jno,pn
call
fistpll
sbb
cli
fsubl
out
mov
int
insl
orb
ljmp
add
adcl
adc
sub
jmp
sub
sbb
mov
sbb
and
dec
lods
push
pop
mov
int
jae
fimull
insb
pop
rolb
mov
sbb
sarb
sahf
xchg
ss
outsb
repz
mov
in
sti
hlt
lret
push
xchg
mov
cmp
inc
scas
addr16
fsubrs
jmp
in
pop
pop
test
sbb
mov
pop
xchg
inc
cmpsl
fmul
imul
clc
lahf
add
lahf
fdivr
ret
pushl
or
fwait
add
jns
dec
fwait
fs
jecxz
ljmp
sub
lahf
inc
insb
test
mov
sar
insb
push
push
push
mov
int
mov
mov
cmpsb
outsb
ja
and
test
aas
jle
cmp
pop
repz
inc
sahf
loopew
scas
push
sub
scas
ficomps
test
sub
out
pop
push
lret
fsubrl
cmp
cltd
jp
subl
insl
in
lock
cltd
sbb
push
cmp
scas
testb
aad
mov
jmp
xchg
jmp
fnstenv
notl
xor
xchg
xchg
testb
dec
mov
mov
or
cli
xor
leave
pop
mov
out
xchg
cmp
test
push
xchg
or
daa
cmp
loop
fiadds
push
fucomi
jle
es
popf
or
insb
mov
jmp
mov
xchg
and
sbbl
jmp
sub
lret
xor
aas
pop
fs
mov
lea
aad
push
push
adc
ret
cmc
sub
sub
xchg
jne
scas
xchg
out
insb
xor
cmp
enter
mov
jne
cs
cmp
jne
push
sbb
jns
inc
ss
inc
jns
insl
xor
mov
jg
mov
inc
push
mov
mov
lock
jle
dec
pop
fnsave
push
pop
xchg
inc
outsb
pop
popa
xor
jge
push
movsb
push
jge
out
adc
js
mov
fisubrs
add
push
lock
jb
lret
lcall
dec
or
addb
repnz
test
outsb
cwtl
push
das
jo
shll
inc
popa
mov
and
dec
in
int3
cmc
nop
and
jle
fildll
xor
nop
and
lea
sbb
call
test
add
test
lcall
mov
xor
test
insb
out
mov
std
pop
mov
outsl
push
xor
repz
adc
mov
xchg
divl
sub
inc
push
sbb
and
jne
pop
popa
popa
push
cltd
adc
int
sub
xlat
xor
daa
or
push
jne
lea
cmc
pop
leave
sub
call
lds
dec
push
rorl
jg
lahf
dec
testb
pop
adc
sub
sbb
adcl
lods
jmp
adc
and
add
inc
or
jge
mov
adc
push
shlb
decl
lret
movsl
enter
fiadds
test
movsb
jp
sbb
outsl
add
dec
sub
xor
jbe
int3
push
or
mov
fwait
ja
or
pushf
jb
aam
add
push
nop
loopne
mov
pop
or
ret
xor
push
adc
insb
cmp
popa
push
inc
pop
lcall
pop
faddl
fbstp
lock
cwtl
inc
repnz
pop
jno
jle
inc
jae
jnp,pt
pop
dec
cmp
enter
inc
fstps
aad
or
push
outsb
pop
mov
mov
jo
pusha
dec
inc
pop
mov
call
into
dec
sbb
ja
xor
pop
jae
shl
xchg
push
lea
repz
movsl
loope
mov
or
mov
mov
mov
jne
ljmp
push
jnp
fnsave
rcll
sbb
lcall
filds
dec
lret
fs
xchg
pop
mov
jne
sqrtps
pusha
ja
pop
mov
push
loopne
repz
loope
mov
mov
xchg
fcoml
add
cmp
mov
arpl
repz
xor
cmp
mov
mov
bound
push
inc
les
scas
mov
mov
pop
add
out
rclb
test
dec
nop
or
jne
and
push
add
insl
jecxz
inc
pop
jge
fucom
xor
cmp
cmp
pop
push
sbb
mov
cmp
adc
jmp
rclb
dec
jnp
jnp
jb
mov
and
or
mov
mov
stos
lods
loope
pop
inc
movlps
jl
and
cmp
scas
outsb
pop
jecxz
mov
movsl
or
dec
xor
jbe
imul
sub
inc
pop
mov
punpckldq
repnz
sbb
jge
mov
dec
sbb
xchg
popaw
test
sbb
jmp
cli
mov
adc
arpl
test
divb
jecxz
xchg
mov
adc
pop
ret
sbb
mov
lret
repz
pop
daa
sbbb
sbb
inc
iret
jno
sub
fidivl
mov
stos
int3
xor
xor
out
idivl
repz
jae
sub
in
xchg
xor
gs
stc
inc
inc
cmp
dec
dec
push
xchg
xor
imul
xchg
test
cltd
loope
push
adc
pushf
mov
jb
subl
pop
insl
das
xchg
mov
fcoml
jp
sbb
sub
dec
dec
out
adc
testb
out
and
push
rol
ss
mov
cmpsb
dec
and
inc
cmpsl
pushf
xlat
in
inc
mov
mov
xchg
imul
and
icebp
push
or
pop
add
mov
mov
push
clc
fldt
and
shrl
sbb
push
adc
xor
mov
or
xor
aaa
jnp
mov
daa
in
push
xor
xchg
xchg
add
ja
mov
mov
out
loopne
imul
mov
push
pop
cwtl
adc
lea
xchg
xchg
in
iret
shr
and
xor
sub
jge
dec
inc
mov
and
pop
push
jle
pop
subl
inc
sti
push
sub
cmp
dec
mov
sub
mov
jae
cmp
out
jp
cmp
aaa
mov
in
add
in
bound
out
dec
jno
jnp
xchg
adc
adc
pusha
arpl
sti
lods
dec
arpl
sub
pop
mov
ljmp
lock
lret
pop
aas
fbld
fwait
inc
add
ret
inc
out
mov
dec
sub
das
in
cs
xor
or
enter
gs
xchg
lods
and
lret
gs
cltd
repnz
inc
inc
cmc
dec
cld
adc
mov
and
stos
adc
mov
cmp
sbb
lahf
fs
mov
mov
lahf
xlat
cmp
adc
xchg
lock
add
push
fs
repnz
push
lret
push
inc
adc
or
adc
in
dec
xchg
aaa
cmp
std
xor
add
push
adc
inc
sbb
out
sar
push
push
and
jle
pusha
mov
lret
mov
pop
loop
pop
test
enter
sbb
push
popf
push
cmp
sahf
inc
in
in
cmpsl
xlat
jge
js
push
testl
mov
shll
xchg
xchg
mov
rol
scas
pop
mov
je
les
mov
inc
dec
testl
out
repz
xor
mov
rorl
jae
out
scas
scas
popa
mov
jnp
bound
mov
pop
ljmp
push
jg
adc
xor
lock
mov
and
or
repnz
mov
repnz
rcll
movsl
roll
pop
jl
aam
clc
popf
jne
cmp
mov
push
stos
or
sub
dec
loope
push
sbb
push
inc
ficoms
loopne
insl
mov
ficomps
xchg
pushf
and
call
lods
insb
mov
incb
pop
gs
mov
jb
in
pop
pop
lods
mov
cmp
jmp
inc
xor
and
call
adcb
imul
ret
gs
xor
sbb
mov
mov
adc
mov
int
insb
push
xchg
xchg
jl
mov
cmpsb
xor
out
cmc
pop
adc
scas
fwait
mov
jg
outsb
add
shll
add
mov
dec
aaa
add
sbb
add
xor
nop
js
xor
inc
rcll
stos
ljmp
push
aam
jne
shlb
add
mov
push
cld
xchg
xchg
mov
add
sbb
aaa
int3
sub
pop
inc
mov
sub
fwait
mov
and
inc
int
xor
aam
test
cmp
lods
arpl
loopne
or
jecxz
adc
into
les
xlat
inc
divb
cmp
out
lret
fmull
jae
and
flds
mov
fistps
mov
jnp
mov
pusha
popf
mov
add
inc
decl
sarl
ficoms
or
aas
and
or
mov
lods
inc
lods
fwait
jnp
cmpsl
inc
sti
in
add
pop
mov
jmp
pusha
fcompl
pushf
cli
scas
pop
sahf
push
out
insb
rolb
jb
pop
clc
sti
pushf
out
ds
pusha
dec
or
cmpsb
sarl
subl
stos
xor
or
and
mov
popa
sbb
or
leave
cmp
xor
sbb
scas
jae
jecxz
sub
mov
push
rorb
mov
arpl
lahf
into
scas
fstpt
movsb
fwait
repz
add
jae
sbb
push
in
sbb
sub
ja
jne
cmp
push
sub
shrl
sub
fwait
pop
fcompl
pop
push
cmp
jge
ret
xchg
cmp
mov
fistpl
adc
push
jle
mov
mov
lahf
js
xchg
ret
mov
jnp
sahf
and
pop
pop
out
out
shr
inc
imul
in
nop
sbb
inc
inc
mov
pop
pop
dec
sbb
xlat
or
test
ljmp
sub
adc
jb
xchg
inc
movsl
aad
pop
scas
cmpb
fstl
pop
test
jae
jne
negl
jecxz
arpl
repz
pop
adc
ret
daa
xor
pop
inc
push
lret
mov
pop
inc
mov
lods
pop
shlb
sti
stc
xchg
mov
jne
mov
jno
loopne
in
jge
pop
js
stc
fsubrs
nop
sub
jl
mov
arpl
xchg
pop
in
add
ss
pushf
mov
mov
cmp
outsl
pop
or
shlb
lahf
sti
jns
aad
and
leave
jno
into
cmp
imul
mov
push
pop
adc
lds
push
mov
sub
pop
mov
jecxz
dec
gs
mov
mov
sti
mov
movsl
inc
and
aad
jno
stos
xchg
xchg
push
pop
pusha
sub
cmp
cwtl
push
arpl
mov
sub
inc
mov
insl
mov
rcl
mov
std
mov
or
sub
dec
pop
ror
or
or
add
adc
mov
and
jno
push
lahf
pop
stos
into
pusha
or
sub
push
xor
jo
or
in
and
pushf
mov
jmp
pop
dec
aad
inc
cmpb
push
adc
std
loop
loope
adc
dec
jl
sbbl
dec
leave
lahf
sub
mov
or
imul
jnp
das
adc
fwait
pop
jmp
aas
fcoms
xor
fmull
enter
add
and
mov
xchg
push
shrb
mov
mov
xchg
xor
adc
and
push
aad
dec
adc
adc
mov
adc
arpl
imul
popf
in
dec
test
and
test
xor
inc
pop
out
test
push
jb
addl
jo
mov
inc
sahf
out
mov
mov
xor
sti
and
mov
or
mov
inc
aam
and
mov
popa
sbb
xchg
cmc
sub
shrd
in
fdivs
sbb
push
das
flds
bound
daa
fcoml
mov
mov
daa
scas
addr16
sub
add
jae
ss
jb
sub
out
int
dec
inc
ja
lret
data16
test
popf
sbb
lret
bound
cmpsl
gs
pop
xchg
iret
imul
pushf
punpcklwd
mov
push
lock
push
mov
xor
clc
inc
mov
leave
testb
jle
and
outsl
clc
fldenv
test
inc
jno
hlt
fisubrl
stos
inc
rcr
xor
out
out
xor
push
jbe
aaa
arpl
nop
push
decb
push
cltd
sbb
cmpsb
pop
mov
mov
gs
lods
call
dec
add
aam
xchg
in
test
mov
imul
push
psubusb
add
imul
pop
jbe
xor
das
les
rolb
call
cmp
fisttps
mov
xlat
pop
xchg
lret
orb
inc
xor
adc
jge
xchg
shlb
or
setg
push
icebp
cmc
std
pop
inc
push
js
fstp
pop
insl
adc
or
in
stos
jg
pop
rclb
jmp
sbbb
mov
dec
inc
push
mov
or
in
and
cwtl
inc
subl
add
popa
adc
imulb
popa
out
cltd
add
sub
dec
mov
adc
loopne
add
outsb
sbb
mov
add
mov
sub
adc
cmp
or
lcall
jmp
cmpsb
aas
or
inc
inc
add
aad
adc
ret
mov
cmp
jecxz
jno
and
and
jg
int3
mov
cmp
daa
inc
push
mov
out
push
fimull
add
imul
dec
jbe
dec
imul
int3
in
dec
imull
stos
pop
ret
mov
hlt
mov
fistpll
ja
push
push
leave
jp
xchg
jl
push
cmpsb
mov
stc
fwait
imul
outsb
mov
aas
xor
fisubrl
mov
scas
insb
addr16
repz
push
pop
mov
mov
push
fwait
xchg
xchg
add
jge
aaa
push
pop
pop
repz
in
add
and
and
mov
iret
and
lods
pop
pop
add
arpl
dec
pop
mov
int
sahf
dec
push
rorl
pop
sub
jle
jnp
test
cmp
adc
movsb
inc
pop
push
popa
jno
xchg
loop
mov
sti
add
mov
andl
cmp
jb
sti
push
xchg
rorl
aaa
or
lea
push
mov
cltd
mov
insl
outsb
cs
push
push
add
lahf
push
xor
push
ja
xchg
jg
mov
aaa
dec
imul
lret
mov
inc
mov
filds
test
and
mov
cmpsb
in
cmp
clc
sbb
and
inc
jns
mov
inc
add
sbb
loope
insb
xor
lods
jl
rcll
push
pushf
xor
jp
xchg
xor
addb
xchg
xchg
mov
clc
int
sbb
dec
hlt
fs
pop
imul
push
sbb
popl
subl
cli
popf
and
es
dec
test
enter
scas
ja
hlt
cmp
mov
mov
dec
in
cmp
loopne
cmpsl
push
lret
pop
lret
lret
ja
jne
cli
loope
xorl
sub
shrl
loop
xchg
xchg
orb
sbb
data16
fistpl
test
mov
lock
jl
dec
mov
cmp
lahf
cs
iret
xchg
sub
inc
dec
test
push
aas
cmp
ret
subl
mov
xchg
aaa
ret
in
std
shrl
add
cmp
sub
mov
out
xchg
test
lods
mov
push
pop
lret
xchg
mov
ret
xor
push
mov
xor
xlat
cmp
inc
popf
sbb
xchg
ljmp
jb
jno
mov
in
sbb
push
in
xabort
jbe
jmp
push
jnp
fnsave
faddp
sub
cmpxchg
jb
ficoml
fnstcw
mov
fildll
loopne
stos
fildl
insl
inc
mov
in
mov
push
sbb
adc
sbb
push
cmp
mov
std
push
xchg
sbb
mov
rcll
andb
imul
cmp
mov
pop
std
les
xorb
jns
test
cmpsb
pop
enter
stos
fidivrl
push
add
js
rcrb
cmpsb
addr16
mov
add
jg
xor
or
cmp
and
in
rol
push
cwtl
ret
xchg
lret
xor
mov
fsubs
in
aaa
out
dec
xor
enter
mov
sbb
test
lods
out
sbb
sub
add
and
xchg
xor
mov
mov
mov
loope
into
jb
adc
scas
pop
push
rorl
out
das
mov
arpl
mov
cmpsl
xlat
cmp
popf
call
mov
dec
ret
mov
xchg
add
ja
test
cmp
dec
adc
pop
repnz
outsb
jne
sbb
mov
pop
push
fadds
subb
mov
shlb
pop
pop
icebp
hlt
sbbb
pop
inc
mov
movsl
xchg
lahf
test
pop
push
subb
mov
sbb
dec
xlat
loopne
pop
and
lahf
cs
push
or
mov
shlb
jbe
aas
sbb
xchg
out
aaa
subb
inc
mov
or
or
adc
xchg
mov
xchg
push
mov
push
dec
movsl
and
in
in
mov
mov
stos
ret
sbb
push
xor
mov
inc
aam
xor
aaa
cmp
jne
loope
pop
insl
fdiv
in
push
insb
cmpsb
dec
jae
loope
mov
push
data16
je
test
pop
xchg
add
mov
icebp
movsl
pop
jp
hlt
xchg
sub
cmp
cli
sti
pop
out
mov
fistpll
sbb
mov
sbb
ljmp
xchg
aam
pop
jae
int3
rcrb
fstpt
je
jl
divb
std
pusha
and
mov
push
and
les
fists
mov
jne
and
xchg
sbb
xor
bound
push
testl
dec
mov
mov
test
sub
sub
pop
push
les
cs
adc
push
mov
xchg
std
sbb
jle
loopne
fildl
jg
or
ja
xor
dec
jecxz
jecxz
xchg
mov
mov
and
inc
mull
sub
mov
daa
jl
or
pop
out
push
or
xor
stos
xchg
rcr
ljmp
sti
inc
sbb
pop
in
sub
ja
or
xor
fidivrs
pop
insl
shlb
in
insl
inc
nop
outsl
lods
cmpsl
mov
sarl
xor
popf
rcrb
add
xor
push
rcrb
mov
out
mov
xchg
stos
stos
sub
cmp
cmp
enter
inc
sub
xchg
and
push
pop
jmp
mov
push
mov
cmp
mov
jb
loop
dec
cmp
and
fsub
pop
mov
cmp
clc
bound
sbb
xchg
sbb
push
das
outsl
mov
in
push
push
xchg
ljmp
xchg
mov
mov
clc
stc
aam
cs
ss
dec
daa
push
push
leave
xor
and
fcompl
sbb
sbb
cwtl
scas
inc
add
jo
jmp
adc
adc
hlt
and
sub
fwait
mov
cs
filds
mov
push
outsl
pusha
fmuls
mov
jnp
movsb
push
adc
popf
mov
jb
ret
or
pop
push
aaa
xor
mov
add
jge
pop
mov
cmp
iret
sub
movsb
testb
jp
lcall
cwtl
add
mov
adc
iret
shrl
xor
repz
faddl
dec
mov
ds
faddp
push
fcom
aas
cli
bound
fcoml
icebp
cmp
out
pushf
xchg
sbb
movhps
js
sbb
and
js
sub
push
cmp
imul
popa
in
shlb
mov
rcrl
pop
sbb
sub
je
test
add
jle
aaa
cli
jecxz
dec
push
xchg
jecxz
jns
mov
xchg
int3
nop
into
dec
imul
loopne
and
mov
sahf
push
inc
jmp
icebp
popf
ret
cmpsl
xchg
and
test
push
cs
sub
xchg
pop
std
push
test
push
sbb
test
mov
std
lea
cmpsl
fmuls
fsubl
sti
pushl
jecxz
imul
and
inc
stos
mov
icebp
cs
mov
inc
out
jp
daa
fidivl
sbb
fmulp
jg
or
or
and
lock
xchg
ret
pop
add
jmp
sub
lods
jno
dec
mov
pop
lret
and
push
js
std
das
pop
sub
cmp
scas
int3
add
add
push
out
lods
mov
ret
inc
sbb
cmp
stos
push
xchg
std
xchg
add
outsb
dec
mulb
mulb
mov
cs
sbb
dec
ss
push
mov
bndldx
pop
inc
imul
jg
pop
int
dec
push
add
hlt
fdivl
push
cwtl
ljmp
mov
loopne
pop
cmp
out
sub
stos
mov
loop
aam
les
mov
fcmovnbe
and
cmp
addr16
or
gs
fstpt
jmp
fcomps
int3
pushf
daa
clc
paddusb
outsb
jecxz
out
xor
sub
loop
into
jb
push
lods
jg
mov
shl
repnz
scas
mov
jmp
xor
cmpsl
out
stos
sub
in
outsl
push
inc
inc
xchg
xor
xor
jb
inc
stc
adc
xchg
mov
inc
mov
cwtl
sbbl
popa
ss
ss
call
jle
lret
pop
lahf
pop
movsl
out
repnz
dec
mov
add
out
xor
movsl
pop
cmc
cmp
scas
fldl
stos
dec
mov
mov
icebp
push
xchg
pop
mov
xchg
cltd
pcmpgtb
jns
gs
mov
xor
cmp
insb
mov
stos
test
jmp
mov
int3
cmp
ror
dec
aas
mov
mov
test
cmpsb
fldcw
in
xor
fcomps
js
add
ret
aas
and
mov
mov
xchg
xchg
xchg
mov
add
mov
dec
xchg
and
sbb
add
lods
push
insl
jb
mov
ret
insl
mov
add
adc
and
pop
inc
sbb
push
pusha
inc
mov
adc
shl
in
pushf
pcmpeqw
stc
fwait
cmc
adc
rorl
cld
mov
mov
sub
pop
ror
ljmp
dec
cmpl
pop
xor
fistpl
aam
sub
jne
into
arpl
lods
testl
sbb
jne
mov
int3
ds
xchg
sbbb
jns
shl
inc
adc
sbb
lahf
mov
in
push
movsl
xchg
jmp
fldenv
sub
sbb
ret
jmp
or
loop
pop
xchg
and
mov
lds
lret
xchg
pop
push
cli
dec
jo
subl
enter
hlt
add
push
jp
roll
adc
into
push
mov
arpl
adc
sti
movsl
and
ja
stc
mov
xchg
and
movsb
rorl
cmc
test
mov
movl
lods
ljmp
popf
clc
dec
cli
pop
pop
lods
push
inc
mov
incl
leave
inc
test
and
nop
scas
test
lock
sub
mov
ljmp
lods
icebp
es
sub
ret
adc
xor
iret
scas
or
jmp
push
adc
sbb
jecxz
sub
adc
in
mov
sub
lea
cmp
addr16
jg
add
xchg
popa
push
sbb
aaa
dec
fwait
movsl
ds
sbb
sarl
enter
push
pop
xchg
add
in
sbb
dec
pushf
push
jecxz
das
pop
xor
mov
push
insl
cltd
outsb
ja
cmp
mov
dec
cmpsb
das
mov
jae
jecxz
dec
pop
int3
cmp
push
jae
inc
jo
pop
and
daa
test
xlat
shl
sbb
sbb
lahf
push
test
shr
or
or
daa
aad
mov
dec
xchg
pop
cmc
outsl
popa
xchg
arpl
mov
xor
and
push
mull
fisubl
inc
jb
dec
testb
int
rcl
in
inc
pop
fs
adc
rorb
cmp
push
stos
dec
mov
shlb
aad
jnp
insb
inc
js
push
pop
in
or
loope
and
xor
pusha
shrl
fxch
popf
jne
sub
dec
adc
push
lods
cwtl
dec
aaa
dec
dec
ljmp
xor
bound
decb
cwtl
sub
xchg
pop
xor
jb
out
add
jbe
cmp
ror
ret
iret
mov
xchg
cmp
mov
xchg
jge
sub
push
jnp
cmc
mov
adc
mov
add
repnz
push
add
push
rcl
and
sub
cmovg
shl
mov
mov
pusha
add
and
jmp
mov
xor
pushf
aam
int
dec
mov
or
dec
adc
fwait
and
or
in
notl
lods
dec
adcb
in
aaa
sbb
or
sub
dec
push
movsb
mov
or
jne
pop
ljmp
inc
add
xchg
jnp
in
out
xlat
lahf
pop
lds
cmp
clc
repz
inc
xchg
cmp
insb
cld
and
push
mov
loop
add
fldl
adc
push
ljmp
adc
aad
xchg
mov
popl
and
pop
sub
xor
iret
mov
int3
push
add
mov
scas
mov
xchg
sti
pop
jb
lods
or
lret
lods
sbb
popw
cmp
fimuls
and
push
xor
push
test
push
stos
mov
rorl
ja
or
push
shrl
adc
add
adc
fdivrs
inc
or
mov
icebp
cmp
sbbb
mov
mov
out
pop
xor
mov
add
loope
loopne
fstpl
in
iret
xchg
jge
in
push
xchg
stos
in
sbb
into
sbb
adcb
push
aam
cmp
xchg
mov
add
or
push
repnz
imul
xchg
push
xchg
mov
mov
lret
outsb
add
aaa
es
sub
mov
mov
push
mov
repz
or
jae
mov
mov
or
pop
jge
add
pop
xchg
pop
or
mov
push
pop
pop
mov
inc
cmp
or
outsb
jle
out
div
sub
movsl
inc
cmp
mov
das
fsubrs
ja
fisttpll
mov
mov
push
mov
adc
push
movsl
push
in
sbb
sbb
jbe
rorb
adc
das
inc
cwtl
sub
push
fstpl
jnp
xchg
push
adc
or
push
imul
loop
addb
test
sub
movsb
ja
repz
stos
sbb
inc
jbe
adc
jmp
addr16
fldenv
lods
cld
lcall
mov
sbb
xchg
std
pusha
mov
lcall
xor
mov
call
or
daa
out
jo
fsubp
pusha
popa
fidivrl
xchg
sbb
lret
popa
mov
and
or
daa
adcl
mov
scas
and
add
push
jnp
addr16
mov
and
cmpsb
mov
or
stc
loopne
movsl
stos
shlb
add
int
mov
xchg
add
cmp
nop
out
adc
aam
jb
jnp
loopne
xchg
push
fsubrl
sub
das
cmc
cmpb
fisttpll
or
aaa
xor
fistpll
adc
testl
jb
push
test
xlat
outsb
jle
inc
push
sahf
mov
jno
cmpsb
xchg
lods
mov
in
les
test
outsl
add
pop
sub
pop
pop
adc
inc
sti
movsl
pushf
in
mov
in
les
or
in
push
shlb
int3
js
sub
in
fcompl
xchg
jae
lds
xchg
mov
cld
or
push
cli
mov
mov
rorb
sbb
and
cwtl
das
pop
push
jb
ret
xor
call
mov
sub
mov
lea
push
lret
or
dec
enter
add
xchg
cs
adcl
adc
xlat
mov
packssdw
insl
mov
orb
dec
jo
push
mov
imul
xchg
sub
sub
fcomip
lret
sub
lret
xor
jno
rolb
js
shrb
mov
jb
sbb
test
and
arpl
add
popf
or
outsb
xor
movsb
pusha
loop
rcr
xor
jle
cmpsl
mov
dec
insl
jne
add
cld
in
push
push
daa
lods
sub
dec
cmp
addb
ret
jo
out
inc
inc
mov
jne
lret
leave
mov
out
aad
sub
push
movsb
aaa
ja
mov
cmpsl
inc
ljmp
rcrb
push
cmpsb
xchg
pop
ret
shr
fmuls
lmsw
sbb
std
insl
decb
or
insb
adc
adc
pop
sub
pop
pop
ljmp
data16
cmp
fs
mov
xchg
inc
or
sub
dec
push
push
xlat
int3
sub
jnp
daa
and
cmpsb
or
test
fnsave
cld
aas
xchg
push
mov
cmp
testb
imul
stc
and
cld
stos
movb
mov
sub
xchg
addr16
pop
mov
mov
loope
roll
out
add
xchg
pop
sub
enter
das
xor
fdivr
in
shlb
scas
loope
xor
inc
cmp
ja
xor
jl
lods
lods
inc
inc
daa
push
jbe
rcr
or
xor
inc
int3
and
dec
mov
fsubrs
outsl
iret
push
mov
inc
call
jnp
pop
mov
add
cmpsb
outsb
test
es
pop
popf
pop
rolb
mov
loopne
sbb
pushf
adc
rcr
fs
push
jb
dec
adc
sub
into
insb
ficoml
hlt
and
shl
dec
xchg
roll
inc
pop
fwait
inc
popa
push
mov
je
xor
sub
and
mov
repz
push
sub
sbb
jo
fs
cs
mov
xchg
aas
int3
xlat
cmp
or
es
xor
clc
jle
jle
mov
daa
and
or
sahf
dec
mov
lock
mov
mov
jnp
outsb
clc
js
xchg
or
out
lock
mov
fs
daa
sbb
movsb
add
mov
cmpb
jne
push
in
enter
cmp
pop
pop
sbb
std
sub
push
insb
ret
jmp
fcomps
xchg
cmc
push
sahf
aam
mov
cmp
xor
mov
cltd
dec
in
sbb
clc
shll
mov
adcb
pop
ficoms
cli
cmpsl
mov
or
lahf
dec
mov
shll
pop
mov
gs
outsb
mov
mov
xlat
pop
call
mov
lahf
cmpsl
or
rorb
pop
push
lods
fmuls
pop
jp
inc
adc
stc
mov
in
pusha
adc
mov
imulb
mov
push
lcall
jl
mov
cmp
adc
leave
xchg
lods
sub
sarl
jne
inc
push
outsl
push
cmpsb
sti
xchg
mov
pop
pop
stos
in
in
jle
or
pop
enter
loope
int
cmc
nop
clc
cmpl
ds
jl
xchg
add
push
test
insl
dec
cld
in
pop
xor
xor
or
mov
cmp
in
cli
imul
loop
imul
mov
and
mov
push
push
lea
push
aaa
scas
push
lret
js
repz
jnp
stos
insl
push
shr
and
push
cwtl
lock
dec
mov
and
mov
inc
es
jge
and
jle
lahf
out
fwait
movsb
and
scas
insb
cmc
shlb
xor
xor
out
push
xchg
mov
jnp
dec
mov
jle
loop
jo
out
inc
xchg
iret
lods
ss
test
pop
fisubl
inc
mov
lods
sub
mov
sub
rol
cmp
setb
in
mov
push
test
jae
call
repnz
insl
mov
sbb
add
cmp
cmpsl
rolb
aad
adc
stos
add
pop
ret
and
or
mov
ds
jle
hlt
push
mov
je
lret
mov
xor
push
or
sahf
jg
mov
es
push
mov
daa
movsb
mov
into
xlat
mov
sub
mov
std
rcrl
pop
or
jle
cmp
iret
lret
push
aas
sbb
lret
data16
jb
mov
lds
add
push
xchg
jecxz
mov
je
faddp
inc
mov
inc
aam
scas
sub
or
iret
push
pushl
out
adc
fwait
pop
xorb
daa
outsl
jns
movsl
inc
imul
xlat
data16
leave
cld
inc
pop
dec
fbstp
jo
inc
imull
pusha
push
int
pop
xchg
push
cli
dec
loope
jmp
mov
out
pop
pop
popa
ficoms
sub
xor
lret
sbb
hlt
cmp
negb
invd
in
inc
mov
pusha
mov
mov
icebp
fcompp
repz
mov
xchg
push
repnz
xchg
mov
dec
jg
pushf
xlat
pop
sub
out
pop
je
mov
je
out
lds
inc
movb
mov
movb
add
in
and
arpl
push
push
pop
or
lret
inc
or
rcr
push
sub
sti
xchg
mov
sub
push
push
push
lahf
clc
inc
in
mov
cltd
std
push
cmp
out
xchg
mov
sbb
sub
ljmp
push
ret
or
cmp
jns
xchg
pop
jp
adc
cmp
enter
cmp
cmp
sahf
inc
call
mov
sub
push
sarb
jmp
lods
sbb
pop
pushf
jo
add
subb
xlat
mov
jge
mov
lock
js
inc
mov
test
dec
adc
pushf
add
sbb
jecxz
testl
adc
inc
rcrb
outsb
roll
push
stos
sbb
xchg
lahf
lds
movsb
adc
notl
jns
repnz
testl
lock
stos
test
dec
sbb
std
pop
mov
outsl
orb
mov
repz
dec
xor
fnsave
enter
out
leave
xchg
enter
push
fbstp
or
fnsave
inc
ficoml
loope
xor
test
jb
add
inc
mov
pop
stos
inc
sbb
dec
lret
das
sti
sbb
xor
stos
cmp
mov
in
insb
mov
inc
mov
jns
inc
enter
ds
adc
sbb
cld
roll
aaa
mov
or
addr16
or
xor
jns
sub
stos
inc
sbb
mov
pop
insl
mov
stos
sub
std
sarl
shrb
popl
sti
in
cwtl
inc
add
fsubr
adc
mov
adc
hlt
adc
in
icebp
xchg
addr16
jle
lcall
cltd
pushf
pop
je
adc
movsl
pop
xchg
loop
pop
inc
lods
and
fmulp
rorb
and
imul
call
mov
and
leave
aam
lock
bound
push
mov
movl
fwait
xor
fldl
int
stos
out
xchg
in
gs
mov
stos
into
ss
or
xor
pop
lahf
enter
push
jae
adc
test
mov
repnz
push
out
movsb
roll
and
test
aas
mov
pop
cmpsb
inc
in
or
shrl
add
dec
fistl
jge
insb
lock
lret
fcoms
cmp
push
out
dec
xchg
mov
ret
jmp
or
imul
divl
jb
out
mov
and
cmp
inc
xor
push
mov
sub
cmp
dec
andb
adc
clc
add
andl
dec
test
lods
jb
mov
lcall
cwtl
cmp
imul
dec
mov
rcrl
dec
mov
mov
outsb
addr16
dec
push
xor
xchg
je
push
adc
mov
dec
adc
sahf
and
or
add
jo
dec
and
leave
mov
xchg
adcl
in
dec
xorb
repz
pusha
add
loop
push
out
jg
mov
xchg
gs
or
out
loopne
or
cld
lret
fs
mov
inc
adcl
pop
repnz
nop
ret
addr16
dec
pop
loopne
test
out
sahf
adc
push
andl
push
mov
cltd
cmpsb
mov
lods
sahf
rolb
ds
cld
xorb
mov
xchg
pop
xor
shl
out
mov
sbb
inc
cmp
in
cs
pop
jnp
pop
arpl
adc
sahf
jns
in
movsb
cmp
ljmp
ljmp
in
inc
dec
inc
mov
leave
jp
ds
addb
sbb
xchg
xor
pop
mov
in
jl
pushf
push
into
xlat
xor
in
cmp
das
pop
and
adc
add
adc
out
add
iret
fmul
daa
loopne
insl
dec
and
subb
std
push
add
popl
push
out
cmp
stc
rcrl
pop
movsb
pop
xchg
mov
pushl
pusha
stos
push
out
loopne
out
cmpsb
movsl
and
sahf
fimuls
or
xor
sub
adc
push
lods
push
xor
std
ljmp
data16
les
pop
cli
push
cmpsb
fcmovu
adc
fcoms
pushf
jno
xor
jo
xchg
jp
cmp
jg
sahf
cmpsb
add
push
sbb
sub
or
lcall
cmp
jae
js
mov
pop
jp
mov
or
mov
push
jb
bound
lds
cwtl
mov
and
sub
pushf
xchg
loope
mov
jmp
adc
inc
mov
mov
lret
loop
std
jl
and
pop
sbb
and
lds
xor
pushf
mov
push
add
and
sub
mov
jge
jnp
mov
mov
fsubs
loopne
sub
mov
in
das
scas
pop
xor
lods
mov
push
sbb
mov
push
ret
sarl
pop
adc
dec
dec
adc
daa
xchg
lods
in
add
mov
jnp
push
cmc
sahf
aaa
mov
sbb
adc
cmp
jmp
or
mov
ss
xchg
fiaddl
add
mov
or
mov
mov
into
iret
xchg
xor
in
es
push
cmpsl
in
scas
xor
shr
jmp
add
dec
pop
fimuls
pop
stos
scas
mov
pop
call
cmp
dec
bound
xor
int
mov
rorl
xchg
and
add
mov
ret
mov
rcll
cld
testb
mov
pop
js
sahf
sub
movb
call
cmpsl
mov
push
or
in
push
nop
xor
pop
xchg
inc
fwait
stos
xor
xorb
imul
je
fmull
push
sub
fcmovb
js
call
aad
paddusb
loopne
scas
out
in
cmp
fstl
push
pop
lahf
add
loopne
cwtl
icebp
pop
or
and
and
inc
iret
push
decl
test
push
xor
gs
jb
shrb
add
jg
rclb
add
pop
cmpsl
insl
sysenter
loop
std
arpl
and
sti
push
clc
sbb
xor
je
xor
aas
push
add
jns
adc
sar
arpl
mov
sarl
adc
out
sbb
adc
xchg
ja
es
adc
lods
bound
inc
and
push
ljmp
adc
das
sub
lret
inc
sbb
mov
mov
cmpsl
leave
mov
dec
scas
mov
pop
mov
jo
fwait
imul
aad
shrb
xor
je
insl
sbb
cmpsl
and
or
ja
xchg
insb
jge
sahf
aad
imul
loope
add
insl
loop
ficomps
movsb
sti
int
dec
pop
mov
push
mov
push
enter
mov
mov
push
shrl
push
xchg
cmp
jle
pop
ds
mov
mov
mov
xchg
aas
cmpl
std
mov
mov
xchg
add
shlb
out
mov
fs
out
pop
adc
out
mov
rcr
inc
ja
add
xor
ja
and
inc
jns
fildll
imul
or
push
lret
inc
adc
inc
iret
jg
and
dec
fstpt
mov
je
xor
inc
popf
insb
xchg
or
jmp
dec
adc
mov
je
or
sub
push
jecxz
cs
dec
gs
cmp
sbb
aaa
adc
pop
pop
xor
sbb
loope
dec
mov
iretw
imul
aaa
mov
aaa
pop
scas
sub
xchg
in
into
shlb
mov
rclb
or
push
inc
into
add
or
xor
outsl
call
xchg
pop
mov
or
cmpsb
das
xchg
pop
or
mov
sub
add
adc
sub
adc
loop
xor
icebp
dec
pusha
mov
popf
inc
popa
or
sub
fmul
andl
pop
aas
jns
fstcw
mov
ret
inc
fwait
sarb
cmc
out
jo
fs
jns
jg
inc
addr16
lds
aas
mov
xlat
mov
outsl
xor
pushf
outsb
cmc
outsb
insb
fnstenv
fbld
adc
sbb
dec
mov
sbb
sub
addr16
push
pop
add
cmp
mov
in
add
fmull
pcmpeqd
lods
add
daa
addb
and
cmpl
lock
popf
sti
roll
mov
push
cli
or
mov
cmc
sub
dec
incl
out
jl
outsb
mov
xchg
rorl
dec
lea
cmp
add
lret
xchg
cwtl
inc
jo
mov
xor
out
push
xor
adc
addb
xchg
arpl
xchg
push
and
mov
dec
ss
gs
aas
pop
dec
iret
rolb
outsl
fs
lret
mov
cld
xchg
sahf
ja
inc
in
sbb
shrl
sbb
mov
mov
mov
mov
mov
jg
inc
ds
leave
fabs
mov
iret
sbb
jb
and
in
pushf
push
scas
cs
adc
sbb
ljmp
inc
xchg
ja
int
lret
mov
push
jmp
push
push
mov
pop
jmp
sbb
mov
or
ret
hlt
outsb
ret
mov
mov
cmc
push
mov
popa
hlt
fdivs
mov
mov
dec
sub
cmp
ja
sbb
fcmovb
mov
fscale
mov
hlt
js
loop
mov
or
jecxz
xor
mov
gs
in
daa
xlat
rclb
jnp
xchg
loope
xchg
inc
out
xchg
aas
popf
mov
int
mov
rcrb
divb
jl
outsb
jp
xchg
lods
cmpsl
cmp
pop
ljmp
pop
cli
push
mov
outsl
mov
sub
adc
repnz
fdivp
test
call
xchg
push
subl
push
clc
imulb
fbld
push
sub
xchg
mov
or
and
mov
push
jne
outsb
fimull
lock
loope
inc
dec
xchg
lret
lret
lds
test
cmpsl
push
std
and
fnsave
jnp
jo
mov
lods
pop
out
shl
pop
orb
cmp
cmpsb
xor
push
mov
pop
jp
and
insl
cmp
mov
sbbb
pop
fcoml
leave
or
jmp
adc
test
daa
out
in
ja
addr16
out
xor
xchg
xor
test
data16
cmp
inc
push
shlb
xchg
icebp
iret
scas
cmp
xor
dec
pop
subl
in
lea
mov
sub
lods
sbb
pop
sbb
loopne
dec
inc
ss
ret
cmp
lcall
jecxz
jecxz
les
lock
aad
lods
call
stos
xchg
int3
ss
sarb
mov
popa
pop
leave
adc
or
push
dec
insl
xchg
sbb
ret
xor
lea
sub
adc
sbb
mov
pop
sbb
shlb
xchg
repnz
mov
enter
sbb
lcall
or
ss
int
rorl
mov
mov
leave
xor
roll
adc
sti
inc
pop
incl
pop
push
dec
push
xor
xchg
jg
stos
dec
push
sahf
dec
xchg
lcall
or
cmp
aam
call
dec
std
sbb
dec
jl
dec
push
sbb
lock
js
mov
call
mov
pushf
pop
cmp
rcll
insl
pop
xlat
lahf
lock
xchg
cmp
pop
mov
or
adc
adc
dec
fsubr
dec
cltd
je
aaa
mov
cld
sahf
push
imul
and
mov
into
fidivrl
xchg
mov
xchg
xor
bound
jae
and
jecxz
mov
pop
mov
adc
mov
scas
jno
out
inc
inc
cs
or
mov
subb
outsl
out
pop
mov
pop
and
or
movsl
aaa
popf
cmp
pop
std
test
lock
fsubs
aaa
jnp
adc
and
aad
aas
mov
mov
add
push
lcall
or
lss
mov
xchg
jbe
lds
jno
mov
lods
push
push
dec
sbb
xorb
push
pop
push
rol
dec
or
sbb
test
or
hlt
jmp
cmp
int
push
bound
jns
mov
lods
mov
add
test
addr16
pop
icebp
inc
cwtl
popa
inc
fcmovne
push
and
sbb
imul
mov
mov
in
mov
cs
push
jae
call
mov
jae
cmp
lret
clc
adc
out
in
push
push
int
and
scas
cmovle
dec
xchg
int
scas
pop
and
or
xchg
add
nop
std
pushf
sbb
cmp
fsubrs
lcall
enter
xchg
stc
inc
adc
push
adc
pop
es
ret
or
mov
add
aas
in
daa
and
dec
jge
icebp
cwtl
push
or
bound
in
fistpll
ljmp
push
loopne
cmp
inc
pop
stos
mov
push
xchg
or
or
push
nop
pop
hlt
inc
cmp
sub
add
ja
jecxz
movsb
aas
mov
popa
nop
or
movsb
lahf
bound
daa
test
xchg
xchg
imul
add
int3
jbe
in
cmc
or
sub
out
movsl
sub
sbb
inc
add
mov
and
pop
in
lret
xlat
roll
rcl
sub
lcall
dec
mov
add
ss
xchg
fs
outsl
lret
lret
cli
and
test
out
xor
dec
js
pop
mov
mov
adc
xor
dec
adc
out
pop
xor
icebp
std
dec
div
xchg
subb
dec
inc
popa
pop
mov
xor
xor
xor
icebp
fisubrs
iret
test
in
push
addr16
push
jns
je
hlt
push
incl
in
cmp
jge
adc
sbb
push
lds
iret
sarl
sbb
sbb
pop
xchg
adc
repnz
sbb
test
jp
lahf
out
xchg
xor
pop
push
push
insl
adc
sub
jg
jmp
sbb
mov
push
incl
xchg
gs
in
mov
mov
push
or
ret
cmp
push
push
stos
arpl
outsl
mov
jbe
xlat
and
scas
repz
pop
int
fwait
dec
cmp
mov
mov
pop
jo
sbb
loop
nop
scas
sar
xchg
and
mov
adc
in
outsb
mov
repz
xor
and
ficoml
sbb
aas
inc
lock
lret
cmpsb
cli
adc
add
int
cmp
jge
sbb
mov
mov
xchg
adc
lock
lods
mov
js
inc
fidivrs
imul
lret
inc
fists
imul
test
jne
imul
cmc
pop
in
and
pop
repz
pusha
add
scas
out
pushf
mov
push
push
dec
popa
push
lods
outsl
fldt
lds
push
hlt
out
aas
les
pop
rcrl
add
sbb
inc
cmp
or
das
sbb
cmpsb
int
cli
xor
ret
cmp
mov
shll
pop
sub
mov
push
sub
cs
rorb
lds
xchg
dec
dec
and
or
inc
mov
outsb
mov
cmpl
sbb
fcomps
in
repz
scas
rcrb
sbb
jle
xor
dec
cmp
cmp
loope
stos
ja
cltd
test
mov
xchg
mov
mov
cmp
and
dec
mov
insb
xor
inc
fcoml
pop
mov
cmc
sbb
jnp
ja
ret
movsb
fistl
outsl
and
mov
cmp
loopne
push
pop
sarl
and
mov
push
dec
inc
lret
lcall
cmp
inc
adc
out
clc
sbb
xchg
and
loopne
jmp
jno
push
rcr
jp
jbe
or
and
push
jb
dec
sub
repnz
dec
adc
and
lea
inc
xor
ss
push
dec
je
xor
loop
mov
dec
cltd
sub
cmp
pop
sbb
and
imul
stos
cmp
xchg
or
das
cli
jnp
lea
push
xor
push
or
stos
mov
out
jle
inc
adc
add
rcll
jae
cmc
push
adc
jnp
cmp
mov
aas
popl
add
sahf
mov
scas
popa
mov
cmc
push
mov
jnp
mov
ret
lods
clc
cmp
imul
pop
xor
popa
cltd
mov
inc
psrlq
lea
ret
or
adc
cli
dec
cmc
stc
out
adc
cmpsb
rcr
les
mov
or
inc
std
mov
and
push
add
lret
mov
dec
hlt
jo
enter
inc
mov
inc
sbb
xchg
gs
xor
dec
jae
or
and
je
outsl
push
lcall
and
dec
cli
stos
xor
int3
sub
inc
loopne
pop
cmp
adcb
inc
mov
in
test
dec
cltd
mov
cwtl
fstl
xchg
scas
negl
int
sbb
mov
pop
or
mov
sbb
jge
mov
out
mov
leave
dec
addr16
jno
ret
notl
pop
mov
mov
pop
cltd
push
js
scas
lds
lock
push
rol
pop
adc
hlt
dec
scas
inc
xchg
add
addl
inc
cmp
movsl
ret
cmpsb
lret
pop
in
ds
push
mov
scas
stc
adc
out
ljmp
mov
fdivl
sub
icebp
or
repz
in
subb
sub
lcall
mov
xchg
orl
push
cmpsl
std
lret
out
out
mov
nop
jl
bound
outsb
add
cmp
xchg
push
aad
xchg
inc
mov
xchg
dec
das
ret
cli
jno
cs
in
and
mov
pop
into
movsb
xchg
shll
sti
lods
dec
lods
mov
fidivs
not
outsb
push
arpl
das
fdiv
call
lcall
sbb
imul
cmp
add
push
sub
jae
push
sub
sbb
pop
push
in
out
pop
and
jp
insb
jmp
and
cs
rcrl
add
sbb
clc
mov
cs
jae
out
fistl
cmp
mov
inc
jae
je
lcall
out
pop
mov
outsl
pop
sub
out
js
push
insb
loope
pop
jbe
int
mov
inc
pop
rclb
rolb
jne
dec
out
xchg
sahf
lret
out
add
aam
pop
call
push
leave
imul
iret
xor
xchg
insb
jg
push
loop
and
hlt
cmpsl
cmp
mov
mov
xor
mov
xchg
add
lret
insb
inc
ret
mov
jmp
xor
adc
das
push
pop
add
adc
out
scas
mov
outsl
or
xor
or
and
addr16
fsts
arpl
cwtl
mov
adc
cs
xchg
xchg
insb
pop
ficoml
cs
inc
xor
adc
push
jo
cld
jb
sahf
jle
inc
xor
sbb
mov
fwait
xchg
scas
pop
pusha
lods
fldt
jno
add
fidivrl
insl
cmp
in
imul
pop
pop
push
bound
push
mov
scas
push
sar
lea
xchg
aad
lods
ret
cmp
mov
ret
pushf
sub
cli
inc
sahf
push
stos
enter
outsb
jne
lret
cmpsb
je
push
push
lret
xchg
or
insl
xchg
stos
push
cmpsl
in
xchg
rclb
add
addr16
sbbl
xor
ret
push
mov
cwtl
sarb
push
jge
add
fmuls
call
aam
lcall
adc
ffreep
movsb
inc
sub
rcrl
out
mov
mov
test
push
out
scas
test
push
loop
int
xor
jbe
fldz
fisttpll
lea
jmp
jne
xchg
fildll
xchg
outsl
push
xor
cmpsb
mov
push
push
and
pop
mov
out
cmove
add
das
jg
inc
call
sub
je
ficoms
repnz
cli
scas
idiv
and
xchg
insl
jne
hlt
xor
mov
adcl
adc
cwtl
add
push
adc
fldcw
xor
sti
jmp
sub
arpl
and
sbbb
xchg
jle
es
stc
adc
mov
inc
push
mov
inc
stc
sub
jae
fisubs
imull
push
inc
mov
test
and
adc
mov
jmp
int3
add
andl
subb
cs
sbb
mov
add
aam
jnp
mov
sub
mov
xor
pop
call
and
repnz
stos
rorb
xor
mov
pop
and
sub
inc
add
mov
stc
out
sti
xchg
aad
sbb
rcrb
cltd
int
movsb
loop
sti
test
add
dec
les
int3
imul
mov
or
out
pop
fmull
pushf
fnstenv
push
imul
xchg
inc
out
filds
mov
adc
loope
mov
and
gs
and
imul
shll
sbb
push
add
pop
pop
data16
sub
lahf
jnp
inc
xchg
rcll
inc
mov
xlat
xor
lds
inc
inc
push
scas
pushf
inc
shr
shll
or
scas
xchg
inc
adc
xchg
inc
dec
lcall
rorb
jge
rcl
mov
stos
ror
mov
sub
hlt
sub
ljmp
pop
and
lock
and
test
add
fsubs
inc
pop
sbb
mov
hlt
dec
push
cltd
sahf
xchg
loopne
setle
xor
add
xor
and
push
hlt
pop
mov
ret
sbb
scas
mov
pop
dec
in
mov
inc
or
dec
sbb
iret
fstpt
push
addr16
mov
xor
sub
loopne
shl
dec
xchg
cmpsb
cmpl
mov
mov
inc
and
fdiv
push
xor
test
xchg
aam
fwait
jnp
mov
mov
sbb
sbb
shrb
cltd
sub
jne
xor
xchg
xor
mov
jmp
inc
cmp
sub
scas
enter
xchg
push
sub
loop
mov
test
test
loop
int
mov
lock
repz
ss
cwtl
paddsw
jnp
cmp
nop
orb
aam
je
sar
xchg
push
sub
stos
jbe
xor
in
jne
rolb
mov
jnp
int
pop
sub
arpl
push
je
dec
out
pusha
orb
cli
sbb
addb
test
add
fs
push
icebp
lea
mov
not
inc
les
int3
push
cmp
stos
mov
jp
xlat
mov
mov
and
fsubr
xchg
jae
push
inc
pop
mov
xor
dec
js
inc
mov
les
cmc
lds
out
jae
cmpsb
mov
jge
add
sub
pxor
call
sbb
inc
push
sbb
lcall
mov
addr16
cmp
shrb
bound
das
int
and
sbbb
push
sti
xor
and
fadds
out
add
adc
int
mov
lcall
orb
push
mov
mov
addr16
mov
push
imul
adc
mov
xor
xor
add
lea
out
lock
das
jl
xchg
imul
testl
mov
ljmp
scas
stos
in
mov
mov
lret
or
iret
mov
adc
or
pop
inc
std
pop
icebp
and
push
sub
push
clc
iret
cmp
or
adc
mov
push
mov
aam
cld
jecxz
or
lcall
ja
sub
pop
or
and
test
jmp
sub
test
imul
sub
pop
adc
mov
dec
adc
and
adc
sbb
adc
inc
jae
jecxz
orb
js
ljmp
add
sbbb
shl
mov
dec
ret
iret
enter
cmp
aad
out
addb
sbb
shrb
adc
in
add
enter
mov
rcr
dec
sahf
loopne
outsb
lret
push
jle
in
in
pop
repz
xor
or
daa
jmp
lret
sbb
sub
lcall
push
push
push
fbld
dec
into
test
dec
and
sub
mov
mov
fs
insl
pop
jmp
dec
dec
cwtl
mov
mov
fisttps
std
aas
cli
xchg
lret
mov
lods
add
lcall
or
into
daa
cwtl
pop
mov
fldl
mov
in
scas
pop
sbb
sbb
popf
pop
shrb
xchg
loopne
loope
outsl
pop
or
pop
out
adcl
popa
and
cs
jbe
and
push
inc
and
data16
cli
push
xor
pop
jne
nop
lods
mov
jmp
pushf
jg
cmp
mov
mov
das
sub
adc
jmp
shl
inc
jmp
lcall
sub
loope
out
jbe
add
std
add
adc
jne
push
cli
lods
loop
mov
shl
sbb
fisttpl
inc
or
xor
frstor
mov
idiv
cmc
das
rcll
or
jae
dec
sub
fstl
outsl
mov
in
mov
out
or
xchg
xchg
imul
mov
sub
das
ss
leave
test
leave
mov
sarb
fwait
fwait
pop
in
stc
push
loop
sub
mul
dec
dec
lods
pop
in
xchg
sbb
push
or
xor
mov
popf
fucompp
mov
xchg
lret
lods
sbb
xchg
hlt
fmull
push
fbstp
mov
sarb
mov
jmp
cmp
sbb
ret
lods
cli
dec
add
mov
cmp
dec
fmuls
and
mov
jle
pop
dec
mov
xor
sub
push
jnp
js
ljmp
add
pusha
xor
icebp
push
cmp
adc
insl
or
mov
xor
sbb
test
ret
mov
xchg
cmpsb
out
inc
dec
mov
sub
dec
cmp
sub
push
fists
pop
nop
cld
packsswb
cmp
fs
imul
push
into
jmp
sub
outsb
inc
sbb
flds
mov
jne
xor
arpl
test
push
jnp
inc
sub
push
mov
cmpsl
dec
push
fmul
xchg
push
sbbb
hlt
sbb
roll
mov
mov
daa
shrb
mov
mov
push
dec
cmpsl
jo
pop
shlb
inc
fcmovnb
negb
stos
add
xchg
fisubrs
xor
sub
inc
ret
xchg
into
cmp
xchg
aad
pushl
xlat
and
imul
mov
and
vmovdqu
dec
mov
and
sahf
inc
loop
pop
scas
mov
inc
lret
out
roll
mov
inc
jo
jno
lock
out
dec
push
lods
mov
outsl
shrl
push
loope
ja
jae
inc
push
ds
lock
aas
xor
movsb
out
dec
jae
loopne
lea
push
stc
pop
mov
mov
mov
cli
lods
mov
out
mov
and
push
dec
cwtl
bound
jb
inc
dec
pusha
sub
xchg
iret
clc
fimull
dec
pop
sbb
inc
outsb
jge
insl
mov
in
sbb
out
subb
sub
loope
adc
lcall
inc
xor
js
add
mov
jp
cli
icebp
mov
jp
xchg
xrelease
pushf
sub
push
jns
cli
push
inc
sti
mov
or
sbb
and
std
fdivl
push
ja
hlt
gs
or
inc
push
sti
xor
clc
js
in
jbe
push
jge
mov
jns
pop
sub
jne
mov
push
gs
subl
mov
lcall
inc
add
mov
frstor
cs
test
arpl
sbb
cmp
mov
pop
push
push
push
dec
popf
icebp
icebp
push
xchg
and
lret
mov
inc
int
and
fdiv
jb
push
pop
int
sbb
mov
imul
hlt
loopne
imul
sbb
hlt
xor
std
xor
mov
mov
mov
add
loope
lcall
es
mov
sbb
and
imul
lods
xchg
mov
cmp
sbb
divl
xchg
pusha
add
pop
pop
mov
call
dec
mov
je
inc
shlb
dec
xor
and
test
mov
bound
pushf
das
and
push
popf
mov
sahf
leave
push
dec
enter
mov
in
jo
shl
int
pop
into
inc
push
push
cmp
std
mov
pushl
mov
sbb
repz
mov
int3
es
fisttpll
mov
mov
lock
sbb
js,pt
pop
pop
das
xchg
movsb
sbb
lret
bound
sbb
aaa
mov
xchg
scas
xor
ljmp
and
push
mov
popa
jae
aas
push
push
iret
je
leave
sub
fisubrs
add
sub
stos
shll
leave
jae
sti
lds
add
pushf
adc
cmpsl
jbe
add
mov
jmp
mov
loop
or
dec
imul
inc
fwait
pop
hlt
push
pop
into
push
jb
hlt
stc
pusha
xchg
loop
sar
test
push
dec
fstl
push
enter
and
push
outsl
mov
pop
inc
ja
and
xor
sbb
jne
dec
mov
cwtl
xchg
out
pop
add
pop
decb
lahf
mov
or
cmp
mov
push
mov
pop
out
push
sbb
mov
fwait
addb
adc
repnz
mov
cmp
out
mov
inc
sub
xor
int
ret
rcr
loop
xlat
insb
jbe
push
cld
mov
hlt
ret
mov
enter
mov
jl
ret
fsub
sarl
dec
jmp
or
std
dec
test
clc
mov
sub
jne
cli
int3
scas
inc
lret
push
mov
xor
mov
daa
and
out
das
jae
in
aam
dec
xchg
rorl
jp
enter
adc
leave
mov
pop
daa
icebp
pusha
imul
mov
ds
insl
fisubrs
xor
push
xchg
jecxz
jl
test
cmc
jge
sub
adc
mov
pop
xor
call
stc
push
push
xor
adc
stos
cmp
xor
aam
jae
mov
pop
and
add
pop
inc
cmp
cld
cmp
fisubrs
fimull
sub
mov
sbb
add
pop
cmpsl
cmp
data16
out
pop
xlat
cld
scas
inc
mov
movsl
xchg
and
adc
push
icebp
mov
add
out
andl
push
arpl
add
cltd
xchg
pop
xchg
and
and
jecxz
into
fimuls
pop
in
pushf
data16
sbb
add
scas
push
xchg
rcll
mov
push
adc
push
inc
xchg
int
push
mov
imul
cmc
divb
mov
ficoms
pop
sub
mov
xchg
mov
xchg
adc
xor
lods
fcmovnb
push
shlb
test
push
cmp
or
pop
in
fptan
xchg
xor
xchg
test
push
push
mov
cwtl
es
mov
insb
testb
add
arpl
in
inc
inc
jno
pop
jne
loopne
inc
push
idivl
push
mov
popa
loopne
loop
mov
nop
jmp
mov
ret
pop
pop
fistps
lret
add
jns
int3
mov
lcall
add
pop
loopne
dec
sbb
cld
push
clc
xchg
cli
pop
or
lea
pop
pop
jl
cmp
mov
clc
cs
inc
cld
dec
mov
pop
mov
or
rorl
xchg
add
pop
mov
aas
jp
out
mov
call
ficoms
sbb
dec
xor
fcmove
push
xor
addr16
mov
shlb
adc
lock
push
inc
aas
icebp
xchg
jbe
jmp
cld
cmp
out
cmp
push
aam
mov
sbb
jl
popf
or
jnp
cwtl
in
sti
mov
imul
cwtl
mov
xor
fsts
mov
mov
addl
int
mov
and
inc
test
popf
mov
hlt
int
pop
jo
mov
fsub
sbb
dec
adc
aaa
mov
flds
loope
stos
mov
or
sbb
mov
add
dec
or
sahf
out
push
pusha
xchg
jae
pop
sub
fadds
mov
jge
in
mov
in
xorl
inc
jne
add
adcl
pop
repz
or
inc
xor
add
sti
rcrl
xchg
sub
xor
mov
aam
push
jecxz
ret
jg
pushl
loop
leave
out
repnz
sub
rclb
push
dec
add
adc
stos
push
jns
sub
std
imull
mov
dec
jmp
mov
mov
inc
inc
rcll
inc
addr16
inc
cmpsl
sahf
in
clc
pop
mov
nop
push
xor
shlb
mov
add
adc
arpl
imul
mov
dec
stos
dec
cli
inc
cmp
adc
pop
fnsetpm(287
aaa
xor
pop
jp
mov
push
mov
mov
inc
push
outsb
mov
add
pop
mov
inc
jno
mov
aad
and
lcall
cld
sub
jne
sub
mov
lret
inc
sbb
out
xor
lret
pop
cmc
xchg
lods
aas
rcrb
add
xchg
inc
subl
dec
pusha
sub
inc
jnp
jbe
adc
lods
popa
aad
mov
sti
mov
pop
popa
xor
xor
shr
and
inc
out
mov
stos
sub
pop
jb
inc
jmp
push
dec
or
cs
jp
shlb
std
dec
cmp
xchg
not
pop
ja
mov
push
movl
adcl
adc
push
popf
cmp
ss
push
mov
popf
mov
mov
in
fs
call
adc
push
leave
pusha
xchg
xchg
sbb
cld
popf
adc
and
stc
mov
mov
jb
bound
xor
xor
ss
negl
mov
sti
std
scas
shlb
loope
sub
add
cltd
out
das
lds
jecxz
jnp
and
outsl
cmc
into
mov
sub
loopne
in
in
jl
in
pop
bnd
mov
imul
sbb
jl
hlt
or
in
xrelease
hlt
lret
orl
es
and
mov
xchg
jp
inc
pop
mov
mov
mov
adc
pop
push
ret
mov
lcall
push
cmp
jmp
cld
sub
push
nop
out
pop
inc
inc
pop
pop
adc
out
roll
fwait
das
jns
add
and
push
xor
pop
mov
aas
cmp
or
inc
xchg
cmpsb
inc
loop
repz
hlt
in
sbb
push
xchg
sub
mov
push
ja
mov
inc
or
jns
or
sub
sub
leave
mov
add
cwtl
movsb
cwtl
clc
push
cmp
lret
out
imul
add
cmp
scas
fcomps
inc
cmp
aam
movsb
or
jle
mov
fimuls
fldl
xchg
insb
dec
and
ret
mov
cld
jle
jo
jne
repz
and
add
fmull
mov
movsl
lods
jle
hlt
lods
pop
jne
mov
cld
mov
or
cmpsl
jo
pop
fbstp
or
lahf
call
xor
out
jno
popa
subl
xorl
push
fcomps
cltd
jl
xchg
cwtl
pop
out
push
aad
and
push
xchg
call
jae
js
ds
mov
or
dec
cmp
mov
jno
je
xchg
addb
jle
ret
push
or
test
jl
adc
sbb
jecxz
pop
je
mov
addl
jae
lds
dec
je
and
in
lret
push
push
shlb
pop
les
jg
sbb
dec
and
pop
adc
test
pop
stc
push
pop
sbb
loopne
sbb
xchg
nop
in
sbb
lods
inc
ss
pop
test
mov
inc
fldcw
int3
mov
loopne
sub
mov
popf
mov
inc
mov
push
sub
dec
loop
ret
cmp
mov
mov
enter
sbb
sarb
out
adc
xor
mov
jg
jge
or
lahf
out
jbe
ret
mov
fcoms
out
sub
loopne
popl
lea
int
sbb
sahf
mov
dec
push
sbb
push
jle
ficomps
mov
ret
sub
lods
ret
push
cltd
sbb
cmp
rorl
aam
add
lret
out
jb
push
movsb
adc
xor
push
sti
xchg
in
leave
cwtl
ret
mov
dec
cld
outsb
pop
ljmp
scas
sbb
dec
lea
or
int
add
adc
mov
jb
aas
out
and
push
ret
add
aad
push
push
lahf
int3
outsl
adc
sub
lods
xchg
mov
outsl
sbb
jne
jno
fnstsw
pop
scas
mov
cmp
cmpsl
sub
mov
add
rcl
mov
out
roll
insl
ljmp
lock
sbb
popf
daa
and
clc
lock
idivb
cs
or
int3
das
dec
mov
filds
dec
es
lods
unpckhps
sbb
mov
mov
sub
xlat
sarl
loop
sub
xchg
push
call
int3
pop
shll
inc
das
iret
sahf
mov
fdivl
cwtl
test
and
or
outsb
push
jns
rcr
popa
mov
shlb
jnp
fsubl
int
cmpsb
lods
bound
loop
jnp
dec
add
mulb
mov
dec
movsl
in
leave
shlb
in
sub
cmpb
mov
xchg
pop
fwait
push
call
add
jns
jle
mov
in
mov
hlt
cmpsl
mov
loope
jle
out
aam
dec
push
cltd
dec
dec
adc
mov
in
sahf
add
adc
loop
popf
orl
cmc
out
lcall
mov
clc
jbe
sbb
sti
dec
jno
mov
pop
xchg
rclb
movsb
sbb
adc
out
mov
mov
and
push
pusha
sbb
not
rcll
xor
leave
call
test
inc
mov
xor
das
mov
ret
mov
add
cli
push
adc
imul
push
movsb
fistl
cli
mov
cmc
clc
insb
push
data16
out
xor
outsl
mov
sahf
loope
jp
pop
inc
sar
mov
imull
clc
cltd
xlat
pop
movsl
movsl
loopne
dec
clc
pop
rcrl
inc
gs
xorb
into
pop
es
jne
mov
nop
mov
push
mov
movsl
sub
pop
stc
mov
inc
mov
aad
mov
pop
sub
imul
push
fldenv
pop
daa
imul
test
add
outsb
add
mov
adcl
xchg
mov
scas
mov
leave
pop
adc
pop
and
xor
xchg
into
icebp
lods
jp
imul
add
adc
popf
fcoms
and
aam
xchg
mov
jnp
add
call
fbstp
icebp
aaa
cld
jb
add
mov
inc
cld
sub
inc
jb
push
inc
mov
cli
scas
rorb
push
and
jno
rolb
or
cmp
iret
decb
jle
les
pop
sub
add
sub
into
int3
lock
ds
scas
cs
sub
hlt
out
inc
inc
aaa
cmpsb
add
repz
xor
test
outsb
mov
or
cmp
ss
mov
loopne
orb
push
outsl
and
divb
dec
pop
cmpsb
lock
fimuls
sub
jecxz
add
mov
mov
jg
mov
sub
mov
inc
lea
mov
xor
subl
repz
pop
sub
fisttpl
or
loopne
movsl
or
repnz
xchg
mov
mov
call
call
cltd
xor
lret
int3
call
mov
test
repnz
add
ss
sbb
and
adc
xchg
stos
in
jns
sbb
push
pop
sbb
push
adc
ret
mov
cmp
mulb
jmp
andb
mov
jno
loope
adc
outsb
inc
icebp
and
push
or
jecxz
fs
pop
loop
outsl
out
add
push
movsb
les
cmp
in
jb
flds
sti
dec
sub
loope
mov
push
int
push
adc
sub
ss
imul
je
decb
mov
rorl
ret
jnp
cmc
adc
rcrb
sbb
sbb
dec
nop
pop
push
dec
mov
addr16
mov
fistl
daa
inc
xchg
in
mov
pop
out
in
cmpsb
pop
ja
push
adc
stos
mov
sub
mov
mov
cmp
fldcw
mov
aam
in
jnp
popf
pop
orl
loop
addl
xlat
jne
pop
lods
mov
sub
fdivl
sbb
jae
push
mov
sub
popf
aam
and
mov
xor
mov
xor
sub
pushf
mov
cltd
stc
adc
lock
cltd
test
shll
lods
sbb
sbb
inc
test
and
insl
mov
jecxz
dec
and
add
sub
and
cmc
mov
sub
repz
adc
into
shl
pop
cmpsl
nop
imul
push
sub
bswap
enter
jp
fsubrl
inc
mov
pop
popa
or
sub
jg
mov
addr16
sub
inc
sbb
push
rcl
sbb
mov
sbb
popf
nop
and
movsb
lods
lods
pop
je
mov
push
sbb
idivb
xlat
push
divl
int3
jb
xchg
mov
scas
cwtl
imul
sarb
clc
sahf
movsl
imul
inc
test
mov
mov
dec
push
pop
add
shlb
or
clc
and
nop
jae
nop
jle
add
sub
pop
cmp
idivl
lods
sub
pop
icebp
add
bound
mov
add
jg
dec
push
pop
sbb
push
stos
rcll
cmp
xlat
sub
dec
pop
inc
stos
sub
fldcw
pop
fnstsw
push
jbe
xlat
add
mov
jnp
sbb
es
jg
imul
mov
fldenv
mov
mov
inc
es
nop
add
in
ja
cmpsb
or
in
sbb
call
mov
add
xor
fimuls
pushf
hlt
xor
cmp
gs
mov
mov
sub
sarl
mov
xchg
ret
adc
pop
add
jae
or
sahf
dec
fcoms
or
dec
push
lret
movsl
mov
call
aam
sbb
inc
arpl
adc
imulb
jbe
fidivs
jmp
je
pmaxub
scas
or
inc
enter
cmp
mov
xor
insl
adc
lock
mov
pop
mov
test
inc
cli
pop
jge
daa
out
cs
imul
add
xchg
cs
mov
mov
cld
movsb
jns
inc
js
jmp
movsb
icebp
lods
loope
je
pop
sub
and
enter
cmpsl
andb
inc
mov
xchg
sbb
sysret
lods
aas
cmp
and
add
fldt
mov
scas
inc
jbe
xchg
adc
jb
inc
stc
mov
cmpsl
or
lret
and
xor
lods
out
ret
mov
insb
int3
inc
test
mov
imul
xor
xchg
in
xchg
push
dec
xchg
pop
aam
cmp
xchg
jbe
pushf
xor
xor
shr
inc
push
lahf
dec
jmp
flds
ja
aas
add
xchg
or
inc
into
cmp
shlb
sub
push
mov
test
adc
testb
xchg
sub
xor
pop
dec
popf
xor
pop
shlb
pop
es
cmp
mov
adc
jmp
or
stos
push
pop
sbb
push
add
out
mov
shrl
xchg
mov
mov
js
hlt
scas
lock
pop
js
popf
pushf
sub
xlat
fyl2xp1
jmp
cli
cmp
sbb
outsl
mov
push
movsl
int
enter
jbe
in
inc
in
pushf
and
inc
add
cli
in
adc
pop
arpl
jecxz
test
pop
and
in
rcrl
lods
test
das
push
mov
mov
in
xchg
push
pop
fisubs
jbe
add
subb
pushf
push
imul
mov
cli
test
mov
call
xor
enter
aam
daa
jp
or
loope
inc
jbe
data16
xchg
fs
mov
loopne
fs
std
mov
movsb
sbb
stos
addr16
add
dec
insb
movsb
pop
mov
inc
popf
addl
or
out
icebp
adc
shr
leave
sbb
inc
test
call
jne
mov
push
rorb
rcrb
inc
xlat
mov
roll
add
jle
push
ret
jmp
movsb
arpl
stos
cs
xor
clc
orl
xchg
pop
mov
ljmp
jb
and
in
sbb
fisubrl
repz
icebp
scas
xchg
or
orl
fsubl
testl
cmp
mov
lods
pusha
sahf
bnd
push
decb
jge
gs
into
sbb
je
cmp
mov
bound
mov
andb
xlat
inc
xchg
mov
loop
testb
add
pop
fnsave
pop
orb
xchg
jmp
lret
insb
and
xchg
movsb
and
mov
jg
pop
js
cmp
xlat
jle
test
sub
orl
mov
in
dec
in
test
push
xchg
ret
mov
data16
pushf
nop
xor
mov
ljmp
lods
aaa
cli
or
lret
out
orb
in
cmp
jo
sbb
pop
cli
loop
cmp
and
sti
fwait
stc
aad
pusha
xor
fisubl
mov
aaa
out
test
test
mov
push
test
into
pop
test
ja
sub
mov
push
cwtl
cli
mov
insl
push
lret
lock
inc
mov
and
mov
movsb
loopne
dec
jge
cmp
adc
pop
pop
out
mov
push
imul
clc
sbb
dec
and
inc
xlat
mov
lods
mov
pop
push
outsl
mov
movsl
cwtl
mov
fbld
or
xchg
mov
adc
loop
rcll
adc
test
xchg
nop
cmp
xor
sahf
cmp
scas
cmp
call
push
lds
pop
data16
ss
jmp
jl
cmp
inc
mov
and
xchg
mov
lahf
push
cmp
adc
jp
or
sbb
mov
mov
shll
fnsave
rcrb
dec
enter
iret
push
mov
call
adc
xlat
mov
mov
sub
addr16
jb
popa
in
push
and
fdivs
aas
or
mov
sbb
fldl
imul
adc
jp
sub
int
into
fs
xchg
into
sbb
insl
icebp
pop
je
sub
inc
out
and
mov
add
outsl
xor
sub
dec
pop
fwait
shll
rclb
out
xor
in
les
sahf
inc
xchg
out
pop
xchg
jmp
sub
xchg
subl
imul
aad
push
sti
jns
out
leave
xchg
sbb
dec
cmp
and
arpl
fwait
insb
fidivrs
jmp
cmp
subb
mov
scas
cmp
jo
pop
push
es
ss
call
inc
and
orb
arpl
mov
jbe
jnp
sbb
mov
subl
andl
call
mov
pop
test
arpl
add
jno
dec
ret
mov
clc
inc
lret
popf
outsb
out
cmpsl
mov
lret
mov
sbb
test
enter
test
push
xchg
push
lahf
sub
cmp
inc
popf
add
or
arpl
cli
sub
push
pop
loopne
ds
dec
jecxz
outsl
dec
cmpsl
xchg
dec
lods
adc
dec
icebp
aad
push
sbb
scas
adc
jmp
adc
les
jno
mov
mov
int
or
mov
repz
jns
lcall
outsb
sub
cmp
pop
clc
inc
or
adc
mov
adc
push
fildll
lock
outsl
fcoms
push
cwtl
xor
fistl
and
xchg
sti
pop
mov
ljmp
shll
insl
jle
jp
aas
xchg
pop
cmp
clc
ljmp
mov
aaa
mov
dec
push
push
mov
mov
scas
push
push
add
xchg
int
repnz
filds
cld
push
and
flds
or
push
int
adc
push
and
dec
pop
and
cmp
movsl
mov
addb
mov
cmpsl
daa
adc
dec
test
insl
xor
lods
xchg
jno
data16
jp
jle
rorb
in
ficoml
or
jae
imul
leave
xchg
pushf
clc
arpl
repnz
fwait
ljmp
dec
dec
mov
cltd
or
xchg
movsb
movsl
addl
shlb
rclb
xlat
xchg
add
divb
xchg
inc
pop
inc
push
adc
sahf
insl
lods
mulb
mov
fstps
sbb
xor
mov
add
scas
fidivl
cmpsl
push
mov
pop
pop
out
sub
xchg
cmp
and
outsb
daa
add
out
mov
mov
out
pop
cmp
adc
pushf
rcrl
pop
cmp
ja
jne
pop
sbb
inc
and
ror
or
out
cmp
outsb
mov
mov
fildl
scas
push
mov
pushf
filds
pop
stc
xor
call
es
inc
lea
scas
mov
jo
or
and
lea
mov
fcmovu
inc
sub
jo
bound
pop
pop
xor
stos
nop
ret
cwtl
cmpsl
insb
shll
ret
repz
gs
and
mov
push
cli
ret
dec
les
and
sbb
mov
jge
xor
in
shl
fadds
lods
test
lds
cmp
aam
mov
push
lea
add
dec
xlat
cmp
cmp
fwait
scas
int3
dec
outsb
fcompl
lods
sub
insb
arpl
addl
jecxz
ja
lods
pop
sub
nop
icebp
xorl
dec
pop
loope
repz
movsb
inc
inc
push
cmp
sbb
jecxz
add
adc
in
sub
xor
adcl
lcall
add
pop
lods
dec
mov
out
jle
dec
out
sbbb
sub
adc
adc
aas
std
xor
sbb
xorl
rclb
movsb
xor
adc
jbe
pushf
js
mov
adc
push
jno
loopne
or
jle
cmp
das
mov
sub
dec
hlt
jmp
add
popf
mov
test
adc
mov
out
mov
push
inc
and
and
leave
mov
lea
fiaddl
fbstp
cwtl
das
out
jl
xchg
adc
sarb
subb
movl
xchg
sub
test
pavgw
ret
jnp,pn
xchg
enter
fcoms
and
xchg
es
xor
int3
ljmp
jb
into
repz
cmp
sahf
mov
mov
das
adc
in
cmp
daa
inc
mov
out
jnp
cmp
sbb
andl
out
lcall
mov
mov
lret
enter
dec
inc
and
outsl
ljmp
or
xchg
mov
cmp
decb
mov
movsb
andb
push
pusha
lods
or
pop
adc
mov
mov
imul
shll
mov
cld
jae
or
rclb
lret
les
push
mov
out
scas
lret
or
out
outsl
fwait
movsl
lahf
aaa
mov
leave
adc
add
cmp
aad
inc
aaa
cmp
mov
stos
mov
out
sahf
mov
xchg
jne
push
daa
xchg
in
push
jno
mov
sbb
imul
es
cmp
aad
jl
nop
jl
adc
push
lock
inc
into
mov
out
mov
clc
xchg
push
aaa
test
adc
mov
data16
push
cmpsl
cs
pop
cmp
sub
fbstp
test
lahf
ds
test
inc
out
fs
lcall
inc
fcomp
test
mov
push
repz
aam
in
lret
mov
mov
xchg
ja
mov
cmp
out
jg
jbe
daa
lret
das
shll
popf
pusha
icebp
mov
cmc
xchg
xchg
mov
push
dec
pop
rcll
movsb
dec
jecxz
filds
fistpl
inc
call
xor
idiv
out
xchg
dec
sbb
lea
movsb
pop
fs
cmp
je
xor
sub
mov
scas
sub
xor
fistps
mov
push
icebp
test
repnz
subb
and
jg
fists
or
dec
hlt
or
hlt
add
jge
pusha
jp
jg
cmpsl
rclb
out
lret
dec
scas
nop
lods
out
push
xchg
call
repz
loop
mov
jno
cmpsl
insb
pop
iret
js
pop
loopne
dec
ljmp
jo
scas
ret
pop
ficomps
add
xor
and
mov
add
mov
mov
repz
add
out
dec
leave
lock
scas
lods
sbb
push
jmp
imul
loop
dec
push
sbb
repz
xchg
aam
repnz
lds
out
outsb
cmc
lret
ljmp
and
idiv
decl
subl
push
ret
out
inc
in
stos
or
mov
cmp
ljmp
in
icebp
icebp
jo
or
aas
fistpll
mov
xchg
les
xor
fstl
pop
imul
mov
leave
insb
icebp
cmc
mov
popa
fdivr
mov
mov
adc
je
int3
push
pushf
or
aaa
ds
sub
mov
xchg
leave
out
and
add
loop
sbb
sub
push
jo
sahf
popf
push
popa
loop
or
jle
or
icebp
mov
mulb
mov
jp
push
icebp
adc
insb
lahf
out
sub
pop
data16
mov
mov
scas
xchg
sub
leave
rolb
dec
pop
jo
lcall
std
mov
xor
pop
dec
and
and
mov
shr
and
or
sbb
mov
shlb
test
ret
outsl
lcall
mov
js
dec
mov
cmc
or
or
dec
push
imul
lret
lock
insb
lock
jmp
cltd
dec
aad
dec
and
lret
ret
cld
pop
out
arpl
lahf
dec
xorl
leave
xor
into
add
add
push
mov
add
shlb
xchg
adc
aad
addr16
jae
mov
imul
in
sbb
movsb
outsl
lret
push
ljmp
mov
xchg
and
repz
xorl
fisttpll
rorb
pop
add
data16
mov
stos
mov
and
loope
cwtl
test
cmp
ss
and
sbb
jle
xor
xchg
push
mov
orb
add
in
std
popf
movsl
mov
sarl
leave
pop
cli
sub
mov
mov
cmp
ficomps
fdivrs
jb
popf
push
gs
stc
cmp
jg
mov
add
sbb
loope
mov
dec
rorb
cmp
andl
or
fidivrl
inc
shll
or
mov
add
iret
adcb
rorb
and
flds
push
jo
mov
inc
adc
sub
jecxz
or
jno
fisubl
clc
lds
xchg
push
sub
mov
enter
xor
aaa
cmpb
fisubrl
jmp
mov
nop
and
xchg
inc
mov
inc
test
mov
jo
xchg
cmp
mov
aad
shrb
shll
lods
pop
cmp
jl
aad
mov
dec
out
sub
or
mov
sub
xchg
shrb
adc
clc
cmp
into
call
sahf
imul
or
imul
push
mov
push
dec
sbb
mov
test
inc
or
adc
hlt
movsl
dec
push
es
popf
adc
xchg
jae
arpl
shrb
gs
mov
push
push
inc
outsl
xlat
shll
outsl
in
xchg
jge
mov
loope
fidivs
out
in
das
fcmovne
mull
mov
out
adc
repnz
test
push
mov
xchg
add
adc
xor
movsl
insb
daa
mov
sbb
adc
adc
sbb
hlt
xchg
adc
cmp
sarl
mov
lods
scas
or
and
dec
in
into
out
jle
repz
insl
test
dec
mov
xchg
or
push
fs
cmp
mov
in
sbb
outsb
clc
dec
repz
pop
sbb
mov
and
orl
ja
cmp
dec
jno
std
jle
fsubr
js
mov
mov
outsl
out
loope
mov
cmp
scas
mov
cmpsb
or
fisubl
into
or
dec
push
mov
add
adc
rolb
std
or
xchg
xchg
sub
call
add
scas
sahf
stos
add
fnstsw
leave
cli
lcall
adc
xorl
dec
pop
rcrb
xor
outsl
cwtl
push
and
das
hlt
test
adc
xchg
ret
push
test
adc
lret
mov
mov
jns
lret
mov
push
in
insb
scas
sti
mov
ss
inc
cmp
pop
push
subb
inc
mov
mov
add
stos
cmp
mov
in
jae
orb
inc
xchg
outsb
sahf
mov
clc
sub
xor
xor
xor
lahf
fistpll
and
jo
lret
nop
adc
ja
lret
stos
sahf
mov
xor
fucomp
inc
sbb
inc
jle
aam
jp
push
pop
jno
mov
arpl
and
test
addr16
adc
cld
or
sbb
out
push
out
div
sub
js
mov
pusha
pop
mov
mov
out
push
push
sub
xchg
repnz
ret
loope
ss
jecxz
js
cmc
aam
add
leave
inc
fnstenv
or
mov
xchg
cli
cmp
push
add
cmp
test
sbb
repnz
jecxz
cmp
shl
mov
add
xchg
gs
mov
les
js
cmpsl
out
add
lods
push
xchg
out
movsb
jmp
je
bound
loopne
fidivl
lahf
push
sub
jns
outsb
outsb
mov
pushf
push
in
ja
dec
fisubrl
lds
dec
add
add
mov
aas
ds
add
scas
cmp
fisttps
nop
iret
cs
push
pop
enter
jecxz
ss
leave
fnstenv
push
or
jmp
jo
jg
icebp
push
and
in
insl
push
and
and
mov
rorl
pushl
es
xchg
shl
aad
insl
loope
repz
add
mov
out
xor
mov
fstps
pusha
mov
mov
loop
ss
lods
mov
sbb
dec
inc
mov
hlt
mov
cli
lret
adc
out
cmp
stc
jb
insl
sub
and
fistps
dec
test
jnp
popf
mov
sbb
jbe
dec
icebp
cmp
loopne
fsub
push
add
ret
sbb
adc
add
lea
mov
jae
test
sub
lret
maskmovq
idivl
lcall
repz
push
mov
hlt
mov
jne
pop
ja
jp
and
fdivs
js
push
dec
cmp
sbbl
mov
pushf
arpl
pop
add
cmc
lock
in
int3
rolb
xchg
jp
add
cwtl
ret
lds
lods
pop
xchg
pop
test
sahf
mov
jle
pop
insb
out
push
mov
jle
pushf
fmuls
or
int
scas
pop
mov
lods
fisttpl
fcomip
xor
sub
sub
loop
sahf
pop
jmp
sbb
cmpsl
mov
mov
pop
adc
fcom
jb
cmp
popf
add
xchg
pminub
fildl
jb
nop
mul
or
in
in
sbb
out
xor
adc
xor
adc
add
mov
add
fcmovnb
idivb
shll
mull
arpl
insl
or
rcl
aas
pop
popa
dec
loopne
call
xor
loope
mov
or
fdivs
movsl
jmp
fstl
add
lahf
fwait
rcl
fldz
fiadds
clc
das
pop
lahf
xchg
int
xchg
fimull
jmp
push
mov
mov
cs
ret
push
jg
mov
in
mov
ror
pop
jmp
loopne
fcmove
in
and
sub
cmpsl
dec
push
rcrl
lods
push
xor
lods
addb
pop
cs
jno
jge
and
or
sarb
sti
sbb
stos
xor
cmp
cwtl
cmp
add
xchg
loop
mov
ret
jne
jmp
lods
nop
cmp
mov
cmc
sub
fs
adc
ss
dec
out
les
aas
cs
push
cltd
cmpsb
inc
es
lods
mov
mov
movsl
push
xor
mov
pop
cwtl
inc
and
pop
scas
jecxz
push
push
xor
dec
movsl
pop
out
lcall
or
icebp
mov
loop
scas
repz
das
repnz
sbb
movsl
pop
call
xor
mov
lcall
out
mov
mov
imul
mov
cmp
xor
push
jle
inc
out
sbb
push
mov
test
sahf
mov
outsl
mov
xchg
in
out
div
adc
mov
sbb
add
cmp
xchg
dec
xor
cmpsl
insl
dec
aad
fists
popa
adc
pop
stos
loope
xchg
adc
out
push
lcall
pop
je
fists
mov
std
xor
or
push
sbb
push
sar
pushf
xchg
in
loop
adcb
iret
imul
push
pop
test
add
jl
lcall
aaa
jl
cmp
loope
xchg
arpl
sub
fidivrs
jmp
ds
outsw
push
imul
jns
mov
inc
lahf
pop
sub
jecxz
cmp
pop
pop
mov
negb
add
push
mov
xlat
fdivp
mov
sarb
pop
lea
enter
loope
bound
mov
shrb
es
xorl
movsl
cwtl
bnd
jo
js
punpcklwd
adc
pop
repnz
fimull
xchg
clc
jle
lock
test
stos
mov
jg
lea
and
adcb
lret
in
jmp
loop
movsl
sbb
jmp
sub
xor
shrb
ljmp
lods
and
pop
pop
out
and
adc
mov
int
mov
pop
iret
sub
mov
ret
mov
sub
lods
ficomps
loopne
adc
lock
in
in
inc
mov
xor
in
cs
int3
fistpll
into
inc
test
mov
mov
cmc
jne
fnstsw
pushf
pop
mov
pushf
test
repnz
andl
xchg
iret
std
xor
subb
arpl
xchg
int
pop
pop
mov
mov
les
cmc
in
popl
pusha
dec
or
xchg
inc
lea
xchg
cmp
mov
adc
fists
inc
insb
imul
out
jg
in
sbb
ret
mov
cvtps2pd
add
xchg
fimull
pop
xchg
cmp
insb
mov
jno
movsb
jmp
mov
decl
jge
mov
testl
sub
out
push
sbb
enter
xor
push
cmp
mov
push
mov
lcall
ljmp
arpl
mov
lds
movsb
jl
ds
xchg
sub
mov
xorb
jle
jg
lret
cs
add
shrb
cmc
lods
inc
and
mov
mov
iret
push
adc
clc
inc
lds
fdivl
mov
pop
in
cld
nop
js
push
xchg
loope
out
insl
cmp
mov
scas
shll
cmp
scas
push
scas
xchg
mov
mov
mov
rolb
xchg
sbb
pop
push
pop
mov
mov
xchg
test
js
pop
pop
sub
rolb
cmp
cmp
popf
inc
in
sti
mov
outsb
pushf
ret
lahf
loope
pushf
shl
stos
jno
add
stos
lret
sbb
rcll
push
adc
sub
mov
stos
push
inc
test
mov
rolb
xchg
fs
add
icebp
lods
sbb
xor
cmc
rcl
sub
inc
pop
sub
and
into
icebp
enter
ret
jge
push
mov
inc
jbe
insb
fadds
cs
pop
or
ss
push
into
gs
test
dec
xchg
ret
jl
cltd
or
mov
scas
addb
sub
push
xchg
sub
sahf
jnp
lods
cmp
mov
push
push
shlb
adc
hlt
mov
out
push
into
dec
mov
testb
sbb
enter
xlat
lcall
leave
jmp
add
les
into
cmc
push
inc
inc
stos
pop
test
out
dec
add
pop
incl
daa
sub
pop
and
mov
dec
shlb
xor
mov
mov
outsl
xor
sub
aaa
loope
pop
sub
lock
xor
jmp
cmp
dec
jne
push
inc
mov
jae
adc
ds
mov
in
xor
outsb
jae
idivl
cltd
push
test
in
xchg
aad
nop
in
push
cld
sbb
push
push
jmp
les
iret
mov
push
insl
add
insl
mov
dec
xchg
sbb
shll
fsts
ja
movsb
movsl
leave
adc
loop
pop
inc
and
out
xchg
sbb
jbe
repz
mov
mov
push
cmp
test
cltd
jne
out
iret
mov
filds
flds
cld
dec
jg
jno
push
sub
sbb
pop
insl
out
adc
fs
in
pushf
sbb
outsb
adc
and
dec
xchg
pusha
jge
data16
push
shr
jo
pop
cmp
add
push
pop
aaa
cld
inc
or
sbb
push
pop
jge
sub
lods
jg
fisttpll
pop
jo
out
mov
mov
ret
int3
add
outsb
push
xchg
cmpsb
cs
mov
add
cmp
or
jns
fmul
adc
imul
xor
xorb
adc
in
ret
jge
rcr
ret
dec
or
lods
and
inc
xorl
dec
loope
add
inc
jno
fistpl
push
xor
lock
into
add
and
nop
das
sti
mov
mov
push
mov
lods
mov
stos
or
clc
ret
aad
rol
xchg
clc
arpl
push
inc
insl
sbb
mov
mov
mov
arpl
pavgw
add
mov
popf
cwtl
imul
rcrb
mov
repnz
cwtl
mov
mov
jecxz
mov
xchg
dec
in
jmp
or
fs
inc
mov
mov
je
ljmp
fwait
packsswb
test
stc
jo
sbbb
mov
out
mov
aas
fdivl
js
das
push
nop
addb
pop
mov
cmp
sbb
jg
cmp
mov
mov
pushf
mov
and
mov
fistpll
shlb
adc
nop
mov
aam
frstor
ja
push
mov
roll
repz
sbb
movsl
shll
in
popa
imul
xchg
inc
insl
adc
test
fs
pop
xchg
ss
repz
xor
dec
insl
inc
pushf
inc
fnsave
mov
mov
inc
jnp
push
inc
sbb
pushf
ret
cmp
cmp
lahf
stos
enter
adc
xchg
iret
push
lret
mul
or
ss
and
push
add
test
pushf
popa
cmp
pop
rorb
xor
mov
push
das
adc
push
pop
mov
cmpsb
add
das
das
ficoms
xchg
jmp
xchg
and
int3
repz
mov
add
cli
xor
shrb
mov
push
ds
or
pop
or
repnz
jle
stos
lret
mov
pushw
push
adc
scas
sub
loope
xor
insb
stc
lcall
xor
sbbb
or
iret
sbb
test
scas
in
fmull
mov
sub
and
jecxz
jl
xor
adc
push
movsl
sbb
and
insl
aam
je
out
mov
sub
in
xchg
int
pop
sbb
ja
call
cli
ja
sarb
sbb
inc
mov
gs
fnstsw
mov
popl
jg
jnp
jp
mov
ret
push
test
subl
dec
xor
push
ljmp
cmp
out
loopne
les
dec
push
mov
outsl
nop
and
in
or
fwait
dec
adcb
aaa
fdivs
xchg
aaa
imul
dec
addl
rcrl
in
mov
in
cmpb
movsl
mov
shlb
xchg
xchg
loopne
pop
jbe
push
mov
or
movsl
call
pop
or
jb
jecxz
cwtl
stos
cmpsb
inc
fnstcw
xchg
sub
testl
loop
pop
or
rcr
icebp
frstor
insb
xchg
jmp
cltd
dec
lcall
mov
sbb
mov
lods
loope
ja
mov
aam
pop
cmp
sub
jno
test
in
and
mov
pop
lret
jnp
xor
jbe
leave
in
dec
aas
or
and
pop
pop
loopne
push
lret
mov
repz
mov
je
shrb
mov
js
cmp
movb
test
adc
mov
sbb
mov
push
popa
iret
mov
adc
or
mov
add
test
or
sub
jbe
lock
clc
icebp
div
inc
sbb
vorps
jle
pop
pop
add
je
sbb
cmp
push
imul
nop
out
and
loope
xchg
dec
sarb
sub
dec
sub
or
jp
daa
test
rorb
jo
xor
pop
jno
xor
dec
mov
ss
mov
inc
xchg
rcl
xchg
aad
fwait
jae
icebp
mov
data16
iret
jecxz
aas
orl
outsl
test
xor
notl
pop
push
cmp
andb
cmpl
imul
lahf
add
jae
mov
cmpsb
cwtl
bound
stc
hlt
loopne
mov
mov
add
pop
fisttpll
pop
lea
xchg
pop
jno
jno
fildll
enter
mov
xchg
cmp
insl
movsl
mov
xchg
jge
pop
cs
rcll
faddl
adc
cmp
mov
xor
ret
cli
sub
xchg
lds
les
imul
mov
test
shr
stos
lods
mov
adc
jno
aas
push
push
cs
sbb
xchg
stos
mov
and
es
ffree
xchg
dec
fiaddl
imul
pop
pop
push
lea
lods
fldl
inc
lret
jns
loope
stos
sub
daa
adc
dec
dec
out
test
jno
dec
loopne
enter
adc
inc
add
mov
xchg
bound
int3
icebp
lahf
and
fistpl
inc
out
jb
sub
mov
lods
flds
int3
inc
imul
jecxz
pop
daa
fldz
dec
hlt
push
xchg
cmp
or
in
push
push
lcall
push
cwtl
cmc
out
fidivs
mov
xor
data16
push
pop
mov
push
xchg
sub
inc
and
cmp
lret
dec
or
ret
mov
jb
inc
stos
iret
push
dec
cli
inc
sbb
cmp
pop
jo
pop
push
jl
mov
dec
sub
subb
mov
outsb
outsb
repz
cld
jmp
icebp
loopne
sub
scas
jmp
orb
repz
int
cmpsb
cli
add
icebp
mov
sub
int3
fs
adc
and
xchg
outsl
aam
jmp
jp
lret
sbb
dec
aad
push
inc
push
push
xchg
hlt
dec
out
jbe
rcrb
nop
jb
jecxz
and
mov
push
cmpsl
add
outsb
ds
sub
jle
dec
scas
pushf
jne
push
pop
fwait
jl
ret
sbb
push
mov
add
je
xor
jg
ffree
cltd
or
addr16
arpl
xor
sti
pop
pushf
xchg
push
mov
mov
js
adc
out
fistpl
enter
pop
adc
mov
sarl
add
jbe
cltd
je
cmp
mov
xlat
pop
cmpsl
jge
jp
dec
test
lea
lock
leave
push
mov
hlt
jmp
sub
sub
mov
aaa
pop
test
adc
lret
leave
in
pop
ret
subl
mov
fisttps
es
cmp
fsubrl
aam
or
xlat
mov
scas
jp
fidivs
icebp
xor
mov
loope
popa
rorl
or
mov
add
lcall
xor
sbb
stos
bound
ja
and
xchg
mov
inc
out
or
aam
out
je
mov
sbb
xchg
push
adc
out
inc
push
dec
adc
ret
imul
andl
inc
sbb
test
iret
jnp
pop
insb
sbb
mov
mov
outsb
dec
mov
test
aad
imul
stos
and
jecxz
push
xor
jge
lahf
jns
xchg
lret
aam
pop
test
cmp
fisubl
adc
or
andl
repnz
ds
and
push
fisttps
xor
mov
jge
jg
adc
dec
loopne
imull
jbe
cmp
adc
or
sub
jle
sti
and
jne
xor
psubusw
repz
pop
push
mov
arpl
neg
repz
mov
mov
jmp
out
popa
les
add
dec
cwtl
or
imull
lret
adc
inc
mov
add
mov
les
jl
lods
loope
cltd
and
scas
gs
lret
cmp
iret
push
addr16
or
pop
or
std
loopne
ret
and
int3
cwtl
and
inc
mov
jns
pop
xchg
inc
sub
daa
movsb
aam
mov
jns
fnstsw
xor
push
pusha
push
idivb
sbb
mov
mov
dec
sub
aaa
sahf
and
add
pushl
shrb
sbb
jno
int3
dec
dec
cld
xchg
xor
aad
cmp
popf
mov
cmpsl
test
subb
sahf
jns
idivb
test
mov
loop
clc
jle
enter
hlt
cli
out
inc
shrl
cmpsl
jge
xor
shlb
call
rcl
inc
and
mov
rolb
cmp
mov
lods
sub
inc
and
inc
inc
popf
pop
adc
inc
ss
dec
add
jecxz
int
push
lea
mov
imul
push
and
xchg
dec
mov
mov
cmc
jbe
imul
popa
adc
mov
loop
sub
dec
fidivrl
pop
lret
lea
inc
repz
xor
jle
pushf
mov
mov
les
cmp
imul
pop
mov
cmp
out
pop
mov
in
mov
int
sub
and
aam
pusha
sbb
mov
movsb
dec
sarl
and
mov
decl
popf
dec
pushf
daa
loope
bound
sbb
jg
daa
in
add
mov
shrl
add
loopne
fisttpl
adc
test
fcmovnb
psrlw
mov
add
pushw
adcl
add
xor
pusha
je
or
and
repz
ds
sub
xchg
pusha
cwtl
in
mov
dec
dec
jmp
cmc
lods
cltd
dec
rorb
jg
push
sub
jge
mov
inc
mov
dec
jno
lcall
cmp
jle
loopne
jle
pop
xchg
jge
inc
out
sti
mov
mov
dec
pop
jl
sub
jmp
push
test
cli
je
pop
xchg
mov
xchg
xchg
pop
inc
dec
aaa
push
xchg
popa
mov
cld
lods
out
sub
cmp
xor
ret
in
roll
xchg
leave
and
cmp
cmp
mov
ja
pop
fisttpl
fs
cmp
pop
fstps
adc
ret
sbb
sti
test
sub
roll
test
dec
fisubl
aad
je
inc
jae
jns
mov
jmp
lods
popa
jne
out
insb
mov
es
out
xchg
imul
xchg
std
xor
popa
cmp
sarb
push
xor
add
aas
nop
mov
add
push
pop
ficoms
test
nop
jg
cmpl
cwtl
fwait
adcb
popf
jns
stc
fbld
adc
mov
ret
cmpsl
aad
xchg
jnp
and
lcall
pop
cltd
ds
js
popa
mov
aam
pop
mov
rolb
lods
rcr
std
xlat
xor
dec
shl
sbb
inc
scas
pop
popa
shlb
mov
xor
xchg
js
hlt
das
pop
ficoml
cmp
and
pop
inc
arpl
or
lods
cmpsl
add
ret
sahf
hlt
fisttps
roll
mov
mov
mov
inc
test
jecxz
dec
rcrb
adcl
adc
out
lods
int
arpl
cmp
cmp
hlt
cmc
or
lods
addb
lret
xchg
iret
push
mov
fwait
popl
pop
es
lds
inc
sbb
push
int
cld
les
mov
movsb
mov
adc
lea
adc
dec
mov
mov
xchg
xor
adc
cld
movsb
xchg
cli
pop
aam
dec
lahf
ret
inc
xchg
insl
insl
popf
iret
int3
pop
adc
and
xchg
int
mov
fisttpl
or
jmp
inc
pop
mov
xchg
out
imul
xchg
pusha
sbb
xor
ret
or
and
jnp
stc
xchg
sbb
cwtl
sarl
mov
sahf
dec
pop
loop
leave
test
stc
insb
lret
rclb
jne
push
lock
repz
mov
and
cwtl
into
lods
js
clc
lods
cli
popa
push
int
mov
in
xor
jg
insl
xchg
popa
inc
mov
adc
int
cmp
jl
cmpsl
push
push
xor
loope
mov
mov
sti
xchg
mov
or
adc
das
add
dec
stos
mov
jae
jae
movsb
push
inc
fisttpl
sbb
pop
insb
xor
jg
add
jmp
push
and
lock
mov
sub
in
jne
sub
pusha
inc
popf
dec
hlt
inc
daa
sbb
test
lcall
fdivrl
std
leave
xor
test
adc
fldcw
or
xchg
sub
cld
mov
pop
call
lret
adc
push
into
loopne
pop
mov
int
scas
adc
pop
cmc
outsb
rcl
cwtl
add
jne
inc
xor
fwait
mov
dec
dec
js
xchg
jno
adc
push
mov
pop
adc
pop
jb
adcb
sbb
aad
es
adc
jp
lahf
ret
call
xchg
mov
es
fnstsw
and
repnz
and
jecxz
dec
push
push
or
movb
fcmovnbe
mov
sbb
cld
aam
jne
lcall
mov
pusha
and
mov
jno
call
push
sti
push
sti
xchg
or
dec
lock
pop
xor
aaa
sbb
mov
mov
add
nopl
jge
pop
and
fldl
mov
sbb
decl
andl
cmpsl
adc
jecxz
xorb
das
mov
cli
stos
xchg
mov
out
shlb
dec
test
mov
mov
loopne
push
sub
xor
hlt
imul
popa
jge
lds
xchg
sbb
cmpsl
in
aas
scas
cmp
lret
xor
jnp
testl
jno
rolb
ret
push
loope
jo
pop
test
fdivrl
mov
fwait
insl
cmp
xchg
xchg
inc
aaa
or
xorl
xor
cmp
mov
mov
shrb
adc
inc
adc
dec
out
inc
sub
ret
pop
mov
lock
sub
sbb
inc
int
mov
cmp
lock
push
jle
xchg
add
xorl
sub
fldenv
jle
ljmp
daa
pusha
jae
nop
mov
loop
jmp
pop
add
sbb
fcompl
into
repnz
push
xor
jg
xlat
inc
fsubr
dec
mov
adc
movsl
inc
xchg
cli
sbb
insb
int3
jmp
add
and
sub
jecxz
inc
shrd
ret
dec
xor
push
inc
mov
fsubl
push
dec
inc
xchg
imul
pop
jg
fildl
xchg
sub
sbb
jg
cld
pop
rorl
add
shrb
hlt
ficompl
lods
pop
cmp
mov
pop
push
repnz
arpl
sub
cltd
ds
cmpb
pop
js
or
pop
fwait
xchg
adc
push
lods
shlb
decl
jbe
xchg
je
mov
xchg
outsl
push
cmp
stos
cli
jbe
aaa
and
pop
lret
sti
cltd
sub
xor
or
cmp
adc
mov
cmp
idiv
addb
and
addb
and
subl
push
outsl
jle
xchg
sbb
sti
mov
xchg
sbb
jbe
mov
push
inc
fcomi
neg
inc
mov
rclb
push
xchg
inc
out
add
stos
add
jb
in
cmp
push
sub
enter
pop
inc
fcmovnb
adc
gs
mov
mov
mov
rorb
test
mov
imul
loopne
shr
push
pusha
das
jno
add
mov
es
inc
jne
mov
xchg
pop
movsb
xchg
sub
inc
sbb
out
xor
and
pusha
aaa
sub
xchg
pop
sahf
jne
xchg
repnz
push
pusha
and
mov
hlt
push
adc
aas
lea
xor
inc
cs
sahf
adc
sbb
stos
aaa
push
dec
xchg
out
fsubl
out
test
loopne
sub
xlat
fs
sbb
mov
cld
mov
xchg
scas
jp
out
loope
adc
add
adc
push
mov
mov
test
outsl
adc
push
mov
pop
lea
mov
inc
ljmp
int
push
push
or
call
cvtps2pi
es
pop
xor
rclb
dec
rclb
add
fidivl
in
addr16
in
movsb
inc
push
sub
xor
push
and
and
jbe
xor
popa
push
cmp
lock
call
xorl
pop
shll
or
cmp
outsl
inc
xor
inc
ss
or
insl
dec
mov
cmp
les
xor
jmp
cmp
iret
and
mov
inc
fsubrs
lods
dec
repnz
int3
sub
push
rclb
lods
push
out
fisttps
push
gs
and
and
jp
sbb
xlat
shl
movsb
ret
call
mov
pop
xor
inc
or
scas
test
or
xor
ror
jge
dec
mov
loopne
test
add
iret
je
test
mov
push
js
cs
lret
sub
cmp
rolb
adc
faddl
ljmp
aas
rcl
xchg
mov
xor
call
je
mov
xor
enter
add
notl
xchg
xchg
int
sahf
sbb
ljmp
movsb
sub
cmpsl
or
imul
popa
icebp
and
out
sbb
sub
imul
gs
xchg
aaa
loope
hlt
nop
fcomi
fidivrs
xor
dec
lods
addr16
mov
pop
jmp
out
sbb
dec
xchg
ja
sub
ds
adc
insb
and
adc
adc
scas
int3
incb
push
repnz
sub
out
arpl
pop
mov
inc
push
or
and
hlt
sar
push
cld
loop
fwait
pop
mov
fistl
cmp
mov
negl
xor
movsb
in
jb
xor
mov
repz
push
je
subl
sbb
xchg
shll
adc
mov
mov
daa
or
cs
lret
lahf
push
dec
mov
test
add
xchg
stos
sbb
jnp
aad
test
add
lcall
das
pusha
nop
in
cwtl
xor
push
cmp
add
add
aad
insl
mov
imul
test
test
scas
jno
lcall
negl
std
cltd
addb
cwtl
repnz
out
inc
mov
das
fisttps
sbbl
inc
and
dec
call
scas
push
mov
jbe
adc
leave
roll
xor
xchg
pop
icebp
test
divl
punpckhbw
int
and
inc
jne
call
jp
mov
nop
or
ds
mov
outsl
jmp
add
inc
in
out
cmp
pop
dec
gs
adc
adc
or
jnp
popf
cmp
pop
cs
mov
stos
pop
fisttpl
push
out
inc
add
xchg
jns
mov
dec
outsb
adc
pop
or
negl
iret
pop
fisubl
xchg
push
outsl
clc
pop
adc
adc
popa
pop
movsb
push
mov
mov
push
mov
pop
inc
and
sbb
mov
cld
sbb
out
int3
fldl
popa
jmp
adc
inc
cld
cld
ljmp
mov
movsb
pop
sbb
shlb
mov
push
dec
test
add
or
in
push
cmp
popa
scas
pop
jg
lahf
add
scas
mov
cmp
stos
jae
insb
add
sub
dec
outsl
sub
dec
push
or
inc
aaa
adc
and
inc
enter
or
inc
dec
fstl
imul
out
cmp
lds
mov
jb
hlt
cmp
xor
inc
out
out
dec
sub
mov
ljmp
dec
ja
mov
pop
out
xchg
bound
push
arpl
pop
lods
jge
psadbw
movsl
add
addl
xor
hlt
mov
jg
and
call
add
push
loopne
insb
lds
xchg
or
inc
lods
stos
pop
stos
xchg
sub
xchg
ret
cmc
ja
std
ja
jno
dec
xchg
es
repz
sbb
add
lahf
pop
or
jo
pop
inc
movb
jge
xchg
inc
cmp
mov
cli
lret
mov
pop
adc
imul
cmp
std
adc
inc
mov
mov
out
fnstsw
pop
shl
mov
cmp
repnz
outsb
cld
xorl
lods
dec
dec
arpl
xor
jge
insb
and
jno
jmp
daa
dec
xchg
es
or
clc
cs
icebp
push
or
repz
sub
sbb
inc
adc
popf
jl
push
movsb
jl
in
or
push
cmp
stos
inc
adc
sbb
jns
stos
sub
push
jecxz
jp
stc
jb
sub
xor
rorl
shll
or
jle
and
loopne
push
cltd
imul
imul
mov
sub
pop
jae
xor
cmp
aas
dec
pusha
loopne
jo
nop
nop
repz
ficoml
push
subb
fsubrp
fs
cwtl
cld
pop
rcrl
loop
jns
fs
xchg
jge
push
jno
aam
fs
insl
ljmp
jmp
dec
jmp
push
addr16
dec
add
ret
pop
xor
mov
shrl
add
adc
jae
jae
push
xor
hlt
fistpl
mov
ljmp
pop
fucomip
insb
mov
mov
cmp
pop
pusha
pop
fcoms
rcll
xor
push
aam
ret
xchg
fisubs
xorl
mov
jbe
jo
and
dec
push
btr
jns
mov
xlat
movsl
or
xor
mov
in
xchg
lds
out
je
pop
cmc
mov
mov
gs
add
xor
outsb
inc
std
sub
ret
xlat
jbe
hlt
orb
test
lcall
cmp
outsb
testb
in
sub
movsb
pushf
dec
stos
push
jnp
mov
stc
sub
jbe
pop
cmp
jmp
push
xchg
push
and
sub
or
in
push
out
loopne
xchg
or
lret
pop
mov
lea
push
inc
pop
jl
xchg
pop
insl
xor
jno
sub
fcoml
scas
xchg
xchg
cmp
movb
cmc
mov
cs
or
fwait
rcr
ss
push
xchg
repz
cmp
ss
ds
pushf
outsl
dec
mov
lcall
in
or
imul
insl
xchg
clc
das
inc
aaa
adcl
mov
adc
rcrb
sub
fcmovne
mov
data16
push
push
addr16
ret
lock
ss
push
mov
rep
adc
push
int3
adc
mov
data16
sub
std
sub
test
jns
push
out
add
sub
sub
lods
pusha
fisubrs
stc
movb
jne
mov
jge
adc
es
dec
lret
mov
jl
lahf
add
mov
jae
ret
xor
adcl
dec
aad
test
cs
pop
fadds
enter
ror
jmp
enter
or
arpl
cmp
insl
lret
xor
jecxz
mov
jmp
mov
adc
xor
mov
loop
push
inc
mov
stos
xor
mov
dec
jp
pop
cld
fs
imul
xlat
sub
stos
aad
xchg
dec
rorb
dec
push
leave
xor
lea
jecxz
adc
mov
adc
icebp
push
ret
cmpsl
insl
call
or
jge
js
popa
cmp
jmp
sub
dec
arpl
inc
loop
and
dec
out
xchg
outsl
enter
push
mov
cltd
mov
mov
fildll
lahf
imul
js
fisttpl
mov
out
dec
mov
dec
ss
cmp
in
test
dec
mull
popw
and
lret
lock
test
cmp
sbb
jno
adc
daa
mov
lds
dec
inc
jo
std
xchg
lret
inc
imul
xor
ret
fmull
xchg
mov
lcall
decb
mov
loope
and
push
pop
into
mov
jge
pop
test
inc
mov
insb
popa
cs
cltd
fwait
and
inc
cmp
dec
cmc
repnz
fnstcw
scas
in
in
or
icebp
sti
call
repz
lock
add
imulb
pop
rclb
aad
xchg
mov
adc
lahf
jne
aad
aaa
into
aam
rorb
sub
out
mov
dec
mov
pusha
icebp
mov
jl
rcrb
sahf
aam
outsl
xor
cmpsb
rcll
fs
push
add
jle
push
gs
push
lahf
rorb
mov
pop
xchg
add
sub
je
sub
mov
mov
iret
loop
out
das
mov
lret
shlb
js
outsb
sbb
inc
mov
lea
add
pop
jmp
mov
js
in
sbb
mov
inc
cmp
lret
xor
mov
sbb
aad
iret
mov
ret
and
data16
pop
fcompl
ja
sub
mov
adc
repz
orl
mov
in
idivb
rcr
lea
pop
ss
and
pop
pop
ja
addl
mov
in
bound
int
push
mov
inc
mov
pop
shl
pop
ja
sub
ret
cmpsl
shlb
arpl
mov
or
xorl
std
push
jae
sahf
and
out
incb
mov
std
push
mov
pop
mov
push
mov
mov
sbb
adc
lret
and
inc
mov
lea
cmp
mov
aad
jbe
and
pop
jge
popf
mov
xor
scas
push
test
divl
shrb
dec
fdivrl
ror
push
cmp
xor
arpl
mov
inc
pushf
sub
aas
ret
iret
pushf
push
xor
icebp
bound
es
cmp
lcall
push
lahf
ret
jle
pop
fs
xor
push
shlb
mov
sub
fmulp
push
sbb
jae
mov
repz
movsl
movsb
adc
data16
xor
or
loop
jg
mov
rcrb
push
and
leave
sahf
inc
push
add
lret
add
jge
lock
or
pushf
xchg
xchg
rcrb
sbb
test
or
fwait
xor
cwtl
movsb
iret
pop
jg
repnz
mov
popf
push
mov
gs
pop
add
lcall
push
xor
pop
lods
pop
repnz
movsl
inc
mov
or
sbb
movb
bound
jge
jno
mov
outsl
xchg
inc
mov
cmp
test
lea
rclb
test
sahf
mov
clc
out
rcrl
sub
repz
imul
xor
sub
pop
cmpsl
and
data16
pop
mov
out
les
dec
lret
mov
sub
lods
int
das
and
fwait
lret
in
in
lahf
fistpl
push
in
call
popf
sub
or
add
cli
jno
enter
bound
pop
iret
add
and
mov
mov
pop
dec
idivl
xchg
jmp
mov
cmp
xchg
xorl
jns
xor
mov
imul
loop
outsb
xchg
push
popa
push
pop
push
xchg
stos
out
cmp
pop
dec
popf
and
js
adc
sbb
sub
add
push
or
cmp
adc
mov
xchg
inc
adcl
xor
push
ror
pop
xor
xbegin
ret
jmp
push
scas
repz
or
cmp
jmp
fildl
and
pop
imul
xor
and
into
adc
cmp
inc
mov
add
lcall
push
rcll
fsubr
pop
cmp
jbe
xchg
add
fmuls
adc
dec
adc
stc
loopne
mov
sub
scas
cmpsl
inc
les
mov
mov
cmpsb
sbb
cmp
push
mov
stc
test
mov
insb
jae,pt
ret
je
lahf
or
stos
push
xor
data16
call
int3
push
jl
in
pop
cld
dec
gs
sub
or
cmp
je
push
inc
cmpsl
inc
inc
adc
fsubr
mov
imul
or
add
movsl
sbb
push
mov
aad
inc
xor
shl
or
in
fistps
sar
lods
outsl
cmp
out
ret
insl
jecxz
dec
inc
pop
mov
mov
adc
lcall
orl
lock
mov
mov
xor
mov
sahf
dec
adc
jne
decb
push
bound
xor
jb
adcb
cwtl
lods
repnz
jmp
mov
sbb
scas
adc
add
lret
push
cs
adc
leave
and
and
rolb
push
enter
inc
add
out
sbb
das
mov
cmpsb
xor
outsl
jbe
outsb
inc
outsl
rcrb
jb
and
loopne
push
cmp
call
hlt
or
xchg
lret
aam
inc
data16
sbb
xchg
jb
xchg
dec
pop
mov
jp
std
lock
inc
push
mov
add
mov
cmp
inc
or
jle
inc
sbb
mov
frstor
movsl
imull
cmp
cmc
scas
lods
xlat
sbb
inc
push
jl
inc
inc
push
add
jle
lahf
push
sbb
stc
mov
loopne
cmc
sub
xchg
mov
sbb
mov
push
jge
test
adc
sub
sub
xchg
imul
repnz
mov
mov
and
inc
imul
ss
movsb
add
lret
adc
fbstp
repnz
in
inc
jbe
sub
cwtl
push
fldcw
mov
sub
jnp
add
sub
cmpsb
mov
fs
subb
jne
add
fcoms
idivl
lods
lods
push
loope
leave
mov
scas
ss
push
adc
ficomps
fstpl
sar
stc
mov
loope
xchg
pusha
daa
inc
mov
scas
mov
adc
add
fdivl
pop
inc
sbb
stos
gs
lret
dec
push
mov
xlat
cld
push
add
and
sbb
inc
inc
clc
push
stc
dec
ror
lods
scas
leave
test
bound
arpl
push
in
dec
loopne
scas
adc
mov
loope
xchg
mov
dec
cmpl
fsubs
mov
sbb
mov
jge
insl
mov
dec
stc
sbb
jmp
jb
cmpsb
mov
jbe
lcall
stos
sbbb
mov
sahf
sub
push
and
je
mov
shrl
outsl
nop
lods
call
adc
ljmp
imul
popf
scas
fs
jno
dec
jecxz
arpl
insb
ror
add
loope
mov
jg
mov
pop
and
dec
or
test
adc
loop
loopne
mov
in
mov
xchg
lret
test
xor
cmp
pop
inc
mov
sbb
pushf
sbbb
and
add
insl
jl
xor
pop
add
les
mov
add
mov
xchg
add
lods
fs
adc
movsl
jns
add
jb
addr16
or
pop
add
jmp
push
clc
mov
adc
pop
loopne
dec
push
mov
add
leave
pop
mov
dec
sub
adc
out
pushf
dec
adc
xchg
adc
mov
add
cmp
stos
pop
ss
aas
and
clc
push
ds
movsl
pop
xchg
fwait
cli
dec
fcompl
mov
out
outsl
pushf
fsubs
mov
iret
fldl
mov
xor
push
and
gs
data16
pop
mov
aad
xchg
notl
sub
cli
rcrl
push
out
movsl
sbb
daa
outsb
or
sbb
movsl
pop
lock
stc
mov
inc
mov
inc
fnstcw
push
mov
iret
adc
dec
ficomps
sub
imul
mov
lret
jg
add
out
movsb
int3
stos
pop
outsb
loopne
xchg
scas
sbb
adc
cmp
cmp
jo
or
jae
xor
addr16
pusha
add
jl
push
fdivs
xor
pushf
mov
inc
popa
paddsb
mov
push
int3
push
pop
push
out
xor
sbb
fcomps
sub
and
xor
sub
and
ss
out
push
mov
mov
cmp
imul
xchg
leave
inc
mov
dec
xchg
mov
sbb
insl
inc
cmp
cltd
xchg
mov
mov
cmp
pop
xlat
xor
add
rol
pop
scas
xor
jg
loopne
leave
pop
sub
in
hlt
cs
fidivrs
icebp
insl
fistl
inc
jns
pop
in
push
xor
dec
push
mov
mov
scas
jg
xchg
pop
sub
cmp
and
mov
push
filds
cld
out
jae
stos
and
jb
inc
in
sti
xchg
push
lea
fistpl
out
out
cmc
dec
cmpsb
lods
add
or
add
loop
nop
icebp
cmp
push
or
imul
stc
aaa
or
dec
shrl
sbb
loop
lock
xchg
fistpll
and
mov
mov
xchg
or
pop
into
fstps
mov
jl
shrb
imul
in
push
mov
adc
stos
scas
mov
and
stc
orb
xor
ret
inc
notb
sub
mov
pop
call
mov
movsb
pop
mov
cltd
mov
add
jge
lahf
push
cmp
arpl
adc
stc
scas
pop
mov
sbb
test
or
inc
ret
jl
cmc
int
xchg
insb
out
inc
add
nop
addl
jg
or
add
int3
loope
push
pop
push
mov
inc
xor
fwait
test
dec
mov
xchg
loopne
ljmp
aas
mov
das
cmp
jmp
xchg
sbb
xchg
xlat
dec
inc
sbb
mov
sbb
add
cmpsl
jno
arpl
addl
mov
xor
test
loop
scas
test
cwtl
mov
mov
adc
dec
pop
jge
mov
adc
rorb
xchg
cs
mov
cmpsl
push
mov
cmc
movsb
inc
lahf
nop
lock
fimuls
clc
mov
pop
pop
sub
or
add
dec
loop
cmpsl
sti
mov
ljmp
and
cmpsb
and
xchg
cmp
shlb
pushf
xor
not
sbb
outsb
dec
and
xor
sbb
lods
mov
and
imul
lret
mov
xchg
addr16
cli
lea
ja
shlb
jecxz
mov
aas
and
adc
jle
jae
divl
mul
pop
enter
add
sub
sbb
mov
dec
ja
sbb
stos
push
lahf
mov
repz
push
inc
push
in
xor
out
popa
fsts
adc
cmp
outsb
adc
ficomps
fcomps
sub
mov
mov
xor
roll
push
ljmp
movsb
mov
dec
add
inc
pushf
nop
aam
mov
inc
cltd
or
cmp
ret
imul
mov
mul
pop
xchg
loope
mov
push
div
sbb
out
push
cmp
enter
jne
dec
cmpsl
mov
xor
ljmp
jbe
hlt
insl
cmpsl
fdivrs
mov
lock
jg
sti
jmp
addps
dec
jno
mov
test
and
lock
add
movsb
or
fwait
std
sbb
xchg
mov
jb
and
aas
loope
adc
int3
adc
loopne
pop
push
test
push
cmp
jo
dec
outsl
in
mov
out
jge
popa
inc
sub
add
lcall
pop
mov
fs
xchg
mov
movsb
cltd
enter
fcoml
cltd
jg
fsts
sub
notl
pop
mov
pop
das
xchg
inc
cmp
or
rolb
mov
sbb
pop
and
lock
pop
mov
loop
fidivrs
rcrl
test
push
jo
xchg
and
jb
cli
xchg
ret
sub
xchg
mov
icebp
add
pop
dec
sahf
sbb
popf
inc
mov
or
int
insb
cmp
pop
cmp
push
fisubrl
or
inc
fistpl
sbb
mov
push
fistpll
scas
inc
sar
repnz
push
mov
or
jnp
or
lcall
out
fwait
cwtl
pop
dec
movl
cmp
push
movsb
stos
aad
jl
mov
mov
out
xor
nop
mov
pushf
outsl
int3
cmpsb
jp
mov
xor
inc
lea
lcall
or
mov
cli
dec
ljmp
inc
jl
scas
je
fstps
adc
stos
sarl
enter
push
fs
dec
fidivrl
mov
pop
xchg
aam
sahf
mov
jae
sub
push
push
out
fs
in
jo
push
fldl
rcl
sbb
dec
dec
jae
inc
jnp
insl
arpl
mov
fs
jle
iret
cmc
cmpsl
add
loopne
loop
mov
mov
cmpb
pop
jecxz
gs
and
dec
adc
les
daa
inc
das
stos
jb
pop
mov
int
in
test
out
pop
icebp
sbb
mov
mov
fwait
inc
fsts
repz
sbbb
lea
iret
call
xor
in
xchg
mov
pusha
test
fnstenv
mov
lcall
cmp
xchg
test
imul
mov
xchg
xchg
sub
popf
mov
mov
and
clc
mov
lahf
dec
insb
fimull
or
loope
xchg
cli
cmp
xchg
adc
les
xor
mov
lock
cli
push
addr16
test
lods
jb
fadds
mov
jp
imul
mov
ret
jle
shlb
lds
push
int
ds
jno
push
push
stos
pop
ds
test
inc
pusha
xchg
pop
das
pop
xor
loop
jmp
das
mov
jne
scas
mov
mov
orb
das
jg
or
or
leave
push
xchg
lods
mov
icebp
jp
sub
jne
mov
popa
or
jecxz
cltd
inc
mov
xchg
js
push
mov
movsl
mov
stos
push
mov
lcall
and
inc
push
stc
dec
dec
dec
negb
js
std
out
xor
mov
rcrb
jl
add
lods
and
dec
or
rcrl
jecxz
pop
in
ss
inc
xor
loop
or
sarb
pop
dec
push
mov
sbb
int3
xor
xor
dec
cltd
fldl
out
push
call
movsl
adc
pop
xchg
xchg
ds
mov
fwait
pop
fsubs
lret
jg
sbb
mov
push
insl
push
bnd
icebp
shrb
scas
inc
xor
andb
ret
scas
jnp
sarl
fdivs
outsl
outsb
lods
cwtl
out
ficoms
orps
sub
mov
mov
aaa
loopne
in
das
rcll
add
push
andb
lret
sub
ret
or
stos
outsb
xor
mov
xor
pop
imul
sub
lret
adc
cmovns
out
iret
fmuls
sti
lods
enter
cmp
mov
int3
loope
xor
sbb
insb
mov
push
push
mov
jno
xor
and
cmp
cmp
pop
cmpl
fstpt
movsl
js
aad
cmc
xor
mov
jbe
sbb
and
lcall
mov
sub
jae
aam
pushf
mov
rcl
pop
push
loop
mov
fstp
lret
mov
and
push
mov
cmp
mov
lods
popf
dec
mov
mov
dec
fs
daa
nop
jne
in
gs
add
push
and
cli
sub
imul
jnp
mov
sbb
add
lds
jecxz
dec
cmp
and
arpl
push
faddl
xor
xor
sbb
insb
mov
dec
aaa
outsl
rclb
ror
lods
jo
rol
push
popf
adc
sti
inc
mov
sti
mov
adc
arpl
pop
in
jb
lret
pushf
cmp
in
mov
push
imul
into
lret
pusha
mov
push
lahf
ja
jb
push
mov
push
add
jl
inc
lock
repz
roll
jno
out
sbb
jns
imull
jne
lret
outsb
jno
pop
addr16
mov
dec
mulb
jmp
into
mov
cmp
add
inc
jno
repz
pop
in
xor
aaa
scas
sub
or
cmp
and
or
jl
enter
xor
lea
sub
mov
adc
cmp
lea
sub
imul
xchg
aad
out
pusha
clc
cmpsb
mov
je
leave
push
cmc
jp
or
xchg
ja
aaa
popf
outsl
push
data16
addr16
push
lcall
rcrb
stc
movsb
cmp
cmp
sbb
jb
xchg
repz
cmpsb
push
cmp
popf
push
lock
and
out
mov
sub
fadds
cli
popf
push
xchg
mov
push
push
es
sti
sbb
sbb
cld
xchg
jle
enter
lret
ret
jno
jmp
test
mov
inc
push
cmpsb
clc
je
inc
mov
lret
sbb
push
cmp
loope
scas
cltd
cmp
xchg
ror
or
jg
ret
in
enter
stc
xor
aad
call
mov
or
cmp
push
repz
paddb
dec
sbb
ss
mov
adcl
xor
movsb
inc
cmc
inc
mov
imul
xchg
pop
push
inc
mov
les
dec
hlt
adc
test
mov
and
mov
cld
cmp
sarb
cmp
jmp
sub
pop
gs
je
dec
ret
xor
cwtl
dec
add
or
test
xor
sub
enter
xchg
sub
jbe
sbb
pop
rcll
out
jno
dec
andl
adc
pop
shl
ljmp
push
sahf
lret
nop
loopne
xchg
xlat
and
int
jne
dec
jg
lods
xchg
out
lea
sbb
sub
das
jg
hlt
orl
ret
fs
cmp
pop
std
cltd
mov
mov
sahf
add
lret
aaa
jge
and
mov
xchg
fists
mov
sub
mov
pop
dec
mov
cmc
int3
pop
pop
cmp
addr16
pop
popa
add
stos
push
aad
pop
mov
jl
es
clc
imul
leave
mov
popa
push
lods
dec
enter
neg
test
cmp
xchg
mov
xchg
and
or
adc
mov
jb
cwtl
push
xchg
lods
mov
ljmp
mov
lcall
or
xor
push
cmp
fcmovu
mov
xchg
js
pop
pop
pop
int3
out
insb
repnz
nop
pop
je
pop
es
rcrb
in
popa
clc
in
imul
out
lcall
add
out
push
repnz
mov
mov
jbe
clc
xor
xchg
xchg
icebp
into
jge
in
cs
dec
rol
mov
or
xchg
pushf
add
and
push
pop
xor
iret
dec
xchg
add
sub
xlat
xor
pop
popf
js
pushf
call
or
xchg
ja
test
mulb
adc
jns
pop
inc
add
clc
rolb
fcmovu
in
xor
add
loopne
stos
stc
cwtl
push
fstl
and
xor
les
cmc
xchg
jg
cmpsl
pop
sub
cmpsb
es
sahf
je
mov
adc
adc
sub
mov
xor
subb
lods
jbe
xor
flds
cmpsb
and
pop
mov
in
pop
testl
bound
pop
sub
ret
pop
cltd
fnstenv
in
mov
dec
arpl
xchg
bound
mov
and
xchg
xor
push
scas
in
fdiv
ficoml
mov
aam
add
hlt
pop
cmp
cmp
jno
push
mov
jl
arpl
dec
mov
sbb
or
leave
or
decb
mov
pop
mov
xor
xchg
mov
add
mov
repz
sbbb
push
test
pop
mov
lods
mov
inc
xchg
sbb
ljmp
push
dec
add
jb
std
into
loop
aaa
lahf
dec
into
stc
stos
inc
stos
pop
jle
jmp
ljmp
iret
xchg
mov
jl
mov
cmpsb
test
dec
cmp
push
push
test
sub
push
outsl
test
cmpl
int3
jb
movsl
push
sub
ljmp
cwtl
xor
sbb
inc
clc
leave
xor
push
jns
std
je
mov
into
jle
mov
sbb
mov
jae
pop
xor
test
push
les
and
pusha
push
pop
jmp
or
push
pusha
push
dec
clc
xor
pop
mov
adc
and
dec
das
outsb
sbb
push
mov
cmc
insb
mov
dec
inc
mov
in
mov
test
rolb
and
mov
or
xchg
sbb
sbb
in
pop
sbb
adc
lcall
lret
sub
orl
fsubrl
xor
pop
stc
sub
lds
dec
xchg
and
icebp
dec
push
cmpsl
cmp
and
adcl
cmp
adc
jno
jbe
mov
mov
jnp
rcl
xor
cwtl
push
aas
mov
in
mov
std
mov
dec
sub
jmp
ret
sub
jecxz
and
jo
mov
inc
push
push
out
push
fwait
push
jl
push
sub
cmc
aad
mov
aas
jle
int
jae
mov
mov
adc
sub
adc
adc
dec
inc
sbbb
cmpsb
pop
popa
rolb
sub
or
mov
fdivrl
mov
rclb
and
cltd
dec
and
xor
inc
int3
push
mov
fwait
pop
inc
xchg
negl
inc
dec
outsl
xchg
pop
fdivrl
jp
cmpps
cli
les
dec
lret
pop
add
xor
add
mov
rolb
popf
jae
bound
jl
adc
sbb
jo
fldenv
repz
jbe
sbb
movsl
ficoms
push
stc
ss
xor
sub
ret
mov
cmp
lcall
adc
popa
xchg
movsb
dec
test
lahf
or
clc
popa
stc
sbb
in
stos
clc
cmp
sub
aad
hlt
jp
sbb
icebp
int3
repz
mov
in
rclb
inc
sbb
aas
pop
fstl
mov
adc
sub
mov
out
xor
push
sbb
or
lods
je
cmp
pushf
subl
out
movsb
mov
movups
pop
inc
pop
jne
in
mov
icebp
pavgb
adc
ds
pushf
js
lret
lods
test
xchg
dec
sbb
in
fmull
and
mov
push
lea
pop
movsb
sahf
inc
jne
int3
mov
dec
xor
xor
push
arpl
pop
cltd
orl
enter
idivl
jnp
mul
jmp
fmulp
xchg
mov
leave
sti
nopl
and
mov
xchg
lret
gs
ret
xchg
fdivs
mov
iret
leave
sahf
mov
lock
inc
push
stc
shrl
inc
loop
sub
sub
inc
pop
sarl
lea
dec
test
ret
ss
inc
mov
out
sub
stos
cmp
shll
sub
imul
mov
into
cwtl
dec
lds
scas
ret
jns
cmp
pop
out
mov
mov
mov
adc
imul
mov
aad
fwait
insb
and
add
xor
decb
add
lahf
loop
cmp
xchg
cld
arpl
loop
mov
dec
addr16
and
mov
or
and
into
sub
inc
call
jb
push
sbb
and
iret
mov
outsb
sarl
ja
adc
rcrb
or
fcmove
mov
shlb
push
addr16
cmp
and
sti
cs
fldl
dec
mov
sub
int
or
and
cmc
in
jbe
les
push
xchg
into
nop
push
cli
leave
xor
fwait
mov
xor
ljmp
add
nop
mov
gs
call
das
xchg
mov
mov
ds
aad
das
push
mov
sbb
cld
cmp
and
push
sbb
scas
fs
push
fwait
lret
add
cmpsl
test
mov
inc
out
sbb
sahf
neg
shrl
sub
ljmp
fidivl
ja
into
test
repz
add
leave
sahf
sub
daa
cmp
aaa
jae
daa
imul
push
icebp
sbb
pop
xchg
cld
mov
fidivrl
stc
push
fcmovnbe
insb
gs
popa
roll
jne
dec
mov
inc
in
fcmovb
psadbw
cmp
out
xor
stos
out
pop
enter
lods
mov
in
push
call
adc
jo
jb
mov
fstpl
test
aaa
outsb
mov
aam
into
sti
bound
sbb
push
pop
push
sbb
cli
and
lock
push
gs
sbbb
mov
cwtl
sti
fcomi
lret
aad
adc
mov
fnsave
call
dec
in
or
leave
add
cmpsb
lods
popa
test
lcall
sbb
or
ss
jo
das
cmp
xchg
mov
fldl
mov
jnp
arpl
lcall
lcall
sarb
jno
out
movsb
xor
xor
int3
sbb
mov
stos
adc
push
cmpl
sbb
ja
sbb
pushf
cld
int
and
mov
jb
add
xor
add
or
sbb
jge
sub
pop
test
mov
mov
rcll
or
jg
bound
sahf
test
and
sub
cltd
mov
lahf
adc
add
pop
mov
repnz
xchg
cmp
or
jnp
pushf
roll
imull
xor
cmpsl
push
stos
add
inc
inc
fiadds
pop
sub
bound
or
js
dec
sub
inc
mov
xlat
xchg
hlt
sti
mov
fwait
or
in
sbb
sbb
push
push
mov
call
cmpsb
cs
or
add
ljmp
jns
pop
jbe
inc
idivl
test
aas
dec
lret
mov
jl
xlat
jne
xchg
mov
pushf
jmp
jle
test
inc
sbbl
int3
mov
jecxz
clc
gs
popf
add
aad
cmp
mov
push
pop
mov
std
sbb
pop
fsub
fildll
inc
pop
sbb
or
cmp
mov
clc
test
out
cmp
xor
test
stos
stc
lret
fst
jo
jle
mov
and
sbb
andl
mov
push
or
test
sbb
imul
inc
addl
in
add
mov
jbe
jmp
push
dec
mov
in
fisttpll
cli
adc
push
add
loopne
sbbl
mov
lret
lds
out
lods
pop
filds
inc
sahf
in
fistl
loope
mov
adc
jnp
xlat
sahf
gs
add
and
adc
cmp
int
cmp
and
mov
add
imull
into
jae
and
jne
cmp
add
shrb
jnp
pop
adc
push
add
and
sbb
pop
cld
daa
int
jg
mov
insl
add
add
push
data16
xchg
js
icebp
and
repnz
test
inc
add
jmp
lcall
dec
loopne
loopne
sbb
xor
ud1
fwait
cltd
orb
ds
incb
add
notl
jb
lods
jecxz
fsubl
or
inc
and
scas
imul
jmp
adc
ret
lret
push
lret
and
mov
test
enter
adc
fiaddl
lcall
filds
add
push
mov
or
jg
lods
out
add
pop
sahf
dec
add
scas
rcrl
movsl
loop
mov
pop
xlat
ss
aam
xchg
sub
jno
cld
mov
mov
orl
or
cld
cmp
push
xor
lock
out
dec
jne
outsb
lahf
pop
int
popa
dec
sahf
xchg
mov
xchg
inc
in
ret
and
negl
icebp
inc
fsqrt
rclb
clc
orl
pop
repnz
and
testb
in
and
or
hlt
ljmp
pusha
cli
xor
lcall
dec
mov
aaa
xor
aas
into
mov
movsl
loop
push
repz
js
add
sbb
mov
scas
jge
mov
mov
fiadds
mov
xor
aam
xor
vorps
cli
data16
cmp
sub
mov
iret
neg
stc
xchg
add
adc
mov
loop
sbb
shlb
icebp
in
test
test
xlat
testl
test
mov
push
test
cmp
jb
mov
pop
stos
pop
push
psadbw
lcall
movsl
sbb
icebp
xor
out
cld
arpl
loopne
dec
incl
std
jp
lret
das
icebp
stos
in
mov
push
lahf
loop
daa
and
mov
jge
lret
scas
jge
jo
or
pop
sub
sub
shr
loop
xchg
pop
push
mov
test
jg
mov
adc
addr16
ja
dec
in
sbb
mov
jle
cmp
mov
cld
mov
or
fidivl
mov
scas
fiaddl
xor
mov
and
jg
les
imul
ja
iret
stos
sahf
xchg
push
aas
lret
mov
push
insl
push
ficompl
adc
inc
loop
mov
adc
ja
jge
jmp
rorl
aaa
in
jmp
outsl
xchg
ret
xor
sub
das
mov
xchg
inc
mov
xlat
daa
les
lock
cltd
dec
iret
mov
add
test
daa
sbb
ret
mov
jecxz
stos
icebp
adc
cmp
cwtl
jo
rolb
add
lahf
incl
xorb
mov
inc
enter
inc
push
mov
imul
adc
sub
dec
add
loop
movsl
cmp
test
push
xor
js
stc
pop
jge
or
sbb
in
jae
pop
pop
lock
pop
jns
add
jp
sahf
cmpsl
push
pop
push
jnp
dec
or
pop
xor
and
lods
pop
in
ja
cs
adc
iret
cli
pop
cmpsb
outsb
int3
into
gs
inc
and
fdivr
cmp
push
lods
xor
mov
test
inc
push
and
popf
in
and
scas
lret
cltd
fnstcw
adc
mov
enter
or
flds
or
pop
jp
inc
inc
pop
mov
movsl
cmp
cmp
adc
pop
insb
add
insl
inc
lds
outsl
sub
insb
jne
sub
jo
cmp
fisttpl
xlat
cmp
scas
jae
loope
lock
inc
push
adc
pop
test
and
inc
mov
bound
push
movsl
mov
or
ljmp
push
cld
hlt
or
and
insl
dec
pop
enter
jge
in
scas
out
xchg
inc
jecxz
push
sbb
imul
les
push
aas
push
add
mov
mov
inc
ja
and
or
jae
xor
mov
add
inc
scas
in
pop
mull
pop
lods
xchg
add
dec
sbb
push
gs
mov
jae
in
mov
push
inc
inc
cmpsb
xor
sar
mov
or
cmp
int3
gs
and
pop
fiadds
xchg
dec
lcall
mov
mov
jge
stos
into
sbb
in
mov
or
jge
movsb
jne
inc
sub
jle
sbb
jo
push
add
insl
inc
addr16
jmp
xchg
leave
sbb
xchg
dec
and
inc
jns
ja
fldcw
push
rcrb
mov
into
lods
mov
mov
sub
sub
pop
adc
cmp
in
inc
jno
aad
pop
into
dec
sti
outsl
stos
scas
jecxz
bound
stc
push
push
je
mov
mov
stc
jg
add
ret
cmp
push
lahf
push
mov
fidivrl
add
es
and
in
adc
adc
add
das
pop
pop
or
sbb
jle
jp
inc
jg
push
lcall
adcl
je
mov
and
mov
pop
and
pop
cli
ss
jno
inc
mov
rep
sub
inc
das
jmp
add
mov
pushf
adc
into
xchg
js
xor
sar
xchg
mov
cld
cld
xchg
add
jge
inc
fwait
jmp
xchg
mov
shlb
inc
testb
jbe
dec
loope
mov
std
sbb
cs
sub
pop
dec
mov
pop
adc
aaa
dec
in
sbb
push
xor
ljmp
sbb
lcall
add
mov
cmp
test
cmp
cmp
sub
scas
fwait
imul
sub
mov
orl
mov
pop
jp
sti
fnstenv
pop
mov
pop
sub
and
loopne
dec
mov
outsl
mov
cmpsb
sub
pop
pop
and
call
jp
sub
inc
loopne
mov
fildll
pop
jle
dec
pop
jb
lret
clc
cmp
jl
xchg
lods
call
cmpsb
adc
lret
shrb
mov
xchg
add
mov
in
dec
add
clc
xchg
cmp
dec
mov
les
mov
and
dec
push
mov
sub
stos
movsb
lcall
jns
sub
stc
add
jle
loopne
imul
fisubs
mov
and
or
sub
pop
push
faddp
mov
push
xor
sub
in
lret
push
mov
xor
inc
sub
popf
ret
inc
mov
mov
shll
insl
jmp
and
pop
pop
mov
js
jns
out
das
mov
xchg
push
sarb
add
adcb
lcall
syscall
gs
insb
mov
outsb
xor
outsb
js
push
aam
sbbb
mov
add
xchg
je
or
inc
lods
cwtl
shrl
aas
or
mov
sub
sbb
lock
xchg
pop
xchg
jno
dec
das
clc
xor
jae
lret
push
das
mov
sbb
arpl
inc
adcb
stos
dec
or
xor
movsl
test
in
rcll
mov
xlat
xchg
sub
pusha
inc
cmp
adc
ss
jns
push
sbb
loopne
ds
stc
mov
inc
mov
outsl
lret
cld
push
jmp
sub
loop
inc
inc
in
mov
xchg
movsb
sbb
lock
lcall
pop
xchg
in
lock
pop
xor
or
add
jp
cwtl
cmp
fiadds
dec
xchg
fadd
ja
rorl
mov
jns
enter
or
dec
inc
xchg
mov
fldt
add
leave
mov
lea
test
push
pop
and
cmp
pop
ss
or
sbb
xor
test
test
or
out
jns
cltd
mov
stos
hlt
mov
pop
inc
outsb
and
arpl
pop
pop
pop
pop
clc
sub
int
mov
cmp
sbb
mov
in
adc
add
mov
jecxz
pop
movsl
bound
mov
fsubs
sub
dec
lds
cmc
cmp
dec
cmp
mov
ljmp
lea
inc
cld
push
add
xor
movsl
dec
mov
andb
pusha
repz
jno
mov
sbb
rcr
lcall
in
adc
xor
mov
dec
push
xchg
insb
cltd
fwait
dec
push
mov
cld
lods
outsl
jl
inc
pop
inc
sub
lods
mulb
pop
hlt
xchg
xchg
sbbb
jge
es
lcall
xchg
push
add
repnz
jno
xchg
or
out
test
pop
jbe
xchg
ficoms
dec
push
xor
mov
mov
adc
pop
mov
pusha
xchg
cli
push
xor
mov
lock
lods
lock
mov
outsb
test
and
mov
mov
xchg
sbb
jne
sbb
xchg
xchg
ss
jae
jg
jbe
icebp
lcall
sub
sti
repnz
pop
mov
daa
xchg
mov
mov
lcall
sahf
xchg
in
sbb
imul
xchg
cmovo
loope
xor
xor
aam
insw
xlat
arpl
mov
jae
and
xor
mov
sti
mov
sti
outsl
jns
cld
adc
outsl
test
push
rolb
loopne
push
xchg
xchg
ljmp
daa
or
cmpsb
int3
mov
and
outsl
jbe
ja
rcrb
mov
dec
pop
imul
into
clc
ret
sbb
jns
inc
aas
and
fwait
cltd
mov
pop
imul
fldl
jge
mov
xchg
lods
mov
jmp
fmuls
test
add
loope
or
insb
ret
sbb
pop
pushf
std
push
lret
aam
mov
ds
movsb
pusha
cmp
ja
cmc
rcrb
cmp
pusha
pushf
out
jmp
fsubrp
adc
jnp
push
adc
pusha
aas
mov
fisttpll
mov
add
pop
cld
int
cmp
das
mov
add
insl
xor
inc
cwtl
dec
outsb
and
stos
rorl
mov
mov
add
clc
cmpsl
mov
adc
into
cmp
mov
mov
jne
jge
xor
or
loope
inc
popf
push
xor
adc
mov
jg
add
aas
pop
mov
aas
repz
shr
orb
xor
je
sub
adc
lock
and
xchg
and
sbb
ffree
and
add
out
enter
cld
cmp
xor
insb
jo
push
jns
inc
inc
out
inc
jp
dec
test
in
mov
dec
lds
jmp
enter
add
xchg
lret
push
cli
andl
mov
fidivrl
mov
aam
mov
mov
subb
pop
push
mov
in
mov
mov
jno
add
imul
or
scas
sti
dec
fsub
inc
shl
pop
rep
pop
cltd
repnz
fmull
xchg
insl
mov
out
add
mov
mov
push
sbb
mov
insb
and
aad
jbe
mov
push
nop
jmp
stc
sub
dec
lret
ffreep
inc
pop
int
int
xor
insb
cli
pop
int3
pop
pushf
out
jg
add
inc
lds
sub
shll
arpl
notb
sbb
or
in
out
sub
or
and
xor
sub
shl
sbb
xchg
dec
insb
cmp
div
or
and
inc
rorb
ja
mov
out
cmp
into
xlat
mov
and
fadds
jmp
cltd
jg
inc
and
jb
mov
mov
sub
stos
dec
push
adc
push
cmp
in
setle
jmp
cltd
pop
push
lea
mov
aas
je
loopne
jne
mov
push
dec
jne
jl
jae
pusha
inc
addr16
push
cmp
ret
or
or
or
cwtl
sti
dec
mov
andb
add
cmp
mov
repnz
and
es
push
leave
js
js
jno
or
lea
xor
adc
or
in
jb
or
jecxz
mov
dec
lock
sbb
cwtl
pushf
sbb
dec
inc
push
arpl
xchg
ret
outsb
mov
inc
xchg
arpl
add
mov
xchg
out
push
mov
mov
or
fdivp
sub
inc
rorb
jp
mov
fisubl
int
adc
aas
iret
je
fs
mov
xchg
push
pop
fs
sub
lods
icebp
mov
jl
sub
mov
push
pop
dec
out
lret
xor
sbb
push
fcoml
rorl
mov
mov
fsubs
ss
sub
sbb
push
pop
pusha
pop
dec
pop
mov
mov
pop
mov
ss
xorl
push
notb
bound
movsb
xor
inc
out
pop
jo
pop
cs
jnp
add
cmpsl
gs
dec
leave
mov
daa
pop
mov
inc
ret
rcr
jne
pop
mov
mov
repz
or
les
inc
sbb
mov
clc
andb
jae
jb
dec
jns
pop
push
cmpsb
mov
ja
cmp
inc
sbb
or
xor
xchg
pop
dec
sbb
inc
mov
dec
mov
cmpsb
add
test
imul
shrl
or
push
stos
dec
cmp
popw
and
out
mov
out
xor
xchg
xchg
xchg
or
inc
insl
jge
push
sub
aas
js
pop
paddsw
jmp
insl
cmp
mov
mov
lahf
arpl
adc
mov
leave
int
mov
iret
pop
das
fisubl
outsl
out
fmull
scas
daa
jno
mov
jno
or
movb
je
lea
rclb
les
pop
dec
add
or
adc
lea
jecxz,pt
bound
push
mov
xor
and
push
inc
push
inc
push
xor
pop
popa
mov
jae
add
push
imul
loopne
aam
dec
shll
in
adc
or
or
sbb
imul
hlt
inc
notb
sub
rcrl
shr
int3
je
add
xchg
ficompl
mov
dec
fisubrl
sbb
fmuls
fldt
xchg
ds
jnp
or
add
mov
es
repz
js
xchg
cmp
dec
mov
fisttpl
add
sar
xchg
sbb
scas
jp
xchg
inc
fdivrl
mov
push
int3
cmp
mov
in
add
sub
cmp
fadd
push
cmp
popw
decl
adc
jb
aam
fidivs
or
les
in
mov
call
xchg
mov
inc
xor
lret
push
mov
lea
das
loope
je
mov
mov
pop
dec
pop
orl
pop
ja
in
stos
xorb
mov
filds
push
mov
push
push
pop
mov
loopne
insl
outsb
xor
dec
lret
leave
je
subb
rclb
daa
pmaxub
and
call
sbb
xchg
fidivs
dec
dec
dec
cmc
dec
pop
add
scas
inc
or
sbb
pop
jbe
mov
in
les
push
outsl
fimuls
jo
lock
or
mov
dec
inc
add
xor
cmpsl
les
push
push
test
pop
enter
inc
mov
xchg
pop
jp
dec
pop
sub
pop
ljmp
repnz
mov
js
les
inc
movsl
push
subl
jno
gs
pop
mov
aaa
xchg
lret
lods
loopne
lods
push
in
insb
sbb
pushf
lret
enter
add
test
insb
clc
jb
pop
inc
outsb
shrl
add
xchg
cltd
sti
cwtl
push
sbb
out
sti
push
bndstx
sub
xchg
das
mov
cmp
popa
or
push
push
sbb
push
inc
cmc
shrb
pop
testb
cmp
pop
cmp
cld
jnp
inc
inc
fcomi
pop
mov
cmpsl
cmp
decb
mov
js
stc
sbbb
cmp
inc
shl
jmp
ss
stc
mov
jl
es
std
in
jnp
ds
sbb
cmp
push
mov
mov
cmp
ds
enter
and
pop
enter
dec
mov
xor
lods
fisttps
fisttpl
out
rcrl
scas
fwait
lods
hlt
and
stos
fs
icebp
aam
std
pop
cmp
mov
cli
xchg
xchg
shrb
das
sub
test
loope
jecxz
insl
mov
inc
mov
mov
mov
scas
pop
inc
in
outsl
fists
jmp
or
shlb
fwait
test
in
fs
out
push
jne
imul
xor
mov
inc
push
out
push
cmp
pop
and
in
js
sub
jnp
scas
adc
insl
or
sbb
sub
ficompl
xchg
mov
jge
in
jne
movsl
inc
rcrl
push
aas
out
and
mov
fisubrs
cmp
dec
xor
roll
ret
mov
mov
out
fneni(8087
lds
cmpsb
push
push
sub
sub
add
add
xor
repz
lods
sub
ja
add
hlt
push
mov
xor
jecxz
lahf
in
pop
dec
cmp
and
jne
or
clc
xchg
push
into
inc
mov
mov
push
rcrl
mov
and
sbb
adc
cli
aad
stc
scas
aas
lods
loop
in
dec
dec
in
inc
cmp
addr16
add
mov
fstpl
mov
mov
aaa
aas
loopne
xor
sbb
movsb
dec
into
sub
aam
fadds
inc
and
loope
xlat
dec
js
pop
stos
jnp
and
or
std
icebp
inc
and
add
cmp
sub
fs
aam
xchg
clc
fs
adc
sti
mov
ss
pop
sub
jge
test
or
jae
dec
ja
call
scas
push
mov
sbb
inc
xchg
ficoms
or
jo
es
iret
adc
std
cmp
outsb
add
add
xchg
add
scas
test
xlat
mov
jne
repz
fs
insb
mov
lock
sub
or
loop
les
push
js
shrb
outsb
cmpsl
mov
hlt
adc
aad
cs
add
mov
outsl
jo
arpl
dec
mov
mov
mov
dec
bound
popa
dec
pop
les
pop
ja
cmpsl
mov
int3
push
movsb
sahf
xchg
idivb
test
xchg
inc
mov
xchg
out
sub
xchg
stc
xor
dec
sbb
xchg
jne
xchg
cmpsl
jo
aas
mov
ja
fs
cmp
xor
hlt
aaa
lock
mov
pop
push
xor
test
cmpsl
mov
testb
fcmovne
mov
add
enter
pop
movsb
je
fstpt
xchg
scas
into
ljmp
push
aam
jl
cwtl
xchg
clc
and
dec
xchg
iret
adc
jo
fadd
stc
cmp
data16
add
sbb
dec
notb
mov
loopne
mov
cmp
inc
test
adc
out
nop
mov
pop
inc
lods
outsb
xchg
aam
mov
inc
lods
addr16
sub
cmp
aas
into
repz
sub
nop
xchg
loope
adc
arpl
jbe
or
int3
fcoms
push
push
mov
cmp
imul
testb
pop
sub
mov
scas
test
shll
sub
mov
push
ja
cmp
sbb
add
push
popl
dec
cmp
imul
sbb
xchg
dec
inc
testb
nop
sbb
mov
mov
sbb
push
inc
dec
dec
bound
mov
mov
mov
jecxz
pop
and
dec
xchg
dec
inc
mov
inc
push
mov
stos
sbb
ss
ret
pop
adc
hlt
lcall
push
lahf
scas
in
inc
fimull
pop
sub
fxch
sbb
cmp
push
lret
or
fwait
xchg
push
mov
push
xchg
aam
pop
stos
push
arpl
decl
addr16
loope
xor
into
ss
jp
aam
mov
lock
out
sbb
sub
xor
mov
push
add
cmp
mov
jae
mov
mov
xchg
addb
fcoml
je
mov
jne
add
arpl
popa
cltd
cs
divb
sti
adc
mov
lret
mov
xor
cli
gs
ljmp
dec
in
push
loopne
add
pop
jge
mov
cwtl
and
push
ret
test
xchg
push
pop
mov
scas
sti
cmp
mov
popa
pusha
hlt
das
or
sbb
popa
loop
sbb
fdivr
add
out
jb
dec
flds
xchg
mov
das
mov
pop
ficoml
or
cwtl
jmp
pop
adc
push
aam
jp
inc
jl
or
mov
dec
loopne
inc
push
jbe
lods
inc
bound
sub
ffreep
xor
test
scas
adc
jge
addr16
adc
xchg
call
pop
mov
icebp
sub
mov
jmp
orl
sub
ret
ds
push
inc
jae
cmp
xor
cs
repnz
loop
test
and
clc
xor
jle
and
inc
aas
inc
jno
nop
xchg
pop
mov
pop
cwtl
add
js
fisttpl
lahf
inc
cli
mov
cmp
adc
push
lahf
lods
mov
push
in
push
ds
dec
ret
mov
lock
mov
push
add
jae
insl
adc
ss
sbb
pop
inc
push
and
adc
enter
sbb
add
xchg
xorb
ds
sub
push
adc
shlb
lahf
cmp
or
sti
xchg
mov
and
lds
cmpsb
cli
or
xchg
leave
test
sbb
and
add
add
fwait
mov
jmp
and
sbb
adc
pop
jno
fdivrl
xchg
shrd
mov
xchg
stos
and
outsl
jge
daa
popa
lahf
mov
ja
adc
fistpll
sbb
out
lret
pop
cmpsl
das
and
pop
and
rorb
jo
cli
cmp
xor
sbb
mov
insl
xor
jo
xor
fstps
jmp
fisubl
bnd
or
imulb
lret
jp
pop
jge
mov
dec
lods
cmp
xor
imul
cmp
or
mov
gs
jo
or
mov
mov
jae
push
cmp
in
jb
push
jmp
and
mov
sbb
decb
mov
in
mov
mov
cmpsl
pop
rorl
aas
sbb
and
cmp
jmp
gs
loope
mov
stos
test
std
xor
cmp
mov
mov
aam
push
pop
xor
or
xchg
push
mov
divl
out
xor
sub
push
push
push
adc
mov
adc
mov
aad
repnz
loope
lock
mov
popf
inc
mov
dec
jmp
movsl
mov
adc
jmp
jno
pop
sarl
sbb
dec
push
ljmp
dec
gs
repnz
and
lret
lods
adc
dec
dec
cwtl
inc
jnp
fwait
dec
cmp
push
xchg
sarb
jg
mov
inc
adc
and
push
cld
ret
pushf
scas
mov
lret
cli
sbb
inc
ds
lds
rcl
aam
fstl
ljmp
daa
mov
jecxz
cmpsl
notl
jp
cmp
fstpt
test
test
xor
dec
jo
int3
add
leave
fisttpll
outsl
hlt
out
cld
into
test
andl
cli
dec
loop
mov
jbe
jecxz
into
arpl
dec
adc
popf
jae
cmp
mov
and
ss
mov
into
lret
jp
call
rcrl
mov
inc
fisubs
pop
jo
repz
fdivrl
xor
cmp
fldcw
shrb
inc
mov
movsl
lret
and
sbb
xor
jmp
rol
mov
pop
push
push
mov
push
jg
leave
add
movl
rol
adc
cmp
pop
scas
sub
fwait
mov
test
jne
fisubs
bound
cmc
inc
xlat
mov
movsb
ror
xor
xchg
sbb
dec
int
cwtl
je
jno
sti
fs
push
fcmove
test
or
push
test
xchg
pop
and
gs
jnp
loop
pop
inc
push
xchg
push
mov
cmp
and
cli
outsb
sbb
and
clc
lds
lret
sub
in
push
aas
fcompl
movsl
cld
add
mov
inc
pop
mov
inc
out
aam
nop
test
push
roll
int
lret
test
fildl
repnz
out
outsl
dec
lcall
push
dec
ljmp
arpl
imul
les
imul
or
adc
dec
xchg
cmc
out
lea
cltd
lock
fsub
ds
and
mov
lret
mov
pop
push
mov
push
test
lret
pop
cltd
pop
inc
sub
out
pop
xor
jno
cli
mov
xchg
mov
outsl
aaa
pop
out
pop
push
mov
jo
aas
xchg
fists
pop
call
test
mov
lods
mov
sub
mov
std
mov
loopne
cltd
mov
pop
outsb
sbb
add
xor
mov
ja
sti
bound
outsl
scas
repz
cltd
sbb
mov
sbb
fnstenv
mov
stos
fisttpl
sbb
in
add
orl
faddp
mov
into
jnp
popf
mov
aam
and
insb
test
jne
sub
mov
sbb
add
sub
inc
xchg
xor
flds
rcrl
mov
test
jmp
arpl
movsl
xor
daa
lds
fnstenv
in
pop
sbb
pop
mov
lsl
sbb
adc
clc
dec
aaa
das
mov
mov
addr16
shl
add
outsl
xor
mov
aad
decl
adc
je
arpl
xlat
test
xchg
mov
and
stos
mov
inc
sbb
sub
mov
dec
bound
aad
sub
fildll
into
cmc
rorb
push
dec
scas
and
into
dec
jae
push
mov
aad
mov
pop
mov
arpl
mov
mov
stc
stos
test
in
push
and
mov
mov
or
jmp
fs
inc
out
sbb
sbb
xor
sbb
or
mov
fs
pusha
pop
adc
xchg
push
mov
xlat
mov
inc
neg
mov
in
aas
xor
fnstsw
sbb
push
mov
in
push
jg
jle
test
scas
xchg
inc
sbb
iret
mov
cmpsl
ja
movsl
jecxz
inc
mov
clc
ljmp
inc
into
xchg
dec
in
lret
adc
add
repnz
pop
jae
xor
jns
adc
repz
insl
and
cmp
dec
pop
jg
jb
aas
pop
xchg
xor
and
aas
sbb
sub
fwait
out
lds
fisubl
test
add
dec
push
hlt
jg
mov
or
cmp
adc
repz
arpl
pop
or
popa
nop
mov
cwtl
mov
xor
cmp
dec
xor
scas
jno
mov
icebp
push
pop
lahf
jecxz
in
repnz
popf
leave
lret
push
stos
shll
popa
push
mov
cmpsb
outsb
mov
mov
and
xor
adc
jo
das
push
and
mov
sbbb
jle
and
jno
ds
pop
arpl
adc
loop
movsb
fdivl
or
imul
les
xchg
ficompl
push
rcl
loopne
jb
mov
jp
or
or
fcomps
push
mov
insl
int
add
xlat
jnp
adc
dec
fldenv
push
inc
xchg
leave
lock
inc
adc
push
sti
fiadds
fldenv
out
les
pushf
lahf
test
mov
pushf
or
lret
jle
cmp
dec
mov
mov
push
pushf
mov
test
jp
push
cmp
ret
cld
sub
cli
or
movsl
cmc
inc
inc
cmp
lcall
xchg
push
xorl
dec
test
aad
xchg
sub
clc
iret
clc
scas
ljmp
fsubrl
push
into
dec
rclb
cmc
or
dec
cmp
in
mov
adc
adc
imul
pop
xorb
imul
dec
lock
lds
ret
pop
push
ljmp
out
jmp
cs
fs
inc
pop
ljmp
cmc
pop
idiv
inc
and
int3
ret
xor
mov
or
fildl
xor
mov
dec
push
stos
xchg
out
into
mov
pmuludq
push
addr16
sbb
std
jl
or
fistps
repz
inc
fists
push
xor
int
iret
and
leave
sar
sbb
mov
dec
or
cmp
jg
push
xor
and
lcall
push
sahf
dec
cmp
in
inc
xchg
cmp
mov
and
mov
cld
outsl
lea
mov
adc
hlt
and
mov
pop
mov
rorl
rcll
mov
scas
pop
ljmp
or
mov
sbb
imul
fwait
mov
add
loop
xchg
mov
adc
scas
ficomps
jne
push
fimull
inc
add
sub
les
xlat
or
popf
out
fnstcw
inc
divl
and
lret
scas
mov
clc
xchg
pop
int3
jp
bound
xchg
je
ret
shlb
mov
popa
popa
inc
scas
stos
mov
add
jle
mov
dec
xor
xchg
push
push
aaa
mov
cmp
mov
sub
addl
xor
mov
sahf
fwait
out
adc
xor
aaa
inc
add
rcrl
cltd
fwait
cmp
leave
mov
push
inc
pop
add
sbb
or
test
add
lock
aad
movb
sbb
sub
xchg
dec
scas
aam
sarb
xor
sbb
out
cmp
push
fiadds
flds
sbb
push
pop
push
stc
mov
pop
lock
mov
leave
jb
in
mov
xchg
ret
int
movsb
push
sub
xchg
push
jbe
push
fsubr
in
or
pop
ds
mov
in
mov
cli
jb
mov
pop
shrw
shr
hlt
and
lods
mov
loop
enter
fimuls
dec
inc
xchg
mov
mov
jb
push
movsw
call
jae
sub
sti
adc
aaa
mov
cld
shr
imul
scas
flds
lea
repz
sti
das
test
loop
outsl
push
inc
into
addr16
or
mov
and
mov
mov
scas
out
pop
arpl
mov
movsl
cmc
dec
add
imul
lret
mov
cmpsb
jg
fisubrs
jle
aad
outsb
je
xchg
insb
and
mov
adc
aas
push
mov
adc
loope
mov
call
cmp
cmp
push
xor
jg
mov
scas
das
adc
rorl
test
in
repnz
adcl
inc
push
and
rcll
xchg
repz
lret
push
rorl
xchg
add
dec
pop
adc
out
std
aam
or
outsl
popf
cmp
push
dec
dec
testb
loopne
xor
int
popa
push
jae
mov
adc
mov
mov
fdivl
sub
fsubrs
std
call
inc
adc
repz
mov
daa
outsb
adc
cmp
fwait
pop
jnp
sbbl
inc
or
gs
xchg
cmp
loope
mov
cmc
sbbb
lahf
lods
or
pop
mov
xchg
pop
std
dec
mov
sbb
mov
inc
cmpsb
and
sub
and
into
nop
enter
ja
cld
mov
mov
mov
adc
fwait
movsl
clc
mov
add
scas
mov
fwait
mov
inc
stos
mov
pop
push
push
fucomi
int3
pop
push
fistps
or
mov
out
es
nop
push
lea
mov
fldenv
ljmp
jbe
into
mov
clc
cmc
mov
outsb
push
inc
enter
xor
call
mov
add
das
movl
xchg
inc
repz
cmpsl
cli
adc
dec
shlb
dec
inc
aam
subl
dec
in
mov
shll
jecxz
jmp
jnp
sti
add
cs
cmpsl
dec
fistpl
and
nop
and
mov
add
xchg
pop
bnd
ret
enter
ficoms
lcall
lret
xchg
mov
lock
adc
mov
test
psrlq
pusha
out
jno
cli
mov
outsb
push
push
adc
jnp
out
sbb
adc
mov
jl
orl
add
and
sarb
sub
jle
mov
cwtl
scas
ret
jb
xchg
sub
loope
out
cmpsb
dec
lds
push
xor
cld
pop
add
shl
inc
aaa
in
or
addr16
cmc
push
xchg
mov
mov
fiadds
out
and
jmp
xchg
xchg
jo
pushf
movb
test
out
stos
fnstsw
lods
loop
xlat
or
sbb
jecxz
popl
dec
outsl
push
inc
mov
lahf
sbb
fcoms
pusha
mull
add
jp
adc
cmp
ss
ss
xor
sbb
iret
mov
lea
ljmp
dec
pop
jp
push
lahf
jo
filds
cwtl
inc
add
gs
sbb
je
jmp
pushl
dec
out
xor
jb
aad
jecxz
or
addb
divb
pushf
popf
push
xlat
int3
push
repz
sti
fldt
cmpsl
stc
loop
sarl
jmp
test
adc
pop
popl
ja
inc
xchg
xchg
pusha
cmp
xchg
testl
push
lock
mov
pop
pop
cltd
mov
adc
das
jns
xlat
cmpsl
sbb
popf
xchg
call
adc
jbe
push
mov
mov
sub
rcl
add
adc
sar
push
cld
inc
loope
adcl
mov
pop
or
testl
or
aas
sahf
das
push
leave
hlt
stos
das
enter
repz
dec
mov
sbb
mov
insb
in
shlb
mov
test
inc
std
nop
ror
pop
mov
sahf
fs
adc
popa
xor
lods
push
push
sti
and
pop
dec
pop
cmp
fistl
lods
je
sub
mov
ljmp
or
xor
insl
mov
pop
in
shll
cltd
sbb
test
int
push
insl
jge
outsb
or
fists
nop
and
es
ljmp
ret
fildl
cmpsl
les
nop
xor
mov
jmp
stos
clc
adc
mov
cli
shrb
in
leave
test
mov
inc
shrb
es
cmpsl
xchg
movsb
imul
inc
sbbb
hlt
dec
pop
cli
loop
orl
sub
pop
pop
test
shlb
adc
mov
and
push
lds
aas
mov
mov
cs
in
aaa
mov
pop
cmp
add
and
push
xchg
std
fldcw
into
lcall
xchg
mov
ret
cwtl
push
xchg
mov
rolb
iret
icebp
in
repnz
mov
out
push
mov
sbb
call
mov
inc
jle
data16
inc
or
jecxz
lea
or
mov
xchg
mov
cmc
inc
es
mov
xor
int
aad
inc
aad
push
out
cmp
xor
insl
addr16
repz
jecxz
push
sub
mov
jne
ror
dec
and
or
lret
sbb
push
scas
xchg
popa
outsl
test
imul
fmull
addr16
push
mov
int3
cli
rorb
adc
adc
lds
roll
sbb
pop
sbb
cmp
inc
add
or
xsave
je
or
in
test
popf
sbb
cmpsb
out
pop
decl
push
daa
jo
push
cmp
daa
push
and
mov
adc
inc
cmp
movsl
or
jne
das
mov
iret
scas
and
imul
jmp
dec
cld
jnp
outsb
aas
out
xor
push
bound
call
mull
push
xchg
xchg
fnstsw
rcl
sti
mov
insb
in
pop
inc
movsl
out
mov
add
xorb
js
cmp
inc
stc
fimull
push
xchg
inc
shlb
data16
pop
test
sub
jp
adc
test
dec
dec
popf
cmc
xlat
inc
push
dec
js
and
insl
and
pop
pop
lahf
adc
xor
cmpl
pop
in
pop
sub
add
mov
das
call
test
loop
movsb
aad
push
xor
dec
mov
add
pop
xor
push
fiaddl
inc
popf
mov
arpl
inc
xchg
adc
xchg
test
fstps
dec
dec
lret
sub
fs
ja
inc
dec
enter
lods
xor
cld
repnz
cmp
dec
xor
mov
in
fcmove
and
inc
add
testb
push
or
lods
faddl
sub
mov
lcall
imul
sbb
and
xchg
push
xor
push
jmp
out
xchg
mov
out
cld
pop
jb
ret
out
idiv
pop
jp
in
out
jbe
sub
cmc
sbb
cltd
inc
popf
mov
hlt
push
xchg
lods
out
mov
xor
mov
jmp
rolb
mull
push
xchg
lret
and
sub
cmp
and
xchg
sbb
mov
mov
sbb
ret
or
pop
adc
das
mov
decb
fstl
out
mov
cmp
hlt
push
lds
gs
fs
dec
add
jmp
inc
scas
and
fistps
cltd
leave
sub
dec
cmp
lret
inc
repnz
bound
mov
mov
mov
pop
inc
das
jns
loop
inc
jl
adcb
stos
jge
mov
scas
pop
dec
lods
push
repnz
lods
hlt
push
sti
cmpsl
or
out
push
pushf
push
js
add
aad
stos
xor
push
push
out
xor
adc
call
xchg
xor
loop
out
push
aas
dec
aad
jmp
xor
fildl
test
cmp
jns
dec
mov
jae
dec
or
xlat
insl
push
pop
and
pop
movsl
rcll
push
orb
test
inc
mov
mov
imul
cmp
bound
jmp
loop
push
dec
push
push
jmp
hlt
add
hlt
cmp
js
mov
mov
fnsave
in
out
or
stc
jmp
aam
mov
test
xor
frstpm(287
pop
negl
stc
cmpsl
data16
jmp
sbb
mov
sbb
jne
xor
mov
cmpl
and
aad
dec
lret
idivb
gs
push
pushf
ds
mov
adcl
dec
mov
inc
ret
pop
or
ljmp
loope
in
lahf
dec
pop
cmc
imul
idivl
add
mov
dec
pop
popa
scas
jns
dec
call
add
fldcw
and
fwait
dec
ja
in
inc
test
pop
aad
push
dec
stos
lods
fcmovne
mov
or
lret
jnp
cmpsb
xchg
pop
dec
fcmovnb
add
aad
scas
cs
fistps
push
mov
inc
mov
add
int
add
cmc
mov
in
mov
fwait
in
in
mov
fwait
rorb
fiaddl
mov
cmpsl
sub
out
aad
dec
adc
clts
repz
inc
out
into
cwtl
je
int3
jb
lahf
out
adc
lea
and
pop
dec
add
or
int
out
leave
add
push
repnz
pop
outsl
es
sbb
push
fsts
sub
call
rorb
and
les
pusha
pop
pop
inc
add
fxch
mov
mov
loope
loop
popf
imul
icebp
daa
loope
jno
mov
imul
mov
dec
loope
cmpsl
mov
jb
cmc
pop
out
fsubrs
xor
stc
ffreep
repnz
rclb
fcoml
or
push
lea
pusha
loope
mov
push
dec
cmp
out
idiv
sub
pop
or
xchg
nop
cmp
sbb
iret
xchg
dec
jno
idivb
jecxz
into
or
nop
pop
xchg
psubusb
cld
clc
into
mov
jmp
testb
out
add
negb
fcomip
stos
xchg
in
pop
pop
jb
loope
push
cmp
push
push
mov
scas
jbe
lret
mov
cs
rorb
push
jb
ds
ss
int3
mov
dec
call
xchg
sbb
xchg
lahf
pop
pop
repnz
or
xchg
faddl
dec
inc
and
call
sub
repnz
jg
mov
out
cmp
pop
in
dec
js
push
pop
fnstsw
shl
dec
mov
adc
stos
fwait
add
jl
xchg
pushl
pop
push
repnz
xlat
popa
xor
ret
test
fcoms
jae
sbb
shl
in
rorl
jae
push
idiv
sbb
jbe
mov
or
and
add
mov
aas
mov
sbb
lcall
mov
or
pop
sub
push
sbb
repnz
push
pop
push
fsubrs
pop
pcmpgtw
lods
std
dec
mov
sbb
mov
sub
xor
xor
hlt
jne
xchg
ret
test
xchg
xchg
rcr
jl
stc
cmc
cmp
jmp
cli
hlt
xor
inc
pop
out
ret
mov
sti
hlt
test
cli
stos
cmp
enter
dec
jge
in
and
push
sbb
sbb
sahf
mov
jle
pop
in
in
mov
aad
mov
inc
lods
jae
or
jl
jg
jg
mov
xor
iret
sbb
dec
xor
pop
cmp
testl
cmp
inc
inc
lret
fiaddl
cltd
cmpsl
dec
jp
cmpsb
aam
dec
mov
sarb
in
aam
cld
xor
xor
adc
or
dec
sahf
imul
fldl
cmc
lods
jbe
mov
insb
jbe
popa
pop
js
sbb
pop
iret
push
inc
xchg
add
jns
aad
aam
xchg
mov
out
loopne
ss
or
mov
int
shl
pop
loop
jl
cwtl
sub
cmpsl
es
aaa
xor
xor
or
xor
jg
dec
push
sarl
arpl
adc
aam
sbb
sti
or
ds
push
loop
in
jns
pop
xchg
in
and
add
or
cltd
stc
pop
add
and
push
scas
sbb
cltd
xor
jge
insl
dec
sub
ljmp
insl
mov
jae
addr16
jle
push
ret
push
lcall
push
jecxz
pop
clc
cmp
xor
xor
adc
mov
cwtl
mov
mov
stos
jmp
xchg
sti
xor
ja
jbe
mov
jp
jle
movsl
mov
sbb
cltd
push
addb
std
push
cmpsl
mov
fcomps
and
adc
mov
pop
outsb
ret
sti
push
mull
jmp
cwtl
mov
adc
mov
iret
pop
dec
ja
and
mov
and
into
cltd
and
mov
inc
in
test
leave
ret
cmp
cld
or
mov
mov
push
jmp
mov
lahf
dec
mov
mov
cmc
mov
push
daa
pop
in
mov
stos
ret
lcall
cmp
imul
sbbb
add
popa
xchg
mov
jnp
cs
enter
dec
mov
mov
sub
cmpsb
mov
jbe
or
stos
jp
or
adc
jmp
out
sub
and
movsl
or
or
outsb
jbe
dec
add
movsb
fsub
incb
inc
jae
inc
adc
inc
pmullw
cs
lret
popa
mov
iret
sub
ret
test
loop
or
jg
jno
adc
out
loopne
cmc
out
pop
ljmp
inc
and
mull
dec
out
and
mov
in
adc
js
sub
stos
mov
sbb
pop
jl
inc
cmp
cmpsb
int
jo,pn
daa
ds
test
scas
loop
mov
fwait
mov
inc
xchg
pop
pusha
mov
push
dec
ljmp
imul
lods
mov
cmp
int3
adc
pop
movsl
sbb
movsl
je
addr16
inc
add
aas
or
out
sub
call
cld
ljmp
mov
xor
lahf
ds
leave
jle
aas
and
inc
sahf
push
fs
or
xchg
popf
jl
aam
jb
jb
jp
dec
cli
push
int3
pop
popf
sti
fsub
cltd
out
pop
popa
mov
fisubs
cmp
mov
nop
cmpsb
adc
mov
xor
xchg
cmpsb
pop
sub
leave
pop
inc
xchg
xchg
ja
push
xchg
mov
int3
push
enter
jecxz
dec
mov
add
jbe
mov
sbb
in
orb
xchg
cs
add
push
cmc
push
out
or
jno
flds
inc
cli
and
ror
jle
or
inc
lret
jp
jecxz
enter
and
enter
sub
cmp
or
add
xchg
mov
xchg
add
mov
fcmovnbe
fsubr
cmp
cmp
iret
enter
mov
in
dec
repz
movsl
or
call
dec
jl
iret
jo
mov
frstor
lret
pop
das
in
push
popf
mov
sub
lret
lret
fwait
xchg
mov
push
pop
and
je
adc
sub
ja
xor
fimull
xchg
sub
out
sub
repnz
ret
mov
pop
mov
cmc
inc
cmp
pop
js
sbb
scas
out
inc
pop
push
or
stos
lret
cltd
lods
xorb
push
sbb
repnz
std
sub
stc
sarb
rcr
cmp
fs
aas
push
aad
push
int
icebp
mov
je
bound
mov
jns
sub
negb
mov
jb
aas
js
pop
cmp
mov
mov
cmp
shrl
repnz
js
xchg
sub
loop
inc
add
iret
cwtl
pop
mov
mov
push
jge
div
push
mov
ret
int
xchg
dec
inc
cli
add
jo
and
std
push
stos
pop
push
add
pop
into
sbbb
lods
aad
lock
push
fcoms
mov
mov
in
mov
jmp
add
jge
aam
in
pop
loopne
or
mov
int
push
lds
sahf
repz
dec
movsb
fisttps
cld
scas
mov
cmc
jns
jmp
js
sar
cmp
lods
fst
sbb
aaa
mov
fdivrs
pop
jns
sub
pushf
add
popf
xchg
stos
and
sbb
stc
mov
cltd
mov
mov
jmp
stc
les
cmp
cmp
sbb
jo
enter
ja
lcall
pop
sti
cld
add
sub
jmp
mov
cmp
push
stos
shlb
mov
adc
addr16
and
gs
mov
dec
pop
mov
sarl
mov
cmp
mov
mov
and
cmp
sub
mov
sbb
or
pop
test
mov
cli
call
dec
mov
cmp
or
test
or
ljmp
and
js
push
divl
dec
ja
pop
leave
mov
leave
jmp
xchg
scas
jb
inc
xor
data16
xor
aam
in
inc
jmp
xchg
insl
lods
push
or
mov
aaa
outsb
fldenv
mov
or
jo
cli
in
movsl
or
and
sbb
test
fstps
jno
mov
lahf
dec
sbb
js
aam
daa
sub
fstpt
daa
sub
pop
adc
enter
loopne
and
inc
aas
cmp
sub
mov
pushf
scas
sub
aas
jl
push
mov
iret
xor
inc
ret
ror
pushl
push
sti
orl
shll
ror
das
dec
xor
outsb
mov
and
xlat
addr16
jo
lods
cwtl
sub
lret
popf
imull
ds
xchg
push
cmpsb
xlat
jle
rcrb
mov
dec
fiaddl
loopne
shlb
aad
fs
mov
pop
into
xor
aad
addb
repz
daa
nop
inc
pop
lret
jmp
mov
adc
and
aad
push
sbb
insl
cmc
adc
push
aam
lcall
cmp
shlb
js
push
mov
subb
je
test
lods
notl
lret
ret
dec
std
stc
jl
std
add
scas
aad
fistl
pop
gs
les
or
in
mov
movl
int3
loope
push
jmpw
mov
jns
mov
outsb
rcr
out
nopl
faddp
sub
pop
mov
in
out
shrb
xor
xor
xor
and
jnp
pop
mov
sbb
or
out
xchg
sahf
dec
jmp
ret
mov
inc
and
mov
adc
sub
popf
repz
outsb
xchg
hlt
arpl
test
dec
mov
icebp
inc
mov
jecxz
pop
das
cwtl
div
sub
mov
mov
or
xor
nop
lcall
cmp
adc
sbb
and
jae
ljmp
pusha
cmp
push
lods
inc
add
icebp
push
mov
push
icebp
cld
pop
mov
in
daa
jg
mov
mov
inc
inc
data16
movsl
sbb
mov
sub
push
stos
aas
mov
mov
mov
repz
rcrl
es
jecxz
adc
inc
and
push
cmpsl
mov
pop
push
mov
jo
in
xchg
xlat
stos
pop
inc
js
jbe
pushf
jae
lcall
movsb
lock
cmp
mov
ljmp
xchg
push
or
lret
push
std
andb
das
pop
pop
pop
push
and
add
mov
cmp
cmp
imul
cmpsl
hlt
scas
fnstsw
and
dec
std
and
movsl
fmul
test
sub
clc
add
sub
clc
and
dec
icebp
inc
test
pop
out
and
push
popa
scas
mov
inc
fisubl
add
testb
dec
cmp
jg
dec
add
cmpsb
scas
jnp
sbb
leave
jno
and
stos
cmp
sub
in
adc
pop
test
pop
std
mov
mov
lret
je
mov
in
lret
jbe
inc
mov
lds
std
ret
hlt
push
leave
pop
dec
xchg
mov
and
stc
add
loop
loopne
js
mov
out
movsl
mov
mov
xor
clc
xchg
cmp
rol
push
fwait
dec
jmp
je
pop
mov
mov
stos
xor
insl
inc
pop
and
addr16
fisubrl
sbb
popf
es
push
outsl
subb
lds
stc
std
fwait
inc
xor
jle
sub
xchg
or
pop
xor
outsl
fisubrs
cmc
ljmp
cmp
xchg
adc
das
xorl
rcl
in
outsl
mov
test
mov
stc
jno
test
test
nop
sub
mov
adc
pusha
int3
gs
rcrb
sarl
enter
pop
mov
dec
les
inc
xchg
fwait
mov
stos
mov
xchg
cmp
and
mov
and
push
ret
in
mov
adc
nop
sub
sub
push
adc
sbb
loopne
adc
mov
out
xor
sub
dec
dec
sbb
mov
aam
andl
in
adc
add
lret
pop
or
xor
fcom
sub
sbb
shrl
ret
xor
cmp
pop
mov
add
cltd
ljmp
loope
mov
mov
andl
jp
rolb
int
jp
xchg
enter
push
jae
or
pop
mov
adc
inc
es
xor
xchg
ret
cmc
jmp
into
xchg
rcll
mov
inc
cmpsb
and
xchg
pop
rclb
ja
adc
fstps
push
xor
push
mov
jp
jl
sbb
jmp
xchg
mov
mov
cld
cld
xchg
scas
cmc
hlt
ljmp
and
sti
add
lcall
sahf
sti
clc
sub
mov
ret
js
xor
xor
inc
inc
cmpsb
inc
pusha
daa
push
pop
xor
subl
adc
dec
mull
lret
in
hlt
dec
je
inc
into
cs
dec
pop
sbb
mul
mov
out
pop
xor
xor
pushf
outsl
push
add
pop
jno
mov
add
lea
and
dec
nop
push
push
push
addb
shrl
lcall
movsb
adc
jecxz
jo
sub
dec
cmp
or
dec
cmpsl
stc
shrl
sub
fwait
adc
int3
dec
add
popa
and
mov
lods
adc
sbb
push
dec
ficomps
xor
mov
mov
lods
mov
push
in
lds
xor
bound
sbb
leave
jo
cmp
add
mov
mov
or
dec
loop
sub
xor
sahf
or
add
es
jmp
sarb
aas
dec
stc
in
jle
xor
or
xor
incl
fcmovne
adc
xchg
push
lret
les
push
push
dec
inc
mov
lds
cmp
mov
cmc
lahf
push
mov
inc
ljmp
cld
movsl
adc
js
pop
mov
or
out
sbb
in
pop
and
int3
aaa
rclb
pop
xchg
add
je
ss
jno
xor
push
subb
inc
into
and
mov
jb
mov
hlt
shll
inc
imul
xor
inc
lahf
shlb
and
gs
xor
or
mov
pop
fildl
and
cmp
bts
das
cmp
arpl
outsl
add
test
jmp
xor
add
int
lock
jmp
fistpll
cmp
enter
cmp
jnp
insl
sbb
inc
inc
push
into
xor
push
push
mov
and
add
divb
fsubrl
push
sbb
xchg
enter
mov
insl
xchg
push
ljmp
dec
add
loop
jae
lcall
mov
mov
pop
xchg
test
lods
inc
popf
rorl
xor
lds
fisubl
test
xor
mov
mov
out
push
lods
ljmp
cmp
jo
nop
stos
outsl
aam
jae
sbb
aam
xor
pusha
repnz
getsec
mov
jmp
xor
xchg
fdiv
repz
fs
dec
sub
xchg
cmp
inc
add
popl
pmulhuw
sahf
xchg
pop
call
sbb
rolb
lds
and
push
test
add
mov
hlt
jns
outsl
push
pop
insb
xor
mov
jg
out
xchg
push
fwait
dec
hlt
repnz
roll
pushf
xchg
frstor
inc
cmc
popa
mov
cs
ja
lahf
lock
push
imul
sbb
push
mov
mov
mov
push
repz
shll
fwait
lea
sub
scas
push
lock
push
mov
test
push
push
mov
pusha
aaa
fwait
lahf
movsb
fiaddl
cltd
cmp
imul
notb
push
jbe
repnz
mov
popa
fldcw
popf
add
inc
mov
test
pop
cwtl
jp
int
mov
and
stos
add
aad
sti
dec
xchg
dec
popa
xchg
jge
or
cld
stc
pop
cmpsl
xchg
jbe
mov
jns
push
pop
ss
or
xor
pop
push
mov
test
pavgw
aaa
into
sub
or
mov
mov
std
push
fwait
repz
mov
adc
cmp
fimuls
jne
xor
cwtl
xchg
xchg
cmp
adc
inc
or
daa
xchg
fistpll
dec
sbb
movsb
lea
push
mov
into
add
xor
pop
jae
push
das
scas
mov
std
cmpsb
cmp
outsb
sbb
int
mov
pop
xchg
inc
imulb
mov
cmpsl
mov
dec
cmpsb
fidivl
sar
jle
into
js
aad
adc
and
adc
pop
mov
push
repnz
cwtl
faddl
imul
xchg
jmp
xchg
or
jge
ja
add
lret
mov
sub
dec
mov
cmpsl
or
push
movzwl
and
call
outsl
mov
pop
arpl
fstps
cs
cmp
outsb
shrl
hlt
lea
push
jne
sti
add
add
xor
insb
ja
icebp
shr
jmp
ljmp
mov
ds
adc
into
jg
and
jne
add
pop
lock
clc
int
iret
mov
dec
pop
out
inc
loop
mov
pop
sub
adc
adc
and
clc
fbstp
jno
scas
sub
xchg
xchg
add
push
push
push
mov
sarb
add
js
daa
xor
jbe
jp
jg
inc
mov
jno
ljmp
popf
jmp
daa
cmpsl
mov
push
pop
jmp
jb
push
and
daa
js
xor
push
into
xchg
sub
sbb
adc
xor
cmc
out
pop
cmpsl
push
push
push
xchg
jo
sub
jnp
es
mov
test
push
enter
jl
sub
lahf
pop
add
ret
sub
pop
inc
lahf
loope
push
push
jns
push
and
fnsave
scas
inc
cmp
insb
sarl
lods
pop
add
add
lret
sbb
xchg
loop
or
movsl
div
or
clc
mov
mov
insb
popa
leave
jl
test
test
bnd
cli
adc
mov
sbb
daa
mov
xchg
lret
fnsave
push
out
fdivr
pop
sub
mov
xlat
lret
jmp
mov
fdivrl
ret
fistl
loop
ja
mov
pop
loope
ja
sub
xchg
jbe
rol
sub
xchg
sbb
subl
push
xchg
dec
hlt
xor
xor
xchg
popa
les
cmp
les
mov
mov
js
or
fldt
and
outsb
pop
xchg
mov
xchg
mov
and
add
les
dec
xchg
lods
xchg
mov
mov
in
xchg
mov
sahf
pop
ljmp
xor
mov
sbb
xchg
inc
xchg
mov
push
pop
repz
mov
sub
scas
std
inc
in
repnz
ss
adc
lea
xor
shl
add
xchg
push
pop
jle
gs
or
lods
mov
movsb
mov
xchg
popf
loope
adc
scas
pop
push
push
sub
scas
sbb
xchg
mov
shlb
fdivs
mov
in
aam
adc
sub
cld
cld
and
movsl
repnz
xchg
iret
or
fwait
xor
sub
fidivl
sti
fucomp
aaa
imul
mov
sahf
push
aas
loop
adc
mov
inc
sub
xor
scas
aaa
push
push
push
add
icebp
mov
andb
mov
or
dec
inc
xchg
inc
leave
xchg
jae
sub
call
ss
fdivp
shrb
cld
push
mov
inc
fistps
push
push
cmc
shl
popa
cmpsl
fnsave
test
aam
enter
xchg
jno
orb
mov
push
pop
pop
pop
and
lret
lea
mov
sahf
in
inc
arpl
mov
cmp
dec
xchg
rorb
imul
jns
incb
jecxz
inc
int3
pop
push
push
ret
xor
icebp
mov
call
insl
fldt
lea
xchg
cli
mov
ret
outsb
xorb
arpl
sbb
rcrb
fmull
mov
push
mov
jo
mov
test
imul
popa
sub
cmp
pop
push
mov
dec
je
lods
push
loopne
pop
sbb
lods
jp
ret
lcall
sbb
xor
mov
cmp
mov
popf
xor
lods
mov
xchg
inc
notb
dec
sbb
js
push
adc
js
sub
test
pop
out
loop
cltd
mov
scas
lea
das
and
xor
je
jns
mov
movsb
fstpl
dec
jne
incb
dec
pushf
repnz
rclb
inc
popf
mov
mov
dec
shlb
inc
int
stc
add
fadds
pop
sub
movsb
lds
shrl
add
enter
cmp
jg
jo
jmp
push
insb
mov
in
xlat
push
daa
xchg
mov
cltd
loop
xlat
ret
inc
sbb
cmp
lret
ror
out
mov
stos
xor
xchg
arpl
shrb
jmp
pushf
sub
and
jg
leave
pop
inc
mov
in
and
xchg
iret
xlat
ss
xchg
mov
jmp
sub
push
inc
idivb
insl
pop
ljmp
xchg
mov
ud1
lock
sbb
bound
das
mov
and
xchg
enter
xchg
rol
jp
dec
sti
lods
add
xlat
mov
js
and
mov
jl
repz
orl
shr
rcrb
or
out
sbb
and
mov
sahf
mov
or
imul
sbb
add
push
add
idiv
jg
aad
cltd
stos
mov
mov
scas
nop
fsubr
in
sahf
lea
xchg
ret
inc
lar
notl
in
scas
sub
clc
andl
movsb
dec
push
mov
sbb
add
mov
daa
cwtl
ss
insl
ds
pusha
sbb
mov
inc
xchg
mov
popf
xchg
mov
pop
mov
jno
jmp
cmpsb
pop
xchg
and
xchg
js
push
je
inc
pop
imul
mov
xchg
sbb
fadds
testb
push
gs
push
mov
mov
jne
inc
sbb
les
jae
sar
in
ja
fs
jno
negb
pusha
test
fwait
and
jg
mov
shlb
xchg
jg
add
loop
or
push
pop
and
mov
data16
mov
addr16
jecxz
inc
mov
imul
mov
push
dec
jo
mov
je
es
lahf
adc
jp
daa
cmp
cmc
and
cmpsb
insb
push
inc
mov
mov
rclb
xlat
push
sbb
mov
or
mov
lock
cld
dec
rcrb
push
xor
adc
dec
mov
iret
cmc
and
and
jns
dec
adc
pop
ljmp
jge
cmp
sub
lahf
movsb
addr16
push
enter
add
fdivrl
push
into
das
inc
pop
jmp
enter
pop
push
jle
pop
xor
fs
push
imul
cmpsb
mov
jmp
push
test
cmp
pushw
imul
pusha
inc
pushf
aas
mov
lods
out
xlat
cli
xor
cmpsl
sahf
sub
adc
lods
jmp
movb
jmp
sarl
add
cs
and
cmp
cmp
imul
in
fimuls
mov
negl
shlb
jnp
and
xor
int
ss
or
pop
out
xor
test
and
mov
and
dec
stos
push
xchg
cmp
jg
fisubrl
or
hlt
fisttps
dec
push
sub
pop
rcrb
das
pop
jo
add
jmp
ds
adcb
xchg
mov
mov
lock
and
outsl
inc
pop
stos
bound
jmp
pop
or
jne
inc
push
stc
idivb
cmpb
call
fwait
push
lret
stos
adc
flds
cwtl
mov
jbe
sub
dec
sbbb
adc
out
add
push
popf
sbb
das
out
sub
sub
aam
sbb
mov
shlb
in
cmpsl
sahf
or
adc
shrl
xor
decb
inc
lock
inc
rcl
les
inc
insl
test
push
pop
mov
xor
outsl
sbb
mov
cmpsl
pushf
adc
dec
adc
in
xchg
test
inc
add
repnz
jg
xchg
mov
nop
lcall
xchg
loope
jge
addr16
leave
lods
out
mov
cmpsb
xchg
flds
push
dec
out
pop
pushf
lahf
ret
mov
nop
xor
out
lcall
mov
push
lret
popf
ljmp
data16
into
in
mov
xor
mov
mov
sbb
cltd
xor
xlat
rcr
pushf
popa
leave
cmpsb
mov
push
out
repz
int
sti
lcall
pop
lock
out
enter
js
push
das
mov
mov
arpl
mov
daa
inc
xchg
mov
pop
cmp
xchg
in
add
push
lret
xchg
add
mov
popa
jge
xchg
adc
mov
cmpb
addl
fs
dec
pop
ljmp
repnz
pop
pusha
daa
push
stos
cld
adc
mov
inc
pop
roll
clc
pushf
and
cwtl
push
mov
ljmp
jge
and
mov
sbb
jle
insb
daa
sbb
add
loope
cmp
outsb
add
mov
test
jge
jge
into
push
ss
xchg
pop
dec
mulb
in
push
mov
sub
add
mov
leave
inc
aam
lahf
ja
les
outsb
fidivrs
das
adc
leave
xchg
pop
push
fisubl
cmc
cmp
sbb
dec
cmpsb
lahf
out
xchg
jno
ljmp
mov
mov
xor
jge
cmpsb
insb
push
test
sub
dec
ds
je
dec
xchg
pop
mov
push
fwait
test
and
jbe
jo
outsl
cmc
and
ret
and
adc
mov
in
fistpl
dec
mov
cmpsl
push
push
push
test
xchg
in
push
decb
mov
mov
faddl
jno
sbb
and
sarb
mov
stos
dec
iret
jne
lods
fdivrl
movsb
and
popl
scas
mov
cmp
movsbl
and
addr16
pop
ret
push
push
sub
js
add
ss
int
mov
nop
fsubrl
xchg
push
and
js
data16
bound
mov
xor
icebp
push
or
sub
sahf
push
inc
pop
push
push
sbb
idivl
push
cmpsl
inc
pop
testb
or
shll
std
and
in
mov
pop
cmpsb
xchg
gs
sbb
push
pop
repz
or
sbb
out
addr16
sub
mov
enter
imul
dec
cmp
in
fstpt
pop
push
jp
aam
stos
fisubrl
addr16
fdiv
mov
jae
dec
sbb
test
xor
jmp
mov
add
mov
out
shll
ljmp
sub
and
mov
lahf
in
push
mov
mov
jl
pop
add
fcoms
cmp
inc
pop
in
dec
adc
icebp
mov
push
mov
push
shrl
pop
mov
scas
and
adc
lea
pushf
or
pusha
pop
pop
xchg
cli
imul
and
or
push
dec
xor
inc
jno
and
push
push
andb
leave
mov
loopne
mul
shll
fdiv
mov
xchg
and
or
addr16
int3
push
sbb
das
pop
xor
cmp
sub
jb
ja
rcrl
femms
cmp
inc
outsl
mov
ror
fs
mov
and
dec
int
out
pushf
sarb
lock
lret
mov
js
test
ljmp
adc
aaa
xor
or
cs
arpl
in
jmp
call
jmp
rcrl
mov
or
xchg
adc
lcall
daa
int
push
inc
push
mov
jl
imul
jmp
pop
pop
dec
mov
lods
xlat
lea
scas
xor
mov
stos
lret
ficoml
pusha
aaa
mov
or
leave
or
add
xor
jbe
scas
mov
or
mov
xchg
dec
add
jbe
mov
mov
or
and
je
fldcw
or
sub
pop
insb
or
mov
mov
xor
lahf
fisubl
shlb
loopne
cmp
sub
clc
lcall
ss
mov
fwait
test
negl
rcl
sahf
je
je
into
mov
mov
add
rcrl
shrl
or
add
dec
jnp
or
pop
cltd
pop
hlt
fistpl
inc
inc
ret
cmp
gs
inc
adc
or
dec
mov
dec
loop
lahf
or
lock
aad
aam
sbb
cmpl
sbb
ret
scas
movsb
sub
clc
cmp
and
sub
test
mov
cwtl
outsb
jne
push
imul
push
xchg
in
outsl
dec
push
xor
adc
dec
inc
jne
push
out
xor
add
mov
jp
aam
ffree
dec
sub
xor
jge
cmp
xlat
stc
mov
incb
sbb
or
and
lret
push
cld
bound
das
cmp
test
xchg
mov
mov
pusha
xor
mov
test
inc
stos
je
ret
cwtl
jne,pt
sub
popf
push
mov
hlt
lods
adc
mov
movsb
popf
cltd
cli
add
push
shl
jmp
sbb
mov
jmp
iret
pop
mov
push
ss
pushf
out
or
sarb
cmp
bound
gs
xor
aas
cs
popa
ret
hlt
lods
or
in
shrl
cmpsl
aam
push
fisttpll
nop
stos
cs
jne
add
test
hlt
enter
add
and
push
inc
ja
xor
adc
cmp
sahf
jmp
fbstp
dec
push
push
dec
aaa
data16
cmp
mov
outsb
ljmp
mov
lret
push
push
data16
cmp
std
stos
loopne
lret
test
fnstsw
js
aam
cmpb
outsl
lock
jmp
adc
loope
pause
mov
repnz
adc
nop
cmp
das
or
daa
xchg
test
inc
out
mov
inc
das
out
sub
push
inc
cld
repnz
out
sbb
fcompl
std
in
jne
mov
repz
mov
sub
mov
addb
or
mov
cld
push
insl
jp
cli
popf
jge
mov
xor
lea
scas
popa
push
jne
rclb
sti
cli
ss
jns
pop
sti
xlat
test
cmp
mov
pop
pop
stos
lock
adc
adc
mov
ljmp
jecxz
fdivl
add
add
push
fs
jnp
mov
sub
out
stos
scas
cmp
insb
aas
add
push
inc
and
mov
lods
pop
iret
or
add
mov
ss
xorb
pop
sbb
pop
and
cltd
rorl
clc
cmp
adc
xor
sar
mov
rcrb
ret
dec
jns
mov
insb
lods
mov
pop
sub
mov
cmc
ljmp
ljmp
add
or
jp
jp
gs
stos
push
dec
sbb
mov
mov
in
jg
pop
movsl
push
mov
sbb
in
rorl
and
shll
add
fnstenv
xlat
mov
push
push
dec
scas
adc
outsl
cmc
arpl
leave
xchg
shl
cmp
pop
jns
mov
lea
xchg
mov
mov
add
aad
push
pop
cmpsl
pop
loop
in
sub
inc
pop
adc
add
add
lcall
cli
mov
lods
movsl
lret
jecxz
repz
sub
out
cli
fnstsw
iret
js
jle
stos
cli
push
loopne
jecxz
pop
mov
nop
xor
fidivrs
cmp
push
mov
jg
dec
jmp
mov
jecxz
xchg
jns
movsl
aam
mov
jmp
int
enter
fdivs
adc
or
test
stos
mov
aas
mov
cmc
pop
add
setge
jg
or
sbb
mov
fidivs
testb
mov
rorl
ja
test
lea
cmp
mov
daa
xlat
sahf
fsts
ja
cmp
or
dec
bound
lea
xchg
xor
dec
mov
rclb
dec
mov
call
push
lods
adc
in
cld
xor
repnz
mov
ret
je
movsl
stos
ds
push
popa
add
cmp
push
inc
mov
icebp
xor
dec
in
into
mov
ret
ret
pop
dec
out
mov
sbb
addr16
cmpsl
lea
dec
js
enter
js
repz
inc
aas
mov
push
aaa
sbb
mov
scas
push
aad
xchg
or
jmp
pop
mov
inc
and
popa
and
jecxz
loop
int3
popf
fildll
scas
test
pop
lahf
sub
push
inc
pop
xchg
popa
sub
cmp
lret
in
and
jg
pop
mov
sub
adc
repnz
in
pop
or
daa
and
orb
hlt
fistpl
xchg
pop
test
andb
imul
leave
mov
mov
insl
jbe
xchg
jnp
movsb
pop
and
hlt
cld
jo
ret
dec
mov
mov
mov
test
mov
insl
pop
adc
mov
insb
cmp
mov
scas
in
fcomps
rcl
mov
cmpb
and
jmp
sbb
jl
jg
sahf
xor
dec
add
mov
std
in
aam
mov
hlt
jp
xchg
lret
out
xor
mov
mov
xchg
dec
pop
dec
jns
pop
sub
xlat
and
in
or
xor
mov
orl
fadd
mov
push
mov
test
inc
jecxz
into
or
pop
push
fisubrs
xchg
cmp
jbe
jno
adc
loopne
pushf
ja
ja
sbb
mov
mov
scas
repnz
rcl
adc
outsb
loope
mov
and
xchg
and
pop
js
ss
jbe
or
leave
push
pop
xor
icebp
jnp
pop
inc
xchg
shrb
js
jb
mov
je
je
add
mov
imul
mov
xor
add
jno
pop
xlat
mov
mov
testb
ret
cmp
inc
mov
mov
lea
lea
cld
and
xchg
bound
std
cltd
adc
mov
mov
mov
daa
pop
enter
xchg
add
pop
mov
lcall
adc
mov
call
movsl
inc
push
jne
jge
addl
add
push
jne
in
testb
mov
pop
call
test
pop
mov
ret
repz
outsl
jo
push
xchg
cmp
arpl
dec
sti
xor
push
dec
and
add
lret
out
push
repnz
sahf
bound
divl
or
sahf
xlat
pop
push
xchg
call
mov
lret
aad
and
mov
adc
mov
cli
xlat
in
cltd
aaa
mov
aam
mov
pop
jb
jbe
add
jmp
mov
mov
addb
test
mov
loop
gs
mov
popa
add
adc
cltd
cli
out
xchg
inc
mov
test
xchg
scas
pop
je
outsl
cli
xchg
out
js
insl
icebp
loope
mov
mov
cld
pop
jle
lds
sub
mov
std
inc
mov
int
sbb
xor
or
cmp
and
dec
or
inc
cld
loope,pt
dec
movsl
lret
mov
xor
sub
mov
pop
clc
push
int
mov
std
in
or
mov
mov
andb
and
pop
out
sbb
hlt
lock
add
push
into
pop
pop
xor
jne
push
das
pushf
sub
fstpt
xchg
dec
mov
xor
and
mov
test
inc
out
mov
add
sub
xor
repz
sub
jns
imul
pop
cli
out
movsb
xchg
mov
fwait
stc
or
mov
mov
xchg
fwait
adc
call
xchg
das
mov
out
sub
push
ret
jnp
cmp
dec
inc
bound
ret
lods
pop
lcall
mov
push
jp
cmp
in
adcl
orb
loop
and
shll
in
pop
mov
adc
pop
xchg
addr16
imul
call
push
mov
cli
mov
rclb
sub
ds
in
lahf
adc
pshufw
mul
insb
dec
sub
xchg
dec
mov
inc
jl
cmpsb
xchg
xor
pop
pop
and
addr16
pop
nop
jecxz
call
pop
adc
daa
and
sbb
test
sub
inc
scas
mov
mov
mov
mov
push
add
sti
stos
lahf
mov
add
movsb
push
mov
leave
inc
pop
sub
xor
dec
shlb
cld
mov
mov
mov
addr16
inc
into
push
push
sbb
sar
mov
pusha
or
mov
pop
cmp
xchg
mov
and
push
stos
out
in
leave
or
jle
add
lret
data16
mov
dec
scas
mov
push
daa
in
data16
std
in
clc
fnsave
inc
imul
jae
hlt
adc
cmp
mov
jno
mov
mov
fbld
xchg
call
hlt
sahf
cmp
jecxz
push
sbb
jo
lcall
in
test
and
and
mov
mov
nop
sbbb
dec
pop
dec
lods
and
mov
pop
cwtl
cli
unpckhps
mov
push
inc
in
out
jno
dec
adcl
or
jge
xlat
add
in
call
cmp
ja
sbb
rcr
pop
push
mov
cwtl
or
shlb
scas
mov
cmp
out
sar
ret
lods
out
mov
jbe
stos
push
pop
mov
sbb
and
popa
xor
mov
and
add
jns
test
cs
cmpsb
jnp
adc
aas
mov
add
cmc
mov
fwait
inc
mov
roll
jo
bndldx
hlt
sbb
je
in
and
or
insl
jge
jne
pop
xchg
inc
push
add
lcall
or
xor
cmpl
ds
les
in
in
inc
sbbb
jle
je
add
mov
andl
or
lods
add
orl
cmpb
scas
aaa
sbb
jecxz
xchg
cs
push
rolb
xchg
jp
sbb
sahf
sbb
lret
push
sub
mov
nop
nop
push
imul
mov
mov
nop
out
dec
lods
or
jmp
test
xchg
dec
imul
daa
inc
xor
mov
inc
out
idivb
rcll
test
inc
and
dec
cwtl
xor
sar
xchg
pop
insl
adc
adc
sub
cli
int3
or
push
add
sbb
cmp
mov
pop
dec
lcall
dec
lods
jmp
or
pop
rorb
ret
adc
pop
aaa
test
mov
cld
out
cltd
out
push
hlt
in
fmuls
mov
jns
adc
xchg
adc
adc
rorl
icebp
add
jle
test
fidivrs
adc
mov
and
xchg
movsb
insl
sbb
ja
hlt
loop
mov
mov
xchg
inc
jecxz
sub
subl
fadd
ljmp
ljmp
scas
mov
lahf
cld
stc
call
fwait
outsb
dec
mov
pop
inc
jb
loopne
mov
cs
arpl
push
xchg
loopne
dec
divb
enter
mov
push
insb
sub
gs
sub
mov
or
cmpsb
pop
test
xchg
lods
scas
jno
sahf
in
mov
sbb
out
jp
jo
movsl
loopne
sub
xchg
shlb
or
lock
mov
sub
xchg
gs
clc
sub
jns
fs
xchg
add
jl
mov
fyl2xp1
xor
adc
mov
sub
test
or
test
mov
inc
cmp
xorl
fmuls
loopne
stc
pop
sbb
dec
sbb
cmp
cmp
xchg
or
popf
popf
cli
out
mov
add
push
cmpsb
ret
fbstp
es
inc
inc
sub
pop
and
add
lret
mov
ror
and
inc
je
and
adcb
pop
xchg
out
stos
adc
movsb
cmp
add
mov
inc
lret
loopne
inc
fs
inc
test
dec
daa
inc
fld1
lea
sbb
pop
divl
jge
xchg
and
mov
add
sahf
xor
ret
arpl
cmpb
xchg
mov
adc
mov
orb
jnp
lahf
les
and
enter
lahf
add
or
and
inc
or
gs
xchg
and
loopne
in
jns
lds
test
xor
jo
lcall
fdivs
cmc
leave
xlat
mov
aam
sub
stos
in
dec
mov
adc
mov
in
inc
mov
inc
and
loope
popa
inc
ud0
xor
and
pusha
sbb
lcall
ds
aaa
push
jl
stos
and
pop
add
nop
or
and
push
pushf
push
pop
jo
push
jne
fbld
std
lret
daa
pushf
push
xor
xchg
clc
fmul
cmpsl
jne,pn
jg
mov
xchg
ret
bound
out
mov
call
add
and
cmpsl
mov
push
xchg
into
mov
aaa
fiaddl
add
jmp
fimull
push
dec
out
pop
add
push
sarb
cmp
xchg
bound
daa
or
xor
mov
int3
add
push
sub
fsts
pop
or
inc
jb
inc
jne
mov
fnstenv
popf
in
roll
mov
push
cmc
add
fcoml
adc
sti
mov
adc
mov
jae
inc
fisubrs
lock
leave
mov
call
fwait
inc
mov
fnsave
int
xchg
jnp
popa
in
gs
das
repz
clc
mov
aas
sbb
jne
xlat
hlt
xchg
mov
sti
mov
aam
ror
pop
push
dec
jns
fs
sarb
mov
fdivrp
pop
je
pop
mov
fdivs
addr16
mov
cmpb
mov
mov
push
adc
int
mov
push
mov
xor
aaa
mov
into
jmp
je
xchg
sbb
xchg
ret
push
adcb
and
pop
outsl
pusha
or
xor
xor
inc
loope
inc
mov
mov
pusha
add
mov
or
pusha
pusha
xor
stos
aaa
or
mov
add
pushf
mov
ret
push
xor
mov
lahf
test
sbb
adc
xor
dec
jl
andl
jae
add
mov
sbbb
cmc
inc
int
sub
das
pop
imul
outsb
jmp
pop
insb
xchg
scas
bound
dec
push
adc
push
das
lea
adc
sbb
sarl
jne
fdivrs
inc
sub
add
popa
std
sbb
sub
push
inc
mov
sub
sub
loopne
mov
or
in
lock
mov
cmpsb
mov
mov
fcmovnbe
push
sub
fdivrs
mov
add
mov
sub
cmp
and
mov
popf
add
xchg
rcr
xlat
mov
dec
adc
sub
and
inc
lods
and
mov
push
clc
sbb
stos
cld
jp
xchg
movsb
mov
scas
sub
ret
sbb
ffree
fcomps
sub
xchg
or
mov
add
lods
cmpsb
stos
push
push
idivl
test
ja
jmp
into
test
xchg
imul
xlat
mov
leave
dec
cmp
fistpll
stc
js
test
lds
add
push
cwtl
jns
jnp
push
popa
leave
dec
jge
rolb
js
push
call
xchg
hlt
cmp
test
stc
jg
out
add
push
sti
sub
push
lahf
repz
mov
mov
test
mov
mov
out
subb
xlat
mov
cmpsl
inc
xor
lds
or
add
push
ror
pop
lods
sbb
test
sahf
aas
sbb
int3
and
pushf
and
push
ret
mov
jp
divl
loope
jnp
popf
cwtl
cmpsb
dec
shrb
mov
jnp
mov
cmp
lods
mov
cwtl
push
dec
in
mov
mov
xor
mov
scas
jge
fs
push
pop
mov
rcr
add
outsl
push
dec
push
clc
int3
movsl
cmp
push
mov
push
mov
mov
ja
sbb
rcl
roll
fisubrs
mov
push
mov
mov
icebp
lds
pusha
pop
mov
and
jge
push
push
mov
cli
cmpsb
lcall
arpl
subl
inc
dec
mov
jecxz
test
shrl
fcoms
pop
mov
cmp
xor
cmp
ret
or
dec
sahf
add
sbbb
jecxz
xor
out
out
jo
adc
icebp
mov
repz
clc
xchg
popl
lret
pop
movsl
inc
pop
jecxz
fstl
add
iret
ret
sbb
je
lea
cmp
lock
ja
push
mov
rcr
sub
int3
bound
push
mov
ret
mov
out
push
negl
mov
stos
dec
lcall
jo
popf
cmp
mov
jae
cld
call
xchg
dec
inc
lahf
rol
das
cmpl
cmp
out
clc
fsubr
push
and
dec
mov
inc
outsb
ljmp
pop
fsubrl
dec
cld
popf
push
out
mov
in
inc
daa
cmc
xchg
int3
push
xchg
in
adc
loop
push
pushf
outsl
dec
mov
ret
or
pop
xchg
insl
mov
sub
idivl
jg
jbe
xchg
dec
cs
outsl
lcall
and
jns
dec
or
pushf
das
aad
dec
or
iret
push
jae
xor
mov
addr16
repnz
cmp
mov
dec
add
aad
cltd
jne
mov
ljmp
mov
insl
sbb
aas
dec
pop
rolb
xlat
adc
xlat
pusha
outsl
cmp
std
dec
sbb
inc
dec
in
mov
and
add
out
into
push
inc
push
inc
xor
and
lods
and
imulb
push
sub
or
movsb
push
into
popa
mov
jno
data16
fsubrs
dec
sbb
pop
mov
decl
mov
jno
lds
daa
cmpsb
in
pusha
icebp
push
inc
leave
add
in
dec
add
clc
xor
pop
sbb
mov
cld
pushf
dec
cmp
aad
inc
std
movsl
push
or
push
mov
cwtl
popa
pop
xor
sbb
jl
cmpsl
in
xor
mov
inc
xchg
mov
test
sarb
shlb
dec
js
xlat
sub
cltd
sahf
repz
jmp
fs
ja
shlb
dec
inc
jmp
jb
ds
inc
sbb
push
int3
rcr
xchg
xor
ljmp
insl
pushf
out
xlat
push
orb
sti
out
push
adc
xchg
mov
gs
loopne
pusha
mov
hlt
cmc
dec
imull
aad
dec
ja
or
enter
ret
dec
sbb
popf
pushl
sahf
jns
add
sbb
scas
cmp
sub
and
mov
test
xchg
mov
mov
jae
jne
xchg
lahf
lret
push
xor
pushf
fstpl
cmpsl
loopne
sub
pop
push
push
addr16
xchg
movb
movsb
sbbl
fimuls
fbstp
push
sti
fs
out
shlb
dec
jmp
xlat
or
jp
dec
daa
sbb
adc
out
les
imul
clc
push
xchg
xchg
xchg
repnz
mov
sti
mov
dec
dec
xor
pop
push
push
push
xchg
ret
xchg
scas
sub
sub
lock
push
or
jbe
xor
jo
icebp
jnp
stc
mov
sbb
scas
sbb
pop
test
sbb
popl
and
fidivrs
movsl
lret
aaa
inc
mov
jno
dec
mov
lcall
mov
stos
sub
lods
mov
inc
jle
fwait
mov
lock
push
cwtl
push
push
mov
xchg
dec
jecxz
push
idivb
sub
xor
negl
mov
imul
scas
stos
mov
jecxz
push
xor
add
imul
adc
aaa
test
lret
pop
les
popa
or
pop
mov
int
movsb
in
pusha
mov
and
mov
push
mov
adc
jp
dec
push
cmp
test
mov
iret
aas
mov
mov
aad
xor
mov
popf
mov
xor
ja
daa
inc
mov
mov
daa
in
inc
push
dec
jbe
stos
aam
cmp
xchg
mov
notb
lahf
cmp
pop
mov
data16
mov
jae
mov
lcall
lahf
inc
in
aas
or
mov
dec
cmp
stos
lea
gs
pop
xlat
mov
les
dec
sbb
dec
jns
mov
pusha
scas
stos
mov
movsb
pop
xor
pop
lcall
jbe
stc
push
adc
std
cmp
lret
scas
sbb
jo
xchg
out
jge
dec
pop
mov
sahf
fs
mov
enter
leave
int3
xor
mov
data16
cmp
and
std
loopne
sahf
cmpsl
mov
inc
test
push
fwait
sub
nop
pop
xor
pop
rcrl
push
and
and
repz
and
xchg
pop
inc
sub
cld
ljmp
inc
sub
jbe
loopne
sub
mov
ds
push
and
shll
jb
ss
lock
outsl
add
outsb
arpl
jmp
mov
leave
mov
dec
addr16
mov
in
lcall
loopne
sti
in
cltd
mov
scas
imul
clc
and
cmp
mov
jnp
scas
shll
adc
rcll
pop
xchg
fldt
lds
fistpll
add
dec
lcall
mov
adc
int3
out
lds
icebp
jmp
ss
push
or
arpl
mov
ret
pop
adc
cwtl
icebp
xchg
icebp
in
xor
sbb
sub
mov
mov
stos
and
cmp
lock
mov
sti
inc
mov
cmpsb
int
out
or
dec
cmpsb
mov
xor
mov
or
dec
and
jmp
repz
xor
out
mov
fiaddl
and
dec
and
das
jecxz
test
cmpsb
and
sbb
rcrl
xchg
rolb
xchg
add
and
xchg
xchg
sub
sbb
mov
fisubs
xchg
int
lret
pop
sbb
mov
jle
out
lea
push
push
out
enter
mov
test
jae
hlt
shlb
mov
adc
int3
xchg
xchg
lock
sub
jl
mov
stos
xor
push
jmp
lods
pop
sbb
pushl
pop
lock
dec
aas
sti
pusha
push
push
xor
out
mov
mov
xor
adc
testb
adc
mov
sti
dec
push
adcb
push
enter
push
dec
mov
jg
sub
scas
int3
push
data16
mov
les
dec
pop
fmuls
test
sub
ret
mov
testl
cmp
cmp
mov
inc
and
dec
rolb
jae
out
jle
mov
stc
shlb
pop
sub
pop
xchg
and
aaa
dec
xchg
pop
pop
mov
xor
adc
add
popf
scas
jecxz
pushf
xchg
xorb
in
cmpsb
inc
sbb
repz
sbb
pop
loop
lock
xchg
mov
jp
inc
in
lret
mov
adc
push
mov
sub
roll
jae
and
ss
mov
aad
mulb
imul
xchg
adc
sbbb
push
jmp
sbb
and
flds
loope
aad
repz
xchg
mov
xchg
cmpsb
and
arpl
add
out
stos
pop
and
popf
jle
sbb
sbb
inc
jl
and
add
push
xchg
subb
cmp
mov
jno
repz
ljmp
jb
div
cmp
fsubp
cmp
jb
sub
pop
dec
popa
jge
jbe
subb
cmp
xor
je
and
and
out
cmp
adc
das
in
int
ss
or
xor
das
inc
pop
cli
jg
adc
in
clc
iret
add
and
or
dec
and
cmp
sarl
inc
movsl
movsb
fst
xor
xchg
movsl
fs
or
push
test
xchg
into
leave
fwait
inc
adc
fiaddl
and
mov
jge
xchg
xchg
inc
pop
lods
inc
aas
mov
jp
adc
jns
mov
insl
or
cli
dec
dec
fidivrl
leave
pop
mov
jns
cmp
ljmp
mov
xchg
pop
fisttpl
sbb
ficomps
push
push
clc
adc
insb
add
and
adc
jmp
sbb
repz
mov
scas
test
lds
xchg
popa
add
lahf
fdivs
sti
sbb
cmp
push
mov
inc
cwtl
xchg
clc
mov
mov
jl
ficompl
or
or
mov
mov
scas
xchg
fisttpll
add
mov
pop
scas
rclb
out
in
icebp
lret
xor
adc
hlt
pop
dec
adc
push
xor
sbb
loopne
xor
hlt
lcall
cs
xor
cmp
popf
push
mov
fiadds
adc
add
xor
into
jne
stc
mov
lea
jecxz
sub
icebp
cmp
mov
scas
outsl
pop
aas
xor
mov
mov
aam
fcoml
add
mov
scas
pop
adc
pop
mov
movl
lahf
scas
or
loope
ret
inc
or
pop
imul
nop
cltd
jmp
rolb
xchg
mov
fisttps
jne
mov
add
loope
dec
clc
and
mov
pop
repnz
inc
jge
out
in
sbb
lock
pushf
in
add
out
jp
stos
pop
cld
pushf
pop
sub
push
bsf
cwtl
lret
les
xchg
mov
data16
sbb
mov
inc
nop
frstor
mov
jmp
test
xchg
es
es
adcb
push
outsb
mov
inc
push
popa
mov
pop
pop
mov
and
sub
mov
popa
hlt
daa
fptan
out
jno
mov
mov
xorb
cmp
dec
js
jae
sub
sub
push
push
jge
mov
movsl
cmp
dec
and
jmp
jbe
pusha
lock
clc
stos
xchg
mov
stos
stos
inc
sub
mov
xchg
mov
fnstsw
xchg
mov
sbb
xchg
mov
repnz
lret
cld
jmp
fldl
mov
adc
out
rcrl
mov
mov
mov
mov
rorb
lods
subl
or
mov
hlt
jne
data16
jl
je
das
cmp
xchg
aaa
push
add
adc
mov
adc
inc
rep
int3
sub
push
rolb
cld
arpl
inc
loop
sbb
and
movsl
loop
and
shlb
add
stc
dec
ljmp
ja
pop
popa
mov
rol
adc
int
lds
mov
mov
cmp
jbe
xchg
repz
add
std
and
mov
imul
ret
fsts
int3
ret
aaa
outsl
xchg
mov
inc
xchg
xchg
lods
pop
push
sbb
hlt
rclb
fistl
or
out
nop
dec
push
add
data16
mov
jp
popf
mov
cld
das
repnz
sar
sbb
pop
xchg
mov
shll
popa
sub
or
jg
mov
xchg
adc
jle
push
jmp
gs
das
adc
into
negl
mov
js
adc
fimull
addl
add
xchg
lret
hlt
jmp
cmp
mov
push
cs
mov
push
les
test
inc
rcll
imul
cmp
xchg
push
xchg
jo
xor
out
jnp
sbb
loopne
stc
adc
scas
dec
mov
sbb
adc
mov
add
mov
cltd
dec
push
enter
mov
cmp
cli
test
jmp
and
cmpsl
cmp
fimull
or
aas
cltd
scas
push
adc
mov
mov
sbb
clc
lods
mov
movsl
inc
sub
push
enter
in
test
xor
nop
mov
ficompl
ret
pop
mov
sub
mov
std
test
cli
pop
mov
jp
ret
xchg
cli
jno
filds
add
pop
bound
push
lods
inc
nopl
push
xchg
mov
push
push
and
sub
mov
sbb
jmp
inc
xlat
or
loop
or
test
inc
cmp
jl
imul
cmp
mov
popf
lret
loope
push
clc
push
dec
fdivrs
mov
or
pop
addl
pop
out
pop
push
addr16
ja
xchg
and
repnz
lea
pop
fmul
test
adc
movsl
loopne
adc
dec
mov
xchg
repz
aas
xlat
sbb
jmp
rclb
lcall
aam
xchg
popf
fsubrs
es
adc
push
pop
cwtl
js
sub
mov
aas
mov
xor
iret
sbb
push
dec
mov
das
loopne
inc
sub
inc
push
add
andl
mov
jb
inc
cli
jmp
in
or
push
stos
mov
gs
sbb
push
jae
imulb
inc
in
push
sub
loopne
pop
or
cmp
pop
xchg
lods
es
stc
outsl
shrl
out
sub
lock
sbb
mov
xor
pop
mov
xor
dec
inc
cmp
mov
rcrl
push
xor
adc
scas
push
imul
test
and
push
imul
loopne
mov
xchg
pop
insb
inc
aam
orb
mov
xor
cwtl
and
nop
pop
stc
pop
mov
or
dec
popa
or
lea
sahf
sub
fcompl
push
cmc
fidivl
js
jnp
and
subb
mov
inc
mov
arpl
mov
xlat
pop
shl
lret
loopne
lret
xor
dec
pop
dec
insl
mov
aaa
js
inc
jl
jp
cmpsb
push
loope
lods
pop
or
push
mov
sub
setno
roll
test
mov
fs
or
pop
mov
and
scas
test
push
movsl
xchg
pop
fsubl
and
cmp
loopne
js
sti
xchg
cmp
mov
sbb
mov
jns
jno
dec
inc
cwtl
cli
subl
mov
rcll
sub
or
dec
insb
push
pusha
jmp
sbbl
jge
out
fisubl
rclb
in
mov
sbb
inc
mov
sti
jb
mov
inc
push
ret
rcrl
rclb
in
xchg
out
mov
lret
lret
inc
dec
cmpsb
enter
ljmp
lods
push
cmc
insl
fwait
jge
inc
xchg
das
stos
sbb
dec
bound
loope
and
inc
es
sbb
ret
mov
mov
and
icebp
outsl
inc
out
pusha
push
xchg
pop
daa
test
pop
enter
aas
ret
pushf
fdivrp
adc
orb
rcrb
add
test
jnp
sbb
mov
mov
fwait
js
cmpsl
xor
subb
test
arpl
mov
inc
and
std
arpl
dec
ja
pop
xor
xor
push
jge
mov
add
aam
scas
addr16
inc
or
adc
push
sub
xor
imul
je
out
mov
aam
popf
push
sbb
out
mov
or
sbb
cmp
pop
aas
loope
popa
je
xchg
in
lcall
test
das
leave
scas
add
sahf
xor
or
movsb
movsl
imulb
sub
aad
pop
test
ss
and
out
lret
lds
jmp
iret
enter
pop
loopne
jle
push
push
fs
mov
int
sti
imul
add
fwait
cmp
adc
adc
aad
shlb
nop
mov
inc
in
sbb
xor
cmp
xchg
mov
sbb
test
mov
sub
js
scas
icebp
inc
addr16
sub
push
adc
and
adc
pop
jno
lds
xchg
and
sbb
push
ja
pushf
adc
and
lock
in
rorb
pop
pop
in
push
sarb
add
scas
fsubrs
imul
sbb
adc
push
xchg
inc
mov
dec
enter
mov
inc
xor
stos
mov
jge
lcall
xor
iret
cmp
insb
mov
add
mov
jge
jl
mov
dec
sbb
jae
cli
mov
addr16
aaa
fwait
sub
mov
cmp
aas
imul
add
sbb
cltd
mov
jmp
fnsave
daa
movsl
dec
inc
aas
inc
mov
sub
scas
dec
fsubl
sbb
shll
push
mov
pop
nop
push
rcrl
cmpsb
jge
fildll
movsb
aaa
imul
ds
and
sarb
jnp
imul
jne
outsb
adc
enter
sbb
lods
add
mov
mov
das
out
lret
loope
inc
loope
pop
jl
push
dec
and
jge
adc
lods
mov
ds
mov
adc
or
lret
lods
ss
pop
mov
mov
xor
jecxz
inc
jns
xchg
jp
outsb
jb
stc
mov
mov
push
sbb
jge
fisubrl
sarb
pop
popf
mov
mov
popa
mov
leave
or
add
decb
dec
movsl
jecxz
mov
jae
arpl
push
shl
jbe
pusha
sbb
xchg
xchg
fwait
and
lcall
cmp
xchg
aaa
in
xchg
gs
mov
sub
add
dec
push
mov
popf
lcall
stos
cmp
pop
cmc
das
in
ss
ret
mov
xchg
fwait
lahf
add
in
cli
push
add
outsl
push
jo
cmp
loope
dec
flds
sub
ljmp
push
push
mov
dec
stc
inc
fisubrs
cmp
cmp
inc
shlb
push
scas
jne
loope
adcl
cmp
lea
mov
stos
lods
iret
sub
pop
cmp
pop
sub
movsb
jl
jecxz
jnp
gs
outsb
fdivrl
mov
sti
mov
int
jg
dec
xor
pop
punpckhbw
je
out
jnp
pushf
lods
pop
popa
push
jg
xor
out
loope
jl
sub
adc
xchg
in
mov
repnz
popf
add
repz
push
rcr
hlt
out
mov
mov
sbb
popf
push
push
int
mov
ret
pusha
jb
adc
lret
jp
pushf
in
mov
sub
sbb
add
push
aad
lcall
mov
inc
fwait
scas
cmp
push
adc
loope
inc
fsubrs
sub
iret
pushf
xchg
int
jge
inc
scas
xchg
movsl
cmp
pop
pop
sub
scas
cmp
pop
popf
mov
push
mov
gs
sub
mov
movlps
cmpsl
push
jge
adc
inc
dec
or
jp
jge
pop
nop
ret
std
test
mov
ret
jp
jmp
mov
inc
stos
lahf
popf
push
pop
jbe
add
fdivl
jo
cmpsl
in
mov
sub
mov
mov
fimuls
mov
in
push
call
xchg
pushf
mov
xchg
sbb
mov
addr16
push
inc
sbb
stos
inc
outsl
push
int
unpcklps
loope
shr
xlat
jo
cltd
or
pop
fs
sub
aad
jbe
add
fwait
inc
and
xor
dec
pop
out
jg
inc
cmp
or
cs
sub
mov
mov
and
lcall
mov
jmp
in
pusha
cmc
sub
sub
sub
xchg
mov
subb
mov
mull
repnz
cld
dec
or
mov
jnp
sar
mov
mov
icebp
pusha
aas
icebp
dec
sub
fiadds
inc
cmc
ret
or
sbbl
aas
aad
ss
mov
lea
pop
cmp
out
ljmp
popa
pop
mov
pop
add
mov
fwait
xchg
testl
sub
outsb
mov
ret
cs
call
push
cmpsl
pop
mov
mov
xor
addb
int3
xor
ret
popa
divw
mov
imul
pop
adc
push
inc
or
inc
insl
lret
sbb
push
mov
cmp
int3
lds
jge
xor
or
test
popa
sub
pop
fcmovnb
mov
ljmp
sbb
hlt
sbb
cs
cmpsb
dec
sbb
loope
lock
mov
dec
jns
xorl
fistl
add
add
push
add
push
movsb
repnz
shl
add
mov
mov
inc
imul
pop
fsubrl
push
xchg
pop
xor
mov
roll
insb
sub
xor
mov
push
in
clc
cltd
imul
jge
mov
dec
addb
xchg
mov
mov
push
insl
cmc
icebp
outsb
div
mov
lods
mov
dec
jne
xchg
mov
mov
and
push
mov
fwait
les
dec
cmc
push
incl
mov
xlat
xchg
sbb
mov
into
outsb
ss
jne
call
movsb
xor
or
mov
cmp
xchg
lods
fwait
sub
inc
mov
outsb
imul
push
mov
dec
imul
mov
push
rcll
inc
pop
dec
clc
insl
std
mov
aaa
insl
lahf
movsb
push
and
imul
lods
jge
std
mov
mov
xchg
aaa
xchg
nop
iret
test
inc
adc
cwtl
jnp
rcrl
sub
or
or
add
shlb
mov
inc
popf
jbe
rorl
push
mov
cmc
sbb
inc
call
repnz
imul
test
ljmp
lret
sbb
and
aam
dec
test
inc
pop
add
dec
adc
filds
sarl
inc
imul
cmp
pop
xchg
jne
add
jmp
into
ficomps
mov
dec
sahf
pop
outsl
cmpsb
outsb
sbb
test
lcall
jl
repnz
cmp
ja
pushf
lret
sbb
imul
dec
ret
daa
shrl
xchg
dec
sub
jmp
inc
inc
or
jle
sub
stos
shrb
add
mov
adc
testl
inc
rol
jp
dec
cmp
add
and
cmp
mov
mov
adcl
dec
jbe
insl
cltd
repz
mov
and
nop
xlat
add
popf
push
mov
pop
jmp
subb
lahf
inc
push
or
jne
sub
or
jno
in
sub
es
xor
xor
int3
sub
jp
pushf
in
mov
aam
xchg
enter
in
xchg
jge,pn
ret
pusha
out
mov
out
ljmp
pop
in
int3
ret
jge
repz
fnstcw
mov
or
jo
js
mov
andb
adc
cmc
or
subb
push
and
rcr
fistpll
loop
adc
and
out
addr16
lret
sbb
mov
sub
push
cmp
aas
fwait
sti
test
jp
ds
shll
sub
dec
and
dec
push
xor
out
xlat
sbb
int3
dec
pushf
lcall
cli
cmpsl
int
cmpsb
das
in
fistpl
push
cmp
cwtl
and
add
pop
jbe
or
cmpsl
hlt
js
mov
ds
add
and
hlt
adc
mov
out
add
cmp
jne
fldcw
push
movsl
xchg
fstpt
pop
insb
repnz
jecxz
sbb
adc
jo
pop
push
shll
xorb
out
pop
or
push
shrb
bound
into
pushf
loop
nop
xchg
ds
stc
cmpsl
dec
mov
cmp
movsl
fdivr
xor
jecxz
rcr
pop
cwtl
shlb
stos
mov
fimull
sub
in
fstpt
iret
dec
push
sub
inc
haddpd
xor
and
inc
or
lock
cwtl
cmp
lret
je
cld
adc
cmpsl
out
cmpsb
bound
in
cmp
lods
xchg
sbbl
rcll
addr16
sub
imull
loope
xchg
lods
filds
dec
jmp
add
rolb
icebp
jbe
dec
cld
fcoml
or
rolb
xchg
cmc
dec
ficomps
mov
cmp
mov
subb
sub
add
negb
es
add
jp
cmp
repnz
cmpsb
push
mov
and
fiadds
xor
lods
jbe
or
sub
mov
sti
xchg
adc
ficoms
sub
mov
and
jge
stc
push
sbb
xor
iret
inc
xor
popa
mov
sbb
lahf
addb
cmp
fs
insb
imul
pop
roll
push
xor
fidivs
adc
jb
mov
outsl
mov
or
insl
cld
push
lcall
and
jae
sbb
sub
call
pop
test
xor
sub
outsb
xchg
stos
fs
add
js
mov
fcoms
mov
mov
or
pop
adc
push
hlt
sub
sahf
adc
in
xchg
cli
cmp
mov
cmpsl
xchg
outsl
int3
addb
outsl
inc
lock
xchg
cs
push
or
push
das
push
test
mov
adc
inc
js
fistl
pushf
cmpb
cmp
push
in
ljmp
sub
int
add
insl
fdivrl
mov
out
pop
outsl
push
lea
insl
cmp
inc
mov
dec
jnp
jbe
sub
jmp
pusha
xor
inc
pop
mov
or
inc
pusha
icebp
shl
lret
mov
pop
div
mov
test
mov
lret
fdivl
pop
inc
lods
inc
in
push
je
in
push
int3
mov
ja
fldcw
mov
test
nop
or
push
inc
dec
jns
je
push
ljmp
sub
scas
xchg
add
sbb
loopne
out
mov
in
xchg
ds
cmp
xchg
xchg
jg
aaa
pop
mov
push
push
sbb
mov
push
pop
sub
sub
lock
out
and
pop
mov
ret
jg
int
cmp
aad
aaa
sbb
idivb
es
scas
and
push
fiadds
jecxz
mov
cmc
push
in
insb
clc
mov
testb
movsl
dec
jge
popf
test
jl
mov
in
fistpl
ret
xor
dec
pusha
ret
imul
jmp
and
test
xchg
mov
pop
add
ret
or
push
mov
data16
loopne
mov
or
jbe
int3
mov
xchg
jae
icebp
push
and
and
jb
imul
ret
std
ss
repnz
push
pop
mov
insb
or
dec
loopne
fdivrl
scas
and
aaa
stc
mov
adc
bound
out
pop
cmp
jo
out
jno
sbb
or
xchg
add
or
insb
lahf
jne
jg
loope
into
cwtl
sbb
shl
inc
fcoml
mov
mov
and
cs
inc
xor
fisubrl
xchg
repz
push
in
dec
or
sbb
pop
xlat
addr16
stos
cmp
jne
inc
js
xchg
sti
inc
xor
sub
insl
xlat
iret
mov
std
sahf
sahf
xchg
sub
inc
push
sub
nop
xor
in
adc
cs
cmp
or
sbb
jae
in
cld
add
xchg
in
dec
lret
inc
enter
mov
jne
mov
sub
adc
and
inc
xchg
bound
xor
loop
aas
adc
xchg
xchg
cltd
in
test
gs
jl
imul
mov
jo
xor
mov
xchg
pop
push
lods
sahf
jae
int3
dec
pushf
push
notb
pushf
bound
lds
lcall
jns
sbb
lret
lods
repnz
jns
outsl
sub
and
das
fdivrl
add
jo
or
aas
test
or
or
repnz
out
mov
xchg
mov
and
stos
cmovb
or
ljmp
jmp
cmc
cli
add
mov
sarb
sub
mov
jae,pn
jno
push
int
popf
add
xlat
xchg
mov
cld
test
cmc
dec
mulb
mov
xor
outsl
and
scas
sub
mov
dec
push
in
lret
loop
arpl
and
out
out
adc
mov
xchg
xor
jg
cmc
add
rorb
fldz
hlt
push
aaa
add
and
popf
repnz
xor
push
lret
add
cli
sbb
cli
and
xchg
icebp
and
sarb
mov
sbb
pushw
mov
add
pop
loop
les
mov
pushf
test
adc
rcrl
cmp
movsb
add
sub
cmp
das
mov
jns
mov
test
jle
repnz
pop
inc
pusha
pop
add
sarb
fimull
mov
mov
aas
das
fcoms
imul
sarl
mov
jle
sbb
pop
inc
push
sbb
pop
pop
add
inc
sbb
add
lds
shr
or
push
pop
in
cmpsb
dec
dec
mov
cwtl
mov
std
xor
dec
sub
cmpsl
mov
mov
fwait
dec
repz
mov
mov
stos
movsb
or
mov
xor
add
stos
sub
xchg
adc
call
lcall
push
ds
inc
push
sbb
push
pop
and
ret
sbb
aaa
imul
push
xor
aaa
xchg
push
or
pop
xchg
jnp
push
fcoml
mov
test
sbb
repnz
sub
mov
call
jecxz
ss
into
sbb
adc
imul
mov
lcall
add
pop
adc
into
rcll
call
jo
xchg
cmp
fs
out
mov
or
loope
loope
lock
mov
jno
arpl
leave
push
in
data16
pop
xchg
mov
jno
rsm
jg
pop
lahf
dec
ficoml
jb
mov
jbe
push
in
rcrl
cmpsl
das
pushf
inc
and
cmp
jmp
mov
jmp
imul
in
push
cld
add
clc
sti
xor
inc
jns
test
cmovp
mov
outsl
andb
xchg
lods
setno
lret
push
mov
mov
cmpsb
sti
jb
adc
fiaddl
dec
jnp
test
stos
xor
pushl
xlat
jbe
aam
cli
mov
movsl
ss
stos
sub
inc
push
cmp
imul
mov
dec
stos
and
sub
inc
push
mov
pop
mov
repz
out
popf
and
push
rorb
sub
test
sub
mov
jb
push
fsts
xchg
js
or
push
sbb
jge
rcll
ds
rorl
mov
test
test
ss
leave
aas
sbb
outsl
mul
scas
mov
ja
sbb
mov
mov
pop
inc
push
cs
leave
pop
xchg
and
pop
jbe
fidivs
loope
aas
xor
stos
xchg
ret
push
test
push
inc
cmpsb
mov
xlat
insb
dec
popa
mov
jle
outsl
cmp
rcrb
jno
push
loop
or
popa
repz
sbb
push
pusha
inc
push
aas
into
push
inc
xor
push
cmpl
jb
or
jle
movsb
xchg
jbe
dec
and
fstps
cmp
jle
adc
push
sub
jmp
in
and
xor
fists
lods
lcall
nop
push
inc
adcl
pop
mov
dec
nop
or
cmpsb
sti
clc
jp
ror
inc
ljmp
jo
sub
xor
mov
inc
in
arpl
ja
hlt
lods
hlt
shll
xor
xorl
fmul
cltd
dec
lea
or
mov
arpl
xor
push
imul
fsts
mov
stc
testb
repnz
sahf
cmp
stos
sub
mov
sub
ljmp
push
scas
fs
dec
push
ljmp
cmp
ret
bound
lock
or
jo
fs
add
js
fldl
lret
push
add
cmp
jl
push
push
and
mov
cltd
adc
add
lock
mov
push
add
daa
cmpsb
jne
leave
dec
test
ds
int3
fsubs
dec
and
xchg
jnp
dec
dec
sub
pop
lahf
in
inc
mov
inc
ss
jno
mov
insb
cs
lock
cmp
jle
push
jge
ror
dec
in
sbb
jne
mov
jge
cwtl
arpl
leave
roll
es
mov
enter
xlat
das
jne
cmp
pushf
pop
mov
add
vhsubpd
dec
aam
mov
add
subl
movsl
xor
sbb
fimuls
sub
dec
fmulp
push
aam
xchg
xorb
mov
cmc
mov
jge
inc
pop
in
mov
js
in
sbb
or
pop
jne
cltd
jnp
pop
mov
jl
aam
fstpl
push
movsb
and
or
dec
xor
andl
iret
add
insl
int3
fdivl
test
mov
imul
in
sti
movsl
xor
ja
ret
pop
imul
decl
pushl
dec
pop
out
dec
scas
imul
adc
ficoml
sahf
xchg
rclb
mov
xor
repz
cld
push
push
sbb
push
test
lods
sahf
nop
stos
aam
inc
mov
in
push
nop
clc
mov
xchg
ret
dec
xor
testb
jecxz
dec
fistpl
nop
test
xchg
es
push
add
dec
xchg
scas
mov
jp
xchg
xchg
subl
out
xchg
gs
and
andl
fbld
and
or
jl,pn
ret
sti
leave
cmp
insb
xchg
fldenv
outsl
or
adc
inc
in
or
pop
test
sarb
fistl
inc
movsb
lret
mov
pop
cwtl
jae
insb
xchg
adc
test
xorb
sub
in
sbb
push
mov
and
jge
push
mov
subl
pop
inc
or
les
dec
mov
mov
adc
inc
bound
add
pop
cmpsb
shrl
mov
cmp
jge
inc
std
add
dec
mov
nop
xchg
mov
cmpsb
xchg
add
xchg
iret
fldl2t
sbb
pop
add
add
mov
pop
xchg
jp
jg
add
roll
add
pusha
sbb
scas
fbstp
mov
insl
xchg
roll
xor
fadd
xlat
pop
cmp
mov
mov
push
xor
add
mov
or
push
dec
mov
mov
test
pop
pop
in
xor
cwtl
int3
sbb
imul
sbb
jmp
cmp
and
int
aad
test
mov
dec
xchg
xor
push
fnstsw
mov
loope
dec
sti
or
push
sti
dec
jle
or
mov
das
dec
and
test
inc
negl
orb
test
sbb
nop
arpl
shl
pushf
or
outsl
pop
and
cmp
ss
xor
adcl
pop
negl
pop
push
aas
sbb
addr16
fidivs
jne
sub
mov
add
xchg
scas
inc
cmpsb
pop
lea
xor
movb
aad
add
mov
inc
dec
fsubrl
into
pop
or
andl
sbb
ja
inc
stos
sbbb
or
inc
pushf
jo
lods
arpl
inc
test
pop
mov
cltd
aam
sub
xchg
or
ja
and
push
mov
mov
mov
xor
dec
cltd
dec
jecxz
cmc
xor
pop
cmpsl
push
sbb
push
lock
jp
int
push
lret
aas
cltd
push
and
pop
cmpl
sti
sbb
dec
iret
sub
mov
out
loop
int3
icebp
dec
loope
out
dec
out
or
sub
pop
fdiv
aam
addl
mov
leave
imul
fwait
cmc
mov
ret
push
ljmp
add
xchg
pop
popf
in
xor
sub
or
clc
cwtl
pop
or
xor
jg
cs
and
out
rcrl
cmpsb
stos
out
sbb
pop
jp
fs
pop
xor
lret
popf
or
test
test
cmp
adcl
orl
popa
movsb
push
mov
mov
cwtl
pmuludq
out
jle
mov
decl
fsts
das
sub
inc
jno
pushf
xchg
shrb
cmp
es
push
cltd
xchg
mov
iret
divb
aam
jg
mov
xchg
test
pop
popa
out
rep
mov
mov
insb
mov
mov
loope
xlat
or
push
cld
scas
ds
stos
fidivrl
xor
testl
mov
mov
pop
insb
xchg
stos
test
popa
dec
cmpsl
sub
or
iret
add
mov
inc
sub
scas
jecxz
shrl
lods
leave
popa
inc
xchg
test
or
repnz
rcrb
in
je
stos
or
lods
sub
mov
jno
out
or
movsb
js
pushf
lret
fucomp
dec
cmp
aam
pop
pop
fists
pop
cmp
jmp
in
shll
fwait
sbb
and
pop
movsb
out
stc
dec
shlb
scas
pop
and
and
imul
pop
xchg
xchg
jg
xchg
dec
repnz
fidivrl
jl
fisttpl
lods
movsl
mov
cmp
mov
push
loope
out
xchg
xor
xor
nop
stc
loope
imulb
pop
hlt
int
push
paddsw
test
test
stos
pop
cmp
in
rorb
aaa
push
add
lods
mov
in
inc
jmp
mov
out
cmpsb
clc
cmp
in
lea
js
movsb
dec
jle
xchg
push
jmp
add
add
mov
out
jecxz
mov
movb
aaa
rorl
pop
mov
sbb
cmp
out
mov
hlt
ret
add
ja
aaa
inc
ljmp
sbb
aas
xor
mov
xchg
push
xor
jle
ljmp
lret
clc
sub
pop
jg
pushf
jmp
ret
loop
mov
popl
roll
sbb
stos
stos
mov
aad
mov
inc
dec
add
adc
adc
xor
sbb
mov
adc
mov
sub
dec
mov
fnstsw
pop
cmp
sub
xorl
aas
lret
cmp
es
in
rclb
clc
dec
std
fldcw
lcall
dec
sbb
mov
ja
ret
nop
popf
mov
fs
je
pushf
adc
nop
push
mov
dec
insb
mov
pop
pop
pushf
mov
pushf
push
push
push
push
out
push
or
push
insl
sub
xor
xchg
das
and
inc
mov
cmpsb
mov
mov
sahf
jne
fwait
rclb
xchg
jne
or
cmp
mov
push
cmp
dec
das
mov
imul
test
aad
adc
add
fs
ret
lret
inc
lahf
jl
pop
mov
jo
pop
mov
dec
cmp
int3
inc
lea
bound
into
pop
aam
cmp
lret
je
dec
pusha
divl
loopne
ss
mov
dec
or
jmp
sbb
pop
mov
cltd
xor
ret
mov
sahf
pop
in
sbb
pop
mov
shll
ret
cmpsb
jno
nop
mov
push
mov
mov
sti
mov
xchg
lock
int
jb
je
add
inc
sbb
jecxz
push
dec
jbe
in
xchg
pop
inc
or
and
inc
sarl
jecxz
aad
mov
xchg
dec
test
insb
fisttps
dec
push
jns
cmp
add
sub
stc
mov
notb
add
rcrl
add
out
dec
xor
add
push
mov
in
xchg
scas
mov
inc
jg
mov
push
gs
inc
mov
mov
push
ret
stos
std
sbbl
mov
andl
dec
scas
dec
xchg
and
mov
iret
roll
cmp
xor
and
pop
push
ret
inc
inc
or
jecxz
adc
xlat
or
pop
push
inc
fildll
and
in
shlb
pop
sub
out
nop
pop
enter
jle
bnd
enter
les
clc
nop
lods
rcll
cmp
push
mov
mov
loope
jb
arpl
push
ljmp
and
mov
push
in
push
and
rcll
mov
jne
sbb
sbb
nop
mov
inc
out
xchg
stos
popa
rolb
fmull
outsb
add
xchg
dec
gs
pop
out
push
or
cmpsl
in
or
ret
mov
push
stos
out
fcoml
in
add
in
hlt
mov
jge
loopne
sub
mov
sbb
xchg
into
push
in
pop
into
and
loopne
aam
roll
cltd
std
lret
sub
pop
loope
add
or
xchg
lret
mov
fadds
mov
mov
cmc
fucomi
movsl
paddd
test
or
loopne
push
jg
popa
add
dec
xor
hlt
pop
mov
inc
cmp
lahf
rcrl
cwtl
cmc
repz
or
inc
inc
jmp
mov
add
dec
xchg
fisubrl
pushf
mull
pop
sub
cmpsb
icebp
or
das
shl
hlt
cwtl
jb
xchg
xchg
jmp
aas
cmc
jne
gs
inc
into
addr16
nop
arpl
gs
pop
add
and
mov
xchg
xchg
icebp
rcll
fs
ret
icebp
cmp
or
jmp
popf
cmp
imul
pop
arpl
fistl
mov
and
cwtl
out
and
pop
mov
mov
mov
inc
mov
shlb
xchg
mov
gs
in
add
dec
call
dec
repnz
mov
and
pop
ret
into
mov
xor
outsl
cld
dec
iret
int3
push
fists
loope
mov
xchg
and
and
or
bound
mov
imul
mov
or
sbb
imul
jle
pop
sarb
aaa
mov
fnstcw
movl
popf
loop
xchg
ss
or
rcll
dec
cld
aas
cmpsl
lods
icebp
mov
inc
xchg
xlat
pop
repnz
in
sbbl
add
into
adc
scas
mov
inc
push
xor
mov
int
outsl
or
add
inc
dec
mov
ds
adc
jp
mov
imul
jbe
sub
mov
inc
inc
push
sub
mov
imul
test
imul
outsb
jae
out
pop
xchg
mov
int3
inc
movsl
mov
ret
sbb
cmp
stc
cs
jle
mov
jns
rcrb
sub
mov
jecxz
stos
stos
push
ljmp
and
dec
push
jb
push
xor
pop
cli
xchg
les
inc
cwtl
jns
adc
mov
xlat
sbb
sbb
ret
inc
dec
pop
xchg
sbb
fdiv
mov
pusha
fs
mov
in
jno
rcrl
jae
inc
sbbb
subb
sub
mov
fs
cmp
sub
icebp
pusha
and
push
lret
mov
fistps
jp
push
fdivrs
cld
loope
jns
or
lds
mov
call
lds
jo
out
mov
bound
inc
addr16
sub
scas
int
clc
pop
shrl
ret
ret
inc
sti
in
cmp
mov
dec
hlt
fs
sub
add
sbb
jecxz
cmp
ds
mov
mov
push
pop
sti
or
cmp
flds
call
xor
inc
and
out
xor
and
mov
cmpl
movsb
lods
jmp
add
ja
mov
sbb
pop
outsl
mov
andb
pop
out
aas
dec
sbb
xor
push
push
aad
cmp
imul
jns
and
sbb
jp
sub
sbb
sbb
sbb
mov
cmp
cmc
mov
xor
jbe
es
call
hlt
insl
cmp
or
push
dec
gs
pop
out
push
xchg
or
sbbb
xchg
xchg
sbb
push
or
and
xchg
daa
sbb
cmc
enter
xchg
mov
stc
jmp
and
icebp
in
sbb
jno
fisubrl
sbb
aam
out
int3
cli
les
sbb
inc
shl
in
xor
mov
test
roll
sbb
xchg
sbb
inc
mov
outsb
jnp
jne
jnp
aad
dec
jg
aam
jo
xor
repz
mov
pop
outsl
pop
push
addl
or
and
bound
adc
test
mov
cmpsb
cmc
rcl
add
cwtl
lock
xor
sbb
mov
mov
xchg
jb
dec
ds
fscale
pop
ret
sbb
jnp
pop
lods
mov
daa
aas
enter
idivl
push
cmp
ljmp
xlat
and
mov
mov
or
cld
into
in
in
mov
das
arpl
rcl
and
jns
fdivl
adcl
leave
push
xor
jo
or
pop
add
pop
or
ficoms
inc
jge
data16
xchg
hlt
aas
pop
mov
lock
js
inc
cmc
mov
pop
xor
jnp
lret
repnz
mov
sbb
rorb
lahf
out
lock
lahf
insl
iret
jle
adc
stc
sub
jbe
add
in
and
xchg
cli
and
lds
xor
clc
enter
or
movsl
jnp
sub
sbbb
xlat
hlt
sbb
out
jbe
cmp
xor
mov
icebp
repz
je
inc
mov
xchg
sub
mov
mov
xchg
inc
mov
sbb
push
mov
pop
test
lahf
xlat
adc
cwtl
and
repnz
or
int
popf
sbb
inc
pop
xchg
dec
or
ljmp
movsb
sub
call
adc
xchg
sbb
mov
sub
dec
push
andb
adc
dec
add
push
pmuludq
jo
dec
ss
push
enter
orb
or
sub
cli
out
mov
inc
jle
inc
mov
test
scas
aas
andl
incb
pusha
jae
dec
sbb
inc
mov
cld
stos
sbb
jl
cs
cmp
jb
hlt
mov
sub
jge
or
mov
or
mov
mov
jnp
cmpb
lock
mov
repnz
leave
xor
ss
dec
mov
mov
pop
adc
out
sbb
test
inc
push
imul
imul
inc
adc
jl
add
daa
dec
mov
jno
sbb
clc
data16
xor
shr
xor
pop
sbb
repz
mov
pop
add
jae
or
imull
std
cmp
inc
sub
out
jp
in
lock
sbb
pop
adc
jo
mov
or
and
sbb
pop
add
lds
jmp
xchg
pushf
push
sub
jno
cmc
stc
xchg
or
inc
xor
in
cmp
aas
cs
pop
dec
xor
jae
gs
cmpsb
xchg
xor
sub
jg
nop
pop
lds
add
shrb
mov
cmp
push
movsb
cmp
mov
inc
xor
popa
adc
jmp
add
fimull
sub
and
pop
pop
cmp
and
negl
cmpsb
push
imul
sbb
cltd
mov
xchg
push
in
pop
mov
sbb
scas
sbb
sub
pop
push
jnp
mov
mov
ds
mov
cwtl
adc
sti
inc
imul
lods
loope
repz
push
cli
push
add
aaa
xchg
xor
or
fimull
in
test
orb
mov
push
mov
inc
xor
imul
sti
pop
add
ret
ret
insl
xorb
fwait
movsb
jp
mov
cmpsb
push
lret
dec
sbb
lahf
lahf
adc
cmc
out
xchg
add
cld
mov
mov
pop
mov
mov
jne
test
and
test
adc
test
mov
cmovno
inc
outsl
mov
cmp
pop
push
sub
repnz
clc
push
dec
push
in
cs
lret
arpl
cmp
daa
pusha
or
push
cli
pslld
test
mov
lret
nop
ficoml
pop
scas
out
add
push
mov
hlt
pop
lock
lahf
cwtl
packsswb
lock
lock
xchg
fwait
test
int3
sahf
ret
mov
cltd
or
test
mov
jnp
fsub
scas
dec
xor
mov
test
xchg
sub
push
jo
je
stc
jne
jecxz
int3
mov
jmp
or
in
js
and
adc
jo
test
and
outsb
inc
mov
fldt
sbbl
imul
xchg
jmp
sbb
or
xchg
cmp
inc
incl
enter
adc
outsb
fmull
jmp
pop
sub
sbb
ss
pop
sbb
sub
les
pop
negl
das
cmpb
je
into
call
sbb
sarl
mov
loope
out
mov
fs
lods
scas
xchg
cmc
xor
incl
jg
mov
inc
sbb
mov
xchg
jg
cli
scas
pop
push
jmp
inc
add
add
cmpsb
inc
or
xor
or
adc
mov
unpcklps
push
push
loope
xchg
daa
pop
addb
jg
std
cli
mov
icebp
push
xor
push
mov
mov
out
sbb
mov
pop
pop
sahf
gs
jg
jb
andb
cmpsl
daa
ds
jnp
sub
js
lods
mov
imul
fisubrl
out
jo
jne
sub
or
cli
mov
imul
adc
filds
lret
subb
mov
jmp
mov
aad
pushf
ja
dec
test
in
dec
fwait
add
mov
out
inc
pop
test
or
push
xchg
push
fidivl
out
out
add
xor
add
out
lock
sub
xor
push
rcrl
ffreep
mov
mov
mov
lea
jno
popa
js
xchg
dec
rorb
and
push
outsl
inc
add
push
dec
repz
loop
es
stc
cmpsl
add
pushf
rorl
mov
push
je
out
xor
push
fimull
movsl
and
or
andl
in
call
std
sbb
push
or
push
mov
sahf
cmpsb
sub
test
data16
jle
test
out
fstps
jg
pop
int3
lahf
shr
push
les
mov
dec
pop
leave
addr16
andl
fisttps
ret
pop
mov
mov
mov
adc
arpl
adc
mov
les
out
lods
pusha
out
mov
add
lods
cmpsb
sahf
jne
adc
daa
out
inc
or
sbb
jb
cmp
mov
xchg
push
push
repnz
rcrl
nop
dec
es
rcll
scas
and
xchg
aas
dec
mov
iret
rcll
sbb
rcrl
mov
and
out
mov
dec
jnp
adc
lret
adc
loope
psllw
sbb
call
into
test
fmul
jae
xchg
dec
enter
andl
or
orl
add
pop
sub
push
scas
testb
int3
xchg
scas
xor
aaa
sbb
adc
rcrl
xchg
cmp
cmp
and
jge
sbb
dec
fisubl
mov
cmc
clc
sbb
cmp
notb
outsl
in
bnd
sub
mov
xchg
jbe
test
dec
icebp
mov
jnp
cmp
jae
scas
out
pop
fnsave
cmp
sbb
mov
lock
mov
and
sub
push
ds
jmp
in
rcr
jle
pop
sub
je
loop
pop
scas
pop
mov
mov
push
mov
push
xor
std
fiaddl
lea
lock
dec
xor
mov
mull
jbe
mov
xchg
ss
cmp
nop
test
mov
cmp
xchg
mov
sub
clc
adc
addr16
out
sbb
mov
popf
in
shll
or
xlat
fimull
pop
mov
divb
add
cmpsl
xchg
or
shl
ds
stc
push
sub
addr16
mov
inc
insl
ds
psubsw
or
pop
xor
pop
sbb
sbb
in
add
adc
jmp
imulb
out
popa
lahf
jge
dec
dec
xor
jae
sbb
xlat
or
jg
mov
cmp
cmpb
xlat
jno
aas
cltd
and
jl
fadd
and
mov
xchg
sub
data16
dec
cmc
arpl
mov
pop
adc
ret
lods
rclb
rcl
addr16
pusha
add
lahf
push
xchg
xor
or
sbb
stos
loopne
inc
ljmp
inc
popf
mov
imul
inc
push
jo
push
pop
aam
into
sub
stos
and
xchg
out
std
in
mov
scas
mov
adc
lock
std
jnp
and
cmp
mov
or
ja
data16
out
mov
dec
lods
les
mov
test
in
nop
adc
scas
and
jecxz
in
std
lss
mov
lods
and
in
ljmp
add
call
cld
out
dec
ljmp
fs
and
es
decb
and
and
xchg
or
lds
xor
mov
mov
dec
cwtl
inc
lret
xchg
outsl
sahf
or
out
sbbb
enter
pop
stc
pop
pop
shrb
movsb
jmp
inc
rcrb
jg
sub
mov
lcall
lods
xchg
cmp
push
gs
push
adc
loope
adc
jle
jno
jle
les
das
mov
pop
pop
cmp
insb
popf
sar
outsl
test
sti
push
mov
cmpsl
inc
mov
ja
inc
sub
filds
ds
add
xchg
push
mov
mov
repz
sbb
inc
mov
daa
fldcw
mov
int
push
sbb
cld
dec
lret
jle
and
faddl
inc
jp
push
mov
cmp
add
pop
insl
cmp
add
dec
leave
push
gs
xchg
push
rep
dec
stos
and
out
call
xor
and
cmp
xchg
add
lcall
lea
push
mov
data16
sar
push
rcl
lret
cmc
mov
mov
push
xor
jl
dec
sub
insb
lock
sbbb
mov
push
hlt
push
dec
insl
dec
test
mov
ficoml
iret
ret
push
fisubrl
and
cmc
cmp
xchg
movsb
pop
pop
lods
mov
mov
faddl
rcrb
loope
lea
outsl
jmp
ucomiss
sbb
aam
push
sbb
jnp
xchg
test
push
fcoms
push
push
mov
rcrl
mov
push
fstpl
daa
xor
mov
fisttpll
dec
mov
mov
test
idivl
fwait
xor
push
lds
mov
fcomps
clc
mov
cmp
jb
repz
std
xlat
out
xchg
loope
mov
xchg
test
out
cli
or
push
cwtl
xchg
pop
pop
cmpb
jns
outsb
mov
cs
cmp
fistpl
mov
fidivrl
mov
movsb
mov
lret
fwait
imul
ljmp
pushf
mov
in
pop
mov
mov
cmc
cltd
add
loope
enter
pop
sbb
mov
jnp
cmp
dec
or
pop
xor
xchg
loop
hlt
pusha
dec
push
lods
jae
adc
sbb
lea
test
adc
ljmp
push
cwtl
popf
push
dec
pop
ret
loopne
cmp
lahf
mov
hlt
sub
outsl
mov
push
add
je
ror
adc
pushf
mov
xor
shl
adc
lret
cwtl
pushf
into
mov
cmpsl
xor
stc
inc
pop
push
cmp
dec
mov
cmp
cltd
jns
fwait
das
in
inc
push
jle
dec
ljmp
and
sbb
js
mov
push
mov
stos
fwait
jmp
data16
add
or
pop
lea
mov
mov
pushf
cs
xchg
add
xchg
mov
fwait
add
dec
and
lret
in
mov
clc
inc
into
mov
push
mov
add
cli
rclb
jmp
push
pop
inc
addb
fcoml
jmp
add
jecxz
fldcw
icebp
dec
mov
cmc
ljmp
pop
add
mov
mov
xor
lret
add
mov
mov
add
les
cmp
sub
jns
add
pop
dec
sbb
mov
push
pusha
pop
stc
stos
mov
mov
xor
xchg
lahf
mov
adc
repnz
push
inc
and
sub
sbb
inc
cld
into
xlat
add
push
push
popf
nop
xchg
add
inc
das
arpl
out
cmp
cli
maskmovq
xor
sarl
mov
cmpsl
mov
or
push
in
jo
push
repz
add
lods
inc
xchg
xchg
pop
cmpsb
jae
dec
inc
jns
scas
mov
adc
dec
push
imul
movsl
enter
loopne
addr16
dec
adc
xchg
loopne
and
leave
test
xorb
push
add
fadds
cwtl
xchg
out
and
fisubs
stos
sbb
jns
xor
addr16
mov
sub
cltd
adc
add
cltd
or
push
push
rcrl
daa
repz
cmp
sub
jge
xor
cmp
and
fists
xor
aaa
js
sbb
sbb
pusha
pop
mov
das
mov
xor
addr16
gs
andl
imul
xor
out
and
sub
in
xor
pop
sbb
or
sub
adc
jb
lods
inc
enter
imul
lods
xchg
cld
jg
imul
and
mov
sbb
cmc
leave
scas
mov
aaa
in
leave
mov
mov
mov
aad
pop
mov
mov
push
push
pop
imulb
repnz
mov
test
cmp
aaa
repz
xchg
mov
lods
movsb
imul
lret
sub
xor
and
adc
sbb
xchg
jecxz
pop
scas
cwtl
add
cmp
out
ljmp
inc
js
mov
add
fnsave
mov
adc
fsubl
arpl
cmp
dec
xchg
xor
push
lahf
jbe
cmpsl
popf
sarb
sub
inc
insl
cmpsl
test
sbb
pop
fucom
insb
push
into
lret
cmp
xchg
scas
jecxz
call
pushf
sub
icebp
adc
jmp
lods
lods
jne
dec
pop
repz
dec
dec
shlb
pop
sub
mov
ds
dec
sbb
jl
in
jge
sub
and
xor
jle
movsb
dec
push
jnp
sbb
lods
fnstcw
lahf
pop
imul
lock
sub
adc
mov
fwait
inc
sub
and
aad
rorb
jecxz
in
push
jmp
mov
icebp
dec
test
pop
mov
fsts
adc
hlt
push
orb
ljmp
lds
and
aad
nop
mov
loope
cmp
mov
sbb
push
add
or
and
adc
fmuls
jge
call
popa
xor
or
fistpll
and
pop
ja
mov
pop
jno
mov
gs
std
dec
sbb
sbb
jnp
push
sbb
mov
xor
jge
hlt
pop
mov
xor
out
pusha
movsl
rcrl
out
add
or
in
outsl
and
jo
dec
scas
cmp
mov
rcrb
in
lcall
ja
xor
shrl
add
imul
jge
adc
or
sub
jmp
sbb
lret
loop
icebp
sbb
adc
movsb
add
orb
fs
mov
adc
push
testl
or
sub
jbe
inc
es
mov
and
sub
cmpl
shlb
cwtl
dec
loopne
call
sbb
adc
xor
mov
or
clc
mov
jp
jae
fdivp
dec
or
aas
xchg
fcmovne
ja
cmp
and
cs
stos
push
adc
test
push
push
bound
or
not
add
lret
add
cmp
ss
adc
cmp
jns
les
xor
ljmp
sub
pop
popl
inc
pop
jg
mov
imul
mov
xchg
enter
jg
fsts
dec
lcall
push
cltd
imul
lods
lret
fwait
cld
jmp
or
test
sar
fldt
test
jl
mov
dec
mov
aad
jl
add
test
mov
cmp
movswl
pop
adc
xchg
or
in
mov
nop
jbe
lods
xchg
push
or
icebp
mov
rol
test
push
push
aaa
push
cmp
in
mov
pop
ljmp
mov
mov
add
jmp
jns
sub
pusha
jmp
cmp
cmc
lods
mov
dec
jle
jne
adc
rol
cmp
popa
jns,pn
ret
imul
test
xchg
sbb
dec
add
push
daa
jb
xor
clc
leave
fs
or
push
rolb
jb
sub
fisubrl
outsb
xchg
das
ret
popa
adc
pop
xchg
das
lods
add
fstps
stos
mov
mov
sub
mov
nop
imul
adcb
roll
adc
push
jne
xchg
sub
push
inc
std
xor
xor
popa
mov
test
cmpsl
push
pop
lock
loopne
ret
jbe
repnz
repnz
sbb
mov
rclb
imul
lods
push
rorl
push
push
subb
lahf
push
and
dec
lret
push
out
or
leave
mov
push
jo
aam
push
into
xlat
or
sarl
dec
push
adc
mov
leave
iret
cmp
sysexit
mov
cmp
and
fs
aas
dec
je
inc
push
stc
andb
pop
inc
mov
outsl
in
push
adc
test
and
cmp
jae
jnp
jne
rcll
jb
in
popf
jl
pop
ret
sti
cmp
test
push
jno
jns
sub
arpl
std
out
movsl
mov
mov
push
sub
loope
xchg
daa
popf
aad
cmp
sub
outsb
adc
mov
mov
pushf
cmpsb
insl
enter
mov
out
divb
xchg
jp
dec
scas
and
aas
js
or
dec
or
jmp
out
notl
daa
xchg
pop
xchg
mov
sbb
cmp
mov
out
push
pop
insl
ret
lret
sbb
mov
jecxz
sbb
mull
push
mov
xor
jno
cltd
orl
aam
into
jo
mov
mov
add
lea
dec
lock
mov
push
ret
enter
or
shrb
fxch
in
cmpsb
mov
bound
and
fwait
sbb
inc
cld
push
mov
push
iret
adc
into
dec
cmp
or
mov
shlb
cmp
dec
mov
movsl
mov
jb
jmp
mov
ja
lods
scas
xchg
cs
mov
push
fs
aaa
jg
mov
sbb
out
inc
xlat
lds
leave
mov
pop
call
scas
cmc
ret
test
out
cmpsl
popl
pop
ja
xchg
aad
cmp
fisubrl
push
cld
lret
loopne
sbb
push
fcos
out
not
xor
dec
addl
and
and
xchg
sbb
sub
xor
in
lock
inc
movsl
jle
sar
iret
or
arpl
xor
xchg
jnp
inc
jns
stos
push
xor
stos
adcb
jge
rol
pop
inc
les
in
jne
xor
stos
lods
inc
jb
insl
jmp
iret
jne
mov
or
out
mov
adc
pop
mov
sub
add
cmpsl
popf
bound
rolb
xchg
pop
add
mov
or
aam
scas
fimull
repz
pop
repz
cmp
test
incl
int3
arpl
push
outsb
and
repz
loope
in
mov
and
adc
sbb
or
leave
ja
popf
sbb
lea
mov
inc
fdivs
ret
xchg
scas
in
dec
cmp
gs
nop
push
dec
adc
fsubrs
add
mov
test
mov
pop
inc
mov
mov
stos
roll
xchg
sti
mov
lcall
je
jp
or
mov
pusha
jns
loopne
ss
adc
mov
into
jge
lods
ljmp
push
push
mov
pop
fildl
jge
pop
pusha
fld
je
popa
xchg
sbbl
inc
rcrb
push
mov
adc
jmp
push
pusha
cs
pop
dec
bound
in
cli
popa
push
mov
popf
xchg
push
and
inc
iret
or
mov
fbstp
shlb
stos
jnp
push
push
lock
and
pop
xor
cmp
lahf
sub
xchg
xchg
mov
sbb
adc
xlat
xchg
sbb
cld
fsubrl
sub
push
mov
loope
inc
loopne
mov
cmpsb
mov
aam
lahf
insb
aam
sarb
loop
sub
ret
mov
in
incl
jle
into
push
xor
jbe
aam
scas
outsl
loopne
es
and
or
add
lods
int3
fisttps
lea
inc
sub
jg
jecxz
mov
in
lds
sbb
adc
fstl
cmp
rorl
fists
jmp
inc
loop
shl
out
cmp
cmpsb
mov
ss
out
xor
insb
out
cmp
dec
xor
mov
pop
jb
xor
and
or
mov
test
fs
popl
sub
xorl
aad
mov
shll
dec
jge
add
xchg
ljmp
scas
test
mov
xchg
mov
in
dec
pop
es
lret
mov
test
sub
and
sub
clc
mov
dec
lret
jns
mov
jl
push
push
xchg
dec
pop
adc
mul
xor
xchg
lock
sub
mov
mov
jl
sub
ret
out
jae
pop
push
jmp
xchg
cli
mov
daa
loopne
pop
daa
push
mov
pop
dec
shll
xor
dec
iret
dec
jbe
sub
fwait
push
cltd
mov
push
push
and
mov
or
pop
add
jg
fwait
mov
adc
loopne
mov
addr16
aad
push
and
enter
daa
adc
lods
pop
loop
stos
pop
fidivs
aas
imul
fldcw
shrb
cmp
lahf
icebp
aaa
sbb
add
pop
gs
aad
inc
xchg
mov
sahf
add
imul
sub
out
cs
mov
sub
fldt
std
cli
push
dec
cld
lock
inc
cld
jl
aaa
jno
imul
clc
hlt
in
insl
or
sbb
je
in
inc
or
pop
dec
mov
rolb
sub
in
mov
loop
jno
aam
adc
and
xchg
mov
test
sahf
mov
clc
jb
add
and
insb
lret
scas
cmp
and
xlat
jne
cli
fldcw
mov
push
lret
pop
and
hlt
lret
add
mov
xchg
mov
adc
pop
fwait
movsl
inc
jecxz
bound
ljmp
sbb
and
push
movsl
loop
jb
push
add
lret
mov
push
mov
xchg
sub
imul
push
add
arpl
lcall
test
or
dec
pushf
jecxz
in
scas
cli
jne
jmp
inc
dec
ja
jg
sub
add
lret
and
outsb
test
arpl
std
arpl
es
loope
mov
or
mov
jmp
push
cld
adc
cmc
jns
aaa
imul
push
je
lea
test
mov
inc
pop
ret
lods
dec
call
jno
adc
lea
mov
lods
cmpsb
lcall
push
aas
xchg
lods
gs
int
hlt
loopne
outsl
cwtl
fldenv
and
cmp
arpl
push
imul
inc
sbb
popa
push
in
adc
lret
arpl
test
shrl
test
xchg
or
pop
and
mov
nop
or
mov
adc
int3
test
stos
outsb
call
fs
insb
push
cmpsl
ljmp
cmc
push
bound
inc
cli
jmp
cmpsb
mov
iret
push
sub
and
push
mov
je
je
ror
jmp
push
pusha
in
sbb
fcomps
dec
and
jns
inc
mov
or
adc
adc
scas
mov
js
jns
jbe
push
cmp
jns
lods
push
lock
dec
mov
icebp
add
daa
inc
popf
xchg
stc
fisttps
das
aas
icebp
adc
push
push
repz
aad
xchg
lret
mov
stos
push
icebp
mov
mov
shlb
or
xchg
dec
int
scas
frstor
out
orl
or
lods
mov
jnp
cmp
test
out
jb
push
xchg
mov
mov
repz
xlat
add
xor
inc
xor
fstps
outsb
ds
pop
ret
ljmp
mov
xchg
movsb
push
repnz
cmp
icebp
scas
jecxz
xchg
mov
aad
xor
cmc
jle
jo
jae
lods
mov
mov
pusha
insb
push
jp
mov
pop
pop
and
sbb
imul
inc
add
int3
loope
xchg
je
inc
pushf
xchg
hlt
stos
jg
jg
mov
in
scas
xor
mov
in
adc
xabort
push
stc
and
ret
jo
test
xor
mov
aad
pop
and
jmp
xchg
pop
daa
mov
out
dec
mov
push
mov
mov
jl
add
and
inc
mov
xor
mov
ud1
and
dec
lcall
cwtl
sub
add
cld
ljmp
push
rolb
rcrl
cmpsl
out
loopne
inc
ret
cli
mov
xor
mov
xor
imul
scas
cmp
mov
mov
out
daa
fcmovu
fsubrl
pop
ror
and
in
mov
add
cmpsl
mov
sbb
imul
test
add
ss
rcrl
cld
jnp
push
push
xchg
mov
and
and
lods
movsl
or
movsl
and
jbe
mov
xchg
gs
or
sbb
dec
out
pop
fistpll
xchg
cld
mov
ret
adc
pop
cmp
xchg
and
mov
push
insl
sbb
and
jmp
repz
les
lahf
xor
lahf
lret
incl
cmp
inc
scas
cld
jg
imul
xchg
xchg
sbb
jge
rcrb
push
fsub
loope
out
jecxz
jp
xor
xchg
xlat
leave
mov
mov
xchg
cmpsw
sbb
pop
xchg
cmc
adc
and
inc
pop
mov
out
addl
xor
push
movl
outsb
mov
and
out
out
mov
lds
push
mov
inc
pusha
mov
test
mov
jbe
cmp
and
std
iret
jl
xor
jnp
loopne
dec
sahf
mov
dec
insb
jbe
xchg
gs
or
xor
push
adc
sub
jl
loopne
sbb
ss
les
cmc
xor
in
mov
jno
nop
or
pop
hlt
push
fwait
jno
sbb
nop
inc
js
mov
push
out
scas
dec
fidivs
adc
or
sub
sarb
pop
pop
jne
cmp
xchg
adc
ljmp
inc
push
outsb
adc
pop
cli
pop
xor
mov
dec
into
and
sbb
ja
jp
adc
in
mov
xchg
mov
xchg
cmp
cs
mov
loopne
pop
sbb
les
in
jbe
dec
mov
fdivs
cli
or
pop
mov
fsubs
jmp
lds
inc
pop
aas
inc
push
lret
sbb
test
pop
pop
cmpsb
inc
pop
cld
mov
lds
push
mov
xchg
cmp
adc
or
mov
cmpsl
push
out
out
jae
sbb
xchg
shrl
mov
mov
push
jecxz
in
int3
mov
dec
ljmp
jns
ss
jge
outsb
call
pushl
fsubrl
jae
mov
xor
das
into
cld
roll
arpl
ret
dec
fldt
mov
jl
dec
cmp
ss
jl
dec
imul
lock
cmp
fdivrs
fsubr
out
bound
repnz
addb
nop
loope
out
xchg
fcom
or
pop
sahf
cmp
sbb
inc
cmpsb
jg
mov
push
mov
mov
lea
scas
movsl
sub
jne
int3
xor
push
rcll
fsub
fsub
pop
jg
mov
and
pusha
popa
fsts
jnp
into
loopne
xor
sub
sbb
je
add
sub
mov
stos
scas
xor
inc
xchg
push
push
or
repz
test
sti
fildl
push
in
cld
call
push
push
std
icebp
jb
imul
jecxz
mov
js
or
xor
jmp
fsub
and
xor
pop
lret
adc
iret
inc
fnstcw
mov
or
shlb
nop
push
sub
cmp
pop
mov
dec
fstps
daa
clc
clc
jecxz
repnz
inc
nop
cli
es
or
push
xchg
pop
das
sbb
adc
lds
and
inc
cwtl
inc
mov
shrb
lret
out
xor
sub
mov
mov
jb
popf
or
mov
shll
mov
lock
jno
stc
xchg
cltd
sti
imul
sbb
cli
jg
push
pop
in
jecxz
sub
push
pusha
iret
stos
testb
ret
mov
test
cmp
adc
shlb
dec
cmpsb
dec
mov
mov
jns
shl
outsb
sarl
mov
and
mov
add
cwtl
testl
push
lahf
mov
mov
mov
lahf
stos
cmp
inc
mov
jmp
mov
fnsave
lea
cmp
sbb
and
das
mov
mov
stc
fnstcw
mov
cmp
cmp
mov
lods
fcmovb
int
fimuls
add
out
rep
add
in
test
add
bnd
int
cwtl
push
xchg
insl
mov
sti
push
addr16
cmp
dec
aas
and
push
sub
sub
mov
notb
jno
dec
fs
push
lcall
xor
insl
push
or
stos
loopne
cmpsb
mov
shrb
aas
or
cmc
xchg
push
mov
pop
ja
ljmp
mov
lret
mov
xlat
jmp
pop
jl
jbe
fcomps
sbb
jb
ds
gs
pop
or
shrb
aas
imul
lahf
jp
arpl
dec
adc
int
mov
push
in
int3
mov
xchg
sub
xor
add
flds
hlt
jb
insl
shll
out
stos
inc
nop
rorb
dec
add
mov
and
repnz
pushf
sbb
sahf
pushf
or
sbb
out
popf
int3
aaa
inc
add
mov
sbb
int
xchg
jne
and
mov
sub
dec
jae
ljmp
ds
sub
lds
add
jp
mov
fsub
and
adc
cmp
cmpsb
and
mov
lret
xchg
lock
pusha
fcmove
shlb
ficomps
dec
mov
mov
inc
aam
scas
negl
push
xchg
sub
and
add
pop
mov
stc
enter
cmp
or
adc
pop
inc
inc
push
cmc
lock
or
outsl
out
in
mov
mov
mov
pop
jl
adc
in
ss
fnstenv
xor
out
outsb
fidivs
loope
test
push
repnz
stos
inc
adc
sub
testb
dec
into
mov
jp
test
out
pop
mov
mov
hlt
mov
pop
jmp
mov
movsl
cmpsl
out
fwait
mov
loopne
jmp
add
inc
add
push
leave
js
dec
push
sbb
jp
pop
dec
int
xlat
mul
icebp
js
sti
mov
xor
scas
xchg
fwait
jmp
lock
repnz
aas
sbb
cmp
and
pop
std
sbb
ret
adc
mov
jp
pushf
enter
insb
cmp
xlat
mov
add
popf
repnz
js
mov
dec
jg
mov
pop
push
or
rol
movsl
adc
jmp
sbb
jmp
adc
mov
popl
push
and
mov
or
mov
cli
pop
mov
cwtl
inc
outsl
call
test
and
fiaddl
fnstcw
xchg
fistps
and
dec
in
mov
and
and
xlat
pop
test
mov
jmp
add
int
fldenv
es
enter
rclb
lods
out
jne
and
inc
cwtl
adc
jnp
sti
je
sbb
mov
hlt
mov
lret
jae
cli
bound
push
bound
and
shll
add
js
mov
cmp
xorl
cld
int
ret
jl
mov
sub
mov
cmc
jecxz
arpl
push
cmp
js
outsb
pop
int3
andl
lahf
int
lret
fildl
fwait
insb
ja
in
lods
xchg
push
adc
dec
jo
mov
outsl
out
push
and
xchg
jo
lock
add
xchg
xor
imul
mov
fimuls
sbb
je
cld
dec
jg
fidivrl
cld
scas
dec
dec
lods
mov
xchg
out
inc
jo
movsb
xchg
pop
notl
pop
hlt
push
cmpsl
addr16
jnp
loope
mov
pop
mov
push
ljmp
add
mov
js
pop
leave
mov
adc
adc
test
xchg
out
out
xchg
inc
jne
sbb
and
cs
xchg
scas
inc
sbb
jecxz
fnsave
sub
push
ds
jne
pop
mov
inc
inc
test
xchg
cmpsl
jecxz
mov
mov
xlat
loope
xchg
shrl
xor
ret
sub
les
mov
push
inc
movsl
lock
cwtl
popf
shrl
out
adc
mov
jle
adc
sub
xor
dec
repz
sub
fs
ds
mov
adc
jmp
push
mov
adc
movsl
push
popa
call
outsl
adc
or
jg
cld
icebp
pop
pushf
mov
jmp
lds
xchg
and
daa
or
lods
pop
clc
jo
push
popa
rcr
jmp
cmp
gs
cld
push
jne
mov
int3
clc
pop
scas
hlt
arpl
das
mov
push
imull
pop
pop
enter
aad
movsb
mov
adc
add
cmp
movsb
jge
inc
imul
shr
repz
xlat
aam
pop
sahf
lea
lods
cmpsl
add
inc
and
pop
subb
jp
call
stc
mov
adc
in
cmpsb
aam
sub
loop
sahf
pushf
ljmp
sub
push
dec
nop
out
scas
enter
cmpsb
sub
les
sahf
sar
cmp
xor
mov
inc
in
push
sbb
pop
xor
data16
inc
sbb
in
mov
jne
rclb
push
fs
inc
cld
aaa
roll
imul
push
pop
or
pop
out
sbb
cmpb
xlat
xchg
fs
mov
jo
push
push
enter
xor
and
cmpsl
mov
test
push
mov
in
mov
push
test
cmp
mov
mov
jae
xchg
add
lahf
xorb
lods
jmp
xchg
enter
cmc
sbb
jl
sub
push
hlt
imul
adc
cmc
fs
sahf
add
pop
cmc
outsb
test
inc
pop
add
mov
mov
fcmovnbe
sbb
cli
test
jecxz
test
orb
xor
or
cmp
fwait
in
sub
lret
and
add
sbb
cwtl
call
or
xchg
cmp
adc
shl
lds
call
adc
cmp
adc
mov
mov
inc
or
push
pop
imul
ljmp
xlat
jge
leave
jbe
push
ljmp
sbb
push
movsb
xchg
cmp
mov
dec
add
int
pop
pop
sub
jmp
jb
or
dec
cmp
inc
push
rol
lahf
xchg
or
jbe
ds
les
sub
ljmp
mov
mov
push
cmpsb
ret
inc
loop
sbbb
cmp
jmp
and
jmp
je
ja
rorb
roll
adc
xchg
insb
scas
adc
sbb
pushf
or
addb
inc
jp
adc
jbe
sub
mov
leave
add
mov
outsl
lret
xchg
stc
or
clc
and
es
sbb
sbb
lahf
fsubs
pop
hlt
cmpsl
lcall
iret
and
sub
or
out
cmpsl
fistpl
into
cmpsb
xor
ret
adc
and
cmp
je
mov
dec
jl
push
dec
and
aam
jl
cmp
int3
xchg
add
leave
test
dec
push
aam
xchg
push
orl
mov
pop
inc
into
cmp
push
mov
stos
ds
shll
dec
adc
in
push
mov
out
lea
mov
dec
mov
fistpl
lock
imul
ss
add
aaa
sub
mov
hlt
dec
mov
pop
adc
dec
mov
das
imul
sub
push
int
mov
daa
or
jo
stc
ss
andl
stos
sbb
mov
cmp
xor
xchg
pop
lds
or
adc
jbe
xchg
dec
sub
or
test
push
cmp
mov
jle
aas
dec
jp
shl
imul
lret
movsl
or
repnz
push
frstor
xorb
lret
push
jo
sbb
push
movsb
jno
fdivp
add
outsb
ret
sub
or
pop
mov
and
imul
fs
xchg
ss
cs
xchg
aas
shll
push
mov
sbb
jg
xchg
pusha
ret
dec
sub
sub
aas
flds
pop
mov
mov
sub
jb
cmp
out
push
pop
inc
mov
lret
add
or
lock
ljmp
cmp
dec
cmp
sub
push
andl
sub
mov
orb
rcr
mov
mov
fidivrl
pusha
mov
std
lret
mov
dec
mov
cld
push
push
lahf
push
mov
mov
ljmp
jno
leave
sub
scas
xor
push
push
mov
jmp
cmp
push
frstor
and
sbb
int
leave
push
mov
pusha
out
call
push
enter
out
je
repnz
out
mov
push
add
mov
loopne
sbb
popa
and
stc
push
push
push
test
adc
inc
push
xchg
stos
push
insl
outsb
xchg
test
cltd
mov
pop
pop
cmp
dec
pop
outsl
cmp
or
bound
mov
xor
or
add
loopne
mov
testb
shlb
test
aam
cmpsl
aam
push
push
ljmp
out
and
movsl
cld
cmc
sbb
mov
mov
testl
sbb
cld
das
sbb
test
lcall
fadd
adc
xorb
xor
xor
sub
and
je
add
mov
lods
int
sub
sbb
jb
loop
imul
stos
das
ljmp
push
ficoms
pusha
out
loope
xchg
and
jecxz
or
jmp
sbb
rcrl
sbb
mov
mov
mov
rcrb
and
dec
add
call
stc
inc
filds
jns
inc
jo
sahf
xchg
dec
daa
sub
and
repnz
pop
test
mov
push
xor
bound
pop
cmp
pop
cli
lcall
xor
cmp
mov
pop
mull
fisubrs
push
push
mov
lods
ficompl
popf
cld
and
aaa
mov
in
in
in
jecxz
ljmp
jbe
sub
lds
popf
cwtl
pushf
push
mov
jmp
mov
lret
subb
imul
pop
pop
mov
sbb
mov
insl
out
sub
and
xchg
ss
rcrb
mov
or
popf
aas
or
hlt
notb
cmpsb
and
mov
xor
cmp
ja
ss
or
test
stos
pop
fcompl
ss
sub
mov
jne
aas
and
or
mov
dec
leave
mov
adc
lods
add
adc
push
pop
mov
push
movsl
mov
inc
pop
lahf
push
cmp
mov
xchg
sub
test
push
mov
out
mov
aaa
sbb
xorl
lret
int
inc
loope
mov
and
mov
dec
inc
scas
push
mulb
sbb
daa
jb
adc
push
xchg
mov
hlt
sbb
je
adc
in
fdivrs
arpl
dec
in
insb
js
addr16
adc
cld
cwtl
dec
pop
dec
cld
lods
mov
dec
xor
inc
roll
adc
pop
jns
cmp
arpl
hlt
gs
cmc
mov
xor
cmp
xchg
dec
rorb
cmp
dec
ja
inc
shrb
add
jl
xchg
dec
mov
ljmp
jl
xchg
aad
stc
jge
rclb
fwait
adc
fs
and
fildll
add
data16
sbb
cmpsb
movsl
xchg
jmp
enter
xchg
sub
pop
insl
inc
push
dec
mov
adc
cmp
lret
shlb
in
mov
insb
push
sub
push
test
add
sti
std
push
popa
imul
mov
push
notl
mov
mov
adcb
and
mov
scas
insb
sahf
lret
inc
jle
cmp
fdivl
mov
loopne
xlat
lahf
add
xchg
pop
sbb
push
jne
pop
and
and
mov
xchg
inc
jbe
cmp
cltd
push
mov
pop
insl
add
loop
imul
ds
insb
lea
or
mov
bswap
fxam
xor
jle
cmpb
lcall
pop
loopne
or
pop
cli
pushf
or
lods
insl
jbe
mov
adc
jge
mov
in
sbb
sahf
inc
push
xchg
sbb
test
add
rorb
test
inc
aad
dec
adc
xchg
and
mov
aas
leave
inc
out
sar
loopne
mov
or
fstpt
or
sti
push
cwtl
cltd
or
push
dec
mov
arpl
jl
dec
mov
movb
in
jnp
or
fisubl
test
jno
and
int
pop
sub
stc
inc
repz
addl
das
dec
rolb
popf
sarb
test
lock
pop
fists
or
mov
push
mov
inc
jmp
stos
and
popa
mov
ret
clc
jns
sbbl
pop
mov
dec
mov
imul
add
adc
mov
mov
leave
insl
repz
mov
out
adc
adc
adc
mov
push
in
enter
loope
push
imul
insl
pusha
sbb
mov
mov
lea
in
push
add
jae
mov
adc
stos
ret
cmp
xchg
loope
cli
push
nop
push
xchg
mov
sub
fldl
sub
nop
push
cmc
push
jns
dec
xlat
cmp
adc
mov
add
mov
and
ret
ret
shrb
sbb
cmpsl
xor
in
adc
or
cmpsl
pop
inc
leave
jno
shl
xor
inc
lock
dec
mov
lcall
sbb
roll
xor
pop
or
stc
aaa
pop
icebp
or
flds
cs
cmp
movsb
or
movsl
mov
dec
cmp
xchg
mov
or
imul
mov
outsb
sbb
xor
into
std
sti
mov
inc
scas
xlat
inc
adc
negl
add
add
fwait
mov
mov
push
std
bnd
dec
cmpsb
cmp
and
xor
repnz
shrb
jecxz
push
pop
mov
push
dec
test
outsb
fists
test
or
fs
sub
mov
sbb
inc
out
roll
sbb
rcll
jb
dec
cmp
cmp
neg
cmp
mov
subl
add
rcl
mov
sbb
outsl
xchg
adc
inc
mov
rcl
xchg
adc
push
gs
mov
scas
add
push
pusha
ret
js
rcl
cmp
rep
lret
insl
clc
sbb
lds
mov
lock
jmp
je
inc
lcall
inc
pop
lods
subl
popa
mov
mov
gs
in
pop
pop
and
lods
sub
inc
xchg
in
mov
jnp
cmp
push
inc
shlb
ret
insb
sbb
inc
cld
push
imul
js
pop
movsl
and
subb
adc
jp
xchg
fstpl
or
mov
and
cmpsb
dec
inc
jae
lret
jae
jge
stc
shrl
fcmovnbe
xchg
pusha
repz
adc
or
out
lcall
dec
push
dec
ret
sub
cmp
pop
dec
ret
and
cld
xor
mov
jno
sti
pop
sahf
fsubrl
pop
mov
test
movsl
imull
fwait
or
xor
cmp
xor
sarl
xchg
inc
ficoml
scas
repz
dec
ds
sahf
add
dec
xchg
xor
pop
xor
adc
or
dec
rcrl
rorb
loope
jns
lret
sub
push
aaa
sbb
adc
and
leave
mov
sti
inc
sub
adcl
xchg
push
loopne
lcall
dec
fldcw
push
lret
das
daa
jo
lods
rclb
movsl
jns
inc
jecxz
and
repnz
test
movsb
xchg
adc
fsubrs
inc
fwait
shll
push
call
lahf
xor
aas
jno
sbb
or
jnp
into
pop
cld
push
test
bound
ret
xor
imul
cmp
lcall
fnsave
and
out
jl
push
and
cwtl
pusha
push
jle
outsl
loope
je
popf
rorb
repz
flds
cltd
aad
scas
loop
es
fs
mov
inc
imul
stc
and
inc
sbb
jg
mov
add
leave
call
out
cmc
jnp
fwait
mov
jbe
pavgb
add
add
add
pusha
insl
jecxz
into
pop
roll
iret
mov
repz
and
rcrl
sub
movsl
lock
lret
or
js
movsb
call
dec
idivb
fdivrs
or
pop
fimuls
xchg
daa
sub
xchg
les
pop
adc
mov
pop
scas
inc
xchg
cmp
roll
outsl
jle
das
mov
sbb
mov
cld
dec
xor
ret
xchg
shrb
sbb
jecxz
mov
mov
insb
js
mov
push
xor
pushf
sbbl
cs
pop
pop
popf
enter
test
jg
pop
rcrb
xchg
sub
lods
jno
sbb
push
push
mov
jb
or
aas
sub
push
cmpsl
jno
xchg
push
pop
mov
aam
stos
das
int3
sbb
pop
jmp
xor
sbb
push
orl
lea
xchg
mov
addr16
or
or
sbb
mov
xchg
jge
xor
adc
out
sbb
inc
pop
in
imul
lods
mov
or
dec
mul
add
cld
fidivrl
fimull
sub
xchg
cmp
xor
es
sub
adc
push
cltd
imul
inc
add
fiadds
call
in
jl
arpl
jmp
sub
sahf
mov
imul
arpl
fld
iret
loope
loop
xchg
lcall
insb
or
shlb
xor
shll
xchg
mov
movsl
lods
sbb
lds
push
xchg
inc
out
repnz
das
fstpl
mov
adc
or
add
mov
mov
dec
int
xor
imul
push
cmovnp
loopne
mov
jmp
fisubrs
sbb
fidivrs
xchg
enter
clc
shl
inc
push
xchg
les
rolb
in
jne
inc
outsb
cmp
and
dec
push
mov
jl
lods
flds
sti
ret
jmp
dec
mov
ljmp
testb
push
rcr
and
cld
mov
mov
xchg
nopl
std
push
insl
repz
lods
test
xor
jns
push
scas
popf
and
and
xchg
mov
pop
lds
mov
jns
aas
dec
jae
sub
inc
cltd
sub
sbb
loop
sbb
xchg
sbb
mov
xchg
sub
mov
jcxz
loopne
mov
mov
add
leave
fsubl
inc
jecxz
mov
test
push
pop
push
push
mov
stos
dec
dec
out
cmp
test
addr16
pop
popf
cmc
mov
call
movsl
test
or
icebp
sbb
mov
jno
inc
insb
mov
pop
pop
push
jecxz
sub
rclb
scas
in
rcrl
lret
mulb
or
jae
aaa
mov
sub
shl
in
test
mov
xchg
cltd
and
add
std
loop
pop
push
addr16
cwtl
mov
xor
aas
xchg
jp
adc
insb
push
jne
jmp
repnz
push
clc
dec
xchg
in
cmp
push
popf
or
out
lahf
jecxz
leave
out
test
sub
jg
sbb
pop
das
mov
scas
cmp
lods
sub
adc
push
xchg
shlb
insl
bndstx
and
test
dec
fisubrl
dec
bound
es
sub
test
jmp
jle
xchg
lea
xor
les
aad
push
lods
dec
xor
into
ja
cld
mov
ja
pop
fldenv
fwait
jl
cmpsb
std
jnp
pop
test
xlat
jbe
mov
rcll
push
jecxz
adc
call
test
lret
adc
jbe
sub
or
repz
inc
mov
lret
xchg
enter
cltd
pop
adcb
inc
cmpsl
lret
cmp
and
xchg
and
sbb
mov
cmp
xchg
xchg
inc
cmp
sahf
fcoml
call
or
xor
leave
jp
xor
dec
jp
arpl
out
ljmp
push
jg
in
pop
loope
adcb
lret
sub
pop
dec
sub
or
mov
push
mov
clc
ret
psadbw
mov
outsl
test
arpl
xchg
xchg
sbb
cmpsl
into
sbb
rorb
mov
dec
xor
cs
loop
pop
xchg
xor
aad
sbb
xor
mov
cmp
jbe
add
xchg
pop
and
push
sbbb
sbb
jb
lock
and
push
out
mov
mov
mov
stos
mov
xchg
in
jae
ljmp
in
out
mov
push
in
add
sbb
mov
adc
fimull
push
mov
repnz
scas
into
add
iret
lea
jb
sub
cld
cmpsl
xor
cmp
ds
inc
loope
jne
test
mov
scas
in
push
out
sub
xor
xorl
pop
cmc
mov
and
insl
xchg
jbe
mov
push
xchg
jae
jl
mov
rorb
xchg
insb
push
lds
inc
aas
mov
add
out
fcmovne
int3
leave
pop
dec
popa
add
movsb
xchg
mov
pop
xor
push
sub
daa
xlat
cs
dec
mov
je
dec
daa
mov
orb
lods
mov
cld
xchg
cmp
lret
inc
out
popf
gs
shlb
mov
je
cmpsb
rcll
test
stc
jnp
xor
mov
inc
push
out
dec
push
in
mov
push
and
dec
and
aam
xorl
mov
and
mov
insl
es
jp
lods
nop
mov
adc
mov
mov
xor
sbb
jne
cli
shll
mov
lock
ret
add
jp
jns
nop
jne
or
lcall
rclb
cmc
int
mov
lret
mov
test
or
lods
hlt
sub
loopne
call
xchg
loop
sbb
and
cmc
pop
cltd
dec
in
pop
loop
lods
mov
inc
mov
movb
cmpsl
pop
out
pop
cmp
cmp
nop
jge
les
lds
stos
stc
js
lahf
int3
fmul
mov
xchg
cli
xor
mov
fmull
sub
shl
xlat
cmpsb
sbb
test
pop
popa
addr16
lods
test
inc
cmpsl
test
pop
jge
scas
mov
pop
pop
push
sub
mov
sbb
mov
mov
push
xor
xchg
mov
push
xchg
jmp
push
dec
outsb
in
cmp
and
adc
jns
adc
cmpsb
shrb
frstpm(287
or
es
arpl
in
aam
adc
stc
jb
dec
mov
dec
cmp
dec
mov
popa
adc
addr16
sbb
dec
nop
jae
and
mov
imul
pop
add
rorb
push
xor
jmp
ss
pop
daa
inc
mov
mov
and
sbb
jle
lcall
nop
jmp
xor
push
mov
stos
dec
xor
iret
into
pop
pop
jo
subl
fadds
inc
movsb
xlat
addl
mov
pmullw
fisubs
xchg
or
dec
cmp
repz
jmp
popf
mov
gs
test
xor
xor
sbb
pop
add
ljmp
adc
enter
add
mov
push
cld
push
das
hlt
pushf
sahf
dec
fidivs
mov
data16
cmpsb
jno
lds
cmp
jl
adc
test
lods
add
mov
popf
repnz
in
mov
mov
mov
inc
mov
and
xchg
xchg
call
outsb
pop
test
xchg
out
mov
test
cmpsb
mov
xor
popa
adc
test
rorl
int
mov
sar
adc
mov
sbb
xor
pop
scas
and
jp
inc
and
mov
push
fisubl
or
lods
icebp
aas
push
enter
cmpsl
adc
sub
loope
stos
sti
and
pop
jb
and
rcl
sub
lcall
xchg
xor
inc
pop
mov
data16
jp
lods
sub
mov
cmp
mov
lock
sub
push
mov
mov
insl
scas
fdivl
adc
aaa
mov
cmp
xor
shlb
fldt
inc
das
negb
or
orb
leave
sti
mov
xchg
stos
ret
cli
inc
add
jmp
push
adc
loop
in
sbb
js
dec
fldl
loop
push
addr16
test
push
push
dec
mov
out
sbb
mov
xchg
stos
adc
cld
mov
sbb
mov
insb
fsub
sub
or
test
dec
insb
mov
jns
or
es
sub
imul
jns
or
inc
adc
je
inc
setne
push
push
fiadds
mov
cmpl
pusha
or
in
jns
cwtl
pop
fnsave
pop
stos
push
push
lds
es
out
push
mov
jae
hlt
xchg
xor
in
cmp
dec
out
pop
xlat
test
stos
xchg
shrl
sub
outsb
jl
ja
popf
fwait
mov
mov
xchg
aam
data16
outsb
popf
int
xchg
xchg
fnstenv
xchg
mov
mov
and
outsl
cmpsl
shl
cmp
ss
xchg
mov
rcll
mov
xchg
pop
test
push
inc
cwtl
aam
ljmp
cld
int3
pop
clc
test
cld
xlat
xor
sbb
pusha
cmp
sbb
aas
loope
lock
in
popa
jno
dec
mov
out
adc
hlt
fxch
aaa
push
sub
jno
movsl
add
pusha
mov
sbb
in
dec
aad
jecxz
sub
cltd
nop
jp
rol
jp
add
daa
lcall
pop
out
mov
jle
mov
cmp
adc
pop
loopne
inc
mov
aam
sub
or
pop
xor
lods
into
push
iret
pop
sub
and
jl
int
and
sub
push
jo
inc
gs
cld
out
sbb
ret
lds
gs
ds
mov
sub
and
mov
lods
mov
mov
imul
js
xor
adc
sub
pop
cmp
adc
pop
jecxz
mov
cmpsl
or
adc
push
xor
and
inc
xchg
pop
xor
cwtl
jnp
int3
push
ret
adc
je
jmp
andb
int
and
cltd
sbb
push
or
fadds
out
adc
popa
sbb
icebp
lds
adc
loopne
xchg
adc
sub
aas
jmp
arpl
and
mov
in
or
mov
cmc
jp
jmp
outsb
xor
iret
push
test
sub
or
xlat
jb
shll
xchg
sub
lret
mov
xchg
or
cmp
lods
mov
addr16
mov
fsubs
sub
jae
sbb
cli
in
and
or
mov
and
fdivr
outsb
jns
lods
and
fs
mov
jbe
push
aad
into
push
out
divl
xchg
xor
pop
call
push
in
in
nop
ja
xlat
mov
pop
outsb
out
push
icebp
xchg
dec
out
imul
mov
push
mov
into
jmp
xor
cmpsl
js
in
adc
rorb
cwtl
mov
cmpsl
push
subl
dec
jmp
pushf
aad
cmpsb
out
lods
cs
mov
or
add
sbb
xor
in
je
jl
les
pop
add
push
les
lds
mov
into
pop
insl
inc
ret
jnp
xor
out
pushf
mov
fnstenv
in
mov
xor
dec
cmc
imul
and
mov
inc
pop
and
jo
sub
push
push
xor
rcrl
push
movsb
jmp
pusha
lss
and
call
push
push
and
std
pop
out
sbb
ret
cmp
xchg
movhlps
mov
xbegin
mov
mov
cmpb
cs
nop
push
pop
outsb
push
test
mov
jle,pt
mov
mov
daa
pushf
push
out
push
les
mov
je
xor
dec
mov
add
popf
dec
fnstsw
lods
adcl
inc
inc
mov
add
in
sbb
insl
jno
ret
in
loop
repnz
popa
testb
pop
inc
lcall
inc
stos
std
pop
mov
dec
or
leave
rolb
pop
in
gs
push
insl
insl
mov
xchg
mov
iret
adc
test
mov
xor
inc
mov
mov
lock
lods
lds
mov
pop
ljmp
adc
cmp
ljmp
push
subl
sbb
into
cwtl
cmpsl
out
bound
mov
or
mov
fdivr
push
fs
lcall
jp
and
mov
shrl
popf
jne
repnz
push
sbb
lods
xchg
sbb
and
push
jo
adc
sbb
js
pushf
xchg
jne
aas
jle
xchg
addl
cmp
push
pop
pinsrw
and
dec
stos
outsb
insb
mov
jg
dec
adc
pop
es
jmp
adc
xor
insl
fdiv
push
xorb
addr16
bound
mov
stc
pushf
dec
cmp
xchg
addb
adc
jnp
test
adc
push
xlat
iret
sub
mov
lds
sub
cmp
or
cltd
fildll
xor
call
jno
cmp
outsl
imul
inc
jae
pop
movsl
jne
mov
cmpsb
sti
dec
jge
jb
push
pop
adc
pusha
and
addr16
sub
sub
push
push
cmp
sub
lods
pop
das
fidivl
mov
inc
push
push
scas
xchg
push
fs
push
dec
xor
sub
cmp
lea
mov
mov
sbb
cs
adc
movsb
cld
mov
sbb
xchg
push
dec
mov
add
sbb
repnz
into
add
outsb
fstl
popa
mov
rorl
ds
push
lds
pop
loope
jp
cmp
jo
or
int3
lret
sub
mov
jp
cli
pusha
lahf
imul
adc
cmc
sbb
push
add
inc
push
aam
push
dec
stos
push
cmp
jp
pushf
and
aaa
pushf
push
mov
mov
add
les
mov
adc
sahf
push
test
cmpsb
dec
or
lock
mov
scas
adc
and
mov
mov
arpl
out
adc
cmp
add
insb
adc
jmp
mov
mov
push
lock
sub
out
sbb
cmpsl
fldl
sahf
mov
and
aad
mov
add
stc
cmp
lret
xor
push
stos
push
insb
cli
mov
rorl
mov
ljmpw
lods
mov
add
push
faddl
ficoml
ret
push
mov
add
sahf
add
mov
adc
mov
lahf
jmp
add
jp
popf
cld
loope
cmpsl
daa
xlat
push
lret
pop
mov
scas
nop
lods
mov
addb
pushf
cmp
pop
jle
stos
aas
xchg
fdivrl
shlb
cmpsb
cmpsb
jno
push
jl
pop
xor
mov
mov
pmuludq
jecxz
ficoml
push
xor
mov
adc
xchg
aad
xor
out
xor
mov
dec
jo
or
cld
pop
mov
ss
mov
xor
test
es
sar
push
xchg
mov
jo
lret
jg
in
sahf
stos
test
add
sbb
pop
cmp
fiaddl
aam
insb
xchg
mov
cmp
nop
push
mov
lahf
out
cmc
fsubl
or
push
ffreep
or
cmpsl
mov
sub
ss
pushf
out
lods
xchg
adc
test
outsl
push
outsb
in
jecxz
push
lds
out
pop
dec
sti
dec
fcompl
in
add
out
or
and
xchg
mov
sub
cmp
pop
outsl
loopne
adc
aam
iret
push
push
loop
fiaddl
dec
popf
jae
and
popa
lret
xlat
int
sbbb
cld
xor
movsl
cs
adc
push
rcrl
xor
xor
sti
lock
inc
pop
inc
movl
jg
sahf
ret
push
int3
fildll
xchg
or
add
and
adc
insb
enter
pop
push
push
test
popa
imulb
out
clc
lcall
popf
scas
fs
or
cmp
icebp
jmp
mov
add
dec
stos
dec
dec
mov
out
xchg
jae
jge
and
mov
les
test
ret
mov
stos
test
jns
mov
add
cmp
mov
addb
repz
jle
or
lods
sbb
sub
xor
and
iret
mov
xchg
in
lret
mov
xor
cmp
push
cmpsb
lret
addb
hlt
ror
inc
stos
icebp
shlb
icebp
sbbl
mov
aaa
bound
dec
dec
inc
out
cmpsl
insl
cmpsl
mov
stos
push
mov
mov
jb
inc
pop
add
lret
jo
lods
push
mov
pop
test
in
loope
mov
cmp
pop
movsl
sbb
mov
push
push
lret
ljmp
jle
test
fildll
pusha
dec
int3
fstpt
scas
cmp
adc
cmp
roll
push
test
sub
imull
mov
inc
xor
sub
sbb
fcoml
call
cmp
int3
outsl
xor
movsb
in
das
lea
arpl
les
fcomps
inc
es
sbb
mov
mov
or
mov
into
ljmp
aaa
loope
add
scas
pusha
sub
call
ljmp
fldenv
in
add
dec
in
ljmp
cmp
pushf
inc
fldl
out
xor
push
addl
sbbl
sub
inc
and
insb
xchg
jae
out
inc
lret
mov
insl
outsl
jg
add
xor
cmp
bound
adc
lahf
out
jb
push
mov
mov
scas
cli
fwait
cltd
or
mov
xchg
das
ret
push
sbb
repz
popw
sbb
mov
loop
jbe
cmpsb
and
sub
sahf
clc
pop
notb
aas
ret
das
and
pushf
in
inc
jbe
add
dec
or
sub
int3
inc
sbb
or
lods
or
mov
sar
jmp
sub
add
inc
jecxz
or
sti
jnp
inc
pop
push
xor
aam
jmp
mov
and
fistps
xchg
rorb
jle
icebp
pop
lods
push
pusha
and
mov
add
gs
jle
cmp
dec
xchg
cmp
nop
pop
dec
cwtl
hlt
sbb
cmp
repnz
mov
sub
fwait
pop
mov
cld
sarb
popf
cmc
test
dec
sahf
gs
ficoms
mov
ja
mov
adc
dec
addr16
xchg
ret
das
push
push
cmp
je
fmull
lea
dec
mov
das
lret
gs
adc
js
test
loopne
xor
sbb
imul
push
cltd
ljmp
jp
pop
pop
stos
or
ret
std
movl
test
and
rorb
movsb
in
leave
aaa
sbb
shl
push
gs
sub
mov
sub
xchg
shrb
mov
js
ffree
xor
std
insl
xchg
enter
fmulp
enter
test
stos
push
sub
aas
xor
xor
test
stos
jne
mov
cltd
mov
add
add
arpl
dec
leave
les
push
cmpsl
daa
inc
roll
repnz
sub
nop
xchg
sar
out
cmp
lahf
dec
fists
inc
adc
call
xlat
mov
lahf
pop
sbb
push
adc
push
loope
push
dec
in
scas
cmc
jae
mov
and
lods
adc
and
push
dec
or
icebp
push
fmull
dec
lahf
push
test
mov
mov
lods
and
call
mov
and
imull
call
xchg
dec
dec
cmp
test
mov
dec
insl
leave
int
insl
repz
std
cmp
stos
sub
push
xchg
daa
jg
pop
add
repz
lods
inc
insl
outsl
dec
or
in
aad
test
push
ret
je
fwait
jle
scas
addr16
sub
jae
dec
jbe
sahf
and
pop
loopne
cs
lret
adc
int
mov
xor
push
push
cmp
push
sub
addr16
mul
push
xchg
cs
sbb
fildl
xor
mov
or
inc
shlb
and
scas
in
scas
out
inc
loopne
repnz
mov
outsb
adc
inc
cmp
xchg
mov
adc
imul
mov
push
lock
fwait
xchg
testl
ret
pushf
mov
push
pop
sahf
sub
loop
stc
push
pop
fcoml
ss
rorl
fwait
jb
xor
push
in
xlat
loope
ret
fwait
gs
dec
out
or
cltd
cmpsb
and
cmc
andb
dec
xor
mov
fnsave
aad
repz
xor
inc
gs
add
fldenv
stos
add
or
and
mov
cld
fmul
mov
or
xor
inc
xor
cmp
fistl
ficompl
daa
mov
and
test
push
mov
shlb
test
xor
lahf
push
push
xchg
jl
pop
ljmp
and
seta
jge
cmp
fidivrs
dec
xchg
adc
movsl
mov
sub
popf
fs
add
dec
sub
jo
ret
jnp
xchg
jle
xor
fs
pushf
cmp
mov
cmpsl
xor
and
or
add
sub
mov
jecxz
aas
test
and
mov
sti
mov
push
xor
mov
mov
dec
push
in
mov
sbb
movsl
out
mov
sti
fs
jl
jle
mov
aad
push
fnsave
insl
in
in
dec
loop
repz
or
xlat
xchg
popf
inc
adc
movsb
add
rcr
xor
cmp
jno
dec
push
loope
test
loope
push
adc
pop
xor
mov
or
mov
aas
sti
mov
and
xor
xchg
leave
ljmp
push
add
dec
rol
cmc
jne
add
jle
js
repnz
jb
sbb
cmp
jbe
inc
cli
mov
pop
mov
push
leave
add
mov
enter
inc
mov
int3
xchg
mov
mov
dec
fildll
mov
sbb
cli
in
loope
mov
sti
or
mov
cmp
mov
or
loopne,pt
clc
mov
into
movsb
xchg
repnz
mov
in
adc
decb
icebp
cmp
inc
data16
stos
mov
xchg
jne
cmp
stos
int3
mov
jge
pop
cmpl
xor
lods
mov
push
lret
inc
in
mov
ljmp
add
stos
or
iret
jne
enter
add
movsl
mov
add
mov
shrb
popa
out
outsl
pop
lods
xor
push
out
or
sub
and
fsts
push
lret
add
repnz
pop
js
ljmp
leave
fwait
out
or
add
and
inc
xorl
or
jnp
stos
dec
ret
pop
lods
call
pop
iret
and
int
call
mov
data16
push
mov
mov
loop
rorb
imul
and
ja
lcall
jae
cwtl
nop
xchg
repz
dec
xor
call
mov
cmp
add
push
lods
dec
js
pop
mov
shlb
pop
popf
adc
mov
incb
add
daa
sbb
dec
xor
imul
jmp
sub
das
or
js
out
fidivrs
sahf
jae
sbb
mov
lea
sbb
call
and
push
sub
dec
inc
xor
ja
sub
out
popf
inc
in
jmp
mov
filds
iret
or
jbe
push
jno
cs
or
xor
mov
in
addr16
mov
into
jmp
xchg
pop
hlt
mov
es
push
in
sbb
xorb
mov
jle
inc
out
arpl
dec
addb
sbb
xchg
dec
mov
outsb
test
mov
ret
mov
adc
dec
sub
fidivl
in
test
xchg
addr16
xlat
inc
mov
jecxz
push
sarb
pop
arpl
sbb
aaa
and
out
cli
nop
bound
dec
mov
lret
roll
jbe
mov
ljmp
and
lock
les
dec
clc
movsl
adc
cmpsb
cmp
xor
jle
ss
push
add
xchg
arpl
jg
jecxz
mov
movsb
insl
sahf
rcl
imul
mov
test
mov
push
lods
pusha
and
ja
mov
jnp
dec
and
xor
jge
pop
shlb
jne
add
push
jbe
lahf
sbb
aam
lcall
aam
in
rcl
inc
repz
or
outsb
or
mov
mov
dec
ja
inc
loop
and
jp
xchg
leave
lret
leave
cmpsb
push
pop
mov
imul
push
sbb
add
fsubr
leave
lea
push
scas
lods
jbe
or
and
movsb
sbb
rolb
lock
enter
and
in
lret
adc
les
mov
insl
inc
mov
dec
push
in
jae
lret
call
scas
mov
rcll
mov
lods
aaa
ret
and
and
jmp
fstl
adc
inc
movsl
fwait
add
imul
arpl
out
mov
dec
inc
xchg
scas
push
jle,pn
test
leave
jecxz
push
mov
dec
sub
aam
iret
js
lret
jmp
inc
inc
std
lock
xor
jp
aas
push
inc
mov
pusha
adc
out
jecxz
xor
sub
icebp
ja
nop
stos
pop
adc
rolb
cltd
cmp
push
insl
inc
inc
cmp
xchg
sbb
xchg
lods
orl
pusha
inc
dec
pop
inc
mov
subb
cmpsb
inc
dec
in
mov
je
in
out
and
jle
imul
lret
jo
inc
rolw
leave
mov
xchg
mov
xchg
mov
xchg
mov
and
cmc
lret
es
mulb
xchg
test
fdivp
daa
pop
jmp
inc
leave
and
pop
aam
adc
or
dec
enter
stc
xchg
mov
fwait
xchg
push
repz
jl
xchg
mov
mov
jae
imul
ljmp
sbb
jle
scas
stc
jbe
ret
push
xchg
dec
sub
add
in
adc
out
out
and
fs
push
nop
mov
repnz
add
adc
push
iret
int3
orb
inc
lock
pusha
push
mov
inc
push
sbb
lahf
push
mov
jns
jns
jp
iret
out
out
iret
mov
fadds
in
int
cmp
in
cli
outsl
leave
and
icebp
insl
mov
jle
leave
aad
dec
pop
mov
std
lods
lahf
shl
xor
mov
fwait
bound
shlb
divb
rorl
fwait
ret
mov
inc
ljmp
test
scas
sbb
or
or
inc
lret
mov
test
or
sbbb
mov
xor
mov
or
rcl
dec
mov
sub
mov
in
pop
fcmovbe
les
test
adcl
push
push
add
insl
lahf
add
push
jmp
in
movsl
xor
test
mov
cmp
push
sbb
inc
or
sub
mov
pop
cmpb
mov
lret
cmc
sti
stos
push
add
cmp
push
sbb
and
data16
inc
cmc
pusha
mov
ds
insb
aad
and
pop
movsb
sub
or
pop
or
in
mov
sub
mov
or
fldenv
mov
xlat
bound
sbb
push
call
pop
adc
sub
sbb
mov
xchg
test
xchg
or
mov
insb
jns
in
xchg
mov
clc
daa
dec
sbb
fs
fnsave
stc
sub
inc
lcall
mov
mov
test
and
out
xchg
out
inc
push
lcall
in
pushf
inc
dec
pop
dec
jge
sub
movsb
aas
xchg
cltd
jle
inc
jmp
lcall
xchg
push
jmp
xor
sub
xchg
jno
add
insl
fbld
call
sbb
std
cmp
sbbb
inc
cmp
stos
rorl
push
filds
push
push
ja
jmp
mov
out
cmp
lea
das
cmp
ds
out
popf
insl
lret
pop
mov
int
fimull
mov
cli
in
pushf
enter
xor
push
push
fcmovnb
insl
imul
fwait
sahf
into
mov
pop
clc
repz
adc
pop
in
hlt
jbe
mov
jle
mov
dec
int3
pushf
jne
das
mov
shrl
les
ljmp
shlb
aad
dec
nopl
in
sub
jge
jns
icebp
cmp
or
xchg
cmp
dec
xchg
icebp
outsb
mov
enter
loope
xchg
inc
fcompl
dec
cmp
cmc
jmp
popf
lods
lahf
movb
add
test
out
sti
sbb
stc
test
jg
pop
inc
hlt
in
loope
inc
add
sbb
sarb
mov
inc
nop
pop
mov
test
inc
mov
imul
int3
fwait
out
sahf
xchg
test
jg
test
pop
enter
add
imul
loopne
pop
pop
sub
lds
pusha
lock
loope
inc
cmp
repnz
cmp
cwtl
clc
aas
in
mov
movsl
mov
mov
cltd
xchg
jne
rclb
pop
sti
pop
mov
sub
mov
leave
jge
fidivrl
jne
lret
jbe
je
test
and
mov
lock
push
jns
sbb
inc
fwait
loop
adc
sub
mov
jmp
pusha
stos
push
repnz
xor
fstl
lock
loop
movsl
and
and
push
sbbb
jno
enter
fistpll
push
jbe
push
sbb
popf
fidivrl
dec
das
push
and
das
enter
cmc
scas
cmp
inc
lret
mov
orb
adc
push
lods
arpl
bound
sub
and
adc
push
es
push
dec
cmp
inc
xor
arpl
sahf
xchg
mov
add
cmp
nop
test
dec
dec
cmpsl
jbe
in
dec
ja
xlat
mov
cmp
test
mov
sub
clc
adc
scas
or
pop
add
rorl
xchg
std
push
test
adc
movsl
cmpsl
mov
cmpsb
aas
je
add
sub
fidivs
xchg
push
or
mov
push
andl
mov
int
cld
test
out
hlt
lods
sub
dec
push
adc
std
mov
xor
fmull
xor
xorb
push
imul
sbb
mov
stc
into
imul
inc
bound
adc
xor
or
xor
fdivl
or
out
mov
shll
jae
inc
flds
negl
cld
cli
inc
fldcw
pushw
jnp
push
adc
aaa
push
lcall
mov
aad
xor
stos
out
in
stos
push
add
push
das
gs
sti
mov
popf
mov
and
test
push
add
push
sub
and
mov
inc
cltd
xchg
je
jle
add
leave
movsb
sbb
enter
out
lea
lcall
inc
rol
inc
sbb
mov
pop
mov
cmp
daa
into
mov
mov
pop
sbb
popa
and
adcb
fst
jl
dec
add
rolb
cmp
cwtl
pop
jecxz
stos
fdivs
inc
bnd
je
lods
mov
xor
add
mov
pop
into
push
scas
jge
ret
sub
sub
cmp
call
out
popf
rorl
in
pusha
xor
jmp
inc
daa
rcr
add
mov
loopne
es
sbb
scas
and
roll
cmp
xchg
xchg
inc
or
dec
sbb
mov
fmull
cmp
pop
inc
cmpsl
mov
lret
addb
cmp
shlb
aaa
out
je
repnz
xlat
inc
mov
dec
fildl
cmp
js
pop
and
test
cmpsb
mov
pop
xor
xor
adc
jmp
dec
jne
push
add
xchg
fwait
push
jnp
test
dec
mov
fmul
sub
leave
nop
mov
shlb
outsl
lods
cmpsl
mov
cmc
pop
popf
in
inc
icebp
and
movsb
push
sub
mov
je
xor
push
rorb
sarb
inc
fsubrl
ljmp
out
lret
sub
mov
push
scas
cmc
mov
dec
xchg
pop
out
aas
int
xchg
add
jo
arpl
out
and
int
and
mov
xor
add
cmp
iret
jne
pop
jo
js
pop
test
jge
lret
lret
dec
test
movsl
jns
xchg
sbb
pop
cld
and
jecxz
lret
test
ja
push
mov
push
out
xchg
test
sbb
popa
and
xor
out
jle
loope
mov
lret
mov
aad
fiadds
inc
das
sbb
arpl
mov
adc
out
shll
sub
mov
push
cmp
adc
jbe
mov
jbe
and
test
pop
or
or
push
add
cmpsb
aad
movsl
mov
cltd
jne
repnz
shll
cmp
neg
jb
mov
xor
mov
lea
xchg
and
xor
mov
lods
inc
push
shll
cs
and
adc
std
xchg
lods
aas
cmp
sub
mov
cmp
xchg
push
sub
popa
aaa
xor
pop
adc
cmp
pop
rorb
les
add
mov
xchg
xor
and
push
test
mov
add
mov
mov
inc
xor
rorl
jl
inc
dec
ret
mov
loope
xchg
pushf
fldcw
popf
or
cmp
ss
lods
push
cmp
sbb
in
jge
aam
pop
adc
push
or
ds
inc
mov
push
inc
cmpsb
cmp
das
daa
cmp
bound
jbe
in
jecxz
xlat
mov
lcall
jns
add
mov
mov
fbld
jge
stos
shr
dec
inc
fists
mov
cltd
xchg
jns
xchg
and
loopne
mov
jp
out
test
xchg
fdivr
mov
xor
mov
notl
push
jno
cwtl
xchg
addl
dec
cld
lods
pop
mov
adcl
sbb
jno
sbb
xor
pop
lret
adc
mov
lahf
xchg
pop
xor
ljmp
cmp
jmp
ljmp
and
xor
or
lahf
push
outsl
into
dec
inc
cmp
xchg
inc
xchg
fadds
mov
movsb
or
test
int
xchg
push
and
pop
hlt
test
mov
sub
clc
daa
inc
mov
nopl
repnz
or
xchg
mov
xor
stos
pusha
sub
and
and
or
cmc
mov
adc
aas
and
add
xor
sub
mov
mov
ss
push
xor
mov
mov
shlb
loopne
xor
push
iret
and
int
push
outsb
jg
sub
iret
push
or
clc
outsl
jne
subb
add
addr16
movsl
xorl
jno
out
dec
dec
mov
xchg
outsl
into
mov
cwtl
push
mov
push
mov
lods
aas
or
fistpll
sbb
mov
fstpt
mov
and
adc
xlat
jge
xor
in
das
mov
lods
andl
roll
aaa
jbe
push
dec
pop
ret
imul
mov
push
aas
arpl
out
dec
popf
sub
inc
popf
movsb
in
xchg
or
scas
push
ret
dec
xor
sbb
mov
scas
aad
lock
jecxz
cmp
lds
lea
insb
cmp
adc
pop
inc
ret
mov
cli
incb
and
ja
sub
fstps
jns
sub
notl
jo
xchg
aam
popa
imul
add
fsubrp
jecxz
ljmp
sbb
add
jmp
ret
fidivl
mov
in
mov
aam
iret
pop
ds
cltd
mov
hlt
lahf
out
and
nop
push
xor
pop
inc
push
fwait
mov
pop
fisttps
jge
pop
sti
inc
les
mov
stos
mov
in
mov
in
int
cmp
jmp
shrl
mov
fnstsw
movsb
int
xor
cmp
push
mov
jb
test
pop
fdivrl
pop
mov
andl
sbb
jb
cmp
xchg
jg
mov
jne
xchg
mov
xor
and
js
jl
f2xm1
call
dec
repnz
cmpsb
or
inc
and
test
adc
push
push
xor
nop
adc
inc
pop
cltd
das
ds
test
jmp
mov
jle
fld
je
test
push
add
inc
pop
adc
lods
jmp
into
call
cli
out
stc
scas
push
in
xor
push
push
mov
aaa
dec
pop
imul
lods
popf
add
int
hlt
jnp
add
rcr
push
cmp
pop
adc
int
dec
fstpl
enter
sub
jns
stos
mov
cmp
std
mov
mov
and
inc
stc
lahf
test
std
jge
mov
negb
pop
jb
mov
push
cmp
xchg
test
dec
addr16
cwtl
push
ds
movsb
inc
mov
cmp
repz
dec
push
cli
jne
incl
addr16
outsl
in
jo
out
out
sbb
xlat
mov
mov
jbe
or
test
and
adc
cld
insl
or
enter
lea
sbb
jmp
int3
mov
popf
xor
adc
xchg
push
xor
sarb
xchg
jle
dec
mov
xchg
int
jae
out
mov
gs
xor
ret
mov
push
nop
dec
adc
loop
andb
adc
xor
jns
or
jp
data16
std
xchg
scas
fiaddl
repz
xor
mov
inc
dec
pushl
xchg
imul
les
adc
repz
outsl
add
cmp
aas
adc
jns
or
mov
cltd
cltd
or
cld
xchg
hlt
lods
es
arpl
rcll
rol
or
push
popl
es
xchg
gs
arpl
cli
rcr
cmp
lcall
jecxz
fcmovbe
rcrl
pop
out
add
mov
lds
pop
jp,pn
dec
cltd
add
leave
xchg
pop
cmp
jmp
repnz
adcl
mov
xor
xchg
mov
icebp
xorb
rcll
test
pop
and
xchg
xlat
mov
push
lock
jecxz
mulb
add
repz
add
pop
idiv
adc
cld
xchg
mov
xchg
enter
and
jg
or
push
ljmp
ss
sub
sub
testl
sbbl
or
jo
sub
push
xchg
mov
adc
loope
test
jg
inc
mov
and
push
dec
adc
mov
and
sub
add
insb
loope
sbb
push
mov
jl
sub
xor
stc
pushf
inc
das
iret
in
jmp
scas
and
mov
fistl
pop
push
sbb
cwtl
push
inc
inc
das
inc
incb
xchg
jb
mov
dec
sbb
outsb
adc
shl
test
push
imul
add
fldl
cmc
lds
jecxz
adc
orb
or
aad
sub
lret
adc
mov
jge
push
sub
mov
mov
xchg
mov
in
mov
mov
adc
mov
iret
push
dec
out
mov
rorl
and
adc
jl
push
fstpl
and
movhps
ss
faddl
xorl
dec
lahf
sbb
clc
lods
inc
insb
xchg
sbb
mov
or
test
je
mov
insl
dec
out
pop
mov
fcompl
xchg
cmp
out
sub
jmp
mov
mov
loope
ljmp
in
add
bound
xchg
nop
enterw
cmp
add
or
xchg
inc
aam
imulb
int
jns
or
jmp
and
xor
je
popf
or
and
add
xchg
add
pop
dec
dec
or
sbb
fisttps
jmp
xor
lret
outsl
imul
and
lods
and
scas
sbb
in
mov
lock
lret
sbb
test
imul
test
lds
rcll
xor
sub
dec
jno
sbb
lods
add
sbb
cs
xchg
sti
test
call
stc
mov
push
ret
pop
or
xchg
inc
jb
nop
ss
dec
mov
lret
mov
movsb
xor
imul
push
sub
xchg
mov
cmp
push
sub
mov
jns
les
pop
and
stc
testl
hlt
adc
inc
icebp
inc
lock
xchg
push
cmc
imul
pop
mov
hlt
xor
jne
pop
repnz
pusha
repz
push
sbb
inc
and
xchg
jp
dec
repnz
out
bound
adc
inc
jge
dec
inc
gs
sub
xlat
add
sarb
pop
popa
push
scas
popa
fstl
sub
hlt
mov
ret
sub
sarl
mov
inc
adc
sub
push
fstps
insb
xchg
lret
dec
lcall
ret
arpl
push
fmull
ror
cmp
ss
movsb
sub
pop
enter
jbe
inc
inc
pushl
fwait
test
add
push
ljmp
gs
sti
mov
mov
jo
ljmp
idiv
adc
dec
gs
xchg
mov
pop
lea
clc
sub
mov
pop
pop
cld
inc
in
push
stc
fdivrp
nop
int
jmp
ds
mov
int3
xor
ljmp
sub
or
shll
dec
daa
ret
adc
test
dec
fisttps
mov
sti
pop
push
inc
daa
leave
notl
push
lea
jle
push
xlat
loope
clc
push
insb
xchg
icebp
leave
imul
jnp
mov
int
lds
dec
add
push
push
lods
cmp
fldcw
inc
xor
lds
cmp
pop
push
data16
jge
inc
test
push
orl
lods
cltd
dec
mov
int3
push
jmp
sub
jne
sub
jl
and
addl
pop
out
mov
movsl
je
push
mov
call
insb
cwtl
cmp
sbb
or
lret
cmp
xchg
std
mov
xor
mov
and
xchg
push
pusha
sbb
stos
aaa
inc
insb
aad
and
ror
jecxz
test
sbb
xchg
clc
adc
mov
test
pusha
imul
xchg
adc
mov
fmulp
subl
cmpsl
fcompl
push
rcll
sub
lcall
imul
mov
adcl
xchg
cmp
jecxz
mov
test
inc
add
test
pop
pop
or
jmp
or
mov
jb
int3
fstpl
cmc
lods
lds
dec
push
xor
insb
adc
leave
sub
push
in
call
sub
inc
ret
add
cld
mov
sub
lret
icebp
jle
icebp
cmpsb
cmp
dec
pop
inc
mov
xor
pushf
cmp
push
xchg
jmp
jbe
xchg
cmp
xor
pop
cltd
test
vmovsd
test
arpl
xorb
push
iret
or
adc
mov
lcall
test
int
popa
jmp
jns
add
add
sbb
sbb
cmp
outsb
popa
insb
add
das
push
push
repnz
aad
js
inc
icebp
mov
adc
jg
cmp
mov
das
xchg
or
jae
mov
lea
aas
out
add
aaa
ja
pop
aad
fucomi
ror
mov
adc
jl
xor
test
mov
fnsave
ficoms
mov
push
pop
movl
jns
shrb
jg
out
scas
adc
pop
inc
jbe
fwait
adc
inc
arpl
push
cmp
xchg
rclb
xor
js
add
mov
repnz
push
sub
inc
pcmpgtw
cs
and
nop
lret
and
arpl
enter
ljmp
mov
les
rolb
mov
lods
test
in
mov
outsl
in
sbb
add
shll
add
in
cmpsl
idivl
or
lock
mov
cmp
jnp
xchg
testb
or
aam
xchg
stc
test
mov
and
das
mov
aaa
pop
jnp
jns
jb
punpckhbw
xchg
jne
lods
lds
push
add
cmpl
inc
dec
movsb
in
repnz
jnp
mov
sub
add
mov
cmp
setp
loope
ret
pop
ss
shr
mov
jno
dec
rorb
in
scas
test
ror
inc
push
data16
dec
sbb
jne
xor
out
add
out
pop
sbbl
mov
xchg
xor
xor
or
pop
cmpsl
inc
shlb
push
mov
fwait
jb
xor
jmp
sbb
xchg
addr16
push
aas
and
mov
iret
dec
ret
test
enter
sti
loope
leave
mov
mov
dec
mov
dec
sbb
xor
mov
pop
mov
sbb
aad
mov
mov
clc
bound
dec
imul
pop
mov
adc
scas
xor
cmp
cmp
imul
mov
in
sub
adc
idivb
test
xchg
jmp
leave
scas
dec
or
mov
stos
popa
aaa
pop
push
adc
fst
pop
out
mov
shlb
stos
sbb
fildl
shl
add
pop
lock
jae
push
mov
jne
jb
adcb
inc
scas
dec
aam
ret
pop
out
jnp
cmp
push
mov
in
xchg
mov
mov
dec
adc
pop
out
leave
aad
es
inc
daa
outsl
mov
aam
rcrl
mov
call
arpl
and
cmp
mov
mov
dec
jp
sub
push
mov
in
sub
xchg
fxrstor
fiaddl
mov
inc
ror
push
ret
js
push
and
inc
ss
fsub
jmp
jle
push
pop
aam
aam
mov
lea
in
xchg
xor
adc
pop
sti
into
jb
inc
jle
scas
jmp
mov
adc
pop
ds
jnp
test
or
stc
sbb
rcl
adc
sbb
cmpsl
jno
loope
nop
fldcw
adc
or
xor
incb
movsb
lock
push
pslld
leave
scas
lea
ds
pop
cmp
mov
test
in
std
xor
in
lcall
jno
jae
adc
daa
mov
jecxz
fdiv
xchg
incl
je
or
xor
ret
dec
iret
mov
sbbl
stc
add
sti
aaa
aaa
mov
jns
stos
sti
mov
int3
pusha
aad
lods
loope
xchg
jg
push
jmp
cli
ja
cltd
popf
test
pop
jmp
push
cmp
cmp
dec
sub
js
cmp
in
sahf
ret
imul
pop
jl
adc
sub
mov
lea
popf
push
popa
xor
adc
pop
pop
ret
inc
and
stos
les
cli
ds
add
add
push
mov
insb
lods
mov
test
sbb
in
adcl
sbb
adcl
sbb
and
xchg
stc
push
or
mov
or
jecxz
adc
mov
push
sub
mov
lock
mov
xor
and
testl
jmp
mov
xchg
dec
rcrl
inc
dec
stos
les
or
mov
es
pop
cmpb
xchg
popf
mov
pop
xor
jp
mov
sub
sarb
xlat
sti
sbb
or
lods
mov
mov
jne
cmp
mov
inc
pop
sbb
out
popa
mov
ret
fsubrl
shrb
inc
mov
inc
rclb
dec
out
imul
cmc
pusha
les
or
mov
lods
js
lds
cli
mov
rorb
dec
cmp
sub
or
faddl
int
rorb
pop
push
mov
or
fcmovnb
popf
les
pop
mov
fxch
or
push
push
inc
cmovl
test
out
int3
gs
data16
outsb
push
sbb
push
arpl
xchg
add
test
out
enter
outsl
in
movsb
cmp
adc
fiadds
cmp
xor
adc
cwtl
xor
fs
push
push
jno
xchg
pusha
adc
jecxz
idiv
and
insl
loop
mov
xchg
cmp
popf
mov
fimuls
push
add
fnsave
iret
xchg
cld
insb
andnps
fists
pop
or
and
icebp
ret
or
adcl
mov
sub
cli
lret
ds
imul
mov
mov
sbb
ja
sub
jmp
enter
clc
rolb
stc
pusha
mov
dec
or
xchg
adc
inc
adc
sbb
cmpsb
lea
push
cmp
je
daa
sub
mov
mov
jne
cmc
mov
xchg
xor
jno
lods
dec
inc
dec
or
fcompl
inc
scas
lock
insb
sbb
jns
scas
mov
mov
mov
jo
xchg
sbb
push
adcl
mov
shrb
xchg
fwait
ss
or
mov
cmp
js
cwtl
xor
pop
cmpsb
scas
roll
rorb
push
and
push
sahf
repz
es
int
inc
jle
pop
divl
cmp
out
push
sub
cwtl
call
inc
xor
movsl
imul
scas
xchg
mov
mov
jle
imul
arpl
ja
mov
jae
jmp
andb
dec
std
adc
inc
and
popa
into
xchg
jb
scas
xor
mov
imul
xchg
and
or
outsl
inc
sub
mov
pop
sub
mov
mov
push
lret
pop
in
out
jno
inc
mov
pop
arpl
inc
fdiv
dec
pop
lahf
or
inc
movb
outsb
mov
xchg
pushf
inc
cmp
repnz
cmp
pushf
shrl
mov
shll
sub
cltd
iret
fldt
sbb
and
sbb
mov
pop
xchg
adc
lret
lcall
shrb
push
push
das
packssdw
mov
push
pop
rorb
sbb
and
push
or
outsl
sub
das
fstl
fidivl
bound
mov
dec
imul
sahf
imul
fstpl
stos
mov
jo
push
loop
sbb
pop
push
ds
lea
cltd
fnstcw
inc
cmpl
lds
cmpsl
mov
mov
jle
dec
add
xchg
test
and
lahf
push
out
pop
aad
js
lahf
pop
in
dec
mov
fsubs
add
outsb
jg
inc
fisttpl
pop
enter
mov
mov
dec
and
mov
dec
mov
inc
jmp
outsl
push
mov
adc
sbb
sub
and
ret
adc
push
out
or
fwait
dec
in
scas
pop
mov
shll
ja
je
loop
int
mull
bound
adc
inc
xchg
fbld
xchg
not
movsb
and
shlb
push
xchg
add
icebp
daa
cmp
push
push
lea
pop
jae
xor
test
fisttpl
dec
insl
push
mov
test
ret
enter
xchg
push
test
adc
lahf
pop
pop
aam
mov
cmp
dec
test
xor
outsb
push
mov
mov
ja
scas
in
push
outsb
xchg
cmp
insb
cmp
xchg
sbb
pop
lahf
sub
add
mov
push
and
stos
cltd
orb
cs
add
mov
sbbl
pop
mov
cld
addr16
in
icebp
std
sti
and
sub
lods
mov
pop
xlat
or
movlps
add
aam
popa
shll
inc
test
adcb
sbb
sarl
cld
bnd
add
not
sbb
add
push
push
cmpsb
ficompl
pop
push
push
clc
sbb
cmp
lahf
je
cmp
push
jle
or
iret
or
pushf
and
cli
shll
loop
jne
dec
loop
xor
gs
ficomps
sub
add
xchg
push
or
push
mov
jmp
xor
testb
sbb
lock
pop
imul
mov
movsb
mov
adc
movsb
out
mov
jno
pop
jnp
add
sbb
mov
call
loopne
ret
test
cmp
int
jns
push
icebp
jmp
xchg
rorb
adc
add
sti
push
and
popa
push
popf
jb
sub
xchg
aad
es
dec
push
stos
sbb
in
add
push
mov
dec
cltd
movsb
or
inc
jmp
or
or
lcall
jb
imul
adc
cmpsl
sbb
insl
lods
adc
movl
and
mov
addr16
daa
xchg
repz
sub
xchg
cmp
xor
xchg
ljmp
inc
push
cmpsb
xchg
ret
shlb
icebp
fisttpll
jp
out
js
cwtl
ret
leave
jb
push
flds
fadds
das
movsb
xor
pop
ja
sbb
and
jg
dec
shl
xor
rcll
and
or
pop
adc
addr16
sar
adc
xlat
push
sub
in
mov
xor
stos
je
movsl
imul
pop
cltd
or
sbb
pop
mov
dec
and
cmp
xor
shrl
or
call
mov
sbb
xor
aaa
mov
aam
adc
push
lock
pop
rorl
mov
ret
push
rol
lret
movsb
sub
arpl
push
sub
repnz
dec
cli
shlb
or
cmp
jne
mov
and
xchg
push
adc
dec
and
inc
adc
fistps
push
ret
push
out
and
push
fs
xor
inc
jl
das
call
fwait
dec
pop
xlat
and
insb
leave
cmp
scas
aad
lret
dec
push
adc
and
mov
mov
clc
imul
jno
sbb
xor
es
add
adc
daa
mov
mov
repz
cmp
test
mov
leave
pop
aad
mov
lock
clc
iret
mov
lods
adc
jp
xor
or
mov
cmpsb
adc
int
adc
imul
cli
lods
xchg
iret
inc
push
push
lcall
jno
imul
pushw
stc
sub
jb
ljmp
adc
mov
cmp
sub
test
mov
out
xchg
jbe
adc
dec
dec
xor
xlat
jecxz
dec
pop
or
cs
mov
jl
iret
addr16
gs
jle
iret
jecxz
test
nop
out
push
pop
arpl
fs
mov
loopne
sti
mov
xchg
dec
int
in
lret
pop
dec
xor
pop
lock
push
xchg
mov
push
mov
xor
push
add
and
ret
cmc
mov
cmc
dec
stos
sbb
scas
shll
cmp
leave
jns
cmc
lcall
shrl
xlat
mov
in
in
les
jns
aaa
aas
pop
inc
xchg
std
decb
add
push
xor
loop
popa
and
inc
fidivl
bound
mov
push
jne
mov
push
in
pop
cmpsl
and
jne
sub
rorl
das
sub
xchg
cmp
or
shl
insl
dec
sub
gs
pop
xchg
fwait
imul
adc
pop
jb
cmpsl
lock
not
movsb
sbbl
and
insl
dec
lahf
cmp
data16
or
jmp
mov
push
movsl
dec
pop
hlt
inc
sub
add
sbbl
mov
movsl
inc
jmp
mov
sarl
out
mov
in
mov
fnstsw
imul
and
add
jmp
cmc
and
mov
sub
pop
add
lods
mov
xchg
lds
and
clc
out
mov
cmp
stc
rclb
cmp
aad
rcpps
movsb
sbb
mov
cmp
lea
das
ja
js
ret
adc
sbb
cmp
push
push
in
pop
pop
insl
stc
popf
popa
test
stc
or
ss
pop
dec
inc
cwtl
sahf
dec
and
sub
and
push
fadd
pop
xchg
pop
mov
or
stc
or
jecxz
and
aad
pop
enter
lret
pop
fdivp
iret
fisttpl
push
cltd
cmpsb
add
add
push
push
cmpsl
lea
mov
cmp
mov
hlt
xor
loop
mov
mov
movsb
std
hlt
lahf
jle
lods
add
mov
aaa
push
daa
cmc
sub
fcomps
fsubrl
mov
dec
lret
adc
loope
push
popf
sub
jb
js
add
xor
adc
and
cltd
pusha
sub
pop
pop
leave
lods
jle
in
out
mov
adc
out
adc
loop
push
int
aaa
or
sarl
cmpsl
mov
mov
sub
sub
pushw
ljmp
xlat
scas
bound
adc
cmpsb
fnsave
dec
adcb
adc
push
out
mov
add
mov
dec
rolb
mov
xchg
sub
rcr
loopne
push
xlat
push
cmp
ret
and
add
xor
shrl
add
pusha
loop
out
adc
popa
push
jae
jno
inc
in
sbb
dec
or
mov
aad
nop
cmp
in
and
mov
int
rcr
addr16
dec
nop
pop
lcall
mov
pop
xchg
stc
jae
and
and
jmp
xchg
leave
xor
add
inc
sub
jns
les
dec
je
pop
adc
fs
roll
test
sub
insl
fcmovnb
repz
inc
inc
leave
fbld
sbb
shlb
cmpsl
dec
clc
icebp
std
out
jno
mov
xor
lcall
fists
mov
insb
jge
mov
lods
movl
dec
fbstp
loopne
leave
and
cmpsl
les
jbe
ljmp
int3
mov
push
mov
leave
add
shrl
xchg
fstl
ljmp
inc
into
int3
jo
loopne
adc
or
mov
ljmp
cmp
jo
aaa
stos
xchg
cmp
sub
inc
outsb
out
sbb
sbb
adc
mov
jnp
add
stos
fisubrs
out
mov
ret
dec
xor
fsubs
adc
jmp
push
mov
jp
iret
loope
mov
outsb
not
mov
pop
xchg
out
enter
push
popf
mov
aaa
xchg
adc
dec
lret
or
push
insl
pushf
sbb
repnz
adc
jmp
fldenv
jns
insl
adc
out
ds
rol
cmpsl
or
lahf
xor
and
data16
cmp
xchg
call
dec
les
pop
xor
or
xlat
adc
push
lods
push
xor
sub
int
shll
popa
mov
scas
add
cmp
fildl
sahf
int
int3
test
or
pop
repz
lret
outsb
imul
jge
addr16
jns
call
mov
lcall
dec
inc
gs
imul
fcomps
stos
lret
fbstp
jle
pop
call
and
xor
notl
sub
sbb
cli
and
pushf
push
out
xchg
inc
lods
jge
xchg
pop
cmp
lock
pop
gs
repz
test
push
in
xor
out
and
add
in
jno
lahf
loopne
mov
mov
es
ds
or
adc
mov
xchg
sub
xor
xor
cmpsl
test
pop
mov
push
and
sub
add
adc
pop
inc
and
push
push
mov
popf
imul
pop
lds
testb
or
and
adc
or
cmp
push
es
jb
push
inc
sub
into
shll
sub
inc
mov
inc
mov
pop
jg
test
cltd
out
mov
lret
add
mov
pop
jne
pop
in
aad
add
mov
loopne
sub
or
jecxz
popl
cs
daa
add
lcall
dec
loopne
out
adc
sti
loop
fidivrs
add
and
xchg
pop
mov
outsl
test
mov
push
fwait
je
aaa
orl
jne
in
mov
repz
dec
add
ss
and
sub
sbb
cmpsb
inc
test
inc
mov
fsubr
pop
dec
push
sub
popa
jae
sbb
fs
fwait
gs
lret
xor
xchg
dec
dec
lret
dec
fldl2e
lea
mov
cld
add
pop
and
sbb
jp
pop
test
aad
sub
into
scas
mov
cmp
ret
pop
int3
pop
push
fwait
outsb
enter
push
in
leave
loopne
insl
push
test
adc
aas
decl
inc
jns
mov
cli
and
stos
dec
jg
dec
imul
in
addr16
push
aas
daa
fnstcw
or
cld
mov
adc
shlb
aaa
and
cli
sub
jge
jne
sub
adc
pushf
jo
inc
out
push
stos
pop
sbb
adc
gs
inc
push
mov
sbb
sarl
in
movsb
sarl
xor
test
imul
mov
out
std
push
cmp
mov
lock
ret
lods
outsb
icebp
mov
movsl
mov
scas
js
movsb
push
or
sti
lds
mov
xor
bound
xchg
dec
mov
adc
and
lods
jecxz
addr16
mov
mov
cmp
daa
and
lahf
arpl
pop
xchg
push
mov
idivl
lahf
or
jbe
xor
xchg
cwtl
filds
ljmp
ds
cmp
bnd
cmp
gs
hlt
cld
jne
aad
cmp
jo
push
mov
insb
ljmp
bound
push
and
dec
dec
fwait
push
xchg
lods
fisubl
ss
inc
insb
fs
fisttpl
adc
hlt
shrb
pop
jp
fwait
mov
ret
inc
call
xlat
jne
mov
lret
cmp
or
movsl
mov
fcmovnbe
push
lea
inc
or
iret
push
inc
jnp
adc
bound
sub
jne
les
and
push
leave
dec
lods
mov
stos
cmpsb
adc
repnz
jb
mov
dec
in
rcrl
out
sahf
stos
stos
push
ficoms
cmpsb
inc
cmp
push
and
push
push
fdivrl
xchg
fcmove
and
cmp
mov
sub
test
bound
cmpsl
popf
mov
loop
cli
jns
adc
les
lods
dec
mov
fs
ds
push
mov
std
ss
cmp
aam
add
and
cs
mov
loope
insb
pop
iret
insl
adc
sub
xor
mov
jecxz
es
jg
mov
or
stos
imul
mov
add
pop
xchg
push
add
into
stos
outsl
test
jge
ficoml
cmp
rclb
fidivs
pop
sbb
add
adc
arpl
fwait
insb
pand
std
popa
imul
jg
pop
outsb
sub
insl
and
scas
xchg
int
push
pop
mov
rorb
dec
xchg
sbb
sbb
divl
stos
lret
daa
int3
fldt
sub
sub
ljmp
int3
movsb
out
in
repnz
js
adc
fldl
mov
pop
sub
push
push
fildl
aam
push
pop
add
cmp
or
addr16
addr16
scas
pop
jg
push
jge
dec
imull
xor
xchg
arpl
add
ja
xchg
fisttpll
incl
xor
decb
push
cmpsb
lret
pop
repz
mov
cmpsb
cmpsb
aam
add
lcall
in
movsl
adc
insl
lods
push
lahf
jmp
enter
jmp
mov
subl
insl
pop
mov
dec
flds
bound
jge
jo
ret
ljmp
int
std
rol
lret
jno
mov
jp
repnz
xlat
mov
pop
or
ljmp
add
loop
lods
xchg
pop
xlat
adc
cmp
mov
mov
sbb
enter
xor
push
xchg
sbb
cmp
cli
inc
out
pop
xchg
jnp
fdivr
arpl
fdivrp
inc
icebp
sub
sub
sarl
fists
push
clc
sbb
andl
lock
arpl
sub
mov
loope
xor
cwtl
pop
xchg
sbb
dec
mov
fistpl
insl
fwait
sub
loope
mov
pop
cmpl
jno
inc
imul
std
scas
xor
dec
sbb
scas
pop
dec
mov
outsb
xchg
pop
daa
dec
adc
push
mov
mov
pusha
mov
fs
shr
shll
in
xor
subl
cmp
and
add
dec
sbb
cwtl
xchg
mov
jmp
test
call
jle
xchg
gs
iret
int
shr
cli
repz
das
mov
sub
fists
lds
dec
mov
push
xchg
add
sbb
arpl
das
add
dec
xor
hlt
hlt
inc
idiv
dec
xor
sub
sbb
gs
int3
add
push
fdivrl
insb
int3
ja
xor
lcall
add
outsb
into
arpl
sbb
and
mov
dec
leave
jmp
clc
in
jns
xor
and
push
test
add
jb
hlt
lret
push
adc
ss
mov
mov
mov
adc
push
movb
in
dec
icebp
lock
and
lret
subl
inc
fcmove
dec
cltd
mov
scas
scas
ret
leave
mov
aaa
or
negb
xchg
sub
cmp
mulb
test
xchg
xor
inc
shlb
push
push
out
jp
scas
js
mov
shrl
popf
or
or
mov
jg
int
dec
pop
cld
lods
mov
dec
or
lods
sbb
mov
sbb
pop
test
push
jbe
sbb
cli
insl
mov
shll
jle
lcall
pushf
sbb
call
xchg
sahf
jl
cmp
into
pusha
sbb
scas
out
dec
or
pop
adc
sti
aam
jecxz
out
enter
pop
push
out
inc
lock
je
xorb
xchg
mov
aas
jecxz
popf
dec
pop
rcrl
jmp
xchg
pop
shr
lods
and
test
jae
cmp
fdiv
jl
pop
xchg
dec
push
rorb
dec
sbb
ds
jmp
pop
insl
pop
push
adc
dec
dec
push
mov
js
xor
sub
push
add
and
rcrl
adc
bound
push
fisubrl
xor
xor
movb
push
xor
jg
jecxz
sub
jl
xchg
mov
sub
push
dec
inc
cmp
cmpsl
xor
insb
jp
out
cmp
dec
push
lret
cmp
rcll
ret
jo
fstpt
xchg
roll
inc
add
stos
jge
inc
ret
scas
jmp
out
mulps
shlb
xchg
xchg
dec
mov
jmp
ja
adc
bound
sub
xor
jge
add
fincstp
rol
call
and
or
push
xchg
mov
je
ffree
cmp
inc
pop
sbb
mov
bound
rcll
loope
push
arpl
add
into
fdiv
sub
add
lods
mov
dec
push
pop
xchg
lea
cmp
sub
dec
xor
fadds
in
pushf
hlt
xor
mov
cmp
add
imul
cmp
aaa
jae
daa
or
sub
sbb
scas
push
int3
jns
sbb
mov
ret
dec
adc
push
lods
int
sub
andl
sbb
rcr
and
aaa
xchg
mov
in
scas
hlt
xlat
adc
test
or
push
or
decb
push
xchg
in
outsl
xor
pop
adc
add
fldt
mov
mull
test
mov
fwait
pop
rcr
cltd
xchg
das
daa
jnp
cwtl
testb
fidivl
clc
dec
hlt
scas
inc
gs
das
aas
pushf
lods
or
xor
cwtl
in
int3
into
push
into
sbb
in
xchg
lcall
lea
popa
leave
xor
enter
lock
mov
aaa
outsl
dec
aas
cld
add
sbb
pusha
sub
sub
sub
scas
loopne
push
add
fisttps
adc
mov
lods
sub
jne
test
fs
add
lahf
push
popf
ret
stos
inc
and
xlat
les
in
loop
test
ds
adc
jns
outsb
cmp
in
cli
pop
ret
iret
mov
dec
lods
movsl
push
dec
insl
jp
lcall
fisttpll
stos
xchg
outsl
shlb
pop
or
xor
pop
xor
imul
lock
jmp
ljmp
add
dec
cli
dec
mov
arpl
mov
subb
and
pop
iret
iret
fcomp
imul
imul
mov
push
jp
cs
jg
xor
sar
incl
mov
jne
mov
inc
inc
jo
icebp
jg
lods
imulb
call
mov
push
fwait
loope
inc
mov
jl
repz
push
jbe
loop
jns
xchg
in
test
icebp
lods
xchg
fwait
sbb
xor
mov
jne
out
shll
jns
sub
scas
xor
ds
mov
jns
mov
iret
cmp
paddsw
vpshab
sub
cmp
bound
insl
std
testl
repz
addb
jl
rcll
mov
ja
or
cmpsb
push
or
outsl
sub
cli
inc
xor
mov
sub
mov
sbb
add
push
mov
test
mov
ficoms
stc
mov
mov
iret
or
jl
pusha
adc
adc
int
cwtl
mov
inc
lea
outsl
popa
xor
mov
push
cmpl
shlb
clc
lock
inc
ret
negl
pop
addr16
xchg
inc
jnp
imul
xorl
mov
cmpsb
mov
mov
repz
xchg
cltd
lret
inc
addr16
ds
fisttpll
rclb
popf
or
mov
mov
int3
jnp
hlt
sbb
out
call
and
out
jmp
ret
jle
ljmp
pop
mov
xchg
mov
fisubrl
out
int3
or
loope
pop
mov
mov
add
sbb
push
stos
inc
hlt
and
mov
outsl
cld
adc
xlat
mov
aad
lock
or
xchg
fadd
push
jbe
pop
push
cmpsl
fbstp
lds
test
and
jl
fdivrs
xchg
int3
shlb
shl
loopne
inc
pop
out
scas
xchg
lret
cmp
mov
push
add
cmp
cmp
sti
lods
cmp
jg
inc
test
sbb
movsb
dec
mov
adc
xchg
xor
loopne
pop
mov
inc
jnp
out
dec
pop
fimuls
lock
repz
lcall
mov
pop
or
fcmovnb
aaa
add
insb
dec
movsb
leave
loope
into
jmp
dec
aaa
xor
pop
dec
xchg
fstps
loopne
ss
mov
jmp
mov
int
dec
pusha
cmpsb
cwtl
pop
fs
pop
push
imul
pop
outsb
or
scas
lret
iret
aam
mov
sbb
jmp
sbb
add
int3
inc
mov
dec
dec
test
mov
lds
lock
arpl
hlt
jmp
adc
pop
test
cmc
and
out
int
sbb
out
mov
add
add
mov
push
test
xchg
mov
dec
lret
mov
lcall
aad
stos
ja
add
clc
subl
sub
mov
fucomp
xchg
add
adc
cltd
fdivrs
mov
xor
mov
cmp
jge
stos
je
and
add
loopne
std
adc
jle
cmpsl
adc
loop
add
cmp
or
mov
xchg
out
test
fcmovu
fucomp
into
aam
xchg
enter
and
pop
fimuls
shll
testb
ret
clc
movsb
add
jmp
jnp
popa
leave
mov
pop
push
jecxz
cld
dec
mov
repz
stc
pop
les
pop
and
jne
sub
test
mov
insl
fxtract
mov
fnstsw
fwait
xchg
sti
std
jno
rolb
roll
jp
cmp
aad
shll
loopne
dec
mov
xor
xlat
outsb
int3
jle
cmp
dec
ss
call
notb
in
fwait
lcall
jecxz
out
pop
xor
aad
das
popa
ljmp
sbb
add
adc
xchg
dec
or
mov
aad
les
or
aas
adc
dec
adc
inc
stos
pop
pop
lret
cli
mov
call
outsl
rcl
jno
and
repz
sbb
sub
mov
mov
pusha
lcall
je
into
psllq
insb
add
nop
sub
fistl
repnz
inc
cmc
outsl
or
mov
arpl
push
lods
insl
dec
or
cli
mov
scas
adc
and
into
sbb
push
mov
repz
xchg
ret
jbe
dec
cs
mov
iret
stos
sti
and
fnstsw
adc
stos
cmp
das
and
add
pop
sub
cmc
jbe
test
push
testl
mov
pop
pop
fiadds
in
jns
push
or
movsb
imul
mov
xchg
jne
das
and
adcl
js
jecxz
out
adc
or
jbe
pop
ficoml
add
lcall
mov
in
leave
sbb
push
push
test
xchg
setg
add
cmp
xchg
xor
test
ds
push
mov
mov
das
pop
mov
test
xor
in
leave
jl
stc
clc
adc
mov
pusha
clc
lea
clc
push
jge
xchg
mov
test
add
test
dec
enter
cmp
and
adc
jno
mov
lods
decl
sub
jb
xchg
hlt
lret
or
mov
jae
jp
std
jno
or
fcompl
push
cmp
cmpsb
xchg
cmpsl
leave
pop
outsb
fnstcw
add
iret
dec
mov
jmp
addr16
ror
pop
jb
cmp
pusha
xchg
dec
cmpsl
ja
cmpsb
not
push
and
aas
pushf
dec
push
inc
lahf
jns
in
iret
push
xchg
int
cmp
ja
or
pop
in
mov
adc
cli
pop
ljmp
xchg
xchg
push
sub
push
pop
sbb
push
sub
lods
jmp
cmp
pop
lcall
inc
mov
mov
inc
cmpsl
push
hlt
xchg
xor
mov
mov
imul
pcmpeqw
lods
loopne
mov
js
sbbl
cli
inc
loop
mov
xor
jecxz
jg
or
rcl
jne
mov
cmpsl
pop
movsl
mov
pop
sub
stos
xlat
and
cmpsb
sbb
push
xchg
dec
jge
icebp
stc
sbb
outsb
mov
inc
jle
xchg
lcall
mov
cmp
jmp
sbb
or
xor
mov
loopne
testl
lret
push
inc
pop
adc
cmp
pop
push
clc
rorb
insl
jne
call
sahf
mov
push
rorl
daa
mov
gs
inc
xchg
and
inc
test
or
int3
daa
pushf
aaa
or
jnp
fnstenv
ret
ret
mov
jmp
gs
sub
jg
cmp
dec
pop
out
hlt
std
lret
test
aad
mov
fcomi
xor
cmp
or
mov
mov
movsb
stos
push
mov
inc
and
sub
jbe
imul
or
pop
pop
ret
xchg
sub
xor
pop
data16
ret
cmp
addr16
mov
mov
and
sub
push
sbb
or
andb
xorl
dec
or
out
repnz
lds
and
int
sbb
stos
loope
into
push
mov
mov
pop
xchg
sub
jmp
in
fdivr
scas
test
pop
pop
sbb
in
in
push
mov
and
insl
fstl
stos
hlt
adc
jns
arpl
cmpsl
iret
cmp
sahf
xchg
inc
scas
in
mov
lcall
data16
pop
rorl
outsb
mov
iret
push
xor
and
sbb
mov
or
mov
pop
mov
imul
leave
loopne
fnstenv
imul
filds
jne
in
mov
and
mov
mov
mov
cld
loop
cmpsl
clc
lea
into
push
sub
imul
push
outsb
push
mov
hlt
mov
and
xchg
rcll
cmp
xchg
pop
dec
xchg
fsubrl
lahf
add
push
sbb
loopne
push
test
es
js
xlat
int
or
cmp
hlt
ss
stos
gs
nop
out
and
xchg
shll
fucomip
sbb
xchg
popa
pop
stos
add
dec
sbb
dec
orl
xorb
pushf
ret
xor
pop
movsb
add
ret
dec
fmuls
push
or
or
nop
inc
push
test
pop
push
pop
cmp
push
pop
lods
and
mov
xor
add
popf
dec
lea
inc
pop
in
sbb
fsts
xor
shr
dec
cld
pop
adc
cmpsl
or
push
aaa
adc
or
inc
ret
testl
scas
add
lcall
adc
dec
sbb
sub
icebp
lret
out
testb
stos
cltd
and
and
xor
jae
push
adc
jnp
mov
and
popa
xlat
xchg
das
push
cmpsl
ret
push
push
lret
jle
cmpsl
leave
sbb
leave
jno
push
popf
enter
negl
pop
icebp
in
xor
mov
or
and
xchg
inc
rol
mov
out
push
mov
movsl
adc
shlb
pop
push
fcomps
out
adc
fcompl
inc
and
hlt
dec
cltd
lds
xchg
mov
push
pushf
sahf
jae
or
and
ss
lea
pushf
aaa
js
inc
iret
loop
inc
mov
and
rcrl
mov
xchg
or
cmp
outsl
lret
push
cwtl
dec
adc
inc
pop
sbb
outsl
clc
dec
mov
inc
add
jl
test
test
fidivl
mov
outsl
and
scas
mov
push
jo
mov
sbb
mov
fiadds
imul
xchg
xchg
insb
mov
push
divl
xchg
stos
mov
into
ficompl
mov
aaa
push
js
bound
inc
pop
outsb
je
fisubl
notl
outsl
in
out
add
pop
pop
imul
inc
ds
pop
shlb
mov
lahf
mov
push
or
stc
adc
mov
xlat
ja
or
cli
mov
mov
fs
sbb
and
cld
cmc
fsub
rorl
test
ss
cmp
pop
xchg
addb
xor
adc
test
sbb
and
adc
test
jmp
leave
dec
sbb
push
cmc
lods
mov
out
out
in
aas
gs
sbb
xor
add
and
lahf
adc
adcb
or
and
and
fadds
adc
aaa
enter
fiaddl
or
rclb
inc
shr
mov
sahf
mov
or
push
add
or
mov
icebp
frstor
cmc
pop
mov
mov
pop
aam
inc
jo
mov
jne
aad
fldcw
sub
sub
and
test
sar
or
cld
repz
pop
bound
cli
mov
sub
divl
and
pop
lock
int3
icebp
sbb
push
int3
insl
fs
jecxz
mov
test
popa
ret
and
testb
or
or
in
outsb
jae
or
in
xchg
mov
es
es
std
imul
dec
inc
push
mov
lret
xor
mov
pop
xor
adcb
cmpsl
shr
push
xlat
out
xlat
icebp
xor
leave
adc
or
jmp
aam
mov
push
insb
or
jg
dec
pop
das
push
xlat
in
repnz
dec
jecxz
nop
clc
sbb
icebp
je
pushf
xchg
cs
imul
in
enter
arpl
push
and
rcll
loope
mov
arpl
sub
ret
jo
xchg
mov
inc
add
fisubrs
popf
mov
inc
adc
jg
adc
ret
fmull
test
repnz
pop
jnp
inc
test
mov
ds
hlt
sbb
push
cmc
fwait
cmp
cmc
clc
cmp
xchg
sub
test
xor
mov
enter
jl
pop
dec
cmp
mov
push
jns
adc
dec
cmp
inc
push
xor
add
fsubrl
loop
out
loope
ljmp
sbb
fprem
hlt
pushf
cli
pop
pop
push
pop
jne
ljmp
mov
das
stos
addr16
in
inc
stc
mov
mov
xor
aaa
sbb
rcrb
gs
test
sub
push
cmp
lret
pop
push
daa
cwtl
dec
flds
push
dec
adc
das
mov
dec
mov
test
or
popf
orb
or
test
xchg
mov
scas
sbb
arpl
sub
push
pop
jno
and
jecxz
push
fidivs
dec
mov
fisttps
jp
sub
inc
arpl
in
mulb
cmpsl
sub
adcl
jno
sub
scas
sbb
push
or
js
in
lea
mov
aam
pusha
imul
pop
jns
adcb
call
shll
enter
xchg
xchg
leave
or
sbb
pop
in
stos
sbb
test
dec
push
sub
dec
mov
int
or
or
cld
sbb
pop
pushf
or
push
out
bound
inc
push
push
shrb
int
jnp
jns
repnz
xchg
add
inc
inc
xchg
adc
sti
mov
ficoms
sbbb
xchg
mov
nop
mov
pop
mov
mov
int3
sub
filds
push
insb
cmp
add
popf
or
pop
dec
insl
xchg
das
dec
push
dec
lret
and
stc
and
insb
pop
push
movsl
xlat
je
imul
insb
xchg
and
test
cmp
pop
fwait
dec
inc
xchg
icebp
mov
rorl
push
bsr
add
mov
push
sub
jmp
test
aam
out
cmp
sub
dec
movsb
pop
movsb
lret
jecxz
inc
mov
inc
or
xlat
outsb
cmc
sahf
sbb
testb
xchg
movsl
sub
out
dec
dec
xchg
loope
mov
data16
sbb
in
mov
pop
loope
pop
nop
lahf
cmp
jo
lods
mov
and
ret
arpl
sbb
xchg
mov
sbb
or
xchg
lret
adc
push
xor
cli
arpl
adc
outsl
mov
out
push
inc
inc
lret
add
push
mov
dec
ja
xlat
add
setne
cmp
loope
sbb
mov
sbb
fildl
dec
push
ds
jo
shlb
jp
ss
loopne
repz
fstp
cmpsb
xchg
es
loopne
in
and
cltd
dec
movsl
ljmp
sbb
scas
push
dec
cmp
xor
fistpll
aas
ljmp
push
push
inc
in
stc
test
mov
pushf
mov
and
stos
insl
or
out
dec
jae
int3
in
bound
pop
dec
or
sub
clc
cli
pop
cmp
pop
arpl
and
call
sbb
pop
idivl
mov
loop
dec
sahf
test
add
cli
mov
or
ja
push
sbb
sbb
push
inc
mov
out
push
aam
shrl
les
sbb
sbb
mov
scas
call
cwtl
jl
lsl
mov
mov
test
xorb
andl
jp
insl
xor
mov
out
test
fisttps
xchg
xchg
out
daa
cmp
pop
cmp
mov
mov
mov
enter
test
stc
push
adc
mov
sti
mov
outsb
stos
scas
movsl
push
fimuls
lea
imul
call
jecxz
rcll
pop
fcomp
imul
pop
push
lea
imul
mov
sub
and
call
ret
lock
sub
sbb
pushf
xchg
gs
adcl
mov
jle
push
jnp
add
xchg
ror
rcl
sahf
and
je
leave
sbb
adc
popf
push
lahf
loopne
mov
jbe
dec
stos
and
mov
sub
jne
mov
cld
sbb
mov
pop
push
daa
out
fsubl
mov
cmpsb
pushf
jmp
inc
ret
addr16
inc
mov
inc
pusha
push
add
xchg
xor
shll
sub
repnz
scas
cmc
int3
adc
clc
in
and
adc
cmp
pop
push
jg
adc
ljmp
adc
add
inc
lock
adc
push
das
mov
jp
adc
push
sub
mov
xor
pop
lods
mov
mov
push
loopne
test
mov
mov
mov
iret
mov
mov
xchg
xor
mov
cmp
lods
jb
mov
dec
xlat
rcll
test
pop
notb
and
lret
iret
jne
jmp
sbb
jecxz
sub
sub
jo
dec
sub
sub
addr16
sarl
sub
scas
add
out
or
stc
push
mov
test
pop
jmp
fucomp
pop
pop
dec
daa
mov
inc
dec
outsb
push
dec
xor
inc
pop
push
dec
xchg
or
pusha
or
xchg
cltd
pop
arpl
icebp
dec
push
push
cmp
test
icebp
xchg
jecxz
push
or
or
inc
fcom
jg
sbb
pop
jne
cmp
push
mov
dec
popf
pop
push
loop
jle
fmull
mov
movsb
xor
cmpsb
fnsave
inc
es
shrb
adc
lret
lret
cs
mov
adc
xor
in
notb
cwtl
mov
cmpsl
hlt
mov
pop
test
ds
sbb
add
mov
testl
js
test
int
cli
inc
inc
fimuls
adc
xchg
in
pop
dec
adc
sahf
cltd
inc
ja
inc
roll
ds
pop
or
xor
and
xchg
ficompl
ljmp
pusha
repz
pop
jo
or
lea
mov
test
and
outsl
test
mov
pop
in
lea
outsl
fstpl
hlt
sub
cmpsl
jo
xor
dec
stc
mov
pop
cmp
das
pop
mov
and
movsl
mov
or
mov
inc
xchg
lret
fcmovb
mov
push
dec
mov
lods
lahf
cs
fsts
xchg
aaa
pop
and
rcrl
fbld
xchg
or
pop
notb
testb
popa
daa
jbe
lea
xor
and
nop
cmp
subl
inc
xor
xchg
mov
fwait
add
jecxz
in
ss
push
test
jb
les
inc
popa
test
ret
stos
mov
xor
sub
outsl
les
inc
test
pop
xor
ljmp
cmp
xchg
dec
ja
inc
cld
or
inc
leave
or
pop
dec
jmp
arpl
push
jno
icebp
je
roll
lods
push
pusha
int3
stos
xchg
or
lcall
shl
xor
arpl
jl
mov
or
mov
mov
out
xor
sbb
js
and
and
sbb
out
sti
xor
fcmovnbe
stc
mov
dec
pop
sbb
or
scas
inc
xor
cmp
mov
ret
std
setle
dec
insb
leave
imulb
int
pop
mov
adc
mov
mov
cltd
dec
push
mov
wrmsr
pop
dec
loop
jb
lea
pop
inc
es
push
lret
xor
sub
pop
or
cmp
jno
jecxz
add
test
pop
js
iret
mov
mov
and
pusha
mov
lods
int3
repz
sbb
out
cmp
cmp
sahf
jno
js
cs
add
mov
jmp
cmp
and
jns
insl
mov
sub
xlat
imul
shlb
inc
mov
lret
xor
push
out
sub
inc
jbe
aad
sub
mov
leave
mov
call
mov
pop
pop
mov
ja
mov
dec
and
arpl
nop
icebp
pop
inc
mov
xchg
push
push
xchg
pop
pop
or
add
nop
scas
outsl
xor
dec
dec
testb
dec
les
test
imul
cli
sbbb
jmp
jb
jecxz
sahf
sbb
iret
inc
xchg
repz
scas
adc
xchg
cmp
jno
and
xchg
and
dec
mov
aas
mov
or
flds
jns
xchg
test
mov
and
sub
ljmp
mov
inc
rcrb
clc
or
sti
and
inc
push
enter
push
addl
int
rclb
mov
lcall
xor
cmpsb
mov
insl
add
cltd
mov
adc
dec
aam
jmp
inc
inc
sbb
fcmove
and
shl
jmp
sub
fwait
cwtl
lods
loop
mov
cmc
out
push
adc
sbb
ds
or
xchg
xchg
push
pop
sub
sbb
pop
add
sahf
call
cs
mov
mov
cmpsl
dec
cltd
call
mov
adc
je
mov
or
xchg
insb
aad
imul
scas
mov
cmp
push
and
inc
ret
sbb
and
jp
mov
sub
pop
pop
sub
dec
xchg
emms
out
fldenv
or
lret
inc
fucomi
inc
sti
push
pop
hlt
cmp
jecxz
sub
popa
movsl
sbb
dec
shl
cmp
das
push
push
jmp
push
mov
dec
popa
cwtl
mov
dec
adc
js
rcr
adc
clc
test
xchg
cmpb
call
fsub
orb
xor
gs
outsb
mov
popa
sbb
mov
ret
or
dec
popf
push
outsl
push
push
aad
lds
je
shl
sbb
ficomps
das
dec
ror
push
inc
aad
aam
xor
xchg
or
and
divl
dec
scas
shl
stos
add
pop
or
push
xchg
dec
outsl
cli
stos
dec
mov
and
movsb
pop
jno
jno
pop
popa
mov
and
mov
or
gs
fistps
lock
dec
das
rcrb
mov
cmp
fcomps
pop
adc
in
inc
push
arpl
pop
pop
sub
xchg
les
sub
sub
subb
cmp
or
test
in
or
ret
adc
int
fsubl
cs
inc
or
inc
test
movsb
pop
jp
sbb
and
scas
pop
xor
lock
mov
xor
mov
sbb
or
and
fldcw
loope
ficoms
push
fnsave
rcr
adc
push
jbe
std
and
mov
in
add
daa
cmpsl
pop
rcll
mov
pop
fwait
lods
sub
daa
dec
out
nop
inc
xchg
ljmp
inc
dec
popf
mov
loopne
orl
pop
icebp
sti
xchg
add
testl
enter
mov
jg
or
dec
push
loope
add
push
imul
mov
xor
sub
jae
add
or
mov
push
cmpsl
cmp
mov
push
std
xlat
mov
mov
clc
je
jne
jns
and
push
jno
shr
push
addl
add
fwait
inc
jge
xchg
pop
xchg
popf
cmpsb
movsl
or
test
add
lods
cld
or
push
pop
les
sub
pop
inc
sahf
scas
xor
jl
out
jp
das
or
je
push
pusha
dec
xor
ret
ficomps
xor
insl
push
daa
mov
lahf
out
dec
into
xor
xchg
test
out
xlat
jnp
pop
mov
mov
mov
add
rorl
fcmovb
mov
fs
ja
mov
sub
enter
mov
pop
aas
daa
sbb
pop
mov
fmul
push
lea
mov
and
xchg
or
or
in
cli
jmp
mov
inc
nop
shl
jo
data16
lret
sub
outsb
mov
jle
out
xchg
cmp
adc
add
sti
pop
imul
test
mov
xchg
dec
mov
sub
lds
xchg
push
adc
sub
cmp
and
loope
aad
popf
inc
adc
and
lahf
mov
mov
and
xchg
cmp
dec
xor
pop
enter
sbbl
mov
xor
pop
imul
js
sbb
imulb
in
adc
jns
pop
mov
hlt
add
daa
pop
stc
out
cmpsl
cwtl
push
push
jno
lcall
sti
sahf
inc
push
in
mov
inc
cmpsl
and
in
adc
xor
adc
roll
mov
andl
jge
pop
or
sub
mov
shrb
xorb
pusha
mov
pop
mov
rorb
push
iret
jle
clc
or
xchg
lock
mov
mov
lret
shll
ss
mov
jl
cld
repnz
and
loope
add
sub
imul
mov
std
fiadds
dec
lea
inc
jne
pop
lea
out
mov
ja
aas
or
inc
adc
orl
cmp
push
mov
xlat
xchg
andl
decb
aas
jg
es
push
jg
sub
add
out
mov
mov
in
cld
incb
das
rorl
dec
adc
es
xlat
push
gs
xchg
lret
push
lods
scas
sub
or
sahf
popa
movsb
dec
mov
lret
push
push
in
repz
sub
and
push
dec
push
repnz
ljmp
int3
jno
add
dec
jo
inc
pop
lea
sahf
dec
push
adc
andl
xchg
push
or
sub
sub
xor
popf
jp
jo
inc
inc
pop
push
mov
push
xchg
rcl
dec
mov
mov
lahf
jp
repz
clc
push
add
push
sub
jo
sbb
fstpt
subb
jecxz
cmp
xor
out
jg
int3
xchg
dec
adc
mov
scas
and
out
lods
mov
push
imul
insb
cmc
lea
cmpb
jmp
mov
pop
test
mov
cmc
adc
mov
mov
sub
out
lret
jg
ret
mov
add
mov
out
das
adc
mov
adc
into
mov
ja
test
or
and
into
addb
in
pop
outsb
popa
test
int3
rolb
cwtl
lock
inc
fbstp
mov
sub
or
scas
add
mov
shrb
mov
test
std
mov
adc
movsb
xor
mov
popa
ret
push
mov
push
cmc
sbb
pop
ret
add
stos
lods
cmpsl
pusha
stos
std
sub
loope
and
jecxz
test
ficoms
sbb
push
cmc
icebp
jbe
sbb
xchg
outsl
aas
test
sub
inc
cld
movsb
inc
sub
dec
loop
push
out
or
fistpl
lcallw
mov
outsb
pop
mov
sti
pop
add
push
mov
jl
fimuls
xlat
in
mov
ljmp
insl
add
pop
xchg
daa
push
fisttps
dec
and
xchg
jne
ss
out
xchg
dec
dec
outsb
repnz
lods
mov
mov
stc
pushl
cmp
pop
inc
shll
fnstenv
sbb
or
imul
imull
stos
dec
push
jae
inc
adc
je
dec
cs
mov
mov
movsl
adc
testl
sbb
inc
push
test
sbbb
mov
mov
cmp
lahf
rclb
xchg
xorps
insl
test
push
cmp
mov
cwtl
cmp
movsl
mov
sahf
mov
pop
sub
pop
mov
sub
sub
int3
jo
rolb
sub
jne
inc
mov
cmp
xchg
xchg
popf
daa
das
insl
jecxz
push
jg
push
data16
test
or
mov
ret
mov
lea
sbb
out
jne
pop
inc
std
push
scas
outsl
xchg
decl
xor
xor
xor
mov
adc
lods
and
add
fldcw
loop
lea
std
jle
lods
dec
out
push
sub
stc
enter
jmpw
cmpsl
rcrb
push
loop
insb
test
dec
ret
cmp
xchg
jb
ret
dec
add
add
call
cmp
ffree
inc
mov
and
xchg
movsl
and
sub
testb
inc
mov
mov
xlat
int3
data16
jle
aaa
movsl
shll
insb
aas
pushf
imul
dec
mov
xor
fdivr
push
sarb
dec
sub
fisttpll
pop
sub
lods
in
shll
fstps
jbe
push
out
adc
or
or
int3
mov
push
in
jns
mov
test
dec
cld
add
adc
in
movb
and
push
mov
leave
sbb
scas
push
pop
mov
subb
sbb
mov
cmc
stos
or
adc
dec
xor
clc
mov
push
ja
jo
sub
into
lds
push
sti
lahf
and
je
out
es
sahf
adc
cmp
pop
nop
fildl
and
jge
mov
pop
xor
in
mov
fs
pop
dec
cmc
ret
mov
jne,pt
dec
cmp
mov
mov
xorl
jl
adc
rcl
xchg
js
push
fcompl
dec
xlat
mov
pop
or
and
mull
fcompl
adc
push
add
jg
clc
fxch
xor
mov
push
loope
icebp
fidivl
cmp
imul
sub
cmc
cmp
inc
nop
mov
push
push
mov
mov
push
leave
push
pop
mov
hlt
inc
movsl
adc
sub
push
stc
push
or
push
mov
xchg
jo
fwait
pop
add
out
inc
inc
add
scas
inc
sub
leave
cmc
ljmp
popa
push
lret
int
call
rorb
insb
adc
jb
sub
mov
push
cld
adc
sbb
add
stos
inc
dec
sub
add
mov
jmp
jbe
inc
and
les
imul
scas
add
out
ja
inc
pop
add
andl
movsb
mov
hlt
mov
xchg
or
lods
push
popa
inc
jmp
lds
sets
popf
aam
mov
mov
push
icebp
lahf
add
jmp
imul
test
jae
mov
cmp
and
push
iret
jnp
add
mov
stos
push
ja
jno
lcall
fwait
inc
sarl
mov
imul
sbb
inc
and
or
inc
push
mov
push
rcll
dec
xchg
call
cmp
cltd
sub
dec
sbb
and
xchg
mov
jge
in
xchg
mov
fisubrl
movsl
dec
xor
push
ret
sub
aaa
and
gs
les
int
lods
pop
mov
out
int3
dec
ljmp
out
cmp
cmp
push
cmpsl
scas
or
adc
sahf
add
add
sbb
scas
sbb
sbbl
xchg
mov
into
jo
xchg
ficoms
jbe
mov
cmp
js
pop
outsb
xor
orl
loop
xchg
push
loop
cwtl
lock
sbb
out
int
cmpsb
mov
andb
mov
push
iret
mov
out
xchg
ss
idivl
pusha
jle
in
imul
mov
cmp
test
js
dec
jmp
inc
cmp
xlat
pushf
jmp
mov
lahf
scas
pop
and
mov
in
xchg
addr16
loope
mov
xchg
shll
mov
sbb
cld
dec
arpl
mov
ljmp
pop
mov
mov
mov
cmc
jp
dec
mov
and
push
jnp
lock
stos
rclb
scas
jae
mov
gs
jno
sub
shll
inc
xlat
stos
or
nop
popf
pop
sbb
push
mov
testl
mov
fwait
jl
fstpt
xor
inc
insl
daa
mov
dec
and
stos
fimull
mov
lock
aas
sarb
cbtw
clc
xor
inc
cli
shrl
adc
hlt
push
mov
into
fisubs
loopne
fcom
je
push
adc
out
mov
ret
adc
xor
lret
mov
ss
sbb
test
mov
xlat
rcr
sbb
jno
bound
stos
insl
lock
jle
test
test
popa
and
test
movsl
test
adc
and
dec
xchg
imull
mov
popa
ss
dec
clc
mov
inc
loop
aam
adc
and
ja
mov
lret
rcl
cmp
hlt
mov
push
xor
leave
shlb
aad
mov
xor
sub
mov
testb
sub
mov
xor
adc
pop
not
stc
or
insl
pop
movsb
ja
imul
mov
cmpsl
cmp
inc
and
push
sub
jmp
xor
dec
das
jp
aas
pop
lret
das
scas
and
es
mov
bound
rcrb
cmp
mov
inc
adc
movsl
mov
jb
mov
in
sbb
fwait
pop
pop
aad
stos
lret
in
addb
cltd
pop
xor
repz
and
sub
sbb
or
inc
and
push
cmp
nop
mov
daa
and
pop
adc
xchg
loopne
mov
insl
sub
xor
mov
sti
stos
call
sbb
lods
imull
fwait
and
sub
sbb
xor
sbb
jmp
xor
ret
push
out
sub
cmpsb
jnp
mov
or
outsl
sti
mov
mov
mov
adc
leave
lahf
repz
mov
jnp
mov
test
inc
push
movsl
jl
in
push
inc
xlat
rcl
inc
lahf
push
out
test
xchg
jno
cmc
lret
inc
shl
jp
stc
loopne
mov
xor
fidivrl
inc
mov
arpl
pop
call
ds
loope
jbe
sub
test
mov
sub
cwtl
fadds
or
cmp
sub
pushf
adcl
xchg
lret
pop
scas
loop
xchg
das
test
sahf
dec
aas
orl
and
mov
sub
inc
shlb
push
xchg
dec
aam
cmpsb
push
pushf
lret
lahf
fsubr
cmp
pop
test
aad
push
in
dec
test
fs
or
jnp
mov
add
xchg
jae
add
inc
pop
aas
scas
xchg
dec
lret
imul
pop
pop
push
add
cmp
in
ljmp
cmp
mov
rolb
lea
mov
add
pop
or
cmp
pusha
dec
faddl
call
lret
scas
fbld
mov
or
xchg
jmp
jl
mov
jno
lock
pop
dec
push
pop
push
fsubrp
data16
add
cli
inc
je
outsb
mov
xor
aad
cmp
cmpsl
mov
dec
sbb
jns
jge
or
inc
add
lret
ljmp
es
nop
adc
xchg
ret
mov
inc
cwtl
push
and
je
outsb
shl
arpl
inc
iret
shll
scas
fst
adc
and
pop
sbb
inc
pop
clc
shlb
sub
bound
and
fwait
pusha
mov
test
int3
jmp
inc
and
popf
jo
popa
stos
in
inc
cmp
outsb
loop
dec
dec
and
pop
adc
adc
fsubl
dec
push
imul
divb
and
pop
cmpsl
adc
dec
pusha
lock
shlb
push
arpl
add
fisttps
pop
push
or
sbb
jmp
popa
jae
leave
addl
je
xor
dec
sub
mov
push
mov
mov
sub
cmp
lods
xchg
sub
jmp
cld
cmpb
out
fs
pop
add
sti
int3
nop
xchg
jae
stc
add
loop
push
mov
mov
scas
movups
lea
push
cmpsl
cs
or
movsb
xor
inc
mov
test
or
test
push
mov
repz
pop
outsb
and
lret
outsl
pop
adc
xchg
out
jnp
adc
xchg
sbb
aaa
adc
popf
or
lret
fmul
cld
mov
push
push
jg
cmp
addr16
xchg
sub
loopne
xchg
sbb
add
les
movsl
mov
push
inc
adc
repnz
idivl
fstps
mov
fucomp
call
xor
adc
jecxz
mov
mov
int
cmc
sar
dec
addr16
jbe
xchg
dec
push
xchg
push
lret
xor
hlt
sbb
dec
mov
fsts
sub
out
pop
push
cmp
push
fdiv
outsb
jns
mov
cld
movsb
or
pop
xor
xor
repz
jmp
rcl
sub
outsl
int
inc
sbb
ja
sbb
jns
cmpsb
mov
push
jge
daa
leave
or
xchg
enter
imul
mov
adc
popf
std
test
decl
inc
imul
jno
popf
xor
stos
inc
leave
pusha
jbe
push
xchg
ljmp
and
or
push
cld
out
xchg
push
add
xchg
in
jmp
je
cmp
pop
clc
fisttpll
fsubs
data16
mov
push
and
rol
out
ja
aam
push
mov
roll
lock
outsl
or
jne
rorl
das
mov
inc
pop
fwait
mov
cmp
movsb
pop
sti
fistl
pop
xchg
dec
mov
out
dec
mov
push
sub
repnz
test
clc
xor
mov
test
mov
cltd
movsl
add
inc
mov
jmp
insl
mov
mov
ss
loopne
in
ljmp
mov
ret
push
mov
out
cmc
outsb
cmpsl
dec
call
rolb
imul
in
aaa
jb
xchg
mov
pop
sub
in
jmp
cmpsl
loopne
push
mov
or
adc
xor
outsb
pop
pushf
fbld
sub
add
push
mov
call
dec
dec
loope
cmp
xor
push
and
push
fsubp
adc
shl
sub
mov
adc
sub
sbb
stos
repnz
xchg
cmp
add
pop
sahf
sahf
cmp
outsb
jl
xchg
test
jl
jbe
movsl
outsb
fstpt
inc
mov
aas
repz
int3
out
popa
push
xchg
dec
mov
lods
mov
scas
dec
pop
mov
jl
pop
xchg
xor
mov
xchg
loopne
ret
stos
ds
pop
je
das
pusha
ljmp
std
loop,pn
push
jno
ret
jnp
scas
ljmp
sbb
and
pop
cmp
icebp
aam
ljmp
sti
loop
loop
call
lds
sbb
adc
hlt
xchg
repz
push
mov
insb
inc
inc
sub
out
jge
rcr
aaa
rcrl
ret
out
enter
jl
test
lcall
xor
or
mov
inc
insl
sub
int3
scas
daa
adc
outsl
inc
mov
repnz
sbb
push
lret
mov
push
insl
xor
and
cmpsb
jbe
ja
inc
pop
cmpsb
and
aam
mov
mov
xor
imul
jg
mov
cmp
leave
in
sub
add
out
dec
std
ficomps
fcmove
loopne
push
lods
mov
rclb
std
pop
cltd
pop
sbb
sahf
dec
arpl
jecxz
push
cmp
mov
push
hlt
pop
ficoms
inc
jnp
pop
les
cli
clc
clc
bound
int3
push
shlb
xor
xlat
sub
inc
jg
jnp
daa
cltd
imul
aas
inc
push
mov
xor
popf
pop
in
adc
mov
dec
sbb
pop
jp
test
mov
jecxz
push
call
lcall
lahf
mov
push
mov
push
cmp
dec
mov
jle
scas
xchg
jbe
mov
clc
lds
lods
adc
inc
mov
test
call
sub
pushl
sub
push
dec
sahf
pop
out
xor
inc
push
add
jb
out
cmp
sub
pop
add
push
jp
xchg
pextrw
pusha
inc
pop
mov
insl
ret
sbb
mov
fmuls
aas
mov
mov
aaa
inc
ja
cmpsl
into
inc
pop
xchg
sarl
jns
ja
call
xor
pop
pop
int
bound
bnd
xor
repz
adc
in
jns
nop
xor
je
sub
ret
sbb
push
mov
cwtl
movb
imull
xchg
xor
xchg
orl
inc
pop
jbe
popa
adc
jg
aas
mov
xchg
push
push
add
xchg
mov
stos
dec
lahf
fadds
ljmp
shl
movsl
mov
pop
pop
mov
push
imul
or
fidivrs
and
xchg
lods
sub
push
enter
push
imul
in
clc
addr16
aaa
jne
in
pop
sbb
insl
mov
inc
pop
mov
jns
sbb
enter
int3
xchg
cmp
aam
gs
ret
xor
mov
mov
sub
leave
inc
mov
and
test
fldcw
and
xchg
shlb
insl
enter
mov
dec
push
jecxz
lods
outsb
les
ret
jmp
fcmove
daa
js
les
sbb
mov
mov
mov
addr16
mov
fcoms
dec
inc
cmp
repnz
dec
into
jg
loope
mov
xchg
mov
mov
clc
cmp
scas
push
mov
add
and
mov
pop
pop
out
mov
jno
mov
inc
sub
cmp
mov
jecxz
xor
imul
insl
sub
hlt
or
repz
iret
mov
in
xor
adc
push
push
adc
mov
stos
mov
lcall
out
or
mov
mov
push
pushf
cmp
push
inc
rorb
sbb
or
sub
mov
push
push
mov
add
dec
sub
inc
mov
dec
pop
dec
hlt
pop
or
scas
lcall
jge
fbld
sbb
rcll
movsb
add
outsl
ficomps
push
lods
cmp
shll
inc
test
or
add
movsb
push
popa
cs
adc
pop
adc
pop
fbld
mov
sbb
in
xlat
and
notb
mov
push
js
aam
adc
adc
dec
or
mov
add
add
loopne
cmpsb
les
mov
jmp
mov
rcl
jmp
pop
pop
daa
cs
inc
cmp
inc
stos
inc
das
pop
jecxz
jg
addb
xor
pop
and
out
sbb
inc
fldln2
rolb
mov
movsl
sub
add
mov
mov
add
jmp
pop
std
jb
push
fcoms
xorl
sbb
push
lahf
push
psllq
sub
push
ds
push
in
test
imul
mov
movsl
inc
mov
cmp
sbb
ljmp
mov
jecxz
xor
mov
setp
push
jb
in
pop
and
jne
loope
sbb
or
sbb
mov
lods
pop
adc
push
add
faddl
popf
add
jmp
pop
or
cltd
and
ffree
lret
jp
fdivrl
sub
ret
ret
and
jecxz
jbe
push
jne
inc
lahf
and
mov
nop
xchg
cmpsl
nop
sbb
std
xor
jp
inc
int3
pop
rorb
adc
inc
lds
jno
push
rol
ja
sub
pusha
cmp
pop
mov
push
lods
test
cmp
rolb
xchg
ljmp
mov
or
fwait
cmpsb
hlt
and
push
xor
push
out
push
add
jns
cmp
push
xor
mov
call
lods
shll
mov
or
xor
mov
inc
dec
inc
mov
mov
mov
cmp
dec
dec
fwait
sbb
cmpsl
mov
mov
out
call
cmp
scas
pop
movsb
lahf
sahf
setb
pop
lea
ja
inc
daa
iret
insb
push
lret
and
push
mov
mov
fadds
andl
aas
dec
sti
bound
sbb
mov
xchg
imulb
movsl
sub
test
adc
push
test
int
lods
fists
jne
mov
in
pop
aam
pop
inc
sti
mov
ljmp
movsb
test
arpl
jo
loopne
fucom
pop
dec
ljmp
shll
lret
repz
adc
xchg
mov
mov
cmpsb
out
mov
pop
sar
gs
add
dec
loopne
inc
data16
push
push
cli
push
lcall
adc
sub
dec
cmp
icebp
jl
mov
arpl
inc
push
mov
mov
xchg
xchg
or
pop
sbbl
jae,pt
movsb
lock
sub
lock
enter
daa
cmp
and
sarb
lcall
mov
and
cld
or
jns
fistpl
fbstp
jmp
xchg
loopne
dec
pop
jmp
pop
pop
jle
mov
dec
inc
jle
add
or
mov
inc
lock
inc
dec
icebp
sub
xchg
sbb
adc
jmp
cld
adcb
pop
int
test
push
xlat
adc
xlat
mov
inc
inc
inc
xchg
out
xchg
les
adc
fdivrs
or
cmp
nop
xlat
out
and
cmp
inc
cmpsb
inc
inc
inc
cmpsb
test
mov
lods
loopne,pt
inc
sar
xlat
dec
bound
xchg
and
scas
fidivl
ds
mov
mov
adc
mov
popf
mov
test
es
dec
loope,pt
inc
jnp
pop
test
xchg
xor
or
fmull
xchg
jb
xor
dec
add
sbb
imul
hlt
sbb
xchg
loope
xchg
fnstsw
push
aas
xchg
shrb
or
xchg
lods
mov
mov
xor
xor
jle
dec
dec
dec
sahf
push
push
daa
mov
loop
mov
dec
add
adc
fnsave
or
outsb
addr16
xor
pop
push
push
aad
bound
int
lds
mov
repz
cmp
and
cmpsb
call
divb
mov
mov
stos
add
paddsb
adc
das
jl
push
push
dec
pushf
lret
mov
cmpb
lret
sbb
scas
gs
lret
movsl
insl
cltd
clc
inc
in
loopne
icebp
lods
mov
in
pop
sub
mov
pop
jns
cwtl
pop
cld
cmp
xchg
mov
mov
and
or
add
stc
call
enter
shrl
insb
pop
iret
sub
les
andb
fs
sub
mov
rcrl
xlat
pushf
cltd
cmp
inc
nop
pop
xchg
inc
icebp
mov
out
mov
dec
loop
push
cmpsb
clc
adc
test
adc
es
push
daa
cmpsl
fnclex
inc
data16
ljmp
insl
lret
data16
xchg
jae
cmc
ror
bound
cwtl
ficoms
add
fimuls
rcl
jp
ss
mov
enter
fisubrs
push
out
leave
mov
mov
jecxz
daa
mov
shrl
sbbb
xchg
ret
out
scas
in
mov
cmp
lcall
int
fs
cld
dec
cmc
outsb
cmpsb
xor
push
cmp
xchg
push
and
insl
out
sub
dec
test
dec
pop
xor
sbb
daa
into
inc
sbb
dec
sti
sarl
inc
out
shlb
mov
pop
cmp
jnp
popa
inc
inc
icebp
ret
testb
loope
mov
pushf
inc
lret
adc
inc
xor
aam
and
orl
mov
imul
pop
adc
fistpl
in
dec
icebp
pop
repnz
push
scas
pop
mov
jnp
dec
orb
and
mov
rcll
xor
cmpsb
fdivl
stc
push
add
sbb
mov
cld
push
lret
insb
cmp
inc
lods
mov
xor
cmpsl
mov
xchg
mov
push
push
enter
push
insb
push
cmp
jae
loop
daa
popa
pop
scas
push
mov
les
cltd
mov
mov
ss
push
popf
imul
pop
mov
inc
pop
sub
daa
ljmp
mov
les
add
mov
fidivrs
pop
and
mov
mov
cmp
mov
and
xor
les
push
mov
aam
das
sub
outsb
dec
adc
jae
rol
fs
mov
in
sub
xchg
insb
out
ret
adc
js
incl
fsubrs
push
dec
pop
mov
xor
in
faddl
daa
testl
cwtl
and
icebp
xor
dec
cmp
mov
xchg
mov
stos
shrl
xchg
adc
push
mov
mov
hlt
ds
mov
lods
xor
cld
and
cltd
fisttpl
jmp
adc
pop
test
mov
xchg
ds
aad
cmp
shrl
outsb
inc
push
jg
popf
dec
scas
mov
fnclex
inc
dec
aad
cmpsb
or
stc
out
popf
sub
es
jae
cltd
test
push
dec
jg
push
dec
lea
sub
adc
sub
pop
imul
lods
out
xchg
pop
push
sub
push
loope
outsb
rorb
inc
cli
into
lds
dec
mov
mov
arpl
fs
cmp
mov
dec
push
hlt
outsb
in
and
enter
push
jno
pushl
pop
es
inc
adc
mull
push
push
leave
mov
pop
cld
cmp
cs
inc
repz
mov
in
xchg
bound
mov
testb
xchg
aam
jecxz
xchg
fmull
jmp
lcall
xor
stos
or
sarl
xchg
xchg
cmpsb
mov
repz
cmc
ret
dec
xor
clc
jle
dec
outsl
out
inc
pop
lds
mov
xor
fidivl
xchg
push
loope
shlb
xor
push
push
repz
mov
lret
sub
adc
rcrl
mov
fisubrs
jb
bound
push
fildl
test
and
pop
cld
cmpsb
sahf
sbb
sbb
and
dec
daa
addl
mov
aaa
push
outsl
fsubs
lods
jbe
mov
fwait
cmp
cmp
lea
daa
add
xor
test
or
mov
add
inc
or
movsb
xor
fldcw
lret
div
out
ds
xchg
cltd
pop
sahf
imul
sub
in
add
outsb
sub
xor
lret
xor
in
fadd
clc
mov
mov
or
stos
lea
pop
push
bound
out
jno
xchg
pop
mov
xchg
js
push
cmp
xchg
hlt
mov
pop
pop
scas
inc
jp
lods
imulb
jp
int
sub
ret
stc
addr16
mov
push
fcmovbe
push
aad
les
jg
push
push
stc
mov
inc
push
adc
dec
push
repz
inc
push
jle
push
dec
sub
movsl
and
mov
xor
divb
sti
into
inc
cmp
sub
repnz
stc
shrb
mov
mov
cwtl
jecxz
pop
clc
sbb
cmp
in
dec
fpatan
dec
movsb
in
scas
push
dec
filds
cmp
div
adc
mov
mov
mov
jne
inc
sbb
je
enter
mov
fiadds
sbb
sub
xor
out
call
dec
outsl
inc
xor
mov
xchg
in
dec
inc
sub
stos
insb
sbb
rorb
pusha
ljmp
outsb
sub
push
inc
repnz
jne
popf
jne
fstpl
fcoml
xchg
inc
mov
stos
pop
stos
je
inc
enter
push
in
pop
lock
aam
mov
das
pop
or
aas
mov
stc
pop
mov
repz
andl
iret
cmpsb
sub
xor
push
jb
outsb
xchg
mov
xchg
jb
lods
inc
jl
jb
in
in
lret
call
pop
fbstp
scas
adc
xor
stos
arpl
and
cltd
fidivrl
adc
fimuls
inc
addl
movsb
jae
out
es
and
jp
test
and
jmp
push
pop
aad
sbb
fsubl
xor
pop
pop
mov
dec
rorb
push
in
xor
shlb
icebp
mov
or
sbb
adc
sbb
mov
adc
mov
frstpm(287
push
pop
out
pop
fadds
dec
dec
outsb
mov
pop
das
mov
aam
fmuls
add
loopne
pop
or
or
sbb
insl
inc
mov
je
scas
jnp
scas
dec
push
ret
icebp
and
pop
add
iret
out
cmp
jmp
mov
outsl
sarb
arpl
add
fistps
jmp
std
shrl
aaa
mov
xlat
insl
pop
cmp
jp
lods
or
orb
inc
aas
mov
cwtl
loop
lea
adc
lcall
test
aam
sub
ss
out
jmp
cmp
addb
sub
in
pop
dec
push
jno
pop
gs
in
xchg
dec
mov
push
out
and
cmpsb
fs
xchg
sub
sub
faddl
leave
sbb
cld
jp
inc
in
sub
mov
jnp
loope
stos
adc
pop
jno
add
lods
pop
mov
out
add
shrl
mov
clc
push
lret
in
xor
xor
data16
int
sub
push
movsl
inc
mov
mov
repz
into
rclb
xchg
cmp
stos
xadd
xchg
push
pop
dec
dec
jae
fcomi
xchg
push
sub
insb
pop
test
mov
pop
shrl
cmp
sub
push
sbb
and
popf
or
lock
movsl
loop
sbb
outsl
push
mov
jecxz
ss
sbb
jecxz
sarl
stc
jg
jle
sub
xor
mov
pop
pop
ret
mov
sub
push
xor
mov
addr16
cmp
add
popa
mov
mov
push
or
adc
data16
mov
cltd
leave
enter
leave
add
insb
adc
fisubs
lcall
cmpsb
sbb
daa
mov
xor
pop
push
cmpsl
bound
add
pop
and
or
push
out
and
dec
inc
mov
pushf
or
or
mov
add
shlb
fcmovnbe
jb
push
loope
push
pop
cmp
jno
or
out
pop
jb
ja
mov
adc
dec
push
sahf
shrl
fists
js
bound
cmp
push
faddl
sbb
inc
rcrl
nop
loopne
popa
jbe
stos
pushf
repnz
aaa
dec
push
stos
jecxz
pop
push
sbb
mov
pop
outsb
cmpsl
cmpsl
mov
xor
adc
and
sub
jl
cmp
or
push
outsl
aad
shlb
jecxz
or
test
xchg
imul
dec
mov
mov
mov
lcall
push
insl
push
jnp
out
xor
inc
jecxz
popf
jmp
jg
test
jne
xchg
sub
jle
or
outsb
lcall
pop
mov
dec
xchg
pop
lahf
sub
xor
mov
test
aas
add
cmp
cwtl
pusha
popf
xchg
mov
pusha
xor
sbb
mov
data16
add
in
pushf
mov
pop
xchg
jmp
insl
add
pop
inc
test
fdivs
into
sbb
inc
mov
jg
js
lods
test
fcoml
mov
sbb
lret
sub
jae
sub
fimull
test
jle
inc
cwtl
lahf
lcall
jno
popa
xchg
mov
icebp
mov
push
test
mov
xor
ret
push
jmp
jae
xor
mov
adc
addl
jg
xchg
jnp
dec
daa
lock
ret
jo
mov
iret
mov
mov
mov
or
mov
in
in
test
ds
sti
add
cld
push
loope
je
mov
jmp
movsl
mov
jmp
stos
sahf
pop
mov
sub
lods
sub
push
push
pop
and
mov
push
pop
lock
jo
out
gs
jo
std
mov
ds
dec
dec
mov
out
fwait
mov
xchg
mov
push
push
xor
imul
ss
mov
push
movsb
roll
mov
and
and
out
adc
ret
sahf
test
in
js
and
es
cmp
add
xchg
mov
shll
jl
sub
mov
popa
mov
jp
jae
movsb
clc
cltd
filds
repnz
sbb
mov
jno
dec
je
xchg
out
fcomps
jg
xchg
jo
cld
jne
movsl
add
inc
pop
cmp
dec
add
repnz
cmpsb
mov
dec
mov
out
dec
lahf
ret
out
int3
mov
lcall
pop
movb
inc
test
icebp
sub
nop
mov
test
movl
aam
mov
mov
jle
rorl
rorb
cmp
imull
clc
out
adc
pop
adc
sub
subb
imul
push
mov
jecxz
xchg
mov
inc
nop
lahf
mov
fsubp
inc
and
cltd
mov
out
sbb
or
fs
cmp
dec
cmp
xchg
fstl
loop
xchg
mov
lods
je
addr16
testl
inc
popf
idiv
jno
divb
or
xchg
mov
mov
mov
cli
inc
popa
pop
outsb
mov
add
scas
js
iret
mov
cli
mov
adc
subb
xchg
mov
push
sub
cmp
push
adc
jle
mov
and
nop
cltd
fldenv
sarb
stos
dec
push
repnz
out
or
or
pop
ja
xchg
add
in
loope
dec
hlt
sub
leave
std
in
or
mov
lcall
push
pusha
push
xchg
xchg
outsl
pusha
sbb
mov
xor
lret
hlt
xchg
push
cmp
xor
lds
fdivrs
popf
les
mov
sbb
mov
mov
lds
and
imul
data16
and
repz
inc
movsb
sub
sub
cmp
jl
adcb
xor
hlt
imul
dec
jecxz
mov
add
idivl
adc
xchg
stc
dec
lock
lds
ret
xor
pop
add
pop
mov
adc
add
sub
push
test
daa
xor
shrb
hlt
inc
fistpll
nop
cwtl
inc
xchg
jg
sub
sub
xor
ja
adc
aad
and
sub
shl
ja
inc
xchg
xchg
adc
insl
sub
and
mov
hlt
jecxz
push
in
jae
lds
mov
mov
aad
or
adc
adc
mov
mov
push
fbld
std
lds
fs
xchg
and
mov
mov
jnp
stos
cmp
shr
cmpl
andps
mulb
mov
sbb
fdivr
out
stc
mov
or
inc
inc
jmp
outsl
cmc
mov
faddp
mov
xchg
imul
mov
inc
jl
sub
out
jle
stos
movsl
into
in
adc
pop
and
test
push
loope
pop
mov
fdivrs
jae
enter
cmpsl
cld
imul
ret
rclb
mov
add
outsb
adc
ficompl
repz
or
inc
fdivs
inc
es
sub
fcmovnu
pop
jmp
cmpl
jge
mov
fiadds
enter
pop
testb
xor
cmpsb
push
clc
loope
xor
iret
addr16
inc
sbb
loop
mov
cmc
push
scas
inc
in
lcall
mov
xchg
gs
inc
cmc
mov
lcall
push
add
call
shll
lcall
popf
push
insb
or
cmp
or
jge
fistps
jmp
cmp
xchg
inc
mov
jmp
in
daa
repz
in
ffree
repnz
cmp
mov
leave
mov
fisttpll
mov
mov
pop
sub
out
adc
jp
ret
sbb
mov
xchg
fidivs
scas
and
add
and
scas
pop
fs
mov
leave
sbbb
jb
xor
pop
mov
jbe
push
push
push
inc
adcb
outsb
and
inc
push
cmp
int
in
xchg
shlb
push
and
pusha
sti
mov
sub
pop
stos
inc
inc
adc
jge
add
popa
ja
call
clc
enter
inc
mov
xchg
shll
xor
cltd
cmp
shlb
lea
cs
or
divl
or
flds
test
cmp
dec
mov
adc
stc
add
out
sub
mov
xchg
pop
lahf
jl
test
cmp
mov
cli
pop
shll
in
sub
mov
sub
xchg
test
stos
arpl
add
push
lds
sub
inc
jl
and
mov
pop
dec
mov
mov
and
loope
incl
insb
jo
mov
stos
stc
lcall
out
and
daa
in
xchg
shlb
and
lahf
sbb
mov
jle
mov
addr16
add
cmp
arpl
js
mov
sbb
jp
insl
cmpsl
pop
sbbl
pop
mov
test
lock
mov
adc
sbb
ss
je
ret
sbb
xor
inc
cltd
jbe
cli
in
int3
adc
push
mov
push
sub
xchg
adc
cmp
jno
imul
lea
fs
divl
dec
pop
push
inc
add
xchg
je
je
dec
repz
xchg
xlat
test
sahf
iret
and
cmpsb
imul
sub
mov
cmp
into
dec
xor
out
dec
or
jge
jmp
adc
xor
popf
or
or
aaa
sub
out
fwait
addb
dec
mov
ret
andl
push
jge
jmp
or
cmpsb
dec
les
incb
add
sub
mov
jae
dec
push
mov
jl
call
xchg
outsl
mov
push
fwait
rorl
loope
inc
jle
sbb
test
dec
enter
fisubrs
mov
into
sub
insl
sbb
jle
cli
iret
mov
xchg
mov
add
jl
sub
cwtl
sbb
jns
and
cmp
push
and
ja
aaa
jb
scas
shrl
and
adc
fs
xchg
dec
pop
jge
xorb
cli
mov
stc
push
push
lcall
gs
mov
mov
ficoms
inc
sbb
lea
and
lods
in
push
pusha
punpcklwd
mov
push
ja
out
push
test
xchg
and
out
inc
fisubrl
mov
sbb
out
call
jns
fwait
mov
scas
or
aam
int3
pop
sub
sahf
das
cmc
push
loopne
push
inc
cmpsl
ret
ret
loopne
push
lds
push
std
fisubrl
imulb
pop
inc
mov
dec
dec
sub
dec
mov
push
fimuls
push
add
xor
mov
lret
ja
mov
clc
cld
fcomps
push
data16
push
and
mov
sub
fisubl
int
in
inc
xchg
mov
hlt
xchg
sahf
xchg
out
repz
lods
std
insl
mov
inc
shl
das
insb
lock
cmp
loopne
adc
ficompl
xlat
push
cmp
icebp
rorb
push
jnp
ss
cmp
clc
loope
popa
xchg
jecxz
leave
push
sub
test
fbld
inc
dec
pop
adc
sahf
fwait
lods
xchg
fnstcw
add
hlt
adc
mov
push
sti
inc
ret
repz
jno
ret
out
in
ds
jl
adc
pop
push
dec
cwtl
jnp
sar
pandn
rclb
popa
cmp
inc
dec
test
dec
xor
pop
lea
std
rcrb
testl
or
les
xor
pop
jo
stc
ficomps
pop
dec
add
push
jne
mov
jmp
dec
dec
and
xor
pop
mov
sub
and
hlt
fdivl
nop
shl
xchg
push
mov
outsb
xor
jle
mov
adc
insb
mov
or
icebp
inc
test
sub
cwtl
test
int3
sbb
push
push
ljmp
loopw
ret
insl
lret
fimuls
push
ss
cmp
mov
or
adc
pop
ret
push
mov
jno
and
call
idivl
iret
leave
add
mov
dec
jo
jl
pop
sbb
outsl
jne
insl
push
cmpsb
xor
dec
pop
xchg
mov
xlat
pop
adc
jg
mov
jnp
fcoml
mov
xchg
scas
inc
sub
push
pop
mov
cltd
lret
imul
or
pop
sbb
mov
fistl
ret
mov
jne
jmp
mov
in
mov
daa
clc
aam
pop
roll
popa
insl
push
xchg
movsb
fimuls
loopne
push
or
scas
popa
stos
mov
and
add
pop
inc
jns
aaa
movb
xchg
fnsave
adc
into
jnp
rolb
mov
pop
stos
adc
dec
lock
adc
xor
lahf
lea
cmpsb
inc
pop
out
addl
sti
sbb
xchg
dec
popa
pop
inc
mov
inc
mov
or
xlat
sub
mov
iret
sar
pop
stos
mov
dec
repz
pop
pusha
addr16
shll
xchg
repz
lcall
pop
test
stc
or
jg
lds
mov
popa
jno
mov
add
xchg
mov
jne
inc
repz
add
cmpsl
jp
adc
sub
add
adc
lret
dec
or
add
xchg
mov
popa
cmp
notl
mov
xchg
test
and
and
jne
add
out
xor
fcoms
mov
icebp
xchg
push
popf
sbbl
sub
mov
stos
shll
mov
push
icebp
jmp
push
fs
iret
scas
lea
outsl
pop
rolb
out
repnz
pop
lock
inc
lea
mov
outsb
adc
mov
imul
insb
test
pop
xchg
cmpsb
in
int3
dec
movd
nop
sub
ret
ficoms
enter
repnz
test
popa
xchg
dec
mov
and
and
fbld
aaa
xor
add
mov
xor
mov
and
push
pop
mov
je
push
mov
mov
jecxz
sub
xlat
and
cld
sub
push
mov
or
test
jnp
test
ret
mov
cmp
sub
inc
enter
scas
outsl
mov
cmpsl
and
adc
adc
push
cmpsl
stos
in
mov
jno
popa
mov
fdivrs
imul
adc
aas
xor
into
mov
ja
lock
pop
fstl
cmp
lret
insb
faddl
adc
cs
repnz
mov
adcb
jno
cmp
sub
xchg
mov
sub
pop
ret
push
call
pop
js
jmp
mov
test
sbb
pop
push
jge
fs
or
cmp
int
divl
mov
sub
out
icebp
and
jno
lcall
outsl
cmp
xchg
rcrb
sahf
or
cwtl
mov
iret
adc
pop
popa
adc
sbb
int3
cli
mov
in
movsl
arpl
sub
repnz
lock
lret
sub
repz
rcrb
xorb
cs
movsb
push
cmpsl
sub
pusha
scas
jl
add
fbstp
sub
mov
subl
jno
dec
shrl
jnp
xor
ja
jnp
add
fwait
pop
inc
lcall
rorl
sbb
pop
sub
fnstenv
out
and
mov
pop
and
jmp
addr16
mov
mov
push
gs
repnz
xor
lds
mov
jl
outsb
or
dec
insl
push
push
mov
shrl
xchg
xlat
gs
notl
jno
or
push
out
mov
out
movl
gs
hlt
and
inc
dec
rorb
loop
iret
and
fmuls
and
pop
xor
cmp
mov
adc
pop
ja
sti
sub
inc
dec
addr16
mov
rorb
rcr
sbb
aaa
mov
cmc
jl
mov
cmp
cmp
sbb
pushf
arpl
hlt
je
sub
or
push
mov
add
push
out
nop
push
xor
mov
leave
out
pop
int
adc
flds
add
sub
sub
loop
ds
cmp
les
lds
xor
sub
lret
mov
lds
je
call
lods
xchg
aaa
fstpt
mov
fwait
dec
fcompl
xor
repnz
mov
fs
add
add
cld
dec
xor
jecxz
mov
mov
push
and
lods
dec
add
sub
or
jmp
lret
xchg
enter
mov
jecxz
jno
xchg
fimuls
sub
das
int
jmp
out
and
pop
bound
enter
dec
add
cmp
xor
mov
lea
jecxz
mov
mov
push
sahf
pop
dec
push
mov
cmpsb
lcall
bound
sub
in
jo
loope
lret
repz
sahf
add
jno
lods
call
pop
stc
mov
cmp
scas
repnz
bound
outsb
jge
incl
jno
sub
pop
jg
faddp
cld
fldenv
subl
dec
dec
ret
or
fiadds
pop
cmp
mov
cmpsl
test
jne
cltd
out
test
sub
push
push
ljmp
cmc
jnp
test
fsub
adc
add
and
adc
pop
sub
in
sub
repz
stc
stos
sbb
jnp
mov
sbb
jno
push
xchg
data16
lods
jl
sti
outsl
test
xchg
xor
mov
insb
xchg
adc
mov
movsb
inc
jmp
fsubl
mov
push
imul
loopne
shr
movsb
scas
adc
mov
out
jmp
scas
pushf
pop
stos
sarl
cmpl
pop
loope
shl
fcomps
adc
lret
jle
stc
mov
sub
ja
mov
push
xchg
mov
sub
lods
decl
mov
mov
and
pop
or
fs
xor
jnp
aas
sub
fwait
stos
insb
dec
stos
insb
xchg
test
mov
mov
jge
orl
xchg
ret
dec
inc
ds
sbb
adc
ror
mov
int3
add
cmp
lock
push
mull
xchg
loop
andl
in
popl
and
xchg
iret
scas
cmpl
jo
fstps
cmpsl
xlat
pop
mov
fcoms
xor
das
pop
push
mov
je
cmpb
loop
fwait
xor
lea
mov
pop
shl
nop
pusha
xchg
pop
aas
pop
das
and
add
jp
add
ds
data16
aam
mov
mov
jo
lahf
adc
sub
ljmp
das
cld
mov
icebp
xor
mov
mov
sahf
loope
test
and
push
sub
and
mov
subl
repz
or
sub
add
push
sub
clc
js
es
lcall
mov
divps
jno
pop
loop
pop
out
mov
in
xchg
out
xchg
mov
int3
adc
add
sub
imul
mov
sub
mull
outsl
xchg
test
push
sti
popa
in
in
dec
out
mov
hlt
rolb
add
mov
fs
in
aaa
outsb
pop
inc
mov
outsl
add
push
incl
adc
fidivrl
out
aam
dec
shl
sub
or
jb
dec
mov
fldt
iret
push
aam
cmpsb
out
rolb
pop
lock
ret
orl
xchg
xor
fs
cmp
inc
addr16
pusha
mov
cs
adc
pop
int3
fldl
add
arpl
lods
mull
lods
fcompp
hlt
jb
mov
rclb
adc
add
out
jecxz
enter
dec
test
xchg
ror
pop
mov
idivl
out
ss
or
mov
pop
sahf
and
loope
lock
jecxz
inc
push
icebp
sbb
rolb
pop
jp
mov
out
mov
xor
xchg
push
inc
pusha
mov
push
mov
testb
push
and
pusha
das
cmp
jl
xor
stos
add
xor
fsubl
std
mov
fimull
add
outsb
cli
mov
jbe
mov
mov
or
ret
ljmp
xchg
mov
shrb
jne
mov
mov
lods
ficomps
push
push
cli
loopne
mov
shlb
aad
test
cmpsl
lods
ljmp
mov
adc
cld
aam
adc
mov
jp
pop
xor
pop
enter
xor
xor
jge
loope
leave
inc
jg
arpl
sub
xchg
lods
subb
cmpsl
sbb
xchg
sti
mov
shrb
bndldx
cmp
sub
mov
pop
fnstenv
jno
jl
push
and
and
decl
fimull
negl
sub
pop
std
push
rcrl
lds
push
cmc
aam
or
cmc
dec
jle
pusha
int
dec
sub
rcll
inc
sbb
mov
push
rorb
dec
out
and
jle
push
inc
sbb
es
stos
adc
xchg
dec
and
cmp
xchg
mov
xchg
xor
addr16
jnp
mov
data16
movsl
mov
fs
push
test
popl
clc
pop
inc
dec
adc
out
test
cmpsl
jae
fstpt
repz
fsubs
lahf
fsubrl
mov
or
jb
aaa
or
out
inc
lds
into
fs
cmpl
push
pop
cmp
stc
and
jne
stos
clc
dec
xchg
push
imul
clc
lret
sarl
ja
inc
mov
add
das
xchg
mov
mov
aas
shr
mov
insb
shrb
add
out
jne
lock
popf
jg
scas
dec
inc
or
les
cmpsl
imul
or
or
into
imul
mov
push
cmpsl
mov
dec
dec
movsb
pop
xor
or
xor
outsb
aam
cmp
cwtl
rcrb
lock
mov
cltd
mov
insb
mov
adc
mov
jae
stc
les
test
mov
fbstp
cmpl
cli
stos
in
cmp
sub
inc
mov
adc
xchg
inc
add
jmp
cmp
xor
pop
addr16
clc
scas
shl
stos
rolb
jno
push
je
push
xchg
popa
aam
daa
pop
iret
mov
and
jle
jecxz
mov
popf
mov
ret
mov
ret
movsl
mov
cmp
jl
mov
test
ljmp
xchg
cmp
dec
ss
cmp
push
mov
in
mov
loope
xor
push
xor
out
in
std
mov
or
inc
mov
dec
leave
les
sub
pop
jmp
push
test
cmpb
jl
mov
push
dec
daa
and
jecxz
add
daa
add
fistpll
cmp
es
in
pop
fldcw
pop
jno
and
mov
mov
fstp
sbb
outsl
xor
repnz
push
clc
loop
into
in
lret
add
es
sar
pop
les
sub
pop
cmp
cltd
sub
mov
jecxz
cld
add
cmp
jbe
fucom
ljmp
outsb
movsb
fdivl
jmp
cmp
icebp
outsb
or
shll
ja
jp
in
cmp
sub
cwtl
mov
fwait
mov
lret
mov
cs
jl
xor
mov
aaa
mov
das
adc
jmp
lret
lret
mov
test
cltd
inc
dec
leave
push
push
pushf
dec
cmp
frstor
pop
lret
aam
push
and
lret
test
imul
sub
int3
std
add
les
pop
and
test
push
mov
out
push
mov
repz
or
add
pop
xor
mov
insb
or
sbb
xlat
and
hlt
inc
lods
ret
jmp
dec
arpl
movsb
aam
dec
js
add
pop
imul
pop
jcxz
sbb
popf
xchg
mul
jo
cmp
lock
repnz
aaa
push
and
push
sub
sbb
push
xlat
push
jbe
push
inc
icebp
outsl
insl
sub
fdivrp
ret
mov
xchg
sub
gs
pop
cld
icebp
lcall
add
std
jp
adc
pop
add
lret
dec
jo
dec
mov
pop
arpl
jo
pop
add
push
inc
mov
scas
insl
pop
out
icebp
lea
and
mov
cmp
sbb
xchg
div
cmp
push
mov
mov
push
roll
and
sbb
pop
pop
xchg
stos
mov
mov
and
mov
xor
fbstp
gs
mov
fcomps
ret
sub
add
test
stos
push
inc
inc
test
cmp
dec
pushf
sahf
aam
lock
adc
add
pusha
aaa
loope
inc
popf
popf
xchg
jae
sub
jmp
mov
pause
mov
movsl
inc
cmp
loop
or
addb
loope
lods
test
mov
jns
cmpsl
adc
gs
sbbb
pop
rcrb
adc
xor
cmp
push
xor
out
add
ror
call
popa
lcall
out
xchg
jecxz
add
sarl
or
or
jl
loopne
xchg
movsl
add
sbb
inc
dec
cmpsb
out
test
dec
xor
pop
xchg
out
dec
movsl
sub
cmp
scas
xor
dec
mov
xchg
dec
mov
sbb
sub
dec
cmp
pop
jne
in
inc
stos
dec
sub
jo
or
push
adc
sub
sti
xchg
cs
ret
cmc
lret
mov
push
dec
addr16
movsb
test
pop
ficoml
arpl
outsb
sbb
cli
mov
test
jns
cmpl
xor
inc
mov
js
addl
jmp
out
adc
loopne
imul
shlb
pop
xor
filds
sahf
adc
xchg
mov
dec
mov
push
mov
dec
lods
loopne
arpl
inc
scas
lret
pop
lods
out
xor
xchg
int3
adc
inc
call
mov
mov
inc
inc
pop
cmp
jo
lret
cmpsl
jg
add
add
mov
pop
daa
add
test
xchg
out
push
cmp
jl
adc
testb
insl
jg
pop
mov
imul
aam
mov
inc
das
mulb
xchg
jne
adc
or
mov
call
or
ret
pop
adc
leave
pop
pop
push
pop
iret
mov
push
ljmp
inc
pusha
sub
into
je
dec
jecxz
sbb
inc
das
mov
pop
negb
push
mov
add
cmc
push
mov
nop
mov
stos
inc
scas
inc
icebp
xor
sbb
fwait
movsb
pushf
mov
sub
xchg
dec
jg
push
xchg
xor
jbe
or
jecxz
mov
repz
mov
shr
mov
test
or
stos
mov
aas
jae
sub
pusha
mov
jns
sahf
mov
lods
push
dec
cld
movzwl
mov
xchg
xchg
mov
sub
or
test
nop
pop
nop
ss
dec
push
lret
mov
cmp
ja
and
mov
iret
lretw
push
jp
dec
mov
aas
cmpsl
cmp
das
cmp
js
out
lret
into
xor
repnz
mov
dec
in
jle
pop
and
cmpsl
loope
nop
xor
xor
mov
xor
rcr
in
push
jl
inc
sub
fwait
cmp
in
xchg
int
dec
cmp
sbb
add
mov
or
sbb
ljmp
dec
mov
int
nop
dec
js
gs
xor
cli
dec
cwtl
mov
outsb
into
pusha
jbe
pop
scas
push
fimull
in
test
testl
push
mov
rcrb
pop
rclb
loopne
add
shlb
mov
jb
lods
scas
into
fsubrs
mov
mov
pop
or
movl
adcb
mov
jmp
jg
pop
repnz
adc
out
divl
jmp
mov
jmp
or
and
xor
dec
ljmp
insl
in
mov
call
and
sarl
sub
in
cli
aas
rclb
xor
xchg
int
out
stc
cmp
lds
lahf
mov
and
fsubl
cmc
ret
pop
xor
push
in
pusha
xor
andl
fwait
xchg
stos
int3
call
fisubrs
mov
ja
adc
adc
sbb
pop
mov
xchg
xor
cs
scas
xchg
gs
lret
loopne
xor
fldenv
lods
into
adc
push
xrelease
insl
outsb
jge
lock
fnsave
aas
ljmp
cmp
dec
push
mov
fildll
stos
push
lock
and
push
rorb
mov
jo
xlat
nop
adc
stos
mov
movsl
loop
mov
sbb
jne
clc
or
push
ror
xchg
xlat
cmp
xchg
or
pop
xor
push
push
out
adc
sbb
je
lods
mov
loope
fmul
rolb
jle
adc
fst
push
lods
imul
jg
fnsave
out
movl
imul
inc
cmp
sub
add
test
push
mulb
in
in
mov
or
cmp
scas
iret
fisttps
adc
scas
inc
add
mov
mov
sub
std
repnz
inc
adc
aam
aam
lods
sbb
mov
dec
movsb
mov
stc
ret
call
add
test
inc
xchg
cmp
jecxz
test
in
mov
dec
imul
sbb
or
fldt
subb
inc
outsl
pusha
int
jecxz
and
and
test
out
or
das
xor
lcall
outsb
xchg
adc
mov
jecxz
xchg
jmp
cld
in
or
jge
stos
xchg
sbb
mov
rolb
mov
sahf
loopne
xchg
add
and
mov
fldenv
incb
push
sub
cmp
fdivrl
sti
sbb
dec
bound
push
stos
pop
stos
push
adc
leave
or
mov
arpl
outsl
cmpb
and
dec
lock
enter
sahf
imul
push
push
xor
fmull
cmpsl
icebp
dec
pushf
test
stc
ret
fcomps
cmp
sbb
inc
out
jmp
mov
insl
inc
adc
outsl
inc
jne
fs
out
push
das
rclb
xchg
or
xlat
scas
inc
pusha
cli
out
mov
shrl
dec
jnp
mov
mov
mov
and
mov
push
and
ds
hlt
les
xchg
aam
cltd
sbbb
notl
dec
inc
divb
mov
scas
mov
xor
or
les
sahf
fisttpll
imul
popa
jo
mov
ficoms
iret
ret
or
sarl
cltd
iret
gs
in
frstor
cmp
icebp
add
add
mov
inc
dec
jb
mov
jo
sbb
pop
popa
mov
lods
js
les
shll
jmp
fwait
lcall
loope
fcompl
je
int3
shlb
jecxz
aas
out
xchg
pushf
xor
test
int3
cwtl
aas
add
pop
jnp
xchg
pusha
mov
push
sub
gs
je
arpl
aas
andb
xor
xor
sub
mov
push
std
inc
arpl
fildll
fcompl
leave
and
repz
xchg
push
sub
pop
mov
dec
mov
repnz
mov
insb
popa
out
faddl
adc
int3
bound
sahf
mov
mov
add
push
movsl
xchg
into
sahf
add
mov
pop
ds
sub
add
mov
cmp
add
in
push
cli
push
ret
push
inc
rcrb
xchg
aam
inc
inc
jae
mov
jns
pop
cmpsb
jle
cmpsb
js
fwait
push
xlat
sub
push
js
dec
inc
mov
sub
push
push
shlb
cmovl
rcr
and
cmpsb
inc
lods
mov
addr16
stc
xchg
ficoms
adc
pushf
cmp
je
cmp
sub
push
pushf
xor
or
mov
popa
jbe
mov
push
mov
fs
rcl
das
cmp
pop
imul
mov
jecxz
shlb
gs
sbb
subl
cmp
jle
mov
jno
dec
jnp
or
clc
pusha
int
add
imul
fs
rolb
dec
xchg
pusha
mov
dec
mov
cmpsb
lea
cmp
push
mov
cmpsb
cltd
inc
jle
or
cmp
xor
jbe
cmpsb
mov
pop
sub
adc
out
cmp
xor
ja
test
cmp
andl
inc
dec
arpl
sbb
push
xchg
mov
out
pop
mov
in
lcall
dec
xchg
pop
sub
xchg
cmp
mov
jge
fcmovb
cs
ljmp
jecxz
movsl
ja
cwtl
pop
pushf
popa
addb
out
add
shl
sbb
insb
test
test
xchg
ret
fnsave
mov
xchg
pop
in
cmp
loop
sarb
sub
fbld
mov
cmpsb
cmp
dec
push
push
lock
add
sar
insl
faddp
out
mov
enter
aam
xchg
movb
sti
jbe
add
aaa
sub
outsb
inc
leave
pop
std
lods
cmp
xor
add
lahf
jne
in
dec
cltd
aam
or
pop
sti
movsl
and
sbb
ja
xor
push
inc
inc
sbb
imul
test
mov
out
mov
inc
cli
out
enter
test
dec
mov
and
pushl
add
push
or
das
insb
jge
sub
fisttpl
xor
aas
cmp
js
es
sub
popf
push
fcmovbe
xor
and
cmp
xor
stc
push
add
ss
jno
xchg
cs
jle
fldl2t
jno
mov
nop
pop
cmp
imul
jle
dec
push
andl
lahf
out
jno
sbb
movsl
addr16
add
xor
mov
pop
insb
jo
and
shlb
sbb
mov
or
inc
in
cmpsb
sahf
sti
lret
vpmovusqw
adc
xchg
xor
push
pop
xchg
sub
or
sbb
lods
mov
cmc
sbb
jns
stc
cmp
repz
and
dec
and
push
xchg
out
pop
mov
push
rorb
xchg
scas
ja
iret
or
sub
testb
pop
in
test
in
test
push
mov
gs
je
sbb
xor
and
add
xchg
jmp
in
xlat
movb
bnd
push
in
dec
or
cli
sbb
stos
cmp
fidivs
icebp
jmp
cld
push
es
es
mov
add
jle
dec
pop
dec
inc
jmp
sub
roll
out
lcall
sub
jbe
test
dec
add
loope
xorb
push
mov
fdivs
popf
push
mov
fs
inc
shlb
inc
ficoml
push
xchg
adcl
dec
orl
mov
int3
pop
xchg
nop
popa
mov
jo
dec
mov
cld
xor
inc
lock
std
bound
jb
call
aam
cmp
mov
jmp
adc
in
movsb
mov
add
cmp
or
shrl
pop
jb
jge
icebp
adc
xchg
or
dec
xchg
xchg
push
lahf
arpl
fmuls
popa
inc
out
enter
popf
or
popf
jnp
dec
xchg
rclb
sti
loopne
hlt
sub
sub
imull
xor
faddp
mulb
dec
int3
jae
inc
adc
out
push
add
and
out
push
in
push
inc
test
inc
cmc
cmpsb
sbb
std
andl
xor
dec
out
push
aad
mov
push
test
ljmp
xor
push
xchg
stos
add
mov
js
out
das
adc
add
or
out
rolb
and
insl
pop
adc
mov
jns
and
dec
cmp
out
sbb
fcomip
xor
insl
pop
add
push
pusha
add
fstpl
das
xor
mov
jns
cld
scas
jne
les
movb
xchg
push
je
testb
push
pop
adc
xor
arpl
scas
add
mov
out
mov
pusha
mov
lret
mov
rcll
lahf
addr16
addr16
adc
scas
cmp
sbb
outsb
sub
push
sbb
mov
fcomip
and
lds
mov
mov
mov
jp
jnp
sub
stc
in
jbe
int3
and
pusha
ret
je
imul
sbb
cmp
call
mov
icebp
cltd
inc
mov
dec
fs
out
imull
cmpsl
sbb
stos
lods
lahf
and
iret
lret
shll
add
inc
xor
icebp
mov
add
or
sbb
ds
stos
ljmp
add
lock
cs
adc
aam
sbb
in
leave
ret
adc
jmp
popa
repnz
test
jo
push
jbe
dec
outsl
adc
xor
sbb
aam
dec
jle
sub
scas
mov
iret
pop
cmpsb
outsl
sub
stos
je
loopne
xor
and
cmpsb
sti
cmc
adc
jae
jnp
xchg
imul
push
in
adc
dec
js
lret
inc
bnd
sbb
inc
in
loope
jmp
in
je
call
sahf
inc
int3
mov
fidivl
sub
rclb
repz
xchg
cmp
adc
icebp
xor
aas
push
pop
int3
mov
sahf
mov
ja
cmp
repz
in
orb
sub
adc
mov
js
jle
push
jle
mov
es
aam
push
xor
pop
mov
mov
ljmp
sub
rcll
pop
call
int
loopne
xchg
jae
pop
push
pop
sbb
xchg
fdivl
xor
xchg
jle
mov
inc
outsl
sbb
enter
mov
scas
and
arpl
das
jmp
ss
neg
xor
adc
sub
test
xchg
mov
xor
or
out
aad
cmp
pop
in
push
mov
shlb
push
adc
mov
lea
pop
test
push
sbb
pop
das
out
test
adc
orb
cmp
jnp
imul
enter
sub
cmc
rcrb
mov
mov
inc
daa
movsb
jb
cmp
jnp
jae
das
adc
cs
dec
mov
fisubs
das
cld
push
adc
in
fstpt
jae
or
mov
and
jno
or
or
test
pop
dec
sub
and
mov
pushf
push
xchg
and
inc
jp
xchg
xor
inc
rol
lcall
add
sub
push
pop
mov
lods
cld
inc
scas
bound
lcall
xchg
rorl
repz
movsb
mov
jno
mov
add
dec
stos
or
pop
pop
popf
dec
xor
lahf
icebp
dec
inc
shrb
pop
sti
shlb
sbb
enter
cmp
push
mov
lahf
mov
fwait
xor
stos
insb
clc
or
iret
arpl
pushf
pusha
jle
je
outsb
outsl
and
in
out
out
fistl
jae
mov
jge
test
mov
ss
roll
dec
call
pusha
sub
mov
mov
adc
repz
rclb
mov
or
data16
and
imul
adc
popl
jg
stos
add
aad
mov
mov
push
inc
push
cmp
sub
ja
push
out
inc
ja
jge
sarl
dec
adc
lahf
sti
and
lock
jne
in
add
outsb
leave
push
out
pushf
mov
rcrb
xchg
insl
push
call
out
ss
push
push
rorl
push
pop
insb
imul
cmp
dec
cmp
jbe
xchg
pop
xchg
pop
inc
push
popa
addr16
xor
adc
ds
xchg
test
loop
cmpsb
fsubs
adc
push
das
jnp
inc
cmp
in
adc
aad
xor
scas
popa
repnz
pop
lds
jbe
pop
dec
cli
pop
cmp
gs
or
js
push
inc
dec
jne
push
push
inc
dec
jnp
or
mov
pop
fisttpll
fsts
mov
mov
fdivs
outsl
xorb
jecxz
int
adc
inc
lcall
inc
sbb
shl
dec
data16
dec
movsb
jg
jb
pop
call
jg
subb
inc
bswap
xchg
clc
pop
in
push
out
cmp
dec
ljmp
mov
dec
mov
xchg
mov
fisttpl
scas
idivl
or
in
dec
int
fidivl
and
out
repnz
push
mov
mov
pop
dec
sub
in
dec
mov
add
pop
mov
adc
test
adc
cmpsl
scas
lods
in
movsl
shll
mov
dec
mov
cmp
xor
out
push
push
testl
mov
or
mov
add
faddl
cmp
push
and
lcall
xchg
push
in
loopne
add
test
add
push
insl
or
std
inc
or
adc
stos
or
add
leave
aaa
dec
mov
push
out
lods
pop
sbb
mov
push
xor
lret
movsl
xchg
loopne
jbe
adc
fsubl
inc
fnsave
xchg
pushf
and
cmp
cmpsl
push
adc
cld
and
test
or
xchg
xor
inc
rol
sub
adc
inc
add
push
fldt
scas
and
int
test
xor
les
mov
ja
jmp
int3
add
pop
mov
popf
cli
push
mov
cmpsb
out
xor
cmpb
mov
xchg
mov
hlt
movl
push
cmpsl
or
pop
sar
mov
xor
cmc
daa
push
inc
xchg
jne
cmp
jns
hlt
daa
in
faddl
xor
bound
cmp
add
scas
or
gs
or
jae
inc
push
out
and
sti
fiadds
mov
pop
xor
imul
xchg
cmpsb
in
pop
sbb
mov
in
repnz
inc
push
push
cmp
sar
rcl
xchg
cmpsl
imul
fstpl
into
jb
lock
pop
adc
in
lock
inc
out
cltd
adc
scas
lret
and
adc
push
add
repz
rolb
mov
lret
add
xchg
mov
cmp
xchg
dec
xchg
mov
jo
and
loopne
cmp
inc
cmp
jnp
sbb
add
das
or
ret
test
lahf
xor
jge
lock
xchg
xor
into
push
mov
xchg
xchg
popa
gs
int
test
mov
punpcklbw
mov
sahf
cmp
mov
dec
jge
movsl
sahf
pusha
jne
pop
idivl
dec
xor
iret
adcb
jbe
xor
pcmpgtw
mov
dec
add
repz
and
pop
cmp
xor
in
inc
push
fdivrp
mov
les
or
cmp
int3
dec
sbb
inc
cwtl
int
in
or
and
stos
mov
out
scas
xchg
lds
sti
pop
cli
or
push
int3
mov
xchg
int3
inc
pusha
adc
icebp
jg
sub
jbe
jne
stc
pushf
dec
adc
mov
test
ret
dec
orb
stc
ret
fstpl
xchg
hlt
xchg
inc
bound
daa
inc
shrl
aas
insl
loopne
mov
cld
sbb
add
popa
out
sub
mov
pusha
adc
xchg
insb
lods
push
movsl
pop
pop
lods
mov
cltd
ljmp
dec
mov
mov
test
daa
pop
mov
test
mov
ret
and
add
mov
stos
and
xchg
je
clc
add
inc
pop
mov
add
lcall
jg
push
xlat
sbb
cltd
mov
mov
lock
xchg
or
xchg
cld
das
and
aam
and
add
lods
lahf
popf
mov
stos
mov
icebp
icebp
insl
or
cmc
xchg
push
pop
xor
cmpsb
orb
and
xor
repnz
xchg
or
in
mov
aas
stos
cmp
inc
mov
pop
test
mov
fisubrs
int3
lods
repnz
fcmovne
xchg
fisubrl
jp
fmul
lods
leave
mov
push
out
int
xchg
call
ret
cmc
sbb
push
arpl
pop
add
test
shll
mov
in
pop
mov
xchg
push
cmc
movsl
jbe
add
xor
enter
and
adc
sub
or
sbb
and
xor
push
sbb
push
scas
incb
sbb
les
pusha
add
insl
dec
or
and
sbb
call
xchg
mov
std
test
jle
ror
movsb
xor
lret
shrb
addr16
mov
test
and
sbb
lods
ror
sbb
test
lods
cmp
test
repz
inc
mov
inc
pavgw
push
loop
sub
dec
enter
xchg
sub
scas
mov
je
pop
fldcw
shll
xlat
or
sbb
pop
inc
enter
push
add
cmp
les
cltd
pop
js
mov
jo
mov
cmp
out
fildl
sbb
sbb
or
xchg
dec
cmp
xchg
out
in
and
fistps
icebp
or
mov
sbb
cltd
test
aam
pushf
cmpsb
push
cmp
in
xor
js
xchg
adc
stc
jge
call
ret
pop
cli
push
fcmovb
mov
cmpsb
loop
movsb
mov
clc
adc
out
mov
movsb
dec
xchg
and
adc
outsb
mov
fwait
lods
pop
mov
adc
cltd
mov
push
mov
in
popa
in
push
dec
movlps
add
rclb
pop
call
mov
xchg
mov
or
sti
popa
add
cmp
jp
addr16
mov
shr
and
mov
xor
das
icebp
jbe
dec
push
mov
repnz
test
gs
pop
dec
xor
xchg
mov
loopne
inc
inc
lock
call
jmp
gs
lock
xlat
pop
cmpsb
mov
and
jae
test
push
xchg
in
mov
mov
sbb
and
loop
lds
pop
dec
fdivl
rol
mov
mov
jne
pop
ret
adc
add
lods
pusha
dec
int3
mov
dec
out
aaa
rorb
add
cmp
pop
dec
pop
xchg
add
or
pop
pop
inc
add
repnz
sahf
dec
xchg
rcrl
push
dec
jae
sbb
jge
mov
mov
jns
xorl
jl
mov
and
mov
lret
aad
xchg
int3
dec
xchg
inc
jp
pushf
cld
pop
lret
es
xchg
pop
fcomps
loopne
popa
ja
out
or
or
cmp
je
sti
dec
dec
sti
ljmp
jbe
sbb
movsl
mov
es
adcl
or
call
test
std
cmc
cltd
das
cltd
add
sub
dec
sub
addr16
lods
jle
fldl
push
add
sub
aas
sub
jecxz
cmp
sar
pop
xchg
stos
cmp
push
mov
lea
test
ja
and
inc
sub
xchg
sbb
xchg
sub
adc
xchg
fldcw
cld
push
pop
pushf
cmpb
cmp
mov
xchg
cmp
inc
cmp
js
lret
cmp
add
and
jne
and
mov
cmp
xor
sbb
std
test
decb
leave
mov
dec
ja
push
jns
aam
xlat
fmuls
loopne
jne
js
fdivr
dec
pop
sbb
cmp
aaa
mov
mov
pusha
dec
sbb
mov
adc
stc
daa
dec
push
addr16
pop
push
cmc
nopl
ljmp
dec
xchg
dec
popf
pop
in
adc
or
mov
mov
adcl
adc
fidivrl
sub
pop
fs
mov
call
iret
xchg
jg
or
dec
lock
or
or
cmp
xchg
neg
les
orb
es
cmpsb
jb
adcb
arpl
cld
xor
mov
cmp
aad
gs
lea
and
test
ljmp
sbb
mov
xchg
adc
test
jbe
jne
xor
pop
xchg
outsb
stc
sub
sub
push
leave
sub
and
lods
int
out
call
out
fisubl
and
adc
aas
add
jge
or
xorl
fwait
ror
fwait
aas
xchg
in
adcl
inc
adc
pushf
rcrb
loop
inc
inc
fisubrs
call
add
sahf
xor
xchg
cmp
stc
dec
aaa
scas
mov
mov
adc
lock
lods
dec
jg
and
sti
inc
pop
xor
inc
ss
mov
test
mov
xchg
jo
xor
mov
gs
mov
mov
fs
jns
cmovb
xchg
sbb
scas
int3
xor
xchg
push
jae
add
or
incl
call
and
sahf
dec
arpl
fcmovnbe
jmp
icebp
pop
mov
arpl
sub
fisubrl
aam
mov
jae
push
dec
cmp
pushf
ficoms
push
mov
cmp
pop
pusha
pop
sbbb
mov
stc
insb
jp
inc
xor
xorb
mov
ds
sbb
test
xchg
mov
mov
das
adc
jecxz
repnz
xor
adc
loopne
pop
loopne
movq
push
jo
repnz
ss
dec
nop
stos
imul
jge
bound
jno
aaa
xchg
lea
or
xchg
mov
fildl
loopne
mov
mov
rcll
sbb
dec
insb
jmp
enter
fidivs
add
jae
pusha
push
pop
add
adc
cmpsl
in
sub
push
jmp
xchg
xchg
pop
sbb
mov
jle
push
mov
lret
push
lret
out
xchg
sbb
sbb
fnsave
les
out
daa
mov
pop
in
pop
adc
gs
jl
lea
pop
mov
add
mov
pushf
or
add
jne
and
pop
roll
sti
xor
getsec
fsub
xchg
ds
add
jmp
js
sbb
loop
je
rcrb
pop
fdivrl
pop
adc
roll
fidivrl
repz
call
cmp
in
dec
adc
insb
imul
cmp
es
sbb
or
adc
sub
adc
ficomps
mov
div
and
aas
or
xchg
pop
mov
push
or
pop
jo
mov
clc
mov
fcompl
fcompl
mov
std
cltd
jbe
and
in
sub
mov
roll
mov
mov
or
mov
dec
cmpsb
pop
push
test
bound
cmp
stos
cltd
testb
push
mov
mov
cmp
adc
fwait
jae
jne
pop
test
shrl
out
fdivs
out
sbb
ss
adc
rcrl
inc
jns
mov
push
cmpsb
jecxz
in
inc
out
shll
scas
mov
pop
dec
cmp
sbb
add
xor
xor
sub
sahf
adc
sub
insb
addl
mov
xchg
ds
adc
jbe
cmp
fucomp
xchg
inc
add
adc
and
sub
push
pushf
hlt
xchg
or
xor
push
test
pusha
mov
lods
or
adc
aas
es
push
clc
aam
test
mov
jnp
push
cld
mov
aas
in
in
jb
inc
lds
mov
mov
adc
jne
dec
repnz
hlt
xor
dec
fcompl
ljmp
mov
lds
lahf
dec
xchg
xchg
ret
clc
cs
xor
jmp
cli
fdivl
pop
sahf
ljmp
xchg
shr
pop
addr16
popa
sbb
sub
adc
mov
pop
mov
xchg
push
push
dec
lcall
jns
ucomiss
mov
andb
and
pop
inc
out
mov
add
sbb
inc
inc
sbb
int3
mov
lcall
rcll
ret
mov
out
out
lcall
out
enter
popf
sbb
fisttps
add
pop
loope
imul
fcomps
dec
pop
cli
mov
add
sarb
mov
mov
test
xor
add
loope
int3
mov
jb
insb
inc
mov
scas
aaa
fsubr
cmp
sbb
add
sub
add
jp
xchg
add
cmp
ljmp
sub
daa
inc
jge
popa
cs
push
xchg
out
jnp
xchg
je
or
inc
loop
test
jl
add
ror
imul
dec
pop
pop
imul
dec
ds
enter
mov
les
dec
jns
and
imul
xor
jl
mov
adc
mov
push
add
mov
xor
cmp
add
jmp
jecxz
push
jmp
les
pop
adc
sahf
in
shlb
pusha
es
mov
pop
cmpsl
dec
sub
shll
inc
mov
add
and
aam
andb
cmpsl
sbb
mov
jb
js
sbb
pusha
jmp
push
mov
cltd
and
dec
mov
push
fistpll
push
push
push
out
pop
jae
stc
jl
sub
es
xchg
mov
mov
incl
gs
mov
cmc
fcoms
adc
add
jb
stos
sub
testb
cmp
bound
mov
sub
dec
fistpll
push
pop
and
dec
fstpl
data16
cwtl
push
mov
mov
js
loope
dec
add
rol
sar
adcb
iret
nop
xchg
stos
adc
jno
mov
jae
fildl
ja
test
das
push
xor
and
jne
aas
sub
cmp
cld
push
out
jmp
ss
jno
push
sbb
inc
pop
adc
cli
outsb
add
xor
das
scas
outsl
pop
mov
add
mov
or
or
sbb
xchg
push
cmp
aaa
ss
fstpt
movsb
jbe
sti
enter
sbb
movsb
rcll
out
mov
inc
out
push
mov
jbe
shlb
test
inc
sub
jb
sbb
out
cs
cmp
push
xchg
and
repz
sub
popf
add
inc
push
add
adc
xchg
dec
jge
push
xor
cmpsb
lock
push
addr16
pop
sbb
stos
or
into
mov
mov
pop
fldt
sbb
xchg
mov
add
mov
lods
jb
lods
mov
data16
repz
xor
shl
test
imul
lea
cmp
mov
dec
fstl
and
iret
mov
ficoml
clc
and
in
dec
xchg
shlb
dec
push
adc
mov
mov
test
scas
pushf
pop
fisubl
rcrl
sub
push
cmp
std
pop
out
mov
insl
fs
movb
rcrb
dec
dec
or
lcall
and
cmpsl
int
ret
mov
adc
push
mov
stc
push
push
jge
out
pushf
gs
ljmp
sub
or
ljmp
fwait
jmp
add
fs
imul
pop
xor
out
mov
xor
and
adc
cmpl
xchg
add
inc
adc
iret
dec
pushf
dec
cmp
pusha
add
adc
in
push
and
sbb
scas
xor
inc
adc
jl
negb
or
ljmp
cmp
aaa
fsubr
sbb
or
outsl
lock
hlt
xlat
test
imul
inc
sti
cmp
testw
out
sub
data16
icebp
lret
je
xchg
int3
xor
call
pop
push
scas
mov
call
inc
cmp
push
cli
mov
out
das
mov
outsl
xchg
cmpsl
xor
dec
inc
dec
dec
pop
mov
push
add
rcll
imul
sub
std
pop
or
test
std
pop
cltd
popa
xchg
sub
roll
mov
das
sbb
call
mov
out
test
std
pop
or
test
std
pop
or
test
std
pop
or
test
std
pop
clc
cmp
jg
inc
and
je
adc
xchg
fistps
jae
outsb
jo
out
test
std
pop
or
test
std
pop
or
test
std
pop
or
test
std
pop
or
test
std
pop
or
test
std
pop
or
test
std
pop
or
test
std
pop
or
test
std
pop
or
test
std
pop
or
test
std
pop
or
test
std
pop
or
test
std
pop
or
test
std
pop
or
test
std
pop
or
test
std
pop
or
test
std
pop
or
test
std
pop
or
test
std
pop
or
test
std
pop
or
test
std
pop
or
test
std
pop
or
test
std
pop
or
test
std
pop
or
test
std
pop
or
test
std
pop
or
test
std
pop
or
test
std
pop
or
test
std
pop
or
test
std
pop
or
test
std
pop
or
test
std
pop
aad
add
.byte
