outsb
or
add
loopne
add
adc
add
add
add
add
add
add
cmp
add
add
add
lock
div
add
or
add
sbb
add
sub
add
ss
add
add
add
inc
icebp
add
add
add
push
icebp
add
lock
dec
lock
shl
add
lock
fdivp
add
insb
lock
dec
inc
push
dec
inc
dec
xor
cs
dec
dec
add
jb
gs
xor
cs
insb
add
fs
insb
cs
insb
add
add
fs
imul
add
add
je
jb
arpl
fs
jae
add
add
jb
jne
insb
push
jb
je
arpl
add
jb
jne
insb
inc
insb
insb
outsl
arpl
add
push
imul
jb
add
add
imul
jae
add
push
imul
jb
je
arpl
add
add
push
outsb
insl
popa
jo
imul
arpl
outsb
add
add
and
add
in
pop
add
add
add
adc
push
or
mov
call
pop
mov
sub
sbb
lea
mov
cmp
je
lea
mov
cmp
je
movl
push
pop
mov
sbb
mov
add
lea
add
mov
push
pop
pusha
push
push
push
push
call
and
je
mov
call
pop
mov
sub
adc
push
push
call
popa
add
push
pop
cmpl
jne
add
mov
jmp
mov
add
adc
cmpl
je
add
mov
add
push
push
push
push
pushl
pushl
push
push
call
pop
pop
pop
pop
cmp
je
add
jmp
push
push
pushl
call
lea
mov
lea
mov
push
pop
cmp
je
mov
inc
sub
cmp
ja
mov
cmpb
je
mov
cmp
jne
mov
shr
rol
xchg
jmp
mov
xchg
rol
xchg
sub
add
mov
add
sub
mov
loop
call
lea
mov
cmp
je
mov
sub
je
mov
mov
lea
mov
lea
cmp
je
mov
add
mov
jmp
mov
add
mov
xor
mov
inc
or
je
cmp
ja
add
add
jmp
and
shl
mov
add
or
jne
mov
add
jmp
xor
xchg
mov
cmp
je
lods
or
je
add
add
jmp
xor
shr
lods
or
je
add
add
jmp
mov
sub
xor
mov
cmp
je
inc
lea
mov
push
push
push
push
push
pushl
pushl
mov
add
push
call
pop
pop
pop
pop
add
loop
popa
popf
jmp
mov
or
je
mov
add
cmpl
jne
cmpl
jne
cmpl
jne
jmp
mov
add
push
push
push
lea
add
add
push
call
pop
pop
pop
cmp
je
mov
add
add
xor
mov
cmp
jne
inc
jmp
mov
add
push
push
push
cmpb
jne
inc
mov
and
mov
movb
push
push
pushl
call
pop
pop
pop
pop
cmp
je
mov
mov
pushl
popl
add
inc
jmp
clc
ret
jmp
push
mov
pusha
push
mov
mov
cld
mov
movsb
call
jae
xor
call
jae
xor
call
jae
mov
call
adc
jae
jne
stos
jmp
call
dec
loop
mov
call
jmp
lods
shr
je
adc
mov
jmp
xchg
dec
shl
lods
mov
call
cmp
jae
cmp
jae
cmp
ja
inc
inc
push
mov
sub
rep
pop
jmp
add
jne
mov
inc
adc
ret
xor
inc
call
adc
call
jb
ret
pop
sub
mov
popa
pop
ret
push
call
addl
or
inc
and
push
mov
sbb
loope
jge
sbb
add
or
rcrb
les
adc
push
mov
push
xor
add
insb
and
jb
mov
inc
adc
cmpl
mull
lret
je
je
pusha
add
rcrl
dec
jne
adcl
or
mov
cmp
xchg
sarl
ljmp
lea
add
pop
push
push
or
cs
pop
mov
push
jo
decw
fcoms
and
add
outsb
push
sub
push
push
push
push
call
add
fwait
mov
or
pop
orl
jbe
in
movsl
cmp
lock
dec
push
mov
push
cmp
push
or
mov
mov
enter
fcmovnbe
loop
xor
pop
cmp
test
adc
aam
xchg
ss
xor
inc
or
xchg
addl
mov
push
ret
xchg
jbe
adc
inc
inc
enter
add
xor
stos
adc
call
pop
test
push
fsubrs
lret
call
insb
pop
mov
add
sub
mov
cmp
lds
push
pminub
scas
mov
add
xchg
adc
sbb
inc
pop
and
mov
push
ss
dec
jge
mov
and
lret
jno
adc
int
fstps
add
ret
inc
rorl
cmp
test
jae
jge
out
jmp
and
in
xlat
ret
add
or
outsl
arpl
cld
je
cmp
add
sub
mov
mov
es
mov
sub
adcb
call
cmp
loope
or
jo
sub
adc
add
inc
or
pop
loop
inc
cmp
pusha
bndldx
sub
nop
and
pop
addb
push
mov
xor
call
mov
mov
cwtl
dec
cmp
cmp
stos
add
cwtl
lea
push
sub
in
dec
setb
cwtl
xchg
xchg
adc
xor
xchg
inc
in
je
sub
xchg
xchg
popf
rorb
aad
std
les
sub
rcrb
or
or
push
call
push
adc
jmp
scas
movsb
inc
enter
pop
lock
jmp
fdivl
bound
in
lock
mov
push
xchg
inc
add
or
rclb
dec
pushf
loop
sti
add
mov
jmp
dec
mov
pop
push
mov
lods
inc
push
es
inc
push
xchg
fs
es
iret
adc
call
sub
add
sbb
test
push
xorl
push
add
jl
xor
out
je
sbb
sub
jge
xchg
mov
sub
push
dec
pop
add
pusha
add
jmp
out
rorl
xchg
inc
testb
xchg
xor
or
mov
or
xchg
adc
add
add
divb
adc
ja
or
xchg
inc
es
dec
dec
arpl
jmp
out
out
mov
sbb
jmp
fistl
pop
lods
movsb
les
into
and
jns
inc
or
inc
push
cmp
jne
fstl
inc
and
ret
js
aas
inc
mov
leave
rorl
and
leave
push
mov
push
add
call
or
movl
decl
push
call
or
sbb
or
or
dec
inc
jne
in
ret
push
inc
scas
adc
mov
andb
daa
rcll
or
scas
pusha
ret
shlb
int
or
xor
jo
icebp
je
loope
decl
push
add
pop
int3
cmp
and
dec
adc
loope
or
insl
ror
movsb
inc
sub
in
pop
sbb
shl
shl
mov
stos
push
rorb
fists
ss
in
jo
inc
mov
mov
shlb
or
out
sbb
pop
add
loopne
dec
add
adc
or
or
mov
and
cmp
push
nop
leave
push
mov
fwait
adc
adc
clc
inc
icebp
dec
sbb
add
jecxz
and
lock
sub
mov
xor
sbb
leave
push
dec
add
enter
shl
call
sub
xlat
push
inc
mov
dec
lods
cmp
cmp
lcall
bound
mov
ret
shl
inc
mov
scas
sub
and
mov
push
dec
cmc
test
or
test
es
sbbl
xchg
fs
or
std
and
sub
sub
push
mov
pusha
mov
jb
dec
add
pop
mov
pop
xlat
lods
mov
inc
mov
xchg
mov
push
lods
xor
adc
iret
icebp
loop
and
loop
sbb
dec
sbb
out
aam
cld
jnp
inc
sbb
mov
sahf
mov
xchg
aaa
loop
jne
or
push
sub
pop
repnz
fsub
jb
or
test
xchg
sub
mov
sub
popa
add
add
punpckhdq
or
adc
push
mov
je
dec
xor
jmp
xchg
pushf
sub
push
sub
jecxz
xchg
inc
sti
cmc
and
test
cltd
mov
mov
mov
push
or
dec
shl
pop
mov
or
lcall
push
and
cmp
mov
dec
stos
mov
adc
je
ret
adc
mov
dec
lret
xchg
fldl2e
cmp
jae
fsubl
loopne
ret
shl
jmp
and
test
pop
adc
inc
fadd
test
or
arpl
outsb
xchg
mov
rcrb
push
icebp
adc
ljmp
outsl
adc
inc
inc
cmp
xchg
cwtl
xor
bound
xor
sub
data16
ljmp
ja
in
test
fiaddl
sarl
jno
shr
inc
pushf
cmp
jb
outsl
call
mov
sub
jb
out
clc
push
pop
cmp
outsb
cmpb
mov
lds
ret
add
add
add
pop
add
addb
sub
add
loopne
add
add
mov
ret
adc
xor
lahf
push
jbe
jmp
subl
sbb
popa
lret
out
xchg
mov
pop
pop
and
dec
out
xchg
fs
push
add
jno
icebp
add
mov
or
mov
sub
sub
mov
mov
add
push
add
cmp
int
fnstsw
adc
testb
lea
rcrb
push
push
push
mov
mov
out
xchg
int
fcoms
insb
stc
mov
push
lds
sub
sub
mov
and
lock
shl
adc
bound
jne
loop
pop
cltd
mov
xor
cs
insl
inc
and
mov
or
and
out
push
orb
mov
addr16
sbb
sub
fbld
shlb
lcall
pushf
cmpsb
dec
jns
rcl
fbstp
mov
add
cltd
adc
mov
std
pop
das
lahf
sub
cmp
and
daa
cmp
mov
adc
dec
faddl
stc
das
lea
cmp
scas
dec
mov
leave
inc
lock
sbbb
sbb
jns
or
mov
add
jo
or
scas
cmp
sub
popf
fldl
out
add
jecxz
pop
mov
jge
cltd
mov
xor
out
add
pop
fwait
lea
aam
inc
lea
inc
adc
cwtl
jecxz
out
sbb
in
fwait
orb
pop
cs
mov
lods
test
xor
or
movsb
sbb
cmp
rcrb
fdiv
inc
addr16
dec
push
or
jmp
iret
xchg
add
mov
cmp
mov
jl
cmp
scas
lret
sbb
data16
fisubrs
mov
cmp
inc
adc
sub
xchg
ret
xchg
fwait
lock
mov
daa
sub
add
and
dec
xchg
movsb
cpuid
xor
in
inc
out
push
xor
adc
push
inc
imul
xchg
cmc
xchg
jecxz
jns
push
inc
int3
adc
test
ret
sub
fwait
stc
add
jno
clc
push
bound
xor
outsb
imul
mov
sub
out
jg
or
and
inc
test
add
cmp
mov
ljmp
xchg
mov
sub
xchg
push
mov
cli
xor
lahf
and
jo
in
das
adc
jno
mov
pop
out
mov
sbb
pop
mov
and
push
pop
push
xchg
adc
mov
loop
loope
hlt
push
mov
mov
loope
ljmp
aas
lods
hlt
fsubl
adc
arpl
push
les
cmc
push
xor
or
dec
clc
cmc
xchg
bnd
dec
xor
or
pop
and
cmp
mov
mov
ss
push
ds
mov
add
mov
cltd
rol
enter
adc
xchg
sbb
shlb
insb
jbe
ret
pop
sbb
sub
sbb
popa
jbe
or
mov
jle
jge
nop
enter
or
mov
and
in
mov
inc
fsubl
xchg
dec
rcll
xor
int3
dec
les
out
je
pop
es
jmp
imul
sub
mov
mov
data16
xchg
testb
test
lods
xchg
ja
lods
imul
insl
fisttpll
mov
mov
sbb
movsl
xorb
fisubrs
dec
insb
lret
negl
out
and
xchg
and
xor
incb
dec
into
dec
xchg
bound
int3
mov
push
xor
ljmp
push
sbb
lods
sbb
sar
es
cmpsb
jo
negl
enter
mov
out
out
ja
loopne
sbb
mov
or
cmp
fnstenv
push
fs
addb
lret
fs
jbe
inc
add
std
sbb
popf
add
push
cmpsl
xchg
out
fwait
add
pop
and
cmp
dec
roll
mov
ds
or
mov
ds
in
lcall
dec
sbb
icebp
pop
mov
pop
dec
xor
mov
cmpl
arpl
imul
mov
loop
mov
xor
inc
ficoms
pop
jno
fsub
rcl
push
shrb
loop
stos
push
out
int
adc
dec
faddp
stos
push
les
scas
movsl
sub
xchg
jge
pusha
and
loopne
gs
incb
lds
mov
add
pop
cmpsl
pop
andb
in
add
cltd
data16
stos
aaa
cmp
inc
iret
gs
push
sub
dec
subb
adc
push
pop
ljmp
and
mov
gs
sbb
inc
push
das
jge
movl
and
cmp
imul
push
call
fnstcw
fs
mov
push
pusha
xor
sbb
sti
clc
cld
out
sub
fs
xchg
leave
dec
jae
addb
rorb
inc
push
imul
int
aad
add
pop
cmpsl
pusha
pusha
int3
daa
jecxz
out
mov
mov
jbe
leave
sub
or
mov
scas
push
out
adc
lods
push
movsb
ljmp
out
sbb
mov
shll
or
movsb
cld
mov
cmp
mov
push
ret
xor
lock
dec
cmpsb
push
lods
rcl
call
push
adc
or
lds
insl
lods
sub
add
push
lds
mov
xor
pop
es
fs
addb
xor
lea
dec
es
fcoms
insb
cltd
js
inc
into
pop
adc
jae
cmpb
cli
xchg
pop
fidivrs
ror
jns
negb
sbb
add
xchg
mov
rcr
adc
test
andb
push
or
repz
mov
test
and
fnstcw
sub
clc
mov
jo
ds
ds
add
cmp
test
repz
cmp
add
int
mov
int3
sbb
mov
add
pop
out
out
out
xchg
lea
pop
hlt
inc
adc
add
lahf
adc
sub
push
dec
jmp
push
adc
aad
inc
pause
jo
fidivrl
cltd
push
inc
add
cmp
ja
jle
jg
dec
addl
outsb
ret
add
lcall
fildll
inc
push
insl
pop
ds
cmc
sub
adc
clc
out
jge
pop
rcrl
shrb
jae
pop
or
insb
xchg
test
mov
push
in
ret
xchg
loopne
gs
dec
cmp
inc
aas
repz
in
mov
jecxz
mov
mov
rep
xor
arpl
xchg
imulb
mov
and
int3
rorb
mov
jp
scas
add
pushf
in
repz
sbbl
mov
or
movsl
mov
or
xor
rcrb
addb
and
popf
jno
push
push
pop
pmullw
out
and
movsb
adc
and
jns
xchg
stos
add
add
into
mov
inc
jecxz
adc
divl
push
and
leave
adc
popf
inc
jmp
sub
cmp
mov
adc
lods
adc
call
push
push
push
test
or
fs
sub
pushf
test
fisttpl
or
xor
pop
sahf
sti
mov
std
sti
arpl
push
mov
idiv
adc
test
mov
jg
or
xchg
into
xor
sbb
cmpsb
dec
jae
pop
jno
or
dec
imul
dec
outsb
fcoml
cmp
nop
shl
faddl
dec
push
jmp
xor
scas
xchg
xor
sbb
xchg
push
mov
outsl
jl
movsl
inc
rcll
icebp
stos
in
test
add
pop
and
mov
aaa
inc
xor
scas
mov
stc
pop
mov
ja
push
dec
pushl
push
sbb
sbb
sti
sub
dec
jne
dec
jb
sub
mov
js
jge
leave
sub
mov
lcall
cld
adc
pop
in
sbb
lret
orl
and
jns
xchg
or
add
jmp
ljmp
loopne
clc
hlt
jae
arpl
xor
into
in
aaa
sbb
sub
mov
jge
push
fcmovnu
inc
outsb
pop
pusha
stos
enter
dec
addr16
cmpsb
pop
inc
mov
mov
fdivs
iret
ss
aad
cwtl
sub
cld
into
das
sbb
xchg
dec
popa
insb
inc
hlt
adc
test
mov
insl
mov
call
cmp
jbe
xchg
insl
cmpl
fimuls
negl
addl
movsb
jno
test
xchg
xor
push
addr16
sub
pop
aaa
dec
jbe
aas
loope
test
sub
or
pop
in
xor
dec
mov
pop
pop
dec
lret
imul
adc
add
and
mov
push
ret
pusha
mov
popf
lock
xor
daa
jae
ljmp
push
pop
pop
imul
fxch
les
and
jecxz
xor
subl
xor
call
and
imul
popf
sahf
jb
push
test
xor
insb
push
gs
rcl
dec
sbb
xor
daa
cmp
mov
out
test
test
iret
jne
rcll
std
leave
outsl
pop
rolb
adc
or
mov
insl
sbb
sbb
div
icebp
xchg
add
repnz
fbstp
jbe
xchg
jne
xor
rcrb
es
inc
sti
jle
sbb
lret
mov
icebp
pop
xchg
shll
movsb
inc
dec
and
xor
hlt
xchg
je
mov
out
adc
cmp
sub
mov
ss
out
mov
pop
lret
dec
jle
mov
je
gs
pusha
mov
andb
jl
loope
jge
lret
test
mov
scas
jae
xchg
xchg
rcr
outsb
dec
cmp
test
hlt
cmp
mov
enter
ja
lahf
sarl
push
lods
gs
outsl
add
mov
pop
add
inc
andb
int
es
push
rcll
stos
scas
notb
mov
dec
pop
push
sahf
push
xchg
ljmp
push
std
xor
sub
dec
test
pop
pop
popa
pop
jb
cld
ljmp
xor
js
stos
dec
sub
sub
out
mov
pop
add
pop
stc
or
mov
sub
fwait
lods
testb
mov
inc
andb
push
sbb
lock
fistpll
nop
cs
orl
mov
repz
lahf
incl
sub
loop
fiadds
or
int
shll
clc
push
leave
push
xchg
out
ds
in
lret
loope
push
ljmp
mov
adc
mov
or
mov
lock
add
cmp
stos
push
into
inc
or
xchg
dec
out
test
scas
xor
enter
mov
cwtl
out
insl
cs
outsl
mov
dec
dec
cmp
and
add
es
negl
fisttps
jg
or
xchg
cmovno
pop
mov
pop
xor
repnz
enter
cmpsl
sbb
cmp
pushf
add
jns
clc
inc
mov
stos
sbb
jmp
out
ss
mov
gs
mov
mov
popf
jo
inc
mov
push
push
lods
push
xchg
movsb
hlt
gs
sub
stos
mov
out
fs
fsubl
sub
cwtl
sub
add
xor
leave
pop
call
andb
jae
inc
repz
push
je
cmpsb
out
aam
mov
xchg
sti
scas
jb
sbb
mov
fwait
mov
push
int
test
cs
imul
inc
sub
rolb
sbb
insb
into
push
mov
push
pop
sbb
shr
fnstenv
inc
push
inc
scas
fists
xlat
mov
lcall
cmp
cmpsb
jbe
gs
mov
hlt
xchg
sub
jp
xor
mov
lahf
mov
jmp
daa
cmc
push
push
test
pushl
shl
ss
push
stos
ljmp
nop
fs
adc
push
imull
mov
mov
pop
mov
hlt
xchg
sarl
xchg
shll
arpl
icebp
inc
push
sahf
xchg
mov
gs
out
pop
mov
mov
sub
sub
ret
mov
arpl
mov
jle
mov
push
mov
inc
cld
comiss
pop
insb
jb
scas
add
pop
lret
in
jle
cmp
fsubrl
testl
fisubs
movsb
shlb
jecxz
testl
pop
insl
pop
jle
lock
test
adc
cmp
fstps
xchg
xchg
xchg
jne
mov
adc
xor
pop
lods
cs
ror
enter
aad
sub
mov
outsl
jb
sbb
push
gs
inc
xchg
add
dec
fbld
gs
mov
in
xlat
cmp
sub
lods
cmpsl
or
imul
mov
into
into
xchg
mov
jno
sbb
cmp
ret
mov
hlt
mov
in
cmc
pop
adc
loop
cs
push
adc
jge
pop
xor
out
xchg
loopne
jl
ljmp
fsub
ss
cmc
adc
fildl
sbb
imul
xor
xor
fwait
leave
dec
cmc
aaa
das
outsb
inc
xor
lahf
sbb
adc
in
lock
xor
loopne
xor
pusha
out
out
mov
push
mov
insb
stos
and
push
test
pop
add
int3
aaa
inc
mov
jne
out
in
scas
xor
insl
dec
leave
or
jbe
aas
lcall
lds
ret
inc
xchg
xchg
insb
mov
fs
es
rorb
sbbb
adc
enter
fsts
and
jno
or
notl
push
fs
mov
cmpsb
mov
xorl
mov
fisubrs
test
int
xchg
cld
imul
mov
fistpll
xchg
icebp
add
jo
mov
aaa
das
jg,pn
fmul
loop
bound
push
repnz
ret
sub
fists
mov
ljmp
sub
push
testb
pop
and
lea
int3
cltd
cmpsl
std
out
int
stos
sub
ficompl
push
lahf
ffreep
pop
out
jl
movsl
in
mov
jmp
jp
aaa
in
jp
inc
sbb
mov
xchg
lock
push
sub
movsl
clc
mov
cltd
insb
ficomps
push
stos
adc
pusha
loope
mov
lret
dec
mov
mov
lret
testb
arpl
jbe
dec
dec
jle
jnp
sahf
loopne
cmpsl
scas
dec
sbb
push
roll
push
mov
jns
gs
movsb
cli
fcoml
cmpsb
jecxz
add
cli
repnz
scas
rcl
jo
in
jne
or
shlb
stos
popf
fstl
ja
cmp
xor
pop
pushf
lods
fdivrp
mov
pop
out
popa
ret
xor
jns
out
mov
aaa
ja
ljmp
ss
lahf
push
mov
xor
mov
mov
jle
out
out
mov
xor
icebp
add
push
dec
jg
inc
mov
dec
sahf
jb
into
cmp
xor
test
sti
xchg
sbb
ficoml
sbb
xor
fdivl
sbb
mov
lds
or
jg
enter
inc
in
add
pusha
cltd
lea
aam
xchg
cmp
pop
push
inc
cmp
jnp
adc
in
fdivrs
outsl
cmp
sbbl
loope
inc
test
jo
repnz
outsb
pop
mov
pop
out
aas
xchg
insl
fbstp
test
mov
jg
fwait
shrb
cmpxchg
sbb
pop
movl
loopne
pop
mov
xchg
pop
ret
insb
aaa
pmulhuw
jmp
jo
aad
adc
dec
test
and
add
outsl
lea
ficompl
cli
pop
testb
push
in
xchg
iret
push
ss
mov
cmp
dec
setne
mov
popf
sbb
xor
test
stos
push
xchg
xchg
inc
aam
inc
insl
mov
jns
sub
xchg
into
popf
cmpsb
punpckhdq
out
adc
pop
data16
lods
stc
xchg
xchg
inc
mov
push
mov
scas
negl
push
sahf
jmp
mov
sbb
mov
out
in
pop
mov
mov
bound
popf
lods
jae
cwtl
pop
pop
add
outsl
jo
xor
push
sti
ficompl
subb
pop
imul
xchg
lgs
and
jno
xor
lret
adc
or
cli
dec
mov
push
js
adc
repnz
fisttpll
test
out
jnp
push
and
andl
enter
dec
jecxz
rep
add
frstpm(287
popf
addr16
ds
loopne
xor
ds
pushf
mov
pop
jae
push
xor
aad
push
pop
adc
and
fidivrs
movsl
pop
jbe
bound
ds
mov
cmpsb
ss
push
push
dec
stc
pop
xor
mov
testb
add
jne
lahf
cmp
jnp
and
jnp
test
test
cmp
inc
fwait
das
loop
jmp
ret
out
aas
iret
mov
cmc
jae
xchg
nop
mov
lods
shrl
maskmovq
testl
pop
les
dec
in
push
inc
aam
inc
mov
popf
call
push
pop
shl
pop
idivb
les
int3
lret
shl
mov
mov
mov
out
movups
fidivrs
fsubrs
fdiv
add
and
mov
movsb
leave
mov
test
in
inc
aam
ljmp
xchg
pushf
scas
pop
jnp
xchg
and
lret
cwtl
mov
mov
sbb
add
stos
call
call
mov
jns
aam
mov
gs
lret
dec
lcall
cmp
mov
pop
or
in
push
mov
and
pop
loopne
mov
in
aam
cmc
imul
or
mov
push
add
sahf
mov
mov
push
cmpsl
sbb
jmp
aaa
lcall
cltd
scas
push
movsb
js
sub
ss
jg
dec
push
insl
push
xor
xchg
sbb
ss
mov
mov
out
test
cs
insb
mov
or
nop
inc
xchg
mov
mov
pop
mov
nop
lcall
aaa
jns
mov
dec
sti
mov
clc
mov
or
push
daa
call
and
pop
xchg
inc
sahf
add
mov
sbb
cmp
dec
pusha
xlat
das
xorl
sbbl
pusha
adc
imul
xor
mov
mov
push
or
movl
adc
mov
cmp
in
mov
sub
mov
fisttpll
mov
mov
aaa
pusha
mov
cld
pop
pop
int
xchg
out
cmp
lods
fwait
push
daa
andl
ror
sub
mov
fmuls
push
les
cmp
dec
loop
arpl
xchg
pop
mov
push
pop
xor
repnz
push
mov
or
movsb
daa
idivl
cmpsb
shrl
mull
adc
adc
xchg
test
push
sbb
lods
push
xchg
fnstsw
mov
push
push
mov
pop
adc
cmpsb
rcrb
in
leave
cmp
mov
mov
lahf
movsb
in
dec
cmpsl
sbb
mov
jno
in
in
in
inc
add
outsb
jae
vfrczss
pop
icebp
xor
in
daa
das
popa
bound
test
cmp
sbb
push
fnstsw
test
sbb
jb
pusha
imul
sub
divb
leave
dec
fwait
dec
sub
ljmp
cmp
lea
sub
inc
shr
adc
and
pop
push
or
jmp
aas
lret
nop
call
add
xchg
pop
push
xor
in
dec
shrb
fwait
pop
jp
sbbb
xor
idivl
pushf
icebp
mov
jb
pop
lods
lods
jmp
jle
lds
jecxz
inc
xchg
je
adc
lcall
imull
es
cmp
nop
and
out
xor
mov
push
stos
in
jne
sbb
adc
cmpsb
mov
fcomps
shll
jmp
repnz
repz
cmp
xchg
mov
push
test
sbb
or
fistpll
push
sub
sbb
dec
mov
or
sub
sbb
loope
jnp
lea
inc
fcomip
cmp
divb
test
leave
or
adcb
andl
cli
sar
push
or
adc
cmp
jecxz
ljmp
test
sub
mov
stos
sub
mov
mov
sub
fsubrl
add
add
int
cmp
das
push
icebp
frstor
cmpb
aad
and
mov
ret
and
fmuls
adc
cmp
and
mov
les
mov
nop
stos
mov
imul
lods
jge
into
sub
fstl
adc
sub
xchg
aas
jg
xchg
mov
sbb
pushf
jle
adc
xchg
mov
xor
fucomip
add
and
inc
outsb
sbb
mov
add
idivl
pop
sbb
push
imul
adc
or
test
jnp
sbb
jle
fcomip
scas
mov
cmc
loop
les
xor
nop
mov
pop
push
dec
mov
nop
mov
xchg
and
or
shlb
sahf
sbb
cmpw
inc
gs
cmpsl
jne
mov
xor
lods
fistps
mov
inc
lds
or
inc
mov
stos
adc
xchg
imull
xchg
and
jp
xchg
inc
add
scas
out
pusha
popf
nop
enter
and
mov
cmc
mov
cmpsl
ret
leave
test
inc
cmp
nop
dec
adc
mov
push
xchg
test
rorl
pop
xor
jno
sub
aad
or
lcall
sbb
pop
testb
sub
or
pop
xchg
jp
call
aam
insl
jp
inc
and
add
rorl
mov
popf
push
iret
sub
mov
das
lahf
xlat
or
mov
and
pop
adc
fwait
inc
out
mov
xor
fs
out
xor
test
test
in
xchg
and
cmp
das
mov
adc
adc
neg
es
jne
mov
mov
xchg
mov
and
je
add
dec
hlt
pop
lods
push
mov
out
pop
fnstsw
sbb
xor
jg
hlt
sbb
outsb
loopne
pop
mov
jge
push
int
cmp
lds
mov
jge
outsl
adc
bound
or
outsb
xchg
mov
mov
mov
nop
mov
nop
popa
aaa
add
rcrb
int
xchg
inc
inc
lds
aaa
mov
js
dec
dec
jbe
mov
idivl
cwtl
sub
in
cld
mov
push
xchg
push
push
sarl
or
ljmp
jno
scas
rclb
pop
mov
imul
loop
mov
cltd
add
lahf
sbb
mov
mov
mov
in
xchg
scas
jecxz
jmp
adc
enter
in
sub
push
dec
leave
outsb
mov
dec
out
lahf
jmp
adc
arpl
and
sti
stos
hlt
jbe
jle
mov
or
pop
aas
mov
sbb
lret
loop
movsb
nop
mov
test
or
andb
roll
add
sbb
sbb
xor
jo
in
int
out
aad
inc
hlt
or
inc
popf
inc
pop
shll
popa
mov
outsl
stos
adc
scas
jecxz
loopne
pop
inc
subb
jnp
movsb
pop
jnp
and
cld
push
das
xor
shlb
push
loope
arpl
inc
mov
icebp
jae
adc
mov
xchg
call
sbbl
jns
cs
jl
inc
mov
mov
inc
push
mov
adc
pop
mov
out
out
push
adc
stc
mov
in
push
outsb
xor
mov
sbb
inc
adc
inc
pop
pop
cmc
jp
popa
jbe
inc
sbb
scas
imul
iret
jnp
leave
cmp
cmp
pop
mov
cwtl
cli
mov
or
push
sub
loop
add
and
hlt
lods
mov
jmp
push
cmpsb
mov
pop
xlat
daa
mov
sub
cmp
pop
mov
arpl
pop
enter
mov
xchg
inc
rcll
and
sub
call
dec
lahf
loopew
ljmp
cmp
adc
repnz
pop
add
adc
push
std
xchg
fidivs
xchg
movsb
lret
adc
or
and
fbld
enter
fstpt
or
inc
loopne
ret
gs
sub
sub
aad
sbb
nop
adc
push
jge
push
cmp
jo
das
xor
lcall
mov
adc
dec
add
sbb
call
xchg
dec
inc
sub
ljmp
push
in
push
adc
mov
adc
xchg
mov
js
arpl
mov
test
cmp
xchg
pop
insl
rorl
dec
or
test
out
xchg
out
push
aaa
fs
repnz
mov
xor
bound
out
insl
int
push
pop
add
dec
cmp
adc
or
add
enter
sarb
out
mov
adc
mov
adc
xor
shr
push
cltd
fs
sbb
aas
dec
xor
cmp
pop
out
cmp
mov
shrl
inc
lret
xor
pop
jbe
push
into
mov
sbb
call
push
aas
rorl
add
mov
dec
out
xchg
sarl
pop
pop
push
xor
dec
dec
les
test
popa
jge
and
xchg
in
inc
or
push
popa
fbstp
fs
insb
repnz
adc
mov
rcll
scas
inc
or
aas
push
jo
lock
adc
int3
insb
test
push
ficoml
jl
movb
lret
pusha
cmpsl
fwait
jns
sub
cmp
mov
pop
mov
dec
push
xchg
or
xor
call
inc
loope
jg
aas
in
fbstp
xor
mov
sub
xchg
jae
dec
insl
popf
leave
out
fs
push
xchg
xchg
hlt
or
mov
or
sbb
xchg
sbb
adc
outsb
xor
insb
add
inc
push
roll
into
imulb
ret
jle
mov
daa
cmp
pop
mov
divb
out
bound
dec
jns
movb
or
out
add
lret
imul
subb
andl
sub
mov
xchg
dec
call
fdivrp
cmp
sahf
loope
sahf
mov
test
mov
xchg
test
xchg
fwait
shll
mov
push
and
popf
pop
pop
fstpt
fstps
divb
fldcw
fnstsw
mov
mov
data16
stos
jmp
scas
adc
enter
shl
xchg
mov
jo
dec
pop
cmp
rolb
aas
in
xor
mov
test
add
pushf
flds
ss
pushf
add
xor
test
sbb
fidivrs
ret
xchg
mov
push
sub
lret
dec
sub
fwait
scas
mov
push
or
cld
cwtl
pop
add
adc
push
push
push
sub
add
std
pusha
xchg
push
mov
and
pop
lea
fcompl
loope
mov
lret
inc
xchg
aas
cltd
sub
xlat
dec
fadds
dec
out
jb
int3
popa
dec
adc
sub
test
in
and
in
xor
dec
adc
pop
cld
jno
jns
stos
mov
add
or
sbb
fldl
jno
cmp
jno
adc
test
xchg
dec
shrb
bound
mov
or
sbb
push
outsb
mov
fs
cmp
push
out
xchg
in
cltd
int
xchg
jne
mov
push
filds
push
imul
jmp
loopne
inc
in
jo
out
leave
pushf
xor
add
cmp
pushf
rolb
or
mov
inc
maxps
pop
mov
addr16
dec
in
incb
sahf
enter
insl
mov
mov
push
or
mov
push
sbb
into
adc
in
mov
xor
or
and
pop
lret
int
xchg
mov
fmuls
int3
stos
lret
or
fisttpll
bnd
fists
aas
cld
lods
scas
xor
mov
and
imull
mov
dec
jecxz
test
adc
add
in
sub
int3
hlt
mov
pop
or
lret
repz
mov
fcoms
outsb
jb
int
sbb
dec
cmpsb
andb
jge
jge
icebp
rorb
adc
loop
imul
pop
mov
mov
dec
and
arpl
mov
adc
mov
rolb
xchg
ss
sti
lret
sbb
mov
ret
rcll
je
rcl
xchg
dec
jle
inc
mov
ja
ficomps
inc
lods
lods
inc
cmpsb
lahf
adc
ss
dec
pop
scas
ss
iret
loop
sti
mov
aad
and
and
out
xor
cmp
push
sub
cmc
add
cmpsl
fcompl
imul
scas
pop
xchg
mov
adc
inc
cmp
pop
inc
rcr
pop
xchg
cmpsl
inc
mov
mov
xchg
call
call
pop
push
in
mov
adc
cwtl
into
mov
xor
aam
inc
push
mov
out
adcb
or
inc
sub
loope
into
fs
xchg
out
sbb
pop
mov
pop
mov
sub
adc
cmp
fimull
xchg
or
imul
adc
push
popa
inc
test
lock
jb
test
aam
rcll
jecxz
imul
mov
sub
ljmp
out
xor
subb
xor
mov
test
shll
leave
xlat
call
adc
stos
out
ds
xor
and
sbb
jo
inc
and
mov
xchg
loopne
jecxz
shrl
out
pop
jg
sbb
xchg
cmp
std
cld
jle
cmp
lea
xchg
xchg
testb
and
jae
imul
pop
lea
sarl
movsl
js,pn
enter
leave
mov
cmp
dec
mov
lret
lahf
and
insb
mov
cmp
push
and
push
test
sbb
lods
mov
mov
aaa
int
inc
lea
xorl
dec
mov
jl
mov
xor
ret
loope
in
faddp
pushf
out
pop
int3
lret
or
dec
and
sahf
in
cmp
mov
fwait
and
and
icebp
add
sbbb
js
mov
out
nop
mov
lock
js
sbb
sub
addb
push
cld
dec
aad
fwait
and
sbb
sbb
ds
cmp
jp
xor
dec
jno
decl
sbb
xor
ja
in
popf
jne
jmp
or
or
mov
iret
push
in
fstl
and
xor
scas
push
pop
ds
iret
int
push
lds
push
push
ja
iret
push
cwtl
shrl
and
adc
sub
sbb
adc
movsb
loop
movsl
mov
fadd
js
mov
scas
sti
in
mov
cmp
test
call
mov
fisttps
cltd
mov
mov
rclb
add
xor
cmp
aaa
inc
mov
icebp
out
xor
push
mov
xchg
ret
icebp
jo
sbb
fsubs
jns
mov
fildll
je
and
pop
nop
inc
mov
pushf
mov
daa
aas
pop
pop
orl
mov
mov
fwait
cs
cs
pusha
lcall
xor
xchg
incb
imul
mov
lock
flds
jo
pop
or
lret
ficoms
cmp
jo
mov
das
test
inc
xlat
sarl
pushf
test
lods
insb
jnp
xchg
xchg
cmp
stos
pop
ljmp
mov
ja
aaa
icebp
and
jo
leave
in
outsb
repnz
gs
frstpm(287
sub
gs
outsl
dec
inc
out
nop
inc
inc
mov
or
dec
imul
sahf
in
dec
jl
sub
mov
repnz
popf
xchg
dec
ljmp
push
mov
repz
movsb
xor
sub
adc
dec
mov
aad
mov
pop
push
loop
mov
mov
xchg
rol
je
jae
adc
mov
push
cmp
out
mov
mov
je
inc
std
mov
adc
les
stc
nop
push
popa
push
rcll
sbb
push
outsl
add
cmpsl
sbb
popa
pusha
or
xlat
mov
jmp
xor
jl
cmpsl
sahf
orl
je
popl
cltd
fcoms
push
mov
sub
jg
pop
sbb
mov
mov
mov
shll
dec
dec
scas
adc
sbb
pushf
lock
in
out
dec
jae
or
pusha
jecxz
mov
into
add
loope
ud0
int
sbb
incb
mov
pop
stos
push
movsb
cmpl
inc
call
into
arpl
cltd
ret
imul
xchg
fneni(8087
jb
mov
ficoms
cmp
sarl
xor
cld
adc
dec
dec
or
movl
int
mov
xchg
scas
adc
in
pop
stc
fadd
xor
add
xchg
adc
rol
rol
push
loopne
outsl
sti
and
cmp
add
push
push
inc
cmpsb
jge
icebp
add
cs
scas
inc
scas
sahf
jno
xchg
leave
mov
or
inc
jae
sbb
imul
dec
sbb
rorb
in
mov
lcall
sub
test
into
adc
sub
rol
lea
fs
add
es
or
fisttpll
out
sub
pop
cmc
sub
int3
notb
fwait
or
flds
add
addr16
stos
in
pop
mov
mov
xlat
adc
lret
mov
lcall
divl
push
and
iret
push
inc
mov
and
add
test
or
push
mov
push
push
sti
dec
fwait
mul
stos
xor
lea
xchg
cs
aam
or
aam
gs
out
mov
and
lods
lcall
out
jmp
or
adc
mov
add
repz
xor
mov
lds
je
push
push
mov
inc
cwtl
out
pop
inc
jno
add
xchg
push
and
lahf
push
das
shl
mov
xchg
and
push
inc
cmc
jp
loop
pop
dec
dec
call
inc
cmp
add
lods
mov
and
mov
les
jo
dec
repz
sbbb
aas
int3
fadds
stc
xchg
dec
sbb
adc
lcall
lods
mov
adc
inc
ds
adc
out
adc
shrw
and
and
movsl
lods
mov
repnz
inc
out
jo
cmpb
pop
int3
pop
gs
jge
aas
outsl
clc
cltd
pop
lods
adc
mov
push
fs
rcll
mov
adc
sub
lcall
cmc
pop
xchg
sbb
xchg
repz
mov
inc
hlt
push
add
push
add
sub
aam
arpl
aas
outsl
mov
outsl
push
cld
pop
pop
jnp
adc
mov
outsb
clc
sbb
xor
sbb
test
adc
data16
cmp
iret
pop
xchg
jl
or
mov
repnz
jne
int3
mov
xchg
loopne
scas
negb
roll
or
stc
pushf
xchg
test
es
dec
sbb
push
stc
out
inc
das
ret
lds
jge
and
stos
adc
inc
push
ret
loop
lds
pop
out
mov
out
sarl
cmc
cmp
mov
push
xchg
cmp
aad
testl
dec
push
mov
test
popf
into
add
call
stos
movl
mov
clc
jmp
push
inc
xor
ds
loopw
into
lret
xchg
decb
xchg
dec
or
push
cmp
and
stos
dec
out
pop
test
or
mov
es
aam
pop
sahf
sbb
mov
dec
outsb
cmp
pop
add
nop
pslld
lds
cmp
push
pop
imul
inc
lds
ret
jp
sub
jnp
push
sub
cmp
shr
pop
inc
pop
dec
adc
pusha
mov
sbb
push
scas
pushf
lods
and
jae
or
arpl
rorl
mov
dec
sti
jmp
stos
mull
or
in
push
lretw
push
xor
lcall
lods
cmpsl
das
jbe
fnstenv
sarl
ss
aam
lret
popa
mov
adc
cmp
es
or
adc
inc
int3
gs
sub
mov
mov
int3
imul
insb
inc
mov
cmpsb
jo
adc
sub
xchg
lock
add
mov
in
mov
inc
jae
call
stos
xor
or
cmpsb
and
je
sar
sub
mov
mov
xor
arpl
test
pop
test
push
add
cmp
sbb
mov
sub
shlb
lret
mov
cmc
jne
mov
sti
cmc
orb
clc
sub
dec
xchg
insb
repnz
dec
dec
or
cmp
and
test
dec
inc
ss
sub
jae
xchg
mov
xchg
aas
xchg
rcl
push
push
sub
add
mov
mov
fimull
mov
mov
stos
mov
test
mov
add
mov
and
jge
jle
pop
andl
lret
sub
dec
daa
fsts
jl
ret
sbb
xor
mul
jae
and
stos
dec
pop
push
fld1
lahf
jmp
loopne
jg
les
insl
iretw
xchg
lds
mov
xchg
fnstcw
in
cli
in
mov
test
cltd
xchg
add
pop
insl
cmp
sbb
cltd
rcll
pop
popf
aam
setne
cmp
or
pusha
fptan
jne
push
pusha
scas
sub
push
pop
and
jge
ss
push
jae
pop
mov
xchg
xchg
mov
fwait
xorb
arpl
xlat
pusha
fstpt
push
jp
popa
fsubrs
mov
add
or
inc
add
sub
.byte
.byte
inc
