add
or
loopne
add
add
add
add
add
rolb
add
mov
add
loopne
add
push
push
add
inc
or
orb
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
mov
add
mov
add
fadds
add
add
add
add
add
add
add
add
add
mov
rclb
add
add
add
add
add
add
add
add
add
add
enter
adc
push
add
add
add
add
add
add
add
add
add
lock
add
rclb
add
add
in
add
add
add
add
add
add
add
xor
add
pop
add
addb
add
addb
addb
add
add
add
add
add
add
add
add
add
add
dec
add
add
adc
xor
add
in
add
add
add
add
add
add
add
jo
add
jl
adc
xor
add
in
add
add
add
add
add
add
add
cwtl
add
add
add
add
add
add
add
add
add
add
add
rolb
add
aad
add
add
add
add
add
push
add
or
sbbb
addb
add
addb
orb
add
test
add
rolb
add
clc
add
xorb
and
add
dec
add
xorb
add
add
cwtl
add
cmpb
add
add
cmpb
add
add
add
add
adc
adcb
add
cmp
adcb
add
pusha
add
adcb
add
add
add
add
add
add
add
add
add
add
jo
add
cwtl
adc
insb
add
add
add
add
add
add
add
add
add
cwtl
add
add
adc
dec
add
add
add
add
add
add
add
add
add
rolb
add
add
add
add
add
add
add
add
add
add
call
fistl
add
add
in
add
add
add
add
add
add
add
adc
add
call
add
add
add
add
add
add
add
add
add
cmp
add
inc
ficoms
add
add
in
add
add
add
add
add
add
add
pusha
add
add
add
add
add
add
add
add
add
add
add
mov
add
lock
add
add
in
add
add
add
add
add
add
add
mov
add
dec
loop
add
add
in
add
add
add
add
add
add
add
fadds
add
mov
add
add
add
add
add
add
add
add
add
add
add
in
add
add
in
add
add
add
add
add
add
add
sub
add
adc
in
add
in
add
add
add
add
add
add
add
push
add
add
adc
mov
add
add
add
add
add
add
add
js
add
in
in
adc
insb
add
add
add
add
add
add
add
add
add
mov
out
adc
inc
add
add
add
add
add
add
push
add
add
add
add
addb
add
sbb
add
inc
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
or
adc
call
add
add
add
add
add
add
add
xor
adc
sub
add
in
add
add
add
add
add
add
add
pop
add
adc
test
add
in
add
add
add
add
add
add
add
addb
add
add
in
add
add
add
add
add
add
add
test
add
mov
adc
test
add
in
add
add
add
add
add
add
add
rolb
adc
push
add
add
add
add
add
jg
add
add
add
sub
add
add
add
add
add
add
add
add
add
sbb
add
pushf
out
adc
or
add
in
add
add
add
add
add
add
add
inc
push
add
test
adc
test
add
in
add
add
add
add
or
xchg
add
add
add
add
push
add
add
add
sub
add
push
pop
add
js
add
mov
add
add
pop
add
lock
add
sbb
add
add
add
add
add
add
add
add
add
enter
sub
adc
cwtl
add
add
add
add
add
add
add
add
add
lock
add
repnz
jp
add
in
add
add
add
add
add
add
add
sbb
add
inc
hlt
adc
cli
add
add
add
add
add
add
add
add
add
inc
pop
add
cmp
adc
ljmp
add
add
add
add
add
add
push
notb
add
add
add
add
add
add
add
add
nop
pop
add
fdivr
adc
mov
add
in
add
add
add
add
add
add
add
mov
call
add
add
add
add
add
add
add
add
add
add
loopne
add
pop
add
add
add
add
add
add
add
add
add
or
add
or
adc
loop
add
in
add
add
add
add
add
add
add
xor
add
lock
add
add
add
add
add
or
add
add
test
add
rorb
add
clc
or
adcb
add
and
add
dec
or
adcb
add
jo
add
cwtl
or
sbbb
add
rorb
sbbb
add
call
sldt
adc
add
cmp
add
add
add
add
add
add
add
add
add
rorb
add
add
add
in
add
add
add
add
add
add
add
call
add
add
add
in
add
add
add
add
add
add
add
adc
add
clc
add
add
add
in
add
add
add
add
add
add
add
cmp
add
jo
adc
les
add
in
add
add
add
add
add
add
add
pusha
or
add
adc
sub
add
in
add
add
add
add
add
add
add
mov
add
pusha
pop
adc
inc
add
add
add
add
add
add
add
add
add
mov
add
test
adc
inc
add
add
add
add
add
add
add
add
add
fmuls
add
call
add
add
add
add
add
add
add
add
add
add
add
dec
or
add
add
add
add
add
add
add
add
add
add
sub
add
and
adc
adc
add
in
add
add
add
add
add
add
add
push
or
add
or
add
add
in
add
add
add
add
add
or
add
add
add
jns
add
or
addb
add
add
add
add
add
add
add
add
add
mov
or
add
add
in
add
add
add
add
add
add
add
enter
jo
adc
adc
add
in
add
add
add
add
add
add
add
lock
add
add
in
add
add
add
add
add
and
add
jg
add
push
or
addb
add
add
add
add
add
add
add
add
add
inc
or
add
adc
add
add
add
add
add
add
add
add
add
push
or
add
add
in
add
add
add
add
add
add
add
nop
or
add
add
in
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
rorb
add
sbbb
and
add
in
add
add
add
or
push
add
pop
add
add
inc
add
add
add
dec
add
pop
add
add
inc
add
pop
add
push
add
push
add
dec
add
inc
add
inc
add
add
or
inc
add
inc
add
push
add
add
dec
add
dec
add
add
add
add
add
and
add
add
add
test
add
add
adc
add
add
add
push
add
and
add
add
add
add
adc
add
add
add
add
push
add
add
add
add
push
add
pop
add
inc
add
push
add
dec
add
pop
add
dec
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
addb
add
add
je
jb
imul
inc
add
insb
add
dec
add
data16
add
pop
add
add
add
add
add
add
xor
xor
inc
add
add
add
add
add
add
imul
push
add
jb
jae
imul
add
add
xor
add
add
add
add
add
add
add
add
add
insb
add
inc
add
jae
arpl
jb
imul
imul
add
add
rcll
pop
jb
pop
add
add
sub
add
add
outsl
add
add
je
dec
add
insl
add
add
add
rcll
pop
jb
pop
add
add
xor
or
add
push
add
outsl
add
add
je
push
add
jb
jae
imul
add
xor
add
add
add
add
add
add
add
add
add
insl
add
popa
add
jns
dec
add
insl
add
add
add
rcll
pop
jb
pop
add
add
xor
add
add
add
insb
add
outsl
add
jns
jb
imul
je
add
rcll
pop
jb
pop
add
add
and
add
add
insl
add
add
je
jae
add
rcll
pop
jb
pop
add
add
inc
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
add
mov
sub
add
and
add
inc
add
add
add
add
add
add
add
add
incl
addb
add
addb
add
addb
addb
addb
add
shl
mov
mov
mov
add
mov
add
pusha
inc
add
and
inc
inc
pusha
add
addb
mov
and
shl
add
loopne
add
add
add
inc
mov
add
rolb
and
andb
add
pusha
pusha
add
loopne
add
addb
and
add
and
add
add
jmp
loopne
jmp
inc
add
add
and
inc
add
add
add
pusha
add
inc
addb
pusha
rolb
add
pusha
mov
loopne
inc
mov
incl
push
sbb
add
call
cmp
sub
inc
add
fdivr
add
test
add
cmp
mov
sub
sub
dec
add
cmp
mov
loopne
add
clc
incl
and
push
add
fsubrs
inc
dec
addb
mov
call
add
sbb
add
sub
sub
push
add
inc
js
pop
pop
js
push
pop
mov
nop
test
add
mov
add
mov
lock
enter
sar
add
call
incl
xor
push
add
xor
sub
pusha
add
push
add
test
jmp
test
cwtl
test
add
shr
rcl
add
lock
ljmp
sbb
pushl
and
sub
and
xor
xor
cmp
xor
sbb
cmp
dec
cmp
add
and
sub
pop
add
enter
cmp
inc
dec
pusha
add
push
add
mov
pop
push
cwtl
add
cwtl
add
mov
add
mov
add
test
add
mov
loopne
mov
lock
enter
sar
add
incl
sbb
adc
and
sbb
sbb
sub
adc
xor
inc
cmp
add
mov
cmp
inc
cmp
add
cmp
and
dec
add
xor
dec
inc
dec
add
dec
add
enter
xor
push
adcb
mov
xor
pop
add
inc
pop
add
pop
add
cmp
cmp
add
enter
cmp
xor
add
push
add
loopne
add
cmp
cmp
add
push
js
push
pop
addb
pop
addb
pusha
addb
js
add
fmuls
add
nop
add
cwtl
add
cwtl
add
test
jo
test
js
test
js
mov
call
mov
add
enter
enter
enter
rolb
test
rolb
cwtl
test
add
rcr
test
clc
add
fdivr
add
or
add
adc
add
adc
add
sbb
add
nop
and
clc
test
add
or
add
and
add
and
add
sub
add
sub
add
sub
add
xor
add
cwtl
sub
sub
xor
and
cmp
pop
inc
cmp
push
cmp
push
dec
inc
add
inc
add
inc
add
cwtl
inc
add
xor
inc
cmp
push
dec
dec
add
dec
add
jo
add
mov
rclb
add
push
add
push
add
push
add
push
add
mov
push
add
enter
pop
pop
add
pop
add
mov
mov
mov
pop
add
test
add
rcrb
add
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
add
cmp
scas
test
aam
mov
pop
pop
dec
dec
dec
pop
push
mov
scas
scas
scas
scas
scas
scas
cmp
cmp
imul
cmp
pop
push
push
inc
inc
pop
pop
push
mov
scas
scas
dec
scas
scas
sti
cld
cmp
push
push
mov
sti
sahf
popf
xor
sbbb
inc
inc
inc
inc
inc
mov
dec
pop
push
dec
dec
dec
dec
mov
inc
dec
std
mov
dec
push
push
dec
dec
inc
inc
inc
inc
pop
pop
mov
inc
lret
dec
mov
lret
jmp
pop
dec
push
push
dec
dec
inc
inc
inc
inc
inc
pop
mov
dec
mov
mov
mov
push
pusha
pusha
dec
dec
inc
inc
inc
inc
lret
inc
pop
dec
mov
je
cmp
in
ljmp
inc
inc
cmp
inc
inc
inc
inc
inc
inc
mov
je
cmp
test
arpl
inc
inc
cmp
dec
inc
inc
inc
dec
inc
inc
push
test
aas
aas
cmp
lret
loop
xor
cmp
pusha
inc
cmp
inc
inc
inc
inc
dec
pop
xchg
inc
adc
cmp
xor
adc
xchg
xchg
xchg
cmp
adc
andb
cmp
lods
cmc
aas
inc
cmp
cmp
dec
test
cmp
dec
inc
inc
sub
adcb
cmp
lahf
in
cmp
cmp
cmp
aas
popf
testl
inc
inc
inc
and
jne
clc
adc
cmp
aas
xor
push
ja
mov
inc
dec
pop
leave
mov
jo
jo
out
inc
xor
cmp
lahf
in
xor
inc
xor
je
jne
cmp
pop
xchg
jne
xor
cmp
jp
cmp
inc
inc
inc
cmp
jo
push
loope
mov
push
push
push
push
into
aas
inc
aas
xor
cmp
xor
push
inc
dec
xor
divl
mov
adc
inc
dec
fs
xor
cmp
dec
fs
clc
je
into
daa
pusha
pusha
push
push
pop
xchg
inc
inc
aas
cmp
imul
dec
into
jo
inc
test
pusha
push
pop
pop
pop
pop
dec
mov
cmp
imul
inc
xor
mov
push
popa
inc
inc
inc
inc
inc
mov
inc
xor
cmp
rol
adc
fs
inc
dec
push
push
popa
popl
cmp
inc
lret
sub
cmp
imul
dec
push
adc
dec
push
xchg
xchg
cmp
dec
inc
inc
dec
adcb
cmp
imul
dec
inc
xor
xchg
xchg
xchg
xchg
bound
inc
inc
xchg
cmp
mov
mov
jg
inc
jg
fs
inc
xchg
xchg
xchg
xchg
bound
inc
dec
push
adc
cmp
jp
dec
mov
push
push
bound
pop
xchg
push
adc
data16
cmp
cmovle
test
bound
inc
inc
dec
pop
dec
push
adc
cmp
jno
jno
testl
push
dec
mov
cmp
test
adc
adc
inc
inc
inc
jno
test
test
jg
test
pop
test
fs
push
cmp
inc
inc
inc
inc
fistl
xorps
ret
cmovae
sbbb
push
test
adc
cmp
inc
inc
inc
stc
je
push
inc
inc
stos
push
subb
arpl
aas
adc
adc
adc
inc
inc
inc
inc
rorb
push
test
dec
inc
inc
aas
xor
cmp
adc
arpl
cmp
add
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
add
rolb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
incl
aam
lahf
add
sbb
fmuls
add
add
je
jl
pushf
add
pop
add
adc
add
adc
sbb
add
adc
add
cmp
cmp
add
cmp
in
fadd
add
js
add
mov
or
mov
dec
pusha
movsb
add
add
add
push
add
movsb
add
add
and
add
push
add
add
insb
add
inc
add
mov
add
mov
add
xchg
and
push
pop
xchg
add
add
add
je
pop
jo
add
cld
add
mov
add
insb
add
js
pop
sub
add
mov
cld
mov
push
add
inc
mov
push
pop
xchg
add
addb
insb
mov
add
hlt
cld
add
lock
pop
nop
add
pusha
add
add
and
shlb
add
cmp
cmp
je
xor
pop
add
cld
cld
add
in
cld
add
loopne
add
mov
mov
xor
pusha
add
push
add
mov
add
loopne
add
jo
sub
insb
add
sub
add
add
call
add
mov
xor
add
add
les
xor
pop
add
xor
sbb
inc
add
inc
pusha
add
add
cld
add
mov
mov
add
add
and
add
enter
cwtl
pop
add
inc
add
push
add
and
sub
sub
sbb
add
mov
mov
cld
add
test
push
pop
je
cmp
jo
sbb
dec
add
adc
cld
rolb
jl
add
xor
and
dec
add
sbb
and
sbb
dec
inc
inc
add
sar
add
fs
add
add
adc
sub
cmp
and
dec
add
or
cld
mov
inc
add
xor
and
add
xor
dec
inc
dec
add
lock
add
mov
cwtl
add
and
cmp
sub
pop
pop
push
add
and
add
sub
sub
push
add
hlt
cld
add
in
add
enter
push
add
insb
add
add
pop
add
test
add
xor
adc
add
insb
add
fdivr
add
hlt
cld
add
fdiv
add
clc
add
xchg
mov
push
cmp
add
mov
cmp
push
dec
dec
add
add
in
add
in
lods
mov
aam
pushf
movsb
rolb
fs
add
add
les
add
inc
add
pop
add
mov
add
faddl
mov
movsb
enter
rolb
mov
fsubrs
mov
push
add
add
mov
test
enter
js
jo
dec
add
or
add
mov
add
aam
lods
mov
add
rcrb
cld
lock
enter
orb
mov
add
pop
sub
js
adc
dec
sbb
jo
inc
add
add
cmp
cwtl
pop
sbb
pushf
pusha
adc
nop
pop
and
mov
add
lock
add
sbb
fmuls
add
mov
bound
add
pop
add
adc
add
or
add
push
or
sub
sbb
add
jmp
out
out
out
out
lock
repnz
fcomp
fcmovu
fdivrl
sub
jecxz
in
enter
int3
int
iret
rcl
rcl
aam
xlat
mov
mov
ret
lods
lods
scas
scas
inc
mov
mov
dec
pop
mov
mov
mov
movsb
movsl
dec
cmpsl
test
stos
stos
pusha
nop
xchg
xchg
xchg
je
xchg
xchg
cwtl
cltd
lcall
adcl
mov
jb
je
jbe
js
jp
jl
outsl
push
popa
bound
push
addr16
imul
pusha
push
push
push
push
push
pop
pop
pop
dec
dec
pop
pop
pop
pop
pop
pusha
inc
inc
inc
inc
inc
dec
dec
dec
dec
dec
mov
dec
push
push
pusha
xor
cmp
cmp
ds
inc
inc
inc
and
sub
sub
cmp
xor
xor
adc
push
pop
sbb
sbb
sbb
push
pop
and
and
adc
clc
stc
cli
or
cld
std
decl
adc
adc
add
add
add
add
add
add
add
add
sbb
add
add
orb
add
arpl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
arpl
add
fildll
arpl
sub
sbb
sbb
or
and
imul
mov
xchg
mov
mov
into
mov
not
jnp
fildll
fildll
fildll
fildll
fildll
fildll
fildll
stos
pop
arpl
add
add
arpl
add
lret
pushf
fildll
stos
arpl
sbb
sbb
cmp
adc
pop
mov
pushf
mov
pushf
mov
pushf
scas
pushf
stos
pushf
cmpsb
into
xchg
mov
pushf
stos
mov
lods
out
sarl
fildll
fildll
fildll
fildll
fildll
lcall
add
add
out
iret
jnp
arpl
inc
inc
cmp
sbb
xor
and
pop
insl
pushf
mov
movsl
mov
movsl
mov
movsl
mov
movsl
mov
movsl
mov
movsl
scas
movsl
scas
into
pushf
cmpsb
into
xchg
mov
movsl
scas
into
into
ret
movsl
fldt
fldt
fldt
fldt
mov
jns
arpl
add
add
call
imul
cmp
lods
mov
sub
push
pop
test
movsl
mov
lods
mov
movsl
mov
movsl
mov
movsl
mov
pushf
stos
movsl
scas
into
pushf
stos
into
pushf
cmpsb
pushf
cmpsb
into
movsl
mov
into
ret
mov
mov
push
cmp
add
add
test
jnp
dec
inc
xor
out
arpl
dec
pop
imul
pushf
scas
out
mov
lods
mov
lods
mov
lods
mov
movsl
scas
into
movsl
scas
into
movsl
mov
lods
mov
out
lret
jae
xlat
arpl
arpl
add
add
stos
pop
xchg
jns
dec
inc
cmp
inc
test
sbb
cmp
pushf
movsl
mov
lods
imull
pushl
divl
out
mov
out
mov
out
mov
out
mov
movsl
mov
lods
mov
test
jae
pop
xor
sub
add
add
mov
dec
mov
xor
xor
xor
pop
sbb
xor
mov
inc
mov
out
mov
out
shl
mov
divl
movsl
stos
pushf
scas
into
mov
jnp
mov
and
arpl
add
add
arpl
and
xor
and
sub
push
sbb
xor
jecxz
into
out
call
idiv
fdivrp
dec
jmp
mov
out
mov
out
mov
idivl
out
mov
xchg
cmpsb
xchg
sahf
mov
jns
imul
and
sub
arpl
add
add
ret
mov
push
cmp
inc
sbb
xor
and
sbb
cmp
sbb
jnp
mov
lret
mov
dec
jmp
idiv
fdivrp
call
idiv
mov
pushl
divl
fidivrs
mov
mov
subb
xchg
and
inc
xor
arpl
add
add
rcll
xor
inc
pop
adc
sbb
adc
sbb
pop
test
mov
dec
repz
idiv
repz
jecxz
mov
out
mov
out
movsl
mov
pop
pop
imul
inc
inc
inc
jae
mov
lods
pop
insl
pushf
push
popa
mov
sub
cmp
and
arpl
add
lret
imul
dec
and
sub
adc
sbb
adc
sbb
cmp
jae
jge
test
out
into
out
call
idiv
into
out
inc
mov
imull
out
mov
arpl
pop
inc
cmp
dec
mov
dec
pop
mov
and
sub
arpl
add
add
lret
dec
xchg
dec
adc
and
adc
sbb
cmp
sbb
and
cmp
sub
cmp
push
pop
xchg
lcall
dec
jmp
out
mov
out
movsl
mov
mov
out
insl
imul
xor
sub
sub
cmp
jae
arpl
jae
dec
jnp
sbb
sbb
cmp
add
add
dec
into
mov
sbb
cmp
sbb
and
sbb
sbb
xor
sbb
dec
cmp
arpl
arpl
mov
mov
inc
out
mov
jmp
fisubrs
jnp
sbb
adc
adc
sbb
adc
adc
inc
dec
inc
dec
sub
arpl
and
xor
arpl
add
add
dec
xchg
cmp
sbb
sbb
cmp
sbb
and
inc
sbb
inc
adc
and
sub
cmp
xor
xor
jae
imul
pushl
ljmp
out
stos
fiadds
jnp
arpl
push
adc
cmp
cmp
xor
xor
sub
and
and
arpl
add
add
iret
pop
mov
sbb
and
and
and
adc
adc
adc
or
sbb
sbb
sbb
dec
inc
inc
pushf
scas
into
movsl
lret
pushl
jmp
out
jns
or
dec
inc
cmp
sbb
sbb
or
and
inc
sub
pop
and
and
cmp
add
add
shll
mov
sbb
sub
and
dec
and
sbb
sub
sub
xor
sbb
sbb
push
sub
and
inc
push
pushf
ret
ljmp
jmp
out
mov
sbb
sub
adc
sbb
and
and
xor
cmp
and
sub
and
arpl
add
add
fisttpl
cmp
and
xor
sub
sub
sbb
and
and
imul
sub
adc
or
arpl
movsl
iret
ljmp
ljmp
out
xchg
scas
fimuls
jae
movsl
jae
movsl
jae
lods
imul
dec
jnp
and
sub
inc
and
arpl
add
add
jecxz
fistps
dec
xor
imul
dec
sub
pop
and
dec
or
adc
or
sbb
sub
cmp
mov
iret
pushl
pushl
jmp
fimuls
xchg
cmpsb
mov
cmp
and
inc
sub
sub
dec
arpl
add
add
jecxz
jmp
lods
movsl
mov
sub
cmp
and
push
xor
sub
pop
sbb
inc
cmp
jnp
into
movsl
iret
pushl
ljmp
inc
mov
mov
fiadds
imul
insl
test
imul
dec
and
cmp
xor
sub
arpl
add
add
out
jmp
mov
ret
mov
xor
cmp
sub
xor
imul
arpl
and
dec
push
test
movsl
shl
pushf
mov
into
out
dec
out
into
jecxz
mov
ficomps
jnp
xchg
pop
popa
test
xor
and
cmp
xor
push
arpl
add
add
jecxz
jmp
lods
test
inc
dec
test
xor
xor
cmp
and
xor
arpl
lods
mov
sti
call
repz
out
dec
out
mov
out
mov
out
mov
pop
imul
xor
arpl
add
add
fbld
fistl
test
inc
jae
xor
inc
inc
test
xor
and
dec
push
jae
ret
fdivrp
jmp
fdivrp
call
idiv
out
dec
out
xlat
mov
out
lods
mov
jnp
mov
pop
mov
and
inc
inc
arpl
imul
push
arpl
add
add
xlat
test
xlat
test
sarl
sbbb
test
test
xor
inc
dec
test
test
sub
push
mov
fdivrp
fdivrp
call
idiv
out
dec
out
mov
imull
ficoms
cmp
sub
dec
push
push
jae
inc
arpl
cmp
and
arpl
add
pop
inc
pop
inc
pop
mov
test
xchg
xor
imul
push
popa
movsl
xor
xor
arpl
mov
not
sti
call
idiv
idiv
into
out
inc
out
mov
mull
jnp
mov
cmp
xor
push
push
jnp
inc
arpl
inc
arpl
add
add
mov
pushl
xchg
cmp
jnp
popa
pushf
cmp
dec
push
mov
mov
pop
pushf
sub
arpl
mov
mov
xlat
dec
repz
repz
out
inc
out
mov
ljmp
fiadds
dec
pop
xchg
sub
push
dec
inc
imul
inc
inc
arpl
imul
arpl
add
scas
sbb
scas
and
scas
and
stos
and
arpl
movsl
push
pop
pushf
cmp
pop
insl
mov
jge
cmp
xor
dec
pop
xchg
jae
mov
jmp
jmp
out
mov
jmp
into
imul
inc
jnp
xor
push
push
jae
push
jnp
cmp
push
push
jnp
and
arpl
add
scas
sbb
scas
sbb
scas
sbb
scas
sbb
pushf
arpl
cmp
push
popa
pushf
jae
arpl
xor
arpl
inc
test
xchg
imul
ret
idivl
pushl
notl
push
popa
xchg
xor
sub
push
inc
dec
arpl
jnp
push
jae
inc
arpl
test
add
add
stos
sbb
stos
sbb
stos
sbb
stos
sbb
xchg
and
mov
mov
popa
pushf
dec
push
mov
jae
pop
popa
pushf
xor
imul
test
test
pushf
mov
movsl
call
push
popa
mov
cmp
and
dec
xor
push
push
push
jae
pop
jnp
inc
pop
push
push
jae
pop
test
add
add
stos
adc
stos
adc
stos
adc
stos
adc
stos
adc
imul
push
test
lods
jnp
jae
mov
cmp
xor
xor
inc
push
jnp
insl
xchg
arpl
pop
imul
and
cmp
dec
push
imul
pop
inc
inc
pop
push
push
jnp
pop
jnp
and
add
add
add
stos
adc
stos
adc
stos
adc
cmpsb
adc
mov
push
popa
pushf
arpl
arpl
dec
push
test
jnp
imul
push
test
xor
and
and
dec
and
inc
and
sbb
sbb
xor
adc
sbb
xor
sub
cmp
xor
sub
inc
dec
dec
arpl
jnp
and
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
mov
mov
jnp
adc
or
adc
inc
imul
inc
cmp
cmp
xchg
pop
and
div
jnp
mov
jnp
popa
dec
add
xor
dec
jae
mov
pushf
mov
pushf
mov
pushf
scas
lods
mov
pushf
jmp
jae
repz
stos
pop
test
jnp
into
into
mov
pop
inc
push
dec
pop
test
movsl
mov
movsl
mov
movsl
scas
pushf
cmpsb
into
xchg
mov
fldt
lcall
mov
push
dec
dec
push
pop
jae
mov
mov
divl
out
mov
pushf
scas
pushf
cmpsb
arpl
inc
adc
lods
mov
pop
dec
xor
adc
inc
dec
imul
dec
out
idiv
fcomi
mov
idivl
test
sub
push
and
out
mov
and
adc
sub
mov
idiv
into
out
mov
negl
imul
jns
sub
pop
push
and
mov
or
and
sbb
xor
dec
pushf
mov
mov
out
xchg
xchg
pushf
xor
sbb
xor
pop
pop
imul
dec
push
and
inc
inc
movsl
jge
or
xor
and
sbb
and
sbb
dec
inc
inc
lods
out
sar
pushf
mov
arpl
inc
cmp
sbb
or
sub
and
dec
push
and
dec
imul
and
push
and
xor
sub
sbb
jae
mov
xlat
jmp
lods
dec
pop
imul
cmp
sbb
push
and
out
mov
ret
mov
xor
sub
arpl
and
inc
arpl
movsl
iret
mov
jmp
mov
inc
arpl
and
push
and
fidivs
arpl
sub
sub
push
gs
lods
iret
out
mov
inc
jecxz
mov
test
xor
push
and
cmpsb
imul
test
cmp
xor
pop
mov
fsubp
call
out
inc
jecxz
mov
out
mov
inc
imul
mov
mov
cmp
push
pop
xchg
inc
dec
test
movsl
out
into
idiv
mov
notl
cmp
inc
dec
jae
sub
fimuls
ficoms
dec
pop
xchg
arpl
xor
pop
jno
lods
shl
mov
out
pop
insl
movsl
xor
arpl
imul
pop
sub
jns
mull
mov
dec
popa
movsl
imul
jno
sub
inc
dec
jnp
jns
dec
pop
jnp
and
xor
inc
dec
arpl
imul
test
jne
fimuls
push
pop
mov
jae
jns
dec
cmp
and
sbb
adc
add
sub
cmp
cmp
push
cmp
out
fcmovnb
push
or
add
add
add
mov
add
or
adc
add
add
add
add
add
add
adc
add
add
add
mov
mov
add
add
add
add
add
jns
add
add
sub
add
aas
adc
sarb
adc
jecxz
adc
hlt
aas
adc
add
add
inc
adc
add
add
pop
inc
adc
add
add
sub
adc
add
add
add
addb
add
cmp
adc
add
add
dec
inc
adc
add
add
pop
inc
adc
add
add
je
adc
add
add
xchg
add
add
add
add
add
add
add
add
add
add
xlat
inc
adc
sbb
adc
insb
cmp
add
sub
adc
mov
add
ss
adc
nop
cmp
add
inc
aas
adc
cwtl
cmp
add
dec
aas
adc
mov
add
add
adc
test
adc
pusha
aas
adc
mov
adc
insl
aas
adc
mov
add
add
adc
sarb
add
cmp
add
nop
aas
adc
sarb
add
popf
aas
adc
fdivrs
add
stos
aas
adc
loopne
adc
mov
adc
call
add
add
push
dec
inc
dec
xor
cs
dec
dec
add
push
inc
push
dec
xor
cs
dec
dec
add
dec
dec
dec
cs
dec
dec
add
xor
xor
inc
dec
dec
add
inc
push
xor
cs
dec
dec
add
dec
xor
cs
dec
dec
add
dec
push
push
dec
dec
dec
cs
push
push
add
push
inc
push
dec
xor
cs
dec
dec
add
inc
dec
dec
xor
cs
dec
dec
add
inc
xor
cs
dec
dec
add
inc
inc
push
push
xor
cs
dec
dec
add
dec
inc
push
dec
xor
cs
dec
dec
add
dec
dec
dec
inc
push
cs
dec
dec
add
dec
inc
dec
inc
xor
cs
dec
dec
add
add
fs
imul
add
add
je
jb
arpl
fs
jae
add
add
jb
jne
insb
push
jb
je
arpl
add
jb
jne
insb
inc
insb
insb
outsl
arpl
add
push
imul
jb
add
add
imul
jae
add
push
popa
jae
popa
outsb
addr16
jo
add
add
imul
dec
jne
add
add
je
insb
popa
jae
dec
popa
insl
gs
add
add
je
gs
dec
gs
imul
inc
outsl
arpl
outsb
je
jb
jo
jb
imul
push
gs
jb
popa
je
dec
gs
js
add
add
gs
insb
inc
js
arpl
gs
add
add
push
dec
inc
inc
jb
insl
push
je
imul
insl
popa
addr16
imul
je
outsl
jns
add
dec
outsb
je
jb
gs
popa
outsb
outsl
outsb
imul
push
jb
inc
add
add
je
popa
jbe
inc
imul
add
add
and
add
add
add
adc
add
add
add
mov
or
push
lods
lret
js
mov
imull
popa
arpl
add
pushl
popf
movsbl
mov
call
pushf
mov
push
pushf
popl
lea
jl
pushf
pushl
popl
push
pusha
lea
jmp
movl
mov
call
shr
sub
not
cwtl
mov
pusha
clc
pusha
jmp
lea
mov
stc
pushf
clc
cmc
bswap
pusha
clc
rol
push
movb
inc
jmp
mov
pushf
pushf
pushf
mov
mov
pushf
push
mov
lea
jge
pushf
mov
push
mov
pusha
call
mov
pushl
lea
jg
push
pushf
call
movl
mov
mov
mov
mov
lea
jmp
pushf
call
pusha
mov
mov
push
pushf
jmp
mov
call
pushf
pushl
pushf
popl
pushf
jmp
movw
pushf
popl
jmp
movl
push
push
push
lea
jmp
movl
mov
movb
movb
lea
jmp
pusha
pushf
mov
movw
pusha
movb
pushf
mov
mov
call
mov
jmp
mov
push
push
movl
pushf
pushl
ret
jmp
pushl
popl
movw
mov
push
lea
jmp
pushl
pushl
mov
pushl
pushf
pushf
popl
jmp
lea
movzbw
shl
xadd
clc
sub
neg
mov
jmp
jmp
mov
movb
pushf
mov
pushf
call
push
jmp
aaa
mov
bt
push
sub
pusha
add
pushl
pushf
popl
pushf
jmp
add
clc
rol
jmp
jmp
sub
cmc
call
mov
or
je
mov
add
cmpl
jne
cmpl
jne
cmpl
jne
jmp
mov
add
push
push
push
lea
add
add
push
call
pop
pop
pop
cmp
je
mov
add
add
xor
mov
cmp
jne
inc
jmp
mov
add
push
push
push
cmpb
jne
inc
mov
and
mov
movb
push
push
pushl
call
pop
pop
pop
pop
cmp
je
mov
mov
pushl
popl
add
inc
jmp
clc
ret
jmp
push
mov
mov
mov
cld
mov
movsb
call
jae
xor
call
jae
xor
call
jae
mov
call
adc
jae
jne
stos
jmp
call
dec
loop
mov
call
jmp
lods
shr
je
adc
mov
jmp
xchg
dec
shl
lods
mov
call
cmp
jae
cmp
jae
cmp
ja
inc
inc
push
mov
sub
rep
pop
jmp
add
jne
mov
inc
adc
ret
xor
inc
call
adc
call
jb
ret
pop
ret
jmp
cs
movsl
incl
mov
cmp
jne
sbb
adc
xor
or
ret
pop
mov
inc
mov
pusha
mov
sbb
popa
adc
or
push
push
and
rolb
or
push
jmp
pop
pop
call
in
mov
shl
or
dec
mov
jne
pop
push
add
push
push
mov
pop
xor
test
push
cmpb
sub
push
sbb
shr
and
jb
sub
sbbl
pusha
jae
shl
or
test
clc
dec
jne
pop
mov
dec
jp
sbb
ret
pop
mov
repnz
dec
popa
push
movzwl
fadd
sarl
push
scas
movl
jae
xor
cmc
add
lock
sub
roll
add
cmp
sbb
lahf
mov
loope
cmp
loopne
jmp
sub
dec
clc
insl
push
mov
outsl
mov
shl
rcll
ret
mov
add
pop
ret
adc
push
ficoml
jle
mov
inc
mov
or
sbb
call
out
or
jne
pop
ret
mov
shl
pop
pop
add
xchg
pop
sbb
jbe
pushf
xor
incl
jge
mov
sti
test
jle
gs
js
add
push
call
rclb
roll
loopne
inc
cld
inc
cmp
dec
jl
sbb
popa
insl
repnz
call
outsb
in
call
cmp
cmp
ljmp
sbb
les
jne
mov
shr
pop
lea
iret
loopne
add
jbe
inc
call
or
add
lock
cmp
sbb
call
fcomps
mov
test
push
cmp
icebp
call
shlb
sub
lods
add
add
call
cmp
dec
add
and
jne
sbb
and
or
add
push
clc
mov
mov
rcl
addr16
dec
cmp
adc
dec
push
icebp
inc
dec
or
enter
jo
icebp
movsb
push
sbb
int3
dec
hlt
enter
in
adc
sbb
inc
dec
clc
nop
push
in
and
add
shl
add
xor
dec
dec
sbb
or
dec
pusha
push
pusha
adc
fdivl
push
add
mov
inc
jne
sar
mov
fsubrl
and
rep
adc
popa
data16
jne
and
adc
lea
call
jge
orb
jo
pop
mov
adc
sbb
fisubs
test
adc
hlt
inc
stos
popa
and
fwait
ret
bound
inc
std
inc
adc
sbb
inc
inc
andb
and
pushf
lds
mov
inc
nop
add
in
mov
jge
xchg
add
adc
sahf
out
add
movsl
hlt
into
xor
je
and
cmp
mov
lcall
stos
sbb
xorl
or
insb
out
fcoms
xchg
push
repnz
or
xor
xchg
call
cmp
push
sbb
cmp
das
cmpsb
mov
jne
movsb
inc
setb
add
sbb
cmp
sysexit
test
pop
incl
pop
popf
shrb
clc
lea
inc
stc
hlt
cmp
mov
add
pushl
dec
mov
jmp
mov
inc
sbb
ret
dec
in
jmp
sub
enter
cs
lock
mov
xchg
sbb
fldl
dec
xor
ljmp
out
or
jmp
insb
lock
sbb
fcmovnbe
or
popf
test
pop
sub
mov
xor
or
call
add
mov
dec
add
pop
fcoms
push
adcl
jl
dec
loop
xchg
and
dec
stc
iret
xor
sub
pop
jge
adc
lock
dec
pop
add
pop
add
and
sti
movsb
sbb
dec
add
xchg
testb
fcmovne
mov
test
orl
and
xor
cmp
cmp
rcl
inc
inc
add
mov
inc
inc
cmp
inc
dec
test
mov
aam
jb
in
icebp
js
loopne
adcb
inc
rclb
test
jne
inc
js
shl
arpl
adc
mov
addb
or
add
pop
inc
jmp
push
sub
sub
jb
xor
mov
jge
cs
shrl
dec
jne
cmp
mov
sbb
xor
icebp
addb
mov
iret
push
es
sbb
jno
int
and
mov
xchg
adc
mov
and
mov
adc
sbb
mul
mov
inc
outsb
addb
add
mov
test
pop
push
clc
push
add
add
pop
add
inc
add
add
add
sbb
faddp
cmpsl
inc
mov
fld
push
cld
sub
ss
jnp
repz
out
sbb
inc
das
dec
sbbb
xchg
sub
adc
test
mov
repz
sub
ljmp
imul
add
jecxz
mov
pop
push
stc
daa
push
pmaddwd
je
cmp
jnp
sti
hlt
mov
xor
jecxz
adcb
outsb
push
sarb
into
adc
in
mov
push
adc
es
das
rorb
dec
daa
andb
xchg
jae
shll
adc
inc
jne
or
ljmp
stc
lcall
cmp
ljmp
sbb
cmpsb
fistl
pop
adc
dec
js
in
mov
mov
mov
jmp
mov
flds
jno
shl
lods
mov
and
mov
push
push
xchg
rcrb
popf
int3
cmp
adc
out
ret
inc
push
lods
popf
sub
bound
adc
or
into
or
add
sahf
pop
push
outsl
cmp
leave
xlat
inc
jae
inc
xor
outsb
dec
dec
mov
jbe
mov
inc
cmpb
mov
cwtl
pop
mov
hlt
fwait
lock
repnz
ljmp
push
pop
or
out
mov
cmpl
cltd
popf
iret
sbb
js
sbb
call
ja
mov
add
lea
sahf
addr16
inc
sarl
out
les
ss
out
incl
jns
pop
in
mov
jae
mov
lret
inc
pop
pop
cmp
dec
and
out
call
arpl
gs
mov
ret
mov
lahf
or
pop
sub
addr16
jb
sub
and
mov
iret
in
cltd
xor
xchg
aam
cmp
sbbl
xchg
pop
lret
ret
js
or
lea
xlat
add
test
fdivrs
inc
shlb
ret
rorb
outsb
ljmp
fdivp
sub
pop
xchg
pop
xchg
sub
jmp
sbb
xlat
cmc
or
adc
cmp
cmpl
inc
les
xor
loopne
leave
adc
xlat
mov
sbb
mov
add
lea
add
in
loop
es
push
nop
jo
push
lahf
xchg
add
lods
sar
shlb
or
jle
adc
pop
mov
or
ja
push
cli
mov
movsl
mov
fimuls
jo
das
roll
in
or
push
test
sbb
adcb
mov
gs
mov
cmp
inc
mov
ret
or
out
jb
jle
int
inc
pop
and
sarb
sub
and
jns
mov
stc
lahf
fs
lea
repnz
and
or
je
loope
dec
push
cmp
adc
push
jg
icebp
dec
mov
les
or
sbb
mov
cs
dec
mov
lea
push
fildll
adc
push
das
cmp
add
add
or
scas
aas
fs
cmovb
cmp
std
push
out
push
imul
pop
in
push
mov
psrad
inc
xor
stos
jmp
sbb
sub
xchg
mov
adc
pop
jmp
adc
push
pop
cmpl
cmp
popa
push
cli
inc
in
addr16
mov
xchg
push
je
adc
sub
imul
xlat
jns
out
mov
mov
adc
mov
cmc
pop
add
mov
cmp
in
pop
sub
and
cld
pop
sbb
out
sbb
inc
mov
xor
filds
mov
pop
adc
lret
test
mov
and
dec
mov
jmp
shl
ss
jl
sub
loopne
xchg
movl
fcomi
add
sarl
movsl
inc
sbb
cli
pushf
mov
hlt
ss
into
xor
push
pop
fisttpll
jnp
lea
xor
or
or
into
pop
dec
jg
hlt
or
add
shlb
icebp
add
mov
int3
and
mov
lret
int3
cltd
dec
mov
add
xor
daa
mov
aas
inc
mov
std
rcll
iret
xor
mov
or
sub
jnp
mov
nop
mov
jg
add
out
outsb
div
lretw
cmp
or
js
cmp
xchg
inc
add
sub
mov
sub
and
cmpsb
sbb
add
jmp
jg
jg
or
lret
mov
cli
and
dec
mov
adc
loope
addr16
jle
imul
test
jne
repnz
or
sahf
call
pusha
inc
lea
fwait
test
inc
dec
or
inc
xlat
xchg
dec
dec
std
mov
and
pop
push
jno
sub
sbb
lods
mov
xchg
mov
mov
adc
out
and
aaa
pop
mov
lock
int
add
int
jmp
shrl
pop
aaa
dec
mov
xor
xchg
in
push
out
lods
xchg
xor
inc
mov
out
cmp
insl
xor
in
lds
test
pop
neg
or
divb
inc
lcall
movaps
stos
test
pop
pop
push
mov
jne
mov
enter
mov
push
cltd
je
sarl
aaa
pop
enter
and
cmp
rcl
mov
mull
mov
out
repnz
adc
sub
repz
mov
jp
push
add
mov
nop
icebp
test
cmp
xor
cmpsl
xor
push
mov
pushf
jmp
push
in
xchg
dec
push
popa
mov
mov
cmp
push
fisttps
addl
push
hlt
test
push
mov
mov
arpl
repnz
jle
cmc
jne
mov
lods
mov
sub
xor
and
out
or
ja
ret
add
test
aad
cmp
fiaddl
repz
popa
or
icebp
bound
pusha
cmp
mov
push
pop
or
xchg
sbb
popa
push
in
out
inc
movsl
dec
mov
int
and
jmp
shlb
mov
iret
and
imul
in
pop
lods
test
insb
push
or
aas
mov
mov
lahf
or
test
cmp
mov
das
pop
push
jp
pop
mov
repz
leave
outsl
outsl
jae
leave
push
repnz
imul
stos
cmp
sbb
in
inc
shll
icebp
and
xlat
cwtl
xchg
xchg
add
adc
ja
inc
enter
dec
jmp
xor
je
push
xchg
stc
pushf
mov
add
jns
in
dec
pop
clc
rcrb
mov
in
xchg
push
jns
cmc
gs
aaa
in
shlb
or
repnz
popf
xchg
push
xchg
push
stos
lret
push
adc
push
pushf
cmp
in
stc
and
into
clc
dec
inc
sub
push
int3
lahf
mov
xchg
jo
sub
sbb
cmp
and
int
adc
in
ljmp
addb
cmp
sub
xchg
sub
out
push
clc
mov
cli
and
mov
cmp
ret
pop
pushw
pop
xchg
movsb
pop
push
pop
pop
and
mov
xor
pop
adc
cli
jg
pop
daa
or
out
and
repnz
inc
scas
adc
push
or
and
xlat
adc
mov
sbb
jle
add
iret
dec
stos
mov
push
push
test
xchg
pusha
jbe
xchg
and
cmp
sbb
imul
and
jmp
mov
mov
and
mov
stos
mov
push
jge
lds
jmp
das
pop
movsl
ficoms
jp
pusha
push
dec
cld
mov
insl
or
pop
gs
outsl
dec
int
push
and
sub
dec
jmp
jle
andb
jl
lret
scas
cli
test
cli
das
pushf
push
jge
das
int
lds
lret
mov
mov
arpl
xor
xlat
push
xlat
add
sbb
xchg
ficoms
mov
xchg
adc
aad
int3
mov
cmc
lcall
fmull
dec
push
int3
xchg
push
pop
mov
or
sbb
idivb
dec
sahf
ss
lods
dec
inc
inc
dec
push
scas
stos
mov
pop
sahf
jle
cltd
sub
cli
adc
popf
dec
insb
add
into
shll
call
pop
mov
hlt
sub
mov
pop
out
pop
dec
fmulp
imul
jb
sarl
ds
pusha
sti
xlat
inc
daa
clc
iret
out
stc
addr16
xchg
in
loop
pop
ret
inc
push
add
scas
inc
push
mov
xor
aad
cmp
stos
sarb
mov
xchg
push
mov
push
mulb
xchg
in
lret
push
adc
lods
out
inc
xchg
cmp
mov
jg
mov
mov
sub
scas
mov
mov
adc
mov
cld
xchg
lds
push
cmp
shrb
sbb
lcall
cmp
cmp
test
fnstcw
dec
test
loopne
inc
ficompl
cmp
insb
lods
out
inc
jg
jmp
dec
cmp
leave
and
je
mov
hlt
in
stos
sarb
adc
clc
and
jmp
cltd
std
mov
inc
pop
cltd
mov
addl
pop
mov
scas
arpl
xchg
xor
mov
pop
sbb
push
fisubrl
xchg
test
testl
mov
and
test
test
gs
jecxz
and
push
pop
mov
out
leave
in
fcoml
lret
mov
sbb
mov
frstor
repz
lea
jno
mov
sub
jae
cmc
mov
xchg
add
xor
ss
iret
sarl
rol
mov
xor
or
sub
sub
pop
fsub
fisttpl
sbb
int
dec
shll
vmread
imul
outsb
int
mov
lods
cmp
pop
xorb
inc
cwtl
push
sub
unpckhps
inc
in
aaa
adc
clc
das
jbe
mov
js
mov
icebp
sbb
mov
lock
cmpsb
ljmp
add
scas
insl
dec
sub
leave
jg
jl
jecxz,pn
in
pop
xchg
lret
in
stos
jecxz
mov
cld
sti
popa
ret
sti
scas
lret
ret
mov
stos
cs
fistpl
sub
xchg
addr16
jmp
in
shlb
shl
jp
cli
sbb
call
sarl
mov
inc
fcomp
pop
sub
ljmp
sbb
push
inc
test
lods
push
pop
repz
movsl
pop
repz
xchg
fldl
or
ss
gs
daa
test
add
fwait
or
sbb
cwtl
dec
ret
lods
in
pop
and
pop
mov
lods
dec
mov
and
and
in
bound
stc
cmpsl
stc
mov
nop
push
push
repnz
fs
xchg
mov
fwait
xchg
inc
into
test
lods
mov
movsl
loope
and
xor
xchg
jmp
std
stc
mov
stos
fbstp
aas
mov
imul
and
jno
out
loopne
xchg
test
loopne
dec
cmp
adc
aam
or
mov
bound
inc
js
ret
add
imul
mov
sub
es
adc
mov
or
movsb
sub
mov
pop
lods
sub
icebp
mov
sbb
xchg
rcrb
repnz
sbb
mov
inc
subb
subb
ljmp
cltd
aas
xor
push
mov
test
aas
in
xchg
sub
sbb
and
mov
cmpb
divl
xchg
jecxz
and
sub
mov
out
cmpsl
gs
mov
inc
xchg
adc
jb
xchg
test
fstl
jo,pn
jo
sub
push
in
notl
lea
jmp
sub
int3
sub
cwtl
mov
push
loop,pt
loopne
xchg
enter
enter
cmp
xchg
insl
xor
mov
adc
clc
adc
jp
lock
pop
pop
jmp
jb
mov
insl
dec
repnz
adc
test
xchg
dec
adc
enter
es
sbb
addb
dec
inc
or
sub
or
movsb
cmp
dec
aad
fisttps
mov
scas
imul
sub
sti
or
out
mov
roll
in
ljmp
gs
pop
outsb
out
lret
xchg
ds
xor
test
into
cli
scas
test
jle
std
sahf
pop
sbb
mov
pop
jnp
inc
outsl
cs
iret
repz
mov
and
rorb
in
push
sub
bound
mov
inc
mov
jge
jno
popa
js
into
repnz
lds
mov
dec
dec
stos
in
shr
mov
das
mov
outsb
cld
push
ja
lock
out
movsl
jmp
shlb
push
or
ficompl
pop
in
pusha
or
xchg
aam
dec
testl
lea
aad
rcrl
mov
in
add
mov
ja
insb
jns
jnp
jp
pop
inc
push
pop
mov
rolb
fdivrl
or
fildl
mov
in
movsb
stos
add
add
push
leave
pop
arpl
add
fwait
enter
out
jns
adc
mov
cmp
out
inc
pslld
pop
cmpsl
add
pop
jb
add
lahf
outsl
dec
idiv
inc
inc
aaa
sti
addl
mov
xor
repz
adc
xchg
pop
sbb
add
xlat
outsb
jbe
test
insb
and
xchg
inc
lock
lcall
mov
sarl
aaa
xchg
jge
pop
cli
inc
ficoml
popa
loop
dec
rcrb
cmpsb
lods
mov
xchg
bound
inc
or
fldl
jg
loop
xor
xor
sbb
or
mov
arpl
sub
pop
dec
ljmp
rcrl
xor
and
and
xchg
ret
xchg
add
mov
pop
cmp
fmulp
filds
dec
push
test
sbb
pop
mov
out
imul
outsb
ret
out
imul
push
jg
push
xlat
mov
fadds
das
or
imul
pop
xor
movd
roll
scas
data16
jmp
jns
cmp
les
lods
sub
sbb
popf
sub
push
jp
dec
repnz
popf
push
jo
and
jge
mov
push
bnd
fadds
xchg
jo
insb
loope
setg
mov
jb
ficompl
inc
cs
or
loopne
pop
push
movsb
dec
pop
mov
loop
into
stos
les
in
ret
outsl
test
mov
or
out
jle
dec
xchg
mov
pop
inc
push
sbb
test
and
push
arpl
or
sbb
add
mov
out
push
push
and
jno
and
daa
dec
loopne
xor
into
ss
inc
in
inc
inc
out
add
dec
arpl
xchg
adc
add
pop
ss
and
popa
mov
loop
xor
xchg
pop
pop
xor
call
cmp
jne
add
daa
loopne
repnz
shll
xchg
mov
jns
mov
ret
cmp
mov
pop
gs
int
ret
or
mov
les
fsts
test
mov
call
int
clc
cmpsb
mov
cmp
pop
jae
and
pusha
or
and
test
xchg
inc
rcrb
sub
les
cli
xchg
outsb
jno
push
xlat
ljmp
test
add
push
or
imul
add
lret
mov
and
rorl
loop
iret
dec
mov
mov
aas
jecxz
leave
mov
xor
movsl
add
jnp
jl
push
push
imul
add
sub
cwtl
cmpsb
add
test
addr16
mov
jg
je
shll
out
scas
cli
mov
hlt
push
mov
push
sbb
or
and
es
push
insl
cmp
ds
inc
push
shlb
cs
repz
adc
xor
add
mov
pop
push
add
pop
add
lock
test
and
mov
push
add
ds
stc
and
cltd
test
icebp
xchg
dec
adc
mov
in
aad
lahf
sti
sub
mov
mov
popf
clc
sbb
outsl
js
xchg
dec
in
jne
or
shll
sub
stos
mov
shll
mov
into
xor
jo
xor
aas
jp
sub
jp
mov
mov
outsl
mov
add
sbb
insb
int
movsl
fsub
fnsave
popa
pop
sub
pop
js
ss
and
xor
xchg
sub
enter
xchg
andb
lds
repz
ror
cmpl
and
movsl
outsl
pushf
pop
out
mov
popa
dec
pop
arpl
cs
mov
lods
mov
cs
mov
stos
pop
imul
loop
pop
cmp
mov
lcall
rorb
incb
fadds
sbb
jne
push
movsb
mov
stc
loope
dec
sahf
dec
pop
in
xor
sub
fisubrl
in
mov
sub
rcl
lea
push
lcall
push
popa
into
xor
sti
inc
and
xchg
inc
push
aad
push
jno
inc
push
xchg
dec
sbb
xor
pop
xor
mov
dec
iret
stos
mov
sbb
cli
xor
mov
xchg
push
jne
in
out
or
or
dec
or
outsb
dec
push
mov
xchg
stc
out
mov
jl
push
jg
out
xchg
in
pop
xor
rcrb
cmp
dec
out
push
fisttpl
mov
mov
add
jne
xchg
outsb
ret
out
and
or
cmp
stos
push
mov
pusha
push
push
mov
out
mov
dec
xor
push
mov
rcrl
mov
cmp
movsb
pusha
cmp
adc
mov
shrb
fcoml
push
test
pop
ja
add
inc
stc
mov
xchg
jmp
and
jp
lea
and
ret
push
sub
loope
loope
push
nop
movsl
sahf
mov
pop
cmc
ja
shr
scas
loopne
jl
jb,pn
cld
xchg
sbb
mov
sbb
test
adc
scas
lods
and
out
imul
sahf
sub
jne
xchg
loopne
jge
lea
ret
shll
jb
mov
fcoms
add
push
or
ja
cmovb
xchg
jge
push
inc
push
sbb
mov
std
loopne
fimull
pop
or
data16
insl
xor
xor
call
ret
pop
add
sbb
mov
dec
cmp
int
dec
pand
scas
icebp
sbb
jmp
and
sti
ja
movsl
stc
pop
test
roll
mov
and
mov
sbbl
mov
jb
popa
mov
push
dec
ja
roll
inc
shll
jne
gs
mov
movsb
insb
push
negl
mov
xor
lea
push
out
out
adc
pop
dec
cltd
daa
jecxz
jns
scas
sahf
sahf
pop
inc
ja
insb
jbe
mov
call
or
fisttpll
outsb
or
sbb
mov
outsl
jnp
xchg
jbe
call
push
mov
aam
outsb
mov
push
rclb
repnz
inc
xor
xchg
aad
or
xor
call
mov
sbb
fs
mov
or
ja
mov
pop
jo
scas
or
push
pop
aad
sub
sub
fiaddl
stos
lods
xorl
jb
or
int
fcompl
dec
ds
add
sbb
in
push
inc
inc
imul
xor
push
pop
sbb
adc
jle
add
stos
cwtl
movb
lcall
dec
mov
xchg
movsb
stc
test
mov
dec
adc
roll
sub
xchg
jl
sahf
fdivrp
stos
out
mov
pop
mov
xor
cmpsl
popa
jno
inc
fprem1
test
jle
arpl
lods
mov
loopne
jb
pop
imul
add
jmp
cmpsb
adc
xor
sar
mov
fwait
les
mov
cmpsb
out
mov
fbld
test
int3
pop
mov
lret
mov
and
mov
pop
dec
aas
stos
cmp
fs
sbb
sub
push
adc
push
xchg
inc
loop
jnp
fbstp
ds
xchg
nop
jo
cltd
or
ljmp
pop
mov
movsl
fsubp
subb
fsub
repz
mov
and
stc
push
lods
outsl
mov
int3
mov
ss
sbb
popa
inc
xlat
and
cltd
add
sysret
cld
test
rcrl
lret
mov
dec
daa
mov
aam
pop
daa
mov
xchg
mov
xchg
lcall
ds
cmp
xchg
mov
imull
scas
mov
shll
mov
xchg
cli
test
sub
jno
scas
adc
stc
and
pusha
pop
bound
out
int
jae
adc
or
movsb
fidivrl
jecxz
jmp
rcll
scas
std
mov
addl
movl
and
inc
xor
in
sti
and
push
push
jmp
mov
mov
jge
sub
push
cltd
push
rcr
sbb
fadd
and
movsl
test
fcoml
lods
inc
jae
nop
stc
push
test
and
std
push
sub
dec
test
or
pushf
add
push
repz
pop
fldt
pop
cli
lahf
or
dec
dec
pop
cmp
cli
and
pop
sub
pop
das
jmp
repnz
jp
in
dec
add
push
and
jno
xlat
jmp
daa
jmp
stos
lret
enter
pop
adc
aad
jne
dec
popa
add
outsl
ret
mov
mov
das
loopne
test
mov
sbb
dec
mov
ret
jecxz
repz
push
sbb
dec
inc
pushf
push
lods
push
inc
mov
fnstenv
loop
in
inc
xor
jg
sub
and
sub
movsl
push
std
cmc
inc
lock
inc
adc
pop
xor
adc
jmp
fs
push
insb
stos
mov
xchg
pop
pop
add
and
shll
bound
bound
fdiv
or
cmpsb
add
xchg
notl
jge
fcmovnbe
push
jecxz
cwtl
jbe
add
mov
pop
lahf
imul
prefetcht2
fnstcw
arpl
stos
imul
cmp
pop
jnp
xor
or
arpl
lods
mov
mov
dec
sub
sub
sbb
pop
je
sbb
insb
and
das
aam
mov
adc
xlat
outsb
and
dec
repnz
lods
xor
out
push
adc
fsubrl
lock
jmp
mov
out
icebp
cmp
pop
scas
dec
repnz
pop
int
subb
imul
rcrb
jp
stos
jb
cmp
pop
mulb
sub
sbb
lret
ljmp
cmp
cmp
jne
cmp
xchg
repz
push
xor
xchg
call
neg
js
or
mull
push
cmpsb
push
push
cmp
mov
sti
fdivrs
mov
mov
pop
lods
and
mov
push
mov
dec
es
or
gs
push
sub
sahf
ss
sub
jle
and
xor
pop
enter
jae
dec
dec
imul
les
pop
sub
jg
xchg
into
mov
cwtl
push
imul
and
bound
in
imul
ja
push
stos
push
stos
js
sbb
aaa
inc
repz
int3
sbb
roll
inc
mov
fstpt
mov
pop
and
push
mov
pop
jmp
jb
pop
and
outsb
lock
imul
inc
and
xchg
shr
xchg
out
xchg
pop
xor
or
ljmp
and
and
nop
push
push
push
pop
nop
add
int
loopne
arpl
stos
inc
pop
inc
adc
mov
adc
ficomps
jbe,pn
push
ja
pop
rcll
aam
ror
nop
outsb
jb
jo
aaa
pusha
fmuls
aam
test
sarl
je
push
and
fsts
sub
cwtl
icebp
mov
lcall
jne
ret
ret
mov
jne
lds
ret
fistl
pop
in
adc
mov
adcb
mov
push
mov
dec
mov
xor
dec
or
out
xchg
mov
pop
loop
lds
jmp
mov
cli
xchg
sbb
test
or
mov
dec
add
test
stc
inc
loop
push
cli
lret
loope
cld
pushf
mov
dec
cmp
rolb
jle
das
lods
push
inc
in
mov
adc
and
cmpsb
les
arpl
repz
adc
or
insb
arpl
mov
ret
in
loop
and
cmpb
ret
push
mov
les
adc
clc
daa
and
decl
xor
pop
dec
or
ds
or
push
cmp
mov
pop
push
outsl
pop
orb
or
loope
push
push
xchg
cmpsl
je
sub
addr16
mov
dec
adc
mov
pop
xchg
cmp
orl
divl
mov
fwait
dec
dec
scas
sub
cmp
or
test
rolb
push
jbe
xor
xchg
out
jnp
subb
loope
inc
fsubrs
sbb
push
fcmovu
outsl
repnz
out
outsl
mov
pop
cs
ret
rcll
fcmovu
xor
icebp
addr16
xchg
jae
mov
dec
arpl
mov
mov
push
lods
mov
aaa
add
sbb
dec
inc
add
leave
test
cmpsl
jnp
sbb
mov
mov
outsl
out
fldcw
cli
sbb
fs
cmp
add
hlt
mov
movsl
movsb
pop
dec
sbb
xchg
jb
mov
inc
dec
adc
and
insl
inc
mov
out
ficomps
mov
add
mov
push
lods
js
pop
sub
cmp
sti
outsb
mov
jb
ds
lock
rcr
test
std
scas
xchg
in
xor
cmp
ret
push
in
lds
unpckhps
xchg
jno
xchg
sub
lret
cmp
dec
dec
mov
sub
jg
aad
fwait
xchg
jp
cli
dec
or
inc
insl
mov
enter
leave
shl
add
stos
sbb
or
stos
fildll
aam
pop
sbb
xor
push
scas
lea
xchg
mov
pushf
dec
push
xchg
sbb
pop
bound
pop
test
mov
dec
mov
xchg
pop
lock
faddl
mov
mov
mov
push
sbbl
mov
fisubs
pop
mov
cmpsb
enter
mov
decb
imul
jo
scas
mov
inc
out
add
mov
or
and
gs
std
mov
xchg
mov
je
pop
rorl
mov
dec
lods
std
and
aas
cmp
cmp
pop
adcb
or
push
add
enter
mov
in
mov
xor
push
into
adc
xchg
dec
pop
sub
stc
icebp
mov
cmpsl
not
lock
loop
mov
mov
stc
aam
add
xchg
mov
mov
fs
sub
imul
fdivrs
xor
iret
shrb
sub
in
and
sbb
pop
add
scas
push
mov
shrl
push
jo
xchg
jg
add
dec
test
xor
cmc
je
loopne
les
mov
ret
cmp
out
pop
out
pop
mov
fbstp
repz
pop
jae
std
fs
dec
sbb
add
lcall
adc
int
pop
inc
push
push
loope,pn
mov
les
jno
scas
push
mov
cli
in
jl
push
faddl
sbb
inc
and
dec
cmp
adc
inc
inc
decl
daa
dec
push
mov
arpl
xchg
je
sub
nop
xchg
cmpsl
mul
pop
inc
shll
push
jle
movsl
adc
fs
insb
or
dec
fdivrs
scas
out
jae
xchg
enter
jecxz
stos
xchg
jnp
pop
push
jle
mov
stos
xchg
mov
enter
xchg
lcall
mov
mov
nop
xchg
push
fs
cmp
das
xchg
inc
clc
mov
jnp
outsl
pop
pop
mov
and
pop
imul
ret
inc
inc
insl
mov
lret
cmp
dec
enter
adc
and
and
cltd
cmp
inc
ss
adc
add
cli
mov
lock
pop
div
arpl
insb
cmp
daa
and
icebp
sbb
mov
sbb
fwait
dec
int3
dec
mov
sub
lret
push
lret
sub
ss
popf
adc
scas
pop
dec
pop
loop
pusha
pushf
ss
or
xor
and
out
loopne
jbe
dec
lods
out
cmp
ljmp
ret
inc
ret
iret
iret
out
dec
shll
sti
xchg
mov
mov
fucomi
add
and
or
add
js
adc
adc
cmp
fsubl
jecxz
cmpsl
push
sahf
mov
cwtl
call
cmc
jb
enter
ret
loopne
mov
std
cmp
push
fcoml
jnp
ljmp
fcompl
test
ret
fbld
fwait
scas
xchg
movsb
into
test
sbb
out
sbb
sub
xor
fwait
jnp
jb
cltd
jecxz
js
push
hlt
clc
pop
mov
and
stos
sbb
push
dec
or
rclb
lods
cld
rcrl
stos
and
sbb
jnp
xchg
mov
cwtl
inc
cmp
cmp
cmpsl
dec
sbb
or
xor
sti
ds
sub
push
xchg
dec
dec
inc
pop
sbb
flds
movsb
notb
iret
cltd
pop
adc
imul
mov
push
or
jg
cli
aaa
cmp
iret
add
popf
mov
lret
xlat
adc
lcall
or
jmp
xor
fmull
mov
or
xchg
cmp
mov
xor
jle
mov
mov
sti
push
ret
xchg
pop
insl
pop
decl
cmp
ljmp
and
in
inc
pop
jle
and
pop
push
std
inc
xor
pop
mov
fwait
nop
push
lock
fs
fcomps
imul
sti
sub
pop
jnp
sub
test
movsb
pop
jo
xor
in
xchg
dec
scas
dec
jbe
insb
fsubrs
jmp
jno
pusha
idiv
sbb
neg
aad
adc
push
lods
sahf
push
mov
xchg
inc
in
xchg
pop
push
jmp
add
mov
jecxz
mov
or
xchg
mov
scas
rcrb
cmp
pushf
test
pop
int
sbb
daa
mov
in
aas
dec
mov
in
stos
testl
sub
loopne
xchg
sbb
rcr
pop
data16
and
nop
loope
imul
imul
sub
cmpsb
mov
jmp
pushfw
cwtl
test
pop
xorb
clc
movsb
clc
sub
xchg
mov
out
xor
push
cmp
xchg
fldt
jae
lods
test
arpl
inc
fistpll
sbb
out
fdivs
mov
mov
inc
pop
xchg
icebp
jmp
add
push
movsl
jne
bound
clc
sarl
iret
imul
je
int
or
inc
test
hlt
pop
test
clc
push
pushf
rorl
and
pop
sahf
das
and
rclb
lcall
int
out
fsubrs
out
jge
int
scas
cld
outsb
ja
add
sbb
sbb
or
arpl
lahf
inc
mov
xor
out
in
mov
lret
int3
jecxz
mov
ljmp
pop
dec
push
xor
es
push
push
cmp
xchg
pop
gs
or
outsb
popa
cwtl
insb
mov
mov
mov
scas
sub
int
cmp
arpl
nop
test
inc
sbb
push
dec
jge
fimull
pop
imul
cli
fs
lahf
adc
sub
fsts
lods
and
inc
push
mov
adcb
push
sbb
aaa
out
ja
sub
jge
mov
add
add
test
lods
filds
repz
je
shrb
pop
fs
xor
test
xchg
mov
xchg
jl
stos
pop
mov
aad
shrb
jne
xor
or
aaa
pop
and
add
jp
xchg
andl
lods
pop
jle
pop
dec
mov
cmpsl
lea
push
and
loopne
jb
in
mov
popf
sbb
fidivrs
jns
cmp
xor
insb
int
rclb
mov
int3
fidivrs
in
in
xor
roll
mov
inc
lds
outsb
mov
pusha
push
pop
lds
aam
fwait
add
repz
arpl
pop
jbe
dec
sbb
jmp
stc
and
movsb
mov
jbe
mov
xor
pop
aas
and
stos
xorb
fiaddl
xchg
int3
int
xchg
ds
repnz
lods
inc
fstp
pop
xor
pop
add
sub
shrb
es
and
sahf
mov
mov
iret
icebp
inc
mov
mov
imul
xlat
pop
push
lock
clc
mov
xchg
nop
push
xlat
daa
jno
mov
cmp
movsl
and
adc
push
frstor
xchg
stos
test
cmp
add
add
push
stc
jl
loop
mov
or
dec
xor
mov
adcb
mov
jo
xchg
loopne
sbb
iret
jl
cmp
adc
jnp
inc
jns
sahf
dec
mov
rolb
popa
add
aad
inc
test
lods
dec
dec
daa
or
fldenv
mov
mov
andb
cmp
jne
sbb
sub
sbb
mov
push
cmp
cwtl
subb
xor
sbb
cli
sub
sub
mov
bound
jno
jae
test
sub
mov
lea
stos
pop
inc
cmpsb
lret
push
cld
lods
add
stos
dec
xor
sahf
cld
jg
int
xchg
push
xor
or
or
lcall
paddw
cltd
imull
rcll
jmp
lea
add
pop
outsb
mov
stc
xchg
xchg
bound
insl
mov
pop
cmpsl
push
pop
fiaddl
cwtl
sub
mov
movsl
or
mov
mov
lds
repnz
add
pop
aas
xor
into
lret
or
add
dec
mov
mov
dec
movl
ljmp
jecxz
and
push
mov
push
xchg
daa
or
outsb
mov
jecxz
ja
popa
sub
xchg
jle
adc
gs
loope
cmpsb
fwait
or
inc
pop
pushf
pop
testl
loop
cmpl
pop
xor
shl
enter
jno
cmp
push
or
mov
inc
movsb
pusha
mov
lock
rclb
adc
cmp
add
lock
aaa
and
xchg
out
jmp
mov
push
mov
je
or
or
adc
mov
pusha
aas
aas
sub
mov
out
and
notb
dec
rcrb
ficompl
add
int3
jge
xor
out
in
cld
out
pop
dec
mov
jge
mov
test
mov
mov
jno
pop
aam
lret
mov
and
push
fwait
cmp
fnstsw
fstpt
movl
xlat
outsl
movsb
scas
and
or
fbstp
sub
int3
xor
imul
rclb
testl
call
cmp
push
mov
jmp
sbb
mov
sbb
push
fs
sti
ss
fisttpll
icebp
leave
push
ja
mov
ret
movsl
or
cli
mov
stos
shll
nop
in
in
movsb
xor
ret
jecxz
pop
daa
push
xchg
jg
clc
adc
out
mov
xchg
gs
jp
push
fidivrs
aad
sub
fadd
ljmp
insl
sbb
cmp
lds
mov
inc
push
xor
lods
lock
pop
out
pusha
jne
js
sub
ja
or
rorl
lret
popa
sar
add
mov
test
inc
leave
andb
or
pop
jns
repz
mov
fcoms
insl
sub
data16
push
pop
lahf
cmp
fs
shll
cmc
imul
stos
and
imul
push
enter
sbb
inc
adc
sbb
jbe,pt
dec
or
repnz
xor
mov
cld
mov
sub
mov
ret
loop
pop
lods
adc
or
pop
mov
js
jmp
cmc
push
jns
cs
into
rcrl
enter
aam
xchg
mov
repz
jge
mov
jnp
lret
decl
xchg
mov
mov
push
mov
mov
ret
daa
mov
and
xchg
aaa
test
sbb
inc
pusha
add
cld
add
dec
jge
xchg
xchg
jno
or
xchg
pop
jle
mov
cmp
call
dec
fs
cli
xlat
repz
xchg
cmpsb
frstor
cmp
cmc
cmp
jle
add
fs
xlat
sbb
lahf
fldt
stos
adc
lds
cltd
stc
mov
mov
jnp
out
sub
popf
js
pop
andl
rorl
add
sub
adc
out
fmul
cmp
daa
call
jno
jl
mov
dec
popf
scas
sbb
xor
fmull
sbb
cmp
dec
xor
adc
cld
mov
nop
std
outsb
pushf
sahf
xchg
scas
in
pop
cld
rol
pushf
mov
xchg
xlat
add
mov
or
mov
nop
out
push
jae
movsb
imul
mov
adc
loop
rolb
pop
stos
cltd
bound
mov
and
rol
and
inc
das
xlat
sahf
insb
or
cmp
loope
icebp
rorb
and
in
cmp
mov
aam
jne,pn
and
cmp
cmpsl
mov
adc
test
or
sub
jmp
imul
xchg
movl
lds
stos
ss
inc
ret
pushw
stc
add
test
pop
or
lea
dec
scas
enter
sub
insb
movsl
movsl
dec
clc
fistps
icebp
lds
or
scas
mov
pop
mov
enter
push
roll
mov
mov
movsl
scas
ds
xchg
or
xchg
je
cltd
inc
jecxz
jnp
loopne
xor
inc
mov
sahf
stc
cmpsl
jl
call
cmp
inc
adc
or
jmp
stos
adc
inc
adc
aaa
mov
pop
push
lcall
and
xor
lea
jge
out
add
loope
mov
cmp
subb
nop
mov
outsl
mov
cmp
push
adc
lahf
mov
out
xor
std
orb
dec
sahf
push
test
adcb
xor
rcll
jb
icebp
sahf
rol
xor
adc
sub
cmp
mov
jecxz
ljmp
push
pop
and
xor
dec
adcb
cmp
push
cltd
jmp
lahf
add
mull
jge
fildll
sbb
orb
mov
sub
and
inc
push
mov
jg
mov
jg
push
es
std
fwait
add
cwtl
push
push
rcrl
or
mov
xchg
scas
pop
sub
mov
fs
pop
das
enter
icebp
mov
xchg
clc
and
rcr
jnp
sub
popa
mov
arpl
je
adc
xchg
enter
mov
out
sbb
jmp
cs
fwait
push
arpl
and
test
push
inc
xchg
adc
add
xchg
push
imul
test
cld
repz
sub
shr
mov
in
pushf
sub
mov
lcall
int
stos
xchg
pop
dec
loopne
std
jp
pop
cmpl
xor
nop
fs
xor
sbb
stos
outsb
sbb
mov
fnstenv
xchg
les
sub
sub
sub
xchg
imul
adc
cld
sti
adc
fildl
xchg
adc
adc
sub
dec
adc
into
lcall
iret
aad
mov
call
fiadds
or
dec
mov
lahf
inc
pop
xchg
imull
or
aaa
imul
dec
mov
aas
sub
arpl
jge
pop
mov
pop
pop
mov
cmp
fistl
ret
xor
ret
xor
mov
aaa
push
xor
and
inc
test
pop
fadd
sub
repz
mov
in
cmpsl
fnstsw
inc
adc
jns
xor
sub
mov
cwtl
sbbl
push
add
sub
js
lds
pop
das
mov
push
je
adc
sbb
xchg
jb
pop
pop
mov
fidivl
xchg
fisubl
aad
inc
pop
xchg
push
scas
xlat
pop
js
mov
jns
sbb
lret
jp
rcrl
xchg
and
dec
movsl
cmp
in
icebp
adc
dec
and
xchg
sti
bound
and
mov
xchg
mov
cmp
testl
test
and
mov
sbb
push
hlt
sahf
jno
pop
lods
test
nop
les
outsb
jecxz
aaa
sbb
pop
mov
push
mov
xor
pop
iret
cwtl
cmp
arpl
xor
shll
pop
test
push
ja
stc
dec
push
pop
push
cmp
push
test
cmp
in
ja
mov
push
adc
movsl
dec
jge
cmp
sub
push
mov
fwait
cmp
in
pusha
cmp
xchg
loopne
xor
pop
adc
or
mov
dec
push
imul
mov
mov
ret
das
xor
ret
out
data16
pop
rorb
fstpt
inc
dec
cli
cli
fwait
mov
loopne
cmp
xor
cwtl
and
sub
mov
xor
les
into
fwait
cmp
hlt
dec
cmc
ffree
bound
push
dec
lock
rcr
addr16
mov
push
loopne
mov
cmp
or
or
jne
push
mov
pop
cmp
push
ljmp
jl
into
add
loopne
sarb
mov
scas
adc
rcl
adc
or
pop
push
roll
out
dec
int3
fimull
jp
gs
or
dec
inc
mov
cmp
cmc
lock
clc
dec
push
xchg
mov
xchg
addb
fisubrl
adc
lret
dec
push
sub
xor
sbb
xor
dec
mov
icebp
mov
test
dec
lret
lcall
pop
ret
popf
jns
cmpsb
sbb
in
imul
mov
mov
pushf
or
xchg
hlt
ds
out
push
addr16
test
mov
add
jne
sub
mov
dec
push
push
mov
fdivrs
bound
dec
pop
or
shlb
data16
rorl
lea
dec
ret
mov
push
sbb
and
sarb
cmpsl
push
sbb
push
lea
dec
mov
lea
xor
pop
push
popa
ja
or
in
xchg
dec
mov
addr16
or
or
jle
mov
mov
sahf
sbb
and
sbb
sbbl
mov
cli
add
push
int3
ss
loope
xlat
subb
out
jno
movsl
dec
inc
movsl
xchg
push
xchg
daa
ret
cmp
jmp
mov
jg
fincstp
imul
iret
pop
pop
rclb
sarb
cmp
sub
stos
nop
stos
out
xor
dec
adc
ljmp
dec
shl
movsl
movsl
sbb
jb
sbb
jmp
mov
aas
sahf
jle
test
cmp
addl
mov
xchg
pop
dec
jno
mov
leave
nop
aad
lds
enter
outsb
pop
into
ret
sbb
loopne
loope
bound
jl
icebp
loopw
pop
out
jns
sub
fidivrs
push
loope
lds
imul
js
mov
push
les
jb
leave
jl
push
jle
fiadds
xor
daa
jnp
jg
incl
decl
mov
adc
xor
fnstcw
pop
aas
sub
jg
lret
fwait
xchg
adc
mov
pop
gs
ljmp
push
mov
and
loope
lds
int
out
add
ficompl
xor
adc
invd
popl
inc
xor
int
enter
lahf
pop
xchg
push
or
gs
int3
mov
cmc
jb
mov
jle
xchg
and
add
cmp
adc
ds
enter
ja
bound
std
mov
jle
adc
lret
cmp
loop
out
push
jg
imul
std
cmpsl
add
sub
xor
xchg
cs
decb
pop
int3
in
jns
mov
push
aam
cwtl
cmp
call
dec
xor
xchg
and
insb
dec
rol
mov
lahf
inc
imul
xor
cwtl
fidivrs
sarb
popa
lds
cmc
dec
sub
lahf
ss
sub
ja
xlat
jle
push
sbb
rolb
sti
push
enter
lods
mov
aad
loope
mov
nop
and
or
lock
call
lret
les
out
imul
out
dec
bound
or
adc
fbld
in
add
int
mov
insl
adc
ds
sahf
lds
lods
daa
fnstsw
ljmp
mov
xlat
jmp
push
ljmp
sub
push
pop
mov
mov
mov
mov
sub
stc
test
adc
pop
and
xchg
outsl
push
stos
add
pop
dec
call
push
out
loope
sbb
pop
call
push
pop
icebp
mov
sbb
in
fmul
repnz
adc
and
dec
mov
push
mov
sub
mov
or
imul
scas
jp
sbb
dec
adc
cmpb
jns
sub
std
push
mov
or
or
pushf
pop
sub
jo
and
in
mov
adc
jb
clc
jb
lret
add
data16
jo
xchg
adcb
loopne
mov
pusha
fcmovbe
testb
inc
adc
adc
sarl
imul
fidivrs
call
cld
push
adc
sbb
outsb
imul
ds
mov
jmp
mov
lcall
adc
sbb
mov
add
pop
mov
or
loop
popf
dec
push
mov
dec
dec
js
and
imull
loope
mov
mov
daa
adc
movsl
add
mov
mov
cmpsb
mov
xor
lds
scas
or
cmpsb
mov
or
jns
out
mov
test
xor
xor
roll
jmp
xchg
xor
push
das
adc
pop
movsl
and
fsts
sub
jns
add
add
outsl
jns
imul
hlt
push
or
xor
lds
pop
and
or
mov
or
sbbl
pop
sarb
loopne
push
div
repnz
mov
lret
pop
xlat
lds
lret
pop
rorb
xchg
pushf
leave
push
repnz
shlb
sub
loop
scas
pop
hlt
inc
xchg
and
scas
or
test
and
hlt
imul
pop
pop
jmp
jecxz
dec
and
lods
add
ja
dec
imul
jne
inc
push
mov
inc
cmp
jnp,pt
jae
push
inc
cmpl
mov
jne
test
cmpsl
sbb
pop
cmp
stos
movb
sbb
add
xor
mov
stc
xchg
lret
fistps
pushf
dec
ljmp
ljmp
sbb
sti
scas
xchg
and
pop
mov
add
cli
xor
das
std
adc
adc
mov
data16
xchg
and
adc
cmp
sbb
inc
adc
jo
ds
movsl
dec
jmp
push
xchg
pusha
and
xchg
sub
lock
jne
push
sbb
sub
push
andl
adcl
mov
or
mov
idivb
xchg
push
push
std
and
fwait
inc
xchg
sub
fisubs
rcrb
hlt
imul
xchg
pop
dec
pop
xchg
and
aas
jo
push
inc
je
cwtl
xor
filds
mov
fstl
push
ret
nop
adc
mov
xchg
loope
popf
mov
into
cwtl
cld
and
fwait
je
inc
jp
push
pop
ficoml
ret
mov
push
loop
imul
stc
push
lret
jb
inc
inc
int
ficomps
outsb
and
mov
lahf
mov
inc
aas
jb
sbb
inc
outsb
mov
jecxz
xchg
jg
bound
xchg
ds
fistpl
pop
insl
dec
stc
jmp
ficomps
std
aad
in
jb
adc
pop
out
insl
sbb
js
sbbl
faddp
shlb
imul
pop
xchg
pop
pushf
imul
incl
mov
loopne
lock
xchg
dec
fdivl
jb
pusha
push
jmp
test
sbb
pop
fwait
imul
sti
dec
mov
orb
std
loopne
inc
dec
addr16
insl
and
fcmovbe
fistpll
ret
sbb
fs
cld
mov
out
imul
outsl
hlt
mov
mov
push
pop
popf
inc
es
fld
cmp
jnp
mov
inc
jno
mov
fldenv
shll
xor
pop
ja
adc
push
imul
sahf
mov
js
insb
js
inc
mov
lcall
dec
icebp
pop
fbld
inc
stc
andl
pop
fucomip
popf
mov
inc
and
or
cmp
stos
xor
push
jmp
lret
scas
dec
ja
mov
cmc
outsb
push
push
loopne
loopne
mov
jp
subb
mov
inc
aas
xchg
fnsave
imul
rcrl
imul
shr
jbe
sbb
movsb
push
mov
insb
rcr
mov
subb
add
jns
pop
jl
fwait
and
mov
cltd
out
popf
dec
push
pushf
xchg
jmp
stos
roll
jnp
dec
jae
adc
fcmovne
fldcw
in
sub
or
mov
mov
mov
push
rol
test
push
js
xor
mov
and
adc
push
and
mov
mov
aad
cmp
pop
add
movsl
mov
push
push
xor
shlb
in
cmp
repz
stos
inc
push
test
add
ljmp
or
mov
or
xlat
inc
dec
or
shll
je
insl
cmpsl
mov
inc
push
ss
push
inc
in
shrl
xlat
enter
int3
repnz
imul
pusha
push
out
lret
aas
mov
adc
movsb
negb
pop
lock
pop
or
hlt
hlt
push
xchg
sahf
sahf
or
sub
in
sub
insl
cmc
dec
xchg
xchg
xchg
sbb
add
push
sarb
add
fs
push
xlat
movsb
push
cli
inc
sub
xchg
push
inc
dec
into
rcll
stos
dec
cmpsl
xchg
sbb
outsl
sub
add
out
adc
cmp
mov
in
popf
jno
scas
push
loopne
sub
add
in
adc
cwtl
adc
or
sahf
cmp
rclb
out
mov
lds
enter
orl
loope
stos
aad
fucom
sub
mov
inc
sbb
sbb
jb
add
push
dec
into
test
rol
ss
out
mov
sarb
ljmp
cmp
xchg
out
stos
aam
mov
and
aam
lea
dec
sub
lea
test
fbstp
pop
ds
sub
iret
jecxz
scas
mov
inc
fdivrs
dec
mov
adc
ror
mov
nop
iret
cwtl
jbe
pop
test
dec
push
sub
sub
jecxz
pushf
leave
dec
enter
dec
jp
stos
xchg
xchg
aad
jb
mov
dec
out
neg
xchg
mov
add
cli
enter
pop
imul
or
jns
cltd
pop
add
sub
mov
test
ljmp
stc
jmp
loope
ret
mov
enter
leave
lcall
jg
sahf
insl
enter
out
or
lea
je
jmp
pop
xorb
xor
jge
ffreep
es
test
mov
cs
inc
icebp
in
das
aas
push
std
in
cmc
sbb
test
pop
push
cmpsl
mov
orl
pop
inc
nop
and
ja
xor
jg
and
adc
pop
sub
sbb
push
mov
rcrl
lock
lcall
push
shlb
xor
adc
imul
cmp
mov
clc
xchg
adc
lret
test
cli
adc
iret
repnz
cmp
scas
fs
shl
cmpsl
cmpb
test
pusha
into
int3
je
inc
cli
decl
xor
fwait
movsb
lods
dec
cmp
xlat
push
data16
sbb
push
popf
add
inc
insl
in
dec
sub
pop
and
aad
and
add
inc
mov
inc
add
xchg
in
xlat
mov
and
loopne
add
sub
je
xchg
mov
pushf
sbb
push
and
data16
daa
jmp
inc
add
push
gs
popf
inc
push
iret
push
or
add
nop
addr16
insb
mov
xchg
dec
pop
cli
mov
push
ss
iret
insl
xchg
mov
cmc
push
cli
xor
jns
loop
push
in
fsubrp
fstl
dec
sub
and
inc
outsl
cmpsl
and
insb
xor
cwtl
jp
mov
push
jl
iret
das
cwtl
xor
pusha
or
fdivrs
mov
cmp
cmp
cmpsl
push
ret
mov
jno
push
fstl
cmc
scas
stos
dec
ja
sti
fidivrl
bnd
jne
jb
loopne
cmp
imull
out
lcall
in
push
xlat
jecxz
sbbb
pop
popf
nop
adc
jns
mov
jnp
or
or
dec
lods
pop
int3
push
sub
sub
push
push
lcall
sub
rsqrtps
push
popa
cli
das
bound
inc
mov
int3
inc
out
adc
jecxz
clc
scas
jae
mov
jg
nop
lret
shrl
enter
je
jnp
mov
pop
enter
into
mov
inc
sbb
data16
pop
cmp
clc
jl
int3
test
adc
cmp
shll
cmp
test
mov
xchg
testl
cmp
in
call
iret
out
lcall
ja
and
pop
jecxz
aas
daa
mov
icebp
nop
xchg
mov
aam
cmpsl
mov
insl
inc
cwtl
js
fidivrl
cmp
xor
jno
fdivrl
test
les
cltd
jo
daa
push
cwtl
lds
cwtl
fwait
adc
sub
pop
pop
fsubl
adc
push
aaa
cld
dec
jmp
xchg
mov
inc
xor
stc
sarl
xchg
ja
xchg
mov
add
and
aad
icebp
iret
xchg
out
inc
xchg
add
mov
mov
xchg
jmp
fcmovu
push
je
stos
xchg
push
in
pop
adc
pusha
push
xchg
fdivrp
movl
cwtl
rcl
mov
lods
repz
xchg
das
inc
imul
loopne
sbb
aaa
stos
gs
cmp
and
adc
xor
jno
sbb
dec
pop
push
pop
pop
stc
xchg
pushf
inc
leave
sub
xor
inc
js
ljmp
cmp
in
sahf
pop
scas
std
loope
mov
jb
or
test
sub
or
sbb
in
pop
xor
dec
sub
mov
insb
rcrl
pop
stc
addb
cltd
mov
add
add
stc
cwtl
stos
repnz
lret
inc
add
por
dec
cmp
mov
js
jmp
fisttpll
fisubl
dec
addr16
xor
jecxz
xchg
shlb
sti
gs
les
icebp
jae
add
pop
or
push
movsb
test
sahf
xor
repnz
dec
sbb
fisubrl
js
pop
adc
arpl
mov
sub
pop
lcall
and
test
adc
add
addr16
mov
cmp
inc
adc
mov
imul
int3
xchg
loop
mov
movsl
pop
add
jns
shr
sar
call
mov
jb
rorl
inc
arpl
jl
icebp
outsl
cmp
xchg
add
adc
insl
cs
je
adc
push
adc
xor
dec
and
pop
sub
out
movsl
cmp
pop
add
push
sarb
cwtl
lahf
in
testb
or
adc
sbb
sti
cmp
xor
mov
out
testb
xchg
or
lahf
sub
in
scas
loope
test
pop
fadds
mov
jae
nop
repnz
in
mov
sbb
in
mov
fldl
sahf
or
inc
adc
pop
push
or
filds
sbb
push
add
sub
rorb
stos
push
scas
aam
pop
movsb
jb
pop
sar
lahf
daa
mov
inc
push
push
leave
xchg
cmc
out
jl
jecxz
cmp
mov
mov
jg
push
fbld
pop
lret
ficompl
dec
mov
into
jbe
mov
push
out
movsb
les
out
mov
int3
xor
iret
lahf
dec
daa
xor
bound
pop
movsb
or
dec
lret
fistps
dec
shll
cld
fs
lret
cli
add
dec
stc
int3
pop
popf
loop
xchg
cmp
and
push
or
jbe
xor
mov
arpl
repnz
fildll
xchg
pop
ljmp
or
mov
fldl2t
sbb
das
imul
or
cmpsl
jbe
and
leave
push
addl
jmp
xor
sbb
imul
mov
fsts
loope
popa
repnz
rorl
jb
flds
in
ret
mov
rolb
icebp
adc
adc
loopne
arpl
sub
jge
out
es
add
sti
pusha
sbb
or
fs
add
ds
push
pop
test
ljmp
lret
rolb
sti
mov
inc
shll
add
shrl
loop
inc
int3
lods
enter
aaa
daa
xor
mov
leave
movb
ss
and
mov
frstor
add
xor
addr16
sbb
add
xchg
pop
mov
cli
push
popa
popa
pop
xchg
icebp
rol
pop
dec
orb
inc
rorb
fcomps
cmp
fidivrl
loope
push
pop
inc
leave
je
or
mov
mov
mov
sarl
and
lds
jns
cld
adc
cmc
xchg
dec
insb
out
aad
mov
sbb
ss
xor
jmp
lock
fsubr
pop
aaa
adc
xchg
subb
mov
fdivrs
les
pop
es
and
cmp
fsubrs
daa
adc
fcmovnu
aas
movl
cltd
sub
cltd
clc
lods
xchg
dec
bound
dec
mov
and
xlat
cmp
fisttps
mov
add
mov
adc
sub
aas
jecxz
daa
push
jno
test
add
xchg
mov
xchg
rcrb
mov
sbb
fwait
hlt
push
mov
pop
sbb
pop
cmp
inc
jge
clc
inc
jp
mov
cmp
xchg
pop
in
pusha
loope
jno
jbe
sti
pop
ficompl
push
loope
mov
sbb
inc
test
aad
in
out
and
sarb
pop
xor
sub
inc
stos
lret
rcrb
cld
xchg
repz
and
xchg
jecxz
mov
dec
mov
adc
cmc
lds
ljmp
std
cld
or
scas
movlps
je
sub
fimull
dec
fldl
push
incl
ficomps
xorb
scas
jmp
sub
imul
mov
in
jns
sbb
clc
insb
or
or
push
clc
leave
jl
pusha
xchg
loop
mov
mov
fnsave
repz
lret
inc
inc
lcall
sbb
hlt
mov
andb
cmp
or
daa
cmp
push
mov
js
popa
xchg
mov
push
mov
daa
out
out
mov
mov
cmp
inc
scas
aad
or
jp
mov
sub
mov
pushf
mov
fidivs
xchg
add
insb
pop
pop
jge
xchg
cli
out
jno
add
popf
and
xor
jp
out
push
lods
fdivl
inc
je
pop
sub
dec
es
rcll
into
mov
mov
outsb
cmp
arpl
mov
xchg
add
imul
adc
pop
cmp
xchg
push
adc
xchg
sbb
popf
imul
cmpsl
push
cmpsb
inc
mul
dec
and
les
add
mov
iret
test
test
je
or
push
and
and
pop
xchg
mov
mov
inc
lods
bound
mov
test
sar
pushf
cs
adc
sbb
and
mov
repz
mov
lods
jb
mov
insb
mov
call
xchg
call
sub
mov
iret
pop
ja
nop
in
push
les
inc
cmovl
icebp
adc
in
dec
or
pmaddwd
rolb
fs
sbb
mov
jbe
adc
jbe
test
push
add
shlb
inc
push
andb
jne
in
adc
pop
aas
jbe
add
adc
mov
adc
dec
fidivrs
mov
ja
les
in
xchg
sbb
push
cmpsb
mov
sbb
add
rcr
clc
add
shl
dec
jmp
sbb
insb
cwtl
jecxz
dec
adc
or
ret
fistpl
lock
ds
push
pop
jecxz
mov
in
jb
jl
add
fcmovnu
mov
leave
mov
dec
lahf
inc
pusha
ja
inc
sbb
stc
ljmp
mov
aaa
call
in
push
inc
xor
mov
in
lods
adc
mov
loopne
and
push
push
xor
call
dec
rclb
inc
imul
pmovmskb
and
lret
icebp
add
jo
pop
movsb
and
loop
fmull
cmpsl
mov
mov
addr16
addr16
in
inc
jmp
xchg
adc
sbb
imul
loop
hlt
mov
out
cld
sbb
test
ja
mov
jl
pop
into
fnstsw
cltd
ja
xchg
fwait
gs
xor
dec
outsl
add
sub
push
adc
dec
xor
xchg
fnstcw
jg
cld
mov
cli
lods
xlat
pushf
adc
in
fldz
add
dec
sub
popa
push
adc
and
test
and
pop
loopne
fmulp
xor
jmp
fwait
add
das
lahf
mov
mov
dec
xchg
mov
inc
inc
push
lret
push
inc
xor
test
arpl
mov
xor
lods
cmpsb
int3
std
mov
mov
inc
jl
push
xchg
dec
and
jnp
mov
xchg
xor
sbb
sbbl
sbb
mov
lods
scas
fildl
mov
add
hlt
sbb
jge
pop
mov
dec
mov
stos
mov
in
jp
mov
push
lret
incl
dec
or
clc
in
xor
xchg
jmp
leave
jne
push
mov
jne
mov
adc
mov
pop
arpl
fnstsw
mov
in
cmp
mov
sbb
pushf
mov
push
jno
call
xchg
es
je
int
mov
jbe
add
mov
add
push
inc
sbb
in
push
push
pop
dec
out
insb
popa
xlat
cmp
pop
loopne
repnz
icebp
rcrl
mov
lea
movsb
xor
loope
out
push
sbb
jle
inc
lock
pop
sahf
sbb
adc
xchg
xor
jns
loop
mov
sub
cs
dec
jmp
cltd
icebp
repnz
aaa
adc
lret
cmpsl
aad
push
xor
dec
cmpsl
mov
nop
mov
in
test
push
rolb
orb
ljmp
inc
and
sarb
test
adc
scas
inc
or
sbb
idiv
jb
inc
insb
pop
mov
jge
jns
cmpsb
push
mulb
inc
rorb
rcl
stc
or
inc
push
dec
or
dec
arpl
rorl
cmp
sbb
xchg
hlt
inc
sub
lock
hlt
ja
test
insb
ds
jo
scas
out
cmpsb
pusha
dec
in
pop
movsl
cmpl
xchg
cmp
movsl
mov
jo
ss
out
or
xor
scas
jg
dec
xorl
fstl
mov
xchg
xor
scas
outsb
xor
lods
ljmp
pop
loopne
xchg
sub
outsl
cwtl
rcrl
jo
mov
dec
sub
pop
cmpsl
out
test
jne
inc
add
sub
bound
or
sub
adc
adc
dec
daa
inc
nop
adcl
jecxz
dec
inc
and
cmp
into
aaa
add
cwtl
mov
mov
jmp
jle
push
and
orb
movsl
dec
jns,pn
je
mov
int3
mov
bound
mov
mov
lods
add
push
pop
ja
mov
adc
mov
insb
dec
push
fisubl
cmc
in
sbb
adc
and
sbb
and
and
das
push
dec
xchg
mov
mov
loopne
inc
cltd
add
jge
jae
imull
ja
addr16
scas
out
loopne
loope
aaa
sbb
or
orl
imulb
fsts
pop
int3
int
push
mov
mov
sbb
stos
push
push
mov
jge
dec
mov
mov
je
pushf
fcomp
hlt
sub
sub
js
icebp
jle
enter
and
pop
cld
add
adc
sbb
adc
sbb
mov
pop
test
subl
xchg
push
cld
inc
fidivrs
push
add
pop
push
sbbb
lahf
lock
adc
shrl
es
xchg
ds
mov
ss
sub
out
int3
addr16
pushf
add
jge
pop
adc
in
movsb
fcomip
push
pop
push
movsb
sub
rol
mov
push
cmovae
xor
jg
cmp
and
xchg
repz
xchg
jns
jb
int3
jae
and
pop
jl
sbb
xlat
cli
lea
inc
push
inc
or
fs
push
das
inc
pop
lret
loope
adc
testl
dec
das
lds
test
pop
cmpsl
pop
sub
dec
pmaddwd
cmovns
sbb
sub
mov
mov
push
xchg
push
inc
arpl
cmp
push
scas
xchg
mov
bound
jmp
mov
xchg
lret
dec
mov
loope
pop
cmpsb
and
test
dec
enter
jae
popf
pop
je
outsb
add
or
aad
imul
mov
push
xchg
pop
insl
daa
xchg
mov
inc
cld
test
aas
xchg
insl
pop
cmp
dec
and
int
sti
jp
jo
xor
bnd
cmpsl
iret
pushf
ficoms
sar
lods
or
jnp
sub
jle
mov
loop
out
sbb
jae
imul
orl
add
adc
cmp
icebp
inc
ret
rcrb
jns
dec
mov
push
clc
inc
loope
in
mov
pushf
rorl
test
jg
sahf
ret
std
std
faddl
xor
lcall
cmc
addr16
sti
out
or
loop
sub
inc
push
sbb
loopne
or
cli
pop
idivl
rcrl
xchg
xchg
arpl
addr16
push
pop
pop
push
outsl
mov
sub
pop
cmp
std
push
ss
in
in
test
jmp
rcr
mov
sbb
out
out
sahf
mov
pusha
jno
outsb
push
cmp
rol
jecxz
popa
cmp
mov
xchg
cmc
and
cmpsb
lock
sub
stos
mov
or
mov
stos
add
subb
sar
and
cmp
int
xor
lcall
xor
outsl
cs
and
into
out
or
mov
flds
test
xlat
pop
int3
xchg
dec
cmpsl
stos
cmp
jmp
mov
repz
dec
inc
adc
inc
loopne
test
popf
nop
lret
or
dec
pop
xchg
xchg
cmc
test
and
jnp
in
push
dec
idivl
jecxz
sub
push
hlt
lods
and
mov
adc
sub
movsl
sarl
notb
pop
xlat
pop
roll
ret
in
sbb
mov
loop
std
sbb
pop
sub
jns
add
mov
or
repz
and
dec
mov
push
les
pushf
ret
pop
test
and
lock
xchg
cmc
mov
aaa
outsb
push
int
sbb
xor
and
bound
sti
je
fsts
xchg
sbb
ljmp
rorl
cltd
loope
cmp
or
insb
add
imul
icebp
pop
in
rclb
leave
cltd
inc
mov
jg
jb
xlat
cmp
sbb
out
and
rorb
jecxz
mov
nop
adc
imull
ja
jbe
stc
out
dec
lds
pop
pusha
pop
cmpb
sbb
sarl
mov
mov
pop
add
jns
pop
xchg
jo
dec
dec
imul
mov
jno
mov
lahf
pop
mov
out
push
or
push
dec
sbb
es
mov
ds
je
and
inc
sbb
ss
pop
mov
mov
aam
mov
mov
xlat
sbb
int3
jne
into
mov
lret
pop
and
add
addr16
lret
daa
cmp
addr16
rcr
nop
jnp
into
xor
add
popf
xor
ljmp
jl
arpl
lret
jae
pusha
cltd
pop
xchg
pop
xor
cmp
aas
nop
in
adc
arpl
jmp
sbb
sub
xlat
xchg
lcall
fidivl
dec
bswap
lahf
std
xchg
xor
jp
sbb
and
mov
subl
cmpb
pusha
adc
roll
insl
enter
ds
jecxz
outsl
jbe
mov
stos
xlat
stos
push
lcall
lds
popa
adc
adc
jl
lods
adc
mov
mov
ja
xorb
les
mov
ss
cmp
repnz
adc
dec
ljmp
and
pop
or
inc
sub
mov
jecxz
add
pop
jb
inc
pushf
aas
inc
inc
ja
dec
fmuls
xchg
mov
mov
pop
fisubs
movb
mov
cmpsb
add
inc
mov
loop
in
and
lock
or
cmp
inc
inc
scas
cltd
mov
bound
push
mov
push
pop
bound
notb
sub
pop
fldcw
cmpsl
test
out
lea
adc
les
adc
das
popa
dec
adc
enter
fmul
ret
out
add
inc
call
mov
roll
sbb
push
inc
ret
pop
std
adc
out
clc
lret
adc
test
mov
sub
sti
in
xor
sub
in
imul
jl
mov
sub
push
imul
inc
push
mov
and
lock
push
pop
push
popa
data16
leave
push
inc
xchg
test
pop
fstpl
sbb
pop
xchg
cld
test
pop
xor
mov
pop
addb
sahf
or
fidivs
fucomip
or
pop
std
lock
sub
movsb
fcompl
test
adc
sarl
icebp
in
mov
mov
insb
repnz
inc
enter
orl
stc
jnp
xchg
jbe
xor
dec
cmpb
pushf
shl
mov
clts
ss
push
lret
sbb
xchg
mov
cs
mov
jae
std
clc
fwait
mov
mov
inc
push
or
mov
shll
pusha
mov
inc
inc
sti
sub
cmp
mov
sti
adc
pop
in
mov
mov
mov
xchg
shrb
imul
xor
std
je
jno
stos
test
mov
or
dec
imul
rcr
add
inc
mov
notb
pop
sub
mov
mov
lahf
fwait
aas
cwtl
push
ds
adcb
xor
sbb
aas
sbb
iret
data16
jne
psrld
shrl
jns
es
cltd
es
popa
xchg
aad
push
sbb
xor
or
inc
test
mov
push
sbb
jns
filds
cmp
add
xor
lods
or
ss
inc
sbb
mov
pop
xlat
mov
push
ds
iret
cmpsl
int
stos
xchg
ja
ss
mov
fidivs
imul
fucomp
add
lods
mov
or
push
in
bound
xchg
adc
push
mov
pop
push
lret
inc
pop
loope
pop
mov
mov
xchg
jns
inc
cld
adc
mov
test
mov
scas
mov
jns
cmp
pop
ret
pop
jmp
hlt
aas
sahf
imul
cltd
push
sarl
imulb
mov
rclb
outsl
aas
add
or
mov
enter
shrb
add
or
push
popl
cmpl
loopne
std
adc
int3
mov
rcrl
add
mov
add
add
and
lods
cmp
js
cmpsl
stos
adc
xor
mov
jne
inc
lods
sub
and
cld
xchg
xor
hlt
test
jmp
loopne
xchg
hlt
or
cmpsb
sbb
popf
andl
movsl
jg
xor
movsb
and
dec
iret
push
push
repz
sub
jl
add
not
and
push
and
push
sbb
or
pop
in
inc
lods
dec
loope
aam
cmc
mov
sub
out
xchg
movsb
repz
pop
dec
sbb
aad
jp
add
lea
repnz
jmp
dec
cmp
or
addr16
lods
leave
iret
lds
pushf
ror
ss
cmpsb
cmp
ds
fisttpll
or
mov
jo
add
pop
shrl
pop
aas
call
mov
pop
fwait
lods
push
je
xor
and
jns
lcall
test
mov
mov
xor
movsl
cmp
in
aaa
jle
aas
das
dec
push
gs
das
jae
scas
es
lds
cltd
mov
mov
push
jmp
mov
imul
pop
cmp
daa
add
add
aad
sbb
aaa
ja
int3
roll
inc
stc
fnstcw
mov
rorb
push
mov
dec
mov
mov
cmp
nop
or
adc
jecxz
xchg
inc
dec
xchg
and
inc
xchg
loop
dec
cmpsb
add
sub
cltd
push
dec
cmp
add
jnp
int
sbb
cmp
mov
mov
adc
das
sbb
mov
bound
and
dec
xchg
cmc
cmpsb
out
lods
inc
scas
stos
sbb
ds
adc
ficoml
sahf
dec
out
arpl
or
add
sti
js
adc
sub
flds
popf
mov
imul
pop
cld
mov
shr
sbb
repz
lods
mov
jb
jb
jb
gs
ds
and
leave
faddl
jae
addl
ds
loop
stos
stos
mov
mov
insl
out
jle
xor
push
lods
icebp
shlb
outsl
mov
push
js
push
bound
fdivr
mov
pop
adc
call
test
mov
lea
int
push
and
fisubl
push
fidivl
jl
imul
fisttps
popf
dec
xchg
adc
pusha
out
add
lock
enter
xor
out
shr
add
aaa
lods
pop
lods
pop
insl
out
pop
test
cmp
pop
imull
gs
cld
dec
notl
jb
lcall
cmp
xor
sahf
les
fists
cmp
fcomi
jno
jo
jmp
jecxz
movsl
mov
aam
mov
aas
scas
mov
daa
jecxz
out
mov
inc
cmp
push
ja
cmp
aam
jmp
jle
xchg
outsl
jns
inc
push
sbb
movsl
adc
push
aas
pop
or
fnstcw
mov
xorb
lock
pop
jle
jno
mov
jno
cmpsb
and
lret
lahf
pop
repz
clc
inc
push
mov
pushf
insb
das
pop
mov
cmp
sbb
push
mov
cmpsl
clc
sub
testl
dec
negb
mov
sub
pop
shrl
pop
popf
xchg
shrb
cmp
scas
xchg
cwtl
jo
insl
mov
push
push
mov
hlt
push
pushf
and
movsl
gs
cmp
cmc
rcrb
sbb
and
fwait
adc
pop
push
je
cmp
or
iret
std
in
adc
in
jge
fcoms
dec
xchg
jae
pop
mov
out
pop
cmpsl
outsb
mov
sbb
adc
mov
mov
cmp
inc
push
stc
in
loope
iret
jl
and
dec
fldcw
or
out
mov
cmp
js
icebp
mov
jns
or
xor
pop
xchg
dec
cltd
xchg
mov
enter
in
jmp
pop
lods
or
sbb
dec
pop
lret
xchg
movsb
cld
add
aaa
mov
mov
sub
out
xor
jl
fs
or
jle
daa
out
dec
jle
outsb
xchg
mov
xor
movsl
xchg
stc
loopne
pop
mov
jb
xchg
iret
out
jg
mov
adc
dec
loope
mov
int3
cltd
repz
loop
xchg
ret
push
in
rorl
subl
ss
scas
sub
add
movsb
rcl
lret
es
mov
cs
mov
dec
and
push
add
mov
mov
lds
pop
xor
and
jl
cmpsl
lret
and
mov
pushf
xorl
xor
nop
adc
or
dec
adc
roll
fwait
scas
sub
jl
push
ret
addl
cmp
rclb
xlat
std
push
and
lock
ficoms
push
mov
stos
sub
xchg
lea
out
lods
mov
mov
push
in
pushf
mov
pop
mull
xor
dec
xchg
in
mov
adc
out
mov
sub
xor
pop
sbb
movsl
fwait
loope
dec
cmp
mov
cmp
push
clc
push
daa
pop
int3
or
or
adc
ljmp
jle
ja
rol
popa
add
xor
sti
test
cli
aam
lret
leave
std
mov
xlat
lret
pusha
jge
decl
movsb
xor
js
pusha
repz
mov
or
jle
jle
notb
sub
ljmp
ljmp
mov
mov
sahf
lods
enter
push
int
popa
mov
inc
sub
not
les
jecxz
jbe
add
cmp
or
xchg
add
mov
cmp
inc
rcll
movsb
mov
insb
js
push
jp
cwtl
aad
xor
mov
in
add
jmp
mov
ja
pop
popl
jle
lahf
or
fs
movsb
sbb
scas
inc
imul
mov
mov
sbb
nop
adc
je
mov
ljmp
mov
mov
add
or
xor
or
lods
adc
pushf
sbb
pop
pop
inc
jecxz
and
dec
lea
shlb
cli
sahf
lds
sbbb
dec
mov
data16
lret
mov
push
fmull
dec
jae
daa
xchg
movsb
dec
repnz
cmp
mov
fcoms
mov
inc
add
adc
cmp
dec
mov
push
popa
push
or
sbb
adc
push
loopne
ret
movsl
scas
and
ss
push
mov
cmp
lods
adc
bnd
mov
stc
sub
push
bound
mov
push
push
mov
lcall
mov
mov
push
or
add
pop
in
outsb
sub
test
lret
iret
or
in
inc
stc
jle
mov
cmp
scas
movsl
or
adc
mov
aam
decb
dec
or
sbb
pop
sbb
test
ficomps
adc
ret
cld
out
xchg
call
loop
fimull
dec
in
sbb
sbb
loopne
clc
xor
fstl
into
mov
jl
lds
mov
xor
imull
arpl
mov
pop
shlb
mov
xchg
push
add
sbb
ljmpw
push
mov
lahf
aas
xchg
and
xchg
in
loope
and
cmp
lds
adc
out
ret
jns
mov
mov
sahf
add
pop
jbe
nop
fildl
adc
add
loope
xor
nop
rcl
das
push
sbb
bound
xchg
jno
repnz
mov
std
inc
sbb
mov
mov
pop
js
call
or
arpl
sub
movsb
mov
add
push
or
cmp
int
xor
jne
pop
jne
jp
into
ljmp
lret
stos
repz
add
rcrl
fstpt
mov
mov
outsl
ljmp
out
sbb
sbb
rcl
xchg
sbb
cmp
dec
push
mov
xlat
push
adc
push
ss
sub
mov
jnp
cmc
mov
adc
repz
and
je
xor
mov
aad
mov
adc
outsb
shlb
sbb
in
and
outsb
mov
pop
in
sub
imul
aas
mov
or
out
ljmp
adc
lahf
jmp
aad
pop
lret
call
or
jno
sub
jb
and
roll
pop
mov
or
mov
ret
shll
inc
stos
scas
test
cwtl
cli
repnz
fdivr
les
fs
daa
je
test
or
push
adc
stos
mov
inc
adc
pushf
ret
lock
cmp
mov
fs
mov
aam
push
mov
push
shr
test
jp
jbe
jecxz
fwait
repz
mov
js
andl
mov
idiv
sbb
xchg
push
mov
and
movl
or
fwait
sbb
mov
fcmove
dec
pushf
fiaddl
lock
scas
sub
xor
or
std
or
leave
cwtl
call
push
cs
xor
loope
les
in
int
insb
addr16
mov
ds
adc
subb
push
call
stos
add
sbb
pusha
push
sbb
dec
and
lods
xchg
das
inc
ret
xchg
lret
mov
ss
sbbb
push
xor
dec
pop
mov
scas
jecxz
mov
mov
xor
das
out
paddq
pop
addr16
icebp
or
jl
dec
fwait
cmp
out
ds
scas
scas
pop
movsl
aas
test
jbe
pop
xchg
mov
stos
inc
insl
dec
loopne
mov
pop
repz
xor
stos
mov
and
mov
fimull
push
cmp
mov
add
xorb
xchg
dec
mov
cmp
push
rcll
ds
daa
mov
ljmp
enter
adcl
sti
pop
jmp
push
mov
leave
mov
jae
jl
xchg
add
mov
fiadds
mov
push
adc
enter
sbb
cs
mov
test
adc
pop
inc
hlt
push
inc
test
or
call
dec
fisubrl
dec
ret
xor
push
lds
xchg
bound
xlat
rclb
stos
pop
rolb
xor
loop
xor
rolb
jmp
inc
imul
mov
add
sbb
adc
cmp
sahf
xor
es
adc
mov
adc
push
mov
and
pop
stc
jne
push
push
pop
ja
stos
jb
mov
mov
ret
imul
jl
scas
and
mov
push
mov
enter
mov
mov
or
sub
cld
out
test
sub
or
or
push
jl
sbb
lea
pop
subl
mov
add
push
jne
push
sbb
mov
sahf
stos
dec
push
mov
push
push
ja
xlat
push
mov
sub
gs
push
loop
pushf
xchg
and
fstpt
jb
dec
aaa
push
movsb
xor
dec
adc
stc
mov
gs
dec
dec
adc
maxps
cmp
jle
lret
push
and
pop
movsb
xchg
in
arpl
fs
pop
sub
cmpsl
push
cmp
cltd
fldt
sbb
popa
in
jp
es
jmp
dec
mov
cmpsb
push
cmpsl
call
out
repnz
addl
mov
testb
push
rcll
xor
push
or
ds
and
push
test
pop
int3
sbb
sti
imul
fs
adc
xor
push
out
test
in
jae
inc
sahf
mov
fldz
stc
xchg
filds
nop
xchg
outsl
ror
sarb
mov
ja
inc
sbb
ret
std
inc
cmpsb
clc
inc
repz
pop
push
and
call
dec
lret
in
aas
les
pop
int3
cltd
push
add
push
xchg
lock
jp
mov
xor
jg
test
mov
cmp
xchg
test
mov
xchg
pop
and
xchg
mov
ror
xor
rcr
pop
loop
inc
shlb
mov
int
mov
insl
adc
popa
push
in
or
test
and
lock
mov
loopne
inc
stos
lds
add
add
in
xor
fistl
in
cmp
inc
repz
je
xchg
or
enter
xchg
sbb
sub
dec
loopne
add
mov
pop
test
pushf
arpl
add
pop
adc
xor
outsb
inc
orb
cmp
jno
sbb
cld
sbb
cmp
nop
xor
in
movsl
adc
pop
mov
pop
data16
jmp
pop
jmp
lea
jge
filds
jl
pop
jae
adc
cmp
pop
adc
and
adc
push
mov
repnz
push
addb
adc
rorl
jg
xor
sarb
popf
pop
mov
icebp
iret
inc
test
and
or
pop
cmp
and
scas
hlt
mov
mov
popa
cmp
push
cmpsb
or
sbb
int
subl
arpl
scas
adc
xor
jbe
dec
lods
icebp
push
xor
inc
pop
mov
xor
push
xchg
mov
hlt
and
out
fwait
mov
loopne
cmp
jae
lods
ds
sbbl
loop
cmp
pushf
xchg
jg
jno
jo
das
jns
aad
ret
push
pop
test
mov
pop
popf
push
lahf
enter
mov
jp
stc
cld
sbb
daa
inc
cmp
jne,pt
movsl
enter
pop
scas
cwtl
pop
ds
push
mov
nop
addl
xchg
icebp
inc
insl
cmp
cmp
in
sarl
or
loope
adc
fldl
mov
xor
stos
aaa
inc
sahf
or
adc
mov
out
outsb
mov
add
jl
dec
xchg
sub
sub
lret
push
ljmp
dec
and
movsl
aad
adc
movsb
pop
xorb
lahf
cmpsl
pop
fildll
les
pop
fstpl
sub
aaa
mov
aas
add
push
sbb
xchg
lock
push
and
int
pop
mov
xchg
xor
scas
push
jg
ja
addr16
std
bound
jl
push
xlat
mov
dec
sbb
inc
xchg
jno
sub
test
gs
mov
ds
mov
in
add
push
mov
mov
icebp
sarb
pushf
in
mov
inc
out
or
cmc
mov
ret
aas
fnstsw
lods
sti
mov
xlat
js
mov
popl
cmp
daa
mov
jbe
ret
mov
or
das
jns
and
movb
sbb
mov
adc
jge
pop
mov
jb
mov
push
stos
xor
mov
or
cmc
inc
or
ljmp
inc
je
pop
xchg
jae
stos
jns
in
adc
not
cld
mov
fisttpl
inc
add
and
pusha
into
dec
lods
and
in
adc
int
adc
push
in
in
cs
popa
into
mov
pusha
push
sbb
pop
popf
imul
xchg
andps
mov
ljmp
fsub
xor
jae
jns
rol
or
mov
inc
xor
je
cmp
in
push
rcr
push
cmp
push
mov
addl
jne
stos
sbb
sahf
mov
push
bound
mov
les
cmp
ds
xchg
or
push
fwait
xchg
xor
cmp
mov
popa
loop
jno
add
xor
outsl
fwait
mov
xchg
add
leave
inc
subl
or
xchg
seta
jb
dec
imul
mov
xlat
mov
mov
sbb
inc
mov
adc
adc
pushf
sub
mov
or
mov
mov
mov
popa
cmp
in
stc
xor
mov
int3
ljmp
xlat
movsb
cli
lock
test
out
pop
sbb
lods
add
cld
dec
negb
lahf
shl
sub
or
mov
sbb
andb
and
lcall
or
adc
out
jmp
rol
adc
xor
ss
dec
xor
jne
xor
fidivl
mov
push
xchg
add
pop
ss
jns
add
xorl
mov
pop
inc
mov
cmp
dec
repnz
push
dec
or
lret
jnp
cmp
shl
movsl
push
xchg
mov
adc
out
and
aam
add
std
sbb
leave
out
ret
fwait
mov
je
xor
and
insb
je
sarl
fiadds
mov
mov
push
lods
cmp
pop
pop
fstl
dec
push
repnz
aas
lret
rorl
sbb
shlb
popa
jle
out
adc
rclb
sub
mov
sub
sbb
addr16
mov
pushf
cmp
pop
sbb
jns
dec
scas
repz
jp
inc
in
push
jae
inc
imul
xchg
xlat
push
lret
jmp
pusha
out
subl
and
adc
mov
mov
mov
imul
nop
hlt
decb
pusha
bound
add
push
mov
popfw
jno
ficomps
test
push
and
xchg
pop
jg
dec
or
add
push
dec
sbb
ds
gs
cmp
mov
cwtl
clc
das
test
pop
in
xchg
loopne
and
sti
lods
lcall
ffreep
push
pusha
dec
sub
fisttps
clc
inc
fbld
cltd
dec
mov
push
mov
push
sti
mov
jg
jp
shl
call
dec
daa
inc
inc
test
popf
orb
int
ficoml
adc
and
sub
mov
pop
sahf
push
lret
pop
ret
adcb
femms
mov
int
dec
les
out
scas
test
and
mov
insb
sub
fadds
and
test
push
loopne
and
push
shl
xchg
and
adc
mov
pusha
js
push
and
cmp
insb
mov
fstps
fdivrs
xor
sub
mov
or
ljmp
jecxz
lods
repz
or
outsl
bound
sub
pop
adc
jns
and
sbb
pushf
orl
in
pusha
in
jmp
loopne
push
sbb
xor
iret
sub
add
scas
andb
sbb
in
mov
xchg
outsl
scas
pop
add
mov
sarl
adc
sbb
out
jo
and
lds
or
clc
sub
push
dec
shll
jp
and
test
test
in
fucom
std
ss
repnz
sub
dec
test
sub
jae
mov
data16
sub
dec
jne
jb
dec
sbb
movsb
pop
sbb
ret
es
testb
mov
xlat
orb
jne
loopne
jbe
push
fisubrs
xchg
orl
cmp
enter
sarl
sbb
jnp
mov
pop
xchg
or
push
clc
leave
shrb
and
jg
mov
aam
shll
in
and
push
mov
or
aad
jbe
cmc
rolb
mov
mov
cmp
shl
jle
push
pop
mov
cmpsl
push
jle
andl
pusha
and
lcall
daa
mov
ss
dec
dec
cltd
imul
push
in
and
mov
call
xor
add
mov
jmp
mov
adc
cmp
je
mov
insl
inc
mov
imul
shrb
aas
lret
inc
mov
int
pop
mov
add
jp
roll
jmp
mov
mov
orb
add
clc
sbb
cmp
inc
test
insl
call
sbb
add
mov
or
adc
ret
test
cmp
dec
add
je
es
aam
dec
dec
cs
pushl
cmp
ficoml
mov
test
add
push
loope
pop
pop
out
lahf
and
nop
out
rcrb
or
rorl
adc
jmp
lahf
lods
cmpsl
and
addr16
xor
or
mov
adc
push
sub
jns
cltd
hlt
lcall
adc
push
test
jb
je
mov
shr
jmp
xchg
inc
fdivrl
fdiv
cwtl
push
out
sub
std
es
pop
inc
out
enter
xor
inc
xorb
mov
aaa
rolb
aas
cmp
into
dec
mov
hlt
into
pop
jl
dec
shlb
repnz
xchg
jle
adc
incb
dec
add
cs
aam
dec
popf
inc
out
aas
cmp
sti
mov
xor
cwtl
iret
adc
es
dec
or
mov
or
fcmovbe
in
add
bound
mov
mov
test
dec
adc
jle
test
mov
stos
jecxz
insl
rclb
rcrb
insl
xchg
in
lahf
sub
sub
out
lock
aas
push
push
subb
lcall
lds
aas
push
test
das
mov
pushf
push
sbb
mov
or
push
mov
gs
out
and
movl
sub
pop
xor
out
mov
sarl
push
push
ss
jp
jne
sahf
mov
mov
ljmp
inc
fucomp
rcrl
jp
xor
sub
arpl
inc
sbb
lret
push
xchg
add
adc
inc
in
add
data16
divb
mov
push
stos
rorb
xchg
addb
pushf
mov
mov
cmp
ret
mov
imul
ljmp
xchg
lods
data16
into
sbb
test
xlat
jle
std
inc
cli
out
push
mov
shlb
jmp
pop
mov
scas
adc
inc
adc
fisubrs
add
outsl
pop
xor
rorl
pop
sbb
out
push
lcall
xchg
fisubrl
stos
loopne
sbb
xchg
push
popf
pushf
mov
mov
cmpsl
mov
mov
in
xor
pop
insb
int
stos
or
les
stos
sbb
xorl
iret
ret
push
cmp
inc
add
into
cmp
push
pop
pop
cmp
inc
inc
hlt
or
incl
fs
stos
add
aad
or
xchg
and
mov
movsl
mov
xorl
inc
dec
add
daa
fstpl
into
sbb
pop
shll
mov
sub
push
es
sqrtps
push
int
sub
jno
inc
jnp
xor
adc
test
mov
or
das
push
lods
out
inc
cmp
fucomi
pop
pop
bound
loop
pop
xor
pushf
pop
mov
inc
pop
outsb
test
mov
mov
mov
push
mov
lods
das
je
rol
or
cmp
aam
shl
rorb
push
inc
cmp
push
loop
xchg
xchg
int
jbe
movb
jg
mov
mov
cltd
lock
test
mov
pop
sbb
and
ss
ljmp
jp
cli
pop
sbb
add
fidivs
das
into
mov
mov
inc
mov
sbb
leave
repnz
aaa
js
leave
push
sub
bound
push
or
out
iret
lds
bound
and
pop
hlt
pop
push
rcl
lret
fwait
shrl
and
xchg
push
mov
sub
enter
xlat
shlb
ja
nop
jle
movsl
xorl
lahf
jnp
jl
push
sbb
mov
jle
mov
test
pop
movsl
repz
adc
sbb
xchg
adc
stc
push
arpl
mov
sbb
sbb
sbb
loop
sbb
jl
or
mov
jnp
ljmp
dec
xchg
sub
gs
mov
frstor
and
leave
test
mov
mov
mov
pop
dec
fidivl
in
pushf
movsl
add
test
adcl
xchg
jnp
movsb
sub
adc
and
push
jg
pop
int3
movsb
and
test
sbb
xchg
jle
movsl
stc
adc
int3
sub
adc
ret
sahf
add
scas
mov
mov
lret
dec
sbb
movsb
adc
fmul
mov
stos
int
sbb
fwait
call
imul
sub
push
pushf
enter
pop
mov
fildll
aas
test
jb
mov
ret
loope
mov
testb
out
xchg
mov
or
xchg
mov
fwait
pop
pusha
push
mov
js
ds
inc
add
out
orl
mov
add
std
dec
scas
sti
test
sub
pop
outsl
mov
push
mov
and
cs
jne
xchg
inc
and
fwait
inc
and
inc
lods
jmp
mov
ret
xlat
fistpll
cmp
aam
clc
dec
dec
mov
fwait
cmpsl
test
mov
imull
pop
pop
sbb
push
and
mov
adc
stc
iret
jmp
xchg
push
pop
jl
adc
mov
xchg
dec
add
pop
mov
jl
les
test
xchg
xor
sbb
movsl
sub
sub
ss
fwait
mov
sbb
test
pop
adc
fsubrs
cmc
rcll
insb
shrb
aam
or
data16
cli
lcall
adc
dec
push
insl
xchg
sub
dec
xchg
jnp
stos
out
lock
lahf
leave
lret
repz
inc
sbb
xchg
jg
mov
jecxz
ret
loop
pop
mov
cmp
cmp
mov
xor
pusha
xor
ljmp
test
cmc
lahf
ror
das
fisttpl
daa
stc
dec
neg
imul
sbb
xchg
ret
jmp
push
xchg
shrl
push
sar
shl
and
stos
lds
ss
push
push
pop
inc
inc
cs
jge
jo
xchg
cltd
add
inc
clc
es
jge
in
int3
in
out
data16
int3
idivl
xor
mov
cmp
lret
test
mov
jg
pop
cmpsl
pop
stos
popl
test
clc
ret
pop
test
test
in
xor
sbb
mov
je
pusha
dec
mov
aad
xor
mov
and
int
gs
and
mov
ret
rcrl
in
std
lock
mov
inc
push
jo
adc
sbb
mov
outsl
dec
cwtl
and
push
ss
std
hlt
cltd
jg
ficoml
outsl
xchg
mov
mov
xor
sbbb
cmp
pop
pop
scas
cmp
ljmp
in
mov
xor
out
fldz
bnd
enter
add
mov
xlat
and
lret
ds
movsl
adc
pop
testl
and
cmpsl
ljmp
mov
xlat
in
jae
mov
mov
pop
pop
leave
pop
pop
add
push
movsb
fsubrl
xchg
es
outsl
loopne
lods
std
call
push
sub
push
or
jno
gs
ss
cmp
fnsave
popf
loope
mov
filds
xlat
or
rorl
loopne
int3
filds
sti
divl
pop
cltd
out
xchg
add
sub
sbb
push
ret
lret
iret
push
out
add
mov
ss
inc
jge
sub
fmul
xor
test
call
pusha
repz
mov
movsl
jns
push
lock
jmp
or
jae
jecxz
std
or
movsl
cmp
jle
or
jmp
les
xchg
dec
std
data16
inc
push
das
xor
aam
dec
jnp
jp
out
fiadds
mov
out
mov
push
sub
and
xchg
popl
shl
cmp
mov
in
push
push
movsl
pop
or
lret
stos
add
adc
outsb
xchg
repnz
xchg
imul
jo
mov
push
shrl
mov
das
inc
push
cmp
or
in
and
add
mov
cld
bound
jne
jno
or
xor
dec
lcall
dec
mov
fmull
push
pusha
add
shlb
xchg
nop
testl
and
ds
and
jbe
in
ss
dec
lcall
inc
inc
in
lea
insl
fisubl
xchg
out
addr16
pop
mov
sub
fwait
or
lds
test
pop
mov
jmp
cld
cmp
mov
jne
in
push
std
imul
jb
or
imul
adc
iret
ds
das
fiaddl
jno
push
mov
inc
sbb
das
jnp
lock
pushw
push
jl
mov
outsb
push
or
cmpsb
js
cs
cmp
sbb
pop
dec
orl
xchg
add
jmp
mov
inc
jae
fists
popf
cs
jge
push
sub
test
movsb
pushf
jg
inc
dec
call
jbe
xor
cltd
movsb
mov
inc
sub
mov
fs
sub
mov
repz
add
mov
out
adc
cld
xchg
mov
or
test
sub
iret
addr16
arpl
dec
sbb
aas
inc
sbb
or
out
mov
adc
jmp
push
xchg
pop
lea
mov
hlt
in
repz
dec
ljmp
divl
mov
adc
xchg
inc
mov
cld
pop
add
mov
mov
mov
jo
mov
cmpb
push
lods
jb
inc
add
mov
gs
inc
fsubrp
arpl
adc
bswap
sbbl
cltd
cmp
enter
movsb
test
aas
push
pop
ds
shrl
in
mov
in
inc
xlat
inc
dec
mov
lret
jns
adc
int3
adcb
insb
dec
testb
sub
imul
in
push
inc
xor
jnp
leave
push
push
and
cs
inc
cmpl
dec
out
popa
jbe
test
movsl
inc
mov
or
lods
dec
fcoms
imul
fs
scas
or
sbb
aas
call
adc
adc
popa
and
test
jge
mov
in
push
mov
test
cmp
mov
leave
incb
pop
in
rcrb
adc
subl
mov
sub
aam
dec
cmp
add
leave
aam
push
sbb
imul
jnp
pusha
int
loopne
lret
jle
cltd
mov
push
jno
push
ja
pop
cmp
ljmp
inc
clc
xor
xor
push
sbb
mov
and
and
rclb
push
and
ds
mov
pusha
push
bound
dec
or
fidivs
mov
jecxz
sahf
jge
cwtl
hlt
jp
mov
inc
stc
lea
arpl
fnstsw
mov
push
movsb
xchg
xchg
sbb
mov
and
sbbb
dec
pop
pop
fmull
arpl
iret
adc
addl
inc
push
adc
leave
pop
addr16
and
fdivr
mov
shlb
cmp
movsb
xchg
push
cmp
adc
mov
mov
daa
movsb
rolb
sub
pop
cmp
pop
out
mov
add
shll
push
sbb
ss
aas
push
stos
or
addb
or
inc
in
fsubrs
cltd
inc
in
mov
inc
dec
loopne
adc
stc
imul
push
lahf
or
das
mov
sbb
mov
pop
movsb
imul
aas
xchg
ret
dec
or
fsubs
inc
rorb
ljmp
mov
cmp
xor
jns
cld
mov
bound
xchg
add
mov
xchg
add
cld
and
jecxz
add
icebp
add
scas
or
aam
inc
ret
imul
lret
shll
mov
push
aaa
dec
xor
inc
push
imul
nop
stos
mov
in
cmp
vmread
add
jmp
ret
lock
fs
inc
cwtl
or
jg
jl
sub
rcl
fwait
ror
xlat
lods
and
lret
popf
cpuid
jp,pt
pop
add
add
call
pop
dec
pop
add
rolb
or
mov
cmp
jb
sahf
push
dec
xchg
mov
movsb
and
test
add
mov
push
mov
cmp
test
xor
rolb
dec
push
or
repz
pop
mov
adc
cmpsl
popf
rorl
fisubl
das
and
in
inc
imull
push
dec
push
or
xchg
imul
cmp
or
shll
jmp
inc
mov
dec
dec
shlb
mov
push
into
jb
jle
push
repnz
fwait
sahf
dec
sbb
and
push
in
stos
pop
repnz
rcrb
lret
sbb
cmp
mov
cli
test
iret
ret
movsb
cmp
fdiv
xor
sub
call
rcrl
insb
mov
mov
cmp
dec
loop
test
imul
addr16
xchg
sub
push
loope
outsl
rcrb
mov
mov
sbb
loopne
sub
lea
adc
lods
int
ljmp
not
mov
das
inc
dec
in
jae
fimull
icebp
push
in
jnp
pop
push
fwait
ds
mov
mov
pusha
lcall
aaa
movsl
push
divb
scas
dec
mov
mov
dec
mov
jg
push
adc
push
xchg
mov
xchg
push
je
xchg
jns
gs
call
pop
test
mov
fs
cmp
mov
aaa
arpl
jbe
xchg
aam
pusha
jp
jg
jae
cmp
fdivr
pusha
jecxz
add
adc
xchg
jp
fwait
insl
icebp
arpl
mov
fdivrs
rorb
pop
cld
jp
mov
shll
sti
xchg
inc
mov
stos
sti
loopne
jg
test
pop
xor
inc
pop
pop
jo
push
xchg
mov
sbb
push
adc
cmp
xchg
mov
aam
daa
sub
or
aas
push
repnz
push
add
mov
pop
mov
add
test
test
or
sbb
mov
xor
ljmp
sbb
lret
int3
adc
aaa
in
mov
or
aaa
iret
jg
add
mov
pop
hlt
clc
xchg
fcoml
mov
cmp
pop
adc
inc
adc
pop
bound
dec
repz
push
stos
jns
cmpsb
fs
dec
xor
pop
adc
jmp
outsb
fs
push
imul
ret
cmp
fnstcw
scas
mov
rolb
dec
add
int
xchg
mov
nop
fmulp
pop
cs
inc
outsb
dec
test
mov
mov
ffree
out
insb
adc
ret
sbb
jae
push
js
xor
mov
hlt
xor
iret
jp
mov
test
loope
inc
je
adc
xlat
xchg
lret
in
fwait
and
es
repz
lcall
cltd
add
sub
push
xchg
push
pop
je
mov
fldl
lret
mov
xor
mov
popa
push
inc
sti
push
addl
in
adc
xor
sub
sub
jb
and
add
mov
jl
adc
mov
mov
out
cmp
enter
fcmove
dec
into
lock
jmp
fldz
xchg
adc
ss
and
or
mov
inc
out
sbb
mov
cs
jmp
das
sbbl
jge
cmp
arpl
push
loopne
sbb
mov
jg
lds
aas
fisttpl
or
sub
push
gs
iret
mov
mov
sbb
popf
and
sbb
and
mov
jge
out
daa
dec
mov
cmp
out
test
ss
sub
stc
cltd
sbb
jns
ret
inc
sub
jmp
scas
repz
test
stos
mov
mov
push
push
jae
pop
xchg
dec
mov
xchg
xor
dec
orl
pop
jae
mov
push
cmp
and
add
or
ret
adc
sarb
stos
push
pop
mov
mov
and
mov
xchg
sub
lahf
outsl
sbb
icebp
enter
call
and
mov
hlt
imul
in
xchg
mov
orl
sub
adc
fs
inc
js
dec
or
loop
pop
icebp
mov
cmp
push
pushf
popf
add
sbbl
pop
jge
sub
test
out
test
jb
push
ljmp
mov
jno
xor
icebp
adc
movsb
aam
lods
jge
cwtl
sti
pop
sbb
dec
jns
jle
push
sbbb
imul
loope
mov
divb
inc
fstl
mov
popf
xor
or
cmpsb
shlb
push
or
out
sarl
bound
in
sub
leave
dec
cmpsl
mov
xchg
out
sub
adc
mov
sub
lods
push
shrl
ljmp
rolb
mov
jb
sbb
xchg
sbb
loopne
mov
test
enter
dec
daa
dec
mov
add
adc
xor
mov
push
out
cmp
prefetch
cmp
dec
in
aam
daa
push
cmpsb
sub
scas
fwait
hlt
jnp
jbe
shl
pop
enter
movsl
addl
lock
cld
ret
adc
in
imull
js
rclb
jl
pop
std
mov
stc
xor
mov
cmpsl
int3
fwait
xchg
orb
inc
cmp
xor
divb
fwait
aam
fs
push
sbb
aaa
mov
fidivl
add
lods
fisubs
mov
push
in
popf
mov
and
or
adc
inc
sub
sub
lods
sub
in
test
popf
mov
pop
add
shll
sbb
mov
xor
inc
out
lret
cltd
cmp
cmp
adc
mov
xor
mov
mov
inc
xorb
lds
xchg
repz
or
sahf
adc
sahf
pop
and
shll
mov
add
inc
sbb
notb
popa
xchg
movsb
test
fsubl
mov
int3
es
insb
cli
lds
ss
rcrl
adc
adc
mov
jb
fmul
mov
test
xchg
mov
lods
xchg
out
jmp
sub
xchg
sub
ljmp
lods
xchg
xchg
fistl
sbb
movb
scas
mov
loopne
pop
jmp
sahf
and
xchg
in
push
xor
add
pop
ficoms
scas
hlt
add
push
add
stc
dec
sbb
sbb
cmc
jmp
push
mov
clc
ret
aad
loope
scas
aaa
push
cmp
imul
push
adc
rcrl
push
sbb
or
dec
ficompl
les
mov
les
nop
shrb
dec
pop
ficoms
inc
mov
outsl
popf
mov
or
fs
fadds
xchg
nop
dec
xor
sub
xlat
xor
push
or
les
xchg
ret
loopne
xor
adc
or
add
cmc
pushf
and
es
xchg
es
mov
movsl
mov
insb
iret
es
cmp
aad
scas
xchg
pop
ljmp
jg
fsubs
addr16
call
int3
ficompl
xchg
fstpt
inc
pop
imul
xor
sbbb
ss
int3
pop
mov
lret
fcmove
insb
jmp
push
add
stc
repz
jl
sahf
sbb
insl
cld
mov
push
idivb
adc
test
pop
repnz
jno
mov
push
add
inc
fildll
push
outsb
push
sbb
arpl
popa
fs
hlt
mov
mov
daa
hlt
hlt
cmp
movsb
lcall
inc
mov
xor
mov
rolb
sahf
pop
imul
int
pusha
jo
sbb
lock
rorb
sub
xor
ds
cmp
add
arpl
cmp
mov
stc
xchg
das
pcmpeqw
fildl
int3
mull
mov
bound
adc
aad
xor
pop
pushf
xchg
cmp
dec
jnp
je
mov
pushf
xchg
imul
inc
les
mov
jl
test
or
popf
xchg
or
or
lds
loopne
lods
ja
jno
sub
xchg
ss
mov
cmpsl
mov
iret
stc
mov
test
push
outsb
mov
push
je
sbb
push
mov
nop
insb
ss
and
imul
and
pop
xor
or
push
jle
mov
and
test
cmp
cmp
and
sbb
in
push
lret
inc
dec
sahf
dec
add
popf
rclb
push
pop
push
mov
cmp
in
lods
mov
and
shll
scas
cltd
sbb
xchg
mov
stos
mov
test
clc
inc
mov
sub
imul
cmp
jp
xchg
aaa
jae
mov
push
mov
dec
xchg
cmp
sub
adc
in
mov
sahf
mov
out
call
icebp
sub
out
xchg
pop
push
out
pop
outsl
lock
lds
shrb
ret
xchg
xchg
sbb
ficompl
jnp
ret
pop
cs
ja
ljmp
or
iret
cmp
dec
subl
mov
testl
jp
dec
shrl
movsl
and
mov
cmp
mov
adcb
fnstsw
push
frstor
dec
xchg
jbe
mov
aad
mov
jle
test
imul
lahf
ror
sbb
dec
lock
leave
pop
std
and
dec
sbb
adc
push
xor
mov
cmp
sub
inc
jns
ljmp
inc
mov
adc
sbb
loop
js
fdivl
jecxz
xchg
lods
add
dec
push
mov
incl
sub
add
movsl
rcrb
sbb
sub
loop
push
rclb
icebp
aas
in
stos
mov
and
pop
jae
push
xchg
data16
nop
mov
cmpsb
cs
into
loope
mov
mov
add
aaa
scas
arpl
addl
xchg
jmp
and
ljmp
popa
sbb
das
mov
push
out
insb
push
clc
xor
push
sahf
scas
pop
or
cmp
push
xchg
sbb
mov
cmp
or
scas
jno
mov
inc
xchg
xlat
push
pop
popf
mov
push
sahf
in
mov
into
cmp
lret
and
pop
pop
adc
insb
xlat
mov
or
jae
mov
int
mov
cld
push
repnz
jmp
enter
fisttpl
enter
in
aam
movsl
dec
cmp
enter
bound
dec
cmp
jge
int3
jecxz
jp
sbb
out
sbb
out
sbb
aad
xchg
stc
dec
scas
mov
push
jecxz
in
gs
ss
fwait
in
mov
push
or
call
jmp
sub
jae
mov
pop
cmp
lds
ljmp
mov
addr16
mov
cli
pop
decl
jl
cmp
cmp
scas
or
mov
clc
jle
leave
or
out
cmp
lret
adc
or
push
mov
js
sbbl
push
addr16
mov
addr16
hlt
and
mov
fs
icebp
inc
push
cmpsl
ficompl
pop
in
stos
sbb
out
mov
loope
pop
mov
mov
scas
in
mov
adc
imul
test
xchg
mov
stos
jno
xor
pop
roll
sub
cmp
or
sahf
sub
stos
bnd
fsts
mov
pop
xchg
stos
out
je
push
insl
jmp
iret
dec
lret
and
xchg
sbb
sub
cs
mov
inc
imul
lret
test
push
sbb
imul
pop
mov
jo
jg
sahf
jne
movsb
mov
and
pop
add
cltd
nop
sub
xor
push
outsl
fadd
sbb
rcr
push
mov
pop
mulb
in
jle
sbb
xor
out
sti
jnp
gs
filds
cmpsb
push
dec
cmpl
push
imul
push
xchg
out
and
roll
jmp
fdivl
push
xchg
sub
xchg
out
lcall
je
loopne
and
in
lock
lret
addr16
sub
mov
xchg
fidivrl
ficompl
mov
aaa
jnp
out
dec
cmp
push
mov
mov
popa
dec
popa
mov
add
jp
stc
push
sbb
pop
sub
scas
jg
inc
dec
out
movb
fsts
test
cwtl
xor
sbb
sub
je
enter
sbb
jle
inc
dec
push
addr16
data16
jbe
and
sbbl
push
cmp
inc
idivb
adc
pop
mov
ficompl
inc
jb
movl
or
leave
xchg
ret
arpl
sbb
pushf
repnz
jmp
leave
call
jge
outsl
mov
loope
cmc
add
mov
or
inc
or
fs
push
xor
divb
adc
or
lock
sub
in
xor
xchg
adc
pop
fsubr
in
outsl
push
addr16
xchg
mov
sub
es
pop
insb
cmp
jns
aas
push
push
mov
out
hlt
aam
outsl
cmp
adc
arpl
dec
pop
inc
lcall
pushf
js
inc
pop
push
enter
and
arpl
pop
bound
int3
push
mov
aaa
dec
stos
sbb
test
add
dec
movsb
mov
or
into
jbe
pop
adc
enter
mov
in
fistl
xchg
cmp
scas
repnz
push
mov
jns
push
lret
dec
jb
jp
cmpsb
jp
sahf
in
adc
add
push
and
shrb
jnp
jge
ds
mov
xor
xor
xor
mov
xor
cwtl
jmp
inc
dec
stc
mov
xlat
jle
in
lea
movsl
leave
sbb
scas
cmpsl
mov
jne
xor
data16
jns
add
sbb
inc
sub
sbb
aad
addr16
or
adc
add
std
cmp
iret
bound
xchg
out
jb
jns
adc
xorb
ja
out
mov
inc
mov
int
fistpl
repnz
lock
mov
add
adc
sti
jnp
add
imul
scas
add
mov
cmp
mov
xor
das
hlt
xchg
jo
jns
daa
mov
push
popa
notb
lcall
repz
daa
xchg
fldcw
xchg
inc
dec
xchg
add
xlat
fsubs
mov
test
iret
les
call
xchg
ret
ss
pushf
dec
mov
mov
sbb
pop
and
out
xchg
dec
mov
mov
call
adc
or
rcr
pop
inc
xchg
push
aad
sti
sub
loope
xor
addr16
jns
not
fs
cmp
daa
idiv
or
xor
insb
jge
cwtl
and
pop
testb
insl
jo
repnz
adc
out
inc
mov
cmovo
add
in
loope
xchg
insl
out
cmpsl
or
xchg
push
call
clc
inc
add
incb
bound
iret
pop
sbb
lret
in
sbb
mov
push
ds
add
mov
aam
and
push
ljmp
mov
mov
icebp
es
add
mov
adc
jmp
sub
dec
mov
repnz
cli
pop
stc
and
divl
adc
xor
mov
and
ret
push
push
lret
mov
clc
mov
push
jle
mov
bound
das
adc
in
xchg
dec
not
pusha
or
scas
or
mov
ljmp
xchg
test
sti
sarb
dec
cmc
movsl
dec
aaa
ret
and
movsl
das
and
lret
xor
xchg
jge
pop
or
adc
push
addl
adc
rcll
pusha
sub
sbb
je
xchg
adc
ret
sti
std
lcall
bound
rcrl
or
dec
pop
push
mov
cli
pop
mov
cmc
cmpsl
dec
mov
or
mov
fwait
sarl
hlt
xor
jae
in
jle
adc
or
fwait
stc
mov
sbb
push
or
mov
test
adc
lods
sbb
pop
rorb
push
or
jae
icebp
pusha
mov
sahf
sub
jb
xchg
fs
pusha
mov
and
add
push
sbbl
outsb
sbb
ret
add
outsb
pop
pushf
mov
sbb
push
sbb
adc
xchg
fstpl
push
arpl
jp
cmpsl
push
xchg
insb
shlb
or
negb
outsl
fcmovnbe
pop
inc
mov
mov
push
add
sti
shrb
jge
jmp
add
mov
test
cwtl
cmpsb
mov
loopne
aas
and
add
mov
scas
nop
pop
cmp
xor
fisttps
sub
out
fwait
dec
mov
jb
scas
test
cmp
ret
inc
in
daa
in
mov
stos
jns
cmp
cld
lods
jo
push
out
jb
add
sbb
mov
cmp
test
lahf
xchg
dec
pop
pop
mov
test
int
jo
loope
shl
cmp
js
shlb
mov
shrl
imul
shll
push
mov
lcall
lea
sbb
cmp
mov
sbbl
sahf
sub
jge
notb
test
pmaxsw
and
int
lea
xchg
push
ret
fwait
cmp
jo
mov
cmp
mov
xor
mov
inc
cmp
daa
dec
icebp
or
orb
sahf
or
rcl
pop
popa
es
push
xchg
pop
imul
lret
cli
sarb
jge
fdivr
xor
repz
jb
stos
out
ret
sti
mov
bound
adc
addb
mov
xor
sbb
cmpsb
fstps
add
movsb
mov
jns
xchg
mov
addr16
add
sbb
int3
rcr
lock
mov
add
hlt
add
or
out
push
lret
add
sub
scas
cmpsl
adc
ret
lods
ret
sbbl
repnz
push
sub
jmp
adc
xchg
xchg
negl
pushf
mov
aad
ja
lret
dec
punpckhdq
mov
divb
xorb
push
jmp
dec
fists
je
push
pop
or
rolb
scas
popa
mov
or
jmp
stos
xchg
and
lds
addb
or
jecxz
and
das
insl
mov
jecxz
imul
in
dec
dec
jge
mov
pusha
or
fidivrl
mov
lea
insl
fists
shll
mov
inc
loopne
addr16
scas
out
cltd
push
and
ret
cmp
hlt
jg
sbb
mov
clc
cmp
push
paddusw
insb
mov
aad
out
stos
mov
sub
dec
xchg
repz
pop
sarb
adc
adc
jne
mov
repnz
inc
cmc
jae
adc
loopne
out
jnp
cwtl
adc
pop
xchg
cmp
xor
call
push
gs
add
fadd
inc
xchg
leave
sbb
dec
addr16
lods
mov
shrl
jae
lea
sbb
push
dec
jmp
scas
pop
push
test
repnz
lods
pop
jno
js
pop
mov
jg
pop
loop
cmp
int
enter
stos
data16
ret
lea
or
pushf
fiaddl
rolb
inc
push
or
pop
lahf
cmpsl
rorb
repnz
stos
iret
movsb
mov
or
movsb
cmp
push
push
mov
icebp
cmc
incl
mov
mov
mov
adc
mov
pop
mov
dec
into
subl
je
push
divb
jo
lea
popa
daa
ja
insl
cmp
mov
and
pushf
jae
dec
outsl
jle
fdivrl
enter
jp
fadds
or
outsb
test
cmpsb
add
out
or
aas
shll
cs
into
hlt
add
aaa
iret
test
xchg
push
xchg
mov
sub
mov
jmp
out
jecxz
push
in
jle
pop
loop
inc
loopne
mov
out
or
xchg
push
insb
mov
xchg
ljmp
xor
push
aam
xchg
in
clc
lods
sub
inc
and
mov
aaa
mov
xor
icebp
xrelease
out
scas
mov
out
xor
movsb
sub
cmc
lea
jp
xchg
push
loop
mov
cld
sbb
push
and
fnstcw
fbstp
popf
arpl
in
sbb
pushaw
mov
sarb
xlat
clc
cli
mov
mov
jbe
pushf
adc
xchg
xchg
and
cmp
js
subl
nop
push
adc
and
xchg
or
pop
sub
and
xor
cs
xor
and
daa
mov
mov
cli
decb
out
sbb
sbb
or
clc
adc
movsb
pop
clc
jecxz
mov
sub
xor
dec
mov
add
sbb
jg
aad
lcall
mov
gs
notb
mov
cmp
jl
pop
les
das
mov
repnz
cwtl
dec
mov
popa
xchg
xlat
cltd
and
test
call
xchg
faddl
pusha
scas
pop
mov
add
test
xor
stos
push
loopne
bts
fwait
sub
pop
addl
push
push
mov
xchg
xor
add
or
imul
bound
aam
insb
jae
es
push
in
out
or
push
jns
ficomps
sarl
push
aad
ss
inc
jle
sbb
mov
loopne
loope
lret
dec
in
gs
add
cmpsb
jae
sbb
push
dec
test
sbb
movsl
add
inc
push
cwtl
pop
inc
jbe
pop
scas
ficomps
insl
xor
lock
mov
mov
xchg
sahf
jbe
arpl
enter
or
pop
jecxz
dec
add
arpl
sarb
lds
mov
addr16
insl
insl
scas
mov
ficoml
jp
xlat
lods
or
xchg
mov
jge
pop
stc
mov
fwait
xlat
sbb
add
mov
pop
js
pop
sarb
push
mov
stc
fldl2t
fstl
cmp
cmp
dec
outsl
sub
pop
nop
movsl
add
lods
mov
cltd
inc
inc
push
mov
push
bound
or
mov
adc
jmp
ret
dec
inc
push
jge
stos
jb
inc
aaa
mov
or
mov
or
les
aas
mov
cld
dec
pop
rol
jb
cmp
fistpll
push
xor
aad
pop
push
clc
xor
mov
inc
aam
arpl
mov
push
xlat
imul
and
sbb
push
data16
lods
lret
gs
adc
jle
sbbb
mov
inc
push
jge
cmp
cmp
dec
xor
and
es
xchg
xchg
rep
out
cmpsl
jae
mov
test
insl
mulb
lea
in
jb
and
arpl
pop
dec
dec
mov
shr
pop
loop
aad
jecxz
jo
repz
inc
pop
ljmp
push
lea
mov
inc
movsb
call
sub
sub
and
les
push
ss
imul
sti
cmp
cmp
loope
fsubr
dec
shl
out
or
or
dec
sbb
push
shrb
cs
mov
dec
into
push
mov
or
fcomps
inc
mov
sub
fistl
das
mov
cmp
pop
xchg
ljmp
imul
nop
pop
pop
rdpmc
lret
pop
add
or
ss
rcrb
xchg
lret
mov
jle
cmpsl
pop
lea
mov
pusha
inc
pop
mov
mov
leave
sbb
cmpsb
dec
int3
rcrl
movb
mov
out
arpl
xchg
xchg
xor
dec
loop
jl
and
mov
xchg
aad
shll
xchg
mov
xchg
pop
jecxz
push
mov
scas
outsb
out
cmp
std
lock
cmp
pop
mov
ret
xlat
push
xor
movsl
mov
mov
hlt
ja
loopne
sbb
push
jb
imul
lcall
aaa
and
mov
and
mov
insl
dec
mov
iret
pop
mov
fwait
jp
testl
or
cmpsl
mov
xlat
push
test
add
fwait
mov
imul
pop
sub
dec
inc
lds
or
jle
lahf
dec
jno
pop
popa
inc
stos
pop
int3
mov
xor
pop
jae
decl
pusha
lods
jbe
in
sbb
mov
and
or
lcall
mov
outsb
sbb
mov
in
mov
jbe
pop
inc
xchg
mov
mov
or
push
mov
dec
jmp
roll
in
fldt
sub
movsl
lods
movsl
andb
stc
addl
nop
or
imul
xchg
inc
in
orl
fldl2e
ss
nop
in
repz
push
xor
xchg
fldenv
sbb
xlat
xor
push
mov
dec
push
int
cld
int
sub
pop
test
mov
popf
or
divb
mov
xchg
jno
test
gs
leave
test
into
mov
fidivl
iret
dec
fildll
mov
jg
push
ficoml
jae
mov
and
sarb
mov
les
testb
jmp
push
int3
mov
sbb
push
std
mov
or
sar
sbb
dec
fs
daa
mov
scas
call
stos
mov
dec
cmp
jae
pop
andps
xor
mov
xchg
push
mov
jl
push
es
inc
push
mov
out
or
mov
fsts
mov
and
mov
cli
xchg
daa
sub
lea
ja
and
cmp
xor
mov
mov
cmp
outsl
cmp
dec
cmpsb
flds
fidivrs
mov
pop
add
and
lret
pop
jbe
lcall
or
out
push
or
sbb
xorb
ds
repz
jl
cli
push
sti
sbb
enter
mov
loope
pop
and
int
inc
push
lds
sahf
test
ss
push
or
sbb
pop
dec
inc
sbb
movsb
lret
iret
dec
stos
fmul
lods
adc
nop
jnp
or
insb
sub
dec
rcrb
out
pop
dec
xchg
repnz
jae
test
sub
ret
xchg
rcll
cmp
sub
xlat
or
cmc
adc
je
mov
and
sarb
dec
leave
jmp
and
psubb
or
push
call
inc
cmpsl
lahf
in
sub
cli
xor
dec
cs
popa
xchg
and
xchg
mov
pop
scas
pop
in
clc
cmp
movsl
fcmovnbe
or
stc
jge
jg
fiaddl
pop
or
in
sub
lds
xchg
sti
mov
test
jnp
sub
cmp
mov
add
imul
shlb
and
aas
popa
mov
cmpsb
jp
inc
sbb
stc
aad
out
jp
stc
mov
fcmovu
rcll
testb
jo
sub
jbe
aaa
mov
cmpsl
cli
pop
mov
push
sbb
and
inc
insl
sbb
in
push
imul
and
xchg
or
ret
stos
and
inc
jmp
movsl
jmp
incb
add
adc
jo
test
xor
mov
dec
dec
fwait
xchg
pop
mov
mov
jmp
test
int
enter
and
jne
or
call
dec
leave
sub
movsl
in
stos
into
lcall
std
dec
inc
xor
adc
adc
popa
dec
push
inc
sbb
sub
xchg
in
pusha
mov
push
dec
or
xchg
sarb
add
adc
dec
push
fildll
icebp
cld
das
mov
add
pop
xor
lods
inc
ret
and
scas
mov
jnp
jne
ud2
jno
stos
es
lods
scas
jno
mov
ret
mov
test
jge
es
lods
pop
test
sub
xchg
cmp
in
arpl
jecxz
sub
into
outsb
xchg
jp
pop
mov
test
add
fmuls
mov
inc
out
rolb
push
adc
jo
push
sub
lock
and
das
push
push
or
mov
push
xor
mov
jg
aam
pop
pop
sahf
mov
sub
adc
in
mov
sarb
inc
xchg
fwait
mov
xor
mov
loopne
dec
xor
cmp
inc
divl
xor
fisttpll
push
pusha
cwtl
sbb
lock
repz
sbb
out
lods
outsl
mov
arpl
shr
inc
flds
and
aaa
pop
push
inc
out
sub
pop
aad
cmp
jecxz
lods
mov
pop
dec
iret
push
cltd
add
ret
jp
xchg
or
repz
mov
pop
call
xchg
in
in
cmp
and
addr16
mov
fdiv
insb
aas
je
lock
push
jo
jbe
pop
adc
xchg
pop
les
mov
fsubrs
sahf
mov
add
and
lret
or
sub
pop
leave
or
test
jl
and
int
ljmp
push
lds
test
push
lcall
arpl
aam
das
rcr
cwtl
xor
jecxz
cmp
jo
icebp
mov
adc
cmpsb
loope
mov
push
das
dec
jge
incb
mov
into
clc
lret
int
pushf
cld
mov
icebp
outsl
mov
aas
mov
pop
mov
in
xchg
sub
jmp
stos
xor
push
data16
shrb
xchg
shll
pop
ret
and
pop
popa
decl
xor
xor
jecxz
cmc
scas
pusha
jae
sub
pop
fwait
pushw
vsubsd
fs
popf
jno
lret
outsl
and
jns
mov
iret
pop
sbb
shrb
dec
or
lcallw
stos
mov
fisttpl
ds
test
push
and
inc
movb
mov
icebp
sbb
movsl
pop
lods
icebp
out
push
xor
mov
mov
lods
mov
jmp
xor
cmp
sbb
lock
and
adc
aam
and
xchg
aam
sbb
shrl
sbb
imul
rcll
test
mov
fcmovne
push
pop
je
insl
shlb
mov
movsl
lods
dec
ror
and
std
mov
fidivrl
push
outsl
ror
jns
cmpsb
leave
sub
out
icebp
jecxz
add
jns
test
test
adc
or
inc
loope
fcmovnu
sbb
sub
into
mov
push
xchg
mov
shlb
mov
push
ds
std
and
loope
cltd
test
pop
jae
sbb
push
push
ret
cs
inc
movsb
push
sub
xchg
decb
fcompl
test
mov
xchg
sub
cmpb
adc
in
inc
xor
cwtl
cmpsl
pushf
xor
popf
and
dec
sbb
sub
or
movsb
mov
pop
rcll
inc
and
movsb
je
or
out
out
lcall
das
data16
std
mov
outsb
dec
xlat
pop
rcrb
test
pop
cmpb
sub
jecxz
lods
mov
pop
icebp
mov
outsb
sbb
xchg
out
int
adc
inc
lods
pop
imul
push
mov
cmp
xor
or
dec
xchg
pop
out
cli
xchg
push
xchg
dec
lock
movsb
dec
mov
and
stos
scas
ljmp
lahf
mov
cmpb
cmp
fldl
in
cmp
mov
mov
push
jnp
pop
push
out
imul
adc
into
das
pop
aas
sub
movsb
cwtl
pusha
mov
cmp
inc
es
push
cwtl
out
mov
mov
cwtl
inc
repz
imul
mov
in
xchg
mov
int3
je
push
push
bound
xor
pop
push
mov
lahf
hlt
mov
push
push
lods
lds
dec
gs
jnp
jmp
xor
push
dec
sahf
pop
mov
lods
add
lds
das
jo
pop
mov
pop
push
aam
sub
sbb
sti
movsb
mov
outsl
nop
mov
cli
and
imul
push
and
push
fwait
dec
loope
ljmp
outsl
add
shll
pop
jae
xor
xchg
xchg
jo
mov
push
ss
aas
das
dec
push
sbb
ja
test
popa
xchg
pop
rcrb
mov
xchg
popf
or
adc
sti
xor
mov
fildl
test
insl
in
add
js
fiadds
xchg
push
xlat
xchg
fdivrl
fdivrl
je
inc
fs
data16
fcompl
lret
jb
fsubp
jge
rclb
outsl
inc
mov
or
cs
push
sub
mov
cmp
lret
push
xor
push
pushf
mov
adc
mov
jg
cwtl
out
jle
out
adc
cmpsb
cmc
xor
cmpsb
fs
stos
sbbl
mov
inc
fdivr
ss
lock
daa
movsb
xor
js
arpl
fcoml
call
shlb
cs
mov
or
sbb
pop
pop
leave
fistl
pop
fidivl
mov
addr16
arpl
jb
push
mov
pusha
sbb
cmp
jb
test
test
sbb
and
inc
jb
add
aam
out
fdivrl
incb
fwait
leave
cmp
xor
in
shlb
push
mov
jecxz
ljmp
repnz
mov
cmp
dec
loopne
ds
movsb
inc
and
arpl
out
andb
lds
pop
and
xor
inc
in
pop
xorb
stc
jne
adc
sbb
fidivrs
test
or
in
push
and
push
push
fisubl
orl
inc
mov
movsl
rclb
sbb
add
fnstenv
cli
xor
imul
dec
repz
shlb
pop
push
push
mov
scas
jp
mov
in
rclb
ret
cmp
sbb
adc
jns
xor
cmp
int3
sub
mov
popf
sbb
sub
xchg
or
pop
cli
sbb
xor
mov
cmp
icebp
xor
cmc
fwait
test
adc
popa
or
mov
and
mov
add
sbb
enter
and
cmpsb
jge
sub
jmp
mov
test
sbb
add
xor
lret
arpl
stc
mov
or
jae
xchg
xor
cmp
xlat
cmp
cltd
xchg
movsl
sbb
rcrb
ret
lea
push
jb
jae
out
cwtl
xor
cmpsl
dec
outsb
inc
and
mov
mul
cmpsl
jno
les
in
out
adc
push
xchg
repz
out
and
dec
or
adc
xor
inc
push
loopne
int
mov
loop
mov
lods
popf
iret
pushf
lret
or
pusha
inc
shl
cmp
out
mov
test
fsts
jle
push
sbb
pop
test
sbb
lds
cmp
push
dec
popf
ljmp
pop
and
pop
rorb
mov
loop
fnsave
testl
xchg
cmpps
lret
pushf
ret
lahf
pop
mov
test
dec
insl
dec
cwtl
cmpsl
adc
pop
sbb
into
pop
movsb
lcall
cmpsl
sub
cvtpi2ps
lods
pushf
int3
sub
lea
cmpsl
das
cmp
cmp
mov
jg
jne
fiaddl
xchg
aas
push
icebp
mov
cmp
lcall
dec
repz
mov
sub
rclb
rcrl
jp
int3
gs
lea
add
inc
sub
test
jmp
fcomps
sub
mov
rorb
xchg
int
scas
jecxz
aas
sub
xchg
xchg
fdivl
ja
js
shll
sbb
mov
shlb
flds
and
inc
fbld
jb
jge
cmpsl
jno
xor
ficoms
lret
mov
data16
add
pop
outsb
adc
or
cmp
callw
lds
jb
or
cmc
pop
push
cmpsb
loopne
fnstcw
sbb
aas
loope
stos
pop
xlat
in
xchg
push
push
popf
jnp
lods
roll
cmp
fisubrs
cmp
stos
add
fwait
inc
sti
mov
ds
sub
pop
idivl
push
outsb
jge
jns
adc
rcrb
cld
dec
shlb
jl
adcb
xor
js
rcl
add
fcmovnu
adc
cwtl
push
lods
cli
dec
out
mov
ret
ficoms
cmp
sub
fildll
mov
xchg
jge
rcr
inc
stc
push
outsl
or
cmp
cmp
sub
pop
imul
xchg
dec
mov
pop
sub
lcall
cli
push
sbb
jne
or
xor
mov
push
stos
ljmp
insb
and
inc
insb
ret
and
xchg
jns
scas
rorb
push
and
stos
adc
jo
push
jo
ret
add
fdiv
mov
je
add
mov
pop
call
mov
fs
fcomi
stos
pop
je
xchg
push
xchg
repz
mov
xor
stos
sti
test
jns
stc
push
outsl
xlat
dec
add
inc
sarb
test
sbb
mov
test
insb
outsl
fcomps
mov
shll
clc
xor
mov
stos
repz
idivl
inc
rorl
sub
cmp
inc
push
sbb
mov
or
test
mov
movsb
aaa
inc
jne
lods
gs
mov
psadbw
mov
imul
mov
add
sti
daa
pop
hlt
rcrb
cltd
rol
inc
gs
scas
sbb
jl
adc
out
loope
jns
xor
insl
mov
push
imul
movsl
jl
mov
mov
aad
test
ficompl
or
dec
push
jp
cmpsl
xchg
or
and
mov
loopne
sub
push
outsl
mov
mov
sbb
xchg
xrelease
rcrl
adc
test
mov
and
es
fs
in
fdivrs
jp
and
in
fcmovnb
cmovbe
pop
xchg
fcoml
add
inc
lods
mov
or
cmp
jecxz
test
xchg
mov
icebp
popf
jge
push
pop
mov
jo
xlat
sbb
scas
cmpsb
jnp
fmull
je
hlt
ss
repnz
sub
out
in
and
sub
mov
xchg
or
xor
jge
push
pop
movsb
dec
lret
test
mov
pop
icebp
mov
lods
movsb
and
data16
insb
adc
pusha
pop
mov
imul
jbe
leave
xchg
orl
push
pop
outsl
aaa
and
in
stos
jns
iret
add
xchg
jecxz
push
push
cmp
push
push
lahf
mov
pop
arpl
jno
pop
inc
in
enter
adc
gs
xor
flds
cltd
push
loop
mov
lds
cmp
push
loop
adc
loope
push
cmc
inc
pop
ds
lahf
cmp
sbb
test
jns
jl
inc
or
mov
jle
mov
je
lea
mov
add
aaa
imul
popl
sub
cmp
orl
dec
mov
pop
and
mov
xchg
dec
push
lahf
cmp
in
xor
test
and
aaa
repnz
cwtl
stos
mov
dec
rclb
cltd
push
pop
cltd
mov
int
inc
sbb
repz
adc
fdivrl
xor
mov
add
sub
test
scas
jno
andl
stos
push
aam
fisttpll
or
xchg
das
sbb
sub
pop
fidivrs
xor
cld
and
mov
ror
lahf
adc
push
inc
pop
jno
adc
push
add
test
pop
insl
popa
dec
jnp
push
and
cld
or
or
push
jl
std
mov
jg
pushf
test
je
and
out
xchg
loopne
jp
rolb
adc
jae
xorb
std
rcrb
cmpsb
icebp
out
repnz
shrb
jne
jo
out
cmp
sbb
rcl
mov
ds
mov
shlb
pop
clc
sub
adc
sbb
cwtl
push
push
sbb
lcall
mov
je
cwtl
cmc
cmpsl
mov
mov
dec
test
sub
cmp
repz
pop
xchg
pushf
cmp
data16
mov
pop
popf
dec
adc
sbb
mov
add
mov
mov
jne
daa
leave
icebp
testl
cmp
js
pop
andb
sub
xor
icebp
dec
out
sub
clc
dec
int3
and
dec
mov
sub
dec
push
inc
lcall
dec
bnd
lods
xlat
adc
and
ja
adc
out
in
jl
loop
addl
mov
mov
in
lcall
dec
cli
imul
clc
jge
add
jge
push
pop
in
sbb
leave
ret
inc
push
xchg
or
jae
mov
leave
push
subl
sbb
jne
into
cmpsl
mov
sbb
pop
inc
nop
sbb
sub
out
sub
xchg
inc
gs
jmp
fdivrl
sti
int3
pushf
or
mov
jmp
xor
imul
js
push
in
std
sbb
jbe
adc
filds
xchg
mov
sbb
sub
mov
es
stc
es
sbb
inc
fsubl
aad
scas
xor
adc
sbb
lods
out
call
lods
pop
push
or
push
sbb
div
mov
fidivrl
frstor
pop
inc
mov
jecxz
jge
rcl
lods
and
jecxz
jne
jg
les
lds
mov
push
in
and
and
xchg
mov
mov
sub
arpl
fbstp
xlat
inc
pop
aas
push
std
lods
lea
adc
jbe
decb
xchg
add
or
dec
lcall
stc
dec
ret
push
add
dec
subb
leave
cmpsl
lea
ret
cmpsb
xchg
sbb
or
pusha
and
add
sub
outsl
lods
inc
dec
ret
repz
or
fisubs
loop
add
shr
test
inc
cmp
xlat
or
das
mov
dec
test
call
das
lods
jecxz
pop
cmpsl
inc
jbe
rcrb
add
pop
imul
lds
xchg
sub
jno
lahf
pop
out
inc
aad
in
add
xchg
je
and
mov
jbe
pushf
imul
fidivrl
cmp
adc
leave
jp
push
stos
sbb
jbe
rorb
xchg
pop
xchg
cltd
inc
and
mov
push
dec
add
sub
jg
rorb
subb
xchg
push
mov
imul
cli
or
mov
imulb
out
jmp
arpl
shll
inc
in
xchg
test
pop
and
stos
dec
fildl
pop
mov
ja
test
xlat
sbb
xchg
adc
fs
dec
cld
mov
lods
enter
xchg
inc
cmpsb
and
mov
pop
repz
mov
jnp
xchg
jno
push
notb
push
mov
cld
mov
rcr
pop
add
sarl
enter
lock
jmp
pop
aad
inc
mov
dec
out
mov
stos
addb
mov
jge
fistl
std
iret
push
mov
and
mov
dec
clc
pushf
ror
mov
daa
xor
or
stos
stos
jns
lods
fdivrl
mov
sbb
idivb
sbb
lret
xor
sbb
cmp
mov
push
adc
inc
dec
push
push
roll
inc
mov
jle
sarl
xorb
adc
stos
cmp
or
and
fidivrl
insb
lret
or
js
aam
inc
pop
pop
sti
movsl
dec
ss
dec
scas
decl
lcall
adc
xchg
xor
mov
in
mov
jno
aas
je
or
jns
lods
push
mov
fbstp
jo
dec
pop
sarb
lock
call
ret
sub
lods
jne
cmpsb
push
fdivrl
pmullw
stos
xor
dec
out
mov
sbb
jg
jmp
and
xor
in
mov
sub
popf
push
mov
jo
pop
jp
pop
mov
jecxz
rorb
movsb
pop
imul
dec
in
sbb
mov
scas
jle
out
jp
cmp
cmc
popa
lret
insl
cli
or
sarl
imul
inc
popa
jb
jl
mov
mov
jne
xchg
sbb
xor
insb
mov
mov
adc
xchg
and
lods
push
das
jp
xor
sbbb
aas
xchg
mov
jo
xor
fdivr
pop
shl
in
xor
mov
jmp
mov
cmp
mov
pop
and
mov
dec
subb
shl
test
sbb
mov
test
mov
jg
movsb
dec
mov
dec
enter
aam
cmpxchg
inc
add
mov
stos
loopne
sbb
inc
sbb
int3
call
popa
cmp
sub
jge
ljmp
enter
test
pop
mov
popf
pop
rol
mov
cli
jecxz
sti
mov
fwait
mov
test
imulb
jecxz
pop
icebp
inc
pop
loop
pop
cmp
xchg
lahf
pop
outsb
out
pop
mov
sub
nop
sbb
sbb
shrl
or
jp
or
fmull
cmp
data16
fwait
cli
fiaddl
pop
mov
or
faddl
push
jnp
jecxz
dec
mov
inc
cs
mov
dec
cmpsl
push
cwtl
cmp
outsb
add
fildll
scas
inc
add
or
scas
loope
enter
pop
jno
xchg
xor
int
jmp
xchg
sub
movsl
pop
inc
negl
dec
mov
mov
cmpb
aas
mov
ret
jmp
ss
lods
sub
addr16
fisubrs
push
push
test
mov
jecxz
in
mov
pusha
pop
sarl
and
pop
ret
mov
xchg
in
pop
xchg
mov
mov
mov
mov
mov
push
repnz
mov
push
mov
xchg
insl
fldenv
in
add
bound
loopne
push
mov
lods
pop
cld
mov
lahf
dec
call
add
or
sbb
jbe,pn
pop
sub
push
xchg
stos
add
xchg
imul
inc
imul
cmpb
clc
push
push
jge
mov
std
add
push
ret
xchg
stos
xchg
adc
clc
push
lret
pop
dec
add
sbb
lods
pop
aam
cmp
xchg
xor
xchg
stos
popf
sbb
int3
mov
xchg
mov
xchg
data16
adc
adc
inc
fists
pop
js
pop
fildl
int3
cmp
adc
xchg
sbb
lret
or
in
jl
sbb
cmp
stos
mov
jle
add
inc
mov
and
inc
jae
or
pushf
dec
sahf
rcrb
bound
adc
insb
or
pop
jle
in
loopne
mov
or
pop
ljmp
mov
sbb
mov
insb
cli
mov
repnz
mov
mov
or
mov
pop
rcrb
cmp
lods
shll
sbb
mov
and
add
cmp
add
or
sbb
jnp
lret
mov
xchg
push
jne
in
clc
rsm
sub
mov
dec
dec
imul
cld
jecxz
xchg
jbe
xchg
adc
orl
push
xor
out
dec
mov
out
imul
out
test
and
push
andb
out
xchg
rolb
jge
push
lahf
insl
add
sbb
xor
test
movsb
sti
sbb
andb
fmull
jge
aas
push
pop
mov
fisubrs
xchg
inc
or
push
or
loope
xchg
ja
js
dec
pop
out
ss
fsubrs
xor
jg
lods
imul
loopne
and
js
ret
aad
aas
adc
mov
test
repnz
arpl
in
leave
cmp
push
xchg
mov
enter
hlt
je
inc
insb
sub
addr16
or
into
cmpsb
js
pop
adc
pop
cli
and
pop
adc
pop
in
cltd
adc
sub
popa
ljmp
mov
pop
dec
adc
pop
call
add
and
out
out
lahf
and
add
push
icebp
pop
xchg
div
add
std
or
repz
mov
jae
or
mov
jmp
icebp
jl
sub
pop
orl
lahf
movsb
and
arpl
push
pop
in
inc
mov
divb
idiv
out
mov
pop
out
jle
inc
fs
add
into
insb
roll
mov
or
sub
xchg
cmpsl
or
shrl
lahf
lods
lods
push
test
and
push
fcmove
jle
ror
cmpsl
scas
outsl
jnp
xchg
fisubs
ss
push
stos
jo
mov
xor
cmp
xchg
pop
add
inc
loope
pop
sub
fs
ds
pop
xor
into
lods
push
sbb
cmp
fst
fucomip
and
mov
cmp
sub
ja
movsb
sub
cmp
cmp
inc
xrelease
dec
cmp
mov
fucomip
dec
icebp
sbb
ret
jnp
mov
and
dec
test
ret
lds
jmp
push
push
and
mov
lahf
repnz
nop
sbb
push
pop
mov
cwtl
jae
add
cmp
or
cltd
movsb
sbb
imul
sbb
aam
jg
scas
dec
mov
bound
in
adc
xlat
pop
insb
inc
jg
inc
mov
dec
mov
imul
shrl
aam
fstps
cmp
mov
sub
nop
arpl
daa
mov
mov
repnz
sbb
jns
arpl
bound
aad
test
xor
repz
and
add
push
bound
mov
loop
icebp
fdivl
rcrb
jge
lods
push
dec
sub
pop
aam
push
mov
xchg
jge
out
int3
lahf
pop
mov
movsb
lcall
clc
fsts
mov
jecxz
subb
push
jo
xor
mov
pop
orb
push
jge
mov
lods
pop
dec
sbb
ja
and
add
ds
adc
inc
push
or
sbb
push
mov
je
adc
push
mov
xchg
cmp
imul
cmc
dec
mov
cs
or
jne
loopne
das
bound
fstps
lods
or
pushf
and
das
leave
hlt
ss
xor
incb
jg
test
pop
pop
cmp
imul
mov
inc
dec
cwtl
ss
aad
outsl
ljmp
fsubrp
mov
push
imul
xchg
lea
mov
imul
mov
call
lods
jle
xlat
push
lea
jp
shl
in
push
xchg
push
jb
push
aam
loopne
out
pop
ds
mov
inc
decl
scas
ja
cmp
imul
push
cmp
fstps
shld
mov
or
inc
mov
aad
mov
repnz
iret
push
outsb
cmp
addr16
push
lret
dec
aas
ljmp
sbb
icebp
mov
sbb
int
inc
out
push
and
dec
cltd
fs
pop
cmpsl
sub
mov
and
mov
lock
shll
lret
sub
inc
sub
jle
jo
ss
mov
jecxz
les
sub
js
lcall
jns
sbb
mov
arpl
stos
test
cmp
pop
jne
xor
mov
adc
sahf
negb
test
insl
mov
shll
xor
rcll
loop
lahf
les
and
js
call
sub
push
es
js
das
inc
fwait
xor
xlat
addr16
test
mov
jo
idivl
cmp
jae
imul
scas
adc
lods
dec
test
test
iret
je
jle
cmpsb
outsl
mov
mov
in
xor
les
sub
cmp
aas
xor
gs
fsub
fwait
dec
push
adc
cmp
jge
rcrb
rcrl
mov
adc
insl
cmc
pop
mov
dec
std
xchg
clc
cmpsl
push
mov
aad
and
pop
or
push
popa
cltd
pop
mov
in
mov
mov
aaa
mov
stos
rcll
mov
cmpsl
xchg
int
sbb
in
mov
jo
push
fldenv
cmp
out
xchg
cmp
movsl
and
and
jle
jns
inc
jp
pop
push
push
fwait
xor
pop
inc
inc
int
lock
int
mov
fwait
push
lcall
popa
cmc
xor
jmp
out
aam
pop
pop
ja
xchg
fwait
mov
fstl
xor
mov
and
es
pop
dec
push
rol
xchg
or
sbb
adc
out
loope
cmp
dec
sbb
xorl
test
mov
xchg
in
idivb
push
adcb
push
lret
pop
es
data16
fmull
push
dec
cmp
aas
js
sub
into
lds
pop
add
sub
inc
xchg
dec
or
fidivs
orb
daa
loope
inc
ret
mov
push
andb
xlat
cld
pop
int
mov
idiv
orb
shll
or
xchg
cmp
sub
cmp
jbe
in
in
adcb
cmp
bnd
orb
bound
call
scas
xchg
sub
scas
mov
inc
dec
and
test
js
xchg
fcoms
phsubw
sti
aaa
adc
and
lahf
pop
mov
mov
sahf
cmp
fsub
sti
je
jmp
dec
dec
lods
call
mov
imul
dec
push
push
ja
les
es
into
adc
jns
mov
mov
xor
xlat
addr16
cs
out
call
fimuls
jae
pop
mov
push
stos
scas
pushf
idivb
xchg
ss
sbb
hlt
lret
jp
fidivs
sbb
or
cltd
mov
pop
sar
adc
int3
mov
insl
and
sub
cmc
add
jbe
insl
fdiv
cli
jbe
aad
and
nop
idivb
push
jns
ss
sbb
cltd
sub
dec
sbb
inc
fldenv
stos
sbb
sarb
cld
mov
jns
ds
loope
in
push
adc
das
jle
loopne
fidivl
xor
or
xor
shrl
mov
jge
mov
es
pop
pop
dec
fxch
mov
clc
jo
xor
inc
test
dec
loopne
addb
inc
lds
sub
jnp
es
push
rclb
dec
dec
cmpsl
ret
inc
lret
and
jnp
push
adc
fwait
adc
mov
in
popf
call
incb
je
mov
add
pop
pop
mov
sbb
inc
aas
int
out
rcll
dec
jae
mov
push
inc
or
lea
cmpb
push
test
mov
mov
or
mov
lods
ljmp
push
shr
in
je
push
or
push
in
cwtl
ljmp
imul
aas
into
es
in
push
inc
inc
add
dec
cs
outsl
add
mov
cmp
xorl
sbbl
cmp
sarb
fdivrl
jecxz
xchg
or
fdivrl
testb
aad
out
sbb
jmp
shr
insb
sbb
leave
pop
pop
repz
pop
fmuls
loopne
sbb
dec
rcrb
add
imul
jge
xchg
nop
inc
xor
rorb
fldl
clc
jne
test
outsl
sbb
xor
scas
cmc
inc
push
packssdw
jbe
adc
movsb
in
mov
popf
pop
clc
mov
and
add
jnp
push
dec
push
mov
xor
push
or
add
jno
ss
sub
test
push
mov
repz
adc
push
cld
insb
jge
push
mov
cmc
dec
daa
sbb
out
imul
pop
enter
xchg
pusha
push
fs
icebp
pop
push
int
dec
xchg
dec
outsl
xchg
push
imul
xchg
mov
mov
adc
mov
mov
gs
fwait
sub
pop
jbe
xchg
inc
dec
push
xor
cmp
cmp
xlat
iret
mov
and
lcall
inc
adc
add
in
andl
ljmp
ja
sti
in
sahf
cmc
xchg
ss
dec
ja
fcomps
cmp
sbb
push
push
ret
lods
mov
repz
jne
testl
add
lret
xlat
fdiv
mov
jge
rorl
xchg
jecxz
mov
es
addb
imul
rclb
ljmp
pop
dec
jge
lret
cmp
inc
xchg
mov
adc
mov
mov
sub
hlt
fdivrs
scas
xor
mov
stos
fdivs
jp
mov
test
inc
jbe
outsb
cmp
test
or
sub
mov
xor
mov
and
inc
pop
cmp
push
into
nop
pop
sti
and
outsl
cli
andl
jle
dec
and
mov
ret
arpl
cli
inc
or
push
lods
ja
push
out
imul
stos
and
es
push
xor
jmp
shl
xor
sbb
hlt
dec
loop
inc
sbb
mov
inc
cld
mov
test
outsb
outsl
mov
test
fstps
xorl
cwtl
ret
vpshlq
imul
xchg
pop
push
or
mov
inc
xor
in
pop
sbb
or
pop
call
jecxz
mov
sbb
mov
cmpl
in
cli
cmpsl
scas
jge
repnz
push
das
mov
daa
sub
adc
mov
fldcw
rcrl
imul
sub
jne
mov
mov
fadd
repnz
jge
fisttpll
out
fistpll
cmc
arpl
lahf
pop
repz
xchg
push
mov
push
out
inc
lcall
pushf
sbb
jmp
lods
jb
mov
jmp
test
icebp
adc
clc
outsl
test
jge
je
xchg
jl
test
and
cwtl
adc
xchg
jnp
neg
in
nop
xchg
adc
xor
mov
cmc
sbb
mov
push
lcall
inc
imul
out
sbb
ja
mov
sbb
and
mov
rep
cmp
fwait
in
pop
sbb
push
sti
xor
addr16
mov
sbb
call
in
cmp
add
mov
jg
sbb
pop
mov
fsubs
lret
and
sbb
jne
adc
pop
and
lcall
pop
pop
dec
aad
pop
adc
add
lahf
mov
dec
sub
loop
cmp
and
icebp
fs
in
out
cmp
lcall
lret
popf
addb
ret
imul
jp
and
sbb
dec
xor
push
sbb
arpl
lret
mov
xlat
jg
xchg
hlt
mov
stos
jne
retw
ljmp
js
sub
xor
lods
leave
rolb
inc
ror
add
push
outsl
das
dec
repnz
jnp
les
arpl
pop
ja
test
jne
and
jo
test
ret
inc
mov
mov
lods
clc
cmp
xor
ja
imul
pop
sbb
mov
pop
inc
fdivl
dec
xchg
repz
mov
jb
dec
pop
subb
shll
outsl
mov
pusha
loop
pop
adcl
sarb
and
cmc
mov
aaa
scas
leave
xlat
lahf
cmp
inc
stc
sub
daa
in
mov
lds
daa
scas
popa
hlt
sub
inc
xor
add
push
fwait
or
lds
inc
or
adc
xor
mov
mov
xor
lahf
jns
xor
push
scas
push
jno
in
imul
mov
mov
std
cmpsl
mov
pop
jmp
adcb
call
jmp
push
mov
test
lret
ret
push
push
adc
adc
pop
and
dec
inc
cld
fucom
and
inc
ss
cmp
clc
lds
scas
nop
pop
xor
scas
loop
mov
xchg
mov
push
dec
sub
pop
lret
dec
pop
aas
jmp
mov
out
mov
pop
jecxz
popf
arpl
sub
ja
ret
loop,pn
jnp
leave
jns
pusha
jae
sub
xchg
xchg
addl
pop
nop
lods
cmp
cmp
mov
xchg
mov
divl
jnp
js
mov
mov
js
shl
movsl
dec
filds
mov
psllq
sbb
xor
pop
test
call
sti
movsb
out
out
xor
je
push
jo
js
mov
popf
mov
lds
push
cmpsl
inc
decl
sti
xlat
mov
std
add
test
add
sti
divl
inc
dec
dec
pop
in
leave
sbb
inc
clc
and
push
outsb
or
adc
dec
cltd
test
jae
mov
pop
rolb
push
cmp
mov
ja
cmpsl
std
shlb
sbb
jb
not
or
push
sahf
mov
pop
mov
out
mov
xor
movsb
iret
aas
mov
movsl
sbb
inc
pusha
xchg
or
mov
pop
bound
loope
mov
pop
jb
lcall
int3
rol
and
xor
sbb
movsl
mov
inc
je
xor
icebp
decb
imul
mov
sbb
xlat
loop
pushf
mov
sbb
mov
lds
incl
je
push
push
pushf
rorb
pusha
int3
sar
pop
adc
xlat
and
xor
int
icebp
lahf
rcr
loop
hlt
aam
or
sub
fadds
cmpsb
xor
repz
mov
sub
addr16
xchg
cmp
sahf
mov
iret
xor
jmp
lcall
inc
lret
inc
ja
push
mov
cld
and
sbb
std
aam
aam
or
popf
vunpckhps
jge
inc
mov
push
or
pop
es
aad
inc
pop
faddp
dec
inc
out
inc
sbb
cmp
sarl
jg
pop
mov
pushf
roll
scas
xchg
cld
sbb
adc
push
inc
lods
movsl
push
je
clc
xor
xchg
nop
mov
xor
aam
cmpl
cmpsb
or
daa
jmp
out
mov
jo
lret
rcll
sti
adc
mov
sarb
fcmove
idiv
dec
dec
pop
testl
fsubs
sub
jbe
das
lahf
mov
jbe
push
mov
jle
fsubrl
movsl
or
mov
xor
popa
cs
push
fstps
in
cli
and
sbb
mov
sub
es
mov
aas
xchg
dec
mov
fwait
sar
dec
lret
mov
std
pop
adc
hlt
ficompl
add
lahf
inc
adc
or
adc
push
or
sarb
push
cmp
adc
push
mov
js
scas
popa
loope
mov
mov
pop
inc
jecxz
pushf
aas
pop
or
adc
cmp
cmp
xchg
pop
dec
and
imul
push
out
push
mov
outsb
push
ljmp
data16
mov
adc
add
or
ja
xchg
movsb
xchg
cmp
sarb
mov
insl
cltd
push
inc
cmp
adc
into
sbb
bound
mov
rcll
mov
xchg
pushf
pop
call
xchg
pop
es
mov
sbb
and
push
pop
mov
xchg
mov
cmp
pop
pusha
jns
xor
dec
fidivrl
lds
mov
lock
push
cmp
mov
push
sbb
add
xchg
mov
xlat
fidivl
or
jmp
sub
and
fisttpll
sti
insl
push
cmp
hlt
data16
fcmovbe
sub
cmpl
nop
mov
and
pop
cmp
xchg
pop
in
scas
pop
ds
bound
jle
mov
add
scas
push
dec
sub
call
dec
aam
xor
pop
outsb
movsl
clc
addr16
pusha
outsb
add
sbb
cmpsl
scas
shll
pop
jbe
lahf
cmc
dec
in
data16
push
outsb
mov
sbbl
inc
mov
aas
hlt
mov
ja
adcl
cli
cltd
femms
xchg
dec
test
data16
js,pn
lea
mov
mov
and
pop
test
into
scas
xchg
inc
adc
mov
cli
les
lahf
out
icebp
mov
mov
sub
push
push
lahf
jns
sbb
fsubrs
jnp
test
test
sbb
xchg
imul
xchg
mov
add
xchg
adc
daa
push
push
lods
adc
sahf
dec
push
push
les
mov
mov
gs
sahf
sahf
cltd
adc
add
out
sbb
insl
outsb
outsl
pop
stos
pop
fisubrs
xchg
jmp
mov
cmp
popf
sub
inc
ret
sub
push
mov
es
popl
mov
addl
rorl
dec
inc
adc
into
dec
stos
add
mov
or
dec
shll
jno
insb
jg
hlt
sub
cld
sbb
sbb
out
test
fbld
inc
subb
rcll
rcr
leave
xor
mov
mov
jl
jno
push
rcrl
adc
mov
cs
dec
lock
enter
adc
inc
stos
insb
aad
test
mov
sub
push
pop
scas
xor
or
data16
out
lret
push
cmpl
mov
jne
addr16
int
es
and
scas
loop
les
push
dec
and
rcrl
pop
call
jmp
ljmp
out
aas
icebp
movsb
add
andl
orb
adc
jns
mov
push
mov
or
jo
inc
fcomps
orl
daa
mov
int
fstpt
hlt
cmpsl
popf
test
fdivr
scas
push
leave
fldenv
mov
stos
fnstsw
test
ljmp
mov
sti
mov
pop
xor
out
loopne
push
or
push
sbb
sub
sbb
int
fstps
mov
add
lret
add
mov
pop
jne
mov
inc
test
arpl
push
mov
lahf
cmp
loop
cli
lret
and
fsubs
xor
xchg
mov
sbb
lock
je
jp
sbb
int
imul
push
mov
fldl
enter
js
xlat
mov
cs
and
pop
lods
dec
cld
inc
stc
push
sbb
int3
loop
sbb
scas
sbbl
jbe
arpl
mov
imul
into
xchg
test
push
jge
add
insl
sbb
jl
pop
mov
jno
or
inc
aas
cld
jns
imul
sahf
pushl
icebp
xchg
or
xchg
mov
xchg
or
jo
xchg
jle
mov
add
jge
test
xchg
fildl
or
jae
mov
sub
ret
sub
enter
pop
dec
mov
insl
movsb
xor
push
and
clc
bnd
out
add
daa
mov
xor
fdivs
jo
fadds
xor
cltd
and
mov
aas
cmp
aas
or
sbb
mov
incb
pop
pop
rolb
cli
loope
jno
fistps
pop
icebp
xchg
jecxz
aas
xorl
leave
clc
xor
or
jbe
in
push
in
mov
mov
cmpsb
test
mov
test
mov
adc
sahf
add
cmp
movsb
push
adc
jp
add
outsl
mov
dec
icebp
adc
fidivs
sbb
shlb
lret
push
xchg
adc
xor
push
cmpsl
inc
es
fcmovnbe
fidivs
lret
out
sbb
data16
mov
mov
lret
ficomps
lcall
out
mov
sbb
fcmove
in
stc
push
scas
addr16
aas
negb
imul
push
fsubl
xchg
std
leave
jnp
jge
jno
jge
fildl
jne
and
loope
sbb
js
sub
cmc
dec
inc
test
xchg
pop
js
shl
fnsave
adc
pop
xchg
push
int
int3
sbb
mov
jbe
lods
rclb
inc
fdivrs
call
jns
in
fsubl
outsb
pop
xor
jmp
scas
pop
add
xor
jle
pop
test
push
xor
or
rclb
dec
mov
and
into
dec
jns
test
inc
fisubrl
fisubl
sub
test
adc
les
ljmp
cmpsb
push
adcb
in
test
test
int3
outsl
stos
sub
cltd
insl
pop
jbe
in
scas
mov
mov
aaa
push
lea
fimull
push
ffreep
dec
ljmp
add
lahf
jmp
bound
cmpl
iret
test
push
pop
lcall
and
push
xchg
in
xchg
add
and
rorl
ja
xchg
fstl
mov
add
pop
pushf
lret
sarl
das
sbb
movsb
lea
cmp
dec
in
mov
jns
add
fadds
mov
sbb
or
add
aaa
subb
bound
hlt
xor
hlt
sub
imul
jno
pop
mov
sbb
push
xchg
dec
xorl
inc
dec
cmp
pop
xor
pop
subb
mov
jmp
pop
or
inc
cmp
dec
popl
jl
mov
fsubrl
inc
cmp
stos
test
outsl
adc
ja
jb
pushw
or
inc
push
lahf
sub
inc
jmp
inc
inc
xlat
popa
fbld
or
mov
or
popf
adc
xchg
jg
enter
add
sbb
sub
add
cli
movsl
fsubrl
and
sub
pushf
cld
cli
idiv
popf
inc
cmp
inc
push
add
push
xor
cmp
cmp
lret
pusha
adc
or
lods
or
pop
ljmp
jl
idivl
push
or
xor
shr
adc
xchg
mov
mov
push
jg
sbb
lahf
pop
dec
add
mov
mov
xor
outsl
push
sbb
sub
inc
shr
push
in
lret
and
push
inc
push
into
mov
mov
sbb
jno
xor
pop
lods
rcll
xlat
xchg
pop
xor
fwait
insl
inc
inc
push
rcrb
hlt
mov
repz
mov
xor
add
out
jmp
mov
xchg
mov
cmp
jbe
cmp
das
cmc
out
imul
popf
insb
stos
enter
pop
push
cmpsl
xor
clc
sahf
mov
push
xor
cmpsb
outsb
dec
and
arpl
in
xor
scas
xlat
pop
adc
outsl
in
in
xorb
mov
xchg
cmp
iret
je
aas
jp
lds
rcrb
mov
push
dec
arpl
out
add
daa
cld
popf
lret
or
je
jo
sub
xor
mov
and
enter
jmp
cmp
clc
jb
dec
stos
imulb
jle
pop
cmpb
enter
lret
mov
repz
cmp
jb
sub
sub
jo
push
dec
orl
jg
jb
das
lods
jb
mov
mov
shlb
mov
mov
add
jnp
or
inc
jg
and
push
lods
ret
cmp
or
pusha
in
xor
sbb
fs
inc
jle
push
rcll
and
out
mov
cmpsb
push
sub
test
and
daa
adc
and
orl
jle
test
mov
ss
test
rclb
cmpl
push
mov
or
jne
and
xor
inc
pop
fdiv
dec
pop
aaa
and
inc
push
and
sub
xchg
push
mov
ret
add
xchg
xlat
add
ja
sbb
gs
gs
movsl
cmpsl
lock
xchg
ret
pusha
hlt
add
jl
sti
mov
scas
loop
cmc
push
iret
aas
push
int3
push
pop
xor
sub
push
ja
orb
ss
cmpsl
xchg
enter
fisubrl
shrl
mov
and
xchg
lods
jmp
sti
mov
cmp
jbe
cltd
sbb
jg
fcompl
sbbb
aad
pop
xchg
sbb
or
sahf
movsb
add
mov
in
lahf
xchg
push
pop
sbb
or
mov
loope
pop
cltd
dec
xchg
sti
lds
sti
clc
push
mov
je
sbb
lods
leave
sbb
pop
outsb
into
push
dec
call
cltd
popf
adc
jo
mov
push
add
sbb
call
repz
subb
push
inc
ja
or
idivl
mov
sbb
inc
push
rorb
mov
mov
and
stos
adc
sbb
jbe
and
sub
aad
loope
mov
inc
mov
cmc
movsb
push
add
vunpcklps
mov
push
ret
push
mov
push
xchg
or
out
pop
hlt
repnz
sub
clc
test
pop
repz
mov
dec
in
mov
inc
out
addr16
in
shll
cmp
cmp
insl
insl
pop
sub
es
push
ljmp
jmp
jg
dec
dec
dec
cwtl
iret
sub
in
psrld
pop
cmc
rol
lods
add
add
fdivs
sbb
lahf
loopne
je
push
enter
gs
nop
int
adc
xchg
xchg
int
lret
dec
inc
es
lods
sbb
in
sub
addr16
xchg
inc
js
add
push
fsubrs
mov
lock
push
jns
push
pop
push
fs
jmp
in
rolb
mov
cmp
pop
cmpsl
popa
arpl
pushf
fidivrs
xlat
jmp
jle
xchg
or
jg
nop
jno
bound
iret
daa
inc
adc
cmp
pushl
lock
mov
cmp
popa
or
sarb
push
enter
xchg
sbb
mov
das
inc
imul
lods
daa
cmp
xor
enter
push
cmp
outsb
ja
pusha
cmp
xor
fprem1
xchg
jmp
cmc
push
repz
dec
sub
cmp
imul
adc
mov
bound
push
imul
fdivrs
js
xchg
xorb
push
sbb
xchg
adc
push
xchg
pop
pusha
in
gs
xchg
stos
das
decb
push
jno
or
sarb
into
inc
sbb
xchg
lods
cmp
testb
into
push
jle
xor
ljmp
pusha
mov
dec
inc
dec
xchg
cmpsb
scas
xchg
repz
dec
xor
pop
jge
xor
xlat
mov
dec
das
sub
orb
xor
mov
mov
mov
adc
shl
push
lods
popa
sbbl
fsubl
inc
out
ss
xchg
shlb
xchg
das
adc
ljmp
aad
cmpsb
hlt
push
pop
push
sub
arpl
add
imul
stos
mov
sbb
or
daa
and
sti
or
std
fsubl
xchg
or
aas
fbstp
mov
xchg
pop
inc
or
fstps
dec
pop
jmp
adc
out
fstp
aad
incb
arpl
outsl
lock
xchg
sub
leave
jmp
rcr
jo
xchg
popa
fwait
testb
xchg
movsb
push
pop
lcall
loop
lds
mov
pop
mov
ret
icebp
mov
lods
xchg
std
lahf
mov
ja
clc
flds
xor
pop
movsb
in
or
mov
jle
adc
pop
dec
scas
movsb
icebp
popa
adc
mov
pop
fiaddl
fs
jecxz
adc
outsb
daa
das
ljmp
pop
movsb
outsl
cmp
rcrb
sbb
jp
lods
fs
ficoms
lods
stos
into
inc
jnp
test
cmp
pop
dec
sahf
and
shll
cmp
mov
test
dec
xchg
adc
or
xchg
mov
dec
pop
in
out
cmpsl
pop
ds
add
push
shlb
fdivrl
or
jp
push
adc
jb
xchg
jo
and
push
xor
mov
shlb
push
jnp
jo
mov
leave
pop
cmpsl
xchg
or
push
shrl
test
lret
dec
clc
push
jp
cmp
ds
add
pop
mov
sbb
add
cli
lock
scas
out
pop
add
dec
jg
sbb
mov
aas
rolb
and
enter
fsubrs
sub
push
push
jmp
sub
xchg
push
lds
sub
dec
and
imul
fldenv
push
out
cmp
ret
fdivrs
pop
xchg
lds
rcl
sub
repnz
add
xor
fisubrl
jg
xchg
ja
xchg
clc
jmp
aam
push
mov
and
mov
jg
xchg
loopne
or
mov
les
stos
sub
jecxz
in
fnop
push
jno
cmpsb
push
sbb
or
push
mov
jmp
mov
popa
sti
inc
fiadds
es
stc
cwtl
cmp
jae
push
mov
dec
cmp
repnz
gs
dec
and
dec
inc
cmc
push
cmpsb
xor
pushf
mov
lods
les
mov
xor
fldcw
sbb
pop
pop
fisttps
mov
xchg
jmp
adcb
nop
inc
lret
das
or
mov
mov
mov
add
pushf
or
cmc
push
repz
test
rolb
jg
rolb
ljmp
daa
mov
les
icebp
stos
inc
xchg
icebp
mulb
push
xchg
dec
mov
inc
gs
or
add
sub
cmp
sbb
int
cltd
cmp
ret
jnp
mov
add
jmp
stc
or
dec
ljmp
rcrb
and
jg
push
insb
xorb
lret
and
adc
jns
popf
adc
push
int3
cmp
jae
cmp
adc
add
dec
sti
mov
ret
adcb
mov
stc
rorb
sub
dec
push
push
push
push
xchg
inc
xor
xor
mov
shll
pusha
jnp
dec
or
pop
ss
xchg
xor
mov
out
jmp
mov
outsb
cltd
lods
clc
js
cli
fildll
push
sbb
jmp
mov
mov
mov
or
pop
mov
fs
push
cmp
scas
push
pop
popf
outsb
fwait
in
xchg
sbb
or
jns
lods
arpl
jbe
pop
stos
pop
dec
aam
std
push
test
sarl
mov
cs
pop
mov
negb
jle
inc
cltd
jp
ljmp
nop
adcl
insb
mov
jno
sbb
test
daa
inc
imul
dec
shl
mov
push
push
or
sahf
mov
push
cmp
sbb
xor
push
and
movsl
jl
mov
mov
clc
sbb
popf
and
cli
incl
loop
jp
jne
stos
and
mov
sbb
arpl
in
pop
dec
daa
loop
in
xchg
mov
je
ljmp
sti
mov
cmp
lods
inc
dec
arpl
pop
mov
loope
out
cmpb
mov
inc
call
out
push
sub
dec
lahf
add
daa
bound
mov
cmc
push
push
push
push
out
adc
jge
adc
and
xchg
adc
mov
stc
jo
dec
lods
adc
jbe
sahf
insb
ficoms
insl
into
jno
push
cmpsb
int3
push
sahf
shl
xchg
mov
inc
sub
imul
lea
cmp
fsub
stos
push
fadd
jo
pushf
pop
cmc
or
jnp
mov
mov
loop
ds
js
push
push
test
imul
test
loopne
movsb
xor
int3
add
scas
xchg
clc
dec
inc
mov
xor
mov
dec
sub
cmpsl
aad
nop
cmc
cwtl
xchg
rcll
test
rep
sarb
addr16
fwait
cmpsb
pop
cmp
popf
aam
bound
sub
aam
ficoms
xor
mov
cmp
ss
jae
fcompl
or
add
sub
xorl
and
roll
lods
dec
subb
add
mov
dec
or
faddp
scas
daa
mov
repnz
fmull
ret
mov
pop
pop
mov
stos
fcoms
jge
cmp
sahf
adc
test
jmp
es
cmp
fdivrl
push
jo
and
mov
inc
jbe
mov
fsubr
add
repz
cld
jno
pushl
cltd
or
movsb
mov
mov
lock
mov
mov
scas
hlt
mov
lcall
xlat
in
pop
test
ja
shlb
xchg
movsl
xchg
stc
push
jle
hlt
adc
sahf
hlt
int3
or
test
dec
mov
in
fisubs
scas
push
cs
push
inc
cmp
ss
out
es
test
sub
insb
sti
pop
sbb
subl
inc
mov
and
into
pop
xor
sbb
pusha
mov
mov
js
cmp
and
mov
mov
xchg
fildll
push
jl
call
jmp
xor
divb
sahf
cmp
mov
jecxz
out
sbb
xchg
stc
xlat
imul
jmp
sub
call
into
fists
ss
jl
mov
xchg
rcr
icebp
arpl
xorl
inc
sbb
movsb
dec
adc
or
popa
mov
cmp
pushf
dec
mov
and
mov
clc
lock
popa
pop
xchg
mov
test
lea
add
adc
cwtl
sar
adc
stc
mov
popa
aad
into
ja
fldt
push
adc
xchg
cmpsl
mov
mov
sub
sub
and
cmp
add
dec
jmp
pop
cmpsb
lods
inc
pop
cli
pop
push
int
out
pushf
mov
out
pop
jle
scas
xchg
or
mov
pop
dec
outsb
jle
inc
pop
dec
inc
stos
enter
out
xchg
dec
mov
sahf
sbb
repnz
lods
add
sar
inc
sbb
push
cmp
xlat
leave
sbb
mov
pop
pop
fwait
out
mov
jne
inc
adc
push
popf
pop
mov
xor
sub
push
push
mov
dec
pop
test
hlt
je
dec
insb
cmp
mov
push
fisubrs
stos
ja
and
add
push
cwtl
mov
ret
rorl
mov
ds
notb
test
rolb
notb
jno
movsb
sub
iret
das
mov
inc
mov
clc
cmp
cmpsb
dec
rclb
add
xchg
xchg
loope
jo
outsl
fbstp
dec
push
sbb
xchg
xor
sbb
mov
push
or
mov
lods
xchg
sub
push
jae
and
sub
lahf
loop
and
or
test
fprem
pusha
mov
sarl
subl
sub
sahf
daa
or
movsl
adcb
sub
sub
ja
mov
subb
test
cmp
das
push
mov
call
addr16
test
sbb
fwait
pop
push
shll
cld
dec
pushf
out
sbb
push
fwait
in
shrl
imul
lret
bound
adc
mov
mov
fadd
daa
gs
ja
rclb
or
jle
sbb
mov
and
mov
inc
cmp
sbb
fsubrs
and
mov
call
xlat
add
sti
int3
mov
stos
add
aas
add
xchg
dec
cmp
pop
mov
movsl
dec
xchg
pop
add
cmp
mov
inc
scas
push
cmp
pop
lock
mov
sub
das
lods
sub
sub
aad
and
cld
daa
pusha
adc
jae
popa
inc
test
shll
rclb
jecxz
jmp
mov
cmpsl
fdivrs
fistl
arpl
popf
jae
mov
or
mov
dec
inc
cld
jnp
push
and
inc
lock
cmpsl
add
xchg
fisubl
outsb
cwtl
leave
rcll
xor
jnp
ja
test
cmpb
fstps
loopne
inc
frstor
jge
icebp
and
dec
pop
add
adc
addb
inc
mulb
dec
rclb
jo
lret
pop
int
push
imul
outsb
mov
inc
test
jbe
ss
push
jnp
mov
jbe
ljmp
lret
and
cmpsb
jmp
xchg
mov
inc
mov
mov
test
or
jo
daa
ja
add
mov
lret
jo
arpl
xchg
fidivrs
cltd
push
mov
xor
jl
mov
movsb
xchg
push
icebp
enter
inc
daa
mov
push
pop
xchg
mov
add
jo
lods
arpl
jnp
push
mov
enter
fisubs
jge
outsl
pop
subb
mov
inc
and
mov
lods
fidivl
popf
rcrl
pop
lea
cmp
xchg
inc
jno
hlt
in
sub
xchg
call
out
out
fs
pop
adc
enter
mov
cmp
mov
jo
add
das
outsb
lea
xchg
rolb
dec
aaa
cs
lcall
jo
shrl
mov
or
dec
mov
test
and
dec
movsb
ret
scas
xor
leave
or
rcrb
jne
xchg
clc
pop
mov
dec
push
push
clc
lods
fdivl
inc
and
iret
mov
or
or
filds
mov
or
push
pusha
test
or
sbb
mov
mov
adc
fiaddl
test
jp
imul
push
adc
shld
lock
push
aaa
subl
adc
push
popf
movsl
into
aad
test
ds
insb
int3
jecxz
mov
ss
xor
xchg
jnp
push
mov
out
xchg
nop
adc
repnz
pop
add
inc
mov
imul
mov
push
out
sub
mov
jo
push
rcrl
imul
pop
movsl
lods
mov
dec
fldl
imul
adc
in
stc
xchg
inc
pop
cmpsb
negb
cli
mov
ljmp
cmc
xor
sub
out
push
add
pop
enter
xchg
sbbb
test
lcall
jo
sbb
aam
nop
aaa
mov
call
pop
aad
xor
cmpsb
inc
pop
out
jno
repz
pop
in
pop
ss
push
rclb
mov
sbb
mov
cmpsb
in
mov
in
sbbl
or
sbb
adc
jecxz
pop
cmp
test
iret
mov
out
push
mov
xor
shrb
sahf
je
cmp
or
orl
out
rclb
pop
mov
fst
out
dec
sbb
out
xor
jbe
jmp
lcall
int3
cmpsb
out
xlat
pop
dec
scas
cwtl
mov
mov
adc
lret
int
mov
pop
aam
in
dec
in
push
and
ficompl
xor
cmpsb
icebp
mov
std
incb
sub
adc
xor
sti
repz
jecxz
pushf
lock
shr
xchg
sub
jae
jbe
outsb
push
cwtl
in
in
fiaddl
or
cmp
mov
insl
and
jne
into
jae
lcall
cmp
adc
nop
movsl
jle
in
pop
mull
dec
int
fnsave
stos
cld
stos
sbb
mov
xor
loope
hlt
std
sub
adc
cwtl
fnstenv
sub
xor
unpckhps
arpl
xchg
lods
cmp
mov
mov
xchg
popa
sbb
dec
or
or
negb
in
int
jae
orb
pop
ja
subb
pop
xor
adc
repz
jae
dec
test
lock
xchg
out
sub
adcb
mov
repz
ret
ds
cli
inc
jle
stos
dec
sahf
dec
shrb
rcl
xorb
loopne
sahf
dec
addr16
sub
fs
mov
push
add
or
xchg
adc
mov
add
adc
sub
inc
jbe
mov
popa
outsb
rorb
leave
fstps
pop
xchg
and
push
shlb
mov
jmp
dec
push
cmpsb
cs
ljmp
push
adc
je
pop
outsl
push
in
xchg
and
scas
or
cmpb
dec
and
or
aad
das
mul
push
cmpsb
mov
mov
adc
inc
aas
sar
cld
aam
xchg
jge
call
cmp
and
xchg
mov
fildl
mov
mov
mov
stos
test
mov
push
sbb
cltd
jle
stos
les
orb
out
pushf
jle
jnp
mov
je
ss
insl
inc
cmpsb
jno
xlat
push
daa
mov
sarl
into
dec
sub
in
mov
in
hlt
ret
cmpsl
movsb
xlat
xlat
repnz
pop
xchg
xor
add
movsl
pop
jb
xchg
popf
addb
js
add
pop
aas
push
adc
pop
or
subb
push
jmp
dec
push
add
jb
xchg
inc
push
fdivrp
ret
jae
rolb
les
ror
sub
adc
fs
shrl
or
mov
mov
adc
mov
movsb
add
loope
push
mov
repnz
mov
pop
push
es
or
popf
notb
fs
stos
jmp
sarb
push
pop
inc
clc
mov
dec
mov
movsb
sti
ret
sbb
fucom
mov
jo
ret
outsb
or
fnsave
aas
iret
mov
insb
mov
ljmp
push
push
in
imull
fistpll
cmp
mov
mov
jl
lret
pushf
jo
pop
inc
jo
pop
dec
or
fdivrp
inc
sbb
pop
out
jp
sub
flds
cmpsb
push
xlat
adc
jmp
xor
imull
mov
mov
repz
ret
mov
fnstenv
lods
lret
cmpsl
in
mov
xchg
adc
fsubr
cmpsb
pop
jmp
js
mov
sub
adc
sbbb
fistps
xchg
out
or
in
insb
outsb
hlt
mov
pop
jl
sub
push
cld
xor
jmp
fdivr
arpl
stos
rcll
notb
inc
sub
arpl
mov
lahf
lods
pop
out
movsbl
sub
adc
xchg
daa
dec
push
dec
xchg
inc
adc
fbstp
andl
inc
in
sub
das
pushf
enter
pop
test
xor
rcrl
mov
scas
cmp
daa
push
lret
subb
stos
ret
jmp
out
out
dec
arpl
movsb
xchg
nop
mov
daa
test
jl
mov
decl
test
xchg
dec
add
es
xchg
pop
sarl
inc
adc
jmp
loop
pop
outsl
es
js
pushf
pop
and
add
push
ja
add
loopne
dec
sub
nop
cmp
lahf
sbb
test
inc
xor
sub
imul
sub
je
jg
out
pusha
sbb
cmp
and
dec
movsl
pushl
dec
loopne
add
ja
or
insb
out
push
lret
and
xchg
sbb
mov
mov
out
adc
jl
dec
mov
adc
xchg
jmp
test
inc
add
in
adc
sbb
les
cmp
inc
xor
popa
notl
mov
out
jmp
dec
shlb
mov
fcomp
lods
sbb
pop
jne
sbb
out
ds
das
repnz
dec
rcl
pop
movsl
scas
xchg
mov
aad
and
dec
and
aad
je
mov
jbe
pop
rolb
push
push
es
inc
andb
shrb
xchg
xchg
mov
jnp
in
jnp
pop
cmpsl
push
je
xor
lea
into
int3
and
xchg
ljmp
and
xchg
add
jl
jge
cmp
sti
aam
push
popf
push
mov
push
shrb
sti
jg
sbb
jns
nop
sub
mov
and
pusha
xchg
xor
and
pop
insb
add
lods
push
xchg
pop
xchg
loop
aaa
inc
xchg
dec
test
int3
sub
push
dec
addr16
and
adc
lock
out
int
stos
mov
sub
add
push
jl
rol
mov
enter
add
mull
jg
pop
dec
lcall
mov
jnp
sbb
das
push
jnp
fs
and
dec
orl
pop
mov
sub
and
dec
add
inc
xchg
sbb
pop
fcoms
push
pop
hlt
pop
mov
xchg
popa
or
mov
xchg
hlt
scas
fdivr
stos
cmpl
mov
mov
push
int3
jns
and
add
mov
adc
stc
lods
scas
inc
jo
dec
gs
stc
xchg
daa
scas
push
ljmp
ds
cmc
ja
mov
outsl
jp
mov
loope
movsl
adc
in
cmp
jae
jmp
daa
sbb
pushl
ss
mov
inc
gs
aaa
hlt
push
pop
pop
inc
push
add
lahf
lods
shrb
adc
js
enter
data16
cmp
xor
and
in
xchg
andb
je
cltd
adc
inc
add
pop
stos
movsl
jbe
les
pushf
ret
pushf
movsb
sub
outsl
insb
cmc
je
mov
je
push
or
dec
sbb
adc
dec
rcl
xchg
cmc
rorb
ror
popf
pop
in
mov
add
inc
lret
adc
xor
inc
xchg
or
imul
mov
arpl
dec
push
repz
add
and
lret
pop
ljmp
icebp
aam
mov
xchg
in
cltd
into
add
sbb
xchg
cmp
cmp
popf
daa
push
inc
inc
loope
xorl
push
fxch
pop
dec
adc
cmpsb
arpl
sub
cltd
loope
add
movsb
call
fildl
popf
fs
or
jnp
jp
shll
xchg
arpl
mov
mov
loopne
int
std
fwait
aas
imul
mov
mov
and
arpl
jne
push
add
pusha
xchg
out
fists
daa
pop
sti
popf
stos
das
jo
push
dec
icebp
jecxz
loope
inc
fisubrs
adc
jb
push
std
add
dec
jmp
clc
imul
lock
and
or
and
bound
or
adc
lods
fsubs
fisttpll
lods
adc
sbb
sbbl
divb
or
push
arpl
ja
push
dec
cld
fistps
fsubrl
jge
test
inc
push
jnp
mov
stc
rclb
add
stos
inc
sbbl
mov
mov
mov
sti
jmp
sub
popf
push
pop
inc
mov
xchg
adc
cs
stos
out
mov
xor
jne
sahf
add
popf
in
and
push
add
movsl
imul
mov
lret
dec
repnz
popa
int3
test
ja
mov
fstpt
cwtl
js
jl
jecxz
daa
cmp
cmp
stos
jge
mov
les
pop
xorl
movsb
mov
sbb
lock
popf
xchg
imul
sahf
mov
or
jge
mov
ja
xor
inc
inc
xlat
add
lret
stc
icebp
xchg
mov
and
test
outsb
push
pushf
pop
sbb
xor
pop
adc
push
ffreep
push
movsl
je
sub
repz
out
mov
test
mov
sbb
int3
stos
testb
mov
subl
pop
mov
dec
popa
mov
test
nop
and
push
mov
aaa
sbb
cmp
mov
xlat
xchg
pop
stos
and
inc
lret
xchg
nop
sar
das
mov
mov
push
in
cmp
jl
or
push
testb
rolb
sar
adc
dec
sbb
sar
outsb
cmp
inc
push
sub
rol
dec
or
and
mov
rol
test
pop
stc
push
xor
xchg
push
test
inc
mov
mov
push
movsl
bound
mov
xchg
jl
sub
rorb
js
rol
inc
fists
push
mov
test
sub
sbb
dec
popa
fucomip
repnz
jge
mov
shll
add
cs
jbe
mov
dec
outsl
push
mov
cmpsl
or
mov
in
imul
shlb
movsb
je
inc
fs
in
nop
and
insb
mov
movsb
jb
xor
repz
shl
push
xchg
mov
stos
outsl
dec
out
sub
jae
jge
lahf
sbb
loop
mov
xchg
rorb
daa
scas
push
pop
sub
sub
icebp
inc
pop
xlat
sub
mov
dec
xor
xchg
fs
jno
test
push
je
push
enter
mov
rcrl
stos
sub
int3
or
pop
inc
cltd
lret
push
insl
lods
mov
imul
or
les
cwtl
dec
lea
fstpl
aam
push
outsb
mov
cmp
or
lods
inc
and
fwait
bound
and
mov
adc
sbb
xchg
jecxz
sub
inc
dec
fs
push
mov
dec
mov
xchg
fucom
add
jp
bsf
and
mov
addr16
call
dec
cld
insb
out
decl
sahf
or
andb
mov
test
jo
sbb
test
scas
movsb
and
cmp
jg
mov
cmp
xor
lcall
mov
rclb
mov
aad
push
inc
sbb
sahf
jecxz
js
mov
cld
jecxz
loope
pop
pop
cmpsb
js
xchg
sub
in
inc
lahf
aaa
shrl
cltd
xchg
in
ret
inc
sbb
jl
insl
in
imul
lret
jge
les
es
ds
inc
movsb
jns
mov
pop
orb
adc
pop
inc
imul
imul
mov
aad
pop
lahf
jae
mov
dec
pop
push
and
and
dec
adc
push
push
lods
test
dec
fistpl
icebp
std
ss
dec
aam
imul
sub
add
adc
sbb
sbb
pop
mov
xlat
adc
and
loopne
add
leave
jae
push
addr16
push
mov
pop
mov
fistps
cli
push
mov
adc
and
xor
lods
xor
imul
or
pop
inc
and
sbbw
aam
mov
dec
sub
in
arpl
sbb
jb
mov
subl
fsubrp
nopl
push
test
cmp
fwait
ss
std
stos
pop
add
scas
sbb
stos
cmp
fidivs
loop
pop
mov
sti
sub
and
dec
insl
or
mov
pop
mov
xchg
mov
xor
pushf
adc
xchg
movsb
ret
mov
adc
mov
mov
xchg
add
push
cltd
mov
jbe
ljmp
ret
cmp
jecxz
push
std
xor
xchg
test
adcb
mov
jg
data16
lret
int3
push
js
hlt
xlat
sarb
fldenv
scas
ror
jecxz
fistpll
sbb
and
mov
jb
lds
cmp
adcb
das
add
ds
xchg
mov
dec
cmpsl
sub
adc
mov
inc
shl
jae
scas
sub
int
inc
hlt
div
cltd
cltd
outsb
aas
push
dec
dec
or
lock
out
out
das
loopne
jb
dec
pop
pop
repz
pop
fmuls
sub
xor
dec
call
loopne
push
xor
jns
and
lret
jns
inc
xor
push
adc
jbe
sbb
in
pop
incl
and
mov
ljmp
repz
leave
sbb
sub
adc
jge
aad
movsl
add
loope
xor
push
mov
cmp
jle
ja
and
dec
movsl
shr
add
sbb
cmpsl
mov
pusha
sbb
in
sbb
test
push
and
xchg
shlb
mov
ret
jno
sub
inc
and
faddl
movb
js
popa
add
cld
fbstp
lret
push
lds
push
mov
lret
ds
and
xchg
outsb
mov
iret
bound
adc
movsb
xchg
pop
jne
mov
xor
cmp
adc
inc
xchg
shll
add
into
rclb
das
push
push
jl
rorb
jo
cmpsb
shlb
pop
cmc
cltd
movsb
xchg
rorb
xchg
adc
mov
fs
cs
imul
stos
test
add
test
or
and
mov
icebp
leave
idivl
std
sti
mov
aad
jae
imul
imul
dec
clc
jg
int
sub
pop
dec
shlb
xchg
and
or
mov
add
lods
into
jne
les
in
xchg
les
xor
or
jb
xchg
sbb
ja
sbb
cwtl
rep
sbb
mov
xor
fwait
push
mov
xchg
js
and
es
inc
jmp
lods
or
or
jno
sbb
push
mov
movsb
ja
addr16
ja
and
leave
ds
popa
jne
aam
sahf
rcl
in
push
mov
mov
insl
shl
popa
jno
pop
aaa
inc
mov
hlt
pop
jp
push
mov
das
mov
jb
out
jmp
adc
jge
leave
js
cli
stos
cwtl
ret
inc
sub
and
movsb
mov
jno
jl
andl
sar
fldcw
sub
jo
jno
adc
int3
sbb
xchg
cmp
outsl
cmpsl
dec
out
dec
orl
cmp
jo
adc
rclb
cmpsl
lods
cmc
in
stc
repnz
fmuls
ljmp
aas
push
outsb
fadd
jno
pusha
add
pusha
inc
dec
add
mov
xor
and
xchg
or
jbe
adc
lds
push
xchg
mov
ss
xchg
out
cmpsb
and
cmpsb
xor
insl
pop
std
push
clc
pop
xchg
call
mov
mov
push
lahf
jbe
xor
cld
sub
or
xor
pop
mov
icebp
push
out
aad
xor
mov
push
imul
or
inc
dec
dec
jno
add
or
out
imul
out
adc
and
xorb
ret
mov
sub
or
jl
movsl
mov
jecxz
push
xchg
sbb
sar
sahf
int
fsts
pushf
lea
xor
pop
mov
adc
data16
jp
jecxz
imul
scas
ror
stc
sbb
imul
addr16
je
sbb
cmp
negb
icebp
in
add
mov
mov
psrlq
cmp
cmpsl
loopne
push
shll
rcr
cmpsl
sbb
incl
xor
dec
xor
lcall
test
xchg
xor
leave
push
not
push
xchg
shl
pop
pusha
cmp
jb
sub
jae
sub
pop
mov
in
inc
xor
mov
jno
jp
mov
movsl
lret
shlb
add
adc
ss
icebp
mov
mov
add
or
push
in
filds
mov
out
mov
mov
das
xor
cmp
add
dec
mov
aad
xchg
xchg
xchg
fimull
pop
movsb
adc
in
xchg
fnsave
fistpl
xchg
pop
clc
or
or
xchg
push
test
pop
ds
push
sub
or
out
cmc
fnstcw
pop
fmul
push
push
insb
in
jg
sbb
add
cmp
inc
sbb
popa
push
cwtl
sub
les
or
nop
out
out
mov
or
popa
mov
inc
jle
rorb
and
fs
xlat
andb
and
jecxz
xchg
fnstsw
mov
outsb
jns
fwait
bound
popw
mov
add
push
mov
test
mov
sbb
push
ja
adc
mov
ja
movsb
stos
shll
adc
shlb
mov
sub
nop
push
jl
pop
sub
fcomip
mov
inc
loop
mov
lret
faddp
mov
lahf
decl
repz
das
push
mov
outsl
xchg
lret
js
push
pop
loopne
add
add
pusha
sbb
int3
mov
push
leave
cli
sub
dec
sbb
cmp
out
push
cmp
fwait
enter
lea
aas
hlt
sub
mov
pop
mov
mov
xchg
jp
add
mov
cs
add
cmpb
xor
mov
mov
test
test
mov
outsl
lret
imul
mov
add
aad
add
mov
jne
push
mov
xorl
cmp
push
sti
int3
cmp
sbb
mov
push
add
ret
add
adc
xor
cmp
or
nop
fbstp
jmp
jecxz
pop
rcll
push
xchg
adc
jp
sbb
sbb
cwtl
daa
cmpsb
fadds
jo
in
xchg
pop
inc
aad
nop
orb
jne
pusha
or
test
fst
mov
leave
jge
jne
and
ljmp
mov
xchg
call
fsubl
fsubrl
adc
add
daa
mov
outsl
ss
fsubr
rcr
and
xor
stos
ja
push
jb
and
dec
int
les
mov
sub
xlat
stc
addr16
mov
cwtl
std
negb
sub
xorl
sub
or
dec
das
mov
and
mov
push
cmpsl
aad
loop
and
jnp
aaa
and
mov
in
adc
jae
hlt
and
sub
mov
inc
popf
test
imul
xchg
fisttps
popf
add
ret
in
sbbl
xchg
jle
jle
mov
cmpsb
rcll
and
mov
push
cwtl
leave
sbb
lcall
stos
mov
andb
lret
sbb
aas
jno
jne
push
je
sti
xor
mov
and
adc
xorb
ret
dec
mov
mov
pop
adc
popa
iret
mov
xchg
cmp
cmc
ret
pop
push
xor
es
lret
cmpsb
test
pop
jg
dec
insl
dec
xor
fcmove
daa
adc
xor
into
mov
fistpl
nop
aad
je
pop
divb
inc
mov
and
js
je
into
jp
or
mov
test
daa
adc
sbb
dec
push
inc
lea
jge
mov
jno
sub
mov
cld
andl
and
and
mov
fst
std
jmp
and
lds
jge
and
faddl
loope
icebp
cmp
cmp
rcrl
inc
dec
jmp
jnp
add
je
repnz
outsl
outsl
lahf
xchg
test
sbb
int
test
outsl
dec
dec
fs
sub
lahf
ret
pop
clc
or
stos
sbb
xchg
sahf
add
loop
roll
mov
pop
repz
insl
mov
add
ret
dec
jp
fwait
push
inc
jl
ja
mov
sub
add
hlt
rcll
aad
shl
and
out
outsb
inc
aas
gs
mov
ds
push
loopne
or
dec
pop
aaa
jecxz
stos
bound
sub
jmp
fcomip
sbb
fwait
add
add
js
add
dec
pop
enter
mov
enter
inc
mov
and
lcall
mov
cmp
push
loop
in
mov
dec
sub
loopne
xor
xchg
outsb
or
insl
xlat
stos
mov
int3
lock
xor
add
mov
and
xchg
shll
in
and
fistps
ja
cmp
xor
xor
and
and
nop
jmp
add
fwait
cwtl
sub
mov
ja
pop
pop
xchg
xor
mov
aaa
out
push
jmp
stos
sub
mov
loop
mov
icebp
scas
cmp
scas
arpl
in
insb
popf
sbb
mov
xor
test
add
pushf
xchg
mov
add
outsl
pop
shr
or
fs
pop
mov
test
jmp
fsubl
sbb
std
pusha
jl
mov
into
pop
out
frstor
neg
sti
std
mov
test
dec
data16
sbb
pop
push
add
cmp
dec
fld
jae
push
mov
rcrl
popl
mov
push
and
and
jl
mov
nop
mov
std
lods
mov
dec
push
cltd
inc
or
inc
mov
cmp
pop
push
pop
dec
adc
ja
cltd
jno
test
call
xor
xor
out
rolb
addl
cmpsl
xor
xlat
test
sbb
sbb
enter
jp
mov
inc
call
inc
mov
mov
xchg
div
dec
jnp
push
add
push
inc
add
inc
mov
mov
push
out
sbb
pop
scas
divb
jg
stos
aas
add
pusha
mov
adc
sbb
cmpl
jne
out
mov
cmp
bound
jne
aam
lahf
pop
add
lahf
adc
insb
imul
cmpsl
hlt
jg
inc
or
cmp
jl
dec
call
adc
sub
inc
out
xchg
or
je
mov
or
mov
push
or
repz
push
sub
dec
out
adc
sti
fs
popf
pop
mov
cmp
roll
mov
dec
cmp
cmp
dec
cmpsl
mov
add
sub
gs
dec
push
out
pop
btsl
adcb
adc
std
mov
lock
mov
insl
mov
push
jb
add
or
rolb
stos
shrl
xchg
adc
and
lds
shrb
icebp
jne
rcl
adc
xor
mov
test
adc
or
and
or
jg
jle
push
xor
mov
or
or
mov
and
orb
mov
clc
jae
mov
inc
cmpsb
stos
dec
push
mov
pop
fistps
mov
xor
insl
repnz
jae
pop
ja
inc
pop
mulb
not
xlat
xor
inc
dec
stos
dec
mov
and
lea
cmp
insb
mov
jg
sub
in
or
cmpsb
or
inc
and
dec
icebp
js
cmp
leave
jae
imul
cmp
mov
dec
mov
les
ljmp
pop
out
fnstcw
mov
xor
aad
fldcw
jecxz
cmp
loop
outsl
mov
push
dec
ret
sbb
mov
xchg
xchg
lret
mov
mov
cltd
sub
fwait
push
sub
dec
stos
mov
xor
out
and
int
add
stos
shrb
cs
mov
xchg
add
xor
lea
pop
test
adc
pop
ret
mov
into
dec
enter
imul
rcll
xchg
xorb
lea
scas
leave
cmp
jg
pop
cmpsb
push
push
fdiv
sarl
sub
loopne
and
mov
arpl
ja
pop
pusha
xor
xchg
scas
cld
push
cmpsb
insl
imulb
add
push
inc
xchg
shll
cmp
mov
in
hlt
jne
outsl
jecxz
mov
or
negl
fistpll
sarl
mov
mov
and
lods
js
pop
cmc
add
cmp
cmp
jmp
das
andb
and
xchg
sub
repz
xor
data16
ja
push
cmpsl
fwait
shll
jge
xor
div
and
pop
movsl
loop
divb
lret
or
out
mov
jmp
arpl
outsb
jb
js
shrb
and
stos
inc
leave
xchg
push
clc
jno
sub
push
mov
in
lea
dec
aaa
pop
push
jp
pop
inc
pop
cltd
cltd
mov
mov
in
push
int3
mov
sub
enter
ror
iret
and
sub
lea
jo
mov
sub
sbb
mov
jl
dec
scas
cmp
dec
sub
pop
lcall
pop
cmp
outsl
loopne
shlb
insl
jo
mov
out
jae
mov
test
or
outsb
lret
movsl
int3
scas
inc
inc
sub
mov
add
sub
cs
loop
jns
jbe
std
sbb
jno
scas
or
push
sahf
jmp
dec
lock
lds
mov
cmpsb
jns
inc
adc
push
adcl
jmp
cmp
addb
adc
jl
mov
cmp
sub
or
rcr
fs
scas
cld
fwait
sub
enter
and
iret
adc
dec
mov
mov
mov
sbb
mov
mov
mov
into
adc
in
popa
mov
xchg
lahf
outsl
mov
xor
cltd
not
outsl
loop
ljmp
movlps
jecxz
das
loope
pop
adc
xlat
xchg
movsb
loope
adc
jmp
subl
mov
xchg
lds
jno
xchg
mov
add
cwtl
sub
ret
leave
std
sti
lods
jp
jp
addl
scas
test
pop
inc
scas
shll
jl
subb
lds
fsubrl
shll
rolb
aad
popf
inc
jmp
add
bound
test
adcl
scas
fstpl
addr16
mov
adc
adc
mov
adc
mov
out
mov
dec
lahf
sarl
xor
jb
add
cmpsl
lret
and
mov
xor
cmp
and
fldt
mov
pop
out
adc
inc
xchg
movsb
arpl
pop
imul
xchg
push
add
pop
xchg
push
arpl
xor
cli
xorl
add
fwait
cmp
fwait
enter
mov
and
mov
xor
sbb
in
incb
jg
sbb
add
sub
sub
dec
dec
rolb
jge
mov
push
outsb
int
std
push
pop
xchg
fs
mov
cltd
lahf
pop
jno
loope
out
sub
cmp
in
movsl
cmp
push
adc
shrl
pop
jle
cmp
call
in
pushf
ja
mov
negl
rorl
andl
fs
xchg
mov
in
cwtl
inc
sub
inc
mov
push
fmull
fistpl
aaa
psubb
xlat
iretw
inc
scas
mov
orl
vmovq
mov
es
iret
cltd
add
cmpl
enter
pop
pushf
mov
and
into
jecxz
dec
repz
dec
out
xor
movsb
cmp
fcoml
pop
cmp
inc
mov
inc
xor
loop
mov
negb
inc
popa
adc
in
and
sbb
movb
inc
imul
je
mov
xor
xorl
push
sarb
jnp
add
jne
es
xchg
clc
mov
jne
sub
mov
dec
mov
mov
jecxz
jo
push
int
dec
imul
psubsw
inc
pop
dec
xchg
sub
jge
sub
into
sbb
cs
aaa
inc
dec
and
insl
mov
mov
add
sbb
jl
mov
push
inc
int
mov
push
or
lahf
lock
in
lods
cmc
adc
adcl
loopne
or
out
and
popf
ljmp
or
ret
shll
test
pop
aam
popf
dec
cmpsl
adcb
or
js
ljmp
dec
xor
mov
mov
mov
pop
mov
fisubrs
dec
or
fidivs
push
int3
pushw
dec
sub
lret
add
inc
mov
lds
in
fdivs
jb
scas
xchg
stos
aaa
cmp
iret
popa
jp
stc
sub
in
and
sahf
cmp
in
jl
xchg
mov
inc
addr16
push
lods
aam
xchg
xor
cmpl
daa
fwait
nop
stos
or
mov
cmpsb
test
fwait
mov
in
cmp
inc
iret
add
into
xor
inc
ljmp
cmp
xchg
mov
andb
jno
int3
xchg
and
loop
imul
faddp
in
jle
jmp
fmulp
mov
int
in
xchg
cmpb
movl
and
jo
movsb
jne
push
cmp
int3
scas
loop
or
nop
xchg
test
sbb
fdivrl
and
bound
js
adc
addr16
add
iret
push
into
lock
pop
popf
aad
or
mov
cmpsb
mov
push
sti
pusha
je
push
mov
ljmp
jb
adc
out
imul
or
cmp
mov
sbb
stc
xchg
adc
sbb
gs
xchg
data16
outsb
bound
push
ja
test
cmp
jnp
pop
dec
mov
add
in
adc
mov
loopne
je
adc
imul
and
icebp
adc
push
rorl
popa
sub
jbe
pop
pop
iret
mov
out
hlt
imul
insb
lcall
push
cmc
lods
jge
push
dec
enter
fwait
mov
pmuludq
aam
sub
pop
repnz
mov
mov
popl
jae
bound
dec
call
out
xchg
lds
sub
ja
arpl
xor
ljmp
xor
arpl
mov
or
push
adc
and
xor
aad
sbb
push
insb
lods
add
lcall
stos
inc
stos
adc
push
dec
shll
pop
mov
mov
inc
pop
mov
sbb
popl
arpl
pop
or
mov
mov
ss
jmp
cs
mov
xlat
sbb
popf
mov
pop
cmc
mov
pop
popa
out
xchg
repz
pushf
xchg
movsl
lods
out
add
sti
or
xor
lods
dec
adc
inc
pop
repz
shlb
mov
add
push
dec
ret
cmc
insb
fists
loop
xor
nop
pop
pushf
data16
pop
pushf
jl
pushf
int3
jno
out
cmpsb
sbb
xchg
leave
in
shll
push
inc
fcom
push
add
mov
pop
testb
inc
cwtl
fidivs
xor
push
xchg
inc
jle
sub
cld
in
mov
sahf
xchg
mov
push
test
push
jbe
inc
mov
icebp
orb
loop
jl
dec
test
push
les
inc
lcall
push
lahf
lahf
pop
sbb
jbe
aad
outsl
sub
out
sbb
jl
mov
cltd
push
lahf
into
mov
jb
out
int3
mov
pop
sbb
inc
cmpsb
mov
xchg
int3
pop
sub
ror
clc
jno
add
push
mov
outsb
dec
xor
fwait
in
lcall
mov
aaa
mov
mov
xchg
popa
mov
dec
cmp
fstpt
mov
or
cmp
hlt
nop
push
iret
fcomp
xor
cmpsb
dec
sbb
daa
les
ficompl
ror
add
mov
arpl
std
jae,pt
dec
int3
pushf
push
lahf
adc
push
cwtl
movsb
xor
dec
sub
loopne
test
fisttpl
test
out
xor
inc
lcall
pop
pop
pusha
cli
or
mov
mov
ret
aaa
lret
imul
fistl
fs
divl
nop
gs
mov
xor
je
ficomps
shl
dec
outsb
sahf
mov
jbe
sbb
xchg
inc
dec
xchg
gs
sti
mov
cmp
or
imul
fbstp
shl
push
mov
ljmp
jmp
jno
push
or
pop
mov
xor
ficoms
lods
ret
or
jbe
inc
add
add
push
pop
jecxz
adc
xlat
loope
int3
pusha
lret
punpcklwd
sub
aad
mov
repnz
mov
mov
shlb
dec
xchg
mov
aas
xlat
sbb
lods
cmp
cltd
mov
or
add
in
test
fistpll
nop
pop
ffreep
mov
adc
sbb
cmp
sub
nop
mov
mov
inc
push
cmp
roll
in
xor
mov
jnp
or
orb
cmp
cmp
push
cld
xchg
dec
sbb
outsl
jg
leave
xchg
mov
fs
jl
nop
dec
mov
and
pusha
ret
imul
cmp
outsb
xchg
in
sub
mov
or
fs
jne
add
dec
inc
jle
cli
sbb
mov
aaa
in
ss
push
adc
adc
je
dec
jb
cmpsl
fcom
jl
xchg
jnp
fwait
push
xchg
pusha
ljmp
and
cmp
lods
jb
gs
add
sub
movsl
insb
push
jae
out
std
pop
mov
aam
xchg
jp
and
mov
push
dec
mov
lret
test
popa
mov
enter
fldenv
leave
push
aas
andl
imul
push
add
and
sbb
imul
leave
sbb
popf
sbb
sar
mov
fbstp
sub
leave
xchg
lds
sub
sbb
in
test
decb
pop
andl
pop
subb
push
js
xchg
push
mov
pop
pusha
xor
loop
nop
out
sub
mov
mov
push
add
pop
sub
cli
jmp
repz
mov
idivl
das
dec
sbb
js
or
cmp
stc
mov
dec
lret
mov
stos
sarb
xor
jae
imul
cmpsl
std
add
out
std
dec
mov
dec
pop
dec
dec
jg
inc
jne
movsb
shll
mov
cmpsb
jg
enter
loope
outsb
inc
mov
dec
ja
es
iret
inc
mov
jnp
mov
sub
ja
repz
enter
movsb
shlb
cltd
mov
daa
push
mov
dec
sub
iret
jno
push
out
ds
dec
add
mov
and
mov
xchg
xor
aad
sahf
lods
je
out
and
push
bound
fstpl
and
inc
adc
sahf
inc
sub
addl
jno
pusha
fists
add
xchg
push
cmp
add
ja
jge
add
dec
out
xlat
xchg
and
or
push
out
mov
dec
push
mov
dec
in
std
xchg
jg
dec
pop
push
xor
xchg
xor
mov
lods
ret
movsl
lock
shll
push
xchg
dec
and
push
lea
mov
sub
jne
push
cld
xor
inc
push
or
test
fdivrs
fwait
dec
data16
sub
jmp
sub
add
adc
inc
sub
inc
enter
add
push
gs
jmp
xor
fs
std
xlat
push
sarb
jae
leave
dec
ds
mov
mov
xchg
aam
dec
inc
mov
jmp
iret
jne
test
jns
inc
fs
imul
rorl
ds
xchg
sbb
call
mov
sahf
mov
mov
aaa
pop
add
pop
jg
rorb
xchg
nop
stos
ss
aaa
daa
lcall
in
mov
cld
sbb
roll
xchg
xlat
and
lret
insb
fisubrs
divl
lcall
pop
addb
stos
mov
sti
stc
and
add
add
and
pop
pusha
aas
lret
cmp
push
inc
aad
jp
icebp
push
mov
cmpsl
popa
xchg
xor
out
dec
gs
andb
mov
add
mov
xor
mov
xorps
dec
mov
cmp
cmpsb
mov
adc
push
push
mov
cmp
aas
int
inc
push
sub
out
repnz
fldenv
push
adc
jge
adc
idivl
lcall
mov
rclb
pop
push
rol
in
jb
jbe
popa
lahf
mov
cmp
xor
ror
loop
add
flds
jbe
dec
mov
fldcw
and
pop
addl
sbb
ljmp
inc
repz
and
mov
cld
lret
add
loop
xchg
scas
mov
insb
psubusw
rclb
sub
pop
je
loopne
addb
insl
cltd
iret
fwait
aad
ds
cmp
lea
dec
and
mov
arpl
xchg
sub
pop
sub
dec
adc
dec
fwait
roll
lret
pop
leave
mov
jge
sbb
iret
in
xchg
fwait
mov
add
inc
xor
adc
insb
cwtl
aam
bound
pop
ja
and
sub
scas
push
aaa
sub
fsub
pop
shlb
sbb
mov
push
int
fcomps
out
pop
adc
int
xchg
cmp
xlat
cwtl
or
xor
data16
or
sub
pop
pop
and
mov
cli
outsl
inc
lea
sbb
xchg
popa
jb
dec
out
mov
enter
mov
ret
or
test
pop
es
ret
mov
pop
mov
out
hlt
lret
call
push
mov
ficompl
loopne
pop
adc
pop
decb
sbb
cmp
arpl
push
fdivp
pushf
mov
sub
cwtl
in
pop
loop
mov
mov
pop
inc
gs
push
mov
jns
mov
dec
push
add
cmp
pushf
mov
lds
xchg
mov
addr16
out
jno
push
pushf
dec
mov
pop
popl
cwtl
in
scas
xchg
mov
mov
pusha
jne
add
fidivrs
xor
xabort
mov
xor
test
xchg
mov
leave
adc
mov
adc
mov
mov
shlb
add
mov
imulb
jecxz
adc
mov
leave
cmpsl
test
jmp
cwtl
fnstsw
lods
jmp
sub
ret
xchg
lea
scas
jb
jnp
dec
fidivs
gs
pop
xor
inc
inc
mov
jns
push
add
adc
pop
inc
sbb
push
dec
push
sub
outsl
cmpsb
and
mov
inc
sti
inc
popa
mov
enter
fwait
push
push
sbb
in
fdivl
lods
fwait
xlat
mov
mov
xchg
mov
rcll
or
dec
or
ja
repnz
test
jp
cmc
int
scas
aam
ss
pop
fadd
inc
mov
jl
sub
dec
pushf
lea
sar
and
add
add
xchg
mov
pusha
scas
lcall
clc
mov
mov
leave
mov
cmp
push
fs
shll
and
pop
in
pusha
aam
jp
fimuls
in
xor
xchg
adc
sbb
cmp
shlb
pop
pop
push
sub
and
adc
jecxz
inc
int
cmp
cmp
idiv
push
das
inc
adc
cmp
out
js
sahf
arpl
pop
mov
mov
mov
adc
mov
push
dec
xchg
sbb
mov
sbb
sub
pop
mov
inc
dec
mov
fs
jne
and
jp
ljmp
pop
jb
xor
cwtl
ret
mov
movsb
jecxz
sbb
out
adc
in
nop
hlt
fs
add
push
jb
popa
xchg
mov
je
je
pop
iret
add
or
adc
add
or
int
jecxz
or
cmp
add
push
sbb
sbb
pop
mov
inc
pop
std
xor
adc
cmp
loop
dec
insl
xchg
jg
mov
sbb
imul
sbb
and
jle
or
push
dec
out
pushf
mov
jl
sub
test
loopne
icebp
inc
push
dec
dec
add
fnstenv
shlb
cmpsl
sbb
out
push
std
jae
gs
stos
pop
shll
in
outsl
mov
mov
sub
xor
aad
dec
mov
shr
jmp
add
sar
int
sar
mov
push
scas
dec
loope
or
popf
cmp
adcl
mov
or
lret
data16
inc
lcall
pop
fsubs
or
ljmp
icebp
test
cmp
mov
sbb
decl
cmpsb
out
in
imul
nop
push
into
pop
mov
adc
jp
int
loop
add
push
enter
cmp
pop
aas
dec
cmpsb
and
mov
xlat
fisttpl
xorb
add
fdivr
jns
cs
jecxz
adc
icebp
gs
lahf
icebp
insl
dec
cwtl
dec
mov
stc
xor
pop
test
cmc
enter
in
cmp
ds
lahf
pop
xor
jbe
push
xchg
mov
int
mov
faddl
inc
pop
sbb
mov
cmp
std
add
jmp
inc
mov
js
out
sbbl
pop
movsb
pop
xor
and
cld
jmp
mov
test
push
pop
enter
repz
adc
clc
dec
push
fldt
in
jecxz
cmp
sub
cmpsb
aaa
xchg
mov
aaa
lcall
pfrcpit2
ret
or
mov
dec
cltd
push
mov
push
movsl
imul
pop
call
and
push
nopl
ret
sub
in
sub
pop
and
adc
lods
sub
mov
mov
test
push
fisubs
xchg
push
movsl
aam
gs
leave
fiaddl
clc
or
imull
lea
dec
jg
jmp
addr16
push
mov
sti
xlat
dec
adc
cmp
call
fdivrs
mov
inc
fcompl
int3
lods
lds
jl,pt
decb
xor
adc
ss
aas
fnsave
fisttps
xchg
mov
mov
dec
out
push
in
jg
push
addl
je
add
shrl
std
lahf
sbb
xchg
fidivrs
add
or
fstp
mov
push
jge
jne
aas
loopne
add
or
mov
icebp
jne
and
rorb
jl
ret
pop
nop
or
icebp
pop
mov
dec
mov
add
popf
dec
jae
xor
test
popf
push
xchg
out
dec
dec
dec
into
mov
and
or
pop
ret
sbb
jbe
jmp
cmp
outsl
gs
mov
dec
add
insl
repz
sbb
lods
push
scas
std
aaa
xchg
fldenv
sbb
outsb
sbb
cli
loopne
sbb
test
inc
push
adc
sbb
mov
lret
lret
sbb
xchg
mov
sub
stos
fcmovbe
push
orl
cmp
xchg
adc
push
push
popa
push
xlat
jp
or
mov
ljmp
aas
mov
int3
jl
das
mov
ficomps
pushf
pop
popf
daa
lods
xor
mulb
mov
insl
lahf
in
fprem
mov
enter
stc
sub
mov
addr16
mov
add
sbb
imul
jecxz
xor
repz
leave
pushf
and
dec
shrb
mov
add
shrb
xchg
adc
pushf
jle
pop
inc
outsb
xchg
movsl
ss
movsl
pop
std
mov
add
in
xchg
xchg
into
imul
adc
test
push
pushf
add
jp
cmp
movsl
mov
sbb
in
jg
lock
mov
test
add
sti
xchg
rclb
roll
cmp
pop
data16
jle
clc
cmpsl
xchg
popa
adc
mov
jge
js
mov
pusha
js
dec
fisubs
jae
mov
and
push
pop
inc
pop
or
or
inc
insb
xchg
incb
mov
nopl
repz
jae
mov
jge
mov
fldcw
dec
adcl
cmp
test
filds
outsb
inc
dec
sub
js
in
lods
or
mov
mov
dec
imul
pushl
leave
idiv
inc
pop
cmp
fmuls
movsl
mov
mov
pop
shll
outsb
and
mov
into
mov
aam
push
and
xor
push
loopne
cli
lcall
nop
mov
imul
or
sub
jae
xor
mov
pop
ss
loope
into
ffreep
cmc
faddl
lods
into
dec
aas
adc
add
int3
cs
cli
add
xor
jmp
jo
jno
mov
pop
adc
inc
loope
push
fwait
push
int3
and
jmp
push
mov
xchg
add
xchg
or
sbb
cmp
test
sbbl
add
stc
out
mov
dec
sub
mov
mov
ds
fadds
test
test
or
push
jmp
insl
leave
shll
xchg
arpl
out
sbbb
mov
dec
popf
push
es
cwtl
dec
push
aad
push
or
adc
add
mov
negl
stos
and
sahf
xchg
pop
imul
lret
and
fwait
mov
jno
add
fmulp
push
pop
cmp
testb
or
shrl
je
lahf
inc
pop
mov
pop
mov
lods
std
push
mov
xor
adc
ret
fs
or
add
push
mov
jne
insb
and
imul
loop
xlat
lret
imul
sub
fbld
sub
cltd
mov
cmpsb
dec
test
stc
aaa
lcall
dec
lods
and
pop
jg
mov
call
stc
xchg
popf
pop
lret
std
aad
js
ret
enter
je
pop
por
lods
jb
ljmp
push
mov
cmpsb
or
mov
cmp
out
insb
aas
sti
cmc
cld
sbb
push
add
repnz
dec
push
sbb
aad
iret
dec
pop
shrl
mov
push
call
sub
into
call
jae
cmc
xor
push
stos
mov
cmp
cmpsb
sub
pusha
test
mov
nop
push
ljmp
in
repnz
or
cmp
add
lock
les
xchg
jmp
cmpsl
std
pop
mov
and
sbb
cmp
clc
aaa
or
mov
pop
les
cmpsb
call
repz
inc
or
inc
sub
xchg
pop
pop
inc
insl
dec
xchg
add
push
outsl
adc
pop
fistpl
movsl
loopne
xchg
leave
or
lods
xor
pop
in
push
and
gs
cmpl
push
cwtl
repnz
mov
and
sub
pop
mov
jmp
cwtl
jl
push
les
pushf
add
jle
xor
jb
xor
inc
adc
movsb
or
ret
bound
stc
loope
or
dec
popa
imul
testl
cld
dec
gs
sbb
add
js
jno
std
sbb
int3
push
push
xlat
cmp
push
jmp
js
mov
push
jmp
cmp
xchg
xchg
cmp
movsl
mov
scas
mov
cmp
incl
adc
xchg
popa
adc
loopne
dec
pop
lods
rolb
int3
incb
add
pop
xchg
mov
jne
mov
sub
or
sub
in
je
jmp
lea
andb
ret
xchg
test
mov
xchg
jns
jle
test
in
mov
leave
into
mov
xchg
lcall
in
push
ljmp
ja
aad
lods
nop
fnstenv
jnp
xor
inc
popa
ss
scas
and
xchg
xchg
or
fldt
jae
int3
mov
xchg
mov
enter
mov
jbe
aad
add
fs
andl
push
mov
test
dec
fsubs
xchg
testb
and
dec
pusha
mov
cli
adc
adc
out
rcll
mov
pop
mov
jmp
mov
cld
dec
adc
push
mov
sub
jmp
cmp
adc
cmc
popa
ljmp
inc
scas
pop
and
rolb
test
add
jnp
mov
inc
gs
or
cmpxchg
mov
jo
jno
test
sub
pop
adc
mov
test
dec
mov
int
pop
push
sti
pop
and
pushl
daa
in
enter
cld
aas
lret
sbb
in
ret
cmp
or
movsb
dec
dec
mov
mov
popf
mov
iret
leave
and
leave
xorl
into
xchg
inc
push
push
inc
ja
popf
loopne
cmp
mov
mov
dec
sbb
cwtl
stos
shl
addl
and
enter
add
loopne
sbb
jns
stos
push
lock
adc
cwtl
and
pop
sub
push
mov
pop
in
cwtl
shlb
fadds
stos
stc
dec
mov
clc
mov
mov
dec
sbb
jge
repz
inc
add
imul
jp
lock
add
outsb
dec
mov
xchg
je
inc
lret
mov
xor
cmc
sub
pop
xchg
jns
pop
pop
cmp
outsl
popl
inc
inc
xor
add
or
cwtl
ss
jg
mov
mov
inc
add
lret
mov
xlat
sbb
sub
aaa
bound
filds
mov
mov
and
call
mov
fisttpl
xor
cmp
lcall
loopne
adc
ljmp
jle
xor
iret
and
stos
es
loope
jecxz
ljmp
sarb
ret
aam
daa
dec
mov
test
push
outsb
lods
cmp
nop
data16
push
fwait
lods
movnti
push
xchg
rcrl
push
arpl
and
dec
jecxz
xchg
fstps
dec
xor
ret
sarb
arpl
xor
data16
sahf
jmp
adc
mov
mov
cmp
les
dec
fs
stos
push
adcl
jle
inc
jg
and
mov
out
test
cmp
mov
sbb
pushl
jne
pop
imul
or
out
add
movsb
je
xchg
dec
pop
sbb
loope
push
repz
jg
addr16
testb
jae
sbb
ret
out
lcall
inc
cmp
data16
sahf
inc
addb
mov
mov
imul
sahf
test
and
fwait
shrl
jmp
das
das
scas
adc
pop
or
subb
ss
fwait
insb
inc
push
std
mov
cmpsb
cmp
and
jno
mov
fdivrl
mov
dec
movsb
insl
push
enter
pusha
mov
cmp
push
aam
ja
xchg
sti
push
mov
cmp
mov
lods
insb
mov
insl
aaa
in
sub
fisttpll
jg
push
repz
xchg
xlat
add
lahf
orb
pusha
fwait
js
add
jno
push
push
daa
fcmovu
adc
outsl
ret
aam
push
xchg
inc
adc
pop
adc
imul
sbb
push
pop
sbb
insb
mov
and
dec
bound
dec
push
push
xor
adc
pop
std
sbb
push
mov
int3
jmp
clc
lcall
dec
arpl
pop
mov
sub
cs
adc
fld
xchg
enter
mov
aam
dec
shlb
push
dec
add
mul
into
xorl
mov
popa
mov
icebp
rclb
or
jno
sub
ja
mov
or
sbb
popf
pop
es
outsb
pop
enter
mov
pop
inc
rolb
enter
cmpl
sub
sub
jmp
popa
push
sbb
dec
stos
adc
inc
or
pop
inc
pop
sbb
xor
add
das
xchg
mov
mov
sub
insb
sbb
cmp
hlt
decl
lock
repz
mov
xchg
call
sbb
jg
sub
add
insb
in
insb
jnp
xor
pop
cmp
repnz
cwtl
jge
dec
dec
aaa
mov
mov
gs
imul
or
and
into
fimuls
fisttpll
rolb
aad
fnstcw
mov
es
bound
int
mov
cs
fs
loop
add
pop
inc
mov
cwtl
outsb
adc
push
scas
adc
mov
mov
lea
mov
aad
insb
cmc
mov
mov
call
loope
orl
xor
enter
shr
push
dec
lock
cmc
scas
sub
icebp
into
xlat
call
adc
repz
out
jno
in
jo
ss
mov
cmc
jle
insb
xchg
in
ds
jns
popf
sub
pop
sahf
push
adc
shl
data16
add
adc
sub
cmpsl
fstpl
mov
mov
inc
xchg
int3
negb
sub
pop
into
sti
sbb
cmp
mov
push
test
or
stos
fldl
mov
je
jb
or
pop
pop
sbb
jbe
neg
dec
or
dec
insb
mov
in
aad
mov
clc
push
out
cs
rep
jp
cmp
xor
sbb
insb
es
roll
inc
nop
push
out
xchg
xor
sbb
mov
jge
into
shrb
fists
pop
sbb
ljmp
adc
out
or
mov
leave
jbe
out
stc
clc
push
mov
ja
test
push
loop
stos
call
fmulp
inc
adc
mov
xor
fmull
mov
notb
scas
popa
ljmp
xchg
insl
test
incb
sbb
out
cli
stos
fisubs
popa
sbb
dec
add
mov
pop
sub
enter
xchg
push
push
xor
sarb
adc
iret
loope
pop
ja
xor
lahf
adcb
les
sti
lock
inc
push
out
aaa
imul
dec
fcoml
popf
ljmp
jne
lret
jg
push
loop
pop
adc
fisubrs
das
and
pushf
pop
js
cld
cmp
xor
pop
outsb
pop
mov
push
cmp
jne
gs
fdivr
push
les
or
pop
mov
cmpsb
jecxz
cmp
pop
cwtl
stc
insb
movsb
add
addr16
and
repnz
iret
dec
icebp
cltd
inc
xchg
inc
mov
dec
jmp
xchg
fimuls
xorb
sbb
cmpsl
xchg
movb
sub
cmc
mov
mov
js
outsl
lahf
or
pushf
adc
and
add
insb
mov
pop
jl
mov
arpl
jae
loope
mov
jnp,pt
das
cs
les
push
or
lret
cmp
lock
pop
dec
jp
inc
movl
sub
cli
aad
iret
cwtl
sub
inc
in
aaa
sbb
daa
pop
call
push
or
fildl
je
cmp
mov
push
inc
lods
hlt
pop
mov
sbb
loop
aad
and
fcomp
jo
and
std
ret
dec
dec
adc
bound
and
je
xor
imulb
loopne
daa
mov
shrb
scas
test
adc
shrd
xchg
aad
leave
mov
mov
xor
fs
cmpsb
imul
pminsw
adc
sub
pop
movsb
loope
jmp
push
stc
mov
dec
inc
pop
jmp
aaa
mov
mov
push
fmull
xor
loope
dec
dec
movsl
mov
int3
scas
mov
idiv
jecxz
sbb
mov
mov
jle
fistpll
mov
mov
lds
xchg
dec
xor
dec
clc
ja
xor
sub
mov
int
mov
pop
inc
icebp
push
jne
cmpb
jae
mov
and
movsl
mov
cmpsb
cmc
insb
sarl
mov
inc
ds
in
mov
inc
in
jp
fldcw
fstpt
adc
fcompl
jmp
inc
mov
addl
xchg
mov
lahf
xlat
hlt
sbb
xchg
push
lcall
shl
fucomi
mov
orb
loop
in
inc
cmc
repnz
int3
shll
test
dec
inc
clc
shll
pop
addr16
cmp
icebp
pop
cmp
cmp
inc
in
aad
jno
lea
aam
cmp
pop
repnz
inc
sbb
push
dec
fnstenv
or
negb
mov
sbb
jno
in
pop
lds
cmpsb
pop
pop
loop
xchg
xchg
mov
fcompl
and
out
ljmp
clc
sub
loopne
mov
bound
jg
out
movsb
inc
scas
movsl
xor
adc
mov
cmp
dec
jl
adc
pop
xchg
xor
pushf
mov
divb
dec
mov
mov
outsb
adc
jne
sarl
std
aas
cmc
and
repz
push
xchg
aaa
mov
pop
sbb
aam
test
push
bnd
pop
xor
sub
lea
cmp
loope
shlb
mov
sahf
sub
mov
es
mov
cld
std
mov
xchg
and
mov
rcrb
add
dec
out
shrb
repz
bound
xlat
mov
fs
je
andl
sbb
aas
or
in
push
mov
inc
xor
mov
nop
mov
mov
mov
rclb
pop
ljmp
fs
add
adc
ret
lahf
and
mov
push
in
xchg
outsb
dec
test
andb
cmpb
pop
or
stc
push
sub
sbb
mov
sbb
mov
xchg
sbb
loope
shrb
push
pop
jns
inc
sub
nop
cmp
cmovae
das
dec
adc
roll
adcl
add
jae
mov
dec
jbe
jb
outsb
sbb
xchg
add
or
mov
dec
mov
mov
push
ljmp
lahf
or
mov
nop
aad
pop
fdivl
lock
popa
xlat
leave
dec
imul
cli
mov
pop
inc
loope
ret
add
dec
loop
out
stos
mov
enter
ds
pop
mov
and
push
xchg
std
rorb
outsb
sub
xchg
jo
arpl
ficoml
aad
sbb
sub
dec
loope
mov
push
dec
scas
xlat
mov
mov
dec
loope
test
js
add
lds
push
or
stos
jg
ret
pusha
lock
mov
adc
push
or
mov
sbb
push
loopne
adc
les
mov
icebp
aam
adc
mov
adc
and
cmc
jl
les
adc
adc
mov
add
inc
mov
iret
push
fisttps
ret
inc
lea
sbb
cmc
das
mov
imul
sbb
jle
inc
icebp
sti
mov
or
jnp
and
sti
pop
add
jmp
loop
out
clc
and
xor
pushf
out
icebp
pop
pop
ficompl
jns
mov
iret
cmp
add
sti
call
sub
movsl
call
adc
or
jnp
xchg
jo
scas
cs
dec
jecxz
jmp
ds
aad
push
dec
dec
enter
outsb
test
or
mov
bound
nop
shrl
fmul
or
or
pop
notl
ja
add
adc
vcvttsd2si
pop
mov
jmp
into
cltd
xchg
jne
cmp
mov
pushf
sbb
lret
movsl
jb
test
push
xchg
stc
addb
xor
lret
jb
lea
add
fldcw
out
dec
arpl
inc
jo
or
adc
aad
loop
push
filds
aam
enter
int3
popw
aad
pop
hlt
mov
jmp
retw
jbe
lret
xlat
popl
push
jge
push
pop
jnp
popa
fldt
pop
sbb
cmp
daa
inc
and
xchg
ja
push
cmp
cwtl
add
fsubrs
adc
stc
xor
push
dec
repz
mov
fnsave
xchg
mov
pop
shll
movsb
push
fistl
pop
fdiv
negl
stc
adc
sbb
push
loopne
sbb
ret
outsb
jg
movsb
xchg
aaa
sub
sub
popa
mov
xchg
adcl
xor
cmc
fmulp
jg
gs
stos
nop
pop
rorl
mov
adc
pop
pop
shlb
inc
xchg
pushf
out
fcoml
cmp
fadds
cmpb
xchg
aaa
aad
sbb
mov
sbb
imull
icebp
gs
jnp
repnz
sub
sub
push
adc
scas
imul
test
inc
mov
xlat
push
lret
dec
std
sub
cmp
cmc
mov
add
insb
xor
fsts
icebp
out
mov
push
pop
sub
push
dec
outsl
mov
push
and
pop
inc
push
and
sub
pop
push
inc
pop
pusha
jb
sbb
sub
test
adc
xchg
ss
cs
cli
cmp
adcb
cmp
ret
pop
imul
ja
stc
mov
jnp
pop
fwait
mov
test
scas
add
iret
xchg
sub
add
repz
cmpb
fimuls
aam
inc
loope
ret
insl
movsb
add
cld
ret
or
mov
cmp
out
popa
rorl
push
fisttpl
pop
clc
mov
pop
test
cmp
popf
sub
xor
pop
in
xchg
sub
pop
test
pushf
jo
adc
add
jns
sbb
pop
addb
pop
test
adc
mov
cmpsb
in
std
add
out
cmp
jo
or
sub
inc
nop
lods
inc
adc
xor
xchg
cmp
xor
fwait
sub
lahf
mov
push
pop
add
bound
rolb
sub
adc
or
cmpsl
stos
xlat
pop
cmpsl
push
or
leave
jns
xchg
pop
and
in
loop
push
inc
std
sub
in
jg
ljmp
mov
loop
shrb
mov
xchg
mov
fldl
cltd
or
jne
pop
gs
outsb
or
shrl
cwtl
xchg
inc
leave
data16
add
mov
cld
cld
ss
rclb
outsb
xchg
push
xchg
enter
sti
add
add
shl
fisttpll
dec
sahf
shrb
sbb
xor
rcrb
xchg
pop
sbb
shll
stc
mov
jnp
mov
clc
mov
in
dec
in
mov
iret
shrb
mov
repnz
and
lret
adc
cmc
or
cmpl
repz
orb
nop
cmp
dec
jb
rcrb
frstor
xchg
scas
sarb
dec
xchg
into
xor
fsubrs
loop
pop
xor
or
sub
mov
test
push
cmpb
add
lret
cs
pop
aad
loopne
push
push
call
push
fcoms
adc
mov
stc
xor
in
dec
jmp
xchg
xchg
js
add
push
mov
cli
hlt
out
cmp
dec
sub
pop
pop
sahf
ja
int3
push
xchg
push
jmp
sahf
shll
push
adc
mov
frstor
push
xchg
mov
loope
das
push
jae
and
lds
outsl
add
xor
jns
jmp
inc
lret
int
mov
cmp
ljmp
or
outsl
push
dec
cmp
mov
jno
xchg
jb
arpl
imul
fsubl
lds
fisubl
pop
mov
movsl
test
cmp
jno
jns
jno
insl
out
scas
cmp
insb
ret
or
add
pushf
dec
dec
sahf
adc
push
lds
aas
mov
mov
ss
aaa
jl
test
gs
mov
loop
iret
lahf
jg
dec
jl
adc
mov
mov
jne
adc
cltd
mov
pop
imul
gs
push
add
adc
ja
ljmp
ja
jns
sahf
sbb
mov
jae
sub
out
lcall
lahf
lret
push
stc
daa
out
mov
shlb
push
stc
lods
cmp
push
xor
jae
lods
int3
ja
loopne
sti
pop
scas
addr16
xor
pusha
cmp
xor
jg
lahf
cmpsb
in
ja
xchg
test
cmp
test
stc
ret
inc
add
fwait
jecxz
mov
out
add
xchg
sbb
pushf
push
sar
jp
inc
repnz
iret
xchg
lods
add
push
inc
push
cli
mov
cmc
and
pusha
push
mov
movsl
notl
aad
pop
arpl
scas
shl
xchg
roll
insl
movsl
lahf
lods
nop
cld
jl
mov
ret
movl
push
shlb
push
push
je
imul
outsl
lock
adc
push
daa
adc
add
orb
je
adc
dec
movl
call
notl
imul
div
and
jno
add
mov
sbb
xor
jbe
xchg
pop
xor
sub
pop
jo
pop
aaa
popa
fstpl
jbe
mov
stc
mov
and
test
push
inc
pop
stc
lcall
jge
fmuls
inc
push
push
aam
add
lds
inc
cmp
push
add
adc
in
adc
shl
push
outsb
ror
inc
mov
cmp
jl
xchg
shrb
ficompl
xchg
test
xchg
inc
jle
mov
mov
inc
je
les
xor
jae
mov
add
mov
jl
int3
fdivrs
insl
js
fwait
xchg
add
lahf
fsub
lds
and
subl
jae
pushf
and
scas
adc
and
test
ds
sbb
loope
dec
adc
out
popl
dec
in
aam
loopne
fldenv
aaa
xchg
xchg
push
aad
xchg
cmp
mov
lods
repz
mov
mov
ret
jb
sbb
out
xor
mov
repnz
adc
iret
in
ja
sahf
cmp
stc
adc
cmp
or
xor
xchg
loop
scas
xchg
mov
cli
add
iret
int3
or
in
xor
mov
outsl
dec
lea
xor
mov
ja
mov
or
jle
pop
xchg
xor
mov
rcrl
inc
roll
rol
mov
nop
or
xor
seto
ds
dec
jo
lods
pop
xchg
iret
mov
mov
dec
outsb
jno
mov
cli
idivl
inc
xchg
mov
add
mov
mov
les
lahf
adc
fwait
mov
sbb
lcall
es
push
nop
adc
loopne
cltd
ret
sti
stos
lods
fnstcw
int3
test
ret
and
cmp
jae
jo
push
fst
dec
dec
or
leave
jmp
addr16
inc
fisubl
adc
sahf
adc
xlat
ss
loope
pop
call
adc
adc
popf
lcall
mov
movsb
xchg
enter
in
das
fdivs
jmp
cltd
out
pop
push
jecxz
xchg
xchg
cmp
add
pop
push
xor
orl
cmp
data16
sbb
or
sbb
mov
leave
dec
out
mov
mov
mov
ret
jmp
stos
sti
popa
es
daa
repz
mov
scas
cmp
sbb
mov
cmp
push
iret
dec
nop
outsl
xchg
mov
fistps
pop
or
idiv
jne
addr16
enter
mov
imul
pop
je
out
cli
out
cmp
sub
aam
lods
xchg
push
into
out
in
cltd
dec
mov
adc
pusha
add
cltd
xchg
dec
outsl
push
in
mov
mov
int3
sub
jl
lahf
mov
aam
ret
add
push
adc
test
inc
xor
cmp
outsb
add
loope
es
imul
test
fstl
or
pop
adc
push
and
dec
and
movsl
sbb
jns
xchg
sbb
lahf
inc
daa
mov
lds
lods
jo
mov
add
or
cld
cld
jno
out
lods
pop
ss
shll
and
sub
cmp
pop
mov
dec
or
push
add
xchg
scas
addr16
inc
xor
pop
mov
inc
rolb
sub
sub
or
jge
pop
test
fstpt
sub
push
mov
popa
pushf
scas
lods
int
push
and
imulb
xchg
and
data16
jmp
or
lcall
cli
out
mov
dec
loope
fstps
hlt
sti
ljmp
scas
pop
fsubrl
or
lods
jl
rorl
imul
scas
into
outsl
lods
push
inc
popf
js
loope
inc
inc
jns
and
loope
sbb
addr16
xor
pop
add
or
and
cmp
mov
aaa
das
add
fisubs
xor
pop
mov
ljmp
das
push
mov
loopne
cwtl
mov
lret
flds
adc
jl
lret
out
mov
dec
in
mov
cs
sbbl
jne
jbe
cmpl
xchg
jns
mov
in
cmp
pushf
mov
add
rcrb
scas
mov
cmp
jb
xor
fstps
sub
mov
mov
dec
adc
test
sbb
call
jle
gs
das
fistps
jmp
mov
jnp
xor
sub
out
sbb
push
inc
or
addr16
cmp
xorb
loope
test
mov
dec
and
fadds
leave
pop
xchg
push
xor
adc
inc
stos
out
mov
cmp
aas
addr16
test
inc
cld
cwtl
int3
arpl
rcll
sub
or
xor
xchg
ljmp
jo
hlt
jbe
cmp
adc
cs
decl
or
pop
dec
jp
cmp
outsl
sub
je
jo
jo
insl
xchg
addl
push
push
std
or
hlt
mov
xchg
scas
jo
mov
xchg
out
fadd
cld
or
mov
adc
in
dec
or
scas
in
sub
xor
mov
mov
ds
mov
sub
push
xor
inc
cmpl
fwait
iret
fwait
xchg
push
test
out
sub
daa
ss
fadds
pop
jb
mov
outsl
xor
mov
and
in
dec
xchg
mov
fidivrs
frstor
sbb
mov
mov
xor
daa
pusha
jmp
inc
cmpl
mov
pop
pop
sbb
push
sar
jo
inc
ret
jge
xor
test
not
lahf
pop
outsb
data16
xorl
mov
daa
inc
add
adcb
fisubl
mov
sub
cmp
call
add
or
movsl
call
push
pop
imul
jae
xchg
adc
mov
arpl
in
inc
jae
ret
idivl
xlat
jno
js
fldl
mov
sbb
ja
andl
jne
xchg
andl
shlb
mov
or
and
daa
aam
add
jns
push
inc
sbb
mov
das
orb
push
inc
fildl
push
mov
push
cli
mov
sub
insb
or
fldcw
andl
aam
dec
jb
pop
add
sbb
dec
pop
push
xchg
jb
push
incl
cmp
cmpsb
mov
loop
jns
xor
mov
sub
js
cmpb
popf
ljmp
pop
insl
lock
mov
clc
insl
aad
fidivl
push
ret
test
xor
mov
cmp
push
daa
imul
mov
data16
mov
inc
sahf
inc
sub
xchg
mov
inc
mov
fistl
shll
mov
ret
insb
imul
xchg
movsl
out
dec
mov
ret
clc
xchg
add
ret
inc
lock
cmp
push
ficoms
jno
lods
mov
and
out
dec
xchg
mov
mov
popa
push
popf
decl
mov
pop
xor
fcmovb
adc
push
xchg
orb
pop
inc
or
popa
xor
iret
hlt
jbe
mov
orb
lcall
push
jg
arpl
inc
inc
jmp
data16
adc
dec
fwait
popf
and
shlb
loop
cmp
sti
inc
cmpsl
arpl
mov
clc
adc
and
add
jb
cmc
pop
mov
sbb
popl
aam
aam
or
shrb
fmull
xchg
mov
push
push
ja
dec
lock
push
ficompl
cmpb
pop
mov
xchg
sbb
jge
mov
int3
jmp
pop
add
xchg
inc
dec
push
ret
lods
inc
push
mov
jb
inc
ja
push
xchg
cs
fisttpl
ret
mov
xor
mov
push
xchg
cld
test
fists
jmp
cs
into
jae
nop
shrb
inc
inc
push
and
jecxz
cmc
out
js
pop
jl
and
fistpll
fisubs
push
mov
call
mov
ja
adc
aad
xor
stos
and
testl
addr16
cmp
adc
and
cltd
pop
fists
ds
scas
fldenv
jae
mov
and
push
sbb
ret
hlt
cmp
push
inc
inc
inc
add
pushf
loop
jle
pushf
lock
inc
les
cmp
psubb
mov
lret
jne
adcb
mov
pop
pop
inc
into
lcall
rcrb
push
and
sti
cmp
shl
mov
in
lds
sbb
jle
pop
sbbl
mov
xorb
mov
and
cmpsl
mov
jne
jge
in
div
and
ds
push
xor
addl
inc
adc
cltd
dec
scas
add
jns
es
popf
call
pop
or
repz
insl
mov
pop
mov
aaa
cmp
sbb
mov
aam
mov
pop
shll
jecxz
cmp
inc
not
inc
jmp
leave
xchg
icebp
cmc
xor
pop
jle
jnp
mov
shrl
shll
pop
jae
fsubs
jbe
add
mov
push
and
jp
lcall
movsb
mov
mov
or
iret
rcl
es
fdivl
mov
pushf
insb
es
mov
add
mov
in
inc
mov
mov
fwait
ljmp
shl
cmpsb
push
ja
pop
pop
int3
scas
daa
clc
shl
enter
dec
push
movsb
and
jns
mov
and
aaa
jl
sbb
out
popf
shrb
mov
or
ret
neg
dec
es
pushf
rolb
call
mov
fwait
lahf
add
mov
je
outsb
fnstenv
pop
mov
std
inc
loopne
pusha
mov
in
jbe
mov
or
cltd
roll
or
das
stos
aad
fsubrs
fld
pop
or
mov
loop
push
mov
jg
push
push
stc
add
inc
push
jbe
mov
jae
pop
cmp
test
inc
jmp
jle
add
mov
sti
out
cmpb
pop
outsb
jo
movsl
addr16
add
dec
out
push
aaa
push
add
sarl
pop
fisttps
dec
jb
push
loopne
jmp
mov
cmc
ficompl
nop
je
or
cli
mov
insb
mov
in
ss
test
push
sbb
xor
jp
sub
ret
add
test
mov
mov
out
aas
xor
fsub
dec
ret
shl
in
inc
lret
insb
xchg
xchg
push
ds
pop
pop
mov
mov
xchg
dec
test
rcl
mov
push
mov
push
cmp
out
mov
jns
jle
mov
lods
out
outsb
inc
movsl
mov
jnp
inc
mov
mov
fcompl
mov
sbb
pop
in
cli
mov
cmp
jmp
ret
add
es
into
push
mov
shlb
or
seta
mov
sbb
mov
sahf
ja
adc
es
loope
mov
pop
dec
pop
ljmp
out
add
lods
push
push
push
cltd
ss
mov
clc
xor
shrl
sbbl
js
clc
stc
push
cs
scas
call
sbb
inc
sbb
cmc
lock
fildl
jne
mov
scas
jl
jno
aas
or
add
adc
xor
mov
inc
out
aad
dec
pop
test
addr16
cwtl
test
pop
pop
pop
push
dec
inc
jnp
xlat
pop
gs
ret
jge
push
xor
shll
mov
jmp
and
mov
int
adc
pop
jne
sbb
lods
adc
pop
cmpsl
pop
add
pushf
negl
add
fs
adc
dec
mov
ljmp
ljmp
outsl
inc
ljmp
sub
jmp
int
dec
xchg
push
lock
add
push
xor
xchg
push
push
loopne
sbb
repz
fistps
ja
mov
jle
mov
cld
push
enter
push
mov
cmp
je
or
std
mov
lock
and
daa
femms
xchg
mov
xor
adc
jl
push
mov
mov
cmpsl
or
pop
xchg
incb
cld
aas
jbe
mov
pop
pushf
xchg
pop
in
dec
out
jno
es
cs
outsl
mov
mov
inc
mov
pusha
insb
dec
std
jae
jns
xor
xchg
filds
jb
xorb
mov
lds
rclb
mov
aaa
xor
loop
xor
mov
fidivrs
shlb
mov
popa
sbb
pop
mov
ss
fistpl
es
enter
ja
pushf
fisubl
aad
add
hlt
add
dec
mov
cmp
cmp
stc
adc
mov
dec
mov
push
dec
movsb
enter
daa
add
lea
mov
mov
call
jno
inc
js
jns
dec
jmp
mov
arpl
loope
out
repnz
mull
mov
mov
pushf
shl
cld
outsl
push
scas
call
lret
jmp
outsl
push
cltd
xlat
or
adc
inc
cwtl
aas
or
xchg
add
inc
jno
mov
clc
sti
add
lret
push
lret
iret
popf
out
int
aas
out
sti
push
loop
lea
cwtl
in
cmpsl
jle
and
adc
push
int
pushf
movsl
sbb
jno
adc
mov
or
loope
pop
cmp
pop
add
hlt
add
cs
push
lods
pop
mov
stos
int3
mov
mov
or
rsqrtps
adc
enter
in
sbb
lock
dec
cs
xor
and
xor
jg
cmc
popa
and
cmpsl
aas
or
push
ficompl
jo
sahf
pop
aam
in
data16
xor
mov
ret
xchg
jb
sub
pushf
pop
es
loop
jnp
les
loop
cld
aad
mov
std
icebp
sbbb
int3
push
mov
outsb
scas
jno
jg
jae
and
jp
xor
iret
cmc
and
sub
adc
mov
ja
out
push
mov
push
shlb
and
fisubs
inc
dec
cmpsb
and
into
xor
rcr
das
inc
cltd
shl
xchg
sbb
repnz
popa
sub
mov
sub
jecxz
sub
push
cmp
dec
xchg
hlt
cs
addr16
push
sub
bound
mov
cld
das
mov
push
je
inc
pop
xor
sub
add
xorl
repnz
mov
loopne
daa
or
gs
push
mov
mov
stos
inc
sub
xchg
in
dec
pop
adc
jns
jno
iret
pop
xchg
aam
sbb
dec
scas
ljmp
xchg
popa
push
jge
push
pop
repnz
decl
ds
dec
pop
dec
sub
inc
mov
or
xchg
xlat
jno
mov
dec
xor
addr16
ret
into
jae
pop
and
sub
sub
stos
adc
xchg
gs
test
cmpsb
adc
inc
jb
and
ror
xchg
jae
sub
or
cmp
mov
cmpsl
sub
cmp
push
mov
fld1
jg
push
test
je
inc
movsl
iret
cwtl
frstor
sub
mov
jo
pop
in
jmp
add
push
vmulss
sti
push
pop
jne
mov
stc
dec
inc
jns
sbb
pop
jbe
aad
sub
sbb
rorb
and
jmp
pop
adc
js
push
pop
out
pushf
pop
cmp
mov
repnz
sbb
dec
into
loopne
mov
scas
push
sti
loope
sub
add
es
fisubrs
outsb
push
loopne
push
or
jge
pop
sub
or
sub
mov
sahf
mov
sub
stos
sbb
pop
cmpsl
out
fst
sub
outsl
lods
push
rol
in
push
dec
sub
scas
pusha
pop
add
in
arpl
es
nop
dec
loope
sub
pushl
ficomps
flds
cmp
fildl
push
movsl
cld
add
lret
inc
push
xchg
xor
dec
adc
cli
lds
sbb
fmull
scas
dec
lret
inc
popf
insb
xchg
call
pop
push
cmpsb
bound
ret
pop
push
sti
mov
repz
dec
lds
bound
mov
test
dec
out
mov
imul
mov
sbb
adc
lahf
outsl
imul
jg
call
or
test
leave
push
pusha
dec
dec
out
lahf
sahf
jbe
add
nop
xchg
or
out
dec
mov
stos
xchg
adc
ds
xor
iret
inc
stc
and
jno
jo
mov
pop
sub
inc
adc
mov
mov
sahf
daa
out
mov
push
sbb
or
cmp
sbb
sbb
jno
in
xor
loopne
push
pop
mov
mov
mov
out
out
or
outsl
mov
les
jp
aad
ljmp
popa
gs
or
mov
adc
cli
mov
add
inc
and
push
xchg
dec
cmp
mov
scas
in
mov
cmpsb
mov
jo
nop
lahf
adc
and
dec
jnp
hlt
in
xor
fbstp
jmp
add
ret
cmovs
mov
inc
fs
mov
push
push
mov
out
jb
sub
inc
repz
and
outsb
lea
in
shll
inc
mov
dec
push
outsb
stos
stc
jg
dec
sbb
push
jecxz
int
imul
xor
dec
add
cltd
add
dec
xor
inc
jp
pop
inc
jge
mov
inc
hlt
adc
sbb
cmp
xchg
push
das
cs
test
rclb
out
adc
and
sbb
movsb
cltd
outsl
or
jbe
in
push
int
scas
inc
jae
test
loop
jno
pop
dec
inc
inc
xchg
js
sub
cltd
push
push
mov
pop
add
mov
scas
sarl
pop
and
inc
xchg
push
pushf
ds
mov
inc
xor
cmpsl
pop
mov
pusha
movsl
mov
mov
int3
and
mov
pop
pop
sub
pop
sbb
in
popf
cmc
leave
cmp
xor
cmp
sahf
fsubrs
sbb
pop
addb
mov
int
pop
shl
cltd
ret
sub
pusha
dec
out
xchg
and
pop
shl
leave
stos
popf
repnz
pop
pop
out
mov
add
fisubs
fdivrs
cli
jne
push
add
fs
add
pop
fs
jb
push
loope
mov
sahf
jne
fistpl
or
cmp
lret
xchg
clc
sbb
nop
rorl
inc
pop
cmp
jmp
pop
add
scas
mov
call
cmp
pop
push
negb
stos
mov
jb
adc
mov
call
sbb
insb
xchg
xchg
loopne
bnd
xor
lea
push
jg
pushf
in
and
int
mov
fdiv
or
cltd
int
cmpsb
pop
push
pop
cli
jecxz
inc
push
nop
sub
pop
xchg
inc
fisubrl
pop
rcr
daa
aas
lds
mov
xor
ds
jne
cmp
insl
das
sbb
lahf
imul
das
cmpsl
cmpb
xchg
inc
push
mov
sti
sub
add
xorl
xchg
cmp
sub
aad
es
mov
cld
jp
push
xor
loope
stos
pop
and
dec
dec
inc
leave
xchg
stos
repz
mov
incb
lods
fimull
lcall
je
mov
sub
jmp
jge
fsubrl
pop
clc
or
sub
add
movsb
lea
pop
xchg
cmp
add
push
sub
ret
les
daa
add
inc
addr16
push
stos
das
fnstsw
test
mov
sbb
jle
mov
fcmovnb
sbb
mov
hlt
xor
cld
fstps
insl
nop
sbb
lods
fidivl
fcompl
loope
lea
je
sarl
pop
add
push
movsb
adc
sbb
scas
sub
pop
add
dec
dec
or
sub
jo
jp
push
mov
adc
repnz
push
mov
imul
imul
loopne
sbb
sbb
pop
dec
ret
cmp
jle
cmp
jae
sub
xor
cmp
aam
xor
sbb
sbb
gs
or
js
add
or
out
cmp
jge
in
jns
push
mov
add
mov
aaa
aam
addl
nop
gs
jle
sub
ret
jp
outsl
loop
pop
jecxz
les
scas
sbb
dec
out
iret
das
push
xor
in
pop
and
jne
hlt
and
adc
dec
and
dec
jae
stos
dec
mov
insl
std
enter
xor
dec
mov
or
or
outsb
mov
sbb
ret
cmp
add
test
insl
daa
cmc
jmp
mov
mov
addb
aad
icebp
cmp
rolb
pop
mov
xchg
jo
imul
jb
mov
cmp
pop
xor
mov
pusha
sub
out
push
jmp
fwait
cld
inc
notb
mov
sub
cltd
add
iret
cmp
add
out
and
pushf
cmp
shrd
clts
lock
cmp
loop
mov
scas
sbb
mov
icebp
jbe
movsl
jge
push
xchg
or
dec
or
mov
xchg
cli
outsb
div
mov
xchg
imul
xor
sub
add
aaa
fwait
mov
lahf
arpl
mov
jecxz
sub
sub
ja
popf
inc
popf
lods
jne
sub
lahf
lds
push
add
iret
out
cmpsb
mov
aad
jne
pop
inc
pop
adc
mov
fistpl
xor
into
or
cmp
or
lcall
test
cwtl
cld
lea
mov
sub
inc
sub
sub
in
push
sbb
push
cmp
shrl
daa
or
aaa
add
mov
add
jnp
dec
pop
and
inc
push
scas
cmpsl
inc
or
iret
popa
outsl
push
in
dec
fidivrl
and
cmc
in
orl
int3
loopne
jle
add
sub
xor
dec
imul
bswap
ljmp
push
mov
jmp
shrl
xlat
movsl
sbb
mov
and
sbb
stos
mov
or
cmp
sub
movsb
aad
xchg
icebp
pop
repz
jp
jmp
sub
mov
mov
popf
push
sub
fwait
xor
mov
repnz
pop
xchg
daa
mull
xchg
pop
xchg
and
into
cli
movsb
aam
or
sbb
mov
mov
inc
std
jno
xor
push
sub
sub
pop
sbb
xchg
pop
jl
inc
insl
mov
out
mov
test
loop
pop
in
ret
lret
pushf
cmp
jge
push
or
cmp
pushf
repz
shlb
lock
jg
in
ljmp
push
shr
pop
into
xchg
fisubrl
shlb
call
sub
movsb
push
out
ss
movb
sbb
out
pop
insb
and
js
fsts
push
test
lock
jno
xchg
jmp
scas
mov
pusha
lahf
fucom
and
ljmp
dec
ljmp
jge
and
fs
je
add
push
xchg
pop
sbb
adc
pop
sub
stc
js
jmp
and
xchg
insl
andb
mov
ror
xchg
ljmp
sub
cmp
loop
xchg
movsb
mov
xlat
jecxz
lcall
jecxz
inc
jmp
fstps
divb
cmp
shll
dec
lods
int
push
in
es
pop
pop
jne
jmp
mulb
aam
cli
push
cli
nop
cmc
mov
mov
lret
aas
lock
xor
sarl
leave
pop
ja
jg
lea
pop
lods
mov
jae
lcall
out
orl
adc
std
xor
inc
nop
mov
cltd
ja
ss
adc
mov
lods
test
fs
mov
aam
xlat
mov
test
test
stc
dec
cld
aas
pop
dec
push
flds
mov
iret
xchg
ss
dec
lds
adc
loope
ss
gs
inc
xchg
ret
push
pop
cwtl
and
mov
ds
test
ljmp
and
icebp
pop
cltd
outsb
out
xlat
and
cmp
add
cmp
or
stc
cmpsb
cwtl
mov
jo
insb
es
cmp
adc
adc
push
sbb
ljmp
outsb
jo
push
outsb
jne
stos
imul
mov
iret
mov
adc
sbb
lcall
push
sub
icebp
xchg
jecxz
dec
push
xor
ja
pop
sahf
adc
adc
lods
xor
mov
icebp
das
push
push
leave
setne
mov
add
mov
mov
mov
jmp
fisttps
push
mov
sbb
jp
insl
movb
pop
sub
mov
jb
jge,pn
cmp
movsb
inc
pop
rclb
scas
push
pop
fmuls
movsb
insb
lidtl
pop
jl
push
and
test
dec
cmp
pop
repnz
repz
dec
sub
cmpsl
inc
repz
cld
jle
dec
ret
adc
out
call
addl
or
xadd
mov
pusha
shrl
push
inc
stc
xor
ret
jl
xchg
pop
pop
sub
cld
push
mov
cmp
mov
or
test
mov
stos
mov
stos
inc
clc
push
dec
jns
movsb
aaa
arpl
fdivl
mov
cmp
roll
out
xchg
xchg
add
xchg
sbb
adc
or
push
pushf
jmp
lahf
jg
out
mov
scas
cmp
or
jbe
dec
cmp
das
adc
fistpll
loop
mov
lret
mov
std
test
shlb
popf
mov
add
push
test
aam
fisubrs
push
scas
inc
fstpt
xchg
jg,pt
leave
shlb
or
movhps
mov
fldl
clc
fwait
jbe
jl
mov
xchg
enter
mov
dec
xor
jge
in
pop
bound
int3
mov
inc
into
enter
cmpb
lods
call
xor
mov
or
cmpsb
subb
cld
pusha
and
and
and
xchg
xor
pop
push
andl
or
push
bound
cmp
movb
pop
rcl
dec
je
jo
push
ds
jne
test
cmp
jg
add
pop
testl
xor
enter
sbb
scas
enter
insl
sahf
sub
je
or
mov
repz
dec
mov
xchg
xchg
add
loop
out
loop
ror
dec
push
inc
bswap
imul
sahf
adc
pop
pop
cltd
dec
sub
sahf
bound
xor
shlb
dec
ljmp
dec
and
pusha
fsubs
fimull
lea
and
inc
data16
aam
mov
adc
and
push
je
je
sub
sub
sub
sahf
inc
jb
inc
pop
adc
jecxz
lds
mov
cli
out
sub
cmp
push
push
push
sbb
les
inc
and
cmp
jns
adc
loopne
leave
jg
cmp
sbb
fcmovnbe
inc
mov
push
das
pushf
jns
and
insl
dec
cmp
dec
jbe
and
lock
stos
mov
cltd
pop
movsl
pop
jle
xor
stos
mov
lcall
mov
flds
out
into
push
push
mov
daa
lret
jno
cmpsb
int3
adc
ljmp
push
adc
adc
push
cmpsl
push
mov
int3
xchg
pushf
test
adc
mov
jle
push
cmp
add
scas
mov
pop
jae
add
cmp
stc
pushf
rol
pop
jmp
xorl
pop
out
jmp
daa
adc
lock
cltd
lcall
js
fmulp
lods
and
repz
xchg
cwtl
nop
mov
lahf
jns
pop
outsb
scas
movsb
test
rol
mov
pop
xchg
and
lcall
adc
gs
jb
adc
mov
icebp
shlb
mov
icebp
add
out
outsl
dec
cmp
or
xchg
xchg
js,pt
test
xchg
ror
incl
pop
mov
or
mov
subb
sub
outsb
pop
add
inc
push
pop
mov
push
inc
mov
cmp
sbb
subl
in
ja
jne,pt
test
pushw
rolb
jno
sbb
lock
push
xchg
inc
test
xchg
jle
repz
or
sbb
aas
inc
and
add
test
cli
pusha
jg
out
mov
jae
pop
and
adc
xor
loopne
popa
rolb
jecxz
sti
rclb
dec
je
jg
loop
out
and
mov
fs
sbb
sbb
xor
xchg
mov
popa
or
lcall
les
gs
mov
xor
les
inc
mov
cmp
shl
lods
scas
fmuls
add
out
jo
loopne
inc
xorl
mov
in
in
add
test
inc
push
mov
aas
call
lods
jae
jae
xlat
or
mov
sti
loop
cmp
sbb
and
adc
shlb
cmpl
cmp
xor
jns
xor
loopne
push
or
cmp
std
xchg
xchg
pop
lods
pop
jbe
push
cwtl
in
out
jno
dec
and
lea
add
test
sub
mov
in
flds
sub
fiaddl
out
movswl
or
rcll
jb
mov
jnp
leave
out
stc
pusha
movsl
xchg
push
push
push
out
repz
aam
adc
int
gs
fstp
rclb
jle
inc
mov
sbb
mov
lock
mov
or
or
mov
pop
pop
ds
out
stc
cmp
add
dec
add
mov
fidivrl
or
push
in
test
mov
push
pushf
xor
mov
xchg
pop
xchg
mov
inc
and
sbb
stos
ss
icebp
and
pusha
ret
dec
jp
pop
jmp
lahf
mov
and
mov
and
add
cmp
out
sbb
movsl
cmp
iret
out
rol
mov
cmp
call
out
movb
xchg
testb
rolb
arpl
adc
jo
dec
fidivl
or
and
fcomps
push
sbb
loop
dec
aad
cmp
nop
ds
rorl
push
adc
fiadds
jge
fmull
sarl
jnp
aam
adc
out
sub
data16
mov
pop
es
jmp
sub
xchg
je
jne
or
mov
sbb
push
pop
test
idiv
mov
or
aas
pop
hlt
mov
call
rolb
les
andb
mov
inc
aas
dec
mov
out
roll
xor
jo
sti
xchg
push
xchg
pop
jae
push
mov
rorw
cmp
mov
in
out
test
insl
adc
test
and
jge
add
mov
cld
repz
pop
xchg
iret
scas
xchg
jp
sub
in
fcomi
cmp
ja
cvttps2pi
mov
inc
inc
decb
add
ficoml
popfw
sahf
outsb
pusha
pop
test
pop
or
ja
rolb
cwtl
and
dec
mov
scas
push
dec
pop
xchg
or
test
xor
popf
std
test
cwtl
mov
aas
into
into
les
lcall
dec
popa
inc
jp
loop
lcall
push
lcall
cld
add
and
inc
push
inc
nop
dec
lret
rcrl
xchg
push
cmp
in
or
xor
scas
pop
aam
daa
sahf
sti
mov
cmp
addb
insb
sbb
dec
cmp
lock
sub
mov
xor
xchg
ud1
sbb
mov
add
cmp
pushf
outsl
sbb
jecxz
push
cmp
not
shrl
movsb
outsl
pop
clc
jg
sbb
cld
das
data16
mov
rolb
lahf
pop
int
stos
popa
bound
fisubs
jge
and
or
sub
fldcw
pop
sbb
mov
xchg
add
mov
jb
stc
or
insb
pop
andl
jae
fldcw
imul
lret
pushf
xchg
fidivrl
xorb
push
in
notb
and
ret
xchg
mov
xor
xchg
push
xor
lods
scas
movsl
jns
repz
dec
repz
xchg
xchg
pushf
ljmp
shl
mov
mov
mov
jne
les
xor
pop
jg
std
mov
mov
lods
decl
mov
pop
lahf
dec
mov
mov
and
dec
into
cmp
out
and
sub
bound
jecxz
leave
cwtl
lods
in
cmp
push
test
xor
ret
add
out
loope
pop
xchg
jns
cld
mov
dec
imul
jbe
push
inc
pop
lock
sub
cmp
repnz
xor
inc
dec
and
jmp
jno
es
int
xchg
dec
insb
jg
out
aam
lods
cmp
mov
inc
sbb
bound
ljmp
clc
adc
adc
push
sub
adc
shll
cmp
cltd
ret
and
enter
fdivs
movsb
stc
mov
pop
push
rcrl
pop
lods
sahf
jmp
out
xchg
mov
jne
lock
enter
and
jl
fsubs
pop
push
and
fcoms
es
ss
in
xlat
mov
hlt
insl
push
jmp
incl
ds
sub
push
mov
dec
sub
dec
fisubs
and
stos
add
xchg
mov
xlat
or
outsb
fwait
rcll
push
scas
or
lock
icebp
pop
test
push
cmp
cwtl
outsl
cmp
out
xor
loop
out
push
xor
jo
jl
pop
jle
fcompl
inc
lret
or
ja
sahf
pop
xlat
push
sbb
pop
negl
in
lods
adc
inc
sub
mov
inc
mov
ljmp
jecxz
stc
mov
fldenv
inc
jb
cltd
xchg
mov
jg
and
je
xchg
movsl
and
pop
loop
sbbb
jl
aaa
cmp
mov
iret
test
insb
jecxz
sub
or
aam
inc
sbb
inc
fbld
orl
into
insl
cmpl
push
pop
int3
cli
clc
pop
popa
cmp
je
and
mov
imul
js
cmp
pop
add
fst
negb
cmp
mov
in
scas
aam
call
xor
adc
cmp
out
and
lahf
iret
sbb
jecxz
push
clc
push
xchg
sbb
sbb
push
cs
outsb
daa
pop
movb
pop
bswap
jns
ret
push
xor
push
inc
mov
popa
xchg
mov
je
or
aas
or
pop
push
push
scas
shlb
xlat
cwtl
js,pt
push
push
in
mov
xchg
fmull
mov
and
outsl
outsb
outsl
lock
pop
pop
out
dec
push
jno
pop
popa
dec
sbb
pop
xlat
loope
cltd
dec
adc
imul
cmp
fmuls
lea
jp
in
lods
test
mov
loop
push
fdivrs
inc
iret
inc
lds
push
mov
movsb
daa
pop
or
lcall
adc
lret
lods
sarb
mov
mov
out
cmp
mov
cmpb
adc
in
fidivrl
into
cwtl
mov
call
pop
arpl
push
popf
imul
sub
call
sub
inc
lret
roll
das
push
inc
push
sahf
das
sar
in
mov
dec
xchg
sarl
sbb
and
xor
xchg
sbb
adc
fadds
xchg
add
mov
push
push
stos
fwait
mov
test
cmpsl
adc
fwait
into
push
cmp
rolb
sub
ljmp
mov
adc
test
xor
mov
aam
ss
jp
out
movsb
daa
and
or
je
mov
je
popf
inc
add
push
cmpsb
ret
mov
fldz
lock
rorl
inc
xchg
pop
or
mov
stos
and
ret
sbb
xchg
leave
mov
xchg
mov
subb
lea
mov
and
addr16
xchg
pop
xchg
mov
lcall
pop
stos
push
insb
sahf
in
sbb
mov
aad
sbb
mov
mov
insb
lea
and
repnz
mov
lahf
movsl
js
pop
pop
lds
jb
adc
cmpsb
stos
add
mov
movsb
dec
and
into
jno
lret
push
adc
mov
movnti
sbb
sub
enter
add
mov
adc
mov
bound
pop
in
or
popa
andb
icebp
push
or
data16
arpl
scas
jo
fisttps
push
cmp
mov
and
sbb
notb
push
enter
stos
ja
lahf
cmp
mov
rolb
cmp
nop
mov
imul
cltd
jno
push
cs
loop
out
mov
movsl
push
xchg
sub
pop
mov
dec
ja
jmp
aad
mov
pop
clc
push
xlat
push
xor
mov
bound
lcall
arpl
fwait
in
jp
mov
adc
cli
and
mov
or
std
pop
dec
mov
addr16
dec
xor
nop
mov
push
mov
out
mov
pop
xchg
mov
stos
nop
jl
jecxz
push
std
xlat
adc
or
fisubrs
jae
xor
xchg
cli
push
cmp
out
rcl
cmp
sbb
lret
sub
mov
xchg
inc
aaa
pop
adcl
mov
outsl
jecxz
je
adc
loope
inc
cmp
repz
bound
lahf
jecxz
adc
and
inc
pop
icebp
jecxz
cmp
push
dec
repnz
mov
cmp
push
dec
loope
push
xchg
stos
stc
sub
jl
cmp
out
or
pop
aas
jmp
insb
and
in
and
cmpsb
dec
std
in
addl
lret
jp
addr16
loopne
xor
add
imul
mov
mov
jae
jge
imul
cmp
es
mov
ficoms
cmp
repz
test
lea
insb
and
push
pop
xchg
in
push
or
test
shll
cmp
in
or
mov
and
loopne
cmp
stos
pop
insb
cmpsl
push
addl
adc
insb
push
jl
int3
imul
ret
or
or
test
leave
ret
xchg
mov
out
into
sub
mov
xlat
cmpsl
xchg
inc
or
mov
add
leave
pop
jb
outsb
repz
and
lahf
into
mov
xchg
cmp
ficoml
xchg
fidivrs
arpl
add
inc
cmp
or
push
test
aaa
seto
je
dec
jae
inc
sbb
lods
lret
lcall
and
loopne
xchg
xchg
mov
cmp
mov
adc
mov
fnstsw
ss
pop
out
push
test
pop
inc
dec
in
out
dec
jmp
fcoml
mov
scas
push
jp
pusha
ss
insb
add
insl
pop
push
mov
loopne
cli
sbbb
mov
push
push
and
into
pop
insl
addr16
je
lock
lret
inc
mov
rcrl
sbb
sbb
push
xor
xor
cmpsl
xor
adc
sub
mov
push
adc
shlb
xlat
push
mov
ficompl
scas
pop
and
mov
rorl
push
jmp
and
or
cmp
pop
pop
shr
mov
adc
push
inc
mov
call
sub
inc
out
dec
fisttpll
dec
sub
pop
pop
filds
sub
xchg
adc
repnz
pop
dec
push
mov
jmp
cwtl
push
inc
pop
pop
or
xchg
or
pop
and
xchg
jo
and
adc
or
imul
cmp
lods
mov
call
mov
dec
test
cld
inc
push
rcrl
mov
jb
jno
jb
xor
inc
jnp
dec
jae
js
pushf
enter
mov
dec
jae
leave
cmp
outsl
mov
faddl
imul
xchg
sub
out
cmp
lods
adc
in
mov
pop
cmp
or
mov
push
add
divps
in
test
je
popf
sbb
repz
inc
or
ss
mov
out
ja
adc
mov
cmp
or
jle
fmuls
addb
lods
xor
inc
push
aam
mov
decl
mov
scas
mov
and
mov
inc
cmp
subl
xor
push
xor
cmpsl
mov
mov
fisubrl
ret
inc
stc
sub
pop
mov
adc
mov
lock
and
jbe
stc
or
sub
xchg
shll
add
ljmp
and
pop
sti
or
push
push
sbb
mov
out
repz
test
and
loopne
mov
inc
cmpsl
enter
fidivrs
lret
sbbb
add
imul
adc
mov
mov
sub
add
lret
pusha
std
cltd
fwait
sahf
jne
iret
bound
jbe
shlb
lea
loopne
mov
or
into
cmc
and
lret
fs
cltd
cs
scas
sbb
lret
lahf
incl
je
fsubl
dec
push
push
fisttpl
shr
jmp
jp
test
mov
inc
mov
mov
sub
imulb
incb
je
jmp
aam
xchg
enter
cmc
fstpl
aad
add
jnp
cmpsb
xor
adc
mov
in
jbe
enter
adcb
jmp
ret
testl
fidivs
insb
les
imul
lret
push
clc
fbstp
mov
flds
jne
xchg
adc
cmp
sub
cmp
sbb
and
dec
stos
pop
sbb
jns
sbbb
and
mov
push
mov
dec
xorb
stos
mov
mov
aas
mov
hlt
push
loop
jecxz
push
int3
mov
sbb
mov
sub
adc
push
mov
out
jmp
lahf
xchg
adc
xchg
push
and
push
test
mov
push
and
aas
enter
mov
adc
sbb
gs
loop
mov
xchg
inc
mov
fmull
and
fcoms
pushf
aaa
cmpsl
dec
cld
sbb
dec
sbb
enter
dec
dec
into
rcl
aaa
lock
push
cmpsb
mov
sub
mov
sub
inc
popa
rorl
add
mov
jne
inc
jo
add
hlt
inc
dec
pushf
and
jg
jo
sahf
push
aad
das
adc
iret
outsb
xchg
sub
jbe
adc
ljmp
sbbl
or
daa
cli
inc
arpl
cmp
mov
ja
xlat
cltd
into
sar
xlat
mov
dec
add
inc
push
bound
negb
mov
adc
mov
nop
xchg
or
xlat
jae
dec
inc
icebp
andb
jno
addr16
xor
fadds
dec
sub
mov
push
pusha
test
ja
jmp
test
xlat
mov
into
jmp
shll
xor
jmp
mov
or
lret
mov
inc
and
imul
jno
in
xchg
stc
or
xorl
je
push
sub
inc
popf
jne
sbb
inc
and
test
jg
rol
xor
xor
test
into
mov
cmpsl
cmp
mul
fsubs
pusha
sbb
pop
cmp
adc
pop
adc
xor
mov
cmpsb
push
cmpsl
popf
add
mov
sbb
daa
inc
stc
data16
hlt
out
jp
add
inc
and
adc
dec
je
ja
mov
sbb
sahf
aaa
icebp
add
add
outsl
mov
shlb
cmp
pop
xlat
arpl
or
and
js
ljmp
jnp
jmp
push
xor
in
jmp
lods
ljmp
push
nop
mov
pop
jne
push
rclb
jns
sbb
or
shl
xor
lret
push
mov
rcl
add
or
xchg
fistps
jle
mov
fs
xchg
lds
add
and
sbb
cmp
gs
add
mov
jbe
jbe
lods
cld
ffreep
jmp
mov
mov
jmp
adc
xor
lods
inc
pushl
push
loopne
pop
adc
mov
cs
popf
fdivl
or
push
dec
ror
and
dec
cmpsb
pop
aad
cmp
jbe
mov
mov
jnp
ret
mov
fcmovne
lea
addr16
mov
add
int
ret
sbb
loope
mov
cmpsl
mov
ljmp
dec
cmpsb
js
stos
mov
js
push
jbe
sub
sbb
jl
fwait
push
std
cmp
lea
stos
mov
jge
addr16
dec
jmp
out
add
pop
sub
loopne
nop
mov
xchg
xor
loop
int
enter
cwtl
movsb
in
adc
loope
imulb
jno
mov
cmpsl
fcmovu
sbb
xlat
fbld
daa
or
incb
sti
in
outsb
or
mov
mov
push
aad
xchg
lock
andl
stos
fwait
leave
int3
dec
cmpsb
addl
lds
pop
test
pop
lea
nop
ja
xor
push
and
mov
xor
pusha
cmp
or
add
fildl
add
cmpsl
stos
aaa
mov
and
es
aam
paddb
adc
mov
shll
mov
mov
pop
xor
mov
out
lock
pusha
dec
dec
incl
imul
pop
inc
push
insb
iret
and
xchg
adc
stos
ret
mov
mov
cld
mov
adc
bound
adc
into
add
xor
mov
adc
fisttpl
jns
cmpsl
cmpsb
mov
lret
pop
mov
ret
popa
stos
xor
lods
enter
lds
inc
push
mov
in
sbb
pushf
or
pushf
dec
stc
lods
jno
es
ficomps
xchg
sar
mov
icebp
xchg
test
lods
jp
aas
arpl
sbb
cmp
sahf
in
jle
aaa
outsb
push
mov
fimuls
push
ret
cmp
xor
inc
loopne
aaa
adc
ds
adc
fstpl
lds
pushf
pop
pop
inc
xlat
or
inc
and
push
mov
adcl
sbb
mov
int
lods
lock
fs
enter
sub
xchg
loopne
test
mov
cwtl
inc
jge
inc
lock
dec
iret
mov
add
jge
out
push
mulb
call
cmc
push
xor
test
and
xor
lret
outsl
ret
push
jbe
cmp
pop
xchg
jb
xchg
lods
mov
stc
dec
xchg
arpl
push
aas
and
lds
lds
es
sbb
cmp
stos
push
mov
dec
fchs
inc
sbb
std
sbb
pop
adc
xor
cmp
clc
inc
jo
sub
xlat
xor
xchg
xchg
or
add
ror
mov
xchg
adcb
mov
addl
loop
mov
or
pop
push
pop
add
xor
mov
aam
out
xor
mov
out
add
xchg
aad
mov
push
jnp
ds
mov
add
add
pop
adc
fcomi
scas
popf
mov
cmp
or
repnz
movsl
mov
lcall
jmp
push
sbbl
out
or
outsl
cmp
ret
cmp
js
fwait
mov
and
and
dec
or
test
mov
and
mov
andb
enter
int3
xchg
push
dec
pop
mov
or
sarl
je
cmp
lcall
frstor
push
lock
cmpsl
mov
cmc
data16
sub
mov
bound
jno
pop
out
adc
xlat
xor
test
jne
test
and
movsl
sub
xor
es
fld
or
int
fisubrl
mov
ffreep
sbb
dec
cmpsb
cmpsl
aam
pop
lock
sbb
xchg
adc
rolb
cld
mov
xchg
or
test
mov
cmpsb
or
dec
loopne
and
mov
sarb
sbb
loop
lahf
shrb
jno
ret
pop
fiaddl
mov
test
sbb
lds
fistl
lds
push
pop
pop
push
mov
lcall
jmp
xchg
mov
cmp
jbe
sbb
xor
pop
popa
sbb
test
ret
mov
mov
in
repnz
push
xchg
add
fldl
push
cwtl
pop
ljmp
lret
enter
sbb
sbb
dec
cltd
dec
inc
sub
cwtl
movsl
aad
push
push
sub
je
dec
movsl
push
leave
arpl
scas
sub
pop
and
shlb
cltd
add
imulb
ljmp
das
fsubrl
outsb
add
fisttps
fsubr
xor
cs
sahf
sbb
int
imul
cwtl
xor
fistpl
lods
push
dec
repz
and
push
loop
lock
iret
shrl
mov
call
jnp
ret
ss
call
sbb
pop
jg
stos
inc
mov
movsb
outsb
xchg
bound
out
mov
jl
movsl
push
mov
push
ret
pusha
xchg
stos
scas
add
mov
pushf
jae
mov
and
mov
xor
add
in
test
les
imul
adc
sarb
sbb
and
or
mov
cmp
out
inc
mov
pop
push
xchg
push
mov
adc
mov
in
push
jae
cmp
sub
faddp
out
mov
insb
mov
cmp
jne
mov
cmp
push
push
xchg
and
pop
sbb
je
pusha
stos
movsl
rorb
lea
mov
jae
push
test
hlt
mov
cmpsl
pop
fsubrs
lahf
sub
or
iret
loope
mov
outsb
mov
xorb
xchg
loopne
in
and
gs
stc
and
add
cmp
jecxz
arpl
adc
add
dec
pushf
sub
nop
inc
popf
addr16
push
fsts
out
push
push
int
ljmp
enter
cmp
lea
dec
dec
stc
fisubs
clc
roll
test
je
xor
insb
rorb
push
rcr
je
jno
test
in
mov
jle
scas
sub
push
sarb
wrmsr
mov
jl
cwtl
inc
orl
push
inc
repz
push
test
jmp
addr16
repz
cmp
inc
imul
hlt
je
cmp
push
sbb
imul
sub
xor
jmp
je
xor
or
or
mov
inc
adc
xchg
rorl
adc
clc
cmp
ficompl
push
xchg
cmp
add
ljmp
sub
aad
push
sarb
jns
pop
ret
cmovs
jae
mov
jge
push
sti
dec
adcb
addr16
dec
fidivs
ret
fdiv
lock
daa
pop
negb
lds
push
mov
push
dec
call
mov
mov
mov
sub
pop
jmp
mov
iret
adc
adc
mov
xor
je
les
mull
push
ror
dec
pop
sbb
push
in
pop
push
sbb
push
aam
cvttps2pi
jmp
jnp
stc
adc
mov
inc
adc
fs
mov
lds
jnp
push
cli
inc
inc
add
xchg
xchg
pusha
adc
out
or
addl
push
outsl
dec
push
push
xor
loopne
inc
lcall
test
mov
inc
push
adc
mov
cmp
mov
insl
insl
mov
into
ret
fsubs
in
cwtl
xor
icebp
mov
leave
jb
enter
mov
repz
lret
addr16
outsl
and
pop
cli
lock
mov
or
in
icebp
fcomps
adc
sub
sub
inc
iret
or
hlt
adc
adc
loopne
dec
add
inc
dec
lret
push
xlat
fnstsw
jbe
shlb
add
lods
cld
dec
mov
sti
subl
mov
cbtw
enter
in
xor
and
add
out
push
aad
cwtl
inc
repnz
push
push
in
adc
gs
inc
mov
into
call
les
push
mov
mov
jmp
adcb
pop
call
adc
ja
into
in
mov
outsb
int3
icebp
cmp
fwait
jg
pop
pop
call
cmp
daa
mov
ja
in
iret
addr16
cmc
dec
mov
clc
push
test
or
lret
loop
cmp
mov
sti
fidivrs
lods
jmp
arpl
inc
sbb
and
mov
insl
fadd
mov
xor
lcall
sub
push
lods
inc
and
je
adc
inc
jg
sub
shl
gs
test
inc
fldenv
or
cmp
xorb
jnp
std
jno
dec
mov
adc
mov
xchg
aas
mov
xor
pop
xchg
push
out
push
stc
cmp
insb
or
push
cmpsl
jb
jae
lock
push
push
mov
cmp
lods
scas
adc
add
fdivl
aas
adc
mov
das
inc
data16
es
repz
sbb
out
push
fildl
push
pop
lret
pop
mov
xor
inc
sbb
arpl
push
push
or
cmp
loope
add
out
mov
mov
scas
push
imul
out
pop
inc
cs
imul
or
mov
mov
stc
mov
lods
mov
lods
hlt
adc
sub
push
mov
or
iret
inc
int
les
adc
shll
insb
out
shlb
dec
sub
pop
xchg
lods
xor
stos
loopne
xor
jne
sbb
push
mov
inc
pusha
xor
sbb
addl
inc
xor
mov
mov
sub
insl
test
push
cwtl
fs
lds
cmp
and
in
pop
add
sbb
adc
xchg
dec
sbb
xlat
inc
or
scas
mov
iret
in
xor
sub
stc
inc
inc
pop
and
sbb
cwtl
aad
sbb
adc
lret
and
mov
mov
dec
lahf
and
out
pop
sub
inc
ret
xchg
movl
dec
testl
enter
andl
fwait
nop
jg
lret
and
mov
or
jnp
in
dec
and
enter
popf
clc
mov
mov
add
sti
pop
dec
and
out
movsb
adc
sub
cmpsb
in
pop
jb
inc
xchg
inc
inc
xor
xchg
pop
fwait
sbb
push
mov
cmp
nop
sbb
orl
je
push
sbb
dec
pop
xchg
mov
jle
cmpsl
xchg
push
mov
sbb
ljmp
jp
inc
mov
fidivrl
adc
mov
mov
adc
push
and
int
pop
mov
fadd
xorl
mov
mov
adc
mov
xchg
inc
mov
jbe
add
push
adc
pop
or
push
push
push
sbb
mov
jb
mov
repnz
sbb
mov
popa
loopne
sub
jp
fdivrs
adc
jle
stc
insl
aam
jns
shl
push
hlt
mov
or
pop
pop
stos
pop
adc
gs
adc
and
clc
nop
or
lcall
je
add
xor
into
jge
stos
mov
push
in
movsb
cld
das
in
dec
imull
xchg
sti
sub
arpl
nop
mov
adc
cmp
pop
mov
aaa
leave
not
xchg
ficoml
cmp
xor
dec
push
adc
imul
xor
add
in
mov
lahf
flds
cltd
dec
out
mov
test
pop
popa
js
jno
pop
and
repz
inc
and
xorb
cmp
and
dec
out
inc
insl
scas
ds
mov
xchg
sub
iret
into
mov
xor
mov
jne
cmpl
or
shl
mov
inc
mov
std
dec
fdiv
cwtl
mov
adc
push
push
xchg
lret
xorb
idivb
mov
inc
dec
pop
incb
lea
test
cmp
sarl
mov
out
mov
dec
ret
sbb
fs
sbb
xchg
jae
push
mov
sbb
or
or
xchg
imul
push
xchg
daa
sbb
jecxz
les
pop
add
mov
sub
js
outsb
or
fucomp
lds
dec
mov
mov
sbb
mov
rcrl
es
aaa
lods
out
push
sbb
xchg
stos
mov
inc
cwtl
cmp
xor
into
push
movsl
insl
daa
movsl
sarb
xor
jle
inc
cltd
imul
aas
popa
pop
jbe
adc
rorb
jg
mov
test
pop
jns
cmp
dec
iret
les
jo
das
mov
jmp
sub
ret
sbb
and
aad
ret
mov
cmp
je
hlt
ret
dec
shl
fistps
push
jo
into
push
dec
popa
or
fs
testl
daa
xchg
loop
nop
out
mov
lock
gs
fdiv
cltd
sub
inc
inc
pop
push
xchg
popf
fbld
ds
shrl
cmp
mov
testb
push
stos
jg
or
movsb
lret
inc
cmc
ret
repz
ds
dec
cmc
call
and
pop
fisubrl
xchg
imul
dec
in
inc
cmp
arpl
or
inc
dec
jmp
jae
pusha
repz
lcall
shrb
add
std
cmp
push
mov
sbb
pop
and
mov
data16
out
push
cmp
push
inc
cmpsl
xlat
daa
xchg
push
popa
jb
cli
jecxz
ss
lods
fwait
mov
movsb
sbb
stos
test
push
jp
push
pop
cmpsl
setbe
sub
cmp
mov
sub
cmp
test
imul
mov
mov
pushf
or
mov
pop
or
mov
lods
adc
icebp
aas
fimuls
mov
adc
mov
dec
dec
test
xchg
inc
lret
and
jge
or
into
cmpsl
imul
cmp
orl
or
popa
mov
repz
sbb
adc
add
jle
pop
fistpl
dec
mov
jo
mov
push
mov
mov
mov
sbb
cmp
add
sub
daa
int3
enter
xor
andb
xor
push
icebp
push
xchg
add
adc
pop
pop
xchg
idivl
adc
aaa
mov
and
adc
inc
mov
mov
cmpsl
stc
mov
fiaddl
testl
dec
xlat
nop
outsb
xor
in
xchg
mov
and
stos
add
sbb
sarb
jb
push
sbb
jecxz
cmpsl
push
outsl
inc
xor
in
negl
out
push
cld
xor
sbb
jb
test
test
add
int3
xchg
hlt
gs
lods
arpl
jb
mov
pop
ficompl
aas
call
movsl
xchg
mov
xchg
cmpsb
adc
mov
arpl
mov
je
mov
push
jns
fstp
dec
xor
pop
sub
outsl
adc
gs
pop
in
adc
mov
and
pop
das
call
fidivrl
movb
lret
sub
lods
sbb
jg
repnz
jb
lods
fiadds
mov
ret
sub
fs
push
inc
push
arpl
xchg
add
and
stos
jnp
out
loope
push
mov
in
rcl
jns
mov
fwait
outsl
aam
and
call
fiadds
cmp
xlat
lahf
mov
mov
ljmp
sub
lret
scas
push
mov
push
mov
xor
clc
loopne
out
std
mov
je
mov
sti
mov
pusha
cmp
stos
sub
sub
aad
jmp
dec
out
jle
rcrl
xor
dec
jecxz
in
push
sbb
and
test
ja
das
pop
in
lret
pusha
inc
stos
cmpsl
xchg
rcrb
outsb
pop
dec
pop
sub
cmp
mov
xlat
fcoms
inc
je
lcall
adc
int3
iret
fcoms
pop
jge
in
push
push
insb
xchg
sub
push
sub
stos
cmpsl
icebp
cmp
add
sub
inc
mov
mov
les
in
mov
xlat
mov
hlt
je
stos
dec
lret
hlt
aad
or
xchg
and
xor
sub
sbb
jbe
or
mov
mov
or
push
dec
jp
in
aaa
popa
sbb
mov
sahf
mov
stos
int
push
mov
in
xchg
add
inc
mov
lds
stos
sub
pop
cli
adc
mov
mov
pop
sahf
cmpsl
movsb
adc
push
test
mov
sahf
push
in
and
outsb
mov
mov
leave
adc
lds
scas
pop
jae
xor
sahf
jns
inc
mov
int
enter
repz
dec
xorl
cmp
sti
aad
jecxz
mov
aaa
inc
pop
shlb
pop
es
imul
out
add
psrad
outsl
roll
mov
sbb
nop
cmp
mov
loopne
and
pushf
ficomps
mov
dec
sub
call
adc
std
cmp
ja
call
jp
movl
ret
lds
and
stos
sub
or
mov
xchg
jo
push
cmc
cli
nop
dec
xor
test
in
push
push
ljmp
sbb
xchg
int3
scas
stos
sbb
loopne
call
mov
hlt
lods
in
pusha
les
das
stc
mov
cs
push
dec
xor
jge
loope
aam
out
mov
xor
cwtl
inc
or
xor
pushf
insb
xchg
ss
pop
push
add
addr16
or
mov
adc
hlt
sti
data16
dec
cltd
lods
and
add
mov
lahf
xchg
pusha
or
mov
cwtl
test
rcr
mov
addl
test
fdivl
xor
arpl
imul
cli
xor
dec
mov
push
xchg
repz
subl
outsl
daa
fbstp
pusha
and
ret
or
cmpsl
mov
xchg
jns
xchg
xchg
test
lret
loopne
push
add
jne
call
ficomps
mov
xlat
or
jcxz
out
and
adcl
mov
lods
ss
es
sbb
test
orb
and
dec
roll
adc
lcall
fmull
inc
mov
repnz
add
jl
pop
pushf
inc
lret
mov
xor
bnd
adc
shlb
rcrb
lret
jbe
arpl
mov
or
xor
xchg
loope
sbb
pop
sub
jnp
andl
or
cld
pop
test
mov
fisttps
sti
xlat
inc
push
add
call
mov
mov
insb
sbbb
lcall
mov
ret
pop
lods
mov
mov
cmp
aam
clc
mov
pop
fnstenv
roll
out
mov
lock
dec
jmp
out
aad
sbb
and
movsb
xchg
cli
sbb
data16
cs
pop
mov
outsl
and
push
adc
or
shll
inc
fsubs
daa
stos
and
sub
or
aaa
shll
lds
dec
dec
mov
jp
sub
add
xchg
dec
xor
pop
test
call
rcrb
je
fs
loopne
rcrl
mov
and
lock
jl
loope
in
out
adc
or
push
imul
dec
scas
add
xchg
xchg
outsl
and
hlt
sub
xchg
shlb
std
stos
dec
cli
push
sub
bound
push
dec
lcall
mov
daa
enter
aam
shll
mov
add
pop
sbb
xchg
mov
jle
cmp
aam
mov
sbb
add
repz
cmp
repz
mov
xor
ret
jg
mov
jbe
pop
in
outsl
stos
repz
or
cltd
fxch
xchg
testb
dec
lea
cmp
clc
xchg
mov
mov
insb
inc
daa
mov
scas
mov
jno
sbb
cs
and
dec
mov
and
out
out
xchg
clc
or
pop
or
xchg
push
cmp
jl
or
inc
sarb
daa
sub
xchg
lods
ljmp
push
cltd
push
push
popa
into
and
mov
js
dec
adc
mov
lods
fists
cmp
es
sbb
cmp
add
cmp
movsl
mov
addr16
mov
sub
pop
sub
add
jge
inc
aaa
stos
rep
fbstp
add
test
jne
adc
pop
out
dec
inc
push
jge
in
sbb
int
sub
rolb
loope
xor
arpl
sbb
dec
adc
jp
es
adc
sbb
pop
shll
cli
idivl
mulb
xor
pop
jge
ffree
cmp
sti
mov
or
insb
xchg
std
out
pushl
or
insl
jnp
fldl
sub
ss
add
xrelease
mov
js
popa
pop
jo
dec
ret
adc
mov
push
mov
loop
jb
ss
xor
mov
loop
jo
aam
loope
and
pop
inc
fiaddl
popf
mov
mov
pop
adc
adc
clc
cmpl
lahf
adc
icebp
fidivrs
out
mov
lret
sbbb
fwait
mov
mov
push
cs
ja
seta
daa
inc
dec
inc
sahf
mov
fbstp
aaa
mov
adc
ljmp
movl
insb
negl
pop
stc
pushf
lahf
je
cmp
or
sti
add
add
lods
sub
xchg
jl
push
cmp
lea
xor
loope
das
pushf
mov
mov
loopne
sbb
push
sahf
push
dec
xor
js
or
add
cmpsb
stos
add
outsb
push
hlt
cli
mov
test
push
push
cltd
repz
inc
sub
and
std
pop
mov
push
setno
xor
xor
leave
mov
dec
xchg
ret
adc
jp
dec
cmp
adc
mov
mov
dec
iret
es
pop
loop
jne
andl
clc
stos
sub
into
scas
lock
add
push
dec
or
test
jno
pop
inc
mov
pop
cmc
jns
enter
mov
adc
cmpsl
scas
lods
out
lret
and
pop
xchg
nop
rcll
xor
push
cmp
fistl
lcall
in
mov
aam
or
and
addr16
sub
xor
xchg
lahf
inc
cld
dec
and
cmpsb
jg
jbe
std
jp
dec
sub
clc
enter
adc
add
adc
dec
fdiv
test
test
shll
xor
adc
shll
fistl
xchg
cmp
ret
push
mov
pop
mov
pop
mov
imul
or
movsb
xor
into
jge
je
pushf
outsl
jae
push
mov
xadd
lcall
mov
fs
in
cs
iret
lret
movsb
push
dec
out
mov
cmp
sti
or
mov
pop
fimull
adc
out
repnz
ljmp
cwtl
mov
mov
enter
fwait
push
daa
xchg
in
lods
mov
lods
test
mov
scas
fwait
popa
loope
enter
mov
xchg
inc
cmp
call
adc
dec
mov
adc
ds
repnz
add
js
xor
int3
lods
jne
jns
fs
lods
nop
in
leave
and
push
rorb
hlt
add
pop
scas
or
push
sbb
sbb
lods
sub
mov
hlt
push
cmp
call
fimuls
jp
jns
or
and
inc
cli
mov
in
xor
mov
out
mov
xor
fisubs
mul
pop
xchg
in
cmp
loope
mov
sub
mov
sbb
mov
or
js
test
mov
addr16
adcb
call
pop
xor
xlat
incb
adc
jp
fsubrp
mov
jmp
xor
in
fldl
xchg
ret
fisubrl
pushf
xchg
mov
xor
rorl
jbe
cmpsb
adc
ja
cmp
ss
and
cmc
cmp
pop
sub
faddl
pop
mov
cmpsl
bound
add
dec
push
insb
jge
sbb
sub
mov
sub
fcmovnb
lahf
mov
cltd
adc
ret
addb
push
jns
jo
or
and
incl
and
bnd
jo
scas
scas
sub
addr16
sub
daa
les
lahf
pusha
or
ljmp
inc
sbb
jno
mov
loope
and
lds
fiadds
loopne
sbb
popf
dec
pop
rcr
inc
mov
test
outsl
sbb
add
dec
push
andb
in
sub
sbb
sahf
push
xor
xor
test
jl
pusha
pushf
dec
lea
cld
or
cli
ss
pop
xchg
xchg
cmc
cmpsb
cmc
icebp
jl
or
mov
subb
push
xorl
test
orl
mov
cmpsl
sbb
dec
and
cltd
or
mov
imul
mov
dec
cmc
cmpsb
inc
sti
push
mov
or
cmp
aas
add
xchg
dec
pop
fwait
dec
shll
cmp
mov
inc
mov
into
lods
fidivrs
lock
ret
ss
adc
mov
inc
inc
push
data16
cltd
pop
sub
push
cmp
and
lea
divb
stos
pop
sub
jae
jge
mov
add
iret
mov
iret
mov
push
lret
mov
mov
inc
push
sbb
mov
jns
std
rolb
popa
add
scas
mov
xchg
insl
stos
lret
mov
hlt
xlat
imul
jl
pop
aaa
fidivs
cmpb
and
call
cld
pushl
xchg
fisubl
jp
test
rolb
mov
push
lret
dec
mov
sbbb
andl
scas
mov
out
pop
xchg
fsubrs
iret
call
inc
adc
jl
ljmp
loop,pt
gs
jbe
rolb
sbb
cmp
pop
push
push
faddl
es
ret
sahf
int3
test
jecxz
loope
push
nop
pop
call
cwtl
ret
aas
push
mov
shll
aas
inc
stc
fstpt
iret
push
scas
andl
mov
add
jmp
movsb
int
jge
xchg
out
or
sti
xor
push
cmc
pusha
xchg
xchg
sbb
mov
xchg
dec
mov
fstps
dec
test
rol
xchg
stos
sub
xchg
lea
loopne,pn
loope
add
lods
mov
mov
mov
popf
xchg
jae
mov
lods
xor
je
mov
das
lods
xchg
in
stc
cmc
mov
clc
add
cmp
hlt
lret
mov
testb
lret
subl
dec
dec
aas
jp
push
pop
jno
lods
stc
enter
es
jg
or
fsubs
lcall
mov
inc
int
repz
xor
dec
mov
ljmp
jge
shrb
call
cwtl
test
mov
jo
jg
insb
xlat
scas
xchg
hlt
xor
idiv
jge
jno
test
add
push
inc
sahf
ss
inc
rolb
adc
sbb
mov
insb
shll
loopne
or
lret
mov
jbe
add
mov
inc
push
cmp
test
xchg
ds
dec
xor
sub
aad
arpl
add
gs
mov
or
aad
sbb
lret
fwait
add
into
js
or
stc
push
sbb
xchg
jmp
adc
and
xor
ret
cmp
je
mov
mov
adc
popa
stos
xor
mov
jl
add
lcall
cmpsl
xor
jae
shll
push
fimuls
dec
mov
mov
fs
lret
lock
inc
jl
or
adc
inc
push
pop
sub
lock
sub
aaa
push
jo
aaa
hlt
iret
scas
notl
push
and
and
pop
push
mov
int3
test
inc
scas
scas
sbb
mov
mov
andb
lock
push
mov
rcll
xchg
push
in
sarl
inc
adc
push
pop
jno
sub
iret
int3
ja
xor
push
icebp
test
mov
insl
repnz
sub
inc
push
dec
stos
je
paddw
out
and
roll
adc
add
jae
cmp
inc
in
shlb
or
cmp
lret
leave
inc
cmp
push
roll
add
int
and
lcall
push
lea
sub
fiadds
call
bound
aam
lret
pop
dec
lahf
pop
loopne
lret
hlt
jp
adc
stos
movd
loopne
ja
pop
in
mov
inc
ret
xchg
adcl
mull
inc
jle
lods
mov
fcmovnb
hlt
ret
ss
stos
and
xchg
xchg
and
ret
stos
add
inc
loop
push
lret
inc
cmp
mov
sti
adc
jge
test
insl
vmovdqa
les
cmp
test
xor
jno
cmp
jp
push
push
dec
cmp
sahf
fisttpl
jo
sbb
push
push
mov
mov
ret
xchg
outsl
sti
jg
arpl
pop
std
leave
sahf
cld
and
stos
aad
xor
sub
cmp
lods
in
bound
aas
insb
jl
dec
jno
idivl
orl
push
lret
mov
int3
xchg
push
and
xchg
sbb
inc
xor
push
sub
add
in
popa
into
jl
lret
outsb
dec
lret
xchg
lods
mov
or
cmp
jbe
pop
repnz
adc
push
pop
jmp
fcompl
insl
mov
in
cmp
push
cmp
adc
push
loope
je
in
dec
sahf
push
aas
jns
ljmp
mov
lds
je
mov
leave
mov
js
lods
jmp
inc
fwait
cli
cmc
pop
je
pop
mov
scas
std
lods
inc
sbb
lret
cmc
add
pop
adc
std
dec
xchg
jecxz
dec
mov
outsb
ds
sbb
fcmovu
scas
test
cmp
jecxz
jo
mov
xchg
sbb
lret
cltd
cs
sbb
jb
jg
adc
sub
vpmulhw
mov
inc
dec
or
xlat
pop
xor
dec
pop
lahf
iret
pop
repz
movsb
cmp
hlt
or
inc
cmp
add
fldenv
aas
pop
xchg
pop
pop
pop
xchg
pusha
cld
repz
ret
int
jnp
sub
mov
cmp
mov
aaa
dec
mov
gs
sbb
and
fst
mov
and
inc
fisubs
xlat
sbb
movsb
mov
popa
xor
mov
leave
or
xchg
fnstenv
sahf
push
pop
sub
dec
ftst
inc
mov
mov
xchg
pop
popa
mov
adc
mov
rcll
aaa
pop
mov
inc
sub
mov
in
mov
iret
das
lahf
fcoms
fistpl
insb
fadds
inc
mov
lock
mov
or
fs
inc
mov
arpl
js
mov
mov
rclb
arpl
mov
pop
xchg
push
ljmp
out
mov
jns
fidivs
loop
scas
xor
dec
int3
xor
xchg
bound
sub
out
mov
xor
inc
ss
sub
out
jg
mov
mov
mov
leave
add
push
and
aam
jp
xchg
mov
and
mov
mov
and
jns
sub
movsb
mov
dec
shrl
jecxz
lcall
iret
sbb
jg
ss
pop
inc
and
jo
sbb
scas
inc
dec
pop
add
popf
and
ds
outsl
pop
jmp
gs
imul
mov
xchg
push
xchg
aaa
in
sti
inc
adc
sbbb
movsl
mov
shrb
std
sbbb
inc
ret
mov
xor
xlat
xchg
cs
cmpsb
cvtdq2ps
decl
pop
fstps
call
shlb
orl
xchg
lds
out
mov
mov
lsl
cmp
addb
sbb
popf
add
mov
sbb
add
cld
mov
jmp
xchg
ficoms
xchg
les
lods
mov
mov
sbb
adc
and
in
mov
mov
mov
sbb
dec
mov
out
clc
cld
pop
lods
jl
cmp
insb
insb
push
repnz
sbb
aad
cmp
test
popl
out
mov
jno
inc
or
cli
sbb
cmp
adc
xor
test
into
xchg
xchg
xchg
push
add
or
popf
add
add
mov
clc
adc
rcrl
fistl
imul
xchg
add
ret
ds
rcr
mov
cwtl
shr
inc
push
shll
jnp
push
dec
cmp
adc
loope
arpl
xor
subl
add
adc
mov
cmp
dec
sub
adc
xor
repz
cmp
lret
push
mov
jp
cmpsb
idivl
mov
fimull
sbb
pop
pushf
pop
pop
push
and
in
and
fcomps
mov
push
jmp
lahf
or
add
es
cwtl
push
je
arpl
mov
inc
xor
and
pop
repz
sti
sarl
jns
mov
push
xor
sbb
adc
push
addl
mov
push
mov
mov
or
std
add
rorl
rcll
fdiv
je
out
bound
test
jmp
xor
jbe
jb
cmp
xchg
andl
cmp
push
mov
aam
mov
insb
inc
push
jno
sbb
mov
push
xor
mov
or
pop
lock
hlt
mov
xchg
sbb
jl
mov
adc
sahf
aad
jl
mov
xchg
cs
mov
cs
movsl
cmp
push
jno
les
cmc
loop
mov
mov
jo
data16
mov
aaa
push
inc
aad
or
addb
mov
mov
jl
inc
xor
jmp
pop
pop
inc
xor
sbb
and
mov
scas
stc
jbe
test
adcb
xor
sub
ljmp
iret
jns
repz
push
mov
pop
and
imul
pop
xchg
std
lea
mov
jbe
enter
cmp
pop
test
mov
xchg
out
jge
inc
aam
mov
enter
test
push
into
outsb
xor
add
mov
loop
mov
push
int3
pop
inc
loopne
enter
lods
inc
jp
clc
push
or
lret
popf
mov
test
inc
clc
arpl
xor
xchg
je
dec
int3
inc
mov
mov
es
xor
lea
pop
push
cmpsb
mov
mov
out
xchg
cmp
push
push
shrl
or
push
add
ret
inc
add
jmp
movsb
lcall
icebp
dec
mov
push
stos
movsl
jg
and
lock
xchg
repnz
xchg
or
add
mov
stos
jno
adc
scas
mov
fwait
cmpsl
loope
cmp
push
mov
pop
sub
sbb
ret
and
imul
mov
ret
jb
faddl
roll
xchg
pop
dec
and
push
ss
das
idivl
aas
inc
sub
pop
out
cmp
push
mov
mov
xchg
scas
mov
mov
cld
pop
mov
mov
pop
fdivrs
popa
loope
mov
cmp
jge
fwait
sbb
movsb
sbb
or
fcompl
das
loop
or
sti
jecxz
inc
daa
fsub
push
stc
pushl
cmp
sbb
sbb
test
jae
sub
dec
or
sub
xor
in
cld
cmp
xor
xchg
in
das
or
and
xor
lods
add
sbb
or
aam
out
loop
pop
lea
jmp
jns
mov
push
push
sbb
push
push
adc
inc
in
pop
cmpsb
shlb
inc
pop
ret
pop
stc
lahf
leave
out
mov
pop
jmp
ds
add
add
jns
fisttps
icebp
mov
insl
out
gs
cld
or
pushf
cld
sbb
rcrb
mov
add
and
add
cmp
ljmp
and
xchg
cmp
mov
or
jle
and
push
mov
shll
popf
jecxz
les
mov
xchg
xchg
pop
sub
std
cld
je
fcmovb
fstl
inc
inc
inc
sub
cmp
or
pop
xor
hlt
push
and
xor
fwait
mov
xchg
repz
test
idivb
popf
mov
or
fistps
aad
inc
in
es
int3
movsb
mov
out
and
mov
mov
idivb
inc
and
dec
aas
push
jecxz
mov
out
push
bound
jb
mov
test
insb
movsl
das
sahf
dec
jmp
xchg
jno
aaa
arpl
lahf
ficomps
jg
jmp
sub
into
test
xor
sub
sub
fldl
pop
jp
das
mov
enter
xchg
pushf
subl
mov
cs
fmuls
jmp
cld
fstl
int
mov
adc
fstl
nop
sub
cmc
divl
fdivrs
in
xor
jae
pop
mov
bound
adc
dec
inc
sub
push
faddp
ss
xchg
testl
das
rclb
mov
loope
je
cmpb
dec
idivl
cli
call
adc
mov
inc
jp
and
test
imul
rcrl
pop
jp
jg
shll
cmp
in
push
cmpb
push
jg
sub
mov
les
and
cwtl
mov
push
cmpsl
inc
add
in
das
out
jl
outsl
iret
dec
add
sar
jp
inc
popa
arpl
fbld
or
leave
ja
add
add
or
dec
int
add
push
jnp
pop
fldcw
mov
fdivr
fistpll
test
test
lock
mov
fstpl
sub
clc
jle
fisttps
pop
loope
test
and
xchg
fidivrl
or
adc
pushf
pop
sar
adc
mull
adc
out
clc
je
cmp
xchg
fldl
xlat
adc
push
aas
sahf
daa
and
jg
and
scas
je
sahf
scas
subb
dec
cltd
nop
pop
or
cmp
mov
out
mov
outsl
pop
mov
out
inc
movsb
mov
data16
push
cmp
cmc
popa
dec
call
pop
or
xor
fisttps
fdivp
pop
cmp
pushf
idivl
cld
mov
aas
sub
lret
pop
lods
icebp
jbe
cmp
pop
dec
stc
xchg
add
pushf
daa
add
cmp
shrl
in
je
out
mov
fprem
ds
js
fwait
pop
xchg
bound
or
stos
bound
mov
cld
out
aaa
lahf
cmp
or
mov
fstpl
and
dec
aad
xor
xor
lds
xchg
adc
testl
cmpsl
lods
push
out
hlt
mov
xlat
jbe
call
aas
xchg
mov
mov
scas
sub
mov
scas
inc
test
push
jb
xchg
pop
xor
sbb
lock
test
jle
iret
add
cmp
aas
pusha
pusha
or
jbe
sti
shlb
add
cmp
xchg
pop
xchg
push
outsb
je
std
shl
xchg
test
stos
or
hlt
dec
adcl
mov
in
push
cld
mov
fs
hlt
popa
movsl
xorl
push
bnd
cli
xchg
inc
mov
repnz
bound
into
js
ja
cltd
addr16
sti
mov
add
cmp
mov
pop
xlat
xchg
jge
push
je
js
xor
jnp
enter
mov
lahf
in
xor
adc
xchg
mov
push
and
imul
in
aad
mov
pop
cmpsb
lret
pop
mov
shll
push
jg
mov
sahf
stos
mov
sahf
pop
dec
in
cmc
or
mov
stos
sbb
enter
mov
sub
pop
ds
sbb
sbb
je
shrb
andl
loop
clc
jo
pushl
or
repnz
push
or
mov
gs
push
rorb
mov
ficoml
sub
mov
sti
je
addr16
in
insl
into
pop
cmp
or
push
jmp
xor
adc
and
in
ret
sbb
test
inc
and
scas
std
sbb
popf
stc
ja
stc
and
in
jb
add
ret
out
inc
or
clc
dec
xor
das
dec
insl
xor
out
popf
ljmp
dec
pop
xchg
inc
jecxz
clc
fimull
lods
and
aam
jle
push
xor
lret
lods
stc
ljmp
mov
pop
add
mov
push
xor
fimull
adc
popa
jle
cs
mov
cmp
int3
mov
dec
jmp
fidivrl
sbb
andl
push
xchg
pushf
loop
test
adc
sub
shl
in
mov
enter
repnz
inc
fidivrs
pop
dec
or
jns
pop
adc
cld
mov
mov
jl
xchg
cmp
stos
and
add
insb
pop
lea
std
jae
out
cli
push
xor
xlat
inc
xchg
sbbl
fistpll
push
movsb
jecxz
mov
stc
in
cmpsb
pop
push
add
jecxz
mov
xor
insb
out
mov
xor
movsb
fxam
outsb
mov
xchg
xchg
daa
popf
inc
add
into
xor
cmp
inc
dec
xlat
adc
dec
or
pop
adc
cwtl
mov
test
xchg
ficoms
push
arpl
sarl
jne
sbb
fidivrl
test
mov
mov
mov
rcrb
popf
sti
push
fwait
mov
loop
cmpsb
test
jno
enter
sbb
push
cmovbe
mov
pop
cmc
mov
push
popf
xor
in
dec
cmpl
pop
jl
xchg
xor
aam
out
and
jb
push
std
mov
inc
dec
mov
sub
adc
mov
push
xorl
es
adc
scas
add
mov
leave
push
sbb
lahf
mov
int
pop
adc
xor
push
ret
jp
lea
mov
fwait
lret
push
xchg
arpl
push
mov
and
mov
inc
aas
adc
sub
mov
sub
xchg
jle
jg
push
mov
hlt
je
xchg
out
popa
lcall
pop
adc
inc
xchg
adc
jb
sub
and
jns
push
sarb
push
and
sub
data16
ljmp
cltd
mov
pop
dec
mov
gs
je
lcall
push
adc
icebp
gs
dec
sahf
push
push
andb
call
and
ds
pop
xor
mov
xlat
popa
and
sbb
mov
stos
push
and
imul
lcall
inc
adc
aam
iret
int
inc
adc
jbe
movsb
or
xchg
jl
add
push
xchg
loop
das
cli
push
push
in
pop
cmp
sbbb
mov
sbb
aam
repnz
mov
mov
nop
fwait
cmpsl
jb
lods
test
xor
push
imul
decb
fwait
xor
pop
xchg
push
xlat
dec
out
test
mov
and
test
movsl
pop
repnz
push
stos
ret
mov
mov
jle
sahf
push
ja
sbb
ljmp
add
fmuls
pusha
pop
not
cmp
fadds
add
mov
into
cmp
fcoms
jo
repz
dec
pop
jns
jns
int
xor
jl
push
cli
inc
mov
jge
jg
mov
add
lods
sbb
rcrl
cmpb
rcrl
or
pop
in
leave
push
idiv
add
aad
pop
cmpb
inc
xor
lcall
ficompl
inc
xchg
cmpsl
leave
adc
inc
dec
cmp
test
push
add
in
jecxz
mov
or
push
mov
jmp
dec
mov
add
pop
imul
or
lds
test
sub
xor
stos
sub
inc
movsl
cltd
pop
or
xor
and
sbbl
xchg
mov
cltd
popa
lds
jmp
ja
pop
and
pop
sub
xchg
push
push
popf
pop
xchg
popa
jns
sahf
ss
add
cld
push
push
stc
add
jbe
loop
mov
pop
sub
mov
sub
sahf
cmpsl
daa
mov
push
mov
adc
shll
adc
iret
or
jae
cmc
cmp
mov
mov
sub
mov
add
mov
inc
lock
inc
jne
in
sub
inc
insl
jns
arpl
jb
int3
xchg
imulb
cmp
jno
test
mov
mov
push
lods
adc
nop
lds
call
lret
popf
xchg
fisubl
xchg
out
movzbl
or
inc
cwtl
ficoml
pop
mov
test
and
or
sbb
aad
ja
js
mov
xor
mov
xor
push
in
mov
push
adc
inc
lods
pop
nop
mov
pop
data16
push
xchg
ja
in
sbb
mov
xchg
push
dec
push
inc
insl
les
adc
out
lret
mov
sbb
and
das
enter
add
xor
sub
out
lret
inc
aad
add
popa
loope
push
pop
mov
push
fwait
out
fcomps
and
addr16
xlat
and
xchg
popf
or
fwait
pop
imul
or
js
adc
scas
pop
test
xchg
sub
push
xor
cmpsl
push
sahf
fwait
int
mov
ja
sbb
rcll
mov
lret
testb
insb
jo
mov
mov
lods
ficompl
mov
mov
test
out
mov
xchg
or
stos
stc
fwait
adc
nop
stos
mov
ja
repz
mov
notl
mov
arpl
push
adc
xor
shll
mov
mov
jne
sbb
stos
jg
jmp
cmp
xorl
and
out
push
dec
loope
cltd
jnp
mov
inc
out
mov
lcall
cmp
pusha
inc
or
subl
cwtl
add
pop
sub
jl
mov
adc
stos
fadds
movsb
mov
mov
mov
pop
stos
xchg
sarb
out
push
in
or
cwtl
and
insl
mov
adc
push
dec
sbb
scas
add
jb
lock
mov
je
cmpsl
xchg
ret
dec
scas
xorb
jle
sbb
cmp
lods
insb
push
ret
pop
adc
jne
and
and
xchg
xor
inc
adc
mov
jb
iret
stos
cltd
inc
cmc
call
outsb
or
nop
dec
and
mov
mov
pop
aad
call
fsubs
dec
inc
add
popa
lds
movsl
mov
jle
jb
movsb
rcll
das
adc
pop
test
andl
adc
mov
stos
mov
call
and
cmp
jb
mov
fsubr
jo
into
mov
es
shll
cmpsl
cltd
dec
push
cmpl
xorb
cmp
repz
popf
and
iret
sub
jl
addr16
push
add
sbb
leave
bound
and
or
jl
lock
pop
xchg
imul
mov
mov
or
cmp
dec
pop
inc
ret
sahf
jnp
inc
sub
jno
jo
pop
fs
gs
xchg
fistl
fsubr
mov
mov
lds
pushf
test
xchg
mov
sbb
mov
or
push
mov
std
aaa
dec
fcoms
cld
enter
addr16
cmpsb
in
call
incb
inc
fwait
jb
or
decl
cltd
arpl
mov
jo
iret
mov
xchg
loope
sub
popa
inc
leave
shll
or
xchg
jnp
xchg
lds
and
push
cmp
push
inc
pop
and
out
push
mov
and
adc
xchg
inc
pop
xchg
enter
lcall
mov
sbb
sub
pusha
ret
adc
or
outsl
xchg
cwtl
pop
inc
lea
imul
xor
pop
pop
in
pushf
scas
xor
imul
ja
xchg
pushf
test
push
mov
cmc
fisttpl
xor
mov
push
pop
shll
dec
sarl
cmp
outsb
cmpsb
xchg
in
cs
xor
leave
sar
inc
arpl
sbb
jge
mov
rol
xchg
pop
fisttpl
pop
lea
mov
les
fimull
cmp
neg
repz
push
push
pop
lahf
addr16
fldcw
rolb
mov
mov
or
cmp
jecxz
mov
add
cmp
cltd
inc
sub
pushf
out
jnp
lds
mov
rcl
not
xor
pop
push
mov
mov
dec
fidivl
daa
lret
je
popa
add
lods
cld
mov
mov
out
clc
or
cmp
sub
insb
fwait
sub
adcl
dec
and
mov
dec
or
inc
repz
outsl
in
test
xchg
xchg
add
jecxz
push
inc
call
and
or
fisubrl
xor
fidivs
ds
sbb
sahf
aaa
ds
pushf
mov
pop
adc
inc
sbb
sarl
clc
in
stc
mov
mov
mov
or
es
into
push
rolb
fdivp
sub
pop
sbb
and
push
or
sbbb
sub
movsl
rol
xchg
inc
std
and
dec
and
rol
push
xor
jno
iret
cltd
sub
push
scas
mov
into
fwait
push
daa
jno
ret
fidivrs
jne
leave
mov
inc
fcmovnu
cmovs
pusha
arpl
mov
mov
in
fnsave
xchg
cmp
insl
cmpb
xorl
dec
repz
push
mov
sar
cs
fwait
inc
cmp
loope
jnp
out
jb
push
pop
iret
fdiv
mov
xchg
xorl
lods
pop
xorb
mov
insl
adcb
and
lahf
pop
xor
lcall
mov
or
ss
paddsw
test
sbb
lds
clc
out
jecxz
xchg
sub
arpl
rorb
cs
push
mov
jmp
cmp
pop
jg
lods
idiv
add
test
xchg
inc
adc
jbe
and
mov
sub
aas
cmpsl
jle
dec
cli
mov
cs
mov
shl
mov
je
out
outsb
push
inc
call
push
sub
push
jbe
xchg
in
repz
cmp
add
push
adc
xor
aam
pop
arpl
sbb
lret
test
int
movsb
ret
fidivrl
cmpsl
lret
mov
lret
xor
int
xchg
inc
int
jbe
sub
test
mov
adc
dec
xor
in
push
cmpl
inc
rcr
push
mov
push
arpl
fbstp
stos
mov
pop
or
int3
lcall
jmp
in
pop
lods
popa
sbb
add
shll
mov
cmp
xor
inc
push
test
mov
pop
fs
lods
inc
ljmp
adc
jbe
arpl
mov
lea
mov
hlt
jle
cmp
notw
or
xchg
inc
lock
lret
insl
xorb
add
aas
mov
out
ss
test
jl
add
adc
sti
cmc
into
fisttpl
decl
mov
pop
int
popf
jecxz
jnp
mov
sti
ret
dec
ret
mov
sub
jb
out
add
adc
mov
fyl2xp1
rolb
xchg
jmp
mov
jg
push
push
ja
mov
aad
cmp
sub
dec
jbe
imul
or
shlb
rcr
lret
nop
out
adc
inc
inc
sbb
dec
daa
ss
cmc
fwait
std
pushf
fisubl
int
loope
pop
mov
adc
cmc
dec
push
shlb
jle
mov
outsb
push
idivl
divb
jbe
jo
inc
std
ja
pop
or
jno
xchg
in
cmc
leave
negl
dec
lods
inc
dec
test
push
mov
nop
in
jg
pushf
xchg
js
jle
push
rcll
jp
cltd
pop
fbld
xor
xchg
jp
repnz
jbe
mov
push
cmp
jp
pop
cld
sahf
push
dec
push
loopne
gs
in
pop
cmpsb
add
cltd
dec
pop
arpl
idivl
fldt
sti
adc
mov
sub
stc
xlat
iret
jl
aad
pop
repz
pop
mov
sub
insb
cwtl
sub
jl
jmp
stos
mov
ljmp
movsl
mov
cmp
push
insl
movsl
jge
loopne
fwait
mov
inc
cmp
mov
fisttps
mov
outsb
ret
pop
repz
lock
jmp
je
int3
sbb
sub
mov
fwait
scas
and
fwait
divb
mov
lret
in
rcr
xor
icebp
dec
sbb
nop
stos
movsb
sbb
out
testb
stos
xchg
mov
ret
pop
adc
xchg
add
pop
jp
pop
repnz
cmp
mov
jle
sub
mov
scas
sub
mov
rorl
sub
mov
xchg
sbb
orb
jbe
cmpl
dec
xchg
inc
mov
imul
insb
push
call
test
leave
inc
push
inc
fcomi
out
popf
mov
mov
out
cmp
lock
lock
outsb
popf
jge
loopne
add
jb
sar
xchg
cmp
sbb
sub
js
jno
cwtl
shll
xor
movsb
push
scas
stos
pop
sahf
or
mov
cld
mov
mov
test
outsb
fildl
jp
mov
fisttpl
int
mov
fmuls
rorl
std
pop
jae
in
int3
clc
xchg
popf
out
cmpb
cmp
and
subl
inc
add
inc
hlt
push
mov
das
xorl
lods
dec
dec
mov
inc
scas
mov
pop
cmpsb
inc
mov
cld
sbb
xor
sub
in
push
lea
push
gs
pcmpgtb
pop
or
cwtl
and
mov
cmpsb
sahf
sbb
fmull
adc
and
adc
sbbb
cmpsl
addr16
pop
test
mov
loopne
adc
mov
push
adc
leave
adc
pop
cmpsl
xchg
in
popaw
pop
mov
dec
clc
sub
inc
data16
ss
aaa
pop
dec
push
xchg
xchg
and
lock
stc
pop
xorl
lahf
js
sub
dec
inc
mov
outsb
stos
mov
jl
inc
shll
mov
pop
cltd
xchg
call
push
popf
dec
cmp
test
adc
adc
ficomps
enter
in
mov
or
repnz
mov
out
push
aaa
ret
ljmp
aam
mov
pop
xor
xchg
adc
push
sbbl
aaa
xchg
mov
mov
shl
daa
inc
mov
dec
inc
pop
jge
inc
mov
add
push
int
adc
xor
scas
xchg
push
pop
repnz
and
sbb
dec
insl
dec
push
xor
mov
sarl
inc
adc
inc
and
fmuls
jne
cli
and
jb
xchg
lock
aad
adc
adcb
int
fucomip
jns
cwtl
jne
dec
aaa
gs
stos
or
push
mov
movsl
aas
ja
mov
jbe
sub
inc
fwait
into
lock
ret
fwait
call
push
aas
cmp
shrl
stos
sbb
or
in
cmp
addb
sbb
clc
and
into
aaa
mov
pop
sub
adc
and
movsb
shlb
xchg
push
cmp
cmp
inc
sahf
je
addr16
add
jp
les
mov
mov
xchg
push
test
pop
popa
jmp
and
inc
dec
mov
pusha
divl
mov
test
hlt
and
shll
jp
fistpll
sub
pop
out
add
ret
fucomip
cld
sarl
les
and
jle
out
lds
fsubl
test
into
hlt
ret
mov
aam
or
stc
repz
or
js
mov
cs
movsl
test
call
bound
hlt
pop
lds
out
mov
mov
ljmp
and
jne
sub
shll
push
and
test
hlt
and
stc
aas
jmp
int3
pusha
out
add
fcompl
movb
cmp
xchg
ljmp
popf
gs
fwait
insl
mov
int3
add
adc
mov
jle
and
dec
cmp
xchg
cmp
jl
push
push
mov
test
dec
push
fcompl
mov
cs
add
inc
shll
js
xchg
add
mov
jl
test
das
mov
xor
pop
mov
jmp
jg
inc
add
lock
or
add
sarl
cmp
xchg
cwtl
jne
cmp
inc
cmp
int
out
dec
mov
push
adc
jno
mov
rol
je
jnp
inc
add
test
sbb
insl
xchg
cmp
mov
mov
xchg
jge
xor
or
cmpsb
jno
ds
xchg
adc
out
adc
add
or
xor
orb
pop
enter
pop
sbb
popl
adc
test
xchg
push
jno
lock
xchg
pop
daa
sub
adc
sub
gs
mov
mov
pop
int
testl
jbe
mov
push
daa
push
ss
jp
fisttpll
or
and
insb
out
jg
insb
adc
xchg
mov
mov
xchg
sbb
bound
mov
rol
daa
ljmp
inc
es
jno
cmp
movsl
subb
in
subb
adcl
mov
cmp
arpl
mov
push
xor
push
andl
and
and
test
mov
sub
daa
xchg
aaa
jb
mov
push
push
cmc
sub
aad
pop
mov
fdivrp
xor
nop
xchg
insl
sub
into
and
push
int
xor
cmp
inc
scas
insl
arpl
inc
push
orb
ss
push
push
lcall
mov
cwtl
idivl
or
sbb
fcoms
lods
out
lcall
jl
popa
push
xor
icebp
icebp
comiss
xchg
inc
mov
mov
fcoms
pushf
mov
movsl
std
pop
sbb
stos
and
aam
lcall
adc
ret
int
jp
out
inc
repz
mov
mov
ret
imul
push
pop
mov
mov
xchg
scas
shrl
mov
dec
pop
sub
lcall
sbb
mov
mov
pop
movsl
adc
out
cld
test
jp
sbb
mov
xchg
addr16
pusha
mov
or
and
rcrb
out
lret
shlb
inc
jne
pop
js
call
std
pop
ljmp
orb
sub
in
add
sbb
bound
out
push
sarl
and
clc
push
sar
cld
lret
mov
in
es
pop
pop
rclb
mov
cmp
addr16
mov
loop
jns
mov
add
mov
add
cli
mov
adc
xchg
jne
jb
sub
lcall
and
shl
xor
add
in
negb
je
aas
stos
mov
push
or
mov
mov
adc
xor
cmp
test
jns
cltd
pop
popf
xor
mov
mov
jbe
hlt
icebp
jmp
dec
mov
iret
nop
push
cltd
xchg
or
push
imul
sub
daa
arpl
mov
repz
test
cmc
push
ljmp
stc
xor
pop
mov
scas
pop
andb
subl
xor
inc
or
dec
in
shlb
cli
inc
lods
pop
das
push
mov
push
jecxz
pop
ds
into
add
pop
fcmove
jne
and
push
aad
cmc
nop
sti
sub
subl
test
dec
bound
adc
std
inc
push
xor
lahf
iret
sub
cmp
dec
lahf
lods
ja
rcrb
in
ja
fld
shrb
or
sar
icebp
xor
test
mov
push
jle
xchg
inc
push
mov
add
push
pop
pop
lret
mov
cltd
lcall
jb
cld
movsb
add
push
pop
push
fsubs
ret
imul
leave
imul
lds
stos
lcall
sub
pop
test
fstpt
and
into
adc
int
push
popf
das
jmp
mov
pop
push
stos
shrb
dec
ljmp
ret
xchg
xchg
jl
lcall
gs
scas
into
fmulp
test
stc
mov
pushw
xchg
mov
push
xor
xchg
sub
xor
das
push
cmp
cli
cmpsl
or
pop
push
test
ljmp
mov
pop
and
mov
jg
sti
dec
pop
cli
xchg
aad
lahf
aaa
ljmp
mov
pop
add
pushl
push
mov
cwtl
cld
xchg
lock
pop
lcall
inc
or
std
push
clc
lcall
jno
or
inc
lret
enter
mov
adc
hlt
pop
jg
pop
lret
add
jle
pop
pop
into
pushf
xor
scas
xchg
in
ret
mov
xchg
test
fstpt
xchg
inc
xlat
mov
jns
jmp
orl
push
iret
sub
xor
cs
inc
dec
rcrb
or
xor
lock
add
cmpsl
cmpsb
jb
jo
aad
out
sub
aaa
sbb
testb
inc
test
mov
cmp
rcrl
adc
push
pushf
xchg
jnp
sub
xor
push
cmp
aas
jnp
arpl
inc
add
addr16
fwait
push
je
mov
outsb
or
roll
inc
pop
arpl
or
cmp
xor
inc
inc
popa
jge
pop
out
jmp
xchg
push
xchg
pushf
loopne
movsl
sub
sub
loopne
test
das
maxps
outsb
ja
sarl
call
in
pop
dec
dec
aas
dec
xlat
xchg
cwtl
adc
xchg
mov
mov
inc
call
jb
sar
int
xchg
jp
repnz
mov
sub
mov
lcall
add
push
mov
or
xor
cli
sub
lods
mov
and
dec
loop
jp
push
sahf
int3
ljmp
popa
rorl
mov
test
or
mov
pop
mov
loope
cmpsl
xchg
mov
testb
insb
into
je
shll
stc
nop
push
add
sub
ret
imul
out
jle
xor
cltd
pop
mov
decl
jnp
test
lods
sub
lods
adcb
les
out
insl
cmp
cmpsl
mov
addb
fs
push
sarb
cmpsl
xor
mov
aas
pop
les
pextrw
cmpsb
jno
sar
mov
aad
mov
pop
adc
jge
in
sbb
fwait
add
push
sub
jg
fucom
xchg
xchg
pop
dec
sbb
loop
push
inc
cwtl
lea
jns
jmp
call
scas
sub
fildl
int
cmpsl
aas
dec
xchg
cli
rclb
call
mov
mov
out
in
xchg
test
ret
pop
cmp
push
and
jnp
jne
out
lods
lret
loop
mov
xlat
in
dec
pop
cmpsl
ret
jo
push
enter
dec
insl
idivl
inc
cmc
fwait
popa
mov
pop
jo
pop
inc
int3
cmp
daa
outsb
xchg
gs
imul
lahf
or
cltd
cmp
shlb
mov
pop
imull
jge
sub
xchg
call
xchg
xor
inc
lock
pop
xchg
imul
xor
das
dec
or
adc
sti
movups
clc
fstpt
es
pop
stos
bound
mulb
cltd
fbstp
adc
and
iret
movsb
aam
sub
cmp
xchg
pop
int3
add
sbb
idivb
movsl
stos
adc
jae
jbe
push
repz
jmp
xor
add
inc
outsl
loope
inc
jne
ret
push
test
in
mov
push
cmpsl
xor
xor
inc
dec
pop
fucomp
dec
pushf
insl
xor
ficoml
test
les
pop
sbb
inc
sub
je
lods
daa
sub
sbb
ret
inc
imul
mov
sbb
adc
pop
pushl
jecxz
pop
pop
inc
scas
insb
dec
push
pop
int3
sbb
das
enter
mov
jae
xor
cmp
int3
ja
pop
sbb
pop
in
jg
add
fxtract
fs
ret
mov
pop
sbb
mov
fisubs
in
sbb
sarl
daa
jle
fwait
push
popf
xor
pop
cmpsl
mov
inc
jmp
xchg
dec
leave
xchg
repz
jb
mov
sbb
jae
mov
movsl
ficompl
fiaddl
sbb
test
sub
mov
pop
dec
lea
iret
mov
mov
sahf
icebp
pusha
pusha
adc
pop
test
loop
mov
jbe
push
pusha
mov
fildll
jo
outsl
adc
xchg
bound
push
mov
mov
sbb
mov
pop
int
xchg
mov
pop
or
cmp
mov
jb
imul
fsubp
add
enter
mov
push
push
push
les
das
cltd
ljmp
loopne
imul
pop
jbe
sbb
sbb
jle
adc
rorl
jno
fcoms
orb
fdiv
insl
or
stc
mov
inc
push
mov
push
divps
push
insb
incl
push
and
ljmp
fisttpl
and
out
and
cld
jae
xor
aad
xchg
jge
dec
jmp
mull
sub
jg
mov
scas
shl
paddd
in
mov
sbb
mov
out
cli
cld
and
sbb
and
hlt
pop
dec
sub
sub
or
and
aam
inc
cmc
and
mov
test
repnz
and
stos
jecxz
sbb
nop
ret
cmp
hlt
test
xchg
loope
dec
fidivrl
xchg
pop
insb
add
add
mov
push
add
movsl
and
inc
inc
jmp
push
cmp
pop
leave
mov
outsb
in
and
adc
js
nop
fisubl
shrl
rep
lcall
outsl
lea
je
ja
push
mov
les
aam
gs
push
sub
out
push
out
in
fs
stos
xor
jb
stos
adc
shl
jno
daa
out
sbb
pop
dec
pop
scas
in
push
enter
out
fidivs
jge
fidivrl
gs
aaa
es
int
adc
cmovno
push
mov
inc
pop
cmp
jno
insl
add
lahf
scas
sbb
nop
pop
jp
stos
xchg
fistl
mov
lds
jg
stos
xlat
lods
addr16
dec
sub
mov
sbb
insl
imul
into
adc
dec
in
fdivr
xor
pop
movsl
imul
add
loop
push
mov
mov
and
and
push
add
cmp
inc
jecxz
push
andb
mov
mov
mov
pop
loope
pop
add
jl
test
insb
lock
dec
xchg
xor
jno
cmp
xchg
pop
sub
or
and
jae
dec
sub
cmc
xchg
mov
out
sbb
dec
pop
loop
fwait
adc
mov
fsubl
cli
or
inc
sti
shrb
push
jp
int
cltd
sbb
data16
ret
in
fdivrs
addr16
push
mov
mov
outsl
lock
dec
pop
mov
mov
pop
mov
add
loopne
sbb
pop
orb
mov
sbb
sub
and
pop
aaa
cmpsb
popa
push
sti
dec
jo
stos
ja
add
inc
mov
mov
ret
cmp
pop
aaa
xchg
scas
xorb
jle
fsts
push
and
mov
mov
cmp
mov
xlat
in
push
fisubl
fidivs
mov
lods
ret
inc
inc
dec
enterw
adc
jbe
lock
jecxz
add
sub
filds
xchg
xor
inc
adc
sbb
lods
hlt
and
aam
and
cmp
and
mov
mov
fnsave
adc
add
out
cmpsl
repz
xchg
push
lret
adc
mov
or
data16
sub
pop
into
pop
dec
adc
adc
loope
pop
jae
mov
dec
ljmp
fsubrs
je
mov
add
fucomi
hlt
mov
sub
dec
jnp
jecxz
cmp
adc
push
sub
ret
rcrl
mov
movsb
mov
xchg
mov
xor
out
lock
dec
scas
and
or
hlt
cmp
imul
ljmp
pop
out
pop
arpl
dec
cld
lods
rcl
sbb
js
adc
push
or
push
or
mov
nop
pop
inc
and
dec
xor
xor
popa
push
scas
pop
call
xor
outsl
mov
fildl
mov
jo
cmp
test
sbb
ljmp
push
adcb
mov
fdivrl
orl
mov
xchg
mov
xchg
nop
mov
xchg
mov
push
ljmp
cwtl
jno
jne
test
sahf
clc
jge
sbb
rcrl
or
clc
std
movlps
cwtl
std
sbb
jecxz
push
adc
sar
inc
or
mov
test
repnz
mov
into
lods
scas
dec
sub
shr
inc
lods
movsb
in
xchg
inc
mov
std
lods
ja
mov
and
jmp
mov
and
dec
aas
rorl
inc
cmp
push
sbb
cmp
sub
fnstsw
or
aam
inc
inc
test
sahf
mov
cmp
jecxz
sbb
mov
add
sub
out
leave
imul
shlb
das
mov
adc
pop
jbe
out
fldl
mov
adc
shl
mov
push
je
popa
pop
subl
sub
mov
divl
pushf
test
cmp
push
aas
popa
push
daa
out
mov
jae
lret
stc
aas
mov
loopne
mov
lods
cmp
mov
test
pusha
test
clc
add
cs
divl
sub
ficompl
data16
ljmp
pop
dec
ja
xchg
je
lret
lret
lcall
fiaddl
adc
mov
rorb
popf
cld
stos
cmp
lods
notl
jb
js
dec
dec
add
cld
dec
jg
push
jb
cli
push
dec
mov
ja
mov
std
cmp
imul
dec
mov
aam
pop
cmp
popf
imul
and
sbb
daa
jmp
adc
adc
or
jp
sar
cwtl
adc
adc
jp
in
pop
lahf
and
aas
loope
pop
mov
push
out
out
fisubs
cmc
stc
test
arpl
out
pop
call
xor
sub
pop
out
cltd
subb
out
shlb
iret
dec
inc
pop
rcrl
nop
sub
sub
and
xor
int
xchg
repnz
imul
xchg
mov
cmp
or
lods
in
cmc
aas
inc
mov
inc
pop
or
cmp
mov
mov
adc
aas
movsb
ljmp
bnd
outsl
dec
pop
ja
add
es
jge
add
stos
lretw
and
scas
sub
add
sbb
aas
fldt
mov
loope
sti
insb
mov
mov
arpl
jns
or
xchg
or
lock
je
adc
jb
sbb
mov
int
fs
or
dec
sub
mov
xchg
rcrl
jbe
cmpb
out
scas
leave
jo
or
fwait
mov
xchg
sub
movsl
or
and
dec
sbb
lret
fisubrl
aad
cs
das
sbb
fdivrl
mov
pushf
pop
fiadds
fisubrs
sbb
cmp
adcl
fwait
dec
fwait
incl
adc
pushf
in
sub
mov
int3
fdiv
cmp
mov
push
pop
es
in
call
js
nop
lds
and
inc
xor
gs
push
call
mov
xchg
sbb
sub
dec
jg
jb
aas
xlat
int3
or
mov
dec
jo
popa
hlt
loopne
dec
cwtl
sub
and
xchg
fimuls
jmp
xchg
nop
mov
int3
cmp
push
stc
fdiv
lcall
notl
incb
xchg
inc
icebp
mov
les
testl
mov
jns
cmp
xchg
inc
push
rorl
lea
pop
sub
jg
mov
int3
sbb
xlat
pop
dec
jno
into
fists
add
outsb
inc
push
pmaxub
or
xor
mov
and
jns
and
push
sti
cmp
adc
push
shlb
add
and
and
cwtl
xor
loope
test
xor
inc
aas
add
push
movsl
pop
cmp
mov
aam
cmp
add
cli
adc
sub
mov
orb
jecxz
test
pusha
push
mov
push
push
pop
mov
cs
dec
int
imul
fwait
push
add
out
or
ret
cmpsl
fildll
adc
xchg
insb
int
lods
pop
repnz
call
shlb
sub
add
pop
and
icebp
xchg
add
mov
aaa
mov
inc
fsubrl
and
bound
sbb
pop
mov
into
test
push
cltd
or
pop
push
insb
dec
and
scas
in
inc
xchg
push
sarb
pop
jb
xchg
inc
xchg
push
sar
add
xchg
les
mov
fs
or
imul
add
fs
xor
test
cmpsb
jbe
sub
sbbb
scas
inc
outsb
sahf
test
cmp
and
data16
std
add
mov
inc
xchg
std
sbb
and
addr16
in
lret
jns
add
adc
xor
clc
lcall
addb
inc
cwtl
popf
rclb
call
lods
xor
dec
movb
mov
jns
cmp
ret
add
cmpl
iret
and
orb
push
test
add
shll
fsubrl
push
arpl
sub
cltd
das
lds
cmpsl
xor
arpl
and
mov
hlt
mov
call
push
cmp
rorl
xlat
jnp
idivb
sub
and
mov
or
push
scas
add
dec
xor
cmpsb
cmc
push
aas
adc
dec
inc
faddl
mov
jmp
ja
sahf
dec
inc
adc
push
nop
out
adc
mov
push
mov
dec
js
in
push
loope
cmp
test
or
out
mov
lret
aam
fcmovne
in
out
loopne
jb
cmp
and
lret
iret
push
and
jo
mov
movsl
xor
add
fadd
xor
inc
fwait
xor
xchg
loope
mov
add
sub
dec
mov
jl
sub
pushf
pop
adc
or
lea
push
push
inc
js
inc
insb
movsb
insb
add
mov
ret
aad
adc
or
int3
lods
adc
in
rcrb
jno
enter
and
insl
sub
pop
inc
clc
jnp
adc
inc
inc
loop
sub
push
adc
sbb
clc
inc
or
lds
mov
or
mov
sarl
or
push
inc
lcall
outsb
in
or
cmp
xor
shlb
mov
pop
ret
pop
dec
arpl
xor
fisttpll
mov
mov
sbb
and
xor
jecxz
dec
jmp
nop
jl
xor
push
cwtl
stos
sbb
or
push
loope
fisubl
mov
or
imul
call
mov
stc
inc
jo
pushf
push
xchg
sub
adc
lahf
ret
xor
ret
lret
and
dec
addr16
xchg
scas
mov
jbe,pn
cwtl
pop
xor
int3
add
mov
inc
icebp
std
adc
dec
or
scas
mov
out
jecxz
lea
add
mov
push
adc
inc
je
jge
inc
ja
push
clc
sub
sbb
lret
test
pop
sahf
mov
push
movsl
xchg
xchg
test
push
shrb
sub
add
jge
xor
mov
out
xor
in
aaa
add
dec
mov
inc
loope
stos
cmp
sub
xlat
push
mov
mov
xchg
adc
cld
xchg
fwait
xlat
sti
subl
lret
add
or
inc
mov
adc
jp
dec
stos
cmp
fmull
movsb
pop
jmp
xchg
cli
lods
stos
sar
dec
test
mov
jbe
mov
test
fucomi
mov
jnp
dec
jge
sub
xor
nop
cmp
jae
movsb
fadds
in
and
add
aas
and
cmp
xchg
test
nop
ret
lret
inc
xor
fst
inc
sbb
into
cmp
cmp
cmpsl
mov
and
inc
fwait
jge
loope
add
fiaddl
mov
or
lods
loop
loope
jno
pop
aam
cltd
lahf
fwait
xlat
xchg
fld
inc
xorb
mov
inc
nop
pop
mov
imul
adc
insl
dec
jg
out
sarb
aam
pop
test
push
jg
mov
jbe
xor
dec
mov
jnp
cmp
sbb
inc
cmp
or
jle
movsl
jnp
mov
shll
xchg
mov
xorl
cmpb
cmp
lahf
xchg
adc
jl
cmpsb
cmpsb
pop
jmp
pmaddwd
mov
mov
jge
sahf
fwait
or
or
jp
es
xchg
and
rcll
cs
pushf
repnz
mov
cli
aas
dec
shrl
inc
jns
xor
cmp
cmp
repnz
shl
roll
dec
xor
pushf
iret
rcll
mov
add
loop
jno
jbe
stos
out
pop
sbb
test
stos
and
pop
mov
int3
lret
inc
xlat
aad
mov
push
js
cmp
mov
movsl
inc
aam
aaa
jl
fwait
mov
adc
std
jnp
jle
jb
sub
mov
cmp
loopne
fwait
add
xor
nop
mov
xor
or
test
add
push
int3
mov
sub
inc
test
jbe
arpl
xchg
imul
ss
mov
aad
cmp
pop
add
cmp
mov
xchg
fmull
fcoml
mov
dec
jg
outsl
rorb
leave
aam
mov
daa
jae
pop
dec
mov
shlb
das
into
bound
mov
outsl
mov
mov
jno
and
cmp
mov
nop
aas
addr16
icebp
lock
leave
test
push
icebp
mov
mov
and
push
pop
pushf
xchg
sbb
jge
fdiv
mov
dec
shll
or
xlat
push
sub
inc
sbb
or
ja
adc
nop
sub
sbb
adc
pop
es
xor
or
mov
fdivp
mov
out
cmp
cltd
push
pop
leave
out
xlat
in
cli
pop
fisubl
jno
es
js
and
jnp
pop
xor
ds
jmp
adcb
mov
fnstenv
jp
lods
addr16
in
cmpsb
aaa
lds
fnstenv
pop
ret
in
imul
rclb
add
add
cmc
inc
hlt
push
dec
mov
lea
lock
cmp
push
fwait
in
testb
mov
mov
cmp
iret
pop
leave
scas
stos
imul
mov
int
mov
out
in
pop
jle
sbb
adc
mov
sbb
adc
aas
xchg
mov
test
lock
and
mov
adc
shlb
fcoms
subb
jns
roll
out
imul
jl
dec
mov
sbb
notl
mov
jne
std
xor
add
gs
loopne
popa
stos
lds
movsl
insl
mov
mov
ja
pop
push
and
mov
adc
xor
jae
cmp
lret
loopne
stos
push
shrb
dec
and
adc
outsl
cmp
ds
ret
mov
aas
pop
dec
jnp
popl
pop
cltd
sahf
jp
lcall
leave
into
sub
xchg
or
push
inc
sub
cs
fiadds
xor
mov
shrb
shll
int3
mov
push
sarl
hlt
jmp
insl
mov
adc
divb
mov
mov
movsl
push
es
cmpsl
xchg
mov
mov
pop
hlt
dec
or
mov
or
jne
sub
add
insb
adc
int
sbb
pop
imul
mov
inc
mov
jb
xchg
lcall
js
or
adc
ficoml
add
mov
and
ja
push
sti
pop
lods
out
sbb
or
scas
fwait
test
adc
push
pop
cmp
jl
jmp
add
pushf
pop
cmp
or
xchg
adc
jl
aad
sub
adc
add
xchg
aam
xchg
repz
lods
sub
cmp
xchg
sahf
outsb
loopne
aam
in
jecxz
das
xor
sub
push
or
pop
pop
push
cltd
repnz
nop
rcrb
jle
leave
sbb
sbb
scas
clc
imul
or
push
in
das
mov
test
or
mulb
ss
int
popf
sbb
pop
popa
fwait
loope
bound
fwait
cltd
pop
xchg
fsubrl
jns
popf
mov
and
jge
xor
xchg
sbb
or
pop
mov
pop
leave
fwait
jae
cltd
pop
or
sub
dec
xlat
add
jo
imul
cmp
pop
std
mov
jbe
cld
hlt
rcr
sbb
ja
loopne
push
push
loop
cmp
adc
cld
cmp
or
push
jle
subb
or
mov
push
or
test
dec
mov
shl
add
mov
scas
cmp
inc
push
jg
aas
push
add
sti
cltd
sbb
dec
pop
es
in
or
push
push
int
push
dec
cmc
pop
or
lods
dec
fs
leave
push
mov
mov
and
inc
and
inc
jp
cmpsl
xor
dec
jg
iret
sbb
cmp
push
xchg
and
or
aad
push
aam
add
mov
add
or
mov
adc
mov
shrl
cmp
inc
test
jnp
adc
jg
inc
xchg
int3
rolb
es
and
aad
inc
and
pusha
xchg
xor
inc
jnp
call
jmp
mov
mov
daa
movb
xor
fldcw
aas
cmpsb
inc
leave
mov
push
cld
loopne
jno
sub
sub
mov
cmp
or
pop
pop
inc
mov
shr
dec
sbb
sub
movsl
divl
sbb
repnz
dec
pop
mov
fwait
xchg
mul
or
or
fldcw
jnp
out
xchg
push
xor
mov
sub
daa
cmp
orl
lock
orl
sub
push
fs
outsb
mov
push
dec
cmp
in
or
jmp
mov
inc
mov
xor
inc
xor
cmp
mov
dec
ret
xchg
fisttps
in
jae
loop
ficoml
gs
pop
cmp
xchg
pop
jns
jne
out
lret
mov
inc
pop
jae
shr
dec
fwait
aam
pop
jl
ret
test
inc
arpl
test
iret
notl
pop
xchg
xchg
and
popf
cwtl
dec
and
pop
sti
std
pop
jbe
or
sbb
lds
and
fwait
jp
aad
xchg
test
loopne
dec
imul
xchg
in
cmp
jle
scas
mov
xchg
leave
loopne
and
xchg
je
pop
and
jnp
iret
mov
mov
push
xorl
mov
data16
fidivrs
aad
shl
pushf
enter
shlb
sbb
mov
ss
sahf
iret
and
push
cld
int
out
lret
divb
sbb
push
enter
gs
jmp
sub
pushf
icebp
pop
pop
mov
ret
cmp
inc
aaa
cmp
in
jp
in
jg
outsl
pop
sbb
aad
inc
and
fdivp
xchg
xor
jb
sar
sar
cltd
or
inc
xchg
sub
filds
loopne
insl
inc
sbb
add
rcl
mov
add
gs
and
or
cld
rorb
shrl
test
adcl
adc
adc
les
in
jmp
cmp
push
jns
repnz
aaa
aam
xor
imul
push
add
add
sbb
jmp
cld
iret
mov
jae
push
xor
mov
pop
mov
popf
pop
mov
jg
das
mov
push
outsb
and
mov
or
outsb
push
jecxz
scas
sub
push
sbb
in
mov
insl
mov
sub
ret
mov
rcrl
push
mov
jle
sbb
jae
shl
jbe
test
and
pop
or
mov
xorl
sub
repz
mov
stos
pusha
lds
shlb
push
xchg
inc
aas
mov
insb
sub
ja
push
cmp
mov
dec
sub
test
pop
aaa
sbb
rorb
sbb
mov
jecxz
repz
pop
dec
push
inc
cmp
push
jns
rcr
aaa
dec
sbb
mov
data16
xlat
dec
inc
cmp
je
outsb
pop
dec
in
movl
lods
jne
or
or
test
fldcw
or
fwait
inc
adc
or
dec
int
mov
mov
in
jmp
add
xchg
sub
lea
mov
ror
and
sub
adc
xor
xchg
jmp
mov
and
subl
in
adc
mov
imul
icebp
lods
bound
and
lods
pop
mov
xchg
test
sti
sbb
xchg
adc
jnp
rorl
inc
gs
in
imul
or
daa
frstor
sub
xor
jmp
push
mov
popf
sub
aad
stos
pop
xchg
xchg
mov
push
cmpsl
mov
test
aad
int
loope
mov
movsl
sbb
mov
push
mov
popl
inc
jbe
dec
int
xor
mov
test
inc
loopnew
push
sti
loop
inc
adc
popa
into
fs
adc
cmc
les
icebp
jge
cmpsb
idiv
mov
mov
xchg
lret
outsl
add
xchg
jmp
out
mov
pop
lret
inc
push
adcl
dec
test
sub
sub
fs
loope
bound
leave
push
sbb
mov
cwtl
inc
shrb
leave
imul
add
jns
mov
inc
xor
pop
test
jnp
cltd
lock
pop
pop
mov
cmc
test
test
ficomps
lock
fidivl
ret
push
xor
insl
orb
jl
add
jb
adc
mov
dec
data16
rolb
push
adc
in
jge
leave
push
cmp
in
test
adc
sarl
aam
add
sbb
cs
sbb
ds
mov
aas
inc
mov
sbb
or
sbb
or
push
arpl
dec
mov
cmp
lahf
andl
jg
rcrl
loopne
xor
out
push
sbb
jge
jnp
cltd
sti
mov
pop
mov
pop
adc
jl
lret
push
xchg
hlt
fwait
pop
pop
decl
aaa
data16
cmpsl
dec
adc
xchg
add
push
inc
jle
test
adc
test
cmp
push
addr16
in
mov
ret
enter
xchg
in
sbb
inc
mov
cwtl
dec
push
xor
add
out
xor
enter
mov
mov
shl
cmp
sub
testb
xchg
sub
insl
sbb
mov
rcl
cmp
pop
jg
sti
push
out
dec
xlat
leave
mov
cmp
pop
ret
scas
jmp
xor
retw
and
ljmp
xchg
shrl
mov
fst
mov
lret
cmp
or
repz
adc
inc
cmp
and
mov
ret
movsl
addr16
shrl
rclb
sub
xlat
push
enter
aaa
lcall
inc
and
inc
fstps
aaa
mov
inc
gs
ficoml
cvtps2pd
in
and
pop
push
loop
push
in
xchg
js
rclb
mov
movsb
insl
mov
or
imul
sbb
inc
leave
mov
cmp
push
mov
insb
inc
adc
jns
ret
push
xorl
nop
adc
sub
dec
out
jge
dec
in
dec
movsl
test
adc
push
sti
mov
mov
shrl
ds
ljmp
or
sub
mov
push
sbb
xchg
jo
and
addr16
jl
pop
push
gs
xor
lahf
jle
lods
jg
push
cmp
cmp
ds
test
push
inc
adc
movsl
ror
cmpsl
shlb
mov
adc
push
xchg
aas
rcr
inc
inc
in
repnz
bound
sub
inc
xlat
fistpll
sbbb
mov
push
movsb
icebp
call
xchg
jne
in
jnp
sub
or
push
and
pop
test
inc
inc
loop
push
adc
gs
roll
ror
ret
negb
cmp
rcrl
ret
add
lret
cmc
dec
popf
cmc
out
roll
insl
insl
pop
mov
lds
lahf
mov
mov
shlb
lahf
jge
rorl
js
push
mov
out
jg
ret
and
mov
outsb
mov
clc
sbb
inc
filds
pop
and
fs
sti
cmp
xor
rolb
xor
jecxz
fcomip
add
imul
mov
mov
in
sub
fwait
jb
and
aam
mov
xchg
outsl
add
and
pop
sub
daa
aaa
outsb
jmp
fdivrs
mov
orb
and
aaa
inc
jg
lret
in
scas
imul
sbb
add
sub
js
xchg
lods
or
sub
neg
inc
movsl
sub
jmp
xor
pop
insb
in
sahf
dec
mov
ficomps
sub
adcl
movsl
movsb
add
ljmp
pusha
scas
das
pop
and
movsb
push
xor
mov
sub
and
imul
push
arpl
add
push
sub
ja
sarl
cmp
in
fwait
stos
sbb
das
sar
ljmp
pop
sbb
mul
movsb
pop
mov
mov
add
jmp
cmpsl
mov
stos
push
mov
xor
adc
and
xchg
sbb
push
das
xchg
and
scas
fiaddl
lds
add
sbb
les
in
push
stos
cs
or
testb
out
stos
scas
pop
scas
xlat
xchg
pop
in
mov
enter
xlat
daa
shll
mov
hlt
in
bt
xor
and
aaa
mov
inc
daa
lahf
xorb
outsb
ds
jbe
pop
dec
push
sbb
in
jl
cli
and
arpl
lcall
out
outsb
adc
push
gs
icebp
je
mov
in
push
lock
jle
cli
or
pop
xchg
pop
gs
aad
jl
stc
adc
sub
pop
adc
daa
mull
test
imul
gs
dec
xchg
les
inc
test
mov
divl
in
mov
imul
lret
xor
ret
movsl
push
sub
push
test
aad
mov
add
ss
cmpb
je
cld
sub
mov
iret
push
inc
repz
adc
mov
jae
inc
imul
ror
mov
aaa
jae
out
in
and
jmp
pop
mov
cmpsb
fstps
rep
idivb
jo
cmpsl
mov
sub
rorl
in
ljmp
std
mov
sbbl
pop
sbb
add
xchg
call
adc
cmp
insb
mov
iret
jo
push
outsl
call
or
xchg
loopne
enter
mov
ja
mov
sbb
jne
cli
mov
or
rcrl
aaa
mov
sahf
inc
mov
cmp
mov
jo
add
loopne
stos
aas
in
adc
add
cmp
aaa
xlat
cs
data16
dec
sbb
dec
mov
das
call
adc
mov
lret
or
stos
sar
fcmovnbe
xchg
dec
ja
lods
adc
cmpsl
aad
mov
sub
aad
sub
fnstenv
cltd
mov
cmp
cmp
push
ljmp
orl
mov
push
shll
push
sarl
aaa
pop
jle
xchg
mov
pop
mov
and
fcmovb
scas
dec
dec
jbe
adc
rcll
in
pop
mov
ja
std
fmulp
xchg
add
shr
pop
mov
ret
dec
sti
pop
sbb
pop
std
mov
stos
in
call
ja
add
dec
add
pop
rcrb
loope
aam
or
sub
adc
lds
mov
sub
sub
mov
push
sbb
push
sub
popa
loop
mov
jae
xor
jge
and
adc
pop
jmp
dec
push
xchg
mov
pop
pop
xchg
lock
cmpsb
out
adc
rcrl
stos
pop
jo
out
sar
loope
dec
sbb
mov
and
mov
mov
ror
repnz
orl
sbb
addr16
sbb
push
adc
mov
push
test
mov
stos
sbb
dec
sbb
or
and
jnp
xchg
xchg
cmpsb
std
fxch
ja
scas
mov
inc
fidivl
mov
lcall
pop
popa
cmp
imul
into
cmp
sub
push
or
cmp
add
pop
pusha
mov
cmp
rclb
xchg
or
push
fsubrl
cltd
data16
add
loop
jae
dec
and
lahf
ljmp
and
mov
sbb
stos
dec
rclb
incl
fwait
test
insb
in
das
sbb
fdivl
pop
sbb
test
cmp
push
sbb
mov
sbb
push
or
aas
sbb
ljmp
ret
int3
sti
in
ds
push
push
inc
xchg
into
fs
popf
out
sbbl
dec
lods
pop
fistl
xchg
fsts
xchg
out
mov
xorb
ljmp
shlb
xor
test
push
shl
mov
sub
add
adc
mov
push
or
lahf
sub
push
sahf
xor
cmp
data16
dec
or
lea
sbb
das
adcl
je
mov
pop
cmp
ret
adc
dec
outsb
icebp
add
inc
adc
push
xor
js
mov
cmp
mov
xor
mov
cmpsb
xchg
mov
mov
imul
xchg
ja
ret
scas
out
les
scas
mov
adc
into
outsl
sub
out
xchg
movsl
fsubr
movsb
gs
push
pushf
sbb
aaa
push
into
cmp
in
jbe
add
mov
cmpsb
or
imul
aaa
jecxz
imul
fisttps
into
inc
in
xchg
test
pop
add
sarl
push
add
aam
push
fcomi
dec
xor
fimuls
add
test
mov
clc
loopne
sbb
test
sbb
and
es
sub
mov
pop
sbb
inc
xchg
and
mov
stos
sbb
fisubs
inc
dec
ljmp
jmp
lcall
push
insl
addr16
ffree
xor
inc
push
test
int3
mov
movl
add
test
mov
popf
cmp
pop
nop
dec
or
ret
mov
es
cmpsl
mov
push
out
mov
fs
xor
int
jb
push
hlt
jmp
xlat
decl
mov
cmpsl
push
ret
ljmp
incb
int
cmpl
mov
popf
sub
mov
shll
xor
sbb
push
repnz
push
fcmove
mov
mov
add
inc
jae
mov
adc
xchg
jecxz
dec
sahf
xor
add
lcall
popf
jnp
cmpsl
rorb
mov
xchg
call
imul
sbb
aaa
ds
inc
lcall
arpl
cmp
jo
inc
dec
js
jo
aam
xchg
jbe
daa
iret
sbb
add
fld
cli
bound
inc
sbb
addr16
mov
cmp
loope
in
insl
add
fldenv
adc
add
pushf
push
push
pop
cmp
je
lds
cmc
cli
mov
push
lds
out
test
adc
out
fisubl
mov
and
push
fnstsw
mov
jl
jge
xor
xlat
nop
cltd
jae
dec
sahf
mov
sbb
sub
lcall
and
arpl
dec
dec
ljmp
imul
pop
rcr
xchg
hlt
enter
or
xchg
xor
sbb
push
xor
bound
scas
aaa
jmp
pushf
xor
daa
das
mov
ret
ja
inc
int3
or
or
mov
cmc
pushf
and
or
add
pop
sbb
mov
jne
ds
mov
inc
sub
scas
inc
cli
push
push
sti
sarl
filds
adc
movsl
mov
sti
pop
lock
cs
sbb
in
out
or
cli
or
cmp
dec
lea
xor
dec
dec
inc
mov
lret
neg
mov
mov
test
fbstp
add
andb
negl
fsubr
rol
xchg
or
adc
clc
xchg
int
push
addr16
test
aam
movsb
jne
or
mov
xchg
push
mov
arpl
inc
fildll
push
nop
ror
mov
sbb
mov
pop
stc
es
mov
inc
and
jb
repz
adc
orb
fcmovb
and
pop
xchg
ret
jns
mov
popf
fisubrs
adc
faddl
loope
fstpl
insl
aaa
sub
rolb
inc
repnz
add
js
neg
andl
ficomps
or
xor
push
out
xchg
jbe
sbb
push
dec
jo
sub
clc
sbb
shrb
nop
scas
pop
pop
dec
in
push
dec
dec
sub
mov
pop
mov
scas
adc
jmp
and
rorl
ds
ljmp
jmp
cmp
dec
or
aaa
jp
aas
jo
fadds
out
or
in
dec
outsl
popa
mov
iret
push
dec
inc
cli
add
inc
cli
push
and
frstor
ret
cwtl
std
fdivr
stos
lret
roll
loope
dec
mov
shr
xor
add
in
and
cmpsb
mov
sub
cmp
pop
pop
insl
jnp
fnstsw
test
adc
aaa
bound
cmpsl
repz
ret
dec
xor
out
outsb
pop
mov
sbb
cld
cltd
mov
cmp
add
scas
cmpsl
mov
ljmp
fpatan
mov
sub
lret
repz
cs
pop
xor
mov
xlat
sbb
sarl
ss
and
into
sub
add
int
pop
lock
mov
repz
and
vpmacssww
fbstp
test
pop
cld
xor
out
gs
enter
dec
mov
add
or
cmp
push
or
cltd
push
ror
std
adcl
push
das
stos
adc
lret
mov
filds
adc
outsl
jmp
push
in
inc
mov
or
pop
int3
push
rolb
idivl
push
les
cmp
dec
push
cmp
mov
or
mov
jg
imul
jns
mov
mov
mov
out
inc
arpl
xchg
pop
push
sub
pop
icebp
push
bound
cmp
movsl
push
dec
aad
int3
iret
adc
js
aas
testl
cmpsb
mov
in
mov
adc
mov
push
imul
dec
and
mov
dec
jbe
xor
adcb
mov
pop
lods
stc
or
mov
dec
mov
mov
lods
test
inc
inc
in
insb
cwtd
adc
dec
or
nop
decb
sahf
push
cmc
inc
out
jge
std
adcl
jno
int3
mov
stos
rcrl
iret
dec
clc
fwait
push
stos
jmp
js
add
inc
std
xchg
cmc
int
fwait
xchg
push
cltd
dec
jge
jb
in
xor
dec
sti
lea
jb
outsl
clc
rclb
pop
inc
and
xlat
cltd
movsl
cs
inc
idivb
sub
sti
xrelease
aaa
mov
cwtl
inc
and
das
sbb
push
ret
dec
pop
imul
divl
adc
in
jle
inc
loope
mov
int
xchg
mov
sbb
fisubrs
push
dec
push
xchg
lods
dec
aad
jnp
loope
sub
cltd
jo
rcrb
sub
pop
lcall
sbb
lds
rcll
push
and
sarb
jecxz
jl
add
mov
shl
mov
pop
test
mov
jle
pop
loope
in
arpl
sbb
ds
xchg
sbb
adc
jo
mov
fwait
sti
ret
mov
iret
inc
add
sbb
mov
pop
les
pop
and
js
ret
cwtl
or
mov
xchg
xchg
dec
sbb
mov
inc
mov
inc
dec
in
cmp
aad
fiaddl
mov
mov
mov
pusha
inc
fdivp
stos
ror
sbb
out
mov
push
jge
cmp
repz
fs
push
movsl
push
sub
push
xchg
xchg
ss
jnp
insb
inc
test
adc
xor
call
orb
add
xchg
out
fimull
addr16
cmp
mov
mov
xchg
xor
dec
cmp
mov
jae
test
aam
push
out
jp
pop
popf
mov
stos
icebp
sub
mov
pop
out
out
or
test
push
std
test
xor
cmc
inc
ljmp
jp
arpl
frstor
sysenter
scas
test
push
cs
mov
mov
sbb
jecxz
jno
inc
adcl
sti
dec
pop
and
xor
cmpsb
add
fsub
loope
lahf
out
icebp
shll
fistpll
adc
mov
inc
call
and
rcl
mov
mov
dec
mov
xchg
mov
clc
leave
fcmovnb
mov
jle
loopne
xchg
adc
ret
stos
and
enter
inc
mov
sti
pusha
pop
mov
in
inc
cltd
dec
jp
out
or
jle
loopne
insl
add
pop
fimuls
orl
mov
das
adc
not
cli
xchg
sbb
push
sub
cld
aaa
or
negb
jge
inc
push
jns
fisttpll
mov
lahf
mov
out
out
jmp
jbe
or
push
ficoml
imul
xor
mov
inc
scas
jmp
push
inc
out
mov
les
into
es
loope
push
rcrb
test
aad
out
cmpl
push
xchg
add
and
shl
lret
push
je
mov
adc
mov
pop
pop
and
ljmp
imul
mov
cltd
leave
jne
xorb
mov
rcrl
inc
xor
add
mov
idivb
or
aas
mov
stc
insl
dec
push
mov
and
aas
pusha
jge
mov
cmp
test
rcrb
and
loopne
fs
lret
aam
mov
out
jle
aas
std
in
sub
incl
dec
sbb
pushl
mov
fcmovbe
dec
and
jmp
inc
jmp
jle
adc
fisubrs
adc
inc
aad
mov
test
cwtl
nop
or
out
xchg
popl
sbb
xadd
les
aad
call
outsl
hlt
fstpt
jg
sti
sbb
movsb
cmpsb
out
sahf
notb
fnstcw
adc
mov
stos
jbe
sahf
insl
xchg
lock
fnstsw
shlb
into
sbb
xchg
add
jbe
fld
out
inc
jno
pop
cmp
arpl
fucomip
ds
xchg
jg
icebp
lea
cmpsb
repz
cmp
cld
ret
jl
rorl
mov
popa
sbb
and
movsl
sbb
mov
loope
mov
stos
push
fs
imul
daa
inc
repnz
inc
loope,pn
stc
mov
imul
cmp
dec
jae
jo
popf
adc
out
dec
daa
mov
scas
cli
stc
pop
leave
lcall
repnz
sbb
add
push
outsl
sub
mov
fmuls
fcomi
pushf
ret
mov
push
dec
out
scas
sbb
negl
jo
call
xor
or
insl
add
or
mov
inc
ds
sti
lahf
in
int3
cmp
aam
aam
jb
cmp
sbb
enter
pusha
out
fsubrs
and
push
pop
test
cwtl
ss
adc
lcall
adc
rclb
push
xchg
subl
out
adc
movsl
aaa
loope
cmp
hlt
aam
mov
xchg
cmp
jns
fstps
sub
jmp
arpl
inc
push
call
ret
sbb
fstps
ja
add
or
lret
scas
popf
in
cld
dec
add
xor
push
test
es
push
dec
icebp
nop
adc
mov
es
test
lds
dec
jns
dec
stos
mov
fidivrl
mov
loopne
mov
int3
sub
popf
gs
jmp
inc
cmpl
push
mov
or
push
das
test
and
xor
mov
or
pusha
out
hlt
jo
xlat
sub
sub
and
pop
movsl
fildl
cmc
inc
and
scas
add
in
popf
sub
sub
cmp
test
mov
pop
test
daa
mov
cs
cmp
movq
in
xchg
mov
imul
xor
push
or
ficomps
mov
jno
sub
pusha
fcmovnbe
adc
mov
mov
out
jmp
sub
inc
or
adc
or
loop
inc
mov
lods
out
ja
pop
fcmovu
out
loopne
adc
or
std
sub
jl
movsl
and
and
movsl
inc
ret
sti
push
lock
mov
inc
push
mov
scas
mov
adc
mov
cmp
mov
jns
jo
and
scas
jg
sub
pop
xchg
push
js
dec
xlat
xchg
xchg
sub
and
add
call
clc
pushf
pushf
fisubl
inc
test
push
or
jge
inc
xor
jg
xchg
or
push
hlt
xchg
insb
add
mov
inc
rcll
mov
lret
pop
pushf
test
sahf
mov
fdivs
adc
xchg
in
xchg
jne
pop
or
pop
mov
loopne
mov
cmp
xchg
fld
jnp
mov
sbb
out
mov
dec
imulb
and
pop
or
es
xor
xchg
call
mov
dec
outsl
mov
popf
popa
in
iret
aaa
popl
ljmp
fs
aad
pop
jl
scas
push
mov
inc
int3
ja
pusha
lods
dec
aam
out
rcrb
jns
inc
ret
push
xlat
es
dec
insl
pushf
fwait
jl
out
mov
sti
imul
cmp
xchg
inc
gs
sub
hlt
push
xchg
lahf
sahf
roll
incb
jnp
jmp
std
jle
add
inc
push
push
pusha
mov
cltd
mov
notb
pop
out
lds
daa
pusha
xor
adc
and
std
xchg
xor
dec
mov
les
sahf
cltd
mov
ja
aas
adc
pop
add
push
popf
sbb
cmpsl
pop
jns
es
or
sbb
mov
jl
imul
sbb
add
int3
mov
inc
dec
add
push
jnp
dec
and
rorl
sar
ret
dec
mov
pop
lods
in
pop
mov
jl
push
bound
pop
nop
inc
jae
cmpsb
ljmp
fucomip
inc
mov
mov
xor
xor
and
cmp
bound
mov
cltd
dec
mov
cmp
mov
xor
jno
pop
add
ficoms
xor
xchg
lahf
mov
das
cmp
test
inc
cmpsl
mov
xchg
pop
add
pop
sti
or
stos
sti
sub
pop
andl
cmp
mov
loope
andb
jl
outsb
jp
jmp
subl
sbb
xlat
out
mov
add
inc
mov
push
fnstsw
popa
jns
popa
and
jp
subb
cmp
stc
scas
sub
lahf
divl
push
movsl
adc
sub
jo
cmpsb
xchg
push
sbb
icebp
pusha
sub
orl
out
pop
cmc
fldenv
xchg
mov
sub
ds
push
data16
lods
jne
int
pop
outsb
xorb
insl
xlat
movsl
shrl
cld
push
mov
sbb
cmp
inc
popf
mov
je
or
and
dec
jecxz
or
pop
xchg
rcll
inc
ret
xrelease
test
mov
jae
loopne
arpl
push
repnz
xor
cli
and
fwait
loopne
mov
add
add
and
jnp
mov
xor
ljmp
xchg
popf
data16
dec
push
adc
sti
hlt
int3
cld
push
inc
gs
hlt
pop
lds
push
adc
push
cmp
test
mov
adc
cmpsl
icebp
adcb
loop
pop
dec
cmp
sbbb
movsb
push
and
test
mov
mov
adc
jae
sub
stos
fists
and
bound
pop
lret
or
in
scas
xor
xor
aaa
mov
cmp
call
testb
xchg
mov
es
mov
sbb
pop
sub
adc
stos
sti
movsb
mov
mov
icebp
in
lock
cmp
out
xor
call
andl
mov
aas
iret
repz
jo
cmp
int3
jmp
outsb
mov
ds
sbb
jecxz
mov
stc
jae
jb
jecxz
mov
adc
mov
dec
roll
sbbl
ja
aaa
cld
call
ljmp
scas
mov
and
xor
xor
jo
xchg
cmp
in
mov
sub
xor
cwtl
mov
cltd
and
enter
push
lock
sbb
test
sbbl
xor
out
cmpsb
scas
mov
mov
pop
addr16
mov
sbb
int3
sahf
xor
dec
aam
dec
pop
push
sub
outsb
xchg
cld
ss
mov
cmpsb
in
repz
ret
xlat
cli
int3
int
loopne
and
cmp
sub
les
mov
lret
popa
out
inc
pop
jecxz
mul
das
cmp
lock
arpl
rcrl
jecxz
sub
nop
dec
stos
add
mov
ja
mov
je
gs
or
and
push
cli
les
and
dec
jmp
mov
push
inc
sub
inc
iret
cmc
inc
fcoms
xchg
outsb
ffree
push
outsb
adc
lret
adc
in
jg
push
ja
aam
mov
cmpsl
data16
data16
outsb
ffree
out
fwait
mov
xor
and
nop
and
mov
add
mov
push
xor
xchg
cmc
ljmp
xchg
mov
lret
orl
mov
clc
pushw
xchg
jb
inc
push
roll
sub
sahf
pop
dec
jle
xor
out
sbbb
sbb
adc
xorb
leave
cmp
sbb
jnp
stos
addl
and
inc
test
cmp
fdivr
cmpl
jmp
push
scas
sarl
fwait
lcall
lock
pop
fs
cmpsl
arpl
xor
lods
cmp
sti
aam
ds
jb
roll
pusha
stc
aad
or
xchg
data16
cli
lods
add
jae
xor
jecxz
fisubs
xor
sbb
sahf
mov
rol
and
scas
int3
test
enter
ret
xor
xor
cwtl
dec
mov
adc
cmp
in
cwtl
sahf
loopne
or
cmovo
ret
outsl
or
imul
fists
push
ss
jle
mul
aad
inc
iret
pop
addb
pop
mov
jmp
sar
daa
loop
mov
add
mov
imul
xchg
rorl
and
sub
shll
lea
std
mov
push
aad
or
pop
dec
xor
ror
scas
jo
fisubl
mov
or
mov
daa
repz
jbe
lock
repnz
mov
iret
jo
sbb
dec
lea
scas
fsubr
add
xchg
insl
push
jo
popf
jns
daa
push
mov
adc
repz
scas
lds
mov
xchg
jne
hlt
adc
xchg
fmuls
jnp
push
mov
repz
adc
popa
sub
pop
push
dec
les
add
aaa
orl
scas
pop
mov
outsb
add
arpl
aam
mov
and
mov
push
cwtl
pop
shll
dec
sbb
xlat
add
push
dec
hlt
inc
jns
shll
dec
sbb
sub
add
cltd
xchg
mov
or
mov
in
das
sarl
pop
popa
fs
enter
jb
add
dec
push
leave
cmp
cmc
cmp
fsubl
cmp
pop
dec
leave
aaa
scas
mov
jecxz
dec
jl
or
negb
and
xchg
xor
jne
xchg
pop
mov
lock
push
sub
pop
movsl
ds
mov
fwait
aad
add
and
movsb
mov
les
dec
mov
jns
push
out
mov
cld
cwtl
mov
cmp
ret
daa
sbb
sbb
aad
popf
mov
dec
fiadds
insl
addl
dec
xor
fstps
cmc
xchg
aas
dec
push
xor
sub
rolb
enter
mull
pop
loope
xchg
es
stos
lret
and
popf
in
stc
jb
and
js
mov
mul
dec
aaa
dec
mov
test
or
cmp
push
ret
cmp
sbb
xchg
jo
dec
std
jo
cwtl
inc
loop
cmp
mov
rcll
enter
test
hlt
sbb
xchg
sub
ja
xchg
add
push
mov
stos
jne
loop
rcr
cs
lret
leave
out
lds
jbe
mov
and
ss
adc
pop
je
push
inc
movsb
mov
inc
jns
test
push
call
pop
xchg
xchg
iret
and
and
sti
int
add
leave
and
cltd
fstl
ss
adc
mov
xor
stos
negl
mov
popf
xchg
scas
insl
sbb
icebp
test
add
pusha
mov
push
mov
dec
inc
add
mov
fs
gs
inc
and
js
and
push
bound
or
xor
std
in
outsl
sub
int3
push
pusha
cmp
stc
lods
jecxz
mov
cmp
mov
adc
adc
clc
cmp
daa
movsb
sub
mov
mov
mov
aam
jns
pop
out
ficoml
push
cmp
scas
xor
lds
aaa
hlt
mov
subb
adcl
xor
rorl
push
inc
push
dec
out
add
dec
out
out
and
and
sbb
lds
loope
adc
cmpsb
push
or
cmc
loop
rcrl
mov
mov
pushf
dec
stos
repnz
push
sbb
stos
jle
push
xchg
fcoml
and
stos
cmpsl
pusha
mov
stos
pushl
pushl
cld
pop
aam
data16
adc
les
add
mov
xor
fisttps
loop
into
test
arpl
sub
jmp
loope
fidivrs
dec
or
shlb
cmpsb
icebp
adc
cmp
popa
sbb
dec
jbe
mov
mov
fcomp
mov
ja
xchg
jno
iret
mov
std
les
ja
arpl
and
addr16
mov
push
mov
jp
adc
adc
mov
enter
movsl
adc
mov
push
ja
dec
mov
out
sub
call
adc
fnsave
adc
dec
iret
sub
pushf
pop
vpcmpeqb
outsl
fs
hlt
mov
mov
push
cmp
in
mov
ror
push
iret
xchg
fsubp
cmp
sub
jae
aad
and
jne
mov
adc
add
ds
sahf
xor
xchg
aad
push
arpl
sub
out
out
movsl
popf
inc
jle
mov
lds
dec
outsb
iret
cltd
and
mov
fstpt
icebp
aad
adc
xchg
scas
add
out
mov
inc
cmpsl
jmp
sbb
and
adc
int3
inc
sub
xchg
sub
push
or
xchg
das
adc
jmp
test
inc
jle
push
popa
lea
inc
insl
mov
mov
outsl
mov
subl
inc
dec
xor
lahf
bound
jg
jge
iret
das
dec
pop
mov
dec
cmc
lretw
jbe
ljmp
add
in
test
loop
mov
lret
out
cmc
cli
leave
xor
std
loope
insb
sub
outsb
loopne
add
movsb
mov
leave
popa
cmc
inc
or
xor
mov
add
daa
nop
clc
mov
fsubl
je
cs
lahf
jecxz
pop
push
jmp
mov
enter
mov
push
daa
cmp
pop
mov
xor
xchg
inc
repz
jp
sbb
jns
pop
shll
add
pusha
pusha
or
lods
stos
xchg
jae
sbb
cwtl
cli
and
mov
dec
enter
dec
pushw
fcoml
outsb
or
cmpsl
cmpsb
lcall
xchg
pop
xchg
mov
mov
xor
dec
shlb
ret
fnsave
std
mov
movsl
sub
add
and
xchg
ret
int
mov
aam
sbb
stos
jbe,pn
or
lea
push
popf
mov
je
sbb
lds
jbe
lds
mov
stos
lret
filds
and
and
in
or
es
lock
into
addr16
sub
in
daa
jo
test
popf
scas
dec
xchg
fwait
lock
mov
jl
cmc
inc
xchg
aam
mov
stc
hlt
mov
mov
rcl
lea
ret
je
cmp
sub
out
push
and
cmc
push
xor
jge
out
mov
or
push
lret
pushf
lds
push
push
pusha
add
scas
add
xlat
add
addl
jl
mov
das
fs
jle
dec
fisubs
jge
jp
int
ljmp
fcomps
repz
add
lds
insl
sti
fmul
stos
jno
jo
xchg
xchg
int
mov
stos
adcb
and
mov
ss
addr16
fwait
aad
scas
xchg
jb
jl
pop
jo
or
sar
adc
push
cmc
cli
cmp
insb
sub
push
and
shlb
mov
sub
insb
cmc
xor
sub
pop
and
xchg
cmpsl
xchg
fdivrs
lahf
je
roll
daa
xorb
test
insb
jns
and
shll
push
shll
mov
pushf
pop
cli
inc
sbb
xor
mov
pop
mov
add
or
cmp
pop
out
in
aad
repz
and
ret
xchg
mov
adc
data16
in
lods
add
cmpsb
aam
push
inc
lahf
pop
sbb
pop
lock
sbb
fdiv
xchg
mov
cmc
lods
sbb
adc
xchg
flds
hlt
in
cmp
cmc
imul
aaa
into
jp
sbb
dec
and
in
loop
mov
jp
jnp
dec
jb
cmp
mov
fisubl
imul
jg
push
sub
loop
add
cld
sbb
xor
leave
dec
les
pop
xchg
jl
fidivrl
adcl
adc
or
data16
pushf
xlat
dec
dec
lahf
hlt
enter
flds
jmp
aam
fs
test
insb
lret
test
stos
dec
test
dec
push
sub
sti
das
outsl
pop
push
mov
pop
pushf
stos
mov
loope
in
add
jmp
lret
push
paddd
mov
dec
pop
stos
and
test
iret
out
lock
lret
push
loopne
cltd
jne
push
loopne
arpl
sbb
das
sbb
jp
inc
xchg
ret
mov
out
and
je
aam
sahf
outsb
stc
out
or
ljmp
sbb
jp
add
in
or
int3
sub
adc
inc
xor
fcos
hlt
xor
xor
test
xor
jns
and
xor
xor
lods
pop
cli
sbb
gs
push
ja
jno
mov
popa
je
rcrl
inc
dec
cmp
sbb
jb
or
xor
subl
aam
inc
sbb
inc
jb
daa
test
jecxz
add
mov
pushf
movsb
sbb
inc
fldt
aas
add
push
mov
bnd
pop
sbb
push
xchg
jl
nop
les
ret
jp
adc
rcr
jg
mov
movsl
shrl
mov
mov
ss
negb
mov
imul
adc
insl
mov
mov
inc
icebp
sahf
repnz
mov
aam
imul
pop
mov
inc
adc
lds
add
imul
pop
rcrb
repnz
stc
mov
test
jns
push
push
push
in
inc
fldt
mov
xchg
fsubrl
mov
or
sub
jo
sub
jno
xchg
in
xchg
lret
push
xchg
jne
adc
push
imul
cmp
and
mov
dec
mov
mov
xor
push
stos
xchg
jmp
ss
arpl
mov
jl
cmp
inc
dec
add
mov
stos
in
pop
jno
pusha
mov
xor
movhps
mov
xrelease
add
addl
sub
mov
jle
repnz
test
hlt
dec
mov
sub
inc
in
test
insb
cmp
int3
jo
and
sbb
pop
inc
rolb
inc
jmp
jge
in
or
inc
enter
loop
and
pop
gs
int
cs
sub
sbb
sbb
adc
or
xorb
ja
rclb
pop
into
inc
mov
jb
or
fldcw
pop
test
inc
pop
jo
int
adc
and
jmp
fsubr
push
pop
jp
fwait
push
lcall
insb
push
cmc
xchg
xor
mov
fs
cmpb
ret
outsb
xchg
in
shrl
scas
sub
mov
cmp
dec
inc
adc
cmp
insb
inc
lahf
cmp
mov
sbb
lret
pop
pop
fcmovne
dec
mov
and
loope
lock
pop
cmp
or
adc
rcll
cld
aad
in
mov
xor
and
js
push
sub
sbb
add
clc
aaa
aad
fs
fisttpll
xor
sub
jne
jg
inc
xlat
dec
adc
jmp
out
xor
stos
jb
and
cmc
mov
call
mov
and
dec
insb
xchg
cmp
cs
push
xchg
enter
jb
dec
lods
dec
xchg
add
shrl
outsl
xor
hlt
testl
cli
cmp
in
insb
mov
lahf
adc
int
lds
andl
jp
sbb
fs
push
pop
xchg
aaa
mov
out
push
mov
sub
mov
ficomps
sub
dec
lea
scas
lcall
sbb
std
add
mov
aam
dec
into
xchg
enter
les
inc
les
in
add
insb
mov
xor
cmp
xchg
push
repnz
push
leave
sub
adcl
dec
lock
mov
cmp
std
mov
mov
sbb
adc
fwait
movsl
push
int3
mov
push
jmp
cmp
and
cmp
shrb
push
insb
lea
js
cld
push
push
movsl
sahf
cmp
jle
xor
sbb
and
push
in
add
xchg
jae
push
mov
xchg
pushf
sbb
stos
mov
sbb
sbb
push
and
fdivl
mov
sbb
mov
dec
fsubrs
out
cmp
repnz
movups
lea
frstor
mov
dec
scas
test
mul
sbb
aad
cmp
int3
stos
icebp
test
scas
xchg
inc
adc
or
imul
adc
inc
mov
or
push
out
ss
cmp
inc
es
and
mov
cmp
push
leave
repz
jnp
out
call
fcomps
sub
cltd
es
stos
lock
aas
imull
lret
pop
mov
loop
inc
mov
dec
mov
popa
mov
cli
movsb
cmp
or
int3
jecxz
or
fwait
mov
inc
roll
pop
sbb
xor
pop
bound
out
rcll
adc
mov
rcll
or
inc
xor
mov
and
inc
or
cmp
or
dec
push
popa
cmpsb
mov
mov
adc
lods
cmp
in
enter
dec
fistpl
imul
adc
loope
jo
inc
fidivrl
pop
lds
popa
xchg
clc
jg
cmp
inc
lahf
cwtl
mov
jl
decl
or
jbe
xchg
inc
push
popf
inc
jnp
js
xchg
outsl
mov
les
cmp
push
sbb
cmpsb
mov
sahf
pop
les
jno
or
adc
lea
and
inc
add
inc
mov
and
lahf
ret
dec
jecxz
cld
or
jo
or
jno
roll
aam
cmp
lods
jmp
popa
mov
cli
bound
jle
sub
fidivrl
mov
imul
stos
xchg
sti
out
bnd
dec
push
xor
adc
add
mov
xchg
loop
dec
push
mov
pop
cld
cmp
push
outsl
mov
push
fsubs
mov
out
sub
jb
into
mov
cltd
sub
or
sub
hlt
lret
in
sbb
jg
imul
xchg
cs
dec
adc
jle
inc
cwtl
pop
cmpsl
mov
mov
cld
rol
fcmovnu
inc
add
dec
mov
add
leave
fsubp
cmp
cld
adcl
inc
mov
xchg
pop
fisttpll
and
insb
scas
in
inc
cli
mov
in
fsubrp
jne
sti
outsl
rolb
insb
jmp
push
push
aaa
jl
lods
bound
sbb
mov
js
mov
insl
pop
mov
call
data16
add
cmp
in
or
xlat
stc
shll
mov
xor
mov
pop
jae
stos
pop
sti
out
cmc
mov
cmpb
push
lret
leave
mov
adcl
and
addr16
sbb
fnstcw
dec
rcl
mov
fcmovne
dec
xchg
cmp
fstl
cmpsl
mov
push
popa
inc
adc
and
sub
jns
mov
jo
jnp
outsb
lret
mov
pop
nop
mov
and
sbb
pop
jno
aam
popa
and
or
popl
cs
sbb
add
repz
sbb
enter
cwtl
lea
xchg
xor
mov
es
mov
jae
scas
mov
aas
sub
jmp
push
jle
xchg
cmc
shll
pop
xlat
mov
xor
xchg
icebp
xchg
and
popa
or
mov
iret
in
cmp
in
lea
test
and
mov
bound
push
js
scas
iret
push
clc
loope
sti
add
pop
pop
loope
data16
je
daa
push
mov
sti
or
xchg
mov
das
movd
or
lahf
add
mov
jbe
lock
mov
cmp
cmp
inc
xor
push
mov
ds
push
xor
fld
mov
dec
loop
pop
aaa
xchg
das
xorl
stc
xor
mov
out
push
sub
out
iret
fcomps
lods
fnstcw
outsb
dec
push
jle
jle
dec
movb
jne
sbb
imul
ja
in
xchg
mov
dec
inc
jnp
dec
inc
cmp
lods
lods
add
cmp
mov
aam
mov
xor
pusha
std
dec
mov
or
clc
enter
into
sub
mov
jmp
popl
mov
xchg
loopne
mov
dec
movsb
mov
int
and
adc
or
or
mov
mov
sub
outsl
popa
xchg
lds
xlat
xchg
or
mov
xlat
mov
das
mov
jl
xor
repz
lea
popa
ret
push
cmp
mov
sub
mov
pop
mov
cmpsb
inc
fbstp
lret
xchg
ljmp
arpl
bound
mov
jno
test
add
fs
adc
push
mov
sbb
imul
sbb
add
mov
lods
insl
mov
dec
mov
jg
stos
out
jl
adc
das
sub
bound
daa
mov
jecxz
andb
adc
cmp
rclb
lock
xchg
xor
addr16
pop
sub
pop
jno
or
pop
push
push
lret
cli
rolb
rorb
sub
shlb
xchg
std
shl
inc
jge
inc
jg
xor
push
loop
or
js
sbb
dec
cmp
pop
jno
adc
hlt
mov
jae
sarb
imul
xor
push
ss
hlt
out
sbb
mov
pop
and
xchg
sbbl
lock
dec
cmpsl
push
cli
cs
jge
outsb
and
xchg
cmpsb
mov
and
cmpsb
dec
ret
test
push
sarb
push
gs
in
insl
push
sarl
aad
push
jmp
in
scas
ljmp
push
icebp
sub
cmpsl
icebp
pusha
aad
mov
shrb
imul
aas
daa
sub
inc
sbb
push
leave
cmpsb
push
adcb
sti
data16
inc
ret
les
mov
lods
xchg
pop
scas
sub
fldl
cs
xor
addb
daa
adc
sub
mov
sbb
test
xchg
lahf
xor
add
adc
clc
fidivl
es
repz
add
mov
mov
cmpsl
xchg
xchg
mov
out
mov
push
in
add
xchg
add
testb
jnp
sahf
cmp
enter
int
xchg
in
ret
lret
das
lret
sahf
dec
sahf
add
imul
loope
leave
aaa
sub
xchg
les
in
mov
sarl
shrl
mov
rcrl
xchg
and
push
scas
scas
dec
cli
push
jne
xchg
movsl
loopne
push
xor
cmpb
out
out
xor
fstl
add
icebp
outsl
int
mov
cmp
or
cmpsl
add
stc
lods
dec
repz
imul
xor
xchg
scas
dec
sarl
push
pop
loop
lret
insb
sbb
xchg
xorb
pop
xchg
adc
inc
and
and
loop
dec
out
imul
push
xlat
jl
fidivs
movsl
mov
les
or
dec
xor
push
mov
aas
fnstsw
dec
es
pop
jl
add
mov
and
aam
add
xor
and
loop
hlt
stos
dec
or
sbb
jmp
xchg
inc
out
rcrb
inc
jp
jae
lcall
out
nop
lods
dec
in
mov
jmp
cltd
ficompl
pop
mov
jne
xor
cmp
ficomps
xchg
adc
cs
adc
ret
dec
dec
add
mov
inc
mov
data16
mov
and
add
adc
pop
test
fcomps
popf
stc
sbb
bound
mov
int3
fstpt
dec
les
outsb
mov
xacquire
scas
push
nopl
cmc
xchg
sub
adc
mov
pop
pop
mov
push
decb
movsl
popa
lret
jle
mov
xchg
es
dec
mov
mov
arpl
sub
lcall
and
pop
repnz
push
pop
mov
mov
push
and
or
cltd
pop
sub
mov
scas
mov
xchg
orl
bound
test
test
sti
lcall
scas
xchg
std
add
cltd
je
bound
or
test
mov
and
testb
xchg
int
jbe
pop
aas
cld
js
pushf
stos
cmp
pop
cmp
outsl
or
add
and
jge
fcomip
jnp
jmp
decl
incl
mov
cmp
cmp
in
mov
xchg
ljmp
push
cmc
movsl
pusha
in
xor
push
mov
pcmpgtd
jae
sub
dec
std
add
jle
pop
inc
scas
stos
xchg
xchg
test
aaa
xor
xchg
loop
dec
popa
mov
push
adc
and
in
jno
cli
ret
stos
mov
jle
mov
add
xorl
adc
xchg
loopne
sbb
mov
and
push
in
adc
lea
cmp
mov
adc
cmp
in
add
shl
xor
std
and
lret
pop
xor
dec
pop
pop
sar
xchg
dec
pop
jecxz
pop
popa
xor
mov
mov
or
xor
jg
ja
push
or
scas
sub
loope
bound
jecxz
cs
pop
jae
add
sbb
mov
add
xor
pop
mov
imul
rolb
inc
fs
cmpsl
sti
mov
das
jb
into
and
lods
xchg
mov
int3
js
pop
fcompl
push
ljmp
mov
mov
xor
scas
mov
bound
jae
lcall
pcmpeqw
ss
ret
std
push
fildl
pushf
xchg
ficomps
loop
loop
ret
stos
outsb
lahf
insl
or
inc
mov
mov
push
call
dec
and
rol
inc
popf
sbb
in
pop
dec
push
in
cmpsb
loope
repz
xor
xlat
arpl
push
test
clc
add
xchg
push
or
movsl
cwtl
in
aas
in
jbe
sbb
fs
ds
jge
movsl
xchg
dec
out
shl
subb
jmp
and
imul
jns
popf
sbb
aad
jno
or
fsubrs
cltd
mov
in
adc
cmp
gs
push
str
cs
pusha
addl
addb
ja
stc
imul
mov
jg
es
mov
adc
jmp
negl
mov
mov
fimull
xor
movhlps
orb
jg
in
mov
sub
js
dec
pop
sub
leave
mov
imul
cmp
push
roll
daa
imul
rcll
mov
inc
daa
je
or
pop
sarl
test
push
int3
movsl
aad
and
scas
adc
scas
mov
test
push
or
inc
jne
or
arpl
or
xor
or
ret
rcrl
fcmovu
or
add
jnp
decl
lret
mov
cmc
mov
dec
inc
test
push
pop
adc
aaa
das
adc
les
fidivrl
aam
imul
mov
fnsave
test
push
or
jbe
pop
cli
loopne
std
jl
pop
mov
popf
nop
cli
add
popa
dec
push
sub
inc
and
fidivs
int
add
pop
dec
sbb
mov
call
rcrl
xor
inc
xchg
cs
out
mov
lds
jns
mov
push
lea
push
or
jg
push
inc
pop
xor
into
mov
dec
test
push
add
mov
mov
mov
sbb
sub
out
test
mov
cmp
mov
lea
pusha
outsb
mov
outsb
mov
lock
pop
dec
cmc
sbb
test
mov
ds
rol
scas
addr16
jbe
xchg
mov
mov
idiv
sahf
cld
das
popf
push
in
int
inc
jb
push
dec
out
js
scas
dec
cmp
cwtl
pop
cmp
jae
call
cwtl
jb
jp
jge
leave
dec
push
sbb
push
test
fwait
pop
insl
lods
push
xlat
nop
cmpsb
xlat
push
nop
pop
test
pop
dec
fdivrs
or
and
xlat
jg
and
add
icebp
test
cmp
sub
adc
push
xor
in
sub
in
xchg
pop
mov
in
pusha
cmpsb
dec
pop
les
test
inc
push
and
mov
xchg
push
test
outsb
jg
mov
out
into
in
popa
insl
das
arpl
ds
jg
rcr
sub
fs
push
in
leave
xchg
mov
push
jb
mov
std
aad
adc
push
cmpl
or
inc
push
pop
xor
sbb
imul
dec
sbb
hlt
mov
pop
dec
push
subl
addr16
pop
xor
cmpsb
mov
sbb
icebp
repz
imul
push
inc
xchg
sub
inc
jecxz
mov
test
dec
xchg
mov
mov
push
pop
and
dec
cltd
adc
fdivr
ljmp
push
and
dec
xor
out
cmp
jmp
inc
rorl
sub
loop
cltd
test
pusha
clc
aas
xchg
add
loope
mov
or
mov
mov
addr16
sub
cmp
in
loopne
stos
cs
mov
test
decb
xor
lahf
fldenv
sbb
or
out
stc
inc
movsb
cmp
shlb
mov
pop
aas
and
test
xor
insl
std
jle
pop
fsubrl
pop
xor
dec
or
pusha
or
pusha
insl
adc
nop
jne
fistpl
lret
lock
repnz
repz
sbb
loop
lods
dec
jl
sub
dec
mov
call
sahf
cmp
daa
sbb
aaa
sahf
mov
int
mov
push
leave
cli
push
out
fiaddl
aas
cs
ds
sub
dec
cmc
sub
add
fwait
test
mov
xor
aad
pop
aaa
scas
mov
daa
cltd
pushf
das
lock
xor
mov
add
test
or
jne
fs
add
out
loope
mov
xor
adc
xchg
and
lahf
push
or
insb
jb
lods
test
and
stos
dec
sahf
negl
in
clc
or
dec
dec
fwait
enter
fs
icebp
sahf
jle
sbb
das
lahf
pop
rorl
test
movsb
mov
repnz
aas
icebp
sub
mov
adc
leave
xchg
push
mov
insb
jne
push
jno
add
mov
pusha
jnp
or
pop
inc
jbe
mov
test
lods
sub
jne
mov
sub
stos
push
fwait
or
push
adc
lea
sub
jmp
cmp
dec
adc
push
test
adcl
fistl
mov
rolb
ss
pop
xchg
popf
cmc
std
lret
xchg
cmp
clc
and
rcrb
fwait
jne
lret
pop
jb
loopne
inc
push
es
repz
out
scas
jnp
sub
mov
mov
adcb
jl
pushf
repnz
sub
lea
xchg
sub
jle
fdivl
adc
cmpsb
inc
xor
cli
mov
jg
lods
inc
imul
pop
pop
imul
popa
repz
cmp
imul
xchg
shlb
cmc
and
or
dec
xor
push
pusha
popf
adc
pushf
das
loopne
rcrb
mov
pop
xor
and
out
add
jnp
dec
jg
cmp
push
inc
aas
and
shrb
push
movsl
sub
sbb
xor
dec
ds
push
lods
scas
pop
sub
repz
adc
fnstenv
push
push
push
dec
adc
add
and
inc
xchg
jp
push
jg
gs
dec
test
mov
outsl
sbb
mov
pop
push
incb
bound
leave
jle
test
jae
xlat
mov
mov
fisubs
pop
shrb
push
arpl
enter
and
xor
outsl
in
sub
mov
mov
aaa
sub
mov
inc
xor
push
dec
xchg
ret
jnp
es
cld
outsb
mov
les
andb
loop
jne
lds
vmovaps
jb
add
notb
mov
sub
out
cmp
mov
cs
mov
pop
xor
sub
inc
shll
je
movsb
jg
adc
lods
out
cmp
jle
imul
ror
pop
inc
mov
or
test
loopne
jb
stc
inc
iret
sbb
xor
sub
sub
aam
icebp
les
xorb
repnz
lods
sti
cmpsb
mov
dec
or
lahf
cmp
out
cltd
dec
mov
inc
push
pusha
mov
pop
adc
mov
aas
mov
rcr
xchg
sti
dec
cs
push
pop
lret
sub
inc
cmp
dec
mov
mov
dec
inc
negl
pop
jbe
mov
add
inc
daa
daa
fs
and
int3
push
bound
push
push
mov
xchg
cld
push
repz
xchg
pusha
pop
scas
ja
addr16
or
leave
sub
clc
push
outsl
out
testl
das
mov
mov
repnz
sbb
xor
outsb
mov
add
xor
xchg
out
mov
pop
push
jo
movsb
mov
fnstenv
fisttpl
jo
pop
pop
adc
mov
ds
aas
rorb
push
ss
shll
sub
push
rcrb
jl
xor
sar
adc
dec
es
pop
push
ja
push
repnz
sub
sbb
pushf
in
mov
and
push
aaa
shrl
mov
fwait
icebp
inc
push
in
inc
push
adc
mov
insl
aas
mov
jl
rclb
int3
sbb
leave
mov
scas
out
movsl
inc
sti
push
movsl
sub
loope
mov
lret
fcoms
xchg
mov
rorb
jmp
sti
mov
test
push
sbb
fisttpl
dec
xor
mov
pushf
inc
fbstp
mov
pop
push
inc
ficomps
xchg
push
add
mov
sbb
fistps
sbb
test
movsl
hlt
mov
orl
repz
pop
xchg
push
push
or
xor
cmp
outsl
inc
mov
pop
orb
aas
mov
inc
xor
stc
cwtl
push
jmp
sub
out
rcl
pop
rorl
adc
testl
pop
add
imul
js
imul
push
cmp
sbb
test
xor
sbb
mov
mov
test
dec
das
lds
sbb
emms
les
lock
sti
and
cld
js
int
pop
stos
mov
aam
out
jno
push
ficoml
pusha
sahf
add
xor
mov
inc
sub
notl
mov
xor
hlt
push
dec
adcb
push
sbbb
lret
pop
add
aas
push
inc
add
cmp
mov
pop
jp
ret
insb
and
notb
dec
in
shll
lret
and
movsl
inc
ss
pop
stos
in
ror
xchg
fidivl
add
fildl
cli
in
ds
xchg
mov
imul
lcall
jp
push
sbb
js
push
mov
lret
mov
mov
ja
sub
and
aad
xchg
out
push
xlat
xchg
out
add
ss
mulb
push
cmp
int
mov
imul
sub
jb
xorb
push
and
push
push
movsb
stos
sbb
ljmp
das
sub
jmp
stos
adc
or
add
fs
and
jmp
adc
adc
cmc
push
out
cmp
test
out
or
or
aad
ret
push
test
sub
sub
push
aad
outsb
jecxz
into
out
cmp
mov
fldcw
mov
add
add
les
inc
ret
sahf
mul
adc
cmp
out
lods
bnd
mov
jae
push
outsb
in
or
rorb
cmp
mov
test
sbb
shrb
sahf
stc
mov
in
ja
xor
out
lret
repnz
shlb
jge
push
frstor
push
adc
cmp
mov
jbe
jbe
push
arpl
or
cli
out
mov
mov
mov
xor
cmpsb
leave
jne
jp
push
jl
test
jle
fcmovb
sahf
xor
test
cmc
xchg
int3
scas
push
inc
xchg
add
xor
nop
gs
orb
sarb
icebp
pop
jnp
aad
sbb
inc
filds
outsl
jno
xchg
lret
data16
stos
outsl
cmp
sti
notb
push
test
sar
cmp
rcrb
inc
fnsave
aam
push
push
mov
lods
xchg
jle
int3
loop
push
rcll
mov
enter
push
xlat
shrl
int3
pushf
push
test
add
mov
cmpsb
aaa
or
lods
pop
in
xchg
lret
call
rol
mov
xchg
cmpsb
popf
les
cli
cmp
lods
imul
pop
mov
out
imul
xlat
loopne
lods
mov
shrb
push
mov
jecxz
xchg
jg
mov
cmpsl
lods
xchg
dec
out
int
rcl
dec
out
fdivl
mov
into
mov
shl
and
into
jle
inc
lahf
cld
mov
outsl
js
mov
add
shlb
inc
les
fstpt
fimull
rcrb
insb
out
ljmp
or
or
std
mov
test
ljmp
cmp
arpl
ds
and
xchg
xor
cmp
shrb
mov
push
daa
pop
and
out
sbb
arpl
push
fdivrl
dec
out
mov
mov
inc
nop
out
loopne
ja
push
pop
adc
and
cmp
sarb
mov
js
shrl
stos
mov
and
test
ret
sbbb
xchg
pop
call
sti
xchg
stos
mov
inc
inc
pop
lds
and
xor
mov
sub
mov
idivl
loop
mov
lock
push
mov
pop
pop
in
hlt
mulb
inc
mov
cwtl
and
xchg
inc
das
add
xor
setg
adc
in
sbb
mov
hlt
adc
mov
insl
mov
xor
jbe
jmp
sbb
idivb
jne
aad
push
popf
mov
stos
in
stc
and
cmc
testl
jnp
and
aam
das
inc
jno
jae
pusha
sbb
mov
ja
imul
push
mov
sahf
sbb
push
push
call
outsb
jno
push
je
add
fisttps
sbb
inc
add
insb
inc
xor
sbb
fs
add
fwait
lret
shrb
idiv
or
rcll
sahf
xor
dec
mov
push
cmp
xlat
lret
das
fsubl
je
lret
xchg
lret
in
adc
fcomp
or
sbb
inc
and
pop
jo
and
xor
mull
xchg
cwtl
jno
cmp
mov
dec
test
jns
test
imul
push
mov
sub
js
imul
scas
stos
iret
cmp
lahf
mov
xchg
sti
jl
xchg
andl
sub
in
mov
mov
mov
cmp
lcall
pop
dec
jnp
out
and
cmp
xor
jle
std
add
adcb
push
movsb
dec
enter
mov
pushf
in
mov
inc
ss
data16
pop
push
aaa
inc
or
call
adc
pop
jnp
in
mov
scas
je
mov
add
ror
outsl
push
xchg
pop
je
in
les
cmp
outsb
inc
fisttpll
cmp
push
mov
std
movsl
stc
jae
setl
cli
loop
cmp
mov
pop
test
xchg
mov
test
pop
mov
adc
fcoms
enter
jge
xchg
daa
jo
sub
fcomp
dec
aas
popf
lcall
dec
jg
call
sbb
int3
divl
fs
adc
adc
xchg
xchg
cmp
push
sbb
pop
sub
gs
add
test
pusha
pop
mov
notb
cmp
and
pop
fcoml
adc
cmc
push
jbe
rcl
push
lock
inc
sbb
push
inc
or
ljmp
push
outsb
test
lds
addl
dec
fcomp
pusha
ljmp
loope
fbstp
mov
xchg
daa
xchg
sti
mov
test
xchg
les
xlat
arpl
push
iret
jg
cs
mov
pop
jle
loop
loope
add
push
mov
rorb
inc
testl
push
fistpll
push
adcb
inc
mov
in
or
stc
cli
dec
jb
mov
or
or
push
cmpsl
push
jae
xor
movsb
fcompl
sub
xchg
ret
or
lret
sbbb
pop
sti
push
stc
les
inc
xlat
jne
test
in
dec
test
pop
inc
int3
rcrl
lods
dec
push
out
fstpt
outsb
dec
into
cwtl
stos
pop
xor
shr
xor
push
sub
cmp
adc
inc
outsl
jbe
or
pop
lods
cmp
scas
add
stos
cltd
cwtl
rorl
add
in
rcrb
test
in
mov
and
xchg
popf
lret
aad
jl
xlat
mov
mov
fdivrl
movsl
xchg
sub
dec
xor
jbe
andl
fisttpl
popf
cmp
imul
push
bnd
xchg
daa
mov
int
and
out
lahf
std
mulb
gs
mov
xchg
mov
add
xchg
mov
ret
popa
loop
cwtl
adc
jno
jo
xchg
adc
in
mov
mov
pop
inc
inc
sub
pop
inc
movq
mov
push
inc
push
jb
mov
pop
sbb
adc
jl
lock
inc
fstl
mov
fiaddl
xchg
add
or
cmp
loop
mov
pop
ljmp
sbb
gs
jg
les
scas
mov
sbb
and
or
imul
add
scas
repz
repz
testl
mov
mov
imul
popf
xchg
push
add
xchg
test
mov
xorb
lds
lock
stos
inc
or
icebp
leave
jge
leave
cmpsb
push
movsb
and
in
adc
movsl
push
test
push
fwait
lea
sbb
dec
dec
mov
pop
xor
mov
mov
movsb
pop
lret
cmp
xchg
aaa
outsb
sbb
fs
add
cld
jno
sub
insl
pusha
push
imul
xchg
jp
mov
ljmp
repz
pop
ljmp
pop
dec
dec
sarl
xchg
mov
adc
mov
ja
scas
call
ljmp
dec
inc
ret
lcall
pop
ds
imul
pop
dec
shll
movsl
lock
push
test
gs
leave
pop
shl
idivb
lds
push
shlb
xchg
push
jb
push
mov
jge
scas
das
mov
cmpsb
pop
cmpsl
lea
jb
jno
push
jb
cltd
fs
dec
add
aaa
rep
mov
stc
rorl
pop
xor
cmp
jns
add
dec
or
lods
mov
dec
movsb
push
xor
adc
lret
in
mov
pop
or
sar
inc
mov
jmp
faddl
popf
dec
scas
cs
jg
xchg
and
sbb
cli
je
mov
jnp
icebp
test
xchg
outsb
leave
push
loope
ret
lods
cmp
out
shll
sti
adc
call
jmp
and
cltd
jl
mov
imul
mov
outsl
aad
and
idiv
and
or
mov
aam
jmp
ret
cmc
push
push
pushl
cmp
push
or
add
and
sbb
iret
jbe
in
iret
insb
add
adc
in
iret
xchg
cmp
sub
sub
in
xchg
and
js
lock
sub
enter
mov
jne
fs
mov
xchg
int3
shrb
out
arpl
cmp
das
jo
scas
fsubp
xlat
repnz
out
ljmp
mov
mov
ret
addr16
add
movsb
xor
popl
fwait
addl
in
cs
aaa
xor
std
lret
bound
andb
testl
dec
mov
pop
mov
dec
xchg
fstps
sub
data16
xor
mov
push
leave
out
mov
cltd
push
mov
push
cmpsl
sbb
or
int
mov
or
call
roll
or
xchg
fwait
adc
enter
sub
lcall
jle
inc
mov
aas
sbb
ja
call
sub
xchg
aam
cmp
push
fsub
orb
push
xchg
push
in
push
cmp
xchg
xchg
mov
jle
adc
es
shlb
pop
adc
push
fwait
sbb
rol
adc
popf
cs
rol
xadd
jecxz
cmp
cmp
cwtl
pop
mov
and
add
mov
adc
mov
fninit
ficoml
loopne
dec
sub
gs
fcoml
pop
push
loope
mov
add
dec
push
cli
xor
dec
fsubr
pop
das
popa
outsb
and
out
aam
hlt
and
adc
das
mov
pop
imul
fildll
shrb
adc
icebp
add
ret
clc
out
hlt
std
out
nop
hlt
pop
or
stos
xorb
xchg
or
or
lret
sbb
inc
stos
inc
mov
lea
pushl
test
dec
out
mov
inc
das
mov
mov
mov
and
xchg
inc
lock
xlat
movsl
mov
pop
dec
cmp
add
ret
sbb
push
cs
push
test
in
cmpsl
or
test
outsb
fmuls
mov
pop
lock
sti
push
addr16
inc
xor
iret
mov
repz
mov
int3
fs
jne
lods
jg
jp
les
sbbb
cmp
xor
adc
or
or
jbe
repz
fldt
lods
jbe
test
cmp
test
adc
and
lahf
out
xor
scas
popa
bound
add
aaa
push
adc
loop
or
xor
add
shl
cmpl
xchg
xor
adc
push
and
movsb
sub
clc
roll
xor
jo
ds
xor
inc
mov
xchg
mov
in
and
xchg
or
sub
sub
lock
out
xorl
ret
or
test
out
das
push
rol
out
xchg
lret
fs
mov
test
adc
mov
sbb
sbb
sbb
add
mov
push
nop
add
mov
js
stos
das
cmc
lods
notb
dec
mov
and
or
adc
sub
xor
sbb
popa
sbb
inc
scas
sub
cltd
adc
mov
pop
xchg
jo
mov
lcall
xchg
add
mov
ds
sbb
sbb
lds
aaa
imulb
or
xor
shr
push
pop
xchg
jbe
xchg
into
add
stos
test
fmulp
cli
test
cmp
jno
jecxz
and
push
jle
xor
mov
sbb
cltd
mov
cld
cmp
or
push
sub
xor
mov
push
in
lock
push
cmp
pop
xor
inc
lock
mov
mov
mov
stos
pop
outsl
repz
add
rcrb
xchg
aas
xor
subl
xchg
gs
test
repz
mov
repz
pop
inc
sub
lret
pop
inc
jnp
inc
jno
in
push
xchg
dec
sub
adc
mov
mov
test
out
les
in
pop
jb
push
int3
and
int3
popa
bound
sub
lods
test
lock
or
lea
sbb
xchg
cs
out
ret
les
mov
int3
nop
cmp
mov
imul
fisttpl
test
xchg
pop
dec
out
add
in
in
scas
or
sub
adc
dec
adc
inc
pop
sti
pop
sub
adc
loopne
dec
jle
int
addr16
jb
fldenv
bound
xchg
and
in
adc
pop
aas
icebp
xor
mov
xchg
sahf
xor
lds
dec
mov
adc
dec
sub
iret
std
dec
test
inc
out
mov
or
es
cld
lretw
in
mov
sub
in
lret
je
pusha
fs
ss
push
notl
mov
int3
in
jae
xchg
lock
inc
push
stos
mov
fnsave
push
and
inc
cld
pop
std
lds
pop
je
fnstsw
outsb
jne
adc
mov
or
mov
adc
mov
into
iret
loope
cmp
call
gs
and
loop
jp
mov
loop
stos
push
mov
inc
imul
jg
fs
jl
std
push
rcl
or
mov
mov
cmp
xchg
les
and
push
mov
aam
add
fidivs
fcmovb
adc
movsb
xchg
stos
mov
cmp
mov
daa
jae
cmc
std
pop
cmp
adc
out
mov
outsb
jmp
add
xchg
negl
sarb
add
mov
adc
dec
and
shr
decl
jb
sub
pushf
inc
cmpsb
call
iret
subl
ret
push
mov
sub
mov
jg
repz
sti
cmpsb
inc
mov
in
dec
adc
xchg
sub
cmp
xchg
jle
jl
cmp
fmull
aad
push
add
inc
sti
cmpsb
mov
out
lret
fisubrs
mov
lahf
lock
into
inc
cmpsl
movsl
mov
repz
in
fcomip
roll
hlt
sbb
lock
into
gs
pop
push
cwtl
push
fldcw
in
or
flds
mov
lods
filds
xchg
mov
mov
jge
jnp
dec
xchg
add
out
xchg
xchg
pop
push
sti
lahf
sti
aad
in
in
jnp
pushf
sbb
clc
aam
repnz
insl
mov
dec
mov
dec
cmp
in
xchg
mov
in
push
fstpl
sub
aam
mov
sbb
scas
cltd
out
push
cltd
push
and
leave
rcl
lea
push
push
sbb
jl
xchg
orb
out
adc
mov
test
in
repz
repz
mov
arpl
out
lea
mov
cwtl
add
cwtl
fdivs
dec
das
mov
mov
cli
add
mov
bound
mov
pushl
popa
sub
push
fsts
jbe
lods
mov
mov
loop
fistl
lcall
fiadds
jnp
fxch
stc
fldcw
sub
pop
pop
fistpl
xchg
push
and
lret
or
inc
dec
cmp
out
xchg
or
std
sub
scas
xor
ja
nop
and
movsl
ret
pop
stos
je
sub
cs
in
fdivs
cmp
movsb
xchg
cmpsb
lret
ds
dec
cld
inc
rorb
test
popf
arpl
xlat
add
jl
or
in
rcr
mov
loop
xchg
fst
mov
movsl
ret
sbb
mov
pop
add
stc
dec
sbb
loopne
add
adc
inc
outsl
push
jno
repnz
rcll
mov
stos
pop
icebp
adc
jmp
bound
out
mov
cmp
clc
xchg
icebp
pop
jecxz
popf
out
mov
rclb
push
hlt
cs
push
or
and
pop
or
mov
ss
loopne
jne
or
jb
xor
lret
daa
jns
inc
popf
es
push
jbe
repz
pop
xchg
inc
mov
fidivrs
add
sahf
xchg
xchg
leave
cmp
mov
push
mov
je
cwtl
mov
inc
add
es
sbb
jo
sbbb
xchg
push
xor
cld
sub
xor
fisubrl
fildl
cmp
mov
lret
sar
mov
outsb
rorb
or
mov
push
dec
shl
in
pop
scas
add
test
fstpt
mov
dec
lods
aas
dec
imul
lock
mov
call
jno
aas
inc
mov
sub
lods
mov
hlt
xchg
pushf
inc
filds
mov
push
cs
mov
xchg
and
mov
add
cmp
les
test
hlt
xor
xchg
rorb
xchg
inc
cltd
decl
pushl
mov
mov
push
loopne
jp
jno
imul
ja
push
xchg
sub
mov
adc
das
and
xchg
inc
ja
fs
arpl
mov
pushf
lods
inc
push
loope
iret
mov
mov
dec
mov
fbstp
je
pusha
loop
cmpsb
shlb
and
out
jnp
pusha
lcall
xchg
aam
xchg
mov
cmc
jge
dec
shll
xchg
pop
scas
or
pop
or
inc
dec
in
test
arpl
push
mov
test
add
out
cltd
mov
ds
scas
cli
pop
inc
xor
mov
loope
mov
jo
push
inc
out
xchg
inc
and
movsb
or
shr
mov
jnp
inc
mov
dec
enter
mov
push
in
enter
movsl
mov
xchg
pop
push
push
fistpl
lret
ret
sar
push
adc
push
lods
in
mov
jno
scas
mov
cltd
frstor
add
movsb
add
icebp
test
dec
fwait
mov
out
add
cmc
pop
add
outsb
push
jecxz
jle
std
cltd
ss
xchg
dec
test
fcompl
mov
inc
inc
fs
leave
mov
sub
ret
add
mov
inc
push
mov
mov
daa
iret
scas
cli
xor
test
shll
sub
sub
jge
sar
cmp
fcompl
cli
inc
pop
xchg
xchg
mov
int
inc
adc
jecxz
jnp
test
mov
andl
mov
movsb
mov
js
pushf
cmpsl
repnz
jmp
mov
mov
and
push
adc
cwtl
sbbb
dec
mov
out
inc
cmpsb
mov
add
mov
int3
lret
fimull
int
js
scas
stos
rep
add
enter
shl
lret
ret
int3
xor
jp
sub
repnz
sbb
lods
dec
ljmp
call
xchg
test
orl
or
fsts
testb
int3
add
loope
xchg
out
imulb
mov
sub
rcrl
repz
xor
xchg
sar
decb
orl
cmp
notl
scas
pop
cld
pushf
jmp
xor
aam
or
mov
mov
jge
lds
loope
mov
mov
int
nop
mov
gs
mov
lret
outsl
jmp
loopne
aad
out
shrb
hlt
das
jne
fs
mov
les
loop
gs
or
pop
pop
imul
mov
pop
or
pop
scas
mov
push
mov
mov
xchg
or
adc
cmpsb
js
pop
int
xchg
mov
andb
push
sub
js
sbb
es
adc
or
lods
xor
stos
addr16
test
inc
cmp
dec
adc
jle
mov
and
addr16
mov
out
lods
pop
sbb
ficomps
stc
add
aam
out
pushl
cwtl
test
dec
stc
repz
clc
addr16
mov
ja
js
inc
pop
js
sub
or
call
aad
je
insl
mov
mov
inc
repnz
scas
mov
rcr
mov
mov
loopne
dec
sbb
lret
loopne
xadd
jb
xchg
out
test
mov
sbb
lahf
sbbb
test
jnp
stc
jecxz
xchg
xor
pop
mov
xchg
dec
jno
inc
fbld
adc
nop
sysexit
test
lds
imul
mov
push
and
xchg
aad
cmp
adc
sbb
mov
negb
cmp
add
add
lock
fisubrl
orb
push
test
and
xchg
jg
pop
shl
dec
pop
insl
pusha
add
stc
mov
jne
dec
push
dec
and
jb
ret
stc
sbb
add
mov
adc
add
test
mov
xor
fmul
fwait
pop
jge
ret
jmp
dec
mov
lea
push
adc
sbb
pushl
cwtl
or
cmp
outsl
jmp
dec
add
je
push
scas
stos
ret
cli
inc
outsb
push
cld
roll
out
xchg
shll
xor
sarl
pop
loop
cmpsl
cmpsb
int3
enter
cmp
fisubrs
in
sbb
repz
inc
sbb
pop
or
fsub
insb
fisubl
insl
arpl
mov
call
xor
pop
push
stc
ljmp
sbb
lock
addr16
jo
inc
hlt
imul
stos
mov
mov
aad
push
mov
decb
ss
fbld
cmp
imul
or
xor
std
sbb
mov
test
jae
das
pop
xor
in
mov
out
xorl
push
adcb
mov
mov
sbb
mov
inc
cli
dec
cld
cs
leave
fmuls
cmp
jb
test
sti
push
dec
cmp
shr
or
lret
div
push
cmp
jl
es
ret
sbb
stc
dec
or
test
ret
mov
loop
mov
in
xor
mov
sbb
lret
push
incl
shlb
inc
mov
sub
ds
jns
xchg
scas
pop
scas
pop
stos
xchg
enter
iret
pushf
cltd
js
lret
mov
mov
call
lret
dec
and
arpl
xchg
fucomp
xor
add
or
fistpll
adc
mov
in
inc
fcmovnb
mov
mov
xor
cwtl
dec
fists
jmp
push
test
je
ss
fcos
jns
pop
xor
imul
push
add
dec
adc
and
xchg
fisubs
orl
rcrb
daa
fisubrs
xchg
dec
jl
xchg
fistpll
sbb
popf
pop
lret
imul
xchg
pop
pop
sbb
movb
jo
jmp
and
sub
daa
in
iret
mov
mov
xor
dec
xchg
cmp
and
or
dec
call
xchg
jo
xchg
sbb
stc
mov
sub
das
je
pop
ljmp
push
push
enter
mov
test
xchg
xor
insl
add
pop
and
imul
ds
cmp
test
mov
into
jno
cld
fdivl
jb
int3
in
mov
fdivr
sbb
xchg
aas
cs
add
mov
ljmp
xchg
std
bnd
inc
cli
subb
in
sub
or
jle
jb
adc
push
cmp
ja
xchg
leave
in
add
call
mov
ret
dec
into
dec
pop
dec
and
fcoms
push
ss
xor
inc
inc
loope
cs
outsl
hlt
hlt
mov
outsb
les
das
in
stos
jl
xlat
or
leave
subb
sub
jge
sub
in
add
dec
aaa
cltd
xchg
jg
fsubrs
gs
sti
int3
std
rcrl
cltd
ljmp
push
fistps
jae
loopne
scas
sbbb
sub
test
dec
cmpsb
jnp
lea
mov
mov
inc
xchg
inc
aad
cmp
sarb
pop
dec
add
inc
jne
mov
loop
mov
out
cmp
or
rcrl
jp
and
stc
adc
iret
jnp
notl
arpl
fiadds
or
inc
xchg
mov
scas
dec
mov
mov
fcmovbe
and
jnp
jg
jl
push
xor
jno
lret
and
leave
scas
cs
sub
ljmp
inc
push
cmp
ret
push
xchg
xchg
ds
in
bound
sahf
jae
bound
jl
inc
les
hlt
pop
or
jns
inc
and
inc
cmp
pop
mull
mov
rol
inc
add
fdiv
cmp
pinsrw
aaa
sahf
mov
test
jne
cltd
pop
mov
adc
in
inc
movb
add
cmp
lods
sbb
mov
jns
xor
addl
scas
aad
push
mov
cmc
inc
cmp
leave
testl
jbe
sti
push
add
popa
add
fistpl
repz
cmp
lcall
lret
fsubs
in
cmc
insl
leave
neg
filds
lcall
pop
mov
lret
xchg
xchg
xorb
mov
mov
adc
push
ss
sbb
xchg
sbb
push
pop
inc
sub
xchg
lret
stos
or
popa
std
rcl
shll
loope
movl
jno
push
adc
gs
test
leave
push
daa
and
test
mov
cli
aaa
bound
in
imul
sub
mov
mov
lods
push
inc
fbstp
and
sub
jp
jmp
test
arpl
inc
mov
pop
xchg
jecxz
sub
test
lock
cmp
cmp
sbb
mov
jp
push
mov
negb
fwait
dec
jne
aaa
push
xchg
mov
out
xor
imul
divl
add
dec
sahf
push
cmp
adc
xor
add
fwait
sub
ja
or
cmp
jne
jg
out
jl
or
rcr
mov
push
hlt
and
mov
push
sbb
mov
jne
jmp
sarb
xchg
mov
loopne
fsts
pop
push
jo
add
scas
sub
ss
pop
addr16
or
xor
jb
cltd
push
pop
das
movsb
jno
xor
pop
push
add
mov
ret
aam
inc
push
fcomi
jne
in
inc
inc
sub
ret
jns
add
mov
aam
js
mov
jns
push
cmpsb
and
or
shlb
aad
dec
mov
xor
pop
lock
fisubs
cmc
jnp
popa
adc
cs
jno
mov
out
int
data16
out
cli
jg
or
mov
dec
stc
test
addb
or
pop
lds
xor
int3
jbe
pop
mov
sti
sub
inc
lcall
mov
ljmp
and
hlt
cmp
or
in
sub
test
cmp
das
sbb
ljmp
mov
mov
pop
rolb
cs
push
lods
pop
xor
nop
dec
cmp
inc
mov
mov
lret
jmp
rcll
xor
inc
mov
mov
inc
dec
sarl
addb
subl
test
or
adc
or
loop
cmp
in
xor
inc
pop
jecxz
mov
fisubrs
or
sub
push
bound
les
sbb
xlat
test
mov
pop
ss
imul
dec
xor
test
icebp
lahf
xor
loope
lds
in
mov
xchg
mov
jmp
stc
cli
mov
adc
cmc
add
dec
push
jl
clc
push
divl
rcl
icebp
push
fcomps
shll
fcomps
push
inc
fdivrl
push
xchg
outsl
mov
add
sbbl
mov
xchg
adcl
push
push
test
jbe
and
push
ds
gs
inc
orl
mov
mov
jl
pop
lret
mov
mov
out
pop
cli
mov
in
sub
repnz
enter
int3
and
xchg
mov
leave
aam
add
loop
icebp
dec
or
incb
mov
sbb
stos
out
lcall
testb
in
aaa
mov
idivb
mov
repz
xchg
dec
sbb
enter
mov
jo
add
pop
xchg
out
push
cmpl
pop
mov
std
mov
jle
mov
shlb
sbb
jno
lock
dec
mov
mov
loopne
pop
xor
sbb
shlb
imul
sbb
shlb
push
cmp
lcall
push
mov
xchg
push
push
pop
aaa
xor
icebp
push
les
jg
decb
testb
jno
adc
in
mov
add
adc
push
cmpsb
xor
inc
cmp
je
push
lock
cs
mov
cmp
inc
jmp
mov
imul
jbe
mov
mov
dec
std
outsl
repz
sti
les
imul
sub
aad
inc
mov
aaa
movsb
imul
mov
cmp
or
jmp
inc
lods
push
push
add
xor
in
ja
inc
shll
add
sahf
sub
aas
fdivr
inc
push
pop
jg
cmp
mov
cmpb
shl
das
jmp
cltd
add
lret
rcll
sbb
lods
jg
sub
mov
in
in
lea
out
push
adcb
push
aas
fcomps
cmp
test
mov
jle
dec
pop
js
and
hlt
leave
sbb
out
pop
sbb
cmp
pop
lock
loop
loopne
rcrb
cmc
mov
fisubs
jp
and
xchg
sbb
jno
fmull
cmpsb
gs
pop
aad
sbb
push
push
in
pusha
dec
fcmovnu
cltd
add
cmp
aad
aaa
and
outsl
out
mov
nop
jnp
test
inc
sub
lods
push
pop
shlb
fnstsw
dec
enter
scas
inc
jbe
loop
clc
cmp
int3
sbb
arpl
out
stos
dec
or
gs
scas
insb
sbb
lret
pop
mov
mov
daa
lcall
std
or
push
cli
mov
pop
repz
pop
add
lret
or
and
or
jecxz
cmp
fs
mov
xchg
aas
das
out
imul
push
rcll
adc
sub
mov
push
adc
idivb
jnp
push
stos
test
mov
std
dec
sahf
xchg
adcl
dec
loop
insl
mov
fwait
sbb
ret
gs
cmp
out
fs
or
jne
les
out
cli
dec
loopne
stos
cmp
push
jmp
pop
cwtl
jae
mov
gs
outsb
lret
bound
adc
nop
xchg
insb
in
repz
pushl
lods
dec
icebp
cmp
in
leave
je
or
pop
mov
pusha
test
inc
or
mov
or
and
adc
mov
decl
sahf
push
lcall
shll
orb
push
das
in
cltd
jae
aas
and
xlat
cmc
mov
popa
lods
add
cld
jae
icebp
cltd
subl
mov
push
stc
scas
cwtl
popa
mov
scas
movsb
xchg
out
add
idiv
xchg
cli
pop
fstps
in
jge
bound
add
testb
adc
inc
in
mov
lea
add
mov
test
adc
or
xchg
loopne
daa
sbb
and
xlat
in
push
mov
pusha
imul
mov
add
mov
pop
sub
cmp
and
sbb
pop
inc
mov
cmp
movl
ret
std
jns
rolb
push
adc
sbb
sbbb
dec
sahf
lods
iret
dec
cmpsb
mov
fisttpl
mov
pop
add
into
idivl
scas
pop
sbb
adc
ficoms
ljmp
mov
in
adc
pushf
inc
bound
xchg
sub
sbb
mov
jmp
lods
repz
push
lea
popa
bound
insl
andb
inc
push
pusha
int
ss
cmp
or
lea
int3
shll
or
movsl
dec
stos
mov
mov
fwait
push
scas
xchg
shlb
push
aam
lret
fcompl
pop
mov
adc
gs
add
movsl
jp
adc
jle
shlb
je
fwait
jns
or
insb
cmp
mov
ds
enter
inc
leave
add
mov
cltd
es
mov
pop
into
add
jl
fistpll
outsl
mov
xchg
lock
fs
sahf
aad
cmpsl
lods
aaa
and
in
adc
sub
mov
sub
insb
lahf
pop
ficomps
ja
test
out
stos
add
mov
leave
cld
dec
push
stos
js
loop
pop
fiadds
lds
sbb
or
inc
push
cmpb
into
fstpt
out
shlb
in
xchg
push
inc
popa
test
inc
or
dec
inc
dec
mov
xor
jge
cli
dec
adc
loop
pushf
mov
sub
les
stc
jmp
sub
loopne
test
stc
loope
icebp
push
or
inc
jle
push
lock
mov
fcoms
xor
push
dec
clc
mov
jp
nop
sbb
insb
bound
int
in
lret
rcrl
jb
inc
push
lods
xchg
push
cltd
or
inc
add
pop
stc
jp
sahf
mov
fiaddl
loop
lret
mov
mov
dec
stc
jae
pop
jp
icebp
jns
add
mov
lods
out
in
in
sahf
gs
mov
std
insl
sbb
jb
mov
push
lods
mov
rcll
and
cmp
test
xchg
sarl
mov
mov
mov
jp
std
lods
ljmp
xchg
repnz
sahf
nop
rcrb
gs
lea
sub
xchg
xchg
xor
mov
mov
adc
fldenv
ss
fstpt
clc
rolb
imul
mov
imul
xchg
cmp
jg
jno
sub
push
inc
cmp
sahf
insl
sbb
je
lahf
out
dec
xor
dec
add
in
bound
dec
jns
sbb
adc
mov
dec
jbe
mov
add
jg
inc
lds
push
mov
mov
mov
jb
mov
call
jbe
sti
inc
dec
es
in
scas
lds
lahf
fldl
int
jne
test
jl
cmpsl
inc
out
add
sub
out
repnz
dec
dec
jle
fucomp
lahf
sub
xor
jnp
insl
add
sub
mov
mov
mov
xchg
mov
clc
sub
js
orl
mov
je
jne
loopne
and
xlat
mov
mov
push
or
and
push
insl
jmp
jne
stos
push
xchg
aaa
subb
ret
lret
or
lods
insl
sarb
jno
fimuls
dec
fcoml
push
je
pop
das
and
inc
jmp
inc
stos
jl
mov
pop
stc
mov
add
dec
or
shlb
nop
xchg
in
jae
orb
mov
mov
cmp
push
pop
pop
aaa
pop
pop
xlat
arpl
or
jle
add
arpl
xchg
push
adc
in
push
pusha
push
cmp
adc
inc
neg
push
lret
adc
sbb
ficoms
insb
push
shr
ret
aaa
add
loopne
call
jbe
into
sbb
js
imul
cltd
out
push
jge
lea
incl
pop
pop
jl
pop
push
cmp
mov
in
inc
mov
pop
push
data16
scas
mov
jnp
stos
push
out
xchg
and
jle
rorl
cmpsl
jo
dec
sub
dec
xor
aaa
insb
or
xchg
cmpsb
or
addr16
sbb
into
sbb
jg,pt
or
outsb
mov
ss
inc
lea
push
fldenv
and
sbb
sbb
int
sbb
in
inc
pop
mov
mov
add
dec
bound
or
push
ret
push
fiaddl
add
jg
dec
sub
fwait
aaa
xchg
loope
mov
lahf
adc
scas
inc
lds
aam
sti
ja
ficoml
and
cmpl
jge
jmp
in
test
mov
repnz
shll
jecxz
pop
add
jne
aam
mov
lahf
in
in
repnz
sub
pushf
pusha
add
stos
sub
xchg
popa
push
hlt
mov
push
lar
push
fcompl
test
sub
or
mov
ss
sub
loope
mov
std
xor
out
outsb
xchg
lds
lret
sbbb
pop
push
or
pop
mov
std
xlat
jbe
push
push
lds
xchg
or
jno
sub
push
xor
inc
out
inc
mov
mov
dec
das
add
and
loopne
outsl
sub
xchg
sbbb
jne
push
out
cmc
bound
stos
insb
jmp
cltd
jnp
push
mov
pop
ds
xchg
jl
push
scas
das
addb
xchg
insl
sbb
or
add
dec
xor
sbb
es
gs
sub
dec
adc
dec
ljmp
movl
ret
aad
fcmove
pop
data16
jp
cmpsl
outsl
fcomps
or
movups
fisubrl
jg
mov
xorb
cmp
cmpsl
and
pop
dec
jge
jge
push
mov
and
dec
shl
push
hlt
adcl
jb
stc
lods
pop
hlt
push
xchg
fistl
shlb
pusha
mov
xor
cmp
cmp
mov
imul
rorb
lods
je
pop
fisubrl
xchg
and
test
aaa
mov
cmc
mov
push
fnstcw
add
pusha
aad
and
outsb
mov
push
cmpsl
mov
fmuls
stos
call
inc
pop
and
xor
faddp
inc
push
lret
inc
sahf
cmp
adc
enter
push
jmp
les
orl
push
pop
popa
and
and
hlt
mov
jo
mov
clc
pop
mov
xlat
xchg
mov
push
sub
gs
ja
or
add
xchg
push
jmp
stos
arpl
out
fdivs
lods
push
imul
sti
cmpl
pop
sub
jge
cmovg
dec
fstpt
fucomi
xlat
push
adc
cli
mov
scas
aam
sbb
pusha
push
lret
xchg
out
mov
fistps
mov
mov
xor
arpl
pop
lret
lods
jo
aas
out
paddw
pop
insb
xor
inc
test
es
repz
loop
xor
dec
dec
push
sub
cmp
fcmovnbe
arpl
fidivs
push
adc
sbb
notb
xchg
pop
cmp
adc
leave
insb
shrb
xchg
sbb
xor
test
shll
test
test
sbb
add
mov
imul
jecxz
test
mov
rolb
pop
add
xchg
idivb
xor
push
mov
mov
lods
push
pinsrw
lret
xor
dec
into
inc
gs
jo
inc
jno
jg
or
inc
sub
in
jp
imull
int3
dec
mov
lods
and
aam
sub
in
push
xchg
mov
repnz
cmc
sti
aam
shlb
aaa
fsubrs
mov
xchg
cmp
test
aam
dec
insl
lods
in
int
sbb
daa
fisttps
into
test
inc
sub
bound
repnz
mov
sub
sbb
adcl
ljmp
int3
sub
pop
imul
push
hlt
fadds
push
ss
out
pop
in
scas
pop
jo
inc
mov
mov
pop
xchg
sarl
xor
push
mov
push
and
and
sub
pop
mov
mov
stos
or
xchg
dec
xchg
sub
cmp
test
int
pop
sbb
aam
lcall
push
xor
cltd
lea
adc
sub
out
inc
push
jbe
pop
jmp
leave
sub
xchg
loope
mov
and
add
mov
mov
or
movsb
mov
pop
into
shlb
movsl
mov
jae
js
or
lock
dec
adc
mov
or
xchg
mov
jbe
push
imul
das
arpl
ja
xchg
cmpsb
dec
mov
fs
inc
pop
xor
lock
fisubl
adc
rcrl
mov
cmpsb
movsb
or
inc
pusha
and
hlt
imul
les
and
jmp
cmpl
add
clc
jle
lods
and
inc
mov
fdivrs
mov
ret
pop
sub
aas
lock
xchg
sbb
push
adc
sub
clc
adc
push
hlt
mov
dec
in
clc
sub
dec
pop
in
cld
ds
mov
rcr
popa
adcl
mov
sbbb
enter
add
mov
pop
repnz
movsb
mov
sub
xchg
mov
cwtl
inc
mov
test
loop
jl
cltd
mov
or
out
mov
cld
cmc
stc
out
jmp
cmpsl
xlat
push
mov
lods
and
aad
popl
stos
dec
jge
dec
aam
mov
push
nop
call
roll
and
fldl
sub
push
xor
ret
outsl
pop
jle
rol
das
pop
outsb
ret
je,pn
test
xor
push
and
pop
pop
sub
push
pop
in
mov
enter
aam
scas
adc
call
inc
subb
orb
js
and
cmp
aas
hlt
lds
repnz
sub
aaa
ret
cmc
and
and
mov
cmc
xchg
loop
jb
add
in
jmp
inc
daa
xor
data16
icebp
xchg
pop
jae
mov
in
push
pop
cwtl
sub
fwait
push
dec
cs
mov
mov
fnstenv
call
movb
jbe
enter
cmpsl
jne
adc
cmc
loope
pop
fs
fwait
mov
pop
ss
sbbl
jmp
push
and
cmc
cmc
xchg
inc
lahf
cmpb
sbb
cmp
fwait
xchg
rclb
imul
pop
push
xor
dec
jl
and
dec
push
add
xor
stos
insb
or
out
fwait
lcall
in
movsb
xchg
mov
es
push
nop
sbb
sub
cmp
mov
stos
sbb
loop
inc
out
lods
mov
mov
int3
cmp
adc
or
cmp
adc
jmp
sub
mov
inc
mov
pop
jg
pop
mov
call
enter
add
and
xor
out
push
pop
or
lock
pusha
enter
xchg
enter
cmp
dec
lahf
sub
mov
cmpsl
cmpsb
push
fimull
push
pop
xor
sub
mov
sahf
pop
inc
mov
pushf
sub
ret
andb
cs
addl
sbb
pushf
scas
jnp
fistpll
mov
sbb
adc
push
sub
jae
ret
mov
push
mov
outsb
in
and
in
pop
call
xchg
push
mov
xor
sbb
cs
xchg
cs
inc
xchg
shl
cmc
inc
sub
cmpsb
jle
sub
lods
and
dec
pop
push
or
jns
aaa
in
icebp
mov
xchg
fcmovb
pushw
jmp
mov
mov
push
dec
fdivl
aaa
xchg
push
or
xlat
jecxz
ss
loop
aam
jo
pop
popf
mov
sbb
pushl
leave
push
in
pop
sub
jge
xchg
scas
iret
xchg
or
lret
enter
ds
dec
out
clc
mov
gs
mov
stos
shlb
aas
roll
adc
inc
vpmaddwd
shl
jmp
inc
int3
xchg
xchg
sub
inc
das
mov
ret
cmc
push
push
inc
andl
pop
fs
xor
pop
push
xchg
aas
mov
push
cwtl
mov
ljmp
inc
shlb
inc
aas
pop
cmp
test
lahf
pop
and
add
cld
jp
and
out
mov
pusha
js
xchg
cmovp
cmpsl
shlb
jns
xchg
adc
test
ret
repz
rcll
popf
jno
add
aam
std
inc
cmp
push
hlt
inc
pop
je
addr16
pop
sahf
push
adc
fsubrs
iret
cli
enter
jo
push
pop
cmpl
arpl
cwtl
xchg
mov
sbb
jne
xchg
iret
jp
iret
repz
mov
stc
push
movsb
sti
inc
pop
and
cmp
inc
push
push
inc
in
testb
push
subl
shlb
hlt
dec
pop
inc
or
pop
sub
in
mov
outsl
pop
dec
in
mov
in
outsl
inc
add
xor
cmp
or
test
loope,pn
lret
in
add
push
loop
jg
push
adc
ret
lcall
add
in
in
jmp
mov
mov
cmp
cmp
mov
jae
shr
in
test
orb
out
xor
mov
or
adc
cmp
xchg
pusha
es
mov
jge
je
fdivrs
xchg
pop
out
sbb
dec
in
out
mov
sbb
pop
in
or
add
mov
pop
pop
sbb
imul
in
test
xor
popa
jbe
jae
cmpb
cmp
push
cmp
cmc
fistl
ja
adc
xor
inc
nop
mov
xor
mov
in
adcl
cmp
insb
cmp
push
adcb
pop
out
lcall
ret
jbe
jo
fs
inc
jle
rolb
aam
xchg
outsb
lods
imul
push
add
sbb
addr16
pop
arpl
push
sti
xor
xor
add
mov
pop
js
mov
add
xchg
xchg
cmc
xchg
pop
cmc
test
or
jb
adc
out
inc
daa
sbb
jbe
adc
cmpsb
jl
xchg
aad
lods
adc
dec
int3
inc
adc
dec
mov
or
sub
out
push
das
mov
and
push
hlt
lret
mov
jne
shrb
out
push
lcall
aam
sub
jmp
dec
rcr
test
sub
mov
ds
clc
flds
clc
js
out
movsl
shll
jge
jno
hlt
pusha
mov
lods
dec
mov
add
jae
mov
mov
iret
adc
pop
adc
ss
fwait
push
ret
adc
icebp
add
adc
and
pop
bound
dec
jbe
jmp
iret
es
or
test
dec
in
stos
bound
mov
xor
ljmp
nop
fs
push
test
mov
mov
xchg
jecxz
dec
jns
es
sub
pop
test
sbb
add
mov
in
cld
gs
pop
int3
data16
sub
pop
and
orl
xor
fs
notl
inc
shll
loop
inc
and
pop
fistl
push
add
shr
mov
push
pop
lret
and
push
xchg
and
jl
test
stc
or
scas
outsb
jmp
fnsave
stos
push
cmpsl
mov
loop
add
enter
ljmp
xor
aas
add
ja
pop
or
push
push
sbb
dec
mov
xor
pop
notb
cli
inc
lock
sbb
pop
pop
inc
jge
enter
test
inc
movsl
push
stos
pop
sub
inc
dec
mov
lods
ss
push
sahf
imul
inc
addr16
int
mov
dec
and
mov
fadds
cmc
sbb
adc
je
push
xchg
orl
outsl
aaa
xchg
mov
hlt
loopne
adc
mov
out
rolb
shll
or
xlat
push
outsl
xor
xchg
adc
cmpl
cmp
aad
cmpb
push
int
cltd
pushf
dec
fnsave
cmp
inc
sub
and
cs
sti
cmp
jno
sub
into
or
or
jnp
int
push
out
movsl
call
mov
pop
cmpsb
stos
or
sbb
out
and
pop
mov
lods
int3
loope
mov
clc
dec
pop
scas
arpl
or
jl
adc
xchg
hlt
pop
sbb
and
mull
test
int3
cld
mov
dec
sub
cmp
sub
cmc
pop
mov
scas
lock
pop
scas
push
stos
cmp
inc
maxps
jp
mov
fstl
call
or
daa
stos
mov
sbb
scas
pop
sub
jp
int
mov
lret
and
pop
imul
cltd
pop
lods
mov
xor
jae
dec
adcl
into
aaa
andl
add
ret
gs
lock
call
pushl
shrb
xchg
js
nop
fistpl
enter
inc
sbb
iret
fdivr
cmpsb
and
iret
ja
and
rcr
adc
pop
or
pop
add
iret
out
add
dec
jb
inc
loopne
popa
xchg
es
dec
test
sub
loope
jge
dec
in
push
fs
scas
cmp
mov
shrb
jne
mov
or
popf
in
sub
mov
imul
loop
mov
mov
repnz
inc
push
aad
out
jge
cld
cwtl
mov
mov
xor
int3
xlat
pop
fadd
xchg
icebp
or
test
push
xchg
and
and
pop
daa
orb
leave
mov
dec
inc
or
call
mov
outsl
sub
int3
add
jnp
das
loop
pop
data16
lock
inc
outsb
mov
divl
push
or
jo
sbb
shl
fwait
in
scas
fsub
mov
repnz
into
adc
or
stos
jmp
leave
lea
mov
sub
repnz
test
lods
mov
push
jl,pn
pushf
fidivs
sbb
jecxz
cmp
dec
clc
xor
mov
ret
dec
pop
jmp
out
or
popf
cmp
ret
jge
mov
pop
push
incl
ljmp
or
in
xor
push
pop
cwtl
and
sub
mov
cmp
xor
divl
push
enter
push
sub
or
mov
push
add
test
call
sti
pop
push
out
mov
sub
xor
out
out
or
jns
sub
jnp
dec
ljmp
jmp
lahf
fbld
xor
shll
fsubrl
ljmp
push
push
and
in
clc
push
loop
mov
repz
out
pop
repnz
sbb
ret
testb
popf
pop
mov
push
push
mov
push
into
test
jno
in
jno
popa
mov
loop
mov
stos
mov
aaa
loop
in
jae
sub
sub
mov
lcall
arpl
mov
push
test
jb
into
popa
sbbl
lock
gs
lret
jnp
sub
cltd
or
fldt
aaa
add
sbb
mov
in
inc
dec
xchg
test
mov
pop
mov
das
or
ffreep
xchg
add
movb
push
pop
sbb
popf
cmpsb
push
lock
mov
fcompl
mov
pop
dec
push
inc
cld
in
adc
ds
lcall
push
sbb
shll
xchg
add
and
sbb
adc
jg
mov
into
pop
icebp
pop
mov
in
mov
add
xchg
ja
push
and
in
fdiv
mov
jmp
es
test
lds
loopne
xchg
push
sahf
dec
and
xor
xor
mov
imul
cmp
in
retw
add
mov
aam
into
adc
std
xor
ja
outsb
movsb
loope
or
pusha
mov
stc
scas
sub
bound
cmp
dec
stos
dec
addr16
ja
cmp
inc
insb
jge
and
push
mov
xchg
sbb
push
jge
sub
cmp
mov
xchg
adc
mov
mov
cs
dec
push
nop
xor
inc
adc
mov
fisubs
es
mov
lret
test
rcr
mov
cmp
or
stc
outsl
jge
pop
jg
pop
rcl
push
lcall
pop
imul
fwait
pop
add
jae
jne
cmp
lods
es
out
sbb
push
pop
int
roll
fisubrs
xchg
inc
lock
aaa
out
bound
lahf
outsb
test
fs
fimuls
pop
mov
bound
fistps
fbstp
imul
or
fisttps
mov
or
movsb
stc
das
movsb
add
arpl
int3
popf
jecxz
loope
mov
adc
movl
mov
push
cmpsl
sarb
mov
rcrb
movsl
jo
sbb
inc
adc
scas
push
xchg
inc
imul
and
cmp
xchg
loop
inc
loope
fidivrl
andl
fcompl
ret
aad
xor
and
and
pop
repz
das
ret
mov
out
loope
lsl
or
push
stc
or
cli
fildl
aas
cmp
es
cmp
or
loop
xor
dec
xchg
pop
scas
adc
cld
into
mov
enter
sbb
rcll
insb
mov
lock
add
lods
adc
cli
xor
xchg
adc
or
outsb
filds
inc
inc
xchg
shlb
mov
es
outsb
pop
and
pop
loop
xchg
fld
ret
push
lods
mov
ret
ret
js
cmp
dec
jmp
aad
mov
mov
mov
cmpsl
or
repz
pop
gs
dec
xchg
bound
dec
mov
mov
ror
clc
lcall
jno
popl
pop
jb
int
xor
inc
or
jo
mov
xchg
inc
fwait
inc
pop
mov
jg
mov
lcall
add
out
insb
mov
mov
xchg
mov
repz
cmp
cmp
aaa
push
sub
call
xor
mov
into
pushf
mov
xlat
repz
or
cmp
hlt
rcr
push
shlb
jae
xor
insb
sbbb
pushf
xchg
lds
sbb
and
mov
loop,pn
cmc
cmp
jns
inc
punpckldq
stc
mov
or
inc
push
mov
cmpsl
jnp
cmpsb
xchg
lahf
jmp
inc
in
arpl
mov
decl
scas
dec
loope
inc
jl
jp
jno
mov
and
ja
shrb
pop
loopne
flds
int
push
sub
adc
mov
aas
test
std
and
mov
fistps
mov
shlb
cmc
jns
push
hlt
inc
cs
lcall
sbb
int
jmp
prefetch
cld
lods
adc
repz
daa
cmpsl
rcr
jp
inc
and
mov
pop
xchg
push
insb
inc
mov
mov
cmpb
add
add
fwait
and
stc
loope
add
test
jmp
nop
mov
push
icebp
iret
xchg
jno
cmp
mov
push
jl
repz
dec
add
mov
xchg
jg
sbb
adc
pop
inc
pop
das
out
imul
test
mov
aad
mov
mov
fists
xchg
fstpt
jne
dec
push
popf
dec
xchg
out
jg
idivb
and
lds
inc
dec
loope
jmp
xchg
rclb
int3
push
jl
dec
jmp
jno
rclb
mov
js
fs
in
sub
mov
outsb
fwait
les
outsb
mov
sti
inc
stos
mov
ja
dec
mov
rorb
stc
push
mov
repnz
adcl
aaa
pop
test
adc
clc
or
movsb
in
jp
or
mov
mov
scas
inc
les
mov
cmp
adc
add
test
pop
jb
pop
int
inc
lds
pop
negb
inc
push
sub
mov
cmpsb
inc
imul
sub
sahf
mov
das
pop
push
push
or
xor
lahf
cmp
faddl
insl
ljmp
fimull
incl
push
mov
push
jecxz
pop
adc
jge
sbb
shll
xchg
push
lahf
out
out
ljmp
mov
xor
jnp
or
movsl
jnp
loopne
inc
sti
movsl
stos
jnp
add
gs
and
sub
pop
jo
sbb
cwtl
jae
mov
js
fstl
lea
pop
insl
sbb
jl
inc
jp
js
xor
out
mov
pop
and
mov
imul
lcall
jno
sub
add
dec
shll
bound
and
pop
jg
mov
or
test
popf
stos
or
mov
and
pop
mov
and
xorb
cwtl
ljmp
xlat
cmp
or
mov
add
and
jg
dec
icebp
imul
jmp
ja
mov
and
rcrl
adc
sbb
stos
mov
lret
lock
mov
test
rcll
xor
insb
ror
adc
xor
aaa
xchg
clc
adc
fadd
es
dec
cmpsl
push
push
mov
adc
xor
popf
adc
jecxz
fcmovnbe
lods
lea
lcall
pop
cmp
cmp
bound
ret
jns
rcrl
cmp
mov
xchg
dec
fidivs
aam
daa
mov
ja
stos
dec
jl
jmp
mov
push
push
dec
mov
dec
sub
stos
fwait
mov
loopne
and
fcmovu
outsl
or
sarl
push
movsl
and
push
daa
lahf
cmp
sbb
push
xorl
aas
jmp
movsl
sbb
test
pop
sbb
frstor
lds
sub
xorl
push
push
mov
push
and
faddl
icebp
in
out
mov
add
pop
xchg
sub
ja
sbb
imul
lret
mov
out
push
fistl
jo
xchg
mov
subl
sub
dec
xchg
fisttpl
adc
inc
icebp
call
imul
adc
push
push
xchg
jne
aaa
negb
jnp
lret
dec
xor
popa
pop
cmpsl
int
stos
aaa
pop
lods
push
or
ja
fst
cmp
xchg
sbb
mov
dec
outsb
scas
out
and
out
daa
stos
mov
mov
push
in
mov
cmp
in
inc
or
mov
jns
test
sbb
jle
cmp
cmp
inc
das
jnp
mov
loopne
ds
imul
cmp
test
in
mov
xchg
xchg
lahf
pop
adc
jl
ror
or
and
and
and
lods
cmc
cmp
cmp
dec
into
and
add
cmpb
adc
ficomps
fsubs
mov
aas
xorb
sbb
mov
ljmp
mov
fcoml
fwait
insb
scas
int3
ret
test
pop
xor
adc
leave
push
stc
mov
add
and
lock
popf
repz
adc
inc
sbb
lods
insb
adc
cld
icebp
es
mov
mov
and
pop
jae
inc
repnz
jecxz
push
int
inc
adc
and
lret
sub
in
xchg
loope
repnz
xchg
mov
mov
xchg
adc
dec
mov
mov
sbb
decb
jl
or
sub
push
push
test
les
xor
xchg
xorb
add
loopne
jnp
xor
xchg
jg
sbb
dec
jl
xchg
test
aaa
mov
xor
out
js
daa
jne
cmpsb
jle
std
xlat
enter
aaa
jmp
test
dec
and
fsubs
mov
shlb
popa
jnp
out
ds
pop
in
mov
in
pop
adc
sub
dec
int3
loop
outsl
insl
out
jle
int
xor
cmp
aad
addr16
out
xchg
outsl
shr
inc
stos
xor
inc
repnz
add
jmp
iret
pop
fnstsw
adc
mov
mov
or
xchg
test
mov
jecxz
jae
nop
or
sub
dec
adc
adc
adc
lret
leave
push
test
add
daa
repz
imul
lret
pop
xor
iret
push
nop
push
sti
fwait
inc
or
testl
xor
popf
insb
cmp
shrl
orb
add
mov
sub
inc
adc
mov
aam
cmpsb
js
pop
jae
leave
andb
scas
cmpsl
jb
push
ja
pop
fstpt
dec
and
pop
nop
dec
enter
adc
or
testb
imul
ljmp
pop
xorl
xchg
insl
lock
fcomp
jno
pop
pop
rolb
mov
decb
outsb
adc
or
inc
popf
mov
loopne
popa
mov
ds
scas
dec
jge
mov
xor
cmc
push
sub
js
data16
test
jae
lcall
daa
loopne
push
push
cmpb
aaa
test
jnp
push
mov
push
jmp
mov
add
mov
push
mov
or
jne
xor
add
mov
stc
arpl
inc
jb
xchg
arpl
lret
fmul
daa
sarl
imul
dec
jnp
jno
out
xorb
mov
and
adc
movsl
addr16
mov
lret
jle
push
xlat
push
or
cmpsl
sbb
dec
int
data16
paddsb
dec
jnp
and
dec
cmp
roll
push
pop
pushf
push
daa
ja
faddl
lcall
movsl
cwtl
mov
daa
push
mov
ret
sub
adc
icebp
sub
rol
adc
sbb
push
mov
pop
fimull
pushf
jne
xchg
idivb
dec
dec
xchg
xchg
jae
add
movsb
cmp
ss
das
aad
mov
adc
dec
lds
ret
xchg
inc
icebp
mov
mov
adc
fcomps
mov
xchg
inc
jmp
sbbb
xchg
or
jns
outsb
mov
daa
imul
adc
das
ljmp
mov
das
les
outsl
pop
push
cmp
in
jnp
int3
dec
lahf
mov
in
push
push
push
pop
idivb
mov
or
pop
mov
in
mov
pushf
int
mov
or
ja
xchg
adc
test
xor
repnz
loopne
scas
xlat
clc
mov
jmp
int3
push
out
outsb
mov
mov
jbe
jle
adc
aaa
adc
out
jo
mov
jns
mov
or
mov
inc
sub
mov
push
clc
or
pop
test
mov
xchg
dec
or
or
sarb
icebp
xor
sti
push
add
dec
dec
dec
into
mov
jnp
int
loop
shlb
mov
sarb
insb
inc
into
cs
fbstp
add
test
test
pusha
stc
xchg
leave
test
stos
mov
addr16
loop
mov
xchg
les
xchg
mov
popa
mov
pop
mov
pop
aam
pop
or
loop
insb
inc
or
xchg
or
notl
adc
dec
xchg
xlat
call
xchg
mov
cmpsb
xchg
lahf
xlat
jg
mov
test
rcrl
rcrb
push
stos
sbb
dec
hlt
icebp
mov
pop
in
ja
cli
pop
sti
gs
lahf
pop
leave
adc
mov
clc
inc
in
xor
rorb
sub
lds
stos
cmp
mov
push
sub
and
inc
cli
cmp
dec
push
fistpl
pop
mov
movsl
addl
hlt
mov
cli
mov
adc
mov
cmp
sbb
push
fwait
sbb
mov
inc
sbb
ja
mov
adc
mov
movsl
pop
scas
ja
cmp
in
xor
sbb
add
fsubl
dec
sbbb
shlb
inc
push
je
popf
sub
cmc
in
iret
mov
mov
xchg
xor
sub
mov
jo
push
cmpsl
mov
jl
xchg
imul
das
lea
lock
jmp
outsb
cmpsb
arpl
clc
sub
ficoml
mov
push
insb
pusha
int3
dec
aad
add
stc
lock
or
add
arpl
andb
fs
mov
adc
add
fwait
sub
push
gs
cld
xor
xchg
cmp
mov
pop
jne
jo
adc
dec
mov
pop
push
mov
cs
push
mov
mov
leave
bound
and
jne
subb
adcl
push
mov
xor
out
inc
scas
cmc
add
mov
test
cmp
adc
mov
cli
mov
mov
clc
jbe
in
or
push
jmp
pop
xchg
int3
push
sarl
add
jecxz
mov
xchg
push
test
adc
int3
ret
ja
bound
mov
hlt
int
imul
fsubl
mov
mov
aas
das
imul
mov
cmc
ret
xor
fsubs
mov
cmp
ror
push
mov
dec
ret
and
orb
sub
ja
sub
lds
ret
dec
or
lahf
fldcw
loop
add
jns
mov
inc
inc
dec
xor
fwait
les
pop
or
nop
sbb
scas
xorl
add
imul
add
lret
adc
ljmp
mov
cmc
je
adc
test
icebp
stos
fwait
je
xlat
xchg
loope
jne
xor
cli
in
insl
shll
imul
inc
cltd
outsb
xchg
mov
push
pop
shl
and
es
cltd
cltd
inc
sub
popf
mov
out
out
in
push
test
fs
jl
sahf
cmp
in
pop
mov
jl
sbb
cs
data16
stos
or
add
stos
lds
xchg
inc
and
xor
loopne
adc
sbb
repz
fdivrs
push
jns
xor
clc
ror
add
sbb
mov
cmp
jbe
movmskps
ret
shlb
in
cmc
mov
push
in
rcll
std
in
pop
dec
repnz
xchg
mov
inc
sub
mov
cmp
pop
cmpb
test
sbb
scas
xchg
mov
loopne
xchg
or
notb
ficoml
ljmp
popf
ds
leave
lahf
inc
mov
adc
cmpb
or
aaa
mov
push
in
lea
outsb
mov
jl
xchg
mov
subb
push
jne
sbb
fnstenv
jge
aam
inc
neg
je
xchg
mov
into
dec
lret
fdivr
fistpl
sbb
imul
pop
cmp
sub
lcall
fstpt
and
and
sub
inc
jge
jne
or
bound
fs
inc
cwtl
and
pop
mov
cmp
cmpsl
data16
mov
loopne
cmp
mov
and
mov
inc
sbb
out
lods
or
negb
push
and
cmc
cmp
or
jno
xchg
stos
xchg
sub
and
test
pop
push
jecxz
rol
rcll
adc
fcomps
cwtl
sbb
aaa
pusha
pop
popl
cwtl
cmp
push
arpl
pop
out
push
adc
rcll
cmp
push
cld
pop
adc
jl
aam
cmp
popf
fcoms
sbb
mov
lahf
pop
mulb
outsl
jae
test
sbb
addr16
mulb
pop
push
aaa
call
repnz
inc
ja
mov
push
subb
push
ss
push
lock
adcl
mov
lahf
cmp
xlat
mulb
adc
jg
xor
mov
pusha
lret
jns
data16
fists
bound
cmpsl
push
scas
aas
leave
mov
lcall
pop
push
in
push
inc
int
shr
iret
daa
es
jae
mov
in
enter
loopne
xchg
xorl
adc
insl
leave
inc
xor
push
dec
out
insb
fnstsw
mov
aam
je
lds
fldcw
inc
mov
adc
push
leave
sbb
aam
or
or
push
repnz
pop
fsubl
jl
mov
inc
and
inc
xor
jo
int3
mov
sbb
and
push
fdivrp
cmc
cli
cmp
mov
int
cmpsl
divb
pusha
inc
mov
adc
jl
jbe
inc
push
pcmpeqd
push
fistpll
in
jge
into
xor
cld
addr16
jnp
aad
mul
push
sub
add
push
jle
sub
mov
mov
cmp
add
mov
add
arpl
loope
pop
mov
sbb
and
or
into
push
aas
adc
or
fstpl
pop
push
sub
dec
popf
cs
ds
and
loopne
push
push
sbbl
loope
mov
sub
lret
addr16
iret
mov
dec
out
cli
fs
lds
ret
inc
xchg
cs
ljmp
cmp
int3
sbb
sub
jecxz
xor
rolb
fwait
out
pop
sub
and
add
cltd
ret
int3
fcmovu
repnz
mov
call
int
into
push
shrl
lret
dec
mov
pop
xlat
lcall
mov
lret
pushf
pushf
mov
sbb
icebp
sahf
cmc
or
push
mov
cmp
push
or
push
into
into
cli
divl
and
add
sub
jo
divl
dec
hlt
fisubl
jl
mov
xor
stos
into
cmpsb
inc
mov
pop
jbe
dec
mov
pop
sub
xchg
in
adc
out
push
aas
pusha
rcl
js
dec
lds
pop
mov
std
inc
add
outsl
and
clc
out
fucomip
stc
adc
pop
iret
loope
lock
pop
aas
push
cmp
inc
lcall
xchg
out
rorl
aad
sub
xchg
imul
and
adc
ror
js
pop
rcrl
fwait
pusha
js
inc
or
inc
clc
mov
lea
in
lahf
push
adc
sub
lods
insl
jae
clc
sub
pop
scas
cmp
cmpps
pop
int3
into
mov
out
mov
add
inc
push
jmp
cmp
adc
xchg
aas
nop
pop
mov
test
data16
inc
mov
pop
in
mov
push
adc
sbb
add
mov
cltd
loope
cmp
scas
in
cmp
clc
xor
and
push
mov
sbbb
or
addr16
testb
jp
jbe
repnz
inc
add
pop
sbb
pop
dec
mov
push
lea
aaa
je
jmp
inc
mov
dec
xor
lods
sbb
jae
sub
sbb
dec
and
ja
jl
ret
lahf
or
loope
cmc
xor
in
push
mov
adcl
call
or
scas
ror
adc
pop
dec
sti
sbb
call
fsubr
xor
mov
pop
pop
jge
xlat
notb
loop
aad
enter
add
lock
popa
dec
testb
es
cmc
test
fsubrs
sub
sbb
adcb
test
lods
inc
mov
mov
xor
cmp
icebp
inc
out
pop
mov
notb
int
and
push
jmp
repnz
sbb
es
lret
cmp
lahf
sbb
loop
cld
jnp
je
rcll
jbe
xor
mov
mov
sti
test
out
call
pop
pushf
leave
hlt
aad
les
xor
in
inc
fst
mov
imul
jo
arpl
xchg
sbb
call
sub
xchg
aad
push
mov
into
test
xchg
arpl
lret
gs
or
out
clc
dec
xor
or
xchg
inc
jle
mov
xor
movsl
adc
pop
xchg
aad
movsl
sbb
sub
data16
lret
out
or
jbe
loop,pt
mov
je
addr16
sbb
repz
adc
xchg
dec
dec
ja
and
repz
lods
sbb
inc
mov
dec
adc
xor
ret
jnp
movsl
mov
ljmp
push
fs
pop
jg
pop
jne
xchg
cmp
mov
les
scas
out
pop
xor
dec
mov
inc
inc
push
sti
xlat
iret
or
adc
fcompl
jg
xchg
cmp
pop
mov
adc
cli
cmp
jp
loopne
cmc
dec
xor
pop
cwtl
pop
fs
adc
shrb
ja
adc
mov
push
pop
sub
push
push
jle
ds
sbb
mov
mul
cwtl
incl
cmp
pop
daa
std
loopne
ret
leave
leave
cltd
jge
cmp
out
pushf
addr16
mov
pop
out
into
push
aas
push
mov
add
call
inc
jle
pop
ret
mov
popf
ret
arpl
aaa
loope
sub
push
add
jge
movsl
dec
sar
movsb
push
xor
getsec
dec
addr16
xchg
dec
sbb
xchg
xor
aam
dec
popa
loop
mov
adcb
inc
inc
fcmovnu
roll
test
push
dec
cltd
jae
push
fbld
popf
and
shll
fdivp
dec
and
mov
push
xlat
hlt
filds
cmpsl
xor
mov
xor
fwait
pop
xlat
sbb
cmp
cmp
bsf
ja
mov
out
fwait
cmpsb
push
pop
lock
dec
or
addr16
push
lret
mov
rcrb
xchg
in
ret
insl
inc
pop
xor
inc
daa
mov
cmc
lods
into
out
pop
xorl
imul
lret
cmp
inc
mov
fst
mov
dec
andb
jne
and
push
push
test
pop
mov
push
mov
fdivs
jecxz
cmpsb
mov
filds
cmp
jge
adc
cli
packssdw
enter
fildl
xchg
push
xlat
dec
dec
jb
push
das
icebp
xor
outsl
lret
movsl
cltd
sbb
push
cmpsl
mov
sub
inc
or
push
xchg
das
dec
push
sbb
sub
lods
push
xchg
popl
dec
in
addl
jle
add
imul
cmp
addr16
mov
insb
mov
add
lds
psrlw
nop
je
xchg
pop
sti
repz
sbb
xchg
mov
fldt
mov
enter
mov
mov
mov
mov
and
adc
push
xor
fisubs
stos
add
popa
xchg
fistps
mov
fwait
xchg
xchg
stos
imulb
mov
lock
mov
cmp
pop
ljmp
push
dec
sbb
sbbl
sub
xor
sarb
sahf
addr16
es
test
test
fucom
inc
repz
jecxz
test
and
out
xchg
cli
fyl2x
push
mov
pop
jbe
fidivrl
adc
fwait
pusha
ja
fnstcw
cmp
or
icebp
lret
shr
pop
cmp
je
cld
cmpsb
insl
xor
lea
shl
enter
jl
fldcw
adc
mov
mov
inc
jle
popf
aas
lods
xor
iret
adc
cmp
adc
call
cmpsb
sarl
inc
adc
xor
or
test
mov
push
mov
enter
or
and
sub
imul
fsubr
pop
sbb
icebp
mov
fisttps
dec
xlat
xchg
xchg
inc
xchg
clc
mov
fistpl
addr16
test
sti
jecxz
hlt
dec
movsl
inc
sub
data16
ds
cmp
fs
pushf
push
ss
dec
in
push
bound
divb
mov
xchg
add
mov
mov
outsl
fisttpll
je
dec
xchg
dec
sti
movsb
mov
jp
dec
sbb
dec
jne
add
cmpsb
data16
loopne
and
outsl
scas
cmpsl
insl
push
inc
inc
call
fmull
adc
xor
ja
jb
aas
rclb
dec
je
add
loope
pop
sbb
push
fdivrl
xchg
mov
lcall
adc
push
inc
aaa
or
jmp
popa
stos
scas
jge
imul
add
and
jecxz
decb
adc
inc
mov
into
jge
aas
jecxz
mov
mov
xor
xor
popf
xor
cli
jae
inc
bound
pop
mov
fabs
cmp
lea
xchg
dec
repz
mov
pop
adc
jp
stc
or
sbb
adc
push
aad
shll
decb
mov
fsts
popf
mov
orl
push
adc
enter
push
sub
es
arpl
cmp
fldcw
inc
push
iret
inc
enter
jmp
push
sahf
fnstsw
aaa
pop
pop
lock
pop
add
jae
out
push
lock
in
pop
add
clc
jno
pop
xor
sbb
jae
mov
push
push
sbb
mov
fs
mov
sbb
jl
mov
fdivrs
pop
mov
mov
lock
dec
mov
mov
leave
loope
cltd
hlt
or
jl
dec
cmp
shrl
jno
pop
sub
int3
mov
sbb
fwait
nop
mov
daa
pop
mov
sub
pop
dec
dec
daa
mov
fwait
dec
loop
mov
mov
push
outsl
in
fidivs
pushf
scas
cwtl
dec
cmc
cs
or
sbb
pop
sub
mov
pop
movb
sahf
mov
pop
xchg
movsl
jb
movsb
fnsave
mov
scas
jl
cmpsl
xor
nop
outsl
fstl
fwait
xor
mov
aam
popf
pushf
cmp
push
lret
lods
inc
xchg
sbb
xchg
push
cmp
int
xor
push
mov
mov
xchg
insl
js
stos
mov
insb
pop
lahf
loop
push
and
es
xchg
jle
test
insl
sbb
mov
sbb
loopne
fiaddl
aas
jne
push
or
jno
divb
lock
scas
sbb
rcrl
sahf
jne
sbb
ss
xchg
pop
scas
outsb
cmp
pshufw
and
inc
mov
repnz
mov
in
dec
and
cmc
push
or
dec
sbb
sub
mov
pop
dec
push
ror
cmp
addr16
addr16
out
mov
clc
xchg
or
push
loop
ss
gs
xor
cmp
loopne
fincstp
sbb
sbb
dec
jbe
sub
xchg
movsl
sahf
and
and
dec
outsb
jae
popf
cmp
es
cmp
stos
fs
fucom
and
mov
mov
sub
xor
jo
pop
cli
xchg
sub
iret
sub
std
sub
pop
add
cmpsl
scas
shlb
add
call
enter
mov
popa
jle
lret
aam
fistps
adcl
stos
fs
gs
cmpb
push
jns
jp
fsubrs
call
aaa
xchg
inc
cmp
xor
push
adc
xchg
stc
loope
cmp
scas
jle
imul
mov
roll
sbb
xchg
and
mov
pop
sbb
sub
xchg
rcl
push
mov
xor
xor
adc
outsb
add
add
jnp
rcr
mov
or
rcll
test
cwtl
xchg
in
je
sbb
pop
sbb
jnp
les
pop
pusha
popf
sub
lds
sub
mov
jbe
jle
xlat
sub
ja
pop
fidivs
and
cmpsb
in
add
test
cwtl
shll
xchg
loopne
out
adc
xchg
out
lea
stos
movsl
outsl
lods
mov
inc
test
movsw
cmp
push
in
inc
mov
pop
cmp
sbb
add
fwait
sub
and
lret
repz
adc
inc
inc
scas
bound
sbb
mov
repz
dec
xor
pop
mov
daa
in
jo
jl
cmpb
xchg
idivl
pop
imul
mov
and
into
addl
fdivrs
push
dec
imul
mov
imul
cld
pusha
cld
dec
add
push
mov
push
popf
sub
jge
cmp
push
mov
adc
movsl
jg
test
shlb
and
push
fwait
pop
pop
mov
and
incb
out
stc
dec
dec
push
xchg
aas
lods
lahf
mov
sub
cmp
or
push
out
cli
xor
adc
jo
outsl
or
cmc
pop
out
sbb
cmc
xor
sarb
lds
fisttps
loop
fcmove
stos
aam
sahf
sub
pop
aaa
sahf
imul
dec
push
mov
xchg
clc
test
sub
imul
push
adc
repnz
xchg
mulb
pop
add
imul
stos
inc
scas
popa
and
adc
push
addr16
push
outsl
inc
sub
mov
dec
mov
std
pop
mov
jno
and
outsl
mov
or
xlat
or
mov
scas
cmp
and
das
sbb
or
dec
dec
push
push
ds
xor
outsl
add
stos
cmpsl
cmovae
test
add
imul
fmull
mov
mov
fistpll
inc
shrl
insb
lds
into
cmp
jno
aas
sti
lds
inc
aad
scas
popa
inc
xchg
jb
fidivs
push
movsl
cmc
ja
mov
loope
xor
dec
xchg
fs
cmpsl
sahf
aad
pop
and
jnp
mov
mov
jno
sub
lock
popa
jo
adc
pop
rorl
xchg
sbb
sub
daa
in
push
jbe
movsl
pop
fcmovne
lea
cli
sbbb
sub
add
fmull
inc
decb
scas
mov
sub
enter
jg
fucomp
dec
or
push
push
in
insl
aas
inc
in
push
adc
fadds
sub
and
lcall
mov
mov
jge
popa
xorb
cld
jae
iret
outsl
cmp
das
push
fistl
sahf
lea
adc
or
jp
cli
and
hlt
mov
lcall
sub
mov
fidivl
adc
xchg
jb
mov
movsb
sub
xchg
push
inc
mov
inc
out
lods
mov
sti
push
aad
test
hlt
shll
pop
pop
mov
data16
jb
fiaddl
xor
adc
movsl
data16
sub
or
mov
ss
out
adc
setnp
push
outsl
ja
cld
mov
and
call
in
jle
pop
pop
pop
mov
jae
cmp
ja
incl
mov
mov
and
or
adc
out
inc
scas
subb
xchg
adc
jp
push
mov
ss
rol
jb
stos
cmpb
sarb
popa
test
cmpb
test
inc
jg
mov
add
fnstsw
repnz
lahf
xchg
push
sub
xchg
ss
std
or
pop
sbb
scas
das
adc
and
pop
dec
sbb
js
hlt
mov
pop
cmp
xchg
jl
loop
dec
loope
jb
data16
fs
mov
inc
andb
hlt
mov
or
fildl
pop
dec
pop
dec
or
add
mov
negl
call
cs
imul
sbb
fldt
pop
gs
dec
and
leave
int3
mov
mov
je
pop
lcall
push
fisttpll
push
cmc
fiadds
jbe
cmp
or
pusha
test
xchg
sbb
test
out
fcompl
or
lods
mov
insl
mov
cmp
mov
and
xchg
pop
inc
fldenv
cmp
push
xchg
imul
ja
push
xor
rolb
push
sub
xchg
cmp
mov
pop
mov
out
jno
pop
xchg
jo
cld
or
pop
cmp
add
push
fsubrs
xchg
aaa
pop
call
shrb
inc
dec
pop
xchg
pop
or
cmpsb
fisubrs
push
movl
dec
lds
and
ljmp
aam
mov
jmp
cld
insb
into
fwait
add
jo
enter
imul
fsub
roll
xchg
add
lret
sbb
lret
movsb
lds
jb
xor
inc
mov
cmp
pop
int3
sbb
lock
mov
jmp
push
sbb
out
jbe
pop
les
sub
mov
cmp
xchg
mov
sbb
push
popa
cmc
mull
xor
cmp
shlb
aad
and
scas
pop
and
test
adc
dec
ret
adc
mov
pop
fs
pushf
xchg
and
outsl
ds
lods
mov
or
push
push
les
jne
adc
sub
and
in
sbbl
insb
imulb
je
aas
ljmp
insl
les
sub
sbb
mov
or
imul
push
iret
mov
push
push
pop
fs
mov
xor
ds
jns
cmp
cmp
rolb
imul
mov
lods
arpl
sahf
out
mov
mov
outsl
lret
cmp
mov
cmp
lret
jbe
repnz
aam
lret
addl
lahf
bsr
push
jb
roll
adc
mov
int
notl
insl
inc
pop
lahf
adc
in
jle
cmp
pop
nop
stos
xor
or
mov
data16
cmp
cli
or
adc
outsb
inc
xchg
sbb
dec
loopne
cld
or
sbb
aas
xchg
xchg
in
ret
xor
inc
cmpsl
add
mov
cmp
jo
roll
mov
lods
aam
es
cmpsb
out
popa
out
jb
lret
jns
mov
lods
push
inc
inc
fcmovne
push
das
inc
sbb
pop
mov
mov
popf
fldenv
inc
out
stos
sub
das
sbb
xchg
lcall
ret
and
sbb
stc
mov
loopne
pop
pop
push
int3
scas
in
pop
or
imul
sbb
daa
xor
sbb
sbb
cli
fildl
xchg
scas
sbbl
test
loopne
test
repnz
outsb
cmp
mov
push
xchg
dec
in
cmc
cmp
push
clc
cmpsb
jns
pop
push
outsb
movsl
test
lret
adc
lods
mov
jge
aaa
insb
xchg
adc
lock
out
repnz
and
movb
push
pop
loop
mov
out
int
sbb
icebp
orl
sbb
jecxz
push
iret
popa
fsubrl
sub
mov
mov
dec
jb
fisubrl
or
mov
add
jnp
inc
jl
mov
sahf
mov
mov
enter
loop
lcall
mov
out
xlat
or
mov
xchg
cs
repz
mov
pusha
sti
sbb
dec
lods
jl
xchg
dec
sub
inc
rorl
ljmp
mull
mov
mov
cltd
out
popf
jmp
stc
push
fstpt
lock
lret
arpl
jmp
vmwrite
pop
and
push
inc
stos
ret
aaa
ljmp
jbe
push
mov
jge
mov
add
imul
shrb
or
ljmp
cmp
inc
mov
xor
sbb
mov
mov
push
jbe
and
fmul
cmp
jl
fcmove
pop
xor
cwtl
xchg
mov
jl
add
dec
lock
lret
or
mov
xchg
inc
xchg
cmc
ret
mov
add
repnz
stos
movsl
add
mov
and
pop
out
jecxz
shll
sbb
aaa
inc
xlat
or
mov
ret
adcb
idivl
in
bnd
and
jmp
mov
cld
in
push
into
or
dec
in
or
push
push
sbb
mov
outsb
or
dec
jne
add
movsb
adc
int
mov
sbb
xor
movsb
cwtl
lahf
mov
insb
fistpl
sbb
test
jnp
xor
in
xor
xchg
mov
jl
in
movsl
repnz
push
mov
mov
sbb
fsubr
or
push
dec
xchg
jp
lods
dec
out
pop
mov
pop
je
push
mov
aas
arpl
comiss
mov
paddusb
add
push
mov
mov
popf
pop
ret
es
mov
cmp
fisttpll
mov
fbld
xchg
push
adc
je
cld
inc
cmp
push
adc
testl
cmp
out
insb
gs
fldt
insb
adc
push
test
out
insb
adc
cltd
dec
nop
outsl
fbstp
inc
xchg
shrl
popa
cmp
add
nop
cmp
mov
jo
insl
xchg
push
dec
idivb
das
mov
or
ror
add
add
mov
popa
sub
dec
pop
aam
xchg
ss
in
clc
and
jnp
orb
test
sbb
loope
aam
xor
xor
xor
sub
inc
and
ljmp
mov
ss
jns
jb
test
icebp
pop
fsts
lea
and
jle
inc
loop
inc
cwtl
mov
pop
int3
or
sbb
in
shrb
xchg
push
cli
dec
fidivrl
add
mov
mov
jns
fstl
ret
in
cli
fnstcw
and
cmp
pop
xor
pop
jl
jnp
lret
mov
call
lahf
std
push
xor
xor
data16
xchg
and
jg
out
fisubrs
in
sar
fstp
sbb
jmp
adc
sub
fcmovnu
insl
stos
loop
cld
and
mov
aas
stc
daa
jge
lcall
cmp
dec
adc
add
mov
adc
sbb
mov
sbb
lcall
js
les
push
int3
scas
mov
jae
jae
lret
ja
fistl
loop
mov
or
inc
pop
pop
shlb
mov
and
aas
insl
movsb
mov
int
int3
pop
imul
lods
insl
push
dec
arpl
jle
sub
iret
lock
add
out
fsubrs
in
imul
sti
sbb
mov
inc
add
stos
xchg
mov
jne
xor
sbb
ja
aas
or
sub
sbb
add
dec
jg
mov
adc
and
mov
adc
pop
xor
into
cmp
outsl
add
xor
inc
jbe
sti
int3
add
jge
mov
jl
push
popf
mov
out
push
mov
mov
pusha
add
pop
insb
loopne
sbb
mov
sbb
cwtl
mov
ja
ss
xchg
inc
fisubl
mov
imul
or
rcrl
test
scas
sbb
mov
jb
xchg
jcxz
fisttpl
mov
popf
xchg
jne
popa
testl
punpcklwd
ss
lods
sub
outsl
aam
fistl
pusha
scas
push
sub
mov
or
lock
sbb
setae
lcall
push
test
dec
xchg
dec
lock
and
mov
cmp
jl
mov
insl
or
leave
mov
xchg
or
mov
in
push
mov
in
aaa
adc
and
mov
mov
stos
out
mov
inc
add
repz
push
dec
xor
cmp
fcom
xchg
in
add
insb
jnp
mov
sbb
fcmovbe
jne,pn
fiaddl
sub
mov
adc
ret
js
jo
fidivrl
mov
pop
push
lcall
iret
js
mov
xlat
push
fcoms
or
push
in
lahf
les
jg
inc
fucomi
jno
add
mov
push
cmp
scas
push
jmp
test
xor
movsb
inc
mov
or
mov
cli
movsl
xchg
std
loopne
cli
or
jne
bound
aad
push
cmp
xor
pop
and
test
pop
movsb
jb
add
sbb
mov
xor
or
xorb
mulb
rcrb
imul
pop
inc
leave
dec
fsts
mov
xor
mov
pop
push
cmp
lock
adc
sub
jg
cltd
xor
add
push
sbbb
sub
adc
sbb
cmp
mulb
jmp
outsb
xor
sub
mov
or
mov
inc
divl
pop
add
fdivl
idiv
ljmp
faddl
iret
jnp
cld
and
jne
shll
cmc
pcmpgtw
push
xchg
test
pop
mov
xor
fmul
stos
lods
push
loope
xchg
test
xor
pop
push
push
sbb
test
out
scas
ljmp
sbb
dec
roll
dec
clc
sub
fcompl
jo
or
lock
sbb
dec
imul
and
push
fidivl
ds
stc
ja
and
jg
cltd
les
imul
inc
fmuls
pop
out
aad
lcall
imul
sub
adc
test
xor
movsl
mov
push
icebp
arpl
rcrl
mov
cs
lret
pop
fsub
xor
inc
push
lahf
mov
mov
and
add
adc
daa
push
lods
daa
scas
mov
loopne
dec
mov
icebp
or
xchg
negb
ss
loope
arpl
sbb
jmp
out
xor
out
mov
movsb
lock
push
pop
inc
mov
adc
jne
push
pop
xchg
out
add
rcrb
jmp
push
add
push
jle
lods
mov
adc
movsl
es
and
jnp
push
xor
sub
xchg
movsl
pop
cld
mov
adc
and
xor
jmp
cmp
pop
mov
and
cmp
add
pop
xor
jns
repnz
jmp
rcll
std
stos
xor
cld
cwtl
adcl
add
cmp
push
push
pop
jmp
and
xor
jmp
mov
jb
lea
sub
ja
sbb
adc
shll
push
mov
adc
loop
cli
int
jmp
seta
jl
je
push
data16
add
mov
js
sar
add
lret
je
or
mov
lcall
bound
pop
fcmovnb
stos
flds
cmp
and
in
jl
mov
pop
push
mov
idivb
loope
xorl
jp
inc
scas
jge
xor
fcompl
lds
mull
pop
ss
test
pop
add
fbstp
sub
or
cmp
sti
pop
and
scas
hlt
or
cmp
test
push
xchg
push
push
dec
sti
and
or
push
adc
cmp
mov
add
fucomip
dec
jg
and
cmp
jo
fwait
cmc
addb
outsl
aaa
movsb
cltd
pop
mov
aas
int3
test
dec
fwait
xchg
xchg
xchg
imul
push
movsl
mov
cmp
dec
mov
ss
imulb
out
in
notb
adc
pusha
and
lea
mov
int3
fcmovnbe
mov
mov
inc
lret
shlb
scas
idiv
add
fnsave
sarl
adc
push
dec
movsl
xchg
imul
add
mov
add
xchg
leave
das
leave
mov
sbbl
dec
mov
ret
repnz
sbbb
dec
dec
js
lods
push
mov
negl
inc
lret
or
or
leave
int
pushf
mov
push
sub
fsubl
jmp
in
imul
xorl
movsl
fdivrs
inc
cmp
push
test
jne
push
inc
jo
and
xchg
xchg
in
fwait
and
or
xor
mov
and
and
pop
addl
sbb
push
and
mov
and
imul
ja
popa
pop
xchg
pop
push
xchg
cs
icebp
out
andb
pusha
dec
xorl
push
cmp
gs
xchg
and
setno
or
xchg
iret
jb
add
add
test
pop
dec
pop
daa
sub
fcoms
out
les
loope
mov
lret
into
mov
jl
int3
sub
clc
fwait
pop
inc
pop
cmpb
movsb
xchg
or
js
fistps
sbb
test
push
test
xchg
inc
pop
filds
movsb
dec
notl
sub
adc
xor
sbb
push
inc
hlt
sub
outsl
outsl
popl
adc
nop
fs
inc
add
insb
sarl
loopne
mov
add
inc
mov
sbb
arpl
jmp
ffree
inc
add
clc
outsl
mov
addr16
imul
cwtl
push
jmp
sbb
jbe
ja
movsb
push
mov
popf
cmp
aas
andl
pop
push
mov
mov
push
mov
sbb
cmp
mov
cmp
dec
stos
push
popa
xchg
xor
neg
jle
lock
sbb
push
jl
sub
scas
loop
pushf
ror
or
in
and
test
movsl
lcall
mov
mov
lods
sub
xchg
ja
mov
mov
xchg
mov
cli
xchg
cmp
lods
inc
sbb
mov
sub
mov
inc
insb
fsubrs
adc
outsl
adc
imull
repnz
cmc
push
mov
push
jp
lock
pop
ja
inc
cwtl
fidivl
push
and
pop
adc
xchg
dec
adc
sbbl
mov
ja
inc
sbb
enter
ljmp
shrb
adc
jne
sbb
or
dec
inc
jns
pushf
lods
mov
das
jl
shll
out
shlb
push
fiadds
pop
jle
push
add
fisubrs
rol
or
pop
push
inc
fstps
push
mov
pop
sbb
fstps
push
sub
and
adc
pushf
dec
mov
cmp
into
push
or
aaa
inc
inc
loopne
outsl
mov
add
in
imul
insl
dec
pop
xor
ljmp
ja
jb
lock
stos
sbb
cli
mov
cltd
jmp
cmp
push
fldt
xor
mov
mov
aas
jl
adc
pushf
push
dec
vandnpd
movsb
gs
pop
cmpsl
sub
ds
je
push
sub
sbb
addr16
scas
pop
rcl
pop
loope
rolb
add
lods
adc
insl
mov
sbb
xchg
dec
cmp
xor
rcrb
push
insb
out
pop
dec
mov
pop
icebp
cwtl
xchg
cwtl
cld
stos
ficomps
adc
add
ficomps
xor
hlt
and
push
and
dec
mov
push
sbb
push
test
imul
cld
dec
popl
dec
inc
push
cmc
sub
mov
or
enter
jle
mov
loop
ds
mov
inc
dec
mov
rclb
imul
lea
ljmp
mov
nop
es
enter
pop
dec
add
loopne
xor
rcrl
into
or
lds
dec
inc
loop
lock
rcrb
int3
push
ds
rcrl
add
xchg
cld
or
cmc
and
mov
push
nop
test
pushf
sbb
ljmp
xchg
cmp
lds
lahf
into
mov
adc
mov
jo
cmp
js
aad
enter
mov
int
inc
push
dec
sahf
mov
movsb
and
es
stos
mov
scas
cld
inc
inc
fimuls
popf
leave
pushf
dec
xor
dec
xchg
incl
movsl
mov
adc
inc
xchg
dec
or
and
and
mov
lret
pop
stos
out
lret
or
or
cmp
add
lods
ljmp
cs
pop
sub
mov
lea
pop
hlt
nop
scas
scas
cmpsl
pop
enter
dec
add
sbb
nop
xor
pusha
outsl
mov
mov
rorl
sbb
fbstp
jb
cmp
xor
lods
loop
push
lahf
jno
fiaddl
and
test
xor
lahf
pop
std
mov
push
sub
sbb
data16
sti
cmp
fwait
cmpsb
mov
sahf
adc
xchg
shrl
adc
mov
lret
fwait
inc
orl
mov
test
sbb
xchg
pop
and
out
test
mov
ret
clc
mov
out
sti
dec
cmp
mov
jl
rclb
js
mov
cmp
stos
repz
lea
insl
mov
inc
or
nop
xlat
aas
fadds
insb
pop
scas
popa
lret
popa
loop
push
outsb
fsts
lret
repnz
sbb
pop
or
xchg
enter
roll
scas
sbb
fldt
cmp
pushf
inc
xor
push
lds
daa
cmpsb
rcr
repz
fdivp
lods
cmp
fidivrl
pop
ficoml
mov
push
xor
movsl
xchg
jmp
test
stos
xor
testb
push
outsb
cmp
int
or
cmp
iret
mov
pop
xchg
pop
mov
push
rcrl
movsb
lcall
push
and
mov
push
sub
xchg
add
rcl
dec
mov
js
inc
insl
shll
cli
scas
movsb
mov
outsl
jb
into
call
dec
xchg
ljmp
push
and
dec
arpl
lret
sbb
add
jo
xchg
es
sub
aam
xchg
mov
xchg
out
int
and
and
imul
push
inc
mov
imul
cmpsl
movsl
movsb
daa
sub
mov
lret
fwait
pop
pop
orb
jecxz
in
xchg
push
jno
push
mov
lcall
js
cs
mov
call
xor
ret
lods
and
loop
push
add
pop
fucomi
sbb
dec
pop
insl
in
mov
dec
dec
ss
adc
fcmovb
mov
xlat
repz
or
andnps
andl
cli
loop
mov
sbb
ljmp
into
xor
mov
lods
push
xor
pop
inc
dec
push
add
sub
cmp
dec
or
pop
lret
fwait
xor
sbb
mov
sti
inc
rclb
sbb
adc
dec
and
fdivs
xchg
sbb
jnp
and
outsb
adc
popf
repnz
fmul
dec
xor
dec
lods
inc
fbstp
or
xchg
pop
sub
outsl
sub
cmp
lcall
adc
clc
cmp
ss
xor
call
insb
pushf
jno
jae
test
fbld
push
clc
xchg
mov
and
test
pop
fsubr
adc
in
and
aaa
fidivs
sbb
dec
xchg
cmpsb
adc
stc
sahf
dec
mov
push
daa
pop
out
lock
mov
imul
ret
js
in
jge
imul
mov
cltd
lods
scas
or
xchg
mov
xchg
sarl
mov
xchg
mov
test
cli
inc
dec
jmp
xor
fstpl
cmp
xchg
das
out
push
jle
lods
lods
xchg
lods
dec
lods
lods
mov
dec
test
mov
fimull
stc
inc
icebp
in
xchg
or
xchg
or
jne
js
enter
push
hlt
jno
popa
xchg
mov
addr16
stc
stos
sub
xor
push
inc
jmp
addb
adc
fs
sti
push
dec
sbb
enter
lods
enter
adcl
jge
std
notl
jecxz
test
xchg
mov
adcl
ljmp
outsb
addb
pop
andb
popa
push
jg
cmc
push
sti
xchg
les
fdivs
sub
jg
mov
xor
mov
and
shr
sub
push
lods
ret
inc
and
pop
movsl
inc
inc
mov
and
jmp
and
jb
fs
mov
add
mov
out
enter
pusha
test
xchg
or
aaa
adc
inc
xchg
insl
pop
pop
mov
sbb
cmp
addl
and
inc
outsl
js
arpl
push
sub
push
dec
add
mov
addr16
and
ss
in
scas
pop
mov
nop
mov
roll
and
mov
dec
loopne
movsb
inc
out
pop
push
sub
stos
aas
out
mov
cmp
repnz
mov
notl
jne
and
sub
mov
stos
in
stc
out
in
jle
rorl
and
push
sbb
mov
aam
mov
dec
cmpsb
push
pop
mov
adc
daa
push
add
jns
icebp
push
add
mov
push
loope
push
inc
into
aam
movsl
pop
or
adc
repz
popa
sbb
adc
mov
jo
insl
jmp
jb
mov
push
mov
or
stos
test
jp
push
push
mov
or
and
inc
or
cmc
subl
dec
lds
cmc
lret
cmp
sub
pusha
xchg
adc
mov
js
mov
push
inc
sahf
jae
ud2
inc
cltd
pop
jns
stos
arpl
cwtl
lods
mov
pop
inc
xor
mov
iret
inc
in
cli
sbb
mov
add
lods
stc
push
enter
cmp
stos
lods
mov
sub
fcompl
lea
shrl
ret
lret
push
or
mov
pushl
hlt
cmp
hlt
cs
lods
xor
aaa
lea
in
jns
ds
sarb
adc
push
mov
push
xchg
jp
dec
adc
pop
or
jmp
or
add
sub
idivb
loop
cld
mov
cmp
rclb
bswap
mov
push
in
mov
pop
icebp
jne
jnp
jnp
mov
and
pop
into
sub
insb
sub
clc
rcl
daa
mov
mov
fsubl
cli
test
jno
jl
mov
mov
in
add
arpl
adcb
rcrl
minps
xchg
inc
dec
and
lods
fcomip
test
jp
push
sbb
dec
push
add
pop
xor
pop
pop
ret
or
test
adc
cwtl
push
jle
xchg
jb
add
cmp
jne
sarb
jbe
cmpsl
jge
lods
int3
jge
mov
out
mov
pop
or
and
shll
push
xchg
push
and
enter
int3
fstl
jb
mov
cmp
cs
inc
and
popa
hlt
stos
inc
xor
adc
out
cmpsb
repnz
mov
sbb
sti
mov
and
mov
sbb
lahf
mov
mov
mov
mov
insl
pop
lcall
insb
das
add
push
cli
cmc
jnp
aas
and
xchg
xchg
fsubr
cmp
mov
jo
mov
jae
and
adc
test
in
icebp
inc
xchg
int3
push
movsl
cmp
leave
aam
xchg
pusha
sbbb
mov
test
pop
mov
push
push
icebp
movsl
adc
mov
pop
sbb
jl
dec
push
nop
pop
cmp
lret
push
pop
mov
jne
stc
scas
popf
imul
dec
dec
add
mov
cli
xor
inc
fcmovbe
mov
mov
sti
add
mov
clc
jb
mov
xchg
cwtl
inc
cmpsl
pop
arpl
mov
bound
cmpsb
adc
cmp
pop
jg
push
dec
xor
test
clc
cs
sbb
xor
aas
mov
call
jmp
roll
fs
out
sub
push
dec
mov
lret
add
cmp
jb
rol
lret
add
js
push
jecxz
roll
stc
xlat
dec
pop
rolb
dec
ret
jns
movsb
cmpb
jbe
popf
sti
or
roll
add
leave
sub
mov
push
cmp
orb
adc
sbb
test
dec
cs
push
and
xchg
mov
notl
ror
jnp
push
ljmp
iret
mov
fists
cs
jnp
cltd
mov
shll
mov
out
sbb
dec
sub
jbe
and
mov
cmp
mov
dec
xor
add
and
xchg
mov
xchg
rorl
mov
sub
sahf
mov
shrl
jmp
xchg
dec
fdivrs
sub
jle
jno
sbb
pop
xchg
mov
push
fs
xchg
fwait
xchg
repz
add
push
ds
arpl
jle
dec
lds
arpl
dec
sbb
dec
push
test
jae
sbb
push
jbe
push
enter
fldl
cwtl
in
mov
pop
xchg
dec
fdivp
xchg
das
movsb
aam
jb
mov
mov
enter
arpl
lock
adc
int
popa
jl
cmp
xor
mov
inc
test
add
iret
inc
dec
pop
cmp
cmp
arpl
xchg
mov
pop
cmpsb
leave
cld
shlb
jecxz
pop
inc
mov
xor
int
jmp
fcoms
jl
insb
rcll
mov
sub
ds
pop
push
mov
inc
xor
gs
xchg
sbbl
iret
add
inc
mov
pop
jmp
ret
outsl
and
test
test
and
out
lea
sub
cs
mov
push
inc
adc
outsb
aad
fbstp
adc
mov
pop
push
std
jmp
fstpt
push
cmp
cmpsl
popa
or
mov
jbe
mov
dec
jle
ljmp
ret
inc
push
lods
mov
mov
cmpb
popf
add
packssdw
sbb
int
pop
movsl
push
ror
and
cmp
jbe
xchg
sub
cmp
push
pop
cwtl
or
fs
repnz
in
mov
sbb
sbb
dec
scas
shll
das
adc
push
cld
hlt
or
cmc
clc
sbb
cmp
push
into
in
aad
je
imulb
or
gs
repz
xlat
sub
cmp
outsl
or
or
add
jecxz
xor
pusha
cwtl
lahf
push
divl
int3
aas
jge
cli
aam
fstpl
iret
fldt
movsl
rorl
std
xchg
jp
ficomps
cwtl
xor
dec
mov
loope
sti
pop
je
notb
fs
jnp
pop
into
cmp
sub
xor
xchg
leave
jne
testb
mov
pop
repz
xchg
mov
push
int
fnstsw
pop
pop
loop
xchg
dec
cmp
xchg
pop
insb
movsb
leave
jge
xchg
lods
push
sub
test
dec
arpl
fs
jns
adc
jmp
lahf
nop
stos
sub
ret
daa
push
jg
jmp
xchg
add
sbb
adc
sbbl
arpl
jo
cmp
test
outsl
xchg
or
int3
sub
jbe
stos
pop
repnz
lods
pop
leave
hlt
push
xchg
test
ss
xor
mov
insb
inc
stos
std
iret
mov
fldl
jae
or
inc
cmp
adc
xchg
jb
and
test
imul
mov
or
add
adc
repz
sub
in
add
adc
nop
adc
fsubrs
push
bound
repz
jg
shlb
pop
pop
mov
jne
out
or
or
inc
mov
outsb
dec
adc
repz
inc
nop
test
js
add
sub
rcrl
mov
repz
mov
jno
cmpsl
push
out
xchg
mov
pushf
adc
and
mov
cs
or
shrl
dec
aaa
loopne
mov
mov
incl
push
les
imul
pop
negb
sbb
leave
jnp
pop
inc
hlt
loopne
mov
pop
xchg
dec
or
ficoml
mov
push
jg
and
ret
mov
jns
lret
push
repz
outsl
push
mov
test
sub
test
sti
out
mov
stc
fnstenv
jge
sub
pop
inc
cmp
test
lds
pop
lcall
inc
sub
jo
cmpsl
mov
js
in
sarb
jno
hlt
rcr
and
outsl
out
popa
inc
cli
mov
mov
daa
ficomps
clc
cmp
addr16
mov
and
sub
mov
leave
fcomi
dec
xor
adc
jmp
sbb
out
xor
aaa
mov
adc
and
leave
xor
push
movsb
jl
jge
push
jg
popa
pop
pop
or
sub
dec
xchg
push
fs
sub
imul
mov
ss
mul
loopne
rep
adc
lds
shr
pusha
icebp
shrb
jg
mov
mov
pop
adc
fisttpll
cmp
add
ds
aam
push
sub
ret
and
lea
adc
adc
scas
out
sub
popl
lds
xor
jp
pop
mov
inc
inc
outsl
push
pop
or
insl
bound
js
cmp
adc
int
sub
dec
mov
popa
push
loop
fstl
push
adc
out
jle
xchg
out
int3
pop
dec
mov
pop
or
lgs
push
addr16
sbb
push
add
xchg
push
pop
movsl
sbb
xor
xchg
xlat
aam
decb
pop
adc
ret
sub
mov
int3
es
hlt
iret
mov
push
dec
in
mov
ret
pop
lods
jnp
mov
jb
sti
lahf
xchg
nop
fnstcw
or
fistpll
pop
inc
js
push
movsl
lds
insb
push
xorb
jb
loop
popa
aam
push
rorl
adc
xchg
mov
inc
jae
adc
sub
test
sahf
loop
outsl
and
xchg
mov
das
mov
int3
icebp
movsl
xchg
mov
daa
pop
cmpsl
mov
out
mov
jmp
cmpsb
das
pop
mov
inc
icebp
push
sub
pushl
xor
sub
test
dec
test
imul
int
sti
xchg
mov
jno
xchg
lret
push
mov
mov
in
mov
test
dec
push
test
loopne
in
fsubrl
jl
push
lods
popf
pop
inc
in
sbb
add
or
addb
outsl
add
inc
sub
shlb
jae
aas
fsts
adc
adc
pop
lret
aaa
stc
xchg
rorl
cld
in
ret
cld
xchg
imul
jge
and
rolb
inc
loope
pusha
inc
or
fchs
test
mov
xchg
testb
adcb
in
mov
sub
out
inc
xchg
sub
cmc
pop
and
ret
xor
pop
inc
or
loop
sub
jmp
add
popa
es
punpckldq
inc
jnp
adc
push
sub
pop
mov
pop
imul
out
push
mov
and
fs
xchg
imul
and
xchg
test
xchg
pop
mov
stos
cld
sub
lret
dec
inc
cld
jno
push
mov
dec
jbe
mov
lods
sub
roll
mov
ss
add
mov
dec
mov
mov
cmp
lds
sub
scas
sub
push
xchg
push
jo
push
cmc
adc
ja
mov
sub
repnz
or
lcall
ja
adc
xchg
fs
xor
loope
in
cs
jg
aad
ds
int
mov
aad
mov
mov
pop
or
cmp
inc
sub
xlat
das
rorl
add
icebp
jbe
test
lock
xor
mov
and
roll
lds
int
mov
xchg
test
popf
ret
stc
jg
sbb
ljmp
mov
div
xor
mov
cmp
fcmovbe
sbb
push
jg
ljmp
aam
xor
xor
fstl
pop
jo
scas
inc
aas
fs
sub
cwtl
cmp
fcomp
hlt
and
pop
push
popf
leave
jg
mov
scas
test
xchg
push
xor
push
dec
mov
mov
aad
in
aad
inc
fadds
pop
lcall
imul
sub
fistl
xor
arpl
and
inc
ret
mov
pop
in
pop
stc
stos
ja
sahf
xchg
enter
test
ss
cmp
mov
mov
sub
mov
sbb
inc
jnp
shlb
negb
xchg
adc
les
push
das
xor
out
mov
mov
lret
cmp
push
jo
daa
cmp
push
xchg
cmp
sub
and
mov
push
pusha
addl
call
adc
int3
mov
jle
mulb
push
dec
cld
xchg
pop
pop
cmp
add
xor
addr16
in
cmp
mov
jle
out
xchg
es
out
fistpll
add
sbb
jmp
icebp
into
repnz
sub
xor
jae
nop
lock
fs
inc
bound
or
rcrb
popa
and
mov
adc
mov
inc
sbb
aaa
sbb
add
or
pop
adc
xchg
addb
popa
sub
and
outsl
dec
push
adc
sti
sbb
add
jbe
bound
mov
jnp
imul
xchg
sub
fdivs
rol
mov
mov
test
mov
xchg
fadds
dec
fsubs
and
pop
cmp
mov
push
cmc
sbb
cmp
fidivs
pop
pop
lcall
cmp
push
mov
sbb
pop
into
outsb
xchg
and
aad
clc
inc
xor
inc
out
repnz
in
fcom
ja
lea
and
ret
xchg
loopne
add
xor
mov
jmp
mov
cwtl
das
rolb
dec
js
push
subl
ds
pop
jl
mov
test
insb
xchg
add
dec
adc
mov
ret
ja
into
push
push
fsin
xchg
rorb
mov
ret
xchg
adc
je
push
jp
jno
outsb
scas
inc
jbe
mulb
xchg
popf
es
jle
aas
insb
adc
xor
inc
mov
insb
es
shrl
sbb
in
push
mov
inc
jnp
repz
stc
nop
sub
push
dec
addl
mov
int3
je
xchg
pop
inc
scas
mov
mov
into
push
lods
lods
mov
f2xm1
call
mov
mov
pop
adc
std
test
cmpsl
dec
mov
jne
jp
jge
pop
std
jmp
cltd
pop
and
scas
sub
sbb
pusha
pop
jmp
aad
pop
dec
cmp
jg
xchg
push
fwait
push
ficomps
jmp
jnp
scas
shrb
ret
sbbb
repnz
out
ljmp
add
xor
jg
pop
addr16
pushf
pop
leave
push
mov
lods
mov
pop
xor
gs
sarb
ja
inc
popa
xchg
and
cmpsb
in
and
cmp
xchg
or
and
jns
into
shl
pop
mov
and
scas
aam
mov
jnp
arpl
adc
gs
or
adc
adc
xchg
or
aam
push
xchg
clc
rorb
mov
sti
mov
stc
sbb
xchg
shlb
mov
push
test
inc
cmp
mov
or
test
movsb
jnp
sbb
xor
mov
mov
jp
outsl
in
sub
sbb
jecxz
call
shrb
adc
ret
daa
in
mov
test
cwtl
bound
std
icebp
out
cmp
xor
dec
pop
dec
fists
repz
xor
mov
dec
push
sub
xchg
leave
mov
adc
pop
dec
mov
loop
loope
mov
inc
cmp
pop
pop
push
inc
jp
pop
ss
xchg
inc
inc
jno
pushf
jmp
jnp
push
in
and
xor
mov
gs
inc
adc
addb
cs
inc
adc
aam
out
lahf
sbbb
sbb
les
rcl
sub
cmpsb
sub
push
movsb
pop
sub
ss
mov
cmp
loopne
cmp
and
push
sbb
pop
enter
add
inc
mov
cmp
mov
ljmp
data16
ret
lods
pop
addl
test
mov
popf
cld
xchg
jp
add
lcall
notb
shll
jns
dec
jmp
push
or
mov
or
inc
testb
push
cmpsb
loope
mov
scas
pusha
sbb
call
shll
mov
xor
push
lock
jno
adc
pop
imul
add
cmp
cltd
ret
jge
lahf
cld
iret
jg
pop
in
jns
and
lock
test
sti
cwtl
mov
int
fmuls
mov
jb
insb
icebp
movsl
and
fnstsw
add
jno
add
push
cmpsb
test
cs
sub
or
mov
or
sbb
testl
fisttpl
sbb
std
ds
lock
call
bnd
sbb
mov
fsts
js
jg
sbb
cwtl
add
ret
mov
lea
into
xchg
lret
add
in
lods
lock
je
or
push
dec
pop
rcrl
cmpsb
mov
lea
jg
ror
xorb
lea
ss
icebp
mov
ss
fimuls
testb
je
aam
xorb
mov
jns
test
out
pop
dec
setle
jge
pop
xchg
xor
fwait
cs
add
and
icebp
cmpsl
bound
out
movsb
fidivs
adcl
into
fs
dec
stos
enter
pop
cmpsb
fidivs
rcl
jno
stc
cmp
mov
lods
movsl
fmull
or
ss
rorb
fisttps
cmpsb
pop
lret
xor
dec
icebp
xchg
ljmp
sbb
sbb
push
sahf
pop
cmp
out
in
cwtl
in
dec
imul
subb
clc
mov
in
arpl
outsb
mov
xchg
lods
out
sbb
adc
inc
mov
aas
cmpsb
jg
pop
imul
fsubp
push
or
and
es
pop
fldenv
xchg
pushf
mov
jg
les
lea
shlb
or
and
pushw
add
lock
jge
cs
popf
cmp
or
sub
neg
mov
lret
ret
mov
scas
sti
pop
lods
push
sbbb
pop
adc
notb
test
jnp
mov
sbb
loop
std
push
jnp
mov
fstps
jecxz
pop
fnstsw
movsb
push
push
push
adc
movsb
fwait
inc
push
push
cmpsb
sbb
pop
sub
nop
outsb
aaa
mov
jle
xor
mov
push
ret
cld
push
imul
xchg
cmp
xchg
or
inc
mov
pop
leave
fisubs
fsubrs
sbb
lcall
idiv
xchg
jb
adc
push
or
ret
mov
fsubr
mov
mov
adc
subl
das
sarb
adc
push
mov
pop
sub
pop
lret
xor
dec
dec
add
inc
jae
adc
pusha
test
and
xor
js
clc
lea
cmp
push
or
out
fwait
imul
pop
mov
fsubrs
mov
call
jp
pop
mov
mov
push
inc
pushw
cld
push
test
ljmp
jno
adcb
fadds
mov
cmp
sub
aam
sahf
rcll
add
adc
subl
or
sbb
loop
jl
popa
out
sbb
mov
fisttpll
lds
std
imul
insl
cwtl
lahf
pop
mov
sbb
cmp
xor
adc
and
jae
jne
push
mov
or
aas
repz
movsl
lods
sbb
shll
and
adc
gs
movb
pop
pop
mov
push
xchg
mov
arpl
xor
xchg
cmpsl
nop
imul
sarb
into
jecxz
sub
inc
and
rorb
pushf
sub
xchg
data16
shrl
fwait
or
xchg
and
and
pop
xor
jecxz
fcompl
int3
push
push
es
dec
mov
mov
fsubr
adc
lsl
cmp
add
mull
mov
aaa
lock
mov
popa
imul
pop
mov
jmp
cmp
into
and
cmp
jle
pop
adc
jecxz
shl
jmp
jb
into
test
cmpsb
and
fstl
fwait
pop
outsb
cs
fcmovnb
in
and
fidivrl
mov
sub
cmp
inc
filds
cs
imulb
mov
add
adc
sbb
adc
fisttps
push
fisubl
fimuls
adc
jg
daa
out
addr16
dec
push
call
lock
rclb
in
mov
mov
repnz
mov
mov
cs
pop
insl
call
int
mov
fisttps
xor
add
mov
lahf
mov
jge
mov
sbb
and
clc
test
add
div
int3
and
clc
fsubrs
push
lcall
and
xlat
jbe
and
pop
and
ss
jl
mov
test
cmpsb
xor
call
rorl
add
out
xorl
je
test
pop
push
mov
inc
dec
pop
sbb
pop
jle
xlat
jmp
mov
fiaddl
int3
mov
adc
dec
push
mov
xchg
pop
lods
sarb
add
test
xchg
jle
mov
xor
pop
xlat
popf
jae
pop
xchg
or
test
sarb
sbb
jno
sbb
aam
add
subl
inc
xchg
sarb
sbb
imull
mov
fbstp
rcr
xor
cld
sub
push
scas
ror
and
dec
xchg
loope
insb
cli
push
sbb
adc
jnp
mov
bound
in
imul
dec
mov
or
xchg
mov
leave
dec
push
mov
inc
jbe
pushf
hlt
pushf
xchg
push
adc
jle
fcoms
test
inc
cltd
mov
sahf
das
jmp
mov
scas
orl
pop
imul
jns
push
xor
rorb
xor
xor
mov
sub
inc
xor
fsubrl
push
mov
pop
sub
push
pop
es
xor
or
int
ljmp
cwtl
aam
cmc
sbb
cmp
pushf
nop
xor
xor
repnz
loopne
cwtl
push
loop
test
lea
addl
push
outsl
mov
mov
shl
imul
fwait
jb
nop
push
in
jne
mov
lret
adc
pop
es
jo
or
xor
jg
daa
fildll
push
seta
out
add
or
adc
rclb
pop
adc
xlat
mov
jl
sti
lods
push
fiaddl
lret
gs
test
je
repnz
mov
push
arpl
push
add
adc
int
gs
in
inc
loop
sub
fimull
mov
mov
add
jg
popf
imul
sub
dec
xchg
sbb
mov
xchg
pop
sub
pop
push
and
and
idivb
xor
test
stos
idiv
xchg
aam
std
pop
and
cmpb
pop
fidivrl
dec
lcall
mov
inc
js
add
cs
mov
rorl
test
jbe
adc
aaa
sbb
jns
insb
repz
ret
mov
das
xchg
push
pushf
jle
test
pmaxub
loope
sbb
stos
fnsave
jmp
out
adc
inc
scas
push
sbb
sti
pop
movsb
lret
push
insl
push
push
mov
repnz
insl
cmp
pop
pop
mov
cs
daa
push
and
or
jno
push
or
or
pop
inc
mov
mov
push
lret
xor
cwtl
push
popa
shrb
test
movmskps
andb
mov
inc
in
and
sarl
pushf
in
jbe
imul
mov
std
sub
xor
and
xlat
jae
movsl
sbb
jmp
aad
mov
lea
xchg
lods
xor
repnz
push
xchg
xchg
out
cmp
je
clc
jg
fidivs
inc
fwait
push
gs
paddb
inc
ret
jecxz
mov
lcall
mov
aam
enter
and
out
lcall
inc
ds
mov
lea
push
lock
dec
inc
inc
fisttps
out
push
push
pop
leave
pop
cmp
les
cmp
jmp
shll
divl
push
jmp
pop
add
lret
push
aas
repz
mov
mov
cmpsb
adc
loope
jecxz
sub
push
jne
pop
daa
add
cld
sub
clc
mov
push
mov
stos
jne
mov
add
sub
pop
xchg
lcall
les
pop
pusha
inc
fdivl
add
mov
dec
mov
and
xor
loop
es
sub
fwait
jns
aas
sbb
stc
ds
jae
call
xchg
int
call
jl
stc
xorb
inc
xor
in
movsb
inc
iret
xchg
repnz
inc
pusha
add
clc
in
or
sbb
add
adc
or
mov
mov
and
jbe
cmp
scas
enter
push
pusha
jo
ret
mov
sbb
jns
and
pop
xchg
daa
push
lcall
xor
ss
inc
xchg
loopne
dec
mov
and
fcoml
pop
mov
das
and
out
and
jmp
loop
jbe
ret
sub
leave
add
adc
inc
pop
lock
ss
je
pop
inc
rcrl
divl
xchg
add
and
ja
test
or
jp
and
adc
in
or
pop
hlt
lods
sub
das
pop
jp
inc
pop
fldl
out
cmp
in
push
repnz
jle
dec
cmpb
add
mov
iret
pop
jmp
sbb
lret
pop
inc
lret
pop
ja
jae
loop
jle
dec
fldl
xor
jl
orl
fsubs
jae
dec
gs
imul
lret
fdivrs
mov
jo
fsubrl
pushf
bound
sti
in
movsb
sti
mov
repz
xor
lret
pop
movl
test
int3
je
rcll
dec
ret
cli
test
pop
jg
cmp
mov
mov
cmp
les
jbe
in
ss
xchg
mov
cmp
and
in
test
cmpsb
mov
jo
mov
push
adc
cmp
inc
sub
je
or
dec
fadds
jne
js
test
imul
lea
sub
or
xchg
adc
fnstenv
das
sub
loope
mov
mov
xchg
cmp
insl
sbb
inc
xor
mov
xor
xchg
mov
mov
mov
add
lret
addr16
pop
dec
rcll
leave
or
xchg
std
aaa
dec
mov
pop
mov
jbe
cmp
shl
mov
jecxz
sbb
adc
fbld
cmp
les
fdiv
loope
cltd
xchg
adc
dec
clc
in
scas
stos
aad
pop
mov
cmp
popa
xchg
ss
xchg
jns
sbb
es
mov
mov
icebp
pop
imul
sti
cli
dec
imul
add
push
xchg
cs
cmp
and
xchg
mov
inc
sbb
outsb
cmp
les
mov
ja
jge
andb
loopne
push
in
xchg
psadbw
in
lcall
mov
add
mov
push
add
lret
sub
jno
notb
cmp
lcall
jnp
shl
push
xor
pop
adc
pop
pushl
sbb
cmova
dec
call
inc
shl
add
or
mov
add
mov
jbe
jmp
add
es
push
ret
cmp
mov
loope
lcall
shr
adc
in
adc
pop
mov
orb
mov
ret
push
lret
lods
sub
repnz
jne
cmp
fwait
ja
out
flds
data16
pop
cmpsl
roll
lods
inc
jbe
test
cltd
fcmovnbe
ss
in
clc
sub
xchg
iret
inc
mov
shrb
pop
mov
negb
clc
or
inc
lods
jecxz
imul
inc
ljmp
mov
pop
cmp
scas
sub
bound
and
mov
ds
mov
xor
addb
nop
cld
in
ds
leave
loopne
fsubr
cmp
shr
adc
repz
inc
out
lock
sub
repnz
dec
enter
insb
add
stos
cmpsb
das
dec
je
dec
aas
mov
and
repz
cmp
enter
mov
jb
xchg
in
pop
add
add
fs
cmp
pop
xor
adc
inc
and
jge
les
aad
into
and
int3
mov
inc
sub
repnz
add
insl
jns
push
add
aam
push
call
xor
in
add
push
pop
and
loop
popf
add
fdivrs
pop
adc
cwtl
push
push
lret
das
arpl
outsl
test
adc
xor
jp
enter
or
data16
enter
mov
insl
xlat
jecxz
or
pop
lds
and
cs
sub
inc
in
fildl
popf
xor
jnp
push
sbb
jne
fmuls
icebp
shr
pop
adc
and
in
into
sbb
scas
jmp
mov
and
std
inc
cmp
xor
ss
jae,pn
cmpsb
jne
mov
ja
add
jo
or
pop
mov
add
test
into
sbb
cmp
mov
xchg
mov
dec
test
nop
cmc
dec
out
les
adc
sahf
fisttpl
lds
push
rclb
cmc
jl
mov
test
mov
cmpb
in
repnz
push
push
mov
pop
fdivs
xor
pop
imul
dec
setp
aaa
mov
sub
js
outsl
fistl
mov
fdiv
insl
jno
movsl
hlt
sub
arpl
jg
aas
ds
lea
mov
jl
iret
jae
mov
mov
sbbl
cltd
cmp
push
sbb
inc
add
and
push
xchg
and
or
shrl
rcr
mov
push
xchg
adc
inc
push
popa
icebp
inc
or
jb
sub
push
jecxz
clc
gs
out
mov
fbld
ss
adc
sarl
pop
cmp
popf
cltd
scas
dec
push
dec
call
les
mov
xchg
jns
cld
aam
push
mov
gs
mov
call
ljmp
xor
cmp
and
mov
push
mov
das
rol
ror
mov
xlat
shrl
xor
jmp
sti
inc
or
sub
ficoml
in
shll
xor
mov
mov
push
mov
mov
dec
xlat
shlb
data16
cmp
dec
imul
xor
bound
bound
and
push
mov
jns
push
pop
inc
pop
xchg
shrb
jge
test
or
shlb
mov
fwait
mov
je
les
mov
jne
scas
or
fldl
lds
pop
arpl
jp
std
jns
mov
add
stos
test
fadd
jmp
call
outsl
sub
mov
pop
gs
push
movsl
push
stc
int3
daa
movsl
sub
adc
push
hlt
aaa
inc
shll
mov
roll
insb
mov
mov
and
jns
dec
adc
sub
mov
and
in
cs
pop
jne
adcb
sti
rcl
ljmp
fstl
shll
fdivl
push
les
insb
push
outsl
repz
and
pop
ss
out
xlat
sbb
rclb
xchg
pop
dec
fs
adc
std
test
add
xor
xchg
adc
add
dec
pop
sbb
leave
data16
cltd
cmpsl
add
inc
lret
add
mov
loopne
add
mov
pop
adc
jmp
stc
inc
leave
daa
adc
mov
into
pushf
xor
fstpt
sub
insb
push
sbb
movsb
aaa
daa
call
fxch
jmp
adc
mov
out
mov
and
test
dec
or
xor
jl
push
fs
out
fwait
jno
pop
sub
nop
pop
or
in
push
shrl
bound
or
xor
pop
hlt
sub
xor
setno
pop
ret
push
pop
je
ds
popf
push
cmp
dec
out
jae
clc
adc
rcrb
inc
popa
mov
in
aam
cs
push
sub
cmpsl
out
lret
xchg
inc
push
sbb
cs
push
stc
dec
dec
data16
xor
inc
dec
lret
push
sub
inc
fldl
push
jl
cwtl
aad
jmp
mov
pushl
mov
add
jne
out
arpl
lds
test
lods
adc
fcos
nop
jmp
sbb
imul
in
int3
arpl
idiv
jae
lock
mov
testl
jne
mov
ja
inc
pop
es
adc
mov
lods
inc
sub
fisttps
push
test
sbb
pop
popf
cmp
mov
cvtps2pd
adc
aad
ljmp
aam
jp
and
fcomps
dec
mov
xor
fstps
subb
pop
cmp
insl
bnd
mov
pop
mov
gs
inc
lods
xorb
aad
mov
daa
cmp
dec
mov
cmp
mov
xchg
cwtl
adc
sbb
xchg
jmp
pop
popf
inc
mov
add
xor
ffree
adc
jb
xor
lea
jb
nop
mov
cmp
test
mov
xchg
mov
dec
and
mov
xchg
cltd
dec
or
stos
ljmp
call
adc
or
ljmp
sub
mov
loop
sub
add
mov
fs
xlat
or
repz
dec
mov
in
cmp
scas
ss
lcall
sbb
jmp
out
in
sbb
jp
xlat
ds
mov
lret
cmp
pushf
cmp
xchg
pop
pop
push
outsl
sbb
frstor
push
mov
dec
ret
ret
addr16
leave
addr16
shl
inc
outsl
in
jae
push
test
movsb
or
roll
xchg
pop
jne
stos
sub
lock
sub
daa
xchg
xchg
xor
mov
pop
inc
cmpsb
inc
push
into
xchg
js
stc
push
mov
popa
pop
mov
out
mov
sbb
mov
stos
fwait
dec
sbb
push
bound
stos
insl
push
mov
xchg
lea
dec
fisubs
mov
xchg
or
push
cmpsb
insb
cmc
or
jae
inc
movsb
sub
je
dec
jle
push
xchg
notb
loope
add
ja
xchg
push
shll
loope
mov
push
repz
jno
orl
lods
fdivr
mov
fcmove
loopne
sub
lods
je
lcall
inc
xchg
rol
xchg
dec
outsl
jge
sub
mov
out
or
les
and
lahf
out
and
js
mov
push
lret
dec
dec
adc
inc
lahf
pushf
dec
mov
dec
js
adc
mov
and
xchg
push
loop
subl
mov
dec
mov
fbld
or
scas
enter
jmp
cmp
mov
insl
ret
inc
and
inc
bound
out
clc
pushf
adc
xor
xlat
mov
imul
ret
xor
std
push
and
in
mov
nop
xchg
dec
int3
pop
fptan
push
into
adc
lea
jecxz
fcoms
mov
leave
mov
arpl
jo
sub
testl
popa
insb
adc
arpl
sbbb
imul
jne
add
cmp
mov
add
out
mov
adc
shrd
mov
pop
sub
fsts
out
pop
adc
imul
add
fdivp
mov
xor
pushf
adc
dec
add
cmpsl
aam
ror
mov
push
or
out
sub
addl
jmp
sahf
mov
sub
and
stos
or
dec
inc
in
data16
or
mov
xor
and
sbb
cmpl
mov
fdivrs
scas
xchg
ret
add
fcompl
add
pushf
dec
xor
jge
mov
into
mov
rclb
inc
and
call
popf
pop
jl
sbb
sbb
pop
and
out
pop
xchg
test
jl
fs
std
or
adc
inc
es
in
dec
and
rep
push
sahf
test
add
inc
push
sti
iret
xor
cmpsl
cmpsl
inc
repz
ror
inc
dec
jno
cmc
cmp
mov
push
xor
and
pop
fldl
loop
add
fldt
out
les
lret
cmc
sub
mov
filds
dec
pop
mov
aam
xor
cmc
add
adc
aam
shll
or
mov
xchg
push
or
cli
mov
into
es
imul
fstl
insb
cmp
xor
cmp
jb
pop
loop
xchg
push
xchg
jge
insl
addr16
fiadds
loope
repz
cmpsl
dec
fimuls
sub
lds
adc
xor
mov
xorl
negb
mov
push
hlt
mov
cs
inc
enter
lahf
pushf
stos
dec
movsl
push
in
inc
mov
movsl
add
mov
xchg
repz
lahf
ds
or
pop
outsl
fisubs
cs
mov
mov
insb
push
movsb
jecxz
pusha
addr16
pop
jo
fildl
ds
push
js
xchg
xor
sub
and
pop
mov
call
ret
fwait
pushf
aas
and
mov
addb
or
arpl
mov
rclb
pop
jmp
xrelease
xor
ds
out
mov
mov
in
xorl
push
repnz
xchg
scas
jb
int3
mov
mov
testb
jae
pop
cwtl
push
jp
mov
xlat
cmp
pop
in
or
xlat
mov
fucomi
jecxz
jne
pop
addr16
in
in
pop
adc
sbb
pop
je
pop
es
test
adc
jo
shrl
xchg
addr16
imul
sub
pop
sub
jnp
or
mov
push
arpl
ret
mov
cld
pop
loopne
push
into
inc
inc
inc
stos
push
in
mov
xchg
push
xor
dec
push
mov
aaa
repnz
int3
and
ffree
ja
gs
and
xor
sub
call
data16
push
inc
jne
rcrb
and
jo
or
or
out
cmc
mov
push
addl
mov
sti
inc
xor
rcll
movsl
pop
rol
test
and
push
js
lret
mov
inc
pop
aam
cs
out
sahf
pop
xchg
dec
mov
jo
cmp
je
and
scas
mov
sub
mov
cmp
add
jl
add
clc
popf
pop
pusha
lods
out
js
rorb
pop
sarb
sbb
cmc
mov
xlat
cmp
stos
pop
pusha
rcr
dec
dec
adc
fidivl
out
xchg
xchg
push
je
in
adc
mov
aam
arpl
mov
mov
sbb
and
mov
std
imul
inc
enter
inc
cld
push
hlt
mov
lods
jge
pop
sub
pop
in
aad
xor
dec
sub
into
incl
shlb
jb
dec
adc
ficompl
mov
scas
jnp
sub
loopne
cli
sbb
jne
xchg
xor
inc
sbb
lods
ret
cwtl
push
sub
incl
out
jnp
and
pop
mov
hlt
push
jle
or
aas
stc
out
or
in
nop
les
aam
add
add
out
mov
or
fisubrs
jae
mov
int3
xchg
inc
add
sbb
inc
pusha
dec
and
inc
lret
jne
cmc
mov
jg
inc
jecxz
push
outsb
fcmovnu
lea
cwtl
adc
les
ljmp
sub
scas
dec
xchg
icebp
xchg
nop
fisubrl
or
sub
stc
fidivrs
xchg
mov
mov
out
cld
add
xchg
xor
jns
stos
pop
rcrb
lea
es
push
sub
paddd
int3
adc
xor
sbb
mov
sbb
pop
shrl
pop
sahf
fstps
cwtl
adc
add
lock
sar
pop
std
xchg
add
in
sub
test
lcall
add
out
inc
mov
jl
push
call
cmpsb
push
xchg
lret
add
test
lret
in
sahf
lea
push
cld
pop
lcall
xchg
mov
adc
jp
xorb
dec
mov
mov
fwait
jo
adc
arpl
jg
iret
das
dec
mov
inc
dec
pop
fsub
jno
sahf
scas
inc
adc
mov
jp
push
ret
fistps
movsb
pop
outsb
sti
fmul
je
cmp
aas
xor
ss
mov
std
xchg
scas
push
jbe
arpl
push
or
xchg
inc
in
xchg
fdivs
cltd
mov
rol
xchg
jae
pushf
cmpsb
adc
cmc
insb
arpl
xchg
mov
rol
movsl
stos
xchg
push
int3
stos
adc
lods
push
adc
push
sbb
push
cs
repnz
or
leave
leave
xchg
jnp
dec
xchg
test
mov
clc
insb
out
insb
fcmovu
lahf
or
faddl
push
and
pop
rcrl
cld
add
xchg
mov
or
sbb
xor
leave
jnp
dec
push
shlb
nop
and
std
outsb
xchg
std
jae
and
mov
inc
lcall
rorb
lahf
mov
loop
push
push
test
scas
insl
jnp
repz
lods
aas
sbb
inc
pop
jo
pusha
in
push
leave
fcmove
push
rcll
jle
inc
fdivp
adc
aaa
into
sub
sub
mov
ds
ret
notl
les
mov
mov
mov
xchg
push
out
stos
add
scas
out
lods
mov
mov
sbb
leave
mov
jge
jne
xchg
out
dec
mov
jo
aaa
inc
out
mov
unpckhps
add
mov
paddsb
sbb
mov
pop
xor
add
lret
test
clc
mov
adc
sbb
jno
rcl
push
repnz
sbb
xlat
imul
pop
push
cmp
push
inc
add
int
movsl
cmp
push
and
out
outsl
inc
test
adc
pop
lock
mov
popf
pusha
jae
push
or
cli
dec
lahf
cmp
jbe
push
jge
iret
bound
repz
xlat
xlat
leave
dec
mov
movl
cs
xchg
pop
inc
roll
leave
mov
inc
sbb
ljmp
xchg
pop
dec
in
ss
in
add
inc
fstp
cmp
mov
inc
scas
push
and
jecxz
or
mov
movb
incl
in
jo
inc
in
lods
xor
in
sub
and
push
enter
stos
and
jl
mov
mov
stos
mov
inc
xor
dec
sub
loop
dec
inc
movsl
xchg
mov
mov
sbb
movsb
push
movsl
jbe
outsl
mov
test
rol
mov
das
and
and
inc
les
mov
movsb
mov
jno
xchg
pop
sbb
pop
cmpsb
test
jb
fidivrs
ljmp
pop
push
gs
hlt
lods
dec
cli
mov
xchg
add
test
arpl
in
lahf
rcrl
arpl
rcrb
push
mov
adc
scas
into
std
xchg
xor
sub
inc
jbe
push
xchg
mov
in
testb
adc
aad
das
int
xor
lods
and
test
fucompp
sbb
jg
adc
ja
adc
ljmp
insb
lcall
sub
sub
pop
push
aas
cmc
mov
pop
jb
into
js
test
daa
in
sbb
leave
sbb
repnz
ret
xor
pop
mov
pop
xchg
je
addr16
repnz
fsubr
inc
testl
jle
push
push
ljmp
xchg
dec
jae
test
ljmp
cmp
cld
xchg
adc
xor
mov
inc
push
fs
xchg
and
mov
ret
lret
dec
sbb
dec
mov
jae
cltd
inc
lds
je
dec
sub
add
hlt
in
inc
pop
dec
dec
fdivl
push
js
in
mov
mov
dec
sub
ss
cs
pop
nop
imul
inc
mov
jns
pushf
fsubrl
cmpsl
incb
call
pop
or
sub
das
mov
dec
cmp
cltd
jns
sub
inc
insb
mov
fldcw
pop
scas
or
dec
and
cwtl
jmp
mov
mov
mov
cmp
sub
subps
sbb
push
pop
cld
cmp
mov
or
inc
clc
sub
mov
out
sub
xchg
inc
cmp
push
jge
vcvtsd2si
in
xchg
pop
in
cmp
loopne
push
or
xor
push
push
cltd
repnz
cmp
cmp
mov
sbbb
outsb
fdivr
cmp
rorl
dec
xlat
cld
sbb
sub
fcoms
jne
add
jo
sub
cmc
xchg
clc
fdivrl
dec
sub
mov
mov
pushf
pop
xchg
idivb
push
into
gs
xchg
xchg
inc
clc
fwait
movsl
enter
and
dec
fsubr
aas
pusha
adc
rcrl
push
pop
pop
sub
ds
ljmp
adc
es
push
xor
cmp
mov
dec
and
cmp
loope
and
mov
rorl
cli
fwait
cmp
lcall
jmp
mov
and
mov
sub
xor
packsswb
xchg
cmp
and
fistl
xchg
pusha
lcall
decb
jne
arpl
and
std
inc
cmp
or
jecxz
aaa
xchg
sbb
push
cld
jmp
dec
or
into
inc
push
fldcw
cmp
mov
mov
out
nop
cmp
inc
inc
jg
jl
push
mull
icebp
sbb
xor
pop
pop
and
xchg
fs
adcl
or
in
ucomiss
inc
clc
xchg
sbb
jb
daa
inc
or
fadd
mov
insl
mov
jne
imul
mov
in
pop
sahf
fiaddl
out
xacquire
imull
sub
dec
mov
outsb
or
insl
push
mul
xchg
dec
lock
add
and
mov
pop
mov
testl
les
out
popa
aad
inc
and
xchg
fimull
mov
ljmp
jmp
cld
or
xchg
lcall
aad
sub
sub
imul
xor
mov
ljmp
pushf
lcall
pop
out
jmp
in
jmp
pushf
imul
in
push
out
scas
arpl
sub
outsl
or
clc
add
dec
sahf
call
mov
add
test
lahf
pop
movsl
cli
or
in
adc
rcr
xchg
sbb
outsb
fdivp
decl
push
adc
dec
clc
and
and
loope
sub
rcll
lret
jae
mov
rolb
inc
adc
sqrtsd
clc
mov
out
imul
jg
mov
or
and
pop
jne
dec
cmpsb
jbe
in
mov
stos
ret
pop
cmp
push
pop
je
fildll
sbb
mov
inc
xchg
and
outsl
push
mov
cltd
mov
dec
mov
fistpll
loope
jle
test
xchg
push
mov
inc
ljmp
sbbb
icebp
dec
jp
cld
in
add
aaa
lock
inc
pop
gs
orb
in
sbb
sub
mov
ss
inc
jl
push
insl
add
in
dec
or
out
lds
mov
add
insb
mov
push
insb
pushf
push
mov
adc
push
scas
adc
jae
xchg
inc
inc
xor
addb
jp
xorl
xor
mov
jae
xor
push
push
cmp
inc
xchg
sbb
aad
test
rcrb
out
mov
sub
sbb
cwtl
stos
aaa
adc
xor
hlt
orl
cmp
xor
inc
clc
incl
mov
std
sti
fadd
ljmp
cmpsl
jns
xchg
mov
imul
or
push
jno
loop
and
xor
jbe
pop
insb
pop
or
sbb
mov
lds
ret
jecxz
mulb
adc
mov
pop
mov
mov
dec
fucomp
or
xor
mov
int
cmp
loope
pop
xor
les
fdivrp
mov
ljmp
fidivrs
gs
ret
jl
sbb
sbb
bound
mov
sub
mov
and
rorl
clc
xchg
or
push
add
pop
fmul
mov
fsts
loop
fcompl
sbb
lea
rcrb
adc
mov
sar
ret
jbe
or
push
test
ret
shlb
mov
or
xchg
jg
sub
adc
mov
stc
mov
arpl
pop
inc
xchg
cmpsb
and
push
mov
inc
adc
sbbl
add
inc
jg
fwait
sub
in
adc
ret
frstor
pop
lds
ljmp
jae
lea
clc
in
sbb
lea
xor
andb
lret
cmp
std
idivl
jl
cmp
jp
in
sbb
aaa
adc
loope
lcall
adc
orl
insl
cmp
mov
inc
jg
fcoms
addr16
pop
jmp
xchg
insl
cli
jecxz
sbb
pop
cmpsb
shll
cwtl
push
pop
sbb
addr16
sti
adc
pop
inc
int3
cli
scas
mov
xor
lahf
jb
mov
insl
sbb
in
outsl
scas
xlat
je
call
cld
je
push
pop
std
hlt
outsl
xlat
daa
cmp
outsl
lret
add
inc
adc
data16
jle
test
cmp
jo
ja
dec
in
pop
sub
xor
mov
js
in
fcmove
sti
push
jb
jbe
test
mov
add
test
and
adc
dec
jmp
push
cmovno
and
or
rclb
ret
jo
insb
xor
loop
mov
loopne
aas
add
adc
lret
push
out
scas
jle
mov
inc
ds
mov
adc
test
and
call
lea
adc
fisubl
sub
adc
scas
pushf
insl
out
outsb
push
adcb
aas
pop
push
dec
mov
xchg
xchg
and
cmpsl
out
cmpsb
inc
jae
mov
roll
sti
icebp
es
and
xchg
faddl
xchg
jbe
iret
js
pop
mov
mov
shlb
mov
or
push
xchg
mov
or
mov
xor
addb
pop
pop
ficompl
jp
pop
mov
or
pop
rorl
cmc
fdivp
cld
dec
mov
pop
mov
inc
adc
movsl
jno
lds
jmp
jbe
cmp
loopne
movsl
jl
shlb
adc
add
rcrb
lea
or
adc
push
popf
imul
je
cmpsl
arpl
push
jae
clc
je
addr16
xchg
stos
ja
test
or
sub
pop
stos
lods
mov
cltd
sbb
add
fisubrl
sub
push
dec
and
cltd
insb
mov
insl
ja
dec
pop
fdivrl
imul
ja
stos
lret
push
frstor
int3
jbe
inc
pop
bswap
pop
add
xor
test
xchg
jge
movsl
add
push
inc
mov
fsts
ret
mov
stc
test
jle
out
sbb
adc
loop
repz
dec
dec
insb
arpl
push
int3
loopne
xorb
fisttps
jne,pt
dec
stos
pop
xchg
mov
pop
mov
daa
in
adc
mov
lahf
aad
leave
addr16
sub
mov
dec
push
cmc
cmpsl
addr16
inc
test
push
jle
cmpsb
imul
xchg
jo
into
push
stos
out
lcall
filds
daa
inc
shl
lods
xchg
inc
fwait
subl
cmp
cmpsl
cltd
cmc
fdivs
inc
movsb
and
xor
or
inc
xchg
xchg
sahf
and
sbb
pop
roll
and
sub
pop
clc
popa
pop
sbb
aad
xchg
hlt
aam
xchg
aam
jl
sti
add
fldcw
push
and
fists
rclb
imul
shl
inc
das
ret
pop
xor
mov
xchg
push
fs
stos
fstpl
lods
gs
stos
dec
sub
fstpl
sbb
jae
test
arpl
mov
cmp
mov
cmp
das
sbbb
roll
or
dec
mov
clc
stos
addl
scas
mov
sub
divl
lds
or
jo
or
leave
jbe
or
xor
mov
cltd
lret
jp
pop
jmp
daa
sub
sbb
inc
xlat
pop
test
xor
add
xchg
jb
in
jnp
mov
adc
mov
mov
jmp
mov
je
mov
push
xor
icebp
aas
sbbl
scas
fisttpll
ss
dec
and
leave
cmc
scas
xchg
out
xor
mov
mov
push
lods
bound
add
pop
adc
sbb
rcrb
movsb
adc
cs
or
pop
lock
inc
mov
nop
add
insl
or
out
mov
stos
ljmp
xchg
mov
test
mov
and
xor
add
and
hlt
cmc
xor
adcl
dec
movsl
jmp
jb
mov
add
mov
call
xchg
into
mov
jge
and
push
mov
mov
fldenv
jg
sarb
cmp
and
xor
ja
mov
out
orb
sbb
arpl
je
adc
sub
sbb
in
les
adc
or
xchg
lods
mov
mov
stos
pop
add
dec
aas
jmp
outsb
cwtl
in
mov
and
mov
sbb
in
nop
fldt
adc
cmpsb
xchg
sub
jg
iret
or
adc
bound
ds
fldl
enter
or
sti
or
pop
mov
outsb
mov
mov
cmpsb
lret
dec
mov
cmp
jo
inc
fucomp
shrb
jno
int
lds
in
or
addb
xor
jecxz
pop
xchg
test
ds
or
dec
es
dec
mov
in
mov
adc
mov
inc
pop
dec
fcomip
in
cmp
mov
shlb
jp,pn
lds
loopne
xchg
push
imul
in
mov
fidivrs
xchg
jne
arpl
imull
sti
mov
push
pop
or
fs
scas
fsts
sub
cld
cli
call
jb
mov
inc
outsb
movsl
push
push
push
and
add
xchg
mov
out
jmp
mov
shll
ret
imul
loop
js
push
mov
pop
test
addr16
push
out
mov
sbb
inc
js
push
xor
into
adc
sub
adc
cmp
or
mov
aam
inc
ret
mov
test
stos
add
fists
jns
cmp
xor
or
pop
cmpsb
ss
pop
mov
cmc
sti
outsb
das
out
dec
movb
xchg
cmp
pop
sbb
add
mov
sub
loopne
fimull
shrb
adc
or
xchg
and
pop
and
test
jo
repnz
sub
dec
inc
mov
xlat
andl
cmc
out
mov
dec
xor
adc
mov
movsl
orb
push
andb
scas
movsb
mov
mov
cld
cmpsb
sub
xchg
pop
mov
jmp
mov
push
adc
ror
pop
test
mov
push
lods
and
xchg
mov
mov
in
loope
xchg
jns
pop
adcl
icebp
push
loop
jo
xor
push
xchg
cltd
addb
dec
ds
push
cmp
jo
pop
pop
push
pop
rcrb
aas
and
scas
icebp
adcb
mov
fwait
inc
dec
pusha
push
mov
popf
in
xchg
xchg
xor
add
mov
adc
fnsave
mov
cmpsl
cmpsb
dec
inc
sub
loope
jb
movsb
push
mov
mov
push
mov
pmaxsw
bnd
xor
push
cmp
mov
mov
leave
mov
mov
xor
scas
stc
dec
mov
push
mov
aaa
mov
jnp
andl
and
int3
jmp
jno
xchg
adc
call
pop
mov
push
xor
cwtl
pop
mov
push
xchg
pop
push
insl
and
inc
fnsave
loop
xchg
out
fstps
imull
inc
addr16
mov
push
ljmp
and
mov
loop
xchg
jmp
scas
adc
xchg
sub
outsl
out
push
mov
mov
in
mov
adc
xchg
negb
mov
push
sti
jbe
mov
inc
in
sbb
iret
adc
mov
sbb
mov
adc
push
pop
pop
dec
inc
cmc
stos
scas
mov
sete
jl
stos
mov
dec
xor
xor
pop
adcb
sbb
stos
stc
add
idiv
xor
pop
xor
stos
fsubrs
push
and
and
mov
shll
fsubs
adcl
mov
shll
cs
test
mov
mov
scas
pop
test
popf
loop
lahf
arpl
data16
xchg
cmc
xlat
xor
xchg
dec
es
scas
adc
std
data16
pop
mov
aaa
dec
fwait
push
pop
push
lret
mov
cltd
mov
or
pop
fidivrl
jno
dec
mov
icebp
mov
jns
out
push
adc
lock
icebp
stc
or
mov
mov
sti
out
shl
pusha
fildl
and
and
sahf
cld
daa
dec
or
mov
cltd
cmp
mov
mov
dec
sahf
test
roll
decb
push
cmp
cmp
inc
or
and
mov
enter
and
ret
or
push
pop
imul
xor
sub
int
sarb
jns
cmp
pop
mov
cmp
push
xor
pop
dec
push
fiaddl
mov
out
cs
mov
xor
lea
and
pop
mov
push
cmc
cmp
sbb
add
mov
pop
aad
js
and
and
loope
mov
popw
mov
out
jo
test
push
cs
into
icebp
push
lods
jl
orl
in
ret
das
xor
dec
out
jmp
or
jbe
lret
popa
movsb
push
or
jge,pt
or
cmp
jmp
mov
icebp
arpl
out
int
fildl
fsqrt
icebp
add
pop
arpl
clc
pop
sbb
push
mov
rol
fwait
rorl
es
lret
or
cld
rcrb
and
cltd
xor
hlt
pop
je
sbb
test
pop
inc
mov
in
add
shrl
addr16
pop
mov
dec
dec
or
leave
in
push
pop
lahf
jno
sub
je
cmc
loop
outsl
in
lcall
pop
in
lea
lahf
sub
pop
lret
int3
enter
pop
dec
sbb
nop
mov
daa
cwtl
hlt
or
cmp
iret
sub
mov
inc
pop
sbb
push
cmp
clc
jp
mov
addr16
andb
rolb
pop
dec
lock
push
mov
dec
dec
lret
push
popl
ss
sbb
clc
mov
lods
mov
mov
inc
sub
dec
lds
in
fiaddl
adc
inc
cmp
negl
out
fstl
jmp
push
aaa
std
orb
adc
insl
aaa
mov
mov
sub
into
fabs
xor
ja
imul
jae
rol
hlt
iret
lods
lods
jl
lea
popa
push
aad
push
mov
add
fwait
and
out
xchg
push
fmull
jg
lods
bound
sub
pusha
inc
or
les
push
or
xchg
push
jp
out
xor
push
jno
push
ljmp
mov
shlb
out
lds
dec
rol
in
dec
cmpsl
lahf
push
insl
sbb
frstor
mov
mov
pop
xchg
lea
stos
or
inc
out
add
test
pop
idivl
scas
inc
dec
fwait
rcl
fcoms
mov
pop
clc
cmp
add
xor
sbb
add
out
dec
out
jmp
dec
adc
and
adc
daa
gs
add
ja
ffree
hlt
fwait
hlt
in
je
mov
icebp
or
outsl
cmp
ds
imul
mov
inc
aas
test
jno
xor
jns
add
mov
je
lahf
cmpsl
repnz
lods
sbb
aam
jns
imul
cmp
sub
arpl
je
movsl
fisubrs
mov
add
push
mull
jl
sbb
in
in
fimuls
mov
movsl
mov
add
dec
jmp
pop
xor
test
jmp
aas
pop
jg
push
dec
ret
imul
std
mov
mov
loopne
mov
js
lahf
scas
cmp
popf
xor
mov
iret
push
adc
das
pop
into
mov
jo
pop
scas
stc
aaa
pop
xchg
inc
jle
pop
cli
adc
mov
call
dec
adc
in
mov
orb
sub
in
and
lds
push
mov
lahf
bound
js
aad
cmp
clc
movsl
push
in
cmpb
aad
pop
decl
xlat
xchg
stc
leave
xchg
aam
or
sbb
aam
jecxz
mov
mov
movl
jbe
flds
cld
sahf
rcll
push
popa
add
divb
or
and
jbe
adcl
test
repz
ret
cmp
sub
cmp
sbb
ds
jb
dec
leave
mov
push
push
clc
les
jle
or
sub
xchg
push
sub
mov
xchg
mov
pop
sahf
jo
inc
or
loopne
sahf
in
ffreep
adc
scas
jge
sub
out
mov
pop
in
jb
mov
fidivrl
xchg
pop
jne
pop
jo
add
and
outsl
shl
push
or
mov
inc
mov
inc
cltd
leave
scas
sub
test
les
roll
jle
and
repz
push
lock
cmpsb
xchg
jbe
mov
add
bound
arpl
pusha
stc
mov
or
adc
jmp
sbb
mov
lcall
cmp
push
jle
dec
adc
xor
sbb
mov
mov
push
add
sub
sub
cltd
xchg
add
stos
sbb
xchg
pop
push
inc
lret
jne
pop
ljmp
inc
pop
data16
pop
push
idivb
mov
imul
lret
or
enter
xchg
shrl
xorb
stos
push
outsb
mov
mov
into
outsl
bound
mov
arpl
xchg
add
call
ljmp
xlat
mov
cmpsl
mov
imul
int
push
mov
sbb
push
stc
in
call
sti
sti
mov
adc
imul
je
test
mov
mov
lods
out
mov
test
cs
outsb
jno
and
lcall
mov
inc
into
jmp
insb
push
jle
pop
mov
xchg
jno
loopne
cmc
pop
mov
insl
mov
mov
mov
loope
push
imul
cmp
push
cmpsl
movsl
mov
ficoms
mov
cwtl
push
mov
sub
jns
xchg
lret
ljmp
adc
or
inc
xor
sarb
cmpsb
jo
xchg
ds
pop
push
arpl
xchg
adc
sub
pop
ds
arpl
adc
pop
pop
mov
mov
incb
inc
into
dec
mov
cli
xchg
mov
lock
xor
addr16
xor
jne
inc
or
ret
mov
and
ja
mov
arpl
xchg
addr16
mov
cltd
mov
in
out
pushf
jbe
xor
andb
and
test
js
cli
or
orl
mov
mov
cli
scas
sbb
shlb
lsl
mov
mov
sub
cltd
pushf
pushf
lcall
inc
test
mov
or
lahf
mov
mov
out
rorl
sub
xorb
mov
dec
scas
cmc
cmp
pusha
sub
test
cmovg
and
lahf
adc
cltd
xchg
les
sbb
fiadds
adc
lods
xorl
xchg
cmp
push
dec
daa
sub
cwtl
add
xchg
icebp
ljmp
insl
js
stos
movsl
out
ficompl
adcb
daa
xchg
jg
and
leave
inc
cmpsl
shll
ljmp
mov
sahf
out
mov
pop
pusha
in
xorb
loop
and
mov
in
xchg
pusha
mov
les
sub
outsb
scas
pop
cmp
jne
lods
sbb
hlt
subb
pop
push
jno
fsubl
or
sbb
dec
lret
xchg
mov
loope
pop
ds
clc
mov
lret
stos
dec
aas
mov
addr16
clc
fstps
mov
or
push
push
xchg
and
sbb
pop
cmp
sbbb
sub
cmp
xchg
mov
jl
adc
sbb
subb
movsl
test
into
addr16
push
out
sti
or
adc
jecxz
xchg
and
cmp
or
pop
popf
stos
push
rcl
roll
xlat
out
cld
in
stos
ret
push
aaa
mov
inc
das
dec
adc
les
adc
pop
pop
popf
addps
add
jge
inc
bound
jge
xor
pop
bound
ss
insb
jmp
movsb
and
bound
mov
out
mull
test
push
stos
xchg
shlb
outsl
cwtl
mov
and
dec
push
nop
mov
pusha
fwait
mov
mov
sbb
fnstcw
ficompl
dec
rclb
out
and
push
jmp
test
ss
cmp
notb
add
cld
jo
dec
data16
js
fwait
adc
sbb
xchg
fst
mov
jmp
outsl
js
test
in
and
frstor
into
adc
faddl
mov
push
jl
aad
jge
icebp
fisubrl
imulb
xor
sub
fcomps
cltd
inc
dec
or
xor
dec
adc
mov
dec
jp
loopne
inc
cmpsl
aam
dec
int
lret
cmpsl
ss
cmp
data16
out
pushf
mov
push
int
cltd
dec
inc
pushf
pop
sbb
test
out
ss
mov
xor
and
frstor
pop
adc
out
cmp
sub
loope
sub
fisubrl
lahf
or
fcmovne
cld
xchg
pop
xlat
sub
fsubrl
data16
sub
mov
cmpsl
stos
rep
or
lock
scas
sub
scas
stos
add
jne
mov
cli
sub
int3
or
iret
jno
jle
pushf
hlt
dec
jnp
xor
or
mov
mov
fs
mov
popa
cmp
mov
cmp
shrl
mov
lret
out
cwtl
and
inc
mov
push
pop
and
push
cmp
call
cmp
js
xor
scas
add
mov
cld
movsl
pop
int3
repnz
mov
roll
orb
xchg
mov
dec
sub
addr16
loop
push
inc
mov
fstps
hlt
and
jns
push
mov
andl
mov
int
cltd
loopne
out
adc
inc
test
sbbl
adc
adc
rep
pop
xor
mov
out
shll
pop
stos
xor
ja
aad
mov
adc
adc
xchg
dec
loope
pop
mov
and
scas
push
fiaddl
ret
rolb
daa
adc
les
lret
aad
jne
sbbl
xchg
jo
je
or
call
mov
stos
sbb
filds
ljmp
test
aad
mov
lods
sbb
xchg
mov
mov
sbb
adc
imul
aas
stc
hlt
lret
in
cmp
mov
mov
dec
sbb
xchg
push
and
push
pop
in
jmp
repnz
fsubs
cmp
mov
push
jmp
cmp
lahf
push
or
repnz
lock
push
sub
fisubl
mov
dec
push
stc
movsb
rol
and
xchg
fistpll
lret
loop
adc
idivl
stc
cmpsb
cmp
aas
ljmp
mov
in
sub
inc
cmp
cmpsb
mov
mov
cmp
pushf
inc
add
push
enter
sub
pushf
add
push
fidivl
push
mov
mov
xchg
das
mov
leave
and
addr16
mulb
ds
fdivl
in
pop
lahf
in
jns
les
outsb
dec
pop
lods
repz
iret
mov
in
jb
and
xor
ja
pop
xchg
sahf
das
push
jbe
cwtl
xchg
shl
shl
addr16
jge
or
lret
and
push
xor
addr16
out
out
test
pop
popf
pop
shr
lret
jbe
inc
pop
cs
pop
mov
mov
and
pmaxsw
cld
lret
jnp
add
loope
test
and
jo
test
pop
jp
pop
mov
mov
movsl
add
xor
lret
dec
push
adc
fsubl
aas
mov
imul
xchg
push
cmp
sub
cmp
cmp
frstor
popa
data16
into
insl
popf
bswap
movsb
mov
jecxz
hlt
xor
loope
pop
in
pop
pop
repz
cmp
mov
stos
imul
cs
inc
icebp
leave
pop
dec
in
adc
stc
push
push
fildl
add
stos
xchg
into
mov
fs
call
adc
aaa
ljmp
icebp
inc
push
mov
sub
mov
adcl
jb
and
adc
mov
push
mov
hlt
jge
rorb
jns
fs
je
push
lret
pop
or
add
sub
dec
xchg
cld
pop
mov
xor
pop
pop
arpl
stos
fwait
out
lea
inc
int3
push
push
fcmovu
in
or
inc
push
fstps
clc
mov
mov
stos
iret
cmp
xchg
outsb
inc
push
call
aaa
ss
sbb
addr16
loop
lds
cmpsb
lahf
inc
jl
in
pop
aaa
mov
das
cwtl
dec
leave
mov
ror
mov
dec
jb
and
pop
xchg
xor
pop
dec
push
or
xor
inc
loopne
into
pop
xchg
repz
mov
pop
loopne
or
imul
je
xchg
insb
dec
mov
ret
or
inc
mov
daa
in
stos
sarb
xor
mov
loopne
add
add
rcl
dec
fmul
shlb
sti
add
int
out
jno
inc
and
add
aaa
jecxz
cmc
addr16
lds
add
jl
mov
test
les
lea
hlt
imul
fsts
pop
scas
adc
or
jmp
icebp
push
ficomps
cmc
lea
aad
push
out
aas
xor
push
loope
adc
add
insl
mov
jb
mov
push
in
lret
xchg
sub
inc
push
test
pusha
int3
push
adc
js
rorl
loop
adc
call
repnz
dec
call
xor
xchg
jns
add
into
fs
loop
sbb
mov
mov
sub
xlat
cmpsb
aaa
xlat
xor
in
dec
add
shll
and
fsubl
mov
out
lret
push
mov
mov
mov
fwait
out
inc
xor
ret
popa
push
das
or
shlb
test
cmp
lret
push
push
or
pop
adc
and
sahf
xchg
sub
rcr
cmp
xor
and
in
ret
cmp
iret
ds
xor
xchg
jge
les
push
mov
dec
mov
sub
inc
aad
and
enter
adc
sbb
jno
lret
mov
mov
cmp
push
mov
imul
gs
insb
xchg
movsb
in
xchg
inc
mov
adc
push
cwtl
fistpl
and
jmp
push
cmpsb
ljmp
mov
jb
mov
xor
push
pop
mov
mov
pop
pop
push
adc
xchg
push
jmp
sub
pop
push
jg
mov
mov
in
xor
loope
rep
mov
mov
cmp
jbe
inc
sbb
sub
push
sahf
aad
and
ds
test
loopne
pushf
repz
out
imul
cmp
mov
jl
cmp
dec
ljmp
stos
inc
xchg
dec
imul
mov
fcomps
pop
push
daa
push
push
shrb
pop
stc
mov
mov
sbb
pop
cs
inc
sub
inc
out
or
test
out
bound
sbb
xchg
loopne
adc
sub
inc
jle
adc
dec
mov
or
inc
pop
inc
or
xchg
scas
arpl
push
and
es
add
dec
dec
lret
and
cmp
pop
arpl
adc
xchg
push
mov
pop
in
out
xor
mov
push
jae
xlat
xorb
stc
inc
push
shrb
push
outsb
out
insl
cmpl
movsl
into
inc
mov
mov
or
xchg
stc
inc
push
js
cmpsl
orb
adc
cli
cmc
mov
cmpsb
mov
lock
xchg
int3
dec
shl
scas
xchg
stos
rorl
das
mov
les
cmp
jle
rclb
fisubl
adc
mov
xchg
push
icebp
mov
and
jg
jnp
push
cmp
pusha
cmp
mov
xor
ja
lret
std
mul
xor
mov
or
daa
inc
bound
arpl
ja
lahf
arpl
add
outsl
xchg
mov
mov
insb
sub
mov
fcoms
lahf
add
in
sub
cmp
mov
ficompl
dec
fldenv
shll
and
mov
cltd
lea
add
pop
xor
inc
cld
jmp
sub
bswap
sbb
pop
popa
fdiv
sarl
je
push
xor
mov
ds
xchg
popa
sbb
pop
jle
push
stos
sahf
mov
cmp
inc
ret
popf
rolb
dec
adc
andl
jne
xchg
out
pop
lods
sti
sub
sub
sti
rol
xor
ja
mov
or
dec
notb
gs
and
in
out
xchg
out
jne
push
ss
inc
xorb
idiv
in
adc
fldt
clc
cmp
ret
in
ljmp
enter
pop
push
bound
insl
mov
pop
or
add
shll
lods
loop
push
frstor
mov
pushl
xchg
mov
shrb
clc
fs
or
sbb
pop
popf
push
into
scas
sub
rorb
push
clc
lcall
xchg
xchg
popf
xor
popf
cmpsl
mov
or
sub
iret
testl
cltd
cli
xchg
xlat
pop
push
cmp
imul
in
insl
movsl
jp
fidivl
aas
jg
dec
loope
xorl
sbbl
cwtl
cmp
loopne
pop
push
add
cli
repz
adc
aad
mov
into
imul
dec
fisubrl
out
sub
aas
inc
aad
adc
mov
jmp
mov
nop
ficomps
xchg
cmp
fmuls
mov
mov
or
pop
shl
add
dec
in
push
sti
mov
sub
xchg
push
jmp
xchg
jge
popa
movsl
test
fnsave
and
or
add
fimuls
jle
jns
mov
push
scas
mov
mov
orb
sbb
adc
icebp
mov
std
jae
inc
push
test
loopne
and
pop
xchg
xchg
mov
test
lahf
inc
jle
adc
aad
or
and
andl
adc
mov
dec
pop
lods
iret
mov
std
push
les
icebp
dec
pop
insb
orb
and
xor
pop
fbstp
mov
push
jne
pushf
sub
decb
gs
push
or
shrl
inc
jae
sbb
mov
cmpsl
adc
fdiv
sub
out
scas
xchg
inc
adc
jb
push
or
push
push
movb
enter
sbb
in
neg
cmp
cs
in
arpl
aam
xchg
inc
xchg
pushf
stos
dec
test
outsb
mov
out
xchg
xchg
xorl
cmpsl
xchg
cmp
and
stos
jle
inc
mov
or
jmp
cmpsb
pop
jmp
pop
into
loop
aad
shr
push
mov
inc
aad
orl
dec
je
mov
adc
xchg
imul
mov
in
cmp
out
popf
and
lods
sahf
stos
int
xchg
pop
jo
push
paddw
xor
mov
shll
xor
subl
sub
pushf
pushl
sti
jmp
adc
inc
mov
mov
and
dec
mov
xor
inc
decl
xor
negl
aam
loop
jnp
es
sarl
sub
cmpsl
ss
push
mov
stos
repnz
xor
and
pushf
xchg
inc
ret
sub
cmpsl
jo
lahf
hlt
mov
ss
xor
pushf
or
jnp
pushl
mov
jnp
pop
xchg
pop
loopne
fistpl
push
daa
mov
adc
mov
dec
mov
js
clc
mov
inc
ret
mov
cmpsb
imul
aad
out
fcoml
pushf
xor
pushf
sub
pushf
ret
mov
popa
mov
out
loopne
lahf
pop
incl
fld
mov
ds
ret
or
clc
js
push
popa
leave
inc
stos
into
out
dec
lods
fildl
lods
mov
es
pop
jle
mov
test
mov
jb
test
bound
mov
inc
inc
sbb
dec
push
inc
mov
mov
mov
xchg
cmpb
lods
and
inc
je
mov
int3
fcompl
pop
or
jne
push
mul
sub
xchg
dec
outsl
in
lods
and
les
std
and
push
pop
mov
inc
rclb
pop
lcall
mov
movsl
sub
adc
test
pop
int
outsb
jbe
popl
add
fcmove
mov
fiaddl
mov
fidivrl
ret
leave
pop
icebp
or
dec
adc
inc
aaa
cmp
fadds
test
icebp
insb
fwait
lret
xchg
jge
in
mov
lahf
out
shl
pop
pop
ss
sahf
xchg
dec
lea
xchg
call
cmpsl
jne
xor
cwtl
fstl
stc
adc
sub
aas
das
sbb
cld
ds
ss
cmc
pop
pop
out
xor
outsl
mov
jne
jecxz
andl
cmp
sub
aas
cwtl
or
bound
test
xor
mov
fldl
jp
adc
mov
push
jle
fisubrs
data16
aas
adc
outsl
cs
cld
jl
and
cmp
shr
xchg
iret
mov
mov
mov
std
out
mov
mov
std
inc
xchg
and
jle
movsb
mov
shrb
push
inc
mov
push
data16
jbe
dec
mov
or
dec
mov
dec
mov
fcmovne
fnstcw
mov
int3
test
mov
out
out
mov
jge
test
push
aam
ljmp
gs
push
jo
mov
pusha
movsb
adc
mov
cmp
pop
stos
add
aad
in
jo
jp
test
lods
mov
rcrl
or
rcll
mov
inc
cmp
scas
dec
lss
imul
rorb
push
jnp
jle
lea
push
cwtl
les
lahf
popf
mov
out
ds
sub
xorl
leave
and
sbb
aam
cmp
xor
jmp
adc
dec
and
in
stos
fists
cmp
sub
jmp
icebp
popf
into
push
outsl
data16
inc
popa
inc
mov
jp
ficoms
jecxz
sbb
inc
fidivrs
or
sbb
mov
sbb
xlat
cwtl
or
cmp
jle
push
adc
sub
cmc
es
jnp
sti
xchg
inc
pop
scas
mov
pop
add
iret
xchg
out
fnstenv
adcl
push
cli
outsl
es
outsl
or
frstor
punpckhbw
sbb
cmp
std
cs
stos
sub
mov
mov
sbb
mov
mov
out
xchg
lcall
fmull
movsl
adc
inc
test
mov
popf
xor
ja
clc
pop
pop
xchg
and
stc
mov
dec
lds
mov
adc
sbb
pop
sub
mov
ja
sbb
jmp
test
mulb
dec
inc
adc
dec
pop
mov
cmp
mov
xchg
movsl
insb
cwtl
sbb
insl
fcomps
fdecstp
mov
mov
xor
ss
mov
mov
sub
repnz
mov
mov
loope
mov
aam
test
mov
add
ljmp
pop
incl
mov
int
roll
imul
sbb
xchg
ja
sbb
adc
mov
int3
mov
mov
jge
and
es
cmc
pop
sub
cmc
adc
loope
mov
cmp
mov
pusha
imul
loopne
sub
add
int
les
lods
shl
fcomp
inc
sub
lods
bound
ds
sti
rol
or
movb
mov
push
add
lods
push
inc
ss
jno
imull
xchg
enter
adc
sbb
add
push
sbb
push
sub
insb
jmp
cmpsl
in
mov
add
dec
lea
sbb
dec
in
mov
push
repnz
jno
in
imul
push
dec
ds
les
pop
test
push
inc
scas
cmp
mov
icebp
mov
std
shrb
lret
lock
mov
pop
mov
cli
and
jno
lods
std
out
add
clc
adc
xor
repnz
fcmove
jae
mov
and
loop
outsl
sbb
das
xchg
lods
jp
and
fisubrs
or
xor
push
jp
pop
xor
daa
out
jb
push
cld
into
cmp
push
and
xor
shr
xchg
add
data16
adc
rolb
addr16
xor
mov
jmp
mov
adc
mov
push
push
lret
imul
push
cmc
dec
lret
mov
and
pushf
inc
dec
push
xchg
test
inc
jl,pn
js
inc
mov
aad
sbb
hlt
cmp
jns
and
mov
mov
fisttpll
test
xchg
loop
pop
addr16
xchg
sub
xor
fwait
cmp
adc
rorl
xchg
lahf
scas
int
jo
cmp
add
jo
and
ja
ret
bound
mov
gs
and
add
pop
mov
lds
in
add
leave
or
imul
aas
mov
ds
imull
jmp
sbb
aad
lret
ljmp
jbe
jno
pop
mov
cmp
loope
pop
sub
ret
mov
dec
sbb
push
dec
push
xchg
push
ss
stc
sub
aad
repz
aad
jo
es
mov
fsubr
dec
push
repz
enter
dec
push
pop
adc
fcmove
push
out
nop
std
push
cmp
sub
sub
mov
cmp
push
or
addr16
adc
push
movb
push
cld
mov
sbb
sub
push
mov
jnp
pop
andb
jg
es
ja
shrb
pusha
sub
je
call
loopne
push
pop
and
jecxz
jb
mov
cmp
push
shll
cwtl
pop
push
fsubrs
pop
roll
fcoms
adc
rcrl
cmp
jns
inc
xchg
lret
jnp
mov
mov
mov
fwait
ja
out
pop
lahf
outsl
and
dec
mov
adc
lea
es
jo
jmp
pop
cmp
mov
sti
jnp,pn
aam
xor
data16
inc
push
mov
lock
in
shlb
lock
movl
mov
mov
jp
mov
je
push
mov
in
lods
pop
inc
std
dec
data16
adc
mov
cmp
mov
shrb
dec
xor
dec
mov
daa
adc
add
adc
repnz
fcmovnu
sbb
je
pop
sub
iret
cld
in
and
mov
mov
mov
cmp
sahf
or
lods
fcompl
pop
pop
sub
cmpsl
mov
jecxz
pop
mov
inc
adc
aaa
and
inc
mov
mov
dec
jmp
jge
and
lea
sub
scas
cmp
sub
inc
data16
push
lret
in
daa
sub
ja
orb
mov
stos
sbb
ret
outsb
lods
adc
das
inc
pop
xor
sub
outsl
add
and
mov
popa
push
pop
xchg
add
int
lods
pop
adc
xor
lea
daa
ret
std
cli
mov
fs
pop
xchg
cwtl
xor
rolb
inc
insb
mov
cmc
add
adc
sahf
sub
pop
xchg
nop
mov
dec
add
inc
pop
jecxz
leave
in
je
loopne
out
lret
cmc
insl
and
inc
adcl
popf
outsl
insl
dec
arpl
sub
in
out
std
cmp
dec
add
pop
shll
or
shlb
fsubrl
test
dec
scas
jle
outsb
push
mov
cmp
hlt
jle
xlat
jl
sahf
lret
iret
in
negb
mov
hlt
std
mov
mov
add
in
test
jecxz
xchg
test
jp
jno
and
test
fst
mov
fisttpl
pop
xlat
out
xor
xchg
jb
lods
ja
jle
les
mov
jo
aam
cmpsb
and
sbb
dec
cwtl
es
pushl
rcr
lods
jbe
push
imul
jl
into
daa
pop
ret
in
ljmp
mov
push
loopne
cmpb
fisttpl
inc
test
pop
lahf
xchg
in
cwtl
das
sahf
inc
sub
enter
int
add
pop
imul
and
sub
cs
loop
outsl
leave
cmp
out
mov
sub
mov
ret
mov
cmp
insb
aaa
enter
xchg
mov
cmp
jge
test
lret
jo
sub
pop
inc
push
add
js
xchg
xchg
dec
cmp
test
jg
pop
jo
xor
mov
sbb
aam
jle
cmp
push
push
or
adc
pop
mov
push
inc
mov
out
cmp
lahf
fucomip
add
mov
mov
push
jg
push
dec
out
jge
pop
push
mov
mov
shrl
test
xchg
sahf
xlat
mov
jmp
gs
mov
cmp
add
and
sbb
push
inc
and
mov
cli
test
dec
into
les
lahf
xor
pop
out
popf
sbb
and
xchg
sahf
decb
stos
mov
out
cld
jg
and
loop
aas
subb
add
add
xchg
test
fisubrl
ja
xor
add
pop
lods
call
dec
push
les
test
outsl
push
mov
xchg
pmuludq
ret
imul
inc
jecxz
or
sub
sub
scas
lret
out
pop
xor
xlat
adcl
lahf
pop
adc
ljmp
daa
pop
ljmp
mov
frstor
pop
jo
aam
testl
jmp
ja
add
cmpsl
jp
cmpsl
test
gs
dec
jmp
adc
loopne
pop
and
push
scas
into
out
mov
enter
ss
xchg
fwait
lahf
add
mov
rorb
call
push
jne
xlat
mov
imul
nop
je
das
xor
popl
movsl
xlat
pop
sahf
movntq
adc
and
repz
loopne
repnz
popa
lahf
dec
sbb
outsb
jg
pop
add
enter
mov
cmp
lds
popa
out
add
sub
xchg
sub
push
mov
push
cltd
movsb
cmp
fisubrs
mov
outsb
push
cmpsl
jo
shrb
xor
lds
add
push
jp
add
pop
xchg
arpl
jne
mov
push
pop
push
mov
mov
test
push
bnd
jae
pop
push
lcall
aas
cmp
insb
cmp
push
insb
aas
sub
dec
mov
insb
in
dec
sub
arpl
addr16
sti
push
lea
in
idivl
mov
xchg
inc
popf
stos
pop
pop
dec
adc
lcall
add
nop
cmpl
out
lods
data16
mov
mov
jb
aaa
inc
xlat
add
mov
sub
fildl
stos
test
stos
or
push
pop
lock
mov
xchg
loopne
mov
adc
shl
push
ret
pusha
xlat
fmull
cs
mov
aaa
in
xchg
test
lret
mov
fisubs
and
fcmovnu
xlat
cmpsb
mov
shll
fucomp
sti
add
sub
aas
mov
push
shl
cmp
mov
leave
cld
xchg
scas
cmpsl
add
pop
lret
add
rclb
pop
arpl
ds
lret
jno
pop
adc
inc
fstl
ret
mov
lods
lds
pop
ret
es
cli
enter
leave
cld
inc
jmp
int3
movsl
add
out
mov
into
lods
add
mov
pop
loopne
fcoml
xor
mov
fnstcw
loopne
rorb
enter
test
fdivrs
lods
cmp
mov
cmpsb
call
xchg
sub
sarl
pop
test
loop
out
mov
pop
xchg
adc
pop
add
test
out
iret
push
mov
xor
jmp
nop
addr16
out
mov
into
inc
rorb
inc
mov
imul
sub
or
add
movsl
pop
fbld
dec
cwtl
and
nop
mov
notb
repz
mov
fdivrs
push
add
sub
out
push
fsubs
test
mov
mov
jle
cltd
sbb
insb
data16
xchg
outsl
sbb
xchg
mov
dec
xlat
mov
cld
mov
mov
sbb
lahf
into
mov
fcompl
pop
mov
pop
mov
and
test
rcll
pop
test
repnz
dec
lahf
mov
mov
add
mov
jbe
xlat
divb
pop
movsl
loope
in
mov
stos
xor
in
mov
icebp
inc
out
fbstp
inc
dec
shlb
data16
push
enter
gs
imul
lds
dec
add
mov
sar
push
ja
jmp
fstpt
mov
mov
enter
jnp
std
push
add
icebp
sbb
pop
mov
test
cmp
in
adc
iret
stc
xchg
sub
stos
daa
jae
cmp
inc
and
jecxz
push
sarb
cmc
out
leave
fnstsw
hlt
and
int3
repz
movb
loope
ror
fistps
pop
out
cmpsb
stc
and
and
lods
xor
popf
sbb
nop
xchg
sti
sbb
mov
or
pop
sbb
xchg
orb
ret
xchg
pusha
fsts
add
xlat
dec
xor
cmc
xchg
mov
sub
mov
hlt
xor
orl
push
xor
cwtl
add
test
cmc
xchg
cmp
mov
cwtl
mov
adc
lock
inc
mov
adc
push
inc
mov
test
xor
cmp
mov
es
bound
dec
or
dec
adc
xchg
dec
or
ljmp
dec
sbb
xor
mov
test
add
cmp
test
inc
mov
inc
and
cmp
jb
insb
fidivs
testb
inc
fwait
xchg
sbb
mov
xchg
xchg
test
mov
adc
xchg
std
mov
jle
sbb
movsl
loopne
inc
push
mov
lock
loop
pop
ja
push
push
out
dec
iret
mov
cmpl
in
imul
stc
lret
shl
loop
data16
jle
sarb
jecxz
or
add
mov
xchg
add
jae
add
mov
mov
loop
movsl
es
popa
pusha
ret
mov
mov
dec
lret
test
lahf
xchg
ljmp
dec
push
shl
aam
jne
dec
lock
push
sub
and
xlat
inc
dec
xchg
sub
sbb
ljmp
sub
mov
mov
nop
pop
push
sub
stos
xor
lcall
or
push
enter
cmc
pop
in
insb
jmp
lock
cwtl
jnp
or
sar
ret
xchg
into
fs
test
clc
or
adcb
dec
mov
mov
test
fisubs
shll
mov
xor
scas
ja
rcr
inc
jmp
stos
out
xor
ss
mov
inc
pop
jmp
loopne
lret
mov
iret
pushf
push
ss
adcl
inc
mov
test
and
pop
xchg
js,pn
out
cld
cli
ret
push
imul
not
leave
or
fwait
dec
rcrb
in
rorl
sub
cmpsb
shrb
mov
mov
mov
pop
imul
mull
int3
loope
adc
arpl
lock
mov
push
xor
insb
and
xchg
lods
cs
outsb
gs
or
add
out
cld
push
negl
add
jmp
arpl
test
test
or
cs
cs
add
imull
cli
mov
cmp
arpl
or
out
add
or
dec
lds
sub
dec
test
scas
mov
push
adc
mov
jge
aam
or
mov
das
push
sub
aam
sbb
mov
push
pop
jp
jae
fcmovnb
and
mov
data16
popf
pop
add
jne
xor
push
aad
stc
sar
iret
push
scas
icebp
inc
out
fsubrs
cmp
fmuls
and
fadds
dec
movsl
cmp
pop
sub
sub
test
pusha
cmc
cwtl
pusha
push
ljmp
adc
fxch
popl
aam
std
dec
xor
xchg
sti
cmc
mov
mov
xorb
jle
jae
push
je
xor
adc
shlb
loop
xchg
cmc
and
out
divl
mov
fs
jge
xchg
bound
and
cmp
int3
mov
rcrl
aas
mov
inc
enter
fdivrs
insl
into
rclb
xor
cli
int
imul
neg
and
ljmp
aaa
adc
add
pop
push
out
pop
inc
dec
sar
fists
add
jns
xlat
rcrl
movsb
jle
stos
clc
lcall
icebp
lcall
stc
xchg
stos
jp
adcb
mov
jl
jo
or
divb
fs
push
cmp
inc
in
andl
dec
cmp
sub
and
jge
les
aas
clc
push
ja
rcl
lods
xchg
in
push
add
je
andl
cli
je
jg
rcrb
pushf
mov
mov
cmp
xchg
test
stos
mov
cmp
xor
or
int
xchg
mulb
xchg
jb
imul
cmp
stc
jg
leave
aam
sbb
leave
push
push
pushf
scas
add
mov
aas
xchg
cmc
cmp
loopne
test
pop
dec
mov
mov
cli
in
pop
aaa
movsl
xor
lea
or
mov
or
je
arpl
in
shlb
mov
insw
leave
add
dec
fwait
lret
sbb
aaa
mov
ss
push
int
sub
pushf
movsb
lret
sbb
pop
mov
es
xor
mov
inc
rol
pop
cmpsb
fldenv
into
arpl
ds
cmp
jbe
add
cmp
addr16
andb
jle
fistps
stos
mov
stos
ret
test
xchg
rclb
dec
cld
js
mov
jne
mov
fsubr
aam
loope
cmpsl
mov
insb
sub
jmp
and
shll
lret
mov
add
out
xchg
xor
xor
shll
jbe
aam
inc
adc
ret
rcl
cmp
ret
fxam
cli
jg
cmpsl
test
out
lret
mov
test
lods
xchg
mov
sbb
aaa
enter
int
aaa
pop
jle
iret
repz
cmp
in
popa
inc
int
add
icebp
cmp
adc
outsl
movsl
dec
insb
xchg
rcrb
cmp
pop
ret
imul
or
sub
cmpb
push
add
out
ss
add
inc
out
push
fisubs
adc
add
fs
add
add
mov
syscall
int
and
dec
inc
iret
movd
mov
mov
add
gs
lret
xlat
pop
xchg
sbb
lcall
mov
pop
clc
and
lods
ja
inc
add
mov
mov
mov
cld
ret
loope
push
scas
jmp
loopne
bound
subb
and
cmp
fisttpll
pop
dec
daa
sub
lds
or
nop
and
enter
dec
shlb
out
mov
pop
jecxz
loop
mov
cmp
int
pop
jmp
or
sahf
scas
aam
insl
xchg
or
inc
mov
jns
fisttps
fcomp
and
xchg
pusha
pusha
push
and
and
mov
inc
loopne
test
in
xlat
adc
mov
fidivrl
outsb
out
jp
sbb
cmp
dec
es
mov
aad
cmp
fsubp
add
add
mov
push
out
loop
fwait
push
fsubs
lds
lret
les
mov
stos
pop
inc
mov
jae
andb
lea
mov
arpl
les
push
lea
popa
loopne
out
fnstsw
xor
test
jl
lds
mov
outsb
out
repz
sub
jno
mov
mov
dec
cmc
shrl
iret
icebp
pop
in
dec
sbb
insl
push
popa
sbb
mov
inc
rclb
cmpsl
cmp
arpl
xor
lcall
icebp
push
pop
inc
cmp
mov
and
repz
stos
jbe
call
fnstcw
call
stos
mov
pop
push
out
mov
mov
out
icebp
jp
jg
addr16
adcb
stc
dec
xchg
cwtl
das
in
inc
sbb
lock
xchg
add
cmpsb
sti
int
fcmovnb
rorl
repnz
clc
dec
mov
jmp
push
jns
jmp
sub
mov
jb
scas
int
push
clc
lcall
cli
mov
fmulp
addr16
xchg
rolb
loopne
addl
mov
cmp
push
adc
popf
repnz
incb
jle
add
lods
and
jae
inc
sub
pop
iret
and
test
cmp
add
andb
sub
pop
pop
push
arpl
pop
mov
adcb
cld
scas
cmp
repnz
add
adc
shrl
jmp
or
and
jbe
dec
imul
in
cmp
mov
mov
jmp
add
mov
cltd
sahf
out
loopne
xchg
dec
andb
popf
pop
lods
aas
xchg
stos
or
movsl
push
sbb
sbb
clc
aaa
pop
dec
inc
bound
mov
jns
cmc
movsb
enter
push
adc
fisubl
xor
lds
xchg
lock
nop
cld
sbb
clc
lods
sub
loope
mov
out
xchg
inc
jo
or
push
add
dec
cmp
loop
or
inc
push
inc
xchg
sarb
sub
push
dec
cwtl
repz
syscall
mov
shrl
inc
outsb
mov
mov
sbb
mulb
jg
jmp
scas
fnstenv
jl
je
repnz
xorb
and
or
aam
in
fcomps
rclb
inc
jg
fsubl
xor
test
fsubp
test
jo
iret
out
sbb
fcmovnbe
jp
or
mov
sub
add
fisttpl
rcl
test
lcall
arpl
leave
jle
sub
sbb
imul
es
mov
addl
push
imul
sub
or
dec
sbb
xchg
xchg
out
cmp
mov
sub
mov
xor
out
loopne,pn
es
lret
popa
ja
testl
aad
dec
cmc
mov
xchg
and
dec
sub
fwait
es
jmp
dec
aad
rcr
or
aas
fisttpll
xchg
in
das
sahf
sbb
sub
enter
idivl
les
push
add
xchg
in
clc
push
in
mov
into
addr16
daa
mov
cmpsl
out
imul
or
das
or
jp
dec
push
sahf
push
cli
sbb
das
push
repnz
push
fcmovnb
adc
mov
cmp
std
pop
adc
test
sti
jg
icebp
adc
sbb
popf
mov
iret
lods
mov
xchg
icebp
movsb
jle
fidivrl
lcall
cmp
mov
and
mov
adc
test
lcall
pop
icebp
inc
mov
pop
daa
loope
adc
cli
ficompl
jmp
pusha
out
ja
add
mov
call
dec
cmpsb
push
and
scas
bound
popf
dec
popa
test
std
jp
dec
mov
add
nop
sub
jp
jl
aaa
and
stc
adc
mov
out
pop
dec
bound
shrb
push
lods
outsb
inc
ficoml
add
jno
lods
jns
int3
jg
xlat
fcoms
fxch
pop
mov
mov
fsub
push
lods
out
mov
xor
mov
inc
sbb
xchg
push
or
popa
cmc
xchg
mov
mov
outsl
xor
outsb
jne
sbb
mov
jb
mov
mov
push
icebp
les
xor
outsb
in
cmp
adc
stos
out
data16
cmpsb
mov
and
sub
roll
pop
iret
icebp
jle
sarl
mov
pop
popf
pop
fs
rol
xor
xlat
adc
cmc
adc
and
mov
sbb
fisubl
add
sub
icebp
sti
mov
push
enter
rorl
cmp
mov
adc
push
cld
pop
mov
sub
test
and
fcom
loopne
call
js
dec
fidivs
sbb
popf
inc
ja
out
ljmp
xchg
jg
ret
sub
adc
and
push
int3
lods
rol
xlat
outsb
in
or
pushf
xchg
xchg
mov
cmpsb
movsb
shlb
dec
ljmp
cmp
cmpl
int3
cli
inc
add
test
int
mov
jbe
push
dec
fistl
xorl
rep
sub
pop
mov
imul
lret
push
push
in
movsl
and
std
xor
jmp
and
pop
scas
popa
fldt
out
add
mov
pop
add
pop
aas
fists
stos
cmpsl
xor
jmp
cltd
mov
mov
cmp
mov
frstor
inc
mov
push
mov
mov
hlt
inc
pop
and
cs
loop
cmp
mov
out
xor
andb
xchg
andl
mov
push
or
out
pop
push
pop
or
sar
int
mov
lea
push
adc
pop
xchg
std
das
js
adc
in
rorb
cmc
mov
repnz
xor
xchg
mov
bound
inc
rcl
int3
inc
adc
test
jo
xchg
pop
int3
add
fs
mov
mov
ss
in
cmc
adc
xchg
push
fdivl
sbb
push
jmp
xor
popf
or
cmp
out
jp
fmull
negl
mov
jl
dec
or
lds
jmp
push
int
lock
inc
pusha
in
mov
push
mov
repz
sbb
xchg
adc
out
jecxz
js
clc
add
mov
shrb
shr
and
fisttpl
enter
sub
pushf
loop
mov
xorl
fdivs
mov
out
push
imul
ljmp
lcall
negb
enter
cli
lret
jns
stc
pop
pop
inc
and
jb
sub
xchg
mov
ret
fnsetpm(287
mov
jo
pop
mov
dec
mov
pop
lods
icebp
aas
cmp
hlt
sahf
mov
sub
shll
mov
adc
push
shrl
cmp
xor
out
mov
mov
subb
xchg
adc
andb
sub
cmp
fidivrs
cwtl
cmp
jne
cwtl
out
lods
sti
pop
lcall
outsl
mov
xor
pop
or
movb
ja
adc
xor
inc
movsl
cmc
and
test
sub
xlat
roll
aad
cmp
ret
pcmpeqd
divl
add
fcompl
enter
imul
pop
fdivl
stc
std
add
pop
fnstcw
dec
out
mov
cmp
jnp
pop
add
sarb
mov
mov
movsl
inc
mov
in
sarl
dec
icebp
dec
cmp
mov
add
daa
jp
mov
movsb
sbb
mov
sti
insl
xor
xor
inc
xlat
ret
scas
imul
mov
out
and
xchg
dec
inc
push
dec
xor
imul
cmp
mov
imul
imul
pop
and
lahf
test
addr16
xor
out
and
test
jp
arpl
loope
and
push
pop
mov
push
aam
lret
popf
fcoms
jne
push
aas
stos
add
sbb
lea
rorl
push
lret
insl
cmp
addl
lcall
clc
jle
or
ds
shlb
adc
dec
movsl
add
sub
int3
jne
push
stc
inc
pushf
and
leave
jecxz
pop
outsl
adc
ffree
mov
dec
add
inc
sub
xor
ret
imul
cli
add
lcall
call
mov
ficomps
mov
aam
pop
cltd
push
int
pop
jl
dec
out
mov
sub
xchg
mov
fisttpll
pusha
mov
add
xchg
hlt
popf
jns
lea
inc
into
cmp
std
mov
pop
outsl
call
mov
lods
cwtl
pop
clc
sbb
out
inc
aas
mov
jo
push
pop
mov
popa
mov
add
xor
nop
jae
add
or
fidivs
outsb
add
xchg
mov
aam
lea
scas
inc
mov
inc
dec
push
add
adcl
xchg
mov
jle
push
xor
or
loop
popa
inc
adc
cmp
shl
ret
ret
fwait
mov
dec
ss
cmp
add
or
push
enter
cmp
add
add
ja
adc
les
push
jmp
cmp
out
cmp
sbb
mov
xor
ficoml
adc
xchg
push
in
stos
fisubrs
cmp
and
adc
mov
xchg
xchg
das
dec
daa
inc
xchg
fistl
mov
push
test
sbb
jnp
lret
mov
xchg
into
jp
inc
into
movsl
inc
xchg
push
jb
jle
sti
imul
ljmp
stos
sbb
dec
adc
jae
dec
int
loope
adc
aas
sub
pop
mov
mov
jne
gs
xorb
shll
ret
lds
dec
and
adc
fcomp
test
adc
inc
jbe
xor
es
xor
or
inc
call
imul
in
dec
lahf
inc
pop
push
cmp
inc
dec
sub
push
lcall
arpl
cmp
mov
sub
sbb
cwtl
and
push
in
pop
jecxz
jno
or
das
and
insb
iret
int3
aas
cmp
sti
jae
cltd
mov
cmp
ja
xor
scas
sahf
or
xor
stos
int
or
sub
xor
in
push
push
popf
cmp
cmp
shrb
stc
cltd
mov
or
lahf
rep
and
cld
push
fisttpl
lds
addl
sub
xchg
ja
orb
mov
and
jb
mov
pusha
xor
das
mov
stc
rorb
jno
pop
lods
pop
fwait
mov
xor
loope
cltd
imul
jbe
add
push
mov
mov
cmp
adc
xchg
ss
int3
or
test
push
pushf
insb
jle
mov
adc
inc
dec
push
push
mov
jns
in
push
jmp
popa
test
cmpsb
jmp
push
loopne
mov
lsl
idivb
push
lcall
inc
ss
dec
daa
in
imul
loopne
cwtl
xorl
sbb
out
mov
pop
es
pop
and
cmp
sbb
ja
adc
pop
clc
and
xchg
sbb
or
pop
mov
cmp
add
jge
pop
dec
or
lods
aaa
adc
lgs
push
xor
pop
mov
or
fmull
jl
cld
lds
ss
decl
lea
mov
fadds
shll
movsb
rcrl
inc
push
mov
ja
movsl
or
push
movsl
xchg
xchg
push
mov
fists
xchg
mov
sbb
sbb
mov
xchg
and
dec
pusha
fnsave
loope
lock
mov
pop
sbb
sub
ljmp
inc
sarb
dec
mov
or
inc
fwait
xchg
ret
repz
sub
dec
jo
ja
ds
push
jmp
dec
xchg
repnz
push
in
mov
fisttpll
mov
fldcw
scas
cmpsl
jo
jb
cmp
add
cwtl
lea
mov
into
pop
xor
cmp
jmp
pop
xor
push
lahf
mov
lods
sub
outsb
sub
cltd
mov
ja
jmp
jo
cmp
sbb
int
lods
and
pop
xchg
mov
push
popa
popf
rorl
pop
lds
in
adc
movsb
nop
jg
js
stos
add
pop
sarl
xor
jne
xor
cmp
add
cmpsb
aaa
pop
jmp
insl
inc
jns
pop
call
or
fnstcw
add
xor
cmp
lahf
sbb
add
inc
or
mov
xchg
repnz
dec
ficomps
cmpsl
shlb
mov
aad
lcall
add
pop
mov
adc
add
lea
inc
inc
sti
adc
rol
mov
es
sbb
and
sub
fdivrs
jmp
popa
gs
inc
sub
addr16
pop
jne
adc
ud0
mov
int3
lds
mov
ja
lahf
adc
movsl
pop
test
mov
into
sbb
cs
lcall
pop
adc
mov
shll
or
scas
sbb
jge
leave
popf
bound
sub
and
pop
dec
rcl
pusha
rorb
gs
mov
movsl
xor
jle
pop
lcall
push
mov
cmp
push
sarl
stc
insb
mov
fisttps
insb
lahf
sahf
or
xor
push
add
push
xor
adcl
jl
push
test
aad
out
push
mov
add
lahf
roll
fprem1
dec
push
xchg
aas
lret
clc
dec
movsl
jae
aad
mov
hlt
dec
ljmp
fsts
shll
sub
jbe
fdivrl
pop
dec
fwait
arpl
push
jp
pop
and
jno
lods
pop
rcrl
mov
aaa
loope,pt
ljmp
lret
cmp
mov
and
sbb
mov
fcmovb
aad
lods
int3
jnp
hlt
ljmp
cmovns
xchg
pop
mov
push
mov
prefetch
dec
xchg
push
add
jmp
xchg
sahf
jne
jg
pop
stc
push
dec
arpl
cmp
lret
ljmp
hlt
test
xchg
push
add
sti
addr16
out
imul
and
punpckhdq
das
fiaddl
sbb
push
pop
mov
psubw
pop
test
add
pop
mov
std
jp
mov
add
xchg
aas
xor
and
mov
and
shrb
xlat
cltd
xchg
mov
call
icebp
cs
nop
add
fmull
cmpsb
scas
push
push
pop
sbb
movsb
mov
aaa
push
push
mov
fcoml
int3
mov
jl
dec
js
sbbl
xor
push
hlt
push
or
and
inc
adc
add
rolb
inc
nop
sbb
shll
sub
dec
sbb
sar
add
xchg
push
sahf
jmp
stos
fld1
jge
bound
add
sbbb
adc
dec
xorl
inc
outsl
pop
mov
lds
sbb
cmc
inc
fstps
outsb
enter
add
daa
repz
repnz
dec
dec
ja
lods
les
cmp
call
call
loop
mov
pop
int
sbb
cmc
lahf
jecxz
je
dec
lds
sahf
addr16
inc
into
pop
sub
sub
adc
shlb
fnstsw
fstps
loop
sbb
mov
and
lahf
loop
repz
lods
mov
lock
popf
daa
je
jle
xchg
in
std
and
or
pop
icebp
xchg
aas
outsb
test
xor
stos
scas
out
add
pop
sahf
sub
ja
fistpl
fcoms
jge
por
add
lods
push
icebp
add
int
fsubrp
adc
gs
and
push
rcll
or
inc
movsl
push
adc
xchg
inc
inc
test
jecxz
mov
fwait
mov
sbb
adc
js
std
jge
and
lahf
fnstsw
and
sub
popa
lods
icebp
cld
jp
push
xchg
or
push
jmp
adc
cmp
jae
and
inc
ret
mov
loop
test
imul
adc
aam
out
mov
push
cmp
js
cmovae
push
test
sub
or
nop
jbe
adc
and
mov
test
iret
call
mov
push
sub
add
sub
lret
or
outsl
mov
mov
pop
sub
mov
xchg
leave
loope
xchg
mov
pop
adc
movsb
adc
jmp
scas
ja
sti
inc
enter
jl
jns
mov
cltd
out
cli
sbb
pop
ret
insb
push
andb
jne
push
popf
dec
sbb
stc
arpl
sbb
notl
inc
jecxz
cld
xor
and
scas
jg
mov
fucom
pushf
jmp
outsl
cltd
xor
add
lea
inc
rclb
mov
psrlw
and
mov
jno
dec
cs
les
jno
in
in
or
mov
dec
pop
mul
pop
xor
adc
arpl
sub
pop
js
das
or
cmp
mov
outsb
cs
aam
fwait
mov
cld
xor
inc
lcall
mov
daa
jmp
addr16
jmp
pushf
and
mov
dec
xchg
sbb
adc
and
cmp
iret
jmp
cmp
sub
mov
jge
inc
daa
sbb
and
cli
ja
adc
and
push
popf
push
or
insb
xchg
adcl
push
sbb
out
stos
mov
inc
add
inc
xor
pushf
sbb
xchg
test
and
mov
mov
inc
out
fisubl
out
sbb
ljmp
sbb
popf
das
pop
sbb
loopne
sub
push
sub
ds
cs
stos
test
jbe
outsl
in
mov
mov
push
int3
push
sub
ds
lods
inc
push
bnd
pop
jb
loope
mov
push
mov
xlat
cmpsw
xchg
dec
mov
aad
push
xchg
pop
or
dec
mov
adc
dec
imul
sbb
jnp
pop
mov
sti
pop
sbb
outsl
inc
psubsw
nop
push
mov
pop
mov
hlt
scas
adc
mov
push
add
js
dec
inc
lock
scas
jb
pop
adc
dec
dec
mov
mov
pop
dec
enter
push
pop
jmp
fists
inc
inc
pushf
clc
shlb
mov
push
das
lock
icebp
xor
pop
sahf
movsb
jns
mov
cli
xorb
in
dec
and
cmp
inc
cmc
and
xchg
shl
jo
xchg
jno
add
repnz
and
inc
test
mov
ljmp
nop
in
into
mov
pop
aam
enter
xor
fildl
or
sbb
mov
and
pop
cs
sub
out
stos
test
and
pop
xchg
sbb
cmp
std
ret
aas
push
mov
fldl2e
mov
movsb
lock
sub
or
mov
pusha
dec
cmc
test
or
jmp
pop
mov
leave
cmp
push
pop
pop
test
mov
jo
lret
jecxz
mov
lods
and
cltd
mov
add
pusha
lods
daa
mov
std
or
pop
adc
pop
pop
cmpsb
nop
sbb
adc
cmp
push
sbb
inc
imull
stos
mov
jmp
out
push
cmc
and
add
push
stc
add
testb
in
mov
rcll
jle
aas
mov
testl
jmp
aaa
arpl
loope
and
lds
cmp
inc
mov
sti
sbb
jb
ja
aas
into
lods
mov
sahf
in
scas
cmp
jmp
push
pop
pop
or
cmp
jo
xchg
pop
fimull
mov
in
and
push
lods
ret
xchg
pop
cli
add
push
xor
xchg
out
test
push
fsubs
mov
dec
push
je
setl
add
push
cmp
popaw
stos
imul
jge
push
fwait
mov
dec
je
cmc
pop
mov
adc
push
pop
fists
lods
cmp
fdivs
xchg
xor
mov
insb
xchg
push
cmp
movsl
fbstp
xor
and
insb
xchg
add
stc
pop
jg
lock
enter
mov
inc
jae
xchg
ja
fistl
lods
stos
or
lods
cmp
adc
push
js
aas
pop
scas
mov
aaa
orb
leave
scas
insb
pop
call
cltd
popf
and
push
lods
mov
push
cltd
movsl
dec
int3
fstl
xchg
ja
dec
mov
xchg
dec
jl
std
and
test
fmuls
std
jmp
fcompl
ljmp
pop
stc
call
shll
fdivrl
adc
jg
sub
aas
mov
pop
mov
mov
mov
aad
repnz
inc
iret
fldenv
dec
push
push
lret
mov
jne
jnp
jb
or
outsb
dec
aaa
imul
fiaddl
add
jns
lea
cld
clc
cmp
add
es
mov
inc
xor
mov
pop
push
jp
aam
mov
mov
icebp
and
imul
pop
jg
test
xchg
stos
push
xor
push
sahf
stc
std
dec
xor
mov
into
test
scas
jnp
sahf
leave
fistl
lcall
adc
pushf
js
add
cmpsl
addr16
mov
test
inc
jns
inc
call
push
push
sbb
jae
aaa
add
imul
mov
jle
orb
jnp
sbb
cld
cmp
sbb
lahf
fldl
xchg
fidivrs
or
lcall
mov
fwait
mov
adc
mov
mov
andb
cmovp
mov
je
and
inc
jns
test
dec
dec
add
arpl
dec
out
mov
pop
xlat
xor
mov
inc
ljmp
shrl
jae
scas
add
xlat
dec
mov
and
jnp
inc
sbb
or
loop
stos
push
and
repnz
or
mov
outsl
add
or
scas
in
push
xor
repz
and
adc
xor
jbe
imul
dec
dec
repz
ss
and
push
orl
jg
cmp
clc
dec
sar
xchg
jo
or
sub
xchg
mov
adc
stos
pop
jns
push
push
or
dec
or
mov
adc
addb
inc
inc
xor
push
add
outsb
push
push
cltd
cmc
lock
mov
fsubp
insb
int
pop
push
or
outsl
pop
cli
mov
fs
xor
jno
shrl
xor
sti
test
or
mov
jecxz
add
test
xchg
enter
loope
cmpsl
dec
icebp
fsubr
stos
jb
jo
fildl
scas
adc
mov
mov
pop
loop
cld
scas
jl
nop
xchg
stos
add
jle
xor
pop
mov
fmuls
decb
add
pop
popa
xchg
pop
jne
mov
movsl
scas
dec
out
out
push
mov
imul
icebp
push
or
inc
loop
scas
ret
enter
inc
mov
int3
insb
gs
jbe
scas
fldl
push
mov
mov
adc
add
fsubrs
lds
pop
sbb
xchg
in
jbe
and
push
or
rcrb
jmp
mov
inc
inc
mov
test
jb
and
sbb
cwtl
stc
dec
mov
jecxz
cmp
lret
dec
sub
stc
arpl
out
add
lods
fistps
lock
jnp
mov
add
push
das
sub
add
dec
mov
dec
lret
adc
mov
lods
pop
cli
rol
mov
adc
or
out
dec
mov
mov
rorb
bound
add
lds
or
nop
mov
movsl
rorb
cmp
push
rorb
inc
cmp
and
pminsw
lock
pop
or
fildl
lods
lea
xor
clc
in
xor
lret
sbb
lock
insl
push
adc
mov
ja
xchg
or
popf
and
jb
mov
mov
insb
sbb
push
je
lahf
enter
fnsetpm(287
pop
hlt
mov
push
or
out
add
sub
or
mov
add
in
shlb
scas
add
cmp
inc
js
int3
test
mov
dec
call
sub
daa
daa
js
aas
pop
fistpll
dec
ror
mov
pushf
into
mov
int3
xor
push
dec
cmpb
ficoml
js
les
xlat
xchg
add
jg
mov
jae
pop
dec
sbb
xchg
enter
mov
push
jo
mov
sub
push
popf
test
mov
inc
lea
xor
fidivrl
insl
sti
dec
pop
jp
xor
mov
sub
inc
dec
jp
repnz
fisttpll
in
fsubs
fidivs
call
movsl
mov
fstp
or
imul
arpl
lods
rcl
adc
jns
push
dec
into
xor
push
dec
je
les
or
stc
pop
xor
popf
pop
add
jno
popa
jae
add
test
lahf
sbb
mov
jp
movsl
dec
rcrb
test
in
test
nop
xchg
pop
repnz
mov
mov
mov
mov
test
pop
mov
xchg
leave
adc
inc
into
xchg
repz
aam
xlat
jnp
add
inc
pusha
xor
cld
lods
sbb
push
repnz
negb
adc
outsl
and
movsl
push
push
iret
jmp
pop
mov
shrl
inc
iret
mov
xor
shll
sbb
out
or
fstl
adc
in
pop
pop
push
popa
cli
shrl
cmc
out
loop
mov
and
mov
loopne
int3
xorl
pop
or
nop
mov
cmp
shl
mov
pop
addb
and
loopne
or
mov
adc
jg
lahf
lds
clc
pop
adc
jnp
inc
mov
add
int
jno
xchg
dec
rclb
xchg
sti
jecxz
inc
mov
sub
push
inc
sub
stc
adc
add
ljmp
xor
mov
mull
subl
push
movsl
xor
les
ss
cwtl
stos
push
clc
loopne
or
cmp
push
mov
pop
mov
cwtl
test
mov
inc
js
sar
pop
xor
fcomi
lock
jo
pushf
pop
stos
cli
aas
insl
int3
fldl
sub
sub
movsb
daa
or
call
fs
push
cwtl
jns
scas
lea
push
divps
pop
fiaddl
test
shr
popf
adcb
push
cmp
cmpsb
std
pop
xchg
push
icebp
cmp
movsl
mov
out
mov
dec
xchg
cmp
mov
inc
mov
jp
push
call
jmp
movsl
in
cmp
lock
imul
and
cltd
jno
int
jbe
push
js
dec
fwait
mov
popf
mov
lds
sbb
jmp
fisttps
jle
xlat
adc
test
ljmp
push
push
or
ret
or
imul
cmp
nop
rolb
ss
jl
pop
scas
push
xchg
pop
jb
adc
orb
mov
or
and
movsb
lret
sbbb
mov
xchg
out
pop
jae
mov
lret
or
or
jb
xor
push
xchg
sub
in
xchg
mov
jmp
cmc
mov
cmc
ret
push
pop
out
ja
leave
pop
roll
mov
add
xor
mov
jno
dec
inc
icebp
mov
loopne
push
inc
mov
mov
inc
jp
addr16
test
pop
gs
add
and
fdivrl
mov
sub
inc
adc
mov
xlat
popa
mov
in
int
lret
jle
adc
sbb
inc
in
mov
ret
out
mov
xchg
pop
or
push
inc
imulb
fsubr
cmpsb
fmull
fsubr
sbbl
xorb
and
in
js
ds
sub
shlb
pop
lock
into
push
lods
ror
or
jmp
negl
cmp
pop
test
inc
mov
pop
cmp
testl
cli
movsl
popf
out
lcall
add
jl
fs
fisubs
inc
jns
adc
mov
int3
adc
mov
sub
dec
call
test
es
mov
mov
dec
in
push
frndint
xor
and
jl
push
inc
testl
cmp
inc
or
test
xor
insl
inc
es
popa
mov
inc
das
jo
adc
lahf
xchg
cld
in
loopne
push
arpl
sub
mov
dec
xchg
add
push
ret
add
jg
xor
jg
xorl
dec
sub
rcrl
cmpsl
cli
fldl2e
fstpt
pop
lret
clc
add
mov
inc
mov
jecxz
sbb
cmp
mov
sbb
cs
lods
mov
jne
jmp
loopne
hlt
mov
aaa
adc
rcl
lret
mov
jmp
sbb
ja
jae
mov
jnp
lds
iret
push
xchg
cmp
xlat
hlt
cmp
scas
inc
dec
lret
cmp
dec
xor
pop
mov
mov
fistps
fs
cmc
pop
rcll
cmp
insb
xchg
mov
movsb
or
clc
inc
leave
mov
imul
stos
std
std
test
push
adc
clc
lret
cmc
nop
mov
and
jecxz
jb
jle
inc
lahf
and
popa
repnz
mov
mov
push
add
push
pop
lret
pop
stos
mov
imull
test
jp
imulb
sti
and
and
and
sysenter
nopl
ljmp
mov
adc
add
xchg
push
fwait
and
mov
je
xor
jbe
pop
in
xor
sbb
mov
push
jecxz
mov
pop
mov
push
std
shrb
mov
into
sarb
xchg
aam
or
xchg
fcoml
jp
inc
movb
pusha
int
push
shll
mov
ja
popl
dec
lods
jo
add
mov
pop
fistpl
jnp
repnz
mov
push
mov
pop
xchg
enter
clc
aas
daa
jmp
cmp
push
in
fnstsw
gs
pop
cmpsl
stc
xlat
lret
and
mov
arpl
add
mov
cwtl
fstpt
lods
sub
aam
lock
insb
xor
ss
jbe
jae
fidivrl
cmpsl
mov
xchg
mov
stc
mov
inc
scas
lret
sub
imull
inc
mov
adc
sub
sahf
inc
or
cmp
xchg
jg
cltd
xor
imul
sbb
fs
out
pop
addb
mov
adc
adc
pop
pop
popa
mov
nop
xor
mov
inc
push
pop
mov
int
jns
mov
insl
rcrl
mov
aas
mov
pusha
lcall
movsb
pop
fcmovnu
movsb
out
in
mov
stos
popa
lcall
popa
add
mov
adc
cs
and
lret
fiadds
out
pop
fsub
dec
mov
inc
test
xor
cltd
sbb
sarl
pop
adc
mov
arpl
pushf
dec
or
mov
popf
mov
mov
jbe
add
aad
test
fs
cmpsl
jg
mov
cmp
inc
inc
jmp
mov
pop
jecxz
cmpsl
loop
clc
stc
inc
adc
jnp
ffree
sbb
adc
jns
push
mov
jle
lock
adc
add
or
inc
pop
shlb
das
arpl
jnp
mov
mov
xchg
and
jp
fisubrl
inc
inc
loopne
pop
sub
jns,pn
mov
push
and
adc
jg
lds
call
lret
xchg
fs
cli
add
xchg
fwait
add
int
pusha
sbb
cmpsb
clc
push
mov
and
xchg
hlt
sbb
mov
ds
and
or
sub
push
jle
xchg
adc
and
xlat
ds
jnp
dec
out
xor
lds
and
xchg
loope
in
pop
jbe
sbb
and
push
repz
cmp
sbb
push
out
cwtl
dec
fdivl
aaa
or
repnz
je
lret
sbb
mov
icebp
or
xchg
repz
ret
addb
insl
mov
adc
inc
sub
mov
stos
add
pop
int
ret
outsl
push
mov
ds
idiv
xor
or
scas
mov
cmp
loopne
pop
cs
dec
shrb
lret
fwait
jnp
std
mov
dec
out
cmp
push
inc
pop
dec
out
pop
pop
loop
lret
add
and
xchg
sbb
roll
mov
cmp
xchg
cmp
fmul
push
dec
ret
pop
lret
pop
xor
lods
aad
scas
push
popa
adc
cmpsl
inc
jnp
jmp
scas
loopne
out
lea
cmp
pushf
sbb
out
jnp
push
scas
jnp
push
pop
push
out
rol
out
xchg
cmp
imul
cmp
adc
cmp
sahf
cli
xor
push
add
inc
or
push
pop
jp
push
into
hlt
into
ret
xorl
std
mov
cmp
sub
ss
mov
in
jb
inc
sub
pop
inc
aad
jmpw
hlt
adc
sbbb
mov
fwait
scas
cmpsl
dec
cmp
add
inc
in
pop
rclb
or
xlat
fidivs
lahf
dec
jo
aaa
in
hlt
out
push
mov
and
sub
jnp
cmpb
push
dec
add
sub
and
dec
mov
lock
lods
ret
fsubr
insl
adc
ffree
sbb
dec
and
into
and
mov
out
jmp
into
aaa
xchg
dec
xchg
pop
fst
sti
sub
dec
mov
aaa
out
out
insb
je
push
adc
cmp
jl
mov
je
out
pop
pop
ret
js
sahf
xor
add
pop
xchg
rcr
dec
xchg
and
in
stc
dec
and
hlt
inc
ss
frstor
aas
aas
out
xlat
nop
sbb
les
gs
sarl
data16
insb
jecxz
pop
xchg
and
xchg
pop
push
rcl
repnz
add
sub
dec
xchg
and
cmp
pop
test
shlb
je
add
dec
mov
and
sub
lods
iret
jge
cwtl
es
mov
dec
xor
push
and
fcmovbe
fisttps
mov
je
std
push
shr
xchg
daa
test
add
insl
xchg
cmp
lcall
xchg
dec
adc
lods
and
es
daa
int3
sbbb
sbb
sbb
push
pusha
cmp
or
cs
sub
or
in
dec
or
pop
dec
inc
inc
push
or
xchg
mov
rorl
dec
cmc
and
div
adc
hlt
sarb
aam
shlb
scas
or
lahf
mov
pop
push
outsl
push
xchg
or
mov
popf
dec
divl
fs
mov
arpl
or
cmp
jo
mov
sub
pop
or
out
rcrl
pop
add
in
jo
cmpsb
mov
push
frstor
push
nop
inc
pop
add
fidivl
fwait
popa
fmuls
popf
pop
stc
push
xlat
jmp
fiaddl
in
and
jbe
fwait
clc
add
push
and
pop
outsl
jbe
cmp
cli
es
jae
das
xchg
adc
lea
pushf
ljmp
adc
mov
cmp
cmpsl
inc
jge
pop
imul
or
jb
scas
mov
data16
xor
cmp
pusha
dec
adc
xor
push
popf
and
data16
sti
fwait
scas
cld
fnsave
jno
xor
mov
xor
movsl
push
dec
movntq
dec
add
cmp
push
dec
cmp
addr16
clc
stos
xchg
pop
lea
inc
ja
iret
push
xchg
inc
add
test
out
jae
pop
ds
stos
testb
lret
inc
jae
jp
mov
sahf
das
lret
jb
mov
push
sbb
and
movsl
push
or
repz
cmp
mov
int
ficompl
ret
and
add
movsl
imul
aam
pop
jo
inc
jb
push
ss
leave
adc
mov
mov
sbbb
mov
jno
sub
pop
mov
sub
lea
ds
gs
int3
stos
or
mov
sub
flds
cmp
cmp
xor
adc
insl
jmp
cmc
in
or
aas
fdiv
sub
adc
add
aaa
lahf
jl
jno
shl
jle
fwait
iret
das
hlt
sbb
and
inc
xchg
sbbb
scas
dec
adc
js
xchg
lods
dec
insb
addr16
adc
jge
in
add
cmp
in
inc
test
push
sbb
add
ljmp
lea
mov
cmp
mov
cmpsb
andl
test
adc
add
movsb
cli
and
add
scas
out
test
nop
adc
mov
pop
and
mov
aas
loope
testb
cmpsl
aam
adc
cmp
cmpsb
ret
pop
in
mov
mov
cmp
enter
cmpsb
inc
ss
js
or
dec
sub
mov
sub
mov
fs
push
cli
adc
inc
stc
hlt
ja
or
pop
scas
out
aam
pop
push
mov
adc
xchg
or
je
xchg
add
cmp
jo
pop
iret
repnz
mov
push
push
pop
test
fdivrp
testb
mov
sbb
add
notb
sub
lret
mov
test
xchg
loope
aad
les
jns
ret
sub
rcr
or
mov
jl
cmp
mov
js
mov
jle
imul
call
lock
dec
adcb
ljmp
xchg
xchg
inc
or
int3
mov
data16
jo
gs
push
scas
nop
pop
push
enter
lahf
xor
sbb
cmp
mov
fwait
xor
mov
mov
bnd
mov
mov
mov
lcall
rcll
sti
aaa
in
dec
clc
xchg
orb
mov
mov
daa
mov
inc
std
inc
jg
cltd
mov
das
xor
fs
mull
jns
lods
inc
jp
mov
insb
je
sarl
insb
insb
sbb
outsl
aas
fnstcw
jp
aas
mul
loopne
mov
pop
sbb
sti
test
sar
dec
roll
in
mov
roll
stos
cs
enter
lea
pop
loopne
loop
pop
adc
and
movsb
pop
xlat
sub
cli
add
xchg
sbb
push
xor
push
push
mov
jmp
shrl
add
cwtl
cmp
les
or
push
add
pop
shrl
insb
outsl
inc
mov
cltd
into
pop
mov
xchg
lods
lds
outsl
and
dec
xlat
sub
aam
mov
sbb
jo
cwtl
sbb
insl
in
loopne
mov
div
mov
popa
out
bound
loopne
jl
daa
enter
xor
stc
cli
scas
into
cltd
insl
outsl
and
or
imul
nop
mov
ljmp
aad
sbb
inc
inc
mov
and
push
in
jnp
push
enter
adc
out
jle
push
incl
fldcw
mov
jo
or
nop
xlat
test
adc
mov
xchg
adc
cmp
cmp
cmpsl
and
push
ljmp
mov
add
push
scas
sub
and
inc
leave
cld
push
loopne
push
xchg
fdivl
pop
jns
mov
insl
out
jo
dec
push
loopne
test
jg
and
stos
cmp
mov
and
notl
aas
lea
repnz
xor
inc
scas
push
leave
mov
out
pop
sbb
sbb
jecxz
jns
inc
adc
insl
in
dec
add
jmp
xchg
ret
xchg
dec
repnz
cmp
and
lds
les
push
adc
cmc
sbb
ret
sub
or
push
shrb
mov
aas
mov
lock
fs
imul
les
jmp
imul
sahf
xchg
jmp
int3
ret
lea
sub
std
sbb
mov
into
rol
xchg
sub
push
cmp
fsubrl
push
xchg
push
push
lea
hlt
push
sub
bnd
or
dec
bnd
add
stc
jae
mov
jo
shrl
jmp
ljmp
jnp
jae
dec
scas
lcall
mov
xchg
bound
mov
sub
imul
fstl
lcall
add
jge
fnstsw
and
lcall
movsb
sbb
jne
pop
dec
das
jg
xor
repnz
loopne
stos
cmpsb
cld
mov
insb
dec
fwait
jne
lahf
dec
fs
repz
ret
in
add
pop
add
movsb
pop
loope
add
lret
iret
push
jno
test
push
insl
pop
jge
adc
add
fsubrs
into
leave
xlat
mov
push
mov
jge
test
arpl
pop
adc
mov
mov
and
mov
enter
test
je
ret
xor
adc
fcmovne
push
aas
lret
jge
cs
jecxz
aam
aas
sbb
out
lods
cmp
ret
cmp
ds
popa
mov
enter
call
mov
sbb
loope
fisubs
mov
js
inc
push
test
xor
stos
push
push
ds
iret
gs
jecxz
js
jmp
shll
sub
xchg
mov
notl
hlt
imulb
mov
adc
jne
pushf
and
hlt
mov
pop
aam
lea
xchg
mov
pop
js
call
iret
ficoml
loopne
iret
rclb
lods
push
ret
xchg
mov
mov
jbe
loope
mov
cmpsl
push
shlb
in
ud1
movsl
adc
jne
es
les
mov
jl
movsl
vmwrite
lret
into
testb
pop
mov
pop
cmp
data16
push
stos
dec
push
push
adc
xchg
out
push
mov
ja
gs
mov
mov
or
push
stos
xor
mov
out
mov
das
clc
inc
push
inc
in
rclb
pushf
mov
ljmp
or
cwtd
cld
mov
jmp
jecxz
jmp
ss
js
call
jp
jge
outsb
sub
mov
adc
shrl
cs
stos
dec
shl
rcr
mov
mov
pop
jae
or
pop
into
xchg
jmp
dec
add
lods
out
mov
std
aaa
jge
mov
js
repz
lods
mov
adc
xchg
mov
gs
ljmp
stos
xchg
dec
daa
jecxz
cli
jne
loope
mov
shrb
scas
sbb
lcall
sub
push
popf
and
mov
lcall
fucomip
and
inc
sbb
sbbl
test
push
test
dec
sbb
leave
outsb
sbb
int
xchg
orl
clc
pop
inc
pop
adc
sub
adc
jnp
push
xchg
pop
and
rolb
sub
cwtl
inc
add
sti
pop
sub
movups
sbbl
es
iret
xor
int3
push
lcall
jbe
and
cmpsb
lods
adc
xchg
adc
push
in
adc
ret
iret
out
sbb
gs
insl
mov
roll
leave
sarl
inc
test
enter
inc
ret
pop
xor
push
pushf
pop
mov
mov
cltd
jg
dec
push
and
add
popa
clc
mov
pushw
lea
pusha
push
add
jo
in
nop
dec
and
xor
loopne
leave
scas
addr16
mov
fdivrp
adc
mov
scas
or
push
jnp
mov
cltd
lcall
cmp
scas
arpl
adc
outsl
std
pop
lock
gs
cli
out
sub
dec
outsl
xchg
out
push
sbb
call
into
or
into
mov
loop
xchg
adcl
bnd
popf
push
mov
rcrb
lcall
inc
fnstcw
pop
flds
addl
mov
popa
jle
leave
jns
lret
dec
call
push
mov
fistl
jg
mov
hlt
fs
dec
dec
es
mov
outsb
clc
pushf
clc
sub
int
out
ja
lea
test
cmp
mov
fcom
lds
mov
jbe
popa
mov
pop
dec
push
push
mov
push
movsb
jo
inc
jo
or
cwtl
cltd
or
cmpsb
add
jno
xor
popf
fnstenv
outsb
jbe
xor
daa
ja
push
test
cs
mov
pop
mov
cld
jle
aam
rorb
pop
push
insb
xchg
sub
fwait
dec
xchg
mov
rcrb
mov
sahf
and
movsl
mov
neg
pushl
and
ret
insl
xlat
cmp
outsl
inc
and
pop
and
mov
aas
and
mov
push
and
xchg
push
cmp
mov
inc
add
lock
inc
push
ret
flds
out
clc
cli
push
cmp
movsl
pop
loope
cltd
mov
call
popa
es
jo
clc
dec
ss
cmpsl
leave
mov
les
push
mov
in
aam
adc
movsl
adc
mov
push
xor
rcrl
cmp
in
flds
mov
ljmp
pop
pop
push
cmp
cli
adc
pop
lcall
push
pop
sbb
xlat
cmp
fnstcw
sbb
imul
jge
mov
insb
inc
stc
dec
filds
dec
or
mov
or
lds
hlt
dec
lock
mov
add
ja
test
arpl
jmp
insl
pop
or
adc
xchg
cmp
xchg
mov
aas
and
inc
sbb
jl
sbb
adc
ljmp
mov
nop
jnp
fstl
xchg
cmc
xchg
mov
xor
inc
xlat
cld
mov
xchg
mov
sub
and
push
stos
inc
mov
xchg
test
push
inc
mov
popa
adc
and
pop
stc
pushf
testl
test
scas
int3
push
push
fnsave
xor
gs
rcl
fisttpll
adc
mov
cltd
les
add
jno
xchg
fstl
pushf
popf
add
mov
pusha
mov
inc
mov
ss
adc
bound
or
movb
cwtl
jl
jle
hlt
pop
push
dec
inc
xchg
adc
push
sbb
jle
xlat
mov
clc
nop
lods
fildl
mov
test
sti
sbb
mov
mov
sub
sub
lret
or
push
in
and
mov
stos
stc
mov
xchg
mov
pop
cmpsl
add
test
cli
arpl
pop
add
cli
lock
xor
or
push
push
and
jne
pop
mov
jno
sbb
sub
roll
lods
or
shrl
cmpb
or
lock
das
je
sub
setae
pop
sbb
mov
fs
xlat
mov
sti
fidivl
fistps
mov
scas
fsub
xor
inc
pop
in
ja
inc
jb
stos
mov
push
push
daa
mov
subl
xchg
pop
inc
inc
ret
int
pop
push
mov
pop
fsubrs
jnp
jle
jb
gs
pop
aad
sub
adc
xlat
nop
push
xchg
xor
lds
ljmp
inc
xor
push
push
loop
mov
insl
cltd
fsubrp
and
mov
xchg
add
int3
cs
orl
or
and
jae
fnsave
cmp
inc
cmp
xchg
lods
fimull
inc
dec
lahf
push
jne
mov
cmp
lock
cli
push
std
orl
cmp
pop
pcmpeqw
cmp
lahf
out
stc
mov
mov
sub
out
mov
out
out
bound
out
sub
repz
xor
xchg
xchg
sub
jle
arpl
pop
mov
adc
adc
les
ss
adc
cmp
add
mov
cmpsb
imul
adc
in
pop
movsb
mov
or
sti
and
add
cld
ja
into
inc
cmp
pusha
pop
movsb
cmc
adc
ljmp
adc
cmpsl
stos
xlat
inc
xor
mov
hlt
or
add
mov
rorw
cmp
cmp
call
jl
jp
dec
jecxz
shr
aaa
imul
cli
pop
mov
jge
outsb
orl
pop
jp
das
fistpll
lahf
or
xor
mov
push
or
arpl
and
push
scas
and
push
ror
std
pop
xor
and
inc
lds
and
mov
into
fimuls
arpl
inc
sbbb
xchg
adcb
sbb
mov
stos
aad
lahf
mov
pop
xchg
and
mov
lods
xchg
jnp
push
iret
inc
fdiv
mov
jae
lea
ret
cmp
adc
fldt
gs
mov
cmp
mov
and
addb
scas
and
psubusb
stc
cmp
popa
ljmp
cwtl
dec
pop
pop
ljmp
ja
cmp
mov
in
pop
int
inc
push
pop
sub
idivl
sbb
cmpsb
add
mov
int3
cs
adc
push
and
imul
mov
dec
bound
fwait
and
cmp
aaa
jae
push
shlb
jmp
sbb
icebp
mov
add
mov
cmc
mov
repnz
insl
fildll
xchg
dec
aad
push
les
inc
sub
mov
and
notl
add
int
xchg
pusha
hlt
mov
pop
pop
dec
jno
das
scas
mov
xchg
mov
mov
push
scas
xchg
sub
xchg
cmpsl
outsl
mov
aaa
js
vpunpckhdq
mov
xor
pusha
mov
leave
sarl
and
jmp
mov
rorl
divl
aad
adcb
into
movsb
imul
mov
and
jns
out
out
test
push
pop
fnstenv
mov
and
clc
push
data16
inc
fdivrp
inc
lea
and
cmp
pop
popa
jle
fld
or
jg
pushf
lods
ret
jg
sub
jns
mov
rcrl
into
or
xor
and
lret
mov
inc
js
dec
and
mov
popa
inc
jecxz
inc
rorl
sub
repz
mov
push
and
push
jg
pop
ds
jl
cmp
int3
jo
xchg
add
outsb
roll
inc
or
mov
xchg
mov
pop
fdivr
popf
mov
into
shr
mov
jl
adcl
lcall
hlt
push
inc
xor
lods
cmp
fsubl
and
mov
repnz
enter
test
repnz
push
cli
bound
xchg
popa
loopne
fdivl
mov
cwtl
adc
xchg
ja
or
in
mov
cmc
inc
xchg
stc
cs
lods
mov
or
sti
dec
jle
in
dec
sub
push
das
shll
inc
push
cmp
sub
jns
lret
imul
pop
ss
or
inc
jp
out
pusha
xor
out
add
arpl
push
enter
inc
sahf
mov
movsl
push
dec
in
into
jl
cs
xchg
cwtl
add
pop
and
xchg
and
inc
mov
push
xlat
pop
add
and
mov
cmpsb
pushf
dec
pusha
xorb
jmp
or
and
mov
and
sub
mov
leave
addl
mov
dec
pop
inc
jmp
inc
jns
lcall
dec
mov
pop
and
jb
mov
shl
dec
mov
dec
xchg
xchg
push
fiadds
rcr
push
xor
stos
scas
mov
iret
cs
cmc
push
mov
cltd
xor
add
sub
xchg
sbb
sti
mov
test
cmpsb
cld
leave
ljmp
or
fsin
dec
aad
lahf
or
in
stc
fbld
adc
cmpl
rcrb
mov
xchg
add
adc
jns
repz
inc
jo
pusha
add
mov
cmpsb
call
mov
and
shll
mov
into
aam
insl
pop
mov
repz
cld
pop
and
xlat
aaa
fistl
scas
pushf
test
clc
aaa
outsl
push
inc
xor
xlat
adc
jne
dec
mov
insl
cmc
sub
aad
fldl
adc
jb
movsb
xchg
jp
push
insb
inc
aam
scas
fcmovnb
push
fstpt
sahf
inc
rcl
push
cmpsb
scas
pop
inc
out
or
fildl
sub
mov
pop
jb
sbb
mov
fwait
scas
ja
mov
sbb
push
fdivrs
and
or
dec
adc
nop
sbb
mov
lret
push
popf
cltd
out
mov
roll
cs
mov
push
repnz
pop
rorb
rcl
jp
bound
rcrb
jp
shr
sub
out
and
adc
scas
mov
and
hlt
mov
out
aam
sub
xchg
lods
xor
into
mov
adc
sbb
kmovb
mov
icebp
mov
jl
ret
je
daa
mov
shrl
dec
aas
mov
movb
mov
sar
mov
mov
mov
cwtl
mov
sbb
push
or
inc
cltd
xor
test
jbe
rcrb
or
mov
test
das
jae
cmp
movsb
cmp
xchg
je
dec
aam
enter
clc
std
inc
and
fucomip
jl
into
out
pop
mov
pop
xor
or
add
push
sub
xlat
sub
push
daa
and
inc
iret
std
negb
push
addr16
arpl
dec
orl
nop
adc
xor
or
cmp
and
mov
ds
shlb
adc
pop
shll
cmp
ss
or
cmp
scas
push
mov
out
subb
adc
orl
mov
dec
lret
int3
and
mov
xor
fists
pushf
in
outsb
flds
jnp
inc
adc
mov
mov
es
lods
jne
mov
ret
out
das
inc
popa
in
or
aad
jae
inc
mov
fisttpll
pop
test
xchg
jae
mov
pop
lods
cmp
xchg
adc
jbe
inc
data16
arpl
aam
mov
sbb
scas
and
les
mov
sub
mov
or
das
jb
ret
cmpps
adcb
das
sbb
pop
fidivl
adc
addb
mov
add
movsb
cmp
shrb
push
addb
mov
movsb
sbbb
xchg
or
sbb
fstl
pop
dec
inc
lds
aam
insl
loopne
cmp
pop
ficomps
insb
in
orl
lret
jp
movsl
mov
adc
call
mov
data16
andl
cmp
imul
imul
ret
stos
mov
adc
test
mov
sbb
mov
sbb
add
jbe
movsl
xchg
rcrb
lods
jecxz
mov
outsb
mov
cs
add
es
sub
dec
jo
jg
or
and
cmpsl
stos
jmp
cmpsl
adc
inc
push
adc
ljmp
cmp
test
movsb
or
inc
cli
push
ss
pop
pop
pushf
cmp
and
daa
cmp
push
movsl
lods
mov
fdivl
adc
pop
aas
mov
sbb
shl
ja
sti
stos
cmp
xor
cs
repnz
bound
popf
xchg
jmp
pop
iret
dec
call
or
and
xchg
dec
adc
out
fwait
out
mov
sbb
and
cmp
push
loop
arpl
fwait
outsl
sub
push
or
shrb
or
push
push
icebp
es
xor
imull
sti
pushf
jecxz
ret
push
mov
insl
mov
jns
mov
cmp
or
push
addb
xchg
push
lods
pop
sbb
div
imul
cmp
cld
data16
gs
inc
and
mov
test
inc
adc
pop
je
jl
mov
dec
fdivrp
out
sbb
push
iret
push
sbb
data16
into
test
add
jg
xchg
mov
ss
fcmovb
mov
mov
mov
push
ljmp
sahf
sub
orl
or
pop
or
push
test
inc
insl
cs
enter
add
pop
or
repz
mov
mov
ss
shlb
lret
dec
hlt
and
mov
cmp
dec
inc
xor
dec
mov
test
xchg
movsb
cmc
repz
test
xor
jecxz
testb
daa
inc
aaa
shl
or
adc
sub
adc
jns
inc
jecxz
lret
cmpsb
sbb
out
pushf
adc
sbb
cli
test
xchg
adc
into
sahf
jecxz
adc
addr16
out
xorl
popw
mov
scas
dec
enter
push
hlt
mov
icebp
lods
aaa
pop
insb
inc
jbe
icebp
and
jge
fs
cmp
lcall
flds
and
test
and
fcmovbe
ljmp
push
sub
or
movsb
and
out
or
xchg
movsl
int
jge
popa
int
push
mov
mov
shll
inc
push
mov
or
inc
jo
jb
test
jo
mov
cmp
xor
out
cmp
dec
mov
jg
mov
push
loopne
in
pop
xor
sub
jmp
lcall
push
xor
in
dec
cwtl
icebp
int
data16
mov
or
std
inc
aam
dec
movsb
cmpsb
or
negb
jle
out
fdivl
jne
and
jmp
dec
leave
jecxz
cmp
push
outsb
aas
loop
aas
lcall
imul
hlt
mov
xchg
push
adc
add
sahf
mov
sub
sub
adc
rcr
jp
lcall
xor
hlt
mov
repz
movsb
cmp
dec
xchg
fidivs
xor
add
cmpsb
or
xchg
ja
add
std
pop
add
out
or
loop
dec
mov
jp
push
cmp
jnp
pop
cmp
cs
mov
xchg
mov
cmpl
dec
mull
fnstenv
mov
pushf
mov
dec
jbe
dec
js
push
stos
push
pop
cmp
andb
mov
icebp
aad
dec
sub
nop
arpl
scas
or
lock
orl
jnp
and
mov
icebp
rolb
hlt
mov
repnz
mov
jmp
pop
dec
int
mov
sub
cltd
sbb
gs
mov
stos
out
cmc
mov
cmp
fsubp
fnstcw
inc
ds
mul
lock
pop
mov
out
testb
mov
push
movsb
inc
jo
mov
into
sbb
add
aad
fnstsw
pop
jmp
testl
mov
xor
adc
and
adc
rcl
orl
xchg
adc
imull
inc
lahf
push
das
pop
mov
xchg
arpl
sub
fstpt
fs
es
xor
iret
addb
pop
outsb
frstor
sbb
xor
sub
enter
lock
imul
insb
outsl
sbb
addb
jnp
hlt
loopne
lret
jne
xlat
out
loopne
dec
out
mov
mov
xchg
mov
adc
dec
test
add
xor
and
jmp
in
sub
adc
sbb
cmpsb
pop
push
pop
mov
loope
gs
mov
out
dec
inc
std
push
jns
repnz
adc
pop
add
das
lahf
test
fcmovu
addr16
and
mov
mov
mov
pop
das
sbb
outsl
cli
cmpsl
cmc
subl
stos
jbe
cld
push
sbb
out
pop
xor
aaa
xchg
sub
cmpsl
xor
xchg
mov
pop
mov
pop
adc
or
push
xlat
shl
adc
add
and
fldenv
scas
enter
fstps
cmpsb
adc
sti
cmpsl
mov
pop
push
dec
out
push
movsl
or
and
mov
jmp
xor
rorb
shl
jae
pop
out
in
add
andb
clc
xchg
mov
pop
sbb
filds
inc
lods
inc
loop
in
inc
lret
shlb
lahf
cmp
out
scas
aaa
mov
cmpsb
outsb
cmp
jne
push
icebp
arpl
rclb
rcll
jmp
push
test
ret
dec
mov
jge
pusha
sub
loope
cltd
nop
add
lret
mov
stc
dec
idiv
mov
mov
popa
sub
nop
test
push
sbb
pop
mov
and
jle
popa
and
imul
jmp
pushf
das
movsl
xor
mov
cmp
adc
shrl
scas
mov
ret
cwtl
ret
gs
cmp
pusha
adc
leave
pusha
mov
ja
imul
dec
jle
xchg
aad
pop
neg
lcall
addr16
fldl
in
mov
dec
jle
push
out
or
das
hlt
or
cwtl
gs
cmpb
cmp
xchg
in
push
push
sub
loope
dec
mov
cs
dec
mov
data16
jl
std
ljmp
sbb
adc
mov
mov
int3
arpl
fnstenv
enter
in
into
cli
xchg
push
jp
loopne
cmpsb
aad
inc
jmp
pop
xor
or
popf
daa
cmp
cli
ret
xor
jb
dec
idivb
and
jns
jbe
inc
js
inc
in
jl
mov
add
out
sub
jp
mov
ret
xchg
and
cmpsl
fcmovb
pop
popa
xchg
stc
mov
inc
xor
int3
mov
pop
jne
in
mov
and
adc
cmpsb
push
ficompl
sub
pop
xchg
stos
xchg
rcrb
das
cmp
adc
xchg
fnsave
data16
ret
shrb
inc
icebp
aam
push
stos
pop
and
into
mov
pop
pop
mov
inc
popf
lahf
xor
negl
or
pop
jle
daa
mov
ret
xchg
mov
pop
push
popl
mov
fwait
or
jge
ds
sub
xchg
cmp
imull
pushf
push
adc
push
fcomps
mov
xor
ja
hlt
into
inc
lock
add
loop
and
repz
nop
cwtl
xchg
push
arpl
jmp
jae
test
btr
hlt
stc
sub
hlt
rcrb
adc
test
std
push
dec
lcall
xchg
push
push
insl
out
xchg
daa
shll
xor
rclb
es
call
and
push
mov
out
rcrb
jne
sbb
and
repz
push
lods
dec
cli
xor
push
pop
nop
imul
mov
stc
mov
xchg
lret
push
adc
lret
ljmp
jmp
pop
in
dec
addr16
stc
shrb
adc
cmp
test
in
stos
mov
dec
andl
or
mov
jecxz
fbld
inc
inc
xor
jmp
inc
mov
popa
cli
orl
push
sub
push
jne
sub
std
mov
das
ljmp
aam
dec
lods
jns
nop
add
int
cmpsl
scas
mov
bound
movb
lea
sbb
cwtl
bound
mull
or
push
cwtl
pushf
jge
rcll
mov
popf
rclb
into
stos
mov
test
pop
pop
shlb
adc
pushf
mov
sbb
scas
out
xor
loopne
inc
add
loopne
into
inc
dec
cmpb
je
mov
sbb
icebp
pop
aam
push
dec
aam
call
out
inc
push
mov
sub
jno
cwtl
fdivl
loopne
jp
xor
jbe
jecxz
inc
inc
out
ljmp
dec
mov
scas
add
add
addr16
cmpsb
sbb
iret
test
popl
sbb
jo
movsb
in
mov
xor
inc
or
sub
lods
aam
das
pop
into
fwait
lods
sub
sbb
shlb
popf
mov
lret
push
es
adc
mov
scas
lahf
leave
lcall
subl
lcall
xor
movsb
fs
add
jg
cld
es
ficomps
cmpsl
ja
stc
mov
xchg
sub
sub
lcall
mov
cmp
jl
cmp
pop
xchg
sub
out
sbb
and
loop
outsb
sbb
scas
mov
push
pop
shlb
in
adc
imul
push
clc
and
push
in
add
imul
aam
xchg
int3
pop
dec
xor
pop
adc
shrb
dec
pop
enter
mov
add
inc
fs
cwtl
mov
sbb
inc
popf
jo
push
cli
xorb
test
jge
xchg
adcb
int3
and
pop
xchg
out
mov
sbb
jbe
imul
fidivs
inc
sub
cld
insb
xchg
loop
dec
jno
or
xor
int
xlat
sub
jnp
aad
jnp
scas
sub
add
push
push
in
loope
pushf
xchg
mov
fwait
add
pop
pop
shr
stos
dec
mov
dec
pop
test
dec
fmuls
imul
cmp
adcb
gs
aas
in
or
in
dec
sbb
mov
jmp
mov
sub
mov
fisttpll
lcall
jbe
out
loope
stos
xchg
ret
or
sub
pop
cld
mov
dec
or
std
mov
jae
imul
cmc
pop
cmp
dec
lods
ret
xchg
cld
fxch
decb
adc
enter
sub
xchg
scas
adc
pop
inc
adc
ret
aas
or
xor
ja
sub
movsb
xchg
dec
xor
xor
mov
lods
mov
sbb
fcmovnu
mov
jg
sbb
fwait
xlat
into
fldcw
push
int
insl
cld
mov
rcrl
inc
into
loope
imul
bnd
cmpsl
addr16
scas
inc
repz
jno
add
add
push
mov
push
testb
call
cltd
add
jp
rorl
pop
inc
dec
ja
outsl
or
xor
test
inc
out
xchg
sbb
rorl
cmpsl
sbb
mov
xor
in
in
dec
lods
add
cli
cs
arpl
push
out
dec
xchg
stos
fstps
movsl
pop
adc
sbb
mov
mov
jae
sub
ss
repz
enter
push
dec
xor
iret
inc
xchg
leave
je
inc
arpl
shlb
xchg
cmp
loop
hlt
mov
dec
pop
sub
dec
adc
inc
rcrb
enter
inc
and
lahf
cmp
xchg
cmp
jp
lods
hlt
dec
sub
or
pop
jnp
jb
shlb
inc
loopne
inc
int
mov
lods
sbb
push
sub
in
cmp
dec
add
outsb
and
sbb
loop
dec
xchg
enter
and
sub
and
aam
js
add
lds
cmp
adc
sahf
push
mov
xchg
sub
adc
inc
repz
mov
outsb
movsl
add
pop
repnz
loopne
or
and
into
outsl
in
orl
mov
inc
mov
shlb
mov
bndstx
cli
sbb
insb
push
jge
or
lcall
imul
inc
nop
xor
add
cmpsl
jg
pop
dec
hlt
sub
daa
int
pusha
push
xchg
inc
popa
dec
inc
stos
xchg
mov
xchg
xor
cli
in
push
inc
jae
push
lret
gs
jbe
cltd
jne
inc
leave
pop
cmp
jmp
inc
loop
into
xor
pop
fmull
lock
test
test
jmp
test
lahf
dec
loop
push
lea
stc
xor
pop
xchg
adc
xlat
scas
stos
add
iret
xchg
sbb
sahf
test
cmpl
dec
mov
mov
loope
xchg
rorb
and
sahf
loop
inc
xchg
xor
sub
mov
sarb
stos
notl
dec
popa
jnp
jle
loopne
inc
adc
into
mov
inc
popf
xor
popf
xor
push
fwait
jl
loopne
es
jmp
adc
popa
cmpsl
mov
jl
mov
mov
in
hlt
into
xlat
movsl
inc
scas
fwait
cmp
push
fst
jle
in
divb
xor
and
in
and
sbbb
push
testb
out
push
lret
push
jns
adc
dec
adc
clc
stos
mulw
dec
xor
in
sub
xchg
jge
dec
ja
outsb
sub
push
cmp
in
mov
cmpsl
add
and
lret
jmp
mov
pop
cmp
outsl
mov
sbb
sbb
ret
or
sub
dec
adc
cs
push
insb
jno
or
mov
jg
mov
dec
out
sbb
cs
clc
in
shll
mov
rclb
adc
mov
mov
iret
int3
and
ds
xchg
mov
in
arpl
xor
cmp
clc
mov
in
lock
out
repnz
nop
add
cmp
push
mov
mov
add
ljmp
repz
push
sub
cmc
bound
out
sar
cmp
ret
mov
test
ret
mov
rorl
movl
sar
enter
nop
pop
out
loop
jb
mov
movsb
scas
cltd
inc
enter
sub
push
sbb
dec
mov
sub
shl
pop
push
dec
and
xchg
and
lock
hlt
mov
div
sbb
add
addr16
jp
es
jns
cmpl
mov
add
testl
std
test
xor
mov
push
push
sub
mov
add
orb
mov
cli
sub
push
xor
push
push
push
adc
scas
movsb
aas
cmp
push
and
dec
cmp
xchg
imul
outsb
shl
fsubrl
cltd
and
pop
mov
sarl
cli
cmp
arpl
lea
pop
enter
repz
std
or
lds
fcomp
sub
and
and
cld
sbb
add
jge
sub
add
jne
insl
mov
cli
jle
mov
imul
imull
test
mov
test
jmp
mov
mov
mov
sub
xchg
sbb
out
sub
rclb
lret
sbb
mov
pop
imul
xlat
adc
lcall
ss
sbb
dec
orl
shl
push
push
ficomps
mov
sub
cmpb
mov
inc
cmpsl
cld
adc
pop
xor
xchg
push
test
dec
int
mov
addr16
fidivrl
or
mulb
and
lods
add
loopne
lahf
adc
fwait
xor
stos
mov
rclb
in
fs
mov
aam
dec
cmp
cwtl
inc
sub
dec
rolb
in
jmp
ds
jo
mov
pushf
jl
lods
test
mov
mov
das
mov
test
sub
loop
addl
add
xor
and
dec
cmp
fs
icebp
add
add
dec
or
xor
pop
cli
cmp
lret
jae
mov
push
push
dec
push
lret
int
jne
inc
loopne
push
add
les
or
iret
stos
repz
mov
fucomip
lahf
inc
ret
dec
add
xchg
lahf
jl
out
mov
loopne
adc
sub
xor
inc
enter
or
popf
std
rorl
out
xchg
rclb
rorb
mov
mov
pop
std
movsl
mov
cs
in
ja
call
or
push
repz
popa
dec
adc
jno
dec
add
repnz
sbbb
in
push
shlb
sub
push
cmpsl
jmp
add
add
popa
sahf
jns
ficoml
out
sbb
sahf
xchg
inc
adc
push
insb
outsb
in
pop
mov
and
sahf
jnp
mov
jo
mov
sub
dec
scas
int3
sub
or
cmp
push
mov
fcom
fisubrs
popf
jno
lahf
sbb
mov
lcall
int
mov
adc
add
ss
loopne
roll
dec
and
movsl
cs
pop
cmp
push
lret
lcall
cli
jne
cwtl
cmpl
dec
ds
pop
add
or
cmp
or
xchg
enter
dec
dec
cltd
push
insb
repnz
lock
lds
push
faddp
or
testl
clc
ret
pop
mov
xor
mov
stc
mov
sub
ljmp
ret
jbe
pop
ljmp
add
lret
ret
or
ret
sub
cltd
mov
clc
sub
repz
and
flds
rclb
mov
cwtl
lret
jg
fdivp
sbbl
jle
mov
aas
es
movsb
xorl
xor
or
sub
jb
addb
jbe
sahf
shrl
jns
and
dec
sub
dec
push
mov
loop
test
lock
pop
mov
sub
dec
mov
jmp
xchg
and
push
cmc
fisttpll
jnp
movsb
push
xchg
jg
jl
test
mov
push
adc
sbb
mov
lahf
xor
mov
int3
xor
nop
push
movsb
mov
mov
and
adc
aas
fisubs
lahf
xchg
jl
subl
sti
outsl
test
jmp
xor
dec
jmp
cmpsb
mov
xchg
sub
std
nop
nop
mov
dec
xchg
jp
xor
cli
data16
into
push
lods
inc
lret
data16
ljmp
mov
cmp
push
mov
jnp
adc
push
orb
cltd
outsb
clc
insl
fdivrs
popf
fstpt
inc
or
insb
mov
mov
cmp
shll
pop
in
enter
or
xor
mov
lods
loope
mov
mov
sbb
xchg
idivb
inc
adc
xchg
fmuls
pop
pop
pop
popf
jg
jno
les
pop
mov
dec
jmp
ret
cmc
inc
call
out
xlat
ret
scas
push
jmp
je
mov
fwait
jge
pop
in
cltd
mov
hlt
jb
or
incb
sbb
in
clc
or
xchg
sbb
lret
sub
mov
ja
pop
lret
fwait
inc
out
out
orb
mov
loope
pop
aaa
or
mov
jae
fdivl
stc
xchg
push
ret
in
out
std
js
insl
sub
pop
pop
loopne
sbb
xchg
das
inc
mov
sbb
sbb
enter
push
out
jns
push
push
imul
test
push
addl
lods
inc
lahf
fs
push
xchg
mov
dec
call
pop
mov
ret
lock
bound
imul
hlt
repnz
fisubl
mov
add
addl
icebp
xor
ds
mov
aaa
mov
in
sarb
idivb
fmul
inc
imul
cmp
imul
aas
jge
push
sub
shl
cmp
xchg
mov
or
fimull
sub
in
int
imul
lret
cltd
js
je
inc
js
push
xchg
dec
in
jo
arpl
hlt
sub
out
insb
shll
add
sub
adc
sahf
ret
dec
sahf
jl
cld
push
sbb
imul
add
or
imul
cld
mov
adc
inc
out
test
adc
test
xchg
or
sub
es
dec
cmc
popa
dec
aam
push
outsb
fmull
bound
jo
pop
faddl
cmp
aad
jns
adc
inc
or
sbb
pop
mov
adc
data16
sub
jmp
in
lcall
xor
add
inc
cmovl
push
xchg
cmp
jne
add
dec
scas
jmp
jmp
mov
fisubs
sahf
jns
jge
fcmovnu
scas
sti
inc
cld
dec
pop
imul
pop
cmp
jmp
adc
jmp
jae
sub
cmp
pop
lods
scas
mov
adc
jp
es
test
in
xchg
sub
mov
adc
int3
inc
ja
push
inc
in
subb
std
lea
ja
jle
rol
jne
test
jns
mov
mov
and
mov
push
jmp
xchg
lods
xchg
add
cmp
mov
mov
xchg
dec
fidivrs
fdivs
mov
loop
push
scas
shl
imul
jge,pt
out
sub
aam
add
out
hlt
cvtps2pi
push
push
pop
aam
adc
push
mov
cmp
mov
pop
lods
arpl
xchg
in
sbb
popa
sub
pop
mov
inc
out
sub
push
jb
xchg
cmp
push
stc
cld
xchg
sub
data16
adc
push
jge
fwait
rorl
pop
mov
sbb
cwtl
mov
pop
fisubl
ss
mov
or
xchg
out
fdivl
sbb
or
sub
and
aas
int3
or
arpl
jo
cs
cs
call
icebp
jg
dec
jmp
push
jl
clc
sti
stos
aas
xchg
mov
popf
stos
movsb
mov
mov
jo
and
or
jnp
sub
and
repz
imul
ja
mov
or
pop
mov
mov
sahf
test
pop
lock
hlt
pop
cmp
dec
and
clc
les
jge
cmp
push
xorb
rorl
fwait
out
mov
sub
cmpl
or
dec
cmpsb
std
jnp
es
lret
pop
loope
sub
inc
stos
dec
jg
mov
or
jg
insb
xchg
pop
push
sub
push
or
ret
add
xor
imul
or
mov
stos
daa
lret
mov
in
sbb
ret
test
dec
mov
jl
clc
cltd
dec
stos
adc
lds
je
sub
and
mov
insb
jmp
lock
repnz
jae
xor
lret
mov
xchg
sub
arpl
pop
sahf
inc
ljmp
inc
out
adc
cltd
fwait
jb
ficomps
mov
je
pop
sub
mov
xchg
notl
into
loop
add
add
push
jne
ds
or
imul
mov
and
pop
sub
aaa
dec
je
addr16
cs
clc
scas
inc
int
lahf
inc
push
lock
mov
jae
leave
repz
sub
out
xor
pop
int
into
inc
jge
movsl
cwtl
mov
int
adc
decb
jne
aam
xchg
pop
mov
lea
mov
add
stos
testb
leave
add
mov
sbb
and
mov
adc
add
jns
arpl
inc
lahf
sub
movsl
andl
addr16
xchg
rcll
and
repnz
jne
sahf
out
xor
stos
fsts
mov
stc
repnz
inc
mov
inc
test
sbb
comiss
das
mov
jl
aam
push
ljmp
test
cmp
in
jmp
dec
fnstcw
jbe
popf
movsb
gs
inc
mov
jbe
imulb
pop
xor
cmpl
jge
mov
dec
aaa
fdivs
popa
das
mov
cmc
sbb
push
movsb
adc
jecxz
add
and
and
dec
mov
test
ret
lds
cltd
push
xchg
cmp
js
jl
andl
or
pop
fimull
pop
testl
pop
push
mov
lock
mov
mov
add
lcall
push
xchg
jle
jae
xor
aam
add
adc
mov
nop
sub
iret
mov
xor
cmpsb
mov
rcrb
and
inc
dec
add
fmull
ja
popf
xor
dec
jns
adc
fisubl
dec
mov
mov
movsl
mov
sub
out
adc
and
lea
roll
call
test
imul
or
int3
fnstenv
es
fucomi
mov
ret
mov
dec
adc
push
ret
mov
push
pop
sbb
out
adc
stc
lods
imul
xor
loope
stos
and
adc
and
adc
aas
mov
sbb
xor
add
scas
sub
inc
pop
or
call
push
std
cmpsl
adc
rorl
stc
cmpsb
movsl
mov
xchg
call
pop
aam
rcr
fwait
xchg
sub
inc
movsb
ror
das
and
xchg
icebp
ds
inc
dec
jecxz
xchg
das
insb
stos
push
xchg
bound
cmp
dec
stos
jge
xor
xlat
mov
cmc
mov
dec
sahf
std
add
sub
shr
adc
lods
out
repnz
push
or
jns
mov
adc
movsl
in
test
out
adc
mov
push
decl
fcom
stc
dec
or
mov
push
cmp
and
or
adc
fidivrl
std
cltd
jne
sbb
xorl
fldcw
rcrl
rcl
cmpsb
mov
dec
arpl
and
aas
push
mov
jle
aas
nop
ficoml
mov
aam
test
add
repz
push
icebp
push
inc
push
fsts
jb
in
dec
fidivrs
sub
push
out
push
dec
stos
jbe
mov
adc
mov
push
push
cmp
inc
or
out
xor
cmp
outsl
lea
adc
mov
nop
mov
int3
add
int3
enter
xchg
rcrl
sub
push
xchg
stos
sbb
push
icebp
sub
jae
mov
incl
push
int3
mov
mov
and
adc
add
push
insb
mov
mov
das
mov
xchg
mov
loopne,pt
ficoml
xor
inc
iret
cmp
sub
mov
xchg
inc
mov
xor
ljmp
jne
imul
jp
stc
mov
cmpsl
scas
jp
cmpsl
add
ret
and
nop
or
and
mov
dec
xchg
hlt
lds
xchg
call
lods
je
jo
jns
adc
jge
subb
xchg
jle
test
push
sti
loop
push
jle
xchg
cmc
dec
mov
push
shrb
xchg
pop
repz
pop
in
cmp
cmpsb
inc
sahf
cmp
ret
adc
mov
sar
dec
leave
fucomi
mov
lcall
movsb
pop
cltd
push
neg
mov
mov
imul
fnstsw
add
add
sti
xchg
gs
repz
data16
xor
ja
mov
testb
and
and
push
sub
mov
xor
imul
dec
push
mov
aad
mov
cmp
wbinvd
add
cltd
inc
and
add
mov
or
dec
dec
sbb
push
stc
dec
adc
xchg
std
loope
mov
mov
xchg
repz
sbb
pushf
int
les
lcall
mov
lea
dec
adc
lods
cli
cmp
cli
in
repz
xchg
outsb
dec
inc
pop
or
ffreep
stc
jo
js
sarb
jae
jp
icebp
sbb
idivl
fiadds
adc
add
mov
adc
lods
test
lea
jne
lret
adc
sarl
xor
mov
lock
test
out
bound
scas
push
movsb
jmp
push
mov
iret
imul
xchg
jmp
or
fstl
mov
or
mov
es
ja
mov
pop
mov
cmp
test
push
push
inc
push
sbb
add
aad
cmp
mov
lcall
sub
inc
dec
in
repnz
jmp
dec
pop
mov
inc
cltd
pop
and
cmp
outsl
add
and
mov
test
ss
lock
mov
mov
movsb
stos
push
addr16
fbld
sbb
inc
add
xor
mov
pop
push
push
sub
cmp
mov
stos
pop
lahf
inc
mov
xor
xchg
jae
and
cmc
xchg
popa
mov
mov
add
sub
jne
jbe
add
adc
pop
mov
fiaddl
addl
pcmpgtd
mov
cmp
rcrl
sbb
mov
push
mov
or
imul
enter
mov
dec
ret
xchg
stos
shl
stos
inc
arpl
lcall
je
push
sbb
mov
xchg
inc
mov
jecxz
ds
outsb
xor
adc
cli
sbb
adc
xor
jg
pop
les
mov
sbb
push
pushf
push
push
cmp
push
sbb
in
xchg
cltd
fldt
aam
inc
popa
jg
imul
stos
mov
mov
sbb
icebp
data16
punpcklwd
and
pxor
pop
mov
ss
fcmovnb
rol
cwtl
or
repz
mov
mov
push
lahf
mov
xor
into
dec
add
push
inc
cmp
leave
stc
or
std
or
lods
lea
push
lahf
lea
js
pop
dec
push
mov
push
inc
mov
jne
pop
inc
mov
sub
aad
popa
out
xchg
pop
test
mov
mov
data16
adc
sbb
scas
les
fmul
iret
add
arpl
sub
fwait
jo
push
cwtl
push
adc
insb
aad
sub
dec
sbb
jp
push
cmp
jmp
xor
inc
xor
nop
scas
pop
clc
sbb
jg
inc
inc
mov
cld
cli
out
notrack
cltd
adc
or
ret
pusha
rclb
imul
mov
lahf
ja
xor
les
add
insl
stos
mov
insl
popf
xor
and
lret
or
icebp
sbb
and
pop
cmp
xor
jmp
xchg
out
andl
in
or
cwtl
dec
jecxz
mov
sub
outsb
mov
jmp
mov
lret
dec
jle
xchg
push
shrl
and
jmp
sub
mov
fdivrl
ljmp
and
adc
gs
test
imul
and
je
mov
in
add
imul
pop
fucomi
popa
int3
fidivl
arpl
adc
nop
repz
lods
jnp
mov
and
out
stos
cli
orl
mov
fisubrl
push
mov
imul
div
xorb
pop
out
adc
popa
popa
pop
andl
inc
push
pop
bound
sarl
mov
dec
cmpsl
mov
lock
call
cmpsl
cwtl
inc
mov
inc
mov
jnp
jb
cmp
int3
adc
out
xor
into
shll
sbb
sub
dec
mov
fidivrl
mov
or
mov
fists
mov
andb
mov
insb
sahf
aas
popf
rclb
les
loope
imul
repnz
adc
pop
sbb
sub
hlt
pop
push
aaa
add
mov
daa
mov
ds
mov
shl
and
or
push
jno
aad
jns
sarb
cmp
push
pushf
scas
inc
movsb
hlt
pop
in
fcomip
xchg
into
jbe
mov
bound
jnp
insl
daa
dec
out
repnz
lds
and
pop
test
rcr
dec
aaa
xor
fdivrl
push
push
fidivs
xor
imul
xchg
push
mov
mov
lret
or
movsl
iret
lods
imul
cmpsl
push
inc
adc
xor
and
call
xlat
outsl
mov
imul
ljmp
and
mov
inc
daa
inc
lret
mov
xor
pusha
in
popa
out
dec
jno
xchg
lods
mov
xchg
je
sti
mov
mov
ljmp
xchg
push
push
lcall
cmp
mov
adc
xor
inc
in
fwait
dec
xor
add
or
out
xchg
fdivs
fsub
cli
lea
loopne
inc
sbb
adc
rol
push
or
arpl
insl
out
sbb
adc
out
and
aad
gs
les
xchg
lret
push
xchg
notrack
fisubrs
push
jb
shl
adc
and
scas
add
adc
sbb
add
fwait
jae
inc
xlat
jecxz
clc
jle
scas
xchg
inc
and
adc
jge
cli
int
jmp
stc
insl
jnp
mov
je
aam
pop
push
push
add
ljmp
mov
fiaddl
add
out
roll
pop
or
and
js
das
in
xor
leave
test
or
fiadds
addr16
rorl
sbb
gs
popa
movsl
sub
inc
ja,pn
xchg
fwait
xchg
iret
inc
mov
ret
add
jp
or
js
es
pop
mov
push
dec
loop
je
cmc
andb
cmp
push
cmp
sub
mov
pop
enter
sbb
push
jnp
push
insb
std
jle
xchg
xchg
jecxz
int3
jb
push
sbb
dec
jle
popf
xor
lahf
dec
xchg
jns
inc
sub
jmp
dec
sahf
xor
push
cmp
xchg
jnp
mov
popf
or
jecxz
jmp
and
enter
fsts
push
orl
call
inc
pop
mov
xchg
xchg
pop
and
mov
mov
std
pop
add
push
data16
insl
int
dec
fists
cwtl
ja
adc
adc
push
push
mov
cs
and
leave
enter
cmp
outsl
xlat
fs
sbb
mov
mov
mov
in
cltd
repnz
mov
cmpsb
mov
mov
sbb
imull
adc
push
aas
inc
call
sbbb
dec
mov
jle
fistl
dec
inc
out
cld
mov
push
call
dec
dec
jle
push
imul
sbb
mov
pop
pop
fmuls
rorl
insl
jecxz
cmpsl
aad
sub
and
push
xchg
cli
mov
mov
stos
add
imul
aam
mov
ds
out
aas
test
aas
cmp
adc
sbb
mov
cli
cmp
push
mov
mov
push
jle
mov
rclb
popf
aas
xor
pop
test
or
inc
fisubl
mov
repz
loope
xor
fdivrs
icebp
push
movsl
mov
cmp
mov
lret
cltd
mov
movsl
testb
test
jns
mov
mov
mov
mov
inc
mov
and
daa
popf
push
xor
inc
jns
jmp
shr
mov
push
mov
jge
in
lds
ret
nop
pop
lock
jl
aaa
pop
add
std
push
cmp
or
aam
insl
sub
add
xchg
sbb
sahf
je
push
fmull
or
movups
jl
xchg
imul
cmp
in
and
adc
sbbb
inc
pusha
aad
enter
or
cmp
shlb
stc
sbb
pop
adc
mov
xor
inc
hlt
mov
mov
xchg
inc
out
xchg
dec
pop
popf
pop
fisubrl
mov
int3
std
sub
andb
adc
xlat
adc
mov
pop
loop
lahf
inc
repnz
sbb
test
xlat
orb
and
lret
push
repnz
test
stos
fldt
pop
sub
cltd
shl
mov
mov
sbb
inc
inc
add
adc
dec
jns
pop
leave
mov
and
mov
leave
xchg
mov
ret
fdivp
lds
call
or
lret
call
sub
cs
cmpl
movzbl
outsb
push
popf
sbb
pushf
inc
stos
lret
mov
pop
dec
mov
inc
mov
and
jb
xchg
add
movsl
mov
js
stos
and
jne
movsb
inc
add
rcl
inc
and
push
rcrb
dec
xor
out
push
jecxz
lret
vfnmsub231sd
xlat
jns
jl
xor
mov
orb
shl
inc
shl
xor
ds
sub
inc
push
and
pop
shll
int
outsb
out
mov
xchg
arpl
jmp
in
in
xchg
lods
outsb
mov
ljmp
insl
push
push
pop
dec
jle
rclb
adc
fistl
outsl
jecxz
fcoml
cmpsl
add
dec
push
mov
xor
jae
mov
loopne
shrb
js
mov
push
fnsave
addl
pop
hlt
mov
into
lods
or
or
sbb
pop
inc
rcrl
inc
cmp
fnstsw
jo
or
and
cmp
out
shr
inc
fsubrl
clc
lret
add
arpl
sahf
repz
addr16
ja
sub
jp
push
mov
jmp
sbb
stos
dec
loop
push
sbb
sbb
add
andl
lret
rcl
lods
dec
test
fldl
dec
dec
aam
mov
daa
or
mov
and
dec
push
inc
fbstp
sbb
loopne
dec
jp
jecxz
push
pop
in
inc
xchg
stos
and
dec
and
loop
sarb
and
adc
mov
adc
or
fsubs
dec
es
xor
or
xchg
aaa
cmc
xchg
xchg
mov
sbb
and
jb
pop
inc
mov
add
fildll
jnp
scas
xor
jl
ret
call
sarl
imul
out
mov
add
jb
or
push
stos
repz
clc
ss
les
pop
es
lahf
pop
add
leave
jp,pt
icebp
seta
or
cmpsl
in
lods
xchg
fisubrl
add
cltd
stos
in
sbb
cmp
sti
jp
movsb
daa
lds
loope
mov
adc
sub
pop
out
mov
adc
pop
ficomps
push
js
shll
cmp
pop
ret
fninit
fistl
jmp
inc
inc
lcall
into
ss
inc
push
xchg
test
adc
arpl
xchg
js
jb
int3
shrl
dec
add
subl
mov
aad
inc
cltd
addr16
mov
push
mov
pop
or
add
mov
jb
adc
adc
inc
cmp
pushf
inc
xor
mov
leave
in
xchg
mov
dec
int
add
mov
arpl
arpl
pop
mov
sbb
jnp
add
call
or
push
das
inc
ror
pop
repnz
cmp
lret
aad
loop
out
pushf
pop
mov
ja
sbb
inc
aas
xchg
dec
shll
pusha
xor
gs
dec
mov
filds
cs
push
xchg
pop
add
incb
test
punpcklwd
int
pop
fs
cmp
pop
dec
adc
add
fildll
sbb
mov
and
stos
push
lcall
bound
cld
aaa
fs
int
test
jecxz
test
sub
jbe
addr16
or
nop
js
orb
mov
fildll
add
pop
sbb
jmp
mov
shlb
pop
or
bswap
mov
mov
push
int
pop
cmpb
jb
xor
fstpl
jge
int
divb
imul
filds
push
sub
cmp
cmpsl
and
or
inc
fcomi
sub
roll
arpl
jge
push
push
pop
sub
enter
es
jmp
cmc
pop
out
lcall
xchg
cmp
mov
fiaddl
pop
or
rclb
jp
fcmovb
push
mov
xor
int3
or
or
mov
insb
into
rcll
jmp
insb
mov
fwait
push
aam
lahf
inc
cmp
mov
push
pop
in
sub
test
arpl
lcall
shr
out
add
insl
and
jo
push
cmpsb
mov
push
mov
sub
scas
hlt
push
adcl
xor
cli
jns
push
jp
out
add
cmp
stos
aam
or
ljmp
test
fmulp
das
aad
adc
xchg
lret
imul
mov
sub
leave
mov
push
fs
and
mov
in
sbb
scas
leave
mov
cwtl
xchg
sub
mov
sub
ss
rol
addl
fucomp
stos
call
sbb
xor
and
rorb
mov
xchg
xor
cmpsl
aaa
push
push
jecxz
mov
and
fsts
rcl
mov
dec
ret
imul
inc
xchg
inc
jl
inc
lret
addr16
daa
mov
cli
add
mov
push
addr16
or
nop
or
cmp
lret
es
imul
push
scas
adc
std
in
data16
mov
fisttpll
shlb
or
or
or
out
sbb
and
mov
push
push
not
push
pop
cmp
sbb
orl
cs
aas
sahf
jbe
xor
cmp
rcrb
or
mov
dec
dec
push
mov
clc
sub
in
mov
inc
or
test
sub
inc
xchg
fistpll
out
cmp
push
loopne
fwait
shrb
addr16
leave
adc
push
sahf
pop
lret
mov
iret
int
popa
push
std
and
sub
stos
add
and
mov
jp
xor
mov
dec
test
or
lahf
outsb
lret
jp
inc
or
daa
xchg
mov
mov
push
pop
lret
hlt
xchg
adc
out
cmp
fwait
sub
mov
scas
int
push
or
cmpl
add
mov
clc
xor
out
lods
jbe
lds
jecxz
or
fdiv
dec
shr
push
in
lock
adc
std
icebp
ljmp
sbb
rcrb
lock
cmp
pop
xchg
inc
popf
sbbb
insl
push
fldcw
push
mov
add
sbb
inc
inc
int3
push
rcrl
add
sbb
cmp
pop
fmull
sbb
dec
and
je
mov
xor
fidivs
ror
test
mov
add
xor
adc
fimuls
cltd
je
pop
sub
cmpl
xor
or
enter
scas
arpl
mov
ljmp
repz
and
or
test
aad
sti
jb
out
xchg
mov
adc
mov
inc
test
scas
call
int
icebp
jo
lods
cmp
lret
adc
subb
or
fwait
lret
pop
mov
test
pop
mov
dec
push
out
mov
mov
sbb
mov
scas
lahf
cs
into
pop
push
shlb
pop
xchg
mov
lret
mov
add
or
mov
mov
xchg
mov
imul
scas
xorl
dec
sub
push
push
pop
pop
jnp,pt
or
mov
shr
incl
aas
es
hlt
and
jae
in
movsb
jl
xor
inc
rolb
popa
imul
add
cmc
in
in
bound
push
aas
sub
aas
pop
out
push
jge
cmp
in
xchg
shr
xchg
xor
mov
pop
jae
loop
mov
filds
adc
hlt
mov
xor
outsb
push
daa
dec
loopne
mov
je
stos
sub
pop
lret
sbb
adc
push
mov
push
jne
sub
sub
lahf
scas
cmpsl
sbb
popf
and
pop
inc
inc
call
jg
sub
test
dec
enter
cmp
and
cs
dec
and
js
lahf
shrl
cwtl
sahf
mov
dec
add
repz
leave
cmp
mov
pushf
cmp
jbe
out
movl
into
xchg
ret
mov
rcr
or
adc
add
dec
adc
add
xor
mov
sbb
or
stc
hlt
cmp
xor
repz
rclb
inc
sbb
les
cwtl
in
and
mov
sarl
mov
loop
mov
cld
mov
fnstcw
inc
fimuls
inc
jbe
sbb
jle
add
and
or
fadd
scas
insb
fmulp
and
xchg
test
add
arpl
out
cmp
inc
decl
lahf
aam
ljmp
daa
lret
mov
mov
sub
mov
xchg
js
loopne
inc
sbb
lcall
add
out
mov
cmp
rcrb
shrl
jb
rcll
mov
sub
mov
push
jae
subb
stc
inc
out
negb
fimuls
paddb
mov
fsubrl
addl
inc
mov
dec
mov
xchg
inc
je
add
hlt
sbb
push
xor
fwait
repz
push
pop
mov
mov
fldcw
js
add
mov
icebp
sbbl
xchg
push
into
fsubrl
mov
movsl
pop
fsubrs
les
test
fs
and
push
cmpsb
dec
out
call
push
popa
ljmp
add
call
inc
adc
rolb
and
dec
out
mov
arpl
adc
test
dec
dec
push
sbb
lcall
xchg
leave
lret
mov
xchg
cltd
or
mov
or
icebp
xchg
add
shll
or
movsl
sub
scas
xchg
cmp
pop
and
jmp
dec
test
adc
mov
outsb
xchg
xchg
xor
cli
adc
sub
push
inc
mov
ror
push
cli
pop
dec
fcompl
mov
cwtl
sbb
sub
les
jge
cmpsl
xor
mov
jmp
push
int
xchg
jnp
shll
rcrb
leave
adc
movsl
loop
mov
adc
inc
dec
xor
call
or
push
dec
mov
imul
pop
add
push
mov
das
adc
jbe
icebp
out
fbld
out
xchg
jp
data16
jge
dec
fistpl
xchg
in
repz
rcrl
push
push
xchg
mov
outsl
imul
xlat
and
push
pop
jo
dec
xor
xor
pop
sbb
fs
ror
cmp
pop
sbb
pop
jo
pop
jae
push
loope
push
pop
notl
jmp
cmpsb
orl
imul
aam
stc
lahf
shr
test
jg
mov
or
cmp
jae
mull
ss
jle
push
pop
int3
or
gs
out
add
in
xchg
push
cmp
xor
dec
leave
subl
scas
mov
out
adc
lods
mov
inc
daa
mov
ds
fmuls
xchg
lahf
gs
popf
mov
dec
inc
popl
ret
push
loopne
test
jmp
inc
scas
call
cwtl
pop
mov
pop
cmp
or
arpl
jbe
in
mov
daa
inc
sub
fnstenv
push
leave
pop
shl
xor
lahf
repnz
dec
pop
xor
sbb
mov
insb
inc
lahf
xor
insb
sbbl
mov
into
lds
sbb
push
test
cmp
cmpl
dec
push
xlat
jle
test
ja
insl
and
push
ret
gs
dec
and
jl
cs
pop
jmp
insb
pushf
ljmp
add
dec
sub
xor
mov
mov
or
dec
les
mov
or
stc
adc
das
mov
idivl
imul
outsl
int
hlt
lcall
flds
jmp
dec
je
push
xchg
loope
sub
sub
loopne
scas
addr16
sbb
pop
sub
xchg
or
xor
adc
jne
inc
adc
xor
mov
sbb
cmc
cmp
mov
push
adc
sub
stc
mov
sbb
adc
or
andl
inc
ss
xorl
loopne
addr16
in
push
adc
aas
int
dec
jb
mov
xor
jl
inc
jg
sub
xor
rcrl
test
out
pop
decl
pushf
or
lods
xchg
ss
lods
sub
imul
loope
icebp
in
sbb
out
imul
jns
scas
mov
data16
repz
popa
iret
aad
into
cwtl
hlt
adc
dec
mov
inc
xor
and
pushf
xor
dec
mov
int
ja
add
stos
fcmovnbe
mov
gs
mov
loope
add
in
mov
cmp
xchg
adcb
pushf
dec
mov
roll
adc
shll
or
movsb
loop,pt
dec
lret
cld
div
mov
shrb
or
aaa
mov
out
ret
ret
add
jno
cmp
ret
dec
xchg
lock
ljmp
popa
sub
fmuls
cmpsb
cmp
add
scas
repnz
push
es
nop
enter
mov
shr
sub
das
lock
lods
int3
and
bound
adc
loope
xchg
dec
aam
pop
scas
cld
xchg
stc
jp
push
dec
sbb
movsl
call
and
pinsrw
jno
int3
adc
mov
lahf
lret
cwtl
lods
fdivrs
sbb
sbbb
lret
mov
popa
jne
mov
idivl
dec
jb
adc
sub
mov
outsl
adc
mov
daa
mov
mov
push
mov
or
out
mov
bt
dec
jb
lahf
ja
sub
sub
outsb
fstpt
pop
sahf
dec
mov
or
ret
sub
stc
dec
mov
dec
inc
icebp
add
cwtl
lea
mov
test
lock
jge
fwait
sbb
sub
or
imul
scas
jne
dec
dec
mov
enter
dec
out
neg
sbb
mov
cmpsb
cld
lea
rolb
push
in
into
orb
mov
sbb
call
jns
addr16
enter
lret
pusha
fmull
add
dec
jg
or
adc
cmpsl
inc
add
and
das
das
dec
add
inc
sahf
das
push
xchg
loop
iret
mov
cmp
icebp
mov
jbe
pop
pop
and
cli
pop
out
clc
mov
loopne
setne
jle
fidivl
fildl
or
adc
fldenv
rorb
lock
fwait
mov
lds
sub
icebp
inc
and
mov
pop
push
dec
lods
xor
add
mov
mov
rorb
mov
sub
add
adc
xchg
fsubs
add
test
add
mov
or
bound
cmpsl
stos
stos
jg
push
aaa
xor
ds
mov
jno
int3
mov
push
mov
scas
mov
sub
js
inc
add
iret
mov
and
imul
adc
sbb
jbe
jbe
mov
pushf
inc
mov
into
aas
and
or
sbb
dec
das
cmpsb
xchg
pop
mov
cs
push
push
mov
test
push
xchg
cmp
xor
add
dec
inc
rorb
fldl
or
aaa
lcall
sub
add
inc
icebp
fcmovb
js
sub
popa
inc
test
sub
mov
xchg
mov
lret
mov
faddl
out
push
or
aas
xchg
fs
cs
loop
adc
fnsave
adc
mov
sbb
jb
push
out
sub
fsubs
notb
jns
inc
mov
cs
mov
data16
in
enter
mov
xchg
adc
data16
jno
adc
inc
add
xorl
cwtl
scas
pop
imul
movsb
es
and
jecxz
jle
pop
fmull
adc
arpl
push
in
or
repz
mov
mov
add
push
jmp
mov
faddp
int3
nop
imul
in
xchg
mov
mov
push
ja
notl
test
jmp
out
fisubs
xor
insl
sbbl
ja
rcrl
movsl
cltd
lcall
in
sbb
cmp
into
int3
pushf
pusha
pop
cmpsl
push
ret
dec
adc
loop
or
scas
mov
jnp
std
sahf
push
loop
lcall
lods
cld
mov
cwtl
mov
pop
out
and
rol
addr16
int
push
js
jg
movsl
xor
lods
scas
pop
sbbb
pusha
addr16
adc
fwait
xchg
push
add
jle
lods
leave
dec
xor
fsub
jecxz
pop
xchg
add
cmpsb
and
sbb
mov
push
ss
lods
mov
pop
dec
adc
xchg
jecxz
sbb
sbb
mov
push
cs
push
stos
inc
jno
iret
push
or
lock
dec
repnz
ds
sti
jecxz
bnd
daa
mov
int3
lods
cmp
ret
sub
push
cli
test
movsb
aad
mov
mov
cld
jmp
iret
cmpsl
cmpsb
in
push
lock
icebp
pop
scas
out
push
mov
enter
jb
sbb
push
dec
ja
push
jbe
loopne
into
mov
sub
mov
and
mov
mov
loop
or
es
mov
xor
xor
sub
outsl
sub
stos
mov
pusha
addr16
loope
daa
cmpsl
jnp
movsl
add
and
inc
nop
test
cwtl
and
les
in
xor
movsb
shl
fcmovbe
shrb
sub
cli
popf
lods
test
sub
orl
lcall
dec
and
in
loopne
orl
push
sub
mov
sub
clc
sahf
pop
xor
cli
loop
pop
fsubrs
cmp
or
mov
and
mov
mov
lds
ds
push
xchg
cwtl
cmc
push
add
loope
or
fmull
push
in
sti
js
pop
out
ret
call
mov
pop
adc
imul
or
fstps
inc
enter
or
and
fsubs
cmp
repnz
mov
cmp
aad
nop
dec
mov
add
add
push
out
mov
push
lea
adc
jnp
and
push
in
inc
es
mov
lods
push
ljmp
sub
in
pop
sub
imul
sub
pop
lret
or
insl
negl
ljmp
or
mov
cld
out
xchg
cli
pop
cltd
sbb
pop
pop
dec
mov
fsubs
imul
lods
addr16
xchg
sbb
xor
test
add
mov
or
xor
popa
sub
push
mov
xchg
iret
sub
outsl
push
jo
xor
lea
pusha
jnp
icebp
stos
xlat
pop
adc
test
sahf
ret
popa
lcall
shlb
fidivl
dec
scas
mov
les
nop
lea
pop
xor
lods
lret
pusha
push
test
mov
outsl
adc
push
jl
push
roll
cmc
mov
mov
addb
std
fsubp
dec
aas
mov
inc
sub
push
adcl
mov
sub
sti
shl
cmp
adc
mov
mov
cmp
cs
mov
lret
outsb
test
push
push
test
in
add
jl
mov
data16
ficompl
jae
cmp
pop
jno
imul
and
xor
jb
adc
imul
and
jmp
lock
xchg
out
adc
or
ljmp
add
aas
scas
xor
xor
adc
push
push
lods
pop
jnp
sub
je
jns
push
mov
je
lcall
lahf
enter
xor
add
add
test
clc
into
fcompl
test
aaa
pop
out
and
ds
xchg
les
cli
test
fisubrs
scas
push
stos
out
dec
dec
adc
lock
aad
push
inc
sub
test
lds
jne
das
movsb
data16
lea
pop
mov
and
dec
iret
orl
dec
lock
jno
lret
add
fisubs
shll
and
mov
add
in
inc
xchg
fmuls
iret
sahf
lock
jae
addl
pop
movsl
ss
adc
mov
sti
fdivrs
and
sbb
arpl
xor
fisubrs
les
insl
sbb
inc
pusha
in
cmpsb
push
lock
adc
aas
fcomps
cs
adc
arpl
mov
mov
cmpsb
rcrl
dec
and
rorl
mov
nopl
inc
loopne
inc
pop
fistpll
or
out
out
pop
mov
pop
popf
aad
pop
outsb
mov
loope
mov
xchg
jno
movl
ss
mov
cmpl
push
mov
xchg
and
xor
jo
int
push
push
out
cld
xchg
jp
fimuls
xchg
das
cltd
dec
orl
pop
leave
xchg
add
pop
mov
and
cmp
mov
mov
ljmp
les
lds
xchg
jp
xor
movl
arpl
jbe
push
insb
xor
popa
xchg
in
inc
scas
outsl
je
loop
mov
mov
sub
scas
lods
clc
enter
mov
arpl
es
addr16
in
out
lods
mov
cwtl
decb
sub
sahf
int3
mov
loope
sbbl
push
xchg
pop
cmp
jb
jbe
mov
shlb
sbb
xor
pop
ds
movsl
or
xchg
or
xor
mov
or
cltd
enter
jns
mov
mov
dec
lahf
or
jge
test
in
ficompl
or
dec
adc
xor
lahf
test
xchg
test
shlb
cmpsb
or
adc
scas
cmp
mov
mov
clc
mov
jmp
add
xor
addr16
and
adc
cmp
cmp
bound
add
mov
cld
mov
adc
mov
fisubrl
adc
sar
outsl
push
xor
lcall
add
mov
pop
mov
sub
xchg
sti
out
xchg
pcmpeqd
outsl
ficomps
xchg
ret
ds
inc
lock
sub
sub
inc
std
xchg
pop
xor
lcall
jle
adcl
and
jg
stos
pop
loopne
int3
xor
cli
dec
xchg
cmp
jg
push
das
sbb
aad
ja
popa
mov
mov
adc
pop
and
xlat
addr16
stos
inc
jmp
out
pop
aam
outsl
lds
inc
orl
test
jecxz
outsb
js
fdivp
adc
loopne
add
popl
pop
push
push
es
mov
add
lods
orl
mov
cmc
push
lods
inc
nop
pop
dec
push
filds
rcl
xchg
jp
mov
sbb
mov
mov
fcmovbe
enter
repz
jmp
popf
stos
xchg
push
pop
xor
sub
inc
pop
mov
mov
cmpsb
ds
cmpsl
sbb
mov
xor
inc
pop
add
cmc
arpl
shrb
adcl
mov
push
add
pop
sub
add
aaa
lret
adc
daa
jne
pushf
int
leave
stos
pop
aam
test
lret
cmpsb
mov
mov
mov
aam
jno
pop
lcall
hlt
sub
xchg
jno
inc
aam
daa
repz
and
insb
xchg
sub
movsb
and
bound
loop
jl
in
mov
pop
or
add
int
lods
cmp
jb
lret
in
add
sub
mov
push
call
mov
iret
aaa
lcall
pop
repnz
xor
rorl
jae
into
mov
and
in
addr16
aad
cmp
xor
pusha
std
outsl
dec
or
jbe
mov
jno
push
push
ja
test
repnz
mov
outsl
cli
cmp
repnz
jp
cwtl
cld
xchg
jp
out
mov
sahf
into
imul
sahf
pop
jmp
lret
arpl
adc
dec
mov
add
dec
test
or
jno
outsb
cld
dec
inc
les
mov
sub
dec
xchg
push
xor
fdivl
in
rcl
xchg
cmp
mov
pop
dec
shrb
push
sti
es
lods
pusha
inc
cmp
je
lcall
scas
es
adcb
test
fstl
dec
adc
outsb
in
fdivl
adc
int3
or
or
pop
pop
fisubrl
loop
dec
mov
inc
jnp
dec
popa
movsl
adc
xchg
lret
push
int
pop
enter
xor
xor
adc
aaa
cltd
push
or
cld
xor
cltd
icebp
push
mov
dec
dec
pop
fstpt
jg,pn
lea
push
dec
inc
jae
mov
arpl
mov
jb
add
xchg
mov
pop
orl
jecxz
sub
mov
mov
cmp
arpl
cmp
cmp
adc
xor
add
gs
fnstcw
in
xor
push
cmpsl
add
adc
push
lods
adc
or
and
ljmp
pop
pop
out
xchg
adc
sbb
push
outsl
pop
cmp
cltd
sub
and
add
sub
inc
ret
mov
les
xor
push
and
xchg
xor
mov
popa
add
scas
js
int
lds
sub
imulb
lret
jns
in
sahf
cmp
sbbl
pop
mov
test
add
xchg
jmp
jg
cld
xor
pop
adc
cwtl
pop
repz
stc
fdivrs
add
hlt
sti
pop
aaa
jb
movsb
pop
inc
pop
mov
in
testb
dec
xor
inc
mov
lods
pop
sub
pop
inc
dec
inc
sub
ret
add
inc
mov
out
xor
pop
movsb
xor
enter
jno
inc
outsl
mov
int
add
jmp
outsb
pop
jecxz
sahf
ja
in
cmp
pop
and
icebp
sbb
jl
sbb
in
lock
sub
mov
xor
js
cmc
fdiv
cmp
lods
imul
call
cmpl
xchg
loop
ljmp
imulb
xchg
adc
js
fwait
or
cltd
push
call
sahf
imul
imul
sbb
call
jbe
lock
sbb
xchg
mov
lret
rorb
sub
xor
or
push
test
out
xor
fwait
call
in
and
dec
cwtl
mov
jle
push
xor
lret
jge
scas
ret
xchg
push
sbb
ret
shll
jmp
mov
and
call
adc
dec
insl
lcall
arpl
stos
loopne
ds
xor
testb
int
xchg
xor
test
cmpsb
stos
std
cmc
repnz
xchg
fldcw
cld
lret
out
lcall
push
inc
dec
mov
ret
jecxz
pop
or
and
cmpsb
mov
stos
mov
xor
jecxz
gs
loope
mov
push
test
arpl
roll
xor
pop
pop
inc
lret
mov
int
cmp
and
jb
pop
test
push
sub
push
mov
add
mov
in
adc
pop
push
xor
in
push
add
out
shr
mov
mov
jo
mov
mov
ds
inc
dec
lret
mov
test
add
mov
push
pop
mov
push
or
cmp
pop
das
insb
rclb
aaa
mov
and
test
rorl
and
lods
pcmpgtd
frstor
pushf
mov
jmp
lret
sbb
test
mov
andl
vpmacsswd
jne
adc
dec
fldl
jp
inc
jp
adc
adc
jmp
lds
jle
bnd
sub
call
jg
inc
sub
data16
das
mov
addr16
das
scas
lahf
rcll
pusha
adc
lods
test
negb
lods
and
ja
or
stos
jge
popf
mov
lea
data16
mov
jecxz
xor
cmc
mov
sbb
mov
loop
lahf
lahf
adc
push
sahf
mov
aam
out
das
rorb
and
cltd
add
xchg
adc
daa
sti
cmpsb
imul
xor
fcmovnb
and
cmpsl
adc
push
mov
jp
mov
sub
mov
adc
or
jns
popf
int3
push
and
out
scas
or
rorb
mov
cmp
mov
and
fsubs
mov
jbe
jno
xor
call
sub
inc
mov
cmp
call
mov
sub
std
js
int
mov
jbe
inc
movsl
sub
or
adc
jnp
repnz
stos
loop
inc
cltd
sbb
add
sub
adc
cmp
pusha
or
jb
mov
and
sbbb
pop
cld
imul
push
jae
js
inc
out
mov
in
rol
fstpt
out
push
scas
or
dec
mov
mov
xchg
jns
sub
hlt
std
and
inc
roll
ret
int
dec
xchg
js
add
mov
and
dec
loop
add
outsl
fstpt
inc
xor
imul
mov
call
jnp
rcll
mov
cltd
and
mov
cmp
jno,pn
jl
push
jns
adc
shll
add
adc
mov
adc
sub
xlat
mov
add
dec
fldt
inc
lods
xor
inc
mov
push
cmpsb
lods
adc
popa
xor
call
sub
rcrl
cmp
adc
adc
adc
outsl
pop
and
sub
dec
int3
popf
in
cmp
pusha
or
testb
filds
out
mov
add
lcall
dec
sub
mov
add
testb
adc
test
aam
adc
repnz
jae
mov
icebp
push
pop
jbe
popf
pop
movsl
add
std
sub
dec
repnz
sti
jbe
test
push
pop
insb
aas
imul
incl
sub
dec
adc
sub
ljmp
mov
jne
dec
lret
xchg
ljmp
mov
ja
lret
mov
lods
lcallw
inc
cs
add
out
xchg
add
jge
std
push
stos
and
mov
pusha
dec
fcmovne
mov
mov
mov
lahf
mov
mov
or
repz
jmp
gs
ret
pop
cmp
mov
lea
and
adc
orl
mov
daa
mov
push
xor
mov
call
out
mov
inc
dec
cmp
xchg
dec
mov
mov
add
insl
fstp
les
dec
gs
cwtl
jecxz
sbb
frstor
sti
sbbb
movb
popa
or
popf
adc
mov
xchg
insb
push
nop
push
out
std
aad
mov
push
insl
push
and
dec
inc
sbb
fnstenv
pop
mov
adc
fmul
pop
orb
in
jmp
call
jmp
fisttpll
cmpsl
cmp
mov
in
popa
lods
mov
cmpl
fmuls
rorl
popa
adc
jle
jns
dec
dec
dec
inc
out
pop
mov
loop
xchg
jns
aaa
push
imul
movb
lods
push
je
ret
xor
hlt
or
mov
pop
mov
pusha
dec
xor
mov
gs
push
rcl
ja
push
loope
pop
add
dec
mov
sub
or
fbld
cli
mov
loop
lods
stos
and
mov
xchg
mov
cli
les
inc
lods
push
pop
push
mov
sahf
add
and
sbb
daa
jmp
or
adc
daa
xchg
sbb
loop
or
and
setge
lret
push
jmp
je
mov
pop
mov
mov
gs
fists
xchg
jmp
push
je
jle
test
fs
dec
fs
pop
lods
push
test
mov
shll
sbb
mov
sbb
jp
std
negb
sbb
rcrb
xchg
adcl
xlat
or
adc
cmc
sbb
int3
popf
sub
or
cs
repnz
arpl
leave
aad
in
stos
stos
xor
push
fs
test
ds
mov
das
rclb
add
lea
mov
aaa
shrb
out
dec
cmp
cmp
sahf
push
enter
pop
jae
in
xor
xchg
jmp
pop
pop
rclb
dec
mov
or
xor
push
aaa
into
mov
lret
bound
orl
adc
mov
and
lds
mov
ficomps
and
test
test
aaa
xor
jg
and
mov
fists
mov
push
inc
jmp
pop
jns
mov
ret
dec
cmp
pop
rclb
xchg
lcall
cli
xor
mov
jecxz
cmp
dec
add
gs
stc
cwtl
jle
xchg
sub
add
cmp
mov
jno
adc
xorb
popa
push
insb
xchg
insl
lods
roll
pop
mov
push
sbb
imul
rol
xor
lret
sub
aad
cld
shlb
cmp
test
or
out
and
das
loopne
fldt
pop
call
cmpsb
xchg
stos
push
nop
jle
mov
push
imul
sub
loop
jl
xchg
add
jl
cmc
push
xor
or
dec
cmpsb
insb
or
notb
lret
pop
scas
jge
ja
xchg
mov
movsl
aaa
sub
orb
scas
cmp
inc
lahf
adc
rcl
mov
lds
lret
adc
xor
xchg
sbb
outsl
lods
call
fdiv
call
mov
push
pop
icebp
inc
xor
xor
xor
xchg
not
pop
testb
sbb
jmp
stos
inc
lahf
dec
fs
mov
lret
out
sti
dec
cld
adc
lret
shrl
mov
int3
into
and
sarl
es
adc
inc
leave
mov
cmp
clc
dec
negb
mov
mov
lret
mov
dec
loopne
mov
push
fsts
and
add
imul
mov
gs
jg
jl
fcoml
jge
push
dec
loope
mov
or
xor
pop
rorb
mov
pop
sbb
mov
mov
mov
mov
lret
mov
jecxz
pop
notb
ds
jge
add
dec
cli
sahf
adc
inc
mov
repz
or
push
test
mov
pop
ret
repz
cmp
jle
loop
sbb
jo
push
sbb
mov
mov
add
repz
test
cltd
xchg
pop
pop
es
jg
xor
mov
mov
dec
mov
dec
popa
daa
pop
je
and
lret
add
jne
sub
ljmp
pushf
dec
pop
clc
fisttps
stos
or
dec
loope
pop
inc
pop
ja
sbb
cli
imulb
adc
out
into
pusha
insl
dec
adc
push
jg
popa
xchg
jmp
jg
push
and
xor
push
mov
push
pusha
xchg
in
pop
push
loop
mov
xchg
xchg
xorb
bound
and
xchg
jmp
cmp
lock
dec
repz
cmpsb
cmp
sbb
adc
shrb
mov
je
out
mov
sub
sbb
addb
je
mov
aad
jo
xor
arpl
mov
xchg
mov
mov
mov
fbstp
adc
dec
popa
dec
stos
adc
cmp
inc
push
push
aas
add
pop
adcb
mov
shlb
jns
loopne
cld
mov
jb
test
inc
push
pop
mov
xor
ret
in
or
rcrl
orl
insb
enter
mov
test
test
mov
pop
iret
inc
sbb
push
test
lret
clc
mov
or
fdiv
add
mov
sub
js
negb
add
cld
inc
cmp
jecxz
test
js
sbb
cmp
scas
mov
sti
pop
iret
hlt
cwtl
xor
loop
dec
sarl
xlat
xor
cmpsb
pop
mov
pop
jae
ret
cs
jp
bound
sub
adc
adc
les
push
sbb
testl
jecxz
inc
ss
out
push
cs
and
ds
call
adc
pop
lea
dec
pushf
pop
outsl
aad
push
xchg
cld
sub
push
sub
loop
and
lret
ja
jb
jnp
int3
xor
lds
out
sbb
shll
stos
mov
mov
dec
lods
sahf
rolb
out
outsl
call
inc
fistps
or
outsb
or
mov
add
mov
cvtps2pi
cmp
sbb
add
jo
mov
pop
lret
jp
fwait
sbbb
call
rolb
hlt
or
js
mov
in
enter
jb
pop
js
and
out
sub
sub
or
repz
fisubrl
pop
nop
lea
push
leave
cmp
sti
jl
mov
aad
ss
and
xor
mov
cmpsl
add
je
mov
adc
enter
push
cmpsl
dec
loop
push
test
test
xchg
out
cwtl
mov
ljmp
sub
inc
in
bnd
gs
icebp
rolb
inc
add
popf
pop
dec
xor
adc
sarb
mull
popf
pop
js
mov
inc
cld
movsl
jg
rorl
nop
xorl
xor
push
shll
testb
push
test
sbb
xor
adc
addr16
out
bound
mov
ss
cmpsl
dec
push
lcall
je
test
imul
aam
mov
mov
xor
pop
pop
iret
mov
cmpsb
pop
lock
push
out
dec
pushf
mov
pop
jne
or
jg
push
sbb
out
xorl
sbb
popf
pop
sub
add
or
pop
xchg
int3
pusha
push
mov
inc
js
mov
hlt
push
mov
xor
cmp
cs
scas
rorl
cmpsl
mov
xor
out
xor
lds
cmp
es
sub
cltd
xchg
xchg
gs
lods
shl
fists
inc
outsb
jle
sbb
ja
les
push
jge
cs
fadds
int3
jnp
ja
xor
cmpsb
out
mov
xor
jge
push
flds
faddl
mov
push
lods
sbbl
pop
or
and
bndldx
xor
cli
dec
orb
outsl
push
cltd
xor
xor
and
movsb
adc
arpl
addr16
loop
jle
inc
sti
loope
pop
lock
fs
shl
cmp
jo
outsl
stc
dec
cmc
xchg
test
pop
push
xor
dec
push
xor
jnp
int3
cmp
jnp
cmp
aad
and
fs
sbb
dec
xor
mov
in
mov
or
pop
lods
stos
in
xor
cmp
dec
notl
insb
or
les
and
fbld
inc
jle
ds
mov
mov
xlat
mov
push
and
stc
sbb
sub
testb
imul
lock
cmpsl
pusha
leave
adc
daa
push
pop
cld
out
and
lods
sbb
jle
dec
mov
pop
cmp
jge
mov
mov
rcrb
mov
stc
std
in
je
push
inc
cmp
pop
cwtl
sbbb
jb
adc
loop
pop
mov
xchg
imul
cmpb
xor
bound
insb
cmpsl
loope
sbbb
fdivl
not
in
jg
adc
push
dec
adc
out
jg
out
inc
push
call
mov
fisttpll
stos
jecxz
mov
lock
shlb
mov
pop
scas
mov
cmpsb
mov
stos
dec
dec
aam
xchg
std
jae
xchg
cwtl
ss
adc
add
sub
and
outsl
out
mov
cld
mov
inc
inc
cmp
fdiv
xchg
push
inc
stc
lds
mov
cmp
fwait
mov
pop
pop
jnp
sbb
fimull
add
jp
int3
jnp
sbb
jp,pn
outsl
push
inc
jns
adc
xchg
int3
xlat
fwait
pop
idivl
mov
sti
test
andb
stc
lock
in
jnp
jno
adc
int
xchg
out
and
movb
andb
xor
adc
pop
loope
push
mov
aad
mov
pop
dec
sti
mov
pop
and
adc
sbb
scas
sbbl
pop
imul
sti
movsl
negl
js
call
in
pusha
dec
adc
xchg
scas
neg
mov
into
mov
das
ss
mov
outsl
mov
movsl
mov
mov
cmc
bound
and
push
xor
lahf
mov
add
movsb
inc
cwtl
add
push
outsl
xchg
adc
inc
xor
inc
pop
cmp
ret
mov
notl
enter
jle
cli
cmp
push
xchg
mov
mov
in
xchg
xor
repnz
add
mov
lret
jg
xchg
loopne
loop
pop
cli
test
xchg
push
shlb
jnp
sub
add
cmp
mov
or
lahf
hlt
xchg
pop
mov
dec
test
in
mov
adc
lock
inc
sbb
jno
sub
mov
jl
mov
lcall
repnz
xor
fwait
and
ret
in
in
xchg
es
and
outsb
pop
shlb
xor
mov
rclb
inc
dec
fcoms
and
mov
or
mov
pop
ljmp
in
out
es
pusha
loop
sbb
sahf
sbb
lret
std
pop
es
jmp
rcl
cli
rcrb
fcom
push
jno
movsb
stos
push
inc
and
imul
loope
sahf
or
les
fnstenv
stc
jge
jmp
push
icebp
ss
inc
sub
out
testb
jae
or
jmp
mov
in
xchg
fistl
flds
dec
jbe
xchg
scas
imulb
mov
or
cltd
loop
das
inc
mov
enter
fdivr
xor
insb
cltd
push
mov
push
mov
lret
adc
hlt
or
std
push
mov
mov
int
mov
push
lcall
xor
test
es
je
sbb
sbb
dec
ficompl
out
or
in
es
mov
and
mov
psrad
imul
loope
subb
xorl
sbb
test
push
xor
mov
outsb
shr
mov
mov
out
xorl
xor
loopne
aaa
cltd
mov
or
xor
aaa
mov
cltd
mov
jo
ret
add
push
dec
rcr
add
imul
xorl
and
in
add
mull
sbb
add
faddl
test
bnd
repz
je
adc
inc
push
sub
jge
into
pop
push
jns
fwait
inc
cltd
pop
pop
push
std
mov
push
mov
pop
xchg
sti
mov
and
call
adc
or
pop
dec
mov
mov
pop
push
popa
loope
imul
icebp
jnp
push
jns
negb
arpl
jnp
sub
mov
sbb
imul
and
inc
fsubs
or
outsl
insl
push
jbe
jge
xchg
outsb
xor
adc
hlt
jb
loope
lock
jmp
xchg
fdivs
pop
xchg
mov
adc
in
jne
dec
repnz
ret
gs
fwait
sbb
gs
jne
pop
or
popf
mov
pusha
lock
jmp
push
inc
sub
cld
pop
lds
xchg
aas
jo
mov
jmp
rorb
ss
daa
xchg
and
daa
push
mov
cld
aaa
mov
je
pop
mov
das
sbb
jae
cmp
mov
imul
es
outsl
cltd
sbb
rcrl
pop
xchg
mov
xchg
pop
shlb
ret
pop
sub
lods
add
mov
lret
lahf
xchg
orl
sub
test
mov
dec
or
das
incb
repnz
ret
sbb
push
sahf
adc
jecxz
jo
or
je
inc
xchg
pusha
jnp
pop
popa
dec
cmp
rol
clc
iret
and
arpl
icebp
adc
mov
xchg
dec
popf
jmp
std
es
fbstp
jne
lcall
subl
scas
inc
je
and
mov
mov
cmc
sub
push
dec
jne
dec
sbb
mov
out
pushf
sbb
mov
popf
mov
imulb
orl
icebp
sub
mov
ja
add
not
mov
fisubrs
mov
mov
jb
movsb
ss
mov
and
test
addr16
pop
cmc
and
xlat
xchg
movsl
xchg
jne
mov
pop
push
xorb
dec
mov
xchg
dec
cmp
adc
shrl
outsl
shll
cltd
js
jl
fdivrl
lcall
mov
cmp
orb
nop
mov
xchg
cmp
dec
push
or
loopne
adc
in
cmp
adc
jle
pop
test
jns
loope
rorl
add
sbb
cli
pop
call
sbb
lret
cltd
mov
xor
and
xchg
mul
adc
shll
jnp
xchg
orl
or
jecxz
jle
movsl
call
call
sbb
ret
mov
push
lret
loopne
adc
fadds
ret
adc
jl
inc
ss
xor
sub
int
in
and
cmpl
scas
test
call
cmc
cs
inc
or
and
and
movsl
fisubs
cmc
dec
hlt
sbb
add
dec
xor
or
cmpsl
sbb
cwtl
sub
daa
mov
das
push
dec
pop
inc
rol
rcl
nop
push
stos
imul
push
js
sbb
loope
add
sub
and
sub
andb
mov
jl
mov
jle
ret
xor
aam
xchg
fs
out
ds
pusha
and
adc
dec
jbe
dec
aad
jle
inc
jl
out
sub
jb
in
call
pop
sbb
xchg
fcomi
and
add
das
mov
xor
es
mov
repnz
push
jns
pop
sbb
dec
mov
ljmp
js
push
in
in
mov
aas
mov
icebp
push
insb
push
cmpsl
lea
or
sub
jb
add
jg
jae
inc
sub
cmp
xlat
push
int
call
mov
jp
push
lea
cmp
jnp
xor
fucom
fs
gs
and
mov
ljmp
and
push
jae
dec
xchg
lcall
inc
inc
mov
inc
cmpsb
push
out
adc
repnz
or
cmp
scas
mov
into
sbb
jp
mov
hlt
add
fbld
cmp
dec
jns
and
xchg
push
jmp
cmpsl
mov
xchg
test
and
mov
fmull
push
andb
push
adc
je
push
lahf
mov
int3
sub
xchg
daa
es
inc
or
popf
enter
mov
ret
dec
mov
fildl
dec
lahf
test
in
push
pop
out
movsb
pop
adc
mov
mov
mov
repz
jmp
mov
inc
or
push
push
stc
rorl
movsb
sub
lods
cmp
and
lahf
pop
xor
div
xor
jle
inc
ss
sub
xlat
out
mov
inc
pusha
data16
push
fidivrs
pop
mov
mov
cld
addr16
lock
idivl
out
in
jp
push
add
dec
lret
jns
lock
dec
dec
xlat
fwait
mov
das
cmp
cmp
test
outsb
dec
fldl
mov
adc
xor
add
and
in
mov
mov
rol
jne
sub
jge
ss
sbb
lock
mov
sub
pop
jo
rol
adc
lea
pop
inc
iret
mov
mov
dec
jmp
sti
mov
repz
pop
js
cmp
xchg
xor
cmpsb
js
sub
std
jns
inc
gs
shlb
sub
jg
mov
adc
jb
fsts
stc
fmul
lea
and
cmp
xchg
and
bound
daa
mov
repnz
sbb
xor
in
pop
jb
sahf
mov
pop
cld
add
hlt
aad
push
outsl
mov
clc
mov
xlat
mov
sub
mov
shll
or
aam
and
cmc
dec
outsb
cmp
les
movsl
test
dec
subb
sub
xchg
jg
sbb
enter
pop
xor
dec
mov
cmp
xor
pop
xchg
add
ja
cmp
stos
sbb
pop
push
jge
stos
orl
add
inc
repnz
pop
adc
das
sub
out
mov
ret
mov
mov
and
mov
outsb
sub
dec
adc
pop
push
cmp
ds
jmp
cmpsb
inc
stc
cltd
insl
push
shl
loopne
cmp
sbb
lock
les
adc
xor
bound
daa
rclb
arpl
movsb
xchg
das
shll
jbe
sub
jae
mov
add
jge
seto
pop
add
lret
testl
js
mov
incl
pop
repz
jge
dec
cmpxchg
cmpb
jge
movsl
xchg
push
xchg
dec
and
sbb
mov
and
cmp
dec
fistpll
jl
cs
add
rorb
out
mov
xor
and
mov
call
sub
loopne
test
xchg
jl
stc
pushf
pop
fwait
sbb
dec
add
mov
jnp
fwait
stos
fwait
xchg
iret
mov
in
mov
mov
fisubs
sti
cmp
addr16
jg
jp
sbb
lock
test
lcall
cltd
int
scas
sbb
ljmp
shrl
es
cmp
or
int3
clc
pop
jb
dec
lds
push
pop
sbb
cmp
lcall
xor
add
scas
insb
lcall
shrb
inc
movsb
imul
sahf
xchg
adc
rclb
lds
mov
mov
sbb
mov
je
mov
adc
pop
adc
and
mov
pop
popa
push
das
mov
pop
mov
push
or
pushl
data16
adc
pop
jg
fldz
and
hlt
popf
adc
not
jmp
dec
push
pusha
cli
push
movsb
sub
xchg
cmpsl
mov
jmp
enter
xchg
cmp
lds
int
imul
sti
sub
ret
cmp
cmp
push
cmp
dec
xor
inc
sub
dec
sub
push
data16
sbb
fwait
lret
or
xor
xchg
push
fs
mov
cmp
cmc
mov
test
jl
mov
xchg
push
ljmp
push
or
int
jnp
fs
mov
mov
outsb
notl
and
and
inc
icebp
jb
push
sub
scas
iret
xor
or
insl
adc
mov
je
js
popa
cmp
mov
mov
pop
ss
leave
lock
movd
mov
mov
inc
movsl
dec
jmp
cltd
das
sbb
loop
cmpl
lcall
mov
pop
cmc
imul
ljmp
fisttpll
cltd
out
push
push
mov
in
xor
lods
xchg
cwtl
fadds
lea
xchg
jp
sub
mov
lods
lcall
filds
cmp
mov
xchg
add
pop
mov
and
cmc
cmovg
mov
addr16
shll
repz
aas
lock
gs
xlat
dec
mov
popf
jo
pop
stos
je
jo
out
push
ss
dec
nop
dec
repnz
gs
stos
rcl
dec
dec
bound
icebp
insb
cmp
push
push
test
push
mov
jmp
jg
push
lock
in
fcoms
cwtl
sets
jb
test
push
mov
mov
pusha
fisubrl
clc
mov
dec
insb
lods
inc
fstps
sbb
ja
iret
push
jne
mulb
mov
pop
mov
jnp
add
xor
push
mov
push
mov
mov
push
out
cmpsl
push
setge
push
inc
in
lret
and
pop
jl
jne
inc
mov
add
fwait
adc
icebp
dec
cld
fldl
fs
popa
repz
mov
ds
add
out
lods
pop
stc
iret
cmp
lock
enter
data16
mov
xor
push
dec
push
cltd
sbb
pop
cld
xor
ljmp
loope
xor
jecxz
pop
arpl
mov
push
in
adc
insl
sbb
inc
pop
xlat
push
add
ds
cli
xor
dec
fmull
inc
into
pop
test
mov
repz
cmp
jl
sbb
jmp
sub
stos
mov
addr16
adc
mov
mov
popa
or
out
leave
mov
out
fnstsw
testl
out
cli
cltd
rcr
adc
lods
imul
cmp
test
popf
aas
adc
inc
outsb
adc
jmp
call
outsl
scas
imul
data16
out
inc
lods
cmp
jl
cmp
pushw
or
aam
mov
stc
jne
call
xor
jb
dec
loopne
aam
jge
fsubs
jmp
pop
jo
les
mov
rcrl
xchg
addb
pusha
movl
lock
or
out
and
out
test
int3
cltd
push
mov
cld
scas
cmp
stos
pop
mov
ret
in
fucomp
es
lcall
in
add
mov
and
mov
sub
out
cmp
inc
xor
repz
in
imul
push
lahf
fisttpll
imul
int3
mov
test
enter
mov
in
aas
mov
sbb
lcall
cmpsb
cmc
out
mov
aad
mov
xchg
inc
call
shl
and
sbb
fwait
jle
mov
adc
ret
es
in
or
push
nop
mov
xchg
mov
jne
adc
or
mov
stos
mov
push
fcomi
sti
lret
popa
jb
gs
punpcklbw
call
push
nop
pop
repz
gs
dec
pop
adc
add
lods
sbb
stos
jno
ds
fdivs
push
inc
stos
xchg
das
dec
imul
sbb
or
pushf
stos
cs
subl
inc
mov
push
mov
xchg
or
or
sbbl
mov
add
int3
sub
sbb
mov
cli
das
or
add
add
daa
cmp
ja
in
outsl
rol
out
pop
jmp
jne
push
xor
push
data16
jae
pop
bound
insb
repnz
incb
xchg
inc
shrb
pop
xchg
fcomi
pushf
adc
cwtl
out
mov
sarl
adc
inc
ftst
flds
stc
jo
cwtl
push
icebp
js
mov
jp
mov
ss
or
int
fidivs
add
xor
pop
jne
fists
inc
pop
cltd
pushl
jns
insb
dec
xchg
sub
pop
orl
in
or
cmp
mov
insb
lret
jns
pop
mov
mov
out
sub
xchg
fadd
push
push
test
push
lcall
mov
sub
fcoml
out
dec
mov
cld
adc
or
outsl
jmp
push
movsl
dec
jge
in
sub
in
aad
lcall
gs
xor
pop
adc
movb
inc
push
xchg
stos
movsb
dec
movl
lret
arpl
xchg
jbe
mov
adc
jg
cmpsb
aad
sti
cmp
mov
outsb
mov
mov
outsl
pop
dec
sub
aaa
pop
clc
pop
mov
or
jb
xorl
in
int3
loopne
or
lods
leave
call
sbb
push
loopne
dec
loopne
icebp
icebp
fs
lods
jae
out
xchg
popa
pop
inc
pop
and
jns
jbe
sbb
adc
sbb
xor
xchg
inc
leave
or
cmp
std
xor
popa
repz
inc
add
cmpsl
jo
stos
repz
jns
jns
clc
inc
lahf
sbbl
jge
outsl
lods
mov
repz
jl
das
inc
xchg
gs
push
inc
lcall
mov
loopne
sti
scas
or
mov
cmp
scas
or
mov
pop
mov
xlat
add
and
ds
inc
xor
jbe
mov
nop
arpl
hlt
in
idivl
add
or
push
icebp
add
fsubrl
test
ret
pop
mov
cmp
jl
jnp
ss
jns
fcoml
adc
sub
loopne
nop
mov
xchg
mov
test
dec
call
push
adc
pop
add
pop
loopne
imul
shll
stos
mov
mov
ds
call
fsubrs
mov
pop
xor
jnp
test
test
sbb
and
xor
mov
fldt
stc
mov
mov
add
mov
lea
iret
mov
lds
clc
sbb
or
hlt
add
jb
push
cmp
xchg
dec
clc
sbb
xchg
scas
iret
cwtl
pop
and
inc
test
movsl
xlat
andb
roll
js
mov
fsubrl
sbb
ret
lret
arpl
clc
dec
push
ljmp
cmpsb
xchg
shr
xchg
outsb
pop
jbe
mov
mov
sub
adc
scas
sub
int3
bound
gs
in
xchg
adc
fwait
push
jmp
in
inc
neg
jmp
ds
inc
jno
mov
mov
popf
out
mov
xchg
mov
sahf
pop
fildl
mov
adc
ljmpw
bound
pop
inc
mov
js
cmp
cmp
xor
test
orl
jecxz
cmp
push
mov
addl
lods
jb
add
jne
push
jns
sbb
inc
or
pop
sub
add
jg
mov
mov
cmp
jmp
into
bound
dec
pushf
push
ret
push
push
in
ljmp
mov
scas
icebp
rorb
jne
cs
add
push
sbb
sub
stc
leave
movsb
inc
roll
adcl
xchg
cltd
ljmp
push
push
xor
sti
jb
enter
dec
pop
out
cmpb
movsb
mov
movsb
fcmovb
jge
int3
jge
rcrl
pushf
adc
mov
andb
dec
lea
int3
dec
fiadds
mov
aas
or
mov
pop
pop
dec
stc
jo
inc
or
popf
or
mov
sti
insb
inc
das
out
xchg
decl
mov
sbbb
adc
add
andb
pusha
jb
xor
inc
jb
rcr
aas
nop
mov
mov
mov
repnz
pop
lahf
and
cmp
add
inc
mov
jns
fs
and
xlat
mov
add
lods
mov
add
ret
inc
icebp
xchg
cmpsb
roll
call
mov
pop
fists
cmp
rcrb
sbb
and
idivl
movsb
arpl
pop
leave
sbb
mov
in
jo
sub
int
push
push
mov
mov
loope
enter
push
loopne
inc
popf
add
es
dec
scas
and
push
and
shll
push
out
xor
inc
pop
sub
lods
sbb
dec
xchg
mov
xor
pop
xchg
aaa
lret
push
sbb
jmp
mov
add
pop
xchg
fdivrs
fisubl
push
inc
into
mov
or
ret
add
or
sarl
pop
aas
sub
cmp
imul
jle
cltd
test
and
std
lret
jns
fiaddl
jge
pop
push
lods
stos
shl
cmc
cmpsl
mov
cmp
mov
ljmp
cmpsb
int
mov
add
ret
insb
lock
xchg
jp
decb
mov
push
pop
xlat
mov
cmp
add
das
mov
push
dec
sub
loope
jbe
mov
imul
cmp
lds
or
imul
inc
insb
dec
cmp
mov
mov
add
mov
sub
xor
pop
adc
stos
jo
daa
pop
xchg
ds
mov
sbb
sti
int
ljmp
pop
dec
mov
mov
mov
out
filds
jmp
imul
push
inc
xchg
adc
aam
imul
cmp
lahf
jp
and
jle
mov
push
sbb
icebp
int3
test
cwtl
xchg
cmpsl
lcall
mov
in
push
lahf
or
rcl
pop
mov
ss
jns
xor
sbb
cwtl
icebp
stc
lea
mov
add
repnz
sbb
clc
mov
mov
mov
ret
and
xor
pop
mov
jge
notb
jmp
dec
out
dec
test
lods
cld
sbb
adc
jae
aad
faddl
sub
inc
loopne
push
push
sbb
movsb
xchg
cmp
aaa
pop
pushf
fistps
or
xor
fcmovnbe
mov
push
mov
imul
rcrl
jno
in
inc
dec
gs
sbb
or
or
or
lret
and
cmp
std
lods
jnp
mov
or
pop
dec
sub
add
cmp
mov
rcr
cld
mov
mov
sub
mov
or
insb
leave
pop
push
or
stc
jbe
or
and
cmpsl
jbe
fisubl
push
mov
test
or
dec
movswl
pop
cmp
mov
or
pop
and
aam
cmpsl
out
lret
jae
dec
mov
add
std
insb
aaa
or
xchg
call
aad
fbstp
pop
fbstp
sub
out
adc
sub
scas
out
xchg
std
sbb
dec
mov
mov
sti
data16
sbb
lods
das
xchg
sbb
push
test
ret
push
repnz
std
or
pop
jge
jp
pop
xchg
enter
adc
fistpll
sub
or
adc
mov
jnp
mov
lods
out
mov
and
mov
inc
mov
pop
push
cld
insb
addr16
push
add
xor
xchg
jnp
ret
leave
out
mov
test
sub
sub
and
cmp
imul
sub
jo
cwtl
ljmp
fsubrp
jnp
repnz
mov
ljmp
out
sub
addr16
movsl
adc
icebp
pop
inc
sbb
jmp
sub
inc
inc
leave
repz
jle
push
mov
pop
test
dec
inc
les
and
xor
mov
out
xor
int
jl
and
sbb
dec
add
adc
scas
add
dec
testb
sbb
jge
xchg
call
arpl
pop
xchg
lret
adc
push
xor
rcll
popa
icebp
cltd
stos
icebp
aas
mov
pop
fcoms
cmp
mov
ret
xor
jg
les
push
cltd
mov
daa
lock
mov
fistl
inc
and
scas
adc
shll
popa
mov
sbb
sbb
cmp
and
iret
mov
enter
or
movsl
pop
sbb
gs
adc
stc
sbb
fnstsw
in
sub
movsb
mov
popf
bound
or
mov
icebp
in
mov
inc
mov
ret
jne
bound
mov
std
arpl
mov
test
pop
out
sbb
scas
cmp
jmp
push
je
inc
push
pusha
outsl
dec
and
out
and
into
push
xor
repz
out
xchg
movl
stos
sahf
jbe
ljmp
fcom
pop
fstpl
cmpsl
mov
xchg
mov
cli
stos
sahf
xchg
ret
std
add
dec
in
dec
decl
push
fiadds
ja
push
popa
fisubl
push
sub
mov
stos
cmp
or
setge
xchg
sub
outsb
mov
pushf
fbstp
push
mov
jecxz
stos
aam
lret
mov
scas
out
icebp
lods
fcmovb
lea
xchg
arpl
jl
cli
imul
pop
mov
js
rcll
and
xchg
and
inc
lret
sbb
addr16
sahf
loopne
mov
xlat
ja
fmull
xor
adc
add
cmp
cli
call
push
mov
xchg
hlt
xchg
dec
jp
test
jb
jl
sub
adcb
xor
inc
std
jp
loopne
dec
xlat
jle
jp
add
push
out
mov
frstor
sbb
cmp
out
jle
inc
mov
aaa
mov
rcll
mov
and
sub
clc
leave
sub
jle
fcmovb
xor
jl
jp
cwtl
push
pop
je
lock
mov
movsl
inc
cmp
cmp
push
add
dec
shl
xor
pushf
lcall
or
cmc
insl
addb
inc
insb
gs
in
and
lcall
cmp
ds
push
cmp
adc
mov
nop
mov
add
int
sahf
xlat
das
cmpb
idivl
mov
add
outsl
cld
pop
iret
jp
test
test
xchg
mov
aad
mov
lods
or
mov
mov
mov
das
xor
mov
not
sahf
mov
and
mov
xor
icebp
mov
mov
jmp
adc
dec
dec
sub
sti
xor
xor
cwtl
addr16
repnz
ds
inc
rclb
hlt
data16
xchg
pop
loopne
cmpsl
repnz
frstor
xlat
jecxz
add
cmp
sbb
xchg
mov
scas
aas
pop
add
in
inc
pop
inc
push
sahf
das
adc
add
fists
add
shll
imul
es
xor
lea
popa
mov
cmp
decl
mov
mov
loopne
lock
sbb
call
mov
test
xchg
push
xchg
adc
jle
rcrl
jg
js
aaa
mov
adc
mov
xor
dec
mov
cltd
or
lcall
mov
mov
inc
jle
dec
pop
lods
pop
ljmp
inc
dec
mov
and
ret
cli
pand
adc
pop
sbb
jmp
cmp
jle
mov
add
pop
shrb
neg
sbb
cmp
mov
push
mov
inc
or
rcrb
lock
push
add
adc
dec
imul
pop
es
and
cmpsb
inc
push
pop
cmp
and
inc
pop
out
adc
pusha
sub
fists
mov
jle
push
cmp
js
nop
xchg
inc
shrl
mov
adc
sti
cwtl
outsl
outsb
adc
and
pop
shl
mov
xchg
mov
jecxz
out
fnstcw
mov
xor
shrl
mov
rclb
flds
sbb
out
ret
mov
loop
mov
mov
dec
movsb
scas
insb
cltd
bound
sbb
and
mov
adc
jmp
and
sub
adc
mov
cmp
sub
int3
dec
cmpsb
daa
sub
mov
ds
fwait
mov
idivb
jl
aaa
jo
sbb
ret
in
aam
mov
or
mov
xor
out
cltd
fmul
loope
xchg
adc
stc
mov
add
out
pop
in
fdivl
mov
stc
sbb
insb
xor
mov
and
std
jnp
cltd
punpckhbw
add
ljmp
sbb
inc
jle
out
addb
mov
push
lds
mov
jo
fidivrl
xchg
push
std
jnp
dec
fstl
pop
jecxz
lock
adc
pusha
lods
or
cmpps
inc
daa
or
lock
push
jmp
mov
rorl
or
into
xorb
les
outsl
sub
pop
fucomp
icebp
ficomps
mov
dec
xchg
pushf
leave
lret
inc
notl
mov
int3
das
int3
mov
pop
rcrb
mov
je
or
outsl
pop
out
shrl
mov
inc
fidivrs
sub
push
mov
lret
je
or
mov
out
int
movsb
push
push
shrl
stos
jae
mov
fistl
cwtl
sbbb
or
dec
or
outsl
outsl
mov
mov
mov
push
addr16
fcmovne
or
adc
dec
xchg
insl
push
adc
cmpsb
dec
lods
adcb
sub
and
loop
add
imul
scas
add
push
or
mov
pushf
sbb
fucomip
mov
stos
lods
push
sbb
dec
jl
push
les
mov
rclb
mov
jecxz
jnp
xor
dec
dec
adc
arpl
stc
xchg
aam
lock
mov
and
xchg
outsb
xchg
inc
or
daa
add
ja
lret
inc
ret
sahf
ds
scas
jb
sbb
sub
ret
aam
cmpsl
sub
lds
xchg
sub
xor
xchg
fmull
inc
mov
xor
and
push
cmp
lret
inc
push
push
mov
movsl
cmc
fwait
jmp
jne
fmul
gs
or
scas
rcl
lcall
push
xchg
xchg
sub
xor
or
xchg
insb
mov
mov
dec
xchg
mov
jno
mov
cmpsb
inc
scas
add
push
sbb
test
inc
mov
adc
call
aad
fdiv
cltd
nop
rclb
jbe
push
adc
jmp
pop
in
js
cmp
and
xchg
mov
jg
adc
repnz
sub
cmp
mov
dec
inc
lahf
lcall
mov
mov
stc
fwait
lcall
insl
push
add
xchg
cld
fwait
adc
aas
xchg
bound
push
in
cli
fldcw
push
pop
push
data16
int
push
movsb
xchg
xchg
jmp
inc
loope
aad
push
sarb
xor
idiv
mov
mov
inc
pop
andl
jecxz
pop
cmp
jne
xchg
subb
mov
and
mov
stc
pop
imul
clc
lods
mov
sub
mov
inc
sti
in
sub
jmp
roll
push
loope
pop
adc
and
xor
iret
adc
ret
testl
les
mov
jle
jne
add
mov
sub
in
mov
stos
push
cli
inc
dec
jg
inc
mov
sahf
mov
les
dec
xor
push
and
popf
adc
ljmp
adc
dec
xchg
pop
sub
push
sbb
push
adc
pusha
adc
push
xchg
dec
xchg
ds
dec
sub
xchg
push
xor
movsl
and
clc
jno
fs
and
les
and
jbe
das
lahf
mov
mov
in
aaa
dec
je
mov
test
movsl
inc
xor
sub
inc
loopne
pextrw
mov
loopne
nop
data16
fists
or
xchg
mov
lods
imulb
cli
movsb
cmpsb
mov
inc
sahf
out
dec
testl
jl
test
and
jmp
cmp
jp
push
jbe
hlt
xor
scas
cli
pop
push
sub
sub
out
shrb
or
cltd
adcb
repnz
xor
std
add
movsb
adc
jbe
or
jle
jl
cmpl
nop
add
cwtl
push
inc
repnz
mov
inc
cld
mov
sbb
sub
mov
or
iret
cmc
lcall
stos
mov
es
dec
inc
cli
in
push
scas
mov
in
int
sbbl
cmp
stos
mov
lea
push
in
notl
dec
and
fmul
movsl
mov
cmp
xor
lahf
int3
xchg
push
sub
pusha
adc
aad
cmp
js
loop
sbb
test
imulb
xor
out
pushf
shll
push
aas
sbb
aas
sahf
push
jmp
jb
fisubrs
loope
ds
int
imul
mov
and
sub
rol
add
roll
lcall
mov
xchg
mov
pop
pop
xor
add
imull
mov
fcomip
fdivrp
fisttpll
inc
in
int
rol
jl
das
jg
pop
bound
pop
push
mov
repnz
iret
sbbl
add
mov
push
inc
jp
shll
call
je
mov
rcrl
jae
push
pop
fisubs
mov
mov
dec
cmpsb
add
cli
dec
cmp
cmp
mov
insl
shr
push
fidivl
jmp
loopne
or
outsb
movsl
inc
mov
addl
xchg
mov
outsb
cltd
or
mov
and
push
bswap
xchg
test
mov
stos
lcall
fs
aaa
int
adc
dec
loope
clc
jge
mov
int3
sbb
adc
nop
xor
cli
dec
push
enter
lret
xchg
or
mov
xchg
inc
lcall
pop
hlt
dec
jo
xrelease
aas
mov
pop
mov
mov
or
mov
lock
ficoms
popa
nop
js
sahf
push
nop
je
sahf
lret
pop
inc
imul
lds
jg
push
int3
add
xchg
jne
push
xor
and
push
jg
scas
mov
inc
out
adc
push
adc
out
or
cmp
int
ret
fwait
sub
xchg
ret
data16
les
test
inc
dec
push
xchg
sub
jg
cmp
mov
jno
stc
mov
sbb
out
xchg
maxps
inc
loop
sbb
ds
pop
out
outsl
subl
xchg
cs
pusha
bound
dec
xchg
inc
mov
nop
dec
loope
jl
adc
mov
xor
mov
outsb
and
pop
adc
cmp
cmc
test
add
cmc
sub
dec
xor
repz
inc
and
jbe
icebp
hlt
mov
fdivl
imul
aaa
cmp
rorb
imul
loop
nop
imul
daa
push
out
call
inc
or
push
imul
fdiv
mov
lock
test
jbe
in
cmp
test
fldcw
test
inc
ja
repnz
cltd
popa
repnz
ja
es
aaa
lahf
outsl
cmp
dec
dec
sub
dec
lahf
sub
lret
in
leave
sbb
in
lret
sub
test
imul
xor
call
dec
imul
int3
scas
mov
xchg
cmp
xorl
daa
test
adc
jmp
outsb
jb
cmc
add
mov
aaa
xchg
jmp
mov
xor
xor
mov
and
fsubl
imul
xchg
adc
imul
repnz
rolb
insl
arpl
xor
xorb
mov
dec
and
outsb
mov
inc
lds
mov
adcb
inc
dec
mov
cmp
add
push
repnz
mov
fisubrs
cmp
pop
lock
shlb
xchg
sbb
sub
add
test
hlt
mov
cmp
lret
push
xor
cmp
cmp
xor
jnp
jp
mov
cld
loop
push
adc
popf
add
mov
jae
fidivrs
adc
pop
movntps
cld
in
rorl
ja
ror
leave
sbb
sub
call
push
jecxz
inc
pop
mov
loopne
jge
add
inc
sbb
adc
mov
sbb
mov
lea
jb
ret
lcall
adc
xchg
inc
out
sub
mov
mov
xchg
add
jb
xchg
mov
dec
hlt
mov
cmp
push
dec
into
or
pop
mov
ja
xchg
cli
gs
cmp
je
mov
inc
and
adc
icebp
fistl
sti
adc
push
mov
jmp
cmp
mov
pop
cmp
push
add
aas
inc
jne
daa
and
push
test
cmp
cmpsb
popl
or
pop
call
cmp
popa
push
mov
arpl
cmpsb
jno
pop
movb
jle
xchg
roll
and
sarb
xor
les
xor
mov
loop
mov
xchg
or
data16
cwtl
std
jb
nop
fsubrs
scas
sbb
add
pushf
push
cmp
push
gs
sbb
pushf
bound
daa
xorb
sarl
sbb
and
pop
push
inc
push
adc
test
pop
inc
xchg
cmp
data16
add
ds
sbb
or
sub
aas
das
jnp
into
cmp
cmp
or
cmp
add
ficoml
pop
adc
mov
movsl
js
push
or
or
cmp
insb
fisttps
ja
push
scas
sti
add
pop
sbb
adc
sbb
out
and
adc
fwait
leave
aas
cmc
dec
push
fdiv
push
and
or
or
inc
mov
dec
sbb
pop
dec
shl
xchg
into
into
rol
xor
dec
mov
enter
pop
cmp
inc
leave
push
mov
and
jo
jmp
jns
cli
and
sub
mov
inc
nop
sbb
cmpsl
sar
cmc
pushf
popa
jnp
loop
adc
sbb
push
jmp
test
fisttpl
je
andl
dec
scas
cmpsb
in
pop
test
and
fadds
imul
test
pop
or
add
or
cmc
dec
push
mov
cli
and
in
mov
mov
aaa
jg
dec
cmp
xchg
outsl
scas
js
sbb
or
add
mov
repz
call
in
mov
fld
mov
xchg
jns
adcb
rcl
inc
in
dec
xchg
mov
pop
mov
dec
inc
addr16
dec
loop
mov
fildl
aam
lret
xchg
ficoml
in
decl
mov
mov
fnstenv
movb
sbb
lret
addr16
fildll
dec
lret
lret
inc
xlat
lock
into
inc
xchg
leave
shl
decl
cmp
popa
jecxz
int
gs
inc
mov
das
and
insb
lcall
rcll
test
test
xchg
std
dec
sbbb
cmp
pop
mov
inc
dec
jb
or
popa
lea
dec
loopne
loopne
adc
iret
cmp
dec
inc
xorl
mov
iret
adc
xchg
sbb
sti
jnp
jb
push
xchg
repnz
in
xchg
aaa
fwait
pushf
mov
int
test
hlt
cmp
sub
jns
mov
ficoms
xchg
mov
iret
lods
mov
sub
ud0
and
test
int
dec
test
insb
insl
std
push
pop
lods
pop
call
sbbb
xor
in
ds
out
imul
test
je
je
cmp
or
cli
add
rorb
test
mov
add
hlt
mov
addr16
dec
mov
jle
push
jg
pop
push
dec
jg
jmp
scas
sar
aas
aad
cmp
mov
cmpsl
add
clc
mov
insl
ds
insb
cld
ret
addr16
int
or
scas
cmp
fstps
outsb
and
test
pop
sub
sub
scas
add
loope
sbb
pushf
in
outsb
push
or
mov
cmp
jp
sbb
mov
mov
adc
pop
mov
push
add
xor
push
dec
fcmovnbe
mov
jnp
mov
xchg
fwait
mov
cmp
movl
xchg
movsb
xchg
jge
push
add
enter
cltd
dec
xchg
adc
or
add
popa
inc
div
es
add
push
nop
xor
mov
lret
ffreep
inc
insb
mulb
pop
mov
mov
sbb
sub
out
iret
out
xchg
int
pop
sbb
and
cmp
adc
xchg
int
jl
xchg
in
mov
repnz
lock
push
ljmp
idiv
loop
decb
and
adc
add
les
xchg
std
or
mov
jg
into
jmp
mov
jl
cli
push
jg
hlt
out
imul
fidivrl
repnz
ss
int3
lret
sti
or
nop
sahf
adc
sbb
int
or
mov
cmpsb
adc
je
cmp
adc
cmp
popf
pop
push
sbb
shrb
pop
test
mov
xchg
mov
xlat
cmp
ds
fcomps
jle
add
popa
aad
push
pushl
dec
adc
lea
pushf
mov
lret
xor
push
cli
inc
hlt
test
mov
mov
stos
lahf
mov
push
loope
push
mov
leave
cltd
mov
outsb
loope
sub
sub
sub
add
adc
movsl
adc
jle
xchg
imul
data16
je
xor
fdivr
and
xor
shll
xor
jns
or
divl
pop
cmpsl
xchg
mov
shll
cmp
push
inc
popf
pop
hlt
push
xchg
xor
lcall
fs
inc
xchg
ljmp
gs
mov
cwtl
lcall
jae
fdivr
push
in
pop
negb
sbb
leave
pop
mov
fptan
or
lret
punpcklwd
aad
fdivrp
inc
xor
shlb
test
pop
and
mov
cmpsb
dec
jecxz
dec
jp
fldenv
add
mov
mov
pop
ja
cwtl
sub
mov
pop
and
cmp
icebp
xchg
lea
daa
dec
pop
push
push
lcall
add
pusha
sbb
mov
ret
mov
push
shr
pop
jge
loope
jecxz
add
pop
xchg
xchg
aas
fldt
stos
or
push
push
shrb
adc
mov
jp
in
inc
xchg
jg
rolb
jnp
jnp,pt
mov
push
mov
repz
push
in
insb
mov
inc
dec
cltd
sub
test
push
cmp
cld
movsl
mov
cmpsb
xor
lds
xchg
jo
mov
mov
sbb
je
xchg
into
sbb
push
stos
leave
push
enter
scas
mov
cmpsb
mov
xchg
jnp
gs
push
loope
iret
xlat
xchg
mov
test
mov
dec
and
movsl
scas
jnp
imul
inc
push
dec
lret
pop
jne
sub
xlat
loopne
imul
aad
arpl
ss
xchg
dec
mov
xor
mov
aad
mov
fists
pop
cmp
push
enter
mov
push
push
stos
mov
adc
test
ficoms
imull
jp
call
sbb
fwait
sub
mov
popa
jge
in
xchg
dec
xor
or
jp
out
pop
cli
xchg
fsubrl
loop
add
pop
sub
add
xchg
jge
and
fcmovne
jecxz
push
and
jmp
or
mov
div
lods
xor
std
ds
cmp
dec
pop
stc
inc
pushf
lret
fcoms
into
mov
mov
xchg
ficomps
data16
adc
jae
mov
hlt
push
push
dec
sbb
insl
pusha
and
fcompl
adc
dec
dec
add
mov
cmp
pusha
adc
shlb
rolb
clc
sub
jecxz
pop
daa
test
rcr
adc
fld
out
ret
or
jge
ljmp
jae
imul
or
ss
sbb
and
out
insl
pop
lahf
push
jne
pextrw
dec
movsl
testb
std
sub
outsb
inc
cmp
dec
sub
and
aas
lret
inc
or
mov
jns
cwtl
icebp
push
imul
mov
sbbb
fnstcw
push
shr
rorl
mov
adc
add
scas
in
cs
lds
jge
push
data16
jno
jp,pt
jmp
sub
sub
scas
jo
adc
int3
cmp
mov
les
or
or
fdivl
mov
les
mov
and
mov
xor
out
jecxz
in
icebp
pop
pop
xchg
xlat
jo
arpl
je
sub
leave
pop
pop
jmp
lods
pop
mov
js
je
cmp
xorb
mov
scas
xchg
or
push
xor
repz
in
nop
cmpsb
dec
in
adc
push
inc
push
fildll
mulb
pushf
dec
add
mov
cmc
sub
mov
pop
lods
hlt
sbbb
cltd
test
mov
jmp
dec
shll
ds
mov
in
shll
ljmp
sti
inc
mov
fbld
sbb
cmp
loop
lods
push
fs
pop
fldenv
filds
out
push
sub
inc
inc
loope
ljmp
mov
adc
scas
dec
inc
shrb
sub
ljmp
cli
mov
sbb
sub
fmull
repz
sub
rcll
movsl
sar
mov
lods
mov
fwait
jge
jne
add
xchg
ret
cmpsb
fwait
push
pop
stc
sub
stos
cmc
arpl
lret
mov
cmc
adc
push
push
ds
lock
mov
in
out
js
data16
shrl
cwtl
mov
cmp
setns
popf
pop
mov
sbb
movsl
pop
cmpsl
push
dec
xchg
enter
and
inc
jge
jecxz
mov
mov
cltd
and
push
push
adc
mov
outsl
dec
fsubl
jbe
clc
insl
sbb
test
jne
pop
sbb
mov
imul
fldl
lahf
mov
fists
mov
dec
push
ret
mov
xor
iret
mov
nop
stos
loope
inc
mov
pushf
xor
push
push
add
fimull
mov
addr16
push
mov
lcall
mov
rorl
mov
sbb
push
leave
aas
lock
insb
jle
bound
xchg
xchg
call
insl
out
loop
enter
iret
mov
push
jmp
shll
sbb
popf
xchg
jge
lret
mov
cmpsb
lods
jecxz
jbe
mov
stc
out
inc
movsl
in
ljmp
lahf
inc
out
test
pop
popa
pushf
daa
cmp
mov
mov
pop
push
lods
stos
inc
sbb
lcall
icebp
das
rolb
xor
xchg
pop
and
repz
inc
push
mov
sti
push
imul
jge
mov
jb
sbb
out
dec
jns
test
sahf
dec
mov
testl
aam
mov
andl
es
rcl
std
mov
mov
xchg
mov
cmc
out
imul
lods
cmp
and
cmpsb
fwait
repnz
in
adc
lcall
movsl
pop
mov
mov
adc
movsl
xor
inc
stc
jo
sbb
dec
mov
popa
mov
hlt
sub
loopne
push
jle
mov
flds
mov
xor
loope
pop
cltd
test
cltd
rorb
inc
xchg
mov
gs
mov
jnp
lods
and
jae
jns
and
fs
xchg
jle
pusha
pop
xchg
cmp
mov
xlat
mov
sarb
outsb
add
cmp
push
add
ficompl
in
lods
adc
stos
push
inc
gs
pop
sub
pusha
mov
xchg
push
fmul
mov
mov
jmp
sbb
nop
jle
iret
xor
nop
sub
xchg
enter
jo
dec
or
decb
adcl
inc
daa
xchg
test
ja
lahf
mov
iret
mov
mov
imul
push
ret
fidivl
sar
fwait
mov
xchg
mov
pop
push
loop
outsb
push
imul
dec
fildl
push
jno
popa
jecxz
jge
push
inc
insb
pop
push
or
lret
dec
xor
andb
pusha
mov
lret
and
arpl
push
filds
lret
mov
xchg
in
sti
repz
in
push
jo
cmpsl
stc
add
pop
mov
add
stos
mov
call
dec
xchg
xor
jb
mov
shl
test
hlt
add
clc
add
pop
push
js
dec
out
mov
inc
ss
jg
outsb
pop
int
rorb
sahf
addl
repz
stos
inc
mov
pop
imul
inc
push
lods
lret
ss
mulb
mov
push
mov
mov
fisttps
xchg
dec
inc
fisubrs
pushf
dec
jge,pn
push
int3
test
push
insb
inc
std
aaa
xchg
sub
jmp
loope
in
mov
sub
popa
enter
mov
in
out
sbb
lahf
pop
cmc
icebp
pop
dec
inc
push
add
xchg
cmp
push
int
or
push
shlb
push
or
pusha
fcmovnb
fnstsw
out
loope
test
xlat
lock
dec
or
ret
xchg
ss
sbb
xchg
push
std
jae
cmpb
arpl
aam
jmp
dec
xor
psrlw
sbb
push
mov
jmp
inc
sbb
data16
mov
cmp
fisubrl
aad
dec
add
stos
hlt
loopne
sub
mov
in
mov
sub
xchg
cmp
jge
pop
dec
mov
inc
dec
mov
ret
fimull
mov
dec
sbb
jg
pop
pop
stos
aaa
decb
sub
notb
xchg
push
test
in
pusha
out
sub
xor
dec
leave
sub
rorl
outsl
cltd
and
ja
rcll
lods
cmc
xlat
jns
or
inc
ficomps
lock
mov
nop
inc
mov
jge
mov
loop
jecxz
and
test
pop
sbb
lcall
mov
or
inc
jge
add
jg
out
dec
fs
pushf
xor
mov
pop
mov
mov
inc
sti
push
xchg
pop
aaa
das
dec
mov
jl
add
sti
sbb
sbb
andl
and
stos
mov
xor
les
xchg
enter
jb
icebp
mov
fidivl
aam
test
ljmp
dec
loopne
orl
int
repz
insb
nop
push
loopne
push
jge
fistl
orl
call
in
stos
ror
rcrl
push
push
int3
adc
ja
je
cli
push
dec
adc
xor
push
sub
fildll
inc
xor
pop
xor
scas
dec
out
int
ljmp
clc
jmp
outsb
lea
cltd
adc
fiaddl
outsb
lods
repz
outsb
xor
ss
adc
mov
ret
jmp
and
imul
idivl
mov
push
fcompl
xchg
sub
jno
cwtl
adcl
fsubl
movsl
or
or
dec
mov
in
adc
xlat
cmp
pop
test
fdivl
in
lods
sahf
gs
sarb
incb
jl
arpl
mov
mov
in
push
add
sete
push
in
mov
aad
in
mov
jno
dec
dec
popa
dec
cmpsb
cmpsb
jbe
sub
jne
jg
cli
xchg
xlat
scas
pop
push
test
add
iret
or
xor
sub
fsubr
lods
sbb
cmp
adc
roll
cmp
dec
push
sahf
fidivs
loope
jmp
pop
add
sbb
jnp
jge
pop
sub
sbb
add
xor
dec
xor
cs
adc
decl
outsl
cltd
loope
dec
ret
cmp
sbb
mov
jecxz
data16
les
stc
jl
push
loop
inc
cmp
jecxz
xlat
mov
xchg
and
push
sbb
das
inc
into
sti
fwait
pop
mov
adcl
mov
cld
scas
mov
call
sub
dec
shlb
push
xor
xchg
and
inc
ror
shr
rclb
syscall
pop
mov
imul
aas
push
gs
mov
test
shlb
aas
test
test
adc
lods
dec
rclb
jge
or
xchg
pop
dec
push
sarb
test
push
mov
mov
cli
jg
pop
jge
ja
pop
pop
outsb
orb
add
and
sbb
dec
mov
pop
ret
data16
fldcw
jmp
nop
dec
xchg
test
xchg
lcall
dec
movsb
pop
aam
mov
sub
xchg
mov
and
cmp
stos
add
dec
aad
mov
fwait
pop
dec
xlat
xlat
xorl
fsubrp
mov
aas
outsb
jne
ret
add
nop
int
sbb
cli
scas
and
fdivrl
std
xchg
dec
lods
lea
paddusw
inc
add
rcl
outsl
adc
dec
repnz
push
outsl
mov
ficoms
inc
out
xor
movsl
push
test
dec
mov
sbb
push
fisubrs
dec
pusha
push
sub
sbb
jb
fisttps
mov
sbb
xor
movsl
aam
sub
and
jge,pt
mov
dec
mov
aas
lret
sbb
ds
mov
pop
shl
or
cmp
mov
inc
sbbl
pop
or
cmp
or
out
mov
arpl
fiaddl
xor
pop
adc
jg
std
jg
les
inc
cmp
shrl
mov
jmp
xchg
sub
fisubrs
in
dec
jge
int3
mov
jne
fisttps
inc
push
imul
loope
jge
inc
les
mov
shrl
sub
pop
ffree
pop
fnsave
jns
xor
inc
cmp
rcrl
sbb
ljmp
jmp
je
out
lahf
int
pop
jbe
loop
xchg
inc
and
ret
cli
sub
pop
movb
fcoms
xor
rorb
aas
stos
test
js
test
es
jae
aas
cmp
adc
push
xchg
jg
push
in
dec
lock
jg
cmp
ljmp
mov
or
enter
mov
cmp
mov
out
xchg
int
rorl
pop
insl
je
incb
lcall
dec
lock
lcall
shlb
pop
mov
pminub
add
pop
xor
ret
bound
in
mov
cli
pop
lods
dec
mov
rolb
je
stos
popa
xor
mov
jno
loop
mov
in
shll
dec
movsb
push
mov
test
jns
xchg
jg
xor
cmpsl
ret
mov
dec
lds
pop
mov
jmp
or
rcll
and
mov
push
bound
fucom
hlt
adc
push
je
xor
mov
insl
xchg
pop
lock
dec
jge
fstp
ret
xchg
cmpsb
sbb
ret
test
xchg
pop
les
inc
aas
incb
fbld
into
fidivrs
fstpt
sti
outsb
xchg
leave
sub
shlb
sub
and
jae
jmp
ja
mov
jg
repz
lahf
es
imul
js
dec
sbb
int
icebp
sub
fldenv
cmp
jb
ja
mov
popf
inc
xchg
and
dec
push
jecxz
test
adc
aad
sbb
mov
in
dec
dec
pushf
lods
lds
sti
jg
push
mov
out
fmul
cmp
aas
adc
test
addb
fdivl
xor
lret
pop
or
or
in
pop
dec
lds
dec
jb
xchg
jne
dec
or
pop
mov
lret
repz
dec
movsb
sub
mov
sub
pop
jle,pt
xor
movsb
jmp
in
ret
or
sbb
dec
lock
pop
dec
iret
repz
push
push
jo
ror
icebp
add
scas
rcll
inc
xor
sub
pop
ficoml
cwtl
cltd
mov
mov
aas
test
sub
in
push
cmp
stos
cmc
inc
jns
in
jge
pop
in
cmpb
cmp
shl
test
or
rcr
mov
add
or
jns
aaa
iret
xorl
jbe
add
cmc
inc
pop
shll
push
pop
mov
sub
fcmove
fldl
xlat
sub
jbe
xlat
icebp
cmp
daa
lock
shll
sbb
lods
rorb
add
cmp
jo
push
jne
xchg
test
sbb
insl
test
inc
mov
inc
mov
aaa
or
lahf
out
daa
daa
adc
jge
insl
xor
xchg
test
movsb
and
inc
and
rorb
pop
add
add
cmp
jne
lods
lods
shlb
daa
and
lods
aaa
neg
xchg
je
js
cltd
push
hlt
arpl
pminsw
js
insb
js
out
push
xsha256
cmpsb
xchg
lods
fdiv
fisubrs
jo
dec
inc
mov
mov
jle
addl
int3
lret
dec
ret
ljmp
inc
cs
pop
lea
mov
xor
out
orb
inc
mov
ret
in
sub
fs
adc
shlb
jg
mov
push
in
leave
sbb
xor
stos
mov
outsl
inc
push
mov
inc
dec
mov
or
or
cld
cltd
nop
xchg
mov
push
jnp
and
outsb
xor
xchg
cmp
jnp
call
push
pop
insb
mov
jae
test
sub
sbb
and
pop
pop
sar
push
jbe
and
or
jle
movb
mov
dec
inc
jecxz
adc
mov
cmp
fstl
loope
les
mov
lret
cmp
insl
mov
daa
mov
or
cld
enter
rorb
cmp
cwtl
cmpsl
push
mov
xchg
test
movsl
mov
rcr
sahf
xchg
cld
mov
xchg
std
jbe
cmp
fcomps
or
lock
cld
lods
loope
dec
mov
ljmp
lds
jp
jno
xchg
ljmp
xchg
addr16
push
out
lods
mov
dec
dec
ljmp
stc
xchg
in
mov
xchg
push
data16
fsubr
cmp
add
fildll
inc
insb
mov
dec
xor
lds
add
aas
cmp
jae
pushf
outsl
and
xchg
popl
cmpsb
xchg
cltd
jne
dec
insb
and
clc
xchg
hlt
daa
popf
mov
xlat
fidivl
leave
shlb
ficompl
mov
xchg
jmp
daa
xchg
clc
adcb
rolb
mov
jne
xor
call
push
jo
testb
and
fsubs
sub
mov
mov
sbb
out
mov
mov
mov
push
in
push
mov
cmp
lret
addl
pop
std
mov
es
adc
icebp
cmp
sbb
rol
push
not
jp
cmpsb
dec
jecxz
mov
mov
scas
fnstsw
int3
cmp
xchg
out
mov
xlat
iret
mov
pop
mov
js
inc
mov
repnz
arpl
int
or
xchg
mov
leave
inc
pop
in
gs
ljmp
sub
je
pop
mov
mov
into
xchg
xor
mov
imul
push
popa
outsl
std
out
shrb
push
fstpl
jns
dec
jns
gs
jg
insb
lds
sub
jl
nop
cli
pushl
outsl
pop
adcl
jae
lods
fisubl
cwtl
add
jl
rcrl
clc
sarl
pop
add
sarl
push
jns
mov
pop
push
hlt
imul
add
addb
mov
sbb
aas
sahf
cmp
pop
adc
sub
addr16
pop
add
fbld
out
imul
jmp
xchg
or
std
into
in
inc
out
fwait
adc
cmp
xchg
out
mov
fidivs
adc
je
jecxz
xchg
and
or
pushf
pop
pusha
mov
dec
lea
pop
mov
sub
sahf
icebp
inc
adc
je
pusha
scas
push
daa
adc
cmp
mov
add
inc
adc
lods
jnp
fisubs
imul
add
push
pop
out
jle
mov
push
movsb
inc
pop
lret
pushf
adc
mov
push
rol
adcl
scas
sub
cmp
and
jmp
jge
lods
sub
mov
lock
mov
inc
pop
cli
jmp
add
sbb
sbb
sub
sub
inc
pop
outsl
jge
push
aas
dec
xchg
aas
lods
fnstcw
clc
mov
cmpsb
cmp
mov
dec
fisubrl
mov
ds
xchg
bound
and
mov
addl
adc
xor
bound
outsb
inc
je
xchg
cmp
loope
out
shll
sbb
mov
mov
mov
decb
dec
ljmp
fsubrl
pusha
mov
lods
lahf
jge
inc
mov
out
pop
fadds
push
lea
cmpsl
test
or
jns
enter
addb
mov
jmp
fcomps
add
inc
cld
idivb
mov
push
insl
and
inc
ret
lret
hlt
push
movsb
test
mov
jnp
sub
pusha
xor
sbb
and
cmp
mov
sarb
lahf
add
mov
ret
stc
sub
xor
outsl
and
cld
cmpsl
in
jmp
in
ja
jbe
push
mov
and
gs
xchg
pop
mov
pop
bnd
aad
pop
jns
cmovbe
stos
sbb
fs
mov
int
fldt
dec
data16
lahf
xor
sub
mov
add
repz
pop
jnp
scas
add
call
std
adc
leave
iret
fildll
mov
ljmp
jae
push
daa
outsb
xchg
mov
mov
jae
jnp
out
sbb
inc
cltd
xchg
ss
nop
pop
cld
rorl
jp
jp
shr
in
add
xor
jmp
sub
jbe
arpl
pop
cs
js
es
xor
cli
fisubl
sbb
fwait
lods
mov
jge
lds
inc
movsb
dec
stos
sbb
ret
push
dec
fs
mov
jp
push
sub
addb
and
push
ucomiss
inc
add
pop
adc
aam
filds
inc
sarb
mov
repnz
enter
aam
imul
fildll
jl
or
sbb
andnps
pop
nop
or
inc
sahf
jno
sub
mov
or
cltd
in
push
pop
push
mov
mov
je
mov
inc
aaa
mov
aas
lods
jl
mov
lods
ret
jle
jb
ret
mov
pop
enter
adc
jo
inc
or
icebp
jbe
scas
jbe
lock
mov
movsb
pop
sub
pop
call
cld
sbb
rcr
jno
cltd
stos
and
mov
sti
sbb
rolb
cmpb
push
mov
pop
and
aam
xchg
mov
mov
dec
popa
cli
mov
jo
in
stc
rol
and
jb
jno
mov
cmp
arpl
mov
inc
jmp
xchg
jo
cmpsl
test
add
rclb
dec
movsl
mov
nop
sub
mov
les
test
jne
arpl
add
mov
mov
popa
iret
mov
in
cli
dec
sbbb
adc
ljmp
in
data16
mov
cmp
loopne
icebp
sbb
mov
fs
xor
mov
push
sbb
dec
std
repz
sti
cmp
sub
push
lock
dec
into
clc
mov
rclb
ret
adc
mov
rcll
mov
int3
and
pop
push
pop
pusha
inc
mov
xchg
add
jne
cmpsl
sbb
pop
shlb
in
and
icebp
scas
ret
pop
ja
pop
clc
inc
gs
and
shlb
out
push
inc
add
pop
xchg
or
dec
dec
iret
xor
dec
enter
loope
insl
sub
scas
pop
nop
pop
xor
inc
push
stc
cs
mov
imul
ds
and
fdivl
les
jne
sahf
sub
mov
xchg
push
mov
movsb
aam
repnz
xchg
inc
adc
push
movlps
jg
cmpsb
lahf
cmp
lods
jnp
enter
loope
add
out
ljmp
xchg
xchg
icebp
jns
fdivrl
mov
lds
cmpsb
hlt
pop
call
sub
ja
adc
lahf
cli
mov
scas
jmp
cmpsl
mul
out
jne
cwtl
jmp
pop
aam
mov
fsubrl
dec
pop
jle
cmp
nop
iret
cmp
insl
or
ds
and
sbb
popa
pop
add
xlat
cwtl
dec
cmp
jecxz
je
xor
cwtl
popa
cmp
clc
mov
movb
and
adc
or
fdivrs
sti
cmpsl
mov
jge
sbb
xor
outsl
push
inc
or
xchg
addr16
je
fstp
arpl
pushf
mov
xchg
sbb
cmp
pop
test
rcrl
jns
icebp
mov
xchg
mov
add
inc
push
and
fwait
mov
out
mov
dec
jo
loopne
std
lea
fsubrs
push
fldcw
inc
inc
enter
push
jo
cmpsl
out
loop,pt
rcrb
add
dec
stos
inc
mov
or
xor
xor
mov
or
sbb
xchg
stos
iret
pop
and
in
sbb
adc
adc
je,pt
push
cmc
fldenv
popa
mov
int
dec
add
sahf
and
test
xlat
inc
push
push
cmp
ret
sbb
repz
cli
sub
cmp
fsub
daa
push
mov
pop
or
hlt
mov
mov
sub
or
dec
idivl
or
cmpsb
outsl
cwtl
sub
les
inc
ss
jl
mov
xchg
sbb
popf
leave
pop
les
mov
xchg
adc
mov
or
jns
sub
mov
inc
adc
adc
mov
cmc
stos
lret
mov
jg
sbbb
es
repz
inc
pop
dec
jnp
push
shr
aas
jecxz
leave
push
andb
add
mov
dec
push
and
cmc
loope
mov
jb
shr
push
lret
shll
jp
and
fiaddl
lods
fs
dec
lret
adc
inc
in
sbb
pushf
addb
adc
mov
addr16
jns
lods
jae
add
xchg
mov
mov
ss
sarb
xchg
movsb
mov
dec
push
fxch
mov
sbb
xor
push
iret
sbb
inc
or
imul
out
mov
dec
adc
and
stos
or
cmp
aam
cld
test
adc
aam
add
out
bound
mov
adc
inc
adcb
xor
cmp
test
sahf
aam
mov
or
enter
bound
jle
fcmovnu
sahf
loopne
jno
loopne
push
cmc
fists
adcb
pusha
rorl
inc
in
cli
add
movsl
xor
outsb
push
inc
sub
mov
cmpsb
les
std
add
add
jge
cmp
stos
cld
mov
dec
pop
add
cmp
decl
xchg
jo
pop
in
or
jns
jo
adc
adc
push
nop
aaa
jns
or
fwait
mov
scas
xchg
add
dec
and
repnz
in
fdecstp
insb
shll
inc
iret
mov
enter
xchg
pop
stos
push
push
pusha
inc
mov
hlt
lea
push
pop
imul
lods
or
mov
arpl
or
mov
fnstcw
fidivrl
push
push
push
cmpsl
and
xor
sti
or
test
sub
pop
mov
lcall
dec
push
mov
mov
adc
sub
stos
fcompl
jne
and
inc
lahf
lret
and
loope
aam
enter
rcll
fiaddl
fbld
js
pusha
fildl
push
aad
push
scas
xchg
sar
lea
xchg
jg
or
jae
xchg
jmp
jg
outsl
dec
mov
push
shrl
push
mov
aas
and
adc
stos
xchg
fbstp
pop
mov
dec
pushf
scas
jg
jl
cmp
cmpsb
xor
lret
add
mov
adc
imul
shll
sbb
pop
sbb
inc
sbb
ret
cltd
pop
pop
popa
cs
push
pusha
sbb
pop
sti
pop
push
and
sub
inc
dec
loop
inc
js
imul
xchg
adc
jp
sub
sbb
adc
mov
push
pop
and
sub
lcall
fwait
xor
xchg
lret
sbb
inc
imul
inc
push
jne
call
lods
mov
mov
into
rorb
or
xchg
ds
rcrl
cmc
ret
and
jae
or
adc
mov
arpl
push
add
lret
hlt
xchg
pop
icebp
jmp
jp
cld
xor
jecxz
nop
sub
sub
pop
xchg
and
pop
inc
inc
mov
adc
pop
mov
jge
shll
xor
jecxz
pushf
dec
xor
adc
inc
mov
iret
inc
daa
dec
or
xor
insb
sahf
inc
andl
sub
imul
cmpsl
and
mov
fs
enter
cmp
mov
add
clc
mov
cmpsl
into
call
sub
int
call
inc
lret
cmp
dec
repz
add
test
xchg
jo
popa
in
pop
das
mov
push
sub
fsubs
and
loop
les
xchg
repz
jo
cmp
mov
repnz
pop
lea
push
test
dec
and
movsl
repz
in
xchg
mov
sbb
clc
iret
jmp
lahf
lahf
das
mov
xchg
loopne
or
gs
jmp
lcall
outsl
jae
daa
shrl
out
jno
fistps
push
hlt
jg
push
rol
pop
leave
test
lods
test
shll
cmp
jg
mov
mov
mov
add
pop
push
xchg
mov
lds
jecxz
add
iret
sti
fldl
daa
sub
cwtl
imul
test
test
mov
int
lods
cltd
scas
inc
lea
inc
pop
sub
xchg
mov
in
sub
dec
pop
sub
mov
add
dec
test
pop
pop
sub
stc
mov
adc
xchg
lea
dec
mov
test
outsl
lcall
andl
movsl
sti
clc
jo
popf
xchg
add
fs
xor
push
adc
adc
iret
ja
pop
adc
ss
jbe
xchg
cmp
dec
data16
add
stos
add
rcl
adc
fs
inc
sti
andl
repnz
addr16
and
jmp
push
mov
push
lcall
nop
inc
adcl
ljmp
push
or
add
roll
aas
rclb
dec
mov
test
mov
outsl
outsl
insl
cmp
jno
pushf
jno
adc
repnz
cmp
push
pop
popf
cmp
sbb
stos
call
in
mov
std
test
leave
push
ja
dec
sbb
sahf
sub
pop
mov
ret
insl
mov
lods
jmp
xchg
sbb
cltd
mov
mov
lret
daa
test
mov
dec
and
in
int
jns,pt
mov
js
in
out
push
pushf
jge
push
jbe
dec
lods
adc
push
sti
xchg
mov
cli
mov
int3
push
popf
xor
je
mov
ret
xchg
ret
jae
cmp
jecxz
movsw
jle
pop
push
cli
es
cmpsl
pop
pop
roll
sub
sub
fs
dec
imul
fwait
popf
rcrl
ret
jp
cmc
aaa
iret
popf
arpl
dec
dec
in
jno
cwtl
sbb
fdivl
test
xchg
incl
adc
daa
divb
cld
mov
jp
stos
scas
sar
cmp
pop
xchg
je
testb
cmp
pusha
arpl
frstpm(287
leave
rorb
ret
inc
popf
mov
push
aas
sahf
dec
cmp
sbb
test
movsb
test
adc
bound
inc
pop
ljmp
rorb
dec
aam
fwait
xorb
cld
push
and
push
push
mov
ljmp
icebp
mov
jge
std
xchg
mov
mov
inc
add
pop
test
gs
subl
mov
and
inc
das
jmp
aam
mov
icebp
cmp
xchg
hlt
outsl
dec
adc
cmpsb
in
inc
cli
movsl
mov
pop
pushf
dec
mov
insl
in
xor
sub
xor
loopne
nop
mull
push
movsl
imul
sahf
popl
iret
mov
mov
add
dec
dec
jecxz
in
cwtl
gs
inc
inc
pop
sarl
xchg
outsl
push
insb
pop
arpl
pop
movsl
imul
popa
out
xor
mov
sarb
fists
pop
and
dec
ss
sub
ret
adc
push
pusha
mov
jno
and
mov
mov
adc
sarb
jg
mov
jle
call
or
add
les
fnstenv
cwtl
cmp
stos
xchg
cwtl
pusha
lds
jb
lods
fs
aam
aaa
xchg
lret
push
testl
cmp
int3
test
adc
add
ss
mov
test
cmp
aam
mov
icebp
outsb
jp
mov
mov
and
rorl
pop
int3
and
xor
lahf
addb
inc
incl
add
mov
pop
lret
pop
xor
rclb
sahf
outsb
mov
push
inc
mov
dec
dec
std
loopne
into
xchg
out
cltd
js
and
jmp
mov
in
push
lahf
pop
mov
sub
aad
pop
lds
sbb
sub
and
psubd
rorl
xorb
cmpsl
dec
sub
or
push
jp
jp
int3
pushf
sub
push
lods
sub
scas
mov
sub
dec
jns
pop
pop
jns
and
xchg
adc
jae
ret
out
xorl
daa
adc
and
outsb
scas
xsaves
mov
fsts
in
mov
or
mov
sub
fmull
mov
pop
sub
test
lret
mov
sahf
push
les
in
add
add
rclb
pop
test
fwait
cmp
test
pop
pop
fsubs
dec
xchg
jge
in
popa
push
imul
push
loope
popa
mov
and
cmpsl
sbb
test
cwtl
or
add
mov
push
xchg
outsb
xor
cld
shll
push
mov
jo
inc
inc
ljmp
daa
mul
js
push
xchg
mov
xor
loope
es
push
inc
mov
in
das
lcall
sub
loope
sbb
add
mov
test
xchg
or
hlt
mov
outsl
mov
or
stos
inc
in
and
and
and
into
aad
pop
push
lock
dec
dec
cwtl
cmp
lret
test
sub
stos
push
mov
pop
or
data16
mov
mov
xor
fdivl
jne
or
sub
repz
pop
mov
cld
stos
mov
outsl
cltd
inc
push
adc
sub
xchg
mov
int3
pushl
jne
mov
jnp
ljmp
cld
cmpb
mov
stos
shlb
enter
adc
xchg
inc
cmp
stos
outsb
adcb
jae
aaa
lea
sub
insl
outsl
inc
inc
pop
xchg
xchg
inc
adc
or
jae
lods
cs
xor
add
pop
addr16
pop
out
mov
shr
stos
scas
fwait
cld
mov
pop
cld
popa
lods
pop
jb
cli
pop
mov
lds
add
cwtl
mov
jno
xor
sub
cmp
mov
loopne
xchg
pop
ja
fistl
push
jns
aad
lret
pop
inc
add
push
push
cmpsb
jp
pop
in
hlt
jno
adc
nop
aad
jle
stos
xchg
sbb
push
lods
out
je
inc
das
popl
dec
mov
dec
jmp
ljmp
sti
sbb
inc
imull
xor
lea
cmpl
out
cmp
rolb
push
pop
and
enter
mov
int3
sti
ret
mov
hlt
fsts
icebp
or
shl
jae
js
lock
push
cmp
cmp
cmc
dec
xor
shl
push
into
enter
insb
ret
inc
push
jle
sub
rcll
movl
pop
js
cmp
sbb
and
jnp
mov
xlat
and
data16
into
inc
imul
and
mov
add
subl
jb
xor
lcall
mov
jae
xchg
loope
js
and
rclb
test
testl
adc
les
sbb
jg
aam
fisttpll
stc
jle
sarl
enter
cmc
mov
subl
dec
jne
fisttps
or
or
out
mov
icebp
dec
daa
xchg
mov
sub
fwait
jle
xchg
xchg
pop
dec
xchg
sbb
shr
mov
push
pop
dec
xchg
ds
cmp
jle,pt
fisttpll
scas
mov
shr
filds
cwtl
cmp
aaa
push
imul
sub
in
push
cmp
shrl
sub
and
push
mov
push
add
adc
arpl
fiadds
leave
daa
aaa
dec
mov
dec
xchg
cmpsl
sbbb
xor
sbb
xor
popf
push
out
push
imulb
lods
pop
in
dec
popf
dec
sti
xor
add
insl
incb
dec
fcomip
mov
insb
arpl
ja
sbb
cmpsl
mov
dec
push
ret
stos
aas
inc
sbb
lea
add
cltd
popa
shrb
sbb
push
insb
sub
in
movsb
aaa
fisttpl
sbb
filds
cmpsb
je
shlb
inc
or
clc
inc
sbb
sub
aad
pop
insl
inc
pop
test
xor
xchg
aas
pop
scas
stos
xlat
dec
bound
mov
add
push
fnstenv
mov
adc
pushf
push
clc
xchg
nop
push
inc
sub
xor
jns
inc
sbb
imul
in
lds
daa
mov
or
lods
xchg
fadds
clc
and
push
push
push
and
out
mov
dec
sahf
dec
rcrb
es
scas
sbbl
dec
xor
sbbb
filds
inc
push
and
clc
mov
out
in
and
cs
cmp
pop
lds
cmp
mov
sub
test
cmc
sub
mov
mov
jb
insl
adc
dec
xor
and
push
or
mov
clc
or
ljmp
cmpsb
test
cltd
fnstcw
mov
cld
dec
cltd
adc
mov
int
mov
sub
idiv
and
arpl
mov
xor
pushf
cmpsl
add
cmp
sarb
loope
mov
jge
jnp
fiaddl
push
mov
out
and
inc
es
loop
xor
icebp
insl
inc
add
sar
les
ja
sbb
sub
pop
call
xchg
mov
push
sbb
cmp
jae
mov
cwtl
mov
add
loop
pop
add
mov
repnz
push
and
fwait
lcall
les
mov
test
or
fnstenv
lds
test
jnp
cmp
pop
lods
xchg
test
mov
mov
xor
lock
mov
cmpsl
xchg
mov
scas
add
stos
loope
pop
fs
repz
ss
addr16
xchg
aam
add
mov
jg
in
or
jp
and
xchg
dec
ss
shll
push
loope
cmp
add
icebp
mov
pop
push
pop
jb
mov
fs
outsb
ret
fmuls
xor
fmulp
icebp
in
push
sahf
xchg
int3
mov
dec
push
sub
xor
call
inc
mov
out
mov
cmp
cmpsl
in
or
std
insl
dec
push
mov
fmul
das
decl
push
aaa
sbb
pop
dec
movsl
enter
popf
std
mov
aaa
pushf
adc
pop
xorb
xchg
sub
and
pop
ret
sbb
cli
and
ss
mov
xor
icebp
arpl
mov
out
mov
fstpl
dec
idivb
or
sub
jge
popa
shll
dec
pop
inc
je
sbb
dec
out
sbb
popl
inc
loope
push
or
xchg
fsubs
ret
cmp
pop
cmpsb
aad
mov
lods
sub
add
mov
jg
pop
insb
test
scas
push
mov
pop
sub
xor
mov
mov
or
push
js
aad
lock
cli
movsb
aas
ret
aas
push
mov
repz
or
paddq
lds
cld
xor
popf
or
lret
mov
data16
subl
add
xor
adc
lds
xchg
or
inc
xchg
jno
mov
cld
mov
pop
push
push
lahf
mov
sub
adc
fcomps
cmp
mov
jge
pop
aam
jle
mov
mov
fisubrs
sbb
sarl
jb
push
pop
std
pushf
int3
xlat
xor
adc
push
xorl
and
fcomip
and
mov
adc
inc
xor
jecxz
cltd
arpl
cli
in
jl
fildll
cmp
sub
into
and
inc
das
sbb
stc
imul
lret
xor
popa
mov
nop
je
test
mov
fsubrl
and
mov
cmp
xchg
movsb
xor
push
daa
pop
mov
add
pop
outsb
sbb
gs
mov
xor
int3
and
adc
or
mov
loopne
dec
pop
call
xlat
or
add
adc
test
mov
in
ret
adc
fsubrl
jno
popa
sahf
into
cmp
pop
inc
jo
arpl
mov
mov
push
mov
sub
les
popf
mov
fimuls
cmpsb
fldl
dec
repz
xchg
lahf
sbb
xchg
xor
push
jne
cmp
dec
inc
pushf
dec
or
hlt
mov
cmpsl
ja
dec
fs
push
test
sub
test
lock
or
or
gs
adc
sub
loop
mov
repnz
cltd
jns
icebp
scas
xor
cmp
or
sub
int3
jmp
ret
dec
lods
pop
int3
test
xor
xchg
mov
sbb
clc
xchg
xchg
lret
fmuls
push
and
and
addr16
mov
push
mov
push
inc
push
pop
pop
mov
sub
stos
pop
and
pop
popa
push
lcall
lahf
test
mov
push
arpl
dec
jecxz
mov
lret
mov
mov
in
xchg
incb
xor
int
insl
shll
and
in
fmul
pop
pushf
pop
popf
cmp
lea
xor
outsl
push
jae
mov
rorl
call
pop
sub
xor
mov
popf
and
ja
imul
dec
lcall
cmp
push
in
mov
dec
call
outsl
sahf
inc
mov
or
mov
cmp
call
adc
scas
mov
sub
mov
mov
sarl
cmc
loope
int3
les
sbb
in
out
das
out
jmp
pop
and
push
mov
cmp
mov
aam
lds
xchg
jge
or
mov
or
jg
orb
xchg
addr16
mov
jle
lds
lret
xorb
repnz
add
cmp
mov
mov
aam
bound
les
fscale
add
dec
loope
mov
pop
mov
leave
in
inc
aaa
cltd
inc
and
fnstsw
and
jge
xchg
push
pop
loope
inc
jg
adc
adc
mov
cmc
test
mov
mov
pop
andb
dec
outsb
mov
lea
fwait
inc
xor
loope
pop
add
add
push
js
out
pop
xor
movsl
test
or
scas
iret
add
stc
lcall
incl
xor
loop
jo
lods
test
xlat
add
stos
out
movsl
ljmp
or
loop
ror
xlat
jne
dec
stc
fmuls
les
lcall
pushf
pop
dec
in
jbe
js
aaa
sub
dec
mov
jle
push
add
ret
lods
mov
lds
xchg
sbb
push
xchg
test
test
punpckldq
jecxz
hlt
and
in
cmp
xorl
scas
push
mov
lds
imul
ret
imul
out
repz
push
add
push
repnz
loope
mov
mov
push
xor
or
add
pop
or
test
push
adcb
call
movsl
cs
add
sbb
dec
xchg
xchg
mov
adc
push
push
mov
adc
xor
inc
cli
stos
lock
nop
adcb
xor
inc
aaa
xor
adc
mov
testl
sbb
iret
inc
popf
cmp
ret
mov
push
add
or
cmc
push
mov
dec
pop
cmp
xchg
sbb
loop
mov
add
cmp
fst
sbb
inc
pop
lret
push
fiaddl
stos
int3
iret
lock
push
add
daa
and
lahf
repnz
inc
dec
mov
push
rcl
push
fcmovu
rcll
xchg
adc
enter
push
inc
int
sbb
push
jae
inc
jns
cwtl
outsl
adc
fs
cmpl
filds
sahf
bound
scas
and
sahf
and
les
fmull
daa
dec
xchg
and
repz
inc
pop
xchg
push
pop
scas
outsb
daa
mov
je
adc
cmpsl
sub
jg
fsubrl
inc
xchg
shll
ss
rcl
fnstsw
ficoml
mov
outsb
inc
iret
loope
out
and
outsb
mov
pop
in
dec
xlat
pop
push
mov
int
mov
add
inc
and
inc
mov
inc
pop
mov
enter
cmp
ret
bnd
popf
loopne
pop
int
sub
mov
mov
jae
in
ds
jge
add
or
pop
cltd
es
pop
push
ja
pop
jbe
add
not
fldcw
xchg
cmp
faddl
ss
stos
pop
adc
pminub
jp
popa
sub
jmp
mov
scas
dec
and
jno
push
out
xchg
int3
cmp
popa
shlb
sub
ja
jne
or
arpl
inc
mov
pop
or
inc
mov
inc
nop
mov
cmp
jg
inc
mov
cmp
cmp
sub
dec
xor
push
sar
insb
push
bnd
iret
xchg
mov
push
test
sub
add
jl
inc
sub
insl
cmc
pop
fwait
xor
fcomp
push
outsl
sub
sbb
lret
stos
push
add
and
xchg
and
adc
cwtl
or
xchg
stc
scas
orb
and
mov
jle
rep
pusha
pop
xor
mov
sbb
leave
fwait
pop
sbb
add
pop
add
mov
xchg
and
xchg
out
popf
clc
pushf
adcb
out
mov
loop
in
adc
add
jmp
rcrb
ja
testb
lahf
insb
aam
mov
inc
es
sbb
or
insl
pop
push
push
js
fwait
or
mov
addr16
in
mov
outsl
xlat
pop
repz
inc
lret
movsl
and
fistpl
pop
mov
stos
aad
cwtl
test
add
cmp
outsl
stos
add
test
push
mov
xchg
scas
pop
push
mov
jne
popf
jo
jnp
in
and
sbb
and
add
cwtl
mov
xchg
mov
mulb
xchg
sbb
inc
sub
dec
test
enter
mov
push
imulb
icebp
and
fldl
mov
ds
mov
sub
push
stos
scas
stos
push
mov
pusha
dec
xor
jns
push
roll
negl
sbb
cmc
test
mov
loopne
jmp
cmpsb
push
fwait
inc
pop
push
out
push
mov
adc
xor
data16
cmp
jae
jge
mov
call
xor
ret
test
pop
inc
jno
fstps
mov
or
mov
and
sti
jmp
je
aam
shrl
cmp
mov
xchg
aam
lea
dec
pop
mov
cltd
xchg
xor
add
sbb
xor
cld
data16
fs
add
movsb
mov
sbb
pop
sbb
aas
loope
movsl
imul
or
stc
or
int3
sub
ljmp
mov
frstor
add
mov
xchg
cmpsl
xor
shl
cmpsl
and
mov
and
xchg
mov
test
cmpsl
jg
dec
insl
sbb
insb
mov
jg
add
movsl
repz
es
add
icebp
jbe
cmp
push
mov
mov
jo
stos
orl
push
jmp
adc
and
jge
cs
push
jo
adc
mov
fdivl
iret
rorb
dec
xchg
or
mov
mov
daa
xor
movsl
push
in
jp
icebp
jle
cmp
fstpl
pop
cwtl
and
lock
push
test
xchg
pop
cwtl
test
jnp
add
ret
sub
xchg
stc
add
dec
jb
add
ds
cld
mov
arpl
fnstenv
cld
scas
cmp
fisttpll
adc
cltd
jp
sub
jp
in
inc
jle
inc
push
cwtl
clc
jecxz
jnp
mov
loopne
je
mov
loope
jle
mov
lods
idiv
push
imul
cltd
push
pop
mov
jg
sahf
bound
mov
decb
add
mov
pop
fimuls
std
stos
mov
adc
and
adc
hlt
fisttps
xor
adc
or
dec
enter
xor
loop
pop
call
pushf
fs
push
ret
test
cs
dec
lcall
push
adc
mov
imul
out
in
mov
mov
call
orl
rclb
cmpsl
adc
jo
fwait
mov
cwtl
gs
xlat
add
mov
dec
mov
xor
sub
outsb
sub
lcall
data16
mov
repz
lret
push
xlat
out
scas
pusha
movsb
xor
pushf
pop
data16
adc
cmp
inc
cmpl
or
js
pop
jmp
push
cli
dec
stos
push
jb
inc
je
cmp
je
adc
adc
inc
cld
ljmp
andl
jo
in
icebp
jle
in
inc
arpl
mov
in
sbb
mov
adc
jno
dec
daa
bound
mov
mov
dec
xor
aad
sbb
loope
outsb
lahf
jl
or
enter
mov
faddl
rclb
sahf
pop
xchg
and
sahf
cmp
xchg
cmp
jg
addr16
jno
mov
xor
add
dec
push
push
int
movsb
std
sbb
lea
and
sub
fwait
xor
in
pushf
xor
stc
movsb
mov
dec
lds
jno
js
sub
mov
or
test
mov
or
out
bound
cmpsl
xchg
cld
shrb
lret
adc
mov
enterw
std
or
jns
push
test
dec
xlat
push
adcl
cmp
push
sbb
sbb
jge
push
dec
inc
inc
fldcw
cltd
loopne
xor
jnp
fsub
imul
jl
mov
push
add
or
clc
and
jbe
mov
adc
or
mov
repnz
xor
cmp
and
sbb
gs
jmp
push
xlat
jb
call
jl
inc
pop
andb
add
dec
and
or
jmp
insl
loop
fnstsw
aaa
cmp
lahf
jge
dec
fisubs
int
push
mov
movups
pop
push
add
repnz
outsl
ds
loopne
test
ja
loope
mov
fldenv
out
ds
nop
mov
pop
fildl
mov
xor
test
std
push
sbb
jl
pusha
inc
cmp
jmp
jp
mov
sub
sbb
pop
aad
loop
nop
push
fstl
test
cmp
pop
aam
insb
loope
test
push
mov
out
data16
dec
mov
or
cmp
mov
test
adc
mov
mov
ret
loopne
xchg
loop
dec
lret
xchg
mov
fidivrs
inc
adc
icebp
dec
mov
sub
push
inc
dec
arpl
mov
outsb
mov
test
mov
lds
push
adc
in
adcl
out
lock
mov
xchg
mov
sub
jmp
daa
addr16
add
mov
cs
rorl
outsl
mov
int
fidivrs
or
sbb
or
int
sub
stc
das
inc
inc
test
stc
loope
mov
repnz
fdivrl
jp
push
xor
ja
sbb
in
ljmp
sbb
push
dec
scas
and
gs
mov
cmp
stos
push
cmp
jg
or
xor
pop
je
insb
ljmp
enter
pop
test
dec
jmp
es
repnz
or
adc
lock
xchg
jae
movsb
add
lods
or
fsubrl
push
outsb
out
imul
or
lods
sahf
xchg
lock
das
test
dec
js
cwtl
adc
dec
loope
mov
fs
mov
pop
add
or
popa
call
popf
inc
test
clc
loope
rcl
mov
test
arpl
and
in
insb
sub
dec
dec
ror
sub
push
pop
mov
pop
push
lods
pop
call
jno
mov
andl
xchg
sub
cmp
stc
stc
mov
cmpsb
xchg
test
and
and
je
xor
mov
push
mov
shll
dec
add
push
cmc
es
mov
and
leave
cld
dec
in
mov
xchg
lea
scas
lret
leave
mov
ds
jae
arpl
stc
dec
or
fcomp
int
cld
inc
mov
cmp
lcall
in
ds
xchg
xchg
imul
inc
add
pop
xor
neg
or
sbb
je
lods
sbb
xchg
movsb
popf
pop
jg
mov
hlt
gs
mov
nop
sub
lret
or
in
jmp
iret
push
jnp
fstps
fidivrl
lret
mov
add
imul
inc
fistpl
jns
xchg
xchg
std
lcall
mov
insl
popf
outsl
addl
mov
pop
jge
push
sbb
push
lea
ficoms
nop
iret
into
int3
rcrb
aam
inc
mov
cmp
xor
movsb
ja
das
inc
mov
loop
mov
arpl
mov
movsb
mov
int
sub
xchg
lea
add
mov
xchg
out
nop
sbb
roll
dec
mov
adc
out
iret
sbb
ss
lret
push
shlb
stos
stos
xchg
std
push
shll
repnz
arpl
jp
les
push
test
dec
aad
mov
stc
cmp
xchg
roll
fidivl
jl
test
pushf
in
adc
and
pop
dec
sarl
sahf
adc
xor
xor
jle
cmc
icebp
popf
divb
cmp
xor
mov
jge
aad
inc
sbb
or
nop
loop
adc
xchg
jo
adc
test
mov
mov
dec
in
test
pop
xor
jae
imull
or
aam
cmpsl
adc
add
fdivrl
xor
jb
cmp
push
mov
rorb
clc
fmuls
fsubrp
popf
daa
xorl
or
mov
fwait
xorb
das
dec
adc
sahf
ret
or
push
filds
mov
aaa
push
iret
shlb
test
adc
imul
fistpl
mov
jmp
push
lds
aad
mov
push
cmp
ss
shll
jno
cmp
pop
fbld
push
fidivrl
jecxz
sbb
inc
and
stos
xor
gs
add
scas
or
pop
popf
and
jbe
ror
push
push
ret
sub
xor
push
arpl
loop
fnstenv
sbb
cmpsb
sub
sub
mov
push
mov
xchg
test
insb
or
repz
aaa
sub
lret
out
je
pop
inc
aam
jmp
test
pop
mov
stos
xchg
push
mov
push
icebp
movsb
pop
and
or
pop
arpl
call
jecxz
in
adc
cli
ss
movsb
je
mov
pop
std
lods
mov
inc
fnstenv
cmpsl
lret
movsb
ret
jl
mov
loop
out
dec
pop
dec
xchg
leave
adc
or
stos
or
jl
dec
data16
jns
ret
aad
sub
scas
and
out
xchg
or
aas
outsb
sbb
push
fwait
mov
lods
mov
cli
push
repnz
fwait
ret
lods
sub
sbb
xorb
cmpsb
test
push
adc
pop
sub
ret
ds
stc
mov
lods
shrl
push
pushf
xor
sbb
daa
sbb
mov
add
xor
ret
or
xor
pop
insl
insb
js
pop
fcmovnu
fwait
cld
into
fimull
lcall
sub
clc
imul
imul
inc
push
push
mov
push
cld
or
shlb
ds
sbb
jno
fiaddl
into
shll
int
or
xor
xor
mov
out
pusha
pop
push
rolb
mov
mov
inc
call
pop
test
leave
aad
adc
mov
loope
out
nop
addr16
les
pop
xorb
inc
push
and
inc
and
mov
leave
pop
enter
ja
mov
jl
not
lea
xchg
outsb
sbb
dec
cmp
daa
std
and
mov
dec
pop
xor
adc
mov
or
xor
mov
lock
cmp
stc
sbb
adc
pop
roll
push
rcl
sbb
stos
rcll
sbb
int
int3
dec
cld
mov
pushf
xor
inc
cwtl
fisubs
pusha
jecxz
int
fistpll
mov
adc
sar
enter
loopne
imul
test
test
inc
addr16
cmp
fisubrs
inc
in
push
mov
fadds
mov
adc
or
push
jp
in
mov
mov
jbe
adc
test
out
movsb
mov
mov
aaa
pop
data16
clc
jae
sbb
pop
fstps
mov
inc
and
adc
int3
cltd
cmp
add
icebp
lret
test
adc
fnstenv
lea
lret
or
jo
push
into
or
js
pop
lods
pop
cli
aas
mov
loope
mov
jp
mov
lods
xchg
pop
hlt
lcall
popa
je
out
lods
xor
js
pop
hlt
jnp
xor
pop
xchg
ret
xchg
push
xchg
cwtl
adc
imul
es
scas
push
cltd
out
in
out
push
mov
sbb
pop
xor
push
into
xlat
push
fcoml
push
push
pop
test
mov
xchg
ss
adc
dec
adc
xor
jl
lods
push
or
loope
daa
adcb
push
sbb
mov
movsl
sub
call
pop
jae
fidivl
sub
repnz
repnz
dec
add
adc
test
adc
cmp
scas
inc
das
mov
mov
fs
lods
hlt
sbb
insb
jns
sbb
repnz
movsb
lods
jb
iret
adc
stc
aad
pop
in
inc
ds
inc
or
adc
mov
nop
stos
sti
sub
cs
jnp
pop
ret
cmp
jnp
pop
ror
movsb
lea
movsb
jge
mov
mov
aam
or
cltd
movsb
into
mov
push
push
pop
cmpl
dec
ja
xchg
add
out
cmp
and
stos
imul
movb
mov
fisttpl
xchg
push
out
push
movsb
xor
sub
inc
inc
clc
out
xchg
loop
sarl
xchg
hlt
cmc
pop
mov
test
imul
in
jne
adc
loop
repz
mov
fistps
lret
lret
or
cs
clc
push
mov
bound
xchg
in
or
stos
cmp
and
leave
xchg
outsb
inc
fnstenv
mov
xor
out
or
mov
lea
stos
cmpsb
mov
sub
pop
and
lcall
mov
jne
or
mov
xlat
popf
shr
xor
ret
sbbl
or
fdivl
or
or
in
shl
das
push
in
ret
add
rol
add
popa
push
mov
xchg
cmc
ficoml
push
xlat
mov
jl
lds
mov
push
fisubs
push
roll
pop
das
sub
icebp
popf
lcall
mov
cltd
xor
out
test
mov
jecxz
cli
push
xor
rclb
lret
enter
outsl
in
cmc
push
insb
push
cs
add
rclb
dec
inc
lds
cli
int3
sbb
jae
les
add
leave
imul
or
call
adc
jmp
outsl
stos
cmp
jne
push
xchg
sub
hlt
fld
xor
stc
cmp
mov
sbb
adc
xchg
ja
sbb
ja
sub
mov
cld
loop
outsb
rorl
xor
and
std
pop
mov
sbb
jmp
mov
stc
pop
jb
ror
or
jb
and
clc
cs
mov
pop
adc
aaa
neg
inc
lahf
dec
mov
into
sbb
add
js
out
adc
xchg
and
imul
or
jmp
arpl
xor
pop
jo
shll
mov
mov
inc
xchg
daa
stc
push
jecxz
mov
aas
mov
fld1
inc
ja
cmpb
stc
adc
add
or
ret
dec
cli
add
subb
orb
push
hlt
popa
into
adc
push
test
mov
xchg
ja
xchg
mov
dec
int
or
adc
cltd
fmul
or
pop
lods
loopne
dec
leave
seta
fwait
push
jecxz
ljmp
cmpsl
xchg
fwait
mov
imul
or
mov
pop
dec
dec
stc
inc
jg
aam
push
cli
mov
in
xchg
sub
insb
sarb
das
icebp
sarb
int
adc
xchg
and
nop
mov
call
sub
cmpl
and
notl
jmp
adc
push
lea
pusha
adc
not
or
jp
out
test
sub
into
movsb
jge
test
cmp
add
or
jp
xchg
les
jb
pop
mov
mov
loope
ljmp
inc
mov
ret
xor
push
rorl
dec
inc
or
imul
adc
and
xor
fst
push
int3
push
mov
push
fimuls
adc
mov
add
frstor
pop
sub
jecxz
cmpsb
dec
test
xchg
fidivrs
jl
cmp
pop
dec
fistl
insb
xor
sahf
aam
jmp
lret
or
out
add
daa
or
pop
cmp
dec
jae
rcrl
shll
jae
pop
or
jecxz
out
cmp
fnstenv
cmp
sbb
jae
adc
loope
pop
adc
jb
dec
mov
mov
jl
jmp
cld
pop
enter
dec
cmp
and
mov
inc
mov
test
push
pop
loopne
pop
cmp
fisubrl
test
stc
rolb
push
add
cmc
pusha
push
and
pop
push
mov
std
scas
in
les
jg
sub
push
iret
in
call
lea
sub
int
sub
jns
inc
push
popf
jmp
cld
xchg
jo
add
pop
xchg
ljmp
push
xchg
add
incb
shr
inc
sub
out
fsubl
mov
inc
addr16
mov
test
add
and
xchg
add
in
fnsave
inc
pop
insl
stos
repz
aas
scas
sub
in
pop
mov
test
mov
sub
cmp
mov
pop
rcll
add
pop
test
mov
test
ja
pop
out
testb
dec
arpl
adc
add
fistl
or
or
inc
mov
lcall
insl
js
adc
add
jecxz
xor
mov
cli
cwtl
mov
and
jo
outsl
ljmp
popa
xchg
mov
xchg
and
outsb
shrb
outsb
mov
pop
push
mov
jecxz
cmp
sbb
jmp
jmp
outsl
mov
or
push
das
mov
xor
inc
stos
mov
dec
dec
test
rcrb
daa
push
not
cmp
mov
rcrl
adc
xchg
push
inc
xchg
div
sub
mov
fistps
sub
ret
es
bound
pop
ror
xchg
jle
push
ds
jns
pop
shl
xlat
or
cmpsb
movl
add
and
je
push
mov
mov
and
mov
mov
xchg
leave
imul
mov
in
and
rcll
sbb
or
cmp
arpl
inc
enter
pop
roll
dec
jo
mov
ror
mov
pop
data16
aaa
stc
dec
popa
or
imul
xor
lods
lret
pop
nop
fsubrs
pusha
or
adc
mov
jno
dec
stos
lcall
out
push
nop
push
xchg
pop
mov
mov
sbb
sbb
sbb
mov
xor
add
cmp
jl
cmp
or
mov
rcrl
test
popa
cmp
cmc
adcl
and
pop
push
add
ljmp
or
dec
mov
mov
pushf
sub
in
mov
mov
ret
sbbb
out
xor
xchg
cmc
push
andb
inc
test
jecxz
sti
popa
add
int3
mov
xchg
pop
aas
roll
aas
andb
mov
push
loope
jns
xor
shll
dec
and
mov
xchg
mov
sub
sbb
sub
lods
push
jmp
stc
adc
int3
mov
inc
jl
in
mov
iret
inc
test
mul
xchg
fs
fcoml
iret
fnstenv
insb
insl
xchg
xor
cmc
outsb
inc
fcoml
lea
cmc
dec
cmc
lret
xor
xchg
xor
push
out
out
cmc
jecxz
cmc
sub
sub
add
sub
loop
mov
jecxz
jo
cmp
leave
lret
sahf
enter
pop
je
and
cmp
arpl
shr
jae
mov
dec
sbb
lahf
or
jmp
pop
fdivr
dec
pusha
nop
mov
xchg
push
dec
push
mov
mov
mov
pop
int3
sbb
int3
mov
and
inc
iret
or
adc
repz
nop
scas
stos
push
or
loopne
clc
push
adc
mov
or
arpl
cmc
cmc
or
push
jns
in
push
mov
test
mov
dec
jne
pop
adc
pop
xchg
mov
pop
and
ret
jp
sbb
cmp
je
jmp
mov
xchg
in
and
xchg
xor
jle
mov
inc
jecxz
xchg
ret
pop
std
xor
xlat
adc
push
jg
sahf
movsb
jp
loope
push
push
xchg
jo
adc
lea
fwait
mov
pushf
mov
pop
scas
pop
and
and
fimull
mov
inc
xchg
adc
adc
jg
test
dec
mov
jae
dec
sar
sbb
jg
pop
jle
xor
inc
int3
cs
mov
popf
and
andl
inc
cld
adc
sbb
popa
pop
pop
test
es
push
cltd
enter
std
mov
jg
xor
loopne
idivb
shl
imul
shlb
gs
jmp
dec
das
mov
and
sub
fidivrs
mov
sahf
in
icebp
mov
fisubs
jb
stc
ficoms
lret
mulb
fcmovnb
mov
add
in
frstor
mov
xor
add
decb
rcl
mov
pop
jmp
movsl
add
fmuls
jmp
addr16
packssdw
rol
adc
mov
pop
cwtl
stos
xor
mov
loop
xor
scas
leave
loopne
cld
sbb
mov
pop
mov
fisubl
repnz
cwtl
lds
push
in
sub
jge
push
dec
mov
loopne
fldenv
pop
lock
cli
loope
pop
and
push
sub
mov
jae
fwait
dec
mov
sub
push
jecxz
sub
cmpsb
sbb
inc
popf
inc
push
je
fldenv
adc
rcrl
mov
or
pop
std
les
mov
aad
iret
ret
cmp
inc
imul
mov
sahf
mov
imul
mov
aad
xorb
and
adc
lods
out
stc
adc
sub
adcl
sbb
out
pop
mov
fsubrl
sbb
sub
jbe
inc
insl
shrl
cmpsl
sarb
push
pop
sbb
mov
pushf
fchs
dec
bound
xchg
inc
imul
int3
pop
mov
movb
adc
sub
inc
pop
hlt
popf
push
mov
xchg
xchg
push
stos
lret
push
inc
and
fistl
mov
adc
popa
gs
int3
sbb
lds
jmp
push
nopl
int3
mov
cmp
jecxz
fwait
out
and
movsl
xchg
mov
js
imul
popa
ss
jge
repz
addb
add
aas
adc
addr16
pop
popf
or
xchg
mov
xor
pusha
mov
aad
int3
cltd
sahf
andl
mov
outsl
xor
ffreep
out
dec
sti
outsb
stos
inc
mov
cmp
push
adc
psubq
lods
fistpll
push
pop
inc
xchg
lods
and
shl
mov
sub
pop
shll
cmp
inc
test
sub
aad
daa
pop
adc
add
movsb
xchg
hlt
sbb
or
xchg
pop
pmaxub
repnz
xchg
inc
pop
iret
cld
xchg
int
or
sub
mov
daa
call
mov
inc
aaa
inc
mov
das
sub
dec
sub
inc
cmp
fildll
into
dec
dec
or
and
ja
push
cmpl
sbb
out
popa
incb
dec
stc
sub
or
jo,pn
mov
lods
push
fwait
test
lea
dec
sub
cmp
cmp
cmp
stos
shrb
pop
and
icebp
cmp
ds
shll
pusha
add
popf
cltd
arpl
fsts
mov
and
lea
popa
repz
pop
inc
or
cmpl
cmpsl
clc
pop
mov
and
lcall
inc
lret
sub
add
jl
std
cmp
out
ret
mov
sahf
cmp
mov
jmp
lods
andb
xor
lods
jns
add
inc
stc
lock
imul
mov
xor
ds
imul
adc
fwait
mov
mov
push
int
cmc
iret
xchg
and
gs
push
lock
xchg
xlat
mov
loop
jae
shr
nop
lea
cld
int3
pop
inc
out
pop
loope
mov
arpl
scas
and
ja
mov
sub
stos
mov
pop
jecxz
mov
and
pop
xor
cmc
dec
in
push
push
mov
sbbl
test
and
push
es
mov
push
mov
sub
sub
xchg
into
rol
out
or
inc
jbe
sub
mov
in
mov
cmp
lahf
inc
fs
push
es
adc
divb
outsb
cli
insl
lcall
pop
hlt
jp
lea
outsl
add
scas
cs
push
imul
imul
mov
sub
fs
mov
fs
hlt
aaa
jns
push
inc
sahf
imul
pusha
mov
int
adc
leave
fs
hlt
mov
je
push
mov
or
fstpl
lock
aaa
loope
push
jmp
pop
int3
sbb
stos
sbb
jae
push
cmpsl
and
ss
push
xchg
loopne
adc
pusha
lret
int
adc
mov
sti
sbb
std
sahf
cmc
fcmovnu
bound
cmp
xor
fistps
add
sub
stos
mov
subl
sbb
aas
push
xor
sbb
add
ret
movsl
pop
jmp
stos
rorl
jg
notl
push
fimuls
xchg
or
xor
push
or
mov
mov
es
mov
and
out
pop
xor
cld
push
or
inc
sbb
outsl
xchg
adc
xchg
pop
xchg
mov
sbb
aam
scas
or
push
xor
mov
out
fidivl
inc
movsb
mov
xchg
and
sbb
mov
cmpsl
dec
movsb
push
insb
clc
or
cmp
add
clc
movsl
mov
ss
and
xorb
push
push
or
jns
jbe
popa
pop
loope
jge
dec
or
flds
lcall
and
push
mov
ja
xchg
xchg
push
mov
xor
xchg
mov
mov
jl
int
adc
aaa
popf
jbe
pop
addr16
inc
ds
rorl
sub
nop
sbb
cld
sbb
das
test
adc
insl
pop
cmp
adcb
mulb
repnz
sub
cmp
xchg
xchg
push
mov
int
fiaddl
je
in
push
xor
loope
fwait
stos
gs
hlt
push
movb
dec
mov
call
mov
mov
popa
mov
xchg
dec
mov
lock
mov
das
bnd
xchg
mov
mov
xlat
in
sbb
or
repz
lods
icebp
clc
frstor
sti
mov
mov
sbb
in
or
push
jg
dec
push
pop
dec
imul
popa
push
sbbl
mov
mov
dec
xor
dec
jl
mov
xchg
sbb
stc
adc
cmp
pop
xchg
jno
push
pop
mov
sub
data16
das
push
nop
inc
sbb
std
jbe
scas
mov
jo
outsl
or
dec
inc
add
data16
mov
adc
js
mov
fs
push
jp
cmp
pop
lcall
xor
jb
cmp
cld
push
mov
xor
push
stc
mov
xlat
pop
aaa
pop
add
mov
mov
and
xchg
loopne
dec
jae
lea
inc
cmpsb
fwait
and
lods
jle
fildll
mov
jp
or
imul
scas
mov
fisttpl
xchg
lock
lock
fsubrl
out
push
pusha
or
jbe
push
addr16
testb
sub
sub
out
mov
test
arpl
lret
jno
sbb
pop
fnsave
jmp
mov
or
out
shll
jo
std
lods
outsl
cmp
fcmovnb
stos
mov
adc
mov
sbb
sarl
aas
cmp
addr16
jb
add
call
jb
aas
in
es
movsl
inc
xor
mov
jp
nop
mov
cmp
cs
xor
mov
ljmp
pop
pop
das
movsb
xchg
out
dec
int
test
fs
xor
push
sarb
jb
lret
fisubrs
xor
lret
mov
xor
je
aam
pop
and
mov
cli
test
xor
rcrb
adc
fld
dec
xchg
add
in
jmp
and
fiadds
mov
cmp
andb
daa
loopne
jbe
xchg
fwait
jg
or
add
and
mov
adc
nop
fistpl
arpl
cmp
add
mov
dec
rcrl
sahf
inc
inc
repnz
pushf
ret
mov
repnz
cmpsb
adc
mov
leave
pop
inc
fwait
enter
rcr
stc
xchg
and
pop
xchg
gs
mov
or
add
and
aas
fisttpll
int
xchg
test
imul
aam
mov
dec
nop
jbe
add
repnz
mov
mov
test
stc
add
push
or
aad
cmpsl
mov
decl
and
inc
jo
mov
xchg
addb
or
xor
shl
add
jl
fldcw
or
push
cs
lock
lret
loop
dec
das
adc
jno
mov
popa
add
ret
mov
popa
push
iret
popf
imul
pusha
lock
xor
mov
test
icebp
inc
and
xchg
cmp
sbb
sbb
imul
data16
adc
sub
lahf
mov
loope
jno
sub
ret
shll
pop
sub
sti
lock
rcrl
and
xor
sti
xlat
pop
pop
int3
cmp
or
mov
data16
in
xor
shl
popa
outsb
jecxz
mov
pop
push
pusha
fs
aam
xor
daa
inc
push
xchg
test
movb
xchg
xchg
cmpsl
fistps
mov
jne
pop
sbb
xchg
pop
xchg
sub
aas
push
or
push
pop
jle
pop
mov
js
outsb
jb
shr
in
pop
popa
jb
aad
xchg
sub
or
gs
movsb
or
jae
pop
shll
fwait
repz
cmp
cmp
xchg
pushf
fsubrs
fists
dec
loope
push
pop
cwtl
ljmp
mov
and
pcmpeqd
cmp
jae
mov
movsl
and
or
dec
test
sub
movsb
xchg
xor
hlt
or
addb
insl
fsts
adc
sahf
mov
xor
rcll
add
sbb
cmp
cmp
cmp
jns
les
jl
loope
or
daa
and
add
inc
mov
dec
dec
jmp
jg
xor
mov
adc
jns
cs
bound
xchg
xchg
mov
ret
daa
dec
lods
mov
jecxz
sahf
mov
test
mov
das
loopne
pop
sbb
adc
inc
mov
xchg
push
push
cmp
jnp
popa
inc
xchg
mov
rep
hlt
scas
jecxz
mov
or
outsl
out
mov
xchg
mov
ljmp
movl
dec
jns
sti
cld
shlb
mov
mov
int3
in
mov
cltd
jbe
cmp
inc
scas
and
stc
out
add
cld
movsl
rorl
mov
imul
add
dec
cmpl
das
in
sbb
mov
pop
cltd
sbb
or
jbe
pushf
xchg
sti
xor
and
jecxz
fistpl
mov
call
test
popa
out
jecxz
roll
push
jns
adc
out
sub
les
sbb
inc
adc
loop
sbbl
div
call
add
out
mov
fldt
jmp
push
popf
push
out
ret
xchg
jl
scas
push
adc
je
and
add
insl
mov
aad
iret
mov
mov
pop
add
cmp
xlat
sarl
pop
sbb
daa
push
cmc
mov
cmc
or
fdivs
sahf
jmp
pop
jg
or
enter
cmp
xor
loop
mov
or
mov
rcrb
cmp
rcrb
mov
mov
pop
lods
stc
fs
or
pop
pop
in
std
lock
or
repz
lds
int3
lock
sbb
ss
fdivrl
jbe
test
les
ds
dec
inc
test
push
push
sbb
inc
adc
inc
sbb
or
js
test
bound
mov
xor
outsb
pushf
imul
adc
aam
and
jmp
or
mov
inc
xor
cmc
cld
test
xor
add
cmp
pusha
enter
cmc
jbe
push
or
cmp
les
xchg
sbb
shrb
and
mov
mov
cld
sbb
or
and
lahf
jl
inc
mov
mul
adc
jl
push
popf
iret
inc
cmpsb
in
lahf
stc
cmp
sarb
test
mov
inc
mov
out
cmp
dec
pop
jo
stos
add
mov
mov
dec
and
xchg
push
dec
stos
aas
mov
sub
nop
mov
movsb
inc
std
pop
fwait
mov
lods
iret
cmpsb
mov
pcmpgtw
stos
test
add
push
mov
xlat
add
jg
loopne
lods
push
mov
imul
push
mov
pop
aad
jbe
imul
jae
aam
pop
mov
push
fnstcw
adc
cmpsl
jne
xlat
cs
stos
fucomi
adc
add
push
outsb
ja
ja
push
mov
or
push
mov
sub
dec
daa
adc
stos
andl
shll
hlt
mov
ror
out
mov
and
rdtsc
pop
fldenv
loope
or
stos
push
lahf
nop
push
outsb
push
int
sub
cmpsl
lods
push
push
pop
xchg
cltd
push
ja
dec
int
and
in
lret
ss
rolb
cmc
pop
push
sub
lods
dec
dec
loopne
inc
push
inc
loop
nop
lahf
sub
sbb
and
popa
imul
and
fistps
pushf
cmpl
ljmp
test
xor
jo
inc
mov
cmpsb
mov
enter
icebp
cmp
test
fs
insl
scas
in
clc
push
pop
jnp
push
fisubrs
mov
sti
jmp
push
push
and
mov
push
jne
shlb
push
popa
lcall
pushw
mov
xchg
xchg
fs
loop
mov
addr16
clc
adc
cs
mov
pop
pop
scas
inc
test
out
jnp
and
mov
lods
dec
sbb
stos
push
ret
scas
mov
movsl
ret
jp
jnp
jo
adc
mov
stos
jmp
xchg
jo
or
lcall
shrb
adc
ret
mov
fldcw
cmp
mov
insb
xchg
pop
fmuls
out
sbb
stos
sbb
mov
sub
xlat
cmpl
sub
inc
and
fsubl
sbb
fwait
aad
adc
xor
sbb
xchg
adc
mov
cmp
dec
push
inc
xchg
xor
data16
scas
jnp
mov
test
inc
push
cmc
mov
xchg
std
cmp
mov
sbb
add
daa
mov
je
jno
daa
jbe
jae
dec
jnp
sbb
inc
cmp
bound
shll
adcl
setp
mov
fs
cmovno
pop
push
lods
sub
pushf
sbb
cld
aaa
xor
pop
out
in
test
out
and
iret
pop
adc
inc
or
js
cmpsb
jno
insb
pop
jo
fwait
dec
dec
std
xor
push
add
rcr
sbb
jp
pop
pushf
inc
mov
stc
push
sbb
scas
pop
dec
cmp
and
call
push
sbb
lods
hlt
pop
adc
pusha
push
rorl
lcall
sbb
int3
data16
fists
ret
add
outsl
ss
jmp
out
push
fnstsw
jle
loop
mov
add
loope
push
repnz
cli
popl
mov
fcomps
sub
or
pop
and
test
add
mov
inc
aaa
mov
movsb
adcl
mov
dec
mov
arpl
dec
pop
pop
xchg
dec
xchg
mov
out
mov
aas
out
mov
push
inc
fisttpl
jge,pn
push
fdiv
mov
ljmp
mov
lea
dec
imul
ss
adc
or
or
aaa
xchg
fs
arpl
xor
rcll
sarb
or
jae
lds
fsubr
iret
insb
add
mov
sub
es
inc
mov
or
scas
jmp
mov
into
dec
in
xorl
scas
pop
out
iret
mov
das
scas
sub
xchg
mov
mov
xor
inc
mov
mov
jecxz
sti
sbbb
loope
push
adc
shlb
sub
mov
mov
adcb
mov
xchg
cs
xchg
push
fisubrs
and
movsl
jge
mov
scas
jno
lcall
sti
sti
incl
insb
cmp
and
and
dec
fs
xlat
repz
mov
mov
leave
add
mov
lock
xor
mov
out
and
xor
inc
fistps
xor
ds
imul
sarb
adc
out
add
push
push
xor
mov
les
pop
test
jp
loopne
nop
push
hlt
movsl
or
out
daa
fsubr
mov
inc
daa
add
push
add
xchg
mov
xchg
cmp
xchg
or
push
in
cmp
stos
lahf
pmulhw
insb
lea
lea
popa
mov
sbb
or
add
mov
out
sti
inc
jle
sbb
mov
cmp
inc
cmp
cld
and
xchg
iret
mov
cmp
cmp
leave
gs
cmp
inc
popl
nop
cmpsl
xor
xor
inc
roll
inc
dec
cmc
imul
mov
dec
mov
xchg
test
in
push
inc
sarl
scas
xchg
sahf
rcll
or
xchg
sbb
scas
cmpsl
sub
dec
lcall
out
mov
incb
fsubl
cs
imul
pop
pop
adc
icebp
mov
mov
dec
sub
push
or
cmp
xor
push
or
lret
in
mov
ss
stc
push
mov
dec
xchg
dec
loopne
int
cmpsb
out
push
cld
adc
stos
das
mov
mov
inc
scas
gs
in
sbb
pop
add
pushf
inc
cwtl
xor
jo
mov
lcall
lret
mov
clc
insl
repz
inc
mov
xor
ficoms
push
fstps
hlt
push
sbb
xchg
js
mov
pop
int3
out
add
into
aam
mov
mov
testb
sahf
jmp
sub
test
sub
pop
adc
hlt
lods
sahf
mov
sbb
in
mov
rcll
adcl
sbb
pop
in
mov
scas
mov
sub
daa
insl
mov
out
stc
xor
fistl
pop
loopne
xor
pop
shl
arpl
mov
pusha
in
add
mov
fwait
jp
mov
xor
inc
push
push
push
cmpsl
xchg
and
in
add
je
add
xor
add
nop
sbb
mov
xor
sbb
xchg
insl
push
jae
and
inc
sub
add
or
mov
add
jl
fiadds
inc
cmpsl
icebp
in
std
pop
mov
push
add
push
adc
mov
pop
dec
ljmp
mov
jmp
jnp
xor
sti
mov
cmp
lods
scas
dec
addr16
test
dec
stc
js
imulb
cmc
clc
js
mov
dec
fs
lahf
add
fldl
test
test
jno
adc
pop
mov
je
inc
adc
or
aam
pop
mov
shll
scas
xchg
mov
cmp
lods
cld
lock
xor
push
shr
lret
and
scas
in
xchg
lods
and
clc
int3
or
add
nop
adc
sbb
or
jno
push
into
imul
ficoms
push
aas
ds
shll
cltd
sahf
cmpsl
push
sub
movsb
cmp
cmp
insl
inc
insl
pop
mov
and
jne
jmp
jp
or
popa
enter
mov
sbb
xor
adc
loope
inc
pop
adc
pop
lret
out
mov
xor
add
dec
repz
mov
adc
or
es
adc
hlt
jge
pop
push
lret
push
dec
pop
cli
repz
data16
pop
jo
and
enter
lret
leave
int3
mov
rcrb
push
ss
test
inc
adc
mov
and
inc
hlt
xchg
pop
aad
pop
mov
push
iret
shl
cmpsb
test
pop
icebp
jb
arpl
repz
rcll
int
insb
mov
cmc
jmp
push
ds
adc
inc
popa
jl
mov
dec
jne
daa
mov
dec
push
xchg
lock
mov
pop
jp
imul
scas
cmp
shrl
dec
ljmp
jne
sub
jno
push
in
test
dec
int3
pop
ret
pop
fdivrp
push
in
cmc
push
repz
xor
in
mov
arpl
bound
in
pop
mov
jne
stos
lods
ret
dec
leave
adc
das
and
int
arpl
sahf
mov
push
and
out
push
xor
pop
mov
insl
fisttps
or
cs
popf
in
cwtl
loope
mov
and
aas
imul
bound
fsubr
into
dec
stos
mov
push
dec
dec
push
pop
jbe
cmp
enter
lahf
lret
push
push
xor
pop
sahf
jae
mov
outsl
xchg
and
shrl
mov
loopne
sub
pop
sbb
mov
adc
int3
xor
jmp
cs
xor
das
xor
lret
fimuls
stc
push
push
sti
inc
pop
int3
cmp
dec
ds
pop
test
test
push
dec
and
addl
out
lcall
in
adc
repz
andb
push
cmpxchg
mov
hlt
mov
out
imul
fsubs
popa
sub
and
fldcw
add
data16
ret
arpl
ljmp
mov
sub
xchg
aam
loope
mov
in
mov
fidivrs
shll
test
push
gs
shlb
outsl
lock
psubsw
shlb
push
sbb
cmpsl
mov
fsub
dec
xchg
rclw
mov
test
inc
adc
jno
mov
sub
lcall
je
mov
mov
mov
add
imul
das
scas
jp
cld
mov
cltd
fists
xchg
shll
outsl
push
popa
popa
inc
fidivrl
cmp
ret
push
jne
scas
ljmp
fs
inc
cmp
cmpb
xor
cld
outsl
lea
out
das
jp
adc
or
inc
mov
or
pop
lahf
inc
pusha
and
add
fcoms
fcomps
pop
pop
xchg
adc
in
pop
in
enter
inc
aas
and
pop
clc
pop
mov
out
loop
push
fnstcw
outsl
mov
sub
cmp
mov
daa
sub
ret
dec
faddl
dec
inc
adc
pop
aam
dec
movsl
lods
cmc
cmp
xor
ret
and
mov
orb
popa
packsswb
jl
and
adc
test
dec
sub
je
inc
push
or
jb
push
incl
or
enter
lods
inc
dec
or
mov
jae
push
icebp
mov
out
push
shrb
sbb
pop
adc
xor
jmp
out
sub
icebp
jne
cmp
push
adcb
lock
inc
dec
cld
popf
cmpl
or
pushf
pop
lock
cld
jecxz
jmp
int3
push
xchg
test
push
ss
push
jge
sbb
sub
insl
in
dec
jno
adc
sbb
insl
jmp
dec
dec
sub
lcall
scas
cmp
mov
jp
jl
mov
sub
xor
stos
mov
int3
adc
push
sub
pandn
push
and
lock
sbb
out
mov
data16
or
loop
pop
repz
fwait
ja
stos
test
pushf
mov
mov
in
push
lret
xor
mov
in
jae
push
ds
mov
rcll
pop
test
mov
jmp
mov
push
jmp
cmpsb
push
cli
ljmp
and
je
lds
daa
jl
movsb
dec
movsl
loop
sbb
mov
push
pop
adc
inc
cmp
and
mov
jnp
mov
sub
push
push
js
loope
push
jmp
ret
xor
nop
and
xchg
jecxz
dec
js
add
jp
subl
inc
cmp
in
fs
inc
insb
testb
sti
jbe
arpl
push
mov
ljmp
ja
mov
lret
in
or
cmp
jg
xorb
fsts
call
iret
icebp
js
out
mov
mov
fst
testl
pop
mov
loope
icebp
mov
pop
fisubrl
hlt
xchg
and
cmc
imul
dec
jbe
mov
jno
mov
dec
adc
and
outsb
imull
cli
test
dec
push
sub
dec
mov
dec
and
js
pop
mov
mov
mov
dec
popf
xor
sbb
jge
shlb
and
add
fistpll
fmuls
sub
fs
sub
dec
incl
mov
test
xor
stc
adc
test
mov
sub
pushf
inc
lock
cmp
mov
mov
lcall
rcll
sti
jnp
mov
imul
and
bnd
cld
jg
jmp
and
jo
stos
add
and
mov
testb
js
mov
push
sti
adc
mov
push
shlb
lods
rolb
adcl
pop
ret
adc
test
lcall
jge
std
cli
pop
pop
repz
sbb
gs
ret
adc
mov
shll
sub
outsl
push
inc
mov
shl
ss
cwtl
push
jo
push
xchg
mov
sbbb
out
xor
sub
lods
and
xor
test
add
xchg
insl
lea
push
test
out
xchg
cld
fwait
dec
sbbb
sbbl
cmc
pop
je
xchg
fldl
outsb
lcall
jmp
or
popf
dec
xchg
jg
add
xor
and
mov
add
fsts
ret
in
add
jl
hlt
popl
adc
sbb
or
ret
popf
xor
data16
jmp
pop
stos
mov
sti
mov
dec
out
mov
call
cli
cltd
lods
mov
movsl
xor
lods
out
and
pop
int3
out
sahf
adcl
xor
push
push
lods
mov
test
adc
mov
cwtl
jmp
bound
xchg
xor
int
gs
adc
fsubrl
pop
add
icebp
fwait
repz
popf
or
in
add
mov
loopne
pop
aam
mov
popf
fs
and
adc
pop
sub
bound
sbb
cmp
and
scas
in
pop
ljmp
adc
ljmp
inc
sti
mov
int
cli
aam
sbb
je
outsl
pop
push
and
adcl
lcall
mov
jge
jecxz
sbb
call
loope
sub
mov
jl
and
jmp
sbb
gs
fisubs
cmpsl
sarb
fs
adc
or
je
dec
ljmp
adc
and
pop
jno
pop
and
pushf
icebp
mov
jl
fbld
inc
mov
mulb
lcall
cli
jbe
jb
mov
test
pop
lea
mov
sbb
outsl
add
dec
inc
adc
dec
push
mov
dec
mov
lret
xor
add
flds
mov
pop
xor
ljmp
xchg
rcl
mov
sub
add
cld
xchg
std
dec
adc
lods
jb
mov
cmc
imul
jno
sahf
dec
pushf
xor
fadds
and
fidivl
ror
insb
sbb
sub
fwait
xchg
xorl
pslld
pop
cmc
lcall
adc
push
out
or
movsl
cwtl
std
mov
pusha
mov
les
adc
cmp
je
jbe
popa
sub
mov
xchg
pop
jecxz
aam
dec
and
cmp
mov
mov
mov
std
mov
add
je
popa
or
insl
push
jl
cmpsl
pop
xorl
lret
rorl
scas
mov
push
pusha
or
cltd
push
mov
jno
js
inc
ret
inc
inc
mov
pop
enter
inc
filds
mov
mov
push
idivb
push
xchg
jbe
mov
add
add
mov
inc
xor
xor
ds
or
jge
mov
std
or
pop
enter
sahf
lods
mov
cli
mov
pop
inc
cmp
sub
mov
ds
shlb
dec
inc
nop
inc
loope
and
flds
dec
mov
dec
lods
addr16
cmp
jl
mov
xor
add
or
out
inc
inc
mov
rcr
ret
push
outsb
sub
mov
ss
push
icebp
mov
inc
push
jmp
sub
xchg
and
insl
leave
les
data16
cmc
in
subb
inc
push
push
test
xor
push
stos
js
lret
js
inc
pop
addr16
mov
add
rcll
dec
add
mov
pusha
cmpsb
mov
xor
cmc
inc
pop
or
xor
sbb
clc
mov
cld
dec
cld
and
sub
cmpsl
sub
test
dec
inc
xor
cmp
shll
imul
lods
lods
sub
shlb
cli
lret
sar
sbb
aam
fidivl
inc
mov
mov
es
mov
pushf
dec
test
inc
xchg
mov
popa
int3
test
aam
aaa
mov
mov
mov
clc
push
adc
loopne
fnstsw
sbb
mov
jns
jp
ljmp
mov
xorl
lea
fidivl
adcl
sub
sbbl
lahf
rol
sub
fcmovb
add
hlt
pop
insb
add
mov
or
test
je
es
push
adc
mov
xchg
xchg
cmpsb
lods
xchg
dec
lret
notl
add
mov
loope
outsl
nop
push
dec
pop
clc
les
sbb
stos
xchg
adc
xchg
push
inc
popf
jnp
aas
add
ljmp
out
sbbl
xorb
sub
and
jmp
inc
push
scas
xchg
mov
cld
push
jo
and
xorl
jno
jae
call
jns
push
jae
mov
cmp
dec
in
lcall
cmp
mov
mov
fdivrl
xchg
adc
std
pop
into
stos
mov
mov
mov
cmpsb
icebp
adc
jb
mov
repz
and
jo
sub
adc
pop
jecxz
push
sbb
pop
cmp
sahf
enter
mov
sbb
movl
cmp
imul
mov
andb
pop
outsb
test
mulb
or
out
sbb
mov
inc
xchg
sbb
faddl
xchg
lret
lahf
insl
fstps
pop
fldt
cld
sub
push
rcrb
xchg
repnz
divl
mov
or
outsb
sahf
push
dec
inc
sub
in
mov
dec
pop
and
jae
mov
mov
cmp
cmp
add
pop
cmpsl
and
push
or
cmp
movsl
lret
das
outsl
jbe
mov
inc
inc
stos
xor
push
outsb
test
test
lcall
mov
mov
jg
push
dec
mov
mov
push
mov
add
fidivs
xchg
inc
xor
xchg
fldl
ss
js
in
bound
outsb
adc
mov
xorb
outsb
xchg
insl
mov
adc
cmovno
ret
fstps
out
adc
lods
enter
imul
je
or
xchg
xor
jnp
enter
mov
jge
xor
add
jp
and
sbb
imull
imul
mov
stos
mov
mov
sbb
inc
and
pop
dec
sbb
mov
inc
sbbl
sbb
or
push
cmp
repnz
movb
call
mov
xchg
inc
test
adc
xor
cmp
adc
jbe
daa
mov
cmc
int3
sub
mov
pop
test
push
lods
sub
stos
popa
paddb
test
pusha
xor
xchg
lock
ja
adc
push
outsl
into
cmp
rcrl
xor
pop
dec
or
or
jno
repz
movsl
test
push
mov
ljmp
push
aam
xchg
inc
add
ret
jo
lock
push
push
xchg
push
xchg
fstpt
mov
push
push
repz
adc
push
outsl
jl
lods
add
or
xor
pop
cmp
xor
mov
fwait
jge
inc
or
cmp
xor
cwtl
add
or
in
pop
imul
dec
inc
cmp
mov
push
push
mov
mov
notl
dec
aad
or
movb
cltd
bound
lea
xchg
push
jle
shlb
int3
lods
arpl
testl
aas
dec
cli
inc
and
es
movsb
or
push
xchg
mov
dec
cs
pusha
mov
fldl
push
inc
or
jge
xchg
add
jns
or
add
push
lahf
push
push
mov
push
mov
in
aaa
mov
xor
fisubrs
jnp
mov
aam
arpl
adc
fiadds
sbb
mov
xchg
sub
add
inc
js
repz
mov
sub
fsub
test
dec
jae
pop
pop
popa
insl
aam
push
iret
push
jmp
push
cmc
or
imul
das
cmp
sub
ds
bound
jg
push
lea
xchg
lahf
and
enter
push
dec
xor
fisubrs
out
outsl
nop
scas
cmp
cltd
out
dec
shlb
xchg
lods
test
pop
stos
icebp
and
lods
and
test
xor
aaa
xchg
and
add
adc
js
das
push
hlt
inc
fcoms
jo
sub
bound
fimull
dec
cmp
int
pushf
add
sar
cmp
in
push
add
pop
xor
test
mov
mov
sub
cmp
leave
and
mov
sbb
add
fwait
jmp
pop
jecxz
sbb
ds
add
mov
push
inc
push
pop
clc
mov
fstl
outsb
pop
push
inc
add
adc
negl
out
adc
mov
jecxz
popa
repz
lea
idiv
loop
cld
sbb
dec
pop
iret
mov
or
lahf
cmp
adcl
loope
and
movsb
cmpsl
add
sub
inc
sub
jno
fidivs
cmpsl
lret
stc
or
and
aaa
pop
hlt
lods
cltd
test
pop
loopne
test
adc
push
adc
add
sti
or
gs
hlt
loope
mov
xor
lret
xchg
cltd
adcl
aaa
mov
and
in
daa
jnp
xchg
push
cs
xchg
pushf
es
mov
xchg
cmp
push
xchg
sub
les
js
scas
ss
cmp
sahf
ficompl
push
ret
outsl
xor
scas
aam
fdivrp
js
les
fcmove
push
aaa
stos
mov
aam
mov
sbb
or
daa
sub
adc
sbb
je
mov
mov
xor
push
aaa
mov
outsl
in
mov
xchg
pop
into
clc
dec
in
pushf
add
frstor
outsb
xchg
arpl
insl
cmpsb
in
test
push
push
sub
mov
rcl
add
xor
aad
pop
lret
jae
ljmp
gs
pop
es
and
ret
ljmp
pop
mov
roll
cltd
shrb
or
outsl
and
cmp
push
pushf
and
adc
mov
nop
pop
cs
push
imul
mov
add
std
xchg
out
mov
mov
lods
xor
cmpb
mov
jns
adc
test
fcomp
adc
jge
aam
movsb
in
outsb
and
cmp
and
mov
shl
stc
pop
outsb
jp
popa
dec
mov
xor
and
push
call
jb
ljmp
repz
jl
gs
xchg
xorl
and
dec
xchg
dec
ret
cltd
cmp
inc
mov
dec
call
enter
xchg
subb
stos
aas
push
mov
add
and
scas
cmp
mov
push
call
cwtl
cld
pop
mov
cs
push
cmp
push
push
psubb
sub
mov
rcll
and
or
rorb
mov
out
and
and
jecxz
adc
cs
shll
adc
sub
outsb
imul
jns
in
xchg
testl
and
add
sub
sarl
xchg
sub
ljmp
out
xor
jno
cld
sub
ret
inc
rcrl
mov
in
lcall
into
fcoms
and
sti
xchg
insl
xor
repnz
mov
imul
lcall
jns
jae
daa
jno
pop
shl
add
js
rclb
sbb
insb
adcb
push
fstpt
and
rcl
xor
inc
mov
add
add
mov
sbb
mov
dec
outsl
pop
push
xchg
lock
insb
adc
push
gs
mov
gs
push
adc
pop
movb
cmp
andl
loopne
mov
fcomi
xchg
pop
pop
js
loopne
popf
fsubrl
adc
add
in
cltd
pop
insl
movsl
popf
sub
xor
mov
popf
outsb
mov
es
or
cmp
jns
mov
je
push
xchg
andl
mov
shll
and
jns
adc
repnz
or
cmp
sub
bnd
dec
cld
ja
icebp
pushf
fimull
loopne
fildll
movsl
mov
orb
or
ljmp
insl
mov
mov
sub
in
push
or
dec
xchg
and
fmull
std
pop
push
add
xor
push
int
cli
scas
les
mov
stos
cli
sub
add
inc
stos
out
bound
aam
enter
and
je
add
fnstenv
inc
pop
fsubrs
rolb
sub
adc
cmovo
je
xchg
outsb
pcmpeqb
repz
dec
mov
or
popa
sub
test
inc
mov
imul
inc
inc
mov
pushf
add
iret
call
and
sub
lahf
sub
adc
fcoms
pop
test
lods
xchg
hlt
push
cmpsl
push
cltd
pop
dec
shlb
and
pop
push
push
push
add
dec
ror
cmp
xor
jb
addb
repnz
sub
jb
mov
lea
sbb
loopne
jmp
in
push
jae
pushf
dec
jns
dec
in
notb
enter
sbb
pop
cmc
scas
je
jae
fnstenv
repz
and
cmp
pop
movsb
inc
mov
sub
jne
push
inc
or
push
iret
add
push
inc
mov
or
sub
pop
pop
jne
int3
es
jmp
push
jle
cwtl
dec
mov
movsl
sub
lods
sub
cmc
add
xchg
iret
or
dec
xchg
and
clc
inc
inc
mov
pop
js
and
cmp
jge
cmp
inc
jmp
dec
into
popf
nop
xor
lock
std
jbe
mov
push
jnp
rclb
lcall
push
add
shll
rolb
lds
pop
insl
and
xor
jmp
and
cmpsb
gs
jg
dec
test
xchg
inc
int
push
mov
lods
jo
or
cmp
lahf
jmp
mov
inc
pop
xor
lret
xchg
lret
xchg
inc
push
push
lock
jg
iret
pop
hlt
dec
movsb
lock
addr16
dec
inc
adc
pop
pop
mov
mov
cmpb
mull
arpl
or
into
jmp
lds
and
or
mov
stos
push
xor
and
aad
cmp
mov
pop
xchg
repnz
dec
sub
scas
out
in
out
cmp
loop
shll
in
and
into
lcall
mov
sahf
mov
dec
rcr
imul
imulb
sub
fdivrs
cmp
jbe
shrb
adc
xor
mov
adc
into
test
cmc
pop
push
mov
or
icebp
or
clc
leave
fwait
daa
adc
add
adc
outsb
pusha
jns
and
daa
in
add
mov
in
xchg
popf
and
pop
test
xchg
loope
cmp
mov
fimull
mov
jnp
lds
sub
sahf
adc
lock
dec
or
inc
xor
cli
xchg
mov
xor
push
push
lcall
insb
ret
mov
push
test
pop
push
dec
mov
inc
bound
movsl
je
adc
lret
inc
fcompl
adc
mov
mov
or
push
mov
scas
aam
xor
inc
jmp
cwtl
dec
dec
rcrl
subb
in
dec
fsubrl
ss
inc
add
pop
mov
pop
test
cmp
mov
adc
sbb
cmp
scas
mov
repnz
mov
or
dec
cmpsl
fisubrl
dec
lret
pop
push
cmpsl
dec
or
xorb
es
lods
aad
cmp
popa
ljmp
jl
mov
jb
lret
repnz
loopne
enter
nop
ja
or
popl
aas
mov
push
aaa
scas
and
sbb
pop
add
cmp
or
js
xchg
ret
hlt
icebp
movsl
jno
cltd
mov
jae
sbb
shll
sub
dec
icebp
mov
test
out
sub
cmp
aas
sbb
jns
cmc
mov
subb
mov
lret
push
aaa
xor
leave
js
in
cmp
aad
pop
filds
push
dec
push
mov
shr
sbb
cmpsl
int3
jg
xchg
pop
lahf
or
lret
mov
data16
ss
sbb
xchg
dec
ljmp
pushf
sbb
mov
dec
push
mov
push
xor
mov
or
mov
inc
push
xlat
insl
loope
cmc
sbb
inc
pop
mov
rorb
iret
loope
repz
push
mov
sub
inc
jge
outsb
cmp
cs
daa
btr
sbb
jno
jb
lea
int3
mov
xchg
or
out
loop
in
loope
adc
sbb
mov
xor
iret
sti
movsb
loopne
pop
lods
ss
mov
pop
jecxz
jbe
fimuls
mov
mov
push
lret
or
int
lods
or
cmpsl
ja
push
outsl
test
xchg
mov
push
mov
xchg
cltd
fimuls
jbe
pop
in
pop
mov
or
inc
dec
mov
call
call
js
lahf
xchg
push
mov
xor
adc
mov
sub
mov
test
out
jno
mov
rcrl
adcl
in
pop
orb
add
push
dec
cltd
dec
insb
movsl
push
add
mov
adc
sbb
movsb
mov
xor
push
inc
mov
faddl
bound
loopne
jg
jo
xor
and
idivb
insl
subb
push
cmp
jnp
jge
aam
mov
dec
add
mov
das
or
add
sbb
pop
subb
sbb
mov
adc
ljmp
or
dec
shrb
jae
lret
jb
jg
dec
in
stos
andb
scas
int
arpl
mov
test
aas
mov
xlat
add
cld
inc
incb
sbb
rolb
inc
es
out
mov
jle
jbe
jge
mov
mov
std
test
adc
dec
fnsave
adc
mov
mov
rorb
jmp
into
push
out
stc
cltd
mov
mov
add
inc
jge
jnp
sub
repnz
in
or
and
lods
fsubl
in
fists
ret
dec
lret
fdivrs
jl
mov
aad
lods
or
ret
addr16
ljmp
aad
nop
cmp
ret
outsl
lods
xchg
in
cwtl
test
jne
inc
fdivs
test
cmp
jne
xchg
mov
jno
sbb
push
nop
xor
mov
jp
sbb
test
xchg
lea
sahf
ss
push
int
jecxz
sti
out
dec
mov
xchg
aam
repz
push
add
movsb
jp
outsl
xchg
inc
mov
xchg
sahf
clc
mov
push
decl
and
xchg
pop
call
cmpsl
push
test
std
or
dec
cmp
mov
fdivrs
xchg
outsb
push
dec
jbe
mov
pop
repnz
shlb
push
inc
mov
xor
pusha
jl
adc
adcl
das
outsl
xor
subb
dec
add
add
inc
sbb
pop
mov
js
sbb
addl
js
sbb
mov
imul
hlt
dec
je
icebp
sarb
pop
mov
xchg
xlat
outsb
iret
xchg
or
push
jnp
int
stc
fs
pushf
fstl
shl
and
add
stc
inc
hlt
sbb
stc
jae
or
out
push
les
jne
xor
adc
or
into
sbb
mov
lret
les
sbb
xchg
cmp
push
das
fmull
xchg
add
dec
pop
push
and
ljmp
and
and
pop
in
ret
fwait
xlat
inc
xchg
pushf
aad
fstpl
xchg
repnz
add
shlb
sbb
sbb
repz
aam
jg
out
push
movsl
inc
aam
test
xchg
lea
in
les
inc
decb
jl
mov
cmp
pop
jp
jae
lcall
add
xchg
outsl
aam
push
jle
scas
cmp
loopne
xchg
push
clc
sbb
jae
or
jae
or
mov
call
sub
mov
test
daa
ljmp
outsb
sub
call
test
cld
fcoml
dec
outsb
mov
jmp
cmc
inc
adc
mov
into
jbe
dec
push
or
mov
jecxz
sub
das
mov
cmpsb
cmp
cli
mov
mov
sub
mov
test
xor
das
inc
fwait
loope
jl
mov
add
xor
dec
pusha
ss
sub
icebp
sarl
xchg
xor
sub
and
mov
sbb
into
inc
jb
xchg
push
scas
adcl
ss
test
xor
cltd
and
add
call
and
sub
xchg
cmp
int
inc
repnz
rcl
inc
inc
push
ja
imul
movsl
test
loopne
jmp
divb
mov
xchg
aam
jno
mov
push
jl
xchg
sub
and
ds
lods
sub
ret
js
divb
gs
and
or
imul
hlt
inc
jecxz
adc
mov
outsb
insb
lea
mov
lcall
aaa
cmp
les
lods
lods
xchg
rclb
icebp
repz
xor
mov
and
adc
aas
xor
into
int
es
mov
addb
cmp
mov
popa
test
dec
cmp
push
dec
sub
push
inc
mov
pop
mov
jmp
fildl
xor
sbb
aam
dec
xor
cmpsb
test
cmp
cld
in
xchg
mov
xor
aaa
jmp
mov
pop
and
fbstp
lcall
iret
jne
lcall
neg
movsl
cmp
leave
push
cmp
push
mov
rcr
test
popf
mov
sbb
bound
fadd
dec
in
pusha
and
lahf
stc
lock
add
push
in
ja
arpl
or
rcrb
scas
das
stos
outsb
std
mov
test
cmp
ror
mov
repz
inc
sbb
repz
dec
jae
xchg
sub
and
fiaddl
leave
loop
add
pop
nop
hlt
pop
enter
pop
out
pushf
xchg
fbld
loope
lods
cli
mov
outsb
std
push
je
loope
sarb
out
add
push
cmp
inc
xor
jl
mov
ficoms
cwtl
or
mov
jns
icebp
xchg
movsb
cmc
into
jge
sahf
add
push
xchg
icebp
movsl
mov
mov
xchg
fidivs
jge
jg
insb
or
out
cmp
mov
in
mov
cltd
mov
push
or
mov
xchg
dec
lock
imul
xlat
mov
les
sar
fs
cs
shll
in
out
push
xchg
sbb
push
repnz
jge
divb
xor
loope
sbb
mov
int3
sub
in
ret
lods
repz
lds
cmp
and
push
mov
pop
xor
in
sti
cmpb
push
adcl
addl
mov
stc
push
mov
pop
xlat
enter
cmp
int3
repz
dec
lods
dec
add
fidivs
aaa
jmp
addr16
sbb
mov
mov
jno
sbb
ret
fsubrs
call
xor
mov
arpl
add
iret
gs
xor
mov
aas
stos
lea
loope
push
out
inc
dec
xchg
pop
jne
inc
popf
imul
jns
push
push
lahf
pop
mov
dec
mov
sub
jmp
jns
jb
or
jns
leave
fiaddl
push
mov
daa
notl
xor
shl
pop
out
pop
jne
xchg
scas
int3
jne
daa
lods
pop
mov
mov
cmp
mov
gs
test
scas
stc
in
sub
add
push
insb
xchg
add
lods
iret
push
cmpb
inc
xchg
xchg
xor
pop
data16
jg
fldt
inc
imul
pop
mov
movsb
adc
push
rclb
sbb
out
jae
ja
mov
or
lcall
xor
test
mov
cmpl
js
inc
imul
int
push
hlt
xlat
out
lods
cmc
mov
xor
jmp
mov
mov
or
xchg
stc
daa
pop
insl
je
inc
xchg
jnp
adc
sbb
jp
xor
xchg
add
pop
inc
dec
cmp
je
enter
sbb
push
add
cld
add
add
lret
std
pop
inc
dec
popa
fidivl
xchg
stc
mov
lods
in
push
lock
loope
inc
repnz
dec
push
es
cmp
sub
es
sti
jnp
cmpsb
fs
push
testl
cmp
clc
or
popa
shl
push
popf
cmpsl
jle
adc
xchg
fidivrs
lret
sub
hlt
gs
data16
fsubs
mov
jle
call
pop
cli
mov
sbb
arpl
mov
jne
enter
insl
xchg
xor
ffree
popa
mov
inc
push
dec
fwait
scas
xlat
sub
in
push
clc
into
adc
pop
and
xchg
mov
out
negl
stos
insb
mov
dec
jp
mov
sub
pop
cmp
mov
rclb
push
and
xchg
push
cld
stc
jmp
add
sub
cmp
cmp
cs
mov
sub
shrl
jo
ffree
or
inc
pop
adc
or
inc
hlt
jo
sub
mov
jo
ljmp
add
jmp
xchg
test
mov
jge
push
inc
movb
fdivrl
push
loop
cmpsl
jmp
jno
mov
and
pop
xor
and
clc
in
movsl
fcoms
fldenv
sub
mov
ja
ficoms
sbb
outsb
icebp
sahf
push
mov
fldlg2
lds
sbb
cmpsl
add
into
push
sahf
out
jbe
add
inc
mov
adc
ret
subl
xchg
sub
lret
push
jge
lret
jbe
jb
push
push
fldenv
in
add
push
in
movsl
ret
sbb
lods
xor
insb
ja
mov
or
adc
cmp
mov
push
imul
icebp
xchg
je
adc
adc
mov
dec
aad
inc
rclb
imul
movl
dec
loope
mov
and
and
jne
dec
add
pop
cld
ja
push
dec
xchg
push
push
jl
icebp
icebp
int
mov
mov
jb
jmp
rcll
insl
mov
mov
bound
push
aam
xor
mov
add
xor
push
push
adc
or
mov
mov
push
push
xlat
dec
shlb
rorl
std
fldenv
in
xchg
ja
ret
adc
or
inc
sub
xchg
mov
pop
rcrb
fdivrl
push
push
mov
nop
out
sarl
and
mov
movsb
movsb
sub
mov
mov
in
cmp
mov
imul
mov
push
aaa
mov
mov
jo
lret
inc
jae
push
ret
inc
sub
movsl
lods
shlb
mov
or
sbb
add
setge
xor
pushf
rolb
adc
imul
aad
push
aaa
mov
lahf
xor
and
xor
jbe
or
lds
incl
cmp
test
mov
das
sub
inc
push
push
push
adc
in
mov
jbe
mov
loope
test
mov
mov
scas
mov
movsl
pop
fwait
push
mov
shr
mov
ljmp
sti
jno
adc
sbb
xor
inc
mov
in
jl
cltd
dec
mov
sub
push
add
jae
mov
dec
adcb
js
mov
jo
adcl
mov
cmp
push
imul
push
out
jbe
add
leave
inc
push
lds
push
icebp
push
fnop
pop
in
xorl
jnp
sbb
stc
outsl
lods
push
enter
test
inc
jne
addb
xor
add
sub
cltd
push
mov
arpl
sbb
mov
and
in
jne
popf
shlb
sub
stos
xlat
addr16
aam
aaa
mov
or
adc
adc
push
stos
sub
add
sbb
ljmp
jmp
push
and
adc
das
ds
jmp
push
data16
adc
and
cmp
sbbl
stos
pop
sbb
in
aad
push
add
jbe
pop
out
mov
xchg
mov
dec
sub
jb
pop
dec
push
xchg
jae
imul
mov
sar
jne
push
enter
lret
imul
dec
add
lea
inc
fsubs
xor
cmp
xor
sbb
mov
xor
sub
out
scas
fadd
shl
ljmp
lock
jmp
and
inc
sub
xchg
jns
xchg
imul
jmp
sbb
inc
jle
movsl
cwtl
rol
sti
jne
dec
sbb
pop
out
xor
sub
jle
fistpl
mov
sbb
pop
jge
out
inc
pop
imul
imul
push
pusha
arpl
cwtl
xchg
orl
xor
cmp
gs
pushw
mov
sub
jl
test
sub
shrb
ss
jp
cli
mov
mov
xor
push
xor
sub
mov
jae
lock
cmp
fwait
ss
push
ret
pusha
jo
pop
insl
notl
out
jbe
pop
and
rclb
cltd
mov
mul
aas
and
jmp
fnstenv
faddp
sbb
xor
call
in
sub
mov
jbe
movsl
jnp
loopne
jge
gs
imul
jbe
add
and
shrl
xchg
adc
lret
push
cmp
xchg
jmp
pop
inc
cmpsl
jmp
enter
cmp
call
pop
std
adc
cmp
push
xor
xor
pop
into
inc
inc
push
mov
mov
jge
cmp
xchg
inc
ja
adc
int
mov
xchg
lahf
test
movsl
nop
and
jns
push
ljmp
mov
cli
pop
pop
cwtl
jle
out
mov
pop
jae
mov
test
insl
ds
or
pop
push
xor
insb
adcl
mov
leave
pop
int3
test
dec
rcll
cwtl
mov
mov
pop
sbb
pop
daa
lods
push
cmp
popa
roll
test
out
insb
push
push
out
xchg
push
mov
cwtl
and
dec
rclb
mov
push
push
arpl
jecxz
mov
pop
push
push
imul
xchg
inc
aaa
cmp
xchg
fdivrl
xchg
rcrl
mov
out
sti
stos
and
and
jae
ret
cmp
and
sbbl
nop
adc
std
ret
mov
setnp
out
stos
push
jae
daa
or
cmp
jmp
sbb
pop
sahf
cmp
das
push
and
addr16
sub
add
xchg
push
or
push
out
add
push
xchg
mov
stos
add
push
mov
imul
in
incl
mov
les
shll
inc
fwait
cmp
insl
jns
jno
cmp
adc
test
cmp
dec
inc
xor
mov
test
jo
cwtl
or
cli
sub
mov
xor
jle
dec
arpl
jge
jno
or
push
mov
push
add
jns
xor
sbb
repz
xchg
mov
xchg
push
loop
ficomps
sbb
bound
aad
cmp
dec
mov
mov
xor
daa
aas
fstl
aam
push
adc
out
adc
xchg
fsubrp
or
enter
mov
sbb
hlt
es
jno
sbb
shlb
push
inc
cmpsl
fisubl
mov
es
loope
pop
jp
mov
xor
or
out
enter
in
and
adc
testl
xor
shll
shll
out
lcall
xchg
js
adcl
jne
add
fldt
dec
jb
pop
mov
clc
dec
adc
rorl
and
mov
lock
out
xor
mov
pop
aas
sbb
push
xchg
mov
push
sub
out
sti
and
ljmp
pop
inc
nop
mov
lret
sbb
cmc
mov
inc
mov
mov
xchg
and
jne
sub
aad
mov
sbb
ja
fdivrl
xor
lock
gs
leave
scas
pop
imul
rclb
imul
cmc
jns
test
lcall
sbb
or
pop
fsubr
loopne
cmp
ss
lret
dec
inc
xor
and
in
jno
cmp
fstpt
lea
rcll
scas
mov
cmp
ret
lret
and
pop
inc
dec
mov
clc
and
mov
pop
cmp
push
and
icebp
repnz
shll
movsl
hlt
mov
adc
aaa
adc
test
cmpsl
and
dec
outsb
pop
mov
jmp
sbb
in
rorl
mov
xchg
mov
dec
lret
cmp
sti
ret
sbb
popf
push
stos
in
fwait
aas
clc
push
sbb
std
sahf
xor
adc
inc
lret
mov
fs
push
mov
xor
fwait
int3
pop
repz
out
dec
lret
xchg
int3
xchg
push
jno
pop
int3
pop
fsubrp
hlt
out
fisubrs
int
pop
jp
rorb
push
arpl
jmp
mov
and
insl
mov
sub
adc
cwtl
adc
scas
loope
cmp
stos
sbb
int3
lock
lods
push
aas
inc
ret
jmp
test
push
sub
fdivrs
cmpsb
cmpsb
cmp
mov
mov
scas
test
rcr
fisubrl
cmp
adc
in
sub
xor
sub
mov
les
pushf
cmp
addr16
std
out
add
push
mov
jl
sub
movsb
fnstsw
repz
dec
shll
out
mov
aad
mov
repz
loope
pop
mov
or
icebp
rorb
in
movsb
in
jnp
sbb
cmpsb
mov
jbe
push
push
jle
mov
adcl
cmp
jae
es
and
daa
xor
pop
fimull
pushf
adc
repz
add
dec
adc
lret
outsl
incb
ja
add
mov
jb
scas
loop
inc
lret
cld
ja
jl
pop
out
add
pop
inc
push
hlt
test
fbstp
shrd
cmp
test
mov
xchg
cmp
or
mov
mov
push
xchg
adc
in
les
adc
xchg
fisubrl
xor
push
xor
fcmovu
and
lock
flds
cmc
ja
add
xlat
dec
std
adc
aad
mov
cmc
pop
xchg
pop
mov
cld
jb
shll
shll
sbb
adc
ja
negl
xor
sbb
mov
dec
test
hlt
dec
gs
outsl
ret
rclb
stc
repnz
fbld
push
sub
dec
or
popf
jb
mov
xchg
sub
imul
push
push
push
lods
icebp
jns
cwtl
push
push
cli
mov
ds
shrb
rcll
sub
mov
dec
jmp
shrl
pop
pop
rclb
rcrl
cmp
dec
jge
je
and
xlat
popa
in
inc
and
call
ss
loope
jecxz
dec
mov
mov
flds
pop
jbe
popf
sarb
mov
adc
or
scas
in
jge
add
mov
pop
test
pop
jecxz
pop
femms
xor
sub
sbb
hlt
rorb
sbb
lcall
cmp
es
xchg
mov
dec
insb
leave
adc
aam
stc
xor
lea
filds
jne
jl
add
pop
mov
cmc
xchg
cmp
scas
cli
sub
cli
adc
adc
movsl
hlt
mov
xchg
dec
les
mov
mov
in
test
movq
xor
test
add
lahf
imul
sub
loopne
adc
sbb
cs
movl
or
jecxz
pop
stos
das
loopne
pushf
mov
ja
imul
int3
xchg
xchg
xor
push
cld
andb
dec
mov
xchg
mov
dec
mov
fcoml
mov
mov
into
sub
out
cmp
inc
xchg
lret
sbb
cltd
into
dec
inc
mov
mov
mov
stc
cmpb
pop
lods
or
push
mov
push
or
mov
mov
sbb
pop
adc
pop
sahf
sbb
sbb
ret
dec
or
push
lahf
add
lock
out
jle
inc
jno
stc
xchg
fcomps
xchg
loope
mov
inc
sub
pop
xlat
adc
inc
mov
sub
stos
cmp
loopne
out
fwait
add
or
outsb
shll
or
test
testb
xchg
popf
call
insb
xchg
mov
xchg
and
cmp
nop
insl
jo
and
out
popa
xchg
into
pop
insl
xor
ljmp
faddl
inc
shrb
pop
ss
subl
arpl
orl
push
xlat
pop
fisubrl
ret
scas
jmp
cli
and
enter
shrl
mov
pop
push
movsl
ljmp
fwait
aad
in
inc
xor
push
shll
loopne
xchg
jmp
ret
cs
cmc
pop
sub
xchg
shll
dec
pushf
push
mov
mov
adc
and
insl
cmp
arpl
dec
push
in
inc
pop
inc
dec
xchg
pop
xchg
je
in
mov
mov
imul
icebp
lds
jmp
xchg
pusha
mov
mov
es
sti
sbb
repnz
sahf
in
shrl
mov
loopne
pop
push
fabs
in
inc
les
hlt
into
cmpb
push
jle
scas
cli
in
dec
add
imul
sbb
xor
xor
iret
cld
lea
lahf
push
popa
sbb
es
sbb
mull
cmp
pop
inc
lcall
cli
cmp
jecxz
xlat
jae,pn
popa
rorl
mov
mov
and
pusha
cmc
das
cmp
hlt
cmc
pop
fucomp
mull
and
pushf
sub
push
jae
fs
jecxz
push
inc
sbb
fldt
adc
add
mov
mov
sbb
lret
sbb
mov
icebp
mov
push
add
push
js
lret
pop
js
inc
iret
les
call
cmp
adc
imul
jmp
das
and
and
or
icebp
pusha
add
outsl
pop
out
fwait
into
jb
cmp
pop
mov
jp
jge
mov
fistpll
cmpsl
push
jo
clc
fsubs
fmuls
sarb
hlt
add
loop
jmp
dec
adc
mov
lcall
adc
dec
lcall
mov
lret
push
adc
inc
sbb
jo
leave
lcall
out
xor
push
jmp
mov
bound
push
dec
mov
cmp
pop
cmp
adc
jg
mov
cli
adc
imul
std
scas
push
cmpsl
mov
not
ss
or
jmp
shlb
mov
enter
mov
jl
and
out
mov
xor
stos
pop
sub
push
insb
aas
aaa
and
int
incl
mov
xchg
jne
cli
repz
movsl
jns
adc
and
fwait
mov
inc
std
sbb
movsb
cs
scas
sbb
cwtl
sbb
mov
jle
cmc
push
adc
daa
or
and
addl
mov
movsl
rorb
jp
sti
jle
pop
hlt
ss
dec
mov
push
jae
jns
sbb
jae
xchg
stos
into
and
cmp
out
or
push
lea
inc
imul
push
add
out
sbb
jno
out
pop
cmp
mov
cli
mov
dec
lods
mov
cwtl
aad
sbb
xor
jle
sub
or
popa
leave
loopne
fnstenv
cmc
js
insb
mov
ret
dec
dec
nop
je
push
jg
mov
js
test
adc
mov
adcl
cmc
xchg
jge
movsb
jnp
add
sbb
push
adc
cpuid
imul
in
lcall
push
out
xchg
pop
sbb
outsb
push
cmpsl
or
or
iret
fsubrs
pop
daa
ficoms
mov
ljmp
sub
cmp
jno
incl
jb
pop
rorl
into
cmp
cli
mov
cmp
lret
jo
or
inc
adc
sub
call
mov
imul
jae
fisubs
mov
adc
mov
pop
call
xor
adc
hlt
mov
lret
or
rolb
cli
aaa
out
rolb
sub
decb
in
and
xchg
divb
sbb
je
mov
leave
sub
sbb
lret
test
jecxz
pop
ret
sub
and
adc
push
sbb
bound
pop
xchg
and
loopne
mov
or
pop
std
cmpb
sbbl
jb
cmp
bound
out
cltd
movsb
out
popf
add
popa
jp
xchg
jne
pushf
std
arpl
mov
xor
pop
sub
pop
cmc
data16
rcll
mov
aad
dec
test
fwait
xchg
cmp
ret
xor
jp
mov
inc
sbb
popf
push
push
fcmovbe
jne
je
push
inc
test
stc
outsb
int
and
lods
adc
adc
mov
out
sub
mulb
push
lret
movsb
mov
add
push
test
cli
push
rcll
and
jno
add
jecxz
test
std
adc
dec
movhps
xor
loop
mov
cmp
insb
mov
mov
sbb
xor
ss
sbb
cmpsl
or
mov
xchg
push
inc
andl
push
rclb
mov
dec
or
pop
add
fs
cmp
divb
inc
inc
push
pop
jb
mov
loop
lds
dec
leave
ja
loop
mov
test
pop
int3
addr16
pop
dec
mov
mov
pop
xchg
cmp
jbe
mov
lret
mov
adc
or
out
dec
fmul
dec
pop
aad
cwtl
ss
inc
inc
mov
and
ja
daa
jmp
or
or
push
push
into
push
fsts
icebp
out
xor
mov
imul
repz
jge
popl
shrl
hlt
fists
fs
xchg
fsubl
loop
fwait
mov
cld
inc
or
xor
lock
adc
inc
pop
jmp
stos
and
mov
cmp
repnz
push
into
daa
leave
mov
pop
pop
enter
enter
xchg
imull
nop
pop
push
arpl
repnz
cs
ret
cmp
dec
cmp
sub
fdiv
and
sub
xor
pusha
ds
jp
mov
in
hlt
push
mov
sub
out
dec
bound
pop
shlb
repnz
and
inc
xchg
mov
and
or
stos
and
je
sti
sub
ret
adc
leave
xor
fists
jb
mov
lret
mov
setg
cmpsb
cmpl
jno
cmp
xchg
inc
fwait
inc
sbb
lds
pop
and
mul
xchg
pop
mov
push
and
mov
stc
rcr
mov
stc
pop
lcall
mov
pop
ja
mov
or
cmp
rorl
fcmovnb
adc
scas
stc
mov
pop
pop
in
xchg
push
add
pushf
test
xchg
loopne
sbb
lahf
dec
je
loope
out
scas
out
test
pop
sti
fs
or
daa
or
shll
adc
iret
xchg
fiadds
int
jge
popa
adc
and
pop
ljmp
fwait
push
pop
inc
mov
call
icebp
repnz
inc
cmp
mov
xchg
mov
scas
cmp
and
fidivs
ds
dec
jnp
popf
idivb
jp
test
cmp
xchg
sub
cmp
rcrl
ss
push
dec
imul
sub
mov
shll
lret
push
filds
cmp
sbb
push
outsl
out
lahf
jecxz
pop
jb
das
mov
icebp
dec
mov
shrb
xchg
dec
add
cmpsb
mov
fsubrl
in
scas
test
aas
inc
jb
and
fistl
rcl
push
mov
ficomps
mov
out
xchg
inc
mov
int
ljmp
out
add
push
dec
outsb
push
cmpsl
push
cs
adc
push
sub
jl
scas
dec
or
mov
fwait
inc
bswap
dec
cmpsl
in
sbb
out
pusha
cmp
push
inc
sbb
out
das
mov
jle
jecxz
daa
sub
cs
fs
daa
xor
std
jp
clc
xchg
pop
inc
in
sahf
or
sahf
push
jecxz
insb
jle
fnstenv
xor
and
stos
mov
cmp
adc
test
out
add
adc
mov
xchg
sbbb
pop
test
jg
mov
test
dec
cld
jns
and
xor
lcall
jmp
stos
pusha
and
push
cmp
sti
into
hlt
out
lahf
sbb
mov
stc
test
pop
mov
test
pop
mov
adc
std
jecxz
loope
test
je
mov
push
fidivs
pop
add
dec
nop
mov
xlat
mov
xor
fcompl
jge
cli
hlt
jp
xor
lock
inc
fistps
xchg
int
idivl
push
push
xor
iret
pop
fdivrl
icebp
push
sub
xchg
cmp
mov
inc
xchg
aas
stos
lods
add
xor
clc
sub
pop
adc
mov
je
fdivs
sahf
ds
push
mov
pop
xchg
fidivs
fldcw
mov
xor
stc
sub
xchg
sub
pop
ret
cwtl
sti
xchg
dec
pop
mov
pop
xor
jb
or
mov
inc
jbe
sub
add
jmp
mov
addl
xlat
cwtl
in
adc
cs
repnz
cmc
movsl
xchg
sahf
dec
out
fbstp
stc
insl
push
mov
sbb
inc
jmp
push
add
adc
leave
out
xchg
rorl
xor
dec
ja
ret
in
sub
lahf
movsb
fidivs
dec
inc
xor
push
cmp
dec
cmc
test
stc
jg
sahf
loopne
test
in
lods
mov
mov
pop
cltd
xor
out
push
inc
jg
mov
cmpsb
sbb
xchg
jg
roll
stos
xor
mov
sbbb
je
cmp
daa
in
loopne
jecxz
sub
mov
sbb
stc
pushf
stc
insl
js
pop
mov
imul
mov
lock
loopne
mov
mov
repz
loope
arpl
xchg
enter
das
xor
dec
push
lahf
add
xchg
icebp
in
mov
popf
lock
outsb
clc
xorb
mov
lods
lahf
push
adc
jne
xor
js
cmp
daa
negb
mov
mov
cmpsl
test
cltd
push
test
stos
orb
pop
cmpsl
ficoml
gs
jno
xlat
fldenv
dec
mov
imul
out
cmp
sahf
stc
notb
add
stc
cmp
sbb
je
addr16
lahf
stc
aam
ror
adc
fwait
js
xchg
ljmp
sbb
fisubl
in
cli
adc
mov
fucomp
xchg
fs
inc
inc
pop
scas
push
int
lcall
dec
push
iret
sbb
std
mov
sub
sub
cmp
dec
shl
cli
nop
xchg
add
sbb
fiadds
pop
xchg
sub
xor
popw
jmp
jno
xor
movsl
xor
xor
mov
in
jns
std
mov
mov
inc
cs
in
xchg
cld
push
mov
fildll
mov
sub
adc
ret
test
mov
mov
pop
loope
std
jo
aam
jne
sbb
aaa
aad
inc
test
mov
xor
out
repnz
inc
cltd
addr16
sti
xor
fbld
arpl
fiaddl
mov
mov
scas
aam
or
add
jp
lret
xchg
lea
arpl
lret
sbb
adc
in
and
add
cld
fcoml
dec
mov
aaa
ret
mov
jp
and
imul
pusha
mov
mov
adc
paddusw
fcmovnb
pop
xor
pop
sbb
cltd
sub
shll
stc
inc
jge
repnz
push
call
jmp
out
sub
sbbl
pop
sub
pop
sub
or
sbb
push
call
add
mov
shll
sahf
mov
test
shlb
jl
insl
xchg
scas
cld
cmc
jecxz
jns
aad
or
sub
push
out
dec
dec
shr
js
cmp
insl
int
sbb
adcb
add
aad
xor
arpl
or
clc
ljmp
loopne
arpl
cmpsl
mov
loopne
mov
test
xchg
mov
sahf
or
mov
pushf
stc
cltd
scas
int
pop
insl
sahf
inc
pop
xchg
outsl
sbb
cs
imulb
call
cmpsb
int3
movsb
int3
xchg
jge
sub
inc
add
daa
lcall
mov
mov
out
and
adc
in
inc
push
fiadds
icebp
and
js
adc
jp
ss
jmp
adc
cmp
adc
adc
repz
adc
mov
stos
out
xor
and
xchg
js
cmp
cmpb
stos
mov
xchg
mov
dec
or
add
outsb
sub
add
dec
stc
mov
cmp
or
adc
mov
sub
xchg
fnsave
ret
inc
pop
cld
fwait
jmp
mov
mov
adc
mov
loope
fwait
mov
push
sub
push
sti
mov
daa
stos
sub
jle
mov
cmpsb
push
mov
add
pusha
pop
push
jge
insl
or
pop
clc
xor
xchg
stos
lahf
int3
and
add
push
out
inc
pop
add
inc
sub
shl
out
xchg
ds
fdivrs
ljmp
ficompl
mov
pop
aaa
mov
xor
pusha
int3
jge
jbe
scas
or
movsl
cmpsb
xchg
lods
or
loope
lock
dec
addr16
stos
sti
sbb
add
cmp
add
cmc
or
xchg
dec
or
jp
xor
movsb
sahf
bound
dec
adc
sub
push
push
or
stos
std
ja
jecxz
mov
js
faddl
stos
and
repz
aad
enter
push
popa
pop
adc
arpl
xchg
cmp
out
pop
shll
movsb
xchg
int3
repz
jle
pusha
mov
cmp
pop
lahf
imul
lods
pusha
popf
mov
ss
rcrb
repz
popf
popf
xchg
cmp
dec
nop
lret
sbb
push
xor
rcll
xchg
xor
jmp
and
sti
insb
pop
xchg
and
xorl
mov
jmp
ja
rolb
push
sahf
lret
add
sub
jns
push
dec
pop
pop
rcr
iret
sub
mov
lea
push
rcrl
mov
pushf
cmp
cmp
pusha
or
xor
sbb
loop
adc
mov
ss
fimull
cmpb
rcrl
xor
movsl
nop
dec
jae
loop
movsl
dec
in
xchg
mov
lods
adc
adc
data16
xlat
pop
loope
cmovnp
add
repnz
sub
roll
stos
xchg
mov
lock
push
rolb
outsb
jns
ror
loopne
sub
push
cmpb
les
out
xlat
cmp
pop
adc
adc
iret
sahf
jno
cmp
xor
in
mov
mov
aad
lret
jne
jecxz
mov
mov
cltd
test
dec
pop
jo
pop
into
dec
jns
pop
lock
mov
popa
sarl
mov
bound
rorb
movsl
stos
xchg
stc
mov
jecxz
popf
in
pop
movsb
xor
jae
add
leave
fstl
adc
mov
lock
adc
sub
insb
or
pop
xor
cmpsl
cs
mov
cmpsb
test
push
pop
push
ret
movsl
xchg
mov
mov
mov
and
idivb
jnp
dec
jb
xorl
in
call
test
out
inc
sti
scas
lahf
push
inc
aas
push
add
pop
sub
push
mov
or
pop
jns
ja
insl
ds
outsb
xchg
iret
insb
cmp
push
and
adc
jmp
xchg
push
jp
insb
repnz
dec
out
clc
dec
test
sub
rorl
icebp
sub
inc
dec
das
loopne
mov
or
bound
test
lods
das
and
inc
jl
fdivs
inc
mov
mov
push
mulps
stc
iret
mov
pop
cld
rcll
dec
pop
pop
jns
mov
repz
jp
push
clc
mov
leave
lods
pop
mov
repnz
jle
movsb
addl
cltd
jle
clc
js
imul
cmpsl
inc
mov
adc
clc
xchg
mov
cwtl
cmp
inc
stos
adc
aas
pop
mov
outsb
cwtl
cmp
lret
mov
xlat
cmc
int
fdivrp
mov
jecxz
daa
push
popf
push
cmp
imul
push
sub
jmp
test
dec
pop
mov
stos
or
decl
popa
push
leave
insl
or
inc
dec
adc
mov
and
mov
cmc
mov
push
inc
aas
xor
pop
adc
mov
int3
mov
test
inc
xchg
jae
push
pop
in
int
stos
mov
bound
add
fwait
xor
rcll
scas
les
dec
push
nop
mov
movsb
std
sbb
mov
or
data16
mov
loope
push
mov
push
dec
pop
mov
lahf
xchg
and
dec
mov
or
dec
jne
jecxz
inc
mov
ds
or
ret
pop
jo
and
jo
pop
mov
push
mov
orl
mov
ljmp
sti
fsubrs
ds
xchg
sub
xchg
std
inc
ds
mov
mov
rolb
inc
jg
xchg
push
hlt
or
mov
jnp
adc
jne
mov
sbb
cmp
inc
mov
lds
sbb
adc
push
cwtl
inc
sub
cld
pop
stc
jnp
outsl
aas
es
add
rcl
sub
xchg
repnz
sub
push
and
push
mov
aas
ficomps
out
jno
pop
sub
fisttps
test
xchg
inc
lea
jecxz
pop
test
into
fwait
and
and
jmp
icebp
mov
sub
jns
and
jbe
mov
jg
mov
sub
xor
mov
pop
mov
mov
sbb
mov
ss
jns
mov
sarb
je
imul
and
int
xchg
xchg
in
jo
add
pop
out
fdivs
shll
or
push
pop
xlat
out
pop
push
test
jbe
out
in
pop
dec
adc
push
mov
addr16
mov
lahf
sbb
icebp
movsl
icebp
rcr
lahf
lods
adc
xchg
mov
divl
pop
xchg
jno
inc
or
mov
jo
leave
les
ficompl
jp
mov
faddl
ret
dec
stos
or
flds
mov
push
repnz
and
in
push
ret
rcll
stc
rclb
nop
xor
jp
rclb
and
movsl
fnstenv
and
or
xchg
ret
mov
nop
inc
sub
fisttps
ret
cmp
jb
cmp
mov
jnp
sahf
add
ds
out
jle
pop
jg
dec
xor
outsl
or
cmp
xor
scas
fdiv
test
fs
mov
push
mov
fwait
cltd
dec
pop
sarb
mov
sbb
lahf
cmp
popa
mov
xchg
mov
mov
add
ds
mov
push
mov
cmp
lock
lds
frstor
cmp
push
lret
jbe
push
rcr
push
inc
sbb
jb
sbb
stc
inc
stos
pop
push
js
arpl
jnp
mov
lahf
or
jmp
movsb
lret
xchg
arpl
push
pop
jle
mov
or
and
pusha
or
jmp
test
insb
jge
xor
loopne
xchg
fwait
sbb
push
jmp
mov
fs
or
rclb
push
jle
xlat
and
daa
fidivs
mov
insb
cli
mov
lahf
push
sahf
jl
jae
imul
mov
shr
xor
ret
sbb
add
iret
movsl
daa
mov
sub
sub
adc
clc
jecxz
jmp
pop
sbb
leave
jl
push
push
dec
xor
sbb
xor
movsb
xchg
cmp
lds
add
dec
fwait
and
pushw
and
shrl
dec
sub
nop
les
inc
jbe
imull
cmpsl
or
xchg
pop
jp
bound
add
sti
pop
jbe
incb
inc
xor
sbb
xor
sub
mov
rorl
and
lds
insb
cltd
jp
cli
movsb
jl
outsb
inc
daa
ljmp
add
decb
insb
repnz
xor
mov
xchg
sub
es
mov
mov
bound
add
adc
sub
stc
addr16
xchg
fxch
mov
cmp
imul
imul
faddl
cmpsb
roll
inc
xlat
cli
push
cmp
xor
adc
jnp
out
fmuls
inc
pop
ret
or
lods
cmp
sbb
push
xor
xor
xor
test
in
cs
out
and
cld
jns
mov
inc
ret
aad
scas
pusha
inc
pop
adc
cmpb
fidivs
push
add
inc
shrb
fwait
cmpb
adc
es
mov
fcmovnb
lds
xor
or
lret
pushf
push
iret
fidivrs
clc
dec
dec
out
lods
or
scas
add
push
ficoml
mov
fcompl
mov
xchg
out
sbb
and
jns
or
jne
aad
sub
adc
xor
fwait
in
xchg
out
in
ss
mov
cs
hlt
adc
das
icebp
incl
shl
jnp
ret
ljmp
add
jne
call
dec
dec
mov
insb
paddusb
sub
mov
out
mov
jge
mov
xorl
iret
sar
test
add
movsb
cmp
or
decl
test
adc
dec
ds
in
inc
push
js
jp
inc
pop
ja
sub
loopne
dec
mov
shlb
mov
mov
je
out
movsl
icebp
arpl
pop
adc
lret
in
mov
pop
cmp
data16
push
dec
cwtl
mov
inc
sub
dec
mov
mov
push
out
jnp
xor
adc
xchg
dec
fwait
mov
sarb
mov
cltd
lds
dec
push
sub
scas
fisttpl
xchg
stos
cmc
pop
xchg
mov
jg
cld
lds
mov
in
xchg
and
scas
insl
lahf
push
fcmovnbe
push
test
shlb
rcrb
divb
outsl
repnz
pop
mov
push
mov
mov
fcomps
ret
mov
sub
outsb
aad
clc
pushf
in
cvtdq2ps
sub
xorb
xchg
pop
push
jge
fldl
adc
xor
lods
inc
in
fcmove
dec
stos
fwait
and
cmp
inc
je
scas
cmp
mov
push
inc
ljmp
add
xor
push
push
jp
into
cmp
cs
jg
push
cmpsb
scas
mov
jg
push
cltd
pop
adc
xor
ds
adc
repnz
sbb
xor
sbb
adc
xchg
mov
mov
shlb
es
dec
movsb
cmpl
adcl
add
mov
xchg
andl
aaa
insb
pushf
test
add
mov
cmp
mov
incb
mov
cltd
bound
out
mov
xchg
icebp
dec
adc
ss
sahf
sbb
in
dec
sti
jg
lret
inc
jl
in
dec
xchg
decl
adc
cld
mov
outsb
mov
lds
and
pop
bound
push
jbe
pop
in
test
inc
cld
dec
mov
add
sbb
clc
adc
ds
mov
shll
imul
mov
push
mull
or
ljmp
js
inc
and
pop
cmp
popa
inc
pop
test
aas
sub
aam
sub
inc
sub
jae
mov
adc
dec
loop
in
lret
jg
ljmp
or
xor
or
pusha
or
or
jbe
jp
sbb
adc
mov
dec
insl
cmp
notb
cwtl
ds
hlt
mov
cwtl
subl
loopne
in
mov
mov
adc
pop
inc
adc
dec
faddl
shll
shll
fdivrl
movsl
outsb
push
movl
mov
jl
mov
aam
or
and
repnz
mov
mov
aaa
enter
aad
and
sarl
lahf
adc
pusha
jo
leave
xor
adc
pop
stos
mov
mov
or
mov
push
insb
jnp
in
pop
insb
sub
xchg
jp
mov
lret
cwtl
loop
xor
push
inc
jle,pn
fwait
outsb
repnz
push
movsb
xor
repz
mov
enter
call
lock
popf
jne
test
lcall
imul
fwait
and
adc
sahf
fcomps
jge
push
adc
xor
nop
enter
pop
je
sti
addb
mov
test
and
jne
jne
mov
lret
bound
adc
stc
sbb
fucom
sbb
sub
mov
mov
divl
mov
std
mov
xor
jno
add
mov
push
mov
sub
popa
out
xchg
push
push
sub
fsubrl
mov
mov
inc
cmpsl
js
loope
daa
and
aaa
gs
push
shrl
pushf
scas
sub
cmp
scas
sub
out
fs
clc
roll
lods
ficomps
mov
inc
xchg
sub
out
scas
pop
imul
outsl
ret
out
push
sub
repnz
dec
je
clc
cltd
xchg
les
push
or
pop
sub
push
jg
shrl
incb
cs
mov
fcoml
fimull
cmp
insb
cmp
movsb
jns
and
mov
pop
mov
and
pop
cmp
cwtl
movsl
mov
inc
pop
pop
pop
cmpsl
shrl
test
and
mov
popa
sbb
ds
int3
mov
jne
xor
mov
jb
jmp
inc
in
cmp
sbb
std
add
bnd
js
loop
and
xchg
lods
lea
xchg
int
repnz
fsubr
mov
and
fs
call
cmp
mov
push
je
mov
pop
push
xchg
pop
cmp
fwait
adc
fimull
shll
mov
out
sbb
jae
mov
mov
jo
lods
aaa
xor
cmpsl
ja
out
xchg
bound
out
jno
sub
clc
pop
sub
mov
and
inc
xor
imul
push
enter
jnp
fst
mov
push
je
pop
in
jnp
sbb
scas
pop
stc
enter
loop
movsb
hlt
cwtl
inc
test
fsubrs
inc
and
scas
cli
mov
cmp
push
add
mov
jp
loop
push
andl
int
mov
add
in
gs
out
jge
movsl
data16
test
ss
les
jno
sub
push
nop
mov
out
fld
shlb
cs
bound
push
stos
pop
xor
mov
das
pop
push
pushf
fiadds
and
orb
aas
sub
shlb
fisubrs
scas
rclb
mov
aaa
xchg
xchg
test
mov
jo
add
adc
ret
sar
adc
movsl
mov
push
loope
cmp
push
fdivs
jecxz
daa
movsb
shll
mov
push
adc
or
mov
lret
sbb
shl
pop
mov
pop
iret
xor
xchg
and
add
pop
mov
jl
push
xor
mov
test
or
xchg
outsb
xor
push
cltd
sub
push
ja
xchg
add
inc
fdivrs
cld
rclb
test
sahf
mov
cmc
scas
dec
sarl
stos
cmc
pop
mov
mov
sbb
ret
push
imull
in
xchg
inc
ds
iretw
mov
push
cmp
sub
or
pop
mov
scas
mov
adc
jns,pt
xchg
xchg
sub
pop
mov
in
movsl
sbb
iret
sbb
daa
jne
filds
paddsb
movsl
sbb
mov
or
pop
or
mov
xor
jg
sbb
xorb
popa
aam
cmp
inc
mov
into
pop
enter
lods
popf
mov
aas
sbb
xor
rcrb
icebp
sbbl
dec
cmc
jae
xchg
inc
cmp
xor
notb
xchg
sbb
pop
jns
das
lods
mov
aas
sar
in
out
fcmovbe
sub
adc
pusha
mov
bound
shll
popf
jp
cmp
jmp
mov
mov
jo
roll
aam
pop
das
or
sti
lods
jg
fldl
testb
push
hlt
push
jge
jge
sbb
lods
cwtl
arpl
mov
jbe
std
xchg
std
ret
dec
mov
lea
jge
sbb
addr16
out
notb
fisttps
mov
xor
scas
roll
adc
dec
lahf
aas
scas
jno
cld
lods
sub
rol
cld
int
mov
or
in
sbb
fldt
adc
sbb
inc
cli
lods
aad
jmp
add
js
inc
jl
addr16
adc
enter
and
jne
lcall
mov
clc
or
sub
fmuls
movsb
pop
test
push
cmp
jge
push
jmp
add
out
push
cmp
and
sub
adc
movl
mov
push
movsl
popf
lahf
adc
mov
aam
mov
sbb
xor
adc
add
inc
scas
inc
sti
xor
mov
repnz
lahf
aaa
stc
aam
not
inc
fsubrs
iret
loopne
or
jl
ret
movsb
orb
aam
sarb
nop
jle
loopne
dec
jbe
mov
dec
jecxz
xlat
sbb
pop
sub
and
repz
jl
xor
adc
les
outsl
jge
adc
mov
sahf
xchg
outsl
adc
xchg
cltd
cs
lea
in
sbb
jo
xor
and
bound
addr16
adc
iret
add
push
cwtl
push
sub
inc
into
dec
mov
mov
dec
ror
jb
shrl
add
xchg
mov
jl
mov
in
and
arpl
ficomps
pop
fs
push
push
dec
sub
mov
les
jb
std
mov
sbb
jns
inc
or
shrb
jae
jecxz
dec
jbe
inc
sub
fs
ja
int3
imul
and
adc
rolb
jp
xchg
pop
push
dec
jne
pop
lods
adc
cs
cmpsb
sahf
xchg
int3
mov
jl
enter
stc
cwtl
orl
in
lea
loope
icebp
psubq
sub
ja
in
sbb
jmp
addb
insb
add
lods
out
sub
adc
lahf
add
sub
cs
sbb
add
inc
sub
mov
pop
insl
inc
mov
xchg
mov
imul
fistl
gs
loope
dec
fucom
inc
or
clc
dec
sbb
lret
push
sub
push
pop
mov
faddl
testb
jge
in
mov
or
movsb
or
hlt
sahf
mov
xchg
in
movq
sbbl
sbb
fs
lcall
jmp
fldl2e
in
leave
mov
jp
leave
xchg
outsl
addl
sahf
jne
aaa
xchg
shrl
jl
mov
into
cmpsb
push
movsl
jbe
mov
inc
arpl
mov
jne
xor
das
aaa
call
stos
andl
mov
mov
test
test
sub
clc
cli
xchg
xlat
mov
mov
adc
outsb
sub
iret
je
or
mov
int3
jl
mov
shll
push
mov
movsb
ret
sbb
cltd
test
add
fnstcw
ja
loope
sbb
cmp
mov
imul
repnz
jno
sbbl
popa
add
push
adc
int3
add
movsl
insb
and
test
mov
adc
scas
jmp
pop
jmp
aam
scas
mov
clc
daa
sbb
xchg
loop
lret
scas
dec
xor
dec
out
ss
ljmp
pop
mov
div
mov
push
cltd
aad
or
mov
rol
add
loop
sbb
jnp
cmp
scas
ljmp
push
and
push
mov
sahf
mov
das
and
cmp
push
loop
mov
aad
es
fiaddl
mov
enter
pop
lcall
icebp
shll
pop
fcoml
ret
sbb
test
cmpsl
fldl
lret
je
ret
dec
setl
or
or
jb
daa
lcall
pop
addw
dec
xchg
push
cmc
cmp
adcb
lock
stc
jle
inc
mov
jg
push
cmp
shr
andb
shl
insb
sub
loopne
fisttps
ja
into
or
orb
add
add
add
mov
pop
repz
test
sub
or
mov
push
repnz
rorl
cmpsl
inc
test
xchg
movsb
fisttpl
add
jne
add
adc
popf
out
xor
mov
push
cmc
mov
in
inc
stos
xor
insl
nop
out
repnz
arpl
decb
push
adc
loopne
iret
leave
popf
xchg
push
imul
scas
jecxz
ss
ss
sbb
xchg
fwait
push
mov
push
sti
xor
inc
into
pop
or
ds
test
dec
addr16
push
jnp
adc
add
inc
rclb
mov
mov
imul
andl
ja
imul
jbe
cld
pop
pop
movsb
or
push
loop
cmpsb
push
push
or
adc
and
fcoms
inc
ret
pop
mov
mov
inc
das
subl
loop
add
out
push
cli
and
sub
sub
push
inc
push
ficompl
mov
jp
out
mov
push
out
push
icebp
jecxz
out
mov
std
insl
pop
push
mov
lds
in
sub
jne
ja
iret
jecxz
jmp
aaa
lds
and
in
xchg
xchg
mov
dec
iret
lahf
sub
inc
dec
sbb
pop
stc
in
cmp
stc
dec
add
push
aam
pop
xlat
adc
incl
in
sbb
movsl
aaa
popa
inc
pop
mov
or
inc
movsb
int
mov
mov
xor
gs
gs
insb
aam
jae
or
fdivr
dec
lock
jmp
divb
jl
add
mov
orl
outsl
enter
lcall
mov
into
test
lret
pushf
xor
push
lea
xchg
nop
les
inc
daa
pusha
jg
fdivl
push
cmpsb
pop
inc
mov
neg
xor
movsl
pop
cmp
xlat
push
mov
jmp
repz
mov
pop
call
js
movsl
and
dec
xchg
sahf
pop
xor
pop
sbb
inc
jge
xchg
and
mov
fistpl
cmovg
add
fadd
mov
cmp
dec
cmpsl
lcall
pop
dec
add
jo
test
int3
lds
aam
fsubrs
add
or
ds
adc
xor
gs
cmp
jae
xchg
jge
pop
loope
xchg
sub
lret
lcall
mov
push
insl
aam
sub
mov
das
movsb
sub
add
adcb
jns
jp
jecxz
cltd
sahf
repz
jne
mov
fisubs
jl
inc
cmp
push
xchg
pop
loop
aas
nop
cld
cmpsb
loop
pop
inc
out
sarl
lcall
leave
cmp
aas
test
daa
popf
sarl
adc
rcl
push
push
inc
ror
fidivrl
lods
and
mov
ss
popf
in
jbe
data16
rolb
shll
lcall
dec
sarl
movb
pop
push
mov
xor
pop
dec
les
mov
dec
mov
jno
adc
xor
cmp
pop
lret
loop
into
sub
js
jno
orl
jmp
lods
mov
arpl
fsubrs
loopne
pop
push
mov
cld
das
fcomi
cmp
sbb
inc
hlt
gs
outsb
inc
test
jns
mov
jg
enter
jg
cld
cmp
or
mov
xor
pop
cmp
jp,pn
mov
xor
mov
mov
and
jo
fs
add
lret
pop
fisubl
pusha
sbb
jb
sub
popa
mov
in
mov
sbb
push
xchg
add
sub
mov
cmpsb
pop
xor
mov
cmp
in
out
inc
add
data16
mov
dec
fstps
outsb
scas
add
leave
loop
xchg
inc
xor
add
aad
in
pop
jp
popa
je
icebp
dec
mov
nop
add
jae
jns
popl
int3
xor
xchg
addr16
lret
push
adc
dec
add
test
jl
xchg
daa
push
popf
bound
aam
daa
add
scas
cmp
loop
leave
mov
pop
pop
addb
add
cld
lds
sub
icebp
mov
ss
movsl
mov
loop
out
or
hlt
fwait
mov
fisttps
push
lcall
dec
stos
inc
adc
insb
imul
sbb
cmp
jmp
cs
push
insb
shll
mov
cmp
into
or
rep
xchg
xchg
push
lahf
ds
cmp
or
fbld
jae
inc
inc
ja
xchg
hlt
imul
shr
mov
xlat
hlt
sbb
pushl
les
int
push
lret
addr16
sbb
cmp
sub
jle
shrl
fsubrs
repnz
mov
sbb
mov
push
hlt
sub
hlt
test
push
movsl
dec
fs
outsb
or
push
sti
movsb
jl
les
jmp
movsb
bound
aaa
push
insl
sti
add
sbb
mov
jbe
fnstsw
and
test
mov
daa
into
cs
push
adc
pop
pop
xchg
adc
jge
ljmp
mov
es
push
rorb
inc
pusha
cmc
mov
es
popa
push
jne
daa
push
inc
cmpb
mov
mov
inc
test
xor
pop
subl
push
pop
jb
arpl
dec
andnps
jb
inc
int3
jge
hlt
jmp
jp
lret
pop
mov
pop
js
jbe
xor
inc
mov
jge
lods
clc
xchg
and
icebp
in
pushf
dec
cltd
mov
cwtl
rcl
adc
stos
popf
arpl
adc
jns
ss
push
test
or
add
shrl
fs
call
jns
pop
negb
or
pushf
pushf
jbe
movsl
lcall
mov
loope
movsb
mov
movsb
xor
mov
or
or
or
shr
mov
jge
xchg
lahf
loope
ja
jg
pop
imul
add
cmp
xchg
fistpll
cmpsb
xchg
push
stc
test
mov
jl
push
dec
xchg
xchg
xor
xorb
test
pop
mov
aad
adc
popf
addr16
dec
cld
xor
pop
cmp
pop
push
iret
pop
out
aam
add
ret
movsb
or
shll
xchg
insl
cs
adc
stc
push
xchg
enter
mov
fwait
cs
dec
mov
scas
inc
adc
imul
push
jg
les
jecxz
cmp
push
sub
nop
xchg
mov
adc
hlt
ljmp
into
sbbb
imul
pop
jmp
mov
xor
imul
sub
std
add
mov
cs
insb
and
test
jecxz
mov
push
xor
int3
loope
mov
cld
inc
cmp
fdivrs
xchg
jle
cli
xchg
ret
dec
sbb
in
out
int
mov
fnstcw
and
stc
ret
and
xchg
scas
sbb
test
lods
je
dec
pop
ljmp
ss
ljmp
jp
sub
aaa
test
and
in
arpl
mov
jg
js
dec
or
or
repz
or
sub
fisttps
daa
mov
ret
jne
lock
push
mov
cld
in
sub
adc
int
xor
xor
je
mov
adc
scas
push
inc
mov
pop
mov
add
lahf
mov
pop
push
repnz
es
pop
jle
outsb
pminub
or
test
lcall
aam
pshufw
fisubrl
insb
add
cmpsl
fstps
and
sub
pop
xchg
sbb
inc
push
mov
sbb
jecxz
rep
scas
ja
mov
scas
loope
mov
out
push
hlt
mov
mov
push
test
orb
inc
lret
and
and
mov
repz
gs
or
scas
push
mov
and
xor
popa
sbb
push
xchg
in
test
pop
lret
cmp
sbb
xchg
lret
hlt
mov
pop
clc
mov
sbb
xlat
in
dec
cmpsb
daa
xchg
aas
jns
das
fisubrs
gs
push
dec
sub
add
cmpb
nop
xlat
push
sar
stc
repz
cltd
ljmp
jns
sbb
fildl
mov
ret
pop
cmp
or
push
mov
mov
cmp
sub
sahf
into
enter
cli
jl
mov
lret
mov
imul
cwtl
pop
in
add
or
jne
aam
out
mov
dec
push
jb
and
fstpt
push
inc
xchg
add
push
sbb
mov
pop
xor
ja
add
sbb
add
xor
mov
in
lahf
clc
mov
and
repz
insb
dec
xchg
mov
lock
dec
adc
push
mov
loop
sti
xor
leave
pop
pushf
dec
ja
add
lret
lea
xchg
rclb
xor
xor
jae
adc
test
mov
add
mov
test
inc
mov
inc
inc
int
push
mov
dec
cltd
adc
fs
adc
or
aad
xlat
iret
adc
fbstp
and
std
gs
es
sub
fwait
movsl
pop
pop
repz
les
ret
cmp
fwait
adc
adc
xor
pop
lock
xor
es
repnz
jae
sub
test
xor
pop
aam
sbb
fsubl
push
jle
lods
iret
lods
xor
cmp
rcrl
repz
loop
mov
xor
ja
cmp
sub
push
clc
mov
lods
lods
pop
es
aas
out
fs
cs
sub
pop
push
pop
xchg
mov
xchg
imul
push
push
and
push
imul
sbb
push
xchg
push
int
pop
inc
jae
cltd
mov
fiaddl
push
sub
cmp
pop
cmp
int
fcoml
push
fisubl
xchg
push
and
pop
mov
dec
or
mov
push
add
divl
xchg
aas
push
out
out
jecxz
add
cld
dec
xchg
mov
in
cltd
mov
outsb
into
xlat
mov
adc
outsb
xor
jno,pn
enter
rcll
out
jl
and
sub
push
dec
dec
ret
cmpsl
add
fisttpl
mov
mov
and
xchg
push
out
lods
in
dec
mov
out
gs
mov
shrb
mov
js
mov
dec
icebp
fstps
shll
push
mov
ret
dec
jge
sub
rcrl
mov
test
push
cmc
fisubrl
andb
mov
adc
mov
into
push
addr16
dec
fsin
dec
jne
pop
dec
repnz
iret
pop
inc
pop
and
loopne
scas
mov
pop
gs
cmc
cmp
das
mov
inc
popf
cmp
daa
stos
leavew
cwtl
lds
push
cmp
mov
sub
or
pop
mov
and
mov
repz
aam
push
lock
add
mov
nop
push
and
in
filds
lcall
lcall
cld
jl
iret
cwtl
and
shlb
ds
mov
mov
mov
popa
enter
jl
dec
clc
jge
pop
pop
jns
fisubs
out
loope
cmp
cs
pop
insb
xchg
fmull
lods
dec
mov
loope
xor
jns
jmp
xor
mov
ljmp
cltd
cld
test
mov
mov
cld
mov
add
pop
loopne
dec
cmpsl
xchg
cmc
lret
jecxz
and
inc
lea
enter
and
inc
in
inc
cmp
rolb
lds
inc
add
mov
xor
aad
xchg
lcall
aaa
cmp
idivl
dec
and
sub
xchg
jmp
add
lods
lret
sbb
scas
adc
sbb
mov
lea
and
or
sbb
lret
jae
out
dec
dec
jge
cs
push
push
push
hlt
lret
pinsrw
sub
inc
sub
dec
mov
icebp
outsl
dec
test
decb
clc
xor
js
dec
fs
arpl
sarl
adc
cmp
mov
jne
xchg
daa
push
ret
loope
movsl
jnp
cli
dec
out
push
mov
subb
xor
bound
jmp
xor
addr16
aas
cmp
push
out
sbbl
fdivs
hlt
mov
hlt
mov
std
adc
subl
push
cltd
cmp
gs
adcl
pop
or
cmp
lea
stos
imul
lods
mov
dec
les
cmp
push
negb
ret
ljmp
dec
pop
cmp
cs
stc
in
xchg
dec
mov
inc
lcall
or
sub
mov
insl
call
mov
fs
fwait
fs
cmp
fwait
xor
inc
cmpsl
sbb
aad
adc
sbb
inc
cmp
mov
sbb
mov
mov
and
lcall
mov
sub
test
cld
jnp
pop
stos
cltd
or
cmc
stos
je
mov
jmp
push
fwait
lahf
nop
cwtl
jp
mov
add
and
outsb
sbb
and
std
mov
pusha
jmp
scas
in
adc
sub
testl
cmc
pop
mov
test
jge
dec
bound
mov
pop
jp
fstpl
push
in
test
mov
pop
cli
pop
repnz
xchg
paddq
je
fists
inc
les
mov
addl
sbb
pop
inc
push
imul
repz
inc
xchg
fcomps
in
stos
xchg
cs
dec
icebp
and
push
dec
cmp
nop
dec
outsl
std
mov
jle
xchg
cmpsl
xor
sbb
xchg
psrlw
and
les
and
sub
inc
sahf
sbb
mov
into
cmpsl
out
int3
push
inc
sbb
xor
daa
movsl
and
fisttps
loop
jmp
xchg
lds
daa
outsl
dec
mov
push
inc
leave
pop
jbe
pop
xchg
bound
cmpsb
in
pop
shrl
adc
sub
mov
mov
dec
add
adc
mov
repnz
cmpsb
or
ret
cmp
test
pop
and
imul
rorl
cmp
testl
push
push
xchg
xor
imul
or
or
test
js
add
push
int3
dec
dec
xor
cmp
cmp
adc
add
outsl
jl
and
rorb
test
sbb
adc
dec
loop
jmp
push
sub
inc
rcrl
mov
sbbl
fxch
cmp
mov
dec
xor
jbe
scas
test
hlt
and
and
cmpsb
leave
adc
test
and
jmp
adc
je
dec
mov
mov
mov
in
cmp
repz
adc
cmp
jmp
mov
aaa
pop
sti
cmp
pop
xchg
sti
jecxz
xchg
adc
aam
cli
xchg
repnz
mov
mov
loop
outsb
xor
mov
clc
gs
lea
loope
ljmp
dec
sarb
js
pop
jp
push
inc
addr16
xor
pop
fnstcw
xchg
in
clc
cmp
test
mov
xor
enter
bound
movsb
lds
mov
xchg
mov
sarl
fstps
data16
call
aas
sub
and
fsub
das
outsb
cmp
sbb
cli
idiv
addl
jae
mov
jecxz
cli
loopne
and
jno
and
inc
sbb
movsl
nop
jge
jle
jae
mov
pushf
js
jle
in
popa
push
jp
mov
sbb
inc
sbb
adc
mov
outsl
xor
in
je
fisttpl
sbb
inc
jg
fwait
cmp
jp
mov
and
ficomps
testb
fstpt
fldcw
pop
fdivrl
inc
fldt
sbb
mov
imul
xor
jmp
std
out
mov
and
add
mov
outsb
imul
jle
ja
imul
popa
jg
cld
ljmp
popf
je
in
ret
mov
and
mov
aad
mov
xchg
test
dec
lock
and
mov
dec
xchg
loopne
pop
sbb
mov
mov
inc
mov
imul
lods
cmp
inc
adc
idivl
add
popa
mov
push
arpl
pop
fsubrl
mov
xchg
sub
cmpsl
xor
and
mov
xor
test
ljmp
cltd
jns
mov
push
stc
aaa
add
popa
int
clc
sub
and
push
xchg
pop
lods
idivb
ljmp
sbb
adc
gs
xchg
int3
dec
push
jg
inc
lds
and
jbe
and
jge
js
dec
and
mov
es
sbb
cmpsb
and
push
xchg
shrl
jp
push
and
adc
shl
fwait
pop
clc
aas
pop
rorb
sbb
push
aaa
pop
and
aam
mov
cs
lcall
mov
in
dec
mov
nop
test
mov
adc
cmp
xor
repnz
push
mov
lods
sub
pop
iret
mov
aas
jg
xchg
es
xchg
sti
adc
mov
call
das
xadd
push
lds
shll
push
imul
mov
mov
out
fnstcw
and
insl
jecxz
movsl
es
push
cltd
ds
mov
lds
sti
into
cmc
dec
push
nop
pop
mov
add
daa
sub
cmp
inc
inc
in
inc
inc
cld
pop
mov
out
push
insb
and
inc
out
fistps
and
mov
cmp
out
xchg
mov
inc
stos
xchg
mov
clc
adc
dec
pop
ljmp
adc
lods
mov
xchg
xor
aaa
xchg
int
push
or
push
inc
fimuls
pop
leave
psrlq
inc
mov
mov
jge
fidivrl
clc
sbb
sub
sbb
repz
jne
dec
mov
shll
sub
test
mov
gs
sub
mov
sbb
mov
repz
fdivl
jo
clc
out
push
cmpsb
jb
xchg
mov
call
mov
into
aas
in
fistps
ret
subb
mov
add
pop
mov
int
fwait
mov
cltd
inc
jae
sbb
xor
cs
outsb
movsb
adc
adc
push
test
out
and
into
nop
add
jnp
out
mov
daa
ret
inc
push
pop
lcall
mov
dec
cmp
push
jg
lea
pop
sub
repz
gs
idivb
mov
imul
stos
push
jmp
dec
push
sbb
pop
push
push
jecxz
decl
loop
lahf
inc
inc
lret
dec
fimuls
jno
push
or
lret
sbb
lahf
fistps
cs
stos
leave
cli
ss
xchg
and
mov
imul
xlat
xchg
xlat
aaa
sarl
push
mov
jo
sub
ret
scas
in
out
loope
insb
lret
sub
cmc
pop
fwait
xorl
xor
jnp
inc
pop
outsl
fnstenv
out
sbb
mov
or
mov
pop
and
xchg
push
inc
shrl
inc
daa
daa
and
mov
fwait
pop
mov
outsl
hlt
mov
pop
jae
test
mov
or
ss
cmpb
xlat
lret
shl
adc
lcall
call
sbb
xchg
pop
add
std
xchg
and
sahf
sub
add
in
pop
jle
mov
sbb
aaa
add
fcmove
mov
maskmovq
negl
adc
pop
xchg
add
fs
setbe
dec
sub
scas
imul
subb
loop
mov
xor
outsl
push
sbb
movsb
cwtl
mov
insl
in
test
stos
stc
lret
pop
or
mov
fiadds
mov
loope
in
push
jbe
leave
and
stc
jb
sti
push
xor
movsl
dec
enter
out
arpl
and
mov
or
mov
dec
inc
pop
out
dec
push
xor
cmpb
int
xchg
sbb
xor
jecxz
ret
xor
cmp
mov
and
cwtl
lds
inc
ret
jae
leave
fcomps
leave
bound
std
push
dec
repnz
sub
and
fidivrs
mov
ret
sbb
sub
aam
loop
mov
adc
mov
or
push
sbb
ret
sbb
push
iret
in
lods
add
and
jo
lock
sub
ss
jmp
sahf
into
sbb
cmp
les
mov
add
cmpsb
xchg
pop
add
ss
fstps
sub
add
orl
sbb
sarl
cmp
fs
out
xor
mov
cmp
mov
ror
lahf
sti
and
add
add
fisubrl
in
sbb
js
pop
push
aaa
mov
les
aad
outsb
push
push
ret
add
sub
fldl
mov
call
mov
cmp
and
mov
adc
clc
fs
pop
in
pop
std
movsb
push
xor
ret
add
int3
jnp
adc
xor
push
sub
sub
addl
ds
fistl
cmp
ret
mov
popf
xor
pushl
dec
lcall
lods
push
into
mov
push
in
cmp
xor
in
or
nop
jnp
jl
cltd
xchg
mov
test
xchg
and
jg
cmpsl
xchg
int3
pop
loopne
add
or
sub
xchg
inc
mov
mov
mov
mov
pop
push
int
push
mov
nop
push
inc
int
or
shll
sbb
mov
cmp
lea
sbb
sub
call
popa
inc
insl
and
fdivrl
sbb
lcall
lret
jo
inc
inc
stc
gs
jb
imul
lea
fdivrl
nop
es
push
hlt
movsl
aas
iret
es
mov
push
inc
into
dec
data16
call
addl
ds
outsl
shrb
pusha
into
sbb
cmp
cmc
cmp
pusha
pop
push
jmp
mov
out
loope
pop
xor
and
je
mov
nop
pushf
fistps
cmp
mov
cmp
movsb
dec
xor
inc
inc
mov
jg
insb
mov
push
or
jnp
mov
ss
jo
in
adc
ljmp
sbb
sahf
es
mov
add
ficoms
push
mov
or
ss
icebp
jge
mov
jne
rclb
push
cs
lret
add
cmp
cmp
pop
out
xchg
fdivrp
jl
nop
mov
int3
cmpb
add
aam
xchg
xor
dec
hlt
sbb
sbb
lcall
sub
push
jmp
shl
jp
jg
jp
sbbb
xor
orb
aas
push
js
sub
ss
xchg
faddl
outsb
fidivl
inc
fimuls
jecxz
jp
mov
pop
aaa
ficoms
je
mov
nop
sbb
adc
repz
sub
pop
into
int
jmp
xor
shll
les
add
jp
movsb
bound
push
not
xchg
add
fiaddl
test
jnp
mov
lahf
mov
and
add
add
setl
xchg
into
push
push
push
popf
int
jae
mov
lahf
mov
pop
sar
xchg
pusha
push
xchg
sbb
lods
in
fldcw
mov
sbb
jge
mov
or
pop
rorl
sti
mov
push
outsb
arpl
pushf
leave
out
scas
out
rclb
or
leave
outsb
les
push
add
call
dec
mov
mov
mov
xchg
pop
or
insb
jg
sar
jo
xchg
jl
scas
fwait
out
xor
lcall
insb
mov
or
pop
mov
push
mov
add
xchg
pushf
addl
pop
mov
arpl
mov
sbb
popf
test
jae
xchg
cmp
sub
jl
repnz
xchg
mov
xchg
mov
jge
or
sub
les
xor
pmulhw
andb
jb
popf
movsl
lock
scas
jne
xchg
enter
leave
dec
das
and
fcompl
add
sbb
mov
jno
mov
add
dec
pop
rcrl
add
cmc
ljmp
icebp
inc
iret
insb
xchg
or
int
out
mov
movsb
xchg
cmp
pop
sub
pop
dec
dec
pop
insl
sbb
push
push
aad
and
pop
fldl2e
repnz
movsb
push
fwait
int
push
dec
cmp
enter
ret
and
cld
std
iret
sbb
pop
fdiv
inc
rclb
push
out
mov
cmpsl
in
imul
jb
xor
icebp
push
jo
test
pop
mov
cmp
aam
popa
scas
movsb
rorb
lods
into
fisubrl
cltd
outsl
or
dec
mov
rcrl
xchg
push
dec
aad
inc
push
jns
cmp
lahf
clc
cli
pushf
aad
xchg
stos
mov
jp
xchg
adc
pop
clc
subl
sarb
fs
pop
cmp
push
dec
xor
in
jl
out
mov
push
cmpsl
adc
shlb
rcrl
fwait
jns
add
push
movsl
scas
rcll
xchg
pop
je
test
aas
jge
mov
pop
in
push
and
cmc
shll
pop
pop
push
dec
loopne
xlat
sub
pusha
mov
jecxz
in
dec
test
pop
insl
mov
pop
xor
mov
push
ja
fcmovnbe
cmp
test
ljmp
cwtl
sti
inc
mov
xor
inc
je
adc
bound
sbb
xor
cmp
mov
fiadds
ret
into
inc
movsl
call
movups
xlat
xor
add
fimuls
xor
adc
lcall
fwait
mov
pushf
inc
je
dec
mov
repz
enter
pop
hlt
inc
cmp
xchg
xor
or
sbb
incb
xchg
test
jb
pushl
push
pop
enter
fcmovb
inc
add
pop
mov
clc
push
lods
dec
pop
movsb
jge
or
imul
sbb
jle
push
xlat
xor
sub
pop
sbb
cmpsb
scas
and
lahf
popa
dec
dec
sbb
adc
mov
fs
xchg
or
dec
fstpt
fisubl
ljmp
clc
shl
fstl
leave
aaa
imul
inc
add
cmp
push
gs
hlt
cwtl
mov
cwtl
pop
pop
movsl
pop
imul
cmp
mov
inc
popa
mov
push
inc
test
push
lods
ljmp
push
push
popf
mov
ret
jle
enter
aad
enter
dec
cmp
hlt
cld
addr16
andl
pop
jno
leave
ss
enter
aaa
aam
push
aaa
aam
xlat
arpl
mov
pop
lea
les
in
xlat
and
out
jo
mov
in
jmp
hlt
adc
pop
lock
out
js
loop
ja
lods
ljmp
pop
cmp
mov
popa
pushf
int
mov
xchg
dec
test
leave
in
mov
cmp
dec
mov
int
mov
jge
aas
test
std
ficomps
add
mov
cmpsl
push
lods
daa
mov
add
dec
subb
jo
lods
inc
add
push
es
add
pop
dec
imul
stos
fildll
ret
loop
xor
dec
xor
gs
lcall
addr16
add
push
testb
rcrb
sbb
movsb
pop
inc
mov
in
jne
xchg
loopne
mov
stos
push
sub
mov
fldl
ret
leave
mov
dec
push
xor
push
push
push
loope
xchg
push
fs
aaa
fisubrl
enter
dec
arpl
cmp
fnclex
fsub
mov
jp
out
lds
pop
sbb
sbb
subl
enter
mov
and
cli
repnz
dec
std
hlt
test
bound
sbb
sub
fcompl
inc
mov
and
mov
test
xchg
pop
push
inc
out
xor
lods
xchg
jne
jno
jp
shrl
pop
fisubl
or
mov
scas
jns
mov
xorl
and
test
dec
jg
icebp
mov
ret
xor
out
push
mov
leave
push
inc
xor
loopne
push
mov
push
mov
mov
sub
and
and
das
test
push
add
adcb
cmp
xor
shll
cmp
mov
mull
shrl
xbegin
lahf
insb
popf
mov
push
or
insb
lret
cmc
add
hlt
daa
pop
sahf
cmpb
popa
inc
cltd
stos
in
repnz
xor
dec
jp
stos
mov
insb
ja
push
pop
scas
xchg
jge
adc
pushf
pop
rclb
or
jnp
popa
jne
mov
add
paddw
mov
push
or
sarl
jbe
pop
in
cmp
cmc
adc
and
scas
mov
jbe
push
mov
mov
in
mov
shlb
enter
xor
sbb
call
inc
inc
test
and
hlt
cs
inc
clc
push
jmp
push
ljmp
frndint
cli
fcompl
iret
cmc
jae
lret
repz
jnp
cld
cmp
sahf
and
les
mov
inc
pop
lock
dec
and
mov
xchg
mov
jmp
adc
cmp
inc
push
mov
mov
push
mulb
mov
insb
out
pop
fidivrl
std
cmpsb
mov
mov
push
std
xchg
movsl
and
pushw
add
es
loop
stos
cmpsb
mov
or
or
pusha
xor
adc
jae
sub
sbb
and
mov
addr16
aaa
jle
in
add
fisubl
bound
lret
push
mov
aam
jae
les
xchg
mov
stos
jno
lcall
test
decl
mov
lret
push
cmp
mulb
or
in
sbb
iret
or
jg
scas
jns
adc
cltd
pop
sub
fiaddl
xchg
int3
scas
in
jns
pop
xchg
adc
cli
jge
jo
mov
push
lahf
popf
sbb
push
inc
xor
jns
aaa
mov
jne
ljmp
test
and
daa
mov
mov
sbb
and
lret
inc
in
mov
mov
enter
test
or
push
dec
into
fwait
leave
out
dec
test
mov
enter
add
aad
jno
push
lret
imul
out
mov
cwtl
out
xor
test
rcrb
and
add
sub
loope
movsb
icebp
jp
dec
jns
or
pop
aas
int
jae
jns
xchg
adc
insl
cmp
xor
test
in
or
int
in
mov
xchg
adc
xor
pop
stc
cmp
sub
loope
inc
dec
mov
call
mov
mov
pop
into
dec
stos
xor
mov
arpl
adc
rcrl
dec
mov
lods
mov
and
loopne
fwait
lcall
and
ja
inc
dec
int3
scas
daa
cmp
nop
popa
clc
jp
imul
jmp
xchg
xorl
add
push
repnz
out
mov
stos
push
cmpsl
push
das
jns
adc
repnz
daa
mov
push
sbb
adcb
mov
imul
sarb
data16
sub
imul
test
xor
in
mov
push
pop
in
inc
lods
adc
sti
imul
push
subb
add
add
jnp
out
inc
cmp
add
cltd
movsb
dec
push
cmp
mov
in
movsb
sbb
rcrb
test
bound
sbb
call
cmp
xchg
ljmp
repnz
xor
and
idivl
xchg
loope
push
pushf
jae
cwtl
inc
jecxz
call
mov
fdivrp
inc
fimuls
ss
iret
cmp
xor
call
sti
es
out
xchg
ss
rclb
adc
iret
lahf
add
jnp
int3
loopne
cld
loop
movsl
adc
cmp
inc
cmp
pop
cmp
push
dec
pop
test
popa
ret
int3
and
fxch
mov
push
std
unpcklps
ds
pop
lods
nop
mov
cld
push
and
inc
dec
and
fistps
or
popf
sbb
loope
adc
pop
aas
cmpsb
pop
int
jae
mov
mov
cmp
xchg
or
add
fbld
inc
pop
pop
and
push
dec
fcmovu
jp
adc
fisubrs
test
mov
insb
xchg
notb
cmp
xlat
sbb
or
jae
mov
push
pop
stos
mov
cltd
in
jae
fnstcw
mov
fwait
lret
and
add
pop
mov
mov
xchg
push
add
xchg
pop
mov
sub
push
xor
bound
outsb
push
mov
scas
je
or
add
mov
leave
mov
fucom
add
cmc
pusha
sbb
nop
xor
mov
outsl
cmpsl
or
das
testl
xor
jo
jp
jb
lret
aas
dec
xor
inc
mov
stos
xchg
je
mov
imul
stos
mov
and
stos
outsl
cmp
lret
mov
fs
inc
cmp
push
inc
das
int3
sub
in
repnz
cmp
adc
push
mov
or
adc
sub
lret
out
sub
fwait
xor
add
jecxz
pop
push
xchg
dec
jge
imul
cld
repz
cs
add
scas
xchg
ret
in
jmp
rorl
lods
mov
divb
push
cmp
movsl
les
cwtl
cmp
add
int3
dec
fwait
pop
cmp
lret
xchg
cmpsl
push
in
jg
loopne
xlat
add
cli
xor
arpl
sahf
jle
daa
cli
aas
inc
std
xorl
adc
xor
push
and
inc
rolb
push
daa
xchg
shrl
and
mov
and
jle
lods
cmp
xor
mov
cmp
in
sbb
out
push
cmp
test
movsl
clc
lret
and
mov
lret
cmp
jp
jbe
int
mov
in
rcll
lods
jg
cmp
sbb
daa
loopne
adcl
negb
cmp
cmp
gs
inc
orb
cltd
in
xchg
gs
cmp
pop
mov
lds
and
xchg
sarl
orl
add
cmpl
testb
ret
insb
adc
xchg
or
sub
out
lea
and
stc
cltd
hlt
icebp
gs
fcmovnbe
ds
ljmp
and
sub
add
test
sub
jae
and
in
xchg
cmp
pop
jp
dec
imul
iret
cmp
mov
lods
mov
out
pop
lret
xlat
jge
repnz
fstl
xchg
dec
into
jle
fcomps
call
mov
out
std
in
sbb
popf
fisubrs
orl
test
push
mov
xor
inc
cmp
xchg
mov
mov
aad
mov
lcall
cwtl
dec
sarb
mov
sbb
inc
mov
cmc
stc
xchg
scas
movsl
sub
cmp
pop
mov
addl
outsl
mov
pop
add
mov
cli
lods
lods
adc
sbb
data16
test
je
jle
cmp
test
fld
pop
andb
fisubs
or
iret
xor
pop
es
dec
mov
sbb
pop
sub
jae
fwait
jne
cmpsb
push
push
mov
lret
dec
inc
add
adc
inc
jb
push
xchg
mov
roll
mov
stc
jmp
sbb
lods
dec
xlat
push
and
xchg
repz
call
mov
jns
jno
imul
sub
nop
ret
mov
insb
loop
repnz
pop
xor
ljmp
imul
jno
cs
jne
or
pop
and
mov
hlt
je
xchg
test
mov
movd
jae
adc
xchg
inc
scas
sarb
bound
inc
insb
jb
sahf
idivl
cmp
cmc
stos
dec
mov
ja
nop
xor
movsl
popa
cmp
add
or
push
pop
sarb
mov
ret
mov
fdivl
aas
dec
mov
lcall
sti
insl
mov
dec
mov
aad
and
rclb
push
xchg
negb
pop
ret
push
sahf
jb
dec
iret
push
xlat
xchg
xor
or
ja
rcrl
adc
jo
sub
icebp
add
aad
pop
outsb
fimuls
xlat
sarb
inc
push
mov
inc
mov
push
and
lea
inc
std
dec
adc
stc
je
fldt
xlat
bnd
and
mov
xchg
xchg
xadd
repz
pop
test
sahf
popa
repz
xchg
out
fiaddl
mov
or
data16
dec
xchg
mov
mov
inc
cmc
and
xor
xlat
inc
outsl
rorl
mov
xchg
or
inc
push
inc
mov
aaa
repz
inc
push
std
pop
mov
adc
sbbb
mov
dec
ds
leave
divl
mov
into
fistpl
mov
sysret
pop
sub
out
xor
andl
pop
cmpsb
loope
and
and
repnz
lret
dec
adcb
gs
xor
pop
shlb
addr16
lods
ja
mov
out
flds
ret
push
xlat
and
fwait
nop
rcl
push
mov
fnstenv
lret
adcb
mov
int3
js
xchg
jb
or
inc
sub
cmp
lret
and
push
popf
ret
push
xchg
dec
xor
mov
push
fldl
cmp
push
push
xchg
push
jge
inc
test
xchg
fsubrs
cmp
push
xor
aad
aad
cli
out
sbb
add
sbb
test
pushf
lret
or
fs
sti
jnp
dec
enter
jge
in
and
cmpsb
push
add
testl
orb
out
pop
mov
fsubp
pop
pop
aaa
sbb
stc
ret
jae
repz
rcll
fisttpl
nop
sub
xor
or
iret
push
insl
aas
or
fdivrl
ret
jns
adc
or
dec
mov
cmp
popf
xchg
frstor
pop
mov
rol
push
push
sbb
loopne
movsb
gs
mov
decl
pop
out
xorb
or
into
or
in
call
xchg
nop
lods
sbb
xor
test
add
lea
add
cltd
xchg
mov
xchg
movsb
or
pop
xchg
lahf
jb
scas
pop
or
ljmp
pusha
sbb
lea
int3
jns
pop
sbb
jne
pusha
adc
movsl
xchg
addr16
or
push
dec
adc
cmp
ficoml
mov
je
imul
adc
mov
pop
stc
fwait
stos
insb
loopne
jmp
ja
mov
push
push
sbb
mov
mov
push
lds
jle
test
repnz
cs
in
mov
repnz
int
gs
mov
fsubs
call
mov
sub
and
cmpsb
inc
test
movsb
push
loop
aaa
or
push
imul
cmpsl
cmp
dec
add
daa
mov
sub
addr16
dec
jae
adc
mov
test
test
pop
add
lret
aaa
pushf
add
cmpsb
stos
mov
sub
pop
mov
adcl
jmp
sbb
dec
inc
fldl
pop
or
clc
mov
or
adc
mulb
xchg
das
xor
jnp
push
dec
mov
push
ljmp
xorl
adc
rcrl
jp
mov
xchg
outsb
repz
popf
pop
insb
fisttps
inc
clc
cmpsl
lods
lret
mov
mov
inc
in
jg
arpl
and
push
inc
push
fadds
xorb
adc
mov
iret
or
call
and
sbb
inc
mov
dec
xorl
mov
and
mov
ljmp
jp
test
cltd
test
and
inc
xchg
ss
imul
mov
nop
cmp
cwtl
push
push
pop
mov
jns
repz
mov
jno
push
bound
adc
outsb
dec
nop
cmp
push
cmp
pushf
xor
popl
ljmp
insb
mov
arpl
fstl
outsb
mov
into
repz
mov
xchg
popf
cltd
xcrypt-ofb
cmpsl
lods
jb
inc
mov
shll
push
or
push
fwait
adc
inc
js
stc
in
clc
push
mov
sub
adcb
cltd
mov
lock
mov
mov
mov
call
adc
gs
int
test
sub
push
add
shr
dec
inc
imul
icebp
arpl
mov
rclb
push
mov
mov
inc
and
dec
fwait
out
xor
mov
stos
dec
test
or
push
movsb
adc
out
clc
arpl
dec
cmp
repnz
aad
sub
fsts
enter
test
aam
ror
push
adc
scas
mov
push
and
add
push
mov
jns
subl
popa
cmpsb
shrb
popa
mov
stos
les
sbb
fcmovne
into
pop
jecxz
adc
add
bound
adc
push
mov
leave
ds
lea
mov
int3
inc
mov
jo
sbb
mov
xor
pop
push
pop
cmp
outsb
rcrl
out
xchg
xor
or
lods
xchg
jge
mov
out
sbb
mov
sbb
push
aad
sub
fs
xor
mov
and
fistl
mov
add
mov
pop
mov
nop
andb
mov
pop
test
scas
cli
push
sti
inc
clc
pop
aas
rorl
div
mov
xor
movsl
jmp
sar
mov
cmp
pmaxsw
push
mov
xchg
xor
xor
shrb
mov
cltd
in
push
pop
testb
add
leave
mov
fmull
cltd
imul
lea
mov
rcll
mov
add
xor
loopne
into
xor
daa
sub
jge
out
imul
dec
adc
or
push
cmp
and
dec
stc
sub
mov
cs
jg
fiadds
enter
adc
sub
loopne
scas
rcr
insb
or
and
mov
rclb
push
jnp
aas
mov
mov
adc
es
test
xchg
lods
movsl
out
inc
mov
imul
popa
loopne
or
enter
push
call
in
pop
push
mov
adc
test
cmp
and
es
xchg
ret
mov
xlat
imul
mov
out
scas
ja
cmp
bound
adc
jae
mov
cmp
and
push
dec
adc
mov
rcr
xor
pop
bnd
imul
mov
mov
repnz
xchg
and
or
mov
pop
mov
xchg
add
mov
lea
shrl
or
cwtl
es
es
fimull
mov
shl
loop
aad
in
loope
dec
xlat
and
add
icebp
fstps
xlat
add
fisubl
rcl
movsl
lret
aaa
add
out
sbbb
jmp
or
jno
pop
sbb
clc
or
cmpsb
mov
xchg
push
popf
pop
xor
shll
sahf
pop
pop
xchg
sbbb
add
or
mov
inc
inc
insb
sbb
dec
repz
push
push
sti
fwait
notb
sti
mov
popf
lods
jecxz
jo
jnp
jmp
lret
pop
or
cmp
jg
adc
mov
cmp
shrb
mov
lock
insl
mov
and
cmc
lea
adc
add
pop
sbb
shrb
mov
arpl
ret
lret
outsb
adc
dec
or
xchg
push
xor
loop
mov
rolb
in
or
addr16
mov
mov
jne
sarb
rorb
sub
add
outsb
decl
jg
in
int3
sti
jnp
push
ret
test
int
push
call
rcrl
or
cmpl
int
mov
xor
shlb
sarb
call
push
jmp
incb
in
mov
stc
aas
push
jmp
push
rorl
push
pop
pop
dec
dec
pop
sub
mov
jmp
pop
sahf
add
call
out
add
ret
jne
adc
outsl
mov
or
mov
or
cmp
dec
mov
ret
fxch
popa
fstp
jnp
lods
lea
or
cwtl
shlb
pop
push
test
fdiv
aam
mov
sahf
bound
push
mov
das
inc
neg
push
add
fnsave
mov
mov
or
mov
outsb
mov
fwait
inc
cmp
int3
dec
cmc
xor
fs
insb
jle
mov
inc
add
fs
and
repnz
sub
mov
jmp
jb
movsl
pop
ss
shll
mov
xchg
jmp
out
cld
jge
push
pop
popf
fcoml
inc
in
cmc
sub
std
push
push
addr16
test
pop
add
and
bound
sti
clc
int3
out
jb
jge
repz
popf
jl
int3
ja
enter
fwait
out
loop
sub
jmp
add
cmp
stc
mov
push
movb
addr16
in
jg
incb
sub
mov
jp
add
and
je
pop
hlt
shll
rcr
add
in
sub
push
pop
mov
into
sub
pop
ljmp
add
adc
test
sub
ja
sbb
fisttpll
fs
mov
test
inc
jmp
and
sub
decb
or
jg
dec
ret
pop
sbb
xorl
mov
cltd
dec
jmp
xchg
mov
and
stos
in
data16
mov
dec
cmp
sbb
and
popf
push
push
lods
insb
push
out
test
and
gs
lea
gs
pop
adc
push
dec
cmp
lret
sbb
jb
lock
cmpl
xlat
mov
mov
jo
ds
add
and
aaa
jle
xor
jmp
xchg
ret
mov
lods
imul
and
repz
jg
stos
cwtl
pusha
test
lods
in
clc
mov
xor
in
xchg
arpl
aaa
pop
sbb
sbb
das
jmp
jmp
sti
push
mov
and
nop
mov
mov
push
sub
cmpb
rclb
cs
enter
jecxz
inc
add
fcmovne
or
stc
movsl
scas
dec
jle
in
pop
scas
test
stc
ja
adc
adc
das
xorb
jb
popa
inc
pop
mov
ret
xlat
sub
push
push
in
int
aaa
mov
xchg
js
or
sbb
outsl
ret
mov
decl
mov
dec
inc
imul
mov
mov
xor
lret
jns
nop
mov
int
sub
in
lret
dec
filds
mov
mov
aad
push
push
xlat
xchg
test
enter
xor
outsb
cvtpi2ps
cli
jno
sahf
mov
adc
sub
jb
add
jb
sbbb
mov
stos
dec
inc
jo
popf
or
inc
mov
xchg
into
dec
stc
mov
mov
mov
shlb
and
pusha
enter
jle
jno
pop
loop
aam
inc
xor
sub
jg
mov
addl
xor
or
push
pop
outsb
inc
mov
push
or
inc
pop
roll
rcrb
push
cmp
cmp
and
push
inc
inc
jp
fstl
cmp
add
cs
out
xor
cs
loop
rcrb
sbb
xor
mov
xchg
in
fidivrl
fstps
add
imul
lahf
cmp
fstl
cmpsl
lock
ss
rcll
mov
jle
ss
inc
in
daa
in
jns
shl
mov
sbb
pop
movsb
movsb
loopne
in
add
mov
add
mov
dec
fists
cltd
mov
add
fildl
into
mov
outsl
out
hlt
in
push
ja
mov
data16
bound
mov
sbb
dec
jp
call
mov
push
jmp
jbe
popa
scas
mov
arpl
add
jle
mov
dec
or
jnp
pushf
test
aam
jae
ds
mov
or
cmc
xor
notb
data16
add
rclb
sbb
jae
popf
sar
seto
adc
js
rclb
pop
inc
dec
mov
sahf
fsubrl
xor
lret
inc
jl
jmp
inc
dec
mov
add
test
sbb
cmpsb
adc
mov
loope
ss
les
inc
push
cmp
movsl
inc
xchg
outsl
rcrl
pushf
or
xor
xor
adc
push
sbb
adc
fsubs
roll
or
repz
sub
pop
xor
cmpsb
pop
andb
fwait
mov
enter
xchg
pop
jge
xchg
pop
xlat
je
outsb
cli
pop
push
aad
je
repz
clc
sub
imul
fld
out
mov
mov
js
add
inc
add
cmp
and
add
negl
adc
mov
sub
jmp
jmp
aad
mov
dec
mov
js
mov
enter
push
dec
or
int3
mov
fidivs
jle
dec
dec
scas
or
into
mov
mov
add
shll
push
stc
and
mov
loop
je
jl
insb
push
lock
es
shlb
testl
movsl
adc
mov
mov
mov
sarb
test
fnstenv
popa
jle
in
cmpsb
or
testb
das
push
push
xor
pushf
jge
or
xor
je
jns
jnp
dec
fdivl
addr16
mov
push
pop
xlat
adcl
sub
mov
loopne
data16
lds
jne
test
insb
enter
inc
cmp
ss
in
jle
or
cld
mov
jle
and
mov
or
mov
loope
bound
dec
jns
loope
sub
push
ja
subl
in
int3
pushf
and
push
xor
ret
cltd
dec
pop
pop
push
iret
aam
in
lret
dec
fldcw
push
push
xchg
arpl
push
daa
push
jge
mov
push
repz
gs
hlt
dec
lcall
jge
pop
mov
lods
and
int3
jbe
popa
insl
pop
add
or
dec
add
xchg
mov
mov
jo
stc
jns
call
mov
cmpsb
shrl
scas
cmp
jmp
pop
jb
dec
fadd
pop
xlat
out
inc
es
pop
or
sub
sarl
xchg
dec
cmp
fldl
mov
dec
xchg
jg
popa
fnstsw
fnsave
jbe
jecxz
mov
orl
fs
ret
fxch
cltd
add
rol
lods
stc
cld
pop
mov
stos
stos
testb
xchg
push
fs
mov
and
sti
mov
inc
nop
mov
into
cmp
jecxz
jg
mov
enter
bound
xchg
lret
pusha
nop
filds
cmpsb
les
pushf
mov
stos
js
decl
jns
outsl
push
xchg
lock
add
nop
adc
repnz
jmp
scas
xlat
mov
push
js
ret
mov
stos
cmp
pop
test
fstps
in
adc
or
in
mov
dec
cmpsb
cli
cmp
mov
ljmp
callw
mov
pop
out
add
xchg
cmpsl
jmp
aas
sbb
scas
jae
pop
lea
insl
adc
sub
dec
or
pop
mov
enter
adc
cmpl
cld
push
mov
mov
shll
outsb
aam
loop
xor
push
out
adc
loop
mov
bound
inc
dec
dec
jo
add
dec
cld
inc
and
sbb
pop
loopne
fstps
cmpsl
call
stc
jo
lods
adc
add
jg
sub
jne
adc
inc
rolb
jge
mov
cmpsl
movsl
fiadds
les
or
pop
jp
inc
inc
std
xor
stos
stc
stos
pop
xchg
dec
pop
push
stc
and
push
into
call
ret
imul
add
sub
mov
fistl
scas
sti
push
and
das
fsubrl
mov
negb
pop
test
dec
idivb
push
dec
movsl
lods
lods
inc
jge
adc
movsb
xor
sti
cld
sbb
frstor
sbb
loope
je
dec
aad
mov
and
mov
ja
push
fmul
data16
bound
lds
inc
inc
out
and
or
ds
xchg
je
sbbl
mov
orb
pop
jmp
out
push
mov
pop
mov
pop
test
enter
add
loopne
add
or
flds
xchg
rcrb
insl
xor
or
fisttps
jle
or
loope
cmp
pop
pop
cmp
jecxz
add
jmp
xlat
mov
jnp
mulb
pop
pop
cld
cmpsb
fwait
xchg
outsb
mov
lahf
ss
cmp
addr16
aam
pop
xchg
mov
pop
dec
jno
xorb
mov
jmp
jecxz
repz
jae
fs
je
sti
movsb
out
sub
shrb
dec
outsl
test
cmp
movsl
mov
inc
xlat
mov
aam
cmp
dec
push
pop
push
or
cmp
sbb
mulb
push
loop
les
sbb
dec
and
xchg
cltd
sbb
rep
lret
lods
lods
sbb
dec
jo
sbb
xchg
inc
sub
push
mov
gs
loope
hlt
movsb
in
mov
or
add
push
fnsave
jb
ss
and
ror
dec
ljmp
hlt
cmp
pop
push
in
push
iret
inc
add
movsb
xor
push
jns
enter
xor
add
jp
sub
jno
sub
push
push
pop
jg
adcl
xlat
mov
shlb
lahf
mov
xor
xor
xlat
fucomp
xor
and
lods
jecxz
loope
jge
hlt
add
imul
enter
rorb
je
fcoms
jmp
fists
ljmp
jnp
pusha
lret
icebp
or
cmp
cmp
adc
inc
ss
xor
je
lret
jae
lods
in
stos
sbb
imul
lcall
sar
sbb
adc
jecxz
push
push
mov
lock
icebp
in
and
shlb
sbb
jge
ljmp
xor
fs
int3
xorl
dec
neg
cmp
dec
inc
pop
push
mov
xchg
mov
pusha
scas
pop
es
jbe
inc
and
insl
test
popf
pusha
aam
sub
sub
rcrl
sbb
std
repz
sbb
push
push
fs
das
hlt
xchg
push
mov
add
mov
mov
nop
xchg
ljmp
fcoml
push
enter
ret
xchg
or
sar
mov
loope
in
sbb
add
aaa
push
jp
xor
inc
inc
mov
cli
cs
mov
sub
jne
clc
mov
in
xor
xchg
mov
mov
push
out
cli
and
dec
divb
out
outsb
jg
mov
cwtl
mov
arpl
insb
sbb
aaa
dec
pop
inc
inc
jb
mov
adc
inc
add
jmp
cli
lods
push
pop
cmp
adc
sti
stc
ss
push
ret
xor
mov
in
dec
int
mov
jl
mov
out
mov
aam
add
jne
dec
int
sahf
scas
mov
jl
stc
aad
cld
ljmp
cmp
adc
nop
insl
dec
std
sbb
push
test
push
insl
cmp
fbstp
xchg
push
insl
cmp
jmp
test
repnz
addr16
fisttpll
js
leave
fwait
rcr
mov
aad
xor
repnz
scas
scas
push
sahf
iret
nop
adc
add
push
fwait
add
mov
bound
test
mov
add
jae
xor
cli
or
sbb
pushf
std
push
pop
dec
std
push
ljmp
dec
fistpll
cld
mov
hlt
das
sub
test
push
or
scas
sub
or
outsb
mov
mov
cltd
mov
mov
rcll
pop
test
xor
arpl
cwtl
ljmp
xchg
int3
adcb
jl
iret
and
xchg
jnp
xorl
push
std
jno
sub
test
adc
add
aad
sti
cmp
ret
pop
fwait
leave
push
mov
xchg
sub
das
xor
sti
call
movsl
push
push
fmuls
outsl
jmp
test
pusha
leave
dec
adc
and
pop
push
fmul
dec
test
fsubl
mov
add
xor
sub
in
and
add
jle
cmp
in
dec
mov
lods
nop
dec
cmp
pop
adc
or
jl
ljmp
or
mov
shrl
repz
mov
in
inc
cmp
aaa
fwait
inc
sbb
test
xchg
scas
push
imul
test
jo
push
sbb
sbb
inc
std
out
bound
fmull
ljmp
bound
cmp
mov
repz
in
dec
sbb
lcall
int
inc
out
push
out
pushf
cmp
data16
push
inc
mov
mov
int3
mov
jae
mov
mov
loopne
scas
and
adc
or
sbb
ret
arpl
and
in
inc
popf
add
roll
lds
dec
push
nop
and
negb
stos
push
mov
or
push
jg
stc
xchg
imulb
popf
mov
cmp
mov
lods
dec
out
je
stos
cmp
insb
fdivs
sbb
loop
scas
nop
pop
push
dec
adc
sbb
dec
sbb
mov
inc
dec
scas
jnp
in
subl
mov
cltd
xchg
shll
adc
and
loope
xor
cmp
test
push
xchg
adc
fisttpl
pop
add
mov
fnsave
sar
push
adc
dec
fdiv
mov
push
cli
cmp
hlt
lahf
or
xorl
es
mov
pop
lret
jbe
out
test
xorl
cmp
neg
xlat
mov
xchg
inc
jp
insl
out
push
orl
stos
mov
nop
aas
gs
cmp
ss
lock
mov
xchg
nop
xchg
inc
or
lret
mov
lret
add
scas
aam
lahf
es
cmp
inc
loopne
into
adc
and
add
xchg
ss
inc
gs
sub
push
nop
jbe
push
loope,pt
mov
pop
scas
cmc
nop
adc
jno
pop
mov
adc
push
adc
lcall
lahf
int
popa
inc
mov
push
push
cmp
rcll
cltd
jns
js
push
fcoml
lock
inc
mov
scas
add
scas
popf
xor
xchg
inc
xor
mov
jnp
xchg
subb
notl
out
or
hlt
sbb
dec
addr16
jo
test
cmp
dec
pop
filds
dec
adc
mov
out
out
aam
dec
mov
in
cld
and
adcl
push
scas
je
cmp
clc
mov
cs
mov
adc
ljmp
stc
mov
push
jns
cmpsb
out
and
mov
sub
sarl
or
les
repnz
enter
in
xchg
push
mov
mov
subl
push
popa
insb
ljmp
cmp
mov
push
clc
int3
aad
fxam
lcall
push
dec
decl
mov
enter
mov
shlb
sbb
addr16
rclb
xlat
lds
cmpsb
scas
or
subl
icebp
lret
outsb
xchg
shlb
push
popf
sbb
mov
push
mov
je
pop
mov
mov
sbb
sbb
and
xlat
lahf
shrl
pop
fsubl
push
ret
rep
sti
and
movsl
pop
shlb
push
ret
fcomps
mov
cmp
mov
xor
outsb
mov
clc
scas
mov
sub
mov
in
lret
dec
jmp
pusha
and
jmp
mov
xchg
sub
hlt
aad
xorl
in
adc
xchg
aam
dec
adc
mov
lahf
cmp
sub
jmp
into
js
adc
out
dec
add
jbe
and
fiaddl
test
jecxz
cmp
push
add
icebp
and
sbb
mull
aad
test
les
push
jae
or
cld
cld
and
data16
std
popf
cmp
push
add
pop
xchg
xlat
daa
add
mov
aad
add
sbb
lods
or
iret
inc
movsb
jae
inc
mov
push
aad
pop
jo
test
xor
push
cmp
data16
inc
jmp
and
push
cmp
int3
ret
jo
movsb
dec
out
jle
in
ss
and
xor
mov
mov
mov
popa
aas
mov
dec
aas
pop
xlat
ljmp
ss
or
cli
dec
add
test
adc
push
mov
nop
cmc
fnstcw
mov
mov
mov
jecxz
inc
in
dec
lds
inc
jge
cmpl
xorb
mov
cmp
fdiv
mov
es
dec
ret
scas
push
je
or
in
fwait
pop
loope
push
aaa
push
adc
cmp
xchg
pop
jle
mov
and
sub
pop
jne
popa
push
mov
cwtl
and
int3
adc
in
popa
and
test
mov
dec
mov
and
stc
flds
dec
scas
cltd
xchg
pop
push
jae
inc
and
out
call
mov
pop
aaa
jge
ds
xlat
pop
cmp
mov
cwtl
into
cmpsl
xchg
cs
into
test
xlat
out
shll
xchg
dec
adc
pusha
or
aaa
fists
inc
icebp
mov
cmp
cmp
push
push
xchg
arpl
mov
mov
jl
popf
mov
jne
xor
ja
mov
add
fdiv
and
repz
mov
aaa
pop
sub
jp
xor
addb
xchg
pop
cmpl
sub
lods
jo
xchg
cs
mov
mov
sub
outsb
cmp
pop
sub
add
pop
push
inc
jne
inc
and
sbb
mov
daa
out
dec
push
cmp
es
pushf
clc
loope
mov
cwtl
stos
mov
lds
ljmp
push
inc
push
popf
or
in
ja
lods
lods
mov
cmpsl
or
notrack
push
stc
cmp
cmpb
dec
sbb
or
rolb
dec
subb
in
in
and
jle
jp
cmpsb
lods
mov
mov
test
push
sub
fwait
aam
dec
jl
xor
rcll
movsb
loopne
ret
fbld
push
sbb
xor
ret
push
pop
mov
decl
insl
mov
dec
pop
add
push
xor
xchg
pusha
ss
cmp
enter
inc
insl
adc
push
sub
fists
or
outsl
inc
enter
fsubs
pop
sbb
mov
pushf
jae
loope
xchg
add
push
cltd
addb
xchg
daa
sbb
insl
pop
notb
xchg
scas
sub
xchg
add
xor
sbb
and
iret
jp
xchg
jp
aas
out
mov
pusha
sti
pop
cmp
lcall
sahf
mov
pop
xchg
adc
ljmp
and
cmpsl
adc
fimuls
lds
stos
xlat
mov
dec
xor
aas
testl
lock
pop
xchg
movsl
lock
mov
xor
pop
jmp
cld
dec
push
andl
and
pop
outsb
inc
stos
jp
in
test
sarl
xchg
xlat
fs
ficoms
fstl
xchg
and
lds
pop
mov
je
divl
inc
push
icebp
add
out
pop
inc
push
xchg
sub
sub
pop
decl
enter
adc
jge
pushf
js
lods
adc
lret
jnp
cli
ja
insl
jne
xchg
sub
mov
out
and
pop
in
jo
pop
int3
xor
jae
cmp
insl
gs
gs
add
popf
daa
jmp
ret
and
sahf
mov
sarl
cmp
cmp
sbb
ljmp
lea
lds
or
mov
inc
push
cltd
fwait
cmpsb
faddp
ret
add
adc
repnz
popa
lock
adc
xchg
cs
pusha
lea
shll
xor
pop
cld
jmp
mov
popf
shll
xchg
and
fwait
mov
mov
jnp
in
in
xor
and
in
and
mov
mov
add
movsb
jmp
ja
mov
ficoms
gs
and
subl
notl
shll
jl
fstp
shr
jmp
or
fwait
imul
fldl
clc
or
lods
out
adc
jb
mov
push
jle
ljmp
xor
mov
and
or
xchg
or
xor
and
mov
mov
xchg
std
cli
int
xor
inc
dec
daa
lahf
mov
int3
in
xor
jno
loope
mov
pushf
mov
cmpsb
add
pop
adc
mov
or
shrb
rorb
xor
sub
sti
xchg
lock
mov
xlat
and
adc
stos
pusha
xor
insl
in
imul
sbb
cmp
inc
mov
cmp
cmp
inc
add
fldl
sti
lahf
adcb
cmpsl
mov
lods
sarl
movsb
movsl
jg
fadds
cld
bound
outsb
fsub
fcoml
sub
sahf
dec
out
sahf
js
je
dec
add
mov
dec
fiadds
adc
sub
adc
pusha
inc
popf
daa
sub
ja
and
or
inc
and
aaa
aas
stc
cmp
push
xor
rorl
aam
sarl
in
mov
push
out
addr16
push
cmp
jo
sub
inc
mov
sub
fcmovne
in
incl
mov
pop
cmp
add
lahf
cmpsb
xchg
cmp
push
add
shll
inc
nop
xor
push
inc
imul
call
aaa
push
and
cmpsb
xlat
ja
bound
push
andb
pop
out
ret
jmp
das
cwtl
popa
push
mov
inc
jno
sub
test
mov
inc
sti
inc
jbe
pop
mov
sbbl
push
fwait
loope
lock
jae
cltd
cmc
xchg
xlat
out
push
cmp
jmp
nop
je
sub
fadd
mov
ficomps
mov
xor
sahf
pop
xchg
mov
out
movsb
loopne
ss
in
movsb
push
outsb
add
fists
mov
out
idivb
mov
pop
jno
sbb
mov
xchg
fwait
xor
fdivrs
dec
ja
addr16
pop
sub
hlt
dec
rcll
aam
or
rolb
push
leave
scas
rcll
push
cwtl
pop
sbb
mov
daa
pop
mov
dec
pop
cmpsb
xchg
insl
push
aad
rcll
mov
adc
fstl
into
hlt
and
push
or
dec
fistpl
mov
or
xchg
dec
cmc
dec
lahf
jl
insb
dec
and
movsb
shlb
mov
or
pop
lods
jmp
push
xor
jle
and
inc
fbstp
inc
sar
and
pop
fstp
mov
dec
sbb
add
mov
pop
fdivl
aad
insl
mov
js
or
pop
and
clc
imul
push
mov
outsl
and
add
je
add
jb
insb
cli
mov
pushf
les
in
ss
pop
sbbl
mov
loopne
xor
push
push
jne
xor
or
cs
cmp
sbb
inc
pop
mov
lods
cmp
inc
jne
dec
sti
pop
inc
sub
aam
into
std
adc
stos
lods
mov
dec
dec
xchg
cmp
insb
lds
cmc
lods
jecxz
filds
sbb
inc
data16
jp
xchg
shl
cmp
popf
lods
int
fcmovb
push
fisttpll
cmp
ss
arpl
mov
inc
jg
sahf
sti
mov
sub
inc
cltd
cltd
repnz
mov
adc
sub
lods
add
mov
sub
cwtl
sbb
stc
movsl
sbb
stos
adc
int
repnz
fidivs
leave
inc
pop
psubb
push
mov
push
lock
fildll
dec
out
mov
push
int3
rclb
pop
pop
cmp
push
rcl
add
aas
push
sbb
sub
and
cmpsl
scas
dec
xchg
jle
inc
repz
bound
cmp
ljmp
mov
xor
lods
pop
rorb
testl
push
sub
pop
lock
pushf
push
pushf
int3
inc
shrb
pop
jle
jns
ret
pop
loop
ret
lds
sbb
inc
iret
jecxz
xor
mov
out
repnz
insl
leave
les
out
std
int3
lahf
outsl
jae
pop
xorb
cmpl
fistpl
ret
fcomip
dec
repz
or
test
repz
sbb
xor
mov
jnp
scas
jbe
lock
cmpsl
mov
addl
mov
jb
push
pushf
fsubrl
outsb
or
and
adc
sbb
cmc
cmc
in
cltd
int3
pop
ss
incl
mov
or
jne
xchg
rcrl
in
dec
dec
jp
xlat
das
aad
inc
hlt
cmp
cltd
bound
outsl
ss
dec
and
outsl
xor
mov
sbb
push
enter
add
cli
mov
mov
je
lea
mov
mov
push
cli
leave
mov
push
call
ror
mulps
mov
pusha
jmp
xor
xchg
add
add
dec
mov
xchg
imul
sub
jecxz
xor
fidivs
mov
sub
inc
sarb
jp
jno
fisubrs
scas
stos
popf
and
mov
jb
and
shll
cld
repz
daa
sub
arpl
push
fldl
movsl
pop
pop
jecxz
push
mov
push
inc
pusha
sub
sub
adc
pop
or
pop
loopne
nop
push
pop
ficomps
cmp
mov
rolb
jno
ja
std
inc
dec
gs
jecxz
sbb
imul
adc
jnp
int3
push
dec
or
push
ja
nop
cmp
decb
clc
sub
xor
and
pop
adc
loope
pushf
jmp
mov
pop
repnz
push
loopne
adc
jae
lret
nop
out
fwait
sbb
rorb
fildll
or
cmp
mov
in
push
adc
or
aad
or
cmp
std
stc
or
sbb
pop
fnstsw
mov
cmpsb
mov
or
repz
sub
popa
pop
repz
add
lock
bound
scas
sub
stc
sub
mov
adc
fnstsw
xor
gs
mov
test
jns
cmc
shll
cltd
pop
add
jg
jl
fnsave
mov
and
push
leave
cmp
imul
add
popa
in
out
adc
inc
pop
sub
addr16
mov
ret
mov
cmp
push
mov
push
or
mov
out
and
inc
stc
stos
mov
popf
xchg
xchg
pop
bound
ret
js
loope
push
sbb
cwtl
jbe
out
jle
sub
mov
popa
jns
xor
loop
adc
negb
loopne
add
andb
cld
or
cmp
dec
and
gs
mov
adc
in
dec
push
dec
sti
jle
test
cmp
icebp
and
xchg
rorb
ljmp
adc
xchg
sub
jno
subl
mov
jbe
call
fisttpll
xor
icebp
jmp
repz
inc
mov
push
stc
jnp
xchg
imul
pop
shrb
shrl
ficoms
inc
not
stc
shlb
test
dec
xchg
xor
hlt
stc
sub
rcrl
jge
dec
pop
mov
ds
or
cltd
push
jb
xchg
dec
pop
xor
aas
cmpsb
xchg
or
and
fdivs
je
xchg
xor
aad
ficoml
lods
outsl
sbb
js
push
xor
sti
negb
and
aad
and
jge
sub
fbld
lcall
mov
ljmp
arpl
movnti
rolb
push
xchg
xlat
dec
sub
or
mov
fcmove
adc
dec
and
shrl
inc
xlat
scas
jg
mov
and
cwtl
mov
les
into
push
jl
xchg
sub
inc
push
ficompl
stc
and
scas
subb
loope
outsb
scas
shr
outsb
mov
aam
shlb
sub
dec
es
xchg
adc
es
or
jno
xchg
add
jo
aam
inc
inc
push
adc
loope
pop
jecxz
out
adc
cs
fsubs
cmpsb
jbe
jmp
das
push
pop
dec
enter
pop
clc
push
pop
int3
outsl
fistpl
rolb
shlb
add
xchg
dec
cltd
call
lock
push
sbb
adc
lret
sub
repnz
fcmovnbe
pusha
cmp
mov
pop
or
fwait
jmp
jno
sahf
add
add
fsubrp
push
mov
xor
flds
fwait
cmp
out
sbb
sub
popf
cmp
mov
rcrl
sbb
ds
cwtl
cld
insl
clc
arpl
in
loope
mov
adc
imul
sub
jmp
das
or
rol
iret
and
mov
adcl
mul
mov
clc
pop
pop
sub
sti
loope
add
aaa
dec
out
dec
dec
subb
sub
test
cmp
out
cs
ds
int3
dec
orl
icebp
xor
jno
xor
and
jp
sub
shl
push
out
mov
sub
lret
ss
jnp
rcrb
sub
push
and
mov
clc
mov
out
pushf
lods
pop
shrl
jl
ret
ret
cmc
aaa
sbb
xchg
add
sbb
fsts
test
mov
cmc
pop
and
lods
popa
push
push
insl
imul
jmp
inc
cli
jle
hlt
sbb
mov
add
mov
pop
std
adc
pop
movsl
stos
push
lret
jnp
test
sbb
dec
icebp
in
sub
sysexit
pop
or
inc
mov
mov
xor
xchg
xchg
imul
xor
and
jp
xlat
test
imul
xlat
xor
dec
in
push
sbb
out
addr16
mov
pop
outsl
stos
xlat
addr16
inc
push
cwtl
movsb
or
lcall
xor
sub
loopne
xchg
aad
shlb
or
jns
jno
mov
ds
or
sub
iret
or
adc
insl
outsb
xchg
xor
mov
or
or
fildl
ja
insl
mov
cmp
mov
dec
inc
mov
ret
cmpsl
cmpl
sub
sub
enter
mov
pusha
mov
insb
jns
fidivrl
aas
pusha
sbb
add
sbb
push
divb
push
test
push
cld
aas
or
ljmp
mov
add
sbb
es
cld
popa
testb
or
add
pop
lcall
loope
add
cwtl
sub
sbb
sbb
pop
aad
add
or
imul
cmp
push
pop
jno
dec
cmp
vunpckhps
scas
xor
testb
cmp
fdivl
cmpsl
das
sub
xchg
cmpsl
jnp
or
loope
mov
sbb
ds
out
cmp
in
sub
sbb
lret
repz
or
pop
sub
push
adc
cmp
addr16
cmp
xor
adcl
sub
fs
cmp
pop
fcmovb
push
jne
mov
aas
leave
je
xchg
jmp
jb,pn
fwait
dec
mov
adcl
xchg
xchg
ret
nop
dec
es
dec
mov
xchg
add
jno
fbstp
fdivrl
dec
mov
inc
shrl
icebp
dec
cld
sahf
out
lahf
mov
inc
inc
mov
xor
xlat
jmp
int3
push
es
mov
flds
fadds
ljmp
shlb
xor
xlat
fwait
jp
orl
mov
std
pusha
push
scas
movsl
iret
jecxz
insb
out
pop
mov
adc
pop
pop
cwtl
dec
adc
xchg
ret
push
lods
mov
mull
lcall
pop
inc
lret
xor
or
mov
and
pop
popa
xchg
mov
stos
sub
fiaddl
scas
movsb
mov
cs
xchg
push
mov
popf
daa
stos
and
andl
sub
cmpsl
xchg
clc
mov
add
mov
movsb
or
cmpsb
mov
popf
sub
xchg
jns
pop
adc
ljmp
fs
mov
jne
dec
rclb
push
insb
es
test
mov
sub
imul
lods
cld
fistpl
add
das
dec
adcb
imul
rcrb
stos
dec
scas
gs
inc
push
mov
packssdw
cmpsl
sbb
ret
imul
fisttps
cs
insl
inc
into
sbb
push
test
mov
sbb
vmptrld
imull
data16
push
mov
sub
nop
in
dec
jmp
ss
cmp
mov
ja
jo
push
jbe
jb
dec
adc
xor
leave
mov
sub
and
cmp
movsb
push
dec
not
and
sub
sbb
xlat
iretw
movsb
ds
cwtl
repz
leave
or
insb
add
ret
cmc
add
xchg
mov
adcb
add
dec
adc
lods
cmp
adc
add
cmpsl
into
das
xchg
pop
dec
xchg
push
repz
fstpl
adc
pop
add
addr16
xchg
jl
mov
frstor
sbbb
lock
pushf
xor
and
jle
cmc
sub
sarb
cmp
dec
or
lcall
jmp
push
lea
jae
xor
inc
dec
sub
cmc
lahf
rorb
icebp
shll
cli
xchg
mov
mov
popa
cmp
out
in
sub
push
nop
insb
in
add
dec
add
inc
cmpsb
xchg
int3
push
sub
les
cmp
cmp
xchg
mov
jnp
in
ds
adc
and
enter
jl
aad
add
jle
pop
lds
outsb
sub
aad
cmpb
fisttpll
popa
fsubs
jecxz
stos
pop
cli
sbb
push
dec
cmp
imul
aas
push
gs
aas
pop
cmpsl
subb
jae
es
inc
mov
ret
test
aam
push
push
in
push
sub
sub
mov
je
mov
xchg
jmp
inc
adc
mov
movsb
pop
aas
add
mov
pushf
cs
jge
jo
pop
inc
sahf
or
pop
dec
mov
and
loope
adc
repnz
lods
add
jmp
clc
orl
ljmp
call
in
out
add
push
shlb
mov
idivl
sbb
xchg
in
dec
push
push
or
adc
fsubs
fwait
mov
clc
mov
mov
pop
popa
mov
xchg
and
lcall
test
popf
inc
sub
mov
push
imul
enter
mov
mov
jmp
cwtl
cmp
jns
xchg
jnp
jecxz
scas
push
push
mov
jmp
pop
and
xchg
mov
add
out
jo
rcll
lret
std
nop
repnz
lock
push
rcl
pop
fdivl
rolb
out
push
fs
xchg
test
repz
jp
push
rcll
inc
pop
xchg
push
je
lock
jns
cltd
into
and
or
into
es
in
adc
xorb
or
add
inc
hlt
lods
sub
pop
add
push
cmp
and
rolb
scas
jns
adc
mov
sub
and
push
mov
sub
mov
or
mov
lds
push
xor
arpl
mov
add
jno
in
fldenv
std
das
sbb
mov
cmc
jne
cmp
test
ja
push
fwait
lret
xchg
sub
xor
sub
sub
fistl
aam
enter
inc
lret
imul
lea
call
inc
out
push
adc
cmp
stos
loope
aad
mov
aad
fsts
cld
test
sahf
pusha
fs
push
or
js
adc
jnp
inc
insb
mov
imul
shll
stos
hlt
clc
xchg
xlat
lahf
pop
inc
adc
pop
mov
pushf
jle
jno
out
daa
mov
adc
mov
notl
and
in
jo
jmp
cmp
jp
pop
mov
fildl
pusha
lock
jp
test
stos
push
dec
pop
dec
lea
inc
xchg
aaa
mov
insb
dec
insb
mov
nop
ss
popl
stos
push
lea
pop
cwtl
adc
insl
dec
ljmp
lods
push
mov
cwtl
xchg
add
dec
mov
adcl
add
dec
pop
and
repz
aaa
mov
cmp
cwtl
fisttpll
dec
or
nop
inc
les
and
in
roll
push
xor
mov
movsl
mov
stos
repnz
pop
mov
and
lret
cmp
pop
mov
loope
push
cmpsl
sub
in
jge
insb
movsl
dec
leave
dec
pop
lds
hlt
fcomps
xchg
iret
sub
mov
out
adc
nop
dec
fcmove
popf
xchg
out
inc
into
jle
push
cld
gs
call
fidivrl
cltd
loop
mov
movsb
int
jg
bound
std
and
cmp
out
mov
sbb
popf
pop
mov
or
shlb
push
jb
sub
dec
xor
daa
jno
lds
jp
cmc
aaa
pusha
mov
fdivrl
dec
rcr
sub
adc
out
mov
jl
test
ret
adc
xchg
pop
sarl
movsb
stc
mov
rcl
add
jmp
push
enter
repz
jo
test
sbb
jge
cltd
rolb
clc
sbb
icebp
push
sbb
sbb
jnp
inc
mov
adc
test
mov
or
iret
out
dec
js
cld
test
and
inc
shr
jae
iret
daa
fadds
fwait
sbb
or
int3
xor
jmp
xchg
hlt
and
mov
std
mov
xchg
pop
and
out
cmp
sub
xlat
xchg
inc
push
xchg
scas
pop
sbb
mov
mov
cli
mov
jno
aaa
push
sahf
adc
dec
add
add
jp
inc
test
push
sbb
pop
stos
les
add
jno
aaa
mov
push
lods
mov
incb
aas
sbb
cltd
loopne
insb
sub
xchg
ja
add
adc
test
data16
pushfw
pop
outsb
lock
scas
pop
repnz
mov
movsb
inc
cli
cmp
pop
addr16
sub
dec
pop
ljmp
and
add
cli
imul
dec
addl
sub
pop
in
arpl
sbb
push
je
mov
pop
in
jb
stos
and
or
gs
fistpl
push
shrb
jno
xor
jecxz
lock
sbb
les
push
add
loopne
js
ret
ja
xor
add
mov
out
and
repz
mov
mov
inc
jl
jg
pushf
pop
mov
call
outsb
xor
addr16
push
push
pop
pop
adc
xchg
jmp
inc
loopne
dec
xlat
popa
lahf
insb
std
jb
aad
pop
addr16
xchg
shrb
add
cmp
loope
out
test
fistps
roll
pop
or
outsb
dec
cmp
mov
push
lods
sbb
ret
test
inc
mov
inc
fistpl
xchg
xchg
mov
and
jb
stos
lods
push
scas
mov
fisttpl
sahf
mov
mov
inc
stos
lcall
stc
js
push
lods
popl
test
loope
out
mov
sar
lret
mov
das
inc
and
bound
or
push
sbb
adc
push
mov
pop
or
adc
std
adc
xchg
stc
pop
xchg
call
je
mov
fwait
mov
mov
mov
mov
sbb
push
cmp
fisubs
cmp
mov
cmp
cmp
mov
add
dec
sub
in
fdivs
repnz
push
fcomi
mov
or
jb
jle
push
pop
adc
repnz
sarl
out
es
fimuls
stos
or
mov
fists
pop
or
les
shll
and
cltd
add
push
and
add
mov
mov
jmp
push
test
xor
mov
sub
mov
sahf
aad
add
mov
lret
repnz
movsl
idiv
push
push
sub
aaa
int
push
cmp
push
clc
cmpl
mov
push
adc
mov
negb
insl
adc
jg
or
rorb
pop
sahf
push
cmp
sbb
dec
mov
cmc
aad
and
or
inc
lea
in
push
jnp
sub
sub
icebp
sub
cmpsl
loope
xor
mov
sbb
mov
arpl
fisubrs
mov
test
push
sarb
aad
mov
jmp
in
mov
jmp
das
xchg
ja
mov
pop
arpl
and
cs
xchg
daa
int3
cli
faddl
pop
inc
aaa
push
lcall
inc
std
push
dec
dec
xor
pop
in
mov
pop
aaa
xor
cmp
movb
mov
dec
mov
sahf
stc
cs
jne
mov
mov
mov
dec
shlb
fs
popf
or
cltd
jno
pop
xchg
adc
mov
mov
mov
popa
jl
shlb
or
arpl
adc
aaa
pop
jmp
fists
dec
mov
imul
inc
arpl
mov
jnp
cmp
cs
add
inc
pushl
mov
fidivs
pushw
xchg
daa
mov
xchg
rorl
addr16
cmp
shlb
add
xchg
mov
out
xor
add
mov
add
out
cmovne
push
lret
mul
daa
jmp
test
cmp
mov
lock
cmpsl
push
pushf
add
inc
jle
stc
dec
sahf
stos
aas
popa
insl
cmp
cmova
insl
or
jmp
pop
mov
adc
adc
aas
fadds
xchg
inc
fdivrs
mov
inc
pop
pop
add
xchg
in
xor
scas
xor
dec
inc
fdivrs
cld
popf
rcrb
adc
sar
notl
bound
notl
aas
jle
inc
xchg
mov
iret
rorb
mov
sbb
and
in
mov
push
idivb
xchg
lcall
dec
push
xchg
sub
push
enter
push
stos
daa
xor
lretw
movsb
sub
inc
cmp
jne
mov
std
dec
xchg
shrl
jo
pop
pop
repnz
stos
jne
lea
push
xchg
call
xchg
popa
and
and
movsb
add
jge
lods
ffreep
or
fs
push
enter
cmp
outsl
pop
hlt
subl
dec
mov
sahf
inc
loop
das
push
lahf
stc
icebp
jno
mov
jg
clc
cmp
mov
mov
or
fnstenv
push
xchg
xor
add
sbb
xchg
sub
inc
repnz
cmp
mov
call
dec
scas
pop
mov
jae
enter
hlt
divb
lahf
inc
outsl
nop
push
fdivrl
jge
jmp
sbb
outsl
pushf
sarb
push
lock
jmp
pop
cwtl
dec
dec
lods
adc
or
fdivrs
jno
stos
mov
pop
mov
pop
pop
push
push
fcomi
stc
mov
cwtl
fnsave
adc
daa
lcall
jne
shll
add
ret
pop
ja
pushf
outsb
into
fcomi
mov
mov
mov
inc
pop
je
fucomip
cwtl
adc
fmull
lods
das
mov
push
inc
push
ret
xchg
jbe
pop
lock
shrl
frstor
lods
cs
lea
mov
or
pop
xchg
dec
jae
mov
cmpsl
sbb
imul
adc
dec
mov
outsl
scas
in
jmp
jp
xor
test
aad
into
dec
iret
xchg
xor
bndstx
push
mov
mov
fsubrl
jbe
imul
in
shl
movsb
xchg
scas
mov
sbb
outsl
pop
xlat
test
mov
es
add
aaa
xor
popa
inc
cwtl
dec
cmp
dec
divb
jge
roll
loopne
cmpsl
fcompl
data16
xchg
imul
sarb
push
out
push
xchg
aad
sub
dec
fistl
cli
fcoml
pushf
push
dec
sub
imul
stos
fs
lahf
pusha
lds
jle
xchg
sub
bound
andb
adc
dec
inc
push
mov
jns
jle
xchg
sahf
aam
ja
mov
into
xchg
push
xchg
movsb
lods
mov
pop
icebp
jmp
jecxz
cmp
xchg
jnp
rcpps
or
or
cmp
shlb
divl
imul
and
test
lret
mov
test
mov
fcomi
sbb
jne,pt
cwtl
sbb
lcall
or
fsubrs
push
cmp
sub
roll
std
cmp
int3
out
loopne
mov
jae
pop
or
mov
pop
mov
ds
stos
sbb
jno
lret
and
push
js
clc
rolb
rclb
sti
adc
push
pop
lcall
cmp
fidivrl
loope
xor
and
or
lret
inc
lea
loopne
aad
push
shll
loop
stos
or
pop
inc
xchg
mov
cmp
mov
into
loope
and
clc
fwait
jb
jo
jbe
fsubrs
pushf
pop
cmp
jl
or
ret
fimuls
imul
aaa
and
leave
fisttps
cmp
sahf
test
cmp
and
add
test
adc
add
adc
sub
lods
mov
lods
or
pushf
lahf
dec
lods
test
imull
ja
mov
xchg
and
repnz
dec
lret
dec
jae
or
movsb
rcrb
lret
sub
or
outsb
add
jno
movsb
and
xchg
subl
test
rclb
adc
cmp
dec
jle
insl
shlb
mov
xchg
add
and
ficomps
pop
or
gs
sub
push
lahf
dec
lods
clc
es
xor
mov
xchg
sahf
adc
cmovge
jmp
je
sub
shr
push
xor
pop
lea
sbb
mov
out
jmp
fcomip
pop
dec
out
jge
cwtl
mov
sbb
inc
test
cli
cmc
je
mov
sub
jmp
sub
aam
mov
aad
jle
data16
xchg
mov
sbb
mov
les
and
fnstenv
loop
out
lods
icebp
sub
lret
mov
sub
pop
push
xorl
push
dec
or
fisubrs
mov
xor
or
daa
ret
fisttpll
popf
xchg
push
neg
gs
cmp
mov
in
push
or
jle
es
dec
push
mov
xchg
cmc
lahf
push
mov
add
jecxz
and
and
scas
add
push
fists
fists
mov
xchg
shl
repz
xor
repnz
adc
mov
ret
push
xor
mov
push
pop
sti
sbb
jae
mov
icebp
sbb
scas
lea
bnd
stos
xor
or
inc
repz
pop
ret
aam
cmp
iret
inc
dec
pop
cmp
adc
cmp
fdivrl
sbb
xor
in
mov
imul
cmc
jo
int3
and
jecxz
shlb
insb
jns
lahf
icebp
push
lods
std
mov
scas
pusha
push
ljmp
dec
xchg
jge
aam
or
sub
mov
sub
sub
insb
xor
inc
adc
jnp
xchg
je
test
xlat
cltd
mov
adc
lock
add
push
movl
je
repnz
push
popl
inc
jns
fs
rcll
cmpsb
adc
xchg
xor
adc
jp
testl
imul
aas
es
in
dec
adc
ljmp
scas
or
mov
xchg
push
sub
sub
dec
push
or
push
mov
rsqrtps
pop
sti
pushf
js
push
push
shll
push
test
mov
mov
adc
ss
add
loope
pmulhuw
mov
xchg
mov
xchg
sub
dec
add
test
mov
pushf
ret
cmp
fisubs
dec
shlb
mov
fs
dec
push
adc
lods
or
xor
adc
sub
fwait
adc
pushf
stos
sbb
dec
rorl
stc
push
mov
gs
pop
sbb
in
xchg
test
mull
push
mov
or
movsl
mov
subl
push
jns
insb
pop
xor
int
repz
icebp
dec
jle
fs
enter
jg
repnz
mov
aaa
xchg
xchg
pop
icebp
out
stos
out
mov
adc
insl
add
nop
sbbl
data16
xchg
inc
mov
sbb
dec
push
je
xor
pop
loope
push
sbb
shrb
es
jbe,pn
sub
and
or
push
aas
dec
cmp
int3
xor
jno
pop
adcb
push
loopne
aad
or
cli
repz
dec
loopne
jb
scas
or
dec
sub
push
sbb
cwtl
cmp
sbb
scas
mov
cmp
pop
popa
and
adc
jbe
jmp
xor
stos
inc
dec
pop
inc
fsub
data16
add
push
dec
cmp
fisttpll
mov
or
stc
xor
call
int3
jno
mov
sbb
shll
xchg
adc
lcall
mov
adc
into
mov
add
inc
and
loop
push
lods
in
ljmp
pop
jbe
mov
sarl
pop
sahf
mov
int3
cltd
pop
inc
into
dec
les
xchg
data16
sub
and
or
rclb
xor
cmp
push
movsl
and
rcr
jo
dec
mov
fcompl
loopne
cmp
hlt
in
inc
xchg
pop
test
inc
into
cmpsb
jge
inc
out
cld
test
xor
adc
stc
imulb
movsb
inc
pop
dec
mov
repnz
xchg
mov
jno
scas
xor
jecxz
nop
mov
fidivrl
fadd
imul
imul
mov
inc
jl
rclb
stc
shll
push
sysexit
sub
imul
sub
inc
pop
push
and
mov
mov
mov
jnp
jl
ds
std
push
std
into
dec
cmc
sbb
lcall
lcall
nop
rolb
data16
int3
pop
mov
shlb
fisttpl
shlb
cwtl
or
js
test
push
cltd
cltd
es
orl
mov
mulb
sbb
std
ljmp
std
inc
adc
mov
les
test
ret
cld
add
add
movsb
or
in
mov
rorl
pop
push
cmpsb
or
insl
adc
xchg
mov
mov
int
aas
in
sub
test
push
xor
mov
lcall
and
pop
xchg
mov
fcom
and
cmpsb
lock
dec
add
ds
stos
add
dec
cld
and
push
stos
loopne
xchg
sbb
jge
std
xlat
adc
xchg
inc
and
dec
and
xchg
gs
dec
adc
cwtl
dec
jecxz
ret
and
xchg
inc
adc
sbb
mov
hlt
jno
add
inc
push
sub
push
cmpsb
in
xlat
push
pop
push
jae
mov
in
dec
mov
push
push
push
sbb
jbe
fldenv
push
shlb
jmp
ret
push
aaa
adc
add
push
inc
les
dec
jmp
push
shlb
xchg
push
dec
xchg
and
xlat
jno
mov
sub
cmp
divl
jno
movsb
repz
dec
xorb
push
inc
in
or
rorl
mov
outsl
jbe
sbb
mov
popf
mov
xchg
add
rcl
mov
mov
sti
mov
fsubl
add
mov
shrl
stos
add
mov
pop
fwait
orb
fadds
mov
rolb
lahf
mov
and
lds
push
repz
adc
cli
inc
push
outsb
push
xchg
xchg
nop
in
fstpt
subb
call
and
push
mov
cmp
cmp
jo
mov
sub
dec
pop
fsubrs
sub
pop
mov
xor
iret
loop
fsubrl
aam
arpl
mov
out
push
adc
andl
test
sbbb
lock
movsl
leave
je
enter
shrb
jbe
sbb
xor
test
push
xchg
pop
call
out
ret
into
outsb
lds
dec
push
rcrb
mov
add
popa
enter
sahf
or
push
mov
fistps
add
mov
stos
push
xchg
sbb
push
mov
insl
dec
mov
mov
cmp
stos
repz
and
ljmp
sti
jo
mov
and
or
sub
sarb
add
iret
fidivl
mov
adc
sub
dec
cs
ljmp
push
jns
xor
jns
test
cmp
cmp
clc
adc
mov
and
push
test
mov
pop
inc
add
cli
jmp
jge
push
js
mov
ds
cmp
sub
inc
add
repnz
jp
inc
push
lret
cwtl
mov
sbb
pop
divl
inc
mov
insb
cmp
icebp
movsb
mov
nop
imul
dec
lret
push
dec
loope
xchg
jmp
push
or
adc
push
gs
push
fs
inc
or
adc
daa
test
mov
mov
xchg
cmp
or
cmp
jge
pop
ds
sti
jge
push
push
jo
fcoml
sahf
inc
shlb
jns
xchg
std
sub
daa
cmpsb
cmp
out
int
xchg
loope
rcr
movsb
test
xchg
sub
push
sub
shll
mov
jle
test
popa
xor
jl
sub
mov
jns
xor
push
and
jo
leave
in
movsb
aad
adc
jge
stos
outsl
xor
cwtl
fists
mov
push
jae
scas
les
repnz
push
sub
imul
lds
add
shll
adc
and
inc
lret
fistpl
ds
loop
xor
clc
inc
mov
pop
jnp
sarb
cmpsl
adc
test
pop
jno
cmc
mov
and
scas
add
gs
in
jb
imul
jne
jo
push
fstp
mov
mov
push
xor
mov
in
icebp
inc
mov
fadds
mov
push
xchg
repz
bound
scas
inc
xor
popf
sbb
hlt
jbe
stos
lahf
stos
cmp
int
inc
jmp
cmp
adc
pop
repnz
inc
pop
sbb
push
stos
inc
int3
push
sbb
lods
push
mov
loop
or
aas
test
test
rcrl
lcall
test
in
in
cld
add
bound
aaa
add
sub
mov
pop
mov
sbb
mov
pop
ret
rol
fbld
push
cmp
cmp
sbb
jae
push
idivl
mov
sbb
aaa
pusha
paddusw
dec
out
cmp
inc
stc
push
pop
inc
movsb
push
push
sbb
or
movsl
stos
mov
mov
pop
and
xchg
push
bound
dec
out
daa
jno
inc
test
mov
iret
mov
sbb
lea
movsl
out
mov
adc
push
jno
push
loop
dec
data16
and
ret
add
xor
jge
cmp
push
dec
or
repnz
cmp
jbe
out
je
mov
sub
sub
pop
and
lds
mov
fpatan
loope
push
mov
cmc
gs
loopne
fs
sbbb
inc
xor
or
fsubr
mov
add
daa
inc
or
xchg
push
xchg
popf
xor
add
jb
xchg
pop
mov
push
inc
out
lea
in
push
int
sahf
adc
daa
out
dec
lret
xchg
scas
cmpsb
syscall
decb
cmp
pusha
fcoml
out
shll
and
sub
add
ss
mov
stos
shll
push
lcall
pop
and
inc
jnp
test
cmpb
xor
fildll
xchg
xor
shlb
ja
inc
jbe
push
addb
outsb
xchg
pop
xchg
cmp
popa
pop
xor
jo
fstpl
out
and
jg
mov
repnz
xchg
data16
xor
mov
rolb
loop
rolb
mov
movsb
ret
clc
lret
ret
fcomps
sub
pop
sarl
fldenv
call
pop
iret
fs
pop
dec
mov
sub
mov
mov
dec
js
xor
rorb
icebp
aad
xchg
cld
pop
xor
jbe
dec
mov
xchg
loopne
andb
or
push
pop
cs
inc
sti
lret
je
xlat
ljmp
bound
hlt
scas
cli
sbb
andl
xlat
push
aas
fnstenv
iret
sbb
sbb
jl
and
mov
dec
xchg
sub
inc
imul
push
test
idivl
cmp
sub
cltd
dec
add
in
ss
out
out
stos
xchg
sbb
pop
and
test
test
lahf
push
fsubrl
arpl
jb
cmpsl
jl
push
popf
jecxz
std
test
rorl
jg
mov
mov
repz
push
add
push
xchg
xchg
les
js
sub
arpl
adc
pop
lods
adc
fsubs
or
or
mov
or
mov
cmc
xlat
push
imul
scas
jmp
bound
ffreep
ja
stos
in
ss
test
mov
outsl
rolb
cmpsb
insb
in
cmp
lcall
pop
cwtl
mov
xchg
xor
push
loopne
add
cmc
sub
popf
adc
dec
shrb
std
or
fidivs
cli
nop
loope
xor
xchg
negb
sarl
shrb
ss
mov
lds
repnz
xor
or
xchg
jb
aas
loop
test
xor
and
pop
shrl
mov
xor
or
js
orb
dec
outsb
mov
pop
and
sbbb
stos
pop
daa
fucom
jle
loope
jbe
dec
xor
sub
loop
lret
adc
pop
aam
inc
mov
jp
dec
sub
push
add
cmp
pop
lods
pop
dec
int3
sub
mov
sbb
xchg
fwait
es
ljmp
test
jo
sub
lods
das
and
nop
in
inc
sahf
xchg
mov
loope
and
or
adc
pop
push
test
scas
add
hlt
lahf
inc
out
or
mov
mov
imull
mov
aas
xlat
dec
mov
xor
rclb
loop
sahf
jno
cmc
div
das
ja
dec
sub
sbb
pop
loope
je
inc
mov
fucom
test
adc
lock
mov
xor
cs
sub
out
adc
push
sub
les
shrb
lock
stc
inc
xchg
in
jle
mov
dec
in
dec
jo
mov
mov
pop
js
loopne
dec
data16
aam
mov
pop
imul
shl
pop
mov
ss
xchg
push
jnp
pop
fisttpll
jbe
mov
mov
ljmp
or
jbe
xor
mov
mov
lcall
mov
mov
outsb
add
fsubrs
enter
data16
leave
ja
fisubl
add
pop
adc
insl
int3
push
lds
mov
in
loope
mov
pusha
movsb
cmp
shll
jns
add
into
fwait
stos
aad
xor
icebp
je
xchg
ja
xchg
xor
sbb
xchg
or
inc
outsb
mov
fdivp
pushf
ja
mov
or
sub
mov
cmp
call
jo
jo
repnz
pop
dec
dec
xchg
or
jecxz
add
cmp
aam
inc
mov
mov
jge
jmp
inc
jo
fdivp
ret
stc
inc
imul
pop
out
loop
mov
sbb
rorb
das
mov
xlat
push
xlat
imul
xchg
adc
fbstp
test
insl
shll
sub
or
xlat
pop
or
sbbb
xchg
les
mov
jl
pushf
fcomps
sub
aam
call
xor
fs
arpl
int
sub
push
movsb
mov
dec
dec
or
inc
sub
repz
mov
lock
cmpl
cmpsb
sti
xchg
ficomps
dec
jno
pop
les
out
lcall
das
data16
add
insb
jno
pushf
add
pop
lcall
cs
lret
dec
xchg
pop
mov
mov
jp
lods
push
je
sub
cmp
arpl
adc
xchg
lods
cli
subl
push
pop
stos
std
fwait
inc
dec
push
add
test
imul
shll
push
mov
cwtl
jle
rcll
inc
push
add
imul
imul
xor
popa
add
xor
repz
lds
pushf
les
jge
jmp
fsubrl
test
mov
pop
adc
out
inc
push
loop
lret
cmp
adc
es
mov
push
lret
push
or
cmp
or
insb
es
pop
adc
xchg
add
jnp
pop
jne
out
mov
push
test
cmpl
stc
cmp
lcall
stos
add
dec
out
jecxz
rcrb
inc
mov
mov
loope
stos
cmp
aam
ja
mov
pop
dec
mov
test
mov
aam
fcomi
scas
lcall
xor
sar
pop
jns
adc
into
scas
or
mov
clc
sub
movsl
mov
insb
dec
jg
push
lock
xor
mov
and
aad
sahf
fwait
mov
std
movsl
fiaddl
enter
pop
cmpsb
sub
out
mov
outsl
jne
movhps
adc
dec
pop
scas
fcompl
sbb
imul
jle
push
iret
stos
sub
jns
fs
mov
xor
and
lock
push
aaa
out
cwtl
and
in
or
xor
mov
dec
mov
mov
cmp
ret
lods
xchg
inc
mov
xlat
pop
pop
add
mov
and
cld
pusha
fcoml
push
push
rcr
repz
adc
ss
insb
scas
cmp
insb
movsl
pop
scas
push
push
and
push
es
xchg
sbb
mov
imul
pop
cld
out
imul
cmpsb
mov
push
pop
mov
push
in
lods
add
add
sub
cltd
xchg
mov
hlt
fisttpll
lea
lds
jae
sbb
jmp
mov
cmp
xchg
cld
push
test
jecxz
dec
adc
xchg
in
inc
lods
test
xchg
stos
mov
je
push
and
dec
mov
setle
loop
pop
lea
and
mov
jnp
pop
out
inc
ljmp
xchg
lret
dec
ret
push
cmp
add
fwait
mov
cmpl
in
push
jp
push
jbe
lock
setne
jg
adc
adc
push
lods
push
sub
jge
sub
sar
in
ja
pusha
test
gs
sub
fdivrl
movsb
sti
idivb
mov
and
int3
jae
jge
loopne
pushf
or
dec
daa
xchg
jge
outsl
jns
jg
stos
ss
fcoms
cmpsb
lret
test
xchg
ret
jbe
ljmp
mov
pop
out
xchg
je
pop
in
lahf
xchg
mov
jg
fisttpll
lret
add
lds
imul
push
lcall
fisubrs
in
stos
pop
sub
add
fmul
mov
sbb
leave
loope
sub
divb
clc
xchg
clc
and
cmc
push
aas
sbb
xchg
dec
roll
out
xchg
sub
pop
mov
scas
sub
loope
loopne
pop
lock
and
repnz
sbb
xchg
cmp
cmpsb
mov
sub
mov
aas
push
loop
jge
push
movsl
push
imul
mov
pop
clc
pop
fists
popf
xchg
or
in
into
into
out
push
pop
insl
adc
cmp
mov
sbb
loopne
cmc
push
cmp
xchg
mov
scas
jmp
or
leave
sti
pop
or
dec
or
xchg
ja
mov
std
cmp
jb
xchg
aam
and
xchg
ret
rcll
ret
sbb
adc
sbb
push
leave
rcll
cmp
and
dec
xchg
mov
jns
rorb
mov
outsb
push
aam
sub
mov
mov
outsb
std
mov
and
idivl
mov
out
inc
lret
mov
xchg
mov
sub
pop
xlat
andb
hlt
and
scas
cltd
cmp
jp
loopne
xchg
ss
nop
enter
test
shrb
fidivrl
add
mov
push
mov
aam
dec
jl
jb
popa
push
pop
lcall
aam
mov
mov
xor
fiadds
rcrl
adc
subb
popf
sub
dec
je
loop
push
je
in
lods
repz
mov
cmp
pushf
shlb
aam
push
test
dec
adc
imul
popf
mov
jmp
jmp
jle
mov
pop
xor
rorb
mov
pop
adc
aas
push
std
es
daa
or
push
test
push
push
mov
enter
addl
in
xor
ds
push
mov
test
stos
or
arpl
jg
cwtl
pushf
sub
jne
xchg
into
nop
arpl
and
in
gs
add
jl
push
shll
and
or
sub
enter
lods
cmpsb
pop
xchg
dec
xor
jle
mov
xchg
mov
add
mov
aam
mov
push
mov
sbb
push
cmp
push
xor
je
push
jb
mov
imul
push
push
push
aad
lods
jp
outsl
rcrb
and
cmp
xchg
bound
dec
hlt
adc
mov
fistpl
sbb
sub
outsl
cmp
fldcw
cwtl
xor
pop
shll
mov
test
xchg
lds
ds
mov
das
je
and
cld
mov
jb
es
nop
jge
stc
jns
cmp
lds
daa
adc
jno
xor
inc
hlt
imul
pop
es
hlt
jb
iret
xor
xchg
add
pop
and
popa
mov
cmc
mov
or
lock
aaa
pop
pusha
in
jge
orb
or
cmpsl
pop
xorb
les
sbb
xlat
add
jnp
mov
or
xor
shlb
jbe
add
jmp
mov
mov
stos
sub
push
and
fcompl
aaa
sahf
pop
into
and
clc
dec
jnp
push
mov
push
addl
rcll
dec
pop
dec
pop
clc
push
rol
cmpsl
jle
stos
mov
mov
adc
loopne
je
nop
mov
push
repz
lcall
rclb
test
mov
in
sbbb
shll
sbb
movsb
sub
repz
jns
dec
aam
data16
fstps
mov
les
out
xlat
mov
dec
push
test
xchg
int
xor
mov
mov
add
fimull
and
mov
sbb
shl
push
add
fsubrl
mov
jge
adc
jns
nop
sub
xchg
ret
in
mov
loope
addr16
xor
jecxz
jmp
popa
clc
ss
xchg
dec
insl
push
pop
and
std
into
aaa
inc
ds
imul
loopne
jne
add
add
es
icebp
outsl
into
push
mov
and
daa
dec
mov
fs
sbb
pop
aas
pop
fs
adc
mov
mov
mov
adc
dec
mov
sbb
dec
mov
lret
pushf
mov
xlat
xor
lahf
xor
das
sbb
mov
out
adc
fdivp
rclb
es
sub
cbtw
in
iret
dec
cs
adc
lea
int3
xor
fcom
pop
xchg
jmp
outsl
daa
xor
cmpsb
sub
xchg
mov
sahf
insl
repz
and
mov
mov
iret
dec
adc
inc
push
pop
insl
fucom
jl
or
out
enter
lock
sub
dec
adc
int3
fsubl
xchg
jg
mov
nop
repnz
dec
add
jns
dec
in
cmp
mov
sub
add
popf
and
rolb
fmul
pop
scas
cwtl
sbb
sbb
leave
aaa
cmp
sbb
adc
lcall
mov
jge
sub
jge
mov
movsb
out
into
les
push
dec
cwtl
fwait
sti
idivb
adc
pop
xor
add
inc
test
int3
scas
repnz
pushf
arpl
mov
lcall
movsb
out
xlat
push
cs
lret
and
in
jl
stos
xchg
jae
jle
lock
dec
and
adc
mov
out
mov
std
mov
push
xor
or
and
std
pop
cwtl
inc
push
xchg
jp
dec
mov
mov
lods
pushf
imul
inc
call
es
or
cmp
add
pop
xlat
imul
cmp
xor
fcmovnbe
data16
pop
movsl
jecxz
shr
adc
test
out
dec
sti
imul
mov
ret
jae
sbb
dec
push
jne
mulb
push
lock
sub
in
push
xor
popf
imul
scas
jne
es
mov
daa
adc
repz
inc
cmp
push
out
loope
jb
push
sti
mov
sti
call
push
test
sub
adc
icebp
fldl2t
dec
and
rcr
jbe
pcmpeqb
cld
mov
out
mov
enter
outsb
mov
scas
jecxz
out
test
mov
or
cmp
leave
or
sahf
add
ret
mov
fsubp
dec
js
inc
arpl
dec
cmp
andb
mov
arpl
bound
cmpsl
push
and
rep
dec
bsf
lcall
shll
test
rclb
inc
js
test
stos
push
rolb
cmpsl
fdivl
je
into
test
mov
nop
inc
or
mov
sub
lret
mov
sbb
pop
shll
jg
jg
dec
xchg
or
scas
add
push
or
push
mov
xor
push
inc
push
cmp
pop
pop
bound
cltd
mov
das
loopne
lods
jae
cmp
andb
xor
in
xor
sti
je
pushf
aam
int
mov
mov
push
pushf
mov
testl
jecxz
insl
mov
and
sub
enter
in
fs
inc
imul
orb
xor
loope
mov
sub
scas
mov
mov
inc
push
dec
dec
mov
and
xchg
mov
bound
inc
sbb
sbb
sub
insb
mov
dec
jmp
sub
cmpsl
fimull
pop
mov
cltd
jae
dec
gs
test
or
xor
sahf
or
shl
and
fdivs
jl
or
cwtl
iret
pop
xor
aad
leave
lret
xchg
or
pushf
push
filds
xchg
dec
add
xchg
nop
out
xchg
pop
xchg
call
je
cmc
loopne
and
jnp
jo
ljmp
js
js
clc
test
out
outsl
mov
ret
mov
testb
imul
das
imul
cltd
push
idivl
cmp
and
stc
pop
or
jno
mov
pop
pop
cmp
lret
adc
mov
lods
out
aas
xor
pop
add
scas
mov
cmp
and
push
mov
jno
rclb
rcrl
lret
or
pop
pop
pop
sbb
jo
dec
cmpb
mov
jmp
test
pop
sbb
jno,pn
inc
in
mov
or
adcl
test
jmp
xchg
or
or
hlt
int3
xchg
lods
shlb
mov
xor
daa
icebp
sti
iret
and
mov
pop
or
and
xor
in
sbbl
cmpsl
sub
push
xchg
inc
pop
pop
repz
fnstcw
in
lcall
jecxz
es
sahf
cwtl
into
insl
pushf
mov
loope
je
mov
sbb
adc
pop
aas
mov
mov
call
mov
push
mov
addr16
xor
mov
popf
sub
sbb
pop
sub
cmpsb
mov
push
shrb
push
add
addr16
jle
dec
adc
mov
aam
incl
mov
mov
xchg
xlat
lahf
sti
pop
pop
dec
dec
xchg
pop
pop
shlb
add
es
sub
or
mov
jge
jle
test
sub
and
and
jecxz
jg
jmp
sahf
and
call
and
mov
cmpsb
dec
das
fs
fiadds
push
inc
fs
mov
ss
jns
mov
xor
cltd
ret
popf
in
adcl
xor
shlb
push
icebp
dec
jbe
jns
pop
inc
push
jns
fwait
sub
push
pop
cld
fistl
mov
pop
push
dec
mov
adc
push
mov
dec
int
hlt
sub
repz
lds
in
mov
aaa
push
xchg
out
jmp
jo
test
sub
icebp
lods
pop
inc
mov
push
syscall
cmp
faddl
ja
test
xor
scas
ds
out
fs
das
out
sub
xor
fdiv
test
popa
in
scas
cs
push
lret
cmp
movsl
filds
push
movsl
imul
mov
jbe
jne
dec
fnstsw
sub
nop
xchg
push
inc
add
leave
mov
inc
mov
ret
pop
jp
dec
or
mov
jo
mov
and
aad
movsl
lcall
in
ret
rorl
inc
pushfw
in
jno
mov
in
cli
gs
mov
add
decb
notb
adc
inc
leave
jecxz
cmp
sahf
jge
mov
or
xor
das
xor
hlt
inc
pop
test
stos
push
sbbb
inc
rcl
cmpsl
cmc
pusha
mov
int3
mov
cmpsb
enter
jnp
cli
mov
and
cld
mov
cmp
xchg
or
daa
pop
jno
pop
xor
jnp
adc
aam
fdivrl
jp
and
and
jbe
xor
lods
cld
mov
and
cs
push
mov
inc
fdivrl
in
adc
scas
in
in
mov
mov
mov
pushl
cs
mov
fnstenv
in
mov
add
imul
inc
push
call
add
in
movsb
add
adc
outsl
push
mov
std
sbb
nop
dec
jne
das
mov
dec
imul
push
fsubrs
mov
lock
adc
in
or
cld
pop
mov
lock
adc
clc
ss
fwait
out
mov
dec
jl
mov
movsl
je
jo
pop
leave
inc
or
jae
test
inc
mov
daa
xchg
lret
or
push
jne
data16
xlat
iret
mov
sbb
dec
jb
dec
pop
rcrb
push
aam
out
insb
xchg
mov
sbb
mov
jne
sub
pop
push
dec
mov
mov
je
xchg
and
pop
cltd
cld
inc
in
sub
jl
and
adc
inc
push
dec
sbb
addr16
jge
xor
push
jl
fidivrl
arpl
cwtl
mov
mov
pop
jle
or
or
push
or
xor
inc
xchg
addl
clc
sub
mov
mov
pop
mull
push
push
shll
add
cli
loope
cmc
int3
and
jmp
dec
icebp
roll
push
dec
hlt
cmpsb
dec
lods
into
mov
xor
pop
dec
fwait
xor
mov
and
push
sub
dec
leave
inc
or
stos
sti
in
add
mov
int3
xor
aam
jae
mov
shll
movsl
jne
int
xchg
dec
push
mov
xchg
jno
jge
jb
push
insl
outsb
inc
pop
xchg
xchg
pop
add
push
mov
loope
push
sub
mov
movsl
adc
ret
jecxz
ret
inc
int3
sbb
loope
aam
jge
cmpsl
iret
add
or
jno
push
lock
movsl
push
dec
xchg
or
fidivrl
ret
dec
mov
mov
icebp
stos
xor
fsubrl
ja
daa
inc
pop
adc
sbb
push
jge
mov
aad
mov
mov
cld
cmp
jno
test
mov
cmpsl
pop
cwtl
mov
mov
pop
jl
pop
movsl
ret
push
in
adc
jmp
and
jle
jmp
dec
into
iret
push
test
insb
pop
lds
cmp
or
jns
sub
lock
dec
push
or
mov
mov
pushl
mov
lock
fisttpl
jns
stos
fnsave
add
in
xor
mov
mov
xor
jne
xlat
xchg
fwait
mov
test
add
pop
movsb
ret
sub
or
std
jbe
fldt
pusha
dec
aad
cld
in
dec
in
test
push
repnz
or
lahf
stos
out
or
mov
mov
inc
mov
sbb
or
pop
cmp
xor
ja
test
mov
adc
outsl
mov
std
xor
dec
fldl
mov
call
xchg
push
mov
repnz
lock
popa
and
popf
pop
xchg
sbb
enter
shlb
scas
lds
jp
stc
adc
iret
mov
fistps
movb
mov
xor
sbb
test
jp
cmp
add
adc
shrl
pop
jmp
mov
xchg
int
fnsave
inc
dec
cltd
pop
adc
fidivl
es
shll
jg
jp
jecxz
loopne
imul
cmp
mov
pfcmpge
lds
dec
fists
icebp
pop
ds
cmp
cmp
test
jno
repz
add
pop
pop
jl
inc
sahf
and
lcall
pop
pop
fs
in
and
cmp
cmp
inc
lods
pop
aad
aas
adc
adc
addr16
and
loop
jl
call
pop
daa
dec
and
jns
cld
and
cmp
aaa
int3
test
lret
jne
cmp
push
and
pusha
pop
sub
filds
aad
xchg
leave
sub
imul
xor
aaa
cmp
inc
sarb
addr16
jmp
sbb
dec
mov
int3
sbb
and
and
stos
fwait
hlt
dec
jecxz
pop
mov
ret
mull
sar
pop
cld
xor
jnp
outsb
push
pop
and
js
cmpsb
shrl
jnp
call
jnp
in
pop
or
je
jl
pop
and
out
imul
add
mov
adc
repz
add
adc
jecxz
pushf
xor
cmpl
pushf
imul
js
cmc
sahf
add
fs
sbb
shlb
pop
idiv
or
jno
imul
push
xchg
jns
push
fdivrl
lods
jns
sahf
fidivl
jnp
pushf
lods
outsl
fnstenv
mov
pop
movsl
adc
or
hlt
cwtl
pop
push
cld
cmp
cltd
mulb
std
or
outsl
xor
dec
add
xchg
jne
insl
add
lock
jle
mov
dec
or
test
mov
mov
mov
jnp
mov
pop
and
std
leave
ss
fs
mov
dec
xchg
xchg
arpl
or
xorl
jbe
lahf
sub
pop
mov
jnp
std
shl
imul
sbb
xchg
mov
xor
mov
shlb
push
scas
into
lock
cs
iret
adc
or
call
adc
cs
mov
push
pop
jp
mov
jmp
mov
int
xor
inc
lock
loopne
out
cmc
dec
cmp
jb
int
sbb
add
movsl
cmp
jmp
or
test
sbb
cmp
xor
cltd
test
popf
add
arpl
dec
mov
or
jmp
pop
repnz
sub
mov
mov
mov
mov
aaa
lahf
lods
xchg
jae
and
lret
push
or
jecxz
shlb
test
pop
mov
pop
and
xchg
jl
mov
and
sbb
es
inc
fmuls
subl
and
jmp
mov
dec
push
xchg
nop
fimull
push
fmul
out
xchg
push
adc
out
mov
stc
mov
fs
and
mov
hlt
sbb
stos
or
fcomi
mov
cmp
mov
pusha
pop
pushw
shl
aas
cmc
lea
inc
xchg
push
xchg
outsl
aad
dec
jmp
add
hlt
aaa
ljmp
add
sub
lret
loope
xor
dec
or
loope
mov
fcmovu
fnstsw
sub
mov
add
ljmp
fisttpl
adc
repz
mov
cmp
shr
popa
pushw
sbb
mov
movsb
cmp
mov
mov
pop
inc
lods
dec
sbb
pop
inc
sti
das
jno
dec
aad
cld
roll
and
hlt
out
call
push
sbb
data16
dec
or
xor
jmp
jo
out
add
ja
test
add
loope
aam
dec
cwtl
punpckldq
sub
mov
stos
stos
cmpsl
dec
cmc
pop
dec
cltd
clc
dec
in
mov
ds
lods
test
test
mov
or
ja
xchg
pop
xchg
ror
push
test
or
or
sarl
mov
sub
sbb
insb
adc
lods
sahf
out
mov
mov
ret
xchg
sub
inc
adc
fldl
jb
pop
push
inc
stc
lahf
sbb
out
xchg
xchg
pushw
mov
repz
xchg
pop
insb
push
xor
mov
outsb
shlb
add
pop
sbb
jno
mov
cmp
les
lret
jp
imul
add
cli
mov
sahf
aas
and
cs
std
mov
idivl
pop
push
int
jno
mov
je
adc
pop
cmpsl
push
adc
ljmp
and
sbb
mov
ficomps
fisttpl
cmp
testl
sti
or
jle
and
bound
push
pop
jne
jp
pusha
dec
inc
cli
rcl
mov
sub
xchg
or
xchg
push
aam
add
pushf
mov
fcomps
pop
pop
sti
cmp
adc
push
push
lret
scas
push
xlat
mov
cwtl
es
bound
ss
pusha
sbb
ljmp
pop
jl
mov
sbb
insl
cmp
call
dec
add
sub
jae
cmp
fiadds
mov
fs
pop
jg
aam
sarl
hlt
jg
mov
inc
shrd
cmpsl
jo
imul
or
mov
stos
mov
stos
adc
jp
or
lods
add
adc
sub
bound
lods
test
inc
fistpl
fiadds
mov
fwait
push
inc
fisttpl
sub
sarl
inc
pop
cli
jle
push
negb
popa
icebp
bound
rclb
rorl
lret
add
jb
pop
add
cltd
frstor
addb
mov
rcrb
xor
faddl
jmp
adc
loope
xlat
sbb
mov
clc
add
xor
mov
rcr
pop
xchg
es
mov
in
jg
and
nop
jo
dec
or
sub
leave
mov
xchg
fstp
insl
loopew
lods
lods
sbb
das
not
add
orl
cs
push
sub
cld
or
fcomps
xchg
sahf
inc
jnp
aam
sub
sbb
pop
enter
out
sbb
sbb
outsb
loop
mov
out
pop
push
xchg
jnp
xor
and
in
dec
aas
mov
loop
icebp
sbb
sbb
pop
mov
in
filds
xor
cmp
dec
rolb
and
in
fstpl
push
mov
popf
adc
and
sbb
jge
pop
test
pop
jmp
mov
lods
push
or
sbb
xor
mov
cmc
fsubr
pop
jae
out
frstor
push
shlb
push
mov
test
and
pop
mov
mov
inc
fsub
clc
popf
mov
pusha
shll
es
cs
andl
mov
sbb
arpl
fsubr
inc
je
add
sahf
aad
dec
test
aam
inc
adc
scas
ss
cld
or
imul
cld
dec
rcrb
sub
dec
mov
push
push
sub
cli
popa
mov
pop
sub
mov
mov
lods
mov
mov
xchg
nop
cmp
jae
sbbb
jp
xchg
cld
mov
mov
dec
adc
push
ja
pop
aad
stc
ljmp
lret
push
lret
pop
mov
and
addr16
or
int
lods
mov
xchg
fists
add
scas
add
imul
cs
cmc
pop
add
sub
push
int3
clc
fsubr
arpl
gs
mov
cld
loope
outsb
lea
test
mov
aam
repz
fcoms
mov
pop
add
sbb
lahf
or
add
repz
sub
push
dec
push
cli
ds
in
inc
mov
mov
sub
push
lahf
jbe
sarl
pusha
mov
imulb
lds
inc
mov
xchg
push
lcall
stc
pop
mov
test
cmp
xorl
out
adc
pop
stos
cmp
pop
pop
cmp
sbb
mov
or
jge
push
xor
jno
lcall
ja
jge
mov
stos
lds
pop
into
rorb
mov
sbb
adc
mov
jl
adc
push
jne
loope
in
int3
rorl
rcrl
mov
inc
jecxz
lret
jne
xchg
xchg
push
mov
hlt
fidivrl
dec
add
mov
sbb
loop
dec
sbb
aam
dec
fstl
lods
fcoms
sub
idivb
sbb
aam
or
cmp
cli
packsswb
dec
popa
jge
cmpsb
and
dec
push
xchg
pop
fsubl
or
pop
and
pop
and
dec
adc
outsb
sub
inc
dec
pop
push
mov
pop
mov
xor
adc
push
cli
ljmp
inc
pop
sbb
leave
pop
mov
sub
imull
cmpsl
dec
lcall
les
fsubrs
mov
pop
rol
and
shlb
mov
inc
lock
push
adc
movsl
jp
pop
pop
and
mov
sub
maxps
dec
in
enter
jl
xchg
pop
cli
mov
int
imul
hlt
test
sti
mov
xor
lds
cmp
cmp
out
jne
sub
in
cmp
jo
mov
mov
dec
sahf
sbb
or
notl
outsl
rcr
in
jl
mov
and
in
daa
add
shr
mov
popa
dec
imul
dec
dec
les
push
cli
mov
outsb
orl
mov
movsb
rclb
sbb
or
jne
lock
icebp
icebp
dec
test
xchg
gs
lcall
pop
mov
inc
lea
jb
stos
imul
jge
lods
sub
jbe
bnd
test
fistl
bound
sbb
push
imul
or
xchg
jecxz
pop
cld
pop
lea
fdivl
xchg
mov
jae
xchg
xchg
push
sbb
adc
fistpl
lahf
test
push
dec
xor
dec
movsl
lods
mov
mov
add
pop
dec
dec
sbb
in
es
hlt
inc
repz
mov
shll
sbb
jo
shlb
cld
pop
fmuls
fiaddl
push
mov
daa
xchg
and
mov
dec
mov
add
sbb
pusha
ds
mov
inc
inc
cmc
xor
dec
cmp
repz
mov
add
xchg
sub
or
stos
aam
mov
dec
push
sub
pop
or
dec
je
ds
scas
mov
clc
push
jb
adc
call
or
test
ret
into
dec
ja
test
movsb
aam
xor
mov
loopne
popf
mov
dec
xchg
xchg
cmp
cmpsb
call
xchg
fcomps
test
mov
push
add
stos
push
pushf
cmp
push
scas
xchg
add
push
sub
loop
fwait
push
and
call
test
insb
outsb
in
mov
outsb
loope
push
fs
mov
mov
xor
pop
movsl
or
sbb
fisttps
pop
cmp
xchg
xor
add
fcmovbe
js
leave
and
fsubr
loopne
inc
add
mov
imul
cmpl
push
jne
insl
push
dec
scas
sti
cs
pop
aas
cmp
mov
adc
mov
packssdw
xchg
loopne
shl
shl
add
sbb
sahf
test
or
stos
jg
sub
insl
inc
ss
into
jmp
test
mov
js
sbb
ret
inc
or
imul
add
test
arpl
je
and
out
jl
test
roll
xchg
out
add
cmp
xor
ja,pn
jp
jno
fsubrs
ds
pop
les
pop
xor
rorl
dec
fucomip
jecxz
jne
cmp
mov
pop
add
js
es
and
dec
inc
daa
stc
enter
dec
ds
xlat
js
fcomp
out
mov
inc
jp
inc
cld
cltd
adc
imul
lret
je
add
mov
push
sub
out
and
pop
sbb
enter
push
or
arpl
xchg
gs
pop
xchg
add
movsl
and
clc
push
cmp
jl
adc
push
jecxz
push
outsb
cmp
bound
or
ss
adc
rcl
inc
sbb
or
fisttpl
imul
fst
pop
dec
inc
inc
mov
sti
popa
push
sub
sbb
mov
dec
pop
jg
push
jmp
mov
adc
loopne
or
push
mov
sbb
ja
dec
data16
jo
repz
xchg
loop
add
outsl
pop
push
dec
ljmp
loopne
sub
loope
int
rclb
sub
lahf
aas
cmp
cli
add
aaa
movntq
insl
out
pushaw
outsl
mov
sbb
fdivl
subb
fdivrl
sub
movsb
and
scas
jae
pusha
fwait
cmpsb
sbbl
pushf
pop
cmp
push
arpl
rcll
sub
adc
sti
inc
sbbb
mov
sub
cmp
notb
mov
jp
add
iret
jo
inc
sub
sbb
mov
test
mov
jp
add
ror
jp
pop
fisttpl
test
mov
sbb
pop
xchg
fsts
dec
nop
mov
aad
repnz
inc
mov
adc
jne
lahf
push
jg
jp
jge
sbb
fiadds
xlat
xchg
aam
call
addb
or
mov
and
and
test
iret
mov
mov
xor
loope
repz
je
test
sti
loope
mov
inc
cld
add
test
push
aaa
inc
adc
daa
shrb
xchg
ror
outsl
xor
pop
sub
fisttpll
xchg
mov
sti
insb
clc
clc
push
cmp
and
and
or
xchg
and
lret
xchg
sub
lret
lods
out
test
cmp
pusha
js
ss
inc
cmp
daa
fstps
aas
push
or
cli
jle
push
mov
cmp
ds
pop
mov
andl
jae
lea
jns
cwtl
mov
mov
aam
xchg
mov
pop
push
mov
cld
roll
push
faddp
add
xchg
sbb
mov
daa
sbb
sbb
ret
jle
fmuls
and
push
ljmp
das
mov
adc
or
dec
imul
ret
mov
push
nop
roll
mov
cmc
mov
mov
aas
loop
dec
sub
sbb
cwtl
jecxz
jns
mov
in
mov
push
push
leave
int3
pop
dec
cmp
out
pop
xchg
mov
cli
sbb
sub
push
lods
fcomps
cmp
mov
fwait
leave
mov
aad
sbb
cmp
clc
nopl
xlat
data16
jbe
test
dec
call
pop
inc
pop
mov
ljmp
and
xor
add
dec
mov
push
popf
test
sbb
cmp
test
subl
mov
scas
push
and
cmc
adc
popa
cmp
roll
popf
lret
out
mov
cltd
lods
in
xchg
inc
push
addr16
mov
xorl
out
mov
insb
cli
arpl
loopne
jmp
adc
pop
fwait
gs
xor
cli
fwait
jge
push
jl
repnz
loop
or
sub
push
add
sub
jmp
inc
nop
xchg
xor
mov
outsb
jns
rol
push
pop
mov
fildll
cmp
or
and
push
and
jne
sbb
sbb
ss
xor
add
dec
insl
divb
fs
outsl
sbbb
push
xchg
out
xchg
push
out
popl
push
sub
test
dec
xchg
jp
cwtl
mov
rcll
sarb
mov
repnz
fcmovu
xchg
les
push
sub
inc
push
add
mov
mov
lcall
imull
push
out
test
sahf
cwtl
mov
rolb
inc
sbb
pop
push
es
ja
in
adc
xor
imul
pop
jl
inc
adc
pushf
pop
cmpl
jecxz
mov
dec
sbb
movsl
fnstsw
int3
movsb
add
mov
repz
dec
jns
dec
adc
ficoml
fisubrl
retw
sub
mov
dec
bnd
and
call
jl
rol
inc
repnz
movsb
dec
pop
scas
mov
lret
mov
shlb
jne
or
into
lcall
ss
or
push
add
or
pushf
xchg
push
jecxz
mov
push
inc
out
sub
and
xchg
loop
bound
jae
fsts
cmpb
out
push
out
daa
and
push
cld
lock
add
add
sbb
nop
pop
hlt
movsl
mov
pop
aam
gs
pop
inc
inc
xchg
ljmp
push
inc
popa
sub
in
mov
sti
mov
lea
mov
sbb
xchg
pop
cmp
stc
push
jo
sbbl
pop
test
out
mov
jae
mov
pop
dec
sarb
or
popa
push
insl
adc
or
xor
mov
inc
inc
je
mov
arpl
jno
sub
fdivl
hlt
lods
pop
aam
jns
jbe
popa
pop
in
mov
jae
ja
cmp
shrb
rclb
mov
testl
mov
sub
and
add
xor
push
add
les
xchg
xchg
int
insl
push
inc
out
lret
dec
lock
test
movsl
mov
repnz
adc
cmp
fidivrs
arpl
push
popl
mov
pop
mov
test
mov
push
inc
flds
xchg
cmpl
mov
cmpsb
push
roll
jo
into
adc
pushf
movsl
test
int
push
mov
cs
fdivrl
push
cmpsl
test
fadds
cli
mov
es
insb
add
in
xchg
sbb
mov
or
rep
inc
jnp
scas
jecxz
mov
ljmp
pop
rcr
push
mov
pop
inc
mov
jge
out
je
test
jo
xchg
xor
sub
mov
pop
xor
mov
aam
cmp
and
jb
pushf
xor
mov
gs
cld
xor
adc
dec
pop
stc
lods
stc
aaa
arpl
sbb
sbb
loopne
stos
inc
pusha
jle
sub
jb
fwait
std
inc
push
push
adc
cmpsl
add
fs
ret
imul
jg
es
je
stc
push
jmp
pop
inc
filds
mov
stos
das
cmpsl
push
idivb
stc
fcmovnb
leave
call
dec
xchg
ljmp
cmovae
pop
or
inc
testl
mov
pop
je
jbe
cli
stos
jl
sbb
mov
popf
icebp
sbb
xchg
loope
cli
push
repnz
push
dec
fistpl
in
lds
mov
sub
loopne
sbb
mov
fwait
mov
imul
mov
frstor
imul
xor
mov
sahf
shl
nop
cmpsl
or
pop
out
mov
mov
jecxz
cli
pushf
sub
xchg
jbe
imul
jne
sub
loop
mov
sub
test
js
push
movsl
stos
stc
or
fistps
jne
xor
push
test
mov
dec
lods
shufps
data16
sub
mov
lock
push
test
shll
inc
and
repnz
pop
ds
and
add
aaa
cmc
jae
paddusb
aam
test
add
out
inc
inc
push
and
mov
aaa
pushl
sub
cmpsl
in
jae
outsb
andb
sub
dec
xchg
movsb
sbb
adc
mov
scas
mov
outsb
ficompl
int3
xlat
xchg
ret
jbe
repz
jo,pn
das
aas
sbbb
inc
shll
and
cmp
in
push
sub
jge
mov
cwtl
ss
into
icebp
xor
sub
jo
std
pusha
std
fistpll
leave
and
dec
iret
sbb
shrb
mov
sarb
push
sbbb
popf
add
subb
inc
std
sahf
arpl
mov
and
add
cmp
aad
sub
dec
loope
sbb
push
out
adc
adc
and
sub
dec
push
add
clc
add
mov
pop
leave
stos
enter
lret
adc
adc
fcoms
divb
pushf
jg
inc
inc
cmp
in
cmp
mov
imul
add
rolb
outsb
test
and
add
xor
stos
sti
mov
loope
xchg
lahf
add
test
pop
mov
add
and
jno
cmp
sbb
xorl
fdivl
lds
mov
jno
outsb
xor
xchg
pop
dec
sbb
dec
xor
inc
pop
sahf
in
lods
es
cli
cmp
test
lock
jg
inc
and
lods
gs
addl
dec
push
add
lock
sub
out
inc
sbb
sarl
mov
lahf
ja
jge
lock
jae
mov
mov
gs
movsb
sub
inc
movsl
and
negb
add
or
add
clc
mov
add
or
cmp
jb
jp
xor
jo
pop
stos
jns
sub
mov
or
js
femms
or
mov
in
mov
subl
pop
inc
ss
cltd
and
loopne
sub
sarl
sbb
adc
loop
push
pop
sub
mov
jns
adc
lcall
dec
inc
dec
add
push
dec
xor
push
sbb
das
pop
rcrb
inc
test
or
in
jae
adc
jns
int
in
or
mov
lock
repnz
adc
popa
sub
ja
mov
movb
jns
out
popa
pop
cmp
push
rolb
and
lret
arpl
push
ret
inc
push
fmuls
xchg
or
jae
push
mov
mov
out
inc
push
ret
int
cmpsb
push
fst
andb
mov
loope
popf
cmp
in
ljmp
or
mov
dec
loopne
scas
dec
fcomps
pop
clc
xchg
pop
aaa
roll
sbb
jns
js
push
fdiv
mov
dec
out
or
ljmp
or
jnp
push
cltd
iret
pop
notl
dec
sub
sub
mov
xchg
add
aas
push
movsb
movsl
ret
add
mov
mov
int3
aad
fsubrs
iret
jbe
and
dec
shrl
shlb
xchg
jno
test
sti
xor
mov
loopne
inc
in
mov
iret
push
shrb
mov
jo
stc
dec
test
mov
out
sbb
add
jno
repz
push
cld
xor
lea
mov
dec
and
loope
and
shlb
fwait
mov
loopne
add
fwait
pushf
cmp
pop
vshufpd
repnz
xor
or
sti
jno
cs
mov
mov
pop
mov
dec
ficomps
lods
mov
cli
negb
lods
aas
jns
sbb
ja
dec
and
dec
mov
fidivrl
push
rcll
and
scas
jo
xchg
jnp
arpl
bound
cmp
xchg
inc
pop
pop
add
je
push
xchg
lock
inc
fidivl
mov
subl
jnp
mov
pavgb
aas
jecxz
test
inc
dec
jmp
dec
jnp
mov
inc
daa
push
fmuls
and
inc
jg
iret
lea
mov
ficoml
mov
ret
adc
mov
xor
cs
inc
jle
cmp
lea
fldt
mov
jmp
movsl
push
out
outsl
and
push
or
mov
mov
cmpsb
sti
shlb
jmp
jecxz
lods
mov
inc
pop
mov
xor
cld
mov
or
lret
mov
mov
inc
test
sub
dec
aas
or
xlat
ds
mov
jmp
gs
aad
ss
test
ja
shlb
mov
xor
xchg
mov
insb
in
push
fldlg2
jns
test
scas
pop
xchg
hlt
popf
inc
dec
les
cmp
imul
bound
xlat
fsts
mov
mov
clc
cmc
lret
rol
xchg
push
or
nop
movb
js
cmp
in
xlat
popf
popa
pushf
mov
pop
mov
test
cmpsb
imul
shlb
aam
repnz
insl
xor
inc
fistpll
not
mov
fdivr
sub
arpl
xor
popa
mov
adcl
jmp
scas
mov
out
sarb
sbb
popf
outsl
mov
int
xorl
mov
mov
lcall
mov
mov
push
cmp
daa
ja
in
movsl
pop
jnp
shl
lret
dec
jmp
xor
fucomip
stos
pop
int3
mov
stos
adcl
push
push
push
decl
cmp
popa
jae
scas
shlb
popl
pminub
adcb
or
mov
lahf
mov
jb
mov
and
adc
lods
xorl
shrl
xchg
add
sbb
and
shlb
mov
movsl
dec
cld
pop
pop
push
in
cmp
dec
xchg
cmp
or
ljmp
mov
adc
or
lods
orl
and
test
fiaddl
ss
and
fcoml
pop
inc
add
dec
xchg
aas
movsl
ret
ja,pn
lods
push
out
mov
inc
inc
add
jge
jmp
mov
cltd
sahf
lret
scas
push
inc
test
pop
and
lret
nop
aaa
ds
mov
sbb
in
add
adc
dec
add
mov
movl
lds
insl
and
mov
test
or
mov
test
xor
outsl
add
iret
es
mov
jg
push
repz
pop
cmp
lea
jmp
dec
xlat
xor
push
mov
xchg
punpckhbw
mov
daa
ljmp
outsb
pop
orl
pop
xchg
xor
jne
cmp
mov
out
cmpsb
push
jmp
mov
pop
add
push
test
xchg
dec
cltd
mov
xor
movsb
xlat
and
pop
pop
std
lcall
mov
mov
pop
lret
aaa
lcall
ljmp
std
dec
adc
mov
adc
es
sub
call
stos
cmp
mov
call
xor
xor
cmp
jns
adc
cmp
dec
ficoml
rcll
stos
xchg
and
mov
cld
dec
mov
sbb
pop
push
rclb
fdivs
loope
jg
dec
add
mov
fs
decb
sbb
push
cmpsb
lea
imulb
fwait
cmpsl
mov
jne
inc
adc
xor
jle
or
inc
pop
jge
mov
jl
fadd
nop
aad
mov
sub
int
add
adc
ret
adc
cmp
push
fwait
je
int3
aaa
mov
mov
daa
loope
dec
fdivl
cmpb
lret
in
je
mov
add
pop
jae
rolb
mov
pushf
mov
cmp
lods
aad
mov
and
cwtl
pop
add
iret
lret
outsl
pop
sbb
inc
add
stc
pop
mov
negw
push
mov
inc
fsubp
imul
fidivl
ds
mov
jns
xchg
or
cmc
adc
inc
aam
mov
int
dec
subl
out
push
xlat
mov
pop
bound
inc
sbb
sbb
in
push
jmp
push
pop
out
stc
loope
scas
sahf
scas
or
xor
add
cmpsl
inc
xchg
mov
imull
stc
push
sahf
xlat
rep
std
add
in
jae
sbb
xor
outsb
movsl
cmp
or
cmp
sarl
dec
mov
cld
xlat
xchg
sahf
fldcw
dec
shrl
or
fdiv
jg
lock
addl
dec
and
je
loop
pop
pop
mov
cltd
fbstp
cmp
and
xlat
mov
inc
mov
in
in
rclb
lahf
stos
xor
pusha
mov
sub
loopne
sub
lret
loopne
jb
sub
or
gs
inc
js
cmp
mov
in
ja
jg
cwtl
test
jbe
mov
fadds
sub
dec
cmpsb
imul
adc
mov
mov
adc
pop
std
push
test
aam
pop
idivb
jl
sub
shrb
or
push
pop
jmp
orl
xor
push
int3
push
lret
mov
jge
clc
and
movsl
cmp
mov
and
fildl
xchg
inc
cs
cmp
lahf
fucompp
clc
fcmovnu
jbe
test
or
in
xchg
mov
and
int
sarb
movsl
and
mov
cwtl
outsb
not
and
push
sub
sub
in
inc
lret
clc
cmp
iret
int
xchg
int
pop
flds
fistpll
adc
cmp
stos
pusha
repz
push
pop
mov
xchg
lcall
jp
clc
outsl
sbb
sub
mov
out
jl
jno
cmpsb
xchg
inc
movsl
fcomps
inc
jecxz
sub
push
add
insl
nop
ja
jb
push
fwait
ret
inc
push
lods
jmp
mov
jno
es
jg
and
pop
xchg
mov
addl
mov
or
mov
fistl
sbbb
mov
adc
mov
jne
jb
inc
jecxz
mov
sub
lds
mov
push
pop
insb
js
sbb
imul
push
pop
scas
test
fisttpl
fwait
cmp
mov
push
sub
inc
and
push
push
xchg
pop
movsl
inc
test
scas
je
mov
push
mov
mov
adc
movsl
outsb
cmp
cmc
loope
inc
sbb
inc
add
dec
sarb
dec
fistl
mov
pop
jnp
inc
test
rcrb
cmp
fs
pop
sbb
add
lock
xchg
aam
pop
push
cmp
sarb
jb
adc
test
mov
clc
push
jae
add
outsb
mov
or
lret
js
sub
mov
es
dec
rorl
rcll
and
rcll
mov
ljmp
subl
and
mov
xor
jl
fwait
insl
mov
jnp
dec
push
rcll
sbb
int
xlat
add
ja
mov
adc
lret
cmp
fs
in
mov
aam
adc
pop
mov
xor
call
jge
mov
push
dec
ficompl
adc
daa
sti
jecxz
mov
mov
or
pop
mull
scas
mov
xor
hlt
std
js
push
cs
dec
xchg
mov
sti
stos
or
push
hlt
push
ret
mov
sub
aam
aaa
adc
xor
push
dec
movsl
push
push
and
and
mov
lock
xchg
ret
xchg
aas
out
test
sbb
loope
cli
mov
sbb
mov
cmp
aas
adc
xchg
sbb
ja
push
jmp
and
test
inc
inc
dec
cli
sub
movsl
fdivl
lods
insl
enter
stos
dec
movsb
roll
cli
orb
pop
xor
jmp
sbb
icebp
jae
jns
jmp
test
push
sbbb
out
ret
mov
test
cmpsl
pop
jecxz
sub
popa
mov
xor
sbb
arpl
pop
sar
mov
dec
add
imul
sub
lds
ret
jae
xor
inc
and
jecxz
iret
sbb
xchg
mov
ds
xor
mov
and
shll
cmp
jbe
push
jb
in
pop
insb
mov
xchg
pusha
nop
and
jg
and
add
mov
adc
mov
test
cmp
arpl
dec
dec
xor
jmp
int
lret
cmp
jno
lods
add
stos
mov
int3
cld
jne
mov
je
out
shlb
or
dec
mov
iret
cld
xor
out
pop
pushf
pushw
sub
cwtl
mov
push
cmpsb
add
jae
sub
pop
xchg
test
dec
mov
mov
mov
ljmp
or
cmp
jle
loope
jno
in
jae
inc
scas
repz
rcrl
mov
cltd
imul
inc
imul
mov
mov
int3
jl
xchg
push
mov
sbb
fisttpll
lea
jnp
and
cmc
hlt
test
lea
fsubrl
pop
aas
int
shlb
and
addb
cs
inc
cmp
inc
movsl
add
dec
test
inc
xchg
fnstenv
andb
push
xchg
rcl
jo
pop
fnstenv
push
int3
loope
jmp
push
xchg
and
aas
repnz
ljmp
jl
inc
or
fists
or
ret
xor
jp
data16
outsl
xor
pushf
inc
outsl
sbb
cmp
pop
fildll
out
lcall
push
nop
sbbl
cmp
jns
leave
and
sbb
push
push
mov
xor
xchg
mov
push
sub
adc
jecxz
call
lahf
xchg
fstpt
adcl
xchg
mov
test
pop
out
in
ljmp
mulb
cmpb
int
lahf
mov
add
les
ja
outsb
test
fsts
imul
ficoml
xorb
sub
sub
ja
add
shl
dec
push
or
jle
loop
jmp
pop
jp
nop
repnz
rol
stos
jbe
mov
scas
and
popf
in
jbe
xchg
add
insl
cmp
or
mov
or
jne
jae
std
jl
sub
std
push
test
xlat
sub
out
in
xor
ja
mov
arpl
or
and
aad
mov
xor
movsb
ret
fsubs
pop
popl
push
add
cwtl
cmpsb
nop
fnsave
xor
into
and
mov
out
add
sbb
rorl
dec
das
sub
into
fs
insb
xor
jb
inc
movsb
xor
lret
mov
sbb
pop
mov
lret
push
test
mov
loope
mov
out
pop
lahf
leave
push
test
jnp
hlt
in
popl
sti
jl
test
lods
mov
out
mov
lock
test
jns
add
sbb
movsl
sarl
mov
push
sbb
xchg
adc
std
xchg
mov
pop
cld
add
pop
pop
cmp
dec
arpl
mov
xchg
pop
gs
mov
pop
adc
sub
sbb
cmp
xor
push
rolb
pop
xchg
cmc
arpl
aas
in
or
dec
pop
movsl
mov
and
xor
sub
xor
mov
imul
add
push
push
out
js
cmp
incb
add
loopne
or
fistpll
scas
add
mov
rorl
ret
pop
out
mov
imul
pop
mov
ret
jge
test
push
aas
imul
leave
xchg
pop
int
lods
mov
fmul
mov
sub
add
jne
inc
push
adc
es
mov
lds
sbb
mov
xor
lahf
adc
test
push
dec
mov
fiaddl
jb
adc
aaa
ljmp
outsl
aas
adc
jo
movsl
jge
ja
xor
jmp
imul
xor
pop
mov
sub
jae
jecxz
push
pop
jmp
icebp
idivl
je
adc
pop
or
nop
pop
adcb
sub
sub
push
mov
sbb
xchg
and
mov
aad
orb
and
xor
movsl
add
mov
outsl
dec
pop
or
mov
testb
fistps
insb
in
mov
mov
pop
fstps
pusha
out
data16
sbb
dec
sub
push
sbb
cmp
adc
mov
jl
cwtl
cmpsb
insb
inc
lods
lds
repnz
sub
dec
and
cs
adc
push
insl
sbb
rol
clc
mov
mov
mov
decl
daa
aam
dec
lock
push
fisubrl
fisttpll
int
es
gs
or
mov
insl
xor
inc
jbe
adc
out
ja
dec
les
xchg
or
xorl
les
loop
aad
push
add
push
lds
ret
rcl
add
inc
inc
xchg
push
ja
push
aad
jecxz
sub
bound
in
add
ret
aam
mov
push
push
push
inc
imul
adc
mov
or
mov
mov
push
inc
test
out
or
out
outsl
mov
aad
imul
cmpsb
movsl
xor
les
pushf
rolb
xchg
inc
sbb
mov
jne
push
push
subl
hlt
fwait
mov
stos
pop
inc
mov
cmp
push
repnz
pop
fdivs
cmpsb
pop
clc
add
lret
push
pushf
dec
cmpb
push
push
push
push
mov
pop
xchg
xchg
add
mov
sub
and
lods
ss
sub
bound
pop
cmc
inc
inc
fidivrl
pop
insb
icebp
repz
dec
les
mov
mov
mov
icebp
sbb
push
xor
out
cmp
xor
sub
aad
icebp
sub
pop
frstor
adc
inc
push
lret
rorl
jne
je
iret
or
mov
lret
sbb
mov
sub
lock
lret
jg
test
dec
out
inc
ficompl
cmp
push
fbstp
sete
xchg
pusha
push
dec
jb
int
xlat
int
xchg
test
adc
add
pop
or
repz
ret
pop
in
adc
mov
sbb
movsb
loope
clc
out
cwtl
inc
scas
stos
aad
dec
xlat
aad
daa
mov
pushl
pop
test
imul
push
movsb
dec
cmp
mov
cmpsl
xchg
sbbl
int3
dec
sub
add
lcall
jge
mov
xor
sbb
xchg
or
push
pop
dec
add
xor
sarl
mov
push
gs
push
pop
add
add
imul
fsubrl
inc
sahf
jbe
nop
mov
mov
pop
outsl
mov
mov
jmp
sti
repnz
sbb
mov
fs
pop
mov
mov
repz
fisubs
lahf
push
and
inc
jbe
shll
pop
or
and
mov
das
sub
mov
iret
push
adc
aam
push
repz
adc
jo
sub
arpl
mov
mov
aad
cmp
rcrl
mov
and
or
mov
and
lahf
js
ret
push
pop
addr16
xlat
scas
jle
inc
icebp
sbb
pop
lods
xlat
nop
lds
xlat
leave
pop
jae
pop
inc
ljmp
imul
jbe
xor
push
jno
loop
dec
fistl
mov
inc
popf
xchg
sub
add
jne
or
bound
dec
adc
nop/reserved
pop
pop
sub
jbe
fcomps
dec
ret
movsb
popa
push
sub
js
popf
xor
jp
adc
cmpsb
mov
icebp
and
cwtl
cmp
sub
xor
sub
mov
aas
add
aas
adc
cmpsl
push
scas
mov
inc
std
adcl
dec
call
dec
dec
mov
adc
pop
push
enter
push
or
jl
dec
mov
shlb
dec
mov
sbb
movsl
xchg
xchg
int3
sbb
cmpl
stos
add
jecxz
outsb
pop
jo
or
pop
jle
rorl
fldcw
out
mov
xchg
xchg
adc
dec
cmp
inc
repz
xor
and
mov
out
pop
push
mov
es
xchg
sub
rolb
or
adc
jne
add
scas
fbstp
jle
push
movsb
je
xchg
cld
push
mov
and
imulb
xor
and
fwait
or
push
aaa
mov
and
loope
push
cmpb
gs
dec
icebp
cmp
pop
hlt
pop
mov
fcmovnbe
sbb
rolb
push
sti
dec
addb
das
pop
into
mov
dec
cmpsb
dec
dec
ljmp
in
jo
loopne
add
outsb
cmpsb
dec
packuswb
sti
jne
ljmp
rcrl
popf
loop
rcl
adc
adcl
idivl
mov
and
mov
repnz
push
and
push
cmpsl
xchg
in
test
clc
adc
stc
xacquire
decl
clc
add
jae
lea
mov
sbb
pop
popa
sahf
stos
push
scas
in
outsl
js
cmp
roll
pop
aam
in
and
sub
sbb
xlat
pop
andl
aam
in
sbb
bound
std
lock
or
push
loope
daa
jb
pop
add
mov
inc
stos
into
loopne
lea
mov
mov
xchg
sbb
insl
pop
jns
je
movsl
sub
enter
adc
and
cld
mov
lds
push
cmp
addr16
sti
mov
dec
mov
mov
jl
sbb
test
jne
les
pop
ja
movsl
and
and
inc
adc
push
dec
outsl
movl
pop
pop
shlb
js
rcl
frstor
scas
fs
lcall
je
lock
xchg
mov
cmp
iret
int3
pop
addb
negb
jmp
sbb
out
clc
lds
push
sbb
pusha
adc
ret
push
push
fidivs
or
push
inc
mov
mov
push
mov
mov
sub
xor
mov
subl
popa
mov
adc
daa
negl
fistl
filds
jae
test
ljmp
orb
test
lret
xchg
scas
pop
and
adc
aad
cmp
mov
outsb
mov
mov
xchg
enter
popf
cmpsl
or
and
pop
adc
adcb
mov
clc
fstps
push
mov
ds
icebp
cmpsb
mov
xchg
inc
test
push
shrb
pop
daa
imul
inc
hlt
loope
inc
mov
or
cmpsl
cli
add
and
adc
in
divl
mov
mov
xchg
pop
sti
lods
xlat
lds
shld
dec
gs
fiadds
pop
lods
popa
in
ss
inc
int
sub
hlt
pop
add
idivl
xchg
mov
xor
or
mov
pop
jle
je
adc
fnstenv
pushf
cmp
cmp
jns
aaa
ja
out
cmp
shl
and
cld
fimuls
sbb
fadd
fwait
clc
xchg
pop
les
jo
xor
adc
cmpsb
movsl
sbb
xor
jbe
dec
imul
pushf
xchg
daa
jmp
sub
add
or
inc
cli
test
out
mov
aam
jecxz
ret
sbb
ja
in
sub
sub
test
xchg
aaa
ljmp
mov
and
push
mov
pusha
aaa
fs
pop
or
js
inc
in
mov
mov
adc
arpl
lds
inc
adc
int
mov
sub
jbe
outsb
aad
adc
push
cmpl
cmpsl
lds
rorb
xor
mov
mov
or
mov
and
add
incl
push
cmp
pushf
mov
xchg
imul
imulb
xchg
mov
push
sbb
jns
leave
xchg
add
cltd
mov
dec
pop
into
push
push
nop
mov
out
out
push
insb
loope
cltd
bnd
cmpsl
lahf
jp
push
lock
push
xlat
push
cmp
cmp
aam
adc
outsl
movsb
mov
or
inc
call
mov
push
cmpsb
sub
cmp
push
arpl
imulb
sbb
mov
stos
test
sub
out
in
mov
popa
fnsave
and
xor
inc
sub
ja
ret
xchg
add
push
fadds
test
repnz
push
jbe
inc
or
cld
imul
push
out
iret
test
addr16
fdivl
cmp
test
jmp
add
js
jbe
adc
mov
loop
push
add
and
cmpsb
dec
push
insb
xchg
sti
jns
xor
nop
in
add
and
mov
push
adc
jne
fsubs
cmp
sbb
cmp
mov
hlt
mov
rorl
mov
aaa
hlt
int
fstl
sbb
xor
mov
test
jae
lret
push
stos
mov
xor
lods
mov
cmp
iret
adc
pop
aam
mov
lret
and
adc
iret
xor
movsb
lret
dec
nop
mov
jl
push
cwtl
pop
les
jb
and
arpl
inc
jge
jne
push
sbb
aas
or
stos
jmp
adc
mul
repz
test
fcoml
ja
sub
jne
push
jns
sbb
xchg
mov
repz
or
pop
cmp
adc
lods
mov
push
popf
mov
arpl
or
loop
sti
int3
jne
stc
shlb
adc
push
inc
cmp
jno
dec
push
sub
pop
aad
mov
mov
mov
xchg
leave
sbb
mov
subb
call
cwtl
ret
push
int
adc
rdtsc
xchg
in
or
xchg
lods
imul
std
mov
xor
ret
mov
push
test
mov
cmp
mov
inc
mov
cmp
or
sbb
jbe
pop
movsl
sub
bound
leave
xor
das
outsl
push
xchg
les
mov
push
xchg
je
repz
jae
aam
adc
insb
lea
sub
jae
gs
xchg
xor
add
icebp
push
adc
inc
xchg
ret
pusha
inc
mov
pop
cwtl
xlat
cmp
add
mov
mov
enter
add
js
pusha
lahf
lock
push
push
adc
sahf
incb
add
or
enter
repz
sub
xor
push
pushf
rcl
or
shlb
testb
xchg
stos
test
icebp
dec
fiaddl
dec
and
mov
mov
fnstenv
imul
outsl
sub
and
jp
jb
stc
cmc
out
sub
or
fistpl
mov
or
inc
bound
fstpl
popf
test
inc
repnz
xor
mov
adc
scas
pop
test
int3
or
xchg
shr
mov
leave
outsl
pushf
sub
in
inc
roll
scas
cli
xchg
cwtl
gs
xlat
jbe
sahf
fisubrl
cmc
xor
or
push
popa
mov
bound
jmp
movsb
test
inc
in
negl
js
test
inc
adc
jecxz
push
cmpsl
push
movsb
pop
cmp
and
shl
pop
mov
int3
and
pusha
aam
xchg
or
sahf
mov
lods
out
and
stos
xor
push
mov
ror
sub
in
mov
adc
aaa
movsb
insl
lcall
xchg
leave
loopne
add
adc
mov
ror
stos
push
sub
mov
js
mov
pop
jge
xlat
rcrl
inc
out
mov
mov
pop
repz
xchg
jl
ja
repnz
adc
aam
mov
jp
std
fisttps
inc
leave
scas
or
jle
push
stos
mov
sbb
aad
mov
dec
repz
test
orl
add
fistpl
rcrl
gs
shll
je
lahf
loope
push
pop
out
loop
mov
push
imul
dec
jge
pusha
nop
add
or
test
loop
xchg
jns
outsb
icebp
fimuls
rol
rorl
jle
in
ljmp
lret
push
push
mov
enter
insb
int3
sahf
mov
jecxz
shl
mov
iret
rcrl
inc
adc
out
and
push
sti
into
jbe
xor
xchg
and
icebp
sub
or
test
inc
sub
pusha
iret
xor
nop
cmp
pop
xchg
adc
dec
nop
mov
xchg
or
cmp
push
mov
xor
push
inc
test
and
cmp
mov
cwtl
out
push
lcall
insl
mov
fmuls
sahf
sub
jb
mov
sbb
dec
xchg
ds
sub
xor
or
xor
fisttpl
in
xor
jl
scas
pop
pop
or
pop
aam
aam
dec
cs
xlat
shrb
inc
push
xchg
pop
cs
mov
shlb
je
pop
jecxz
pop
call
cmp
adc
cmpsb
scas
mov
xlat
cwtl
xor
jns
movsl
push
mov
clc
sbb
or
lret
xor
test
push
xchg
and
add
in
push
mov
jbe
adc
mov
mov
cmpb
jecxz
loop
or
icebp
push
jmp
stos
dec
ds
sub
sub
xor
adc
xchg
push
movl
dec
jle
arpl
divps
pop
je
mov
nop
mov
adc
mov
push
sbb
xchg
add
xchg
daa
jge
and
mov
cs
aaa
and
dec
dec
xchg
sti
sarl
push
fcmovne
fsubl
cltd
ret
or
hlt
cld
imul
mov
or
lds
cmp
dec
inc
and
pop
cs
lcall
mov
xchg
or
mov
mov
fisubl
mov
dec
out
xchg
pop
mov
sub
shr
movsb
pushf
cltd
imul
lahf
clc
dec
arpl
pop
cmp
dec
pop
fdivl
popf
out
fimull
aaa
aaa
sahf
fwait
xchg
inc
adc
xor
cld
add
adc
push
adc
enter
ds
bound
repz
imul
mov
loopne
fdiv
in
ds
adc
pop
inc
mov
js
das
aaa
mov
mov
sbb
movsb
add
ds
cmp
test
je
mov
ja
negl
push
icebp
add
mov
jno
test
loope
sahf
sahf
add
mov
movswl
pusha
stc
pop
es
subb
out
jecxz
add
imul
enter
sbb
js
adc
aad
addr16
in
daa
jp
pusha
push
out
cmp
lahf
xchg
cmpsb
dec
mov
mov
cmp
sbb
or
lahf
mov
add
lods
movsb
rorb
mov
aas
pushf
leave
xor
loop
rolb
dec
jae
mov
jnp
sti
shl
lods
cmpsb
outsl
pop
pusha
push
and
rep
xor
sbb
jb
in
repz
xor
inc
test
push
mov
int
jae
shrl
out
mov
pop
dec
aaa
lock
lret
lock
pop
enter
pop
mov
push
push
mov
je
jae
xor
das
je
sbb
lea
jmp
mov
in
cmp
rorl
stos
fstpt
inc
xchg
je
mov
and
sti
xor
jmp
ds
push
popf
push
push
insl
or
sbb
dec
mov
mov
mov
mov
push
push
pop
and
test
cmp
inc
rolb
nop
adc
push
fidivl
add
sub
xor
test
jno
imul
push
adc
and
xchg
mov
add
push
bound
cld
sub
fidivl
ja
mov
pop
pusha
lcall
cli
xchg
xor
jmp
movsb
adcb
notb
addb
xchg
imul
cmp
jns
push
cltd
adc
pop
out
shlb
test
cmp
xor
cmp
movsl
or
sbb
cmpsl
jae
jecxz
cmp
lods
inc
mov
mov
inc
insl
test
jae
lcall
inc
xor
lahf
adc
mov
xor
jmp
adc
daa
rorl
xchg
lods
cmp
xchg
pushf
mov
dec
bnd
imul
jle
pop
loope
push
stos
loope
dec
fcmovnu
shr
cmp
push
das
fimuls
fwait
or
sbb
mov
push
xchg
mov
cwtl
sarl
xchg
mov
mov
mov
call
ss
push
push
in
jmp
jne
jmp
or
ss
inc
sbb
rcl
dec
pop
mov
sub
dec
insl
pop
outsl
jp
sahf
sbb
mov
lods
cwtl
sbb
stc
aad
leave
xchg
pop
insl
cmpsb
dec
push
mov
push
in
jae
jnp
movsl
ss
jnp
push
imul
sbb
inc
cld
and
mov
mov
push
cmp
fdivl
dec
jb
mov
movsl
stos
insl
cltd
cmpb
gs
push
inc
movsb
clc
mov
pop
xchg
outsb
add
test
pop
xchg
sub
lods
les
aad
cmp
imul
mov
pop
cwtl
jae
xchg
or
imul
jmp
push
rorl
in
mov
inc
enter
pop
mov
mov
call
cmpsb
push
and
out
xor
mov
fidivl
mov
push
into
or
ret
mov
sarl
les
fcomp
push
dec
cmp
and
push
xlat
mov
mov
lret
adcb
push
sub
jne
inc
jg
adc
popa
jbe
test
in
std
arpl
xchg
and
mov
jb
std
loopne
cmp
out
sbb
mov
jmp
push
scas
pop
inc
sbb
rcl
adc
cmp
stc
pop
xchg
jnp
test
add
and
fs
gs
loope
popf
or
imul
cmp
jno
iret
scas
add
cmp
pop
ret
dec
dec
in
adc
and
xor
loopne
and
push
adc
inc
cmp
mov
icebp
popa
cmp
mov
xchg
in
inc
mov
xchg
nop
sbb
dec
mov
cwtl
inc
push
int3
cli
adc
lock
mov
adc
je
mov
xchg
mov
jns
sub
out
hlt
dec
cmp
jle
lds
sti
fcomps
xchg
dec
jmp
pop
sbb
stos
sub
xor
fistpll
scas
std
call
cli
or
inc
loop
pop
dec
adc
mov
mov
pop
jl
and
stc
in
and
adcb
inc
push
fucomi
sub
mov
lods
lods
mov
adc
aaa
and
cmp
dec
flds
jmp
mov
adcb
divb
mov
lea
popa
cld
adc
xchg
push
not
push
or
ss
mov
inc
out
mov
out
jg
enter
bound
imul
mov
lret
jmp
mov
in
lea
daa
pop
stc
sbb
mov
mov
js
das
cmpsl
jno
scas
stc
jg
notb
test
cltd
das
mov
cs
sub
enter
sub
lods
je
cli
xchg
xchg
insl
dec
addr16
push
mov
roll
lahf
test
xor
test
jle
jge
adc
mov
push
repnz
push
sbb
xor
adc
in
mov
dec
adc
repnz
mov
stc
test
dec
mov
rcl
ss
and
je
mov
pop
inc
or
cmp
mov
es
sahf
in
test
add
pop
add
jo
adc
lods
mov
push
jbe
loop
lret
mov
jae
and
subb
mov
insl
lret
out
dec
daa
adc
xchg
inc
stos
out
cmpsl
repz
imul
test
push
jns
mov
jge
cmp
inc
fs
shrl
sarl
andb
or
or
cli
xchg
lds
stc
lret
lret
pop
in
div
das
sbb
cltd
stos
mov
shll
cwtl
and
js
and
push
cmpsl
xchg
mov
call
and
and
add
int3
orb
sar
mov
sbb
mov
adc
push
fildll
das
dec
fsubr
cld
or
fldl
jle
dec
scas
add
pop
gs
and
inc
cmp
out
in
fld
mov
loope
xor
push
and
xlat
mov
jbe
test
test
sbb
add
xor
adc
inc
xor
or
mov
push
gs
in
lock
dec
xor
repz
cmp
lcall
and
cmc
fbstp
out
int
adc
mov
push
sbb
fistpl
mov
nop
add
mov
xlat
pop
out
cwtl
ret
icebp
mov
mov
int
add
jg
fldl
mov
jae
sahf
inc
cwtl
sbb
xchg
mov
xor
sbb
xchg
xchg
in
mov
pop
lock
fldcw
ljmp
shll
pop
inc
mov
cmp
jle
cld
es
fcom
mov
aad
ucomiss
cmp
mov
in
xor
sbb
popf
xchg
ss
add
leave
lds
cmp
in
shrl
testb
sbb
pop
xchg
pop
mov
in
dec
xor
in
and
xorl
into
jne
aas
lock
push
loop
sbb
je
lret
push
in
aad
jae
mov
out
leave
push
add
mov
adc
ficompl
fmull
sub
daa
ljmp
dec
test
dec
mov
lea
je
mov
pop
js
push
mov
and
jg
mov
jns
aas
xchg
lea
cmp
adc
adc
loop
or
and
xorb
ljmp
insl
cld
jno
xor
icebp
test
xor
pop
mov
xchg
icebp
testl
popa
jg
and
lock
stos
jle
std
cmp
outsb
cmp
sbb
mov
scas
test
jne
jne
imul
popf
add
jb
or
adc
test
jmp
xor
mov
cli
dec
dec
xchg
movsb
pop
add
aas
pop
movhps
mov
xor
pop
test
push
xchg
add
imul
fcoms
mov
inc
stos
push
push
push
and
and
xchg
pop
ret
jmp
in
dec
and
mov
addr16
xchg
xchg
movsb
testl
pusha
mov
mov
pop
icebp
loop
frstor
inc
aas
or
xchg
movsl
add
sbb
push
or
ljmp
test
jmp
mov
mov
mov
mov
test
jne
mov
and
call
std
inc
jo
mov
rorb
inc
test
cmp
cmp
lahf
clc
sarb
jbe
por
shrl
gs
lds
sub
out
sbb
adc
lahf
fwait
iret
loope
pop
andb
ljmp
xchg
bound
push
sbb
int3
push
and
pop
and
xchg
ljmp
cmpsb
adc
sbb
xor
pop
bound
push
ffree
les
sub
mov
les
fadds
xor
out
stc
je
ss
icebp
out
dec
push
add
popf
out
cld
inc
inc
lea
jmp
pop
hlt
push
les
in
out
shll
or
data16
fwait
mov
lea
sub
inc
inc
xor
movsl
lret
outsb
jg
sub
imul
das
test
inc
notl
jecxz
cld
rcrb
jb
movl
add
mov
and
and
orl
adc
stos
or
cmpsb
pop
aad
mov
and
arpl
push
ljmp
shrb
das
add
pop
fiadds
andb
int3
xchg
mov
popf
jmp
arpl
mov
cli
sbb
ljmp
les
sub
mov
push
jle,pn
insb
test
pushf
jo
mov
xor
xchg
lret
xlat
pop
sub
pushf
cmp
lea
lret
xor
mov
nopl
xchg
jge
xchg
push
lret
in
xchg
jmp
lods
jmp
stos
inc
testb
xor
out
ret
repnz
or
sbb
lods
inc
mov
fs
dec
mov
mov
push
loop
pop
mov
inc
repz
out
in
sub
inc
fistl
jo
popf
es
bound
mov
jl
movsb
test
jo
cmp
and
pop
je
cmpsb
pushl
jbe
repnz
and
in
jmp
shl
in
sbb
stc
cmc
cmp
hlt
dec
sbb
jp
mov
dec
mov
out
dec
stos
or
pop
cmpsl
jnp
movsb
xchg
pushf
ja
rcrl
jmp
in
js
xchg
push
mov
sbb
lret
jne
xlat
dec
incb
test
sub
nopl
mov
mov
dec
xchg
fiaddl
xchg
cmpsl
mov
or
scas
out
movsb
dec
sbb
push
push
lcall
sahf
out
out
ror
ljmp
out
and
aad
add
inc
sbb
fdivrp
dec
ja
orl
jmp
and
sub
sub
pop
hlt
sub
jg
cmp
inc
std
shrb
inc
sbb
xor
xor
sar
jns
cmp
stc
ret
inc
dec
and
sub
xchg
mov
sub
lea
fstpt
mov
cmpsl
mov
das
or
dec
dec
xor
push
in
dec
and
lea
popaw
std
jge
fsubs
mov
mov
and
mov
push
sbb
loope
shll
push
hlt
dec
adc
mov
repnz
decb
xor
movsb
jns
in
std
and
test
in
test
cmp
hlt
aam
inc
jo
xchg
dec
lds
mov
in
jae
daa
xor
sbb
pop
mov
dec
xor
mov
pusha
imul
fsub
jno
out
pop
mov
cwtl
sbb
stc
inc
xchg
lods
sub
push
cmpsb
test
dec
ds
dec
ljmp
test
xchg
jae
mov
insb
pusha
pop
push
push
in
and
out
arpl
inc
mov
call
test
dec
stos
shrb
pop
dec
sbb
dec
mov
fcomip
mov
sbb
push
lret
inc
ja
push
pushf
dec
push
jae
add
xchg
pop
fistpll
ss
ss
stc
out
mov
lock
lcall
or
mov
dec
push
fnstcw
es
ret
je
and
das
jle
jno
jns
jg
xor
ficoms
dec
xor
fnstenv
ss
test
add
push
in
scas
addr16
mov
xor
clc
pop
mov
xchg
jno
pop
inc
arpl
jl
test
lahf
sbb
and
and
cmp
sarb
pop
int3
mov
iret
or
lock
into
shrl
je
mov
push
dec
cld
mov
push
lahf
enter
sahf
jecxz
mov
add
aad
mov
imul
inc
jle
sti
daa
imul
andb
pop
aad
mov
pushf
xchg
add
shll
clc
cmp
push
ficomps
rcrl
cmp
test
mov
inc
sbb
sti
pop
and
inc
lahf
xchg
mov
loopne
inc
cld
idiv
sbb
mov
mov
xor
imul
add
orl
pop
push
lcall
out
std
xor
idivb
mov
cli
fcos
sub
sbb
outsb
outsl
jae
sbb
jmp
pop
add
in
mov
cmpb
sbb
lret
xor
pushf
push
push
mov
testl
mov
push
loope
enter
xchg
imul
pop
testl
aas
in
xor
insb
add
cmp
mov
insl
aas
hlt
int
popf
push
xlat
xor
inc
push
cmpsb
cmp
imul
and
jne
fwait
mul
xchg
mov
or
imul
sahf
xchg
ss
inc
pop
mov
or
xor
adc
and
cmp
mov
ss
jae
adc
mov
mov
xor
outsb
adc
mov
aam
xchg
push
cmp
xor
lea
aam
stos
push
push
mov
pop
or
xor
sub
push
ret
sbb
xchg
cld
scas
xchg
pushf
lds
pop
fisubrs
push
repnz
and
sahf
popf
xlat
push
dec
movsl
test
jl
or
add
dec
push
in
nop
and
sbb
and
jno
cwtl
int
lods
imul
fs
jo
lret
jnp
add
mov
cmpsl
inc
inc
iret
jae
mov
ss
sub
imul
add
push
mov
cmp
jo
popf
jl
push
mov
in
xchg
ds
sub
ja
loope
ljmp
cmc
mov
in
insl
sub
inc
cmpb
add
out
lock
inc
inc
sub
jecxz
jg
jp
dec
inc
push
gs
stos
cmp
arpl
xchg
dec
in
pop
xor
sbb
adc
add
add
jmp
mov
sub
mov
adc
and
xor
or
inc
push
jbe
loopne
add
ja
pushf
divl
and
jne
bound
stos
aaa
hlt
stc
inc
inc
inc
repnz
xor
mov
ljmp
test
dec
or
push
and
or
int3
mov
pop
aaa
lret
pusha
push
pop
sub
and
jge
out
pop
inc
and
mov
lahf
push
call
push
mov
mov
mov
xor
pop
fs
repnz
sub
xchg
mov
and
sbb
test
cmp
cmp
sub
or
in
and
push
divb
insl
mov
and
std
xor
test
mov
mov
xchg
cmp
jbe
sbb
push
hlt
aas
jl
xor
pop
fists
inc
movsl
arpl
add
loop
rcr
pop
rcrb
jae
inc
push
dec
mov
inc
scas
cld
mov
sub
test
cmc
push
cli
sbb
sbb
inc
fnstsw
jmp
jno
mov
mov
gs
sahf
xchg
shl
lods
inc
sbb
xor
loop
ja
xor
cmpsb
adc
inc
ljmp
stos
add
ficomps
xor
pop
push
loop
sbb
orb
loope
shr
test
dec
test
dec
in
in
sbb
dec
jg
or
pop
mov
inc
dec
jbe
sub
jnp
or
aad
add
jg
inc
or
mov
test
subl
scas
pop
decl
adc
enter
dec
mov
pop
sti
iret
insb
xchg
push
adc
adc
cld
xchg
shlb
jnp
xorl
movsb
inc
mov
aas
sub
add
add
and
mov
push
mov
je
push
jmp
inc
xchg
inc
mov
lcall
and
inc
inc
push
int
fisubs
sbb
jnp
inc
cmp
inc
fs
inc
push
pop
or
mov
sar
stos
in
dec
or
dec
aaa
push
aas
shll
mov
push
jmp
xor
cmp
pop
xchg
ds
push
cld
fwait
push
mov
and
xlat
mov
ret
xchg
pushf
xchg
cmpsl
xor
add
mov
jl
inc
jle,pn
fwait
jo
xor
mov
into
add
and
int3
aas
pop
mov
stos
in
adc
or
sbb
mov
outsb
sub
sbb
out
dec
mov
xchg
cmp
adc
sbb
mov
mov
jmp
dec
jns
pop
pop
push
sub
pushf
inc
call
je
loopne
mov
sub
or
into
icebp
mov
jl
adc
fisubrs
insl
inc
pop
or
add
daa
ds
jno
sub
out
je
in
mov
int3
sti
icebp
and
dec
fnstcw
sbb
add
sbbl
mov
push
test
out
stos
cmp
push
leave
ljmp
pusha
mov
mov
add
mov
scas
dec
addb
aas
xor
in
push
inc
daa
xor
sti
pop
ja
ljmp
xor
fnstsw
pop
insl
sbb
sahf
aad
int3
sbb
lret
cmp
testl
adc
mov
int
hlt
das
inc
bnd
addb
mov
ss
mov
jecxz
js
ljmp
inc
enter
cmp
insb
stos
xchg
jecxz
sbb
add
xor
aaa
xchg
dec
cs
mov
rorl
int3
rcl
adc
pop
call
daa
sti
pushf
in
ret
outsl
ficompl
pop
cmp
xchg
jno
push
imull
insb
and
jmp
je
call
les
cltd
or
inc
out
xor
inc
pop
mov
sbb
gs
int
and
ljmp
and
push
jl
dec
pop
out
add
sub
lcall
push
sub
and
popa
cmp
addr16
loop
sbb
cmpsb
enter
shll
loopne
and
xor
test
in
inc
and
adc
sbb
pop
push
lret
push
xchg
adc
cmc
adc
and
and
icebp
pop
daa
scas
out
insb
xor
mov
in
movsb
scas
arpl
jl
rol
mov
cmp
pop
repz
gs
mov
mov
popf
loop
fbld
cmp
pop
cs
add
inc
out
push
or
add
xchg
jge
or
mov
mov
out
push
xor
adc
and
sbb
cltd
and
jno
sbb
mov
jno
addr16
loope
nop
adc
testb
jbe
mov
data16
dec
hlt
stos
and
nop
adc
add
or
fadds
fisttpl
jbe
mov
in
xchg
mov
test
mov
enter
fistpll
bound
and
mov
repnz
lods
jb
in
add
lds
push
rorl
outsl
dec
dec
jno
test
push
call
push
in
cmpsb
inc
in
movsb
pop
xlat
sbb
insl
jae
in
pop
cmpb
aas
les
aad
fldl
and
incl
in
int3
and
mov
sbb
clc
fldt
imul
inc
dec
loop
pop
into
inc
fidivl
or
push
xchg
push
adc
mov
inc
xchg
dec
or
lods
fbld
lods
shl
dec
enter
xchg
jecxz
push
sbb
sbb
aaa
xchg
xlat
lea
ds
test
jno
or
mov
adc
imul
adc
lods
pop
sub
int3
ret
dec
adc
movsl
cmp
std
frstor
fisubs
stos
jnp
imul
xchg
inc
mov
xor
cmp
jnp
rorb
push
and
pusha
pop
bound
lret
pop
adc
mov
mov
dec
mov
push
inc
jnp
adcl
push
aam
mov
dec
mov
inc
and
jmp
mov
fcompl
hlt
mov
pop
fdivrl
ds
mov
push
ret
jl
inc
mov
inc
fnstsw
pop
int3
pusha
cmpsb
ljmp
popf
sbb
push
mov
cmp
ret
dec
push
inc
mov
xor
adc
loope
ja
ss
lahf
les
and
jbe
sub
out
rorb
inc
out
nop
lahf
shl
jns
ret
xchg
inc
jmp
mov
lds
not
ljmp
scas
xlat
xchg
and
movsl
inc
inc
inc
pop
dec
cmp
int
stos
add
cmp
dec
cmpsl
mov
xchg
in
push
loopne
xor
dec
dec
jnp
inc
mov
scas
outsb
pop
mov
adc
scas
jb
test
adc
outsl
dec
sahf
xchg
mov
in
aad
and
stc
push
movsb
hlt
insb
test
stos
inc
pop
xchg
jo
inc
pusha
fs
mov
leave
cmp
xchg
mov
mov
into
cwtl
and
sbb
fdivp
mov
mov
inc
les
xor
aam
insb
faddl
adc
int
pusha
xchg
mov
mov
cmp
mov
insb
clc
enter
mov
add
push
fwait
jo
mov
push
adc
sub
inc
mov
cmp
sbb
push
or
dec
je
xor
add
adc
xchg
jmp
cmpsb
insl
test
mov
fsubrl
into
push
mov
or
lret
adc
or
rcl
test
clc
fldt
push
loop
jl
push
cmpb
jo
xchg
jbe
xchg
mov
lret
iret
push
push
jnp
sbb
fnstcw
ljmp
subl
inc
cs
jno
jecxz
fcoms
daa
imul
inc
fisubrs
popf
inc
xchg
lret
pop
insl
movsl
repz
jle,pt
testb
mov
jae
cmpsl
mov
fs
out
cli
pop
call
bound
xchg
adc
mov
jecxz
mov
and
mov
inc
js
cmp
arpl
and
sub
cwtl
inc
lds
lods
nop
jns
std
mov
cmp
pop
push
push
lcall
lods
subb
jmp
or
pushf
push
xor
jo
pop
mov
mov
cltd
sbb
push
push
pop
iret
rolb
jns
ror
lfs
pop
mov
dec
dec
stc
cld
xchg
fnsave
dec
lock
push
cltd
sbb
jae
arpl
pmullw
sarb
xchg
sbb
dec
xor
mov
int
int3
mov
les
lahf
xchg
xchg
arpl
test
dec
test
sahf
iret
mov
push
mov
call
pop
or
sahf
rorb
push
in
movsb
or
adc
add
iret
clc
jmp
push
cmpsb
arpl
test
js
in
popa
icebp
xchg
call
fs
cmp
mulb
pop
cmpsl
push
jecxz
inc
jecxz
push
mov
mov
loopne
repnz
pop
jno
insl
xchg
dec
call
aas
mov
mov
dec
mov
movsl
daa
gs
cld
jbe
movsl
fisttpl
out
cmp
adc
mov
inc
test
call
mov
pop
out
lods
nop
nop
sub
sti
popa
mov
sbb
add
xor
or
idivl
imul
aaa
sbb
test
push
mov
mov
add
cmp
sub
pop
xchg
cwtl
test
adc
lods
add
xor
fsubs
cltd
insb
jb
pop
insl
daa
div
fs
cli
mov
sbb
in
movlhps
mov
mov
lret
adc
cmp
mov
push
and
sti
add
aam
scas
push
add
lods
orl
xchg
xchg
mov
add
stos
xor
xchg
fldenv
call
mov
lea
add
repnz
into
xchg
cmp
enter
into
sub
jp
mov
mov
add
outsb
out
lock
jae
lahf
repz
jns
xchg
xlat
inc
jecxz
rorl
in
das
and
addr16
xchg
lods
jp
or
dec
scas
pop
mov
insl
lods
out
js
and
andb
testb
popa
dec
insb
out
roll
mov
aas
pop
je
popa
or
push
hlt
fcoml
insb
push
xchg
cmp
push
shl
xor
out
or
xor
xchg
pop
in
pusha
cli
mov
mov
pop
je
mov
fwait
lds
in
pop
pop
pop
cld
clc
out
mov
decb
or
iret
scas
lods
cmp
jge
rolb
xchg
sbb
outsb
movsl
das
fdivp
mov
orl
adc
dec
in
cmp
int3
push
aas
sbb
push
fimuls
inc
push
mov
mov
cwtl
jge,pt
rorl
push
pop
push
cmp
andl
inc
xchg
xlat
pop
cmp
jb
in
mov
nop
jo
lret
cmp
or
icebp
push
mov
xor
xchg
and
mov
jge
xchg
xlat
mov
xchg
push
jo
xchg
pop
imul
pop
enter
mov
pop
mov
xor
jmp
and
lods
movsb
pop
adc
lock
hlt
bound
fistps
dec
xchg
pop
and
pushf
mov
xchg
movl
data16
pop
in
sub
lea
add
fcmovnb
adc
push
aad
sysenter
pop
test
aas
lcall
inc
mov
adc
add
jmp
inc
mov
adcl
clc
cmc
clc
iret
out
loop
xor
pop
add
add
add
lret
hlt
subb
bound
iret
lahf
push
mov
mov
cmpsl
int3
ss
cmp
sbb
cs
lock
sub
mov
ljmp
mov
repnz
test
sbb
mov
shrb
and
jp
push
inc
addr16
idivb
loope
inc
out
out
mov
fsubl
push
bound
mov
sub
loopne
arpl
scas
mov
clc
test
inc
and
push
sbb
push
pop
mov
icebp
xchg
movsl
fadd
std
cmp
jae
clc
sarl
xchg
out
enter
mov
mov
cltd
jge
addr16
add
pop
hlt
mov
xor
xor
scas
mov
pop
out
in
lret
mov
cmp
xchg
sbb
ret
stc
fs
fnstcw
in
leave
fildl
add
mov
adc
hlt
fistpl
cwtl
dec
mov
mov
xor
js
inc
mov
mov
icebp
and
inc
fsts
js
out
sbb
pop
iret
cmp
push
in
insb
cltd
insb
pop
xchg
mov
xchg
cmp
xchg
add
xchg
iret
sub
push
xor
xchg
sbb
movzbl
adc
fcoml
jns
and
lcall
xchg
lret
in
lds
fwait
sub
shr
xchg
mov
test
dec
inc
push
cmpb
mov
mov
mov
repnz
fucom
stos
lock
cmp
xchg
fcmovne
dec
add
sbb
dec
in
test
loop
movsb
mov
pop
popf
dec
frstor
xor
mov
inc
jmp
cmc
fidivrs
les
dec
inc
push
int
mov
into
adc
mov
sub
ja
xor
sar
xchg
xchg
subb
pop
mov
clc
inc
adc
pop
jecxz
roll
dec
ljmp
gs
andb
mov
mov
xchg
pop
pop
mov
sub
jae
mov
push
mov
cwtl
add
iret
emms
ss
inc
test
jnp
mov
popa
repz
ss
lods
ss
add
movsb
lret
aad
inc
fldt
pop
mov
fmull
lahf
push
in
ror
and
test
push
xchg
ds
push
mov
cmp
fwait
xor
dec
mov
jg
lret
pop
ljmp
fwait
out
ret
xor
js
cmp
cmp
test
push
cmpsb
jge
into
mov
imull
lret
pop
or
pop
sbb
cld
xlat
xor
sbb
inc
ljmp
dec
stos
popa
push
lahf
in
fidivs
stc
scas
add
dec
adc
in
mov
int3
pop
lds
pop
push
cli
test
push
rclb
pop
dec
rorb
cmc
int3
stos
pop
add
scas
jb
out
jne
stos
mov
lret
jmp
pop
cwtl
push
rolb
push
subb
adc
mov
test
stos
and
ljmp
outsb
jns
movsb
mov
pop
fwait
test
mov
inc
inc
or
xor
jg
push
push
pop
push
imul
shll
les
outsb
ret
xchg
das
mov
or
xchg
pop
and
stos
sbb
or
push
mov
out
add
daa
jo
jle
imul
adc
push
sbb
mov
cmp
insb
loope
cs
and
or
mov
addr16
xchg
xor
sub
pusha
cmp
insl
cmpsb
int
xchg
sarb
push
je
and
xchg
in
imul
inc
imul
jae
jbe
fdivrs
fnstsw
cmc
fcmovnu
scas
xchg
shl
dec
dec
sbb
rcl
outsl
out
jl
jmp
fisubrl
stc
jmp
and
pop
fnstcw
andl
mov
push
imul
dec
out
adc
cltd
push
xor
inc
sub
insb
mov
int3
xchg
cwtl
sub
fldz
addb
sub
push
xorl
leave
sbb
mov
mov
push
ret
popa
fdivrs
push
data16
fldln2
xchg
xchg
mov
xor
loop
mov
pop
inc
mov
roll
fisttps
pop
in
push
mov
xor
dec
cmpsl
lret
inc
adcb
shl
pop
test
ret
inc
jmp
in
sbb
add
jge
int
test
cmp
sbb
mov
int3
shrb
mov
jne
mov
imul
cmc
inc
shl
sahf
sub
loop
mov
loop
add
push
push
je
movsb
push
jge
push
fabs
or
and
das
std
mov
mov
clc
jle
ret
sbb
cmp
sub
shrb
pop
xchg
clc
int3
ss
inc
jno
add
and
pusha
mov
jg
mov
mov
ss
sbbl
add
and
mov
test
cltd
ds
fsubl
movsb
lcall
mov
xlat
lds
jmp
jne
int3
das
mov
pop
and
ja
into
push
movhps
xchg
cmp
sbb
mov
leave
cmpsb
repz
xor
lods
xchg
or
ret
lret
je
or
cwtl
mov
mov
cs
push
push
xchg
jmp
inc
mov
dec
add
mov
mov
sub
les
loopne
movsl
mov
mov
pusha
out
int3
repnz
xchg
add
orl
jns
arpl
loopne
sarb
jb
outsl
mov
mov
aam
push
pop
xlat
sti
arpl
mov
xor
ficomps
lahf
inc
fidivrs
pushf
mov
movsb
add
push
push
fnsave
lahf
mov
outsb
sub
jns
dec
fbstp
add
cmpsl
mov
punpcklbw
pop
add
test
stc
mov
pop
sub
cmp
mov
dec
aaa
in
popf
sbb
aam
shrl
icebp
mov
sub
and
out
mov
fcmovne
das
push
je
std
mov
aad
out
movsb
mov
xchg
ficoms
xchg
test
jp
addr16
pop
jb
pop
jbe
mov
jp
inc
cmp
loopne
inc
lret
outsb
lea
adcb
decl
jmp
nop
xchg
mov
jne
into
cmpb
stc
mov
std
stos
in
icebp
jl
in
data16
in
sbb
inc
insl
decl
dec
or
mov
loope
insb
push
in
xchg
push
in
fnsave
pop
push
test
loope
lahf
inc
and
mov
jns
in
clc
in
dec
lods
stos
call
cmp
or
push
mov
or
sti
push
rcl
cmovns
std
insb
shll
rcll
sbb
insl
adc
mov
in
lahf
inc
dec
xchg
lods
fists
xchg
sahf
mov
adcl
sub
shrb
fwait
sbb
fdivs
cmp
lea
xchg
mov
xor
jnp
jmp
adc
or
popa
adc
cmp
hlt
jb
cmp
fisubs
repz
jnp
repnz
aam
ljmp
adc
sbb
aam
fmul
movsb
cmpsb
and
cs
xchg
pop
cltd
push
cmp
inc
mov
dec
int3
adc
fcmovnb
jbe
sub
sbb
add
test
stos
lcall
mov
pop
es
dec
insl
add
pop
lret
ljmp
lcall
dec
enter
fnstsw
aad
out
adc
push
arpl
jno
and
sbb
cmp
cmp
add
das
sub
insb
repnz
in
mov
push
jae
lret
mov
push
xor
push
lcall
cmpsb
call
jnp
add
jb
call
and
inc
cmp
mov
or
jb
or
xchg
jl
sub
and
xor
loop
jno
push
imul
jg
inc
or
mov
xor
cmp
gs
jo
cmpsl
into
fnstsw
cmp
inc
leave
pop
or
cmp
sbb
shrb
insl
dec
jecxz
cli
test
shl
mov
sub
test
inc
pusha
mov
or
add
inc
rorl
jecxz
pushf
nop
jae
cwtl
dec
sti
jg
sbb
inc
je
out
out
cmp
inc
loope
xor
arpl
rcll
ja
inc
and
addr16
pop
jnp
jo
inc
fldt
xor
ret
mov
dec
shrb
popf
inc
cmp
in
inc
pop
ja
mov
ret
push
imul
adc
sbb
fdiv
jl
int
ss
ss
outsl
mov
xor
mov
and
mov
sub
or
out
pop
inc
xor
testb
imul
scas
iret
jp
jmp
pop
and
pop
dec
arpl
lea
mov
pop
inc
push
ret
aaa
push
rclb
xchg
cmp
inc
imul
jns
mov
adc
or
push
mov
pop
and
js
out
arpl
rclb
rcrb
and
inc
loope
cmpl
jne
dec
into
pop
scas
shl
enter
ja
sti
xchg
mov
sbb
jge
in
add
clc
and
bound
mov
aas
aam
xchg
sbb
and
push
cmp
push
cmp
and
and
push
adc
push
shl
sahf
push
pusha
cli
push
xor
push
test
xchg
mov
push
jecxz
rcll
popf
push
add
push
sub
and
mov
repz
in
lea
subl
jns
cmpsb
cli
xor
xchg
cmp
push
popf
dec
pusha
xchg
imulb
cmp
call
xchg
test
mov
add
or
gs
das
shll
inc
ja
jge
ret
push
je
out
jno
push
cmp
cmp
cmpsl
mov
pop
push
xor
dec
push
in
add
xor
mov
or
rcl
lret
and
lds
xlat
stos
movaps
xor
adc
adc
es
mov
xchg
ljmp
popf
jmp
cmc
dec
ds
sti
xchg
fadd
pop
lock
and
mov
jg
es
mov
popa
in
pop
lea
pop
push
and
addr16
movsb
out
xchg
mov
mov
outsb
out
sbb
jl
mov
out
cs
or
pop
sub
xor
rorb
xchg
sub
in
cmp
or
repnz
std
movsb
insb
shl
sub
aaa
jmp
test
fs
sub
and
lcall
push
dec
push
je
loopne
push
cmp
test
jmp
popa
cmp
pop
dec
fldt
mov
jp
ret
mov
ss
hlt
push
sbb
and
sbb
jg
or
aaa
mov
sti
cltd
mov
aad
bound
sahf
cs
rcll
outsl
push
mov
lea
aad
jb
nop
fucom
mov
iret
orl
fmuls
sub
and
jmp
mov
adc
shld
mov
inc
and
push
mov
dec
jl
outsl
orb
out
ficoms
xchg
sti
pop
xchg
pop
jmp
fcompl
std
sti
movsl
xchg
push
dec
xor
or
cmp
test
mov
imul
xchg
xchg
lods
divb
xchg
jp
adc
cmpsl
mov
fisttps
and
push
idivb
mov
or
inc
and
mov
test
gs
test
xchg
push
mov
jae
dec
imul
in
add
les
mov
sbb
push
mov
jmp
shll
inc
jge
inc
inc
sar
cli
and
cmovle
jno
hlt
cltd
lcall
inc
in
push
add
jmp
stos
cmpsb
sahf
out
stos
pop
pop
lcall
push
cmp
mulb
adc
push
inc
and
push
gs
push
sbb
or
or
mov
stos
movsl
ss
fistpl
sti
fwait
insl
outsb
mov
xor
xlat
push
je
fmul
outsl
lock
or
fiaddl
adc
or
jnp
sbb
sbb
clc
lahf
jecxz
mov
ret
movups
cmp
sub
pushf
cmp
cmp
aam
icebp
aad
jecxz
cmpsb
and
cltd
out
jae
mov
or
jns
test
jns
into
adc
sub
ds
stos
shl
in
lret
stos
nop
loop
mov
sub
xchg
xchg
cmp
xchg
or
scas
pop
sahf
loop
add
and
pop
fisubs
cmp
pop
cmpsl
fistpll
cld
out
popa
or
dec
and
cmp
pop
outsl
cmp
lea
movl
dec
add
mov
repz
testl
inc
mov
push
add
movsl
xor
out
sbb
cmp
sarl
arpl
jmp
clc
adc
mov
cmp
jge
and
mov
fidivs
dec
xchg
inc
insb
sub
shrl
jo
pavgb
mov
andl
popl
pop
jae
popf
jne
das
add
jb
xor
sub
and
lods
sbb
test
mov
int3
cmc
xlat
test
movsb
jb
xchg
leave
jge
fcompl
push
stc
cmp
dec
xlat
mov
cwtl
call
loopne
cs
push
push
jmp
xor
mov
dec
dec
mov
sbb
add
mov
clc
adc
xchg
lods
adc
pop
lret
repnz
mov
adc
mov
adc
and
fdivr
add
hlt
sbb
inc
hlt
mov
xchg
arpl
push
xchg
mov
xor
sti
scas
dec
out
bound
in
mov
xchg
mov
data16
mov
adc
shl
icebp
and
push
pop
insb
xchg
addr16
and
cmpsb
nop
test
aaa
mov
sbb
cmp
rol
stc
hlt
pop
cmpb
push
sbb
xor
stos
ret
icebp
cld
popf
sub
pop
lea
mov
adc
lcall
push
inc
xor
rcll
xor
jmp
sahf
push
inc
and
or
push
add
xchg
imul
push
sbb
sbb
icebp
mov
dec
stos
arpl
and
jl
call
mov
xor
adc
cld
icebp
xor
xor
lods
xchg
out
scas
test
mov
imul
les
xor
in
mov
fiaddl
imul
loop
fiaddl
jl
cmp
iret
out
and
push
leave
movsb
and
pop
xchg
dec
iret
test
jmp
sub
pop
cmp
pop
in
push
xor
push
mov
jle
add
jge
fildl
idivl
mov
sbb
pop
scas
sbb
sbb
stc
cmp
push
stos
sti
and
or
cmpsl
jne
xor
std
jg
mov
je
add
loop
mov
mov
int
pop
es
mov
xchg
mov
jns
ret
insb
inc
sbb
mov
int3
sahf
aad
mov
fidivrl
repnz
cmp
imul
ss
adc
hlt
mov
inc
outsb
lcall
dec
push
dec
enter
jge
fstpt
fstps
cli
push
mov
stos
xchg
test
jno
adc
jo
sub
xchg
push
mov
cmp
mov
aam
xor
icebp
ljmp
out
mov
xchg
cmp
rcrb
pop
and
pop
mov
xor
inc
fdivrp
in
adc
jge
mov
aad
add
push
scas
mul
xchg
xchg
sub
repnz
je
int3
ljmp
fwait
loopne
pushf
ss
stos
pop
mov
inc
push
dec
inc
mov
dec
arpl
rolb
jg
out
loop
jb
jg
mov
popa
sub
neg
add
pop
hlt
pushf
divl
and
pop
sub
movsl
fidivs
bound
ljmp
pusha
repnz
mov
mov
test
add
pop
xchg
mov
xchg
xor
out
push
or
push
mov
cmp
mov
scas
data16
pop
pop
cmp
rcr
push
ds
in
xorb
subb
shlb
and
mov
cmp
fsubrl
call
pop
out
inc
xchg
into
sbb
add
scas
movsl
out
xchg
jno
pushf
mov
out
push
in
in
pop
hlt
push
mov
cmp
push
mov
idivb
inc
add
push
or
jecxz
push
sub
xchg
sbb
inc
jnp
adc
jne
mov
add
mov
sti
sbb
xchg
inc
push
jae
and
dec
popf
int3
jle
dec
in
shll
xchg
mov
jns
mov
push
xchg
and
sbb
jo
xchg
sub
in
stos
mov
lret
shlb
out
adc
lret
dec
in
adc
pop
aam
add
mov
repnz
xchg
in
mov
test
xchg
adc
push
push
shll
jae
lock
mov
sbb
sti
cmp
jecxz
jge
or
faddp
clc
mov
xchg
xor
imul
push
mov
push
loope
push
shll
or
jge
mov
stos
xor
shl
mov
dec
cmpsb
ficomps
aam
pop
add
xor
pop
dec
push
pop
jae
rcrl
jp
lock
jecxz
aam
pop
leave
fbld
imul
enter
and
jae,pt
sub
je
sbb
dec
sub
and
in
push
out
sbb
aad
xor
or
mov
sbb
aad
hlt
ret
movsb
xor
adc
gs
adc
clc
fisttpl
inc
sub
gs
pop
enter
sub
incl
sbb
imul
fadds
push
cmpsb
test
std
sub
push
mov
fdiv
inc
mov
sbb
pop
pop
test
sub
imul
add
das
xchg
fdivs
push
sbb
jae
andb
mov
mov
enter
enter
roll
in
cli
xor
enter
mov
ja
popa
enter
sbb
mov
jl
xchg
pop
scas
aaa
push
jmp
lock
dec
dec
mov
repnz
das
aad
fisubrl
call
ss
repz
pusha
dec
sub
imul
jnp
add
out
xchg
mov
dec
test
push
dec
je
xlat
fsts
fistps
arpl
in
xor
lahf
repnz
sahf
data16
in
inc
mov
pusha
je
fistps
stc
lret
sbb
outsb
and
sbb
mov
xor
lahf
pusha
xchg
dec
and
xchg
add
xchg
pushf
push
cmp
in
or
movsb
outsb
mov
pop
pushf
adc
fwait
sbb
mov
pop
lret
insl
lret
mov
repz
loop
jle
cs
pusha
icebp
dec
jae
test
xchg
aas
fsubp
sahf
inc
outsb
arpl
ljmp
mov
test
pop
push
ss
dec
ret
aam
dec
daa
icebp
repz
jmp
jg
ret
clc
jl
in
addl
daa
pushf
cmp
fildll
or
into
clc
dec
xchg
bound
inc
and
inc
add
xorb
jb
out
pop
and
test
int
popf
les
dec
push
lock
incl
lret
ret
pop
ds
mov
push
xor
add
pop
push
scas
inc
sarb
jmp
dec
out
stos
mov
outsl
loopne
pop
push
sbbl
fwait
add
popf
mov
ljmp
fs
jp
arpl
push
mov
outsb
inc
push
mov
adc
cmp
and
xlat
cmpsb
xchg
ffree
cwtl
mov
cmp
bound
mov
cltd
jge
loop
sub
dec
insb
pop
and
inc
pop
imul
sub
mov
clc
addr16
jne
insb
sahf
inc
push
shlb
add
cmp
sbb
imul
outsb
adc
sub
mov
lret
push
inc
int3
pop
and
mov
outsl
dec
data16
jns
mov
fstpl
idivl
lods
sub
int
or
cmc
out
or
sbb
fdivl
dec
dec
out
imul
sub
sbb
inc
xor
lock
sub
xor
shll
push
xchg
mov
sub
cmp
notb
fldcw
push
and
xchg
dec
or
xlat
xor
fists
dec
cwtl
push
mov
stos
fs
add
cmp
and
lea
sub
es
mov
sbb
addr16
jle
adc
add
add
fiaddl
sbbl
ffree
mov
cwtl
imul
mov
push
faddp
aam
jbe
cld
mov
outsb
ja
outsb
dec
adc
cld
xor
push
sbb
push
inc
int3
sbb
pop
cwtl
adc
jns
insb
adc
inc
iret
sbb
mov
mov
ljmp
pushl
pop
mov
imul
sarb
xchg
and
stos
mov
repz
mov
mov
or
mov
arpl
cmp
xchg
fcoms
xchg
je
les
std
pop
fdivrs
mov
and
aaa
xchg
sbb
stos
incb
pop
sub
aas
andb
inc
xchg
or
idivl
fiadds
sbbl
mov
das
sbb
ret
fsubl
dec
mov
and
mov
icebp
push
ljmp
cmpsl
cmp
mov
and
rcrb
pusha
xlat
lea
subl
mov
adc
out
and
push
dec
in
push
or
add
mov
mov
add
inc
test
cmpl
pop
in
push
cmpsb
in
cmp
bound
loope
push
mov
std
out
mov
arpl
stos
or
and
jp
sti
stos
mov
inc
add
jmp
aas
insl
pop
pop
lock
sbb
push
lea
cmp
or
insl
add
inc
ret
lock
jl
mov
mov
push
test
and
sahf
scas
popf
sbb
mov
jle
das
stos
dec
pop
mov
cmp
fstps
xchg
xor
arpl
mov
push
mov
inc
add
dec
push
xchg
fwait
sti
xchg
je
popa
dec
int3
dec
repnz
mov
jnp
pop
cmc
xchg
in
xchg
daa
sub
cmp
and
repz
mov
subl
and
rol
mov
enter
xor
cmpsl
aam
cmp
sarl
aas
roll
int3
aam
dec
loope
in
lahf
jno
push
mov
dec
test
dec
aam
jl
mov
fistps
or
inc
inc
cmp
cwtl
mov
jmp
jnp
ror
loope
inc
mov
dec
cmp
std
xchg
dec
dec
xor
fidivl
popa
js
and
ret
pop
in
or
pop
out
dec
sbb
out
mov
mov
pop
jmp
movsb
mov
insb
clc
hlt
jne
inc
add
fneni(8087
loopne
fsts
dec
out
dec
fnstsw
fisttpll
insl
cmp
adc
pop
clc
cmp
mov
daa
stos
pop
pop
jb
in
cld
dec
pusha
mov
and
sbb
daa
push
jbe
push
scas
jae
sub
sub
pop
push
jecxz
push
push
fldcw
cmpl
inc
popa
mov
movsl
pop
cmp
ret
mov
enter
movsb
push
sub
cmp
mov
repnz
in
cmp
ret
sub
mov
push
and
and
pop
mov
repnz
popf
jp
xor
jno
push
loop
rcrb
mov
xchg
loop
pop
fldl
aaa
pop
ds
cli
sbb
inc
or
pop
inc
scas
push
push
je
fld
push
lock
arpl
cmp
cmp
lds
xor
and
pop
add
inc
push
xchg
inc
aam
scas
pop
sbb
aas
jg
pop
jp
stc
fsts
popa
mov
jmp
jno
into
pop
pop
jnp
push
inc
inc
pop
mov
jp
push
test
xchg
cmpsl
test
ljmp
in
xor
cmp
das
ja
iret
subb
sbb
into
xchg
jno
dec
mov
bound
adc
sbb
test
outsl
push
adc
stos
mov
inc
push
lods
xchg
xchg
fildl
fcompl
dec
push
pusha
mov
mov
loop
ret
hlt
xor
lods
cltd
mov
scas
daa
sub
mov
add
repnz
xor
jle
addr16
cmp
pop
fmuls
jne
pop
dec
pop
lock
xlat
clc
out
addl
push
xchg
push
mov
mov
fsubl
loop
data16
and
or
adc
fldcw
add
mov
push
fldenv
lods
mov
xchg
imull
loop
je
cmpsb
push
mov
push
hlt
iret
scas
jmp
mov
or
add
push
jle
subb
lret
leave
mov
decl
pop
sbb
in
sub
push
addr16
mov
lcall
dec
add
mov
mov
test
pushf
push
in
shll
inc
or
mov
ss
jg
jl
lret
jmp
popa
xor
xor
xor
data16
les
xor
pop
into
dec
jmp
sarl
repz
int3
push
out
test
aas
clc
out
sti
push
jb
sbb
movsb
xchg
out
rorb
or
adc
das
dec
insb
js,pt
lock
mov
cs
and
rorb
ret
lds
movsb
lock
dec
pushf
nop
lret
or
incl
mov
scas
mov
lods
dec
jl
roll
out
mov
dec
xor
inc
ficoml
jmp
mov
sub
test
and
ja
pusha
lret
mov
and
stos
mov
rcll
hlt
es
xchg
dec
sub
xor
dec
addr16
jg
and
push
out
outsl
orl
jae
lock
sbb
mov
or
lcall
lahf
lods
das
xchg
jae
xchg
pop
cli
cmp
sub
fs
mov
push
and
aam
out
lret
push
jge
and
incl
js
cmc
push
lods
jo
mov
sub
jne
fisubrl
inc
insl
sar
xchg
daa
fidivrl
jge
or
dec
cmp
mov
loope
push
and
fmuls
xlat
jb
movl
push
pop
out
jne
push
jae
and
mov
in
shlb
pusha
adcb
insb
nop
gs
add
xchg
aam
jge
cmp
xchg
sub
aas
and
jg
lret
mov
jo
leave
popf
sub
jp
dec
in
push
dec
jecxz
repnz
xchg
cmp
push
pop
cld
inc
push
adc
mov
xchg
mov
and
or
and
mov
or
cmp
jbe
mov
les
xlat
rorb
xchg
push
vfmadd213ps
sahf
sar
sub
imul
xor
dec
sub
ss
xchg
xor
fdiv
add
adc
add
arpl
je
imul
rorl
sub
pop
push
movl
repz
daa
xor
inc
pop
out
jb
scas
test
xchg
fwait
and
jge
sbb
enter
mov
dec
movsl
roll
das
fidivl
sbb
jne
pop
loopne
or
jno
pusha
mov
and
mov
mov
add
out
dec
lods
cld
int3
adc
push
lock
cmp
add
scas
pop
cmc
cld
jnp
and
push
adc
adcb
push
or
add
stos
les
cwtl
xchg
and
into
sub
das
pusha
fsubrs
or
clc
int
jns
push
lock
cltd
pop
mov
pop
nop
insl
loope
xchg
sub
xor
push
cltd
sbbb
jns
bound
int
dec
in
outsb
or
push
sarb
mov
jl
dec
scas
dec
rorb
lds
ucomiss
push
inc
or
popf
lea
adc
idiv
icebp
insb
push
and
dec
jle
pop
outsl
cmpsl
push
lds
adc
push
imul
es
lea
jb
imul
mov
pop
cltd
sub
pop
adc
sbb
les
dec
lret
pop
sarl
in
pop
or
inc
mov
lcall
cmpl
insl
pop
xor
mov
sub
cld
jnp
in
xlat
push
lcall
cltd
sbb
mov
mov
imul
mov
adc
repz
or
adc
insb
shlb
enter
mov
dec
dec
rcrb
cld
jmp
cmp
fcmovb
sbb
sub
addr16
es
pop
push
jbe
add
push
lret
xchg
mov
mov
test
in
and
pop
sbb
push
in
mov
lcall
pushf
repnz
add
outsl
jno
lahf
fcoms
inc
lds
sbb
outsb
paddsw
shlb
leave
xchg
mov
or
mov
xchg
mov
push
add
test
shll
mov
repnz
rorb
or
jo
ljmp
out
out
jmp
lahf
or
stos
jae
jg
and
push
jbe
fs
std
dec
adc
sar
test
jb
mov
jmp
pop
jbe
call
pop
mov
inc
out
push
sar
or
sub
je
out
cmc
sbb
out
mov
mov
pusha
mov
and
out
mov
lods
loopne
test
cmp
or
cmp
dec
mov
test
push
repnz
out
mov
mov
ljmp
pop
dec
adc
icebp
std
sub
iret
mov
cmp
cmpsl
loope
jge
mov
push
mov
adc
push
mov
cmp
test
xchg
outsb
pop
in
subl
loop
sbb
xchg
mov
sub
fwait
popf
es
adcl
cmp
imulb
aaa
push
dec
sub
adc
cs
mov
aas
push
xchg
mov
xlat
and
cwtl
popa
in
fwait
clc
xchg
and
fimuls
jne
cmp
jle
add
fcmovne
sub
out
js
test
pop
add
sub
pushf
test
in
lock
aas
fisttpl
cs
je,pn
hlt
jns
in
xchg
loop
xchg
cs
push
push
pop
xor
test
cmpsl
scas
sub
pushf
mov
addr16
jne
jo
test
or
mov
pushf
inc
and
and
xlat
jnp
and
ds
push
or
dec
fsub
jb
xor
rorl
cmpsl
repz
enter
test
sub
or
push
arpl
pop
lods
mov
mov
jne
les
pop
into
mov
scas
lahf
push
stos
cmp
mov
scas
stos
lcall
addr16
pop
es
jp
push
sbb
roll
sbb
les
mov
adc
mov
sub
inc
fistpl
mov
jo
incl
push
add
scas
push
loope
cmp
aad
push
les
cmp
add
mov
out
cmpsb
lahf
dec
call
and
push
mov
adc
jp
scas
repnz
std
popa
mov
push
adc
bound
lret
stos
adc
lds
outsb
in
mov
push
and
ss
cmp
out
mov
aas
fwait
rclb
imul
sbb
in
cmpsb
add
pop
fwait
in
das
aas
movsb
and
aad
fisubl
mov
cmp
xchg
cld
fstpt
imul
xchg
int
xlat
push
loop
pop
addl
dec
stos
aam
mov
test
decl
xor
add
and
rcl
dec
shlb
popf
push
test
or
adc
das
and
cld
pop
mov
mov
push
fsts
test
imul
dec
dec
pop
shl
sbb
les
test
xor
inc
test
andb
outsl
scas
icebp
out
psubd
fidivl
and
xlat
jns
xor
or
movsb
add
ss
pop
ficoms
les
push
mov
cmpsl
enter
hlt
push
pxor
sbb
lods
mov
popl
mov
sbb
movsl
pop
sbb
cmc
imul
xchg
and
mov
aaa
mov
push
das
pop
je
or
mov
in
lcall
jbe
push
jmp
je
push
imul
addr16
int3
call
into
ficoms
lods
and
daa
cmc
push
mov
js
out
mov
lret
lods
outsb
adcl
int
scas
or
push
aas
iret
mov
imul
insl
dec
mov
es
sbb
jl
cmpsb
fldcw
cmpsl
sbb
stos
or
push
or
jb
push
xor
mov
and
stc
xor
pusha
mov
or
aad
int3
mov
and
push
and
mov
movsl
into
fbld
arpl
jl
lock
mov
aam
and
xor
jo
lret
pop
xor
out
xchg
adc
movsb
cltd
or
push
pop
jb
push
gs
cmpsb
lret
xchg
sub
inc
int3
mov
or
dec
or
lret
sbb
jo
jno
and
insb
cmp
inc
faddp
lea
lock
jp
sbb
push
mov
leave
inc
leave
outsb
into
xchg
pop
mov
rcr
iret
mov
stos
xchg
cmp
sbb
mov
hlt
fisubrl
jo
int3
sub
mov
cmp
in
shrb
dec
pop
test
test
sahf
xor
cmp
jne
cmpsl
lret
adcb
xor
sbb
cmp
mov
xchg
int3
adc
push
ficoms
or
jg
jp
pusha
mov
cli
stc
mov
mov
xchg
xchg
shr
push
hlt
imul
insb
fwait
mov
mov
outsl
mov
lret
stos
cwtl
add
sti
aad
xor
aaa
mov
mov
xchg
cli
pop
adc
mov
push
fsubrl
and
push
and
out
test
add
mov
sub
xchg
das
mov
pop
rcrb
insl
bswap
shrb
pop
pop
outsb
pop
std
inc
insl
push
add
inc
not
sbb
dec
or
ja
xor
cmp
jmp
or
pushf
xchg
push
inc
stc
and
mov
mov
aad
or
xchg
push
xchg
fimuls
aad
ret
mov
dec
inc
repnz
dec
xor
negb
push
jno
push
jp
jae
in
sub
add
test
int
mov
cld
aam
in
xor
es
xchg
push
call
shr
div
in
add
mov
cwtl
adc
push
xchg
inc
inc
cld
pushf
pushf
mulb
outsl
pop
xchg
sbb
inc
mov
in
dec
test
and
in
repnz
cmp
mov
and
ds
mov
sti
fabs
das
dec
or
xor
bound
inc
pop
mov
push
jo
inc
test
call
pop
out
aam
daa
insb
jmp
or
cmp
jno
xchg
push
imul
scas
and
lahf
ret
aad
fistl
mov
movsb
sub
mov
mov
adc
in
mov
pop
inc
jnp
mov
dec
push
or
daa
daa
mov
push
inc
pop
pop
push
and
nop
cmp
addl
dec
push
inc
out
inc
xor
das
std
and
mov
leave
in
repz
loop
jp
dec
xor
and
jo
out
fistps
mov
addr16
je
xchg
mov
fwait
insb
mov
pop
shr
mov
out
cli
movsl
xor
or
jl
incb
mov
inc
sub
loop
into
testl
fcoml
add
mov
sub
lahf
rolb
enter
shll
lret
push
pushf
stos
scas
dec
shll
sbb
xchg
insl
adc
adc
and
daa
inc
add
mov
sbb
pop
cwtl
push
mov
and
test
push
adc
int3
or
cmc
out
sub
push
int
sub
xlat
cmpsl
js
xchg
mul
mov
shl
push
mov
ret
dec
cmpsl
add
and
push
pop
cmp
es
into
mov
jl
fwait
loop
and
xchg
adc
xchg
idivl
pop
cld
iret
daa
xor
cs
mov
ficomps
imul
mov
sub
pop
mov
fcmovnbe
adc
rcrl
xchg
and
and
or
xchg
or
in
iret
popf
xchg
sbb
iret
lahf
dec
xlat
and
sub
mov
cltd
pop
leave
xor
insb
nop
insb
inc
sub
adc
addb
pop
or
xchg
cmp
sub
pop
fisttpl
inc
adc
dec
and
pop
sti
dec
inc
sbb
cmpsb
or
fidivrl
push
fcompl
sub
jne
jg
xor
loopne
adc
push
add
lret
ja
jnp
mov
jo
xchg
daa
inc
push
lods
pop
loopne
cmp
push
mov
cmpb
scas
lea
dec
jns
xor
test
leave
test
or
addr16
dec
leave
mov
js
popf
dec
xor
clc
sti
jns
xlat
push
adc
lock
cmp
cmc
mov
pushf
lret
cmp
stos
xor
xor
repnz
notb
pop
xor
popf
nop
sub
dec
xor
test
cmp
pop
and
mov
xlat
sti
adc
mov
cld
rorb
sbb
pop
inc
push
lods
push
gs
dec
fs
lret
pop
mov
lret
cmpsb
jecxz
rorb
mov
fwait
jg
pop
mov
lcall
xchg
xchg
and
xor
into
cwtl
shrb
cmp
mov
or
inc
arpl
nop
jle
test
xchg
cmp
repz
imull
jne
in
fcmove
imul
cmp
push
mov
js
pop
lahf
xchg
idivl
cmp
jl
jb
adc
mov
mov
cwtl
push
push
ret
xchg
mov
out
dec
movsl
or
je
mov
or
pop
jae
loop
cmc
hlt
popf
in
movsl
cmp
lds
enter
sbb
js
sbb
shll
rorl
fs
mov
push
test
ljmp
dec
xchg
cmp
lret
in
cwtl
aad
scas
sbb
fisttpll
xchg
inc
call
addr16
jne
jle
incb
mov
jg
jnp
stos
add
sbb
mov
icebp
adc
pop
iret
push
cli
fwait
dec
jo
test
jecxz
adc
jecxz
cmp
mov
int
imul
pop
daa
jmp
and
xor
push
cmc
js
mov
shlb
pop
pop
ja
add
cmpsl
sub
mov
xor
adc
das
xchg
xchg
arpl
mov
jo
aad
ret
add
inc
sub
mov
adc
xchg
loopne
andl
pop
loope
mov
mov
insb
xchg
mov
sti
jecxz
sahf
and
lods
adc
es
jno
xchg
aad
out
outsl
sbb
ss
push
fnstenv
jbe
sub
adc
push
xor
jl
dec
jg
mov
mov
add
in
pop
dec
and
jp
xor
ljmp
add
into
mov
loope
ss
add
add
scas
pop
pop
sbb
push
scas
arpl
fcomi
jmp
fs
xor
cld
mov
stos
xchg
mov
pop
push
push
cltd
std
into
or
or
movsl
xorl
les
adc
inc
push
dec
gs
dec
adc
sbbl
mov
or
or
xor
add
fdivrl
adc
lock
loopne
push
jb
sarl
lcall
and
int3
pop
mul
out
jb
sub
lock
pop
add
imul
mov
lahf
mov
mov
dec
iret
fwait
rcr
or
outsb
lock
mov
lock
sbb
test
lcall
aam
or
cmp
pop
out
push
dec
xor
mov
cld
pop
sbb
mov
sbb
jg
mov
imul
xor
lret
negl
clc
and
clc
lahf
push
mov
popa
mov
mov
rcll
xchg
sbb
aaa
idiv
es
mov
xor
or
push
mov
pop
lods
xor
pushf
test
decl
clc
insl
test
clc
mov
xchg
test
lods
aas
inc
dec
test
or
sub
sbb
inc
ret
data16
sub
jo
jns
call
lods
cmp
push
jo
in
xchg
mov
imul
out
jo
mov
xor
jecxz
and
bound
jne
repz
dec
into
out
xchg
in
mov
push
pop
aaa
sub
xchg
push
xor
lahf
cmc
cmp
iret
fld
loope
in
xlat
mov
movsb
adc
mov
adc
cmp
cmp
sub
push
fadds
mov
rcll
add
cmpsl
bound
ljmp
mov
scas
jl
pop
mov
test
mov
add
les
pop
test
ja
and
mov
or
ret
nop
sub
xor
xchg
arpl
xor
pop
loopne
sarb
xchg
mov
xchg
addr16
mov
or
sbb
pop
pop
in
jno
jmp
shrl
cmp
adc
xchg
daa
flds
fcompl
loop
xor
xor
popa
addr16
lock
mov
xor
arpl
ret
leave
xor
dec
sbb
mov
aaa
mov
cwtl
fsubl
jl
dec
inc
inc
scas
inc
mov
aas
imul
inc
push
arpl
add
mov
dec
aas
stc
stos
xchg
sub
notl
rcrl
sub
adc
pushf
loop
mov
pop
leave
je
aas
mov
movsl
jecxz
pop
stos
repnz
jnp
mov
inc
xchg
cwtl
ret
xchg
lcall
mov
call
pusha
lods
fs
sub
xor
mov
mov
or
add
fs
je
dec
subb
xchg
mov
fisubl
or
xchg
pop
int3
push
pop
addl
jp
sarb
ds
out
sub
xchg
jb
cmc
call
add
push
js
ds
xor
movsl
inc
mov
das
out
or
scas
repz
pop
pop
cld
aad
and
or
pop
fisubl
stos
sahf
lea
hlt
les
mov
mov
in
cli
imul
pop
gs
mov
sahf
icebp
cli
cmp
or
cmp
xchg
data16
pop
enter
cli
pop
outsb
iret
inc
mov
out
int3
inc
xchg
inc
gs
arpl
mov
cwtl
dec
inc
mov
xor
pop
fisttps
cmp
mov
int
cmp
mov
inc
orl
pop
shr
sub
cmc
lds
pop
cmp
movsl
dec
js
adc
xlat
gs
sti
test
push
add
jmp
xchg
dec
or
popf
xor
fwait
sub
adc
arpl
cmpsl
sub
std
sbb
inc
ljmp
push
pop
mov
int
mov
sahf
sar
cmpsl
jbe
xorl
adc
andl
lcall
inc
jg
mov
out
jle
pop
inc
jb
cs
sbb
repnz
dec
inc
mov
loope
push
cmc
sub
std
xor
jle
fcomps
xor
jg
out
ret
inc
decl
mov
lret
mov
xchg
jl
out
jne
xor
xor
xchg
aaa
cmp
push
addb
mov
in
fdivs
push
aaa
push
mov
rcl
push
xchg
push
sbb
outsb
sub
movsb
cwtl
pop
int3
pop
in
fistl
push
mov
daa
dec
testl
adc
inc
xchg
jmp
ja
and
shl
lea
insb
in
aaa
mov
daa
cmpsl
bound
pop
sbb
dec
jo
scas
lds
mov
sub
add
out
fcmove
push
insl
add
in
push
pop
outsl
ss
aaa
cltd
cmp
cmp
pusha
add
jbe
sub
dec
cmc
fildl
inc
add
fisttpll
adc
lret
fildl
mov
test
out
iret
add
pushf
dec
cmp
insl
shlb
js
jg
aam
xchg
push
xchg
scas
cmc
imul
lods
inc
add
js
xor
push
push
sub
ja
xlat
pop
repz
inc
push
cmp
insb
inc
pop
hlt
repnz
dec
ffreep
jne
leave
jno
cmpsb
or
jl,pt
sbb
cmp
add
enter
fistl
sbb
fistl
sub
sbb
pop
mov
lret
jl
hlt
cmp
inc
cmp
insb
xchg
lret
jne
mov
and
arpl
cmp
push
jcxz
rcrb
imul
popa
xor
sub
mov
cld
xchg
push
out
cld
and
popf
fs
sub
inc
adc
cwtl
popa
jb
adc
jp
cmp
mov
mov
adc
xlat
dec
cmpsl
add
push
cmp
stos
inc
add
xor
ret
cmp
ficoms
aad
mov
imul
int3
ficomps
test
sbb
inc
sbb
test
mov
add
shll
pop
out
test
nop
dec
in
add
shrb
movsb
cmc
cmpsl
out
jns
xchg
stos
mov
xchg
cmp
cmc
inc
jbe
adc
mov
sub
sub
or
mov
insb
xchg
sbb
insb
xchg
shll
xor
jno
sub
pop
sub
cld
jp
sbb
test
xchg
insb
loopne
push
repnz
jo
outsb
and
rclb
inc
pop
pop
loopne
mov
xchg
adc
xchg
in
adc
rclb
mov
pop
jb
sub
sbb
stos
mov
ja
jge
sbb
or
xchg
mov
sbb
pop
loopne
fidivl
es
xor
push
or
pop
stos
out
adc
mov
and
jae
loop
movsb
lret
push
xchg
mov
inc
sub
pop
and
pop
out
pop
mov
sbb
jno
and
xor
rcrb
pop
dec
mov
ret
sbb
aas
cmpsb
inc
push
add
xchg
iret
aad
mov
mov
fdivrs
sub
cmp
pop
mov
xlat
jecxz
xchg
dec
cmp
dec
lcall
and
mov
stc
adc
mov
fcom
int3
pop
xchg
or
adc
lea
mov
movsb
push
xchg
insb
fadd
test
ret
aaa
pop
jmp
xor
mov
jge
pop
iret
cmp
pop
daa
loop
sahf
sbb
lcall
xchg
cmp
jnp
mov
sbb
push
lret
stc
pop
cmp
adc
sbb
sub
mov
popf
sub
add
pushf
ljmp
cmpsb
xchg
mov
lcall
sbb
pop
jbe
test
mov
cmp
lcall
ret
test
test
mov
xchg
iret
mov
les
sub
mov
in
cld
mov
ret
sub
dec
adc
rolb
fidivl
push
xchg
ret
push
xchg
push
in
mov
aas
outsb
mov
xchg
or
sbb
out
dec
pop
mov
mov
aaa
pushf
and
cmp
mov
xchg
dec
add
add
pop
jp
push
xchg
movsb
ja
idiv
lcall
mov
push
add
stc
mov
mov
sbb
inc
popl
sub
not
dec
sub
jbe
aad
fcomps
fistps
mov
cmp
mov
imul
sub
adc
mov
push
inc
lret
jge
xor
mov
imul
inc
cs
and
jns
pop
push
pop
mov
jmp
jp
lods
cmpsb
add
mov
stos
xor
pop
in
cmpsl
cmp
mov
mov
add
pop
aas
jp
mov
into
lahf
sub
outsl
cld
mov
out
lret
into
test
int3
or
and
mov
jg
xor
lahf
icebp
jecxz
pop
dec
pop
pop
xlat
ss
inc
inc
cld
adc
mov
cld
insl
push
dec
repnz
adc
dec
sub
adc
popa
push
dec
insb
loope
xchg
daa
pop
lods
rorb
and
in
xchg
xchg
es
sbb
mov
inc
xchg
cli
mov
inc
stos
sahf
inc
or
cmp
or
decl
pop
mov
mov
inc
mov
test
nop
mov
insb
sub
xchg
rorl
add
fnsave
js
icebp
jge
nop
xor
or
ret
test
sub
mov
es
mov
xlat
nop
movsl
jne
and
test
movb
sbb
arpl
ss
ret
fwait
outsb
sbb
call
ret
roll
gs
sbb
add
cmp
xchg
push
pop
push
frstor
add
lahf
lods
or
add
add
out
loope
sbb
ret
push
aaa
adc
adc
mov
aaa
and
fisttps
mov
faddl
push
je
add
push
mov
pop
out
xorb
cmpsl
and
rorb
push
jl
or
pop
cli
and
cmp
test
mov
out
lahf
push
out
pop
jge
push
mov
jge
cwtl
rcl
int3
lods
add
add
nop
lret
add
in
xor
push
push
outsb
sub
test
fildll
push
data16
icebp
cwtl
popa
rol
mov
xor
setno
fistl
jmp
fcoms
mov
loop
jo
push
inc
mov
negl
icebp
dec
xchg
imul
hlt
inc
cmp
fdivrp
or
sbb
mov
pop
popf
push
fs
dec
loopne
fmul
adc
pminsw
cmpsl
dec
adc
mov
jae
cmp
iret
shrb
mov
loopne
xor
sahf
clc
dec
loop
enter
mov
adc
mov
test
and
leave
ljmp
movsl
adc
sti
jl
iret
in
mov
or
cmc
sub
ret
pop
mov
xor
add
and
cltd
rcrb
sbb
jmp
add
lods
outsl
push
in
xor
wbinvd
sti
push
sub
push
inc
cmp
dec
add
sbb
xchg
movsl
bound
pop
lcall
jbe
mov
add
mov
outsl
mov
mov
mov
aaa
les
jnp
mov
js
dec
sti
outsb
cli
nop
nop
int
jne
shlb
out
inc
mov
inc
adc
rorl
in
add
js
ficoml
mov
push
sub
add
imul
push
xchg
xchg
arpl
adc
inc
mov
mov
shr
push
stos
ret
imul
fdivs
jge
jns
adc
pop
in
sbb
test
xor
jns
mov
nop
nop
test
xor
cmpsl
negl
dec
push
xchg
stc
in
sbb
mov
aam
je
dec
cmp
int3
lret
push
cmp
xchg
fs
dec
movsl
jg
dec
arpl
cmp
push
ds
push
pop
xor
sub
cltd
jb
fistl
lods
pop
add
pop
pop
in
cmc
pop
inc
dec
xchg
or
or
jp
pop
xchg
and
lds
jecxz
int
push
aad
mov
inc
ja
push
sbb
in
repz
out
mov
jge
mov
jae
jle
inc
out
jne
gs
push
mov
xor
xchg
mov
test
cld
movsb
sbb
adc
or
sub
pop
mov
jns
fisttpl
xor
bound
nop
insb
enter
jb
pop
ljmp
sub
sub
lahf
dec
ret
or
notl
and
mov
cmpsb
pop
std
push
test
pop
push
adc
or
mov
scas
shrl
in
lds
sub
in
test
inc
pusha
and
xor
clc
mov
xchg
sub
outsl
inc
mov
inc
out
movb
ljmp
or
aaa
enter
inc
movsl
jecxz
cmp
lret
inc
popa
lret
and
sbb
out
repz
jb
mov
xchg
aad
aam
lds
shll
sub
push
sahf
insl
vucomiss
inc
mov
sbb
ss
cmp
or
std
insb
cli
pop
ja
add
outsb
mov
cmc
add
jae
dec
pop
add
imul
sub
xor
dec
rcl
inc
mov
cmp
pusha
push
mov
sbb
inc
pusha
mov
in
mov
cltd
push
lods
iret
push
jnp
cmp
mov
iret
fwait
mov
push
fisubrs
sti
je
ss
aas
xor
pop
rcll
or
loopne,pn
mov
jecxz
sbb
push
sbb
pop
in
rcll
sub
push
into
push
xor
dec
pop
aad
inc
popa
push
insb
ret
outsb
pop
inc
xchg
pop
out
ret
test
sub
testl
dec
mov
fcomps
cmp
clc
mov
inc
fsubl
xchg
fsubl
sbb
aaa
add
mov
nop
leave
xor
cld
ds
decb
mov
inc
sbbb
repz
ficompl
outsl
and
ljmp
pop
dec
scas
adc
pop
add
pop
xchg
mov
stos
dec
jp
add
inc
push
inc
mov
lahf
popf
mov
add
jl
mov
mov
jno
mov
jns
and
push
hlt
xchg
outsb
jnp
mov
push
sbb
add
and
outsb
lea
mov
add
mov
xor
out
adcl
jno
adc
ds
xchg
or
mov
or
adc
mov
cmpsl
loop
sarb
mov
mov
jle
es
data16
inc
iret
pop
popa
pop
loop
call
test
loopne
sub
xchg
and
add
sub
es
loopne
xchg
js
dec
popf
fcmovbe
mov
dec
or
and
xchg
cmp
sbb
push
pop
movsb
dec
cmp
jno
fidivrs
adc
sub
inc
mov
and
or
rcr
xor
inc
adc
loope
mov
sbb
xchg
jecxz
xchg
mulb
shlb
std
cmp
lods
out
xchg
xor
dec
adc
movsl
cs
call
inc
cs
out
pop
xor
neg
hlt
jb
jns
xchg
scas
xchg
jg
dec
or
mov
fsubrl
pop
and
arpl
fwait
int
push
dec
fistl
les
mov
jnp
mov
jae
insb
int3
scas
lret
pop
lahf
and
divb
incb
rcll
outsl
repnz
addl
xor
sub
stc
mov
popl
xchg
push
cmc
mov
dec
popa
fs
icebp
test
add
or
sbb
push
arpl
mov
movl
push
dec
inc
mov
shrl
and
xor
daa
fwait
adc
stos
lret
cmp
in
adc
jae
pop
pop
adc
cwtl
shl
push
dec
stos
fs
mov
cmp
sbb
jo
or
adc
inc
incl
jmp
outsb
ss
cmp
repnz
mov
fnstenv
add
add
pop
xor
adc
imul
pusha
push
lds
pop
imul
out
ret
mov
lahf
sbb
mov
jp
aas
add
hlt
in
sub
shl
loop
cmp
test
mov
daa
jno
scas
push
ret
add
dec
adc
sbb
sub
xlat
fwait
mov
inc
cld
adc
cli
or
mov
xor
loopne
fwait
inc
js
enter
mov
dec
and
pop
aaa
add
or
scas
push
fistl
ds
test
mov
push
mov
pop
mov
cmp
or
or
popf
jl
ss
aad
dec
xchg
fldenv
test
xor
dec
call
pop
sbb
fstpt
data16
roll
mov
and
jns
or
jmp
arpl
cmpsb
inc
adc
mov
push
pop
pop
sub
add
xor
gs
out
arpl
push
aam
icebp
pop
xchg
jp
and
pusha
dec
in
sub
sub
test
popf
cmpb
add
push
jl
mov
push
adc
scas
jbe
out
jo
sbb
rorl
and
movsb
sub
rclb
fmul
fmul
cmp
addr16
cmp
pop
cltd
dec
pop
jecxz
enter
mov
mov
pop
pusha
jge
push
inc
sarb
add
jp
adc
or
add
mov
jecxz
inc
jae
pcmpgtd
pop
push
xchg
mov
fcmove
fmul
jae
stos
arpl
jnp
sub
push
jo
jmp
int
insl
and
imul
sub
pop
mov
arpl
inc
in
jno
aaa
pop
sub
and
xlat
iret
sub
arpl
or
or
jmp
mov
shrb
cmp
and
xorb
outsl
das
dec
sahf
jbe
sub
pop
test
out
outsl
mov
xor
dec
jnp
or
and
push
jne
test
xchg
cmp
mov
jmp
lods
mov
push
popf
push
divb
loop
cmp
ds
mov
mov
mov
ret
inc
hlt
adc
das
add
addr16
mov
add
jl
jbe,pt
push
lock
int
shr
mov
repnz
push
mov
loope
cmpsb
cli
inc
mov
in
inc
ss
es
push
push
dec
fiadds
lds
cmp
push
jbe
pop
movb
lret
lods
flds
mov
xor
mov
xchg
dec
lcall
js
mov
cmpsl
shrb
in
jo
jns
lock
mov
jnp
fcmovbe
pop
mov
jmp
movsb
aam
lods
xchg
mov
jmp
lods
rcrb
xchg
push
andb
inc
test
or
dec
xchg
cmp
adc
add
dec
icebp
cmp
mov
push
mov
insb
aas
cli
sbb
sbb
jne
push
sub
sub
rcr
jnp
mov
mov
and
repnz
mov
push
xchg
mov
push
and
psrld
mov
jnp
orl
shrl
lock
or
insl
aas
fsubrl
les
xchg
test
out
cmpb
inc
sbb
jb
lds
mov
outsl
leave
push
xchg
stos
aas
std
movsb
ficoml
fmul
jns
aam
in
pop
outsl
test
mov
xchg
int
test
lods
imul
adc
sub
sbb
std
sbbl
cmp
pushf
cmpb
outsl
and
iret
fnstsw
pop
push
sbb
xchg
cmpb
test
cs
fnsave
movb
push
jns
lods
pop
insl
mov
add
ret
mov
test
pop
adc
hlt
out
daa
fisubs
icebp
inc
add
mov
subl
cmpsb
in
mov
mov
push
mov
aas
xor
xchg
sbb
cmpsb
inc
icebp
xchg
xor
jge
cmpsb
dec
pop
and
dec
out
repz
je
inc
lret
mov
popf
call
in
cmpsl
add
lret
insb
jmp
mov
sub
test
xlat
xchg
inc
adc
aas
jmp
test
in
jnp
dec
push
push
jmp
mov
out
je
jecxz
or
adc
jecxz
mov
dec
fldenv
fs
les
popf
rcrl
aad
in
shrl
icebp
fimuls
divl
inc
add
js
mov
inc
popf
in
pop
dec
int
ds
insl
arpl
xchg
jle
rclb
mov
stos
ljmp
nop
clc
scas
mov
lods
jp
inc
subl
mov
cmc
sub
sti
xchg
outsb
jl
jno
xchg
inc
in
js
leave
fsubl
dec
ss
mov
pop
mov
sahf
mov
hlt
cli
outsl
pop
es
int
cmp
xorb
adc
sbb
imulb
jae
add
aas
add
pop
call
sarb
push
and
icebp
test
xchg
sub
lret
in
xchg
add
or
mov
cmp
sub
pop
pslld
pop
cmp
mov
pause
push
loope
out
xchg
adc
pushf
xor
cli
xchg
pop
and
repz
int
aas
cmp
test
xchg
cmp
jo
setns
iret
jno
arpl
fsubs
cmp
popf
loope
mov
lock
push
not
mov
out
test
subb
sub
imul
loop
cmp
xchg
xor
jbe
movsl
ret
int
lcall
mov
xor
icebp
mov
mov
inc
or
stos
adc
pushf
push
mov
mov
pushf
pop
out
mov
mov
jb
pop
lahf
into
outsl
test
call
fstl
lret
and
push
mov
mov
mov
mov
notl
dec
push
ljmp
js
xchg
out
das
enter
jbe
mov
je
stos
xchg
sub
mov
push
pop
inc
push
pop
push
or
loope
sbb
int
mov
paddsw
and
lock
pop
lcall
icebp
xchg
mov
xchg
jb
out
test
cmp
out
cmp
cmp
sbb
sub
popf
fucomi
xchg
stos
scas
lods
xchg
sbb
jl
mov
lods
ljmp
ror
pop
pop
int
imul
mov
in
mov
mov
movsb
movsb
cli
sbb
push
mov
rorl
jle
rcl
push
data16
addr16
adc
and
inc
sub
mov
push
cmp
add
sub
rorl
fcmovb
jg
jg
loope
adc
jp
fnsave
cmc
scas
push
cmp
push
dec
mov
inc
jge
std
xchg
push
sbb
lahf
and
hlt
mov
and
cmp
add
dec
pop
bound
pop
sub
dec
fwait
scas
adc
jno
lds
mov
out
or
sub
add
dec
mov
insl
pushf
jp
cltd
hlt
xor
push
pop
or
adc
adc
shlb
icebp
sbbb
sub
jo
fcmovbe
xor
mov
lock
loop
rcrb
lcall
call
inc
punpckhbw
mov
jb
sub
fld
test
jge
mov
mov
jp
xchg
xchg
sbb
lahf
xchg
push
jnp
pop
cmp
dec
ss
call
xor
push
inc
ret
inc
add
dec
dec
or
xor
stos
adc
sahf
lea
or
loope
adc
push
popf
mov
mov
pop
outsl
push
lret
fnstenv
outsb
hlt
fstl
sub
in
pop
loopne
dec
jo
out
mov
imulb
std
cwtl
inc
mov
imul
inc
fldl
mov
xchg
unpcklps
pop
push
iret
inc
mov
cmp
bound
sub
arpl
jno
cmpsb
arpl
gs
popf
leave
inc
and
movsl
cmp
pusha
inc
movsb
leave
xor
jge
ret
ret
imul
jl
push
fs
push
repz
inc
insl
outsb
xchg
adc
mov
jle
loop
adc
addl
mov
or
ret
mov
outsl
cmp
addb
scas
sbb
imul
les
cmp
jo
jns
stos
jae
cmpsl
pop
cmc
scas
cltd
test
ds
loopne
inc
outsl
jns
mov
arpl
inc
stc
inc
pop
push
int
fistpl
leave
dec
sbb
pop
xor
xchg
int
or
fidivs
mov
xchg
dec
movsb
cmpsl
lret
sbb
pop
jno
scas
ja
movsb
repz
xor
or
push
sbb
scas
inc
dec
or
filds
jp
adc
xchg
jne
in
and
sbb
cmp
or
add
shll
movsb
std
call
xchg
and
push
add
js
cld
jnp
das
std
cmpsb
push
out
insb
or
mov
mov
sub
xor
or
dec
inc
outsl
and
inc
mov
fsubs
pop
ret
mov
in
call
ja
jmp
lsl
and
mov
jg
shrl
loop
inc
inc
aaa
daa
fcmovnbe
in
sub
xor
sbb
xchg
push
mov
cmp
dec
sbb
pop
loopne
loopne
add
les
inc
jne
cmp
xchg
je
inc
mov
movsl
out
test
inc
ja
inc
and
pop
add
or
add
out
ds
inc
sub
push
push
js
xor
sarl
outsl
fs
sarl
push
shll
and
loopne
jl
push
cmc
sbb
into
repnz
or
inc
fbstp
xor
xchg
call
inc
push
adc
ret
cmp
insl
ret
scas
mov
cmp
and
fcomps
sub
push
xor
cmp
jne
icebp
pop
cld
mov
js
imul
push
xchg
or
std
mov
mov
adc
notl
jae
pop
subl
out
out
addb
lret
mov
jg
mov
pop
sub
test
mov
adc
or
js
sbb
testb
in
pop
xor
sti
xchg
cmpsl
mov
sub
sub
shl
mov
jge
mov
xor
sbb
sar
sahf
or
and
cmpsb
jns
fcmovu
cmp
out
xchg
fiaddl
cmpl
mov
inc
mov
pusha
popf
les
fistps
sahf
jmp
fwait
out
fdivp
mov
cs
xlat
push
daa
jl
stc
rcrl
xlat
stos
movsbl
call
push
inc
pusha
shrl
js
loope
mov
adc
vmptrst
inc
scas
pop
sahf
aaa
and
pop
mov
outsl
aam
or
xchg
jp
cmp
movsl
add
fistl
mov
sbb
xchg
jne
jmp
fwait
sub
adc
jle
loopne
sub
ficompl
arpl
mov
roll
insb
addr16
adc
xchg
daa
sti
pop
jnp
mov
daa
ja
mov
lds
rcrl
decb
pop
mov
and
jno
jno
nop
insb
adc
out
test
fs
inc
dec
adc
cmpsb
shrl
ljmp
inc
mov
adc
pop
sar
shlb
mov
sbb
xchg
ss
xchg
xor
arpl
xchg
stos
les
stos
cltd
mov
mov
add
jp
mov
cmpsl
enter
scas
mov
and
push
add
hlt
outsl
mov
stos
and
xchg
dec
lods
in
out
push
mov
movsl
imul
mov
mov
adc
jb
out
cmpsb
movsl
pop
mov
test
jmp
mov
pop
fs
mov
mov
les
cmc
push
adc
xchg
pop
or
dec
push
mov
jecxz
outsb
pop
lds
and
imul
push
popa
sbb
xor
or
xor
push
rolb
data16
imul
sub
push
sub
push
pop
das
push
aaa
mov
pushf
int3
inc
push
mov
stc
out
inc
pushf
pop
pop
dec
mov
daa
jecxz
cwtl
add
push
fstpt
ret
mov
pusha
out
sbb
mov
aam
ficomps
mov
addr16
push
lods
add
pop
mov
sbb
adc
mov
and
jmp
adc
and
inc
mov
insl
movsl
push
push
inc
inc
imul
jnp
fwait
sbb
movsb
cmp
sub
add
push
lds
fistl
xchg
ds
hlt
cmpsb
insb
dec
mov
inc
sarl
fstps
cmp
mov
pop
movb
leave
mov
std
inc
xor
sahf
cmpsb
sarl
fchs
inc
push
lock
ror
push
dec
push
push
subl
lods
add
cmp
push
dec
mov
in
outsl
mov
xchg
insl
sbb
in
or
fnstcw
movsb
adc
or
in
pop
addr16
sub
test
cmp
sub
cld
pop
jg
cs
mov
in
mov
xor
jae
pop
divl
out
jbe
adc
xchg
pushf
out
xchg
sub
push
jnp
sbb
sub
iret
in
fistpll
mov
inc
jno
fstl
cld
push
inc
addr16
ss
stos
jge
lds
mov
cmp
pusha
mov
mov
icebp
xor
mov
or
fiadds
es
mulb
fmuls
mov
pop
into
incb
adc
adc
jnp
aad
int
push
inc
ret
or
add
sub
scas
xchg
mov
out
fldl
lods
stos
xor
inc
pop
sbb
orb
adc
adc
pop
xor
pop
sub
out
insb
movsb
and
cmp
arpl
mulps
fldenv
out
gs
adc
cmp
jle
dec
dec
lahf
xchg
fisttps
mov
xor
inc
lea
movsb
inc
movsb
sbb
dec
mov
divl
fdivr
cld
inc
xchg
pop
adc
pop
test
scas
pop
jge
cwtl
cmp
mov
pop
cmp
mov
fistps
pop
fbstp
jbe
sbbl
mov
cltd
add
jmp
les
mov
lods
add
pop
ja
nop
cmc
lahf
or
loopne
aas
fistl
fcmovnu
out
push
aas
enter
pop
xor
ret
jmp
cmp
pop
and
cwtl
push
push
test
dec
sub
cmp
push
pop
mov
outsl
je
scas
pop
pop
lea
pushf
inc
popa
cltd
loope
xchg
xor
jne
sub
fstp
pop
and
popa
and
cmp
xchg
leave
in
sub
jge
push
jae
mov
std
push
fistl
sahf
and
jmp
sbb
loopne
test
test
push
jns
cld
insb
and
push
and
scas
imul
into
aam
rcll
sbb
pop
jle
cmp
outsb
mulb
push
mov
sti
fs
dec
sbb
dec
lea
mov
xor
ret
xchg
push
aad
sub
fldl
ret
aaa
test
cld
ds
push
fiaddl
fdivs
int3
int3
inc
pop
dec
ret
inc
cli
outsb
lea
jne
pop
movsl
mov
cld
jae
mov
xchg
adc
pop
jae
int
popa
and
outsb
push
or
sbb
jnp
pop
pop
cmc
sub
das
test
mov
and
dec
bound
imul
dec
cmpxchg
aad
xchg
sbb
mov
dec
mov
xchg
popa
out
sti
pop
pop
push
dec
inc
xchg
das
push
mov
sub
inc
fsubrp
aaa
mov
mov
and
xchg
fmuls
and
xlat
inc
loopne
nop
xchg
int3
dec
mov
lret
jg
push
push
mov
popa
aad
mov
mov
sub
inc
jbe
stos
mov
sahf
test
ja
fisttpl
inc
xor
jmp
int3
scas
add
out
and
cld
mov
mov
stc
sarb
lea
shrl
pushf
aad
mov
mov
or
hlt
pop
add
fsubrs
inc
xchg
sub
lret
je
repz
push
xchg
push
mov
test
xchg
rclb
das
pop
int
testl
ja
push
pop
push
lods
cli
pop
pusha
jo
jg
sbb
push
ljmp
inc
adc
mov
in
in
je
ss
add
add
insl
subb
fistpll
or
jb
sbbb
ret
sub
jp
and
inc
xor
mov
daa
int
lret
rcr
sahf
cmp
shrb
xor
mov
inc
or
inc
lea
icebp
mov
movsb
out
lea
fsubr
hlt
test
cmpsb
out
pop
ret
xchg
mov
daa
ret
cmc
movsb
ret
inc
cmp
test
in
pop
in
testl
mov
pop
test
int3
arpl
cld
imul
imul
or
jns
out
mov
mov
mov
sub
xor
popf
push
mov
pop
insb
push
add
mov
fstl
sub
arpl
mov
push
xor
arpl
shlb
roll
pop
mov
jmp
mov
sub
jg
mov
mov
in
fcmove
testl
mov
das
subl
cmpsl
push
lahf
std
in
cmp
int
cmp
test
outsl
ljmp
andl
sub
dec
sub
mov
lods
lods
imull
jl
push
rsqrtps
sbb
divl
dec
adc
dec
push
lret
and
int3
add
and
adc
shrl
stos
mov
jnp
mov
jb
jnp
jns
ret
es
push
push
xchg
or
cmp
mov
push
jno
adc
pop
into
push
sahf
aad
cmp
dec
test
shrl
or
pop
dec
sub
or
mov
jns
pusha
jle
lods
cmp
jbe
scas
popf
cwtl
sub
xor
push
jle
je
sub
cs
mov
jg
xlat
sub
stc
lea
inc
sbb
out
xor
and
inc
or
into
dec
xchg
outsb
sub
rcr
or
dec
mov
rcl
dec
mov
mov
in
mov
outsl
int3
xchg
pushf
fistl
sub
push
pop
jg
stos
repnz
jmp
inc
mov
dec
adc
mov
fldenv
insl
lcall
loopne
xchg
ret
lahf
mov
cmc
sbb
inc
ss
cmp
push
mov
mov
dec
push
jnp
cmp
sub
pop
mov
inc
add
push
push
mov
mov
adc
subb
cmc
loope
cmp
or
cmp
mov
in
outsl
pop
imul
xchg
dec
rorb
mov
shr
push
inc
pop
dec
cmp
out
in
int3
bound
loopne
mov
ja
or
dec
stc
xchg
ljmp
jbe
ss
inc
out
out
scas
inc
clc
rolb
mov
cmp
mov
mov
lea
or
js
test
xchg
stos
sti
xor
xor
pushf
dec
or
mov
aam
push
push
imul
pushf
add
cli
sub
xchg
int
dec
and
loopw
fwait
cltd
inc
lahf
jp
jae
mov
out
outsb
pop
cs
sub
pop
pop
jle
jae
cmpsb
gs
cmp
out
dec
cmpsl
mov
mov
sahf
xchg
test
sub
les
and
fcmovnu
add
adc
push
cmp
push
mov
xchg
cmpsl
cmp
sub
mov
mov
push
add
dec
sbb
sub
sahf
cmpsl
push
xchg
mov
pop
lods
int
cmp
imul
bound
shrl
cmp
lds
mov
dec
lret
out
scas
xchg
inc
xchg
cmp
rorl
jle
mov
cld
ret
nop
pop
int3
mov
adc
ficoms
mov
xchg
pusha
sub
mov
test
jp
adc
mov
test
add
in
jl
push
ss
mov
fs
pop
cli
xor
int
test
add
sarl
jg
mov
loopne
inc
mov
push
movsb
fdiv
jne
jmp
loopne
xchg
adc
mov
sub
out
fs
jne
mov
jmp
ja
jo
mov
std
jp
subl
pop
mov
xchg
jmp
sbb
add
pop
stos
push
popa
fs
and
outsl
sub
inc
out
scas
sbb
das
cmp
jge
mov
lock
das
cmp
dec
popa
outsl
outsb
and
dec
cmpsl
push
clc
rol
popa
std
cwtl
repnz
mov
ret
xchg
jge
aam
out
les
fs
or
jg
xchg
xchg
pop
bound
mov
xorl
jge
pop
inc
les
xorl
pusha
sbb
lret
push
fwait
adc
mov
cmp
addr16
pushf
jecxz
push
sahf
sbb
sbb
push
into
mov
xchg
clc
scas
xchg
sahf
xchg
andb
das
cltd
xchg
sbb
jne
fisttps
fisubs
xchg
rorb
pushf
fidivs
gs
xor
or
cmpl
cld
das
jge
sub
enter
pop
jle
mov
push
pusha
pop
sbb
sbb
or
push
mov
lcall
and
cmp
sbb
push
je
sub
add
fs
pop
adc
cmp
in
jmp
test
ds
push
orb
add
pop
mov
das
or
jge
inc
fbstp
addb
mov
dec
adc
push
or
add
repz
in
cs
mov
ss
sub
fisubrl
cmpsl
push
xchg
adc
lret
add
mov
lea
jbe
repnz
and
scas
sbb
stos
test
fdivrs
xor
aam
mov
cs
inc
arpl
rcll
xchg
xor
jmp
popf
mov
stc
test
je
mov
fs
xor
ret
nop
cmc
idivl
call
sub
push
lret
sar
mov
jp
int3
jb
lahf
dec
pop
jns
xchg
lds
and
xchg
or
lahf
sub
neg
mov
mov
mov
aas
std
cltd
xchg
cwtl
push
ja
sub
jnp
dec
xchg
aam
pop
mov
rolb
or
in
cwtl
push
jmp
lods
and
or
sbb
jg
xchg
jmp
aas
mov
scas
sbbb
mov
sub
das
push
in
xor
xchg
push
mov
out
xor
push
mov
psrlq
xor
pop
mov
sahf
mov
xchg
mov
sbb
mov
test
xchg
aad
sbb
decl
xor
dec
mov
mov
cmp
lods
mov
xchg
inc
in
lods
push
test
or
pop
push
mov
cmpsl
outsb
dec
loopne
push
or
sbb
iret
sub
std
divl
mov
std
jmp
mov
push
pop
mov
in
out
int3
mov
push
or
push
xchg
push
lock
push
add
inc
xchg
adc
loop
mov
cltd
push
dec
push
push
lods
cmp
std
lret
test
push
enter
ret
nop
lahf
scas
sub
push
and
inc
jmp
shr
dec
mov
fwait
adc
clc
mov
add
jl
loopne
pop
jae
aas
jno
mov
mov
pushf
addr16
cltd
jb
mov
mov
movb
mov
xchg
int
push
cmp
testb
inc
mov
out
pop
push
popa
test
rcrl
inc
fmulp
inc
push
cmc
lock
xor
or
mov
push
cmp
scas
aas
push
mov
in
fnstsw
std
jbe
add
adc
inc
mov
outsl
in
les
xchg
add
les
ds
dec
jno
push
les
cmpsl
cmpsl
andb
fidivrs
iret
bswap
repz
add
lods
scas
xchg
js
into
xor
pop
mov
xchg
adc
popf
std
pop
push
popf
xchg
sub
xor
jnp
outsl
sbb
xor
ret
pop
push
mov
pop
xlat
arpl
sti
mov
dec
movsb
jge
insb
xchg
int3
mov
andl
jae
data16
jl
mov
outsb
mov
xchg
xchg
pop
cmpsb
xlat
jae
sub
out
aam
movsb
imul
pop
mov
popa
push
cmp
rcr
imul
test
jo
daa
imul
dec
test
and
popf
push
jl
stc
mov
cmpsl
jl
ja
jecxz
mov
xchg
jbe
pop
adc
xchg
xor
dec
dec
push
addr16
das
in
mov
int3
arpl
add
jl
pop
and
fcmovu
das
mov
shrb
sbb
call
adc
adcl
movsb
std
mov
gs
enter
pop
push
push
mov
popf
cmp
sbb
adc
pop
cmovnp
or
inc
push
xchg
pop
test
pop
aam
mov
das
push
aaa
repnz
push
icebp
xchg
mov
inc
fidivs
pop
mov
sbb
jle
and
mov
movsl
inc
xchg
fcoml
push
mov
inc
cmp
add
dec
sub
mov
pop
jge
out
mov
push
and
pop
in
cmovle
scas
mov
jno
imul
add
adc
fdivl
pop
sub
xor
inc
mull
aam
mov
xchg
and
sub
data16
sbb
xorb
fistpl
leave
sub
xor
or
bound
add
or
mov
or
adcl
push
xchg
sub
popf
pop
and
pushf
sub
jp
outsb
daa
dec
pop
mov
cmp
jl
sbb
cmc
mov
je
add
in
frstor
cmp
mov
jle
rorb
adc
dec
cmp
leave
insl
and
sub
test
push
inc
mov
mov
addr16
cs
jg
pop
imul
aam
jb
fbld
rolb
sti
bound
jae
push
inc
insl
sub
xor
gs
pushf
dec
push
pop
pop
pop
loop
out
pop
pop
out
in
mov
jne
cld
add
in
mov
pop
sbb
decb
in
inc
cld
cmp
add
imul
bound
test
lcall
scas
pop
pop
stos
scas
add
jne
es
sahf
in
adc
ret
mov
sub
mov
movsb
loopne
push
sub
xchg
add
xor
pop
mov
frstor
add
sub
push
adc
in
inc
pop
gs
push
xchg
insl
fcoms
shlb
lds
jg
scas
popf
push
mov
xchg
icebp
in
repnz
xor
pop
xchg
data16
fwait
leave
cmpl
and
push
mov
and
icebp
inc
popa
lret
shrl
adc
mov
lods
cmpsb
cmp
sub
aad
sbb
fs
les
out
xchg
cmp
pop
scas
mov
sarb
mov
push
mov
mov
lods
pop
loop
imulb
fimuls
jg
xor
xchg
out
ja
mov
cmp
add
loopne
sti
mov
dec
imul
jmp
shrb
xlat
xor
cld
rclb
and
gs
mov
mov
cmp
movsb
fstp
mov
mov
dec
dec
and
mov
mov
jno
les
dec
sub
push
cmovbe
ret
mov
inc
dec
cmp
pop
xchg
sbbl
dec
aam
sbb
push
jns
insb
in
ljmp
pcmpgtw
or
mov
xchg
adc
incl
cmpl
push
and
scas
mov
pop
bound
jp
cmc
cmpsb
mov
ja
mov
sbb
add
pop
and
xor
dec
ljmp
mov
cmp
dec
pop
inc
xor
xchg
in
and
fsubrs
xchg
or
int3
pushf
arpl
mov
xchg
mov
cmp
stc
push
mov
adc
inc
sbb
pop
out
loop
pop
dec
cmp
xchg
les
std
pop
stos
mov
stos
dec
cmp
push
dec
aaa
das
cld
pusha
jnp
dec
push
movsl
jle
pop
push
pop
pop
je
dec
shl
imull
lock
dec
lock
inc
movsb
inc
call
inc
inc
or
shlb
add
popl
popf
out
push
call
das
pop
push
and
pop
cltd
mov
arpl
xchg
pop
mov
call
dec
ds
inc
push
aam
mov
rcll
fcmovnb
xor
pop
jmp
stos
xchg
sti
dec
outsb
mov
int
add
adc
push
inc
call
xor
dec
jnp
adc
sbb
xchg
jle
push
jle
pop
add
sbb
xlat
repz
sub
adc
aaa
inc
jge
bound
mov
and
lock
loope
in
mov
push
jle
daa
push
lcall
jns
imul
es
cltd
rcrl
xor
nop
jb
mov
pop
jno
push
or
insb
mov
fdivs
pop
sub
sub
fwait
andl
sub
movsb
or
pop
cmp
cmp
mov
xchg
js
cmp
mov
mov
jp
push
push
ret
aam
or
adc
push
mov
jg
mov
inc
push
xchg
push
mov
or
lods
rcrb
adc
mov
xor
fcmovne
subb
adc
jne
imul
pop
imul
aam
inc
xchg
push
ud2
pop
aaa
xchg
bound
jae
lea
sub
push
xchg
lret
mov
loope
popf
les
pop
aad
pushf
aam
aaa
mov
sub
jg
aaa
xchg
imul
das
test
sahf
pop
sahf
and
pop
adc
ds
rcll
push
pusha
sar
jbe
jns
pop
outsb
ljmp
add
mov
mov
shrl
mov
adc
mov
shrb
cmp
daa
iret
jl
les
jecxz
sub
data16
flds
mov
dec
ja
ja
or
aaa
test
adc
sbb
mov
jns
or
inc
jge
cmpsl
int3
outsb
lock
movsl
cmp
push
ret
cmpsl
add
and
movsb
or
cmc
or
out
je
add
test
lods
xchg
fisttps
add
enter
or
ljmp
pop
and
enter
xor
and
lret
loope
aad
xorl
insb
sahf
jg
lock
dec
shrb
out
popf
lods
pop
je
or
lods
pop
hlt
loop
or
loop
outsl
movsb
push
cmpsb
mov
movsb
and
pusha
sub
enter
cmp
push
mov
out
pop
dec
jle
fistps
mov
imul
adc
mov
sbb
leave
mov
fisubrl
or
out
adc
cmp
pusha
ss
mov
sub
fst
mov
les
dec
in
mov
arpl
jge
loope
pop
outsb
ja
cmc
mov
cmp
xchg
bound
stos
inc
loop
sti
pop
mov
int3
inc
push
cs
out
mov
add
mov
test
cltd
lret
sbb
mov
in
sub
adc
data16
fnstsw
bound
into
dec
test
stos
mov
dec
arpl
popf
cmpsl
pop
dec
loop
sahf
je
mov
push
je
add
inc
cmpsb
jg
les
mov
and
or
mov
movsl
xor
ljmp
inc
ds
fisttpll
jb
pop
sub
sbb
test
add
mov
jmp
or
sbb
iret
into
lds
and
add
lods
cltd
jbe
cs
mov
sub
fadds
pop
xchg
ja
mov
jmp
call
xor
sub
sti
or
pop
lcall
cmp
lods
cs
jecxz
jae
xor
leave
sub
idivb
arpl
fs
xchg
cmp
cmpl
cmp
es
xlat
lcall
aaa
pop
pop
jno
ja
pop
jl
adc
push
pop
ret
xchg
add
in
clc
adc
call
jae
xchg
xchg
pop
pop
jb
clc
sahf
jae
inc
mov
jbe
fdivrl
outsl
sarl
icebp
mov
pop
jp
jle
pop
shrl
stos
sbb
sub
ja
lret
mov
add
mov
loop
ret
push
movsb
out
xor
sbb
aas
cmp
cld
mov
xor
lret
movsb
inc
lods
hlt
cld
sbb
or
sbb
or
outsb
or
adc
fnstenv
enter
popa
clc
jb
xor
adc
shlb
dec
pop
xchg
cmpsl
and
es
test
in
xor
btr
lock
add
pop
int
xchg
mov
push
loopne
xlat
sub
lods
pop
sub
inc
stc
js
stos
mov
or
es
mov
maxps
sbb
repnz
push
ss
sub
fs
in
pop
jmp
incb
xchg
in
mov
sbb
or
fxch
bound
mov
faddp
leave
xor
xor
fsubrl
and
xchg
xchg
stos
in
fstpt
lds
push
jg
test
hlt
aaa
stos
xchg
sub
ret
push
mov
out
push
cmp
or
into
insl
js
cs
lods
das
push
pop
test
ja
xchg
cltd
jg
popf
daa
xchg
out
out
cmpsl
push
call
clc
inc
scas
out
push
roll
sbb
xor
jno
push
sti
mov
in
sbb
imul
jp
cmpsb
sbb
jp
shrb
imull
or
in
pop
sbbl
jno
outsb
jo
subl
leave
icebp
push
push
in
cs
xor
and
rolb
movsb
mov
cld
out
ds
outsl
xor
loopne
je
and
or
sahf
jae
pop
push
dec
jns
inc
cli
jmp
lods
cmp
repnz
and
incb
shl
testl
jmp
call
jmp
sbb
enter
add
jnp
cmpsb
daa
fsubrs
lahf
testl
xor
imul
and
xchg
outsl
fwait
and
into
lahf
fmuls
in
push
in
push
push
sti
push
fadd
and
repz
xorb
fildl
sbb
rep
xor
pop
pop
inc
push
mov
cwtl
jl
ds
lods
mov
out
mov
hlt
jmp
aam
pop
in
adc
stc
dec
or
pmullw
aam
imul
daa
and
sub
xor
fistl
and
out
je
rorb
and
mov
mov
add
aaa
cltd
popa
mov
sub
mov
int
int
xchg
mov
hlt
clc
test
jbe
sti
cltd
jg
stc
fdivl
push
jge
mov
pop
mov
hlt
xor
aam
scas
cmpsl
outsl
inc
cmp
pop
add
inc
sahf
fcompl
inc
pop
xchg
enter
movsl
adc
jnp
sbb
lahf
pop
in
push
ret
push
mov
ret
sub
xchg
nop
iret
adc
pushf
call
and
popf
jae
aas
or
sbb
jg
dec
sbb
push
push
cmpsb
dec
std
sub
fmuls
sub
fiaddl
jnp
and
shll
das
push
js
push
mov
inc
add
ss
sub
mov
cmp
xchg
or
push
addr16
xor
or
test
push
fidivl
adc
pop
xchg
mov
jmp
sbb
add
aam
into
stos
jo
mov
push
mov
sub
jp
clc
and
sti
lcall
jns
cmp
jbe
stos
fwait
lahf
adc
incb
xchg
sti
rcrl
iret
sub
fcoml
fsubrl
xchg
inc
es
out
dec
xchg
mov
sbb
aas
or
xor
or
data16
sahf
cmp
cmp
sbb
jg
cmpsl
mov
fcoml
aaa
xor
ss
in
fnop
inc
pop
mov
loop
mov
clc
push
roll
mov
add
out
jbe
cmpl
push
cmp
in
pop
orl
mov
cmp
addb
dec
cli
int
rorb
test
fwait
sbb
cmp
push
lods
fistps
mov
mov
or
cltd
pop
mov
cld
jmp
pop
cwtl
fstpl
add
lret
jo
rolb
in
jbe
movhps
lret
cmp
daa
cld
aas
pop
xlat
sub
pop
and
jne
sbb
push
mov
into
mov
sbb
mov
lods
push
pop
adc
and
icebp
or
in
mov
sbb
cli
cwtl
decl
dec
inc
jo
mov
dec
leave
xor
sbb
cmp
inc
ljmp
aam
and
testb
pop
icebp
repz
es
out
and
mov
sub
xchg
jne
arpl
cmc
aas
fistps
cmp
aaa
test
push
sbb
xor
aam
add
mov
sub
test
cmp
iret
xor
cld
mov
repz
clc
fisubrs
jne
mov
xlat
pop
pop
xchg
mov
addl
ret
cmp
jl
pop
mov
nop
lock
jbe
push
icebp
push
adc
ficoml
out
call
or
push
jge
or
arpl
into
add
xor
and
pop
push
scas
sub
imul
sub
in
pushf
enter
mov
les
shr
adc
jbe
mov
or
push
push
mov
sub
test
movsb
or
mov
movsb
pop
in
popa
cs
mov
mov
mov
mov
into
imul
repz
mov
fisttpll
loopne
popa
ds
xlat
or
push
xor
ret
lods
pushf
mov
fisttps
jno
sub
call
in
test
cmp
xor
add
out
push
int
mov
lds
outsl
adc
dec
lods
dec
xor
cwtl
pop
pop
inc
je
dec
loope
mov
int
lea
lret
jmp
fwait
inc
loope
mov
int
scas
add
xor
mov
cmp
mov
imul
pop
mov
jmp
imul
add
xchg
test
push
push
ss
jl
pop
test
pushl
adc
test
mov
dec
push
icebp
add
aaa
jns
enter
das
xchg
cmp
dec
mov
aas
ss
adc
cmp
sti
jo
jae
std
out
mov
cmp
in
adc
jns
shr
xor
lret
inc
repnz
jmp
jmp
clc
dec
push
sub
jb
mov
push
xchg
mov
mov
jo
bound
add
push
out
inc
push
outsl
cltd
bound
movsb
mov
mov
push
lret
xchg
outsb
lahf
push
xchg
inc
pop
repnz
inc
and
cwtl
pop
dec
push
in
cmp
loope
cmp
jno
mov
outsl
mov
or
icebp
insb
int3
mov
addr16
and
pusha
xlat
mov
daa
clc
pop
and
in
mov
ss
mov
and
imul
mov
push
mov
inc
cmpsl
mov
popa
rolb
add
dec
retw
xchg
aam
scas
adcb
ds
out
mov
aam
or
xchg
jae
inc
dec
cmp
movsb
aaa
cli
lret
mov
loopne
inc
push
jmp
lcall
enter
pusha
mov
lods
stos
push
test
add
jbe
iret
dec
lock
pop
sbb
adc
xor
popf
into
pop
ret
xor
sbb
aaa
repz
push
pop
push
and
mov
xor
jmp
xchg
pushf
jg
lret
jle
xor
in
psadbw
sti
sbb
popf
dec
ret
push
test
rorb
in
xlat
es
sbb
or
sub
stc
and
jle
pusha
mov
scas
mov
xchg
add
xchg
adc
jo
ds
and
jg
add
mov
mov
pushf
sahf
cmp
adc
fcoms
xchg
push
outsb
pop
or
aad
lret
adc
pop
inc
or
sbb
cmp
jecxz
xchg
mov
or
mov
insb
dec
jg
test
pop
add
add
scas
ja
cmp
loop
in
fldl
xchg
xchg
imul
xchg
lock
icebp
add
mov
xor
pop
or
sub
popa
mov
test
jnp
test
pop
jo
mov
sarb
add
stc
or
enter
cmpsb
enter
mov
or
mov
test
cmpsl
mov
mov
jg
or
aas
fwait
mov
arpl
aam
xor
bound
sub
push
mov
inc
lcall
fildl
sbb
inc
movsl
push
sub
lcall
pop
mov
dec
dec
xor
jge
cltd
inc
fcoml
pop
lods
cmp
sub
loope
das
in
mov
sub
adc
cmc
cs
jmp
mov
out
js
imul
ss
ljmp
xlat
mov
cmp
out
jo
pop
cwtl
fmuls
fs
jns
mov
and
jl
adc
je
jle
jae
dec
pop
jnp
adc
jle
imul
push
xchg
lock
xchg
inc
pop
jg
jl
adc
or
cmp
outsl
lret
ficoml
xorl
pop
test
jb
pushf
xlat
imull
mov
jne
testl
mov
mov
inc
leave
xchg
jns
sbb
dec
xor
xchg
imul
pop
or
fldt
stos
cmp
cs
or
in
cmpsb
lcall
xchg
in
adc
ret
je
jbe,pt
mov
mov
es
dec
xchg
daa
pushf
sbb
pop
sbb
mov
xor
fsubrl
cs
pop
xchg
xchg
in
sti
enter
ljmp
dec
dec
pop
cli
subl
cmpsl
inc
ret
scas
push
sti
pop
jno
push
sub
cmp
je
ss
jl
dec
xlat
pop
or
sub
and
pop
inc
dec
adc
mov
iret
jge
repnz
mov
jle
pushf
adc
mov
cmp
ds
fiaddl
pop
cmovb
lret
int
xchg
fucompp
mov
xor
and
call
in
jl
fistpll
aaa
mov
and
mov
mov
pop
cltd
iret
xchg
roll
dec
push
mov
int3
shlb
dec
xor
jle
xchg
addr16
cli
ret
adc
sbb
out
les
push
fistpll
stos
stc
lret
mov
push
push
cmp
data16
jmp
ret
scas
and
or
fdivs
jge
mov
sub
ja
fistpl
fdivrl
push
icebp
pop
bound
or
and
push
sub
insb
push
repz
sbb
int
sub
mov
lods
mov
sub
ret
popf
xchg
aam
aam
shrl
inc
lret
xchg
mov
stos
jp
fwait
repz
pcmpgtw
jge
aaa
pop
or
mov
xchg
clc
pop
cmp
das
dec
cmp
pop
jg
sub
repz
mov
mov
lds
inc
xor
loope
mov
sub
push
mov
and
jecxz
inc
xchg
aaa
adc
cmpsl
outsb
pop
or
bswap
mov
adc
sbb
and
pop
and
inc
xchg
cli
xchg
gs
mov
cmpsl
or
mov
inc
xchg
or
rcr
sbb
inc
js
mov
xchg
push
pop
xor
mov
adc
arpl
inc
scas
shlb
ret
shll
popa
ljmp
cmpsl
inc
nop
xchg
pop
out
mov
das
enter
pop
mov
fucomip
adc
sbb
and
or
les
int3
fisttpll
and
sti
push
dec
in
test
std
enter
mov
rcll
ret
rol
jecxz
jmp
les
pop
mov
ret
ja
xor
rcr
or
push
int3
and
out
vpaddusw
jge
mov
scas
aaa
jle
adc
cmc
cmpl
sbb
jge
cltd
inc
insl
adc
loop
push
push
xchg
aam
adc
sbb
and
out
shll
inc
mov
gs
fsubrs
popf
test
aaa
inc
mov
cmpsb
shr
xor
roll
lods
fs
idiv
stos
mov
mov
outsl
push
cmpsb
lret
scas
dec
adc
rorb
ljmp
clc
dec
mov
sbb
popf
xor
mov
inc
sahf
jge
mov
lods
push
dec
cmpb
jno
enter
test
das
daa
ret
aaa
mov
and
dec
dec
imul
mov
test
addr16
mov
ret
xor
xor
push
mov
mov
fsubrp
mov
popl
cmp
decb
negl
dec
cmp
roll
test
jge
ror
adc
icebp
movl
and
xchg
nop
adc
sub
mov
outsl
jb
popa
negb
push
scas
ret
stos
add
sbb
mov
mov
out
jecxz
inc
sahf
ljmp
hlt
pop
sbb
cmp
enter
ja
sub
mov
sbb
in
rolb
pop
inc
mov
movsl
in
xorl
sub
xchg
ss
xor
shl
add
test
addr16
scas
shll
jns
add
xchg
or
pop
add
das
lods
adc
inc
cmp
push
cs
pop
adc
pop
jns
cmpsb
nop
inc
lock
mov
jmp
sub
xchg
add
xor
mov
mov
rcr
mov
in
ret
addr16
inc
jno
and
push
aam
sbb
inc
out
mov
outsl
repz
imul
mov
repz
repnz
xchg
lods
push
dec
out
gs
mov
mov
jmp
out
sbb
dec
popl
push
pop
hlt
mov
mov
jg
or
mov
icebp
cmpsb
cmc
ret
and
jno
xchg
fistpll
cmc
jo
dec
sbb
lock
mull
mov
pop
mov
adc
hlt
loop
jb
mov
lods
out
jnp
int3
and
hlt
xchg
mov
mov
addr16
out
idiv
jmp
push
xor
adc
inc
pop
cltd
dec
cltd
push
push
xchg
lret
dec
cmp
mov
xlat
inc
add
hlt
imul
bound
cmp
dec
out
fmulp
inc
nop
xor
dec
iret
pop
dec
mov
enter
inc
out
cmp
mov
jo
stos
rcr
je
push
xchg
mov
mov
lds
pushf
aaa
mov
dec
mov
cmpsl
pop
inc
sub
shlb
out
sbb
fstl
xchg
jg
loope
cwtl
push
icebp
call
repz
push
adc
mov
icebp
push
jb
inc
adc
dec
adc
pop
clc
sbb
push
jge
sahf
mov
cwtl
mov
sbb
fs
xchg
xlat
fisubrl
push
addr16
repnz
cli
shrb
rcrl
in
pop
jnp
dec
fisubl
fldt
bound
jle
popl
fstpl
or
push
and
pushf
lods
pop
dec
push
cmp
hlt
repnz
sti
loop
loope
xor
xor
add
int3
jmp
pusha
or
in
inc
add
test
mov
xchg
adc
sbb
inc
sub
outsl
mov
add
hlt
ficomps
and
jnp
mov
xchg
jo
daa
xor
push
lods
mov
enter
dec
ja
stc
pop
jecxz,pt
push
cmp
inc
xlat
xor
aaa
adc
or
cmp
xchg
pop
push
movsb
in
popf
xor
pop
scas
in
leave
and
dec
fstpl
dec
sbb
aam
les
inc
sbb
mov
jns
loope
pushf
pop
mov
mov
sbbb
scas
aad
mov
pop
add
test
mov
lret
pop
xchg
or
pop
push
std
mov
jns
decb
push
or
sahf
in
pusha
and
ret
popa
sbb
sbb
cld
inc
pop
lods
mov
xchg
in
insb
lock
popa
movsb
sbb
lret
inc
push
sti
jne
bound
xlat
xchg
ret
test
pop
data16
in
ret
mov
adc
sbb
xchg
std
cmp
sbb
mov
cmpsl
idiv
add
sti
mov
popf
ss
stc
jecxz
xor
or
or
and
push
das
dec
int
notb
movsb
es
fstl
mov
mov
cwtl
and
dec
fistl
stos
dec
mov
cmp
jne
daa
push
fwait
xchg
bound
mov
imul
cmp
sub
sub
mov
cmpsl
sub
imul
and
les
push
cmp
xor
or
rclb
and
stc
xor
fsubrl
shlb
sub
pop
add
cmp
cmpsl
dec
pop
add
out
inc
pop
aaa
mov
mov
mov
adc
mov
sub
into
js
shr
push
xorl
xchg
out
lahf
xor
pop
gs
aam
inc
mov
cmpsl
xchg
sub
adc
pop
adc
sbb
mov
and
mov
mov
mull
test
mov
mov
xor
cmp
std
and
sti
popa
cmp
mov
ss
add
xchg
ljmp
sbb
hlt
mov
aaa
adc
repnz
mov
cwtl
insb
arpl
stc
mov
loope
and
dec
and
mov
inc
pop
xchg
mov
add
cmpsb
repz
mov
cmp
jp
cmp
jg
inc
or
shlb
stos
pop
mov
cld
xchg
dec
add
jno
adc
std
mov
cmp
aad
pop
mov
sbb
cwtl
ss
insb
jns
inc
add
lods
fucomip
fistpll
data16
call
push
lods
mov
loope
xor
sti
xorl
lods
fcmovu
test
sub
mov
push
mull
les
mov
dec
inc
xlat
or
fst
aas
out
xor
out
dec
inc
nop
push
das
sbbl
in
cvtps2pi
adc
pop
into
push
sub
mov
ret
mov
pop
sar
hlt
dec
in
js
xchg
iret
push
or
sbb
loopne
cmp
aas
imul
insb
xchg
out
nop
xchg
fcomps
test
push
lcall
fndisi(8087
pop
cmp
dec
cwtl
jne
fdivr
xor
mov
jnp
pop
cmp
outsb
or
mov
mov
fistps
lods
push
adc
or
sbb
test
mov
adc
repz
jae
dec
loope
xchg
jl
not
loope
and
cld
ret
popa
sbb
or
rcrb
sub
cmp
mov
aam
jne
jecxz
fistps
orb
cmp
sahf
or
dec
jl
xor
ljmp
stc
std
hlt
popf
xchg
cltd
int
test
dec
jne
or
add
lret
mov
gs
xor
xchg
bound
jne
push
xchg
pop
in
xor
jmp
jbe
jl
idiv
mov
aas
jmp
push
pushf
mov
adc
pop
jnp
fiaddl
out
jno
js
inc
loope
mov
dec
jmp
into
xchg
call
xchg
aas
cwtl
fistps
sbb
xor
stos
and
sub
jo
dec
mov
test
pop
mov
cld
push
add
mov
nop
ret
aad
mov
dec
es
inc
jmp
bound
loope
jge
xchg
mov
xchg
push
lret
ja
divb
pusha
mov
ret
lock
mulb
enter
push
cmp
jle
jle
movb
ret
cmpb
cld
les
lcall
push
testb
movl
out
pop
sub
leave
or
mov
pop
int3
mov
sub
loopne
nop
testl
jp
jne
sbb
and
and
lods
adc
pop
popa
mov
mov
cmc
and
loop
notb
inc
or
or
and
jl
add
mov
or
inc
fwait
int3
mov
addl
das
xor
in
pushf
or
pop
ret
aas
lds
mov
inc
mov
out
stc
sbb
mov
sarb
outsb
inc
ret
test
xorb
or
mov
adc
mov
insl
test
dec
fs
gs
shlb
cmp
push
cmpsb
pop
mov
pusha
xor
addb
andl
mov
jle
xlat
imul
leave
push
call
xchg
je
loope
mov
sub
ret
or
jg
cmp
insl
dec
or
sub
pop
push
shr
push
stos
xchg
sahf
shlb
and
push
inc
addr16
pushf
add
out
dec
aas
mov
sbb
add
and
rcl
adc
jb,pt
fwait
out
jb
ja
mov
into
pushf
fucomi
and
lods
lds
nop
outsl
insb
jae
outsl
outsl
aam
pop
cltd
inc
pop
pushf
push
and
mov
mov
aam
loop
xor
fiaddl
js
call
pop
cmp
jne
sbb
adc
repnz
into
mov
ret
add
pop
sbb
push
jne
mov
cmpsb
sbb
sbb
mov
test
xchg
dec
or
jl
loop
nop
mov
out
mov
or
je
jns
decb
popa
out
packssdw
test
and
xor
xlat
cld
or
mov
jle
cli
pop
dec
adc
adc
inc
cld
fisubrs
cmp
insb
shll
fstpt
arpl
lret
js
dec
push
in
xor
or
jnp
out
dec
mov
inc
aam
sbb
jo
enter
xchg
sub
pop
lock
pop
bound
add
cmpsl
xchg
roll
mov
cli
movd
addr16
out
ret
fldcw
aaa
test
push
jo
daa
andps
test
adc
mov
sub
popa
mov
dec
mov
lret
xchg
sbb
nop
jae
mov
rcl
cmc
adc
add
imul
orl
adc
sti
jle
and
popf
lahf
mov
cwtl
cmc
xlat
adc
filds
outsb
inc
mov
fwait
dec
inc
and
xor
sub
adc
jecxz
out
pop
jmp
sbb
mov
ret
mov
or
and
dec
lds
fwait
mov
sbb
int
or
rclb
movsl
aas
adc
jno
or
lret
imul
push
lods
ret
xor
or
daa
aam
push
out
call
pop
sbb
mov
aaa
aam
lcall
mov
repnz
add
insl
stos
and
stos
jae
test
aad
or
xlat
xchg
sbb
fldcw
jb
mov
jno
aaa
xchg
aas
cli
xor
daa
jp
mov
mov
fcompl
bound
mov
push
pop
popa
addr16
inc
jns
mov
push
push
dec
div
cwtl
enter
test
mov
inc
popa
mov
mov
cmpsl
mov
vpaddd
dec
pop
mov
xor
push
pushf
int
lods
cmp
sub
clc
inc
jp
daa
jl
push
adcl
std
mov
cld
mov
mul
xor
inc
sbb
pop
pusha
pop
and
jo
pop
in
pop
and
add
pusha
jnp
or
and
lds
andl
push
ud0
movsb
and
sbb
add
mov
out
mov
lea
outsl
rclb
or
pop
mov
je
push
jge
inc
xchg
jo
cmpl
insl
mov
cmc
fsts
cmp
test
mov
or
cmp
push
xchg
xchg
pop
xor
jge
mov
out
bound
call
cwtl
lcall
repnz
sar
xchg
lcall
adc
cltd
adc
pop
xor
push
xchg
cmp
jmp
add
adc
xchg
lea
insl
jge
arpl
stc
hlt
icebp
push
mov
and
in
je
repnz
inc
pop
lock
loope
lret
fsubrl
and
out
pushf
lods
enter
stc
xor
pop
jo
push
bound
xchg
ret
sbbb
sbbb
sar
xchg
sbb
aas
dec
ds
shl
sbb
das
mov
aas
repz
cmpsb
push
das
mov
movl
mov
sbb
xor
imul
jg
sbb
testl
test
pop
mov
jmp
or
fld
dec
mov
incb
xor
sti
cmp
repnz
cli
mov
pop
movsb
and
inc
in
imul
test
testb
lds
mov
push
xor
sbb
movsl
xchg
or
xor
sbb
inc
push
daa
push
add
xchg
mov
pop
insl
cltd
stc
mov
dec
aad
jne
mov
inc
adc
mov
xchg
cltd
ficomps
lcall
popf
outsl
cmpsl
test
mov
mov
std
mov
pop
int
cmp
xchg
ss
pusha
imul
xor
fcmove
cwtl
mov
inc
lods
dec
lcall
push
into
pop
dec
jns
imul
dec
xor
adc
jno
jnp
popa
mov
incb
pop
rclb
cmp
cmp
cmp
dec
mov
cmpsb
arpl
nop
fstpl
ret
sahf
scas
aaa
push
aam
jge
mov
repz
pusha
pusha
js
and
inc
cmpsb
cli
mov
mov
imul
cmp
bound
shll
rorl
xchg
and
mov
sbb
movsb
popf
push
and
lret
jle
cmpsl
mov
jge
adc
jl
popa
and
push
or
mov
movsl
cs
sub
loop
call
fildl
mov
or
into
mov
dec
lock
or
mov
out
xor
pop
cmpsb
mov
psubsb
ss
push
adc
push
xchg
xchg
push
out
mov
test
test
cmpsl
xchg
nop
pop
dec
bound
sti
shll
adc
fstpt
fcoms
dec
push
pop
mov
cmpl
fldpi
xlat
sbb
cmpsb
sub
jmp
push
push
push
es
xchg
and
jg
mov
cmpsl
push
inc
pop
mov
mov
or
jp
out
ja
aad
xchg
add
xchg
and
pop
xchg
mov
jo
or
pop
daa
inc
inc
aad
adc
jb
or
pushw
pop
mov
stos
out
es
jno
int3
mov
adc
pop
jle
aas
and
add
lods
out
jge
jne
scas
add
dec
aad
sahf
fisttpl
push
rorb
push
es
loope
cltd
cmp
or
fistpl
push
mov
outsl
mov
adc
in
or
xorl
and
enter
dec
lds
push
mov
movsl
les
cmp
dec
push
outsb
push
inc
dec
cs
push
and
jg
jne
mov
fs
mov
mov
dec
pop
jecxz
add
xchg
jge
out
xor
int
inc
icebp
ss
xor
mov
imul
cmpsl
fwait
hlt
mov
mov
xor
and
lods
test
mov
pop
mov
cmp
lahf
stos
cwtl
test
jb
cwtl
jnp
mov
push
adc
out
jno
xchg
mov
mov
call
lds
cmp
adc
push
push
jo
data16
lret
sti
sbb
addr16
adc
lcall
fimuls
ret
or
or
dec
lcall
fistps
addb
xor
stos
cmpsl
xchg
mov
jg
push
stc
out
inc
ret
fs
add
lods
movsb
pop
fsubrl
mov
sbb
testl
roll
jb
in
xor
std
jg
adc
shrl
js
ja
pop
ds
stc
roll
pop
xlat
ds
loopne
sbb
or
mov
es
inc
in
std
dec
add
mov
push
adc
push
pop
ss
inc
outsl
imul
ds
push
out
into
jo
jmp
std
std
int3
cmp
insl
or
sub
test
imul
jb
bound
mov
jmp
adcb
cwtl
or
inc
sub
insl
lods
jp
shll
cld
jge
leave
call
subb
in
adc
inc
shlb
dec
pop
push
scas
rclb
and
lahf
mov
sbb
cs
testb
pop
inc
fbld
lahf
jbe
mov
add
dec
or
dec
ret
inc
mov
adc
pop
xchg
push
sub
lock
insl
mov
test
mov
mov
lods
lods
jne
push
pop
and
popa
sub
sti
sub
pop
dec
movl
daa
push
loop
or
and
and
mov
push
ret
imul
cmp
sti
adc
shlb
out
stos
push
cmp
dec
mov
jl
or
pop
movups
push
jge
adc
imul
cmp
jge
aaa
xchg
push
sub
cld
inc
xchg
lds
sbb
sbb
xchg
jle
fcomps
in
movaps
cli
inc
add
mov
js
push
int
js
pop
mov
outsb
fldl
popf
insl
dec
test
xchg
xor
and
out
mov
xchg
cs
pop
inc
cmp
dec
not
xor
ret
stc
adc
scas
cmp
leave
push
imul
jb
aad
iret
aam
dec
xchg
pop
aam
stc
mov
mov
cltd
les
aas
mov
out
imul
loope
cmpsl
inc
cld
movsb
sahf
fs
cld
mov
test
and
or
cmp
xor
lds
jecxz
lret
insb
jp
lret
push
bound
mov
pop
xchg
inc
int
mov
movsl
cwtl
cmp
push
fcompl
dec
add
mov
xchg
ret
cs
push
cmp
cmp
aam
mov
mov
or
jge
fidivrs
jbe
or
pusha
mov
jno
xchg
mov
inc
enter
ret
xchg
inc
nop
jae
divl
xor
andb
cmp
pusha
test
jge
jo
pushf
aam
sub
fsubp
mov
push
test
bound
sbb
ljmp
mov
imul
mov
idivb
negb
xchg
jmp
in
lods
test
jne
pop
rorb
push
out
or
xchg
stos
xor
in
pop
mov
mov
xchg
mov
mov
lret
leave
fmuls
int
pop
sub
mov
sub
inc
fmul
fsubrs
js
cmpsl
repz
movsl
cmc
sbb
rol
adc
push
imull
push
xor
int3
pusha
mov
jg
xlat
out
movsb
sarb
addb
inc
and
push
push
data16
bound
cmp
sub
cmc
mov
ljmpw
push
mov
sbbb
aas
or
aaa
xchg
pop
loope
ret
mul
mov
lods
lods
cld
xchg
es
dec
xor
daa
test
lds
xorl
iret
and
dec
int3
je
mov
lret
stos
sub
adc
and
push
and
aad
incb
adcb
mov
aaa
jne
pop
lea
fwait
mov
push
pop
cwtl
push
shll
rorl
xor
ss
bound
or
pop
mov
popf
ds
cmp
inc
sub
test
loopne
pop
and
adc
popf
test
pop
ds
hlt
xchg
and
add
cmp
mov
in
out
shlb
add
loope
ljmp
mov
fisubrs
fimull
pop
into
mov
xorb
iret
cmp
push
inc
pop
pop
enter
mov
ficomps
sub
popa
mov
xor
push
sub
dec
mov
push
stos
mov
stos
cmp
notb
sbb
fldcw
mov
inc
mov
in
aad
mov
add
jb
out
je
inc
fs
pop
push
dec
dec
in
fs
lea
in
or
rcll
add
push
gs
push
in
je
leave
sub
lret
or
ffreep
lahf
sub
cmpsl
add
mov
mov
fisubl
pop
inc
js
icebp
imul
jns
in
jecxz
aam
pop
rorl
pop
faddl
adc
fwait
xchg
xchg
pop
out
ja
dec
lret
and
or
js
ror
push
imul
dec
pop
popa
cmp
outsb
mov
mov
jp
and
hlt
pushf
jo
mov
in
hlt
and
leave
mov
push
inc
jne
lock
enter
jno
lods
and
or
movsb
cli
mov
dec
xchg
inc
sbb
cmc
mov
loopne
mov
into
adc
adc
mov
mov
jle
cmp
sbb
jns
stc
mov
xchg
sahf
push
push
push
inc
jb
lea
shlb
mov
dec
pop
xchg
push
sbb
pop
pusha
mov
ja
insl
aam
cld
or
pop
xlat
xchg
sub
mov
fsubrs
daa
and
pop
scas
mov
outsl
push
fadds
cmp
inc
dec
lods
cmp
sti
inc
pop
andl
dec
insb
nop
sbb
fidivs
fnstsw
mov
xor
int
push
xchg
inc
out
lods
cmpsl
iret
je
push
loop
xchg
stc
inc
clc
jmp
jp
in
pop
mov
and
dec
daa
lea
test
test
fnstsw
dec
out
pop
fwait
adc
or
mov
inc
cmp
sar
xchg
dec
push
cmp
push
adc
lcall
mov
add
pop
jb
adc
jns
mov
popf
pushf
insl
inc
adcl
adc
fisttpll
or
popa
jl
xchg
fdivl
movl
xchg
ret
cmpsl
gs
and
or
pop
sahf
icebp
xorl
loopne
mov
movsb
repnz
mov
mov
scas
cmp
mov
dec
push
add
sahf
faddl
cltd
movsl
movsb
dec
dec
lea
out
mov
pushf
ret
xor
jns
fs
pop
push
test
push
xor
stos
shll
loope
push
inc
call
mov
cmp
push
hlt
in
push
sbb
stc
cmpsb
outsl
push
int
popf
imull
bound
add
insb
aad
mov
aam
adc
sahf
lds
and
jl
mov
adc
or
mov
int3
pop
push
cld
sub
nop
into
sarl
add
repz
cmp
insb
xchg
das
test
mov
fucomi
sbb
fs
mov
lret
jne
cmp
bound
mov
and
hlt
sub
sbb
sbb
xor
and
inc
stc
push
jl
add
push
jg
mov
add
pushf
xor
xchg
sbb
mov
inc
fwait
imul
sub
pusha
push
outsl
jle
push
stc
les
test
pop
pop
in
push
inc
jne
rcrl
sbb
adc
fld
inc
sahf
rcr
loopne
out
cmp
xlat
int
xor
inc
jp
pop
repnz
frstor
cmp
adc
lahf
push
notb
ss
dec
mov
dec
sbb
rol
ja
outsl
loope
inc
xor
in
push
aaa
pop
pop
and
fildl
aaa
roll
cmp
push
pop
pop
das
rcrb
ss
fadds
mov
scas
xor
dec
mov
cmpsb
leave
test
push
or
and
out
mov
outsl
pop
xchg
cmp
mov
push
cltd
sbbb
xor
int
rcrb
into
in
scas
jmp
inc
dec
in
insb
jmp
push
lock
fwait
out
xchg
in
ror
out
mov
sbb
mov
sahf
daa
mov
ss
rclb
mov
mov
out
loop
fnstcw
xchg
mov
mov
rorb
ss
pop
or
mov
add
and
or
xchg
cmp
or
xchg
sbb
insl
adc
lods
rep
push
jl
and
out
jge
push
xchg
dec
in
mov
add
mov
stos
inc
shl
mov
scas
cmp
imul
mov
add
add
gs
aaa
cmp
sub
xchg
pop
and
das
push
sti
les
push
rcrl
push
leave
fimull
and
jecxz
inc
jmp
or
test
outsb
dec
dec
fiadds
clc
adc
cli
adcb
rcrb
xorl
sbb
cmp
adc
mov
ret
mov
fnstsw
xchg
fnstcw
and
push
lea
in
ret
push
mov
push
pop
mov
xor
mov
scas
mov
jg
negl
lret
jecxz
sub
std
nop
or
sbb
and
jns
sti
xor
inc
dec
lahf
fcoml
sbb
dec
in
stc
lods
push
push
fmull
jmp
pusha
and
out
jg
dec
and
cmpsb
xchg
mov
and
xchg
xchg
inc
xchg
inc
mov
xor
or
in
pop
in
iret
out
or
or
ret
lea
cmc
mov
aam
in
adc
pop
je
fdivr
pop
push
push
pop
inc
gs
mov
aam
add
inc
push
mov
or
push
sub
add
cmp
dec
mov
in
ret
inc
out
sbb
or
push
std
jmp
add
jle
cvtpi2ps
push
mov
xor
push
cmpl
add
lods
and
out
mov
adc
pop
push
jo
adc
notl
fnstcw
scas
add
ja
sarb
dec
imul
and
rorl
nop
mov
mov
outsl
out
ds
mov
adc
stos
mov
and
repz
sbb
mov
cli
cmp
push
and
leave
fildl
fsubrl
pusha
das
mov
ret
orl
lea
pusha
mov
dec
add
mov
repnz
mov
std
jle
insl
dec
lcall
cmp
cli
inc
lea
adc
notb
test
roll
jg
dec
xchg
inc
int
test
int
icebp
iret
cs
mov
sbbb
push
rcrb
loop
sti
int
mov
or
loopne
xlat
jnp
in
cmpsb
mov
sub
push
pop
xchg
insb
jmp
xchg
mov
push
xor
mov
shll
cltd
sbb
inc
mov
cmpsb
imul
xchg
dec
mov
sbb
mov
jg
or
sbb
fs
and
out
divb
add
pop
xchg
jns
data16
inc
cmpsl
fcmovnb
dec
xchg
lods
inc
mov
idivl
inc
pop
js
icebp
enter
scas
push
push
imul
mov
pop
mov
les
xchg
out
das
jns
and
xor
jne
sbb
cs
rorl
jg
movsl
test
xor
pop
xor
fldt
je
push
imul
push
xlat
pop
pop
and
jl
add
int
cld
cli
sbb
frstor
mov
jmp
lock
aas
ret
aad
sub
jp
mov
xchg
push
mov
mov
je
cmpsl
ficoml
clc
dec
js
fs
jle
mov
outsl
stc
sti
aas
xor
mov
adc
pop
fcomps
enter
mov
je
mov
xor
shlb
xor
dec
outsl
fsubs
push
mov
stos
mov
test
and
leave
inc
jno
inc
inc
leave
es
mov
adc
sarb
cmp
ja
mov
adc
jmp
push
rcrb
je
push
das
sbb
xor
enter
test
clc
sub
subl
adc
adc
xor
pushl
inc
push
mov
mov
std
sbb
mov
leave
add
in
sbb
sbb
and
pushl
outsl
xchg
sub
insw
fidivl
jmp
mov
mov
mov
push
fistpll
shrl
mov
sbb
jmp
int3
movsb
out
out
mov
push
shlb
enter
jg
inc
jae
pop
fsubl
dec
cmp
out
or
rcll
jnp
imul
sbb
cltd
iret
subl
gs
adc
adc
mov
popf
push
jno
mov
inc
shrb
sbb
decl
mov
fbstp
ds
pop
sbb
mov
push
ja
cmp
mov
inc
xchg
xchg
fdiv
sbb
add
jp
adc
fcoml
pop
dec
jge
mov
pop
cmp
mov
ljmp
and
push
dec
faddp
popa
jmp
mov
xchg
js
pop
lret
xor
aam
lods
push
pop
sbbl
jg
mov
sbb
lret
cmp
cmc
adc
jmp
gs
shll
test
dec
push
jp
mov
push
ds
dec
repnz
cmp
dec
or
fidivl
or
ja
mov
cmpsb
push
jp
adc
mov
mov
sti
pop
push
insb
inc
or
push
ret
scas
lds
xorl
mov
push
cmp
mov
loopne,pn
pop
dec
mov
xor
pop
lods
std
and
lcall
in
mov
mov
std
lret
adc
adc
sbb
insl
dec
sbb
xchg
pop
pop
mov
icebp
mov
out
fwait
in
sahf
je
aam
sti
inc
jno
fadd
cmpsl
mov
test
mov
push
push
mov
mov
mov
repz
ret
or
lret
add
sbb
call
jno
mov
sub
pop
push
aas
jbe
pusha
pushl
clc
pusha
add
lea
jbe
push
pushf
push
mov
pusha
lea
jmp
push
bt
stc
add
movb
pushl
call
push
call
pushf
popl
pushf
pushl
popl
push
pusha
mov
movl
lea
jmp
mov
mov
mov
jmp
pusha
jmp
jmp
mov
call
mov
push
jmp
mov
pushl
push
pushf
popl
lea
js
pusha
pushl
popl
pushf
pushl
push
pushf
lea
jmp
pusha
mov
push
call
inc
clc
neg
bt
cmc
not
cmp
bt
neg
test
stc
xor
cmp
cmc
movw
test
mov
cmp
jmp
call
call
mov
mov
push
push
jmp
mov
pushf
call
mov
jmp
bsf
mov
cmc
mov
pushf
stc
stc
add
pusha
movb
mov
movb
pusha
lea
jmp
call
sub
xor
call
mov
stc
mov
call
stc
shl
movzbl
clc
jmp
movb
pushf
popl
jmp
movb
mov
push
movl
pushf
pushf
pushf
movb
lea
jmp
jmp
jmp
jmp
pusha
cmp
test
and
mov
mov
pushf
push
pushf
popl
push
push
call
call
push
mov
mov
pusha
mov
call
mov
pushf
mov
jmp
pusha
movb
mov
jmp
jmp
pushf
popl
call
pusha
call
mov
call
sub
push
clc
clc
and
pushf
push
mov
jmp
mov
mov
mov
pushf
call
cmp
movb
sub
call
jge
movzbw
or
neg
neg
ror
dec
not
not
setne
neg
dec
bsr
not
inc
seta
movzbw
ror
not
jno
not
ror
neg
xor
cmc
ror
bsf
and
sbb
or
or
mov
cmp
clc
pushf
sub
lea
ja
pusha
mov
mov
movb
pusha
lea
jmp
mov
jmp
bswap
adc
mov
shl
or
pushf
call
push
pushf
mov
pushl
mov
pusha
mov
movb
mov
jmp
cmp
shld
das
mov
neg
or
mov
stc
jmp
bswap
bt
mov
cmp
call
mov
pusha
call
mov
test
add
jmp
pusha
mov
jmp
jmp
call
call
jmp
xor
clc
stc
call
push
call
push
pushf
mov
call
pushl
mov
pushf
call
btr
adc
mov
cmc
ror
xor
bsf
dec
inc
pusha
sbb
neg
btc
rcl
not
bsf
dec
push
neg
btr
xor
bsf
bsf
dec
dec
btr
bt
shrd
ror
mov
mov
bt
pusha
add
mov
mov
pushf
push
lea
jmp
jmp
mov
push
call
pushl
popl
mov
pushf
pushf
pushf
lea
jmp
pushf
popl
pusha
jmp
call
pushl
popl
mov
lea
jmp
mov
movb
mov
mov
movw
pusha
push
lea
jmp
call
mov
pushl
pushf
popl
movw
call
mov
push
jmp
jmp
push
jmp
pushf
popl
jmp
pushf
pushf
popl
call
movsbw
mov
pusha
cld
pushf
jmp
or
xor
movzbw
dec
movzbw
inc
bswap
movsbw
stc
btr
jmp
push
mov
pusha
pusha
movw
lea
jmp
jmp
mov
call
push
mov
pushf
mov
pushf
jmp
movl
pushf
mov
pushl
lea
jmp
movw
push
mov
movb
push
push
lea
jmp
cmp
add
clc
add
bt
pusha
cmc
not
mov
ror
pusha
jmp
jmp
pusha
mov
inc
adc
inc
clc
mov
dec
rcr
ror
xor
mov
clc
add
cmp
shrd
lea
jnp
pusha
pushf
pusha
mov
call
add
call
jmp
call
push
pushf
lea
jmp
pushf
call
movb
mov
push
pusha
call
lea
shr
rol
test
mov
stc
cmc
bt
clc
add
push
mov
pusha
push
lea
jmp
push
clc
notl
ror
pushf
mov
cmp
pusha
pushf
sub
push
call
mov
pushf
movb
movb
mov
lea
jmp
pop
or
aaa
adc
pop
bswap
shl
test
pop
clc
shr
pop
call
pushf
jmp
mov
push
pushf
jmp
not
cmc
mov
shl
sub
or
sub
call
pushf
mov
mov
call
mov
jmp
movl
mov
movb
movl
mov
lea
jmp
pushf
jmp
mov
lea
lea
jnp
xor
clc
neg
test
cmp
push
call
pushf
pushf
popl
push
call
pusha
mov
call
call
pushf
movb
mov
push
mov
push
pushf
jmp
jmp
neg
neg
not
bsf
not
sub
movsbw
test
stc
neg
pusha
not
bsr
call
push
mov
movw
mov
jmp
rcr
mov
jmp
mov
pushl
call
not
pushf
mov
push
pusha
bsr
mov
lea
mov
dec
inc
seta
movsbw
mov
pushf
mov
bsr
movw
xchg
pop
movl
call
call
clc
not
cmp
test
xor
test
cbtw
clc
cwtl
clc
bt
pushf
clc
sub
jmp
call
jmp
call
movsbl
mov
movsbw
movsbl
mov
movl
mov
movb
pushl
ret
movb
mov
jmp
pusha
push
movb
mov
pushf
pusha
mov
movw
pushf
lea
jp
push
pushf
pushf
pushl
pushf
popl
pushf
call
pusha
pusha
pushf
mov
pushf
push
lea
jmp
mov
pusha
movw
pushf
lea
jmp
jmp
cwtl
push
sub
jmp
cmc
pushl
rol
bt
push
pushf
push
add
pushf
call
mov
mov
movl
push
pushl
lea
jmp
mov
jmp
pushl
mov
mov
jmp
pusha
bt
sub
call
mov
movb
mov
call
movl
pushf
lea
jmp
pusha
jmp
pushf
mov
push
push
mov
pushf
mov
mov
mov
jmp
push
mov
mov
pushl
mov
movl
mov
movb
lea
jmp
not
not
clc
ror
sub
test
sub
cmc
mov
call
jmp
movw
call
push
pusha
mov
movzbl
not
not
push
xchg
lea
lea
seto
pushf
xchg
bswap
not
lea
jle
pushf
pushf
popl
movsbl
bswap
push
pusha
setnp
mov
movzbw
pop
mov
not
setb
bswap
not
mov
lea
mov
bsr
movl
lea
not
mov
bsr
inc
mov
bswap
cmc
rol
xor
cmp
ror
xor
shl
setb
bswap
pushf
lea
cmp
sub
movzbw
mov
sub
bsf
rol
mov
pushf
rcl
add
lea
sar
or
rol
sub
mov
btr
xor
bsr
dec
call
shl
or
neg
add
not
inc
test
setp
and
neg
inc
inc
push
not
push
movzbw
pusha
ror
adc
call
push
jmp
push
pushf
mov
pusha
call
mov
mov
push
pushf
mov
mov
pushf
mov
movl
pushl
pushf
mov
lea
jmp
mov
call
shld
daa
lea
cmp
stc
bt
cmp
push
pushf
push
pushf
lea
ja
not
mov
aas
lea
aad
sub
ror
lea
test
bsr
and
btc
rcr
cmc
bts
sub
bswap
mov
mov
call
stc
xor
mov
stc
jmp
call
sar
inc
movzbw
mov
cmc
add
cmc
push
movsbw
mov
bsf
xor
jmp
pushf
popl
mov
pushl
popl
push
push
pushf
lea
jmp
pushf
jmp
mov
mov
call
movl
push
pushf
lea
jmp
mov
jmp
sub
movl
jmp
push
mov
pushf
lea
jmp
mov
pushf
mov
jmp
dec
push
or
movzbl
cmp
sub
call
mov
movb
jmp
pusha
jmp
movl
push
push
lea
jmp
jmp
inc
mov
stc
add
js
pushf
mov
pushl
movw
mov
mov
lea
jmp
sub
jmp
mov
movb
jmp
pushl
call
rcr
mov
rcr
shr
jae
sbb
mov
bt
cmp
stc
sub
call
mov
pushf
clc
bswap
clc
jmp
jmp
call
pushf
jmp
mov
push
jmp
push
jmp
mov
call
pushf
popl
pushf
movb
pusha
pushf
mov
movb
jmp
bswap
ror
shr
xor
pushf
mov
lea
ror
lea
bsr
adc
and
movsbw
btr
bswap
mov
push
clc
jmp
sub
pushf
jmp
call
rol
neg
inc
sar
mov
rcr
sar
cmp
add
pop
xor
jmp
jmp
test
movl
sub
jmp
movsbw
mov
jle
push
pusha
pusha
mov
push
call
pusha
mov
call
movb
mov
mov
movw
pushl
mov
mov
pushf
push
push
push
lea
jmp
sub
dec
adc
mov
movl
cmp
add
mov
mov
movb
mov
pushf
mov
mov
pusha
lea
jmp
and
add
mov
test
xor
jmp
pushf
popl
mov
call
mov
pushl
popl
pushf
pushf
lea
jmp
jmp
test
add
jmp
bt
test
pushl
pushf
add
test
cld
pushl
popf
pusha
mov
lea
jmp
movl
mov
movb
movw
mov
lea
jmp
jmp
movb
mov
mov
movw
call
mov
mov
movb
movl
pushl
mov
pushf
lea
jmp
mov
mov
pushf
mov
mov
push
call
movl
pushf
mov
lea
jmp
jmp
pushf
mov
call
push
jmp
clc
cmp
and
pushf
pushf
popl
push
pushf
pushf
pushl
popl
pushf
pushf
lea
jmp
call
call
xchg
call
mov
pusha
pushf
pushf
lea
jmp
pushf
jmp
cmc
push
cmp
sub
pushf
mov
mov
lea
jmp
aad
dec
jl
mov
mov
not
sbb
clc
not
mov
call
pushf
movl
pushf
mov
pushl
mov
movb
push
jmp
jmp
pushf
mov
pushf
call
push
push
jmp
call
pusha
pushf
call
mov
call
mov
movb
movl
movb
pushf
movb
lea
jmp
mov
pushf
popl
pushl
pushl
popl
pushl
pushf
mov
lea
jmp
clc
aas
shrd
mov
xor
sbb
shld
adc
mov
jmp
movl
movb
pusha
pushf
push
lea
jmp
push
pushf
call
call
push
mov
jmp
add
push
jmp
mov
call
jmp
push
pusha
jmp
mov
mov
movb
call
movw
mov
movb
mov
pushf
call
movb
pushf
mov
pushf
push
call
cmp
xor
mov
call
pushf
jmp
mov
dec
inc
pusha
rol
xor
test
call
mov
push
mov
call
mov
call
shl
mov
pusha
shld
mov
bt
not
stc
not
cmc
jmp
cbtw
lahf
aas
mov
call
call
mov
pusha
jmp
pushf
jmp
pushl
popl
pushf
lea
jmp
push
pushl
mov
jmp
sub
mov
mov
mov
pushf
movb
lea
jmp
pusha
call
jno
pusha
pusha
mov
push
jmp
pushf
popl
movw
jmp
jmp
push
call
mov
movw
mov
lea
jmp
movw
jmp
pushf
popl
mov
pushf
movb
jmp
jmp
jmp
call
clc
stc
pushf
pusha
not
cmc
clc
not
pushl
test
mov
and
jmp
movl
pushf
popl
jmp
pusha
mov
call
clc
bt
stc
pushl
popf
movb
mov
lea
jmp
pushl
popl
push
lea
jmp
xor
bt
jmp
pusha
mov
mov
jmp
pushl
pushf
popl
pushf
pushf
pushl
call
call
movb
mov
call
pushf
pushf
popl
jmp
pushf
popl
cld
not
lea
mov
cld
pusha
push
pop
mov
movw
bswap
lea
cld
cld
mov
call
sbb
mov
btr
test
pusha
mov
test
clc
cmc
clc
add
call
pushf
xor
movw
neg
cmc
pushf
push
mov
xor
test
bt
call
push
jmp
pushf
mov
push
push
jmp
pushl
movw
mov
pushf
movl
jmp
movl
push
movl
mov
movb
lea
jmp
mov
pushl
mov
pusha
call
pushf
pushf
mov
movb
pushf
mov
pushl
ret
mov
push
jmp
movzbw
aad
stc
mov
xor
rcl
mov
cmc
bt
pusha
push
sub
clc
bt
clc
clc
shl
lea
jb
mov
pushf
mov
call
call
pushf
lea
jbe
push
jmp
stc
sub
push
call
mov
call
pushf
mov
pushf
push
mov
mov
push
call
pushf
mov
pushf
push
pushl
pusha
mov
push
call
cmp
sub
stc
shr
push
mov
call
mov
pushf
push
call
pusha
pushf
mov
mov
pusha
lea
jmp
push
xor
pushf
neg
test
pushl
xor
call
mov
jmp
mov
pusha
movl
push
movw
movl
movb
lea
jmp
pushl
cmp
push
xor
bt
sub
cmc
mov
sub
push
lea
js
pushf
pusha
mov
pushf
pushf
movl
push
lea
jmp
pushf
popl
movl
pushl
popl
movb
movb
mov
lea
jmp
pushf
call
pushl
pushf
mov
movb
lea
jmp
call
jmp
push
pushf
pushf
push
jmp
cmp
push
call
jmp
mov
jmp
mov
pusha
mov
movb
mov
mov
pusha
jmp
push
ror
or
and
xor
clc
lea
bt
bswap
ror
setg
and
sar
movzbl
adc
btc
mov
mov
cmp
stc
stc
sub
mov
pushl
mov
pushf
push
lea
jmp
pusha
pushf
popl
pushf
mov
push
pushl
jmp
mov
pushf
movl
push
lea
jmp
pushl
push
mov
push
call
pusha
mov
pushf
mov
mov
jmp
mov
sub
pushf
mov
pushl
push
movl
movb
lea
jmp
mov
pusha
pushf
popl
mov
push
pushl
popl
mov
pushf
movb
push
lea
jmp
mov
pushf
mov
jmp
push
lea
jo
dec
cmp
cmp
call
mov
call
push
jmp
call
mov
mov
jmp
bsf
push
mov
add
mov
pushf
sub
mov
cmp
cmc
stc
shl
pushf
mov
mov
pushf
jmp
pushf
mov
push
jmp
call
call
mov
jmp
movb
mov
push
call
pushf
pushf
mov
pushf
push
movb
mov
pushl
lea
jb
push
movb
mov
jmp
pusha
cmc
sub
clc
cmc
pushf
xchg
add
jge
stc
sub
push
dec
pusha
xor
stc
sub
mov
cwtl
call
pusha
jmp
pushf
cmc
test
shr
pushf
jmp
push
mov
movb
lea
jmp
pushf
mov
pushl
movw
pushf
lea
jmp
jmp
movl
push
push
push
lea
jmp
call
mov
mov
mov
pushf
mov
pushf
jmp
push
pushf
popl
push
pushf
push
call
mov
mov
cmp
test
push
sub
pusha
pushf
shr
push
call
pushf
push
call
pushf
push
mov
call
jmp
push
pusha
dec
cmp
xor
movb
sub
test
movb
cmc
jmp
pushf
pushf
pushf
pushl
popl
mov
movl
lea
jmp
call
mov
pushf
mov
pushf
pushf
lea
jmp
dec
pushl
jmp
mov
pushf
mov
lea
jno
push
push
pushf
pushf
mov
pushf
pushl
pushf
pushf
movl
push
pusha
mov
mov
lea
jmp
xor
sar
mov
pusha
cmp
cmc
sub
mov
add
pusha
pushl
jmp
mov
sub
jns
test
pushf
not
jmp
add
sar
btr
mov
dec
add
push
push
mov
pushl
movb
mov
pusha
pushf
lea
jmp
das
sar
mov
sbb
shr
mov
push
call
dec
cmc
jmp
jmp
pushf
mov
push
pusha
movb
movb
mov
jmp
clc
add
lea
jae
pusha
pushf
popl
movb
jmp
pushf
pushl
mov
push
call
pushf
mov
jmp
call
movw
movb
mov
pushl
lea
jmp
mov
mov
jmp
stc
shr
add
or
mov
adc
test
rol
add
setbe
pushf
pushl
mov
pusha
push
mov
push
push
pushf
pushf
lea
jmp
mov
jmp
bswap
mov
and
neg
shl
mov
stc
pusha
sub
cmp
shr
jmp
movl
push
pushl
lea
jmp
sub
pushl
mov
mov
lea
jmp
sub
mov
mov
jmp
mov
jmp
pushf
pushl
popl
pusha
pushf
pushl
lea
jmp
bsf
inc
dec
xor
sub
bts
not
bt
clc
neg
setp
lea
not
or
sar
bsr
neg
bsr
bsr
bswap
inc
inc
movsbl
ror
movzbw
shr
rcl
clc
neg
clc
ror
bswap
xor
adc
rcr
lea
add
shrd
pop
xor
not
pushf
mov
movzbl
call
pushl
call
pushl
popl
pushf
push
movl
pushl
lea
jmp
pushl
pushl
popl
movb
push
pushf
lea
jmp
call
pushf
popl
mov
jmp
pushf
mov
pushl
jmp
rcl
mov
shl
setge
bt
rcr
mov
cmc
sub
pusha
stc
shl
pusha
mov
push
pushf
mov
pushf
movw
jmp
pushf
mov
pushf
movb
push
push
lea
jmp
jmp
pusha
mov
jmp
mov
pushf
push
movw
mov
pushf
call
jmp
sub
call
push
pusha
pushf
mov
call
mov
movl
lea
jmp
jmp
pusha
movb
pushl
popl
pushl
pushf
pushl
lea
jmp
mov
push
call
not
push
pushf
clc
jmp
push
push
mov
push
jmp
pusha
call
push
pushl
popl
pushf
pushf
pushf
lea
jmp
call
mov
pusha
call
call
stc
cmc
not
call
mov
jmp
call
inc
pushl
not
btr
jmp
pushf
movl
movw
mov
movw
lea
jmp
mov
mov
push
lea
jmp
mov
movl
pushf
call
mov
call
push
mov
pushf
pusha
lea
jmp
pushf
mov
mov
jmp
bt
add
jb
mov
pushf
push
sub
pushf
mov
mov
pushl
pusha
pushf
lea
jmp
mov
jmp
jmp
jmp
push
mov
jmp
push
pushf
mov
pushf
pusha
mov
call
bt
add
pusha
cmc
stc
mov
not
stc
ror
test
test
cmp
test
add
clc
rol
stc
bt
sub
cmc
not
call
movw
cmc
sub
call
jl
pusha
pusha
push
pushl
popl
pushf
lea
jmp
pushf
mov
pusha
pushf
movb
push
lea
jmp
and
xor
lea
ror
shr
bt
and
cmc
and
sbb
and
mov
pushl
cmp
add
lea
js
mov
push
movl
lea
jmp
test
xor
jmp
pusha
rep
and
adc
pusha
rol
mov
pushl
sar
adc
mov
call
mov
push
pusha
pusha
lea
jmp
pusha
jmp
pushl
dec
cmc
bt
cmc
rol
pushl
lea
jge
not
pushf
test
cmc
jmp
xchg
stc
pusha
stc
sub
movb
call
pushl
popl
pushl
mov
lea
jmp
pusha
pushf
popl
mov
mov
lea
ja
push
jmp
mov
pushl
jmp
sub
lahf
mov
jmp
call
lea
jl
rep
bswap
sbb
test
btr
pop
bswap
btr
rcr
btr
pop
cmp
std
std
popf
pusha
lea
jmp
adc
aad
mov
cmc
call
pushf
popl
pushf
pusha
pushl
popl
pushf
push
lea
jmp
movw
call
mov
pushf
lea
jmp
pusha
mov
pushf
movl
mov
movb
mov
pusha
mov
jmp
mov
mov
mov
jmp
mov
mov
lea
jge
push
pusha
push
mov
jmp
pushf
mov
movb
pushl
mov
mov
pushf
call
stc
xor
push
cmc
cmc
neg
pusha
stc
xor
cmc
test
push
sub
jmp
bt
call
call
lea
seto
lea
jae
not
movsbw
rol
jmp
push
jmp
jmp
dec
call
shrd
clc
mov
push
bsr
shr
mov
rol
mov
cmp
pushf
push
add
test
shld
pushl
push
mov
mov
push
jmp
pushf
popl
call
jmp
mov
pushf
mov
jmp
call
cmc
stc
add
pusha
push
mov
pushf
mov
mov
pushf
pushf
pushl
pushf
lea
jmp
pushf
mov
pusha
mov
sub
pusha
mov
pushf
call
inc
mov
sbb
stc
sete
mov
stc
stc
add
jmp
mov
mov
mov
push
push
call
lea
jp
push
mov
push
pushl
mov
jmp
pushf
popl
pushf
push
pushf
mov
push
mov
call
movl
pushf
mov
pushf
pushl
lea
jmp
and
test
setnp
aad
mov
sbb
mov
bt
stc
cmc
test
sub
push
shr
pushf
movb
mov
movl
pushf
popl
jmp
not
mov
pusha
jmp
pushf
popl
pushf
push
jmp
jmp
cmc
xor
mov
pusha
call
pushf
popl
movw
jmp
mov
jmp
pushf
call
call
pushf
jmp
call
jmp
push
call
test
shrd
mov
mov
cmp
cmp
pusha
pushf
xchg
bt
movw
sub
jmp
call
pusha
movl
pushf
mov
pushf
mov
movb
pushl
lea
jmp
mov
mov
call
sub
jmp
pusha
push
mov
pushf
pushl
mov
pushf
lea
jmp
jmp
jmp
sub
push
jmp
call
jmp
call
bt
bsf
stc
not
lea
lea
bswap
rcl
bswap
neg
bsr
movzbw
not
inc
movsbw
ror
btc
neg
pushf
bts
ror
bswap
shld
shr
add
xor
sub
add
bsr
shl
add
setnp
not
ror
xor
rcl
movzbl
bts
pushf
jmp
mov
jmp
mov
pushl
movl
movb
pusha
movl
lea
jmp
mov
mov
lea
jmp
btr
rol
ror
not
mov
xor
cmp
jmp
call
mov
pushl
movl
movb
lea
jmp
bt
pusha
rol
pushf
inc
cmc
rol
clc
bt
pushl
add
call
arpl
add
adc
pop
push
add
or
pop
imul
pop
inc
and
push
mov
add
inc
add
sub
pop
bound
pop
orb
pop
jp
add
mov
add
loopne
pop
mov
add
stc
add
and
push
insl
loopne
pop
bound
add
or
add
int
pop
jo
add
jge
pop
insb
lret
adcl
pop
imul
pop
andb
pop
orb
pop
push
add
xchg
pop
insl
loopne
pop
jns
add
jp
pop
imul
pop
adcl
pop
data16
pop
bound
pop
insb
sub
pop
jns
add
in
pop
imul
pop
andb
pop
orb
pop
push
add
int
pop
insb
xchg
pop
ja
add
das
add
in
pop
inc
inc
add
inc
add
jge
pop
data16
pop
ja
add
loopne
pop
gs
pop
jp
add
pop
add
je
pop
push
add
std
add
arpl
pop
inc
and
push
outsb
sbb
pop
data16
pop
jle
add
push
add
jge
pop
subl
pop
orb
pop
popa
test
pop
inc
inc
add
or
add
stc
add
adc
add
mov
add
inc
add
xchg
pop
adcl
pop
bound
pop
bound
add
jp
pop
insb
sub
pop
subl
pop
jnp
add
in
pop
inc
bound
push
push
add
inc
add
in
add
sub
pop
insl
adc
add
in
add
jne
pop
bound
pop
mov
add
xchg
pop
adcl
pop
insb
lret
jno
add
int
pop
outsb
mov
add
and
pop
insb
xchg
pop
adcl
pop
jns
add
int
pop
jno
add
sbb
pop
bound
pop
insb
lret
jns
add
xchg
pop
jns
add
lret
arpl
pop
inc
inc
add
stc
add
leave
add
jne
pop
jo
add
in
add
loopne
pop
inc
add
inc
add
jge
pop
inc
bound
push
popa
test
pop
jo
add
in
add
arpl
pop
orb
pop
push
add
in
pop
jle
add
flds
pop
jp
add
inc
add
sub
pop
mov
add
jge
pop
je
add
fiadds
pop
arpl
add
jp
pop
jle
add
test
pop
push
add
loopne
pop
outsb
mov
add
arpl
pop
insl
loopne
pop
insb
sub
pop
and
pop
bound
pop
andb
pop
arpl
add
int
pop
insl
loopne
pop
gs
pop
adcl
pop
jno
add
stc
add
loopne
pop
jnp
add
lds
pop
insl
adc
add
std
add
rolb
pop
bound
pop
inc
and
push
insb
lret
inc
bound
push
imul
pop
insl
adc
add
lret
push
add
inc
add
sub
pop
xorl
pop
jno
add
and
push
jp
add
jge
pop
andb
pop
andb
pop
outsb
mov
add
inc
add
int
pop
bound
add
stc
add
or
add
sub
pop
ja
add
inc
add
bound
push
insb
lret
bound
pop
jo
add
lret
jo
add
rolb
pop
insb
sub
pop
jno
add
or
add
rolb
pop
jae
add
std
add
or
add
inc
add
sbb
pop
bound
pop
popa
inc
add
and
pop
jo
add
or
pop
jns
add
lds
pop
xorl
pop
jo
add
jne
pop
jno
add
rolb
pop
jle
add
adc
pop
inc
add
jge
pop
jno
add
leave
add
push
add
std
add
enter
pushf
popl
pushf
pusha
mov
pushf
call
push
call
cmp
bswap
pusha
jmp
test
cmp
sub
pusha
jmp
pushf
pushf
mov
pushl
jmp
mov
push
pushf
pushl
mov
mov
pushf
popl
pushf
call
jmp
dec
pushf
cmc
lea
call
xor
mov
pusha
neg
pushf
lea
jl
dec
bt
pusha
movb
cmc
lea
movw
pusha
call
jmp
add
pop
test
or
clc
xchg
sub
or
repz
xchg
out
push
jo
lods
std
mov
mov
mov
or
lock
mov
or
cmc
xchg
mov
or
call
lods
mov
in
or
cmc
fwait
mov
adc
push
mov
jno
cli
dec
mov
mov
cld
mov
mov
in
or
stc
aaa
mov
cld
sbb
or
cli
fdivrs
cmpsb
cmc
icebp
mov
sub
mov
in
or
std
gs
jnp
cmc
pop
mov
shl
mull
cmpsb
in
or
repz
in
or
testb
js
idivb
mov
fsubl
mov
rorl
sub
in
or
cmc
add
cltd
sti
testl
incl
enter
and
or
mov
and
or
lock
push
in
or
icebp
mov
in
or
push
pop
in
or
negl
popf
or
in
or
repnz
push
in
or
cli
jns
in
or
negb
push
in
or
sti
mov
sbb
push
in
or
repnz
push
in
or
negl
pop
mov
cmp
in
or
repz
or
jg
in
or
std
add
pusha
add
in
or
testl
or
out
in
or
std
test
or
repnz
cmp
pop
test
or
clc
test
or
cld
lcall
call
or
neg
test
lock
std
jl
in
or
sti
add
or
mull
or
fsincos
inc
push
in
or
stc
loope
in
or
repz
or
repnz
lods
in
or
icebp
call
inc
sub
repz
lahf
in
and
mov
ret
stos
in
or
lock
in
or
sti
les
cli
mulb
in
or
hlt
add
inc
cmc
mov
pop
sbb
in
or
idivb
or
stc
scas
mov
push
pop
cld
xor
jp
repnz
mov
clc
mov
jno
in
or
clc
add
mov
cli
mull
inc
repz
inc
mov
mov
in
or
idiv
mov
sub
or
cmc
jae
in
or
ljmp
cmpsl
in
or
sti
int3
cmpsl
in
or
icebp
imul
in
or
sti
mov
fdivrs
icebp
pop
movsl
in
or
repz
in
or
cmc
call
into
mov
testb
clc
hlt
aaa
mov
jno
clc
fdivrs
cmp
or
repnz
int3
mov
lret
or
cld
cmp
icebp
jg
pop
mov
les
arpl
lret
std
idivb
cli
xchg
mov
dec
je
mov
xor
in
or
idiv
mov
lods
mov
or
repz
mov
push
mov
or
cmc
lock
or
push
mov
or
test
in
or
lock
sub
or
sti
movsb
mov
or
cld
inc
mov
or
hlt
ljmp
shl
lea
cwtl
pop
imull
mov
or
hlt
int
in
or
icebp
jo
in
or
cld
adc
fdiv
mov
in
or
notl
in
or
cld
pop
xchg
out
pop
daa
sbb
or
stc
xchg
out
pusha
or
out
pop
enter
mov
xor
dec
inc
icebp
mov
rcll
adc
mov
xor
jbe
mov
loop
and
lods
out
jmp
xchg
scas
jo
inc
aaa
cltd
movsb
push
test
in
ret
mov
or
insb
mov
mov
adc
fistpll
sarb
mov
pop
jns
push
stc
inc
ja
xor
cmp
and
pop
je
sahf
test
mov
adc
mov
pop
adc
xchg
out
and
stc
test
mov
jmp
mov
pusha
inc
enter
loop
push
lcall
sbb
or
add
mov
mov
sbb
test
or
hlt
jo
inc
xchg
push
fistpll
adc
imul
stos
fcom
pop
out
sahf
inc
and
push
jnp
fldenv
push
dec
xchg
out
adc
inc
sub
imul
xchg
xchg
repz
push
dec
jmp
subb
mov
mov
repz
nop
pop
inc
loope
and
mov
ss
arpl
out
or
sbb
push
nop
cld
push
pop
mov
pusha
and
imul
in
aam
cs
dec
add
dec
mov
sbb
imul
cs
mov
pop
in
cwtl
aaa
or
idiv
dec
mov
lret
icebp
xchg
hlt
mov
dec
mov
mov
push
mov
arpl
sbb
imul
mov
sub
jbe
nop
data16
sbb
pop
sub
push
dec
mov
data16
clc
sub
xchg
pop
out
jg
adc
cmp
inc
push
mov
cmp
xor
and
jno
mov
sub
lcall
add
dec
mov
lcall
into
stc
dec
mov
cmpsl
mov
or
fwait
sarl
adc
out
dec
mov
pushf
cmp
cld
in
das
lret
std
test
addr16
call
jb
pop
mov
test
sbb
fnsave
cmc
mov
pop
daa
fstps
in
aam
rorb
inc
rorb
lcall
add
out
stos
sbbl
adc
lods
add
cmpsb
inc
adc
ja
fsubs
and
dec
jbe
popl
fld1
dec
cmp
dec
mov
inc
out
subb
push
add
xlat
insb
repz
inc
mov
cmpsl
and
push
lea
lcall
imul
cmp
mov
mov
sbb
push
add
jmp
popf
jo
popf
add
je
and
dec
outsl
sbb
and
xor
test
cltd
incl
sub
cs
lret
repz
out
mov
lds
sbb
push
ret
incl
lods
in
int3
inc
cmp
and
cmpb
dec
mov
clc
ror
pusha
sbb
out
mov
sbb
or
dec
jnp
sub
cmp
mov
mov
imul
mov
loopne
test
stos
icebp
lds
mov
xor
out
push
pop
ja
mov
adc
pop
das
dec
popf
fisubl
out
and
add
sbb
imul
lock
mov
cmpsb
clc
or
adcb
mov
repnz
mov
dec
inc
mov
inc
shl
mov
sbb
imul
dec
mov
or
dec
add
sarl
in
mov
orb
cmp
int3
loopne
xlat
mov
or
repz
push
add
aad
pop
mov
test
and
stos
inc
aas
bound
xchg
into
or
mov
sub
dec
in
or
push
sbb
or
out
xor
testb
sbb
data16
pop
scas
jnp
mov
dec
push
dec
pop
or
ja
sbb
call
int3
aaa
outsb
into
adc
adc
popf
xchg
les
add
and
clc
cs
rol
sub
mov
cli
sahf
mov
fwait
mov
in
push
push
fimull
cli
cmp
dec
and
les
xor
negb
push
test
rcl
jmp
outsl
and
pop
movsl
out
lods
jb
hlt
mov
lea
addr16
cmp
das
ds
sub
out
ds
repz
imul
dec
loope
push
xor
pushf
and
clc
mov
mov
jns
add
pop
xchg
push
adc
in
cs
popf
cmp
adc
movsb
dec
jo
fsubs
sbb
pop
jbe
xchg
push
push
inc
cmpsb
sub
insl
fwait
jg
sahf
int
mov
xchg
pop
aam
mov
mov
dec
aam
aad
cs
push
cmp
sub
push
inc
mov
xchg
jle
mov
jb
mov
je
pop
dec
lds
ss
push
and
jle
push
mov
pop
insl
stos
pop
push
sub
add
pop
cmp
dec
mov
or
jmp
lret
hlt
aaa
pop
out
in
cmp
enter
jb
scas
js
sarb
jmp
add
mov
mov
fnstenv
js
in
push
mov
jne
ljmp
cli
cmp
mov
lcall
mov
into
push
dec
in
xchg
xor
addb
xor
add
out
leave
mov
xchg
dec
loopne
shrb
rolb
inc
mov
sbb
jae
andb
push
dec
mov
sarl
cmp
jecxz
ret
pushaw
cmp
cmp
mov
mov
out
dec
shl
clc
aad
mov
bound
push
cld
sarl
call
pop
std
sub
scas
jl
fistl
inc
rorl
sub
sub
in
adc
fidivl
jmp
into
fs
and
xchg
or
into
and
xchg
xchg
iret
setae
add
test
ss
add
aad
out
sarb
or
shl
inc
orps
gs
sub
test
mov
xor
loopne
hlt
mov
mov
xchg
cbtw
push
mov
dec
mov
cltd
dec
mov
add
xlat
lock
aas
inc
jecxz
mov
xor
shrl
orl
cwtl
mov
dec
test
cmp
cmpsl
pop
mov
rclb
jbe
loopne
push
jns
test
repz
rcll
pushf
push
jecxz
ja
cmc
dec
fxch
pusha
pop
aaa
cmp
mov
std
or
inc
pop
mov
pop
xor
ds
mov
mov
pop
xchg
lds
das
popa
inc
fdivp
imul
lahf
jbe
adc
cmp
jmp
testl
pop
push
mov
push
pushf
cmp
adc
push
add
xlat
ljmp
js
jbe
outsl
jmp
xor
std
rcrl
mov
shr
mov
push
xchg
mov
ds
mov
sub
int3
ret
pop
add
push
fst
and
stc
cmpsl
int
mov
movsl
xchg
mov
in
push
into
jae
cmp
or
inc
nop
push
xor
sbb
push
in
jae
fidivrl
shlb
mov
ret
and
jge
dec
and
pop
repnz
lds
sub
dec
mov
sbb
pusha
mov
clc
xor
push
add
add
or
ret
xchg
sbb
jge
lods
dec
in
cs
dec
cmp
daa
adc
xor
int
int
out
pushf
or
adc
divl
lock
mov
std
xor
neg
sbb
pop
clc
shrl
out
insl
inc
dec
mov
jecxz
mov
cmp
dec
loop
ja
lcall
adc
add
addr16
mov
inc
loope
pusha
dec
mov
push
loope
xchg
mov
aaa
push
or
sbb
jns
test
in
std
aad
fnsave
incl
outsl
mov
push
mov
pushf
sbb
xor
jmp
sub
xor
pusha
out
jp
xchg
popf
test
cmp
or
loop
test
jecxz
sub
out
xor
dec
mov
mov
cmp
addr16
push
mov
sbb
in
sbb
stos
std
cs
adc
arpl
pop
jecxz
outsl
mov
adc
sub
or
xchg
mov
mov
mov
dec
mov
dec
pop
pop
adc
repz
popf
cmp
pop
in
into
push
dec
mov
xchg
test
xor
mov
pusha
sbb
int3
clc
and
pop
sub
mov
push
mov
push
push
push
dec
jne
std
push
xlat
cli
fsubs
pop
xchg
shlb
adc
mov
shrl
bound
lods
fcmove
jae
or
icebp
inc
jb
es
mov
sub
mov
or
dec
das
adc
cmc
mov
sarb
loopne
lea
mov
push
adc
sub
ret
push
add
test
pop
inc
cmp
out
sub
addr16
int3
out
push
mov
jle
cmp
xchg
cmpsb
nop
stc
sub
sbb
ljmp
push
lea
stc
fs
mov
push
fs
adc
movsl
lret
dec
mov
mov
in
daa
mov
inc
das
add
or
adc
aam
call
das
mulb
in
pop
mov
jb
push
leave
das
mov
sbbb
rcrl
jnp
or
dec
pop
jecxz
jl
scas
and
out
scas
fisubrl
jg
xor
scas
jmp
mov
stos
ret
lds
sub
fsub
sahf
nop
jo
xor
jns
stc
stos
jmp
inc
mov
adc
cmp
frstor
inc
dec
shlb
push
shlb
pop
fildll
out
cmpsb
mov
sub
and
mov
mov
lods
or
cmp
xchg
jb
shll
sarb
roll
ljmp
out
out
cwtl
push
stc
fldt
dec
mov
sbb
mov
mov
lods
lods
pop
subl
xlat
dec
fucom
dec
push
dec
mov
outsl
mov
dec
addl
stos
push
sbb
cmp
inc
mov
adc
pusha
inc
jp
adc
fiaddl
pop
cmpl
in
sub
or
mov
dec
sbb
cvtpi2ps
push
in
mov
xchg
jg
dec
cli
mov
lea
fldcw
gs
sbb
je
cmp
pusha
leave
inc
pop
or
lock
cmp
inc
hlt
test
jmp
xchg
movsl
mov
sub
jno
adc
aad
adc
push
adcb
push
test
pushf
jp
in
sub
pusha
pop
mov
push
lods
xchg
ja
rcl
dec
pop
push
movsl
sti
sub
xchg
pop
push
push
divl
arpl
adc
insb
push
push
xchg
enter
dec
mov
jmp
or
pop
and
mov
je
mov
sub
je
add
pop
addb
mov
in
xchg
test
aad
mov
loopne
push
hlt
fiaddl
les
dec
mov
cmpsl
fcoml
outsb
push
pop
lea
mov
inc
fcompl
push
add
cmpsl
mov
lock
in
adc
xchg
sbb
or
test
rcr
ljmp
notl
jmp
dec
adc
movsl
xchg
call
cmpsb
push
jno
in
lods
xchg
call
xchg
std
or
into
and
aas
ja
jp
mov
aaa
cmpsb
cltd
stos
leave
xor
mov
jg
lret
iret
shll
pop
das
hlt
cmpsl
mov
sbb
enter
imul
dec
mov
aad
call
arpl
vhaddps
or
movl
push
loop
gs
pop
shlb
jbe
sbb
aas
cltd
or
cmc
push
bound
dec
loope
or
xor
xchg
popf
adcl
sarl
in
dec
pop
jnp
insl
xchg
sbb
imul
and
popf
and
mov
mov
adc
imul
add
inc
fcmovnu
fidivrl
lods
mov
ja
mov
add
es
dec
es
xchg
mov
icebp
ret
repnz
lds
daa
lret
mov
mov
xchg
sbb
dec
cmpsl
xor
xorl
add
ret
push
call
fwait
ljmp
inc
addr16
call
push
and
push
xchg
lcall
sub
js
mov
cmpsl
push
mov
lcall
pushl
bnd
aas
pushf
push
pop
test
dec
mov
xor
iret
in
and
mov
loopne
mov
inc
fisubl
nop
inc
test
fbld
mov
push
loopne
jnp
loop
sar
cmp
adcl
shl
dec
mov
ljmp
hlt
xchg
mov
fwait
xchg
repz
aad
pusha
cld
pop
subb
xchg
mov
adc
add
mul
jmp
gs
cmp
ret
sbbl
cmpl
pop
ss
lret
mov
pop
pop
or
jl
pop
ret
cmp
pop
loopne
push
call
leave
pop
in
mov
sbb
inc
xor
call
hlt
into
sbb
andb
lods
fldl
or
je
or
leave
in
arpl
xchg
outsl
xor
bound
ljmp
sub
jbe
add
pushf
daa
and
cwtl
popf
inc
pop
jg
popa
popa
jne
push
fmull
dec
mov
jns
dec
jmp
sub
mov
sbb
inc
pushf
sbb
clc
cmp
js
dec
dec
mov
cmp
adc
jle
jne
out
jle
and
jne
xlat
sahf
imul
bound
mov
sub
dec
and
or
cs
xor
pop
mov
aam
rclw
push
pop
xorl
dec
lret
pop
and
and
sarb
xchg
push
stos
cmpsb
push
xchg
insl
movsl
lahf
mov
idivb
xchg
or
sub
jge
roll
adc
lods
jo
mov
push
addl
leave
out
xchg
jmp
out
mov
mov
rcl
je
jp
mov
fdivrp
add
mov
push
inc
orb
out
adc
es
lods
insl
mov
stos
push
mov
pop
inc
ljmp
xchg
pop
mov
fnsave
dec
lret
std
loope
dec
sbb
loopne
out
fimuls
cmpsb
mov
jbe
hlt
test
and
sbb
in
das
sbb
in
push
lods
pop
jnp
xor
adc
in
jl
pop
mov
imul
sub
cmpb
jb
fcomps
iret
or
sbb
test
and
cmp
sub
call
dec
push
imul
cs
mov
lahf
popf
clc
and
jg
ljmp
sahf
pop
in
adc
jns
loope
lahf
xor
icebp
int3
mov
pop
lret
dec
jge
mov
aad
hlt
jae
scas
dec
js
test
lods
clc
dec
mov
push
arpl
out
scas
dec
inc
jle
lret
pop
ret
pop
mov
shlb
or
add
popa
sbb
push
sbb
in
ret
fnstcw
outsb
daa
loope
movsl
mov
insl
fucompp
sahf
fs
orb
notl
xchg
sbb
sub
sahf
push
lds
sub
icebp
loope
adc
mov
popf
lret
movsb
xchg
sbb
mov
mov
push
jge
imul
cmp
sbb
fwait
cld
xchg
cmp
faddl
sub
sbb
inc
pop
les
inc
sarl
cli
dec
mov
or
pop
add
pop
mov
mov
sbb
std
cmp
or
xor
cmp
xchg
stc
clc
movsb
jp
and
pop
enter
arpl
pushf
out
fdivs
insb
aas
test
mov
add
pushf
xchg
lea
je
loopne
lret
mov
adc
adc
adc
jge
inc
mov
repnz
mov
mov
fmuls
jmp
mov
sbb
or
or
jl
jo,pt
outsw
mov
mov
fstl
xchg
cmp
cwtl
mov
mov
mov
sub
push
je
mov
xchg
dec
mov
cmpsl
and
lcall
sbb
call
in
and
decl
or
fidivrl
lods
repz
es
cmp
and
xchg
fdivl
lcall
mov
rol
icebp
jne
mov
sbb
or
push
rorb
cmp
xor
mov
int3
movsb
shl
psubq
xor
adc
push
rclb
cmp
jp
in
into
loope
push
scas
dec
jo
dec
int
push
inc
mov
and
int3
xchg
dec
dec
mov
and
push
mov
push
push
mov
movsb
xchg
ret
and
in
call
mov
sub
adcb
test
cwtl
or
xchg
mov
jg
mov
mov
sbb
int
addr16
dec
insb
jmp
sbb
pushf
dec
add
pop
jge
and
xchg
stc
jecxz
dec
aas
test
cmpb
out
sarb
sarl
pop
push
sub
into
and
outsl
and
mov
mov
lods
jnp
sarl
cmp
cli
int
clc
arpl
movsb
imul
add
into
xchg
dec
inc
mov
scas
loop
inc
or
push
dec
mov
or
mov
fwait
icebp
push
cld
lea
cmp
lea
sbb
adc
icebp
sub
lahf
dec
mov
adc
push
cli
or
adc
fwait
dec
mov
lods
int3
dec
jb
dec
adc
xlat
mov
fidivrl
pop
arpl
xor
mov
mov
mov
mov
popa
jge
mov
cmp
or
sub
adc
and
push
jecxz
sub
bound
lods
lods
in
mov
add
xchg
or
jmp
ret
sbb
pop
test
push
lret
adc
inc
push
imul
fisttps
inc
xlat
jp
insb
sbb
jmp
rorl
ret
sub
lret
mov
faddl
xchg
sti
and
mov
clc
mov
loopne
add
arpl
pusha
pop
paddq
pop
lea
rclb
into
xorb
movsb
iret
std
shrb
ss
out
or
inc
and
push
adc
les
icebp
andb
fsubrp
cmp
fldl
add
repz
add
add
aad
push
mov
js
fdivl
sbb
cmpsl
cmpl
lods
dec
push
stc
fdivs
and
mov
sub
and
lock
out
clc
subb
divl
scas
jmp
cmp
rol
aas
int3
flds
cmpsl
xchg
push
xchg
mov
mov
sub
addb
mov
mov
ror
cmpsb
dec
into
insl
cmpb
jecxz
jnp
and
push
ret
outsb
mov
in
push
push
pop
mov
sub
clc
sub
mov
xor
adcb
and
cmp
jne
pusha
sub
lret
nop
rcll
loopne
int3
dec
add
in
push
mov
in
or
test
push
mov
xchg
dec
mov
sub
mov
mov
lea
scas
gs
imul
xor
outsb
stos
movsl
cltd
orb
cmc
lret
loope
dec
sub
insl
ja
mov
mov
mov
sub
fst
cs
mov
mov
lahf
fdivrl
int
scas
scas
xor
cltd
shl
adc
and
mov
rolb
cmp
and
icebp
pop
inc
fnsave
out
inc
xlat
clc
fisubl
sbb
dec
mov
fwait
test
imul
pop
loope
jg
in
pop
xchg
movsb
cmc
jns
dec
sub
cmp
cld
xor
mov
pop
dec
fwait
push
dec
mov
sbb
push
shlb
xchg
xor
stos
and
test
call
cmp
jb
mov
push
or
mov
aad
loop
ret
pop
and
xchg
inc
mov
ja
clc
aad
xor
cmp
mov
daa
pop
add
gs
out
pop
les
test
ret
adc
push
and
testb
pop
dec
mov
fsubrs
xchg
inc
cli
gs
out
mov
out
das
mov
or
and
adc
xchg
cld
pop
out
nop
or
or
xchg
and
cmpsl
add
sahf
xchg
fsubs
in
mov
push
add
xchg
dec
mov
cwtl
or
ss
fs
roll
fistl
nop
cmpsb
ja
pop
je
test
mov
inc
jle
dec
mov
lods
icebp
dec
cwtl
dec
loope
lcall
and
ss
jns
cmp
rorl
jle
js
xor
rol
lcall
in
loope
mov
psubb
jns
xchg
push
push
outsl
popa
xor
cmp
jbe
mov
scas
pop
out
pop
rcr
rcll
fcompl
int3
fs
push
iret
fnsave
push
sti
stos
dec
mov
test
and
or
dec
aaa
sub
mov
out
and
fwait
jnp
mov
es
sbb
cmp
mov
subb
lahf
sub
xor
mov
shlb
test
mov
mov
adc
data16
lds
movsl
xor
clc
test
mov
ljmp
mul
mov
sbb
in
inc
xchg
ds
pop
cld
aam
test
fldenv
call
pushf
call
or
lea
and
dec
xchg
mov
dec
arpl
pop
or
sub
xchg
fistpl
cltd
mov
clc
xor
mov
call
loop
mov
xchg
int3
insb
pop
lcall
ss
fstps
insb
push
repnz
lods
jmp
jmp
es
xchg
xor
pop
cmp
lods
or
push
sbb
adc
dec
jmp
out
mov
add
adc
xchg
xor
xchg
icebp
shr
push
dec
lods
inc
adc
mov
jo
aas
enter
test
jno
push
fldcw
jns
dec
mov
and
movsb
idivl
jns
or
fimull
jmp
mov
fwait
dec
mov
das
xchg
shl
mov
dec
adc
mov
ss
jecxz
and
rorb
int
jle
push
adc
std
push
or
rcrb
mov
sahf
sub
push
xchg
shl
dec
mov
out
mov
xor
push
push
addr16
jg
mull
