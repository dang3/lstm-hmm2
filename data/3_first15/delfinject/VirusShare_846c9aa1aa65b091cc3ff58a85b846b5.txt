xor
inc
ret
push
push
call
xor
push
call
cmpw
jne
mov
add
cmpl
jne
movzwl
cmp
je
cmp
je
mov
jmp
cmpl
jbe
xor
cmp
jmp
cmpl
jbe
xor
cmp
setne
mov
mov
push
call
pop
orl
orl
call
mov
mov
call
mov
mov
mov
mov
mov
call
call
cmp
jne
push
call
pop
call
push
push
call
push
call
mov
mov
lea
push
pushl
lea
push
lea
push
lea
push
call
add
mov
cmp
jge
push
call
pop
push
push
call
call
mov
mov
pushl
pushl
pushl
call
add
mov
mov
cmp
jne
push
call
call
jmp
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
mov
cmpl
jne
push
call
call
orl
mov
call
ret
jmp
jmp
cmpl
jne
jmp
push
push
pushl
call
add
ret
pushl
call
neg
sbb
neg
pop
dec
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
jmp
push
push
call
pop
pop
ret
xor
ret
int3
push
mov
push
mov
mov
lea
sub
push
push
push
mov
mov
push
mov
movl
mov
lea
mov
mov
lea
push
mov
call
add
mov
mov
addl
ret
jmp
jmp
add
ret
ret
push
xor
pop
ret
add
ret
add
popl
push
pop
push
xchg
push
pop
pop
push
xchg
push
pop
push
xor
pop
push
xor
pop
mov
pushl
ret
jmp
ret
ret
push
push
push
push
push
push
push
push
push
push
push
push
call
add
pop
pop
pop
pop
pop
pop
pop
ret
push
xchg
add
ret
mov
ret
mov
ret
push
pop
push
pop
push
pop
mul
push
pop
push
addl
pop
ret
push
xchg
add
ret
pop
push
xchg
ret
add
ret
pop
push
xchg
ret
add
push
mov
push
push
push
xor
push
mov
xchg
mov
push
push
push
call
push
call
push
push
push
call
call
push
push
call
push
call
call
push
call
push
push
push
call
pop
pushl
xchg
push
push
push
push
call
call
push
push
push
call
push
push
push
call
call
push
cmp
jae
ret
pop
call
andl
mov
mov
or
mov
add
incl
sub
add
pop
pop
pop
pop
ret
push
mov
add
push
push
push
mov
cmpb
jne
call
test
je
cmp
jle
xor
mov
jmp
xor
push
push
pushl
mov
cmpb
je
push
call
add
and
cmp
jge
mov
cmp
jg
mov
test
jns
add
sar
mov
mov
test
je
mov
mov
add
andl
mov
cmp
jne
mov
test
jns
add
sar
mov
xor
mov
jmp
mov
test
jns
add
sar
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
or
mov
add
mov
incl
sub
add
call
jmp
cmp
jg
sub
cmpl
jge
add
xor
mov
mov
add
mov
or
mov
add
mov
incl
sub
add
call
jmp
jle
adc
xchg
out
pusha
out
sub
incb
jl
or
cs
dec
ret
adc
pushw
mov
add
sub
pop
int
or
xchg
outsl
call
outsl
in
ds
xor
jo
jb
sub
sti
fisttpl
jge
xchg
ss
in
stos
dec
ljmp
js
insb
or
pop
mov
push
adc
cld
push
dec
mov
scas
mov
sub
imul
stos
jnp
pop
pushf
xchg
or
jbe
insw
enter
loopne
mov
jns
je
test
mov
adc
cmp
leave
jne
add
loopne
pushf
mov
mov
dec
inc
mov
fs
bound
inc
mov
cmp
add
jns
pop
cmp
notl
dec
popa
sarl
xor
je
dec
lea
fimuls
mov
mov
ret
push
push
push
mov
or
cltd
int3
mov
loop
adc
xor
push
incb
fiaddl
push
xor
dec
push
pop
sub
mov
jnp
je
adc
inc
and
test
xchg
popf
mov
es
pop
aad
pop
or
push
jne
test
jnp
popf
pusha
jo
sarb
rcrl
movsb
push
jmp
stos
mov
jg
mov
sub
xchg
lock
mov
mov
push
fsubrl
mov
inc
test
jmp
mov
shll
mov
xor
push
jmp
adc
cmp
popf
pop
std
test
mov
es
imul
aas
bound
pop
inc
mov
xchg
push
test
xor
xchg
or
cs
test
dec
leave
scas
int
jo
sub
imul
divb
xchg
and
mov
enter
adc
jno
xor
mov
xchg
sbb
sbbb
mov
mov
sbb
mov
lret
inc
lds
ret
daa
jo
test
cmp
repnz
mov
inc
cmp
xchg
push
loop
addl
push
mov
pop
pusha
lods
adc
loopne
pop
add
or
fld
fs
mov
mov
inc
loop
lahf
mov
jecxz
sub
xor
js
xor
push
mov
std
ljmp
sarl
ljmp
f2xm1
or
lods
cli
testb
shlb
out
lock
aam
fisttpl
mov
jle
fs
dec
push
xchg
mov
lcall
dec
sbb
shrb
dec
stos
lock
fimull
xor
das
mov
sub
jno
clc
nop
adc
sbb
jbe
dec
lea
cmp
adc
push
sbb
popa
sub
out
mov
lahf
mov
das
cmp
mov
test
mov
inc
add
lret
mov
and
orl
dec
in
sbb
std
shlb
sub
arpl
pop
dec
add
movsl
xchg
loopne
popf
push
jmp
sbb
pop
enter
mov
jmp
cmp
lds
and
push
mov
push
scas
in
imul
or
stos
mov
inc
shl
xor
sbb
lds
dec
dec
in
jmp
or
sbb
or
sub
push
or
out
cmp
scas
sub
cmp
mov
mov
shl
dec
mov
pop
test
jl
jle
lea
popa
daa
xchg
sahf
jae
pop
and
dec
push
out
arpl
adc
add
movsb
jle
add
mov
pop
mov
pop
cmp
lea
sti
mov
or
mov
idivb
push
xchg
sti
xor
sahf
leave
mov
ss
lock
in
inc
sbb
mov
cmp
lods
cmp
adc
jg
xor
push
ljmp
loopne
das
add
pop
xor
orl
adc
mov
pop
repnz
mov
mov
pop
xor
sbb
mov
call
icebp
enter
sbb
sub
add
sahf
adc
jo
or
pop
add
sbb
add
scas
xor
xlat
sub
jne
out
push
pop
popl
sub
outsb
int
ret
aam
test
addr16
push
pop
test
mov
inc
mov
cmp
imul
fdivrp
dec
push
mov
cmp
repz
mov
fs
les
pop
mov
pusha
popf
fidivs
xor
jmp
inc
mov
jp
jno
cmp
int3
lret
xchg
ss
mov
sbb
add
mov
push
mov
nop
gs
push
adc
outsb
in
insl
push
mov
shrb
in
movsl
xchg
add
dec
cmp
xchg
rorb
call
push
and
jbe
mov
inc
xchg
push
cld
pop
out
lahf
add
aad
mov
cli
xlat
jge
es
and
add
xor
mov
aad
movsb
or
loop
pusha
stos
ja
les
pusha
jle
out
xor
cmp
leave
push
add
mov
out
mov
push
adc
ret
sbb
pop
call
lcall
scas
push
pusha
xchg
int3
or
jp
cmp
sub
je
adc
pop
push
push
mov
and
sub
jno
cmpsb
or
push
or
hlt
or
cld
std
incl
mov
sbb
cmp
jae
dec
test
testl
mov
mov
into
cmc
cmpsl
jmp
jl
fiaddl
dec
mov
sub
adcb
xchg
xchg
sub
sarl
pop
push
rcrl
jbe
or
push
mov
mov
mov
addr16
out
and
pop
bound
sub
jge
es
repz
insb
pop
call
fcmovnu
cmpsl
mov
xchg
xchg
inc
jbe
sbb
or
xor
mov
or
fisttpll
int
pushf
gs
mov
xor
aas
test
and
imul
imul
leave
dec
cs
ja
mov
sti
fidivrl
stos
or
lret
sub
je
out
test
iret
leave
jo
jle
adc
cmp
mov
imul
xchg
sbb
ds
rclb
push
fldcw
push
or
sbb
rol
xor
into
cmc
out
sub
sbb
jp
in
scas
test
dec
fidivrl
in
dec
push
shll
ljmp
sbb
loop
push
faddl
insb
repz
or
and
jns
mov
fcomp
mov
pop
adc
out
ret
xor
test
sbbb
out
push
cwtl
xor
mov
pop
fs
adc
daa
adc
push
push
dec
insb
push
inc
pop
andl
sahf
fcoml
cmp
into
popa
add
and
mov
push
adc
aaa
xor
push
dec
stos
jmp
mov
mov
and
mov
out
int3
xor
outsl
mov
loope
mov
or
sub
pop
into
xchg
loop
cli
popa
xchg
pop
dec
xor
mov
add
dec
sub
mov
ret
ja
push
in
les
mov
xchg
dec
shr
add
sbb
xlat
inc
aaa
push
mov
cmp
addr16
xchg
push
jae
sub
pop
jo
cwtl
mov
cwtl
fwait
repnz
repnz
cwtl
mov
sbb
or
call
or
sti
pop
xchg
sub
sub
mov
int3
out
arpl
push
sbb
pop
into
into
mov
loopne
mov
dec
dec
pop
sub
xor
stos
insl
dec
fsubs
cmp
jae
andb
ror
mov
in
sti
stc
xchg
cmpsl
inc
sbbl
test
mov
femms
fwait
inc
in
out
aaa
xor
mov
jl
dec
ds
push
pop
lods
test
pop
push
loope
lods
pop
mov
insb
push
jbe
ret
jne
imul
cmpsl
push
pop
ret
pop
add
je
jle
imul
mov
mov
adc
inc
jp
jge
xchg
xchg
out
inc
xchg
xorb
jnp
mov
dec
push
cmp
inc
lcall
cmpsb
dec
sbb
out
test
aaa
loope
cmp
jmp
mov
js
pop
movsl
jg
lea
mov
push
mov
out
push
push
cmpb
inc
inc
sub
xor
and
out
pop
sub
fstp
movsl
pop
dec
pop
repz
push
pop
and
pop
cmp
xor
ror
ret
ja
lret
xchg
sbb
and
fdivr
adc
rcr
dec
lret
xor
aaa
pcmpgtw
pop
xor
scas
mov
cmp
hlt
inc
shl
and
mov
inc
aas
imul
fs
lahf
or
in
xlat
cmpl
in
add
push
mov
lret
imul
in
cld
xor
sbb
jmp
pop
shr
in
adc
push
cmp
dec
push
daa
cli
fists
test
rcrb
cs
sub
mov
mov
xor
cmp
int
mov
sbb
pop
cld
out
push
sub
popa
ret
das
arpl
mov
lods
sbb
xchg
dec
xchg
adc
xor
lds
mov
cmp
add
enter
lds
sbb
cmovne
imul
sbb
popf
in
jp
outsb
adcb
xor
adc
popa
fwait
or
adc
push
insl
cmp
jns
push
rcll
jl
mov
ret
std
aas
sar
xchg
dec
push
ja
lea
cmp
xchg
fs
das
adc
jnp
mov
pop
leave
adc
pushl
out
sub
popf
subl
inc
push
sbb
xor
ret
fwait
aad
fsts
in
aaa
pop
out
adc
mov
nop
xor
xchg
out
mov
push
sub
mov
mov
call
in
adcl
sbb
mov
add
aam
in
or
orb
das
js
xor
je
add
mov
adc
cmp
adc
mov
in
mov
ret
mov
add
dec
xchg
push
mov
mov
adc
lock
pop
sbb
int
or
out
inc
xor
cltd
in
add
arpl
add
add
add
ds
and
shll
mov
aam
sbb
mov
xor
sub
popf
pusha
mov
call
adc
insl
fwait
or
mov
aas
stos
push
dec
sbb
ja
call
jmp
cmpsb
leave
fistpll
mov
popf
lcall
fs
cmp
sbb
divb
pop
mov
xchg
xorb
mov
idivb
xchg
das
repz
movsb
adc
fisubrs
xor
inc
fld
dec
jg
add
lret
adc
mov
mov
in
inc
sbb
mov
daa
lret
ja
pop
jb
or
pop
loope
mov
decl
mov
adc
movhps
popa
inc
std
and
mov
das
cld
out
scas
xchg
adc
sbb
dec
stc
daa
xchg
lods
xor
bound
addl
test
jbe
jo
push
and
dec
push
js
xor
cmp
jae
jne
insl
inc
cmp
and
mov
je
or
adc
inc
pushf
mov
testb
mov
and
jae
mov
into
sahf
adc
cmp
idiv
test
add
sbb
and
rorb
xor
scas
xchg
xor
and
adc
xchg
jmp
mov
mov
jle
fsubp
push
and
push
rclb
jb
data16
xchg
sbb
test
inc
cmpsb
cmc
es
or
enter
call
sahf
ss
loope
jle
sti
out
jmp
cmpsb
repnz
imul
sbb
xchg
dec
enter
repz
lret
xor
outsl
shrb
sub
push
mov
push
jmp
sbb
scas
into
mov
jbe
push
add
int
jl
cld
fwait
xlat
sarl
pop
iret
or
adc
scas
xchg
popf
xchg
aaa
xor
xor
push
mov
sub
and
rcrl
mov
lods
fnstenv
push
sub
mov
xor
sub
movsb
fwait
add
xchg
sbb
orl
push
mov
cmp
xor
jmp
adc
push
lods
cmpsl
mov
cmc
mov
mov
jo
rcrb
cs
mov
clc
popf
dec
into
addr16
movsl
jp
jg
dec
adc
mov
jne
jmp
call
inc
cmc
movsb
test
mov
andl
mov
sti
mov
lcall
adc
dec
int3
push
icebp
push
in
cmpsl
leave
ret
repnz
mov
jnp
xchg
push
sub
xchg
mov
test
int3
repz
dec
movsb
shll
aas
pop
xchg
cmp
das
mov
out
add
xchg
adc
xchg
jmp
jecxz
adc
jle
call
lret
adc
adc
mov
roll
stos
notb
or
cli
sub
shll
hlt
mov
fdivr
int3
and
in
xchg
push
lret
lock
fimuls
jnp
jbe
enter
mov
test
and
fisttpl
in
das
mov
push
lods
and
mov
je
push
mov
pop
aaa
sbb
xchg
adc
sbb
mov
sub
xchg
test
out
imul
xor
lea
sub
lods
pop
adc
mov
xchg
jnp
out
push
sub
stc
outsb
mov
sbb
or
in
in
dec
out
in
je
mov
pop
sub
sub
jo
jno
int3
mov
pop
imul
insl
pop
push
repz
cmp
adc
add
inc
fidivrs
test
mov
and
sub
pop
pop
sub
sub
push
lods
cmp
in
inc
cmc
mov
mov
je
fmul
jae
mov
fcmovnb
out
and
shll
das
sub
pushf
jg
push
push
or
push
test
pop
out
fisubl
fidivs
rclb
inc
enter
pop
je
add
inc
dec
lods
ja
sbb
lods
ror
lcall
into
lcall
into
lcall
into
lcall
into
lcall
into
lcall
into
lcall
into
lcall
into
lcall
into
lcall
into
lcall
into
lcall
into
lcall
into
lcall
into
lcall
into
lcall
into
lcall
into
lcall
into
lcall
into
lcall
into
lcall
into
lcall
into
lcall
into
lcall
into
lcall
into
lcall
into
lcall
into
lcall
into
lcall
into
lcall
into
lcall
into
lcall
into
lcall
into
lcall
into
lcall
into
lcall
into
lcall
into
lcall
into
lcall
into
lcall
into
lcall
into
lcall
into
lcall
into
lcall
into
lcall
into
lcall
into
lcall
into
lcall
into
lcall
into
lcall
into
lcall
into
lcall
into
lcall
into
lcall
into
lcall
into
lcall
into
lcall
into
lcall
into
lcall
into
lcall
into
lcall
into
lcall
into
lcall
into
lcall
into
lcall
mov
imul
jp
sub
mov
mov
mov
jge
adc
jb
movsl
lret
pop
dec
dec
mov
fimull
dec
push
je
push
bound
div
jno
jbe
jg
aad
or
jae
mov
bound
xlat
pop
mov
mov
inc
jne
jge
leave
pop
leave
ja
mov
out
loope
or
jge
pusha
or
cld
sub
mov
sub
mov
jno
imul
aaa
fiadds
and
xchg
push
dec
ficomps
pop
aad
mov
lds
cmp
pop
fadds
negl
cmp
inc
cli
iret
lds
mov
xchg
test
push
daa
adc
jae
xchg
in
push
ficoms
push
push
pop
arpl
cmpsb
and
cmp
jns
icebp
pop
sub
push
jno
movb
outsl
test
call
icebp
mov
int3
mov
fwait
call
pmaxsw
or
sub
jg
dec
add
mov
lods
xchg
outsl
or
push
aad
sbb
mov
test
xchg
ja
jl
sahf
xor
cmp
add
mov
testl
sbb
scas
xor
popf
test
and
jg
aaa
mov
mov
adc
mov
mov
jnp
mov
stc
xchg
xor
movsb
pop
fwait
jge
andb
mov
xchg
lods
dec
stos
sub
xorl
aad
sbbl
lret
lcall
and
inc
out
frstor
shll
vunpckhpd
sub
adc
add
loope
inc
clc
mov
insb
jno
sbb
out
xchg
dec
adc
pop
sahf
stc
inc
mov
jmp
ret
ret
pop
mov
xlat
das
sti
and
mov
inc
ret
mov
ja
xchg
testl
cs
sbb
dec
jo
out
push
push
push
adc
mov
add
push
xlat
in
mov
cmp
test
loopne
pop
je
adc
out
daa
mov
xchg
jne
jb
push
sbb
stc
jnp
lds
inc
movsl
cmovl
out
mov
xor
and
add
adc
pop
mov
sti
testb
dec
xchg
xlat
daa
cmp
jne
mov
cmp
xchg
pop
mov
rolb
adc
or
add
pop
mov
in
pop
lahf
sbb
cs
and
arpl
sub
movsl
push
sub
mov
in
mov
dec
mov
rcl
pop
or
or
cmpb
cmpsb
inc
sbb
lods
test
lahf
cmp
push
pop
popf
pop
jae
test
insl
stos
cltd
mov
ja
adcl
lods
adc
mov
lds
jmp
int
shr
add
sbb
add
iret
push
pop
mov
jnp
add
rolb
cmp
push
adc
push
scas
cmp
dec
addr16
ja
push
mov
mov
mov
movsl
or
test
cmp
orl
jno
cwtl
cs
test
hlt
add
scas
cmp
add
mov
gs
push
add
jecxz
das
ljmp
pop
xchg
int3
movsb
aaa
cltd
push
fstps
xchg
inc
inc
adc
cli
je
cmp
pop
arpl
and
imul
fsubp
fmull
inc
dec
or
xor
mov
repz
jo
sbb
loopne
dec
fidivs
jecxz
mov
mov
cs
inc
dec
ljmp
or
pop
adc
push
repz
inc
addb
jne
out
es
jmp
mov
inc
push
dec
ja
jne
lahf
pop
mov
inc
test
xchg
in
inc
dec
pop
repnz
rolb
inc
push
leave
pop
cmp
scas
and
popa
mov
jl
cmp
mov
cmp
jnp
jae
push
sti
lret
in
mov
xchg
pop
cmpsb
pop
push
in
jl
jnp
pop
jg
aam
es
pop
jl
push
repnz
or
call
mov
xor
jg
add
outsb
xor
mov
inc
mov
mov
mov
aad
mov
inc
test
roll
fs
xor
push
add
dec
jne
in
cmp
test
jp
mov
insl
mov
stos
and
mov
or
sub
ret
pop
adc
jnp
push
mov
dec
and
xchg
ljmp
mull
xchg
xor
cltd
loope
mov
test
es
cwtl
ja
cwtl
lods
and
arpl
test
int3
into
ret
mov
xchg
sub
mov
and
std
pushf
cvtdq2ps
aad
push
sub
pop
adc
sub
jae
or
pop
imul
or
popf
lcall
sbb
jo
inc
movsb
sbb
je
cmc
inc
jae
sbbb
inc
xchg
sbb
outsl
add
les
pusha
int3
cmp
ret
insl
xlat
mov
mov
adc
push
dec
rcl
cmp
push
push
stos
adc
xor
jmp
inc
and
dec
call
inc
out
mov
pop
and
enter
xchg
aas
sbb
xchg
adc
jno
add
pusha
test
and
cmc
inc
sub
fmull
cmc
pop
loopne
and
dec
clc
repz
fwait
sub
arpl
lock
dec
push
jmp
mov
loope
mov
lahf
sbb
imul
test
lahf
lahf
aam
fldcw
out
push
aam
lds
inc
scas
ja
lret
fisttpll
repz
test
push
repz
push
jecxz
or
pushf
lods
ljmp
sub
jl
mov
xchg
cmpl
cs
push
mov
mov
push
in
xor
add
incl
adc
push
loopne
loopne
mov
add
push
dec
enter
adc
shll
lock
cli
int3
stos
cmpl
bound
adc
sbb
xor
mov
test
adc
rclb
cld
jge
sarb
lea
ss
pop
adc
xchg
clc
imul
mov
int
divb
insb
xchg
mov
mov
pop
lock
ficoml
sub
stos
inc
xor
popa
jmp
jecxz
jno
enter
xchg
xorb
js
inc
or
adc
xchg
dec
das
mov
lcall
in
jae
movsl
sbb
cmp
mov
jnp
lock
imul
lret
xchg
clc
push
pushf
jae
push
jns
mov
les
fbstp
mov
pop
push
mov
pop
push
sub
add
dec
sar
or
inc
shrb
dec
xchg
push
movsb
hlt
sub
aaa
inc
inc
cs
ds
cld
inc
cmp
into
enter
cmp
or
jb
push
mov
shll
imul
or
xchg
dec
test
and
mov
or
test
xchg
or
xor
jbe
repz
cmp
and
xchg
and
or
sti
ja
arpl
outsb
sub
mov
pop
mov
gs
cltd
push
insb
inc
insb
cmp
sub
sbb
ljmp
je
push
mov
cmpsl
outsl
pop
adc
push
popa
cmp
add
lods
fimuls
mov
inc
or
daa
icebp
sub
mov
pop
mov
jmp
lods
pop
jmp
out
dec
lret
jl
and
mov
inc
mov
inc
jle
dec
dec
sbb
dec
fstpt
mov
add
popf
rep
xor
cmp
sahf
in
fstps
add
movsb
xor
sub
mov
mov
mov
mov
jg
movl
js
loop
push
xchg
xchg
fnsave
or
test
int3
popa
xor
dec
xchg
jecxz
add
imul
addr16
aaa
push
in
add
xchg
std
lea
iret
add
jmp
add
cmpl
int
and
shrl
add
test
xor
mov
ljmp
xor
cmp
data16
mov
dec
inc
push
lret
hlt
jb
je
xchg
inc
sbb
in
enter
add
hlt
cli
clc
pop
icebp
cwtl
jae
rclb
scas
adc
adc
scas
out
mov
or
cmp
aas
movsl
insl
nop
mov
mov
fisttpll
decb
adc
push
sub
mov
sub
js
dec
repnz
pop
aaa
jne
shr
scas
push
nop
dec
in
arpl
mov
fs
jne
push
repz
rolb
imul
xor
adc
cmp
cmc
cmp
pushw
inc
imul
lods
ror
lcall
into
lcall
into
lcall
into
lcall
into
lcall
into
lcall
into
lcall
into
lcall
into
lcall
into
lcall
into
lcall
into
lcall
into
lcall
into
lcall
into
lcall
into
lcall
into
lcall
into
lcall
into
lcall
into
lcall
into
lcall
into
lcall
into
lcall
into
lcall
into
lcall
into
lcall
into
lcall
into
lcall
into
lcall
into
lcall
into
lcall
into
lcall
into
lcall
into
lcall
into
lcall
into
lcall
into
lcall
into
lcall
into
lcall
dec
xor
mov
push
xor
data16
cmp
idivb
stc
ss
scas
ljmp
jle
outsl
or
je
xor
rorl
int3
jle
insl
sbbl
cld
outsl
jp
ffree
icebp
mov
scas
push
mov
xchg
xorl
outsl
mov
std
mov
pop
lret
rcrl
fwait
jnp
adc
or
push
inc
xor
cmp
mov
and
push
xor
testl
mov
push
add
xor
pop
sbb
cld
xchg
pop
movsl
cwtl
hlt
jb
lock
xchg
xchg
into
push
int
lret
popf
sbb
push
adc
and
cmp
inc
dec
lods
stos
mov
lds
or
jge
mov
inc
push
and
dec
lea
das
movsl
inc
mov
mov
insb
inc
fists
mov
jl
inc
daa
outsb
add
mov
stos
loope
mov
fwait
add
cli
in
lock
int
pop
cmp
push
repnz
pushl
inc
clc
das
inc
mov
imul
cltd
fistpll
clc
shlb
mov
outsl
test
mov
fcmovnb
cmp
xchg
fsubp
in
insb
push
movsl
push
lea
xor
mov
pop
cmp
sbb
push
cmp
rcrl
mov
popf
imul
popa
xor
cmp
test
shlb
into
sub
push
sbb
xor
mov
add
or
pop
cwtl
loop
in
icebp
loop
mov
xorl
adc
aad
mov
je
enter
jg
add
sbb
adc
fists
popf
orb
mov
mov
inc
stos
sub
or
push
mov
jb
ret
mov
fisubl
pop
adc
and
mov
mov
jle
xchg
mov
fucom
adc
in
rcll
xchg
jmp
or
xchg
sti
in
mov
imul
xor
jae
dec
push
shrl
test
shlb
mov
movsl
and
xchg
mov
call
jge
das
adc
mov
pop
lea
sarl
xchg
popf
xchg
sahf
push
and
stos
lret
cmp
dec
sbb
fs
mov
push
loop
aad
jb
add
add
xor
pop
sti
cmpsb
xor
xchg
xlat
enter
push
and
loopne
sub
rdpmc
mov
inc
daa
sbb
and
insl
sbb
mov
dec
pop
lock
xor
mov
jmp
ljmp
cmpsb
cltd
sar
insl
int3
ja
arpl
and
cmpsl
fucomp
pusha
jg
rcrb
loope
subb
mov
scas
aaa
mov
cltd
sbbb
xor
adc
into
mov
push
cld
data16
sbb
cltd
adc
data16
dec
dec
jo
testb
cmp
add
xchg
push
push
pop
cmpsb
lods
mov
fsubrl
and
or
sbb
outsb
or
pop
xor
sbb
sub
pop
push
xchg
dec
add
mov
push
mov
outsl
addr16
decl
and
inc
cmp
clc
push
inc
or
mov
fs
push
pop
push
dec
lods
pop
ret
out
lods
sbb
inc
mov
or
aad
mov
lahf
pushw
push
leave
and
inc
cld
mov
and
jp
cli
mov
neg
mov
xor
xchg
add
test
add
mov
int3
stos
shrl
cmp
mov
cli
jge
fisubrl
xchg
mov
fs
dec
inc
popa
sub
push
bound
loop
jb
jns
jne
imul
int
push
aas
lock
ja
cmp
andb
xlat
subb
into
xor
fidivrs
daa
add
mov
stos
fmuls
adc
dec
nop
push
xor
fisubrs
js
mov
loope
dec
fldt
sub
push
pop
repnz
push
adc
sbb
xchg
out
mov
push
stos
arpl
dec
mov
and
mov
mov
pop
and
xchg
mov
jmpw
cltd
ja
jno
inc
frstor
sub
and
cmpsb
jge
test
jg
lcall
sbb
sbb
xor
jmp
mov
pop
dec
test
bound
fsubrl
mov
imul
pop
xorl
flds
xor
cwtl
dec
aam
mov
iret
mov
lret
dec
pop
sbb
sti
xchg
jge
mov
xchg
loopne
and
add
sub
adc
mov
pushf
mov
xor
lret
xchg
cmpsl
cld
and
push
mov
popa
add
push
rcl
pop
test
adc
lods
lods
pop
idiv
push
das
or
cld
sub
test
xlat
notl
push
inc
sti
sub
out
insl
mov
int3
or
cmp
popa
pop
lret
xchg
jo
mov
stc
ljmp
loopne
xchg
fnstsw
xchg
cld
push
lret
push
xlat
pop
push
je
mov
das
or
push
xchg
lcall
ds
jmp
mov
fbld
das
ret
roll
mov
jle
add
adc
shlb
and
add
lods
stc
mov
ret
xchg
xchg
mov
movsb
dec
aad
mov
dec
cmp
sub
subl
js
cmp
jle
outsb
push
movsb
rcll
xor
ja
xchg
les
sahf
pushf
mov
insb
mov
xchg
ja
loope
out
loopne
inc
dec
dec
push
sub
mov
ja
or
sahf
mov
inc
pop
jnp
stc
xchg
cmp
mov
cwtl
dec
add
ss
jne
mov
cmpb
outsb
sub
dec
fnstenv
or
movsb
and
lock
cmp
mov
push
outsb
inc
sub
push
pusha
sub
or
orl
lret
lcall
adc
scas
cli
xchg
add
mov
cmpsl
test
inc
sti
jecxz
dec
and
std
mov
push
sub
rorb
jno
mov
fidivs
xchg
pop
js
fistl
push
movsl
jp
jl
push
fisttpll
adc
inc
insl
sbb
aad
fs
jp
in
jp
and
jle
mov
mov
mov
mov
inc
inc
cmp
jnp
roll
aad
lods
sbb
mov
push
mov
mov
out
push
ja
andb
pop
movsl
mov
inc
imul
lea
pushf
sti
sahf
lahf
jae
cmp
repnz
push
mov
mov
push
and
or
sub
fldenv
add
xor
push
test
in
sti
xchg
mov
popa
das
and
cmp
xchg
in
cmp
repz
jns
xor
pop
fldt
sub
xor
add
xchg
inc
cld
pop
dec
cltd
xchg
and
mov
sub
pushf
jno
push
lods
jae
mov
mov
mov
and
mov
loop
lret
leave
mov
or
push
cmp
stos
sbb
cld
stc
mov
push
sub
push
xchg
in
add
test
mov
dec
shl
mov
mov
or
fs
jg
or
hlt
mov
add
ja
int3
or
out
mov
pop
jnp
jnp
add
das
arpl
add
stos
popa
clc
aam
js
insl
lock
clc
test
jae
sbb
movsl
jnp
lods
mov
ljmp
or
sub
stos
adc
cmp
hlt
and
dec
push
adc
mov
push
imul
subl
or
dec
inc
mov
cld
dec
cld
or
lock
sbb
addr16
add
sbb
cltd
mov
std
lret
dec
push
andb
shll
movsb
push
es
stc
or
or
imul
shrb
push
jno
cmp
outsl
mov
xchg
cwtl
cmp
mov
pop
aam
mov
leave
cmp
sbb
aas
leave
xchg
or
dec
push
and
adc
rcll
mov
mov
hlt
cmpsb
push
xchg
mov
sub
push
dec
xor
loopne
jp
inc
repnz
js
pop
and
and
adc
cld
popf
fwait
inc
lea
test
into
cmpsl
int3
sbb
sbb
out
inc
dec
xor
in
mov
or
lock
inc
unpcklps
ret
rcr
inc
mov
fwait
sbb
mov
pop
lret
ficoms
outsb
mov
fsubl
sbb
xchg
repz
jmp
imul
mov
shrb
test
xor
lcall
mov
jge
test
mov
push
fiaddl
mov
and
push
mov
movsb
sub
xorb
lcall
push
pop
push
mov
inc
adc
mov
loopne
mov
rcrb
xchg
dec
push
cmp
mov
cmp
jl
sbb
jno
in
xchg
insb
lret
lret
sar
jmp
test
inc
out
adc
test
sbbl
subl
sbbl
bound
repnz
mov
add
mov
pop
dec
fsubrs
icebp
lret
dec
shlb
sarl
jns
jns
bound
push
sbb
rclb
test
mov
jge
mov
mov
mov
rol
inc
test
aad
in
data16
xchg
dec
arpl
sbb
adc
xadd
clc
xor
fstps
enter
jmp
xor
jl
add
sbb
test
jp
data16
jge
jae
ss
mov
xchg
icebp
ss
movb
sub
jge
push
subl
cmp
mov
xlat
sbb
sahf
leave
addb
out
mov
inc
cmc
ja
sarl
push
test
fwait
mov
push
xchg
mov
lcall
inc
pop
mov
or
mov
addr16
fs
std
hlt
xchg
inc
in
mov
mov
xor
jl
jp
sbb
mov
jbe
xchg
jbe
and
push
push
imul
xchg
adc
test
mov
mov
pop
les
nopl
call
js
pop
pop
loop
or
test
mov
mov
pop
mov
add
or
movsl
in
mov
arpl
or
cwtl
push
arpl
js
rorl
in
mov
add
push
stos
mov
sbb
out
jmp
iret
js
xchg
je
xchg
mov
xor
fimull
pop
arpl
ss
push
cmpsb
dec
stos
fs
sub
xor
dec
jbe
fwait
adc
or
inc
lret
and
xchg
sbbl
jns
lcall
rorb
mov
sbb
pop
popa
sahf
int3
or
int3
cmp
shrl
jnp
xchg
pop
jo
cld
test
xchg
jl
fstpl
dec
fstpt
stc
pop
std
dec
pushf
rorb
fildll
insb
mov
push
push
mov
push
push
mov
out
sub
push
stos
fdivl
into
xor
adc
xchg
ret
movsl
imul
dec
and
movsl
xchg
push
lret
push
pusha
popa
ror
xor
mov
add
out
imul
out
repz
and
dec
fwait
and
sar
push
bound
cmp
lods
shll
ds
repz
push
aas
pop
or
pop
pop
or
xchg
pop
sub
loop
sbb
add
cmp
test
bnd
dec
push
mov
push
cli
push
repnz
iret
mov
sahf
lds
loopne
and
inc
and
mov
mov
shlb
loope
jg
rcl
stos
test
push
arpl
jg
mov
cwtl
into
sub
jge
jp
add
jno
orb
jno
xchg
je
adc
adc
mov
xor
xchg
shr
aam
std
mov
enter
out
push
cmp
adc
jecxz
cli
mov
shlb
cld
call
adc
sbb
jmp
dec
add
into
cmp
scas
outsl
push
pop
xchg
popa
insb
rolb
ljmp
fistl
xor
xor
imul
dec
hlt
dec
mov
test
cmp
jns
xor
sub
je
and
mov
leave
cmpl
inc
inc
aas
cmpsb
cld
xor
mov
add
mov
scas
xchg
push
lods
imulb
icebp
les
jmp
xchg
fptan
or
mov
stos
push
sub
aad
sti
arpl
aas
inc
push
fucomip
jg
mov
out
add
fcoms
js
push
push
push
lods
lret
aas
daa
js
jbe
daa
xchg
mov
push
sub
pushf
ss
sbb
mov
dec
or
xchg
xor
push
dec
cmpsb
orl
shlb
popa
jne
call
mov
push
xor
inc
and
add
pop
hlt
flds
mov
sbb
jg
push
xor
and
mov
mov
movl
outsl
dec
cmp
dec
inc
movsl
mov
sbb
imul
cmp
in
daa
nop
pop
aaa
jne
or
sub
bound
lcall
adc
push
dec
sbb
pop
test
inc
mov
data16
in
lock
cmp
jno
rorl
xchg
mov
and
push
sti
and
scas
in
mov
test
cmp
aaa
xor
ss
divb
daa
xchg
shlb
fnstenv
push
fsub
je
loope
sub
aad
sarb
flds
mov
call
out
inc
cs
jl
pop
test
mov
pushf
je
mov
ja
cmp
out
imul
in
dec
add
stc
clc
mov
popa
xchg
dec
call
mov
or
test
jecxz
mov
sub
dec
pop
fsubs
in
add
insb
fsts
dec
sahf
aam
pop
or
ljmp
aas
jp
xchg
fadd
push
pop
pop
xchg
fmuls
xchg
lds
test
cmp
mov
push
adc
mov
stos
ret
jb
jo
xchg
cs
xchg
dec
xor
psrlq
push
std
test
and
out
mov
ret
and
lcall
movb
cmpsl
xor
jns
fs
inc
xor
rcll
shrl
iret
dec
inc
adc
cli
cld
jl
in
fcoml
scas
mov
mov
insl
mov
sub
adc
mov
dec
xor
mov
mov
adc
push
push
and
push
push
gs
das
push
rcrb
jbe
rorb
das
sub
dec
clc
jle
imul
mov
movsl
xlat
rorb
xor
mov
or
dec
pop
jo
in
in
sub
adc
mov
fsts
and
ja
push
stos
or
xchg
loop
mov
stos
rorb
sbbb
cmpl
cmp
mov
dec
call
inc
inc
les
push
push
adc
xchg
test
cmp
xor
nop
jbe
gs
cs
adc
push
sbb
in
mov
xchg
pop
idiv
inc
jmp
cmp
mulb
cmp
jno
aas
mov
movsb
mov
mov
pop
cmp
jecxz
int
dec
pop
imul
test
das
cltd
mov
add
gs
fwait
rorl
outsl
call
repz
test
or
lock
add
adc
push
sub
or
xor
shl
data16
mov
fwait
pop
outsb
pop
pop
inc
mov
pusha
jge
stc
clc
or
mov
pop
mov
arpl
aad
push
push
lret
jl
jnp
inc
inc
pop
mov
push
xchg
push
mov
negb
mov
fisubrs
pop
mov
pop
adc
test
inc
fcmovnu
jle
push
inc
mov
push
test
adc
cmp
pusha
xor
in
cs
je,pn
mov
xor
pushf
mov
scas
xchg
ret
stos
mov
dec
pop
or
cli
mov
sbb
dec
vaddsubpd
movsl
mov
dec
movsb
enter
xorl
test
or
mov
and
mov
andl
int
xchg
push
mov
pop
mov
ret
es
cwtl
or
mov
and
in
cmp
mov
iret
setae
mov
xor
pop
out
dec
xchg
pop
outsl
mov
adc
xchg
push
inc
insb
call
xor
cvtps2pi
pop
adc
mov
das
dec
pop
cmp
sub
inc
adc
dec
xchg
jnp
jmp
cmpsl
ficompl
in
out
pop
and
push
jne
add
scas
dec
sbb
out
sub
push
push
fwait
pop
aaa
and
jnp
dec
ja
mov
cmp
fildl
das
mov
lahf
mov
sub
cmp
jmp
jecxz
push
cmp
sbbb
pop
xor
imul
or
iret
mov
xchg
inc
test
pop
insb
xor
mov
loope
cli
loope
fildll
lahf
pop
xor
adc
sub
xor
dec
jecxz
jg
loopne
divl
push
cli
lods
jbe
mov
dec
jbe
iret
jl
pop
repnz
or
or
xchg
and
aad
adc
xchg
jge
pop
bound
xor
or
enter
mov
pusha
lods
pop
insl
cmp
and
mov
dec
mov
mov
dec
stos
divl
shlb
idiv
mov
sbb
stos
or
push
xor
popf
roll
xor
insl
daa
cmp
in
dec
push
xor
cli
mov
xor
xchg
test
and
pop
fwait
cmp
or
xorb
scas
ss
lahf
cmpsb
xor
dec
aaa
push
xchg
and
imul
or
push
lds
stos
xrelease
popf
mov
je
aaa
pop
pop
xchg
sub
data16
in
fs
je
clc
lret
hlt
sbb
cmp
leave
pusha
sub
test
mov
and
mov
jge
in
dec
fcoml
cwtl
repz
push
xlat
jg
mov
adc
mov
clc
push
dec
imul
inc
outsb
jp
add
ss
pop
push
dec
adc
adc
in
aam
lret
or
daa
mov
jbe
mov
call
inc
sub
arpl
test
mov
push
mov
cmc
andb
adc
rorl
orb
fcmovb
insb
lods
addb
and
rol
jb
cmp
add
insb
std
popf
push
pop
adc
rcrb
xchg
push
movsb
inc
dec
xchg
je
ret
mov
fcompl
mov
pop
xor
add
addb
xor
inc
mov
fldt
jmp
cmpb
jne
clc
adcb
pop
jnp
aas
cmp
mov
jp
cmc
rcl
hlt
jecxz
cmp
mov
or
add
dec
jno
push
pop
test
fdivr
scas
inc
in
aad
std
pop
int
inc
or
ljmp
stc
bound
int3
mov
cltd
das
push
sub
lahf
fsts
cli
push
xor
rorl
xor
lcall
data16
add
dec
dec
fsub
inc
sub
push
mov
sub
mov
test
shl
in
jbe
dec
cmc
mov
cwtl
pop
adc
or
adc
ret
sbb
and
jl
jp
int
das
pop
test
sbb
jp
adc
lods
or
mov
fdivr
lds
repnz
aam
and
jle
test
mov
xor
addb
cmpsl
sbb
in
inc
pop
xor
sbb
enter
push
or
int3
and
cli
sub
sub
xchg
sbbb
cmc
or
int3
xor
enter
popa
jo
xchg
lods
roll
or
aam
lret
jbe
dec
sub
in
pop
sub
addl
das
jl
outsl
mov
pop
rcr
lahf
fisubrl
lret
out
push
sub
jecxz
inc
sti
in
mov
cs
gs
ret
in
popf
pop
jnp
repnz
sub
int3
call
roll
pop
addr16
sbb
cmc
cmp
ret
push
mov
jl
popf
enter
xbegin
outsl
xorb
mov
jbe
mov
lods
jmp
mov
out
insb
dec
and
outsb
mov
jmp
stos
fildl
xchg
and
mov
inc
jae
data16
jb
clc
test
cld
mov
add
es
jp
jns
dec
push
ret
sbb
push
movsb
push
jl
es
shll
in
adc
inc
sbb
lods
addl
and
or
lahf
stc
sbb
sahf
push
sbb
cli
insl
inc
xlat
add
mov
das
push
scas
shrl
sbb
push
int
out
mov
repz
dec
dec
sarl
pop
sbb
pop
movsb
push
insb
mov
push
add
sti
adc
pop
xor
jne
enter
sub
adc
sarl
test
sub
frstor
xchg
lcall
lret
jno
xor
mov
lcall
loope
xchg
xlat
aaa
int3
dec
int3
jg
adc
adc
push
sbb
xor
mov
int
dec
popf
xchg
and
lock
movsl
call
fwait
ret
das
data16
pop
repnz
inc
daa
inc
and
push
jbe
cmpl
xlat
pop
cmp
clc
ljmp
rclb
push
pop
push
dec
data16
cmp
mov
mov
jge
imul
adc
cmp
pop
ret
fbstp
es
sti
mov
hlt
mov
js
mov
adc
mov
std
ret
xbegin
insb
ret
sysenter
ljmp
cmp
clc
sub
rolb
xlat
fadds
cmp
js
sub
scas
stc
add
push
nop
fcoms
xor
dec
lock
mov
mov
adc
push
lods
mov
xchg
cmpsb
fsub
lods
mov
nop
ret
dec
adcl
xor
cmpsl
and
push
in
ljmp
push
aam
pop
in
add
pop
test
inc
or
mov
or
inc
cmpsl
or
add
lahf
sbb
es
xchg
sub
imul
hlt
popf
push
sub
push
ficoml
mov
cmp
add
lret
inc
in
enter
inc
jb
aad
popa
cmp
fstl
sbb
mov
jno
out
pop
dec
scas
out
fucomip
inc
sti
jo
popf
and
jns
inc
int3
pop
fwait
push
dec
sahf
jge
inc
cmp
cmp
mov
add
mov
std
dec
and
inc
fnstenv
adc
push
test
lds
inc
cmc
cltd
mov
inc
push
sbb
and
sub
cld
pop
dec
or
int
xchg
dec
mov
adc
push
cmp
cmp
lret
pop
dec
or
pop
outsw
cmpsl
pop
cmp
inc
add
out
loope
and
mov
xor
clc
or
and
lds
leave
xchg
mov
popa
dec
push
fdivr
aad
int3
aas
aad
sub
les
xorl
mov
mov
jl
pop
sub
ja
jge
lea
pop
test
test
fbld
cmpb
lret
push
es
stos
inc
rorl
xor
cmp
aas
stos
shrl
push
mov
out
or
adc
int
xchg
and
mov
xchg
outsb
sub
rcr
and
push
lcall
and
push
push
das
gs
out
add
sub
int
shl
sub
cmc
sbb
mov
add
jmp
mov
pop
ret
mov
loopne
lret
mov
or
dec
out
sub
out
xchg
pop
mov
push
sub
out
pop
pop
out
decl
xor
jp
and
xorl
adc
inc
sub
seto
pop
mov
pop
mov
sub
stos
inc
jl
add
int
or
lods
aaa
jle
icebp
cld
lock
adc
int
ret
xor
inc
out
add
and
pop
icebp
push
cmp
mov
add
add
cmp
inc
dec
lods
or
add
fwait
jo
cs
and
add
cmpsb
push
sbbb
sahf
sub
data16
push
mov
call
stos
inc
or
pop
or
sub
lock
cmpsb
movsb
dec
pop
jle
mov
mov
idiv
and
rcrl
int
adc
inc
test
mov
xchg
or
mov
aam
scas
repnz
movsb
xchg
rcll
es
popf
daa
sub
fidivl
adc
push
ret
jl
cwtl
repz
mov
repz
mov
lret
jns
xchg
sbb
mov
call
in
out
testb
shll
add
xchg
outsl
mov
add
xor
xor
cmpsb
inc
jne
stc
ss
jge
out
stos
out
cmp
mov
mov
xor
orb
es
push
setbe
push
fcoms
bound
ljmp
dec
mov
mov
ljmp
fmuls
icebp
hlt
int
and
fbstp
das
lods
movsl
and
repnz
test
fdivp
movl
add
mov
fwait
xchg
mov
push
dec
iret
mov
in
mov
inc
mov
mov
sbb
sbb
adc
mov
jns
push
in
dec
repnz
mov
add
lret
sahf
sub
insb
repnz
repz
mov
xchg
fdiv
dec
adc
sbb
lahf
jne
xor
icebp
test
pop
shl
mov
popf
rcr
outsb
test
je
out
and
adc
push
mov
not
dec
cmp
in
xchg
sub
sub
movsl
xor
pop
mov
mov
rcrb
ja
bnd
pop
dec
sub
mov
xor
mov
xlat
mov
pop
sbb
sub
stos
inc
lods
dec
scas
mov
add
dec
jge
nop
movsb
fstl
int
arpl
and
inc
cmc
and
pop
inc
cmpsb
add
shrb
lret
pop
es
pop
test
push
in
mov
mov
inc
push
mov
add
leave
cmc
jg
cmpsb
test
test
jmp
inc
mov
xor
mov
lea
push
push
lods
shrb
mov
xchg
sbb
inc
push
sbb
adc
or
aaa
sbb
push
xchg
aas
mov
mov
ljmp
test
setb
add
mov
aam
shll
and
dec
pop
jno
inc
lret
test
in
xchg
or
jg
push
sahf
sub
jb
daa
add
mov
pop
or
cmp
icebp
test
sarl
mov
mov
mov
pop
mov
push
lods
lret
das
inc
xlat
mov
inc
pop
test
jp
pop
add
dec
push
push
pop
call
mov
and
mov
sbb
mov
int3
mov
int
xlat
les
sub
outsb
mov
ljmp
in
mov
xchg
mov
pop
xor
popw
insl
jnp
popf
push
mov
enter
cs
and
sahf
jl
and
cs
xor
repnz
scas
push
enter
sbb
icebp
fcoms
push
sub
in
dec
rorb
test
jbe
jae
mov
sahf
mov
inc
in
mov
mov
jne
fsubs
sahf
imul
mov
mov
rolb
pop
loopne
push
clc
push
enter
loope
stos
pop
notb
out
mov
dec
fidivl
push
and
inc
repz
leave
repz
gs
jl
divl
lods
mov
pop
sbb
imul
lock
testl
movsl
fildl
adc
lgs
inc
aaa
mov
push
loop
subl
int3
movsl
scas
push
or
into
mov
mov
push
addr16
clc
inc
pushf
test
push
sub
mov
xchg
pop
fadds
js
popa
and
dec
mov
push
aaa
mov
jge
pop
push
test
pop
sub
imul
fdivrl
and
push
cmp
mov
xor
sub
int
mov
inc
mov
js
adc
jae
call
fs
jp
mov
and
in
jbe
sub
icebp
sbb
cmp
sahf
lcall
lods
pop
inc
and
nop
mov
mov
sbb
daa
fdivl
xchg
test
jo
cs
and
xchg
imul
pop
dec
dec
das
add
lock
bound
sub
xchg
and
movsb
pop
arpl
hlt
jl
xor
cmp
mov
mov
dec
add
lock
cmp
mov
orl
jp
arpl
xor
popa
jg
pop
lock
pop
enter
adc
pop
xchg
inc
inc
scas
push
sbb
shlb
and
xor
xor
outsl
xor
or
xchg
loopne
mov
out
push
cld
out
mov
lea
fcmovnbe
loop
addr16
pop
fiadds
adc
xor
pop
sarl
push
bound
std
or
sbb
mov
hlt
mov
cmp
out
and
push
xor
fisubrl
push
mov
sbb
and
pop
cmp
sbb
dec
test
sbb
dec
cwtl
jnp
je
push
inc
test
jbe
mov
push
lahf
sub
stos
rorb
loopne
mov
std
adc
add
xor
iret
mov
cmc
mov
mov
mov
cmp
loope
and
aas
and
cmp
hlt
cmp
mov
aaa
and
leave
mov
mov
stc
push
dec
fisttpl
adc
pop
cmp
or
adc
inc
icebp
jbe
out
test
xor
out
xchg
lods
inc
ror
push
or
jp
mov
stos
icebp
adc
shlb
and
cmp
push
ljmp
lods
rclb
xor
jb
rolb
and
lea
xchg
mov
test
lret
xor
aaa
lea
push
test
fbstp
sub
jle
fcomps
loopne
pop
ja
xchg
mov
or
test
stos
or
inc
fcmovne
mov
jne
stc
lods
lcall
cmp
jb
aam
mov
shl
aad
daa
push
insl
jp
adc
outsl
mov
adc
sbb
testb
push
scas
xor
jb
loopne
aad
ret
xor
test
scas
jno
jbe
or
push
shrl
movsb
repnz
adc
adc
mov
scas
mov
daa
lcall
push
push
and
out
jae
movsb
mov
or
cmp
stc
test
shrl
ds
dec
sub
lcall
in
sti
mov
adc
hlt
mov
inc
jno
sub
sbb
stos
pop
call
adcb
add
xor
push
or
inc
cmc
mov
icebp
mov
push
mov
xchg
cmp
scas
pop
int3
jp
cmpsl
imul
add
pop
ja
mov
outsl
fstpl
fnsave
movsl
xchg
sub
lds
xchg
inc
and
mov
pop
pusha
xor
lea
xchg
or
aad
outsl
call
int3
aad
sub
mov
sub
adc
cmpsl
inc
sti
popa
mov
addr16
cltd
push
jge
and
ret
sub
adc
outsb
stos
mov
std
js
push
popf
and
xchg
fstps
and
mov
in
addr16
jo
das
dec
data16
popa
cld
movsl
push
insl
and
xlat
rcr
jnp
xor
push
nop
push
gs
xchg
adc
mov
es
xorb
push
mov
jb
mov
aam
pushf
lea
imul
leave
clc
xor
mov
mov
cmp
adc
add
aad
mov
cmc
bound
lea
pop
sbb
cmp
inc
and
insl
mov
or
pop
mov
xor
mov
in
repnz
sbb
loopne
aaa
inc
lock
mov
gs
lea
add
movsb
dec
andl
pop
hlt
mov
add
mov
mov
xchg
mov
nop
inc
repnz
orb
sub
aas
jno
ret
dec
fcmovb
cmpsb
hlt
outsl
and
testl
add
xor
inc
push
std
imul
fsts
pop
lock
mov
adc
shl
dec
stos
lret
mov
ror
or
push
loopne
cs
jg
xor
aas
ds
cmp
test
mov
andb
sub
repnz
cs
sbb
mov
or
and
mov
insb
dec
shlb
pop
inc
flds
lret
fiaddl
ss
mov
flds
movsl
es
mov
les
in
mov
test
mov
mov
lock
insl
cmp
sbb
mov
std
pop
testl
and
frstor
imul
sub
jle
sbb
in
fisubs
pop
leave
movsb
and
or
pop
jno
push
cmc
testb
test
add
mov
fidivrs
test
xchg
repz
jne
add
mov
rcl
iret
push
mov
mov
mov
daa
lret
mov
push
mov
xchg
mov
mov
stos
imul
and
lea
cmp
insb
imul
mov
aam
lahf
inc
sub
pop
leave
push
fisubl
mov
mov
cmp
fs
cmpsb
add
pusha
mov
outsb
out
push
and
cmp
add
xchg
xchg
test
aad
and
mov
cltd
fldl
adcb
pop
adc
adc
fildll
lods
xor
jnp
shrb
iret
xchg
xchg
ljmp
mov
outsb
cs
jmp
adc
mov
pop
jmp
test
push
test
inc
in
mov
mov
push
adc
and
scas
test
mov
mov
jmp
xchg
lods
sbb
outsl
stos
mov
stos
cmp
xor
dec
adc
pushf
shll
pop
cmp
int3
ror
dec
scas
in
ds
sbb
adcl
add
push
mov
lret
loopne
outsl
es
sub
rolb
xor
pop
pushf
fucom
jne
std
mov
es
mov
cmp
divb
mov
arpl
or
lock
sbb
orl
dec
inc
add
xor
std
lcall
clc
sbb
sbb
dec
jns
pop
lods
cli
jbe
aas
jmp
pop
jmp
daa
mov
sbbb
andl
add
in
sub
add
das
aad
pushf
sbb
stos
push
int
mov
push
gs
xchg
inc
jp
cmp
pop
lods
sub
addr16
imul
lds
jo
dec
add
fcompl
imul
dec
jbe
adc
add
test
sub
push
outsl
imul
mov
test
xor
adc
or
xchg
mov
hlt
sub
xchg
mov
loopne
cmp
in
dec
imul
or
psrld
jae
insb
lods
pop
cwtl
push
cli
adc
sub
push
pop
xor
mov
push
loopne
cmp
dec
push
pushf
fiaddl
and
add
out
sbb
imull
or
aas
mov
stc
cmp
xor
xor
xor
out
inc
imul
inc
jecxz
addr16
mov
sub
in
mov
in
inc
jae
testb
test
mov
sub
jmp
mov
push
insl
dec
push
movsb
inc
pop
push
mov
cmp
test
push
lcall
out
xchg
cwtl
or
aas
fidivs
push
sahf
jbe
aaa
out
mov
stos
xor
test
aas
lds
xchg
jne
xlat
call
call
lock
or
cwtl
lahf
mov
in
and
sbb
jecxz
and
adc
jg
jne
pop
sub
enter
out
push
sub
and
call
cmpb
cwtl
adc
js
cmc
mov
mov
push
in
pop
bound
cmp
xchg
jp
sahf
aaa
mov
insb
in
xor
and
xor
movsl
mov
mov
inc
in
mov
test
jae
cmp
and
stos
sub
mov
ljmp
pop
icebp
fcomip
std
daa
push
inc
mov
mov
movsl
inc
xchg
loope
je
or
cltd
div
push
cmp
push
push
dec
sub
and
push
cld
subl
sahf
xchg
adc
int3
xchg
loop
push
sarb
popf
fidivl
jne
jmp
inc
xchg
push
dec
mov
std
cmc
shrl
xor
lods
out
push
bound
inc
or
cmpsb
rcl
push
andb
fidivrl
fsubrs
in
cmp
pop
mov
scas
cmpsb
dec
mov
std
in
and
and
pusha
dec
xchg
add
shlb
jecxz
sbb
inc
xor
push
idiv
pop
shl
add
mov
sti
popf
mov
pop
mov
jnp
adc
inc
stos
jo
pop
lea
into
mov
or
icebp
test
jno
jns
sub
xor
inc
pushl
test
pop
repnz
push
les
stc
cli
jb
mov
in
fwait
out
xor
push
mov
cld
movsb
sub
iret
add
xor
adc
mov
mov
lea
dec
jne
loop
dec
xchg
mov
mov
imul
out
test
shrl
outsb
xchg
mov
stos
arpl
hlt
xchg
gs
add
dec
pop
dec
xor
inc
repnz
jb
fcmovnbe
jle
pop
mov
mov
ret
mov
fsubrs
and
mov
mov
leave
pop
cmp
jge
dec
dec
or
push
sub
xlat
out
ret
sub
movsl
in
loope
in
push
dec
jb
mov
dec
icebp
mov
lds
outsl
out
test
pop
mov
mov
xlat
adc
int3
pop
lods
idivb
scas
les
xor
xor
mov
out
pop
and
sub
fwait
fwait
sbb
sbb
xchg
dec
out
mov
bound
mov
xor
mov
ss
push
pop
inc
out
mov
xor
test
icebp
push
pop
adc
out
jb
lods
pop
jo
popf
ret
mov
adcb
stos
inc
mov
mov
pop
loope
push
mov
sub
clc
scas
sbb
std
jnp
jne
fdivrs
mov
cmp
xor
insb
mov
mov
fwait
xor
sbb
hlt
xor
scas
repnz
push
cmp
push
popa
pushf
pop
bound
jbe
and
and
loopne
push
call
pusha
adc
js
push
daa
dec
mov
mov
divb
and
loopne
push
push
repnz
lret
sbb
jne
aas
cmp
pop
add
stos
or
mov
sub
jae
push
lea
test
loope
shrl
arpl
mov
and
mov
push
icebp
inc
sbb
mov
jecxz
inc
ds
push
dec
mov
adc
sbb
cmp
mov
out
nop
cmp
stos
outsb
pop
xchg
mov
mov
aam
repz
out
xor
pop
cmp
dec
mov
jl
cmp
adc
pusha
cmpsb
jmp
fnstcw
dec
bound
int
mov
mov
mov
std
les
sub
cmpsl
mov
test
xor
push
out
sbb
mov
jae
cmc
jl
or
sbbb
mov
jmp
stc
and
filds
fcmovne
movsl
pop
and
and
addb
push
xchg
add
mov
je
movsl
and
movsb
push
push
dec
dec
movsl
lods
ja
sarl
push
jno
xchg
inc
sub
cwtl
cmp
add
sub
push
xor
jb
outsb
lods
xchg
loop
push
imul
add
int
shlb
dec
hlt
orl
or
sahf
jbe
cmp
fldt
adc
jl
push
aaa
adc
andl
and
pop
cmp
mov
lcall
dec
pop
cmpsb
das
jbe
mov
sub
push
inc
pop
jnp
cli
outsl
out
mov
addr16
movsb
dec
aas
lock
inc
mov
aad
aaa
dec
xchg
xchg
repnz
leave
add
out
inc
and
push
int
test
jge
mov
inc
arpl
lods
xor
sub
and
pop
mov
xor
std
xchg
subl
call
leave
xor
adc
pop
xchg
jp
mov
jle
mov
cmp
mov
dec
lods
cmp
adc
xchg
and
loope
in
int3
fisubrl
int3
dec
out
aam
scas
mov
or
dec
clc
dec
mov
dec
cmp
mov
rol
mov
fdivp
insb
push
jno
inc
rclb
insl
in
pop
addr16
ljmp
stc
dec
sub
inc
fs
or
scas
cmp
or
dec
pusha
jle
sub
mov
outsl
ljmp
iret
ss
bound
cmp
test
stos
and
jg
andb
js
add
adc
mov
scas
repz
push
sub
sbb
addr16
into
pop
inc
xlat
add
jg
shrb
loop
ljmp
cwtl
inc
jo
dec
jns
cwtl
cli
dec
xor
iret
sarl
icebp
dec
es
arpl
lock
jecxz
mov
movsl
inc
jmp
push
outsb
jnp
sub
ret
mov
mov
shll
icebp
das
push
push
dec
or
pop
in
and
xor
adcb
push
insl
out
mov
jo
scas
stos
sub
in
mov
divb
int3
push
inc
add
in
pop
jg
mov
stos
adc
adc
sbb
push
je
int3
movsl
xchg
mov
sub
cmp
aas
sbb
and
mov
shrl
inc
jl
mov
mov
jmp
or
stos
insl
movsl
inc
mov
lret
jmp
lret
xchg
lret
in
add
xor
mov
inc
mul
mov
and
nop
inc
ficoms
push
dec
cmp
sbb
and
jns
cmc
adc
push
out
cmpsl
push
xchg
out
mov
std
rcrb
addr16
cmp
adc
cmp
icebp
ss
xchg
fiadds
mov
fldt
pop
fisubl
xchg
mov
scas
mov
dec
out
test
sti
dec
push
int3
mov
cmpsl
push
ss
xor
sbb
mov
jmp
sub
jecxz
mov
lahf
jg
and
xor
in
les
jp
gs
and
and
stc
pop
xchg
call
mov
sub
addl
lds
fnsave
test
dec
ret
outsl
rcrl
cmc
adcl
mov
cs
repnz
mov
cmpxchg
or
xorb
push
stos
sub
jns
cmpb
add
add
and
sub
je
ljmp
cmp
sbb
clc
push
mov
fs
xchg
adc
jb
jmp
out
loope
inc
mov
pop
fstpl
repz
call
mov
and
pop
movsl
or
or
inc
inc
fstp
or
and
scas
popf
xor
cmpsb
jo
or
std
ret
mov
sbb
popf
jge
aaa
popf
pop
aaa
fwait
add
fnsave
inc
add
inc
push
adc
mov
inc
cs
push
lcall
mov
cli
sahf
cmp
mov
popw
pop
aaa
push
push
push
and
js
mov
or
add
push
stos
das
xchg
mov
or
inc
adc
push
jg
xor
aaa
push
cmpsl
or
or
jg
push
ret
and
jne
in
or
xor
jl
repz
test
or
push
jno
cwtl
lods
pushl
leave
cs
xchg
xorl
popf
push
cmp
mov
push
in
jno
jo
inc
push
and
ret
in
enter
xor
jne
aam
or
inc
sbb
pop
xor
push
in
and
scas
xor
es
ja
push
andb
mov
jge
push
mov
inc
dec
mov
jl
int
aaa
hlt
and
aaa
mov
mov
loopne
or
dec
jge
inc
jg
lock
jb
pop
ror
jp
mov
outsb
inc
pushf
sub
je
subb
pop
pop
mov
jno
jnp
add
int3
popa
inc
clc
dec
rclb
hlt
into
loope
out
imul
int
ss
jb
pop
pop
fildll
int
sub
mov
push
sbb
les
jle
cmp
ffree
popf
jp
inc
jo
call
pop
and
push
mov
in
jbe
mov
hlt
inc
pop
xlat
adc
xchg
and
sbb
inc
dec
fldl
or
pushf
xchg
mov
into
dec
faddl
adc
pop
mov
into
jb
xor
push
sbb
jo
sub
lods
add
add
std
sbb
inc
mov
mov
sub
jmp
aas
cld
aam
mov
lret
adc
lea
jl
ret
andl
add
sbb
ds
gs
sbb
jl
sub
gs
lods
adc
pop
xor
loop
mov
or
mov
fsubrp
lods
aaa
adc
stos
lret
test
cmpb
arpl
cmc
lds
idivl
inc
lahf
int
and
or
inc
mov
out
lea
out
dec
fsubl
mov
addb
andl
cmp
xor
cwtl
jge
js
xchg
in
sbb
sti
mov
pop
jle
insb
sub
mov
xchg
sbb
scas
and
lds
dec
shll
jbe
je
xor
pop
fdivrl
add
fmull
xchg
mov
cmp
sbb
jbe
ljmp
add
or
pop
mov
arpl
imul
lods
cmp
push
or
ret
lds
pusha
adc
cmp
mov
jbe
bound
ss
stos
mov
or
je
adc
ljmp
pusha
pop
push
mov
pop
insb
dec
cmp
sbb
or
mov
lods
dec
pop
cld
ret
or
inc
or
loopne
bound
cmpsl
stos
push
xchg
into
aam
mov
cmp
mov
cmc
sbb
inc
sub
jae
cmp
pop
cmp
pushf
push
repnz
shl
or
mov
subb
ret
std
sub
loope
adc
fisubl
push
sbbb
jb
mov
sahf
mov
mov
inc
fmuls
stos
stc
je
add
ficoms
mov
sub
shrb
push
and
outsb
pop
out
cmc
sub
jnp
jg
mov
out
cmp
hlt
mov
xor
lret
mov
ret
inc
jo
xlat
rolb
sub
les
xchg
mov
jp
mov
pop
pop
adc
inc
ret
cltd
insl
cs
aas
into
nop
xor
insl
insb
es
fcoml
sub
jnp
mov
sub
pop
and
data16
jl
cmpsb
movl
mov
and
dec
es
fimuls
lret
stos
data16
cmp
and
aaa
pushf
xor
push
arpl
pop
stc
pushw
mov
jb
xor
pop
mov
inc
jmp
pop
xor
inc
stos
pop
imul
jp
jp
jno
adc
cmpsl
ficoms
dec
lret
mov
mov
shll
into
jle
mov
outsb
mov
mov
mov
cmp
jnp
sbb
das
push
xor
js
std
mov
lret
pop
push
xor
push
and
or
es
repz
movsb
fidivrs
jg
cmp
adc
addr16
or
xchg
cmpsl
pop
and
cli
xchg
mov
mov
inc
sbb
cmp
push
add
xor
leave
std
cmp
and
cmpsb
jp
push
gs
lea
add
cltd
mov
xorb
mov
and
mov
clc
add
xor
jl
and
jg
mov
mov
dec
inc
imul
mov
xchg
je
imul
inc
mov
mov
cmp
xor
cltd
push
cwtl
mov
leave
inc
add
and
and
les
push
pop
pop
push
sub
fdivr
jnp
xchg
or
lods
or
hlt
xchg
xor
and
sub
insl
imul
ret
lods
mov
inc
mov
add
mov
and
imul
out
pop
nop
rorl
jae
dec
mov
cmc
mov
test
push
cwtl
add
and
insl
es
push
pop
rclb
les
adc
dec
test
sub
jo
out
mov
or
xchg
aam
cmpsb
or
ss
cmpsl
mov
jnp
cli
or
fwait
inc
jb
xor
sar
xor
pop
sbb
jno
xlat
xchg
push
xor
ljmp
hlt
push
idiv
mov
sahf
sarb
xchg
outsb
loop
inc
or
in
adc
insb
enter
insl
xchg
mov
sub
mov
in
sti
dec
push
test
lcall
pop
cmp
cmpsl
mov
mov
call
jae
dec
int
inc
ljmp
aas
mov
push
xor
mov
fucomip
xchg
sbb
cmp
insb
stos
sbb
or
test
rorl
xchg
lock
cwtl
imul
or
aam
xor
hlt
sti
cli
xor
fcmovb
stos
sbb
cmpsl
pop
sbb
dec
cmp
ja
push
sub
adc
aad
xor
scas
sti
les
ret
rcrl
aas
mov
add
xlat
jb
xchg
cld
mov
add
jb
lcall
inc
daa
loop
loop
inc
scas
lcall
filds
jl
aas
xchg
push
sbb
imul
xchg
fnsave
inc
mov
push
pop
dec
inc
shrl
or
repz
pop
clc
arpl
cmp
in
mov
adc
pop
mov
addl
lods
jge
and
add
push
aam
jl
pushf
sbb
out
or
addr16
das
jge
fistps
mov
sbb
lds
lds
lods
cmp
mov
fadd
jbe
mov
push
lret
outsl
sahf
int3
and
inc
xadd
sub
in
fildll
push
xchg
shlb
repnz
pop
popa
xlat
mov
stos
pushf
mov
addr16
sub
ljmp
jns
mov
adc
shrl
pop
insb
lds
fisubrs
and
pop
sti
sbb
mov
mov
test
mov
inc
inc
aaa
fwait
test
fstpl
lret
pop
inc
pop
faddl
mov
outsb
xchg
ds
gs
add
ss
or
sbb
xchg
test
stos
push
jb
adc
cmp
int
enter
push
sbb
and
xchg
negb
scas
pop
sbb
adc
add
out
call
and
mov
push
stos
mov
jp
fistps
xchg
xchg
adc
orl
and
out
xor
hlt
mov
mov
push
sub
xchg
lds
xchg
shrl
sbb
xor
dec
sbb
push
int3
fimuls
aaa
pop
js
add
js
sbb
je
mov
xchg
outsl
cmp
rcr
push
fcomi
ljmp
loopne
jne
out
sub
mov
dec
mov
fldcw
enter
and
inc
adc
ficoms
jmp
push
sub
xor
out
xchg
and
lods
and
stc
xor
or
int
out
and
adc
mov
in
xchg
jecxz
cmc
int
push
imul
fstpt
dec
outsb
xor
aam
out
jle
andb
xchg
jg
in
mov
jbe
jp
icebp
addb
jl
adc
jg
data16
call
or
loopne
ja
sub
mov
xchg
andb
push
dec
inc
shll
leave
pop
jo
gs
lods
mov
or
fiaddl
das
or
mov
imul
popa
ficoms
hlt
in
push
cmp
jne
jae
ret
and
jo
in
sub
cmp
mov
jp
in
and
fdivl
cmpb
mov
fnstenv
imul
arpl
testl
scas
cwtl
jb
and
scas
push
gs
jns
inc
or
sub
lods
push
xchg
lock
ss
pop
jno
jg
inc
sbb
push
jnp
test
aas
add
insl
stos
test
inc
mov
sbb
mov
add
inc
xchg
fs
and
and
bound
in
not
movsl
rcll
movsl
cmp
les
out
cmc
ljmp
invlpg
aaa
jl
and
imul
stos
adc
pusha
cwtl
pop
xlat
ja
and
xchg
loope
movsl
jne
sti
xchg
sbb
sbb
pop
stos
shrb
popaw
insl
pop
fsubp
addb
jp
or
scas
negb
jae
and
adc
jp
fisubl
xchg
jbe
push
out
ja
rclb
leave
sbb
scas
cmpsl
js
or
push
mov
invd
add
mov
jle
mov
xchg
pop
scas
lret
dec
mov
xor
rorb
pusha
out
lock
out
ret
ds
movb
mov
inc
lea
in
ds
xchg
inc
mov
inc
sbbb
inc
in
mov
mov
mov
xor
movl
or
adc
out
test
and
mov
jp
data16
push
pop
mov
into
sub
mov
mov
dec
cmp
es
adc
fmul
cmp
popa
pushf
jmp
and
fsubrl
mov
lcall
mov
mov
lret
add
stc
push
sub
jb
mov
out
xor
jle
std
mov
mov
movsl
cmp
xorb
arpl
scas
ss
push
sbb
int3
lcall
testb
sti
jmp
mov
sbb
arpl
sti
xchg
push
movsb
fistl
aam
push
rcll
aaa
dec
xlat
loope
jge
push
jne
data16
fists
xor
test
aad
push
pop
out
jb
sub
test
aaa
sub
lods
jae
cmc
lods
pop
xor
stos
je
sbb
enter
inc
lret
push
and
sub
sub
ret
jmp
fldt
shlb
mov
mov
mov
jle
push
cs
jae
mov
adc
mov
pushw
push
mull
popa
test
lea
bound
lods
adc
inc
cli
xchg
sahf
les
xor
pop
sbbb
sbb
fidivl
pop
outsb
mov
mov
xlat
adc
and
sub
loop
iret
stc
inc
aam
aas
mov
mov
imull
push
pop
out
fiadds
lds
or
mov
stc
test
or
lahf
cs
xchg
mov
sahf
insl
xor
xchg
xlat
xchg
jp
pop
pusha
stos
dec
sbb
pop
outsl
mulb
or
sub
es
or
dec
inc
das
mov
lods
pop
call
nop
fistpl
cmp
dec
lock
out
or
adc
jle
outsl
mov
gs
add
add
ja
push
loope
lahf
jge,pt
lea
hlt
dec
mov
scas
andb
aas
fsubs
sub
int3
add
rolb
shlb
subb
jno
mov
adc
int
call
popa
and
mov
cmc
cmp
out
dec
add
mov
mov
andb
adcb
adc
mov
out
cmc
dec
mov
inc
sahf
movzbl
repz
xchg
push
adc
stc
nop
xor
in
add
inc
int
incl
shlb
sbb
pop
cltd
xor
xor
jns
test
pop
pop
leave
cmpsl
cmp
nop
gs
adc
cmpsl
insb
int
scas
out
dec
push
sbb
inc
cmp
stc
scas
dec
movl
push
cmp
xlat
add
ret
rorl
push
movsl
or
or
ret
addl
imul
mov
cmpsl
add
cmp
and
mov
mov
pop
mov
stos
inc
sarb
mov
bound
jno
push
fmul
xor
add
inc
sarl
aaa
fisttpl
mov
jmp
mov
imul
stc
pop
add
out
and
sbbb
xchg
inc
xor
push
jle
adc
sarl
js
xchg
mov
imul
inc
push
fidivl
jg
xor
mov
cmp
add
pop
outsb
add
into
jbe
aam
push
sbb
pop
dec
push
cmp
incl
fdecstp
adc
xchg
push
inc
push
jp
lods
push
leave
sahf
out
mov
xchg
test
fimull
lcall
lods
ss
mov
ret
jg
dec
cwtl
divl
mov
or
pushf
inc
sahf
add
cmp
lea
loop
imul
mov
inc
dec
lcall
sub
mov
mov
pop
aaa
lods
pop
cmc
lcall
js
mov
jg
cmp
inc
leave
lret
add
scas
test
jp
sbb
push
dec
adc
out
mov
mov
and
jmp
xchg
sbb
lahf
in
insb
icebp
sarl
mov
xor
push
hlt
mov
lcall
add
sarb
std
mov
cld
adc
cmp
pop
adc
adc
xor
xlat
jmp
ljmp
sbb
lahf
mov
les
jnp
mov
cs
adc
dec
lds
pop
mov
cmp
push
lcall
xorl
adc
xlat
cli
jp
sbb
and
lahf
push
data16
push
je
ss
imul
push
fimuls
mov
cmp
out
pop
dec
hlt
xlat
jno
jge
pop
lcall
out
shlb
xchg
pop
cmp
andb
xor
ljmp
jno
xor
add
cltd
cmp
call
mov
pop
je
jb
pusha
cld
add
jae
add
fstpl
sub
inc
fldenv
mov
or
pop
xchg
push
clc
js
sub
and
cwtl
or
mov
mov
movl
leave
stos
cmp
pop
mov
pop
ds
xlat
add
or
cmpsl
push
call
sub
pop
or
stc
mov
sar
mov
outsl
and
lahf
outsb
adc
arpl
movsl
and
jg
notl
mov
insl
adc
out
test
in
pop
adc
ret
call
rcrl
out
pop
pop
insl
or
ljmp
cmpsl
xor
insl
xor
imul
sti
cmc
xchg
and
mov
pop
or
sub
lock
or
cmp
dec
in
cmpsl
sub
jno
jle
pusha
mov
xor
sti
jge
jbe
xorb
sbb
aaa
ja
arpl
fucomp
or
push
xchg
lret
insl
hlt
or
cmp
sub
jnp
out
and
stos
rorb
lods
in
insl
inc
in
int3
call
or
jnp
orl
cld
mov
inc
insb
cmpsb
js
arpl
call
xchg
jbe
cmp
daa
dec
xlat
fnstcw
push
jbe
or
gs
icebp
mov
ret
test
test
inc
in
xor
inc
lods
imul
mov
add
subl
sbb
inc
addr16
pop
fwait
add
add
leave
inc
cmpb
in
dec
mov
mov
pop
aaa
loop,pn
pop
cmpsb
mov
mov
or
sahf
xchg
or
aam
lods
add
imul
mov
xchg
mov
pop
push
rolb
and
or
repnz
mov
pop
jns
jp
not
and
lods
repz
dec
or
adc
pushf
mov
lret
or
pop
lds
mov
ficomps
or
push
stos
out
test
daa
fisubrl
hlt
pop
jg
push
or
mov
into
push
lcall
jecxz
pop
loop
jge
int
rcll
dec
mov
lods
loop
mov
into
daa
mov
push
mov
in
icebp
xchg
mov
and
fidivrs
movsb
es
enter
and
clc
loopne
stos
sub
mov
lret
mov
outsl
or
pop
mov
mov
imul
out
int3
ss
sub
roll
push
xchg
dec
dec
jecxz
lahf
scas
jno
jbe
hlt
and
push
inc
aaa
jne
cmpsl
xchg
sub
jge
push
stos
xchg
sub
fdivl
push
xor
mov
pusha
cmp
int3
xchg
and
movsl
mov
out
icebp
pop
adcb
fldt
stos
sub
ljmp
xchg
or
repz
or
in
jbe
sti
xor
pop
pop
dec
mov
out
pop
or
pusha
cltd
dec
sbb
std
pushf
mov
ds
sbb
shl
push
out
fcomi
popa
push
ss
mov
les
mov
fmull
and
leave
mov
or
cs
sti
ljmp
loope
out
je
mov
aas
jecxz
pop
inc
shlb
fs
in
jmp
fisttps
stos
pop
aam
inc
testb
cmp
mov
mov
js
idivb
shl
push
push
nop
sub
push
mov
and
cmp
adc
std
cltd
jb
mov
or
fwait
pop
and
push
ficoms
imul
test
ficoml
scas
je
mov
adc
inc
lods
mov
adc
jae
and
jnp
mov
fcmovu
cwtl
cmp
imul
enter
mov
out
ljmp
mov
scas
in
lock
pop
push
std
jbe
or
mov
adc
mov
mov
mov
ret
inc
cmpsb
and
stos
fsts
jl
mov
mov
mov
call
sbb
xorl
inc
jecxz
cmp
sarb
cli
mov
inc
cli
arpl
cmp
mov
les
xchg
and
das
xchg
pop
mov
pop
sbb
cld
inc
sar
insl
fists
sub
adc
test
leave
mov
leave
les
sbb
sub
dec
fcmovbe
lret
stc
cli
push
enter
push
leave
int
pop
int3
sbb
jge
jg
xorb
or
movb
cmpb
jb
leave
jne
mov
push
jg
ret
idivb
and
pop
cmp
sahf
into
fcomps
lcall
dec
popa
xor
cltd
push
and
adc
lods
stc
cmpsl
sbb
repz
push
cli
mov
lea
icebp
clc
add
sbb
cmpsb
jg
or
aam
add
adc
jb
divb
cltd
shl
lds
sub
scas
xor
pop
inc
out
clc
mov
dec
lahf
scas
jno
cltd
push
mov
cld
pop
xor
xchg
mov
ficoms
or
pop
popf
push
or
and
push
gs
mov
push
cmc
pushf
pop
popa
adc
inc
test
sub
inc
fadds
addr16
pop
cld
fcom
clc
test
in
in
xchg
rcrl
sbb
and
aas
ljmp
aaa
pop
push
out
out
clc
inc
mov
inc
mov
mov
stos
out
dec
dec
dec
xchg
enter
lods
xchg
jno
insb
pop
xchg
cmpsb
ss
out
ja
mov
shrb
adc
mov
ret
add
adc
loope
sub
inc
xor
lock
jecxz
and
scas
nop
xlat
xor
and
std
jl
call
cmpsb
dec
loope
pop
imul
jmp
sbb
jo
gs
pop
enter
into
imulb
inc
ret
out
aad
xchg
pop
pop
sbb
movsl
mov
mov
in
jo
push
mov
sbbl
incl
cmpsl
mov
mov
adc
lds
ljmp
add
pop
add
aas
jo
mov
adc
dec
mov
jnp
push
cmc
cmp
sub
cmpsb
sub
inc
shl
outsb
mov
mov
jle
or
dec
sbb
cld
test
scas
das
aad
dec
rcrb
or
lods
icebp
inc
mov
call
jmp
shl
xor
adc
cmp
xor
pop
xor
pop
mov
sub
and
jo
std
cmp
mov
cld
push
loope
xor
mov
adc
xor
add
std
add
loopne
shrb
and
or
dec
outsb
iret
mov
loopne
nop
and
mov
or
push
out
fsts
push
dec
movsl
mov
imul
xor
scas
xor
mov
or
cmpsb
sub
xor
xor
sbb
cmpsl
repnz
shrb
jns
gs
addr16
sub
mov
or
clc
inc
aaa
out
push
mov
pop
push
andl
adc
cmp
inc
mov
mov
pop
xor
addb
gs
mov
mov
out
cmp
adc
push
popa
insl
inc
sub
pop
sub
cmp
adcl
or
or
pop
pop
movsb
mov
call
icebp
or
pop
aam
cltd
ret
push
jns
addr16
pop
cmp
lahf
out
paddd
rorl
or
jmp
cmp
ja
in
cmp
mov
dec
mov
ss
outsb
icebp
arpl
xchg
faddl
icebp
aad
sahf
imul
das
mov
icebp
iret
xor
or
loopne
rcl
mov
and
repz
popf
in
mov
mov
or
cli
insb
addr16
sahf
or
add
push
xchg
jb
sbb
or
js
in
hlt
les
xchg
fdivrl
xor
cmp
out
mov
pop
inc
rolw
lcall
test
sub
negb
lcall
dec
sbb
or
dec
das
pop
cmp
test
inc
or
fs
js
xchg
mov
pop
aam
addr16
push
jl
sbb
fsqrt
dec
sbb
outsl
popa
int
sub
out
sbb
push
pushf
cmp
ja
inc
ret
mull
nop
mov
pop
test
and
sub
notb
rolb
adc
bound
repnz
xchg
in
sub
pushf
fdivr
fidivl
lahf
stos
cld
cltd
pop
xchg
mov
sub
cmpsb
imul
shlb
popa
test
pop
dec
cmpsl
jo
cmp
scas
out
dec
sub
mov
sahf
sbb
push
fs
lods
cltd
imul
add
mov
es
dec
mov
es
jo
pop
or
mov
in
xchg
cs
iret
and
cmpsb
fisubs
cs
or
sarb
add
mov
or
pop
pop
rorl
ljmp
inc
mov
dec
push
mov
leave
adc
jns
popf
sbb
bound
fbstp
mov
lods
icebp
add
dec
push
mov
mov
xor
fucom
mov
mov
pop
mov
lret
xor
in
out
lods
xlat
sub
in
push
and
jo
stc
push
sbb
jae
mov
cmp
mov
sub
imul
nop
or
sbb
iret
mov
int
cmp
xchg
pop
pop
xchg
cwtl
and
push
imul
imul
or
dec
jns
stc
mov
push
and
lds
daa
lock
pop
inc
mov
and
dec
sbb
scas
cmp
push
leave
in
sub
scas
enter
or
lods
xor
or
inc
decl
rorl
jge
ret
imul
sub
sbb
sbb
andb
jns
mov
jmp
lea
mov
jb
das
push
bound
cmc
scas
shlb
pop
insb
orb
lret
cmc
dec
and
xchg
mov
xchg
inc
mulb
push
inc
mov
pushl
test
subl
add
dec
pop
mov
daa
and
mov
or
aam
add
mov
pop
add
pop
cmp
xlat
push
pop
int
jbe
mov
mov
dec
js
mov
out
xchg
push
and
and
cmp
ljmp
insb
push
icebp
xor
fdivrl
scas
adc
sti
jmp
insb
pop
fcmovu
sub
inc
sbb
inc
mov
xchg
inc
push
dec
sbb
xor
pop
ds
shll
xchg
iret
lea
pop
fstpl
bound
repnz
jmp
out
push
mov
ret
sbb
popf
mov
lock
icebp
push
mov
jp
out
test
cmp
xchg
out
cmp
testl
movsb
mov
sbb
push
data16
inc
sub
mov
jecxz
clc
adc
add
cmp
mov
cmp
in
add
pcmpgtd
sbb
mov
cmp
jge
mov
xor
test
fucomip
fdivrs
and
mov
lret
lahf
mov
testb
xor
ffreep
push
ret
imul
daa
ret
push
jbe
push
sti
sbb
je
in
negb
mov
sub
iret
bound
push
sbb
imul
inc
xchg
sbb
jbe
scas
data16
adc
mov
cmpsb
dec
xor
scas
mov
sbb
iret
shlb
push
xor
andl
orb
mov
mov
push
clc
push
sahf
arpl
jbe
cmp
shlb
jmp
xchg
xor
inc
clc
out
imul
pop
cli
pushl
shll
push
jmp
fimuls
pop
int3
xchg
xchg
jo
out
sbb
insl
in
jo
push
outsl
loopne
out
nop
mov
repz
out
mov
xor
and
push
add
iret
rcr
addb
movsl
push
jge
jns
fisubs
jle
neg
pop
test
cmp
dec
xor
pop
pop
jp
daa
mov
lcall
test
pop
mov
sbb
fidivl
pop
je
in
inc
sarl
adc
repz
xchg
and
adc
pop
test
ss
sub
jns
loopne
pushf
lock
lret
sbbl
hlt
int3
xor
call
lcall
adc
mov
mov
movsl
inc
imul
andb
jno
into
add
out
cmpsl
sub
mov
scas
jecxz
in
imul
sub
fidivl
aas
sub
dec
outsl
inc
or
dec
movl
inc
mov
gs
jg
movsl
lret
aad
mov
xor
repnz
pop
popa
insl
fcmovbe
pop
sbb
cmp
sub
xlat
stos
dec
adc
jbe
int
push
xor
push
ja
sbb
mov
or
stos
mov
rcll
dec
testb
mov
cld
push
push
movl
and
xchg
pop
ret
and
pop
push
inc
adc
hlt
cmpsb
hlt
fwait
push
add
jmp
call
adc
sub
iret
out
loopne
js
out
out
mov
jl
into
js
loop
bound
mov
mov
ret
enter
push
mov
daa
test
in
repnz
sbb
add
pop
imul
mov
enter
aaa
adc
dec
pop
shrl
jl
mov
push
fwait
or
push
adc
xor
and
mov
fucomip
mov
frstor
popf
adc
sub
enter
or
xchg
inc
stos
push
shll
and
pop
push
push
and
sahf
and
push
loopne
aam
mov
dec
outsl
shlb
mov
adc
sub
mov
sub
ds
dec
mov
mov
sbb
sbbb
outsl
cmc
sbb
sub
pop
pusha
into
push
xchg
lcall
fdivrp
or
mov
xor
jmp
fwait
sbb
add
add
fstpl
les
adcw
mov
sti
mov
and
in
xchg
mov
lcall
and
andl
jle
les
outsb
mov
inc
mov
shrb
iret
add
gs
lods
xchg
test
shll
sub
mov
sbb
adc
push
cs
mov
cmpsl
dec
pop
jns
loopne
out
loope
mov
jmp
adc
leave
mov
jo
rcrl
push
popf
outsl
pushf
in
imull
mov
lds
lock
ret
xor
add
gs
cmp
inc
orl
push
in
and
push
xchg
mov
loopne
mov
jmp
adc
dec
push
cmp
pop
mov
sbbl
mov
lds
or
ja
into
xchg
cld
lods
ds
and
xor
pop
cld
jge
iret
popa
push
xchg
adc
fdiv
push
rclb
scas
adc
mov
pop
or
aam
inc
mov
out
sbb
es
imul
push
pushf
dec
cmp
and
inc
adc
dec
sahf
xchg
in
out
call
test
push
punpckhwd
add
push
pop
inc
push
push
or
mov
xor
dec
pop
push
adc
les
mov
mov
sub
push
sbb
jp
pop
xor
pop
sub
mov
jno
cmpl
push
cwtl
push
jns
aas
xchg
out
leave
mov
lods
xor
fstp
jp
mov
lret
jnp
rorl
mov
inc
or
out
jl
inc
pop
je
jecxz
inc
lea
idivl
mov
into
imul
xchg
adc
mov
test
jge
sbb
dec
out
mov
or
adc
push
mov
push
push
lds
sahf
mov
fisubrs
stos
jbe
std
mov
test
push
les
sbbb
dec
fimull
inc
xchg
das
add
fimull
andb
push
add
push
insb
loopne
mov
dec
push
add
shlb
mov
sub
pushf
mov
jnp
cmp
inc
jg
and
mov
imul
push
cs
jnp
int3
out
inc
aas
aam
and
adcl
sub
push
stos
loop
das
call
pop
mov
in
dec
data16
or
lock
cmp
push
push
stos
jnp
or
je
lea
jns
js
out
or
mov
leave
mov
add
push
outsb
mov
inc
lds
subl
mov
xchg
mov
cltd
or
or
clc
rcrb
mov
lret
cltd
sti
loope
push
aaa
dec
popf
push
jno
xor
insb
jmp
and
inc
push
sub
das
arpl
adc
and
jge
push
mov
repnz
lods
aad
test
fwait
dec
cs
popa
mov
or
mov
decl
dec
pop
dec
xchg
or
ljmp
sbb
mov
pop
lea
mov
or
jno
aam
andl
dec
out
sub
test
in
sahf
mov
mov
test
imul
xchg
es
lds
loop
scas
shl
push
push
push
sub
cmp
jecxz
jp
addl
sbb
gs
fwait
pop
or
jnp
icebp
cmpsb
xchg
pop
ljmp
inc
cs
sbb
mov
jb
mov
cmp
mov
std
or
pop
lret
dec
adc
xor
jnp
xchg
mov
sbb
outsb
pop
in
mov
jb
icebp
mov
lret
ja
xchg
jecxz
inc
xorl
adcl
mov
adc
stc
outsb
loopne
fistps
jp
cmp
jp
jnp
fidivrs
push
scas
mov
insb
jecxz
mov
pusha
inc
movsl
jmp
cmp
push
cld
mov
lods
inc
mov
sbb
das
in
insl
jg
test
push
mov
std
gs
mov
pop
and
jae
jle
movb
jmp
dec
in
mov
in
sbbl
dec
dec
mov
leave
rorb
jb
jno
aas
aas
pop
mov
aad
in
test
adc
jnp
lret
xor
jecxz
rcr
inc
into
in
add
xlat
scas
cs
cwtl
stc
dec
lret
bound
push
sbb
lods
cli
jmp
call
lock
orb
xor
lods
mov
out
ljmp
dec
fldenv
inc
jns
push
faddl
mov
aaa
fistl
jecxz
stos
push
sub
mov
aaa
shll
cmp
and
add
fldl2e
sub
sbb
add
ret
mov
push
jb
mov
jno
xchg
cwtl
mov
enter
add
ret
dec
in
dec
sub
jnp
push
call
xchg
jo
loope
inc
or
mov
test
mov
pop
inc
cld
mov
call
jnp
std
data16
and
push
pop
mov
or
fs
div
and
aas
pop
or
push
ficoml
inc
dec
sub
jno
push
int3
jp
rcl
lret
push
lcall
out
inc
cwtl
mov
shlb
dec
arpl
mov
pop
sbb
stc
in
std
mov
mov
cmp
mov
add
mov
fstl
cmpsl
popa
inc
aad
add
call
outsl
lahf
mov
add
sahf
and
imul
xor
call
fsubs
in
cmpb
jmp
xchg
sbb
outsl
dec
mov
dec
in
xor
pop
sub
or
lret
mov
mov
stc
imul
popf
hlt
push
movsb
cmpb
mov
les
test
stos
and
xor
ficoms
jge
js
cmp
cmc
mov
mov
fcmovb
and
dec
cmpsl
mov
jg
push
sub
lods
xor
popf
add
leave
fildl
sub
in
mov
or
clc
xchg
push
mov
cld
scas
cmp
lods
nop
popa
xchg
filds
loope
xor
mov
fdivrl
dec
in
cmp
dec
cmp
flds
cwtl
in
and
push
stc
hlt
popf
xchg
insb
int3
or
jns
xchg
mov
inc
fildll
fwait
sti
fldenv
fsub
dec
adc
inc
call
xchg
dec
int3
stos
popf
dec
sti
mov
jmp
movsl
mov
stos
call
ja
filds
test
push
scas
cmp
push
xor
fldt
cld
aam
push
mov
outsb
or
mov
inc
pop
mov
sub
mov
inc
or
xlat
cmp
ret
mov
test
enter
loop
jb
xchg
jmp
pop
cmp
sahf
jmp
enter
fcoms
mov
cli
lock
push
fbstp
and
jno
xor
or
outsl
xchg
mov
and
cmp
mov
repz
dec
and
add
pop
or
sbb
in
xchg
aad
pop
loop
cli
into
test
in
inc
pop
xchg
in
movsb
pop
mov
mov
cmp
in
mov
not
mov
jle
jae
pop
lahf
pop
sbb
jge
fsubs
into
push
icebp
out
pop
aaa
jns
test
lcall
insb
popa
mov
in
ja
xor
xor
jb
jmp
xor
push
mov
jb
inc
leave
cmpsl
enter
lcall
das
mov
in
out
dec
xchg
mov
cmp
fldt
dec
js
stos
push
push
xchg
rorl
push
mov
arpl
rcl
es
cmp
out
mov
fbstp
fidivl
or
mov
pop
cltd
adc
mov
pop
imul
cld
fmull
sub
pop
lods
rcrb
arpl
dec
mov
pusha
movsb
movb
test
mov
es
mov
into
mov
ss
sub
xchg
pushl
pop
sbb
mov
in
js
ljmp
roll
mov
nop
xchg
jno
push
adc
cli
jnp
test
out
and
adc
fistl
mov
daa
imul
add
data16
jno
dec
cmp
push
push
pop
xchg
test
sahf
cmp
pop
lods
sbb
mov
push
mov
mov
imul
out
dec
xchg
dec
sbb
into
jle
inc
out
cmp
xor
adc
dec
stc
pop
out
mov
jb
cmpsl
mov
sbb
fildll
imul
insb
scas
adc
mull
sarl
rcl
in
shrb
repnz
jl
setb
cmc
mov
ds
pop
sbb
pop
or
sbb
mov
inc
and
ret
andl
aas
loop
jl
adcb
sub
fistl
cld
idivl
ret
cmp
jb
cmpb
xchg
cmpsl
adc
mov
sub
lds
push
in
adc
sahf
pop
les
add
jp
inc
daa
fs
int3
shrl
sbb
out
dec
dec
inc
add
cmp
int
lahf
imul
sahf
sti
mov
mov
xchg
stos
lock
shrl
andl
lods
mov
pop
pop
dec
repnz
daa
mov
mov
imul
sbb
mov
sub
shlb
fcmovnb
jnp
pop
mov
mov
push
xor
fcmovne
push
flds
andb
dec
adc
dec
or
push
and
jno
mov
cmp
push
fwait
adc
sub
les
cmpsl
push
dec
push
dec
fwait
inc
cli
les
test
out
lcall
ret
pop
cmp
adc
ja
dec
jmp
sub
sbb
or
mov
out
xchg
sub
push
pop
or
cltd
jl
xchg
push
sbb
mov
out
divl
bound
scas
imul
pop
cli
xor
movsb
or
dec
add
lds
sub
test
cmpb
lea
sub
stc
mov
mov
mov
jae
inc
mov
pusha
mov
outsl
bound
mov
dec
pop
fdivrl
mov
repz
jbe
dec
fwait
outsl
lret
mov
in
fwait
std
js
mov
mov
push
fdivr
xor
dec
sbb
sub
sbb
push
loopne
rcrb
stos
mov
pushf
leave
rcr
das
xchg
pop
and
cs
and
imul
aam
cmp
mov
inc
mov
lock
and
mov
shrl
jns
mov
call
mov
fiadds
fdivr
or
pop
xlat
mov
and
jns
inc
ret
pop
jne
jno
testl
iret
sti
adc
push
enter
shrl
mov
push
fdiv
mulb
int3
xor
inc
fcom
xlat
insl
xchg
jnp
pop
jo
outsl
ret
scas
fadds
pop
in
fbstp
clc
orl
or
dec
in
cld
bound
add
jge
bound
lea
out
cwtl
adc
push
dec
dec
lcall
jo
jl
movsl
adc
sbb
and
inc
push
jae
test
push
or
add
mov
push
or
test
and
pop
or
cmpsl
dec
cmp
insb
mov
outsb
pop
scas
jg
sbb
sub
arpl
popf
sub
inc
ja
mov
scas
mov
outsl
hlt
sbb
xor
pop
mov
mov
add
movsb
dec
xchg
shrd
or
lock
sub
cltd
testb
test
lock
sub
adc
sbbb
aas
pop
push
call
out
arpl
jge
ss
xor
aam
xchg
mov
or
lahf
inc
xchg
je
jp
or
cli
dec
mov
push
loop
daa
xor
mov
push
ret
inc
pop
mov
or
pop
cmp
sbb
sbb
lret
sbb
mov
fwait
dec
daa
adcb
loope
test
and
lcall
fstps
insl
fiadds
sub
sarb
sub
sub
cmp
jno
pop
add
mov
pop
std
rcll
dec
les
mov
xor
test
fld
cli
pop
shrl
fs
mov
xor
in
arpl
xchg
loope
loopne
sub
or
mov
hlt
lret
jmp
mov
inc
or
pop
add
add
sbb
sub
mov
test
push
mov
jg
inc
dec
jle
ret
pop
xchg
mov
mov
cmp
mov
pop
sub
and
rcl
ret
ret
mov
stc
popf
mov
ljmp
jae
push
fisttps
and
add
jecxz
shrl
imul
jns
mov
or
push
das
xor
rorb
sbb
insl
xlat
sub
out
mov
and
cmpsl
xor
mov
roll
mov
out
fdivrp
test
ficompl
fmuls
adc
mov
lcall
dec
dec
add
std
gs
ret
adc
cwtl
jne
fidivl
fdivs
int
fistpl
pop
dec
inc
idivb
stos
mov
mov
pop
lock
mov
scas
xchg
jg
lods
call
outsb
js
mov
push
xor
jo
test
cwtl
mov
cmpsl
aaa
lods
hlt
popa
add
fistl
xor
pushw
add
mov
sub
or
mov
mov
ret
mov
jg
pop
repnz
aaa
push
inc
sti
cwtl
jno
sbb
xor
scas
dec
mov
xchg
dec
cli
sarb
jl
mov
lds
mov
push
lods
mov
aas
pusha
cld
lods
ljmp
mov
out
gs
sbb
inc
adc
mov
pop
out
jl
popf
fcomp
xchg
pusha
mov
jg
xor
out
jno
adc
dec
inc
dec
mov
cmp
xchg
sarb
add
aaa
adc
and
add
sub
dec
pop
jle
lret
push
das
cmp
pop
pop
pop
inc
jmp
icebp
in
push
jns
lock
cmc
lds
push
mov
aaa
notb
push
xor
push
cmp
dec
in
icebp
ljmp
lahf
pop
sti
lahf
ret
bound
xchg
fidivrs
mov
and
les
adc
sti
fldcw
sarb
push
jmp
lock
push
mull
iret
dec
sbb
mov
adc
fmul
bound
jns
sub
stc
pop
dec
call
int3
iret
cs
sbb
jbe
inc
dec
addr16
mov
stos
dec
scas
jo
push
imul
cmpsl
sub
mov
adc
mov
cmc
add
bound
inc
xchg
mov
rcl
loop
sbb
xchg
gs
std
cmp
mov
fdiv
and
inc
dec
cmp
lret
jp
das
mov
sub
sti
neg
mov
or
xchg
push
rorl
adc
ja
sar
cmpsb
dec
pop
pop
adc
pop
push
jp
popa
mov
push
xchg
test
loop
adc
jae
xchg
les
pusha
loop,pn
inc
int
clc
outsl
or
rclb
pushf
pop
mov
mov
mov
pop
out
arpl
rclb
pusha
xor
cmp
fsts
enter
xor
call
lcall
add
inc
mov
fldt
push
test
cmp
lret
xchg
popf
test
adc
ds
inc
imul
int3
into
dec
test
push
xchg
or
outsb
mov
mov
xchg
divl
adc
lcall
xchg
std
outsb
popl
scas
cmpl
mov
mov
pop
cmp
push
xor
dec
enter
fnstsw
add
orl
add
cltd
scas
gs
fdiv
aad
or
loop
std
mov
divl
fnsave
data16
call
gs
out
push
inc
jnp
andl
fcmove
push
jecxz
xchg
push
or
popa
ja
cmc
insb
clc
ret
cwtl
sti
cmp
add
mov
mov
sub
jae
xlat
ret
lods
inc
test
sub
mov
lods
mov
adc
sub
push
cld
pop
adc
inc
rolb
in
sbb
cli
pop
fwait
push
imul
insb
repz
inc
and
mov
and
xchg
gs
test
test
add
sub
pushf
mov
push
lcall
xor
cmp
es
call
and
and
mov
loopne
jmp
adc
cs
stc
cmpb
or
sbb
or
sub
adc
adc
fwait
call
xchg
es
not
sbb
lock
jg
sbb
pop
call
imul
test
adc
xor
int
ret
repnz
out
or
mov
fs
push
sbb
jmp
inc
xchg
int3
xlat
push
lods
aaa
or
pop
push
inc
adc
fadds
or
gs
mov
xchg
mov
add
inc
pusha
pushf
inc
xor
test
movsb
mov
ret
cmc
scas
jge
les
lods
shr
pop
jae
cli
cmp
daa
push
cltd
push
xchg
mov
addr16
fadds
sbb
aad
sbb
daa
mov
les
mov
testl
shl
push
mov
fisttpl
imul
and
inc
into
scas
outsb
adc
xchg
xchg
dec
push
outsb
in
nop
bound
std
lcallw
cwtl
insl
cmp
ds
cli
xor
sub
sbb
movsl
xlat
aaa
pop
xor
or
xchg
or
xchg
out
bound
cmpsb
pop
inc
insb
push
aas
arpl
dec
imulb
es
sub
movsl
cmpsb
push
jmp
pusha
loop
insb
dec
sub
mov
sub
mov
pop
outsb
out
repnz
pusha
cs
popf
mov
movsl
pushf
push
cli
ds
subl
mov
mov
dec
push
out
hlt
hlt
js
lea
sbb
cmp
xlat
dec
fs
xor
push
es
pop
sub
in
cmpsb
sbb
cmpb
mov
cmp
cwtl
inc
push
fcoms
out
inc
js
inc
and
enter
xor
pusha
mov
int
xchg
dec
xor
push
movsb
sarl
test
outsb
adc
gs
jl
aad
std
fstp
dec
xor
lods
add
add
mov
mov
jne
subl
push
outsl
sti
scas
scas
jae
aam
loope
pop
out
lock
adc
test
mov
push
outsl
cwtl
out
lret
cltd
pop
mov
aaa
dec
es
or
mov
adcl
adc
mov
mov
xor
mov
pop
jl
or
je
rcl
test
fildl
inc
push
push
push
arpl
jg
sub
sti
mov
inc
loopne
or
mov
jae
out
inc
dec
xor
jle
dec
mov
jb
mov
in
sub
out
mov
pop
andl
imul
xor
xor
iret
movsl
xor
push
pop
push
add
inc
push
sahf
test
inc
aam
pop
dec
add
mov
cmpb
xor
in
xor
push
dec
stc
mov
push
out
gs
sbb
cltd
js
lcall
inc
push
pop
repz
xlat
imul
loop
or
scas
sub
xchg
add
xchg
stos
fildll
xor
or
cmp
decb
stc
mull
xchg
jmp
aad
daa
push
cmpsl
scas
aaa
push
add
sahf
mov
popa
sub
loopne
push
insl
out
and
imul
lret
sarl
adc
les
sub
cmpsl
nopl
movsb
stos
push
orb
push
lock
insl
mov
test
data16
popa
test
or
xchg
push
call
jmp
test
mov
addr16
insl
add
clc
add
adc
sub
adc
cltd
das
data16
sub
jg
movsb
sub
push
mov
out
sub
pushf
mov
cmp
sub
jl
dec
rcrb
mov
lods
dec
cltd
jmp
sub
movsb
cmp
data16
rcr
outsb
or
adc
aas
int
or
add
pop
and
push
ss
lock
mov
pushf
xor
cmp
cs
cwtl
fcmovbe
negb
xor
sub
lock
dec
scas
loop
daa
stos
dec
add
outsb
lods
jg
sbb
mov
push
add
push
adc
or
push
outsl
cltd
inc
jl
sub
cmpsb
js
ror
cmp
out
push
xlat
gs
lods
repnz
jns
jns
xchg
cld
fucomip
fldt
test
push
lods
cmc
popf
outsb
arpl
aam
xchg
and
pusha
pop
ds
out
ljmp
xchg
xchg
mov
xlat
sub
scas
hlt
xchg
ret
mov
jmp
std
test
and
sbb
cmp
out
mov
push
mov
imul
xor
loopne
rorb
push
xor
test
sub
sub
mov
dec
pop
frstor
add
lock
xchg
xchg
aas
int
loopne
jnp
mov
sbb
sbb
bound
clc
mov
int
in
sarl
push
sub
mov
mov
leave
add
jecxz
call
or
sbb
dec
test
pop
mov
mov
sbbl
cmpsb
arpl
mov
jnp
imul
xor
rorl
lret
push
clc
or
or
loope
push
js
xchg
dec
pop
ljmp
cld
ret
aaa
pop
push
mov
pusha
dec
ret
jp
mov
jl
cmpsl
and
xor
test
cmc
sbb
call
lcall
or
jg
lods
inc
xchg
fisttps
jbe,pn
sub
sub
jmp
sti
sbb
test
add
xchg
pop
and
mov
outsb
mov
mov
enter
fwait
movsb
ljmp
pop
jle
data16
dec
loopne
sub
cwtl
cli
mov
pop
inc
cmpsb
iret
pop
xchg
push
jge
and
mov
mov
loopne
jne
repz
std
pop
pop
jge
aaa
or
push
sbb
xchg
lret
jne
dec
das
insb
or
push
push
dec
cs
xlat
lcall
xchg
rolb
mov
divl
adc
adc
fsts
inc
or
inc
push
sbbb
add
dec
or
xor
add
test
pusha
jne
mov
pop
sub
aad
hlt
ss
dec
clc
inc
ja
ja
test
test
xchg
js
and
rcll
push
dec
sti
lret
cmp
cld
cmp
jl
jne
aam
mov
roll
add
push
idivl
adc
addr16
repz
xchg
cmpl
mov
mov
cltd
inc
add
ds
andb
into
mov
mov
iret
push
cli
mov
jbe
mov
dec
push
mov
jecxz
mov
jne
or
xor
pop
fsubrl
in
dec
mov
mov
cmpsb
xchg
addr16
push
cltd
movsl
in
xor
int
cwtl
adc
cmp
or
inc
add
xor
pop
clc
mov
mov
ret
jb
jge
imul
scas
adc
subb
dec
and
inc
inc
pop
sub
adc
inc
lret
mov
sub
shlb
push
cmpsl
and
xchg
jnp
dec
lret
ret
mov
sti
sub
xor
movsb
adc
dec
daa
push
loop
lods
jb
push
and
sahf
pop
ret
bound
mov
in
addl
scas
out
ss
push
jge
fstenv
inc
or
xchg
adc
or
adc
push
xchg
mov
jne
inc
sbb
ss
push
mov
cmp
call
outsb
push
pop
je
ds
rcr
xchg
inc
vminpd
or
aad
cmp
jbe
mov
ljmp
add
es
popf
sub
cmpb
jmp
sbb
jbe
ret
xor
fldcw
add
ja
les
pop
pop
std
decb
pushf
pop
clc
inc
mov
lahf
xchg
add
js
inc
sbb
ljmp
push
dec
push
inc
mov
pop
fisttpll
jb
push
jle
cwtl
pop
and
ljmp
in
icebp
decb
test
faddl
push
jl
scas
lahf
shlb
add
inc
xchg
adc
mov
mov
jns
iret
sti
or
pusha
daa
mov
ds
cmp
andl
mov
fs
add
xchg
call
cwtl
mov
lods
cwtl
xchg
loop
jmp
or
cmp
paddsb
andl
lods
stos
adc
sub
adc
add
inc
repz
sub
sub
sahf
imul
mov
fstps
and
fcompl
jbe
jle
sub
jns
pop
pop
ret
pusha
fmuls
inc
xor
aam
cmpsb
sbb
sbb
movsl
aad
cmp
pop
insl
mov
movsb
daa
cmpsb
push
out
cs
xchg
adc
iret
hlt
push
mov
push
jne
dec
dec
fdivs
cmp
js
in
pop
das
xor
xor
pusha
inc
jns
loope
push
xor
mov
xchg
add
iret
xor
sbb
sub
mov
jp
lods
fdivl
imulb
mov
and
jl
lahf
mov
shl
pop
into
mov
add
add
cld
push
push
in
mov
inc
out
lret
mov
sub
pop
dec
push
mov
and
dec
xchg
cmp
xchg
sahf
ljmp
mov
sbb
pushf
cli
or
push
xchg
cli
popf
adc
bound
daa
in
add
fistps
push
out
insb
jle
mov
add
testb
cwtl
ret
jg
lock
repz
les
lods
push
or
lea
fidivrs
xchg
cmp
je
jbe
loopne
jno
daa
test
push
adc
int
pop
leave
inc
xor
jnp
fdivr
idivl
ja
scas
mov
mov
pop
stos
pop
ficoml
inc
repz
in
jnp
sti
jmp
cmp
in
sbb
dec
jo
lret
push
adc
mov
imul
dec
inc
or
test
or
inc
loop
mov
pusha
pop
roll
xchg
mov
xchg
out
ljmp
jo
aam
mov
aas
rcr
push
imul
dec
movsb
je
mov
adc
add
inc
ret
mov
andb
xor
inc
pushf
aaa
add
jge
repnz
jle
sahf
lea
pop
xchg
mov
pop
push
dec
xlat
xor
aaa
pushf
lods
mov
mov
clc
je
push
ds
jmp
inc
push
pop
dec
outsb
xchg
push
jne
inc
sahf
mov
or
cmpsb
inc
sbb
adcl
pusha
repnz
ret
and
insb
mov
mov
sub
and
shlb
pop
stos
out
repnz
sub
mov
lahf
inc
pop
sbb
popa
pop
pushf
push
in
sbb
stos
sub
xchg
test
bound
fildl
dec
jle
and
push
ret
aad
lahf
inc
mov
shll
adc
xchg
sub
shrb
lret
jb
pop
es
dec
or
sar
sarl
sbb
and
ja
test
clc
into
cli
ds
scas
orl
sbb
loopne
testb
pushf
rolb
cmp
mov
sahf
data16
mov
daa
mov
addb
lret
mov
daa
inc
push
filds
pop
mov
push
cmp
and
mov
jecxz
mov
ficoml
push
dec
out
sarb
jne
ret
push
ljmp
sub
cmp
ss
stc
repz
imul
lcall
cmp
or
push
enter
int
adc
imul
and
mov
shll
ret
xchg
mov
imul
sub
int3
dec
mov
gs
add
adc
loope
and
push
and
cmc
push
mov
push
push
push
mov
mov
incb
lods
repnz
xchg
pop
pop
shl
mov
stos
and
dec
xchg
xor
jno
dec
fstps
ss
ret
mov
out
mov
imul
les
xchg
pop
cmpsb
pop
jl
jo
mov
loope
mov
insb
mov
inc
mov
sarb
push
cmp
int3
mov
push
dec
mov
out
push
in
dec
pop
xchg
push
mov
outsl
dec
repz
xor
aaa
clc
lods
fdivp
push
adc
add
and
leave
mov
imul
push
xorb
dec
cld
insb
mov
mov
cmp
cmp
add
sahf
jecxz
bound
sub
sbb
or
fwait
outsb
mov
sub
adc
mov
push
test
add
loop
mov
fisttps
lahf
jle
push
out
jns
pop
push
jl
pop
aaa
movsl
mov
bound
mov
sbb
mov
cmp
cmp
into
adc
ret
push
xor
inc
pop
or
sbb
cmp
sbb
mov
sbb
and
adc
aad
jns
mov
outsl
or
inc
stos
and
aad
push
jmp
xor
and
mov
lret
xor
mov
movsb
out
rolb
mov
rcr
pushf
and
push
das
push
mov
ss
int3
mov
es
xor
cltd
adcl
xor
out
xchg
or
jbe
mov
jne
pop
push
sbb
push
scas
pop
jl
imul
stos
xchg
xchg
fcmove
dec
mov
push
call
mov
cli
xor
lock
and
data16
into
jne
sub
lock
cmp
lea
mov
rcl
loop,pn
xchg
mov
ficoml
mov
jb
sub
div
jl
dec
je
inc
incl
in
jg
jmp
pop
push
xchg
mov
cld
push
shrb
jecxz
lock
popa
jo
push
inc
movsl
adc
xlat
mov
mov
mov
pop
pop
lcall
cmpsb
scas
mov
xor
sub
push
das
push
rep
add
sub
rorb
mov
ret
mov
rorb
popf
sahf
iret
xchg
mov
arpl
lock
xlat
sbb
cmpsl
repz
fs
je
ljmp
aad
add
xchg
sub
and
lods
sahf
pop
sub
out
adc
stc
neg
sbbb
daa
rcr
push
in
cmp
in
push
andb
repnz
push
shrl
ja
fiadds
mov
add
cmpl
loopne
int
dec
or
sbb
or
icebp
mov
jmp
mov
mov
fisttps
lea
push
sbb
pop
jg
mov
das
push
insl
fidivrl
aad
lcall
push
mov
cmp
or
add
enter
fcomps
push
cmp
mov
rcrb
or
fsts
xchg
icebp
mov
stc
pop
push
testl
pop
jb
jmp
dec
sbb
push
jp
xchg
fcoml
aam
loopne
mov
pop
jg
jbe
ss
pushf
lahf
mov
in
add
xchg
imul
pop
adc
or
out
xchg
les
aaa
push
jne
lahf
sub
pop
fadds
xlat
push
cmp
rorb
cmpsl
jns
dec
int
sub
ret
popa
out
ja
sub
or
or
jo
and
sub
xchg
cmp
mov
cmc
movsl
and
fadd
adc
inc
sti
mov
mov
lds
in
sub
mov
mov
push
jl
loope
or
jge
pop
loop
sbb
mov
add
mov
mov
lcall
sub
popf
adc
scas
xor
or
sbb
ljmp
ret
or
jmp
and
sub
sub
fildll
leave
mov
pop
sahf
cltd
hlt
out
pop
mov
adc
aas
loop
mov
pushl
stos
xchg
rorb
sub
loopne
xchg
mov
add
shr
es
sub
mov
xor
je
fadds
jae
ffree
and
repnz
adc
dec
jecxz
mov
add
push
ret
lea
sub
or
lahf
pop
imul
push
bound
lret
xchg
jecxz
or
cmp
adc
fsqrt
sub
cli
in
jl
xor
push
loopne
test
mov
sub
hlt
xchg
test
lahf
push
xor
push
mov
push
mov
mov
sub
fwait
iret
push
cld
xchg
inc
jge
mov
cmpsb
dec
mov
push
loopne
xor
cmpsb
cmpsb
dec
mov
aaa
or
push
in
arpl
mov
movsl
fisttpl
cmp
lret
cmp
inc
mov
pop
aas
and
test
lret
rolb
pop
loopne
movsb
addr16
sub
jnp
std
rolb
mov
jno
mov
or
pop
incl
inc
jnp
test
dec
loopne
sub
pusha
ja
jl
shrl
add
std
pop
pop
pop
out
out
cltd
cmpsl
and
lds
dec
shlb
rorb
aaa
cmp
mov
aaa
inc
sbbb
cwtl
sbb
mov
jo
dec
mov
icebp
leave
xchg
jmp
movsl
mov
lcall
sbb
xchg
mov
in
xor
inc
popf
fs
icebp
daa
test
jle
notb
jecxz
int
fnstcw
jns
adc
push
aam
pushf
shl
cmp
cld
cmpb
xchg
jle
mov
push
les
xchg
sub
stos
cmpsl
cmp
add
sub
xor
scas
xor
dec
mov
cmc
pop
nop
fstps
cmpsb
pop
lods
jne
lods
imul
jbe
loopne
fnstsw
push
inc
cmp
push
lret
cld
mov
setnp
sub
std
jmp
adc
cmp
fwait
xor
js
fbstp
xor
mov
pop
add
jge
push
imul
and
pop
je
push
cmp
nop
mov
pop
subb
int3
movsb
mov
cmp
dec
in
or
jo
adc
leave
out
popl
lcall
movsb
adc
inc
dec
dec
adcl
repz
lea
outsb
jmp
mov
xchg
mov
pop
test
rcrb
sahf
mov
sbb
mov
popf
test
push
mov
cmpsl
leave
inc
repnz
jno
mov
push
lock
cmp
cmp
adc
ss
test
mov
or
scas
hlt
adcb
stos
jno
lods
outsb
test
incl
sahf
inc
mov
jmp
out
sub
xor
or
rcrl
pop
jmp
inc
sub
cltd
push
mov
out
ja
dec
pop
in
out
inc
xchg
adc
jno
mov
jge
decb
jg
fcomp
xchg
add
pop
xchg
jns
adc
inc
aam
xlat
adc
mul
test
out
push
push
mov
in
pop
sub
sub
je
jle
pop
pop
inc
xor
jl
inc
das
les
mov
es
push
xor
mov
ss
pop
enter
adc
push
cmc
sub
xchg
mov
in
mov
adc
or
and
sub
iret
sbb
push
dec
arpl
popa
and
pop
ret
lret
push
and
xor
out
scas
fdivl
out
clc
fs
das
repnz
xchg
cmp
mov
into
pop
inc
push
rcr
lret
pop
mov
sbb
jo
loope
int
lret
test
pop
mov
adc
fdivs
aaa
ficoms
out
hlt
lea
stc
jne
or
mov
inc
xor
jo
test
push
jmp
ss
stos
sub
xor
push
repnz
push
shl
and
add
loope
push
out
jnp
leave
cmp
xchg
movsl
jbe
mov
call
fwait
outsb
and
or
mov
jmp
pop
sub
mov
adc
scas
int3
mov
std
das
fimuls
push
xor
cld
xor
pop
lret
sbb
nop
push
dec
into
mov
jo
mov
test
push
sub
mov
xor
insl
jnp
fdiv
xlat
push
mov
inc
adc
sbb
push
mov
idivl
ljmp
out
das
sbbb
mov
les
and
xor
rcrl
fiaddl
push
imul
xor
jbe
ret
push
ret
test
push
fwait
sub
sbb
popa
out
test
out
and
fstp
adc
push
popf
rolb
mov
orb
sbb
fs
smsw
jecxz
icebp
call
xchg
add
dec
or
shrb
sbb
test
mov
mov
cmp
push
fsubrl
cmpsl
xlat
mov
xchg
cmp
xchg
je
mov
mov
in
fcmovnb
pop
ss
adc
push
mov
imulb
test
lret
lret
dec
fists
push
fsubs
inc
popa
and
sub
cs
and
mov
pop
adc
sbb
test
lahf
shrl
jns
outsl
sub
dec
repz
sub
sbb
xchg
inc
pushf
jecxz
lods
and
dec
jbe
xor
aas
xchg
dec
jne
or
push
mov
mov
xchg
faddl
jmp
scas
iret
mov
movb
fnstenv
sub
ss
ret
push
iret
pop
ret
adc
clc
pop
add
xchg
aaa
or
pop
out
mov
pop
xchg
fisubl
adc
dec
or
fs
das
test
push
call
xlat
xor
mov
xchg
inc
and
sub
imul
ds
xchg
push
subb
mov
jge
insl
jp
dec
add
push
int3
add
or
int3
divl
shlb
sub
pop
aad
repz
clc
out
clc
out
inc
mov
sti
lock
pop
movsl
rcrb
icebp
inc
cmpsl
pusha
xor
pop
xor
subb
mov
push
dec
cmc
les
call
xor
les
jne
sub
popa
mov
sub
fwait
sbb
in
pop
jb
push
ljmp
out
sbb
push
jle
rorl
push
ja
in
stos
adc
rorb
aaa
sbb
mov
mov
add
outsl
sbb
rol
test
sub
xchg
mov
cmp
sahf
in
pop
scas
scas
xor
fistpl
scas
jge
dec
push
xchg
dec
iret
scas
cmp
pop
sub
pop
pop
pushf
xlat
mov
xchg
xor
mov
fnsave
lahf
sub
icebp
incb
xlat
inc
sub
jo
cmpb
pop
arpl
clc
out
add
push
jecxz
adc
insb
stc
add
and
mov
cmp
push
shll
add
sbb
adc
in
xor
mov
in
adcb
or
sub
xchg
leave
in
inc
jbe
xor
mov
dec
test
sbb
ficoml
dec
mov
xchg
dec
dec
les
and
jmp
int3
pop
mov
stos
push
inc
sub
cmp
mov
and
xor
push
adc
mov
mov
pop
mov
mov
xor
das
jbe
lahf
pop
jns
push
dec
int
nop
shrl
test
mov
cwtl
xchg
cwtl
sbb
and
sbb
leave
jl
xchg
and
test
test
idivb
pop
sbb
movsl
cmpsb
inc
jb
bound
push
or
adc
pushf
call
das
into
cmp
push
push
mov
xchg
mov
stc
add
xchg
dec
dec
fwait
mov
pop
std
mov
sahf
cmp
adc
pop
jnp
rcr
daa
pop
ss
xor
cmp
fstpt
into
cmp
out
push
push
in
out
sbb
cld
fcos
repz
add
adc
push
inc
clc
int3
push
mov
inc
inc
xchg
sbb
in
mov
enter
mov
jmp
lock
out
cs
sub
lods
inc
push
mov
scas
cmp
lods
push
negb
jb
sbb
repz
out
cmp
cmp
aam
xchg
loop
popa
call
cmpsl
loopne
sub
stc
jmp
mov
icebp
sarb
jle
sbb
jns
xchg
xchg
stos
test
test
push
aaa
mov
test
push
ja
leave
pop
ljmp
fdivr
inc
movsl
cmp
roll
rcrl
adc
mov
lods
xchg
faddl
or
cld
jmp
jo
mov
clc
cmp
xor
js
out
mov
sbb
lret
mov
sahf
mov
xor
cs
and
stos
cli
rcll
std
xchg
add
fistl
outsl
sub
and
insb
jmp
add
sub
mov
jne
movsb
xchg
push
mov
stos
sbb
adc
and
jp
sub
jmp
int3
lea
dec
in
insl
dec
nop
sbb
fisubrs
mov
ljmp
fwait
lret
pop
std
jge
push
and
incl
sub
jl
stos
es
ja
mov
jo
loopne
lcall
sbb
mov
lds
je
mov
loope
ljmp
sub
sahf
push
in
jg
inc
sbb
jge
push
push
dec
mov
mov
push
cmp
dec
cli
xchg
es
jno
pop
push
push
dec
lret
push
decb
test
jg
imull
aam
pop
sbb
gs
out
ljmp
movsb
fmul
cmp
imul
sub
ds
fdivrs
out
or
ljmp
adc
or
push
or
mov
lret
push
addr16
jp
inc
xchg
add
or
xchg
movsl
lcall
pop
mov
xchg
pop
dec
pop
fstpl
das
jle
fcoms
add
mov
mov
scas
xchg
hlt
lods
jns
mov
mov
cli
inc
mov
mov
outsb
inc
lret
xor
sarb
arpl
out
sbb
ss
xchg
sahf
xor
cmp
imul
sahf
pushf
inc
in
loop
push
lods
test
push
adc
leave
push
or
shl
stos
test
pushf
and
fdivp
fldt
xor
inc
add
mov
push
fsubrl
out
iret
pop
xchg
lret
pop
dec
sbbb
jo
data16
inc
jecxz
inc
mov
test
push
test
and
filds
jecxz
sbb
fsubl
arpl
lods
jo
in
mov
cmp
push
lods
mov
sub
mov
lea
inc
xor
sbb
mov
pop
mov
insl
pop
mov
or
xchg
inc
ss
and
sbb
jmp
xchg
cltd
and
xchg
xor
adc
lret
mov
sub
outsl
mov
jg
cmpsb
mov
filds
dec
jnp
mov
jg
ret
shl
leave
in
imul
adc
out
push
xor
xor
repz
and
addr16
outsb
cld
cmp
mov
inc
pop
lds
aam
cmc
test
mov
fiaddl
mov
xchg
xor
cmp
scas
in
in
scas
incb
das
fnstcw
iret
mov
adcb
testl
pushf
mov
stc
pop
lods
sub
push
movl
push
or
mov
cmpsl
lahf
adc
or
lods
fdivp
sarb
test
lcall
ss
in
repnz
xchg
js
sub
mov
sbb
ror
out
ficoml
insb
jbe
mov
scas
xchg
dec
dec
sbb
scas
mov
sti
dec
pop
pop
in
adc
push
jb
rcll
mov
fidivrs
cmp
dec
pop
push
sub
test
ljmp
mov
cltd
icebp
and
push
fldt
sub
into
je
lahf
push
push
ret
mov
pop
xor
mov
sbb
mov
sub
mov
test
inc
push
seto
xchg
pop
or
lods
cmp
dec
and
pop
sub
or
data16
int
add
jl
movb
xorl
or
mov
dec
lahf
fs
fs
sub
dec
ja
in
jp
lcall
xchg
rcrb
mov
xchg
fiadds
das
lock
mov
cmp
enter
xchg
inc
aaa
es
adc
fistpll
scas
loope
cmp
mov
sahf
fsts
jo
dec
fcomps
xor
jmp
stos
fsub
in
pop
sbb
loop
and
jno
cmp
mov
cmp
bswap
insb
sbb
fnstenv
pop
in
std
out
xchg
imul
pop
mov
ds
xor
lods
dec
iret
or
sub
dec
push
sbb
cs
jecxz
push
imul
xlat
or
lods
clc
fwait
push
xor
and
lock
push
sbb
faddl
lds
mov
pop
jne
cmp
cld
out
jl
aad
or
lahf
or
push
shl
jp
and
add
push
sbb
repz
push
popf
xlat
fildll
xchg
leave
add
inc
test
leave
mov
aas
cmp
inc
aam
mov
mov
js
cmp
lock
jecxz
mov
testb
jmp
testb
lods
and
adcl
add
iret
loope
xchg
lea
dec
push
fmuls
out
xchg
fisubrl
dec
std
in
or
stos
call
imul
scas
and
dec
mov
add
mov
mov
in
js
fidivrl
mov
leave
jle
mov
xchg
insb
push
sti
jmp
fimull
or
pop
les
popa
popf
pop
mov
adc
xor
in
hlt
scas
or
adc
fcoms
mov
std
in
rolb
lea
pop
xlat
adc
inc
jnp
sbb
adcb
addl
ljmp
push
hlt
push
rcr
fistps
mov
rorl
dec
jg
xchg
mov
push
fdivs
in
xchg
mov
outsb
push
or
pop
inc
mov
mov
daa
add
xor
mov
lahf
and
jmp
push
pop
fisubrs
scas
lret
ljmp
lahf
adc
and
movsb
shll
test
idivb
std
loope
xor
popf
and
sub
mov
or
sub
pop
push
insl
inc
cmp
mov
arpl
rcr
fcoms
cmp
jnp
mov
push
sub
data16
fisubrs
dec
xchg
test
push
andb
sbb
ja
mov
jg
shlb
push
cmp
inc
xchg
lods
xor
popf
rcl
push
push
pop
cmpsb
xchg
push
jnp
jecxz
loopne
ds
hlt
dec
stos
sbb
adc
mov
clc
sub
mov
shll
int
jp
jle
jo
and
in
sub
stos
clc
add
in
neg
sarl
cmp
or
or
pop
dec
jo
push
pop
fnsave
ljmp
bound
in
inc
call
lods
adc
cmc
cmp
lock
ds
mov
adc
sti
or
fs
call
fildll
cmpsb
jne
daa
lcall
push
dec
pop
roll
aas
mov
xchg
xchg
out
push
push
mov
fimuls
xor
aad
pop
inc
xchg
push
outsl
enter
je
jo
cmp
adc
sahf
les
and
cmp
cwtl
sti
js
ja
jbe
push
and
rcll
aam
mov
sub
bound
std
pop
hlt
jp
and
xor
and
lea
mov
and
popf
pop
mov
hlt
mov
sub
mov
arpl
sbb
mov
sub
jns
mov
xchg
pop
imul
mov
push
enter
pushf
xor
pop
inc
xchg
lods
or
or
cmp
dec
inc
orb
xor
ficompl
push
fidivrl
aas
xchg
xchg
push
js
ljmp
dec
fdivrl
fisttpl
jbe
push
in
mov
mov
test
mov
sub
hlt
jo
divl
dec
mov
jp
cmpsl
cmp
rolb
fucomi
jne
xor
pusha
sbb
jle
clc
dec
lret
push
push
pop
mov
adc
pushf
or
mov
idivb
stc
mov
xchg
ret
xchg
in
push
outsb
push
mov
popf
sub
daa
popf
test
ja
cmpsl
testl
jg
inc
pop
and
out
fwait
imul
pop
or
mov
fwait
cmpsb
cmc
cmp
pop
movb
push
add
and
pop
jecxz
out
fcmovnu
cltd
test
mov
insb
sbb
dec
mov
mov
cli
or
mov
repz
insb
xor
or
pop
inc
into
sbb
mov
fnsetpm(287
lds
mov
fcmovbe
mov
arpl
repnz
aaa
mov
xchg
pop
pop
inc
adc
test
je
mov
scas
inc
adc
cmc
call
pop
stos
mov
cmc
sub
hlt
mov
xor
addr16
je
aas
rolb
ret
int3
add
push
jnp
insl
lret
cmp
push
pop
sub
and
xchg
mov
mov
cli
and
int
push
dec
pop
add
cld
inc
adc
xor
xchg
dec
adc
aam
data16
jno
lods
gs
sbb
and
jno
sub
mov
mov
data16
add
gs
cmp
insb
jge
insl
mov
cmpb
icebp
jecxz
mov
ficoms
adc
pop
int3
add
mov
or
jb
ss
ss
cmp
sbb
push
and
std
test
sub
jno
shll
xchg
scas
aad
cld
xor
lea
and
icebp
or
aaa
lahf
mov
jecxz
ljmp
add
mov
add
movsl
cmp
aaa
inc
and
xchg
cli
mov
cmp
adc
cmp
rorb
loopne
adc
rorl
arpl
popa
jno
add
in
xchg
in
xor
sbbl
add
or
lahf
add
aad
dec
inc
adc
cmp
xor
lods
mov
jo
in
jbe
push
and
ds
adc
mov
push
mov
pop
xor
repnz
shll
lock
outsb
or
and
mov
fimuls
repz
fs
rol
inc
insb
fwait
mov
mov
mov
jnp
fs
fnstsw
shl
sbb
fwait
dec
cmp
xor
lock
adc
lcall
xor
xchg
mov
sub
mov
loopne
jne
rcrl
sahf
xor
dec
pop
js
and
jmp
adc
repnz
sub
inc
xchg
jne
mov
push
dec
insl
push
loope
inc
lcall
xchg
test
fidivrs
popa
inc
adc
add
dec
push
aam
push
cmpsb
rclb
loopne
movsb
out
push
xchg
inc
test
lods
pop
ds
out
shrl
xchg
mov
pop
mov
jecxz
mov
sbb
shl
inc
roll
stos
aas
lods
lea
lock
in
xchg
cmp
mov
lret
mov
fbstp
idiv
lahf
leave
dec
jge
xor
arpl
add
leave
addr16
pop
cmp
sbb
in
sbb
ljmp
mov
push
ficoms
loop
xor
mov
iret
arpl
cmp
inc
aaa
push
mov
aam
xor
orps
push
aaa
xor
ret
mov
jge
adc
fdivrl
fwait
add
xor
insl
add
repz
xor
mulb
and
test
push
add
int
sub
xchg
movl
cmpsb
mov
pushf
repnz
xor
push
arpl
pop
lret
and
xchg
mov
lds
addr16
rolb
and
aad
iret
pushf
jmp
cwtl
cmpsl
xor
movsb
gs
inc
adc
faddp
dec
popf
mov
add
pop
xchg
js
pop
rcr
dec
xor
test
push
push
mov
and
shlb
mov
imul
les
pop
xor
cmp
hlt
in
xchg
fucompp
in
icebp
inc
leave
arpl
sbb
mov
stos
imul
mov
lret
pop
popf
push
daa
or
mov
xchg
xchg
leave
sti
test
outsl
pop
nop
dec
push
adc
xchg
test
rcl
adc
nop
lret
punpckhbw
in
outsb
and
adc
out
dec
fstpl
push
imul
cmpsl
dec
loop
imul
movsl
sbb
adc
inc
mov
and
jle
add
out
pop
mov
scas
sub
sbb
inc
mov
mov
sbb
loopne
je
mov
fisttpl
push
pop
jae
mov
push
or
pop
push
inc
test
in
jno
sub
pop
popa
adc
int
ljmp
fmull
mov
or
mov
mov
int3
icebp
scas
add
cmpsb
ja
repnz
xor
test
or
or
dec
aaa
push
jmp
enter
in
mov
pop
fsts
imul
addr16
inc
rcrb
sub
scas
xor
xchg
in
fmuls
pushf
inc
outsl
add
addl
mov
ss
sti
mov
dec
sub
fs
je
mov
aam
mov
add
xchg
mov
push
jns
xchg
inc
xchg
int
pop
rcl
mov
sub
aaa
mov
stos
imul
dec
aam
movsb
shll
or
mov
scas
xchg
outsl
je
push
shrb
push
fdivp
data16
xchg
xchg
or
das
or
fwait
mov
shr
sub
movsb
js
in
sahf
mov
cli
sahf
cli
jae
jb
pop
repnz
fmul
adc
ds
lcall
mov
ret
sub
repz
xorb
mov
mov
mov
sbb
nop
bound
sub
push
hlt
lcall
mov
cmp
loop
xchg
les
sarl
dec
jbe
pop
and
jnp
push
daa
xor
or
and
xor
bound
nop
xchg
pop
jbe
in
or
dec
mov
jb
add
inc
mov
or
or
sbb
std
fidivrl
hlt
add
sarb
pop
dec
es
xor
dec
out
and
or
pop
bound
ds
inc
imul
push
push
sbb
mov
jmp
sub
add
stc
dec
popa
movsb
jo
add
mov
push
jae
xlat
movswl
mov
popa
inc
mov
int3
mov
mov
mov
xchg
lods
loop
insb
mov
pop
lds
xor
out
out
pop
push
mov
xchg
xor
jecxz
in
leave
out
jb
inc
popw
ljmp
out
push
jne
jle
jp
dec
cmp
mov
add
mov
push
mov
je
ficompl
and
aad
xlat
scas
jmp
sbb
jecxz
popf
popa
mov
jo
pop
test
in
pop
jl
fistpll
add
paddsb
mov
fsubrl
and
and
movsb
lock
cmp
inc
test
pushf
lret
cltd
dec
pop
insb
rclb
sarl
xchg
sbbl
insl
mov
imul
aam
and
sbb
cs
stc
xor
mov
aad
mov
xlat
adc
push
das
or
dec
sub
arpl
xor
adc
dec
jge
test
sub
or
dec
popa
rcll
mov
xor
stos
adc
dec
mov
ljmp
repz
test
xor
inc
mov
shll
shrl
inc
addr16
inc
int
jle
xlat
cmp
mov
sub
out
mov
cld
std
test
scas
ret
int3
int
sub
enter
aam
arpl
sub
mov
sbb
popf
pop
inc
pop
loopne
add
pop
js
clc
in
mov
pop
sbb
adc
cmp
mov
jge
add
jo
addr16
dec
and
jnp
pusha
pop
lcall
in
mov
cltd
xchg
mov
sub
fdivl
mov
movsl
inc
cmp
fadd
jb
xor
and
sub
int
push
push
mov
dec
hlt
cmp
mov
ret
rcrl
nop
push
adc
int3
add
adc
out
mov
shl
jge
adc
int
rcll
or
sbb
in
ret
add
mov
pop
andl
out
cmp
jmp
incl
lods
lcall
fwait
add
add
cmp
jo
and
inc
adc
ror
sub
cmp
mov
cltd
sbb
arpl
outsb
ds
cmp
xchg
mov
pop
sub
out
xchg
pop
out
imul
loope
ret
dec
cmp
adc
sti
loope
lret
fldenv
pop
stos
out
or
fistpl
and
cmc
aad
in
sbb
adc
dec
scas
shrl
pop
fwait
xchg
test
dec
or
pop
mov
pushf
or
inc
pushf
movntps
xchg
sub
fstps
ja
mov
test
jle
stos
sub
and
loopne
in
push
cmc
add
rol
push
ja
pop
pop
fcomi
jp
pop
mov
cmp
sbb
aad
fsts
jb
stos
sahf
ret
popa
in
lcall
shl
pop
cmp
adc
inc
cmp
scas
and
dec
cli
sub
test
jno
and
sti
xor
fmull
inc
mov
aad
ja
sub
mov
mov
mov
cmpb
push
or
cmp
adc
xchg
mov
push
sahf
and
adc
dec
add
cwtl
movsb
dec
cs
fnsave
je
ljmp
out
outsl
pop
dec
lock
or
lcall
jle
push
jnp
shrb
stos
cli
add
or
pause
mov
jmp
out
xchg
mov
cmp
je
and
xor
sub
addr16
arpl
int
add
inc
jns
loopne
in
in
or
or
mov
push
mov
std
mov
subb
imul
iret
or
pop
je
iret
loop
mov
xchg
mov
dec
sub
mov
and
pop
outsb
leave
stos
cmpsb
ja
popf
mov
push
pop
arpl
mov
lahf
scas
push
mov
pop
push
sbb
mov
pop
test
call
cmp
lcall
dec
inc
xlat
mull
add
popa
ds
inc
test
enter
jge
mov
arpl
repnz
xchg
imul
push
mov
and
mov
dec
inc
fcmovb
ret
incb
mov
cld
add
push
adc
rcl
inc
rorl
call
fstpl
fidivrs
mov
jle
and
adc
faddp
imul
cld
or
or
outsl
jle
push
jo
push
jmp
insb
cmpsl
push
ljmp
add
imul
add
negb
sti
mov
out
sub
pop
cltd
mov
add
rolb
jae
sarl
test
and
mov
and
fsts
jge
adc
lods
adc
daa
xchg
pop
and
loope
js
adc
xchg
cmp
aas
cmpsb
push
mov
mov
dec
cmpsb
and
jg
adc
fsubrl
cmp
cwtl
add
push
gs
mov
cmpsb
stc
adc
loop
lret
stos
jle
add
adc
arpl
out
mov
push
and
cmpsl
xchg
inc
fsubs
cmp
xchg
je
es
push
inc
daa
pop
xchg
sbb
and
fidivrs
mov
cld
push
jl
cwtl
int
sub
mov
insb
adc
cmp
outsb
shl
pop
pushf
mov
inc
cmp
push
pop
mov
mov
inc
and
xor
mov
outsb
mov
jmp
sbb
cmp
in
lret
fists
push
xchg
xlat
pop
nop
mov
sbb
insl
xor
dec
out
xchg
pop
or
jp
popf
lret
mov
xchg
fstl
adc
jle
sbb
adc
and
mov
mov
jb
ret
popa
popf
dec
ljmp
jg
aam
insb
mov
addr16
mov
scas
xor
inc
imul
jo
rcrb
pop
outsl
in
lea
push
jp
fs
mov
test
xorl
adc
sbb
jo
dec
dec
xor
fwait
push
mov
mov
mov
add
dec
stos
add
in
sbb
xor
or
data16
test
arpl
inc
push
int3
lea
dec
cmp
mov
and
push
dec
das
xchg
sub
push
jecxz
and
jge
jecxz
dec
inc
cmp
mov
mov
roll
cmpl
mov
test
arpl
xchg
xor
dec
dec
fiadds
in
ret
aad
test
cltd
inc
fldcw
ss
nop
loop
push
xchg
xor
movsb
cmp
mul
jge
jns,pt
or
iret
movsl
inc
mov
cmpsb
mov
cs
repz
mov
stos
in
fstpt
imul
inc
rcrl
popf
xor
das
hlt
mov
cwtl
sbb
dec
and
loopne
mov
adc
mov
push
sahf
jnp
fdiv
jg
adc
pop
jmp
ret
dec
dec
cld
imul
stos
imul
and
decl
aad
es
stos
pop
adc
pusha
push
bound
mov
test
popa
je
jae
adc
push
dec
lret
add
inc
out
or
lret
call
pop
cli
test
xor
divb
je
bound
sub
repnz
xor
push
inc
adc
push
cmp
gs
inc
jl
adc
cmp
mov
frstor
sbb
xchg
in
dec
push
sub
push
jecxz
mov
mov
mov
shll
rclb
adc
popf
fs
add
pop
pusha
das
pop
inc
pusha
lods
movsl
push
sub
xchg
int
mov
popa
push
movsb
data16
inc
pop
es
movsb
neg
dec
cmp
or
pop
or
cli
jo
mov
test
mov
insb
pop
popl
push
sbb
outsb
pop
dec
call
pop
clc
sbb
jb
stc
adc
pop
dec
jmp
cmp
mov
addr16
add
xorb
inc
sbb
mov
xchg
stos
lahf
sub
mov
jg
popf
outsl
inc
xor
push
mov
into
mov
xchg
movsb
pop
adc
mov
xor
mov
mov
inc
xor
loopne
lahf
push
movsb
jbe
xor
jecxz
pop
and
dec
jnp
sub
lahf
loope
or
test
out
mov
test
cwtl
inc
orb
repnz
stos
sbb
dec
dec
sub
imul
inc
fs
leave
mov
dec
xor
std
in
mov
fldcw
sub
fcoms
dec
cmpb
pop
daa
lods
fs
js
cmc
mov
in
mov
xchg
filds
iret
in
push
xor
or
jbe
fs
and
sub
ret
push
mov
scas
pop
ret
aad
out
das
fwait
xchg
sub
sbb
cld
or
push
dec
jae
das
ss
mov
js
mov
and
jecxz
in
das
insl
fdivl
mov
and
dec
mov
push
add
in
daa
xor
and
or
in
add
pop
lret
stc
das
sbbb
jmp
and
and
fdivl
int
jmp
push
shlb
pop
add
push
aam
gs
lock
out
jnp
out
adc
je
dec
cld
add
mov
dec
adc
mov
int
mov
hlt
jo
mov
aad
push
pop
adc
or
inc
out
push
mov
pop
scas
sbb
jae
insb
cmp
fadds
pop
addr16
das
xor
lret
pushf
hlt
mov
jl
mov
and
cmpsl
shll
dec
cmp
xchg
and
sub
and
sub
stc
dec
push
xchg
mov
cmp
push
addr16
roll
or
cmp
cmc
lods
stos
inc
mov
lahf
test
inc
in
dec
subb
and
dec
rcr
movsl
xchg
cs
mov
xchg
test
fdivrl
mov
test
pop
popa
push
adc
sub
repnz
lods
aam
dec
mov
fwait
inc
fcomps
add
sbb
jp
mov
aad
inc
or
cmp
push
adc
and
cmp
jle
push
popf
mov
shlb
mov
add
mov
sbb
sbb
fcompl
div
xchg
sbb
pop
sbb
cmp
cltd
lcall
mov
incb
scas
popl
inc
or
movsb
mov
fimuls
or
pop
rep
or
arpl
movsb
int3
cmp
mov
jne
adc
sub
cmpsb
pop
pop
pusha
jmp
popf
xchg
sbb
jmp
adc
in
and
cmpsl
inc
loope
mov
xchg
dec
and
push
inc
dec
mov
sub
sbb
mov
out
push
mov
mov
mov
cmpsl
in
inc
stos
roll
mov
mov
std
in
aas
aad
add
ljmp
mov
fidivs
adc
scas
insl
loop
xlat
sbb
pushf
sub
shlb
lcall
stos
mov
mov
int
ss
mov
test
lods
mov
pop
iret
ret
les
and
dec
pop
or
cmp
fcomp
ja
dec
jmp
adc
push
jnp
in
adc
xorb
outsb
or
cmp
out
jb
dec
je
aas
lret
idiv
xchg
mov
int3
push
bound
jecxz
arpl
pop
pop
je
data16
jge
hlt
iret
es
pop
dec
xchg
lea
mov
push
inc
outsl
adc
rcrb
lock
loopne
int3
sub
sub
dec
mov
mov
into
ja
ja
ljmp
and
fwait
dec
jle
pop
pop
notl
mov
jnp
leave
xchg
fucomip
jno
sub
and
imul
xchg
and
negb
mov
push
shrb
popa
daa
arpl
push
cmc
sahf
into
call
lds
jg
jbe
cmpsb
mov
sti
nop
daa
pop
pop
cld
lods
imul
jecxz
dec
add
or
pop
mov
dec
test
and
ja
fldenv
test
into
lods
pop
popf
daa
mov
add
mov
xor
imul
inc
test
or
push
dec
add
cmc
cmp
mov
mov
dec
sbb
ret
jecxz
bound
pop
cmp
jg
mov
adc
push
jg
aaa
mov
cmpb
push
push
push
push
cmp
or
out
fisubs
andl
sub
dec
test
xchg
hlt
pop
or
mov
mov
or
xor
int3
pop
loop
dec
add
loope
mov
sbb
insl
insb
in
scas
lods
aam
mov
aad
add
add
sbb
movsb
imul
and
add
xchg
or
flds
ret
lret
pop
shll
mov
les
jnp
mov
in
icebp
fadd
mov
sbb
xor
or
jbe
push
repz
daa
adc
xor
shl
sub
jmp
in
or
mov
stos
aad
and
cmp
test
cwtl
repz
iret
adc
or
ret
fiadds
flds
and
call
out
pop
jnp
lcall
pusha
scas
push
sbb
mov
adc
or
imul
daa
push
mov
das
or
rolb
mov
out
jmp
outsb
add
push
mov
xchg
xchg
jecxz
add
mov
ljmp
adc
mov
call
mov
inc
js
dec
mov
loopne
cmpsl
dec
lds
ret
icebp
cltd
push
pop
xorb
pop
sbb
inc
inc
sub
inc
push
xor
cmpb
icebp
xchg
dec
dec
cs
int
fdivrs
ret
arpl
es
into
jmp
rcr
pop
dec
movsl
lcall
and
push
addl
add
pop
aaa
out
bound
xchg
pop
jmp
out
sbb
xlat
jne
shll
lret
mov
lods
xor
mov
cwtl
cmp
icebp
scas
outsb
popf
pop
loop
pop
sahf
sub
xchg
adc
and
ret
leave
or
inc
aaa
in
xor
lahf
cmp
shll
and
mov
mov
out
or
pop
stc
lret
je
mov
xchg
hlt
push
dec
icebp
cmp
inc
aas
fucom
shlb
adc
int3
test
jl
push
scas
and
lods
fndisi(8087
mov
mov
pop
mov
mov
sub
sub
sub
cmp
lods
stos
andb
out
movsb
add
mov
xchg
dec
ljmp
push
push
cmc
shrb
popa
add
mov
lods
or
sub
fs
cmp
add
loop
dec
and
add
inc
scas
or
pusha
add
lea
mov
lock
sahf
sbb
cmpsb
sub
inc
pop
cmpsl
inc
aam
mov
jle
outsl
iret
or
dec
in
leave
inc
add
or
int
mov
int3
dec
rol
and
mov
mov
sbb
in
mov
lds
jl
arpl
nop
int3
inc
cmpsl
shr
cld
dec
xor
repz
dec
dec
fists
push
rcll
imul
push
mov
or
andl
aam
mov
lret
and
call
test
in
xor
lds
jg
xchg
cltd
lgs
push
add
enter
std
or
jne
pop
and
fstl
imul
mov
in
mov
add
loop
fdivl
insl
in
ljmp
xchg
inc
and
pushf
pop
xor
adc
addl
mov
imul
mov
mov
test
addb
adc
jge
adc
fcomps
loopne
daa
and
lret
jg
cmp
mov
dec
lret
xchg
add
jmp
mov
mov
test
out
je
out
ror
push
negb
pop
shlb
pop
push
xor
push
push
sbb
cmp
push
mov
inc
jg
pop
sbb
clc
push
mov
aad
inc
jnp
mov
push
jg
push
cli
adc
xor
xchg
mov
xchg
fiaddl
pop
mov
mov
outsl
sbb
push
sbb
inc
dec
pop
sub
repz
fiadds
pop
mov
dec
mov
pop
push
scas
and
xor
dec
int
cmp
aad
jg
enter
in
scas
shll
das
xchg
cmpsb
and
sbb
mov
cmp
pop
pand
add
mov
xchg
rclb
lds
or
push
clc
xor
dec
lcall
sub
or
cmp
and
out
pop
and
stc
jnp
sbbl
mov
mov
data16
in
dec
aaa
push
repnz
les
out
or
rcrb
sbb
iret
jge
gs
jg
jns
mov
int3
pushf
push
rorl
xchg
pop
std
ss
int3
stos
xchg
dec
adc
cmp
push
and
push
mov
lds
add
sbb
into
push
fnsave
push
sub
out
pop
pop
pop
nop
shll
ret
pushf
add
adc
sub
jb
push
jnp
daa
out
add
outsl
mov
les
dec
pop
dec
mov
pusha
movsb
jmp
jg
and
into
pop
in
fcomps
lahf
mov
dec
sarb
stc
dec
push
cwtl
cmp
subl
shll
int
arpl
lea
cld
fidivrs
hlt
inc
xchg
ret
inc
outsl
and
setb
rolb
xor
lea
ss
sbb
loop
adcl
shlb
push
xor
push
push
push
das
push
push
pushf
push
in
pop
sbb
lret
pop
cli
sbb
jg
insb
lret
mov
push
xchg
ja
mov
scas
xor
sub
mov
shrl
enter
and
xor
jp
jno
aam
mov
push
jg
mov
or
adc
stc
lock
scas
out
sub
cs
xchg
gs
lea
loopne
sbb
and
mov
popf
mov
stos
rol
xchg
mov
xchg
lock
xchg
and
xor
or
lods
leave
repnz
mov
xchg
out
je
popa
pop
jns
rcl
inc
je
sbb
pushf
adc
mov
out
sub
test
ss
pop
lock
out
mov
xchg
outsl
xchg
int
push
push
jg
xchg
popa
inc
lret
push
mov
jne
mov
scas
cli
xor
or
inc
in
xor
sub
rorl
pop
clc
insb
mov
lock
pop
push
aam
pop
insl
lock
dec
ficomps
aas
jg
xchg
lods
adc
jmp
movsb
cwtl
mov
and
int
sbb
mov
mov
jne
sbbl
mov
int3
stos
push
jecxz
push
out
leave
and
mov
ss
mov
cmp
xchg
js
or
sahf
xor
sub
mov
cmpsb
mov
xor
xchg
aam
mov
inc
mov
adc
fadd
push
jnp
loop
adc
mov
cld
cwtl
dec
pushl
movsl
sub
lea
ss
mov
addr16
ss
add
fidivs
imul
movsb
cwtl
es
xchg
aam
les
push
movsb
adc
push
scas
add
xchg
iret
xchg
lds
in
lea
imul
icebp
pop
sbb
je
rorl
push
int3
fidivl
mov
xlat
mov
inc
jbe
xchg
popa
xor
adc
jb
pop
lret
pop
insb
jp
mov
jb
lea
and
movsb
adc
xor
ficoms
jle
icebp
add
ds
orl
imul
das
mov
dec
cmp
jecxz
fwait
sbb
fnstsw
imul
pop
fidivrl
adc
in
inc
cmp
popa
jp
sbb
int
es
jmp
and
pop
add
in
mov
sbb
ljmp
or
cmp
mov
xor
push
sbb
pushf
inc
loopne
pop
xor
and
jnp
out
push
or
jae
sub
ljmp
std
push
mov
mov
ljmp
insl
imul
inc
push
ss
fcmovb
insb
icebp
stc
mov
dec
and
jmp
ja
fstl
push
add
sbb
mov
aam
mov
cli
fmuls
push
mov
test
xor
rorb
push
and
cmp
ss
inc
inc
in
push
push
outsb
mov
inc
adc
das
ficoml
cmp
xchg
mov
iret
xor
in
outsb
call
out
mov
into
ja
sbb
push
imul
dec
cmpsb
stos
xor
sub
pop
jle
movsl
or
bound
dec
lods
popa
xor
xor
movsb
sti
shrb
scas
rol
inc
fildll
adc
cmp
outsl
xor
outsb
mov
jp
cmpxchg
push
xchg
lcall
mov
mov
cltd
aas
push
dec
add
in
stos
push
nop
lea
and
fidivrl
inc
xor
pop
jo
ret
daa
mov
pop
mov
cmpsl
xchg
and
mov
ds
fnstenv
pop
fidivrl
loopne
jae
outsl
scas
jno
jno
mov
loop
fnstenv
add
lods
xchg
adc
cwtl
push
push
xchg
lret
fwait
jp
cmp
hlt
movsl
jl
pushf
adc
mov
mov
and
in
ds
or
fsts
mov
sarb
outsb
jbe
mov
icebp
call
or
pop
call
popa
or
orl
jne
out
or
popf
test
dec
xor
aaa
loopne
sbb
sub
xor
xor
jb
lds
jno
lds
mov
pop
mov
aad
outsb
adc
mov
push
xchg
mov
add
cmp
dec
mov
int
push
push
lea
xor
xor
push
fldenv
nopl
add
lcall
sbb
ret
arpl
or
dec
pusha
pusha
inc
adc
sahf
pop
in
and
nop
push
sub
push
inc
cmp
xlat
jnp
call
es
data16
xchg
push
jl
repz
cmp
jnp
mov
and
mov
lods
push
cmp
mov
xchg
call
mov
mov
mov
ds
pop
ljmp
dec
mov
mov
call
sub
rorb
and
shlb
push
daa
or
pop
les
xor
adc
sub
inc
mov
dec
inc
push
xchg
movsb
inc
popf
add
in
adc
std
pop
mov
addb
pop
mov
ljmp
push
loop
pop
cmp
insl
leave
xor
and
pop
xor
sub
and
loope
pop
pop
lods
inc
push
pusha
xchg
test
push
into
add
mov
ds
pop
push
or
loope
lods
out
mov
test
or
xchg
test
push
ret
sbbl
aas
das
inc
pop
pop
sub
dec
xchg
mov
push
push
fstl
pop
inc
xchg
mov
fdivrl
mov
push
ds
and
adc
dec
data16
imul
fists
xor
mov
das
sbb
popa
mov
mov
push
call
fiadds
loope
pop
or
in
cmp
and
jne
mov
pushf
mov
outsl
out
cmpsb
mov
jbe
outsl
add
sbb
insb
cmp
and
adc
and
lahf
jmp
adcb
shrb
scas
xchg
pop
mov
jnp
sub
or
repz
insb
jnp
pop
push
cltd
fists
sbb
fisttpl
int3
std
int
aaa
xor
jp
or
out
push
sbb
xchg
imul
sub
push
aad
pushf
lods
add
jmp
mov
mov
pop
adc
jmp
int
cwtl
xor
test
jo
ss
cli
xchg
js
ret
pop
and
inc
xor
and
jg
or
mov
cmp
cwtl
mov
je
cmpsb
or
push
test
inc
pop
movsb
push
xchg
or
daa
xor
mov
pop
int3
testb
xchg
clc
js
in
stc
inc
mov
cmc
mov
aam
xchg
std
lds
clc
outsb
pop
add
leave
jle
aaa
in
lea
push
push
and
repnz
mov
inc
mov
xor
xchg
adc
xor
inc
sahf
jl
dec
loop
imull
mov
push
ret
and
sbb
sbb
gs
xlat
mov
loope
sarl
cmpsb
or
push
push
lock
add
add
inc
popf
mov
jae
dec
push
dec
clc
jne
xor
loop
adc
orl
ljmp
sub
inc
sbb
dec
push
mov
push
insb
mov
ret
dec
pop
adc
jge
jmp
test
xor
daa
es
repnz
push
jmp
aam
pop
stos
frstor
mov
xor
pop
pop
into
testl
push
cmpsb
mov
cltd
idivb
rorb
xor
popf
adc
push
orl
cmp
lahf
lods
in
mov
aas
dec
enter
sub
add
call
fucom
repnz
test
xchg
add
cmp
aam
mov
rcr
lret
lcall
sar
gs
neg
sbb
or
lock
lds
add
cwtl
jno
out
mov
das
es
rclb
shlb
jae
lcall
movsl
aad
dec
xchg
imul
pop
cs
push
jo
je
lret
je
imul
or
addr16
dec
mov
mov
xchg
cmc
push
iret
insl
imul
lahf
fstps
sbb
cmp
outsb
sbb
pop
sbb
cmp
push
jno
pop
aas
into
push
cmp
and
push
int
jbe
lret
jae
int
cmp
xor
inc
cmpsb
out
xchg
cmpsl
stos
cmpsb
neg
push
leave
push
add
imul
cli
enter
dec
mov
inc
incb
clc
push
jge
test
dec
sub
es
mov
inc
arpl
jle
jecxz
call
jb
mov
out
out
bts
adc
jns
sub
dec
xor
pop
push
scas
je
roll
push
pushf
mov
popa
ficoml
popa
push
cmp
es
les
rcrb
push
cmpsl
pop
mov
cli
nop
adc
ljmp
xchg
mov
dec
std
dec
clc
negb
pop
xor
xchg
adc
aad
xor
pop
out
in
ficoml
inc
or
outsl
scas
cmpl
dec
orb
mov
cli
stos
add
mov
loop
xor
fwait
in
lahf
dec
loop
push
sbb
sbb
das
xor
push
mov
inc
in
push
and
aam
fcmovnb
dec
mov
ds
mov
mov
jmp
push
mov
mov
decb
inc
mov
test
sbb
dec
dec
and
push
arpl
jecxz
sub
and
scas
dec
cmp
lds
and
cmp
sti
outsl
pop
js
cwtl
adc
push
mov
dec
lret
pop
cmpsl
mov
jle
and
sbb
mov
push
jp
scas
loope
cmp
mov
es
sub
mov
in
js
inc
push
and
pop
mov
pop
mov
push
in
xchg
fiadds
add
pusha
cld
mov
jmp
mov
out
fstpl
mov
in
lods
setno
mov
and
enter
add
add
loop
dec
cmp
mov
roll
repz
int3
pop
mov
loopne
mov
fbstp
jo
out
sti
call
aas
pop
xchg
aas
push
orb
pop
fcomp
lds
push
sbb
xor
mov
adc
in
push
sub
mov
sub
rol
adc
mov
cmpsl
xchg
test
dec
rorb
mov
stc
test
and
and
jno
fsubl
cmp
mov
pop
xor
lea
hlt
shr
shll
mov
mov
je
lcall
out
cmp
xor
pop
imul
popf
pop
dec
and
out
enter
pusha
cmp
push
sub
jae
vaddpd
xchg
sub
into
loope
xor
add
inc
cmp
movsl
stc
cmpsb
mov
xlat
ret
imul
nop
ficoms
in
or
lret
inc
aam
fimull
or
push
lcall
fld
std
shlb
test
lret
rcr
jg
outsl
aas
fsts
inc
outsl
addb
gs
mov
insl
inc
lret
mov
in
lcall
sub
xchg
inc
cmpsb
cwtl
pop
movsl
lahf
and
mov
fisttpll
inc
test
mov
popa
sub
shll
sar
int3
test
pop
cmp
pop
dec
dec
inc
popf
pop
movsl
cs
or
jp
icebp
jp
ja
and
push
add
and
out
cmp
or
in
out
mov
shl
cltd
movsb
icebp
ds
or
daa
cwtl
jbe
ret
xchg
rorl
jge
xor
and
cs
out
lds
cli
jbe
dec
or
outsl
push
or
xorl
mov
push
inc
fdivr
in
sahf
call
andb
rclb
out
mov
adc
ljmp
addr16
push
fwait
daa
sahf
adc
lret
cmp
sbb
in
loope
xchg
mov
aad
xchg
mov
sbb
xchg
inc
mov
hlt
imul
pop
nop
mov
loop
rclb
cli
outsl
pop
cmc
jae
jl
test
pop
jnp
gs
pop
xchg
clc
pop
mov
mov
fildl
fsubrl
enter
pop
sbb
aaa
das
in
out
push
push
dec
inc
cmp
xor
xor
aad
sti
mov
sarb
mov
or
push
xchg
xchg
add
jbe
das
cli
push
jecxz
and
addr16
xchg
imul
add
inc
mov
add
test
bound
das
add
cli
dec
sub
sarb
ret
imull
sub
rol
dec
mov
pop
roll
insl
int3
jo
mov
fsts
out
filds
hlt
mov
inc
sbb
dec
adc
xchg
add
int
stc
jnp
dec
fdivr
addr16
stos
scas
mov
lcall
popa
mov
loop
imul
stos
dec
pop
icebp
out
jp
mov
stos
mov
push
add
xor
mov
sub
and
repz
jns
jo
aaa
lods
sub
aas
or
es
sub
adc
xor
jnp
add
mov
xor
xchg
ljmp
xchg
dec
jle
mov
fsubl
imul
scas
and
mov
push
xor
push
test
dec
mov
jno
adc
jl
cmp
adc
scas
and
ror
mov
xchg
sbb
lea
jecxz
pop
lock
call
lock
mov
or
shlb
or
dec
pusha
icebp
loop
mov
fsts
push
sti
push
jo
out
push
jae
inc
addr16
push
clc
add
jle
stos
insb
push
loope
sbb
push
aaa
adc
dec
adc
sbb
sbbl
outsl
xchg
push
ds
and
or
pop
jge
inc
cmpsb
inc
adc
ret
or
and
mov
add
lcall
push
shll
jb
sahf
add
mov
ret
clc
xchg
std
mov
or
jmp
jo
push
jp
arpl
cld
push
cmc
clc
test
outsl
jno
push
daa
and
push
and
fisubs
scas
push
test
adcl
aad
jnp
and
xor
push
mov
aad
cmpsl
lock
test
push
cs
xchg
in
mov
jmp
std
cmp
cmp
lods
inc
push
add
xorl
push
stos
add
shrl
out
adc
pop
lea
push
pop
lods
fdivr
bound
ds
mov
jl
cmp
jge
jl
aas
fmull
inc
xor
mov
pop
cmpsl
into
push
dec
cmp
and
sub
and
inc
push
popf
cmp
jbe
push
add
cmc
std
stos
inc
pop
enter
out
cmpb
imul
xor
int3
push
decb
cmp
sub
in
add
pop
cltd
jne
addb
or
jl
shrl
mov
xor
jg
sarl
call
lcall
and
add
mov
dec
jno
fcompl
mov
xchg
adc
sbb
inc
pop
pop
jns
dec
cmpsl
addl
test
mov
inc
jo
je
mov
xchg
pop
sbb
cmp
into
push
xchg
mov
out
mov
jnp
loop
push
add
pusha
aaa
ja
ja
int3
fisttpl
xor
dec
fdivs
js
mov
or
pushf
dec
jl
lods
adc
or
call
sub
dec
addr16
stos
mov
sarb
jl
xor
leave
jecxz
mov
repnz
out
div
mov
std
pushl
aam
ja
jmp
dec
push
rcll
xchg
inc
loopne
jg
enter
push
pop
mov
xchg
push
test
cmp
lcall
jb
inc
mov
test
repz
pop
stos
cmp
sbb
in
dec
insb
pop
clc
andnps
push
sbb
jl
stos
movsb
or
enter
jne
push
mov
in
jl
push
in
pop
dec
es
jecxz
fnstcw
fwait
movsl
xor
ljmp
mov
add
jp
daa
subb
sbbb
xlat
out
lods
insb
pushf
push
imull
fistpl
push
and
scas
push
loop
icebp
cmp
shr
push
shlb
nop
inc
jl
data16
sbb
movsb
sbb
mov
andl
lcall
mov
stos
cld
movsb
hlt
add
ret
frstor
cs
sbb
movsl
aas
test
ljmp
mov
dec
pop
movsl
adc
dec
fldl
bound
cld
push
ds
cmc
test
cmpsb
bound
popw
lods
xor
adc
mov
and
fadds
xchg
ss
inc
cltd
push
mov
push
pop
jecxz
dec
iret
lods
movsb
dec
cmp
in
call
fiaddl
push
mov
xchg
rorl
imul
add
inc
xchg
out
lahf
fimull
stos
or
jbe
daa
pusha
cmc
repz
dec
enter
add
scas
xchg
repnz
pop
sbb
in
ja
out
push
sub
pushf
iret
int3
adc
or
sbb
js
xor
push
xor
jmp
fnsave
fdiv
inc
inc
js
dec
loope
pop
sub
dec
cmp
lret
imul
add
sbbb
mov
shll
or
push
add
and
rorl
mov
add
sbb
jp
and
hlt
adc
pop
arpl
les
mov
mov
frstor
xor
push
repz
or
mov
inc
lea
jecxz
and
imul
ficomps
xchg
mov
xchg
adc
icebp
cmc
shr
sbbb
es
mov
out
cmp
lret
test
je
jp
xor
mov
stos
push
out
sub
aam
stos
mov
push
scas
mov
in
xchg
in
mov
subl
sti
lea
and
mov
and
int
jle
inc
and
mov
mov
js
iret
icebp
into
pop
into
push
pop
push
dec
xor
jno
insl
or
mov
mov
jle
cmp
fldcw
sbb
imul
and
jo
sbb
lret
in
xlat
add
xor
cmp
and
sbb
mov
fisttpll
andb
cmp
ret
leave
aam
aad
outsl
pop
fsubs
mov
cmp
push
cs
pop
mov
mov
incl
ja
cwtl
xchg
pop
add
mov
shl
movups
test
in
jge
push
dec
push
or
movsl
in
mov
hlt
gs
rclb
mov
adc
push
cli
pop
imul
test
mov
in
sbb
sbb
lods
inc
dec
push
lahf
lret
fisttps
in
leave
jp
lret
or
push
std
pushf
push
jmp
pusha
test
xor
lahf
movsl
test
in
mov
jae
mov
daa
cmp
imul
loopne
andb
xorps
cmp
push
popa
loope
rcrl
mov
push
test
pop
cmc
mov
call
mov
pop
add
xor
jmp
scas
int3
sarl
push
push
adc
add
lret
mov
lcall
jae
incb
fisttpll
xchg
push
or
dec
hlt
mov
dec
sbb
mov
jl
icebp
outsb
xchg
bound
sub
ljmp
in
fsts
add
lods
jb
push
aam
int3
loopne
lcall
jns
orl
fdivrs
gs
jge
mov
sbb
add
fildl
orb
xchg
and
out
adc
fistl
jg
pop
jns
cltd
adc
test
fistl
nop
mov
pop
push
dec
xchg
out
jp
stc
mov
xchg
lret
pop
pop
ds
add
pop
xlat
out
xchg
jo
adc
repnz
inc
enter
ret
test
inc
imul
jg
rcl
mov
cmpsl
lds
cmp
in
push
mov
stos
jge
xchg
mov
dec
jle
jnp
inc
stos
addr16
in
out
jns
lea
add
test
jne
icebp
sub
call
mov
scas
and
movsl
rcll
repnz
lgs
adc
sub
push
mov
jne
addl
push
push
scas
int3
sbb
or
add
loope
andb
jae
stc
ljmp
xor
dec
cmp
add
arpl
sub
scas
sbb
icebp
cs
pop
js
xor
stos
sub
sbb
je
inc
mov
or
iretw
loop
and
push
stc
repz
insl
mov
mov
jb
and
cmpsb
roll
pop
push
sub
rcrb
cmp
rorl
insl
cmp
dec
sbb
ret
nop
imul
les
xor
aam
test
dec
hlt
sahf
hlt
loop
fwait
xchg
push
pop
mov
jnp
ss
push
mov
insb
jl
divl
adc
mov
push
outsl
push
push
fdivrs
jns
adc
js
icebp
pop
subb
mov
cmp
cmp
std
bswap
lods
cli
sbb
loop
mov
pop
into
add
cwtl
testl
int
dec
jno
aad
mov
and
dec
js
aaa
cmp
lret
xchg
cs
stc
outsl
rclw
jle
fnstcw
sarb
add
pop
add
jno
hlt
xor
mov
mov
dec
cmp
push
cli
loopne
insb
push
mov
jae
inc
push
nop
jge
xchg
lods
pop
xlat
or
pop
push
cwtl
fwait
jnp
and
xadd
add
inc
mov
pushf
js
add
into
jl
and
loop
pop
xor
pop
adc
cld
dec
push
xor
jno
rorb
ret
mov
xorl
cmp
jb
cmp
add
cmpb
push
and
ja
call
mov
aas
sbb
push
inc
xchg
scas
push
int
push
pop
cltd
pop
iret
xorl
andl
adc
shll
sahf
and
mov
imul
loopne
adc
jmp
imul
dec
sbb
push
es
out
aas
push
pop
and
stos
mov
dec
add
or
cwtl
out
popa
sbb
lcall
daa
push
sbb
sub
movsb
xchg
cmp
mov
aad
shrl
daa
mov
ss
mov
adc
in
loope
cmpb
in
sub
lock
jecxz
cmp
sub
lock
jne
in
add
pop
xor
sbb
xchg
pop
js
pusha
shlb
push
ljmp
xchg
popa
and
into
xlat
lock
lock
jp
xchg
in
or
or
mov
sbb
mov
sub
jnp
fmull
jl
mov
xlat
mul
mov
fsubrl
push
jg
xor
adcl
jo
nop
mov
push
mov
repz
gs
test
jb
mov
loope
adc
jo
xor
lret
push
lret
loope
das
movsb
inc
xor
pop
sub
pop
stos
inc
pop
in
fwait
mov
loope
loop
pop
inc
sub
xchg
and
fildl
pusha
add
ret
xchg
lahf
dec
loopne
loope
ds
fnstenv
or
push
adc
mov
std
sbb
scas
cmp
js
jmp
jmp
jle
xchg
inc
test
xlat
test
sbb
bound
lcall
jl
lea
repnz
adc
xlat
mov
and
mov
test
cli
sub
mov
cbtw
loope
jo
les
inc
or
pop
pop
in
cmp
mov
popf
push
dec
call
cld
sbb
dec
mov
nop
iret
mov
ds
adc
mov
pusha
xchg
xor
xchg
push
dec
std
cmpsl
cmp
pushf
push
adc
cmpsl
aad
out
sbb
scas
cmp
pop
mov
cmp
fsts
mov
push
mov
lret
mov
popf
adc
daa
pop
pushf
xchg
test
loop
push
out
js
cmp
stos
mov
inc
inc
sub
and
sub
push
dec
add
in
mov
mov
and
lret
sbb
jp
stos
ret
jns
stos
sbb
push
je
icebp
outsb
mov
test
pop
dec
xchg
cmpsb
mov
test
adc
arpl
jl
divl
imul
sbb
cmp
scas
shll
aaa
inc
pop
jg
sbb
in
sarb
dec
xchg
ss
mov
out
add
lahf
dec
cli
or
leave
or
in
adc
sbb
ss
push
xor
stos
sub
sub
nop
es
pushf
push
arpl
mov
lods
loopne
cli
mov
iret
jg
mov
xchg
popa
push
popf
add
ja
lods
movsl
out
jno
add
mov
xor
mov
cs
into
orb
sub
xchg
jae
adc
cmpsb
sbb
divb
fdivrs
cli
in
xchg
das
fdiv
jo
mov
cmpsb
fs
sbb
mov
ret
fs
addr16
test
pop
jmp
dec
call
mov
fdivr
bound
out
insb
ds
jl
ss
mov
xchg
dec
xor
icebp
ljmp
xchg
mov
xchg
mov
outsl
fldt
test
adc
ds
scas
fisttpl
mov
insb
mov
emms
icebp
jo
jo
out
pusha
adc
xor
mov
fldl
fdecstp
jnp
and
mov
bnd
mov
push
lea
cltd
fucomp
loope
dec
push
sar
pop
adcb
xor
shrb
mov
xchg
mov
jb
mov
fdivp
out
inc
mov
repz
daa
mov
jecxz
nop
es
movsb
or
jb
mov
pushl
jp
push
adc
fwait
cmp
mov
fmull
jg
jp
adc
xor
popa
ret
add
cmp
adc
mov
mov
pop
outsb
inc
mov
xor
aas
hlt
sbb
pop
lea
dec
xchg
jae
jb
clc
into
cli
cmpsl
mov
sbb
jg
jnp
sub
jne
xor
and
xchg
mov
push
fimull
arpl
sbb
loope
adc
or
cmpsl
mov
inc
pop
arpl
mov
push
and
jae
and
stos
stos
sub
pop
cmp
std
mov
xor
aas
push
xor
lcall
addr16
lret
cmpsb
les
and
hlt
cld
faddp
or
outsb
insb
dec
pusha
jg
cmp
movsl
add
imul
lahf
or
jb
or
push
loopne
and
gs
popa
sub
test
adc
inc
sbb
cmp
sbb
adc
push
cmp
imul
push
or
mov
push
fiadds
sbb
outsb
push
lret
leave
mov
xchg
nop
loop
xchg
les
inc
push
mov
adc
shll
daa
sbb
cli
arpl
lods
jnp
popl
add
xchg
xchg
xchg
insb
xor
adc
cmp
dec
fiaddl
stc
mov
out
lea
daa
enter
mov
je
adc
aaa
cmc
sti
popf
fmuls
cmp
push
lds
arpl
jge
imul
add
out
lahf
xor
cli
lea
loopne
pop
popa
and
lea
jle
rorl
mov
clc
rclb
xchg
arpl
es
inc
lret
pop
out
jle
daa
inc
scas
ret
mov
std
xchg
xchg
mov
imul
cmp
add
in
lcall
mov
add
addr16
xor
loopne
ja
dec
dec
jp
in
cmpsl
popa
cmp
xchg
icebp
outsb
aas
gs
mov
push
out
dec
dec
cmp
jne
cmp
push
ret
push
mov
insl
sbb
rep
dec
xor
leave
push
xor
arpl
adc
mov
or
pusha
push
sbbb
and
or
push
pop
das
adc
ss
je
push
mov
dec
stos
jno
adcl
cmp
cmpsb
xor
jg
loopne,pt
rcll
xor
mov
sbb
xchg
mov
or
idiv
lods
aam
mov
ja
sti
add
stos
push
lret
jmp
mov
jbe
jb
aam
fwait
inc
pop
outsb
sbbl
sub
sub
fldt
adc
cli
cltd
mov
cmp
add
adc
jbe
fbld
pop
test
add
push
clc
addr16
lret
adc
mov
jae
aaa
mov
jbe
in
mov
and
mov
icebp
ret
arpl
and
mov
mov
mov
rcl
outsb
dec
test
das
add
and
fiadds
loope
lea
pop
mov
je
insw
fwait
inc
lahf
in
das
inc
lds
xor
cmc
dec
shrl
sub
addl
add
ret
mov
cwtl
or
shll
mov
mov
add
cld
lret
sub
pop
mov
addl
pop
xor
push
cmp
sbb
xchg
xchg
jl
int
daa
sbbl
push
pop
xchg
xor
cmp
aad
lcall
push
xchg
dec
sub
fsubl
xchg
inc
mov
pop
xchg
lods
dec
xchg
leave
xchg
popf
in
repnz
sbb
pop
xchg
bound
xchg
in
mov
in
addb
mov
push
lahf
mov
fisubs
pop
lock
pop
gs
outsl
gs
cmp
or
xchg
loopne
inc
jle
sub
ret
pop
and
xor
inc
cmpsl
add
push
mov
cmpl
ret
inc
pop
lcall
cmp
lahf
xchg
out
leave
mov
sti
popf
push
daa
xchg
xor
inc
pop
imul
cmp
sbb
dec
xchg
inc
and
lahf
jne
mov
mov
outsb
adc
mov
push
lods
leave
cmp
sub
dec
pop
sbb
fnsave
cmp
inc
shrb
fisubrl
add
cmp
mov
iret
or
xchg
arpl
lret
jae
popl
sahf
mov
push
inc
nop
daa
clc
lret
cmp
mov
rcl
pop
pop
scas
sub
shrl
dec
bound
les
ficomps
cmp
and
scas
nop
in
imul
pop
mov
sbb
out
and
shll
pop
push
jne
stos
sbb
push
into
ficoms
xchg
xchg
lcall
jge
mov
cmc
gs
adc
popf
sbb
inc
inc
aam
xor
fxch
scas
jne
push
int3
add
sub
addr16
stc
enter
unpcklps
jmp
inc
in
push
mov
mov
loopne
xchg
loope
xor
out
push
pop
js
negb
pushf
mov
pop
and
pop
das
mov
mov
mov
jns
lahf
dec
fisttpl
xchg
insl
cmp
xor
out
rcrl
setnp
adc
or
fst
inc
inc
mov
testb
pop
push
add
push
or
lock
sti
out
mov
sbb
in
das
sub
sbb
adc
pop
mov
pop
mov
sub
jmp
test
mov
pop
jbe
or
push
imul
push
cltd
insl
jo
jp
xor
insl
lret
lret
lahf
addr16
pop
stc
mov
in
lret
xchg
jnp
mov
lds
cmpsl
pop
call
cmp
rolb
pop
sti
outsb
in
xchg
loopne
imul
add
mov
adc
cmpsl
xor
sbb
divb
cltd
movsb
lcall
inc
cltd
pop
cwtl
mov
loopne
dec
xor
cwtl
dec
movsb
xchg
je
mov
in
push
jne
push
jnp
iret
pop
lods
and
fsubrl
aad
inc
jle
cmpl
cmp
cmp
pop
sub
and
jle
adc
bound
pop
bound
out
and
xchg
fiadds
mov
xchg
mov
cwtl
fstps
out
les
pop
jecxz
ss
sub
jecxz
out
movsb
call
xchg
pop
dec
repz
and
push
pop
lods
mov
pop
shll
dec
ret
jnp
movsb
dec
push
cmp
stos
or
aaa
andl
sbb
xor
mov
push
cmp
push
sub
testb
jecxz
add
and
inc
xor
ja
mov
sarb
jne
inc
mull
jecxz
out
mov
and
cmp
insl
add
mov
repz
sub
iret
mov
in
inc
and
addl
loop
lret
and
sub
mov
pusha
xchg
scas
aam
xor
icebp
ficoml
push
inc
add
repnz
jae
orl
cmp
pop
insl
sti
xchg
mov
mov
xchg
fxch
adc
mov
pop
sbb
and
cwtl
lcall
mov
dec
jmp
mov
add
lret
add
push
xor
cmp
mov
cltd
pop
inc
dec
sbb
jnp
aad
and
lret
fstps
and
mov
pop
fisttpll
test
loopne
cltd
pushf
movsl
xor
shll
ffreep
js
adc
jecxz
dec
mov
orb
cmpsl
lea
scas
test
loop
ja
sub
call
pop
cwtl
inc
dec
or
push
sub
xor
jge
dec
cmp
aas
pop
mov
hlt
in
sub
into
adc
fstl
xchg
cmpl
cmp
popa
pop
adc
in
mov
add
aas
xor
into
inc
mov
lcall
mov
adc
xchg
sbb
call
ss
cs
xor
imul
lea
jmp
movsl
icebp
subl
xchg
cltd
insb
pop
aas
dec
scas
cmp
in
popf
iret
sub
add
mov
push
sti
adc
or
les
push
mov
mov
push
pop
fsubp
or
lahf
push
mov
add
jbe
push
outsb
mov
or
dec
push
cmp
cpuid
mov
jno
mov
out
movsl
pop
adc
push
cltd
push
mov
mov
mov
pop
add
pop
scas
mov
mov
rcll
cmc
adc
lcall
sub
nopl
negl
jp
push
adc
add
sbb
pop
repz
mov
ret
mov
pop
dec
or
jecxz
rcll
push
inc
and
cmc
mov
mov
leave
insl
mov
push
jae
fs
mov
xchg
jmp
push
ret
push
mov
inc
das
call
aam
jae
sbb
mov
mov
lea
mov
shlb
mov
fwait
gs
fldcw
sbb
xorl
pop
in
jle
push
xlat
out
or
cmp
xchg
mov
in
pop
out
lret
frstor
cmpsl
div
fnstsw
bnd
scas
lcall
add
dec
add
sahf
in
mov
jne
cmp
xlat
or
in
insb
mov
jmp
pushf
xlat
test
cmp
mov
inc
ljmp
imul
push
dec
scas
in
cli
aad
xor
aam
lahf
xchg
xor
les
imul
add
repnz
cmp
hlt
lods
sti
sbb
shl
jmp
out
mov
jns
icebp
movl
or
popa
movsb
push
dec
outsl
out
adc
or
jns
xor
or
push
lahf
and
mov
mov
loop
jo
lods
mov
push
add
mov
push
push
mov
mov
sub
sub
push
or
das
or
testb
lods
nop
js
jb
int3
jnp
pop
jge
loop
push
and
push
sub
repz
sub
in
and
mov
inc
xor
repz
imul
rolb
xor
popl
cmp
cs
test
repz
int
insb
call
mov
push
movsl
cld
fxam
mov
aam
and
inc
leave
pop
addr16
pop
repz
test
jmp
mov
mov
movsl
mov
ds
inc
repz
or
jnp
stos
xchg
sbb
scas
loope
cmpsb
mov
out
add
jge
sti
pop
movsl
in
push
mov
divl
fs
stos
movsl
xchg
or
popa
movsl
mov
les
jl
mov
mov
in
xchg
dec
dec
int3
xchg
ffree
cs
iret
incl
outsb
fldl
add
inc
negb
push
xchg
mov
addr16
or
mov
gs
ret
rcrb
aad
push
in
and
jmp
jg
rol
mov
mov
mov
pop
jne
pushf
std
and
xchg
test
cmp
clc
adc
adc
push
mov
mov
out
fisubl
test
or
xchg
jne
int
mov
inc
movsb
mov
cmpb
cs
aad
push
dec
movb
into
adc
mov
loop
cmp
js
jmp
sub
loopne
std
out
popf
test
and
lock
in
mov
jg
sub
repz
repnz
notl
std
sbb
inc
dec
xor
stc
jb
cmp
xchg
mov
mov
into
mov
and
packuswb
mov
cmpsb
sbb
mov
pop
and
mov
mov
shll
pop
mov
insl
push
mov
adc
addb
fisttpl
mov
divb
push
cld
mov
rorl
insb
loope
cmp
pusha
mov
pop
insl
popa
test
jbe
repnz
jp
and
sahf
stc
ret
ret
push
jnp
test
pushf
nop
mov
mov
xor
sbb
cld
cld
fmuls
or
jnp
mov
mov
adc
cmpl
outsb
mov
mov
mov
test
xor
fwait
sub
aaa
lea
adc
push
jae
mov
mov
mov
fbld
sub
cmp
ret
mov
data16
xchg
xor
cld
jns
sbb
adc
lea
out
out
lock
pop
scas
cmp
lcall
mov
aad
std
jg
pop
sbb
mull
sub
dec
add
sub
out
mov
lods
mov
mov
mov
and
out
test
cmpsl
popf
cmc
add
aas
in
mov
scas
xorl
neg
stos
fucomp
sar
mov
jmp
or
jle
in
push
inc
or
in
iret
das
mov
pop
xacquire
lea
fidivrs
inc
xchg
enter
mov
push
int
xor
xor
cmp
lea
aaa
sbb
cwtl
push
ds
in
movsb
dec
jnp
mov
insl
sbbl
jb
stc
andl
and
addr16
jecxz
data16
xor
loope
inc
pusha
adc
arpl
cltd
cmpsl
rcrl
pop
sub
mov
pop
ljmp
call
clc
xor
cmp
or
adc
mov
jecxz
int3
pushf
insl
xor
push
sub
popa
mov
xchg
incb
out
insb
jbe
mov
int
mov
jbe
add
xorl
test
add
dec
icebp
rorb
lcall
loopne
mov
shll
cmp
mov
fnstsw
mov
rclb
sbbb
jg
hlt
sub
inc
clc
mov
psrlw
jne
stos
xchg
cmp
dec
outsl
mov
sar
adc
inc
scas
pop
sub
shl
mov
inc
inc
loopne
mov
mov
and
mov
movmskps
xchg
adc
movsb
ret
adc
dec
xchg
mov
scas
push
xchg
xchg
adcl
popf
adc
mulb
mov
sbb
cmp
mov
frstpm(287
and
sub
arpl
pop
imul
and
lock
mov
and
or
sub
pop
das
rolb
push
orb
arpl
testb
ret
mov
mov
int
ljmp
mov
pop
leave
sbb
mov
and
pop
push
ja
loopne
or
mov
mov
and
fistpl
push
and
lock
adc
rol
push
ja
sahf
pop
mov
push
divl
or
or
push
mov
adc
mov
fstl
cmp
rcr
mov
sahf
mov
or
adc
jns
out
adc
sub
mov
pop
push
leave
pop
or
dec
cmp
mov
mov
ret
int3
mov
out
data16
xor
or
mov
nop
xor
adc
repnz
adc
mov
pushf
ror
pop
mov
idiv
xchg
lods
jbe
cwtl
pop
in
dec
rol
sarb
push
adc
cvtdq2ps
add
xor
cmp
ljmp
xlat
in
cmp
in
cwtl
fldcw
sub
push
insl
mov
inc
sbb
and
pop
inc
das
rolb
or
xchg
mov
les
jmp
sub
push
lahf
xchg
mov
pop
in
cmpsb
adc
pop
in
inc
jmp
jb
pop
jnp
les
and
sahf
loopne
sahf
enter
scas
icebp
cmpsb
lret
call
fisubrl
xchg
mov
cmp
lods
mov
cmp
loop
push
sbb
sbb
aad
and
cmp
nop
mov
xor
rcl
lahf
add
not
sbb
into
or
cmpsl
push
mov
loope
lods
fs
add
push
cmc
ds
jge
jno
and
clc
cli
outsl
cwtl
push
mov
pusha
jnp
jno
iret
add
or
fcompp
pop
push
pop
mov
int3
adc
in
jnp
pop
lcall
push
push
adc
mov
and
test
adc
shl
int
jb
adc
popa
xor
xchg
daa
fnstsw
jp
push
mov
or
inc
jae
mov
mov
cwtl
sub
outsl
add
cmc
fldl
inc
bound
dec
cli
scas
hlt
xorb
in
enter
mov
cmpsb
jl
or
jbe
pushf
dec
lock
mov
jecxz
fildll
mov
add
push
or
or
js
das
hlt
mov
xor
mov
push
daa
push
lods
rorl
lret
test
movl
in
mov
push
sub
incb
repz
fimuls
cli
xor
hlt
mov
pusha
pusha
out
and
lret
icebp
test
dec
int
mov
and
shrb
std
ja
mov
mov
xchg
lret
or
adc
mov
inc
mov
cmpsl
adcl
out
fsubs
outsl
lea
xlat
sub
leave
inc
stc
pop
not
dec
movsl
icebp
imul
cmp
mov
add
and
mov
aaa
jne
sbb
mov
xchg
cmp
jmp
clc
rcrl
pop
dec
or
adc
dec
int3
push
dec
cwtl
shlb
cmp
xor
cltd
and
fcomp
into
push
xor
add
repz
cmpsl
push
mulb
ret
test
mov
int
inc
jp
ja
out
xor
mov
lret
add
xchg
inc
push
dec
movsl
dec
test
cmp
jae
loopne
addr16
inc
sbb
mov
arpl
dec
add
jmp
jge
pop
push
jnp
dec
mov
int3
mov
add
ja
pop
inc
outsb
fnstcw
mov
popl
jnp
int3
cmc
das
icebp
popf
test
or
test
xor
jl
ret
popf
fstl
test
imull
pop
sbb
add
xchg
pop
cli
mov
loop
xor
aas
dec
pop
hlt
sub
cmp
shl
lea
outsb
dec
lahf
inc
inc
or
dec
sbb
push
insb
add
ds
jp
stos
mov
movsl
sub
imul
pop
rcrl
sub
popa
fs
adc
add
jno
adc
outsl
out
test
mov
lcall
rolb
jne
xor
xchg
popa
mov
hlt
into
js
mov
lock
nop
inc
nop
xor
fwait
xor
mov
loopne
jnp
std
test
iret
mov
je
cmp
in
movsl
daa
shll
and
mov
fldcw
jno
mov
cmpb
lret
out
mov
cmpsb
scas
stos
add
jmp
jmp
mov
dec
cs
dec
push
arpl
mov
leave
add
fs
or
mov
add
and
mov
or
cmpsb
out
sahf
dec
cmp
jecxz
jns
lcall
xchg
pop
daa
lret
jbe
mov
imul
lods
cmp
lods
mov
and
in
les
mov
aad
sub
jbe
jns
int3
lcall
out
inc
stc
inc
adc
stos
fs
test
punpckhbw
ror
scas
in
outsl
pop
daa
scas
pop
ja
orl
sbb
push
cmp
repnz
push
rclb
jne
lcall
bound
sub
pcmpeqb
jl
js
or
test
cmp
testl
xor
pop
xchg
fimull
pop
pop
cmp
test
mov
mov
ret
adc
out
xchg
testb
sbb
loopne
aaa
loop
in
cmp
and
popa
mov
push
push
sub
jb
cmp
pop
xchg
pushf
cmc
aad
pop
add
ret
or
repz
jnp
int3
mov
lahf
mov
sub
adc
jno
fcmovnbe
sub
dec
mov
mov
ss
xchg
xor
cmp
das
dec
or
rcrb
add
jecxz
mov
mov
fisubrl
jno
and
int3
pop
push
adc
push
stos
or
and
loop
jecxz
rorl
lcall
jbe
xor
ret
push
mov
out
outsl
shll
popf
ss
rorb
aad
rcll
or
ljmp
sub
ljmp
cmp
dec
sub
adc
shrl
ret
and
insl
enter
mov
cs
inc
sbb
popa
cmp
mov
stos
sahf
cmpsl
rcrl
addb
xchg
jle
aaa
mov
bound
stos
push
outsb
adc
mov
aam
outsb
adc
jl
enter
dec
mov
lods
or
xchg
pop
mov
fldenv
jle
lar
jp
std
xor
xor
mov
jp
add
mov
xor
pop
mov
ss
cmpsb
or
pop
popf
cmpsl
bound
mov
mov
mov
enter
xchg
and
cmp
lahf
push
movsb
lods
dec
sbbb
rorl
sub
sbb
filds
idiv
adc
pop
sbb
mov
mov
inc
mov
clc
in
lock
add
shrb
scas
jo
push
sbb
scas
jecxz
adc
pop
jae
ds
xchg
mov
out
fnstenv
in
pop
xor
jg
rcrb
maskmovq
mull
popa
dec
lret
or
loop
pop
rsm
mov
into
enter
and
mov
lret
add
mov
adc
xor
mov
ds
cmp
push
rcrl
out
push
push
mov
inc
xchg
or
xor
jg
dec
cwtl
and
and
sbb
xchg
rcrb
fdivs
mov
and
fwait
inc
jne
jle
mov
pop
ja
fcmovnb
cli
sub
jbe
cmp
js
lods
push
fldenv
jno
int
rolb
cmpsb
fdivs
or
nop
or
cmp
dec
daa
jp
fs
mov
pop
xchg
add
xchg
jo
es
loop
xchg
adc
jge
mov
sub
jae
je
fcmovnbe
mov
push
cmp
cs
jecxz
push
mov
mov
ja
in
or
mov
xchg
mov
lock
xchg
int3
fidivl
dec
lds
jl
adc
icebp
rolb
add
sub
mov
loopne
test
jae
repnz
lods
and
out
and
mulb
mov
daa
pop
xchg
and
lret
lods
push
divl
jbe
rcll
aam
fucomip
add
lea
push
sbbl
std
jns
push
outsl
fstl
sti
jp
ret
pop
push
sarl
adc
mov
adc
fbstp
roll
pop
das
test
mov
mov
cwtl
shrb
jle
mov
dec
sarl
xor
dec
setle
jge
sbb
sbb
icebp
ljmp
inc
xchg
inc
cwtl
inc
or
mov
mov
dec
nop
mov
pop
inc
call
andl
roll
cld
leave
sub
fidivl
jo
inc
fiaddl
in
mov
pop
fwait
ljmp
mov
adc
lcall
and
push
push
fbld
mov
das
and
jecxz
rolb
mov
imul
sbb
mov
icebp
push
cmp
and
rorb
jb
mov
add
xor
ja
lret
jnp
mov
fnstenv
dec
xchg
clc
jnp
cmp
and
ss
pusha
hlt
cltd
mov
imul
cmp
mov
lret
cmp
paddusb
outsb
cmpxchg
pushl
jle
sub
fnsave
pop
xor
std
call
shll
shr
mov
inc
xchg
cmp
sbb
push
loop
push
sarl
out
cli
xchg
jl
mov
dec
and
loop
ja
imull
jg
jnp
in
lock
and
add
aam
scas
data16
dec
inc
xchg
out
inc
push
daa
arpl
sbb
jl
lock
cld
add
add
jb,pn
cli
mov
mov
sub
adc
xchg
jnp
sub
sarb
fldl
sub
mov
sub
push
outsl
mov
dec
in
shlb
jb
mov
iret
nop
rcll
mov
outsl
jns
pusha
sbb
rcpps
xchg
loopne
dec
sbb
stc
cmpsl
sub
cmp
and
movsb
xchg
add
rclb
push
or
pop
xor
xchg
sub
in
leave
xor
fs
xchg
push
outsb
and
sub
jns
push
test
mov
inc
fabs
xchg
xor
pop
mov
lret
lret
dec
mov
dec
fnstenv
daa
dec
mov
ds
mov
shll
dec
push
js
dec
in
xor
leave
dec
and
push
pop
hlt
cs
ss
jae
fwait
cli
bound
mov
popa
inc
add
xchg
jg
cmp
xor
dec
mov
jne
aaa
inc
pop
cmp
push
jecxz
jle
icebp
ljmp
daa
jge
sahf
cmp
push
mov
add
or
cmp
mov
and
sub
data16
mov
int3
mov
jmp
jle
dec
sbb
mov
outsl
mov
pop
jne
xor
pushf
xlat
mov
jp
jno
add
nop
sbb
aas
shrl
stos
leave
in
jo
pop
flds
cld
in
hlt
mov
xchg
test
jecxz
fwait
mov
and
xchg
sub
xor
jae
das
movswl
pushf
outsb
sarl
push
je
jecxz
repz
jmp
push
movsb
in
sbb
mov
mov
insb
xchg
or
pop
jge
add
ds
pusha
mov
cmp
mov
sbb
cs
aad
cmp
sbb
popf
or
xchg
test
fstps
inc
mov
pop
pop
cld
in
mov
pusha
das
dec
fs
lcall
scas
jae
lds
lahf
or
in
repz
lea
and
and
and
shrb
or
push
jae
push
adc
ss
mov
addr16
cwtl
clc
loope
lods
push
push
lds
push
outsl
xchg
cmp
ret
addr16
out
xor
sub
jmp
fsubp
add
xor
imul
xlat
sbb
outsb
jmp
sbb
cld
xchg
test
dec
scas
arpl
je,pn
xchg
jne
sub
aam
clc
sti
pop
sbb
xchg
cmp
pushf
les
dec
aad
test
test
or
or
and
insb
enter
imul
push
aaa
call
pusha
clc
enter
mov
jmp
sub
jo
mov
xchg
mov
add
mov
xor
push
dec
inc
dec
mov
mov
jge
test
add
pop
sbb
clc
jge
cmp
cmpsl
pusha
imul
or
outsl
inc
xor
aam
push
jmp
movsb
cs
xchg
pusha
add
insb
es
mov
cld
shlb
bswap
fists
or
mov
jmp
push
mov
daa
mov
sub
sbb
mov
bound
fmuls
xor
inc
lret
cmp
cs
push
in
sub
xor
iret
cmpsb
aad
scas
out
subb
andl
pop
push
js
les
jo
cmp
xor
std
out
pusha
leave
push
add
mov
pop
jecxz
and
out
data16
into
ja
push
das
inc
out
sub
cmc
pop
push
aad
and
push
mov
jmp
and
add
lock
outsb
adc
push
cmp
push
lcall
loopne
cmc
cmp
mov
int
rcrl
je
dec
mov
sahf
or
and
leave
iret
pushf
cmp
push
fadds
hlt
pop
cmp
sti
add
pop
aad
mov
sub
pushf
inc
pop
mov
and
addr16
das
xchg
pop
jg
push
cmpsb
es
inc
mov
jp
dec
imul
rol
out
gs
scas
xchg
inc
subb
sahf
and
aam
mov
repz
leave
test
loope
xchg
in
cmp
rcl
test
cltd
ret
out
lret
addr16
ret
jmp
mov
aad
xchg
lds
arpl
and
in
in
jns
into
je
cmp
mov
addr16
sub
popf
xchg
loopne
xchg
and
int
test
imul
pop
cmp
fidivl
shlb
jmp
or
pushf
mov
imul
adc
cld
or
ss
lret
mov
sub
sahf
aas
add
je
or
adc
andl
sti
or
cmp
mov
mulb
jmp
dec
ret
dec
cmpb
arpl
fsubs
pop
cmpsl
and
add
aam
mov
cmp
jae
mov
mov
fisubrl
dec
sub
mov
cmp
adc
mov
hlt
cmc
lock
inc
xor
adc
push
adc
je
lret
add
cmp
push
jmp
adc
out
xchg
add
or
rcrl
aad
or
or
cmc
add
fsts
in
pusha
cltd
dec
jp
cwtl
sub
mov
jne
lods
or
or
push
cs
mov
jle
cmp
add
sub
call
mulb
sub
mov
lock
hlt
jle
ret
push
xlat
xchg
fucom
mov
add
loop
inc
fistl
insb
pop
stos
iret
ret
test
daa
inc
mov
call
adc
mov
pop
sarl
fucomp
mov
scas
sub
mul
mov
repz
pop
dec
adc
mov
dec
addr16
xchg
scas
cmpsb
fnstsw
repz
inc
and
in
stc
es
out
adc
out
push
lret
xor
push
or
xchg
stc
cmovg
push
add
mov
mov
or
jae
pop
outsl
xchg
mov
ljmp
dec
jns
shrl
xchg
jg
ja
cmp
repz
pop
hlt
movsb
mov
or
fs
ret
ds
and
pop
sub
ss
xchg
jno
imul
cmp
mov
xor
je
jno
cltd
cld
adc
xchg
das
mov
inc
jbe
and
xchg
xor
xchg
repnz
lods
push
push
fwait
sbb
xchg
cwtl
inc
sub
xor
test
cmp
cmpsl
xor
lock
daa
fs
sbb
pop
clc
int
pop
sub
xchg
jb
add
sbb
or
sarb
and
pop
lods
mov
push
adc
test
outsl
popf
cwtl
dec
add
mov
out
jl
shlb
adc
adc
insb
xor
loop
into
adc
cmp
dec
jnp
mov
jbe
xchg
lahf
int3
pushf
mov
add
pop
popa
addb
sbb
mov
inc
xor
int3
nop
dec
xor
loop
aad
mov
or
mov
ret
arpl
mov
cld
test
int3
pop
cmp
jl
popa
pushf
lret
gs
popf
arpl
sahf
xchg
roll
fisubl
addr16
dec
imul
or
mov
jne
imul
and
xor
jbe
nop
mov
insb
cmpsb
dec
imul
mov
adc
mov
adc
mov
mov
insb
jge
lahf
xlat
sbb
xor
cli
fimuls
divl
mov
or
jl
sbb
mov
or
push
lea
imul
and
loop
adc
jecxz
jmp
fbld
cld
pusha
cmp
and
stos
stos
adc
out
test
bnd
push
leave
lret
jecxz
sbb
fwait
ja
stc
pop
jp
mov
jns
inc
push
std
mov
lods
adc
mov
shlb
adc
int
rolb
lret
adc
outsl
push
pop
stos
dec
dec
push
sbb
stc
out
jge
pop
jge
mov
mov
sbb
cmp
ror
add
iret
aam
pop
xlat
leave
xlat
call
mov
enter
leave
int3
ret
test
into
xchg
push
or
sbb
sbb
mov
lock
add
jae
mov
sub
pop
xchg
inc
push
mul
xchg
lret
in
xor
out
das
insb
jmp
aam
test
repnz
sub
sub
lds
mov
xchg
scas
addr16
mov
push
ret
test
lods
ret
in
add
cmp
iret
xchg
hlt
mov
adc
lcall
push
lock
push
cli
mov
sahf
sahf
or
inc
fildll
or
xor
inc
or
add
fucomip
insl
cltd
pop
fistl
push
dec
fs
push
testl
xor
insb
leave
adc
jno
push
mov
adc
mov
or
mov
mov
xchg
loope
ret
xor
shlb
loop
je
lahf
out
cmp
clc
mov
sbb
bound
mov
inc
fnstcw
cmp
mov
push
jg
test
fdivl
mov
and
shl
sub
xchg
jge
popf
add
stc
adc
ffree
insl
xchg
bound
sbb
or
iret
lahf
mov
jno
push
mov
fdivp
test
add
pop
jecxz
sbb
add
xor
scas
ss
mov
dec
lcall
mov
pusha
pop
xchg
jge
fnstsw
inc
add
popa
outsl
int
add
imul
ret
mov
repnz
xchg
cld
xchg
stos
sub
pop
push
arpl
and
flds
push
xchg
jecxz
mov
pushf
cmpsl
aad
popa
inc
lret
icebp
ss
and
iret
sarb
inc
ret
test
jp
xor
lret
dec
xchg
lret
adc
dec
mov
fyl2xp1
mov
push
push
stos
push
jbe
mov
fidivrl
mov
sub
mov
mov
xchg
ret
push
adc
inc
hlt
xor
into
inc
lea
cwtl
cli
or
dec
xorl
mov
das
cltd
test
stos
leave
aam
cmp
icebp
scas
add
aad
stc
out
imul
pop
sahf
loop
xchg
rcrb
add
gs
mov
aam
sub
sub
push
rol
cld
pop
dec
lcall
test
cmp
and
xor
pop
push
mov
cmp
mov
hlt
test
push
jbe
test
xchg
or
mov
xor
orl
scas
mov
sahf
push
jl
and
jge
pop
xor
or
mov
nop
hlt
clc
fwait
arpl
rcll
shlb
xor
jl
push
into
sub
jmp
mov
cmp
sub
dec
xchg
mov
or
or
sbb
insl
adc
pop
cwtl
xchg
test
cmpsb
cmc
and
roll
inc
aas
rcll
aas
push
mov
xor
stc
fistl
mov
mov
xchg
hlt
dec
lods
push
sti
rorb
cmc
push
lock
int3
jb
sub
or
inc
fwait
rorb
sub
test
shll
into
mov
je
aam
test
jmp
addb
and
ljmp
test
ret
pop
inc
stos
mov
arpl
call
push
aas
or
jp
imul
sub
add
jne
inc
lcall
xchg
jecxz
mov
loope
stc
hlt
xor
pushl
cli
jmp
push
int3
cs
gs
cmp
jge
enter
dec
xor
and
dec
xor
add
jne
aam
mov
mov
test
les
loopne
mov
fs
mov
cmp
or
pop
pop
mov
push
mov
inc
sub
loope
mov
daa
inc
inc
jge
cmpsb
or
mov
inc
jmp
pop
test
rorb
rorl
pop
sub
sbb
adc
jnp
into
fwait
sub
test
lds
sub
mov
xchg
dec
and
loop
pop
push
mov
insl
push
dec
pop
xor
loop
fwait
cmp
xchg
mov
and
adc
sti
test
lcall
shrl
lret
lds
addr16
fs
sahf
and
shlb
and
cld
add
adc
cvtps2pi
cmp
mov
ds
lret
push
xchg
ret
lahf
lods
jmp
fldt
int
push
dec
xor
dec
fsubs
xchg
test
cs
cmp
shr
pop
lret
sub
fidivs
outsl
mov
jb
push
jb
int3
pop
sub
or
popa
push
int3
pop
jle
scas
out
mov
mov
xchg
xchg
rcr
and
mov
in
loopne
or
arpl
lret
loope
xlat
jae
std
adc
mov
stos
jne
cmp
and
shl
sti
data16
lods
cli
mov
test
jle
cltd
sbb
adc
es
das
or
les
mov
cmp
lods
push
jp
dec
ds
push
cmp
mov
lcall
sub
not
dec
or
loop
in
incb
call
enter
jns
or
popf
xchg
and
ljmp
nop
repz
ljmp
int
mov
jle
movsb
xchg
jp
mov
ret
dec
repnz
adc
push
cmp
and
mov
lock
lret
mov
lock
dec
add
fwait
fs
in
push
lret
push
jp
ficomps
and
arpl
dec
sti
les
push
aaa
aad
repnz
int
lds
test
add
cmp
stos
cs
insb
int3
pop
pop
jle
push
jp
into
jo
mov
add
aaa
je,pn
fwait
mov
sarb
call
and
inc
dec
push
cltd
adc
andb
cwtl
xlat
das
inc
xor
repnz
out
add
lret
fwait
push
inc
ljmp
push
lods
jle
mov
scas
and
bound
jmp
dec
outsl
rcl
jne
decl
xor
xor
adc
pop
jl
out
mov
mov
fsubrs
mov
ds
jmp
jle
fwait
ss
in
dec
test
repnz
dec
andl
xor
repnz
and
fdivrp
mov
adc
fldcw
add
jae,pt
cmp
xchg
or
cmp
inc
ss
rcrl
divb
jae
push
pop
out
jecxz
add
push
das
adc
sub
clc
jle
adc
out
cmpsb
rcr
push
scas
jge
rcr
cmp
pop
sar
cmpsl
xchg
data16
or
ds
rclb
out
mov
cmp
dec
inc
insb
mov
mov
jmp
in
pop
cld
scas
iret
mov
dec
mov
loopne
lods
imul
insb
push
mov
int3
xchg
mov
int
cmc
lcall
std
mov
inc
outsb
sahf
es
leave
fldt
adc
mov
mov
incb
call
dec
inc
dec
pop
cld
ret
std
sti
mov
lods
pop
hlt
push
xchg
mov
out
int3
inc
mov
shlb
jns
js
mov
xchg
cmpsl
sahf
jo
push
inc
mov
jb
mov
mov
push
test
call
sbb
inc
add
fsubs
in
cmp
mov
cmpsl
imul
repz
sbb
test
push
ret
movsl
push
add
int
cmp
xchg
pop
rorb
mov
mov
xor
leave
xorl
out
mov
lea
cmc
lods
int3
je
jmp
lods
xlat
cld
adc
subb
int3
dec
out
mov
gs
out
xchg
jge
outsl
pop
shl
rcll
rclb
daa
jmp
jecxz
test
push
push
push
sub
in
mov
sub
inc
lret
jnp
jg
out
mov
cmp
adcl
loopne
test
fs
addr16
xor
mov
sub
push
ds
or
ss
cmp
in
adc
dec
jbe
cmpsb
lods
push
clc
aaa
ljmp
out
adc
pop
or
int3
jne
lock
lds
ret
mov
mov
call
inc
dec
push
gs
mov
inc
lds
mov
xor
inc
mov
bound
xor
movsl
pop
push
jne
mov
in
lea
push
jae
cmp
std
inc
sub
mov
lret
sbb
push
push
rolb
xchg
pop
insb
rclb
jmp
add
mov
jbe
test
test
mov
dec
clc
movb
pop
insl
mov
iret
sub
mov
call
adc
xchg
std
loope
mov
inc
popf
cmp
fsts
xor
ja
jmp
xlat
add
jg
xchg
sbb
mov
add
xchg
pop
in
int3
xor
push
cmpsb
inc
sbb
addr16
into
xor
addr16
mov
mov
es
inc
sub
pop
adc
sarb
pop
arpl
inc
lret
mul
cmp
dec
adc
stos
je
jns
xchg
sub
jne
mov
add
dec
push
outsl
xchg
rclb
mulb
or
adc
push
out
or
lods
sti
sarb
cmpl
sbb
fsub
xchg
ja
insl
push
push
or
rorb
and
sbb
mov
dec
das
mov
imull
mov
add
push
arpl
sub
movsb
cld
push
lahf
xchg
imul
xor
mov
inc
ljmp
lcall
xchg
icebp
xchg
idivb
stos
ss
and
pop
or
out
and
daa
cmp
sub
pop
or
xchg
mov
xchg
out
leave
call
sub
testb
movsb
push
mov
ss
ja
js
lods
fs
pop
pusha
push
imul
and
jge
test
ret
mov
cmp
out
enter
xchg
enter
cmpb
xchg
into
cmc
ret
push
scas
cmp
ret
stos
repz
stc
xlat
imul
test
rcll
sub
xchg
cltd
push
push
fmul
popa
mov
shll
xchg
add
call
sbb
xchg
dec
add
ret
adc
cmp
pusha
lds
xor
mov
jle
aas
mov
iret
mov
fisubrs
out
push
aaa
and
inc
cmpsl
test
outsb
dec
loopne
pop
pop
adc
jg
mov
divl
mov
jo
xchg
gs
dec
xor
dec
popf
mov
cmpsl
lahf
scas
shlb
andb
inc
cmp
sub
mov
xor
sub
xorb
inc
cmp
mov
lods
mov
insb
inc
mov
jbe
lds
cmpb
insb
out
addl
hlt
xchg
fstps
push
jp
insl
aam
mov
bound
mov
imul
mov
push
lock
mov
mov
gs
add
popf
stc
or
sub
mov
pushf
out
cwtl
mov
imul
sahf
jle
daa
mov
dec
es
push
xlat
lea
pop
jno
fcoml
and
lds
pop
aad
jnp
fistpll
movsb
testl
fisttps
xchg
cmpsb
xor
mov
xlat
mov
push
cmp
pop
sub
imul
push
lds
mov
mov
push
call
roll
xchg
push
inc
mov
xchg
rclb
dec
mov
jo
ficomps
imul
es
aas
pusha
sbb
and
push
jno
xchg
mov
and
sbb
mov
pop
lret
aad
sub
test
inc
mov
pop
mov
adcl
popf
pop
lock
sub
add
xchg
enter
push
std
push
xchg
daa
div
cld
fisubs
or
cltd
test
mov
pop
jp
dec
pop
add
lds
sub
out
ja
add
jp
loopne
sub
lea
ja
jbe
leave
mov
js
sbb
stos
pop
cmc
sbbb
cmpl
nop
mov
int3
jle
ja
out
xchg
dec
pushf
add
pop
sub
fs
stos
xor
icebp
dec
out
call
shlb
in
mov
pop
pop
cmp
lods
sub
and
fldenv
mov
fmuls
rol
mov
mov
sbb
idivb
push
mov
into
rorb
pop
or
xor
movsb
adc
test
jl
sbb
pop
lds
dec
sbb
push
jae
orl
xor
pop
and
and
lahf
xlat
xor
xchg
adc
lods
sub
push
push
push
fmul
movsb
ret
data16
mov
xchg
lea
loop
repz
mov
inc
insl
xchg
pushf
push
xor
leave
inc
ja
or
lock
jb
jno
ffreep
hlt
repz
stos
sbb
arpl
adc
pop
and
xchg
ljmp
adc
jp
addl
sbb
push
or
lret
loopne
xor
dec
iret
sub
rcrb
aaa
add
jne
add
imul
inc
dec
dec
imull
xor
mov
push
mov
pop
je
loopne
rclb
stos
mov
sub
cmc
std
mov
lahf
testb
enter
jmp
ss
mov
aas
xchg
aam
or
cmp
push
push
add
pusha
lret
aaa
fbld
or
stos
mov
mov
hlt
cmc
cmp
push
adc
mov
push
jecxz
xchg
cs
add
inc
mov
xor
ficoml
sti
sub
out
xchg
aad
sub
mov
test
dec
mov
out
sarl
shr
loope
lahf
mov
dec
addb
xor
aaa
add
cmc
mov
dec
pop
push
pop
mov
xchg
jp
inc
sub
dec
mov
in
xchg
mov
sub
jb
cmp
sub
mov
dec
xchg
lret
xchg
push
and
sbb
aam
stos
sarl
fwait
push
xchg
and
pop
js
lahf
ret
push
jp
dec
scas
es
scas
or
out
fsubrp
mov
push
loopne
or
adc
dec
loope
and
cmpsl
sbb
test
imul
notl
add
or
pop
lea
shll
xchg
or
es
sub
adc
cmp
pop
dec
jmp
rclb
xchg
ljmp
es
jmp
mov
les
mov
add
pop
adc
mov
scas
pop
ret
rorb
aad
aam
sbb
pusha
flds
lods
jl
sbb
mov
sbb
test
cwtl
mov
loop
dec
repnz
jmp
jecxz
or
mov
sbb
inc
sub
add
sarb
faddl
xor
add
dec
pop
mov
add
bound
fwait
stos
xchg
add
sbb
out
jns
stc
aad
pop
jge
dec
int
movsb
xor
push
mov
dec
lret
rclb
mov
xchg
jnp
sbb
mulb
dec
icebp
jb
cmpb
outsl
and
lret
push
lods
lahf
pop
and
xchg
ljmp
fwait
fs
cmp
inc
xchg
fildl
lcall
imul
ljmp
lahf
jle
nop
icebp
mov
int
iret
sub
out
orl
nop
push
sub
out
and
pop
mov
int3
in
mov
pop
or
adc
sub
pop
and
jle
jno
push
push
test
out
rorl
mov
inc
jl
aad
cwtl
rcl
dec
mov
adc
js
pop
sub
push
push
mov
lcall
xchg
dec
mov
mov
jbe
xor
shrl
and
cmp
sbb
pusha
mov
call
ret
scas
pop
push
cmp
sub
adc
push
inc
push
pop
mov
outsb
dec
mov
ja
imul
mov
lds
pop
fstps
xchg
rcrb
outsl
jne
bound
ljmp
movsl
push
shlb
mov
fs
push
mov
scas
rcrb
and
imul
adc
ret
sbb
sti
enter
inc
mov
push
adc
cmp
mov
bound
scas
xor
aad
outsb
and
outsb
stos
dec
jns
mov
push
inc
dec
pusha
jg
or
xor
in
sbb
lds
out
xor
std
std
js
inc
in
repz
jb
lock
cmpsb
push
pop
clc
int
dec
xchg
std
dec
dec
lahf
xchg
daa
inc
cmpsl
jge
sbb
shrb
clc
xor
mov
std
jl
ss
push
sar
sti
enter
cs
clc
ss
mov
push
add
jmp
fstps
loopne
push
movsb
inc
data16
mov
test
jmp
leave
xchg
or
xchg
frstor
inc
sbb
xlat
mov
sahf
fsubs
ficompl
out
out
test
movsl
dec
mov
push
add
xor
inc
sbb
dec
mov
dec
lock
popa
sbb
out
push
mov
cmpl
jecxz
pushl
xchg
push
mov
aad
sub
add
pop
pop
mov
push
frstor
xchg
dec
popf
sbb
std
loope
pop
push
test
imulb
add
lcall
fildl
cmc
inc
xor
dec
shrl
jne
ficomps
and
hlt
mov
icebp
jne
sbb
push
pop
jns
jp
xor
xchg
nop
fidivrl
mov
xor
adc
inc
daa
push
dec
sbb
jecxz
xlat
or
iret
mov
fstpt
fwait
adcl
hlt
imul
aam
add
lahf
outsl
faddl
lods
dec
push
jnp
xor
clc
nop
sbbl
or
pop
push
xchg
cmc
push
icebp
outsb
mov
adc
movsb
add
jp
outsb
rorb
or
jecxz
adc
dec
cwtl
add
mov
leave
enter
sub
ds
mov
cmp
lea
cld
rorb
das
push
jecxz
add
ja
mov
cli
int
scas
or
inc
push
and
push
leave
sub
fstps
sti
push
cltd
mov
fmull
das
in
les
dec
sbbb
aas
pop
or
sub
mov
jle
add
mov
test
fstpt
and
test
iret
jae
cmp
jge
lds
iret
or
xchg
mov
adc
pop
add
stos
into
xchg
jle
pop
adc
ret
addr16
and
cmp
push
aas
icebp
xor
fildll
dec
mov
pop
fsub
jp
sbbb
mov
out
dec
negl
inc
dec
loop
js
iret
je
mov
push
in
mov
mov
dec
fwait
aam
mov
daa
ja
mov
or
mov
nop
dec
sub
in
mov
fstpl
or
dec
fisubs
mov
and
jbe
pop
fstps
mov
scas
mov
cmp
stos
xchg
xlat
jo
es
cmp
rclb
shll
clc
insb
call
mov
fistl
rcrl
hlt
push
mov
sub
xchg
push
addb
pop
sub
in
in
inc
rclb
fadds
sbb
inc
stos
in
les
addr16
mov
cli
adc
and
pop
cmpsb
notb
xchg
sub
scas
jbe
insl
xor
movsl
mov
and
mov
xor
sbb
jne
xlat
inc
fs
mov
ljmp
xchg
jo
pop
out
out
shrl
movsb
add
fdivs
lret
inc
cs
pop
in
jmp
inc
ljmp
cmp
insl
adcb
inc
push
popa
sub
idivb
daa
gs
sbb
adc
mov
popf
inc
movsb
imul
push
cld
lock
das
scas
mov
lret
sub
sbb
mov
or
xchg
adc
mov
fs
aaa
pushf
xchg
test
jecxz
pop
push
jno
jnp
and
in
addr16
or
js
adc
inc
cs
mov
hlt
stos
test
push
fcomp
mov
adc
mov
enter
mov
stos
addr16
in
stos
xlat
pusha
lcall
sub
adcb
xor
xor
mov
scas
inc
lods
dec
cmc
and
sub
sub
mov
lds
pop
jg
call
lods
dec
xor
dec
xchg
lret
notb
inc
sbb
popf
xchg
imul
push
daa
xor
cli
push
aaa
or
jecxz
mov
cs
pop
dec
in
dec
mov
push
mov
lds
add
fcom
mov
test
pop
mov
sti
add
dec
or
lea
mov
sbb
iret
fwait
dec
test
sub
stos
add
iret
sti
pop
sti
dec
lds
fcomps
shlb
and
pushf
jecxz
xchg
sbb
sbb
call
loopne
xchg
jl
insb
mov
mov
jmp
cltd
cli
stc
sbb
out
ret
push
inc
mov
aam
lret
shl
fdiv
fdivl
ja
sahf
ret
push
lods
jae
mov
jge
bound
lea
inc
xchg
cli
gs
adc
sub
pop
aam
mov
cmpsb
adc
repnz
sub
pop
scas
popa
js
dec
jmp
data16
mov
xor
out
cmp
or
imulb
mov
int3
mov
mov
cmp
xchg
mov
mov
sete
jb
sub
jne
jb
or
inc
mov
cs
js
xchg
ds
jle
movsl
movsl
mov
sub
xor
adc
jmp
enter
sub
adc
out
push
jge
mov
sbb
fidivl
test
repz
outsb
cmp
and
aas
sbb
xor
mov
cli
adc
bound
mov
dec
cmp
jne
pop
mov
sahf
mov
mull
inc
sbb
inc
cmp
dec
inc
pop
xchg
mov
orl
sub
rclb
imul
mov
mov
cmp
sbb
lret
aad
or
inc
lret
push
divl
insl
pop
mov
mov
addr16
sbb
push
adcw
popf
es
cli
dec
add
insb
xchg
adcb
add
sub
push
cmp
mov
xchg
mov
aam
movsb
cmp
in
adc
inc
aas
inc
add
ss
push
test
lods
jp
imull
or
fisttps
xchg
add
ss
mov
fucomp
movsl
inc
insl
mov
ret
addr16
mov
aaa
imul
sbb
cmc
and
mov
test
add
popf
fsubs
int
dec
pop
pop
test
movsl
mov
add
pop
pop
ja
push
ja
rcrb
in
rcl
pop
and
push
insl
psubb
out
ja
xchg
in
and
mov
adcb
cli
test
xchg
or
jg
pusha
aam
pop
pushf
aam
push
mov
cmp
scas
shl
scas
xlat
pop
insb
xor
mov
mov
insb
xor
cmp
mov
adc
pop
cmpsl
pop
pop
shlb
xor
popf
lret
pop
or
dec
shrl
addr16
out
les
add
subl
rolb
fldcw
xor
out
loop
cmpsl
mov
mov
push
add
jnp
lods
or
in
lret
test
jmp
mov
sbb
xlat
mov
push
nop
mov
push
mov
inc
adc
hlt
aas
lock
push
shll
push
jns
or
add
jns
jmp
lret
mov
or
or
subb
and
jmp
stc
movsb
in
lock
cmpsl
inc
mov
daa
es
rclb
movsl
sahf
cmp
dec
loop
into
xchg
xor
push
fnstenv
sti
jae
xchg
jbe
sti
test
outsl
jae
or
repnz
movsb
mov
mov
adc
movsb
pop
dec
lods
jb
test
jbe
jge
jnp
xor
in
push
int
push
aaa
iret
ss
inc
cmp
xor
icebp
inc
stc
mov
pop
dec
cmp
cwtl
cmp
fcomp
icebp
mov
and
add
ficoms
sub
mov
pop
iret
push
push
cwtl
and
adc
into
pop
in
push
push
fwait
das
or
pusha
sbb
rclb
cli
push
sti
add
sub
lds
cmp
adc
jge
mov
frstor
adc
push
mov
mov
jge
xchg
aaa
leave
ss
cmp
mov
fdivs
aas
adc
movsb
aad
push
adc
cmc
mov
in
pop
inc
mov
pop
andl
fcmovne
adc
sbb
popa
inc
cmp
add
add
push
fnsave
add
orl
and
xor
sbb
mov
and
xchg
lea
imul
imul
leave
in
mov
lods
in
jbe
pop
fs
jnp
andb
rclb
fiadds
pop
dec
pusha
and
lcall
cwtl
xchg
popa
sub
lds
jo
int3
pop
mov
dec
ljmp
mov
xchg
jge
aaa
lcall
cs
stos
mov
dec
mov
pop
lret
jbe
jl
in
popa
leave
jbe
in
iret
mov
lahf
xchg
lods
or
in
dec
rolb
inc
das
cltd
ret
rep
dec
push
insl
and
rcr
or
jl
daa
rcll
jle
pop
jno
or
adc
arpl
jns
inc
ljmp
inc
mov
mov
stc
pushl
hlt
jmp
sahf
in
xchg
xchg
sub
fs
or
fistpll
sbb
and
sti
into
or
push
jle
pop
stos
and
sbb
data16
inc
test
jp
adc
outsb
clc
mov
lods
fiaddl
inc
jae
or
or
out
sbbb
mov
fists
and
fildl
ss
xor
dec
cmp
ret
pmuludq
jmp
scas
push
jns
decb
out
xorl
xchg
cs
scas
std
mov
rclb
mov
cmp
and
adc
sub
inc
mov
mov
stos
rcrl
lret
mov
bsf
xor
dec
jge
cs
inc
int3
loop
adc
jb
mov
and
popf
push
in
push
hlt
push
out
fsubrs
cmp
inc
enter
orb
and
or
stos
test
or
fs
leave
mov
ret
das
sbb
nop
test
push
add
ficompl
mov
jmp
gs
fwait
xchg
pushf
add
outsl
adc
cwtl
stc
lds
lods
pop
mov
xor
popf
cs
das
jmp
popl
mov
push
inc
xchg
mov
filds
movsb
cmpsl
bound
jae
xorb
cmc
pop
sbb
aas
push
sbb
sbb
inc
sub
dec
aad
mov
mov
xchg
movsb
mov
inc
cmp
push
ja
das
add
nop
sub
mov
aad
mov
xchg
cmp
sarl
pop
repz
inc
int
jle
sub
in
mov
inc
dec
popa
and
sub
leave
cmp
stos
call
sti
vsubpd
mov
adc
mov
pop
pop
cmp
add
in
push
and
adc
fsubrl
cmp
jo
pop
xchg
pop
mov
into
stc
push
jmp
pop
adc
add
or
jp
dec
into
adc
push
lods
loope
lea
inc
sti
inc
add
ljmp
xchg
pushf
leave
pop
shll
sbb
insb
out
jg
rolb
mov
mov
sbb
pop
cwtl
dec
push
and
push
jbe
data16
test
iret
lret
push
mov
scas
in
sub
push
and
out
inc
call
mov
cwtl
movsb
fcoml
cwtl
rcr
fistl
push
aas
pop
data16
divb
lods
pop
movsl
or
lock
iret
fs
inc
jae
ljmp
lds
into
jg
andb
sti
mov
lea
or
stos
jge
push
addr16
adc
push
pop
jbe
xchg
and
mov
dec
mov
js
aad
fstps
or
mov
aad
and
cmc
mov
shlb
push
jns
fsubp
pop
push
in
mov
mov
mov
jg
push
pop
xchg
xchg
sbb
addr16
std
inc
push
or
sub
insl
movsb
out
pop
xor
sbb
jecxz
jp
and
or
je
sbbl
xlat
aad
and
add
test
and
add
pop
scas
nop
dec
add
mov
decl
mov
pop
push
mov
xlat
or
fcomip
addr16
subl
cmp
leave
pop
hlt
push
pop
enter
ret
outsb
sti
clc
mov
das
lahf
repnz
repnz
iret
push
jg
xor
push
cld
push
cmpsl
nop
mov
jns
icebp
fnsave
cli
loopne
mov
repz
jle,pt
push
ret
out
nop
cmpsb
stc
inc
imul
fcomp
decb
jbe
push
pushf
enter
aad
mov
cmp
adc
ja
cmp
cmpsl
cmp
outsl
bound
pop
aas
and
addl
loopew
dec
mov
outsl
sbb
roll
mov
sub
insl
jl
mov
aam
mov
mov
out
lods
clc
pop
sub
loope
and
mov
lea
stc
idivl
sbb
sbb
lea
cs
outsl
dec
or
fs
cmp
mov
lret
test
fsubl
fidivrs
or
out
push
push
test
mov
cvttps2pi
xchg
mov
fdivrl
hlt
sarl
mov
pop
inc
stos
pushf
insb
cli
xchg
sub
and
rol
popa
jp
xchg
and
adc
xor
mov
xor
repnz
jp
mov
pop
ljmp
rorl
scas
pushf
or
pushf
lret
mov
jbe
out
sbb
test
sbb
mov
pop
sub
mov
cwtl
aam
aam
adc
add
ret
dec
les
cltd
mov
loop
movsl
sbb
xchg
xor
test
pop
ja
mov
xchg
ljmp
jge
outsl
das
ljmp
inc
jne
out
add
aam
or
mov
sbb
and
jns
mov
mov
push
dec
xchg
dec
mov
out
push
arpl
cmp
dec
mov
mov
popf
pop
jo
in
loop
addr16
sub
js
cmp
xchg
loope
adc
lret
dec
jno
add
xor
fstpl
lea
jp
adc
popf
cmp
aas
sahf
shll
add
sahf
cs
jno
mov
add
xor
add
mov
pop
stc
enter
jne
nop
jl
jne
movsb
jo
sub
dec
pop
enter
adc
mov
adc
xchg
faddl
inc
sub
sbb
mov
jmp
repnz
mov
adc
hlt
leave
xchg
ss
jmp
sahf
mov
das
xlat
sub
rcrl
bound
pop
sti
xchg
sbb
iret
testb
or
jmp
hlt
fnstenv
and
icebp
outsb
pop
fsubrp
adc
cs
jb
sbb
xor
out
aaa
push
pmullw
scas
mov
add
and
ret
mov
loope
icebp
test
jb
lahf
push
cmpsl
push
mov
leave
and
lret
outsb
daa
js
subb
leave
push
mov
les
aas
clc
in
int
cmp
stc
mov
aam
daa
movsl
fstps
pop
in
pop
je
push
mov
sahf
adc
adc
stc
mov
in
xor
mov
sbb
push
shrl
jmp
movsl
sub
add
mov
scas
sub
pop
inc
nop
xchg
lret
xchg
xor
bound
scas
adc
aas
int3
xor
mov
push
mov
xor
cltd
pop
add
movsl
ficompl
cli
xor
push
inc
outsl
rcr
add
int
inc
mov
daa
fsubp
in
nop
xchg
inc
rorl
xor
ror
cld
fistl
nop
jmp
inc
and
in
fidivs
jmp
ret
aad
dec
mov
or
xchg
mov
ljmp
lods
movsl
or
push
dec
addr16
cmp
cmp
scas
and
popf
stc
lea
pop
imul
ss
sbb
in
jnp
je
add
jg
dec
pop
push
add
xor
repz
outsl
or
push
dec
jle
insl
aaa
std
add
jg
aaa
inc
mov
mov
mov
sub
rclb
dec
int3
es
inc
int3
sub
sub
push
ss
js
cmpsb
sbb
aam
push
fwait
sbb
aad
cmpsl
xchg
sti
outsb
stc
rcr
fstps
divb
mov
mov
xor
xor
inc
test
ds
int
int
and
add
rclb
or
je
icebp
dec
mov
mov
xor
xor
mov
fsubrs
or
outsl
mov
fst
ljmp
test
aas
jg
cmpsb
shll
sub
inc
jne
sbb
cltd
xchg
int
mov
outsb
push
dec
pop
pop
push
xchg
inc
pop
mov
stos
push
push
add
jmp
stos
mov
imul
add
mov
iret
xchg
test
or
dec
imul
pop
xor
fnstsw
push
ret
sbb
bound
xor
mov
mov
mov
daa
or
and
ds
dec
mov
arpl
int
push
add
pop
in
mov
mov
or
inc
push
inc
mov
movsb
xor
movsl
and
push
pop
out
nop
mov
inc
and
mov
push
rcll
add
sbb
mov
adc
fsts
lea
jns
sbb
jmp
xchg
insl
fadds
mov
scas
cmpb
out
mov
lods
pop
mov
and
incb
pusha
xor
aad
cmp
xor
xchg
enter
aam
or
enter
cltd
adc
gs
loopne
push
xor
jecxz
add
das
sbb
jecxz
andb
jmp
sbb
into
movsb
mov
fmull
sub
pop
cli
in
pop
int3
movsl
filds
bound
mov
jecxz
bound
push
xor
mov
leave
push
movsb
lret
mov
negb
mov
jmp
or
xor
mov
cmpsb
imul
test
push
mov
int
test
mov
push
popa
xchg
add
push
mov
add
or
or
xchg
dec
sbb
stos
ljmp
jnp
dec
jae
ficoml
test
aaa
aad
sbb
test
lret
or
aaa
out
jns
sub
shrl
xchg
mov
aam
fsts
and
xchg
pop
jmp
loope
mov
dec
jnp
adc
dec
clc
dec
mov
sub
sbb
jmp
cmpb
cmp
mov
fbstp
cmp
sbb
dec
add
or
gs
clc
scas
push
xor
inc
inc
pop
movsl
push
mov
push
out
jae
push
xor
out
test
xor
dec
mov
jo
inc
flds
loopne
ja
arpl
aam
dec
or
push
adc
and
adc
arpl
pop
push
sbb
fisubrs
pop
repnz
clc
cmp
sbb
loope
ficoms
lret
lods
jmp
mov
add
hlt
insb
loope
push
into
arpl
jle
mov
inc
adcl
das
push
mov
test
xchg
jne
gs
adcl
add
jae
push
stos
xchg
mov
sbb
imul
cmp
ffree
int3
ss
xor
push
fs
popa
mov
mov
enter
fs
xchg
scas
xor
jo
movsb
imul
dec
dec
or
je
sahf
mov
jbe
and
jae
inc
ror
das
cmp
add
dec
sub
imull
mov
push
sbb
test
pop
adc
js
test
lds
aad
inc
jo
ljmp
stos
test
iret
jl
aaa
pop
push
repnz
inc
pop
shll
pop
adc
cmp
mov
negl
mov
fwait
xchg
fsts
and
xchg
negb
pop
loopne
out
xor
add
aad
push
xor
mov
rorl
sub
lods
mov
enter
xor
xchg
sub
mov
xor
jae
sti
std
andb
test
mov
cmpsb
mov
pop
movsb
cmp
pushf
xlat
adcl
call
repz
jbe
lret
inc
cli
pusha
ljmp
push
add
ljmp
push
cli
insb
sub
sub
mov
add
inc
rcl
push
push
jecxz
jbe
push
insb
xchg
xchg
call
scas
push
xchg
addl
push
or
pop
lods
add
lahf
subl
xchg
adc
leave
cs
jno
andb
push
sahf
lods
add
pop
bnd
xor
push
leave
adc
jbe
jmp
inc
pop
inc
sti
outsb
dec
out
inc
out
lret
add
inc
lcall
xchg
cltd
js
pop
lcall
mov
nop
xchg
cmp
repz
mov
push
inc
cmp
pop
leave
inc
jne
adc
and
cmc
rcrb
push
mov
mov
push
jns
sbb
sbb
daa
push
scas
dec
lahf
cmpsl
movsb
nop
cmpl
ja
stos
sub
lods
in
jnp
insl
add
xor
sbb
outsb
adc
push
hlt
out
rcll
adc
or
dec
sbb
insb
adc
stc
in
cld
lods
int
test
cld
pop
xor
and
push
or
add
add
stc
jg
lds
jl
pop
imul
aas
jo
add
jns
js
ret
mov
das
insl
mov
repnz
in
outsb
add
sbb
ss
outsb
rcll
ret
xchg
mov
lock
call
and
movsl
sbb
or
xchg
xchg
stos
push
std
jp
mov
lret
mov
xor
add
addl
ficompl
inc
out
cmp
movsb
pushf
addr16
loope
and
mov
aam
notl
sbb
cmpb
int
sub
loop
sbb
int3
mov
push
mov
leave
shl
into
mov
sbb
stos
addb
imul
lock
push
in
mov
dec
xchg
jp
mov
xchg
push
in
movsl
scas
pop
pop
sbb
iret
js
mov
xchg
shll
cmp
add
xacquire
mov
xor
fdiv
in
xor
cmpsb
insb
loope
mov
icebp
sub
mov
pop
adc
call
ret
inc
jbe
nop
fimull
test
in
jns
dec
cmp
sbb
mov
cmc
fwait
lds
loopne
xor
test
push
gs
aaa
in
mov
xlat
adc
repnz
scas
push
lods
pop
add
add
icebp
xor
dec
mov
fst
lods
shl
pop
dec
sub
pop
xor
fsubs
sbb
sbb
clc
cmp
sti
adc
jno
dec
nop
rcrb
dec
lcall
xchg
arpl
jnp
jne
outsb
addr16
es
loopne
and
popf
xchg
out
iret
pop
lods
dec
imul
jmp
dec
sbb
shrb
lock
dec
push
daa
mov
lea
pop
cmp
sbb
push
inc
inc
fsubp
mov
leave
aas
aas
stos
int3
and
outsl
mov
xchg
rolb
or
movb
imul
arpl
pushl
fcmovne
jo
and
shl
hlt
sub
stos
cli
aam
shll
fstl
mov
mov
insl
jno
lock
out
sub
mov
inc
sub
imul
or
aad
pop
rorl
mov
pop
cmp
and
push
dec
mov
pop
mov
lods
pop
scas
loopne
into
add
test
pop
mov
sub
test
xchg
sbb
scas
incl
stos
xchg
popf
outsb
lods
push
sbb
mov
dec
push
add
shl
popf
daa
bound
lcall
test
mov
push
movsb
add
pop
mov
rep
cmp
push
lret
int
sarl
cmp
out
test
pop
out
push
je
pop
in
ss
dec
aad
cmpl
mov
dec
xchg
xor
dec
movsb
outsl
and
hlt
xlat
aas
cmpsl
mov
std
add
in
push
sbb
and
imul
ds
fiaddl
xchg
sbb
int
sub
scas
orl
push
push
test
pop
push
incl
pop
xchg
push
inc
sub
pop
mov
icebp
aas
ss
les
mov
bound
rcll
daa
bnd
pop
repnz
mov
call
mulb
sub
stc
push
in
std
push
and
mov
in
outsb
jle
push
mov
aas
rcrl
dec
orl
pop
push
cld
js
mov
in
movsl
popa
jbe
out
ss
pop
xchg
add
in
jae
frstor
push
int3
mov
jmp
or
pop
insb
sub
add
insb
add
sbb
push
test
icebp
adc
ljmp
aam
push
fwait
mov
out
cmp
sbb
filds
lret
cmc
mov
push
cmc
js
cwtl
add
cmp
scas
push
aad
loope
cmpsb
xchg
add
sbb
enter
out
imull
jne
ret
mov
add
repz
mov
orb
imul
cld
popf
mov
ds
les
stos
push
pop
xchg
mov
sub
enter
sub
cmpsl
jecxz
enter
out
or
pop
loope
ret
jnp
lret
jg
sub
jge
push
push
mov
adc
inc
sbb
aas
je
lods
pushf
loopne
idivl
lret
cmp
sub
pop
andl
stos
popf
sub
into
xor
pop
push
push
add
outsl
clc
call
out
das
cmp
test
pop
sub
or
jae
sbb
pop
mov
call
lea
dec
and
ljmp
pop
cmp
out
add
paddb
iret
adc
sub
add
sbb
mov
call
add
insl
push
jecxz
lcall
adc
ss
icebp
pop
or
dec
sbb
jp
lahf
leave
cmp
fistl
xor
mov
cmp
test
rorb
sub
mov
push
ret
movsb
jg
push
dec
pop
mov
inc
cs
leave
cmp
mov
or
shrb
dec
repz
xor
test
insl
sub
test
sub
xor
imul
incb
addr16
cmp
lods
mov
ljmp
xor
hlt
jle
dec
pop
mov
push
test
mov
mov
pop
jle
xchg
jbe
rcrb
aaa
jmp
mov
jg
inc
pop
jge
aaa
or
sbb
lahf
mov
mov
repz
addb
jae
jecxz
pop
cmp
into
fsts
rcr
mov
xchg
mov
in
pop
xchg
fprem1
xchg
inc
pop
jle
fdivrl
cld
sbb
mov
jge
mov
cli
aaa
mov
inc
cwtl
cli
and
fcoml
call
mov
add
jnp
mov
fists
xchg
std
scas
xchg
dec
jbe
mov
jecxz
andb
xchg
bound
cmp
call
aad
lcall
scas
fadds
jl
and
xor
fcoms
mov
lret
dec
iret
mov
pop
xchg
inc
pop
in
sarb
inc
int
movnti
lahf
pop
test
inc
hlt
mov
xchg
jne
mov
mov
dec
add
sub
popf
fsubrl
cmpsl
mov
scas
pushf
fmull
add
movsb
xchg
xor
mov
push
adc
and
andl
dec
int3
sub
xor
nop
pushf
inc
push
xor
pusha
xor
xlat
push
hlt
mov
js
popa
pop
xchg
adc
xchg
arpl
out
and
aaa
std
push
jmp
sub
mov
scas
pop
ljmp
lods
add
push
aas
inc
test
jb
imul
mov
pop
out
sub
nop
inc
gs
lods
mov
ss
mov
and
cmp
popf
rolb
cli
fwait
cwtl
pop
dec
push
daa
mov
ret
movsb
popa
popf
jecxz
in
adc
arpl
push
sbb
mov
into
pop
enter
cs
pop
pop
repz
push
inc
roll
jae
bound
gs
sbbl
push
jg
xor
notb
dec
xor
sti
pop
pushf
xchg
mov
cmpsb
pop
movsb
pushl
add
xchg
stc
bound
pop
js
out
test
lock
xchg
imul
mov
sbb
shlb
adc
aaa
push
cmp
sbb
into
xor
in
add
jnp
lock
test
les
aas
aad
or
aaa
insl
dec
popa
or
sub
sbb
pop
lods
ficoms
dec
mov
cld
cwtl
call
or
push
repnz
ja
dec
add
lea
xlat
cs
pop
push
pop
pop
cld
push
shrb
adc
or
cmpl
xchg
jg
cmp
add
call
or
xor
packssdw
daa
add
and
cld
mov
movsb
mov
xor
ret
loop
jns
aaa
fistps
in
andb
and
adc
add
imul
xorb
movsl
shrb
incl
or
add
inc
cmp
push
or
int
loop
leave
fadds
roll
mov
inc
mov
lret
sub
and
dec
jecxz
sub
xchg
pop
cli
loope
je
jmp
jge
xchg
shrb
or
dec
nop
jns
pop
movlhps
pushf
fdivp
add
xchg
jp
push
das
pop
or
jg
mov
aaa
mov
ret
or
mov
inc
sbb
cli
cltd
negl
cmp
outsl
lahf
mov
push
dec
dec
sbb
lret
mov
sbb
dec
push
sbb
xchg
stos
ret
test
arpl
mov
ret
jb
mov
mov
bound
repnz
jg
movsb
pop
mov
std
mov
cmp
mov
clc
xchg
shr
addr16
sbb
push
push
hlt
jmp
jae
xchg
adc
iret
sbb
xor
ret
repnz
nop
std
sbb
inc
aad
incl
idivl
repz
imul
shll
jns
stos
pop
out
mov
inc
mov
xor
lock
jecxz
sub
fsubrl
xchg
mov
aas
lods
cmc
notl
mov
pop
fisttpl
jns
fndisi(8087
mov
push
pop
and
dec
loop
jg
jnp
sub
int3
gs
sarl
sub
movsb
and
stos
inc
adc
push
and
call
mov
fisttpl
pop
fimull
call
adc
sub
in
arpl
pop
push
push
sbb
or
push
cmp
push
mov
xchg
shr
or
push
cmp
pusha
lods
sub
mov
outsb
data16
xor
or
fisttps
sub
stc
insb
jl
xchg
out
or
push
lcall
add
out
lahf
repz
push
xor
push
add
sbbb
arpl
fidivs
mov
arpl
xchg
add
cwtl
out
js
fs
shll
nop
mov
loopne
xorb
ss
movsl
lods
jo
add
iret
sub
fwait
in
mov
jb
xorl
inc
pop
or
movsb
add
push
fwait
dec
popf
das
dec
jb
lret
push
lods
sub
insb
push
and
ret
sahf
lods
stos
xchg
cli
mov
and
cmc
push
dec
popl
xorb
call
jo
out
out
sub
push
mov
inc
loope
ret
sub
dec
jno
lahf
fmuls
pop
add
jns
push
fs
enter
lea
loop
sbb
inc
jnp
mov
mov
mov
ss
mov
in
lods
sarl
push
aad
adc
stos
mov
dec
adc
fildl
mov
xchg
push
mov
mov
cmp
push
cmp
lods
das
es
shrl
lcall
sub
outsl
inc
loopne
jl
ja
mov
out
sbb
jo
je
cmp
enter
xor
es
stos
cmpsl
fstps
jo
insb
outsb
and
xor
dec
mov
adc
and
int
jmp
sub
hlt
dec
int3
pop
xchg
lock
sbb
dec
add
sub
push
sbb
and
cmp
dec
lcall
shr
pop
sti
scas
inc
pop
out
dec
mov
adc
clc
pop
xchg
push
mov
out
or
push
mov
arpl
jo
adc
shll
inc
jp,pt
xor
jp
jns
aas
stos
lea
fisubs
jno
or
js
pop
jmp
scas
sub
and
arpl
push
or
inc
in
cmp
rolb
ret
inc
sub
jne
rorb
cltd
pop
scas
nop
in
pop
mov
pop
icebp
bound
mov
loope
fwait
inc
mov
ds
popf
pop
mov
push
es
add
jmp
mov
cltd
pop
push
lret
outsb
fsubl
cmp
xchg
add
bound
pop
cli
dec
clc
and
and
pop
adc
nop
and
mov
ret
ss
in
hlt
hlt
cmp
test
lret
fnop
and
inc
ror
dec
xor
add
fcoml
mov
pop
enter
jl
mov
mov
add
fwait
adc
repnz
fnsave
stos
pop
xchg
cmp
cmp
push
ljmp
decb
xor
pop
dec
movsb
orb
fiaddl
mov
or
mov
sub
dec
mov
xchg
jmp
movsb
mull
mov
or
push
pop
outsb
push
jg
ret
inc
jb
dec
out
mov
jge
pop
mov
call
and
aad
jnp
hlt
test
adc
pop
sub
int3
cmpsb
movsb
clc
ja
jo
jle
arpl
mov
jb
or
out
push
and
rcll
movsb
sti
push
inc
mov
mov
enter
fidivrl
add
jge
xor
es
xor
mov
imul
pop
mov
fsubs
sbb
and
inc
xchg
add
push
insb
jbe
mov
out
and
pop
call
pop
or
test
in
adc
inc
jnp
ret
cmc
xchg
cltd
and
test
je
and
insb
ret
hlt
into
psrlq
mov
cld
mov
pop
repnz
pop
dec
imul
sbb
dec
sub
and
inc
add
jg
cmp
int
pop
jno
loop
test
leave
cmp
pop
insb
inc
fstpt
cltd
rcrb
rcll
push
pop
jmp
fildll
mov
les
cmpsb
mov
out
mov
push
xor
mov
popa
cld
movsl
cmp
cmpsl
pop
sahf
outsl
jmp
mov
lock
loope
mov
in
jg
shll
div
rcll
nop
jp
adc
pop
ljmp
sub
fwait
pop
cmp
call
jmp
rorb
or
in
jb
cmp
fcmovb
jne
daa
aas
gs
inc
out
xchg
cmp
xchg
push
push
cli
pop
sub
out
lcall
jbe
cmpsb
mov
ret
hlt
and
xor
dec
sub
repnz
cmc
sub
cli
xchg
fwait
adc
ret
xchg
je
enter
and
dec
pop
mov
pop
xchg
mov
sub
test
mov
int
std
adc
or
push
cmc
cmp
fcmovnb
repnz
xchg
imul
mov
jb
rorl
mov
and
or
ljmp
ja
mov
jp
dec
push
mov
fsub
xlat
movsl
cmp
dec
or
loope
xor
cmp
push
mov
clc
scas
fdivs
adcb
pop
lahf
arpl
push
imul
or
xor
rorl
mov
mov
inc
clc
jae
sbb
mov
add
xor
cmp
sbb
cmp
sbb
xchg
arpl
je
fmull
into
xchg
jb
ret
cmpsb
dec
iret
popl
jmp
add
xor
sbb
push
test
pop
scas
adcb
add
stc
or
iret
testb
fbld
inc
mov
pop
inc
pop
dec
rol
sarb
sbb
ja
sbb
and
jbe
xchg
shl
test
pop
cwtl
cli
ret
inc
lds
test
add
lds
sbb
ljmp
sahf
cwtl
jns
adc
pop
fidivrs
sar
iret
std
jb
ljmp
add
adc
flds
andl
mov
inc
mov
mov
jbe
std
xlat
rcrb
mov
mov
jns
movsb
jle
pop
ja
fmuls
jbe
mov
dec
int3
loop
rcl
aad
xor
add
jp
mov
in
idivl
jbe
shrd
jno
mov
popa
jg
and
xlat
cmp
movsl
jae
notb
xor
jp
stos
ja
xor
jecxz
jnp
push
fsubs
repz
xlat
mov
lret
xchg
push
aad
roll
add
mov
pop
push
in
jecxz
daa
dec
out
pop
sub
aas
jne
cli
mov
jne
add
inc
mov
addr16
loope
leave
lods
sbbb
jo
mov
mov
pop
sbb
adc
int3
xchg
fs
ret
les
mov
mov
mov
dec
repnz
push
ret
mov
sbb
jae
scas
pop
lret
mov
hlt
shrb
dec
repnz
in
ret
jae
loop
sbb
cmp
mov
inc
inc
pop
rorb
nop
imul
leave
aad
popf
mov
jg
stos
sarl
cmp
test
ret
jno
icebp
stos
test
pop
call
fdivr
jae
pop
fwait
icebp
imul
pop
inc
xor
pop
scas
loop
add
adc
pop
inc
rcll
js
repz
ljmp
sahf
add
adc
lahf
cmp
mov
in
or
mov
ret
mov
jno
int3
imul
push
cs
xor
test
mov
ffreep
stos
cli
fistpl
adc
jecxz
adc
addr16
jl
movsb
push
js
push
push
pushw
xchg
out
movsb
cli
lret
ret
jl
sub
bound
or
mov
jne
sarl
ficoml
sbb
pop
outsl
push
xor
test
mov
push
add
push
and
jmp
outsl
push
xor
in
sti
dec
cmpb
dec
sub
mov
mov
push
cli
mov
mov
rclb
fs
mov
je
or
dec
cmp
enter
jmp
xchg
mov
xor
cld
stc
sub
and
pop
xor
sbb
sub
fldcw
das
mov
and
mov
call
jbe
sub
rorb
aaa
aaa
orb
fwait
mov
fistps
mov
mov
loop
in
outsb
or
xor
call
inc
adc
popa
test
insb
out
jo
adc
aam
add
ret
je
ret
imul
mov
fimull
xchg
dec
push
loope
pop
or
int
out
xchg
xchg
test
inc
lods
sub
jnp
int3
in
dec
push
lock
fwait
insl
outsb
or
push
pop
adc
jae
dec
sub
call
in
mov
pop
pop
clc
rcl
rcll
pusha
add
inc
in
int
add
xchg
enter
xchg
scas
in
jo,pn
pop
jnp
add
xchg
fwait
imul
xor
mov
jbe
icebp
loop
je
movsb
or
cmp
jns
test
cmp
into
jle
cs
push
std
sbb
push
outsl
arpl
mov
in
sub
push
aaa
mov
nop
mov
in
pop
cmpsb
testl
dec
les
dec
adc
lods
test
aam
repz
in
and
je
pop
mov
xchg
inc
outsl
subl
push
into
pop
cmp
addr16
or
cmpsl
sub
int3
pushf
mov
data16
pop
mov
or
mov
push
mov
ds
orl
sahf
movsb
mov
cwtl
mov
add
sbb
pushf
inc
sub
scas
xchg
call
and
cmc
rorl
add
ljmp
clc
and
mov
inc
loop
sbb
push
add
cli
push
hlt
shlb
outsb
scas
nop
lods
pushf
js
ja
ljmp
add
in
lea
sbb
in
fisttpl
pop
js
arpl
popa
fildl
pop
dec
push
inc
out
in
repnz
adc
movsb
test
shrb
dec
bound
mov
push
insl
loopne
aas
dec
jge
lds
pop
lea
jmp
adcb
cld
pop
adc
into
adcb
aaa
imul
sub
adc
imul
xor
push
mov
jl
add
xor
xchg
dec
inc
push
cmp
sub
push
fistpl
sbb
stos
and
into
repz
out
sbb
into
dec
xchg
lds
cmpsb
in
addr16
mov
and
cmc
das
jb
pop
enter
mov
stos
ret
pushf
sbb
call
test
and
sahf
mov
sub
adc
stc
dec
mov
mov
ret
inc
xchg
pop
jge
xlat
mov
pop
jnp
jl
add
dec
jl
loopne
jno
aam
shlb
hlt
orb
xchg
out
loopne
pop
cld
aam
mov
movsl
cli
cmp
push
jmp
repnz
mov
rcrb
in
xor
cltd
mov
cmc
pop
je
jo
mov
lahf
pop
rcrb
lret
inc
arpl
xchg
adc
je
mov
in
and
sahf
out
ficomps
xorl
int
or
pop
xor
orl
xlat
xor
jns
mov
mov
out
testl
out
imul
push
stc
repnz
mov
mov
dec
mov
xchg
loop
movsl
dec
pop
jp
ret
inc
or
out
xchg
je
movsb
cmc
in
mov
mov
mov
cmpl
or
jmp
stos
in
ljmp
in
xchg
and
in
mov
mov
in
mov
cmpsl
mov
dec
icebp
fwait
jmp
pop
xchg
shll
stc
pop
lods
dec
jbe
mov
inc
push
dec
adc
mov
loop
xor
jmp
jp
movsb
loopne
mov
mov
push
test
out
jae
push
into
loope
inc
mov
hlt
out
inc
jbe
cmp
cld
movsl
mov
add
jecxz
xchg
mov
cmpsl
jp
push
push
or
hlt
je
push
or
ficomps
sbb
loopne
and
pop
cltd
ffree
push
clc
inc
dec
popa
fildl
inc
or
mov
push
add
stc
hlt
imul
and
sarl
sti
xchg
lods
rorb
scas
push
cld
or
inc
nop
sbb
mov
es
rcl
movsl
mov
lods
sub
fstpl
int3
mull
sbb
add
ljmp
sub
xor
xchg
pop
int
mov
inc
push
cmc
sahf
in
fwait
dec
pop
gs
cmp
ljmp
pushf
adc
cmp
bnd
into
jno
xchg
lret
xchg
push
aas
sbb
leave
push
or
inc
xchg
das
pop
push
in
adc
pop
aad
jns
mov
cmc
push
loop
add
mov
dec
xorb
jns
mul
cmc
icebp
imul
shlb
inc
call
pop
lcall
push
iret
mov
rep
lea
jns
bnd
or
cwtl
add
pop
js
and
dec
cmp
movsl
test
jb
fwait
lods
or
inc
inc
jnp
test
lods
mov
pop
dec
or
out
jg
int
lods
shlb
push
and
dec
or
fs
add
int
xor
not
testb
dec
mov
pop
out
stos
push
movsbl
mov
sub
cltd
ss
cld
in
pusha
dec
fwait
in
add
dec
rorb
add
xchg
arpl
xchg
jns
iret
in
in
jo
testb
lret
je
sub
leave
das
in
fsubrl
pop
add
push
cwtl
inc
lds
fstps
cs
mov
pop
sbb
ds
mov
cmpb
repz
test
into
addl
fwait
sbb
mov
cmpsl
jns
pop
add
les
mov
jb
ret
xchg
pop
mov
pop
and
movsl
sar
jmp
push
push
xlat
adc
push
sub
push
cmc
fmull
loopne
lahf
push
push
lcall
jg
mov
pop
mov
xchg
and
sub
pop
jo
div
movsl
inc
xor
or
les
shl
imul
pop
mov
sub
daa
pop
mov
pop
push
mov
jg
aas
repz
leave
fs
xchg
push
inc
imul
pop
fdivrs
movsb
inc
stos
daa
sbb
push
mov
dec
in
sahf
leave
lea
adc
sub
mov
rcl
imul
lea
sub
rorb
xchg
cmp
and
sahf
and
insb
xchg
test
mov
cmp
mov
mov
sub
pop
cmc
je
pop
jne
lods
push
push
sub
std
pop
mov
fwait
xchg
and
cmp
add
or
aad
out
lret
mov
movsl
sub
out
pop
mov
xchg
sbb
jne
fs
pop
js
inc
pushf
mov
xor
jl
enter
push
rcl
js
mov
fldl
pcmpgtw
fstpl
mov
jnp
insb
or
add
sbb
loopne
dec
popa
xchg
push
xchg
and
jo
inc
pop
mov
scas
xlat
popa
lock
jbe
data16
pop
aas
sub
mov
or
ret
movsb
clc
inc
fdivrs
stos
pop
xor
push
jecxz
cmc
sbb
xor
mov
cmp
shlb
insl
daa
mov
xorb
dec
jbe
cmpsb
iret
lret
push
insb
jecxz
add
cmpsl
or
pop
fcomp
inc
mov
push
inc
adc
xchg
out
cmp
and
or
ja
push
js
add
test
pop
imul
aam
mov
add
xor
add
iret
adc
fsts
mov
mov
jmp
xchg
jg
dec
mov
xor
nop
arpl
mov
fisubrl
and
and
fsub
leave
and
mov
cmp
fildl
xchg
notl
inc
rcrl
mov
scas
shlb
ret
sub
std
cld
andl
inc
daa
mov
xchg
fildll
adc
aaa
es
xor
addr16
loopne
loopne
shll
adc
cmp
adc
push
into
fsubs
inc
or
sub
jecxz
mov
shl
pop
rorl
dec
push
push
add
into
fldt
fs
jbe
mov
mov
in
pop
dec
outsb
cmpsb
sub
xchg
clc
pop
adc
mov
sub
sti
mov
outsb
movsl
test
stos
lock
enter
lock
pop
repz
cmp
mov
mov
loop
stos
xorl
pop
clc
push
outsl
and
sbb
xchg
icebp
js
iret
mov
lret
xor
push
or
loope
fwait
jge
mov
pop
push
mov
jmp
in
shll
rcrb
mov
cmpsl
push
pushf
rcl
or
and
sbb
cld
xchg
mov
and
pop
cmp
adc
dec
jmp
push
popf
adc
std
xchg
orb
insb
outsb
xchg
jno
sbb
fildll
sbbb
jge
jp
pushf
mov
xor
test
jle
and
fnstcw
sahf
sbb
mul
push
fadds
push
nop
loopne
fstl
sbb
nop
imul
and
sub
fwait
pop
mov
rorl
push
push
ja
mov
mov
mov
mov
xchg
dec
mov
in
int
leave
out
adc
push
add
cli
mov
fnstsw
mov
jl
arpl
pushf
xchg
xor
and
mov
int3
aaa
push
fildl
mov
inc
push
jno
jecxz
les
inc
and
or
call
mov
inc
scas
mov
push
jns
add
repz
and
xchg
and
adc
in
mov
mov
fs
cmp
sub
sub
and
inc
sub
sti
mov
idivl
fnstenv
push
std
push
dec
fisttps
adc
sti
cmp
adc
xchg
xlat
cmp
xchg
dec
pop
mov
addb
xor
xlat
jns
xor
sub
popa
insl
jbe
gs
add
inc
pop
cld
jae
xchg
xchg
scas
cmp
add
call
jne
xlat
mov
adc
orl
popf
mov
or
dec
mov
lcall
sbb
jb
std
and
rorb
jge
mov
in
dec
mov
subl
ljmp
and
xchg
in
mov
call
out
cmp
out
lret
call
fucom
mov
cmpsl
pop
lock
das
fnstcw
push
stos
sbb
jge
pop
clc
mov
rcl
lock
or
iret
les
or
add
cmpsb
outsl
mov
and
jecxz
jne
mov
mov
movsb
inc
fisubrs
out
mov
in
jnp
popa
sbb
adc
dec
fcmove
mov
mov
rcll
out
mov
xchg
sahf
outsb
push
clts
add
push
mov
and
aaa
push
pop
xchg
jne
mov
adc
dec
jns
jnp
add
add
dec
popa
xor
push
in
mov
out
sarb
hlt
adc
out
sub
lds
daa
mov
mov
daa
mov
mov
scas
stc
jge
add
pop
mov
mov
add
mov
push
testb
stos
lret
or
rcrb
call
mov
and
aas
leave
dec
movsb
sub
insl
xchg
clc
lock
pop
push
loop
outsb
repnz
pop
inc
lahf
loop
repnz
mov
or
pop
imul
push
pop
cmp
dec
movsb
repnz
mov
test
in
dec
adc
sbb
lock
inc
rcll
jecxz
adc
dec
inc
imul
xchg
ja
adc
xor
fnstcw
or
push
or
aam
jns
jnp
popa
push
pop
out
push
cmp
das
out
ficompl
push
nop
or
adc
lock
cmpsl
mov
loope
sbb
notb
push
mov
jl
xchg
mov
scas
adc
add
lcall
mov
lea
xchg
xchg
das
ret
push
jle
mov
xchg
cwtl
adc
repnz
stos
icebp
mov
ja
or
jbe
iret
test
dec
lret
sbb
int
fidivl
je
or
or
push
jbe
cmpsb
dec
dec
push
int
lcall
les
sub
shr
add
sbb
rolb
popf
xchg
dec
insl
mov
jle
add
mov
sub
pop
scas
sbb
popf
or
push
stos
adc
add
push
in
pop
cs
lods
loop
les
aam
jge
mov
es
mov
mov
cltd
push
dec
xor
test
lods
push
pop
fisttpl
lods
xorb
mov
adc
clc
and
out
mov
inc
jg
es
add
lock
cmpsb
icebp
xor
jp
adc
mov
push
gs
je
cmp
loopne
cwtl
js
xchg
inc
xchg
cmp
mov
pop
dec
outsl
adc
pop
ret
shrl
jl
adc
out
jns
lods
and
jnp
insb
sbb
aam
sbb
out
dec
dec
sbb
scas
inc
inc
loop
test
in
adc
cltd
dec
jbe
loopne
sub
pop
dec
mov
or
mov
call
imulb
shll
mov
jnp
jmp
mov
fldt
aas
in
mov
sbbb
icebp
sub
popa
push
loopne
jecxz
movsl
dec
mov
push
pop
ds
pop
nop
and
dec
adc
jb
test
xchg
pop
addr16
push
mov
lds
mov
sbb
ja
push
mov
loope
pop
rclb
adcl
enter
add
inc
xlat
push
mov
push
add
sub
and
fs
call
and
call
xchg
xchg
call
xchg
xchg
call
xchg
xchg
call
xchg
xchg
call
xchg
xchg
call
xchg
xchg
call
xchg
xchg
call
xchg
xchg
call
xchg
dec
push
fmulp
out
stc
jo
fnsave
dec
inc
ret
cmp
mov
aas
and
inc
and
dec
sbbl
gs
lret
or
fnsave
daa
mov
cltd
daa
lods
jp
outsb
push
dec
outsl
xchg
sbb
mov
sbb
jno
gs
or
ret
cmpsb
pop
ficoml
mov
inc
das
push
cmpsl
mov
fistpl
js
test
xchg
jae
add
push
pop
loopne
addr16
out
xchg
adc
dec
and
adc
mov
or
rolb
sub
mov
adc
shlb
xlat
jl
je
mull
sti
mov
in
dec
cmp
fstpt
aas
jb
xchg
cli
dec
mov
fiaddl
mov
push
xor
add
fdivrp
or
sbb
jbe
sti
jecxz
pop
adc
push
sbb
sti
push
scas
gs
sub
es
insl
out
xlat
cs
sahf
jmp
popa
arpl
cmp
mov
xchg
cld
insb
xchg
mov
pop
pop
int
pop
xchg
lock
lahf
mov
out
xchg
daa
in
movsb
jb
gs
jno
pop
pop
xor
stos
roll
or
xor
dec
sub
xchg
add
loop
or
aaa
jl
xchg
inc
shl
ret
inc
push
push
and
mov
nop
pop
loop
push
sahf
inc
or
xor
xchg
fstpt
test
popa
mov
and
sbb
pop
subb
dec
scas
xchg
imul
data16
pop
insl
loope
push
cwtl
sub
cmpsl
dec
sbbb
lahf
int3
cmp
xor
pop
sahf
pop
inc
je
lret
bswap
and
dec
mov
in
iret
icebp
mov
dec
clc
adc
pusha
xchg
dec
aad
push
xor
shrb
dec
jge
lods
mov
out
sbb
push
in
xlat
xchg
mov
pop
mov
mov
jne
pmaxsw
repz
lods
icebp
lea
or
xlat
repnz
jnp
cli
push
cmp
das
lcall
daa
cltd
fs
je
adc
popf
je
and
pop
jae
mov
xchg
pop
dec
adc
mov
aad
repz
insb
and
dec
mov
ret
mov
dec
inc
adc
psubusw
mov
pop
dec
aad
pop
inc
testl
cs
sub
lds
test
js
adc
je
loopne
movsb
adc
and
movsl
mov
orl
aaa
mov
pop
aaa
inc
arpl
inc
repnz
mov
inc
ds
xchg
or
pop
xchg
in
pop
xchg
add
mov
push
inc
daa
nop
pop
mov
insl
mov
pop
adc
mov
cmp
aaa
xchg
pop
xor
fyl2x
mulb
popa
in
cld
sub
scas
mov
xchg
jl
xor
pop
xchg
push
lds
mov
loope
jp
jns
push
mov
test
out
jae
lahf
and
jne
cmp
mov
jl
inc
mov
add
aas
data16
dec
aaa
pop
dec
testl
out
out
loop
jae
fwait
leave
jnp
js
aad
or
notl
in
imul
fsts
push
leave
ds
icebp
jl
pop
mov
arpl
shr
lahf
outsb
sub
xor
and
dec
push
shll
mov
push
ds
cmc
mov
test
fmul
xchg
cmp
inc
ja
lea
push
fs
cmp
test
jle
sbb
push
jae
inc
mov
cmp
xchg
adc
or
nop
push
mov
and
ds
xor
pop
or
mov
sbb
mov
push
aas
add
cltd
xorb
aas
push
mov
sti
xor
cmp
pop
mov
xor
cwtl
mov
push
push
adc
iret
movsb
sbb
stos
test
xchg
in
mov
xor
ficoml
jmp
sub
mov
adc
leave
cmpsl
cmpb
decb
rorb
xchg
sahf
mov
sub
and
faddl
jecxz
sub
add
out
dec
dec
gs
cmpsb
sub
mov
dec
xchg
fisubl
dec
adcl
xchg
or
push
in
xchg
mov
sub
sbb
mov
bound
push
aaa
cmp
or
cmp
jae
pop
pushw
dec
jae
mov
repnz
cmp
icebp
lods
mov
out
idiv
dec
cmpsl
arpl
push
xchg
mov
jo
sbb
outsl
testb
imul
sub
push
cmp
push
and
pop
xor
jno
add
mov
dec
aas
call
ljmp
and
pushf
sub
sahf
inc
je
mov
lds
jge
cmp
mov
enter
push
inc
js
out
mov
sbb
dec
mov
add
jle
pop
repz
mov
aad
dec
mov
lock
push
sub
inc
ds
mov
orl
std
inc
push
leave
fcmovnu
movsb
pop
lock
ja
mov
shll
push
call
sarb
xchg
fdivl
push
ja
cmp
scas
dec
fs
dec
imul
popf
jns
loopne
mov
fnsave
xor
xor
int
sbb
sbb
cltd
mulb
imul
aam
out
mov
push
je
inc
and
test
movsb
in
xchg
or
or
mov
test
sub
xor
mov
xchg
repz
jno
mov
pop
pop
adc
sub
ss
jl
mov
into
repz
lahf
jns
lds
sar
repz
fcomp
mov
mov
mov
jg
movsl
mov
pushf
lret
stos
pop
es
std
addr16
and
fdivs
dec
popf
in
pop
gs
hlt
out
jmp
mov
sti
xchg
pop
imul
lods
loop
cmpsl
lock
loopne
sub
mov
push
xchg
data16
fsubl
jo
sub
iret
sbb
repnz
mov
fadd
pop
push
jg
rorl
cmp
in
inc
jp
outsb
ret
ss
inc
xor
fs
pop
pop
xchg
sbb
loopne
ficompl
add
mov
in
or
mov
shrl
lds
rcrl
movsb
xor
dec
mov
iret
popf
imul
xchg
aad
lret
fstpt
jge
arpl
adc
jg
sbb
out
je
pop
mov
mov
mov
jl
jp
cmp
outsl
or
movl
or
inc
push
add
mov
int
in
pop
jp
and
mov
mov
and
bound
rclb
ljmp
sub
adc
push
and
lds
adc
push
xlat
mov
add
pusha
inc
imul
and
es
xor
mov
nop
fstl
cli
mov
jne
or
ret
xchg
and
push
jae
cmp
xchg
shrl
daa
mov
push
sti
insl
jnp
pop
in
loopne
mov
cmpsb
lahf
mov
cli
push
repz
jne
mov
pusha
or
fidivrl
jg
cld
in
fisttpl
jae
push
cmp
sbb
sbb
daa
and
loope
add
movsl
daa
inc
mov
add
bound
lock
sub
inc
shll
lds
cmp
lock
xchg
jecxz
roll
and
xor
lods
lea
xorb
jne
pusha
xor
cmp
or
xchg
sbb
rorb
jmp
add
jp
mov
incl
in
js
test
xchg
shlb
rorb
int3
add
push
push
push
nop
jnp
sub
test
inc
jg
xor
inc
outsl
movsb
aas
adc
pop
xchg
mov
jle
add
sbb
jp
pop
jbe
add
adc
xchg
jbe
decl
sti
jnp
aad
xchg
cmc
les
repnz
pop
popf
xchg
jns
pop
jae
ja,pt
mov
or
dec
push
dec
fisubs
xor
sub
jge
inc
adc
hlt
xor
xchg
mov
popa
xor
jmp
cmp
das
push
push
pop
xchg
in
sarb
sub
in
lcall
imul
and
frstor
mov
es
shrl
pop
in
push
outsb
jmp
rorb
lea
scas
mov
and
movl
pushf
jnp
add
or
cld
add
sbb
in
mov
xchg
push
push
inc
mov
sti
fcompl
cmpsl
sub
sbb
xor
jge
call
mov
jno
pop
push
jecxz
vphaddbw
sbb
adc
pop
add
cmp
push
pop
call
out
sub
push
xchg
push
out
popf
cltd
jo
pop
adc
idivl
imul
sub
popa
test
mov
jge
out
lods
jp
cmp
mov
inc
adc
inc
xchg
negl
sbb
insb
lret
jg
cmp
out
sub
sbb
mov
mov
lcall
ljmp
mov
cmpsb
pushf
xchg
mov
ljmp
push
insl
je
sbb
jo
outsl
or
xchg
repnz
or
xor
mov
cmp
jmp
sahf
nop
jae
popf
jb
push
jecxz
adc
push
xor
inc
jmp
lock
clc
shlb
pop
pusha
outsb
dec
pop
outsb
pushf
dec
xchg
stos
mov
dec
push
out
fimull
push
mov
out
mov
adc
sub
mov
add
xchg
or
out
dec
out
scas
add
cmp
adc
dec
popl
repnz
fcoms
in
xor
ds
jnp
lea
dec
adc
fistpl
push
xor
fnstcw
adc
jne
call
mov
and
add
out
xchg
lcall
pop
out
out
cmp
inc
jae
sbb
inc
pop
jno
dec
aam
mov
fcos
hlt
lret
push
inc
and
inc
inc
stos
push
insl
xchg
repz
push
add
or
clc
add
mov
aam
aam
push
aaa
aaa
inc
shlb
lret
and
mov
sbb
xor
xchg
cmp
outsl
add
inc
imul
dec
leave
fs
loope
sbb
pop
pop
dec
fmul
icebp
outsl
ds
sar
mov
fsubr
and
stos
movsl
mul
mov
pop
scas
pop
add
adcl
loopne
pop
mov
sahf
pop
and
out
xlat
outsb
imul
bound
pop
push
iret
cli
stos
inc
cmp
or
xchg
xchg
into
sbb
jp
mov
mov
jl
mov
xor
in
rcrl
pop
mov
movsb
push
push
mov
jecxz
movd
aaa
incb
pop
jns
lret
div
jbe
imul
lea
push
jbe
cmp
push
aaa
out
loope
mov
mov
jbe
sti
dec
ror
jp
pop
pop
jge
pop
xor
jb
fisubl
sar
daa
jg
and
pushf
jl
dec
into
jg
mov
jp
push
sti
mov
xchg
adc
or
aam
test
mov
sub
fcomps
vucomiss
ret
xchg
out
jne
mov
pop
sbb
sbb
inc
cmp
and
popf
xlat
pop
in
pop
adc
testl
pusha
dec
sahf
and
cmp
pop
adc
pop
cmp
adc
das
es
push
jmp
adc
mov
aam
add
sbb
cmp
xor
fimuls
inc
aaa
dec
sub
adc
cmc
icebp
mov
into
push
dec
out
rclb
sbb
xchg
cmp
mov
pop
xchg
fnsave
pop
pop
sbbl
jae
js
fistpl
testl
int
jecxz
out
orl
mov
and
es
stos
js
loop
pop
out
and
je
in
fistps
fidivrs
mov
push
cmp
outsl
adc
faddp
xchg
sub
enter
inc
addr16
adc
loop
mov
popa
cmp
pushf
mov
insb
fstpl
and
test
xchg
or
clc
and
mov
and
cli
mov
mov
jns
aad
loop
fcoml
push
sub
cmp
push
push
dec
mov
imul
add
dec
sbb
cli
shl
jle
outsb
repnz
je
add
jne
in
jbe
dec
and
xchg
xor
inc
out
or
jne
add
mov
lods
jne
rcr
and
xchg
fists
out
xor
pop
ret
pop
push
mov
or
lahf
and
call
pushf
ljmp
scas
popf
pop
imul
icebp
xchg
hlt
jno
inc
std
fildl
mov
std
cwtl
xchg
cmp
mov
pop
xchg
std
pop
fs
popf
mov
mov
movsl
das
arpl
push
or
mov
idiv
xor
push
clc
pop
ficomps
test
or
mov
dec
fdivrs
test
leave
in
ljmp
inc
pop
outsb
in
mov
cmp
ret
xchg
and
sub
mov
and
add
repz
test
mov
into
jmp
lahf
dec
scas
ljmp
jne
jle
or
mov
push
movsl
sub
xchg
pop
js
pop
shl
aas
xor
data16
sbb
push
imul
inc
mov
iret
pop
jae
stc
jg
ret
in
arpl
dec
adc
inc
lea
adc
cli
fldl
and
sbb
cmp
adcl
inc
and
xchg
ds
es
or
sub
movmskps
outsb
test
stc
cmp
dec
outsl
cmp
cmpsb
sub
rcrl
clc
jle
fmul
aaa
and
fbstp
push
dec
sub
xchg
inc
sbb
addr16
in
mov
sbb
mov
add
ss
call
mov
pop
fwait
or
fwait
fwait
inc
cmpsb
mov
pop
icebp
arpl
dec
nop
sbb
cmpsl
dec
sbb
repnz
std
xchg
cli
fstpt
and
jecxz
and
xchg
adc
fst
pop
pop
inc
sbb
mov
scas
icebp
imul
faddl
movsl
sbb
push
add
adc
lcall
aad
and
stc
in
es
cmp
and
pop
in
and
mov
jmp
mov
roll
jp
xchg
ret
add
xchg
cwtl
cmpsb
leave
decl
cwtl
dec
jecxz
push
sbb
popf
pop
jbe
stos
mov
repnz
push
pop
jnp
pop
sbb
shr
mov
push
pop
repz
add
jp
inc
mov
sti
push
stos
out
fstp
xchg
cmp
rorl
scas
test
mov
adc
dec
adc
jne
or
add
inc
dec
scas
and
add
xchg
icebp
fsts
cmp
out
cmp
mov
add
mov
sbb
mov
inc
pop
jg
push
mov
or
xchg
cmp
dec
mov
repnz
data16
sub
enter
fisubrl
sbb
ljmp
cltd
push
insl
mov
test
loopne
jae
arpl
addr16
add
inc
mov
or
stos
sub
int3
es
aam
push
mov
push
in
and
push
sub
add
div
mov
insl
cs
adc
movsb
loope
out
pop
ljmp
scas
cwtl
arpl
hlt
push
cmpsb
int
push
mov
lock
shrl
xchg
enter
in
mov
sub
dec
jl
xor
stos
loope
jbe
test
push
addr16
repz
xchg
jmp
aad
fs
mov
fwait
sub
lods
jne
push
jge
jo
mov
jge
lret
inc
dec
je
or
cmp
clc
xor
or
stos
add
add
mov
xchg
clc
xorl
dec
fisttpl
lods
in
adc
aas
ljmp
adcb
test
inc
rcl
mov
inc
cmc
mov
int3
lock
sbb
push
dec
sbb
sahf
cld
sar
imul
xchg
xchg
into
jecxz
mov
push
sub
push
cwtl
add
cmp
mov
clc
fcmovnbe
fnstsw
and
push
icebp
push
or
adc
imul
or
jbe
nop
out
push
jae
jo
lret
inc
scas
filds
lret
and
jne
rcr
into
or
mov
sbb
sbb
and
cmp
xor
in
cmpl
cmp
cmc
xor
mov
insl
ret
push
mov
push
out
ja
sub
dec
add
iret
ss
sbb
jmp
movsb
fwait
mov
and
inc
or
cli
ficoml
lds
in
sbb
rorb
in
cld
mov
fiadds
dec
sahf
or
inc
ds
int3
adc
pusha
and
jae
ljmp
adc
push
insl
sti
push
jge
add
cmp
add
icebp
insl
popa
pushf
movsb
shlb
lea
sarl
xchg
push
or
xchg
icebp
pusha
fs
mov
inc
add
add
dec
pop
dec
adc
push
call
loopne
jbe
mov
loop
je
mov
or
or
ds
sub
pop
jno
dec
rcrl
mov
xor
sbb
adc
jo
cli
scas
fwait
idivl
jno
enter
mov
popa
push
out
sub
jns
std
gs
notb
mov
inc
pop
pop
xchg
enter
fwait
xor
lds
test
mov
cmpsb
imul
ss
test
sbb
loopne
xchg
xchg
jns
xlat
xchg
js
push
sub
add
and
mov
shlb
fwait
sar
and
mov
int3
lahf
lahf
adc
inc
jno
sub
xchg
push
jne
inc
or
jl
les
push
jp
out
adc
test
cmp
in
loop
jne
out
mov
insb
sbb
push
test
sbb
sbb
or
sarb
les
adc
fadds
dec
mov
jne
aam
jl
fistpll
pop
leave
add
xor
jecxz
or
push
or
add
out
xchg
mov
mov
sbb
divl
lcall
mov
mov
push
stos
mov
leave
dec
divl
lahf
sbb
mov
loop
jmp
cli
inc
lock
mov
push
and
in
push
divb
pop
bound
adc
arpl
aas
pop
push
or
les
in
xchg
out
je
aad
pusha
cmc
add
mov
test
lods
dec
sbb
rcl
pop
pop
sub
dec
int3
jl
das
loopne
push
push
vmovdqu
fstpl
mov
xlat
jbe
fdivrs
adc
popa
inc
jmp
leave
pop
scas
pop
mov
lock
pop
cmp
popa
ftst
jmp
xorb
mov
push
xlat
aaa
lods
out
out
push
imul
lods
sub
push
je
popa
jae
dec
lret
movsb
aaa
imul
lcall
fdivl
mov
add
and
hlt
shrb
jbe
lcall
outsl
pop
inc
fmulp
jae
movsb
movsb
test
adc
jmp
push
mul
filds
and
jns
notb
pop
std
pop
cmc
xchg
jbe
lea
fcmovu
movsb
jmp
std
xchg
js
mov
lods
xor
jne
mov
stc
cs
rclb
aas
int3
jle
icebp
cmpl
lcall
sbb
mov
and
mov
mov
pop
int3
sbb
divl
nop
hlt
push
mov
sub
cmp
sbb
lds
sub
cmpsl
pop
and
cmp
test
adc
pushf
mov
fisubrs
inc
push
das
jecxz
clc
jl
jae
mov
adc
push
cmp
je
sub
insl
aam
out
xlat
jne
cmp
fimull
pop
scas
sbb
imul
cld
inc
cmp
dec
stos
enter
flds
pop
mov
lret
repnz
aam
lahf
sti
push
fs
daa
call
mov
inc
aas
insb
xchg
outsl
fisttpll
jl
or
pop
scas
sub
and
popa
pusha
mov
std
enter
push
dec
cmc
lods
negl
or
mov
sub
mov
jo
mov
or
inc
xor
jbe
rolb
cli
int
jbe
pop
sbb
es
in
push
jmp
fnstcw
or
daa
int
pop
sti
test
movsb
sbb
imul
mov
into
ds
dec
pop
mov
add
pop
in
mov
scas
arpl
lds
test
push
lock
cmp
lods
outsl
pushf
sti
jae
pop
mov
adc
cld
mov
lahf
shrl
in
in
cwtl
aam
mov
push
jbe
mov
in
repnz
mov
sub
mov
imul
adc
into
xchg
or
xor
arpl
outsl
push
dec
ds
adc
fiaddl
scas
add
scas
sbb
adc
test
or
shlb
inc
in
fildl
rorl
inc
in
fs
mov
mov
cmp
in
inc
ss
scas
or
ret
mov
mov
popf
cmp
xor
data16
fnstsw
xor
ud2
cmp
xchg
dec
push
ret
mov
bnd
mov
push
cmc
mul
ss
cmp
cmpsl
fwait
sbb
stc
mov
das
mov
mov
pop
cmpl
and
jns
pop
mov
out
sti
hlt
inc
jne
mov
mov
xchg
std
inc
dec
loope
into
jbe
ret
rclb
repnz
mov
cmc
sbb
jb
insl
cwtl
inc
orb
and
dec
pop
pop
mov
arpl
jb
lea
cmc
pushf
shrb
in
pop
out
jns
adc
or
stos
out
rclb
addr16
and
test
lods
and
loopne
aaa
xchg
xchg
daa
aaa
jmp
mov
cwtl
adc
xchg
cmp
jnp
jno
cltd
jbe
mov
xor
sbb
pop
mov
mov
mov
push
fsubl
in
lock
pop
sar
xchg
jae
cli
inc
push
dec
jg
out
adc
add
lock
cltd
movsb
xchg
hlt
imul
adc
push
adc
xchg
sbb
sbb
push
sbb
in
mov
loopne
dec
push
jle
popf
repz
imul
mov
cmp
lods
repnz
aaa
push
lods
pandn
xchg
or
sbb
addb
jo
lods
ljmp
sbb
notb
movsl
fisubrs
jecxz
loope
inc
lods
into
dec
scas
std
das
out
dec
std
inc
sub
inc
sahf
push
pop
aad
in
ljmp
add
aas
mov
nop
or
mov
loopne
in
fnstcw
jb
jae
insl
stc
mov
mov
outsb
test
sar
jecxz
add
xchg
test
scas
jg
and
lock
mov
xor
das
dec
repz
aaa
insb
inc
lods
pop
lcall
fwait
push
push
push
addr16
test
mov
jns
and
imul
xchg
and
iret
scas
xchg
fsubs
pushf
cmp
clc
fistl
lods
pop
mov
cmp
or
jp
sbb
lds
popa
cmp
sub
cmp
out
pop
icebp
jne
mov
sub
cmc
push
pop
dec
in
ljmp
mov
movsb
mov
imul
fldcw
jbe
mov
sti
push
loop
xchg
xor
cmp
fisubrs
jb
and
out
push
xchg
cmp
xchg
push
jg
arpl
lcall
daa
add
sbb
cs
and
adc
push
jno
fistpll
ljmp
pushf
mov
ljmp
push
sub
out
xor
rclb
or
jecxz
inc
dec
test
mov
fnsave
xchg
dec
pop
xchg
cmc
add
pusha
or
jg
cmp
in
stos
cmp
cwtl
or
sahf
or
fs
shll
pusha
jecxz
sub
jmp
fldenv
sub
push
fs
sarl
insb
push
add
push
lock
mov
mov
sbb
cwtl
push
pop
jae
test
stos
or
adc
inc
lds
lods
mov
inc
dec
les
shrl
xchg
js
aas
xor
and
and
out
inc
dec
enter
push
imulb
and
sub
push
jl
xchg
loop
push
mov
add
pop
sbb
inc
mov
xor
std
fstp
xchg
neg
inc
adc
std
jb
sbb
cmc
dec
mov
lahf
jecxz
dec
les
fsubrp
mov
jl
int3
setg
movsb
push
xor
mov
hlt
es
imul
pop
in
imul
subb
fsubs
fcmovnb
xchg
add
adc
pop
add
and
mov
pop
call
pop
sbb
jle
sarl
xor
fsubr
inc
insb
mov
daa
aam
jmp
push
stos
add
sub
xchg
std
mov
or
pop
push
lods
push
icebp
pop
jmp
dec
test
inc
cwtl
or
insb
and
and
sti
adc
xchg
pop
fs
cmp
sarb
and
inc
inc
mov
rcr
fs
fwait
and
adc
pop
cltd
cmp
or
push
scas
xchg
cwtl
lods
mov
lcall
rcll
mov
push
ret
hlt
inc
sub
and
mov
or
pop
and
arpl
pop
lea
pop
mov
mov
jb
xchg
test
xchg
lea
lcall
mov
cli
insl
inc
adc
dec
sahf
xor
cmp
test
clc
pop
iret
adc
lock
push
add
jno
mov
movsb
ret
and
mov
es
jl
sub
pop
xor
mov
cwtl
pushl
jae
mov
and
rcll
jle
mov
pop
mov
fildll
out
fidivrl
add
xor
xchg
mov
cmp
into
test
shlb
lret
sbb
jae
negl
xchg
imul
jns
int3
mov
adc
mov
nop
jae
scas
cmpb
jno
push
test
popa
sub
mov
mov
stos
push
or
mov
cwtl
andl
adcb
sub
sub
bnd
pop
mov
test
call
lods
out
mov
mov
push
and
es
jmp
jmp
mov
sub
jb
inc
xchg
push
xchg
in
pop
mov
dec
test
or
lds
fcompl
sub
shlb
mov
push
sbb
int
das
in
fadd
sbb
mov
in
xchg
adc
orl
adc
add
out
cmpb
pop
pop
roll
push
aam
fmuls
test
sbb
fiaddl
cmp
push
pop
fcmovbe
jmp
xchg
lahf
push
adc
movsl
sub
inc
repz
pop
test
or
lcall
pop
inc
sbb
int3
ds
and
mov
into
outsb
adc
rcr
idivb
test
cmp
mov
adc
sub
pop
out
fs
movsl
pop
cmc
adc
mov
movl
pop
scas
pop
mov
or
push
cmp
pop
cld
sbb
pop
jg
inc
xchg
int
or
adc
jl
out
scas
jne
test
nop
push
xor
add
xchg
sbb
scas
add
xchg
in
in
sbb
int
std
add
mov
pop
mov
shr
scas
daa
sub
cltd
cld
xchg
mov
je
xor
or
in
push
aam
std
dec
lahf
jno
aam
xor
mov
sarb
test
pop
int
andl
stos
jnp
mov
mov
mov
lahf
addr16
mov
in
push
push
mov
inc
inc
jo
std
lock
cmpsl
mov
test
mov
pusha
and
fisubl
inc
push
fldcw
jae
enter
fnstsw
lods
cmp
xchg
jns
mov
and
ret
stos
jns
stos
sahf
jnp
adc
stos
mov
inc
movsb
sbb
mov
or
insb
lea
xor
dec
dec
aam
push
push
xchg
fisubl
leave
aam
popl
push
mov
addl
pop
ret
jnp
fisttpl
mov
push
cwtl
stc
jle
cmp
pop
xor
lahf
push
push
rclb
add
in
mov
outsl
pop
sbbb
xor
cmpsb
pop
test
xchg
cwtl
sub
pop
or
add
stos
inc
mov
xchg
shll
sti
xlat
ljmp
in
arpl
xor
dec
aad
movsl
or
jle
sbbl
repz
mov
xlat
jno
movsl
mov
pushf
and
stc
sbb
test
loop
enter
push
scas
cmp
inc
adc
mov
add
mov
cli
fadds
sbb
sbb
stc
int3
jno
and
push
add
mov
sub
jno
adc
rolb
push
inc
sahf
mov
addr16
test
jne
xor
lock
bound
dec
aas
push
mov
jne
negb
test
pop
jns
jb
adc
imul
aas
icebp
lret
outsl
std
sub
dec
mov
insl
xchg
es
mov
and
mov
push
data16
dec
xchg
adc
cmp
cmpsb
add
insl
and
xchg
and
loop
inc
aas
cwtl
cltd
adc
repz
mov
cmp
mov
xlat
xchg
xchg
xor
mov
push
adc
inc
stc
sbb
ds
xchg
jo
in
add
jns
loop
mov
icebp
inc
pop
insb
pop
subl
fsts
and
lret
rcrb
loopne
movsl
stos
mov
sub
inc
push
in
sbb
leave
das
sbb
sti
mov
out
insb
jecxz
mov
out
inc
jno
test
mov
ds
push
mov
dec
sarl
sbb
out
jmp
rcrb
mov
mov
cltd
mov
dec
jb
xchg
shll
orl
in
push
pop
inc
pop
mov
pop
fs
add
dec
xor
test
fisttps
mov
cmp
dec
xchg
fwait
stos
jne
add
and
mov
push
scas
and
out
sub
lcall
fistps
mov
push
pop
out
ljmp
xchg
gs
loopne
sbb
jl
mov
subl
shl
pop
sbb
push
arpl
scas
icebp
pop
mov
mov
mov
repz
les
into
outsb
mov
adc
inc
rcrb
rcr
movsb
inc
in
nop
and
jnp
or
arpl
mov
fwait
xor
es
and
into
mov
adc
xchg
xor
xchg
jne
sub
scas
sub
mov
out
or
sbb
bound
leave
or
out
repz
mov
or
lea
cmp
js
xorl
mov
test
sti
xchg
adc
adc
push
daa
mov
add
mov
out
mov
xchg
mov
xchg
cmp
sarl
int3
inc
mov
pusha
ret
fnstcw
scas
mov
shlb
cmpsb
push
add
jge
sbb
adc
mov
shl
das
xchg
sti
jge
and
rcll
insb
adc
loopne
in
pop
icebp
push
mov
add
xor
push
adcl
jae
jge
xchg
jbe
data16
repnz
mov
inc
je
jns
loopne
daa
or
pusha
das
add
pushf
std
out
inc
xchg
clc
sbbl
sbb
stc
mov
mov
pop
cmp
jg
std
movsb
inc
aad
stc
sub
dec
aam
mov
es
loop
push
outsl
ret
mov
nop
fisttpll
std
ret
pop
sbb
lods
aaa
insl
sbb
cmp
jl
rep
xorl
mov
xor
cli
mov
fdivrl
fiadds
imul
jle
pop
dec
xor
add
mov
sub
and
frstor
icebp
sahf
xor
mov
push
pop
inc
jp
dec
pop
xchg
xchg
movsb
push
xchg
jnp
hlt
jo
mov
or
sub
dec
dec
xchg
inc
jmp
or
sbb
scas
jge
nop
into
aad
mov
add
mov
mov
ret
mov
push
out
in
fstp
and
lea
push
push
sub
and
aaa
out
xchg
pusha
outsl
xchg
or
fidivl
hlt
xor
jge
mov
add
loopne
mov
sbb
inc
enter
mov
sub
cmpsl
repnz
and
sti
pop
ret
add
mov
xchg
icebp
xchg
cltd
jmp
lock
sbb
mov
dec
stos
push
stc
fldl
add
adc
mov
inc
mov
bnd
fs
xchg
sub
mov
cmp
and
in
adc
popf
je
ret
adc
lahf
rcr
mov
pop
imul
insb
xorl
or
aaa
fdivrs
or
fstl
jg
cli
jl
shll
pop
std
icebp
adc
inc
push
add
in
test
cmpb
ljmp
fisubrs
fadds
ja
cmc
jecxz
adc
xor
fwait
and
outsb
sbb
in
sbb
and
sub
push
cli
jno
pop
fnsave
mov
inc
inc
scas
xor
sub
and
pop
xchg
push
inc
dec
add
add
jo
scas
fnstenv
fildl
xchg
mov
xchg
push
pop
cmp
push
shl
cmp
add
sar
and
cmp
lds
out
test
lahf
popa
xorl
mov
adc
aad
call
fldcw
push
out
sub
loope
stos
and
inc
stos
out
jecxz
fisttps
xchg
xchg
push
int
cltd
inc
loope
out
push
and
es
es
jecxz
jmp
xchg
and
push
dec
mov
addr16
pop
test
pop
or
pop
dec
pop
call
js
push
arpl
icebp
clc
cmc
js
scas
inc
jp
out
cltd
loope
jl
pushf
pop
icebp
andb
mov
and
lock
les
sbb
fs
pop
add
gs
fwait
inc
dec
push
sahf
adcl
je
inc
sbb
je
push
pop
js
mov
std
dec
xchg
jecxz
xor
jae
xor
add
xchg
shl
shl
dec
sub
insb
push
sbb
neg
lahf
sahf
nop
jmp
ss
xchg
pop
mov
mov
cs
out
mov
ljmp
pop
jne
lock
adc
cli
imul
or
jp
sbb
orl
xchg
cmpsb
fcomps
jecxz
dec
enter
push
cmp
movsb
mov
push
xor
test
outsb
sub
aas
or
xlat
call
dec
sub
outsl
jmp
fwait
xor
dec
outsl
adc
pop
dec
cs
push
test
and
sarl
sbb
ljmp
nop
outsb
mov
ljmp
jmp
loope
dec
jns
jae
xor
add
movsb
std
pop
mov
sub
pop
fs
mov
or
pop
rolb
xchg
addr16
stc
addr16
loope
cmpsl
insl
pop
mov
insb
aas
add
mov
mov
sbb
orb
sub
dec
inc
cmp
cmp
fmull
adc
dec
imul
fsubr
adcb
xor
ljmp
repz
inc
add
sbb
repz
push
enter
fnsave
cmp
push
jmp
out
and
mov
divl
movsb
ret
out
decb
push
jmp
xchg
lahf
push
enter
push
addr16
inc
mov
ja
filds
orl
inc
dec
out
mov
test
mov
pop
fsub
mov
sub
mov
mov
inc
mov
lahf
push
inc
dec
adc
stc
call
dec
dec
xor
inc
pop
test
hlt
push
add
lcall
mov
mov
mov
jae
test
xor
imul
sub
xchg
scas
or
pop
xchg
insl
lock
inc
mov
cmp
mov
popf
nop
mov
sbb
or
insb
lea
xchg
or
popf
lret
repz
decl
mov
adc
mov
clc
daa
push
stos
dec
or
ficoms
mov
outsb
or
sub
xchg
enter
add
sbb
orl
jmp
cmp
fdivrl
and
lcall
loope
jg
rcl
jb
cmp
xchg
cmp
cli
fwait
jg
fcomp
inc
jge
mov
jp
inc
xor
adc
cld
fists
mov
cld
push
xchg
mov
jmp
lds
pop
jnp
or
sub
mov
or
and
jg
es
xor
fst
fmuls
dec
negl
inc
push
mov
mov
cld
and
aas
rolb
ds
jecxz
mov
add
loopne
les
repz
cli
pop
ss
sub
inc
imul
popf
in
scas
or
xchg
cmp
sbb
xchg
sbb
test
pop
mov
in
or
cmc
lds
mov
rorb
fistpll
insl
aas
add
out
add
push
incl
xor
mov
lahf
pop
dec
jno
add
jb
imul
cli
mov
push
mov
shl
adc
inc
sub
xchg
push
inc
in
xor
out
cwtl
or
lea
mov
gs
mov
faddl
mov
shrb
test
mov
inc
cmp
jne
or
js
movsl
lods
das
lock
lds
fcmovne
out
pop
fldl2e
insl
mov
pop
pop
and
adc
cmp
clc
pop
popa
ss
jge
push
std
add
pop
xchg
xor
imul
icebp
inc
xlat
test
repz
pop
mov
mov
push
add
or
stos
jae
ss
stos
sahf
jg
xlat
adc
sbb
outsb
push
fisttps
scas
jb
fldt
add
inc
cmp
in
mov
jb
ss
pop
xchg
movsl
jno
mov
lret
mov
inc
mov
inc
inc
pop
mov
xor
aaa
pop
lret
imulb
adc
ljmp
xor
xor
dec
clc
xor
adc
adc
dec
jb
mov
inc
movsb
sahf
lods
push
aad
or
inc
std
mov
aam
pop
cli
sbb
mov
jns
mov
ds
inc
out
or
pop
xor
js
rorl
add
call
mov
pop
jae
xor
dec
and
dec
sub
frstor
aaa
sbb
xchg
xchg
xchg
mov
aaa
mov
cwtl
or
xchg
aad
pop
ret
cli
dec
call
mov
test
pusha
jecxz
dec
nop
inc
fxch
dec
mov
ss
sub
mov
pop
adc
daa
outsl
adc
bound
hlt
fcomps
inc
sti
test
in
mov
sbb
lds
out
xchg
adc
out
xchg
out
xchg
nop
rolb
test
and
jns
sub
cmp
aad
mov
mov
popa
aad
data16
dec
pop
pop
jae
add
movsl
frstor
and
cmp
mov
jb
mov
lds
adc
lahf
cmp
lock
cmpl
imul
shl
mov
negl
adc
push
mov
into
xlat
jns
jnp
adc
gs
push
pusha
pop
jno
decl
scas
cmc
or
pop
mov
lcall
add
jnp
adc
jmp
out
and
or
call
jo
je
cmp
xchg
pushf
and
inc
call
pop
push
fiadds
sahf
aas
push
push
out
mov
test
sbb
aad
dec
imul
cmp
negl
inc
or
or
adc
and
mov
daa
ljmp
test
ss
psubsw
pop
ja
jne
dec
inc
pop
cltd
sub
mov
popa
mov
jb
mov
dec
and
cmp
mov
ret
mov
dec
xchg
pop
mov
fabs
mov
outsb
xchg
pop
lods
jbe
xlat
jmp
or
push
push
sbb
adc
push
pop
es
and
mov
out
ret
ds
inc
sbb
mov
sbb
out
pop
sub
sbb
rcll
cmp
jns
or
jle
shll
rcrl
jmp
shrl
hlt
mov
imul
int
sub
sahf
jbe
add
fstl
leave
mov
ret
sub
pop
cltd
cmp
add
in
ss
stos
mov
hlt
test
push
fcmovu
inc
or
int3
je
mov
mov
xchg
add
pop
mov
sbb
shrb
jecxz
jmp
nop
cltd
cltd
pop
out
push
cld
mov
push
and
push
jge
xchg
add
jns
mov
fcmove
test
mov
xlat
sbb
negb
movsl
rclb
rorb
mov
into
push
loope
dec
xchg
sbb
jnp
je
sub
sbb
pop
out
pop
jmp
mov
or
mov
insl
frstor
pusha
loop
xor
adc
mov
repz
mov
inc
imul
pop
cmpb
and
icebp
cmpb
hlt
dec
sbb
mov
cltd
xchg
push
xor
aaa
insl
and
lcall
mov
in
iret
jo
aam
jecxz
and
jb
jns
xchg
pop
ja
pushf
or
xchg
push
dec
out
out
ljmp
in
das
mov
popa
xor
adc
pushf
xor
lock
mov
stos
enter
xor
icebp
dec
xor
sti
loope
pop
imul
jecxz
dec
adc
and
or
aaa
jecxz
mov
jg
add
mov
mov
fcom
pop
mov
and
xlat
pop
sbb
insb
inc
pop
lods
clc
int
sbb
jb
mov
sarl
inc
ret
cmp
mov
cmp
sti
cld
xor
orb
push
mov
cmp
pop
repz
sub
mov
lods
adc
inc
jge
pand
call
sub
push
aam
int
dec
xchg
mov
adc
fidivs
pop
cmpsl
dec
sub
add
cmpsb
inc
jp
test
shrb
sbb
loope
push
fs
enter
sub
das
pushf
push
aas
jo
sbb
pop
lock
inc
mov
jl
std
adc
lea
sarl
out
pop
jge
out
mov
mov
aam
mov
mov
test
aas
ret
cmpb
push
mov
fwait
das
cltd
scas
push
pop
xchg
sahf
and
sub
aaa
insl
and
fs
in
add
mov
popf
xchg
jbe
ret
jne
sbb
pop
call
insb
test
shrl
jnp
mov
loop
mov
mov
xor
dec
mov
in
loopne
hlt
add
jecxz
or
or
pop
push
loopne
xor
mov
mov
ret
je
adc
aad
push
fldcw
jl
inc
loope
fdivl
scas
ljmp
mov
stc
ret
dec
push
or
je
dec
xchg
jno
cld
divb
enter
inc
cli
std
jmp
and
lods
ja
fdivrl
push
or
pop
push
xorb
push
push
mov
sbb
xor
xchg
cwtl
inc
push
arpl
cmp
jge
pop
mov
aad
jns
sbbl
outsb
mov
pop
pusha
sub
das
jbe
push
jge
cli
and
jle
mov
adc
leave
push
ja
out
add
mov
xchg
scas
into
adc
negl
mov
mov
jno
test
xchg
xchg
inc
out
sbb
lahf
in
adc
xor
push
push
pop
pushf
movsl
aam
adc
sub
or
mov
adc
push
mov
xchg
rcl
mov
into
out
rcrl
imul
mov
adc
or
sahf
ret
xchg
iret
or
ds
adc
sbb
inc
sub
in
cltd
das
mov
pusha
in
loope
psubusw
and
aaa
and
xor
lcall
stos
addr16
cmpsl
sti
jns
and
scas
xchg
fwait
fs
dec
xchg
push
adc
orb
mov
add
push
fwait
xchg
cmpsb
add
arpl
mov
test
lods
sub
mov
xor
push
adc
jg
decl
test
jge
jne
jbe
and
xchg
shrb
jns
fsub
dec
daa
cmp
pop
nop
xor
lea
mov
sbb
dec
mov
test
mov
and
push
scas
pop
xchg
add
das
or
daa
push
jp
adc
js
ror
aam
inc
daa
test
xchg
mov
inc
inc
sbb
stos
sbb
clc
jmp
outsl
xor
fdivs
inc
sub
fisttpll
mov
test
aaa
pop
inc
icebp
fst
mov
cld
xor
and
or
lret
or
in
cmp
jns
xchg
jnp
jge
jns
jl
aaa
addb
push
xchg
cmc
xor
pusha
ja
call
sti
mov
in
aam
sbb
in
mov
or
adc
push
xor
mov
test
add
or
xorl
adc
insb
mov
mov
sub
in
xchg
aaa
loopne
sub
jae
jne
mov
xor
mov
lret
jl
test
dec
lock
popa
cmp
in
and
or
adc
sub
cs
popf
imul
mov
cmp
sub
pusha
inc
xchg
mov
into
notl
jmp
cld
out
daa
xchg
ud2
push
daa
ljmp
fildl
adc
inc
cli
mov
and
jns
leave
bound
add
cli
fwait
or
popl
xchg
mov
dec
push
lahf
aas
push
addb
out
xchg
sbb
popf
mov
mov
push
jge
dec
fnstenv
xlat
and
jge
outsb
pop
add
popf
pop
in
repz
and
sbb
pop
rolb
test
sub
or
push
xchg
ss
mov
cmp
in
js
mov
int
jp
call
mov
xchg
rcrb
out
or
cmc
imul
xor
or
repz
mov
stc
shll
or
sarl
repz
and
sub
rclb
inc
xchg
loop
xor
or
popf
xchg
xor
ss
cmp
cltd
cli
push
enter
notb
loopne
call
jae
lods
add
add
sbb
fmuls
mov
ljmp
lea
or
push
dec
movsl
dec
adc
pop
pusha
jle
pusha
push
int3
dec
pop
xchg
xchg
and
xor
nop
outsb
or
xor
fidivrl
in
arpl
lds
mov
jecxz
imul
cmp
arpl
mov
outsb
pop
sub
jg
in
push
push
sub
addb
in
dec
pop
lahf
add
and
sbb
loop
movsb
mov
ja
outsl
leave
test
cld
sbb
arpl
mov
jb
movsb
aam
lret
sahf
popa
loop
pop
mov
jecxz
xchg
jge
push
test
cmpsl
lret
fstps
aaa
mov
mov
fstpl
jne
xlat
fsubrs
add
out
ljmp
hlt
and
push
sub
cltd
or
pop
dec
mov
adc
aaa
push
sarb
sbb
mov
nop
test
clc
jle
negb
add
and
push
add
xor
xchg
add
xchg
popa
pusha
idivl
jmp
stos
fisttpll
pop
cmp
int
imul
or
xchg
or
or
fistl
mov
mov
cld
adc
fstpt
mov
adc
inc
repz
sub
pop
dec
pop
es
mov
cmp
add
les
xchg
les
dec
lods
jmp
jb
imul
dec
lods
insb
lea
sub
fcmovne
repz
cmp
pop
jg
aas
mov
filds
leave
pop
mov
or
cmp
addl
nop
hlt
and
idiv
mov
adc
stos
roll
inc
push
clc
xchg
mov
cmp
inc
lods
imul
pop
cmc
xlat
repz
mov
in
xor
xor
cld
pop
add
sub
lahf
mov
dec
clc
fiadds
mov
cltd
cs
hlt
add
add
popf
xor
cmp
mov
sbb
icebp
pushf
into
inc
mov
aaa
sbb
insb
in
xor
inc
fmul
pop
pushf
mov
pusha
inc
xchg
dec
insl
icebp
das
fucomip
cmpsb
push
xchg
sti
pusha
jne
adc
mov
dec
shlb
pushf
inc
dec
jnp
adc
mov
ja
cwtl
jo
dec
mov
cli
inc
in
push
ret
sti
mov
push
mov
push
sub
inc
pop
dec
jo
pop
test
jno
and
addr16
cmp
addr16
mov
dec
fadds
dec
xor
inc
into
lds
push
push
fs
or
int
sub
je
les
pop
clc
jmp
pop
dec
aas
xchg
cmp
lret
mov
xor
pop
mov
mov
cli
andl
xchg
dec
lahf
mov
sbb
mov
xchg
vmwrite
dec
or
sub
dec
lret
aam
inc
cmpsl
cmp
mov
jbe
cpuid
or
in
or
sub
nop
sbb
sbb
call
mov
sbb
nop
and
add
sub
dec
and
push
lret
inc
jo
xor
adc
push
in
push
out
mov
icebp
jge
pop
cmp
test
in
push
inc
cmp
push
test
add
in
sbb
clc
dec
daa
jae
jb
roll
addr16
xchg
xchg
cmp
loopne
cmp
dec
rorb
dec
out
lahf
pop
subb
push
sub
or
mov
ljmp
pusha
in
xor
std
iret
imulb
inc
sbb
pushf
sub
fisubrl
xor
xchg
bsr
cmp
push
int
xor
je
pop
pop
in
pop
rcll
or
sbb
xlat
lcall
mov
or
pop
mov
mov
aas
aam
jg
adc
xorb
daa
test
xchg
adc
push
cmp
sub
mov
out
mov
subl
xchg
outsb
subl
lods
adc
insb
mov
dec
cmpsl
dec
push
in
dec
fs
cmc
rolb
sub
add
enter
sub
dec
sub
sbb
jg
outsb
mov
hlt
mov
test
push
fldl
xchg
out
fldenv
daa
movsl
push
test
pop
cmpsb
in
out
dec
call
ljmp
sti
pop
push
cld
push
push
xor
jb
mull
sbb
dec
enter
or
pop
js
shrb
sub
fdivr
ja
popa
pop
out
cmp
addl
sub
adc
fwait
or
ja
or
jge
popa
push
mov
xchg
nop
fs
mov
or
jmp
shrb
jbe
insb
jmp
mov
mov
dec
mov
test
jne
jg
bnd
jno
cmpsl
lcall
outsb
mov
mov
xchg
dec
lret
inc
pop
mov
in
mov
sub
push
add
adc
ret
jmp
push
vmwrite
jbe
mov
movsb
sahf
std
shrl
xorb
shr
sti
test
mov
sub
out
lock
mov
rorb
test
pop
js
mov
dec
into
dec
jge
loopne
and
inc
cmp
dec
xor
jbe
add
mov
or
pop
adc
mov
push
add
and
out
cld
sbb
nop
subb
add
sub
stos
xor
jb
in
pop
leave
ja
out
jg
test
xchg
xchg
roll
or
xchg
xchg
sbb
outsb
xchg
and
push
out
andl
and
icebp
bound
icebp
jmp
push
int
test
jg
std
or
mov
push
xor
inc
jecxz
jg
stc
mull
xchg
rolb
jb
into
daa
sahf
es
mov
repz
jmp
shll
mov
js
sub
loope
inc
mov
xchg
scas
and
xsha256
cmpsb
xchg
mov
pop
jns
and
xchg
inc
jo
jno
mov
push
jle
sub
add
ret
jle
dec
loopne
xchg
imul
out
xchg
test
pushf
jbe
out
mov
cmc
fs
lcall
rcrl
dec
push
sub
xlat
int3
sbb
dec
mov
mov
and
loop
lods
idiv
jecxz
push
cmp
and
enter
push
pop
push
cltd
mov
push
fstl
dec
xor
cmc
mov
sbbb
insl
push
xchg
and
push
movsb
push
xor
popa
inc
sarl
push
xchg
dec
int
pop
push
cltd
cmpsb
outsl
push
popf
add
shlb
leave
sbb
pop
add
ja
xchg
sub
insl
xchg
jbe
pushl
addl
fs
addr16
pop
arpl
gs
out
adc
dec
or
jecxz
push
cmpsl
pushf
dec
rorb
add
popa
icebp
fsts
inc
test
dec
xor
xchg
mov
into
fists
in
sbb
inc
push
mul
inc
sar
add
and
or
jae
cmc
sarl
sub
xchg
and
sbb
popf
inc
jbe
jg
lds
and
xchg
sub
sbb
scas
test
jns
xor
cwtl
xor
adc
jb
jno
clc
ret
test
mov
sub
and
dec
shl
ljmp
and
cmpsb
xchg
pop
cwtl
sbbl
sbb
adc
add
jg
fisubl
push
mov
cs
jbe
daa
cmpsl
ret
test
cs
sbb
ds
or
xchg
xor
push
and
pop
mov
mov
mov
mov
lds
ja
fwait
mov
cmpsl
outsl
dec
push
sbb
icebp
leave
push
fsubrl
repnz
push
jp
in
aam
cld
fdivp
push
outsb
mov
arpl
cmp
adc
bnd
dec
inc
and
addr16
mov
cmp
in
cli
mov
inc
pop
stos
aas
push
and
or
out
imul
shrl
sbb
jo
xchg
ja
fwait
das
repz
sub
mov
add
inc
jge
sub
movsb
sahf
inc
add
sbb
or
adc
jns
mov
loop
test
xor
dec
outsb
fisttps
mov
cmp
inc
add
mov
mov
pop
inc
dec
sbbb
dec
dec
mov
push
inc
fimuls
push
xchg
xchg
js
jle
mov
sarb
jnp
test
lods
pop
jb
lods
jbe
popa
repnz
outsl
mov
lods
adc
sub
push
popa
inc
mov
pusha
adc
cmp
cltd
push
sbb
dec
mov
pusha
adc
divl
xchg
sti
dec
inc
std
in
add
mov
rclb
jnp
pop
das
inc
insl
mov
int
cli
cwtl
pop
lcall
repz
std
imul
addl
addl
lods
jnp
lret
mov
repz
bound
movsl
call
nop
test
add
cmpsl
mov
int
jo
and
dec
sub
cmp
sti
aad
push
and
xor
mov
and
into
cmp
out
xchg
jp
add
jle
sbb
out
jns
lock
lods
mov
dec
dec
jp
jg
fcoms
das
and
push
add
inc
js
bound
xor
dec
mov
lcall
clc
push
adc
cld
xor
lcall
push
lock
or
hlt
jne
lds
push
sbb
negb
in
pop
mov
cltd
outsb
gs
enter
jecxz
icebp
aas
insb
lcall
jns
inc
scas
stos
cmp
and
cmp
inc
lcall
add
out
fwait
sub
adc
lds
adc
fs
in
int3
mov
mov
faddp
inc
aad
lret
cmp
push
xchg
jp
das
iret
or
aam
mov
in
je
pop
push
ljmp
arpl
adc
and
subl
or
pushf
cmpsl
movsb
stos
jle
push
aas
mov
in
lret
pushl
es
push
arpl
mov
mov
sti
es
xchg
pop
cmp
push
xchg
xchg
sub
dec
fdivs
jge
iret
inc
int
push
jecxz
lahf
bound
fnstsw
cld
leave
push
dec
sub
sub
stc
add
xchg
cmp
dec
xor
in
andb
push
clc
call
or
mov
movl
call
and
int
sub
pop
das
and
push
mov
jle
jge
mov
sar
fwait
in
dec
pop
in
daa
fcmovbe
test
sti
xor
out
push
dec
dec
and
xchg
sub
dec
insw
stos
add
insl
cmc
jle
inc
insb
or
lcall
in
cwtl
cmp
aam
pop
gs
xor
push
dec
adc
hlt
sub
mov
jnp
out
jg
imul
fwait
xchg
mov
mov
jb
sub
xor
pop
stos
scas
mov
lahf
in
pop
outsl
cmc
pushf
mov
lds
inc
mov
test
lock
mov
mov
enter
in
sbb
jne
rcl
in
pop
inc
pop
ret
add
add
sub
ds
movsl
inc
xchg
add
js
enterw
mov
mov
bound
js
push
jg
dec
and
aas
pop
in
std
scas
imul
jg
in
cmp
mov
pop
mov
in
pop
pop
ja
jnp
push
jne
test
adc
push
and
js
xchg
fwait
jno
mov
xor
mov
fcompl
outsb
stos
dec
outsb
and
pop
xchg
sub
push
and
jecxz
in
mov
xor
sub
ficomps
jle
int3
adc
inc
fisttps
iret
fisubrl
out
jb
into
sbb
xchg
pop
cld
mov
sub
rorl
mov
pushf
fstl
cltd
cwtl
cmp
push
imul
or
xchg
xlat
data16
sbb
gs
aad
or
mov
fisttpl
shll
notl
mov
in
cmc
flds
insl
stos
cmpsl
or
bound
xorl
xchg
push
decb
sub
loope
push
fstpt
das
adc
icebp
xchg
mov
les
imul
inc
test
fwait
pop
int
inc
iret
pop
xchg
jge
adc
jae
scas
lahf
inc
xchg
add
mov
jge
adc
or
stos
inc
jbe
clc
push
sbbb
cmp
out
jle
mov
mov
or
sbb
pusha
aad
dec
xchg
cltd
daa
nop
xchg
adc
lods
loop
ljmp
test
xor
std
lret
mov
stos
add
sub
in
sub
pushf
mov
call
out
stc
jle
clc
adc
jb
js
loopne
scas
push
mov
push
ret
cwtl
aas
daa
daa
enter
mov
nop
test
ds
pop
pop
xor
cmp
pop
popf
jb
leave
push
jae
out
scas
jl
out
adc
inc
dec
scas
add
int
insb
mov
rcrl
and
mov
hlt
fisttpl
push
jb
add
repnz
int3
adc
jns
arpl
adc
xchg
dec
xor
out
std
mov
movb
and
enter
icebp
mov
jl
in
add
dec
insl
cmp
fsubl
or
adc
in
out
xlat
adc
sub
nop
dec
add
sbb
xlat
pusha
mov
cltd
ja
into
xor
call
in
fistpll
push
xor
cmp
aam
mov
jbe
add
fcoml
sbb
mov
mov
into
inc
sarb
sub
adc
lods
sub
mov
ljmp
xchg
pusha
jno
or
jb
lea
dec
mov
repz
mov
xchg
cmpsl
popa
adc
adc
pushf
and
lret
adc
or
xchg
adc
push
sahf
xchg
mov
mov
insl
sub
xchg
sbb
loopne
in
test
cli
adc
push
nop
mov
dec
or
add
mov
push
subb
mov
xor
out
pop
ss
fldenv
inc
scas
test
xor
pop
stos
insl
and
test
pop
and
iret
es
inc
dec
out
aad
xchg
mulb
lea
ds
or
lahf
loop
insb
inc
mov
orl
out
push
cmp
xchg
loop
imul
cli
es
js
push
sub
inc
or
pop
mov
xor
and
int
xchg
inc
in
es
or
scas
arpl
adc
test
cmp
sbbl
mov
gs
test
cli
or
fisubrl
mov
addr16
jnp
push
jnp
jl
or
call
int3
iret
add
xchg
jl
adc
shlb
dec
fnstenv
adc
sub
fucomp
or
rclb
jne
out
imul
jmp
outsl
push
jmp
mov
pop
scas
inc
jns
sub
mov
adc
inc
xchg
repz
imul
jecxz
lret
lds
std
js
gs
dec
sarl
xor
sbb
fidivrl
lock
push
mov
pop
movsb
sti
cmpsb
rol
nop
pop
fs
adc
and
pop
mov
inc
add
mov
pop
mov
mov
jmp
jecxz
push
fwait
mov
repz
pop
lcall
xchg
and
pop
cmc
rol
mov
aas
sbb
push
or
xor
cmpsl
ss
add
outsl
aad
inc
lods
aaa
mov
imul
lahf
push
xor
or
fs
out
xor
imul
icebp
daa
stc
mov
xorb
push
pop
sbb
jno
jle
pop
daa
into
jne
adcl
imul
inc
push
and
scas
mov
pop
pop
or
test
jae
pop
pop
adc
das
aad
test
cli
negb
out
push
pop
cmp
aad
loope
in
stos
sbb
add
sub
imul
mov
mov
add
je
adc
lea
dec
cmp
add
and
cmp
sbb
lret
cmpsb
dec
imul
test
lahf
and
popf
data16
xchg
dec
sub
cmp
jbe
mov
outsl
pop
pusha
and
add
adc
cmp
mov
pushf
dec
jg
or
addb
sbb
insl
inc
lahf
push
stc
cli
mov
adc
jae
cmp
scas
outsb
bound
lock
mov
jo
xchg
icebp
inc
icebp
int3
jle
xchg
add
add
jg
jns
and
pop
lods
lods
sbb
cmp
outsl
xor
and
mov
jnp
jl
adc
jl
sbb
dec
movsl
dec
stc
push
add
es
cmp
add
loopne
test
lock
cmc
inc
xor
psubusw
pop
sbb
adc
ljmp
sub
mov
jl
mov
subl
stos
stos
bound
push
das
test
call
les
in
dec
jecxz
nop
jo
dec
shl
fidivrl
xchg
daa
dec
in
arpl
cmp
lock
incb
cmp
jle
mov
cmc
adc
jne
ds
mov
cmp
into
xor
cmp
inc
out
popa
cltd
int3
aam
pop
mov
ffree
nop
movsl
icebp
mov
mov
add
mov
mov
cmpb
mov
les
mov
mov
jg
fimuls
mov
push
pop
inc
lods
push
loop
jecxz
cmc
sahf
out
sahf
and
inc
outsl
sti
sub
lock
or
or
mov
jns
jns
inc
adc
out
or
dec
lock
int3
jp
mov
adc
es
and
outsl
xchg
cmp
sub
stos
rcr
add
outsl
addl
outsb
or
fs
jbe
adc
push
inc
jbe
hlt
push
or
add
cltd
adc
lea
and
xor
pusha
push
mov
xchg
data16
dec
imul
ret
pop
idivb
mov
sub
mov
loope
cmp
mov
cld
fiaddl
fneni(8087
aam
push
sbb
je
push
mov
lret
sahf
add
stos
out
or
cmpsb
es
inc
retw
inc
ds
std
pop
xchg
mov
sahf
push
sub
or
ficoml
jnp
push
std
mov
nop
pop
jno
sub
fsubl
mov
sti
dec
into
sub
jno
leave
cmpsb
cmc
and
test
outsb
punpcklbw
jb
mov
adc
mov
and
movswl
dec
ret
mov
rorl
fimull
sbb
bound
jp
loop
sub
loope
mov
push
fdivr
jmp
sbb
inc
out
imull
aam
out
lahf
mulb
gs
push
shlb
xor
inc
sbb
fstpl
sarl
insb
leave
ret
sbb
jnp
mov
cld
and
and
call
das
mov
sbb
imul
sbb
or
xchg
pop
daa
mov
ret
mov
xor
cmpsl
push
mov
push
mov
cmp
rcl
push
add
push
sub
adc
pop
push
pop
inc
loop
std
jg
fdiv
or
xor
dec
cli
loop
mov
push
ret
fdivrs
and
lds
mov
pop
add
adc
xchg
jp
xchg
xor
xor
sub
mov
xor
stos
and
int3
add
sub
lods
cli
ljmp
push
sub
sbbl
mov
mov
push
sub
rolb
cmp
mov
sbb
ljmp
or
in
mov
mov
jge
lret
mov
jbe
loopne
pop
cmpb
cli
dec
cmc
aas
fdiv
mov
mov
ljmp
test
jp
pop
mov
dec
std
in
push
addr16
int3
mov
insl
adc
subb
cmp
mov
adc
cli
enter
push
xchg
pop
js
subl
scas
sub
stos
mov
seta
fists
loopne
or
stos
lock
jge
add
pop
adc
rcll
sub
xchg
int3
pop
cmp
movsb
scas
pop
jecxz
xor
jns
mov
cmp
decl
jo
mov
xor
loopne
xor
fucomi
jnp
jle,pt
es
pop
inc
sbb
pop
push
cwtl
push
jmp
inc
cmp
jmp
dec
add
test
push
mov
jbe
aaa
aad
sahf
loopne
inc
rorb
push
dec
push
mov
jae
ret
test
xor
add
test
cltd
aam
clc
cwtl
movsb
ret
arpl
jmp
push
repz
lcall
mov
xchg
pop
adc
scas
sub
out
shrl
lds
and
dec
scas
rcl
mov
xor
call
dec
lock
out
shll
adc
add
sub
mov
cmp
mov
and
faddl
and
mov
mov
scas
jge
adc
add
fwait
addl
mov
sub
ret
and
sub
ljmp
test
mov
addb
inc
stc
cli
sbb
or
roll
inc
jmp
dec
push
inc
xchg
insb
jg
addl
andl
cmp
mov
pop
inc
xorl
jbe
xor
lock
out
in
xor
imul
adc
arpl
sbb
aaa
fiaddl
sti
sbbb
xchg
repnz
insl
add
mov
pop
subl
sub
mov
out
js
lret
mov
imul
inc
sub
xor
addr16
movsl
scas
out
mov
mov
inc
je
dec
inc
gs
repz
scas
and
push
cmc
scas
jb
jmp
aam
adc
cmpsb
and
xchg
push
add
mov
shll
xor
mov
fs
ficomps
pusha
in
lcall
push
sub
dec
adc
ficomps
pop
mov
daa
sub
jae
out
bound
stos
sbb
and
cmpb
or
jnp
inc
pop
adc
xchg
das
jge
adc
mov
or
inc
inc
xchg
jnp
mov
inc
repnz
loop
sbbb
xchg
insb
arpl
std
add
sbb
cltd
scas
inc
fsub
and
inc
dec
mov
xchg
add
mov
inc
inc
add
scas
dec
imul
js
cmp
mov
pop
mov
xchg
pop
add
in
jecxz
xchg
inc
mov
pusha
xchg
and
push
enter
iret
mov
push
inc
pop
fidivrs
mov
or
or
sub
cwtl
das
sbb
in
gs
dec
test
je
sbb
xor
adc
push
lret
and
gs
xchg
aad
and
mov
jne
jmp
xlat
aad
sti
repnz
inc
push
data16
aam
pop
adc
mov
imul
enter
pop
sbb
mov
jg
cmp
bnd
adc
and
jecxz
xchg
sub
jo
lock
mov
push
pop
xor
mov
ret
cmpsb
fnstsw
insb
rcrb
pop
adc
pop
dec
xor
repz
push
shlb
or
sub
mov
xchg
fstp
dec
ret
pop
mov
stos
or
or
add
mov
idivb
cmp
mov
cli
sbb
repnz
sbb
frstor
add
jne
jp
pop
mov
ds
fidivl
push
adc
xlat
mov
subb
cltd
fisubrl
sub
mov
mov
ja
sbb
mov
mov
insb
in
add
sbb
pop
int3
mov
and
inc
pop
ljmp
shr
stos
popa
pop
mov
sub
outsb
dec
insb
out
adc
in
and
xor
pop
cs
add
cmp
in
bound
pop
add
stc
aas
xchg
add
and
mov
add
pop
and
inc
jnp
lods
insl
jg
loope
je
repnz
repnz
aam
ret
in
in
out
ljmp
orb
jno
call
jl
inc
mov
push
out
std
push
xor
sbb
das
cmc
jne,pt
mov
sub
stc
loopne
lcall
sti
push
push
daa
jmp
and
sbb
push
lods
mov
std
dec
hlt
push
aad
into
mov
js
sub
std
les
loopne
cmp
test
cs
mov
or
pop
lret
sbb
outsl
aas
xor
xorb
pop
mov
rorb
loope
movsb
xchg
push
mov
cmc
xchg
mov
xchg
popf
les
adc
xor
adc
mov
or
cmpsl
leave
cwtl
mov
aas
push
mov
fisttps
mov
imul
jmp
push
rclb
pop
cmp
dec
xor
cltd
sahf
popf
sti
lcall
gs
shl
ret
push
rolb
fs
stos
fldl
fisubs
in
sub
clc
mov
outsb
sti
inc
mov
xor
xchg
mov
pop
orb
or
das
dec
fstpl
dec
cld
mov
push
pop
ss
call
repz
and
lock
and
loope
jno
mov
test
lods
fcompl
pop
ret
ds
push
add
push
sub
inc
xor
div
js
cs
outsb
ja
xorl
xor
add
dec
add
xchg
jb
ss
in
daa
icebp
nop
xchg
add
imul
cmpl
push
push
push
mov
shrb
fidivrl
js
scas
and
pop
cmp
push
add
cld
loopne
jae
js
insb
cmpsb
cmc
inc
sahf
sub
inc
push
loope
mov
push
mov
jbe
sbb
xchg
scas
das
sub
xor
or
sub
add
stc
leave
sub
int
jbe
cs
iret
dec
sbb
icebp
movsb
mov
jo
mov
mov
mov
add
jg
xchg
mov
shrl
xor
xchg
movsb
cmp
sub
and
outsl
iret
inc
gs
cmp
popf
movsb
sub
cwtl
dec
das
stos
vandps
adc
mov
hlt
lahf
and
mov
push
add
or
and
xchg
insb
cmp
push
stos
bound
notb
xlat
adc
fildll
shrb
fdivr
aad
stos
push
cltd
rcrb
xchg
add
xchg
sbb
ja
add
jo
mov
push
shrl
insb
jge
mov
or
outsb
fdivl
iret
repz
and
mov
lods
lea
hlt
and
xlat
or
sub
adc
add
push
pusha
mov
insb
in
sub
push
les
scas
test
popa
xchg
and
xor
mov
push
loopne
mov
dec
push
jo
mov
arpl
fildl
movsl
cwtl
mov
dec
jno
je
imul
dec
outsl
push
int
inc
movsl
push
sbbl
dec
lret
hlt
mov
cmp
xlat
cmp
fwait
and
xor
out
sahf
int
sbb
sub
mov
pop
xlat
jg
sub
loop
dec
sbbb
jbe
jnp
inc
push
loop
rclb
mov
out
push
pop
movmskps
push
or
xchg
arpl
sub
icebp
imulb
loopne
mov
mulb
ret
xchg
pop
mov
movl
scas
or
cmp
jmp
cmp
xor
in
cmp
divb
pushf
xor
aaa
out
and
pop
and
insb
mov
or
sbb
int
jge
test
rcrb
repz
xchg
andl
lret
pop
icebp
nop
test
mov
inc
sub
mov
pop
fdivs
mov
loope
push
aas
mov
inc
add
fimuls
xchg
call
dec
orl
cltd
adc
sub
movsb
cli
fs
adc
ret
sub
faddl
ret
xchg
fldcw
mov
inc
rclb
in
sub
adcl
mov
cli
mov
dec
outsl
mov
pop
xor
jno
loope
repz
mov
sub
and
dec
mov
jnp
sbb
insl
pop
and
adc
scas
pop
addr16
add
stos
inc
movsl
jne
mov
dec
inc
pop
jmp
es
dec
add
shlb
jmp
das
xchg
jno
cmp
je
or
imul
mov
inc
xor
stos
adc
movsl
xchg
jge
sahf
scas
jne
sahf
fistpl
pop
repnz
data16
inc
movsb
lock
dec
shrl
sbb
adc
stc
movsb
mov
sbb
pop
arpl
xor
or
mov
shlb
fcmovbe
add
dec
pop
pop
mov
lret
cmovbe
dec
and
shr
outsb
push
mov
scas
dec
cmp
test
pop
scas
imul
sarb
sbb
jmp
xchg
mov
inc
cld
sarl
or
repnz
adc
pop
lock
jl
dec
lock
out
mov
xor
arpl
mov
fnsave
xor
lahf
fistpll
sbb
pop
rol
push
mov
pop
pop
dec
fistpl
or
inc
xor
xchg
adc
jp
ds
cmp
pop
popa
pop
adc
mov
imul
out
insb
dec
push
and
js
imul
jb
daa
cltd
cmp
and
mov
push
data16
mov
nop
xor
in
cmpsb
in
jno
aas
or
xchg
int
jg
push
cmp
push
out
lods
push
insl
data16
loope
sbb
or
dec
sahf
and
les
data16
in
divl
ret
dec
cmp
adc
movsb
repz
add
cs
daa
lea
jge
ja
xor
pop
stos
pop
bnd
rcll
jecxz
shlb
push
data16
mov
loop
js
add
fisttps
fcmovnu
outsb
imull
cmp
mov
mulb
jge
jno
inc
popa
mov
repnz
mov
and
mov
ret
inc
mov
sub
mov
dec
xchg
fcmovb
test
and
sahf
sahf
into
jmp
iret
or
dec
js
push
ljmp
cld
pop
inc
mov
arpl
mov
cmpl
stc
stos
sbb
and
cmpsb
xlat
sub
sub
dec
adc
mov
mov
jb
inc
in
movsl
andl
or
sub
fstps
mov
in
inc
rcll
mov
mov
gs
clc
mov
es
outsl
mov
out
mov
jmp
sub
repnz
aam
sub
dec
clc
testl
add
xor
outsb
insl
incl
addl
dec
cs
push
pop
movsl
jbe
ret
shl
icebp
in
punpcklbw
cmc
fmuls
mov
sub
in
push
mov
outsl
push
push
sub
idivb
das
cmp
ljmp
push
shl
cmp
cmp
xchg
pop
add
sbb
popa
dec
cwtl
icebp
cmp
ret
out
mov
test
mov
dec
fbld
cmp
test
inc
fnsave
fidivl
jo
sbb
cmp
movsb
rcll
mov
jecxz
push
push
insl
es
out
in
mov
push
xchg
inc
adc
lret
inc
sub
mov
adc
inc
sub
mov
ljmp
scas
in
inc
cmp
pop
xchg
push
or
jg
cmp
jb
dec
test
lret
sbb
nop
jmp
inc
out
cmp
mov
jnp
cld
insl
shll
test
jp
in
mov
fcomip
push
jl
pop
lock
aaa
lods
movsb
push
and
lods
jns
sarl
cld
sub
sbb
movsb
xlat
icebp
and
push
dec
cmpsl
out
add
xor
add
lret
call
out
sbb
mov
or
lcall
shlb
ss
xchg
dec
inc
xor
out
jmp
inc
movl
and
lock
arpl
add
sbb
inc
pushf
sub
test
xchg
inc
repz
or
pop
dec
outsb
or
data16
movsl
lea
cmpsb
sbb
fs
adc
sbb
jb
shrl
jp
xor
push
jle
repz
jl
jp
out
lahf
scas
lea
adc
das
inc
jl
or
inc
aad
ret
adc
ss
sub
adc
mov
loopne
cmc
and
pushf
jg
jg
sub
cmc
sub
xor
dec
lahf
sbb
scas
sbb
fidivrs
scas
jnp
or
cmp
dec
call
nop
or
shl
mov
dec
dec
mov
push
in
mov
cmp
jbe
cmpsl
and
pop
sbb
clc
nop
cmpsb
inc
sbbb
and
or
cmpsl
xor
lds
jbe
adc
cld
mov
je
popa
imul
imul
into
repz
push
add
add
or
std
outsl
jle
pop
shrl
loope
mov
aad
clc
in
outsl
dec
xchg
addr16
xor
mov
loope
mov
int
sahf
enter
and
mov
imul
sahf
addr16
sbb
fstps
sbb
sti
cmp
testb
or
ret
jne
dec
movsb
cmp
dec
pop
pop
xchg
jno
aad
loope
enter
xor
dec
mov
es
lods
roll
xor
aam
outsb
out
jmp
std
repnz
inc
arpl
push
mov
push
xor
pushf
ret
cmp
lock
push
mov
mov
mov
cltd
sti
mov
icebp
jg
into
imul
int3
fdivs
cmp
mov
add
mov
scas
adc
cmp
jecxz
in
in
ror
mov
adc
fs
pop
in
jmp
dec
xorl
pop
cmp
test
mov
enter
sub
sahf
sub
sub
shlb
jl
lret
lods
mov
mov
jo
mov
push
iret
mov
ret
xchg
jmp
popl
xchg
or
or
xchg
fistpll
leave
je
mov
inc
icebp
mov
scas
fstps
outsb
addb
fsubr
pop
fcmovne
or
add
icebp
insb
mov
stos
pop
or
data16
mov
in
in
fists
inc
cmp
mov
cmp
hlt
or
cmc
xchg
jl
arpl
jno
iret
hlt
mov
inc
inc
mov
cli
mov
test
cmp
jo
push
mov
lahf
in
mov
iret
fwait
int3
inc
push
jle
rorl
mov
cmp
push
dec
clc
pop
shl
mov
decl
lds
into
or
add
and
sub
add
das
or
das
xchg
imul
roll
jmp
xchg
js
inc
sub
and
nop
bnd
xor
hlt
and
outsl
xchg
out
or
mov
adc
repz
mov
jmp
loop
sahf
mov
add
je
xchg
xlat
push
sbb
and
sbb
jns
imul
add
leave
xchg
push
pop
pusha
cmp
cmp
popf
sbb
fwait
inc
jne
mov
fidivl
push
adc
jmp
pop
stc
loopne
add
jb
adc
clc
inc
bound
or
and
mov
out
cmp
popl
data16
lcall
ja
lock
jnp
jbe
ljmp
dec
push
xor
ficoms
fidivrl
testl
imul
cli
negb
je
cli
mov
test
pushf
lock
nop
cld
xlat
xchg
jne
call
stos
adc
out
imul
mov
pop
push
sbb
jno
lahf
pop
dec
movsb
lods
into
mov
notl
pop
push
in
mov
mov
xor
mov
clc
nop
jae
shl
imul
test
add
or
xchg
sub
push
mov
test
int
mov
jmp
ficoml
jnp
addb
push
jno
ljmp
dec
andl
popf
sarb
dec
andl
mov
outsb
cmp
add
mov
jno
lahf
jne
xor
sbb
push
or
in
push
sub
sbb
in
popa
push
mov
lock
call
sub
outsb
aam
sub
int
xor
adcb
dec
sbb
mov
mov
dec
movsl
cmc
jl
or
lds
cwtl
pop
shl
cwtl
cli
je
rcll
pop
inc
mov
bound
jnp
jle
adc
inc
aaa
ret
insl
sub
sbb
sbb
lahf
lock
popl
mov
arpl
pop
jnp
xchg
xchg
dec
insl
xchg
cmpsl
into
cli
rcrb
pushf
mov
adc
sbb
scas
clc
jmp
pushf
hlt
mov
loope
shlw
xor
fwait
test
rcll
inc
add
xchg
push
xor
out
mov
mov
cmp
or
mov
or
mov
pop
aaa
into
lds
fs
push
push
lret
movsb
fucom
push
loope
popa
and
xlat
stos
ds
scas
mov
adc
das
movsl
iret
loopne
jbe
aas
aas
mov
pop
push
adc
imul
xor
movl
xor
leave
repnz
adc
or
lret
xor
sti
cmpsb
mov
push
cmp
or
clc
repnz
push
mov
xchg
xchg
aam
repnz
ljmp
xchg
pop
adc
push
xor
arpl
jg
xchg
cmp
xchg
add
dec
cld
push
mov
sarl
leave
sbb
enter
repz
aam
cmpsl
cmp
pop
cli
lock
adc
sub
inc
xor
cmp
ds
into
stc
xchg
imul
cltd
sahf
pop
push
dec
lods
iret
mov
ret
mov
aaa
pop
rcrl
pop
and
add
mov
inc
sub
adc
es
add
push
into
loop
sbb
jl
add
fidivs
or
sbb
paddsb
sahf
lcall
js
ljmp
mov
jl
add
sub
push
aas
lock
mov
in
jb
sbb
scas
dec
mov
in
subl
lea
xor
xchg
stc
ret
jle
and
mov
xor
inc
mov
dec
lea
jmp
push
ja
add
jns
sub
loop
arpl
dec
inc
mov
iret
or
push
and
cmp
fcoms
pushf
pop
int3
pop
int3
repz
mov
test
fcoms
lea
lods
decb
test
jnp
adc
decb
ror
xlat
or
mov
mov
mov
dec
fmuls
out
mov
fidivl
mov
jno
jecxz
sbb
insl
pop
lcall
scas
inc
adc
fnstsw
pusha
xchg
mov
push
fisttps
popa
into
adc
fisttpl
arpl
push
xor
jb
dec
mov
aam
fcomps
xor
pop
pop
sub
push
mov
sub
push
pop
sub
cmp
mov
ss
xlat
mov
or
pop
xor
sub
mov
testl
in
enter
insl
popa
push
push
roll
insl
inc
iret
sbb
xor
fcmovnbe
add
xor
mov
fisubs
dec
jl
or
jns
in
pop
sub
stc
leave
add
push
test
mov
adc
bnd
jae
pop
test
out
fdiv
cli
test
dec
fwait
mov
in
push
bound
and
pushf
popa
sbb
cmp
arpl
clc
push
sbb
adc
sbb
mov
inc
adc
call
lds
jae
fisubl
in
mov
divl
pop
lea
mov
mov
repnz
mov
push
sbb
call
and
cwtl
mov
movb
rol
cmp
ret
or
pop
iret
mov
inc
shrl
adc
lock
jo
daa
xlat
imul
push
in
jns
repz
pusha
bound
ljmp
add
push
imul
mov
loopne
dec
dec
xchg
jg
cld
inc
ficompl
mov
pusha
pop
insl
cmpsl
fdecstp
ret
cmp
popa
icebp
das
outsl
clc
imul
lock
cli
cmpsl
jl
iret
lock
adc
or
mov
jp
xchg
dec
xor
push
fwait
pushl
inc
out
dec
push
adc
pop
mov
pushf
ror
xor
add
jge
xchg
enter
sbb
sub
and
xor
jg
mov
jecxz
pop
mov
push
jmp
add
sti
and
ljmp
movsl
pop
jmp
out
dec
fldt
xlat
pushf
lret
add
or
subb
add
enter
mov
mov
out
dec
mov
or
daa
and
fbstp
mov
or
xchg
xor
or
mov
insb
jbe
pop
sub
loop
jle
das
push
imulb
push
mov
add
xchg
in
test
sbb
orl
pushf
sub
inc
xchg
in
dec
aas
xchg
adc
add
ja
sahf
dec
add
dec
pop
ljmp
scas
rorb
repz
mov
mov
test
inc
mov
lea
push
inc
test
dec
mov
int
sbb
sbb
imul
repnz
jae
adc
pop
sub
test
and
out
stos
mov
fcoms
scas
xor
adc
popf
and
shlb
imul
mov
pop
bnd
xor
cltd
shlw
cmc
xchg
stos
std
cmp
loop
xor
mov
push
lock
jmp
std
inc
inc
imul
inc
mov
jb
stos
cltd
nop
fistl
mov
sbb
cmc
add
pop
inc
mulb
sub
mov
xor
jne
sub
and
test
loopne
inc
lcall
mov
sbb
xchg
sbb
dec
mov
std
and
xchg
add
lcall
in
sub
fsubrs
jno
ds
fcomps
inc
imul
fs
jp
ds
push
fmulp
xor
ss
addr16
sub
or
jp
lret
or
loope
test
mov
mov
stos
mov
jmp
pop
call
fldt
scas
test
mov
jne
lahf
xchg
rclb
and
int3
jnp
loop
add
mov
mov
cmp
pusha
dec
pop
out
dec
filds
sbb
push
or
add
add
mov
jno
in
inc
je
cmp
test
push
sti
xlat
push
scas
int3
mov
negl
fwait
xor
std
out
ds
mov
add
inc
inc
push
vmovaps
mov
cmp
daa
jge
push
or
jp
scas
es
jp
mov
jno
mov
stc
pop
xchg
sub
outsb
test
mov
push
popa
and
les
int3
call
push
imul
sub
cmc
cltd
outsl
pusha
out
fcoml
xchg
jbe
in
mov
sbb
xchg
lea
or
out
mov
shrb
mov
fbld
cmpsb
mov
hlt
lret
add
aaa
fs
mov
cmp
mov
rclb
cmp
add
ret
mov
push
inc
aad
ss
cmp
jns
inc
aad
or
out
push
dec
mov
mov
xchg
fimuls
int
push
hlt
xor
xchg
ja
aaa
xor
sti
adc
xchg
ret
scas
sar
shrl
xchg
mov
mov
aad
loop
and
andl
xlat
scas
and
pop
fwait
add
cmpsl
cli
push
mov
pop
or
stc
xchg
pop
pop
jecxz
ss
adc
xor
loop
mov
pop
mov
lock
shr
lret
mov
jmp
int
imul
addr16
dec
xchg
push
xlat
andl
jo
leave
xchg
push
scas
sub
repz
insb
jmp
jne
inc
dec
push
lods
inc
ffree
jecxz
loope
sti
xor
sbb
scas
ret
push
sbbl
add
or
adc
dec
iret
clc
and
fdivrs
dec
cmp
jmp
cmp
lock
das
mov
pusha
xor
cld
mov
cmpsb
ss
mov
sbb
fiadds
pop
mov
pop
inc
jb
mov
jl
fs
xchg
push
pop
push
aas
nop
loope
push
loopne
test
mov
adc
inc
xchg
inc
or
xchg
jae
and
adc
popa
mov
cmp
dec
and
fcompl
add
pop
fiadds
scas
test
in
cmc
repnz
mov
sub
iret
dec
mov
js
pop
dec
clc
pusha
pop
outsl
loopne
addl
jne
sub
shlb
out
lock
cld
add
dec
inc
shll
adc
sub
mov
js
inc
rorl
jge
fcomp
mov
repz
cmp
mov
push
test
or
cmpsb
xor
xchg
hlt
mov
push
pop
or
add
or
andb
pop
mov
imul
push
pop
sbb
push
addl
inc
mov
jns
test
pop
sbb
iret
push
dec
xchg
jmp
addr16
xchg
xor
pop
icebp
fnstsw
sub
stos
jl
xor
lods
mov
push
jp
adc
aaa
xchg
fidivrl
jecxz
mov
outsl
movsb
stos
mov
ds
mov
adc
xor
dec
cltd
jecxz
jp
pop
xchg
cmp
addr16
fwait
add
push
cld
xchg
es
outsl
pop
movsl
sbb
inc
or
cmpsb
lock
out
sub
xchg
xchg
outsl
fwait
arpl
sti
shll
dec
cmp
sub
shl
pop
les
add
add
add
add
add
add
adc
add
cmp
inc
dec
lods
push
cwtl
orl
mov
stos
xchg
les
and
lret
add
inc
dec
lods
je
add
inc
dec
lods
push
pop
call
cmp
inc
dec
lods
je
add
inc
dec
lods
je
add
inc
dec
lods
movsb
inc
sub
je
add
inc
dec
lods
je
add
inc
dec
lods
je
add
inc
dec
lods
je
add
inc
dec
lods
je
add
inc
dec
lods
je
add
inc
dec
lods
mov
pop
ljmp
add
adc
add
add
aam
add
enter
fnstcw
jge
add
add
lock
jne
and
jo
add
xor
add
add
push
cpuid
cmp
add
add
mulb
rolb
add
popf
or
add
add
add
add
add
sub
push
loope
or
inc
add
rolb
add
mov
add
add
add
add
add
add
add
cltd
sti
lock
pop
movsl
add
add
add
add
or
add
add
add
gs
add
cmpsl
sub
cmp
add
loopne
add
add
add
add
add
add
sbb
add
insl
sub
xchg
add
add
sub
roll
add
add
js
add
add
add
sub
add
adc
add
sub
add
add
lds
mov
add
push
add
add
inc
sub
add
sub
add
add
adc
aas
icebp
pop
add
add
xchg
fisubrl
xor
inc
mov
or
pop
cli
out
pop
adc
pop
push
mov
shrb
lods
test
outsl
lret
in
dec
iret
xor
mov
mov
dec
dec
cmp
sbb
mov
cwtl
mov
shrl
es
adc
sub
and
int
jg
jecxz
pop
sub
cmp
pop
dec
bound
mov
outsb
ret
push
loopne,pt
rcll
lods
pop
sbb
outsb
mov
movsb
pop
enter
pushf
pop
push
or
scas
fstpt
xchg
sbb
int
jp
stos
xlat
sbb
repnz
cmpsl
cmpsb
mov
push
lods
in
test
adc
roll
xlat
loop
mov
in
cmpsl
test
mov
mov
xor
test
dec
pop
mov
adc
inc
fisttpl
dec
or
push
cmp
out
jecxz
jbe
mov
out
jae,pt
mov
xor
inc
adc
inc
inc
addr16
pop
sub
leave
insb
out
dec
mov
fidivs
into
hlt
fwait
mov
pop
inc
ds
sar
ss
and
int
ret
pop
or
mov
addr16
hlt
clc
or
xor
movhps
pop
sub
xor
inc
mov
push
imul
pop
and
xchg
xor
xchg
mov
es
imul
ja
or
fs
cmp
jg
cld
mov
mov
in
pushf
fisubs
xchg
fimuls
inc
cmp
mov
or
push
test
test
adc
inc
loopne
call
scas
or
aad
or
dec
lock
aas
jecxz
fisubrs
push
mov
lds
sbb
sbb
sbb
and
xchg
push
push
lahf
sbb
jbe
pop
in
mov
and
lea
in
test
cld
lds
sub
cld
leave
jo
cmp
ds
insl
ror
jle
pop
xor
iret
mov
imul
pop
and
sbb
cmp
nop
repz
fisubs
xor
inc
inc
fcmovbe
push
jae
pop
mov
aaa
pop
push
arpl
cwtl
mov
fcompl
adc
stos
lock
mov
xor
adc
pop
leave
dec
push
cmp
loop
mov
dec
lods
divl
add
xor
insl
xchg
orb
iret
xor
rclb
not
out
xchg
or
imul
inc
mov
dec
add
and
pop
and
inc
fs
xlat
rcll
jns
cmp
fsubrl
test
add
cmp
dec
div
dec
movsb
pop
adc
mov
outsl
insb
scas
adc
inc
cltd
xor
mov
dec
mov
iret
add
test
dec
mov
push
add
xor
sti
loopne
or
popa
jle
mov
sbb
mov
cmp
cld
mov
mov
or
adc
inc
mov
jb
and
aam
cwtl
dec
jnp
jle
pop
sub
aaa
pop
pop
popa
rcl
sahf
sub
sbb
push
dec
or
lahf
outsb
in
mov
xor
aad
aad
loopne
dec
imul
inc
fdivrl
xor
mov
push
dec
insl
cmpl
sub
sub
test
out
fimuls
pop
icebp
dec
xor
lods
mov
mov
sub
jnp
sub
loope
fwait
sbb
or
sbb
sub
adc
xor
push
and
mov
imul
mov
es
jbe
aaa
call
in
sbb
jns
inc
mov
push
and
inc
test
cmpsl
cmp
arpl
and
jnp
and
push
xor
xchg
enter
pop
mov
inc
mov
dec
add
mov
push
cli
mov
and
cld
loope
ss
jns
out
test
mov
xor
lret
enter
loop
std
mov
jmp
std
mov
ret
xor
cmp
test
mov
insb
cmpsb
test
dec
adc
xorl
cmpsb
fidivrl
mov
nop
xchg
mov
or
daa
jnp
ljmp
mov
push
cmp
imul
es
jnp
push
mov
inc
or
dec
mov
and
clc
js
push
add
mov
test
int
mov
orb
mov
ret
mov
or
pop
pop
inc
lods
sahf
pop
xchg
notl
ja
fisttps
mov
sub
mov
xor
cmp
cmp
movsb
and
cmp
outsb
add
cmp
jno
and
in
iret
subl
adc
add
jbe
iret
or
mov
icebp
xor
mov
fdivr
mov
jbe
movsb
cld
mov
sbb
je
stc
subl
fmull
aas
insl
xlat
loope
adc
xor
add
cmp
cmpb
mov
cld
xchg
push
in
fnstcw
mov
leave
in
sub
enter
and
add
sbb
fidivs
mov
push
rclb
fwait
enter
dec
lods
aaa
sti
mov
int
out
data16
xor
jae
popa
add
pop
fidivrs
pop
arpl
and
lahf
adc
daa
and
sbb
jp
or
cmp
test
rclb
jo
insl
fnstsw
jle
push
sbb
scas
std
mov
pop
out
movsb
sub
into
or
mov
push
xchg
daa
pop
mov
in
pushf
out
inc
add
cmpl
outsl
pop
sub
arpl
jg
fnsave
sbb
push
imul
lods
pushf
xor
in
mov
dec
mov
jl
xchg
ds
pop
jnp
pop
clc
lods
jno
adc
ja
or
or
ret
mov
nop
cmp
dec
cmpsb
je
test
inc
add
movsl
ficoms
pop
mov
inc
jge
aaa
dec
lds
sub
popa
aaa
sbb
fidivl
fbld
mov
push
test
movsl
mov
or
add
lea
sbb
pop
pop
fnstenv
lods
cltd
stc
fwait
and
inc
orb
jo
lock
call
into
filds
mov
inc
enter
cmp
pop
adc
push
mov
bound
and
out
fdivrs
negl
arpl
or
xchg
dec
iret
pop
test
mov
jne
stos
insb
cmp
out
stos
nop
mov
pop
nop
cmc
or
lcall
test
push
jnp
mov
xor
jb
mov
and
or
xchg
adc
mov
aad
mov
xor
add
adc
movsb
mov
decb
jmp
pop
cmpsb
int
mov
icebp
addr16
dec
mov
mov
xchg
lcall
loope
loop
xor
inc
add
pushf
push
imul
sbb
enter
pop
fcomip
sbb
push
mov
rorl
loop
and
lret
jl
cmp
xchg
sub
sub
repz
shlb
call
pop
repnz
inc
inc
xchg
test
add
aam
lahf
fldt
stos
mov
adcl
adc
sub
scas
out
mov
mov
push
mov
adc
and
into
ret
mov
ljmp
adc
call
fistpll
add
fxch
or
pop
push
jle
push
xchg
lea
sub
jno
sbb
xchg
jae
mov
mov
adc
lods
mov
ljmp
sub
dec
in
nop
cmp
dec
xchg
in
lods
in
lea
sub
jae
and
imul
call
xchg
and
loope
and
dec
mov
cmp
cmp
cs
push
cvtdq2ps
adc
push
test
fnsave
and
das
sahf
mov
das
pop
mov
test
test
jns
cmc
pushf
rclb
dec
dec
cmp
into
add
aaa
push
stc
sbb
jge
push
jle
add
neg
jae
dec
test
push
adc
jg
in
push
xchg
pop
mov
push
jne
cmc
inc
jg
jns
ds
cmpsl
fimuls
mov
pop
loope
mov
jo
es
clc
bound
scas
movsb
ret
fs
sub
scas
lea
pop
sbb
fucompp
pushf
push
push
jmp
or
mov
xchg
in
imul
xor
mov
test
gs
pop
insl
mov
lea
xchg
lods
int
push
loop
aas
nop
add
shlb
sbb
inc
popa
xor
mov
rcl
lret
jne
shll
pop
outsb
pop
push
pop
test
pop
jb
or
push
adc
pop
push
jle
rcll
lret
add
dec
cltd
or
rorb
inc
bound
aam
sub
repz
inc
or
outsb
push
cs
stos
es
inc
scas
mov
mov
lahf
jg
ss
add
into
jne
jo
push
dec
sub
mov
arpl
gs
pop
shlb
add
insl
mov
xlat
negb
and
xor
sub
call
mov
push
mov
cmp
fcomp
arpl
es
push
fldcw
in
ss
rcrb
push
xchg
mov
and
fisttps
dec
pop
loopne
lret
pop
pop
aas
in
ret
sub
popa
sub
mov
in
iret
and
js
sub
sbb
xchg
mov
mov
adc
or
outsl
ss
cld
dec
out
pushf
xor
xchg
pop
and
pop
cwtl
out
mov
sub
test
inc
daa
dec
pop
sbb
and
xor
outsl
mov
xor
or
jb
call
cmp
cltd
clc
cmc
or
aas
loopne
lds
xchg
mov
lcall
xor
cs
push
mov
into
add
inc
or
outsb
adc
jbe
inc
xchg
jae
and
jae
lock
adc
ret
mov
mov
aas
ja
es
sbb
adcb
and
push
in
adc
fprem1
pop
mov
mov
ficoms
jb
into
push
ss
stc
and
scas
push
adc
pop
test
jo
out
jo
je
data16
mov
or
dec
push
orb
and
call
int3
add
lock
mov
fadds
xchg
and
push
mov
xchg
fucom
sbb
dec
xchg
movsb
lods
mov
dec
jbe
ret
cld
and
out
popa
es
and
cmp
iret
sub
loopne
cli
add
decl
adc
hlt
int
stos
dec
sbb
dec
lods
out
or
arpl
xchg
inc
or
inc
dec
je
cltd
sahf
add
xor
mov
cmc
out
xchg
leave
pushf
adcl
jge
outsl
into
adc
inc
push
cli
cmp
push
sub
and
pop
pop
and
in
adcl
pop
imul
jle
mov
and
movsb
fistpll
adc
inc
jge
fiadds
pop
inc
add
cmp
loop
add
push
and
loope
dec
nop
pushf
or
mov
jl
push
loope
popf
pusha
mov
mov
and
lcall
lock
imul
inc
push
xchg
leave
mov
int3
sbb
mov
lea
jo
jae
js
mov
jge
int
cmpsb
shlb
roll
and
notl
jle,pt
movb
inc
jae
lea
mov
lds
jbe
mov
scas
xchg
jg
xchg
jbe
mov
mov
shlb
adc
arpl
pushf
sub
push
pop
cltd
roll
lahf
pop
push
fldt
pop
jb
repz
add
and
scas
jle
lret
fnstenv
gs
mov
pop
stc
nop
adc
and
and
or
mov
inc
lea
jge
jns
jnp
jecxz
push
xor
subb
outsb
and
mov
aaa
fdivrl
std
in
adc
mov
mov
arpl
mov
and
cmpsl
add
sub
addr16
add
push
lock
scas
jnp
pop
nop
aaa
clc
mov
push
mov
iret
push
aaa
xor
pop
fs
cmp
xor
adc
sbb
pusha
pop
and
ljmp
mov
and
or
ja
xor
testb
xor
jmp
lcall
loopne
call
insb
lret
add
sti
xchg
push
and
lcall
sub
dec
mov
xchg
arpl
push
fdivrl
adc
sbb
int
xchg
cmp
xchg
cli
cmpsl
mov
aam
mov
cwtl
fs
sbb
dec
or
or
loop
outsl
cld
pop
xchg
or
in
cmpsl
je
mov
adc
or
mov
repnz
out
lock
or
or
pop
jae
pop
sbb
jle
js
rorl
mov
sbb
push
lea
jne
mov
imul
mov
outsl
mov
jl
dec
into
daa
jmp
rol
clc
push
pop
xchg
or
sbb
xchg
iret
pop
loop
xchg
cwtl
stos
sar
sub
shlb
xchg
cmc
mov
loop
adc
pop
xchg
fstp
scas
xor
xchg
sbb
jmp
mov
add
jno
dec
lret
mov
adc
xor
and
pop
pop
repnz
testb
pop
and
push
movsl
stos
cmp
loope
add
mov
shlb
mov
mov
imul
xor
add
dec
loopne
lret
inc
lahf
pop
arpl
cmp
mov
adc
jl
cs
add
cmp
scas
in
fs
add
fsubrl
inc
idivl
ljmp
dec
shlb
mov
decb
je
inc
adc
lock
push
mov
incb
cmp
cmp
push
mov
leave
in
inc
mov
rclb
dec
shrl
sub
cmpsl
clc
out
test
or
pushfw
scas
jg
cmp
mov
pusha
mov
dec
jl
nop
sbb
cmp
insb
rcll
incl
movsb
jo
dec
dec
ret
xchg
jl
inc
gs
sub
jbe
xor
movsb
insb
and
out
in
test
incl
ja
and
add
xlat
mov
mov
idivb
push
xchg
sub
pushf
bnd
inc
out
repnz
leave
scas
mov
xchg
cmp
xor
inc
cmp
data16
orl
jg
jbe
idiv
adc
mov
cmp
in
xor
push
cmc
inc
lahf
scas
sar
stos
mov
out
inc
arpl
jp
dec
sbb
jmp
rolb
mov
push
das
inc
addr16
jno
and
jbe
mov
aam
mov
inc
jg
jecxz
sbb
mov
or
mov
sbb
lods
mov
jg
ja
fadd
icebp
cmpsb
mov
arpl
aam
das
cmp
xor
inc
test
xchg
xchg
imul
fxch
mov
cltd
fimull
popa
sbb
movsl
out
fdivr
ja
rorl
cmp
int
adc
jle
push
das
fwait
jge
mov
fstpt
fistpl
sbb
pop
cmp
lcall
pusha
push
inc
inc
mov
dec
xlat
and
mov
adc
popa
jg
cmp
cmp
pop
cmp
pusha
aaa
mov
cmp
daa
jae
push
pop
xor
popf
arpl
sub
xchg
sub
mov
aas
xor
cmp
xchg
data16
mov
out
and
cs
sbb
or
push
mov
push
pop
mov
xlat
das
add
dec
dec
jmp
imul
jb
ja
add
mov
jge
sub
dec
jg
dec
xor
fisttpll
xchg
out
cli
pushf
les
in
out
das
xor
mov
xor
hlt
icebp
inc
mov
ret
stos
pop
ds
mov
imul
cld
shlb
test
lock
mov
scas
insl
jmp
mov
or
fstpt
xlat
inc
cltd
shrl
xlat
jne
cmp
cmp
cld
stos
outsb
std
insl
or
adc
jbe
sbb
adc
iret
xor
sbb
add
arpl
cwtl
test
xchg
xor
mov
mull
pop
outsl
inc
xchg
fnstenv
sarb
push
sub
dec
jmp
sub
cltd
push
adc
subl
fnstenv
xor
push
shll
add
ret
not
xor
xor
push
pusha
lcall
sbbb
add
sbb
xchg
cmp
movsb
inc
dec
test
xchg
jg
cmp
fsubr
test
push
out
cmp
stc
lcall
jns
mov
jge
dec
popa
ss
cmp
popa
dec
fwait
outsb
test
fs
out
ret
jmp
fnstenv
cmp
sbb
cmpsl
cmpsb
push
js
cs
mov
iret
mov
mov
leave
and
add
ret
out
pop
pop
push
xor
and
out
or
pop
or
push
inc
inc
daa
imul
push
sub
in
cmp
es
dec
jmp
xlat
loopne
inc
adc
fldenv
mov
mov
lock
rol
lock
mov
mov
arpl
into
sbb
push
xchg
xchg
pop
add
mov
lds
mov
fnsave
cwtl
sbb
int
jns
in
push
push
jmp
es
adc
inc
sbb
mov
mov
push
dec
add
xchg
stc
sbb
xor
bound
jb
xchg
mov
cmp
daa
sub
jecxz
fimull
push
xchg
mov
sarl
mov
mov
jecxz
push
test
clc
inc
cs
jae
xor
cmc
push
xchg
dec
cwtl
movsl
add
ss
and
push
in
sarl
dec
push
ds
or
pop
notb
insb
inc
out
pop
inc
push
insb
add
rorb
in
or
xchg
sub
add
xor
nop
jne
call
stos
orl
cmp
mov
mov
popf
cmp
int3
loop
mov
cmc
mov
popf
sub
jns
cmp
outsl
xor
lods
xchg
inc
or
call
mov
dec
jmp
and
fdivrs
ja
sub
aam
rorb
imul
push
adc
ret
aas
jmp
add
fwait
xor
fimull
nop
xchg
push
cmc
cmp
ret
cmp
jp
sub
pop
add
clc
lods
adc
cltd
out
mov
ret
sbb
lret
jo
cmp
and
test
add
lret
mov
and
js
sbb
mov
gs
xor
sar
fwait
nop
jp
adc
dec
mov
mov
clc
cli
cmp
popa
jae
pop
sub
mov
xchg
jno
adc
sub
icebp
xor
test
lahf
fucomi
je
iret
sti
xchg
mov
pop
scas
jb
xchg
in
test
sub
xchg
in
call
popa
cmp
pop
ret
mov
inc
lret
ss
fdivs
push
in
and
and
iret
inc
push
shrl
mulb
dec
jb
or
ljmp
scas
sub
or
sbb
mov
insb
sarb
aas
jecxz
add
fwait
fwait
call
ja
fcmovbe
shr
dec
xor
mov
or
insl
iret
std
test
std
push
sub
insb
jmp
std
xchg
adc
outsb
jg
mov
or
pop
ds
loopne
cmp
and
adc
das
lahf
fistl
xor
xor
push
xchg
mov
pop
mov
mov
jnp
lds
push
je
fisubs
push
mov
fnstenv
jo
add
sbb
xor
cmp
or
popa
sbb
push
inc
push
mov
cmc
fbld
jp
loopne
or
push
mov
cmpsl
mov
into
ljmp
inc
divl
insl
jge
test
xor
aam
xor
jnp
mov
sbb
int3
and
rolb
mov
in
cltd
mov
fcmovbe
inc
loope
and
ljmp
adc
andb
pop
pusha
mov
xchg
xor
xor
insb
inc
stos
sbb
push
lods
orb
xchg
push
imul
and
xor
arpl
or
push
sub
mov
dec
in
movsb
rcll
fisttpll
aaa
arpl
or
pop
xchg
or
or
lcall
xchg
push
lahf
cmpsl
jmp
and
gs
in
call
cs
loopne
xlat
add
mov
cltd
jnp
pop
add
sub
inc
or
fwait
inc
imul
stos
add
cmpsl
aam
pop
rorl
push
scas
out
sbb
sbb
dec
jmp
push
hlt
fcmovnu
inc
mov
mov
ja
dec
pop
jp
or
fsubrs
frstpm(287
enter
push
sub
decl
inc
jo
dec
subl
arpl
cmp
andb
dec
movsl
ja
and
pop
and
mov
stos
outsb
cmp
pop
xor
in
push
in
aas
jne
cmpsb
and
ljmp
push
pop
subb
jno
das
ror
decl
mov
mov
push
cmp
jb
adc
adc
sbb
cwtl
or
jl
or
popf
cld
xor
ljmp
fidivl
pushf
aad
pop
icebp
leave
test
jb
adc
xchg
sbb
push
dec
push
sar
js
mov
inc
add
or
xchg
std
adc
inc
push
sbb
fdiv
pop
jmp
mov
clc
inc
subl
daa
adc
sti
add
jb
inc
xchg
test
outsl
cmp
jb
test
push
cs
fidivrs
mov
fcomi
push
inc
pop
bound
loopne
insb
je
sbb
push
cmp
xor
adc
mov
adc
movsb
stos
push
mov
or
repnz
jno
pop
clc
arpl
dec
cmp
fwait
jl
popa
jne
or
jo
mov
int3
pop
inc
clc
popa
xchg
sub
adc
mov
fwait
cmp
lods
and
xchg
xorb
jmp
mov
jae
mov
dec
mov
cmp
fistpl
jmp
pop
movsb
xor
test
sbb
add
add
lods
pop
jne
jno
in
push
dec
jo
lea
mov
ds
push
cld
mov
mov
pop
fistpl
ja
push
loope
je
aad
es
mov
sti
push
in
loope
adc
dec
shrl
pop
cmp
sub
ret
mov
mull
ljmp
pushf
hlt
push
cmpsb
xchg
pop
adc
stc
lcall
push
cmp
stos
dec
es
mov
mov
mov
or
popa
aaa
orl
mov
push
fistpll
shll
adc
or
jmp
not
xlat
adc
testl
mov
inc
mov
sarb
cmp
pop
stos
hlt
aaa
lret
pop
sbb
movsb
jge
dec
popf
test
out
aam
gs
into
pop
mov
loope
inc
insb
jbe
notb
cs
mov
push
imul
jne
popf
iret
icebp
cmp
cmpsl
inc
lock
push
aas
stos
sahf
push
mov
jp
bound
cmp
fidivrl
cld
push
add
aad
sbb
nop
popa
mov
aas
daa
imul
aaa
insb
lcall
adc
xlat
dec
in
xchg
pop
jns
shrb
push
xor
add
pop
xchg
pop
xchg
aaa
pop
sub
inc
jg
ret
add
rol
xor
scas
insl
pop
xchg
dec
cmp
bound
sti
dec
mov
insl
cmc
sub
outsl
je
inc
xor
jmp
pop
rolb
fcom
je
cmp
add
pop
adc
adc
pop
cs
mov
jno
fs
or
push
in
das
icebp
adc
ds
dec
ljmp
inc
mov
adc
scas
xor
mov
cld
lods
sbb
push
clc
orb
ficoms
divl
js
jge
decl
push
or
fwait
and
and
aad
cld
push
xlat
testb
int3
cmp
sub
outsb
rorl
add
pushf
sbb
or
rcr
insl
out
adc
icebp
test
inc
push
pop
scas
cs
icebp
dec
push
cmpsb
sub
sub
test
jle
cmp
aaa
loopne
loop
inc
fimull
add
or
fnstsw
jge
add
gs
int3
sub
push
out
aas
jge
push
sub
mov
jg
xchg
add
fistps
xchg
cmp
sub
cmp
add
imul
shll
xorl
fstps
inc
jl
stc
ficompl
mov
mov
mov
filds
lea
scas
mov
popa
jns
out
cltd
push
lcall
mov
adc
imul
aas
stc
rorb
mov
negl
push
adc
mov
shrb
adc
test
mov
lret
and
dec
aad
movsl
jae
xor
stc
cli
mov
fs
movl
jmp
push
adc
mov
cmpsb
mov
push
xchg
xor
aad
sti
add
fdivrs
mov
out
cmp
sti
pop
or
add
sub
sbb
push
pop
sub
pop
mov
aad
insb
pop
or
imul
sbb
xchg
fdivl
push
lea
iret
fwait
pop
jle
push
pushf
sti
xor
push
mov
mov
icebp
cmpsl
shl
jnp
in
xchg
shlb
mov
insl
clc
repz
dec
push
push
jae
jp
cld
ljmp
fwait
int
pop
das
dec
repnz
mov
mov
shrb
mov
fidivrl
int3
adc
sub
add
pusha
jne
xchg
nop
push
jmp
addb
movsb
push
and
cmc
sbb
mov
int3
cld
pop
mov
ljmp
xchg
lahf
leave
cmp
clc
rcrb
mov
out
outsl
mov
daa
mov
xchg
das
lock
jmp
icebp
xor
dec
and
jg
push
jnp
pop
sbb
mov
int
mov
mov
sbb
dec
adc
mov
pop
pop
int
lods
negl
lods
jne
xor
sarb
ret
mov
pop
xor
stos
fs
test
dec
mov
enter
sbb
inc
and
xchg
push
and
xlat
mov
sub
popa
movsb
int
or
ljmp
andl
setge
push
in
pop
pop
pop
insb
dec
pop
clc
insl
mov
ret
mov
fdivr
xchg
ss
pop
int
lret
cltd
add
in
adc
mov
mov
movsb
call
or
inc
xchg
inc
jo
ss
lcall
push
js
mov
gs
popa
insl
push
mov
dec
movsl
test
mov
jg,pn
jbe
scas
mov
in
cmpb
xor
push
inc
xchg
or
mov
mov
jo
cmp
mov
enter
push
mov
inc
mov
mov
lock
pop
lret
cmp
mov
cs
jg
sbb
stc
shll
iret
sbb
push
sbb
mov
sbb
test
cld
mov
and
xchg
js
rclb
popf
mov
adcl
jbe
cmp
adc
sub
cld
stc
dec
sbbl
mov
pop
mov
mov
in
ret
jg
repz
stc
repnz
xchg
pop
fistps
mov
ret
inc
sti
cmpsl
cltd
outsl
movsb
xor
insb
sbb
mov
loop
dec
xchg
add
pop
stos
mov
xchg
xchg
xchg
aaa
or
aas
idivb
aas
add
fcomps
popa
leave
scas
lods
mov
cmpsl
fmuls
jo
xchg
sbb
inc
mov
mov
roll
add
xchg
inc
movsl
lock
in
je
cmp
cmp
xor
addb
xor
and
sbb
daa
adc
ja
dec
mov
mov
test
cmp
test
adc
cs
into
loop
cmp
scas
cmp
repz
inc
xchg
adc
sbb
sarl
in
out
rcrb
mov
jne
roll
subb
ret
or
inc
or
pop
jo
js
and
stos
sbb
lea
cld
xorb
mov
fsubl
mov
or
cmpsl
js
sbb
jo
mov
cmp
call
int3
lcall
xchg
push
sbb
int
sbb
dec
loope
rcl
mov
jmp
cmc
dec
aaa
sub
push
mov
and
movsl
jp
sbb
pop
movsb
adc
addb
push
ljmp
mov
lea
andl
cltd
cld
addl
repz
push
push
lret
and
insl
movsl
cmp
lret
stc
ds
insb
mov
fsubp
sahf
fstpl
dec
lods
lcall
cmp
mov
pop
sub
ss
jns
and
sbb
mov
xlat
cmp
mov
stc
mov
push
sub
aaa
js
pop
pop
mov
imul
pop
jae
jle
or
jmp
pop
in
or
mov
scas
push
loop
rclb
add
std
cld
xchg
lcall
into
and
mov
orb
add
mov
push
sbb
dec
cmpsb
bound
call
in
clc
sub
xor
adc
addl
mov
jne
enter
addl
mov
aaa
rcr
fcomi
xchg
xor
es
rorb
lock
gs
mov
cmp
sub
aam
push
js
lock
daa
jg
xchg
push
mov
imul
rcrl
fwait
ljmp
out
lds
leave
aas
pop
out
call
add
stos
mov
es
push
jmp
push
jecxz
jl
push
and
ja,pt
test
bnd
enter
jbe
or
out
sub
jge
fiaddl
je
icebp
sub
xchg
jbe
sub
mov
mov
mov
xor
popf
je
add
clc
out
xor
mov
sbbb
or
outsl
movsl
addl
test
xchg
push
out
mov
push
call
sbb
in
lret
ja
ret
add
daa
add
insb
push
mov
dec
cli
pop
lret
jno
aad
add
test
sbb
imul
xor
fwait
adc
pop
rorb
xor
or
jno
xchg
inc
rcll
adc
pop
inc
xchg
mov
xchg
adc
arpl
fisttps
jo
jo
sarb
in
inc
mov
in
outsb
mov
je
and
sub
movsb
pop
or
xor
les
test
mov
and
mov
insb
int
add
jns
popf
pop
pushf
or
cltd
push
jo
scas
or
in
das
or
lcall
or
xchg
xchg
mov
pop
int3
lret
inc
pop
int
inc
dec
rclb
inc
sub
cli
fmull
lahf
jge
pop
int
mov
pop
pusha
and
push
xlat
shrb
mov
sbb
dec
xor
fcomip
adcl
mov
pop
insl
popa
inc
xlat
lods
mov
loopne
sbb
add
fdivrl
bound
cmpsb
ds
xor
sub
push
popf
cmp
xchg
test
xchg
adc
mov
shrl
adc
cmp
inc
in
mov
fs
xorb
pop
iret
sbb
dec
sub
loop
sbb
adc
jnp
pop
jbe
pop
insl
nop
or
std
aam
mov
repz
xor
pop
shll
mov
mov
and
xor
pop
in
lods
jmp
mov
fwait
adc
xchg
pop
jo
pop
and
or
js
and
ja
pop
xchg
inc
jl
xor
mov
inc
dec
push
inc
addr16
mov
inc
jbe
data16
push
aam
repnz
hlt
lcall
int
dec
xor
cmp
mov
sub
lret
cmpsl
stos
add
sub
int3
fdivp
nop
aam
scas
fwait
ja
jle
pop
dec
shll
mov
mov
into
test
psubd
out
sub
sub
bound
fcompl
ret
aam
mov
xchg
mov
scas
push
enter
movsb
ret
addr16
das
lcall
aad
lods
sbb
and
ret
in
dec
arpl
pop
ret
jno
sub
add
popa
pop
mov
gs
xchg
in
shll
add
sub
jbe
adc
call
jb
movsb
sbbl
add
jge
dec
or
adc
sub
push
ljmp
dec
inc
inc
add
jecxz
mov
inc
add
pop
js
outsl
mov
insb
daa
cmp
mov
mov
inc
fwait
add
mov
adc
data16
mov
in
mov
into
xor
lock
add
insl
insl
cli
pop
pushf
sahf
inc
add
jnp
and
jae
sti
cmpsb
mov
fnstsw
into
pushf
sbb
ljmp
scas
jg
fsts
sbb
add
outsl
jp
lods
pop
fstpt
andb
push
pop
inc
incb
aaa
mov
xorl
fiadds
cmp
jns
dec
dec
popf
notb
test
pop
add
arpl
movsb
xchg
aad
pop
xchg
xchg
push
xor
mov
out
fisubs
fistps
or
popa
xchg
mov
pop
jmp
aam
or
fstp
cmc
out
sub
pop
mov
in
push
xlat
test
and
les
add
aam
xorb
fmul
xchg
or
inc
xchg
in
cmp
fimuls
movsl
cmpsb
sub
mov
les
or
mov
in
cli
push
ret
mov
int
cld
add
push
sub
js
dec
in
jns
push
in
cli
jb
sbbb
cmc
mov
mov
mov
sbb
pop
rorb
daa
mov
incb
lret
push
and
cli
daa
cmp
inc
xor
jge
flds
adc
jecxz
or
gs
or
sub
xchg
jnp
pop
adc
push
shrb
or
push
xchg
sbb
ds
sbb
dec
out
push
repnz
xchg
mov
inc
jns
fcompl
push
pop
test
cmc
jae
push
stos
pop
xchg
jmp
sub
xlat
xorb
push
adc
jecxz
popa
mov
mov
scas
sub
into
or
pop
xlat
call
push
sti
fists
fildl
shrl
dec
cmp
push
ds
inc
push
jae
fnsave
jae
stos
dec
ds
movsl
jbe
mov
pop
xor
aad
scas
mov
repnz
jns
gs
push
test
lods
repz
xor
jle
stc
ja
jb
lods
xchg
imul
jne
repz
sub
mov
push
mov
sbb
adc
aad
pop
pop
dec
cmp
sub
sbb
loope
cmpsl
pop
repz
loope
or
in
inc
sbb
cld
je
add
bound
xor
sti
fs
inc
sub
pop
call
fistps
dec
cmp
mov
xor
xchg
mov
jl
lret
or
push
or
mov
push
fldl
xchg
cmp
dec
mov
dec
xlat
xor
jb
dec
jle
mov
fbstp
mov
sahf
cs
das
test
pop
js
aam
dec
int3
dec
inc
fcoms
pop
xor
pmulhuw
stos
xor
or
jp
pushf
push
dec
stc
pop
mov
mov
adc
xchg
jmp
fwait
cmc
aad
jle
push
cmp
insb
mov
loopne
lds
pop
mov
dec
test
inc
in
and
mov
jne
sub
cmp
and
addr16
int
add
mov
fwait
add
in
pop
arpl
loopne
cmp
or
jno
add
push
add
lock
jae
icebp
dec
daa
pop
and
jmp
sub
dec
imul
sub
in
les
and
push
adc
js
call
adc
hlt
cwtl
push
fcmovnb
ja
push
xor
mov
mov
xchg
in
imul
test
sti
pop
pushf
pop
xchg
test
push
sub
in
test
pop
das
pusha
movsl
xor
lea
adc
jae
test
pop
jne
js
mov
leave
inc
adc
xor
aas
push
mov
adcb
cmp
pop
dec
in
cltd
xchg
mov
mov
shr
adc
fwait
or
stos
xchg
cmp
std
jae
cmpsl
inc
and
cmp
inc
jno
decl
stc
jo
xor
jnp
mov
lds
mov
push
sbb
cmp
fdivrs
in
faddl
adc
mov
add
test
arpl
fcmovne
es
outsb
cs
pusha
pop
push
mov
syscall
sub
pop
adc
in
shrl
imul
iret
or
lods
mov
call
adc
adc
push
jmp
hlt
lret
push
outsb
inc
jg
das
jae
push
mov
xor
adc
xchg
int3
mov
movsb
cmpsb
sbb
leave
ds
mov
add
adc
mov
jne
scas
inc
inc
cmp
and
andl
lahf
aam
in
adc
sbb
push
sbb
push
insb
sbb
push
cwtl
jb
aam
push
std
xchg
mov
or
mov
sub
mov
mov
cmp
out
pusha
nop
nop
jae
inc
sbb
push
sbb
cmp
leave
popf
insl
jg
leave
cli
add
add
in
jmp
jecxz
ljmp
jb
add
pushw
adc
sub
aas
lock
lods
out
lds
int
mov
jmp
iret
fwait
hlt
js
mov
in
push
mov
out
cwtl
push
cmp
mov
xorl
popf
and
int3
sbbb
imul
xchg
inc
mov
or
and
lods
int3
rclb
in
js
sahf
daa
lds
adc
and
dec
aas
xlat
xor
ds
mov
out
push
js
and
dec
call
iret
orb
dec
and
cli
inc
stc
mov
repnz
or
sbb
jl
mov
adc
cmp
out
add
sbb
pop
pusha
jg
or
xor
push
gs
jb
lcall
adcl
mull
xchg
insb
push
push
lret
clc
jnp
mov
cld
jb
pop
mov
dec
cld
cmp
inc
pop
inc
or
inc
xor
insb
mov
pop
addr16
inc
movsb
dec
mov
push
imul
pop
outsl
aad
jae
cld
or
movsl
gs
or
or
add
mov
clc
fldcw
bound
fildll
sti
insb
sti
icebp
mov
xchg
mov
test
pusha
mov
sbb
jecxz
fadd
adc
test
xor
sub
aaa
or
divb
mov
add
push
adc
cmpsb
or
xchg
jns
test
mov
sti
test
mov
mov
xchg
pushf
negl
sub
add
dec
insl
out
pop
ja
loop
popf
fs
or
into
pop
and
aas
xlat
mov
aad
sub
movsl
flds
fnstsw
pop
adc
and
inc
hlt
pop
imul
movsb
lock
lds
fwait
jb
loopne
or
mov
enter
dec
cmp
xchg
add
push
shrl
shr
pusha
mov
inc
ds
dec
test
popa
sub
frstor
cs
mov
xchg
sbbl
cmpsw
sbb
bound
je
cs
movsl
or
adc
pop
test
aad
dec
fwait
lahf
ds
pop
push
mov
jo
into
fidivrl
cmpb
sub
inc
dec
or
lock
xchg
test
jmp
sbb
out
xchg
jo
cmp
pop
add
call
and
decl
sti
adc
js
rolb
fisttps
js
es
cltd
add
mov
cs
das
lcall
inc
rcrl
dec
aam
xor
push
dec
adc
jp
xor
inc
jmp
mov
sub
jns
jg
faddl
xchg
outsl
pop
call
sub
adcl
leave
xor
pop
add
xor
outsl
xor
inc
push
mov
sbb
in
lea
outsb
shll
jns
mov
fs
mov
push
mov
xchg
shrb
adc
inc
mov
scas
dec
dec
mov
sub
push
aaa
push
xchg
or
add
inc
push
xor
mov
inc
xchg
pop
jns
insl
or
pusha
arpl
mov
and
mov
jmp
lret
int3
mov
outsb
leave
lea
jae
xor
jnp
rolb
cmp
addb
or
mov
in
cs
aad
scas
add
in
lods
and
cld
mov
movsb
or
out
imul
xor
cmpsl
add
jnp
inc
cmp
or
cwtl
sbb
sub
jmp
inc
les
lds
xor
fldenv
xor
push
mov
mull
loop
push
mov
push
aad
cmpsl
sub
sbb
push
jnp
and
push
sub
lods
hlt
stos
outsl
jle
push
mov
call
sub
mov
cmp
sbb
push
and
rcrb
push
lds
out
inc
test
sub
fstps
and
mov
ds
loopne
int3
pop
jp
int
dec
jp
add
sub
mov
sub
add
mov
fmull
mov
out
inc
mov
adc
inc
mov
mov
popf
and
jb
xchg
lds
cmovp
jge
lds
ret
jnp
sub
adc
mov
pushf
dec
loopne
push
mov
xor
mov
mov
loop
scas
mov
fwait
iret
pop
mov
adc
shll
icebp
xor
push
inc
ljmp
lret
pop
cwtl
popf
outsb
sahf
mov
movsl
lahf
lahf
fcomps
jo
sahf
divb
and
sbb
fs
push
enter
out
pop
nop
pop
cli
jg
lret
xchg
insb
adc
push
pop
inc
in
add
out
sub
push
inc
outsb
lods
ret
popa
rclb
lea
mov
test
cmp
xchg
std
clc
push
jnp
and
xor
push
xorl
test
pop
and
adc
imul
stos
in
add
cmc
aad
in
mov
add
xorl
push
das
lods
push
lret
add
or
mov
lahf
pop
xchg
ds
jae
call
mov
push
test
enter
ljmp
imul
cmpsl
imul
or
sbb
addr16
repnz
mov
js
cmp
ret
lods
and
xchg
cmc
lret
movl
movsl
stc
repnz
add
xchg
test
mov
sbb
add
push
leave
mov
stc
or
mov
fwait
ljmp
or
icebp
into
adc
add
adc
jb
mov
pushf
inc
xchg
xchg
filds
add
scas
aad
loopne
fldt
subl
lea
push
inc
mov
ja
push
pop
add
je
and
and
xchg
je
push
mov
sbb
jb
stos
imul
inc
int
add
add
pop
cmp
lret
in
add
and
jmp
xchg
jmp
sub
pop
jp
mov
pop
movsb
and
fimull
jne
jge
lock
dec
sti
push
aad
and
aaa
push
add
mov
fs
scas
negb
mov
jbe
popf
sbb
add
movsb
lret
shlb
dec
cld
cmp
and
lods
inc
sub
aad
adc
in
or
and
and
scas
and
xor
cmpsb
out
xor
push
stos
push
lods
lock
mov
popf
das
insb
cmp
ret
adc
jg
cmp
lret
or
out
sub
xor
and
sbb
xchg
mov
call
jnp
dec
mov
pop
test
xchg
in
retw
sbb
mov
xlat
sahf
sbb
iret
jg
cmpsb
lcall
pop
jb
aas
and
rcr
fidivs
aas
jbe
cmc
add
aam
xchg
ljmp
jbe
sub
jmp
mov
lods
mov
ret
insl
jmp
subb
sub
subb
dec
pop
xchg
stos
adc
mov
and
dec
mov
xor
addb
std
rcrl
faddl
in
out
pusha
xor
cwtl
jl
enter
jae
mov
pushf
push
cmpl
test
dec
decl
stos
sarl
sbb
mov
xchg
xor
ljmp
mov
aas
pop
jle
mov
out
adcl
inc
adc
insb
outsb
gs
mov
push
test
shll
mov
imul
in
int3
xchg
rclb
push
cmp
ret
mov
xor
sub
iret
dec
hlt
int
js
adc
xor
mov
aad
loopne
sbbb
out
pusha
mov
mov
mov
or
and
mov
pop
inc
sbb
shl
xchg
add
fisttpl
pop
pusha
or
movsl
sub
scas
test
scas
xchg
lahf
mov
adc
leave
testb
jmp
and
xchg
imul
push
adc
sub
push
inc
nop
mov
mov
iret
mov
dec
in
test
adc
mov
mov
daa
add
adc
and
mov
fwait
cmp
dec
ds
movsl
jns
ljmp
xor
cmp
fnstcw
adc
out
into
loope
lock
push
cmp
adc
mov
mov
mov
add
xor
sbb
aas
outsb
and
push
pusha
lea
or
movl
push
punpckhdq
and
andl
lods
sbb
std
int
xor
nop
js
ds
insl
outsb
xor
mov
push
and
push
lahf
sbb
ss
pop
gs
lock
push
movsb
or
jl
sarb
mov
pop
lahf
cmp
iret
mov
fs
cli
cmp
pop
add
mov
push
xor
gs
or
mov
andb
enter
add
mov
in
fldt
sub
repz
adc
xorb
stc
int3
add
in
movsb
sub
aad
jnp
xchg
mov
ss
jmp
lret
sub
cwtl
mov
lods
loopne
scas
ret
shlb
jecxz
lods
and
cmp
mov
fistpll
mov
adc
fwait
aas
das
stos
xor
imul
fs
xchg
xchg
adc
lret
pop
std
dec
dec
fldl2e
stos
xchg
aas
out
adc
cmp
iret
xchg
xchg
ljmp
insb
jae
pop
jg
xor
mov
mov
dec
dec
mov
aaa
sub
scas
mov
lahf
adcl
mov
icebp
add
ja
dec
aam
mov
pop
pop
loope
loop
fs
clc
insl
inc
jmp
sub
test
aaa
jp
imul
push
mov
repnz
call
mov
ret
mov
mov
out
mov
inc
mov
add
cmp
mov
xchg
xchg
dec
jle
lret
je
cmp
inc
popa
int
lret
out
sub
mov
dec
mov
fmul
mov
mov
cmpsb
mulb
xchg
jle
xor
jno
cmp
add
mov
pop
cmp
fs
push
addb
adc
xlat
mov
dec
jle
push
mov
rcll
and
sbb
sbb
sahf
add
xor
out
inc
in
adc
stc
icebp
mov
mov
adc
jecxz
push
lods
dec
cs
das
cmp
test
xor
js
les
cmp
fstpl
and
lods
fmul
mov
lds
fcoml
inc
jo
jmp
lds
pop
pop
mov
cmpsb
mov
jo
mov
repz
pusha
jg
jp
pop
in
inc
mov
jmp
inc
aaa
lock
sub
mov
fsubl
and
jg
loope
or
jp
loopne
add
hlt
or
mov
es
adc
pop
test
std
mov
lcall
cltd
imul
jb
and
out
out
jnp
add
or
jns
sbb
mov
xor
jg
sahf
jecxz
sbbl
xor
pop
repnz
or
sbb
into
loop
inc
pop
sub
jp
sbb
xchg
sbb
mov
cmpsl
inc
andb
inc
mov
repnz
adc
scas
movb
jmp
ljmpw
rclb
sbb
mov
loopne
test
mov
sub
mov
dec
mov
mov
mov
xor
arpl
pop
jns
mov
add
leave
loope
shl
lock
out
jg
xor
stos
pop
lret
popa
sbb
add
arpl
out
pop
pusha
add
in
loopne
scas
xchg
push
xor
inc
in
mov
bound
inc
sbb
lods
push
in
and
jbe
repnz
cmpsb
stos
adc
mov
pop
in
enter
mov
int
sub
xor
cmp
repnz
sti
test
nop
xlat
pop
mov
fsts
adc
mov
sub
inc
lds
mov
pop
arpl
push
sbb
fistps
insl
mov
and
fnstenv
or
pop
adc
push
sub
fcmovne
sub
imul
pusha
push
jp
jne
sub
cld
fbld
pop
mov
orl
xchg
arpl
shlb
bound
dec
pushf
bound
mov
push
jns
ret
or
mov
lods
cmp
dec
cmc
pop
movsb
ret
pop
out
pop
push
mov
addr16
pop
and
inc
push
movsl
loopne
int
rorb
mov
sbb
pop
iret
ret
popf
insl
push
fdivr
insb
loop
cmp
dec
push
movsl
into
add
cmp
pop
inc
or
fdiv
imull
fldt
gs
shrl
test
inc
ds
mov
cmpsl
add
fidivrs
iret
add
outsb
jl
xor
xlat
pop
mov
andb
daa
dec
cmp
adc
sub
sbb
or
push
sub
mov
mov
push
inc
dec
aad
or
add
divl
sbb
push
dec
jns
xchg
mov
icebp
out
cmp
mov
pop
mov
les
test
subb
xor
fildll
pop
iret
stos
xlat
and
enter
sahf
pop
pop
dec
cmpsl
inc
insl
bound
insb
push
jno
sbb
aaa
test
call
in
arpl
jo
pop
cmp
popf
xor
pusha
adc
fsubp
pop
xor
repnz
popa
adc
test
add
push
add
shll
xor
dec
test
cld
mov
mov
sub
sub
stos
dec
fiadds
mov
mov
xchg
pop
jmp
cwtl
fisttpl
push
cs
xlat
icebp
mov
bound
shlb
scas
mov
loope
ja
sbb
rdpmc
divb
jle
loopne
sbb
jns
push
jb
das
inc
stos
ss
stos
sub
and
and
fwait
ds
cld
loope
mov
icebp
in
adc
push
les
lock
mov
mov
or
in
mov
mov
or
cmpsl
pop
ljmp
jmp
and
lahf
fdivrl
push
xlat
bound
mov
inc
pop
popa
mov
xchg
mov
stos
mov
mov
addl
ficoml
ret
outsb
cmp
jae
scas
mov
and
mov
jns
and
js
je
cmpsl
cld
in
add
dec
push
xor
call
push
fbld
mov
or
into
insb
lds
insb
cmp
insb
dec
sub
mov
mov
dec
ss
pop
and
aas
aas
xchg
inc
insl
sub
sub
leave
gs
cld
xchg
fnstsw
scas
lcall
lods
xchg
cwtl
jmp
out
insb
jbe
jle
mov
jg
js
sub
adc
mov
lret
jle
push
push
xor
test
sub
add
insb
popa
test
inc
aad
addb
ja
aas
shr
fldt
dec
sbb
jns
jmp
insb
test
push
adc
cmp
sub
and
pusha
scas
call
xchg
xchg
mov
lahf
push
call
adc
mov
xchg
push
jno
push
es
inc
jmp
pop
lods
stos
lods
jmp
and
mov
pop
decb
dec
sub
dec
cld
lds
mov
or
add
cmpsb
and
mov
clc
mov
push
push
fwait
push
cmp
pop
popa
or
jne
clc
in
stc
int
pop
inc
dec
mov
mull
mov
ret
lods
in
push
mov
pop
in
push
mov
xor
push
fwait
jo
dec
inc
inc
push
jno
sub
or
push
scas
cmp
xchg
imul
fisubl
sbb
repz
xlat
jne
push
ljmp
push
mov
popa
mov
int3
lret
pop
in
imul
cwtl
push
aaa
mov
add
loop
out
ss
jo
pushf
and
pushf
repnz
sub
mov
enter
int3
xchg
sbb
les
lret
mov
and
scas
dec
mov
out
mov
lahf
outsl
dec
movaps
mov
sbb
cs
push
push
incl
mov
inc
fs
mov
mov
cmp
xor
fidivl
out
repz
or
fdiv
std
in
inc
adcb
sub
sub
adc
xor
add
mov
nop
xchg
leave
fidivs
pop
stos
or
insl
and
sub
inc
leave
dec
int3
mov
cmp
in
dec
das
mov
jne
mov
jb
ja
into
mov
cmpsb
or
dec
fs
fwait
adc
stos
jp
and
lret
add
js
das
xlat
or
pop
pushw
add
or
xchg
in
js
pop
stos
dec
ficompl
xchg
or
cmp
jae
call
gs
cmp
pop
dec
adc
xor
sub
pop
pop
cld
leave
push
push
dec
inc
push
jo
jno
jge
jg
iret
mov
pop
sub
mov
adc
arpl
sbb
rorl
orb
sbb
add
out
in
in
repz
add
enter
gs
ret
mov
mov
div
mov
push
add
dec
lret
cmp
sub
scas
inc
inc
add
xor
fsts
push
push
idivb
pop
jns
cli
jne
cmpsb
mov
mov
addr16
add
mov
push
pop
xor
aad
dec
mov
xor
movsb
sarl
cltd
rcrb
das
add
enter
sbb
xor
add
pop
in
jl
dec
lret
lds
sub
dec
xchg
scas
mov
pop
pop
and
popf
lcall
daa
push
jnp
cmp
mov
cmpsb
and
or
lds
push
pop
cmpsb
int
mov
cmovle
mov
xor
sahf
or
out
xchg
test
jbe
mov
inc
lcall
sub
stc
fiaddl
ret
es
adcl
xchg
or
lock
adc
mov
call
in
sub
mov
or
mov
cmp
roll
mov
or
xchg
nop
and
shrb
test
jne
lret
int
pop
inc
shll
mov
mov
shrb
js
ds
lods
and
dec
into
xchg
arpl
xchg
jecxz
adc
xor
sbb
cld
mov
cmp
xor
cmp
xor
cmpsb
xchg
adc
imul
lahf
mov
sbb
in
pusha
aas
sbb
leave
cwtl
mov
xchg
and
ljmp
pop
icebp
ja
push
inc
mov
jbe
das
sbb
popf
hlt
pop
sahf
or
orl
sbbb
mov
inc
and
sahf
ja
inc
push
inc
pop
out
shl
lcall
and
xchg
mov
push
push
cmp
xchg
lea
mov
shll
mov
mov
lods
push
push
loop
xor
lods
imul
in
sahf
xlat
inc
repnz
mov
sarb
fcmovb
mov
mov
jb
test
add
nop
shrl
sub
scas
lahf
rorl
jo
dec
daa
int3
rcrb
aaa
ljmp
xchg
cmp
sti
int3
sbb
enter
sbb
xchg
mov
and
mov
mov
and
push
and
or
jecxz
add
cmc
xchg
dec
sub
cltd
mov
and
loop
cmpsb
dec
sub
xchg
jne
jge
and
push
mov
out
je
nop
jne
pop
or
cmp
jge
push
mov
in
out
jmp
icebp
pop
ss
lods
xchg
scas
sahf
sub
xchg
pop
shll
pop
rcll
pop
push
mov
jbe
add
pop
inc
inc
aaa
jle
push
ret
sbb
insl
pop
popf
orb
repnz
fdivs
mov
mov
sbb
movsb
cld
cmp
dec
movsl
xchg
loope
arpl
sbb
std
sub
sub
jmp
loopne
mov
jp
and
mov
cmpsb
add
or
les
jl
clc
mov
pop
ffreep
sarl
sbb
mov
mov
mov
xchg
xor
loop
xchg
dec
mov
push
subl
sahf
push
ljmp
fwait
sbb
test
fisubrs
jge
in
mov
pop
scas
and
xchg
iret
dec
adc
xor
mov
ljmp
lcall
mov
dec
sub
jmp
andl
enter
mov
lods
add
sub
lcall
shll
scas
icebp
inc
int
shll
scas
jmp
inc
out
push
push
adc
inc
dec
pop
cmpb
xor
dec
jb
fmulp
xchg
dec
mov
int3
inc
aad
jae
mov
dec
sbb
cltd
mov
xchg
jnp
rol
dec
push
lods
pop
adc
jmp
lahf
sub
neg
cmpb
imulb
jb
pop
pop
stos
test
test
and
sahf
lcall
mov
add
adc
lcall
mov
adc
mov
jne
or
mov
dec
cmpsl
xlat
fmul
inc
inc
pusha
add
leave
push
pop
mov
roll
jne
adc
and
fisubs
insb
or
inc
cmp
aam
sti
xchg
mov
push
cmp
cmp
xor
dec
es
stos
subl
lcall
cli
and
and
nop
and
int
loopne
int
push
rcr
in
flds
add
loopne
jl
cwtl
jl
pop
fnsave
rol
lret
sub
lods
out
jnp
pop
push
inc
mov
and
les
or
inc
shl
cli
mov
fchs
mov
jle
cltd
bound
pop
arpl
insl
ret
addr16
in
pop
push
fcmovbe
cmp
mov
pop
mov
addb
pop
inc
or
mov
adc
sbb
inc
mov
iret
aas
xchg
mov
lds
adcl
lds
sbb
cmp
xchg
mov
movsb
rcll
out
shlb
mov
xlat
jo
jmp
sub
ljmp
sbb
mov
loope
in
lea
xor
fs
cmp
jmp
pop
pop
test
loope
pop
mov
mov
or
mov
or
jno
jmp
push
mov
dec
pusha
cmp
cmp
sbb
ja
push
jmp
test
cltd
xor
arpl
xor
sti
xchg
popa
add
fbld
inc
xchg
dec
test
xchg
lret
nop
push
loopne
loope
je
pop
enter
into
sub
mov
das
mov
adc
mov
sbb
jl
add
icebp
mov
cld
mov
xor
or
mov
mov
adc
mov
enter
scas
xor
mov
mov
mov
cmp
stos
pusha
test
mov
stos
inc
cmp
dec
pop
mov
nop
xlat
push
arpl
inc
jecxz
mov
xor
arpl
testb
fcomps
push
add
je
inc
es
insb
inc
lret
js
cmpsb
fmull
aas
push
sbbb
aas
or
and
push
mov
int
and
jbe
fmul
cwtl
lods
xchg
fidivl
stos
add
popa
mov
and
fcomi
or
pop
clc
adc
ret
lahf
xor
data16
ja
xor
loop
fnsave
in
and
jge
push
incl
cmpb
pmullw
stos
stos
scas
add
pushl
out
adc
pop
jne
mov
push
mov
sahf
ljmp
jge
inc
mov
frstor
mov
ss
insb
xchg
or
daa
xor
add
fildll
dec
imul
push
push
std
andb
andb
repz
fldt
push
lcall
push
mov
lcall
xor
push
ljmp
in
cmp
stos
mov
loop
xor
out
int
nop
hlt
decb
push
adc
stos
sahf
jg
inc
fldcw
mov
sub
inc
bound
inc
jno
pop
push
xor
scas
or
jb
outsb
in
mov
adc
sub
test
mov
scas
addr16
push
mov
mov
push
xor
sub
or
stc
inc
sahf
dec
mov
ljmp
scas
push
inc
ret
jge
mov
pop
mov
vpmacsdd
shlb
sbb
int
and
push
daa
or
fsts
jbe
loope
sbb
movsb
sbb
xchg
push
dec
and
pop
addl
inc
or
jno
push
imul
jl
cmp
cmp
add
testl
push
je
cmp
xchg
and
ret
mov
ss
lret
ss
loopne
loopne
lcall
fnstcw
out
xlat
stos
add
sub
jns
dec
jo
loopne
mov
add
cs
push
fcmovbe
mov
pop
pop
lods
daa
push
call
loop
int3
jle
xchg
inc
inc
dec
lret
arpl
sub
push
sub
into
int
sahf
jae
cmpsl
push
cwtl
mov
jo
pop
and
add
jg
cmp
js
mov
adc
or
stc
cmp
shlb
push
and
pop
addb
sbb
stos
mov
xor
mov
push
outsb
sub
and
ja
jns
mov
call
repz
dec
xor
mov
inc
lea
inc
jne
and
adc
xchg
popa
adc
in
pop
subl
xchg
mov
mov
daa
sbb
push
fwait
add
jne
cmpsb
jbe
mov
push
frstor
pushf
xor
xchg
sub
int3
paddb
xchg
ja
push
hlt
rcrb
subb
jns
xchg
roll
je
in
or
mov
and
clc
push
aam
inc
iret
and
jno
inc
cmp
adc
aad
and
scas
hlt
push
sub
xor
or
imul
mov
adc
xor
push
cmp
cmp
iret
push
pop
fwait
add
mov
hlt
jmp
or
jno
stos
stos
inc
inc
mov
jnp
pop
fidivl
fadds
cs
negl
add
out
enter
jns
int3
cs
jb
daa
pop
jge
cmp
xchg
cmp
mov
cmp
inc
inc
icebp
xor
mov
sbb
loopne
hlt
int
mov
adc
mov
pop
pop
stc
adc
sarb
int3
aas
sbb
int3
enter
imul
add
ljmp
outsb
ffree
or
xor
xor
rcrl
pop
ret
mov
ucomiss
fisttpl
xor
inc
sbb
jns
inc
test
add
jmp
jbe
xor
sub
cli
pushf
repz
lahf
leave
cwtl
popf
mov
or
sub
ljmp
push
stos
inc
jp
or
inc
mov
cld
pushf
bound
cmp
int3
xchg
adc
movsb
cli
cmp
into
or
lds
mov
out
mov
aaa
scas
xor
pusha
xor
icebp
neg
cmp
loope
add
loope
cwtl
and
dec
aam
dec
arpl
in
lahf
jns
mov
xchg
pop
loop
test
inc
cltd
sti
shll
mov
lods
xor
cmp
dec
mov
into
mov
gs
adc
roll
sar
xor
mov
adcb
dec
mov
mov
scas
lcall
ret
xchg
stos
inc
jecxz
insb
and
out
and
jl
fcoms
jecxz
or
or
iret
ja
scas
or
mov
and
loopne
int
add
pop
std
push
iret
sub
sbb
adc
mov
pop
add
idiv
mov
sub
cmc
leave
enter
xchg
push
enter
sbb
aad
pop
jmp
arpl
push
and
sub
add
dec
adc
jp
or
adc
dec
jle
xor
mov
mov
sbb
push
adc
push
lods
insb
pusha
dec
xchg
mov
cltd
aas
cmp
add
stos
add
cmp
push
xor
repnz
pop
aam
inc
jne
mov
shrb
sbb
cmpsb
jbe
adc
inc
out
daa
cmp
jge
test
addl
lods
jo
addb
pop
add
fsubrs
mov
pop
and
pop
icebp
push
loopne
cmpsl
repnz
jecxz
out
sbb
repz
inc
mov
lret
sti
add
inc
inc
pop
test
push
iret
push
fxch
cwtl
or
cli
mov
jecxz
jbe
jl
mov
mov
and
mov
jg
sbb
add
cwtl
cmp
imul
xchg
mov
int3
hlt
jp
dec
mov
out
or
mov
inc
adc
jb
aaa
lcall
adc
push
push
sbb
in
incl
adc
mov
cmp
aas
push
mov
xor
push
mov
sbb
inc
lret
lds
cmpl
pop
adc
fisubl
in
sub
mov
in
jecxz
mulb
adc
cmpsb
popf
and
or
add
pop
push
and
xlat
xlat
clc
lea
push
adc
sub
ret
xlat
xor
cmp
mov
sbb
aam
and
insb
mov
jg
mov
inc
mov
and
mov
loopne
jge
idivb
mov
iret
nop
pop
test
mov
add
jno
pop
stos
shrb
xchg
stos
or
rorl
push
mov
in
mov
clc
in
fs
xchg
outsb
ds
sbbl
add
xchg
push
add
test
push
inc
mov
or
into
jg
test
loop
rcr
inc
jp
xchg
or
hlt
inc
push
add
out
inc
adc
mov
pop
pop
cmc
test
sub
repz
repz
mov
adc
das
fadds
out
std
int3
add
in
ljmp
rcrl
xchg
cmp
xchg
add
fs
stos
cmpl
dec
aas
movl
adc
xor
into
add
stos
push
mov
dec
mov
jecxz
loopne
or
cli
jl
icebp
mov
jg
icebp
and
mov
iretw
mov
xor
cmp
movsl
rclb
in
test
aam
mov
sbb
fwait
sbb
repz
sbb
pushf
adc
cmp
lcall
xchg
mov
or
leave
cmp
cmp
push
mov
bound
jl
pop
xchg
call
scas
mov
add
push
xorb
outsl
cwtl
in
inc
xchg
mov
nop
sbb
addr16
cmp
pop
inc
or
je
ljmp
adc
push
or
xchg
xor
imul
adc
jecxz
cwtl
or
lods
test
insl
mov
jmp
data16
cltd
int
ret
fcmovne
xchg
adc
daa
xchg
pop
mov
dec
test
xchg
pusha
xchg
xlat
mov
cli
inc
cmp
dec
das
nop
movsb
mov
in
cs
mov
jle
mov
stos
int3
xchg
clc
inc
mov
mov
push
inc
push
mov
or
dec
mov
into
jo
inc
out
test
scas
cmp
mov
push
jb
cmpsl
daa
inc
mov
inc
leave
inc
iret
cwtl
cmp
aaa
mov
out
sahf
mov
sysret
jbe
and
jns
out
push
sub
jne
sti
push
xor
jo
cmp
jnp
push
push
push
ds
nop
aas
in
enter
jecxz
add
in
xchg
push
cltd
lods
in
bound
scas
jp
fstl
xchg
xchg
mov
shll
sub
stos
in
jp
push
pop
insl
fisttps
outsl
mov
sub
out
push
arpl
mov
inc
dec
aad
pop
pop
cltd
push
cld
mov
and
and
bound
pop
sub
cmp
mov
dec
dec
jnp
mov
jl
jo
mov
sbb
test
cli
insl
xchg
inc
fidivrs
mov
mov
clc
mov
in
adc
sub
jl
lds
rolb
push
loopne
xchg
loope
jnp
scas
mov
mov
push
and
mov
push
mov
je
dec
ret
incb
and
negb
mov
xor
mov
lods
add
xchg
cmp
lret
test
jmp
imul
jge
xor
push
stos
das
jo
dec
add
ficoms
or
jp
mov
xchg
hlt
mov
pop
mov
mov
outsl
inc
lods
sbb
inc
out
push
sub
add
dec
inc
sub
push
xchg
rclb
add
test
cmpb
mov
loope
inc
pop
push
icebp
hlt
scas
pop
inc
mov
pop
jmp
dec
push
pusha
rcll
enter
xchg
imul
mov
push
push
xor
cmp
push
stc
mov
call
lds
js
cmp
cwtl
or
cmp
fwait
outsb
jecxz
loope
sbb
int3
cmc
mov
cmp
faddl
insb
iret
mov
mov
ja
in
insb
outsb
or
cmc
jno
stos
lods
cmc
pop
jge
mov
cwtl
sbb
push
inc
xchg
pusha
push
in
push
dec
gs
mov
mov
in
xor
xor
stc
jo
in
int3
jne
xchg
mov
cmp
dec
mov
xor
insb
mov
imul
movb
fs
dec
mov
into
inc
mov
mov
cs
push
popa
jge
pusha
loop
mov
dec
sub
mov
repz
sahf
shrb
adc
add
inc
pcmpgtb
loopne
in
notl
es
mov
hlt
je
mov
adc
int3
sbb
push
and
aad
call
jmp
mov
cli
adc
mov
les
bound
jmp
popf
push
or
aas
fiaddl
mov
aas
cmp
and
les
inc
in
sti
jnp
aas
in
xchg
out
mov
imul
cmpsl
pop
push
in
mov
sbb
push
popf
pop
roll
inc
mov
cmp
sub
cmp
jmp
mov
push
fildl
fsubl
sbb
lcall
pushl
notl
out
shrb
imull
inc
mov
enter
movsl
xchg
shlb
out
or
jno
in
push
ja
adc
xor
mov
test
mov
scas
insb
or
loopne
aas
sbb
divb
mov
and
divb
cld
or
sti
jo
sub
cmp
jle
in
fiaddl
cltd
imul
cmpsl
dec
push
mov
or
repnz
mov
cmpsb
hlt
mov
ret
hlt
loop
bound
rolb
jne
xchg
stc
popa
nop
mov
jno
cwtl
and
pop
push
scas
orb
push
push
push
outsl
inc
sbb
mov
xchg
add
aad
sub
ja
test
pop
cld
push
repz
into
cwtl
stos
sbb
add
mov
inc
push
into
shll
movsl
cmc
dec
bnd
pusha
arpl
push
loope
inc
ss
subb
popa
test
lock
and
fimuls
mov
jecxz
repz
xchg
xchg
outsl
mov
sub
mov
in
xchg
push
jbe
stos
pop
iret
ja
cmp
xchg
xor
add
mov
inc
and
enter
popf
mov
xchg
addr16
xchg
pop
test
pop
movsb
outsb
jmp
std
lahf
ret
movsb
jmp
ss
push
pop
cltd
inc
jo
adc
test
xlat
imul
pop
rol
cmp
mov
sti
pop
call
sbb
pop
scas
sub
imul
sbb
and
or
in
mov
push
cs
out
aas
ret
push
mov
lea
jmp
imul
sti
sti
je
sub
mov
test
ret
pop
inc
ret
shlb
adc
fldenv
out
pop
xchg
fcoml
cli
fsub
cmp
xchg
call
test
jle
movsl
imul
push
push
mov
popa
rcl
adcb
scas
movsl
test
stc
out
scas
sub
mov
in
push
mov
push
dec
leave
and
repz
sbb
and
pop
sar
mov
nop
push
daa
ret
dec
pop
mov
sti
inc
xchg
adc
imull
fyl2x
std
loopew
pop
ljmp
mov
jmp
jmp
arpl
fstps
imul
popf
in
fnstsw
sub
arpl
aas
mov
adc
dec
pusha
cmp
push
jbe
jmp
dec
xchg
inc
and
inc
shl
rcll
cmp
mov
mov
lcall
ljmp
or
add
dec
lret
cli
fcoml
jle
nop
push
loop
cmp
mov
cli
popa
sarb
imul
jg
or
shll
jo
aas
loope
xlat
cmc
mov
test
movsl
cmpsb
stos
xor
and
ds
pop
enter
dec
jno
adc
jge
xchg
push
mov
sub
pushf
inc
mov
movsl
or
icebp
shr
mov
xchg
push
jno
xchg
in
push
or
movsl
pop
out
push
or
out
cmp
fbstp
insb
jge
icebp
jbe
xchg
cmpsb
jne
hlt
mov
cmp
cmpsl
shll
mov
call
test
mov
popl
mov
push
and
xor
addr16
sbb
and
arpl
xchg
scas
and
daa
and
mov
js
hlt
sub
mov
outsb
xchg
xchg
inc
mov
jbe
xor
mov
aam
jo
or
push
mov
fwait
mov
aam
stos
xchg
cmpsl
mov
or
bound
lret
mov
out
mov
stc
jp
jb
test
lods
shl
call
movsb
inc
xchg
pop
ja
pop
inc
sub
aas
pusha
xorb
test
dec
aad
jb
aad
lods
bound
and
leave
xchg
fdivrs
pop
push
mov
loope
lcall
imul
ss
stc
subl
dec
and
add
xor
inc
aam
daa
jns
sub
icebp
sub
stc
xor
mov
and
inc
loope
aas
scas
xchg
lcall
pop
and
aam
push
lods
lea
scas
fs
add
or
test
mov
mov
insl
insl
insb
ret
mov
xor
lret
leave
mov
push
pop
daa
cltd
leave
fcomp
pushw
jg
mov
add
sbb
sub
adc
jmp
inc
insb
xor
dec
pop
sub
in
mov
sbb
js
inc
lahf
ret
xchg
fnstenv
lds
sbb
mov
dec
out
jns
pop
cmp
mov
enter
leave
repz
rcrb
xor
pop
sbb
jae
jae
add
push
cmp
inc
gs
dec
push
jb
mov
jns
imul
rep
xor
xor
clc
mov
popa
adc
adc
hlt
sub
xchg
jnp
lds
sub
mov
dec
ja
jl
je
stc
lods
lods
fcoms
xor
jb
fidivrs
cmpsl
xlat
pop
mov
scas
xlat
popa
js
adc
negb
dec
mov
push
les
and
movsl
imul
das
sbb
hlt
into
insl
xor
push
push
push
aas
jg
out
cmp
jg
imul
mov
clc
fdivrs
insl
jne
std
aas
out
icebp
xchg
adc
fdivrs
xchg
ljmp
lods
flds
add
jl
xor
addr16
sbb
push
lds
mov
jno
cmpb
cmpsb
imul
add
mov
insl
ds
xor
int3
inc
pushf
mov
mov
inc
pop
mov
movsl
imul
mov
jae
mov
imul
clc
pop
mov
add
ficoml
xchg
out
xchg
dec
push
xor
nop
filds
dec
pop
int
and
and
mov
in
mov
inc
adc
or
mov
stos
fiaddl
dec
mov
jle
fnstcw
daa
lea
jno
ss
jle
pop
inc
lret
push
pop
xchg
movsb
jmp
pop
cmc
sub
int3
xor
insl
mov
test
dec
scas
lahf
jecxz
daa
sub
pop
iret
xchg
loopne
ret
enter
lcall
mov
jb
fdivs
arpl
or
repnz
cltd
adc
pushf
lcall
or
mov
dec
sub
jno
aas
into
and
clc
int3
mov
cmp
add
push
pop
mov
xchg
jb
sub
jl
mov
sbb
and
mov
into
sbb
cmpsb
popa
xchg
dec
mov
nop
sub
dec
loopne
rol
sub
lret
std
sbb
cltd
aad
negb
xlat
jo
scas
xchg
ljmp
ss
adc
sbb
inc
repnz
loopne
jne
jns
lods
and
adc
xor
loopne
sbb
sub
mov
out
cmp
insb
adc
data16
ret
mov
jne
add
je
mov
xchg
in
mov
fdivrs
rorl
jg
imul
mov
mov
clc
addb
cmp
lock
nop
pushf
push
outsl
jnp
repnz
dec
gs
jl
imul
and
in
add
insb
out
adc
pop
jecxz
and
mov
insl
ficompl
stos
xchg
dec
das
pop
xchg
in
pop
jg
stos
shl
sbb
add
in
jmp
jbe
cltd
ds
adc
inc
popa
pop
and
xchg
add
ljmp
addb
pop
cld
aad
sub
sbb
fcomps
xchg
subl
in
popf
mov
je
mov
jo
jns
out
adc
sub
movsl
insb
aas
xor
mov
or
imul
jecxz
mov
inc
sbb
mov
stos
or
mov
push
mov
adc
daa
pop
sbb
test
xlat
out
mov
cmp
rcll
adc
pop
movsl
and
out
pop
jle
shl
sbb
jge
cmpsl
push
mov
inc
in
push
inc
pop
shrl
icebp
and
push
pop
pushf
jge
push
xchg
negb
xor
jge
sub
in
inc
je
std
stc
pop
lods
loopne
xor
mov
pop
pop
mov
push
jns
inc
outsb
sub
jl
fwait
and
push
or
sub
aad
loop
jbe
lahf
inc
std
frstor
test
movsw
push
add
inc
sbb
and
ja
stos
hlt
fwait
cwtl
xchg
pop
cltd
mov
fisubrs
bound
jne
stos
movsl
push
ret
dec
ret
xor
cmc
rol
mov
ret
ret
cmp
loop
fadd
sub
clc
aaa
dec
pop
outsb
sti
data16
arpl
jno
inc
mov
dec
dec
mov
clc
scas
pop
inc
ja
imul
xorb
mov
mov
pop
mov
inc
sbbl
jne
out
cmp
or
cmp
mov
in
inc
fidivl
cmc
xchg
sub
orb
xchg
test
xchg
or
insb
pop
xor
pusha
or
dec
popa
call
jmp
and
dec
bnd
jb
inc
sub
xchg
add
push
mov
jmp
notl
jecxz
adc
out
inc
call
imul
daa
add
fs
jno
imul
jl
or
mov
lods
xor
je
imul
cmc
popa
push
pop
dec
ljmp
test
mov
or
les
aaa
mov
mov
ja
repz
sbb
ret
adc
xlat
clc
fdivl
bound
dec
xlat
cld
test
cmp
jb
inc
xor
mov
in
lcall
xor
cmp
jg
dec
xchg
inc
fsub
aad
mov
cmp
push
aaa
test
flds
mov
cltd
jno
mov
loop
push
and
sti
decb
cmpsl
dec
jae
mov
jle
xchg
or
push
lret
xor
mov
xchg
mov
out
scas
cwtl
xorl
insb
push
aad
fbld
sbb
ret
adc
stos
fwait
push
and
out
jns
pushf
aam
jb
sbb
js
dec
out
sbb
dec
mov
pop
addr16
std
pmullw
add
clc
cmp
sub
or
enter
add
cmpsl
ret
pop
and
cmpsl
out
jnp
pushf
lock
inc
jmp
ss
scas
inc
xchg
lret
push
fisttpll
pop
adc
cmp
adc
loope
add
unpcklps
mov
xchg
adcl
movsl
scas
insl
mov
jle
dec
or
pop
rorb
xorb
dec
jne
mov
and
repnz
inc
cli
mov
xchg
jle
sub
addr16
lret
lock
lods
lock
clc
push
jecxz
pop
pop
cmp
es
rcrb
mov
adc
push
sub
mov
or
pop
stos
ret
lds
mov
mov
incl
ja
inc
push
sbb
and
xchg
pop
lods
push
jno
xchg
dec
or
dec
dec
jp
leave
and
stos
xchg
or
mov
mov
jne
push
pop
push
test
sbbl
push
jge
adc
jno
or
test
or
xchg
clc
jl
push
adc
stos
mov
out
adc
in
cmp
mov
fucom
movsl
fstpl
adc
ja
clc
pop
jecxz
cmp
mov
in
repnz
jg
sbb
adc
mov
fwait
cltd
pop
inc
pop
std
arpl
push
int
jge
lret
dec
stc
orb
fldenv
int
jne
sbb
stos
mov
mov
jnp
push
dec
xchg
xor
jns
sbb
sbb
or
sar
push
or
mov
fbld
fcomps
jae
jo
adc
inc
mov
jns
xor
dec
hlt
loope
shlb
movsb
pop
es
push
push
aaa
cmpsb
in
cltd
pminub
insl
pop
pop
lcall
scas
ret
pop
mov
mov
hlt
dec
loopne
jge
cmp
ja
out
jmp
mov
sbb
lods
pop
mov
scas
sub
mov
xor
push
push
jle
pop
pushf
mov
popf
push
add
xor
in
or
not
xchg
pop
sahf
and
inc
stos
and
mov
mov
mov
dec
aas
mov
sub
dec
shlb
cmp
pusha
cmp
adcl
and
sbb
sahf
cmp
sub
inc
mov
sahf
xchg
out
imul
xor
jl
outsb
aam
sub
iret
ret
or
loopne
mov
cwtl
sub
or
mov
dec
xchg
aaa
sti
lds
add
xchg
or
cmp
push
cmc
stos
sbbb
inc
ds
add
xchg
rolb
pop
sub
xchg
inc
out
and
cmpsb
lods
jno
mov
and
in
test
inc
iret
mov
call
sbb
jne
xor
adc
push
bound
lcall
inc
dec
pop
stos
shll
testb
gs
mov
fwait
cmp
loopne
add
mov
dec
cmpsb
rorb
call
lcall
hlt
pusha
stos
repz
sbb
int
mov
inc
fwait
pop
popa
mov
scas
sti
std
mov
rol
mov
repnz
in
push
and
push
cli
jle
sbb
add
cmc
jge
fmulp
xchg
push
push
mov
std
mov
add
int
cltd
mov
in
jl
mov
ret
movsb
js
outsl
mov
jecxz,pt
rcrl
jbe
pop
loopne
cld
mov
outsl
cwtl
fmuls
mov
sub
xor
repnz
mov
rcr
pop
gs
mov
dec
inc
xor
pushl
fidivrs
ja
sar
pop
mov
inc
rcl
mov
pushf
sub
xor
mov
movb
and
js
push
adc
arpl
fildl
out
mov
inc
sub
icebp
lds
test
arpl
xchg
sub
sbb
mov
loop
mov
dec
mov
jnp
iret
rcll
and
or
cmpsb
sub
lods
hlt
inc
or
lcall
leave
and
lea
mov
fwait
add
mov
push
push
addr16
cli
out
push
mov
adc
stos
and
pop
inc
dec
cmp
sbb
xchg
dec
and
dec
push
add
xor
add
imul
daa
push
adc
inc
adc
cmc
sbb
rorl
cs
xchg
jae
shlb
js
loope
dec
les
lahf
xchg
and
inc
dec
aas
mov
mov
pop
jbe
repz
out
fiadds
sub
cwtl
jle
int3
fidivrs
cs
addb
clc
dec
mov
mov
lds
xchg
pop
xchg
scas
fdivr
std
loopne
pop
scas
lods
push
mov
mov
jb
and
test
aaa
and
dec
add
lods
repz
in
cmp
stos
scas
jne
mov
xchg
fstps
pop
scas
and
sub
sbb
ja
push
xor
sbb
ja,pt
jmp
add
mov
and
sarl
nop
jae
sbb
or
push
inc
leave
jle
mul
push
aad
lcall
pop
jmp
lods
iret
mov
aam
cs
movsl
mov
test
mov
jo
xchg
in
jae
cld
mov
fwait
mov
mov
push
je
enter
push
loope
dec
sbb
test
or
scas
sbbl
aaa
sub
cmpsl
mov
mov
rorb
mov
movsl
adc
and
jo
dec
dec
in
or
sbb
insb
adc
sub
inc
add
xchg
mov
xor
popf
inc
aaa
dec
daa
lods
les
inc
or
roll
pop
dec
xchg
les
in
loopne
outsb
mov
clc
push
adc
shll
std
and
pop
dec
jecxz
scas
ret
jne
adc
pop
add
jb
imul
gs
add
mov
shll
fucomip
fldl
ja
loop
ret
xor
rorl
sub
es
jle
sub
fs
stos
xchg
ret
in
mov
jne
cld
adc
dec
pop
imul
jae
orb
scas
fdivp
shl
pop
add
push
pop
into
repnz
pop
insl
rolb
push
dec
cwtl
fldcw
scas
in
xchg
pop
xchg
out
lods
fbld
pop
test
add
sarb
mov
pop
jb
mov
daa
in
adc
ret
dec
xchg
int3
pop
lods
ja
xchg
jmp
fcmovne
xchg
lods
fisubs
adc
lret
mov
cmp
jnp
push
add
repz
popf
imul
jecxz
xor
and
ljmp
mov
mov
in
outsb
or
je
mov
loope
sub
mov
sbb
popa
clc
adc
or
mov
dec
fbld
mov
das
shrl
mov
cmc
movb
stos
or
inc
jae
xor
mov
pop
sbb
fdiv
stc
xor
mov
cli
sbb
clc
jns
mov
add
repz
push
inc
cmpsb
shrl
push
popf
jno
mov
insl
cmp
inc
sbbl
sbbl
mov
mov
pop
xchg
pop
test
sbb
fsubr
dec
jmp
in
mov
jp
fldenv
ret
jmp
cmpb
nop
pusha
repz
cmp
addr16
mov
sbbl
inc
sub
jo
mov
pop
lahf
mov
test
cld
out
sbb
and
and
rorb
jl
sub
pop
mov
xor
and
dec
std
xchg
sbb
adc
movsb
inc
mov
shlb
dec
insl
lahf
cld
leave
mov
sub
jae
nop
in
or
lcall
inc
fld
bound
les
mov
repz
mov
rclb
push
adc
out
testl
xchg
mov
cmp
xchg
cmpsl
sbb
insb
sub
xor
xchg
mov
cmc
pop
sahf
daa
pop
movsl
in
or
add
stos
inc
sbb
orb
out
lds
mov
jmp
shrb
aaa
imul
ret
push
gs
fs
mov
add
sub
ljmp
addb
jge
and
cmp
and
or
xchg
mulb
jmp
ret
mov
pop
int
and
mov
les
mov
mov
jl
pushf
ds
fildl
mov
mov
xchg
es
movsb
or
daa
jmp
sti
add
in
dec
dec
mov
in
sub
xor
fbld
push
jmp
mov
dec
sub
in
cmp
out
jmp
test
dec
int3
push
inc
outsl
aam
pop
daa
jo
push
jbe
scas
dec
cmp
cmp
fs
add
addr16
adc
loopne
lcall
mov
or
jp
jb
sbbl
fprem
and
call
ret
and
insb
jecxz
xor
lcall
repnz
pop
jbe
or
int
mov
sub
and
or
xchg
mov
jae
push
imul
push
into
enter
cltd
sti
inc
nop
popf
jmp
test
sub
or
popf
fmull
fistl
xchg
or
cltd
lcall
aam
jle
into
or
lea
mov
and
sbb
sbb
add
imul
push
lock
int3
pop
cmp
fwait
pushf
push
mov
push
sbb
nop
jne
stc
mov
jns
cmp
add
inc
insl
stos
mov
or
stos
mov
adc
push
push
sbb
jecxz
ja
leave
cmp
sub
jle
cmp
rcr
mov
xchg
icebp
pop
loopne
jmp
cmp
inc
stc
jb
imul
mov
sahf
ret
dec
shll
jl
jmp
inc
dec
mov
push
cmc
out
out
cmp
pop
pop
fdivs
pop
mov
outsb
in
and
fidivl
sti
test
sub
test
addr16
rorl
and
mov
test
xchg
mov
repz
shl
mov
sub
or
jnp
cmpsl
sub
xchg
mov
imul
xlat
pusha
jae
xlat
clc
lods
inc
decb
mov
fldl
push
mov
sub
sbb
lds
jmp
xchg
mov
fcomip
leave
js
std
xor
lcall
sbb
inc
test
dec
pushf
shlb
mov
movsl
dec
imul
js
test
lods
xchg
pop
push
add
in
push
test
iret
jp
cmp
sub
or
jnp
jae
fdivrs
or
ror
cld
xchg
loop
cmp
cmp
insb
aam
addr16
push
mov
cli
pop
ljmp
addl
int3
cld
pop
add
adc
adc
aad
lret
mov
cmpb
es
jno
ret
or
inc
xchg
jnp
outsl
mov
sbb
insl
loopne
fmull
mov
out
mov
mov
jecxz
in
jo
jge
jb
jns
shr
lds
pop
pop
jb
inc
iret
push
inc
mov
inc
fwait
xchg
cmp
adc
pop
push
out
shrl
sbb
sbb
insl
cwtl
push
cmpsl
jl
movsl
mov
jnp
les
dec
lods
jg
stc
in
and
inc
mov
int
pusha
jbe
ljmp
mov
mov
dec
adc
pop
frstor
jecxz
push
outsl
sub
dec
inc
outsb
mov
bound
add
fucomip
jae
mov
xchg
lcall
push
shll
cmpsb
in
inc
dec
push
dec
mov
push
mov
xchg
add
out
adc
push
push
in
cmpl
bound
sti
mov
enter
sub
add
jmp
dec
and
mov
leave
into
loope
inc
sbb
mov
cs
jbe
jl
pop
std
mov
lods
cmp
mov
loop
adcl
xor
es
sbb
dec
loopne
rol
aam
scas
cmp
loopne
lret
inc
orl
iret
scas
mov
mov
outsl
cmp
pop
push
lea
or
cmp
jl
jl
das
mov
adc
xchg
adc
cmp
mov
lea
pop
rolb
jg
dec
add
out
lods
rcrl
add
inc
jnp
mov
insl
pop
imul
adc
push
icebp
push
lcall
loopne
sbb
sub
shlb
cmc
mov
in
inc
sub
xchg
leave
in
lcall
push
movsl
mov
jmp
jbe
inc
push
loopne
sbbb
mov
ret
jp
add
pop
adc
jne
sub
jmp
ja
enter
int3
lea
test
jno
js
cmp
xchg
stos
xchg
stos
cmp
into
movsb
mov
mulb
das
cmpsl
ds
enter
inc
and
sbb
jbe
fistl
imul
repnz
pcmpgtw
xchg
das
in
mov
bound
mov
lods
neg
cmpsb
push
loope
call
orb
push
fstl
test
aas
movsl
scas
outsb
cmp
and
mov
decb
stos
les
jecxz
cmp
std
mov
mov
loopne
push
or
rorl
or
mov
repnz
aam
xchg
push
shlb
lock
pop
flds
repnz
xor
js
fsubrs
inc
pop
xor
and
leave
dec
icebp
inc
fninit
in
enter
rcl
jp
or
push
jl
mov
xor
pop
int3
pop
xchg
pop
push
scas
int3
test
ret
mov
sub
xchg
into
push
mov
and
dec
sahf
mov
adc
pop
and
or
or
or
adc
loopne
xor
push
stc
mov
pop
test
push
popf
iret
arpl
xchg
and
aad
test
ret
sbb
mov
add
pop
test
mov
lods
cs
scas
test
xchg
xchg
cmp
test
jl
hlt
fstpl
mov
jg
ret
jp
cs
loope
fstp
jns
test
dec
ja
and
jl
pop
xchg
pop
stc
mov
orb
add
jmp
jnp
dec
pushf
mov
jnp
cs
std
mov
sub
push
ret
lds
jbe
or
popa
pop
mov
std
inc
mov
cltd
daa
sahf
xchg
mov
imul
adc
sbb
inc
test
push
dec
cltd
popf
mov
adc
mov
push
data16
push
sub
mov
addr16
sahf
or
push
dec
out
mov
cmp
mov
faddl
icebp
dec
mov
out
outsl
fwait
push
or
xchg
mov
icebp
mov
xchg
push
out
cmp
xor
xchg
test
or
shlb
mov
or
imul
inc
push
out
out
aaa
pop
outsl
rolb
mov
sbb
mov
test
stos
dec
adc
fcomp
cli
xchg
push
pop
xor
repnz
mov
shrl
sub
push
jp
mov
pop
fcmovb
xchg
test
popf
add
push
pop
stos
out
sarl
fidivl
push
test
xor
or
adc
cmp
inc
mov
testb
aam
mov
or
mov
lods
outsb
subl
testb
sbb
std
xchg
and
push
sub
arpl
fistl
movsb
or
adc
cmp
pop
push
xor
stos
sub
bound
sub
and
test
xchg
lret
cli
sub
mov
cmp
add
sub
xchg
cmp
mov
aad
add
pop
pop
sbb
mov
jmp
add
mov
lahf
cld
sbb
sahf
cmpsb
stos
jo
mov
mov
xchg
push
cltd
pop
dec
xchg
mov
jge
mov
xchg
stos
cmp
cwtl
push
push
pop
add
and
rolb
test
sbb
cmp
push
adc
jge
shll
sahf
fcmovnu
pop
mov
mov
lcall
leave
xchg
mov
inc
jb
mov
mov
mov
popaw
mov
cmpl
mov
add
loope
popa
int
into
cmc
lahf
test
popa
sub
adc
xor
and
into
cltd
cltd
pushf
mov
and
out
and
imul
mov
mov
jns
jb
lds
xor
shl
repz
enter
push
sub
xchg
cld
ret
sbb
push
rclb
jge
ret
loop
jge
imul
mov
jle
scas
xchg
call
ljmp
sbb
xchg
push
push
imul
inc
pop
and
cwtl
fstl
test
cmp
inc
dec
lods
xor
cmp
push
cmp
xchg
nop
inc
jbe
loope
inc
iret
mov
addr16
xchg
popf
mov
fistpl
add
sbbl
push
dec
test
push
out
pop
mov
xchg
push
adc
inc
stos
mov
push
adc
or
jno
imul
xor
ds
sbb
xor
andl
stos
scas
cmp
je
push
pushw
jg
imul
cmpsb
lcall
dec
jecxz
jle
outsb
les
dec
pop
test
mov
inc
pop
mov
dec
outsl
stos
sub
mov
into
mov
sbb
mov
add
cmpsl
xor
lahf
out
ret
cs
std
lock
mov
pop
stos
ja
dec
and
jmp
inc
lods
fsubrs
ret
cmp
repz
pop
or
xchg
fwait
stos
sub
push
ljmp
aam
popa
dec
sub
mov
testb
fdiv
mov
and
push
test
jne
int3
mov
xor
fmull
and
pushf
dec
lods
ss
in
dec
imul
mov
mov
loope
sub
xchg
push
mov
mov
cs
add
stos
ljmp
jp
or
mov
dec
lock
sbb
sbb
hlt
push
xor
inc
ja
das
pop
cmp
xchg
or
data16
add
in
dec
cmc
add
aad
imul
in
push
loop
or
push
arpl
jle
dec
stc
aad
cli
xchg
cmp
dec
mov
int
mov
dec
xor
sub
sub
push
pop
mov
outsb
jne
jbe
stc
scas
cmpsb
xchg
aad
enter
cwtl
mov
dec
rorl
ljmp
adc
or
xor
push
add
push
xchg
cmp
icebp
je
outsl
pushl
rcrb
inc
xchg
and
insb
push
rcrb
lcall
nop
sbb
jns
inc
mov
call
das
pop
mov
mov
push
cmp
jg
xchg
call
or
es
push
sbb
jl
ja
adc
mov
xchg
rcl
mov
test
in
xchg
pop
pop
sbb
mov
xchg
fsts
pusha
test
jecxz
imul
jle
mov
fisubrl
sbb
lods
add
movsl
sub
adc
xchg
sbb
xor
pop
outsl
pop
pop
pop
repnz
idivb
or
fidivrs
nop
inc
movsb
test
dec
out
in
adc
lods
fdivs
testb
insb
cmc
jb
dec
xchg
insl
and
pop
aad
dec
mov
arpl
jmp
les
leave
leave
and
sub
out
inc
lods
aad
jo
or
loop
and
bound
push
lock
outsl
jg
mov
les
leave
inc
pop
add
xchg
inc
sub
lret
ds
loopne
in
mov
aaa
in
cs
or
add
mov
aaa
mov
dec
sub
and
pop
stc
adc
sbbb
xchg
fiadds
adc
cmp
mov
xor
inc
ret
cmc
push
dec
fcmovu
xlat
fidivrs
rclb
push
push
ficompl
jmp
rcrb
lret
cmp
insl
inc
call
stc
iret
addr16
jno
adc
push
into
sar
inc
popa
popf
out
mov
loop
arpl
add
inc
jnp
ds
add
fstl
sub
repnz
rcrl
xchg
ds
fnstenv
aas
jecxz
aas
xor
sbb
adc
mov
orb
fbld
xlat
push
shlb
xchg
add
cmp
jne
mov
mov
test
sub
pop
cltd
fwait
rep
insb
mov
ljmp
out
dec
outsb
cmp
std
pop
inc
clc
lret
sbb
popa
sbb
adc
fs
mov
cli
stc
xchg
pop
fs
xchg
xchg
lods
scas
xor
or
push
push
jl
imul
cli
std
dec
loopne
pop
fsub
pushl
pop
sbb
icebp
test
sti
sub
cmp
inc
das
cwtl
jae
repnz
pop
cltd
mov
leave
bound
iret
mov
jb
sbb
stos
pop
rcrl
fwait
icebp
icebp
lds
das
jmp
dec
inc
jle
mov
mov
std
jmp
or
add
adcb
cmpsl
sbbb
mov
push
mov
adcl
mov
nop
or
pop
and
inc
das
mov
jbe
adc
mov
push
in
and
hlt
fidivl
mov
xor
dec
je
push
dec
adc
mov
jne
in
fisubrs
push
cmp
call
add
addl
das
pusha
mov
daa
dec
inc
dec
jl
popa
and
test
adc
mov
sbb
nop
xchg
clc
into
leave
sbb
cwtl
and
cltd
mov
and
mov
xorl
dec
fcompl
xchg
fwait
xchg
mov
rorb
sarb
mov
xchg
add
add
push
push
mov
clc
data16
ss
cmpsl
mov
out
push
stc
in
lcall
cmp
sbb
adc
mov
jmp
inc
loopne
shll
mov
mov
mov
mov
cmc
and
mov
and
xorl
imul
mov
xor
imul
adc
pusha
sbb
imul
aaa
jbe
adc
cmp
test
jae
cmp
adc
xorl
add
pusha
cmp
jp
aad
mov
cmp
cmp
jo
leave
inc
or
fs
jecxz
shrl
add
mov
push
aad
mov
pop
out
loope
out
js
cltd
jno
test
imul
push
lret
push
ficoms
mov
dec
cltd
loopne
fdivrs
mov
mov
or
scas
mov
pop
pop
jle
jo
or
cmp
add
xor
adc
ret
popf
jg
pop
cmp
aad
int
xchg
dec
mov
xchg
sub
push
testb
push
dec
loopne
fnstsw
pop
pop
int
sahf
mov
sub
mov
inc
loope
jecxz
mov
mov
cli
lcall
sbb
insl
push
pop
inc
push
mov
xchg
or
aad
inc
pop
int
xor
fisubrl
push
cmp
dec
jmp
adc
daa
jg
jmp
add
incb
outsb
int3
fiadds
mov
loopne
push
ljmp
pop
or
dec
sub
add
dec
cmpsb
dec
out
clc
mov
cmp
mov
mov
pop
push
dec
xchg
stos
jb
outsb
push
xor
lcall
and
pusha
scas
popl
sbb
ja
jb
int3
aam
dec
adcw
push
and
fsubrp
fcmovnbe
or
pop
mov
gs
add
vmovntpd
fnsave
ja
pop
xor
roll
insb
xchg
cmpsl
push
push
xchg
in
push
add
lods
movsb
stos
jns
adc
xchg
fistps
adc
insb
rcrl
jo
mov
dec
mov
mov
int
xchg
or
mov
dec
or
pop
lds
pop
add
hlt
insl
xor
into
inc
shrb
and
push
dec
rcrl
inc
repz
pop
outsb
or
stos
mov
inc
adc
ret
add
jbe
scas
jbe
cmp
dec
jae
sbb
mov
imul
pop
scas
inc
movsb
movsb
xor
push
pop
fs
mov
sti
jl
add
fdivl
push
push
sbb
cmp
fcmovnu
jno
ja
pop
add
push
arpl
ds
pusha
inc
push
lret
loopne
sbb
or
iret
jns
iret
push
movsl
insl
neg
clc
pop
daa
ja
sbb
outsl
test
push
sahf
push
or
mov
icebp
cwtl
int3
rcl
mov
pop
das
shlb
ljmp
shrl
test
clc
xchg
lock
mov
xor
mov
lret
adc
jno
cmpsl
jmp
inc
dec
sbb
mov
mov
idivb
xchg
jge
movsl
rcrl
sub
push
mov
push
pop
push
push
dec
cmp
addl
nop
sub
pop
aam
shll
mov
xor
xchg
mov
mov
adc
push
negb
test
in
jmp
loope
data16
xchg
push
sarl
jno
pop
push
xor
test
push
mov
loope
cmp
xor
add
std
pop
adc
cmp
rorl
pop
out
test
sbb
icebp
pop
pop
repnz
or
pop
fsubrs
insb
aad
std
push
xor
cmp
push
test
ljmp
jge
in
packsswb
mov
imul
jno
cmpsb
and
xchg
ficompl
adc
jg
sbb
inc
dec
aad
jl
mov
push
scas
sbb
out
dec
inc
roll
nop
fstps
xor
fwait
adc
mov
mov
stc
push
jno
lret
adc
inc
push
sahf
ret
fiaddl
jp
cltd
add
sbb
loopne
mov
pop
push
xchg
mov
je
cld
neg
cmpsb
adc
pop
pop
std
xchg
sahf
iret
add
ja
adcl
push
sbb
leave
inc
cmpsb
cmp
loop
scas
out
fs
addr16
lea
lret
insb
adc
ss
idivb
aas
rorb
int
test
shlb
jno
je
loopne
ret
andb
xchg
fmull
sbb
adc
daa
cmc
lahf
ljmp
dec
jecxz
push
push
xchg
jne
push
es
ds
cwtl
daa
mov
pop
jne
xchg
aaa
pop
inc
lea
fwait
pop
inc
or
lds
and
inc
mov
or
cltd
jg
mov
push
fists
xlat
fists
push
and
and
cmpsb
sbb
add
loopne
pop
or
jae
addr16
push
gs
lods
jbe
scas
or
sbb
aad
into
push
in
scas
aaa
inc
jno
pop
shll
outsb
imul
and
mov
subb
and
xchg
insl
push
insl
jbe
xor
sbb
roll
mov
sbb
fs
imul
inc
and
sbb
fcomip
mov
fimuls
scas
movsl
popa
ret
jae
dec
mov
ja
jae
dec
aad
cwtl
jb
jb
mov
cli
insb
jno
xor
sub
lock
dec
mov
fistpl
movl
mov
fmulp
push
std
nop
fs
xchg
mov
ret
push
cmp
xchg
aaa
sub
data16
lcall
jae
cmp
push
int3
push
or
jmp
xchg
sub
and
push
adc
fnstsw
sahf
lds
push
xchg
mov
xor
imul
xchg
jge
outsb
mov
mulb
and
mov
test
fdiv
lret
lods
xchg
cmp
mov
cwtl
cmp
loop
in
jae
mov
jp
mov
ja
xchg
js
out
lret
out
shlb
sarl
stos
dec
lock
movsb
jecxz
mov
stos
jl
shrb
daa
jmp
mov
sub
cmp
es
aad
mov
sub
test
jbe
jns
ret
xchg
push
testb
lds
add
movsb
mov
or
lea
push
mov
mov
outsl
es
xchg
addb
or
dec
scas
cli
cli
insl
pop
roll
in
loope
pushf
sbb
jae
lret
pusha
cmp
pop
mov
sub
into
fisubl
adc
iret
dec
iret
or
sarl
popf
sbb
testl
inc
movsb
dec
loopne
sahf
or
je
sbb
xor
movsl
cmp
mov
mov
adc
in
fwait
pop
mov
cld
fxch
jae
loopne
loopne
fistl
testl
sbb
cmovs
popa
leave
mov
jecxz
adcb
cmp
jg
adc
out
fs
in
dec
test
lea
rcr
addr16
scas
shrl
out
cmp
in
test
xchg
lahf
test
sahf
jae
mov
push
cmp
add
add
jo
enter
cmp
push
or
push
and
and
and
and
cmc
jae
icebp
xchg
xchg
pop
xchg
and
dec
imul
aam
pop
cld
sub
mov
arpl
xor
xor
fstl
jecxz
std
push
inc
lds
mov
dec
cmpsb
jg
fsin
stos
ret
out
rorl
mov
and
and
push
hlt
jae
jnp
mov
sub
les
in
mov
xchg
les
pop
aad
jnp
pop
adc
je
lods
xor
pmaxub
pop
int
lcall
pop
enter
inc
add
shlb
mov
or
push
xchg
xor
sub
popa
sub
sub
mov
lock
dec
adc
jmp
mov
push
sbb
cmpsb
mov
push
jecxz
mov
sbb
cmp
jne
out
sbb
stos
dec
ja
add
xchg
inc
notl
dec
cmp
cmp
fstp
sbb
sub
sbb
std
xor
jmp
add
scas
mov
inc
and
es
pop
mov
popa
outsl
popa
xor
clc
xchg
je
pop
mov
xchg
sbb
cmp
sub
pop
jmp
in
sbb
mov
into
jno
sub
cmp
fisubrs
jecxz
push
stc
and
aas
xor
daa
xchg
lods
or
insl
xchg
arpl
dec
sar
adcl
pop
pop
cmc
mov
out
fwait
push
add
sbb
jmp
pusha
push
xor
xor
in
pop
fwait
or
jnp
sahf
inc
add
or
lods
enter
aaa
sarl
rcrb
push
push
add
xor
jle
stos
sub
fidivl
mov
rcl
sbb
aas
pop
mov
adc
push
adc
hlt
fdivrl
mov
je
sub
add
push
inc
adc
jns
adc
xor
push
cltd
pop
rol
rcrl
rcr
push
jb
arpl
in
inc
dec
sub
mov
out
sbbl
mov
repnz
aaa
frstor
pop
dec
mov
insb
push
xchg
xchg
cmc
das
cmpsb
imulb
stos
loope
hlt
loope
dec
jo
xchg
push
lds
std
jbe
clc
and
into
push
xor
daa
pushf
mov
mov
sub
ds
hlt
pop
outsl
inc
cmp
jp
fisubrs
cmp
xor
push
inc
les
add
xor
mov
cli
ljmp
push
shrb
cmp
gs
xor
jb
xchg
sub
or
int3
or
test
xchg
fcmovb
xor
outsl
or
mov
shl
dec
repnz
js
pusha
jg
push
clc
inc
test
rcrl
popf
fisubs
hlt
inc
pop
js
pop
mov
xchg
lahf
sub
add
rolb
sti
shll
popa
aam
testb
ret
cli
mov
cltd
or
push
pop
fs
cmpsb
xchg
xor
xor
cmp
jg
push
and
jno
mov
movb
int3
push
addr16
mov
dec
imul
jmp
dec
push
mov
scas
in
and
je
add
inc
addr16
mov
jnp
or
adc
cwtl
fstpl
gs
jge
into
dec
jae
xchg
pop
dec
mov
pop
pop
sbb
icebp
push
pop
js
xchg
sti
ja
jnp
imul
and
fsubrs
int
dec
fistps
imul
imul
ds
mov
sub
mov
pushf
or
jmp
and
xchg
cmp
mov
es
ret
jns
dec
jecxz
mov
or
jg
xchg
pushf
mov
inc
push
push
cmp
into
inc
rcll
out
sar
cld
test
adc
inc
enter
inc
xchg
xchg
in
scas
adc
jmp
xchg
sar
cld
lock
popa
cmp
xchg
add
jg
jge
add
aam
jo
xor
test
xchg
pop
pop
mov
outsl
loopne
mov
fidivrs
adc
scas
cmp
fmull
push
and
mov
fimull
lcall
ss
enter
dec
or
dec
inc
mov
leave
pop
fstpt
test
out
ret
cmp
dec
loop
xchg
rcr
out
and
std
movl
jns
dec
repnz
jbe
push
lods
lods
rclb
mov
imul
mov
sub
sbb
arpl
out
loop
mov
in
popf
push
jl
fidivl
dec
out
sub
dec
nop
fwait
pop
mov
sbb
andl
xchg
xchg
pushf
mov
in
pusha
xchg
sub
jge
lcall
mov
pusha
jbe
mov
es
in
lock
in
push
jge
mov
lret
add
aam
test
ds
rorl
add
icebp
lods
scas
jl
les
scas
dec
adc
push
rcl
jmp
stc
sub
jle
jge
sub
mov
scas
push
cmpl
ljmp
es
or
scas
leave
into
mov
cmpsb
mov
xchg
cmp
push
jp
mov
xchg
xor
aaa
es
or
lcall
in
test
pusha
pop
cmp
shrb
in
mov
fnstcw
adc
xchg
jno
mov
push
outsb
xor
pop
push
mov
sub
mov
icebp
pop
out
dec
dec
mov
outsl
mov
inc
xchg
mov
sbbb
in
addb
or
push
sub
mov
jmp
stc
out
mov
adc
mov
push
fsubs
xor
out
test
inc
popf
iret
in
and
inc
pusha
pop
xchg
xchg
xchg
movsb
xlat
aad
ret
cld
mov
loop
inc
sub
enter
push
cmp
mov
in
push
out
out
xchg
pop
pop
insb
gs
ficoms
shlb
push
mov
add
imul
mov
dec
iret
lret
mov
xor
les
mov
lret
push
or
stos
pop
mov
push
negl
lcall
ret
stos
test
movsb
and
stos
mov
adc
es
xor
cs
enter
push
add
jl
stos
mov
sbb
out
fs
mov
jae
sarb
pushf
sbb
push
mov
xlat
dec
in
xor
sbb
sbbb
pop
pop
clc
daa
pushf
and
imul
scas
imul
mov
xorb
mov
add
add
fucomi
incb
or
scas
paddw
daa
cli
nop
xor
sti
sub
push
mov
and
lret
insl
mov
int3
xchg
shll
lea
jnp
jle
in
lcall
cmovbe
inc
in
pop
nop
shlb
hlt
div
test
sbb
sub
insb
gs
sbb
into
test
cmpsb
xor
dec
inc
xor
fcoms
sbb
cmpsl
lret
adc
insl
insl
mov
iret
mov
and
fstpt
gs
incb
ret
xor
add
xlat
add
daa
sbb
dec
pop
insb
popa
fidivrs
and
int
pop
into
xchg
mov
repnz
mov
cld
pop
xlat
xchg
sbb
push
fisttpll
les
aad
call
jnp
pop
dec
sub
insb
jge
sub
pop
jnp
push
ret
push
xchg
push
cmp
xor
sti
jecxz
and
jecxz
mov
sub
cwtl
mov
mov
xor
sbb
jp
cmp
jecxz
xlat
pushf
add
dec
pop
sub
fdivr
enter
and
imul
fistpl
insl
xor
outsb
push
es
dec
push
inc
dec
sub
pop
mov
cmpl
mov
inc
jno
push
js
push
cmp
add
fsubl
add
cmp
lahf
aam
sbb
in
pushf
in
push
add
and
push
or
jns
pushf
fcomp
hlt
mov
adc
in
adc
pushf
or
pusha
ljmp
sbb
jmp
shll
mov
mov
cmp
cmp
mov
notl
test
int
mov
mov
dec
ja
out
cmp
test
lods
xor
xchg
inc
test
fnstsw
or
xchg
and
insl
enter
popf
mov
lods
cmp
add
mov
arpl
xor
stos
sub
cmovbe
mov
jmp
xor
mov
cmp
scas
sub
push
aaa
stos
dec
loope
pop
jns
pop
mov
rdpmc
pop
rol
lret
mov
lret
call
lods
jle
dec
jmp
inc
pop
fildll
jb,pt
mov
xchg
lds
shrb
fldenv
add
js
adcl
mov
dec
push
lcall
mov
mov
jb
mov
sub
scas
out
sub
insl
inc
push
sahf
mov
mov
or
test
outsb
imul
mov
xor
xchg
xor
add
cmpsb
stos
dec
push
lahf
arpl
test
dec
mov
xchg
mov
int
inc
or
mov
orb
inc
or
xchg
test
loope
les
dec
fcoms
push
jecxz
or
jo
push
jae
push
addl
loope
cmp
mov
xchg
add
sbbb
cmp
mov
push
jmp
scas
icebp
iret
ljmp
test
pop
inc
call
jne
and
lcall
cltd
jns
lahf
imul
add
movsb
cmp
adc
rolb
pop
cs
fsubrs
out
les
add
and
dec
cmpsl
mov
dec
cmp
rcrl
lods
rcl
popf
gs
inc
in
mov
push
shll
xor
lds
iret
xor
fldt
push
dec
cmpsb
push
sbb
push
xchg
xor
mov
fsubs
scas
mov
iret
lea
shlb
sub
data16
jg
sbb
pop
rclb
repnz
mov
imul
sbb
or
loop
pop
jns
testb
outsb
pop
inc
js
jb
xor
cli
ss
in
and
mov
leave
stc
jmp
imul
adc
aam
test
arpl
push
fwait
adc
popa
mov
dec
mov
push
jo
pop
or
mov
adc
push
mov
cld
or
sub
xchg
popf
outsb
sub
sub
cli
and
clc
add
shl
scas
jns
inc
in
push
mov
cmpsb
fdivrs
loope
pop
sbb
ljmp
mov
xlat
mov
clc
push
mov
jecxz
scas
jno
jo
and
inc
mov
fs
mov
mov
jbe
das
es
divl
mov
mov
lcall
insl
ret
stos
cmp
out
into
push
mov
lods
loop
dec
insl
sub
out
mov
bnd
mov
mov
and
xor
and
jp
jns
cmp
mov
mov
lea
cmpsl
fnsave
jns
and
loop
fistl
xorl
inc
popa
data16
pop
cmp
jo
mov
push
insl
loop
stc
xchg
rcrl
shl
adc
jg
mov
lcall
mov
inc
lret
sahf
and
xchg
fwait
xor
adc
outsl
fldt
sbb
stc
xor
iret
ficompl
jg
pop
or
lcall
jl
xchg
jl
dec
dec
and
enter
bound
loope
lcall
cmp
add
adc
mov
jb
mov
stc
cli
jmp
shll
or
mov
sub
shrb
push
repz
sbb
jp
mov
out
inc
insl
jge
shll
cmc
jl
fnsave
rclb
cmp
cmp
sub
and
aaa
jp
pop
ds
cld
stos
xlat
jbe
mov
popa
jmp
test
js
stos
les
mov
cmp
int
mov
fiaddl
popa
sar
daa
rorb
sti
cli
aas
lret
imul
js
adc
adc
sti
xchg
sbb
adc
cwtl
pop
movsl
jo
mov
aaa
ljmp
mov
dec
dec
xor
movsb
bound
mov
jl
imul
xlat
mov
add
pop
popf
into
mov
pop
dec
dec
clc
pop
popf
imul
ljmp
xchg
js
pop
cld
in
mov
movsb
dec
adc
repz
js
imul
cmpl
popf
mov
in
fisttps
or
jmp
std
fisubl
fistps
loop
push
sub
add
and
arpl
cwtl
add
icebp
and
outsl
fs
aas
and
sarb
sub
xorb
cmp
in
cmpl
scas
sbb
pop
pop
mov
dec
jg
ljmp
out
cmp
fst
jns
mov
xor
adc
mov
xor
in
lock
out
loope
cmc
cmp
and
mov
in
xchg
jo
bsf
fimull
sahf
push
push
aam
mov
push
repz
mov
xchg
shl
dec
xor
inc
mov
imul
outsl
sub
mov
jle
adc
in
push
sub
jl
sub
xor
shrb
xchg
adc
sub
ret
aad
out
subl
nop
int3
dec
xorl
xor
push
stos
clc
movb
lock
xchg
int
movsl
fists
leave
xor
cmp
imul
fadds
xchg
mov
fsubl
cs
inc
fisubrl
sub
shrb
cmp
xor
call
xchg
insb
push
sub
push
stos
pop
leave
dec
call
aaa
jecxz
mov
mov
shll
push
pop
adc
mov
adc
sub
jcxz
popf
mov
push
mov
cmpsb
in
stos
pusha
push
fidivs
stos
scas
pushf
pop
xchg
stc
lcall
or
inc
aam
pushf
nop
dec
js
inc
xchg
mov
and
inc
pop
xchg
cmp
inc
adc
jb
or
dec
push
jns
jno
aas
dec
mov
push
and
or
scas
push
repnz
gs
fst
dec
push
sub
push
xchg
sub
adcb
inc
and
sbb
fidivrl
ret
nop
notl
sbb
xor
into
fists
sub
jp
push
or
mov
shll
cmp
xor
dec
outsl
fstpt
mov
fdivrs
leave
out
mov
into
test
loope
jg
ret
cmp
rcl
hlt
imul
out
pop
out
lcall
adc
mov
add
xor
andl
ret
lds
ljmp
cs
cs
inc
jae
and
xor
sub
fimull
mov
sbb
jae
outsb
pop
pop
cmc
cwtl
sbb
mov
cwtd
subb
ljmp
iret
ss
mov
jo
ret
push
jecxz
adc
inc
cwtl
pop
dec
sahf
stos
mov
jmp
mov
int3
mov
cmp
cwtl
clc
mov
out
loop
push
add
cmc
les
pop
jne
or
cmp
cmpsb
subb
jo
jno
sbb
jb
add
out
fmuls
lahf
push
or
icebp
sbb
push
xor
cmp
fisubs
xor
mov
inc
fstps
lahf
push
adc
cmpsb
loopne
out
pushf
mov
in
jne
and
push
mov
andb
jle
xchg
inc
pushl
mov
sar
lock
nop
jl
lods
aad
and
pop
cmp
mov
mov
idivb
jb
jne
push
and
mov
or
out
push
push
lcall
inc
mov
cli
push
cmc
jmp
mov
fcmovbe
cmp
or
stos
rcll
aad
aaa
mull
sub
not
in
mov
mov
scas
pop
sub
fldl
stos
rol
mov
mov
pop
add
or
fadds
pop
popa
dec
push
loope
xchg
jb
repnz
and
pop
popa
sub
push
pop
adc
out
cltd
mov
mov
mov
stos
pusha
aaa
test
orb
and
into
test
fistpl
das
gs
mov
loopne
or
jle
mov
sbb
test
lds
xor
xchg
and
xor
into
lret
sahf
data16
popa
in
mov
sti
pop
bound
scas
mov
scas
adc
cmp
xchg
jnp
add
add
xlat
sti
sahf
loope
hlt
sub
adc
jmp
stc
rclb
xor
dec
or
adc
push
xchg
pop
cmp
or
pop
mov
or
daa
pop
ds
sbb
push
aas
dec
movsb
dec
dec
inc
or
pop
fsubp
push
adc
addl
setns
je
rcll
out
repnz
jecxz
scas
repz
pop
les
lret
andb
rclb
dec
sbb
inc
adc
pop
fstps
mov
in
leave
dec
mov
mov
loope
shlb
dec
and
cmp
pop
ret
sbb
mov
mov
gs
mov
adc
sbb
loopne
mov
iret
or
xchg
mov
xchg
loop
in
js
mov
add
nop
cwtl
lods
add
xor
aas
sbb
shrl
loop
je
fiadds
ret
scas
pusha
bound
and
push
push
cld
and
mov
xorb
cmp
sbb
pushl
or
mov
jmp
test
lcall
fidivrl
pop
aas
and
cltd
lock
fldt
and
ja
inc
in
out
jbe
or
xor
outsb
add
insl
jo
lret
push
rorb
pop
pop
rcrb
and
xor
mov
in
jno
data16
fidivl
popf
fucomp
enter
sbb
dec
subb
call
pop
push
inc
jecxz
out
ds
cmp
dec
lock
int
sub
aad
add
sub
mov
in
dec
mov
bound
and
imul
shlb
mov
xor
jle
popf
cltd
pop
or
gs
inc
mov
dec
subb
mov
or
xchg
dec
dec
jo
inc
inc
rclb
push
sub
cli
call
xchg
shl
subb
push
out
xor
adc
push
je
mov
sbb
faddl
out
add
inc
decb
jecxz
int
sbb
xchg
or
jne
js
jl
in
mov
rcrb
dec
add
dec
or
ss
rcl
cltd
fs
aas
cli
push
pusha
test
cmp
push
test
mov
in
xlat
jmp
lcall
dec
fiaddl
ret
push
push
xor
idiv
jmp
out
cmp
les
and
loope
movsb
call
out
call
pop
jnp
lds
cwtl
pop
fists
xchg
jecxz
bound
stos
fwait
jl
bswap
cmc
out
xchg
cltd
stos
inc
add
or
xchg
fs
cmp
push
cs
pop
sbb
out
sub
pusha
rolb
fstl
gs
ljmp
lea
push
or
cmp
and
in
sarb
mov
adc
push
xchg
leave
test
syscall
shrl
adc
xor
cld
sahf
out
ja
adc
cmp
xor
nop
mov
and
arpl
sub
insl
xchg
xor
mov
mov
test
xchg
dec
out
mov
mov
int3
scas
push
movsl
nop
ss
mov
stc
push
push
mov
sbb
xchg
add
pop
into
pop
scas
sti
lret
cld
rcrb
out
out
imul
mov
sarl
and
repz
in
sub
fisttpl
pop
mov
mov
xor
push
fwait
pop
cld
add
loopne
idivl
pop
pop
or
hlt
and
adc
jno
add
cmpsb
mov
sbbb
xchg
jecxz
cmp
jg
sub
test
push
xchg
dec
mov
mov
fcompl
lret
xor
mov
cltd
into
pop
mov
xchg
enter
xor
ds
out
xchg
dec
or
xor
mov
adc
sub
rolb
fimull
lods
xchg
xchg
dec
push
dec
aam
add
pop
ja
lahf
outsl
pop
dec
add
std
push
mov
pop
div
imul
cmc
and
imul
fisubrl
or
xor
cmpsl
sarl
and
xor
cwtl
xchg
add
fadd
movsb
aaa
icebp
ss
jl
int
gs
lahf
xlat
xor
or
int3
and
adc
pop
ret
sbb
enter
mov
mov
dec
mov
lahf
movsl
aas
cwtl
pop
xchg
aam
pop
fnstcw
jae
call
add
pusha
lcall
imul
mov
out
cld
jge
jl
out
mov
out
xchg
popf
mov
dec
xor
out
mov
mov
xchg
test
inc
roll
pop
lock
test
jecxz
push
fidivs
xor
lods
ljmp
in
dec
out
orb
stos
stc
inc
sub
cmp
ss
inc
nop
adc
scas
sti
sbb
jo
or
test
mov
es
hlt
sbb
cltd
les
cmp
sub
mov
jne
popf
xlat
jg
mov
outsb
dec
inc
aad
outsl
cmp
push
jp
mov
pop
mull
add
pop
push
data16
sbb
dec
push
addr16
ret
int
sub
test
mul
add
subl
add
push
sub
inc
fwait
jno
testb
mov
std
lds
push
clc
popa
imul
jl
fbld
pop
lock
shl
cmp
pop
sarb
outsl
into
sub
fxch
xor
sbb
fiaddl
ret
fcom
out
xor
inc
jp
pop
pop
les
test
mov
mov
test
scas
fisttps
lds
push
outsb
bound
or
pop
push
mov
cmp
add
fsubs
sbb
mov
bt
addr16
mov
movsl
fnstsw
fcomps
xchg
int3
ds
dec
rorl
mov
add
out
ds
test
fistps
lea
popf
xchg
xchg
mov
sbb
sti
or
roll
xchg
mov
arpl
leave
loopne
rcrb
sahf
and
inc
lea
cld
jecxz
hlt
push
imul
sub
rcll
inc
add
or
lock
push
mov
mov
pop
inc
inc
imul
dec
ss
out
scas
ljmp
push
lret
add
xor
sub
loop
pop
into
ficompl
movl
pop
sbb
pop
pop
mov
push
jmp
mov
in
sbbl
out
push
movsl
xchg
cmpsl
xor
or
sbb
ret
pop
lahf
mov
arpl
ret
cli
ret
mul
mov
jmp
xchg
outsl
aam
dec
inc
dec
adc
inc
sbb
cmp
jp
shl
sub
pop
pop
jmp
pop
sub
sub
sbb
mov
repz
pop
inc
cmp
cmp
dec
adc
iret
inc
in
repnz
ljmp
mov
insb
movsb
xor
push
data16
inc
push
inc
mov
fnstsw
cmp
mov
pop
xor
push
stos
shll
test
es
pusha
sub
lock
cmp
dec
faddp
outsl
or
ja
leave
repz
dec
pop
xchg
hlt
xchg
sbb
adc
movsl
push
jb
jg
push
dec
call
add
push
lahf
aad
jno
add
inc
and
mov
jne
dec
outsl
out
int
cmp
xor
divl
pop
sub
pop
dec
xor
sbb
in
mov
clc
mov
xlat
stos
xchg
pushf
scas
mov
mov
cmp
shlb
push
mov
cmp
or
or
insl
pop
lret
insb
mov
mov
sub
dec
mov
daa
imul
cmp
push
movsb
stos
inc
pop
enter
xchg
inc
add
imul
lcall
push
sub
xchg
xchg
xor
xchg
add
hlt
iret
push
push
add
mov
cmp
mov
jg
imul
test
dec
xchg
jbe
mov
sub
subl
lea
dec
lret
push
fwait
pop
cltd
neg
aad
jge
enter
jns
in
in
sub
shrb
cld
jge
push
mov
add
sub
push
and
scas
xchg
inc
jae
ja
sbb
sbb
jbe
insl
test
sub
popa
ja
jno,pn
scas
jmp
fwait
inc
lock
imull
outsb
inc
pop
sarb
jne
push
stc
xor
je
push
push
repz
xchg
adc
xchg
shrb
mulb
nop
lock
sub
push
inc
adc
cltd
sub
icebp
rclb
and
xchg
or
jae
sub
or
fs
clc
push
xchg
push
jl
mov
pop
mull
je
rcrl
adc
sub
jo
lods
or
add
cmp
dec
cmp
xor
mov
popa
repz
out
out
add
test
cwtl
testb
sub
jae
cmpsb
fstpt
les
out
mov
pop
jmp
fisubrs
dec
and
mov
aaa
mov
sbb
mov
cmp
pop
ds
mov
roll
sub
xchg
inc
mov
loopne
shll
or
sub
xor
xchg
sbb
mov
pop
xor
sti
sub
or
rorl
push
push
inc
push
sbb
or
ja
pop
in
data16
es
mov
push
cld
jge
dec
and
into
in
outsb
cmp
inc
adc
inc
lods
mov
cmc
pop
jl
nop
movhps
push
pop
loopne
push
xor
popa
test
je
sub
aam
popf
jmp
outsb
sbb
mov
pushf
mov
jnp
movsl
roll
xchg
and
or
out
test
cwtl
stos
mov
fs
cmp
inc
mov
div
ss
push
xchg
fwait
imul
mov
aam
jp
cmp
inc
jmp
add
cmp
out
inc
push
inc
add
dec
outsl
repz
inc
in
in
jge
inc
mov
mov
adc
les
mov
add
clc
pop
das
jge
sbb
repz
xor
dec
fs
push
cmp
pop
and
rclb
les
insl
lahf
mov
js
inc
mov
and
cwtl
add
call
sti
test
push
and
into
pop
inc
dec
cwtl
clc
sub
add
cmpsl
sbb
sti
pop
and
xchg
aad
jbe
lock
outsb
into
fdivs
adc
add
loop
std
sub
and
aaa
iret
popf
movsl
lret
sahf
shlb
mov
je
fs
push
cmp
cmp
out
movsb
jns
push
inc
mov
movsl
lret
rep
ljmp
push
jle
mov
sahf
inc
stc
mov
push
xchg
mov
hlt
cwtl
sahf
enter
daa
das
inc
popa
cmp
jbe
sbb
mov
jp
int
les
repz
or
pop
sarb
daa
jb
and
mov
test
jno
push
aaa
jno
imul
das
sub
rcrb
es
xor
dec
jle,pt
fucomi
imul
loop
cmpsl
xor
fdivs
xor
mov
ljmp
leave
inc
jl
data16
jp
fwait
outsb
mov
bound
cmp
sbb
fmull
mov
adc
inc
xor
sahf
and
mov
aad
fidivs
xchg
and
clc
into
xchg
aad
mov
jle
xchg
loope
mov
jecxz
xchg
mov
div
mov
adc
pop
pop
ret
jo
fidivrl
mov
pushl
imull
adc
mov
aad
ret
ljmp
fidivs
inc
in
ret
sbb
mov
pop
cltd
shlb
int3
mov
adc
inc
inc
loop
pop
jb
inc
xor
test
popa
inc
bound
jo
fcoml
xchg
subb
sbb
inc
movsb
stos
popa
jle
ffree
stos
pop
imul
push
pop
cmp
rcrb
push
push
daa
daa
hlt
movsl
add
aam
loope
mov
lret
aad
pop
push
test
mov
out
clc
in
fisttpl
jmp
cmp
mov
xor
frstor
fiadds
pop
sub
push
push
adc
fnsave
jge
pop
test
cld
add
mov
sub
xor
or
push
out
not
cs
popf
test
mov
jmp
mov
dec
push
dec
mov
orl
test
dec
int3
adc
cmp
sbb
adc
cwtl
or
popf
test
dec
lret
in
mov
aas
cmp
ljmp
hlt
inc
and
icebp
imul
cwtl
xchg
enter
mov
jge
jnp
xchg
inc
dec
rolb
sub
xchg
sbb
and
es
rcll
mov
mov
adc
mov
adc
je
cli
mulb
je
and
cmc
fistpl
inc
cmp
shrl
pop
and
jg
cmp
cmp
xchg
cmp
or
gs
xor
test
test
data16
jbe
je
call
jp
jle
sub
push
in
dec
sbb
loopne
and
sbb
jns
inc
ret
lcall
and
daa
lock
adc
push
mov
fiadds
loope
test
sbb
cmp
cmpsb
dec
mov
cli
cltd
ficoml
push
pop
in
pop
jg
mov
mov
sbb
dec
sub
aam
xchg
adc
lock
lock
xchg
test
pop
push
inc
cmp
cmpsb
mov
cld
sbb
sub
adc
stc
adc
or
mov
movsl
inc
add
lods
outsl
daa
mov
push
inc
addr16
inc
inc
lods
dec
cmpsb
mov
fstl
pop
repz
fnstcw
mov
loopne
sub
mov
pop
roll
jne
pushf
cmpsb
rcrb
loop
xorps
jbe
pop
inc
push
stos
sti
jnp
mov
and
jb
or
out
in
push
sbb
lahf
inc
mov
rorb
add
subb
int
pop
cmpsl
and
stos
out
leave
or
inc
lea
xor
cld
mov
and
add
out
dec
push
mov
rolb
std
and
sub
insb
xchg
fdiv
addl
mov
std
lock
test
add
xchg
cmc
lods
fldcw
dec
jmp
mov
subb
xor
add
rep
cli
ss
push
std
imull
fadds
sub
in
ds
mov
inc
mov
fsave
and
cmp
fstl
dec
add
xlat
jbe
or
data16
xorl
add
cmp
xchg
mov
mov
out
mov
fldcw
cli
outsl
add
mov
sahf
sub
std
mov
ss
jmp
sbb
repnz
mov
and
rol
add
sahf
adc
test
arpl
cmp
popl
cmp
jecxz
xlat
subl
rcrb
jecxz
push
mov
rcr
push
sbb
int3
cmpsb
mov
dec
fsub
xchg
repz
fs
pusha
mov
adc
or
sbb
aad
in
push
push
int3
test
out
adc
lret
sub
outsb
mov
addr16
or
or
sub
inc
mov
in
sbb
es
adc
pop
pushf
jns
mov
push
mov
and
cmc
pushf
pop
inc
jg
xorb
movsb
enter
mov
lcall
int
lea
loope
xor
addr16
js
mov
inc
mov
adc
or
imul
fists
in
inc
dec
ficoms
sub
inc
add
movsb
mov
enter
popa
call
ror
addr16
mov
sbbl
rcrl
cli
lahf
test
cs
pop
xchg
sbb
ret
sub
cmp
call
clc
push
sarb
das
repz
test
push
mov
out
cld
in
sbb
xor
rcl
add
scas
daa
incl
fsubrl
add
push
push
sub
imull
dec
pop
pop
mov
inc
fcoml
imul
lods
popa
dec
inc
stc
adc
fwait
inc
popf
jmp
mov
xor
pop
idivb
cli
imul
jmp
mov
add
scas
pop
mov
jo
push
xchg
in
leave
and
push
push
icebp
stc
xchg
add
mov
push
cmp
sti
xor
arpl
xchg
loope
jl
lcall
ret
lods
adc
xor
or
inc
and
and
hlt
loop
ret
xor
stc
push
mov
fiaddl
sbbb
js
mov
lahf
shr
pop
aad
push
sub
ja
cmpsl
mov
sub
sahf
cmp
jnp
fildl
scas
mov
sbb
or
mov
xor
add
in
mov
mov
in
cmpsb
mov
inc
push
dec
jo
sub
insl
xchg
aas
dec
mov
xor
fdivs
daa
pop
and
std
adc
adc
nop
mov
xor
lods
jmp
stc
test
dec
scas
je
push
jo
outsl
xor
xor
dec
adc
fcompl
push
adc
fst
stos
push
ss
and
mov
xchg
lock
sbb
daa
mov
jae
es
push
xchg
cmp
andnps
jns
jg
jmp
mov
and
xchg
pop
addr16
inc
ljmp
sbb
js
push
push
in
xchg
pop
sti
ret
sub
sub
xchg
push
jmp
dec
cld
mov
adc
mov
in
mov
ret
sbb
xchg
cmp
cltd
fs
and
and
fadd
adc
jge
out
data16
int3
mov
sbb
add
jg
stc
push
sbb
je
into
cld
push
jl
push
out
test
cmpsb
inc
push
sub
sub
int
outsb
add
es
jnp
jmp
sbb
xchg
es
pop
or
push
dec
je
pop
mov
and
mov
mul
cmp
pop
mov
gs
subb
sahf
cwtl
pop
fcomi
daa
push
push
outsl
das
pop
pshufw
nop
push
adc
inc
inc
push
cmp
pop
sub
js
stc
xchg
add
xchg
adc
outsb
push
hlt
pushf
cmc
adc
xchg
sbb
mov
mov
pop
add
ss
nop
ljmp
sub
adc
xchg
into
push
sub
dec
dec
insb
rcrb
push
pop
or
in
cmp
or
push
jmp
pop
jmp
jg
dec
jge
scas
in
push
push
add
push
mov
fs
dec
in
hlt
pop
repz
loopne
rclb
imul
ret
mov
xor
push
in
sub
or
xchg
shl
fmuls
jp
test
sti
sub
fsubs
sub
dec
fucomip
shll
mov
push
mov
dec
jl
les
xor
cwtl
lds
scas
rclb
mov
mov
insb
js
mov
push
xor
jbe
mov
push
push
sbb
push
imul
mov
sti
test
inc
mov
add
enter
popf
xchg
xor
or
dec
pop
aaa
push
sbb
pop
inc
lods
sbb
lock
push
cmp
bound
aad
icebp
loope
push
and
and
dec
inc
mov
aas
movlps
xor
push
and
daa
inc
xlat
mov
imul
dec
dec
lds
outsl
das
cmp
cmp
sbb
push
shll
aad
push
roll
cwtl
test
push
icebp
loop
gs
xchg
xchg
pushf
jmp
mov
xchg
pop
or
sbb
stos
adc
cmp
stos
cmp
test
push
ret
or
imul
icebp
inc
jo
push
cmp
jmp
nop
jbe
inc
mov
xor
cmp
shlb
xchg
mov
sub
lods
mov
and
movsl
lea
scas
movsb
movsl
daa
into
sub
mov
cmp
xchg
mov
cmpsl
sub
mov
xchg
add
push
pop
inc
shll
cwtl
push
mov
xchg
cmc
jmp
popaw
xchg
lods
stc
jle
mov
test
leave
shlb
dec
dec
shlb
movsl
outsb
push
ret
push
das
jne
mov
push
sbb
xor
mov
xor
push
mov
movsl
jne
call
test
xlat
jmp
je
fstl
adc
pop
cmp
sahf
pop
xor
xor
dec
imul
les
push
sbb
cmp
mov
pop
ret
stos
jo
inc
push
cmc
mov
sub
push
dec
xlat
jl
ret
jg
repz
mov
fwait
test
int3
xchg
lret
add
repnz
and
mov
pop
add
jne
xchg
jno
std
mov
xor
iret
int3
call
je
sbb
push
fs
loope
or
adc
mov
outsl
fiaddl
xorb
fldl
dec
lods
mov
rcll
andl
mov
aam
in
insl
fucomip
lods
inc
inc
mov
sub
rolb
dec
test
loope
aaa
jae
sahf
or
bnd
cmp
mov
jbe
ljmp
repnz
mov
cs
ret
dec
add
out
jo
pop
mov
cs
enter
mov
scas
sbb
xchg
xchg
popf
in
cmp
loope
and
into
test
push
xor
int
jp
cltd
out
mov
in
mov
sti
sub
pushl
lahf
cmpsl
xor
add
pusha
lret
fadds
xchg
dec
mov
jae
xchg
popf
xor
pusha
lods
jo
enter
mov
fstpt
xchg
inc
test
call
leave
jp
xor
jle
in
movsb
xor
lock
sbb
inc
mov
mov
fdivs
test
cmc
stos
ja
sahf
xor
mov
and
and
or
mov
dec
jle
jecxz
or
clc
out
addb
lcall
shrl
mov
xor
scas
lret
inc
add
inc
or
dec
mulb
fildl
dec
mov
sub
cmp
jbe
add
xor
insb
and
mov
inc
ljmp
mov
add
fidivs
aam
push
popa
in
idivb
mov
sub
ljmp
inc
push
pop
fnstsw
clc
push
add
inc
jmp
xchg
xor
mov
in
lds
pop
clc
fimull
mov
xor
cwtl
cmp
dec
adc
das
imul
sbb
hlt
icebp
sub
rcrb
and
pop
push
lcall
in
inc
mov
cmp
jbe
sub
inc
pop
sti
sub
or
lahf
stc
inc
push
adc
iret
xchg
popa
jb
loope
icebp
in
lret
in
test
aam
mov
rolb
stos
enter
sub
and
adc
jmp
xchg
int3
mov
xor
imul
jno
out
daa
push
loop
jle
dec
in
push
cmpsl
sub
or
pushf
outsb
xlat
push
add
push
xchg
icebp
jecxz
mov
sarl
std
ja
xchg
cmpsl
test
daa
add
lret
xorl
popa
int
aam
ljmp
cmp
push
pushf
cmp
out
mov
idivl
sub
cmpsb
jne
loopne
cwtl
xchg
dec
add
cmpb
adc
inc
sub
ja
popa
inc
jb
sub
mov
dec
inc
add
lods
popa
int
daa
inc
or
mov
push
movsl
setns
ret
lods
andb
and
or
sti
fs
sub
and
in
mov
das
cmpsl
push
ret
xchg
call
jne
xchg
fisubl
dec
into
inc
sbb
fisttpl
test
hlt
jno
lret
sub
jmp
and
mov
sub
cmp
cld
sub
pop
add
out
sahf
xchg
dec
lahf
push
or
jo
xor
mov
lahf
sub
cmpsl
jmp
inc
add
std
push
mov
xchg
imul
lahf
mov
dec
add
cli
out
pop
shlb
pop
enter
shrb
daa
sarb
and
xchg
call
fsubrs
sub
aam
jae
xor
imulb
jno
mov
pop
aas
pop
pop
pop
test
mov
sub
daa
or
mov
xchg
imul
adc
and
adc
sbb
dec
out
cmp
push
cwtl
cld
jnp
add
sub
loope
xlat
int3
pop
dec
push
ja
xchg
sbb
dec
sub
pop
ret
cs
cmp
jne
xor
in
rclb
stc
cmovl
ret
int3
jle
lds
push
cmpsl
jle
lret
outsl
test
mov
repnz
ret
mov
out
or
div
test
dec
push
xor
lock
into
cs
push
repz
pop
idivl
shl
cmpsl
repz
ljmp
adc
leave
aaa
jbe
push
mov
cmp
faddl
imul
inc
jbe
cmc
adc
cmpsb
in
add
notl
ret
sbb
push
icebp
clc
inc
dec
sbb
popa
mov
das
push
mov
cmp
movsb
push
push
cmp
mov
push
nop
xor
mov
test
dec
subb
pop
jo
lret
aad
sbb
mov
test
inc
test
inc
fincstp
jnp
fisubrs
outsb
and
adc
pop
jnp
popf
sub
sub
dec
test
lret
cmp
daa
mov
push
push
lods
cltd
cmp
or
mov
jle
arpl
jecxz
and
push
xchg
cmp
in
xlat
jns
cmp
xor
jbe
in
test
fucom
mov
and
mov
sub
bound
push
add
into
jg
das
fmuls
lods
cltd
push
data16
jo
out
jge
fstpl
mov
movsl
mov
movsl
or
out
test
fdiv
loopne
into
push
cmp
pusha
ret
push
and
rdpmc
ss
pop
mov
pop
rolb
imul
add
sbb
dec
movsb
cli
mov
push
pop
xchg
iret
je
cmp
pop
je
xchg
xchg
call
mov
lret
or
jecxz
repnz
mov
fldt
adc
insl
jb
sub
jns
sbb
inc
stos
cltd
xor
hlt
rolb
int
adc
sbb
and
push
fwait
int
rcrl
mov
sahf
mov
push
jno
sbb
sarb
adc
mov
ret
test
jns
push
inc
mov
arpl
dec
adc
inc
push
cltd
dec
enter
cmp
frstor
ljmp
loope
push
xchg
push
rorb
xchg
cmp
adc
cmc
inc
stos
jo
and
dec
fsubrs
in
pop
daa
cmc
inc
lahf
stos
xchg
dec
dec
push
in
xchg
cmp
cwtl
in
and
lcall
inc
xchg
add
inc
add
and
out
jmp
lcall
mov
imul
mov
mov
xchg
pop
sub
scas
push
sub
subb
xor
movsb
sub
pushf
xchg
int
and
enter
mov
push
cmp
gs
cmp
jns
out
dec
test
jne
or
mov
repnz
mov
push
insl
clc
gs
inc
push
lods
or
cmp
les
add
cmc
testl
sub
add
jl
mov
sbb
push
int3
push
lcall
adc
sbbb
and
mov
ret
push
add
aam
xchg
sbb
xlat
cmpsl
insl
rcrb
dec
rcrb
pop
mov
scas
int
fcompl
aaa
and
shll
pop
inc
add
xchg
das
shl
pop
in
insl
push
addb
push
and
add
cmp
lods
loope
jmp
sub
lods
cmpsl
adc
jle
jp
or
ficoml
out
dec
adc
add
xor
cmp
call
call
out
int
mov
cmp
scas
outsb
lret
sub
lcall
ljmp
insb
push
shr
or
fsubrl
jae
mov
data16
ret
and
push
rolb
adc
add
test
fadd
sbb
or
cmp
sahf
jne
mov
daa
push
push
xor
add
addr16
pusha
call
cmpsb
lahf
fs
dec
bnd
jl
push
inc
scas
pop
in
push
test
jl
cmpsb
xchg
and
mov
push
test
mov
js
mov
or
mov
mov
movsb
jb
push
jmp
mov
cmp
fstps
mov
cwtl
and
fisubrs
jae
fldenv
fisubrl
jns
push
push
xchg
push
xor
and
hlt
inc
push
int
in
repnz
je
dec
ret
xlat
incb
push
sahf
mov
xor
fdiv
repz
clc
push
inc
pop
roll
fcompp
push
aad
gs
hlt
vcvtsi2ss
fbld
insb
push
lea
push
xchg
and
mov
je
xchg
rcr
inc
ficomps
adc
push
fwait
sub
jae
jecxz
idivl
lcall
sbb
push
or
mov
add
pop
ret
addr16
ficomps
addl
bound
jbe
and
andl
fsts
add
xchg
cmpsl
stos
or
push
xchg
hlt
or
inc
lahf
jbe
bound
mov
sti
mov
sub
or
xchg
pop
rorb
jne,pn
jne
inc
xchg
mov
lock
push
fdivp
and
xchg
mov
push
push
push
bound
mov
fs
sbb
jb
sub
cmp
and
pop
clc
jg
negl
pop
mov
adc
push
ljmp
pusha
shlb
adc
mov
xor
in
jmp
das
addr16
pop
mov
mov
pop
add
lods
mov
aas
sbb
add
mov
inc
subl
mov
iret
push
mov
pop
mov
mov
testl
rcl
pop
cwtl
ss
cmpsb
pop
jnp
mov
push
scas
adc
lea
cltd
hlt
xor
jno
mov
cmp
mov
jg
fsts
lret
hlt
scas
jo
std
in
test
test
loopne
psubb
inc
mov
out
int
lcall
ss
int3
adcb
or
pop
sub
push
fwait
xchg
rorl
addr16
fnsave
pop
leave
fistl
jmp
xchg
popa
pushf
add
sahf
andl
cmp
dec
fnsave
xchg
scas
xchg
xor
aam
sub
insb
loope
je
scas
fcomps
push
adc
push
clc
add
ljmp
xor
jmp
std
lret
pusha
push
fimuls
cmp
std
sbb
sti
add
fisubs
adc
lcall
cmp
mov
aam
mov
movsl
cmp
pop
mov
pop
mov
pusha
or
mov
leave
sbb
outsl
xchg
sti
cmpsl
stos
sbb
cmp
popa
je
add
or
ficomps
adc
adc
dec
mov
iret
mov
fs
dec
and
mov
mov
mov
push
out
push
enter
test
fisttpl
mov
adc
sub
rcrl
dec
mov
ficompl
cmpsl
push
js
mov
outsl
mov
jbe
inc
shlb
push
jle
jo
rclb
in
fcom
nop
inc
dec
ds
dec
or
lret
outsl
mov
std
xchg
inc
and
dec
adc
inc
or
mov
and
cmp
xor
fwait
in
push
cmpb
cmp
les
inc
xchg
cmp
dec
in
std
shlb
int3
add
mov
adc
xor
or
lret
fisttpll
mov
popf
xlat
lock
and
lahf
mov
jl
popf
add
sbbb
mov
ja
jg
and
lcall
data16
insb
xchg
ffreep
loope
inc
or
lods
push
movsb
insb
xlat
pop
negl
and
mov
mov
adc
jo
push
mov
jno,pt
sbbb
addb
repnz
les
mov
idivb
or
js
aam
mov
push
sarb
in
jne
lock
ja
sbb
pusha
pop
xor
push
aaa
popf
dec
in
push
pop
jbe
out
xchg
cmp
pop
and
cmp
and
pushf
fcompl
and
push
inc
xor
xchg
pusha
outsl
lods
out
ja
sub
lea
cmpsb
loopne,pn
xchg
xor
cmpsl
xchg
andb
jge,pn
xchg
js
fdivrl
xchg
int
and
shlb
push
jge
mov
xchg
stos
or
cmc
loope
ljmp
cmp
cs
adc
and
xchg
mov
cmpsb
int3
mov
fwait
enter
pop
cmp
xchg
push
in
movsb
xlat
out
jge
inc
out
xchg
in
enter
pop
das
pop
add
in
das
mov
imul
pmullw
jmp
std
xchg
adc
test
das
xchg
or
inc
fcomps
lock
mov
cmp
ljmp
in
dec
ja
shlb
test
shlb
ljmp
inc
pop
push
pop
ret
push
adc
fmuls
insl
orb
push
xor
lahf
outsb
mul
fisubrs
iret
add
jmp
out
add
out
addr16
cmp
mov
cmp
push
push
sbb
cmpsl
std
je
cltd
mov
sbb
add
outsl
inc
mov
nop
lock
dec
sub
pop
or
or
lret
mov
scas
mov
add
add
rclb
jne
int3
cmp
xorb
imul
push
jne
adc
mov
dec
adc
testl
push
add
dec
adcl
sub
scas
push
test
adc
pop
enter
sbb
shrb
mov
mov
push
sti
cmp
test
int
and
arpl
sahf
or
lds
std
stos
and
or
mov
and
or
pop
jp
aas
add
dec
xor
mov
push
insb
xchg
dec
fistps
sub
adc
add
loop
dec
lock
leave
iret
push
add
scas
push
xchg
aas
and
fildll
xor
rolb
int
stos
popf
dec
push
pop
jbe
leave
sub
orl
mov
push
push
mov
pop
xor
mov
outsl
push
stos
sub
mov
ja
pusha
sbbl
aam
sbb
popa
fisubl
mov
or
jp
xchg
xchg
mov
xor
ljmp
lds
jmp
test
ljmp
imul
push
addr16
inc
sub
dec
lret
xor
dec
sarl
gs
push
lret
pushf
iret
push
cmpsl
sti
test
es
pop
xchg
xor
out
aaa
inc
sbb
inc
push
jae
adc
adc
js
xlat
jl
lcall
gs
pusha
sub
mov
fwait
jl
mov
icebp
and
cmp
dec
inc
cwtl
jge
xchg
cs
mov
adc
daa
sti
xchg
jmp
pop
fidivrs
out
jp
and
or
sub
dec
dec
rorl
sub
push
test
inc
stc
cmp
xor
sub
std
mov
loopne
or
repz
xor
adc
int
jge
dec
scas
cmp
adc
xchg
insb
rorl
push
outsl
sub
loope
cmp
scas
arpl
fistpl
or
push
cmpsl
lods
cwtl
xor
lods
das
push
mov
push
xlat
fsubr
mov
add
fidivrl
lods
push
pop
pop
mov
ss
popa
insl
out
add
sub
jmp
dec
fiadds
ficoms
cmp
and
divb
cmp
or
mov
into
pop
or
jne
jne
xchg
in
or
js,pn
push
je
iret
sub
xchg
mov
mov
test
lret
xchg
js
dec
out
hlt
lods
outsl
jp
mov
mov
jge
lahf
mov
test
vpcmpgtd
dec
mov
push
pop
sti
jb
es
popf
clc
jae
push
ret
mov
movsl
sub
std
roll
sub
mov
scas
dec
add
jns
les
add
adc
mov
jl
mov
adc
cmc
push
sub
fdivrp
dec
sti
test
testb
push
jl
push
fldenv
sbb
hlt
xor
push
or
ss
jp,pt
shl
addr16
xchg
sbb
scas
lods
les
mov
pop
xor
test
popf
mov
cwtl
dec
cmp
xchg
dec
into
imul
gs
mov
insl
call
ret
movsl
push
imul
inc
jge
dec
xor
rclb
clc
adc
outsl
and
popa
stos
test
inc
outsl
fdivrs
scas
jne
mov
add
call
jo
mov
cmp
xchg
push
xchg
push
push
sub
mov
shlb
ja
add
cld
dec
scas
xor
xlat
sbbb
ror
push
mov
push
pusha
push
or
cmp
mov
inc
int
fstps
int3
jo
push
adcb
xor
adc
fistpl
int3
ds
and
dec
dec
pop
mov
das
in
in
dec
or
hlt
sbb
adc
fstps
add
imulb
jo
or
pop
or
and
ds
hlt
cmp
pop
xchg
xchg
xor
add
mov
dec
iret
sub
arpl
add
pop
into
cmp
cs
loop
mov
fstl
cmp
sub
and
adc
dec
pop
flds
lods
gs
ds
rcrl
ss
pop
and
int3
xlat
jae
lahf
mov
repz
pop
mov
sub
sbb
mov
jl
ss
jl
cmc
push
insl
mov
and
mov
out
leave
xor
int3
inc
jge
fsubrp
sbb
jp
xchg
negl
mov
notb
int
arpl
dec
ret
fs
and
push
adc
aam
dec
fisttps
xchg
push
dec
add
test
hlt
push
jo
movsb
cli
popf
fsubrp
dec
inc
dec
sub
test
mov
pusha
mov
push
cmp
xor
bnd
iret
adc
jns
icebp
dec
push
outsl
arpl
fucomip
mov
add
pop
sub
add
data16
dec
inc
adc
mov
fcom
lret
push
sub
sub
imull
push
or
add
pop
cmpsb
sub
pop
jb
jle
jns
jle
hlt
ds
js
hlt
and
test
jp
sub
or
sti
ljmp
cltd
in
int3
push
dec
loop
mov
push
fcoms
mov
xchg
mov
aas
and
in
flds
cmpsl
ja
hlt
scas
add
adc
fldl
mov
mov
ja
mov
xor
add
cmp
jecxz
inc
int
lcall
adc
pop
mov
icebp
movsb
or
subl
nop
das
lret
repnz
movsl
mov
enter
mov
fldt
dec
push
je
sub
mov
das
nop
xchg
sub
testl
sub
mov
fimuls
and
lea
add
jle
aad
mov
dec
out
das
push
cli
js
fsubrl
and
imul
ja
das
aaa
and
add
into
repnz
rclb
pop
sub
sbb
jno
mov
pop
adc
aam
sbb
test
lods
cmc
mov
daa
pop
lcall
dec
adc
mov
adc
mov
jle
xor
jle
mov
or
cmp
pop
adc
sbb
shrl
sbb
mov
lcall
dec
dec
adc
dec
mov
ret
daa
xchg
push
int3
aas
arpl
push
enter
fbstp
sbb
add
jne
adc
push
cmp
je
xchg
lock
push
int
add
pop
xchg
aam
rcrb
sti
aam
ja
das
cmp
dec
adc
cli
les
mov
or
mov
push
ss
out
mov
shll
push
push
shrl
test
insb
pop
xor
sub
in
shlb
mov
xchg
sbb
xchg
leave
pop
stc
scas
popa
stos
sahf
jno
lret
xor
jmp
mov
pop
mov
shrb
insl
fwait
sti
movsl
in
mov
test
and
xor
jbe
adc
sub
pushl
inc
dec
jbe
push
push
jns
cli
mull
testl
lock
mov
pop
adc
jg
adc
mov
pop
mov
fld
ja
ja
je
outsl
cmp
xlat
incl
or
adc
dec
pop
add
ja
lret
jmp
lahf
popf
cwtl
lea
mov
sar
imulb
leave
lret
stos
push
ljmp
inc
aam
std
fmull
dec
clc
mov
fldcw
mov
mov
push
mov
and
fcmovnbe
mov
xchg
add
fldl
and
and
out
cltd
dec
and
sub
xor
and
test
pop
add
pop
jp
jo
mov
rcrb
push
mov
sti
pop
pop
cmp
add
cmp
or
aam
aad
ljmp
mov
dec
shll
push
data16
in
subl
cmp
sbb
jne
or
rcll
mov
lock
fistpl
xor
or
mov
data16
loop
dec
inc
idivl
std
or
mov
inc
hlt
cli
jne
sahf
xchg
scas
stos
in
aad
inc
mov
pop
mov
sub
pushf
subl
cmp
inc
inc
cmp
test
cmpsl
repz
fwait
push
pushf
jl
imul
sti
dec
mov
jp
ret
mov
outsb
iret
pop
add
in
arpl
fldl
rolb
loopne
xchg
lahf
sahf
imulb
stos
or
cli
js
xchg
sub
push
cmp
roll
shrl
in
lods
sub
insb
call
loopne
mov
lahf
scas
out
mov
fmulp
hlt
outsl
dec
adc
rorl
ret
sbb
mov
test
in
cmp
cmp
or
leave
add
int3
pop
jge
sbb
push
and
xor
push
mov
xor
jo
inc
int3
adc
cld
testb
popa
aas
mov
mov
xor
fcomps
mov
mov
sbb
pop
shr
mov
pop
call
mov
gs
cli
loopne
fiaddl
jmp
mov
hlt
xchg
or
outsb
xor
mov
neg
aam
pop
daa
clc
sub
out
adc
fists
aam
jae
fnstcw
mov
xor
cltd
lea
sub
xchg
sbb
inc
out
mov
push
cltd
pop
negl
sub
cwtl
aam
pop
sub
movsl
imul
cmp
xchg
aad
push
aad
push
ljmp
es
movsb
fwait
dec
mov
mov
clc
in
adc
lret
pop
gs
jns
push
out
mov
add
dec
add
inc
int
aam
or
mov
aad
pop
orb
aad
jns
hlt
in
sbb
shrl
out
pop
fstl
jg
mov
rcl
cmp
mov
and
push
inc
dec
movsb
xor
add
sarl
std
mov
sub
insl
fdiv
sub
aad
fdivrs
aas
add
outsl
sbb
inc
mov
pop
adc
xchg
cmp
ss
repnz
adc
push
ret
adc
inc
xchg
mov
adc
mov
jnp
int
rcr
push
dec
es
mov
push
push
js
pop
mov
inc
cltd
push
ret
mov
nop
ljmp
sub
jns
add
aad
pusha
pop
add
add
mov
sub
pop
cs
mov
and
dec
cmc
inc
incb
or
pop
inc
mov
lods
xchg
or
outsl
adc
inc
in
mov
pushf
loopne
dec
ficoms
test
inc
push
js
adc
cwtl
shr
mov
xchg
push
adc
xchg
dec
scas
shll
repnz
jo
movsb
popf
test
cmp
ret
fs
or
cmpsb
jmp
or
cmpsb
mov
ficoms
and
fcomp
xchg
mov
rolb
dec
pop
fsubs
pop
mov
jge
sub
push
add
push
test
mov
sbb
sbb
fstpl
xor
xchg
fiadds
add
pop
or
dec
js
or
or
dec
and
les
fildl
adc
cmp
mov
lds
mov
insl
inc
lods
fisubrs
mov
and
mulb
or
cmp
outsl
roll
scas
xchg
jne
pop
cmovge
add
leave
sbb
or
sbb
ja,pt
es
stos
imul
pushl
dec
out
call
lods
mov
jmp
pop
and
dec
mov
movsl
pop
pop
inc
imul
js
mov
pcmpeqb
nop
dec
stos
xchg
mov
pusha
cs
jp
or
xor
enter
and
cmpsb
dec
out
scas
or
decb
mov
dec
inc
xchg
mov
es
pop
mov
and
subb
fnsave
mov
fwait
and
shrl
int3
mulb
int
arpl
xchg
loop
dec
xorl
mov
xchg
and
lahf
add
sbb
ror
adc
gs
inc
nop
movsl
das
inc
iret
mov
mov
cmpsb
mov
xchg
xchg
sahf
lret
pop
xchg
in
cld
cwtl
test
xlat
pop
rclb
fwait
mov
nop
adc
test
push
outsl
sti
pop
pop
lock
push
mov
xor
push
sub
xchg
in
in
lods
jo
mov
std
movsl
adc
fs
in
xchg
sub
or
hlt
or
shll
cmp
dec
dec
testl
shl
dec
loopne
add
fcoms
in
out
mov
push
addl
mov
stos
add
mov
dec
mov
jp
and
clc
scas
pop
imul
or
iret
lds
dec
mov
or
outsl
insb
fldt
mov
loopne
sub
enter
sub
ret
es
out
pop
outsl
or
ja
or
sub
xchg
add
test
ljmp
call
shr
jl
stos
inc
push
loopne
jb
lahf
lods
in
sbb
scas
jge
add
adc
push
aas
sub
sbb
inc
leave
pop
jmp
stos
test
mov
mov
popa
mov
push
imul
adcl
ss
inc
pusha
fs
rol
adc
pop
repnz
test
ret
int
stos
orb
push
jge
sbb
into
pushf
sbb
xor
cwtl
lcall
mov
notl
cld
cmp
mov
pusha
shlb
clc
fwait
subb
jg
lret
cwtl
cmp
pop
cmp
mov
out
icebp
cmp
ficoms
scas
push
dec
xor
mov
jmp
test
ss
xor
mov
xor
call
aaa
push
xchg
std
repz
lahf
ds
adcb
jno
sub
sbb
dec
mov
leave
out
and
mov
stc
addr16
mov
or
pop
and
or
ss
mov
push
sub
inc
jo
xor
mov
or
outsb
add
lods
cld
mov
cmp
js
nop
xchg
ret
icebp
adc
aas
dec
mov
dec
ss
mov
loope
push
roll
mov
jle
fnsave
pop
xchg
shrb
mov
jmp
mov
inc
es
cmc
push
fldcw
and
or
movl
test
enter
sbb
push
mov
in
sbb
mov
push
hlt
mov
dec
push
mov
sub
imul
out
or
lock
aam
mov
testb
cmp
mull
ror
lds
jbe
push
dec
pop
loop
mov
getsec
jmp
xchg
out
test
dec
lahf
pop
jno
out
sarl
mov
lea
xchg
dec
adc
push
scas
xchg
fwait
mov
and
ljmp
je
mov
cmp
repnz
in
jb,pn
mov
fbstp
dec
lods
add
cmc
out
test
jmp
sti
mov
scas
sub
jg
inc
sahf
cltd
in
lea
push
adc
mov
int
cmp
fcoml
sbb
nop
fwait
add
fsubrs
sbb
int
jnp
in
jecxz
outsb
xlat
sti
push
fadd
les
sbb
fcmovu
sub
push
cmp
es
out
pop
cmpsl
push
stos
and
insl
ja
pop
rcl
pop
and
stos
inc
inc
aas
sbb
adc
adc
fdivl
jne
push
inc
pop
add
out
mov
les
cmp
pusha
dec
mov
sub
mov
gs
mov
popf
mov
cwtl
mov
movsl
loop
gs
or
or
loop
add
clc
popa
cmp
cmpsl
xchg
subl
insl
cmpsb
imul
lret
push
pop
es
ret
sub
ja
rorb
inc
jnp
fcomi
and
pop
ficompl
push
or
add
incl
shlb
mull
jbe
lock
pop
cmp
jbe
je
adc
ror
int3
popf
fs
fs
mov
leave
pop
pop
pushf
push
jmp
inc
ja
js
cmp
mov
jae
outsl
jmp
mov
jmp
mov
add
or
scas
bound
shll
ret
jp
sub
shll
fldenv
jle
leave
xchg
ljmp
mov
adc
adc
cmp
imul
in
in
bound
xor
mov
mov
lods
xor
ror
mov
push
xor
aaa
or
mov
jno
mov
testl
enter
aad
nop
scas
or
jne
xchg
jnp
roll
xor
into
mov
fstpl
lea
hlt
xchg
inc
rcrl
jle
and
add
fnstenv
push
movsb
rclb
mov
cmp
cs
jno
fstpt
cltd
movsl
enter
xor
repnz
dec
insb
fstpt
mov
jo
push
jnp
cwtl
aas
jmp
cmpsb
xor
loope
dec
aaa
adc
pop
push
lods
fmulp
rcrb
nop
jns
cmp
inc
dec
or
ret
pop
cs
imul
jmp
or
sub
mov
jge
jb
xor
test
jb
mov
push
ret
mov
sbb
mov
pop
sub
mov
adc
movsb
stos
imul
inc
jmp
imul
cmpsb
jl
repz
push
dec
mov
cmc
adc
lret
fwait
insb
test
and
push
lret
and
xor
push
jno
pop
add
dec
mov
xor
ja
lock
imull
fwait
dec
arpl
fstps
lods
arpl
cmp
fcoms
adc
dec
imul
stc
mov
jb
cmpb
lcall
and
cmp
jmp
xchg
mov
mov
add
xchg
cmpsl
fisubrs
mov
xor
faddl
repz
fisttps
mov
in
ret
cmp
jo
sahf
mov
sti
inc
sub
push
out
std
inc
popf
or
cmp
xchg
outsb
pop
sub
in
pop
lea
dec
mov
outsl
fcomip
jp
push
mov
inc
iret
ret
xor
lea
mov
jnp
cmp
leave
inc
xor
fadds
ss
xchg
cwtl
jae
mov
pop
test
dec
movsb
pop
movsb
lods
xchg
push
in
lret
xchg
movl
nop
xor
or
daa
mov
push
dec
sub
mov
xchg
sbb
jmp
jmp
lahf
dec
fstpt
pop
xor
inc
inc
jns
mov
jg
xor
inc
add
pop
xchg
inc
ss
push
jb
ret
lock
mov
xchg
adc
push
add
in
inc
jle
mov
test
push
mov
je
xor
mov
pop
sbb
xchg
cwtl
xchg
dec
lahf
jecxz
pusha
and
dec
gs
addr16
jae
loop
ljmp
fdivs
adc
xor
mov
lock
cld
jecxz
into
cwtl
or
test
iret
cli
dec
jo
nop
std
mov
lds
scas
std
test
mov
int
mov
pop
dec
jns
mov
lret
xor
fwait
movsb
push
imul
loope
jns
mov
mov
xchg
adc
imulb
sub
inc
push
mov
inc
mov
mov
lcall
pop
push
je
pop
mov
push
dec
cmp
jo
sarb
fistpll
ds
fxch
jo
test
insl
dec
mov
dec
bound
mov
pusha
enter
push
pop
inc
sahf
pop
mov
std
push
mov
hlt
fnsave
sbb
add
xchg
dec
enter
adc
xchg
mov
pusha
pop
adc
mov
lods
mov
jnp
in
lahf
ss
mov
ret
insb
mov
mov
add
iret
test
mov
mov
leave
pusha
mov
lret
jne
cmp
push
stos
sarl
xchg
mov
jle
fldenv
mov
jle
xchg
in
push
pop
pop
mov
cli
ret
mov
je
dec
adc
cmpsl
insl
stos
push
jecxz
inc
xor
xchg
sbb
cwtl
push
into
pop
insb
cwtl
insl
and
cmpsl
sahf
andb
mov
ljmp
push
or
add
xchg
xchg
popf
repnz
pop
mov
sub
in
insl
jl
pop
push
add
shll
add
cs
add
daa
ja
cmpsb
adc
pop
pushf
ds
je
or
imul
xor
dec
lahf
xchg
mov
pop
sbb
mov
cvtdq2ps
adc
dec
loope
or
adc
sti
xor
jle
std
icebp
mov
mov
movsb
pusha
fs
add
sub
mov
addr16
pop
fs
ja
jmp
mov
sub
jg
mov
push
mov
fwait
das
xchg
mov
fsubr
push
ror
push
shll
mov
pushf
fwait
jl
push
fsts
sbb
leave
loope
pop
mov
inc
test
sub
test
sbb
fadd
xor
xchg
out
clc
int
les
mov
out
jns
mov
ficompl
jecxz
pop
xchg
xor
rorb
adc
repz
cli
out
mov
or
outsl
and
xchg
out
adc
outsl
mov
push
push
push
leave
xor
sbb
jl
bound
jmp
in
xorb
in
scas
arpl
addr16
sarb
push
sub
out
insb
adc
mov
mov
je
adc
arpl
xor
fldl
in
and
pop
inc
popa
pop
std
addr16
dec
push
lret
mov
jne
js
xor
and
mov
xlat
cld
push
pop
adc
adc
je
cmovg
dec
rorb
mov
stc
repz
rolb
cmp
ret
or
or
scas
or
pop
mov
aad
inc
movups
adc
xchg
mov
fnstenv
add
das
repnz
cmpsl
in
popa
pop
push
mov
mov
sub
jle
lock
aad
mov
es
jp
xor
push
xchg
sbbl
ret
mov
arpl
inc
dec
xchg
inc
insb
push
iret
push
xchg
jno
rol
inc
cltd
adc
call
out
test
xchg
xchg
mov
xchg
add
mov
addr16
jl
lock
fwait
mov
out
xchg
jl
lds
popf
dec
movsb
test
int
test
and
js
fbld
ja
inc
cmp
out
adc
sahf
data16
dec
dec
pop
inc
pop
in
cltd
xor
mov
test
les
cmpsl
mov
push
loopne
cli
cli
pop
mov
fsts
hlt
jge
push
xchg
fcmovu
jbe
jbe
jecxz
mov
cmc
stc
lds
dec
test
xor
clc
pop
sub
mov
add
gs
sbb
mov
mov
ja
inc
into
rorl
mov
dec
mov
mov
es
cmpl
repnz
gs
xor
xchg
mov
lods
clc
sub
push
out
out
mov
clc
mov
sub
jecxz
in
mov
popa
mov
add
outsl
loop
dec
cmp
ss
inc
sbb
mov
popfw
iret
adc
push
add
test
mov
movsb
enter
and
and
push
cmp
popl
js
inc
int3
int
imul
mov
push
out
cmpsb
xor
adc
pop
fdivl
cmpsl
das
jge
cmpsb
rcll
cs
jg
jns
mov
or
xlat
addr16
cmpl
mov
adc
pop
xchg
sub
jno
loopne
and
iret
aam
sbb
sbb
pop
cwtl
sub
rol
test
ja
and
jp
cli
sub
lcall
lcall
fbstp
rcr
xor
lods
arpl
or
out
fnstcw
imul
mov
push
gs
fs
xchg
lret
jbe
inc
cmp
cmp
fcoms
ds
push
or
in
ficompl
jns
push
sti
and
stos
into
mov
adc
jge
sahf
daa
jle,pn
cmpsb
popf
inc
mov
pop
pop
pop
jns
subb
fildl
jecxz
mov
sarl
add
dec
dec
push
int
neg
jmp
adcl
xchg
cs
ljmp
pusha
pushf
push
loopne
sub
and
xor
adc
mov
inc
mov
mov
sub
inc
adc
push
call
jns
icebp
mov
push
and
jb
pop
lret
out
jns
bnd
inc
test
mov
ss
fcomps
stc
inc
movsb
inc
mov
fadd
in
iret
lret
sbb
test
sub
xor
rolb
cmp
clc
les
out
pushf
or
jg
push
and
mov
insl
inc
inc
icebp
fdiv
test
ja
scas
add
cwtl
jno
scas
nop
stc
sub
lahf
loop
jo
rcrl
xlat
orl
dec
adc
cmp
into
nop
xor
jg
nop
fwait
jl
sub
ror
into
ljmp
mov
pop
fdivrl
pushf
or
push
sub
jns
sub
mov
movsl
adc
adc
or
ror
add
mov
mov
neg
andb
sub
aad
inc
adc
test
push
test
dec
cmc
mov
notl
ja
ficomps
jp
rol
adc
cmp
pop
jp
or
pop
xlat
xor
jae
sub
xor
pop
xlat
push
ljmp
lods
arpl
pop
mov
loopne
pop
and
xlat
xchg
pop
movsb
nop
push
lods
inc
movsb
daa
lods
daa
adc
nop
les
mov
push
arpl
es
enter
outsb
gs
add
xchg
jg
cli
adc
pop
push
and
dec
mov
mov
insb
dec
sub
imul
mov
dec
add
mov
inc
imulb
adc
mov
mov
aaa
std
adc
adc
dec
leave
lods
or
jae
or
in
repz
mov
mov
dec
dec
std
sub
cmp
mov
xchg
add
pop
mov
inc
pop
cmp
xchg
xor
lds
jo
insl
mov
push
xor
cmp
dec
fnstenv
pop
xchg
mov
dec
repnz
dec
pop
mov
mov
mov
sbb
cmp
add
mov
sbb
cmpl
imul
mov
push
xchg
xor
add
push
push
cmp
add
pushl
mov
pop
popa
scas
and
cmp
sub
sahf
or
mov
sub
shll
dec
cmp
lods
mov
mov
sbb
mov
pop
dec
mov
test
add
mov
jbe
jns
ja
lahf
int
pop
pop
hlt
mov
sti
ds
jge
mov
push
dec
jl
lods
jo
fldl
sub
cmp
jns
pop
mov
test
xor
scas
jns
push
push
push
addr16
fdivl
in
adc
loopne
mov
fdiv
int3
mov
fucomi
sbb
out
sub
gs
inc
ret
mov
dec
push
subb
xchg
cmp
and
sahf
in
fwait
xor
iret
jno
fnstcw
into
in
pop
ds
stc
aaa
xorl
and
pop
fdivs
hlt
jmp
cmp
fisubl
out
pop
in
imul
jecxz
add
fwait
sbb
push
rolb
decb
lret
dec
adc
dec
int3
divb
enter
fs
jg
pusha
adc
or
mov
pop
push
test
sti
in
push
jp
mov
rcrl
or
dec
rcl
inc
adc
push
inc
les
push
jbe
inc
aad
setbe
mov
bound
jg
push
pop
cmp
mov
dec
pop
push
out
mov
lds
mov
arpl
dec
adc
or
orb
stos
or
repz
cs
push
in
pop
pushl
gs
inc
cmpsb
shlb
int3
cmp
fsubrl
and
in
jle
mov
cmpsl
mov
or
fildll
inc
rep
pop
outsl
sbb
mov
outsb
mov
mov
or
fisttpl
push
jo
sbb
pop
or
mov
notl
je
mov
lea
loope
jecxz
popf
pop
lret
jecxz
inc
dec
sahf
mov
mov
pop
inc
inc
stc
aad
in
and
out
fistpll
enter
mov
pop
sub
clc
fs
dec
int3
rcr
or
xchg
mov
adc
ret
adc
or
mov
fwait
xlat
cwtl
out
sub
fs
stos
and
mov
mov
sbb
cld
fucompp
arpl
pop
loopne
sub
outsl
inc
movsl
lahf
call
pop
mov
jo
stc
pop
lcall
dec
xchg
nop
cs
push
add
jno
popa
out
loop
bound
pop
clc
in
push
inc
addr16
sti
inc
xor
mov
loopne
sub
dec
xchg
aaa
in
repz
loope
mov
fidivrl
sahf
decb
jo
mov
lret
mov
mov
pop
sarl
or
dec
je
imulb
out
stos
sbb
shll
mov
push
je
dec
pop
lods
adc
dec
lds
pop
adc
mov
lods
daa
jno
in
mov
popf
aam
scas
sub
dec
movsl
ss
xor
push
loope
add
push
cmp
xchg
test
stos
stc
loop
roll
mov
movsb
out
cmpsb
inc
enter
jg
jge
movsl
fwait
imul
lods
inc
pop
outsl
adc
or
push
in
mov
and
mov
cmp
or
fstpt
jle
cld
mov
sub
push
or
insl
lods
pop
loopne,pn
sbb
adc
jae
cmc
arpl
loope
inc
loop
pop
in
in
loopne
int3
cli
scas
mov
push
daa
mov
mov
or
bound
inc
mov
mov
fiaddl
sub
andl
fldenv
push
shl
mov
loopne
lods
push
xchg
in
pop
mov
bound
out
pop
outsb
jb
in
sub
outsl
stos
aaa
lock
daa
outsb
int3
scas
lcall
mov
outsl
je
or
loop
dec
and
ss
movsl
add
loop
mov
dec
outsb
push
lret
xchg
adc
jmp
mov
lret
mov
and
nop
mov
fsubl
mov
mov
jae
or
mov
pop
adc
into
and
sbb
leave
dec
xchg
loope
cmp
and
jne
sbb
cmp
ret
hlt
mov
xchg
add
inc
add
test
shll
adc
sbb
pop
mov
rorb
sub
dec
mov
jp
sbb
push
insb
sarb
sbb
shlb
addr16
enter
movsl
scas
mov
adc
mov
and
int3
cmp
push
sbb
movsl
dec
lea
cmc
xor
loope
sbb
in
sbbl
adc
mov
xchg
popa
std
aaa
fiadds
xor
in
inc
cmp
movsb
into
loop
mov
rorl
dec
add
rcl
inc
mov
or
mov
scas
push
dec
test
shrb
call
call
jmp
mov
xchg
adc
ficomps
repz
xor
iret
cwtl
sub
ret
inc
pop
mov
adc
popa
cmp
pop
xchg
bound
mov
and
pop
push
pop
inc
jg
pushf
adcl
pop
mov
bound
enter
ss
or
mov
fs
mov
mov
fstpl
push
in
shl
outsl
xor
xchg
mov
mov
call
test
bound
pop
adc
or
pop
sbbl
repz
jge
mov
sbb
lock
mov
sbb
enter
push
push
loope,pt
adc
test
or
mov
xor
jg
mov
cmp
shlb
push
add
push
xchg
imul
and
fs
ret
add
sbb
cmpsb
test
lock
std
mov
cltd
inc
cmp
nop
add
inc
xor
pop
push
pop
sarl
sub
adc
mov
popl
nop
push
dec
insl
xchg
xlat
cmpl
adc
testb
jle
std
or
sbb
enter
shll
insl
push
decb
lcall
lea
pop
push
hlt
dec
and
es
ljmp
arpl
test
inc
pop
ljmp
dec
mov
inc
dec
dec
xchg
out
xchg
add
adc
or
xchg
inc
sub
imul
push
xchg
mov
or
pop
jp
xor
xchg
dec
ja
test
add
int3
sbb
ret
mov
jns
mov
xchg
inc
les
andb
adc
es
clc
push
mov
adc
out
xchg
xchg
decb
sti
cld
jg
adc
pop
sub
adc
pop
imul
aad
mov
cmc
popl
mov
enter
inc
imul
jle
fs
mov
sbb
cmp
pop
pop
mov
imul
mov
adc
mov
shlb
sbb
sahf
adc
in
mov
out
movsl
es
lods
shlb
mov
mov
cmp
pusha
insb
xchg
and
scas
xor
push
jne
jp
mov
cmp
jnp
mov
sub
sbb
pop
imul
icebp
fnsave
insb
xor
mov
pusha
mov
roll
movsb
adc
add
cmp
pop
sbb
mov
scas
call
fs
mov
mov
fwait
xchg
adc
andl
xor
sti
push
cmp
mov
jecxz
mov
adc
xor
jo
mov
push
mov
mov
pop
mov
pop
jmp
les
in
out
push
xchg
dec
adc
into
xor
cltd
sbb
pop
cmpl
add
rcrl
gs
mov
call
xor
jmp
jle
pop
pusha
inc
into
shrl
ljmp
outsb
or
movsl
pop
inc
imulb
mov
mov
sbb
subb
add
int
or
sub
pop
out
int3
adc
push
jbe
mov
into
jb
dec
pop
stos
lcall
lods
push
xor
sub
fidivrl
pop
jle
adc
dec
fdivr
and
or
add
test
or
je
leave
mov
insb
mov
or
jp
orl
mov
rep
inc
lods
out
cmp
repz
insb
ljmp
rorb
mov
xchg
cmpb
adc
xchg
xor
sub
xchg
xor
jb
mov
jo
clc
lahf
xchg
lcall
testl
lahf
leave
mov
fisubrl
fimuls
mov
je
cs
xchg
arpl
inc
xor
aaa
mov
leave
mov
pop
cmp
lds
pop
cmpl
push
cltd
dec
std
movb
loop
cs
push
lret
add
cmp
xor
mov
dec
stc
push
insl
push
mov
not
xchg
mov
dec
and
hlt
dec
mov
das
mov
call
push
mov
lahf
imul
sub
mov
inc
sbb
cmpsl
out
ret
pop
mov
pop
sbb
xchg
sahf
ret
dec
jnp
in
sbb
movsl
rorb
add
insb
in
pop
ret
ljmp
in
mov
loop
sub
adc
js
repz
arpl
ret
cmpsl
push
xchg
and
pop
fstpl
ficoms
pop
mov
daa
sub
xchg
push
ss
std
lods
cli
dec
pop
push
fisttpl
sbb
inc
push
inc
sbb
mov
jmp
cltd
andl
call
cmp
jb
jno,pt
push
call
and
ret
xchg
divl
dec
std
mov
push
in
cmpsl
gs
daa
xchg
dec
or
fcompl
mov
movsb
call
xor
ja
mov
mov
out
mov
mov
jl
jge
repnz
xchg
xchg
addr16
push
push
jg
push
dec
mov
iret
inc
adc
iret
cmp
cmp
lret
dec
lds
lods
and
sub
mov
pushf
and
insl
stos
and
sbb
sub
ds
test
adc
pop
push
out
out
jmp
pop
add
xchg
insb
push
int3
lock
lds
mov
adc
lods
and
cmp
idivl
rcrl
lret
push
in
rclb
cmp
imul
lods
cwtl
fdivs
xor
js
ja
pop
mov
rcll
movsl
es
inc
dec
out
int
outsl
fdivrs
icebp
add
xchg
sub
divl
ficoms
sub
out
enter
jle
test
sub
push
loop
and
jp
adcl
add
mov
cmp
push
mov
pusha
rolb
imul
pop
ficomps
pop
call
mov
sub
hlt
aad
arpl
pop
push
mov
movsb
out
mov
adc
sbb
adc
mov
movsb
mov
lock
pop
aam
jo
dec
cs
push
ljmp
int3
xor
push
ja
arpl
push
in
push
mov
mov
lret
or
rclb
dec
out
test
movsl
addr16
pop
mov
mov
mov
mov
test
pop
pop
xlat
repnz
loope
jmp
xchg
cwtl
mov
stos
mov
and
mov
insb
arpl
xchg
ret
mov
dec
fisttps
out
out
fbstp
jecxz
bound
push
out
lret
jno
jecxz
in
xor
into
shrb
out
and
scas
sbb
mov
clc
sbb
jmp
popf
in
mov
jbe
hlt
dec
sbb
repz
mov
movsl
mov
xor
out
fistpll
add
cltd
or
add
push
and
arpl
xor
data16
pop
xor
push
nop
push
shrb
fistps
dec
enter
in
pop
fstps
or
xchg
popa
jg
dec
das
in
js
push
xchg
in
fstpl
pop
sub
mov
and
lret
outsb
popf
jo
out
cmpsl
adc
jae
imul
push
mov
pusha
orb
and
pop
mov
and
test
iret
pop
and
fisttps
repz
out
or
inc
jle
repnz
lea
mov
push
es
xor
divl
dec
decl
adc
and
sub
popa
cli
adc
or
fisubrs
idivb
xchg
dec
jbe
push
std
fcoml
les
mov
std
sbb
pop
cmp
xlat
and
je
fiaddl
popf
mov
xchg
movb
scas
stc
pushf
leave
inc
loope
xor
shlb
sub
mov
pop
out
add
push
ljmp
jae
stos
fs
push
gs
jl
adc
and
out
jl
stos
cmp
psubq
xor
push
xchg
dec
mov
lea
push
out
fsub
cmp
in
stc
ljmp
sbb
stos
dec
sbb
ja
ljmp
imul
shll
lret
mov
pop
push
outsb
dec
push
jmp
dec
xor
loop
mov
out
in
push
sbb
cli
jle
sbb
stos
test
into
xchg
rclb
cmc
rorb
jbe
adc
sarl
xor
mov
insl
sub
out
outsb
into
push
outsb
into
and
mov
test
into
leave
mov
pop
repz
add
leave
and
xchg
cwtl
in
out
pushf
mov
ja
ja
aad
out
jns
das
push
or
mov
out
push
xor
add
aad
xor
arpl
xchg
mov
add
push
jecxz
nop
push
push
cmpsl
outsb
dec
add
push
sbb
stos
mov
push
jae
push
push
xchg
dec
push
pop
or
js
testb
aam
add
rcll
popa
cmp
inc
mov
out
add
addb
leave
push
call
push
add
sbb
and
xchg
cld
mov
addr16
int3
xor
cmp
push
test
int
mov
push
negl
test
add
sbb
mov
lahf
add
aas
push
daa
push
pop
fimuls
pop
mov
repnz
call
adc
bound
add
inc
jno
jl
sub
and
stos
push
pop
inc
aaa
push
jp
xor
fcmovnb
mov
push
cli
mov
add
inc
sub
call
fwait
sub
cmp
xchg
movl
mov
loop
xchg
pop
and
sub
fwait
aaa
mull
jbe
adcl
mov
add
mov
mov
cmpsl
cmp
mov
xchg
mov
gs
loop
or
jmp
xchg
into
cmp
pop
jp
nop
add
addr16
cmp
ret
cli
mov
sub
loopne
scas
mov
lcall
sub
fisttpll
inc
xchg
sbb
inc
jge
lds
dec
mov
and
cmp
jb
outsb
sbb
push
mov
sahf
loopne
test
in
adc
dec
in
mov
addl
arpl
cltd
push
or
jae
or
es
push
jns
xor
gs
test
lret
dec
sbb
popa
out
imul
call
mov
or
sahf
pop
rcrb
iret
adc
out
pusha
xor
loope
jno
imul
add
test
fdivp
sahf
jg
inc
mov
rolb
sarb
push
pop
xchg
enter
sbb
test
pushf
test
imul
fwait
mov
or
cs
sub
dec
js
stos
enter
imul
sub
adc
rcll
xor
add
shlb
mov
and
shr
nop
mov
adc
das
addw
pop
xor
adc
adcl
fisubrl
clc
lahf
dec
xchg
sti
push
cmp
je
pop
xor
mov
push
inc
mov
inc
mov
jae
cmp
lea
cs
andb
fmuls
xchg
push
les
add
and
shr
mov
jnp
jbe
pop
test
pop
xchg
sbb
icebp
mov
ja
mov
and
jo
lock
jecxz
in
pushf
pop
or
cmp
or
lahf
ret
sub
subb
imul
jl
sub
jns
or
sbb
imul
fisubs
sub
clc
insb
dec
or
mov
test
push
and
mov
testb
mov
add
shld
xor
leave
or
test
test
mov
sarl
aas
outsl
cli
int
std
inc
jmp
dec
stos
ss
xor
insb
push
sub
pop
jb
xchg
jmp
lret
adc
cld
sub
loopne
insb
cmpsb
lcall
movsb
mov
jmp
stc
mov
ret
mov
cmp
pop
mov
sbb
mov
test
pop
dec
or
xchg
adc
push
sbb
out
fdivrs
jnp
sbb
mov
cs
rolb
mov
in
sbb
popa
fisttpl
inc
cltd
push
and
test
ljmp
pop
into
add
ret
dec
shll
adc
mov
fidivl
mov
jne
rorb
sbb
arpl
clc
sub
push
lcall
es
enter
mov
sbb
movsb
mov
pushf
or
lea
shr
dec
imul
dec
dec
add
ds
nop
sub
sub
pusha
fs
fdivrs
mov
nop
sbb
lea
cli
xchg
jmp
or
pop
mov
add
testb
aaa
fsubrs
add
dec
test
fists
or
cmpsl
popf
rolb
push
xor
cmp
stos
inc
pop
or
out
pop
test
adc
adc
dec
stos
shl
mov
ror
imul
insl
or
ret
cmpsl
sbb
add
lret
pushf
test
mov
call
sbb
ja
sub
add
jne
pop
inc
jl
cs
pop
sub
adc
cltd
test
nop
mov
dec
push
jecxz
stos
xchg
push
and
jge
adc
call
aaa
pop
adc
push
loop
sarl
pop
adc
jecxz
test
inc
dec
pop
mov
cmp
sbb
icebp
push
jb
in
jecxz
push
mov
jecxz
loopne
mov
inc
jno
sbb
mov
and
repnz
hlt
pop
std
mov
iret
inc
inc
mov
outsb
cmc
loop
movsl
mov
test
and
leave
pusha
nop
jp
cmp
xchg
fildll
pop
fwait
pop
pusha
leave
loop
scas
dec
push
out
mov
mov
out
and
jecxz
ficoms
adc
dec
daa
addb
add
cwtl
mov
push
adc
out
jle
push
and
inc
test
jae
hlt
insb
sbb
mull
cmp
int
rcrb
js
daa
ds
rcr
xor
jl
sub
mov
jl
loopne
cmp
inc
sbb
sub
push
rorl
cmp
xchg
add
sbb
lret
fistps
hlt
add
pop
ss
xlat
out
lret
xchg
and
cwtl
nop
xchg
test
pop
add
inc
mov
jg
daa
test
sub
mov
add
cltd
lock
out
adc
sub
jb
pop
icebp
shlb
adc
loopne
cmp
aaa
int
loopne
dec
movsl
xchg
inc
lods
insb
repz
iret
mov
lods
cmp
push
cli
ds
push
int
aaa
xor
fsubrs
pop
mov
loope
lock
cmpb
mov
lret
lea
lcall
fimull
pop
ds
inc
inc
cmp
jle
out
insl
push
xor
rcr
repnz
sahf
int
cmp
in
xor
int
mov
or
mov
xchg
xor
outsl
test
mov
ja
outsl
lods
lods
pop
push
cmpsb
std
ja
push
xchg
lock
jmp
arpl
xor
mov
xchg
cmpsb
jno
or
clc
sub
cwtl
push
xlat
leave
lods
push
mov
fstps
sbb
lea
in
inc
dec
stos
loopne
fs
leave
lea
mov
jo
cmp
ret
ficomps
arpl
push
cli
cmpsl
dec
dec
dec
fildl
mov
xchg
inc
lock
and
out
sbb
adc
or
scas
je
push
ret
idivb
out
add
lahf
sbb
in
inc
adc
push
fstps
es
xchg
movsb
push
add
cwtl
cmp
and
aas
add
mov
movsl
es
andb
loopne
xchg
jmp
adc
inc
pop
imul
nop
nop
or
repz
add
sub
xchg
push
iret
adc
and
test
sbbl
cli
mov
inc
inc
andb
inc
xchg
cmc
sbb
cmpb
lock
rcrb
test
orl
or
jno
hlt
sarb
arpl
vmaskmovdqu
jmp
sbb
mov
test
out
xor
test
sub
xchg
mov
bound
sbb
ret
inc
mov
out
mov
jb
sub
mov
mov
pop
cmp
pop
adc
idiv
push
add
sbb
imul
mov
pusha
add
in
mov
data16
and
stos
pop
mov
push
ljmp
xchg
in
pop
lret
inc
inc
pop
add
inc
subl
insl
and
icebp
sub
sub
shrb
push
lret
imul
pcmpgtw
jno
jb
xchg
add
fildl
ret
fstpl
stos
pop
cmpsb
mov
divb
pop
lcall
dec
xchg
push
leave
and
or
jg
mov
pop
loopne
sti
std
sti
out
addr16
push
das
push
jnp
dec
jge
jb
xor
push
dec
inc
adc
popa
jecxz
push
jb
xlat
sub
dec
das
adc
bound
add
das
inc
or
xchg
movsb
dec
gs
xchg
jmp
push
mov
cmp
or
cs
out
shrl
jno
and
bound
mov
cvtps2pd
test
mov
shl
fcompl
add
fmull
cmp
jae
cmp
adc
push
imul
dec
lds
cmp
shlb
xor
jae
push
push
mov
push
pushf
sub
ja
push
stos
xorl
stc
xor
xor
ljmp
xchg
add
testl
in
xor
push
les
pop
jg
mov
mov
popf
aam
mull
ficoml
jecxz
lret
jns
test
rorl
xchg
mov
sbb
and
push
xchg
stos
loopne
cmp
insb
int3
sbb
clc
loope
dec
scas
sbb
rcrl
repz
in
xchg
lret
dec
mov
cmp
in
out
into
pop
iret
fscale
mov
xchg
jb
jecxz
pop
fdivr
stc
or
add
cs
shlb
cmp
inc
es
test
sbb
sbb
adc
xor
out
xchg
cld
fcmove
dec
lret
or
sbb
inc
push
adc
pop
lcall
mov
arpl
movsb
pop
lcall
scas
fstl
ret
mov
add
push
pop
in
add
mov
inc
and
lret
jno
mov
jmp
nop
lret
adc
jl
cmp
or
jp
out
inc
add
mov
pusha
cmpsl
divb
cmp
adc
adc
mov
sub
mov
dec
jno
jae
mov
push
ret
and
nop
and
out
add
push
mov
pop
orl
addr16
sarl
cli
stos
push
rorb
lret
pop
adc
adc
dec
add
push
fucomi
in
rcrl
sti
fmul
pusha
jge
icebp
push
test
popa
and
fisubs
icebp
jbe
movsb
lcall
mov
mov
dec
mov
cmpsl
cmp
sbb
jo
test
lods
push
rcrb
scas
es
pop
cmp
ret
mov
test
sub
sub
nop
std
inc
push
xor
pop
jbe
scas
fildl
and
mov
push
jae
push
push
jmp
sbb
imul
out
dec
or
arpl
insl
mov
jne
cs
inc
sbb
xchg
pusha
jge
or
int3
mov
popf
movsb
das
insb
pop
xchg
movsl
push
pop
xchg
fcom
js
inc
imul
fwait
push
fsubs
xchg
popf
insl
ljmp
xchg
int3
ret
cs
nop
lret
cld
ss
bound
fst
and
daa
imul
stc
mov
pop
ja
test
jnp
or
inc
mov
insb
pop
adc
dec
call
adc
lcall
mov
push
mov
sub
add
sub
enter
add
mov
sbb
xlat
scas
fwait
add
push
lock
jge
sub
cld
dec
stos
pand
mov
scas
lret
sub
xchg
jae
xor
sub
jmp
xchg
decb
lds
pop
mov
stos
call
rcrl
aam
push
ss
stc
shlb
mov
mov
icebp
cmpsb
sahf
mov
sti
dec
push
movsl
xor
pop
dec
push
repz
aad
mov
or
dec
aaa
dec
into
shrl
hlt
test
and
cmpb
clc
push
dec
jmp
xor
leave
mov
out
pop
push
ss
or
ja
inc
xor
mov
mov
mov
stos
dec
call
out
outsb
cwtl
loop
daa
shlb
push
out
and
lods
xchg
movsb
mov
leave
int
out
sub
pop
test
repz
int
push
repnz
cmp
aas
cmc
inc
pop
xlat
outsl
ret
and
ja
movlps
jb
stos
jmp
mov
mov
lahf
pop
or
adc
or
bound
cmp
mov
push
lret
les
dec
add
mov
ja
jp
dec
jo
pop
adc
shll
icebp
icebp
pop
test
xchg
cmp
sarl
add
fistl
loopne
inc
inc
lret
ljmp
or
imul
in
mov
imul
shrl
loopne
sub
adc
mov
outsb
icebp
mov
jle
aad
xchg
mov
outsl
push
das
cmc
loopne
add
clc
inc
push
mov
jo
stos
pop
jae
das
xchg
mov
rcrb
lcall
xchg
mov
jg
xor
xchg
or
mov
lret
push
inc
popa
pop
lock
mov
stos
or
repz
mov
sbb
in
and
gs
inc
inc
mov
cmp
cmp
fwait
je
inc
dec
push
mov
std
pop
out
cmp
out
sub
xor
lahf
jecxz
test
mov
pop
mov
sbb
xlat
pop
sbb
lock
and
aad
push
inc
mov
pusha
lcall
push
shll
arpl
or
inc
jnp
fstp
sub
rclb
xor
aaa
xchg
pop
mov
inc
movsl
sub
pushf
dec
popf
mov
jbe
mov
call
aad
cld
cmc
lock
popf
daa
sub
int
cmpsb
sub
adc
notl
and
out
mov
ret
adc
cmp
lods
pushf
cmp
dec
adc
les
cltd
sbb
lods
mov
jbe
add
pop
cmp
rclb
xchg
in
jmp
or
or
int
dec
call
jmp
mov
push
dec
int
nop
into
clc
lahf
pop
push
in
pushf
aam
push
test
aas
sbbb
jp
jns
cmc
jno
shrl
sub
push
adc
std
mov
or
cmp
and
out
mov
clc
shll
aaa
cltd
aas
dec
cmp
dec
jge
push
lret
adc
adc
lret
xchg
fiaddl
and
dec
mov
arpl
insb
js
cmp
aaa
aaa
iret
leave
imul
dec
lods
aaa
lods
push
stos
inc
cwtl
or
mov
iret
repz
push
dec
fiaddl
sarl
loop
adc
int
adc
mov
sahf
into
es
fisubl
bnd
mov
mov
xor
gs
xchg
and
or
sub
lret
sub
jb
xlat
pop
stc
push
mov
mov
lds
scas
outsl
sahf
sub
out
call
cmp
movb
gs
mov
mov
ret
mov
jo
roll
scas
jg
loop
je
je
pop
out
aas
mov
add
test
pop
xchg
fsubr
adc
mov
dec
rorb
dec
jno
mov
insl
and
fwait
pusha
and
cs
bound
or
inc
xchg
setns
mov
jae
jne
mov
je
gs
int3
in
aas
adc
xor
fsts
mov
sbb
daa
lods
sbb
lret
xchg
sub
xor
loopne
mov
imul
loopne
bound
jo
rcrl
ret
push
popf
call
pop
jnp
mov
hlt
sahf
in
push
pop
jecxz
call
pop
addb
push
mov
cmc
loopne
push
fildll
xor
cmp
cmp
push
jne
xor
jno
and
js
sub
jns
loop
ds
dec
ret
bound
movsb
adc
jg
add
jp
les
mov
jp
sub
pop
inc
add
cmovge
sbb
mov
xor
push
dec
inc
xor
cs
cmp
cltd
jmp
dec
push
mov
xor
lret
or
adc
divb
add
jbe
adc
and
inc
sti
jg
rol
and
in
fld
jl
pop
call
jge
adc
pop
adc
cmp
movsl
or
inc
aaa
add
jmp
cli
pop
and
push
loopne
cmp
test
dec
adc
lock
loop
stc
sbb
test
lahf
lahf
enter
xchg
dec
pop
leave
cmc
and
jae
out
xchg
bound
mov
xchg
cmp
or
mov
mov
ret
mov
mov
movsb
push
out
loope
inc
or
add
mov
movsb
inc
inc
adc
and
loop
jo
and
sbb
jg
xor
cmp
rcrl
cmc
fnstcw
lahf
mov
out
shlb
jg
bnd
pushw
popa
scas
fistpll
arpl
lods
and
clc
das
xor
repz
push
xor
inc
int3
pushf
rcll
sub
movsl
outsl
mov
js
filds
and
cmp
jo
lods
xor
das
cmpsb
mov
pop
aaa
mov
and
pop
lahf
leave
sbb
and
outsb
inc
icebp
add
xlat
addl
stc
sub
fwait
stc
xchg
pop
push
movl
sbb
sub
clc
icebp
fs
ja
jmp
iret
mov
lock
ljmp
add
insb
aas
add
in
cli
or
lods
les
xlat
lahf
jne
ss
add
push
dec
call
adc
xchg
cli
push
aam
mov
xor
in
add
fwait
xchg
repz
adc
mov
mov
fdivs
push
cwtl
test
sti
arpl
out
pusha
rol
dec
daa
add
mov
mov
jge
and
push
mov
insb
fidivl
adc
ljmp
mov
js
dec
push
add
jbe
add
jns
loop
xchg
movb
pusha
xchg
add
and
jg
rorl
test
jns
mov
dec
inc
jnp
sub
jp
pop
mov
clc
ret
xor
call
aas
outsb
adc
repz
pop
aam
sti
les
add
push
add
dec
cs
loope
xor
addr16
inc
ficompl
cs
imul
lret
sbb
jo
dec
mov
pop
out
shll
in
or
test
mov
inc
ljmp
jne
decl
inc
xor
push
mov
out
jmp
js
mov
adc
imul
xor
sbb
inc
mov
jae
into
xchg
jg
bound
inc
nop
xor
push
adc
fidivrl
pop
adc
movsb
addr16
sbb
jno
into
or
nop
mov
pop
mov
adc
pop
xor
adc
cmp
pop
push
push
xchg
es
and
addr16
outsb
mov
sbb
mov
fnsave
and
pop
sbb
hlt
fidivs
lret
dec
inc
and
mov
cmp
int3
clc
ret
pop
jmp
inc
sbb
push
xchg
mov
cmpb
push
out
push
out
push
mov
xchg
xor
mov
xchg
fbld
icebp
notl
mov
ljmp
cmp
shrl
cwtl
cmc
clc
pop
outsb
insb
aas
popf
jmp
push
rorb
cltd
stc
inc
jp
std
dec
xor
adc
mov
in
push
bound
loop
ljmp
in
lea
add
stos
js
jno
icebp
not
enter
idivl
jno
mov
jle
addb
cmpsb
sbbb
dec
or
rcrl
xchg
cmpb
push
shlb
and
into
adc
sbb
push
rorb
scas
sbb
cmpsl
sub
xor
cmpsl
rorl
or
pop
fcmovnu
xchg
push
std
cmp
sti
adc
fsubl
push
jo
movsb
insl
call
ret
mov
jp
clc
and
enter
push
hlt
jp
inc
dec
nop
cmp
jle
nop
sbb
rclb
xchg
mov
cmpsb
int
pop
out
dec
pop
sub
sub
psubw
imul
les
fstps
pop
dec
out
xchg
in
clc
inc
push
push
push
leave
jmp
loopne
and
rolb
inc
sub
stc
dec
je
pop
jns
sub
loopne
sbb
add
enter
or
inc
fwait
mov
addr16
or
js
mov
xchg
cmpsb
mov
and
mov
and
dec
in
rcrb
cmp
and
fnsave
pop
sbb
ljmp
scas
add
fidivl
pop
sar
mov
mov
mov
outsb
stos
outsl
and
push
in
add
insb
mov
or
mov
mov
call
into
in
inc
fucomip
or
sub
or
sub
jge
dec
mov
sub
inc
dec
jl
sub
cmp
adc
fwait
push
cmp
test
push
enter
sub
sahf
pop
cmp
out
mov
stos
arpl
cmp
jb
lds
fucompp
lds
push
jl
in
and
movsb
enter
fcompl
scas
shrl
in
sub
mov
ljmp
hlt
leave
lds
push
mov
ficoml
and
out
lock
leave
mov
fsub
or
cmpsb
mov
arpl
cmc
push
pop
das
mov
add
jno
dec
xchg
sub
in
jae
inc
gs
out
data16
test
sbb
xchg
pushl
pop
fbstp
scas
sarl
jae
fcoml
xchg
gs
addl
or
add
test
lret
idivl
xor
pusha
ret
fildl
sub
and
xchg
jmp
push
push
imul
sarb
rorl
int
addr16
aas
push
in
inc
dec
es
out
dec
cli
or
cmp
inc
xor
lret
jne
cwtl
mov
sarb
lcall
mov
dec
mov
or
loop
dec
adc
pop
test
pop
adc
mov
arpl
pop
xor
adc
addps
idivl
xchg
xorb
push
inc
cmp
inc
ret
cli
sbb
mov
aam
les
xchg
cmp
xchg
cmpsl
test
ljmp
call
add
mov
stos
jns
jge
adc
out
test
xor
leave
cmpsl
mov
xchg
pop
mov
lods
xor
imul
jl
pop
arpl
mov
xchg
adc
sub
xchg
or
jg
xchg
lret
daa
lret
fwait
aad
iret
lock
sbbl
push
stos
mov
ror
test
scas
icebp
xchg
cmp
add
pop
ljmp
mov
cwtl
pop
push
nop
xor
jecxz
sbb
adc
mov
jl
sbb
mov
pop
xor
int3
divb
js
lea
aaa
pop
pop
add
in
rorb
add
mov
stos
test
stos
xchg
cli
push
rcrl
sbbb
jo
xor
enter
push
imul
cmp
mov
movsl
std
add
lock
sarl
imul
push
mov
mov
ret
sti
xchg
add
cmc
sub
sub
cwtl
fcoml
fstpt
push
sahf
mov
imul
jbe
jbe
mov
testb
jo
jecxz
and
pop
dec
xor
mov
pop
jne
and
jl
push
sub
loop
in
adc
cs
add
jo
sbb
cltd
mov
ficompl
sub
cmp
or
pop
imul
or
test
xchg
and
mov
or
xchg
aad
out
cmp
pop
lcall
imul
ffree
mov
popa
ja
lods
push
jg
and
out
flds
pop
push
xchg
out
push
dec
imul
repz
std
sarb
sahf
cltd
jo
movsl
push
outsb
cmp
daa
lcall
lret
sub
loope
fwait
inc
aaa
mov
and
clc
outsb
push
out
pop
negb
cmp
test
lcall
jnp
in
arpl
or
dec
jecxz
stos
adc
xor
and
clc
dec
lods
ficompl
ljmp
mov
pop
cmp
or
and
into
mov
xlat
xchg
stos
insl
jp
lods
dec
or
inc
ret
dec
scas
cmpsb
pop
mov
adc
pop
jge
mov
aad
test
xor
sti
jecxz
fsubr
aam
cli
es
sbb
outsl
call
ds
cmc
in
sbb
jbe
dec
outsl
jl
sar
pop
pop
sti
in
jo
subb
push
clc
add
rolb
loop
push
mov
dec
adc
pop
or
sbb
mov
cmp
push
stos
and
pushf
mov
push
movsb
pop
inc
and
mov
sbbl
out
ds
mov
jb
push
dec
mov
sahf
jl
enter
ret
jle
adc
test
jmp
lret
cmp
mov
lea
lods
pop
fistl
sti
rorb
xor
sbb
xor
push
push
jb
mov
inc
xor
test
bound
push
loopne
hlt
xorb
cli
fyl2x
cmpsl
push
mov
sbb
cmp
icebp
ja
sub
cmp
mov
dec
adc
mov
out
inc
mov
adc
or
and
pop
sarl
add
xor
xchg
jge
dec
fistpl
lock
ljmp
outsl
cmp
mov
or
shll
ss
pop
push
loopne
ss
sub
cmpsl
sub
outsb
int3
add
ljmp
fimuls
push
cmpsl
add
xorl
mov
daa
mov
out
stos
xor
mov
cmp
mov
cmp
ljmp
cmp
xchg
outsl
shll
cwtl
xlat
sbb
sbb
jecxz
shrl
and
pop
lret
incl
in
int
xor
ja
pop
popa
lret
adc
sub
add
and
sbb
xor
and
adc
loope
fists
lahf
jp
xchg
imul
cltd
inc
and
subb
daa
call
dec
pop
daa
xchg
addb
out
adc
xchg
shrb
pop
aas
les
jno
jle
mov
mov
adc
ret
push
inc
mov
iret
or
and
js
mov
dec
add
jmp
jp
sbb
data16
mov
mov
mov
push
push
xchg
dec
das
sbb
sub
mov
cwtl
in
or
inc
fisttps
rcl
adc
stos
cmp
fldl
addb
mov
pop
mov
ja
pop
loop
and
sub
cmpsl
xchg
sbbb
movl
fstpl
mov
mov
sbb
and
push
mov
popf
cmc
subl
xor
dec
jb
loop
xchg
push
dec
push
call
xor
pop
push
add
xchg
mov
xchg
aam
jne
jl
mov
xor
inc
mov
dec
cli
imul
loopne
and
adc
sbb
xor
mov
int3
or
ficoms
clc
out
push
lods
mov
test
hlt
ljmp
lds
fcoml
mov
jb
sti
fs
sub
push
hlt
fnsave
xchg
push
insl
sbb
ficoms
lahf
push
das
and
cmp
push
pushf
stc
ret
ja
rorl
repnz
push
pop
pop
dec
jl
xchg
xchg
push
jmp
cmpsl
push
push
ret
cmp
shll
shl
dec
xor
shlb
mov
mov
cmp
adc
std
mov
and
push
add
cs
inc
dec
jle
stos
aam
fmuls
popf
ja
popf
mov
cmp
cmpsb
rcrb
test
out
xchg
pop
and
nop
rclb
xor
or
lock
shrb
jbe
lods
adc
ds
pop
out
push
mov
ret
sbb
das
movsl
jnp
repnz
lcall
insb
push
xor
pop
xchg
data16
movsb
test
push
xchg
loopne
stc
into
xor
mov
inc
mov
cmp
sbb
into
es
test
add
push
jne,pn
add
loope
loope
push
scas
out
pusha
fsubrs
fistps
xchg
std
cmpl
outsl
enter
cmp
jno
int
or
scas
clc
int3
adc
push
repz
add
mov
inc
ret
xor
adc
sub
loopne
inc
jo
lods
movsb
sub
adc
cld
mov
dec
pop
sahf
xchg
rclb
fcmovnb
std
ja
hlt
mov
int
push
xchg
lods
xor
sub
pop
ljmp
jmp
fstps
jmp
inc
arpl
outsb
test
ret
into
xchg
stos
or
pop
xor
mov
push
negb
gs
fisubs
and
adc
lret
ss
add
and
and
pop
mov
repnz
sbb
sbbl
mov
mov
loop
ljmp
fildll
jbe
not
cmp
stos
std
sub
outsb
dec
inc
mov
imul
ss
cmp
loopne
dec
ja
or
bound
push
imul
stc
mov
aam
scas
cmp
add
jg
xor
jns
sub
mov
test
or
push
icebp
push
pusha
lock
sub
fwait
das
frstor
sbb
fcmovne
lods
push
sub
in
pop
fwait
ljmp
aad
into
push
xor
arpl
bound
jae
nop
ud2
inc
es
cld
dec
pop
push
mov
xor
rep
xor
sub
mov
negb
test
aad
mov
iret
fnstcw
pop
push
or
mov
rcrb
fwait
jmp
into
das
movsb
and
bnd
jge
xchg
mov
pop
in
xchg
inc
in
cld
dec
stos
mov
dec
push
push
mov
mov
mov
push
cmp
sahf
cltd
mov
movsl
test
movsb
outsl
outsl
mov
scas
in
nop
mov
daa
cmp
mov
fildl
jmp
jne
mov
inc
cmp
mov
addl
aad
jo
dec
push
mov
js
jno
cmp
pop
push
gs
fldenv
sub
push
jmp
mov
pminub
xchg
push
fbstp
scas
daa
cmp
jb
mov
mov
or
push
jecxz
out
mov
clc
popa
call
test
repnz
xchg
push
add
xorb
in
in
xlat
adc
and
cli
shr
daa
aad
and
mov
and
sbb
hlt
mov
push
adc
sub
sbb
xchg
mov
pop
jmp
iret
jp
fdivl
sub
inc
dec
xchg
arpl
int
lods
iret
into
cmp
push
out
xor
adc
xor
pushf
adc
and
out
outsl
inc
mov
add
dec
dec
inc
int3
inc
orb
fiadds
repnz
pop
sub
or
cmp
cs
add
repz
ja
outsl
pop
jecxz
imul
in
fnstsw
test
xor
inc
arpl
mov
sbb
sub
aas
push
jp
xchg
push
sbb
jo
add
loopne
fiaddl
jbe
pop
inc
ret
inc
jmp
xlat
mov
jne
sarl
sbb
pop
in
imul
divl
pop
int3
cltd
movsl
fmulp
data16
loope
or
fidivs
ss
mov
fsubl
jecxz
dec
jmp
call
sub
iret
inc
jns
fiadds
or
lock
imul
jle
stos
mov
lret
inc
or
testl
andl
cmpb
xchg
pusha
scas
push
inc
insl
xor
hlt
call
push
lahf
inc
outsb
cmp
mov
aas
dec
loopne
daa
jecxz
das
shll
sub
sti
mov
and
js
sub
enter
jp
xchg
test
mov
or
cmp
pushf
mov
sti
fldl
aas
leave
push
out
sbb
xchg
cwtl
add
push
xor
add
adc
mov
sub
jns
mov
pushf
xor
mov
test
and
in
ja
test
mulb
pop
jns
insb
pop
xchg
mov
mov
add
mov
nop
sbbb
pop
into
in
jo
bound
and
or
lods
pushf
sahf
cmp
inc
add
popa
scas
adc
cli
sub
cltd
jb
xor
jg
lea
insl
push
mov
jg
pop
test
aam
add
fisubl
inc
pop
mov
xchg
mov
test
sarb
mov
aas
lea
orl
into
pop
jmp
and
jge
mov
sbb
repnz
cmp
popf
insb
mov
out
lock
mov
int
add
aad
adc
adc
rorb
dec
test
stos
cmp
xor
push
cmp
pop
cmpxchg
dec
fcmovb
sti
xchg
stos
inc
add
fisubrl
repz
push
jb
and
dec
cmp
and
pusha
pop
test
add
sbb
iret
repz
adc
pusha
mov
stos
daa
in
lods
lods
lret
or
push
or
xlat
push
fcoml
outsb
xor
inc
mov
mov
xchg
popa
mov
dec
push
sti
jns
or
addr16
enter
popf
out
inc
push
sub
sti
cli
lods
adc
imul
or
loopne
pop
enter
adc
jge
jmp
and
lahf
mov
or
std
es
test
sub
fldl
xor
ds
cmp
daa
xchg
add
or
sahf
cltd
fs
or
rcrb
xlat
js
iret
pop
lock
arpl
scas
mov
cwtl
jmp
pop
mov
mov
push
addr16
outsb
out
data16
adcl
push
add
add
stos
fisttps
mov
pop
movsb
jns
add
mov
or
cmc
je
pop
jmp
in
test
push
push
mov
cwtl
aas
repnz
sub
or
ret
push
jg
xchg
dec
mov
cs
push
out
mov
jbe
cmp
ljmp
lds
xor
add
mov
call
test
or
loopne
xchg
popf
inc
ret
std
mov
mov
lods
insb
repnz
cbtw
or
fstl
add
inc
cwtl
mov
ret
iret
inc
add
fisttps
sbb
movsb
imul
mov
and
or
pop
unpckhps
sbb
xchg
stc
push
je
into
scas
add
pop
or
lahf
leave
shlb
xchg
add
std
sub
ficoms
and
lea
pop
jle
lods
movsb
movsl
stc
jmp
jb
std
lahf
push
cmp
out
pusha
daa
lods
hlt
cmp
test
jnp
mov
out
bound
lods
lret
iret
stos
js
adcl
repnz
outsb
aad
ret
in
loopne
mov
std
jnp
jmp
xchg
adc
icebp
ja
mov
sub
sub
imul
pushf
decl
jne
loopne
lahf
jbe
dec
push
sbb
sbb
jecxz
inc
stc
mov
dec
mov
or
xor
fwait
mov
or
mov
or
mov
data16
dec
out
sbb
ficoms
adc
orl
cltd
aas
pop
dec
aaa
call
xchg
out
push
aas
and
jae
pop
push
jbe
js
xor
and
mov
js
xorb
daa
insb
jae
xchg
shl
mov
jno
push
repnz
mov
adc
clc
test
imul
lcall
sbb
into
and
int3
push
adc
dec
sub
sbb
divb
adc
lret
dec
aam
in
stos
pop
in
insb
mov
xor
mov
pushf
icebp
push
mov
cmp
mov
adc
int
pop
imul
cmpsb
jge
mov
sbbb
and
mov
shll
ret
cmove
or
cmp
in
xchg
scas
and
test
insb
inc
xor
sub
xchg
push
push
scas
scas
fidivs
sub
mov
stos
cmp
js
push
dec
cmp
fdivrp
in
mov
xor
nop
scas
inc
repnz
inc
mov
lea
mov
ret
mov
subb
jnp
jg
sbb
cmpsl
subb
sub
mov
jae
lcall
out
enter
mov
call
aas
fdivr
pop
mov
dec
cwtl
push
inc
fbld
push
sub
shll
jge
pop
insb
push
xchg
dec
sbb
jb
pop
sbb
sub
fbld
adc
pop
sub
cmp
xchg
mov
xor
mov
xchg
in
xor
dec
xchg
out
js
cmovns
pop
lods
inc
aas
xchg
sbb
hlt
pop
xor
ffreep
and
aad
dec
mov
int
sub
xchg
lret
xchg
sbb
out
popa
popa
sahf
cmp
stc
mov
jle
mov
call
gs
sbb
test
mov
les
arpl
push
ss
iret
and
xchg
data16
jbe
xchg
aad
into
sbb
sub
jne
inc
subl
add
aas
loop
jno
cmp
jnp
rcrl
les
xor
inc
xor
into
aam
push
pop
jg
mov
pop
fmull
imul
push
repnz
jmp
and
ds
mov
popf
add
pop
cli
arpl
sub
dec
jae
mov
mov
lcall
in
loope
in
xchg
inc
shl
int
xor
dec
imul
sarl
aam
xor
inc
add
aaa
mov
lahf
mov
lods
push
rcr
pop
pusha
jne
ror
sbb
cmp
xlat
into
lea
int
inc
mov
scas
pop
idiv
ret
idivb
jge
cli
jge
adc
sbb
nop
mov
mov
and
pusha
lea
fistl
mov
sub
inc
xchg
fisubl
or
mov
mov
jns
scas
aam
aaa
nop
add
lods
shrb
mov
imul
push
add
jnp
lds
sbb
push
rcll
xchg
cld
inc
lcall
sbb
jg
insb
xlat
fwait
test
in
jb
shll
pushf
sub
ret
cld
loop
pop
inc
adc
jns
xchg
push
popl
sarb
adc
std
push
xchg
movsb
in
mov
fldl
scas
xchg
outsl
mov
fcmovbe
jmp
sbb
fmuls
pop
cmp
push
out
idivl
jno
scas
into
addl
int
adc
jo
jae
arpl
rsqrtps
jno
xor
mov
imul
push
clc
fcomi
leave
push
aas
imul
dec
sbb
adc
or
pop
in
sbb
imul
fcmovnbe
imul
push
cmp
fsubrl
in
pop
nop
jbe
loop
incb
fbld
sub
lahf
es
fs
mov
xor
and
inc
inc
mov
or
fwait
call
rol
lods
pushf
sbb
jge
push
mov
sub
mov
ljmp
push
fs
js
dec
ficomps
sub
in
mov
lea
inc
add
jg
sub
inc
and
sub
cmp
push
cmc
sbb
xor
jno
inc
jmp
jo
das
sti
out
pop
and
jns
enter
pop
and
xchg
pop
ret
mov
mov
cld
jnp
push
pop
jmp
inc
js
xchg
or
jg
xchg
mov
mov
dec
mov
lods
ret
mov
dec
mov
mov
push
mov
pusha
jnp
dec
movsl
lahf
push
inc
aad
ret
xor
and
js
int
addl
mov
add
popa
in
sarl
mov
pmaxsw
or
pop
sub
faddl
jge
adc
jo
xor
mov
mov
cmp
cli
dec
insl
lcall
mov
roll
jmp
mov
pop
jns
and
clc
jo
scas
xchg
sbb
cltd
ljmp
sub
push
cmp
cmp
mov
insb
push
aad
cmp
mov
iret
cld
movsl
add
filds
mov
stos
mov
mov
jp
mov
jg
sbb
pop
gs
xor
stos
lret
cmc
addl
inc
imul
movsb
iret
sarw
xchg
or
in
dec
rolb
sahf
sub
fs
adc
test
xor
mov
das
mov
icebp
loopne
cmp
pop
add
sbb
mov
shr
dec
int
sub
sahf
bound
js
inc
xor
jb
imul
movsb
inc
ret
inc
ret
cli
leave
lret
popa
ficoms
xor
push
jno
jnp,pt
imul
sub
jo
jge
cmp
insl
fsts
pushf
sbb
sahf
or
cmpb
pop
sub
sbb
pop
add
fbld
jnp
not
loopne
cmp
mov
inc
push
xchg
jno
dec
stos
cmpsb
clc
push
and
cmp
insb
xor
push
sbb
and
dec
hlt
fisttpl
lret
cmp
insl
call
sub
sub
ret
jno
mov
dec
adc
pop
push
clc
cmpsl
cmp
int
aas
enter
sub
std
jb
mov
iret
ja
or
aaa
bound
hlt
adc
aas
dec
cld
das
fmull
repnz
push
jb
ja,pn
jnp
push
loope
aam
xor
inc
scas
mov
pop
cmp
pop
or
and
loopne
xor
bound
stos
leave
push
call
inc
stos
daa
add
xchg
jmp
and
sbb
pop
or
nop
out
enter
jmp
sbbl
loopne
mov
loope
add
sub
push
fucomi
jns
xchg
loop
and
jge
jecxz,pt
fidivrs
imul
inc
nop
sub
adc
leave
push
jl
jo
xchg
jmp
sti
push
out
add
lods
mov
sahf
out
das
mov
adc
or
jmp
inc
stos
mov
std
cli
negl
or
iret
lods
hlt
jmp
je
dec
test
test
dec
ljmpw
jmp
or
mov
sbb
xlat
cmpl
pop
cmp
inc
dec
ja,pt
adc
pop
push
and
add
test
xor
jnp
xor
or
cmp
in
out
push
shlb
mov
inc
inc
test
adc
xlat
dec
push
mov
fdivr
mov
mov
jno
mov
ljmp
jecxz
jnp
mov
jae
adc
popa
inc
xor
popa
icebp
cmp
shlb
sbb
and
sbb
scas
fldl
mov
cmp
divb
cld
push
cmpl
cs
imul
push
jmp
cltd
mov
xor
lsl
dec
jl
loope
stos
or
push
cmp
pop
sbb
adc
dec
outsb
subl
mov
lock
mov
jg
lods
fnstsw
lret
jo
inc
sahf
mov
imul
mov
cmp
pop
into
mov
shr
xchg
jle
cmpsl
add
push
test
or
bound
xorl
nop
cmp
sub
mov
xor
mov
push
lahf
jmp
jge
scas
daa
mov
cltd
pushf
add
lret
adcb
sti
imul
add
mov
inc
pop
cli
sbb
js
out
ss
sbb
jge
repnz
notl
daa
and
sub
inc
xchg
add
outsb
cwtl
out
mov
sti
ret
idivb
iret
inc
lahf
insb
lahf
mov
das
xlat
mov
fcompl
dec
xor
xchg
mov
cmpsb
jns
push
mov
repz
leave
sbb
adc
orl
daa
push
pop
cltd
cmpsb
xchg
mov
in
insw
in
in
mov
cmpsb
lcall
xor
dec
psubb
push
dec
aam
xchg
aad
jae
push
sbb
lea
pushf
xor
test
leave
jecxz
push
cmp
fwait
jl
lea
adc
xchg
bound
out
je
nop
aas
mov
lea
mov
das
jmp
cmp
lahf
push
or
daa
or
cmp
and
cmp
xor
hlt
cmp
in
inc
fcompl
xor
dec
lcall
cmpsl
das
xchg
push
adc
mov
stc
sahf
adc
rcll
ja
or
sub
push
cmpsl
jne
cmp
mov
lret
daa
sub
inc
sti
pop
mov
pusha
mov
fsubs
add
test
imul
adc
gs
or
add
cli
sbb
jns
cmp
jno
push
adc
mov
xor
cwtl
mov
cmc
lods
test
outsb
dec
imul
std
sbb
out
in
or
loope
jb
mov
in
add
jl
icebp
xor
pop
push
dec
add
mov
sbb
jle
or
stos
jmp
stc
xchg
int3
xor
popa
pop
adc
mov
outsb
pop
fisttpl
in
mov
pop
ljmp
jno
jecxz
das
ret
lcall
jnp
sub
push
fcmovbe
mov
pop
cmpsl
dec
pusha
stos
mov
sub
cmp
cltd
adc
lahf
imul
cmp
mov
ret
mov
in
mov
les
xor
lods
sub
jns
jle
js
jle
cmc
movsb
jno
loop
in
inc
mov
and
inc
mov
cmp
aam
cmc
push
add
stc
icebp
mov
lcall
push
push
inc
fbld
mov
dec
in
xchg
stos
mov
test
test
in
add
stos
and
xchg
dec
imull
sbb
inc
mov
inc
ljmp
in
jecxz
jl
test
iret
pushl
dec
pop
pop
dec
dec
push
dec
inc
dec
dec
mov
xchg
sbb
leave
out
dec
cmp
dec
orb
sbb
lods
je
add
inc
dec
lods
arpl
xor
sahf
dec
xchg
cltd
mov
popf
xchg
je
add
inc
dec
lods
je
add
inc
dec
lods
je
add
inc
dec
lods
je
add
inc
dec
lods
fstps
adc
outsl
imul
stos
lods
in
cmp
outsl
sbb
cmc
lret
add
inc
dec
lods
je
add
inc
dec
lods
je
add
inc
dec
lods
je
add
inc
dec
lods
je
add
inc
dec
lods
je
add
inc
dec
lods
je
add
inc
dec
lods
je
add
inc
dec
lods
je
add
inc
dec
lods
je
add
inc
dec
lods
je
add
inc
dec
lods
je
add
inc
dec
lods
je
add
inc
dec
lods
je
add
inc
dec
lods
je
add
inc
dec
lods
je
add
inc
dec
lods
je
add
inc
dec
lods
je
add
inc
dec
lods
je
add
inc
dec
lods
je
add
inc
dec
lods
je
add
inc
dec
lods
je
add
inc
dec
lods
je
add
inc
dec
lods
je
add
inc
dec
lods
je
add
inc
dec
lods
je
add
inc
dec
lods
je
add
inc
dec
lods
je
add
inc
dec
lods
je
add
inc
dec
lods
je
add
inc
dec
lods
je
add
inc
dec
lods
je
add
inc
dec
lods
aaa
pop
pushf
fsubs
.byte
.byte
