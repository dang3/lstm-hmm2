add
inc
add
push
push
je
imul
or
push
imul
jmp
sbb
inc
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loopne
add
loopne
add
loopne
add
loopne
add
loope
add
loope
add
loope
add
loope
add
loope
add
loopne
add
loopne
add
mov
add
push
inc
and
add
mov
and
mov
add
pop
ret
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
push
add
mov
cmpl
jne
push
push
call
mov
cmpl
jne
xor
mov
jmp
mov
mov
mov
mov
mov
xor
mov
add
mov
lea
mov
mov
mov
mov
mov
mov
inc
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
add
pop
ret
mov
mov
ret
mov
push
push
add
mov
mov
call
mov
cmpl
jne
xor
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
pop
pop
ret
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
ret
mov
push
push
push
push
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
cmp
jne
mov
call
mov
mov
mov
mov
mov
add
jmp
add
cmp
jne
mov
call
mov
mov
add
mov
mov
cmp
jne
mov
mov
call
test
jne
xor
mov
pop
pop
pop
pop
pop
pop
ret
lea
push
push
push
push
add
mov
mov
mov
mov
mov
mov
mov
cmp
jb
mov
mov
add
mov
add
cmp
jb
cmp
jne
mov
mov
add
mov
mov
sub
mov
cmpl
jne
mov
call
jmp
mov
mov
add
mov
add
cmp
jne
mov
mov
sub
jmp
mov
add
mov
mov
mov
mov
add
sub
mov
sub
mov
mov
lea
mov
call
test
jne
xor
jmp
mov
jmp
mov
mov
mov
mov
cmp
jne
xor
add
pop
pop
pop
pop
ret
nop
push
push
push
mov
mov
cmp
jge
mov
jmp
add
and
mov
push
push
push
push
call
mov
mov
test
je
mov
mov
call
test
jne
push
push
mov
push
call
xor
mov
pop
pop
pop
ret
nop
push
push
push
push
mov
mov
mov
movl
push
push
push
push
call
mov
mov
test
jne
add
and
mov
push
push
push
push
call
mov
cmpl
je
mov
mov
call
test
jne
push
push
mov
push
call
xor
mov
pop
pop
pop
pop
ret
nop
push
push
push
push
add
mov
mov
movl
xor
mov
mov
add
mov
mov
mov
jmp
mov
mov
mov
mov
mov
cmp
jb
mov
mov
add
cmp
ja
cmp
jae
mov
mov
mov
mov
add
cmp
jbe
mov
push
push
mov
mov
push
call
test
jne
movl
mov
call
mov
mov
mov
cmp
jne
xor
mov
cmpl
je
mov
mov
mov
sub
mov
add
pop
pop
pop
pop
ret
mov
push
push
push
push
add
mov
mov
lea
lea
lea
mov
mov
and
mov
add
add
and
mov
mov
mov
mov
sub
mov
mov
mov
jmp
mov
mov
mov
mov
mov
add
mov
mov
cmp
jae
mov
mov
mov
cmp
jbe
mov
mov
mov
cmp
jae
push
push
mov
sub
push
mov
push
call
test
jne
xor
mov
jmp
mov
mov
mov
mov
cmp
jne
add
pop
pop
pop
pop
ret
nop
push
push
push
push
add
mov
lea
lea
lea
mov
mov
add
and
mov
add
and
mov
mov
mov
mov
sub
mov
mov
mov
jmp
mov
mov
mov
mov
mov
add
mov
mov
cmp
jae
mov
mov
mov
cmp
jbe
mov
mov
mov
cmp
jae
push
mov
sub
push
mov
push
call
test
jne
movl
mov
mov
mov
mov
cmp
jne
add
pop
pop
pop
pop
ret
mov
push
push
push
push
add
mov
mov
mov
mov
add
and
mov
mov
jmp
mov
cmp
jg
mov
mov
mov
mov
call
cmpl
je
mov
mov
add
mov
mov
sub
mov
cmpl
jne
mov
call
jmp
mov
mov
mov
cmp
jne
mov
mov
call
cmpl
je
lea
mov
mov
call
cmpl
jne
lea
mov
mov
call
xor
mov
add
pop
pop
pop
pop
ret
mov
push
push
push
push
add
mov
mov
mov
lea
mov
add
and
mov
mov
jmp
mov
mov
mov
cmp
je
mov
cmp
jne
mov
cmp
jne
mov
cmp
jle
mov
mov
sub
mov
mov
mov
add
lea
call
cmpl
je
lea
lea
mov
call
cmpl
jne
lea
mov
mov
call
mov
xor
mov
jmp
lea
mov
mov
call
cmpl
je
lea
lea
mov
call
cmpl
jne
lea
mov
mov
call
mov
xor
mov
jmp
mov
mov
cmp
jne
mov
cmp
jg
mov
mov
mov
call
mov
cmpl
je
mov
mov
mov
add
mov
mov
mov
sub
mov
cmpl
jne
mov
call
jmp
mov
xor
mov
add
pop
pop
pop
pop
ret
nop
push
add
mov
lea
and
mov
add
and
mov
mov
cmp
jbe
mov
mov
sub
mov
call
lea
mov
mov
call
mov
test
je
lea
mov
mov
call
mov
mov
mov
mov
cmpl
je
lea
mov
call
jmp
xor
mov
add
pop
ret
mov
push
mov
push
xor
push
push
pushl
mov
push
call
cmpb
je
push
call
mov
call
mov
call
mov
call
push
push
call
mov
cmpl
je
mov
mov
xor
mov
inc
cmp
jne
movl
mov
mov
mov
mov
mov
mov
mov
mov
movb
xor
pop
pop
pop
mov
push
cmpb
je
push
call
ret
jmp
jmp
mov
pop
pop
ret
nop
push
mov
add
cmpb
je
xor
push
push
pushl
mov
cmpb
je
push
call
movb
mov
push
call
xor
mov
mov
mov
jmp
push
push
mov
mov
push
call
mov
mov
mov
mov
cmp
jne
mov
call
mov
call
mov
call
mov
mov
cmpl
je
mov
mov
mov
mov
push
call
mov
mov
cmpl
jne
xor
pop
pop
pop
mov
push
cmpb
je
push
call
push
call
ret
jmp
jmp
pop
pop
pop
ret
nop
push
add
cmp
jne
mov
mov
mov
mov
mov
cmp
jg
cmp
jne
test
jns
add
sar
mov
xor
mov
jmp
test
jns
add
sar
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
pop
ret
lea
push
push
mov
mov
mov
jmp
mov
mov
cmp
jb
mov
add
cmp
jb
mov
mov
mov
mov
cmp
jne
movl
xor
mov
mov
pop
pop
ret
mov
push
push
mov
sub
lea
mov
cmp
jl
mov
movl
mov
call
pop
pop
ret
cmp
jl
mov
or
mov
mov
mov
pop
pop
ret
incl
mov
sub
mov
and
sub
add
call
ret
mov
cmp
jl
or
mov
add
call
ret
cmp
jl
mov
or
mov
add
andl
ret
push
push
push
mov
sub
mov
mov
and
cmp
je
movl
mov
and
sub
mov
xor
test
je
movl
testb
je
mov
sub
mov
sub
mov
mov
cmp
je
movl
mov
call
add
mov
pop
pop
pop
ret
push
push
push
mov
xor
mov
test
je
and
add
add
mov
test
jne
mov
mov
call
mov
mov
add
add
andl
mov
pop
pop
pop
ret
lea
push
push
push
push
add
mov
mov
xor
mov
call
mov
cmpl
je
mov
mov
mov
mov
add
mov
lea
sub
cmp
jg
mov
sub
mov
sub
cmp
jge
mov
mov
sub
add
mov
mov
call
jmp
mov
mov
sub
lea
call
mov
test
je
mov
sub
mov
call
mov
mov
mov
add
mov
add
cmp
jbe
lea
sub
call
mov
mov
call
mov
mov
add
pop
pop
pop
pop
ret
push
push
add
mov
mov
mov
mov
mov
mov
add
sub
mov
cmp
jg
mov
test
jns
add
sar
mov
mov
mov
cmpl
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
cmp
jl
mov
mov
call
test
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
pop
pop
ret
nop
cmpl
jle
cmpl
jge
movl
jmp
mov
or
mov
mov
mov
add
call
xor
mov
xor
mov
ret
mov
push
push
push
add
mov
lea
movsl
movsl
mov
call
lea
mov
mov
call
mov
test
jne
xor
jmp
mov
cmp
jae
call
sub
add
mov
add
mov
add
cmp
jae
call
add
mov
add
cmp
jne
sub
mov
call
subl
mov
mov
mov
mov
mov
add
pop
pop
pop
ret
lea
push
add
mov
mov
lea
call
cmpl
je
mov
call
test
jne
xor
jmp
mov
pop
pop
pop
ret
nop
push
push
add
mov
mov
mov
lea
mov
call
cmpl
je
mov
call
test
jne
xor
jmp
mov
pop
pop
pop
pop
ret
lea
push
mov
xor
mov
test
jns
add
sar
cmp
jg
mov
mov
mov
cmpl
jne
inc
cmp
jne
mov
pop
ret
lea
push
push
push
push
add
mov
lea
mov
mov
mov
mov
mov
cmp
jle
mov
mov
mov
mov
cmp
jle
mov
mov
mov
mov
mov
mov
cmp
jg
mov
mov
mov
cmp
je
mov
mov
jmp
cmp
jg
mov
call
mov
cmpl
jne
mov
call
test
jne
xor
mov
jmp
cmp
jg
sub
cmpl
jge
add
xor
mov
mov
mov
add
mov
or
mov
mov
mov
add
mov
incl
sub
add
jmp
mov
call
mov
mov
mov
sub
cmp
jl
mov
add
xchg
call
jmp
mov
mov
cmp
jne
mov
mov
mov
mov
add
mov
mov
andl
mov
mov
mov
or
mov
mov
mov
add
mov
incl
sub
add
mov
add
pop
pop
pop
pop
ret
push
mov
add
push
mov
cmpb
jne
call
test
je
cmp
jle
xor
mov
jmp
xor
push
push
pushl
mov
cmpb
je
push
call
add
and
cmp
jge
mov
cmp
jg
mov
test
jns
add
sar
mov
mov
mov
cmpl
je
mov
add
mov
mov
andl
mov
mov
mov
mov
cmp
jne
mov
xor
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
or
mov
mov
mov
add
mov
incl
sub
add
call
jmp
cmp
jg
sub
cmpl
jge
add
xor
mov
mov
mov
add
mov
or
mov
mov
mov
add
mov
incl
sub
add
call
jmp
mov
call
mov
xor
pop
pop
pop
mov
push
cmpb
je
push
call
ret
jmp
jmp
mov
pop
mov
pop
ret
nop
push
mov
add
push
mov
xor
mov
cmpb
jne
call
test
jne
movl
movl
jmp
xor
push
push
pushl
mov
cmpb
je
push
call
mov
mov
sub
mov
mov
mov
test
jne
movl
jmp
decl
mov
and
sub
sub
test
je
mov
sub
mov
cmp
jl
test
je
movl
jmp
mov
sub
mov
mov
cmp
je
movl
jmp
add
mov
mov
mov
call
and
mov
add
mov
mov
cmp
jne
sub
add
cmpl
jle
call
xor
mov
call
jmp
mov
mov
test
je
and
cmp
jge
movl
jmp
mov
orl
jmp
mov
mov
mov
cmpl
je
mov
cmpl
je
mov
cmpl
jge
movl
jmp
mov
mov
add
mov
call
mov
mov
call
mov
mov
xor
pop
pop
pop
mov
push
cmpb
je
push
call
ret
jmp
jmp
mov
pop
mov
pop
ret
mov
push
push
push
push
add
mov
add
and
cmp
jge
mov
sub
mov
mov
mov
and
mov
add
mov
cmp
jne
mov
jmp
cmp
jle
mov
sub
mov
cmp
jne
sub
add
cmpl
jge
add
sub
mov
jmp
mov
mov
testb
jne
mov
mov
mov
add
mov
call
cmp
jl
mov
add
mov
or
mov
mov
mov
add
call
jmp
mov
jmp
mov
sub
mov
cmp
jne
cmp
jg
sub
add
cmpl
jge
mov
add
add
xor
mov
mov
sub
add
mov
mov
and
or
mov
mov
mov
jmp
call
mov
add
mov
mov
testb
jne
mov
mov
mov
mov
cmp
jle
add
mov
sub
jmp
mov
call
sub
cmp
jl
mov
add
mov
call
jmp
add
mov
add
mov
mov
andl
jmp
mov
mov
test
je
and
add
mov
mov
mov
call
test
je
mov
add
mov
jmp
xor
jmp
mov
sub
add
mov
mov
and
or
mov
mov
mov
add
pop
pop
pop
pop
ret
nop
push
mov
add
push
push
mov
mov
cmpb
jne
call
test
jne
xor
mov
jmp
xor
push
push
pushl
mov
cmpb
je
push
call
mov
mov
call
test
je
mov
jmp
mov
call
mov
mov
sub
mov
and
sub
cmp
jge
mov
cmpl
je
mov
mov
xchg
call
mov
call
mov
mov
xor
pop
pop
pop
mov
push
cmpb
je
push
call
ret
jmp
jmp
mov
pop
pop
pop
pop
pop
ret
lea
push
push
mov
test
jle
mov
call
mov
cmpl
jne
mov
call
jmp
xor
mov
mov
pop
pop
ret
lea
push
test
je
call
mov
test
je
mov
call
jmp
xor
mov
pop
ret
mov
test
je
test
je
push
mov
call
pop
or
je
mov
ret
mov
jmp
mov
mov
call
or
jne
ret
mov
jmp
test
je
push
mov
call
pop
or
je
mov
ret
lea
mov
call
ret
push
push
mov
mov
and
cmpl
je
mov
mov
call
test
jne
call
mov
jmp
cmp
ja
xor
mov
mov
xor
mov
mov
call
pop
pop
ret
mov
and
mov
jmp
ret
push
mov
call
mov
pop
ret
push
push
mov
mov
mov
cmp
ja
je
sar
js
rep
mov
and
rep
pop
pop
ret
lea
lea
sar
js
std
rep
mov
and
add
add
rep
cld
pop
pop
ret
push
push
push
push
add
mov
mov
mov
lea
jmp
mov
push
call
mov
mov
mov
test
je
cmp
jbe
mov
cmpb
jne
mov
cmpb
jne
addl
jmp
xor
mov
mov
jmp
mov
cmpb
jne
mov
push
call
mov
jmp
mov
push
call
mov
mov
sub
add
mov
mov
mov
mov
test
je
cmp
jne
mov
cmpb
je
mov
push
call
mov
jmp
mov
push
call
mov
mov
sub
add
mov
mov
mov
cmpb
ja
mov
mov
call
mov
mov
mov
mov
mov
xor
jmp
mov
cmpb
jne
mov
push
call
mov
jmp
mov
push
call
mov
mov
cmp
jae
mov
mov
mov
mov
incl
inc
mov
cmp
jb
mov
mov
test
je
cmp
jne
mov
cmpb
je
mov
push
call
mov
jmp
mov
push
call
mov
mov
cmp
jae
mov
mov
mov
mov
incl
inc
mov
cmp
jb
mov
cmpb
ja
mov
mov
mov
add
pop
pop
pop
pop
ret
push
push
add
mov
mov
mov
call
test
jne
push
lea
push
push
call
mov
lea
mov
call
jmp
call
mov
mov
mov
call
mov
test
je
cmpl
je
dec
jmp
add
pop
pop
ret
lea
sub
fistpll
fwait
pop
pop
ret
mov
push
push
mov
xor
mov
cmp
jb
cmp
ja
and
cmp
jne
mov
call
mov
test
jne
mov
call
mov
test
je
mov
call
jmp
cmp
je
mov
call
mov
pop
pop
ret
mov
xor
mov
inc
xchg
call
ret
push
mov
mov
mov
shl
mov
mov
sar
js
rep
mov
and
rep
pop
ret
nop
push
push
push
mov
push
test
je
xor
xor
mov
mov
inc
cmp
je
mov
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
jne
mov
inc
cmp
je
cmp
je
test
je
jmp
test
je
sub
cmp
ja
cmp
ja
lea
add
add
mov
inc
test
jne
dec
je
test
jge
jmp
inc
jmp
neg
jle
js
pop
sub
jmp
inc
mov
inc
jmp
mov
mov
inc
test
je
cmp
jb
sub
sub
cmp
jbe
sub
cmp
ja
add
cmp
ja
shl
add
mov
inc
test
jne
dec
jne
neg
pop
xor
mov
pop
pop
pop
ret
lea
jmp
mov
push
xor
push
call
cmp
jne
push
call
and
cmp
je
cmp
jne
mov
mov
pop
ret
nop
push
mov
add
movzwl
mov
lea
push
push
push
push
push
call
test
jne
xor
push
push
pushl
mov
movl
lea
push
lea
push
push
push
push
mov
push
call
xor
pop
pop
pop
mov
push
mov
push
call
ret
jmp
jmp
mov
and
mov
and
or
mov
mov
pop
ret
add
inc
push
push
inc
push
inc
pop
inc
outsl
jb
popa
outsb
fs
inc
gs
jo
imul
push
dec
popa
jae
push
popa
insb
jne
add
add
fninit
fldcw
ret
mov
test
je
mov
mov
call
ret
cmpb
jbe
push
push
push
push
call
ret
nop
cmpb
je
push
push
push
push
push
push
push
call
add
pop
ret
lea
push
push
push
push
call
add
pop
ret
lea
cmpb
jbe
push
push
jmp
ret
lea
test
je
mov
cmpb
je
cmpb
jne
movsbl
inc
inc
jmp
add
add
ret
mov
cmpb
jbe
push
push
push
call
push
push
push
push
push
call
pop
pop
pop
pop
ret
nop
cmpb
jbe
push
push
push
push
push
call
pop
ret
push
push
cmpb
jbe
push
push
push
push
call
pop
pop
ret
mov
mov
testl
jne
cmpl
mov
mov
je
cld
call
mov
test
je
call
test
je
mov
mov
cmpl
je
call
cmpb
jbe
cmpb
ja
lea
push
push
call
cmp
pop
je
mov
mov
mov
jmp
mov
mov
mov
cmpb
jbe
cmpb
ja
push
lea
push
push
push
call
cmp
pop
pop
pop
je
orl
push
xor
push
push
push
mov
push
push
push
push
mov
push
push
push
push
call
mov
call
pushl
mov
mov
mov
movl
add
call
jmp
jmp
call
mov
mov
mov
mov
jmp
mov
ret
mov
mov
mov
testl
je
mov
movl
push
push
push
push
mov
add
call
call
pop
pop
pop
pop
mov
ret
mov
mov
movl
call
mov
mov
mov
mov
andl
cmpl
je
mov
call
call
xor
add
mov
pop
mov
mov
pop
pop
pop
pop
mov
ret
lea
call
mov
mov
mov
mov
call
pop
mov
xor
pop
mov
pop
pop
call
jmp
ret
xor
mov
mov
add
mov
call
ret
ret
mov
push
mov
mov
mov
cmp
jg
je
cmp
jg
je
sub
je
sub
je
dec
je
jmp
add
sub
jb
je
jmp
cmp
jg
je
sub
je
dec
je
dec
je
jmp
sub
je
sub
je
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
and
mov
call
pop
ret
mov
testl
jne
cmpb
ja
lea
push
call
cmp
je
mov
cld
call
mov
push
push
push
push
call
mov
cmpl
mov
mov
je
mov
test
je
mov
call
test
je
mov
call
mov
test
je
call
mov
mov
mov
mov
jmp
xor
ret
lea
xor
lea
mov
mov
mov
movl
mov
mov
ret
lea
xor
mov
test
je
mov
cmp
jne
mov
mov
ret
mov
cmp
je
cmp
jne
mov
mov
ret
push
mov
add
push
push
push
mov
mov
test
je
mov
mov
mov
xor
push
push
pushl
mov
test
jle
dec
mov
mov
mov
mov
cmpl
je
call
test
jg
xor
pop
pop
pop
mov
jmp
jmp
call
call
call
pop
pop
pop
pop
pop
pop
ret
push
mov
add
push
push
push
mov
mov
test
je
mov
xor
mov
mov
xor
push
push
pushl
mov
cmp
jle
mov
mov
mov
inc
mov
cmpl
je
call
cmp
jg
xor
pop
pop
pop
mov
jmp
jmp
call
call
call
pop
pop
pop
pop
pop
pop
ret
movl
movl
mov
xor
mov
mov
mov
mov
call
movb
call
ret
push
push
push
mov
mov
mov
mov
mov
cltd
idiv
add
xor
mov
mov
mov
mov
cltd
idiv
mov
dec
test
jne
mov
mov
mov
and
mov
xor
mov
mov
shr
dec
test
jne
pop
pop
pop
ret
mov
xor
xchg
neg
sbb
inc
mov
mov
mov
pushl
pushl
mov
mov
rep
pop
pop
leave
ret
ret
mov
push
cmpb
je
cmpw
jne
cmpl
jbe
mov
call
push
lea
push
push
push
push
call
push
call
push
lea
push
push
push
push
call
push
call
pop
ret
cmpb
jne
push
push
push
push
call
pop
ret
add
incl
add
add
push
push
push
push
mov
mov
cmpb
jne
cmpl
je
mov
mov
xor
mov
call
cmpl
jne
cmpl
je
call
call
xor
mov
cmpb
jne
cmpl
jne
xor
mov
call
cmpb
jbe
cmpl
je
mov
test
je
mov
call
mov
mov
cmp
je
test
je
push
call
call
cmpb
jne
call
cmpb
je
call
cmpl
jne
cmpl
je
call
mov
push
call
mov
mov
mov
mov
rep
jmp
pop
pop
pop
pop
pop
ret
mov
call
ret
nop
popl
jmp
ret
mov
test
je
movl
mov
dec
jl
lock
jne
push
lea
call
pop
ret
nop
push
push
mov
mov
mov
test
je
movl
mov
dec
jl
lock
jne
lea
call
add
dec
jne
pop
pop
ret
nop
test
je
mov
inc
jg
push
push
mov
call
mov
pop
push
mov
call
pop
pop
jmp
lock
xchg
test
je
mov
dec
jl
lock
jne
lea
call
ret
nop
test
je
mov
inc
jle
lock
xchg
test
je
mov
dec
jl
lock
jne
lea
call
ret
lea
test
jle
push
add
and
push
call
pop
movw
add
pop
mov
movl
ret
xor
ret
nop
push
push
push
mov
mov
mov
mov
call
mov
mov
test
je
mov
mov
call
mov
call
mov
pop
pop
pop
ret
mov
push
mov
mov
call
pop
ret
nop
xor
test
je
push
cmp
je
cmp
je
cmp
je
cmp
je
add
jmp
inc
inc
inc
mov
pop
sub
jmp
ret
lea
xor
mov
inc
jmp
ret
nop
push
push
push
mov
xor
repnz
jne
not
pop
add
pop
pop
jmp
ret
push
test
je
mov
test
je
cmp
jl
mov
mov
inc
xchg
call
pop
ret
movb
pop
ret
mov
test
je
mov
ret
test
je
mov
test
je
push
push
push
mov
mov
mov
mov
add
cmp
je
call
mov
mov
mov
add
call
pop
pop
pop
ret
call
mov
mov
jmp
ret
test
je
test
je
cmp
je
cmp
je
push
push
call
pop
pop
jmp
push
push
push
mov
mov
push
mov
add
call
mov
mov
mov
mov
call
mov
mov
mov
add
call
pop
mov
test
je
decl
call
pop
pop
pop
ret
mov
jmp
mov
jmp
ret
push
push
push
mov
mov
cmp
je
test
je
test
je
mov
mov
sub
ja
add
push
shr
je
mov
mov
cmp
jne
dec
je
mov
mov
cmp
jne
add
add
dec
jne
jmp
add
add
pop
and
je
mov
mov
cmp
jne
dec
je
cmp
jne
dec
je
and
and
cmp
jne
add
jmp
mov
sub
jmp
mov
sub
jmp
pop
cmp
jne
cmp
jne
shr
shr
cmp
jne
cmp
pop
pop
pop
ret
mov
test
je
mov
inc
jle
lock
ret
nop
test
je
ret
add
ret
mov
test
je
mov
dec
je
push
mov
mov
call
mov
mov
mov
push
mov
call
pop
mov
dec
jl
lock
jne
lea
call
mov
pop
mov
ret
lea
jmp
ret
mov
jmp
ret
mov
push
test
je
mov
test
je
dec
jl
cmp
jge
sub
test
jl
cmp
jg
add
mov
call
jmp
xor
jmp
mov
jmp
mov
call
pop
ret
ret
push
push
push
mov
mov
mov
call
mov
test
je
mov
dec
jl
cmp
jge
test
jle
sub
cmp
jle
mov
sub
add
lea
call
mov
mov
mov
sub
call
pop
pop
pop
ret
test
je
test
je
push
push
push
mov
mov
mov
push
mov
dec
js
mov
inc
sub
jle
repnz
jne
mov
push
push
mov
repz
pop
pop
je
mov
jmp
pop
xor
jmp
xor
ret
pop
mov
sub
pop
pop
pop
ret
lea
push
push
push
mov
mov
xor
test
jle
mov
test
je
cmpl
jne
sub
add
push
mov
call
pop
add
mov
mov
movb
jmp
mov
call
mov
mov
test
je
mov
mov
cmp
jl
mov
call
mov
call
mov
pop
pop
pop
ret
mov
mov
jmp
ret
mov
test
je
movl
push
push
call
pop
ret
lea
push
push
mov
mov
mov
test
je
movl
push
call
add
dec
jne
pop
pop
ret
lea
test
je
mov
shr
je
push
push
push
call
test
je
ret
xor
push
mov
push
push
mov
lea
mov
mov
mov
add
mov
mov
call
add
dec
jg
mov
pop
pop
pop
ret
lea
cmpl
je
call
ret
mov
call
ret
cmp
je
push
push
push
push
mov
mov
mov
xor
mov
mov
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
jmp
cmp
mov
jg
call
jmp
mov
call
jmp
cmp
mov
jg
call
jmp
mov
call
jmp
mov
add
call
dec
jg
jmp
push
mov
mov
mov
add
mov
mov
call
dec
jg
pop
jmp
push
mov
mov
add
mov
call
dec
jg
pop
jmp
mov
add
call
dec
jg
jmp
mov
mov
add
call
dec
jg
jmp
pop
pop
pop
pop
mov
jmp
pop
pop
pop
pop
ret
mov
mov
jmp
ret
mov
test
je
movl
lock
jne
push
mov
xor
mov
mov
test
je
mov
test
je
mov
call
sub
call
pop
ret
mov
push
mov
add
push
push
push
mov
mov
mov
cmpl
je
xor
push
push
pushl
mov
mov
mov
call
xor
pop
pop
pop
mov
jmp
jmp
call
mov
mov
mov
cmpl
jne
pop
pop
pop
pop
pop
pop
ret
mov
mov
mov
mov
ret
mov
push
mov
add
mov
xor
push
push
pushl
mov
mov
mov
call
xor
pop
pop
pop
mov
push
mov
cmp
jne
mov
mov
mov
jmp
mov
mov
cmpl
je
mov
mov
cmp
jne
mov
mov
mov
mov
jmp
mov
mov
mov
cmpl
jne
ret
jmp
jmp
pop
pop
pop
ret
mov
test
je
movl
push
push
mov
call
pop
ret
lea
push
mov
add
push
xor
mov
xor
push
push
pushl
mov
push
lea
push
push
push
call
lea
lea
mov
call
mov
lea
call
mov
cmpl
je
xor
xor
pop
pop
pop
mov
push
lea
call
ret
jmp
jmp
mov
pop
mov
pop
ret
push
mov
xor
push
push
pushl
mov
incl
jne
mov
call
mov
call
mov
call
call
xor
pop
pop
pop
mov
push
ret
jmp
jmp
pop
ret
nop
subl
jae
movb
movl
movl
movb
movl
call
test
je
call
call
movw
movw
movw
call
mov
call
mov
call
and
cmp
je
call
and
cmp
jbe
movl
jmp
call
call
mov
jmp
call
call
mov
call
mov
ret
nop
jmp
mov
jmp
mov
jmp
mov
jmp
mov
push
push
mov
push
push
call
mov
mov
pop
pop
ret
lea
mov
ret
mov
push
push
call
mov
test
je
cmpl
jne
mov
call
mov
call
mov
cmpl
jne
mov
call
jmp
mov
push
mov
push
call
pop
pop
ret
mov
mov
mov
test
jne
mov
mov
ret
call
mov
push
call
test
je
ret
mov
ret
push
call
test
je
ret
mov
call
ret
nop
push
mov
xor
mov
push
call
mov
mov
mov
xor
mov
xor
mov
call
mov
mov
call
pop
ret
lea
push
mov
xor
push
push
pushl
mov
incl
xor
pop
pop
pop
mov
push
ret
jmp
jmp
pop
ret
mov
subl
ret
push
mov
xor
push
push
pushl
mov
incl
xor
pop
pop
pop
mov
push
ret
jmp
jmp
pop
ret
mov
subl
ret
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
push
mov
xor
push
push
pushl
mov
incl
xor
pop
pop
pop
mov
push
ret
jmp
jmp
pop
ret
mov
subl
ret
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
push
mov
xor
push
push
pushl
mov
incl
xor
pop
pop
pop
mov
push
ret
jmp
jmp
pop
ret
mov
subl
ret
push
push
push
push
push
mov
mov
mov
mov
push
mov
mov
mov
rep
movsw
movsb
pop
push
call
push
push
push
push
call
mov
call
mov
push
mov
mov
movsl
movsw
movsb
pop
mov
mov
call
push
push
call
call
push
push
mov
push
call
mov
test
je
mov
mov
mov
mov
call
push
push
push
call
push
push
call
push
mov
push
call
mov
push
mov
push
call
mov
push
call
mov
cmpl
je
push
call
mov
mov
call
mov
call
push
mov
call
mov
mov
pop
call
jmp
mov
call
inc
cmp
jne
pop
pop
pop
pop
pop
ret
add
add
outsb
push
jae
data16
jb
arpl
jns
imul
add
add
and
pop
das
sub
and
and
pop
pop
jnp
jnp
das
and
cmp
xor
rolb
add
xor
imul
imul
imul
popa
add
add
cmp
popa
add
xor
outsl
add
xor
imul
add
xor
add
add
add
add
add
add
add
add
sub
xor
popa
add
add
and
add
xor
outsl
add
xor
add
add
cmp
xor
add
add
jge
cmp
add
cmp
outsl
add
xor
add
add
and
add
sub
add
add
add
pop
add
add
sub
cmp
popa
add
add
add
cmp
add
xor
imul
add
add
incl
add
js
xor
jae
js
push
ss
cmp
addr16
jo
outsb
xor
insb
aaa
push
push
xor
jns
js
jae
xor
ja
jbe
jo
push
aaa
push
add
push
mov
xor
mov
xor
cmp
setl
mov
jge
neg
mov
div
add
push
inc
cmp
jne
dec
jne
push
inc
mov
inc
pop
mov
inc
dec
jne
pop
pop
pop
ret
nop
test
je
sub
mov
ret
lea
push
mov
add
push
push
xor
mov
mov
call
xor
push
push
pushl
mov
mov
mov
call
mov
mov
call
push
call
push
push
push
call
mov
call
mov
lea
call
mov
mov
mov
lea
call
mov
cmpl
jbe
mov
jmp
mov
lea
push
sub
push
lea
call
add
push
mov
mov
push
lea
call
push
push
call
lea
mov
call
mov
mov
call
xor
pop
pop
pop
mov
push
lea
call
lea
call
ret
jmp
jmp
pop
pop
mov
pop
ret
add
add
jmp
add
add
bound
insb
jns
insl
arpl
addr16
push
bound
push
push
bound
outsb
add
add
add
js
cmp
outsl
add
add
xor
add
outsb
add
add
pop
add
xor
add
add
jle
data16
add
jle
imul
add
sub
add
add
cmp
add
and
add
das
add
add
jnp
add
add
jle
jns
xor
popa
add
add
xor
add
add
in
push
push
mov
mov
call
xor
push
push
pushl
mov
mov
mov
call
mov
mov
call
push
push
push
call
push
call
xor
mov
call
push
call
not
inc
xor
pop
pop
pop
mov
push
lea
call
ret
jmp
jmp
mov
pop
pop
pop
ret
add
add
incl
add
add
add
jmp
add
add
xor
xor
aaa
cmp
xor
aaa
xor
xor
ss
xor
cmp
push
mov
push
push
mov
mov
call
xor
push
push
pushl
mov
mov
mov
mov
mov
call
call
push
push
call
mov
call
push
call
test
jne
cmp
jne
xor
jmp
mov
xor
pop
pop
pop
mov
push
lea
call
ret
jmp
jmp
mov
pop
pop
pop
ret
add
add
add
sbb
add
jo
jo
jo
add
bound
jb
add
add
insb
add
add
push
mov
xor
push
push
push
push
push
push
push
xor
push
push
pushl
mov
mov
mov
mov
mov
call
push
push
push
push
call
push
push
call
xor
mov
call
test
je
lea
mov
mov
call
mov
call
mov
lea
call
mov
call
test
jne
lea
mov
mov
call
mov
call
mov
lea
call
mov
call
test
jne
lea
mov
mov
call
mov
call
mov
lea
call
mov
call
test
jne
mov
xor
pop
pop
pop
mov
push
lea
mov
call
ret
jmp
jmp
mov
pop
mov
pop
ret
add
xor
cmp
aaa
popa
jle
outsl
inc
xor
pop
xor
xor
pop
xor
cmp
cmp
xor
jge
gs
xor
and
popa
and
popa
pop
aaa
popa
and
gs
ljmp
add
add
popa
das
jae
popa
es
popa
sub
gs
outsb
outsl
cmp
cmp
ss
cmp
arpl
popa
cmp
add
add
in
add
push
push
mov
mov
call
mov
mov
movsl
movsl
movsl
movsw
push
call
push
call
xor
sidtl
mov
cmp
je
cmp
jne
mov
mov
pop
pop
pop
pop
pop
ret
add
add
je
xor
add
xor
jbe
xor
push
add
insb
add
ja
xor
jns
xor
jns
xor
add
xor
js
xor
add
add
or
ja
push
je
jb
arpl
add
mov
mov
movsl
movsl
movsl
movsl
movsl
mov
mov
call
push
call
push
push
push
call
call
pop
pop
ret
add
xor
cmp
xor
xor
aaa
xor
aaa
lcall
add
add
popa
cmp
xor
fs
xor
insl
xor
inc
add
add
push
mov
call
mov
mov
call
push
push
push
call
push
push
push
push
push
call
xor
push
push
push
push
call
test
je
mov
mov
pop
ret
add
add
add
xor
cmp
cmp
cmp
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
aaa
add
add
xor
add
add
add
in
add
push
push
push
xor
mov
mov
mov
mov
call
mov
call
xor
push
push
pushl
mov
mov
mov
call
mov
mov
call
push
push
push
push
push
call
push
call
mov
call
push
call
mov
mov
add
add
mov
add
mov
xor
mov
call
mov
mov
call
push
push
push
call
push
push
push
push
push
push
call
mov
mov
add
mov
shl
add
mov
add
mov
lea
mov
call
mov
mov
call
jne
push
push
push
call
push
call
mov
mov
add
mov
add
add
movzwl
mov
mov
shl
mov
mov
mov
add
xor
push
push
mov
cltd
add
adc
add
add
mov
mov
jmp
inc
jmp
xor
pop
pop
pop
mov
push
lea
call
lea
mov
call
ret
jmp
jmp
mov
pop
pop
pop
mov
pop
ret
add
add
add
xor
add
add
add
add
add
add
add
add
add
add
xor
aaa
add
add
add
add
add
add
add
add
add
add
incl
add
add
add
push
add
add
js
insl
add
jb
insb
add
add
push
mov
add
push
push
push
xor
mov
mov
mov
mov
mov
mov
mov
call
mov
call
xor
push
push
pushl
mov
push
call
push
push
call
xor
lea
call
mov
call
test
jle
mov
mov
mov
movzbl
cltd
idiv
xor
inc
decl
jne
cmp
jle
sar
jns
adc
mov
fildl
call
mov
cmp
jg
mov
call
test
jle
mov
mov
push
push
push
call
push
call
mov
call
push
mov
pop
mov
cltd
idiv
mov
incl
mov
call
xor
mov
mov
movzbl
mov
cltd
idiv
mov
incl
mov
cltd
idivl
mov
xor
mov
mov
mov
and
jns
dec
or
inc
xor
mov
mov
movzbl
add
shr
xor
xor
mov
mov
and
jns
dec
or
inc
test
jne
lea
mov
call
mov
lea
call
jmp
lea
xor
mov
push
mov
pop
sub
call
mov
lea
call
inc
decl
jne
mov
mov
call
xor
pop
pop
pop
mov
push
lea
mov
call
lea
call
lea
mov
call
ret
jmp
jmp
pop
pop
pop
mov
pop
ret
push
mov
add
push
push
xor
mov
mov
mov
mov
xor
push
push
pushl
mov
push
push
call
push
push
call
push
push
push
push
push
push
lea
xor
call
mov
call
push
call
mov
push
push
push
push
call
push
lea
push
push
lea
push
push
call
push
push
push
push
call
push
lea
push
push
lea
push
push
call
lea
mov
call
push
push
push
push
call
push
lea
push
mov
push
lea
call
push
push
call
push
call
push
mov
mov
mov
call
lea
mov
mov
call
lea
mov
mov
call
mov
lea
call
mov
mov
call
xor
pop
pop
pop
mov
push
lea
mov
call
lea
call
ret
jmp
jmp
pop
pop
mov
pop
ret
push
push
mov
mov
push
push
push
push
push
push
call
push
push
push
call
push
push
call
pop
pop
ret
lea
push
push
push
mov
mov
push
push
call
push
push
push
call
movzwl
add
mov
mov
pop
pop
pop
ret
mov
push
push
mov
push
call
push
call
mov
mov
mov
pop
pop
ret
mov
push
mov
push
call
push
push
call
shr
mov
pop
ret
nop
push
push
push
call
push
push
call
mov
xor
mov
call
ret
mov
push
call
push
push
call
mov
xor
mov
call
ret
mov
push
call
call
mov
xor
mov
call
ret
mov
push
mov
add
push
push
push
xor
mov
mov
mov
call
xor
push
push
pushl
mov
call
push
push
call
call
call
call
movl
movw
push
push
push
push
push
push
push
push
call
push
lea
xor
call
mov
call
push
call
movb
xor
push
push
pushl
mov
movl
mov
call
call
mov
mov
call
push
lea
call
mov
pop
call
push
mov
push
call
lea
push
push
lea
push
mov
add
push
mov
push
call
mov
mov
call
mov
mov
add
mov
push
push
mov
mov
push
mov
call
push
mov
push
call
mov
lea
push
mov
mov
push
mov
push
mov
push
mov
push
call
mov
mov
mov
add
call
mov
mov
movzwl
dec
test
jb
inc
xor
lea
push
lea
mov
mov
push
mov
mov
add
push
mov
mov
add
push
mov
push
call
test
je
lea
push
mov
mov
call
push
mov
mov
push
mov
mov
add
push
mov
push
call
inc
dec
jne
lea
push
push
lea
push
mov
add
push
mov
push
call
test
je
mov
mov
add
mov
push
mov
push
call
cmp
sbb
inc
mov
xor
pop
pop
pop
mov
push
cmpb
jne
push
mov
push
call
jmp
mov
push
call
ret
jmp
jmp
xor
pop
pop
pop
mov
push
lea
call
lea
call
ret
jmp
jmp
pop
pop
pop
mov
pop
ret
push
mov
xor
push
push
pushl
mov
incl
jne
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
xor
pop
pop
pop
mov
push
ret
jmp
jmp
pop
ret
nop
subl
ret
push
mov
xor
push
push
pushl
mov
xor
pop
pop
pop
mov
push
ret
jmp
jmp
pop
ret
pop
add
add
inc
add
inc
add
cmp
inc
add
inc
add
inc
add
inc
inc
add
inc
add
push
inc
add
add
add
push
inc
add
in
mov
push
push
dec
jne
push
push
push
mov
call
mov
xor
push
push
pushl
mov
movupd
addpd
lea
call
mov
mov
call
mov
lea
mov
call
push
mov
mov
call
mov
dec
xor
mov
call
mov
call
push
mov
call
pop
sub
cmp
jle
mov
mov
call
mov
mov
mov
call
cmpl
je
mov
mov
mov
call
add
dec
jne
lea
lea
call
mov
push
lea
lea
call
mov
pop
call
mov
mov
lea
lea
call
mov
push
lea
lea
call
mov
pop
call
mov
mov
lea
lea
call
mov
push
lea
lea
call
mov
pop
call
mov
mov
lea
lea
call
mov
push
lea
lea
call
mov
pop
call
mov
mov
lea
lea
call
mov
push
lea
lea
call
mov
pop
call
mov
mov
lea
lea
call
mov
push
lea
lea
call
mov
pop
call
mov
mov
lea
lea
call
mov
push
lea
lea
call
mov
pop
call
mov
mov
lea
lea
call
mov
push
lea
lea
call
mov
pop
call
mov
mov
lea
lea
call
mov
push
lea
lea
call
mov
pop
call
mov
mov
lea
lea
call
mov
push
lea
lea
call
mov
pop
call
mov
mov
lea
lea
call
mov
push
lea
lea
call
mov
pop
call
mov
mov
lea
lea
call
mov
push
lea
lea
call
mov
pop
call
mov
mov
lea
lea
call
mov
push
lea
lea
call
mov
pop
call
mov
mov
lea
lea
call
mov
push
lea
lea
call
mov
pop
call
mov
mov
lea
lea
call
mov
push
lea
lea
call
mov
pop
call
mov
mov
lea
lea
call
mov
push
lea
lea
call
mov
pop
call
mov
mov
lea
lea
call
mov
push
lea
lea
call
mov
pop
call
mov
mov
lea
lea
call
mov
push
lea
lea
call
mov
pop
call
mov
mov
lea
lea
call
mov
push
lea
lea
call
mov
pop
call
mov
mov
lea
lea
call
mov
push
lea
lea
call
mov
pop
call
mov
mov
lea
lea
call
mov
push
lea
lea
call
mov
pop
call
mov
mov
mov
lea
call
mov
lea
call
mov
lea
call
mov
lea
call
mov
lea
call
mov
lea
call
mov
lea
call
cmpb
jne
call
test
jne
push
push
push
mov
mov
call
test
jne
call
test
jne
cmpb
jne
call
test
jne
cmpb
jne
call
test
jne
xor
lea
mov
call
lea
lea
call
mov
lea
mov
call
mov
call
lea
call
mov
mov
call
cmpl
je
mov
mov
call
inc
cmp
jne
lea
mov
mov
mov
call
mov
mov
call
cmpb
jne
mov
push
lea
push
call
mov
mov
call
mov
call
xor
pop
pop
pop
mov
push
lea
mov
call
lea
mov
call
ret
jmp
jmp
pop
pop
pop
call
incl
add
add
add
add
add
or
add
add
push
add
add
add
add
add
addb
add
add
addb
add
inc
add
addb
add
addb
orb
add
test
add
loopne
add
or
add
xor
add
add
add
add
add
push
add
add
add
or
adcb
add
jl
add
mov
add
xchg
or
xor
add
add
add
add
add
add
add
sahf
or
orb
add
and
add
cmp
add
push
add
addb
add
add
add
add
add
add
add
into
or
subb
sbb
add
in
add
lock
xorb
add
add
add
add
add
add
add
cli
or
or
add
add
add
add
add
add
add
push
or
and
add
clc
add
addb
add
add
add
add
add
push
add
add
add
sub
add
xor
add
inc
or
sbbb
orb
jo
add
mov
addb
add
add
add
add
add
add
add
bound
add
outsb
or
cmpb
add
add
add
add
or
sub
add
add
add
test
add
mov
add
add
add
add
add
mov
add
add
or
adcb
add
add
add
add
add
add
add
loop
add
in
or
add
add
fadds
add
add
add
add
add
pop
add
add
add
adc
add
sbb
add
sub
add
xor
add
or
subb
orb
addb
add
add
add
add
add
add
add
add
add
cwtl
push
add
add
add
add
add
add
add
test
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
enter
add
add
add
add
add
add
fadds
add
add
add
add
add
add
add
call
add
add
add
add
add
add
add
add
add
clc
push
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
sbb
add
add
add
add
add
add
add
sub
add
add
add
add
add
add
add
cmp
add
add
add
add
add
add
add
dec
pop
add
add
add
add
add
add
add
pop
pop
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
js
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
cwtl
pop
add
add
add
add
add
add
add
test
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
enter
add
add
add
add
add
add
fadds
add
add
add
add
add
add
add
call
add
add
add
add
add
add
add
add
add
clc
pop
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
sbb
add
add
add
add
add
add
add
sub
add
add
add
add
add
add
add
cmp
add
add
add
add
add
add
add
dec
or
add
add
add
add
add
add
pop
or
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
js
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
cwtl
or
add
add
add
add
add
add
test
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
enter
add
add
add
add
add
add
fmuls
add
add
add
add
add
add
add
call
add
add
add
add
add
add
add
add
add
clc
or
add
add
add
add
add
add
or
add
add
add
add
add
add
add
sbb
add
add
add
add
add
add
add
sub
add
add
add
add
add
add
add
cmp
add
add
add
add
add
add
add
dec
or
add
add
add
in
add
add
add
test
add
add
add
add
add
add
cmp
add
in
add
add
add
push
inc
add
add
add
add
add
add
add
in
add
add
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
in
add
add
add
add
add
add
in
add
add
add
push
jg
add
add
in
add
add
add
test
add
add
add
add
add
add
xchg
add
add
add
add
add
add
add
add
add
add
add
add
add
in
add
add
add
clc
lods
add
add
add
add
add
add
add
add
in
add
add
add
mov
or
add
add
add
add
add
leave
add
add
add
add
add
add
add
add
add
add
add
add
add
in
add
add
add
lock
add
add
in
add
add
add
inc
out
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
in
add
add
add
inc
or
add
add
in
add
add
add
xchg
adc
add
add
in
add
add
add
call
or
add
add
add
add
add
push
add
add
in
add
add
add
nop
xor
add
add
in
add
add
add
in
push
add
add
in
add
add
add
cmp
add
add
in
add
add
add
mov
push
or
add
add
add
add
add
push
push
add
add
in
add
add
add
xor
push
add
add
in
add
add
add
mov
add
add
in
add
add
add
fdivl
add
add
in
add
add
add
xor
add
add
in
add
add
add
test
add
add
add
add
add
lea
add
add
in
add
add
add
sub
push
add
add
in
add
add
add
andb
add
add
add
add
add
test
add
in
add
add
add
sub
add
in
add
add
add
add
add
xor
xor
add
add
xor
add
add
xor
xor
add
add
xor
xor
add
add
xor
xor
add
dec
add
dec
add
add
add
xor
xor
add
add
xor
xor
add
dec
add
add
add
add
xor
xor
add
dec
add
dec
add
add
add
xor
xor
add
add
xor
cmp
add
dec
add
dec
add
add
add
xor
xor
add
dec
add
add
add
dec
add
dec
add
add
dec
add
add
add
add
xor
cmp
add
add
xor
xor
add
add
xor
xor
add
add
xor
xor
add
dec
add
dec
add
add
add
xor
cmp
add
add
xor
xor
add
add
xor
xor
add
dec
add
dec
add
add
add
xor
xor
add
add
xor
xor
add
add
xor
aaa
add
dec
add
dec
add
add
add
xor
cmp
add
add
xor
add
add
xor
cmp
add
dec
add
dec
add
add
add
xor
xor
add
add
xor
xor
add
add
xor
xor
add
add
xor
xor
add
add
xor
add
add
xor
aaa
add
dec
add
dec
add
add
add
xor
xor
add
dec
add
sub
pop
jb
lock
stos
jecxz
les
xchg
pushf
inc
mov
sbb
jg
xchg
iret
inc
pop
out
push
test
lcall
dec
sub
lea
test
or
popa
mov
inc
stc
insb
or
idivb
cmc
test
lret
sbb
push
mov
mov
jo
inc
jmp
bound
data16
movsl
test
inc
clc
outsl
adc
sub
add
sti
mov
lock
push
jo
mov
lds
xor
test
lock
cltd
pop
stc
aaa
loop
lods
inc
xor
adc
mov
xlat
sbb
inc
int
std
out
inc
xchg
cmp
daa
cltd
insb
icebp
popa
mov
cmp
insb
ds
decl
ss
aas
pop
mov
mov
pop
cmpsb
test
shlb
sub
das
jno
add
out
sbb
ret
cmp
mov
icebp
jae
dec
mov
sub
sbb
das
les
push
inc
bound
jl
add
jmp
mov
mov
inc
mov
push
ljmp
sbb
outsl
xchg
je
aas
or
push
mov
insb
movsb
jle
push
sub
ret
xchg
and
push
loope
outsb
cld
repnz
mov
mov
push
scas
pop
fsubs
ljmp
jae
sbb
sbbb
adc
pop
loope
or
jo
pop
push
and
push
fmuls
imulb
push
ljmp
jbe
sbb
add
popa
sbbl
push
fidivrs
fnsave
dec
out
sbb
xchg
add
test
and
rclb
sub
hlt
cmp
negl
push
in
and
sub
decl
ljmp
je
xor
cmp
sub
scas
ja
mov
fs
xchg
pop
add
pop
and
adcl
stos
ss
fidivl
decl
cmp
push
rol
jbe
data16
fisubs
jb
dec
arpl
lret
fnstcw
mov
xchg
lret
and
cmp
sub
mov
adc
cmpsl
cmpsl
jecxz
pavgb
pop
out
xchg
jg
stc
push
notl
adc
iret
mov
pop
data16
ja
test
into
cmp
mov
lds
imul
lret
xor
imul
xchg
decb
repnz
jg
stc
sub
pop
push
adc
or
add
pop
pop
push
sub
lret
sub
mov
push
sub
xchg
jecxz
adc
or
mov
xor
pop
xorl
adc
xchg
nop
cli
lock
test
ud2
mov
pusha
mov
mov
pop
stos
arpl
imul
or
rcr
iret
mov
stc
loopne
movsl
pop
mov
mov
cmp
or
lea
mov
clc
fidivrl
push
fmull
xor
mov
inc
cs
clc
mov
xor
xchg
outsb
loope
nop
push
xchg
mov
mov
jge
pop
push
jle
mov
mov
je
nop
xchg
in
stos
push
ret
les
rcll
or
lret
xchg
push
or
cmc
jecxz
push
lret
sub
out
pop
repz
icebp
push
cmp
jge
mov
adc
into
lea
mov
in
push
mov
aad
cltd
test
pop
jns
and
sbb
sbb
push
jmp
lock
cmp
sub
push
daa
jno
add
jecxz
inc
or
sub
push
mov
and
sub
pop
sbb
and
mov
cs
sub
sbb
xchg
jbe
jl
sub
or
sbb
gs
sbb
dec
dec
out
out
pop
in
mov
jo
add
arpl
add
insb
mov
mov
xchg
cli
or
fildll
adc
syscall
sub
shll
mov
pop
js
rorb
out
leave
push
imull
rclb
stos
test
outsl
xor
mov
push
outsl
cmc
in
test
aam
dec
icebp
xchg
cmp
mov
pop
fimull
pop
xchg
jb
es
cs
imul
lods
sbb
or
lahf
xorl
or
enter
xchg
pop
adc
cmpsb
jp
xchg
fsincos
jno
leave
jae
imul
dec
insb
sahf
stc
dec
push
mov
insl
fwait
repnz
jno
jb
sbb
mov
sbb
dec
push
cmp
out
mov
jae
mov
sbb
jp
sbb
sarl
out
cld
jecxz
cmpsb
imul
mov
sub
xchg
das
adc
cs
pop
sahf
in
adc
jnp
out
mov
pop
mov
ret
popf
es
lods
cmp
adc
sbb
out
cltd
mov
sub
stc
or
mov
rorb
aas
aas
pop
sbb
icebp
xchg
xor
imul
push
cmp
push
or
xchg
es
sbb
sbb
call
in
jo
inc
xchg
pop
and
xchg
out
pop
pop
lahf
mov
add
inc
adc
push
popf
xchg
pop
cmp
fisubrl
aad
movsl
push
scas
cmp
pusha
aaa
push
and
lds
and
jne
push
repnz
fcmovne
pop
sbb
fucomi
push
sub
push
xchg
add
loop
dec
scas
stos
push
xchg
sti
stos
xor
adcl
dec
jo
mov
mov
ljmp
es
inc
les
xor
lret
push
imul
out
xchg
xbegin
mov
mov
add
ret
jmp
lcall
cwtl
lock
mov
and
bound
xor
push
jl
orb
pop
pop
jo
repz
stos
or
lcall
daa
lds
addr16
test
fisttpl
dec
or
push
out
popa
sub
dec
fs
jae
push
add
adc
out
out
inc
mov
jbe
jl
icebp
mov
shrb
pop
xchg
jle
loop
in
cmpb
xlat
sarb
adc
in
pop
xchg
push
push
hlt
hlt
xchg
sbb
mov
add
out
int
cmp
sub
sub
xlat
bound
sbbb
inc
xchg
dec
movsl
push
jne
loop
fiadds
lods
and
bound
xchg
push
enter
jo
xchg
and
adc
add
clc
push
xchg
xchg
gs
adc
push
jp
and
in
push
jmp
xor
sbb
dec
xchg
mov
data16
mov
push
xchg
lret
adc
add
sbb
inc
daa
jno
pop
push
mov
push
sti
sub
mov
aam
nop
std
or
cmp
jge
std
sbb
sub
lahf
pop
sub
xchg
loopne
xchg
push
and
rep
adc
dec
xchg
jnp
sub
movsl
push
xchg
insb
add
sub
outsb
loop
test
in
jmp
inc
add
add
or
outsl
or
inc
mov
xor
pop
arpl
gs
sbb
xchg
js
test
outsl
or
xchg
out
shlb
into
out
jp
test
dec
add
test
aam
inc
cs
lods
lock
lods
roll
leave
lds
ret
cmp
xchg
and
scas
or
jmp
jl
subl
pop
pop
insl
fcmovnb
rcll
in
fnsave
jle
ljmp
scas
push
fisubrl
in
dec
fs
sbb
xchg
sub
pop
cmp
mov
das
subl
jns
dec
pusha
outsl
sbb
lret
add
add
test
les
int
jmp
and
int
imul
add
dec
mov
cmp
jo
xchg
ret
cmc
sub
inc
cmp
call
mov
or
mov
dec
pop
xchg
mov
mov
jecxz
ds
je
or
ljmp
jecxz
test
dec
mov
mov
or
inc
and
xor
cmp
push
mov
imul
bound
stos
xchg
push
mov
push
notb
push
inc
inc
js
and
mov
and
dec
cs
or
decl
cmpsl
xchg
ret
cs
pusha
sar
jne
xor
cmp
rcll
sti
sub
inc
test
mov
dec
push
cs
xchg
ja
xchg
xor
sbb
pminsw
into
xchg
in
or
sub
mov
movsb
and
popf
test
sbb
scas
and
je
mov
cmpsb
add
mov
fbld
call
fwait
bound
add
and
hlt
data16
pop
sbb
hlt
mov
push
cmp
out
gs
insb
cmp
ret
mov
jmp
movsb
adc
xor
cmpsb
rorb
out
in
fwait
repnz
call
cltd
dec
or
push
iret
mov
mov
fisubrl
je
daa
inc
mov
sar
mov
mov
negl
shlb
shlb
scas
test
lret
ficoml
jge
cwtl
orb
push
mov
mov
add
pop
or
push
cld
pop
adc
cwtl
movsl
orb
push
test
cmpsb
nop
mov
and
push
dec
cld
pop
ret
das
jl
bound
fdivrs
fdivs
push
int
jnp
bound
je
and
xor
mov
cmc
fnstenv
push
iret
popa
les
icebp
mov
and
jbe
rol
test
rcl
andl
jae
int
xor
loop
inc
jecxz
cmp
mov
or
test
mov
jae
ret
xchg
sahf
sub
jmp
xor
aas
ret
xor
adc
insl
stc
popa
cmp
daa
mov
stos
and
and
jg,pt
dec
fisttpll
lds
outsb
mov
xlat
sti
jmp
scas
into
push
cmpsb
pop
sub
das
fwait
test
mov
icebp
sbb
ljmp
push
pop
push
out
xchg
sub
xor
xor
out
hlt
cs
xor
adc
mov
jp
movsb
es
mov
and
mov
inc
pop
add
push
add
or
pop
push
lcall
into
das
sbbl
or
ficoms
add
dec
out
or
pop
sub
add
dec
add
or
jns
push
or
adc
loopne
call
mov
enter
nop
jae
testl
lahf
mov
cs
push
or
repz
mov
or
mov
shrl
push
mov
stos
outsl
mov
loopne
jno
mov
aaa
outsb
sti
xor
inc
sub
xchg
out
dec
loop
dec
xchg
sbb
push
loop
arpl
cmpb
pop
cmp
fxch
js
sbb
push
sbb
sbb
pushf
mov
sbb
xor
in
test
mov
loopne
pop
test
inc
cmpsb
pop
cmpsb
test
bound
pop
movsb
mov
mov
mov
mov
pushf
frstor
pop
out
insb
pusha
jp
pop
dec
aaa
mov
mov
xchg
inc
aas
outsb
push
mov
pop
jmp
fwait
ja
push
mov
fcomip
sub
movsb
jo
in
jnp
cmp
mov
fcmovnu
mov
repz
pop
adc
pop
fmull
test
loope
lock
mov
xor
push
out
add
in
stos
repz
sub
mov
mov
pop
rorl
jb
dec
adc
ret
xorb
fldenv
popa
pushf
jg
cmpsl
pop
rcrl
lds
hlt
aam
lahf
leave
das
jmp
mov
ss
inc
lea
cmp
jns
js
and
push
mov
mov
ja
sahf
fidivs
leave
shlb
jbe
pop
jbe
les
add
outsb
xchg
ja
and
pop
mov
out
cmpl
sbb
add
adc
add
sub
jl
sti
arpl
cld
adc
sbb
xor
out
or
jne
bound
das
push
stos
gs
pop
mov
in
cmp
jne
xchg
mov
mov
shrb
and
gs
add
ret
add
pop
rclb
mov
pop
test
pop
push
xor
add
mov
enter
lock
out
mov
mov
mov
scas
pshufw
mov
sbbl
xor
and
lock
les
sub
inc
inc
adc
lods
pop
pushf
aam
out
jns
jno
testl
jle
inc
jns
xor
cwtl
and
inc
int3
dec
ljmp
stos
sub
insb
jnp
mov
outsl
mov
xchg
in
std
sbb
push
filds
insl
push
push
mov
mov
mov
rorb
int
aas
xor
xchg
bound
test
jecxz
inc
sub
lea
lock
test
not
and
sarb
lods
push
dec
mov
leave
test
jns
insl
mov
jecxz
pop
lods
pop
and
push
mov
jb
outsl
push
sbb
pop
sub
addr16
push
insl
xor
test
in
adc
inc
fwait
arpl
jecxz
sbb
and
push
jle
lcall
shrb
mov
or
push
ret
jmp
mov
arpl
flds
add
xor
cmp
lods
aaa
jle
shlb
mov
mov
movl
fwait
aam
ja
andb
movsb
pop
jne
add
dec
repz
daa
jbe
jmp
push
cltd
push
mov
lahf
cld
sti
shrb
shll
xchg
int
push
bound
loope
push
sub
jle
aaa
out
push
shll
jno
test
pop
push
adc
lret
bound
xchg
iret
dec
add
and
pop
out
and
mov
ljmp
addr16
jp
mov
xlat
xchg
add
add
xchg
fcompl
xchg
arpl
and
sub
pop
outsb
iret
shll
clc
and
adc
inc
loope
insl
icebp
stos
xor
in
cmp
test
pop
enter
loope
add
xchg
xor
lcall
sub
adc
repnz
insl
out
rolb
add
aam
icebp
sbb
sub
cltd
nop
lret
shrb
rorl
push
mov
sub
push
fisubs
in
cli
sub
or
adc
pop
ror
dec
mov
pop
jle
popa
fs
addr16
cmp
pushf
push
mov
aad
push
ds
mov
bound
test
insl
lahf
repz
ds
xlat
inc
dec
jno
pop
pop
out
cli
inc
cmp
add
cld
mov
mov
sbb
push
in
ret
mov
test
lret
pop
cltd
push
mov
jp
inc
mov
fwait
pop
rorl
bound
pop
or
fists
insl
push
add
pop
iret
fwait
add
jg
cli
push
test
or
and
notb
xlat
xchg
inc
xor
xor
daa
mov
jle
int3
fisubrl
mov
jno
out
xchg
pop
cs
scas
scas
cmpsb
cmp
in
fcomps
mov
outsb
inc
dec
fbstp
out
and
and
xchg
cmpsl
fcom
inc
cmpsb
cli
push
daa
aad
std
or
sbb
xchg
add
es
aaa
ficompl
cmpsl
addl
das
test
lods
scas
js
inc
sub
lcall
inc
mov
inc
cwtl
arpl
mov
movl
xchg
data16
and
xchg
dec
fmul
cld
sbb
push
mov
or
loop
dec
xor
orl
daa
aam
xchg
jne
jle
inc
mov
loopne
or
in
mov
ljmp
add
mov
jp
xlat
push
mov
das
jge
mov
std
sub
jp
mov
or
lods
push
jmp
movsl
push
inc
movsb
cmp
outsb
jg
push
fs
rol
ja
cwtl
dec
das
rorl
cmp
ljmp
sub
sti
addb
sub
push
cli
fwait
pop
and
sub
rcrb
rcr
cmpsb
cwtl
in
arpl
mov
push
lret
sbb
shrb
or
add
aaa
ja
sbb
int
outsl
sbb
push
inc
inc
mov
xor
push
adc
or
lea
or
add
mov
andb
jge
mov
xchg
imul
pop
fdivr
inc
test
sbb
adc
and
fisubl
adc
add
xor
stc
stos
inc
repz
pop
mov
dec
cmpsb
push
into
adc
insl
pushf
push
xchg
mov
mov
mov
pop
add
pop
mov
int
jnp
sbb
inc
mov
cs
and
inc
aaa
or
xor
sub
and
pushf
jl
push
adcl
or
jmp
leave
jge
mov
push
lds
xchg
pushf
test
cmp
pop
pusha
sbb
jmp
aam
stos
push
sbb
out
xchg
cmpb
sub
mov
fisubrs
fsts
mov
ret
sbb
fwait
or
add
mov
fsubl
rcrl
lahf
mov
in
cli
add
arpl
imul
int3
or
xor
inc
sub
repnz
rolb
cld
add
mov
dec
xor
nop
jbe
cmp
ss
in
fists
iret
cmp
sub
insb
out
xor
cs
movsl
dec
aam
shll
jmp
or
push
lods
inc
mov
xlat
cmp
inc
sbb
sbb
test
push
outsb
mov
insb
sbb
loope
std
or
xor
or
loope
add
pop
xchg
movsb
mov
adc
ss
sub
pop
mov
andb
mov
and
mov
stos
movsl
pop
xchg
popa
das
es
jns
push
fwait
jecxz
mov
stos
mov
jl
cli
pop
daa
mov
and
in
push
dec
loopne
outsb
dec
out
xor
add
xchg
dec
sbb
mov
sub
fwait
adc
fs
cmc
aaa
dec
ficoml
pop
cmc
xchg
or
leave
mov
pop
jmp
pop
jmp
rorb
mov
mov
int3
filds
pop
dec
icebp
lea
sub
andb
outsl
imul
push
jne
add
les
movsb
mov
mov
ds
mov
or
lahf
push
cld
add
xor
cs
les
pop
inc
mov
lea
std
fidivs
test
xchg
cmc
add
in
pusha
mov
lods
push
sarl
repnz
dec
mov
ret
mov
ljmp
xlat
test
sub
sahf
dec
mov
das
cmpsb
adc
mov
pop
fucom
popf
mov
fistl
push
xchg
roll
lods
insb
adc
dec
popf
std
mov
aaa
fstps
arpl
out
fwait
inc
push
loope
adcl
ljmp
or
test
addr16
sti
jae
add
and
push
lcall
adc
dec
scas
fildl
insl
cmp
sbb
push
and
and
xor
push
hlt
daa
fldenv
cmp
sbb
xor
clc
hlt
lods
add
test
ret
daa
shll
nop
out
mov
call
or
add
mov
mov
pop
or
sub
inc
addb
mov
jle
std
jge
mov
xchg
fnclex
les
decb
dec
xor
xlat
gs
stos
xchg
sbb
push
stc
outsb
cmpsl
jge
out
push
mov
adc
outsl
adc
mov
test
pop
add
enter
inc
cmp
int
scas
or
lret
hlt
jbe
pop
fwait
loop
adc
dec
mov
cmp
and
jb
jecxz
outsb
sub
hlt
sub
push
dec
sbb
testl
mov
adc
sbb
xor
repnz
sub
push
pop
loopne
test
jle
subl
xchg
scas
cld
mov
or
push
dec
or
mov
pop
addr16
int3
pop
inc
subl
rorl
inc
aad
scas
hlt
sbb
in
pop
ljmp
outsb
movsb
push
mov
mov
rorl
lret
xor
loopne
jge
imul
xchg
mov
int
inc
xor
insl
adc
scas
or
cmp
stc
imul
or
movsb
notb
jl
pop
popf
fsubrs
pop
add
pop
ljmp
bound
cmp
xor
or
imul
jns
push
outsl
and
pusha
movb
loopne
subb
adc
sbb
pop
pop
test
lahf
sub
pop
xor
aaa
ss
xchg
stos
sub
test
je
shrl
push
push
daa
rolb
leave
cmp
sub
fcmovu
dec
lods
in
aaa
fnsave
mov
out
push
lods
cltd
loopne
jnp
cmp
adc
stos
inc
adc
scas
jb
std
pop
ljmp
jp
pusha
test
fmuls
xchg
insb
stos
test
cmpl
sbbb
rcrb
stos
jnp
nop
pushf
icebp
pop
xchg
rcl
imul
shlb
cmp
movsl
mov
out
popf
jl
fnstenv
xchg
push
mov
in
js
outsl
movsb
jp
js
jecxz
repz
je
out
imul
aad
ja
cld
into
jb
int3
cmpl
shl
xchg
loopne
or
sub
or
xor
mov
inc
jbe
pop
jmp
repnz
xacquire
fldt
iret
jge
lock
mov
push
call
mov
in
jnp
loope
pop
cmpsb
or
enter
mov
jl
mov
or
mov
shlb
sub
cmpsl
pop
push
cs
add
fld
sub
or
cld
xchg
test
aas
sar
fnsave
ret
into
imul
popl
or
sar
pop
cmp
mov
popa
fwait
insb
pop
aam
push
push
mov
xchg
pop
test
sub
imul
cmp
out
aas
mov
and
sbb
enter
sub
into
adc
inc
push
imull
enter
dec
mov
or
scas
imul
in
stos
dec
mov
push
xchg
push
loopne
and
jecxz
jg
repnz
orl
cmc
cmp
jno
cld
or
test
ret
cmpl
jle
lcall
push
mov
popa
mov
adcb
add
ficoml
cmc
loope
push
fwait
jecxz
sbb
je
roll
addl
and
inc
call
sbb
popf
mov
addr16
add
adc
cmp
add
hlt
xchg
ret
jle
lret
add
xorl
jl
pop
push
jmp
fistps
cmpsb
xchg
pop
ja
adc
sub
lcall
push
movsb
outsb
popa
sbb
stc
xor
jo
fsts
mov
in
lahf
js
lret
sahf
jne
inc
je
loopne
fsubrp
xor
jg
push
fcomi
sbb
adc
xchg
push
mov
mov
mov
pusha
das
push
std
sbb
add
adc
fsubs
testl
push
ja
std
fwait
sub
pop
inc
repz
mov
mov
fisubrs
xorl
ljmp
sbb
cmp
mov
sub
sbb
shrb
pop
xor
sbb
iret
pop
lahf
cwtl
jne,pn
call
jle
sub
sbb
xor
cmp
mov
ds
mov
inc
jo
popf
mov
mov
push
mov
pushf
data16
push
data16
cmp
or
push
push
adc
js
ljmp
mov
mov
jg
and
test
mov
xchg
push
das
and
mov
mov
outsb
push
ret
and
push
mov
inc
mov
add
mov
ret
push
cmp
push
arpl
lock
int
mov
test
jmp
sub
dec
aad
cmp
mov
fs
in
sub
std
test
jo
loop
lods
sbb
fidivl
popf
add
cmp
or
repz
push
push
cmpsb
xor
sti
sub
sbb
call
cmp
xor
xchg
jne
sub
lret
pop
clc
adc
cmp
loopne
dec
fnstcw
test
call
jbe
das
jecxz
inc
xchg
and
stc
aaa
push
outsb
and
iret
xor
mov
jp
mov
sbb
dec
pop
stos
pop
sbb
xor
stos
and
mov
sahf
cmpsb
push
movsb
pop
add
add
lret
pop
mov
das
xchg
jo
popa
push
push
cmpsb
and
adc
nop
jl
rcr
push
dec
inc
scas
push
gs
movl
cmp
mov
cwtl
loop
jp
out
shlb
stc
js
jnp
cmp
mov
jmp
int3
sahf
jle
pushf
add
fdivs
repz
jno
sub
fstpl
aam
push
lods
aad
jp
and
fwait
lods
sbb
fwait
push
psubb
mov
out
push
lret
cmp
inc
xchg
lods
push
jno
stc
xchg
jge
xor
add
movb
dec
xchg
or
ljmp
pushf
push
xchg
jp
xchg
xor
cmp
xchg
jne
shlb
jmp
ror
cmp
movsb
pop
xchg
or
repz
mov
xor
int3
aas
xchg
cmpsb
push
cld
jns
or
fimull
inc
mov
ljmp
stos
push
mov
inc
xor
jp
mov
stc
xchg
rcr
sub
inc
scas
data16
aaa
fwait
pop
sahf
mov
repz
jns
mov
shrl
and
pushf
data16
add
push
es
and
mov
out
xchg
push
les
movl
jl
jg
call
lcall
dec
mov
in
push
sbbb
jg
fdivl
sub
lods
shrb
stc
in
sub
dec
rclb
test
insb
cmpsl
or
clc
cmp
cld
or
lods
pop
aad
js
or
adc
daa
fcoms
jo
mov
jnp
cmp
mov
add
aas
jne
or
add
cmp
add
add
cwtl
pop
pusha
cmp
popa
push
mov
aad
mov
or
pop
jns
mov
shll
lret
xchg
xlat
xor
jmp
pop
fldenv
in
outsb
and
dec
jmp
mov
stc
fisttps
mov
lret
leave
aaa
push
je
gs
mov
mov
bound
test
jmp
loope
out
sub
outsl
xchg
pop
xor
adc
mov
rclb
out
insb
scas
cmpsl
mov
inc
lods
jg
mov
addb
stos
xchg
fld
bswap
adc
inc
repz
dec
push
pusha
xchg
xor
xor
xchg
arpl
and
add
mov
pop
mov
sub
std
ret
std
and
movsb
mov
push
repnz
fldl2e
or
leave
xchg
call
fcom
insb
adc
pop
call
push
lods
mov
sub
cmpsb
repz
xchg
sbb
cli
fisubl
mov
daa
in
or
and
mov
dec
out
test
in
inc
and
push
sub
push
sub
push
dec
xchg
jbe
repnz
rorl
xor
rclb
cwtl
jl
add
push
dec
std
push
cmp
sti
or
push
cmp
push
ret
dec
insb
scas
loop
lds
dec
mov
inc
lea
cld
sbb
stos
aaa
sti
adc
scas
insb
mov
jae
or
fldenv
and
or
fadds
in
sbb
or
rorl
add
and
in
pushf
xorb
cs
inc
pop
mov
stos
sub
shrb
cmp
pusha
pop
stc
subl
sub
push
addb
sbb
fadd
mov
and
icebp
or
xor
addr16
sbb
ljmp
loopne
cs
jge
cld
or
pusha
cmp
mov
or
movsl
mov
in
cmp
addl
into
adc
inc
or
xlat
jnp
dec
xorl
xor
lds
jno
mov
inc
sbbb
fcoml
lcall
flds
nop
fdivl
movsb
leave
and
sub
fisubrs
jmp
adc
cmp
add
lods
fistps
adc
mov
call
repz
pop
movups
push
test
fldcw
or
xchg
push
jne
sub
jmp
enter
and
adcl
mov
push
in
dec
mov
shll
shll
rorb
mov
icebp
jecxz
pop
and
jno
frstor
and
xchg
push
mov
in
push
mov
inc
sub
lea
pop
adc
mov
lahf
movsl
pop
mov
divb
sub
outsb
lahf
outsb
outsb
fstpt
dec
call
aas
mov
and
cmpsb
or
lcall
scas
add
test
test
cmp
pop
nop
test
xor
push
lret
aam
inc
movsl
jg
aad
fwait
je
out
xlat
in
sbb
mov
mov
ficompl
out
xor
cmpsl
stc
or
sbb
aad
add
decb
adc
jge
dec
sahf
pop
cmpsb
pop
adc
in
xor
popa
sti
xlat
mov
or
sbb
pop
scas
sbb
nop
enter
int
pop
dec
fidivs
fsubl
repz
inc
push
dec
jae
outsl
addr16
push
insb
push
mov
into
enter
add
sub
and
hlt
cld
cmp
jo
jnp
sub
test
jle
cmp
mov
xor
hlt
mov
dec
adc
popf
in
push
push
das
das
cmp
or
and
mov
and
inc
dec
arpl
mov
dec
and
xor
leave
mov
inc
jo
dec
mov
and
pop
nop
mov
add
jp
push
sbb
jl
pop
adc
mov
sub
and
inc
mov
or
push
pop
ret
fs
mov
or
repz
in
inc
add
sbb
or
adc
sbb
loopne
outsl
push
arpl
fimull
popf
in
push
daa
addr16
mov
iret
std
jne
call
mov
aas
lcall
xor
repz
mov
popf
xchg
sbb
and
mov
lcall
mov
xor
ret
test
nop
je
dec
lret
icebp
or
repz
inc
outsl
in
dec
cmp
divl
push
cld
sbb
pop
jns
xor
add
leave
cmpb
lcall
inc
mov
and
test
jecxz
aas
sbb
rcrl
sub
popf
dec
cli
pop
stos
mov
scas
into
loopne
lds
ret
mov
cmp
and
xor
xlat
lret
ret
cmp
dec
jmp
xchg
lcall
mov
sbb
fcmovnb
push
sbb
sarl
mov
jg
mov
add
and
lea
clc
mov
add
fiaddl
rclb
inc
push
jge
test
gs
push
mov
movsl
les
cmpl
rcrl
sub
stos
mov
aad
cmpsb
add
mov
inc
xchg
add
xchg
loop
cmp
mov
cmp
dec
lret
add
mov
or
fwait
pop
in
mov
insl
mov
test
pusha
daa
push
mov
repnz
adc
sub
cs
mov
or
or
loope
scas
mov
mov
mov
dec
pop
sub
push
pop
cmp
or
xchg
sub
call
jno
rolb
adc
add
imul
gs
daa
gs
test
test
and
loope
xor
int
sbb
icebp
fmul
stos
sub
enter
pop
fsubr
fwait
lods
jmp
pop
jge
rcl
or
add
out
loopne
call
mov
arpl
inc
jg
or
push
dec
lods
pop
cmpsb
pop
fists
mov
lods
stc
mov
icebp
mov
sbb
mov
nop
int3
cmp
stos
pop
mov
loop
pusha
cmp
xchg
lock
frstor
test
jb
arpl
lret
xchg
sbb
sub
inc
jmp
orl
inc
stos
icebp
mov
and
cwtl
enter
mov
mov
pop
pop
pop
outsb
or
mov
jne
jne
dec
xchg
push
cmp
test
lret
cltd
sbb
xor
lock
sbb
add
out
mov
daa
daa
movsl
repz
or
xchg
jae
mov
rcr
mov
push
sbb
sub
sahf
outsb
subb
mov
adc
imul
pop
int3
xor
popa
loop
lahf
push
cmpsl
pop
mov
insb
cmp
arpl
into
mov
lret
movsl
sub
mov
sbb
push
sub
into
cmp
adc
push
dec
scas
pop
mov
adc
mov
jae
hlt
mov
jmp
sub
lods
scas
jmp
out
lods
mov
jl
inc
adc
mov
push
mov
add
jecxz
hlt
xchg
mov
das
inc
sbb
outsl
paddusw
jl
and
mov
pop
imul
xor
ds
popf
cld
sbb
inc
inc
cmp
dec
ljmp
addr16
xchg
jecxz
add
fistl
pop
gs
dec
pop
scas
inc
mov
dec
cs
out
ja
pusha
xchg
in
daa
pop
out
shrb
mov
lea
scas
cwtl
pop
cmpsb
dec
ja
dec
cmpsb
pop
cwtl
and
push
cmpsl
repz
xor
and
lods
data16
loop
jmp
jg
lods
mov
lahf
dec
push
into
arpl
out
and
xor
jmp
jno
push
cmpb
sahf
in
nop
pop
mov
xchg
roll
jge
outsl
dec
sub
push
and
pop
push
mov
ljmp
jg
mov
and
mov
lds
and
es
test
popf
pop
in
inc
dec
xor
je
ja
in
rorl
or
movsl
adcl
inc
mov
push
mov
in
xor
mov
mov
sub
testb
push
fidivrl
lahf
call
stos
es
ds
jp
pushf
push
in
repz
mov
subb
inc
mov
jbe
jle
jmp
test
jmp
cmp
adc
adc
int
ja
push
add
pop
xchg
outsb
inc
or
push
out
pop
push
movsl
outsl
mov
pop
cmpsb
inc
inc
mov
hlt
sbb
mulb
insb
dec
outsl
cmc
imul
add
mov
adc
sbb
dec
clc
out
fidivs
andl
and
add
dec
mov
rolb
mov
add
pop
sbb
pop
lock
ja
cmpsl
std
add
mov
add
cld
sbb
mov
jns
into
aaa
lret
movsl
pop
mov
pop
mov
push
into
add
and
adc
daa
mov
xor
pop
out
or
mov
popa
sbb
ss
lret
es
lods
popa
es
sub
lock
sub
fbld
inc
stos
adc
dec
outsl
ret
lock
xlat
pop
iret
pop
xlat
imul
rorl
lock
out
pop
movsl
gs
stc
cmp
jmp
out
aaa
fsubrp
pop
and
dec
jp
dec
mov
mov
icebp
movsl
dec
mov
fsubrl
inc
cmp
xor
add
push
xlat
scas
push
in
inc
cwtl
push
pop
mov
shlb
cmpsl
pusha
flds
movsb
pop
sbb
and
mov
push
xor
cmp
dec
loope
fisubl
fldenv
mov
add
rcll
cli
cli
sub
xor
and
shll
xor
xchg
outsb
xchg
ljmp
xor
or
dec
push
adcb
jb
pop
pop
in
pop
loopne
pop
sarl
aad
sbb
pop
pop
sub
mov
leave
insb
and
jp
loope
xchg
xlat
xchg
xchg
add
xchg
gs
insl
test
daa
frstor
push
mov
xchg
fs
mov
mov
lods
pusha
push
add
dec
cwtl
inc
fwait
rolb
nop
inc
iret
sub
ficoml
lods
fisubrl
push
sbb
inc
mov
and
lock
rcrb
mov
add
mov
insl
xchg
das
dec
stos
je
lcall
push
test
inc
mov
or
ljmp
cmp
mov
xor
dec
adcl
popf
pop
xchg
into
cmp
fisubl
xchg
lahf
xchg
lds
hlt
int
push
fisubs
movl
ljmp
dec
jne
mov
cmp
dec
das
aad
and
test
cs
fsubl
lock
pop
push
sahf
sbb
ret
shll
data16
popfw
insl
pusha
dec
xchg
dec
cmpsb
js
shll
jg
mov
into
jge
inc
cmp
dec
pop
mov
jo
arpl
mov
sbb
je
js
rcrb
lret
add
stos
inc
cmpsb
fldl
lcall
xchg
xchg
jle
clc
gs
data16
jns
subb
sbb
dec
aam
call
xchg
add
mov
lcall
daa
fsubl
jp
sub
mov
loopne
push
cmpsb
add
cltd
pop
test
addr16
push
xchg
out
adc
and
gs
sub
imul
scas
pop
das
in
sbb
pop
movsb
jge
dec
stc
in
cmp
dec
xchg
push
incl
fwait
subl
push
add
std
in
jecxz
cli
push
xor
lret
inc
mov
xchg
sub
pop
inc
or
inc
sub
test
les
pop
pop
out
call
lock
push
push
xorl
push
leave
fstl
jge
dec
pop
push
stos
jno
out
inc
shrl
movsb
push
jns
sub
cmc
jno
pop
jge
xor
jge
sahf
je
shll
dec
xchg
ss
in
jge
adcb
test
jg
dec
jecxz
sahf
sbb
mov
es
popf
insb
and
cmp
and
loopne
mov
push
stc
fstps
out
fildl
roll
sahf
arpl
rclb
jns
test
and
pop
fs
add
sbb
fwait
and
cmp
imul
mov
sarb
jno
addr16
add
insb
or
jns
flds
mov
fstpl
mov
lret
int3
push
lock
jecxz
add
jno
loop
cs
sar
dec
test
imul
dec
xor
cmp
repnz
in
push
pop
test
or
push
aam
addr16
xchg
hlt
pop
scas
aam
das
push
mov
sub
cmc
mov
sub
pop
clc
xor
mov
lea
hlt
test
ds
sbb
push
sbb
lods
mov
jns
dec
cld
sub
xor
mov
dec
jo
pushf
adc
xchg
push
stc
cmpl
in
push
out
sbb
das
rcll
popa
in
pop
and
add
bound
mov
xor
mov
add
push
mov
pop
xchg
jae
xlat
xor
and
out
idiv
call
in
cmp
jno
lods
pop
mov
cmp
jae
jge
decl
or
mov
and
or
rcrb
jne
jnp
ret
in
sbb
or
fdivrl
out
in
aas
rcll
and
lods
outsb
lcall
insb
lock
mov
push
mov
movsl
std
sbb
jae
insl
in
xor
addl
dec
mov
push
add
mov
aaa
popa
pop
popf
push
lret
inc
mov
mov
push
push
mov
out
mov
jp
sbb
xchg
shrb
lea
pop
mov
pushf
pop
add
cltd
adc
aaa
push
sahf
or
pop
jmp
and
popa
fisubs
imul
and
mov
out
fistpll
adc
pop
adc
fiadds
lret
xchg
fsubl
rolb
xor
cmp
aas
rcrl
mov
enter
inc
xchg
daa
loopne
mov
fnsave
mov
in
push
and
loopne
cmp
rcrl
test
lret
fisttpll
imul
sub
inc
lret
lret
aas
jp
push
in
inc
lcall
orl
add
cmpsl
push
and
xor
adc
int3
pop
mov
sbb
sbb
sbb
push
mov
fiaddl
popf
jecxz
out
pushf
gs
mov
lret
xor
rol
leave
jecxz
sub
sti
rclb
movsl
dec
mov
and
jmp
std
mov
roll
imul
sub
add
lods
dec
mov
fwait
dec
roll
inc
lea
adc
xor
push
add
movsl
into
mov
sub
daa
sahf
inc
mov
sbb
push
test
stos
fdivrs
js
imul
add
stos
inc
or
adc
sub
xchg
push
push
push
lods
mov
fwait
sbbl
inc
pop
dec
fnsave
rolb
push
sub
movsl
icebp
add
pop
loop
jnp
push
mov
cmp
stos
mov
pop
rcrb
jge
insb
rorl
fimull
adc
clc
jmp
jg
stos
fcmovne
jp
push
push
into
mov
arpl
jle
cmp
push
inc
add
int
enter
test
add
xor
aad
aam
pop
std
push
push
shrb
xor
dec
aaa
testb
testb
and
push
mov
sbb
adc
out
and
push
stos
and
cmpsl
pop
mov
dec
mov
and
inc
mov
lods
addr16
fildl
popl
repnz
popl
call
mov
lds
jne
pop
loop
call
pop
mov
dec
mov
pop
sbb
push
stc
repz
mov
dec
mov
pop
fwait
into
and
into
out
mov
hlt
and
shll
ret
outsb
repz
rcll
mov
xlat
jge,pn
mov
inc
fisubrl
popa
fs
adc
fs
sub
and
jae
sub
xor
sub
icebp
pop
insl
push
mov
dec
rolb
mov
mov
adcl
jmp
or
mov
orb
push
fimuls
cmpsb
rolb
dec
lahf
imul
add
or
xor
jnp
lock
cmp
mov
pop
sub
mov
int
test
xchg
cli
mov
mov
data16
ds
push
lret
push
mov
leave
or
cmp
or
sahf
or
jnp
cltd
cmp
mov
arpl
mov
cmp
aas
cmp
and
mov
pop
rclb
fisubs
sbbl
das
mov
bound
mov
std
adcl
pushl
data16
add
lock
out
out
and
xchg
mov
je
jle
decl
stc
push
dec
insl
jmp
inc
xor
insb
packssdw
jne
add
jmp
cmpsb
jo
daa
out
shll
xlat
fdivl
xchg
inc
xchg
pusha
adc
int3
cwtl
rcr
cld
test
mov
mulb
loopne
pop
xchg
gs
repz
ret
lcall
aam
out
lea
cmc
lods
add
sbb
dec
rorl
jge
shll
mull
das
dec
mov
xor
lea
sbb
xor
or
sbb
sub
mov
cmpsl
push
stos
pop
lea
lcall
xchg
testb
loope
cmpsl
adc
jns
cwtl
xchg
ret
or
jle
lcall
push
aam
push
jmp
adc
cltd
mov
imul
je
pushw
frstor
jl
ljmp
and
and
pop
fdivp
leave
cmp
and
lret
and
stos
fmul
inc
pusha
jb
outsb
cmpsb
adc
mov
push
adc
mov
dec
push
test
in
pop
nop
scas
jae
and
ret
in
pop
sub
aas
push
pushf
inc
mov
sub
les
pop
stos
push
lret
nop
aad
sub
xchg
fistpl
dec
xchg
fistpl
ffreep
popa
loopne,pt
cbtw
jbe
lods
xchg
dec
movsb
pop
lret
stos
aad
sti
pop
cmpsb
ja
xchg
mov
fcomps
and
in
subl
int3
xchg
xor
and
leave
mov
insb
xchg
pop
sub
adc
or
test
jb
xchg
sub
ret
add
and
and
sub
mov
shrb
sbb
cmp
in
nop
sbb
or
leave
jno
inc
loopne
jle
cmc
inc
imul
loopne
add
pop
xlat
mov
stos
mov
cmc
mov
lock
call
mov
mov
mov
loop
mov
icebp
inc
jge
rcrl
sbb
push
outsl
addl
add
and
and
jae
pop
in
jns
inc
lret
out
sbb
mull
outsb
mov
jnp
bound
adc
mov
xchg
push
add
aaa
jnp
inc
sbb
push
mov
dec
stc
aad
es
movsb
or
sub
out
nop
jge
repz
lods
and
addr16
xchg
test
fwait
or
sub
stos
ficoms
mov
sub
xchg
arpl
bound
lcall
loope
push
sub
nop
cmp
es
lahf
and
pop
outsb
out
ja
jnp
dec
popa
jb
mov
fs
imul
sti
outsl
jno
adc
push
inc
push
sbb
lcall
cmp
xor
sub
ja
jb
xchg
adc
cli
push
inc
add
sub
dec
adc
daa
inc
popf
outsl
inc
jmp
pop
inc
in
pusha
push
daa
fdivrs
pop
mov
cmc
les
mov
popa
ds
js
je
mov
fdivrl
fisttpll
fidivl
movsl
mov
test
out
xchg
and
jnp
xchg
loope
xchg
push
mov
in
test
lret
insl
jb
pop
das
jge
int3
popf
scas
es
out
inc
adc
rolb
leave
lods
jl
icebp
mov
stos
xchg
and
sahf
sbb
lcall
push
and
out
in
out
fwait
mov
sbbl
lods
aas
pop
inc
sub
icebp
adc
test
sub
sub
mov
pop
sti
and
and
dec
loop
push
je
mov
ljmp
xorb
jbe
into
sub
cmc
push
mov
sub
dec
xchg
dec
sbb
lods
fisubrs
pop
mov
inc
mov
sbb
or
fbld
cli
xor
push
mov
in
sbb
push
lcall
or
jg
mov
lahf
fcoms
in
pop
mov
push
scas
cmp
xlat
inc
mov
mov
push
cld
xchg
scas
je
push
subl
dec
sub
push
mov
mov
mov
jp
shlb
cs
in
lods
push
xor
jns
shll
xlat
movsl
mov
aad
in
imul
xorb
pop
mov
pop
loope
aam
enter
in
loop
js
sbb
mov
movsl
xchg
imul
loopne
adcl
jp
hlt
lods
jnp
push
dec
mov
test
add
mov
pop
rclb
rcrl
mov
or
adc
xchg
mov
mov
js
jmp
in
mov
mov
xchg
or
cs
and
push
cmpsl
outsl
cwtl
sbb
xchg
stc
outsl
mov
loop
cmp
pop
outsl
push
mov
leave
aam
and
pushfw
inc
mov
xor
repz
into
fwait
pop
mov
pop
lods
cmp
arpl
xchg
lret
subb
aad
lods
jno
fcomps
mov
mov
push
stos
pop
fisubs
es
hlt
inc
fucom
nop
and
push
clc
leave
cwtl
outsb
mov
xchg
sbb
add
and
imull
sub
ret
xlat
das
repnz
dec
cmp
out
hlt
xor
sarb
and
fstpl
repnz
inc
arpl
xchg
cltd
notl
js
dec
push
cmpb
sub
es
or
sub
orl
out
gs
sti
fnsave
les
and
dec
jl
lret
fs
or
ss
jnp
or
frstor
ret
sub
xor
test
inc
pop
and
inc
repnz
popa
mov
fsubrs
shll
test
xlat
xor
xor
sti
es
sbb
das
hlt
mov
add
aam
push
jae,pn
repz
sbb
mov
mov
mov
add
dec
cmp
insl
iret
mov
xor
call
insl
imull
pop
insl
rclb
add
pop
out
and
push
pop
repz
fidivl
cmp
std
fstpl
stos
clc
das
mov
inc
inc
pop
cmp
inc
bound
js
cmp
cwtl
mov
inc
pop
pop
or
mov
pop
inc
das
arpl
pop
pop
xchg
dec
or
mov
loopne
dec
lods
xchg
jnp
push
sbb
hlt
gs
jb
xchg
loop
push
xor
mov
pop
dec
loope
jb
roll
cmpsb
mov
lret
iret
mov
jb
push
push
or
dec
adcb
fprem1
stc
lea
lret
add
repz
stc
nop
xor
inc
shr
out
cmp
andl
int
push
data16
lcall
push
jb
in
or
test
ja
stos
arpl
pop
lock
sub
xchg
mov
xlat
inc
pop
xor
fsubr
jo
ljmp
dec
loop
or
push
repz
jae
and
sub
jecxz
push
fiadds
in
imulb
sbb
aam
fcoml
mov
xchg
pop
xchg
or
movsl
ja
dec
pop
icebp
lods
fs
push
or
xchg
pop
mov
jnp
pop
push
xchg
insb
divb
sub
mov
dec
sbb
icebp
cmpl
push
sar
repz
mov
arpl
std
rclb
stos
pop
xorb
shll
mov
lods
pop
ret
shr
adc
mov
fwait
bound
cwtl
pop
stos
mov
push
dec
jo
push
cmp
sbb
popf
lret
ss
xor
dec
rorl
test
push
daa
pop
fstp
inc
xor
out
fcmovu
les
ror
stc
and
sahf
insb
sbb
std
sbb
xor
mov
mov
in
cwtl
sbb
lret
or
lcall
dec
icebp
jp
dec
sti
mov
cwtl
or
inc
jo
test
shll
sub
shlb
movsl
int3
inc
jns
sub
sahf
jo
mov
popf
cmp
enter
nop
mov
xchg
insb
xor
mov
pushf
rolb
and
cwtl
loope
cwtl
out
das
adc
inc
clc
fistps
adc
xchg
js
push
daa
adc
or
scas
jmp
dec
mov
xor
xor
xchg
rclb
je
imul
push
jbe
bound
jp
lea
shrb
rclb
das
negl
loop
push
out
leave
cmpsl
stos
daa
int
cmp
mov
aaa
push
pop
sbb
cmp
sti
cltd
pushf
cmp
imul
mov
adcb
imul
cwtl
shll
jae
sub
add
pop
adc
sbb
dec
int3
and
andl
push
sbb
jo
fistpll
rcll
clc
mov
lret
ret
xchg
sub
sub
cmp
lcall
inc
scas
xchg
push
pusha
xchg
rcll
dec
cltd
push
push
xchg
xchg
aad
push
and
xchg
gs
aam
imul
fs
mov
push
mov
outsb
mov
and
pop
add
notb
mov
das
and
fwait
sbb
lcall
fprem
sbb
mov
aad
or
push
sahf
imul
mov
jl
jno
push
xchg
aam
rolb
sub
fcoms
jmp
mov
push
repnz
adc
and
inc
sahf
ljmp
and
lahf
das
and
push
int3
add
sub
pop
shll
in
notl
loopne
pop
inc
mov
sbb
and
fnstsw
dec
mov
cld
dec
outsl
fidivl
in
sbb
aam
mov
das
cmp
fcomps
out
leave
mov
data16
cltd
xor
jl
xchg
jnp
sarb
adc
stos
inc
cmpsb
cmpsb
xchg
or
iret
into
push
arpl
mov
mov
arpl
enter
mov
rolb
mov
inc
movsl
xor
loopne
jbe
aad
inc
mov
xchg
add
insb
mov
das
arpl
jecxz
dec
movsl
inc
xchg
inc
add
xchg
jecxz
mov
lods
mov
loope
pop
adc
sub
es
sub
jg
sbbb
ss
mov
mov
xor
sbb
jl
lods
push
bound
nop
pop
pop
ds
xor
repz
mov
test
out
sub
loope
cmp
icebp
jb
cld
mov
out
mov
mov
adc
push
leave
cwtl
mov
dec
jp
enter
in
icebp
out
scas
xchg
mov
pop
pusha
pop
xchg
push
mov
pop
gs
mov
mov
fwait
mov
inc
aam
xchg
lcall
jne
mov
fimull
lahf
ret
jns
xchg
cmpsl
negb
popa
mov
xor
mov
mov
adcl
imull
cmp
sbb
adcl
out
fisttpll
mov
xchg
mov
mov
fwait
nop
mov
ja
xor
jg
ret
adc
xchg
jle
pop
out
cmp
add
stc
repnz
mov
scas
and
xchg
test
pop
inc
std
leave
inc
and
adc
cs
mov
pop
ret
frstor
xor
add
jo
scas
inc
js
cmp
mov
loope
int
xchg
sbb
cs
adc
cmpsb
ret
enter
repnz
sbb
mov
shrl
xor
shll
mov
cltd
test
push
lahf
mov
sub
inc
pop
sub
lods
std
jno
and
imul
jne
hlt
dec
sahf
cld
stc
adc
add
xor
out
jmp
stos
sbb
mov
push
adc
or
inc
cmp
mov
movlps
inc
and
sbb
sbb
or
push
mov
gs
pop
pop
loope
push
scas
fbld
stos
pop
popf
lret
xchg
divb
push
fcmovbe
add
fwait
add
sub
test
gs
outsl
mov
insb
nop
adc
movsl
sbb
test
lods
pop
and
into
xor
insl
mov
notl
lahf
jae
fildl
icebp
movsl
sbbb
fnstenv
into
insl
adcb
sahf
frstor
repz
stos
xor
push
adcb
clc
ja
in
lahf
movsl
pop
lock
nop
ret
push
sub
ficompl
and
outsb
sti
pop
mov
jecxz
cmc
inc
aas
repz
push
scas
insl
lock
mov
daa
mov
jo
insb
jg
and
xor
lods
scas
jae
inc
sbbb
insb
xor
xchg
mov
jo
aam
orl
popa
es
enter
pop
lahf
in
pop
lret
andl
xor
and
cmp
loopne
xor
mov
add
ret
cmp
cmp
add
stos
test
popa
ficomps
or
or
mov
cmp
je
pushf
int3
fs
dec
xchg
rcrl
ljmp
stos
repz
loopne
fcomip
jnp
jnp
pop
add
jp
enter
scas
pop
mov
mov
divl
mov
lret
je
fs
mov
icebp
cli
dec
loope
mov
icebp
loope
lds
hlt
ret
sbb
mov
mov
push
push
xchg
jb
inc
int3
adc
test
xchg
or
mov
cmp
xchg
pop
fisubs
xchg
sub
xchg
add
jno
inc
xor
mov
adc
mov
dec
dec
add
dec
or
sub
out
shll
inc
xchg
sbb
lds
shlb
in
xchg
ljmp
mov
sbb
sahf
insl
adc
or
inc
mov
sub
test
xor
xchg
stos
jnp
in
loop
shrl
ret
rorb
insb
stos
push
in
mov
stos
addr16
outsb
add
mov
lret
or
inc
mov
cmp
push
lahf
cmc
popa
mov
push
inc
inc
mov
fdivrs
loopne
jb
out
les
imul
add
dec
arpl
inc
add
mov
jecxz
sbb
rorl
arpl
pop
repnz
out
xlat
jle
push
or
shll
xchg
adc
int3
aaa
roll
mov
mov
cmpsl
inc
sub
push
jnp
cmp
inc
pop
ret
cmp
subl
std
sub
xchg
pushf
inc
xchg
mov
add
jl
stos
in
xor
push
lea
add
je
push
in
and
mov
dec
pop
lock
mov
mov
cmp
imul
sarl
cmpsl
xchg
add
repnz
mov
aaa
lea
std
dec
movsb
test
mov
mov
push
int3
mov
ret
pop
sti
inc
sub
xor
jle
loop
mov
mov
fs
inc
shl
jno
arpl
jns
jno
sub
repnz
adc
and
jecxz
int
push
push
stc
and
jg
inc
cmp
pop
pop
fcomi
and
cltd
arpl
popf
leave
pop
loop
hlt
push
repnz
add
out
sbb
insb
push
out
lret
mov
or
xchg
sahf
arpl
sub
shll
mov
pushf
mov
loopne
pop
fidivl
and
push
pop
mov
clc
or
aad
mov
mov
fsubrs
lds
push
mov
scas
fildl
stc
or
xor
xor
mulb
mov
stos
lds
insb
aaa
fwait
gs
jg
push
test
add
lret
aad
mov
cli
xor
repz
xchg
lea
pop
pop
push
movsl
jmp
aad
push
insb
cmp
mov
andb
jp
rolb
adc
inc
mov
mov
das
sbb
leave
out
or
shl
jnp
or
pop
into
outsl
int
mov
pop
daa
mov
cmc
clc
popa
fnstsw
add
or
pop
jle
orb
lods
mulb
in
add
loop
cmp
mov
sbb
mov
rcr
sub
sbb
sahf
rcrb
rorb
adc
add
imul
sbb
pop
ss
sub
test
sbb
adc
push
jno
dec
scas
pop
mov
push
or
pop
adc
and
stos
pop
xchg
sub
push
in
lock
sub
subb
mov
adc
mov
call
loopne
hlt
pop
push
pop
and
jmp
sbb
pushf
rol
pop
addr16
loopne
mov
outsb
xor
inc
adc
mov
push
or
fcomp
xor
negb
cwtl
sub
lcall
fistpll
lds
in
ret
or
adc
mov
fcomps
xor
xor
outsb
xchg
fisttpl
mov
push
in
ret
sbb
cmp
or
gs
cmp
repnz
imul
jns
rcrb
add
xor
mov
icebp
pop
pop
dec
sbb
loope
or
mov
xchg
clc
imul
fdivrs
adcl
xor
imul
or
aad
lahf
fldenv
sbb
mov
mov
push
cmp
jg
xchg
int3
out
sbb
mov
cmp
jmp
and
sti
xor
and
xchg
push
test
adc
mov
cmp
stos
insl
xchg
sti
pop
inc
mov
cltd
nop
out
mov
in
cmpsb
add
pop
imul
dec
cltd
cmc
or
int
add
sub
xchg
xchg
jecxz
lds
mov
xchg
ret
cmp
loopne
fpatan
test
fisubrl
mov
mov
test
in
or
lret
mov
sub
cmp
pop
and
push
aam
insb
out
sbb
mov
addl
out
sbb
mov
xchg
fisubrl
xchg
mov
pop
mov
cli
and
sbb
inc
xchg
or
pushf
cmp
sti
ds
pusha
push
test
insl
lcall
push
xchg
mov
mov
sbb
cs
loopne
mov
push
cwtl
adc
and
daa
fistpll
add
pushf
and
std
ret
inc
aas
rcr
out
jnp
cltd
insb
push
ljmp
sbb
popf
jns
fnstcw
int
outsb
xchg
push
jb
daa
aas
pop
mov
push
and
mov
andl
jbe
jge
lods
loop
jl
repz
and
jle
push
pusha
add
or
push
sbb
and
ljmp
dec
mov
pop
lods
push
insl
xchg
xchg
dec
sub
gs
lods
or
ljmp
lret
mov
add
in
or
je
xor
cltd
dec
fsubs
mov
jns
leave
sub
test
mov
shll
imul
shrl
imul
sub
nop
add
sbb
pop
dec
fistps
pop
xchg
data16
push
std
or
rcl
sbb
jp
out
cmp
fistpll
jae
roll
jle
int
or
adc
lahf
movsb
imul
adc
leave
sbb
pop
add
add
push
js
sub
inc
shr
pop
cmp
pop
add
lret
push
mov
out
add
cmp
sub
fidivs
gs
repz
in
jne
in
cld
je
mov
xchg
clc
sub
out
inc
add
add
dec
sbb
dec
cmp
or
mov
xchg
mov
and
push
in
arpl
ja
xchg
jns
stc
lcall
sub
sbb
add
ljmp
adc
mov
xchg
push
out
add
push
or
xchg
call
arpl
mov
int3
in
or
fmuls
push
pop
adc
mov
inc
lods
pop
add
cmp
jge
mov
outsl
push
pop
ss
sub
popf
sti
dec
pop
lods
mov
bound
aam
xor
ret
scas
sbb
cwtl
fstl
mov
subb
lds
fs
or
pop
test
sbb
add
mov
int
push
mov
jbe
test
cmp
push
lock
sub
push
pop
and
daa
outsb
mov
rcrl
ret
xor
fisubrl
out
sbb
jge
add
jle
sub
into
sahf
push
jo
arpl
scas
idivb
into
xor
out
jnp
aad
push
out
int3
enter
mov
jne
das
and
ret
xor
in
mov
in
imul
fbld
fldl
fldt
or
xor
xchg
mov
jo
add
int
loope
push
std
xlat
test
fadds
int3
cmp
push
movsb
das
adc
cltd
fimuls
push
pop
or
outsb
push
pop
fidivl
cltd
inc
ret
mov
cmp
pusha
pop
pop
mov
shll
js
lret
cwtl
int
imul
leave
sbbl
fnstcw
add
mov
push
arpl
icebp
dec
and
xlat
in
and
sub
xchg
js
out
and
mov
out
pop
test
lds
in
ret
xchg
sarb
int
jp
out
filds
cli
mov
das
ds
push
fwait
insb
sub
and
gs
xchg
mov
incb
push
xor
sub
imul
mov
movsb
les
jmp
mov
cmp
shrl
outsb
pop
cmp
cwtl
mov
stos
je
iret
adc
nop
sahf
sub
jp
mov
aam
sub
and
insl
and
cmp
js
add
push
lds
out
push
iret
pusha
mov
pop
inc
fwait
jg
mov
in
mov
pushf
jmp
sbb
jbe
jl
mov
dec
arpl
scas
test
and
or
jb
fldenv
outsb
sub
jmp
fcmovb
int
cltd
icebp
out
xchg
scas
scas
flds
or
scas
faddl
loopne
imul
cmpsl
lods
cmpsl
lret
jp
cli
test
sarb
pop
jle
daa
dec
clc
and
popa
ret
pushf
sti
lret
nop
push
dec
jns
leave
pusha
push
fcompl
inc
or
scas
inc
mov
mov
push
inc
inc
push
into
and
sub
enter
loop
ds
notl
popa
test
ret
insl
xlat
pop
data16
cmp
inc
je
test
pusha
pop
rcll
repz
mov
shrl
mov
add
add
cs
ljmp
add
push
rolb
fs
jb
sahf
push
dec
sbb
cmp
lods
adc
pop
pop
int
cmpsl
pop
pop
and
sbb
xchg
test
popf
popa
mov
mov
pop
adc
jl
lret
push
in
movsb
pop
push
adc
lock
or
sbb
inc
mov
push
jo
xchg
mov
lret
clc
xor
test
or
pop
fdivrs
push
orb
push
ds
shl
or
mov
hlt
aam
dec
sub
ja
ret
sti
xlat
mov
test
sbb
xchg
push
outsl
leave
add
inc
inc
xchg
xchg
das
cmp
add
dec
mov
mov
sub
inc
outsl
push
fidivrs
mov
mov
xchg
pop
shll
push
mov
jbe
add
add
std
xchg
outsl
roll
add
bnd
inc
and
xchg
jo
sbb
push
ret
cltd
mov
push
adc
cmp
xchg
repnz
adc
and
cmpsl
fisubl
pop
adc
jecxz
push
cwtl
ja
subb
mov
pop
test
insb
or
sbbl
xor
test
push
out
push
pop
push
rorl
rolb
out
dec
stc
push
xchg
scas
dec
std
inc
sbb
cmp
mov
dec
sbb
and
loopne
aad
jmp
cmp
inc
lods
pop
lds
sbb
cmc
xchg
mov
stos
stc
outsb
aam
lock
lods
out
sub
add
jecxz
mov
dec
or
sarb
adc
cmp
and
pop
loop
sahf
call
jp
xchg
pop
lods
sub
shrb
mov
xchg
daa
mov
int3
or
or
imul
cmp
punpckhdq
je
test
push
ds
jg
aam
dec
xor
popa
call
and
push
xor
nop
adc
push
xchg
pushf
lahf
leave
push
push
stos
jp
loopne
imul
xchg
stos
in
jne
cmpsb
jae
mov
pushf
add
faddl
mov
xor
sub
mov
mov
rcr
adc
outsl
push
lds
push
inc
dec
xor
jg
jb
cs
into
xchg
mov
sub
add
cld
fdiv
aam
xlat
fistl
mov
es
cmc
push
rorb
lss
lods
lods
jns
dec
xchg
and
jne
dec
ja
out
jbe
dec
jl
fsubl
outsl
insb
xor
pop
daa
lea
inc
inc
addr16
fsubr
push
mov
inc
addr16
cmc
mov
das
add
inc
into
xor
dec
into
inc
insl
das
xchg
xor
int
pop
and
in
lret
test
or
sbb
int3
push
fdivs
icebp
dec
mov
add
cmp
cmc
inc
pop
adc
pop
or
cmpl
inc
imul
adc
mov
push
inc
iret
fcompl
pop
push
dec
mov
int
cli
aam
nop
sbb
and
out
inc
out
lea
mov
xchg
sbb
xchg
sub
faddp
ret
cmp
jbe
fistpl
mov
insb
and
shl
jle
adc
dec
mov
push
fisttpll
xor
xchg
pop
mov
fldl
subb
cltd
mov
dec
dec
aam
jnp
into
mov
daa
out
lret
dec
mov
pop
mov
mov
xchg
dec
jge
mov
subl
fldt
out
mov
into
daa
push
sbb
pushf
and
mov
xchg
or
pusha
int3
pop
ljmp
add
push
loope
cmp
mov
xor
sub
pusha
dec
jp
cmpsb
pop
shr
inc
mov
xorb
gs
aam
jbe
xchg
jmp
int
and
ret
xor
cmp
das
fiadds
inc
scas
adc
cs
fwait
push
xchg
push
std
push
mov
mov
int3
test
xor
outsl
ljmp
test
mov
inc
in
lret
jb
mov
lea
cmp
out
sbb
add
push
sbbb
test
hlt
cmp
stc
pusha
out
sub
jb
lods
xchg
mov
fwait
mov
mov
lea
and
dec
or
fs
xchg
inc
jae
jns
popf
loop
sbb
mov
xchg
ljmp
aam
xor
push
test
ret
aad
and
pop
aad
and
push
int3
shl
jp
into
loop
call
pop
sub
mov
mov
adc
xchg
mov
out
bound
loopne
add
sub
subl
popa
adc
fwait
and
jno
sub
lods
xchg
push
mov
sbb
dec
andl
in
out
xchg
and
test
mov
rcr
mov
data16
movsl
cmp
jg
cmpsl
mov
xchg
cmc
dec
push
pusha
cmpsl
int3
aad
insb
and
fldcw
cmpsb
sbb
mov
cltd
insb
fistl
inc
lahf
cmp
fidivs
jae
ret
mov
add
stc
add
pop
jecxz
add
cmpsb
scas
insl
sarb
daa
out
ret
fstl
or
and
insl
and
xchg
mov
stc
inc
xor
and
xchg
leave
cmp
cmp
fadd
push
sub
jno
insb
cmp
dec
sbb
sub
pop
mov
divl
and
jl
insb
mov
pop
bound
push
mov
and
xor
js
sub
ret
mov
in
inc
loopne
inc
popa
mov
xchg
xchg
outsb
popf
push
inc
push
call
rsm
xor
rorb
mov
adc
mull
or
sbb
cmp
sub
mov
les
out
adc
sbb
xchg
add
xor
das
xchg
pop
int3
mov
push
pop
bound
push
jg
sub
xchg
lret
je
and
dec
dec
push
dec
pusha
mov
inc
and
adc
clc
inc
loop
or
lods
enter
or
dec
dec
dec
addr16
cs
cmp
pop
divl
std
add
add
aas
mov
aam
or
xchg
sbb
jge
insb
sti
push
mov
add
in
sub
popa
stos
and
ja
adc
lods
or
test
xchg
xlat
orl
aas
test
push
nop
imul
addb
jnp
xlat
sbbb
inc
push
sub
hlt
xchg
jmp
jg
sub
jns
pop
std
inc
std
sub
or
or
iret
add
xchg
ret
jmp
xchg
ret
jp
loop
pop
scas
adc
inc
and
dec
js
rcrl
push
outsb
rclb
nop
roll
jmp
dec
mov
or
gs
cli
pop
aas
xchg
mov
xchg
dec
xchg
add
movsl
or
inc
and
jl
jo
cmp
xor
in
sbbb
sub
cmp
and
push
jmp
shlb
in
push
adc
lock
out
addr16
pop
testb
loop
pop
int
fnstenv
mov
lock
and
clc
loope
nop
int
sub
jae
mov
mov
and
mov
outsb
cs
add
push
mov
dec
push
sbb
mov
loope
ror
mov
mov
jne
cmp
aad
lcall
shlb
ss
add
xor
pusha
cmpsl
repnz
pop
push
inc
daa
stos
fwait
in
push
in
out
repnz
or
shlb
cltd
shlb
mov
pop
jae
cmp
or
cmpsl
aam
stc
push
jl
mov
sub
adc
roll
test
jno
test
inc
mov
sub
inc
scas
sbb
mov
xchg
jbe
loope
ja
inc
out
scas
sub
push
sbb
mov
adc
and
out
test
and
inc
inc
dec
push
into
popa
inc
test
push
pop
jns
jg
aam
outsl
xor
mov
cmpsb
push
mov
les
fldl
cs
jns
lahf
pop
movsb
or
ret
cs
clc
sahf
jns
pop
sub
xor
nop
shll
hlt
lret
es
enter
lods
daa
leave
cmp
mov
icebp
fmuls
inc
in
sub
jb
adc
pop
lods
or
loop
jg
mov
dec
lock
sbb
dec
xlat
lds
in
iret
push
cltd
mov
cmp
mov
shlb
jle
cmpsl
test
adc
insb
out
cmp
cmp
inc
aad
daa
out
pop
push
mov
cmpsl
jle
pop
add
push
pop
andl
add
mov
imul
adcb
add
mov
push
mov
jo
loopne
test
xor
aad
or
pop
frstor
mov
cmp
mov
or
push
daa
adc
mov
lcall
addr16
fnsaves
and
adc
mov
sub
in
push
aas
sarl
scas
das
add
sahf
pushaw
int
fnstsw
out
shr
ror
fsubr
sbb
scas
xchg
and
mov
pop
or
clc
popf
bound
mov
rorl
fisttps
test
push
mov
mov
and
mov
fildll
push
lods
sbb
jns
pop
std
xchg
pop
les
stos
sbb
popf
fdivs
pop
rcll
or
pop
xchg
int
or
inc
adc
addr16
mov
popa
inc
xor
sub
cmpsl
test
push
test
arpl
pop
jnp
pop
imul
cmp
mov
push
push
adc
imul
in
jl
mov
mov
insb
mov
daa
adc
pop
mov
aad
stos
pushf
push
sbb
dec
jl
xor
popf
nop
mov
mov
in
in
inc
push
jnp
outsb
pop
xchg
aas
xchg
mov
mov
pop
loope
jl
sarl
mov
mov
sti
and
sub
adc
mov
ret
or
loop
aas
ds
data16
ficomps
cmpsb
push
fninit
in
jmp
mov
mov
push
mov
push
negb
mov
add
lcall
std
jae
sahf
aam
sbb
in
stos
xchg
test
outsb
mov
loope
lcall
bound
sub
xchg
bound
and
mov
ret
insb
test
inc
push
sbb
cmpsl
jns
pop
push
push
pop
xchg
fmuls
xor
test
xchg
es
jb
imul
cltd
or
lea
xchg
int
push
lret
inc
sub
mov
pop
shlb
xchg
jp
pop
loop
loopne
push
fs
xchg
mov
push
push
push
scas
rorb
jge
jo
xlat
test
xchg
mov
jne
mov
decb
jo
shrb
mov
rcrb
ret
out
leave
ss
int
enter
xor
cltd
repnz
cmpsb
sbb
pop
mov
cmp
cli
loope
cmpsl
pushf
xchg
xor
sub
ret
out
push
jg
cmpb
incb
mov
imul
xor
cmp
add
push
shl
mov
addr16
in
add
pop
lret
jmp
push
or
push
and
xor
inc
inc
rcrb
and
test
mov
add
sbb
xchg
and
mov
push
incl
dec
test
loopne
xchg
xor
cmp
jmp
jl
stc
jle
je
dec
xchg
xchg
dec
mov
pushf
outsl
mov
int3
and
mov
dec
fiaddl
jns
dec
scas
fdivs
cmp
inc
in
test
push
mov
mov
out
or
jle
mov
push
cwtl
pop
sbb
xchg
out
jnp
jge
adc
filds
repnz
jle
enter
inc
stos
orb
mov
test
jmp
push
push
lock
cli
mov
fcomps
fstps
sub
nop
pop
sbb
aam
mov
adc
in
push
add
scas
cmp
outsb
andb
mov
cmc
loopne
dec
sub
jno
int3
lcall
mov
or
jne
mov
xor
xor
sbb
xor
or
push
sub
negb
pop
dec
movsb
aam
out
xchg
cmp
pusha
lcall
out
js
ficoml
xchg
mov
pop
and
cltd
mov
dec
mov
jecxz
adc
mov
cld
mov
mov
xor
xchg
test
shlb
mov
pop
mov
daa
xchg
ljmp
push
and
stos
cmp
xchg
inc
xchg
push
out
jns
pop
mov
push
ds
icebp
mov
je
sarb
cs
popa
cmp
sbb
enter
xor
or
pop
shrb
pop
mov
shr
je
sbb
test
daa
jle
dec
xor
add
mov
xchg
psubd
push
cmc
aam
insl
sbb
stos
pop
mov
mov
rorl
dec
dec
int
inc
in
fnsave
stc
pop
scas
or
and
cmp
mov
mov
xor
int3
xchg
lahf
shlb
and
fst
push
lock
pusha
xchg
bound
mov
mov
add
mov
out
inc
or
hlt
mov
stos
out
insb
xchg
lahf
mov
sbb
insb
xor
mov
sbb
mov
rcrl
std
jp
aas
mov
and
out
mov
sbbl
fwait
lret
push
cltd
insl
cwtl
loope
dec
xor
insb
jge
inc
mov
mov
scas
jb
jnp
rcll
dec
jle
jmp
inc
and
jne
int
mov
les
or
add
pop
int3
in
int3
jg
aas
faddl
gs
pop
jl
fdivrl
cli
sbb
jecxz
sbb
and
add
movsl
fdivp
pop
pop
lret
push
add
xor
roll
sbb
test
enter
xchg
sub
cltd
test
jge
pop
adc
sub
testb
fnstcw
outsl
xchg
ret
jo
dec
sub
scas
loop
shll
daa
adc
jmp
xchg
pop
lahf
xchg
test
mov
fisubl
mov
cmp
in
ds
sub
sub
xor
arpl
mov
jb
mov
sub
pop
add
nop
sub
push
mov
repz
and
push
je
fidivl
ljmp
xchg
out
outsl
pop
or
lea
insl
xchg
or
or
ret
inc
cmc
repz
add
inc
add
out
fwait
push
jbe
sub
mov
aaa
repnz
mov
cmp
and
fimuls
imul
cld
loop
lcall
outsl
sbb
sbb
jns
loop
mov
imul
pop
inc
in
arpl
aad
shlb
xor
repz
adc
fisubrl
mov
mov
cmp
stos
jne
jae
mov
leave
cmp
gs
mov
pop
loope
popa
sub
dec
jb
pop
jno
icebp
out
cwtl
pop
and
fmull
stc
add
sub
sub
inc
mov
pop
or
ret
pop
ret
push
test
shll
les
sub
pushf
xchg
outsb
test
fprem1
jnp
imul
mov
lret
inc
xor
pop
mov
cmp
cwtl
pop
aad
pop
shrb
nop
nop
jne
mov
or
lret
and
decl
aam
cmp
test
ret
cmp
push
jo
call
inc
sub
dec
outsb
xlat
cli
xchg
es
movsl
pop
lods
sar
addr16
scas
jp
and
insb
shll
mov
jno
into
movsb
xchg
or
hlt
xchg
jnp
cld
sub
and
mov
add
sbb
mov
sub
xor
sub
mov
lret
push
lahf
cmpsl
fdivrl
mov
outsl
arpl
xlat
shrb
imul
mov
push
sahf
data16
dec
jle
sub
adc
mov
icebp
out
shrl
inc
mov
jb
adc
cmp
push
ljmp
sti
data16
fwait
bound
inc
pop
mov
sbb
lret
xlat
push
sbb
mov
cmp
stos
lds
pop
test
jle
popf
sarb
sbb
adc
and
adc
loope
shl
dec
in
sar
loopne
mov
mov
loop
into
jne
movsb
adc
jecxz
sub
sbb
iret
cmc
fdivrl
xor
data16
push
loop
out
pop
popf
fldcw
fcomps
cmpsb
popf
mov
jns
jl
arpl
call
ds
adc
or
mov
lds
mov
movsl
test
push
and
push
push
xchg
icebp
andb
rolb
dec
jo
adc
cmp
xchg
jnp
cs
in
jge
xchg
jbe
add
adc
lahf
sbb
fsubrl
iret
sbbb
insl
mov
pop
int
fnstsw
popa
out
fdivrl
ja
int
bound
xor
mov
mov
stos
sbb
fsts
and
sbb
mov
sub
mov
or
popa
stos
sub
fistps
cltd
movsl
sbb
addb
cli
clc
testl
mov
fstpt
and
add
pop
push
dec
pop
clc
or
cmpb
add
push
lret
in
dec
dec
add
push
je
mov
mov
mov
les
cmp
lds
bound
shll
or
das
pop
cs
popf
test
pop
sarl
and
test
pop
push
add
test
addl
adc
push
les
cmpsb
icebp
dec
ss
or
adc
scas
mov
pop
andl
mov
loopne
loope
xchg
in
rcll
outsb
xor
add
push
hlt
mov
push
add
daa
out
adc
in
test
mov
loopne
movsl
imulb
push
pop
pushf
int
cli
push
pop
push
iret
pop
push
mov
pop
jbe
imul
pusha
das
jge
and
inc
lock
stos
es
daa
test
pop
jle
jo
sahf
outsb
es
inc
pop
lds
popa
sub
mov
or
cmpsb
cmp
push
js
and
movsl
popa
xor
mov
test
dec
push
enter
shrb
push
fsts
mov
rclb
pop
jne
push
mov
dec
dec
pushf
push
js
std
adcl
mov
xchg
pop
sbb
inc
ja
shlb
loop
push
movsl
fs
in
cmp
inc
mov
xlat
mov
or
test
xor
dec
mov
test
mov
shlb
mov
ret
lods
push
xor
jp
ret
pop
popa
out
jnp
aaa
imul
xchg
dec
mov
in
rdtsc
push
lret
sub
cs
into
lcall
add
addr16
roll
in
mov
subb
pop
out
xchg
mov
or
lret
into
fcomp
pop
enter
gs
push
xchg
fnstcw
lret
sbb
das
in
lods
movsb
loope
in
adc
orl
gs
subl
nop
and
jmp
mov
xor
lods
test
jecxz
cmpsb
xlat
andb
lea
inc
or
dec
cltd
cmp
mov
xor
xchg
xchg
sbb
cwtl
dec
xchg
das
xchg
mov
xchg
dec
data16
pop
xor
popf
jl
stc
cmp
repz
popf
rclb
in
adc
loope
lcall
movsl
mov
cmp
mov
repz
movsl
sbb
sub
lahf
push
xchg
stc
iret
scas
sbb
jo
mov
dec
mov
mov
dec
pusha
and
sti
pushf
add
inc
xor
adc
adc
adc
ja
scas
adc
retw
sbb
stos
aad
dec
fucomp
cmpsl
pop
arpl
stos
xor
xchg
pop
andb
imul
icebp
icebp
add
mov
fimull
shlb
pushf
imul
shrl
push
mov
fadd
jae
mov
mov
add
mov
and
sub
mov
xchg
pushf
or
iret
pop
jbe
cld
sbb
leave
mov
test
int3
xchg
jle
jl
xor
add
or
pop
pop
test
movsl
mov
xchg
cs
divb
repnz
fidivrs
push
mov
aam
push
adc
mul
mov
lcall
add
sbb
pop
iret
insb
inc
or
lods
jmp
daa
add
xchg
adc
push
adc
push
or
out
leave
fnstcw
mov
pop
ljmp
sbb
fisubs
adc
adc
das
ss
and
cmpsb
and
mov
in
jo
clc
sti
xadd
popa
and
pop
push
add
rcll
popa
movsb
mull
mov
sbb
out
and
and
test
into
cmp
scas
jns
ret
jb
sbb
mov
testl
lods
pop
ds
repz
push
or
dec
inc
mov
dec
xchg
sbb
xor
scas
sub
inc
mov
push
leave
test
in
outsl
popf
inc
xchg
xchg
daa
or
iret
xchg
shl
or
ss
push
mov
mov
fadd
mov
test
inc
test
push
cmc
shll
les
pop
inc
sbb
sub
int
inc
push
repz
pop
jne
out
hlt
and
cmp
inc
dec
push
lret
inc
mov
iret
cmp
add
mov
add
mov
je
outsl
andl
sbb
jecxz
cmp
xor
pop
enter
subl
and
pop
ljmp
shr
pop
loop
jmp
pop
jb
cmp
jns
scas
data16
fidivs
inc
pop
fxch
lods
push
lea
ret
test
pop
mov
inc
cmpb
sub
jg
add
fwait
pusha
cmpsb
push
push
int
std
and
lcall
mov
cli
nop
je
mov
inc
loope
mov
rcll
insb
sbbb
push
mov
addl
test
jbe
mov
push
arpl
jno
dec
scas
lcall
les
outsb
movsb
sbb
inc
iret
xchg
or
add
or
add
push
je
mov
ljmp
inc
in
fisttps
leave
or
sbb
cmp
inc
outsl
mov
into
mov
sbb
mov
xchg
push
xor
rorl
ljmp
push
push
cmc
arpl
popf
addr16
sub
fs
xor
fbstp
ret
fnstsw
scas
add
idivb
lds
mov
lods
inc
cld
pop
int
les
outsl
in
shrb
stos
push
stos
movsb
cmp
push
mov
jae
imul
inc
notl
jb
jae
fbld
lds
std
push
pop
shr
push
insl
cmpsb
jns
ja
push
adc
add
mov
inc
push
push
xchg
addr16
or
mov
mov
je
dec
das
jmp
movsb
bound
push
mov
orb
test
xchg
outsl
mov
mov
sbb
icebp
adc
jno
push
in
cmp
test
fisubrl
icebp
pop
scas
xchg
mov
testl
mov
nop
and
or
aaa
add
add
mov
xchg
je
mov
lahf
xchg
mov
xchg
adc
xchg
lds
iret
in
dec
fcomip
or
fmull
in
or
rcrl
xchg
jo
or
in
adc
mov
rorb
rorl
jbe
ss
pop
nop
ja
cmp
jb
dec
cld
pop
bnd
mov
aaa
dec
sbb
js
jg
stc
fsts
jnp
add
loopne
pop
movsb
inc
xor
add
sbb
leave
stos
in
xor
push
clc
test
ds
or
lcall
pop
dec
xchg
cmp
mov
js
jp
push
cmp
inc
sbb
shll
das
sbb
push
addb
ret
jp
das
cmp
into
xchg
and
pop
sbb
cmp
sti
in
mov
aaa
cli
mov
scas
push
in
and
nop
cmp
mov
dec
xchg
jne
inc
inc
mov
inc
ljmp
pusha
in
push
ret
cmp
std
pmuludq
lock
lret
pop
stos
adc
call
dec
mov
lahf
insl
lods
jg
jo
push
inc
xlat
xor
push
in
add
or
sub
dec
out
sub
jg
sbb
jnp
xor
std
or
das
stc
scas
mov
rorl
fdivs
mov
fistpll
mov
fcmovnu
iret
repz
int
and
pop
adc
xorb
fists
into
mov
jne
fs
sub
ss
movl
mov
mov
mov
jle
inc
repz
mov
outsl
std
and
loopne
stc
push
jno
scas
cmpsb
test
or
mov
sahf
mov
add
jle
jns
test
mov
popl
jb
mov
sarb
mov
add
add
pop
shll
ljmp
incb
add
mov
xchg
in
sbb
sub
mov
outsl
sbb
cld
cmp
or
adc
inc
or
aas
scas
stc
int3
arpl
lea
pop
imul
pop
jg
inc
cmp
dec
pusha
push
push
mov
in
mov
mov
mov
and
xorl
cmp
add
cmp
adc
mov
ret
push
clc
jp
jns
or
mov
cmp
cmp
lods
loop
repnz
test
jmp
stos
xchg
cmpsb
das
mov
jne
push
push
lock
xchg
adcl
int3
push
xchg
mov
mov
sub
pop
dec
jecxz
lds
pushf
mov
push
paddb
jae
je
lahf
out
sbb
jmp
inc
push
aad
xlat
pop
daa
add
xchg
adc
aad
sbb
ss
int3
loop
pusha
sbb
in
pop
jecxz
out
cli
test
es
sub
mov
jecxz
pop
sbb
ficoml
sub
fcomps
mov
push
sbb
jo
inc
mov
cmpsl
jb
jnp
in
pop
xchg
mov
divl
pop
jne
xchg
scas
mov
inc
pusha
stos
icebp
mov
mov
inc
xchg
inc
cmp
sub
in
and
fmull
into
cmp
or
dec
fiadds
xor
leave
or
out
or
sahf
aad
and
sbb
sbb
gs
aaa
xchg
insb
fsts
cwtl
sub
cmpsb
inc
sub
add
sbb
xor
aaa
std
cmp
push
fmull
ljmp
jbe
or
mov
fisubrs
movsb
in
cmpsl
sub
add
or
lock
daa
xor
or
sub
sbb
or
inc
mov
and
in
ss
push
aas
push
mov
imull
in
mov
xchg
pop
push
movsbl
fsubs
push
sub
leave
sbb
add
stos
pop
xchg
mov
fwait
popa
mov
jnp
pop
in
sbb
stc
inc
sti
pop
sahf
ds
fstps
popa
shrb
sti
push
lods
inc
lds
icebp
sbb
adc
and
fistps
pop
mov
bound
outsl
scas
outsb
cltd
inc
out
push
xchg
and
popf
pop
mov
mov
push
popf
fsts
aas
daa
sub
sbb
push
test
push
mov
jl
sbb
movsb
push
xchg
cs
cs
or
sti
fs
xor
dec
test
add
sub
sbb
jbe
push
popf
ret
pop
icebp
pop
mov
outsb
jbe
or
arpl
jns
add
mov
mov
test
xor
fcmovnu
adc
adc
arpl
jno
push
xchg
dec
aam
loop
add
stos
pusha
xor
outsb
sbb
imul
cli
dec
in
xor
bound
xor
data16
lahf
and
push
ret
xlat
cmp
jle
negl
adcl
fiaddl
hlt
sahf
and
inc
mov
adc
mov
pop
pop
test
mov
pushf
or
sub
int
mov
sub
sub
rcl
aaa
add
jno
jno
dec
mov
xor
sub
mov
lret
add
out
cmpsl
push
stos
sbb
cs
int
out
push
push
bound
pop
scas
addl
int
sub
int3
mov
xchg
and
in
add
lret
js
mov
push
hlt
fstpt
sbb
sbb
jp
mov
les
pop
test
mov
xchg
dec
xchg
insl
mov
jmp
es
jno
pop
das
xor
divb
rol
mov
sbb
pop
cmp
pop
loopne
jbe
fwait
movsb
sub
jmp
jl
movsb
mov
sarl
cltd
xchg
mov
mov
sbb
inc
adcl
dec
mov
pop
pusha
insl
dec
jge
pop
stos
movsb
push
in
in
addr16
xchg
pusha
iret
mov
or
xor
es
sbb
or
pextrw
xor
xor
cmp
add
adc
or
jmp
cld
xor
das
enter
stc
add
add
es
xchg
lcall
clc
sbb
lahf
leave
gs
insb
into
or
call
cwtl
adc
dec
mov
insb
mov
and
xor
dec
stos
jl
inc
mov
jno
je
adc
jne
shll
data16
sti
pop
mov
popa
sti
pop
jmp
stc
pop
call
adc
adc
daa
ret
in
mov
addl
xor
cmp
and
or
add
push
xchg
cli
sub
pop
outsb
ljmp
push
out
mov
mov
iret
jnp
add
inc
mov
lcall
mov
insl
sahf
push
cmpsl
mov
cmc
xchg
js
ljmp
cmp
gs
test
enter
xor
adc
int3
in
xchg
out
add
mov
enter
loop
add
adc
sbb
ffree
out
xlat
sub
xor
das
xor
dec
push
inc
out
fcomp
div
sbb
pop
and
shl
stc
mov
or
inc
inc
les
addl
iret
mov
xchg
mov
aaa
jbe
popf
test
stos
pop
cmpb
push
dec
imul
loopne
mov
push
push
mov
xor
xlat
int3
int
add
jg
jecxz
sub
in
int
out
shl
add
test
xchg
lods
sub
push
out
into
xchg
push
mov
mov
outsl
popf
jb
mov
dec
icebp
sbb
pop
out
xchg
sub
adc
rolb
xor
or
or
cs
dec
fiadds
and
cmp
sbb
lret
push
test
jge
cmp
push
test
xor
or
lea
inc
xchg
lret
es
jnp
push
mov
lock
icebp
and
sub
or
in
inc
push
repz
das
pusha
int3
sbb
lcall
ss
ret
inc
and
int
mov
mov
loopne
cmc
ja
xor
insl
aam
arpl
pusha
test
jbe
xor
je
dec
shlb
roll
sub
outsl
std
pop
pop
push
sub
sub
cmp
in
pop
fs
sbb
adc
pusha
or
sti
cld
fidivs
enter
aam
dec
sahf
test
mov
mov
inc
movsl
pop
adc
daa
inc
into
mov
inc
push
out
xor
icebp
mov
leave
mov
test
xor
sahf
xchg
add
mov
cmc
dec
mov
push
xchg
mov
lods
pop
insb
sub
shrl
in
shll
jne
add
push
push
mov
xlat
xor
lds
ret
or
or
fidivrl
sti
in
insl
test
das
add
ror
adc
xor
mov
adc
add
js
lret
push
add
mov
adc
pushf
push
push
fs
out
and
xchg
int3
orb
test
sti
cltd
pop
cmp
loop
inc
jns
in
dec
xchg
jb
aad
mov
lahf
pop
cmp
mov
xlat
cmpsb
jnp
inc
xchg
out
enter
les
pop
call
cmc
push
inc
repz
int
lock
cmp
mov
adc
or
clc
adc
sbb
xor
fwait
cld
sbb
popa
sub
pop
ss
std
cmp
scas
mov
lods
inc
pop
mov
or
push
inc
inc
dec
shl
mov
js
lods
mov
mov
sub
and
and
mov
loope
shlb
push
ret
inc
divl
xchg
and
fcomps
xor
sbb
push
mov
stos
mov
push
out
push
cmp
sbb
pop
add
cmp
inc
xor
jne
push
fcmovnb
add
out
mov
adc
cmp
cmp
jl
cld
xor
subb
aad
out
add
sub
pushf
scas
dec
sub
sbb
jo
mov
push
mov
les
push
push
fs
mov
test
dec
or
pop
test
xchg
or
aaa
sub
mov
push
cltd
clc
or
lods
mov
push
jo
cltd
aam
cmp
sub
aas
fstpt
xor
adc
push
sbbl
imul
addl
add
push
cs
xchg
scas
dec
int3
lret
inc
jg
mov
cwtl
cmpsb
loope
mov
pusha
jb
push
push
pop
push
dec
xor
xchg
mov
negl
adc
jb
in
ljmp
push
out
mov
testl
lods
xor
out
unpcklps
mov
repnz
pop
push
cs
jmp
aas
push
jns
pop
sbb
lods
stos
lcall
scas
aad
push
sub
pop
sub
mov
jb
ret
cmp
jb
fwait
push
ss
jnp
dec
ret
out
jnp
xchg
dec
or
adc
fucomi
test
bound
and
mov
je
mov
ja
pop
jmp
inc
out
aas
mov
loope
into
iret
xchg
and
push
fsubrs
ret
push
pause
lcall
jle
add
jae
add
sub
mov
aam
jb
dec
ja
and
mov
adc
jnp
aad
and
outsl
push
roll
and
push
and
cmp
and
adc
pop
and
and
push
call
fisttpll
in
inc
cmpsb
pop
cmpsl
movsb
push
out
je
cmp
inc
es
enter
mov
mov
bound
inc
frndint
cmpsl
jne
in
xchg
inc
outsb
loopne
mov
or
sbb
shll
rorl
dec
arpl
dec
jle
daa
jae
inc
xchg
jmp
inc
mov
fildll
add
fdivs
fdivl
jo
add
test
sub
mov
loope
rorl
test
int3
xor
pop
icebp
xlat
mov
lds
jnp
in
adc
inc
mov
imul
xor
pop
xchg
fstpt
mov
xchg
jle
or
cmpsl
hlt
dec
ja
sar
das
iret
mov
lods
sbb
daa
inc
pxor
and
imul
loope
stos
fpatan
mov
dec
push
repz
lods
out
push
je
in
lret
dec
mov
clc
sub
and
mov
jo
add
stos
dec
mov
das
mov
cwtl
sbb
pop
xchg
je
sti
test
loop
add
pop
pushf
dec
sbb
addr16
ret
dec
push
xor
add
mov
icebp
lret
dec
push
sbb
xchg
pusha
sahf
jo
pop
mov
rol
push
mov
cmpsb
add
push
mov
and
dec
sub
faddl
out
xor
dec
enter
or
xlat
push
mov
push
imul
dec
shll
pop
xchg
xor
or
pop
cli
and
mov
mov
je
int
shrb
aas
imul
push
testb
icebp
pop
loop
sar
lret
les
daa
adc
sub
mov
dec
ljmp
divb
mov
add
sahf
push
jg
ficoml
xchg
xchg
shlb
mov
add
test
mov
pop
aaa
sub
out
push
add
sub
bound
mov
leave
add
sar
cmp
adc
in
test
sti
sub
mov
int3
in
dec
std
ret
hlt
lock
loop
jmp
dec
sti
shl
stos
or
inc
jl
jo
stc
push
test
and
outsb
notb
sarl
push
loope
pop
insb
adc
lods
or
jns
clc
adc
insl
xor
ret
sub
cld
fldt
orb
inc
pop
rcrl
inc
retw
push
jbe
cmpsb
and
dec
inc
sar
insb
and
mov
jo
test
std
push
jl
mov
fstps
mov
insb
seta
hlt
xor
adc
sbb
pop
je
loop
jmp
cmp
add
xor
xlat
sbb
adc
lcall
mov
hlt
pusha
inc
repz
icebp
js
jp
les
xor
mov
decl
gs
add
or
mov
xchg
jg
push
or
jg
imul
push
push
fcoml
insb
lcall
jnp
insl
sbb
inc
lock
push
lcall
dec
daa
xchg
push
pop
jbe
dec
push
or
fisubl
shl
js
aam
add
aas
movsl
adc
push
sub
or
orl
sub
stos
pop
insl
xchg
arpl
mov
xchg
sbb
jg
xchg
push
clc
mov
roll
inc
sub
add
cmc
hlt
cmp
push
hlt
add
insb
and
push
inc
adc
ret
cmp
arpl
mov
jecxz
dec
inc
add
jg
lret
pop
sub
lcall
mov
aad
stc
test
ret
xchg
push
cmpsl
mov
aad
xor
inc
insl
sbb
cmpsl
in
outsb
test
jmp
push
icebp
mov
or
clc
sub
xor
jge
imul
lcall
test
add
pop
sahf
rcr
sub
or
sub
cmp
pop
push
dec
loop
and
dec
push
adc
jp
sbb
lret
aam
repz
iretw
add
cmp
scas
add
xchg
add
pop
inc
jp
fildl
divl
xchg
push
dec
shll
enter
xchg
lods
push
jecxz
cli
inc
dec
aam
xchg
jb
fld
sub
adc
dec
xor
jp
pop
or
inc
icebp
add
add
pop
in
stos
mov
inc
push
repnz
scas
mov
adc
adc
jg
out
clc
imul
xlat
insl
jnp
outsb
outsl
dec
jmp
push
sbb
ret
push
pop
sub
adc
scas
shlb
cmp
or
mov
bound
into
fdivl
adc
push
xor
loope
int
popa
pop
clc
out
mov
inc
out
mov
add
mov
sub
jp
and
jecxz
xchg
jno
div
ret
cmp
sahf
jns
sbbl
jno
dec
dec
sbb
sahf
cmpsb
leave
fstl
jp
add
adc
shr
out
pop
cmpsb
in
mov
add
sbb
inc
jo
pop
arpl
call
arpl
or
add
imul
js
pop
fwait
lcall
fisubrl
out
sbb
sub
aas
sbb
es
pop
call
ja
push
or
cld
cmp
rcrl
cmpb
fidivl
adc
xchg
xor
lret
pop
idivl
lcall
cmp
push
xchg
stos
notb
test
lea
mov
cmp
or
xchg
xchg
push
sarb
bound
push
mov
aad
gs
test
xor
rorb
mov
mov
fstpt
lods
dec
mov
dec
cmc
mov
lods
inc
mov
aad
loop
cld
inc
aad
adc
loopne
insb
xchg
jecxz
ret
into
push
rclb
and
sub
les
aam
rcl
cli
lcall
xchg
or
je
dec
mov
loope
insb
xchg
pop
and
cmp
xor
psrlw
pop
pop
dec
pop
clc
push
push
add
sahf
sbbb
mov
ret
cli
lcall
int
pop
ficomps
push
push
add
sbb
and
imul
aad
rorb
stc
adc
ljmp
mov
add
ds
enter
jns
push
cmp
or
rorb
add
sbb
out
cmp
mov
movsl
or
sbb
fs
enter
in
pushf
push
movsb
mov
add
jo
or
xchg
jg
into
repz
mov
sub
pop
xchg
or
dec
lahf
aas
and
cmp
movb
jmp
loopne
js
and
pop
lock
cli
and
int3
inc
mov
loope
popa
xchg
dec
inc
mov
xchg
cmpsb
xor
push
adc
dec
ja
push
pusha
mov
bound
xor
mov
xchg
jmp
jecxz
imul
push
mov
xor
jnp
loop
push
scas
mov
sbb
adc
add
and
repnz
jle
into
xor
and
out
or
and
push
ljmp
outsl
lock
dec
and
mov
dec
aad
into
jge
mov
jns
cmp
js
cmp
in
sub
inc
xchg
fsubrl
fimull
push
push
sarb
dec
test
add
cmc
fwait
psubsb
cmc
cwtl
xor
shlb
xchg
cmp
jns
jns
xor
add
fdivrl
inc
cwtl
es
mov
sbb
jmp
sahf
nop
jb
add
and
imulb
or
add
mov
cs
ljmp
aas
decb
sub
sbb
mov
inc
testb
push
in
je
andl
sbb
je
fcoml
mov
ror
mov
sbb
mov
nop
imul
mov
jnp
inc
fsubs
and
movb
pop
gs
gs
cmpl
dec
std
shl
bound
mov
adc
adcl
push
dec
stos
pop
xor
in
popl
dec
mov
jnp
les
and
pop
fs
lds
aad
fsubrl
call
or
mov
shll
fwait
mov
gs
mov
clc
adc
xchg
jbe
lahf
data16
push
incl
dec
subl
ret
stc
xchg
xchg
push
or
sbb
daa
pop
outsl
pop
xor
mov
aaa
cmp
in
outsl
jl
bound
mov
cmp
lret
js
loop
jl
addr16
fldt
test
fsubp
fidivrs
fistps
mov
hlt
xchg
imul
mov
bound
insl
scas
xchg
xor
into
sub
jbe
jl
sbb
sahf
push
lea
idivl
mov
lods
xor
cmp
popf
add
sub
cmp
sbb
push
cmp
ret
jns
movsb
lds
icebp
adc
rclb
mov
test
xchg
jb
mov
xchg
les
jo
test
sub
js
inc
scas
movsl
xor
data16
popa
mov
push
rorb
dec
out
xchg
jno
jmp
and
adc
pop
ss
dec
icebp
adc
mov
fnstenv
test
cld
push
loopne
xor
mov
nop
mov
sub
sbb
rorb
adc
pop
xchg
push
je
sbb
and
out
aas
fidivrl
or
add
or
push
mov
inc
inc
jl
pop
cmpl
xchg
mov
mov
dec
mov
mov
iret
adc
mov
push
rcrb
jge
sub
cmpsb
dec
xchg
mov
xchg
stc
dec
and
dec
xchg
js
sbb
ds
sbb
in
idivl
orl
std
add
ficoms
stos
mov
cld
inc
mov
mov
pop
cld
stos
mov
sahf
je
mov
inc
push
xchg
insl
cmp
nop
iret
add
negb
ret
xchg
pop
in
push
iret
sub
pop
in
inc
popa
inc
jge
dec
mov
mov
xor
ret
cs
push
push
into
cmc
add
add
adc
jne
gs
mov
jg
inc
into
int3
jge
jb
jbe
xchg
test
movsb
push
cwtl
pop
inc
lock
fnsave
jmp
adc
jno
mov
in
cmc
aad
pushf
mov
dec
xchg
and
and
push
mov
int3
neg
clc
leave
cmp
sti
das
mov
gs
push
test
cmp
dec
mov
subb
jg
into
sub
push
pushf
pop
shrb
adc
cmp
jge
shll
movsl
jno
and
aad
mov
xchg
and
in
aaa
out
shrl
inc
daa
sub
xor
sbb
sahf
xchg
addr16
cmp
sub
lods
mov
sub
rcll
into
lahf
cmp
lds
in
cwtl
mov
add
cmp
jge
pushf
mov
jae
shlb
dec
vphaddudq
lds
pop
sarl
pop
dec
pop
add
push
mov
movsb
adcb
push
leave
cwtl
push
mov
cli
ficoml
int3
pop
cmp
and
mov
cmc
mov
add
sahf
enter
shll
xchg
sbb
movsl
push
pop
mov
mov
insl
mov
lods
jmp
jge
jmp
imul
sarl
mov
lods
notl
pop
ja
jnp
sub
mov
dec
mov
xchg
push
jb
add
icebp
clc
push
repz
adc
insl
sub
outsl
xor
jmp
movl
push
add
push
push
fadds
out
test
bound
insb
sbb
pushf
xchg
jp
pop
xchg
fcomps
adc
sub
and
ret
outsb
lods
fisubrs
shlb
inc
lret
or
clc
int3
dec
jno
lret
enter
mov
cs
push
ds
pop
adc
or
xor
pop
jae
push
mov
inc
loopne
pushf
dec
cmp
mov
lea
push
push
std
loop
jl
push
test
mov
adc
jg
xchg
fsub
inc
je
out
pop
mov
stc
mov
jns
aad
outsb
out
nop
jns
bound
xchg
lret
push
jl
inc
das
or
call
jne
ret
sub
push
fldt
mov
pop
out
pop
cmpl
push
xorl
icebp
shll
cmp
gs
push
push
in
jecxz
xlat
mov
stc
fcoml
insb
cmp
lret
icebp
jl
pop
push
test
push
out
adc
cmp
aaa
or
les
decl
sub
ja
rorl
push
adc
xchg
jae
int
in
stos
jg
cli
jg
mov
and
pop
jne
jp
push
das
fcoms
popf
sbb
int
mov
xchg
mov
stc
jp
mov
dec
xchg
mov
sub
jle
cli
jb
add
jb
xor
pop
push
imul
icebp
out
and
mov
mov
push
movsb
xchg
jge
sti
mov
cmpl
ja
jge
aam
inc
mov
push
arpl
inc
xor
mov
roll
ja
push
and
sub
mov
jge
mov
in
sbb
adc
aaa
and
data16
faddl
or
dec
jecxz
jae
into
add
xor
mov
lea
push
fnsave
and
lcall
or
add
jno
fs
adc
add
cmp
cmp
stc
mov
fistl
jg
sbb
xchg
rcr
addb
mov
cmpsb
icebp
lods
lods
in
cs
pushf
fldt
hlt
mov
icebp
sti
mov
jl
jmp
jg
jbe
sub
leave
xchg
jae
jge
xor
jg
dec
xchg
jo
inc
sub
into
cmp
xor
cmpsl
iret
leave
and
enter
rcll
dec
loopne
mov
fsubrs
pop
mov
paddusb
xchg
push
mov
and
mov
cmp
cmc
sub
mov
adc
lahf
ja
pop
shrb
jns
pop
popa
xchg
jbe
mov
icebp
sbb
aas
cltd
lcall
je
jbe
jne
fldl
lock
leave
or
lahf
mov
shll
leave
sub
xchg
jle
arpl
xchg
das
inc
pop
inc
lock
xchg
inc
mov
js
jp
and
repnz
sub
jecxz
and
bound
pop
lea
sarb
addr16
mov
xchg
lock
adc
pusha
imul
dec
xorb
adc
movsl
mov
fdivl
push
inc
inc
std
cld
mov
stc
cmpsl
or
imul
cmp
stos
sbb
fwait
xor
popf
sbb
sbb
ds
pop
or
adc
stos
test
xlat
push
cmc
xor
cli
inc
es
clc
ret
and
adc
loopne
sbb
fisubrl
fucompp
imul
add
xchg
and
or
mov
xchg
inc
mov
es
jnp
inc
cld
out
mov
adcl
mov
add
sbb
and
jecxz
daa
lea
std
nop
mov
stos
mov
repnz
subb
dec
push
cltd
pop
mov
jge
data16
push
jecxz
add
fmull
mov
sbb
nop
add
mov
clc
jbe
pusha
inc
lods
sub
jecxz
mov
inc
pop
pop
shl
imul
enter
aad
call
sbb
js
rcll
xchg
mov
adc
mov
lock
dec
push
nop
dec
mov
sub
es
hlt
add
add
jecxz
xor
sbb
rolb
or
movsb
xchg
add
sti
xchg
sbb
rcrb
movsb
push
aaa
decb
inc
jge
mov
cmp
fisubs
mov
mov
sbb
or
inc
add
sarl
or
shrb
xchg
push
fnstenv
ret
jo
inc
pop
xor
fisubrl
stc
nop
jnp
mov
and
mov
jno
push
nop
imul
mov
push
lret
push
cwtl
pop
cmpl
scas
jecxz
xchg
je
ja
sbb
filds
mov
adc
and
fdivr
sahf
xor
lret
nop
add
comiss
addr16
mov
push
movsb
hlt
pop
mov
or
pop
mov
mov
dec
lahf
dec
popf
adc
int3
rcrl
cltd
repnz
nop
and
add
aad
sarl
ret
mov
out
add
aaa
xchg
adc
adc
cwtl
inc
and
in
cmp
shlb
hlt
cmc
addr16
ret
ret
mov
test
add
fistpll
dec
mov
js
inc
scas
pusha
xor
xor
movsl
jne
jle
fildl
inc
lea
pop
jns
xchg
jo
rorb
fsubrl
lock
or
push
xor
cmpsb
data16
pop
mov
jg
dec
cmp
fwait
jp
outsb
sbb
dec
subl
mov
insl
cltd
hlt
mov
pop
mov
push
adc
leave
dec
test
jb
das
ficompl
jle
sub
aaa
jecxz
inc
mov
jno
or
pushf
mov
pop
cmpsl
mov
ja
xchg
push
lea
add
movsl
gs
mov
xchg
lcall
addr16
arpl
rcrl
adc
rcll
hlt
mov
aaa
clc
add
adc
xchg
cld
or
cmp
cmpsl
dec
nop
xor
cmp
push
out
stc
imul
enter
mov
orb
add
mov
mov
pop
cmpsb
push
add
mov
jecxz
inc
mov
cmp
xchg
push
shrb
sbb
add
in
xor
dec
xchg
add
cltd
test
and
add
push
inc
cltd
test
popa
sti
push
mov
jbe
enter
jl
xor
pop
mov
mov
xchg
pop
inc
sbb
lret
insb
enter
popf
jg
lds
pop
dec
sbb
xor
loopne
fbld
push
sbb
or
pminsw
dec
into
fimuls
stos
inc
inc
cltd
sbb
clc
add
xlat
jge
outsb
jae
dec
inc
in
mov
cs
aas
and
sub
int3
movsl
xchg
jmp
cmp
jmp
scas
loop
mov
out
pop
mov
into
cmp
xchg
mov
sbb
jl
cli
jbe
movsb
ja
dec
mov
dec
push
cmc
inc
lcall
dec
fwait
push
out
stc
push
inc
les
push
mulb
scas
or
mov
shll
xchg
imul
jns
sbb
ret
lcall
das
xor
lods
jae
test
mov
dec
scas
in
jo
ljmp
or
mov
flds
out
xor
fldenv
rorb
dec
mov
xchg
push
and
stos
push
int
enter
push
jno
adc
aaa
and
loopne
jge
rol
jne
lret
cmp
and
ret
pop
out
cmpl
out
lret
xchg
out
das
negl
pop
test
iret
ret
aam
dec
adc
jbe
out
icebp
cmpsl
adc
add
dec
push
adcl
into
xchg
xchg
push
or
in
and
dec
int
insb
xacquire
sarl
cmp
add
leave
sub
call
push
xor
inc
mov
mov
pop
xchg
outsl
daa
in
pop
mov
jge
sbb
add
int
test
or
call
sub
inc
xorb
lea
dec
int3
inc
or
js
dec
jbe
gs
in
xor
mov
nop
stc
cli
in
and
mov
mov
repz
popa
xchg
push
pop
sahf
cmp
andb
cli
cmp
divl
pop
pusha
jp
xor
dec
dec
inc
cli
add
adc
pop
idivl
out
mov
mov
adc
mov
push
push
outsb
cltd
dec
into
movl
dec
movsb
das
sub
sarl
int
add
push
arpl
and
loop
add
pop
ret
xor
sbb
pop
sub
jmp
loopne
aas
ret
fisttpl
add
inc
cmp
xchg
nop
xor
cmpsb
ret
dec
mov
jb
imul
popf
xchg
and
xchg
jl
dec
and
dec
jns
push
mov
or
pop
andb
test
cmp
cmp
aaa
pushf
int
repnz
pop
popf
mov
test
dec
add
jle
jno
cmpsb
arpl
lods
popf
mov
out
inc
inc
lods
jbe
ret
mov
test
sub
xchg
inc
enter
jp
jae
cmovb
repnz
bound
xorb
cmc
or
je
jl
and
mov
cs
popf
outsl
ss
movl
gs
xlat
sbb
sub
ret
ljmp
dec
mov
push
addr16
cmp
ret
leave
add
push
loop
jno
out
push
mov
ret
adc
xor
mov
xlat
sbb
push
cld
paddusw
lahf
and
loope
loope
inc
fnstenv
leave
dec
test
push
out
pop
jmp
sub
mov
mov
scas
dec
xchg
sub
out
jno
pop
push
out
push
mov
lock
dec
push
inc
rcll
dec
fisubrl
clc
cmp
out
pop
jo
in
push
xor
lds
jmp
popf
or
push
pop
mov
aad
xor
mov
repz
int
call
push
and
pop
mov
and
sbb
movsl
jge
rcrl
xor
sub
ud0
nop
inc
fidivs
cs
inc
cmp
arpl
int3
or
fcoml
cmpsl
xlat
or
sbb
adc
in
les
lcall
pop
inc
lock
add
or
push
out
or
cltd
sub
push
lahf
clc
sbb
adc
sbb
add
les
push
ljmp
push
lods
jae
xor
push
sub
xor
hlt
or
add
pop
movl
mov
in
in
jge
imul
mov
inc
stos
xchg
adc
fsubr
pop
popf
and
sahf
mov
push
cmc
add
aam
sbb
mov
inc
out
sbb
push
and
jnp
mov
outsb
adc
xlat
inc
popa
mov
push
xorl
push
jno
jp
cltd
mov
je
mov
jo
add
daa
cmp
aaa
cmp
pop
push
cmp
sub
negl
out
test
xchg
inc
cmpsl
push
repnz
pop
xor
lods
scas
push
inc
lods
mov
ret
les
rcrl
xchg
mov
mov
and
bound
adc
pop
sarl
cmpsb
push
movsl
test
inc
out
loop
mov
sub
xor
pop
mov
notb
jmp
lret
cmc
in
adc
mov
inc
arpl
stos
push
mov
jecxz
roll
pop
mov
popf
inc
add
shlb
inc
test
mov
mov
mov
inc
pop
int
popa
int3
sti
adc
adc
dec
insl
movsb
mov
test
dec
sti
sbb
insb
mov
xchg
mov
mov
and
cmp
leave
into
jp
mov
pop
test
es
pop
ljmp
in
jno
mov
movsb
mov
aad
leave
outsb
stos
iret
shll
pop
imul
stc
sbb
sub
or
cmp
mov
lds
ret
jg
cmp
or
push
cmp
ret
push
cli
rorl
lock
mov
ds
push
call
sbb
clc
fsubrs
outsb
pushf
in
fimuls
xlat
and
xor
or
add
rol
cld
lods
daa
or
adc
mov
insl
into
je
cld
inc
jbe
push
ss
adcb
ss
mov
xchg
popa
ljmp
aad
fsubs
roll
dec
test
frstor
testl
addr16
add
aad
shrb
fxch
fimuls
dec
scas
mov
xor
mov
mov
mov
inc
mov
mov
or
sahf
mov
aaa
fsubrl
pop
push
imull
frstor
lret
pop
sub
daa
cmp
xlat
add
push
popf
divb
lcallw
jle
cmp
js
popf
lods
and
clc
ds
push
int3
out
aaa
sub
scas
jp
int
push
push
jl
jecxz
xorb
repnz
inc
int3
mov
xlat
or
aad
imul
ret
scas
adc
push
adc
sub
aad
andl
mov
push
aaa
xor
push
lret
jp
mov
xchg
dec
mov
aad
dec
mov
pop
stc
test
mov
pop
jns
cmp
stos
push
shl
jge
out
cmpl
or
cmp
insl
push
xchg
or
pop
mov
jge
cmp
jecxz
fisubrs
inc
xchg
das
mov
mov
lcall
adc
addb
sub
cwtl
dec
leave
xor
ds
pop
jp
mov
cltd
rorb
shlb
lea
add
inc
push
aad
jnp
std
push
call
fdivrl
and
sub
jae
test
sbb
mov
dec
js
lods
into
jae
insl
in
mov
add
or
sahf
push
inc
xchg
ret
lret
aaa
xchg
jecxz
push
cwtl
aaa
sbb
iret
and
sbb
int
cwtl
add
testl
ds
cmp
xchg
inc
rcrb
lods
dec
add
lret
cmp
xor
inc
test
jle
jg
inc
cmpsb
pop
mov
fcompl
sti
stc
xchg
addb
push
xchg
bswap
cmp
popf
or
divb
ds
dec
loopne
and
xor
or
push
xor
dec
js
mov
les
jecxz
pop
cmc
adc
cmovs
cmp
ficompl
in
mov
mov
xchg
out
shlb
sbb
fnstcw
and
daa
daa
dec
jge
pop
cld
xor
movsb
add
fwait
in
inc
dec
pushf
outsb
xchg
arpl
jnp
xor
mov
pop
or
das
xchg
icebp
inc
inc
adc
lds
stos
jne
pop
push
mov
pop
in
push
sub
pop
mov
mov
mov
jo
outsb
sbb
aam
jae
hlt
mov
mov
stc
mov
test
pushf
pop
dec
cli
jecxz
adc
jnp
repnz
movsl
add
pop
shrl
ja
cs
popa
scas
outsl
sbb
sete
sahf
hlt
add
mov
pusha
lahf
daa
das
fs
xor
fidivrl
enter
adc
cmp
add
or
fimuls
aaa
cwtl
cmp
icebp
mov
xchg
mov
in
dec
outsl
or
mov
pusha
push
addr16
pop
in
pop
outsb
inc
int3
test
lds
divl
rcl
in
mov
xchg
daa
sarl
lret
aam
mov
cmp
shll
fildll
mov
fbld
hlt
add
adc
and
or
dec
stos
das
push
stos
jecxz
or
or
int3
xor
testb
mov
mov
daa
adcb
inc
or
dec
adc
aaa
xlat
test
push
sti
jbe
loopne
imul
data16
jp
lds
fadd
push
mov
mov
cwtl
pop
clc
mov
andb
mov
mov
hlt
push
lea
inc
outsb
std
dec
dec
push
fadds
dec
xchg
dec
add
mov
xchg
adc
int
ljmp
sbb
xchg
pusha
dec
fldenv
push
mov
dec
mov
popf
inc
out
mov
push
aam
lods
mov
push
test
dec
pop
adcb
addr16
std
ss
out
sbb
jge
mov
adc
and
push
mov
sbb
or
adc
scas
sbb
xor
and
aad
imul
and
jmp
xor
mov
fs
loopne
push
test
dec
adc
repz
cs
loop
and
in
sbb
add
adc
push
push
mov
int3
xor
dec
imul
pop
stos
jb
pop
test
test
outsl
mov
xorb
mov
and
xlat
sub
and
pop
pushf
shl
out
lahf
pusha
fildll
mov
test
inc
mov
push
bnd
mov
out
push
and
jl
mov
mov
cli
xchg
mov
mov
cmp
outsl
pusha
orl
popf
mov
sahf
sub
imul
jno
and
mov
cmp
push
sub
xlat
fwait
inc
lret
sbb
mov
ds
xor
icebp
sub
jmp
xlat
and
and
std
bound
jmp
adc
push
and
cli
cmp
sub
fidivl
add
xchg
adcb
and
add
les
icebp
cld
xor
add
decb
xchg
cmp
jecxz
bound
jg
lods
rclb
mov
xchg
sub
xchg
pushf
jbe
mov
push
mov
sub
sti
call
cmpsl
pop
lock
arpl
xor
cmp
xor
cs
mov
in
jg
fdivl
iret
mov
jne
xchg
js
xor
adc
mov
cltd
pop
mov
mov
xchg
xor
mov
pop
repnz
push
jae
push
jae
dec
adc
int
lds
xchg
add
bound
inc
scas
add
or
cli
outsl
xchg
cmp
xchg
sub
sub
xor
fxch
leave
ljmp
xor
cmp
mov
out
mov
fwait
gs
xor
cmp
mov
shlb
stc
popa
dec
test
and
jmp
and
sub
jl
inc
das
fdivr
sub
xor
shrl
dec
pop
mov
and
stos
dec
cltd
iret
add
fwait
mov
cmp
mov
mov
fs
ja
aam
or
movsb
ficomps
arpl
cmp
lods
jno
pop
mov
mov
nop
test
mov
or
or
mov
cmp
pop
fwait
jne
lods
jnp
sub
or
jp
jl
mov
fisttpl
lcall
iret
clc
sbb
in
push
cmp
add
and
mull
add
xchg
push
or
xchg
mov
xor
and
psraw
and
push
jp
leave
pop
push
lods
mov
outsl
and
sbb
clc
jns
stos
sbb
mov
out
pop
lret
ds
loop
les
dec
jecxz
or
insb
mov
pop
sub
sarb
and
xor
or
jo
aas
push
lcall
fcomip
test
aam
cmp
xchg
das
jg
daa
add
push
test
mov
test
sub
pop
ljmp
jp
stc
sbb
or
les
or
test
push
lock
shl
sub
cmp
mov
adcb
loope
push
inc
sbb
add
push
sti
fcmovu
sub
sbb
pop
and
divl
mov
daa
inc
sahf
inc
mov
dec
movsb
popa
sahf
leave
fsts
jmp
inc
ljmp
frstor
sbb
popf
jl
test
xor
gs
dec
mov
xor
fstpl
dec
adc
stos
dec
lods
fisubl
fldl
and
sbb
sbb
es
pop
mov
jne
mov
shll
test
xchg
pusha
rcrl
cltd
test
cmp
xlat
ds
mov
imulb
out
pop
push
add
jmp
xchg
or
adc
jmp
sar
shlb
lea
cmp
or
sub
loopne
adc
jne
ret
sbb
dec
cltd
push
sub
in
pop
mov
imul
inc
fwait
std
pop
and
adc
pop
adc
fisubrl
and
push
aaa
dec
into
fsubrs
fbld
cmc
std
cwtl
jo
pusha
mov
insb
clc
mov
mov
fwait
shll
cld
out
sub
mov
lcall
jb
fists
dec
dec
mov
add
mov
jl
stos
lret
bound
cltd
cld
sbb
cmp
stos
iret
jmp
loope
repz
push
fmull
arpl
loopne
loop
fcoms
scas
cmpsb
jnp
jns
pop
xchg
rcll
mov
shll
xchg
xlat
add
shll
add
xor
add
jnp
dec
push
roll
aaa
daa
fisubs
movsl
sbb
sbb
lahf
popa
xor
xor
push
insl
into
lahf
insl
sbbb
inc
jno
mov
sbb
sbb
mov
xorl
xchg
fdivp
out
mov
frstor
in
lock
fstps
mov
add
xchg
popa
mov
and
or
push
popf
out
mov
sbb
mov
scas
stc
iret
pop
adc
in
inc
int
inc
adc
mov
pop
fbstp
mov
fdivrp
lcall
adc
lds
sub
mov
jge
adc
ljmp
jge
out
cmp
push
jo
int3
and
dec
out
int3
or
fs
cmp
sbb
cmpl
dec
fnsave
mov
pop
mov
push
mov
cs
xlat
add
xchg
and
jmp
fiaddl
add
pop
mov
int
mov
xor
cmp
addl
call
clc
pop
add
lret
test
fildl
jp
mov
cmpsl
arpl
jo
fxrstor
lods
sbb
test
data16
sbb
sub
ficomps
lock
mov
and
stc
jnp
and
je
mov
fidivrl
stos
pop
fwait
in
pop
cmp
mov
stos
insl
and
js
imulb
cld
push
cmpb
sub
frstor
cmp
imul
cmpsb
in
aas
lahf
jp
pop
shl
jne
shrb
je
fsubrl
frstor
call
and
or
inc
push
cmpsl
imul
fnstenv
xor
out
lods
xor
push
out
push
mov
jg
imul
dec
xchg
std
into
std
arpl
les
mov
xor
jmp
mov
pop
fcoms
sbb
cli
or
push
inc
ret
addps
adc
xor
pop
cli
clc
mov
aaa
pop
jecxz
sub
inc
inc
cmp
pop
xchg
lea
mov
ficompl
sbb
arpl
pop
fldl
and
jnp
add
iret
imul
repz
clc
sub
daa
imul
jle
ljmp
ds
dec
mov
loopne
add
inc
pushf
inc
mov
jne
xlat
xor
inc
mov
insl
mov
je
addl
mov
push
xchg
push
cltd
jge
xor
push
dec
popf
sbb
mov
or
test
lret
xor
xchg
xchg
add
sbb
jns
mov
pusha
push
stc
xchg
jge
mov
test
outsl
pushf
pushf
jno
xchg
mov
xor
push
xor
jne
subb
adc
jno
add
adc
je
lock
imul
testb
or
fidivs
into
inc
jmp
sub
jnp
inc
mov
outsb
mov
aad
aaa
mov
and
mov
mov
sti
pop
les
rorl
mov
aam
xchg
cmp
ljmp
xor
scas
push
test
lahf
jmp
fs
lock
ja
in
or
subl
dec
mov
fisttps
bound
inc
and
popa
xchg
and
push
mov
jo
cltd
insl
xchg
push
push
jge
lock
ret
rclb
pop
sub
sbb
and
andl
lret
es
xor
aam
dec
scas
xchg
push
mov
mov
ficoml
in
sub
mov
mov
cmp
inc
dec
movsb
xchg
mov
cwtl
push
pop
jno
mov
insb
jmp
lods
mov
xorb
sub
lods
das
je
cmp
sub
adc
push
fidivrl
andl
int3
sbb
cmpb
cltd
data16
lods
pop
cmpl
inc
scas
std
or
sti
cmp
arpl
jp
nop
cmpsb
jp
aam
leave
icebp
pop
flds
fcompl
lea
mov
jmp
add
lahf
push
mov
fiaddl
daa
test
adc
imul
into
cmc
dec
adc
cmp
js
cmp
sub
mov
mov
ljmp
add
or
call
sub
adc
call
popa
mov
repz
sbb
dec
cmp
sub
cmp
dec
dec
movsb
daa
mov
iret
add
mov
pop
test
std
xor
mov
push
enter
mov
jb
adc
dec
adc
adc
imul
sbb
xchg
cmp
or
mov
inc
popa
jle
dec
dec
add
mov
inc
js
bound
mov
push
movsl
pop
mov
mov
subl
or
mov
jne
sar
pop
add
repz
es
dec
incb
dec
sub
inc
push
or
jp
lds
mov
stos
testb
cmpsl
js
sub
scas
sub
sbb
push
shll
sbb
loopne
inc
jg
cmp
movsl
outsl
insb
fwait
push
xchg
cwtl
inc
xchg
sub
add
incb
push
mov
or
sbb
sub
mov
in
testl
das
push
lret
mov
cld
push
push
fnstcw
mov
xor
fadd
and
pop
lods
push
lods
fmull
lock
repz
mov
ss
imul
lods
fcmovnu
xlat
pop
mov
sbb
les
push
mov
cld
out
fldcw
sbb
addr16
cli
pop
aas
xlat
xor
outsl
movsb
push
dec
jmp
jl
jmp
in
xor
daa
push
cmpsb
pop
dec
xchg
inc
push
xor
xorl
mov
jae
jmp
shlb
nop
js
mov
push
das
mov
iret
xchg
mov
adc
sub
mov
lds
jp
loopne
pop
cltd
clc
sbb
mov
and
ss
inc
lahf
pop
fldt
dec
mov
jne
mov
mov
mov
cld
and
xor
pop
push
lds
bound
mov
int
dec
dec
sbb
scas
loope
pop
lret
iret
sub
fidivl
popf
ret
lock
mov
jnp
inc
xchg
xchg
jb
sub
and
mov
mov
call
xchg
test
hlt
push
gs
sbb
xor
xor
popf
jp
shlb
or
pop
or
pop
iret
xchg
inc
mov
add
pop
in
inc
insb
mov
dec
test
push
loop
test
scas
push
nop
fldenv
push
jnp
bound
cmc
mov
mov
adc
push
mov
jne
lea
jle
dec
mov
movsb
mov
ret
push
mov
rorb
lock
push
dec
dec
mov
icebp
sub
lods
dec
test
push
rol
imul
repz
xor
fstpt
sbb
xor
divl
xchg
aam
xor
adc
idivb
add
add
lret
sbb
adc
enter
mov
fcmovne
mov
inc
mov
std
fnstenv
lret
xchg
cwtl
push
xor
mov
mov
add
and
add
dec
aaa
xor
mov
je
fwait
xlat
notl
insb
lret
outsl
loopne
xchg
cmp
and
sbb
xchg
sub
jmp
pop
xor
popa
addr16
jl
aam
and
cmpsb
jmp
lret
lret
enter
sbb
sar
jno
mov
fwait
loop
mov
add
out
cmpsl
and
inc
movsb
sbb
push
xchg
inc
mov
ja
pop
mov
push
ret
cmp
or
mov
sub
pop
jno
inc
mov
or
xchg
adc
clc
push
sar
ret
faddl
js
sub
ret
pop
sub
push
push
ret
scas
pop
xchg
fcom
bound
mov
mov
inc
mov
cwtl
mov
dec
cmpsb
nop
arpl
mov
mov
popf
jge
push
sbb
rcl
dec
outsl
xchg
enter
dec
xor
arpl
xor
push
in
ret
cli
cmpsb
test
cmpsl
and
pop
scas
xor
repz
loop
and
neg
ljmp
inc
pop
push
scas
mov
aam
mov
fs
stos
out
clc
call
and
out
xchg
pop
sbb
adc
mov
test
in
sub
lcall
test
pushf
stos
ds
xor
imul
push
push
fxch
aaa
mov
in
mov
push
pop
jnp
test
inc
dec
xchg
jnp
pop
dec
out
or
dec
mov
jg
aaa
xlat
inc
repnz
movsl
inc
shl
in
or
push
cmp
stos
outsl
sbb
out
repz
push
lcall
sub
in
inc
negl
imul
pushf
add
cmp
mov
idivl
dec
xor
push
lret
xor
repnz
andb
add
cld
pop
insl
aam
jnp
pop
cmpsl
xchg
popa
mov
mov
outsb
push
push
jecxz
xchg
lret
clc
mov
repnz
cs
int3
xchg
xchg
data16
jp
lods
xchg
push
repz
repz
push
out
es
mov
sbb
ret
data16
sub
pop
test
mov
add
jo
or
xchg
pop
sub
xlat
dec
scas
cmp
inc
push
mov
push
arpl
lods
mov
daa
popf
outsb
jl
pushf
jmp
out
dec
in
loopne
or
inc
push
or
popf
lret
nop
jge
stos
fisubl
fcomp
push
hlt
jecxz
call
jnp
sbb
scas
faddl
fsubs
jg
fs
lahf
cltd
mov
add
mov
jmp
int
and
mov
repnz
cmp
mov
xorl
sahf
push
sti
or
loopne
loopne
add
jp
adc
jno
push
xor
push
sub
sub
push
jnp
jl
aam
and
mov
ret
cmc
jno
shll
test
sub
orl
dec
mov
fwait
bnd
cs
or
fldcw
fbld
push
sub
repz
mov
or
sbb
fxch
or
stos
sub
pop
push
fildll
or
xchg
xchg
add
enter
jo
lods
xchg
fcompl
adc
call
sahf
rol
adc
shlb
lret
xchg
mov
mov
and
cli
cmpsl
xor
add
push
lea
xchg
icebp
pop
sbb
fwait
inc
pop
iret
and
adc
fadd
aas
sub
sub
scas
idivb
fdivl
lea
movsb
cmp
cltd
pop
inc
ret
pop
xchg
inc
js
jno
cwtl
sbb
insl
dec
or
push
iret
imul
add
stos
cmpsl
jmp
add
jg
cmp
and
icebp
cwtl
test
adc
pop
aad
sbb
xchg
fidivrl
sub
dec
fnstenv
xchg
and
repnz
cmc
subb
daa
dec
add
in
xor
jo
xchg
dec
notb
mov
popa
dec
in
test
enter
stc
xor
loop
xchg
mov
in
ja
pop
mov
jge
popf
stos
or
hlt
push
cli
notb
mov
imul
sub
mov
mov
jne
cmp
mov
add
js
mov
sbb
rorl
mov
leave
fcoms
sub
das
mov
in
add
jecxz
mov
ljmp
addr16
in
push
pop
cwtl
mov
xchg
xchg
sbb
mov
jl
fadd
inc
ja
pop
dec
cmpsb
hlt
sti
sahf
mov
adc
inc
cmp
hlt
or
fwait
shll
and
jnp
adc
push
and
es
xor
out
add
dec
out
pop
pop
imul
cmp
push
sub
add
push
sbb
jne
add
mov
roll
or
mov
fiadds
rcll
mov
push
xor
dec
dec
mov
sbb
lods
ljmp
push
inc
cmp
add
scas
jne
fwait
fwait
gs
hlt
or
pop
roll
loopne
sbb
push
push
movsb
lods
push
mov
or
ja
xchg
xchg
or
push
daa
push
jbe
mov
daa
arpl
inc
mov
mov
cwtl
dec
rolb
test
das
mov
dec
sbb
inc
fisubrs
test
xor
mov
test
dec
xor
pop
gs
data16
inc
icebp
or
sbb
or
inc
and
cmp
pop
xor
and
dec
xorb
mov
sub
rorl
in
jno
enter
cmc
push
cli
pop
cmp
sahf
lods
xor
cmp
sbb
mov
shr
cmp
and
xchg
fwait
outsb
in
dec
cli
fidivrs
rcll
movsb
mov
dec
sub
xchg
xor
jge
and
outsl
imul
adc
jns
sub
lea
xchg
or
loop
xchg
fwait
jmp
sti
nop
push
or
insb
jecxz
pushf
xor
stc
xor
shlb
pop
cmp
sbb
stc
out
mov
shrb
lods
push
daa
nop
repz
xchg
je
push
in
mov
arpl
mov
mov
pop
out
xor
mov
dec
je
test
push
jno
dec
sub
push
lret
fiaddl
push
cwtl
hlt
sbb
xor
hlt
adc
xor
addl
mov
dec
stc
sbb
or
std
jnp
mov
dec
sbb
inc
into
mov
popa
cmp
and
jno
popf
lds
inc
rorl
sahf
cmp
ds
xchg
or
jbe
filds
mov
xor
imul
mov
xchg
or
jmp
sub
mov
push
nop
popf
jne
or
push
loop
in
and
cld
repnz
arpl
je
add
hlt
sub
pushf
push
mov
cmp
fistps
add
repnz
mov
xchg
sbb
mov
int
xchg
dec
jge
mov
stos
aam
mov
mov
stos
mov
fists
jno
jl
dec
mov
lock
inc
lret
or
lea
insl
andb
movsl
stos
xchg
inc
adc
mov
cmpsl
sbb
je
inc
outsl
lahf
fisubl
adc
movsl
xor
fcmove
test
mov
inc
loop
dec
mov
enter
push
jg
xchg
leave
ficoml
sbb
iret
jns
lcall
xchg
aam
and
mov
sarl
js
and
pop
jae
jbe
mov
in
movb
insl
add
fisubl
jno
imul
jg
push
inc
inc
lods
inc
std
mov
mov
mov
outsl
sahf
sbb
mov
test
jbe
fnstsw
push
imul
add
cmp
dec
cmpsb
das
xor
adc
push
add
push
sbb
add
leave
lahf
xchg
js
adc
aad
add
add
mov
adc
cltd
aam
mov
and
loope
mov
lcall
and
mov
jns
pusha
cmpsl
test
inc
xchg
inc
xor
add
jl
push
mov
test
jne
scas
scas
xor
movsb
adc
insb
or
ss
icebp
add
inc
adc
in
xor
test
xor
je
inc
jne
xchg
hlt
and
cmp
push
ret
adc
ljmp
dec
movaps
ja
mov
sub
cli
or
in
std
push
divb
stos
mov
jns
jno
int3
mov
loope
push
insl
xchg
test
jb
xor
lahf
mov
ss
jo
lea
xor
dec
lock
xchg
mov
or
insl
jmp
mov
aad
sbb
mov
fisttpll
sti
pop
stc
cltd
into
fwait
ret
jg
cmp
daa
and
bound
aas
sbb
push
push
orl
pop
jge
sbb
imul
push
scas
mov
cmpsl
fs
dec
dec
imul
mov
lods
pop
in
and
pop
cmpsl
adc
mov
or
ljmp
inc
jl
dec
cmp
lret
subl
xorl
add
add
adc
or
cmp
out
addl
adc
jb
jecxz
adc
dec
push
sbb
ss
mov
add
cmp
mov
push
pushf
fcmovb
dec
xorb
xor
mov
xor
mov
cmp
push
fmul
ret
or
cmp
mov
and
cmp
adc
mov
xchg
enter
cmp
jns
or
dec
aam
mov
xchg
and
pop
movsb
xor
out
push
arpl
test
daa
cli
sahf
mov
sub
or
daa
or
in
dec
aam
mov
jge
lock
push
pop
xchg
push
dec
arpl
jl
jae
xchg
lods
xor
sar
xor
cld
inc
xchg
mov
mov
inc
push
mov
cmp
or
mov
idivl
sbb
scas
cli
inc
popa
lcall
fisubrl
scas
jo
sub
lahf
add
or
push
inc
push
stos
jne
or
sarl
stos
rorb
fdivp
inc
mov
inc
xchg
adc
dec
cwtl
int
push
iret
cmp
fdivs
xor
fs
sahf
cld
xlat
imul
cmp
or
stos
rclb
mov
fldt
into
or
rcll
inc
ficomps
cmp
aam
push
das
repnz
gs
lods
mov
jbe
je
inc
xchg
mov
dec
sti
pop
adc
or
andl
sahf
je
or
pop
repz
pop
dec
pop
dec
jne
adcl
dec
mov
inc
std
ja
cmp
mov
cmp
mov
push
jp
gs
outsl
imull
xchg
jne
jns
aad
add
or
jae
mov
loop
into
lcall
js
stos
je
into
mov
mov
xchg
movq
inc
cld
mov
lods
fs
lods
ja
imul
push
fisttpll
test
cmp
in
sbb
lea
movsl
test
rorb
mov
pop
cmc
jge
fimuls
inc
shll
or
sbb
add
lock
jp
sti
adc
mov
outsb
aad
gs
mov
cwtl
std
test
xchg
fidivrs
pushf
or
repz
inc
add
jle
pop
aaa
les
cmpsl
loopne
sbb
mov
xor
sahf
inc
test
movsb
or
stos
sbb
faddl
and
xor
fistl
inc
jp
das
cmp
lret
int
dec
repnz
adc
or
push
cmp
sbb
sub
mov
sbb
xor
xchg
imul
fwait
mov
bound
sarb
lods
jg
test
mov
mov
aaa
mov
test
mov
nop
push
arpl
push
hlt
fsubrs
imul
stos
aam
pop
push
popf
sub
add
pushf
enter
cmp
sbb
mov
or
pop
aaa
adc
call
and
pop
jmp
sahf
push
jmp
mov
sbbl
stos
push
jo
jl
mov
rorl
dec
add
icebp
dec
bound
push
mov
mov
xor
push
push
dec
lahf
dec
mov
cltd
insb
and
repz
out
push
or
imul
mov
and
jb
or
adc
xor
mov
roll
cmp
xchg
cwtl
cmp
jg
sti
ret
jne
sbb
int3
icebp
pusha
out
or
jo
mov
cs
add
test
loope
jns
fisubrs
xlat
dec
lcall
iret
cltd
mov
jbe
mov
mov
sub
jmp
mov
push
nop
and
lretw
fisubrs
shrl
dec
shll
out
adcl
popa
cmp
inc
add
daa
push
and
addr16
sub
sbb
sbb
sbbl
insl
jge
cli
je
pushf
xchg
adc
sub
inc
push
fsubl
pop
ret
push
dec
or
call
aaa
sbb
cmpsl
es
fucomi
inc
sbb
or
aam
fldt
mov
sbb
bnd
push
xchg
adc
lea
mov
iret
aas
sub
into
test
jnp
or
sbb
test
inc
and
xchg
loop
gs
or
mov
jle
cmp
addr16
jne
dec
lock
mov
movsb
inc
mov
mov
scas
test
jnp
sbb
outsl
lahf
cld
cwtl
jecxz
lret
test
and
test
dec
out
shl
nop
cs
in
movsl
aam
xlat
enter
lock
pop
lret
or
and
lds
arpl
fwait
mov
inc
leave
jg
and
add
and
mov
ror
xchg
xchg
xchg
mov
inc
push
mov
daa
xchg
fisubrl
js
ljmp
mov
cmovae
jae
dec
sbbl
dec
push
sbb
cmovae
xchg
xchg
and
in
xor
push
movsl
mov
test
and
pop
sbb
cmp
cmp
xchg
sti
mov
outsb
insb
ljmp
addb
jne
gs
mov
insl
rolb
pop
add
xor
sub
adc
sbb
jge
jp
ret
inc
shrl
daa
cmp
mov
popf
mov
in
pop
repnz
scas
xchg
pop
outsl
cmp
ret
repz
cmc
push
jl
xchg
xchg
lret
sbb
push
std
ss
into
sbb
cli
cmp
mov
test
cli
cld
aam
aad
sarl
cmp
or
fucomip
jns
adc
lcall
fstpl
rcrb
jecxz
rcrb
fcoms
inc
lcall
mov
inc
jle
mov
psrld
jae
inc
mov
sbbb
out
aaa
rcrb
cmovle
push
xlat
arpl
jnp
lock
cmp
sub
jmp
cmp
sbb
repnz
cli
insl
dec
pop
and
adc
inc
add
fs
stos
insb
add
jo
filds
daa
into
mov
dec
scas
mov
dec
ljmp
cmp
pop
push
jecxz
cmpsb
shr
addb
push
daa
mov
gs
pusha
pop
enter
imul
repnz
xchg
sbb
ss
popa
push
inc
inc
std
fadd
sub
and
cmp
add
inc
aaa
aad
insb
or
pusha
push
and
insl
daa
imul
xchg
cmp
jo
or
outsb
pop
xor
cli
and
and
and
sbb
pxor
xor
aaa
in
xor
xor
ds
cs
and
cmp
mov
push
pop
lods
jne
sbb
popa
mov
sbbl
mov
pop
lea
dec
mov
push
stos
pop
jge
mov
jg
je
inc
orb
xor
mov
jge
pop
and
cli
das
adc
into
adc
and
es
or
or
xchg
outsb
hlt
dec
mov
mov
lods
pusha
xchg
test
movsb
inc
cwtl
insl
cmpl
jo
inc
addl
outsb
int3
xorl
iret
and
add
cmp
and
cmp
cmp
out
out
iret
sub
ss
negb
repnz
sbb
push
out
adc
cli
add
por
out
or
or
out
cmp
call
addl
in
push
scas
pushf
xchg
dec
sahf
popa
mov
inc
mov
aas
xlat
xor
pop
fnstcw
notb
xor
clc
dec
lahf
push
roll
mov
adc
inc
movsb
and
sub
cltd
daa
aam
fwait
pop
out
pop
inc
pushf
dec
dec
inc
aad
mov
imul
jae
outsl
insl
dec
mov
jbe
pushf
mov
dec
pop
jns
dec
jb
ja
fwait
nop
arpl
xchg
dec
mov
xchg
lea
add
cld
pop
out
dec
cli
fsubs
or
data16
and
push
mov
lret
pop
popf
jg
jo
push
into
jge
dec
lods
cmpsb
xor
jae
mov
pop
sti
inc
mov
pop
mov
jge
sbb
add
in
ret
loop
lret
lock
adc
aad
das
out
repz
lock
xor
cmp
ss
imul
jge
and
push
leave
out
sub
ret
fstl
dec
dec
push
aam
xchg
pop
xchg
jne
pop
mov
jl
xor
jbe
sbb
add
sub
or
push
cld
add
aas
imull
jmp
xlat
xor
or
xor
add
jo
inc
mov
js
imul
jns
subl
mov
push
fwait
popf
pop
mov
outsb
xorb
mov
mov
data16
pushf
push
cmc
add
cmp
ds
push
cmc
aas
in
sbb
fisubs
push
mov
inc
aad
xchg
jnp
pop
cmpsl
dec
test
or
lods
inc
movsl
jp
inc
sahf
jp
dec
xchg
jns
inc
mov
mov
lock
push
decl
xlat
and
sub
or
adc
xor
aad
sarl
or
cld
shrl
or
clc
xor
or
pop
out
cmp
fidivrs
rorb
repz
sub
add
push
stos
inc
mov
push
loop
mov
xchg
gs
jne
dec
fiaddl
ret
ss
pushf
add
add
psubusw
fstl
push
jmp
pop
addb
daa
andb
testl
lret
or
cmpsb
aam
mov
mov
subb
arpl
jbe
je
js
mov
js
dec
sahf
jg
xchg
mov
xchg
jg
xorb
mov
inc
mov
out
sbb
xor
xor
fdivr
cmp
mov
cmp
inc
mov
push
lods
jbe
jp
je
push
pushf
pop
lahf
das
addl
js
outsl
mov
pop
xchg
jae
inc
fstl
fldcw
sub
sbb
adc
jns
xor
adc
ficoms
out
std
and
push
out
xor
sub
sub
sub
sub
call
fistl
jecxz
lock
and
xor
into
jno
addr16
imul
mov
dec
je
mov
sbb
loop
incb
out
fcoms
les
add
cmp
sub
aad
pop
in
incl
and
ss
mov
push
mov
mov
lods
orl
jns
inc
mov
cwtl
popa
xchg
add
aaa
mov
mov
jg
ja
dec
scas
xor
inc
shl
scas
outsb
xlat
sub
adc
into
inc
stos
dec
lods
scas
mov
outsb
cmpsb
js
popa
mov
cwtl
mov
mov
cmpsl
jg
jbe
inc
mov
mov
push
cmpsl
inc
lods
movsb
mov
mov
iret
loop
int
loop
out
adc
adcb
fidivrl
psllq
loopne
loope
jmp
push
sub
adc
sbb
or
xor
inc
jecxz
shll
icebp
jge
dec
fstpt
cli
inc
mov
jno
push
jecxz
mov
lock
xlat
lret
add
sub
push
clc
psrld
jmp
pop
fidivl
push
mov
xlat
xor
pop
jecxz
out
fs
dec
hlt
jge
mov
mov
lods
lea
xchg
mov
dec
mov
scas
outsl
test
sub
pusha
xchg
dec
orb
ljmp
pop
out
dec
cwtl
or
or
ja
jns
es
dec
test
cwtl
add
das
mov
subb
movsl
jl
lahf
mov
ja
push
movsb
arpl
inc
push
imul
mov
cmpsl
lahf
jl
je
arpl
cmpsl
pop
loope
or
sub
jmp
in
jns
push
sub
shlb
icebp
psubw
add
and
sub
push
mov
fiaddl
lds
mov
enter
in
pop
shrl
xlat
sub
call
dec
cmpsb
jp
cs
sub
pop
icebp
dec
movsl
jno
and
sar
ret
and
cmp
and
push
mull
sub
icebp
cmp
add
adc
hlt
sbb
or
out
adc
loopne
movsl
pop
movsl
cmpsl
pop
arpl
fwait
test
inc
push
push
ja
jne
cmpb
mov
repz
lret
outsl
scas
bound
pop
mov
push
mov
push
movsl
push
fsubrs
stos
outsl
mov
xchg
cmp
pop
out
out
pop
inc
arpl
push
subb
sbbl
xchg
xchg
jbe
addr16
jae
cmp
jo
inc
addl
pop
movsl
pop
mov
dec
repz
cld
push
sub
cmp
adc
pop
sbb
out
loop
leave
add
add
scas
sbb
aaa
int
out
adc
cmp
lret
add
cmp
je
or
aas
stos
push
mov
and
cmp
sbb
add
je
sbb
add
or
jecxz
lret
xor
cmp
mulb
cmp
out
ret
adc
aam
je
cmp
pop
jne
jbe
jns
cltd
mov
mov
je
pop
jae
mov
pop
xchg
insb
mov
pop
int
mov
gs
inc
nop
jnp
push
mov
outsb
xchg
jle
adc
push
fnstenv
fs
push
jmp
push
clc
dec
mov
stc
imul
insb
xchg
pop
xchg
jnp
jne
xchg
mov
lcall
pop
andnps
lock
inc
dec
pop
scas
test
int
and
sub
repz
repnz
mov
pop
add
cld
inc
repnz
add
out
dec
out
pop
fistl
add
sbb
mov
ficoml
jb
cmc
adc
aaa
mov
in
push
sahf
pusha
in
faddp
jnp
cmp
or
rorl
xor
dec
out
or
push
call
add
lret
or
and
cmc
cld
cmp
ss
mov
and
call
test
mov
push
pop
push
ja
inc
cltd
jae
sahf
pop
push
scas
cmpsl
jno
pop
fwait
ss
or
out
addl
xor
xlat
mov
pop
xchg
push
mov
clc
jns
add
or
lea
lods
test
ficomps
jg
imul
test
mov
mov
js
inc
push
movsb
mov
xchg
stos
jnp
inc
mov
mov
inc
cmc
dec
outsl
xorb
pop
and
mov
sub
iret
rol
push
jp
add
cs
jle
cmp
adc
and
add
sbb
xlat
adc
sub
out
jmp
cmpsb
sub
cmp
or
jb
gs
push
xchg
sbb
mov
jbe
adc
mov
pop
into
aas
mov
testb
sub
add
and
adc
and
fisttpll
push
lock
push
cmp
push
inc
inc
pop
mov
inc
dec
inc
push
jp
orb
pop
subb
popf
data16
ja
mov
sbbb
lods
mov
push
stos
pusha
addb
jge
inc
xchg
push
xchg
adc
push
xchg
mov
push
scas
adc
cmp
aas
cmp
push
enter
sti
sbb
cmp
adc
inc
mov
mov
sub
and
pop
fnstcw
inc
mov
dec
cld
and
gs
sub
lock
das
adc
dec
out
loope
in
jecxz
xor
std
cmp
shl
and
sub
adc
ret
pop
es
sub
push
out
es
xor
push
das
shlb
or
pop
sahf
ja
mov
pusha
mov
je
gs
stos
push
xchg
sbb
pop
in
aad
sti
dec
mov
fists
sbb
push
pushl
lds
dec
andl
loope
decb
push
dec
push
mov
sete
fldcw
push
scas
mov
pop
stos
bound
mov
addr16
mov
js
mov
xchg
jbe
mov
jle
push
hlt
jb
jl
pop
aad
mov
out
adc
sub
and
xor
jno
and
cmp
cmp
dec
movsb
add
jne
dec
mov
and
aas
jmp
outsl
mov
popa
pop
sbb
or
outsl
lock
adc
stos
sub
hlt
sbb
and
ret
pop
xorl
or
fidivl
sarb
repnz
adc
in
repnz
adc
add
or
add
aaa
clc
sub
add
mov
jnp
arpl
mov
daa
test
outsl
cmc
pop
ljmp
push
cmc
adc
xor
cmp
outsb
mov
cld
pop
aam
cli
and
or
xchg
mov
adc
addr16
mov
mov
popa
xchg
notl
mov
inc
xchg
jae
jno
pushf
outsl
mov
inc
mov
mov
add
xlat
cmp
add
shrb
cmp
sarl
sbb
rcr
jecxz
jg
push
clc
sbb
dec
ret
adc
or
push
stos
push
shlb
fwait
push
xlat
and
int
mov
shrb
jns
bswap
sbb
push
fimull
cmp
int
or
out
cmp
clc
sbb
cmc
enter
cld
rcrl
cmp
dec
pop
adc
adc
adc
sbb
cs
adc
call
xor
sbb
sub
mov
dec
xchg
fwait
inc
mov
inc
imul
push
sarl
outsb
xchg
push
test
cli
sbb
add
add
push
mov
adc
aas
in
popa
shll
daa
shlb
push
inc
jae
jns
test
lret
es
pop
rcll
xchg
jb
pusha
cwtl
andb
inc
mov
cmpsb
push
lahf
jge
dec
scas
insb
mov
jp
popa
lahf
dec
mov
int
cmp
jg
fcompl
in
out
ret
adc
enter
mov
sbb
aas
into
sub
or
xor
leave
and
or
icebp
add
or
jb
pop
mov
xor
push
xchg
repz
iret
clc
arpl
dec
sub
adc
lret
add
sub
fdivr
add
cmc
add
loop
sarb
shrb
in
pop
clc
fbld
xchg
insl
arpl
stos
dec
add
fwait
jle
mov
add
inc
dec
lahf
in
insl
lcall
inc
iret
jge
push
mov
sub
push
les
icebp
pop
lea
push
mov
cmp
scas
cmp
jp
inc
mov
cwtl
jnp
jb
pop
movsb
pusha
pushf
insb
mov
dec
cwtl
pop
mov
mov
xlat
fs
jae
inc
mov
mov
sub
out
xor
rcr
bnd
and
sub
faddl
daa
out
aad
cli
sbb
cmp
and
lds
sti
pop
jnp
lds
adc
or
jge
aaa
ljmp
shl
adc
cmc
sbb
je
sub
sbb
enter
int3
xor
das
out
cmc
adc
adc
push
lret
cmp
in
cld
adc
jecxz
sbb
rorb
fs
inc
fwait
pop
andl
cwtl
push
fimull
inc
mov
inc
popf
jno
jg
popa
scas
adc
xchg
xor
pop
cmpsb
in
shll
xchg
jbe
push
iret
sub
pushf
fbstp
enter
lods
jle
push
mov
daa
xchg
jbe
push
lahf
push
mov
lea
pop
mov
inc
test
push
mov
popa
mov
movsb
push
pop
lahf
pop
add
fwait
pop
lret
sbb
call
sub
cs
ljmp
in
testb
or
aaa
add
add
mov
xor
or
add
and
xchg
popf
pop
ljmp
data16
ja
sbb
cmp
enter
fcomps
and
ds
aas
negl
adc
aam
stc
and
sbb
push
std
and
sub
int
and
cmp
or
pmulhuw
leave
or
adc
mov
push
bound
lahf
test
outsl
mov
mov
dec
mov
jne
push
fdivl
inc
movsb
inc
mov
dec
nop
sbb
pop
orl
xor
inc
mov
mov
jbe
aaa
mov
dec
stos
jno
pusha
ret
inc
lods
jg
add
fs
xchg
lea
mov
dec
mov
push
mov
mov
push
test
xor
add
sbb
jmp
cmp
cmp
stc
sub
fdivl
sub
std
sbb
dec
imull
testb
pushf
pop
imull
fistl
les
imul
les
movb
dec
mov
les
mov
enter
out
leave
xstore-rng
cmpsl
inc
fcoms
hlt
imul
fstpt
aad
in
rcll
sbb
ljmp
and
adc
repnz
into
cld
cs
and
or
jmp
jo
push
push
ja
pusha
outsb
dec
pop
push
lods
mov
mov
mov
inc
stos
popa
mov
and
inc
into
push
mov
inc
notb
fs
es
xchg
dec
mov
pop
aam
enter
in
insl
xchg
sbb
cmp
inc
mov
iretw
jno
and
imul
pop
arpl
mov
cmpsb
insl
test
mov
jmp
in
jmp
call
xor
mov
loope
cli
leave
cmp
rcll
add
pop
frstor
int3
push
testl
add
sbb
mov
jmp
adc
xchg
xchg
or
xor
cmp
inc
aad
fildll
push
int
stos
pop
fwait
jl
add
or
sbb
xor
daa
decl
fdivs
and
add
sub
adc
sub
and
neg
sub
pop
leave
divb
loopne
add
xor
test
bound
push
push
dec
mov
cmpl
loop
xchg
outsl
fwait
je
inc
sti
jne
pop
mov
jle
pop
cmpsb
push
mov
add
ret
out
cmp
push
dec
mov
insl
mov
gs
stos
movsb
jge
push
inc
push
xchg
pop
mov
imul
dec
fwait
dec
imul
lea
jo
xchg
scas
je
insb
push
or
das
cli
repz
or
cli
push
das
hlt
daa
movsl
xor
sbb
les
aam
repz
xchg
and
sbb
cmp
push
cli
pop
int3
add
test
fistps
jb
push
into
jbe
aad
jle
jg
bound
shll
adc
pusha
ljmp
push
mov
cli
push
mov
jne
sbb
jne
jno
cmp
loope
sub
or
or
pop
lret
mov
jecxz
int
xchg
dec
jle
push
stos
dec
jne
lods
pop
scas
mov
mov
test
pop
cmp
dec
cwtl
stos
jae
enter
push
and
xor
mov
outsl
mov
in
push
js
or
or
shll
mov
test
cmp
inc
jnp
movsl
or
subl
loopne
outsb
jg
push
nop
pop
cltd
pusha
xchg
mov
jge
xchg
arpl
out
out
adc
sbb
cmp
or
sub
cli
hlt
sub
out
push
inc
inc
stos
pop
movsb
pop
or
cmp
xrelease
jle
lods
test
fstl
xchg
gs
xor
insl
in
xchg
repnz
mov
jbe
ljmp
ficomps
lock
daa
aaa
scas
push
sub
xor
add
movsb
loope
and
mov
ds
mov
fldt
inc
outsl
fiadds
sbb
mov
xor
loope
addr16
arpl
xchg
test
lock
xor
lods
inc
sti
sbb
adc
fsubl
iret
daa
loopne
jge
ljmp
jp
cs
mov
popa
and
mov
jge
jns
push
test
pop
movsb
insb
lahf
outsb
sbb
dec
cmp
cmc
pop
and
inc
in
jno
cmc
jb
adc
mov
or
push
inc
pop
and
lock
cmp
ljmp
andl
popf
aad
lea
pop
jmp
lret
cltd
xchg
shr
movsl
shll
sub
sub
ficomps
mov
sbb
je
fidivrs
cmc
faddp
xchg
sub
mov
push
pushw
repz
sbb
int
arpl
not
aas
out
push
loop
adcb
sub
and
fisubrl
cmc
push
std
loop
call
push
sub
mov
insb
fbld
mov
pop
add
ret
imul
insl
sub
cmpsl
lret
add
dec
add
mov
and
inc
shr
stc
jle
xchg
mov
sbb
aas
jmp
inc
daa
sahf
scas
fildll
mov
mov
dec
or
lods
push
in
dec
sub
push
mov
rcrl
dec
xor
xchg
jmp
ljmp
or
shr
sbb
or
push
sbb
sbbb
mov
dec
dec
jl
mov
bound
sub
nop
sub
sahf
fidivrs
push
hlt
int3
fstps
out
call
lahf
sbb
imul
mov
adc
mov
lcall
in
cmp
fisubl
xchg
mov
scas
scas
fldt
call
dec
jns
mov
mov
push
and
jb
cmp
xchg
lock
and
xchg
adc
sahf
mov
nop
lahf
ret
inc
mov
ret
inc
cmpsl
jmp
and
fwait
in
xlat
lds
mov
xor
lcall
adc
dec
ljmp
insb
xchg
lds
outsl
push
xor
adc
inc
mov
mov
dec
jp
inc
push
scas
dec
mov
inc
mov
lods
iret
ds
fstp
push
clc
sub
mov
loopne
xor
or
addb
dec
shl
mov
and
mov
imul
fisttpl
aaa
mov
inc
sbb
scas
push
aam
repz
data16
mov
sbb
cs
popf
xor
jle
pusha
mov
dec
icebp
add
mov
movsl
out
pop
call
pusha
out
xor
cmp
add
add
insl
test
loope
pop
push
insl
mov
fbld
in
jae
sbb
mov
xchg
arpl
pop
push
dec
add
mov
mulb
mov
das
jg
push
gs
stos
not
arpl
sbb
mov
adc
push
mov
xor
lods
push
xchg
push
jne
popa
imul
mov
out
fstpt
mov
mov
movb
sub
mov
addb
repz
and
add
in
push
and
mov
in
xchg
popa
cmp
jp
xor
inc
cmp
cltd
cmp
mov
fwait
mov
mov
dec
mov
lods
inc
in
not
mov
cmp
mov
xor
adc
mov
xlat
mov
scas
fcompl
outsl
sbb
ss
movsb
nop
loop
push
enter
rcr
cli
stos
out
repz
loop
sbb
scas
int
dec
lcall
mov
mov
and
sbb
sbb
xlat
and
sub
jno
cs
sub
icebp
and
mov
xchg
scas
outsb
xchg
pop
lods
insb
mov
test
xchg
cmp
ret
loop
dec
sbbl
mov
shrb
lcall
lcall
push
mov
rorb
jg
rcr
dec
roll
fildl
xchg
adc
adc
xor
mov
fistpll
ljmp
adc
cmpb
pusha
xchg
dec
mov
jae
xor
shrb
adcl
cmpsb
jle
jns
cmp
or
add
ss
dec
fcomps
shrl
mov
or
mov
ds
or
jbe
test
sbb
dec
roll
ljmp
or
push
sub
fistpl
pop
and
ss
push
sbb
or
jnp
inc
mov
pop
jecxz
shlb
je
sub
dec
sub
add
lock
sub
pop
push
and
and
cltd
cmp
cmp
pop
pop
and
mov
sbb
mov
loopne
fsubs
sub
fstps
push
mov
daa
ret
in
enter
fimull
popa
lahf
mov
jg
jl
in
cmc
xchg
sbb
sub
xchg
adc
jge
lods
dec
sbb
or
and
pop
sub
jecxz
jecxz
stos
testl
insb
mov
fwait
xchg
mov
arpl
xchg
pop
pop
test
mov
xchg
out
ss
rcrb
iret
and
orb
cld
int
lods
std
inc
xor
call
and
ja
jno
add
adc
in
mov
lds
stc
jno
push
roll
iret
and
sub
and
mov
movups
int3
push
push
xor
cmp
pop
add
adc
adc
sahf
test
ret
pop
sbb
push
in
cmc
or
hlt
sub
jle
imul
mov
mov
popw
cmovnp
cmp
mov
in
dec
jl
jl
jo
in
pop
inc
ljmp
std
mov
cmp
xor
loop
sbb
jle
mov
sub
out
stos
add
xchg
sub
xchg
lds
stos
sbb
shll
cmc
stos
xchg
insl
cmovns
dec
paddsw
cmpsl
test
insb
dec
loopne
mov
or
mov
andb
sub
xchg
sub
loop
inc
inc
and
jmp
cwtl
gs
inc
and
mov
mov
push
push
mov
push
cmp
jns
pop
gs
sub
lahf
sub
cmp
loop
mov
or
dec
inc
mov
mov
sbb
pop
xor
in
xchg
mov
mov
mov
in
popa
sub
outsb
cli
sbb
lods
jle
out
lods
xchg
sbb
mov
sti
scas
jp
fwait
cmp
call
leave
scas
aam
daa
neg
add
pop
mov
call
add
out
dec
fisubrs
xlat
pop
lahf
cwtl
es
leave
fdivrl
push
add
ss
jno
inc
lret
xchg
fldt
pop
mov
push
rolb
xchg
mov
pop
or
xchg
mov
inc
sub
adc
and
dec
dec
push
aad
mov
test
outsl
pop
hlt
push
or
lods
andl
pop
sub
and
invd
in
push
cmp
jae
sub
iret
jmp
mov
pusha
add
add
push
dec
lahf
fs
mov
mov
cmc
xchg
push
cwtl
into
ja
or
addr16
loopne
jg
les
ljmp
inc
dec
cmpsb
push
movsb
cmp
aad
in
repnz
mov
jge
add
je
cld
imul
sbb
imul
nop
or
jb
data16
rcrb
in
xor
dec
inc
in
mov
cmp
out
add
hlt
xlat
push
xchg
das
xor
icebp
sbb
cld
popa
lret
xor
fisttps
mov
gs
incb
cmp
push
jmp
out
cmp
cwtl
shl
rorb
in
pop
dec
pop
pop
js
mov
dec
int
mov
push
stos
xor
mov
out
popf
nop
add
clc
js
push
inc
inc
in
repz
push
or
test
add
pop
push
adc
inc
cmc
mov
adc
subb
lock
or
jns,pt
xchg
pop
push
fldenv
add
jecxz
ret
xchg
mov
add
jb
jae
fisttpll
int
jle
inc
push
sbb
lock
push
loopne
ret
movsl
icebp
jmp
push
gs
jno
push
stos
mov
push
jo
dec
xchg
cmpsl
jecxz
inc
inc
xor
lods
aaa
xlat
insb
xchg
call
mov
sub
fcom
imul
inc
xorl
idivl
lret
sarl
idivl
push
popf
cmp
mov
shrb
lahf
pop
lahf
mov
repnz
in
roll
pop
sbb
jp,pt
mov
mov
mov
jae
xlat
add
sbbb
adc
pop
and
arpl
xor
push
xor
scas
xlat
xor
mov
out
dec
xor
sub
test
push
pop
repnz
mov
iret
addr16
out
int
mov
into
or
pop
xor
lea
addr16
cmpsb
dec
call
jo
out
cmp
mov
dec
pop
clc
pop
dec
push
cld
sub
fsubrs
jecxz
mov
stc
sub
int3
adc
mov
mov
bound
bound
lds
xlat
dec
pop
xchg
bound
jno
jne
dec
lods
dec
xchg
cltd
subb
sub
stc
inc
mov
test
in
scas
jae
mov
push
sbbb
push
out
and
sti
xchg
cmc
movsl
lcall
fisttpl
lret
xchg
das
negb
inc
es
push
pop
ret
inc
insb
mov
mov
lret
xor
popa
xlat
scas
push
dec
lret
or
enter
or
xchg
movsb
pop
fisubrs
fldenv
fsubs
ljmp
adc
sub
adc
jp
or
xchg
lret
xor
sub
dec
push
or
xchg
scas
cmp
out
mov
or
lds
dec
scas
dec
std
sub
jnp
je
sbb
lret
jecxz
add
pop
xor
iret
and
adc
fcoml
aaa
sub
pop
jmp
daa
into
mov
outsl
sub
add
push
xor
sbb
call
and
adc
mov
dec
mov
stos
cwtl
push
test
mov
adc
fistpll
mov
out
lahf
pop
mov
insl
xchg
adc
push
dec
andb
rolb
cmc
movsl
inc
and
add
subl
dec
stos
sbbl
cmpsb
xor
subl
push
gs
cmc
push
jne
out
imul
movsl
or
xchg
cmp
pop
xchg
fistps
in
bound
push
dec
shll
inc
iret
xchg
cmpsb
pop
imul
inc
int
clc
repnz
sbb
or
sub
maskmovq
pop
pushf
dec
and
shrl
dec
fisubrs
add
pop
test
aam
adc
nop
cli
xchg
loopne
addr16
cmp
rorb
jl
mov
nop
insb
cmpsl
cmp
xchg
aad
imul
pusha
lods
push
mov
xchg
mov
push
or
imull
dec
test
add
jnp
jne
aam
je
xor
rolb
sub
adc
mov
jae
mov
sub
jae
sbb
jge
pop
push
insl
shrb
sbb
pushf
add
sbb
sbb
cs
mov
aad
sbb
sarl
repz
cmp
inc
xor
lds
pop
ret
aad
js
nop
sub
and
in
mov
icebp
repnz
and
adc
adc
mov
jno
icebp
add
xchg
cmp
movsb
xor
push
arpl
cmp
jge
lods
es
lock
ja
aaa
out
mov
mov
mov
ja
daa
popf
mov
mov
aam
push
sbb
inc
push
adc
jg
pop
aaa
push
ret
jp
adc
cmp
push
pushf
test
sbb
fidivs
cmpsl
pop
test
iret
dec
stos
lret
sbb
mov
rclb
shlb
scas
push
and
push
inc
mov
xchg
jb
pop
sub
jo
lcall
ret
sbb
jmp
jge
ret
fidivrs
rcll
sub
inc
lock
mov
aad
ficomps
mov
repnz
repnz
iret
test
imul
sub
cs
fadd
in
adc
inc
jmp
push
lcall
icebp
push
shlb
push
and
cs
push
in
and
popf
lcall
or
ds
stc
aad
mov
mov
push
aas
movmskps
and
push
movsl
jg
jmp
into
push
mov
addr16
repz
inc
or
push
sub
sbb
cmpsl
mov
sbb
notl
xor
mov
into
aas
or
std
jp
movsw
mov
es
nopl
add
jmp
shlb
sar
cmpsb
popf
nop
fidivl
bound
stos
jge
cmp
sub
aam
mov
add
lret
cmpxchg
xor
jns
xor
insl
fcmovnbe
xchg
sub
clc
sub
cmpsb
sub
and
cmp
sbb
mov
pushf
pop
sub
jg
out
mov
lret
push
insl
pop
loop
fwait
sbb
loop
cmc
addb
mov
mov
dec
pop
outsb
rolb
mov
inc
test
sub
sub
jne
mov
sbb
dec
mov
out
jp
adc
and
sub
mov
iret
pop
es
xchg
test
cmp
cmp
sub
mov
rcrb
jecxz
icebp
mov
dec
or
jne
inc
push
insl
loop
scas
outsl
push
jbe
mov
mov
outsl
pop
ss
loope
pop
cmp
cli
fidivs
shr
mov
push
fwait
in
daa
sbb
jo
jmp
shl
stos
adc
pop
jg
dec
imul
xor
or
or
sbb
js
mov
es
mov
or
adc
pop
fldcw
push
cli
inc
push
sti
sbb
lods
andl
push
cli
push
dec
pusha
int
mov
arpl
xor
jb
stos
into
jmp
scas
in
jnp
hlt
into
mov
pop
insl
xor
mov
dec
sysexit
inc
pop
loope
pop
movsb
push
lcall
leave
test
cmpsb
and
jbe
imul
add
aad
push
jnp,pt
or
loopne
push
inc
fidivrs
xor
xorl
jne
sbb
jmp
data16
mov
ficompl
imul
add
aaa
lock
mov
cmp
leave
xchg
inc
cmpsb
inc
mov
pop
add
xor
scas
sbb
sbb
xchg
fisubrl
movsb
xor
pop
dec
gs
test
out
insl
pop
lret
arpl
push
sbb
add
nop
mov
xchg
fcoml
adc
les
inc
lahf
or
lret
inc
stos
mov
mov
popa
popf
les
and
push
fucomp
xor
mov
sub
sub
das
fnstcw
push
cmp
pop
mov
jp
sub
adc
cmp
mov
andl
cmp
mov
sbb
sar
pop
adc
sub
dec
dec
stos
push
repnz
pusha
push
or
test
loop
jne
adc
loope
cmp
ljmp
inc
mov
scas
push
es
and
cmpsb
xchg
adc
jp
outsl
adc
mov
in
mov
cmpb
addr16
cmpsl
inc
mov
dec
cmp
or
sbb
mov
mov
out
jae
add
mov
and
dec
int3
sahf
inc
mov
ja
aam
cmpsb
cmpsb
push
mov
jne
movsb
stos
xchg
xlat
iret
int3
scas
and
lods
arpl
push
adc
nop
or
les
int
in
incb
mov
ds
xor
mov
cmp
pop
lahf
push
pop
fidivs
outsb
scas
sar
stc
test
shrl
scas
sbb
add
fdivrl
aam
js
adc
lcall
insb
pop
movsl
push
mov
inc
imul
test
scas
imul
shrb
mov
int3
in
aas
push
sbb
or
jbe
daa
ss
call
adc
ljmp
fidivs
divl
loope
mov
and
push
and
xor
cmpsl
dec
jecxz
call
daa
cmpsl
inc
sub
repz
mov
lea
mov
or
rolb
test
add
ljmp
cvtdq2ps
adc
test
push
repnz
sbb
cs
xor
movsb
hlt
sub
jae
jmp
negl
cmp
xor
test
jne
mov
xor
or
test
fnstcw
movsl
mov
lea
movsl
in
mov
pushw
xor
cli
jle
cltd
xchg
ret
inc
inc
out
pop
pop
lock
xor
popa
data16
and
push
bound
jnp
lds
ja
js
dec
cmp
movl
repnz
and
dec
adc
jle
fsubl
mov
jns
aad
std
out
adc
xchg
mov
sub
arpl
cmpsl
mov
pop
imul
loope
mov
pop
add
push
mov
xor
cld
push
and
sti
imul
push
adc
aas
adc
dec
jg
dec
enter
addr16
or
bound
inc
push
pop
scas
push
iret
dec
sub
or
inc
jecxz
fs
push
mov
mov
jae
rolb
lahf
aas
xlat
pusha
xchg
pushf
cmpsl
aad
jecxz
jp
lcall
or
sbb
mov
enter
cld
arpl
mov
mov
frstor
push
clc
pop
push
sub
xor
add
sarl
aaa
rorb
arpl
jns
es
out
paddsw
div
les
mov
test
dec
aas
popf
je
pop
sub
into
mov
xchg
aaa
jle
stos
pop
xchg
daa
ja
shrb
sub
jge
inc
sbb
testb
dec
mov
dec
fstpt
aad
jmp
sar
push
enter
scas
dec
and
dec
mov
add
mulps
jp
cmp
jmp
jae
cmp
andl
add
inc
gs
idiv
arpl
xchg
loope
cmpsl
and
sbb
scas
int
cwtl
repnz
mov
movsl
clc
pop
push
test
mov
clc
fwait
mov
hlt
hlt
test
icebp
sub
cmp
and
push
mov
adc
fstpl
jae
in
push
in
pop
push
sarl
or
jae
push
or
out
push
ljmp
into
aas
mov
jmp
outsb
cs
or
xor
jle
jae
xchg
jne
push
arpl
push
sub
mov
leave
push
and
sub
mov
pop
xchg
orl
pop
cli
cmc
mov
in
test
enter
roll
dec
pop
lret
fdivp
cli
repnz
xor
lret
fidivrs
xchg
cmc
dec
sub
ret
cmpsl
sbb
mov
xchg
sub
ret
fidivrs
and
adc
and
push
in
xor
mov
pop
cmp
orl
lea
add
ds
popa
pop
mov
xchg
insb
dec
and
mov
inc
cmp
cmpl
pop
or
les
mov
mov
inc
outsb
xchg
aaa
xor
imull
pop
xchg
mov
fistpl
xchg
mov
xor
mov
or
cmp
dec
jge
and
mov
or
lea
incb
lret
pusha
mov
mov
jno
add
movsb
scas
adcl
in
sub
enter
mov
ret
sbb
add
je
mov
call
sbb
nopl
ds
outsl
adc
push
push
or
in
pop
and
cmp
pop
mov
shl
mov
add
pop
jmp
cmpsl
popl
ret
jge
xor
inc
nop
ljmp
mov
popf
inc
sub
ret
cmp
enter
lcall
sbb
jp
insl
jnp
fiadds
outsl
add
sub
movsl
movsl
adc
mov
xor
ss
or
sub
mov
call
testl
vrcpps
xor
scas
popa
push
hlt
cwtl
push
xor
jo
inc
sarl
and
or
inc
ret
mov
das
shrd
mov
dec
and
xlat
mov
stc
lcall
mov
stos
scas
fmuls
mov
and
js
sbb
jmp
shll
dec
inc
out
jbe
mov
and
in
dec
lcall
adc
jno
pop
movsb
fs
cmp
lret
repz
in
insl
xor
jo
cmp
lret
add
push
jge
das
rol
adc
std
xchg
push
or
inc
inc
fistpll
xchg
test
js
pop
sahf
bound
xchg
fcmovb
push
push
push
fstp
movsb
and
pop
cs
loopne
mov
mov
enter
dec
mov
sub
loopne
sub
mov
mov
adc
xchg
adc
fdivrs
out
mov
test
call
jo
xor
xorl
xor
dec
xor
mov
adc
xor
aas
push
sti
xor
mov
insl
sub
dec
out
mov
imul
and
add
inc
je
loopne
or
mov
inc
or
mul
and
xor
shlb
cmp
jmp
loop
in
not
test
movsb
rorl
dec
stos
arpl
std
outsl
push
push
push
roll
xor
into
in
dec
push
mov
inc
add
add
test
das
int
nop
push
jae
fsubrl
outsb
dec
sahf
adc
or
cmpsb
fmuls
or
dec
sbb
fdivl
or
mov
or
cltd
sub
iret
push
aas
cmc
or
les
cmp
xchg
pop
jp
lret
fs
cs
adc
jne
pop
in
mov
adc
test
arpl
call
xor
sbb
pop
cmp
std
fs
jp
repz
mov
sub
ret
dec
loope
xchg
fmull
inc
sbb
xor
cld
out
push
jge
mov
dec
fidivl
and
pop
jbe
les
cs
push
dec
mov
cmc
pop
xchg
jmp
push
and
fists
mov
mov
stos
xchg
adc
and
pop
syscall
aad
rol
dec
or
out
pop
pop
mov
lret
push
bound
iret
lds
adc
stos
xlat
mov
movsb
sarb
fldl
or
adc
stc
mov
cltd
test
push
xor
sbb
imul
mov
in
cmpsb
ja
push
leave
xor
es
sub
or
jle
push
mov
dec
rclb
mov
into
js
pusha
sub
mov
nop
out
pusha
adc
mov
mov
sbb
sarl
pop
mov
sub
stos
out
or
in
pop
les
jnp
mov
lock
jae
shrb
test
pushf
xchg
cmp
jno
dec
out
mov
pop
and
dec
into
das
mov
pop
lea
ss
jmp
aad
adc
dec
sar
inc
lahf
mov
mov
jb
idivl
in
pop
out
imul
mov
fwait
pop
or
mov
addr16
mov
xor
frstor
stc
sub
dec
fsubrs
and
mov
inc
ljmp
imul
and
or
inc
and
xor
sbb
jge
jae
inc
daa
dec
mov
mov
insb
addr16
data16
pop
nop
pop
test
mov
ret
jae
jno
push
int
iret
jne
pop
adcl
push
mov
aad
dec
mov
test
inc
imul
test
fisubl
fdivs
mov
dec
stos
mov
fwait
imul
orb
mov
mov
call
bound
push
cmpsb
movsl
pop
shl
loope
add
and
clc
rolb
into
jmp
adc
sub
es
sbb
daa
fsubrs
sarl
adc
out
inc
pop
rolb
sub
cmp
jne
pop
sti
insb
shll
cli
pusha
fisubrl
addr16
cmp
xor
xor
in
cli
pop
in
and
cs
adc
add
add
adc
add
loope
in
lret
adc
xlat
out
cmp
or
sbb
les
cvtpi2ps
or
pop
xor
add
mov
inc
xchg
je
dec
int
mov
outsl
xorb
cmpsb
jne
pop
enter
sahf
dec
shrl
arpl
push
arpl
dec
stos
dec
lods
ja
gs
loopne
inc
outsl
into
add
sbb
data16
je
insb
mov
mov
dec
insb
sbbl
xchg
jle
jae
pop
mov
mov
jae
dec
movsl
pop
xchg
pop
push
in
pusha
lcall
mov
lds
push
pop
out
cs
cli
xchg
cmp
adc
ror
repnz
aaa
cld
sbb
and
adc
xor
addr16
arpl
push
rclb
je
adc
jl
js
pop
mov
lods
repz
sbb
cmp
outsb
arpl
mov
test
das
add
cmp
cmc
sub
push
add
jmp
pop
sbb
shll
jle
in
add
or
cld
lret
int
jns
in
xchg
jae
addr16
stos
test
test
outsl
jle
ja
hlt
inc
mov
mov
pushf
imul
cltd
or
outsb
mov
fs
inc
mov
mov
pop
popf
js
push
push
rcrb
cmpsl
lock
jmp
jg
sub
mov
dec
dec
lea
pop
movsb
push
jp
xchg
push
dec
push
nop
push
cwtl
and
nop
inc
negl
jno
push
outsl
aam
xchg
cmp
fcmovne
ret
xor
sbb
adc
jno
and
adc
ljmp
sbb
pop
cld
add
cs
inc
xchg
sub
out
fdivrs
xor
push
lds
dec
jmp
pushf
sarl
movsl
jg
sbb
push
in
fstpt
add
cmp
jmp
repnz
cmc
out
lock
and
dec
add
sub
les
fs
push
outsb
xchg
daa
sbb
arpl
addr16
pop
xchg
pop
ljmp
or
pop
lods
pop
in
lcall
sbb
movsl
dec
mov
arpl
arpl
push
jle
loop
icebp
dec
mov
shrb
push
mov
or
inc
mov
push
xorb
popa
push
stos
pop
xchg
popf
mov
je
xchg
imul
mov
jne
pop
insl
lods
inc
mov
push
addr16
cs
call
jge
aas
out
ljmp
pop
incb
lock
hlt
sub
dec
mov
or
and
adc
sbb
mov
mov
mov
lahf
pop
mov
or
dec
aad
jmp
sub
ljmp
cmp
or
xor
and
cmp
add
lret
and
ljmp
adc
cmp
adc
loopne
call
sbb
icebp
push
repnz
fwait
mov
jge
inc
mov
jae
ja
and
inc
out
jae
mov
pop
sarl
mov
pop
andb
mov
xlat
xor
add
sarl
add
xor
outsl
insl
test
push
in
mov
dec
popa
arpl
stos
xchg
insl
xchg
je
xchg
arpl
fwait
mov
dec
xchg
pop
mov
outsb
mov
mov
mov
jbe
push
cmp
pop
mov
maskmovq
notl
sub
dec
aad
cld
arpl
pop
mov
icebp
adc
mov
dec
cmpb
cwtl
popa
lahf
ja
or
push
cmpsl
bound
js
pusha
iret
iret
dec
mov
or
sbb
xor
pop
fwait
jg
daa
sarb
fldlg2
cmp
repnz
push
fldenv
cmp
and
sub
cmp
push
jmp
ret
adc
lds
mov
inc
jb
push
mov
outsb
out
imulb
fsubs
pop
mov
add
xor
sub
xchg
pop
stos
dec
mov
mov
xlat
sub
and
daa
xlat
das
ret
js
gs
out
and
add
push
mov
adc
and
addb
xchg
imul
movsl
jne
jp
dec
pushf
jbe
pop
mov
test
insl
mov
test
xchg
pop
mov
cwtl
cmpsl
cmp
xor
or
sbb
pop
fsubl
mov
inc
hlt
movsb
push
pop
xchg
jge
ds
cmp
fadds
push
insb
nop
inc
aad
test
inc
xchg
push
lods
inc
mov
outsb
aad
xchg
mov
sub
wbinvd
call
adc
sub
cmp
pop
ret
repz
cmp
fists
sbb
and
rcrb
repz
cmp
andb
stos
push
dec
mov
pop
imul
rolb
fistpll
mov
dec
xchg
jno
adc
adc
loopne
leave
aaa
loopne
stos
and
sub
aaa
lret
or
scas
push
fists
jb
jno
dec
jb
add
adc
push
mov
dec
push
test
jge
pop
test
movsb
cmpsl
push
xchg
mov
push
scas
push
test
push
xchg
pop
mov
mov
cmp
add
sbb
rolb
ret
ljmp
sub
and
imul
testb
pop
filds
outsl
mov
jl
xor
mov
aaa
test
pop
cmpsb
push
ret
cld
pop
in
xlat
and
xor
andb
dec
xchg
and
ror
fiaddl
lret
aaa
in
stc
sub
rcl
shll
leave
sbb
push
out
cmp
or
enter
lock
adc
mov
mov
sub
push
xchg
inc
cmpsl
data16
mov
push
mov
add
outsl
lods
pop
pushf
je
or
add
push
outsb
iret
enter
inc
mov
lods
or
mov
insb
inc
daa
dec
mov
cmpsb
push
cmpsb
sbb
stos
mov
push
pusha
xchg
dec
mov
pop
cwtl
dec
xchg
addr16
lods
jnp
inc
xchg
pop
jno
push
xorb
jg
sub
push
scas
daa
mov
das
ljmp
or
iret
and
lds
fmuls
stc
or
jp
dec
aam
lea
pop
stos
pop
cwtl
add
adc
and
inc
jmp
mov
mov
push
imul
in
ljmp
sbb
in
les
hlt
lret
ret
nop
or
enter
add
adc
and
xor
sub
lock
pop
out
or
push
loopne
divl
xchg
movsl
dec
mov
xchg
dec
mov
jl
inc
lcall
sub
xor
push
sub
and
or
jnp
data16
jbe
inc
push
lret
sub
add
inc
pop
test
pop
mov
test
sub
mov
stos
stos
inc
cmpsb
inc
cltd
movsb
xchg
pop
imul
scas
js
push
test
mov
xchg
stos
inc
cwtl
jl
push
insl
mov
dec
xchg
dec
cld
in
adc
jo
adc
in
pop
and
in
xor
je
push
mov
fdivrl
sbb
fsubrs
loopne
scas
insl
mov
inc
mov
and
or
inc
mov
stos
and
pop
or
sbb
ret
ret
lret
sarl
fmuls
pop
sbb
ret
sub
cli
divb
cmp
sbb
ds
cmp
cmp
fisubs
cmp
xor
adc
in
and
test
aad
mov
dec
jg
xchg
es
jle
inc
lods
dec
out
nop
outsb
mov
lret
daa
hlt
pop
idivb
addr16
dec
xchg
adc
add
xchg
inc
mov
loopne
fisubrs
xchg
xchg
mov
cmp
push
inc
inc
xor
jne
imul
aad
pop
ljmp
bound
cwtl
cmpsb
push
and
cmc
add
sbb
stos
pop
popf
jg
popa
pop
mov
push
andb
sub
orl
xor
ja
fists
dec
pushf
xchg
fldenv
loopne
jmp
or
or
sbb
and
loopne
pop
gs
adc
pushf
push
sub
jbe
aam
iret
fadds
xchg
sub
xor
mov
jb
in
aas
std
and
lock
push
in
sbb
mov
inc
or
jle
dec
push
mov
push
stos
das
xchg
jmp
loop
pushw
lahf
adc
nop
shrb
mov
scas
mov
cmp
sbbl
cltd
xor
sbb
lcall
jb
and
pushf
cmpsb
in
mov
cltd
out
shlb
push
ret
mov
cmc
out
dec
mov
sub
lcall
test
rclb
popa
inc
jo
push
push
loop
xchg
insl
xor
lods
and
push
rorl
dec
je
cmp
and
aas
mov
mov
mov
je
dec
jb
lcall
pop
add
hlt
mov
int3
call
mov
mov
dec
outsb
pop
dec
daa
push
sbb
xchg
or
or
push
mov
test
lcall
inc
and
pop
faddl
ret
repnz
push
popf
in
in
popf
in
mov
popa
sbb
insb
cld
push
inc
in
push
xor
jb
mov
and
dec
mov
sub
or
inc
jle
aam
pop
cmp
sbb
lods
out
into
cmp
add
sub
inc
lods
jbe
or
imul
push
imul
loope
andl
daa
push
adc
inc
lods
xor
pusha
test
and
xchg
inc
and
cs
movsb
dec
dec
icebp
inc
push
push
cmp
enter
lods
insb
sahf
rcll
jnp
int
stos
ja
mov
inc
push
jmp
inc
pop
cmp
icebp
xchg
cmp
mov
sbb
loopne
push
sub
cld
in
aad
xchg
mov
sbb
add
sub
cltd
in
les
nop
jo
callw
pusha
ss
sbb
mov
int3
mov
and
ss
sbb
mov
and
push
pop
ljmp
jg
push
fldenv
fldt
incb
adc
cmp
adc
inc
xchg
mov
sub
and
jno
cmpsl
fmull
testb
xchg
test
xchg
jns
inc
add
sub
cmp
aad
ret
movsb
sti
xchg
pop
imul
adc
jns
popl
xchg
icebp
sub
leave
add
push
dec
dec
pop
stos
and
sbb
popf
inc
or
cmp
test
push
inc
adc
inc
stos
push
in
xchg
xchg
xchg
mov
sarl
and
sarl
xchg
dec
lcall
or
or
sub
or
push
cs
inc
jne
test
cmc
sub
mov
lock
sub
das
pop
mov
and
xlat
aaa
repnz
dec
repz
in
stos
or
pop
in
cli
js
jmp
dec
fwait
pusha
mov
fstpl
dec
xor
aam
dec
cmpsb
pop
vaddps
das
mov
jae
push
mov
rorl
sub
in
ficoml
add
add
jmp
movsl
js
bound
je
add
adc
or
sub
push
jge
test
mov
mov
fs
imul
push
jl
sar
lods
adc
std
jb
ret
sbb
mov
mov
ss
into
sub
lds
addl
ds
mov
lods
nop
jo
add
movsb
mov
mov
jmp
mov
ds
cmc
in
xor
call
cmp
lea
push
stos
pop
out
adc
cmp
mov
icebp
pop
repnz
jecxz
in
mov
movsb
mov
pop
sbb
repz
xchg
cwtl
jmp
sub
dec
pop
and
cs
dec
mov
adc
and
imul
jle
ljmp
adc
push
idivb
ds
inc
imul
test
pop
mov
inc
mov
fstps
mov
adc
xor
out
xchg
in
add
push
xlat
mov
xor
rcll
push
jbe
out
popa
mov
adc
adc
iret
mov
ret
stos
xchg
pop
out
cmp
cmp
lock
jo
lods
jne
pusha
outsl
jmp
gs
ja
or
in
pop
call
ds
sti
lods
stos
xchg
and
and
outsl
rclb
leave
adc
hlt
dec
xlat
cmp
ret
adc
xor
outsl
mov
fcoml
lock
push
out
lahf
out
or
fcoms
push
mov
inc
stos
inc
jns
ss
mov
imul
stos
je
push
xchg
lods
fisubrl
out
sub
cmpsl
repnz
add
incl
cmc
inc
inc
xchg
inc
xor
loope
sbbl
xchg
out
in
jne
mov
sahf
ja
cltd
push
call
mov
mov
xchg
bound
sahf
aam
xor
test
and
jecxz
add
test
or
add
add
or
mov
xchg
jb
inc
mov
stc
rorl
inc
sbb
call
cmp
clc
movsb
xchg
iret
or
cmp
sbb
mov
mov
es
sbb
adc
icebp
sbb
pop
mov
mov
push
push
rclb
mov
shlb
xor
xchg
pop
xor
gs
or
nop
insb
subl
lock
sbb
xchg
jp
mov
std
sub
dec
adc
lret
push
loopne
push
dec
loop
leave
imul
inc
mov
sub
mov
mov
iret
xchg
lods
cmp
aaa
and
lock
xchg
xchg
aaa
dec
pop
sub
test
mov
and
in
mov
mov
cmc
jbe
adc
in
inc
repz
fcoml
xchg
mov
jecxz
ss
xchg
daa
pop
push
mov
sub
mov
mov
mov
loope
jmp
sbb
movd
xor
jae
xchg
push
call
lock
push
sbb
hlt
sub
fdivrl
jecxz
loopne
ret
cmp
in
insb
xchg
bound
lret
rorl
jp
and
push
add
sti
aad
jmp
inc
cltd
out
out
lods
jbe
fwait
sbb
jmp
ss
mov
add
xchg
fisubrs
dec
xchg
fimuls
stos
sahf
mov
jae
es
dec
sbb
xor
jmp
frstor
mov
icebp
mov
int3
scas
jbe
push
xchg
mov
push
xor
push
pop
lods
jmp
imul
adc
push
sbbl
sahf
ja
ds
pop
dec
call
popf
xchg
ja
or
fisubrs
push
jmp
and
push
fdivs
movsb
pop
add
sbb
push
dec
mov
jne
jecxz
aas
ret
or
inc
dec
lods
pop
int
fsubs
mov
mov
int3
xchg
xlat
sub
sahf
mov
sbb
or
mov
lahf
jg
pop
repz
jae
cltd
mov
jmp
xor
mov
arpl
sarl
iret
sbb
pop
or
jno
or
inc
scas
int
aas
fiaddl
out
pop
cmp
in
and
inc
xchg
inc
test
test
aad
and
test
xor
jmp
jmp
ds
xchg
adc
and
dec
sbb
and
outsl
repz
sahf
jg
dec
loope
nop
push
out
adc
xor
pop
aad
repz
data16
or
add
push
inc
push
fcomps
pusha
lahf
adc
fwait
adc
inc
cs
jae
mov
mov
popa
mov
pcmpgtw
mov
adc
cmpsl
dec
fwait
pop
fidivrl
adc
in
or
dec
push
inc
inc
cli
loope
sti
mov
pop
xchg
jecxz
or
pop
ret
or
pop
xor
xor
jns
dec
inc
pop
pop
dec
popa
mov
push
mov
push
xor
popf
inc
cmpsb
xlat
or
clc
cmp
movsl
inc
aas
movb
stos
ja
mov
fcomps
aad
xor
inc
mov
or
scas
sub
add
mov
sub
pop
cwtl
shrl
add
or
push
loope
push
mov
and
xchg
cwtl
and
rcll
xchg
jnp
jg
push
movsb
add
lds
fisubrs
push
push
enter
rorl
and
pop
stos
add
roll
out
sbb
inc
pop
jns
mov
jmp
sub
and
mov
outsw
js
mov
push
cld
ds
fiaddl
push
scas
mov
test
aas
sub
add
lcall
inc
cwtl
fs
mov
xlat
cld
lds
xchg
push
mov
cmp
push
fldt
int
xchg
mov
dec
hlt
lret
mov
loope
loop
mov
add
fisubrs
push
arpl
pop
test
scas
inc
mov
dec
mov
or
mov
repz
cs
jmp
sbb
test
call
testb
int3
fisubrs
mov
mov
inc
inc
sbb
inc
mov
stos
pop
ja
cmp
lret
scas
pop
xchg
fsubrs
push
pusha
shlb
popf
push
iret
xchg
push
test
inc
or
adc
push
add
arpl
ss
push
xor
lcall
mov
pop
jne
pushf
sbb
xlat
and
mov
sbb
std
adc
mov
addl
clc
sbb
fmulp
mov
in
cmpsl
push
iret
or
sbb
repz
aam
aam
fstpl
adc
inc
cmp
mov
test
enter
mov
retw
cltd
imul
pop
ja
jle
testb
and
loop
rcrb
pop
mov
mov
sbb
test
pop
dec
mov
in
das
ja
jns
or
and
int
sbb
sarl
dec
outsb
shll
jnp
cmp
adc
xchg
and
testb
mov
nop
jmp
repz
movsb
nop
push
ljmp
cmp
adc
mov
daa
fsubrl
mov
fistps
add
pop
add
add
flds
negl
cld
test
icebp
adc
mov
push
std
or
clc
sbb
aas
in
or
jns
jg
cmp
dec
and
push
add
xor
and
fucomi
cs
leave
mov
pop
test
enter
dec
movsb
dec
iret
hlt
les
incb
test
leave
lods
je
adc
js
lea
iret
scas
push
mov
mov
js
insl
filds
xchg
outsl
adc
fists
dec
dec
aam
clc
aad
icebp
shr
jg
loop
imul
es
pushf
inc
lahf
cmpsl
push
in
icebp
ljmp
fistpll
sbb
or
mov
lcall
nop
mov
mov
or
into
add
pop
sbb
adc
mov
arpl
fwait
les
jg
dec
xor
cmp
jp
fwait
xchg
push
and
inc
stc
mov
popa
cwtl
rorl
jp
int
xchg
and
imul
iret
in
popl
push
cmc
sub
jg
fwait
mov
or
test
mov
xor
push
gs
xchg
outsl
adc
xor
cmpsb
in
nop
jne
inc
mov
pushf
or
fiaddl
push
cmpsl
push
scas
add
outsb
mov
aaa
ljmp
push
loop
inc
pop
mov
mov
sub
sub
xchg
pop
movsl
dec
bound
pop
outsb
cwtl
bound
cmp
outsl
in
test
lock
mov
push
or
stos
arpl
push
jmp
int
adc
bound
pop
test
call
mov
test
in
daa
les
out
scas
repnz
fstpt
pop
add
pop
lret
jmp
sbb
aam
sbb
fisttpl
in
jns
jle
stc
inc
mov
jge
pop
out
stos
adc
sbb
add
cmp
repz
jne
xorb
roll
les
daa
and
xor
pop
jbe
xchg
or
cmp
int3
or
pop
mov
push
mov
push
mov
movsl
and
mov
fidivs
mov
ret
xlat
je
xor
mov
cmp
shll
mov
lods
les
shl
test
cmpsl
insb
mov
or
inc
lcall
sub
bound
lods
outsl
mov
mov
sub
enter
test
lea
gs
out
sbb
ret
adc
adc
clc
add
iret
inc
xchg
loope
cld
mov
sarb
in
mov
or
push
test
seto
jne
pushf
and
and
and
in
jns
dec
pop
mov
mov
cltd
push
rorl
in
outsb
imul
push
leave
inc
add
sbb
mov
xor
sub
imul
mov
and
xor
into
icebp
inc
or
mov
cmp
sbb
fimull
xchg
push
out
adc
mov
inc
mov
jge
and
cmpb
adc
xchg
testb
pop
addr16
mov
cmpb
leave
push
sbb
cmp
stos
push
rorl
leave
sbb
test
scas
scas
cmp
mov
add
je
pop
push
or
cmp
dec
xchg
mov
add
sbb
arpl
mov
mov
xchg
mov
leave
cmp
pop
popa
cmpsb
mov
imul
sbb
mov
sub
pop
xchg
mov
dec
out
push
popf
and
daa
out
sub
in
add
inc
test
cmpsl
sahf
or
sbb
push
insl
arpl
lods
adc
std
add
or
cmpl
ja
sbb
mov
fdivs
std
repz
push
sbb
mov
cmp
idivb
xlat
inc
lods
add
mov
push
xchg
popf
sbb
jns
mov
adc
fadds
mov
mov
push
push
and
cli
out
test
add
stc
ds
push
mov
and
adcl
cmc
mov
divl
xchg
jbe
jnp
sub
sub
push
xchg
insb
stos
inc
sti
jecxz
in
lahf
xchg
nop
rcrl
pop
cmp
cmp
or
fimull
cmpsb
dec
test
fisubs
sub
lcall
hlt
xchg
loop
xor
pushf
out
in
daa
dec
mov
mov
push
xchg
add
out
or
cmp
popf
and
shl
xor
test
stos
inc
das
scas
add
sahf
jae
adc
rcll
bound
in
cmp
mov
lds
popf
jmp
or
pop
or
data16
sub
xchg
dec
fnstsw
popl
out
pslld
inc
lock
scas
push
popf
je
jbe
mov
lahf
cmovp
xor
notl
out
pop
xchg
xchg
mov
mov
scas
adc
jecxz
rolb
push
shrl
pop
xor
pop
push
rolb
sub
pop
mov
iret
ljmp
fistl
sub
lea
lahf
js
cmpsb
loopne
mov
xor
lahf
loopne
jb
stos
mov
xchg
in
xlat
sbb
add
dec
mov
sub
sbb
arpl
insl
mov
lea
test
jo
adc
cmp
xor
mov
pop
testl
pop
fucomip
pushf
xor
pop
les
fldl
xor
cli
adc
fildll
dec
daa
pop
pop
inc
pusha
pop
sbb
xor
scas
test
and
sub
jno
jno
add
jmp
popf
mov
jb
mov
mov
jb
sbb
int3
jb
inc
or
push
mov
int
in
ret
jmp
leave
clc
or
hlt
sub
lock
sub
sbb
iret
or
ret
sub
movsb
dec
pop
jp
xchg
scas
sbb
inc
movsl
adc
dec
sub
shr
and
cld
adc
jle
jl
add
inc
movb
enter
push
inc
cli
popa
cwtl
lahf
xchg
fmull
mov
sub
cs
cmove
lock
mov
daa
mov
mov
outsl
adc
jns
js
add
or
dec
ds
mov
loopne
mov
inc
repz
imul
ljmp
jl
adc
pop
xlat
les
pop
in
icebp
aas
sar
jne
cli
adc
xorb
adc
or
sbb
ret
sbb
cli
out
add
les
stc
jmp
aam
inc
inc
inc
sub
in
incl
or
gs
pusha
pop
je
js
dec
fistpl
inc
or
cmp
push
mov
shr
and
xchg
lock
pop
sub
push
clc
xor
cmp
adc
cmpsb
adc
push
or
add
insb
inc
int3
or
rorb
nop
data16
jns
data16
repnz
ficompl
xchg
mov
xor
dec
adc
xchg
pop
pop
test
out
jae
push
mov
push
and
arpl
sub
fwait
shll
dec
mov
nop
int
dec
mov
push
cmp
mov
lret
mov
scas
pop
jb
cmp
inc
loope
cmp
push
and
mov
insb
push
out
test
aaa
out
outsb
int
jb
jae,pt
icebp
and
pop
jb
mov
pop
addr16
in
or
adcb
push
push
sbb
fsubrl
pop
addr16
cmpsb
sbb
jmp
jecxz
lahf
aaa
stos
or
jp
pop
xlat
fidivs
pop
cmpb
clc
loope
out
mov
int
and
sub
pushf
sbb
imulb
mov
lods
mov
and
and
scas
frstor
lret
test
hlt
das
gs
fildll
lods
cmp
fs
test
cltd
lret
sub
lea
push
call
cmp
inc
mov
sub
test
and
xor
das
fbld
pop
ret
cltd
aam
pop
jns
test
lods
pop
ss
rcrb
adc
pop
inc
inc
pop
xor
push
mov
sub
push
repnz
pushf
test
sti
incl
xor
mov
mov
adc
cli
ret
adc
das
cmp
cmp
in
xor
jg
fldl
lea
sarb
into
test
outsl
push
test
add
push
mov
add
jbe
mov
xor
inc
inc
jmp
aas
mov
sarl
insb
clc
nop
cmp
loopne
lret
mov
fcoms
fcoml
mov
neg
packuswb
das
pop
sbb
outsl
add
ljmp
dec
adc
dec
int
xor
adc
jge
sub
jae
and
loope
inc
and
lods
test
imul
add
sub
mov
gs
test
xchg
popf
jo
sti
or
inc
pop
inc
mov
data16
inc
push
cmp
mov
xor
add
inc
mov
repz
add
in
imul
jne
mov
clc
js
jecxz
fcoms
flds
into
pop
aam
jl
cli
cmp
xor
rorl
pop
dec
or
out
pop
mov
xlat
test
push
cld
xchg
adc
adc
push
dec
cmpb
mov
xchg
lock
adc
xor
push
rcrl
lret
fldl
popa
jmp
mov
push
or
mov
int
or
or
xor
in
add
xorb
mov
lcall
mov
mov
add
jae
fiadds
adc
js
xchg
jl
sub
mov
sbb
dec
cmpsb
outsl
xchg
pop
ss
out
fcmovbe
jns
mov
mov
and
cli
mov
std
cmpsl
pop
add
mov
mov
mov
sub
cli
pop
enter
sbb
sub
icebp
sbb
jg
jecxz
fimuls
cmpsb
pushf
adc
xor
sbb
push
stos
subl
test
pop
push
arpl
movsb
inc
mov
insl
mov
cltd
mov
xor
mov
mov
repz
mov
mov
popf
daa
mov
cs
xor
fbstp
push
pop
test
add
inc
cltd
enter
lcall
sbb
loop
mov
imul
insb
shll
xchg
adc
shlb
mov
rcl
mov
jp
iret
mov
inc
data16
push
add
int3
mov
icebp
jbe
push
xchg
leave
mov
add
adc
lcall
mov
dec
sti
and
aam
popa
std
xor
fst
inc
lcall
std
xor
shlb
dec
adc
repnz
clc
ss
push
ljmp
out
cli
decl
lods
mov
dec
and
sub
or
or
shlb
pushf
or
es
int3
mov
fbld
icebp
sbb
orl
scas
mov
ljmp
mov
or
in
xor
leave
mov
gs
cmp
cwtl
int3
pop
push
push
push
or
xor
jmp
movb
mov
dec
jnp
out
mov
adc
xor
dec
lret
bound
dec
les
push
mov
in
cmc
jmp
inc
fwait
pop
dec
mov
jmp
and
push
sub
and
psrad
inc
inc
repz
rcr
pop
js
mov
dec
lea
xchg
inc
lds
lock
lcall
loop
iret
nop
sub
fistpl
in
cwtl
jns
xor
ss
jnp
dec
lods
push
fisubrs
push
in
repz
add
dec
xor
imul
xor
rcll
inc
jo
inc
or
mov
gs
ljmp
cli
jno
sbb
gs
mov
inc
pushl
leave
stc
pop
xchg
imul
fisttps
mov
or
jl
aad
xor
cmp
dec
in
dec
lods
jo
push
cwtl
mul
sbb
push
cli
and
xchg
je
add
test
sub
lahf
movb
sbb
lock
inc
andb
mov
jmp
push
xchg
ficomps
mov
dec
xchg
xchg
xor
imul
add
scas
inc
pop
sbb
xor
ret
jmp
ret
les
leave
cmp
mov
push
shlb
subb
fmull
jp
dec
rorb
mov
cmpsb
cmp
gs
sti
mov
scas
test
dec
sub
mov
xchg
xor
lods
outsl
arpl
xor
nop
sti
addr16
sub
jo
and
and
ret
pop
out
and
push
aas
test
mov
arpl
adc
add
push
out
call
out
ficompl
rcll
nop
push
notb
popa
rcll
mov
shll
add
cli
jp
xchg
cmp
pop
mov
aam
into
mov
mov
sub
ja
mov
mov
mov
inc
rorb
dec
dec
je
movsl
jmp
ds
pop
push
add
xor
dec
bnd
cld
sbb
pop
in
add
xor
jge
fisttpl
xor
daa
fildl
mov
out
xchg
fcmovu
jmp
adc
mov
jbe
jmp
sub
stc
scas
sbbl
arpl
mov
xchg
es
call
jo
in
dec
sbb
sub
scas
roll
into
pop
mov
imul
int
inc
pop
cmp
xchg
cmp
sbb
or
xchg
jg
test
and
scas
mov
inc
hlt
mov
notl
xor
add
out
inc
neg
mov
int
push
in
mov
pop
lea
insb
push
pop
ss
xchg
aam
nop
enter
jl
mov
gs
ss
pushf
sahf
pop
pop
jae
sarl
sub
test
ljmp
jecxz
and
div
repnz
add
rcrl
sbb
inc
faddl
mov
xchg
jb
dec
pop
mov
and
subl
push
pop
mov
jmp
mov
jp
push
dec
mov
arpl
vpshab
jmp
fisubrs
out
or
lock
sub
adc
adc
sbb
jecxz
add
cmp
xor
xor
loope
xor
add
insb
repz
xor
pop
mov
adc
scas
add
mov
mov
mov
xchg
mov
sbbb
pop
push
cmp
push
jb
aaa
jg
mov
dec
xorb
andl
sub
jmp
add
cmc
sbb
sub
jmp
std
rolb
pop
ss
divb
insb
jle
or
xor
mov
ds
hlt
and
loope
jl
js
push
daa
xchg
addl
negb
test
dec
push
xor
xchg
popa
pop
jmp
ret
imul
dec
push
cmpsl
lods
popf
mov
sub
push
and
inc
rcl
or
out
sbb
lods
sub
sub
cli
adc
dec
into
xchg
add
pop
lods
pop
fcmovnb
sub
sub
sahf
and
mov
call
fstps
divb
push
movsb
outsl
mov
popa
dec
outsb
movsl
push
scas
pop
jae
sub
or
imul
arpl
mov
inc
cli
scas
popf
test
inc
dec
popl
inc
mov
lods
cmpsl
arpl
icebp
into
fldenv
mov
and
pop
sub
sub
pop
ret
sbb
mov
stos
and
dec
fsubrl
and
pop
ret
lods
mov
loope
and
mov
daa
jp
xlat
stos
dec
pushf
fisttps
pop
scas
dec
fnstenv
pop
cmpsl
pop
aam
add
ret
sub
sub
ret
mull
sbb
mov
lret
inc
inc
adc
out
and
or
dec
mov
dec
jg
xchg
mov
xchg
cli
sarb
ljmp
leave
ja
cmp
nop
sarl
xchg
jbe
or
mov
sbb
cmp
mov
rcll
loope
into
xor
sbb
add
inc
mov
push
fsts
mov
sbbb
pop
mov
push
mov
mov
cltd
jbe
adc
cmp
mov
pop
scas
inc
shll
sbb
xchg
inc
shll
mov
lret
adc
jo
jns
add
jle
data16
test
xor
shrb
aas
std
gs
jne
pop
sarb
xor
or
adc
daa
mov
xchg
adcb
sbb
ds
dec
mov
push
out
sbb
push
repz
jno
inc
inc
inc
xchg
sbb
fsubrl
mov
pop
loopne
les
arpl
push
repnz
mov
jg
inc
lods
sbb
add
mov
xor
and
dec
mov
aam
cwtl
cmp
push
inc
cwtl
inc
xchg
adc
ds
nop
loopne
flds
mov
mov
fsubrs
gs
jo
adc
jno
cmp
cmp
sub
sbb
xlat
sub
push
jbe
adc
iret
hlt
out
cli
sub
call
jbe
bound
add
std
jno
inc
mov
sub
inc
es
mov
je
or
adc
mov
sub
mov
pop
mov
lds
in
sbb
sbb
roll
fmull
fcoml
mov
add
add
xor
cmp
adc
add
mov
and
mov
jl
pop
lock
pushf
push
scas
call
stos
pop
add
stc
fmul
push
jl
mov
inc
add
push
xchg
jbe
push
popf
dec
test
out
imull
in
scas
jb
cltd
scas
inc
mov
jg
mov
xchg
loope
out
mov
push
jo
push
mov
test
cwtl
leave
aaa
and
enter
test
xor
and
sbb
jno
sbb
inc
scas
pop
mov
cmpsl
repnz
fisttpll
push
jecxz
fninit
repnz
xor
stos
ficomps
jns
retw
or
add
insb
jo
jae
xchg
lret
fimuls
add
imul
scas
dec
mov
mov
test
and
or
out
lcall
dec
cli
push
repnz
icebp
jb
mov
dec
call
inc
mov
inc
cmpsl
xor
mov
ss
and
sub
shr
scas
outsb
mov
dec
mov
xchg
xor
add
or
add
daa
fsubrl
icebp
sbb
mov
imul
push
mov
lcall
adc
lock
xor
dec
loop
push
cmc
push
rorl
inc
dec
push
scas
pop
xchg
je
cmp
and
or
push
divb
repnz
loop
xchg
je
push
adc
leave
cmp
adc
sbb
mov
jg
jnp
pop
cmpsb
inc
loope
fistpll
das
lock
mov
sbb
pop
int3
add
sbb
mov
out
lret
scas
push
push
push
xlat
xchg
fisubl
mov
ficompl
sti
sbb
in
in
addr16
mov
add
das
les
js
and
in
jmp
xchg
aaa
mov
icebp
inc
out
xor
and
sub
ja
test
mov
stc
insl
xchg
inc
mov
in
negb
pop
xchg
insl
orb
fnstsw
sbb
pushf
cmp
popf
inc
lret
and
push
fnsave
jp
adc
movsl
sub
es
mov
sub
push
push
pop
out
shlb
xor
std
or
push
mov
mov
arpl
or
iret
and
test
sub
insb
xchg
xor
and
in
adc
sbb
pop
fldcw
aad
fisttps
out
sti
xor
aas
sbb
sub
push
out
das
cmc
or
xor
sub
add
pop
out
leave
add
cmp
aaa
cld
pminub
add
push
fildll
fldenv
imul
xchg
sub
sbb
jmp
psllw
mull
mov
fldt
sub
sub
jbe
pop
std
or
push
lds
xchg
loopne
aam
clc
aas
rclb
incb
shlb
fidivl
mov
jg
push
scas
sub
outsb
xchg
lods
lods
push
int3
cmp
and
pop
cld
or
sbb
xor
inc
lret
daa
shll
add
or
xor
in
fcoml
leave
or
mov
incl
stos
push
std
dec
mov
mov
jne
dec
sub
pop
stos
push
xchg
xchg
pop
movsl
xchg
lods
je
jns
inc
rcrb
mov
xchg
dec
dec
pop
xchg
jbe
jg
dec
movsl
dec
scas
dec
stos
pop
subb
mov
cmpsl
xor
loopne
dec
and
add
cmp
cli
adc
das
out
int3
es
jbe
repnz
ret
sub
add
out
and
hlt
adc
insl
movd
dec
push
in
push
push
jl
popf
shr
cmc
fimull
insb
sub
rcll
leave
das
lret
fisttpl
in
adc
cmp
xlat
sub
jns
lock
sub
and
lods
ret
push
lds
loopne
stc
pop
fs
hlt
cmp
cmp
outsb
fimuls
jp
push
cmp
aam
mov
dec
xchg
inc
add
add
sbb
add
xor
ss
out
enter
ljmp
adc
or
add
call
cld
and
js
dec
mov
inc
mov
cltd
cmp
mov
cwtl
jp
cmpb
push
test
inc
test
je
inc
mov
addr16
imul
mov
aaa
aam
cld
pop
sarl
int
mov
movntq
jmp
repnz
psubw
fnsave
jne
addr16
popa
mov
pop
movsb
imul
dec
scas
gs
decb
testb
adc
inc
jne
sbb
es
test
jle
push
js
inc
sbb
push
int3
adc
and
in
sbb
dec
jecxz
mov
cmp
flds
repnz
xchg
mov
add
add
inc
pop
lret
add
popf
lret
sbb
gs
mov
lret
pinsrw
loope
incl
insl
jns
push
lret
mov
bound
inc
das
rcll
das
bound
cli
ror
pop
hlt
sti
outsl
xchg
js
mov
orl
fs
cmp
dec
mov
push
movsb
mov
andl
or
cmpsb
rcll
inc
xchg
gs
push
xchg
mov
imul
xchg
call
sti
aad
leave
dec
push
mov
shrb
call
in
jne
testl
adc
dec
mov
pop
ja
repnz
cmpsb
push
inc
je
lock
cs
push
xchg
mov
ret
nop
inc
adc
cmp
bound
dec
jns
sub
xchg
and
pop
and
adc
cld
loopne
out
sub
lret
or
stos
lahf
and
xor
repnz
movsl
jge
dec
mov
imul
dec
xchg
pop
int
iret
xchg
outsl
mov
inc
mov
lea
call
rclb
dec
mov
int3
roll
dec
push
filds
pop
mov
jecxz
imul
mov
pop
in
cmp
stc
push
or
xorb
movsb
aaa
jae
popa
pop
mov
cmpsb
fwait
jae
xchg
jnp
inc
ud0
ja
cld
add
inc
rorl
int3
inc
push
mov
popl
or
jmp
mov
cmp
bt
jg
sub
shrl
mov
scas
push
mov
jle
dec
add
adc
pop
hlt
and
int3
fnsave
jmp
sbb
sub
std
push
mov
jmp
dec
add
ficoml
ficoml
mov
cmp
popa
and
in
jbe
push
pushf
jecxz
cmc
imul
ljmp
jle
outsb
ffree
xchg
jg
lcall
test
mov
pop
pushf
fildll
subl
xchg
dec
pushf
mov
dec
mov
inc
gs
mov
push
shlb
mov
mov
cld
pmulhuw
pmulhuw
mov
push
out
cmp
xchg
mov
orb
add
or
jb
int
pop
mov
das
mov
sbb
insb
jns
and
ljmp
std
int3
inc
pop
loop
jno
xor
adc
cmp
das
pop
inc
adc
aas
popf
xchg
cmc
negl
dec
jge
aas
fdivrl
in
xor
outsb
pop
js
test
cli
add
movsb
inc
stos
idivl
in
dec
cwtl
push
inc
mov
push
inc
lret
in
adc
dec
xchg
sbb
ret
aaa
loop
sub
sbb
lock
jecxz
cmp
or
xchg
arpl
inc
movsb
addr16
shlb
or
pop
or
cli
lock
insb
adcl
das
js
dec
inc
mov
xor
add
scas
mov
rorb
lods
dec
cli
cld
or
pop
mov
jnp
sbb
or
jo
jmp
iret
cmpb
pop
mov
je
dec
insl
lret
mov
jb
xchg
push
xchg
push
adc
pop
mov
xchg
cmc
sbb
ret
shlb
fistps
cmp
xor
addr16
push
mov
adc
jp
icebp
sbb
xchg
push
arpl
xor
sbb
fistpl
iret
lea
xor
pop
hlt
and
inc
enter
jge
aad
or
call
loopne
bound
mov
add
push
pop
lahf
pusha
and
inc
or
pmaddwd
outsb
fwait
push
sbb
bound
in
and
xchg
sbb
sbb
in
dec
or
xor
pop
je
or
fwait
lea
cmpsb
dec
sbb
ljmp
mov
and
push
lret
aam
jge
jecxz
and
push
mov
mul
adc
sbb
xchg
mov
push
inc
jae
jp
push
xchg
jl
lahf
data16
icebp
sbb
gs
adc
xor
pop
cmpsb
les
js
mov
and
jbe
hlt
dec
pop
inc
nop
pop
out
mov
and
mov
addr16
insb
or
outsl
aam
call
and
cmpsl
in
lds
fiaddl
daa
in
jno
adc
cmp
fcoms
hlt
mov
aam
scas
add
mov
pop
sti
movb
sub
or
iret
sub
cmpsb
cmc
xchg
test
sub
mov
and
ss
xor
aaa
sar
mov
xor
call
icebp
pop
mov
xor
sbb
mov
add
jmp
push
in
rol
daa
aas
mov
insl
cmc
rcrl
jb
dec
iret
cmp
test
bound
lods
pop
mov
lahf
outsl
stos
cmp
xlat
pusha
push
xchg
inc
aad
mov
and
cmp
mov
pop
in
mov
les
xchg
or
pop
pop
arpl
pop
imul
test
push
hlt
add
cmp
mov
mov
add
adc
jne
insb
in
dec
xchg
icebp
int3
sbb
shrb
jb
daa
in
cmc
dec
and
shlb
loopne
hlt
push
fbld
pop
xchg
cmpsl
in
adc
jecxz
dec
daa
aad
fsts
or
movswl
lret
ljmp
iret
imul
jl
cli
push
sbb
push
in
sub
cli
add
jecxz
sub
icebp
aas
stc
cmp
mov
sbb
push
sarb
cmpl
push
cmpsl
pusha
dec
scas
inc
add
mov
mov
jecxz
sub
cmpb
bound
lret
jo
lods
repz
dec
dec
mov
mov
cmp
sahf
aas
cs
sub
push
fmull
stc
and
xlat
push
shll
jae
add
pop
jle
shll
notb
sub
pushl
arpl
sti
and
aad
test
into
addl
gs
add
das
or
fidivrs
subb
sub
imul
pmaxub
pop
je
cld
add
movb
jge
clc
add
mov
dec
xchg
addr16
jno
push
inc
ss
imul
or
pop
add
sbb
pop
mov
and
ret
jg
ret
insb
pop
enter
jp
fsts
sbb
cmc
inc
mov
jle
mov
cltd
add
movsb
rcl
ss
pop
mov
lret
cmp
xchg
js
test
pop
imul
add
ja
and
xchg
nop
jnp
fisubs
mov
and
sub
adc
loope
aam
mov
inc
test
dec
mov
jl
or
jae
sbb
mov
fsubrs
cmpsb
cltd
sub
xor
aam
mov
xchg
push
in
scas
inc
mov
push
lds
fwait
insb
fistps
in
inc
je
jnp
mov
stos
push
and
sub
cmc
sbb
fldenv
inc
fnsave
lret
cmpsb
loop
xor
fbstp
aaa
fwait
xchg
int3
push
in
fadds
stc
fcomps
scas
push
cmpl
fwait
adc
pop
test
pop
iret
push
out
fcoml
int
and
or
std
xor
inc
xor
xor
sub
push
sub
adc
movsl
leave
mov
jae
cmpsb
dec
xchg
mov
inc
mov
inc
mov
sub
dec
lods
pop
sbb
std
push
xchg
gs
pop
rclb
aad
mov
js
or
pop
enter
dec
mov
aas
fisttpl
rcll
xchg
mov
cmpsl
and
inc
lahf
popa
cmp
mov
pop
imull
jl
pusha
scas
mov
mov
outsb
gs
jl
lcall
or
test
aad
add
sbb
xchg
cmp
push
xchg
cmp
or
mov
in
subb
cmp
call
add
push
sub
push
das
mov
sbb
in
nop
pop
subb
testl
fnstsw
std
ss
scas
pop
lret
testb
fstpt
outsb
xchg
dec
out
cmp
or
adc
sti
out
clc
jo
pushf
insb
xor
xor
mov
pop
fsubrs
cmpsb
mov
cmp
in
mov
inc
mov
xchg
push
movsb
dec
mov
xor
xchg
jmp
dec
lret
loope
test
mov
jg
inc
cwtl
lods
mov
je
stos
push
sub
les
dec
hlt
rorl
jmp
jg
inc
inc
mov
xlat
inc
sub
and
pop
fsubrl
jl
mov
add
push
jmp
pop
sub
add
fsubs
idiv
inc
fldcw
lahf
es
into
ljmp
jg
inc
jl
mov
xchg
loope
aaa
stos
outsb
loop
lret
pop
orl
sub
jb
inc
adc
lret
aaa
shrb
adc
lahf
push
das
fstpl
adcl
push
ror
jecxz
je
stos
pop
mov
push
xor
inc
icebp
mov
mov
sti
aad
dec
imul
mov
add
xchg
dec
xlat
popl
lods
dec
jge
xchg
les
inc
jbe
mov
lock
out
fs
or
cs
xchg
outsl
or
clc
ficoml
enter
add
cmpsl
mov
jg
sahf
fs
dec
movsb
dec
scas
mov
shll
or
xchg
pop
push
pop
insb
les
repnz
shll
mov
xor
stc
or
aad
test
int3
dec
sub
xchg
ficoms
lcall
push
cld
adc
test
and
stos
xchg
push
pusha
aam
dec
mov
push
fistps
push
mov
adc
stos
xchg
cs
push
mov
dec
jecxz
sbb
iret
xor
dec
out
sbb
movsl
inc
pop
inc
or
lock
push
jae
pushf
jg
sbb
add
loopne
movsl
sub
sbb
dec
cs
push
lock
into
bound
or
lcall
enter
mov
mov
lcall
push
xorb
sub
mov
movsb
pop
out
sbb
jno
movsb
insl
pushf
inc
popf
stos
pop
mov
popw
ljmp
jp
pusha
and
push
and
inc
in
aas
jmp
xchg
jmp
cmp
negb
fdivs
loope
ds
gs
cmc
sbb
ror
dec
loopne
mov
incb
fidivs
mov
inc
roll
fisubl
loop
imul
pop
lret
xchg
mov
xchg
dec
pop
in
gs
xor
mov
mov
push
dec
popf
mov
mov
xchg
adc
pop
fcoms
mov
test
insl
int3
stos
das
pop
xor
test
arpl
jle
inc
xchg
jp
dec
cwtl
bound
stc
mov
in
sub
rcrl
pop
and
add
pop
dec
jae
mov
pop
ja
jb
adc
mov
ficoml
pushf
jnp
sbb
jecxz
sub
stos
insb
mov
in
mov
or
or
data16
iret
arpl
push
aam
jle
push
ffreep
adc
and
sbb
jecxz
clc
pop
ret
add
pop
fwait
aas
add
sub
pop
ljmp
adc
ret
out
ret
or
sbb
xchg
cmp
sbb
xchg
mov
call
rorl
in
and
push
adc
xor
shl
cmp
jae
out
mov
jmp
adc
hlt
sbb
nop
jmp
mov
jo
sahf
insl
adc
mov
cld
adc
cmpsl
pop
scas
xchg
cmp
sbb
adc
and
dec
jo
mov
cmp
imul
adc
cltd
negb
or
aaa
notb
mov
jno
or
xchg
mov
jmp
add
dec
test
dec
sub
ljmp
push
mov
sub
push
nop
jb
push
sub
xor
mov
cltd
jnp
out
hlt
and
arpl
jmp
divl
cmp
aaa
fisttpl
in
add
icebp
cmp
add
sub
shll
add
iret
and
inc
sbb
pop
int3
xchg
push
inc
mov
xorl
leave
lcall
ss
and
jo
ja
push
lods
cmp
leave
xor
fisubl
les
cmc
sbb
cmp
and
cmp
xor
xlat
add
pop
repz
and
les
or
icebp
inc
stos
in
stos
jle
xor
xor
pusha
into
sub
mov
test
jecxz
mov
xchg
sti
xor
mov
mov
cmpsl
lock
push
data16
jp
mov
lcall
and
icebp
jb
aaa
rcll
cmpsl
xchg
sbb
push
xchg
xchg
test
jg
pop
mov
add
mov
les
xor
mov
mov
mov
daa
pushf
int3
dec
ds
xchg
adc
push
arpl
sub
das
fists
xlat
fidivrl
fidivl
xchg
inc
mov
dec
cmpsb
ljmp
dec
jp
xchg
mov
and
xchg
pop
popa
jns
and
popa
jle
js
fnstsw
jecxz
in
jecxz
inc
sub
je
outsb
ja
rclb
stc
ud0
add
jo
mov
mov
fisubl
push
in
mov
jle
lahf
lea
in
xchg
and
dec
push
mov
out
adc
mov
imul
push
xor
fsubrs
fisttpll
mov
mov
xchg
push
and
xor
or
bnd
icebp
inc
mov
or
call
dec
cltd
jne
mov
aam
xchg
mov
mov
sbb
lcall
push
cmp
inc
and
sarb
push
mov
add
mov
sub
cmp
lea
outsl
cmc
popf
popl
and
lret
gs
mov
aaa
jge
jmp
lds
xor
xor
test
out
sub
call
cld
adc
mov
iret
push
sub
mov
lahf
push
pop
out
xor
or
push
mov
or
xchg
cmp
and
dec
les
shll
mov
call
leave
movsl
pop
test
int3
mov
pop
and
fidivrl
dec
pop
daa
fmull
ret
xor
cmp
mov
dec
dec
sub
outsl
push
popf
xchg
push
fdivs
mov
add
les
cli
fsubl
test
cmpsb
push
cmp
jg
pop
out
dec
cmp
inc
lods
jge
mov
movsl
xchg
lock
mov
stc
jns
cli
rolb
and
pop
call
mov
pop
sbb
or
sbb
sbb
ljmp
inc
push
push
call
jne
and
iret
xor
cmp
sbb
add
imul
push
not
sbb
inc
aam
push
cmpsb
sahf
jp
das
repz
ss
cmp
stc
test
sbb
or
pop
pop
sbb
mov
aad
js
je
std
adc
inc
test
push
mov
add
int
or
cmpsl
mov
cmc
and
repnz
dec
push
js
in
rclb
pop
mov
sub
dec
inc
fiadds
sti
stos
push
mov
mov
imul
push
aam
dec
cmp
pop
insb
imul
lret
or
pop
mov
dec
pop
dec
pushf
out
aas
rolb
cmp
or
loop
loopne
push
xor
daa
adc
lock
xor
nop
push
and
fidivl
mov
repz
dec
dec
fdivrp
push
pusha
shr
les
adc
das
lret
rolb
xchg
nop
imul
ficoml
sbb
fmull
lea
xchg
js
sub
inc
loopne
or
xchg
push
mov
iret
lahf
fs
cli
mov
mov
test
testb
lods
mov
jle
mov
pop
loope
sub
cmpsl
scas
lds
push
test
flds
sub
leave
sbb
pop
inc
lock
push
inc
xchg
jno
jnp
push
lea
push
pop
sahf
jg
pop
xor
xchg
pop
adc
sub
cmp
lcall
repnz
mov
mov
xchg
xchg
rcrb
repnz
mov
push
int3
and
pop
fistpll
es
notb
clc
mov
sbb
fdivr
cmpsl
push
inc
out
in
xchg
out
mov
out
pop
hlt
es
push
inc
inc
rcrl
stos
lea
jae
mov
sti
sub
add
push
sbb
dec
jne
mov
in
loopne
add
das
rol
leave
cmp
rcrb
add
xlat
and
sub
ret
lock
adc
and
icebp
ljmp
jns
clc
add
iret
push
xor
std
mov
push
xlat
inc
repnz
aad
inc
je
test
mov
inc
dec
push
push
mov
jb
mov
push
inc
fcmovb
jp
mov
scas
push
lods
or
inc
mov
shr
addl
movsl
pop
loop
loopne
jecxz
mov
dec
push
pusha
in
fisubs
in
push
sbb
jge
fstpl
pop
cltd
arpl
pop
lods
ffreep
jne
add
mov
loopne
scas
dec
adc
pop
push
sub
inc
insb
push
test
cmp
pop
or
jae
shlb
mov
fcoml
and
rorb
das
scas
into
cmpsb
jl
or
push
jl
dec
sub
movl
mov
add
sub
xchg
sub
sub
ror
sbb
les
push
push
in
lds
lret
xchg
sbb
mov
dec
or
jl
push
loop
xchg
lahf
imul
jp
pop
dec
pop
sbb
mov
push
shll
jnp
shrb
popl
and
movsl
and
scas
jg
bnd
hlt
push
js
fisubs
xchg
fdiv
ds
fcmove
addb
in
adc
mov
aas
das
fists
xorb
sahf
aas
hlt
fstpt
push
fcos
or
enter
sahf
push
shlb
imul
jae
add
inc
jg
and
ret
icebp
cmp
test
jb
adc
sbb
aaa
jo
call
sarl
and
push
mov
insb
cmp
mov
lea
mov
jge
and
ljmp
daa
pop
jge
inc
mov
xor
sub
push
adc
xor
adc
enter
lea
xor
out
lods
out
dec
sahf
out
or
push
sahf
js
ficomps
data16
mov
xor
push
int
xchg
mov
xor
les
mov
ja
inc
push
leave
mov
mov
stos
ffree
jns
ds
rcr
out
cmp
add
push
leave
pushf
test
imulb
and
inc
ret
cmp
dec
lret
outsb
shlb
mov
push
jle,pn
call
mov
scas
sar
ret
cwtl
insl
lret
jno
daa
mov
fmull
jno
jle
fimull
js
lock
jno
shrb
repnz
mov
scas
repz
pop
cmp
mov
cmp
ret
push
les
andl
pop
jb
sbb
mov
inc
ret
jno
mov
pop
mov
xchg
cmp
outsb
cltd
push
mov
ret
shlb
shlb
movsb
loop
imul
and
jns
int3
mov
mov
daa
shrl
add
push
ret
jg
xor
js
dec
repnz
adc
push
lret
nop
or
leave
sbb
pop
push
cmp
cmp
or
aad
dec
jb
cmp
mov
and
sarb
xchg
mov
dec
shll
jp
add
ja
sbb
aaa
xchg
pop
and
imul
xchg
clc
push
dec
inc
dec
adc
sub
mov
inc
je
lds
mov
mov
ss
gs
nop
xchg
adc
cld
xchg
stc
ljmp
inc
and
xchg
mov
loope
int
pop
out
adc
lds
or
mov
dec
add
sub
sti
or
aam
sub
je
fidivs
iret
and
or
inc
inc
shrb
sbb
inc
leave
frstor
mov
fidivs
sbb
add
push
ss
dec
out
fwait
test
xor
data16
repnz
adcb
mov
inc
jae
in
ja
push
push
cmp
movsb
fwait
push
pop
xchg
adc
and
inc
filds
push
push
add
ffree
or
loopne
sub
add
push
ja
push
jae
aad
lahf
pusha
lods
xlat
sbb
adc
pop
fisttps
cmpb
pop
inc
pop
adc
rolb
data16
adc
xchg
popf
daa
xor
jecxz
push
adc
gs
jp
add
lea
stos
adc
cs
adc
push
in
fs
push
cmp
or
loope
cmp
cmp
ret
xor
mov
jae
jecxz
int
adc
movsb
xchg
sbb
fidivl
pop
sub
add
in
sub
orl
dec
nop
or
das
in
inc
fwait
jecxz
dec
out
jnp
das
in
push
fidivs
rol
fdivp
stos
mov
fbld
into
inc
and
xor
das
outsb
cltd
jmp
nop
ljmp
lret
sbb
pushf
ret
dec
movsb
pop
or
dec
pushf
sbbl
cmp
int3
das
sarl
pop
xor
popa
xchg
sbb
fs
icebp
scas
out
add
xchg
mov
jne
cmovne
mov
test
inc
jns
jne
push
dec
repnz
push
mov
and
mov
pop
pop
enter
or
sub
mov
outsb
xlat
mov
xor
mull
stc
cs
mov
xchg
in
movsl
mov
ljmp
lock
out
mov
sbb
lods
and
mov
push
not
clc
inc
jge
mov
adc
jb
pop
pusha
scas
pushf
xchg
test
sar
mov
shrl
or
sar
ja
jae
xlat
dec
jl
mov
sub
fimull
loopne
sti
pop
xchg
push
addr16
loope
testl
lahf
rorb
xchg
daa
mov
sub
jo
psllq
jno
js
inc
jp
shll
icebp
loope
pop
clc
call
lcall
pop
fldt
lods
das
and
stos
std
jg
cwtl
sti
dec
add
mov
mov
jae
dec
adc
cmpsb
mov
mov
mov
sbb
and
fs
stos
jecxz
mov
ljmp
add
je
ds
sub
loope
cs
popf
inc
daa
shrb
bound
jnp
adc
roll
add
insb
push
addb
inc
out
and
pop
add
xor
rclb
sub
lahf
push
aad
xor
outsl
sub
clc
cmpsb
int3
int
adc
add
loopne
lock
adc
lahf
fidivrl
mov
lock
xchg
mov
add
insl
nop
sbb
or
push
jl
or
out
sbb
mov
inc
pop
push
pop
sub
fisubl
je
or
dec
fdivs
insl
lods
and
push
xchg
sahf
add
add
jnp
jge
jno
ja
out
sub
inc
sti
push
mov
inc
jo
shl
dec
jp
lods
movb
sub
js
imul
incb
test
add
shrb
mov
ja
and
mov
mov
jg
out
xor
jecxz
mov
into
add
dec
cmp
fs
sub
in
cmpsb
cmp
xor
mov
xchg
leave
mov
mov
sbb
movsb
mov
mov
out
dec
lea
dec
xor
add
push
out
push
in
jl
push
and
ljmp
add
mov
ret
mov
lret
stos
sbb
ret
roll
orb
sbb
add
sub
sbb
mov
cwtl
adc
xor
lret
inc
mul
fwait
popf
fdivrl
shl
cmpsl
inc
pusha
mov
jo
sbb
pop
cmpsl
jo
mov
mov
pushf
imul
ret
sub
push
mov
lahf
mov
gs
mov
sub
mov
pop
nop
xchg
sub
dec
add
nop
adc
pmaxub
les
cmp
xlat
push
fs
mov
pop
out
and
push
inc
inc
dec
lods
push
mov
mov
mov
sbb
sub
cmp
test
out
cmp
sbb
into
sbbl
pop
fmuls
rcll
movsl
sub
imul
mov
pop
inc
fidivl
int
xchg
cmp
cmp
sti
and
pop
stos
int
mov
popf
push
pop
push
lcall
les
pop
sub
push
mov
addl
push
bound
data16
dec
dec
mov
scas
pop
mov
jl
push
mov
jle
imul
mov
ss
roll
sub
in
mov
sbbb
lret
add
test
inc
and
xchg
fs
in
lock
or
fidivrl
movsl
lahf
dec
repz
cmp
and
jns
cli
inc
mov
ret
xor
jle
dec
or
int3
cmp
sbb
bswap
int
insl
ss
push
test
movsb
cmp
pop
cmp
ret
pop
mov
outsl
sub
imul
sub
cli
repnz
dec
adc
xorb
mov
jbe
outsb
dec
cmp
xor
mov
jb
xchg
stc
les
dec
cli
add
call
add
popf
push
or
sahf
jo
lods
dec
push
outsl
xchg
mov
loope
lds
daa
sub
adc
pop
loope
mov
push
fnsave
jmp
shl
incl
lock
xchg
cmp
test
adc
mov
mov
lock
jp,pt
scas
addr16
push
xchg
push
ffree
out
in
add
sbb
cmc
sbb
es
cmpsl
js
inc
lods
push
lea
insl
test
cld
sbb
push
notl
imul
sub
xchg
je
cmp
dec
das
sub
mov
push
or
stos
pop
mov
pop
dec
dec
push
fcmovne
cwtl
inc
popf
xchg
add
lea
out
mov
subb
test
lahf
ret
stos
das
rcl
sub
popf
pop
push
out
pop
lock
sub
notl
loope
out
es
cmc
pop
push
xsavec
ret
aaa
in
loop
in
fstl
jae
insb
pop
push
cmp
lods
dec
in
loope
out
add
daa
mov
repnz
push
loopne
neg
mov
and
hlt
in
aad
xor
pop
xchg
pop
iret
push
sahf
and
add
cmpsl
fcoms
hlt
sub
sar
sbb
lea
movsb
push
mov
bound
rcll
xchg
dec
pop
test
js
je
imul
jns
push
les
test
jp
pop
outsl
push
dec
inc
cmp
mov
data16
lcall
mov
and
xchg
jns
xorb
jnp
pusha
xchg
enter
pop
mov
test
pop
scas
mov
mov
mov
fstpt
dec
lcall
pusha
lea
gs
cwtl
push
prefetcht1
lret
push
sub
leave
jns
or
pop
cs
push
bound
pop
addr16
mov
jge
push
popf
cmp
fiadds
clc
mov
lock
in
push
mov
inc
adc
out
pushf
fisubs
clc
pop
fsubrl
add
shrb
sbb
fsubrs
mov
fldt
or
mov
jmp
outsb
xchg
das
mov
dec
inc
inc
lcall
test
aaa
xchg
xchg
jno
dec
pop
mov
mov
ljmp
or
into
or
loope
iret
add
adc
out
cmp
or
push
ja
dec
mov
insl
sahf
bound
mov
jno
or
cmp
xor
adc
aam
cmc
add
or
xor
fmull
loope
out
aad
aam
in
iret
sbb
out
repnz
mov
sub
pop
in
hlt
push
shlb
xor
jg
jl
pop
pusha
mov
mov
pop
scas
inc
nop
jno
data16
dec
mov
test
insl
cmc
inc
mov
ja
jge
inc
mov
fstl
push
iret
xor
and
es
pop
ret
sbb
mov
xchg
jno
jo
inc
jbe
xchg
push
mov
dec
mov
mov
pop
vfrczps
gs
data16
xchg
outsb
mov
xchg
dec
mov
xchg
cmpl
imul
xor
inc
out
pushf
pop
loop
int3
xor
add
das
popf
and
jae
sbb
push
xlat
cmp
leave
add
jge
jae
pop
test
jb
jg
xchg
pop
adcl
in
mov
sbb
push
int
call
fbstp
cmp
lret
add
or
ds
lahf
ret
daa
into
not
daa
std
ljmp
sub
add
out
hlt
pop
lock
fbstp
insb
adc
dec
pop
jno
push
rclb
push
pusha
mov
dec
into
xor
push
into
es
iret
sub
fidivs
jecxz
hlt
sub
aaa
rcll
ss
ja
and
add
out
inc
mov
je
inc
stos
inc
mov
outsl
xchg
arpl
inc
mov
mov
lahf
jns
push
adcb
xchg
push
adcl
popf
inc
adcb
mov
jge
jne
pop
mov
pop
iret
xor
sub
xor
fldcw
sub
daa
enter
mov
dec
movsb
push
cmpsl
dec
jno
push
ja
popa
popf
dec
adcl
dec
mov
inc
stos
mov
outsl
mov
mov
xchg
jnp
aaa
ljmp
sbb
fisubrs
hlt
aaa
cli
add
fists
rorb
cli
cmp
call
sarb
mov
ljmp
cmp
add
aas
xlat
sub
sub
jl
insl
stos
push
mov
insb
lahf
imul
out
cld
push
cli
or
dec
mov
filds
hlt
or
xchg
push
sbb
sbb
iret
mov
ds
mov
pusha
jecxz
leave
pop
rorb
in
popf
mov
jg
mov
xorl
pushf
mov
mov
pusha
fwait
addr16
pop
mov
push
mov
xor
cmpb
sub
inc
lret
xor
or
cmp
xor
sub
pop
cld
pop
inc
jne
dec
mov
jb
dec
xchg
or
pop
movsl
sub
cwtl
pop
mov
dec
mov
aaa
dec
cmp
inc
sub
pop
je
arpl
push
adc
sbb
sbb
jo
adc
imulb
mov
cmp
cmp
mov
les
cld
scas
enter
out
aaa
pop
icebp
cwtl
sbb
sti
cmp
mov
xor
out
repnz
rcrb
and
xchg
lcallw
in
std
mov
lock
jbe
test
mov
xor
sbb
aas
repnz
or
sbb
and
and
loop
fstpl
call
sub
faddl
loope
mov
dec
xchg
dec
cmpsl
inc
sahf
dec
xchg
outsb
stos
inc
stc
pop
inc
pop
xchg
jnp
mov
push
mov
jo
inc
mov
lretw
pop
mov
pop
xchg
inc
test
jl
dec
popf
or
inc
mov
cld
or
sarb
shlb
rclb
int3
adc
xor
dec
mov
ja
dec
mov
dec
mov
mov
jb
inc
movsl
pop
scas
pop
mov
jne
jl
fs
pop
mov
cmp
add
int3
fisubrs
or
push
repz
lret
xor
jmp
xor
sbb
xor
cmp
xor
add
adc
or
das
ds
cmp
xor
add
xor
pop
testb
xor
scas
push
test
inc
movsl
pop
mov
jl
popa
int
mov
int3
fs
pop
out
inc
or
insl
out
pop
fisubl
jns
jmp
cmp
pop
and
ljmp
dec
nop
dec
sub
dec
adc
imul
andb
clc
scas
fidivl
push
jns
push
insl
outsb
mov
aam
push
dec
out
mov
jbe
out
test
pop
mov
mov
xlat
std
and
xor
out
sub
cmp
mov
loope
scas
lds
jecxz
inc
mov
cmpsb
dec
lock
fcmovnb
rol
mov
jge
dec
movsl
jno
jg
dec
xchg
iret
lcall
stos
iret
cltd
cmpsb
fildll
out
lock
mov
adc
ljmp
lret
dec
xor
push
ljmp
out
call
outsb
lea
iret
mov
and
out
jmp
arpl
cmp
sbb
xor
sub
add
lock
ret
mov
or
inc
mov
out
push
xchg
jb
sbb
aaa
mov
and
pop
mov
into
adc
push
mov
addb
aam
jnp
jge
pop
clc
dec
add
mov
pop
cmpsb
jb
jmp
pop
sahf
je
bound
or
lods
cwtl
repz
jecxz
test
aaa
fcompl
add
xor
pop
outsb
or
ret
popa
iret
jne
or
popw
andb
out
adc
push
ljmp
push
subl
inc
mov
xchg
lret
cs
and
popfw
mov
push
iret
stos
nop
leave
mov
in
jge
loop
inc
mov
sar
xchg
gs
sub
popf
xchg
cmpsl
cmp
ret
fildl
or
or
cld
and
sub
insb
loopne
call
fimull
mov
aam
mov
sbb
cmc
in
or
out
adc
cmpsl
xchg
cmpsb
mov
pop
bound
jle
data16
fwait
pop
cmpsl
inc
shll
mov
cmp
aaa
and
dec
sti
out
sbb
std
dec
sbb
call
mov
and
stos
lods
lea
in
out
push
push
sbb
push
lret
pop
adc
lret
sub
dec
jge
cli
add
jnp
aam
mov
into
and
sbb
lret
adc
push
xlat
cli
mov
xchg
jnp
and
aad
sahf
cltd
pop
ljmp
mov
gs
arpl
mov
jle
ja
pop
int
and
adc
mov
jp
loop
add
xor
insl
pop
mov
mov
ss
mov
bnd
popf
nop
sub
mov
push
shlb
ffree
jbe
outsl
cmc
xor
out
idivl
out
cmpsl
add
shll
cmp
into
das
push
adc
add
into
cmp
lock
fcom
jno
push
mov
pop
outsb
xchg
fiadds
cmp
mov
outsl
das
jnp
lds
shrb
in
or
jae
sub
sbb
dec
subl
in
insl
imul
aaa
lds
mov
add
lret
inc
scas
dec
test
cmp
xchg
mov
inc
mov
push
es
push
adc
jle
data16
and
sub
dec
or
adc
cltd
and
sahf
fisubl
test
es
inc
fisubl
stc
adc
pop
inc
or
or
movsl
mov
sbb
jp
insb
dec
push
cli
and
cmpsb
add
rcrb
les
adc
pop
sbbl
fucomi
mov
and
pop
ljmp
xor
sarb
repz
mov
loope
xchg
cmp
jns
fwait
dec
cli
and
leave
flds
test
cmp
pusha
mov
xor
cmpsl
sbb
mov
popf
cld
imul
xor
xchg
scas
loope
das
sahf
inc
mov
add
daa
shrb
shlb
and
jp
iret
mov
xchg
jl
adc
dec
mov
imul
sub
cld
jle
inc
mov
mov
dec
js
hlt
push
sub
aas
sbb
lahf
mov
into
mov
aas
sarb
dec
add
add
xchg
mov
mov
push
or
or
cli
sbb
sbb
insb
jmp
fldl
cld
jno
jae
pusha
mov
in
dec
jae
push
xor
sbb
push
mov
push
test
add
add
pusha
lret
icebp
ret
sbb
sub
aad
cmp
mov
xchg
scas
fcomip
add
sub
inc
mov
fwait
push
mov
push
cmp
scas
push
in
ret
fidivrl
pcmpeqd
dec
mov
cmpb
test
nop
push
test
repz
and
xor
stc
icebp
negl
mov
cmp
mov
int3
sub
rcrl
push
fsubrs
or
add
xor
out
cmp
out
or
pop
pop
sub
and
sbb
and
adcb
jle
les
pop
in
leave
xor
xchg
adc
loop
adc
sub
mov
xor
sbb
addl
jle
shrl
and
mov
cmp
repnz
xor
add
enter
jg
in
push
push
jnp
mov
jb
das
pop
inc
loop
dec
jb
in
popa
mov
inc
andl
fists
movsl
pop
xchg
xchg
add
mov
adc
pop
pop
out
dec
outsl
or
sbb
or
or
pop
aas
and
sbbl
mov
cmp
lret
test
leave
popl
enter
int3
push
gs
xor
scas
or
or
mov
cmpsb
mov
sub
mov
dec
add
jno
mov
cld
and
or
adc
stc
and
add
pop
es
mov
inc
lds
les
ja
cmp
pop
xlat
sub
cld
inc
mov
adc
sub
mov
fs
test
ss
mov
mov
add
popa
imul
lea
xor
mov
fsubrp
lods
pop
and
decb
jecxz
iret
adc
jecxz
lret
or
ljmp
mov
adc
fwait
mov
aaa
cs
inc
push
jne
popf
mov
test
sti
sub
inc
mov
popf
sbb
adcl
push
fsubp
aam
jmp
iret
mov
cmp
sub
pop
nop
mov
cmp
inc
lcall
mov
or
cmc
or
xor
pop
call
or
out
into
xor
mov
sbb
repnz
lret
jg
add
pop
mov
loope
mov
je
add
or
sub
dec
icebp
push
push
inc
negb
and
movsb
adc
in
sbb
std
push
movsb
pop
push
mov
sahf
push
scas
inc
mov
outsb
popa
shlb
push
mov
cmp
aam
stc
out
test
cmp
push
lcall
push
leave
mov
test
xorl
call
adc
pop
popa
pop
in
inc
mov
push
mov
rol
insl
jnp
test
inc
sti
lds
mov
add
jo
mov
pop
dec
xchg
push
ja
push
ljmp
or
cmp
rcr
cmp
xchg
push
ficompl
jl
cli
sbb
xchg
jecxz
les
outsb
and
ss
in
movsb
fdivs
or
ds
and
addr16
push
push
cmpsl
dec
sbb
lods
in
lds
lcall
lock
inc
fistps
adc
outsb
lods
xor
fcomps
dec
mov
add
fs
adc
leave
cmp
enter
inc
lock
cmp
push
mov
inc
fisttps
add
sbb
sarb
pop
pop
cltd
mov
xor
in
or
inc
sub
fmuls
cli
or
lock
and
das
mov
lods
jne
mov
lods
dec
or
imul
mov
push
fsubl
fs
loop
dec
or
lods
jae
fwait
or
daa
mov
inc
lds
inc
xlat
enter
fldl
hlt
adc
rcll
test
lret
add
hlt
ss
and
fmuls
xchg
fistpll
fdivrl
les
add
xor
or
sub
jno
push
cmp
fiaddl
push
mov
int
mov
cmpsb
cmc
dec
insb
inc
adc
and
cltd
mov
les
dec
pop
leave
mov
xor
imul
rol
outsl
cmp
inc
lock
add
je
dec
xor
jbe
in
mov
sbb
mov
cmpl
push
pop
scas
stos
mov
aam
inc
xchg
jge
ret
pop
faddp
mov
xor
repz
out
std
push
inc
inc
dec
je
repnz
xor
fists
push
movb
stc
test
jno
fbstp
cwtl
push
add
outsl
orl
out
aad
aas
ror
mov
xchg
movsl
xchg
jp
mov
pushf
dec
mov
adc
jb
jle
sub
divl
lcall
mov
sbb
cmp
cs
das
pusha
sub
add
mov
test
mov
sbb
fdivs
adc
push
cli
adc
jnp
lea
xor
divb
add
arpl
out
lret
shlb
enter
in
adc
xchg
arpl
adc
inc
loopne
jecxz
adc
dec
mov
repz
jecxz
push
out
add
pop
sahf
pop
pusha
fcoml
int
ds
dec
mov
inc
icebp
push
cmpsb
lods
pop
lret
mov
pushf
jg
leave
das
jb
imul
ljmp
aam
push
push
lods
push
sub
hlt
xor
sbb
ljmp
or
rcll
je
push
xchg
and
inc
adcl
adc
jb
iret
fs
push
test
xor
leave
addb
cltd
cmp
outsb
cwtl
pop
mov
cmp
mov
inc
shrl
mov
adc
xchg
insl
add
pop
in
xchg
pusha
pushf
repnz
aaa
mov
pop
mov
jnp
lea
bound
and
mov
xchg
std
fiaddl
xchg
cld
dec
or
fdivrs
fmull
lret
test
mov
adc
and
rol
aad
jecxz
addr16
xchg
jmp
fdivp
addr16
push
mov
sbb
ret
cli
push
mov
repnz
and
jns
jns
push
bnd
xor
inc
fbld
push
aad
data16
sub
push
mov
aad
loopne
sub
loopne
xchg
add
mov
adcb
and
sarb
clc
sub
ficoms
lret
mov
sahf
xchg
or
stc
lods
cmc
aam
mov
les
dec
repnz
fidivrs
sbb
pop
popf
dec
sti
cmp
adc
cltd
enter
call
adc
sahf
add
jg
pushf
stos
jae
pop
sub
bound
data16
sahf
push
out
and
sub
xchg
cmp
dec
mov
or
fcomps
mov
sbb
or
pop
cli
adc
jne
add
loope
dec
fwait
mov
negl
aas
hlt
push
fmuls
xor
rolb
lods
sub
sub
mov
sbb
ljmp
loopne
fwait
cwtl
rclb
jb
fsubs
sbb
cmp
and
sbb
and
xchg
das
push
gs
out
dec
rclb
out
frstor
add
adc
ja
cli
sub
or
pop
mov
inc
sbb
pop
repnz
sbb
and
fstps
aam
lea
nop
div
adc
lods
inc
fbstp
or
lret
jl
test
dec
mov
xlat
daa
mov
xorb
jae
jns
fs
pop
fldt
ds
adc
push
dec
cld
decb
mov
rorl
push
jae
test
aaa
orl
dec
cltd
push
push
jno
ljmp
mov
arpl
and
or
ret
adc
adc
ret
adc
sbb
cmpsl
push
lock
in
xor
dec
fwait
repz
ficoml
popf
add
push
loop
and
fstps
push
xchg
or
xor
outsl
imul
lds
fcmovnb
or
xchg
xlat
and
xchg
jno
dec
mov
jbe
movsl
and
lds
ret
ja,pt
sub
cmp
icebp
and
xchg
dec
lcall
adc
pop
or
shlb
lds
loope
ds
fstp
pop
icebp
mov
icebp
fmull
in
push
cmp
cmpsb
mov
ds
inc
lods
pop
jecxz
sbb
sub
adc
mov
pop
pop
push
movsb
push
push
fadds
in
mov
jmp
and
sbb
pop
jp
cld
ficompl
sub
cmp
mov
in
push
daa
aam
addr16
roll
fs
sbb
ficoml
ret
bound
pop
int
dec
std
data16
out
lahf
clc
push
pop
xchg
sub
cmp
cmc
push
cli
push
push
enter
xchg
lock
adc
dec
out
loop
stos
lahf
test
scas
add
mov
sub
fsubrs
pusha
adc
popf
pop
stos
cmpsl
cltd
or
mov
lret
inc
mov
mov
xlat
pop
jae
push
lret
sti
push
xor
pop
sbbl
stc
mov
jmp
ficomps
mov
imul
cmpsb
movsb
sbb
mov
lahf
divl
sbb
mov
stos
rolb
sbb
push
sbb
loopne
nop
test
ds
leave
pop
sbb
sub
or
icebp
or
dec
loopne
in
mov
pop
es
sti
imul
stc
loopne
jae
stos
addr16
pop
mov
jle
aad
das
fadds
mov
sbb
cs
ror
outsl
arpl
push
lret
dec
xchg
int
les
sahf
add
out
adc
cli
adc
pop
ljmp
add
lods
or
jne
jb
aam
jns
dec
sahf
cmp
mov
inc
icebp
adc
xchg
jb
div
test
xor
cmpb
cmc
cmp
or
add
pop
dec
adc
sub
mov
lret
loope
xlat
roll
sbb
movsb
stos
lret
subl
inc
jp
inc
mov
inc
lods
pop
pushf
popa
adc
pop
sbb
loopne
stos
inc
aaa
fists
mov
js
sub
sbb
adc
xchg
scas
mov
xor
mov
cld
push
in
mov
mov
mov
push
mov
inc
cld
loop
divl
cmp
pop
adc
stos
jl
mov
xchg
setne
filds
mov
testb
scas
loop
inc
sub
push
push
rcll
repz
loopne
xchg
pop
and
das
push
mov
pop
or
add
jmp
loope
sbb
mov
mov
jns
adc
pop
lods
aad
inc
subb
in
aaa
or
pop
out
and
decb
lock
mov
in
outsb
xchg
out
bndstx
sbb
mov
dec
adc
push
mov
fldenv
adc
mov
pop
loopne
pop
dec
inc
xchg
into
call
out
pop
ds
pop
push
dec
push
mov
repz
and
sbb
add
add
nop
and
push
enter
data16
adc
cltd
ljmp
enter
scas
movsl
xchg
xlat
cmp
and
add
sbbl
mov
mov
pop
in
jbe
jmpw
loopne
xor
pop
sub
out
fstpt
mov
ret
pop
in
or
fs
push
out
in
call
and
push
sbb
and
add
adc
mov
lods
push
cs
or
or
mov
addr16
out
pushf
and
sub
mov
xchg
div
movb
int
xchg
or
test
scas
mov
mov
sbb
xchg
sub
lret
jae
fidivs
arpl
adc
jae
shrl
push
mov
test
or
and
jl
pop
rcll
push
cli
pop
xchg
mov
sbb
sub
mov
xchg
jl
sahf
xchg
inc
xchg
jb
in
test
jge
popf
jb
notl
sahf
test
push
push
adc
and
xor
push
std
xchg
jae
fisubs
loopne
dec
add
push
call
mov
and
pop
je
rcl
push
lds
clc
xor
cltd
fmuls
addr16
push
and
mov
stos
and
dec
les
mov
xchg
xlat
or
nop
cmp
dec
mov
cmp
in
pop
stos
push
hlt
or
fstpl
arpl
pop
add
into
dec
sub
fcmovnu
push
imul
cmc
icebp
jnp
cltd
jp
gs
pop
mov
call
mov
xor
mov
add
mov
mov
cmpsl
pop
cmpsl
jne
cs
dec
mov
fistpl
lods
pop
dec
in
adc
lods
mov
out
inc
inc
test
adc
adc
jne
and
out
data16
jg
jle
pop
xor
cltd
sbb
pushf
xchg
rorb
adc
and
in
jno
int
adc
stc
rcll
andl
insl
dec
mov
test
inc
cmp
add
jno
jae
loope
rcrl
in
push
es
std
mov
das
cs
scas
xor
or
jle
into
arpl
in
bound
sub
rorb
fs
mov
cs
loope
imull
shr
into
into
jecxz
sti
adc
jbe
int3
ret
jmp
insl
jno
test
pop
arpl
orl
bnd
lods
sub
inc
inc
sub
insl
inc
inc
jl
or
jge
xor
sub
sbb
je
pop
mov
in
xchg
lcall
dec
cmp
loop
int3
cmp
dec
cmp
and
fsubrl
mov
ss
stos
cmc
and
nop
loopne
andl
add
jae
or
scas
std
xchg
inc
sub
sbb
cmpsl
push
sub
pop
sbb
mov
inc
push
inc
mov
shrl
sub
out
pop
stos
fmull
lods
xchg
push
fwait
rcr
add
push
xlat
or
mov
lret
movb
sti
mov
adc
jg
test
inc
add
pop
inc
push
lock
mov
push
or
cmpsb
nop
and
mov
sti
mov
pusha
mov
cltd
xchg
cmpsl
mov
push
lock
sub
mov
loop
push
mov
sub
pop
cld
adc
sbb
scas
fld
push
inc
movsb
insb
sahf
push
test
orl
fstps
mov
mov
mov
int3
push
popa
mov
ja
mov
or
mov
sbb
push
cmpsl
lcall
std
outsl
int3
cld
in
test
out
sbb
aam
sub
mov
and
push
jmp
sti
cmpl
jl
aaa
mov
push
scas
mov
cmp
fwait
ret
xor
adc
mov
lret
xchg
lahf
cmp
sub
and
mov
jmp
shrl
mov
pop
mov
sub
pop
xor
cmp
shl
jnp
int
fmuls
daa
das
xchg
in
mov
mov
es
daa
insb
lcall
mov
jmp
mov
fisttps
xchg
pop
loope
xor
ror
mov
jg
test
imul
sahf
dec
test
js
fbstp
lret
mov
jp
add
ficompl
je
and
mov
mov
pop
push
rcl
adc
insl
hlt
shll
xchg
jbe
mov
inc
sbb
aam
sarl
mov
movsb
add
stc
fwait
ret
fnstcw
imul
out
outsb
aaa
movsl
jb
imul
inc
jae
jnp
push
mov
xlat
loop
int3
sbbl
cmp
add
cmp
daa
arpl
and
test
iret
cmp
and
addr16
out
cmpsb
sub
aaa
add
pop
jl
aas
cs
push
ret
je
insl
in
mov
xor
xchg
xor
add
mov
test
repz
sub
rorb
bound
xor
mov
mov
ret
jo
mov
sub
mov
pop
fiadds
xchg
std
or
test
pop
xchg
in
xchg
out
std
jbe
es
or
movsb
rclb
jb
enter
inc
aaa
lret
add
arpl
sahf
out
cwtl
xor
add
inc
lock
jl
subl
sbbb
lock
fwait
in
dec
xchg
xchg
push
push
es
popf
cmp
xor
sbb
mov
insl
xchg
inc
es
loopne
fldenv
jbe
out
xchg
daa
sahf
scas
fcoms
test
jecxz
add
sub
or
jo
int
bound
icebp
adc
mov
add
adc
add
mov
sub
mov
or
jne
rcrb
call
pop
jecxz
cltd
pop
shll
mov
mov
mov
lock
inc
arpl
fwait
cmp
arpl
pop
scas
sti
sub
outsl
hlt
loopne
cmpsb
sub
nop
add
aam
test
out
shrb
ret
add
fsubs
lds
inc
jmp
cltd
xor
call
bswap
outsb
xchg
iret
call
dec
ljmp
push
push
pushf
fldenv
cmpl
cmp
jnp
push
insl
aam
push
and
sarl
sbbb
or
loope
sbbl
inc
xchg
sahf
ror
mov
cwtl
push
mov
andl
in
sub
cmp
fs
fdivl
and
test
mov
xor
js
daa
js
sahf
push
movsb
and
sbb
pop
outsb
push
mov
mov
cmpsl
push
popf
out
test
std
mov
or
repz
sbb
movsb
dec
and
sub
aaa
mov
add
pop
cmp
inc
jae
aaa
inc
push
outsl
mov
or
mov
addr16
hlt
movsb
xor
aaa
int3
adc
push
xlat
imul
push
push
test
lds
pop
mov
mov
hlt
cwtl
sbb
stc
jae
lock
sahf
dec
shrb
cltd
lock
mov
bound
pop
addr16
pop
pop
and
xor
mov
cmpsb
movsb
adc
out
arpl
ss
jl
inc
mov
sub
rolb
sbb
sbb
jns
pop
dec
in
mov
shrl
cld
mov
dec
or
xor
push
aad
add
sub
stos
mov
ss
out
ret
adc
dec
ljmp
cld
decl
jb
es
mov
jb
push
jl
outsl
dec
mov
pop
cmp
push
jecxz
mov
in
mov
sbb
push
test
cli
push
fdecstp
int
xlat
sti
inc
and
mov
bound
jbe
icebp
aad
test
and
test
call
imul
sub
pop
insb
rcrl
in
je
pop
push
or
test
lock
subl
testb
movsb
push
je
sahf
sbb
imul
xchg
pop
jecxz
pop
stos
mov
dec
cmpsl
mov
inc
and
mov
rorl
cmpsl
loopne
jno
add
in
and
add
pop
dec
les
or
push
in
cmp
cmc
jne
je
and
mov
call
movsl
in
mov
arpl
cwtl
sbb
clc
sub
stos
mov
fimuls
and
mov
mov
jb
leave
imul
jbe
pop
inc
pop
mov
cwtl
add
or
xchg
mov
mov
sub
mov
sbb
pushf
icebp
popa
jne
sbb
into
lcall
push
xor
aas
jp
mov
shlb
mov
sbb
pop
xor
jb
mov
es
popa
sub
mov
cmpsb
or
inc
je
mov
out
mov
scas
push
xor
cmpsb
sub
shll
cmp
xchg
div
movsl
pusha
sti
or
mov
cltd
dec
and
xchg
or
sti
fs
aad
aaa
mov
mov
stc
pop
add
jl
fsubrl
es
add
outsl
ret
mov
sub
shlb
fidivrl
or
dec
cli
pop
cld
arpl
inc
les
jns
add
cltd
mov
dec
std
popa
and
jge
pop
and
xchg
pop
cmc
cmpsl
mov
dec
loop
dec
nop
movsl
mov
stc
mov
lods
adc
cli
xchg
cmpl
push
push
or
minps
icebp
popf
insb
pop
push
adc
jns
push
pop
jne
sub
mov
insb
add
xlat
inc
sbbb
pushf
or
insb
cld
inc
sub
in
cmp
push
sub
push
xor
dec
sub
aaa
push
clc
jo
shlb
dec
gs
loop
ljmp
adcb
mov
pop
cld
inc
ror
cmp
and
xor
xchg
jmp
sbb
imull
jnp
inc
cmp
pusha
fstpl
mov
sbb
mov
xor
jmp
sbb
outsl
iret
movsb
fsubrs
lcall
imul
mov
fsub
push
jecxz
fadds
in
dec
sub
stos
jge
add
pop
add
popl
sarb
and
jno
cmc
sahf
enter
andl
iret
in
or
mov
shr
lods
insb
movsb
dec
mov
and
int3
xorb
pusha
xchg
xor
push
hlt
sub
jb
jmp
adc
mov
adc
cltd
sbb
and
fldl
jnp
stos
cli
sub
sbb
cmp
cltd
xchg
mov
mov
in
or
idivb
inc
mov
fidivs
ret
nop
popf
mov
or
fsub
and
sahf
stos
dec
jns
push
ret
mov
inc
mov
aam
outsl
cli
sbb
xchg
out
stos
andl
cmp
push
jp
mov
add
in
call
mov
sbb
add
and
shl
sbb
or
orb
sbb
sti
adc
pminub
movsb
ja
pop
xor
popf
popa
mov
or
mov
pop
daa
nop
jmp
pop
repz
pop
mov
push
std
gs
mov
jl
out
orl
dec
jmp
or
cmp
push
shrb
rcll
or
sbb
mov
lret
lcall
aas
pop
lfs
insb
push
add
imul
add
shl
add
cmp
cltd
mov
and
push
cmp
sbb
inc
cmp
jns
jno
repnz
jp
cmp
and
jp
or
inc
cli
movb
outsl
das
sti
and
jle
out
dec
mov
push
jg
pop
cwtl
rorl
data16
jp
ret
push
or
or
sub
cli
add
pop
out
jmp
mov
in
inc
in
loop
cld
pop
das
repz
cmp
insl
xor
xlat
mov
int3
inc
jg
xchg
pop
not
sub
sub
int3
inc
ja
add
repnz
adc
stc
mov
add
push
cmpsl
dec
sub
sarb
jl
adc
ss
nop
ss
and
mov
and
cmpsb
xchg
scas
and
aam
flds
jno
pop
cltd
cmp
xchg
test
xor
ficoml
sti
clc
cltd
imul
jne
push
dec
out
mov
shlb
add
and
sbb
cmp
pop
aaa
fisubrl
jnp
faddl
cs
daa
or
xchg
push
cmp
pop
loop
negb
shrb
or
jne
ret
les
lret
xor
jns
push
mov
psubsb
bound
test
xlat
jns
aam
loop
imul
dec
mov
pop
and
mov
fcomps
test
push
fstps
icebp
jge
adc
xor
mov
push
xchg
jo
and
movsb
shrl
inc
mov
cmpsl
insl
lea
inc
mov
repz
rorl
inc
and
testb
lea
shlb
call
pminub
cli
clc
jg
sbb
push
aas
test
xlat
sub
jmp
jl
push
movsb
out
inc
mov
out
mov
mov
and
in
dec
jb
add
mov
ljmp
stc
add
jg
add
or
loopne
aad
fs
push
icebp
dec
xchg
es
outsl
xchg
ret
shll
stc
sbb
es
push
icebp
adc
fwait
mov
xor
and
fimull
mov
pop
sub
popa
xchg
push
mov
shrl
loope
jno
pmovmskb
negl
jnp
dec
xlat
lds
popf
out
lret
pusha
dec
dec
sub
loope
outsb
insl
pop
movl
push
sub
lret
push
sub
into
mov
xchg
add
shlb
out
in
and
and
push
rorb
add
int
inc
imul
addr16
js
aam
dec
ja,pt
sub
or
aaa
nop
and
call
and
sbb
fists
loopne
mov
outsl
je
mov
push
leave
sbb
xchg
cmpsb
sahf
push
cmpsb
sbb
in
and
push
jle
rcrb
add
xlat
int3
xor
popa
movsl
sub
add
sbb
pop
not
lods
outsb
fnstenv
fistps
sbbb
xchg
adc
mov
clc
sbb
lods
add
testb
dec
push
sub
xlat
out
add
jmp
divb
adc
or
jg
sti
sbb
rolb
pop
pop
and
xchg
in
push
test
mov
or
loopne
stc
mov
mov
and
inc
mov
js
ja
xor
push
inc
mov
idivl
lret
pop
in
sbb
and
outsl
fildll
rcrb
repz
stc
xchg
je
lock
mov
dec
mov
dec
mov
int
mov
push
jo
hlt
fs
loop
gs
push
ficoms
lret
in
cs
bnd
mov
jl
iret
xchg
pop
lret
or
nop/reserved
into
mov
clc
cmp
call
mov
xor
fistps
push
les
xor
jg
aas
mov
lock
outsl
popf
jp
enter
or
out
sub
shlb
sbb
cwtl
push
mov
cmc
jmp
lret
or
movsb
stos
sub
repz
push
out
icebp
mov
mov
jne
loop
sahf
push
and
jle
cltd
repz
bound
and
and
jmp
int3
iret
inc
pop
jmp
cmp
add
sub
out
adc
iret
ret
mov
je
call
int3
fdivrl
xchg
fwait
je
loop
repz
fwait
xor
inc
pop
jl
xor
pop
scas
dec
cli
test
decl
bound
sbb
mov
rcrl
enter
adc
std
ds
pushf
sbb
mov
jbe
mov
pop
repnz
adc
test
sub
stos
movsl
pop
ficoml
notl
mov
neg
ja
pop
cmp
add
stos
xchg
push
xchg
xor
fimuls
fcompl
jae
and
lret
sub
aam
out
push
and
fbstp
ljmp
pop
je
leave
adc
in
shrb
dec
popf
push
scas
imull
xchg
insb
pop
jecxz
mov
pop
mov
mov
mov
pop
sub
and
cmpsb
sub
pop
gs
std
dec
mov
cs
cs
jp
xchg
dec
sti
das
out
or
mov
cmp
fisubrs
loope
aaa
mov
pop
xchg
or
mov
mov
xor
inc
fnstcw
xchg
pop
cli
mov
push
lret
cmpb
jmp
push
adc
clc
es
xor
push
out
cmp
and
sub
lods
inc
stos
and
sub
adc
push
lds
loopne
ljmp
and
push
dec
stos
fsubs
jnp
pop
movsl
test
cmc
scas
je
add
push
add
cltd
cmp
sar
adc
imul
sbb
pop
xor
leave
fisubrs
rorb
sbb
stc
je
add
in
pop
pop
call
sar
or
in
movsl
insb
lods
out
jecxz
nop
movsb
pop
sbb
repnz
xchg
xchg
sbb
cmp
inc
pop
and
lcall
mov
mov
pop
jecxz
popa
lea
mov
cmp
cmp
mov
pop
cmpsl
jbe
scas
dec
or
movsb
test
add
jbe
pop
test
sbb
or
outsl
inc
jbe
inc
scas
popa
mov
std
push
std
loop
rclb
loop
push
sar
push
ss
xor
sbb
int3
and
add
fbstp
lcall
jne
and
cli
jnp
scas
push
les
ja
icebp
push
add
lock
mov
aas
push
neg
jle
adc
call
out
lea
enter
sbb
dec
pop
cld
sub
jmp
pop
adc
cmp
stc
or
icebp
push
inc
inc
loope
mov
aas
xor
stc
test
sbb
lea
fisttpll
xlat
stos
adc
out
add
out
ja
ret
fsub
cltd
ficomps
rolb
add
push
or
jae
mov
jb
in
movsl
adc
mov
out
inc
fisubl
pop
daa
inc
sbb
loope
dec
fstpt
neg
fprem
push
popa
pop
ss
pop
sub
inc
jmp
xchg
popa
out
push
jno
pop
push
sbb
lcall
push
in
ja
mov
pushf
icebp
out
inc
jge
push
lahf
loope
in
or
jg
xor
ds
fadds
push
in
movsl
shlb
loop
xchg
jbe
or
lods
adc
pusha
int3
cmc
cmpsl
sbb
or
sub
pusha
xor
test
test
fadds
lock
rcrl
nop
xchg
jle
int
mov
sub
cmp
mov
pushf
and
pop
out
cld
pop
lock
scas
push
loopne
ret
add
lahf
test
push
sbb
xchg
fcomip
mov
lods
mov
jmp
mov
mov
or
adc
in
pusha
rorb
mov
sub
aaa
adcl
mov
hlt
mov
in
dec
dec
setne
push
sbbl
jne
xor
cmp
push
test
dec
dec
xor
dec
pop
xor
inc
scas
ficompl
pusha
xchg
jbe
xchg
lods
pop
pop
pop
lret
push
cmp
dec
adc
mov
out
add
mov
jne
xor
sub
stc
scas
add
xchg
jg
push
test
mov
hlt
pushf
dec
cwtl
pop
adc
das
adc
roll
dec
jle
mov
sub
mov
sbb
mov
sub
fiaddl
dec
popa
loope
xchg
arpl
shll
repz
add
pop
shrb
push
repz
adc
sbb
fisubs
int
shll
scas
test
in
mov
scas
pop
outsl
nop
mov
aam
test
outsl
jb
test
and
mov
push
mov
das
jecxz
popa
or
dec
or
lret
repz
aaa
test
enter
dec
lods
enter
jo
mov
fs
mov
movsl
inc
pop
movsl
hlt
inc
adc
sbb
lahf
fstpt
adc
mov
dec
sub
test
arpl
sbb
ret
sub
dec
sbb
xchg
sti
add
cmpsl
pop
mov
sbb
push
cwtl
fnstenv
push
mov
dec
xchg
sbb
movsl
fnsave
push
in
jno
xor
std
movsl
and
xchg
adc
mov
sub
ret
pop
push
push
add
insb
enter
push
arpl
pop
dec
jmp
dec
shll
dec
push
xchg
push
outsb
cmp
adc
cs
stc
cltd
and
test
lds
pop
popa
push
mov
mov
mov
add
mov
sub
adc
aam
pop
arpl
js
push
punpcklbw
lret
jge
lea
pushf
call
pusha
inc
push
mov
jae
xchg
dec
mov
jno
xlat
push
push
jmpw
pop
ficoml
push
lock
insl
jbe
push
cmp
shlb
adc
push
sbb
inc
loope
lds
ficomps
or
xor
jl
cmpsl
fwait
iret
mov
hlt
into
push
sbb
jg
sbb
mov
movsb
jo
sti
outsb
mov
cmp
jp
jns
adc
scas
inc
mov
pop
push
inc
fs
push
push
es
lcall
dec
sub
and
xor
mov
aaa
mov
mov
fisubl
insl
lahf
mov
stos
dec
popf
movsl
dec
mov
das
aam
pop
push
inc
dec
mov
mov
push
stos
jb
test
out
cmpsb
or
push
nop
ret
cmp
in
or
and
xchg
jb
pop
rclb
rcrb
cltd
jp
pushf
stc
ljmp
pop
std
cmp
jl
mov
sub
mov
mov
adc
dec
push
ret
out
pop
stos
jno
push
or
mov
sti
add
cmp
ret
aam
push
in
lock
pop
mov
lock
jmp
and
push
sbb
testl
push
cmp
sub
pop
lcall
fs
sbb
test
in
add
pop
fistl
lea
daa
daa
ss
xchg
outsl
rclb
or
jmp
mov
cmpl
jae,pn
jl
in
push
mov
loopne,pn
jno
out
inc
mov
pop
cmpsb
mov
in
lods
push
test
pop
pop
iret
ljmp
add
int
popf
lea
inc
mov
and
loop
int
or
clc
or
jle
frstor
pop
int
inc
ja
jb
or
jge
mov
xor
daa
roll
cmpl
icebp
mov
xor
repz
inc
test
dec
mov
fidivs
jg
jnp
mov
lcall
push
fstpt
das
cltd
mov
pusha
lcall
mov
pop
in
add
pop
stc
mov
std
sub
jb
mov
mov
mov
push
mov
roll
andl
mov
push
repnz
mov
cmp
xlat
push
scas
outsb
mov
lea
mov
push
aad
addb
xor
pop
sti
cmp
adc
outsb
nop
idivl
in
push
shrb
cmp
push
inc
mov
test
pop
ret
add
push
enter
daa
test
xchg
mov
and
dec
lea
pushl
push
jecxz
hlt
mov
into
pop
add
or
cltd
push
loopne
jbe
and
and
push
xor
out
pop
xchg
das
mov
movsb
cmp
mov
push
fisubrs
adc
add
out
daa
aad
xor
test
outsb
xchg
adc
hlt
pusha
xchg
imul
push
lods
arpl
shr
aaa
rcrb
fsubs
aaa
mov
jl
ja
aam
add
pop
es
aad
negl
imul
dec
mov
and
pop
outsb
push
out
push
xchg
jp
lock
pop
stc
push
xchg
push
mov
loopne
data16
clc
cmp
xor
adcl
sub
adc
pop
push
lods
pop
int3
in
loopne
dec
xchg
cli
sbb
stos
jne
out
push
out
clc
imul
std
or
xor
ss
sbb
pop
and
add
test
mov
sub
mov
gs
push
test
push
rep
cs
pop
mov
push
cmpsb
mov
je
aad
mov
repz
add
mov
lcall
adc
or
jge
add
push
adc
xchg
enter
dec
fwait
daa
cmp
pusha
out
movl
lock
inc
repz
xlat
mov
mov
shlb
sbb
and
les
cmp
stos
jo
lds
adc
or
std
pop
push
test
xchg
lret
out
rolb
sub
iret
jmp
rcrl
xchg
pop
mov
dec
lods
inc
les
loop
cltd
insb
nop
sbb
dec
mov
pop
sbb
pushf
pusha
sub
rcrl
ljmp
cmp
cmp
cld
adc
outsb
sub
jno
cltd
inc
test
fcos
ja
arpl
je
jbe
movsl
inc
mov
jne
jg
lea
rcl
xchg
jg
jmp
out
data16
das
cld
xchg
imul
popa
xchg
stc
push
add
add
add
lcall
into
or
pop
pushf
xor
mov
add
lods
hlt
lea
sub
mov
cltd
aad
mov
jo
fmul
es
or
push
sbb
or
ljmp
es
sub
cmp
pushf
dec
mov
cld
arpl
push
loop
push
cltd
xchg
inc
mov
inc
add
in
adc
jg
stos
sbb
lods
push
mov
fmulp
aas
leave
xor
sub
cmp
iret
or
jne
inc
fcmovnbe
dec
test
mov
aam
add
lcall
pop
xor
sbb
in
and
sbb
cmc
push
movsb
dec
pop
mov
push
sub
popl
dec
scas
push
push
mov
outsl
xchg
inc
jge
call
mov
mov
push
int3
cmp
shlb
ljmp
es
mov
mov
inc
test
inc
fcomps
fwait
ljmpw
sbb
mov
mov
aam
pop
mov
stos
js
rorb
lds
dec
and
mov
iret
andb
or
out
inc
ds
xor
add
and
std
in
jmp
das
cmp
fnsave
dec
mov
mov
test
stc
jo
incl
es
adc
dec
xchg
push
or
lcall
cmp
xchg
mov
sbb
sbb
cmp
shlb
shlb
aaa
adc
lds
in
es
lock
push
or
aaa
fimull
and
insb
add
sub
pop
ret
cmp
mov
push
push
cmp
jl
loope
dec
aas
cmp
test
lret
xor
fwait
mov
sbb
nop
sti
les
shrb
arpl
and
es
fistps
or
inc
in
and
popa
pop
sub
adc
ljmpw
pop
push
adc
call
mov
pop
adc
jae
popf
testb
das
xchg
mov
dec
sbb
inc
mov
jb
scas
sti
inc
sbb
cwtl
add
sub
mov
cmp
repnz
insl
aaa
push
cmpsl
lods
push
outsb
push
daa
sahf
out
dec
in
les
dec
inc
adcb
repz
sub
xchg
dec
mov
inc
sbbl
jp
js
ljmp
push
ds
cmc
popf
scas
lods
adc
repnz
inc
ret
mov
sub
mov
and
ds
cmove
stos
sbb
sub
inc
cmp
lock
dec
out
mov
sub
repnz
xor
sub
mov
testb
xor
jge
dec
ds
push
and
push
idivb
leave
mov
sbb
xchg
jp
clc
adc
xor
cld
mov
cwtl
inc
jge,pn
test
pop
cmp
lcall
push
cmpsb
xorb
sti
xor
xor
popf
inc
mov
jae
fmulp
lods
js
xor
or
pusha
cmpl
je
imul
jmp
add
mov
adcl
jp
imul
push
subl
mov
cmp
lcall
fs
add
dec
stc
adc
orb
jnp
pop
in
or
push
jg
cmp
cltd
adc
mov
fstpl
xor
cltd
mov
loopne
imulb
stos
andb
jle
pop
and
das
mov
fstl
and
xchg
push
popf
xchg
nop
cld
xchg
jne
cmc
push
sti
xchg
fistps
sar
xor
cltd
and
or
ret
mov
sbb
push
cld
cwtl
cld
es
push
xchg
push
outsb
inc
inc
xchg
jge
rcrl
add
leave
pop
js
sub
fcomi
ss
cmp
ljmp
test
or
xchg
data16
push
inc
mov
push
jecxz
pop
stos
gs
mov
or
inc
dec
mov
xor
push
inc
pushf
jb
enter
mov
fs
outsl
cmp
test
es
add
ja
subl
and
push
mov
inc
xor
insl
mov
mov
adc
lret
mov
jae
sub
inc
addb
loopne,pn
inc
cmpsb
push
dec
cmpb
jno
dec
cs
or
xchg
jl
aaa
inc
sub
push
jne
push
mov
ret
test
les
adc
mov
xchg
sub
loop
repnz
jno
imul
es
fs
outsl
inc
movb
jmp
push
stos
inc
xchg
pop
test
xchg
jp
fsubrl
dec
cmp
lock
pop
fbstp
push
pop
mov
pop
imul
repnz
int3
mov
mov
dec
mov
push
or
inc
dec
mov
stos
dec
jns
gs
lea
dec
mov
push
push
dec
ljmp
jg
fs
jae
inc
xchg
scas
xchg
cwtl
or
add
jmp
inc
mov
out
xor
xor
and
pop
jp
pushf
and
sbb
ja
pop
jae
aas
cmp
testl
mov
mov
call
push
fucom
mov
push
repnz
negl
adc
sbb
and
shrl
sub
mov
cltd
stc
push
add
cld
cmp
jmp
jnp
xor
and
mov
movsb
dec
iret
inc
mov
dec
pop
sbb
mov
and
dec
movsl
pop
adc
inc
mov
xor
add
xchg
add
sarb
adc
jbe
data16
cmp
lret
and
adc
repnz
mov
sbb
inc
jno
dec
data16
cmp
shld
call
inc
mov
cwtl
in
push
xchg
mov
mov
fadds
dec
aas
das
loope
xchg
jle
cmp
jp
stos
and
mov
lret
sub
add
push
loope
pushl
es
xchg
hlt
adc
mov
cmp
sub
mov
jne
sub
mov
mov
sbb
es
jns
xlat
fcmove
in
dec
and
outsb
adc
dec
jmp
test
mov
adc
lds
cmp
stos
xor
daa
mov
or
je
cmc
lret
into
add
das
das
pop
fisubs
xor
dec
xor
movsl
mov
jle
cmc
mov
inc
outsb
or
inc
cmp
sub
xor
lcall
fimuls
fidivrs
and
xchg
jmp
repnz
outsl
movsl
ss
fs
mov
cmpsl
lahf
sub
std
jbe
lods
xchg
cmp
jp
xchg
rcl
xchg
add
and
pop
push
xchg
mov
mov
pop
test
lcall
test
or
cmc
push
and
lret
movsb
and
push
out
pop
hlt
adc
mov
ficomps
jnp
mov
out
movsl
adc
mov
mov
js
push
out
mov
mov
in
std
in
stos
adc
fdivs
xchg
xchg
nop
sub
mov
mov
sub
adc
notb
ja
push
mov
xchg
mov
jns
clc
lods
mov
dec
data16
outsl
sbb
std
popl
xchg
dec
movsb
and
push
jg
iret
mov
jbe
add
xchg
add
mov
arpl
dec
lcall
mov
idivl
cmp
xchg
fbstp
or
test
fidivrs
push
adc
gs
xor
cld
mov
cs
std
divl
sub
std
nop
or
and
imul
stos
es
ror
xorl
arpl
dec
mov
testb
pop
in
ret
inc
sbb
xorb
loop
movsb
imul
push
std
adc
stc
int
clc
or
and
shrl
xchg
mov
push
sahf
das
decl
and
rcll
addb
or
lea
js
pushf
rolb
out
movsl
lock
into
fcmove
add
inc
rorb
jmp
pop
hlt
pop
aaa
xchg
pop
ror
mov
aam
dec
xor
test
ret
dec
fwait
arpl
xchg
or
and
popa
movsb
enter
add
mov
fdivs
mov
shll
aaa
mov
xchg
loopne
sbb
mov
pop
jle
or
jae
dec
dec
xlat
sbb
inc
cmpsl
imul
mov
mov
xchg
lods
fxch
pop
sbb
xchg
dec
cwtl
imul
xor
push
pop
mov
mov
test
insl
xor
aad
test
push
rorb
push
xor
repz
repnz
in
scas
push
aad
aaa
push
mov
sbb
std
nop
insl
scas
cld
add
xor
pop
xor
bound
sub
outsl
jge
inc
pop
iret
sub
int3
cmp
call
das
fimull
loope
popa
mov
push
testl
jge
and
xor
test
fidivrl
or
ret
cmovno
loope
jbe
inc
or
mov
dec
nop
lret
cmpsl
data16
mov
sbb
push
pop
icebp
mov
outsl
push
cmc
movsl
ljmp
data16
addr16
stos
inc
stos
lret
sub
mov
push
lahf
jmp
scas
aam
call
ljmp
dec
push
clc
std
push
and
outsl
fs
inc
fwait
lahf
jmp
enter
stos
push
idiv
and
loop
xchg
cmp
lret
fnstsw
scas
mov
cmp
pushf
cs
push
int
adc
dec
xchg
and
push
ja
imul
pop
sub
test
jno
cmp
jmp
fwait
mov
mov
scas
repz
dec
shrb
cwtl
cmpsl
pop
leave
es
mov
out
sbb
cmc
fiaddl
imul
dec
push
inc
inc
pop
fisubrs
jbe
jmp
ret
or
cmp
adc
xor
mov
test
test
bound
jo
ret
dec
jg
scas
out
cli
push
or
xorb
and
mov
push
popf
clc
sub
jl
in
scas
push
sub
sahf
lret
mov
into
shlb
sbb
loopne
sub
jp
xchg
dec
aaa
mov
aaa
or
imul
add
add
mov
bnd
push
rclb
ja
leave
imul
adc
mov
sbb
inc
mov
mov
push
repnz
or
aam
nop
aas
inc
clc
int3
push
je
add
and
fst
cwtl
xlat
add
jecxz
pop
pop
or
loope
mov
xor
xor
mov
loopne
ret
lret
cmp
cmp
shlb
xchg
movsl
inc
jge
or
ja
xchg
inc
in
mov
dec
push
jno
out
fistl
xor
xchg
mov
ficoml
sbb
xchg
enter
shlb
call
add
sbb
sahf
sub
inc
test
fbstp
pop
mov
mov
inc
popf
inc
mov
jmp
mov
cmc
movsl
xor
xchg
movsl
add
clc
adcl
xchg
xor
xchg
das
adc
pop
lea
cltd
push
cltd
movsb
repnz
or
mov
pop
jno
lcall
adc
add
imul
repz
cmpsb
mov
je
test
add
pop
mov
xor
insb
and
adc
mov
dec
and
cmp
repnz
mov
je
es
adc
mov
into
call
cwtl
shll
dec
xor
pop
stc
aad
adc
or
rorb
leave
sahf
jl
jo
testb
dec
adc
sub
pop
imul
mov
inc
loope
in
inc
ret
clc
pop
cltd
or
je
ja
jbe
push
scas
clc
mov
stc
lea
xchg
neg
mov
mov
inc
jmp
dec
sub
data16
xorb
movsb
push
aaa
cli
sbb
insl
cmc
push
decl
inc
inc
pop
les
cmc
cmp
sbb
cmp
mov
add
lcall
xorl
xchg
jae
out
lea
outsl
pop
inc
mov
repz
leave
sub
xor
int
icebp
push
inc
pop
ret
cmp
jl
mov
fsub
hlt
cmp
cli
adc
shrl
mov
sub
add
push
sbb
daa
and
jb
jno
cmc
je
xchg
hlt
shrl
inc
cwtl
cld
pop
cli
ss
int
jp
aas
bound
pushf
out
pop
push
cmp
pop
mov
aad
les
push
mov
xchg
aam
gs
push
shrb
divb
sbbl
cld
mov
mov
mov
orb
pop
sarb
out
add
dec
mov
mov
xor
fnstsw
in
jmp
incb
pop
loopw
jge
std
and
stos
mov
mov
fcoms
fs
dec
ret
push
or
push
lret
bound
dec
mov
ja
dec
mov
jae
add
cmp
movb
neg
and
pop
sub
mov
mov
push
inc
lods
lock
xor
out
std
cmp
aad
imul
jmp
cmp
cld
and
sbb
fnsave
cmc
fisttpll
cmp
out
add
pop
cmc
and
int3
mov
mov
jl
jg
cld
mov
in
add
and
push
cld
or
out
xor
aaa
sti
arpl
dec
scas
test
inc
mov
mov
js
loope
insb
jbe
int3
inc
adc
mov
test
js
dec
mov
mov
je
push
dec
sub
jl
push
lea
cmc
inc
cmpsl
inc
int3
testl
cmp
shlb
and
rcll
icebp
jne
adc
mov
inc
xlat
mulb
mov
pop
movsb
mov
cli
jge
adc
cwtl
jae
ret
xor
cwtl
and
xor
fs
mov
or
sbb
ret
icebp
and
inc
jmp
pop
fnstenv
lahf
cmpsl
add
imul
xchg
vcvtss2si
loopne
jb
cltd
dec
int3
daa
pop
dec
mov
push
mov
push
je
sbb
icebp
xchg
inc
pop
mov
jb
jb
loope
fsubl
jmp
sub
fs
loopne
in
and
mov
popa
mov
and
subl
sbb
icebp
push
dec
test
inc
xor
xchg
aam
push
sbbl
lea
or
movsb
push
ficomps
add
faddl
scas
insb
stc
ja
mov
fmul
aam
das
xor
mov
cmp
inc
lret
mov
xchg
sub
and
mov
rolb
push
cwtl
roll
sbb
lods
popa
lret
cltd
mov
mov
mov
cli
inc
fwait
sub
push
xchg
insl
sbb
add
insl
cmp
daa
cmp
enter
xor
pusha
or
in
sbb
aam
pop
mov
loop
sbb
test
test
loop
mov
mov
adc
movsb
fnsave
fdivrl
shll
cmp
pop
inc
sahf
dec
adc
ret
sbb
dec
insb
or
mov
xor
push
push
cmc
push
and
aas
adc
std
pop
adc
pop
dec
dec
pop
outsl
jmp
stc
xor
lret
mov
cmpsl
jno
jmp
hlt
xchg
jle
call
mov
mov
push
sub
add
sbb
or
jnp
xor
aaa
jmp
mov
test
ss
shlb
and
mov
pop
call
bswap
mov
rorb
sub
lods
and
in
sarl
fisubl
mov
pusha
jecxz
jns
add
mov
mov
nop
aad
rcr
daa
xchg
fistpl
int3
out
mov
xchg
negl
out
xor
test
push
mov
hlt
add
xchg
out
push
mov
jp
add
loope
ljmp
or
inc
stos
push
movsl
lods
std
jae
pop
pop
inc
and
push
outsl
mov
lret
popa
xor
mov
arpl
dec
rolb
sub
jno
sub
mov
mov
inc
movsl
enter
inc
test
sub
fnsave
mov
push
xlat
add
scas
imul
push
or
mov
arpl
je
cmp
push
cmp
dec
xor
iret
fcoml
loop
insb
jne
sub
push
inc
jge
gs
popf
flds
cmp
loope
fpatan
xor
and
mov
adc
jl
sbb
dec
testl
or
stos
xchg
js
sub
leave
jb
filds
loope
or
lds
mov
lds
xchg
test
jp
pop
ljmp
sub
xchg
pusha
xorl
dec
mov
or
orl
jns
insb
xor
mov
inc
test
cmc
movlhps
adc
jae
mov
call
jl
stos
aad
push
xchg
pop
loopne
stos
adc
mov
xor
push
imul
mov
jnp
jb
and
cmp
and
shll
pop
mov
dec
sarb
es
sbb
mov
sub
and
sub
arpl
adc
repz
es
lea
inc
mov
int
xchg
xchg
outsl
scas
sbb
adc
cmp
jg
sbb
adc
cmp
sbb
ret
push
ja
or
sbb
les
xor
aaa
mov
aaa
mov
dec
out
adc
mull
in
int3
outsb
scas
jno
iret
push
sbb
int
pop
mov
icebp
push
mull
jmp
loopne
mov
push
cmp
sbb
jb
jp
insb
dec
dec
push
test
pop
out
sbb
add
fwait
insb
mov
jmp
mov
addr16
pop
movsb
scas
adc
dec
mov
push
and
xor
adc
dec
mov
sub
aam
mov
popa
inc
mov
push
lret
insb
cmp
sbb
jmp
xchg
dec
inc
push
sbb
dec
scas
xor
shll
sbb
in
ss
pusha
xchg
mov
or
lahf
lea
pop
mov
mov
xlat
aad
lock
and
add
adc
fdivl
xchg
das
sarb
xor
inc
cli
sbb
ret
and
ljmp
sarl
ds
js
adc
pop
test
adc
mov
sarl
ds
scas
dec
xchg
pop
fstpt
pusha
or
aam
xor
pop
aas
lahf
xchg
xchg
das
cli
cmp
fisubrl
jecxz
or
mov
shr
cmp
frstor
pusha
sbb
cs
xchg
xchg
nop
out
mov
mov
ret
adc
and
mov
aas
sarl
sahf
dec
gs
stos
int3
mov
pop
jg
xchg
push
mov
jo
bound
sbb
ja
sbb
jns
outsb
in
mov
lock
ljmp
dec
mov
imul
fldl
add
or
popa
push
sti
pusha
cmp
and
push
mov
ss
sbb
fwait
inc
mov
push
lods
adc
add
sbb
leave
cmp
stos
in
hlt
sub
add
scas
jecxz
int3
cmp
add
daa
out
xchg
inc
pop
and
and
or
add
test
jae
mov
mov
loopne
adc
inc
or
jl
test
lds
sbb
ds
data16
incb
ret
push
or
mov
xchg
dec
paddsw
lds
or
cld
sbb
pop
stc
mov
ljmp
sarb
mov
test
add
fnstsw
sub
test
jo
jle
inc
rclb
je
xor
int
cmp
cwtl
pop
and
push
push
pop
jns
cmp
mov
xchg
adc
mov
pop
pop
jbe
jno
jo
jnp
dec
sub
jg,pn
pusha
clc
mov
stc
stc
xor
add
sbb
pop
jb
adc
add
mov
lcall
stc
push
fsubl
pusha
mov
xor
jle
push
ret
xor
cmp
and
jp
pop
mov
outsb
imul
das
xchg
nop
rorb
repz
mov
fisttpl
std
les
insb
popa
fmuls
scas
outsl
pop
icebp
enter
ds
xor
test
pushf
popa
clc
arpl
ficompl
cli
lea
movl
sbb
enter
gs
shlb
je
negb
stos
mov
mov
lds
push
mov
and
or
mov
repnz
stc
in
push
lock
jmp
mov
ret
jbe
inc
cmp
mov
inc
scas
jae
fcomp
fidivs
jne
ret
pop
ljmp
inc
inc
xlat
or
xchg
push
xchg
movsb
dec
mov
inc
scas
ja
out
and
popf
xlat
cmp
fidivl
xchg
insl
mov
outsb
les
inc
xchg
mov
sarb
cmp
stc
push
out
cmpsb
lret
sbb
xlat
mov
jns
pop
shrb
push
cmp
xor
or
cmp
or
add
inc
push
pop
jge
in
pusha
out
insl
test
cld
sbb
cs
loop
ja
inc
movsb
pop
movsb
fs
out
arpl
shrb
ret
ljmp
jecxz
push
sti
pop
and
sub
repz
jbe
or
xor
rcrl
sub
outsl
sub
jg
fnstsw
insl
xchg
sbbl
push
ja
stc
cltd
or
leave
aam
jae
sbb
lahf
call
dec
faddl
cmp
xlat
cltd
push
xchg
loope
jp
push
rclb
fwait
xchg
fdivl
xlat
mov
shrl
jl
mov
mov
sub
sbb
arpl
pop
mov
push
sub
sbb
push
aaa
out
aas
jp
aaa
aad
sti
push
hlt
xchg
jns
mov
jle
int
mov
testb
clc
mov
movzwl
cmp
aas
fbstp
mov
sbb
testb
push
mov
add
cmp
outsb
cmc
std
movsl
push
sbb
arpl
iret
jne
fistl
aad
inc
pop
fisttps
lock
imul
sub
push
inc
or
push
out
add
loopne
xor
or
mov
ret
add
xchg
inc
test
pop
ljmp
mov
cmp
inc
pop
cwtl
xor
in
cwtl
fs
cs
push
push
fisubl
or
into
sbb
adc
xchg
jae
sahf
mov
test
popf
push
add
mov
pop
mov
mov
shll
push
and
cmp
dec
jns
and
mov
mov
push
test
sub
daa
pusha
pop
mov
test
imul
addl
nop
subl
insb
lret
sbb
add
imulb
cwtl
jmp
out
mov
in
dec
movl
mov
dec
in
in
out
fisttps
push
sbb
push
push
mov
push
das
filds
shrb
cmpsb
negl
test
mov
shll
jge
pop
ljmp
and
aaa
aas
rcrb
fsubl
data16
push
jmp
ret
cmp
repz
loopne
jbe
or
cmp
ljmp
or
sbb
sarl
jno
pusha
and
sbb
adc
adc
mov
mov
jae
cli
jecxz
je
nop
outsb
nop
xor
xor
add
push
daa
jge
adc
sbb
jmp
js
jbe
mov
dec
mov
add
pushf
sub
sarb
xchg
paddq
or
push
iret
lods
push
pop
scas
mov
add
pusha
mov
sbb
ss
mov
scas
popw
leave
cmp
aam
ljmp
pop
jbe
pop
mov
dec
xchg
subl
popf
in
mov
jl
js
inc
inc
insb
data16
add
ljmp
lret
and
dec
push
xor
adc
push
pop
sbb
lods
lahf
dec
fisttpll
dec
mov
pushf
imul
ljmp
and
data16
pop
subb
add
iret
sbb
outsb
arpl
sbb
lods
push
ret
in
imull
sarl
mov
mov
push
jecxz
pop
mov
xchg
scas
inc
xchg
leave
adc
jb
lahf
push
icebp
xchg
inc
fwait
mov
mov
lahf
pop
sbb
outsb
dec
cmc
push
out
les
or
cmp
adc
hlt
jl
lea
mov
and
sub
push
pop
movsl
sti
add
ja
xchg
or
cmp
cmp
sbb
fdivrs
fisubl
test
std
xchg
mov
jg
xor
sub
xor
or
sbb
cmp
cmp
test
jb
arpl
jbe
aaa
mov
aas
xor
adc
sub
pop
push
jns
loope
aam
scas
inc
pop
ret
mov
pop
mov
xor
das
daa
mov
sbb
popf
pop
mov
rcr
scas
rol
add
mov
sub
ret
lahf
lods
popa
mov
xchg
and
jb
pop
jnp
cmp
ja
sub
clc
mov
add
dec
adc
xor
xchg
sbb
jecxz
mov
cmpsb
add
cmp
mov
jmp
das
pusha
pop
scas
outsl
pushf
lret
sahf
jg
out
lds
int
xorb
stos
in
xchg
mov
inc
shr
outsl
in
loop
xlat
test
sarb
mov
sub
xor
xor
sbb
iret
sbb
inc
sti
add
stos
sbb
dec
pushf
rcrl
xchg
push
inc
inc
pop
and
jae
mov
inc
outsl
jae
cmpsb
and
sbb
fcoml
or
popf
dec
add
xchg
iret
or
ret
mov
push
fcmovu
pop
arpl
mov
movsb
lods
mov
mov
insl
bound
icebp
mov
xchg
pop
rcll
mov
add
push
lcall
jo
pusha
stos
stc
push
dec
iret
loope
dec
ss
and
add
adc
sbb
movsb
mov
sahf
add
push
dec
inc
sub
dec
das
cs
fidivl
aaa
scas
and
xor
xor
test
pusha
jne
xchg
xchg
scas
ljmp
stos
xchg
in
xor
hlt
mov
xchg
push
adc
mov
mov
mov
mov
dec
out
imul
outsl
push
enter
mull
mov
pop
lods
add
out
and
sar
es
add
mov
das
or
je
and
push
mov
xchg
push
fs
jo
mov
lret
lret
adc
popa
xchg
lahf
in
mov
fs
add
jge
mov
cs
sbb
sub
pop
inc
nop
mov
add
cmp
pop
adc
inc
je
shlb
jge
cs
iret
lea
sbb
int
daa
ss
movsb
ret
dec
fcmovnu
pop
out
push
sub
movsl
xchg
adc
je
fdivrs
sub
imul
stos
xor
mov
inc
cmc
push
xchg
or
jae
call
and
cmpl
sub
fdivl
push
pop
lret
loope
xor
fldt
subb
adc
cmp
fsts
push
cmp
add
pop
aas
std
addr16
jge
rorb
cmp
pop
repnz
gs
imulb
roll
aad
xchg
lcall
pop
mov
clc
jo
mov
and
mov
repz
fdivrl
addb
ss
pop
xchg
cmpsb
cmpl
fdivrl
dec
adc
es
cmpsb
outsl
sbb
sbb
fwait
jmp
outsl
mov
pop
outsb
mov
lahf
cmp
cmp
lret
push
ret
lret
movsb
push
cmp
jl
outsl
jg
jne
mov
sbb
ja
mov
cwtl
pop
mov
mov
mov
addr16
sbb
aaa
inc
aad
ds
das
xchg
scas
int3
xchg
ret
dec
mov
rol
add
lret
sub
stc
push
xor
test
idivl
aad
cmp
dec
fnsave
push
imul
mov
jge
dec
sahf
shlb
std
lds
push
jge
push
icebp
lea
imul
aaa
add
stos
sbb
mov
pop
push
mov
mov
call
lods
scas
repz
adc
fstpt
adc
clc
sub
xor
scas
add
xchg
adc
pop
adc
lret
pop
xchg
in
cmpsl
or
push
mov
std
sub
int3
dec
xlat
jl
arpl
xlat
fs
adc
sub
scas
dec
lds
popf
xorb
loopne
jno
xor
setl
in
addb
in
mov
mov
pop
shrl
push
push
push
hlt
and
sub
addr16
cmp
cmp
lods
das
adc
xor
pop
push
std
clc
cmp
cs
das
dec
mov
xor
and
add
inc
pop
cmp
jb
hlt
popa
xor
in
ljmp
xlat
cmpsl
aaa
xchg
nop
ds
mov
sbb
or
pop
push
test
mov
jg
imul
dec
sarl
and
inc
out
maxps
push
lock
inc
test
jle
je
pop
in
insb
mov
adc
jne
ficomps
scas
cli
cmp
scas
cmp
mov
mov
lea
mov
and
sbb
popa
jnp
fcoms
mov
push
hlt
add
push
dec
jbe
aad
sub
xchg
scas
mov
aam
cmp
mov
les
add
outsl
and
das
jg
push
dec
jo
aam
call
jl
addr16
xor
ljmp
vpxor
fmull
gs
or
loopne
lods
int3
fcmovnb
push
fcmovu
popf
and
adc
lds
jbe
data16
movsl
mov
inc
xchg
mov
das
jne
clc
xor
xor
add
call
xor
pop
rorb
dec
sub
cwtl
pop
mov
testb
dec
out
scas
and
pop
shrb
or
mov
outsb
xor
push
mov
test
add
imul
mov
lret
jle
pop
or
jb
ja
and
dec
out
sbb
pop
jnp
push
jl
popf
mov
dec
xchg
push
dec
and
xchg
jo
outsl
or
pop
je
xchg
push
inc
and
push
mov
jmp
test
jae
scas
imul
jle
push
jl
imul
test
inc
or
xchg
jecxz
and
out
xchg
adc
scas
or
cmp
ret
jo
sub
cmpsb
xchg
or
mov
or
in
out
cmp
ret
cld
add
cli
xchg
popf
mov
stos
sbb
cli
divb
insb
pop
xor
mov
xchg
icebp
mov
dec
jp
pushf
and
jge
ljmp
test
jbe
insb
jl
mov
les
push
mov
mov
icebp
adcb
jg
jmp
push
lods
xchg
sbb
data16
enter
pop
addr16
cs
rcll
fcompl
data16
repz
jle
ss
movb
sbb
inc
sbb
or
xor
mov
jp
outsb
fsubrs
bound
cli
mov
dec
push
pop
jl
bound
subb
inc
push
stos
ret
or
push
push
mov
and
pop
xor
nop
shll
push
xor
mov
pop
ficomps
jmp
std
push
pop
mov
sbb
int
inc
xor
lea
jne
sub
push
push
das
push
cwtl
and
and
test
incb
cltd
xor
lods
dec
and
das
xchg
push
xchg
sbb
call
lds
mov
push
fsubs
push
mov
dec
mov
pop
sbb
mov
pop
fs
sub
pop
call
aaa
cmp
ljmp
mov
add
les
testb
add
popa
fnstcw
out
push
lods
xor
pop
lret
in
int3
inc
leave
cmp
insl
sti
push
push
pop
rclb
sub
test
je
jno
or
sbb
in
xchg
xchg
ja
xchg
es
aaa
or
lock
stos
lahf
push
addr16
divl
hlt
sarb
out
iret
jecxz
seto
mov
and
or
sbb
ss
test
xor
es
test
mov
and
lds
es
frstor
dec
fbstp
inc
push
js
mov
push
adc
sti
lea
mov
mov
xchg
movsl
push
mov
xlat
push
push
nop
mov
mov
scas
dec
dec
push
mov
cltd
nop
mov
in
and
or
rorb
mull
pop
xchg
inc
sarb
popl
sbb
push
cli
out
add
shl
stc
aas
push
fcmovnu
arpl
insl
xlat
adc
scas
into
xlat
push
aad
mov
out
inc
lahf
mov
mov
iret
sbb
mov
add
stos
pop
jl
aas
stos
mov
decl
pop
scas
adc
push
mov
imul
in
adc
sahf
into
xor
adc
sub
pop
or
push
xor
data16
cmp
rorl
mov
imul
pop
out
mov
adc
adc
mov
data16
imul
xchg
pop
mov
aas
push
xor
fdivrl
bound
jg
aas
je
cmp
inc
mov
xchg
inc
xchg
xchg
mov
jns
sbb
bound
mov
sub
lret
and
orl
dec
xchg
aam
data16
arpl
test
cmpb
mov
cmp
add
push
stos
push
mov
or
mov
mov
addr16
or
test
push
adc
push
xchg
mov
in
leave
pop
jne
pop
imul
mov
out
jg
clc
or
ljmp
push
mov
jg
dec
xlat
xchg
cmp
push
imul
or
mov
test
call
mov
cmp
add
pop
clc
out
aam
mov
stos
paddusw
aad
hlt
cmp
inc
cli
mov
or
mov
js
cmp
cmp
inc
nop
and
adc
in
cmpsl
popf
rcl
adc
enter
popa
pop
cld
adc
mov
dec
sbb
clc
clc
fstl
sbb
dec
fcoms
or
cmp
xchg
jns
or
in
push
push
data16
les
hlt
jg
pop
outsl
xor
out
push
je
push
test
lods
jl
bound
outsb
fwait
dec
mov
pop
scas
bound
iret
insl
test
lods
or
dec
sub
mov
adc
adc
into
mov
mov
mov
ficompl
aas
pop
add
sbb
jg
out
incb
jp
lods
push
mov
sbb
sub
mov
mov
or
stos
push
test
in
fwait
lds
stos
lahf
push
mov
fs
movsb
inc
or
adc
in
mov
xlat
sbb
and
lcall
push
adc
and
push
jle
or
fldt
pop
loopne
sti
push
pop
xchg
mov
sti
jp
repnz
fwait
push
adc
push
jns
or
push
ja
or
xchg
jo
loopne
rclb
sub
mov
shll
cmpsl
sti
clc
mov
dec
inc
xorps
jg
and
shr
jae
idiv
insb
or
pop
insl
xchg
push
scas
jecxz
mov
fwait
outsl
or
add
inc
fs
inc
add
mov
add
mov
ret
flds
xchg
int3
inc
jmp
add
pop
sub
mov
inc
ja
dec
call
xorl
lds
xorl
push
pop
jge
xor
gs
fisttps
sub
push
cmp
pop
xor
xchg
ljmp
pop
outsl
pop
lods
add
jne
nop
in
lret
xor
popf
or
popf
das
xchg
push
cs
mov
adc
mov
xchg
call
jge
lcall
inc
popf
push
dec
cs
dec
mov
es
jo
dec
enter
xchg
stc
pop
or
sbb
clc
xor
insb
sbb
loop
cltd
jmp
jl
clc
fs
mov
insl
adc
mov
out
out
cmp
pop
push
mov
dec
lods
push
test
out
or
push
data16
hlt
lods
push
mov
and
add
fs
inc
cli
or
test
sub
xchg
add
mov
stos
mull
out
jp
in
int
nop
scas
arpl
mov
out
jbe
cld
xchg
lret
sub
test
mov
cmp
jl
fistpll
mov
loopne
gs
dec
push
fldt
dec
sbb
addr16
addps
and
nop
pop
push
push
lock
pusha
shrb
daa
mov
push
les
mov
shrl
mov
loopne
lods
mov
pop
mov
xor
mov
in
cmp
mov
hlt
insl
mov
or
mov
pop
mov
jle
cli
sbb
or
xchg
cmc
popa
int3
fidivl
adc
jge
adc
insl
xor
mov
test
iret
fnsave
inc
mov
fwait
in
psrlq
push
stos
xchg
js
cmp
push
stos
js
sbb
in
mov
push
mov
leave
in
test
jp
push
scas
rorl
ds
push
add
lcall
shrb
negl
call
sti
push
mulb
or
pop
lods
inc
in
mov
xor
xchg
aaa
scas
xchg
jp
jmp
mov
enter
fstpl
pop
or
aad
and
stos
test
scas
js
lock
cmp
xor
mov
push
aam
jnp
scas
and
bndldx
popf
xorb
ss
add
shll
lock
outsb
imul
test
dec
and
mov
pop
or
push
icebp
or
dec
push
jmp
das
sbb
jns
aaa
mull
hlt
movsl
pop
mov
sbb
and
xchg
addr16
fcmovnu
sub
inc
sub
imul
cmc
mov
mov
loopne
cmp
ficomps
dec
xor
push
insb
mov
mov
fs
jl
cmc
sahf
add
adc
sti
shrb
imul
jmp
rolb
sub
adc
mov
outsl
sbb
adc
movsl
sub
xchg
jge
adc
fdivl
dec
out
cs
bound
popf
push
or
aad
jge
sub
ud0
lret
test
cld
or
mov
or
cld
add
clc
xchg
cmp
mov
pop
int
out
dec
std
ret
jp
fisubl
push
movsb
pop
and
cmp
push
sbb
fidivs
fcmovu
add
in
shrl
rcll
sub
ficomps
and
push
push
lret
aad
pop
xor
push
cmpsl
mov
inc
ja
cli
dec
cwtl
inc
test
in
mov
incl
dec
cmp
loope
cltd
jg
fisubl
push
pushf
aad
mov
mov
jg
cmp
mov
jle
ret
pop
mov
mov
scas
xchg
jle
enter
mov
jg
js
mov
rclb
sti
mov
dec
test
pop
movsb
popa
movsl
mov
lret
cltd
cmpsb
dec
cmpsl
lods
setle
mov
psubsw
sbbb
lret
or
sub
int
outsl
fmull
rolb
push
cmc
sbb
cs
shll
jg
hlt
das
rorl
aad
dec
mov
into
xor
sub
mov
sbb
dec
shll
jmp
in
cmp
jno
jecxz
in
add
repz
xor
sbb
je
mov
je
div
or
lock
fdivs
loop
inc
jmp
add
jmp
dec
mov
insb
aad
insb
jne
mov
sbb
lods
pop
xorb
xor
pop
pop
jo
inc
test
ret
inc
mov
mov
add
mov
js
pusha
in
sub
xchg
outsl
lcall
push
scas
xchg
adc
or
imul
outsb
popa
cwtl
imul
xorl
bound
dec
fsubrs
shrb
cwtl
in
adc
xchg
jno
and
addr16
in
cmp
pop
mov
imulb
jb
pop
jle
cs
stc
pmulhuw
xchg
test
add
and
mov
hlt
pmaxsw
mov
pop
mov
fadds
push
in
jle
out
daa
jno
stos
scas
xchg
adc
pop
repz
cmp
cli
cld
outsl
inc
test
jg
lock
or
xchg
adc
xor
std
xchg
mov
sbb
xchg
mov
rorb
pop
pop
lods
xchg
cmp
adc
cmp
push
sbb
aad
add
inc
ljmp
adc
addb
decb
dec
rcl
fs
push
gs
pop
in
movsl
ja,pn
clc
lds
sahf
push
test
mov
push
iret
mov
mov
mov
inc
movsb
cmpb
loopne,pt
inc
mov
push
cmpsb
cld
xor
lds
popa
scas
sub
pop
hlt
inc
jecxz
dec
fbld
clc
sub
scas
cmp
mov
push
out
inc
gs
outsl
pushf
sbb
or
pop
cmp
pop
lods
jne
test
test
faddl
adc
in
sarl
int3
adc
movl
aas
fidivs
mov
int
das
rcl
stc
ficoml
pop
int3
daa
mov
push
dec
stos
add
pushf
jg
fcoms
cld
jg
notl
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
