and
mov
adc
out
xchg
jb
test
and
add
loopne
popa
cmc
test
in
ret
pop
jle
or
inc
addl
cmp
add
lock
dec
daa
sub
imul
test
insb
pop
hlt
inc
scas
push
test
dec
inc
sub
and
loopne
inc
test
inc
loope
mov
aaa
jno
jnp
imul
mov
xor
mov
stos
enter
fcmovu
dec
movsl
and
add
push
xlat
and
pop
nop
imul
mov
in
enter
es
dec
cmp
inc
mov
cltd
repz
sahf
jnp
out
out
jmp
call
push
arpl
inc
mov
push
test
xor
xlat
cmp
sbb
cltd
lahf
test
fs
pop
mov
pop
xor
and
push
or
mov
aaa
and
insb
shll
fdivr
push
sbb
out
rcrl
pop
sub
mov
pop
sub
jnp
aas
aad
scas
sbb
lds
adc
adc
insb
jbe
ljmp
xor
ja
sub
fistl
xlat
push
cli
ljmp
lods
ss
adc
push
inc
inc
arpl
call
xor
lods
xchg
xchg
push
lods
imul
in
sbb
stos
out
cwtl
jae
shlb
scas
add
sub
or
les
sbbl
jbe
nop
insl
inc
sbb
ds
push
mov
repz
stos
js
cmc
mov
nop
negl
sti
pop
inc
repnz
in
mov
ret
je
add
push
scas
inc
cli
int3
dec
cmp
cmp
dec
inc
xchg
xchg
movsb
sahf
jmp
inc
adc
andb
mov
jo
imul
je
mov
push
movsb
ds
fwait
dec
jl
pop
dec
into
xchg
stc
es
inc
mov
push
das
in
pop
mov
fldl
rcll
push
push
push
add
mov
mov
sbb
test
into
cmpsb
and
movsb
xor
nop
xchg
imul
jae
div
stc
out
or
mov
push
push
sbb
pop
or
jo
push
sarb
mov
jnp
cs
or
jb
ret
mov
pusha
filds
pop
sbb
notb
cmp
and
xor
dec
xchg
inc
sbb
popf
mov
sbb
adc
dec
add
cmp
adc
int
cmp
mov
xchg
push
push
cmpsb
push
dec
jecxz
dec
stos
sbb
cmp
mov
add
pop
xchg
imul
lcall
push
and
or
add
sbb
cltd
sbbl
addr16
scas
stc
test
mov
pusha
pop
shl
add
dec
mov
icebp
clc
outsb
outsl
mov
adc
adc
subl
mov
rcrl
or
add
dec
insb
jp
adc
mov
push
add
jp
loope
adc
mov
pop
stos
or
or
or
add
xchg
movsb
sbb
and
dec
push
mov
cmp
lret
lock
xchg
jns
je
mov
xchg
ss
mov
dec
cltd
imul
mov
test
jbe
pushf
or
imul
adc
dec
clc
sbb
add
scas
lods
push
addr16
add
imul
cmp
push
and
push
lods
pop
test
mov
out
push
fsubr
xlat
cmpsl
jne
cmc
cmc
mov
pop
cmp
pop
pop
jecxz
imul
cmpsb
adcl
aad
or
dec
jno
jg
das
xor
xor
inc
push
outsl
lods
mov
and
sbb
insb
dec
mov
jl
shrl
clc
fists
sub
pop
adc
leave
shll
cmpsl
dec
lods
jbe
test
nop
ljmp
adc
mov
dec
xor
jg
sub
idiv
add
sbb
or
and
repnz
mov
add
mov
adc
sub
pop
inc
dec
pop
add
cmpsb
mov
loop
outsb
xchg
pop
and
xchg
mov
adc
pop
imulb
push
and
popf
xor
iret
cmp
add
jg,pn
inc
push
and
pusha
xchg
and
cmpsl
jg
xchg
and
stos
std
adc
xor
fs
or
ret
test
shl
inc
lcall
mov
arpl
xchg
push
call
mov
cmp
fisttps
mov
dec
xchg
and
lret
lods
cmpsl
scas
mov
sbb
pop
cltd
test
pop
gs
or
mov
setae
or
sbb
jge
add
lret
fstps
xchg
repnz
movsl
fidivs
push
sahf
movsb
subb
mov
ret
arpl
insl
pop
push
xchg
add
je
les
fs
popl
ja
xchg
fists
roll
js
jne
dec
outsl
fsubrs
xorl
pop
mov
in
insl
jb
cmp
sbb
and
dec
mov
mov
mov
dec
mov
clc
gs
sbb
jl
sub
leave
lret
icebp
cli
repz
mov
push
cmp
outsl
movsl
mov
sbb
sbb
mov
daa
inc
pop
fsubrs
push
scas
and
aas
xorb
ficompl
add
lock
cmpsl
shr
sbb
out
stos
push
or
imul
jnp
loope
rorl
adc
mov
adc
out
pop
jns
push
test
mov
inc
lcall
test
and
xor
les
sub
add
call
cmp
adc
mov
push
sbb
int3
mov
das
pop
ds
fldt
ret
xchg
and
andl
pop
test
mov
aam
xor
and
pushf
push
mov
cs
movsl
adc
das
inc
imul
aam
xor
roll
std
dec
xchg
xlat
jne
outsb
and
aam
pop
es
mov
adc
mov
ret
daa
or
adc
call
lahf
adc
iret
xor
sbb
mov
dec
repz
lds
cmc
hlt
movsl
mull
dec
pop
mov
sbb
insb
mov
fisubl
cmp
mov
ljmp
lods
sbb
lods
xchg
aaa
jge
sub
mov
pop
cvtps2pi
push
shll
mov
js
or
inc
push
lret
cs
push
dec
outsl
cld
push
push
add
inc
push
dec
in
push
loop
xor
mov
cmp
mov
mov
sbbl
pop
xchg
into
addb
dec
addr16
jb
repnz
jb
mov
popl
sbb
push
cltd
pop
pop
roll
repz
rcrl
test
pop
xchg
mov
pop
imul
add
sarb
sub
add
stc
or
and
xor
xlat
xchg
add
cli
xchg
sbb
movsl
sahf
fcompl
neg
mov
in
sti
sub
iret
enter
mov
int
rol
and
out
mov
sbb
sbb
repz
mov
cs
in
mov
fs
mov
fmul
mov
mov
data16
test
fdivrs
cs
shl
push
in
xlat
lods
adc
sub
lret
repnz
xor
jle
xchg
sbb
dec
andb
mov
aam
or
xlat
cmp
add
lret
insb
pop
sub
push
fimuls
gs
lret
stc
pop
push
push
mov
xor
jmp
aas
inc
fwait
stos
sbb
adc
sti
bound
lods
pop
int3
testl
pop
jle
out
cltd
xchg
int
out
gs
in
icebp
aad
arpl
add
dec
negl
add
outsb
addb
or
add
test
sub
push
imul
cmpsb
imul
and
push
inc
inc
lea
pop
stc
cs
rorl
xchg
lret
stos
cmpsb
mov
sbb
enter
ds
das
cmp
call
out
mov
pop
mov
mov
out
mov
mov
sarb
sub
icebp
ds
push
repz
or
das
ret
inc
repnz
shlb
push
mov
ret
fmull
pop
out
shlb
lods
in
fbld
or
cmp
jno
mov
pop
ss
and
ror
jne
inc
mov
mov
mov
add
sbb
test
inc
lds
and
nop
fsubrs
dec
pop
in
xchg
sub
fsubrl
lods
adc
sbb
jns
jle
nop
negl
push
cltd
or
les
in
out
fcoms
outsb
xor
push
orb
cmp
xchg
scas
cwtl
or
fst
push
negb
mov
lcall
stos
cmpsb
push
or
push
sbb
or
loope
movsb
in
dec
or
dec
divb
or
push
mov
inc
lcall
pop
mov
ja
jg
xchg
cmp
inc
sbb
adc
aas
test
xor
sbb
shl
pop
mov
mov
nop
xorl
xchg
xor
imul
inc
inc
sub
xchg
mov
insl
outsl
in
push
hlt
cld
cmpsb
jl
inc
sahf
sub
ss
or
add
jno
push
gs
push
aad
xchg
stc
cmp
fwait
gs
data16
in
movsl
or
test
stc
das
inc
dec
sub
repz
lahf
adc
mov
xchg
testb
std
loope
sti
sahf
jmp
cld
aam
or
imul
xchg
pusha
inc
push
add
repz
mov
rorl
jbe
sub
mov
fldt
inc
fistpl
or
or
dec
lret
mov
movsb
push
mov
int3
push
lock
movsb
jmp
pusha
hlt
dec
inc
lods
mov
push
clc
lahf
shr
dec
mov
pop
ret
xlat
pusha
out
pop
jns
inc
and
inc
xchg
adc
inc
divl
lea
lea
mov
mov
dec
and
cmp
iret
movsl
jnp
enter
jmp
add
addr16
clc
pop
repz
push
sahf
inc
dec
jle
pop
xchg
dec
pop
mov
sbb
aaa
scas
or
cld
ficomps
mov
sahf
bound
xchg
aas
add
xchg
int3
pop
inc
push
repnz
daa
mov
in
or
sahf
or
xor
cmp
bound
jae
mov
push
xor
js
mov
ds
icebp
jle
outsb
sbb
and
inc
sbb
mov
stos
adc
pushl
mov
or
mov
inc
or
mul
push
nop
pop
adc
adc
rcrl
ja
pushf
lods
add
jmp
aam
jp
mov
mov
pusha
dec
ficomps
stos
push
movsb
imul
lods
cmp
out
popa
add
repz
aam
jno
aaa
jno
cmc
cmp
mov
pop
addl
mov
sub
inc
fsubrl
jecxz
test
sbb
lret
push
popa
adc
outsl
sbbl
xchg
jp
cwtl
mov
xchg
add
sub
fcoml
and
rorl
aas
mov
add
out
clc
adc
repz
cmp
popa
js
cmpsl
iret
and
inc
dec
or
enter
inc
jno
test
test
mov
add
mov
shll
nop
xor
lds
inc
mov
gs
test
xchg
inc
aas
xchg
push
ret
test
add
jge
xchg
and
dec
inc
int3
cmp
in
lds
sub
scas
adcb
hlt
xor
cmp
js
jno
inc
cwtl
mov
mov
repz
adc
mov
lret
mov
lcall
movsb
iret
adc
fcoms
jl
nop
sbb
push
adc
cs
xlat
mov
add
mov
xor
daa
ss
test
and
scas
adc
mov
hlt
in
pop
jle
ljmp
fs
call
pop
push
clc
xor
push
xchg
xlat
pop
inc
or
movsl
addr16
pop
ficomps
ja
lahf
cmp
js
pusha
inc
scas
jmp
popa
mov
pusha
sbb
push
pop
or
enter
jnp
sub
pop
xorl
adc
outsb
out
iret
jns
in
inc
lds
icebp
mov
bound
mov
xchg
and
jno
jmp
fcomp
sbb
aas
icebp
push
es
push
mov
in
cmp
and
inc
sub
seto
push
or
movsl
jmp
test
push
into
ja
daa
lcall
mov
xchg
nop
cmp
sbb
cmc
stos
pop
call
mov
hlt
push
in
dec
jmp
dec
cmp
push
faddp
mov
xlat
or
das
ret
pop
sti
push
add
rclb
mov
test
test
daa
aad
lahf
push
jnp
cmp
in
icebp
and
pop
and
add
scas
popa
jmp
xchg
push
cmp
jmp
and
sahf
std
add
stos
repz
pop
lahf
mov
shll
mov
xor
mov
dec
scas
loope
xchg
pop
xchg
sbb
popa
cmp
bound
push
add
sub
ret
add
cmp
push
repz
fdivrs
enter
xor
push
loop
shll
fidivrl
cmpsb
mov
dec
es
xor
pop
sbb
mov
mulb
xchg
mov
arpl
or
fldl
test
mov
adc
inc
das
sahf
ds
rcrl
pop
stc
cmovno
jne
jo
lds
adc
call
dec
scas
mov
adc
xchg
fnstcw
sub
ds
mov
sub
scas
sbb
pop
sub
cmpsl
nop
in
stc
data16
jae
sti
test
inc
jno
out
pop
mov
in
mov
add
mul
mov
xor
mov
fsubs
pop
adc
mov
pushf
dec
xchg
add
aam
dec
ja
push
add
scas
cli
out
sbb
leave
jnp
cmpsl
sub
gs
cmp
sti
lds
pop
mov
hlt
mov
mov
xchg
out
jbe
sti
jge
adc
xchg
mov
mov
adc
scas
into
push
jge
xchg
xor
adc
xor
insl
pop
in
push
test
bound
xchg
sub
cmpsb
dec
inc
outsb
mov
xor
push
sbb
add
jp
lods
or
adc
in
punpckhdq
mov
pop
les
mov
adc
lcall
cmp
jecxz
ds
push
xchg
idiv
add
loop
stc
stos
scas
dec
int3
push
and
leave
xchg
mov
xchg
jg
xlat
ja
shr
stc
cmp
cs
cmp
iret
sbb
jns
mov
cmp
and
sti
mov
sub
cmp
adc
xor
inc
test
sbb
lea
xor
jno
sub
and
pop
mov
pop
int3
fs
cli
cli
inc
pop
out
leave
lock
mov
xor
fimuls
mov
cmp
lea
test
adc
out
sub
fiaddl
mov
std
cmp
sbb
movsl
push
fstpt
jmp
movd
shl
sahf
ljmp
cmp
mov
arpl
mov
lods
cmc
sbb
jnp
sbb
sub
inc
jp
xlat
into
jb
xchg
daa
sub
xchg
cwtl
push
push
xchg
int3
repnz
push
push
lods
in
mov
jl
inc
fdivs
cmpsl
jmp
fstpl
popf
inc
sti
cltd
loopne
ljmp
pop
loope
clc
dec
mov
sbb
jno
inc
fimull
scas
jnp
loopne
sti
pop
dec
jae
idivb
fnstcw
dec
jb
jns
std
or
pop
pop
sarb
in
ljmp
mov
mov
xlat
shlb
in
cmp
push
xor
aad
icebp
pop
cs
fsub
inc
mov
es
insb
mov
loopne
cld
daa
xor
je
loopne
jmp
sti
lret
cmpsb
dec
test
xchg
loopne
cmpsl
mov
gs
imull
jge
mov
std
xchg
gs
in
pusha
push
mov
mov
in
inc
hlt
aad
push
jmp
push
mov
fsqrt
cmc
cs
incl
jp
pop
imul
sub
aaa
xchg
pop
sub
cmpsl
out
or
scas
je
fisttpl
jb
arpl
faddp
jg
ss
sbb
jle
lret
dec
inc
sbb
daa
mov
nop
in
push
ja
loopne
sbb
xchg
ds
mov
mov
aas
ja
jo
adc
cmpsl
jmp
jmp
cmp
dec
push
stos
pusha
pop
sub
aas
and
iret
sub
aas
jp
iret
push
jecxz
inc
fs
repz
push
call
mov
mov
pushf
scas
add
sub
out
mov
xchg
pusha
stos
add
pop
sub
adc
mov
test
bound
xchg
mov
mov
and
fistl
decb
negl
mov
pop
inc
imul
sbb
gs
xlat
jp,pt
inc
rcl
mov
mov
ljmp
in
mov
in
ss
pop
push
mov
lods
ss
arpl
pop
test
sbb
adc
pop
shrl
pop
lods
cwtl
dec
push
or
stos
push
push
add
cmp
lds
pop
jbe
or
bound
xchg
hlt
jmp
xor
xchg
adc
pusha
mov
mov
push
sub
cmpsl
popa
fiadds
cmp
cltd
lods
jecxz
dec
sbb
jge
mov
into
lahf
cmp
push
push
das
inc
negb
movsb
pop
dec
inc
mov
iret
pop
in
mov
dec
xchg
or
cltd
jmp
cmpb
add
nop
in
jbe
icebp
lahf
xchg
inc
or
fcompl
inc
sub
and
test
push
inc
jmp
cmp
sub
inc
dec
and
data16
lret
int3
lea
dec
xchg
stos
inc
call
pop
inc
in
sbb
sub
shll
jge
or
xor
xchg
push
sub
int3
in
rcrl
dec
xchg
mov
dec
adc
cmpsb
sub
and
add
ds
mov
mov
mov
xchg
rolb
out
or
xor
push
lret
into
mov
inc
or
inc
and
movsb
jmp
popf
add
into
xchg
ret
mov
sahf
je
cmp
data16
popa
outsb
movsl
shll
xlat
mov
inc
and
pop
and
or
aaa
mov
les
sub
inc
push
cmc
mov
cmpsb
and
movsb
adc
sub
add
cmp
xor
mov
incl
mov
inc
pushl
enter
mov
push
pusha
rorl
mov
adc
cmp
pop
das
bswap
test
xchg
mov
loope
jge
fimuls
test
daa
out
xchg
and
add
pop
orl
xchg
ret
mov
inc
push
fiaddl
repz
rclb
push
jnp
push
dec
cmp
std
dec
sub
fbld
mov
rcll
testb
pop
out
cmp
ss
and
dec
xchg
jns
inc
outsb
add
xlat
aad
dec
aam
dec
shll
cmpsb
sub
outsl
push
jns
fwait
mov
inc
jg
sahf
aad
call
lods
loop
pop
mov
std
stc
daa
imul
lea
pop
iret
sbb
xorl
and
dec
and
xchg
push
int3
sub
jecxz
dec
loope
int3
je
ret
rcll
xchg
add
pop
cmpb
dec
inc
push
out
loop
adc
mov
adc
sbb
dec
push
repnz
sbb
pop
mov
gs
and
test
mov
jns
jge
aas
dec
adc
mov
jno
fistpll
push
jmp
mov
cli
jns
scas
lret
sub
scas
inc
and
cmpsb
clc
cmpsl
sub
sub
mov
lods
cmpsl
pop
stos
mov
jg
loop
sub
mov
or
stc
cltd
jle
lods
lcall
pop
jns
test
popa
rcrb
sub
movsl
cld
push
roll
push
into
pop
stos
aad
popf
jb
add
xor
lcall
dec
sbb
outsl
test
mov
inc
sarb
std
add
loopne
lea
shlb
cmp
inc
or
pop
jmp
inc
into
fs
jl
cmp
movsb
outsb
int
mov
pushf
movsl
dec
fidivrs
xchg
push
out
or
jge
shr
call
in
sub
sub
in
lods
and
into
enter
imul
ret
dec
test
push
inc
jmp
cld
mov
pop
loop
push
xchg
cmpl
repz
shrl
push
xchg
stc
add
add
mov
imul
lods
mov
or
or
pop
out
xchg
nop
stc
sub
mov
lock
mov
leave
stos
in
scas
dec
nop
dec
clc
push
ja
hlt
mov
sti
stos
or
or
sub
icebp
xchg
aas
inc
jno
adc
out
mov
test
cli
xchg
xor
sbb
and
test
ja
jbe
icebp
push
es
mov
and
cltd
cmp
adc
sbb
dec
sub
adc
or
mov
mov
dec
stos
call
pop
icebp
mov
mov
pop
xchg
xor
loop,pn
popw
pusha
push
mov
pop
push
test
aaa
xchg
jb
sub
add
jmp
mov
cmp
sub
sub
push
lahf
sbb
jae
mov
and
pop
mov
pop
es
mov
std
leave
add
pop
in
jbe
scas
ret
shlb
sub
stos
jns
std
push
clc
test
out
lret
push
hlt
shl
das
jmp
xor
xor
and
imul
push
cli
jmp
cli
jle
frstor
sub
inc
mov
sbb
adc
loope
pop
std
sbbb
push
mov
hlt
pop
xchg
mov
mov
lret
xchg
mov
jmp
outsl
adc
push
mov
aam
inc
push
cmp
or
movsl
mov
cmpsb
icebp
mov
push
outsb
push
rcrb
jp
bound
jg
cwtl
repz
jns
pop
jg
clc
inc
rcrb
inc
out
cltd
cmc
inc
jns
popl
call
mov
xrelease
mov
rcr
dec
outsb
mov
ljmp
mov
cmc
cmp
fstps
sub
cs
cmp
inc
enter
push
outsb
sbb
lret
inc
cmc
mov
jne
or
mov
fbstp
sbb
or
addr16
mov
add
xchg
iret
mov
add
in
jnp
in
iret
xor
imul
sbbb
sub
add
inc
lods
pusha
mov
mov
jle
sbb
sub
mov
add
inc
aaa
cltd
jne
fisubrs
adc
movsl
or
xchg
cmp
xchg
hlt
sbb
aad
sub
and
lret
clc
push
and
push
jnp
out
mov
outsb
fucomp
cmp
js
add
dec
adcl
into
test
jae
cmp
in
adcl
xchg
dec
mov
ret
call
scas
lret
lods
jne
ds
cwtl
cwtl
xor
les
sub
test
iret
inc
movsl
ret
push
cmp
sbb
lret
and
pop
inc
sub
mov
popa
cmp
mov
xor
mov
pop
rolb
sbb
insl
and
andl
movntq
cmp
mov
and
test
lds
pop
int
xor
in
dec
sub
jnp
inc
iret
rcrl
iret
dec
pop
dec
mov
outsl
xchg
popf
mov
ds
push
out
dec
cmpsl
clc
test
jmp
lahf
call
mov
nop
pop
or
mov
push
cmp
or
popa
lcall
imul
insb
jae
pop
leave
out
pop
mov
pop
mov
popa
sub
jo
cmc
sub
fwait
mov
pop
mov
lds
loopne
les
cmpsb
mov
loop
cmp
mov
popf
cmp
xchg
and
jo
addr16
xchg
ret
int
cmc
out
mov
cmp
hlt
mov
adc
dec
int
addb
mov
pop
mov
or
out
test
mov
shr
out
mov
xor
cmp
shlb
jle
sbb
xor
or
jg
popf
lea
jle
call
mov
jno
xor
test
sbb
mov
sahf
arpl
ja
inc
and
push
out
fs
cltd
in
mov
aam
movsl
xor
mov
jmp
add
lods
jecxz
clc
dec
stc
sbbl
mov
sbb
in
ret
add
nop
mov
mov
inc
cmp
mov
fsubrl
ret
dec
lcall
dec
push
out
ret
mov
leave
loop
xor
inc
pop
xor
repz
pop
or
imulb
sub
jae
aaa
pop
fistps
dec
out
push
xor
aaa
ret
mov
jmp
cmp
adc
jnp
mov
ds
out
push
cmp
addr16
jbe
dec
and
jmp
mov
into
imul
adc
out
fwait
std
mov
xchg
fld1
dec
pop
mov
fldenv
dec
je
dec
xchg
in
mov
push
add
jp
in
out
div
popf
cmp
push
lods
mov
ss
orb
out
pusha
xchg
adc
xchg
cmpb
push
out
adc
movsb
dec
les
mov
and
rcrb
jecxz
sub
lock
imul
xchg
adc
adc
insb
pop
lock
cwtl
fdivs
in
sbb
xchg
jne
mov
int
sbb
adc
bound
mov
std
cmp
lahf
sti
std
into
inc
insb
addr16
xchg
gs
ds
push
xor
out
out
pop
or
lahf
out
hlt
dec
add
pop
ret
rolb
call
adcl
lahf
pop
mov
push
lahf
lahf
jb
xchg
fldl
cmp
subb
fcmovnb
cmp
repz
push
and
je
aad
add
push
push
andl
and
fimull
pop
fstpl
sub
dec
js
jecxz
and
sub
lret
mov
mov
or
test
mov
mov
jg
repnz
cmc
cld
adc
cmpsl
jp
lea
pop
adc
add
in
mov
sahf
or
jno
daa
push
fnstenv
sub
mov
out
or
xlat
dec
cld
loopne
push
sub
or
lea
mov
mov
inc
push
sub
push
pop
mov
xchg
pop
sbb
and
push
pop
fsubrs
sbbl
pop
push
out
mov
and
adc
xchg
in
jle
insb
sar
repz
lret
mov
xor
sub
jg
rorl
push
push
and
call
or
mov
je
loop
je
mov
xchg
clc
add
sbb
jmp
adc
xor
cmp
and
out
xchg
out
add
inc
mov
mov
stc
fs
js
cltd
adcb
aas
jp
cmp
jns
test
fucomip
outsb
xor
push
mov
inc
pop
ret
mov
adcl
lods
push
sub
int
loope,pn
ljmp
mov
mov
push
pop
in
stos
adc
andl
adc
mov
es
repnz
arpl
ret
pop
dec
lcall
sahf
es
cmpsb
dec
pop
jecxz
inc
imul
ficoms
bndldx
sub
aad
sub
sar
xor
push
ja
dec
xchg
in
outsl
push
adc
dec
jl
adc
inc
inc
stc
and
enter
lock
in
jb
xor
inc
lcall
or
js
add
and
mov
mov
xchg
std
cli
test
mov
mov
movsb
outsb
ja
xlat
and
inc
cmp
addr16
vpmuludq
dec
mov
lds
mov
and
jle
rclb
xchg
jmp
dec
fs
clc
jne
dec
in
push
roll
sarl
mov
push
aaa
lcall
xor
adc
lcall
push
clc
mov
mov
dec
jno
jae
mov
pop
sbb
pop
loope
push
cmc
xor
cmpsb
inc
jl
sub
inc
or
cmp
sbb
push
pop
push
loope
fimull
adc
movsb
ret
flds
cltd
pop
push
inc
inc
xchg
adc
mov
jecxz
std
repnz
pop
cmp
and
adc
sub
jo
and
sub
adc
in
sbb
rclb
test
fsubs
stos
ret
sub
pop
aaa
mov
cwtl
sbb
mov
sub
jbe
adc
sbb
out
leave
jns
mov
jg
xchg
imull
xor
or
mov
push
inc
jl
out
and
test
xchg
mov
or
or
pop
pop
loop
lea
cltd
sti
push
mov
imul
mov
fcomp
nop
je
fsubs
dec
push
lret
jno
sti
jo
popf
stos
popa
dec
sbb
mov
and
mov
test
lods
xchg
ret
test
aaa
call
test
or
dec
icebp
test
das
xor
and
xor
arpl
or
dec
hlt
and
and
and
cwtl
and
inc
or
xchg
pop
jno
push
imul
mov
or
fwait
push
enter
pop
pop
mov
dec
loope
movsl
sbbb
pushl
dec
adc
add
jnp
mov
mov
xchg
popl
mov
inc
outsl
mov
subl
test
clc
cmpl
xor
pop
adc
inc
jbe
mov
mov
aas
xchg
sar
mov
jecxz
inc
adc
out
iret
xchg
movsb
movsl
xor
dec
addl
ds
aas
cld
push
mov
mov
push
dec
int3
sub
pop
in
out
aad
popf
fmull
add
pop
adc
rolb
icebp
ds
sub
mov
sbb
add
push
jae
stos
or
inc
popa
sub
imul
dec
mov
dec
ret
ljmp
repnz
mov
hlt
mov
sub
xor
rolb
and
in
cmpsl
mov
dec
ja
lret
lret
ss
outsl
mov
or
shlb
movntq
add
dec
fwait
mov
daa
pop
cwtl
push
rolb
pop
aam
ret
xor
pop
or
jle
push
in
stos
jno
cs
xchg
dec
inc
cwtl
dec
inc
and
cmp
sub
inc
cmc
fmull
cwtl
xor
push
insl
and
fstl
xlat
adcl
dec
sbb
mov
jne
pop
add
cmc
arpl
xor
insb
sahf
mov
mov
leave
xchg
adc
adc
xchg
dec
mov
cltd
popf
push
mov
movsb
xor
or
or
mov
out
mov
xor
inc
stc
or
mov
cmp
ja
adc
mov
pop
sub
fwait
pop
pop
mov
test
xchg
fstl
and
xchg
xlat
or
pop
xchg
lret
mov
xor
push
loope
add
dec
mov
enter
push
popa
xchg
in
mov
push
gs
ret
add
and
testb
xor
mov
push
lahf
mov
out
aam
es
pushf
sbb
adc
insb
repnz
push
xor
sub
mov
xor
mov
loop
icebp
cmp
add
xchg
fidivs
mov
fsts
xchg
pop
clc
xchg
or
pop
lret
lea
fwait
jno
mov
xor
inc
mov
push
outsl
dec
mov
shl
mov
mov
sub
jne
inc
aaa
or
add
push
mov
pop
rolb
adc
adc
mov
repnz
and
iret
add
imul
mov
mov
aam
push
xor
test
cmp
int
mov
les
adc
cmc
mov
popf
xchg
pop
mov
sub
fistpl
stc
mov
mov
int3
cmp
lods
and
cltd
adc
sahf
fwait
fwait
push
xor
mov
sub
sti
loope
mov
mov
js
mov
xchg
imul
and
jmp
pop
iret
jo
movsb
push
movl
mov
pop
sub
mov
inc
outsl
sub
movsb
inc
push
cltd
or
aaa
mov
mov
scas
push
cwtl
mov
dec
inc
fstl
fsubrs
adc
sub
push
cmp
inc
mov
jecxz
aas
or
jns
xchg
pushf
repnz
push
jp
call
lcall
ret
cltd
pop
or
fldlg2
jg
mov
dec
pop
push
cmp
ljmp
dec
inc
aas
mov
jmp
test
dec
jmp
fld
daa
mov
decb
xor
lret
jle
cmp
js
cmp
lahf
pop
xor
leave
and
or
and
add
fnstenv
je
lock
in
addl
mov
jmp
pusha
jle
test
lret
das
inc
ret
mov
mov
dec
ds
or
jns
mov
and
cmpsl
call
sti
or
aam
inc
mov
imul
mov
add
in
iret
lods
adc
adc
push
dec
pop
xchg
lods
mov
loope
dec
scas
cmpsl
js
fldt
pop
in
push
in
lea
shrl
dec
pop
push
insl
inc
push
outsb
push
sbb
mov
aam
stos
cli
or
mov
icebp
mov
fs
push
xchg
or
push
enter
or
xchg
add
push
dec
test
xchg
jns
cmp
fiaddl
out
xbegin
pop
pop
sub
movsb
cmp
jp
out
cli
movsb
jmp
lods
adc
or
ljmp
xor
imul
push
xchg
inc
test
and
or
adcl
inc
push
adc
xchg
movsl
stos
dec
and
test
lret
push
inc
je
leave
lea
push
fildl
adc
cmp
call
addl
outsl
jg
scas
jb
stc
mov
and
pop
push
movsl
mov
rorb
and
and
xor
les
adc
adcb
nop
cs
aas
repz
mov
out
jle
loope
cld
fucomip
jmp
gs
cmp
mov
or
ret
mov
repz
cmp
ja
cltd
icebp
hlt
aad
sub
push
mov
mov
not
pop
adc
or
je
andl
testl
fs
ret
adc
fcoml
dec
sbb
jl
push
cmp
in
mov
mov
filds
xor
fimuls
push
iret
in
push
jmp
jne
adc
mov
or
dec
add
ja
xchg
mov
adc
push
add
jne
out
aad
imul
xor
cmp
push
mov
idivb
adc
or
pop
sbb
xor
shrb
rolb
lods
sub
dec
shll
in
xor
sbb
fdivs
mov
and
gs
jl
in
and
mov
cmp
mov
cmp
sbb
mov
iret
mov
or
pusha
cmp
shll
or
mov
aam
inc
cmp
ds
sub
lods
and
push
xor
dec
daa
or
test
pop
pop
ret
sub
mov
cs
sarl
outsb
popa
bound
inc
pushf
fs
mov
popa
add
or
out
call
sbb
popa
mov
xchg
les
insb
popf
sub
mov
and
jge
cmp
hlt
out
in
and
inc
fbstp
dec
aam
idivb
repnz
cltd
ds
lret
xor
dec
pop
aas
fiaddl
adc
ljmp
push
mov
push
gs
xchg
lret
inc
clc
out
jp
xor
loop
andb
les
dec
sbb
int
arpl
add
ficomps
pushf
mov
pop
lcall
negl
push
push
sub
add
lds
unpckhps
add
dec
xchg
push
rclb
sub
insb
mov
mov
je
and
das
int
mov
push
lret
add
dec
pop
outsl
int3
xchg
in
mov
jnp
sbb
leave
movsb
or
iret
inc
xor
push
dec
movsl
inc
cltd
pop
pop
shrl
call
gs
nop
cmpsl
test
pop
pop
jle
cwtl
ret
stos
adc
fsubrp
xchg
jnp
lds
sarl
sti
sub
addb
testl
mov
push
cwtl
aad
sbb
test
jae
jae
mov
mov
pop
movsl
cmp
fsubl
push
push
mov
pusha
push
mov
insl
mov
cmp
icebp
gs
jle
pop
mov
dec
bound
cmp
fisubrs
cmc
scas
js
into
aad
mov
sbb
jo
jg
aaa
inc
xchg
sub
repz
mov
mov
ffree
push
loope
jns
lds
dec
jnp
sub
dec
out
out
or
pusha
push
xlat
xlat
mov
or
scas
and
jns
pop
insl
std
inc
add
stc
xchg
jns
clc
jb
fs
popf
fucomi
pop
stos
subb
out
jns
aam
shll
mov
and
sti
xor
mov
inc
push
sbb
and
inc
iret
js
js
cmc
mov
cmp
lret
push
cli
cli
ss
sub
push
scas
lock
test
inc
leave
fs
mov
xor
sub
mov
aad
sahf
xor
push
cmp
movsb
xor
jp
jns
cmp
push
mov
imul
jecxz
mov
mov
mov
push
popa
or
iret
jp
insl
loope
pop
repnz
jnp
loope
leave
mov
and
sbb
out
pop
lea
or
insl
or
lahf
mov
fmul
idiv
scas
mov
fdivl
cmp
xor
push
inc
push
notl
cld
popa
fwait
jo
xchg
movsb
dec
or
cmp
jg
les
mov
jg
ss
jne
out
ljmp
fisubl
fsubl
sbb
mov
mov
cmp
adc
inc
inc
dec
or
push
mov
addl
cmpsl
cmp
pop
loope
and
and
adc
std
mov
addr16
in
mov
cmp
cmp
cmp
and
mov
xlat
inc
mov
push
lds
sti
loop
push
imul
and
add
cmpsl
addr16
andl
xor
lcall
sub
enter
lahf
jns
jg
ret
push
in
sbb
sbb
jo
xor
pop
mov
gs
mov
loopne
mov
lea
js
jmp
jno
xor
fisttpll
sbb
dec
cmc
daa
fwait
sub
sub
ficompl
enter
lods
fmull
cli
and
std
sbb
stc
cmc
mov
add
mov
jnp
shll
jp
mov
add
fmul
lds
jge
add
mov
data16
dec
lahf
xor
xchg
mov
add
ljmp
adc
sbb
push
push
xchg
imul
pop
sub
enter
dec
and
jmp
adc
scas
dec
pop
or
cli
fldt
lea
push
iret
outsb
scas
in
cltd
xchg
inc
mov
repz
sbb
loop
mov
insl
add
stos
dec
add
inc
test
xor
sub
shl
loopne
and
loopne
scas
cmp
aam
push
lds
and
or
shrb
xlat
ljmp
js
cmp
jb
push
dec
push
ret
ret
push
and
lret
dec
mov
pop
stos
lock
lds
dec
dec
lods
mov
sarb
popl
stos
pop
movsl
adc
mov
push
mov
dec
in
add
ss
js
push
add
sarl
add
test
in
into
push
pusha
mov
mov
pusha
push
cmp
ror
shlb
sbb
adc
pop
add
adc
mov
dec
adc
cmp
xorb
dec
add
cwtl
sbbb
mov
add
xor
sbb
push
sbb
fstpt
lods
mov
inc
ficompl
adc
call
cmp
mov
and
push
add
add
or
pop
inc
rcrb
sbbl
add
or
or
mov
inc
add
sub
daa
add
mov
or
inc
and
add
add
push
shrl
adc
ffreep
pushf
adc
mov
dec
adc
cmp
xorb
dec
add
cwtl
sbbb
mov
add
xor
sbb
cmp
pusha
add
pop
shrb
pop
sbbl
cmp
push
dec
sub
or
pop
ret
add
cmpb
addl
mov
ror
mov
add
inc
sbb
shlb
pusha
dec
inc
sub
sbbb
add
sub
xchg
fcompl
cmp
pusha
add
pop
shrb
pop
sbbl
cmp
push
dec
sub
or
pop
ret
add
cmpb
addl
mov
rorl
sub
adc
cmp
and
add
dec
or
cmp
push
cmp
sub
sbb
sub
imul
xchg
jl
out
sbb
imul
in
push
sub
push
mov
cltd
int3
fidivs
in
mov
and
add
insl
dec
jnp
and
ret
ret
loop
add
fsubs
mov
jecxz
outsb
xchg
push
ds
clc
loopne
cld
push
sbb
ljmp
mov
stos
lods
push
imul
or
and
pop
mov
xchg
push
or
adc
in
jg
dec
adc
xchg
ret
sahf
push
iret
adc
loop
fidivrl
lods
daa
jl
gs
lcall
jg
sbb
ds
and
xchg
test
shll
movsb
fnstcw
mov
cmp
loop
imul
push
daa
sub
js
xchg
fisubrs
push
push
mov
mov
jnp
data16
test
or
test
mov
xchg
mov
ljmp
sti
std
pop
sub
inc
inc
inc
mov
sub
out
cld
push
sti
mov
jne
test
jmp
loopne
push
or
jp
xchg
xchg
ret
leave
pop
xor
push
adc
inc
faddl
sbb
int3
xor
mov
cmp
mov
lock
iret
add
mov
roll
call
cs
jae
mov
in
or
and
fcomps
pushf
movd
shrb
mov
push
pop
sbb
fcoml
lock
out
stc
add
in
ret
fiaddl
mov
add
push
mov
add
pop
add
push
and
ror
mov
push
mov
mov
sub
repnz
in
icebp
popa
cmp
lret
addr16
in
cmp
sub
call
xlat
pushf
daa
dec
test
js
pop
fptan
adc
lds
xchg
div
test
out
test
cmpsl
cld
add
call
mov
and
popf
xor
mov
sub
aad
rorb
xchg
push
fisttpll
mov
cmpsl
push
stos
scas
cs
jle
ss
icebp
and
cmp
test
add
scas
inc
aaa
inc
lret
sbb
test
lcall
sub
mov
testb
jb
roll
push
push
out
cs
sbb
sub
addr16
test
iret
inc
adc
lea
jo
daa
imul
rcl
adc
mov
add
mov
cmpsb
cmp
in
xorl
cmp
lods
inc
cmp
mov
fnstcw
mov
pop
mov
out
popl
int
mov
xchg
lds
mov
dec
imul
jno
rol
sub
mov
in
popf
mov
fidivrl
pop
xchg
ds
adc
cmp
idivl
jge
in
mov
and
jae
dec
dec
sub
push
mov
cmc
lret
in
ret
pushf
nop
pop
aas
sub
imul
std
test
sbb
in
icebp
xchg
sub
or
iret
arpl
push
aad
push
pop
cmp
insb
loop
test
xchg
cmp
push
aam
test
ja
stos
inc
inc
jbe
push
stos
arpl
sub
fidivrs
sbb
divl
sub
adc
jbe
mov
mov
cld
rsm
mov
es
cwtl
mov
cmp
jle
jns
or
mov
xchg
sarb
sbb
inc
movsw
lods
lods
inc
sub
mov
fisttpl
outsb
xchg
jo
repz
stos
pop
push
sub
pop
sbb
cmp
in
push
sarl
and
xchg
faddl
xchg
push
call
mov
mov
cs
rol
mov
xchg
jb
jl
mov
cli
jbe
cmp
lret
gs
hlt
insb
test
jbe
mov
negl
pop
mov
popa
test
aam
sbb
outsb
push
mov
mov
ds
lret
and
mov
xchg
xchg
mov
jmp
inc
xchg
insl
outsb
push
cwtl
sbb
shrb
add
lret
scas
dec
xor
xchg
mov
push
loopne
xchg
push
sub
ds
movsb
mov
mov
mov
xchg
push
pop
mov
adc
leave
or
pop
and
lods
inc
or
repz
jge
or
mov
dec
ljmp
daa
xchg
push
sub
repz
int
lods
push
mov
lods
jge
and
repnz
xor
mov
mov
faddp
sbb
lods
lret
arpl
fbld
xchg
loope
mov
jae
mov
or
jae
daa
aaa
mov
imul
ljmp
inc
xor
xchg
mov
mov
cmpsl
out
adcl
jne
mov
xchg
test
repz
push
or
scas
adc
aas
daa
inc
cmp
movsb
pushf
fsubrs
cmp
fldenv
pusha
lea
pop
mov
ds
rorb
cmp
in
adc
fmul
mov
mov
aam
scas
inc
xchg
cmp
mov
or
pop
or
std
movsb
nop
dec
outsl
int
outsb
int
add
frstor
mov
dec
addr16
je
pop
push
leave
jae
out
pop
mov
and
test
jmp
xlat
das
pop
stos
mov
test
or
aad
inc
sbb
sub
ds
out
jl
cmpsb
push
js
jne
push
lcall
add
cmp
xor
idivb
loope
insb
cmpsb
mov
popa
inc
xor
xor
xchg
mov
or
mov
cmp
push
cmp
xlat
xor
lret
xor
lods
movb
bound
scas
mov
dec
xchg
iret
and
imul
repnz
lret
int3
xor
pop
jp
sti
fwait
pushf
cld
inc
push
arpl
cmpl
jle
and
dec
cld
adcb
mov
aam
lret
outsb
arpl
lcall
cmpsl
cmp
mov
adc
ret
orl
cmc
rol
je
push
bound
ror
push
push
mov
bound
sub
mov
xchg
daa
cwtl
std
in
out
pop
dec
xchg
xchg
mov
sub
xchg
dec
les
or
adc
fmull
gs
loope
xlat
cltd
push
fidivl
fdivrp
sarb
leave
fistl
aaa
add
mov
pop
sub
insb
popa
lcall
mov
jb
popa
movl
stos
enter
idivl
lds
add
adc
bound
sbb
push
xchg
or
test
dec
scas
mov
inc
add
xchg
js
sbb
movsl
shll
pop
cmp
out
dec
cltd
pop
int
fs
mov
mov
outsl
dec
fwait
pop
sub
push
cltd
ret
jns
jnp
fisubrs
jae
inc
inc
stc
adc
fisttpll
push
leave
pushf
dec
xor
xchg
and
stc
push
mov
int3
mov
es
xchg
clc
sbb
pop
push
loop
mov
mov
fs
cli
testb
popf
stos
dec
adc
mov
ret
dec
pop
push
ror
pop
dec
sti
imul
xchg
sbb
cli
dec
push
pop
xchg
das
ja,pn
pop
fbstp
in
scas
pop
xor
jmp
mov
pop
mov
cmp
pop
enter
sbb
sbb
scas
jno
xchg
std
xchg
int3
scas
jecxz
mov
fnclex
xchg
cmp
aad
insl
add
jle
xchg
jae
and
jl
repz
jge
fidivl
and
dec
jmp
xlat
stos
ret
xchg
stc
jnp
cwtl
jb
xchg
push
mov
fmuls
jne
jno
ficoml
rcrb
mov
dec
inc
or
int
inc
xchg
inc
push
push
frstor
inc
add
es
dec
sbb
daa
pop
pop
or
lods
adcl
ljmp
aad
mov
inc
and
stos
mov
cmpsl
push
push
xlat
pop
jbe
int3
pop
mov
mov
push
test
add
jecxz
es
sbb
test
mov
movb
inc
cmpsl
push
push
je
aaa
lock
arpl
notb
addr16
xchg
ja
pop
cmp
in
xchg
mov
xchg
pop
dec
adc
sub
sbb
or
scas
inc
ljmp
push
stos
mov
xor
popa
sub
mov
and
lock
mov
aas
cmp
mov
loop
pop
xor
xchg
xor
push
orb
ss
scas
inc
js
pop
jmp
sahf
xor
jecxz
mov
sahf
ss
pop
lret
mov
int
fidivs
sub
pop
mov
mov
mov
bound
fdivs
mov
mov
mulb
pop
mov
inc
daa
shll
push
jnp
mov
inc
dec
into
sbb
fcompl
cmpsb
fwait
xchg
out
jle
clc
or
jge
test
int3
mov
mov
ret
loop
jge
fcmovb
or
add
leave
in
enter
bnd
push
ja
inc
xor
imul
rcrl
inc
cmp
pop
rcrl
cld
jl
jnp
in
rolb
out
mov
adc
xchg
pushf
iret
sub
out
lea
xlat
mov
mul
xor
dec
pop
imul
mov
notl
insb
popf
popa
js
adc
xchg
leave
xor
push
clc
jecxz
xchg
inc
jnp
push
mov
in
push
sub
push
fidivl
loopne
dec
inc
adc
fdivr
pushf
jle
mov
jp
fsubr
sub
ret
or
out
pop
insb
movsb
out
fistpl
popf
and
out
dec
out
out
fwait
pop
xchg
mov
xchg
stos
lods
imul
mov
leave
jle
or
and
push
pop
movsb
inc
mov
mov
popf
je
insb
pop
xor
xchg
push
into
inc
fwait
push
outsb
xor
dec
fsubs
popa
rorb
sub
mov
and
push
pop
adc
inc
sub
loope
out
xor
lret
lock
data16
jl
les
test
jle
lret
lret
stc
subl
daa
sub
mov
ljmp
xor
clc
pop
test
gs
cld
repnz
cmp
lock
insb
ja
push
leave
push
stos
or
movsl
ret
or
jo
lds
mov
stc
add
dec
pop
pop
jmp
push
cltd
mov
or
fldcw
sbb
insb
sub
data16
js
ja
clc
jmp
or
cmpsb
loope
and
mov
icebp
mov
inc
cli
xor
sub
aaa
inc
xor
and
out
or
jne
cwtl
test
dec
xchg
cmpsl
jbe
shll
cs
addr16
xlat
mull
mov
mov
inc
fstp
or
jmp
data16
inc
adc
dec
mov
dec
ret
insb
xor
lds
lret
fs
out
out
out
cmp
jbe
lret
sbbb
push
or
clc
cld
movsl
fsub
sahf
out
pushf
pop
and
cmp
or
mov
das
mov
ds
into
add
mov
mov
mov
jl
fisttpl
lret
test
sbb
sub
mov
bound
jg
jmp
scas
arpl
cli
clc
imul
inc
or
sub
pop
cltd
jge
outsl
or
add
mov
xchg
inc
pop
mov
mov
and
lahf
daa
cmp
loop
arpl
mull
dec
fldl
pop
push
out
mov
pop
loop
push
xor
or
andl
fs
mov
or
rcrl
xchg
out
inc
daa
outsb
out
shl
jl
fisttps
insl
xchg
or
or
cmpsb
or
cmpsb
push
adc
xchg
subb
pop
ret
pop
cmp
icebp
jmp
push
push
lret
aam
std
sbb
pushf
adc
lea
mov
rol
orl
cmp
add
push
addr16
dec
imull
stc
ss
push
mov
andb
fbstp
jecxz
xor
inc
fsubrp
mov
out
dec
mov
mov
paddusw
jae
jb
rorl
sub
and
push
mov
lahf
sbb
out
inc
rcrb
push
mov
and
lret
push
push
imul
clc
push
push
xchg
mov
fsts
mov
or
dec
pusha
push
push
jmp
out
jo
out
movsb
inc
xlat
inc
mov
ljmp
jbe
sbb
dec
rorb
repnz
sahf
pop
mov
and
insl
arpl
xchg
loop
jg
dec
lea
add
mov
jge
lret
pop
outsl
inc
adc
pop
rcr
insl
jo
addr16
cmp
int3
iret
jns
push
shlb
or
mov
int3
out
mov
jmp
or
xchg
nop
mov
or
roll
pop
mov
or
js
sbb
xor
ret
dec
out
div
jp
pushf
cmp
pop
push
jg
push
out
pop
jbe
pop
lods
sub
mov
push
lea
hlt
adc
orb
popa
andb
add
test
jnp
arpl
shrl
sub
repz
mov
xlat
test
gs
lds
xchg
fistpl
sahf
bound
imul
xchg
movsb
mov
xchg
scas
mov
gs
xchg
aas
push
or
mov
ret
pop
movsb
shl
ror
xchg
mov
adc
imul
and
into
in
and
pop
test
cld
mov
push
sbb
pusha
mov
xchg
sbb
ret
adc
insl
stc
mov
imul
jecxz
in
scas
sti
es
in
stc
dec
cmp
push
dec
int
das
out
sub
sbb
sub
addr16
jno
sarl
cmp
xchg
fstpl
mov
mov
insb
scas
pop
sbb
pop
jbe
ret
xor
out
lret
cmp
sbb
ret
js
push
jne
stos
fimull
mov
cld
fsubrl
outsb
imul
sub
movsl
ss
inc
xchg
mov
in
xchg
sub
dec
cmc
xchg
mov
jg
xchg
rorl
and
inc
test
or
pop
jl
and
mov
xor
dec
or
insb
dec
xchg
pusha
in
pop
dec
ret
pop
lret
xchg
mov
xchg
push
pop
ficomps
and
inc
ss
xor
dec
pop
ficomps
cltd
mov
mov
adc
dec
and
push
rcrl
shl
dec
lcall
stos
fildl
mov
int
push
xchg
fnstcw
dec
stc
mov
aam
cwtl
mov
movsb
sbb
nop
pop
and
rorb
pop
js
mov
xchg
jp
xchg
js
mov
jmp
sarl
cs
cmp
sub
and
push
int3
push
cmp
xor
ja
push
mov
push
rsm
ja
mov
js
push
mov
xor
std
lret
or
sbb
mov
xchg
sub
xchg
mov
lret
jnp
pop
sub
jns
or
xchg
sub
mov
lcall
into
add
inc
pop
fdivr
fistpll
push
adc
dec
and
pop
dec
sub
cmpsl
ficoms
in
mov
push
lock
ret
or
and
jae
mov
ljmp
mov
shrb
sbbb
and
or
mov
jae
rcr
pop
test
inc
inc
clc
mov
call
lods
cld
mov
xlat
and
test
pop
inc
roll
mov
leave
cmp
adc
imul
stos
push
adc
shll
sub
jge
dec
dec
adc
gs
stos
jne
js
mov
ret
jb
lods
ss
mov
push
jecxz,pn
push
test
fimuls
sar
hlt
int
and
cltd
in
lods
fwait
xor
and
stos
mov
jae
nop
sti
je
push
divb
cmp
fidivrs
inc
int3
ror
idivb
jmp
jae
mov
push
negl
jbe
cmp
aad
add
arpl
jge
push
jp
loopw
and
cwtl
and
cmpsb
mov
pop
cmp
xchg
sub
sbb
or
mov
clc
les
jl
call
es
xchg
push
sub
jno
rcl
icebp
lahf
jns
sbb
pop
jns
aas
mov
dec
mov
std
xchg
aam
cmp
mov
lock
xchg
jle
sub
cmp
aaa
shr
int3
fdivl
sub
pop
xlat
fsts
add
mov
cmp
adc
iret
mov
xchg
aaa
mov
adc
push
mov
adc
pop
jnp
leave
pop
imul
popa
xchg
jns
fstpl
pop
adc
mov
dec
sub
jge
cmpsb
push
test
shll
dec
insl
lahf
cmp
sti
jl
cmpsb
mov
sub
test
dec
inc
xchg
jp
inc
jno
and
cmp
cmp
jnp
cmp
jmp
pushf
mov
mov
cmpsl
es
cmp
add
mov
push
adc
fwait
sbb
adc
pop
xor
daa
repz
fdivrs
aad
ror
fbld
push
push
pop
sbb
push
rcrb
push
and
push
mov
jo
mov
fidivl
shl
testb
cmp
or
mov
and
repnz
dec
adc
xchg
lret
mov
push
sub
mov
add
push
jp
sub
fisubl
sahf
xor
dec
mov
lcall
fwait
lea
out
fisubl
repz
and
cmc
test
outsl
inc
push
dec
add
nop
mov
mull
in
sbb
jp
pusha
lds
jno
call
push
les
dec
and
popf
adc
xchg
pop
dec
mov
mov
mov
jge
sbb
jnp
push
mov
mov
inc
xor
sti
inc
mulb
jmp
jmp
in
pop
xchg
or
daa
rcll
xchg
insl
ds
nop
out
lock
xlat
cltd
gs
xor
fnstcw
cli
push
push
ds
and
mov
mov
jno
gs
loopne
clc
mov
mov
adc
mov
out
cmp
push
sbb
fbstp
adc
mov
fs
push
dec
pop
lret
js
mov
cmp
xlat
xchg
in
fwait
xor
negb
out
scas
arpl
scas
daa
xchg
addr16
rolb
hlt
and
mov
mov
call
or
mov
fildl
lret
sub
adc
cmpsb
jno
ret
ss
rcl
pop
xor
mov
arpl
push
js
or
aam
lock
jbe
hlt
and
cmp
in
dec
movsb
movl
cmp
dec
outsl
dec
int3
ja
rcrl
icebp
fs
inc
fstpt
or
jnp
gs
fidivs
dec
adc
mov
out
outsb
mov
add
jmp
push
adc
les
data16
or
adc
mov
pushf
and
sub
cltd
xchg
mov
xchg
pop
fbld
lods
xor
arpl
jo
in
inc
or
mov
addr16
sbbl
xorl
pop
xor
inc
ret
cs
icebp
and
insb
jnp
gs
lcall
dec
jle
lds
pop
or
mov
push
testl
pop
pop
inc
les
jb
repnz
inc
lds
jo
xor
jmp
xchg
cmp
aas
push
cs
adc
push
and
pop
stos
sahf
push
stos
and
outsb
push
pop
dec
mov
movsl
ret
xchg
jo
xor
xlat
inc
cmc
mov
mull
mov
test
scas
xchg
sbb
dec
mov
movb
push
ret
pushf
pop
popf
in
dec
arpl
xchg
xor
test
ljmp
ret
sub
pop
xor
mov
vcmpps
mov
mov
shrl
jo
pop
sbb
sub
clc
lods
lock
xchg
outsl
push
mov
pop
sub
imulb
int
loop
lea
cld
pmullw
cmp
ja
mov
jb
and
into
mov
arpl
shrl
jb
out
leave
mov
or
xlat
movsl
call
leave
loop
pop
push
xchg
lds
dec
mov
jle
xor
shrl
mov
sub
sbb
loope
aad
in
or
pop
jns
ja
shrl
pop
clc
testl
into
cmc
sbb
outsb
adc
jecxz
imul
push
mov
push
fs
mov
gs
cmc
jmp
cld
mov
adc
das
lods
sub
dec
sahf
loop
dec
leave
jnp
popa
insb
add
movsl
pop
mov
or
cmp
jo
jl
mov
or
mov
bound
repz
adc
test
pop
fidivrl
iret
sar
cwtl
lods
je
pop
cltd
scas
int3
push
in
scas
inc
push
daa
xor
je
and
cmp
and
pop
or
lahf
rclb
jecxz
sbbb
add
fsubr
sbbb
arpl
incl
jbe
mov
pop
push
mov
pop
jle
sub
fwait
xchg
or
sub
ja
jo
imul
xor
add
test
push
cmc
mov
xchg
ret
fadd
mov
add
je
call
push
mov
adc
xchg
insl
xor
cmc
xor
call
push
xchg
mov
fs
fldt
mov
push
lahf
cld
cmpl
cmc
iret
jecxz
pop
or
outsl
push
add
dec
or
jmp
sub
daa
imul
push
scas
out
push
push
xor
insb
and
xchg
mov
data16
lods
sub
jmp
add
ljmp
dec
pop
andl
sbb
mov
inc
xchg
dec
xchg
dec
add
mov
jle
inc
ret
in
outsb
iret
mov
push
dec
sbb
mov
mov
iret
xor
dec
adc
or
inc
or
ficoml
fwait
or
scas
out
call
test
fistl
gs
and
pop
adc
xchg
ds
push
dec
push
mull
xlat
lcall
or
cmc
jbe
sub
gs
rorl
push
mov
repz
shr
fcomp
out
cmc
lds
jg
jno
mov
jg
lret
and
push
or
xor
nop
push
adc
lds
jmp
jne
out
mov
mov
mov
pop
ds
rcl
mov
subb
and
popf
push
inc
add
xchg
mov
loop
add
jge
mov
mov
jl
int
bound
sti
push
daa
aad
in
mov
scas
jl
push
cmp
xor
mov
iret
insl
jbe
es
pop
dec
jnp
test
pop
imul
loope
into
lods
jl
stc
mov
pop
xchg
pusha
push
int3
cmp
sub
stos
fwait
lods
idivb
mov
in
xlat
ja
dec
mov
icebp
inc
inc
mov
xchg
xchg
jp
sub
cmpl
xchg
and
test
cli
jo
pushf
dec
pop
fwait
xor
fsubs
push
cltd
pusha
mov
das
add
inc
pop
jle
jo
push
outsb
mov
mov
xor
push
repnz
ror
pop
aam
movb
inc
stos
insl
mov
fisttpll
inc
idiv
cmpsb
mov
in
movsl
mov
jl
mov
mov
sbb
nop
xor
decl
sub
aaa
adc
loop
push
aaa
mov
rorl
daa
das
out
iret
popf
subb
repz
cmp
loopne
incl
inc
xor
adc
js
add
int3
xchg
dec
jle
sbb
adc
lods
mov
xorb
arpl
mov
jne
shrl
lahf
and
inc
add
jecxz
xchg
mov
fimuls
mov
stos
mov
jne
sbb
out
sbb
out
jne
mov
dec
push
nop
cltd
in
fcmovnb
mov
sahf
fildll
jge
pusha
out
lcall
mov
sub
iret
push
jns
mov
mov
inc
in
in
hlt
lret
jecxz
jle
sbb
mov
lods
mov
test
sbb
aam
inc
dec
lret
imulb
dec
jne
add
dec
jecxz
icebp
xor
out
push
adc
out
xchg
dec
mov
std
mov
scas
dec
jno
mov
mov
test
push
lahf
nop
push
std
jae
outsl
xor
fwait
add
ljmp
loope
fnstenv
movsl
idiv
push
adc
int
xchg
fwait
mov
cs
icebp
cmp
popf
jbe
test
stos
in
push
fdiv
cli
jo
ljmp
jecxz
arpl
jge
add
cmpb
movl
or
imul
mov
dec
jle
pop
cmc
cld
ss
stos
and
mov
and
outsl
xchg
mov
mov
cmp
ret
mov
or
aam
iret
gs
mov
inc
stc
xchg
mov
js
add
repnz
mov
inc
sbb
cmp
xlat
push
mov
xor
dec
subl
into
adc
outsl
sub
jp
dec
mov
mov
imul
sbb
dec
lea
xchg
test
push
das
sub
or
sbb
movsb
fcomp
pop
cmc
sub
lahf
js
jmp
sti
jge
incl
loope
and
and
mov
xchg
dec
sub
xor
pop
pop
and
sub
ds
bound
sub
data16
test
ss
push
mov
and
mov
pop
cltd
iret
inc
mov
mov
filds
mov
mov
mov
cs
out
jmp
repnz
std
or
es
insb
aam
pushf
mov
pop
enter
cmp
outsb
pop
enter
push
cmpsb
data16
addr16
push
push
inc
addb
xor
inc
sahf
xlat
jmp
fisttps
loop
sbb
pop
mull
int
int
out
fs
mov
push
jnp
dec
jo
sub
jne
mov
push
repz
mov
bound
ss
nop
cmpsb
and
addr16
sub
loop
mov
sbb
insb
sub
es
das
shrb
mov
leave
mov
pop
jp
xor
out
das
cmp
xchg
pop
lods
scas
js
mov
mov
jecxz
testl
dec
jns
or
jle
xchg
or
jb
dec
mov
mov
imul
push
mov
inc
movsb
fisubrs
icebp
lcall
out
fldenv
ja
pop
out
xor
or
mov
sqrtps
add
scas
pop
stos
ljmp
or
daa
callw
xor
xor
inc
addr16
or
jns
inc
inc
fbld
vpshuflw
cmp
cs
mov
testl
and
push
out
mov
mov
xor
fnstsw
xor
dec
insl
loope,pn
lret
loope
shll
jge
in
fistl
shll
jg
lahf
ret
imul
pop
jo
icebp
test
push
sub
ja
push
mov
scas
lret
push
pop
mov
testl
out
or
iret
inc
adc
or
movsl
pop
shll
push
hlt
jbe
xlat
iret
int3
add
or
stc
sub
cmp
xor
xor
fidivs
xchg
jle
dec
test
loop
fdivrl
dec
or
dec
idiv
or
movsb
add
lods
jnp
jmp
dec
loopne
sub
jbe
insb
in
loop
fcmovbe
idivl
shrl
jnp
stos
insl
xchg
aas
test
sbb
scas
inc
test
test
jl
jle
jno
sub
dec
dec
mov
push
push
push
sub
mov
sbb
lret
sub
test
mov
xor
and
arpl
inc
pop
jle
scas
loop
jmp
stos
jo
dec
push
mov
lds
sar
rorl
insl
add
lds
lods
pop
je
adc
arpl
pusha
push
cmp
hlt
je
push
out
fcmovb
xor
leave
out
lock
cmp
lahf
test
mov
lea
adc
in
lret
adc
and
nop
mov
inc
pop
and
add
xchg
leave
and
pop
test
adc
inc
test
sbb
xchg
inc
int3
es
xchg
push
push
insl
pop
push
xchg
push
mov
fsts
inc
lock
sub
or
dec
adc
pop
pushf
pushf
lcall
hlt
jl
ds
test
adc
mov
push
fwait
add
mov
mov
movsl
ljmp
pusha
push
test
aam
call
pop
adc
pop
lods
inc
push
mov
mov
popf
div
mov
stc
cltd
imul
lcall
bound
mov
lret
sub
add
sbb
arpl
fsub
adc
dec
mov
xlat
lret
dec
mov
sub
pop
jge
ja
lahf
dec
jo
dec
popf
je
push
jnp
adc
das
cli
xor
jmp
sbb
decl
cltd
mov
loop
cmpsl
out
and
imul
pop
xchg
or
and
loopne
jl
or
jb
hlt
pop
loopne
imul
mov
push
fs
jb
lods
aas
xchg
stc
mov
sahf
sub
and
idivl
fistps
aad
mov
cli
repz
sbb
cmp
xor
xor
and
cli
lret
leave
jns
sbb
fwait
repz
push
xlat
adc
nop
xchg
popf
jg
call
and
pop
add
push
add
and
xchg
jp
mov
or
or
rol
fcmovnbe
sbb
or
xchg
mov
gs
mov
pop
and
movl
xchg
in
add
in
inc
add
int3
mov
inc
aad
mov
push
jg
push
sbb
cmp
loop
dec
and
cwtl
add
test
mov
xor
inc
jns
in
das
mov
jecxz
pop
test
jg
test
or
pushf
fstpl
daa
scas
insb
gs
dec
xchg
test
jnp
daa
or
or
and
lods
pop
shl
jbe
icebp
dec
cmp
ret
in
hlt
test
lret
pop
adc
cmp
add
arpl
sarb
push
mov
push
lods
dec
sbb
mov
and
aas
pop
outsl
mov
bnd
fdivs
add
pop
mov
xchg
hlt
add
jo
leave
adc
sbb
lcall
sub
or
imul
mov
sub
sub
insb
mov
popa
out
add
test
stos
inc
adc
icebp
insb
jecxz
push
push
lock
adc
jle
jp
jo
enter
pusha
mov
jbe
gs
call
mov
in
inc
daa
mov
inc
adc
les
push
out
shrl
iret
pop
pop
push
push
int3
out
mov
push
dec
xchg
and
notb
jp
lds
add
cmc
nop
iret
cmpsb
inc
and
std
push
in
mov
sar
rcll
dec
fiadds
addr16
add
out
stc
cmp
pusha
xchg
addr16
in
and
pop
stos
pop
cld
push
aas
sarl
js
aaa
test
mov
repnz
and
fcoms
pop
dec
lock
test
test
xchg
popa
jle
sub
popa
cwtl
cmp
jmp
pop
mov
sbb
and
fmuls
mov
scas
push
icebp
inc
out
out
sbb
ljmpw
mov
lds
xor
mov
xchg
cld
fistpll
lods
pop
int3
sarb
push
cs
pop
dec
mov
js
loope
les
sub
ror
xor
test
sahf
iret
push
imul
repnz
sub
dec
and
loope
roll
mov
imul
mov
cmp
xchg
ljmp
das
xor
and
mov
and
pusha
jne
rcr
inc
lcall
inc
or
xorb
fldenv
in
aaa
mov
and
push
sarb
mov
cmp
ficoms
cmc
dec
js
insl
pop
xor
and
aad
pop
add
cli
inc
repz
mov
fcomi
lods
repz
jne
in
rcrl
and
jb
hlt
xchg
mov
inc
sub
outsl
mov
stos
sub
jl
cmp
stos
test
pop
push
ret
int
mov
push
sti
lahf
popf
jbe
mov
mov
adc
xor
xor
dec
jmp
push
js
mov
aaa
pop
lcall
test
xchg
add
dec
stos
fucomp
call
and
aad
xchg
int
and
xchg
ja
mov
out
dec
pop
lods
clc
prefetchwt1
shrb
add
push
ret
stos
out
cmp
pop
out
push
inc
pop
lock
mov
fldl
clc
mov
aam
out
add
cmp
dec
mull
inc
imul
std
adc
rcll
je
fs
jno
fistl
jns
cmp
das
dec
scas
adc
int
pop
rolb
jbe
inc
lea
mov
inc
addb
dec
rorb
jmp
loop
insb
imul
mov
stc
movsb
mov
jnp
out
insl
push
xchg
dec
fdiv
call
mov
shr
xchg
or
insb
test
sub
aas
dec
mov
js
test
popl
mov
add
sub
test
mov
lahf
shll
xchg
pop
clc
mov
subl
jae
lods
pop
pop
and
fdivrs
inc
enter
aas
shr
sub
rcrb
xchg
imul
sub
std
push
stos
xor
loop,pn
sub
outsb
jnp
dec
cmp
fistpl
out
mov
sti
ljmp
push
cwtl
inc
movsl
mov
movb
pop
adc
popf
inc
out
xchg
mov
xchg
loop
inc
mov
xchg
movsl
loop
push
test
sarb
inc
fmull
adc
adc
pop
push
pusha
pop
jo
jmp
in
movsl
add
into
lcall
inc
cmp
loopne
mov
adc
sub
pop
inc
loop
lcall
sti
stos
icebp
and
xor
mov
fs
push
inc
xor
imul
cmpsl
mov
adc
xchg
jle
out
es
or
mov
inc
sub
xchg
sbb
incl
lret
lahf
xchg
fs
pushf
sti
shl
push
jg
pop
or
xor
jne
repz
arpl
dec
push
das
mov
insb
sbb
sbb
jnp
dec
out
cmp
std
jl
add
lods
fisttpll
loop
pop
out
xor
mov
hlt
je
arpl
mov
push
data16
ljmp
popa
lods
pusha
rcl
stos
out
add
lahf
pop
pop
fstpl
mov
and
jno
push
fadd
aam
xor
scas
loope
shrl
add
jmp
sbb
and
mov
lret
jge
push
aam
or
mov
mov
xor
jno
push
out
mov
lods
jmp
push
dec
loopne
dec
sbb
mov
xor
push
loope
movsb
adc
sti
add
stos
inc
aaa
pop
mov
dec
cmp
and
inc
aad
les
aad
cmp
dec
lock
imul
mov
sarb
stos
mov
pop
rcrb
inc
xor
pop
adc
daa
or
push
mov
scas
pop
mov
jae
call
dec
pop
decl
jne
nop
xchg
sbb
pop
mov
dec
loop
xchg
pushl
adc
dec
sarl
pop
sahf
aam
cmp
cmpsb
fsubrs
ds
rclb
dec
jnp
pop
hlt
das
push
stos
fsubs
mov
repz
ljmp
push
push
inc
stos
mov
xor
sub
loopne
lcall
xchg
loopne
sti
xchg
xor
cmc
ljmp
daa
pop
add
mov
mov
jnp
scas
imul
in
std
incl
rorb
int
shlb
in
sub
jmp
icebp
ror
jmp
xor
cmp
lret
loope
xor
lcall
jne
inc
and
bound
push
ja
pop
gs
call
xlat
stc
xlat
imul
mov
push
das
iret
pop
stos
hlt
adc
popf
jnp
in
inc
out
test
iret
and
pop
dec
push
and
mov
xchg
sub
cmc
test
mov
pushf
inc
fstpl
pop
mov
mov
push
inc
test
bound
mov
add
dec
test
xchg
inc
iret
dec
xchg
je
outsb
xchg
jle
add
jae
push
pusha
dec
bound
enter
sbb
divb
or
movsl
popf
cwtl
cmpsb
icebp
clc
dec
fs
loope
mov
cmp
push
arpl
mov
stc
pusha
dec
ljmp
adc
sarl
fucomi
lods
sbb
sub
rorl
sub
data16
inc
adc
sbb
into
out
and
cmpsb
dec
ficomps
pop
push
rcr
mov
call
adc
mov
mov
inc
xor
sbb
xchg
mov
pop
nop
pop
jbe
imulb
xorl
add
inc
setno
pop
ret
pushf
sub
jb
cmpsl
fnstsw
hlt
or
shlb
ret
into
jmp
xor
rep
insl
inc
mov
je
loop
cmpsl
ds
loope
test
into
lds
mov
repnz
daa
jns
js
scas
push
clc
rorl
inc
jnp
sar
out
mov
mov
imul
test
test
mov
cmp
push
mov
mov
sub
push
rcr
imul
push
sbb
leave
or
sbb
sbb
addr16
sbb
cmc
sub
jnp
aas
cmp
cmp
fdivr
and
outsl
paddsw
mov
psubw
push
dec
in
stos
or
dec
aam
jecxz
outsl
push
mov
fsubrl
inc
popf
jbe
test
mov
jae
shlb
adc
sub
iret
xchg
sbb
ljmp
push
sub
xchg
push
out
pop
dec
iret
sbb
loop
adc
lret
pop
cmp
clc
or
inc
pop
ljmp
mov
ficompl
imul
dec
insb
inc
or
mov
cltd
lds
ja
test
cmp
lcall
cmp
add
push
sub
in
xchg
add
pop
les
adc
push
loop
pushf
push
pop
dec
xor
iret
xor
popa
and
adc
pop
xchg
xor
sti
jno
sub
mov
sub
insl
push
inc
jbe
or
inc
mov
pusha
jae
les
mov
dec
adc
xor
and
fs
jns
push
push
xchg
fmulp
mov
jne
fidivl
lods
adc
fnsave
lahf
pop
push
push
call
cwtl
jg
fs
jmp
sbb
fmulp
adcl
bound
cmp
cs
je
dec
ret
in
or
add
and
scas
pusha
mov
int3
stos
push
out
insl
int3
rcrl
lahf
cmpsb
mov
mov
loope
out
push
sbbb
loop
adc
inc
pop
arpl
jmp
dec
pop
mov
mov
pusha
jns
fistpll
jne
icebp
sahf
jge
imul
clc
outsb
fdivs
dec
jg
sub
movsl
js
mov
aaa
mov
imul
aas
pop
xor
mov
adc
jp
jnp
movsb
sbb
lret
push
sub
cmp
adc
xor
and
stos
int3
and
xchg
xor
pop
sub
sbb
mov
popf
xlat
cli
ficompl
push
test
xor
fsts
stos
sub
inc
iret
adc
ds
mov
mov
push
test
or
mov
xor
xchg
scas
fld
imul
aam
pusha
roll
test
gs
mov
add
rolb
addr16
jg
repnz
daa
mov
jnp
jmp
or
std
sbb
xchg
fwait
pusha
mov
add
inc
pop
jmp
icebp
add
mov
and
pop
movsb
test
rcl
ficoml
rcrb
pop
jns
ss
stos
call
aam
stos
add
dec
sub
je
mov
nop
xor
aas
cmp
mov
or
lods
inc
aad
fwait
hlt
dec
out
lods
adc
dec
je
mov
sbb
outsl
or
add
scas
gs
jbe
insl
in
mov
pop
push
push
aaa
test
lahf
pop
push
push
cltd
das
ss
ret
ror
or
pop
xlat
data16
aaa
mov
icebp
push
or
mov
push
out
push
mov
lahf
push
pop
xor
orl
push
xor
loopne
mov
cwtl
nop
mov
js
pop
js
pop
fstpl
cmp
pop
ljmp
dec
sahf
sbb
push
cmpsb
pop
push
pop
iret
cwtl
leave
pop
pop
das
pop
rolb
mov
cltd
push
pop
xor
cltd
es
scas
js
cmpsl
insb
mov
insb
loopne
mov
ja
mov
xchg
xchg
arpl
cli
push
push
sahf
push
in
mov
cli
and
mov
repnz
xor
cmp
dec
and
outsb
mov
loop
jge
sti
mov
push
cmp
test
es
lea
push
adc
fwait
test
adc
pop
jl
sbb
cmc
cli
popa
cmc
leave
fistl
or
sbb
ss
dec
mov
inc
daa
nop
jno
and
js
ja
fisubrl
adc
call
clc
or
ljmp
je
mov
pop
pop
cmp
push
mov
and
adc
clc
lcall
mov
repz
rcr
dec
dec
ljmp
sub
aam
and
decb
jnp
fnsave
mov
inc
dec
push
push
sub
out
repz
aad
fisubrs
scas
leave
push
outsb
inc
mov
outsl
or
and
clc
xor
xchg
jno
loop
push
or
inc
pop
sahf
addl
jo
jb
and
add
call
sbbb
gs
loopne
cmpsb
test
jns
ja
add
or
pop
xchg
and
cmpsb
outsl
adc
cli
aaa
add
or
adc
jmp
adcb
aas
mov
xchg
push
lds
xor
pop
daa
pushf
pushf
pusha
aas
mov
or
testl
pop
mov
call
adc
addr16
xchg
jo
mov
insl
xlat
sbb
dec
jecxz
imul
push
jle
dec
aaa
adc
jo
loope
inc
iret
inc
jbe
cmpl
mov
xor
cmp
xchg
es
mov
loope
inc
cld
sbb
enter
add
in
ss
fists
pusha
push
cli
sbb
xor
adc
mov
fnstcw
mov
mov
fimull
xor
jnp
push
jmp
rcrl
push
pop
ja
pop
jbe
dec
sbb
leave
das
cmpl
add
fists
push
and
aaa
fwait
in
pop
and
cwtl
das
ljmp
xchg
xor
mov
inc
push
in
dec
das
sar
cmp
cmpsb
and
mov
mov
lods
int3
xor
cs
loope
pop
sti
ret
sbb
and
shll
mov
fyl2x
gs
pop
mov
push
subl
adc
pop
jecxz
leave
and
icebp
inc
repz
mov
mov
fisttpl
pop
add
xlat
mov
jp
aad
jmp
les
addr16
in
movsb
in
push
cmp
mov
pop
adc
cmp
aaa
and
adcb
jo
in
xor
mov
jo
mov
hlt
mov
add
fcoml
shll
pop
jecxz
ret
xchg
add
call
dec
test
or
call
mov
adc
fstpl
loope
inc
xchg
aad
jb
xor
mov
fstpl
enter
adc
lret
jg
pop
test
inc
add
add
clc
dec
adc
mov
inc
adc
xchg
cs
aad
loopne
jg
dec
movsl
xlat
xor
sbb
int3
add
sbb
sbbl
fadds
popa
add
pop
dec
sbb
pop
xchg
rcrl
loopne
in
add
or
add
lcall
sub
stos
pusha
fsin
jecxz
shll
jne
jne
lret
push
pusha
xor
aad
add
xchg
push
add
nop
iret
xchg
xchg
rclb
push
ljmp
stos
add
stos
sbb
jge
fstpt
sub
cmc
push
push
lret
stc
enter
data16
fisttpll
or
cld
jecxz
pop
cwtl
adc
push
loopne
aam
test
mov
call
mov
and
clc
ret
xchg
pop
mov
clc
pop
sti
cmp
inc
ljmp
or
adc
and
sub
push
or
insb
pop
push
xchg
and
xchg
add
inc
sbb
push
aad
push
inc
sub
add
fwait
mov
mov
xor
ret
xchg
inc
dec
mov
mov
aas
lods
mov
sbb
or
sarl
sbb
fcoml
adc
stos
hlt
mov
lods
aam
add
dec
jb
test
movsb
stc
loopne
cli
xor
ret
ficoms
pop
fwait
push
push
leave
leave
xor
daa
xchg
xor
into
xor
fwait
repz
adc
call
xor
gs
pop
pop
sahf
xchg
and
das
mov
jle
cld
jl,pt
jbe
xchg
lods
fadd
in
mov
jle
loopne
in
popa
scas
mov
jecxz
int
jne
and
lds
stos
push
or
mov
add
gs
outsl
data16
sub
inc
sub
cs
xchg
and
cmc
and
add
cli
mov
xchg
aaa
cmp
into
mov
cmp
push
mull
roll
mov
pcmpgtw
insb
pop
xorb
inc
or
adc
shl
fsubrs
stc
push
fidivrl
mov
stos
cmp
insb
sbbb
addb
jno
pop
sbb
mov
leave
xchg
dec
add
sti
cmp
leave
and
fcmovne
sbb
cmp
jg
lret
xor
mov
outsl
inc
pop
dec
jg
push
arpl
in
pop
ret
stos
aad
call
mov
dec
shrl
mov
nop
dec
rolb
mov
popa
or
or
adc
and
and
movsl
jae
mov
push
ret
and
or
inc
and
xchg
or
pushfw
adc
mov
gs
adc
and
movsb
sub
sbb
add
or
in
sub
inc
inc
insb
bound
jmp
jae
lret
cmp
call
mov
inc
pop
mov
mov
jmp
addr16
stc
hlt
cmc
cmp
stos
adc
movsb
mov
outsb
sahf
popf
inc
dec
sub
call
xor
imul
lahf
dec
stos
xlat
xor
outsl
out
push
ljmp
inc
data16
xchg
jo
add
mov
mov
enter
test
rcrb
mov
adc
aam
movsb
out
dec
popa
mov
cmp
jnp
inc
xchg
sub
mov
scas
mov
addr16
mov
loopne
add
or
sub
jg
inc
call
or
xor
test
dec
mov
add
ds
inc
xor
adc
jns
aad
push
call
adc
mov
mov
fidivl
bound
stos
mov
pop
sub
scas
ret
push
push
sti
dec
adc
mov
outsb
sub
sub
or
test
sbb
ret
lea
sub
sbb
inc
repnz
xchg
mov
int3
xor
movb
push
inc
subb
scas
fisttpll
hlt
inc
hlt
jg
lods
xchg
jp
in
fdivr
rcl
hlt
lcall
jo
mov
pop
xchg
movsb
sbb
jg
int
movsb
push
sub
shrl
mov
mov
or
push
push
mov
sahf
insb
stos
sbb
adc
adc
adc
push
movsb
xor
loope
push
in
pop
testl
mov
xor
hlt
and
xor
fsubl
adc
xor
popa
fistps
adc
adcl
pop
cmp
out
cmc
bswap
sub
lods
push
push
ret
mov
mov
ret
cld
push
mov
std
jge
and
dec
sbb
nop
in
stos
jb
sahf
or
in
fwait
scas
dec
sbb
mov
shll
add
add
movsl
mov
int
outsb
enter
xor
mov
scas
movsb
xchg
fidivrl
aas
pop
out
sbb
fldl
cli
jge
or
sub
mov
mov
ret
mov
outsb
xchg
iret
repnz
pusha
dec
sub
stos
mov
fisubs
mov
push
mov
sub
cltd
rcll
xor
sub
out
fiaddl
pop
xlat
mov
repz
fs
sub
nop
adc
inc
pop
jne
xlat
sub
int3
lods
cmp
mov
loope
iret
aad
push
push
cmc
test
mov
ret
add
mov
jp
test
add
dec
test
aas
sub
popf
or
mov
adc
loop
loopne
sbb
sbb
lcall
movsl
xorb
dec
jecxz
loop
cld
filds
ss
and
pop
jecxz
imul
outsb
jmp
dec
icebp
add
test
dec
stc
jmp
jg
adc
fsubs
lea
rep
outsl
adc
sbb
or
rorb
jne
cwtl
dec
or
aaa
stos
into
inc
hlt
push
shl
push
repz
push
xor
mov
cmc
aaa
shlb
adc
mov
sti
push
inc
fdivl
jecxz
out
adc
aad
cmp
dec
adc
sub
mov
fdivl
cmp
mov
inc
pop
sub
in
ja
or
pushf
dec
fmuls
mov
pop
adc
dec
mov
leave
mov
sbbb
shlb
cmpl
es
icebp
loop
bound
sub
mov
jmp
gs
adc
in
dec
pop
iret
scas
ja
push
mov
push
lcall
lock
shll
ja
aam
les
lahf
dec
sub
dec
and
push
imul
inc
xor
xchg
out
fcmovnbe
dec
cs
lcall
or
jge
dec
jbe
loop
in
fcoms
xor
fistps
leave
pop
ja
or
jp
jecxz
cwtl
test
dec
jb
popf
mov
inc
dec
xchg
jns
mov
jns
jns
gs
fcmovb
test
inc
jmp
push
repnz
into
imul
testb
out
ljmp
addr16
xchg
filds
jle
pop
repnz
push
push
idivl
int3
push
shrb
in
inc
int
pop
sub
sub
sub
addl
dec
dec
add
leave
xor
xchg
cmp
les
xor
sbb
es
in
cmp
lds
int
xchg
and
pushf
mov
bound
dec
xchg
jmp
xor
sub
cmpsl
inc
mov
pop
xchg
xor
jbe
mov
aad
add
mov
arpl
jge
sub
mov
fsubrl
es
addr16
lret
ret
ret
je
pusha
xchg
and
xor
scas
xchg
movsl
cmpsb
push
dec
ja
xchg
xchg
and
jnp
adc
in
notb
testl
loop
pushf
cld
add
inc
sbbl
mov
xchg
ret
dec
xor
test
popa
sub
xchg
shr
jl
push
fsubrs
js
cmc
jmp
xor
push
inc
mov
push
lock
cmpsl
out
pop
data16
lods
std
cmp
inc
lret
sub
fmul
fdivl
enter
push
hlt
dec
mov
pop
lock
xlat
insb
daa
decb
push
imul
or
es
lock
push
inc
frstor
xchg
cmp
pop
imul
jg
call
in
lods
popf
das
jmp
addr16
dec
jne
adc
sub
sub
inc
cmp
out
jl
mov
and
inc
test
sti
aam
cmp
cmpsl
es
mov
dec
je
xchg
scas
mov
xchg
fs
pop
xchg
mov
xor
fiaddl
outsb
pop
outsl
xor
xor
lea
pop
ret
fs
fiadds
je
test
jnp
sbb
dec
ja
pop
stos
mov
adc
xchg
loop
scas
mov
cmp
push
push
jg
add
stc
inc
jmp
insb
cltd
adc
outsl
daa
mov
mov
jno
xchg
push
fsubl
lds
mov
or
inc
ret
xchg
cld
add
ljmp
push
or
inc
int3
dec
jmp
jle
jmp
enter
mov
xlat
sbb
les
jnp
shr
popf
mov
push
mov
aaa
mov
cmp
push
cmp
xor
mov
mov
sbb
in
out
inc
es
stos
addb
addr16
nop
test
and
loope
pop
pop
enter
xchg
xchg
cmc
aad
fisubl
ret
clc
aaa
or
pop
mov
inc
nop
mov
mov
push
dec
fdiv
lahf
pop
xchg
jbe
ret
cmp
loope
adc
je
xor
and
mov
loope
in
cmp
push
mov
rorb
mov
xchg
inc
mov
push
cmp
pop
les
jle
xor
cmp
pusha
daa
pop
call
xor
jmp
scas
jmp
pop
mov
fiadds
cmc
sti
inc
scas
add
leave
push
push
push
stc
xor
mov
mov
adc
dec
mov
dec
pushf
jle
cmp
pop
and
imul
dec
jecxz
popa
js
arpl
lcall
sub
js
or
pop
or
xor
sbbb
lock
jecxz
lock
lahf
sub
cs
mov
stos
ja
sub
shlb
mov
sub
mov
mov
add
mull
and
popf
popl
addr16
leave
cmpb
dec
sub
mov
pop
jnp
insl
lcall
push
xchg
sbb
mov
rol
pop
adc
mov
push
std
or
cmp
xor
mov
jo
push
es
loopne
ds
jge
dec
xchg
ds
sar
fcoms
ss
sbb
int3
sahf
lock
out
lret
mov
imul
jnp
sbb
popa
jg
inc
cmovbe
push
xor
lods
pushf
adc
mov
sbb
push
push
adc
jp
fisttps
imul
sbb
sbb
pop
js
mov
stc
mov
sub
push
or
fisttps
iret
insl
inc
pop
xor
lods
aam
into
outsb
andb
add
sub
divb
inc
lret
int
test
push
and
xor
fcompl
inc
pop
add
cmpsl
pop
fidivs
cmc
pusha
dec
shll
sbb
mov
rolb
outsb
mov
xchg
pop
fcmovnb
lock
mov
pop
dec
fwait
imul
mov
dec
sbb
mov
mov
or
fld
pop
addr16
imulb
test
ret
xor
add
pusha
sbb
call
fs
in
or
push
pusha
aaa
cmp
decb
lods
nop
outsb
ret
jb
and
out
jae
xchg
ds
pop
cwtl
sbb
mov
pusha
das
or
fnstsw
mov
add
rcll
add
into
inc
adc
sub
negl
inc
insl
shll
pop
dec
rcl
lods
inc
sub
push
inc
lods
fisubs
dec
and
mov
faddl
imulb
insl
stos
pop
fnstcw
fwait
mov
scas
movsb
xor
add
mov
push
icebp
jmp
lock
aad
cmp
fstpt
mov
test
sbb
mov
sbb
mov
inc
and
sub
mov
jns
popa
dec
out
mov
std
mov
or
push
dec
mov
pop
cmp
mov
sbb
fwait
aas
leave
pop
jge
in
in
add
mov
xchg
jge
icebp
out
mov
or
mov
dec
sbb
mov
pop
pop
sub
cmp
aad
clc
xor
sbb
xor
and
push
daa
push
inc
lods
lcall
jo
fiadds
cli
shll
rol
ss
cli
data16
js
jl
sbb
sub
pushf
lods
push
push
and
sub
add
popf
adc
push
pop
push
jne
clc
push
movsl
fwait
cltd
lds
shrl
cmp
add
lea
sub
jge
div
jo
fdivs
in
mov
call
jp
shlb
incl
lea
inc
lcall
imul
loop
xlat
outsb
xchg
jge
icebp
int
movsl
aam
dec
fiaddl
fists
pop
jb
xor
add
mov
icebp
call
push
add
and
cwtl
daa
push
lret
inc
mov
and
xchg
aam
push
push
xlat
add
mov
outsb
rolb
mov
mov
cmpl
dec
adc
cmpsl
mov
fdivrl
dec
pushf
sti
and
sbb
into
dec
push
test
fnstsw
sbb
sub
cmp
outsl
sub
lret
lret
lahf
int3
popf
test
jg
xchg
pop
lods
sub
movsb
push
mov
rorb
jae
cmpsl
fists
imul
cld
cs
std
xor
adc
rcll
sbb
jp
cwtl
or
pop
movsl
adc
add
dec
pop
xchg
and
inc
and
jp
jmp
jg
fldl
into
outsl
mov
fdivl
and
pushf
lcall
mov
xchg
loope
arpl
push
jns
mov
test
inc
and
cmp
loop
xchg
cmp
xor
stc
insl
mov
in
fistpl
adc
push
jg
jb
in
gs
xchg
or
inc
inc
dec
mov
leave
fwait
or
xchg
je
enter
icebp
xor
les
cmpsb
lahf
add
cmp
nop
sub
out
push
dec
or
into
mov
loopne
lret
shrb
mov
por
cmc
xchg
aad
cmpsl
push
dec
jmp
pop
insb
jne
cmp
lds
xchg
fcomps
pop
bound
mov
test
push
or
mov
pushf
in
jnp
push
mov
dec
dec
mov
adc
adc
mov
mov
add
aad
in
out
push
out
cwtl
xchg
lret
ret
and
pop
ffreep
mov
dec
nop
call
test
xlat
sbb
gs
mov
jo
xor
lret
mov
pop
inc
out
and
jge
adc
push
mov
sub
xchg
test
pusha
sti
fidivrl
push
adc
cli
data16
sub
jl
pop
mov
jb
and
mov
dec
jnp
out
jge
adc
cmp
out
repnz
dec
clc
sbbl
scas
cmp
mov
mov
jbe
sti
pop
and
mov
or
xchg
cltd
and
loop
sub
push
push
lahf
dec
in
xor
test
cmp
cmp
jg
test
in
call
pop
xor
and
pop
and
lock
pop
mov
movsl
ficoms
loopne
gs
shrb
rorl
js
out
bound
mulb
mov
xchg
mov
repz
pop
jbe
pushf
cmp
fisttpl
and
sbb
fdivrs
in
es
lret
cmp
sbb
dec
jmp
jae
out
pop
or
test
lock
add
sub
jecxz
jne
es
rorl
cmp
sub
mov
pop
mov
jb
push
icebp
test
scas
ficompl
cmp
add
popf
call
arpl
mov
dec
fmull
scas
ss
insl
fsubrl
or
stc
incb
outsl
inc
jnp
mov
xchg
xchg
xor
aam
rcrb
lock
or
fwait
std
cwtl
mov
subb
and
dec
push
gs
stc
stc
icebp
inc
rorb
and
mov
push
cld
inc
xlat
or
sub
xchg
cmp
mov
scas
leave
movsl
sbb
adc
jnp
in
test
jns
lcall
cmpsb
cltd
push
out
push
hlt
and
pop
pop
mov
xchg
rcll
mov
insl
mov
icebp
and
mov
lahf
out
push
sti
cmc
lods
lods
inc
daa
mov
das
movsl
pop
inc
in
jle
aam
shll
mov
and
les
cmp
cmc
shrl
ja
mov
xchg
or
fisttps
dec
mov
inc
dec
aas
cmpsl
cwtl
mov
or
cmp
sub
jno
push
mov
ja
and
xchg
ret
mov
pushf
push
cld
jns
push
mov
fs
dec
repnz
push
js
mov
lock
shl
xchg
sub
sbb
dec
pop
pop
fidivrs
adc
sahf
jg
dec
aas
or
push
jge
sbb
jg
sahf
adc
aad
cwtl
and
shrb
sbb
push
inc
stc
mov
clc
insb
add
mov
sti
mov
push
cli
lret
dec
add
xlat
mov
jp
mov
or
ljmp
fwait
jno
sub
adc
fldl
push
negb
cmp
adc
ljmp
mov
add
mov
mov
pop
xor
ror
aad
inc
cmp
sbb
cmp
jne
cwtl
scas
cmp
mov
push
mov
mov
or
sbb
mov
insl
into
mov
cli
scas
mov
push
xchg
fdiv
out
repz
movb
mov
loop
or
and
xor
pop
out
mov
pop
jae
mov
arpl
enter
xor
lods
test
cmp
jno
adc
ret
or
cmp
inc
ss
dec
pcmpgtd
xchg
leave
and
xor
dec
stos
mov
test
push
fwait
gs
sbb
std
ficompl
pop
imul
fdivs
or
repz
in
gs
pop
test
cli
iret
insb
cmp
mov
push
mov
push
sub
in
fs
jp
in
stos
push
outsb
fsqrt
push
and
dec
int3
mov
push
xlat
aas
push
ds
sub
jne
nop
sbb
pop
insb
mov
inc
pop
push
sarb
sti
xchg
dec
xor
cld
iret
movsl
aaa
xor
add
sbb
inc
xor
dec
fsubr
sub
test
icebp
sbb
fidivl
loop
sub
adc
bound
adc
clc
enter
pop
pop
gs
jno
mov
paddw
into
push
pop
pop
scas
hlt
inc
outsb
push
out
and
out
xchg
jbe
in
ficompl
pop
or
xchg
jmp
fs
cmc
jbe
testb
out
imul
outsl
subb
push
cs
mov
xor
rorb
int3
les
mov
mov
or
es
jp
mov
inc
scas
clc
cwtl
arpl
or
mov
push
repz
sub
lcall
mull
dec
dec
in
enter
ret
std
notb
xor
fldenv
xchg
sbb
xchg
out
jecxz
inc
lea
aad
mov
rorl
sbb
mov
sub
cmp
psrad
dec
aaa
jg
test
dec
cmc
inc
std
cld
mov
mov
mov
rcl
movsl
lret
xchg
mov
inc
and
jecxz
mov
push
into
out
mov
leave
or
cmp
xor
fstpt
imul
mov
shl
je
mov
movsb
push
call
shlb
sar
inc
rorl
mov
mov
push
in
and
adc
inc
push
xchg
daa
lahf
and
mov
dec
xchg
adc
and
lcall
imul
je
inc
out
jp
adc
in
sbb
push
stc
mov
daa
jmp
imul
rorl
jecxz
ds
fs
adc
es
xchg
xchg
jbe
rcrb
aaa
into
lret
fisubs
dec
mov
lcall
mov
xchg
repz
inc
jecxz
cmp
add
dec
imul
ds
dec
sub
test
cmp
pop
xchg
ljmp
ret
pop
mov
shl
jne
fnstcw
aad
push
ljmp
je
pop
pop
cmp
ret
imul
inc
mov
clc
inc
adc
int
pushf
sub
daa
pusha
xchg
mov
std
pop
into
or
adc
sbb
mov
adcl
lea
imul
push
xlat
fisubrs
repnz
jl
lds
notl
je
mov
sbb
jg
push
or
rcrb
cmp
out
js
dec
and
jnp
cmp
dec
sbb
outsl
mov
cld
cmpsb
icebp
lods
test
pop
js
arpl
mov
jno
or
jbe
push
sub
xor
cmpsl
or
iret
push
dec
mov
sbbl
aaa
and
notl
pop
mov
cs
xchg
jae
imul
bound
hlt
popf
loop
cmp
add
push
and
cmc
adc
push
mulb
mov
out
pop
push
andl
sbb
push
leave
dec
push
lods
adc
test
jge
or
inc
pop
out
aad
loope
pop
sub
leave
test
pop
jnp
mov
push
mov
inc
fwait
jnp
xlat
xor
and
and
push
movsl
outsb
push
mov
test
pop
xlat
pusha
imul
test
jp
or
xchg
lds
aam
cmc
pop
shll
scas
ss
add
push
jmp
insl
xchg
decb
inc
xchg
addr16
outsb
and
mov
std
xor
jge
mov
fildl
jno
jne
push
jmp
mov
cmp
ret
je
push
jb
add
cld
outsb
sub
fnsave
push
int3
andl
xchg
pop
mov
ds
testl
cmp
cmc
out
repz
cltd
shl
mov
loopne
ds
stos
push
aam
cmpsl
in
sbb
filds
and
out
lock
lds
adc
cli
push
movsl
jp
lea
je
push
leave
and
jge
das
push
cmpsb
insl
insb
test
lcall
pop
fisttpl
adc
js
or
fnstsw
stos
dec
cli
cli
call
inc
fisubl
add
jge
push
mov
es
cmpsl
inc
add
popf
loop
loop
ret
jg
lcall
pushf
inc
and
xchg
cld
insl
jnp
mov
jle
jp
cmpsb
or
ss
stos
or
push
push
mov
mov
sahf
mov
fisttpl
inc
dec
adc
stc
or
or
push
xchg
jmp
xor
ljmp
sbbb
dec
jae
mov
adc
out
data16
jge
out
rcrl
cmp
add
or
lret
lea
cld
xor
sub
sub
and
idivb
sub
repz
xchg
cmp
dec
test
and
pop
into
dec
icebp
and
rcl
rcrb
adc
in
lds
push
add
inc
pop
mov
dec
mov
push
rclb
push
xchg
outsb
cmpsb
mov
sarb
xor
inc
xchg
push
or
push
in
adc
adc
jns
fiaddl
jp
nop
push
adc
dec
lods
xchg
dec
dec
ret
dec
es
enter
loope
dec
sbb
pop
jp
nop
enter
dec
add
lds
movsb
dec
sbb
jp
call
pop
inc
add
js
mov
data16
pop
cmp
adc
stos
sbb
test
insl
mov
xchg
mov
outsl
add
mov
rcr
lret
sbb
jmp
jg
flds
addr16
mov
shl
ret
mov
sarl
mov
je
outsl
jl
ljmp
int
mov
push
mov
xchg
rorw
out
jecxz
cmp
xor
mov
push
sub
xchg
lods
in
inc
mov
mov
jge
push
ror
cli
xchg
push
inc
shl
mov
fnsave
sahf
cli
inc
out
jns
pop
pop
xor
test
xor
and
mov
add
xchg
je
lret
mov
xchg
out
mov
orps
in
add
mov
test
adc
rolb
dec
push
jp
dec
out
jae
sub
adc
adc
mov
fsubp
jb
inc
icebp
pop
push
aaa
or
in
outsb
xlat
and
pop
shlb
pop
sbb
push
cmp
push
pop
rorb
stc
jns
dec
lds
fnsetpm(287
pop
repnz
fnstsw
into
sub
mov
mulb
fisttps
lret
setg
jmp
push
inc
dec
mov
xor
hlt
cltd
andb
push
mov
shl
xchg
cmp
inc
pop
lock
movsl
push
jo
pop
and
xchg
inc
sub
subb
addl
lea
arpl
in
sub
lods
xchg
or
icebp
rorl
push
movsl
jns
ficoml
bswap
in
gs
outsb
inc
ja
dec
pop
enter
mov
xor
icebp
lahf
pop
jmp
loop
sub
mov
bound
xchg
and
lods
mov
aaa
dec
sub
cli
pop
push
jno
pop
mulb
out
jl
repz
insl
leave
in
ret
popf
pop
dec
push
stos
push
clc
sbb
sti
mov
test
adc
jl
mov
fidivrl
fucomip
xchg
clc
std
aas
int
mov
mov
sub
xchg
out
out
ljmp
cmpsb
jg
jp
mov
outsb
sti
outsl
cmp
lods
fs
outsl
out
das
popf
out
mov
in
cmp
dec
cmp
mov
icebp
sbb
mov
cltd
push
adc
lcall
dec
cmp
mov
mov
inc
dec
cmp
je
les
in
inc
mov
xchg
lods
sub
xor
or
insl
pop
cs
adc
cmc
push
push
cmp
lea
lock
cmp
mov
pushf
push
scas
incb
movsb
xor
ja
sar
add
and
out
fnsave
xchg
ss
stos
scas
cs
out
test
int
inc
jnp
pop
push
jl
nop
imulb
and
imul
cmp
fsubl
add
daa
subb
xchg
test
aad
pop
mov
popf
insb
mov
push
jmp
scas
dec
jl
sub
nop
sbb
fmul
jo
shrl
pop
lea
repz
adc
mov
xor
loope
pop
test
dec
imul
out
dec
pop
ja
fmul
jae
push
mov
jb
ret
push
push
sahf
cli
xchg
scas
callw
into
pop
adc
scas
push
dec
inc
cltd
xchg
push
addr16
cmpb
fxtract
mov
xor
add
mov
mov
test
bound
shrd
ljmp
adc
inc
jmp
push
lret
pop
add
xchg
cltd
mov
pop
adc
loope
push
xor
mov
cmp
push
mov
cmp
cli
lea
lret
and
out
or
ret
xor
mov
pop
push
mov
fstps
add
xor
pop
nop
cmp
repz
shlb
or
fsubl
jno
xlat
test
fcompl
dec
mov
sub
jg
orps
pop
addr16
leave
dec
xor
sti
scas
cmp
aad
push
insb
add
dec
and
sbb
fs
or
repz
subb
int
mov
pop
jb
sub
fisubl
adc
mov
fcomps
cmp
push
inc
sahf
add
xor
sbb
push
cmp
mov
ljmp
loope
lcall
mov
sub
add
aad
cmpsb
ss
mov
ja
mov
repnz
insb
push
lret
pop
into
pop
std
xor
add
int3
ja
je
je
adc
pushf
lods
cmc
dec
cli
pop
pop
xchg
mov
dec
inc
dec
xor
testb
push
xor
push
dec
ljmp
xor
stos
ret
lahf
or
push
inc
pop
pop
les
sub
and
mov
fstps
mov
dec
adc
lods
sbb
mov
arpl
sbb
shlb
lods
add
or
loope
jge
jmp
mov
imul
inc
dec
mov
cs
cmp
fldl
in
mov
movsb
add
mov
pop
xchg
jo
pop
cmp
jb
fwait
mov
push
popl
aam
dec
push
push
cld
hlt
lock
sub
dec
add
test
jns
push
mov
int
jns
fsubrl
inc
sti
add
shlb
stos
sub
fmull
pop
lea
jno
and
push
pop
jbe
and
cmp
nop
daa
inc
stc
fbstp
sub
xor
fwait
mov
jns
orb
daa
sahf
movsl
or
ret
push
daa
adc
mov
cmpsb
pop
pusha
les
push
rorl
lcall
aaa
cwtl
fisttps
out
fs
hlt
mov
cmp
out
push
in
ret
mov
pop
dec
cld
xlat
sbb
mov
xor
cs
cvtps2pi
mov
or
int
inc
test
lea
sahf
mov
xchg
xorb
adc
fbld
cmp
fstpt
dec
mov
cmp
jno
mov
icebp
mov
pmaxsw
outsb
push
jecxz
push
int
sbb
or
js
cmp
hlt
jecxz
xor
jmp
les
inc
dec
movsl
and
lret
xor
jo
test
shl
push
lahf
cs
xchg
ficoml
add
push
xor
adc
cmpsl
pushf
xor
aam
int
xchg
dec
and
push
ljmp
xor
xchg
add
stos
add
cmp
xchg
ss
popf
shlb
out
pop
xchg
fwait
stos
xor
mov
cmp
pusha
jne
mov
bnd
push
xchg
mov
loope
sbb
cmpsb
and
jmp
mov
mov
xchg
add
lods
cmc
inc
jo
inc
imul
fsubrs
shll
ret
jno
andl
push
and
imul
dec
cltd
mul
jge
fiaddl
xor
gs
sbb
or
mov
outsb
mov
pop
mov
dec
in
aaa
sub
sbb
jo
push
mov
loop
sub
cmp
pop
jg
in
add
pusha
cmpsb
xchg
mov
fcmovb
sahf
push
imul
enter
dec
out
out
stos
cwtl
xchg
xor
sub
pop
adc
mov
xor
add
push
das
mov
xchg
pushf
andb
stos
movl
enter
jb
fimull
fwait
dec
in
ret
es
mov
jp
add
gs
syscall
push
mov
fsubs
sub
mov
dec
sarl
xchg
xor
sbb
es
xchg
or
fldt
xor
jge
mov
dec
aad
sub
push
imul
fistpll
pop
mov
dec
jns
ja
mov
mov
inc
ds
pop
inc
mov
lcall
inc
xlat
iret
inc
loop
jo
outsl
test
das
or
bswap
cmp
inc
call
sub
jbe
pushf
jno
mov
cmp
pop
push
cmc
insl
jmp
stc
outsl
or
popf
lods
das
mov
insb
push
nop
adc
lret
inc
jmp
dec
mov
aam
push
bound
pushf
sub
mov
inc
dec
push
test
sti
cwtl
test
jp
jle
lods
jg
xchg
nop
icebp
xchg
or
adc
stos
xor
xlat
mov
push
repnz
mov
jno
mov
bound
andl
incl
imul
cltd
idivl
mov
lret
dec
leave
jo
dec
add
popf
iret
mov
clc
mov
add
inc
push
outsl
fmuls
jae
jmp
xor
mov
sbb
xlat
mov
push
mov
inc
inc
inc
jb
adc
xchg
int3
sbb
out
push
out
adc
push
fs
sbb
call
push
push
mov
inc
xlat
cmp
xor
jae
orl
push
mov
dec
mov
fldenv
addl
jl
jno
mov
dec
mov
icebp
sahf
inc
mov
push
and
loop
test
mov
test
imul
aad
popf
std
clc
fmull
mov
xchg
jge
cmp
dec
sbb
mov
sub
mov
daa
xor
jbe
aaa
or
mov
out
adc
outsb
xor
adc
pusha
js
inc
cmpsl
in
mov
pop
js
and
sbb
daa
jp
pop
jno
fstpt
sti
pop
nop
rolb
mov
cmp
lret
jns
mov
fistps
inc
or
imul
cmp
test
jae
sub
pop
mov
fcomi
fcompp
or
and
jge
xor
cli
sahf
jl
add
jae
out
les
lcall
insb
das
dec
mov
imul
stc
mov
pop
addr16
out
mov
push
sbb
shrl
jne
xor
call
out
pop
arpl
push
inc
stc
xor
movsl
jmp
cmp
sub
sbb
lahf
scas
cmpsl
sbb
es
cld
cwtl
es
int
sarb
lcall
sub
pop
jo
adc
call
es
push
adc
inc
dec
jne
fcoml
das
fdivrs
lcall
in
inc
sub
xchg
dec
jg
arpl
stos
mov
loop
dec
jmp
outsl
add
sbb
pushf
sahf
and
add
inc
outsb
pop
dec
les
popa
pop
dec
pop
jae
pop
adc
xchg
mov
int3
add
mov
or
iret
and
aam
sub
add
xchg
add
sbb
cld
out
mov
and
jmp
xor
aas
lahf
push
scas
adcl
call
cs
clc
aad
adc
loopne
lcall
inc
rolb
ss
sub
dec
push
out
stos
xlat
mov
add
loop
je
nop
adc
mov
jae
jne
in
adc
add
mov
repz
lods
faddl
mov
hlt
push
decb
cmp
fdivrl
and
mov
cmc
push
cwtl
test
ljmp
adc
out
mov
in
xor
lods
call
in
int3
call
push
jne
fdivrs
addl
fstl
sbb
and
in
ror
or
lods
das
adc
and
mov
pop
jl
aam
iret
outsb
pop
mov
bound
cmpl
iret
jae
mov
and
xchg
icebp
push
mov
cmp
and
sub
pop
or
sbb
popf
movsl
cltd
and
aam
movsl
sub
nop
and
xchg
jl
or
fdivrs
mov
sarl
test
xor
add
repz
out
dec
inc
xor
jo
outsb
mov
cmp
cld
cmp
bound
mov
dec
xchg
leave
add
pop
es
pop
dec
pop
sub
cli
call
dec
into
push
je
in
inc
add
repz
pop
dec
sarb
mov
jmp
pop
bound
adc
jne
mov
mov
dec
hlt
leave
daa
rcrb
jle
cmp
jecxz
jg
ret
xchg
push
xor
and
push
test
mov
cmpl
push
mov
aam
mov
sbbl
dec
int3
mul
xchg
dec
aam
and
dec
test
xchg
mull
arpl
dec
in
mov
xchg
push
or
decb
aaa
cmp
xchg
jge
lret
adc
movsw
pop
ja
insb
mov
dec
repnz
and
je
mov
push
sub
dec
test
scas
xor
fcoms
lret
or
mov
xlat
fwait
jmp
loope
jb
jecxz
xor
das
lahf
enter
pop
mov
aam
stos
inc
push
jnp
xor
ret
adc
push
add
mov
mov
mov
add
mov
std
fisttps
lods
loopne
lods
cmp
inc
sarb
cltd
cmp
insl
sub
mov
lock
mov
mov
fists
mov
bound
xchg
inc
addr16
rorl
push
fmuls
fwait
lods
mov
les
adc
js
movsb
iret
sub
std
and
jno
dec
dec
je
mov
lret
jmp
test
pand
dec
mov
scas
mov
lret
xchg
mov
ret
xchg
pop
clc
push
pop
push
push
test
jmp
push
test
icebp
lret
stos
fs
add
aam
jle
rcll
add
out
or
lret
xchg
dec
sbb
xorl
arpl
pop
out
add
inc
mov
inc
rcrb
xchg
lock
daa
cmp
cmp
pop
xchg
popf
add
sub
dec
pop
repz
fcmovnb
add
repz
push
out
mov
aad
xor
das
pop
xor
sarb
jae
movsl
xchg
data16
add
scas
dec
mov
sysexit
and
fisttpll
and
loop
jmp
divl
push
xlat
push
aas
adc
dec
stos
dec
inc
sub
mov
sbb
mov
xchg
cmp
lcall
dec
fwait
popa
xlat
inc
cmc
pusha
shrb
jle
jge
outsb
shrb
rol
jg
cmp
lea
fcmove
jp
mov
xchg
pop
shlb
lods
lea
movsl
arpl
subl
pop
pop
xchg
or
repz
push
in
fwait
js
cmp
sbb
cli
movsb
cli
xor
into
xor
lea
nopl
xchg
jae
repz
xor
pusha
notb
jns
mov
sbb
ret
adc
push
ljmp
sbb
dec
insl
or
xor
jp
mov
xchg
push
or
mov
in
mov
cmpsl
push
mov
add
pushf
sarb
sbb
mov
mov
imul
fisttpll
fidivs
std
movsb
std
mov
xchg
xor
lea
lock
ret
pop
cmp
into
and
push
pop
mov
adc
sub
and
out
rcrl
cli
mov
stos
add
ret
dec
icebp
fs
icebp
push
and
inc
arpl
cwtl
xchg
ljmp
jae
ja
sbb
inc
fwait
xor
fisttpl
popa
add
test
inc
and
push
xchg
aas
mov
and
mov
mov
add
scas
aas
push
sbb
cltd
jae
xchg
xor
mov
sub
xor
push
fsubp
adc
add
cld
imul
mov
pushl
in
lods
mov
dec
std
stos
notl
pop
jnp
sti
xor
push
sub
xrelease
jo
shl
pusha
push
in
jmp
dec
pop
rcrl
cmp
add
pop
fsubrp
test
mov
cs
iret
mov
jo
push
dec
dec
andl
ret
cmp
fwait
xchg
daa
test
iret
in
pop
out
push
inc
xor
push
or
jmp
les
xchg
rolb
lret
and
cwtl
adc
or
or
ds
mov
or
jmp
push
fldcw
mov
cld
mov
cmp
aas
es
mov
ss
pop
lea
jecxz
fwait
scas
gs
xorl
shl
dec
mov
xchg
push
les
or
loopne
adc
xlat
ja
push
push
test
into
repz
mov
rcrb
out
sahf
loopne
pushf
ss
es
out
inc
and
mov
jne
cld
rcr
mov
xor
jno
jbe
adc
ret
faddp
rclb
cmp
xorl
notrack
push
add
cmp
inc
dec
pushl
rcrb
adc
fimull
mov
dec
repnz
out
clc
aam
lock
xchg
stc
jle
xchg
rcrb
sub
dec
inc
sbb
mov
add
xchg
dec
pop
xor
xchg
mov
roll
cli
mov
sub
out
jns
push
inc
bound
dec
lret
jne
fwait
aas
mov
or
xchg
sub
xchg
ss
or
xchg
add
sbb
in
jge
add
xchg
call
inc
mov
sbb
xchg
mov
mov
aad
and
mov
push
inc
rcll
cmp
cmp
pop
xchg
incb
xlat
jmp
dec
mov
arpl
fisttpll
lret
inc
cmc
push
jmp
and
sbb
mov
dec
inc
mov
jnp
add
iret
add
ret
jbe
lahf
pop
repz
faddl
out
popa
cmp
lcall
add
dec
mov
mov
dec
mov
rcl
pop
and
or
and
or
loope
sub
jmp
xchg
add
out
sbb
jl
push
pop
stos
fs
sbb
inc
stos
lahf
sbb
xchg
insb
jnp
mov
jmp
dec
mov
jne
popf
test
dec
cmp
leave
insl
clc
pop
repz
inc
pusha
jl
pop
mov
enter
push
fsub
inc
adc
cltd
pop
jno
jbe
in
xchg
dec
cmpsl
pop
xchg
leave
xor
mov
xchg
imul
adcb
add
mov
mull
cmp
mov
out
loopne
inc
fisubrs
mov
sbb
xchg
pop
sub
imul
pop
xchg
mov
inc
call
les
mov
movl
dec
add
loopne
push
movsl
adc
mov
push
or
mov
jo
add
xchg
mov
xor
out
inc
cmp
pop
jmpw
fsubl
inc
inc
xchg
arpl
push
dec
xchg
inc
mov
jecxz
int3
or
jl
daa
js
dec
sub
daa
jb
scas
dec
jp
and
push
insb
mov
or
adc
inc
mov
dec
adc
dec
pop
out
popf
stos
adc
mov
xlat
arpl
arpl
imul
mov
add
xchg
pop
and
and
leave
pusha
inc
mov
sbb
enter
imul
push
testb
dec
sub
outsb
es
mov
das
pop
fs
xor
std
cmp
cmp
shrl
fwait
adc
aaa
leave
lea
add
mov
test
xchg
ficompl
push
mov
loop
out
and
mov
scas
movsl
shl
add
aam
push
xlat
xor
loope
das
sub
fistl
inc
pop
xchg
jnp
xor
inc
sarl
rclb
and
imul
sahf
sbb
pop
cmp
ret
jns
sub
mov
fcmovnb
push
insb
jb
cmp
dec
loope
push
pusha
mov
out
inc
enter
cltd
xchg
sub
and
lea
cs
cmc
loope
cmpsb
jmp
ret
mov
dec
test
lea
xchg
adc
mov
xlat
xor
sti
mov
nop
xchg
sbb
xchg
cmp
fwait
add
pop
xor
jne
sub
push
xchg
jl
sub
fsubrs
call
data16
pop
loopne
cmp
and
mov
pop
dec
adc
int3
sbb
mov
mov
and
jne
jle
lahf
mov
sbb
cmp
push
or
inc
or
inc
dec
stos
add
sarl
out
mov
clc
jo
fbld
hlt
movsl
test
sub
je
and
sub
sub
stc
mov
mov
incl
jl
mov
inc
push
mov
mov
cli
add
xor
and
jp
aam
loop
jno
leave
or
shll
fwait
movsb
fwait
mov
dec
jg
stc
cmp
pop
inc
jne
out
cmpb
jmp
adc
sti
mov
fisubl
jle
pop
or
push
and
movsb
popf
stos
shll
sti
out
lods
cmpsl
addb
shlb
pop
jno
mov
and
adc
clc
jmp
mov
rorb
mov
adc
cmp
test
jmp
incb
and
js
jno
jmp
dec
sub
rorl
dec
fwait
cli
lea
push
sti
subl
xor
leave
movsl
mov
lds
scas
mov
ficoml
adc
int3
clc
cld
and
call
sbb
fwait
sub
enter
sbb
in
aad
dec
adc
xor
or
cmp
orb
inc
pop
iret
add
cmpsl
call
mov
pop
push
or
push
out
add
and
xchg
lea
cmp
add
es
jl
or
aam
jns
adc
adcl
ds
jge
adc
mov
adc
jae
adc
or
shlb
mov
fcompl
adc
ret
adcl
push
xor
jecxz
mov
das
xor
in
and
lret
pop
xchg
cmp
mov
ret
dec
int
cmpsl
xchg
shrl
imul
mov
out
inc
inc
or
fimuls
or
fdivs
outsb
xlat
out
adcb
test
iret
mov
daa
mov
pop
push
pop
les
shll
jo
stc
fimull
inc
mov
push
lods
sbb
adc
lahf
into
cmp
in
pop
test
mov
mov
pop
push
jns
mov
cltd
icebp
es
insb
xchg
std
mov
or
je
push
dec
and
mov
test
adc
pusha
jns
pusha
push
cltd
sub
jp
sbb
cltd
adc
and
jo
or
andb
popa
lcall
pusha
cmp
sahf
sbb
mov
sbb
in
pop
jae
out
mov
xor
fstpt
push
in
jbe
ret
fsubs
movsb
xchg
mov
push
adc
mov
xor
inc
test
call
cmp
aad
xchg
and
push
popl
mov
repz
sub
and
out
adc
shll
push
mov
xor
mov
aas
out
lahf
jge
aad
pop
push
sub
lcall
arpl
jp
notl
inc
insb
fiadds
sub
mov
cmpsl
enter
int
sub
pushf
aam
jne
sbb
in
or
push
repnz
orl
dec
push
xchg
push
sub
sbb
cmpsb
push
push
dec
cmp
xchg
xor
pop
mov
test
mov
lea
stos
push
pop
mov
push
lcall
sbb
imul
pop
mov
ja
int
gs
test
call
jnp
mov
ds
rdtsc
loop
mov
mov
stc
jg
mov
ret
int3
call
daa
cvtpi2ps
jp
pop
push
mov
sarb
push
inc
test
cwtl
mov
iret
outsb
sbb
and
std
cltd
xchg
cmp
mov
and
jecxz
mov
adc
in
jne
jae
sarl
xor
and
jl
outsb
adc
je
inc
mov
aam
ror
je
mov
les
movsl
xor
mov
and
pop
mov
movsl
out
inc
jae
scas
shll
sub
shll
sub
test
imul
jmpw
xor
adc
cmp
jecxz
push
jbe
in
inc
cmp
shl
rcl
cmp
in
hlt
shl
mov
repz
and
adc
lcall
stc
sub
pop
sub
or
rcl
std
dec
into
ljmp
jb
ret
sbb
pusha
rcll
hlt
jo
je
jne
lods
int
addb
loopne
aam
add
push
bound
int3
pop
jae
or
mov
sub
push
adc
add
jmp
adc
ret
aaa
push
jp
jno
sub
sub
sub
mov
pop
loope
cmp
and
bound
sbb
jmp
mov
mov
test
add
repnz
loope
push
faddl
repnz
enter
mov
fwait
inc
stos
push
mov
inc
iret
mov
insb
out
in
rol
imul
adc
sbb
iret
ret
xlat
icebp
pop
mov
ret
jnp
fwait
dec
inc
add
adc
mov
and
jne
lods
cmpsl
mov
xor
jmp
stc
push
sarb
pop
sub
int3
xor
jge
cmp
in
mov
aad
and
add
test
inc
jp
mov
insl
out
dec
add
hlt
mov
jle
call
loop
ffreep
mov
loop
push
out
daa
add
in
fldln2
scas
cmpsb
aad
pop
mov
insb
push
loop
jp
js,pt
and
push
orb
fiaddl
fsubrs
addr16
shll
pop
cmp
out
ficomps
inc
adc
sub
push
xor
and
js
jnp
cmpsl
rcll
outsl
or
mov
call
add
mov
dec
jae
pop
pop
xchg
pushf
jb
enter
dec
testl
dec
mov
pusha
mov
xor
cmc
xchg
les
int3
loope
mov
inc
jbe
pop
mov
inc
cwtl
jl
push
divl
push
outsb
and
sub
dec
jo
add
jnp
int3
or
aaa
imul
stos
aam
and
and
icebp
mov
push
and
mov
in
loope
in
inc
fcmovnbe
jnp
insl
or
add
pop
pop
aas
imul
push
xchg
popa
mov
xchg
iret
mov
mov
lea
sub
pop
cmp
dec
je
shll
mov
scas
adc
lret
mov
aaa
inc
das
in
pop
pop
cmpsb
xchg
push
sub
ljmp
cmp
jae
movsb
cmpsl
iret
inc
ret
jae
std
loop
mov
adc
add
loopne
push
adc
rol
add
jns
dec
scas
adc
lods
ja
stos
push
add
outsl
jle
cmp
or
dec
inc
fdivs
shrl
inc
aas
mov
jae
outsb
jb
mov
stos
xchg
mov
mov
and
mov
movb
data16
fildll
lret
cltd
jns
ror
or
push
cmpsl
leave
jp
inc
imul
imul
mov
cli
notb
fldenv
dec
sbb
aad
xchg
mov
mov
stc
outsb
fistpl
inc
xor
pop
in
fxtract
rorb
jne
popl
dec
arpl
stos
jmp
rolb
mov
pop
adc
mov
and
inc
xor
mov
push
mov
insl
in
mov
out
out
push
in
push
jb
sarb
adc
hlt
cmp
jp
imul
mov
sub
dec
jno
xchg
mov
pushf
and
in
xchg
sub
aaa
adc
rolb
push
insb
sbb
in
loop
dec
or
inc
mov
xchg
pop
add
shlb
outsl
ljmp
mov
addl
inc
add
jmp
xchg
ret
ja
jne
mov
test
pop
push
cld
bound
imul
sbb
mov
push
xor
jge
adc
test
adc
in
and
inc
jge
scas
sub
popa
enter
std
pop
xlat
mov
and
pop
jl
imul
daa
test
xor
mov
testl
scas
gs
es
shlb
subl
out
mov
sahf
push
mov
jecxz
sub
leave
outsl
and
sbb
mov
jmp
xor
test
and
or
das
jb
lret
and
ds
rorl
sbb
jecxz
icebp
subb
in
jb
jae
test
dec
mov
or
mov
rorl
or
inc
lea
mov
repz
bound
dec
out
pop
leave
out
xor
sahf
out
xchg
add
aam
sub
inc
stc
pop
cmp
dec
mov
mov
jae
xor
mov
int3
push
mov
clc
inc
push
xor
or
aaa
hlt
sub
dec
add
sub
xchg
jb
aaa
add
push
das
sahf
jnp
fsubr
dec
mov
sbb
pop
jae
jnp
stos
cs
xchg
jge
cmp
nop
jecxz
mov
jns
jae
pusha
dec
inc
pop
xchg
data16
adc
fisubl
jg
jne
push
sub
jecxz
dec
or
push
xchg
pop
mov
jge
ja
call
insl
or
jae
test
dec
xchg
or
leave
into
sbb
adc
aaa
fistps
ret
push
cmpsl
std
mov
xor
cli
sub
pop
or
repnz
pop
xchg
test
std
mov
and
cmp
pop
stos
popa
in
add
rcr
into
inc
daa
int
pop
xchg
shlb
sub
lcall
clc
in
js
xchg
imul
push
rcll
jle
pop
aam
fisubrs
jbe
xchg
stos
clc
mov
xor
pop
outsb
dec
ja
pop
push
cmc
lods
aam
jle
dec
je
mov
mov
sbb
es
sti
push
push
xor
mov
push
cli
dec
test
cmp
les
xlat
mov
pop
mov
push
push
or
movl
loopne
sub
xchg
pop
xchg
and
xchg
lret
mov
cmp
lock
or
mov
movsl
cmp
in
sub
movsl
push
jo
and
push
in
iret
mov
pop
in
aad
xor
push
sbb
sbb
test
into
sbb
and
mov
nop
cltd
pop
cmp
push
sub
pop
pop
mov
pop
sbb
inc
loopne
out
or
and
jl
pop
fildl
or
out
cs
dec
or
sub
sbb
jmp
ret
pop
arpl
cld
sbb
cld
lea
jbe
jecxz
and
pop
fildl
into
add
add
lea
cmp
mov
xor
inc
pusha
dec
fldl
andl
rolb
mov
or
and
scas
orb
mov
mov
pop
add
xchg
pop
stc
pop
cmpsl
pushf
in
mov
shll
cwtl
ss
dec
inc
cmp
pusha
bound
jl
add
mov
xchg
or
sbb
pusha
mov
xchg
fistps
sbb
sub
scas
loopne
xchg
pop
js
sti
and
sar
movsl
jo,pt
mov
mov
pop
nop
and
sub
movsl
filds
or
dec
ficompl
adc
mov
popf
insl
fistl
xlat
ror
dec
or
xor
ja
bound
sub
sahf
push
xchg
icebp
pop
outsl
lahf
jae
cmp
sahf
sub
hlt
adc
fadds
mov
inc
jg
scas
dec
shll
push
xchg
test
sub
dec
xchg
push
xchg
out
and
fwait
sub
dec
filds
mov
mov
inc
test
shlb
mov
mov
push
roll
mov
inc
je
fsub
clc
mov
je
mov
test
idiv
imul
addr16
dec
or
adc
das
jnp
sbb
lret
call
test
adc
imul
xor
nop
jb
ljmp
xchg
add
mov
push
pop
dec
lock
out
pop
cwtl
cld
push
sub
aam
dec
or
iret
mov
add
dec
lret
mov
dec
mov
bound
push
lods
insb
aaa
and
cmp
insb
mov
sub
outsl
xlat
push
or
mov
pop
int3
std
loopne
jmp
test
xchg
xchg
inc
sub
jg
int3
ds
das
mov
inc
or
fs
push
mov
pop
pop
inc
and
xchg
mov
mov
fwait
cmp
iret
mov
adc
lock
jne
ficompl
jbe
outsb
lcall
imul
aad
dec
mov
pop
add
mov
out
icebp
xlat
ljmp
cs
insw
rcll
out
inc
je
push
mov
fldcw
or
fs
and
cli
gs
shrl
jle
xlat
xchg
lock
aas
dec
pop
mov
xor
cmc
xor
js
pop
adc
pusha
xchg
out
inc
clc
push
inc
push
sar
sbb
nop
jecxz
test
sbb
movsb
cwtl
mov
mov
loop
or
or
push
push
mov
imul
sti
push
popf
push
mov
psubsw
inc
call
jle
push
icebp
fnstsw
mov
fdivrs
mov
mov
out
xorl
or
cmp
push
sub
pop
mov
xchg
in
jle
lret
sub
pop
mov
aam
and
leave
in
les
push
mov
or
mov
cmp
loope
mov
mov
enter
aas
icebp
aad
xchg
movsl
daa
pop
shl
sub
inc
scas
mov
inc
popf
insl
loopne
je
mov
push
icebp
push
mov
pop
movsl
jns
or
imul
pop
fs
imul
data16
addr16
subb
adc
lcall
push
pop
lods
lret
ja
aas
add
push
mov
jns
gs
inc
sbb
add
adc
mov
in
ds
popa
out
mov
jl
clc
jno
mov
out
sub
mov
mulb
jae
pop
or
or
das
sbb
jnp
pushw
add
or
xchg
lods
inc
inc
add
mov
sub
xor
cmc
fbld
inc
enter
jno
sub
imul
leave
lahf
ret
and
movsb
rolb
cld
lahf
fldl
test
mov
sub
movsb
cwtl
mov
pop
stos
jae
sub
imul
cmp
aas
mov
iret
add
arpl
ljmp
xchg
sahf
insl
lahf
out
adc
mov
jecxz
scas
das
and
int
leave
sbb
fisubrl
cmp
jo
and
loopne
mov
stos
shrl
pop
lods
and
mov
icebp
mov
decb
ljmp
jo
jae
push
faddl
cs
pop
dec
pop
cs
js
jne
jnp
sub
shll
sbb
add
xor
mov
adc
jl
ret
mov
inc
rcr
jecxz
mov
jae
mov
or
cli
push
or
cmp
outsb
pop
lea
xchg
sbb
sub
cmp
inc
sbb
cmp
stos
dec
fldl
mov
rorl
fisttpll
jecxz
jnp
stc
xchg
sbb
mov
jp
fdivs
lods
adc
jmp
mov
push
mov
int3
mov
int
inc
or
push
pop
flds
sbb
lods
rcrl
dec
andl
call
aas
adc
mov
into
gs
pop
pop
arpl
stos
dec
adc
popfw
dec
mov
or
sub
ffreep
fs
mov
mov
xchg
adc
jge
ja
xor
inc
add
pushf
xor
add
mov
cmp
push
divl
int
loop
mov
xlat
inc
and
cs
lret
fs
arpl
stos
jg
faddl
sub
pop
movsb
or
scas
sub
mov
xchg
xchg
dec
stos
ja
mov
xchg
or
pop
icebp
ss
inc
lea
cmp
leave
lock
mov
mov
add
mov
xor
stos
push
mov
arpl
ja
out
int
call
loope
loop
jnp
jmp
jne
xlat
pop
shrb
pop
stc
popf
xchg
test
fmull
jl
or
and
frndint
pop
imul
pop
fnstenv
or
in
jae
add
jp
lret
xor
xor
inc
je
cmp
repz
mov
adc
xlat
aad
xlat
push
stc
sahf
sbb
sub
xchg
jae
jnp
out
shl
mov
cltd
xchg
lret
mov
cli
add
outsl
or
outsl
lock
in
cmp
push
dec
out
cli
or
adc
push
dec
stc
rcrb
push
dec
pop
mov
outsl
test
mov
adc
dec
arpl
xchg
xchg
fsubp
dec
daa
jg
xchg
clc
mov
lret
inc
daa
std
mov
out
call
fcomi
je
pop
sbb
sahf
in
test
cmpsb
mov
pop
jb
and
jle
leave
pop
jno
pop
mov
and
mov
arpl
add
lret
jbe
outsl
mov
mov
mov
inc
push
mov
or
mov
into
nop
xchg
pop
data16
or
inc
cmp
jge
dec
cmp
jge
nop
xchg
pop
inc
imul
sub
gs
xchg
cmpsl
ret
push
addr16
gs
les
popf
push
or
aaa
lea
insl
sbb
lea
in
sub
or
xor
cmpsl
mov
xchg
sub
mov
cmp
jp
in
jne
and
mov
push
dec
push
leave
sbb
out
push
pop
or
test
mov
sub
add
sbb
inc
in
imul
dec
cs
dec
xchg
sahf
fstpl
enter
mov
mov
int
add
pop
addr16
jle
and
aam
jmp
test
lods
faddl
push
ljmp
dec
mov
sbb
add
adc
in
adc
pop
or
mov
sub
fs
or
je
pop
sarl
popa
cmp
mov
xorl
sbb
mov
lods
scas
cwtl
les
js
xor
add
cs
and
dec
stos
popf
pop
dec
stos
lods
subb
pusha
fwait
jbe
hlt
xchg
in
fsts
jae
lret
push
jl
jmp
sub
pop
in
mov
inc
stos
and
jne
sub
adc
adc
in
adc
nop
dec
push
and
insb
inc
dec
in
lcall
sahf
nop
and
adc
or
insb
inc
cmp
xchg
push
stc
icebp
addr16
mov
xchg
iret
add
mov
cmpsl
mov
sub
into
pop
stos
mov
out
inc
mov
pop
jno
push
and
fld
xor
mov
outsb
movsl
dec
mov
add
add
xchg
add
sbb
pusha
or
in
pop
cwtl
sub
aas
movd
mov
stos
and
mov
pop
roll
inc
lcall
adc
jecxz
aas
mov
or
xchg
sub
test
loope
add
or
adc
cmpsb
inc
jmp
nop
push
into
mov
cmc
dec
inc
in
enter
lahf
push
pop
jne
cmp
scas
mov
mov
in
jno
dec
push
cmc
or
out
pop
or
in
inc
lahf
xor
mov
scas
cmp
jp
test
daa
in
push
inc
mov
in
push
ret
cld
sub
xchg
dec
lahf
jo
or
out
push
ja
imul
pop
cmpsl
add
pop
je
std
dec
inc
stc
add
lret
lret
mov
inc
enter
push
in
pop
fucomp
xchg
mov
lahf
cmp
mov
in
mov
cs
or
lcallw
movl
sbb
notl
call
push
mov
pop
fidivrs
out
call
imul
gs
jb
loope
add
fdivrp
add
das
mov
movsl
xchg
test
pop
sbb
inc
insl
push
xlat
je
addr16
out
gs
mov
mov
xchg
push
push
and
xlat
push
mov
stos
ficoml
leave
add
adcl
outsb
icebp
lods
bound
mov
insb
mov
jo
push
into
imul
sar
jb
xchg
push
jl
cmp
jno
dec
pop
cmpl
sarb
jns
xchg
ljmp
add
inc
pop
in
insb
out
loope
mov
or
and
adc
imul
dec
sub
and
int
mov
adc
shl
jnp
mov
add
add
push
push
sbb
scas
mov
in
adc
idivl
stos
mov
sbb
mov
mov
push
sub
mov
adc
call
adc
mov
pop
pop
lea
push
push
aad
cmpsb
push
mov
inc
or
mov
xchg
or
jl
cld
push
mov
xor
adc
movsl
ret
xchg
pop
popf
sti
mov
adc
les
adc
fcomps
xor
cmp
xchg
notl
sub
mov
test
mov
fwait
std
bound
test
mov
mov
scas
add
icebp
insb
in
xor
or
fwait
push
repz
lods
movsl
inc
sub
mov
pop
fs
in
adc
push
xchg
sbb
add
daa
pop
mov
outsl
inc
push
add
cmp
int
xor
popa
push
push
mov
mov
mov
cmc
sub
mov
push
inc
pop
add
push
pushf
or
imul
repz
sahf
repnz
push
mov
loope
aad
adcl
push
in
mov
add
adc
jle
hlt
mov
xchg
fsubs
mov
cmp
push
dec
adc
pop
insb
fcmovne
sbb
aam
faddp
and
jg
sahf
xor
nop
jne
add
repnz
fistpll
jl
cmc
loop
cmp
cltd
jb
xchg
divl
sbb
out
mov
mov
lods
divb
xchg
mov
dec
or
jle
sahf
and
mov
scas
adc
int
mov
sbb
jne
sub
xchg
mov
int
mov
push
inc
push
sub
int
sbb
je
pop
stos
sbb
lcall
mov
test
sub
loope
cli
mov
dec
mov
movsl
mov
sbb
pop
pushf
loopne
rorb
addr16
lds
mov
stc
rclb
mov
mov
hlt
xchg
dec
cmp
test
push
lds
xchg
and
bound
cltd
inc
insb
out
sub
mov
xor
jle
hlt
sbb
or
pop
pop
lret
pop
test
out
pop
aad
bound
mov
add
cmp
pop
loopne
fmull
xchg
inc
sbb
lcall
xchg
imul
cwtl
jo
repz
addb
inc
test
cmp
test
es
rcrb
inc
lods
push
loopne
mov
sub
cmp
clc
ljmp
insb
sti
or
ja
pop
je
out
mov
mov
lds
sbb
shrl
and
jnp
pop
mov
rorb
cmp
push
xor
jg
push
push
xchg
mov
lahf
xchg
mov
arpl
mov
and
nop
dec
int3
adc
jecxz
add
cwtl
inc
xor
cmp
dec
bound
jecxz
or
jmp
lahf
int3
ljmp
repz
pop
cltd
in
dec
andb
or
mov
adc
arpl
jnp
lcall
icebp
pusha
in
stc
lds
pop
out
stos
xchg
mov
dec
push
jle
xchg
jae
scas
and
lock
push
jecxz
fcompl
movsl
cwtl
data16
adc
insl
cmp
mov
arpl
aam
imul
and
inc
xchg
loop
sbbb
fisubl
pop
mov
test
ror
inc
push
pop
cmp
imul
or
push
cmp
scas
mov
or
imul
shlb
cld
lds
cmp
jecxz,pn
aad
or
aaa
lret
inc
js
addr16
cmpsl
mov
in
ja
mov
fwait
stc
mov
jl
mov
add
xchg
mov
and
dec
mov
sbb
jae
pop
movsb
stos
test
push
call
orps
pop
rcr
mov
std
push
add
fbld
loope
dec
cmp
cld
sbb
or
loop
push
jo
xor
inc
push
sarb
je
lret
ds
repz
push
out
or
jge
ret
movsb
repnz
pusha
lds
jbe
shll
add
adc
mov
mov
mov
push
cmp
rep
xchg
jne
je
push
sbb
jg
inc
popf
std
into
cmp
inc
inc
xchg
mov
and
and
dec
std
insl
jge
push
mov
cli
fs
es
jne
lcall
scas
dec
mov
xchg
into
sub
movsl
call
xor
call
sahf
fisubrl
fadds
mov
add
sub
add
sub
mov
hlt
scas
sbb
mov
mov
popa
cs
mov
jno
insl
fucom
mov
jns
push
or
xchg
cmp
mov
lahf
icebp
shr
sbb
jge
movsb
fyl2xp1
rcl
notb
loop
cmp
or
rol
out
arpl
dec
jnp
aaa
fistps
inc
xchg
rorl
test
fs
jbe
test
sub
pop
lcall
stc
test
mov
in
xchg
ret
ja
mov
in
sbb
push
or
sahf
pushf
ret
jnp
sbb
mov
and
movaps
and
xor
jo
cmp
inc
andb
gs
xor
imul
xchg
loopne
lret
mov
nop
dec
inc
xchg
stos
fnstcw
lock
out
jle
leave
fldt
xchg
push
xchg
outsl
push
pop
arpl
jbe
sub
out
xor
movsl
lds
cld
fsubs
popf
mov
lea
incb
repz
clc
loope
stos
in
insl
adc
fistpll
shlb
mov
inc
xchg
mov
add
cmp
inc
loopne
mov
push
push
inc
cld
lcall
mov
cmp
in
jo
xchg
pusha
in
jbe
testb
or
in
ret
inc
cltd
cltd
fdivrs
ja
sti
mov
sub
lahf
cmp
test
inc
cwtl
mov
inc
add
mov
pop
idivb
xchg
sub
and
mov
ss
nop
or
mov
mov
or
jno
sbb
es
or
jecxz
mov
or
daa
dec
sbb
out
pop
in
xchg
aad
xor
or
cltd
sub
push
int
push
xor
ja
je
pop
xchg
aam
out
push
sub
clc
fisttpl
cli
into
sub
stos
jg
dec
enter
sub
mov
mov
out
jns
mov
sub
and
cmpsl
mov
scas
fisubrs
mov
addr16
clc
idivb
and
out
jnp
fchs
jb
dec
sbb
inc
inc
test
pop
fadds
mov
movsl
pop
test
jo
rolb
xchg
adc
loop
mov
mov
cmpl
add
fildl
mov
pop
xor
out
js
add
xchg
aam
and
sbb
and
js
ja
cltd
cmc
cli
adc
dec
sbb
loopne
loope
pop
adc
add
insb
mov
mov
adc
or
adc
push
popf
mov
aam
push
push
xchg
and
js
sub
fs
sub
cmp
orb
or
aad
jns
fstps
jp
mov
je
in
stos
int
imul
pop
lea
pop
adc
inc
int
add
mov
loope
xchg
icebp
out
mov
push
mov
or
jnp
pop
mov
dec
xchg
jg
sti
jge
pop
dec
jnp
ss
xor
xor
xor
subl
and
sub
push
adc
push
jg
sar
inc
xchg
icebp
mov
insb
mov
loope
add
imul
daa
cmpsb
sub
jle
ficompl
outsl
leave
les
jnp
bound
mov
sbbb
imul
movsl
inc
ja
sub
test
xor
mov
popa
shrb
or
mov
mov
sub
mov
rcrb
in
call
out
mov
cmpsl
ret
add
shrl
push
ffreep
dec
add
sub
aaa
adc
jl
pop
pushl
mull
aas
adc
rcll
push
mov
and
jmp
jg
sub
mov
frstor
cmp
mov
sbb
shl
add
jl
cmc
cwtl
fstpl
jno
out
mov
pushf
add
and
xchg
in
cmp
imul
pop
fbstp
mov
hlt
xchg
mov
xchg
ss
xchg
iret
pop
icebp
add
jbe
push
outsb
xor
add
pop
repnz
dec
pop
xlat
test
pop
rol
push
fmuls
xchg
std
xor
dec
dec
lcall
mov
ret
push
sub
xor
dec
leave
cltd
jecxz
push
cmp
sbb
aaa
in
xchg
in
icebp
scas
pop
adc
inc
dec
lods
stc
icebp
fidivrl
adc
fildl
int
lods
mov
dec
addr16
hlt
mov
mov
dec
movaps
adc
ljmp
lret
fistpl
and
cmpsb
cld
outsl
mov
pop
mov
movsb
lret
or
jne
mov
mov
xchg
sbb
pop
mov
fcmovnu
mov
inc
jle
push
rcrl
into
pop
sbb
inc
mov
cli
and
scas
cs
shrb
mov
cmpl
mov
mov
push
dec
in
out
jae
push
jb
dec
popa
test
inc
and
inc
stos
xor
xchg
push
mov
mov
and
mov
push
lds
adc
sahf
cld
stos
pop
or
mov
nop
jae
xchg
mov
lcall
cmpsl
mov
jp
std
js
sbb
hlt
fiadds
clc
into
loopne
outsb
cmp
data16
jmp
mov
lods
and
dec
adc
ss
lods
loopne
dec
or
sbb
push
pand
cli
inc
cmpsl
push
cwtl
sbb
enter
cmpsl
xchg
pminub
movsb
sbb
xor
sub
sti
adc
inc
call
pcmpgtw
xchg
sbb
rol
lods
xchg
js
mov
sbb
xor
cmc
shl
loopne
lock
adc
and
inc
sahf
push
jl
clc
push
sbb
xor
out
jmp
jmp
jmp
mov
sbb
cmp
sarb
jle
aas
bound
mov
jbe
mov
push
or
cmp
sbb
in
push
mov
or
dec
cmpsb
jp
lea
cli
fcompl
xor
test
int3
cmp
in
jmp
lahf
and
stos
push
into
cmp
imul
adc
cmp
and
dec
rorl
xchg
adc
xchg
adc
and
sbb
out
cmpsb
dec
inc
xchg
and
inc
or
dec
shll
sbb
mov
data16
xchg
sbb
adcb
xor
and
mov
xchg
xchg
jo
into
shr
int
pop
pushf
insb
mov
in
cmp
lret
aad
mov
xor
mov
or
or
sbb
imul
pop
int3
rorl
sbb
xor
out
and
ljmp
repz
imulb
add
test
xchg
loope
mov
mov
cmp
mov
xchg
fiadds
cmp
test
insb
xchg
addr16
in
mov
dec
out
call
out
xchg
add
test
jne
xchg
xor
fmul
mov
int3
inc
aam
sub
pop
int3
cmp
ret
xchg
and
xchg
mov
sbb
inc
sbb
into
lret
addl
mov
pop
xor
jb
dec
dec
dec
push
and
int
lcall
xchg
sub
and
popf
mov
adc
dec
fnsetpm(287
jns
aas
and
fadds
lret
aas
pop
or
xlat
test
jns
ret
cmpl
in
into
test
adc
add
lahf
xchg
lock
xchg
shrl
pop
mov
mov
mov
js,pt
pop
xor
push
xchg
das
jle
in
adc
mov
in
jp
xor
add
add
lods
xchg
add
mov
mov
or
add
sub
push
fwait
lock
adc
shr
dec
mov
push
in
lret
outsl
movsb
cs
sub
add
pop
ret
and
lret
add
int3
mov
jecxz
mov
insl
jo
inc
mov
fldt
stos
adc
les
and
add
add
jl
clc
out
adc
and
jmp
pop
loopne
loope
mov
cmp
les
push
inc
jl
inc
xchg
pop
and
lds
inc
lret
lods
aaa
rol
cmp
je
ss
jl
add
add
mov
push
insl
repnz
xchg
in
and
js
dec
cmp
sbb
jne
fdivs
subl
and
xchg
ret
lock
pop
loop
mov
test
or
pop
rcrb
pop
inc
int
add
jmp
arpl
stos
or
inc
addb
jnp
or
pop
push
mov
in
mulb
psubq
faddp
ja
mov
ds
jmp
ja
shl
mov
cld
nop
jecxz
fdivs
xlat
int
push
inc
repz
add
pop
cli
rclb
inc
sbb
add
loop
or
mov
testb
add
cs
rorb
add
mov
pop
cwtl
xchg
xor
mov
jge
mov
add
inc
mov
bound
leave
cs
push
out
lret
mov
add
mov
and
mov
pop
iret
mov
push
and
enter
push
pop
inc
movsb
adc
and
xchg
inc
mov
shl
fwait
mov
fcoms
sarb
das
imul
dec
and
push
idivl
fidivs
pop
adc
push
aam
mov
cmp
rorb
pop
adc
mov
mov
loope
mov
adc
mov
stc
loopne
mov
mov
pop
popf
dec
insb
add
test
arpl
xchg
popf
lcall
sbb
mov
jle
sbb
jae
aaa
hlt
clc
addr16
jno
negl
push
clc
pop
add
out
lods
out
push
fiaddl
out
xor
fsubr
push
hlt
loope
aad
sahf
dec
adc
aad
mov
push
sahf
loope
enter
popf
movsl
adc
adc
sbb
lret
sbb
xchg
ja
repz
push
mov
jbe
add
mov
testb
call
rcrl
xor
mov
and
sbb
lret
ror
dec
aam
sbb
pop
jnp
push
cmp
xchg
stc
xlat
jb
adc
shlb
loope
cmpsb
push
outsl
push
in
jecxz
arpl
jmp
add
jbe
pop
mov
xchg
mov
mov
ss
sbbb
rclb
mov
cmp
fsubl
daa
data16
loope
das
mov
jle
dec
push
rolb
cmp
outsl
or
addb
pop
enter
test
adc
cmp
test
dec
sub
dec
ds
mov
sub
outsb
outsb
sbb
cmpsb
insb
dec
xor
leave
test
popa
fxtract
add
mov
jns
add
scas
jmp
jb
int
or
enter
mov
sbb
ficoms
test
subb
aam
jo
jl
and
js
push
jge
cmpsb
push
out
rcl
ja
repnz
or
mov
push
mov
jg
iret
pop
int
and
adc
xor
imul
fwait
popf
xor
mov
mov
stc
addr16
stos
or
pop
mov
sub
int3
xlat
pop
cmp
je
jge
mov
mov
inc
mov
rcrl
mov
cmpsb
pop
test
fyl2x
fcmovnu
in
stc
stc
into
jae
mov
jl
ret
mov
repz
xchg
scas
sahf
and
push
cltd
xor
out
mov
xchg
roll
push
stos
int3
cmp
das
inc
repz
rcrl
popa
push
ds
mov
xchg
mov
inc
int
xchg
push
pushf
mov
sub
xchg
add
arpl
dec
mov
int3
fs
pop
outsb
frstor
inc
jo
dec
pop
aaa
mov
sub
mov
rcrl
cmp
and
outsb
lods
lret
imul
mov
mov
fidivrs
pop
cmpsb
bound
inc
clc
loopne
insl
add
add
in
jg
add
mov
push
xor
sbb
insl
sub
divl
mov
das
iret
pop
loope
mov
pop
js
aam
in
repnz
scas
into
aaa
cmp
xor
fld1
jns
adc
xchg
or
mov
es
pop
scas
xlat
les
inc
mov
push
jge
sbb
out
ret
js
sub
push
mov
mov
out
or
adc
dec
adc
lds
cmc
sub
mov
push
cmp
outsl
dec
xchg
jp
push
jo
movsb
jle
or
fwait
and
lock
cli
add
int
cs
sub
mov
lock
movsb
jno
out
mov
insl
mov
call
xchg
dec
scas
mov
inc
fbld
and
loope
sub
mov
cmp
and
jle
test
mov
pop
xor
xor
dec
dec
cmp
or
xor
dec
jg
negb
jno
jne
xchg
inc
rsm
fs
xor
and
imul
mov
adc
es
test
jmp
push
xchg
sbb
and
xor
cmp
mov
aas
movsb
mov
xchg
jge
mov
mov
jg
jae
aas
fldcw
jle
stos
imul
or
push
lahf
mov
xchg
xchg
pusha
aam
aas
mov
bound
lret
mov
cwtl
jge
pop
mov
mov
rolb
scas
cmp
adc
ss
push
cwtl
xchg
xor
lret
js
mul
and
xchg
xchg
mov
in
xchg
cmp
sbb
ljmp
ja
mov
mov
test
mov
cmp
pop
jae
rol
mov
jg
js
jmp
ret
or
adcb
gs
add
addl
ljmp
cmc
mov
out
lahf
mov
mov
mov
movsb
add
xchg
mov
fidivl
cmpsb
dec
sarb
jg
gs
or
in
and
cmp
and
subl
push
icebp
dec
cli
imul
or
dec
fs
pop
cwtl
shll
clc
loope
mov
hlt
bnd
jge
pop
mov
push
inc
jl
and
mov
das
dec
pop
xlat
lock
jno
cli
subl
or
and
adc
out
fiaddl
test
add
pop
cmp
xchg
cmpsb
es
lcall
cli
jnp
sbb
jmp
pop
adc
push
inc
mov
hlt
aaa
stos
cmp
loop
pop
and
push
pushf
imul
cli
jns
and
js
hlt
bnd
mov
xor
xor
call
add
in
mov
out
aad
ljmp
imull
xchg
sub
mov
rol
inc
dec
aad
out
cmp
adc
push
scas
pop
dec
stc
push
fs
add
mov
or
or
dec
frstor
xor
adc
sub
jecxz
jbe
xor
rorl
sbb
cmpb
sbb
ss
mov
push
inc
mov
movsb
xchg
add
idivl
lods
sub
add
xchg
jmp
lcall
std
pop
ja
adc
repnz
lret
in
push
ds
xor
andb
mov
mov
push
or
and
mov
pop
out
test
lret
jno
pusha
mov
pop
into
inc
lea
add
aaa
mov
int
sti
lcall
pop
add
jbe
sarb
mov
fucom
scas
mov
jb
aas
pop
sub
add
fs
jge
inc
xchg
cli
pop
loopne
xor
pop
mov
xor
add
loope
loop
loopne
jb
adc
fbld
dec
out
cmp
adc
push
xchg
cli
jb
push
ds
inc
and
cmp
mov
add
in
dec
push
push
test
sub
lahf
stos
xor
or
out
xchg
add
pop
xchg
fistpll
mov
adc
jmp
mov
ss
in
test
jmp
push
mov
cltd
out
scas
xlat
cmpsl
outsb
sti
hlt
inc
mov
scas
dec
pop
imul
pop
adc
mov
jp
add
lret
add
sub
mov
sahf
push
mov
push
fwait
xor
daa
sahf
dec
xorb
ret
adc
das
imul
out
outsl
push
jbe
mov
sarl
mov
jecxz
cmp
jmp
pop
xchg
push
andb
repnz
leave
ljmp
mov
lods
stos
push
sbb
sbb
cmpl
cmp
mov
pop
mov
xchg
jecxz
stos
fsubs
hlt
int3
push
xchg
jno
adcb
outsl
or
jbe
jnp
inc
sub
sbb
out
xchg
shl
pop
adc
add
jne
push
lods
in
sub
sub
jge
xchg
mov
icebp
mov
test
or
ljmp
insb
sub
sbb
lock
sub
cmp
sub
or
stc
int3
sub
scas
call
lods
jmp
loopne
adc
aaa
xchg
push
stos
push
call
adc
imulb
enter
shrb
xor
xor
jecxz
adc
loopne
adc
enter
outsl
pop
orl
leave
int
jo
jge
call
sarl
outsl
mov
adc
or
or
je
xchg
scas
or
cs
aaa
inc
out
pop
push
jae
test
inc
or
insb
and
icebp
scas
lock
imul
ss
push
jg
lods
fcmovne
sar
lods
sub
popa
aas
xlat
pop
inc
mov
test
lea
dec
hlt
ret
mov
out
lea
outsb
and
fcompl
enter
loope
mov
sub
ud0
and
adc
cmp
aad
aaa
std
icebp
xchg
js
sub
stos
lods
sarl
cmp
mov
and
xor
iret
sti
fildll
and
and
mov
mov
inc
dec
repnz
jo
sbb
stc
ret
loop
bound
mov
sbb
ret
lahf
jmp
je
repz
scas
push
jle
pop
clc
push
or
lea
mov
aaa
xchg
adc
cwtl
ret
pushf
dec
mov
xor
xlat
pusha
hlt
xchg
mov
adcb
movsl
aad
cs
add
xor
les
and
and
js
sarb
inc
pop
adc
push
iret
adc
dec
enter
outsb
aaa
mov
push
sub
pop
in
in
in
stos
push
lahf
jecxz
pop
push
mov
mov
xor
mov
push
ror
jmp
rcr
push
cld
and
mov
push
jp
mov
in
xchg
lcall
scas
stos
adc
lods
adcl
dec
lods
mov
int
test
dec
icebp
jnp
scas
adc
sub
xchg
xor
add
inc
or
jne
adc
jae
and
xor
sub
xchg
and
mov
push
outsb
scas
lret
xor
mov
sbb
xchg
cs
js
jo
fcmovnb
insb
inc
loop
pop
hlt
ss
sahf
cli
jno
xchg
lret
jle
and
bswap
das
sysenter
sbb
test
xchg
sti
dec
push
jbe
xchg
push
je
jo
pop
mov
in
mov
lcall
cmp
pushl
repnz
push
adc
fisttps
fstp
dec
cltd
lods
data16
movsb
mov
cmc
xchg
lods
mov
add
loope
lods
sub
jns
or
daa
jecxz
cmp
out
psubq
into
jno
nop
sbbb
fstl
fsub
rorl
out
loopne
push
loop
lret
sti
xchg
xlat
imul
xchg
push
jnp
push
inc
popf
mov
divb
addr16
add
jge
repz
xor
or
push
push
repnz
jne
loopne
mov
pop
xchg
rolb
mov
cltd
mov
mov
cmp
mov
sbb
sbb
add
or
push
xchg
jae
fincstp
fsubr
inc
mov
dec
dec
lods
push
push
pop
inc
sbb
mov
pop
test
jl
cmp
pop
mull
pop
stos
hlt
xchg
fwait
or
ss
mov
lcall
or
and
jmp
aas
loopne
push
inc
out
ret
and
lods
clc
sbb
xchg
aaa
or
sahf
jle
lods
cmp
stos
scas
inc
fsts
sti
fcmovu
and
fstpl
fcompl
daa
loopne
dec
ljmp
mov
imul
sbb
push
outsl
sub
fsubs
repnz
fisttpll
push
mov
cwtl
push
jne
pusha
inc
xor
lret
scas
mov
enter
push
or
sbb
insb
aad
add
cli
dec
ror
mov
xor
mov
push
and
fisttpll
dec
dec
stos
xorb
lods
pop
fwait
add
aaa
inc
daa
pop
jle
push
icebp
push
cmpsb
and
add
pop
clc
xchg
mov
add
inc
add
fiadds
add
frstor
push
decb
push
dec
cs
pop
dec
fistl
mov
aam
out
xchg
pop
ficomps
fildll
add
adc
and
jns
cli
add
push
fisttpll
dec
xchg
jge
fcompl
inc
arpl
fxch
hlt
dec
faddl
ret
adc
insb
xchg
inc
push
add
mull
in
sub
mov
adc
ja
and
lret
mov
push
arpl
mov
push
pop
cmp
adc
inc
mov
mov
fbstp
out
loope
mov
mov
cmc
sti
iret
insb
lret
mov
and
rcll
sbb
cmp
into
mov
or
inc
in
fisttpll
adc
and
dec
or
ds
testl
cmp
cwtl
out
adc
xchg
aad
ljmp
mov
test
vrcpps
jae
cld
xchg
mov
lahf
std
test
jne
sarl
movsb
in
rcpps
fcomi
out
cli
mov
aam
sbbl
and
bound
out
inc
insl
pop
aaa
icebp
in
pop
icebp
xchg
mov
imul
cmp
imul
xor
and
lahf
mov
les
adcl
pop
xchg
repz
in
xchg
xor
mov
popf
les
insb
sbb
pop
cmp
mov
int
jo
cwtl
or
inc
popf
cmp
add
popa
mov
lods
outsl
push
push
adc
jbe
lret
mov
out
call
popf
jne
push
pushf
in
xchg
or
xorb
pop
mov
lods
sub
in
test
dec
sub
fidivrs
xchg
lods
insl
jo
popf
inc
outsl
sub
jnp
mov
inc
es
cwtl
cmc
and
hlt
mov
stos
jle
fadd
rcrl
das
hlt
popa
cli
aaa
shrl
mov
cmp
jb
jae
sbb
out
out
mov
jp
icebp
fcoms
push
jne
in
fimuls
pop
cmpsb
std
fdivrp
in
js
inc
mov
loopne
sahf
sbb
rcrl
testl
aad
insb
lea
inc
cmp
xor
cmp
mov
mov
xchg
sbb
scas
push
cmpsl
and
mov
add
sub
pop
movsb
hlt
mov
idivb
outsl
adc
cli
mov
stos
shlb
sbbb
lret
mov
or
cmc
mov
aad
sbb
jg
mov
mov
inc
and
inc
sbb
jbe
xlat
mov
test
sbb
jb
mov
ret
in
in
mov
push
dec
jb
sub
lret
repnz
pop
out
or
push
inc
imul
clc
mov
cmp
inc
jae
xchg
xchg
js
push
xchg
push
mov
jo,pt
jmp
jns
addr16
lcall
mov
dec
xlat
mov
cltd
mov
push
cltd
stos
jmp
adc
cwtl
nop
dec
jno
xor
sbb
xor
orl
mov
xor
sahf
cli
xchg
aam
mov
sub
sub
cmovns
lock
jmp
xor
mov
inc
mov
jo
mov
jb
jae
mov
adc
inc
mov
sbb
sub
arpl
loop
ror
lods
xchg
and
int3
push
pusha
cmpsl
mov
aam
pop
jns
sti
push
push
sbb
mov
incl
jno
xlat
mov
push
sahf
bound
popa
insl
xor
js
push
fldcw
in
push
adc
cmp
push
push
scas
imul
mov
out
into
lock
bound
jecxz
repnz
or
jb
hlt
pop
fists
ret
in
and
jno
into
cmp
push
stos
arpl
pop
mov
or
dec
or
ret
mov
lcall
pop
jnp
sub
ljmp
adc
and
and
and
push
push
lds
repnz
xlat
les
stos
sbb
jae
xchg
movsl
fwait
inc
divb
push
andl
and
jo
jno
lea
jns
jmp
xor
adc
loop
cld
fiaddl
icebp
mov
out
mov
sub
cli
popa
and
stos
addr16
jg
int
mov
arpl
addl
shll
xor
lods
cs
xchg
sbb
dec
popa
sti
adc
arpl
icebp
mov
scas
shlb
or
in
push
inc
lret
jo
pop
xchg
stos
sahf
pushf
xchg
mov
xorb
aas
mov
das
and
fstps
mov
mov
xor
aam
jmp
outsb
mov
jle
xchg
popf
sahf
mov
sub
aam
in
out
sub
jl
outsl
scas
mov
adc
mov
sti
jo
loope
lods
dec
xor
and
mov
sbb
std
push
insl
mov
adc
inc
push
xor
cmpsb
lret
out
fwait
aad
xchg
adc
jp
lret
jo
pop
ficomps
dec
lods
pop
pop
sbb
outsl
mov
sahf
xchg
dec
or
arpl
inc
out
sbb
lock
pop
cs
adc
xchg
cs
aas
xchg
cmc
ljmp
nop
add
cmp
dec
ljmp
imul
imul
sub
mov
in
xchg
fcompl
in
adc
dec
jge
sti
inc
roll
rcrb
mov
stc
add
rorb
mov
ss
cs
sbb
mov
mov
push
es
int
insl
inc
ljmp
xor
orb
xor
or
gs
pushf
inc
mov
inc
or
mov
in
jo
inc
out
aaa
shrb
int
lds
xchg
pop
pop
and
xchg
ss
mov
inc
insb
push
and
sbb
sbb
cmp
adc
js
jge
imul
adc
xor
push
xor
scas
pop
sub
jle
movsl
push
xchg
mov
pusha
cmp
push
pusha
inc
adc
pop
leave
mov
mov
mov
push
int
in
inc
imul
and
xchg
pop
mov
or
sbb
mov
je
pop
mov
in
mov
inc
jecxz
mov
std
pop
lods
lcall
test
or
scas
mov
xor
rcrl
dec
fnstenv
sub
loopne
imul
jl
iret
sbb
sbb
jae
out
cwtl
lods
add
scas
lcall
sbb
loop
and
pop
cmc
enter
cwtl
enter
mov
push
xor
add
sbb
stc
xchg
pop
test
fs
xor
dec
jmp
scas
or
dec
call
push
out
push
mov
xchg
jle
jge
or
in
jns
lret
dec
cs
mov
daa
adcb
jns
dec
sarb
or
out
mov
pop
enter
fdivr
mov
roll
mov
clc
fdivrp
mov
inc
pop
sbbb
cs
mov
lods
shrb
jge
inc
push
sub
inc
mov
test
mov
insl
mov
mov
popf
in
and
icebp
cmp
ret
lahf
adcb
cli
xlat
fisubrl
outsb
or
loope
icebp
out
sarl
int
pushf
dec
cltd
pop
jb
daa
and
in
js
pushf
data16
rcrb
mov
xchg
pop
insb
pusha
bound
mov
cmpb
call
inc
sahf
notl
jl
pusha
ret
and
inc
mov
divb
dec
inc
inc
pop
sbb
fmuls
rcrb
pop
push
ret
cltd
outsl
lahf
lods
xor
xor
add
mov
jmp
push
cmpsl
cltd
mov
push
adc
sahf
imul
push
js
xor
test
xchg
pop
orl
cmp
movsl
gs
out
add
mov
xchg
sbb
mov
xchg
dec
mov
jle
push
inc
mov
das
xchg
mov
sub
dec
icebp
mov
mov
daa
pandn
add
minps
leave
loope
je
shrb
mov
pop
jnp
or
pusha
add
mov
xorb
sub
in
sbb
js
xor
mov
sub
pushf
addl
or
mov
in
mov
jge
in
faddl
inc
sbb
jecxz
les
cmpsb
xor
daa
sahf
cmp
cmp
scas
addr16
xchg
inc
sbb
cs
jns
adc
and
out
inc
or
enter
sbb
inc
je
adc
mov
aam
mov
mov
aaa
popa
cld
jns
sbb
repz
pusha
test
cmpsb
lret
cmpsl
fwait
adc
add
jns
out
inc
sahf
pop
lcall
inc
mov
flds
sbb
add
fistpll
mov
and
into
xchg
lcall
dec
cmp
mov
stos
add
push
cmp
mov
enter
push
leave
enter
scas
hlt
rorb
add
pop
enter
inc
popfw
xlat
cmp
insb
add
jae
add
inc
dec
repz
cs
imul
dec
stc
jnp
fstl
push
jecxz
or
mov
sub
lods
push
jb
push
out
cli
fsubr
in
shrb
sub
sbb
ret
pop
and
jp
scas
jno
pop
in
lds
jge
xchg
mov
icebp
pop
mov
rolb
adc
fs
icebp
xchg
jmp
jge
inc
mov
or
or
or
in
and
pop
mov
test
add
jg
test
andb
ret
mov
je
insb
fwait
adc
inc
sub
enter
popf
cs
adc
cld
fdivl
xor
fwait
dec
dec
cmpsb
es
mov
pop
push
test
loopne
xchg
imul
cmp
xor
adc
shl
or
ret
cs
fcmovnbe
and
sti
fucompp
pop
popa
hlt
rcrl
mov
dec
inc
sahf
add
sub
sub
dec
jl
jecxz
cs
test
adc
leave
inc
call
dec
ss
pop
insl
push
aas
loop
jno
repnz
dec
jnp
cli
xor
cli
call
push
bound
mov
lret
inc
sbb
mov
or
pop
jne
lods
insl
jne
ret
push
dec
pop
ficoms
and
jnp
xorl
pop
lock
xor
sbb
addr16
shll
stc
push
std
mov
xchg
cmp
jo
vmovsd
adc
pop
cli
or
mov
pop
aam
imul
lock
test
xorl
aam
add
mov
out
mov
addr16
pop
jne
std
add
jl
mov
dec
pop
out
push
shrb
cmpsl
out
lods
ror
sbb
out
jnp
add
into
or
sbb
pop
sbb
imul
js
mov
adc
out
pop
push
orb
jbe
xor
bnd
cmp
push
inc
jl
sarb
cmovo
aas
popa
andl
push
in
test
lret
cmpsb
scas
stos
push
mov
xchg
pop
xchg
xor
js
dec
mov
scas
ret
xorb
les
add
pop
out
push
pop
out
lcall
sub
int
jo
mov
cmpl
ja
popa
jne
jno
push
push
cmp
sarl
test
nop
imul
cld
inc
pmullw
sub
ss
pop
mov
and
mov
ljmp
sbb
adc
scas
repnz
popf
in
sti
clc
lret
in
jecxz
xor
and
scas
lret
dec
adcl
pop
insl
cs
into
scas
lds
out
cwtl
add
lret
stos
adc
sbb
fwait
bswap
sar
cmpsb
and
loope
andl
and
ss
lcall
test
pushf
xor
data16
pop
mov
add
cwtl
xchg
pop
imul
sarl
mov
cli
or
cmc
sahf
jg
or
push
hlt
cmp
movsb
dec
mov
in
scas
testb
outsb
jmp
jo
sbb
mov
inc
movsb
mov
stos
cmpl
or
mov
popa
in
in
inc
and
stc
xchg
test
pop
pop
jp
xchg
mov
cmp
je
repz
stos
fistpl
js
inc
pop
push
adc
pushf
test
xchg
in
jg
mov
out
push
xchg
lret
inc
jg
cmp
mov
or
xchg
leave
stos
scas
mov
mov
fwait
jns
mov
or
jns,pn
pop
pusha
push
int
insl
mov
dec
mov
inc
push
ds
adc
stc
andb
fstpt
in
mov
fbstp
call
xchg
lcall
jne
imul
rol
popf
aad
addr16
repz
and
bnd
jg
jns
aad
jo
pop
les
mov
pop
ret
movsl
nop
aas
sar
mov
insb
in
insb
test
dec
push
adc
fisttps
xchg
push
mov
mov
and
div
aas
sar
pop
mov
xchg
arpl
out
inc
sbb
ficomps
ljmp
scas
ret
test
filds
jge
cs
fiaddl
icebp
cwtl
outsb
pop
movsb
dec
iret
aad
pop
inc
xlat
mov
mov
inc
xor
loop
push
push
in
je
xchg
xchg
adc
lds
rorb
pop
in
pop
jo
gs
enter
out
bound
dec
mov
out
adc
mov
bound
add
outsb
ja
jg
and
xchg
lret
neg
les
and
cld
jge
in
pop
fistps
pop
outsl
inc
jnp
mov
scas
lock
subl
mov
rcrb
fwait
or
xor
sbb
popf
ret
lcall
int3
inc
xor
jne
fwait
jb
testl
sbb
std
jg
js
or
fucom
dec
out
add
repz
in
hlt
pop
add
int
dec
ret
gs
and
xor
jge
aad
repz
not
and
and
es
insb
sarb
mov
adc
mov
mov
and
iret
imull
enter
das
ret
mulb
das
pushf
adc
add
lret
xlat
shrl
sbb
pop
sub
push
lods
cmp
cmp
loope
add
xchg
pop
iret
insl
pop
in
stos
pop
pop
popl
mov
cmp
and
pop
call
xchg
hlt
xchg
lcall
movsb
inc
cmpsl
cmp
cmp
sub
fcompl
test
inc
gs
aas
xor
outsb
push
xchg
cmpsb
sti
in
stc
lods
out
cmp
inc
cs
pop
idivb
enter
pop
adc
rolb
or
inc
push
ficoml
jge
fs
clc
push
sti
std
xlat
xor
push
pushf
sahf
gs
rcrb
or
inc
dec
mov
and
pop
and
jno
inc
pop
lea
dec
or
cwtl
pop
popw
dec
or
xlat
lret
mov
in
int
and
mov
aad
mov
inc
xorb
pop
fld
or
outsb
jnp
nop
xchg
ret
cmpsl
sbb
push
jl
mov
ja
in
cmp
ret
jl
ja
dec
or
mov
addr16
cmp
gs
jle
add
add
add
jo
and
jne
scas
roll
pop
mov
jle
jae
push
sbb
popa
into
fcmovbe
and
inc
daa
xchg
shll
es
imul
add
es
or
dec
sbb
test
add
xor
or
mov
xor
ret
lods
mov
repz
and
sub
jbe
dec
mov
mov
or
adc
inc
arpl
test
gs
adc
and
cmpsb
xchg
add
dec
adc
sub
sub
stos
jecxz
jno
movb
and
lock
jmp
pushf
je
enter
movsb
popa
cmp
xor
mov
pop
imul
test
xrelease
dec
dec
mov
push
mov
jae
hlt
mov
pop
jne
push
je
outsb
loopne
arpl
pop
xor
scas
add
pop
shll
push
and
xor
ret
aad
pop
xorb
stos
cs
fsubrs
jg
mov
data16
aaa
dec
popa
xor
push
pusha
ss
lea
pop
or
insb
cmc
rcll
fstp
movsb
add
sbb
mov
nop
sbbl
lret
rcl
mov
call
cmc
je
mov
fldl
pop
sub
das
jmp
lock
fistps
and
or
dec
fwait
sar
loope
mov
addb
mov
xor
mov
aam
inc
fdivrl
mov
imull
dec
xchg
push
pop
sbb
adc
enter
mov
pop
jne
push
or
fs
ljmp
icebp
xchg
mov
loop
jns
sahf
xor
xor
push
sbb
xchg
xlat
mov
or
mov
mov
pop
cwtl
jae
pop
movsl
test
notl
push
das
sub
test
and
cmp
xor
lds
mov
and
in
sbb
cmp
out
jnp
sbb
xchg
lret
sub
js
movsl
adc
stos
jbe
cmp
aas
daa
xchg
fmuls
add
mov
cli
jns
sbb
insb
and
jp
add
jle
sub
out
pop
testl
sbb
xchg
pop
dec
mov
sub
cld
popf
dec
lods
push
rcl
or
pushf
lea
cmpsb
fstpl
push
data16
push
push
inc
lahf
inc
ss
imul
mov
pop
sub
arpl
mov
daa
stc
or
jns
mov
lods
or
add
xchg
mov
fs
or
or
xchg
clc
or
xchg
mov
insl
loopne
movsl
sub
cmp
xor
sbb
cmpsb
mov
inc
or
xlat
add
in
icebp
arpl
mov
mov
cltd
cmp
fs
shrb
inc
mov
xor
lds
inc
gs
outsl
lret
xchg
sub
fs
pop
ja
lret
cld
dec
mov
lods
cmp
ficompl
mov
push
fidivl
sub
sub
into
jp
aaa
mov
adc
icebp
stos
jae
inc
mov
dec
repz
mov
mov
xchg
xchg
cmp
ljmp
jnp
fcomps
aad
lret
inc
lahf
fldl
pusha
mov
sahf
push
xchg
ds
ret
sar
ret
nop
clc
xchg
and
pushf
popa
cltd
lock
dec
pop
lock
ss
push
sub
sbb
push
adc
pop
pop
aad
loopne
pop
iret
dec
lret
mov
es
push
inc
push
movl
push
xchg
dec
and
lds
cld
int
into
dec
int3
andb
lret
sub
xor
pop
pop
mov
add
aaa
test
imul
xor
pop
dec
mov
mov
pop
pop
inc
mov
jmp
mov
cmp
pop
je
mov
or
hlt
cld
mov
xor
ds
shlb
imul
mov
test
fwait
mov
hlt
push
mov
int3
xor
pop
je
xor
mov
jge
xor
inc
icebp
inc
scas
fisttps
adc
cwtl
mov
sub
out
call
dec
mov
int
pop
jecxz
or
je
hlt
mov
or
pop
rol
fs
adc
mov
es
scas
fucomi
repnz
adc
adc
jmp
sbb
xchg
movsl
jbe
test
mov
int
aaa
add
imul
ljmp
in
xchg
sbb
adc
cmp
test
lock
lahf
jmp
inc
pushl
mov
xchg
mov
dec
int3
cmpsl
sbb
lods
dec
rclb
adc
daa
and
push
std
lret
cmpsb
repz
mov
dec
or
pop
and
push
int
jecxz
scas
mov
add
lret
xor
pop
repnz
insl
xor
xlat
test
aas
in
cld
idivl
test
scas
inc
inc
xor
cmp
adc
movsl
out
mov
scas
xor
loop
in
in
push
push
rcrl
inc
adc
clc
ds
dec
test
cli
sbb
loope
fcomp
fisttpll
jmp
dec
repz
adc
ljmp
or
xchg
sub
int3
fidivrs
in
mov
shll
mov
ffreep
ja
fidivs
push
xchg
mov
push
pop
mov
push
icebp
rorb
aam
mov
in
fldenv
pop
test
pop
scas
test
jno
mov
pop
xchg
mov
repnz
sahf
cmp
adc
or
icebp
pop
test
or
mov
rcr
rcrb
cs
sub
fnstenv
cwtl
cmc
stc
push
jmp
out
call
pusha
popa
jae
mov
div
loopne
shl
pop
les
sub
das
xor
lea
aaa
inc
mov
idivl
ljmp
das
xchg
lret
movd
sti
sbb
mov
mov
jl
ljmp
popf
push
icebp
cwtl
fs
clc
and
ds
adc
xchg
jp
push
sbb
inc
jg
or
adc
stos
push
cmp
fdivrs
call
cmp
jnp
fiadds
scas
addl
rcr
sbb
aaa
pusha
xchg
fcoms
repz
jl
add
sbb
clc
loope
mov
or
lret
stc
movsl
insl
jecxz
jns
loope
mov
data16
daa
lahf
inc
repz
into
test
aas
sbb
das
leave
mov
mov
mov
sub
jmp
cmp
add
enter
mov
adc
fimuls
test
addr16
jle
and
mov
popw
or
xchg
loop
stc
rcll
mov
mov
jo
addr16
iret
nop
xor
cli
popf
push
jmp
mov
mov
fsubp
and
into
in
add
idivl
dec
lea
mov
enter
fildll
test
xchg
push
xchg
ljmp
sub
and
cmc
lahf
dec
mov
stos
cltd
jns
pop
pushf
jb
std
jmp
dec
cli
sub
xchg
lret
cmpsb
add
or
dec
rclb
mov
jne
jne
shll
pop
stc
sub
lret
data16
lock
xchg
cli
pop
sub
cmp
in
pop
xor
repz
sbb
punpckhwd
popa
sbb
les
push
in
mov
dec
push
les
lods
jne
into
cmpl
jge
mov
fs
ds
pop
imul
dec
scas
inc
cmp
jle
pop
and
fbstp
mov
arpl
xchg
enter
ljmp
inc
push
inc
mov
mov
pop
dec
mov
movsb
jmp
dec
cmp
movsl
sbb
jmp
ret
mov
in
shll
pop
push
sbb
minps
jg
pavgw
jno
popa
dec
out
call
adc
xchg
mov
fbstp
cmp
xchg
push
pop
ret
sbb
cmc
shrl
sahf
jne
push
add
lahf
lods
movsb
or
jno
mov
adc
mov
add
xor
mov
jmp
jns
sub
xchg
call
ret
or
push
xlat
pop
fnstcw
rorl
cmp
orb
into
jne
mov
pusha
daa
sahf
leave
xchg
inc
xchg
cwtl
lods
arpl
or
stos
ja
das
ss
out
ror
test
pop
int
inc
iret
lea
add
clc
pop
daa
or
aas
pop
rcr
pop
sbb
push
shlb
mov
pop
xor
js
or
in
push
mov
cmp
xchg
dec
insb
cmc
cmpsb
inc
mov
jbe
icebp
cmpsb
out
fimull
mov
test
into
insl
push
pusha
add
jl
pop
repz
cmp
outsb
push
imul
and
into
cmp
hlt
push
lock
lods
test
fisttpll
cmc
add
pop
pop
ja
imul
mov
fsts
inc
adc
inc
jmp
shll
aam
lods
lock
arpl
mov
sarl
es
add
ja
mov
mov
das
or
inc
or
pop
push
leave
xor
stc
mov
imul
xchg
dec
dec
pop
pop
fldl
pop
push
sahf
inc
mov
and
pop
mov
xor
popa
jbe
adc
pop
and
sub
leave
cmp
mov
sbb
int
sub
outsl
pop
sbb
add
dec
sub
popa
sarl
ss
pop
xor
mov
loop
pop
push
pop
mov
and
and
cltd
or
mov
ja
push
enter
lret
fisttpll
sti
movsb
mov
dec
adc
add
inc
sub
dec
mov
xchg
out
adc
into
scas
fs
stc
cwtl
or
cld
jl
push
repz
inc
add
inc
mov
clc
nop
inc
les
andl
nop
xor
mov
imul
push
bound
sbb
js
mov
arpl
mov
aas
xor
es
std
jns
pop
in
scas
inc
and
es
push
das
stos
data16
pop
add
sbb
pop
cmp
test
addr16
jmp
icebp
pop
mov
mov
xchg
fists
outsb
cmp
je
icebp
pop
nop
xor
scas
fsubl
pop
push
sbb
ret
js
jnp
cli
and
les
or
lahf
sub
jns
pop
lea
popf
inc
adc
pop
or
xor
sahf
incl
or
loope
push
lock
jae
repnz
repz
xchg
jbe
lods
out
insl
or
in
lahf
push
mov
test
push
pop
bound
mov
or
push
and
shlb
sub
pop
pop
inc
pop
xor
mov
xor
push
pop
repz
adc
int3
cmpsl
lds
jno
xchg
ss
xchg
ss
pop
xchg
notb
leave
pop
mov
jns
les
stc
sub
xchg
cld
mov
stos
cmp
jmp
shll
push
jle
cmc
jp
mov
jecxz
cld
stc
xor
test
push
push
jecxz
cmp
fstp
jle
sub
cmp
push
outsl
jne
adc
inc
xchg
jnp
sbb
cld
push
jo
and
pop
ljmp
mov
xor
pop
adc
mov
sbb
add
xor
mov
mov
cmpsl
or
shl
jmp
movsb
out
and
xor
loopne
imul
push
and
addb
negb
fnstcw
unpckhps
sbb
and
or
push
ret
gs
rcr
and
adc
mov
mov
es
dec
add
test
pop
push
lcall
cmpsb
sbb
dec
pop
call
outsl
std
or
test
mov
fs
fbld
mov
or
lods
xor
cltd
push
cmp
ds
repz
mov
out
jbe
lcall
bound
hlt
xor
das
sahf
and
mov
push
lcall
push
inc
xchg
mov
mov
es
lock
test
or
vmread
out
fisttpl
and
arpl
jbe
incb
xor
je
and
shlb
test
sti
js
adc
pop
jo
push
sbb
mov
and
push
and
mov
movb
lods
lret
lahf
xchg
ljmp
sti
loope
bound
add
push
pop
adc
or
nop
xchg
movsl
mov
int3
test
jb
add
mov
aam
jne
stc
xor
loop
push
movsl
sbb
dec
dec
popa
or
pushf
lods
mov
fstps
mov
jle
mov
outsl
inc
jne
cmp
push
dec
incb
cld
push
outsb
mov
mov
fldenv
outsb
xorb
jle
xchg
repz
jae
jl
loop
cltd
fs
adc
sbb
fwait
mov
push
clc
dec
jo
jno
fistpll
jge
into
lahf
popa
repz
jl
es
cmp
jecxz
jle
sbb
fwait
gs
stos
mov
jmp
inc
cmp
in
mov
adc
xor
sbb
inc
pusha
addr16
pop
adc
ret
lods
mov
cmp
push
inc
push
scas
stc
jb
sbb
cltd
fisttpl
repnz
cltd
fld
pop
xor
lahf
aam
mov
push
pusha
test
adc
xor
out
or
xor
rorl
enter
adc
pusha
jg
inc
xor
repnz
and
icebp
out
sub
or
fsub
jle
addr16
pop
cmp
xchg
mov
jb
sbb
cld
mov
rep
jae
xlat
enter
mov
pop
push
loope
subl
pop
mov
mov
push
or
mov
xor
dec
cmp
pop
dec
mov
pop
pop
jmp
in
aaa
fwait
jecxz
in
cltd
fmuls
out
jmp
sub
pop
ja
cmp
add
inc
push
popl
shrl
mov
aam
aas
pop
ja
inc
push
test
cs
fxsave
lock
fsubr
cmp
mov
inc
push
das
cmp
dec
inc
sbb
xor
out
imul
andb
xchg
ret
dec
jne
ficoms
cli
loopne
insb
and
fiaddl
mov
sahf
or
or
fisubrs
lock
popa
stos
and
lahf
in
cmp
iret
xchg
testl
repz
push
cmpsb
sub
movsb
xchg
mov
xor
dec
stc
cmp
subps
xor
in
stos
repz
push
jbe
loopne
or
loope
jno
leave
flds
call
xchg
movsl
cli
dec
addr16
filds
cltd
leave
sbb
jg
jle
pop
jns
mov
iret
cmp
fnstenv
mov
stos
jo
adc
pop
xchg
pushf
jae
jne
pushf
push
push
sub
adc
scas
sub
cmp
int
movb
adc
mov
loope
push
iret
sbb
jns
aas
cld
jp
push
jle
mov
push
dec
dec
fistpll
mov
loopne
push
dec
xchg
and
aaa
lahf
pop
orb
insb
adc
test
jl
xor
mov
inc
sbb
push
xor
mov
mov
sub
jb
sbb
jno
int
insl
inc
test
pushf
in
fcompl
jo
xchg
ss
cli
gs
cwtl
icebp
movsb
rol
leave
cli
jo
aam
pop
mov
cmc
dec
jle
js,pt
fisttpl
jbe
xor
into
dec
sarl
or
das
cmp
and
daa
jle
daa
dec
aad
fmull
push
sub
das
mov
stos
pop
adc
je
inc
add
dec
cmp
std
jae
push
leave
shrb
push
je
cld
movsl
xor
or
movsb
mov
aaa
and
push
iret
mov
sub
shll
cwtl
push
jae
mov
aaa
push
xchg
add
jmp
sub
hlt
add
sub
icebp
lods
cmp
mov
loopne
sub
into
cmp
std
adc
push
or
sub
and
pop
lock
mov
mov
jae
xchg
popa
sub
add
loope
cmp
adc
pop
rcrb
push
leave
xor
xchg
bound
and
xor
cmp
or
push
out
andb
arpl
inc
jmp
pop
das
or
ret
pop
cmovb
mov
repz
ret
mov
frndint
ss
aaa
lea
sub
adc
dec
inc
fucomi
mov
xchg
cmpsb
movlps
ja
xchg
lods
and
cmpsb
push
or
cmp
mov
or
lods
or
inc
imul
xchg
xchg
push
cmp
ret
cli
outsl
js
out
mov
out
pop
test
dec
and
and
jmp
das
imul
aas
cmpsb
adc
aad
mov
lds
xlat
sub
pop
lcall
shll
in
pop
xchg
aas
jno
jnp
leave
jbe
mov
stos
jle
push
popa
add
cmp
adc
cwtl
inc
cltd
enter
push
and
xor
push
and
sqrtps
xorl
int
xor
mov
repz
cmp
out
add
idiv
loop
sub
jg
aam
out
mov
cmp
mov
movsb
outsb
cltd
insl
fiadds
xchg
xchg
ljmp
sub
pusha
pop
imul
addb
popf
jbe
incb
mov
outsl
rclb
idivl
mov
jl
subb
push
mov
mov
mov
pop
fnstenv
addl
lds
cwtl
ja
scas
lahf
cmp
out
cmp
pusha
scas
push
push
dec
and
mov
mov
sub
add
sub
pop
jmp
pusha
lock
repz
add
nop
mov
loope
push
cmpsl
ds
aaa
cmpb
push
aam
aad
aam
das
jns
test
adc
out
xchg
je
daa
mov
shll
insb
and
js
or
out
cli
xchg
pop
sahf
fidivrs
or
or
lods
mov
cmp
cmp
or
xchg
pop
jae
cmp
out
cmp
sub
sub
add
mov
in
pop
sub
out
movb
mov
cmpsl
pushf
pop
push
in
pop
jg
push
cwtl
jg
subb
adc
scas
inc
dec
inc
mov
push
push
mov
loope
sub
xchg
and
adc
dec
xor
in
mov
fmul
jl
xor
sbb
mull
fmull
mov
sbb
loop
out
ret
push
pop
orb
rorl
mov
std
xor
cs
cs
aam
inc
xchg
xchg
xchg
jae
les
pop
jp
jle
stos
inc
jg
mov
popf
jbe
and
adc
jp
adc
sbb
pop
push
inc
shrb
pop
scas
xchg
bound
mov
sbb
dec
sub
dec
aas
lock
rorb
adc
cwtl
jl
jns
aas
incl
mov
popa
das
fucomp
xchg
pop
test
add
movb
and
jo
in
jp
jecxz
jge
cmp
jns
mov
fwait
mov
mov
enter
mov
nop
sub
fsub
xchg
pop
xchg
push
lods
movsb
mov
stos
and
popa
cmp
mov
loop
push
lret
dec
or
test
and
jge
ja
cmp
mov
das
divw
shl
push
push
popa
and
ss
jb
sbb
outsl
daa
and
cmp
and
icebp
lret
and
rclb
inc
pop
vmread
mov
mov
lods
imull
popa
lods
aaa
jb
mov
mov
clc
adc
mov
shrl
xor
ret
cmc
fiadds
int3
mov
mov
fstpl
add
inc
xor
and
cmp
xlat
dec
stc
sbb
cmp
shrb
out
movsb
add
ds
in
and
jnp
dec
jg
push
iret
jno
pop
pop
add
push
popa
repz
or
clc
insb
mov
mov
inc
mov
mov
fldl
frstor
pop
in
push
mov
cmpsb
mov
fldenv
pop
or
xor
and
cmpsb
data16
movsl
inc
aas
inc
leave
pop
mov
or
mov
or
push
js
into
lods
sahf
call
add
int3
mov
test
inc
and
es
das
dec
movsb
shlb
mov
loopne
js
dec
testl
pushf
lods
mov
xor
add
mov
mov
dec
aad
leave
xchg
mov
insl
push
sbb
mov
xorb
push
lcall
sti
cs
inc
stos
insb
addl
imul
inc
xor
add
pushf
mov
flds
aaa
pop
repz
sub
xchg
popa
insl
ja
test
xor
mov
je
dec
mov
stos
out
jmp
test
fisubrl
jns
and
icebp
jle
xchg
sbb
sbb
mov
stos
test
cmp
dec
pop
jno
jae
das
fs
fmuls
dec
pop
ret
mov
fsub
adc
fimull
leave
cmp
fldenv
movsb
and
push
ja
outsl
imul
cmp
jno
scas
jecxz
add
sub
and
xor
push
cld
mov
je
ret
lds
mov
sar
ss
push
sbb
fidivs
push
xor
jno
sbb
aas
inc
xchg
stos
jmp
pop
into
loope
sbbl
pop
subl
pop
xor
mov
xor
cmpsl
mov
std
push
jge
fbstp
inc
ds
mov
addr16
mov
out
leave
fisubrl
jmp
jp,pt
loopne
mov
push
cld
and
lds
call
xchg
or
or
ficoml
mov
andb
mov
sub
inc
and
push
mul
mov
jl
outsl
loopne
movl
adc
aam
push
test
and
fldt
and
pop
and
inc
sub
mov
mov
addr16
xchg
rcr
sbb
adc
inc
icebp
xchg
mov
mov
xchg
lods
or
sbb
jge
out
lds
lcall
fldcw
popa
jnp
push
adc
adc
in
push
pop
cmp
rcrb
lock
jnp
xchg
pop
push
jge
mov
xchg
lea
out
js
adc
adc
cwtl
orb
ds
int
mov
cwtl
sbb
cmp
mov
in
mov
mov
mov
shll
je
xor
lods
mov
iret
test
or
xor
push
cmpsl
aad
int
ret
mov
js
sbb
je
es
and
xchg
xchg
push
divb
xor
stos
dec
popa
mov
sbb
popf
clc
mov
icebp
cmpsb
inc
negl
push
push
xchg
push
rorl
push
inc
mov
imul
pop
lret
cs
nop
sbb
dec
out
jmp
or
xchg
sub
mov
cwtl
enter
mov
test
cltd
leave
dec
jae
mov
ss
pop
lret
mov
push
stos
inc
sbb
test
dec
fcompl
movsb
in
pop
sub
into
and
and
inc
or
xchg
pop
fdivs
fildll
pop
push
jmp
dec
test
push
pushf
insl
add
dec
ret
push
rcrb
js
mov
jne
mulb
gs
ret
cld
pop
jnp
lahf
nop
push
out
shrb
adc
push
xchg
xchg
mov
fildl
and
push
nop
mov
mov
add
pop
insb
jg
leave
iret
xor
imul
jge
into
out
and
ss
pusha
test
out
pop
gs
repz
push
pushf
xchg
imul
dec
pop
fcmovne
mov
movsl
insl
imul
adc
pop
testl
add
mov
adc
lahf
scas
xchg
addr16
std
js
mov
lret
pop
jl
and
push
ret
cmpsb
les
pop
in
cltd
lock
scas
int3
int3
enter
out
lods
enter
dec
popf
ljmp
fcoml
and
ds
dec
mov
test
sbb
xchg
xchg
into
ret
jle
loopne
jecxz
dec
test
pop
jg
pusha
das
pop
mov
mov
mov
fstl
shlb
mov
lea
lock
xchg
jno
or
dec
sub
inc
sbb
mulb
inc
std
xchg
mov
fsubrs
das
pop
xchg
or
fidivrl
push
mov
mov
ss
lea
sbb
or
mov
inc
xor
jge
cld
shl
je
adc
inc
mov
fsub
cmp
mov
dec
pop
adc
xchg
mov
push
int3
xlat
arpl
aas
int3
out
dec
js
jmp
adc
jp
xor
pop
mov
cltd
cmpsl
icebp
dec
add
jge
push
jae
sbb
fldenv
lahf
mov
int
add
insb
loopne
pop
inc
xchg
push
cs
mov
into
jnp
add
adc
testl
repnz
push
repnz
jmp
jmp
daa
imull
or
in
sub
clc
adc
daa
fsubs
jbe
or
ficomps
ja
out
jbe
faddl
pop
lcall
stc
cmc
movsb
xchg
cld
and
fistpll
movsb
pushf
test
mov
xchg
ss
pop
pop
ds
lcall
xchg
cmp
dec
xchg
mov
das
pop
and
fadds
cmp
add
fistl
mov
mov
or
pop
sti
push
loopne
loopnew
aaa
insb
inc
sub
aam
mov
push
xchg
add
adc
mov
dec
jo
and
xchg
push
mov
aas
xchg
int
jne
jns
movsb
mov
dec
iret
dec
flds
popf
iret
popa
adc
ss
imul
dec
dec
hlt
test
repz
xchg
dec
jo
mov
imul
std
fcmovb
inc
std
bound
scas
das
sub
inc
adc
subl
rol
outsb
jb
mov
add
jno
int3
xchg
ja
sti
in
mov
jecxz
pop
jnp
jb
stos
ret
sbb
xlat
and
or
cmp
xor
rcl
test
sbb
faddl
xlat
cwtl
iret
add
dec
mov
push
sbb
and
loop
incb
dec
out
imul
fs
or
xor
xchg
mov
xchg
add
lods
fdivs
jge
mov
int
mov
dec
push
push
cmp
inc
jecxz
lret
xchg
insb
aaa
out
clc
dec
and
adc
scas
jmp
and
jns
sbb
fwait
mov
or
and
adcb
fwait
in
adc
leave
pop
jnp
popf
dec
push
divl
mov
push
out
mov
shrb
iret
dec
cmpsl
dec
push
mov
mov
cmpl
cmc
pop
and
cmpsb
call
cmc
into
dec
add
rcpps
out
jo
insl
stos
add
sbb
pop
cld
lods
cmp
dec
lret
dec
push
fisttpll
xor
cltd
push
mov
push
or
mov
pushf
les
pop
jle
sub
pop
in
inc
ret
mov
das
or
fld
rolb
incb
xchg
jp
sarb
adc
out
int3
add
cmp
add
xchg
cmp
ds
pop
cli
mov
dec
data16
mov
jnp
outsb
adc
inc
xor
loop
popa
aam
fisttpl
xchg
cmpsb
mov
insl
xor
fstpt
insl
sarb
pop
xor
sbb
loop
push
int3
xchg
inc
add
mov
ficompl
sti
inc
imul
inc
mov
leave
std
push
imul
mov
imul
stos
sub
in
sub
jnp
sbbb
insl
pop
jb
fidivrs
jns
stos
jbe
fwait
xlat
pop
jmp
push
cmp
adc
add
and
inc
in
adc
scas
xchg
jg
or
xchg
dec
jo
lock
mov
repz
scas
xchg
mov
inc
push
js
push
daa
into
inc
fsubl
xorl
push
in
cmp
adc
scas
int3
inc
dec
sahf
aas
adc
xlat
push
into
enter
mull
ljmp
rcrb
into
add
adc
sbb
arpl
lods
jb
mov
jle
fsubrs
pop
iret
adc
dec
jmp
mov
mov
arpl
xor
mov
fidivrl
xlat
dec
aam
std
icebp
jecxz
sub
or
nop
or
sub
mov
pop
dec
das
out
mov
mov
inc
pop
sub
mov
mov
or
fsubr
mov
fiadds
stc
test
stos
out
cmpsl
flds
movsl
sbb
adc
daa
andl
and
push
test
xchg
fbld
pop
cli
pop
mov
dec
mov
dec
mov
fbstp
sub
dec
fidivrl
rcll
jmp
cwtl
xor
iret
mov
cld
movsl
repz
hlt
pop
sub
mov
dec
fld
loopne
fcmovnu
dec
scas
jmp
or
xchg
cmpsb
dec
sbb
lods
shl
cmp
mov
lock
mov
sbb
jg
lock
out
sahf
pushf
mov
jb
dec
shl
mov
inc
nop
fsubl
call
push
jl
jns
mov
cmp
das
outsb
xlat
and
cld
mov
adc
adcb
pop
and
xor
sub
mov
popa
loop
pop
faddp
popf
outsb
sub
aas
and
call
jne
scas
repnz
add
in
jle
mov
inc
pop
movsb
xchg
clc
lods
add
sub
cmp
push
mov
pop
cmp
pushf
cmc
les
inc
sub
or
popa
shl
cmpl
xchg
fptan
in
ret
xor
leave
stos
data16
leave
add
cld
dec
inc
addr16
outsb
fbld
cmpsb
shl
stc
push
jl
lahf
dec
dec
mov
xor
pop
notb
sti
add
fucomp
add
flds
mov
jo
inc
xchg
ret
add
push
push
mov
jae
cmpsl
jecxz
iret
in
inc
pop
lret
pop
ljmp
and
pop
mov
mov
lret
fimull
sti
and
dec
addb
cs
scas
mov
clc
lea
fcomps
in
jge
cmp
out
xchg
or
lret
fildll
jne
lret
rcrl
rcr
popa
jl
gs
stc
push
movsl
inc
jmp
cmp
pop
xchg
cmp
mov
out
js
cmp
aas
fisttpl
add
sbb
shlb
add
push
fsubs
adc
and
je
jnp
loop
loopne
pop
int
inc
ja
lahf
mov
sub
mov
fisubs
lret
sbb
aas
nop
orl
mov
repz
dec
push
add
and
mov
orb
ret
adc
movsb
sub
das
add
in
pop
or
loope
arpl
mov
in
sbb
push
subb
arpl
jp
faddl
jb
jmp
or
adc
das
sbb
or
movsb
int3
xor
insb
adc
popa
gs
pop
adc
mov
int3
jo
imul
pop
lods
lcall
out
int
pop
test
xor
insb
sbb
pop
pop
jno
cld
imul
pop
and
mov
dec
aas
cmp
clc
sbb
push
fsubs
adc
cmp
push
push
pop
fwait
xlat
sbb
sub
xchg
jb
mov
pop
outsb
gs
sub
xchg
push
rorb
mov
adc
stc
ja
in
jecxz
mov
inc
xchg
mov
mov
and
cmpsl
push
push
cs
sbb
call
pop
mov
stos
add
jmp
mov
mov
aas
in
mov
fwait
sahf
pop
lret
sti
sub
movsl
adc
popa
inc
sbb
jg
outsb
aas
cli
jb
xchg
sub
add
out
rolb
or
xchg
inc
inc
add
out
not
stos
out
jns
jns
or
into
fnstcw
mov
shll
rol
and
inc
adc
xchg
nop
dec
add
add
or
mov
xchg
mov
dec
jnp
sub
mov
loope
fs
lcall
enter
mov
test
push
push
subl
and
fdivs
sub
xchg
imul
mov
xchg
dec
dec
mov
int
jmp
inc
xchg
jle
mov
add
xlat
testl
xchg
inc
cmpsl
cwtl
das
cltd
into
cmpsb
lret
and
jl
aaa
jne
loope
jecxz
iret
das
push
pop
jge
push
scas
aas
mov
popl
imul
inc
xor
xchg
inc
mov
push
enter
jnp
imul
insl
push
sahf
mov
int
in
xor
xor
mov
repz
imul
int
test
and
mov
shlb
into
xchg
bound
lcall
sbb
jl
and
sbb
pop
out
jne
mov
dec
lods
mov
and
pop
mov
pop
stos
pop
scas
pop
mov
mov
mov
pop
mov
pop
mov
mov
jecxz
sub
sub
rcrb
mov
mov
imul
ret
aad
jns
lds
mov
arpl
mov
inc
sub
pop
or
and
pop
in
rolb
lret
addr16
pop
or
cltd
in
add
dec
notl
ror
sbb
push
out
mov
cmp
adc
cmp
dec
adc
pop
push
adc
mov
mov
add
add
add
add
adc
sbb
adc
add
loopne
sbb
pop
gs
pop
or
int3
and
lock
rcll
sub
adc
pop
adc
shlb
cwtl
sbb
or
push
xor
xlat
add
mov
icebp
pop
out
and
mov
sbb
mov
lahf
mov
inc
adc
or
sbb
pop
dec
adc
mov
cwtl
sbb
in
movsl
adc
outsl
je
add
cmp
sarb
cmpsl
inc
push
push
push
mov
adc
scas
mov
dec
idivl
pop
ja
mov
adc
in
sbb
mov
in
mov
lods
rcr
fistpll
xor
and
push
out
mov
clc
mov
mov
adc
xor
xchg
sbb
xor
sub
test
leave
mov
sub
mov
imul
popa
pusha
xor
scas
andb
test
fists
cmp
push
mov
xor
test
test
xchg
and
mov
imul
jae
je
movsl
stc
fwait
xor
or
cmp
out
rcr
dec
sbb
shll
pop
add
mov
mov
imul
daa
sbb
mov
mov
sub
test
cltd
std
sub
inc
mov
sbb
ja
inc
inc
pop
jge
decb
ljmp
pop
movsl
out
fstps
daa
fists
sarl
leave
les
aad
jmp
and
into
neg
out
jo
mov
cwtl
push
push
out
int
lret
xchg
dec
and
adc
cmp
xchg
rol
dec
dec
inc
dec
mov
fisttpl
sbb
pop
pop
test
int3
jnp
rcl
adc
cmpsb
push
inc
push
aaa
inc
or
jle
testb
fdivs
loopne
clc
sbb
lret
aam
and
pusha
xor
push
inc
mov
inc
inc
add
loopne
addb
push
sub
jle
adc
mov
adc
cmp
add
fstl
dec
add
ret
xor
mov
pop
in
in
lret
out
pop
shrl
pop
test
push
and
stc
pop
shlb
imul
add
lea
call
adc
insb
leave
or
or
into
xchg
es
xor
jne
mov
xlat
sbb
push
jns
pop
loopne
push
ljmp
neg
sbb
cmp
xor
lods
popf
cmp
cmp
xchg
mov
xor
lock
sbb
cmp
daa
mov
loop
loopne
andl
adc
push
aaa
fwait
mov
popa
jb
dec
adc
push
and
ss
out
inc
outsl
add
pop
std
cmp
and
dec
ror
insl
in
mov
jge
pop
pusha
push
movsl
and
xchg
imul
aas
dec
mov
call
or
je
rol
mov
push
mov
test
das
adc
cmp
loop
sti
add
sub
lret
mov
imul
pop
sub
ss
popf
xor
inc
mov
hlt
adc
lcall
adc
cmp
les
rcrl
pop
jnp
imul
sbb
sahf
cltd
mov
sub
out
out
adcl
out
and
int3
push
mov
dec
repz
leave
insl
or
add
sub
xor
sbbl
test
jmp
xlat
mov
mov
jl
cwtl
adc
jle
jns
movsb
mov
and
sbb
mov
push
mov
jge
adc
sub
cli
or
cmp
test
dec
add
push
stc
mov
inc
lds
mov
mov
pop
ret
test
hlt
adc
aaa
and
lods
inc
rcr
push
movsl
pop
inc
pop
adc
push
adcb
add
mov
in
and
inc
push
jno
mov
test
cwtl
xor
dec
lods
mov
out
jae
fidivrl
cmc
inc
push
call
ss
push
mov
mov
popf
xchg
imul
out
imul
nop
jge
mov
je
out
lods
mov
movsl
jge
cmpsl
mov
fcom
inc
jecxz
aam
out
ficoms
sbb
aam
lods
std
jnp
inc
and
rol
out
and
lahf
sub
insl
fdivrl
mov
jp
fs
mov
pop
mov
hlt
data16
sahf
ljmp
cmp
testb
movsw
cmp
sbb
scas
jne
jbe
push
jns
in
xor
inc
fadd
repz
dec
jno
imul
sarl
mov
mov
jbe
xchg
gs
je
lahf
aam
adc
mov
fisubs
and
cwtl
add
stc
nop
pop
mov
rcrb
dec
xor
or
pop
push
push
inc
dec
js
les
sbb
jbe
push
fwait
xchg
adc
addr16
int3
ret
add
rcll
add
sbb
cmpsb
mov
sti
and
sub
mov
xor
mov
popf
fidivrl
sbb
call
mov
jp
lock
sub
fdivp
scas
jb
in
xchg
ljmp
shlb
out
pop
fwait
in
push
bound
dec
test
adc
push
mov
rcrb
ljmp
movsb
das
fldenv
jb
jmp
xor
das
adc
jge
push
push
jbe
jg
loop
lods
stos
xor
jp
iret
aad
loope
mov
scas
int
loopne
into
ud1
aad
fwait
xlat
iret
pop
inc
ja
and
aas
sub
rcll
dec
ja
mov
out
mov
sub
and
test
add
sub
stos
sbb
ljmp
mov
sub
sub
xchg
or
ja
mov
add
je
mov
rcrl
rcll
insl
inc
fildl
pop
clc
test
mov
jg
cwtl
out
pop
sub
add
icebp
mov
inc
jns
adc
dec
insl
jecxz
cwtl
stos
mov
insl
adcb
xchg
adc
addr16
mov
inc
jecxz
push
lock
les
jecxz
out
push
adc
jne
popa
or
pop
mov
sbb
repz
push
bound
cmp
ds
mov
call
ret
ljmp
dec
add
pop
hlt
pop
mov
jnp
push
mov
js
dec
out
jo,pt
rclb
repnz
leave
pusha
or
dec
adc
scas
jl
push
jns
or
test
dec
cmp
loopne
cmpb
fistl
push
fcomi
mov
push
aas
fiaddl
pop
mov
pop
cmp
adc
mov
aad
xor
push
ja
mov
mov
decb
sub
inc
mov
in
jne
push
jne
rolb
sbb
pop
iret
ja
loop
sub
push
pushf
dec
popa
mov
add
test
cmp
inc
mov
and
jmp
pop
mov
inc
pop
fcmove
adc
movsl
dec
stos
pop
jl
int
int
ja
mov
loopne
pop
pop
jno
imul
cld
pop
dec
ficoms
pop
jle
leave
xor
leave
je
into
decb
hlt
dec
rcrl
push
sbbb
xchg
cld
pusha
inc
stc
dec
push
push
push
jp
add
jne
sub
mov
test
dec
fucomi
sbb
popa
test
push
jb
test
jmp
push
sbb
ret
pop
dec
mov
movsb
mov
lcall
lds
push
cmp
jle
dec
push
es
fsubrs
jno
in
and
mov
dec
jl
jg
scas
into
pop
movsl
pop
testb
inc
mov
xchg
inc
and
mov
shll
fists
gs
sbb
xor
jecxz
shlb
pop
ljmp
jl
movsb
sbbb
sub
fwait
es
sbb
jle
jne
out
pop
mov
into
pop
mov
clc
arpl
fs
and
sbb
and
push
jle
sbb
sbb
inc
popa
jb
mov
test
pop
cmp
es
inc
leave
loop
rorb
sub
shlb
outsb
sahf
mov
inc
cmp
lret
jbe
jns
in
or
adc
lods
loop
jge
or
rcr
jg
dec
add
adcb
and
shlb
movsb
je
xchg
mov
out
movsl
jns
dec
dec
mov
shrl
popf
ljmp
inc
je
sbb
in
push
hlt
lock
pop
jl
jmp
out
or
mov
jae
jns
mov
add
inc
popa
loope
push
jle
aas
add
push
loope
rcl
stos
and
sbb
iret
fmull
out
mov
push
out
jmp
pop
pop
pusha
es
xor
mov
and
sbbb
inc
decl
add
mov
in
lret
or
fistpl
mov
and
outsb
bound
in
in
fst
adc
sub
popa
out
cltd
gs
jo
add
adc
jae
xor
out
mov
xchg
test
mov
fwait
aad
mov
clc
ja
aaa
push
pusha
outsb
stos
flds
lret
jne
inc
out
addr16
rcl
cmc
push
sbb
aam
into
add
or
icebp
leave
push
popf
lret
arpl
mov
ja
and
cmc
shll
mov
push
jecxz
mov
gs
es
adc
mov
loope
int3
insb
andb
sbb
into
push
xchg
in
inc
mov
sti
inc
fisubl
jg
xchg
push
idivb
aas
cmp
imul
lods
dec
rcll
sub
jnp
jbe
pop
fmul
icebp
loopne
enter
xchg
sti
push
xor
ret
mov
rcrl
jle
bound
jbe
popa
repnz
add
sbb
or
sub
xor
sub
and
insb
or
mov
pop
jbe
inc
add
inc
out
lds
cli
and
pop
pop
or
add
int
mov
ret
sub
jbe
out
lods
notl
cmp
rorl
iret
shlb
jecxz
jne
popa
push
rolb
sbb
imul
push
push
push
pop
call
mov
lock
imul
pop
sbb
out
ret
pop
loopne
lea
or
dec
sarb
mov
mov
and
jns
push
cld
sarb
je
push
in
add
nop
xor
sbb
pushf
cmp
loopne
ret
stc
xorb
pop
push
mov
adc
inc
push
mov
cmp
scas
fadds
decl
lods
and
stos
stos
adc
loop
xor
mov
in
jmp
xor
ljmp
mov
and
ja
out
mov
dec
adc
adc
popf
inc
ret
mov
aas
push
mov
aad
mov
in
cmpl
cmp
and
movsb
or
inc
iret
mov
cmp
xchg
vmovmskpd
jmp
js
jp
xchg
popa
cli
pop
sahf
lcall
xchg
addr16
loopne
and
mov
push
pop
aam
cmpsb
cmp
fists
ficomps
repnz
les
mov
jecxz
or
cmp
cltd
call
imul
mov
std
mov
jne
aaa
popa
mov
xchg
repnz
imul
aad
pusha
cmc
pop
and
mov
mov
mov
fsubs
fwait
or
gs
fidivs
arpl
sarb
pop
stos
mov
test
cmpsl
cmp
inc
out
dec
inc
cmp
pop
mov
popf
xchg
icebp
cmp
leave
jno
repz
enter
lret
sbb
adc
and
lcall
les
ds
lds
leave
push
fisttpl
fcompl
add
pop
fs
push
cmp
mov
test
pop
insb
mov
jne
or
std
add
mov
mov
shlb
add
mov
and
movsl
mov
int
cmp
test
das
jmp
push
and
aaa
cmp
jl,pn
notb
shl
and
pop
clc
mov
in
jle
ljmp
sbb
mov
xor
jnp
dec
inc
leave
gs
das
fwait
dec
jg
lcall
xor
mov
sub
imul
mov
int3
mov
xlat
bound
or
mov
push
pop
xchg
cltd
call
add
pushf
inc
xor
lret
sbb
dec
in
push
stos
jb
sub
test
pop
in
hlt
je
jae
mov
cs
sub
xor
or
inc
dec
rcr
lock
lods
push
dec
mov
ja
add
popf
mov
fdiv
popf
sub
sbb
jecxz
popf
shl
adc
pushf
and
pop
lods
outsb
pop
jne
dec
sti
jmp
adc
pusha
imul
jne
ljmp
sub
mov
push
fwait
outsb
dec
daa
push
mov
mov
divb
dec
in
jmp
popa
mov
push
ja
test
mov
aas
aad
aaa
test
aas
ficoms
inc
pop
mov
cmpsl
sub
sub
pop
cmp
outsl
in
gs
bound
mov
out
jne
in
push
pushf
daa
mov
ret
mov
lret
das
fidivrl
push
into
decb
mov
fsubl
xor
jecxz
sbb
loope
jmp
int
test
inc
std
in
ficoml
data16
xchg
and
push
push
fcoml
pop
movsb
test
cli
or
loopne
sbbb
adc
jo
cs
xchg
or
jnp
jge
in
fadd
sbb
jne
loope
arpl
and
or
xchg
adc
mov
std
adc
xchg
mov
cmpsb
lret
pop
mov
lods
push
std
sbb
jmp
outsl
ljmp
enter
pop
mov
push
call
xlat
out
gs
adc
push
and
lds
jle
lahf
test
xor
inc
pop
adc
add
pop
test
scas
ja
popl
lahf
jecxz
dec
mov
ret
aam
out
icebp
cmp
add
jmp
sbb
subl
cltd
hlt
movsl
stos
je
aad
lods
push
adcb
mov
pop
and
mov
jo
gs
jge
adc
cwtl
ljmp
lods
inc
aas
mov
xor
fwait
xchg
in
mov
sub
mov
lret
add
fildll
out
pop
or
arpl
inc
jge
xchg
cmp
int
mov
inc
les
pop
out
enter
sub
dec
outsl
and
mov
sbb
xlat
add
insb
imul
or
loop
add
cmp
in
imul
dec
inc
push
in
xor
xchg
or
xchg
cld
xchg
repz
icebp
cs
sti
sub
lea
xchg
push
xor
mov
jno
xor
int
les
outsl
lods
xlat
shrl
pop
jb
int3
out
fwait
mov
fwait
sbb
insl
xor
xor
mov
pop
jecxz
ds
mov
jmp
icebp
outsl
cmp
ss
cmp
ja,pn
sbb
inc
fiadds
sub
pop
mov
push
mov
aaa
push
push
in
jle
pop
sub
scas
pop
addb
push
push
pop
and
inc
pusha
sbb
stc
mov
jg,pt
call
test
sbb
idiv
jnp
jnp
push
adc
rcl
sbbl
lret
test
cmpsb
nop
inc
cmp
add
or
xchg
insb
dec
or
mov
insb
psubsw
xor
lods
mov
and
bound
pop
adc
outsb
mov
in
clc
int3
sbb
xchg
int3
adc
pop
cmp
pop
das
in
in
jno
cmp
xchg
and
mov
and
repz
adc
ljmp
loope
iret
jp
and
and
add
stc
rolb
lds
bt
pop
sahf
into
sarb
lods
xchg
clc
mov
lahf
sbb
movsl
jnp
idivl
pop
les
jnp
mov
xchg
mov
cmc
inc
push
push
dec
mov
sub
push
cmp
jmp
repnz
icebp
and
adc
cmpsl
pop
inc
bound
shrb
push
mov
mov
sti
and
div
cld
mov
popf
addl
cmpsl
movsb
or
popf
pop
add
xchg
outsb
pop
mov
jge
fnsave
rcrl
dec
out
bound
out
sub
pop
movzbl
pop
adc
ja
mov
subb
or
fstpl
dec
icebp
cmp
aas
adc
pop
sti
les
pop
push
arpl
xchg
std
in
adcb
xchg
inc
add
xchg
testl
push
and
sub
push
dec
cmp
jp
dec
jno
std
rcl
out
pop
lods
xor
inc
xchg
int
cmp
cmp
mov
cmp
je
imul
xor
stos
scas
stos
sti
stc
cmpsl
insl
mov
pop
push
out
decl
jns
xor
orl
mov
test
stos
test
pop
fisttpll
pop
mov
faddp
push
int3
js
shlb
aam
icebp
mov
loop
lods
mov
jg
movsl
imul
repz
ret
dec
int3
jmp
or
dec
int3
mov
mov
or
sbb
int3
clc
jecxz
adcl
leave
mov
int3
lret
cltd
xchg
cltd
xchg
sbb
xor
enter
xchg
xor
fs
lret
inc
push
dec
mov
lret
sbb
out
mov
mov
add
add
es
sarb
int
jo
sub
enter
push
nop
mov
test
mov
shrb
subb
cwtl
push
ret
ja
fdivl
inc
fldl
mov
cmp
add
mov
sub
or
dec
shlb
inc
push
add
dec
cmpl
add
adc
adc
loopne
push
fimull
push
xor
mov
and
adc
xor
or
push
add
inc
ror
and
and
sahf
xor
imul
xchg
push
es
or
adc
in
cmpsb
sub
fisubrs
or
mov
mov
fsubrl
mov
cltd
sub
mov
gs
cli
in
sbb
cltd
icebp
leave
push
ds
mov
es
sbb
xchg
mov
jb
out
add
and
data16
xchg
outsb
dec
outsl
orb
jge
fnclex
mov
pop
out
xchg
pop
stos
into
je
js
push
push
fisttps
sbb
adc
movsl
std
popa
inc
aaa
das
dec
ficomps
daa
sti
lret
jl
pop
mov
roll
dec
cmc
xchg
push
add
adcl
push
jmp
xchg
arpl
xchg
xor
hlt
and
add
dec
dec
push
dec
xor
je
push
loop
jno
loop
es
jge
and
test
dec
in
hlt
inc
test
scas
mov
vsqrtss
sub
push
popa
and
adc
out
pop
jle
lock
pop
scas
dec
int3
aam
cmp
lock
test
in
notb
into
sub
mov
jae
stos
sbb
sbb
aaa
mov
inc
fiaddl
outsb
and
dec
js
les
aaa
cmp
sub
pop
cli
das
push
or
xor
sahf
push
pop
mov
cmp
and
int3
in
mov
cmpps
mov
stos
jns
jnp
aaa
inc
cmc
cmpsl
xchg
loope
jmp
pushf
mov
jp
cmc
mov
shr
test
lock
push
fwait
sti
fnstsw
pop
mov
jg
popf
nop
cwtl
dec
mov
gs
dec
sub
out
sbb
lock
test
jg
mov
aam
sub
int
outsl
loope
jno
cmp
and
adc
xor
mov
or
adc
cmpb
fwait
es
pop
jae
mov
sub
sub
repz
test
pushf
pop
adc
insl
jl
ds
jecxz
xchg
mov
pop
mov
mov
mov
inc
or
cmpsl
inc
mov
int3
jle
rclb
push
test
dec
inc
mov
fists
dec
push
xchg
cmp
cs
dec
sub
bound
or
std
ljmp
leave
push
fsub
cmp
rorb
fs
xor
setbe
int
stos
jno
addr16
and
add
movsl
adc
add
mov
aam
adc
loope
adc
and
ss
das
cmp
mov
test
enter
inc
imul
mov
loope
ret
loop
das
mov
xchg
stos
dec
rorl
sbb
in
sub
jns
icebp
sbb
inc
icebp
into
ja
test
lods
adc
jecxz
in
and
mov
add
je
in
movsb
ficomps
fistl
mov
out
insb
dec
add
lods
insl
test
aas
das
lea
jmp
push
fadds
and
pop
das
out
pop
stc
cs
out
out
mov
ds
jae
fs
cs
orl
xor
cmp
xchg
xor
cmp
jp
stos
adc
hlt
inc
std
and
negl
rol
mov
mov
imul
jo
inc
dec
out
push
push
incb
call
aas
std
je
addr16
movsb
push
aad
or
loope
mov
mov
gs
pop
rolb
cli
ret
mov
pusha
fwait
das
hlt
cmp
js
dec
and
mov
fisubrs
movsb
dec
jbe
ficoml
popa
aas
push
pop
sub
jp
inc
andl
lods
adc
pusha
dec
sbb
fists
inc
jno
mov
mov
jns
pop
and
xor
es
jbe
jbe
jg
push
push
and
sti
jb
add
aaa
mov
and
lock
movl
xchg
push
jae
mov
dec
and
gs
mov
shl
dec
sti
push
shll
cwtl
filds
stos
fld
ss
or
insb
scas
or
pop
cltd
fdivrs
cmc
pop
jbe
aam
mov
in
sbb
mov
sarb
inc
lea
xchg
mov
cmpsl
incb
mov
mov
fldenv
movsl
jns
xor
xor
insl
fimull
xor
sbb
movsb
mov
jle
shlb
hlt
nop
dec
jnp
mov
pop
inc
xor
xlat
adc
mov
jo
out
sub
imul
scas
addr16
popf
dec
lret
les
mov
lret
mov
out
fwait
pop
es
into
cmp
out
scas
test
int3
fisubrl
enter
jae
push
or
les
adc
xchg
aad
sub
jbe
sbb
iret
icebp
lcall
cs
xchg
push
jb
sbb
xchg
insb
jl
outsb
stc
jp
fistl
ret
mov
add
cmp
push
jmp
inc
rcr
mov
jne
mov
cmp
pop
js
or
pusha
adc
xlat
pop
sub
scas
arpl
lret
ror
and
loop
mov
jbe
js
dec
shrb
insb
loop
out
xchg
popf
out
arpl
sub
sbb
and
mov
jns
addr16
xchg
popf
push
ljmp
pop
add
icebp
aad
adc
cltd
jmp
xor
cwtl
ror
push
adc
das
shl
ret
lret
sub
cld
mov
push
cmp
cmp
push
stos
jo
sahf
cmp
test
das
push
movsb
push
cs
jno
cwtl
jg
ds
das
dec
push
or
jle
xor
pop
insb
push
sbb
pushf
jnp
xchg
fsubrs
jmp
mov
and
mov
dec
leave
lock
out
pusha
fisttps
call
orl
mov
pop
mov
inc
xchg
or
cmp
in
mov
dec
outsl
or
into
insb
xchg
jl
sbb
cltd
push
mov
mov
call
bswap
shl
addr16
out
sub
fcomps
call
lcall
and
les
movl
push
xchg
test
sub
rorl
inc
test
cwtl
cmpsb
jp
and
xchg
lock
mov
and
or
add
inc
nop
push
push
nop
nop
ror
xchg
inc
or
and
and
nop
adc
test
mov
and
pop
cmpsb
cmpsb
dec
sub
int
mov
rcr
adc
add
lock
rolb
mov
shl
mov
mov
cmp
and
cmp
sbb
sub
mov
push
add
cmpl
adc
mov
adc
xor
test
add
xor
test
cltd
or
push
cwtl
cltd
mov
adc
pop
lcall
xor
mov
dec
mov
es
sbb
leave
push
adc
shlb
and
test
mov
ret
push
popa
pop
dec
sub
push
dec
sub
adc
xchg
add
mov
leave
imul
cwtl
and
andl
xor
arpl
ret
push
pop
out
inc
pushw
push
test
xchg
inc
xchg
mov
pop
aas
inc
push
outsl
loop
aaa
sbbb
xor
jnp
cld
xor
in
es
cmp
pop
sti
test
icebp
push
hlt
movsb
data16
mov
jns
inc
in
mov
jp
aaa
pushf
arpl
adc
insb
adc
pop
xchg
into
mov
mov
das
pusha
mov
ljmp
dec
xor
jecxz
or
pop
hlt
popf
lds
out
dec
push
sub
loope
in
cmp
out
cmp
cs
daa
pusha
push
lea
pop
pop
scas
testb
dec
mov
mov
jl
repnz
loop
inc
lea
push
mov
clc
movsl
into
cmc
icebp
dec
cmp
push
adc
or
stos
add
addr16
cmp
stos
fisubs
push
inc
cmpsb
std
mov
testl
mov
movsb
test
push
mov
aaa
push
js
mov
sub
jns
xorb
cmpsl
add
movmskps
or
jne
xlat
addr16
or
sbb
jnp
jne
and
jbe
xor
pop
fnstsw
inc
jl
sahf
xchg
mov
aad
mov
push
and
imul
icebp
movsl
movsl
inc
movsb
gs
idiv
and
cmp
bnd
insl
push
add
or
ds
and
decl
cs
jnp
cmc
popl
mov
fdivp
pop
jne
shlb
out
jle
popf
dec
pop
inc
in
arpl
xorl
into
cmp
inc
dec
and
adc
push
les
jae
adc
sarl
test
add
dec
adc
test
scas
dec
cmpsb
and
xorb
xchg
fdivrs
addl
into
sub
in
push
cmp
pop
mov
and
mov
cltd
sub
enter
sbb
and
cmpb
xchg
call
pop
fadd
out
je
inc
jl
push
lret
push
xchg
push
lock
adc
sub
mov
adc
insb
pop
jno
cmp
jo
dec
scas
push
jmp
jp
in
cli
inc
pop
imul
arpl
sbb
sbb
xorb
cli
pmullw
leave
in
lods
cmp
xor
pushf
in
in
sub
incb
js
jmp
xor
jae
popf
inc
mov
lahf
sub
sub
pop
jecxz
pop
jmp
into
mov
jmp
imul
or
loope
test
or
mov
std
aad
movl
insl
add
pushf
and
popa
rolb
and
xchg
push
fildll
cli
cwtl
scas
fwait
or
push
sub
add
push
pop
jp
add
push
out
sub
mov
inc
int3
pop
inc
call
mov
cmpsb
jno
sub
clc
mov
xor
mov
popf
mov
or
xor
pop
adc
or
ja
pushf
bound
ror
loope
sub
ss
cmpb
sub
dec
nop
mov
sub
aam
and
push
icebp
mov
mov
fwait
sbb
push
scas
mov
bound
cmp
aaa
push
add
std
sti
scas
sub
rcr
testb
test
clc
push
lcall
cmpsl
sbb
adc
mov
cmp
std
clc
push
fcomps
jo
cmp
pusha
push
scas
mov
sub
aas
shll
test
dec
das
or
and
stc
dec
lods
xor
fcom
test
xchg
mov
dec
test
and
ret
repnz
lods
cwtl
or
stos
or
outsl
clc
or
pop
xor
hlt
lret
insl
push
gs
mov
scas
sbb
cmpsl
mov
fs
data16
pop
cmp
ret
jae
xlat
push
adc
xor
popf
or
and
push
pop
pusha
pop
mov
enter
sbb
cmpsb
das
cmp
enter
push
daa
mov
push
push
dec
vpshufhw
add
ret
and
push
adc
test
frstor
jnp
cltd
stos
push
push
and
push
rcr
out
sbb
xchg
insl
lock
aad
jp
daa
jne
inc
mov
jae
std
sbb
jo
jbe
jl
ret
cmpb
mov
xor
push
lcall
jecxz
es
push
jo
jns
push
mov
jmp
jecxz
cmpsb
dec
xor
mov
popa
lds
inc
outsl
inc
xor
lret
lahf
in
lds
and
out
inc
inc
mov
sbb
push
or
adc
gs
xchg
xor
jp
xor
or
xor
xchg
in
add
int3
xchg
dec
mov
dec
cli
or
pop
jne
gs
xlat
sub
out
daa
fwait
mov
outsl
int3
and
into
inc
nop
lret
xchg
ja
scas
outsb
hlt
push
bound
push
cltd
inc
rep
test
lahf
adc
push
jmp
out
mov
mov
mov
repnz
push
data16
hlt
dec
fucomi
gs
jge
cmpsl
fnstsw
aad
cld
in
cmc
sbb
sarl
push
jp
fidivrl
movsb
ja
rcrl
push
push
pop
adc
imul
mov
idivb
ljmp
mov
leave
pop
sbb
popf
sahf
xor
jae
repnz
adc
cmc
inc
mov
loope
xor
xchg
add
ljmp
imul
mov
pop
test
mov
inc
popa
and
into
push
ror
outsl
and
pop
xchg
or
repz
imul
add
jbe
cmp
aas
cmp
cmc
xor
pop
jp
aaa
jge
sbb
je
dec
mov
push
cmc
mov
out
ret
fucomi
mov
xlat
fldt
addr16
shlb
das
roll
sbb
cltd
mov
mov
imul
inc
pushfw
dec
icebp
push
or
and
and
push
pop
scas
sbb
xor
push
cmp
fisttpl
stos
sub
test
pop
jno
mov
push
js
lea
fidivrs
sbb
fcmovnbe
mov
sbb
inc
fwait
or
sbb
mov
lods
jecxz
pushf
jmp
adc
dec
popf
div
lret
lret
xchg
pop
push
repnz
test
and
int3
repnz
ds
scas
push
inc
clc
xchg
push
lods
sub
ljmp
adc
xor
das
jnp
sbbb
pop
or
push
pop
int3
xchg
push
mov
xor
xor
das
out
inc
out
outsb
fmul
xchg
or
push
adcl
adc
mov
push
adc
aad
pop
pop
pop
inc
fcoms
inc
ljmp
xchg
and
fsubrl
pop
inc
test
lcall
call
xchg
pop
cmpsl
dec
pop
fmul
jae
dec
test
jg
push
jns
mov
das
pop
loopne
shrb
in
cwtl
push
int
ret
aas
or
lds
test
pop
inc
sarl
aas
inc
mov
mov
fxch
imul
sti
cmp
jae
sub
inc
das
jmp
jns
mov
pop
sub
dec
pop
sarb
cmp
xchg
jne
in
sbb
scas
leave
cmp
insl
mov
jl
xchg
pop
outsl
xor
pop
cmc
mov
ljmp
addb
repnz
mov
pop
out
enter
cmp
jle
and
scas
out
sti
xchg
aas
and
lods
xchg
sub
mov
cli
fisubl
lcall
pop
cltd
mov
daa
add
out
rcrb
shlb
mov
jge
or
fs
pusha
sub
mov
adc
ss
lods
std
xlat
push
cmp
mov
adc
sub
cmp
push
push
mov
gs
push
adc
lock
repz
push
jnp
sub
sar
inc
lea
sub
adc
sbb
test
sbb
jp
xlat
and
icebp
mov
dec
xchg
sbb
inc
test
dec
in
sti
inc
xchg
lods
cmp
jb
dec
addr16
sbb
sti
cld
lcall
mov
icebp
je
push
outsl
scas
dec
test
xlat
cmp
aad
push
pop
popf
jb
push
int3
add
jb
jp
rcll
outsl
xchg
or
sbb
lods
cmp
movsb
push
les
inc
xlat
sbb
js
add
insb
or
cmp
inc
lcall
inc
ds
add
out
fbld
push
cmp
shlb
lods
loopne
cmp
xchg
call
sbb
mov
pop
sub
testl
fwait
push
and
xchg
jbe
pop
push
and
xor
aad
jmp
lcall
mov
xchg
pop
scas
sub
arpl
mov
pop
jmp
xchg
arpl
mov
inc
mov
push
mov
bound
mov
js
or
adc
inc
mov
icebp
repnz
or
daa
je
jp
gs
mov
push
jmp
and
xchg
push
cmp
sti
push
mov
cli
jbe
cmc
movsl
stc
mov
lcall
loopne
mov
sub
adc
mov
fwait
jge
jmp
test
ds
and
dec
in
mov
mov
scas
aaa
jmp
mov
std
lahf
hlt
shlb
bound
test
test
aad
out
jae
sbb
decl
jl
sarl
decl
inc
out
inc
pop
cs
rolb
and
mov
xchg
cmp
sbb
dec
and
cli
push
out
push
dec
daa
add
insl
jno
add
movdqu
and
pop
incl
fisubrl
jne
mov
adc
mov
aas
out
scas
fistpl
mov
mov
xchg
cmpsb
mov
int3
dec
outsl
jns
stos
loop
int3
out
cld
jl
out
push
mov
xor
in
test
fsubrs
fisttpll
aam
bound
xor
testb
psubusw
call
data16
add
mov
jmp
hlt
inc
jle
shl
inc
pop
jns
iret
fwait
popa
and
test
enter
call
mov
pop
add
dec
pop
push
dec
xor
xlat
mov
add
int3
cmpsl
cltd
call
xchg
fs
mov
imul
or
pushw
rcll
inc
sub
in
test
iret
mov
fdivrl
cmpsl
pop
imul
andb
ret
and
mov
cltd
in
mov
jne
mov
mov
pop
dec
mov
icebp
lcall
les
cli
jge
cmp
xchg
or
jmp
cli
xchg
stos
insl
in
jnp
jno
push
ret
sub
mov
rcll
insb
fdiv
mov
jnp
push
insl
in
add
loop
test
inc
mov
push
shll
and
mov
mov
mov
mov
cmpsb
fsubrl
dec
mov
inc
jecxz
sbb
jmp
jmp
or
mov
pop
mov
out
push
jmp
inc
mov
mov
mov
pop
filds
dec
mov
cmp
cltd
mov
xchg
fwait
pop
and
xchg
add
xor
fidivl
loopne
insb
xchg
nop
clc
and
or
or
bound
daa
imul
mov
pop
movsl
lea
rcl
push
pop
fisttpll
shll
rorl
mov
cs
int3
adc
pop
cli
shld
mov
mov
mov
lahf
jnp
jg
cmc
out
jmp
adc
sbb
jnp
loop
cmc
push
dec
pop
jg
enter
icebp
and
pusha
loope
in
adc
push
jmpw
cmp
xor
mov
mov
daa
jnp
xor
gs
dec
mov
and
adc
dec
test
and
mov
cwtl
jecxz
pop
int
sub
fsubrs
dec
push
push
cmc
rcrl
push
mov
mov
mov
imul
push
push
shrb
aam
hlt
popf
test
out
inc
sbbl
lock
js
aaa
iretw
ret
pop
out
sub
iret
stos
or
and
ds
idivl
xor
jecxz
fsubrs
mov
stos
stos
es
out
cltd
jp
fisubl
das
jae
imul
imul
mov
ficoml
mov
popf
mov
pop
mov
xor
bound
push
insl
mov
mov
dec
out
and
sub
not
cmc
pop
xor
hlt
jg
sub
dec
cli
rclb
arpl
cmp
jne
jle
flds
lds
cmp
mov
mov
ficoml
pop
xor
loopne
mov
ret
or
jne
xor
mov
ja
pop
ss
test
push
lea
nop
ret
mov
int
push
ss
das
dec
sar
xchg
pop
ret
push
das
negb
test
jmp
insb
adc
cmpsb
outsl
xor
sub
arpl
mov
test
push
sub
clc
repnz
adc
push
jp
cmp
cld
repz
dec
cmp
out
mov
ss
in
dec
dec
mov
inc
cmp
jns
mov
dec
stos
and
andb
scas
das
std
mov
mov
pop
sbb
icebp
ja
or
fdivl
pop
pushf
call
popf
std
mov
xor
std
fs
push
mov
test
sub
and
pushf
sbb
push
cmp
xchg
nop
or
out
out
jo
addr16
lods
xchg
test
stos
in
aas
pop
in
clc
fcmovbe
jae
cmp
xchg
jg
out
jne
in
jne
jne
pop
push
push
sbb
xor
mov
and
dec
aam
sub
rcll
inc
movsb
cli
scas
mov
stc
jnp
jne
cmp
mulb
movsl
cs
adc
repnz
adc
mov
adc
addr16
repnz
test
les
mov
mov
cmp
ss
jge
stos
or
mov
rorb
aas
lods
adc
pop
dec
scas
insl
xlat
add
cli
cs
sbb
clc
cltd
repz
lds
push
lret
inc
daa
dec
jo
pop
mov
cmp
xchg
pop
imul
ljmp
lea
ja
pop
push
add
lret
mov
mov
inc
lds
imul
pop
push
dec
ss
sbb
mov
cltd
int3
push
jecxz
scas
mov
mov
sub
inc
insl
cmpsl
enter
dec
ret
adc
rcr
enter
or
jne
mov
out
lds
jmp
mov
lods
nop
jnp
xlat
movsl
mov
dec
jnp,pt
mov
into
sub
mov
shll
inc
loop,pn
pop
cmp
adc
fdivs
mov
aad
pop
push
adcb
movsb
and
xor
roll
push
fidivrl
mov
or
push
leave
adc
loop
cs
inc
into
repz
dec
xchg
shrl
adc
loopne
cli
in
xchg
scas
and
mov
cmp
jle
out
ficoml
adcb
icebp
rorb
xor
and
push
xchg
cmpsb
stos
inc
push
jns
lea
push
dec
xorb
lahf
push
add
xor
cmpsl
ffreep
scas
pop
mov
vandpd
mov
push
dec
jecxz
mov
fisubl
das
jl
in
outsl
jne
fwait
loopne,pt
adc
mov
mov
mov
xchg
dec
mov
adc
sti
push
and
shlb
subb
mov
sub
std
fsts
inc
pop
jg
fldt
shl
imul
andb
mov
in
sbb
jecxz
push
and
and
faddl
mov
movl
add
sti
testb
jle
bound
in
rcl
pop
imul
adc
dec
ja
gs
dec
in
and
and
fadds
pop
sbb
pop
push
jmp
leave
inc
iret
in
xchg
jecxz
mov
sahf
pop
cmpsb
frstor
push
xor
adc
xor
pop
mov
lcall
push
push
js
add
stos
add
push
or
adc
ljmp
pop
mov
hlt
jbe
adc
jno
xchg
imul
shlb
add
in
cmp
pop
xchg
jno
sub
xlat
hlt
lcall
jnp
pop
xchg
mov
sti
mov
push
jb
jne
lret
dec
cmp
int
cmp
daa
dec
push
fwait
mov
inc
mull
xchg
std
sbb
push
call
mov
lds
in
cltd
cmp
loope
or
in
ucomiss
adc
shl
and
push
pop
inc
mov
popf
les
inc
aas
into
xor
sub
jne
cmpsl
imul
test
mov
shl
dec
cs
and
lret
scas
aaa
loopne
fistps
dec
xchg
xchg
std
es
pop
ret
sub
sub
loop
lds
fsubl
or
sahf
mov
push
cmp
or
and
fstpt
pop
jmp
idivb
push
test
and
dec
out
test
jbe
mov
sbb
stos
shll
mov
sbbl
push
dec
sbb
inc
cwtl
mov
mov
por
mov
xchg
or
in
lcall
test
fistpl
outsl
push
aas
inc
enter
insl
pop
push
scas
cmp
je
pop
mov
out
lea
adcb
iret
cwtl
inc
and
repnz
xchg
outsb
xchg
cmc
mov
js
mov
or
xchg
insl
enter
test
jmp
lret
push
push
pop
push
sub
push
scas
mov
scas
or
aad
sub
clc
cs
outsl
aas
jg
inc
into
sbb
lret
sti
xlat
shlb
xchg
ds
loop
xchg
pushf
push
push
addl
push
pop
mov
fs
push
add
cmpb
sub
mov
mov
test
pop
inc
sub
out
notrack
sbb
jp
je
push
fisubrs
loop
fiadds
std
das
pop
iret
cmp
testb
js
stc
test
pop
or
jmp
cmp
movl
jp
dec
jg
adc
xor
pop
insb
jo
jmp
scas
test
push
ljmp
outsb
lret
push
push
ds
xchg
sub
push
outsb
mov
out
sub
sub
repnz
ret
repnz
testl
mov
sub
mov
and
cmc
lahf
inc
sti
mov
sub
clc
inc
xchg
repz
mov
pushf
aam
pushl
ljmp
mov
pop
pushf
fcomip
xor
jnp
inc
sti
mov
out
rcr
int
pop
leave
push
mov
aas
ljmp
push
pushf
push
mov
mov
cmp
cmp
jp
mov
test
xchg
jbe
adc
lahf
pop
dec
adc
clc
sub
fisttpll
mov
fistpl
loope
adc
rcrb
es
notb
sub
stos
mov
js
xchg
pop
mov
mov
jns
pop
ret
and
add
pop
add
mov
adc
sub
xor
test
dec
imul
dec
sub
jb
dec
mov
push
gs
fisubrs
fs
testl
inc
mov
rcrb
das
in
dec
sti
inc
mulb
cld
imul
xchg
jecxz
sti
adc
sarb
xchg
cmc
cmc
repnz
dec
jle
mov
mov
lods
das
jmp
xlat
dec
lock
in
hlt
xor
jo
jecxz
push
stos
ds
insl
aas
xlat
push
test
sbb
daa
imul
push
ret
mov
ret
or
add
mov
push
shlb
fwait
mov
push
or
xor
and
sbb
sub
mov
inc
insw
push
dec
push
cmp
mov
pop
add
mov
or
in
in
mov
out
sbb
lea
push
scas
xor
dec
xchg
inc
inc
dec
jns
iret
je
or
cmpsb
jb
mov
ss
jae
ror
movsb
in
xor
cmpsb
rcrl
arpl
mov
xchg
xchg
test
sub
pop
test
add
mov
cmp
or
imul
pop
adc
daa
fiadds
inc
subb
mov
ror
iret
in
into
out
cmp
sbb
clc
sbb
sub
int3
mov
xor
sub
jbe
pop
xor
das
xchg
loopne
mov
rcr
mov
pop
mov
cwtl
adc
inc
dec
push
dec
testb
push
mov
jp
jbe
jne
bound
lret
add
popf
lods
jns
push
mov
or
push
inc
mov
out
pop
mov
ja
scas
sub
addr16
jge
daa
pop
int
xchg
push
xor
cltd
push
dec
lcall
lods
sub
bound
in
or
mov
dec
arpl
insl
popf
imul
pusha
xor
mov
ss
int3
mov
inc
adc
add
mov
sbb
aas
cmp
outsb
xor
jecxz
or
rcl
scas
test
sbb
lods
sub
mov
cmp
adc
cli
sbb
pusha
adcb
imul
sbb
pop
icebp
test
imul
dec
ja
sbb
mov
cli
stos
adc
sar
mov
adc
sub
mov
aad
fisubs
leave
jmp
fstp
test
dec
adc
and
test
incb
pop
cmpsl
adc
inc
cs
in
mov
jbe
add
insl
mov
movsb
into
pushf
ds
aas
push
lret
shlb
mov
jne
jno
sbb
clc
jg
xchg
mov
dec
aas
push
int3
cs
mov
mov
orl
mov
sbb
pop
xchg
jne
jp
stc
sbb
mov
push
xchg
push
aas
sub
pop
out
fsts
xor
adc
inc
sub
aaa
inc
scas
adc
pop
dec
or
mov
xchg
div
sbb
idiv
jg
cmpsl
push
aam
dec
mov
xchg
aad
in
and
mov
imul
pop
das
rcll
dec
mov
addl
pop
jg
pop
das
push
das
push
les
dec
sti
lods
inc
pushf
int3
pop
jle
ljmp
pop
movsl
stc
stc
js
cmpsb
fistl
sbb
int3
or
insb
popa
lret
jecxz
addl
inc
xchg
dec
cmp
stos
mov
cmp
aam
faddl
imul
dec
nop
imul
lea
add
int
xchg
mov
fwait
mov
xchg
imul
shrl
cltd
roll
imul
cmp
jbe
push
int
idivl
mov
nop
or
mov
push
sarl
and
inc
dec
jnp
out
mov
lcall
mov
fmulp
outsl
seto
dec
out
dec
mov
test
insl
sbb
shl
popf
mov
movsl
lret
data16
lcall
adc
mov
retw
hlt
inc
mov
xchg
ficomps
ds
sbb
out
arpl
aas
push
inc
add
in
loop
sub
btr
test
fsubs
scas
jb
stos
adc
mov
add
in
push
filds
dec
pushl
loop
mov
fsubrs
iret
leave
or
inc
les
ljmp
bound
jg
jge
aad
push
sbb
and
into
aas
cld
push
mov
push
xor
inc
enter
dec
pop
dec
push
in
or
dec
inc
fidivl
jecxz
addr16
fcmovu
pop
pop
test
mov
insb
push
test
pop
and
push
xchg
adc
mov
sub
mov
sti
pop
cltd
out
lock
out
in
xchg
fnstcw
sbbb
xchg
testb
xor
or
mov
popf
dec
test
sbb
jmp
int3
cwtl
popf
xor
nop
daa
dec
adc
loopne
loope
in
cmp
jns
dec
scas
insl
xor
cwtl
in
cmp
insb
push
xchg
repnz
mov
cmp
loopne
push
fdivrs
and
aam
cld
mov
inc
fsubrl
sti
adc
into
movsl
sbb
mov
pusha
lret
pop
add
fcmove
aad
subl
fisttps
sub
push
cmp
imul
ficoms
push
shrl
lods
pop
add
xchg
pushf
shll
inc
pop
arpl
lcall
xchg
mov
jp
out
out
jae
sub
jnp
mov
out
sub
mov
mov
cmp
lahf
jae
in
out
pop
dec
cmpsb
xor
fcmovnu
adc
mov
mov
lahf
les
idivb
pop
imulb
pop
mov
lret
shll
xchg
lods
mov
fidivl
fldcw
mov
and
in
jo
cmp
aad
cmpsb
int3
test
lahf
fiaddl
ljmp
fcom
mov
jns
and
cmp
adc
xchg
mov
clc
addr16
jmp
in
int
hlt
inc
sub
int
addr16
lds
or
or
jb
out
and
jle
xchg
jbe
xchg
jecxz
mov
lods
or
cmp
mov
cltd
loop
lock
or
jmp
dec
jle
mov
mov
pop
ja
jp
dec
int3
stos
lods
cs
mov
cmpsl
outsb
filds
lcall
pop
popa
xor
cmp
int3
cld
popf
sub
mov
push
inc
cmp
push
mov
push
mov
std
dec
sub
out
jg
adcb
lea
or
add
int
loopne
mov
mov
lahf
jo
shr
stos
push
jmp
push
sbb
cmp
xor
adc
cli
lods
mov
xchg
jge
fs
push
pop
repz
enter
pushf
mov
and
leave
pop
test
pop
xchg
lcall
insb
mov
fxch
repz
pop
subl
mov
dec
mov
shll
sahf
or
or
xchg
pop
dec
arpl
jb
cwtl
pop
mov
fidivl
test
aad
dec
and
pop
and
sub
xchg
mov
jae
and
and
mov
popa
mov
or
xchg
mov
fs
and
mov
cltd
sahf
or
mov
mov
out
gs
jns
add
cmp
lahf
in
sub
enter
inc
scas
sub
out
xchg
fisubl
aaa
data16
stc
mov
outsl
into
pop
mov
add
out
cli
adc
mov
ja
inc
dec
lods
mov
notl
cwtl
movb
adcl
dec
sbb
rcll
out
pop
push
mov
xchg
sarl
arpl
icebp
cmp
test
lret
movsl
or
clc
aas
mov
cwtl
mov
testl
popf
mov
std
test
sbb
xchg
xchg
push
mov
xchg
aad
xchg
cmpsl
mov
loopne
stos
push
cmp
xor
add
shlb
xor
inc
mov
and
sbb
test
mov
jnp
scas
pushf
les
cmp
loope
aas
and
daa
aas
pop
pop
add
test
or
jno
xchg
lds
mov
cltd
mov
into
data16
adc
and
insb
movsl
fimull
mov
mov
mov
nop
inc
push
adc
pop
scas
and
mov
insb
pop
mov
in
pop
sbb
jno
jge
or
fsts
daa
enter
sarb
icebp
add
and
daa
sbb
sbbb
xchg
inc
loopne
fcomp
mov
jae
in
pushf
imul
ja
loope
cmp
popf
outsb
int
jne
ret
not
cltd
jg
sbb
insb
bnd
cmp
icebp
lods
xor
in
push
adc
shlb
dec
or
dec
cmp
nop
cmp
sbb
cs
out
xor
clc
pop
dec
or
and
push
mov
sbb
sub
stos
adc
je
xor
negb
adc
inc
mov
xor
mov
cmp
jecxz
cmp
jbe
ds
mov
call
jmp
mov
xor
outsb
mov
lea
mov
push
ficoml
inc
aas
sub
roll
outsb
adc
or
mov
lods
hlt
jl
mov
sbb
daa
fcmovb
mov
mov
sahf
mov
push
int
iret
inc
cmpl
inc
sub
mov
xchg
lds
xlat
fwait
sbb
xor
sbb
hlt
cmp
push
repz
sti
cmp
pop
lods
push
shl
xor
pusha
sbb
push
cli
mov
and
in
dec
repz
inc
lods
jo
push
leave
cli
xlat
test
mov
pop
add
loope
cwtl
imul
sub
inc
push
jne
mov
inc
xchg
es
sub
add
xor
xchg
mov
xor
adc
jo
int3
sbb
cmp
loopne
adcl
and
or
in
jge
imul
inc
sub
lods
push
pop
je
mov
mov
fwait
or
xor
loope
movsl
leave
cld
adc
loope
add
sub
test
push
sub
lock
outsb
adc
xchg
jns,pt
dec
pop
data16
xchg
mov
sbb
lods
cmpsl
inc
xchg
jb
inc
insb
lock
mov
ret
adc
out
sbb
jmp
out
aad
shlb
mov
arpl
fwait
sar
push
loope
mov
mov
repz
js
fs
sbb
pop
mov
jns
mov
pop
add
inc
or
and
pop
je
sbb
repz
insb
cmpsb
xchg
pushf
mov
insb
fstpt
loop
loop
loope
lret
popf
repz
push
stc
adc
arpl
stc
dec
outsl
mov
mov
mov
repnz
mov
ds
mov
dec
sahf
xor
push
loop
pop
jbe
insb
fnstcw
sub
xchg
cmpsb
nop
popf
jmp
mov
cld
outsb
rcll
mov
loop
push
leave
addr16
repz
cwtl
pop
pop
jmp
ds
mov
loope
add
shlb
cmp
or
mov
gs
cmpsl
cmc
call
jnp
decl
sub
outsl
js
shr
cmp
and
loopne
mov
and
cmp
aaa
dec
popf
std
xlat
xor
test
cmc
lods
inc
mov
add
sbb
jle
fs
inc
push
imul
mov
fwait
mov
mov
bound
push
ljmp
jae
jne
sub
notl
fstpt
jmp
inc
xchg
data16
add
add
inc
popa
inc
and
imul
pop
imul
jno
add
sub
xor
fs
push
xor
icebp
aas
cmp
xorb
xchg
add
loopne
int
sub
loope
data16
pop
xchg
movsl
mov
scas
mov
jg
in
mov
mov
fisttpl
clc
add
outsb
or
push
sbbl
pop
jae
xchg
xchg
movsl
pop
int
stc
mov
outsb
andb
and
pusha
and
aad
push
sbb
jg
iret
lahf
dec
nop
add
and
xchg
call
sub
cmp
pop
loope
push
fbstp
mov
fsubr
jecxz
and
pop
mov
and
ja
insl
jmp
xchg
lcall
mov
test
cltd
pop
or
fists
repnz
ror
in
les
arpl
cmp
mov
sbb
shrb
fcompl
ss
adc
xchg
stos
test
lea
call
mov
scas
ffree
and
sarl
pop
loope
pop
sub
out
xor
xor
mov
sub
adc
mov
movsl
popa
pop
lret
popf
outsb
dec
push
stos
sbbl
jns
jo
cmp
int
xor
pushf
xchg
push
fstpl
in
scas
addr16
or
mov
push
and
inc
je
out
fistl
inc
push
lret
mov
jg,pt
lea
pop
fwait
pop
out
mov
rolb
adc
scas
adc
cs
sbb
rorl
inc
aam
lds
add
dec
cmp
sub
add
or
push
pop
sahf
add
pop
pop
jo
pop
cltd
lcall
sbb
rcl
xlat
subb
mov
fsub
pop
mov
mov
roll
mov
inc
inc
into
lret
lds
jno
lods
mov
and
outsb
js
inc
inc
fsubrs
sub
add
jmp
push
ret
pop
adc
in
xchg
push
fists
mov
and
call
jg
imul
add
loope
aad
loope
dec
and
mov
outsb
clc
lcall
ret
mov
cmp
imul
mov
push
mov
pop
cmp
in
enter
mov
mov
or
dec
ret
jnp
mov
cli
fstps
dec
insb
jecxz
cli
inc
fnop
popa
addr16
test
test
out
sub
testb
jnp
clc
aam
add
cltd
lods
sub
mov
in
jns
jg
js
bound
mov
cmp
divb
aam
loopne
cmp
shlb
test
cmpl
roll
mov
sbb
xor
scas
jbe
dec
aad
arpl
cmpsl
decb
and
mov
or
lahf
lods
jo
lret
add
scas
sub
or
mov
mov
pop
aad
cmp
dec
jns
pop
sti
nop
cmp
daa
pop
popf
test
jle
aaa
inc
outsl
inc
or
stos
cmp
mov
pop
sub
mov
aam
mov
or
cmc
lea
push
mov
fwait
inc
in
dec
pop
loop
inc
xor
dec
leave
in
hlt
idivb
imul
pop
pop
cwtl
pop
sbb
jg
and
fwait
cmp
dec
mov
cwtl
add
gs
shll
and
inc
pushf
inc
lock
mov
and
outsl
leave
sub
xor
sub
mov
sti
dec
pop
rol
cmc
xchg
subl
add
nop
fbld
loopne
lcall
outsl
sahf
jecxz
xchg
jns
inc
xor
adc
call
pop
loop
es
pushf
test
imul
test
arpl
dec
sbb
pop
outsb
xlat
es
push
push
aam
es
pop
dec
sub
negl
rcll
cmp
insl
xor
packuswb
push
and
or
out
subb
mov
push
xchg
fstpl
ret
adcl
pusha
cld
mov
adc
adc
pop
mov
xor
mov
mov
cmpsb
int3
cmp
lds
fisubl
lods
pop
mov
mov
mov
mov
jbe
inc
jo
testl
insb
pushl
and
and
fwait
cmp
mov
sbb
int3
push
sub
inc
sbb
xchg
jg
stc
iret
mov
inc
push
pushl
lods
mov
sbb
lret
mov
outsb
xchg
cmp
xor
jns
xor
sbb
aad
cmpsl
mov
jg
push
push
dec
jmp
cmc
mov
mov
mov
cltd
cmp
loope
hlt
sbb
or
test
dec
scas
push
outsl
adcb
mov
adc
cmp
add
test
xor
xchg
scas
neg
bound
lods
and
sahf
sar
pop
cmc
scas
mov
stos
sbb
and
pop
sbbb
mov
mov
movsb
push
repnz
pop
sbb
xchg
adc
out
jb
jbe
pavgb
popf
or
xor
popf
repz
fcomps
push
xchg
xchg
out
cmc
xor
mov
icebp
cmpsl
scas
cld
mov
jg
int3
pusha
jge,pn
jl
mov
in
aad
ret
inc
gs
hlt
sbb
test
sti
test
dec
sub
inc
daa
std
adc
out
js
cmp
mov
rolb
mov
push
leave
sub
pop
iret
ljmp
int
outsl
ret
and
or
mov
movsl
adc
adc
stos
repnz
sub
pause
test
movsl
fs
inc
dec
repz
inc
xor
xor
mov
mov
xchg
or
pop
clc
loop
je
movsl
insb
adc
lret
fwait
xchg
jns
push
push
sbb
push
pop
adc
rorl
xor
sub
and
xchg
push
sahf
push
inc
scas
clc
cli
orb
dec
sti
xchg
imul
cmp
sub
in
jbe
lahf
mov
gs
cltd
inc
in
mov
dec
sbb
adc
jbe
ret
fisubs
loope
add
xor
jmp
lret
scas
xorb
aaa
push
dec
int3
das
loope
andb
shrl
loop
enter
dec
rclb
mov
and
mov
dec
shll
or
mov
push
jae
cltd
imul
dec
jnp
lods
lret
imul
ficomps
mov
outsb
cmp
jl
fsubr
jle
inc
push
cli
popf
mov
sbb
or
gs
fs
xor
mov
or
dec
and
and
mov
mov
jno
movsb
mov
scas
push
inc
sub
in
stos
int3
pop
mov
nop
stos
and
test
mov
dec
cmc
add
or
das
and
inc
cmc
xchg
xor
fbld
movsl
jnp
mov
pop
adc
mov
mov
xchg
lret
dec
mov
mov
test
ljmp
int
fimull
jae
pop
divb
sbb
js
out
mov
cmp
jno
xchg
push
jmp
aad
cmc
in
inc
xchg
mov
ror
test
test
dec
mov
mov
xchg
lret
stos
dec
addb
into
inc
mov
mov
jbe
lods
push
push
lahf
pop
mov
lret
xor
pop
xchg
test
push
insb
dec
dec
out
jmp
add
addr16
imul
ret
fneni(8087
repnz
scas
push
mov
ret
jg
sub
xor
add
pushf
scas
mov
xlat
push
mov
hlt
mov
xchg
push
mov
aam
rcr
jnp
jmp
fstl
rcll
push
repnz
outsl
adc
jnp
push
inc
xor
cmpsl
sub
cltd
cmpsb
sub
outsl
fisttpl
pop
fdivrl
test
sub
adc
test
xor
loop
or
outsb
fs
jl
or
push
lret
ret
or
xchg
lods
sbb
push
add
xchg
adc
sub
inc
or
es
inc
daa
sub
inc
jae
mov
dec
lods
sub
adcb
pop
pusha
test
sti
jo
aad
imul
sub
in
dec
rcr
in
push
stc
lcall
pop
subl
jmp
or
shl
rcll
icebp
jecxz
pop
clc
or
out
jno
lods
fsts
stos
push
dec
iret
and
stos
mov
fdivrp
xchg
leave
and
iret
stos
jo
xor
enter
inc
xor
dec
and
mov
mov
mov
imul
stc
or
fidivl
loope
in
push
xor
jo
inc
sarl
fstpt
outsl
pop
ss
pop
push
jnp
mov
lahf
xor
mov
std
pop
lahf
cwtl
aad
into
outsb
add
dec
test
pop
inc
push
cmc
mov
mov
mov
mov
mov
push
pushf
xchg
jns
push
cli
pop
or
pop
dec
jbe
pop
and
push
sahf
xchg
sub
lret
sub
jle
fsubrp
xchg
mov
push
aaa
hlt
xchg
orl
shll
mov
shlb
mov
push
dec
mov
mov
popa
test
negl
call
lret
pop
ljmp
sahf
mov
rorl
inc
pusha
dec
xor
ret
jmp
sbb
roll
movsb
mov
pop
jge
xor
repz
mov
or
xchg
sub
cltd
aas
and
in
ja
pop
sbb
pop
pop
inc
or
sbb
leave
sub
mov
and
es
rolb
mov
das
in
push
je
mov
or
mov
xor
dec
aaa
stos
pop
sub
cmp
sbb
mov
and
aam
out
fidivrs
ss
stc
inc
inc
cmp
mov
scas
aad
inc
dec
adc
push
jecxz
or
dec
jp
inc
mov
fisubrs
inc
imul
aas
out
lret
or
ss
addl
push
cmp
push
add
adc
sub
outsl
data16
scas
xchg
inc
popl
pop
push
lret
mov
push
pop
int
lods
lods
ficomps
ja
inc
sub
pop
call
imul
nop
and
es
xchg
push
mov
ficoms
test
inc
jns
jnp
data16
push
cmp
and
pop
pop
sbb
push
cwtl
xor
daa
in
mov
add
les
pop
cs
push
mov
test
mov
sub
cmpsb
xor
dec
push
adcl
mov
rcl
mov
mov
mov
push
mov
out
inc
pop
rorl
push
mov
aas
imul
test
adc
or
sbb
jecxz
cltd
dec
xor
sub
lcall
fwait
or
xchg
mov
mov
shl
int
stos
and
jae
insl
mov
gs
xor
push
jo
sahf
fiaddl
mov
xor
imul
cli
hlt
into
mov
or
add
test
jno
je
adc
push
sahf
cmc
push
dec
or
xorb
xorl
inc
jns
imul
sbb
jae
mov
scas
mov
addr16
ss
jnp
and
mov
fists
push
adc
pop
jge
push
jp
jb
insb
stc
popa
add
or
loop
cli
sahf
pop
or
test
addr16
stc
cltd
sub
jmp
loop
sbb
dec
jns
xor
stos
in
and
xor
and
push
fldt
aam
call
int3
pop
xor
add
dec
movsl
jl
inc
pop
sbb
aaa
mov
lcall
jnp
sub
lea
out
mov
int
mov
lock
jae
ss
mov
mov
push
xor
cmp
fsub
dec
push
dec
jnp
jno
aaa
ljmp
frstor
add
add
mov
jecxz
pop
mov
pop
pop
insl
popa
mov
xchg
and
push
lods
test
mov
out
pop
aam
and
sbb
dec
xchg
xor
adc
push
lea
xor
inc
xor
cmp
inc
addr16
and
inc
cmp
idivb
dec
mov
icebp
out
int
lea
sub
dec
mov
xchg
mov
xchg
into
add
int3
int3
pop
ret
xor
sbb
cmovno
add
xor
repz
mov
and
mov
mov
mov
inc
sbb
jb
stos
movsb
or
push
dec
iret
pusha
or
mov
sarb
mov
das
and
sub
aam
sti
lret
inc
fsub
adc
jg
fnstsw
insb
jb
scas
add
pop
xchg
add
jns
popl
xor
pop
sbb
cmp
cmp
cmp
arpl
pushf
pop
fcom
sub
pop
push
adc
xor
dec
into
mov
jbe
jno
push
jg
cwtl
insl
lcall
je
pop
mov
out
and
cmc
call
js
push
jne
outsb
hlt
push
fisubs
mov
jne
scas
hlt
cmpsl
pop
les
loope
sub
dec
rcll
rcrb
and
cmp
mov
out
cld
cwtl
movsb
mov
punpckhdq
jno
mov
mov
or
mov
bound
xchg
fidivrs
jae
cli
cmpsb
xchg
stos
fisttpll
popa
add
in
rclb
cmp
imul
nop
es
cs
mov
sbb
mov
inc
je
xor
jnp
sti
mov
pushf
mov
cmc
enter
in
ds
arpl
stos
cmp
dec
mov
and
loopne
popf
sbb
imul
stc
in
mov
cmp
leave
sub
inc
cmpsb
lods
push
out
stos
push
lods
pop
mov
xor
out
push
negb
aam
call
mov
push
sbb
addr16
sub
cmp
push
jmp
add
mov
cmpsl
lcall
decb
mov
or
fidivl
sbb
mov
mov
pop
pop
sub
adc
and
aad
and
push
push
xor
xchg
insb
stos
pusha
dec
cmpb
int
xor
push
xchg
sbb
sbb
mov
jmp
xchg
loopne
les
frstor
lock
and
xchg
xchg
scas
stos
mov
xor
scas
mov
fsts
fwait
jb
in
repnz
push
sub
mov
add
je
dec
fst
rcll
ror
ja
sub
xor
inc
lds
sbb
ficoml
adcb
sub
call
cmp
or
cmp
scas
call
and
pop
dec
fdivrl
lock
mov
xor
mov
xchg
mov
or
or
leave
and
push
xchg
push
mov
ljmp
or
movsl
sub
int
inc
lahf
data16
testb
push
mov
stos
sahf
gs
in
inc
movsl
flds
sbb
cli
cltd
dec
cmc
sub
int
scas
sub
mov
repz
sub
cmp
cs
lret
fwait
mov
js
cmp
sub
and
loop
mov
in
dec
pop
outsb
fimuls
test
lods
lds
mov
dec
inc
jmp
mov
and
pop
cwtl
mov
jae
ljmp
faddl
nop
in
adc
mov
dec
clc
jle
adc
or
adc
daa
inc
inc
movq
loop
dec
mov
jmp
jg
inc
sbb
fimuls
insb
test
out
outsl
and
cmp
add
jbe
jae
fistps
test
neg
mov
mov
mov
add
mov
out
inc
xchg
xchg
mov
daa
sti
out
es
adc
popf
jb
xor
xchg
mov
rcrl
xchg
fucomip
inc
cmp
push
aad
push
flds
push
dec
popf
mov
lods
add
ror
xorb
arpl
leave
cmp
push
lret
dec
sbb
rol
mull
pop
xlat
dec
inc
pop
xor
enter
ljmp
pop
xchg
mov
sub
fs
frstor
arpl
fdivr
rorl
scas
adc
xchg
arpl
mov
aaa
cli
imul
test
add
xchg
mov
sbb
push
cmp
in
ja
and
ret
jecxz
xchg
jle
lds
mov
les
push
fistps
sbb
sub
in
xor
jno
and
int3
push
mov
clc
scas
fists
imul
and
cmc
adc
mov
shlb
or
pop
test
add
add
aad
pop
mov
stos
sti
mov
std
aam
pop
les
mov
add
lret
xchg
push
bound
xchg
test
cmp
cmpsl
jns
inc
es
insl
lea
in
jge
xchg
imull
imul
leave
push
loopne
xchg
mov
cmp
jae
sbb
test
push
push
scas
sub
insb
pop
lods
stc
adc
xor
add
pop
pop
cmp
or
cmp
and
shrb
add
shr
mov
or
and
jmp
cmp
jae
lods
add
xchg
imul
jmp
ss
nop
mov
test
cld
stc
inc
adc
mov
push
mov
mov
mov
xor
jo
mov
inc
sbb
inc
es
sub
dec
icebp
lods
lock
insb
mov
xchg
fsubl
jne
mov
icebp
fisubrl
mov
push
sbb
ret
stos
gs
cld
inc
hlt
int
add
jg,pn
scas
pop
adc
add
andb
call
adc
sarl
pop
jp
add
xchg
bndldx
in
cmp
pusha
adc
lods
xchg
test
stos
jle
dec
js
sub
push
sub
or
int
push
push
fnstcw
popf
cmp
sub
sub
add
push
push
cld
mov
mov
inc
push
mov
mov
xor
sub
movsl
mov
cs
fwait
and
pop
int
stos
scas
sahf
mov
enter
push
xor
call
push
aas
test
push
mov
push
sub
or
inc
gs
icebp
rorl
jge
push
loope
push
inc
lds
jge
xor
inc
and
dec
xor
dec
ds
dec
push
int3
xchg
sbb
gs
and
sub
jecxz
dec
in
xchg
mov
cmc
or
xchg
inc
sbb
fistl
mov
icebp
and
arpl
xchg
nop
mov
popf
shlb
dec
imul
inc
pop
add
nop
hlt
daa
sbb
xorb
testb
mov
pop
or
jnp
push
sbb
xchg
mov
cmpl
js
dec
in
mov
inc
push
or
pop
sbb
scas
frstor
mov
dec
mov
mov
pop
xchg
inc
sub
xchg
sbb
flds
fs
lahf
call
push
adc
mov
mov
mov
mov
cmp
or
imul
push
stos
pop
fidivs
fidivrl
enter
and
mov
sub
fwait
cmp
dec
ret
test
icebp
mov
mov
scas
fucom
data16
out
out
add
scas
repz
mov
jnp
xchg
cmpsl
mov
jo
cltd
add
imul
jge
lahf
sahf
bound
ffree
rclb
fldenv
pop
cmpsl
aad
or
dec
das
sbb
loop
rorb
fs
lret
dec
mov
fsubrl
xor
lret
jmp
scas
jecxz
pop
stc
push
adc
jo
shrb
imull
or
outsl
fwait
repnz
movl
cwtl
and
jmp
cld
adc
adc
adc
addl
leave
and
mov
mov
jecxz
leave
aaa
sbb
mov
or
and
sub
sbb
mov
out
sub
push
xchg
cmp
dec
dec
xor
jp,pn
inc
cltd
int3
subl
ss
sub
mov
hlt
or
xor
cmp
mov
xor
cmpsl
mov
ja
faddl
sbb
les
cwtl
lods
jns
fadds
sbb
push
adc
jl
jnp
call
adc
incb
outsl
popa
xor
or
xor
inc
xchg
sbb
imul
adc
clc
xchg
stos
subb
xorl
jnp
out
inc
push
or
xlat
mov
push
jg
nop
mov
sahf
idivb
lock
lods
cmp
cmp
out
cmpb
add
stos
xchg
pop
jg
xlat
stc
push
xor
cwtl
es
jae
pushf
int3
daa
add
orb
dec
xor
dec
js
mov
gs
out
jge
push
mov
ss
push
xlat
jp
out
and
test
sbb
testb
cmp
std
jo
jb
dec
inc
ljmp
int
filds
gs
cmp
inc
ret
iret
pushf
inc
xchg
test
movsl
cmpl
dec
or
sbb
push
mov
pop
pop
inc
cltd
lahf
push
lret
inc
lods
outsb
xchg
sar
inc
in
sub
loopne
dec
mov
scas
jbe
or
jle
div
in
lock
cs
and
mov
sti
sbb
rcrb
loop
pop
mov
stos
in
jl
jl
adc
pop
jecxz
test
popf
adc
mov
aad
daa
jb
pop
jg
ret
xchg
mov
pop
pop
in
lret
loopne
ss
test
sets
int
sub
sbb
or
sarl
lods
nop
xchg
scas
pushf
shll
push
sbb
test
adc
sti
adc
and
sbb
and
cmp
mov
mov
pop
push
fs
subl
lret
add
push
push
dec
rolb
xor
icebp
or
out
sbbb
sbb
cli
shrl
mov
nop
cmp
add
sbbb
jecxz
frstor
sahf
adc
lea
adc
add
imul
outsl
je
dec
cmovno
test
xor
popa
mov
dec
in
add
push
ficompl
sti
pop
ret
loop
mov
movb
mov
icebp
cmpsl
sbb
push
cmp
out
int
cltd
adc
shlb
adc
pop
ss
adc
insl
or
push
test
mov
mov
pop
lret
or
push
xor
push
cmp
insb
clc
sub
mov
mov
xlat
mov
xor
enter
in
mov
mov
fistl
cs
bswap
popf
push
cmp
lea
or
fmul
scas
xchg
mov
and
test
sbb
dec
mov
mov
inc
fsubr
mov
mov
and
jns
popf
inc
xchg
out
insb
call
inc
loop
sar
pop
js
jecxz
add
sub
push
sahf
and
popf
adc
push
inc
cmpsb
jae
xor
xor
in
dec
dec
cli
and
out
cmpsl
push
sub
jl
lods
mov
push
repz
lret
xor
fcmovu
cmpsb
xor
shrb
enter
imul
push
dec
inc
mov
mov
test
inc
push
mov
jns
mov
das
movsl
add
call
insl
icebp
stc
jnp
jge
jp
mov
lea
loopne
aas
xor
mov
push
xchg
loopne
pop
or
fst
hlt
inc
push
lods
pop
lock
loopne
xchg
add
sbb
and
inc
in
insb
jmp
adc
sarl
pushf
in
sbb
icebp
in
in
mov
and
sbb
enter
ds
fimuls
dec
and
push
int
sub
in
push
sub
mov
repz
repz
dec
gs
add
out
inc
pop
loope
sti
adc
pop
arpl
mov
rcll
push
mov
test
sbb
inc
lods
jp
pop
scas
sahf
movl
roll
aas
stos
push
dec
jl
xor
xchg
aam
ja
in
cld
lods
stc
mov
mov
lods
popa
lret
adc
icebp
mov
mov
add
inc
andl
mov
dec
pop
ret
mov
mov
fwait
sti
pop
daa
fdivr
pop
lret
test
pop
mov
scas
cmpsl
adc
xor
push
and
loope
sub
and
scas
sahf
fistps
add
icebp
test
push
push
lods
inc
out
inc
mov
jae
test
mov
test
shll
cmp
adc
xchg
addr16
push
rcll
sbb
cs
pop
call
mov
pop
data16
sub
cwtl
push
fdivrl
cmpsl
scas
mov
je
dec
xchg
ss
mov
mov
or
rcrb
push
in
push
xchg
xlat
push
popa
test
xor
imul
or
cli
or
mov
mov
ss
mov
stc
add
test
pop
loopne
mov
loopne
pop
jne
mov
hlt
jle
mov
push
out
ficoml
xchg
loopne
mulb
dec
jnp
popl
adc
pusha
mov
hlt
and
mov
fadds
pop
iretw
and
pop
loopne
xchg
call
mov
dec
ret
or
adc
sub
lods
sbb
stos
cmp
insb
add
fwait
incl
push
jecxz
mov
fadd
sub
inc
xor
jae
std
int
scas
push
insb
das
push
lret
mov
or
nop
xchg
push
ljmp
std
mov
call
pusha
iret
nop
ret
stos
sub
test
cwtl
mov
jmp
xor
popf
loop
mov
cmp
movsl
pushf
push
and
sbb
mov
je
imull
lods
push
imul
aas
gs
pop
decl
jbe
jecxz
adc
mov
pop
in
sbbb
das
push
ljmp
sub
jae
push
lahf
and
jmp
dec
pop
sub
nop
jne
adc
in
test
mov
inc
pop
js
lret
adc
incb
subb
inc
mov
mov
imul
mov
loopne
orb
add
fimuls
xchg
mov
jp
insb
lock
pop
add
movsb
add
sahf
push
aad
cmc
sti
cli
fdiv
sbb
fidivl
orb
adc
mov
adc
mov
loope
jmp
cwtl
clc
sub
mov
sub
or
aaa
dec
pop
aad
aaa
jb
inc
xlat
jae
pop
push
jb
in
jp
xchg
aaa
fs
sub
mov
xor
inc
mov
mov
into
insb
insl
add
fs
mov
sbb
stos
add
shlb
jb
inc
mov
xchg
nop
and
les
jecxz
jmp
adc
xchg
and
cmpsb
dec
cs
mov
sbb
fadds
lds
add
jp
sbb
loop
aas
mov
and
sbb
jecxz
sbb
xor
xchg
mov
rolb
sbb
jno
jl
lahf
dec
cmp
xchg
in
sbb
and
popf
push
inc
push
stc
jns
hlt
xor
jo
push
mov
in
seta
mov
cli
jno
int3
fmulp
outsb
popa
pop
mov
aam
lods
inc
or
fwait
pop
inc
mov
inc
jne
xchg
push
shll
jno
add
nop
mov
dec
mov
push
pop
scas
jp
aad
aam
aad
jg
push
js
add
push
xor
jno
hlt
mov
mov
sub
sub
fs
inc
adc
sbb
int
out
gs
dec
stc
jge
aam
dec
xor
movsb
cmp
lret
mov
sti
bnd
mov
mov
dec
cmp
xlat
adc
insb
dec
sub
ret
dec
sbb
adc
adc
test
mov
or
cmc
add
mov
fdivr
nop
xor
ret
mov
add
mov
add
jmp
mov
mov
sub
lds
sub
push
mov
xchg
lret
loopne
sub
push
push
jl
and
sahf
adc
in
pop
fstps
xchg
fs
and
outsl
ja
stc
ficompl
popf
dec
xor
test
sarb
jno
or
fwait
pusha
icebp
iret
sbb
jns
mov
test
in
xor
adc
xor
xchg
mov
or
inc
ss
mov
or
sub
aam
mov
mov
scas
std
in
xchg
mov
push
sub
jae
inc
out
xchg
mov
xchg
cmpsl
outsb
imul
hlt
divl
inc
ret
pop
ror
xchg
cwtl
mov
jae
lret
out
and
mov
mov
xor
clc
popf
mov
mov
push
xor
cmp
bnd
inc
notb
outsl
jb
pushf
addl
dec
and
sub
xchg
hlt
xchg
cmp
mov
icebp
sub
scas
push
in
in
sub
cmpsl
rolb
or
lahf
notb
test
add
inc
jb
mov
and
dec
roll
jns
push
xchg
loopne
push
mov
xchg
les
jecxz
add
jno
cmp
test
mov
lahf
cmpsb
push
sub
sub
pop
je
js
test
dec
aad
cltd
or
decb
adc
loope
xor
loop
adc
lret
cmpsb
mov
cmc
push
pop
sahf
xlat
pop
xchg
mov
out
popa
mov
mov
mov
jb
adc
pop
out
jg
inc
adc
cmp
mov
shlb
add
jb
fisttpll
orl
sarl
in
out
cs
pop
dec
add
and
jecxz
inc
and
cmp
cmp
fnsave
inc
insl
dec
inc
inc
and
cmp
scas
and
inc
aaa
iret
xor
aad
push
pop
and
in
out
lods
adc
push
enter
push
push
mov
sub
cmp
add
push
jmp
mov
inc
hlt
sbbl
adc
xchg
inc
shrb
je
xlat
int3
nop
cwtl
mov
and
out
sbb
mov
scas
sbb
adc
dec
lret
outsl
ljmp
dec
cmpsb
add
mov
iret
pop
in
mov
cltd
mov
cmp
popf
imul
outsb
mov
test
pusha
jecxz
or
arpl
mov
lahf
mov
xorb
lds
lock
mov
lock
std
in
xchg
rorb
xor
leave
in
inc
nop
adc
dec
addr16
xchg
outsl
adc
push
inc
dec
insl
sub
arpl
pop
cmpsb
loopne
in
dec
lock
dec
addr16
jae,pt
pop
add
mov
and
icebp
push
orb
mov
cmp
mov
adc
in
lods
mov
add
rorb
sbb
mov
or
jmp
sub
lahf
inc
pop
popa
pop
xchg
test
fidivl
gs
loopne
mov
and
pop
pusha
pop
cwtl
push
rcrb
xchg
xchg
cmp
mov
test
cwtl
in
adc
ret
ror
pop
stc
pop
fdivs
fistpll
jno
inc
mov
test
mov
cld
fcmovnu
cmp
mov
add
xor
adc
lods
mov
lods
xchg
push
int3
mov
test
int
test
int
orl
cs
xchg
movsl
ljmp
pop
jnp
pop
les
xchg
inc
bound
daa
dec
aam
out
xor
pushf
aaa
ret
sbb
lret
add
pop
push
lods
cmpsb
setb
fcompl
adc
imul
cs
add
bound
mov
dec
xchg
dec
mov
pop
mov
lock
pop
insl
outsl
dec
jns
add
ljmp
cmp
sbb
jmp
pop
xor
push
cltd
outsl
cli
into
fdivs
add
pop
sub
fstl
mov
xor
add
lahf
repnz
stc
test
fwait
hlt
int
loope
pop
loope
call
push
inc
ja
sbbb
xor
bound
mov
addr16
inc
pop
sub
cld
daa
push
aad
mov
orb
hlt
sbb
mov
push
dec
xchg
les
test
addr16
fcoms
xchg
add
es
dec
or
adcl
ja
jo
dec
outsl
fstps
pusha
out
xor
test
test
sbb
and
out
cmp
int3
int
dec
in
xlat
sbb
sub
mov
adc
or
pop
pushf
mov
stos
xor
shr
pushf
jg
xchg
sbb
mov
das
push
pop
std
fsubrl
and
mov
and
out
sub
xlat
orl
adc
lock
insb
test
fisubrl
and
inc
sub
jnp
das
push
inc
imul
enter
test
dec
pop
jg
jae
dec
sbb
dec
jle
dec
popf
sbb
mov
loope
jle
loope
nop
outsl
into
xor
and
sub
rep
pop
mov
push
sub
cwtl
pushf
movsl
mov
xor
mov
adc
das
xchg
mov
lcall
test
jg
movsl
inc
sbb
shrl
popf
mov
sbb
xchg
jecxz
jae
loopne
fstpt
or
aas
clc
pop
mov
cwtl
and
xor
scas
ret
test
cs
scas
add
ds
aaa
rorl
pop
sbb
mov
cmp
popa
jns
pop
les
test
pop
subb
cmp
cld
ret
sub
loope
or
aam
pop
aad
jo
push
pop
out
mov
fs
xchg
or
hlt
xor
loop
enter
pop
mov
lret
pop
lret
pop
mov
push
cmp
mov
xor
out
arpl
fadds
push
ret
sub
outsl
aas
rolb
mov
mov
addr16
test
mov
xor
pop
push
push
or
or
in
fmulp
dec
pop
ds
push
adc
lds
mov
outsb
hlt
int
jl
sbb
mov
insb
in
shl
pop
xchg
int
and
imul
and
loopne
or
jns
imul
mov
sbb
sbb
jbe
sbb
inc
mov
daa
ja
ret
stos
jg
cmp
stos
or
xlat
or
and
imul
outsl
sub
popw
fidivs
test
lods
push
fidivl
call
push
and
mov
jmp
es
arpl
stos
dec
add
pop
xchg
mov
jns
xor
ds
std
jge
sbb
icebp
push
pop
add
scas
cltd
jno
mov
sarl
or
xchg
fwait
lret
mov
shll
ret
faddl
mov
lods
out
jb
lds
jo
mov
lret
mov
inc
jb
lret
aas
sar
xor
repnz
dec
jle
cltd
insl
and
mov
insb
sbb
std
mov
rorb
pop
cmp
mov
adc
sbb
push
pop
jo
xchg
inc
cmp
mov
jb
mov
mov
and
jae
xchg
push
add
aad
mov
push
mov
dec
or
pusha
and
repnz
inc
adc
cmp
out
fldenv
imul
mov
stc
jb
je
divb
add
xchg
push
pushf
jb
mov
inc
imul
xchg
loop
js
inc
mov
fwait
fucomip
fsub
xor
cwtl
lea
adc
loope
xchg
js
arpl
xchg
js
icebp
pop
ja
shlb
inc
mov
push
out
jnp
lret
mov
add
adcb
cmp
hlt
js
mov
inc
mov
mov
mov
adc
mov
lock
rcrl
adc
jle
xchg
cwtl
adc
lret
ffree
movsb
cs
sbb
mov
fidivs
popf
and
inc
je
cmp
icebp
iret
mov
adc
jne
sub
call
mov
dec
subl
ret
inc
push
out
mov
xchg
insl
push
cmp
lds
fimull
popa
and
mov
jo
decb
fistl
ret
insl
psrlq
bound
fcompl
mov
push
test
push
mov
inc
add
out
seta
pop
push
xchg
out
cmp
cs
fucomp
inc
and
sub
push
pop
xchg
xor
inc
lea
or
push
and
inc
ret
cmp
repz
sub
mov
dec
pushf
into
int3
lea
jmp
sub
jnp
out
out
jp
cwtl
insl
sub
push
mov
test
xchg
ja
fdivrl
hlt
mov
adc
push
int
cmpsb
inc
test
ljmp
mov
dec
xor
xor
out
fwait
pusha
jbe
daa
ret
into
mov
mov
push
xchg
adc
arpl
mov
sub
insl
inc
daa
pop
sarb
xchg
mov
ret
add
in
aam
leave
lods
inc
fst
add
push
loop
mov
mov
jns
leave
mov
mov
xlat
inc
jne
cmp
cmp
fcomps
rolb
push
test
pop
jl
stos
lret
push
mov
imul
cmp
dec
cmp
adcl
mov
mov
mov
pop
iret
lahf
dec
mov
or
rcrb
ret
lahf
icebp
push
and
sbb
pop
jg
sub
lods
xchg
mov
pop
xchg
fwait
mov
nop
mov
in
ss
into
fcomip
data16
cmc
mov
arpl
test
sub
or
call
dec
mov
sub
rcll
sahf
xor
sbb
jp
scas
mov
scas
mov
mov
xor
cmpsb
sbb
xchg
push
dec
or
lods
stos
cmp
iret
imul
shll
mov
cmp
dec
arpl
xor
shll
andl
nop
insl
pop
xor
jg
loope
daa
mov
mov
ficoml
sbb
xor
popa
jnp
or
movsl
sub
pop
dec
sub
repz
dec
adc
xlat
xchg
dec
insl
xor
adc
outsb
popf
fs
pop
xor
mov
jnp
pop
xor
sub
pushf
das
in
mov
movsb
gs
cmp
mov
mov
inc
ret
or
mov
xchg
fisubrl
fdivrs
push
out
in
add
subb
dec
adc
in
dec
imul
push
fiadds
adc
adc
mov
mov
roll
insb
addr16
ret
fimuls
mov
clc
rcll
addl
pop
jb
cmp
mov
jb
call
lods
out
mov
out
xor
jmp
or
arpl
push
and
inc
pop
or
or
in
add
sub
mov
push
popa
fstps
ja
out
stc
call
fs
pop
or
xchg
and
pushf
cwtl
xor
loop
add
mov
sbb
jg
mov
gs
xchg
adc
lds
pop
fsub
test
sub
jb
stos
popf
and
mov
aas
add
data16
into
cmp
imul
arpl
mov
mov
enter
daa
popa
cmp
icebp
add
push
cli
iret
cmp
xor
je
mov
je
stc
aam
mov
mov
test
add
cmp
push
in
inc
dec
js
loopne
xlat
leave
lea
test
nop
sahf
push
or
cmpl
dec
cmpl
xor
icebp
pop
jno
push
cld
pop
scas
jecxz
je
push
push
adc
iret
mov
mov
cmp
daa
xchg
mov
lret
test
xchg
andl
inc
mov
push
inc
mov
push
fldcw
aad
into
push
push
pop
mov
xchg
xchg
cmp
or
dec
aas
lods
sbb
bound
repz
loope
add
mov
pop
xor
add
xchg
sub
mov
jno
xor
cmpsl
push
and
mov
rcr
push
subb
lahf
outsl
fcomps
cmpsl
enter
arpl
sbb
ja
fstpl
adc
cmc
or
stos
out
std
pop
mov
cmpsb
incb
es
dec
jns
int
mov
loop
js
iret
insb
push
sub
mov
push
notl
faddl
cmp
or
les
and
xor
mov
cmpsb
jle
shll
push
out
sub
adc
mov
sar
sti
sbb
adc
popf
mov
in
pushf
or
mov
jle
lods
sti
inc
jbe
jnp
out
mov
or
pop
mov
mov
shrb
or
jmp
push
and
mov
das
fs
adc
test
cmp
ud0
mov
adc
sub
lcall
pop
cmp
add
sahf
pop
jb
lret
fmuls
xor
mov
sbb
cs
cmp
bound
push
push
mov
rorb
gs
fs
lret
or
jbe
mov
cli
and
mov
xor
negl
clc
xchg
or
int3
and
pop
xor
jnp
mov
sbb
mov
mov
daa
mov
outsl
jne
into
adc
and
fxch
mov
push
ljmp
arpl
stc
imul
xor
push
fstpl
popf
and
or
or
cmpsl
inc
insb
adc
jno
outsl
daa
cld
incb
dec
hlt
out
popf
je
xlat
mov
in
sub
icebp
pop
leave
sub
adc
xchg
subb
fucomip
imul
ds
cmp
loopne
jmp
pop
rclb
cmc
add
fucomp
mov
mov
nop
xchg
and
addr16
test
lahf
jp
and
int3
cwtl
std
inc
hlt
lret
shll
sbb
mov
negb
pop
add
lock
inc
mov
xlat
mov
scas
xchg
stos
imul
and
inc
loop
repz
out
inc
sbb
das
adc
or
loope
jbe
lods
sub
inc
cmp
adc
sbb
aaa
test
cmpl
pop
pop
in
jl
rcll
mov
push
push
mov
inc
push
fldl2t
jne
lock
fnstenv
sub
fstps
adc
add
fmull
jecxz
lds
sub
add
and
mov
jns
xchg
add
mov
cmp
sbb
repnz
inc
ds
push
mov
cmp
pop
jecxz
mov
lods
rcll
pop
int
lea
jne
mov
je
mov
jne
ja
cmp
cmpl
or
mov
repnz
scas
adc
sub
loopne
mov
xor
mov
adc
lea
dec
lds
sbb
push
inc
mov
jp
in
cmpsl
in
shrb
xchg
sbb
mov
mov
roll
cmp
xchg
xchg
es
mov
hlt
lahf
inc
stc
jb
mov
add
int
pop
ja
mov
add
mov
enter
mov
dec
repz
pop
scas
pushf
jne
inc
ss
movsl
dec
insl
dec
sbb
shll
mov
insb
dec
and
arpl
lods
adc
push
stc
dec
xchg
popa
add
sbb
and
adc
or
mov
dec
dec
jnp
cmp
das
call
rorl
dec
inc
jno
pusha
jnp
xchg
adc
push
xchg
stos
cwtl
push
xor
mov
mov
ja
out
pop
into
aaa
add
push
and
imul
jne
cmp
mov
movsb
mov
pop
push
adc
add
in
fbld
inc
lret
push
mov
mov
aam
popa
in
xchg
xor
sti
mov
dec
hlt
mov
out
mov
and
int3
pop
insb
xor
call
sti
and
xchg
outsl
fnstcw
inc
mov
cmpsb
into
adc
xchg
xchg
mov
xlat
dec
bound
sbb
xchg
push
scas
stos
jne
push
fucomip
mov
in
mov
in
lahf
or
ljmp
fbstp
push
xchg
mov
repz
mov
icebp
nop
jg
jae
stos
fcomps
daa
gs
nop
loope
or
or
sbb
push
cmp
jl
push
arpl
mov
inc
push
pop
fxch
inc
shlb
divb
xchg
sub
and
mov
fdivs
push
sub
int
daa
mov
int3
into
xchg
sbb
shr
sarb
mov
stos
cld
cmp
xor
repnz
jns
inc
fsubs
inc
cmp
mov
ja
jp
mov
or
mov
jns
adc
shr
mov
int
fucomi
lds
cmp
lret
jno
test
jbe
or
js
add
sbb
pusha
add
sbb
xchg
insb
mov
mov
int3
mulb
js
lret
cli
rclb
js
fdivs
mov
outsl
movsb
mov
cli
adc
sarl
outsl
stos
fs
stos
mov
xlat
cltd
cld
cmp
outsl
xchg
shrb
sub
jecxz
pop
shll
inc
jbe
mov
add
or
cmpsb
pop
add
cmpl
push
fsubrs
mov
sbb
xchg
push
push
jge
popf
jp
insb
cmp
stc
idiv
aas
pop
mov
pop
mov
insl
mov
xchg
punpckhwd
dec
movsb
and
adc
out
pop
andl
xchg
loop
or
sbb
movsl
fistpll
loop
filds
mov
xchg
mov
cmpsb
loope
ret
xchg
fistps
or
aaa
sarb
mov
pop
dec
cmp
es
cmp
icebp
ds
pop
dec
jno
push
insb
ds
jg
jbe
push
sti
sub
fwait
sbb
test
pop
push
ret
jmp
dec
lret
cld
xor
cwtl
cmc
cmp
dec
sarb
lret
adc
jl
out
cli
cltd
sar
add
mov
jmp
inc
cld
loop
sub
popf
adc
xchg
stc
ds
push
push
shll
dec
or
aaa
std
aaa
push
xchg
cmp
es
stc
fildll
mov
adc
sub
int
notl
inc
or
ja
cld
pop
sbb
jmp
int3
sub
jp
pop
lret
outsb
cmp
or
add
mov
or
jae
pop
insl
mov
xor
into
inc
mov
cmp
daa
xor
jge
mov
or
pop
out
int
inc
sti
and
adc
sub
enter
sbb
pop
test
inc
aam
dec
cmp
cli
jg
push
xchg
fstpl
mov
and
or
addr16
adc
ret
es
mov
xchg
xchg
icebp
xchg
add
dec
loop
icebp
pushf
xor
popf
mov
pop
outsb
imul
xor
decl
adc
push
mov
add
sar
mov
lods
add
push
repnz
jb
or
cltd
ljmp
pop
bnd
fcmove
sbb
push
sbb
xchg
xchg
loope
cmp
pusha
xchg
push
iret
fidivl
es
jns
sti
mov
arpl
fidivrs
xorb
inc
push
mov
insb
test
push
imul
out
sbb
xor
jp
shlb
loop
shll
push
push
ds
jecxz
dec
sub
int
cmp
sub
data16
inc
enter
mov
xchg
push
push
adc
mov
xchg
jp
enter
add
xchg
frstor
pop
movsb
push
repz
cmp
vfmaddss
insb
aam
pop
inc
lds
ret
decb
sbb
outsl
lea
and
cmp
push
mov
out
aad
cmp
pop
lcall
xor
mov
lcall
pop
fstps
bound
scas
cmpsl
aam
pop
pop
in
imul
andl
push
pop
jne
es
fld
pushf
pop
mov
pop
sbb
mov
jmp
xchg
xchg
jg
and
mov
or
or
fs
mov
pop
or
push
sbb
mov
subb
rep
scas
movsl
out
movsl
mov
jb
mov
mov
jge
lahf
jae
mov
mov
fsubl
test
das
xor
int
inc
jno
cltd
mov
mov
sbb
mov
jmp
sahf
mov
mov
test
jge
aad
ret
jno
das
loopne
xchg
ret
add
mov
arpl
xchg
lret
jmp
adc
push
jg
in
movsl
loopne
aad
shlb
pop
mov
xchg
jmp
insb
mov
mov
sahf
test
repnz
pushf
sbb
cmp
adc
popa
xchg
mov
sub
push
in
mov
or
into
add
push
xchg
mov
xchg
shlb
fimuls
sbb
and
and
add
out
ss
sbb
add
sbb
xor
inc
ja
insb
ds
call
rol
gs
out
jns
rclb
fistl
dec
insb
jno
dec
imul
sub
and
jecxz
and
repz
sbbb
sti
cmp
inc
push
leave
push
xchg
fs
cmp
es
call
add
mov
add
ja
jb
pop
pop
dec
mov
rolb
push
mov
jmp
popf
loopne
xchg
add
sbb
pop
adc
cmc
ljmp
rol
lahf
fildl
lods
dec
push
cld
pop
fcmovu
rcrb
lea
sub
cmpl
loope
addr16
loopne
cmpsl
mov
out
aad
fbstp
dec
jnp
ja
out
movsl
adc
subb
scas
mov
dec
pop
jne,pn
addr16
icebp
pop
scas
cmp
sbb
add
rcrl
inc
loop
out
push
cmp
adc
mov
mov
jge
imul
into
enter
xor
dec
mov
daa
adc
jl
and
out
fildl
mov
adc
xor
jnp
pminub
fs
jg
mov
pop
jno
jp
rorb
cmp
dec
loope
sbb
mov
xchg
in
in
sbb
fnsave
das
notb
dec
jo
jmp
negl
fildl
sahf
shl
pop
xchg
pop
cmp
gs
test
leave
lock
lret
inc
lret
mov
test
or
lahf
std
mov
fdivs
sti
sti
dec
movsl
inc
mov
stc
mov
cli
jae
lcall
push
lidtl
inc
and
jmp
lock
push
int3
arpl
adc
jae
es
pop
sub
es
dec
dec
ds
lock
jno
and
fs
insl
adc
pop
fldl
std
pop
xor
adc
lods
mov
cmpsl
inc
lds
dec
mov
nop
test
in
orb
add
inc
and
andl
popf
xor
es
stc
std
lods
fmull
xchg
xchg
dec
fwait
dec
ret
adc
cmp
jno
push
cmp
stos
inc
lods
outsl
jb
test
cmp
bound
xchg
inc
into
nop
imul
add
loopne
sbb
imul
lret
dec
rcll
out
lods
lcall
insb
sahf
les
lock
mov
push
aaa
mov
movsl
add
sub
pop
mov
sbb
dec
div
dec
jbe
mov
dec
imul
mov
rolb
sub
cmp
push
add
cmpsl
xor
jns
fwait
lret
pop
and
arpl
clc
mov
inc
add
imul
sbb
data16
xchg
add
and
fwait
add
dec
fisubl
jbe
cmp
mov
test
xor
test
pop
jmp
mov
cmp
mov
xchg
push
push
es
sbb
sub
mov
jp
in
pop
sub
cmc
push
add
repz
adc
add
cltd
movb
add
xchg
test
pushf
push
clc
sbb
std
movsb
mov
or
dec
test
inc
leave
push
adc
jo
popa
pop
or
jg
and
movsb
sbb
mov
stos
cmpsb
xor
outsl
dec
pop
mov
inc
ret
sbb
sub
mov
mov
cld
iret
xor
scas
fcompl
cltd
push
fs
inc
in
xlat
lret
xor
fsubrl
sbb
dec
xchg
jge
dec
out
push
xchg
xchg
icebp
xchg
aaa
rolb
clc
mov
push
std
insb
cmpsl
movsl
pushf
fcoms
mov
loope
pop
mov
fsubrl
dec
rclb
mov
jecxz
insb
dec
xchg
jge
pop
dec
pop
mov
mov
jmp
or
ja
fsubs
sarb
mov
sbb
jo
stos
or
or
cltd
xor
arpl
dec
stos
push
in
dec
in
repnz
jbe
not
ja
cmp
in
sbb
cmp
setp
sti
mov
inc
lcall
inc
jno
loop
adc
jge
sbb
inc
lahf
jp
cmp
leave
cmp
cmp
mov
aad
imul
xor
push
stos
shll
out
cmc
dec
adc
dec
sbb
or
shrb
fcmovnu
or
and
mov
aam
leave
pop
cli
mov
sbb
int3
loop
lods
test
dec
addr16
push
stc
push
fucomp
pop
inc
les
push
push
fnstcw
popa
daa
xor
stc
lcall
gs
inc
mov
xchg
cld
stc
or
xchg
jne
stos
cmpsl
xchg
fs
lods
outsb
getsec
dec
push
out
mov
inc
push
dec
mov
xchg
pop
push
lock
out
adc
jecxz
cwtl
loope
leave
inc
cltd
fidivs
cmpsl
pop
shll
add
nop
inc
lods
sub
push
pop
xchg
setne
xchg
pop
cmp
enter
hlt
mov
or
xor
mov
pusha
or
mov
ljmp
pop
fstp
mov
adc
xchg
fucom
xchg
lods
mov
lret
jnp
mov
movsl
add
test
ficoml
sbbb
aaa
das
inc
mov
sub
pop
sti
cmpsl
hlt
or
mov
andb
pusha
push
insl
push
outsl
cld
mov
or
rcrl
in
or
push
sbb
mov
sbbl
and
in
dec
cmp
mov
movsl
repnz
adc
xchg
stc
test
insb
pop
repnz
xchg
das
mov
sub
cmp
jno
xor
cli
mov
adc
mov
ds
xchg
sbb
jge
orl
lahf
daa
jmp
cmp
in
call
jmp
xchg
cmpsl
dec
pop
add
enter
push
out
push
sub
cmc
repnz
shlb
push
loopne
sub
popa
rcrl
xchg
inc
adc
outsl
sub
cld
int3
xor
int
test
jae
fsubs
cmp
xchg
cmp
xor
push
adc
push
jo
fldt
jmp
pop
nop
cmpb
adc
mov
loope
mov
shr
inc
std
dec
repnz
cmp
lahf
xchg
or
xor
or
int
pusha
lods
xor
shll
js
aaa
jb
pop
testl
push
lock
mov
pop
lock
mov
movl
inc
mov
dec
xchg
lds
xor
ret
aam
mov
outsl
push
sbb
andb
jnp
jl
cmp
decb
int
cmp
or
mov
adc
sub
in
or
scas
push
notb
sarb
dec
stc
xchg
mov
sbb
sbb
push
jno
pop
repnz
xchg
and
pop
jmp
int
ficompl
push
movsb
mov
xlat
xor
lods
cmp
and
stos
jbe
fildl
mov
rolb
cli
cmp
xlat
push
mov
sahf
imul
push
mov
mov
mov
pop
out
sbb
push
cmp
push
mov
cli
and
adc
imul
hlt
sbb
inc
or
sub
xor
into
inc
sbb
jo
sahf
lods
into
es
in
mov
xor
mov
dec
add
xchg
out
sti
inc
movb
inc
sahf
aas
xchg
lahf
inc
sbb
mov
int3
jp
sub
test
aaa
in
aam
cwtl
insb
dec
test
adc
std
pop
fistps
sbb
nop
push
push
push
pop
mov
imul
and
mov
insb
daa
xor
xchg
shlb
jecxz
mov
std
mov
jno
mov
mov
xchg
jns
jo
dec
pushl
mov
cmpsl
jae
mov
call
adc
sub
sub
sub
push
push
jmp
mov
test
dec
mov
mov
mov
and
pop
lcall
nop
shll
mov
inc
test
test
lock
aad
xchg
jl
popf
mov
faddl
daa
sbb
xchg
lods
ljmp
cli
fldenv
dec
mov
ds
jg
mov
sub
popf
hlt
or
test
lea
pop
roll
jmp
xchg
test
pop
and
inc
pop
xchg
jge
xlat
lret
mov
sub
insb
sahf
cmp
and
inc
shlb
into
aaa
sub
xchg
sub
mov
loopne
hlt
cmpsb
and
mov
mov
ss
mov
insb
lea
and
cmp
lock
jbe
aam
fcmovbe
decl
jmp
xchg
std
cmp
xor
adc
lock
sarl
or
pop
sub
adc
mov
dec
mov
xor
in
loop
push
and
int
adc
jns
adc
movsl
insl
xchg
xchg
movsb
dec
pop
sub
xchg
xchg
fistpll
orb
dec
loopne
xchg
out
add
andb
and
popa
inc
aam
lcall
arpl
sbb
adc
push
mov
or
xchg
test
ss
push
or
fistpl
in
gs
mov
mov
ror
mov
cmp
fs
ret
aaa
jp
test
inc
mov
aam
xor
fimuls
inc
jno
dec
add
test
outsl
out
int
dec
clc
lret
push
mov
cmpsl
sbb
adc
pop
rdpmc
test
inc
inc
testb
adc
and
das
mov
push
push
sbb
dec
push
add
cmp
adc
xor
ja
outsb
pop
push
pusha
mov
pop
sbb
pop
fsubrl
or
inc
or
nop
sbb
ret
loope
inc
jns
mov
js
in
pushf
sarl
stos
xchg
jb
jmp
movsl
inc
add
jae
mov
dec
xchg
mov
xchg
jo
test
cld
mov
jno
shll
or
js
aaa
lock
clc
cmp
into
in
cmp
cwtl
xor
js
imull
mov
nop
jno
and
lods
into
sbb
push
pop
add
push
mov
mov
and
aaa
movsl
sub
loopne
js
inc
sub
xchg
cmp
fcoms
loopne
fs
mov
lahf
and
into
adc
and
xor
adc
mov
inc
ds
out
push
mov
dec
jp
xor
and
pop
cmpsl
adc
sti
sarl
cld
das
push
jbe
xchg
pop
push
pusha
sub
jecxz
mov
gs
mov
into
xchg
ds
in
out
add
lcall
inc
aam
lods
nop
push
cltd
repnz
daa
push
test
dec
fimull
test
add
xorl
sub
mov
sbb
incb
inc
fisubrs
adc
jnp
shrb
mov
ret
or
out
inc
xorb
mov
ds
and
ret
pop
into
push
out
sbb
ret
lcall
cli
cli
push
scas
repz
fnsave
or
push
cmp
bound
add
test
jmp
jge
pop
jmp
cmpsl
das
bound
and
mov
mov
mov
scas
outsb
sub
subl
cmp
inc
lods
mov
mov
cmp
mov
addr16
add
insl
dec
mov
in
or
aaa
mov
xorb
sub
std
add
das
shl
push
pop
ds
lcall
add
scas
mov
dec
cwtl
movsb
sub
add
or
inc
mov
add
push
and
addr16
addr16
or
add
mov
sti
sub
mov
cmovb
mov
pushl
ljmp
ficomps
mov
dec
mov
jge
neg
mov
or
pop
fistpll
push
cmp
fs
jge
test
icebp
das
ret
js
adc
daa
xchg
scas
add
jecxz
sub
jecxz
xor
pop
int3
push
mov
dec
mov
push
adc
xchg
shll
and
daa
and
jae
dec
enter
in
pushf
inc
fldenv
in
rcl
ds
inc
xor
lahf
and
ret
mov
sbb
push
jl
pop
cli
jno
or
push
inc
mov
mov
cmp
loopne
stos
das
jg
cmp
and
pmaxsw
gs
movsl
repz
dec
ja
mov
add
btr
xor
or
mov
xchg
adc
push
or
jns
jno
jmp
inc
mov
mov
inc
repz
xchg
sbb
fistps
repz
dec
push
pop
testb
int
insl
jmp
mov
adc
or
pop
shll
xchg
fisubl
into
scas
hlt
dec
sub
push
sbb
pop
xchg
adc
stc
jae
in
bound
mov
into
add
mov
js
xchg
leave
pop
popa
sbb
cmpsb
pop
mov
xchg
mov
dec
jne
das
pop
mov
clc
dec
lfs
push
aaa
inc
mov
imul
movl
mov
jae
push
outsb
or
int
push
pop
sti
mov
clc
loopne
les
fdivrs
insl
pop
sbb
cs
jae
aam
xchg
adc
cli
popf
stc
call
bnd
aaa
cmp
adc
pop
mov
pop
imul
movsl
and
inc
cmpsb
inc
xor
jle
cmp
cld
addl
roll
sub
push
adc
dec
dec
add
fstp
cmp
bound
std
js
mov
xchg
shrb
loopne
shlb
cld
je
popa
sbb
jmp
push
pusha
pop
inc
mov
jnp
add
in
cmp
cmp
leave
mov
cmp
sbb
fcmovnb
repz
cltd
jno
xchg
adc
pop
jns
jecxz
popa
cmp
das
clc
inc
aad
leave
cld
add
mov
inc
inc
pop
inc
jo
out
mov
orl
data16
add
lret
sbb
mov
inc
bound
cmp
or
xlat
aad
dec
cmp
xor
push
mov
lock
sbb
ss
cmpsb
shl
sbb
stos
and
arpl
icebp
dec
imul
adc
aam
andb
cmpsb
lret
jo
and
in
inc
cmp
mov
shr
adc
loope
sub
jg
inc
mov
or
jno
into
xorl
cwtl
fadds
daa
mov
sbb
dec
push
pushf
and
int3
or
push
jno
lds
pop
push
or
lds
icebp
xchg
or
daa
lret
or
jp
dec
ds
sub
jno
sub
out
pop
loop
mov
sub
sbb
cld
xor
dec
sti
stos
cmp
mov
add
sbb
xchg
cmp
ret
xor
xchg
rcrb
mov
add
lret
push
jae
cmpsb
test
popf
xor
repnz
fisubrl
push
out
push
ds
lcall
push
pop
adc
popf
hlt
js
adc
sbb
cwtl
mov
rep
int3
adc
aam
dec
xor
adc
movl
inc
call
jmp
cli
and
sahf
hlt
pop
icebp
push
mov
loop
scas
lret
lea
xor
clc
jne
lcall
pop
insb
dec
jb
pop
data16
scas
inc
aaa
cmp
xchg
lcall
lahf
cmp
mov
xchg
or
cmpsb
in
aas
enter
es
add
fwait
pop
lret
in
push
dec
mov
jg
test
shrb
nop
fsubr
and
jg
sbb
sbb
mov
and
and
or
lock
xor
loopne
test
pop
cld
add
add
dec
loop
insl
inc
cmp
in
pop
xor
sub
call
leave
jl
outsl
lcall
in
mov
xchg
adc
xchg
xor
inc
sbb
fistl
xor
dec
mov
sbb
mov
fldt
loopne
pop
add
xchg
sbb
mov
push
cld
or
inc
mov
jbe
fidivl
push
shll
iret
arpl
insl
mov
cmc
adc
dec
test
mov
fbld
loop
sbb
ds
push
mov
mulb
shlb
icebp
dec
stc
mov
out
add
cmp
mov
ss
mov
add
adc
mov
insb
mov
loope
scas
popa
xlat
mov
mov
jb
aaa
mov
add
ret
pop
aam
or
inc
sar
out
fisttpll
jo
arpl
sbb
cmpb
call
cwtl
movsl
pusha
xchg
or
stos
insl
lcall
inc
enter
rorl
lret
push
and
daa
add
ficoml
mov
sub
out
bound
adc
lock
jmp
jl
mov
insb
fdivrl
jp
sbb
mov
or
mov
mov
add
ret
fistps
sbb
push
rcrb
cmp
cmpsl
and
mov
jb
fstpt
fs
cmp
sti
or
lock
jg
addl
cmc
imul
loop
enter
insl
cmovnp
xor
cmpsl
jmp
push
and
js
call
inc
frstor
or
das
cwtl
jle
loop
mov
xor
add
xchg
mov
cwtl
pop
add
fstl
cli
pushf
aas
pop
insl
mov
push
lods
or
test
xchg
inc
dec
push
pop
push
lea
aaa
jne
cmp
cmp
aad
add
ds
gs
inc
popf
aas
pop
mov
repz
scas
popf
popa
sub
xchg
mov
data16
sbb
mov
lock
mov
adc
insl
mov
mov
push
nop
and
sbb
cmc
dec
inc
cld
clc
loope
rol
mul
jns
jl
pop
inc
aaa
jns
pop
pop
mov
push
sub
mov
jae
xor
cmpsl
pop
pop
mov
mov
mov
fildll
call
dec
test
xchg
adcl
push
call
pop
or
scas
mov
sbb
mov
loopne
xchg
sub
inc
mov
push
aaa
out
icebp
mov
xor
dec
or
and
sub
sahf
push
js
mov
xor
shrb
xchg
inc
push
outsb
or
mov
xchg
and
jo
sbb
adc
lock
sub
stc
pop
inc
iret
lds
std
jge
jge
fsubr
stos
cmp
or
mov
adc
sbb
and
aas
test
andl
or
jbe
addr16
nop
push
xchg
sbb
mov
sub
aam
movsl
mov
adc
jecxz
or
sbb
out
cmp
or
test
std
push
arpl
cmp
dec
cmc
fsubs
sub
inc
jmp
mov
xor
adc
sub
out
pop
lret
cmpsl
and
or
into
fstpl
add
push
movsl
mov
arpl
cli
mov
add
push
insb
pop
fs
jmp
fadd
repz
arpl
cmpb
jnp
icebp
dec
push
xchg
push
jns
fs
lods
jno
fdivrp
inc
lods
or
int3
fistl
popf
and
jge
into
ja
cltd
lret
daa
inc
pop
cli
push
sub
sub
lds
inc
pop
hlt
fnstenv
jg
mov
xlat
sub
sahf
jns
jo
lret
cltd
pop
inc
and
int3
ret
ss
dec
pop
mov
xor
cmp
push
xor
lcall
mov
inc
push
das
xchg
jnp
push
jne
pop
fsubrl
push
clc
fstps
or
adc
or
sarb
cmp
fwait
dec
int3
sti
leave
lock
mov
xchg
jle
dec
pusha
and
add
push
pop
adc
mov
js
mov
mov
fwait
adc
push
arpl
pop
hlt
push
imul
or
cbtw
sbb
mov
in
mov
xor
fmul
sub
in
xchg
pop
out
pop
outsl
mov
adc
and
inc
ss
jmp
dec
aaa
shr
jmp
dec
mov
pushl
mov
clc
xchg
aam
in
fs
das
inc
fildll
mov
push
cmp
lock
frstor
lret
pusha
xchg
inc
add
adc
aad
rep
push
jl
mov
insb
repz
xor
pushf
sbb
jae
testl
pop
mov
cltd
test
jg
shrl
mov
add
adc
orb
daa
loop
out
fists
cmp
pop
fnstenv
pop
cmp
sarl
dec
pop
adc
mov
xor
or
std
loope
ja
and
cmpsb
inc
lret
push
sub
shr
nop
das
add
test
sbb
cmpsb
or
mov
mov
shlb
mov
mov
mov
dec
dec
dec
xchg
xchg
sti
mov
push
pop
cmp
xchg
cmp
out
push
dec
fists
mov
push
xchg
mov
out
pop
jo
mov
adc
mov
push
pop
push
sub
adc
lods
shlw
push
push
mov
add
out
cwtl
push
rcll
cltd
test
adc
fisubrs
xor
pusha
jecxz
adc
call
cmpsl
jae
loopne
movsl
rclb
push
cli
ret
push
lret
cld
dec
push
xor
fstpl
add
push
outsl
stc
adc
adc
inc
ficomps
inc
push
inc
inc
mov
arpl
dec
sbb
push
popa
adc
movsb
and
inc
dec
fisubl
out
push
movsl
xchg
pop
cmpsl
xchg
lahf
adc
mov
mov
test
xor
add
xor
out
rolb
les
jg
push
push
mov
arpl
stos
or
add
xchg
sub
mov
jbe
dec
pop
push
loop
fdivrs
repnz
ret
js
cmpb
mov
xchg
iret
sbbl
dec
sbb
pushf
pop
adc
xchg
xor
jb
lahf
loopne
push
clc
fisubs
jmp
imul
xchg
xor
outsl
jb
jne
aas
pop
arpl
cmpb
in
je
pop
jbe
jp
out
and
scas
out
dec
les
imul
loopne
pushf
adc
jle
int3
enter
mov
test
into
xchg
sub
adc
or
pop
lcall
and
pop
or
sbb
repnz
mov
data16
imul
push
cmp
pushf
int3
inc
jp
and
jp
or
cmp
fisubl
insl
add
sbb
mov
das
sub
fadds
adc
icebp
shlb
loopne
xchg
xchg
mov
ljmp
inc
push
mov
sub
cmp
test
incb
sbb
and
into
inc
fldenv
unpckhps
out
sub
cmpsb
mov
lea
cmp
insb
cmp
sub
xchg
int3
lods
inc
lret
add
pop
fdivrl
jb
in
push
pop
push
pop
cmpsl
dec
std
sbb
xchg
aaa
jo
icebp
roll
sarb
pop
xchg
mov
shlb
mov
pop
fldenv
lods
lret
out
mov
mov
cmp
or
ret
sbb
sub
push
imul
mov
rcl
addr16
push
sbb
xchg
int3
imul
mov
int3
cmc
push
push
xor
mov
in
jno
ja
ds
and
int3
fwait
int
decb
cwtl
les
sarb
mov
xchg
adc
pushf
popa
mov
jo
mov
iret
gs
cs
xchg
sub
push
inc
xchg
xchg
xorl
dec
jge
insb
xchg
pop
in
cmp
push
fstpt
shll
sub
mov
hlt
shlb
imul
mov
int3
bound
pop
mov
jg
popf
jno
divl
mov
mov
pusha
insb
into
cmp
enter
mov
xor
stos
adc
roll
movsl
adc
andl
xchg
adcl
aam
push
test
add
lea
scas
test
addr16
stc
pop
push
outsl
imul
jnp
fcoms
mov
test
mov
ror
add
movsl
je
push
loope
fs
out
notb
lret
lods
pop
dec
adc
or
push
test
pop
nop
nop
insb
mov
cld
test
pop
jns
jnp
adc
jecxz
ds
mov
mov
push
fs
jl
iret
xchg
loop
daa
fisubrl
ljmp
cmc
push
pop
adc
pushf
test
jbe
push
test
lods
shlb
inc
push
test
jb
js
fcmovnu
add
xchg
mov
xchg
mov
fadd
lcall
sbb
nop
and
mov
int3
mov
ja
inc
mov
xchg
push
mov
jnp
push
rorb
lcall
add
mov
int3
sub
movlps
mov
push
jge
pop
arpl
cli
je
addr16
push
push
mov
lahf
mov
and
jae
mov
mov
mov
sarl
pop
outsl
cmc
xchg
or
jp
mov
bound
inc
push
mov
movsl
loop
xor
and
mov
mov
cmp
ds
inc
sbb
cs
sbb
mov
add
add
pop
and
fwait
shr
div
aaa
es
scas
push
cltd
sub
or
mov
ss
out
lds
dec
das
imul
repz
xorl
pop
dec
je
add
daa
mov
fsubs
push
inc
or
jnp
jp
and
daa
mov
adc
lea
adc
mov
aam
mov
imul
jl
roll
mov
sub
imul
push
or
pop
jge
xchg
mov
loope
popf
or
pop
ret
fs
xchg
and
aad
jle
in
inc
sbb
pop
cmp
je
lahf
pop
pop
ret
sub
aas
xor
mov
dec
test
out
jle
pop
push
sub
out
fs
out
rcr
and
mov
insb
sbb
dec
je
fstl
adc
cmp
in
push
jbe
loop
sub
jne
mov
push
push
subb
mov
adc
dec
or
xor
pop
lds
sub
pop
fdivrl
xor
or
sarb
inc
cs
ficomps
cmp
jo
enter
sub
ljmp
mov
dec
es
adc
in
inc
in
insb
push
adc
pop
push
sahf
jp
lods
pop
outsb
ret
push
shll
loop
cs
frstor
mov
pop
pop
adc
clc
and
and
scas
lods
pop
scas
out
add
lret
sub
nop
mov
mov
popf
sbb
shrb
mov
jno
jno
loopne
xor
pop
dec
xchg
arpl
and
jns
push
jg
loopne
push
sub
push
outsb
jne
dec
outsl
mov
xchg
test
cmp
xchg
mov
and
hlt
inc
add
outsl
sub
pop
xlat
loop
mov
lock
jp
stc
sbb
sbb
pop
cmpsb
adc
jnp
xor
dec
ficoml
sti
fwait
jg
xlat
out
jl
ss
jle
mov
inc
inc
filds
xor
rclb
lds
cmpsl
inc
dec
xor
int
mov
out
xor
sub
cmp
jecxz
sbb
testl
stos
jmp
push
insl
mov
adc
xorb
imul
inc
mov
mov
dec
pop
sub
add
and
jno
add
jbe
mov
cmpsl
fnstcw
pushf
pop
inc
mov
loopne
xchg
jp
out
jecxz
pop
fs
pop
or
jae
inc
push
sub
inc
dec
gs
dec
test
aaa
push
xchg
test
pop
adc
xchg
aad
scas
jle
movsl
push
dec
pop
je
mov
mov
jb
cmp
outsl
outsb
inc
push
jnp
aad
ljmp
mov
add
jns
xchg
cmp
orb
xchg
sbb
dec
std
mov
lock
sbb
mov
pop
adc
mov
xorl
pop
mov
and
loope
leave
jnp
lret
test
jge
nop
in
rol
cmp
xorl
xchg
cmp
xchg
xchg
sub
cltd
test
adc
outsb
fsubrl
imul
cmp
repz
or
pop
dec
daa
dec
and
jmp
jecxz
inc
xorl
std
xor
add
mov
or
sub
rcrl
push
lods
or
outsb
outsb
cmpsb
pop
aaa
imul
mov
inc
int
pop
arpl
cmp
lea
inc
cmp
cmp
cmpsl
lret
jl
sbb
or
mov
cmpsb
inc
adc
lcall
add
jo
scas
hlt
mov
lcall
push
jb
test
out
int
test
cmp
das
out
enter
test
push
jl
inc
or
insb
xchg
mov
stos
lds
ljmp
mov
aad
pop
mov
pop
popa
sbb
popf
gs
sahf
cmp
pusha
lock
inc
loope
lock
int
sbb
lea
ret
lock
mov
dec
sub
negl
iret
jo
ret
test
jnp
rol
pop
test
popf
out
popa
cmp
pop
push
inc
test
int
pushf
pop
sbbl
mov
or
enter
mov
sub
adc
inc
push
packssdw
adcl
pop
imul
dec
sbb
ret
mov
les
mov
loopne
gs
xor
fldt
aad
xchg
aad
or
lods
push
push
xchg
stc
mov
out
nop
popf
cmp
sub
jl
push
sarl
cmp
imul
mov
or
dec
popl
rorl
push
push
aam
out
mov
loopne
ja
push
insl
hlt
dec
fmul
cmp
aad
dec
cmp
add
pushf
enterw
xor
test
es
fs
cmpb
lret
lcall
add
jns
cli
mov
rcrl
shl
stc
fcmove
jbe
cld
imul
in
mov
xchg
mov
fistl
outsb
testb
test
pushf
inc
outsl
mov
mov
sahf
cmpsl
std
roll
mov
ficoml
icebp
sub
lcall
ret
jmp
push
lock
pop
mov
add
mov
inc
pop
push
or
xchg
sbb
testl
jns
in
push
and
mov
iret
inc
mov
jl
xor
test
pop
xor
fadds
cltd
jnp
faddp
xor
sub
popf
arpl
cmc
cmp
sub
dec
insl
lahf
mov
xor
mov
xchg
push
fdivl
adc
insl
sbbl
pop
outsb
jbe
adc
out
xor
inc
lea
add
aaa
out
lods
and
leave
cmp
iret
pminub
xchg
nop
and
lcall
and
jl
mov
mov
xchg
stos
loop
sub
addr16
jmp
xchg
fcomps
jae
inc
cltd
and
fwait
xor
adcb
pusha
and
pop
cmp
dec
adc
loopne
jge
or
pusha
mov
inc
scas
cwtl
jno
das
jp
mov
and
or
inc
or
enter
inc
xor
add
cli
push
xor
or
test
mov
add
scas
inc
test
mov
in
pop
imull
cli
scas
sub
add
fstl
inc
rorb
pop
lahf
out
movsl
int3
add
push
inc
dec
outsb
push
jmp
inc
pop
loop,pn
scas
inc
lret
cld
mov
icebp
pop
jb
and
cmp
adc
inc
xor
mov
stos
in
sbb
roll
iret
mov
cs
cli
mov
sub
shll
cwtl
jns
das
loopne
jl
aaa
inc
xchg
mov
and
sbb
iret
das
pop
aam
dec
xchg
add
sub
pushf
lcall
loopne
sub
sub
xchg
fsubr
leave
andl
ror
dec
pop
loope
cmp
adc
inc
dec
stc
add
add
fwait
mov
js
xchg
das
adc
loop
in
popa
cmpsb
push
xchg
sahf
or
int3
xor
sarb
adc
adcb
loope
mov
xchg
sti
cmp
jecxz
cmp
cmp
push
jb
imul
xor
mov
clc
mov
filds
in
in
xor
pushf
nop
jecxz
cmp
mov
mov
pop
aas
in
repz
addl
inc
fs
imul
int3
jbe
xchg
out
stc
adc
mov
cmp
fs
adc
sbb
aad
pushf
arpl
lahf
cmpl
jne
rorb
ret
jb
nop
jl
xor
and
daa
enter
or
xor
cmpsb
cmp
sbb
cwtl
sahf
mov
subb
adc
adc
loopne
jne
mov
inc
jge
dec
test
xchg
or
adc
insl
adcb
push
xchg
dec
pop
xchg
push
mov
cwtl
bound
pop
adc
daa
dec
lahf
sysret
lret
adc
test
mov
pop
inc
popf
sahf
cmc
int3
lds
xlat
shrl
xorl
adc
sub
popa
aad
push
push
les
cmp
mov
xor
movsl
push
adc
jns
mov
mov
sub
mov
aas
arpl
inc
xor
stos
insl
xor
or
jmp
inc
jecxz
sbb
bound
fisubrl
movsb
cs
les
mov
jle
xchg
sahf
insb
pop
lret
jecxz
push
jo
cmp
jnp
ret
push
std
filds
mov
cmpsl
mov
mov
js
mov
mov
sub
push
fsubs
aaa
xor
clc
mov
push
push
lods
scas
inc
xchg
adc
rcll
mov
add
pop
pop
ss
test
jno
aaa
shlb
nop
jecxz
lds
adc
fs
nop
adc
test
fdivs
jmp
sarb
aaa
inc
mov
push
std
and
pop
lret
mov
cmpsb
data16
mov
ret
mov
sahf
into
cmpsb
cli
push
sbb
mov
mov
xor
mov
lea
test
in
cmp
inc
ja
dec
decl
mov
ds
popf
stos
in
pop
sahf
jl
lret
add
inc
mov
add
add
das
int3
jbe
loope
adc
cmp
data16
je
gs
lods
loopne
cs
sbb
xchg
sbb
jne
pop
mov
rcl
mov
outsb
and
cmp
push
adc
mov
jge
xchg
repnz
cmp
push
repnz
mov
adc
cmp
lahf
test
call
into
popf
jmp
rclb
jge
or
adc
fwait
add
fnstsw
mov
inc
pop
int3
stos
mov
jge
or
imulb
incb
shl
push
jle
sahf
lock
push
cld
and
and
sarb
arpl
add
sub
in
bound
push
and
test
inc
jmp
arpl
test
out
jno
xor
cwtl
stc
popf
repz
into
cmp
ret
jb
jmp
cmpl
or
fwait
add
sbb
push
sub
mov
inc
pop
nop
push
push
enter
lods
or
jge
div
push
jmp
cmp
pop
int3
mov
imul
icebp
mov
ret
jmp
mov
scas
ss
je
repz
jmp
call
xchg
ja
mov
jnp
push
add
idivl
mov
hlt
xor
nop
xchg
sub
fs
std
loope
daa
mov
call
push
push
popf
fsubs
cmp
adc
jmp
or
cmpsl
jp
in
add
mov
inc
ljmp
pop
mov
dec
mov
push
mov
add
shll
xchg
add
movsb
sbb
pop
pop
leave
xor
scas
sbb
or
xor
fwait
lret
fnstenv
and
mov
xlat
inc
sbb
stc
das
sbb
lret
lods
mov
jbe
scas
xchg
cmc
divb
add
mov
int
dec
jge
in
mov
dec
cmpsb
pop
aad
pop
mov
shll
mov
in
xor
fcmovnu
xchg
jae
out
pop
pop
stos
ror
dec
sbb
push
ret
mov
inc
mov
cmpsb
mov
mov
lcall
dec
pop
jle
xor
add
push
dec
pop
xor
push
lahf
xor
lret
fwait
jo
xchg
les
push
rcll
js
scas
mov
push
adc
mov
push
mov
les
popa
push
xchg
and
push
scas
lods
sbb
push
scas
adc
mov
enter
pop
rcl
xor
jge
idivb
mov
jg
and
push
ljmp
fsubrl
dec
inc
ret
add
in
push
push
xchg
shrb
loopne
mov
inc
mov
outsl
or
scas
fidivs
push
lods
sbb
idiv
ror
adc
sub
add
fistps
push
cmp
sub
rcr
inc
movsl
fisubrl
out
sbb
stos
add
shlb
mov
mov
scas
and
add
mov
sbb
jge
test
push
jle
pushf
cmp
daa
jns
dec
mov
cmpsb
int
cmpsl
fisubl
sbb
mov
dec
add
push
push
sub
pop
cmc
test
pop
push
push
dec
ljmp
mov
cmp
cld
das
pop
rolb
loope
sbb
jl
dec
jnp
mov
and
mov
outsl
sbb
and
dec
mov
das
out
ret
es
cmpl
xchg
in
sbb
in
adc
shll
add
lock
shll
cld
sub
xchg
leave
loope
stos
push
inc
int
jns
sbb
fsubp
fists
mov
sub
inc
fdivrl
leave
movb
pop
std
nop
lahf
lcall
addr16
pop
repz
call
dec
mov
xor
orb
arpl
jnp
mov
pop
jp
loopne
dec
cltd
mov
jl
inc
inc
lea
ret
push
fwait
lods
jg
jnp
jne
in
jo
ret
push
leave
rcrl
outsb
es
mov
sub
sbb
insl
lahf
call
stos
je
dec
mov
inc
nop
enter
mov
mov
add
pop
shrl
add
and
mov
pop
xchg
lds
in
leave
addr16
sbb
add
xor
mov
mov
add
xchg
scas
cld
inc
or
dec
jne
mov
sbb
mov
pop
xlat
and
cltd
jecxz
inc
inc
mov
cltd
aad
push
and
dec
shlb
inc
add
cmp
inc
jne,pn
inc
push
rcr
ret
lahf
add
xchg
iret
push
js
sbb
pop
cmc
sbb
cmc
jecxz
pop
cmp
std
add
add
lods
shl
jecxz
ja
in
pop
bound
mov
sbb
das
outsb
push
into
adc
jl
fdivrs
or
and
dec
imul
outsl
std
jp
ja
add
jno
addl
add
lret
dec
xchg
inc
mov
jg
mov
adc
lods
dec
mov
movsb
push
imul
sbb
push
cld
fdivl
xchg
and
cmc
add
xchg
testl
out
dec
test
stc
and
dec
add
js
enter
xchg
inc
pop
or
popa
sbbb
adc
xor
sbb
cmp
or
and
pop
pop
call
fsubrp
inc
test
cwtl
shlb
call
sbb
xor
and
xchg
jno
jmp
stc
or
cmpsb
or
push
ljmp
sbb
data16
push
add
fwait
adc
adc
mov
cld
inc
push
inc
push
adc
aaa
pop
imul
stc
sub
iret
jecxz
mov
cwtl
shrl
rcr
sub
lds
lahf
push
out
insb
cmpsl
sbb
clc
nop
sbb
xchg
popa
xchg
sbb
cmp
adc
dec
sbb
stos
mov
xchg
xor
inc
orb
pop
nop
stos
stos
test
and
aaa
popf
in
icebp
sbb
inc
in
xor
in
lods
in
test
xchg
lret
mov
add
js
mov
arpl
xchg
je
add
xchg
movsb
adc
insl
cmp
fmuls
ret
das
pop
push
or
xchg
ret
aad
lock
push
ds
out
imull
insl
jnp
inc
fisubl
mov
sub
cmp
les
xchg
cld
inc
sahf
add
add
in
jge
inc
es
gs
and
push
dec
mov
jns
rclb
frstor
test
dec
hlt
or
mov
out
jmp
inc
sbb
cwtl
dec
test
nop
xor
jbe
sahf
lock
ljmp
xor
inc
hlt
fisubrl
mov
imul
outsb
iret
in
xchg
test
jo
sbb
in
mov
leave
xor
fwait
fwait
mov
fcoml
inc
and
iret
mov
fsubp
or
dec
or
ret
mov
repz
out
pop
es
pop
das
fiaddl
mov
aad
adc
lds
cld
arpl
scas
and
cltd
mov
les
test
add
es
cmc
or
mov
js
sub
lods
mov
lahf
test
push
clc
inc
cmpb
mov
stos
in
xchg
daa
fstpt
inc
mov
cld
jmpw
push
mov
xchg
jno
push
imulb
dec
mov
or
shrl
sahf
popf
push
push
lret
and
push
ds
leave
lods
scas
cmpsl
sbbb
subb
cmp
aas
hlt
xchg
in
aad
popf
add
xchg
subb
jecxz
dec
or
loopne
aaa
jge
jecxz
pop
fimuls
sbb
fisubs
xchg
sub
jp
inc
ds
sbb
pop
and
fsubrs
outsl
mov
mov
cld
jle
fnstsw
jne
jp
xlat
in
mov
rcrb
ljmp
in
add
leave
stos
call
lods
xchg
pop
pop
sbb
xchg
mov
xor
into
mov
cmp
inc
clc
stc
ds
outsl
mov
rcll
ret
sub
jecxz
xor
inc
rcrb
je,pn
jg
sbb
fistps
mov
movsb
or
rcr
xor
lcall
outsl
lea
ret
dec
lcall
cmpb
sbb
xchg
scas
mov
subl
cltd
or
xorb
cmp
mov
jo
jnp
push
push
xchg
js
pop
xchg
xchg
jg
xchg
lods
push
stos
popf
pop
ret
insb
lret
xchg
inc
hlt
mov
icebp
sbb
ljmp
mov
xchg
shl
xor
inc
not
sbb
ljmp
xlat
adc
adc
xchg
js
sbb
pop
adc
es
xlat
les
adc
and
dec
test
hlt
and
sub
imul
std
sbb
cld
dec
and
fwait
pop
jne
clc
cli
jns
cwtl
push
pop
add
push
icebp
rcl
xor
gs
out
test
es
push
jecxz
in
dec
push
jno
pop
mov
mov
in
mov
lcall
stc
pop
jae
pop
add
movsb
ja
es
in
movsl
mov
mov
cld
in
jmp
inc
jl
fucom
stc
outsb
push
out
sbb
jmp
push
cmp
mov
sarl
lcall
fiadds
outsb
ds
sub
mov
adc
loop
outsl
iret
repz
jmp
inc
push
lds
adc
mov
or
aas
loope
jb
ljmp
or
popf
mov
je
add
movsb
dec
xchg
shl
in
lahf
pusha
cltd
push
pop
mov
adc
in
jns
cmp
sarl
dec
stos
fdivs
std
out
xorl
nop
lods
stos
mov
jo
mov
push
mov
sub
sub
pop
xor
pop
pop
push
movl
and
pop
add
out
in
sub
xor
les
lret
not
pusha
cmc
test
push
pop
movsb
fsubrs
add
repz
ficompl
push
mov
pop
loope
push
mov
orl
sti
push
pop
xchg
orb
pop
sbb
add
add
shrb
mov
popa
cmp
sub
cmp
pop
mov
aam
cli
into
dec
or
pop
rolb
cld
popf
xchg
out
sub
and
jl
add
sub
mov
insl
dec
jp
xchg
pushf
add
jge
ja
fcmovnu
inc
repnz
lods
mov
dec
push
add
sahf
aam
xorb
insb
mov
mov
jo
fidivs
cmpsb
push
cmpsb
pusha
mov
sbb
lods
mov
inc
lds
or
andl
mov
into
lcall
jmp
iret
addr16
fists
push
jne
or
xor
cmpsl
pop
fisubs
bnd
arpl
xchg
fidivs
xchg
ret
mov
xchg
insl
in
sbb
imul
ja
in
or
outsl
mov
nop
ss
push
sub
into
xor
in
sbb
push
mov
xlat
ss
cmp
fstl
es
loop
jge
inc
jno
inc
ss
pushf
or
lret
inc
pop
roll
adcb
bound
pop
or
cwtl
or
mov
mov
cmp
shlb
aaa
pop
mov
cmp
lods
pop
sub
mov
dec
loopne
loop
dec
or
mov
in
xor
fidivrs
xchg
jl
mov
or
dec
movl
lret
in
adc
popf
xchg
test
mov
addr16
jge
push
imul
jge
sub
push
mov
adc
xchg
add
repz
cmp
xchg
jl
jp
iret
mov
in
inc
sbbb
in
sub
dec
popa
clc
daa
ljmp
popf
cmpl
or
mov
in
arpl
mov
and
sahf
dec
and
cli
push
jecxz
int3
adc
arpl
adc
add
pop
out
aad
cmp
mov
sbb
xchg
jae
mov
scas
pop
jne
xchg
dec
pop
xor
data16
data16
xchg
jmp
stos
xchg
nop
dec
orb
inc
jo
xor
lea
sub
pop
loope
fnstcw
xor
rol
lret
lcall
cmp
call
fincstp
loop
mov
stos
push
jg
filds
cmp
sbb
push
punpckhwd
sub
je
xlat
pop
cmc
xchg
cmpl
mov
inc
push
enter
sarb
or
aaa
out
push
ds
push
cmp
inc
cmp
xchg
movsl
mov
jo
lret
add
lock
sbb
leave
movsb
xrelease
pop
faddl
jbe
test
adc
scas
mov
push
stc
iret
and
push
add
hlt
mov
push
sub
or
xchg
mov
outsb
movsb
jnp
mov
outsb
add
pop
je
sub
mov
rolb
addr16
idivb
repz
pop
xor
pop
into
movmskps
mov
mov
dec
add
addb
cli
inc
mov
inc
lds
es
jmp
je
sbb
in
pop
cmp
and
out
fdivrl
jo
in
or
jmp
mov
icebp
aam
bound
scas
sbb
cs
sub
loop
pop
bswap
inc
int3
jae
mov
adc
clc
jmp
xchg
lods
mov
clc
sar
cmp
push
add
pushw
xor
sarl
adc
and
rcrl
pop
jl
push
xchg
rcrb
fs
push
and
sub
cmp
in
inc
ret
add
inc
shrl
bound
sarl
insb
scas
movsl
adc
pop
push
xchg
xchg
orl
cmp
sub
aad
scas
shlb
icebp
or
sti
adc
ret
lods
aam
and
fcompl
or
ja
or
outsl
lret
push
push
int
mov
in
sar
push
andl
decl
xor
pop
mov
loope
mov
das
mov
xchg
adc
in
push
loopne
popf
adc
dec
in
mov
dec
dec
bound
daa
fwait
push
ljmp
ja
test
jg
les
mov
xchg
xor
dec
mov
shll
mov
fcmovb
jp
mov
cmc
and
jecxz
xor
cmp
inc
imul
stc
cmpsl
testl
test
or
mov
pop
js
xchg
iretw
dec
pop
lcall
jmp
cmp
mov
dec
jae
push
inc
daa
je
fimull
jmp
or
divl
jl
jns
fwait
dec
add
mov
inc
pop
dec
fsubl
inc
mov
test
adc
jne
pop
sub
jge
arpl
xchg
jb
stos
scas
jno
inc
adc
dec
add
push
push
addr16
lds
pop
lcall
aam
mov
inc
inc
arpl
xor
lock
mov
add
dec
clc
mov
sbbl
cmp
mov
adc
push
inc
pop
push
sub
pop
ret
cmp
adc
jge
bnd
push
sbb
add
loopne
bound
jg
cltd
and
pop
pop
mov
mov
mov
lds
test
pop
test
xor
cmpsb
sbb
fcmove
mov
dec
inc
sbb
add
scas
test
push
nop
arpl
insb
addr16
orl
cmpsb
fistl
or
dec
dec
jmp
xchg
cmpb
in
dec
inc
fiadds
jne
popa
fcmove
insb
outsl
and
pop
push
jbe
loope
mov
js
inc
out
outsb
cmp
push
mov
xchg
mov
mov
mov
ds
test
push
rorb
mov
xor
jb
minps
push
adcb
sub
push
lods
adc
push
test
inc
ret
mov
shlb
push
addb
ret
xchg
xor
xchg
rcrl
out
xor
outsl
push
popa
sub
xor
and
xchg
and
repz
xor
in
mov
pop
add
inc
popa
cmpsl
pop
pushf
sbb
sbb
out
or
lcall
xchg
mov
test
mov
inc
aam
xor
add
fisttps
rorl
aam
xchg
and
lods
xchg
aas
mov
test
in
je
dec
and
jbe
add
cmc
and
add
jge
xchg
loop
mov
stc
mov
mov
jge
inc
jns
mov
xchg
lahf
sub
sub
sbb
push
sahf
sub
add
sahf
hlt
push
insb
mov
data16
sub
mov
pop
sbb
and
push
daa
xchg
jbe
in
jp
xor
jne
jb
jg
adc
insb
inc
ss
add
test
mov
cwtl
push
adc
sbb
out
jo
stc
negb
fistpl
sbb
test
xor
mov
xchg
adc
adc
xchg
lock
xchg
imul
mov
or
and
fdivrl
es
rcrb
mov
aad
or
pusha
pusha
mov
sub
repnz
pop
clc
xchg
and
and
mov
cmp
ss
out
add
xchg
and
mov
addl
push
outsb
adc
pop
addl
movsb
push
adc
sbb
and
pop
ret
int3
mov
addr16
pop
adc
fcmovbe
push
cmp
inc
push
push
imul
imul
jp
mov
ljmp
and
inc
mov
mov
das
inc
xor
mov
push
or
xchg
jb
mov
mov
ss
jns
and
adc
cld
test
dec
pop
ss
sbb
das
pop
or
aam
add
cmp
in
jg
pop
daa
faddp
mov
push
xor
das
enter
movsl
ljmp
xchg
push
mov
push
add
inc
or
mov
lods
adc
xor
cwtl
jbe
push
bound
mov
mov
push
cmp
bound
adc
imul
mov
fs
jle
sub
nop
movsl
icebp
cmp
jae
pop
das
jb
mov
or
in
mov
scas
lret
inc
jmp
xor
mov
xchg
xchg
sbb
cs
xchg
faddl
mov
inc
mov
cmpsb
xchg
stos
push
int3
fcmovu
not
pop
sub
adc
mov
aad
push
lcall
aam
inc
xchg
mov
rol
rol
stos
movsl
push
xchg
mov
test
sub
mov
jmp
adc
out
lahf
imul
out
and
xchg
adcb
mov
mov
mov
lea
and
xchg
add
mov
sub
dec
aam
je
div
mov
sbb
mov
movsl
and
aad
popa
and
in
mov
mov
xor
repz
inc
sub
mov
out
cli
inc
loopne
ret
ret
adc
pop
into
sbb
sbb
repz
inc
pop
mov
shll
aam
int
das
xchg
mov
dec
mov
dec
cmp
aad
push
data16
ljmp
nop
std
mov
dec
es
mov
mov
sub
test
or
fwait
scas
lcall
in
xor
lea
loop
ret
clc
dec
sbb
or
ret
mov
outsb
pusha
sbb
sbb
into
pushf
lods
push
jo
in
into
daa
jae
push
add
loope
roll
sbbb
pop
ljmp
or
bound
adc
dec
and
insl
push
cmpsb
fbld
std
xor
jmp
enter
test
fcompl
add
fstpt
sbb
das
pop
add
push
bound
mov
jmp
mov
mov
imul
cmpsb
out
test
xor
fisttpl
bound
insb
jnp
fwait
sbbb
sbb
dec
mov
mov
xchg
cmp
push
inc
aad
and
push
ss
mov
movsl
fistl
mov
add
pusha
dec
mov
cmp
sbb
repnz
cmp
sub
cmp
push
inc
and
add
jne
mov
adc
cld
popf
push
inc
loope
bswap
sbb
fstpt
mov
xchg
or
enter
inc
push
cmp
nop
sub
sub
mov
mov
sub
dec
push
fs
dec
test
stc
mov
fcmovnb
xor
ds
push
and
pop
stos
or
leave
xchg
fistps
adcb
cltd
enter
cld
divb
fistl
cli
push
cli
repnz
dec
xor
rcr
idivb
popf
loop
jmp
xor
pop
rcll
jbe
sbb
add
mov
shll
les
or
jl
mov
inc
or
mov
xor
inc
scas
inc
dec
testl
movb
lahf
ret
cmp
mov
sbb
sbb
popa
insl
or
pop
pop
push
sub
aaa
sub
stos
rorb
gs
inc
sbb
mov
ds
insb
cli
cmp
sub
xchg
repnz
leave
lcall
cltd
push
push
xchg
mov
jae
xchg
mov
add
aas
faddl
inc
sub
loop
pop
xchg
mov
je
cmp
pop
call
inc
lock
imul
xchg
mov
dec
les
roll
sub
pushf
jne
inc
mov
fnsave
dec
lds
cltd
or
mov
mov
inc
nop
xchg
cmpsl
push
scas
mov
int
adc
push
xlat
push
jo
sub
iret
adcl
push
push
dec
xchg
bound
or
add
sti
adc
ja
lret
lahf
push
pop
cmp
loop
lods
dec
fidivl
aad
inc
test
add
sbb
fisubrs
mov
iret
add
cmp
test
jb
xchg
daa
stc
scas
imul
gs
aad
mov
bnd
xor
push
in
lock
jle
push
lcall
cmp
xor
push
mulb
or
stos
in
jne
inc
or
sti
pushf
xor
fiadds
enter
gs
dec
outsb
sbb
cmp
mov
add
jo
in
or
mov
out
cld
xchg
mov
pop
int
insl
mov
pop
stc
loopne
and
mov
push
stos
xchg
pop
push
fucomip
push
idivl
daa
or
lret
mov
cltd
lret
xchg
fldcw
cwtl
jp
dec
sar
lret
pop
sub
cli
repz
mov
push
addr16
xor
dec
lods
xor
mov
xchg
inc
daa
push
mov
insl
lods
ds
xlat
in
fcomp
xor
mov
pop
jo
push
mov
or
in
pop
mov
push
jmp
inc
push
cmpsl
and
push
adc
bound
pop
inc
add
mov
rcll
and
arpl
repz
xchg
js
andb
mov
inc
and
sub
dec
icebp
test
ljmp
call
sbb
jl
loop
xchg
fcomps
sub
pop
fiadds
cmp
push
js
jae
dec
ret
add
mov
or
lods
cld
mov
pop
stos
rolb
int3
jno
jnp
mov
ja
sahf
outsb
add
adc
xor
leave
repnz
movsb
push
outsl
pusha
iret
xor
enter
fisttpl
pusha
xlat
out
xlat
lahf
mov
xor
sti
pusha
cmp
dec
pop
mov
mov
aas
out
call
dec
dec
sub
lods
addr16
cmp
adc
dec
cwtl
lods
inc
cs
in
and
push
hlt
cld
and
jecxz
sbb
fcmovnbe
dec
push
aad
pop
adc
ret
xchg
das
dec
int
stos
xchg
inc
jle
pop
jge
test
inc
es
add
ret
lods
fnstcw
jmp
gs
insb
inc
mov
icebp
xor
pop
pop
jb
movsl
sti
push
inc
repnz
xchg
daa
push
inc
mov
push
mov
xor
mov
sbb
mov
dec
sti
push
mov
mov
add
ss
sbb
cmp
jo
mov
pop
aas
jmp
loop
je
addr16
sbbb
push
rcrb
push
pusha
stos
or
jb
cmpb
jae
loopne
cmp
loop
aam
nop
fcomp
add
jle
jae
sub
fwait
and
push
adc
insb
rcll
xchg
pop
das
lods
aam
mov
pop
add
push
data16
sub
push
mov
ret
mov
lahf
out
sar
dec
icebp
rclb
add
repz
xchg
jne
js
xchg
fmuls
jmp
shrb
add
sub
push
sahf
fnstcw
cmp
or
add
xor
or
mov
or
inc
push
dec
mov
jb
out
rcrb
push
jo
jnp
adc
enter
cmpsl
fisttpll
pushf
ret
or
add
icebp
and
mov
xchg
mov
arpl
jne
mov
jecxz
mov
mov
addr16
out
aad
aad
popf
test
test
inc
jo
push
dec
mov
daa
jle
das
adc
ret
push
aaa
push
xchg
out
sub
adc
repnz
lea
mov
aaa
push
sarb
sub
sub
jnp
push
enter
in
add
pop
negb
ror
mov
int
jmp
cli
dec
and
sbb
enter
jns
in
xlat
mov
jge
ds
in
add
cmc
xor
sub
stos
cmp
aad
cmp
mov
add
jl
mov
jnp
decl
jmp
and
jne
pop
loope
dec
out
int3
ljmp
movsb
addr16
mov
sub
inc
in
jb
push
repnz
sub
adc
pop
xchg
mov
jnp
stc
aas
scas
xor
js
insl
cmp
fists
push
fistpll
repz
ja
rcr
sbb
xor
sub
xor
jl
sub
xor
cmpsb
xchg
into
adc
mov
sbb
lret
jno
fwait
add
fcomps
pop
jns
push
sbb
cwtl
xor
pop
iret
cmp
inc
ficoms
add
and
mov
movsl
lea
stc
xchg
xchg
add
ss
push
and
add
pop
jmp
ja
fstpt
xor
in
popf
mov
mov
adc
pop
popf
push
repz
dec
inc
push
pop
push
dec
fcompl
pop
or
xadd
lcall
test
add
xor
inc
ja
mov
xor
dec
ret
mov
add
cmp
fimuls
fbld
push
mov
xchg
outsb
out
pop
fs
pusha
loopne
stos
cmc
or
stc
popf
xlat
jecxz
xor
jne
sbb
xchg
mov
ja
mov
sub
sub
dec
mov
sub
push
jnp
jl
and
mov
addb
orl
push
add
xorl
xchg
adc
scas
cmp
lods
arpl
call
aad
sub
jo
hlt
sahf
aaa
in
pop
in
hlt
add
addb
leave
lret
inc
dec
jmp
es
push
aad
jne
xchg
and
pop
imul
fdivrl
adc
dec
jg
sbb
icebp
and
cmp
mov
cmp
xchg
push
js
xchg
jg
lock
into
iret
pop
jae
sbb
out
imul
scas
sbb
cmpsb
jmp
cmp
hlt
cmpl
jle
test
cmp
mov
pop
jns
or
ror
mov
sarb
fwait
cmc
cmp
adc
and
jg
mov
adc
mov
pushf
sub
aas
mov
xchg
add
dec
inc
shlb
bound
lret
dec
cmp
pop
rcrl
xor
jne
iret
data16
xorl
int
es
scas
jae
or
push
adc
xchg
jno
sub
mov
push
inc
data16
xchg
sar
pushf
dec
cmp
jno
xchg
xor
jg
fsts
mov
xchg
mov
inc
ret
hlt
jecxz
clc
iret
mov
xor
add
mov
rclb
out
movsl
rcr
sbb
dec
pop
repz
js
add
inc
mov
daa
shrl
std
push
roll
xchg
pop
lds
ljmp
les
sti
push
jae
aad
lret
lret
mov
js
insl
add
movl
or
out
pop
outsb
mov
sub
mov
mulb
cmp
pop
sub
push
jae
scas
adc
push
sbb
ret
pop
es
adc
xchg
sub
sbb
inc
lret
fsts
add
std
pop
xchg
push
push
sbb
pop
xchg
push
xchg
sub
rorl
and
cli
out
gs
int
movsb
outsb
mov
mov
mov
pop
cs
sub
bound
pop
push
or
test
mov
mov
sub
ds
or
mov
popl
in
lods
mov
aad
mov
out
lahf
jl
dec
cli
cmp
jmp
outsb
pop
shrl
stos
push
fs
adc
popa
mov
ja
mov
pop
std
inc
push
sbb
inc
pusha
scas
mov
cli
cwtl
dec
cld
cmp
test
xchg
aam
add
clc
fcoms
mov
mov
mov
pushf
or
cltd
jp
push
push
jno
sbb
xor
and
lea
jg
int
mov
adc
sbb
mov
mov
jns
inc
fistpl
jp
push
mov
or
sti
shr
sti
mulps
nop
mov
les
test
outsl
fwait
xchg
movsl
fldenv
pop
jae
scas
lcall
arpl
mov
imul
insl
push
leave
lcall
test
push
push
sti
xchg
ds
bound
jnp
scas
xchg
in
movsl
fs
sub
jbe
dec
mov
lret
push
sbb
sahf
mov
xchg
sahf
loope
out
push
push
lods
mov
idivb
fs
cmp
push
add
loopne
in
out
jns
sti
mov
mov
xchg
lret
daa
cmp
outsl
shrl
xchg
ds
adc
jmp
popa
imul
sub
in
pusha
inc
ljmp
aas
fsubrl
and
jle
push
das
pusha
aad
xor
mov
sbb
testl
imul
xor
mov
xchg
scas
jae
pand
fwait
jge
jl
fs
testb
or
rcll
inc
push
mov
mov
lea
and
push
mov
sarb
lods
inc
scas
test
cli
js
cwtl
sbb
inc
adc
dec
push
mov
pop
int3
push
shll
hlt
add
jne
sti
idivb
mov
add
arpl
mov
repz
imul
ja
int3
bound
loope
ret
lcall
loope
rcll
lret
xor
sti
dec
ds
sub
call
loopne
add
lahf
mov
std
pusha
mov
popf
xor
movsl
stc
into
mov
rcl
inc
cmpsl
sub
shrb
adc
cld
dec
cmp
sub
repz
sbbl
addl
mov
push
mov
mov
or
jno
mov
pop
loopne
fwait
xor
test
adc
sahf
adc
sti
or
das
mov
loope
pop
pop
loope
and
pop
sub
push
mov
mov
out
mov
rcrl
cmp
pop
ja
loopne
adc
sub
lock
fwait
rorb
and
repz
xor
mov
sahf
cmpsl
mov
out
orb
hlt
sti
sbb
push
imul
sub
dec
cmp
dec
dec
or
pushf
ret
adc
scas
jle
cmpsl
lea
fstpl
lahf
aaa
loop
sub
adc
jmp
test
sbb
aas
fwait
or
cmpsl
mov
mov
pop
lea
out
jl
and
call
cmp
lret
inc
jp
scas
or
les
lea
pusha
or
jne
xor
test
rorl
mov
and
out
loope
push
insl
mov
loop
ds
movq
add
and
push
andb
hlt
jne
sub
mov
jns
mov
hlt
loope
cli
and
jg
sub
push
jl
inc
roll
int3
jecxz
mov
push
lret
pop
sub
inc
push
push
lock
jle
push
add
ljmp
jb
ret
aas
push
fwait
dec
in
loopne
icebp
inc
or
xchg
jno
mov
push
popa
mov
xor
sti
lret
je
mov
xor
aas
shl
push
fildl
push
stos
cmp
popf
dec
fwait
or
dec
or
orb
ficomps
jge
adcb
inc
ret
ja
sbb
push
dec
stos
das
adc
fldl
leave
aam
cmp
and
sbb
int3
movsl
dec
jo
lods
ds
out
jb
ss
mov
mov
cltd
mov
ds
mov
out
inc
inc
ja
xchg
pop
cmp
xchg
sahf
pop
xchg
ret
jmp
sub
sarl
test
test
rolb
adc
aaa
sub
mov
lea
dec
dec
iret
fucomip
insb
fisttpl
cmc
aam
jno
mov
into
shll
mov
sub
dec
daa
inc
lret
mov
mov
jg
inc
mov
ret
and
adc
es
push
push
std
pusha
or
lods
ljmp
jle
mov
int
xor
sahf
cwtl
loope
sti
jb
push
clc
popl
and
hlt
or
mov
enter
sbb
vmovsd
push
cmp
adc
stos
push
inc
inc
lcall
fucomi
divl
lods
mov
inc
mov
cli
stos
fstpl
and
fadds
mov
xchg
fstp
in
cs
add
sbb
lds
fldt
shrl
fsts
adc
jns
ret
ja
out
aam
mov
sub
cmp
in
sub
sbb
sbb
push
and
movsb
adc
iret
enter
xchg
ljmp
lahf
jge
cli
mov
adcl
jnp
push
or
lret
push
lret
or
movsb
gs
adc
imul
fldcw
jo
mov
cmp
cmp
xlat
test
das
mov
dec
xor
adc
cmp
lahf
outsb
test
mov
pop
or
shll
out
jbe
in
or
iret
into
les
dec
pop
pusha
mov
mov
mov
sbb
or
pop
inc
xacquire
add
add
xlat
test
cmp
inc
cwtl
mov
shll
inc
pop
sub
das
test
lret
ds
sahf
cmp
aas
je
adc
fstl
jmp
out
lods
push
movsb
sahf
lods
pop
fsubr
mov
aam
in
stc
icebp
mulb
inc
sahf
stc
rcll
fnstsw
sub
nop
aam
mov
add
push
or
xchg
lea
mov
notl
push
lods
xchg
js
cmp
std
mov
inc
pop
push
cmc
inc
or
cmpsb
fmull
clc
adc
mov
adc
xor
mov
outsl
aad
mov
ja
inc
add
mov
repz
sbb
mov
push
xor
jmp
ja
dec
shl
inc
pop
rcl
push
outsb
jge
mov
mov
or
cmp
mov
mov
scas
jg
cwtl
mov
js
push
or
ror
push
push
mov
and
or
bound
sub
jp
and
add
mov
roll
out
xchg
sbb
push
stc
ds
lahf
iret
cltd
dec
dec
add
add
cmpsb
pop
xchg
hlt
outsb
sub
and
or
lret
xchg
xchg
test
sbb
int3
movsb
pusha
movsl
es
dec
incl
jae
outsb
movsl
push
es
push
adcl
dec
mov
mov
roll
data16
add
scas
into
jg
pop
inc
sub
cmc
enter
pop
das
inc
popf
jecxz
dec
fidivrs
lock
sbb
mov
inc
xchg
jle
cmp
mov
push
xchg
pop
pop
aam
outsb
inc
mov
mov
push
pop
xchg
sub
cltd
cmp
sti
mov
outsl
mov
xlat
jg
xorb
mov
scas
testb
mov
fists
fcompl
mov
rcrl
pop
cmp
out
test
or
movsl
cs
cmpsl
insb
mov
dec
testb
adc
pop
in
cwtl
cmpsb
pop
inc
ret
dec
pop
dec
mov
aam
mov
ss
xchg
ret
fcompl
push
orl
jb
xchg
and
cmp
mov
dec
dec
cli
leave
sub
jle
jo
sbb
sbb
and
pop
pusha
jmp
fnstsw
sub
adc
fsubs
adcl
loop
mov
lods
mov
sbb
scas
and
je
xor
xchg
xor
outsl
pushf
clc
mov
mov
inc
fwait
cmp
call
ljmp
push
mov
and
lea
jbe
sub
push
jmp
lods
mov
ficomps
inc
push
xchg
jae
into
jne
sub
add
dec
icebp
sbb
inc
cmp
fcmovb
cmp
pop
mov
mov
mov
cmp
inc
in
inc
cltd
das
push
push
in
mov
cmpsl
test
rorb
xchg
pop
mov
stc
or
test
movsb
aaa
or
jb
xor
jle
pop
cmp
subb
dec
cld
cmp
jle
cwtl
jnp
imul
mov
aad
mov
out
xchg
pop
or
aam
insl
fwait
shlb
xor
scas
mov
xchg
loope
std
sbb
mov
adc
push
push
mov
lahf
adc
sbb
cmp
fucompp
cmp
hlt
pop
push
bound
adc
test
inc
xor
jnp
or
adc
clc
dec
adc
andl
cmp
sbb
mov
fdivp
jg
addr16
cmp
adc
popa
cmp
stos
add
mov
fidivrl
imul
das
and
jno
js
popa
pushw
or
fdivr
pop
shlb
movsl
push
inc
addr16
in
pop
shlb
sti
and
les
mov
ja
mov
inc
xor
imul
mov
out
mov
mov
pop
fwait
xor
jecxz
pop
jecxz
popf
out
fbld
pop
cmpsb
sbb
and
xchg
push
dec
cli
fsubs
pop
in
psadbw
pop
or
mov
mov
inc
jp
push
roll
fbld
adc
adcb
dec
xor
pushf
and
adcl
pop
cmpsb
repz
js
lcall
icebp
hlt
repz
add
mov
in
add
insl
add
int
add
mov
adc
cltd
or
xor
xor
sub
scas
or
nop
das
test
movsb
cmpb
fiaddl
pop
xor
jne
mov
sbb
push
push
and
cmpsb
or
xchg
cmp
push
scas
icebp
nop
mov
cmp
mov
aad
push
jae
or
pop
nop
pop
adc
xor
xchg
pop
out
cmp
mov
or
sti
clc
hlt
cmp
cmp
mov
movsl
rolb
or
jne
fimull
int3
ljmp
rol
out
and
ja
stc
mov
fnstcw
js
adc
adc
push
ficoml
or
fisubrl
adc
sub
loop
add
imul
inc
mov
cmp
jg
pop
sbb
cwtl
in
sahf
push
add
xor
iret
mov
push
push
mov
cmp
xchg
cld
gs
jbe
pusha
ljmp
lahf
push
jmp
pop
std
pop
jne
xchg
mov
dec
and
fs
mov
nop
repnz
xor
pop
cmp
sub
in
cld
pop
cwtl
jb
push
sub
ljmp
mov
inc
add
xchg
and
in
ja
movsb
cmp
negb
or
test
push
in
data16
xchg
jae
mov
mov
sbb
sbb
int
push
push
ror
mov
lock
jne
popa
mov
loopne
mov
fidivl
mov
sub
inc
stos
pop
ss
rclb
mov
lods
or
jp
adc
mov
or
rolb
sbb
test
shrb
mov
out
add
adc
call
repz
lahf
inc
jecxz
cs
xor
leave
or
push
mov
mov
mov
das
lret
or
out
lcall
stos
fnsave
inc
mov
lds
sub
and
cs
outsb
jnp
bound
mov
mov
pop
xlat
lcall
mov
pop
or
sub
xor
cmpsb
bound
jne
fdivl
cmp
mov
jns
mov
mov
subl
popf
or
mov
pop
inc
sbb
unpckhps
sbb
xor
jl
test
xchg
mov
inc
stos
lret
xchg
xor
out
repz
dec
int3
pushf
inc
cmp
push
sbb
jns
clc
pop
pop
std
sub
mov
mov
push
xor
adc
add
jnp
add
enter
hlt
lret
loop,pt
daa
push
je
leave
mov
pusha
sub
ret
mov
xorl
loopne
sbb
pushf
mov
inc
je
cmpsb
sub
cmp
mov
leave
pop
pop
iret
in
enter
subl
sub
push
ret
xchg
mov
xor
mov
jg
int3
cmp
dec
cmp
fadds
pop
pushf
xchg
test
fildl
pop
lret
adc
lea
mov
test
in
xor
jne
and
addr16
xchg
jl
mov
out
add
mov
xchg
xchg
pop
sub
cmc
push
cmc
test
sbb
shrl
or
divl
lds
mov
stos
imul
movsl
xchg
test
fimull
dec
lret
xlat
or
das
ds
outsl
fwait
mov
rcll
sub
lahf
adc
and
inc
jnp
inc
ffreep
test
cmp
pop
xor
insb
xchg
adc
sbb
inc
mov
inc
push
mov
test
lea
and
daa
lahf
xor
dec
rcl
aad
sub
out
insl
inc
cmpsb
sub
or
or
shll
rorl
mov
fidivl
mov
add
xor
aaa
jns
jbe
lea
and
outsb
rolb
or
test
sub
jne
push
ret
push
jb
or
test
add
jns
or
inc
pop
xchg
in
outsb
arpl
jecxz
stos
lods
mov
jle
xchg
cld
mul
cmp
mov
popf
jp
in
mov
lret
addr16
out
jae
arpl
je,pn
sbb
and
push
sti
js
fildll
add
pusha
add
mov
add
subl
iret
rcrl
pop
mov
xacquire
inc
pop
sub
push
je
js
cmp
inc
jle
cli
sbb
push
pop
add
jb
add
frstor
xchg
xchg
iret
dec
in
out
test
into
shl
mov
pop
pop
mov
xlat
shll
push
gs
std
loope
loopne
out
pop
mov
pusha
test
imul
in
and
dec
in
clc
mov
xor
sub
mov
aas
mov
mov
pusha
mov
pop
fwait
hlt
mov
imul
fsubrs
sbb
daa
loop
cwtl
addr16
mov
and
loopne
arpl
jge
adc
sahf
repnz
leave
insl
in
xchg
fcos
cmp
movsb
nop
daa
mov
popf
cmp
fcoml
push
scas
or
mov
aam
movsb
sbb
jae
sub
push
xchg
in
mov
sub
xchg
inc
addl
xor
aad
push
inc
addb
add
pop
mov
xorl
and
out
dec
and
stos
adc
mov
mov
pop
push
xor
xchg
push
inc
shll
mov
sub
dec
xorb
pop
js
out
cmpsb
jge
jg
std
jp
mov
mov
in
daa
jmp
jo
xchg
addb
sub
cmc
pop
cmp
mov
mov
jnp
push
sub
mov
sahf
and
insb
insl
jecxz
or
in
lods
mov
sub
int
dec
or
enter
xor
push
aad
into
iret
sahf
or
rcrl
push
jmp
dec
and
cmpsb
dec
mov
push
push
mov
push
xchg
mov
fwait
dec
xorb
rol
cmp
aaa
popf
mov
mov
out
pop
add
dec
cmp
sub
push
sbb
mov
je
pop
insb
cmpsb
shll
xchg
aam
scas
push
fsts
jns
idivb
jnp
xchg
stos
add
in
mov
mov
add
jl
movsb
dec
jo
loope
jnp
out
jns
sub
in
and
push
pop
cmp
lret
push
ljmp
loop
pop
gs
cmp
xor
mov
out
fdivrp
fcoms
daa
cmpsl
imul
aas
jne
insl
fldcw
fstps
cmp
repz
scas
jbe
ret
pop
mov
lea
push
aad
cmp
or
or
in
cs
mov
mov
mov
push
cmpsl
sbb
int3
insb
in
sub
pop
push
arpl
movsl
mov
xchg
fwait
pusha
js,pt
shld
dec
inc
pusha
jmp
and
in
js
xchg
dec
daa
xchg
jnp
xlat
outsb
mov
fcoms
ja
dec
mov
adc
jno
shlb
hlt
adc
lock
xchg
leave
jbe
or
popa
addr16
cld
fcom
xchg
jge
dec
cltd
add
movsl
dec
icebp
shll
xchg
jns
int3
inc
cmp
fcmovu
dec
ljmp
lret
sbb
xor
fwait
std
sbbl
sbb
mov
fmull
mov
mov
jbe
sbb
scas
ljmp
insb
jmp
push
pop
sbb
scas
fdivp
and
mov
das
pop
int
ret
pop
cmp
idivb
popa
leave
dec
and
cwtl
ds
lcall
lds
xor
outsb
and
sub
jnp
dec
pop
jno
into
dec
add
cmp
jl
mov
shrl
in
push
iret
sbb
sbb
movsl
shl
mov
sub
add
pusha
insb
les
mov
mov
mov
sbb
jge
cmp
lcall
jl
add
clc
inc
test
sbb
adc
inc
out
sbb
sbb
bnd
cmp
outsl
cmp
inc
and
mov
and
sub
ss
sbb
inc
and
pushf
cwtl
dec
cs
stc
mov
fcoms
mov
sbb
dec
jae
xchg
adc
insb
aaa
pop
xchg
test
xor
mov
xchg
out
inc
out
rorb
sbb
mov
push
inc
sub
and
rclb
add
xor
out
jae
clc
lds
mov
pop
ret
adc
ds
mov
insl
cmp
lds
jecxz
push
sahf
lret
testb
faddl
rep
sbb
dec
dec
jbe
inc
in
insl
loop
mov
add
roll
lret
or
out
aad
push
push
pop
sbb
out
or
xor
pop
lcall
scas
and
sbbb
push
pop
jecxz
gs
int3
div
jg
sub
mov
jle
inc
sbb
add
bound
outsl
mov
jbe
and
xchg
add
nop
inc
sub
sbbl
adc
orl
ret
lods
cmpsl
test
pop
addr16
xchg
loop
aas
scas
xor
nop
js
jmp
or
outsl
clc
cld
inc
xchg
andb
pushf
add
andl
mov
outsl
or
push
dec
loope
jle
inc
and
and
and
dec
xchg
xchg
push
jecxz
movsl
push
int3
out
sbb
adc
jle
mov
enter
std
lret
push
fistps
dec
add
fisttpl
loop
std
jmp
or
push
out
js
mov
adc
sbb
dec
cli
leave
out
adc
out
jp
and
lcall
pop
pop
repz
pop
jae
and
or
xor
and
jl
cmc
sub
out
mov
xor
nop
sbb
imul
sbbl
adc
cmp
pushf
test
imul
test
push
loope
sbb
shrl
xor
ss
adc
sahf
out
mov
gs
sti
dec
mov
ret
fldenv
daa
pop
dec
xchg
push
add
inc
jg
sub
jbe
or
test
mov
fwait
mov
mov
lcall
jmp
sub
mov
xchg
rorb
sahf
int
xchg
cld
push
xchg
pop
rep
jns
bound
stos
arpl
cmpsl
rorl
mov
punpckhwd
mov
setns
aad
xor
cli
mov
xchg
pop
mov
jg
sub
pop
hlt
jb
rclb
leave
add
adcb
push
data16
xchg
cwtl
push
mov
into
xchg
add
fldl
pop
cwtl
push
ret
xchg
ljmp
mov
jl
nop
pop
inc
push
sbb
add
sub
pop
stos
dec
mov
push
std
clc
inc
movsb
sbb
loope
mov
outsb
loop
and
push
lock
jecxz
mov
jle
les
xor
aam
or
stc
pop
cmp
sahf
pop
adc
hlt
data16
cs
shll
out
fbstp
popf
add
das
push
xlat
jbe
xchg
jbe
push
or
movsb
pop
arpl
push
push
jle
push
sbb
sub
mov
mov
sbb
arpl
pusha
jb
arpl
and
sbb
pop
lret
test
mov
fs
cmp
push
push
push
std
cmp
or
jbe
push
mov
and
int3
orl
insl
les
jns
mov
fsub
push
push
mov
iret
adc
daa
xchg
clc
popa
lods
rcll
cmpsb
and
xor
jge
mov
sbb
xor
dec
dec
sbb
mov
mov
fidivl
addb
pusha
loope
stc
nop
mov
add
cmp
push
int3
scas
dec
arpl
push
shlb
out
outsl
sbb
mov
push
mov
cmp
shrb
loopne
sub
and
xchg
push
stos
adc
into
andb
call
mov
sti
outsb
xchg
inc
adc
mov
loopne
adc
xor
xchg
lret
add
fistpll
sbb
cld
pop
in
in
mov
imul
fcompl
ja
pop
xor
enter
or
xor
lea
sbb
test
rcrb
pop
cmc
add
icebp
push
jo
inc
ljmp
sub
xchg
clc
push
mov
stos
mov
adc
mov
adc
dec
icebp
dec
flds
fimuls
cmp
faddl
adcb
push
mov
mov
adc
cmp
out
push
inc
mov
lret
mov
popf
int
pop
shll
jl
sbb
mov
jo
sbb
jge
push
inc
push
or
jle
adc
call
outsb
mov
call
cmp
gs
cmp
call
cld
test
push
mov
pop
pop
xor
add
cmpsl
sbb
dec
jg
clc
push
cs
jge
sbb
scas
lock
push
cmp
push
call
inc
dec
daa
inc
or
jg
nop
xchg
loopne
mov
add
ljmp
xchg
cmp
mov
cmc
mov
sub
mov
insl
fwait
pushf
pop
jle
sbb
ja
lahf
push
hlt
popa
adc
call
outsb
loope
js
std
fdivs
mov
mov
out
popf
mov
int
push
sub
mov
inc
sub
xchg
mov
cli
aam
push
push
lret
mov
mov
and
pop
pop
mov
and
mov
out
insl
js
pop
inc
adc
lcall
inc
jg
push
cmp
add
rorb
push
andb
push
jecxz
add
jecxz
cltd
pop
cli
push
lcall
rcr
mov
std
mov
cmp
xor
mov
je
mov
cmp
notl
mov
mov
jle
sbb
jnp
or
mov
dec
fstpt
ja
and
and
test
clc
dec
lret
stos
rcrl
dec
js
lea
xor
in
ffree
popa
add
pop
fistpl
dec
mov
test
pop
lods
gs
sbb
xchg
movsl
dec
lea
xchg
jns
xchg
aaa
dec
leave
pop
data16
push
pushf
dec
lret
mov
icebp
xchg
imul
adc
cmp
inc
loop
fisttpl
movsl
cs
mov
outsl
inc
fmull
stos
dec
mov
xor
mov
test
cmpsl
popa
sub
fwait
push
mov
notb
push
and
or
xor
pop
sarb
push
or
mov
jo
cltd
shrl
or
add
mov
push
fnstenv
mov
xor
cld
dec
pop
js
idivl
mov
inc
mul
push
push
mov
popf
and
inc
inc
popf
mov
cmpl
insl
xchg
outsl
cmp
lock
int
ss
pop
sub
pop
add
aas
repz
sbb
and
sub
adc
sub
dec
es
and
xor
xchg
xor
test
bts
cwtl
cs
lea
xchg
arpl
and
insb
hlt
sbb
dec
jle
ja
icebp
xor
js
daa
mov
imul
jl
and
mov
lods
mov
int3
pusha
fnstenv
aad
sub
pushf
mov
rcr
mov
lock
push
ss
scas
out
fstpt
push
jmp
shll
das
pop
aad
fcoml
sbb
mov
lret
clc
cvtps2pi
pop
pushf
test
popf
fwait
xchg
add
sub
mov
in
imul
filds
jbe
push
sbb
push
rorb
mov
cmp
fistpl
gs
divl
jmp
pop
sbb
into
out
imul
mov
out
daa
lret
sbb
fwait
clc
xchg
aaa
sbb
lahf
dec
arpl
mov
push
clc
imul
ret
adcb
fimuls
mov
je
adc
test
aam
repnz
call
outsb
or
mov
mov
push
adc
push
sbb
xor
rcrl
dec
xchg
orl
fwait
call
rorl
xor
push
xchg
adc
sbb
hlt
or
cmp
cmpsl
pop
pop
imul
sbb
stc
push
sbb
test
stos
add
push
mov
lods
mov
divl
push
xchg
mov
lods
or
fmuls
push
xchg
ds
jo
adc
cmp
cmp
rcrb
gs
cld
cmp
jae
mov
lret
mov
mov
int
xchg
outsb
inc
push
sarl
bound
mov
mov
sbb
ljmp
cwtl
push
and
sbb
imul
call
popf
adc
aam
dec
inc
mov
in
mov
cmp
xchg
sbb
add
or
xor
mov
pop
outsl
dec
mov
cmc
loop
mov
sbb
push
jge
xor
je
and
stos
rorl
arpl
fdivrs
addr16
adc
mov
inc
ljmp
xchg
lds
pop
inc
and
mov
mov
mov
adc
inc
stos
xor
sbb
es
adc
adc
push
pop
repnz
mov
xchg
aad
mov
lret
icebp
lret
add
test
cmpsl
pop
cltd
fsubrs
aaa
frstor
lods
lock
inc
lcall
cmp
negb
xor
sub
pop
sub
jle,pt
outsl
mov
movl
inc
pop
cwtl
xchg
movsb
fbstp
jmp
cmp
stc
xchg
sub
lods
or
int
xchg
xor
inc
loope
fstpl
fdivrl
xor
or
jge
jle
dec
fucomp
lret
inc
scas
in
rcll
sub
int
stos
xlat
inc
cs
mov
xchg
inc
fucomp
jb
xor
adc
nop
cltd
jae
movsl
jne
ss
lret
xchg
add
dec
xchg
mov
shlb
mov
pop
jge
jl
mov
movsl
out
cmc
xor
or
cmpb
shl
icebp
ss
add
out
loop
aam
jne
fwait
mov
xchg
iret
pop
mov
pop
inc
fistpll
jns
mov
rorl
test
inc
out
rcr
mov
push
loop
fdivs
mov
loopne
daa
aam
fucomi
push
cld
cmp
imul
out
out
push
lea
lret
in
sar
pop
mov
imul
pop
pop
mov
scas
pop
mov
aaa
enter
movsl
xchg
test
jnp
add
loope
add
addl
andb
jb
lret
mov
jb
jmp
jnp
loope
imul
arpl
mov
stos
jae
cs
cmpsb
jo
iret
or
filds
out
cli
push
jg
dec
minps
stos
aaa
pop
fdivl
mov
inc
test
jmp
xchg
fdivl
in
sbb
mov
jbe
add
xchg
push
iret
cmpsl
cmp
or
fwait
push
mov
hlt
sub
aad
jge
cmp
fdivrs
adc
or
loop
sar
mov
jmp
mov
mov
fistl
scas
leave
test
jb
mov
movsb
mov
mov
jnp
jmp
pop
mov
sbb
sub
jns
mov
out
and
repnz
sub
outsb
jns
push
ret
and
pop
bound
jge
sahf
notl
inc
adc
xor
xor
lret
inc
xchg
sti
xchg
mov
xor
mov
iret
inc
mov
movsl
mov
xor
je
sti
insb
xchg
bnd
movsb
out
pop
mov
js
pop
ret
outsb
adc
pop
std
enter
ret
repz
das
and
lcall
mov
pop
cwtl
xor
into
add
or
decl
lods
adc
iret
pop
mov
mov
bound
fnstcw
xchg
sti
ljmp
shlb
ret
xor
cmp
mov
pop
sahf
mov
iret
enter
sahf
movsl
xchg
mov
mov
dec
cli
ret
in
std
adc
clc
xor
jl
lea
mov
dec
aaa
push
mov
and
imull
cltd
rcrl
xchg
sbb
mov
jle
pushf
mov
add
cmp
mov
mov
fldcw
fnsave
sub
dec
insb
cli
xlat
mov
dec
or
bound
sub
sbb
sub
adc
data16
inc
mov
jg
cmp
repnz
dec
mov
pop
enter
jno
je
ljmp
jg
cld
xchg
add
adc
push
xor
mov
xor
in
and
mov
sti
movsb
nop
mov
insl
adc
pop
cmpb
cmp
pop
fmuls
jmp
cmp
xchg
cld
in
jp
insb
daa
push
cmp
jmp
getsec
and
mov
and
push
int3
xor
ss
cs
je
pusha
stos
popf
aaa
cld
cmpsb
inc
cmp
adc
or
cmp
jno
inc
test
arpl
xchg
stc
std
cmpsb
rcl
and
lahf
imul
xor
les
outsb
leave
shl
sbb
pop
adc
or
jg
mov
adc
sbb
stos
into
push
xchg
mov
test
adc
lods
int
mov
nop
xchg
test
aaa
cmpsb
sarl
xor
and
popa
and
inc
push
mov
pop
dec
add
and
pusha
shr
xor
fildl
cmc
iret
imul
push
fs
xor
sub
push
les
lret
xchg
dec
lret
and
mov
xchg
xor
std
mov
adc
xor
loopne
clc
hlt
lods
inc
subb
mov
in
loopne
je
cli
cmp
mov
xchg
add
xchg
enter
jno
cwtl
leave
jecxz
std
or
jp
push
inc
ja
push
jmp
xchg
add
xchg
mov
sarb
add
popf
push
push
es
add
popl
push
pop
push
add
cmp
ljmp
ds
ficoml
mov
mov
out
pop
jg
push
fdivs
sub
pop
mov
bound
sahf
cmp
pop
dec
sahf
aam
inc
sbb
shl
xchg
pop
stc
lea
rorl
fbld
pusha
or
lret
decb
mov
iret
xchg
jg
addb
daa
sbb
pop
inc
pop
inc
shlb
dec
pop
push
loopne
fstps
mov
icebp
add
fwait
and
cwtl
push
fadds
push
scas
ss
mov
xor
int3
mov
jle
mov
pushf
aad
push
adc
nop
lds
popa
mov
cltd
add
imul
out
xchg
gs
icebp
adc
out
loope
nop
inc
mov
cli
cmp
out
div
inc
mov
jmp
sahf
push
cmpsl
mov
bound
fistps
ficomps
test
mov
fistpl
mov
sub
and
rol
insb
xchg
aas
imull
aas
test
cmp
sar
pop
enter
scas
mov
adc
lret
cmc
or
inc
mov
mov
xchg
sub
inc
and
add
pop
adc
and
xchg
hlt
and
cs
jbe
xlat
mov
and
call
cmpsb
aas
dec
popa
inc
stos
inc
push
sahf
inc
sub
jns
stc
pop
mov
in
rolb
add
mov
shlb
rclb
mov
mov
push
fimull
lret
lds
cmc
push
or
aad
jbe
sub
mov
int3
stos
mov
mov
dec
mov
cmp
push
dec
stc
sbb
sbb
xor
xor
dec
lcall
jbe
sub
rcl
divl
sarb
xlat
aaa
in
push
fcoml
sub
fidivrs
lahf
cwtl
inc
jge
lret
call
movsl
push
fs
mov
xchg
fs
dec
pop
mov
jge
clc
ja
sub
jl
test
cltd
adcb
mov
sub
fistpll
popa
add
mov
int
fdivr
push
testb
or
insl
jo
jnp
lret
sbb
stos
cltd
mov
adc
int
sub
aas
sub
xchg
out
js
ret
ljmp
imul
clc
js
mov
cld
push
dec
jb
mov
mov
popa
jae
sarl
das
addl
call
or
mov
in
sbb
jnp
jne
cmc
xor
dec
xchg
mov
cmpb
cmpsb
rcr
xchg
hlt
mov
push
adc
mov
adc
cli
xchg
ficoml
push
orl
mov
lods
call
fwait
insb
in
mov
push
push
mov
pop
pop
mov
jl
xor
in
pop
adc
pop
cs
shll
incl
lock
mov
out
shr
mov
aaa
jno
mov
sbb
shl
jg
mov
add
mov
mov
mov
adc
mov
ja
mov
jae
in
sbb
in
mov
insl
sbb
lret
stos
test
cmpsl
jp
ljmp
cltd
push
cmpsb
and
mov
out
rcrl
es
popl
ficomps
in
in
fdivrl
dec
pushf
out
stc
or
jmp
mov
out
cltd
pop
pop
ljmp
and
push
dec
mov
pop
lds
jg
push
fadd
mov
mov
jo
dec
rolb
insb
xor
add
xor
nop
or
sub
sub
pop
cmp
dec
inc
xor
lock
mov
and
shlb
out
jo
mov
out
rclb
ret
loopne
jecxz
pop
and
fnstsw
mov
cmp
sub
adc
neg
cmp
pop
pop
dec
dec
cmc
in
adc
jns
add
xchg
mov
ret
inc
pop
jae
cmpsl
and
sti
sbb
jbe
lock
sub
mov
cli
das
orb
and
jne
xor
and
enter
or
mov
xor
dec
js
mov
shll
mov
mov
rolb
push
mov
sti
nop
push
dec
add
pop
jnp
lods
mov
mov
lock
xchg
in
stos
mov
or
or
inc
in
std
jp
cltd
jmp
mov
inc
sti
mul
in
in
push
pop
dec
test
dec
mov
sub
pop
jmp
into
mov
jne
and
jle
cmp
sub
aas
cltd
pushf
shlb
addr16
loope
sahf
movsl
sub
lahf
sti
loopne
dec
lret
inc
add
out
jbe
cmp
lret
xchg
cmpsl
mov
shrb
push
dec
sbb
mov
cs
out
pop
pushl
xor
ret
sub
out
adc
inc
and
lcall
mov
xor
jp
dec
push
xor
aam
add
aas
in
mov
pop
dec
sbb
hlt
xor
pop
cmp
add
daa
fld
xor
std
lcall
cmp
outsb
loop
les
std
xorl
aas
pop
imul
jle
repz
pushf
mov
cmpsb
inc
inc
push
loop
stos
daa
xor
lock
aam
sbb
and
sub
cmpsb
arpl
jno
mov
icebp
sub
ficoms
push
add
enter
sbb
repnz
adc
sub
push
enter
into
cmp
add
inc
sarl
mov
pop
insl
sti
xchg
fcomps
or
loopne
inc
into
add
leave
ljmp
inc
cmp
or
jg
sbb
sti
jns
enter
lcall
xchg
lcall
and
dec
ficomps
and
ret
ljmp
hlt
or
jae
lcall
fld
push
and
inc
push
ss
and
movsl
in
mov
xor
mov
js
mov
scas
cs
insl
pusha
or
stos
cmpsl
fdivrl
icebp
in
dec
mov
lock
lock
loop
pop
insl
scas
ja
fs
and
js
fsincos
mov
xor
lea
pop
loope
dec
loop
inc
push
data16
fwait
lret
jns
dec
cli
sbb
cld
xor
cmpsl
fisttpl
sbb
sub
sub
xchg
inc
fdivs
adc
popa
testl
xchg
xor
push
loop
shr
xchg
hlt
sub
loope
fdiv
xchg
inc
xchg
shrl
in
xor
jae
movsl
xchg
lret
fs
loopne
sub
ficomps
enter
xor
iret
ss
sub
and
add
ret
popf
div
pop
mov
sub
pop
xchg
call
sbb
shll
dec
in
sbb
adc
mov
pop
adc
lret
add
mov
mov
or
cmc
mov
rorl
jle
inc
cld
test
push
ljmp
je
out
aam
xchg
or
inc
add
addr16
pusha
sbb
movsb
sbb
stc
mulb
test
add
scas
push
mov
sbb
jmp
enter
movsb
add
push
sti
xor
inc
call
cmp
out
add
pop
in
sbb
rcrb
inc
xchg
sub
dec
daa
out
dec
dec
int3
xchg
test
dec
enter
nop
mov
ljmp
js
outsl
sbb
pop
into
fldl
push
int
pusha
push
repnz
cmpsb
xchg
sbb
add
pushf
push
mov
das
ja
ja
sub
test
adc
inc
xor
or
cmp
inc
push
in
out
dec
push
ret
mov
jmp
stos
and
enter
insl
jmp
xchg
push
scas
inc
test
arpl
jge
int3
push
and
sub
fdivs
mov
xchg
bound
jecxz,pn
ljmp
fidivs
lods
shrl
js
enter
push
sub
leave
or
sbb
mov
pusha
sub
jmp
sbb
dec
es
xchg
xor
out
stos
mov
xchg
cld
cmc
sbb
sbbl
cmp
pusha
dec
test
dec
ljmp
xchg
into
sub
outsb
pop
inc
push
fisttpl
mov
repz
jecxz
dec
dec
push
mov
or
ss
cvtps2pd
cmp
negb
mov
imul
sbb
push
fisttpl
mov
ljmp
mov
sbb
xor
add
or
pushf
or
push
push
pushf
mov
int
and
loope
inc
fdivs
js
bnd
mov
or
mov
add
and
dec
push
cld
adc
xchg
gs
cmp
addb
and
pop
adc
mov
aas
mov
adc
lcall
lods
imulb
inc
jmp
xchg
out
pop
pop
movsb
scas
cmp
pop
cmp
cmpsb
inc
pop
push
cmp
arpl
imul
add
fstl
mov
mov
sbb
cmpl
shr
imul
cmp
xchg
pop
je
add
lea
cli
cwtl
sbb
out
aad
aas
mov
mov
pushf
sahf
cld
js
sbbb
sub
pop
cmp
push
inc
sbb
mov
lcall
movsl
sub
pop
and
push
mov
pushf
call
xchg
xor
lea
sbb
int
lahf
bound
and
ret
jp
fdiv
dec
mov
dec
adc
insl
cmp
sbb
roll
test
js
or
stos
jge
pushf
int3
in
flds
testb
cmp
jne
lea
sub
and
push
or
shlb
clc
mov
mov
sub
scas
dec
sub
xchg
lods
push
rol
mov
push
sub
test
xor
jne
dec
pop
jl
pop
cmpsl
push
ret
mov
test
jae
les
fs
fwait
cmp
hlt
adc
in
adc
dec
jne
cli
jp
push
lds
sub
inc
sbb
loopw
outsb
int3
mov
nop
leave
mov
push
cmpsb
sbb
fiaddl
cmp
jge
mov
cmc
icebp
and
cld
out
call
hlt
clc
mov
mov
sbb
js
sbb
pop
add
push
imul
inc
fisubs
scas
scas
sub
mov
or
cmp
lock
push
sub
mov
loopne
dec
mov
sbb
jmp
cmc
in
and
pop
lods
xor
lret
popa
jae
fiadds
inc
xchg
ret
loope
test
mov
out
push
inc
out
pop
shrl
push
and
sbb
into
push
lods
jmp
pop
adc
sbbl
push
in
jo
imul
in
dec
push
push
popf
xchg
or
ds
sub
mov
bound
pop
call
sbb
pop
jne
mov
cld
xor
push
popf
insb
dec
lret
js
outsb
jns
mov
ret
xchg
and
pushf
adc
pop
ljmp
fcmovnbe
fidivrs
jnp
push
push
dec
fdivrp
cmp
enter
jae
loopne
int3
nop
repz
shlb
push
mov
jg
dec
jmp
pop
inc
roll
jo
inc
dec
fdivrp
and
jo
pop
dec
insb
xchg
ja
and
sub
and
loopne
xchg
lods
lahf
popa
loop
add
and
test
inc
add
jg
call
sbb
ret
lahf
dec
ljmp
sub
cmp
into
push
lock
pop
cltd
jl
andb
or
or
ds
dec
lret
or
outsl
add
push
orb
shll
adc
jb
cwtl
jo
xor
pushf
pop
inc
mov
push
sbb
test
jmp
ds
ss
sbb
out
sbb
hlt
jno
call
adc
lock
shll
repnz
add
imul
cmpsb
add
rorb
sub
or
push
xchg
int3
loop
xlat
imulb
cld
insl
sti
movsb
sbb
loopew
je
lods
sbb
and
cmp
jne
idiv
xchg
push
push
mov
cltd
insl
jle
ret
or
aaa
inc
adc
fwait
mov
rclb
test
adc
es
push
lods
pop
push
fwait
mov
cmpl
movl
mov
out
sub
xor
dec
ficomps
mov
pop
clc
neg
stos
les
aad
js
idiv
mov
je
sbb
push
jl
and
and
cmp
pop
jnp
lods
repnz
inc
pop
and
int3
pop
push
data16
cmpsl
das
mov
pushf
movntq
pop
lock
adc
dec
mov
data16
pop
xor
push
xchg
inc
sti
loop
sbb
pop
push
mov
xchg
cltd
xchg
jl
mov
cmc
lret
mov
inc
jecxz
or
jl
cmc
and
lods
push
pushf
aam
xchg
xor
mov
pushf
dec
sub
divl
dec
dec
push
fiadds
add
xor
sbb
loopne
mov
sahf
adc
mov
rcr
repz
es
das
pop
pop
cmp
adc
mov
cmpsl
dec
mov
and
inc
fiadds
jmp
js
lods
ret
jae
pop
out
fidivrs
mov
or
and
fistpl
xchg
add
xor
in
jg
mov
stos
adc
add
movb
fsubr
xchg
jg
cs
and
or
loop
push
int3
add
js
pop
lods
mov
xchg
pop
popf
movsb
jp
in
nopl
lahf
inc
or
popf
in
xchg
jg
lods
pop
pop
subb
pop
jge
mov
mov
sbb
jnp
clc
sub
fsubl
scas
or
pushf
or
leave
push
aam
rcl
pop
int3
pop
cwtl
push
enter
and
rcll
mov
pop
sub
stc
adc
rcll
aam
pop
cmp
cmp
ljmp
test
adc
pop
push
and
mov
nop
imul
push
push
xchg
pop
popf
jae
mov
jb
mov
imul
mov
in
xor
adc
xchg
mov
mov
pop
adc
ljmp
xchg
push
xor
insb
xlat
negb
pop
popf
add
add
dec
push
test
push
or
jp
int
sbb
push
int
sub
or
dec
ret
int3
adc
inc
ret
popa
adc
pop
aad
into
xchg
sbb
mov
loop
add
insl
or
push
or
pop
pop
pop
mov
push
pop
insb
add
js
test
jbe
pop
js
sahf
ljmp
dec
xchg
inc
sub
ss
or
push
mov
inc
fildl
repnz
lods
hlt
pop
movsl
fidivl
ljmp
dec
and
hlt
es
flds
fcoml
fldt
push
clc
push
sahf
mov
fstpl
ret
sbb
cmp
jbe
pop
insb
add
ss
stos
rorb
adc
push
dec
add
repz
fadds
or
dec
mov
cmpsb
mov
in
and
jp
popa
ds
movsl
fs
test
mov
mov
jecxz
imul
lret
pop
cld
sbb
mov
xchg
sub
test
cmp
psrad
ret
sbb
dec
cmp
les
out
cmp
out
pusha
cwtl
int3
cmp
mov
out
out
inc
ret
adc
mov
bound
fisttpll
sysexit
imul
jecxz
outsl
sbb
loop
outsb
adc
rol
adc
inc
mov
adc
ret
test
stc
repnz
lock
pop
jae
mov
or
lock
xor
and
mov
jle
xchg
xor
popa
and
jno
lret
dec
scas
ret
cli
jmp
arpl
xor
call
les
cmpsb
leave
ss
mov
clc
daa
xchg
lea
lret
sbb
dec
sbb
out
call
fldenv
sbb
das
or
stos
lea
add
adc
lock
sbb
sahf
cli
popw
or
fisubrl
jle
or
leave
or
hlt
jnp
cmp
mov
push
aas
nop
dec
xlat
popf
add
imul
dec
and
inc
iret
test
cli
pop
dec
enter
add
xchg
dec
divl
jnp
gs
xchg
push
jl
mov
push
ljmp
mov
iret
inc
and
jae
or
into
rcrl
adc
jge
xor
lds
aaa
rcl
outsb
movsb
xchg
nop
add
movsl
xor
mov
loop
and
dec
leave
movsb
dec
arpl
jns
stos
jmp
addr16
mov
pop
xchg
out
cmp
fldt
aas
sub
push
mov
and
orb
mov
push
inc
stos
les
hlt
jmp
sbb
dec
xchg
and
stc
or
mov
shlb
push
adc
mov
movsl
bound
mov
mov
cwtl
mov
xorb
mov
ret
push
out
add
sub
fs
add
fdivp
jne
xor
jnp
jp
sbb
sbb
xchg
mov
push
inc
pop
fwait
inc
int
in
lock
fwait
add
test
mov
jne
xchg
fucomp
xchg
push
daa
into
ja
dec
lods
dec
and
add
push
cwtl
into
inc
or
sub
jb
or
cmp
imul
imul
sbb
incl
pop
inc
fcoml
lods
stos
imul
sub
popf
add
popa
cmp
push
addr16
loopne
lds
lret
jnp
and
mov
xor
add
adc
mov
idivb
fcoms
sbb
mov
jecxz
je
test
inc
add
out
pop
mov
lcall
out
dec
xchg
jae
xchg
add
andl
push
push
sbb
jb
scas
aam
inc
or
sbb
and
sbbl
inc
jnp
add
sti
cwtl
mov
and
inc
jno
movsl
mov
sub
cmp
shll
movsb
lea
xor
jge
or
jb
mov
arpl
xorl
pop
dec
aam
sub
mov
out
mov
jp
lret
mov
lahf
mov
iret
addr16
cwtl
cmp
sub
mov
cs
pop
call
sub
xor
pop
clc
test
insl
inc
mov
repz
mov
fdivr
xor
scas
loopne
mov
and
xlat
xchg
in
mov
inc
cmpsl
pop
push
cmp
or
lods
or
or
push
sarb
out
add
jg
or
pop
dec
jne
mov
mov
cmp
sarl
test
pop
inc
loope
add
mov
bound
and
or
xchg
xchg
aad
add
xor
daa
add
inc
mov
roll
insb
dec
inc
aad
add
sahf
fnstenv
push
fnstenv
in
stos
shlb
pop
loopne
inc
mov
inc
push
mov
mov
inc
and
mov
bound
cmpsb
push
adc
cmpsb
out
rol
xchg
inc
fwait
call
add
insb
je
les
pop
ss
into
push
mov
add
add
insb
xchg
push
decb
stos
mov
in
cltd
mov
movsb
shl
cmp
fisubl
flds
sbb
push
push
mov
xchg
pop
add
mov
cmpl
or
sbb
into
sar
mov
shlb
mov
fdivrp
xlat
lahf
int3
inc
loope
cmpsl
aad
sub
imul
or
fdiv
add
sahf
stc
outsb
inc
rcll
dec
jl
xor
rol
xchg
add
jns
popa
mov
push
out
mov
xor
jg
jl
int3
pushf
adc
push
scas
pop
in
sub
lds
mov
mov
jp
iret
fwait
dec
jmp
or
mov
fs
jns
jp
rolb
xchg
es
sti
shlb
lods
xchg
shll
sbb
mov
fbstp
add
cmp
inc
data16
inc
test
push
mov
lahf
subl
mov
mov
int3
ljmp
mov
fwait
in
pusha
sbb
int3
push
clc
in
pop
mov
mov
mov
pusha
mov
clc
std
stc
adc
mov
scas
adc
adc
sbb
aad
or
mov
jno
push
clc
lds
mov
ret
jge
aad
lret
sbb
call
pushf
inc
sub
lahf
and
addr16
stc
jecxz
popa
gs
xchg
mov
clc
sub
inc
nop
movsb
in
sbb
add
or
lret
fsubr
mov
adc
aam
cmpsb
add
mov
or
popa
jge
mov
push
cmp
jo
xlat
pop
or
push
stos
mov
inc
push
xor
xchg
fcomp
cmpb
mov
imul
xorl
out
out
pop
adc
cmp
cmp
lods
inc
cmp
bound
std
xor
shr
ja
fcmovnb
roll
inc
addr16
sbb
dec
aas
rcll
fwait
decl
call
insl
pop
idiv
shll
mov
fstps
je
jnp
sub
dec
add
xor
add
push
test
and
es
cmp
arpl
inc
hlt
or
push
enter
xchg
popf
ja
int3
jno
scas
xchg
xchg
mov
stc
jns
mov
fdivrs
dec
and
rclb
add
cmp
mov
xchg
mov
or
jbe
mov
cmpsl
or
ret
lock
lds
movsb
in
sub
pop
xchg
rcrl
fsts
rorl
or
pop
fcmovbe
test
in
mov
xor
xchg
movsb
mov
xor
pushf
sub
inc
leave
xor
aam
mov
lock
xchg
lods
xchg
mov
push
jne
inc
ja
and
pop
dec
loopne
pop
jp
cmp
mov
test
push
in
sub
push
and
or
pop
or
push
sbb
xchg
shrl
jl
adc
shll
rorl
stos
pop
mov
jb
or
push
sti
sub
add
ret
and
movsl
xor
dec
popf
dec
lds
mov
xchg
mov
lcall
xor
dec
or
jg
cmpsb
dec
dec
loopne
mov
pop
xor
xchg
les
imul
cmc
cmp
inc
fbstp
sahf
dec
cli
lahf
xor
into
movsb
out
icebp
inc
push
cmp
pop
push
jge,pt
mov
or
call
add
xlat
sbb
push
ds
test
int3
loopne
mov
into
aas
in
lds
push
popf
cmpsb
mov
iret
scas
dec
outsb
lods
loop
push
lds
pop
xorl
sub
enter
dec
jne
psubusw
mov
dec
dec
pop
sub
mov
rorl
xor
mov
cmpsb
test
lahf
or
subb
jbe
mov
jo
jp
mov
jb
mov
ljmp
imul
lds
sub
push
movsl
pop
mov
arpl
inc
lock
mov
lret
dec
adcb
add
xchg
or
inc
fistl
icebp
sahf
sbbb
and
lretw
std
ret
adc
jbe
or
sbb
xchg
cli
xchg
pushf
pop
mov
in
shr
pushf
nop
add
in
adc
mov
aam
or
lret
fbld
inc
lret
dec
dec
adc
mov
pop
test
ror
inc
pop
xchg
popf
jne
gs
jns
xchg
xchg
shrl
xchg
adc
in
aad
ja
and
xor
xchg
xchg
call
xchg
push
fnstsw
int3
and
lods
xchg
lahf
and
xchg
call
and
pop
xchg
mov
out
inc
xor
and
shll
cmp
jb
movsb
push
dec
cmp
mov
ror
testb
ds
mov
pushf
scas
js
leave
and
loope
in
movsl
cmpsl
mov
sub
fisttpll
jg
cmp
enter
imul
dec
test
ret
cwtl
cmpsl
or
cmp
cmp
jecxz
imul
mov
pop
pop
ja
mov
imul
push
mov
fsubs
hlt
scas
inc
test
xchg
pop
mov
dec
fs
xchg
sar
ret
insl
fwait
dec
out
dec
std
aaa
fmulp
sub
jno
shlb
and
rolb
gs
add
cmpsl
xchg
stc
xchg
adc
xor
push
jns
xchg
push
lods
aam
outsb
push
aam
subl
leave
cmp
mov
movsl
ljmp
cltd
jne
out
pop
add
xchg
popf
push
testl
inc
lret
sub
outsl
jp
mov
cmp
lods
sub
lahf
inc
jae
jp
push
mov
mov
push
jb
lods
push
clc
jecxz
mov
push
imul
jo
push
daa
imul
rorl
dec
dec
add
mov
jae
movsb
dec
adc
pop
es
inc
in
icebp
or
mov
enter
or
xlat
cltd
xchg
inc
movb
jbe
cmpsl
lock
out
cmp
mov
sub
insl
repz
loope
mov
in
cmp
rolb
shrl
jbe
rorl
cmp
and
cli
xor
mov
add
lretw
adc
es
mov
cwtl
fucomi
dec
out
jp
xchg
test
pop
or
out
insl
out
jle
data16
iret
ds
rorl
push
xor
pop
idivb
adc
sahf
dec
in
push
jge
sbb
out
dec
pop
xchg
shl
and
repnz
jns
push
into
scas
jbe
rol
dec
ja
gs
sbb
inc
jge
inc
dec
rcr
mov
fldl
push
ljmp
ret
cmp
fldt
insb
testl
insb
test
lret
push
lea
bnd
xchg
adc
inc
ds
cltd
cmpsl
in
mov
adcl
fildl
adc
cmp
out
inc
sub
mov
push
push
cmp
and
inc
pop
leave
shrd
pop
sbb
int
jmp
insb
add
mov
cmp
inc
das
mov
dec
stc
ja
inc
cs
inc
inc
scas
mov
push
pop
fdivrl
std
or
or
jo
mov
add
sub
mov
push
sub
sub
je
outsb
jno
or
ret
sbb
cmpsl
popf
or
out
jl
sub
mov
mov
aad
les
nop
cld
out
rdtsc
test
fcom
stos
adc
xorb
cmp
fwait
xchg
mov
lea
sub
mov
inc
lret
pop
popa
imul
sub
ss
cwtl
push
fnstsw
push
loope
jb
out
scas
fistps
inc
adc
pushf
mov
aam
adc
iret
adc
jg
mov
mov
decl
inc
andl
push
push
cmp
inc
scas
xor
fldl
jns
outsb
sbb
mov
mov
sbb
sti
jle
pop
jnp
push
jo
sub
mov
mov
mov
xor
popa
push
cmpsb
fildll
mov
and
sarl
ss
xchg
jbe
xor
xor
cmp
mov
dec
ja
pop
jp
and
xor
lret
sub
xor
subb
fs
andl
in
adc
lcall
addr16
gs
and
mov
cli
mov
mov
pop
popf
push
inc
or
fcomps
inc
mov
les
jae
sub
dec
addr16
xor
outsb
sub
push
xorl
out
cmpsb
jp
or
cs
pop
movsb
cmpsb
lret
fistl
cmpsb
xor
add
inc
and
add
pop
clc
jge
cmp
dec
bound
shll
xor
mov
fdivl
inc
enter
idivb
adc
es
lret
push
inc
jg
aam
sub
fisttps
lahf
out
mov
jge
push
push
dec
ja
scas
aas
dec
test
testb
leave
mov
aam
mov
push
dec
outsl
mov
push
add
or
push
enter
mov
sbb
test
add
mov
rcrl
rolb
fdivp
fldenv
push
nop
mov
jns
xlat
inc
dec
add
leave
sub
xchg
jnp
scas
fstpl
stos
jo
push
andb
pop
pop
dec
sub
add
lcall
inc
mov
sahf
or
push
inc
dec
and
xchg
push
inc
adc
ljmp
out
xor
cmpsb
aaa
mov
repnz
lcall
fst
xor
decl
enter
jns
cmpl
in
jge
test
cmp
mov
add
lcall
or
adc
jecxz
les
ljmp
and
mov
aas
shll
pop
sahf
aaa
outsb
icebp
mov
sbb
push
xchg
xor
push
cltd
pop
fcomps
jp
push
xorps
lret
jp
pop
or
sbb
pop
in
mov
fadd
add
ret
cmp
or
sub
lds
flds
mov
in
jle
fwait
stos
and
pop
out
ficomps
mov
add
in
mov
and
aam
mov
stc
out
add
pusha
pop
stos
stos
jbe
inc
stos
xchg
cmp
sbb
push
movsl
fwait
sbb
jns
aas
push
xlat
xchg
push
lret
test
fadd
cmp
push
decl
int3
mov
shlb
inc
xor
jnp
cmp
stc
out
fdivl
data16
xchg
fs
fcomps
adc
dec
es
push
pop
sub
test
loope
cmp
stc
or
xor
ljmp
lcall
pusha
xchg
divb
add
mov
mov
imul
and
cmp
fs
mov
clc
mov
out
repz
outsl
call
ret
sbb
scas
inc
out
repz
std
cs
cmpsl
mov
jmp
jl
clc
jno
std
fisubrs
scas
mov
stc
jns
iret
adc
adc
adc
mov
iret
pop
in
neg
hlt
push
jbe
in
jg
jno
jmp
ret
jb
push
pop
addb
faddl
stos
mov
fwait
out
add
dec
arpl
push
or
int3
enter
pop
jge
cli
jmp
xchg
jae
out
subl
sbb
cld
hlt
sbb
pop
xor
add
and
cmpsb
aaa
das
lock
incb
pop
lret
jbe
inc
jmp
sbb
cvtpi2ps
test
xlat
jo
mov
rcrb
push
inc
dec
into
xor
or
outsl
adc
lds
jno
mov
or
inc
mov
jg
xor
les
xchg
test
lds
cmpsl
mov
xchg
push
mov
fs
mov
and
repz
scas
int
add
or
adc
lea
lcall
fcmovnu
xor
lret
lods
loope
call
push
jbe
mov
cmp
cmp
iret
call
cmp
jecxz
pop
popa
jae
sar
sub
mov
sub
adc
add
sahf
std
xchg
mov
out
hlt
jle
fsubl
lods
dec
stos
pop
add
sbb
outsl
ss
out
jle
mov
xchg
jecxz
xor
out
mov
aaa
inc
sub
jge
ret
sub
pop
repz
mov
xor
sub
xor
mov
mov
stos
sbb
fcompl
dec
packsswb
dec
jp
ds
xchg
and
sub
scas
sub
pop
mov
adc
mov
and
xor
popa
jle
fdivs
outsl
pop
hlt
xchg
negb
ret
mov
je
jo
dec
bound
bound
dec
aam
fnstcw
mov
test
pop
adc
sarl
enter
daa
lea
orb
out
nop
cmp
das
lret
jle
or
je
push
cld
nop
je
and
and
lods
std
xor
xchg
push
mov
lods
cmpsb
outsl
inc
sbb
mov
sub
loop
out
xchg
into
sti
sbb
loope
pop
add
ret
mov
out
cltd
add
insb
fs
mov
pop
pop
addr16
push
les
mov
push
cltd
dec
lret
mov
lcall
mov
xor
lret
jg
add
lds
and
dec
cmp
mov
lret
xor
ljmp
mov
pop
pop
movsb
mov
les
and
mov
lcall
xchg
push
into
imul
jmp
daa
fs
add
jne
push
pop
mov
mov
adc
pop
sarb
int3
push
mov
or
ljmp
xlat
nop
dec
xchg
xlat
pop
inc
sbb
dec
movb
push
arpl
fimuls
dec
inc
sbb
xchg
or
xor
aaa
fwait
jle
xchg
mov
sub
cmc
add
xlat
adc
lods
pop
push
sub
enter
adc
loope
in
dec
xchg
push
xchg
xchg
or
fcmove
inc
gs
lods
mov
sti
jne
lods
mov
xor
aas
rcll
lods
imul
bswap
or
dec
mov
sbb
test
xor
gs
pop
mov
aam
popa
sub
inc
fs
push
lds
mov
and
and
int
mov
and
add
imul
or
aam
ret
adc
iret
dec
push
and
mov
and
sbb
mov
jb
cmpsb
inc
or
mov
inc
cmp
mov
inc
pop
and
pop
outsl
dec
pop
cmp
aaa
lret
xor
cmpl
lahf
inc
xchg
or
daa
lea
jne
xor
sbb
mov
out
mov
jns
test
pushl
sub
loop
and
sbbl
mov
jg
mov
popf
icebp
cmp
insl
dec
pop
inc
push
sbb
outsb
inc
arpl
mov
ret
adc
inc
fwait
xchg
sub
xlat
imul
adc
pusha
mov
out
mov
dec
scas
cmc
dec
sub
or
ljmp
jg
repz
sub
stos
adc
es
xor
bound
adc
xor
mov
cmc
pop
mov
loop
mov
aad
dec
dec
stc
in
arpl
scas
mov
loopne
repnz
mov
mov
in
xchg
ja
xor
sti
push
nop
sbb
test
dec
std
push
adc
lods
push
repz
add
je
scas
mov
push
enter
jne
add
push
xchg
add
xor
das
std
scas
mov
bound
in
or
sbb
mov
xchg
out
sub
sub
fbstp
int3
adc
fldl
pop
mov
cmpl
add
jp
arpl
add
aam
outsl
call
icebp
mov
cmc
fisubrs
and
bound
leave
in
mov
or
add
fwait
pop
in
pop
sahf
or
dec
pop
repnz
gs
xchg
add
lds
and
out
sbb
fwait
and
rcll
hlt
jo
jg
outsl
movsb
fisubl
js
mov
jno
mov
les
lock
mov
orb
js
mov
je
pop
rcl
aaa
es
in
ss
movsb
ret
movsl
jge
sbb
jmp
jmp
jmp
push
cmovp
lock
sbb
add
xchg
add
or
dec
jp
js
test
push
mov
sbbb
je
mov
pop
mov
sbbl
and
mov
rol
mov
push
jl
mov
loopne
jmp
xor
xchg
push
add
mov
cld
subl
out
int3
sar
lds
ljmp
sub
out
clc
popa
cmp
push
add
test
mov
cli
jns
sbb
nop
dec
push
mov
dec
push
rol
mov
mov
mov
xchg
xchg
add
and
inc
inc
xor
bound
cmpb
enter
add
cld
sti
mov
xor
xchg
adc
popa
xor
out
fs
dec
cli
shrb
faddl
sub
inc
cmp
sub
mov
movsb
aas
dec
or
test
xchg
imul
sbb
enter
in
mov
mov
cs
dec
out
insl
mov
loope
cmp
inc
lea
inc
mov
jns
outsl
es
test
imul
repnz
subl
dec
or
sti
jmp
movsl
and
popf
cmp
lahf
sub
xchg
pop
push
fs
ja
or
ss
sahf
jbe
es
fabs
scas
fcoml
pop
sbb
lds
push
std
add
test
mov
scas
pop
scas
pop
inc
sbb
lret
movsl
cld
and
sbb
sbb
je
mov
pop
inc
xor
out
xchg
insl
dec
push
stos
icebp
jns
movsb
push
insl
mov
xchg
sub
adc
and
sub
out
mov
int
adcb
aas
das
scas
cmc
cwtl
add
xchg
fidivs
or
hlt
sub
jge
scas
jo
mov
stc
in
scas
stos
push
xchg
lea
push
clc
frstpm(287
jb
mov
jle
out
sbb
sub
and
jecxz
jp
daa
nop
cmpsl
pushf
js
addr16
imul
inc
fs
inc
inc
icebp
mov
nop
in
les
sahf
pop
cld
sbb
pop
inc
lods
sub
inc
pop
repz
pop
lcall
pop
insl
divb
jmp
into
sub
mov
cmc
or
cmc
jae
fwait
std
jle
push
insl
dec
sbb
adc
xchg
lahf
mov
inc
int
dec
dec
or
xor
ja
nop
ret
push
xchg
lds
or
push
sub
arpl
popa
sbb
cmp
xchg
cmp
jbe
lods
enter
test
test
jg
push
lods
inc
adc
pop
push
or
fistps
stos
xorl
mov
int3
imul
aas
xchg
xor
sub
mov
jns
xor
jae
or
aaa
ficoml
xchg
repz
mov
insb
sbb
shl
and
scas
jmp
dec
imul
xor
mov
sbb
dec
sbb
dec
lcall
dec
mov
dec
lea
xchg
pop
scas
xchg
nop
icebp
jae
fprem
mov
sub
dec
sub
in
mov
movsl
lret
pop
sub
push
call
jecxz
jecxz
xor
lods
pop
pop
call
fwait
rorb
loopne
sbb
mov
insl
es
addr16
mov
div
lahf
je
inc
mov
push
cmc
dec
or
scas
pusha
daa
mov
push
sar
stos
inc
push
cmp
adc
loop
sub
test
mov
mov
mov
push
and
bound
xor
dec
sub
jno
fldenv
enter
daa
xchg
add
pop
notb
test
inc
stos
lret
ljmp
test
sbb
pop
or
jnp
adc
sbbb
popa
aam
ficomps
fsubr
mov
add
jle
ud1
cld
movsl
repz
pushf
mov
pushf
das
xchg
adc
mov
stos
adc
pop
pop
mov
into
push
adc
adc
ds
loop
xor
sub
adc
es
dec
xchg
inc
addb
dec
pop
bound
and
xchg
add
inc
insb
mov
xchg
jp
ljmp
out
popf
mov
cltd
jp
push
imul
cwtl
arpl
xor
fwait
ja
addl
outsb
outsb
mov
out
cmp
mov
lods
mov
sbb
cmp
fisttps
out
lods
in
std
cmpsb
out
stos
ja
dec
jmp
stos
jne
mov
push
inc
in
add
pop
adc
scas
or
adc
mov
lea
out
pop
sbb
out
or
jno
sbb
lahf
push
inc
scas
mov
jp
adc
stc
cld
sti
addps
fwait
add
mov
outsb
loope
or
inc
pop
xorb
xlat
sub
mov
xor
inc
std
dec
int3
fdivr
mov
or
mov
pop
loope
dec
inc
cmpsl
lods
or
notb
sub
outsl
repnz
xchg
data16
popf
es
or
mov
ret
adc
push
loope
or
dec
cmp
leave
push
imul
mov
sub
mov
push
inc
nop
mov
decl
into
add
subl
dec
rolb
pcmpgtw
outsl
adc
fidivrs
out
out
lcall
dec
cmp
jp
idivl
inc
dec
cmp
mov
add
sub
sar
and
adcb
ret
arpl
push
and
adc
lock
mov
push
lds
mov
test
inc
xchg
fdivs
mov
daa
out
mov
popf
xor
addr16
mov
fstl
push
into
dec
call
lock
dec
cmpsl
addr16
xchg
je
pop
cmp
cmp
fnstenv
lds
out
adc
dec
xor
test
mov
stc
mov
mov
push
dec
xchg
punpckhbw
int3
aad
or
push
cs
cmp
xor
imul
cmpsl
aas
fcomps
pushf
fldl
push
jns
out
push
sub
out
out
xor
xlat
cltd
xor
cmp
jmp
push
xor
aad
adc
and
jb
jns
aam
push
jno
pop
lods
js
pop
std
lret
push
stos
inc
push
jl
shlb
push
bound
mov
pop
and
into
inc
ss
and
push
push
popa
mov
mov
and
sahf
xorb
mov
jae
ret
addr16
outsb
adc
cmp
insl
ret
xor
out
std
mov
add
js
xlat
movsb
imul
mov
aam
inc
test
jecxz
ficomps
xchg
mov
add
pop
fsub
jns
jo
mov
aaa
xor
sahf
repz
ss
pop
cwtl
test
push
lret
gs
test
and
movsl
mov
add
in
jb
push
push
push
xlat
adc
pop
sub
test
sub
hlt
push
sbb
dec
push
je
std
dec
jp
fidivl
notb
imull
leave
xchg
jle
or
test
mov
push
jp
movsb
jge
mov
or
jge
movsl
mov
jp
xor
mull
mov
or
push
sub
movsl
sbb
and
xchg
cmpsb
or
cmpsl
lret
cmp
xchg
adc
or
push
pop
aaa
in
addr16
aaa
filds
push
mov
stos
stos
outsl
inc
adc
inc
out
out
mov
cmc
nop
cld
cmp
ljmp
addr16
sbb
into
or
out
sub
jl
adc
mov
sub
in
add
dec
xchg
sbbl
daa
xchg
sbb
aad
inc
adc
and
mov
into
sub
nop
mov
jns
inc
subb
xchg
sti
push
push
aas
pop
or
jno
das
aaa
arpl
inc
or
mov
in
adc
dec
xchg
aas
mov
sub
mov
push
imul
sub
fiadds
adc
or
mov
dec
cmp
dec
push
cltd
out
lds
sahf
dec
loopne
mov
and
cli
add
xor
cmc
and
mov
jnp
in
jecxz
mov
inc
gs
aaa
mov
lods
add
cmp
mov
test
outsb
cmp
lret
mov
jne
mov
scas
lock
out
loope
mov
push
sbb
xchg
cmp
sarb
sbb
cmpb
scas
mov
je
xchg
icebp
popf
mov
cmpsb
dec
fs
sub
int3
inc
jl
mov
lret
fdivr
inc
fwait
not
pop
and
ss
and
adc
push
dec
sbb
fdivrp
ficompl
push
pop
jno
aad
ds
lods
movsb
out
sub
pop
imul
loope
dec
push
mov
jne
xchg
sub
loope
adc
mov
orb
jae
mov
popa
outsb
add
mov
andb
jbe
sbb
daa
mov
xchg
sti
mov
sub
push
push
mov
or
cli
or
pop
add
pop
popa
lods
neg
gs
push
xchg
fs
pop
les
in
cld
shll
sbb
xchg
push
movsb
cmpsb
jns
dec
lret
bound
mov
jns
mov
out
lock
test
jnp
xchg
sub
sub
mov
outsl
push
subps
movb
dec
enter
les
test
cmpsl
jno
push
sbb
lahf
jno
pop
xchg
in
jo
add
and
je
and
xor
mov
push
sbb
adc
movsb
cmp
test
cmp
vaddsd
push
jnp
shlb
in
movsl
add
ljmp
dec
into
cli
das
scas
cltd
aam
das
hlt
sub
dec
xor
xchg
sub
pop
movsl
sub
jle
mov
pop
or
push
aas
jmp
test
push
mov
dec
js
test
sbb
sub
mov
dec
addr16
and
jp
xchg
sub
sbb
pop
pop
adc
test
jp
ret
lahf
pop
shll
pop
ja
dec
das
lods
and
jecxz
xchg
jle
cld
lds
inc
repz
cmc
mov
push
pop
cmpsl
scas
imul
sti
int3
fdivp
push
rcl
mov
jae
add
xchg
or
jge
repnz
jae
add
icebp
scas
xor
xchg
aam
call
sub
and
push
adc
inc
mov
sub
ret
fstpl
mov
rcrb
mov
cmp
mov
mov
xor
add
push
cmp
js
clc
les
pop
cli
test
cltd
addl
stos
jne
jb
and
lods
mulps
mov
scas
mov
scas
fsubrl
push
push
xchg
test
cld
inc
mov
inc
dec
addr16
mov
jge
inc
dec
stc
shll
dec
and
scas
mul
sbb
or
add
ljmp
mov
sbb
cmp
inc
push
lods
leave
mov
rorb
add
out
add
pushf
call
imul
pop
pop
or
fbld
inc
lods
push
mov
xorb
into
adc
lods
mov
arpl
cmc
test
push
mov
shll
sbb
and
lds
mov
cmp
add
sub
icebp
sbb
mov
cmp
imul
loope
jae
adc
sahf
sahf
add
xor
scas
daa
add
xchg
mov
jl
jl
cli
ja
xor
jg
loope
aad
xorl
xor
pop
or
loop
push
sbb
arpl
add
push
sbb
cmp
mov
imul
ret
push
loope
outsb
pop
mov
arpl
nop
xchg
sahf
mov
or
ret
test
mov
fneni(8087
mov
rolb
xlat
shll
push
adc
mov
aad
push
rolb
pop
pop
xor
aas
sub
leave
fdivp
aam
into
mov
jo
mov
mov
jne
into
int3
xor
cltd
jle
add
jnp
fsubrl
dec
test
add
fistl
les
or
push
sarb
jns
loopne
pop
or
lret
sbb
jg
sbb
push
mov
jno
jbe
mov
jl
enter
out
fxch
aam
inc
lds
cld
mov
stos
jecxz
xor
in
pop
aam
inc
outsl
jno
mov
mov
icebp
ja
test
push
pop
jae
dec
cmp
xchg
push
xor
pop
pusha
imull
in
pop
mov
dec
ret
mov
push
aam
sub
dec
in
movsl
jmp
mov
jns
aas
aaa
imul
scas
add
gs
push
jecxz
clc
pop
mov
push
mov
sub
inc
insb
loopne
or
jb
iret
addr16
xor
shrl
das
lock
cmpsl
ret
icebp
leave
bound
lret
leave
adc
adc
pusha
push
pop
and
cmpsl
xor
call
fisttpl
divb
stos
push
inc
dec
xchg
pop
jg
add
jge
sbb
jb
rcr
lods
loope
sahf
jmp
jg
pop
fldenv
fcomip
xchg
fcomip
loop
mov
add
push
mov
mov
ljmp
sbb
in
adc
stos
jp
fcompl
sbb
mov
mov
scas
mov
pusha
ss
popf
cwtl
push
dec
sti
mov
xchg
stc
shlb
xchg
ret
jno
mov
icebp
sbb
int
std
adc
mov
push
mov
rorl
adc
jmp
pop
movsl
jge
mov
and
movsl
test
push
lds
orl
ffree
clc
inc
loope
sub
les
scas
jp
das
xor
adc
les
xchg
repz
dec
xlat
dec
dec
dec
xor
jecxz
jnp
mov
scas
cmpb
mov
sbb
mov
sbb
jmp
cmpsb
dec
sti
nop
dec
jbe
xorl
leave
mov
in
icebp
addr16
xor
ds
leave
outsl
loope
or
loope
sub
sbb
xchg
clc
and
push
push
mov
out
lds
sarb
or
fsts
xor
cmp
outsb
mov
dec
dec
enter
or
inc
outsl
mov
mov
xchg
add
jge
add
lds
in
imul
fists
cld
icebp
testb
push
jae
mov
inc
xor
and
sub
adc
jmp
leave
mov
push
repnz
scas
call
repz
insl
aas
adc
mov
inc
out
jb
cmp
out
xchg
jno
hlt
arpl
pop
lods
movsb
out
je
push
mov
test
add
xchg
mov
push
dec
shl
shr
cli
les
mov
hlt
push
xrelease
ds
mov
mov
mov
ds
and
shr
cmp
das
mov
or
in
push
and
fwait
es
js
lret
or
inc
xchg
inc
out
jp
movb
jmp
repz
mov
imul
enter
cld
mov
mov
in
push
jge
mov
into
leave
mov
scas
mov
mov
pop
aas
jg
push
scas
cmp
fidivs
mov
lret
out
lods
mov
and
aam
idiv
shll
cld
jecxz
mov
sti
dec
icebp
in
mov
lods
jnp
shrl
dec
in
xorl
xchg
push
in
mov
push
sub
push
icebp
xlat
add
outsb
stos
cmp
lcall
dec
mov
sub
jb
push
sbb
xor
lret
test
or
mov
outsl
dec
dec
pop
out
sti
int3
jg
imul
jmp
mov
push
call
jae
pushf
mov
push
in
lret
fsubl
mov
push
aas
pop
ret
dec
xchg
xor
fcompl
or
jp
xor
dec
mov
push
push
mov
gs
jmp
aad
out
loopne
stc
ret
movsl
adc
adc
movsb
shll
pop
sar
das
sbb
push
fistl
fs
sbb
add
push
xchg
sbb
mull
cs
dec
adc
insb
push
cmp
push
jle
xlat
insl
push
repnz
push
shl
sub
mov
stos
mov
mov
lods
mov
pop
mov
stos
lea
mov
stos
rcrl
jecxz
dec
push
stos
xchg
std
addb
icebp
jno
push
push
test
mov
inc
dec
iret
lock
enter
mov
pop
and
xor
cli
rol
int
xchg
stos
aam
popf
aad
sub
xchg
lahf
push
pop
test
sbb
pop
test
test
pop
mov
mov
jnp
fsubrs
hlt
aaa
int
jg
in
lds
cwtl
xor
cwtl
cmpsl
pop
xor
or
mov
out
lcall
loopne
add
shll
push
jl
push
sub
and
mov
repz
xor
sub
aam
inc
into
push
and
test
sbb
inc
add
sub
rclb
imul
jmp
jbe
iret
or
loop
fsubrl
in
xlat
or
out
cltd
cld
push
add
jne
out
add
js
jb
test
addr16
or
ret
jl
shl
xchg
sub
loope
jb
fdiv
pop
sub
bound
icebp
lret
jae
bound
xchg
push
add
loopne
xchg
lds
ds
xlat
adc
arpl
movsl
cwtl
jle
mov
sub
xchg
inc
or
xchg
add
out
mov
jno
cmp
dec
jno
cld
dec
dec
xor
cld
push
cmp
sbb
adc
repz
fsubl
call
repnz
repnz
icebp
pop
pop
fsubl
adc
iret
movsl
int
out
pop
lret
push
xchg
inc
inc
imul
pop
add
cld
lds
addr16
les
test
shrb
mov
fmul
popf
mov
pop
and
fs
xchg
fwait
mov
fdiv
push
push
add
jae
and
mov
pop
repnz
mov
push
or
jmp
add
sub
push
ss
push
pop
stc
in
test
hlt
and
dec
fnstcw
add
fmul
and
add
mov
pop
ret
and
ret
stc
lea
mov
push
inc
mov
inc
loope
leave
icebp
call
jbe
push
test
test
push
push
mov
pop
or
and
adc
cmc
cli
mov
lea
inc
cmp
or
mov
dec
fcmovbe
or
ret
push
icebp
push
ljmp
lcall
inc
in
jle
push
mov
push
mov
popf
add
sahf
cmp
cltd
cmp
and
adc
jl
outsb
incl
sbb
hlt
adc
movsb
sub
sahf
sbb
xlat
fdivrs
jge
into
xchg
lahf
cmc
sub
pushf
xchg
jge
xchg
and
xchg
adc
push
filds
mov
jnp
mov
sbb
std
mov
test
loop
pushf
rol
sub
pop
and
add
xlat
sbb
int3
ret
push
pop
mov
xchg
shlb
bound
fwait
jmp
and
mov
push
ds
aad
scas
sub
or
push
fcompl
insb
jecxz
xchg
scas
push
sarl
jb
imul
add
jecxz
nop
in
push
pop
adc
jns
push
aad
mov
lret
pop
jle
dec
pop
sti
hlt
sub
inc
outsb
xchg
sbb
fdivr
mov
outsl
cwtl
xchg
mov
cwtl
icebp
ss
mov
jge
xchg
movsb
aaa
mov
andl
out
lea
cmp
pushw
adc
xchg
lods
into
jb
xchg
jle
into
cmpsb
popa
dec
sub
lret
dec
jle
xor
dec
lea
xchg
jne
lret
jl
mov
loop
cmpsb
pusha
jl
jb
aaa
call
jb
jecxz
and
mov
inc
outsb
test
and
cld
insl
vmread
sub
in
mov
fiaddl
push
fwait
adc
dec
repz
xor
and
xor
pop
inc
jo
outsb
xor
sub
push
xchg
fdivs
arpl
lods
mov
rorb
frstor
lds
or
insb
push
mov
jl
ljmp
in
fidivl
and
and
mov
mov
movsl
sahf
in
inc
adc
lods
push
fdivr
aad
cli
mov
movsl
dec
inc
and
enter
lcall
mov
jmp
inc
pop
popl
xchg
cmp
jg
mov
push
int3
cs
mov
cwtl
cltd
loope
add
sub
cmp
ret
and
rcrb
in
in
xchg
cs
fcmove
pop
lret
sub
lret
push
dec
lcall
popf
fmuls
int
pop
clc
adc
stos
fstpl
sbb
arpl
mov
and
adc
sub
daa
mov
es
idivb
inc
xor
jo
inc
sub
ljmp
adc
push
sub
xchg
iret
mov
adc
mov
or
loopne
loope
insl
clc
jae
pop
mov
insl
mov
es
xor
adc
aas
push
out
cltd
xor
jne
jae
xchg
imul
push
jg
add
sub
xor
lahf
mov
pop
lcall
mov
jns
or
pop
filds
cmp
xchg
std
and
cld
or
pop
sub
and
pop
data16
mov
cmp
leave
cmp
lods
mov
xor
sbb
lods
test
leave
cmpsb
pop
jg
and
cmc
push
mov
lds
adc
xchg
pop
adc
xchg
add
cmpsl
push
lahf
lahf
test
enter
cli
sub
push
testb
ljmp
rol
popa
cmp
fcomps
sub
sahf
jp
or
out
std
inc
dec
jl
add
cmp
iret
mov
sbb
jle
adc
mov
leave
std
pop
mov
push
les
ret
add
xor
pop
xchg
xchg
xchg
xchg
cmp
cld
cli
sbb
mov
sbb
jge
push
fistpll
fs
mov
xor
das
cmp
mov
pop
jge
pop
adc
enter
loop
sub
rcll
pop
cmp
ja
ja
fstpl
cmp
testb
mov
xchg
push
fcomi
sbb
xchg
xchg
and
jne
pop
pop
jl
xor
lods
mov
scas
sub
mov
mov
sbb
ja
cmc
inc
data16
xchg
je
fdivl
add
xchg
ljmp
in
sub
mov
mov
hlt
sbb
andb
shlb
jl
mov
push
stos
pop
lahf
nop
lret
push
shlb
je
test
push
pop
push
mov
push
or
push
jge
xchg
ret
mov
adc
jmp
or
push
dec
mov
ja
xchg
mov
insl
repz
cmpsb
jmp
or
ret
cmp
shrb
jg
and
hlt
add
jecxz
ljmp
jb
aaa
add
mov
push
aaa
inc
out
dec
jne
in
lret
sbb
and
xchg
ret
xor
test
mov
xlat
jl
xor
cld
jae
pop
push
repnz
imul
imul
pop
adc
xchg
clc
mov
inc
mov
das
in
pop
divl
inc
orb
outsl
in
popf
sbb
lods
push
jb
insl
ret
int
sahf
dec
lods
adc
xchg
fnstsw
sbb
mov
stos
jg
adc
dec
aad
jno
xchg
aad
sbb
pop
int3
mov
div
icebp
xorl
and
stos
adc
mov
pop
sti
jmp
jnp
jge
adc
fmulp
push
sub
pop
call
sti
fs
sub
nop
inc
test
leave
add
test
xor
lea
insb
mov
pusha
ret
cmp
sbb
dec
inc
out
leave
iret
mov
sbb
test
adc
push
dec
and
bound
add
jbe
mov
lods
movl
sbb
fwait
sti
data16
dec
adc
jp
clc
repnz
enter
aad
ficoms
repnz
pop
jae
fisubs
sbb
cmp
fstpt
std
aaa
outsb
inc
dec
cmp
loop
add
cltd
pop
jl
std
loope
cs
outsb
unpckhps
inc
adc
mov
jmp
mov
adc
push
jp
sbb
movsb
neg
call
xchg
int
xlat
arpl
pop
mov
das
movsl
cli
movsl
jnp
out
ret
shll
inc
sti
pop
fs
push
cmpsl
lods
xchg
push
mov
pusha
cli
xor
sub
xchg
sub
call
frstor
sub
pop
add
dec
mov
lods
push
gs
and
lock
insb
out
xchg
push
lret
outsb
push
push
jle
loope
cmp
adc
test
dec
loop
je
rol
lods
fstl
push
sub
xchg
xor
imul
xchg
ret
mov
xor
sbb
jb
cli
fdivs
icebp
dec
sub
dec
push
fs
sub
or
sub
sub
sahf
test
sub
mov
dec
push
insl
cmc
out
aas
mov
cmp
push
xor
xorl
cli
jns
push
jmp
int
dec
jmp
gs
jbe
psubsw
cli
or
loopne
and
cs
and
in
lahf
and
scas
insl
movsl
bnd
adc
adc
and
mov
in
adc
mov
inc
push
or
jecxz
add
lock
out
ss
mov
bound
std
xor
dec
cmc
imul
mov
enter
cmpsl
sub
dec
dec
ja
mov
stc
sbb
sti
aam
mov
insb
fildl
mov
dec
add
cmp
in
push
aam
dec
in
and
mov
or
popa
add
and
adc
push
ja
or
mov
sub
cld
in
cmp
xor
push
sbb
ds
push
push
xchg
in
fiadds
popf
or
xchg
mov
movsl
das
mov
sbb
cmp
sbb
mov
cmp
sub
sub
in
roll
jp
mov
jmp
inc
in
sahf
insb
lea
add
dec
cmp
incl
dec
notb
daa
inc
and
mov
jno
pop
cmp
mov
push
stc
xor
push
xchg
mov
je
jo
xchg
cmpsb
lock
testb
xor
push
inc
popf
pop
int3
cli
out
roll
jl
fidivrs
loope
add
lock
cmp
pop
push
dec
stos
cli
imul
xor
jne
dec
enter
jb
or
int3
cmp
or
out
adc
push
fldl
lcall
sbb
add
and
and
mov
and
mov
call
jnp
inc
test
push
popf
inc
test
mov
cltd
xchg
mov
mov
mov
add
xor
pop
add
subl
ljmp
and
outsl
dec
aaa
mov
aam
mov
lds
xor
iret
xor
loope
push
fdivrl
mov
aad
cmp
lret
ja
adc
jno
jmp
mov
push
inc
jbe
outsl
sub
xor
pop
shll
into
jo
insl
or
movsb
adc
push
pop
es
dec
pop
inc
fs
popf
mov
sbb
bound
mov
xlat
push
add
fprem1
jbe
stos
call
pop
out
icebp
dec
adc
icebp
mov
scas
andb
xorb
loop
mov
mov
lret
xchg
mov
imul
loop
push
or
sbb
xchg
add
cltd
and
testb
clc
pop
sub
jbe
mov
adc
das
sub
dec
ss
push
rorl
enter
jnp
mov
cwtl
jge
aam
push
jmp
insl
sub
jbe
leave
add
lcall
sahf
cmp
and
add
dec
shlb
pop
insl
jp
or
pop
out
fistl
push
shlb
int3
ret
mov
shll
cmp
add
push
jle
inc
mov
mov
inc
cmp
add
lcall
sbb
mov
ret
enter
adc
pop
jb
in
ss
adc
cmp
sbb
sbb
test
fistpl
ss
imul
cmpsl
or
insb
insb
out
aas
sub
fcomps
xor
jnp
ljmp
dec
fmuls
sub
popf
inc
dec
dec
mov
out
popa
ja
in
cmp
cltd
lods
mov
int
jno
mov
pop
jo
pop
stc
sub
out
adc
das
mov
out
aaa
fidivs
and
pop
cld
jo
jmp
testl
adc
pop
mov
and
pop
add
fildll
mov
push
enter
cmc
aas
sub
add
add
in
scas
push
and
dec
insb
fisubl
mov
sahf
mov
mov
pop
xor
lret
scas
repnz
mov
mov
js
jb
pop
jg
rcrb
adc
popf
orl
mov
cmp
jl
sbb
pop
hlt
cmp
mov
cmp
sub
push
int
xchg
dec
out
aad
or
stc
mov
ss
fisubl
ret
dec
mov
mov
or
and
shl
jnp
iret
packuswb
dec
lea
cmp
dec
ret
inc
rcrb
xchg
ficompl
sbb
pop
mov
dec
cmpsb
movsl
push
cmp
negl
sub
aam
cs
sub
call
xchg
xchg
ffree
jp
xchg
mov
sbb
add
inc
popf
dec
jp
clc
cli
lret
subb
sahf
iret
and
mov
xlat
dec
dec
pop
test
push
shrl
leave
ss
mov
adc
movsb
fcmovnb
mov
sahf
jne
push
jne
cvtps2pd
not
mov
sub
sub
call
push
incl
roll
mov
sub
cld
pop
or
push
bswap
xchg
loop
pand
mov
rorl
adc
fwait
clc
pop
mov
rclb
push
push
jle
or
popf
push
popf
scas
hlt
rorb
jg
bound
dec
add
lods
xor
inc
inc
inc
pop
testl
les
and
mov
out
xor
jae
aaa
mov
dec
and
shrl
inc
adc
pop
jb
nop
ds
sti
inc
push
stc
std
call
xor
sbb
push
or
jo
cld
jns
xlat
imul
testl
mov
ljmp
mov
mov
xor
iret
mov
pop
xchg
sub
jns
rolb
iret
ja
call
pop
xchg
pop
ficoml
cwtl
and
mov
sbb
addb
adc
aam
mov
jbe
pop
jbe
test
loop
inc
fdiv
inc
jne
arpl
stc
fnsave
mov
jecxz
add
xchg
ret
mov
mov
jge
fwait
stc
pop
scas
lds
fidivrs
and
push
mov
adc
xor
popf
adc
or
fs
in
fstps
enter
xchg
lret
mov
call
xchg
cmp
pop
loope
cli
pop
cmp
ss
add
adc
out
mov
or
dec
loop
sub
cmp
lahf
xchg
inc
js
dec
cltd
jle
rcrb
out
into
subb
cli
xlat
jl
and
rcll
enter
mov
xor
mov
ror
shlb
and
or
popa
pop
push
xchg
aas
dec
add
bound
sub
jns
lock
mov
push
movsb
loope
mov
xchg
in
je
cmp
test
and
lret
fldln2
cmp
adc
inc
stc
daa
push
lods
inc
lds
lods
mov
adc
mov
inc
popa
aam
add
add
pop
inc
pop
dec
scas
stc
test
cltd
leave
stos
clc
mov
push
xchg
sub
shl
outsb
xor
mov
popa
cmp
mov
dec
or
jmp
mov
sti
mov
fnstcw
mov
xchg
lock
fsubrl
jne
add
push
cmp
add
sbb
jl
mov
rcr
int3
popf
cmp
and
adc
sbb
sub
mov
js
test
shrb
mov
je
and
push
stos
and
in
jo
enter
add
fldcw
sbb
sti
ljmp
insb
daa
fs
in
fdivs
subb
scas
pop
pop
dec
das
mov
jge
pushf
jb
jmp
aam
sbb
insb
mov
mov
or
lea
xchg
sbb
fucomp
out
shlb
cs
adc
xor
mov
test
scas
mov
cmp
xlat
in
aad
mov
fsubl
xor
int
shrl
cmpsb
mov
daa
addr16
orl
push
iret
ja
xchg
xor
pop
xlat
mov
sub
mov
xor
xchg
ss
inc
push
ret
fisttps
jmp
sub
int
in
mov
push
mov
xchg
pop
mov
xor
inc
xchg
inc
push
adc
cltd
mov
jmp
adc
add
xor
push
add
push
mov
cmpsb
jl
dec
adc
popa
and
jbe
ror
inc
call
mov
lahf
push
or
pop
and
lds
out
and
je
adc
ja
in
mov
enterw
arpl
dec
movsb
mov
int
inc
mulb
movlps
mov
mov
pop
rol
mov
pusha
lret
inc
jmp
sbb
or
xlat
push
dec
and
xor
lcall
movsl
push
iret
inc
sahf
add
sub
fs
fcoms
xchg
cmovnp
cmp
mov
stos
stos
mov
mov
cmpsl
pushf
rorb
push
add
dec
inc
mov
push
imul
xchg
inc
popa
test
dec
pop
mov
add
add
sbb
loope
lea
inc
push
popf
mov
mov
stos
fsubrs
adc
addr16
stos
jo
movsb
fidivrl
mov
or
or
addr16
js
and
cs
jne
and
in
fidivl
mov
mov
sub
mov
xchg
ds
movsb
dec
jne
pop
mov
jb
subl
lock
xchg
les
inc
fmull
lock
ja
pop
fwait
pop
cmp
inc
inc
arpl
push
leave
mov
sub
add
clc
andl
xor
cs
cld
add
push
movsb
inc
orb
insl
test
rep
pop
je
mov
fwait
mov
test
aad
mov
hlt
xlat
subl
xchg
test
mov
aam
stos
or
mov
inc
aas
mov
push
outsb
push
and
pop
out
xchg
xchg
sub
mov
add
daa
aam
out
insb
aam
aam
sbb
std
xor
hlt
into
and
addr16
pop
les
cmpsl
fwait
pop
sub
mov
pop
daa
in
jne
or
add
movsb
jecxz
push
fdecstp
cwtl
sub
rcrb
cld
sbb
mov
cltd
jmp
dec
aaa
and
push
fists
fsub
rorl
repnz
ljmp
sahf
imul
mov
fwait
rclb
addr16
mov
dec
cltd
xlat
cmpsb
pop
repz
arpl
addl
clc
notl
sahf
sub
sahf
dec
outsb
popf
leave
rcr
movsl
les
push
aam
or
pop
lret
fnstcw
test
mov
in
lds
jecxz
jp
or
lock
pop
sbb
pop
pusha
sub
jmp
outsl
push
push
push
dec
cmp
dec
jmp
or
pop
xor
js
jge
dec
pop
daa
or
xor
jb
xchg
adc
ja
dec
push
mov
jno
adc
fstl
push
jmp
in
notl
pop
call
bound
jnp
mov
test
push
pop
mov
fxtract
xor
sbb
aaa
int
dec
push
push
adc
or
jne
pop
stc
cwtl
or
mov
sbbl
cmp
or
std
outsl
cmp
push
outsb
fbstp
push
lods
popf
lea
xchg
push
dec
and
pusha
cmc
icebp
dec
jge
xchg
scas
dec
scas
fisubrl
add
jne
jmp
iret
lret
data16
pop
in
fadd
or
pop
mov
mov
and
mov
int
in
jle
loop
shl
jae
sar
popf
ja
jl
xchg
or
sub
or
rolb
jo
test
and
rorb
cmpsb
mov
push
andl
testl
aaa
xor
bound
dec
cli
sahf
cmp
repz
arpl
and
xor
jae
xchg
pusha
fs
pushf
mov
xchg
arpl
pop
inc
out
idiv
dec
outsl
fimull
popl
loop
inc
dec
cmp
jns
dec
pop
inc
cmc
fwait
pop
lock
xor
inc
stos
push
stos
arpl
cmpsl
pop
imul
push
das
mov
and
outsb
jecxz
add
sbb
aad
imul
test
js
lret
xchg
or
push
lcall
addr16
jg
push
mov
cli
and
scas
jne
popf
fimull
mov
jge
lret
stc
xlat
es
cmp
btsl
fwait
push
movsb
xchg
imul
xor
hlt
les
rolb
in
inc
cs
sbb
adc
cld
sub
push
rorl
mov
ret
ss
mov
cmp
cmp
rorb
jbe
je
fadd
cmp
add
aad
adcl
mov
pusha
gs
divl
cmp
xchg
cmp
arpl
rcll
roll
iret
insb
and
getsec
mov
add
sti
or
xchg
test
cmp
andl
xor
ficoms
cltd
fdivp
movsb
xchg
or
sbb
xlat
push
fimuls
dec
push
cltd
push
or
xor
inc
pop
ds
push
pop
jne
stos
mov
and
scas
adc
movl
cltd
cwtl
or
inc
xchg
push
out
push
jnp
fidivl
scas
inc
xchg
cmc
jle
mov
into
and
jp
test
adc
push
stos
int3
std
push
lods
fwait
stc
mulb
xchg
fimuls
divps
and
dec
adc
inc
pusha
lds
nop
add
les
jnp
push
test
imul
fldenv
dec
pop
xchg
add
jne
dec
roll
imul
loop
in
jno
lods
and
jecxz
jo
nop
xchg
jecxz
adc
adcb
xor
xchg
push
jbe
ljmp
sbb
sbb
leave
sarb
in
mov
mov
jno
rcrb
cmp
mov
cli
mov
ret
ret
pop
add
loop
mov
pop
jmp
cli
je
pop
xlat
les
ljmp
mov
aad
test
repz
sub
jl
cmp
arpl
push
in
insb
pop
data16
pop
sub
test
repz
clc
enter
push
pop
lahf
out
adc
push
jecxz
bound
dec
mov
or
testl
xchg
add
icebp
mov
jl
or
bound
ja
mov
lock
jp
push
icebp
je
xor
fwait
lcall
and
mov
data16
xor
icebp
in
outsb
jbe
cmp
aaa
sbb
outsl
cmp
call
outsb
ss
cmp
imul
inc
inc
call
in
jp
sub
push
jmp
imul
jl
or
jle
ret
pop
mov
sbb
ret
scas
popa
cmp
or
pop
jo
push
xorb
sbb
push
cmpsb
adc
adc
pop
ret
lock
mov
int
mov
scas
cmpsb
xchg
inc
sbb
sub
out
inc
xor
shlb
dec
or
inc
jns
add
test
lock
shll
fsubrs
or
inc
push
adc
pop
fdivl
add
cltd
enter
xor
ficompl
push
sub
push
sub
ret
in
fs
movsb
out
inc
mov
pop
lret
push
pop
mov
gs
call
xchg
repz
xor
xchg
mov
test
cmc
cmp
mov
sub
adc
pop
fiaddl
sbb
and
pop
push
sti
xor
pop
mov
jbe
testb
subl
hlt
xchg
ja
lcall
push
mov
or
imul
sub
rcrb
call
ja
rcr
mov
push
inc
or
test
push
enter
push
sbb
or
imul
mov
mov
shll
int
push
pop
and
xchg
dec
orl
loopne
es
outsb
hlt
aad
loop
stos
dec
flds
pop
cmp
mov
or
xlat
popf
add
xchg
add
test
mov
adc
push
insb
cmpsb
xor
mov
jge
or
loope
jne
mov
push
das
mov
jl
divl
sahf
xor
rclb
lods
xor
or
scas
fwait
in
push
sbb
rol
rcrb
xor
cmc
hlt
repnz
xor
mov
or
mov
push
xor
sub
mov
test
lcall
dec
sbb
sbb
dec
mov
push
jmp
adc
push
mov
insb
cmp
fdivrl
sti
push
popf
outsl
or
lods
pop
mov
mov
fsubrl
pop
cltd
aad
mov
arpl
pop
aam
xchg
adc
xchg
mov
push
mov
out
push
inc
inc
lock
loop
js
cmp
stos
mov
out
inc
mov
cmp
inc
lock
in
or
hlt
sub
rolb
es
push
add
imul
sbb
mov
pushf
add
gs
fwait
dec
push
push
insb
loope
sbb
cmpsl
fs
sub
in
sub
leave
fistl
dec
dec
jnp
fsubr
inc
mov
inc
lcall
sbbl
pop
xor
jnp
imul
daa
clc
mov
aad
xor
sub
jo
push
inc
push
lods
xchg
mov
fsts
lods
jge
inc
pop
add
in
mov
fs
lods
mov
pop
ja
lret
jl
leave
in
test
xor
lods
out
xchg
sbb
jo
out
inc
adc
fdivl
mov
lds
arpl
stos
insl
adc
push
jecxz
xor
mov
adcl
xlat
xchg
xor
jb
add
sbb
ss
shrl
sub
shl
cld
adc
imul
pop
inc
shl
cmp
pop
xchg
mov
in
mov
push
ds
adc
fwait
seto
lret
cmovp
mov
or
in
pop
out
sahf
dec
xor
in
int3
andl
mov
lods
repnz
mov
cmpsb
cmp
jo
test
mov
sub
mov
shlb
int3
pop
jp
fistps
mov
xor
rclb
inc
and
mov
dec
fucomp
jnp
aaa
cltd
fnstsw
xchg
arpl
xor
xchg
test
aas
jle
daa
xorb
in
add
popa
mov
add
jge
adc
and
mov
push
mov
push
mov
divb
add
loopne
das
movsb
inc
lock
scas
jg
int3
jo
lods
pop
jmp
inc
dec
nop
inc
enter
negl
sub
jle
jns
sub
sbb
sub
in
xor
jge
or
mov
pop
js
inc
push
inc
adc
xchg
xlat
inc
xchg
cmpsb
mov
dec
ret
ja
mov
gs
hlt
cmp
push
mov
jno
in
pop
fld
das
enter
mov
add
xchg
mull
jecxz
xchg
push
and
imul
ficoml
lds
pop
jl
jl
sub
ss
or
es
inc
stos
adc
and
jmp
or
xchg
dec
loopne
or
arpl
shrb
mov
pusha
hlt
dec
cmp
andl
mov
dec
add
jno
shll
xor
lods
daa
mov
enter
lods
imul
xchg
dec
inc
cld
jae
or
data16
cltd
aam
movsb
push
rorb
pusha
daa
mov
push
dec
lds
arpl
hlt
xchg
pop
bound
into
ds
imul
add
push
stc
mov
sti
mov
dec
jne
push
out
jb
lcall
cmp
addr16
pop
dec
stos
dec
mov
mov
clc
shrb
jne
ret
sbb
aaa
pop
fnstenv
int
icebp
lods
fwait
shrl
push
mov
ss
stos
das
repz
lahf
sub
stos
pop
mulb
stos
sub
stos
dec
dec
mov
pop
fstl
push
pusha
or
or
xor
jns
fbld
scas
cmpsb
dec
sub
mov
imul
jbe
test
cmc
rcrb
aam
clc
mov
enter
xlat
mov
cwtl
jno
jns
clc
aas
pushf
pop
cmp
std
stc
jmp
icebp
divl
sbbb
test
test
fcom
xchg
xor
dec
dec
push
mov
inc
inc
enter
add
cli
pop
arpl
aam
xchg
fdivr
fsubl
xchg
or
rorb
sub
outsl
inc
stos
push
mov
sub
in
mov
sbb
pusha
jge
popf
enter
push
cmp
add
xchg
lcall
imul
xor
loop
mov
mov
js
loope
pusha
insb
scas
loopne
aas
fs
arpl
cmp
or
adc
xchg
pop
inc
cmp
faddl
pop
push
sti
xchg
gs
es
sub
std
push
test
lds
iret
or
dec
sub
andb
and
or
je
in
cmp
mov
fsubs
hlt
mov
daa
jnp
stos
mov
fisttpl
push
fs
repnz
fistpll
push
shr
ret
or
pop
or
pop
or
mov
xchg
cmp
std
mov
jne
jnp
and
jbe
jmp
fidivrl
in
or
cmp
pop
and
xor
fucom
inc
mov
inc
push
inc
add
dec
pop
jbe
xlat
push
mov
and
gs
jno,pt
test
stos
and
jb
pop
mov
add
pusha
hlt
push
mov
xor
js
mov
ret
insl
imul
std
mov
sbb
sbb
cmpl
or
or
mov
jno
in
push
mov
mov
jne
jl
xor
mov
jg
ss
pop
outsl
addr16
mov
inc
les
and
xchg
adc
fstp
xor
cmc
scas
lock
imul
inc
bound
fmull
xchg
add
bound
pop
mov
stc
stos
test
sub
outsl
fs
gs
add
dec
pop
addl
jo
icebp
sbb
mov
pop
test
outsl
adc
pop
sub
or
bound
sbb
outsl
and
push
call
clc
jns
xor
adc
push
sbb
or
es
iret
mov
push
sub
out
or
insl
xchg
jecxz
clc
into
outsb
inc
sbb
aaa
inc
inc
xchg
fucomip
addr16
jb
je
mov
cmp
sub
ficomps
clc
jnp
and
mov
stos
push
scas
add
inc
into
jle
cli
mov
shl
mov
testb
fadds
dec
insl
xchg
popaw
cmp
or
mov
shlb
xor
aad
arpl
lock
jecxz
test
xchg
mov
cmp
inc
icebp
data16
les
ljmp
pop
sub
rcll
or
in
hlt
aaa
pop
fcom
cmp
addr16
cmp
mov
insb
jmp
fists
dec
sub
mov
cli
fcomi
ja
fistpll
out
jne
push
push
mov
out
js
lret
roll
test
or
ret
aaa
test
pop
xchg
mov
jo
add
mov
push
lods
cwtl
aas
xor
and
sbb
unpckhps
cmpb
push
lea
jg
pusha
mov
jmp
ljmp
pop
jg
movsb
fstps
jnp
dec
cmc
xlat
pop
nop
inc
iret
nop
aas
mov
or
inc
rcll
push
ljmp
mov
dec
xor
addb
idivb
xor
dec
add
out
addr16
cmp
pop
xchg
sub
pop
test
into
mov
popa
mov
push
pop
in
outsl
mov
push
jns
iret
stos
mov
into
xor
adc
jae
nop
cmp
mulb
popf
enter
sarb
loop
fidivs
outsb
in
push
mov
shll
dec
sub
mov
outsb
adc
lods
leave
mov
xchg
sarl
inc
or
xchg
sub
ljmp
outsb
jg
loopne
dec
pusha
mov
daa
js
popl
out
xchg
leave
mov
addr16
adc
movsl
dec
mov
mov
lcall
add
or
lea
mov
js
data16
in
sbb
ja
fcomps
int3
dec
adcl
xchg
and
repnz
popl
mov
inc
mov
xchg
cmp
mov
push
lret
push
cld
mov
mov
mov
aam
dec
pop
adc
popf
sbb
lds
in
mov
pop
popa
scas
xor
push
inc
les
fmull
pop
xchg
lds
xor
les
inc
dec
push
fidivs
push
push
push
outsl
add
ret
jns
test
pop
leave
loope
fwait
jl
add
jae
adc
pusha
sub
pop
in
adc
cld
rcll
inc
mov
inc
mov
or
push
add
mov
jns
inc
push
and
ret
adc
je
cmp
cli
cmp
mov
sbb
mov
ja
mov
das
jne
insb
push
jmp
inc
mov
cmpb
nop
pop
push
popa
pop
lahf
mov
xchg
mov
sub
cmp
xchg
pusha
icebp
ret
pop
cmp
xor
and
insb
add
mov
lret
mov
xchg
test
daa
inc
lea
mov
push
loope
insb
jle
dec
xchg
xchg
jle
clc
lcall
arpl
or
pop
cmp
xchg
pop
daa
jecxz
jne
mov
cmpb
jb
sub
mov
mov
xor
cmp
cld
jp
sbb
adc
dec
addr16
pop
insb
daa
int3
or
rcll
push
dec
pop
inc
mov
pop
les
sbb
xor
push
pop
sbb
mov
sbb
add
cld
push
lret
xor
jae
xchg
repz
sbb
or
or
xorl
jmp
cmpsl
gs
mov
fdivrs
dec
mov
inc
rorl
mov
fdivrl
sub
push
jmp
xchg
xchg
push
das
sahf
mov
cmp
and
mov
mov
ret
fsts
xchg
jb
jo
lods
sbb
dec
sub
ret
adc
loop
and
nop
xor
lods
repnz
hlt
lret
lcall
jne
out
cmovnp
add
loopne
dec
sbb
xchg
inc
and
dec
mov
bound
repz
into
mov
stos
cmp
pop
or
in
leave
test
loop
pop
out
popf
pop
or
cmpb
add
mov
or
cmpsb
fisubrl
adc
inc
int3
or
int
jae
pop
sub
cmp
in
sahf
adc
aaa
insb
imul
jbe
xchg
pop
xchg
test
enter
insl
push
cmp
sbb
xchg
push
test
stos
push
xchg
adc
add
paddb
aaa
xorb
inc
cmp
and
add
leave
je
pusha
icebp
inc
stc
setae
icebp
push
push
adc
scas
xchg
pop
into
xchg
pushf
lahf
adc
lods
fldt
negb
in
xor
adc
jno
xchg
mov
xor
and
ljmp
cmc
mov
sbb
stos
cmp
xchg
sub
in
sti
les
hlt
xchg
js
push
aaa
xchg
inc
popf
cmp
xchg
lock
mov
lds
mov
fcmovne
pop
out
in
cli
in
mov
cmp
cmp
scas
lods
xor
fmull
mov
shrb
cli
test
hlt
pop
dec
dec
fsubl
sbb
mov
xor
xchg
mov
test
test
push
mov
push
mov
shl
fdivl
pop
sub
sub
dec
imul
cld
mov
dec
clc
popa
sub
xchg
ret
clc
movsl
push
aad
test
cmpsb
cld
mov
repnz
stc
jo
and
sbb
adc
das
addb
cwtl
jne
das
push
pushf
js
cmp
and
xrelease
cs
mov
pop
jecxz
cli
movsb
mov
inc
cmpsl
inc
dec
cmp
loop
outsb
cwtl
sbb
test
add
dec
popl
ljmp
cmp
cltd
mov
mov
mov
adc
ret
push
mov
add
cmp
es
iret
lahf
insl
jne
jp
scas
std
dec
xlat
mov
std
or
dec
andl
sub
xchg
xor
insl
cmp
cli
ret
sbbl
iret
adcl
popf
cmc
mov
ror
jne
or
roll
hlt
fsubp
arpl
push
sbb
xor
adc
fidivrs
jno
push
mov
out
add
mov
jp
jnp
adcl
xor
pop
aaa
and
insl
cmp
adc
or
aaa
fwait
jp
jnp
popa
test
dec
mov
mov
ret
dec
enter
mov
int3
fdivrl
push
mov
out
jbe
xchg
sub
pop
and
or
scas
sub
cmc
and
shrl
clc
add
xor
popf
out
call
enter
imul
jmp
pop
sub
push
out
stos
test
call
cwtl
lea
aam
push
mov
in
push
shlb
and
dec
push
test
push
sahf
jle
movsb
mov
repnz
xchg
popf
cltd
in
push
scas
pop
push
xor
ret
call
lods
or
aam
or
inc
fscale
push
or
shll
arpl
scas
stc
js
xchg
cmpsb
jne
dec
jp,pt
out
cld
xor
mov
loop
mov
push
adc
dec
add
push
pop
adc
lods
cmpsl
dec
fidivrs
mov
movsl
jmp
xchg
inc
push
xchg
imul
imul
inc
out
adc
enter
test
sub
push
mov
add
sub
mov
orl
pop
std
sbb
test
mull
pop
or
jg
roll
inc
nop
mov
in
jecxz
mov
mov
pop
mov
cmp
xchg
or
outsl
mov
out
push
cld
mov
lds
xchg
imul
rcr
xor
es
inc
push
pusha
mov
sub
ja
dec
nop
add
sub
daa
rcll
in
inc
pop
push
mov
ds
adc
push
mov
movsb
inc
mov
add
lea
cmp
mov
imul
jne
out
cli
sbb
imul
std
mov
hlt
adc
mov
lods
and
add
jle
or
loop
and
mov
nop
leave
sub
cmp
push
pop
addr16
ljmp
sbb
scas
sub
mov
outsb
push
fs
xchg
scas
enter
xchg
out
push
jae
fs
dec
jno
sub
frstor
out
in
xlat
adc
sub
jns
js
loopne
aaa
fwait
jecxz
sbb
xchg
jbe
ret
xor
mulb
cli
mov
movsb
push
test
jl
int3
add
fimuls
mov
mov
clc
mov
decl
sbb
adc
pop
inc
inc
loop
xchg
adc
movsb
push
lds
out
add
pushf
std
mov
mov
fimull
mov
notb
lds
sub
jmp
ss
cmp
enter
or
shll
mov
or
iret
mov
mov
sub
dec
mov
pop
pop
xchg
call
mov
std
mov
inc
cmp
jle
mov
dec
stos
push
scas
push
sbb
dec
adc
mov
leave
mov
sbb
insl
imul
xchg
and
mov
nop
sub
add
std
and
add
cmp
stos
jne
aad
inc
inc
add
add
movaps
dec
enter
push
int
dec
call
bound
in
sbb
ss
inc
inc
jne
mov
int3
jo
inc
add
mov
or
repnz
mov
or
rcrb
jle
and
data16
int
inc
repz
test
fistl
xchg
mov
icebp
mov
cltd
cli
aas
push
cmp
mov
std
xlat
or
or
cmp
mov
push
cmp
and
add
and
jae
mov
cld
xchg
adc
fwait
jno
cmp
es
mov
hlt
pop
aam
inc
add
cli
insl
cltd
inc
mov
mov
dec
cmpsb
fnstsw
sbb
xchg
push
std
ljmp
or
jne
jb
pop
push
adc
sub
popf
push
cwtl
in
jb
loop
mov
pop
mov
cs
mov
mov
inc
in
or
mov
xchg
out
inc
sub
cwtl
dec
lret
jmp
adc
test
xor
sbb
xchg
mov
mov
pop
aaa
lahf
mov
xor
push
inc
push
iret
fucom
add
outsl
ficoms
popl
mov
xor
into
xchg
mov
repnz
and
and
jmp
lret
push
dec
dec
xchg
mov
vmread
xchg
loope
dec
sub
pop
inc
dec
or
inc
pop
add
cmpsb
jb
dec
test
jae
jns
mov
out
addr16
jge
pop
jp
inc
adc
rcrl
xchg
mov
add
and
lds
pop
rcrl
and
jl
mov
mov
shrl
lods
jnp
aad
dec
mov
push
into
mov
loopne
pop
adc
clc
outsb
add
lahf
movsl
nop
cmpsb
add
and
cmp
cli
or
mov
mov
rorb
and
mov
rcrl
outsb
in
mov
rcll
inc
pop
push
jg
icebp
pop
rcll
push
scas
mov
mov
jae
mov
sbb
out
in
inc
imul
testb
dec
sbb
shrb
and
andb
mov
shll
lods
test
mov
mov
cmp
pop
lds
inc
das
add
arpl
mov
add
jl
mov
adc
mov
jge
ror
mov
or
add
into
in
cmp
inc
add
les
or
cmp
cmpsb
push
cmp
adcl
int
jb
mov
cmc
push
rorb
sti
jne
xchg
sub
sub
push
add
xor
sbb
xor
xchg
aam
fsubrl
mov
lock
cmp
pop
in
int3
xor
ljmp
test
and
mov
jmp
push
mov
loope
andb
insb
and
lret
adc
jns
inc
lahf
xor
cwtl
ljmp
test
and
enter
and
pop
xor
or
shll
mov
insb
int
add
fistps
clc
daa
add
shlb
into
cmp
mov
xchg
jb
test
adc
jb
daa
movsb
cli
push
addr16
test
sbb
test
mov
test
push
lret
jge
sub
sbb
lods
lret
mov
pop
xchg
icebp
xchg
or
jge
mov
pop
fsubrs
lds
mov
inc
stc
outsl
clc
mov
call
sbbb
xor
sub
push
cmpsl
in
jbe
notl
jns
mov
outsl
xchg
scas
jae
xchg
xor
push
adc
add
adc
or
add
adc
inc
mov
es
push
xchg
xor
mov
sti
inc
aam
cmp
sbb
movups
xorb
call
test
xchg
push
ds
inc
in
sbb
mov
mov
repnz
inc
cltd
pusha
mov
cltd
pop
add
inc
cmp
jge
ljmp
jne
xchg
pop
and
in
cld
ja
or
jo
inc
daa
addr16
clc
loop
leave
jp
out
push
cmpb
mov
movl
add
je
sub
repz
stos
jbe
adc
sub
out
pop
and
cld
xchg
pop
jnp
cld
fst
mov
dec
sub
or
and
int3
jne
dec
nop
xchg
push
mov
stc
jecxz
cwtl
divl
out
in
mov
jmp
xchg
fidivrs
movsb
outsl
imul
orl
adc
pop
jns
xchg
gs
inc
insb
push
jecxz
call
fs
pop
leave
aas
hlt
mov
std
sti
add
cmpsb
clc
xchg
std
shr
ljmp
insl
inc
lcall
xor
into
es
jae
cmp
cmp
pop
inc
mov
dec
fbstp
push
gs
ljmp
decl
mov
lcall
push
pop
and
ja
xor
xor
or
movsb
xor
cli
sub
ss
cmp
xchg
cmp
dec
fsubl
and
jmp
fldenv
xor
out
sbb
and
or
lret
pop
cmp
int3
mov
pmaxsw
ljmp
vmovdqu
push
cmp
and
cs
push
scas
in
inc
pop
std
mov
push
or
xlat
jl
fwait
lock
test
testb
push
shr
xlat
mov
mov
aam
ds
and
jnp
mov
cs
leave
stos
pop
dec
scas
add
mov
mov
dec
mov
push
ja
and
in
and
in
pop
mov
iret
xchg
fnstcw
int3
test
xchg
fldl
dec
shll
popa
mov
mov
sbb
or
xor
cmp
jmp
jge
mov
out
flds
insl
mov
mov
sbb
jbe
stc
aad
sbb
clc
daa
dec
rclb
out
pop
cli
sub
cltd
sub
dec
das
hlt
rcll
std
movsl
in
mov
scas
mov
iret
pop
mov
cmp
movsl
and
mov
sub
jecxz
sub
push
mov
cmp
idivl
xchg
popa
ss
mov
out
jns
dec
and
aad
pop
cmp
jnp
mov
and
dec
imul
jp
sub
sbb
dec
pop
and
rorb
fimuls
mov
mov
push
pop
into
mov
adc
add
shrl
and
push
gs
cmp
jb
aaa
mulb
sbb
add
inc
pop
cmpsl
pop
fstp
or
movsb
inc
sub
repnz
scas
das
pop
or
mov
punpckhwd
jp
loop
push
pop
lds
jnp
xchg
cwtl
or
jge
das
xor
addl
or
mov
dec
fists
pushf
dec
cli
repz
mov
mov
lcall
add
add
sarb
sub
adc
test
aad
mov
mov
lret
sbb
pop
xchg
adc
fs
hlt
pop
imul
mov
adc
es
cmpsb
mov
sbb
jne
sub
fwait
pop
xchg
and
popl
jb
jmp
and
fsubrl
add
push
push
test
mov
daa
dec
pop
dec
adc
or
or
notb
sub
jo
xlat
lods
sub
and
adc
mov
loop
jns
mov
in
push
and
movsl
fnstcw
or
jbe
push
mov
mov
gs
push
cmp
pop
call
rclb
cmc
xor
pop
and
pop
sbb
adc
and
mov
jb
or
dec
daa
pop
js
xchg
mov
out
push
bound
cwtl
imul
jno
push
and
jecxz
shrb
inc
mov
jecxz
sbb
mov
pusha
xor
aam
dec
or
pop
pop
ja
xor
stos
das
xor
or
sbb
pop
adc
jne
cmp
std
jge
cmpsl
xor
xor
xchg
lret
cmc
roll
jne
shll
add
out
insb
push
and
ret
pop
pop
pop
pop
dec
cld
xor
mov
lret
lea
ljmp
in
adcb
cmp
mov
daa
push
sbb
loope
pop
aaa
int3
mov
outsl
dec
test
inc
mov
mov
mov
lcall
ret
scas
jl
push
xor
repz
sub
and
mov
inc
pop
dec
mov
repnz
cmpsb
mov
xchg
cmpsb
cmp
lahf
insb
pop
push
fildll
mov
sti
jl
arpl
or
scas
das
mov
or
movsb
mov
ret
xchg
lret
std
cmc
fstpl
fwait
jecxz
loope
push
xor
and
sbb
lds
fmul
aaa
xor
mov
push
mov
out
fs
mov
xlat
imul
sbbl
xchg
clc
sub
push
mov
sub
add
mov
adc
lret
pop
les
jp
inc
mov
ret
out
xchg
pop
xlat
push
lcall
js
push
in
repz
ljmp
add
jle
inc
adcb
xchg
sub
jae
pop
cmp
je
pop
jmp
dec
fcompl
test
push
sub
call
es
clc
test
dec
inc
and
js
push
push
mov
jl
stos
push
xlat
cmp
inc
lds
iret
pop
jp
or
call
dec
ja
add
inc
push
jbe
movsb
cli
jb
addb
scas
jmp
sub
into
lea
ja
stos
inc
add
sub
dec
sti
testl
stos
insb
es
push
in
push
int3
or
add
repnz
test
scas
and
mov
pop
xchg
jb
or
stos
arpl
rdmsr
loopne
mov
mov
adcl
jge
xchg
xor
ret
inc
xor
cmp
test
sbbl
arpl
mov
xchg
ficompl
jbe
cli
adc
ret
mov
ucomiss
test
data16
push
mov
outsb
test
inc
inc
jecxz
add
xlat
push
out
xor
mov
shr
inc
lret
xlat
xchg
arpl
ja
jmp
push
decl
stos
bound
idivb
into
mov
fistpll
test
stos
and
mov
lock
arpl
in
xchg
cmpsb
sbb
cmp
push
or
mov
rorl
push
out
mov
arpl
dec
imul
call
cmp
mov
ds
iret
inc
ja
adc
mov
cmp
test
xor
push
rcll
sub
push
sbb
aaa
std
insl
daa
dec
mull
mov
and
xchg
cmp
daa
mov
enter
bound
sti
adcl
pop
push
lahf
xor
cld
nop
std
cld
mov
add
shlb
dec
int
jbe
and
je
pop
xchg
push
sub
and
xchg
push
pop
ljmp
stos
adc
pushw
jns
cmp
sar
fsubr
into
stos
scas
mov
fisttpll
push
and
in
adc
call
pop
dec
cli
out
sahf
lock
xlat
je
lock
push
jns
add
test
shl
sub
pop
int3
call
leave
xchg
stos
fs
xchg
cmpsb
cwtl
jne
inc
mov
cmp
mov
aam
outsl
push
aad
mov
leave
sbb
repz
xchg
addr16
imul
loop
xchg
popf
cld
adc
or
aaa
inc
xchg
test
sbb
das
repz
scas
xor
into
push
sahf
push
lahf
mov
out
test
xor
sbb
notl
sahf
fnstcw
sub
sub
or
movsl
into
cmp
ret
ja
mov
sbb
add
lret
cmp
les
into
nop
daa
mov
hlt
dec
test
in
pop
xor
xchg
icebp
sub
frstor
push
adc
lods
gs
push
lret
in
loopne
or
fwait
sti
and
xor
js
fmulp
jp
arpl
subl
jge
cld
sbb
scas
xchg
cli
fldt
frstor
jmp
xchg
mov
mov
lret
add
std
adc
sbb
jns
xchg
jnp
pop
incl
lret
std
mov
adc
xorl
mov
ljmp
pop
and
lods
push
fidivl
mov
jmp
mov
fwait
dec
inc
push
mov
fld
test
cmpb
out
mov
mov
jno
or
pop
mov
mov
inc
and
cmp
jmp
fs
in
pop
mov
adc
aaa
mov
and
jns
test
or
enter
fdivr
fsubr
inc
jg
std
lock
adc
mov
mov
subl
mov
loopne
xor
stos
jbe
xor
test
push
jne
push
shrl
mov
cli
sub
pop
cmp
adc
push
ss
daa
shrb
scas
push
cmp
sbb
es
into
fldl
mov
ja
and
loopne
cwtl
std
adc
push
fildl
cmp
push
sbb
or
popa
repnz
test
adc
sbb
movsl
sar
test
movsb
xor
mov
aaa
inc
jb
nop
cs
mulb
js
lea
xchg
sbb
or
popa
icebp
fsub
hlt
adc
push
fadds
jae
inc
or
shrb
or
imul
aaa
sbb
mov
loop
test
gs
loopne
fstps
pusha
sub
imul
xlat
mov
lcall
inc
and
mov
sub
adc
clc
fs
data16
leave
shlb
pop
mov
shl
inc
loopne
sub
push
inc
add
ljmp
pop
xor
ja
mov
push
cmpl
pop
adc
jnp
lahf
jbe
insl
repz
ljmp
sub
test
and
cmpsl
sub
scas
pop
negb
in
sub
out
inc
mov
cmp
lcall
arpl
insl
sbb
ja
sbb
adc
inc
pop
inc
add
adc
inc
add
lods
dec
shll
and
sub
sbbl
cmp
rorl
insl
leave
lods
jne
fimull
push
and
cli
or
add
sbb
pushf
jo
pop
cmp
push
inc
inc
mov
stos
negl
std
ret
xor
stos
xchg
xchg
in
cmp
cld
mov
xorl
cmp
inc
push
dec
out
fs
or
pop
add
xchg
mov
aaa
inc
addl
sbb
out
adc
inc
ficomps
stos
aad
mov
popf
xor
and
and
mov
mov
pushf
ficompl
or
cmp
cmpl
and
push
outsl
out
or
push
mov
fwait
add
movsb
push
mov
mov
jl
insl
es
outsl
lahf
jne
jg
pop
push
pop
subl
xor
std
push
shlb
ja
mov
pop
jbe
push
bound
dec
orb
fdivr
and
sbbb
inc
loop
push
cli
mov
loope
cmp
fwait
sbb
in
inc
ljmp
rorb
mov
cli
xlat
ss
repz
cld
bound
cmpb
outsl
loopne
xchg
xchg
fwait
mov
sahf
and
out
mov
cmp
xchg
inc
jo
movsb
xlat
xchg
out
lret
inc
mov
push
aas
insl
pusha
mov
inc
cmpsb
or
std
test
jecxz
loopne
ljmp
jecxz
mov
out
fs
iret
addr16
push
sarb
mov
push
and
cmp
inc
mov
andb
fisttpll
data16
pop
xchg
fldt
hlt
ja
ret
and
in
ja
mov
mov
movsl
fisttps
lds
sub
dec
xchg
clc
or
subb
scas
bound
push
push
test
stc
mov
cmp
std
mov
push
sub
cmp
cs
sar
xchg
cmp
add
les
stos
aam
lods
cmp
inc
dec
sbbl
movsb
xchg
xchg
xor
xchg
jg
or
xor
xor
mov
mov
mov
loop
pop
jle
inc
rcrl
shr
mov
inc
aaa
and
cltd
or
int3
shl
mov
ret
push
mov
xlat
push
rol
xor
push
mov
pop
lods
fimuls
mov
push
mov
xchg
xchg
dec
inc
push
jmp
adc
test
sbb
jno
mov
jns
push
sbb
rcrb
xorb
inc
imul
sub
mov
gs
inc
xlat
sbb
stos
orl
and
fildll
scas
sbb
nop
xchg
lret
cmp
lock
adc
mov
add
popa
sti
ja
sbb
lcall
int3
adc
cmp
and
xchg
pusha
push
cmpb
push
lcall
pop
adc
sbb
sbbb
gs
or
jge
icebp
dec
ret
jl
add
stc
orl
pop
or
scas
jo
insb
aas
sub
jbe
movsb
jl
fcomp
mov
xchg
adc
fcmovu
in
pop
push
popf
sbbb
push
nop
xchg
add
roll
rep
inc
adc
lods
stos
sub
dec
dec
rcr
clc
jo
cld
arpl
cmpsb
lods
div
jo
movsl
mov
sub
pop
mov
lods
adc
push
aam
or
rclb
pop
mov
pop
xchg
add
aaa
sub
sarl
pop
stos
cltd
push
mov
rcll
sub
mov
in
pop
into
jmp
mov
loopne
mov
dec
aas
xor
and
adc
jmp
lods
and
ret
mov
int3
into
add
xchg
movsb
enter
mov
sti
sbb
test
test
scas
outsb
clc
pushf
leave
test
jecxz
mov
push
lods
inc
ret
test
call
lcall
cmp
push
gs
jno
out
xor
popf
vpmacsdd
ljmp
pop
insb
cmp
scas
fwait
push
jg
sub
dec
movsb
insb
cmpl
sbb
repnz
xchg
sbb
push
into
aam
je
pusha
loopne
fdivrl
lods
and
mov
bound
jne
andb
xor
sahf
in
push
or
in
push
lea
sub
and
mov
shrl
fwait
nop
insb
jge
lods
shr
cmp
imul
inc
std
sahf
cmp
add
stc
aas
and
dec
xchg
repz
add
ljmp
mov
mov
dec
out
xor
insl
vfrczss
aam
or
mov
out
gs
lret
test
sub
mov
push
outsb
push
cmc
and
jo
loopne
mov
addb
icebp
mov
mov
andl
std
lcall
push
inc
mov
cmp
aam
inc
loop
push
lret
clc
cs
cltd
pop
sarl
cmpl
add
jmp
mov
and
xchg
scas
movsb
adc
popf
das
xchg
mov
push
in
mov
popa
push
mov
mov
pusha
mov
inc
stos
xchg
popa
vmaskmovdqu
fincstp
mov
stos
mov
data16
and
dec
adc
out
adc
xor
and
sbb
xor
lahf
push
dec
jl
mov
aaa
or
push
divb
xor
add
or
mov
and
inc
sbb
mov
pushf
push
inc
pushf
in
das
jp
sbb
mov
ret
jge
and
dec
inc
mov
and
sbb
inc
adc
out
inc
push
mov
or
jge
jo
pop
aas
push
nop
adc
adc
test
sbb
rorb
add
and
scas
cmc
ret
mov
leave
mov
lret
rorl
cmp
test
loope
hlt
or
inc
mov
mov
cmp
pop
inc
push
pop
aam
hlt
ret
jl
dec
popf
loopne
inc
lods
jbe
dec
jge
arpl
cmp
cmp
cmp
dec
std
fldcw
cltd
es
pop
gs
pop
xor
fwait
sbb
cmp
add
add
loop
lods
loop
je
jbe
ret
repz
bound
leave
popl
cmp
je
insb
cli
pop
inc
xchg
pushf
adc
rol
xchg
leave
add
jbe
shlb
add
dec
sub
sbbb
fmulp
cwtl
iret
fnstsw
scas
lahf
and
mov
add
xor
mov
pop
mov
cmc
mov
shlb
mov
rcl
out
lret
fmuls
aam
pushf
addr16
xor
jbe
cmp
adc
or
daa
imul
push
inc
push
mov
push
jo
dec
push
push
cwtl
xor
mov
xor
xor
inc
lahf
push
leave
daa
sbb
inc
pop
xchg
inc
test
mov
movsl
inc
sbb
mov
gs
js
xor
mov
cmpsl
and
pop
sub
movsb
pop
aas
jmp
dec
pop
ret
mov
fimuls
jecxz
test
cld
outsb
stos
or
adc
add
rorl
mov
cmp
in
rorl
movsl
das
jne
jbe
loopne
aad
xchg
jl
sbb
outsl
fdivrs
adc
mov
ret
jnp
not
xchg
pop
jne
addr16
out
mov
jge
dec
xor
inc
xor
pop
inc
repnz
mov
add
lods
cwtl
lret
mov
mov
test
fucom
and
fs
stos
jo
out
mov
js
pop
imul
sti
shr
pop
lds
inc
sub
xchg
out
adc
jb
mov
inc
cmpsb
jae
pop
push
pop
mov
rolb
fisttpl
mov
or
xor
enter
mov
add
dec
mov
pushf
notl
mov
gs
and
lock
sub
xchg
movsl
adc
loop
and
mov
shll
or
jnp
or
out
mov
xor
push
mov
mov
jae
js
add
rcll
sbb
mov
movsl
xor
add
imull
rorl
call
repz
testb
dec
mov
js
cmp
mov
arpl
cmp
lret
push
sti
lret
stos
addr16
pop
and
test
lret
inc
imul
dec
shl
add
insl
jno
or
add
cli
ljmp
xchg
cmpsb
test
adc
arpl
mov
jle
or
mov
cmc
js
push
cmpsb
fbstp
fwait
xor
xchg
stos
jbe
stc
lds
outsb
pop
and
enter
out
loopne
sub
lea
xlat
pop
fnsave
out
xlat
adc
cmp
lret
divl
sbb
data16
in
push
scas
pop
mov
insl
push
mov
sbb
stos
aad
cmp
dec
push
push
sti
mov
mov
cltd
jae
movsl
scas
pop
ret
ds
mov
mov
lcall
fnsave
sbb
rcl
mov
inc
adc
data16
pop
inc
xchg
ret
dec
dec
shlb
push
sbb
push
ljmp
jmp
leave
push
xchg
std
push
ja
jnp
xchg
fisttpl
shl
addr16
pop
iret
mov
movsb
pand
push
fwait
inc
push
mov
in
inc
aam
gs
cltd
pop
fcomi
scas
hlt
ds
out
xor
les
sub
mov
out
outsb
pop
aaa
or
sub
imul
gs
mov
mov
sub
imul
mov
jp
fistpl
mov
jg
mov
push
jns
and
dec
stos
test
jecxz
and
dec
loope
in
dec
shl
movsb
shll
jle
sbb
adc
repz
and
or
mov
imul
movsb
xchg
cmp
sbbb
loopne
adc
fimuls
iret
xor
mov
gs
jge
pop
popa
cli
jnp
push
cwtl
stc
cmp
mov
push
repz
adc
stos
int
test
mov
pushf
inc
fcomps
mov
xor
fisubl
bound
dec
push
xchg
mov
xchg
leave
pop
push
inc
inc
stos
leave
inc
idivb
jp
arpl
dec
test
cmp
push
sub
mov
fsub
in
jmp
xchg
fcomip
pop
int3
mov
xchg
or
nop
inc
enter
icebp
push
mov
gs
mov
xchg
sbb
jmp
rcr
in
data16
xchg
bound
movsl
int3
cmp
aad
jo
out
xorb
inc
std
pop
pop
xlat
mov
fwait
sahf
mov
dec
jnp
cmc
mov
dec
es
mov
add
addr16
cmp
adc
dec
push
mov
inc
in
lock
lds
aam
adc
mov
pop
mov
mov
rclb
inc
fs
adc
jg
call
dec
loop
cltd
jge
push
imul
push
dec
or
cmp
loopne
mov
xchg
aad
test
frstor
push
add
jno
push
mov
cmp
xor
dec
sbb
mov
xor
imul
inc
loopne
hlt
xchg
lret
xchg
hlt
mov
jae
repz
or
cmp
sti
enter
pop
shl
call
push
inc
sub
out
mov
ja
loop
je
mov
ret
xchg
fs
daa
and
loope
rclb
in
lds
lret
lcall
out
stc
sub
mov
ret
imul
stc
xor
add
ret
mov
or
push
sub
cmpsl
in
xchg
mov
push
push
testb
into
xchg
bswap
dec
ja
cmc
xchg
xor
aaa
int
lcall
inc
pusha
std
andb
rolb
xorl
and
out
aad
xchg
pop
pop
ret
imul
cmp
stos
sbb
xchg
pop
mov
ret
or
adc
ss
iret
and
dec
cmpsb
stos
sub
mov
imul
dec
lea
in
adc
dec
leave
enter
mov
cmpsl
testb
inc
pop
mov
faddl
jg
xor
lock
mov
sbb
xor
shr
xchg
xchg
adc
scas
xchg
adc
sub
jl
cltd
jg
mov
pop
xchg
adc
mov
nop
jno
inc
scas
outsb
xor
call
ss
add
and
xor
mov
test
mov
cld
test
fists
ja
nop
or
mov
hlt
mov
cld
scas
jge
push
push
cmp
lret
pop
dec
cwtl
ljmp
ja
mov
mov
fisttpl
fnstsw
jle
icebp
sbb
jl
test
mov
aaa
or
push
pop
mov
jge
loop
sbb
out
scas
jge
nop
rcll
xchg
mov
dec
test
out
ds
pusha
fs
inc
sub
cltd
cli
inc
add
sbb
mov
loope
aaa
ret
xchg
pop
or
dec
mov
xor
rorl
out
inc
fstl
dec
int3
pop
lcall
je
mov
xchg
inc
xor
imul
int
lods
imul
sbb
inc
xor
decb
and
xchg
dec
imul
and
outsb
push
mov
sbb
dec
xchg
out
push
test
and
jbe
sbb
aam
inc
mov
sub
pushw
cmpsb
adc
pop
add
mov
outsl
enter
fs
xor
inc
dec
subb
xchg
nop
and
or
mov
inc
push
push
in
mov
fbstp
popa
dec
jmp
je
das
jmp
mov
lret
movsb
fcoml
js
out
add
repz
mov
cmpsb
adcb
xor
inc
rolb
test
cld
sbb
mov
lock
inc
arpl
gs
scas
cltd
mov
movsb
push
jge
enter
lods
xchg
iret
fidivrs
js
or
jb
mov
jmp
pop
stos
mov
jg
pop
xchg
cmpsb
mov
lahf
jge
std
jl
loopne
into
lret
addr16
jne
aaa
mov
outsl
hlt
or
roll
jmp
jnp
cmp
jo
rorb
sti
jl
cmp
in
sub
cmp
imul
and
sbb
xchg
sbb
sub
orb
pop
aas
mov
jnp
mov
mov
scas
adc
mov
jne
mov
push
clc
add
and
mov
test
push
cmc
pop
movb
xchg
push
fcomps
mov
out
dec
lahf
jl
movsb
push
clc
xchg
movsl
jmp
adc
adc
dec
insl
xchg
jo
adc
pop
cmp
sub
popa
daa
pop
push
mov
stc
push
mov
mov
lock
and
jae
or
push
xor
fcomi
ds
cmpsl
loope
sub
testl
clc
mov
scas
int3
add
push
mov
test
mov
or
mov
xor
arpl
xchg
mov
js
adc
mov
arpl
and
test
clc
ret
shlb
mov
sbb
add
test
scas
sti
push
call
rolb
pop
imul
push
outsb
sub
insl
push
jns
inc
clc
mov
push
repz
adc
sti
mov
dec
into
mov
mov
push
and
jo
loope
xchg
addr16
cmc
imul
in
jp
cmp
jne
push
bound
imul
inc
test
outsl
mov
mov
sub
clc
xchg
pop
mov
xor
jnp
xor
adc
fidivrl
mov
rcll
es
aaa
jns
fildll
mov
mov
jp
xor
push
out
add
lods
lea
adc
dec
in
out
pop
pop
stos
xchg
sarl
insb
addb
sub
push
mov
mov
hlt
les
rclb
or
das
lahf
adc
rol
stos
or
pop
inc
shlb
jcxz
mov
mov
push
jno,pn
sbb
xchg
fcoms
dec
fcmovnu
cmp
lods
jmp
dec
jae
dec
mov
add
pusha
shrb
mov
mov
push
adc
in
or
out
sbb
push
push
sub
aaa
sub
andb
mov
dec
jae
jne
sahf
stos
movsb
jno
pop
leave
sub
mov
pop
outsl
cmpl
mov
xor
push
sahf
push
ds
or
jge
push
out
adc
cs
pop
xchg
pop
out
sarb
mov
out
mov
mov
fildl
test
rcr
jnp
sbbb
aam
daa
ss
cltd
cmpsb
dec
dec
das
jg
cmp
mov
loope
outsl
sbb
cmp
andb
mov
mov
and
insb
sub
test
pushf
ss
fmull
fisttpl
ljmp
sub
dec
push
pop
sub
repnz
cmpsl
mov
je
jbe
inc
insb
std
inc
cmp
test
adc
push
push
inc
mov
repnz
out
aad
mov
push
cmp
test
filds
xchg
mov
out
orl
movsb
xchg
xor
bound
mov
adc
out
mov
aas
dec
mov
ret
ror
add
push
adc
or
ja
stos
addr16
aad
add
nop
xchg
ja
pop
repnz
pop
dec
lea
in
nop
sub
ds
pop
add
sbb
xor
fsubs
sub
mov
bound
flds
push
rcl
insb
mov
scas
ja
xor
lods
mov
stos
test
mov
xor
mov
dec
cmp
and
cs
fists
neg
adc
pop
xchg
push
jns
test
loopne
jnp
fldcw
call
test
mov
fbstp
testl
mov
push
fimuls
jbe
sbb
mov
inc
dec
mov
mov
loope
xor
stos
adc
or
adc
xor
or
mov
mov
std
shrl
jnp
test
fcomps
test
bound
movsl
lahf
iret
pop
scas
cwtl
in
call
repz
popa
jbe
dec
call
inc
ds
xchg
repz
add
pop
mov
adc
sbb
sahf
jne
mov
xor
test
or
xor
test
fs
mov
mov
adcl
out
sbb
pop
ja
mov
int3
sub
mov
rolb
mov
or
mov
arpl
and
not
and
adc
int3
sbb
pop
mov
mov
inc
test
sti
inc
insb
fstpl
scas
mov
enter
add
pop
adc
rol
sbb
push
or
cmp
mov
lret
xor
aaa
mov
outsb
cmp
mov
cmp
adc
mov
push
in
xlat
orb
ss
sub
sub
sub
sbbb
stc
or
mov
fcoml
mov
or
cmp
mov
inc
push
push
pop
mov
stc
lret
jl
jg
xchg
mov
in
les
jge
lods
mov
daa
out
push
jo
mov
insb
stos
add
je
mov
insb
mov
es
inc
pop
call
push
test
pusha
imul
sbb
push
adc
repnz
ret
enter
pop
ds
xchg
or
mov
insl
sbb
cmc
sbb
xchg
lret
das
nop
or
push
xor
or
and
xor
push
imul
pop
js
push
mov
hlt
and
sahf
pusha
cmp
in
push
sub
inc
movsl
in
decl
mov
jbe
adc
jne
idivl
stos
and
sti
cmpsb
and
loope
sub
imul
stos
repz
push
jmp
push
xor
cmp
ja
aam
stos
data16
xchg
sub
addb
cmp
add
enter
outsl
andl
movsl
outsb
jmp
es
ljmp
xorl
test
mov
xor
sub
out
push
adcl
sti
rcl
out
cli
scas
idivb
adc
add
mov
int3
int3
int3
dec
inc
sub
xorl
in
movsb
lea
push
jbe
out
mov
pop
dec
outsl
push
pop
dec
dec
stos
sub
xchg
push
mov
insb
movsl
sbb
sahf
int
mov
or
sbb
cltd
mov
mov
idivb
outsb
cli
repz
cmp
jl
mov
insb
fidivrs
mov
ja
cmp
je
ss
outsb
mov
test
out
bound
int
clc
fcmovne
test
push
ret
fstps
cld
in
jns
push
adcb
aaa
addr16
loope
neg
hlt
and
lcall
xchg
xor
push
popa
loop
shlb
push
cld
cmp
stc
jp
repz
negb
jb
outsl
sbb
xchg
cmp
fldenv
push
dec
inc
test
outsb
fsubrp
fs
loope
jmp
maxps
and
jo
pop
mov
ret
xchg
xchg
jbe
ljmp
mov
push
mov
enter
insb
bound
dec
sub
push
repnz
fistpll
inc
fidivrs
ljmp
lods
fucom
jns
jge
mov
nop
and
sbb
int3
inc
ficoml
inc
repnz
pop
divb
pop
repz
hlt
and
xor
dec
sbb
das
sti
hlt
lds
rorl
jo
das
sbb
repz
push
stos
adc
add
mov
aam
or
leave
divl
out
sub
sub
jg
addr16
jb
mov
cmp
in
mov
jp
add
std
in
cwtl
mov
addb
jns
cmpsb
push
aas
adc
xor
or
fld
pop
mov
mov
imul
and
push
fsubrs
push
lods
pop
popf
sbb
and
icebp
aaa
mov
subb
mov
cmp
lds
hlt
dec
xchg
cld
cwtl
insb
and
sub
fs
sti
roll
mov
scas
movsb
call
lea
div
xchg
inc
sbbl
subl
test
add
and
insb
xor
cmpsb
jp
int
pushf
xchg
xorl
out
iret
iret
sbb
dec
mov
sbb
ja
clc
sub
dec
cmp
test
lret
mov
push
cli
insl
inc
sub
cmc
xorb
pop
jbe
sbb
loope
mov
andb
adc
push
pop
dec
pop
jecxz
js
mov
bound
ds
add
sahf
shrl
cli
mov
jno
pop
loop
add
add
or
mov
push
lea
out
mov
ljmp
jmp
inc
sub
cmp
jp
mov
mov
inc
lcall
popa
sbb
xor
cmp
imulb
stc
or
lret
push
xchg
jp
es
xor
lods
lock
lahf
pop
dec
mov
mov
jne
clc
sub
out
add
push
sti
mov
jp
jg
dec
in
lds
add
fistpl
mov
jbe
jne
sub
popf
js
imul
push
cmp
loope
jle
aam
pop
ja
leave
sbb
lock
sub
movsl
mov
pop
add
into
add
outsl
add
cmp
and
popl
sbb
ljmp
cmpsl
out
cmp
lea
inc
push
pop
and
ret
cmp
bound
or
push
dec
xor
mov
xor
xchg
xchg
lcall
mov
negl
jl
arpl
or
loopne
sub
fiadds
mov
fstp
clc
lods
fistpll
sub
cmpsb
mov
pop
frndint
mov
andb
rcrb
fldl
jbe
ret
dec
lret
add
jmp
sub
lods
jbe
sbb
pop
push
lods
mov
repnz
outsb
stos
push
pushf
or
mov
push
or
loopne
ja
mov
or
inc
sub
xchg
pusha
or
pop
inc
scas
dec
lods
in
jae
pop
xor
outsl
bound
mov
sub
into
or
mov
sbb
out
lods
jl
sub
push
aad
or
xchg
jecxz
push
push
out
subb
jae
rcr
or
sub
push
cli
fnsave
cmp
inc
loopne
sbb
sbb
sbb
rcr
push
fistpll
fbld
scas
add
je
je
xor
pop
inc
loope
into
dec
daa
jo
ret
cmc
aam
into
adc
and
imul
mov
mov
push
insb
cmpsl
lcall
lret
sti
outsl
xchg
loopne
mov
mov
in
and
fstl
scas
xor
jge
sbb
jne
mov
dec
push
adc
into
and
xchg
lret
hlt
pop
inc
test
push
inc
test
mov
cmpsb
cmp
adc
icebp
mov
out
mov
fsubl
iret
shrb
xchg
in
pushf
enter
cli
push
cmpsb
mov
xlat
clc
loopne
dec
mov
les
xor
push
fwait
rclb
je
es
jno
mov
and
test
jbe
inc
popa
add
cmp
stos
inc
adc
jbe
inc
popa
sub
push
lods
xchg
mov
loop
mov
or
sub
inc
addr16
dec
testb
sarl
outsl
pop
shll
popa
cmp
fisttps
scas
jns
cli
lea
loopne
adc
mov
nop
outsl
pop
add
jne
cmp
bound
arpl
lock
pop
test
stos
aam
push
mov
shlb
xchg
inc
push
mov
or
pop
jg
ret
jb
mov
xorb
iret
pushf
sbb
or
jmp
imul
shrl
aam
sahf
sti
push
sub
jecxz
push
aad
mov
popa
bswap
std
scas
movsl
jb
fcompl
fisttpll
pop
fldl
jl
movsl
mov
sbb
test
mov
mov
dec
dec
testb
outsl
mov
add
inc
fsubl
pop
loope
lret
add
mov
pop
pop
rcr
mov
ljmp
xor
std
jecxz
stos
cmpsb
daa
push
in
or
rolb
jnp
mov
mov
mov
sub
pop
sbb
faddl
arpl
mov
fsub
push
in
mov
cmp
out
out
cmp
pushf
rcl
cltd
push
pop
mov
sahf
push
jecxz
and
push
inc
jmp
loope
and
rclb
aaa
add
add
decb
add
int
push
rclb
loopne
xchg
mov
fs
mov
dec
cmp
push
mov
push
push
sub
pop
push
cli
arpl
loopne
sbb
and
repnz
push
outsb
add
mov
dec
divps
xchg
roll
movsb
add
andb
add
test
insl
adc
cwtl
in
cli
out
loop
movhps
popa
and
stos
ljmp
and
add
aaa
addl
jne
pop
movsb
dec
or
xlat
and
popf
jmp
jno
sahf
sarl
in
mov
sti
lcall
pusha
push
jmp
scas
push
fadds
dec
cmp
jnp
test
add
xchg
fimull
cmp
out
inc
ret
dec
loop
cld
jle
pop
xchg
inc
pop
mov
inc
js
leave
adc
test
pop
cmp
jecxz
sub
mov
push
pop
mov
in
push
inc
lahf
cltd
push
dec
hlt
shll
test
add
mov
add
dec
pop
sub
adc
xchg
fmull
mov
leave
push
sub
xlat
sub
lds
jle
add
sub
aam
sbb
push
ljmp
add
std
jge
out
adc
jle
adc
push
ds
in
popf
push
leave
insb
lea
fs
lret
scas
pusha
lahf
ret
cld
jcxz
loope
pop
jl
shll
aad
aaa
xor
ret
inc
pop
xchg
sub
call
dec
adc
insl
jg
xchg
xchg
push
jl
call
mov
fcoml
insl
mov
in
popf
repnz
add
andl
out
cmc
mov
std
cltd
aam
jb
xor
inc
inc
jg
ret
ss
insb
idiv
addr16
leave
inc
fldlg2
jbe
dec
jns
mov
lods
addr16
push
jge
std
push
stc
pusha
push
lds
shlb
push
outsl
push
ljmp
sbb
sbb
mov
ds
jbe
cwtl
lds
add
adc
xchg
push
adc
adc
test
push
mov
andb
adc
adc
fadds
or
adc
clc
cmp
imul
jge
jno
clc
int3
mov
sbb
pusha
sub
mov
adc
and
lock
sbbl
js
push
outsl
cmpl
mov
xchg
fidivrl
push
sahf
movlps
fstps
lret
popa
test
pop
push
pushf
pop
jp
icebp
dec
push
and
out
outsl
adc
jb
stos
scas
mov
lret
test
fistpl
cli
mov
pop
push
mov
lahf
push
jo
sub
divb
cmp
xor
mov
addr16
orb
dec
shrb
cmp
mov
aas
sti
in
les
mov
sub
movsb
add
setb
lcall
adc
jp
add
adc
sbb
add
out
pop
xchg
push
sub
pop
dec
sbb
fisttps
push
jmp
mov
jle
sub
fcompl
loop
sbb
mov
pop
xor
xor
rorb
or
mov
dec
lret
xchg
shlb
mov
cmc
add
xchg
jge
sbb
and
inc
cltd
inc
or
ret
adc
and
cli
sub
daa
stc
ret
jl
push
xlat
pusha
lcall
dec
jmp
mov
std
sbb
out
pushf
mov
incb
inc
mov
or
push
push
sarb
repz
and
jl
xor
shll
aaa
jl
and
xor
aad
add
push
lods
clc
xchg
sti
or
inc
push
and
pusha
call
lea
inc
test
jl
mov
lods
or
inc
daa
js
ja
inc
push
mov
es
inc
aad
in
outsb
fmuls
loope
test
push
aam
fadds
sub
movsb
mov
push
lock
leave
rcrl
imul
fdivs
out
add
jg
test
cltd
sub
sbb
in
ret
imul
xchg
mov
sub
stos
dec
adcb
mov
and
xchg
jge
xchg
lods
jnp
lret
jbe
std
add
mov
mov
es
dec
push
fs
cld
pop
cltd
dec
out
xor
je
out
in
bound
lods
mov
cmp
sub
cs
xor
xchg
pop
icebp
and
jo
loopne
test
sbb
lods
mov
push
imul
rcrb
fisubrl
loop
das
sbb
mov
lea
add
push
in
lahf
pop
je
emms
je
dec
mov
cmpsb
out
sbb
cld
sti
mov
mov
xor
fwait
xchg
aam
jne
sub
sub
jp
inc
sbb
filds
shll
mov
fbld
mov
lds
loopne
leave
es
mov
jp
jb
loop
sub
cwtl
sbb
xor
iret
and
push
add
jne
jp
mov
adc
fsubs
stc
adc
test
into
aas
add
xchg
std
mov
inc
stos
rcl
jge
lods
or
dec
out
sahf
mov
cli
in
js
aam
mov
or
push
inc
mov
pop
inc
enter
mov
cltd
xor
push
mov
test
out
and
mov
imul
sbb
loopne
lock
insb
adc
lock
inc
hlt
mov
cmc
xor
jo
sti
cmp
dec
xchg
xchg
cmpl
or
xor
xor
jae
in
in
cmp
mov
pop
pop
rorb
pushl
mov
add
add
jg
dec
push
into
pop
cmp
mov
mov
and
pop
jle
and
mov
mov
sub
and
fldt
std
inc
add
call
test
enter
jnp
xchg
push
fidivrl
es
pop
aad
ljmp
pop
pop
sti
mov
push
cmpsb
test
test
scas
subl
lea
adc
add
rclb
cmp
movb
push
dec
cmp
xor
test
jnp
ficoms
rclb
fisubrs
push
adc
shr
xchg
or
cwtl
rolb
and
adc
int
and
inc
dec
hlt
mov
out
xchg
movsb
mov
inc
lods
sub
rcrl
mov
lods
cmp
sti
jo
sub
pop
push
mov
adc
int
mov
pop
out
or
les
scas
and
mov
adc
iret
lea
roll
jecxz
mov
cmpsb
gs
in
jns
push
jl
incl
rolb
loopne
mov
mov
mov
pop
sbb
adc
jno
jae
adc
in
leave
or
add
adc
orl
aam
incl
jmp
mov
add
dec
sbb
repnz
jns
mov
test
xor
shlb
inc
icebp
negb
dec
push
aas
nop
or
jge
sahf
inc
adc
aad
mov
push
aaa
fisubrs
scas
xorl
jecxz
and
out
adc
pop
jge
xchg
ja
sub
pop
cltd
jae
ss
dec
es
popa
aad
sahf
arpl
jbe
addl
out
cmpsb
and
inc
out
fcomi
xchg
in
sub
outsl
test
push
shrb
xor
push
out
pop
aas
push
mov
loop
fidivrl
cs
mov
adc
adc
cmpb
dec
pushf
nop
mov
jae
sub
inc
dec
aaa
dec
mov
adc
out
xor
loope
push
jecxz
shll
lock
add
or
mov
lock
jb
add
test
xor
sub
mov
cmp
mov
popf
or
lea
aam
mov
ss
dec
fcomps
setge
les
sbb
aaa
pop
lea
lcall
pop
mov
lret
out
cmc
lock
mov
push
jge
cmpsb
jle
mov
pop
push
mov
int
in
std
xor
mov
xor
pushf
pop
call
sub
or
xchg
adc
nop
push
inc
push
jecxz
sbbl
push
and
dec
or
out
pop
cmpsb
xchg
shll
lea
notb
and
push
lcall
xor
jmp
fisttpl
cli
stos
xchg
in
enter
xlat
add
cmp
test
aad
jg
cmp
jle
xor
inc
jl
dec
mov
mov
stos
mov
push
jns
incb
xchg
adc
add
movsl
test
rcrb
jmp
aad
lret
pop
in
dec
cmp
test
leave
mov
jle
sahf
add
mov
xchg
dec
aas
shrb
fwait
mov
sub
cmp
cmp
lods
mov
subb
mulb
mov
xchg
fwait
cmp
movsb
js
jmp
xchg
aam
nop
dec
cltd
repz
ss
and
inc
lea
lds
sarl
dec
push
sub
add
pop
inc
adc
mov
ret
repnz
fwait
mov
jnp
cli
mov
jae
inc
push
sub
pop
outsb
or
lcall
mov
icebp
es
sub
fdivl
inc
sbb
gs
or
sti
addb
dec
mov
gs
adc
mov
sub
stos
ret
pop
fs
aad
pop
lret
jp
adc
fcompl
pop
pusha
lret
movsl
lea
shll
adc
js
fnstsw
stos
xchg
cmpsb
and
xor
mov
out
add
pop
xchg
mov
jge
xlat
jmp
popa
add
in
xchg
int
jbe
mulb
xchg
int
fpatan
mov
sub
sahf
lock
ja
gs
mov
cwtl
mov
sbb
cmp
les
and
in
dec
ljmp
leave
add
inc
pop
mov
clc
sahf
test
testl
jns
mov
ss
std
sbb
inc
das
pusha
sti
lods
mov
xor
cmp
push
push
mov
mov
insb
cmp
shl
lcall
fnsave
and
jmp
shrb
je
adc
rcrl
dec
lret
mov
fistl
push
and
xor
mov
data16
mov
lret
idivb
mov
imul
jo
xchg
call
xor
mov
inc
sti
fcomps
mov
out
pop
lret
pop
outsb
outsb
and
fcos
rcrb
xorb
mov
call
sbb
jno
fildll
mov
ljmp
fidivrs
loopne
pop
sbb
jl
fucom
ljmp
add
sbb
mov
push
out
adcl
lahf
mov
or
xor
aaa
or
xchg
in
call
fdivr
inc
or
pop
jne
add
test
dec
and
in
cmp
xor
icebp
in
fwait
loope
push
cld
scas
xlat
pop
adc
insb
inc
xchg
xor
add
add
fwait
std
int3
rcl
fwait
gs
mov
fneni(8087
test
sarb
add
bound
sbb
adc
and
aam
stc
hlt
and
aas
cmp
lcall
les
frstor
dec
lods
ret
repnz
mov
mov
ljmp
jmp
std
mov
testl
mov
mov
or
cs
test
sbb
cmc
sbb
das
xchg
nop
sbb
xchg
and
movsb
movsb
pop
push
shrb
movsb
mov
pop
jno
insb
xor
sbb
push
loop
mov
mov
cltd
mov
leave
push
mov
adc
mov
push
clc
inc
daa
sbb
leave
stos
mov
sbb
add
test
adc
rol
cld
out
pop
int
mov
pop
jge
jae
fnstenv
adc
and
pop
addb
jp
imul
sub
mov
push
stc
fldcw
mov
in
xchg
cmp
pop
cmp
aam
ffreep
pop
rclb
mov
inc
or
push
out
and
mov
test
popf
pop
rclb
ljmp
subl
out
pop
test
outsl
notb
adc
and
xchg
jecxz
in
add
jl
mov
pushf
pop
dec
das
add
dec
pop
ljmp
stos
jbe
sub
or
mov
inc
inc
sbbb
pop
add
movsl
mov
cmpsb
sbb
cmp
aaa
fstps
pop
jbe
loopnew
aad
cld
xor
pop
xchg
mov
pop
out
adc
std
aad
outsb
jo
nop
xor
inc
popa
push
rolb
mov
inc
fidivrs
mov
xor
nop
insb
jne
mov
cltd
js
mov
push
and
mov
jo
in
adc
push
nop
jmp
push
jns
xlat
les
fsubs
jns
outsb
jg
in
adc
mov
cmp
out
ljmp
cmpsl
ds
sub
fcoml
int
sbb
fimuls
xchg
inc
lea
mov
dec
pop
jne
dec
popa
cmc
icebp
push
or
cmp
xor
sub
je
push
arpl
sub
and
je
mov
push
mov
test
sbb
cwtl
pop
popf
hlt
mov
mulb
dec
adc
repz
hlt
mov
aaa
and
shrl
inc
or
adc
mov
mov
mov
mov
es
frstor
cmc
and
mov
movsl
mov
adc
jmp
jne
data16
lea
popf
mov
aas
sbb
and
outsl
imul
fwait
nop
pusha
pop
or
cmp
cmpsl
stos
inc
outsl
and
fstps
cmp
pop
lock
jge
mov
fwait
es
pop
or
gs
xor
inc
pop
sbb
jae
push
mov
and
out
adc
movsl
push
loop
fmul
jne
shll
adcl
not
stos
and
inc
test
mov
in
xor
mov
ja
outsl
dec
add
inc
dec
faddp
fwait
shrl
shr
test
aas
and
and
ja
shl
lock
jp
pop
jns
bound
in
aad
add
jecxz
pop
cmp
jl
sub
js
sbb
pop
test
sbb
leave
int3
pop
mov
jle
pop
jns
movsb
sbb
fiadds
sarb
sti
pop
add
and
pop
pop
push
rorb
or
mov
cltd
pop
push
inc
cmp
test
shrb
pop
out
aad
push
sub
xor
jecxz
movsb
insb
icebp
mov
lea
dec
imull
push
inc
jb
mov
mov
add
inc
sub
pop
inc
and
xchg
mov
fwait
cmc
popl
sbb
pop
mov
ljmp
adc
mov
lds
mov
inc
enter
push
rorb
pop
dec
mov
inc
aam
mov
and
xor
sbb
and
inc
jno
jmp
xor
push
and
xor
int
or
int
daa
out
add
xor
jp
ljmp
roll
mov
jb
or
test
insl
sbb
xor
jb
jae
sub
lods
in
rcr
stos
cmp
test
cmp
fs
loope
stos
sahf
or
and
add
add
sbb
sub
pop
dec
push
mov
call
jbe
in
nop
flds
loopne
test
ss
in
jne
sti
hlt
fidivl
cmp
jnp
sub
push
push
push
cmp
xchg
xor
divl
cmpl
sub
add
jl
cli
xor
xchg
xchg
lret
pop
call
lock
fstpt
dec
cmp
in
jg
inc
mov
pop
out
push
add
mov
fwait
jns
andps
mov
ret
scas
sbb
adc
pop
xor
hlt
mov
cmp
sbb
cld
aas
and
and
cmp
iret
in
jae
daa
xor
xor
sti
loope
daa
loop
inc
sub
add
xchg
xor
add
push
cmp
xchg
mov
mov
add
ret
test
or
iret
out
sahf
adc
push
repnz
nop
ss
mov
dec
push
fwait
pop
push
xchg
aad
jg
sub
inc
sub
add
arpl
and
add
out
lods
vfrczss
nop
movsl
push
in
cmc
sbbl
xor
ja
sub
xchg
mov
dec
call
mov
xchg
in
and
pop
cs
add
xchg
sbb
and
adc
pop
aad
scas
pop
fidivrs
xor
inc
jecxz
enter
and
add
pop
inc
mov
aaa
dec
popa
push
or
mov
or
andb
or
sub
repnz
les
inc
dec
fldenv
dec
xchg
out
in
mov
push
shll
jnp
jnp
adcb
mov
negw
stc
out
andb
dec
mov
sub
loop
mov
push
aam
cmp
push
jae
mov
addr16
xor
xor
rcll
push
mov
int3
push
pusha
subb
sahf
or
jg
dec
or
fxch
mov
cmp
int3
ds
mov
or
jge
mov
xorb
call
js
mov
out
push
adc
jnp
out
jecxz
jg
sahf
test
loope
jge
imul
fsts
add
rclb
mov
loop
aad
and
push
jp
das
pop
sbb
inc
enter
call
inc
fsubrl
test
daa
in
xchg
cmp
lcall
sub
dec
xchg
or
sbb
push
cmpsl
movsl
je
dec
aaa
mov
ljmp
sub
mov
loope
scas
xchg
adc
mov
push
inc
cmp
sub
xlat
xor
xlat
lret
iret
loope
adc
clc
scas
mov
and
inc
jl
cmp
sub
lcall
cmp
xor
pop
popa
jmp
adc
sbb
stc
xchg
sarl
cmpsl
addr16
mov
das
scas
cmc
popf
nop
push
pop
xchg
ds
mov
mov
movsl
enter
rcll
ja
or
sub
out
push
xor
test
fnstcw
inc
lods
mov
dec
dec
je
aaa
aas
mov
cld
fs
fdivl
setl
and
push
into
jno
xchg
std
scas
xchg
xor
loop
popa
or
sub
pop
xor
ret
daa
jae
testb
outsl
lods
adc
enter
jns
pop
push
int3
in
idiv
scas
faddl
inc
jmp
lcall
mov
ds
clc
inc
addr16
stc
call
lea
sub
cs
outsb
and
adc
das
sbb
lcall
imul
lea
jnp
add
push
cltd
or
insb
lea
pusha
push
and
hlt
jp
in
lds
loop
scas
cs
mov
js
xchg
sub
popa
mov
stos
push
mov
cmp
jl
jmp
dec
sti
cli
insl
mov
fisttpl
inc
mov
and
sbb
push
in
cmp
or
push
jns
adc
adc
in
xor
popf
xchg
push
pushf
lret
andb
xchg
mov
jbe
inc
into
pop
dec
lahf
lret
inc
rorl
sub
xor
push
jb
bound
ret
rorl
out
jb
pop
pop
xchg
inc
mov
lods
mov
aad
aaa
or
nop
inc
mov
sbb
and
loop
inc
push
jne
jmp
mov
lret
ret
and
pop
jg
add
dec
popa
mov
add
cmp
repnz
out
es
movsb
or
lcall
sbb
fadd
cmpsl
mov
insb
stc
int3
ds
ljmp
mov
inc
xorl
or
dec
xchg
mov
fisttpl
cmc
lcall
aad
cmpsl
cltd
mov
mov
rorl
push
arpl
icebp
mov
sub
add
adc
movsl
xchg
dec
sbb
push
mov
movsb
into
sbb
outsl
ds
stos
push
mov
cmp
mov
xor
fldl
adc
das
cmp
aaa
ret
mov
hlt
jnp
hlt
mov
xor
and
cld
ljmp
sbb
push
and
fstp
jg
lcall
lret
xor
jle
mov
jle
jb
mov
sbb
mov
sub
addr16
mov
mov
fistpl
mov
insl
mov
loopne
stos
ljmp
dec
sub
xchg
fmull
je
xor
mov
and
mov
pop
pop
push
jno
cmp
mov
sub
cmpl
daa
mov
adc
test
push
mov
push
mov
cwtl
lret
mov
or
inc
or
icebp
xor
pop
xchg
mov
or
sbb
fnstsw
cli
mov
xchg
pop
mov
jno
out
popf
mov
test
jecxz
pop
xorb
cltd
je
gs
jno
out
cld
adc
xchg
hlt
adc
cwtl
add
ss
sub
sbb
cmp
and
or
stos
push
lret
icebp
mov
or
mov
mov
mov
sbb
dec
xor
pop
pop
pushf
cld
imull
shll
or
scas
loop
adc
lcall
lds
cld
or
dec
call
in
mov
stc
pop
aam
dec
cmp
dec
or
and
movl
lods
cmp
out
enter
sti
jp
cs
sub
and
nop
pop
ja
push
jl
daa
stos
cmp
pop
jno
rep
out
pop
test
jmp
cmpsl
scas
cmpps
cwtl
push
dec
mov
pop
in
fsubrs
lods
popa
daa
cmp
or
and
int
mov
fwait
pop
pop
adc
jnp
push
xlat
shrl
inc
cwtl
and
roll
js
out
add
iret
stc
dec
add
sbbl
hlt
pop
mov
stc
sar
insb
aas
repnz
xchg
pop
mov
stc
iret
scas
dec
in
ds
adcl
nop
int3
and
enter
std
push
mov
je
es
or
filds
push
mov
mov
and
cmc
pop
aaa
shlb
push
scas
sbb
mov
fistpll
or
inc
adc
ret
bnd
dec
popa
fcmovnbe
dec
ret
dec
add
push
rcrb
or
mov
or
adc
jb
pop
jmp
stos
daa
rdmsr
sbb
jp
cmp
icebp
sbb
loope
arpl
mov
mov
push
int3
imull
xor
iret
jl
js
repnz
int
loop
cmp
pop
imul
xor
push
adc
ret
sahf
hlt
xchg
xor
push
enter
pop
out
cmp
lds
bound
aam
pop
scas
cltd
arpl
stc
cmp
inc
mov
mov
lahf
shl
sub
dec
out
pop
inc
mov
test
xchg
xor
jae
mov
pop
push
sbb
std
test
pop
fstpl
out
arpl
clc
mov
imul
outsl
push
cmc
imul
insl
pop
mov
orl
cmpsb
fistl
jo
out
mov
enter
and
fldenv
or
pushf
les
loopne
mov
sbbl
xchg
mov
rolb
inc
sub
push
mov
outsb
mov
and
mov
push
icebp
and
jge
fisubs
aaa
lods
mov
dec
fstpl
rolb
cmc
xor
insl
stos
les
ja
inc
insb
mov
jo
pop
and
mov
lods
pop
in
loopne
push
fdivrs
adc
pop
das
dec
shrl
nop
pop
shlb
int3
xchg
cmp
push
lods
movsl
and
lret
mov
lods
mov
cmp
pushf
sbb
sbb
mov
enter
or
xor
push
mov
sbb
sbb
popa
sarl
loop
rcrl
aad
out
int
vsubps
mov
mov
mov
popf
ret
inc
push
jns
push
lahf
mov
shlb
dec
xchg
jbe
xchg
aas
addr16
hlt
iret
out
jp
aam
sbb
cmc
fildl
mov
sub
pushf
pusha
js
ja
je
or
arpl
add
cmp
jle
push
aam
out
popf
lcall
pop
inc
icebp
fs
dec
mov
mov
adc
mov
cwtl
or
or
xor
ljmp
sub
inc
loopne
orl
mov
dec
push
mov
jecxz
imul
fsubr
xchg
pop
shl
arpl
ljmp
mov
lahf
inc
pop
fstpl
rclb
int
push
xchg
out
mov
out
cli
pop
das
inc
jecxz
aas
push
test
not
sbb
mov
dec
dec
into
in
loop
mov
sbb
dec
popa
notb
xchg
mov
sahf
mov
test
add
daa
sbb
loope
inc
and
fwait
scas
lcall
and
incb
mov
sahf
bound
stos
lahf
aaa
icebp
adc
lods
lcall
fnstcw
dec
outsl
push
ds
xor
iret
lret
jae
int
mov
push
jmp
iret
outsl
xor
push
add
fimuls
or
mov
push
mov
stos
gs
enter
inc
shll
xchg
cmp
fwait
mov
mov
fmuls
shrl
inc
add
sub
lds
inc
in
jbe
mov
mov
adc
insl
xchg
and
dec
lods
fsubr
xchg
in
mov
mov
and
loopne
pop
mov
push
es
test
repz
inc
cmp
int3
fwait
jae
dec
mov
out
rol
mov
mov
adc
das
fidivl
fwait
ss
xchg
jmp
out
add
push
daa
mov
fildl
insl
cs
scas
jne
dec
pop
aaa
divl
ss
pop
sbb
dec
push
cmc
fisubs
inc
movsb
fld
hlt
data16
sahf
imul
lahf
popf
arpl
mov
mov
cmpsl
xchg
in
inc
mov
pop
cmp
jbe
pusha
cmp
in
aaa
xor
xor
inc
mov
push
inc
sbb
sub
xchg
mov
sub
fbld
inc
rolb
adc
scas
fmuls
push
xchg
movsb
scas
ret
jmp
scas
mov
inc
inc
mov
int3
stc
aam
pop
jno
xchg
or
add
sti
add
test
cmp
jl
mov
test
std
hlt
xor
loop
push
or
sub
push
jl
and
xchg
dec
sbb
mov
sub
jnp
or
sub
mov
sbb
add
es
cmp
push
dec
push
xchg
imul
adc
adc
mov
js
adc
clc
sbb
fidivl
push
sbbb
cmpsl
pushf
adc
gs
jno
inc
outsb
popa
and
and
int
mov
fisubrs
and
jo
lds
imul
cmp
movsl
xor
dec
stc
pop
dec
sbb
inc
ret
sub
mov
loopne
outsl
push
push
js
jb
in
fbld
rcll
out
cmp
adc
pop
fs
push
nop
iret
fsubl
test
push
xor
int3
mov
mov
mov
cmp
and
enter
int
cmc
xchg
enter
mov
sbb
out
jp
aad
out
out
jb
into
xchg
jecxz
lea
iret
hlt
int
adc
mov
mov
cmp
dec
test
adc
jl
in
scas
fistpl
push
cmp
sbb
sbb
push
and
cs
add
mov
jo
or
xorb
or
jmp
mov
xor
xchg
mov
bound
jl
push
mov
pop
bswap
dec
cmp
xchg
jecxz
mov
in
xor
in
and
fisubs
fdivl
push
fs
sti
ret
sbb
jmp
aas
cmp
dec
je
ss
xchg
mov
ds
repnz
pop
xchg
cmp
rcrl
dec
mov
js,pn
cmc
scas
neg
sub
nop
xlat
insb
mov
cmpsb
outsb
or
ficoml
jo
ret
mov
lea
mov
inc
cmp
xchg
adc
mov
adcb
sub
xchg
sbb
or
out
jg
sbb
ds
pop
lcall
cmpsl
sub
sub
and
xchg
das
daa
inc
arpl
test
les
mov
hlt
pushf
jae
cmp
push
lock
mov
std
test
test
outsl
mov
xchg
icebp
in
enter
stc
das
xor
lods
stos
mov
bound
lds
enter
adc
scas
stos
les
imul
inc
xor
stos
jae
pop
sbb
add
pushf
push
jae
loope
inc
push
imull
stos
test
loop
xor
cli
out
cld
lds
dec
mov
mov
mov
push
test
daa
jns
test
xor
clc
loop
jg
mov
das
mov
mov
enter
lea
sub
dec
mov
lds
jp
mov
in
adc
sahf
cmpsl
aaa
xor
mov
or
mov
popa
nop
lret
push
inc
mov
mov
sbb
mov
push
cmpsl
push
testb
jne
cmpsl
dec
je
add
mov
stos
test
push
sbb
inc
xchg
sbb
aam
xor
push
fcoml
mov
icebp
add
sbb
inc
sub
int3
xor
dec
loop
jbe
out
inc
jecxz
pop
lds
mov
inc
cmp
clc
inc
add
mov
lret
je
pushf
jl
stos
cli
adc
jne
xor
sbb
aas
out
ret
lahf
in
mov
mov
lahf
mov
xlat
and
loop
sub
loopne
cmp
push
in
cmp
or
mov
xchg
add
mov
push
cmp
insb
xchg
imul
xchg
jp
sbb
jmp
xorl
mov
cs
sub
and
add
shrb
shll
icebp
lret
loope
jo
mov
dec
lret
inc
stos
sub
mov
mov
sbb
xor
or
push
pusha
cmp
or
add
mov
dec
cs
icebp
mov
imul
ljmp
add
cmp
pop
sti
sbb
movsb
mov
jae
cmp
sub
int3
or
mov
dec
xlat
sub
xchg
push
imul
scas
inc
xchg
sbb
push
add
push
dec
pop
cltd
insb
aam
mov
add
mov
inc
mov
add
les
mov
add
aaa
rol
xchg
sbb
pop
and
adc
sub
outsb
push
movsb
xor
mov
cmp
fstps
leave
cli
in
xor
out
rorl
outsl
movsb
mov
jae
dec
jns
rclb
push
in
insl
movsb
mov
jp
adc
mov
sbb
test
cmc
dec
nop
pop
in
cmp
pop
jae
push
subb
imul
addr16
push
mov
shr
mov
test
mov
inc
dec
sub
popa
out
ret
add
sbb
cltd
xchg
repz
mov
popf
mov
push
dec
mov
or
inc
cmp
mov
outsl
es
rcll
add
jge
sarl
fstps
xchg
ds
cs
pushf
add
xchg
jae
out
shlb
iret
repnz
dec
xor
dec
fwait
mov
mov
cmp
fdivs
in
repz
sub
or
pop
mov
sahf
insl
sbb
pop
adc
lods
cmp
or
cmpb
fwait
push
sub
lret
xor
jg
aaa
and
adc
movb
mov
inc
inc
pop
push
mov
mov
stos
xor
test
aam
test
ret
clc
sahf
adc
mov
adc
shll
loopne
jns
int3
shlb
shr
cmp
cmp
ret
mov
mov
adc
dec
add
cmp
cmp
mov
add
cmpsl
jge
ret
jbe
jo
xor
mov
jmp
pop
mov
adcl
inc
adc
iret
dec
add
xor
outsb
inc
jnp
rcrl
and
jecxz
sbb
cs
cwtl
in
aam
lret
lahf
or
fs
adc
hlt
lret
push
enter
lds
je
and
repz
push
mov
mov
dec
pop
jl
test
rcrl
data16
out
xor
hlt
out
mov
cmpsb
add
xor
adc
jp
out
pop
imulb
pop
movsb
shrb
xchg
in
notl
sub
addb
cmpl
loopne
fsubrl
pop
dec
mov
mov
and
cmp
mov
loope
pop
dec
pop
or
inc
fmul
sub
std
orb
jnp
clc
ljmp
and
call
add
movsb
add
ret
push
or
rorl
xor
lahf
jnp
mov
xchg
es
repz
fcmovu
push
push
cmp
xlat
pusha
cmp
iret
mov
leave
inc
adc
xlat
roll
cltd
imul
mov
ljmp
push
or
lcall
lahf
nop
repnz
enter
subb
mov
scas
mov
push
sbb
jo
jne
jg
add
test
mov
sti
lret
imul
pop
sbb
stc
adc
sbb
out
sbb
movsl
xor
add
mov
xor
adc
dec
hlt
jne
pop
sub
imul
lahf
and
ret
xor
sbb
cltd
inc
inc
sbb
inc
cmp
repnz
and
dec
scas
push
repnz
ret
push
loope
out
jmp
xor
fwait
jp
nop
or
cwtl
cld
xchg
inc
xchg
std
add
xor
mov
vcvtss2sd
cld
out
xchg
mov
mov
xchg
scas
call
mov
aaa
pusha
push
aaa
or
mov
lret
mov
in
mov
sbbb
push
aad
lock
roll
repz
pusha
mov
popa
xor
call
stos
dec
sub
scas
iret
sub
and
test
add
push
leave
shlb
pop
mov
movsl
cld
imul
hlt
inc
lock
xor
clc
outsb
ret
fmull
cld
xor
jo
int
ffree
mov
movsb
dec
sub
hlt
adc
and
stc
pop
mov
push
ja
js
xchg
clc
aaa
cli
xchg
adc
icebp
ds
and
xchg
mov
sub
jnp
or
shll
push
mov
push
mov
bound
inc
rcll
pushf
outsl
dec
add
push
test
insl
push
iret
mov
sti
add
sbb
insb
scas
and
aas
test
sub
gs
cltd
mov
mov
fstl
push
inc
movnti
cmp
pop
mov
pop
lahf
iret
rcr
cmp
xchg
push
in
ss
into
shll
loopne
into
jnp
imull
mov
ret
icebp
scas
xchg
dec
adc
xor
xor
or
outsb
pop
sub
pop
mov
ja
fs
loopne
dec
push
sub
ss
jo
xlat
push
pusha
xchg
adc
cmpsl
xchg
loope
mov
adc
xchg
xor
jl
cs
push
outsb
mov
aaa
jns
mov
sbb
fdivp
xor
jp
jp
js
sub
lcall
dec
adc
add
rcrb
push
int
pop
adc
movsb
pusha
loopne
aas
movsb
pop
xchg
movsl
mov
cmpsl
leave
pop
push
mov
add
inc
cli
lret
mov
mov
test
cmp
and
les
xchg
orb
dec
mov
pop
mov
adc
adcl
add
jmp
rcrb
xchg
negb
fstpt
pop
dec
aam
push
xor
mov
pop
mov
sub
add
movsb
test
sbb
dec
aam
cmc
into
add
or
addb
inc
shld
cmp
or
adc
or
mov
mov
dec
pusha
add
in
xor
iret
mov
xorl
sbb
pop
or
out
rep
rolb
outsb
iret
ja
neg
idiv
loope
adc
sar
aas
call
hlt
aas
setns
push
cs
adc
aam
aam
fcoml
pop
xchg
insl
mov
les
sti
sub
test
cmp
pop
push
mov
lds
cmp
out
out
sti
jb
clc
add
add
inc
mov
jmp
insl
pop
or
jecxz
sbb
push
lahf
and
out
push
push
pop
adc
xlat
mov
rcr
inc
inc
lea
jno
outsl
out
push
sub
lds
cli
cmpsl
jecxz
inc
cli
pusha
or
add
loope
xchg
outsl
sarb
dec
ds
or
mov
adc
test
inc
sbb
mov
jo
lods
imul
mov
and
dec
cmp
or
pop
daa
mov
pop
mov
shrl
jmp
mov
mov
xor
or
enter
ret
jb
clc
lock
cmpl
sbb
mov
imul
push
pushf
inc
pop
mov
stos
cmp
inc
lock
mov
push
jl
mov
mov
rorb
push
ds
sub
stc
mov
out
pop
cs
dec
loop
sub
idivb
int
sub
pop
ja
test
lock
dec
scas
push
mov
mov
call
mov
and
mov
push
jge
dec
outsb
cmp
xchg
mov
fisubs
popf
or
mov
mov
pushf
xor
int
imul
inc
xchg
stos
xlat
cmp
push
push
sti
cltd
add
add
xor
dec
sbb
mov
int3
jle
dec
jns
jns
sbb
lock
xor
xchg
cmpl
ret
push
fcompl
pop
jb
fsubl
outsl
aam
mov
mov
iret
mov
sub
sub
test
adc
mov
shll
fcompl
orl
and
imul
jnp
mov
push
jge
mov
inc
pop
jno
fdivrl
fnstsw
lret
pop
addr16
push
jnp
mov
pop
add
hlt
out
xchg
adc
mov
dec
int3
and
push
jp
pop
bound
cmp
and
scas
out
std
in
jnp
dec
test
stos
decl
mov
lea
jbe
lods
mov
add
pop
sub
gs
push
xlat
jg
jb
jbe
pop
xchg
mov
pusha
pop
dec
in
xlat
and
negl
push
and
sub
pop
dec
add
mov
fs
inc
push
sbb
jbe
nop
pop
pop
leave
pop
lcall
sub
jl
dec
sbb
pop
subl
bound
xchg
ret
cmp
sahf
mov
inc
xlat
ja
push
mov
std
jns
cmp
jg
sbb
int
fcoms
dec
arpl
lret
inc
sub
push
enter
in
pusha
mov
shrl
mov
cld
push
popa
in
fucomip
cmp
or
xchg
mov
into
scas
mov
movsb
pop
in
or
dec
aaa
sub
jecxz
scas
in
mov
les
adc
mov
cmp
cltd
int
out
jle
xchg
out
cld
jg
rcr
js
xchg
jmp
cmp
jp
mov
rcr
mov
mov
dec
mov
add
inc
in
or
cmp
iret
sub
bound
in
mov
xor
xor
pop
push
xor
add
rcl
pop
lea
xchg
jmp
pop
loopne
cltd
push
scas
inc
cltd
repz
inc
bound
sbb
push
inc
jle
sahf
pop
xchg
fldenv
mov
loope
mov
cmp
add
fisubrl
and
mov
mov
pause
sub
bound
popa
mov
or
addr16
mov
pop
add
jne
pop
xor
xor
push
fsubrp
div
mov
mov
aas
jmp
fsubs
or
movl
shll
xor
mov
bound
pop
lahf
outsb
scas
test
shl
dec
hlt
imul
add
inc
pop
jg
cmc
sbb
outsl
fstpl
les
repz
ret
pusha
add
jbe
adc
out
out
popf
adc
fwait
pop
pop
orb
fdivp
cmpsb
sbb
dec
jbe
sarb
lret
lods
sti
cmp
pop
add
adc
leave
icebp
and
xchg
idivl
mov
xchg
add
aad
jno
test
rclb
and
int
cli
stos
into
push
je
je
push
xchg
shr
gs
cmp
leave
mov
xchg
jno
mov
and
iret
ss
testl
iret
mov
inc
cmp
mov
in
inc
pop
stos
mov
test
sahf
lahf
mov
inc
dec
and
enter
pop
jno
dec
loop
cmc
iret
lods
out
push
adc
shrl
xlat
fld
ds
cs
cmp
lock
rcrl
fldl
in
mov
test
fidivrs
and
daa
pop
ss
test
popa
sbb
jae
lods
aam
cmpsb
push
iret
pop
andl
or
lods
dec
enter
pop
arpl
hlt
adcl
insb
orl
fmulp
aam
add
inc
adc
shrb
xchg
ss
fs
add
dec
scas
mov
mov
xor
mov
out
daa
in
pushf
xor
cwtl
cltd
addr16
adc
sub
gs
lds
lcall
jnp
mov
lea
xlat
in
mov
int
sub
sbb
leave
dec
xorl
xor
out
mov
sbb
repz
and
xchg
cld
xor
testb
ljmp
push
out
mov
sbb
adc
data16
mov
push
xor
cmp
dec
sub
shlb
test
cmpsl
inc
mov
imul
add
push
lock
adc
fdivr
out
inc
or
fidivrl
pop
inc
loopne
pop
rorb
push
imul
arpl
js
lock
mov
adc
or
rep
shll
sbb
mov
pop
and
or
mov
jno
repz
cmpsl
cmp
test
or
lods
mov
movsb
imul
jb
push
pop
and
aaa
push
push
adc
inc
sbb
or
jb
xor
pop
mov
aam
sbb
stc
flds
iret
mov
adc
lret
xor
test
xor
roll
xlat
cmp
fidivrs
aas
mov
ret
and
adc
shrl
shrl
dec
sti
fwait
pushl
push
je
lret
nop
in
fs
dec
sahf
adc
xchg
imul
fisubl
push
ret
daa
ret
ret
aad
lret
or
test
mov
jae
test
lds
push
movsb
xchg
js
rcrb
jp
bound
xchg
outsb
lcall
adc
fsin
cmp
arpl
jno
cmc
loope
cmp
out
test
fistpl
sbb
cmc
xchg
push
cmp
inc
xchg
cmp
std
loop
imul
jl
push
das
cmc
inc
and
cli
and
push
cmovo
outsb
sarl
shr
nop
test
jmp
sbb
adc
scas
fldenv
mov
test
cmpsb
loop
icebp
movsl
fldt
sub
int
ss
outsb
or
in
shlb
adc
sub
and
mov
leave
sahf
aas
jge
ret
repz
xchg
pop
je
sub
daa
out
mov
out
movd
pandn
mov
bound
jnp
xor
out
fistpl
pop
adc
movsl
add
mov
into
imul
adc
cmp
mov
cs
dec
scas
xchg
ficomps
push
mov
push
add
adc
dec
xchg
movsl
pushf
scas
mov
js
dec
add
lock
cmc
pop
adc
mov
cld
arpl
jecxz
fimuls
iret
xor
in
lods
mov
aaa
mov
push
test
push
mov
sbb
inc
cmp
daa
cs
dec
push
lahf
addr16
dec
mov
mov
xor
pop
add
xor
in
xchg
out
pop
cmp
fwait
outsl
repz
pushf
pop
lcall
pop
ja
jmp
sbb
mov
sub
shrb
fadds
mov
jle
jmp
lret
mov
data16
mov
pop
or
mov
cmp
es
xor
adc
cmpsl
adc
pop
rcl
ret
sub
jne
xor
push
jo
push
xor
cmp
sub
xchg
sub
mov
ret
and
mov
loope
bnd
rolb
cs
mov
mov
cmp
jecxz
test
and
mov
out
push
xor
inc
jns
in
mov
imul
cmc
add
sbb
pusha
push
mov
xchg
ret
fwait
mov
cmp
mov
cltd
out
jb
arpl
xchg
adc
mov
jbe
jmp
adc
or
sbb
inc
lea
jp
aas
rcrb
mov
lds
cli
shl
loope
mov
jg
insl
jae
mov
icebp
loop
testb
pop
les
stos
testb
les
mov
pop
dec
mov
push
hlt
cmp
jo
dec
sbb
adc
push
pusha
sbb
inc
movsb
movsl
inc
and
push
and
pushf
stos
jl
test
arpl
popa
mov
cmpsb
push
loope
je
ficoml
mov
mov
push
outsl
or
leave
ds
push
dec
jb
aad
push
xor
and
mov
test
mov
loope
divl
adc
lea
pop
enter
sarl
ret
pop
lahf
dec
imul
pop
push
cli
push
in
outsl
lret
lds
jmp
ds
rcll
or
call
jne
mov
xor
dec
out
mov
inc
mov
popf
enter
xchg
addl
loopne
jns
subl
popa
sub
hlt
scas
dec
sub
sahf
testl
arpl
cvtpi2ps
jg,pn
jmp
out
ja
push
out
fistps
cli
ret
push
xchg
scas
pop
mov
sbb
mov
scas
ds
add
xor
sahf
mov
nop
loop
sub
sub
jge
cld
imul
arpl
nop
sahf
loopne
jg
lods
lea
sub
daa
js
pop
mov
incb
push
push
sub
imul
push
xor
andb
sub
jecxz
cs
lea
xor
test
mov
adc
cmp
sbb
mov
push
pusha
roll
jmp
test
lea
fistps
adc
stos
push
mov
jbe
cmp
mov
ja
stos
push
je
mov
push
cmp
je
pop
add
popa
lret
insb
popa
test
fcoml
cli
loopne
stos
push
out
data16
out
das
jbe
xchg
cmp
sub
adc
push
cmp
idivl
dec
jg
mov
in
imul
enter
out
in
imul
sub
mov
fisttpl
pop
arpl
pop
outsb
nop
xlat
into
inc
mov
int3
adc
leave
sub
push
sbbb
xor
sti
xchg
jns
sar
negl
loop
addr16
cld
jae
pop
sbb
pop
mov
movsb
jbe
fs
adc
mov
xlat
mov
ficompl
sub
jne
sbb
sub
fldcw
scas
cli
stc
push
push
out
fdivp
xchg
add
scas
popa
clc
ret
cmp
xor
out
fs
sbb
adc
mov
loop
test
xor
mov
into
inc
inc
sbb
lret
add
mov
cmp
xchg
jp
sbb
movsb
pushf
adc
call
jnp
jno
icebp
ror
aaa
mov
sub
rorl
xor
aad
mov
shrl
mov
mov
into
mov
mov
mov
icebp
in
dec
lahf
cmp
jp
sub
sub
xchg
mov
mov
cmp
cmp
pusha
rcrb
jecxz
xchg
ret
dec
cmp
scas
shl
rcrl
lea
adc
jne
mov
jg,pt
dec
int3
jl
mov
cwtl
decb
arpl
js
into
dec
add
outsb
push
inc
adc
pushf
mov
das
cmp
jg
sbb
jb
bound
sbb
add
mov
and
arpl
mov
fisttpll
or
mov
or
ficomps
lods
ds
mov
adc
jnp
test
sub
fwait
lock
xchg
loop
cmpb
or
es
decl
sub
xor
sub
incb
jg
mov
lea
nop
jne
insl
dec
add
icebp
pop
sbb
ret
jmp
pusha
iret
dec
loop
out
out
daa
sbb
insl
pusha
pushf
fsubl
cmp
push
cmpsb
movl
mov
call
and
cmpsl
dec
rcrb
clc
imul
rcrl
mov
addl
lods
scas
test
and
push
out
or
lods
dec
and
cmpsb
cmp
add
add
pop
cmp
xor
scas
pop
in
rcrb
inc
sub
cmc
mov
jns
stos
incb
test
dec
rolb
or
push
cmp
and
js
sub
lods
inc
movsb
inc
inc
jl
mov
inc
fldcw
jle
xchg
mov
es
sti
es
pusha
push
mov
lea
outsb
cs
popf
mov
imul
cltd
jns
xchg
sbb
pop
mov
sarb
cmp
dec
bound
xor
ljmp
pop
into
pop
adc
stos
repnz
jae
pop
stos
dec
and
jb
fmuls
mov
add
xchg
add
cmc
xchg
cs
xor
push
in
pop
adc
test
sbb
pushf
jne
pop
jle
outsb
jmp
ret
fs
lret
loope
imul
fstl
add
or
aad
das
mov
add
shll
cmp
jb
xor
pop
out
cld
cmpsb
int
add
jle
cmp
outsb
sbb
sub
or
inc
cltd
sbb
push
iret
mov
jbe
rcrl
aas
sub
lcall
shlb
sub
and
mov
mov
add
cmp
jg
xchg
xchg
aam
imul
scas
js
lret
outsb
jl
and
mov
add
inc
fisttpll
es
das
insb
insb
stc
lods
addr16
shlb
int3
mov
outsb
inc
nop
shl
mov
or
xor
sbb
loop
in
leave
sbb
cltd
outsb
and
stos
adc
stc
movsl
lock
xchg
cmp
nop
and
aam
xorl
xor
in
pop
sbb
bound
xchg
out
dec
mov
fbstp
rol
pop
pop
roll
mov
mov
outsl
sbb
rcrb
pop
dec
mov
jl
scas
adc
lret
inc
repz
push
lea
add
and
mov
js
mov
mov
push
enter
loopne
in
inc
scas
mov
orl
insb
inc
mov
in
pusha
dec
jno
fwait
iret
push
mov
dec
mov
jge
dec
out
int3
int
out
fdivl
adc
mov
inc
sub
cmp
cmp
xchg
ret
inc
xor
cmpsl
scas
push
inc
mov
repz
out
cmp
cltd
pop
dec
and
and
sbb
sub
adc
addr16
adc
sarb
add
add
xchg
mov
jnp
ds
jnp
cs
fsubrl
cld
fwait
mov
fsubr
loop
jo
inc
and
mov
cltd
or
mov
push
daa
xlat
test
cs
enter
mov
jns
movsl
cmp
out
cmpsl
sbb
scas
pop
sar
and
push
outsl
cmp
jo
rol
stos
pop
adc
outsl
sarl
cmpb
lock
negb
inc
aam
xchg
test
jl
xor
push
push
mov
mov
leave
dec
ss
mov
pop
js
mov
xchg
lahf
xchg
rcrb
jl
and
cmp
add
adc
dec
add
push
push
js
in
in
push
arpl
xor
sub
in
or
and
sbb
clc
mov
inc
and
cltd
clc
ljmp
test
cli
xchg
sbb
inc
lret
aas
adc
lds
and
int
jmp
addl
push
mov
and
imul
jnp
push
inc
js
dec
pop
pop
sbb
das
ret
negl
sub
or
into
cmc
sub
push
add
sti
pop
test
lods
mov
test
add
pop
adc
cmpsl
pop
or
je
stc
add
inc
dec
mov
push
pop
out
xor
mov
adc
mov
das
shlb
ret
scas
inc
jg
cmp
in
jmp
insl
and
jle
jnp
repz
pop
movsl
cmp
or
xchg
cltd
xchg
rcl
fdivl
mov
push
xchg
imul
sub
fcmovnbe
or
mov
sbb
pop
xor
or
jmp
xor
inc
cmp
cmp
adc
in
dec
xchg
das
stc
out
movsb
jno
and
ret
gs
xchg
sub
push
scas
jnp
loope
and
in
and
xor
xchg
cmp
ljmp
lcall
sbb
rcrl
jne
mov
mov
cmp
addr16
les
adc
or
adc
insb
stos
subb
les
in
rcll
sarl
out
dec
jmp
mov
adc
repz
mov
lods
mov
sub
es
sbb
push
icebp
cmp
out
xlat
iret
notl
out
not
lcall
lock
add
pushf
dec
mov
pop
repz
cwtl
dec
inc
jb
ficomps
iret
mov
std
scas
fisubl
scas
dec
ret
setp
xchg
sbb
lcall
into
jnp
push
pop
aaa
popf
pop
xchg
imul
mov
pop
out
pop
or
xchg
inc
xchg
bnd
nop
adc
in
adc
sub
clc
popa
and
sub
inc
cmp
mov
inc
inc
lret
and
popf
adc
dec
mov
mov
loope
sbb
shll
lcall
add
inc
inc
xchg
and
test
js
pop
mov
subl
and
xchg
xor
and
mov
aas
enter
adc
sbb
cmc
pop
mov
adc
pop
add
sahf
or
jecxz
pushf
mov
int
data16
pop
call
fmull
mov
ret
jl
mov
fwait
movsl
sbb
mov
dec
into
movsb
and
cwtl
add
mov
or
sub
pop
aad
inc
mov
mov
sbb
repz
test
bound
jg
mov
mov
fbstp
or
dec
mov
mov
aam
inc
out
std
mov
call
sub
loop
test
add
cmp
push
int3
mov
mov
repz
fwait
sub
loope
shl
scas
and
shl
in
xor
lcall
jmp
pop
int
adc
mov
imul
and
push
hlt
or
cwtl
outsb
pop
inc
mov
sub
bound
dec
sbb
mov
mov
mov
in
insl
int
test
arpl
mov
mov
data16
stc
lea
cmp
mov
xor
dec
adc
jge
jl
xchg
loope
adc
testl
outsb
bound
jecxz
data16
push
lcall
or
scas
xchg
sahf
test
push
pop
xchg
roll
sbb
push
adc
adc
imul
cmpsb
adc
in
add
push
aaa
imul
repnz
leave
loope
push
jp
test
shrl
xchg
xor
arpl
cmp
and
pop
xlat
lcall
cmpsl
cmpsb
sub
sub
push
and
cmc
mov
shl
xchg
or
insl
xor
push
popa
sub
popa
lcall
push
mov
cmp
or
in
or
in
xchg
push
inc
pop
mov
and
enter
repz
and
cmpsb
pop
mov
repnz
sbb
lods
rcll
ss
mov
jae
fnstsw
push
fbstp
jp
sbb
cli
outsb
mov
xor
sub
inc
pop
mov
mov
push
fisubrl
cmc
lea
mov
dec
xchg
mov
rcrb
xchg
pop
push
add
dec
xchg
mov
es
pop
imul
les
mov
xchg
aam
xchg
arpl
sbb
icebp
mov
mov
and
je
inc
icebp
mov
jl
jne
into
hlt
sub
mov
test
mov
clc
clc
and
jb
cmp
cmp
mov
xchg
xchg
pop
cmp
mov
scas
inc
jno
push
popf
push
pop
mov
cmp
pop
sarl
je
testl
scas
mov
mov
ret
push
inc
dec
or
sub
in
sar
psubusw
in
shll
inc
nop
popf
push
test
call
das
mov
or
push
sub
xchg
sbb
pusha
mov
sub
or
lahf
clc
add
repz
leave
imul
mov
push
mov
push
fdivrl
aam
pop
jae
insb
orb
std
outsl
ss
mov
adc
mov
inc
and
sarb
loope
xor
mov
add
int3
pop
mov
mov
testl
sbb
or
das
dec
pop
ljmp
lret
mov
popa
fistps
fwait
push
pop
mov
xchg
fldt
out
push
add
in
xchg
xchg
mov
jno
push
scas
stc
or
cmpl
push
inc
iret
cmpsb
imul
gs
into
jmp
sbb
pop
cltd
out
nop
push
xchg
fmull
cltd
lret
aam
mov
mov
lods
inc
sbb
movhps
xorl
aas
mov
outsl
int
sbb
aad
dec
in
mov
or
shlb
test
cwtl
adc
ret
xchg
xchg
mov
test
xor
pusha
inc
push
xchg
sahf
adc
add
outsl
cmpsl
jo
imul
loope
add
xlat
out
xchg
pop
negb
loopne
outsl
loopne
out
aad
push
mov
inc
popa
dec
outsb
clc
sub
jmp
js
pop
sbb
pop
dec
jnp
add
cmpsb
xor
jmp
fwait
insb
dec
mov
jo
or
pop
mov
pop
sbb
inc
jbe
xor
aam
sbb
ss
dec
inc
jbe
xor
aam
sbb
sub
mov
add
cwtl
lea
les
and
sbb
inc
fwait
xchg
scas
fiadds
decl
insb
shlb
pop
pop
inc
movsl
addr16
test
into
aas
stos
or
mov
mov
lds
out
cmpsl
lods
dec
popa
imul
sub
xor
adc
add
dec
movb
int
loopne
inc
xor
xor
cmp
lcall
inc
pop
int3
sar
jge
dec
ja
addr16
xchg
inc
hlt
fcoms
push
xchg
jmp
fnsave
pop
shll
loop
xchg
sub
push
lret
mov
pushf
int3
jge
cmp
jp
ljmp
dec
lods
jae
adc
das
cs
xchg
push
push
pop
push
cmp
test
xchg
syscall
xchg
rcrb
jecxz
adc
mov
xchg
enter
decl
lods
ss
divl
dec
pop
sbb
lods
xchg
jp
stos
adc
push
xchg
cmc
sbb
fildl
call
cwtl
cs
mov
mov
jb
stos
jne
out
fwait
sub
scas
mov
mov
ficompl
and
xchg
int3
into
pop
fcoms
cmp
push
mov
ja
lock
bound
fs
and
xchg
scas
je
sub
data16
or
je
pop
iret
lods
push
arpl
mov
pop
add
pop
pop
roll
and
negl
cmp
pop
push
mov
mov
add
cmpsb
rcll
or
testb
dec
and
lahf
mov
es
gs
in
cmp
jecxz
js
imul
xchg
pop
loop
and
fnsave
mov
pop
mov
popa
iret
push
lcall
inc
int
pop
push
lcall
mov
outsl
push
jecxz
mov
jle
adc
cltd
scas
rclb
insl
and
cs
testl
sarb
xchg
out
rclb
adc
sbb
ret
pop
cs
pushf
add
out
call
cmpsb
insb
mov
mov
inc
push
push
mov
scas
dec
leave
cltd
push
mov
data16
lods
subb
sbb
push
mov
ja
insl
ucomiss
fstps
adc
sub
jle
ret
frstor
jns
ret
sub
jl
inc
add
add
push
mov
and
mov
nop
xor
and
bound
and
repnz
cmp
adc
mov
gs
insl
xor
pop
mov
xchg
sub
in
mov
pushf
out
dec
push
jns
xadd
jp
cld
cwtl
je
sbb
push
rorl
mov
sbb
pop
cld
movsb
lds
jmp
mov
inc
in
inc
pop
les
sbb
xchg
push
jge
mov
scas
es
xchg
fildll
jge
mov
mov
pop
cmc
push
test
xor
pop
mov
mov
mov
add
mov
xchg
out
loope
or
fisttps
insl
rclb
pop
pop
mov
dec
pushf
push
push
ficompl
aaa
jae
fnstsw
fnstsw
sub
nop
ret
negl
jecxz
jno
lds
fisttps
ljmp
jecxz
push
fisttpl
jg
dec
pop
adc
out
andl
loope
hlt
jae
movsb
jp
jecxz
push
adc
mov
jl
fsubrs
rcrl
dec
pop
imul
aas
mov
pop
fwait
js
push
mov
popf
imul
imul
rclb
out
adc
outsl
in
sbb
aaa
push
fwait
hlt
jge
mov
add
lods
push
jne
add
jmp
ja
pop
gs
add
inc
outsb
add
lods
imul
sub
pushf
add
leave
imul
adc
push
mov
adc
stos
mov
jp
aad
jb
jb
add
sbb
xchg
inc
xor
roll
int3
adc
int
and
mov
loopne
push
iret
and
dec
cwtl
jmp
cs
cli
xor
jbe
inc
ja
arpl
jecxz
shrl
pushf
in
xor
test
loopne
cmp
popf
xchg
or
push
mov
add
xchg
sbbb
sbb
hlt
dec
orl
add
jle
subb
lock
push
les
shrl
mov
inc
push
sub
test
jns
sub
xor
int3
add
lahf
cmp
dec
stos
cwtl
je
aam
mov
pop
aaa
movsb
add
mov
sub
aas
jnp
add
xorb
mull
inc
cmp
shll
ds
mov
nop
dec
addb
sbb
stc
test
cmp
loop
mov
mov
cli
mov
loop
into
pushf
push
repnz
paddq
and
mul
rolb
sbb
mov
add
mov
in
push
fstpt
inc
adc
sub
mov
mov
mov
add
fdivrl
test
push
pop
mov
ljmp
and
stos
mov
inc
push
mov
or
xlat
rcr
push
push
cmp
fists
insb
mov
lods
imul
mov
mov
mov
aam
int3
mov
xor
xor
int
jmp
cltd
pop
mov
mov
shll
outsl
cmpsl
mov
neg
cmp
aam
sahf
dec
pop
bnd
jae
in
jae
dec
jnp
idivl
scas
mov
sub
jl
adc
test
mov
jl
fisubl
pop
in
sub
cmp
hlt
adc
jle
adc
lods
jbe
lods
and
lods
dec
xor
es
fstp
insl
push
fisttpl
dec
enter
ljmp
lds
fnstenv
pop
int3
rcl
mov
xor
dec
cmp
and
push
adc
cmpsl
cli
sbb
sahf
movl
adc
cmpsb
mov
inc
add
sub
popf
jb
scas
lea
xor
in
movsb
aaa
aad
push
adc
test
sbb
ds
and
popa
push
and
adc
sub
loopne
lcall
xorb
push
aam
inc
jo
push
and
cmp
loopne
pop
les
push
out
dec
mov
loop
rorb
push
mov
lods
push
mov
loopne
xor
arpl
aam
outsb
pop
mov
mov
jo
sti
cwtl
or
inc
xor
nop
test
fmulp
push
jge
adc
test
sbb
xchg
inc
cmp
add
add
sbb
pop
shl
je
xchg
push
or
push
push
lock
sti
push
jmp
neg
lret
lcall
outsb
mov
cwtl
jl
mov
xchg
in
sbb
or
leave
aas
jmp
xor
fidivl
jnp
xorl
sub
dec
lock
loopne
into
ret
dec
mov
arpl
inc
xchg
lret
mov
push
jge
mov
pop
pusha
cltd
stc
xchg
outsb
arpl
rcl
and
les
sarb
in
push
pop
adc
jae
int
xchg
jecxz
inc
add
inc
sub
lcall
rorb
adc
mov
cmc
dec
loope
cmpsl
dec
and
pop
and
add
inc
enter
clc
or
dec
adc
xchg
nop
adc
and
cwtl
pop
adc
push
sub
icebp
dec
push
mov
cli
adc
out
sub
xchg
cmp
popa
add
jecxz
push
inc
pop
mov
sarb
ret
or
push
xor
mov
and
loop
addr16
cmp
add
push
pop
inc
cwtl
insb
test
xchg
aam
test
pop
dec
dec
in
adc
cwtl
sbb
insl
jo
fists
hlt
scas
jnp
rol
in
ds
iret
and
lret
out
dec
cs
imul
cmp
imul
mov
and
arpl
mov
xchg
les
adc
push
bound
or
and
fildll
mov
jecxz
scas
lcall
aam
sub
mov
cmp
xor
mov
enter
mov
xchg
loop
dec
adc
add
sub
push
add
inc
mov
jno
xor
sub
jmp
and
sub
lods
mov
xchg
xor
xor
sbb
jo
push
xor
lret
dec
push
inc
inc
mov
clc
shll
stc
inc
sti
mov
jae
imul
jl
popf
sub
jbe
add
inc
or
or
subb
adcl
addl
ret
lea
in
mov
mov
jge
in
shrl
pop
std
pop
sbb
insl
and
push
pop
push
movsb
push
dec
mov
mov
mov
jmp
push
movl
outsb
sbb
out
cmp
and
icebp
fiaddl
sub
push
dec
inc
or
and
cwtl
pop
sbb
xchg
jbe
mov
add
mov
addr16
sub
mov
dec
and
testl
cmpsl
mov
lods
sarl
test
cwtl
push
push
cmc
xchg
cld
loopne
repz
xor
push
mov
cli
xor
mov
fsubrs
outsl
dec
lods
push
outsb
mov
push
xor
mov
scas
xor
daa
push
stc
out
dec
std
ret
push
push
dec
lcall
inc
out
cmpsb
inc
shll
lcall
sbb
ljmp
xlat
sahf
int
jne
xlat
jge
push
pop
sbb
jno
mov
fmull
icebp
cwtl
or
nop
lock
jle
call
and
sub
ret
cmpsb
faddl
lock
inc
mov
xchg
and
in
ljmp
mov
pop
sbb
sbb
aas
ficoms
testl
popl
inc
mov
pop
nop
cli
inc
inc
xor
lcall
jbe
sahf
sbbl
ja
jbe
dec
jecxz
ds
pop
jl
mov
or
adc
adc
cli
sub
lahf
lods
out
jbe
pop
aaa
sti
out
jmp
ja
mov
xchg
push
sbb
outsb
mov
cmp
inc
mov
loopne
ficoms
fcomip
lods
sbb
mov
cmp
mov
xor
mov
push
imull
aad
sti
mov
ja
insb
loop
dec
pushl
sub
sbb
push
push
xchg
iret
in
sbb
arpl
dec
or
test
mov
cmpl
scas
xchg
ljmp
mov
push
cmpsb
clc
loope
fdivrs
stos
frstor
fistps
cltd
jne
imul
repz
ss
inc
cltd
fnstcw
pop
pop
insb
ret
jp
sub
ss
bnd
popa
dec
jmp
movsb
xlat
repnz
dec
push
jmp
pop
pop
pop
imul
sbb
jmp
out
sbb
stos
mov
outsl
dec
push
or
arpl
fs
lods
mov
push
jg
xchg
lret
sbb
loope
aad
ja
int3
std
fwait
push
jns
xchg
idivb
int
lret
daa
push
stos
mov
leave
popa
es
popf
jbe
jmp
imul
das
cwtl
jne
adc
jmp
dec
fsqrt
pop
cmp
mov
xchg
or
lds
testl
dec
adc
inc
outsl
ret
idiv
sub
inc
fwait
xchg
cmp
out
pop
int
push
int
jb
cwtl
fnstsw
push
fnstcw
or
and
or
adc
mov
pop
ret
or
lds
shlb
add
pop
sub
insb
add
lds
inc
xor
xor
shrb
or
mov
insb
jecxz
sbb
lods
lea
je
push
sti
xchg
in
push
lods
xor
push
sub
pop
loop
push
xor
push
add
sbb
cli
mov
xchg
mov
push
icebp
or
pop
cmc
push
cmpsb
data16
push
inc
loopne
cmc
pop
repz
mov
rcrb
cmp
ficomps
outsb
lcall
pop
adc
push
mov
cmp
pop
cmp
sub
mov
push
xor
nop
cmp
adcl
sbb
pushf
hlt
and
push
or
push
and
mov
xchg
and
mov
push
test
outsl
pop
mov
mov
mov
loop
stos
dec
push
xchg
insl
pop
imul
push
xlat
cmc
cli
std
mov
jno
dec
mov
insl
jnp
lea
pop
ss
cmp
ja
fxch
aad
mov
inc
insl
jecxz
fistps
jmp
repz
in
xchg
clc
mov
adc
pop
das
cmpsl
clc
fcomi
std
decl
push
dec
xchg
rol
xor
mov
shl
push
std
pop
dec
shl
cmp
pop
aad
xchg
cmp
xor
inc
jbe
pop
fidivl
sub
adc
push
stc
scas
xchg
or
movsb
mov
popa
push
mov
push
ljmp
mov
pop
adc
jmp
push
repz
ds
xchg
sahf
stc
cli
aaa
mov
mov
inc
hlt
out
repnz
cli
or
jmp
jp
lods
or
cli
shrb
cltd
push
cmpsb
or
mov
sub
repnz
js
int3
lahf
inc
outsb
sub
enter
lret
sub
insl
in
or
hlt
rorb
sbb
js
dec
into
jmp
cmpsb
adc
push
out
xor
shlb
sbb
jo
int
mov
mov
xlat
mov
mov
pop
push
and
addr16
dec
xlat
pop
sahf
sub
jl
dec
lods
pop
mov
push
pop
dec
jle
cwtl
popa
movsl
movsb
stc
xor
jmp
enter
loope
mov
loopne
lods
xor
jmp
leave
rol
push
sbb
lahf
rcll
dec
cltd
dec
push
dec
test
dec
daa
dec
and
mov
clc
lock
icebp
jmp
pop
or
test
test
inc
mov
roll
les
cmpsb
jmp
xchg
insb
ret
and
mov
mov
dec
mov
lods
sub
mov
in
daa
loope
dec
dec
adc
add
out
daa
loop
xchg
pop
stos
and
dec
cmp
lahf
hlt
push
add
es
fs
in
or
xchg
jo
cmc
test
xchg
loop
jae
mov
push
daa
out
mov
adc
pop
sahf
jnp
xchg
jno
xchg
sahf
push
push
xor
cmp
push
mov
push
mov
cmpsl
aam
jb
test
inc
iret
push
adc
imul
xchg
mov
je
inc
cmp
sti
and
imul
rcrb
cmp
aam
aad
jle
arpl
incl
adc
sbb
xor
test
dec
leave
punpcklwd
inc
sbb
xchg
cwtl
call
pop
movsl
lods
je
inc
jge
insl
xchg
sub
outsl
shrb
hlt
mulb
movsl
pop
add
mov
mov
and
fwait
and
sbb
mov
inc
movsb
inc
pop
push
lcall
out
push
push
add
decb
adc
stos
cltd
sbb
push
sub
adc
jne
mov
and
mov
sub
leave
fidivrs
pushf
addr16
jae
pushf
out
pop
sub
adc
bound
sub
outsb
jae
aad
ss
push
xor
mov
insl
lret
pop
push
shrl
adc
shll
pop
repz
xchg
in
xlat
addr16
outsb
inc
sub
ror
jne
add
jbe
mov
imul
adc
ss
shlb
sahf
test
jl
mov
lahf
fdivrp
out
sahf
jp
hlt
mov
ficompl
jb
dec
es
push
lret
ljmp
pop
pop
leave
xchg
cmc
outsb
xor
jmp
sbb
cmc
out
inc
cmpb
test
jp
scas
lods
cmpsb
push
jecxz
imul
inc
fcmovne
or
cli
testb
sub
nop
mov
roll
or
test
inc
inc
mov
pop
mov
xchg
jecxz
jg
push
xchg
sbb
fs
ljmp
sarl
bound
stc
dec
sub
lds
movl
or
iret
fcompl
in
and
or
mov
nop
in
and
sarb
popa
mov
cmpsl
sub
inc
inc
or
lods
pop
xchg
popa
test
jno
stos
idivl
mov
ret
addl
add
push
and
sbb
lea
and
or
cld
and
in
test
stc
aaa
inc
cmp
pop
jp
js
or
mov
leave
push
cmp
insb
or
mov
sbb
pop
xchg
jbe
push
cmp
mov
int3
in
jno
xchg
sbb
out
inc
fmull
mov
inc
sub
cmpsl
adc
imul
inc
xchg
jnp
icebp
fmuls
mov
aad
dec
jo
cs
add
mov
mov
xor
lcall
divl
and
xchg
xlat
or
ret
or
out
inc
adc
testb
sbb
mov
sub
cmp
rorl
adc
push
cli
push
jge
jmp
cmp
pop
inc
in
pop
xchg
dec
mov
arpl
sbb
stc
mov
or
in
adc
mov
push
xor
cmp
movsl
lods
jb
lcall
rorl
mov
or
mov
lds
pop
inc
mov
pop
adc
enter
push
cld
jno
lds
sub
cwtl
inc
pop
add
popa
fsubr
orl
std
loop
mov
or
fdivrl
sbb
sbb
xor
ret
adc
clc
cld
inc
rorl
cmp
jo
ret
add
pop
insb
es
xor
sbb
test
push
orb
add
das
mov
adc
push
aaa
xchg
cli
jmp
mov
cmp
xlat
mov
clc
cltd
mov
test
mov
jl
aad
lock
adc
xor
mov
imull
sub
push
push
or
cld
repnz
inc
loop
repnz
ror
xor
cltd
sbb
flds
ss
cmp
jns
inc
popf
dec
adc
aam
fstps
cmpsb
je
ljmp
bound
dec
cmp
fadd
out
jp
rorb
stos
xor
in
cmp
mov
loope
pop
movsb
out
dec
xor
sbb
sbb
add
mov
jl
enter
pop
lahf
jno
push
xor
push
repnz
sbb
mov
sbb
jmp
dec
and
repnz
xor
push
stos
lahf
lods
pop
inc
xchg
inc
xor
out
enter
sbb
cmp
leave
movsb
mov
loop
sbb
xchg
dec
push
loope
out
cmp
mov
pop
scas
scas
aad
lret
sub
daa
movsl
ljmp
xchg
push
lahf
test
iret
in
mov
icebp
rclb
or
mov
mov
fsts
inc
int
ret
pop
test
lret
loopne
pop
cltd
xchg
pop
pop
je
mov
xchg
mov
dec
inc
shlb
mov
mov
icebp
je
push
push
mov
and
jmp
push
arpl
mov
xor
adc
cmp
pop
cmc
int
scas
and
cmp
vpaddusb
dec
inc
mov
xchg
loope
add
out
ficomps
rcll
adc
aad
mov
and
scas
mov
in
les
mov
mov
mov
xchg
out
jge
daa
out
mov
shl
shrl
adc
mov
mov
mov
stc
shl
jns
pop
cmp
arpl
or
push
int3
jle
mov
fdivrl
push
cmp
mov
adc
sub
into
ljmp
fidivs
dec
testl
mov
es
mov
rorb
aas
data16
xchg
xchg
xor
cltd
sbb
push
mov
xchg
mov
and
lods
pop
cwtl
stc
lret
inc
xchg
subb
bound
cmpsb
inc
add
pop
leave
adc
xchg
jbe
les
insb
mov
cs
ss
push
mov
js
sub
xor
or
mov
push
dec
leave
or
mov
pop
aam
mov
leave
xor
ficoms
int
std
adc
dec
mov
fldcw
rcl
push
cli
outsb
push
mov
jae
scas
dec
insb
push
out
test
or
ljmp
test
jmp
jp
negb
inc
aad
movsl
not
jne
jmp
adc
and
mov
aaa
test
dec
pop
iret
xchg
xor
inc
inc
fadds
frstor
pop
pop
mov
push
das
lods
mov
shll
cs
ret
lods
dec
sub
stos
xor
mov
cmp
bound
setb
pop
or
cli
lods
sahf
sub
movsl
sub
dec
rolb
aaa
push
xor
and
xor
and
fdivrs
daa
dec
pop
icebp
ljmp
xchg
xchg
dec
or
xchg
lea
pop
pop
cmp
pop
jbe
fmull
inc
cmpsl
in
adc
aaa
shll
jge
cmpsb
and
or
in
ret
popa
int
and
cwtl
scas
sub
pop
repz
arpl
adc
mov
sub
mov
fldpi
pop
fnstsw
enter
push
cmp
cs
pop
adc
adc
int3
jge
mov
stos
mov
push
sbb
iret
inc
jg
and
sub
arpl
mov
xor
jle
mov
push
push
mov
and
pusha
mov
jmp
ret
mov
pop
mov
mov
inc
into
aaa
dec
repz
repnz
push
test
push
jmp
sbb
jge
add
outsl
jne
mov
in
mov
popa
call
mov
scas
ja
out
mov
inc
negl
push
lret
push
inc
ja
orb
or
push
or
pop
xor
iret
pop
lret
pop
mov
cltd
cmc
rcll
sbb
lret
pop
and
call
jae
fnstsw
mov
xchg
hlt
pop
push
test
enter
lahf
push
cmp
jno
shrb
dec
fcoms
mov
bound
sub
pop
mov
stos
cmp
mov
fwait
push
idivb
ja
scas
lods
ss
clc
mov
xchg
jmp
xchg
push
lret
mov
std
xchg
std
es
and
push
pop
popf
fisttpl
jg
ret
repz
je
or
enter
data16
mov
into
daa
cmpsb
jne
push
jns
dec
push
pop
shlb
mov
lret
movsl
or
jge
test
pop
outsb
lods
pushf
push
xchg
mov
add
sbb
or
xlat
popf
jae
mov
je
pop
adc
mov
mov
lahf
out
xor
aaa
loopne
lret
mov
and
movsb
bnd
pop
shrl
cmp
outsl
lds
cmp
sub
out
mov
xchg
stos
cmp
xor
imul
mov
subl
push
pop
les
popf
dec
jmp
xchg
or
das
xchg
xor
arpl
xor
icebp
sub
add
aad
cltd
or
dec
and
push
nop
outsl
loope
ljmp
out
mov
mov
xchg
dec
fcoml
jp
adc
neg
mov
enter
jmp
bound
imul
nop
test
lods
dec
scas
imul
fs
pop
xor
mov
sbb
add
xor
in
pop
jbe
mov
into
stc
arpl
aas
mov
xchg
push
pushf
xchg
fs
add
dec
push
aas
push
lret
ds
push
mov
adc
pop
fcoml
dec
jge
and
xchg
xchg
push
lret
mov
jbe
push
out
pusha
shll
mov
cmp
dec
cli
xchg
int
xchg
cmp
mov
in
lret
stos
mov
mov
and
lods
ja
mov
inc
ss
addr16
mov
call
bound
mov
dec
shrb
addb
cmp
xlat
movsl
out
nop
pop
sub
dec
popf
stos
aaa
xor
repz
cli
adc
cli
inc
outsb
clc
pop
in
movsb
scas
pop
jns
out
std
or
pop
lret
push
clc
aam
jecxz
lret
sub
mov
mov
dec
cmp
or
inc
xchg
jl
push
inc
sarb
mov
fnstsw
jg
outsb
lea
sub
ret
dec
sbb
mov
int
loop
mov
and
movsb
sub
cli
jbe
pop
jmp
push
out
sbb
std
xchg
mov
mov
mov
add
lods
jmp
shrb
lret
dec
test
ss
add
mov
popa
adc
leave
punpckhbw
push
mov
vpsubb
sbb
bound
mov
xor
or
into
enter
das
push
test
fwait
enter
fs
jbe
cltd
stos
cmpsl
insb
cwtl
testl
jne
mov
in
lcall
mov
repz
mov
adc
dec
adc
lds
cld
jmp
xor
jmp
cld
add
add
imul
or
add
add
pop
add
addb
add
mov
add
add
add
addb
add
cmp
add
rolb
add
clc
add
orb
add
inc
add
sbbb
add
pop
add
addb
add
imul
pop
add
add
add
add
mov
add
mov
add
add
add
add
add
addb
add
call
add
add
add
addb
add
imul
add
sbb
add
sub
add
xor
add
inc
or
andb
adcb
cmpb
andb
nop
add
xorb
subb
add
mov
add
lcall
andb
add
imul
add
add
add
and
addb
add
imul
add
rorb
cmpb
add
imul
adc
lock
push
add
xor
add
push
sldt
addb
repz
cwtl
add
xor
add
mov
add
enter
testb
add
add
xor
add
clc
add
cmp
add
adc
add
sub
add
inc
add
add
pop
add
add
jo
add
mov
add
mov
sldt
mov
adc
add
add
add
imul
add
fmuls
add
out
add
decb
add
add
add
imul
pop
add
jg
add
push
add
dec
push
add
pusha
push
add
js
add
nop
push
add
test
add
rolb
addb
add
imul
add
or
add
add
add
imul
add
add
add
lock
add
imul
add
add
add
or
add
add
add
imul
add
add
add
sbb
add
add
add
imul
add
add
add
sub
add
add
add
imul
add
add
add
cmp
add
add
add
imul
add
add
add
dec
pop
add
add
add
imul
add
add
add
pop
pop
add
add
add
imul
add
add
add
push
add
add
fdivrl
add
add
add
add
add
add
js
add
add
add
imul
add
add
add
mov
add
add
add
imul
add
add
add
cwtl
pop
add
add
add
imul
add
add
add
test
add
add
add
imul
add
add
add
mov
add
add
fdivrl
add
add
add
add
add
add
enter
add
add
imul
add
add
add
fadds
add
add
add
imul
add
add
add
call
add
add
fdivrl
add
add
add
add
add
add
clc
pop
add
add
add
imul
add
add
add
or
add
add
add
imul
add
add
add
sbb
add
add
add
imul
add
push
add
add
or
add
add
add
fdivrl
add
add
add
add
add
add
cmp
add
add
add
imul
add
add
add
dec
or
add
add
add
fdivrl
add
add
add
add
add
add
pop
or
add
add
add
fdivrl
add
add
add
add
add
add
push
add
add
fdivrl
add
add
add
add
add
add
js
add
add
add
imul
add
add
add
mov
add
add
add
imul
add
add
add
cwtl
or
add
add
add
fdivrl
add
add
add
add
add
add
test
add
add
add
imul
add
add
add
mov
add
add
fdivrl
add
add
add
add
add
add
enter
add
add
imul
add
add
add
fmuls
add
add
add
imul
add
add
add
call
add
add
fdivrl
add
add
add
add
add
add
clc
or
add
add
add
fdivrl
add
add
add
add
add
add
or
add
add
add
imul
add
add
add
sbb
add
add
add
imul
add
add
add
sub
add
add
add
imul
add
add
add
cmp
add
add
add
imul
add
add
add
dec
or
add
add
add
fdivrl
add
add
add
add
add
add
pop
or
add
add
add
fdivrl
add
add
add
add
add
add
push
add
add
fdivrl
add
add
add
add
add
add
js
add
add
add
imul
add
add
add
mov
add
add
add
imul
add
add
add
cwtl
or
add
add
add
fdivrl
add
add
add
add
add
add
test
add
add
add
imul
add
add
add
mov
add
add
fdivrl
add
add
add
add
add
add
enter
add
add
imul
add
add
add
fmuls
add
add
add
imul
add
add
add
call
add
add
fdivrl
add
add
add
add
push
add
add
or
add
add
add
fdivrl
add
add
add
add
push
add
add
or
add
mov
add
add
push
mov
add
add
mov
add
mov
add
add
popl
add
add
and
pop
add
add
pop
xchg
pop
add
add
mov
add
pop
xchg
pop
add
add
add
pop
add
add
add
cltd
pop
add
add
add
lcall
mov
pop
add
add
add
add
add
pop
add
add
add
mov
add
lock
add
shlb
add
verw
inc
add
shr
pop
add
add
and
pop
add
add
add
ljmp
in
jmp
add
add
add
add
nop
in
pop
add
add
lods
out
pop
add
add
add
icebp
pop
add
add
add
add
mov
pop
add
add
sbb
pop
add
add
add
cli
pop
add
add
js
pop
add
add
add
or
xor
add
xchg
add
add
add
add
add
add
or
in
add
sbb
or
pop
add
add
or
mov
add
and
or
adc
add
xor
or
je
add
test
or
shlb
add
lldt
add
jl
lldt
add
nop
dec
lldt
add
movsb
dec
lldt
add
mov
add
add
dec
lldt
add
loopne
lldt
add
cld
lldt
add
test
lldt
add
pop
add
inc
add
inc
add
push
add
add
inc
add
dec
add
add
inc
add
inc
add
inc
add
dec
add
add
inc
add
dec
add
push
add
push
add
inc
add
inc
add
add
add
inc
add
inc
add
dec
add
inc
add
inc
add
dec
add
add
inc
add
dec
add
pop
add
inc
add
inc
add
add
add
add
inc
add
or
push
add
inc
add
dec
add
push
add
dec
add
push
add
or
inc
add
add
add
push
add
add
add
add
add
dec
add
dec
add
add
inc
add
dec
add
inc
add
dec
add
inc
add
push
add
add
push
add
xor
or
dec
add
dec
add
dec
add
dec
add
add
and
xor
mov
pop
inc
inc
xor
inc
popa
inc
inc
add
cmp
mov
push
push
popa
adc
out
mov
mov
sbb
sbb
inc
rclb
fs
sbb
pop
jle
pop
sub
ljmp
and
and
outsb
pop
xor
adc
xchg
mov
lret
sub
sti
insl
dec
pop
nop
movsl
popf
insb
lods
and
aad
jecxz
xor
mov
pop
in
push
jbe
mov
std
sti
cli
ja
cld
fdivrp
out
jns
out
fidivrs
fistpll
pushf
out
repz
aas
mov
rorb
movsb
pop
dec
insb
out
repz
and
add
loop
add
mov
cmp
loope
jl
arpl
popa
addl
into
inc
out
jo
push
popa
stc
dec
pop
in
ss
or
jbe
cmp
loopne
sub
mov
jno
fcomps
out
cmp
cmp
repz
pop
mov
push
ret
in
sbb
sub
test
jg
cli
loop
jmp
pop
xlat
and
sub
sbb
in
mov
push
clc
mov
cwtl
inc
test
imul
mov
leave
test
shll
das
mul
mov
imul
in
dec
push
pop
cmp
or
mov
jle
into
push
mov
adc
push
addr16
pop
jo
add
add
adc
push
popf
cmp
or
cmp
stos
push
push
imul
xor
in
add
imul
mov
and
push
rolb
in
dec
pop
lret
fmul
mov
sbb
mov
cmp
cmpsl
arpl
es
lcall
mov
sub
fwait
mov
cmp
loop
pop
lret
fucom
pop
lret
mov
fidivl
popf
push
cmp
shrl
call
vxorps
add
mov
jae
insl
mov
dec
fcomps
outsb
push
push
mov
cmp
loop
jge
je
scas
sbbb
cltd
in
je
jg
xor
xchg
sub
pop
xchg
outsb
push
lret
pushf
cwtl
out
call
cmp
dec
les
in
fidivl
mov
pusha
cmp
cmp
in
push
sbb
inc
stos
scas
mov
je
ret
inc
xlat
push
adc
mov
cmpsl
loope
mov
pop
lds
jg
jns
push
push
cmc
jno
jae
push
jnp
jnp
test
sarl
insb
pop
jno
push
cmp
je
lret
in
dec
in
fstpt
jns
sub
ja
inc
ds
inc
mov
out
fcoms
insb
adc
mov
daa
xor
call
fstpt
jecxz
in
jno
aas
sub
jbe
xchg
repz
jne
incl
or
fsubrl
mov
insl
dec
lcall
jbe
mov
jecxz
push
pop
js
mov
pop
fistpl
xor
pop
inc
mov
jnp
out
sarl
mov
sbb
jmp
fs
cmp
mov
lret
jg
mul
add
repnz
cmp
cmc
hlt
gs
outsb
cmpsb
iret
test
and
mov
fdivrs
sbb
push
sbb
add
sbb
std
jecxz
clc
pop
push
sbb
lcall
sbbl
mov
out
sti
mov
jns
jnp
je
fst
ret
add
scas
mov
js
xchg
jnp
lock
sbb
ljmp
leave
aad
mov
mov
jmp
aam
notb
setge
pop
jne
xchg
movsl
ds
scas
sti
fldt
outsb
ret
jg
xchg
sub
sbb
outsb
int3
outsb
iret
imul
and
out
fistps
stc
inc
stos
inc
das
fiaddl
cld
cld
std
cmp
scas
lods
aam
ds
inc
mov
adc
cmp
mov
jmp
in
jg
aam
inc
aaa
mov
sti
mov
or
js
xor
sub
popa
mov
push
inc
push
add
out
lds
jl
ret
mov
add
aaa
std
inc
int
cs
push
clc
mov
pop
sub
fmull
xchg
xchg
pop
push
mov
out
repnz
mov
lahf
sub
ret
arpl
xor
adc
in
xlat
sbb
mov
xlat
mov
push
aam
mov
mov
mov
popf
sub
movsb
pop
pop
out
addr16
call
incl
lods
dec
pop
fwait
in
jl
testl
fidivrl
and
dec
loope
and
xlat
leave
clc
insb
push
mov
dec
jnp
mov
stos
pop
imul
push
lock
lods
mov
xchg
popw
fldt
mov
jg
aas
fdivrs
jp
les
mull
mov
ret
rolb
ds
pusha
cmp
mov
sti
aam
repz
std
in
mov
sbb
pop
inc
inc
mov
shlb
and
mov
sub
mov
jns
icebp
cmp
ret
push
out
int3
cmp
mov
inc
inc
cmc
ja
mov
mov
call
lahf
mov
icebp
pop
fimuls
int
neg
jno
pop
push
in
xor
fdivrs
popa
fdivrs
aam
js
fst
mov
fstpt
adc
aam
sahf
mov
inc
or
out
cmp
js
shrl
fs
bound
data16
fs
loopnew
pop
push
cmc
and
sbb
js
and
pop
sbb
mov
pusha
paddb
pushf
mov
addr16
add
movsl
lds
add
xchg
repnz
mov
rcrl
repz
jbe
hlt
and
xlat
mov
push
fiaddl
addw
sbb
aam
mov
xlat
jl
ret
outsl
xorb
les
fwait
cmpsb
iret
lahf
std
xor
sar
sbb
cltd
imul
xor
fldl
mov
push
lods
hlt
xor
sar
lahf
ficoms
fstp
ficomps
mov
lods
mov
leave
cmc
cli
call
into
lods
adc
inc
mov
jnp
inc
jle
add
cmp
push
xor
je
lock
out
and
insb
das
ljmp
mov
leave
jecxz
cmp
lods
cmp
jecxz
mov
add
dec
jge
jno
fbld
fnstsw
aad
call
loop
orb
ss
adc
out
dec
fstps
push
sti
and
repnz
iret
inc
or
cmp
pop
imul
dec
lahf
mov
cmp
ss
fwait
lret
cmp
lret
xor
add
outsb
inc
js
lret
loopne
cmpb
cmpb
cmpb
cmpb
cmpb
cmpb
cmpb
cmpb
cmpb
cmpb
cmpb
cmpb
cmpb
cmpb
cmpb
cmpb
add
in
pushf
dec
cmpsl
popf
stc
and
inc
and
and
inc
inc
adc
mov
add
adc
pop
cld
frstpm(287
arpl
hlt
movsl
and
movl
push
ja
sbb
inc
push
fimuls
fnsave
aaa
push
adc
inc
movd
or
push
nop
addr16
test
ret
xchg
jl
scas
sub
mov
inc
mov
or
xchg
notb
faddl
sub
ret
xchg
rcrl
mov
loop
dec
cld
or
popa
or
fdivl
xor
jmp
inc
cli
push
ljmp
inc
adc
bound
pop
ja
pop
ret
push
cmp
jae
sub
incb
push
frstor
inc
jno
adc
movsb
or
lock
test
mov
cld
or
loopne
scas
add
fnstcw
sbb
ret
cmp
sti
jb
insb
adc
xor
orb
in
int3
xchg
addl
repnz
outsl
fstpl
stc
rcl
push
jg
pop
iret
jge
test
mov
into
sbb
jb
pop
loope
jb
xlat
xchg
ret
xchg
aaa
jno
sub
jno
les
mov
xorl
jns
cld
fmull
and
cmp
add
xor
incb
jl
cmp
pop
dec
adc
loope
std
fistpl
fs
bswap
sbb
pop
sub
jle
push
mov
int3
sub
dec
or
or
jo
jae
push
adc
xor
outsb
imul
inc
shll
loop
jp
cmpsl
push
call
adc
dec
add
inc
ret
icebp
pop
sub
pop
sub
adc
xor
push
jne
inc
pop
mov
push
add
fsubrp
ret
je
shll
add
dec
outsl
inc
mov
add
aam
pop
mov
icebp
aad
das
add
add
pop
lret
outsl
or
push
push
pop
cld
mov
js
je
out
in
pusha
jnp
inc
dec
jmp
orl
and
lock
inc
gs
fs
call
sbb
sub
into
in
call
pop
lret
dec
and
ret
cs
xchg
xchg
cwtl
pop
inc
push
pop
in
jo
jns
sbb
dec
shlb
movsl
rorb
repz
clc
sbb
fiadds
xor
adc
or
xchg
pop
out
xchg
cli
push
xchg
std
inc
xchg
sbb
mov
in
adc
pop
fldcw
mov
arpl
push
push
add
fs
rorb
filds
dec
in
pop
outsb
push
sarl
stos
xchg
jnp
and
push
sti
shrl
mov
es
pop
add
sbb
adc
call
xchg
ficoml
fiaddl
pop
ja
sbb
pop
mul
or
jle
call
mov
ret
aad
add
cmpsl
scas
mov
xchg
jbe
testl
jnp
std
cmp
mov
ret
mov
mov
arpl
out
mov
mulb
imul
inc
sbb
jnp
je
mov
add
lret
mov
cmp
and
and
cmp
mov
mov
push
movsl
popf
addb
test
js
cltd
loop
dec
mov
inc
in
push
adc
cmp
sub
mov
lock
push
xchg
mov
pop
dec
repnz
xchg
cmp
push
adc
lods
sub
pop
leave
inc
cld
loopne
fnstsw
mov
push
out
xchg
cmp
mov
fistl
mov
inc
movsb
lods
cmpsl
lret
sbb
push
mov
imul
adc
jae
jnp
mov
inc
xor
mov
add
aaa
loopne
loop
gs
out
xlat
movsl
pushf
mov
jp
into
inc
sub
mov
scas
loope
mov
cmp
mov
mov
add
pop
push
lea
sbb
push
out
xor
push
adc
inc
and
out
pop
or
inc
les
inc
cmc
scas
jl
aad
jge
ja
mov
loop
hlt
sti
test
mov
repz
cmp
ja
sbb
mov
push
outsb
mov
adc
or
sti
mov
ret
hlt
jecxz
and
in
std
inc
ds
out
xchg
push
jns
insl
ljmp
out
xchg
and
jp
push
mov
mov
imul
pop
or
lea
sbb
jp
loope
mov
jmp
jecxz
dec
clc
pop
adc
in
push
push
mov
les
mov
mov
cmpsl
xchg
pusha
and
mov
fld
mov
gs
es
cs
sar
pop
gs
mov
cmp
das
mov
call
filds
inc
mov
mov
adc
mov
push
adc
push
add
bound
inc
fiaddl
fmuls
sahf
les
dec
loopne
jb
aaa
out
or
xor
adc
jle
ss
xchg
push
mov
lret
js
pushf
mov
mov
push
fstps
and
inc
repnz
or
sbb
andb
jbe
cmp
mov
mov
jmp
and
in
data16
roll
mov
pop
or
push
negb
pop
mov
fisubl
stos
jnp
inc
ja
sub
pop
sahf
test
inc
pop
pop
sahf
pop
or
mov
popf
addb
ret
jns
jbe
test
jno
das
clc
dec
pop
repz
mulb
xchg
cltd
cmc
push
cmp
jo
divb
hlt
add
sbb
dec
push
mov
cmp
hlt
push
jp
mov
jle
mov
push
ret
pusha
fcmovnbe
lcall
addl
mov
xchg
dec
stos
out
sbb
push
jno
cmp
and
push
sti
pusha
lds
and
xchg
and
lahf
push
sbb
mov
push
hlt
sbb
aas
inc
cmp
test
inc
enter
push
pop
lret
sub
imul
cmp
jae
sub
imul
sarb
test
rcrl
sbb
jle
lock
push
or
mov
fstps
inc
jne
dec
das
adc
pop
lods
les
pop
fimuls
mov
xchg
sub
fcomps
call
sbb
mov
pop
and
rcrb
jns
push
shr
daa
out
lahf
les
lods
lock
in
dec
popa
adc
pushf
jne
out
fsubrl
pop
repnz
push
in
ret
push
test
aaa
push
mov
mov
xlat
xchg
lcall
imul
rclb
and
pop
cwtl
xor
jp
mov
mov
and
ja
rolb
cli
and
xor
out
mov
sarb
in
sbb
and
mov
mov
int
cwtl
and
push
nop
fadd
and
cmp
jo
dec
roll
clc
xchg
roll
loopne
sbb
xchg
xor
mov
jp
addr16
insl
iret
vcvtdq2pd
push
and
adc
xchg
mov
add
jo
test
mov
sbb
pop
xchg
jae
enter
or
xchg
fldcw
andl
or
rclb
cmp
sub
sbb
lods
das
loope
mov
push
es
popf
push
out
mov
pop
pop
xor
and
les
push
inc
cmpl
fidivl
xor
pop
popf
out
lahf
rcr
cmpsl
fnstenv
mov
out
mov
pop
test
cmp
pop
loop
fstp
dec
fadds
scas
icebp
push
ret
or
sub
rolb
mov
dec
int
jb
loope
add
mov
adc
lods
dec
jno
cmp
mov
push
or
jo
dec
addr16
mov
jnp
lock
je
jecxz
mov
leave
nop
negb
cmp
js
and
push
mov
sbbl
and
pop
mov
loop
lret
ret
sbb
addb
fisubl
sbb
jp
mov
daa
mov
out
aaa
mov
fidivrs
inc
xchg
mov
xor
pop
mov
mov
loopne
lds
rcll
adc
pusha
decl
push
push
mov
dec
mov
pop
push
jb
mov
adc
inc
icebp
xlat
cmp
jle
sti
jne
and
mov
out
inc
in
stos
imul
cs
cld
jnp
pop
pop
aaa
pushl
xchg
in
testb
fbld
xchg
mov
stc
aas
adc
and
cmpsb
pop
inc
mov
mov
pop
adc
mov
jg
mov
cmpsb
sbb
mov
jae
cmp
sub
lcall
loop
iret
xor
mov
inc
xchg
stc
pextrw
pop
cli
inc
pop
mov
mov
std
push
je
add
mov
addr16
out
out
je
jno
les
xchg
cmc
xor
out
cld
cmp
and
xchg
push
stc
push
sub
xchg
cmpb
inc
ja
clc
mov
xor
dec
jl
mov
idiv
iret
movsl
jo
sahf
adcl
mov
aam
mov
test
mov
mov
jle
divb
adc
sti
adc
into
aam
dec
adc
mov
mov
cli
fs
mov
xor
push
pop
mov
addl
addb
movsb
push
cmc
xor
fwait
data16
cmpb
mov
rolb
mov
aam
cli
add
or
adc
mov
out
imul
lret
into
xchg
jae
adc
push
jns
adc
jno
adc
push
adc
add
add
jae
sbb
mov
loopne
aaa
or
lods
push
sub
cmp
rcrl
shl
adc
mov
xor
rcl
mov
mov
fisttps
jmp
and
pop
test
fwait
mov
sbb
adc
jg
pop
xchg
icebp
and
hlt
call
push
cmp
xchg
les
dec
xchg
xchg
popl
je
int
or
cli
fidivrs
jb
dec
scas
cmpl
ljmp
aaa
aad
mov
adc
into
or
sub
push
loopne
mov
jl
loope
loope
adc
push
shll
unpckhps
int3
test
dec
nop
push
sub
cltd
mov
pop
or
jmp
ja,pn
add
sbb
insl
mov
xchg
mov
inc
jle
lcall
in
jo
lock
mov
icebp
out
jmp
into
loope
repz
jmp
ds
mov
or
enter
jno
mov
jo
pushf
mov
lds
add
xchg
dec
pop
in
or
bound
icebp
jbe
add
ds
mov
cmp
cld
lods
mov
movsbl
in
adc
jmp
adc
push
shlb
adc
dec
add
cmpsl
jle
testb
xlat
in
mov
and
leave
adc
jp
cltd
mov
or
je
xlat
xlat
test
icebp
jge
inc
dec
dec
sbb
hlt
dec
mov
dec
push
or
or
shlb
cld
jecxz
push
inc
mov
sbb
sbb
loopne
outsl
aas
sahf
and
packuswb
push
imul
scas
mov
add
decl
mov
ljmp
jb
and
test
jg
sbb
sti
imull
dec
jb
adc
add
mov
sete
dec
mov
jo
loope
or
adc
mov
pop
mov
fldt
je
jl
mov
xchg
out
and
jo
xchg
lds
adc
pusha
cmp
add
shlb
lea
daa
add
repz
pushl
pusha
or
jl
adc
movl
xchg
and
dec
inc
mov
dec
mov
jo
mov
jns
cmc
bswap
xchg
adc
fdivr
sub
mov
test
je
dec
out
or
cmp
outsb
cmp
or
push
jge
pop
iret
push
cs
add
aas
js
dec
iret
lcall
ljmp
into
pop
outsb
add
mov
aas
nop
inc
adc
and
push
sbb
adc
rorb
xchg
adc
into
int3
cmp
enter
sub
stc
ret
sub
pushf
movsb
mov
insl
popf
stos
stos
mov
mov
mov
repnz
and
mov
adcl
and
and
or
mov
and
test
loopne
pop
frstor
in
inc
mov
scas
xor
and
mov
inc
loopne
outsl
ds
and
push
and
insb
xchg
jmp
addr16
push
cmp
xchg
sub
mov
mov
xchg
adc
lahf
or
xchg
clc
cli
icebp
testl
nop
dec
mov
outsl
sbb
jge
adc
and
fsts
adc
idivl
scas
fcmovnbe
mov
sbb
inc
lret
jo
cmpsb
pop
adc
gs
loop
push
pusha
or
insb
jbe
jle
xchg
dec
sbb
push
mov
mov
rol
into
shlb
jmp
scas
int
mov
mov
sub
adc
xor
dec
fidivrs
xor
pop
into
xor
dec
dec
fldlg2
scas
and
mov
push
cmp
xor
xchg
jns
fwait
adc
adc
mov
push
les
dec
imul
ljmp
pop
out
push
mov
addr16
shrb
mov
icebp
stos
push
lds
xchg
pop
pop
mov
sub
pop
xor
and
xchg
and
lcall
push
call
fimull
xor
xchg
adc
bound
lcall
sub
scas
dec
int3
ljmp
es
sbb
cmp
xchg
ds
cmpsl
mov
aam
lret
adc
mov
pop
xor
and
lds
inc
dec
jo
rcr
xchg
movsb
xchg
fiaddl
pop
pop
inc
sub
test
push
cmp
mov
pop
cltd
lret
lcall
and
fistpl
lods
and
xor
movsl
repz
scas
int3
pop
dec
lods
out
mov
imul
pop
jge
xchg
lahf
or
es
inc
pusha
xor
adc
mov
decl
test
xor
dec
cmpsb
xchg
bound
leave
fidivs
sbb
orl
shrl
jns
insl
jp
xor
fcmovnbe
push
outsb
push
ja
jl
cmp
imul
aad
push
mov
pop
pop
iret
mov
xchg
xchg
cs
int3
fstl
pop
dec
pop
leave
push
xchg
rcrb
out
inc
inc
push
mov
js
loop
pop
aam
and
and
movsb
pop
hlt
inc
cmp
adc
repnz
xor
data16
jnp
adc
xchg
scas
mov
es
mov
rolb
mov
pop
and
iret
xchg
gs
mov
stc
inc
sub
bound
inc
pushf
mov
arpl
xor
das
fidivrs
aad
daa
jne,pt
cmp
and
cmpsb
jae
adc
std
push
mov
aad
push
push
loop
push
xor
mov
jge
lods
movsl
and
dec
xchg
jnp
stos
xor
loop
fstp
jo
sub
push
push
adc
scas
pop
xor
xor
sub
lods
mov
mov
mov
mov
fwait
in
ficompl
lcall
xlat
jg
pop
push
jno
mov
jmp
mov
je
or
push
push
in
dec
hlt
lcall
in
jne
jmp
push
cwtl
into
push
repz
cmp
mov
stos
pusha
jo
pop
mov
dec
xor
mov
cmpsb
jae
push
shll
push
cs
outsl
lods
js
ret
sbb
and
xchg
inc
sarl
mov
pop
int
mov
int
loop
xchg
hlt
ret
shll
cmp
push
fldt
cli
push
fistps
xor
stos
in
push
jb
ret
aam
push
sub
lea
into
stos
xchg
cmp
cmpsb
stos
xor
push
es
das
xor
aad
push
or
jo
mov
insl
push
adc
dec
into
push
fsubl
imul
push
sbb
fmulp
jns
inc
cmpsb
xchg
jne
leave
jns
popa
push
ja
xchg
xchg
imul
mov
inc
adc
fcom
xchg
fwait
into
iret
xor
rcrb
icebp
push
hlt
xchg
test
xor
fsubp
dec
imul
out
jg
cmp
xchg
jmp
icebp
xchg
test
dec
movl
xchg
push
push
cmc
in
dec
mov
xchg
adc
cmpsl
mov
movsl
mov
sarl
shl
stc
lcall
push
pushf
leave
lea
inc
iret
xor
aad
add
adc
adcl
jbe
mov
push
sub
pop
mov
into
push
sahf
jae
cwtl
and
or
add
xchg
dec
lods
push
mov
pop
imul
mov
cmp
jbe
scas
lds
mov
mov
and
push
add
pop
ljmp
mov
aam
dec
stos
or
in
xor
push
bound
out
int
cmp
out
jle
inc
mov
xchg
inc
jmp
and
push
sub
and
inc
pusha
mov
rorb
imul
inc
xor
je
adc
lds
push
xchg
mov
mov
mov
sbb
mull
lds
push
xor
or
movsl
stos
xor
mov
pop
ret
mov
test
dec
sub
adc
inc
rcrl
insb
lcall
int3
loop
cmp
pop
test
cmpsl
addr16
out
imul
xor
cmp
out
or
cltd
dec
popf
mov
mov
je
jge
push
push
and
das
pop
jmp
out
inc
push
sbb
adc
aad
test
insb
std
sti
cmp
cwtl
adc
or
bound
inc
push
mov
mov
dec
inc
mov
cli
sarb
sbb
inc
aam
or
ret
mov
jns
push
outsb
mov
xchg
iret
lret
call
or
push
loope,pt
inc
dec
pop
insb
cmp
shrl
jp
ret
test
outsl
out
push
testb
pop
into
xchg
sub
subl
mov
mov
push
dec
sub
push
je
in
ja
and
mov
push
repnz
rclb
xlat
push
adc
pushf
movsb
dec
ficoml
xchg
dec
push
lea
call
movsl
in
loop
add
mov
jno
xchg
adc
pop
push
jg
int3
dec
inc
fs
push
movsb
sbb
mov
jo
sub
mov
xor
cmp
les
stos
push
ret
sub
mov
xchg
jns
cli
mov
push
jne
loope
fs
lcall
dec
fucompp
xor
xor
out
jecxz
or
mov
hlt
jns
in
test
mov
ljmp
mov
mov
in
dec
mov
lds
ljmp
or
ljmp
dec
enter
xchg
enter
les
jp
es
pop
dec
mov
xchg
imul
pop
jmp
sub
cmp
adc
cltd
stos
cmp
lcall
mov
mov
mov
pop
pop
sub
mov
je
bound
mov
push
orb
xchg
mov
outsb
scas
test
bound
push
pop
cmpsb
push
gs
xchg
cld
xor
sub
cmpsb
pop
test
push
push
xor
push
xchg
leave
call
lea
push
movsl
jns
push
sahf
in
cmp
lret
dec
push
xor
push
jle
xchg
mov
mov
int3
cli
dec
lods
es
aaa
in
jae
int
imulb
cs
imul
and
loop
pushf
push
mov
insl
hlt
cmp
out
or
fistpll
lods
fwait
dec
fcompl
and
pop
out
jecxz
push
or
lea
jmp
lods
xchg
cmp
xchg
mov
call
mov
adc
sub
cmpsb
jns
neg
jle
rcll
add
sub
rclb
pop
bound
mov
shlb
shrl
push
or
out
inc
fwait
insb
hlt
hlt
cltd
xchg
pop
cs
mov
pop
mov
in
mov
out
in
clc
mov
add
mov
push
jge
mulb
or
int
pop
sarb
pop
iret
icebp
mov
cmc
mov
jno
and
sub
mov
test
stc
in
cmpsb
subl
lods
rcll
loop
fidivrl
xor
imul
cmp
jns
test
adc
iret
xchg
mov
sbb
sahf
inc
lret
in
cmp
mov
dec
dec
xor
cltd
iret
outsb
es
fisttpl
push
arpl
fistpl
in
hlt
sbb
sbb
das
push
loop
dec
sub
inc
xchg
imul
cltd
out
aam
adc
gs
jnp
push
bnd
mov
sahf
movsb
mov
pushf
mov
cmp
call
cmp
mov
push
xor
aas
jge
pop
push
inc
loopne
xchg
es
div
sub
es
movsb
loop
and
or
cmp
test
shlb
jns
jge
push
pop
dec
int
int
mov
mov
cmp
sub
pop
gs
ljmp
int3
call
dec
shrl
das
hlt
pop
mov
dec
cmp
stos
sbb
dec
rclb
int3
xor
mov
je
push
jb
dec
push
testl
ret
cmp
cmp
dec
push
faddl
cwtl
fstpl
dec
icebp
adc
adc
outsb
adc
dec
push
push
rclb
out
xchg
aad
or
cmpsb
push
mov
dec
in
mov
inc
xlat
mov
movsl
lods
mov
cwtl
es
sub
inc
jbe
into
mov
imul
xor
cmpsb
jmp
lcall
popf
rcll
dec
mov
pop
test
dec
cwtl
inc
lods
xor
icebp
and
divb
inc
push
adcb
sub
movsb
imul
jge
int3
orl
jne
mov
data16
mov
jecxz
xchg
pop
adc
mov
repnz
sbb
xchg
mov
sub
mov
sahf
outsb
mov
push
int
aaa
xor
xchg
rcrb
aam
loop
int
loop
mov
inc
test
data16
inc
mov
adc
pop
subb
xor
xchg
fs
gs
sbb
push
xchg
sahf
mov
addr16
xchg
lahf
cmpsl
cli
adc
subb
sub
mov
out
insb
sbb
mov
jo
mov
cli
and
mov
xchg
mov
in
mov
fcoml
jp
cmp
leave
ficomps
cmc
repnz
or
mov
shlb
jb
popf
inc
and
and
mov
fisubrl
pop
inc
call
cltd
add
pop
rcrb
repnz
mov
xor
sub
push
push
dec
gs
and
inc
int
sub
push
inc
mov
sbb
ficomps
inc
xlat
dec
cltd
pop
xchg
cmc
and
mov
hlt
int3
mov
pop
inc
mov
and
sbb
mov
mov
xor
pop
sub
push
jns
push
sahf
leave
movsl
xchg
int
adc
arpl
lea
sbb
mov
mull
sub
lret
inc
push
addr16
popa
movsl
lods
or
dec
cmp
push
push
xor
xchg
pop
icebp
push
leave
in
jmp
sbb
aas
jno
xchg
es
daa
push
imul
mov
sbb
scas
aaa
add
jb
addr16
mov
pop
jle
mull
inc
mov
mov
adc
push
les
into
dec
cmp
mov
mov
aam
add
dec
pop
push
aad
xchg
dec
and
mov
lock
push
imul
je
outsb
sub
pop
cmpsb
lods
pop
ja
rol
adc
dec
jnp
cmp
pop
arpl
cmp
mov
xor
cmp
lret
cmp
push
scas
xchg
pop
xchg
bound
out
push
mov
jg
divl
daa
out
xor
push
xchg
sub
dec
and
jp
shlb
dec
jae
dec
push
xor
insb
pushf
lods
repnz
popf
or
bnd
dec
mov
mov
add
xor
jl
mov
enter
cmp
stos
sbb
sbb
inc
jns
jo
inc
bound
mov
ja
mov
sbb
cmp
pop
inc
xchg
fdivs
int3
or
sbb
aam
sti
push
jg
sbb
or
ret
cs
mov
mov
les
sbb
cmp
mov
addr16
cmpsb
add
adc
inc
in
jb
repz
mov
addl
jb
repz
jns
into
fidivl
stos
dec
jns
xlat
and
test
repz
stos
leave
pop
cmp
inc
movsb
pop
xchg
scas
mov
adc
jp
loop
pop
addb
addb
pop
loopne
fsub
pop
push
xlat
int
loopne
jbe
pusha
cmpsb
xlat
cmp
aaa
add
or
dec
dec
cmp
xchg
mov
std
aam
lea
arpl
xchg
nop
es
hlt
cmp
mov
jo
push
addr16
outsb
fwait
adc
pop
dec
shlb
xchg
in
loope
loopne
es
ss
lret
mov
imul
dec
mov
add
inc
das
mov
adc
adcb
out
and
push
clc
cmp
or
fstps
jmp
jl
push
mov
cmp
mov
jp
in
addr16
jmp
jp
loopne
test
mov
mov
xchg
and
aad
loop
push
loop
mov
faddp
fcompl
aas
and
jnp
add
add
or
dec
movsb
push
jne
sti
mov
pop
jo
pop
insb
mov
xchg
inc
jmp
xchg
add
push
mov
inc
mov
aad
xor
mov
mov
fistps
adc
sub
cmc
test
mov
insl
cs
pop
sub
hlt
pop
je
mov
sbb
push
data16
stc
xchg
mov
push
scas
aad
sbb
insl
jns
xor
arpl
cs
ds
dec
insb
xchg
out
fsub
or
icebp
jecxz
sbb
xchg
stos
lods
push
pop
xchg
addr16
imul
push
pop
jnp
cmpsb
enter
fisubs
iret
das
icebp
movsl
out
repnz
fnstsw
adc
addr16
sub
sbb
popa
lds
cli
jge
es
xchg
fwait
push
mov
sub
addr16
jne
cmpsl
je
es
dec
fsubrl
inc
nop
enter
add
push
lret
or
leave
stos
sti
dec
lcall
das
lahf
or
fiaddl
popa
scas
xchg
push
mov
jge
mov
cmp
stos
jns
sub
add
std
rclb
dec
mov
inc
sub
pop
sbb
cmp
cld
push
ret
sbb
stos
int3
xchg
cmp
push
mov
mov
push
push
inc
jbe
or
out
and
pop
mov
inc
push
iret
arpl
movsb
sbb
adc
dec
dec
sbb
add
jo
xor
mov
mov
lea
shrl
insl
xchg
test
in
push
mov
ds
push
and
push
xor
pop
int3
inc
stos
jge
pop
push
mov
sti
sub
stos
loope
mov
push
in
leave
pop
mov
jbe
mov
mov
mov
xlat
push
out
xor
in
lret
mov
jbe
sub
mov
adc
data16
mov
lods
xor
push
push
mov
and
push
rcr
in
stc
int3
ss
dec
adc
mov
lods
inc
cmp
rcrb
dec
hlt
lcall
icebp
cld
fildl
aaa
push
ret
je
lods
dec
fldl
sub
ja
movsb
jl
stc
add
jg
cmp
aaa
pop
mov
ficompl
sub
shld
push
ret
int3
stos
mov
xor
xchg
scas
decl
push
rorb
ss
pop
xchg
gs
or
mov
xor
push
data16
pop
xor
sbb
stos
sub
popa
jnp
mov
imull
jae
xchg
out
movsb
in
mov
adc
mov
xchg
mov
dec
pop
movsb
rcr
push
push
push
sbb
shr
push
jne
cmpsb
sub
ljmp
inc
push
push
out
jae
pushf
out
jl,pn
repnz
sti
out
mov
roll
xor
push
lahf
or
mov
ret
movb
mov
adc
jnp
insl
sti
jae
aad
ds
scas
sub
xchg
xor
test
push
das
push
in
mov
repnz
pop
cmpsb
ror
add
out
in
in
xlat
jbe
push
cmp
push
clc
int3
and
rorl
fsubrs
mov
xchg
shlb
testb
push
inc
mov
into
cmpsb
rcll
fstl
mov
add
imul
dec
cmp
shll
mov
mov
out
stos
push
and
lock
dec
ror
sub
cmp
sub
pop
inc
inc
dec
insl
push
fildll
pushf
fisttps
ret
cltd
aaa
xchg
jb
scas
cmpsb
pusha
mov
inc
jp
jo
test
outsl
je
mov
mov
inc
add
adc
xlat
rolb
cmc
testb
add
aas
stos
shrw
into
nop
and
jle
cli
jp
sbb
cltd
rorl
push
test
pop
scas
je
das
shr
ss
aaa
inc
add
paddsb
mov
fldcw
enter
sahf
test
fwait
xor
inc
mov
jge
fwait
idivb
data16
movsl
push
and
fiaddl
push
xchg
sahf
mov
mov
mov
in
pop
mov
dec
xor
cmpsb
leave
test
push
decl
ljmp
cmp
adcl
sub
test
mov
or
add
mov
pusha
adc
jno
inc
jp
and
aaa
loopne
pusha
push
dec
sbb
leave
aas
andps
push
xchg
ja
outsl
xchg
rclb
sbb
lahf
test
push
movsb
xchg
cmpsl
push
push
mov
sub
test
jl
pop
imul
mov
sti
outsb
xor
shlb
push
movl
in
xchg
pop
push
stos
jl
sbb
mov
mov
test
loop
enter
in
leave
mov
push
or
add
add
loopne
sub
imul
sbb
test
mov
mov
into
xor
xlat
fcmovnbe
mov
loop
adc
call
mov
in
mov
inc
add
std
or
shrl
mov
leave
add
hlt
pop
popf
imul
fwait
mov
outsb
bound
mov
aaa
jnp
inc
sbb
lock
mov
outsb
ret
or
call
sbb
enter
ficoml
leave
or
push
ss
or
call
dec
push
push
outsl
cli
adc
mov
int
pushf
ljmp
mov
push
aaa
ret
inc
cmp
lret
ja
outsl
adc
pop
or
lock
in
pop
stos
repnz
mov
mov
js
cmp
xor
or
lock
push
mov
pop
jb
jns
jbe
cmp
shr
mov
mov
into
lock
in
nop
dec
xchg
dec
inc
lds
hlt
push
add
jnp
movsl
mov
mov
fmull
les
and
mov
mov
repnz
dec
cwtl
test
fistpll
sub
jmp
mov
lods
je
fbstp
mov
jb
push
and
adc
dec
orl
jecxz
adc
pop
pop
inc
xchg
das
inc
test
bound
inc
nop
sub
mov
push
decb
shll
adc
sbb
cltd
or
adc
andb
sti
pop
negl
pop
fistps
dec
shrl
icebp
or
adc
out
and
pop
mov
push
test
into
sbb
insb
adc
xchg
bound
std
movsb
aad
ljmp
sub
fucomip
and
nop
sbb
fld
repz
int
call
repnz
movsl
and
arpl
xor
imul
cmpsb
outsb
sbb
mov
add
sub
xor
cmpb
xchg
clc
addr16
inc
cmpsb
movsb
roll
xchg
and
outsb
jl
dec
test
or
and
es
in
sub
fisubrs
mov
mov
xchg
fldt
mov
idivb
jl
int3
int3
cs
dec
cmp
cmpsb
mov
push
and
adc
push
out
sbbl
out
out
or
pop
mov
dec
pushf
out
xchg
dec
pop
mov
or
adc
mov
cvtps2pd
sub
shlb
fld
dec
stos
mov
fnsave
xchg
xchg
icebp
adc
icebp
mov
xchg
lret
sub
es
out
lods
repz
daa
dec
xor
adc
sub
inc
mov
cmp
xchg
cmpsb
xbegin
mov
jecxz
lock
out
pop
stc
lods
test
xchg
clc
frstor
cmp
mov
aaa
pop
xchg
and
jne
dec
pop
loop
adc
test
fldl
divl
ja
loope
cmp
mov
mov
je
ret
repnz
xor
push
sbb
iret
pop
cltd
sbbl
in
pop
scas
enter
mov
test
cmpb
cltd
pop
jl
cmpsl
in
mov
cmp
push
aam
loopne
sbb
repz
jo
xchg
mov
and
inc
sbb
loope
pop
orb
dec
ret
inc
xchg
mov
enter
clc
movsl
push
popa
adc
push
push
jp
push
icebp
sahf
pop
sbb
inc
sbb
inc
dec
mov
stos
es
mov
dec
lock
stos
sub
mov
adc
and
push
sub
ljmp
cmpsl
inc
cmp
notl
fisubrs
lahf
xor
sbb
aad
xchg
daa
in
loope
xor
in
jno
clc
leave
add
in
or
shrl
mov
fisttps
popf
lods
insl
icebp
sbb
cltd
push
out
ljmp
int3
test
mov
mov
xchg
pop
adc
es
jb
pop
mov
pop
lea
addr16
pop
xor
mov
aas
aad
add
sub
dec
cmp
pop
icebp
mov
popa
enter
leave
add
pop
rep
or
cpuid
add
sahf
jae
cmc
or
pop
cmp
sbb
sub
stos
and
jp
jmp
std
insl
sub
pop
movsl
pop
stos
dec
scas
adc
cmp
sysenter
jbe
fdivl
jle
rorl
jle
jle
sbb
popa
xchg
dec
das
aad
xor
int
jne
mov
cmp
test
insb
bound
xchg
xlat
mov
cmp
or
dec
jge
cmp
sub
adc
push
mov
mov
pop
pop
out
bound
repz
popa
jns
repz
je
lock
xor
lds
inc
addr16
push
out
xchg
mov
adcb
inc
push
inc
inc
outsl
xchg
xchg
leave
ret
cltd
xchg
lahf
or
dec
ret
push
arpl
and
stos
sub
jg
adc
push
test
fcomps
push
adc
adc
int
push
lahf
das
aad
mov
cmp
add
add
mov
inc
jo
dec
scas
sub
in
cmp
jle
xchg
sub
jmp
push
sub
loopne
adc
inc
jl
shlb
lock
fists
xchg
mov
and
test
sbbl
addr16
cli
mov
fbstp
sub
in
mov
xor
pop
and
pop
lret
or
stos
pop
sti
outsb
or
push
push
sub
shlb
cmp
mov
bound
loop
ret
pop
lahf
nop
lods
and
xor
fwait
add
mov
icebp
add
push
xor
jmp
mov
push
push
cli
outsb
sbb
sar
mov
scas
in
add
mov
add
pop
das
adc
arpl
mov
lods
fwait
lahf
hlt
xor
mov
mov
xor
mov
xor
and
cs
sahf
lret
faddl
jp
fs
pop
lret
rcll
sti
data16
lcall
iret
pop
jbe
xor
push
sub
sbb
mov
aam
das
rorb
outsb
loop
in
loope
inc
std
or
iret
adc
inc
pop
jecxz
loope
adcl
ja
imul
sbb
mov
xchg
mov
dec
mov
cli
sahf
leave
stos
xchg
insb
push
jmp
xchg
incl
adc
pop
cmp
push
in
orb
fwait
or
xchg
not
fstpl
lret
pop
adc
insb
fsub
ret
aad
sahf
fsubrs
inc
lods
scas
in
sbb
push
or
es
xor
add
pop
lods
pop
ror
mov
jo
jae
xchg
jnp
cld
jns
int
imul
sbb
mov
sti
dec
inc
icebp
add
xchg
push
daa
fdiv
jg
sub
seta
push
fists
xchg
adc
cli
xchg
cltd
jne
adc
xchg
je
push
xor
lret
js
hlt
jecxz
scas
adcb
sub
push
daa
jmp
push
bound
pop
out
std
mov
testl
jbe
scas
into
notb
adc
cmp
popf
sub
sub
xchg
mov
pop
outsb
lret
iret
stos
out
test
mov
mov
xchg
cli
into
popf
sub
jp
inc
pushf
xchg
loopne
add
or
xchg
pop
xorl
lds
pop
and
movsl
sub
jbe
in
aam
jle
add
pop
and
push
jnp
arpl
lret
mov
pop
add
jnp
das
addr16
inc
sarl
cmp
push
enter
inc
stos
jmp
mov
negb
clc
sub
divb
jo
shl
or
xlat
repnz
adc
jge
bound
sub
mov
lret
xchg
mov
cmp
and
add
addr16
stos
ror
push
mov
xlat
imul
fdivrs
add
dec
jno
and
mov
jle
push
add
mov
aas
icebp
daa
push
mov
aam
mov
jle
jp
pop
mov
loopne
adc
xlat
and
push
xchg
lahf
movsb
out
adc
popa
aam
test
icebp
ret
out
jbe
dec
std
ds
jbe
in
dec
sub
rcrl
cmp
mov
hlt
inc
mov
cmp
out
scas
mov
not
lahf
pop
inc
push
mov
xor
ds
movsl
or
mov
addb
ss
sbb
sar
cmpsb
out
mov
dec
pop
jl
arpl
xchg
out
push
lock
and
dec
mov
lret
mov
out
add
loope
into
fs
push
std
xlat
jg
mov
daa
aaa
sub
lcall
inc
scas
sub
int
mov
xor
jb
adc
xor
mov
fdivr
cmp
movsl
or
les
ljmp
adc
ficomps
imul
loop
je
scas
out
repz
mov
filds
push
jo
hlt
jmp
lods
cmp
stos
and
jno
lock
xor
arpl
cmp
mov
in
add
ret
push
stos
gs
or
mov
jl
das
xchg
cmpsl
mov
lods
hlt
inc
jle
das
insl
sub
xchg
lods
sub
cmpsl
add
pushl
fisttps
nop
mulb
loop
rorl
cld
fists
lock
jne
mov
hlt
outsb
imul
lret
or
ds
mov
push
mov
iret
cmp
cmp
or
inc
stos
mov
and
insb
sbb
or
mov
dec
js
jge,pn
rolb
scas
dec
xchg
sub
sub
jno
cmp
mov
jmp
ds
jo,pt
inc
pop
sbb
sub
inc
mov
imul
leave
test
push
sbb
jae
and
xor
insl
insl
adc
inc
lret
shl
dec
add
mov
std
cmpb
mov
addb
out
inc
pushf
out
jo
dec
pushf
pop
xor
mov
cmp
cmp
popa
pop
or
add
mov
test
push
idivb
push
mov
jge
or
cmc
inc
sahf
inc
jge
nop
aad
inc
jb
into
adc
das
dec
pusha
adc
sub
inc
les
mov
rcl
jae
xor
sub
cmp
and
lods
pushf
pop
push
out
loopne
or
mov
cmp
and
insl
ret
icebp
jge
out
xchg
inc
jns
add
clc
negb
pop
xchg
jmp
cmc
scas
pop
push
xchg
dec
xor
pop
rorb
fstps
dec
jns
iret
jle
lock
call
int3
fisubrl
sti
shrb
push
scas
jmp
imul
cld
lcall
jl
iret
orl
shlb
hlt
sub
inc
jb
insl
mov
dec
mov
push
in
mov
jo
negb
add
add
pop
cmp
syscall
scas
arpl
jne
xchg
iret
adc
packuswb
push
shrl
mov
and
mov
sbb
data16
repz
dec
int
in
pushf
test
add
push
cmp
test
arpl
ja
sub
dec
and
scas
rcll
pusha
mov
mov
test
lds
mov
jmp
add
cmpsl
in
add
pop
xchg
xor
add
out
and
arpl
push
mov
arpl
inc
jecxz
pop
cmp
cmp
fnstenv
les
mov
sub
jne
test
push
das
sbb
lret
insb
loop
sub
xchg
xchg
les
sub
lock
int3
jge
push
and
into
repnz
dec
fcmovnb
cmp
fiadds
aaa
sub
jl
fsubr
and
ja
pop
mov
inc
mov
cltd
andl
arpl
jo
loopne
test
and
sti
pop
rcrb
pop
mov
or
cli
fsubrl
sarb
das
shl
ja
mov
repnz
fdivrl
in
adc
mov
jae
adc
sbb
scas
cmc
push
mov
into
push
mov
mov
lods
jle
test
in
rcrl
flds
sti
inc
iret
add
mov
sub
out
mov
lret
lcall
fidivrl
cmp
cmc
addr16
pop
inc
push
out
add
adc
mov
pop
add
add
mov
sahf
xchg
bndstx
jnp
sbb
adc
dec
outsl
mov
mov
jecxz
adc
cwtl
xchg
mov
mov
cmpsl
and
inc
jno
stos
nop
push
xor
das
cmp
cs
xlat
in
imul
popa
inc
outsb
int
scas
fidivl
jmp
mov
aad
mov
cli
out
insl
push
xor
ret
cs
xchg
ja
pusha
jl
adc
into
fsts
lahf
jmp
push
scas
rcrb
dec
orl
inc
inc
cmpsl
sahf
xchg
pop
and
out
jno
loopne
mov
leave
pop
orb
mov
sub
mov
stos
shl
push
push
fld
test
or
dec
lods
mov
pop
and
push
icebp
sub
dec
push
mov
les
fwait
aad
ficoml
cmc
xchg
mov
xchg
lea
xchg
dec
sub
xchg
cmp
insb
loope
fwait
inc
data16
and
scas
in
enter
push
les
cmovp
mov
test
or
or
lret
je
cmpl
idiv
imul
test
addl
sarb
and
sbb
or
pop
sub
rcrb
push
add
lods
test
jmp
ror
push
rclb
in
ja
add
sarl
sub
pop
dec
loop
mov
fldcw
rorb
adcb
mov
or
jno
pop
int3
lahf
jmp
ss
xor
repnz
testb
adc
andl
test
or
add
jno,pt
push
jae
call
push
cld
sbb
nop
cs
je
sahf
fnstenv
push
lods
mov
sahf
out
or
push
jle
mov
out
lock
stc
pop
loope
enter
mov
inc
sub
mov
arpl
ds
lret
jl
into
test
mov
sbb
xchg
hlt
xchg
inc
and
push
sub
push
cwtl
add
xchg
mov
js
mov
xchg
sub
mov
shr
xchg
push
movsl
sub
fnstsw
add
or
inc
push
lcall
xchg
cwtl
daa
fisttpl
cmc
outsl
mov
mov
push
mov
jg
rol
sbb
stc
cmc
sub
mov
cmp
movsb
sub
sbb
cs
int
imul
sbb
mov
bound
dec
add
fidivl
xorl
sub
out
push
cmpsl
ret
scas
dec
repz
pop
pop
jecxz
loop
rcll
in
ret
hlt
lcall
fldl
push
dec
arpl
mov
mov
cmp
lea
sbb
cmp
sbb
stos
mov
in
fisubrl
in
or
ljmp
push
mov
push
dec
jecxz
mov
push
cli
out
aad
ret
mov
sub
xchg
aas
fs
pop
cmova
lretw
jg
mul
popf
pop
std
cmp
dec
jg
out
nop
mov
push
sub
push
xchg
push
sub
rorl
cmpsl
inc
push
divb
push
sbb
imul
test
xor
jb
lods
adc
add
and
fbld
jne
or
int
iret
xchg
cltd
icebp
je
in
out
jb
mov
and
mov
popa
sbb
popf
push
xchg
mov
add
cmp
pop
insl
aaa
push
adc
rcll
mov
adc
or
and
std
fwait
test
movsb
mov
sbb
add
jl
dec
mov
push
insb
std
sahf
rorl
fists
mov
pop
mov
es
dec
push
cmp
push
xchg
leave
jno
push
std
xchg
in
hlt
push
push
ja
sbb
popa
test
cmp
lods
int3
mov
and
push
jmp
xchg
and
jno
mov
xchg
sarb
pop
in
pop
popf
sub
bound
and
xchg
jo
and
cmp
xchg
xchg
enter
lock
adc
fistl
xor
add
push
or
mov
adc
lods
or
mov
mov
in
mov
cmp
addr16
scas
jmp
jo
push
popw
iret
cmp
fsubrl
fisubrl
adc
rcr
bound
in
push
and
mov
pop
call
into
inc
in
jo,pt
xchg
mov
mov
cld
roll
ljmp
daa
cwtl
jnp
or
fstp
mov
fisttps
aad
and
roll
push
test
test
scas
arpl
mov
jle
lcall
mov
faddp
inc
clc
add
adc
jnp
mov
jae
add
cmc
jnp
jnp
repz
and
adc
jae
aaa
and
mov
mov
out
mov
mov
in
sub
inc
sbb
test
rorb
stos
pusha
andb
pop
add
and
fldt
nop
ss
mov
es
mov
je
push
mov
push
cwtl
dec
incl
pop
std
push
mov
push
lret
test
mov
pop
addl
mov
in
jmp
test
jbe
pop
adcl
roll
mov
movsb
xchg
pop
dec
jbe
stos
outsb
and
push
mov
inc
jmp
cmp
test
xchg
je
out
cmp
insb
das
mov
scas
xlat
gs
cwtl
lods
insb
imul
jne
cmp
js
addr16
divb
fadds
jmp
jmp
jecxz
push
push
movsb
incb
xchg
ret
ret
jp
scas
push
mov
jnp
fcomps
xor
fstpl
add
or
pop
insl
mov
sub
ds
sbb
cmp
push
sub
icebp
mov
out
lcall
jge
push
cwtl
xor
lods
fucom
dec
dec
push
sub
inc
mull
daa
push
int
enter
dec
xchg
insb
sbb
xchg
dec
aad
fucomip
hlt
test
sub
or
ret
aam
pushf
inc
arpl
sub
adc
sub
inc
lret
out
enter
add
mov
lock
cmp
sbb
sbb
adc
pop
xor
lea
mov
loope
out
and
sbb
xor
loopne
hlt
sub
jns
les
inc
aam
rcr
jecxz
and
stos
inc
arpl
mov
xchg
out
jns
jo
cmpsb
mov
sub
call
push
fwait
and
mov
or
fisttps
out
add
int3
mov
stos
leave
out
in
inc
fldl
pop
lods
mov
cmp
jge
jg
mov
ss
mov
scas
xchg
movsb
push
inc
jmp
test
cmpsb
push
lret
outsl
jnp
jnp
mov
pop
data16
std
imul
dec
insb
movsb
push
int
repnz
xor
xor
int3
hlt
aas
aaa
mov
subl
sbb
mov
testl
cltd
cld
sbb
pushf
mov
sbb
mov
mov
cmp
xchg
and
xor
fmuls
xorb
lea
pop
aas
and
testb
push
lret
pop
dec
mov
and
inc
bound
sbb
mov
mov
and
jecxz
cmpsb
scas
aaa
aas
sub
leave
sub
std
inc
push
push
test
xor
test
daa
xor
fimull
jle
adc
orl
ds
mov
adc
sbb
mov
pop
lods
adc
push
dec
cli
std
shll
pop
and
adc
movsb
push
cmpsl
repz
fidivs
push
xchg
inc
sbb
push
and
jbe
push
js
rcrl
or
push
pop
or
rorb
push
out
pop
push
outsb
je
sti
nop
sub
xchg
inc
dec
inc
inc
mov
loop
xchg
mov
popf
aaa
jb
xchg
xchg
push
jp
push
xor
scas
sub
and
mov
inc
icebp
aaa
mov
jp
outsl
shl
xchg
in
inc
out
fsin
imul
sbb
imul
cli
adc
mov
cmp
mov
ljmp
dec
adc
cmpsl
xchg
idivl
sbb
frstor
inc
pop
mov
cmp
jl
lret
imul
fstps
outsl
movsb
cmp
inc
mov
cmpsl
mov
aaa
pop
xchg
inc
ss
je
push
pop
or
shll
sbb
call
pop
adc
mov
or
fstps
push
sbb
mov
sub
add
imull
insb
mov
ds
iret
sti
xchg
call
ficompl
mov
xchg
or
inc
push
sahf
movsb
push
pop
xor
sahf
test
stos
loopne
or
xchg
ja
leave
ss
jb
cwtl
xlat
cmp
movl
stos
cli
dec
jno
push
sub
pushf
mov
arpl
lock
inc
fmull
shl
mov
nop
xchg
cld
in
mov
pop
sub
lds
repz
and
ficoms
xchg
int3
mov
lock
test
or
popa
jmp
sti
cld
insl
fcoms
aam
cmp
sub
imul
lea
dec
and
mov
push
mov
sbb
test
push
jb
rorb
dec
in
data16
push
mov
out
xor
ficomps
mov
push
and
or
stos
xor
mov
dec
add
dec
movsl
rorb
imul
sbb
push
xor
test
lock
sahf
scas
leave
or
ljmp
aas
sub
cmp
jne
stc
jne
movsl
mov
movsl
scas
sub
andb
jl
aaa
clc
cmp
fwait
int3
sbb
addl
lods
mov
pop
lock
fdivrs
mov
popaw
gs
cmp
lods
insl
lahf
int3
and
repz
stc
sbb
mov
jp
aas
jg
shll
scas
mov
iret
repz
je
je
test
lock
pop
mov
stos
xchg
fwait
xorb
jle
xchg
jae
jecxz
add
mov
mov
decb
pop
inc
shr
iret
idivl
mov
dec
jg
sahf
das
cld
mov
fnstenv
jle
adc
mov
pop
stc
incb
int3
ret
rclb
lcall
leave
or
adc
mov
xchg
cwtl
test
in
jp
mov
dec
shlb
loop
stos
xor
movsb
xchg
mov
mov
lds
pop
sbb
dec
int3
loop
roll
jge
or
iret
in
jne
bound
mov
mov
xor
lret
loop
vsqrtss
pop
ret
loopne
or
sbb
movsl
out
dec
adc
jge
xchg
push
sub
dec
ficoms
or
mov
test
add
mov
in
cmp
mov
fiadds
cwtl
std
fwait
add
clc
ficomps
cmp
mov
mov
cmp
es
dec
int
mov
jo
and
arpl
movsl
xchg
out
sub
inc
lahf
sub
mov
loop
fs
sbb
aad
xchg
lret
daa
fsubrl
jl
push
pop
arpl
sti
pop
outsb
sahf
fisubrl
fdivl
cs
out
jo
imul
inc
add
sbb
cwtl
mov
fwait
mov
xor
movsb
mov
clc
xchg
pop
push
lcall
and
push
jae
push
shr
inc
or
cmp
or
lahf
and
es
les
xchg
pop
and
cmp
mov
repnz
and
mov
dec
jb
sbb
push
mov
xor
repnz
data16
push
inc
cli
insl
add
xlat
fwait
jge
test
aaa
hlt
stos
sbb
das
xchg
and
xlat
mov
std
call
outsl
imul
lods
xor
lcall
idivl
les
hlt
xlat
pop
dec
cmpb
sbb
mov
push
pop
mov
in
push
push
movsl
in
fadds
xchg
mov
inc
xor
adc
mov
mov
mov
push
jge
lods
push
jo
dec
mov
xchg
aad
jp
hlt
js
cli
xchg
mov
into
add
lret
add
repz
jl
out
sub
and
nop
sub
rorb
ja
lods
mov
mov
push
lahf
es
cltd
pop
inc
mov
push
mov
arpl
or
adc
add
incb
cmpsl
add
jne
jno
push
inc
adc
je
bound
dec
lea
mov
pop
jnp
stos
and
addl
jno
mov
lea
sub
pop
ljmp
cmpb
pop
int
in
xor
inc
xchg
cltd
sub
mov
cmp
je
ljmp
outsl
dec
pop
sbb
lret
xchg
out
or
cli
xchg
push
fsubr
test
or
hlt
pop
jg
lods
icebp
out
jns
cmpsb
fstpl
mov
popf
push
pop
scas
or
ret
lret
xchg
push
frstor
dec
mov
sbb
aam
add
cmp
xchg
aad
shrb
out
and
sub
mov
adc
test
jo
sbb
movsl
lret
dec
lea
xchg
aad
fldcw
outsl
inc
fwait
push
arpl
jmp
mov
ficompl
in
out
adc
inc
add
mov
pop
fcoml
push
mov
or
inc
pushf
outsl
xchg
punpckhbw
xor
and
insb
pop
push
and
or
and
dec
inc
aam
out
push
ret
fwait
jnp,pn
cs
adc
add
in
pop
push
add
mov
flds
jle
mov
push
aaa
addr16
add
xor
xchg
icebp
xchg
mov
push
pop
and
pop
and
fs
cltd
xor
dec
and
and
adc
inc
add
push
jae
sbb
lods
or
mov
adc
jbe
mov
repz
leave
mov
in
xchg
pop
outsl
jle
out
cmp
push
mov
jecxz
inc
adc
xchg
dec
ds
cmp
popf
pop
cmp
cmp
out
int
into
mov
jg
test
pushf
inc
xor
mov
stc
mulb
imul
es
int3
out
out
sub
xlat
adc
shll
fidivl
push
xchg
es
mov
jo
push
xchg
push
ds
lods
jmp
dec
rcrb
sarl
cmpsb
xchg
jb
cs
push
jge
push
pushf
mov
pop
shr
pop
pop
jecxz
mov
popa
leave
les
jg
out
fists
xor
cmp
xor
or
mov
sub
out
std
push
pop
iret
mov
inc
outsb
ret
cmp
fmull
pushf
jnp
fstps
aad
inc
jg
call
mov
pop
mov
mov
rclb
fcoml
xchg
push
movsb
cmp
stos
mov
mov
pushf
movsb
mov
mov
addr16
pushf
cwtl
imul
mov
dec
nop
addr16
adc
inc
nop
cmp
notb
push
jmp
inc
jp
adc
or
add
dec
ljmp
push
loope
sub
imull
xchg
push
int
dec
addr16
stos
scas
inc
jo
jle
cmp
sahf
mov
ret
nop
das
pop
repnz
jge
fisttpl
out
pusha
loopne
addr16
test
and
shrl
xchg
shll
dec
mov
mov
cmp
dec
out
insl
or
addl
mov
sub
sahf
cld
xor
fcoml
shll
dec
cmp
loopne
imul
add
jecxz
mov
out
xchg
pop
rcll
xlat
int
aaa
int
or
adc
and
pusha
or
mov
fsubrl
sbb
aad
jmp
lock
mov
sub
rcrb
push
mulb
push
push
shlb
cmp
nop
leave
sub
adc
leave
dec
or
lea
mov
cmc
popf
fldcw
xchg
insl
mov
xchg
pop
push
and
jns
xchg
xchg
add
sbb
hlt
inc
sub
outsl
in
push
cmp
bound
or
sbb
adc
fisubrs
or
ds
cs
push
arpl
cmpb
loop
pop
cwtl
mov
inc
jle
in
into
nop
scas
dec
jl
lods
leave
int3
in
out
sub
sbb
lock
mov
in
push
std
push
push
repz
cmp
push
pop
cmp
and
sub
fucomp
ret
leave
cmp
pushf
push
add
pop
popa
out
in
call
es
jae
rclb
sbb
mov
add
loope
iret
jo
xchg
int
sub
inc
pop
jns
pop
or
icebp
fsubrs
pop
aaa
jg
sbb
loop
push
cli
mov
push
xchg
pop
popl
jge
shl
pop
or
pop
rcr
jo
in
mov
aam
popf
repz
shlb
sahf
aas
gs
pop
xor
lret
aaa
or
arpl
push
push
test
loope
adc
pop
mov
mov
xchg
fisttps
pop
adc
fistpll
fnstenv
jmp
push
inc
mov
inc
aaa
jnp
test
dec
push
xchg
xchg
pop
loop
or
or
push
dec
jle
repz
call
sub
push
adc
pop
fs
gs
lods
int
shll
xchg
or
jnp
mov
iret
jle
and
cs
inc
adc
js
idivl
pop
dec
enter
push
stc
jb
push
out
test
and
and
dec
jb
mov
stos
xor
cwtl
loop
mov
adc
cmp
es
pop
xor
dec
stos
gs
sub
dec
lahf
sub
test
jb
repz
mov
cmp
lcall
mov
sbb
cmp
cld
pop
pop
push
stos
imul
sub
adc
leave
sahf
sahf
daa
movsl
shl
jl
mov
push
dec
jecxz
jmp
sahf
in
push
adc
in
out
pop
mov
repnz
push
test
xor
arpl
push
dec
insl
imul
and
mov
loopne
fsub
roll
inc
lcall
sbb
rcrl
iret
rclb
seto
or
xchg
add
lret
jb
push
cwtl
fsubl
roll
cmp
ret
cmp
dec
and
out
pop
cmp
dec
mov
ljmp
xor
sub
push
fstp
lds
call
add
ret
fcoml
les
std
arpl
sahf
lods
mov
pop
or
movsl
and
int3
or
pushf
sub
scas
into
notl
int
dec
dec
in
xor
cmp
cmpsb
lcall
mov
mov
int
jns
pop
addr16
jl
pop
shl
lret
in
pop
stc
xchg
sbb
xchg
xchg
hlt
xchg
cli
imul
jbe
mov
test
je
pop
es
stos
adcb
xor
jns
mov
xchg
push
push
dec
inc
call
into
arpl
pop
pop
dec
cmpsb
jne
and
lods
jnp
rclb
mov
cmp
xchg
cmpsb
mov
lock
repnz
jp
mov
fidivl
cs
rol
scas
push
mov
movsl
mov
xchg
jle
sub
sub
mov
and
mov
ficoms
push
sub
ret
movsl
repz
mov
push
loope
mov
je
test
dec
adc
adc
mov
fisubrl
pop
stos
mov
push
pop
lds
ljmp
sbb
mov
cmp
rcrb
add
in
lahf
icebp
pop
mov
in
jno
xor
xchg
call
or
xchg
or
test
fmull
cmp
out
jp
test
dec
insl
cwtl
mov
in
push
lahf
ja,pn
lcall
xchg
push
sahf
sub
mov
js
jno
push
sbb
sbb
inc
outsl
mov
jnp
sti
push
cltd
shlb
add
add
mov
aas
insl
mov
out
inc
aad
mov
ret
push
push
leave
lock
rcr
xor
dec
jle
push
test
push
inc
inc
dec
mov
pop
aaa
sub
pop
cli
out
mov
rorl
inc
call
ds
addr16
jl
imul
in
test
inc
lret
stc
xor
mov
mov
call
sub
xchg
mov
std
inc
jns
xchg
pusha
mov
push
jmp
pop
inc
divb
mov
jns
add
adc
xorb
faddl
test
rcll
or
lds
andl
sub
xchg
xchg
pop
arpl
xor
adc
pop
mov
jl
sub
out
inc
jp
test
or
push
sub
stc
adc
bound
fsubrs
xlat
adc
and
movl
cs
mov
jbe
int3
cmp
pop
pushaw
jae
sbb
dec
andb
jg
fwait
movsb
cld
mov
test
jecxz
dec
fldenv
jp
add
sub
jg
sbb
out
rep
outsb
xchg
iret
std
pop
and
in
sarl
js
rorb
ja
mov
outsb
shll
inc
pop
xchg
out
or
push
jns
rcrl
stc
inc
clc
mov
pop
andb
fadds
mov
enter
mov
mov
push
insl
sub
in
pop
dec
mov
jne
mov
sbb
jns
cmp
or
sbb
pop
dec
out
int3
pusha
push
test
mov
mov
mov
xlat
andb
mov
xchg
mov
mov
xchg
jbe
and
dec
pop
xor
push
jnp
mov
inc
push
shrb
out
int3
adc
imul
imul
imul
dec
mov
dec
fwait
std
dec
movsb
not
mov
mov
rorl
or
sbb
dec
sti
out
daa
ljmp
cwtl
jmp
daa
xor
jecxz
jo,pt
shl
incb
stos
popa
repnz
xchg
or
dec
mov
mov
hlt
vmread
lret
pop
jg,pn
push
pushf
jge
cmpsb
push
push
jbe
in
les
repnz
test
fsubp
cmp
jecxz
jbe
pop
dec
icebp
popf
scas
popa
pop
jecxz
ss
jns
mov
testl
pop
cmp
cmp
lret
xor
imul
mov
bound
jge
xor
sub
or
mov
in
ljmp
mov
add
xor
push
fdivrs
xchg
pop
imul
sbbb
jl
or
pop
in
popf
int
scas
pop
mov
movsb
in
stos
inc
sub
popf
dec
pop
bound
xor
jnp
jmp
sbb
cmp
fucomp
shl
loop
cltd
xor
hlt
inc
add
adc
scas
inc
rolb
ds
incl
mov
mov
push
arpl
cmp
push
imul
fimull
cmp
inc
sub
jo
incb
push
mov
lret
incl
test
jmp
mov
add
push
jno
repnz
inc
inc
addr16
arpl
xchg
fcomps
mov
cltd
test
mov
popf
mov
xor
adc
aam
hlt
mov
clc
or
cli
inc
mov
repnz
lods
sub
dec
or
rcll
push
test
xor
dec
xor
inc
sub
sub
jl
inc
aas
push
mov
add
loopne
cld
add
jge
in
mov
aam
xchg
lret
sub
aam
out
lds
xchg
fabs
lcall
stos
jg
sbb
adc
jmp
or
xor
cmpsl
xchg
imul
jecxz
imul
jmp
pusha
fbstp
out
lock
xor
stos
mov
sbb
pop
and
pop
xchg
add
cmp
je
popf
adc
sub
ficoms
inc
into
test
mov
sbbl
in
insl
mov
lcall
das
call
nop
mov
shrb
cmp
add
xchg
jne
sti
popa
andb
jp
aad
add
push
insl
and
add
sub
sbb
les
dec
rorl
sbb
mov
and
rol
push
or
loop
push
ljmp
and
jle
and
aaa
pop
arpl
out
jns
cmpsb
mov
into
idivb
mov
adc
xchg
ljmp
sahf
mov
mov
lea
mov
sub
popf
pop
push
dec
andb
repz
jnp
push
mov
aaa
in
sbb
mov
jmp
loop
test
pop
stc
jae
adc
sahf
ret
mov
pop
cmp
mov
mov
pusha
mov
lret
fldenv
push
cmpsl
jno
mov
fdiv
inc
outsl
mov
inc
push
jns
adc
rolb
test
data16
dec
mov
xchg
xchg
inc
add
in
xchg
or
sub
or
aad
dec
pop
cmc
aaa
cmp
fcoml
in
mov
ja
adc
lds
push
cs
repnz
push
jns
out
fisttps
cmpsl
jb
lret
dec
pop
pusha
inc
jmp
idiv
js
jg
es
pop
add
jno
adc
cltd
in
cltd
popf
adc
xchg
cmp
mov
lret
lods
pop
iret
out
stc
jae
hlt
lea
aas
aad
xchg
imul
mov
ss
add
filds
dec
sub
scas
ljmp
inc
in
and
or
inc
ss
or
sbb
mov
or
cmpsb
in
xchg
mov
in
xchg
and
mov
mov
cli
sub
xlat
int3
fwait
fs
sbb
out
out
push
or
lcall
cmp
pop
iret
mov
aas
mov
push
xor
cmc
xor
jle
mov
lods
fidivrl
sub
push
shll
pop
xchg
imul
leave
dec
push
inc
rclb
int3
leave
or
je
push
js
lods
or
repnz
incb
jbe
rcll
imul
cli
xchg
sbb
sahf
push
ss
xor
mov
cmpsl
sub
lret
push
jmp
mov
popf
pop
adc
sbb
inc
xchg
movb
jae
mov
pop
mov
and
xor
out
faddl
lods
push
outsl
xor
push
outsb
ja
aam
insl
lock
mov
mov
cmp
inc
add
sti
xchg
aad
cld
stc
jmp
js
pusha
push
xchg
or
inc
xor
and
mov
or
pop
hlt
loopne
add
ds
sti
adc
xor
popa
jmp
xchg
push
cwtl
fimull
sub
lahf
inc
roll
sub
mov
mov
jb
push
push
scas
add
mov
mov
stos
fcmovne
lds
xchg
lahf
imul
mov
pop
xor
orl
popa
lock
addr16
xchg
adc
mov
adc
aam
or
stos
sub
xchg
js
mov
mov
cmp
xor
mov
adc
xor
addr16
test
and
bound
jo
ss
jmp
ret
das
cmpsl
rorl
scas
stos
pop
xchg
mov
iret
mov
aas
push
push
les
pop
cmp
mov
daa
cmp
push
sub
lods
pop
stos
sbb
push
dec
xor
loope
adc
leave
fisubrs
clc
les
mov
sub
lret
inc
jb
insb
dec
jb
sub
inc
stc
xlat
pop
pop
hlt
pop
cli
outsb
inc
leave
data16
insb
mov
stc
popf
pop
fidivrl
dec
jge
lret
adc
pop
mov
add
test
mov
je
movsb
push
or
push
xor
xchg
outsl
pusha
xchg
jbe
mov
stos
or
gs
inc
mov
add
mov
test
lret
adc
cmpsb
fbstp
adc
ja
add
fcomps
mov
add
repnz
mov
fnstsw
dec
repz
mov
rcl
jg
mov
sti
imul
xchg
test
fs
ds
mov
stos
fdivp
outsl
stos
push
mov
pop
fmuls
add
gs
push
push
or
xchg
inc
add
fcoms
and
xchg
inc
lahf
mov
jmp
icebp
int3
fcompl
in
lock
mov
fimuls
adc
jge
adc
fnsave
int3
mov
outsl
mov
insl
cmc
mov
mov
dec
xchg
cmpsl
les
pop
inc
dec
jbe
aas
sbb
cltd
add
fwait
mov
subl
dec
not
jbe
cmpsb
mov
out
xchg
hlt
jns
cwtl
das
imul
and
add
inc
nop
iret
pop
mov
out
imul
fistps
or
jno
push
notb
mov
repnz
aas
dec
inc
or
mov
inc
and
or
cmc
pushf
lret
movsbl
mov
mov
or
int
je
ss
popf
ljmp
repz
ja
jne
jge
mov
fimull
sbb
imul
push
cs
ljmp
push
cmp
mov
cs
adc
add
adc
and
xor
cmpsl
cmp
jae
xchg
jl
orb
mov
movsl
cmp
lds
push
loopne
inc
dec
adc
out
test
xchg
inc
xor
jb
mov
fs
sbbb
cmc
jo
mov
xchg
lock
lret
in
mov
add
fwait
mov
scas
and
rcrl
je
mov
cmp
and
ret
jns
xchg
xorb
mov
gs
sub
cltd
mov
lods
mov
dec
cmpsl
xchg
sub
pop
inc
push
xchg
or
dec
mov
mov
mov
pop
test
ffreep
mov
dec
shlb
hlt
repz
mov
ljmp
dec
add
insl
push
pop
xor
sub
fldcw
fsubrl
mov
test
jg
xchg
push
cmp
xchg
sbb
mov
inc
mov
andb
pop
popf
mov
jb
adc
nop
lods
dec
sti
scas
sbb
jle
outsl
sahf
repnz
sbb
loope
bound
jb
xchg
es
mov
or
mov
frstor
mov
push
push
or
xor
dec
xchg
loopne
scas
lahf
imul
fisubl
adc
pop
icebp
iret
add
mov
inc
loop
dec
icebp
and
scas
jnp
fsubs
in
jne
push
push
nop
push
mov
sti
jmp
in
sub
pop
arpl
sub
xchg
aaa
int
dec
xchg
lods
pop
push
aad
fs
movsl
push
stos
out
pop
pop
fsubr
dec
iret
pop
test
xchg
loop
rolb
test
fmuls
stos
xor
nop
icebp
mov
fistps
aaa
pop
repz
arpl
xor
in
xchg
cmc
jmp
loope
or
imul
push
mov
jmp
shll
lods
pusha
imul
pop
xchg
adc
sbb
dec
mov
shll
ss
push
cmp
jg
xor
fildl
jmp
mov
jge
mov
repz
inc
cmpsl
fisttpl
test
sarb
mov
mov
xor
hlt
mov
inc
loop
mov
xor
mov
inc
adc
enter
xchg
ljmp
mov
in
insb
and
or
cmp
cwtl
cwtl
rcrl
and
add
pop
fs
lock
insl
scas
js
cmp
xchg
mov
adc
push
add
xor
or
xchg
pop
aam
lds
pusha
sub
leave
in
movsb
pop
loope
xlat
leave
jg
test
test
and
xchg
imul
or
popl
js
fnstcw
inc
mov
negl
add
mov
or
or
pop
mov
fildll
push
mov
mov
sub
repz
mov
fidivs
pop
xor
cmp
adc
mov
divb
gs
icebp
mov
cltd
bound
jae
sbb
ss
fsubr
inc
or
fimuls
mov
xor
fwait
stc
jb
xor
imul
mov
sti
mov
xor
out
xor
aam
cld
or
pusha
jg
xor
fildll
and
pop
out
cwtl
jle
lcall
sub
fistps
test
call
cli
inc
mov
jo
jl
mov
xlat
mov
jne
mov
sbb
js
test
jge
inc
pop
adc
pop
jl
sbb
or
sub
in
subb
xor
mov
fs
xor
lods
jl
outsb
pop
hlt
es
push
stc
scas
mov
stos
push
popa
inc
mov
arpl
cmpsl
aad
in
pop
xor
xchg
int3
mov
sbb
loop
mov
xchg
int3
cmpsb
and
repz
popl
sbb
mov
mov
mov
sub
pop
movsl
cmpsl
in
jb
sub
fs
sbb
push
addps
js
dec
mov
shrl
dec
sbb
es
aad
jae
cmpl
ffreep
cmpsb
pop
mov
sub
xchg
push
ret
jo
mov
rolb
pop
dec
sbb
add
aad
mov
push
pop
iret
enter
addps
jp
jne
ja
test
xchg
jno
cli
loope
lock
inc
clc
push
mov
ljmp
xlat
movsb
or
xchg
das
mull
nop
and
jne
sub
fldcw
adc
cmp
fldcw
sbb
mov
insl
mov
movsl
imul
stc
mov
in
dec
jo
dec
adc
ljmp
cmp
int3
and
inc
jp
in
add
jnp
ds
mov
xchg
pop
pop
sub
mov
pop
popa
push
shrl
mov
ss
aaa
std
xchg
jae
sbb
push
pusha
ficoms
clc
mov
sub
dec
dec
push
jmp
stos
push
fs
pop
data16
mov
andl
test
xchg
cwtl
popa
and
xchg
push
vpsrlw
pushf
into
bound
div
fst
jle
inc
imul
dec
sbb
sarl
into
sarb
shl
ss
pop
jno
push
adc
cmp
mov
add
lahf
push
std
int3
sub
or
shrb
dec
nop
or
jae
xlat
push
aaa
rorb
cs
sub
mov
adc
je
mov
movq
pop
jecxz
repz
int3
leave
imul
inc
ds
inc
movsb
and
cld
ds
icebp
stc
push
mov
or
xchg
out
js
mov
pop
cmp
scas
pushf
in
std
or
daa
inc
cmp
dec
sbb
cli
jecxz
xchg
ret
jbe
rol
movsb
add
mov
dec
xor
mov
cli
add
fbld
or
aad
or
bound
xchg
insl
xchg
xor
movsl
mov
mov
movsl
xor
or
add
mov
pop
pop
xchg
pop
leave
mov
iret
xchg
insl
std
pop
dec
outsl
jl
add
shlb
dec
fdivr
xor
jne
xchg
std
ss
cmp
stos
test
inc
loopne
lock
jge
outsl
sbb
rolb
iret
inc
jmp
jmp
mov
pop
inc
sbb
mov
mov
xlat
sub
fwait
push
loope
xchg
jmp
ds
xchg
mov
sub
jb
outsb
ds
insl
pop
shr
dec
sbb
add
push
mov
jmp
scas
ficompl
lock
test
push
jnp
pushf
push
jb
xchg
and
adc
jno
lret
jo
lock
adcb
sub
adc
ja
decl
add
std
cmc
ds
or
sub
push
in
test
hlt
arpl
jmp
pop
sbb
pop
mov
mov
cli
ret
adcb
sbb
scas
sub
xchg
add
insl
and
imul
aaa
shll
test
into
mov
mov
jmp
imul
sub
pop
mov
call
add
cwtl
insb
xchg
mov
mov
roll
lret
lahf
pop
xchg
out
outsb
inc
aad
cmp
mov
mov
lcall
sub
punpcklbw
aam
mov
push
push
addr16
popf
ret
nop
fimuls
repnz
aas
pushf
xchg
adc
daa
loopne
popa
fdivs
out
cmp
push
push
inc
loop
and
push
std
out
xchg
leave
adc
shrl
adc
aas
iret
mov
stos
adcb
adc
sbb
int3
or
xchg
pop
call
jb
imulb
je
add
mov
pop
scas
fsubp
aad
scas
sub
fsub
fwait
movsl
outsl
aad
pop
in
testb
stos
in
ss
jo
ss
subb
stos
iret
mov
test
push
outsb
test
xor
ficomps
cli
adc
add
xchg
push
xchg
das
xor
jnp
sub
xchg
sbb
in
out
loope
dec
and
push
cmp
into
into
or
add
int3
add
push
repz
sub
mov
test
in
lcall
xchg
lahf
sahf
test
shl
movsl
lock
in
mov
push
sub
rcrl
fadds
push
movsl
mov
out
push
sti
aas
or
dec
fcmovne
or
xor
lret
xchg
pop
mov
iret
sbb
mov
cmc
cwtl
xor
divb
push
push
mov
sub
mov
add
mov
out
push
push
repnz
mov
mov
nop
repnz
mov
and
aad
xchg
pop
jne
push
idivl
in
cld
ret
lds
jecxz
sbb
pop
inc
ljmp
pop
pop
das
les
adc
xchg
mov
jns
or
and
movsb
icebp
imul
jbe
push
sub
data16
or
cmpsb
fimuls
mov
aaa
imul
lahf
dec
pop
fisttpl
out
lahf
loopne
imul
cs
jl
xchg
std
fsubl
movsb
mov
loope
addl
cmp
cmpsb
mov
imul
stc
inc
into
xchg
dec
fisttps
pop
push
or
push
cmp
pop
in
xorl
mov
cmpsb
imul
adc
fisubrs
lods
mov
lock
xchg
lcall
cmpsb
int
fstl
es
mov
cli
adc
push
jbe
xchg
dec
push
aam
sbb
dec
mov
repnz
jp
jne
sbb
adc
test
mov
pusha
fiaddl
mov
enter
test
pushf
loop
adc
ud1
in
sub
int3
sub
and
xor
pop
inc
add
mov
mov
iret
pop
idivb
fsubrs
xor
aad
mov
outsl
pop
push
cmp
divb
fwait
les
iret
aaa
push
mov
mov
scas
ja
push
pop
mov
cmovle
negb
add
ret
movhps
or
add
push
xor
arpl
mov
jne
test
xchg
sub
decl
xchg
jno
lret
dec
imul
jne
dec
inc
dec
test
push
inc
in
add
divl
adc
enter
ss
stc
jl
jne
dec
mov
js
jge
int3
jne
scas
out
rclb
scas
loop
arpl
pop
push
or
pop
cwtl
mov
sub
xor
dec
rolb
jo
int3
inc
aas
divl
lea
jl
dec
dec
cmp
jg
aaa
cwtl
add
shrb
xchg
mov
mov
nop
ljmp
adcb
scas
jb
jmp
dec
imul
neg
in
or
lret
int
adc
cltd
xchg
dec
jl
add
and
dec
mov
mov
icebp
mov
aas
stos
pop
cld
mov
dec
scas
sbb
lods
mov
into
and
aas
inc
cmp
mov
mov
ljmp
mov
les
js
jmp
push
outsl
jl
aad
jo
clc
pop
fdivr
push
adc
out
pop
inc
mov
pop
in
inc
mov
sbb
hlt
sti
lret
and
xchg
push
gs
outsb
jecxz
stos
jb
push
or
cmpsl
inc
xchg
sahf
mov
lock
iret
out
hlt
ss
inc
cwtd
int
aaa
pop
out
hlt
and
push
pop
dec
loopne
and
pop
aas
sti
aas
mov
jecxz
add
mov
stc
and
lds
or
jmp
les
fimull
xorb
mov
in
ret
ja
pop
dec
in
mov
in
cmc
lea
jo
pop
imul
and
in
jp
jne
or
arpl
mov
push
into
cmp
cmpl
add
add
jge
fdivrl
add
sar
test
cmp
sub
faddl
sbb
incl
sbb
dec
xor
fucomip
sahf
in
testb
mov
adc
xchg
mov
pop
fwait
push
popa
sahf
clc
adc
mov
jmp
mov
scas
mov
sub
jg
pop
outsl
enter
test
iret
push
roll
insb
inc
pop
and
pop
sar
gs
in
ret
bound
pop
inc
leave
xor
jl
test
ss
enter
test
addb
or
xor
or
inc
std
lods
in
out
aaa
sbb
repz
lcall
add
popf
jle
inc
outsb
test
stc
aaa
ficomps
incl
lcall
aad
jmp
dec
lret
jle
jge
sub
int3
jns
out
popf
pop
add
popa
add
push
into
insb
outsl
int3
mov
adc
pop
xchg
popf
in
cltd
xor
insl
jmp
fistpll
das
cltd
iret
jmp
fdivl
icebp
jmp
inc
daa
pushf
and
popa
ss
sahf
push
cmp
cmpsb
mov
les
shlb
nop
sbb
arpl
cmpsl
mov
insl
scas
dec
add
shl
popf
aas
repz
xchg
je
pop
sbbb
inc
inc
jge
inc
or
cmpsb
dec
xchg
sahf
popf
sub
rcll
cmp
ja
jns
in
push
ret
and
sub
mov
std
enter
das
jecxz
jmp
adc
mov
xchg
out
inc
call
adc
nop
mov
cmp
decl
iret
mov
popf
push
fs
icebp
mov
pop
mov
jge
mov
leave
shr
jp
dec
rcrl
xchg
and
sub
mov
ret
arpl
icebp
xor
mov
inc
sub
movsl
ret
js
lods
popa
pop
xor
sub
test
xchg
and
jae
xor
data16
dec
arpl
mov
subl
cmc
or
insl
xchg
incl
int
sarl
js
ss
xorl
test
aas
push
fwait
sbb
mov
jg
xchg
xorl
xchg
int
jae
and
or
add
cmp
lcall
mov
test
sub
imul
adc
pop
cmc
test
movsl
jl
sbb
shlb
sbbl
in
xchg
cmpsl
test
dec
xor
mov
xchg
roll
jnp
ret
jmp
idivl
cmp
fstpl
lds
fdiv
mov
cmp
ds
jg
push
push
jnp
loope
fsubl
imul
ret
pushf
int
mov
push
or
mov
sbb
dec
cmc
into
scas
ds
mov
cmpsb
push
ret
xor
lahf
pusha
push
pop
js
cmc
push
inc
mov
bound
div
mov
fwait
jle
jbe
outsb
xchg
mov
adc
cli
fstp
in
mov
mov
xchg
pop
push
inc
and
es
or
push
jo
gs
or
mov
push
inc
add
add
loope
aad
sbb
or
aam
pop
adc
or
cmp
fs
enter
adc
js
scas
push
iret
ds
pop
mov
stos
mov
jl
mov
xchg
addr16
pop
xchg
stos
jae
mov
aad
filds
aad
xlat
clc
jo
fnop
mov
push
push
jae
xorl
or
and
repnz
pop
andb
call
ja
leave
mov
out
jecxz
mov
iret
push
insb
in
in
sbb
push
clc
mov
inc
inc
das
or
daa
inc
outsl
out
cmp
mov
or
fistl
jmp
js
mov
test
pop
bound
push
add
jmp
mov
and
cmp
pop
rcll
push
and
jmp
icebp
imul
mov
xchg
aad
push
ljmp
or
add
call
mov
sub
sbb
cmp
scas
add
xchg
mov
sub
and
mov
stc
ret
mov
xor
mov
pop
pop
insl
out
mov
je
jp
sub
xchg
push
sarl
mov
or
push
mov
xchg
imul
fisubs
xchg
pop
pop
mov
ret
rcll
pushf
jae
je
ja
imul
daa
inc
and
dec
cmp
jne
aaa
jnp
pop
push
rorb
test
mov
and
sub
xlat
adc
xchg
into
in
test
mov
xchg
mov
cmp
xor
outsl
in
adc
mov
gs
loopne
out
push
mov
adc
mov
inc
ret
pop
mov
and
or
dec
into
call
cmpsb
xor
and
sub
stos
imul
lret
inc
add
stc
mov
repz
xlat
jl
into
pop
insb
lods
lock
push
mov
es
imul
inc
or
cmp
call
mov
or
faddl
fisubl
mov
dec
cmpsb
daa
insl
sahf
and
arpl
push
inc
outsl
xor
cmp
add
rolb
jecxz
cmp
cmpb
xchg
std
adc
xchg
in
jnp
cmpl
dec
cs
imul
pop
in
test
pop
dec
mov
mov
vpackssdw
andl
adc
mov
mov
stc
mov
imul
mov
aam
sub
aad
mov
xor
or
xor
ja
xlat
push
addr16
dec
int3
lods
das
push
adc
ja
mov
lahf
lret
sub
je
push
out
repz
ss
add
jns
rorl
mov
insl
lcall
ret
inc
inc
fildll
fsubrp
jns
sub
inc
std
mov
jnp
jl
pushf
sbb
mov
mov
in
out
xchg
jbe
in
mov
adc
addr16
or
jg
out
sub
leave
mov
ljmp
andb
dec
sub
stos
push
xchg
jp
and
mov
icebp
insb
into
dec
pop
add
out
bsr
aaa
mov
not
jp
in
pop
stos
in
push
and
mov
sbb
insb
push
xlat
mov
adc
mov
imul
leave
jo
rolb
push
idiv
pop
outsl
xchg
iret
mov
mov
inc
sbb
mov
mov
xchg
xor
iret
push
repnz
pop
xchg
push
jno
test
inc
outsb
or
adc
mov
fists
mov
sub
xchg
dec
xchg
mov
push
test
stos
fiadds
out
subb
xchg
xchg
mov
in
push
rcll
or
test
add
xchg
jnp
dec
xchg
cltd
pop
push
push
mov
push
testb
stos
fldz
mov
xor
ret
inc
popf
jno
mov
jl
dec
adcb
in
fisttpll
pop
cwtl
int3
mov
lods
pop
mov
dec
cmp
pop
adc
repz
test
in
sbb
sbb
sub
pop
orb
lods
mov
mov
and
adc
loop
adc
inc
mov
aad
jo
movsl
cmpsl
ljmp
xor
shr
cmpsl
hlt
pusha
mov
mov
add
out
loope
jno
push
push
not
rcll
dec
sub
pop
dec
nop
je
sub
inc
sub
jne
xorb
daa
dec
clc
sub
mov
das
clc
lods
outsl
add
cmc
ljmp
add
daa
pop
pop
daa
addb
cmp
dec
xchg
pop
movsb
jns
xchg
xor
aaa
bound
decl
cmp
or
fidivl
int
cmpb
cmp
notl
fiaddl
aas
fstl
cmp
es
cmp
jnp
out
or
and
adc
mov
mov
lret
movsb
xchg
inc
or
mov
lods
inc
fildl
xor
cmp
adc
cs
jl
std
inc
ljmp
push
sbb
roll
out
imul
lahf
mov
fcmovnb
mov
repz
mov
outsb
jmp
jnp
push
lods
rclb
scas
mov
mov
pop
packsswb
bound
inc
xchg
in
in
stc
push
adc
js
fucomip
insl
jecxz
push
dec
adc
jo
and
lds
lods
mov
movsl
lods
xchg
arpl
xor
lods
shrl
ds
add
rorb
xchg
call
jmp
arpl
cli
mov
fdivl
add
mov
out
out
cmp
cld
xor
adc
sbb
movsl
cmp
and
addr16
cld
jnp
out
in
add
cld
cmpsb
and
lret
pop
cmc
pop
cmpb
dec
push
arpl
jmp
sarb
xor
lcall
push
xor
popa
lds
rcll
ret
mov
test
aad
cld
scas
push
mov
sahf
pop
mov
out
fdivs
push
pop
repz
xchg
imulb
inc
in
loop
pop
and
stos
and
ret
sbb
pop
arpl
pop
dec
aaa
movsb
sub
xor
ja
repz
aad
fldl
jne
call
lret
bound
pop
cs
sahf
cmp
push
adc
lret
out
dec
icebp
mov
fcmovnu
jl
pusha
in
mov
test
mov
xor
mov
lods
adc
cwtl
push
push
out
rclb
inc
xor
push
or
sub
rclb
mov
bound
repz
and
loope
jg
outsl
push
test
dec
add
pop
mov
adc
outsb
mov
add
adc
jae
cli
jnp
scas
add
iret
adc
lret
adc
inc
xchg
xchg
int
inc
arpl
sbb
in
lret
int
daa
inc
ret
push
xchg
mov
out
mov
fdivl
stos
dec
jl
xchg
or
cmc
inc
push
inc
gs
sbb
imul
dec
fldl
stos
dec
fwait
adc
and
lock
fiaddl
add
dec
aas
mov
and
fwait
and
add
cld
push
and
mov
repnz
outsb
mov
lret
fs
mov
mov
fstpl
jb
xlat
clc
pop
sub
or
push
jnp
cmc
pusha
push
or
aas
inc
push
imul
scas
movsb
dec
mov
push
dec
leave
testb
stc
adc
inc
adc
sbbl
cli
cmc
orb
cmc
sbb
fstpt
add
orl
fwait
xchg
jns
and
and
iret
addr16
xor
lods
rorl
aam
add
push
fsubrs
xor
insl
hlt
cld
rcr
mov
mov
cmpsl
pop
inc
mov
xchg
add
nop
data16
clc
cs
pop
or
in
xchg
push
scas
pop
cs
scas
mov
dec
xor
mov
cmpsb
negl
iret
mov
lods
popf
popl
loop
in
mov
mov
sbb
jmp
popf
mov
push
lds
pop
cmp
adc
outsl
stos
das
mov
enter
sahf
nop
ljmp
ja
push
aam
in
std
xchg
mov
hlt
mov
out
ds
jns
mov
add
mov
push
inc
iret
fldcw
cmpsb
xchg
push
imul
sbb
push
xchg
lret
lods
xchg
mov
sub
bound
inc
int
jae
adc
aad
dec
or
je
pop
push
add
gs
xor
out
leave
cmp
cmp
int3
cli
rcr
sub
mov
adc
fnstcw
cmp
mov
mov
add
mov
lods
lds
insl
lret
jge
subl
adc
jns
inc
fdivs
std
leave
mov
xorl
xchg
pop
cmp
dec
cmpsl
filds
pop
movsl
cmp
test
mov
xor
mov
mov
dec
dec
fwait
xchg
repz
xor
pop
mov
xchg
jnp
xchg
adc
mov
in
inc
movsl
insl
pop
sbb
lds
mov
sbb
mov
jnp
lods
dec
in
pop
movsb
push
inc
ja
add
or
cmp
fimuls
adc
fwait
and
pop
mov
movsb
dec
sbb
jno
xchg
cmc
inc
sub
int3
lahf
out
cmp
pop
shr
push
adc
jbe
sbb
xchg
lds
iret
inc
aad
inc
add
aad
outsl
jge
push
out
lods
inc
mov
sbb
xor
sbb
test
lods
aam
pushf
fstpl
dec
mov
pusha
sbb
cmp
push
mov
push
jnp
sbb
add
ljmp
stc
scas
rcl
out
jecxz
or
aaa
add
arpl
ret
test
insl
dec
enter
testl
inc
lods
push
sbbb
and
xchg
sbb
and
and
sahf
movsb
cmp
cltd
into
or
add
sti
out
jmp
mov
int
or
in
pop
imul
pop
in
xor
imul
sti
or
and
ud2
mov
cltd
inc
movsb
popa
xchg
pusha
rep
inc
mov
iret
sub
jp
and
gs
jmp
sbb
sub
sbb
fisttps
shufps
jmp
mov
and
xor
fldl
pop
lahf
out
and
dec
inc
jle
or
mov
out
aam
lds
mov
sub
fcoml
es
push
mov
sbb
fisttpll
mov
aad
cmp
loopne
sub
push
inc
fisttpll
add
test
shll
cmp
jb
inc
cld
and
jne
sub
mov
into
mov
mov
outsl
xor
mov
mov
shlb
std
mov
push
and
cmpsl
mov
insb
aad
das
and
pop
loopne
mov
xchg
ret
pop
or
push
dec
pop
adc
mov
roll
std
adcl
push
std
data16
inc
sub
pop
dec
iret
push
roll
or
jge
adc
inc
stc
mov
inc
stos
inc
mov
dec
jns
mov
aas
cmp
and
rol
cli
xchg
dec
adc
mov
sub
mov
add
inc
jecxz
pop
int3
ja
rolb
imul
cltd
dec
jmp
xchg
in
fbstp
adc
pusha
jle
lods
fldcw
fldenv
fcoml
push
inc
dec
push
movsb
cmp
cmpsl
mov
inc
dec
push
mov
test
ret
lret
pop
jl
xchg
sbb
fdivr
or
mov
fmull
sti
pusha
dec
repz
mov
and
loop
movsl
cmp
sbb
push
push
sub
push
addr16
xchg
mov
inc
add
pop
and
mov
das
fwait
imul
jg
sub
fcomps
pop
pop
lods
fsubrl
ljmp
ficoms
icebp
or
mov
push
mov
cld
push
and
imul
lret
sub
aad
das
rcr
mov
and
sub
sub
inc
outsb
xchg
jg
sarl
jnp
lds
sbb
out
sbb
fstps
in
outsl
adc
inc
test
mov
out
movsb
mov
mov
pop
mov
fcoml
data16
lods
pop
outsb
outsl
mov
jle
js
mov
in
or
push
loope
shll
xchg
mov
in
popa
push
and
sbb
xor
mov
loope
movb
cmp
push
shlb
int
xlat
cmpsl
push
adc
sbb
je
ds
outsl
test
push
dec
mov
adc
cmp
sbb
andnps
fnstsw
call
push
int3
xor
mov
not
pop
adcl
test
sahf
mov
or
or
aad
in
xchg
add
fsubp
pop
jg
push
adc
das
icebp
inc
fistl
lahf
mov
xlat
fwait
jb
push
test
aad
jmp
xchg
test
cs
arpl
popa
push
mov
loop
loope
mov
repz
movsl
xchg
lcall
jbe
loopne
and
mov
les
jb
imul
cmpsb
inc
popf
cmc
pop
movsl
mov
dec
mov
fidivrl
pushf
jmp
mov
scas
lahf
cs
xchg
filds
gs
mov
and
push
push
push
in
pop
jle
inc
fists
cli
pop
dec
inc
mov
cltd
sub
cmc
dec
ret
shll
adc
divl
adc
out
leave
cli
rorb
dec
out
dec
insl
xor
orl
dec
sub
addb
adc
leave
outsb
stc
sub
orb
push
mov
pop
pop
cltd
cmp
popa
cmp
ret
mov
xor
cs
aad
push
add
inc
int
sub
sbb
and
push
cs
mov
in
pop
pop
outsb
jecxz
arpl
je
mov
jle
mov
in
es
scas
je
subb
lret
daa
add
sbb
inc
repnz
xor
std
gs
push
rolb
in
sahf
in
int
test
sbb
in
and
ds
out
pop
pop
sbb
lock
mov
fs
mov
mov
ds
jb
jle
xor
lods
xlat
or
xchg
xor
inc
pop
test
fdivrp
xchg
cltd
icebp
inc
pop
adc
mov
cmpsb
subb
insb
jmp
push
xlat
ret
push
cwtl
fstps
sbb
out
adc
stc
dec
std
popf
sahf
rcl
pop
adc
cmc
pop
lret
fisttps
xor
mov
loop
clc
push
pop
mov
adc
mov
popl
cmp
inc
fldcw
sbb
pop
mov
das
xor
and
popa
or
cld
sub
pop
mov
test
js
out
lcall
repz
sub
aad
repz
test
dec
push
xchg
mov
fisttps
test
aaa
jae
sbb
xor
jmp
ret
test
jg
cmp
push
es
shlb
lea
ljmp
loop
or
or
lods
push
dec
xchg
fbstp
enter
stc
out
add
je
jl
xor
inc
pop
sbb
jge
jmp
mov
into
sbb
xlat
sub
sbb
addr16
pop
mov
mov
imul
lahf
cld
jmp
je
ds
incl
inc
xchg
add
mov
imul
clc
fidivrl
pop
testb
pop
ljmp
lock
push
js
dec
aad
ds
fimuls
cmpsl
ret
jmp
mov
idivb
in
les
xlat
in
or
stos
roll
push
and
add
mov
push
popf
inc
js
adc
out
adc
repnz
cli
pop
pop
pushf
in
or
std
mov
push
xchg
dec
rcl
inc
out
dec
out
jmp
dec
ds
lock
aaa
stos
adc
adc
inc
or
jecxz
out
sbb
leave
rorb
push
push
xchg
stos
pop
xchg
jno
lods
jne
loop
repz
sbb
pmuludq
sub
int3
fimuls
repz
pop
push
fstl
mov
and
filds
dec
sub
mov
sbb
inc
imul
int3
pop
and
mov
dec
sti
ja
bound
popa
push
in
inc
mov
jl
push
mov
xchg
test
push
dec
bound
sub
leave
mov
enter
in
and
mov
inc
cmc
sar
subb
outsl
jb
jae
in
lret
icebp
pop
xchg
lods
dec
push
in
dec
jmp
shlb
dec
js
add
jno
sbb
scas
pop
cmp
lcall
and
jo
lret
fisttpll
loop
jne
pop
and
add
cmp
ljmp
add
xchg
adc
movsb
and
scas
and
fptan
repnz
popf
mov
push
pop
cmpl
out
add
pop
dec
xchg
insl
pop
pop
inc
add
cmp
and
clc
xor
movl
cmp
loopne
arpl
imul
lds
jbe
xchg
ficompl
int
mov
jb
rolb
dec
push
or
adc
call
stos
shld
xlat
mov
mov
jge
test
dec
pop
xchg
xchg
xchg
cltd
adc
data16
add
lock
rorl
pop
and
stos
adc
mov
add
pop
enter
xchg
xchg
call
and
sbb
sub
xchg
and
bound
mov
xor
push
pop
cmp
cmp
cmp
les
fsubrs
pop
push
and
enter
add
int3
push
cwtl
sub
dec
mov
sbb
inc
and
rcr
lds
pushw
add
shll
pop
mov
jle
jge
imul
pop
push
mov
mov
aaa
rorl
out
fnstcw
xchg
jg
jo
push
fcmovnbe
mov
subb
sub
cmpsl
push
stc
sti
add
ss
xlat
mov
fdivl
imull
or
push
mov
mov
in
mov
sub
and
sbbb
aam
repz
in
stos
stos
add
out
push
mov
mov
cli
fnstenv
dec
pop
mov
cli
xchg
add
xchg
inc
fs
inc
sub
shlb
xchg
testb
sbb
jge
and
mov
sbb
adc
jge
decl
push
idivl
fwait
movsb
fwait
add
lods
jae
stc
ror
ja
lock
dec
add
pop
push
xchg
jne
insb
movsb
or
aaa
jmp
sub
iret
sar
dec
cmc
rorb
test
es
sub
in
pop
mov
aaa
nop
sbb
neg
jb
xchg
jo
jno
mov
sub
icebp
inc
mov
dec
inc
mov
push
sbb
adc
add
ljmp
pushf
iret
inc
insb
xor
or
push
mov
cmpsb
les
dec
mov
fnsave
lods
aad
xchg
icebp
pop
test
add
adc
dec
testl
or
sub
dec
pushl
gs
xchg
mov
jg
pop
dec
push
or
or
arpl
mov
mov
cld
pop
cmp
daa
xchg
mov
fimull
mov
and
ljmp
pop
dec
aad
scas
paddw
fsts
pop
pop
inc
aaa
jbe
addb
cmpsb
jnp
xorb
jns
sbb
mov
mov
cmc
mov
dec
cld
dec
mov
fmull
dec
mov
mov
and
or
push
xchg
out
jb
in
icebp
adc
sarl
cmp
jge
xchg
imul
sub
jne
shll
std
xorl
jg
mov
xor
pop
lds
and
in
inc
popa
mov
gs
das
in
out
jns
and
ds
in
cld
inc
push
in
or
sub
cmpsb
int
mov
je
mov
mov
inc
out
xor
inc
jp
xor
jecxz
inc
adc
jge
adc
inc
mov
sti
sub
dec
or
mov
jb
shrl
sub
mov
dec
jae
scas
or
mov
mov
cmc
inc
mov
jne
cld
rcrl
pusha
fwait
or
or
out
lea
and
outsb
test
arpl
cld
ja
lahf
adcl
iret
pop
fsts
dec
mov
stos
test
mov
in
mov
mov
daa
sbb
out
pusha
movsb
dec
stos
and
imul
jnp
push
mov
fneni(8087
movsl
dec
mov
adc
aam
dec
pop
test
jge
jnp
adc
mov
push
lods
push
decb
es
int3
pop
aaa
std
ret
sti
std
xchg
out
fptan
ret
sub
int3
ljmp
ucomiss
rol
shll
popf
push
and
shrb
mov
stc
shlb
aam
pushf
repz
pop
int3
push
or
lods
sub
fs
loop
dec
pop
mov
popa
fs
ficomps
sti
lds
sub
iret
ljmp
inc
lea
xchg
pop
lods
push
lods
mov
and
xchg
cmp
add
pushf
add
cld
dec
jno
add
aas
into
jg
sbb
andb
push
mov
cs
sbb
popa
ret
ret
sahf
dec
stc
sub
es
inc
out
mov
loopne
enter
add
or
xchg
lcall
popl
xchg
lea
inc
adc
hlt
lret
mov
add
adc
jl
mov
ret
mov
movsb
dec
fwait
dec
jo
das
and
insl
repnz
lret
push
pushf
push
inc
aad
test
in
mov
dec
jo
add
pushl
xor
push
aaa
rcll
add
push
jb
push
inc
push
mov
push
pusha
test
inc
dec
mov
cmp
sti
sahf
jl
orl
pop
into
mov
popa
dec
xchg
xchg
icebp
jg
sbb
inc
ja
scas
negb
mov
cld
xor
pop
mov
cmpsb
jns
cli
pmaddwd
int
adc
sub
dec
xor
jmp
mov
fstpl
insb
adcl
call
sub
dec
std
dec
jmp
femms
mov
or
dec
rorb
test
addb
jb
xchg
and
jno
cmpsb
xchg
jmp
es
pushf
in
sub
add
push
ds
push
xor
pop
mov
out
out
cmpsb
or
popf
and
jecxz
stos
push
decl
jl
icebp
xchg
push
pop
xor
fstps
aaa
jne
mov
loop
scas
mov
sbb
rolb
sbb
lret
lcall
add
xor
cwtl
andl
sbb
fwait
cmpsl
jnp
sub
stos
dec
cmp
arpl
ret
sbbb
popf
pop
mov
mov
mov
adc
int
dec
mov
fwait
cli
pop
and
sbb
aas
xor
aad
in
adc
movb
xchg
sbb
cmpb
or
ret
mov
jns
mov
mov
fisttpll
and
mov
rcr
pop
pusha
dec
in
aad
mov
test
gs
adcl
pusha
jmp
pop
xchg
mov
lods
imul
in
iret
mov
xor
cltd
cwtl
mov
cltd
push
in
dec
pop
fistps
stos
cmp
or
int3
gs
into
pushf
repz
ss
xchg
add
dec
cmc
pop
dec
stc
pushf
sub
stc
insl
cli
nop
or
pop
mov
pusha
icebp
or
pop
cmc
mov
sti
imul
inc
cmp
andl
cmpsb
cmp
jne
scas
and
fwait
sbb
pop
test
push
sbb
jl
ds
in
test
and
dec
push
inc
sbb
inc
in
incl
jbe
pop
stos
push
aas
xchg
mov
fiadds
stc
stos
pop
dec
xchg
iret
inc
or
xlat
xchg
sub
mov
push
push
push
push
and
push
gs
xchg
fnsave
jle
mov
and
fldcw
sub
mov
push
gs
ror
shll
fistl
aad
repz
lds
js
mov
fwait
mov
sub
mov
ficoms
mov
and
jne
mov
sbb
mov
inc
into
ret
mov
data16
in
imul
ret
pop
loope
cld
inc
cmp
leave
pop
mov
or
dec
jnp
inc
sbb
adcl
push
xor
add
adcl
mov
or
je
mov
xchg
mov
xchg
push
mov
nop
cmpsb
pop
inc
aaa
push
clc
mov
mov
mov
pop
jmp
lods
mov
push
out
mov
iret
push
sti
add
rcrb
jbe
mov
je
sub
icebp
fcomps
adc
fadd
inc
or
lds
shll
push
sbb
arpl
xor
or
adc
out
ljmp
andl
js
dec
cmp
adc
lret
mov
mov
fists
push
loop
subl
in
data16
leave
mov
mov
int
out
jmp
fwait
mulb
mov
mov
mov
or
sub
and
push
icebp
xor
lea
les
sub
mov
jmp
sti
dec
shrb
insl
out
xor
and
fiadds
mov
xchg
sbb
or
jne
shrb
hlt
pop
dec
sbb
lds
rolb
test
add
ds
stc
imul
ja
xchg
push
inc
push
lods
icebp
xchg
lods
push
lods
cltd
jae
loope
mov
adc
and
pushl
lcall
dec
lret
or
dec
mov
in
push
shrb
decb
inc
jo
loopne
mov
xchg
in
cmpsl
fwait
dec
popa
pop
fisttpll
xlat
mov
fstl
cltd
lret
mov
js
pop
pop
xor
mov
mov
sub
stc
adc
fbld
iret
cmc
outsl
mov
out
aad
pusha
scas
cmp
ja
cmp
lods
nop
clc
outsl
xor
int3
jge
lock
dec
fst
adc
lret
mov
sub
mov
sub
shll
scas
leave
testb
push
jg
ret
fstps
xchg
inc
addb
jg
cmpsl
loopne
sub
loopne
mov
arpl
dec
out
xor
out
repz
ljmp
jmp
test
cmp
xor
xlat
cmp
ret
lret
rol
add
dec
test
and
mov
rcll
jo
pop
sbb
test
fiadds
jg
stc
pop
leave
push
pusha
inc
sub
mov
xchg
xor
icebp
jnp
pop
or
dec
push
xor
pop
and
or
xchg
mov
pop
jns
scas
pop
xor
pop
adc
test
sbb
cmp
in
mov
fistl
arpl
mov
pop
movb
rcll
hlt
dec
rclb
jne
dec
mov
popf
push
cli
and
std
movl
das
ja
bound
dec
stos
out
sub
test
aad
dec
lcall
repz
xor
xor
popf
call
mov
mov
addr16
inc
sahf
gs
fs
sub
pop
sbb
push
push
lods
or
jo
jne
clc
pushf
mov
add
pop
jne
inc
pop
cmp
cmp
inc
mov
mov
test
test
and
pop
int
sub
inc
pop
inc
mov
shlb
test
mov
sub
loope
pop
inc
add
mov
into
insb
insb
insb
fwait
cmp
hlt
sub
jo
dec
insb
mov
cmp
aad
out
imul
or
jmp
inc
ds
iret
mov
xorl
insb
sarb
in
enter
adcl
loopne
mov
data16
ja
push
dec
push
adc
test
iret
ffree
push
pop
gs
xor
pushf
jl
andl
stc
mov
push
adc
xor
fcoml
mov
mov
cmp
xchg
mov
push
pusha
mov
les
incl
mov
pop
or
addr16
jl
mov
pop
mov
rcll
fildll
dec
sti
and
sub
psubw
adc
xchg
fdivp
jne
das
insl
mov
fdivr
push
test
lods
pop
mulb
xchg
or
cmp
idivl
fimuls
inc
or
jns
jg
or
dec
xchg
and
mov
clc
sti
and
jle
push
out
inc
lret
pop
cmp
push
outsb
aad
inc
sub
jge
outsb
fisttps
aam
ficompl
fcomi
aaa
jmp
sub
pop
shr
daa
icebp
xchg
lret
mov
imul
shufps
ja
movsb
lret
out
add
dec
mov
lahf
adc
cmpsb
pop
dec
sub
xchg
add
pop
in
or
mov
pusha
adc
jno
cli
fidivl
aas
push
push
inc
fdiv
aam
pop
inc
lret
xchg
out
cmc
sahf
add
jb
add
mov
and
cli
jmp
push
add
pop
or
sbb
sub
movsl
mov
push
jg
notb
lcall
or
sbb
movsb
fdivr
lahf
lea
dec
lea
test
lahf
rcll
fcomps
cmp
sbbb
fisubs
pop
inc
fidivl
xchg
dec
shrl
popf
push
aaa
mov
mov
or
arpl
jle
out
jno
mov
in
xor
sar
arpl
arpl
push
pop
xchg
sbb
xchg
inc
sbb
sub
jle
mov
sub
imul
mov
pop
das
ret
shll
sbb
roll
filds
cmc
jns
dec
xor
je
sti
out
adc
add
adc
lods
daa
jns
inc
dec
cmp
popa
push
push
jle
fs
ds
add
inc
fsubs
movsb
fldenv
sub
das
and
lds
xchg
mov
in
ja
lods
dec
dec
rcrl
rcr
addr16
fsubl
xor
add
pop
es
sbb
sub
repz
sarl
mov
rorb
pop
xor
cmpsb
mov
int3
jbe
pop
mov
lret
stos
addb
xchg
dec
stos
cmp
fisubrs
dec
pop
iret
aad
frstor
outsb
fiaddl
or
shlb
sti
push
stc
cs
mov
dec
jecxz
cmp
dec
jns
cmp
into
out
std
add
in
lahf
stc
push
leave
mov
clc
push
inc
cwtl
in
ja
enter
inc
test
push
test
and
pop
cli
in
push
stc
addr16
cld
jmp
xchg
jmp
sbb
sbb
loop
cli
je
xorl
mov
or
or
mov
xsha256
cmpsb
xchg
pop
jno
xor
adc
inc
cli
mov
fidivrs
xor
cs
insl
jg
push
ja
jp
mov
aam
fimull
mov
push
sbb
sub
aam
rolb
dec
pop
inc
decl
cmp
std
fucom
adc
int3
jmp
loopne
pop
pop
adc
addl
loop
fstpl
hlt
test
dec
pop
loopne
popf
or
dec
push
jmp
addr16
ja
repz
adc
add
test
iret
mov
xchg
adc
lret
sbb
fistpl
outsb
and
int3
dec
std
aad
cmp
pop
cmpsl
mov
lods
out
lea
ret
push
orb
pop
fwait
mov
mov
mov
clc
movsl
sahf
jle
and
in
add
stos
xor
lods
xchg
aas
inc
out
dec
mov
sbb
inc
sub
popa
lock
sub
out
mov
lods
xchg
bound
cmp
stos
movl
mov
inc
cmpl
jmp
fsubrs
lea
push
ffreep
sub
fstps
adc
xor
leave
enter
mov
dec
stos
adc
push
rep
mov
mov
clc
jb
ljmp
jge
mov
xor
lcall
loopne
lahf
mov
xchg
inc
adc
lcall
rorb
out
fadds
sub
xor
xor
or
imul
push
les
sahf
xchg
dec
push
pop
out
icebp
xor
test
push
lret
push
insl
xlat
xchg
xchg
inc
in
mov
das
fyl2x
ficoml
ss
imul
iret
aad
sbb
ja
push
mov
mov
mov
cld
in
stos
repz
int
cmp
cmp
lahf
push
pop
cmpsl
cmpsb
movsb
sub
adc
mov
nop
stos
call
in
frstor
ljmp
repnz
push
ljmp
inc
or
orb
stc
xor
fcmovnbe
sub
jne
mov
mov
aad
push
out
into
imul
pop
pop
mov
dec
or
js
out
fwait
push
and
fstps
ds
push
lret
enter
shlb
dec
sub
dec
addr16
sbb
into
sub
leave
notl
jne
dec
mov
fiaddl
arpl
ret
and
mov
lcall
add
mov
je
ja
mov
push
jno
xchg
jg
stc
xchg
jecxz
out
out
push
adcl
mov
sub
js
shlb
add
push
mov
arpl
fmull
mov
sub
sub
jne
mov
mov
aaa
fwait
outsb
fisubl
dec
push
push
outsb
dec
jl
jae
pop
sbb
leave
sti
pop
cltd
fstps
cwtl
in
mov
fisubrl
mov
clc
push
clc
jg
in
dec
jae
out
in
shl
cli
imulb
inc
xor
add
xor
stos
mov
in
inc
lea
inc
adc
sub
cli
cmpsl
fidivrl
in
into
cmp
dec
xorl
sub
jmp
sbb
sbb
jle
mov
aaa
mov
pop
test
dec
test
jmp
sbb
jmp
out
pop
pop
adc
shll
push
inc
hlt
inc
stos
in
cwtl
cld
cmp
mov
sbb
imul
jae
int
negb
inc
dec
rol
jecxz
loop
mov
movsl
mov
negb
addr16
xor
and
inc
push
popa
or
lock
bound
dec
mov
xor
out
xor
outsb
fistpll
pop
mov
xchg
cwtl
call
enter
pcmpeqb
enter
out
and
fs
sub
xchg
inc
iret
shl
stos
pop
loopne
pop
sub
scas
inc
push
jle
fcoml
mov
jmp
das
inc
mov
sbb
mov
in
fdivr
dec
es
iret
mov
or
lea
lds
lea
ljmp
js
fidivrs
fs
or
js
push
pop
enter
out
imul
push
repnz
iret
pop
jg
mov
js
fwait
sbb
pop
aas
and
jmp
inc
aam
adc
dec
cmp
jo
pop
sub
rcr
jge
out
pusha
add
aad
xor
pop
ss
stc
mov
pop
test
cltd
out
jno
mov
mov
fsubs
pop
shrl
lahf
lcall
filds
jg
mov
mov
jge
cmp
loop
andb
add
ret
loop
dec
xchg
mov
adc
jae
clc
xor
lcall
cmpsl
ds
mov
mov
flds
xchg
dec
mov
mov
fwait
dec
jmp
jmp
icebp
int
xor
pop
sarb
cmc
ret
mov
mov
mov
push
fwait
cltd
jnp
mov
ret
dec
jg
mov
scas
movsl
sarb
push
sbb
xor
jbe
inc
stos
push
sub
dec
into
cmp
mov
pop
movsl
mov
iret
add
mov
and
je
mov
in
add
cmpsl
sub
mov
lds
or
in
test
jmp
out
push
jecxz
mov
stos
mov
out
cmc
jecxz
jmp
lods
gs
cmc
inc
push
int
std
fxch
push
mov
sub
sar
lret
jo
xchg
das
push
test
dec
ret
cmp
loope
jle
mov
lea
xor
sub
adc
adc
test
inc
jns
andb
mov
outsl
and
and
pop
jae
mov
push
lahf
scas
pushl
fsubrs
mov
mov
jbe
icebp
pusha
imul
popa
jno
rol
pop
sub
ss
and
out
add
sbb
sahf
push
xchg
ja
addr16
mov
aas
xchg
mov
mov
pop
stos
cmpsb
repz
lds
ljmp
lcall
xor
xor
cmpsb
push
mov
fs
pop
mov
dec
inc
add
jmp
ficompl
sbb
push
shll
dec
mov
xchg
or
xlat
test
add
mov
mov
hlt
jae
xor
push
in
jns
push
jle
xchg
insb
push
push
imul
cmp
inc
in
mov
dec
mov
sbbb
leave
push
sub
mov
test
sti
ja
scas
sbb
fcompl
icebp
into
in
rorb
inc
push
mov
sub
cmp
loopne
fs
jbe
mov
daa
loopne
or
lods
fidivrs
cmp
dec
sub
or
movsb
daa
int
xchg
jno
arpl
popf
mov
sub
pop
add
add
pop
insb
fistl
or
repz
movsl
dec
or
data16
pop
xchg
add
jl
test
sbb
mov
xchg
mov
pushf
dec
into
xchg
hlt
jmp
ja
fwait
jp
inc
nop
call
cs
add
adc
out
mov
and
cmp
aaa
add
inc
xchg
push
mov
dec
mov
mov
mov
int3
insb
fsqrt
push
scas
xor
repz
ret
xchg
leave
sub
adc
orb
xor
stos
cmp
cmp
inc
not
fidivl
scas
fsubrl
gs
inc
leave
pop
sub
inc
adc
insl
mov
daa
push
sbb
xchg
subl
pop
sbb
outsl
loopne
pop
jle
add
pop
rclb
dec
popf
push
into
mov
mov
int3
outsl
lds
xchg
and
pop
pop
pop
popa
or
sub
inc
jae
jecxz
shrl
jo
and
mov
add
mov
and
enter
scas
pop
mov
fsubrl
pop
sar
jmp
icebp
dec
sub
testl
nop
dec
fstpt
lds
mov
lret
pop
dec
mov
mov
fcomps
fistps
ss
dec
adc
mov
int
pop
sahf
cmp
jne
cmpsb
test
xchg
jne
inc
daa
loopne
fs
in
inc
jb
das
mov
inc
rclb
test
sarl
bound
and
xchg
xchg
mov
in
cmpb
enter
fcoml
xchg
lret
push
dec
pusha
sub
repz
repz
inc
push
jnp
popa
xchg
loopne
fstl
dec
cwtl
sahf
and
pushf
aas
xchg
fldenv
xchg
cmp
mov
cmpsl
cmp
aad
dec
hlt
add
inc
fcoms
repnz
adc
repnz
and
int3
aaa
dec
inc
iret
mov
xor
insl
mov
jecxz
xor
idivb
cmp
push
dec
lret
bound
subb
adc
inc
stos
add
push
jge
mov
sub
movsb
dec
test
push
jnp
outsl
lods
test
mov
cmpsl
stc
dec
pop
movsb
lods
mov
jecxz
cmp
sub
pop
iret
insb
jle
xchg
das
fildl
cwtl
push
cwtl
mov
mov
cmp
jne
jne
lret
scas
addr16
test
pusha
jae
or
nop
pop
push
adc
shl
and
dec
movsb
outsl
jg
add
outsb
jp
jmp
stc
sub
fdivr
jb
xor
add
aas
mov
xor
insb
enter
xor
in
stos
xor
roll
cmp
push
add
lods
push
mov
aam
clc
aad
loope
and
add
xor
test
push
test
cmp
pop
mov
popa
iret
xchg
dec
test
push
out
and
loope
outsl
rcll
sarb
sarl
lcall
fisubl
inc
push
cmp
cmpsl
xor
cmp
push
aas
ds
je
in
push
push
mov
xchg
dec
lods
mov
jns
jnp
lcall
xchg
add
pop
sti
dec
adc
inc
icebp
andb
outsl
lods
mov
lods
shll
cltd
push
push
fstl
enter
pop
enter
cmp
test
out
add
cmp
je
movsb
hlt
ret
ficoml
dec
jno
add
push
cmc
push
mov
ret
or
xchg
out
mov
loop
cltd
sub
in
pop
ds
icebp
jns
mov
sub
mov
fs
and
mov
sti
mov
das
xchg
push
cli
leave
inc
xchg
mov
test
shlb
mov
out
cs
pop
dec
out
and
data16
ss
ljmp
pop
sub
fsubrl
xchg
jne
popa
repnz
mov
inc
inc
inc
icebp
add
xor
mov
and
aaa
inc
pusha
xlat
ret
dec
pop
mov
jb,pt
inc
and
divb
int
les
pop
pushf
rorb
or
pushf
add
jns
dec
lock
sbb
jae
and
and
mov
mov
test
mov
xor
dec
mov
lods
or
pop
push
test
hlt
adc
call
sub
test
jnp
push
and
mov
push
cli
pop
cmp
out
jmp
sti
sbb
pop
arpl
lret
mov
cmpsb
in
pop
mov
call
mov
mov
xchg
addr16
pop
insb
mov
mov
les
or
cmpsb
icebp
pop
dec
or
xchg
sub
push
movsb
out
xchg
pop
pop
mov
add
inc
dec
fsubs
ljmp
lret
push
mov
push
sbb
push
fcomip
cmp
add
je
push
rol
lods
dec
cmp
inc
aad
lret
leave
push
sub
mov
cs
xor
out
negb
fmuls
sbb
adc
xor
mov
jnp
call
aaa
mov
enter
iret
inc
pusha
and
outsb
rol
mov
imul
jae
inc
fucomi
scas
dec
mov
xchg
jno
imul
inc
movsb
mov
shrb
loopne
xlat
mov
bnd
sahf
jle
sub
fisubl
and
pop
sbb
xchg
aam
sub
mov
mov
ret
pop
adc
push
jbe
mov
es
rol
adc
clc
or
mov
in
das
iret
add
or
adc
jae
or
sub
fldl
add
hlt
out
mov
shlb
push
lds
sbb
jno
mov
fldenv
adc
sbb
mov
and
dec
popa
out
adc
xor
xchg
mov
add
outsl
repnz
andb
jg
in
mov
and
sub
insl
std
and
jb
jbe
push
fs
int3
or
adc
aaa
test
pop
fwait
je
sbb
cli
leave
fwait
iret
pop
nop
push
mov
push
out
outsb
xchg
shrd
lea
mov
xlat
push
dec
int
lods
xor
xchg
sbb
jo
mov
mov
mov
filds
inc
mov
adc
loopne
cltd
jbe
cwtl
pop
sahf
jecxz
mov
lcall
mov
push
pop
or
push
or
insb
leave
in
xorb
xchg
push
dec
cmp
scas
jmp
arpl
outsl
push
jae
fisttps
push
test
mov
in
in
hlt
js
xchg
test
cmp
gs
idivl
or
pop
sbb
popf
cmp
fdivr
add
or
jbe
mov
mov
aam
pop
adc
data16
pop
sbb
sbb
xchg
or
int
mov
jns
or
fstpt
pop
lea
lahf
fwait
mov
sbb
fcomp
pop
push
mov
mov
lods
cmp
in
clc
push
outsl
cmp
inc
sbb
dec
lret
lcall
mov
inc
addr16
adc
xor
pushf
or
inc
xchg
cmp
repz
jl
mov
mov
xor
push
sub
pop
sbb
enter
rorb
and
jbe
in
jno
push
into
fiadds
enter
and
cmp
mov
push
clc
pop
push
fnsave
jle
iret
push
mov
out
bound
mov
ds
ret
xor
clc
inc
orl
adc
sub
sbb
in
push
adc
mov
cmp
adc
fildll
insb
jp
or
or
push
jecxz
cmp
aad
cmp
cwtl
sti
adc
sub
xchg
add
xor
push
int
push
hlt
sti
jle
shrl
jb
pop
psubb
mov
inc
adc
jp
rcl
mov
mov
ficomps
pop
lods
push
mov
cmp
push
cltd
push
fimull
or
mov
push
adc
add
push
cmpsb
xor
mov
test
pop
lret
dec
inc
dec
jle
imul
dec
lds
cmp
in
loop
xor
inc
sahf
mov
repz
ljmp
mov
fwait
stc
addr16
adc
and
outsb
es
push
repz
mov
mov
cmp
cld
xlat
mov
cs
scas
dec
int
jb
jmp
xchg
and
in
pop
pop
adc
xchg
lcall
push
lret
mov
push
inc
sti
pop
shrl
testl
lahf
icebp
bound
in
xchg
add
sub
stos
pop
push
aas
ja,pn
inc
mov
out
jb
shll
fucomp
lods
aam
mov
imul
mov
lret
jg
xor
es
test
lods
push
xor
xchg
pop
incb
test
sbb
mov
outsl
hlt
xor
pushf
mov
sub
mov
add
int
adc
lcall
mull
cmp
jns
cmp
in
mov
inc
cld
mov
mov
lahf
shlb
push
add
jl
mov
lods
push
ror
dec
test
jl
sbb
cmpsl
cmp
cmp
lret
lcall
imul
stos
adc
shlb
push
sti
inc
loope
loopne
mov
dec
test
push
sub
mov
test
es
inc
mov
in
leave
lods
push
sbb
insb
inc
loop
pop
inc
pop
sbb
inc
add
das
mov
and
pop
dec
xor
arpl
push
std
pop
mov
rcrl
mov
clc
sub
lock
test
fistl
cmp
push
hlt
bound
dec
cmpsb
mov
test
orb
jg
cwtl
jbe
popa
mov
push
mov
mov
add
insb
push
dec
ja
pop
pop
scas
daa
dec
mov
mov
push
orl
fildl
and
loop
or
add
enter
inc
lds
bts
js
scas
xchg
lods
ljmp
push
fdivs
add
pop
fwait
out
into
sti
mov
loope
xor
lcall
pusha
jge
ret
or
loope
shrb
push
mov
cmp
outsb
jo
shll
pop
bound
cmpsl
mov
add
sub
movb
xor
jmp
push
fimull
and
movsl
hlt
lods
mov
icebp
push
icebp
push
adc
jo
push
shrl
or
sbb
xchg
jmp
rcl
aam
ret
cmpsb
pop
clc
xchg
mov
in
mov
leave
je
mov
movsl
sti
or
or
int
pop
push
mov
imul
loopne
add
lret
dec
int
mov
xchg
outsb
ficoml
loopne
rol
adc
je
hlt
push
dec
sub
mov
fld
mov
cmp
inc
and
sub
test
and
mov
pop
enter
das
mov
scas
rcl
testb
outsl
sub
add
inc
jnp
jbe
enter
lcall
insb
push
inc
fstpt
lds
es
push
imul
int3
inc
rolb
ss
ss
stc
andl
jl
mov
and
aaa
xor
xchg
push
movsb
add
mul
out
add
xchg
loope
mov
dec
repz
ja
or
sub
mov
rcr
cs
sub
mov
pop
xchg
cld
or
sbb
or
jnp
mov
gs
adcl
mov
inc
sub
test
call
adc
fiaddl
fidivrs
mov
stos
cmp
bound
pop
sbb
dec
je
pop
sub
fucomp
xor
test
xlat
iret
mov
mov
dec
cmp
mov
mov
dec
jnp
scas
xchg
fisubrs
add
xor
sub
mov
pop
pop
mov
sub
aaa
push
jae
pushl
push
sti
addl
jge
or
mov
jnp
push
and
sti
mov
xor
pop
sbb
xor
sub
dec
dec
xchg
mov
or
and
test
shrl
ror
sub
sub
ja
sub
mov
std
pop
loop
push
inc
lods
and
fcomps
rolb
push
xchg
sub
je
out
jnp
xor
inc
lahf
or
dec
jnp
cmp
sarb
gs
outsb
inc
sbb
hlt
cmp
cli
jne
cmp
cmp
sbb
mov
imul
push
scas
sub
or
rclb
inc
fmuls
push
push
lcall
daa
jae
arpl
ret
cmpsl
add
jno
insb
scas
in
mov
jge
lea
repnz
xchg
adc
fcompl
mull
cmpsl
icebp
mov
movsl
rolb
mov
insb
js
js
xorb
cmpsl
in
lret
icebp
lock
add
xor
repnz
ret
inc
cltd
loop
orl
nop
jno
loope
add
mov
sbb
cmpsl
repnz
pop
pusha
cmc
fsub
out
xor
sbb
xor
cmp
mov
cwtl
jp
test
daa
inc
pop
push
lret
xchg
push
push
inc
rclb
pop
jmp
aam
inc
sub
stos
xor
das
bnd
lea
call
jle
imul
adc
dec
mov
leave
mov
outsb
mov
test
adc
pop
cld
es
mov
loope
cmpsl
push
mov
cmpsl
jl
push
outsl
dec
int
out
inc
mov
out
sub
mov
jl
test
fcmovnbe
add
cmpl
push
cmp
inc
insb
pop
pop
lods
cmp
xchg
mov
and
jae
shll
in
and
cwtl
sub
inc
movsl
movsl
ds
mov
inc
test
adc
mov
pusha
xor
pushf
push
pop
jp
stos
testb
rclb
cmp
stos
aaa
ret
push
out
push
pushf
roll
std
inc
and
cmp
dec
add
push
and
aaa
scas
adc
dec
clc
arpl
lret
insb
inc
ror
pop
push
mov
mov
adc
dec
mov
enter
pop
js
cld
inc
sbb
hlt
daa
and
loopne
dec
js
leave
and
aaa
pop
mov
dec
lcall
cmpsb
pop
jne
hlt
mov
dec
mov
lahf
in
dec
jne
sbb
or
and
mov
xor
and
mov
mov
push
fsub
lret
adc
add
inc
imul
pop
repz
pusha
fcompl
clc
pop
ljmp
jge
inc
inc
or
int
das
mov
fwait
aas
loope
fsts
add
insl
push
lcall
pusha
fs
mov
mov
mov
cmpsb
cmpsb
orb
cmp
das
pop
xorb
jnp
add
fwait
arpl
in
xor
lret
dec
mov
push
dec
mov
loope
shlb
div
dec
sti
stc
cmp
cmp
test
cmp
adc
mov
shll
mov
xor
mov
out
lods
test
mov
inc
ja
inc
ja
cld
in
jnp
pop
shrl
sahf
icebp
or
adc
xchg
inc
pushf
sub
cmpsl
and
or
mov
sahf
les
cmp
push
dec
pop
dec
data16
sti
dec
dec
jno
jp
add
add
mov
mov
pop
jo
fcomps
push
jnp
push
loop
push
out
and
fistpl
and
movsl
lods
inc
stc
mov
scas
stos
sub
in
pop
mov
out
jmp
pop
cmp
mov
pop
or
adc
sahf
inc
sbb
push
dec
sub
xor
mov
pop
cltd
xchg
outsb
cmp
loop
hlt
xor
sub
rcll
pop
cmp
jo
xchg
fdivrl
scas
pop
pushf
xor
dec
cmp
sbb
jbe
jnp
or
leave
push
es
lret
fwait
montmul
cmpsb
add
fiadds
cmc
ss
xor
aad
jae
mov
dec
pusha
push
lcall
test
int
addl
in
cmc
shlb
xchg
xchg
pop
lods
cltd
inc
cltd
dec
cwtl
inc
bound
jle
mov
daa
idivl
and
pop
imul
cmp
pop
sbbb
pop
jg
mov
jb
or
in
rol
test
sub
je
mov
adc
ret
sti
cmpsb
add
jmp
push
mov
cld
loop
xchg
pushf
ds
dec
sbb
cmp
pop
in
int3
mov
jno
xor
mov
push
fisubl
xor
sub
jle
fwait
clc
jmp
iret
xchg
mov
sub
into
jo
lods
push
lods
incl
jo
iret
xlat
pushf
rorl
jle
scas
jmp
shrb
lea
mov
lahf
jb
push
add
or
daa
ficompl
jg
add
cmp
or
mov
insb
sub
mov
cld
xchg
std
sub
sub
fcoml
leave
mov
les
repnz
addb
out
adc
loop
iret
je
dec
mov
pop
push
pop
idivb
pusha
sbb
jns
insb
add
mov
xchg
cmpl
cld
inc
jae
pop
xor
addr16
sbb
cmc
jge
xlat
inc
sub
stc
ds
lods
fmull
jmp
jp
push
inc
in
leave
xor
jb
arpl
cmpsl
mov
leave
jge
adc
fdiv
int3
inc
int
cli
cmp
movsl
sti
add
dec
mov
xchg
cmp
js
insl
in
xchg
cmpsl
movsb
mov
cld
or
jb
aas
lods
leave
cmp
mov
fadd
repz
addr16
ja
lret
sub
mov
pop
pop
aad
jmp
int3
loope
xor
pop
je
aas
inc
add
mov
xor
push
addr16
push
lods
outsb
cmc
int
xchg
bnd
shll
and
popf
inc
xchg
add
hlt
sarl
mov
or
dec
fisubl
dec
mov
dec
pop
jmp
dec
mov
popf
mov
jl
adc
bound
push
pop
xchg
faddp
mov
sub
and
inc
pop
loopne,pt
mov
jmp
enter
sbb
adc
gs
cli
mov
sbbb
sahf
jmp
mov
repz
mov
adc
cli
dec
lret
pop
and
sti
cmp
add
sbb
out
mov
adc
outsl
aaa
data16
lock
cmp
add
jbe
inc
cmp
dec
loopne
sbb
adc
jne
cmp
outsb
fwait
sbb
jb
divb
sbb
in
or
popf
adc
aam
or
xchg
insb
ja
pop
sbb
mov
arpl
sub
in
pop
lods
lret
push
sub
data16
mov
push
mov
cmp
stos
sbb
dec
push
jle
mov
leave
push
mov
fucomip
clc
arpl
pop
fsubrl
div
divl
jnp
sbb
push
scas
jp
push
leave
adc
nop
push
pushf
clc
ffree
dec
leave
pushf
lahf
dec
mov
mov
test
sub
jno
imul
fsubs
adc
jns
push
popa
pop
pop
jo
in
pop
test
outsl
and
push
jle
mov
cmpsb
out
sub
and
cmpsl
sub
or
mov
ljmp
jecxz
push
fwait
stos
lds
mov
jl
sbb
loope
jo
adc
scas
arpl
mov
xor
xor
or
mov
xchg
mov
xchg
loopne
sub
inc
add
fisttps
jne
push
and
dec
adc
cmpsb
movsl
adc
andb
inc
leave
into
push
test
cmpb
pmulhw
pop
cmpsl
movsl
dec
push
sbb
xchg
mov
mov
in
ja
dec
test
push
in
sub
das
push
outsl
pop
xchg
rclb
ficoml
add
jno
test
inc
loopne
aaa
flds
int3
xlat
jp
nop
nop
jmp
mov
xchg
arpl
andl
jns
test
loop
rorl
mov
outsl
mov
imul
mov
push
fcompl
jl
lret
arpl
sub
insl
cltd
sbb
gs
roll
out
fcoml
dec
inc
and
xchg
mov
arpl
cli
test
out
ljmp
jb
fidivrs
dec
xor
push
shl
sub
mov
outsl
leave
divb
xchg
or
fldcw
mov
xchg
sub
dec
test
xor
repnz
ficoms
outsl
and
inc
int3
lds
jo
aaa
mov
cld
add
pop
inc
or
pop
push
xor
lahf
xchg
test
arpl
mov
mov
push
mov
pop
scas
cld
stos
push
dec
jecxz
scas
sbb
or
ret
fcomps
xchg
je
jno
jmp
fsts
lahf
lcall
dec
cmc
sbb
cmp
mov
int3
mov
pop
xchg
fiaddl
data16
xor
mov
int3
cli
nop
jo
jmp
repz
cmp
clc
cmp
test
dec
adc
cld
fmull
movsl
xchg
loopne
sub
mov
mov
push
xor
int
mov
sbb
or
sar
pop
clc
sbb
inc
mov
repz
add
cmp
xchg
sahf
add
mov
push
sub
adc
jno
adc
psubb
xor
dec
xchg
sbb
dec
and
lcall
js
pop
push
push
aas
out
mov
sbb
into
mov
and
hlt
int
int
sub
jmp
pop
pop
test
rol
push
sbb
mov
push
push
adc
xor
jbe
call
imul
out
loop
shlb
test
inc
stos
xchg
push
ja
rcl
cwtl
ja
xchg
jge
xor
inc
add
mov
cmp
xchg
sbb
sbb
icebp
hlt
cmp
inc
cs
call
xor
pop
flds
cli
inc
int3
sbb
adc
fldt
mov
dec
add
imul
mov
lods
mov
cmp
inc
out
inc
cmc
jecxz
xor
mov
dec
leave
sbb
or
movsb
fildl
inc
mov
in
fucomp
fmul
lret
jns
lcall
jmp
mov
adcb
stos
addb
xor
inc
sbb
inc
push
or
fs
andb
mov
mov
mov
fnstcw
jl
push
lock
sti
xchg
out
push
js
pop
popa
mov
iret
dec
dec
fidivrl
xchg
out
lret
inc
mov
push
cmpsb
and
mov
rorb
lods
pop
xor
dec
sub
rorl
out
jb
jl
jp
pop
incb
and
rolb
xor
cld
cli
mov
mov
cmovp
jmp
repz
pop
mov
les
cmp
adc
or
mov
mov
pop
jmp
sbb
insb
push
stos
loope
in
aam
sub
stos
inc
pushf
mov
jns
repnz
in
mov
jle
xlat
mov
push
cmp
lods
ret
mov
xchg
mov
imul
push
pop
fcomps
mov
out
rcrb
inc
xchg
gs
adc
or
mov
test
cwtl
ds
dec
or
shlb
xor
fimull
not
xchg
mov
dec
xor
je
mov
out
pop
aam
in
iret
movsl
dec
je
sti
cmp
jmp
aad
lods
mov
outsb
fimuls
sarl
xor
jae
cmpb
js
fwait
mov
fwait
xor
inc
das
xchg
dec
insl
mov
enter
in
shr
xor
xor
js
pop
sub
xor
pop
int3
sub
push
cwtl
and
inc
adc
pusha
stos
pop
inc
fisubrl
cmc
stc
xchg
mov
cmpsl
jnp
add
mov
xchg
test
loopne
lahf
add
incl
out
or
inc
jnp
fstpt
lea
lret
es
and
js
int3
movsl
push
sub
xchg
arpl
cmp
cmp
out
pop
mov
push
in
mov
cmp
and
test
xchg
inc
out
test
fs
movsl
std
inc
inc
fistps
pop
mov
outsb
stos
add
popf
insl
pop
in
pop
sbb
hlt
insb
xchg
out
sbb
popa
pop
loope
hlt
mov
push
pop
ss
fsubrs
cmovs
test
out
xchg
ljmp
xchg
idiv
ja
xchg
and
xchg
cmp
pushf
ss
xchg
cmp
mov
and
pop
out
inc
rcrl
xchg
sub
ja
cmpsl
and
jle
ja
push
mov
fs
dec
repnz
push
test
dec
mov
pop
mov
mov
and
dec
or
and
sub
das
pop
aas
out
icebp
mov
js
loope
cmp
not
ja
dec
out
sub
mov
jge
and
test
mov
jle
insb
sub
and
xor
xor
in
adcl
lods
xor
xchg
loope
dec
jecxz
stos
jl
test
outsl
mov
pusha
lods
loope
leave
xchg
lods
jbe
out
xchg
lea
cltd
mov
xor
aad
cwtl
xchg
or
lock
mov
push
negl
rcl
jp
jge
push
sarl
movsl
or
les
pop
mov
dec
jp
int3
xchg
out
jno
and
lret
inc
sub
in
shll
and
lods
lock
jbe
imul
test
jp
lea
sbb
data16
adc
stos
mov
and
dec
addl
push
subb
ljmp
addr16
mov
mov
push
mov
popf
mov
dec
test
adc
jp
or
sbb
outsb
pop
pop
xchg
loopne
xor
stos
push
aas
sbbl
mov
xchg
jno
leave
stos
into
loope
xor
fwait
lret
mov
dec
clc
fwait
jecxz
cli
xchg
icebp
xchg
sbb
daa
jp
je
pop
test
and
mov
jle
testl
scas
enter
in
jle
jle
les
jmp
jmp
mov
cmp
lret
aaa
and
jne
sbb
aad
push
pop
push
jb
pushf
adc
inc
push
or
lret
popf
stc
repz
repnz
rcr
cwtl
dec
dec
lret
add
lock
sub
push
insb
adc
mov
jbe
mov
adc
mov
imul
lods
mov
xchg
aas
push
pop
pop
pusha
ja
pop
in
mov
mov
inc
xchg
push
arpl
ffreep
scas
ret
enter
sar
xchg
xor
push
cld
idiv
dec
sbb
incb
scas
add
push
gs
fs
lock
jl
inc
out
jae
push
or
arpl
xchg
in
les
repz
rorl
push
mov
inc
mov
mov
lock
pop
gs
scas
dec
rcl
xor
mov
fcoml
lahf
pop
adc
mov
icebp
mov
outsl
icebp
clc
dec
dec
lock
test
dec
in
dec
inc
xchg
pop
pusha
test
addb
fstps
test
jg
data16
mov
jns
pop
inc
jbe
aad
xlat
test
inc
and
shrl
and
mov
aad
adc
insb
cltd
into
jno
lcall
cld
outsl
icebp
mov
jg
test
mov
jmp
decb
cmp
sbb
jge
dec
sub
or
outsl
ss
cwtl
out
or
nop
or
je
sub
sar
pop
shlb
adc
loopne
sbb
mov
jge
xor
pop
imul
xchg
lods
mov
fnstcw
mov
mov
sbb
mov
mov
iret
add
stc
js
stc
push
xor
cmp
repnz
xchg
pop
std
add
pop
mov
cltd
pop
sub
lock
jle
pop
jo
data16
adc
stos
cmp
push
pop
loop
fcmovne
sub
xchg
clc
je
addr16
test
hlt
mull
cld
lock
mov
ljmp
xlat
cld
sub
jg
and
mov
push
aaa
push
jecxz
imul
push
hlt
jl
mov
cmp
mov
pop
aas
iret
jne
mov
adc
repz
or
mov
ss
inc
xor
das
jle
pop
insl
xchg
xorl
dec
and
adc
lret
push
xlat
out
ljmp
clc
imul
or
cld
mov
ds
imul
mov
dec
int
jle
pop
sti
or
stc
mov
mov
ja
cmp
sti
sub
popf
sbb
mov
cmpsb
pop
mov
cmpsl
cmp
push
lods
xor
inc
les
lods
fprem
test
pop
loopne
les
ljmp
sti
jecxz
jno
push
dec
pop
cltd
cmp
adc
call
jno
push
lds
rclb
xchg
pusha
jp
lret
icebp
dec
xor
dec
cmp
dec
push
stc
jnp
xor
push
sbb
sub
cmp
sti
loop
test
movsl
cmp
je
leave
popf
pop
lcall
sub
repnz
flds
jecxz
cmp
push
mov
test
stc
or
xchg
dec
sbb
sbb
enter
clc
repnz
inc
int
rorl
in
imul
rorl
out
insl
mov
jbe
sub
aas
or
xchg
rolb
cmp
ja
fstpl
dec
xchg
bound
inc
mov
popa
mov
xor
mov
jl
shll
dec
fwait
rorb
push
mov
cli
add
popf
dec
inc
mov
sub
scas
dec
inc
adc
sub
cmp
cmpsl
test
sbb
jns
or
sahf
stc
jnp
inc
pop
pop
mov
or
out
fsubrl
cmp
and
sti
gs
rorl
or
fwait
dec
dec
js
pop
loop
inc
push
mov
je
xchg
pusha
repnz
add
mov
ljmp
lret
mov
js
xor
xchg
adc
jp
push
std
cmp
add
and
bsr
iret
out
test
loopne
mov
push
mov
adc
adc
lods
int3
jg
movsl
ds
push
mov
mov
mov
icebp
xchg
xor
jns
pop
stos
adc
insb
sahf
packssdw
gs
loopne
jmp
mov
cld
subb
push
xor
sahf
arpl
and
push
shrl
repnz
fsts
es
rolb
jge
shlb
dec
into
mov
xlat
jmp
bound
shrb
cld
mov
xor
dec
lock
push
jbe
sbb
jle
into
pop
loop
and
xchg
sub
nop
sbb
sub
lret
daa
popf
ftst
jae
xlat
insb
pop
cmpsl
and
mov
rcll
sti
mov
sbb
mov
push
mov
pop
xchg
xchg
cltd
or
or
fsubrs
mov
xchg
addr16
cmp
fmull
nop
es
xchg
pop
mov
out
sahf
sub
mov
adc
xchg
mov
in
pop
dec
xlat
ljmp
sub
je
andb
jae
stc
stos
add
jae
idivb
scas
sub
push
repz
rep
out
sub
movsb
jg
dec
adc
andl
xor
call
dec
nop
mov
jns
insb
lahf
mov
and
mov
cmp
ja
clc
lcall
inc
outsb
in
icebp
jae
lret
and
push
cmc
push
xchg
push
cwtl
sbb
ret
popa
mov
pop
pop
dec
cld
adc
popa
ficoms
push
mov
mov
or
cli
jnp
cltd
std
test
and
pop
ss
cs
stc
mov
loop
loopne
movsb
and
cmp
xchg
sbb
imul
sti
int3
cs
dec
mov
xchg
cmp
loope
je
fidivrs
nop
in
mov
fs
cltd
push
add
sbb
mov
into
mov
ret
clc
mov
dec
mov
jmp
xor
cltd
dec
jbe
ljmp
cmp
jnp
inc
push
cmpsb
lahf
fidivl
mov
testl
mov
cmp
push
dec
mov
decl
mov
mov
xor
mov
cmp
dec
mov
cmpsl
mov
inc
pop
cwtl
jo
cld
fwait
lds
add
fwait
fwait
sub
push
insl
cmp
jmp
inc
ja
jbe
jae
jne
jo
pop
fwait
jnp
dec
fdivrl
fwait
xchg
shrl
sub
mov
mov
movsl
data16
into
loope
jnp
fsubs
test
sbb
push
incb
inc
lods
inc
and
push
lcall
push
mov
jmp
cld
mov
adc
inc
pop
push
adc
popa
xchg
push
inc
pop
dec
rol
xchg
adc
movsb
loopne
xchg
inc
push
mov
cwtl
mov
popa
loope
mov
enter
and
pop
sbb
mov
push
xor
sbb
and
repnz
addr16
leave
inc
mov
mov
loopne
xchg
dec
test
add
mov
mov
sbb
movb
mov
aas
push
shlb
xor
adc
mov
adc
icebp
test
mov
in
fs
lcall
xbegin
hlt
xor
sbb
mov
int
subl
pusha
loopne
cmp
fdivs
je
dec
cltd
cmp
outsb
or
jmp
fs
cmp
lods
jne
lock
pop
jle
mov
mov
pop
subb
in
ljmp
mov
push
shrl
jo
fcomp
push
out
inc
imul
jmp
div
cmp
push
xchg
xchg
out
pusha
cmp
dec
push
fdivl
mov
cmp
xchg
in
aad
nop
test
jl
icebp
aam
lret
jl
lahf
mov
cmp
sarl
jns,pn
mov
mov
insl
mov
xor
fbld
and
je
mov
mov
enter
xchg
pushf
xchg
loope
mov
leave
sbb
pop
pop
test
in
jge
outsl
icebp
cld
aas
inc
popa
mov
jmp
sbb
aas
ror
push
or
idiv
cs
pop
push
pop
push
das
repz
cmp
notb
push
jl
jmp
push
bound
fsubp
shr
lods
negl
pop
xchg
es
cmp
aam
adc
adc
loop
iret
push
mov
dec
adc
imulb
xchg
xchg
xchg
dec
fnstsw
push
pop
push
fisttpl
inc
xor
clc
mov
fwait
into
mov
xchg
push
bound
push
sub
movsl
xor
mov
jmp
cs
sbb
and
mov
repz
cmp
cmp
cld
es
idivb
xor
pop
dec
nop
cmc
pop
xchg
fs
lret
shll
pusha
mov
scas
pop
or
imul
shll
adc
in
stc
cwtl
mov
mov
dec
jno
fcmovnbe
mov
sarb
mov
and
cmp
sub
fs
pushl
xchg
adc
aaa
fnstenv
fimull
sub
mov
or
jmp
cmp
das
divl
cmp
dec
mov
sub
sbb
xchg
sti
dec
push
inc
push
lret
jge
cmp
es
mov
lret
xchg
js
lock
adc
or
mov
ret
lahf
lahf
mov
in
cld
test
pavgw
lds
xor
loop
cmpsb
test
jmp
ss
adc
fdivrl
fdivrl
std
cmp
pop
jmp
xchg
dec
mov
int
inc
rorl
mov
pop
sub
and
or
fwait
mov
and
sub
call
inc
push
cmc
xchg
out
loope
jecxz
jmp
cmp
cmp
outsb
sbb
pop
cmp
jo
mov
and
sub
sti
xlat
xchg
fildll
adc
lods
imul
aaa
xchg
orl
sarl
divb
xor
sub
stc
dec
inc
loope
stos
jg
inc
cmc
jnp
mov
popa
arpl
mov
pop
or
icebp
mov
outsl
icebp
mov
scas
mov
push
stos
fmul
pop
jnp
fcmovu
cld
or
add
ret
aam
bnd
pop
shrb
inc
push
pop
loop
and
xchg
sub
mov
mov
cs
xchg
insb
enter
mov
out
mov
insl
insb
xor
cld
mov
and
push
pop
int3
push
loopne
enter
jmp
insl
fidivrl
adc
mov
sarl
xor
arpl
ds
loop
mov
lea
adc
sbb
repnz
in
cs
lret
loop
add
mov
rol
sbb
call
data16
test
sbb
inc
cmpsb
pop
xchg
data16
ret
jecxz
sbb
int3
roll
ds
add
scas
pop
shr
repnz
mov
jbe
popf
lcall
xchg
lahf
ljmp
dec
inc
sub
leave
mov
gs
mov
dec
sub
mov
lahf
pusha
xchg
add
dec
adc
mov
scas
fldt
mov
mov
mov
push
cld
fidivrs
inc
and
jo
imul
cli
sbb
add
lahf
mov
xor
lods
sbb
cs
push
sbb
arpl
daa
sbb
pop
dec
adc
jge
aas
mov
daa
mov
xor
push
enter
cmp
xchg
inc
cmp
mov
add
mov
jae
cmp
pop
push
andl
jmp
push
dec
stos
test
mov
and
inc
lods
xor
inc
imul
mov
xchg
adc
inc
imul
mov
mov
repz
adcb
add
fildll
ja
sub
sbb
out
sarb
out
and
adc
mov
sub
fs
sub
lock
cli
cwtl
add
jo
xor
filds
adc
dec
jb
cmp
push
dec
jno
movsl
cwtl
hlt
sbb
and
and
ljmp
jbe
sbb
dec
in
mov
imul
imul
adc
scas
and
jmp
jecxz
insb
push
mov
jge
pop
xchg
orb
leave
xor
push
xor
mov
sbb
out
mov
aas
scas
int
mov
lret
cwtl
mov
cmp
sub
xchg
clc
pop
jp
mov
scas
imul
test
iret
mov
fbld
lahf
pop
dec
das
mov
lds
cmp
test
push
adc
cld
out
test
cmp
pop
adc
xorb
fnsave
or
data16
lods
popa
out
js
xchg
jne
push
mov
inc
adc
ds
ds
or
xor
shlb
mov
and
loope
movsb
pop
sbbl
sub
dec
xor
call
inc
test
rorb
cmp
loopne
cld
xor
aaa
shr
or
inc
ficompl
fwait
call
push
adc
pop
dec
pop
mov
fdiv
repz
leave
push
xchg
imul
dec
jp
pop
scas
adc
inc
xor
jp
call
jmp
dec
xchg
gs
inc
inc
pop
andl
mov
subl
xchg
jno
and
popa
out
inc
out
stos
lahf
pop
vcvtps2dq
sbb
hlt
shlb
pop
in
and
sbb
push
sbb
jmp
mul
push
xor
xor
repz
xchg
loopne
mov
rclb
mov
jb
insb
jae
fsubs
mov
inc
or
adc
push
adc
mov
aas
inc
mov
ret
inc
jge
mov
leave
mov
pop
xor
ja
call
and
ss
in
push
popf
mov
shlb
pop
add
bound
imul
jno
xor
inc
pop
add
sub
fidivrs
mov
add
push
lea
cmp
mov
add
adc
mov
sbbl
cltd
in
lahf
pop
cs
xchg
cmc
jmp
jnp
jns
scas
data16
push
xor
cmp
mov
leave
cmpsl
mov
in
insl
loopne
loop
push
in
cld
jmp
ss
ja
ds
and
cmp
sub
js
popa
clc
adc
xor
push
out
sbb
lcall
in
lds
int
jne
rorl
mov
popl
shlb
push
scas
lret
scas
into
pop
sub
mov
sbb
stc
fidivl
sbb
sub
xchg
inc
dec
inc
cmp
dec
cmp
jnp
repnz
aas
cmp
dec
inc
leave
cmpsb
jbe
pop
lret
ss
in
jnp
sub
jp
xchg
xor
or
popa
dec
or
out
shr
jno
jne
jmp
inc
mov
inc
push
or
aas
jne
adcl
jae
pop
jmp
mov
sub
push
mov
stc
or
push
mov
adc
hlt
cwtl
shrl
mov
ret
cmp
pop
js
xor
aam
sub
lea
xor
out
xlat
jmp
sub
xor
pop
mov
xor
or
hlt
mov
mov
cmp
sbb
mov
out
push
cmp
dec
iret
mov
lods
mull
pusha
sahf
xlat
mov
dec
or
fisttps
out
les
lds
lea
test
das
cmpsl
dec
inc
insb
mov
dec
pop
jecxz
fcoml
call
inc
fwait
mov
push
nop
int3
cld
inc
rcl
xchg
imul
movsl
jbe
push
mov
mov
not
xchg
cmpsb
in
dec
sahf
xor
mov
nop
adc
push
jecxz
ficoms
rcrb
xorb
jnp
mov
dec
jne
push
popa
adc
stc
bound
sub
sbbb
sahf
adc
nop
adcl
mov
dec
daa
loopne
cmp
je,pt
cld
dec
stos
or
mov
jnp
mov
fisubs
add
xchg
jmp
pop
daa
gs
rclb
rclb
popf
clc
sbb
popaw
mov
fst
outsb
aaa
repz
outsl
ffree
shll
data16
and
add
sbb
mov
push
aad
mov
push
outsb
mov
jbe
xor
cmp
jnp
inc
mov
arpl
adc
cltd
fildl
or
inc
xor
jbe
cld
shll
push
dec
mov
or
cld
icebp
push
sub
mov
push
fnstcw
rol
dec
mov
inc
jmp
aam
hlt
dec
sub
enter
adc
mov
mov
sub
sbbl
pop
lahf
mov
mov
mov
sbb
mov
into
aam
inc
shll
adc
push
pusha
and
leave
add
outsb
pop
or
leave
and
pop
lods
cltd
push
pop
arpl
jae
pop
adc
mov
loope
aaa
arpl
shrl
into
mov
sbbb
pop
sbb
sbb
aam
xchg
xchg
test
aam
dec
mov
into
cmp
push
icebp
mov
xchg
fwait
test
pusha
pop
nop
repz
sub
je
xchg
or
adc
jns
mov
inc
sbb
cmpsl
in
shl
mov
sub
cmp
dec
lods
rclb
sbb
inc
in
ret
cltd
mov
mov
ljmp
mov
or
push
jg
jae
cmp
fcomps
repnz
lock
cmp
fstps
bound
xchg
xor
idiv
scas
mov
out
xor
add
cmc
dec
dec
inc
inc
and
push
adc
lds
ret
pop
and
sbb
shr
fidivl
jns
xchg
mov
shrb
sbb
push
pop
mov
xchg
inc
xor
icebp
mov
imul
push
mov
xchg
clc
xor
xorl
xor
fildl
les
jb
test
jae
sbbb
sub
sub
xor
push
inc
imul
sbbb
dec
outsb
mov
pop
dec
ja
mov
pop
je
pop
inc
call
nop
add
jnp
scas
adc
mov
in
mov
xorl
inc
dec
mov
pop
repnz
xlat
lock
sub
cmp
dec
mov
mov
into
adc
test
cld
dec
sub
dec
fwait
push
inc
xor
pop
mov
inc
cmc
push
movsl
push
aad
sti
imul
fbstp
fistps
rolb
add
or
enter
insl
add
ds
inc
ficomps
pop
push
in
mov
add
xor
xor
jae
fisttps
dec
clc
pop
mov
mov
cmpsl
test
test
stos
mov
xchg
repz
enter
in
cmp
sub
pop
add
jns
ret
add
pop
inc
cmp
sub
or
std
xor
cmc
adc
xchg
cmp
idiv
xchg
inc
shld
adc
cmpsb
adc
shll
adcb
ja
inc
js
mov
scas
mov
mov
and
push
mov
loopne
jle
cwtl
push
ds
sbb
scas
nop
push
out
push
pushf
inc
dec
sub
pop
mov
mov
mov
fsts
dec
push
sub
xor
and
repnz
loopne
cld
adc
inc
cwtl
or
add
sub
ljmp
out
nop
fildll
mov
xchg
aaa
stos
sub
push
push
lret
jae
pop
dec
cmp
inc
push
hlt
cmp
xchg
xor
jb
xchg
outsb
cs
dec
arpl
into
pop
scas
sbb
xchg
sbb
mov
push
popf
xchg
fstpl
lock
in
xchg
cli
mov
addr16
xchg
stos
lods
js
popa
lods
add
xchg
in
cmp
iret
inc
cmc
insl
add
xchg
fstl
and
and
jecxz
push
mov
or
jo
das
out
orl
test
repz
gs
jb
mov
inc
cmp
sbb
mov
jp
jp
nop
pop
xchg
outsb
sti
sbb
pop
int
pop
xchg
pop
into
rol
lock
adc
pop
mov
int3
push
push
outsl
dec
loope
xchg
xchg
mov
dec
or
lret
sbb
xor
and
mov
repz
ret
movsb
addl
add
cmp
or
add
lods
je
cmp
outsb
lock
ret
sbb
aam
lret
and
mov
and
sbb
jnp
sbb
dec
ja
push
imul
fldt
push
adc
ds
xchg
push
movsb
scas
sbb
xchg
bound
adc
push
cmpsb
cmpsb
popa
out
ja
pop
fsubs
inc
loope
cwtl
ficompl
cmpsl
cld
inc
out
or
sbb
or
shll
outsb
mov
in
pushf
push
in
pop
leave
mov
jno
xor
fwait
xor
xchg
push
insb
jns
jp
jmp
stos
xchg
popa
push
lods
sbb
jecxz
out
fldcw
push
adc
add
pop
jbe
inc
pop
into
dec
dec
or
mov
and
xchg
adc
test
adc
inc
inc
dec
pop
cmp
stos
xor
in
xchg
adc
repnz
adc
into
inc
adc
inc
push
dec
jbe
mov
jno
lea
cmp
xorl
insb
fwait
push
jmp
mov
mov
jmp
inc
stc
mov
out
aas
jle
adc
xor
arpl
int3
pop
pop
fsubs
iret
fildl
sub
push
scas
jbe
cli
inc
loopne
jae
or
ljmp
xchg
inc
inc
es
mov
add
test
shrl
int
mov
mov
push
insb
mov
pushf
std
and
outsb
mov
adc
ljmp
mov
sbb
mov
lret
sub
pop
push
inc
lods
mov
addr16
outsl
sub
dec
ja
cmc
cmp
jge
cmp
sub
in
add
jns
in
scas
rcr
iret
lret
cmp
push
mov
pop
enter
je
cmpsl
pop
inc
out
pop
mov
pop
sbb
dec
test
add
mov
mov
mov
loop
out
sub
ret
xor
dec
pop
cmp
fwait
mov
mov
xor
xchg
and
leave
arpl
fs
sub
in
or
mov
lahf
mov
stos
cmpsb
or
sub
push
add
call
out
call
call
call
push
dec
push
in
pop
outsb
or
mov
cmp
xor
ret
lock
adc
fists
add
outsl
call
and
jno
mov
inc
push
int
dec
sbb
and
sub
jmp
xchg
rcl
cmpsb
sbb
imul
fistps
mov
pop
aad
hlt
ret
int3
stos
xor
xor
mov
sbb
inc
dec
fadds
xor
pop
data16
shrl
sbb
stc
cmc
inc
sbb
mov
xor
std
or
nop
lock
loopne
pop
sub
xchg
push
mov
push
insb
outsb
inc
sub
xorb
push
or
fdivl
ja
pop
pop
xchg
inc
mov
aas
lods
dec
xchg
outsl
cltd
cmpl
jecxz
fidivrs
mov
pop
or
mov
add
jo
loopne
aas
notb
mov
repnz
push
dec
das
cld
jae
nop
dec
roll
stc
sub
imulb
mov
mov
mov
mov
mov
repz
mov
xchg
mov
es
xchg
xchg
sarb
int3
test
xor
outsb
push
jae
sub
popf
clc
lret
pop
je
pop
sub
cld
adc
ror
out
and
loopne
or
ficompl
movswl
mov
daa
out
hlt
aam
test
mov
mov
mov
add
notl
dec
and
mov
xchg
cld
addr16
adc
mov
or
jne
pop
xchg
pop
dec
cmpsl
ja
dec
jg
mov
cwtl
or
iret
adc
mov
cmp
in
mov
aaa
mov
popa
or
pop
pop
and
cmp
in
xchg
lock
outsl
nop
mov
jp
mov
repz
fisubs
mov
popa
daa
sbb
sub
or
dec
ret
test
inc
fistps
in
sti
in
sub
jnp
jno
jae
pop
test
add
es
cmp
mov
icebp
cmp
ja
aad
mov
rcl
ret
fwait
loope
xor
fidivs
and
or
andb
lea
adc
push
cmp
or
cmp
add
dec
xor
dec
lret
jp
mov
mov
aam
lea
lcall
lock
or
bnd
push
add
xchg
pop
mov
mov
neg
cmp
jg
mov
lret
mov
or
mov
arpl
ret
xor
sarb
xchg
dec
pop
mov
pop
cli
ret
aas
insb
icebp
pop
cld
sahf
gs
cmpsl
jno
aas
arpl
jg
inc
roll
jae
pop
fists
daa
inc
jns
sahf
pop
nop
xor
jne
cmc
ljmp
add
and
aad
mov
imul
jge
sub
shrl
or
jno
into
adc
inc
outsb
test
sbb
outsl
xchg
mov
jle
fcoml
pop
cmp
js
mov
mov
mov
and
into
xor
xor
mov
dec
popa
xor
push
push
jno
aad
mov
pop
out
mov
daa
adc
icebp
push
push
stc
inc
sbb
pop
sub
lods
mov
jo
xor
cld
cmp
inc
pop
rcr
fisubl
push
mov
shrl
std
mov
fdivl
in
cmp
jns
xor
sbb
pop
push
in
aas
call
pop
std
pop
std
pop
std
pop
std
pop
std
sbb
into
ds
stos
inc
sbb
fisttps
xor
inc
fwait
pop
mov
lcall
sahf
cld
mov
lcall
out
out
push
push
aaa
stos
fdivrs
push
daa
fdivr
int
push
mov
icebp
notb
loopne
and
call
lret
mov
fildl
sbb
sub
rolb
jae
addr16
insl
jecxz
imul
and
scas
sub
ror
cltd
mov
fwait
mov
test
cmp
xchg
pop
jns
fbld
mov
push
inc
aad
add
shrl
fmull
xchg
xchg
dec
out
jbe
test
cli
xchg
pop
testl
outsl
sbb
push
fcomp
cwtl
js
mov
sub
mov
pop
mov
jb
sti
mov
pop
les
pop
jno
xlat
or
mov
jp
inc
dec
xlat
or
ss
push
xor
push
repz
leave
call
stos
jno
sub
lock
cmp
jo
push
icebp
std
sub
fnstcw
mov
jge
outsb
adc
jp
fs
lcall
pop
add
pop
jb
fdivrp
jmp
dec
out
call
sbb
mul
xor
pop
in
sub
mov
std
mov
fsin
in
mov
and
push
push
xchg
mov
sub
cmp
jne
out
sbb
rolb
jmp
push
je
jge
leave
mov
filds
in
ljmp
sub
cld
insl
cmc
push
pop
push
insl
push
push
jbe
and
jmp
push
jb
rclb
in
jge
mov
loopne
push
jno
push
xor
mov
mov
ret
fwait
inc
pop
mov
test
xor
lock
jne
sub
xor
fistps
fldenv
inc
clc
push
pusha
add
mov
mov
test
sub
sub
mov
xchg
xchg
and
add
jmp
pop
adc
scas
mov
test
loop
lock
arpl
out
xor
push
dec
push
mov
aam
pop
movsb
fs
imul
lods
out
fisubs
jecxz
ret
or
inc
in
lahf
out
or
mov
sbb
lcall
xchg
xchg
add
aad
jmp
rol
fdivl
mov
dec
repnz
repnz
xchg
pop
sbb
ljmp
test
imul
mov
dec
jecxz
pop
test
out
ljmp
push
or
mov
ds
pop
dec
test
fwait
out
loopne
xchg
mov
xchg
fwait
movsl
jno
aam
test
pop
nop
jnp
inc
jecxz
insb
or
jg
xchg
aas
pusha
mov
pop
movsl
or
xor
es
adc
add
xchg
popf
mov
jecxz
leave
ret
in
cmp
enter
mov
cmpsb
clc
insb
sub
cmpsb
xlat
xchg
in
push
jno
dec
test
int
call
sbb
inc
adc
mov
lods
dec
mov
mov
inc
adc
icebp
sbb
insb
dec
out
xor
fcoms
jecxz
lods
notl
cltd
jmp
sti
push
call
mov
fisubs
dec
xlat
ror
pop
lcall
es
push
adc
stos
nop
dec
jno
bound
cmpsb
inc
fwait
cmp
xchg
loop
xchg
push
sahf
fwait
add
dec
jmp
les
insl
mov
outsl
outsb
add
mov
loopne
je
sub
push
fdivl
or
pop
and
mov
lea
pop
mov
rorl
popf
xor
pop
add
xchg
inc
std
ds
push
lock
out
adc
pusha
or
fdivrs
push
in
imul
addb
xchg
cmpb
and
fimuls
jnp
mov
ds
in
mov
push
inc
push
lcall
mov
das
or
push
lods
daa
sahf
lods
xchg
mov
movsl
inc
dec
dec
ja
cmpsl
adc
mov
cmp
cmpsl
cmpsl
inc
repz
ss
ja
jmp
repz
popf
out
subb
enter
mov
add
bswap
dec
sub
scas
nop
cwtl
fnsave
xchg
mov
jo
or
lahf
decl
mov
insl
loopne
or
sub
dec
and
cmp
jecxz
jl
xchg
aad
xchg
shlb
fsubr
out
add
lock
cmp
int
pop
push
xchg
in
pop
xchg
push
sbb
mov
jb
add
inc
mov
cwtl
mov
loopne
std
imulb
test
lea
pop
scas
jo
and
out
mov
sbb
dec
imul
shrb
bound
stos
inc
stos
adc
pop
aaa
aaa
add
iret
push
inc
in
outsb
or
loope
pop
fsub
loop
jle
cwtl
adc
icebp
cltd
out
push
adc
in
loop
lret
sarl
sub
leave
xchg
outsl
sti
in
out
cli
jo
xchg
mov
fnstenv
push
push
inc
shll
sbb
in
cmpb
push
adc
pop
fisubl
std
into
test
outsb
aas
dec
cltd
lahf
add
dec
pop
lods
mov
cmp
mov
test
or
out
fcomip
sbb
fstps
sahf
ljmp
out
pop
lods
adc
cld
out
addr16
jne
dec
pop
cmp
mov
xchg
ljmp
out
fisttps
cmp
lret
pop
push
dec
popa
pop
lret
cmpsl
movsl
jecxz
mov
pop
and
cmove
push
nop
lods
inc
adc
enter
mov
dec
jp
es
dec
pop
cltd
jno
xor
cwtl
adc
call
dec
test
out
loopne
adc
jge
push
mov
push
in
mov
pop
insb
aam
adc
jge
inc
pop
jmp
stos
popa
mov
lret
and
push
aaa
shlb
cltd
xor
iret
xchg
scas
add
dec
sbb
gs
inc
adc
mov
push
jo
push
ss
or
push
sub
es
and
fidivrs
js
into
inc
adc
mov
mov
mov
dec
lds
xchg
xchg
imul
popa
cmp
inc
mov
add
repz
rcll
mov
test
cmp
pop
iret
mov
int3
inc
repnz
pmaxub
dec
cmp
xor
push
xor
sbb
in
push
les
inc
mov
out
jle
sub
push
inc
mov
jecxz
test
or
rcll
inc
sub
pop
insl
mov
cmp
stc
jge
movsl
ds
cli
mov
inc
push
call
push
sahf
or
cmp
pop
daa
adc
aad
iret
add
cmc
cs
ret
sbb
stos
loop
repz
sbb
jle
inc
sbb
inc
push
stos
push
cmpsb
push
mov
add
scas
out
enter
ds
loopne
arpl
mov
and
dec
jge
jecxz
xchg
jge
push
or
push
repz
testb
es
cmp
push
repnz
xchg
stc
jecxz
mov
or
pop
out
notb
pop
rcrb
out
inc
lahf
jecxz
adc
pop
add
test
inc
cs
cmpsl
ljmp
loope
inc
jns
mov
xchg
xorb
adc
add
push
subb
cmpsb
cmp
push
push
and
mov
sub
dec
cli
adc
mov
arpl
dec
into
xor
inc
cld
pop
push
sarl
in
dec
jo
aad
fildl
sub
jae
mov
jge
incl
lcall
and
jmp
testl
xor
rcll
mov
aad
sti
push
popa
fwait
ror
out
negl
sbb
loop
xlat
dec
es
in
pushf
push
das
lods
pop
jae
push
inc
mov
mov
scas
out
and
xor
cmc
fisubrs
xchg
or
fdivrl
mov
cmp
outsb
movsl
mov
clc
mov
ds
sub
xor
bound
repnz
fstpt
sahf
lea
push
call
add
cmc
es
adc
stc
fdivs
jne
push
mov
outsl
aas
cld
test
stos
sahf
jle
fisubrs
sbb
xor
lret
das
push
pop
xchg
sub
mov
xor
insl
mov
je
xchg
enter
mov
stc
jge
subl
sbb
je
sahf
adc
sub
xlat
and
ret
aad
nop
enter
mov
aad
out
and
fisubrs
cmp
mov
sarl
fdivr
idivb
fs
mov
loopne
cmpsb
test
pop
xor
jae
push
mov
jb
imul
xchg
mov
mov
mov
test
pushl
mov
add
scas
fcomps
cmp
jno
fimuls
cltd
pushw
decl
pop
and
adc
mov
mov
xor
insl
movsl
ret
fmull
cmc
mov
js
pop
gs
pop
loop
mov
subl
fldcw
mov
push
setns
sub
clc
leave
xchg
clc
cwtl
int3
or
lea
add
rorl
push
enter
enter
std
cmp
test
add
inc
adc
push
clc
xchg
add
lcall
pop
cmp
gs
cmc
loopne
ret
xchg
adc
ret
int
inc
pop
xor
pop
xchg
les
or
xchg
inc
sbb
dec
fdivr
mov
ljmp
xchg
scas
and
mov
in
lcall
mov
clc
sub
and
test
dec
mov
repz
hlt
mov
iret
inc
and
test
das
imul
neg
icebp
sbb
imulb
jle
add
push
sub
cmp
movsb
sub
lods
in
hlt
jle
pop
ficoml
sub
movsl
jecxz
cwtl
mov
pop
outsb
add
repz
imul
fidivrl
push
jmp
fstps
test
jge
repz
and
das
in
inc
jmp
lcall
loop
jge
leave
xorb
or
test
mov
lds
pop
fcmovnu
enter
cwtl
adc
ja
iret
fldcw
xchg
int3
aas
leave
in
xchg
add
sub
jbe
xor
mov
sbbl
adc
aas
roll
xor
cmp
push
mov
cmc
arpl
repnz
lds
jb
xor
cmpsl
cs
inc
sbb
popf
lds
pop
add
jae
xor
fucomip
and
push
scas
pop
mov
das
mov
xor
sbb
lahf
ret
pop
sbb
jl
ret
mov
pop
add
xchg
and
dec
sbb
push
and
push
ret
dec
and
test
dec
fldcw
cmp
iret
push
mov
ss
lret
add
cmc
aad
imul
pop
into
xchg
add
sub
ret
loopne
stos
popa
pusha
xchg
add
sti
add
add
xchg
ficompl
pop
pop
cmpb
lret
cmp
popa
push
push
stos
bnd
mov
ds
lods
push
push
imul
in
dec
sub
or
clc
outsb
pusha
push
mov
in
mov
inc
aam
cmp
insl
mov
pop
cmp
and
hlt
cmp
pop
and
mov
stos
mov
lret
mov
push
cli
mov
dec
cmpsb
cmpsl
hlt
stos
lea
xchg
sbb
leave
lods
cltd
div
addb
in
test
lret
hlt
nop
push
jmp
jnp
xchg
lea
and
lods
sub
push
push
adcl
in
outsb
jb
orb
test
daa
loopne
xchg
movsb
inc
xlat
scas
das
jbe
adc
pop
sub
mov
or
push
jge
push
enter
jmp
adc
ficoml
cmpsl
cmc
mov
loop
push
cmc
aad
sub
and
popa
sub
cld
mov
sub
test
pop
int
mov
mov
leave
in
push
fs
mov
jmp
lcall
xor
scas
fcomi
cmp
repnz
pusha
cwtl
out
movsl
nop
cmc
mov
cmpsl
pop
adc
lcall
test
pop
in
mov
jne
pop
es
pop
mov
push
or
push
lods
aas
shlb
jmp
sti
xchg
push
jle
gs
stos
jnp
jns
jne
xor
jbe
sub
cs
sub
dec
push
sti
out
xchg
xor
ja
sub
add
fs
jno
xchg
jp
jmp
xor
and
sbb
inc
mov
add
xchg
jne
sub
or
enter
dec
ret
xor
loop
and
cli
or
adc
push
xor
test
mov
adc
xor
xchg
jbe
jo
cmp
rclb
xchg
cld
enter
sti
inc
cli
aas
inc
in
push
cli
mov
xchg
leave
bnd
dec
xchg
add
sbb
add
add
mov
dec
push
xchg
mov
loope
lcall
insl
fisubl
inc
loopne
mov
xchg
leave
push
push
jbe
out
pop
clc
fidivl
inc
sbb
dec
jg
push
xchg
les
rclb
andl
sti
xchg
repnz
cmp
xor
outsb
pop
pop
xchg
dec
mov
popa
movsl
aad
jns
loop
and
in
outsl
je
jbe
mov
xor
cmc
or
in
sarl
xor
pop
mov
enter
fidivs
gs
ljmp
lods
push
and
out
xor
leave
bound
or
fs
or
xor
fcomps
loope
adc
dec
mov
push
pop
or
fldcw
clc
fisubs
popf
pop
push
lods
pop
int
jmp
daa
sahf
jmp
xor
sub
outsb
sbb
int
jmp
stos
dec
jb
cmp
sbb
sub
lea
mov
pushf
pushf
jle
dec
imul
add
leave
clc
xor
rcrl
add
cmc
fbstp
inc
cmp
xchg
aas
sub
jp
or
out
nop
add
add
test
icebp
cwtl
je
inc
xchg
movsl
int3
adc
incl
outsb
sarl
or
mov
rorb
mov
fwait
xor
cmp
bound
call
aad
push
mov
ss
adc
push
es
inc
cmpsb
ret
adc
xchg
loope
in
cmp
stos
stos
cmpsb
and
xlat
loope
insl
add
xchg
sti
jb
cmp
sbb
imul
and
into
lods
fisttpll
sbb
xchg
jnp
mov
sbb
pop
popa
mov
push
loope
in
sarl
aad
push
xor
mov
cmc
cmpsl
mov
loopne
dec
sbb
mov
add
or
add
ret
ds
or
out
cmpsb
and
adc
loope
leave
push
jns
inc
in
hlt
adc
aad
inc
jnp
aas
test
stos
int
ja,pn
out
jp
xchg
cli
mov
ds
xor
enter
xchg
mov
gs
out
rcrl
adc
add
adcb
cmp
and
mov
mov
sub
fs
and
xchg
inc
ret
lds
iret
stc
sbb
mov
in
pop
jns
lret
lea
daa
loop
aam
fst
stos
cmc
clc
jae
imul
imul
scas
inc
test
imul
push
std
idivl
sbb
or
dec
arpl
ss
adc
or
roll
call
dec
clc
test
insb
call
insl
or
out
out
pop
xor
ret
loope
sahf
jge
mov
pop
and
mov
xchg
cmp
push
add
cmp
add
int
inc
es
push
jnp
sub
cmp
jo
movsb
dec
dec
std
sbb
fmull
and
roll
fistps
unpckhps
or
dec
ljmp
mov
outsl
jnp
or
hlt
lret
xlat
sbb
or
cltd
xchg
mov
loope
mov
mov
mov
in
push
mov
fwait
push
ret
lods
divl
shrb
in
jmp
jbe
mov
jecxz
push
cmp
out
std
stc
mov
sbb
adc
mov
xchg
daa
jbe
inc
test
pop
jg
call
fbld
mov
sbb
xchg
push
mov
cld
je
mov
sub
cmp
mov
call
shl
jb
sub
ficoml
add
test
mov
icebp
mov
ljmp
mov
std
xor
mov
fnsave
mov
mov
into
outsl
into
fistl
dec
mov
push
popa
add
and
pop
dec
mov
nop
xchg
jno
mov
and
jmp
pop
outsb
je
or
jne
inc
push
repz
imul
pushf
xchg
lahf
fdivrs
fdiv
out
jbe
cmp
int
enter
aaa
aad
mov
pusha
or
or
sub
insl
wbinvd
xchg
mov
jo
sub
popa
lret
sarl
repnz
movsl
sbb
ret
lcall
dec
dec
pop
mov
negb
and
pop
pushf
lock
ret
xor
jmp
push
out
mov
andl
cmp
rcll
adc
subb
frstor
jae
cs
mov
cwtl
dec
or
cmpsb
jl
or
cmp
adc
xchg
inc
sub
loope
in
bound
lret
cmp
sbb
cli
sarb
jmp
gs
clc
ljmp
gs
hlt
xor
mov
movsb
outsl
jl
dec
sbbl
addl
push
mov
push
cmp
jbe
add
jo
jecxz
fdivrl
cmp
test
test
aad
jmp
add
mov
in
push
sub
loop
pushf
mov
jmp
xchg
mov
into
test
test
and
mov
xor
mov
lds
xchg
inc
sbb
jbe
lret
out
adc
mov
xchg
adc
or
adc
mov
add
or
std
adc
mov
mov
dec
jae
jecxz
aad
mov
sbbl
lods
mov
or
sti
lret
add
stos
ret
xlat
out
lock
in
pop
mov
mov
bnd
sbb
fldcw
outsb
inc
inc
sub
sub
insl
push
gs
imulb
dec
lahf
stc
mov
movsb
in
dec
arpl
push
inc
pop
loop
outsb
jo
pop
xchg
push
lret
out
mov
arpl
mov
imulb
adc
fcmovnu
enter
and
lret
stos
lret
adc
dec
rcll
shll
int
or
mov
push
pop
fldt
fcomip
test
mov
fs
aad
rcr
gs
ret
ja
lret
lret
pop
pop
mov
cmp
pusha
mov
jnp
cmp
pushf
fstps
or
pop
ss
jg
xor
mov
out
sbb
jo
jl
jo
loop
add
inc
mov
sub
pop
std
stc
xchg
xchg
sarl
push
lods
arpl
andb
loop
cltd
mov
repz
push
cmpsl
cmp
pop
fsts
xchg
loopne
ret
and
jne
lahf
rorb
jge
jecxz
testb
inc
mov
test
or
push
repnz
dec
jns
sahf
dec
sahf
mov
adc
and
cmp
aaa
repnz
inc
cmpsb
sbb
jo
data16
push
fsubs
aad
ljmp
movsb
and
adc
scas
jnp
das
fdiv
punpckhdq
std
sub
inc
aam
adc
mov
adc
jecxz
repz
xchg
sub
mov
insl
stos
fldt
pop
cld
jb
sbb
hlt
div
jb
test
subl
das
roll
mov
fcmovbe
mov
sbb
inc
pop
jmp
xchg
mov
pushf
push
addr16
push
dec
jns
loope
mov
outsw
push
daa
xchg
and
push
rol
mov
inc
mov
scas
enter
xor
shl
aad
sub
mov
pop
or
push
test
fs
fildll
adc
push
popf
mov
shlb
cmp
inc
in
outsl
xchg
neg
lea
shlb
mov
daa
push
mov
adc
nop
mov
js
sbb
or
sub
add
inc
in
xchg
fldt
add
ret
mov
gs
mov
sahf
pop
cmpsl
cmp
clc
int
mov
lea
lret
repz
mov
inc
adc
inc
or
push
jno
je
jmp
das
in
ja
sub
out
mov
lcall
les
aam
push
or
popa
imul
or
fimuls
data16
mov
dec
in
mov
movsb
insl
fbstp
push
cmp
jae
jne
mov
jp
sub
insb
jnp
mov
int3
repz
sbb
xor
outsb
mov
cmc
jne
ss
xchg
js
and
push
cmp
push
jecxz
idivl
mov
es
cs
or
jnp
mov
mov
out
ds
pop
mov
bound
and
adc
je
notl
adc
out
inc
mov
addb
stc
inc
popf
dec
sbb
seto
sar
cltd
jg
jnp
sbb
mov
mov
or
cld
orl
movsl
dec
cmpl
dec
push
adc
cmp
pop
testb
lcall
daa
mov
js
imul
pop
inc
add
addb
cmp
inc
cmpsl
inc
cld
push
loop
sub
jb
lcall
xlat
pop
push
lea
lcall
imul
cmp
andl
lock
adc
ret
dec
stc
nop
pop
imul
in
arpl
ljmp
push
out
mov
mull
rcrl
mov
fwait
and
int
push
in
or
lcall
xchg
xchg
leave
fbld
pop
sbb
cmp
bound
stos
pop
je
inc
jae
mov
jnp
push
mov
or
jp,pt
arpl
xchg
pushf
je
push
mov
es
mov
cmp
mov
mov
cmp
sahf
dec
ds
cmp
xor
hlt
in
hlt
sbb
push
cld
jmp
mov
jle
inc
mov
into
add
divb
xor
mov
out
aad
xlat
stos
jb
gs
cmp
xchg
lahf
inc
xchg
pop
mov
out
push
push
add
mov
lea
ret
xor
pop
lods
rcll
and
cmp
mov
inc
popa
and
jb
xchg
and
pop
stos
sub
pop
lea
mov
fdivrs
clc
push
jl
xor
dec
mov
jbe
data16
xchg
lcall
dec
ret
cli
push
push
push
dec
dec
clc
int
loopne
lods
es
mov
push
inc
jp
dec
or
mov
push
adc
fnstsw
cmpsl
push
fldenv
aaa
mov
xor
inc
ds
mov
mov
push
lcall
call
cmp
enter
call
mov
sub
dec
inc
fnstcw
shlb
cmp
push
mov
ljmp
arpl
lret
xchg
jg
stc
cltd
mov
xchg
mov
xchg
daa
or
cmp
mov
arpl
icebp
inc
jbe
add
jnp
and
les
dec
dec
mov
and
loop
xchg
das
sub
adc
adc
xor
push
dec
jo
and
cltd
xor
addl
pop
lret
shr
insb
mov
jl
out
lret
clc
pop
cmc
scas
lret
cmc
jp
dec
cld
push
hlt
fdivrp
mov
lock
xor
hlt
data16
stos
xor
xchg
cli
fidivs
sti
dec
fidivrl
cmp
mov
loopne
fwait
xlat
fnstsw
push
fsubrl
sub
aaa
imul
loopne
sbb
pop
iret
cltd
add
clc
pop
inc
fstp
or
js
push
shll
mov
push
test
adc
movsbl
in
pop
std
jg
adc
repz
popl
push
jl
mov
push
xor
mov
sbb
test
sbb
ja
sub
ja
jae
std
sti
loope
cs
sub
test
and
or
aam
aad
sarb
pop
sub
pop
add
adc
insb
add
adc
imul
push
xchg
mov
inc
pop
cwtl
in
cmp
shlb
inc
fcmove
jo
test
push
fucomip
add
add
gs
sub
add
ja
mov
xchg
fisubrs
push
jnp
xor
stc
xchg
gs
mov
stos
out
push
fildl
cmp
lock
jo
lahf
sbb
jge
cmp
cs
mov
inc
stos
and
sub
cwtl
shlb
addl
xchg
setle
push
enter
in
adc
sub
cmpsb
add
roll
pop
scas
mov
test
jno
push
push
lods
dec
xlat
popf
xor
cmp
push
ds
imul
mov
lret
sub
clc
add
sub
ja
jnp
xchg
mov
enter
xchg
xor
xchg
dec
cmp
in
cmp
outsl
sbb
pop
push
enter
ss
and
push
or
scas
rcl
test
jecxz
mov
xchg
pop
int
scas
xor
ret
push
cmc
ja
ja
outsl
movsl
jl
inc
fsts
jne
sarl
es
daa
mov
push
popf
movsb
adc
adc
in
inc
pop
stc
push
jl
pop
stos
int
mov
out
push
jg
scas
jp
daa
pop
xchg
fsub
out
push
mulb
mov
push
xchg
outsl
bound
clc
sahf
fbstp
cmp
imull
pop
data16
inc
xor
aam
inc
icebp
dec
cltd
sbbl
out
xor
idivl
scas
stc
scas
adc
adc
or
xor
in
xor
sbb
mov
jl
aad
sub
or
ljmp
jge
xor
dec
and
fsubs
ja
inc
scas
push
mov
out
iret
lods
mov
xchg
xchg
jle
sbb
dec
sbb
rorl
leave
mov
push
loopne
lahf
call
andl
mov
fisubrl
adc
push
or
jns
mov
faddp
push
push
sub
movsb
sbb
outsl
cmp
in
and
fucomp
jg
mov
xchg
push
push
shrb
movsl
pop
xor
cmp
arpl
mov
mov
jbe
jl
xor
lret
insb
out
fistl
xorl
movsl
ss
outsl
jb
enter
mov
in
xchg
pop
call
mov
enter
addr16
gs
push
and
aaa
push
fimull
fadd
dec
sti
js
sbb
pop
sbb
outsb
adc
les
xchg
xchg
aam
xor
fwait
mov
xchg
jmp
lods
add
fidivl
fwait
icebp
pop
out
sub
xor
pop
shrb
scas
cmp
sti
and
pop
xchg
xchg
inc
outsl
pop
mov
or
pop
xchg
mov
jae
in
mov
xchg
mov
jmp
dec
iret
sbb
xchg
ljmp
cmp
dec
or
push
lods
lds
scas
mov
jle
dec
xor
pop
xor
pop
add
jnp
or
pop
adc
cmp
into
fisubrl
mov
lock
xor
aaa
dec
lret
xchg
jge
subb
xor
pop
jp
and
push
aad
push
lods
test
mov
ficomps
call
or
pop
loope
cwtl
fdiv
cmpsl
jne
fwait
mov
out
das
aad
push
in
mov
mov
xor
sub
stos
fstpt
mov
cmp
test
or
and
outsl
adc
das
aaa
das
js
aam
jno
out
imull
fcmovne
int
addr16
and
dec
fs
lods
test
sti
in
jmp
xor
add
icebp
push
cmp
adc
push
aaa
pop
adc
call
inc
cli
mov
add
sti
test
cmpsl
movsb
cwtl
inc
sub
pop
leave
push
and
bound
mov
dec
dec
ret
xchg
aaa
push
mov
inc
mov
sbb
lret
push
jle
mov
loop
divb
fcmove
and
test
mov
jecxz
movsb
adc
dec
pop
xchg
imul
dec
xchg
lods
cmp
push
orl
or
dec
insb
and
add
sbb
xor
xor
mov
pop
sbb
mov
mov
outsl
sti
inc
sarb
popf
ds
pop
sub
cmc
mov
and
ret
cltd
lret
sub
iret
xorps
clc
dec
mov
enter
push
adc
addr16
and
sti
xchg
inc
roll
xchg
ucomiss
sbb
nop
or
mov
xchg
sub
stos
repnz
dec
xlat
dec
and
inc
shr
and
js
scas
add
les
and
mov
popa
pop
sub
xchg
stos
cmpsb
ja
es
or
xor
jae
jae
or
add
mov
vpshlw
rorb
negb
xchg
push
inc
dec
scas
mov
mov
inc
sbb
mov
cvtps2pd
lret
iret
aam
mov
sub
insb
loop
push
dec
in
sub
cmp
xor
mov
mov
and
pop
xor
dec
pop
repnz
les
sub
test
pop
or
cwtl
mov
xchg
dec
xor
push
cltd
pusha
in
xchg
mov
cmp
loop
push
inc
rcrl
ficomps
out
mov
mov
dec
inc
insb
inc
movb
dec
lcall
push
icebp
add
xor
pop
pop
xchg
and
aad
jo
adc
mov
cmp
mov
adc
outsl
sarl
sub
jne
adc
mov
add
adc
jae
sub
lcall
cmc
pop
mov
subl
insb
xchg
sub
in
ljmp
adc
pop
shll
daa
repz
jmp
ja
cwtl
jle
in
mov
inc
repnz
or
mov
leave
je
mov
clc
mov
ljmp
sbb
jbe
sahf
mov
dec
dec
xor
jo
sbb
repz
cmp
loopne
in
jecxz
outsl
bound
test
mov
mov
cmp
loope
mov
int3
sbb
lret
sti
push
insb
test
or
sbb
cli
xchg
pop
dec
adc
cmp
test
test
inc
sahf
xlat
push
mov
sub
repnz
out
iret
push
mov
cmp
adc
jns
pop
jge
jo
add
adc
sbb
arpl
notb
imul
mov
mov
inc
xor
xchg
dec
fwait
jnp
cmc
add
dec
inc
divb
sti
adc
rcr
sub
mov
enter
lods
test
xchg
ljmp
dec
push
push
rcl
leave
out
outsb
cwtl
outsb
cltd
cwtl
fstps
mov
ja
sbb
lret
ds
dec
test
fdivl
rol
call
mov
movsl
lahf
leave
mov
pusha
dec
aaa
bound
outsb
cmp
xor
mov
mov
mov
mov
mov
xor
pop
test
subl
jnp
adc
push
mov
push
repnz
mov
cmc
cmp
jmp
mov
pop
mov
xchg
jecxz
mov
jl
pop
cli
out
pop
repnz
lcall
or
push
mov
loopne
mov
mov
std
call
dec
jno
and
sti
and
scas
subb
lods
insl
iret
inc
mull
jmp
and
sbb
lret
mov
push
jp
in
loopne
jns
xor
mov
mov
mov
adc
cmpl
dec
dec
popa
mov
pushf
mov
or
ret
lock
aaa
sti
push
sub
int3
scas
les
xchg
dec
or
pop
xchg
mov
orb
lahf
xor
aam
in
inc
xchg
jg
sub
stos
mov
xchg
push
icebp
xchg
fs
adc
lods
aam
imul
dec
fbstp
lods
sub
xchg
sub
dec
xor
mov
push
not
and
push
aad
mov
dec
movsb
test
adc
mov
sbb
xchg
test
sub
lods
imul
sub
loope
sbb
lea
scas
fcoms
sbb
mov
insb
cmp
fwait
mov
mov
scas
push
dec
push
pop
adcl
cmp
call
popf
rcrb
add
rorb
dec
fisttps
adc
loopne
hlt
dec
in
xor
into
dec
mov
jle
inc
add
inc
pop
stos
or
lcall
sub
insl
test
adc
xchg
and
adc
call
sbb
or
mov
dec
out
cmp
pushf
gs
repnz
or
rorb
gs
mov
je
into
ds
pop
xor
negl
xor
js
xchg
test
pop
jae
dec
cmp
push
cmpsb
mov
push
lds
dec
and
fnstenv
mov
int
mov
imul
or
test
adc
inc
cmp
xor
xchg
fidivrs
xor
lcall
shll
jno
pop
mov
dec
pop
and
and
pop
ret
sub
arpl
arpl
jne
sahf
test
fistps
xor
mov
scas
lods
jnp
les
push
inc
das
jbe
aas
cmp
jnp
cmpsl
push
hlt
insb
push
loopne
iret
into
adc
lods
xor
mov
xor
loopne
stos
sub
jb
mov
push
jmp
movl
mov
xor
in
push
scas
dec
push
and
and
jbe
or
pop
adc
xchg
repz
loopne
out
cld
push
leave
mov
xor
aam
cmp
out
adc
pop
jnp
jno
or
jmp
mov
andl
movsl
rcr
stos
arpl
push
ret
movsl
mov
jmp
mov
xor
adc
lret
scas
insb
js
and
or
dec
sbb
adc
leave
xor
or
ja
pusha
imul
repz
sbb
push
mov
orl
lods
in
call
leave
jp
xchg
cmpl
jge
sarl
insb
xchg
push
test
xchg
dec
push
popa
cmpb
sbb
push
push
dec
popf
xchg
push
fisubl
addr16
and
xchg
push
shll
notl
js
or
sub
xchg
cmp
mov
in
fisubrs
out
jge
xor
cli
fs
es
xchg
dec
and
in
outsl
clc
gs
push
dec
rep
or
in
lret
cwtl
jne
insl
imull
pop
rcrl
and
lock
xor
xor
ljmp
pop
adc
mov
mov
sbbl
lahf
dec
fildll
and
jns
mov
mov
dec
leave
cli
mov
ucomiss
in
incl
push
mov
fstp
stc
clc
ss
mov
jns
jg
cmp
test
sub
popf
pop
out
xchg
dec
stos
cli
jbe
test
jmp
pmuludq
dec
hlt
inc
imul
int
and
or
jge
test
pop
xor
fnstcw
sub
pop
dec
das
dec
jge
pop
xor
pop
adc
ret
jmp
jns
stc
stos
adc
push
in
sub
outsl
bound
adc
cmpsb
aas
mov
loop
mov
jne
mov
loopne
xchg
and
popa
inc
inc
add
push
ja
mov
ss
mov
subb
std
add
rorl
in
mov
push
das
leave
push
arpl
pop
cld
jg
jmp
leave
clc
shll
jnp
or
mov
xchg
ror
xchg
pop
dec
inc
dec
fcompl
mov
dec
cmp
adc
cmpsl
cwtl
lods
insb
js
inc
mov
nop
repnz
insl
loopne
sub
jne
jb
aad
or
cmp
hlt
jge
push
fdivp
int3
stos
sbb
and
and
sbb
fwait
movb
lcall
jbe
shll
mov
xchg
sbb
add
lods
loope
pushl
test
test
popa
jb
cltd
outsb
or
inc
bound
les
das
daa
std
sbb
pop
ss
aam
dec
daa
and
pop
pop
inc
insb
jge
push
mov
push
ja
xchg
push
jge
mov
or
shrl
addb
dec
push
js
rcll
mov
clc
xor
adc
cmpl
xor
addb
mov
aas
cmpsl
jecxz
lods
scas
dec
mov
out
adc
out
loopne
mov
mov
xchg
xchg
int3
aaa
mov
pop
js
aad
push
fwait
cmp
add
inc
or
fstl
push
and
cmc
jmp
repz
jp
lcall
cmpsl
fxam
inc
repz
mov
mov
inc
xchg
cmp
cmp
outsb
lea
push
cs
in
or
popa
add
mov
andl
mov
mov
sub
push
int3
ficoms
inc
mov
mov
jge
and
rclb
fucom
xorb
mov
adc
mov
or
nop
mov
mov
in
pop
ja
push
repnz
add
shrb
or
nop
daa
add
shrb
ds
lods
add
out
mov
arpl
rorl
lcall
mov
adc
aas
adc
jae
push
jb
or
dec
addr16
test
aaa
int3
inc
pop
xchg
cld
pop
repnz
mov
loope
mov
fadd
mov
jne
and
xchg
test
aad
mov
push
add
sti
ds
mov
sub
sbb
sub
stos
xor
cld
loopne
negl
mov
inc
roll
shlb
push
mov
jo
pop
cmp
inc
push
dec
dec
es
rolb
aad
fwait
out
mov
add
cmp
iret
pop
lahf
cmovle
cli
aam
cmp
aad
xor
cwtl
jecxz
scas
jae
loopne
mov
jmp
adc
movsl
and
mov
add
imull
push
mov
mov
out
and
sbb
sub
sbb
cmp
jne
ret
pop
movsl
xchg
mov
cmp
cmp
mov
push
mov
push
mov
xor
mov
bound
or
outsl
shll
jno
mov
test
lods
sub
jae
lea
pop
fcomps
movsl
imul
dec
aas
dec
xlat
jno
push
sahf
movsl
sbb
push
sbb
int
lret
pop
rcrl
jge
jnp
loopne
mov
stos
cmp
mov
push
das
iret
popf
cltd
inc
pop
mov
mov
cmp
mov
pop
roll
cmc
lcall
insb
push
mov
jno
rcr
push
push
call
pop
inc
rcll
mov
repz
out
lcall
push
sbb
inc
jl
rorb
push
push
adc
rcrb
pop
in
add
cmpsb
push
jmp
xor
sti
mov
sbb
mov
les
mov
cwtl
pop
lock
orb
je
mov
jge
out
clc
shlb
add
mov
cmp
pop
scas
mov
pop
stc
jne
pop
aaa
sbb
lods
sub
sub
jno
pop
dec
or
iret
push
push
sbb
push
movsb
lods
cs
pop
popf
and
push
pop
push
je
jmp
test
lret
pop
push
sbb
fwait
and
cmp
xchg
leave
mov
shlb
or
xor
arpl
jae
daa
mov
xor
jne
ljmp
dec
cmc
mov
popa
scas
bound
mov
hlt
out
lret
movsb
pusha
cmpb
call
imul
push
or
mov
mov
push
out
and
out
pop
and
cs
fs
xlat
cmpsb
ret
xlat
jp
leave
inc
daa
mov
mov
aam
lds
and
in
js
inc
add
fs
push
or
int
push
in
fldenv
cltd
or
and
push
js
pop
into
popa
aad
sub
scas
inc
jo
jle
add
inc
or
sbb
push
sub
jae
push
mov
lea
scas
leave
cmpb
dec
add
das
push
cwtl
movsb
xchg
mov
rorl
addl
jne
xor
push
and
jp
dec
sub
mov
jnp
xor
mov
mov
lea
aas
adc
add
mov
jge
ret
jl
mov
stos
hlt
xor
mov
sti
and
cmpsl
dec
mov
aaa
sahf
mov
jo
adc
aam
enter
sti
push
stc
cs
mov
cltd
push
pop
insb
shr
jb
loop
std
outsb
sahf
loope
inc
inc
addr16
aad
mov
lret
inc
aam
add
mov
and
arpl
icebp
push
push
imul
ljmp
push
das
jbe
inc
mov
hlt
cltd
shll
imul
jp
add
dec
je
jns
mov
mov
fwait
scas
rcl
or
inc
jb
lods
lock
call
pavgw
fidivl
aas
cs
xlat
fdivrp
rcll
mov
sbb
lock
cmpsl
ds
cmp
out
fistl
lcall
cmpsb
andb
fisttpl
adc
jecxz
mov
fidivs
sbb
mov
rorb
mov
jbe
mov
lock
mov
clc
scas
sbb
les
popa
in
fildll
out
out
cmp
enter
fstpt
or
add
push
fsub
pop
int
outsl
out
insb
jns
push
insb
int
fnstsw
xchg
lds
test
lret
xor
ficomps
add
and
pop
dec
or
push
loope
outsb
pop
pop
ljmp
mov
rcrb
jecxz
pushf
popa
adc
adc
jae
cmp
adc
and
and
dec
or
mov
mov
notb
dec
dec
in
mov
cmp
add
xchg
cmp
gs
mov
mov
add
fwait
add
aad
lret
add
jg
and
cmp
dec
mov
repz
test
lahf
mov
daa
inc
pusha
sub
inc
sar
jb
jbe
xchg
mov
rcrb
divb
push
sbb
cmpsl
ljmp
notl
lahf
ljmp
scas
psrlq
xabort
pusha
lahf
push
jb
scas
out
scas
dec
pushf
scas
arpl
cmpsl
pop
call
bnd
sub
addr16
call
cli
cmp
cmpsb
orl
decl
jbe
outsl
nop
mov
mov
jg
jge
bnd
pop
loop
notl
sbb
aaa
and
jb
mov
aas
enter
sahf
jp
mov
add
push
sub
adc
out
push
ret
lds
cmc
sbb
pushf
lahf
lahf
aam
push
mov
cmp
aaa
roll
adc
inc
aam
pop
lret
push
xor
addr16
cs
sub
jbe
stos
and
cmp
dec
sti
jecxz
in
cmp
sarl
lea
pushf
push
sbb
mov
scas
pop
jmp
push
arpl
and
sub
pushf
hlt
push
xchg
loopne
aam
adc
cmp
add
pop
out
in
adc
cmp
cs
rol
mov
sub
dec
pop
sub
arpl
xor
ljmp
aam
fwait
imul
sub
mov
lock
mov
cmc
dec
je
pop
jnp
mov
mov
jmp
adc
lahf
fwait
cmpsl
jge
mov
xchg
and
pop
ja
mov
push
adc
mov
mov
push
inc
sar
fnstsw
call
aas
cli
sbb
addr16
or
dec
in
xchg
xlat
addr16
cltd
push
mov
ljmp
sbb
ret
or
cltd
jg
scas
ret
push
imul
pop
sbb
lock
jns
mov
dec
pop
test
pop
fcomps
sub
lahf
mov
imul
mov
les
sbb
imul
adc
mov
mov
test
jle
sbb
and
sub
add
shrl
cmpsl
pop
daa
popf
inc
jmp
jmp
pop
je
cmp
orb
in
jbe
mov
xchg
pop
sub
data16
aas
fidivrs
arpl
fwait
jl
pop
mov
fiadds
mov
cli
in
cmc
mov
sqrtps
mov
lcall
popa
aas
xor
hlt
repz
mov
lods
cmp
dec
insb
xchg
int
aaa
ret
jne
or
iret
mov
xchg
and
ret
dec
mov
xchg
add
mov
push
xor
sub
jo
dec
cmpsb
mov
insb
and
push
mov
sbb
inc
xchg
rclb
adc
lcall
adc
push
cmpsl
add
int
mov
aas
pop
pushf
add
mov
clc
sahf
rcl
cli
mov
pushf
xchg
icebp
adc
pop
lret
add
imul
lods
add
mov
in
mov
inc
cmp
xor
movsb
test
mov
mov
insl
pop
out
nop
out
xchg
loope
out
or
negl
and
stos
stos
out
inc
mov
push
sbb
sub
loope
cwtl
ret
loopne
sarl
out
dec
test
adc
sbb
outsl
cltd
pushl
loope
stos
push
sub
clc
mov
push
jae
lock
or
out
dec
mov
xchg
loopne
xchg
jbe
jb
and
jno
jnp
jmp
or
cmp
mov
push
lods
push
sub
inc
nop
xchg
int
mov
in
shr
pop
push
roll
dec
sbbl
std
xor
push
pop
add
xchg
lcall
imul
cmpsb
xorb
ret
add
push
cmpsl
in
sahf
int
test
lahf
cmpsb
fistps
stos
push
hlt
bound
lds
ret
cmp
lcall
rolb
ja
aaa
int3
pop
cmpb
popa
jecxz
scas
daa
jl
and
add
mov
mov
stos
bound
jg
jo
sbb
push
sahf
pop
insb
repnz
jnp
adc
xor
push
js
movsl
adc
lods
repz
jp
and
dec
mov
cmp
fcoml
xchg
stos
adc
mov
push
lods
mov
pop
outsl
sub
xor
sub
ja
adc
mov
adc
dec
or
or
push
movsb
or
jnp
mov
and
xchg
clc
jbe
dec
pusha
call
ret
into
insb
in
subl
pop
xlat
sub
mov
mov
addw
mul
mov
lret
cmp
cmpl
dec
aas
xor
lods
pusha
add
xchg
mov
out
insl
lds
ss
out
idivl
jle
push
dec
fstpt
cwtl
cmc
push
jo
push
adc
sbbb
and
cmpsb
mov
hlt
hlt
pop
aam
sbb
jl
mov
pop
jne
pop
test
aad
js
in
xor
fstpt
bound
inc
cwtl
ljmp
xlat
fcoms
adc
addr16
fucomip
mov
pushf
pop
add
xlat
aaa
push
rcrl
nop
in
in
pop
int3
jb
or
rorl
fcomip
jp
cmc
orl
inc
pop
iret
fnstenv
mov
adc
scas
enter
sub
mov
shl
lock
xchg
mov
or
clc
fisubrs
inc
lods
das
daa
sbb
test
jne
push
and
mov
xchg
inc
sub
mov
mov
rcrl
pop
xor
dec
dec
dec
int
cld
sbb
out
push
in
and
add
xchg
sbb
mov
push
mov
push
sbb
out
int
test
mov
xlat
push
lea
repnz
sarb
mov
mov
mov
nop
and
mov
jle
push
push
jl
jmp
cli
pop
xor
dec
imul
pop
and
cmp
dec
leave
pop
orl
or
dec
icebp
leave
cmpsl
lea
inc
lcall
stos
repnz
dec
dec
sbb
push
sub
and
out
stc
jbe
sbb
adc
popf
pop
mov
negl
dec
xchg
ret
js
lods
leave
mov
xor
mov
pop
mov
xor
arpl
or
or
mov
aad
push
sbb
sub
xchg
pusha
roll
or
or
mov
xor
jmp
xlat
aaa
ljmp
imul
das
inc
repz
cmp
adcb
in
sbb
xlat
rcr
movsl
xchg
fldl
call
jae
ficomps
or
std
dec
lock
repnz
jb
lcall
sbb
cmp
fwait
jp
jae
imul
mov
sub
sub
push
xchg
stc
mov
mov
pminub
pop
aad
push
or
xor
jo
ret
das
xchg
sub
aas
mov
repnz
outsb
or
mov
pop
setbe
cld
mov
inc
shll
insl
stc
mov
pop
fldenv
arpl
in
in
in
lods
inc
push
inc
mov
leave
imul
clts
sarb
cmp
fnstcw
sub
outsb
mov
push
fucom
cmp
lods
in
jo
jae
aad
loopne
insl
rcrl
and
arpl
outsb
cmpsb
mov
es
clc
pop
cli
leave
call
aam
push
lea
insb
pop
pop
mulb
testl
or
cmp
imul
lcall
std
lcall
arpl
mov
mov
push
out
ds
es
jg
sbb
fildl
and
jecxz
pop
mov
or
das
aaa
jb
jmp
outsl
in
jbe
test
mov
into
les
clc
add
lcall
jb
dec
xchg
movsb
dec
mov
mov
fstps
test
lods
stos
out
xchg
xor
sbb
adc
aas
jbe
push
xor
bound
cmp
out
push
aad
and
aam
adc
into
xchg
and
or
and
cmpsb
loopne
lret
jnp
aad
fbstp
sub
pop
roll
daa
orl
dec
hlt
and
sub
jno
sub
or
jbe
std
lret
jmp
jb
cmp
jmp
stos
fisttpll
inc
pop
push
fwait
sbb
aas
add
pop
ret
icebp
sahf
sbb
ss
inc
lock
cmp
loopne
frstor
mov
cmp
push
das
insb
xor
outsl
mov
cwtl
or
fbstp
shlb
adc
mov
clc
dec
fsts
xor
cmp
xchg
inc
fdivrs
gs
std
fisubrs
sub
cmp
mov
and
pop
ret
sti
jnp
inc
das
xchg
mov
mov
movsl
push
pop
lods
hlt
xor
js
cwtl
mov
cwtl
std
les
in
and
fidivs
sub
dec
jae
mov
cs
sub
mov
lock
push
push
mov
fwait
je
jb
xor
jb
hlt
clc
mov
xor
in
fs
dec
scas
scas
pop
imul
or
js
dec
sub
or
cmc
scas
dec
lds
rolb
scas
and
popl
xchg
pop
arpl
jnp
jg
push
pusha
cmp
mov
dec
pop
jb
or
inc
loope
leave
adc
aam
bound
repz
mov
jns
lret
imul
aam
ret
dec
pop
sub
lahf
xchg
add
mov
insb
test
xor
mov
fidivrs
mov
fbld
xlat
push
push
stc
sub
mov
sub
aas
jbe
fdivrl
push
aaa
mov
aad
addr16
push
ud0
ss
add
je
xor
ficomps
ret
out
pushf
rcl
push
add
adc
dec
mov
aam
or
xorb
or
and
pusha
leave
rolb
loop
into
insl
sbb
in
pop
mov
mov
insb
push
out
ss
outsb
roll
mov
imul
jmp
imul
sbb
cmpl
loopne
mov
in
lret
jns
cmp
repz
fcomps
leave
insl
nop
insb
stc
cmpsb
adc
ljmp
xor
lods
sub
in
lea
inc
jae
aam
mov
push
iret
sahf
mov
pop
das
jle
mov
dec
enter
stos
dec
rcll
xchg
dec
and
and
sub
loop
stos
out
xchg
push
out
mov
outsb
mov
mov
push
cmp
or
or
divl
cmp
inc
leave
repz
mov
or
inc
mov
movsb
jl
icebp
icebp
push
enter
jmp
push
lcall
add
jno
sbb
loop
lds
inc
mov
xchg
cmp
push
arpl
aaa
aam
dec
testb
movsb
sbb
adc
arpl
inc
stc
cmp
jns
xorl
mov
mov
daa
test
or
cmpsb
jecxz
cmc
inc
pop
hlt
dec
loop
xchg
xor
dec
inc
push
pop
stos
cmc
ljmp
icebp
pop
divb
scas
push
hlt
and
in
outsb
loop
lock
aad
cmp
std
clc
fldt
lahf
inc
bound
insl
es
out
cltd
lea
inc
popa
fisubrl
pop
cmp
ds
and
arpl
mov
lret
fimuls
out
sqrtps
xchg
test
cwtl
movsl
sub
in
minps
xchg
jno
cs
sub
filds
sti
sbb
mov
int3
lret
outsl
lds
fsubrp
cwtl
mov
test
out
mov
ret
jle
jne
jmp
enter
insl
add
fstl
fmull
jb
mov
in
lcall
cmpsl
mov
push
mov
push
or
push
in
adc
insb
test
test
test
adc
sbb
rsm
arpl
js
cmpsb
mov
loop
xchg
mov
add
jp
popa
cmp
xor
stos
in
mov
cmc
xor
mov
mov
xchg
push
test
push
xchg
mov
pop
fsts
mov
jo
aas
or
mov
mov
nop
push
icebp
js
dec
pop
call
lret
arpl
cmpsl
movsl
pop
jnp
pop
fwait
cmp
iret
push
arpl
dec
lds
arpl
xchg
jae
gs
fsubrl
push
fs
dec
fnstcw
into
pop
push
inc
inc
lods
sbb
adc
push
fwait
mov
jbe
std
push
mov
cmp
jno
cmp
xchg
or
or
jnp
ret
aas
xchg
xor
pusha
sbb
mov
ja
push
idivb
cmc
push
out
pushf
das
and
ja
aaa
push
jno
decb
out
and
xchg
scas
addl
popf
pop
xchg
push
sbb
ret
jle
jbe
mov
popf
sbb
es
mov
mov
jle
inc
nop
lahf
ljmp
add
mov
sub
fbstp
outsl
es
outsl
sub
mov
push
loop
push
outsb
mov
sbb
pop
data16
push
pop
loop
push
lock
sbb
imull
fwait
mov
std
xchg
dec
mov
push
dec
xor
xchg
sub
xor
xor
inc
mov
or
jb
ret
jle
ret
pop
push
lds
xor
inc
pop
fprem
mov
std
sbb
mov
shrb
rcll
test
inc
iret
jns
jo
fwait
push
decb
or
rcl
xchg
sub
icebp
jnp
or
sbb
xchg
pop
ficompl
movsb
jb
sahf
int3
out
push
xchg
je
mov
pushf
ja
cmpsb
xor
orb
arpl
movsb
or
cwtl
test
in
mov
int3
sbb
jne
mov
sbb
push
cmp
imul
xor
mov
outsl
cltd
and
jmp
movsb
ret
jnp
lret
inc
mov
sub
adc
mov
es
xor
xor
mov
add
sti
dec
cmp
test
js
xchg
add
pop
int
jp
and
imul
inc
dec
sar
out
in
mov
or
insl
jge
push
jle
mov
sbbb
sbb
sub
daa
loope
std
movsb
push
leave
std
mov
pop
subl
mov
cld
push
repnz
aas
sar
fnstcw
lahf
mov
inc
adc
add
xor
dec
sbb
call
inc
jle
lahf
cmp
dec
stos
int
xor
inc
addr16
push
xchg
xor
lret
add
aas
xor
add
cmc
ljmp
js
insb
pusha
sbb
add
push
push
inc
shlb
push
inc
sbb
mov
mov
ret
call
in
push
in
xchg
mov
lea
js
mov
enter
sbb
jb
pop
lcall
xor
cmp
addb
push
aam
imul
movsl
es
jmp
mov
loop
mov
cmp
imul
cmp
pop
sbb
movsb
mov
and
shll
loop,pn
push
lcall
fisubrs
movsb
or
pushf
push
and
std
inc
push
mov
inc
pop
jno
in
shl
lret
shll
out
outsl
adc
jle
cld
jmp
cmp
inc
into
sub
repz
js
mov
add
cmp
push
sub
lock
test
push
decl
and
add
or
and
jb
cltd
pop
adc
xchg
cmp
std
mov
lcall
test
sbb
test
ja
movsl
lret
push
and
std
addr16
inc
fwait
cs
pop
cltd
stos
inc
lea
pop
iret
add
or
fnstsw
mov
mov
cld
jne
xchg
mov
cld
out
dec
dec
rcrl
insl
or
loopne
dec
mov
sub
iret
test
insb
xchg
jecxz
xchg
outsl
sub
insl
jo
inc
jecxz
rcll
sti
fldcw
adc
mov
jno
insb
dec
sbb
das
fwait
pop
push
inc
call
push
mov
movsb
sub
jbe
pop
fnstsw
mov
mov
ja
inc
incb
sub
mov
jg
push
je
outsb
and
xchg
xor
popa
cmc
out
push
fisttps
and
xor
andb
jae
cli
mov
lahf
add
arpl
xchg
ret
stc
lret
lahf
leave
cs
push
rorb
cmp
push
jnp
loope
jae
test
out
adc
icebp
in
lahf
mov
bound
je
les
das
adc
mov
ret
ss
fadds
addr16
inc
push
adc
out
sbb
enter
lahf
test
scas
hlt
idivb
and
dec
jp
pop
xchg
filds
mov
pop
cmc
mov
pop
add
stos
sub
hlt
pop
push
xor
pop
and
sub
in
sahf
ja
inc
jecxz
sbb
sub
adcl
dec
stos
add
bound
xorl
sbb
inc
in
sub
rol
xlat
shll
mov
jmp
jecxz
fsubr
adc
jne
inc
testl
adcl
jl
das
or
lcall
and
sbb
out
xchg
inc
sbb
dec
test
adc
daa
fst
sbb
in
mov
mov
jp
loop,pt
addl
insb
out
adc
mov
mov
cmp
pop
iret
xchg
in
pushf
xor
dec
inc
mov
xor
repz
pop
gs
outsl
dec
jnp
outsb
mov
push
enter
fbstp
into
mov
xor
popa
call
aad
icebp
add
popf
push
dec
or
mov
pop
loope
jno
mov
dec
push
mov
push
pop
xchg
jo
mov
inc
gs
fists
out
xor
sbb
lods
aam
clts
lods
bound
add
out
sbb
in
dec
push
push
pmulhuw
test
mov
std
pop
add
and
ret
ljmp
int
lods
mov
inc
cli
xchg
lods
lret
test
ds
dec
mov
clc
fs
lock
sahf
arpl
pop
leave
inc
stos
popf
cs
notl
push
pop
adc
jecxz
push
bound
pop
out
pop
lds
push
test
xchg
and
mov
push
push
xchg
hlt
push
mov
mov
sbb
dec
dec
leave
xor
sub
ret
cs
incb
adc
andb
push
push
scas
pop
imul
aaa
push
fcomi
push
push
sub
jne
adc
rorl
or
push
add
clc
push
nop
cmp
dec
mov
imul
std
bound
stos
test
imul
pop
int3
gs
push
push
iret
sbb
jne
cltd
inc
add
shr
add
add
sub
mov
pushl
jg
je
loop
pop
in
ret
ds
std
enter
sub
xor
sarl
daa
push
jno
movsb
mov
pop
add
cmp
push
cmp
pop
xchg
jae
add
jmp
movsl
sar
fs
xchg
jg
insl
inc
jnp
cli
xchg
arpl
fcmovbe
dec
popa
aaa
mov
adc
inc
scas
adc
incb
or
dec
dec
xor
outsl
dec
cmp
pop
sub
fucomip
mull
jp
mov
pop
adcl
lret
popa
sbb
jbe
bound
cwtl
out
mov
repnz
push
jmp
incl
fimuls
inc
mov
inc
lds
ljmp
lods
into
fldl
into
insl
mov
in
sub
mov
add
jnp
pop
sub
sub
sbb
loop
sahf
mov
pop
enter
rcrl
ja
sbb
loop
mov
dec
push
mov
rcll
jno
mov
incb
mov
push
or
adc
push
sbb
cltd
shlb
gs
and
cmp
adc
push
bnd
js
mov
insl
dec
in
dec
outsl
mov
loop
push
cs
push
cmp
fimuls
push
or
xor
sbb
jae
push
es
adc
add
out
cmpsb
lcall
jae
sbb
lods
lods
int
add
jbe
sbb
int
arpl
adc
push
out
js
fs
das
ja
xor
data16
push
push
addr16
cmp
ljmp
xchg
movsb
dec
mov
das
mov
enter
fldcw
jb
mov
pusha
hlt
mov
or
lret
mov
add
rcrl
mul
js
dec
or
das
push
sarb
jl
cmpsl
mov
cltd
and
int
cmpsl
out
xchg
out
je
or
addl
fistpl
jnp
and
repnz
and
cmpsl
and
mov
xchg
mov
xchg
xchg
jle
xchg
test
dec
push
mov
jns
jno
andl
mov
inc
ja
dec
dec
push
sbb
dec
mov
jno
jle
xchg
dec
sub
adc
mov
push
popf
add
mov
xchg
add
push
stos
stos
xor
cmp
cs
int3
and
or
movsl
cmp
das
add
movsl
insb
repz
lahf
cmpsb
in
cmp
mov
fsubp
mov
and
leave
push
in
stos
cmp
clc
adc
xchg
mov
cmp
dec
lret
jb
and
sub
test
cs
loop
mov
shrl
and
jns
sbb
mov
and
out
xchg
push
repnz
insb
popa
ljmp
or
mov
fmuls
popf
jbe
jns
icebp
inc
sbb
inc
and
pop
pop
pop
cmpl
out
addb
daa
mov
sbb
inc
add
pop
cmp
ljmp
sub
mov
jmp
ret
cmp
hlt
fsubl
inc
loopne
adcl
and
jle
inc
insb
mov
pop
inc
es
mov
sahf
fstl
insb
ret
shll
pushf
sub
in
ja
scas
pop
sub
jl
mov
ret
push
je
or
mov
push
sub
xor
xorl
loop
cmp
int3
mov
imul
cmpb
cmp
out
push
mov
imul
in
popa
jle
gs
imul
das
sbb
cld
ret
stos
adc
int3
setno
jmp
mov
scas
out
cmp
in
fldt
mov
mov
lahf
sbb
aad
sahf
leave
imul
and
jb
adc
rcrl
cltd
jae
sbb
cmc
dec
mov
imul
push
pop
ds
xchg
pop
push
mov
and
or
loope
mov
xor
push
out
mov
gs
push
fwait
mov
nop
push
sub
cmp
lods
ja
popa
jne
insb
mov
imul
ret
jne
and
dec
jne
and
cld
addr16
mov
in
inc
cmp
sar
mov
insl
movsl
sarb
out
shufps
fildl
lret
mov
arpl
pop
pushf
test
cmp
popa
aam
push
addr16
stc
jne
fbld
push
lods
int
nop
addr16
cltd
jae
test
loop
test
stos
jl
insl
mov
pop
pop
adc
out
xor
or
push
inc
mov
leave
dec
and
xchg
scas
xchg
mov
add
add
idivb
sbb
jp
xor
xlat
test
sub
dec
mov
and
mov
sbb
sti
mov
mov
inc
in
push
push
adc
push
insl
clc
inc
mov
adc
std
sub
ljmp
mov
adc
stos
push
pop
ret
roll
out
bound
mov
or
inc
inc
xchg
icebp
out
or
dec
cmp
dec
sarl
in
shll
pusha
mov
cmc
jbe
xor
mov
and
insl
imul
pop
gs
add
outsl
xor
imul
pop
mov
loope
stos
pop
jecxz
and
mov
mov
jge
ret
mov
xor
push
add
jae
xor
pop
lahf
pop
popa
push
xor
aaa
jne
sbb
imull
jge
mov
lods
rcll
addr16
pusha
aas
mov
out
inc
jne
outsl
inc
cmp
lea
lods
pop
xchg
pop
jle
out
cmpsl
out
je
jl
ja
lahf
push
adc
scas
xchg
adc
mov
inc
mulb
push
shll
or
jl
loope
cltd
lahf
insb
or
ja
xor
cmpsl
mov
sbb
mov
jae
and
mov
mov
shl
push
jg
xlat
fs
dec
push
and
push
mov
js
dec
sub
into
push
push
mov
mov
dec
mov
mov
movsb
stos
aam
dec
lahf
ss
jae
xchg
lret
fdivl
aam
adc
test
push
mov
rcll
adc
sub
out
mov
shll
arpl
adc
lods
adc
jo
xchg
and
mov
aad
test
mov
cmp
mov
cmp
lret
cmpsl
pop
xchg
rorb
xchg
jl
das
mov
pop
bound
lcall
mov
sbb
pop
inc
add
mov
pop
push
cmp
out
xor
aaa
mov
rcrl
dec
sub
inc
add
scas
xlat
in
shlb
mov
push
jbe
push
stos
sbb
mov
push
mov
lcall
pop
call
lcall
jnp
xchg
pop
jno
fs
pop
xchg
mov
xchg
lea
mov
dec
icebp
int3
loope
aaa
mov
and
pop
movsl
dec
scas
enter
lcall
sub
sbb
mov
dec
ss
movsb
push
in
enter
push
ret
cltd
cmc
mov
ds
clc
gs
movsb
push
dec
das
push
in
in
stc
sub
lea
sub
dec
ret
enter
pushf
aas
jnp
sub
push
jbe
rcll
ja
jge
shrb
cmp
adc
scas
push
loopne
insl
lret
xchg
xor
hlt
fcmovnbe
loope
int
cmp
push
cmp
xchg
lcall
jge
les
push
sbb
mov
repnz
rcr
scas
xor
hlt
xlat
jb
shrl
jle
outsl
rorl
cs
pop
mov
or
lock
mov
aas
ficoms
xorb
xor
mov
dec
adc
sarb
dec
popa
cld
int
fisubrl
mov
jecxz
xchg
jecxz
mov
bnd
ds
jbe
mov
mov
mov
add
push
ss
out
jl
push
stc
jp
and
test
lahf
dec
mov
jno
aas
test
int
sub
jo
les
dec
std
cmp
xchg
mov
sub
fidivrl
les
xor
int
push
aam
test
xchg
pop
insb
adc
es
sub
cmp
js
mov
daa
mov
jecxz
push
movsl
ds
sbb
mov
mov
imul
fildll
xor
push
adc
and
dec
mov
jp
jg
icebp
lods
xor
cmp
xor
pushf
add
or
sarl
addr16
inc
mov
icebp
test
cmp
pop
rclb
outsb
pop
in
cmp
sbb
ja
and
or
or
or
into
push
dec
movsl
or
mov
cltd
loope
sahf
hlt
jl
inc
roll
mov
cmpsl
orl
xor
jle
lcall
in
adc
js
cmc
or
mov
adc
enter
jmp
jmp
mov
stos
mov
bound
leave
mov
nop
out
jae
push
repnz
jb
fnsave
test
arpl
cmp
inc
in
adc
cmpsb
cmc
imul
mov
mov
aas
mov
push
jmp
mov
cmp
mov
and
jae
and
das
sbb
mov
jo
repz
aam
mov
shlb
pop
xor
int
rcrl
pop
jmp
aad
mov
push
mov
dec
mov
dec
xchg
adc
pop
sbb
sbb
popa
or
or
push
cs
push
test
mov
inc
subl
lahf
lret
into
lock
in
enter
pop
jbe
adc
mov
aaa
scas
cmp
jecxz
arpl
mov
iret
lret
xchg
mov
dec
in
push
subl
movsl
xchg
les
pusha
jae
in
cmp
push
xchg
dec
adc
xchg
sbb
push
test
icebp
jmp
adc
or
xlat
shl
movhps
pusha
push
loopne
or
and
xchg
adc
lret
mov
mov
push
pop
stos
sahf
cmp
sti
pushf
testl
add
iret
lock
sbb
test
sbb
je
or
test
or
xchg
shlb
rorl
inc
push
std
inc
cmp
jno
sarb
mov
xchg
mov
mov
inc
fbld
ss
cmp
pop
out
jo
outsb
inc
popa
dec
xor
sti
jnp
lods
and
pop
in
jp
repnz
xchg
jns
ljmp
mov
leave
dec
jns
out
mov
cmp
outsl
jo
sbb
testl
or
andl
lods
outsb
cmp
lds
rol
pop
pop
cmc
popa
adcl
subl
add
xchg
cmp
cld
adc
loope
aam
popa
sbb
xchg
mov
int
push
inc
mov
in
jge
dec
pop
pop
adc
dec
mov
lods
add
push
loop
push
mov
dec
cmp
sub
pop
sub
popf
sbb
sbb
ficompl
xor
inc
mov
mov
js
mov
jo
pop
or
in
sbb
ret
insb
adcb
mov
jecxz
sahf
rcrb
int3
outsl
or
jbe
stc
int
in
fdivrl
or
leave
ret
test
test
mov
cltd
imul
cmp
in
test
mov
push
jae
popa
cwtl
mov
and
out
sub
aaa
cmc
dec
pop
or
or
mov
jo
cmp
inc
fs
and
movsb
xchg
out
adc
adc
sbb
mulb
jae
sbb
mov
fbld
out
add
and
inc
xchg
stos
ret
sbb
mov
pop
sub
pop
dec
popf
sarb
fbld
lret
cmpsb
push
mov
mov
pop
jbe
push
stos
hlt
mov
les
idiv
imul
pusha
adc
scas
mov
out
roll
mov
movsl
fisubrs
cmp
ss
jge
cmp
pop
cmp
cmc
mov
cmp
mov
movsl
test
push
push
mov
dec
into
sbb
lahf
cld
mov
ret
test
aad
ret
in
imul
test
cmp
roll
fwait
scas
push
cmp
shl
mov
push
neg
mov
xor
divl
lcall
push
sub
out
xchg
cwtl
adc
sti
decb
ljmp
push
xchg
mov
lds
and
outsl
mov
inc
repnz
adc
add
outsb
push
lods
cmp
stos
je
mov
adc
cmp
xor
push
pop
in
mov
and
in
rcl
scas
adc
movsl
dec
add
push
cmc
stos
icebp
jbe
sub
lret
dec
cli
sub
inc
lret
lods
enter
mov
add
adc
stc
out
mov
lea
add
xchg
inc
mov
lcall
shlb
add
loopne
cwtl
and
loopne
add
daa
sbbb
inc
mov
cli
pop
divb
fs
add
ja
and
pop
jo
aaa
and
jmp
jne
cs
xchg
adc
mov
or
ret
xchg
push
cli
sbb
aad
stos
jnp
test
mov
test
pop
mov
mov
jbe
mov
push
push
outsl
jno
std
jecxz
stc
mov
pop
sbb
lcall
orl
add
cmp
xchg
dec
push
dec
repnz
mov
mov
cwtl
fnsave
sahf
in
and
pusha
repz
paddsw
lea
fwait
in
xor
lahf
add
push
shrl
cmp
movsl
or
add
scas
lahf
out
dec
add
loope
sahf
sbb
and
imul
repnz
sbb
adc
push
cmp
xor
out
adc
test
cld
in
adc
mov
addl
xchg
push
lds
lret
mov
jl
movsb
mov
cld
nop
jb
je
notl
xchg
lret
imul
aaa
mov
scas
in
xor
push
dec
mov
dec
jge
out
mov
xor
adc
fcmovu
in
mov
fldcw
mov
push
cmovns
stc
rorb
dec
das
fnstsw
and
int3
fisubs
inc
out
ret
or
out
push
dec
mov
mov
push
cmp
pop
test
inc
ret
dec
icebp
xchg
push
cmc
ret
xchg
mov
hlt
out
std
or
push
cmc
call
mov
insb
test
jb
mov
xchg
push
pop
out
sbb
jmp
mov
ret
rcrl
sahf
mov
jge
mov
loope
out
or
aas
rorl
cmc
stc
pop
stos
daa
fisubl
adc
insl
xchg
xchg
jmp
test
add
imul
push
sbb
adc
movsb
pop
orb
sub
mov
push
in
push
fisttpl
std
jg
adcl
push
andb
pop
and
xchg
hlt
lods
rcrl
nop
into
mov
pop
cld
loopne
testb
sbb
clc
mov
jle
enter
insb
xor
fcoms
xchg
sub
rorb
dec
stos
push
jmp
jo
or
movb
xor
stc
adc
and
das
out
xor
dec
je
mulb
xchg
or
add
xchg
aad
push
adc
jecxz
test
pop
addr16
mov
fdivrl
mull
xchg
test
xchg
jge
lods
cmpsl
mov
mov
negb
jns
bound
mov
and
imul
lds
xchg
or
xor
jecxz
rorb
jecxz
out
mov
ja
xlat
shrb
ret
mov
jg
lahf
sbb
arpl
inc
and
adc
pop
cld
and
inc
inc
push
lock
ror
pop
or
sahf
jle
enter
loop
ds
je
cli
dec
xchg
mov
js
movsl
lock
jecxz
sub
push
pop
mov
mov
mov
lret
or
jmp
in
mov
jbe
je
fsubs
mov
pushf
or
call
push
cmp
leave
add
mov
adc
dec
jb
or
inc
in
cmpsb
out
xchg
rcrb
push
fucom
xchg
andb
daa
mov
lds
dec
jmp
pop
daa
and
adc
or
cmp
xor
lret
xor
lret
adcl
xchg
aaa
adc
mov
js
xchg
notl
lahf
and
scas
in
and
shll
add
jge
dec
cs
faddl
jmp
adc
lods
cs
xchg
nop
inc
mov
dec
out
dec
inc
movsb
push
mov
imul
inc
fnstenv
loope
sub
out
std
fs
test
jmp
mov
jmp
sti
or
aam
sub
push
xchg
addb
sbb
jmp
pop
in
or
xchg
cmc
in
insl
add
insb
push
or
ficomps
jp
leave
pop
loopne
es
test
rclb
sub
xor
add
cmp
xchg
jp
out
sub
out
imul
jp
jmp
mov
cltd
dec
xchg
lret
ret
paddusb
sbb
movsl
or
sbb
mov
add
into
mov
cltd
in
pop
and
dec
push
daa
frstor
or
jge
gs
test
leave
lods
out
iret
pop
inc
mov
insb
or
mov
pushf
loope
data16
fistl
push
pusha
outsb
mov
rorb
loop
mov
jno
mov
pop
cmpsl
ret
fiaddl
fistpl
mov
xor
loop
in
rcll
popf
dec
loopne
xchg
adc
push
adc
in
xchg
push
ficomps
popf
dec
aas
push
mov
jge
lahf
inc
fcomps
stos
movsl
ret
call
out
lcall
out
pop
ljmp
push
test
pop
push
cmp
lods
push
add
push
aas
push
fistpll
sbb
add
inc
jne
xor
dec
lods
pushf
in
dec
lcall
xor
rol
daa
hlt
or
addr16
xor
xchg
cld
mov
test
sub
ljmp
int3
rcr
sbb
jl
movsb
ljmp
push
and
stos
jae
jne
out
mov
jl
lods
jmp
test
ja
mov
negl
insb
pop
push
cmc
add
movsb
enter
cwtl
and
aas
lea
mov
jo
mov
hlt
sub
imul
mov
mov
xchg
movsb
mov
adc
add
add
nop
cmp
pop
dec
inc
mov
jb
jecxz
into
in
dec
aas
add
mov
push
sbb
jecxz
test
shrl
lods
pop
lret
mov
cwtl
out
mov
enter
dec
or
pop
push
aad
mov
inc
push
fstps
or
dec
or
lret
xchg
and
push
js
sub
loopne
jo
loop
lret
addl
sub
add
fidivl
mov
enter
sub
iret
mov
stos
push
lcall
enter
and
mov
out
out
sbb
sub
cmp
cs
push
out
scas
mov
outsb
test
fsubs
test
push
fidivs
addr16
add
mov
and
enter
cwtl
cmp
je
xchg
adcl
pop
mov
inc
rclb
cmp
dec
xchg
or
inc
int3
in
lock
cmp
lods
cs
cld
pop
rorl
push
outsl
sub
mov
jle
mov
pop
insb
insb
inc
mov
ja
sbb
lret
adc
push
sbb
fsub
xchg
mov
dec
ds
sub
and
aas
test
cmpsb
jl
mov
inc
sbb
jg
leave
leave
insb
popa
pop
push
add
push
bound
or
mov
adc
push
jmp
push
ret
fdivs
fistl
in
jecxz
adc
mov
cmp
es
inc
or
dec
and
lret
push
lods
push
mov
sarb
cmp
push
insl
insl
xchg
xchg
lds
pop
loop
or
xorl
data16
pop
loopne
ljmp
ds
out
sbb
negl
mov
add
and
das
repz
sub
jg
adc
add
xchg
inc
iret
sbb
pusha
and
dec
icebp
test
jo
jecxz
loope
inc
mov
and
aas
sub
inc
js
xchg
mov
iret
unpcklps
addr16
inc
js
cmc
mov
dec
insb
mov
addr16
fsub
scas
pop
jp
scas
push
mov
loope
mov
ret
int
ss
push
xor
insb
jae
jbe
xor
pop
js
testl
out
xchg
fdivs
pushf
sub
icebp
lahf
xchg
jbe
mov
out
adc
inc
mov
mov
inc
pop
dec
dec
imul
cli
xchg
mov
scas
in
imul
jecxz
jbe
ss
aad
leave
stos
repz
test
leave
push
stos
icebp
mov
pop
clc
imul
pop
cmpsb
fiaddl
rcrl
xor
or
scas
add
out
xor
pushf
scas
mov
stos
inc
fld
cli
inc
jp
jo
repnz
stos
or
insb
jo
iret
push
and
mov
sub
cwtl
sahf
in
sub
inc
jecxz
pop
cli
inc
sbb
divl
aam
out
jp
jle
jle
popf
ret
stos
int3
cld
add
mov
dec
aaa
ljmp
int
xchg
mov
ret
clc
and
cltd
movsl
cmpsl
insb
mov
inc
aaa
mov
xchg
incb
xchg
sbb
mov
cli
mov
mov
sub
movsb
mov
cmp
je
fisubrs
push
icebp
dec
outsl
mov
and
mov
je
xchg
xchg
mov
lods
fwait
jmp
adc
adc
mov
add
in
ds
and
mov
lea
push
adc
inc
cmpsb
add
push
sti
lret
xchg
es
add
pop
negl
and
test
jp
mov
inc
lea
inc
mov
sub
jmp
cmp
and
jae
add
je
sbb
and
adc
jecxz
mov
jp
mov
push
dec
xchg
xchg
sahf
std
negl
add
dec
aas
jl
add
jnp
mov
hlt
dec
fmull
pop
pop
imul
daa
sahf
mov
xchg
sahf
xchg
pop
std
fwait
or
mov
adc
push
hlt
jo
test
xor
lock
push
out
cs
mov
sbb
js
or
jp
mov
or
add
fmull
fwait
mov
out
jge
cmpsl
dec
sub
jno
pop
repz
sub
call
mov
cmp
mov
add
lea
xor
adc
or
xchg
pop
pop
movsb
jl
sbb
pop
mov
mov
stc
mov
sub
loope
mov
jae
xor
leave
in
adc
adc
mov
sub
sub
movsb
sar
jl
push
jbe
leave
gs
push
dec
fcoml
push
out
add
add
dec
fisttpll
xchg
jb
xor
fxch
dec
movsb
fdivrs
in
nop
outsb
pop
inc
movsb
test
rcll
cmp
lock
aad
xchg
das
cltd
cmc
cs
js
jle
mov
or
mov
mov
std
cmpsl
scas
bound
push
insl
xlat
inc
dec
adc
push
loopne
hlt
into
ljmp
notb
push
jl
jmp
bound
scas
push
inc
cmp
push
cmp
sub
shl
test
mov
xor
movsl
imul
dec
lcall
add
mov
xchg
xlat
mov
pop
xchg
dec
cmpsb
shr
out
xor
mov
pop
push
inc
jl
jecxz
xchg
outsl
shlb
pop
scas
jg
mull
jno
test
xchg
and
sub
fldt
mov
cmpsb
popa
mov
in
mov
into
cmpsl
pop
push
repz
mov
dec
outsb
cmp
mov
shll
xchg
xchg
fs
les
stc
cmp
repnz
sub
in
fsub
jb,pt
movsb
sub
es
xchg
cmp
cmp
ss
push
sbb
cmpsb
fwait
nop
mov
inc
pop
cmc
notl
and
sbb
xchg
sub
push
xchg
fcom
xchg
inc
push
insb
and
sahf
push
lods
fs
lods
inc
fistps
or
lds
pop
lea
mov
test
mov
fistpl
test
in
call
pushf
aas
push
and
adc
push
mov
cs
mov
cmp
mov
xor
int
popa
insl
pop
adc
mov
jmp
mov
sbb
dec
lcall
outsb
pop
and
cmp
push
sbbl
cmpsl
aam
xchg
inc
pop
xorl
dec
mov
sub
mov
divl
mov
push
nop
mov
pop
insb
imul
fs
adc
cmp
or
push
fs
testb
or
add
push
fisttpl
or
icebp
testb
push
es
jp
imul
adc
lahf
cmp
xchg
mov
xchg
adc
leave
aas
das
push
cmp
gs
pusha
js
xor
push
xor
ds
mov
xor
mov
ja
cld
and
fimull
shll
shl
and
fcmovbe
jne
jge
pop
dec
into
imul
inc
lods
addr16
push
inc
push
adc
lea
ljmp
mov
mov
and
int
in
test
push
cmp
cmp
out
ljmp
mov
pop
int3
lret
jo
cs
mov
dec
movsl
sbb
jg
rcl
mov
xchg
mov
inc
jge
lret
dec
insl
inc
add
sub
mov
jb
minps
popf
fists
mov
jns
sub
pop
frstor
push
fsincos
jle
test
rorl
push
pop
sub
add
aad
aam
mov
jmp
inc
scas
adc
lock
push
cmpb
mov
jg
out
sbb
shll
data16
sub
int3
insl
ljmp
ja
add
scas
test
and
add
rcrl
jb
cltd
out
mov
sti
movsl
mov
xchg
into
dec
push
inc
pop
into
out
pop
mov
cwtl
pop
dec
je
xor
fstps
lea
or
mov
cmp
popf
andl
mov
dec
mov
in
adc
jo
jp
jne
ficoml
or
dec
ret
dec
loope
and
lock
adc
movsl
cmp
jo
dec
ficomps
xlat
lcall
loopne
call
push
clc
mov
xchg
inc
ja
scas
out
xorb
add
sub
loope
push
sbb
pop
mov
dec
and
jne
test
mov
and
hlt
fcmovbe
jl
xor
outsl
lret
in
and
xlat
and
dec
into
dec
outsb
out
mov
pop
xor
push
mov
dec
mov
scas
fldcw
jge
into
pop
xor
scas
xchg
xor
lret
divl
mov
push
xlat
pop
ret
stos
mov
mov
daa
push
arpl
ja
mov
sbb
mov
jle
movsb
push
and
pop
xchg
ja
hlt
nop
imul
lods
add
xchg
js
sub
loop
xor
aam
pop
loope
loope
dec
popa
dec
and
or
sub
jl
bound
push
mov
mov
add
inc
cs
sbb
pusha
outsl
jg
mov
mov
mov
outsl
xchg
push
cmpsb
cmp
cmpsb
xor
mov
jo
inc
repz
cli
push
repz
insb
mov
pop
insl
mov
bnd
inc
in
jmp
mov
scas
mov
stos
jp
in
mov
idivl
repz
cld
call
ret
cltd
push
cmp
sbb
xor
loop
push
pop
arpl
push
dec
lea
lods
add
and
shll
xchg
mov
test
jl
in
sub
and
outsb
loop
lahf
or
hlt
mov
cwtl
mov
adc
sbb
jecxz
jne
stos
pop
ljmp
mov
inc
dec
imul
clc
icebp
repnz
mov
xchg
test
cwtl
mov
in
sub
dec
fdiv
mov
sarb
fsubrl
in
das
add
sbb
pop
dec
je
sub
jb
insl
fwait
sub
int
jne
xchg
clc
fadds
push
xlat
test
pop
jne
cmp
xor
leave
rcr
scas
push
iret
add
fiaddl
dec
jb
mov
pop
stc
sbb
cmpsb
cld
inc
cmpsb
cmp
movsb
pop
dec
loope
fsubs
lcall
inc
inc
arpl
test
sub
and
xor
das
adc
fsubrp
shll
jle
lods
lret
jl
push
xchg
sub
jae
out
cltd
xlat
xor
push
lods
inc
push
test
clc
out
cmpsb
popf
pop
fsts
fsubrl
ljmp
inc
mov
xchg
test
in
mov
adc
pusha
cmc
push
jno
adc
jnp
push
outsl
repnz
cwtl
sbb
sub
shrb
inc
sbb
add
popa
push
mov
dec
xchg
fidivrs
mov
out
add
sbb
or
add
lods
dec
je
and
mov
in
enter
adc
out
popf
mov
push
inc
fcomps
sbb
xlat
pushf
imul
jne
sbb
xchg
fs
pop
jle
push
add
lahf
pop
imul
jb
and
xor
and
sub
xchg
and
repnz
js
imul
mov
int3
nop
loope
jmp
lret
fisubl
jp
cmp
fisttps
xor
pushf
movzbl
adc
sti
inc
test
testl
out
adc
ds
out
push
xchg
btr
ret
gs
push
xchg
lods
adc
test
cmp
movsb
ret
dec
and
and
nop
cmp
popf
fwait
jecxz
push
xor
addr16
add
push
cmpsl
or
mov
mov
lahf
int3
lcall
es
mov
test
or
shlb
xor
mov
in
xor
adc
fwait
adc
jmp
lcall
pop
sbb
lods
jns
mov
mov
or
jnp
sbb
push
aam
jle
out
lock
imul
shlb
dec
fmuls
pop
stos
fisttpl
and
or
sbb
aad
test
cltd
xchg
clc
in
fidivs
jmp
inc
stos
xchg
in
jbe
jo
adc
jb
loope
test
or
adc
arpl
faddl
loop
pushf
arpl
sbb
pop
rcl
jns
mov
and
mov
fucomi
pop
mov
dec
adc
mov
dec
cld
add
xchg
cwtl
xchg
push
and
dec
test
pop
sbb
data16
push
shll
mov
jo
out
cmpb
lea
jmp
or
insl
cmpl
cwtl
cmp
aad
mov
pop
aaa
jno
push
fstps
adc
sti
cmpb
adc
mov
incl
cmc
and
arpl
sbb
loope
push
pushf
in
mov
jle
or
mov
mov
cmp
xor
js
mov
sbb
cmc
mov
shlb
pop
das
jmp
movsb
or
cmp
sarb
pop
fsubp
inc
sbb
push
adc
dec
adc
iret
xchg
fwait
leave
outsb
pop
shll
test
fsubrs
cmc
outsb
cmp
fs
decl
in
cmp
mov
jnp
filds
and
adc
les
lret
cwtl
lcall
adc
sbb
mov
cltd
sub
gs
push
pop
push
shlb
iret
xor
mov
jnp
cltd
je
push
divb
xchg
into
cmp
ja
mov
mov
into
insl
inc
mov
imul
xor
aam
dec
xchg
aam
sti
sar
shlb
icebp
movsb
sbb
jl
lock
in
dec
mov
dec
lds
shrl
repnz
in
push
fbld
imul
xlat
cli
xchg
in
push
jno
cmp
jle
mov
bnd
push
shr
adc
fsubl
out
mov
push
stos
stos
and
cmpsb
push
movsb
test
sbb
adc
mov
mov
mov
in
mov
inc
rcll
nop
mov
repnz
push
dec
mov
lock
gs
out
pop
xorb
jae
mov
out
insl
dec
dec
pop
sub
stos
xchg
jns
cmp
fcoms
out
lahf
pop
adc
push
lret
mov
jecxz
pop
loope
testw
lret
stos
loope
rcr
in
pop
mov
imul
xor
mov
xor
daa
xchg
sar
xor
lahf
pop
adc
ss
lock
cmpl
insl
arpl
rorl
insl
insl
adc
loopne
daa
mov
insl
nop
cmp
mov
fdivrl
sub
pop
aam
xor
sbb
aad
mov
pop
out
cmp
jns
fistpl
mov
daa
stc
add
add
jnp
xor
ret
mov
or
inc
and
sbb
mov
xor
jne
mov
mov
xor
sub
dec
fldl
ret
sbb
add
jle
sub
std
jmp
repz
adc
fsubrs
jecxz
sbb
mov
popa
dec
sarb
shl
fidivl
into
movsl
jne
xchg
cmp
adc
pop
push
jg
xchg
dec
push
aam
xchg
ss
mov
lret
roll
pop
rcll
jnp
lret
lds
mov
mov
test
mov
pushf
in
cmp
jge
ja
testl
xchg
mov
aad
pop
and
mov
inc
cmp
aaa
cli
adc
adc
insl
and
stc
mov
push
pop
popa
mov
ret
xchg
or
icebp
sbb
aam
dec
fists
inc
jp
lods
rolb
faddl
cmp
push
aad
frstor
push
ss
or
or
insb
mov
push
or
inc
fcmovb
xchg
sbbl
fldl
jne
pop
cwtl
sbb
lret
in
imul
inc
pop
insb
daa
push
out
sub
adc
insl
sahf
lock
dec
call
repz
inc
sub
add
mov
into
adc
mov
movsl
mov
pop
push
out
push
jge
cmpsl
adc
sbb
imul
je
inc
cmp
bound
dec
and
add
mov
push
sub
adc
roll
push
scas
sbb
pop
xchg
xchg
inc
out
jnp
test
sub
mov
fs
movsb
jne
xchg
aas
mov
pop
stos
jmp
push
arpl
test
and
add
lahf
xlat
aad
int
pop
inc
xor
xchg
dec
mov
sub
sub
ret
ljmp
xchg
sub
mov
xchg
pop
int3
jne
shlb
xlat
fs
mov
fidivrl
sbb
add
dec
stos
in
ds
mov
pop
popf
fbld
push
xor
and
cmc
and
sbb
pushf
cmp
aaa
jne
es
lds
jp
enter
push
in
imul
sbb
xlat
hlt
cmp
inc
mov
in
mov
std
stos
cmp
sub
cltd
jbe
sarl
jmp
ds
mov
push
ret
sub
sbb
ss
icebp
fs
stos
sub
xchg
and
movl
mov
lahf
movsl
jmp
dec
sbbl
xchg
incb
shll
test
shlb
xor
nop
push
mov
dec
pop
or
nop
es
mov
shlb
mov
xchg
out
cmpsb
push
lods
sub
push
shlb
mov
and
xchg
push
xchg
xchg
out
mov
int
push
push
insb
testb
leave
in
mov
das
cwtl
xor
imul
call
sub
ror
mov
scas
sahf
das
dec
aad
fisubl
int
and
insb
xchg
cmp
mov
stos
push
fs
or
sarb
iret
pop
enter
out
jne
jecxz
jae
jge
mov
mov
sub
pop
lods
mov
ret
jp
or
mov
sub
adcl
test
aad
call
scas
push
rcll
adc
pop
outsl
mov
dec
adcl
repnz
imul
and
xor
ds
or
mov
dec
inc
movsl
pop
shll
jp
dec
mov
repnz
repnz
xchg
or
mov
cld
scas
imul
sub
xchg
cmp
cld
push
faddp
xchg
sub
js
scas
je
xchg
shrl
cmp
icebp
fwait
data16
cmc
xchg
lea
dec
pop
rcrb
and
sarb
js
mov
inc
jle
pop
lods
and
lahf
pop
dec
rol
addr16
push
pop
lcall
xor
xchg
jg
push
stc
and
icebp
and
cmp
xor
out
pop
xchg
dec
scas
cltd
push
imul
xchg
ret
pop
jo
push
je
push
test
call
xor
jns
scas
fcoms
push
mov
xor
cmc
jo
dec
ljmp
aad
repnz
fwait
imul
cmpsl
hlt
xor
lods
mov
sbb
loope
pop
popa
pop
in
push
xchg
and
int3
dec
pop
insb
pop
loope
jp
js
push
mov
jp
inc
xor
cmp
mov
insl
int3
cwtl
das
push
std
fistpl
pop
xchg
data16
stos
adc
fdivs
cli
shrl
add
lea
fdivr
das
stos
jmp
hlt
add
dec
cmp
inc
shlb
andl
ds
push
enter
ds
dec
push
pop
pop
movsb
stos
sahf
out
jb
mov
adc
rcrl
scas
addr16
xchg
add
insb
push
iret
ret
mov
push
mov
rorl
mov
xchg
inc
cli
sub
repz
pop
sbb
test
out
mov
scas
add
out
push
pop
test
mov
sarl
lock
jno
jle
std
mov
sbb
mov
push
adc
xchg
jp
push
mov
and
inc
lret
mov
mov
shrb
lret
or
pushf
pop
mov
push
pop
inc
jnp
imul
insb
stos
pop
fldt
idivb
dec
jae
icebp
cltd
mov
jb
loope
mov
cs
pop
pop
jo
repnz
dec
pushf
mov
mov
or
mov
daa
push
mov
mov
mov
add
shlb
cmp
ret
ret
jae
jp
lods
and
stc
push
insl
imul
or
sub
sbb
cmp
popf
fsub
add
push
repnz
xchg
ds
test
pushl
ds
mov
sti
icebp
sti
lret
in
jmp
sti
and
xchg
push
pop
jns
test
xchg
cmp
cmp
add
and
xor
arpl
xor
ror
pop
mov
adc
fs
fcmovbe
push
jbe
lret
pop
ds
aas
jnp
cwtl
adc
jecxz
gs
push
dec
cmp
jae
pop
stos
or
into
adc
stos
pop
lds
shlb
or
mov
in
dec
lods
dec
aad
es
loopne
sbb
outsb
sub
sub
inc
mov
pop
adc
in
pop
insl
mov
mov
jns
xchg
pushf
push
mov
cmc
insl
xchg
movzwl
sbb
inc
stc
push
add
les
cmp
dec
daa
pop
jmp
mov
or
les
jle
jne
jp
cmp
out
lock
addr16
rcl
mov
aam
movsb
push
push
rorl
mov
mov
xchg
ret
fxch
xchg
cld
pop
ds
loop
jns
filds
xchg
cwtl
es
dec
enter
jo
mov
loopne
loope
fdivp
jg
xchg
imul
add
xor
notb
push
push
pop
mov
imul
pop
xchg
mov
xchg
and
cld
ret
decb
das
mov
stc
sbb
inc
lcall
lahf
ljmp
cld
lcall
in
and
add
cli
nop
cmp
sti
movsl
lahf
xchg
add
jmp
add
shll
add
jo
xor
inc
sub
call
add
loop
pop
hlt
xor
test
sub
inc
jle
pop
in
inc
jg
ret
fcomps
pushl
cmp
incl
mov
arpl
fnstenv
mov
xchg
ljmp
pushf
fadd
int3
int
mov
fistl
push
sbb
and
xchg
xchg
push
es
mov
add
out
sarl
stos
push
dec
mov
jl
mov
push
fimull
xchg
jl
jecxz
nop
fdiv
mov
shll
or
rorl
out
andb
mov
push
aaa
lods
xor
cwtl
das
cmp
popf
cld
add
imul
mov
enter
aaa
and
repz
outsl
or
in
push
lret
push
in
sbb
out
mov
and
mov
xchg
push
mov
xchg
cmp
scas
add
into
and
in
xchg
cltd
sbb
pop
scas
jo
ficompl
sbb
pop
xchg
inc
mov
mov
and
ja
pop
cli
movsl
jae
jmp
fstps
mov
adc
cwtl
xchg
or
je
push
into
shrb
cli
fistps
aas
clc
aas
clc
jb
mov
adc
cs
fwait
sti
adc
adc
test
xchg
cmp
fdivrl
xchg
inc
idiv
gs
out
mov
aad
add
in
jmp
xor
cmpsb
jp
inc
gs
aas
out
mov
xchg
cmp
add
outsb
inc
aam
test
shlb
push
sub
push
jecxz
pusha
out
xor
nop
lret
pop
dec
movsl
je
mov
sub
mov
xor
cltd
inc
das
sbb
xor
mov
cmp
ficomps
inc
xor
pop
mov
lahf
add
jmp
popa
pop
inc
imul
mov
xor
popa
popf
cmp
cwtl
movsl
cwtl
xchg
add
fildl
push
lret
lods
mov
sahf
sub
cs
add
enter
mov
adc
aad
lret
xchg
or
adc
mov
cmc
es
repz
xchg
mov
ffreep
addb
aad
or
mov
int
push
ret
and
popa
xchg
jg
leave
add
jnp
shll
stos
pop
pusha
adc
ja
out
aad
clc
aas
clc
aas
clc
aas
clc
jg
xchg
fmull
stc
sbb
lahf
jge
mov
pop
divb
addr16
inc
mov
fistps
mov
int3
lret
sub
push
dec
gs
cmpsb
cmp
pop
xchg
ss
movsb
js
in
and
jg
mov
adc
fstl
add
xchg
inc
cmp
sbb
push
jbe
fwait
addr16
popa
insb
gs
loope
mov
dec
sub
fbstp
popf
jne
rorl
sub
rorl
sbb
in
add
mov
sbb
out
sub
ds
cmpsl
setle
js
dec
and
bound
clc
aam
jmp
jl
insl
xor
jmp
mov
add
stos
clc
sub
xor
pop
and
mov
jns
cmp
mov
xlat
leave
in
inc
test
mov
or
add
ja
movsb
mov
pop
push
test
dec
cltd
sbb
jns
repz
aad
iret
cmc
push
lods
inc
push
inc
add
cmc
bound
js
test
aad
jp
sbb
mov
orl
xor
mov
cmpsb
pop
xchg
inc
lcall
imul
mov
xchg
cld
cmp
add
stos
mov
mov
mov
mov
lods
add
mov
mov
jmp
movb
pop
xor
out
test
lret
and
mov
pop
mov
pop
inc
nop
xchg
movsl
push
adc
mov
fs
mov
sub
daa
and
leave
aam
cs
xchg
lahf
inc
sarl
mov
sti
mov
xor
icebp
sub
adcb
es
rcrl
mov
mov
aad
daa
gs
mov
icebp
jl
adc
xchg
insl
and
push
push
cmp
mov
test
xlat
scas
dec
lret
push
push
cmp
sahf
loope
mov
mov
movsb
sbb
and
xchg
les
xor
mov
adc
lret
push
rcrb
fmuls
outsb
xchg
or
jne
outsl
mov
in
mov
push
fmull
adc
test
inc
ja
ficoml
inc
inc
loop
add
test
xchg
xchg
inc
mov
scas
mov
adc
jl
movsl
decb
dec
push
gs
negl
sti
aad
popa
test
jecxz
jecxz
jl
mov
cwtl
cmp
test
or
in
xorb
sbb
or
stos
fs
shl
push
rorl
xor
mov
jno
icebp
cld
mov
mov
mov
in
aam
push
mov
mov
inc
enter
mov
sti
shll
push
xchg
in
xchg
dec
mov
mov
fsubrs
out
xor
sbb
push
adc
loop
loop,pt
cwtl
adc
mov
inc
ror
adc
jnp
in
pop
fistpl
sub
test
ret
xlat
add
add
repz
mov
cli
pop
int3
jle
repnz
sbb
sbb
pop
iret
repz
push
mov
stos
push
inc
outsb
test
repz
push
inc
xchg
sub
ficompl
dec
ja
sahf
xchg
and
lods
cmp
cmpsb
sti
jp
ja
push
mov
add
int3
cmp
pop
sbb
sbb
lret
imul
fstpt
test
rclb
loopne
dec
aad
cmp
add
inc
popf
loope
inc
cmc
jnp
jae
lahf
mov
lds
xchg
sarb
imul
subl
jecxz
lods
mull
stos
dec
sbb
or
sbb
push
add
jmp
lds
cwtl
cmp
leave
sub
mov
sub
push
mov
mov
shlb
mov
adc
iret
sbb
xchg
sub
nop
adc
mov
les
mov
test
out
xchg
sub
and
pop
hlt
inc
fidivrs
stos
pop
ds
fwait
test
xchg
xchg
xchg
inc
aam
test
ljmp
fnop
sub
daa
inc
mov
xchg
hlt
cmp
cwtl
test
sub
aad
mov
adc
std
movsl
scas
movsb
daa
jmp
cli
cmp
lcall
mov
mov
mov
inc
mov
dec
popa
or
ret
mov
jge
je
mov
pop
mull
inc
cmc
clc
cmp
stos
fnstsw
fisttps
sbb
sbb
sbb
and
lahf
push
pop
adc
mov
push
lock
jge
push
out
jns
jecxz
adc
jne
mov
add
mov
adc
int
mov
shll
popa
daa
cmp
mov
sub
jae
xchg
jae
mov
pop
sub
imul
dec
mov
add
in
dec
lock
in
sti
mov
jecxz
ret
lods
fldt
cwtl
jle
fidivrs
ficoml
and
lcall
mov
xchg
aad
mov
shlb
mov
addr16
scas
jno
pop
pop
lcall
push
pop
mov
xor
out
loopne
and
lcall
jb
mov
repnz
jmp
cmp
cli
and
mov
mov
adc
out
sbb
jne
cmp
fwait
ds
pop
mov
pop
addr16
xchg
ljmp
fcos
test
out
mov
cltd
bound
std
dec
xchg
lea
test
mov
cmp
subl
aam
ret
popf
ss
xchg
mul
scas
jbe
in
test
scas
inc
inc
std
clc
xchg
mov
jmp
in
sub
fsubp
cmp
out
lds
test
mov
mov
popf
dec
push
xchg
lods
sbb
dec
in
cmc
or
mov
js
and
mov
push
push
xor
push
fildl
setbe
ja
xchg
mov
xchg
sub
xchg
sahf
fildl
xor
out
das
or
out
rcll
dec
mov
movsl
xchg
dec
es
mov
fsubrl
inc
dec
mov
call
add
jbe
popf
mov
dec
push
push
rcrb
loope
lret
faddl
adc
push
mov
sbbl
xor
in
icebp
cltd
clc
jmp
daa
sbb
scas
pop
pop
shrb
data16
addr16
dec
jle
xor
pop
inc
sbb
adc
int
mov
adc
jb
cld
or
lret
adc
fcompl
jmp
push
add
add
lods
push
sub
test
pop
movsb
adc
pop
xchg
aad
bound
and
js
pop
inc
mov
or
dec
push
adc
mov
test
dec
test
int
cmp
cmp
insb
imul
pop
jno
add
mov
sahf
push
into
insb
out
je
mov
lahf
testl
mov
mov
inc
fisubl
fwait
aas
or
in
cmp
fldt
out
push
pushf
mov
adc
out
sub
lds
int3
das
lock
dec
mov
stos
push
sbb
cmp
pusha
daa
jmp
fistpl
pop
mov
test
dec
mov
push
add
xchg
xchg
testb
lret
sbb
dec
sbb
dec
movsl
cmp
jg
inc
sbb
adc
xchg
sti
subb
icebp
cli
pop
aaa
cwtl
inc
adc
fwait
sbb
ss
push
push
imulb
negb
arpl
outsb
adc
popa
cld
cmp
dec
lret
in
loop
sbb
xor
aad
jae
lods
movl
pusha
pslld
sub
mov
sarb
dec
push
addl
leave
pop
mov
or
int
mov
add
adc
xchg
xor
xchg
dec
aam
fbstp
jns
lahf
pop
mov
outsb
arpl
push
or
cmp
push
pop
int3
gs
loope
in
mov
cwtl
jl
mov
stos
int
aas
sub
fcoms
pop
ja
aas
lods
int
bound
test
in
repz
push
ret
js
ja
or
xchg
sbb
add
dec
loope
cld
loop
notb
movsl
push
mov
mov
adc
cmp
inc
xchg
cmp
and
add
push
mov
stos
sahf
inc
mov
push
jl
sub
add
push
mov
jecxz
xor
mov
repz
mov
outsl
jae
das
scas
pusha
and
in
add
and
rclb
sbb
fwait
push
out
inc
push
daa
adc
imul
pop
xor
andl
xchg
mov
adc
pop
in
pop
push
mov
stos
mov
rcl
out
sbb
adc
lahf
lahf
jge
addb
loop
scas
call
push
pop
cmp
mov
xchg
sub
push
js,pn
pop
and
cmpsl
mov
push
jge
mov
out
ljmp
add
cmpsb
push
sbb
inc
sbb
out
dec
out
test
push
adc
xchg
pushf
mov
adc
xor
hlt
mov
cltd
es
dec
jo
cmpsb
aas
push
nop
sub
lret
push
js
shlb
xor
xchg
iret
enter
xchg
cmpsb
mov
mov
imul
jno
inc
inc
mov
sub
jle
pop
in
mov
icebp
mov
pop
imul
xchg
hlt
mov
shl
hlt
ja
hlt
mov
pop
bound
stc
mov
mov
lcall
insl
rorl
jle
aaa
xchg
xlat
add
test
lret
mov
adc
xor
loope
enter
fidivs
sbb
cmp
jae
jo
push
push
in
outsb
stos
push
adc
adc
fldcw
imul
repnz
aam
out
adc
clc
xor
rcrb
rorb
xlat
jbe
add
out
bound
push
scas
mov
xchg
in
lret
lods
imul
test
and
lock
lcall
push
pop
leave
repz
mov
mov
call
stos
mov
or
xchg
mov
aad
jp
push
add
sub
or
insb
iret
pop
hlt
scas
cmp
sub
fldcw
mov
leave
mov
dec
test
lcall
mov
rcr
mov
int3
xor
call
movsb
inc
mov
push
sub
std
xchg
xchg
push
dec
mov
and
out
pop
sub
jl
into
imul
mov
pop
stos
lods
je
cmpsl
rcll
inc
push
and
sbb
xor
adcb
out
pop
ja
mov
and
lret
adc
mov
mov
dec
inc
shl
cs
jle
out
mov
data16
aam
sti
and
out
fisubrl
mov
pop
xchg
jg
pusha
cmpb
inc
pop
push
dec
or
xchg
pop
inc
xor
xor
das
push
inc
xchg
popa
or
push
das
jbe
ss
call
repz
xor
fwait
cmp
into
push
movsl
sub
xor
mov
bound
push
pusha
push
dec
mov
pause
ret
push
sarb
dec
mov
pop
call
jle
jmp
cld
add
mov
jecxz
sub
xchg
in
lcall
add
sbb
mov
movsl
aam
pop
cld
dec
push
push
addb
pop
jns
out
inc
adc
jp
mov
fstps
lods
jne
aas
adc
enter
lcall
cmp
jg
mov
cmp
imul
xor
xchg
mov
sub
push
lahf
inc
pop
loopne
pushf
push
xchg
inc
push
rorb
push
dec
testb
dec
sbb
ret
jo
pushf
cli
js
scas
es
sbb
fidivs
mov
push
inc
arpl
push
mov
sub
sub
cmp
fsubl
xor
arpl
lcall
movb
pop
fldcw
pslld
ret
and
dec
add
push
xor
mov
insl
dec
notl
xchg
mov
insl
arpl
push
in
or
inc
out
cmp
bound
dec
jl
cmp
sbb
cmp
div
mov
mov
push
call
push
xlat
ss
fistps
mov
cmpl
imul
rcrl
in
cmp
dec
mov
xchg
jecxz
dec
pop
cli
cli
push
lret
out
lods
push
dec
mov
in
jb
and
cmp
xor
fidivl
call
or
fiaddl
in
xchg
movsb
mov
mov
shll
xchg
js
pop
xchg
adc
dec
cmpsb
clc
adc
out
adc
test
subl
dec
sbb
xor
fldenv
movsb
rcrb
mov
jae
or
push
xor
and
loopne
inc
pop
pop
xchg
jbe
dec
cmp
out
mov
hlt
mov
cmp
stos
in
orb
sub
mov
sub
dec
in
fisubrl
cmpsl
push
pop
and
addr16
movsl
jne
cmp
cwtl
adc
adc
nop
mov
pop
stos
loop
popf
popa
or
ss
push
mov
jmp
in
ret
stos
test
fisubl
xor
sub
sbb
xor
mov
mov
xor
xchg
mov
push
in
mov
rcrb
mov
mov
aaa
pop
pop
xchg
out
les
test
lds
mov
jnp
xchg
js
ljmp
insb
mov
ja
push
pop
test
out
and
dec
adcb
lcall
cmp
nop
js
sbb
loope
imul
cmc
aad
pop
push
cmp
daa
mov
jnp
jmp
adc
outsb
sbb
sub
dec
lock
rorl
mov
mov
std
rolb
or
pop
pop
inc
insb
mov
jp
stos
cmpb
fstl
sbb
adc
mov
stos
mov
xchg
jno
fdivr
jbe
stos
std
scas
fs
mov
ret
insl
xchg
jb
sub
jp
mov
popf
inc
dec
cwtl
mov
inc
mov
mov
pop
push
and
daa
fidivrl
cld
push
pop
rcl
mov
movsb
mov
sbb
insl
mov
repz
js
lahf
lahf
pop
out
or
xor
out
and
test
add
xchg
das
dec
jl
dec
xchg
test
xor
pop
jmp
add
dec
push
adc
dec
loop
ret
insb
pop
dec
push
dec
xchg
mov
xchg
repnz
push
outsb
push
jmp
or
push
adc
xlat
hlt
popf
lock
push
pop
frstpm(287
aaa
pop
mov
clc
add
lock
shlb
push
jns
cmp
ljmp
xor
les
sbb
fcmovnu
test
decb
and
and
ds
clc
cmpsl
pushf
dec
sub
insl
inc
pop
ja
sahf
push
mov
ds
pop
cmp
inc
jle
and
dec
pandn
jl
std
or
inc
test
insl
lahf
jb
or
xchg
mov
adc
cmp
loopne
sub
js
lods
fcoml
sahf
fnsave
inc
pop
xchg
mov
mov
es
xchg
pop
lcall
xchg
jl
sbb
insb
mov
out
ja
fisttpl
sti
gs
enter
add
jge
xor
shrl
adc
dec
jns
and
sbb
test
mov
mov
rcll
les
pop
insl
clc
add
sbb
sub
flds
outsb
fcomip
inc
out
lds
sbb
and
aaa
or
stos
mov
fnstenv
dec
pop
stos
sub
stos
fsubl
std
cmp
inc
outsb
sub
inc
mov
loope
mov
stos
fimuls
cmp
inc
adc
mov
xchg
inc
jo
mov
lods
test
dec
addr16
int
dec
imul
pop
mov
call
lock
sbb
roll
lock
test
mov
adc
xchg
rcl
push
jecxz
mov
adc
jle
mov
adc
push
xchg
or
movsb
push
lea
fstl
add
cmp
and
in
scas
data16
movsb
dec
mov
push
hlt
mov
xchg
pop
mov
xor
jnp
ret
push
xchg
add
ljmp
test
mov
dec
mov
into
mov
mov
in
mov
ret
stos
in
out
inc
test
stos
insb
dec
sub
cmp
push
jns
cmpb
xor
sahf
xchg
jmp
fstps
adc
test
arpl
out
sub
jo
cld
pop
lds
and
imul
lret
leave
test
xchg
cmc
je
jo
out
mov
mov
or
adc
repnz
roll
add
mov
xor
jnp
adc
adc
aad
inc
call
je
cmpsb
push
or
xchg
sbb
stos
sub
push
test
clc
lods
or
xor
dec
jmp
lods
xchg
aam
fisubs
adc
loopne
sub
mov
jge
mov
sti
loope
xor
lahf
dec
pusha
sbb
add
xor
lock
mov
in
lock
xor
aas
mov
into
xchg
mov
outsl
in
test
out
les
sarb
lcall
nop
stos
jl
fisubrs
divb
fs
mov
jae
jo
mov
pop
and
xchg
test
js
scas
mov
adc
add
jo
gs
jg
mov
add
sbb
shl
test
add
or
inc
fidivs
or
jecxz
inc
leave
bound
test
jp
repz
xchg
jp
popa
sti
mov
inc
add
mov
sub
fnstcw
mov
out
add
jne
xor
out
int
push
sbb
iret
dec
dec
out
pop
arpl
adc
stos
ja
and
stc
push
pop
lcall
jge,pn
movsl
inc
loopne
adc
mov
mull
mov
sbb
out
xchg
dec
cmp
mov
ljmp
fists
cmp
cmp
daa
cli
adc
cld
jo
xchg
pop
pop
dec
jae
mov
popa
dec
fldcw
push
out
cld
ljmp
in
in
mov
xor
mov
mov
loop
add
jae
xor
fidivrs
mov
test
inc
loope
cmpsb
insl
test
and
lcall
jg
pop
sahf
xchg
pop
sar
cmp
std
fstl
pop
es
dec
sub
cmp
scas
xor
sti
cld
pop
mov
xchg
jns
mov
cmp
sub
or
sahf
dec
mov
flds
jne
pop
push
xor
je
out
out
cmp
fisttps
push
cli
cmpsl
fpatan
sub
into
lods
insb
in
in
divl
add
je
adc
sarb
mov
out
pop
dec
out
mov
push
mov
push
jle
hlt
movzwl
lahf
ss
aaa
flds
clc
jecxz
test
xchg
aam
cmp
out
jl
cmp
mov
pop
dec
add
fsub
jle
dec
or
stos
lock
dec
push
aad
jmp
jo
ss
fstpt
imull
insb
std
imul
push
cmpsb
mov
outsl
jle
das
int
adc
pop
movsb
lock
jmp
xor
arpl
test
xchg
xchg
fisubl
mov
fdivs
mov
dec
lds
in
pop
stc
movsl
mov
aaa
lds
fisubrl
roll
stos
stos
jg
push
test
cmp
jle
dec
stc
shlb
icebp
cld
out
iret
pop
or
outsb
mov
pop
cwtl
ljmp
xchg
inc
call
mov
mov
mov
fs
std
shlb
push
rcrl
clc
stc
mov
out
jg
lea
andb
loope
sbb
out
jl
adc
xchg
shl
jmp
adc
lret
addr16
sub
mov
jns
push
jg
jns
or
xchg
xor
int3
loopne
mov
mov
icebp
outsl
mov
lea
les
into
jmp
jp
jle
jnp
cmpsb
add
mov
or
mov
mov
call
jle
cmpsb
inc
ja
push
cmpsb
fildll
filds
inc
mov
jns
aad
int3
mov
out
out
call
das
cld
pop
clc
mov
xchg
mov
xor
int3
mov
pop
into
push
pushf
sub
jmp
jnp
sub
pop
cmc
insl
dec
or
cmc
xchg
call
orb
lds
xchg
into
sub
fs
lahf
push
xor
divl
andb
sar
jae
jmp
fidivrl
loop
fdecstp
pop
xchg
xor
test
idiv
out
mov
jnp
push
les
jg
pop
fisubs
dec
adc
xchg
fsubl
inc
jns
xchg
dec
jmp
lcall
pop
jo
test
aas
imul
mov
cmc
out
imul
cltd
sub
adcb
repz
jle
dec
enter
add
fwait
sub
or
sahf
in
push
movsl
inc
xor
rolb
and
sub
mov
add
xor
in
xchg
ror
enter
xchg
or
sub
mov
push
test
popa
mov
jp
mov
aaa
xchg
pop
ja
and
cli
rcl
movsb
jo
inc
out
mov
arpl
scas
imul
cmpsb
rcrb
add
jmp
subb
sub
and
imul
test
jecxz
pop
sbb
jno
clc
pop
sbb
ficoms
mov
add
daa
jbe
xor
test
call
mov
inc
notb
idivb
idivb
mov
dec
ret
mov
bound
jecxz
xchg
call
xchg
test
jmp
dec
push
test
imul
xchg
insb
dec
sar
arpl
jge
dec
scas
xchg
rcr
jl
outsl
xor
and
out
lods
out
mov
vmovd
cli
call
out
insl
add
ljmp
dec
stc
das
das
mov
xor
loope
repnz
lods
cltd
repnz
pop
outsl
subl
or
lcall
pop
and
mov
fildll
std
xor
jb
sub
int
lock
int3
xchg
lods
lcall
ss
add
and
arpl
imul
inc
es
sar
jl
xlat
push
mov
iret
daa
xor
cmpsb
mov
into
sub
cwtl
mov
mov
in
cld
sbb
mov
mov
lods
push
dec
in
sub
mov
scas
int
jl
xchg
adc
cli
fs
fmul
xchg
int3
sub
mov
xchg
loop
pop
outsl
add
int
jp
loopne
push
xchg
mov
cmp
mov
fcomps
add
leave
lcall
aaa
sbb
xor
aas
xchg
ja
push
mov
cmp
daa
and
cs
out
imul
out
add
sbbb
popf
fstps
scas
sub
mov
jnp
fidivrs
xchg
in
xor
je
sbb
pop
aad
sbb
test
cs
xor
lcall
imul
cmp
js
repz
xor
hlt
out
flds
jge
ss
sub
repnz
popf
fs
sbb
mov
das
sub
and
insl
arpl
stos
faddl
movsl
out
shrl
sti
shrl
jns
dec
mov
cltd
cmp
mov
mov
stos
add
sbb
fwait
jp
out
icebp
clc
into
hlt
and
repz
and
jmp
xor
in
adc
arpl
fmulp
or
movsb
dec
push
into
mov
pop
mov
add
sub
ljmp
orb
sub
mov
jns
shlb
dec
xor
and
add
push
xor
out
adc
pop
sub
or
jge
push
insl
jge
int3
push
call
fwait
cmp
jns
clc
cmp
fisubl
fiadds
leave
out
ror
jb
or
lret
push
in
scas
dec
adc
pop
ja
leave
sbb
ja
mov
out
mov
or
add
jecxz
enter
dec
insl
push
cmpsb
andl
mov
pop
es
push
lods
pop
jae
cli
negb
add
jg
aas
fwait
lcall
js
pop
stos
icebp
pop
les
sub
mov
adc
andb
popl
push
cld
adc
adc
push
cmp
mov
outsl
cmp
mov
sbb
dec
mov
mov
gs
jne
dec
test
loope
xchg
or
and
fisubs
clc
jp
in
xor
xlat
pusha
mov
push
push
mov
xchg
cmp
out
addb
xchg
xchg
test
icebp
das
sahf
aas
jb
data16
fs
sbb
jp
push
adc
sarb
add
pop
mov
push
xchg
mov
incl
lock
cmp
es
arpl
push
dec
cmc
adc
sbb
add
popa
movsl
sub
notb
adc
dec
mov
je
pop
sub
rorb
xor
push
fldcw
pop
shrl
cmp
jnp
shr
popf
sub
imul
xchg
xor
inc
lahf
mov
imul
and
mov
cmp
outsb
hlt
bound
mov
inc
sbb
outsb
fwait
out
xchg
push
out
cli
pop
gs
jbe
mov
mov
rclb
lret
push
fcmovnbe
out
dec
aas
mov
push
push
or
loope
cmp
xchg
lds
push
repz
rcll
push
push
adc
lea
xchg
add
xchg
or
sahf
or
fiadds
insb
addl
imul
mov
out
fimuls
push
iret
xchg
and
fwait
leave
stos
pop
stc
jge
out
scas
loop
test
sub
testb
les
adc
cmp
pusha
leave
dec
arpl
or
daa
js
or
and
insb
mov
dec
xchg
xlat
push
dec
in
mov
xchg
ret
pop
jno
mov
movswl
imul
jg
cmp
loop
ret
int
sub
outsl
enter
adc
cli
ljmp
hlt
mov
pop
cmp
mov
lahf
mov
mov
ror
mov
mov
cs
cmp
xor
dec
fsubl
mov
cmpsb
test
test
mov
arpl
dec
cmp
es
aas
jae
jo
cmp
or
test
xor
and
add
xchg
popf
pushf
xchg
outsb
pop
and
test
roll
shlb
popf
lods
mov
repz
lcall
or
clc
scas
mov
ret
out
jg
enter
push
sub
fistpl
daa
fldt
das
in
ljmp
data16
cld
das
dec
shlb
out
dec
repnz
stos
imul
lea
xor
mov
inc
decl
add
out
fnstenv
push
lahf
push
sbb
test
pop
push
outsb
pop
and
imul
repnz
lret
inc
mov
sahf
sub
mov
dec
jl
mov
mov
inc
gs
mov
inc
mov
dec
mov
pop
push
stc
lock
jbe
sub
pop
mov
xor
push
sbb
test
mov
imul
fidivl
push
outsb
mov
mov
add
lock
and
jns
mov
sti
stos
mov
scas
jb
cmovo
sbb
fdivs
out
or
ss
sbb
dec
jne
ss
ds
xchg
shll
cli
jnp
cltd
daa
popa
push
adc
lret
test
push
es
outsl
mov
pop
or
int
dec
adc
lock
dec
sarl
lret
ror
cmp
push
xlat
popf
lret
out
sahf
mov
pop
fsubr
out
pop
pop
popf
adc
sub
add
push
js
or
and
or
push
fimuls
ret
pop
sub
mov
mov
leave
mov
stos
ss
in
daa
xor
imul
mov
aam
jns
cmp
mov
dec
ffree
out
enter
mov
add
push
out
lcall
xchg
add
xlat
pusha
fistl
jb
jle
adc
popa
jo
mov
mov
in
add
fldenv
std
vandps
dec
push
bound
mov
add
out
pop
push
data16
xor
fistpll
pusha
xchg
pop
cmp
xchg
cld
mov
or
or
cmp
pop
push
sbb
ror
leave
xor
les
xchg
jp
adc
mov
cli
cmp
mov
in
dec
jg
dec
stos
xor
ja
inc
lods
rcl
loope
push
jecxz
mov
mov
mov
enter
mov
cmp
iret
push
inc
xchg
jae
mov
arpl
shrl
pop
adc
sub
adc
out
call
xchg
insb
adc
arpl
int
data16
push
push
gs
jg
mov
push
sbb
shll
lret
inc
popf
fisubrl
sti
cli
jne
mov
in
xchg
ja
imul
sbb
das
inc
fbstp
fistpl
inc
cmpsb
xor
pop
icebp
es
shrb
pop
call
sub
addr16
sub
mov
cld
cmp
cmp
and
out
inc
dec
mov
loopne
mov
ret
xlat
push
aad
in
jne
xchg
push
sbb
les
out
lahf
pop
adc
notl
xchg
lock
or
and
add
cltd
in
push
cwtl
iret
outsb
dec
scas
mov
adc
repnz
das
cmpsl
outsl
mov
lcall
fnstsw
cltd
das
lret
js
ret
mov
movsb
popa
mov
inc
out
popf
dec
movsb
inc
push
in
icebp
enter
pop
lods
push
cmpsb
int
adc
push
mov
into
sbb
cmp
insl
pusha
dec
lods
or
add
popf
jae
sub
imul
gs
test
pop
pop
movsb
lea
flds
push
outsl
sbb
dec
sub
loop
outsb
mov
sarl
into
cmp
nop
popf
gs
shll
inc
cmc
stc
cmc
cld
xor
xor
fcompl
stos
pmaxub
ss
add
sub
pop
hlt
leave
hlt
fwait
psraw
gs
rolb
fsts
push
push
scas
int3
in
lock
push
bound
push
jle
pop
adc
jl
dec
das
pop
pop
lods
pop
or
and
arpl
xchg
cmpsl
or
or
jae
add
pop
inc
or
mov
scas
or
rorl
inc
sti
roll
test
adc
sbb
mov
xchg
pop
icebp
add
daa
xchg
hlt
xor
lret
inc
jle
mov
mov
stos
rcll
add
fstp
jge
mov
aaa
cmp
jno
adc
hlt
xchg
rcll
sub
jns
out
scas
dec
and
and
je
pusha
push
pushf
lods
int3
aas
call
xor
lock
cmp
and
in
in
sub
test
cwtl
cld
sbb
test
xlat
rolb
add
das
icebp
popa
cmpsl
mov
dec
das
xchg
repz
lret
roll
pushf
decb
iret
in
or
leave
repz
pop
clc
mov
fisubs
hlt
pop
pusha
arpl
xchg
dec
mov
test
lret
inc
xchg
sub
mov
and
push
jmp
repnz
outsb
mov
pop
sub
aam
jb
sub
pop
pop
cld
adc
adc
jl
and
push
add
jo
push
scas
xchg
pushf
inc
adcb
imull
fbld
push
stos
fcomps
mov
sbb
push
pop
mov
adcl
repnz
outsl
mov
adc
jno
dec
sub
and
cwtl
test
push
aam
sbb
in
insl
mov
nop
lret
outsb
clc
outsl
push
pop
in
aaa
mov
mov
mov
and
mov
js
jne
xchg
dec
sarl
insb
test
mov
jo
es
xchg
lock
push
cmpsb
push
jne
cmp
negb
aad
in
imul
ds
out
cmp
xchg
loope
in
xchg
add
out
jecxz
shrl
jnp
in
mov
sbb
jmp
jo
jp
mov
sbb
call
mov
or
insb
jle
aas
add
xor
ret
sbb
data16
xor
cmp
sarb
cltd
fimuls
fdivs
cmp
cwtl
jbe
and
mov
jmp
shll
int3
inc
aas
add
pop
aad
in
lea
mov
dec
in
stos
push
mov
cmp
insl
mov
aas
inc
insb
scas
sub
cmpsl
xor
jmp
cwtl
cli
sbb
push
mov
or
push
pop
push
gs
sti
mov
inc
outsl
stos
hlt
cmpsb
dec
mov
test
add
pop
push
aam
pop
sub
sub
xor
aaa
dec
and
test
inc
and
dec
xor
imul
cs
cltd
jbe
pop
hlt
aad
sub
fcompl
cmpsb
ljmp
cld
fbld
jnp
mov
cmp
cli
mov
push
out
test
inc
xchg
mov
push
inc
aas
movsl
mov
fdivrp
cld
in
push
sahf
ljmp
mov
sahf
push
sbb
mov
shlb
cmp
andb
aaa
fstpt
js
movsl
int
out
jae
jno
btc
dec
mov
ds
mov
and
scas
call
aaa
sbb
cmpsl
movsl
xchg
enter
mov
cwtl
loop
enter
out
fcomps
cli
mov
in
cmp
push
xor
ffree
mov
pop
pop
push
sub
sbb
sbb
mov
mov
ss
xor
insl
loope
out
push
sti
dec
iret
loopne
les
loope
shll
inc
cwtl
xchg
dec
scas
inc
or
fwait
idivb
fnstenv
add
mov
call
cwtl
pop
sbb
out
ds
mov
mov
outsl
gs
jne
mov
inc
cmp
cmpsb
push
sbbl
xor
xlat
dec
and
mov
out
push
jge
sbbb
jl
ss
push
xor
sar
pop
pop
loopne
out
test
repz
xchg
stos
ljmp
fadd
mov
jbe
dec
mov
pop
dec
dec
adc
mov
cmpsb
lods
mov
orl
rcl
movsl
ret
movsb
call
and
gs
jp
cltd
xlat
daa
loop
stos
adc
push
and
fstps
inc
pop
jno
popf
mov
lods
es
adc
shl
arpl
ret
jnp
cli
xchg
cmp
cmp
call
cmp
leave
push
outsl
dec
inc
xor
js
cs
iret
scas
rolb
xor
test
imul
sbb
or
imul
xor
sub
and
mov
cmc
addr16
and
scas
out
push
cmp
jp
cmp
mov
sbb
aam
cld
adc
call
aaa
loop
push
cmpsb
xchg
movsb
stc
mov
sub
or
les
dec
xchg
cmp
xchg
xor
stc
test
adc
loop
xor
and
add
call
fstpt
aad
pushf
cmpsb
test
outsl
fcmovb
test
loopne
ret
aas
loope
stc
sbb
xor
xor
sbb
and
nop
add
data16
add
mov
mov
bound
rolb
and
add
das
adc
adc
and
inc
cld
lods
roll
or
add
add
mov
mov
or
push
loope
mov
cwtl
cmp
fldcw
mov
mov
mov
shll
cmp
push
xor
int
icebp
adc
inc
movsl
lret
cmp
bound
jo
mov
push
cltd
hlt
les
add
xchg
pop
mov
fstps
push
cmp
scas
faddp
or
and
pop
iret
jle
iret
pop
jbe
jne
repz
in
imul
pop
sub
mov
or
jno
push
fnstenv
dec
repnz
sbbl
push
in
fs
cmp
mov
gs
mov
insl
sbb
int
xchg
enter
dec
and
sbb
or
cmpsb
lret
or
mov
mov
ljmp
cmp
inc
out
lock
push
fsubl
in
scas
sub
iret
adc
shrl
test
stos
jae
out
mov
mov
ss
sbb
sbb
sbb
push
or
out
test
xor
sbb
dec
loope
and
adc
xor
mov
shl
cmp
popf
push
or
mov
sbb
pushf
dec
jg
jp
out
in
pop
jg
imul
rorl
push
pushf
xchg
xor
sahf
lods
iret
sub
push
in
jmpw
aas
jecxz
push
shrb
mov
movsb
inc
and
push
mov
mov
mov
sbbb
cmp
xor
das
jns
push
sbbl
and
push
lahf
gs
mov
pushf
lcall
xchg
clc
jecxz
movsl
aam
out
dec
mov
and
loope
or
pushf
cmpsb
xor
xchg
stos
lods
push
insl
ret
xchg
divb
mov
data16
jne
dec
out
mov
pop
dec
aad
xchg
mov
cmp
pop
sub
xchg
mov
and
mov
adc
popa
push
mov
jo
sbb
inc
adc
cmp
dec
or
and
push
sbb
mov
mov
cld
test
cwtl
fwait
pop
in
in
idivb
jns
fstl
fsubr
xchg
pop
mov
and
fsubrl
icebp
jp
sbb
or
pop
scas
and
sbb
cs
cwtl
jb
jbe
or
mov
in
ds
lret
and
lret
bnd
dec
sti
add
jb
push
cmc
mov
idivb
loop
xor
insl
pop
popf
mov
dec
clc
cwtl
shrl
push
push
ret
pop
jo
xor
adc
imul
mov
jbe
mov
adc
out
inc
jno
push
sub
or
push
jmp
pop
sbb
aaa
das
xchg
pop
push
mov
push
out
in
sub
jbe
fldt
rclb
add
push
adc
ja
cmp
lea
cs
cmp
xchg
mov
je
xor
push
imul
cmp
adc
mov
movsl
int3
adc
out
jae
fidivs
or
out
fimull
xor
test
mov
or
addr16
stos
lahf
cwtl
pop
sti
nop
adc
ja
dec
or
cmp
scas
xorl
push
cmpsl
test
cmp
cltd
outsb
inc
xor
bound
xlat
je
pop
pop
insl
inc
jmp
cmp
imul
sub
je
add
leave
mov
mov
sbb
test
adc
leave
out
and
add
inc
pop
in
lock
loop
jb
mov
mov
in
imul
das
sbb
pop
aam
jl
jecxz
sub
inc
notl
in
cmp
das
sbb
test
and
cmp
int
outsl
add
fnsave
cmp
push
repnz
or
out
pop
jae
xchg
xchg
ret
adc
pop
mov
jb
cmp
xchg
push
cmpsb
pusha
cmp
js
mov
add
in
or
pop
dec
adc
sti
pop
mov
ret
popa
pop
pop
fs
idiv
test
xor
mov
sar
pop
jl
roll
mov
push
das
and
rcrb
push
sarb
lods
xor
frstor
lahf
je
ret
cld
mov
lret
scas
mov
out
lock
or
xchg
mov
bound
jge
cltd
sahf
cltd
and
negl
mov
push
pop
dec
and
in
stos
add
dec
aad
mov
jmp
test
add
je
add
enter
pushf
pop
repnz
mov
push
ljmp
enter
data16
out
xor
mov
mov
add
cltd
lods
xor
movsb
add
xlat
push
arpl
aam
lock
mov
das
data16
lret
pushf
inc
lods
inc
sbb
xchg
push
aad
cmp
jno
push
imul
dec
push
cwtl
sti
mov
or
mov
ret
sbb
and
icebp
lret
push
and
add
mov
or
ja
mov
mov
jl
lods
shlb
fsubs
pop
in
stos
pushf
fnclex
and
clc
xchg
add
shrb
add
mov
sbb
mov
test
jno
movsl
scas
or
jns
mov
jnp
addr16
mov
outsb
test
fnstsw
push
das
pop
out
mov
dec
add
add
xchg
call
cld
lea
sti
orb
les
lret
ljmp
xor
jno
pop
test
enter
mov
fcoms
pop
jp
xchg
cmovnp
cltd
loope
or
mov
dec
mov
outsb
adc
inc
mov
or
push
flds
imul
out
pop
fidivl
push
mov
inc
iret
addr16
pusha
int3
out
and
push
mov
mov
jno
outsb
xor
dec
jno
push
push
outsb
pop
sub
sbb
jne
repnz
pushf
push
insl
or
and
cmp
adc
loop
add
mov
test
test
mov
in
pop
sbb
out
cmp
fldl
push
cmpsb
xchg
fptan
adc
xor
imul
or
push
iret
es
sub
push
inc
pusha
out
xchg
mov
cmp
xchg
adc
in
std
jmp
popf
mov
out
inc
out
mov
int
in
testb
int
sub
mov
push
dec
out
jecxz
cwtl
jno
dec
fsubrl
sub
xchg
orb
aas
jns
andl
add
fwait
mov
gs
sub
adc
jb
xor
adc
jbe
lds
mov
ss
or
fnsave
ja
std
sahf
ljmp
pop
pop
test
out
ss
lock
xor
mov
xor
mov
push
mov
add
sbb
fwait
into
out
addr16
push
ja
jge
cmp
scas
adcb
pop
adc
fnclex
add
xor
nop
xchg
jo
sbb
sub
xor
inc
cmp
mov
xchg
aad
in
dec
pop
cmp
ret
and
jo
in
cmp
les
test
adc
sub
repnz
mov
mulb
outsl
jns
rolb
in
dec
insl
push
mov
cmpsb
mov
inc
jne
inc
cmp
sub
jns
lock
ds
jne
jae
insl
mov
add
lret
mov
jle
pop
jmp
push
dec
pop
out
jae
mov
xlat
sub
sub
fwait
adc
xchg
or
xchg
lcall
mov
cmpsb
les
push
dec
adc
sub
pop
lahf
xchg
adc
sahf
sub
dec
test
adc
mov
enter
pop
fwait
mov
cmp
pop
sub
aam
ret
ss
jp
mov
loope
gs
and
cmp
insb
inc
jns
mov
mov
filds
pusha
pop
out
xor
inc
test
js
push
mov
sbb
add
mov
mov
rorl
jg
and
mov
imul
jo
mov
mov
lds
addr16
push
mov
jmp
into
test
sahf
xor
sub
dec
movsb
xchg
add
mov
inc
inc
lods
data16
sub
adcb
aad
dec
mov
cltd
popf
xchg
popa
fiaddl
loop
pop
popa
xchg
sbb
mov
sbb
cmp
outsb
icebp
mov
out
fistpl
jno
cs
clc
inc
lea
std
xor
dec
cmpsl
sbb
and
out
add
push
adc
jmp
add
je
xchg
clc
imul
pop
xchg
xor
out
sbb
inc
xchg
scas
adc
repz
inc
out
loop
sbb
push
adc
out
insl
push
aam
push
dec
insl
xchg
sub
xor
mov
orb
movb
lret
and
fucom
imul
or
inc
rclb
repz
neg
push
in
jb
mov
out
inc
cmp
pop
cmp
sub
aaa
sub
push
mov
xchg
shlb
xchg
mov
jge
fcmovb
dec
mov
push
stos
sbb
cli
mov
mov
inc
push
ror
ss
out
sub
mov
dec
je
lock
mov
lods
test
notl
ss
cmp
or
cld
push
mov
shlb
jle
sbb
xor
ret
cmpsl
cmc
mov
inc
xor
insb
lods
arpl
int3
fwait
jae
aaa
out
rorl
dec
cmc
rcrb
popa
stos
jne
mov
ss
mov
xor
xchg
icebp
dec
mov
cmp
repnz
inc
and
movsb
xchg
xchg
aad
imul
out
mov
xor
dec
outsl
jecxz
pushf
lea
sbb
lods
ss
pop
rolb
mov
adc
in
xchg
js
popa
mov
sarb
fadd
push
push
out
stos
jmp
mov
jmp
xchg
call
dec
mov
sti
gs
ds
stos
lret
xchg
scas
dec
push
mulb
addr16
pop
lahf
arpl
enter
ret
ret
testl
jne
inc
pushf
daa
mov
push
popa
add
pop
pop
sbb
sti
push
nop
cs
cmpsl
inc
lret
cs
les
int3
cmpsl
mov
jno
mov
stc
faddl
mov
inc
mov
cwtl
mov
frstor
ss
sbb
jne
sub
push
and
data16
xor
stc
push
test
dec
xchg
inc
jle
jbe
xor
daa
push
pop
mov
or
addb
and
mov
cmp
ds
lods
shll
int3
sbb
sti
sti
push
dec
pop
cmp
in
mov
nop
andb
or
jge
fimuls
ljmp
imul
movsb
sbb
fs
repnz
mov
adc
sub
inc
mov
push
push
mov
insb
adc
xchg
shrb
mov
mov
pop
mov
movups
lods
movsb
rcl
fwait
ret
push
or
xchg
fsubrs
pop
lods
imul
sub
jae
pop
cmp
pop
jns
inc
fs
in
sbb
mov
mov
test
int
mov
and
or
sbb
push
jg
lods
jecxz
ljmp
fwait
cmpsb
repz
es
xor
push
ja
cld
adc
test
mov
mov
pop
aaa
cmp
dec
mov
sub
scas
push
xor
jo
jmp
cmp
rcr
loopne
insl
pop
jb
or
jno
cld
aam
mov
xchg
es
or
enter
pop
rorb
add
dec
sbb
xchg
mov
stos
inc
data16
pop
mov
stos
pop
and
outsb
xor
in
inc
icebp
sub
xchg
fiaddl
push
clc
scas
arpl
lret
pop
dec
enter
pop
mov
outsl
dec
inc
sbb
das
dec
insb
fstpl
in
and
dec
mov
pop
mov
inc
pusha
rorl
and
sbb
cmp
imul
fs
pop
mov
stos
orl
setb
jnp
scas
fsubrl
das
mov
call
cmp
ret
stos
pop
dec
jo
inc
jmp
test
fbstp
push
lcall
repnz
mov
jle
movsb
outsl
adc
lcall
dec
cmp
outsl
inc
lods
mov
push
lahf
add
dec
popa
lahf
ret
testl
icebp
push
xchg
mov
shr
ljmp
xchg
jge
repnz
lods
jle
sbb
shrb
mov
in
adc
adc
ret
xor
ss
bound
nop
and
outsl
and
in
mov
push
dec
pop
aam
in
rcl
sbb
mov
pop
pop
jbe
fcom
xchg
js
lret
in
adc
mov
jb
jns
mov
daa
inc
push
fcmovne
imul
and
inc
fmull
xor
xor
mov
clc
jl
data16
icebp
call
xchg
rcr
mov
dec
xchg
out
or
icebp
test
xchg
ret
outsl
imul
inc
mov
lret
aam
cmp
sarb
mov
enter
jmp
out
dec
fnstenv
jae
jae
mov
lods
jne
ja
cmp
imul
xchg
test
fildll
mov
cld
test
imul
push
mov
lcall
adc
cmpsb
insb
outsl
xor
xchg
xchg
mulb
pop
aam
sti
sub
inc
mov
xor
sub
outsb
push
stc
nop
push
jbe
jecxz
mov
cmp
ja
and
loop
pop
lods
rcl
adc
jl
mov
ret
mov
xor
pop
jnp
dec
nop/reserved
popf
jbe
adc
into
xchg
mov
cld
push
pushf
out
inc
fstpl
xchg
test
xchg
xchg
aam
es
fmuls
das
jge
jo
popf
lcall
pop
or
scas
xchg
push
cmp
mov
sbb
jle
inc
dec
and
les
and
int
add
sarb
sub
aaa
das
in
jae
dec
sub
push
aaa
sub
mov
shlb
inc
xor
xlat
pop
popf
cmpsb
in
mov
jg
andb
jecxz
push
push
sbb
nop
ljmp
xchg
stos
inc
inc
mov
adcb
and
lods
in
mov
ret
negl
pop
add
test
mov
aad
mov
test
outsl
sub
push
sub
and
fdivrs
push
add
jmp
data16
shll
fsubs
mov
cmpsb
sub
ds
in
add
imul
sahf
leave
add
xchg
gs
mov
add
cs
sbb
cmp
dec
rcrb
push
mov
sbb
enter
push
mov
jecxz
jmp
sbbb
es
sub
adc
cmp
jmp
rorl
enter
adc
pushf
int
dec
fdivrl
iret
mov
lock
fadd
cmp
jo
ret
sbb
imul
lret
sub
les
xchg
add
inc
sbb
push
loope
nop
into
ja
or
xor
into
insb
cmpsb
dec
cmp
xchg
nop
push
jne
negb
out
or
dec
repz
lret
push
sbb
outsl
fsubrl
jne
or
mov
push
repz
test
rcll
cmc
push
std
repz
jmp
sahf
mov
addr16
es
xchg
mov
nop
loop
dec
jns
cmpsb
xor
gs
sub
adc
cmp
aas
inc
decl
lfs
jecxz
test
push
aad
push
cmp
into
fwait
repz
ja
gs
jbe
add
adc
and
fisttps
inc
pop
mov
into
mov
es
dec
bound
pop
jne
or
sub
xchg
jae
push
xor
push
int
push
lock
cmpsl
out
loope
xchg
mov
vpaddusb
jl
push
jne
pop
je
shll
mov
es
out
add
shr
jl
movsl
mov
jle
sahf
jbe
pop
insb
lcall
push
lods
rcrl
cmc
mov
jecxz
daa
dec
lret
dec
push
and
lock
adc
roll
stos
dec
nop
xor
icebp
je
arpl
mov
jne
ret
cmp
je
mov
push
and
aaa
pop
arpl
dec
mov
test
mov
ret
cmpsb
test
push
ljmp
ss
imul
imul
popa
inc
adc
and
or
out
dec
mov
and
jnp
adc
into
iret
les
popf
out
fmul
pushf
movsb
fcoml
popf
nop
fimull
or
mov
lcall
push
lods
sbb
dec
aam
jno
or
pop
cmp
push
inc
or
pop
movsl
rorl
adc
aaa
or
lods
and
add
inc
loop
cmpsb
ret
lahf
fs
fmull
std
pop
sbb
ja
mov
sub
lcall
xor
pop
and
imul
outsl
daa
lods
lea
pop
pushf
jl
cld
mov
loopne
mov
cmp
dec
sar
mov
cld
xchg
pop
shlb
popa
xor
mov
xchg
xor
in
fwait
jp
sbb
es
xor
add
movb
les
lock
pop
mov
pop
cmpsl
sbb
icebp
hlt
int
int
loope
shll
mov
jp
pop
mov
popf
xlat
sub
mov
adc
mov
push
xchg
sub
and
inc
mov
push
imul
push
xor
adc
add
test
mov
pop
push
ror
xor
and
xor
pusha
cld
xchg
xchg
ss
stos
mov
xchg
aad
mov
cmp
test
sbb
push
add
jne
mov
insl
sub
sti
sub
push
cmpsl
jb
pusha
imul
xchg
inc
lret
adc
dec
jecxz
rcrl
fdivrs
in
adc
or
ljmp
bound
test
mov
mov
movsb
xlat
xor
out
in
jns
hlt
sub
xchg
adc
fs
imul
xchg
loope
sti
lret
addr16
movb
or
mov
xchg
ror
js
push
xchg
mov
adc
icebp
fisubrs
mov
rcr
int
push
jle
xlat
je
sbb
lods
sahf
test
daa
cmp
xchg
lock
inc
sbb
jae
ds
in
ret
push
add
jl
jnp
aaa
mov
mov
or
add
pushf
scas
test
sarb
and
pop
iret
pop
bound
lret
adc
out
cmp
or
push
orb
add
out
mov
xchg
daa
mov
adc
push
es
mov
nop
xchg
out
sbb
leave
sbb
pop
lods
cs
addl
out
xchg
push
es
aaa
or
int3
jo
inc
dec
mov
mov
push
inc
and
jne
mov
adc
pop
add
sbb
idivl
mov
inc
push
mov
cmp
xlat
movsl
pop
xor
mov
stos
ret
cwtl
pushf
inc
cltd
and
jmp
pop
daa
pop
and
jb
jnp
jge
push
jl
test
loope
jp
cmp
shl
and
sahf
cmp
iret
addr16
dec
pop
rcr
ret
fisubrs
orl
dec
fldenv
dec
test
xchg
pop
std
jo
dec
push
pop
icebp
fimull
xor
cld
iret
adc
jl
xchg
jae
int
or
int3
mov
sbb
mov
pop
fnstsw
pop
aam
adc
lcall
lods
fs
lret
cld
outsl
out
cmpsl
bnd
lret
jle
daa
adc
mov
cltd
cmp
push
xor
add
or
pop
mov
sbb
fldl
gs
push
mov
insb
mov
push
push
pusha
int3
aaa
std
std
outsb
xchg
inc
lods
or
cmpsl
out
sub
pop
popa
sub
cwtl
adc
test
sahf
jl
pop
lret
stos
sbb
movsl
dec
outsl
arpl
pop
jg
inc
inc
mov
mov
xor
push
insb
sub
sub
push
push
imul
dec
push
cs
loop
call
jmp
adc
mov
pop
inc
xchg
dec
jb
push
jae
mov
push
or
in
sbb
imul
test
and
jmp
shrl
or
mov
int
add
lock
mov
mov
mov
shll
xchg
fdivr
push
mov
mov
faddl
outsl
outsb
nop
jnp
mov
pop
xor
and
js
mov
inc
push
gs
jmp
push
mov
leave
mov
int
adc
xor
repnz
xor
scas
mov
mov
test
stos
sbb
iret
pop
add
rorl
adc
dec
mov
sbb
adc
scas
mov
mov
add
xlat
pop
or
mov
inc
rcrb
aad
xorb
add
xchg
filds
ffree
sub
inc
outsb
xchg
cmpsb
adc
push
push
rcrl
add
xor
es
sbb
std
xchg
mov
out
xchg
sbb
or
or
push
pushf
imul
in
cmc
mov
dec
xchg
xchg
or
call
testl
inc
icebp
in
call
xchg
les
jnp
daa
imul
dec
ficomps
inc
repnz
pop
outsb
out
xchg
je
adc
and
loopne
xchg
out
xchg
popl
pop
out
insb
hlt
adc
xchg
fstp
add
mov
data16
insb
xchg
xor
mov
sbb
out
test
add
cmp
and
mov
or
mov
cmp
fdivrs
adc
jno
xlat
jbe
mov
fisubrs
das
cmpsl
mov
in
out
xlat
aad
mov
mov
push
ret
xor
mov
xchg
add
sti
sub
xchg
add
ficoms
inc
pop
jmp
dec
jmp
sub
dec
and
fidivs
dec
mov
xchg
sbb
push
fimuls
inc
addr16
mov
push
cs
push
mov
shlb
pop
ja
sub
xor
neg
adc
adc
or
mov
in
mov
inc
rcrl
idivl
mov
repnz
addb
sbb
dec
enter
daa
pop
les
push
push
pop
scas
push
scas
ds
ds
xor
add
xchg
pop
xchg
mov
int3
sub
xchg
rsqrtps
push
hlt
sbb
in
jmp
add
ret
scas
mov
arpl
pop
bound
xor
push
dec
cmp
mov
ja
pop
sti
jg
mov
mov
hlt
jb
call
loop
sahf
pop
fcomip
cltd
shrb
add
in
and
jne
xchg
pop
cmpsl
jbe
xor
mov
pusha
push
insl
adc
xchg
jno
mov
les
mov
cmp
mov
bound
push
arpl
in
shlb
test
inc
sti
mov
mov
push
nop
sbb
loopne
hlt
pusha
pop
movsl
xor
es
mov
jnp
pop
cmp
iret
xor
fstpt
add
ret
fisttpll
iret
mov
jno
sub
notl
dec
adc
in
adc
cmp
scas
pop
inc
jo
sahf
or
mov
inc
sbb
jbe
mov
or
shlb
jecxz
ja
imul
fisubl
cmpsl
stos
enter
sub
das
in
and
pop
mov
scas
lret
jmp
mov
repnz
rcr
lahf
aam
mov
loopne
pop
int3
cmpsl
cld
sbb
enter
aas
out
jg
add
mov
sbb
cmp
iret
adc
or
push
sbb
inc
cld
testl
fildl
push
jne
daa
fwait
js
pop
add
int
or
dec
cmp
inc
fwait
jl
aas
xchg
xor
inc
shl
and
fneni(8087
mov
add
push
sub
clc
inc
mov
nop
inc
lret
mov
insl
pushf
outsb
insb
call
scas
sbb
fisttps
mov
sbb
fstl
clc
push
ret
xchg
inc
popa
in
and
shll
pop
incl
addr16
pusha
lea
jmp
or
into
je
cli
mov
inc
sti
mov
sbb
jle
xchg
in
or
sti
bound
ds
inc
mov
pop
mov
fwait
hlt
adc
push
lahf
or
xor
cmp
mov
cltd
jmp
icebp
jecxz
sub
sub
sub
mov
jo
sbb
incb
pop
pusha
js
out
adc
jmp
fs
test
psrld
leave
jbe
repz
mov
jnp
andb
jge
xor
add
stc
inc
jne
nop
stc
or
call
addl
adc
cli
xor
filds
add
jecxz
xchg
ret
enter
aas
dec
nop
push
dec
sub
sbb
stc
das
adc
repnz
sbb
mov
das
mov
cmp
clc
push
lret
loop
mov
push
int
pushl
cmp
push
mov
mov
jge
pusha
pusha
int
xor
adc
stos
pop
cmp
aad
add
and
std
nop
je
jmp
hlt
mov
push
cwtl
insb
js
or
out
inc
daa
cmpb
outsl
ljmp
sub
cmp
xchg
repnz
dec
mov
pop
bound
js
loop
mov
fists
or
stc
adc
lcall
or
test
dec
mov
pop
fucom
adc
popf
outsw
dec
adc
pop
cmp
adc
mov
xor
mov
sbb
sub
pop
out
mov
add
stc
inc
push
or
pop
notl
lret
mov
movsb
outsl
loopne
jo
xchg
mov
or
rcl
pop
or
mov
sarl
dec
ds
push
dec
or
rcl
jle
aaa
cmp
sbb
jo
push
insb
lahf
pop
sbb
pushf
nop
loopne
hlt
scas
jmp
dec
sti
imul
leave
sbb
and
jb
xor
inc
dec
decb
test
lret
cmc
push
clc
inc
cmp
xchg
test
cmp
lea
loope
adc
or
and
pop
jg
mov
popa
and
xchg
aam
std
xchg
jecxz
push
int3
popf
sub
daa
xchg
sahf
lods
incb
sub
das
sbb
stos
rclb
cmp
push
fwait
mov
in
lds
pop
outsl
and
mov
inc
cmp
aam
in
or
adc
cmp
xchg
jge
jmp
xor
mov
adc
pop
out
loopne
leave
pop
mov
and
call
daa
push
iret
addr16
and
std
mov
push
push
fidivl
sbb
pop
fbstp
add
repnz
repz
std
hlt
add
mov
fisttpll
jbe
insb
add
in
gs
pop
sahf
jnp
dec
out
or
data16
cmc
mov
js
jg
dec
jo
ljmp
cmp
lds
in
sti
mov
aas
div
mov
push
mov
or
fwait
inc
jns
jnp
imul
or
enter
out
fstl
mov
sbb
scas
das
iret
std
int3
stos
out
insl
stc
in
push
cmp
mov
jge
dec
adc
out
bswap
mov
sbb
sbb
jge
jge
and
loope,pt
jmp
jnp
adc
jecxz
sti
lahf
xchg
scas
lds
xchg
aas
ljmp
or
fldt
hlt
add
add
aas
push
cld
out
xchg
cmc
pop
std
pop
aas
push
inc
pusha
xchg
xorb
xchg
jge
test
pop
call
cmpsb
das
ffree
jge
fdivrp
sub
fucomip
xchg
xlat
out
das
adc
cmc
lods
jl
jge
sbb
std
mov
es
push
xlat
add
dec
sub
lock
cmp
inc
div
stos
and
lahf
sahf
nop
add
jae
push
jns
cli
jnp
sbb
sbb
mov
out
rcrl
cld
sahf
push
rcr
out
or
iret
icebp
out
fistpll
andb
mov
push
pop
pop
or
insb
sahf
mov
clc
outsl
cmp
pushf
sbb
xchg
xchg
push
pop
imul
mov
cmc
sti
hlt
idivl
ficompl
lods
dec
repz
mov
pop
movsl
ja
xchg
gs
jp
aam
out
int
cld
or
incl
shrb
pop
in
sarl
jge
sbb
iret
into
pusha
dec
pmaxsw
outsb
push
inc
mov
repz
loopne
fsubrp
loope
das
mov
into
pop
into
sub
jns
add
or
lret
cmp
mov
cmp
and
fnstsw
xorl
adc
int
das
and
or
les
fiaddl
in
aas
push
adc
xchg
sti
fcmovbe
out
leave
fcmovne
push
in
cmp
sti
movsl
pop
outsl
lock
cmp
pop
aam
jg
push
repz
js
mov
ffreep
ret
cwtl
aas
dec
pop
data16
idiv
scas
mov
add
mov
jmp
xchg
xchg
push
out
fdivs
jnp
inc
inc
lods
cwtl
subl
repz
paddsb
mov
out
xchg
loop
loope
sub
shrb
xlat
cmp
in
imul
mov
rcr
adc
scas
and
loop
js
call
shrb
mov
ror
sbb
test
jp
hlt
xor
pop
mov
fidivl
int
fidivl
sub
iret
dec
test
decb
ljmp
cld
fdecstp
inc
xchg
rcrl
xor
add
das
pusha
pop
paddw
scas
ds
pop
and
es
mov
pop
pop
mov
incb
mov
jp
xor
adc
aam
aaa
mov
rcr
flds
scas
mov
xchg
cs
daa
clc
cmpsl
pop
mov
pslld
stos
aam
bound
push
movl
out
cmc
or
cmp
add
mov
jmp
aas
loopne
addr16
sahf
int
mov
std
pop
dec
outsb
mov
or
test
mov
testl
or
addr16
cmp
jmp
lret
adc
fwait
scas
vcvtsi2ssl
cmp
add
xchg
cld
push
pop
aas
imul
xchg
sti
cmc
mov
jae
lods
add
jg
xchg
ret
pop
repz
call
daa
mov
sbb
scas
ficompl
mov
sbb
jl
cli
icebp
jbe
ljmp
xchg
add
clc
shlb
mov
js
cmpsb
test
mov
xor
in
cmc
or
push
ret
je
call
lret
sti
jns
dec
adc
sbb
add
pop
in
push
or
push
cmp
test
rcr
pop
jae
icebp
sbb
cmp
push
in
push
fisubrl
loopne
repz
iret
push
cltd
js
loopne
sti
call
lods
fucomi
inc
sbb
xlat
les
imul
clc
aas
loopne
add
call
inc
call
pop
lahf
insl
dec
rorl
or
add
jg
and
dec
in
jnp
jl
cmp
aas
pushf
mov
ret
sub
mov
xor
mov
or
push
push
mov
mov
xchg
xorb
push
loopne
push
fcompl
call
je
and
sub
sub
jns
je
inc
sarb
add
push
xor
mov
popf
out
gs
cmpsl
sub
ljmp
mov
push
in
ljmp
nop
test
ljmp
xchg
mov
sub
xchg
adcb
push
push
sub
push
sbbb
push
push
faddl
mov
stos
sub
jns
xchg
fsubrl
iret
mov
stc
test
out
mov
fisttpl
fsubl
dec
cmp
sbb
aaa
data16
xchg
mov
fldcw
cli
fsubl
das
mov
lret
sub
sbb
adc
arpl
cli
pusha
fdivl
ja
fists
test
dec
fstl
lahf
das
loopne
imul
jp
cwtl
push
ss
and
scas
cld
shlb
loopne
loopne
mov
fisttpll
fstl
push
pusha
mov
out
fiaddl
insl
adc
pop
popf
fiadds
stos
ja
dec
jle
dec
push
out
pop
add
sbb
xor
es
and
loop
xchg
lods
ss
jp
stos
sbb
repnz
push
iret
push
adc
adc
or
mov
sbb
cmpl
jp
add
aam
and
jp
sub
fiadds
out
xchg
dec
mov
and
daa
mov
nop
xchg
ja
jp
mov
scas
mov
cmc
adc
inc
adc
mov
lds
mov
addr16
cmpb
fidivrs
ret
xor
mov
ja
adc
push
repz
jg
sarb
pushf
cmp
pusha
cmp
mov
pop
stc
icebp
stos
fdivp
in
stos
mov
dec
rcr
sti
in
mov
shll
lret
fnstsw
call
lahf
mov
sar
fisubl
cli
sub
es
orb
lock
ljmp
flds
cs
subl
lcall
xchg
xlat
loop
rcll
sarl
aas
adc
jle
xchg
test
div
mov
nop
scas
or
jns
jle
sbb
incb
cmp
mov
std
cmp
imul
jp
push
jnp
iret
jmp
enter
xchg
adc
mov
pop
int3
add
mov
movsb
rcrl
sbbb
inc
addr16
into
mov
pop
inc
pop
jecxz
cmp
flds
lods
lcall
push
fistpll
xchg
mov
jno
sub
mov
repz
in
nop
jo
mov
aas
dec
repz
mov
loope
insb
rcrl
lea
or
decl
and
call
mov
jbe
je
imul
jg
xor
aam
shl
mov
dec
aad
adc
adc
notb
or
sub
sahf
dec
cmpsb
mov
lea
xchg
cmp
xor
dec
icebp
cwtl
fsts
incb
call
jp
cmpsb
pop
gs
mov
js
cmp
jg
sub
enter
sbb
jbe
cmp
push
fdiv
leave
xorl
xor
aas
sti
loop
in
pop
sub
rcrl
insb
add
imul
es
repnz
rclb
cli
jae
jl
jno
xchg
imul
imul
rcl
add
jl
jae
lcall
jle
aad
jno
adc
incl
xchg
adc
jge
sub
dec
paddsw
sub
shlb
jns
loope
pop
mov
or
ror
scas
fs
bnd
sbb
in
subb
mov
lds
roll
jecxz
pop
and
repnz
and
imul
push
test
cmp
lcall
xchg
out
out
loopne
mov
cmc
sbb
fldenv
fidivl
jmp
mov
inc
lds
xchg
out
movsb
inc
mov
sub
dec
pop
xchg
sti
mov
add
repz
cmp
add
xlat
test
cmpb
inc
outsb
arpl
scas
mov
or
push
sbbb
inc
adc
or
or
fimuls
dec
ret
xchg
enter
pop
out
stos
and
ret
jle
jg
sbb
shl
lret
push
pop
mov
dec
nop
out
cmp
mov
test
xor
in
fsubp
add
repz
rolb
jae
jns
mov
xchg
and
mov
sub
pop
pop
or
dec
das
mov
ds
loopne
adc
icebp
popa
sbb
mov
or
ficoms
ja
add
je
xchg
sbb
fbld
in
mov
shll
or
out
mov
repz
ds
aam
jo
mov
mov
lock
loopne
imul
sbb
vpinsrw
nop
outsl
je
jne
inc
mov
lahf
ljmp
dec
add
pusha
mov
lahf
mov
daa
fcoml
ret
rcrl
ret
pop
mov
mov
sbb
imul
pop
out
ss
scas
loopne
rorb
das
fdivp
pop
in
jo
and
out
imul
sbb
jle
sbb
in
lods
adc
sub
cmc
icebp
add
imul
jmp
icebp
pop
inc
out
jg
repnz
ficomps
sbb
and
add
ds
int
add
push
lods
cmpsb
mov
loop
subl
sbb
dec
mov
jecxz
adc
js
push
in
mov
push
push
js
fwait
cmp
push
repz
mov
jnp
sarl
mov
fiadds
or
push
test
fmuls
adc
dec
mov
cmp
sahf
cmpsl
lahf
arpl
ret
push
ficoms
mov
push
push
call
xchg
lock
test
das
xchg
mov
mov
pop
je
cmp
cmp
jle
std
movsl
xchg
lock
jo
sub
adc
jg
and
icebp
push
xlat
jle
fwait
call
lahf
adc
mov
push
inc
adc
nop
jge
pop
xor
pop
jge
movsb
inc
xchg
or
sahf
sahf
js
or
add
adc
and
cmp
scas
cmc
scas
and
in
sbb
sahf
mov
adcb
cltd
xchg
mov
push
xchg
mov
idiv
push
inc
movb
pop
shlb
and
jmp
push
imul
add
sub
xor
and
and
je
xor
adc
filds
nop
imul
inc
mov
cld
mov
outsb
or
xchg
adc
pop
push
repnz
add
pop
cmpsb
das
jno
ret
push
sub
fwait
aam
dec
scas
cld
divl
cli
push
jl
mov
mov
insl
mov
call
and
pop
jmp
lcall
out
in
or
add
in
mov
cmpl
xor
fptan
and
cmc
cmpsl
mov
fistpl
jle
lock
pop
shr
pop
push
std
stos
jb
mov
call
ljmp
cwtl
out
push
xor
jg
shl
rol
lds
pop
outsl
sbb
popa
mov
movsl
stc
lods
xlat
or
dec
jns
mov
jns
cmp
add
mov
xchg
cmp
mov
mov
in
adc
cmp
sbb
cmp
jae
mov
cli
ror
xchg
inc
cmc
mov
xor
dec
loopne
aas
and
imul
fwait
xor
add
sbb
xor
filds
out
ret
lret
cltd
jge
jge
pop
push
push
inc
mov
mov
mov
dec
mov
add
in
outsl
and
lcall
dec
mov
stc
hlt
das
and
cmpb
les
pop
cmp
jb
sbb
mov
test
call
push
push
pop
push
adc
pushf
add
pop
jmp
cli
and
les
mov
ret
shrb
addr16
xchg
sbb
rcl
loopne
jle
cmp
pop
xor
or
imul
jmp
f2xm1
ret
inc
fistl
bound
push
test
and
shlb
xchg
inc
or
cmc
adc
cmp
xchg
je
test
mov
leave
int3
or
fwait
mov
cmp
push
lret
call
shl
ficoms
mov
sub
and
lods
imulb
mov
pop
inc
adc
mov
cmp
sbb
test
fwait
jnp
cmp
xor
loop,pn
mov
or
xchg
sbb
push
lods
orl
lcall
es
aaa
int
loop
cld
mov
in
mov
test
pop
sbb
jge
jmp
test
fmull
mov
adc
negb
add
lods
or
pop
sahf
or
pop
sub
sub
jnp
xor
dec
mov
les
std
daa
adc
adc
push
js
or
imul
ret
out
ds
dec
cmpsb
pop
xor
pushf
adc
in
mov
nop
aas
sub
je
pusha
lods
push
shlb
mov
jb
sbb
and
ljmp
mov
jl
inc
inc
dec
sbb
mov
ja
cld
push
sub
inc
movsb
xlat
lret
xlat
or
adc
repnz
inc
mov
inc
outsl
sahf
inc
in
push
out
xchg
sub
add
add
sbb
addr16
fldenv
cwtl
mov
nop
lds
inc
or
inc
cmpsb
push
add
insl
stos
ds
cmp
lock
pusha
jecxz
adc
and
jmpw
inc
repnz
sub
les
dec
sbb
fisubrl
fsubrp
ror
mov
xlat
aaa
inc
add
lea
inc
sub
push
ds
in
add
call
pop
dec
shll
dec
sbb
aaa
sarb
adc
outsb
adc
xchg
xchg
clc
sbb
jo
pop
int3
mov
sub
mov
icebp
lahf
xchg
icebp
outsl
fs
hlt
fisubs
js
adc
mov
add
mov
lods
and
dec
loopne
and
mov
test
sbb
lea
push
adc
xor
adc
aam
cmc
add
xor
mov
inc
test
mov
push
js
push
and
adc
loop
icebp
shll
mov
adc
add
mov
mov
std
incb
pop
int3
jns
lret
mov
lret
pop
ljmp
sbb
lock
das
incl
test
iret
jns
cmp
fstpt
icebp
ja
sbb
call
outsb
ja
sbb
pop
or
jle
mov
or
das
xor
fwait
adc
adc
in
mov
add
sbb
js
je
push
mov
xor
add
loope
pop
ljmp
jge
adc
or
test
mov
ljmp
sub
std
dec
xchg
jae
sbb
clc
pushf
sub
cmp
adc
mov
dec
adc
xchg
mov
or
jmp
adc
outsb
cld
aaa
lds
das
jb
cmpsl
cmpsb
je
adc
ret
popf
xor
mov
add
mov
jb
or
pop
add
add
add
popa
out
cmp
dec
mov
mov
aam
push
sbb
cmp
mov
fdivrl
pushl
cld
xor
test
fwait
sub
rorl
lahf
lcall
push
push
jmp
or
adc
xor
inc
xchg
add
pop
mov
push
inc
push
into
clc
addl
pusha
xchg
pop
adcl
out
test
mov
push
outsl
stos
adc
das
dec
test
xorb
ret
push
xor
cmpsb
les
test
jl
jl
xchg
add
pop
jns
xchg
push
and
jb
and
add
and
cmp
mov
shlb
rol
sti
js
push
ja
pop
push
and
bnd
fsubrl
add
pop
repz
adc
cmpsl
push
xchg
loop
std
cltd
mov
jno
push
sub
out
adc
add
jo
ficoms
clc
sbb
in
sbb
cli
xor
nop
jmp
ret
andb
push
pop
insb
fs
pushf
stc
sti
mov
addr16
outsb
je
test
pop
insb
add
imul
mov
inc
mov
addb
xor
or
shl
dec
mov
mov
mulb
je
mov
fidivl
movsb
add
dec
inc
jg
jbe
daa
add
mov
inc
cmpsb
jl
cmp
xchg
xlat
xor
adc
bnd
imul
cli
clc
mov
cmp
add
aaa
sub
cld
add
mov
mov
cmp
push
push
roll
inc
xor
cmp
mov
jnp
push
inc
xlat
xchg
mov
pop
and
add
aam
jp
idiv
clc
test
cs
adc
out
cmp
test
je
xchg
jno
or
out
adc
mov
jns
icebp
in
xor
imul
inc
and
xor
lret
shl
lahf
inc
sub
jnp
sbb
call
ds
cmc
les
mov
imul
sti
adc
out
or
cmpsb
pusha
cwtl
sti
pop
into
fld
repz
inc
jmp
mov
jecxz
loope
pop
sbb
push
insl
sbb
sbb
adc
out
or
icebp
adc
es
aas
test
stos
mov
adcb
and
loope
fiadds
rep
add
popl
mov
filds
cmc
mov
fidivl
push
sbb
push
popa
mov
movb
cmp
sbbl
sbb
adc
shrb
loope
rcrb
add
mov
out
and
int
repnz
loopne
icebp
ja
adc
cmc
dec
add
adc
jg
adc
cmp
sbb
outsl
pop
adc
jecxz
cld
cmp
pop
xlat
stos
andb
repz
jno
test
lahf
icebp
mov
push
jmp
imul
mov
push
stc
test
inc
pop
cmc
sub
xchg
jecxz
les
mov
in
mov
or
mov
mov
cmpsb
outsb
movsl
fldt
xor
xor
jmp
cmp
cld
jecxz
enter
adc
inc
pop
pusha
sti
adc
cltd
or
es
inc
ret
cmp
out
mov
movsl
out
int3
sbb
aaa
fcmovb
stc
enter
dec
dec
xchg
shlb
jns
pop
std
dec
pop
cltd
cmpps
jle
push
ja
and
stos
cmp
or
call
icebp
dec
xchg
add
scas
test
loop
and
std
xchg
adc
pop
mov
ret
dec
aaa
rolb
and
inc
mov
cmp
insl
jb
shlb
testb
adc
inc
mov
std
push
inc
and
dec
add
stc
sub
insb
pop
or
jno
sti
xor
sub
ret
adc
mov
rclb
jo
leave
movsb
aas
xchg
mov
pop
inc
or
pop
xchg
mov
pop
hlt
in
ret
push
sub
cli
mov
and
or
inc
arpl
mov
cmp
inc
movsb
push
ret
js
adcb
popf
pop
insl
or
or
or
imull
sbb
out
sbb
cli
pop
jns
jb
xchg
pop
imul
sbb
orl
fsts
add
bound
int3
bound
add
and
mov
add
repnz
pop
cmp
sub
push
aad
jecxz
out
jne
and
push
mov
dec
out
mov
xor
mov
dec
aam
add
loop
pushf
add
sar
and
movsl
xchg
add
mov
loop
xchg
or
jp
test
jnp
adc
mov
inc
pop
nop
and
aam
adc
xchg
decl
inc
jl
testl
adc
pop
jns
cli
cli
inc
push
inc
hlt
popf
cmp
pop
cld
fistps
aad
js
dec
sub
das
and
hlt
adc
adc
lahf
ret
out
mov
push
jl
sbb
mov
imul
push
adc
add
pop
loop
pop
and
andl
push
popf
mov
in
cltd
jne
pop
icebp
adc
and
cmpl
mov
loop
imul
sti
push
jg
fistpll
push
jge
aad
dec
mov
ja
lds
mov
mov
push
push
and
mov
mov
add
inc
and
popa
cli
aam
addr16
mov
mov
scas
pop
fidivl
repz
add
shrl
mov
hlt
sub
jo
and
outsb
scas
dec
mov
lds
push
cmpsl
pop
insb
cmp
pop
jb
sahf
clc
pop
ret
sbb
jo
enter
push
jae
mov
mov
jg
icebp
or
cld
mov
fs
decb
dec
js
lcall
xor
pop
fwait
orb
adc
xchg
add
in
cmpsb
scas
mov
and
jae
mov
xor
push
jle
jo
mov
addb
arpl
jle
push
ja
bound
out
cmc
into
lock
shrb
jmp
test
ds
inc
push
xor
xlat
dec
mov
mov
or
pop
mov
js
mov
add
add
push
and
movsb
xchg
ror
jl
cmp
inc
inc
shll
hlt
xor
lahf
lods
aas
xchg
adc
mov
add
xchg
cmp
popf
pop
mov
int3
popl
cmc
fneni(8087
jecxz
xchg
and
repz
das
out
mov
adc
add
out
cmp
jmp
xor
push
cmp
movsl
sbb
sub
xchg
in
insl
sbb
out
int3
aaa
jnp
mov
jo
popa
cld
push
je
jno
xor
push
inc
pop
sbbb
sti
iret
adc
out
mov
mov
mov
mov
mov
xor
lock
cmp
push
repnz
je
push
jns
cmpsl
outsb
mov
cld
test
jnp
mov
cmp
cmc
push
adc
adc
lods
inc
repz
bound
fdivrp
cwtl
or
mov
pusha
and
ret
call
sbb
hlt
fwait
inc
add
cmp
lret
cmp
push
das
daa
pop
push
les
mov
decb
push
stos
jecxz
xor
stc
lahf
jge
mov
adc
cmp
jle
outsl
jl
icebp
js
sbb
scas
insl
movsl
inc
push
repnz
mov
or
outsl
mov
test
sti
mov
sbbb
mov
out
and
cmp
cmpsl
inc
pop
sbbl
cmp
ret
dec
add
nop
and
ret
std
nop
cmpsb
imul
outsb
jnp
jno
pop
dec
shll
or
insb
dec
addl
sbb
pop
jp
xor
int
fs
cmp
popf
add
lock
mov
ja
test
mov
jo
sbb
adc
cmpsb
fwait
lds
lds
or
mov
dec
dec
aam
ljmp
call
sub
repz
outsb
add
push
push
in
mov
jnp
inc
test
inc
jg
bound
test
sbbl
subb
pusha
mov
loope
stos
sub
add
sbb
jecxz
pop
fdivs
call
push
jp
adc
sbb
dec
in
or
push
icebp
leave
add
add
inc
shl
lds
mov
imull
sbb
push
insb
test
push
push
idivb
fsubr
in
jle
lods
adc
fs
loop
inc
or
and
mov
jp
mov
cmp
push
pushl
loop
xchg
jge
inc
push
xchg
cwtl
pop
xchg
orb
jl
sbb
add
and
filds
adc
xor
mov
in
push
or
or
mov
popa
jle
add
jmp
add
repz
xchg
xchg
pop
outsb
leave
test
xchg
dec
mov
fidivs
addr16
ljmp
les
ja
fwait
mov
leave
sar
bswap
adc
sbb
jno
repnz
adc
dec
cmpsb
sub
cmc
insl
sarl
dec
js
outsl
and
stos
xlat
sbb
out
and
std
rcrl
jne
fs
mov
inc
mov
into
cmp
dec
mov
adc
bound
jmp
aaa
mov
dec
int
lea
test
xchg
dec
addr16
sahf
outsl
and
xor
mov
fs
mov
and
cmp
jl
lds
xor
push
leave
mov
adc
pop
movsl
pop
inc
xchg
jbe
je
jno
xchg
fdivrs
out
inc
out
testl
adc
das
mov
sarb
pop
ds
test
cs
sbb
iret
test
cmp
push
out
sbb
sub
fistpll
js
jl
insl
fsubr
insb
insl
sbb
sub
nop
lds
push
mov
lods
jl,pt
inc
call
fwait
sarb
hlt
add
in
aas
dec
int3
fistps
int
cli
cs
cltd
xchg
ss
inc
and
xor
push
pushf
sahf
pop
cmp
ljmp
dec
xor
test
xchg
in
std
and
fnsave
and
mov
nop
imul
xchg
xor
adc
in
xor
pushf
add
fscale
cmpsl
mov
mov
sbb
jg
fs
std
cld
loopne
dec
sub
js
jo
or
mov
shrb
or
aas
xor
fdivrp
sbb
jl
ret
push
cmc
jmp
ja
int3
jle
mov
jnp
cmp
call
and
dec
movb
test
xor
cmpsl
popf
mov
mov
fwait
sbb
fwait
sahf
lret
jg
in
outsl
aas
pop
fs
push
cld
dec
ret
push
mov
inc
pop
push
out
ret
mov
adc
pop
push
out
aam
mov
sub
inc
or
xor
aas
pop
in
mov
sbb
fcmovb
insb
lds
outsb
lcall
xor
dec
pop
arpl
in
dec
push
mov
or
xor
cmpsb
adc
mov
jmp
mov
leave
dec
jne
test
add
push
push
add
lds
inc
or
test
push
adc
dec
test
cltd
clc
adc
jne
fsubl
call
div
out
mov
sub
ficoml
mov
jne
mov
jecxz
cmp
imul
fsts
ds
int3
leave
movsl
insb
adc
data16
xor
orb
lret
out
mov
or
js
lcall
cmp
shrb
jle
pop
mov
or
loope
pop
and
fstpl
or
js
xchg
xorl
insb
adc
sbb
cmc
test
adc
sub
arpl
insb
in
aam
mov
mov
fdivl
jne
cltd
pop
test
mov
lcall
dec
mov
and
aad
mov
mov
mov
arpl
test
in
push
dec
add
addr16
inc
sub
rclb
and
sub
jb
cmp
imul
jge
in
iret
sub
cmc
cld
lock
ret
jne
jecxz
dec
out
dec
xchg
sbb
arpl
ja
outsb
es
push
or
sub
loop
loopne
hlt
movb
push
mov
rcl
shlb
xchg
push
out
xor
outsb
insb
outsl
mov
loop
push
dec
push
mov
mov
in
std
arpl
jecxz,pn
push
lea
or
and
push
dec
imull
push
pusha
add
scas
mov
dec
xchg
and
leave
add
xchg
stos
insl
push
jb,pt
cwtl
data16
gs
ficompl
lahf
mov
and
sbb
int
pop
add
aad
mov
mov
mov
dec
xchg
int3
bswap
icebp
xchg
sbb
jo
adc
ret
mov
imul
ret
cltd
mov
mov
mov
popf
sub
imul
jb
loop
xchg
jg
push
cmpsb
sbb
xchg
es
mov
push
mov
data16
or
push
gs
leave
je
in
sarb
sbb
fisubrl
and
dec
insb
leave
jnp
push
push
mov
subl
or
call
sysret
inc
dec
shrl
sarb
int3
jns
mov
dec
es
dec
pop
jno
rcrb
pop
ret
add
and
mov
fsubrs
sahf
cmpsl
and
and
cmpl
push
out
xchg
xchg
inc
mov
mov
cwtl
mov
stos
hlt
push
popf
push
or
movb
popa
mov
or
xchg
or
mov
stos
jmp
popf
cltd
mov
mov
jnp
fsubr
jbe
bound
pop
fldcw
rep
aam
xchg
push
mov
mov
pop
xor
xchg
nop
dec
jae
mov
add
adc
xor
cltd
push
ljmp
mov
cmp
es
mov
insl
insl
out
inc
adc
dec
add
or
and
push
iret
sbb
and
cmp
jle
jg
pushf
push
mov
mov
std
push
fidivs
pop
and
xor
mov
push
sub
pop
or
cmp
mov
fadd
arpl
subl
popa
jae
sahf
xchg
add
sub
pushf
mov
imul
sbb
lds
push
add
xor
popf
xchg
cwtl
mov
mov
in
adc
ficomps
dec
test
fcmovb
mov
jge
jecxz
inc
test
dec
xlat
rorb
mov
fdivrs
jb
mov
cmp
in
test
bound
push
mov
jecxz
xor
popa
push
mov
lods
out
and
sarl
xor
push
adc
iret
cltd
adc
dec
in
in
clc
aad
xchg
les
rorb
outsb
xchg
inc
jp
outsb
mov
jge
xlat
shll
xchg
test
xor
sahf
sbb
cmpsl
push
mov
sbb
cmp
inc
adc
push
jns
push
nop
fildl
test
cld
xchg
dec
in
push
and
pop
xor
add
push
cs
mov
mov
push
dec
dec
mov
rcrl
fildl
in
pop
sub
mov
out
lret
sbb
pop
mov
add
sbb
shlb
mov
push
fimuls
push
cmc
jbe
aad
mov
lret
sbb
out
cmpsb
or
daa
jae
cmp
jo
cmpsb
dec
scas
movsb
xor
mov
gs
mov
out
push
add
or
inc
add
fmul
jmp
jecxz
mov
dec
push
mov
xchg
xor
jmp
lret
inc
test
pop
sub
ss
pop
jle
jl
lret
and
mov
test
mov
mov
mov
push
sti
fwait
adc
push
rolb
cwtl
push
mov
push
fnsave
popf
je
movsb
cs
add
cmp
inc
xor
pop
push
mov
fisubl
nop
xchg
mov
cmc
aaa
gs
sbb
repz
inc
adc
pop
pop
fsubs
xor
push
lcall
mov
ficoml
popf
fiadds
jge
sub
adc
pop
nop
push
les
cmpsl
iret
push
xor
pop
mov
scas
or
sbb
cmp
cmp
or
cmpl
pop
and
mov
adc
in
mov
ljmp
ror
ss
sbb
push
gs
push
xor
sub
push
fmulp
fldt
in
mov
popf
xchg
cs
fldcw
pop
jecxz
outsl
in
mov
xor
stos
cmp
sbb
fadds
in
std
fisubs
dec
jno
loope
jle
iret
fisttps
jge
or
insl
mov
stos
xor
sub
mov
mov
lahf
mov
ja
sbbb
push
sti
or
or
push
rcrb
lcall
pop
push
sub
cs
sbb
aad
cmc
mov
stc
xchg
push
mov
pop
mull
mov
test
nop
jne
jge
pop
sub
mov
and
pop
sub
out
adc
daa
mov
test
cwtl
cs
adc
popa
mov
int3
nop
ds
push
pop
sbbl
or
lahf
cmp
adc
mov
fsub
mov
shrl
test
jo
es
insb
xchg
inc
out
xchg
pop
iret
cwtl
stos
rclb
push
leave
out
ljmp
push
sub
or
inc
push
inc
mov
and
xor
dec
push
fwait
in
fisubrl
stc
sub
jmp
sub
sub
mov
stos
push
xor
sub
je
and
pop
push
sbb
xchg
iret
adc
dec
xor
cmpb
fwait
or
xor
xchg
xor
je
mov
aad
adc
fwait
jno
mov
jne
xor
adc
dec
cmp
mov
sub
jae
test
cmp
scas
inc
xchg
fs
push
xor
mov
ret
and
test
fsubrs
insb
lret
adc
xchg
cmp
pop
ds
test
pop
dec
icebp
cmp
push
in
int3
lods
mov
out
data16
pop
cmpsl
gs
imul
shl
push
xchg
xor
inc
pop
gs
ss
cmc
jae
cld
cmc
pop
add
sbb
xchg
mov
pop
sub
mov
lods
mov
push
stos
push
int3
and
push
sbb
jp
pushf
pop
push
push
cld
jge
mov
dec
rol
push
dec
and
jecxz
jne
cmpsb
test
mov
dec
dec
out
daa
push
jmp
push
and
pop
jns
repz
sub
push
inc
lret
add
jl
movsl
push
insl
shrb
ds
mov
rorl
jbe
stos
xor
add
fsubrp
push
xchg
imul
imull
cwtl
or
scas
adc
xchg
mov
mov
and
cmp
inc
movsb
jecxz
je
ficoms
arpl
mov
frstor
fstl
push
and
push
sbb
inc
cmpsl
push
stos
pop
push
cmp
adc
pusha
popf
insb
outsl
and
adc
fcomp
mov
insl
xchg
sub
int
mov
test
sbbl
int3
or
dec
hlt
inc
cmpsb
push
cli
add
leave
int3
icebp
or
xchg
xchg
xchg
ss
xchg
add
mov
jg
xor
push
aam
cmc
adc
xor
and
xchg
cld
loope
sar
mov
icebp
cmp
sub
loop
cmp
mov
ljmp
mov
mov
sbb
push
xchg
sub
and
test
jns
jecxz
les
out
dec
dec
push
xchg
pop
and
lret
shld
and
mov
sahf
iret
ret
lret
pop
xchg
repz
outsl
les
pusha
inc
push
mov
ljmp
mov
cmp
adc
lods
push
std
jns
sub
pop
xchg
out
cli
jl
push
mov
mov
xchg
leave
xchg
daa
scas
and
mov
mov
dec
jns
int3
pop
outsb
negl
fs
dec
adcb
fs
out
mov
fldcw
sub
lea
lret
lea
mov
popa
cmp
jmp
jp
dec
xor
scas
sbb
sbb
ds
jp
repnz
dec
leave
aam
sub
je
fs
or
js
xchg
stos
out
adc
adc
insb
push
cmovae
rcrl
sbbl
xor
test
push
mov
or
sbb
hlt
fldcw
fnstenv
push
pop
rcr
add
mov
fwait
imul
and
fcom
xchg
jnp
dec
adc
xchg
or
pop
and
dec
xor
dec
repnz
leave
mov
dec
mov
and
fsts
or
xor
mov
cld
and
sbb
sub
or
lods
xor
mov
mov
mov
div
popf
sub
int3
cmp
daa
rcrb
mov
mov
push
sbb
jno
mov
mov
shrb
mov
rcrb
push
or
dec
leave
mov
pop
xor
test
je
and
repnz
pop
popa
pop
cmp
and
fisubrl
int
add
adc
shll
jne
fnstenv
adc
pop
mov
sbbl
in
int3
cmpsb
xchg
imul
sbb
push
jne
or
into
push
push
mov
push
pushf
mov
jmp
dec
jp
jae
mov
pop
mov
in
mov
pusha
mov
push
xchg
cltd
cwtl
push
imul
leave
pop
mov
mov
inc
test
inc
popl
or
dec
repnz
fs
sub
sahf
stos
leave
rcl
pop
scas
mov
sbb
pop
enter
data16
cmc
arpl
push
mov
in
mov
cmpsl
sub
inc
or
sbb
es
je
dec
cmpsb
int
pop
mov
ja
mov
and
pusha
mov
insb
cltd
xor
loope
outsl
push
imul
ljmp
das
push
mov
rcr
lods
es
testl
inc
jns
lds
dec
scas
pop
rclb
add
add
mov
dec
mov
mov
inc
cmp
xor
push
or
test
and
xchg
mov
sbb
push
sub
vcvtsi2sdl
mov
repz
mov
stos
cs
mov
and
sbb
push
mov
cmpsb
push
jb
test
push
std
lahf
adc
or
xlat
inc
sbb
add
cmp
dec
dec
jmp
mov
inc
cmp
dec
outsl
mov
sub
loopne
cmc
xor
jp
loop
scas
shll
mov
mov
xchg
fcmovnb
negb
lret
popf
cli
or
push
dec
inc
loop
clc
lret
and
cwtl
or
push
jno
shl
imul
gs
fsubrl
dec
in
mov
or
xchg
cmpsl
das
fiaddl
and
jae
mov
mov
clc
sarb
fcmove
pop
xchg
push
mov
and
jle
fmul
lahf
jg
aad
cmp
push
popa
lret
mov
aad
pop
push
dec
dec
pop
pop
fldz
mov
pop
pop
mov
dec
jnp
addr16
mov
dec
scas
shl
imul
loope
mov
xor
mov
imul
dec
shr
push
inc
push
rclb
xlat
jae
repnz
aas
lret
xor
aaa
sbb
sub
push
outsl
jle
mov
adc
clc
sarl
repz
push
mov
dec
xor
cmp
mov
xlat
jg
pop
decl
sbb
fnsave
jns
stc
fistps
lahf
sub
lahf
mov
out
jle
daa
pop
cmpsb
out
jno
jmp
addb
adc
out
imul
imul
lods
mov
repz
lretw
mov
sbb
sahf
outsb
and
jmp
jo
test
mov
xor
movsb
jno
cmc
mov
mov
imul
data16
and
out
sbb
int
cmp
lret
loope
lret
jno
icebp
mov
xchg
add
jns
sbb
mov
pushf
int
push
xchg
lods
mov
test
dec
or
inc
cmp
or
fwait
jle
inc
cwtl
or
mov
xor
xor
aad
popa
jl
jmp
pop
roll
lret
lret
jbe
pop
jge
test
jne
push
stos
rol
or
test
push
fldenv
push
push
adc
fldl
xor
cltd
sti
dec
pop
and
test
or
test
push
sub
or
push
dec
fsubrp
cli
xchg
jg
jge
lahf
mov
xchg
jmp
fldt
icebp
cli
ljmp
insb
mov
sbb
cmpsl
lods
pop
dec
daa
mov
push
and
fstps
mov
aas
adc
out
loopne
sbb
pop
xor
fwait
lods
leave
xor
mov
mov
fs
pop
or
or
and
inc
inc
pop
and
stos
xchg
lcall
mov
fildll
mov
icebp
jb
insl
imul
mov
call
lds
dec
imul
adc
jp
pop
stos
push
pop
cmp
sub
lds
xchg
scas
idivl
or
dec
ja
mov
jns
out
lds
push
adc
rcrb
jne
and
outsb
jle
jl
ja
dec
out
test
push
ret
lods
lahf
lahf
rcr
sub
andl
dec
xchg
cmc
xchg
and
jl
xor
mov
push
mov
dec
sbb
sbb
pop
lods
lahf
lcall
scas
xor
test
stos
test
adc
scas
mov
mov
testl
icebp
mov
daa
lea
fpatan
out
jge
int
cs
popf
stos
push
ljmp
mov
fldl
fs
dec
cmpsl
mov
push
jl
xchg
xadd
cs
mov
sbb
mov
xlat
repz
sub
imul
pop
mov
or
inc
pop
out
jb
into
lret
or
xchg
lods
xchg
movsl
aam
ljmp
mulb
icebp
hlt
cmp
fwait
push
sbb
and
mov
std
push
mov
xor
xor
sbb
xor
lret
call
es
sbb
leave
daa
cltd
mov
xor
sub
jp
mov
or
insb
lds
dec
jb
jmp
adc
dec
test
lahf
mov
push
insl
mov
sbb
gs
ret
stos
xchg
inc
test
jle
call
dec
pop
shll
outsl
mov
clc
fildll
popa
cltd
xor
das
pop
sbb
scas
lret
icebp
stos
addr16
test
xchg
imul
jae
imul
push
insl
xchg
add
test
jb
ss
fcmovnbe
push
je
pop
sahf
cmc
mov
xlat
je
cmp
cmpl
outsl
lods
xchg
xchg
mov
addr16
cmp
cltd
dec
lahf
cld
add
lock
mov
pop
mov
fwait
mov
jmp
sbb
xchg
jae
fmull
sbb
mov
bound
inc
movsl
jne
pop
and
clc
insl
dec
ljmp
mov
fsubs
test
mov
mov
jg
fwait
insl
in
lret
jbe
lahf
and
addr16
pusha
push
popf
insb
je
add
movsb
jg
out
int
ljmp
xor
sbb
call
aad
xchg
push
sub
shlb
mov
push
and
jmp
into
mov
jns
movsb
out
popa
push
mov
aam
dec
imul
rcrl
jle
in
outsl
push
xor
cltd
jg
jge
sub
pop
dec
rcr
out
repnz
dec
adc
imul
xlat
sub
jo
inc
push
jmp
xchg
fwait
dec
cs
pop
repz
xor
xlat
adc
pop
aas
cmp
cmp
pop
sub
test
jo
sbb
push
pop
and
ret
enter
jge
stos
cmp
jp
mov
outsl
jae
adc
jge
cmp
push
jl
fcmovnb
mov
stc
and
jnp
xor
mov
pop
arpl
cmc
mov
fs
call
jecxz
mov
loop
dec
scas
std
aaa
mov
push
mov
int3
pop
cltd
lret
mov
dec
cmpsb
pusha
lock
jbe
inc
nop
inc
sahf
stos
xor
mov
xchg
in
cltd
adc
mov
ljmp
fsubrl
mov
sub
lret
add
cs
loop
dec
popa
mov
insb
aaa
mov
lds
shr
lea
xchg
lea
or
jns
ds
push
pop
into
int3
not
sub
subb
lds
movsl
xlat
push
rcrl
inc
mov
test
mov
dec
mov
sbb
rcrl
negb
cmpsl
dec
lds
movsl
adc
push
mov
dec
pop
inc
jno
cmpsl
popa
inc
movsl
cli
mov
ror
xchg
pop
jbe
push
dec
sub
jno
mov
or
sti
orb
mov
mov
xor
xchg
cmpsl
stos
dec
movsl
fsubrs
mov
sarl
sub
push
pop
loopne
das
aam
mov
mov
mov
cmp
mov
fidivl
sbb
fcom
ljmp
adc
jne
clc
rcrb
adc
push
dec
add
xchg
inc
jne
test
push
sub
adc
mov
inc
jae
and
xor
xchg
xor
pushf
xor
jno
xor
adc
cltd
xchg
dec
sbb
xor
pushf
and
mov
ret
and
or
scas
cmpsb
sbb
lods
popa
aad
xor
mov
mov
cmp
add
jns
ljmp
ds
sub
mov
sarb
sbb
loopne
loopne
add
cmp
sbb
pushf
sbb
jg
jno
mov
xchg
jnp
sarb
mov
jg
lock
pushf
add
mov
xor
jg
sbb
push
adc
mov
cs
insl
cmpsl
adc
sbb
fisubs
jae
mov
mov
dec
pop
mov
outsb
or
gs
imulb
sub
jmp
lods
imul
repnz
orb
into
cmp
jmp
pop
adc
mov
cltd
dec
aad
jmp
fmulp
loop
mov
ret
cmp
pop
nop
adc
xchg
cmc
iret
cmpsb
lock
movsl
inc
test
clc
addb
jne
sub
jge
mov
cmp
push
std
jl
mov
mov
mov
cmpsb
std
mov
sbb
sub
mov
cmp
cmp
popa
cli
and
add
adc
pushf
xor
xor
lea
mov
push
popa
adc
inc
mov
into
je
test
mov
pop
test
or
jge
ljmp
add
push
xor
cmp
notl
loop
aaa
je
shll
rorl
popa
fs
cmp
call
adcb
adc
aad
int3
fisttpl
xchg
jmp
sub
mov
lret
push
iret
add
or
xchg
out
aad
cmp
xor
push
sub
sti
pushf
loop
mov
lcall
xorl
sub
cwtl
jp
dec
pop
call
lea
cmp
or
mov
sbb
adc
mov
jnp
cmpsb
push
xchg
push
imul
outsl
cli
mov
das
mov
in
push
xor
imul
hlt
fmuls
enter
sbb
dec
lea
out
or
mov
rolb
push
lods
jecxz
cmp
cmc
icebp
push
fstps
dec
push
das
in
push
mov
fisubs
mov
xor
into
jae
lea
xor
pop
lret
lret
popa
jo
pop
jmp
or
or
test
hlt
cmp
int3
call
les
test
addr16
jp
jmp
push
scas
scas
std
jl
std
xchg
lock
adc
and
jle
sub
mov
gs
push
cmp
in
sub
lahf
and
add
sub
mov
pop
in
les
mov
ret
sub
frstor
fldenv
mov
andl
pushf
inc
mov
idivl
fdivs
mov
out
sub
adc
aad
lahf
jle
push
stos
pushl
pop
lret
out
mov
dec
imul
mov
iret
mov
add
jmp
mov
bnd
mull
jae
add
fdiv
cltd
scas
out
xchg
xchg
fidivl
clc
subb
and
into
sub
jo
pop
inc
mov
push
ret
xor
adc
in
in
pop
pop
repnz
jb
imul
subb
pop
es
out
add
pushf
cmp
stos
movl
and
andb
xchg
push
mov
sub
into
adc
fisttpl
dec
dec
dec
icebp
lcall
pop
fcoml
sarl
jg
aam
fcmove
fisttpll
lea
and
in
xchg
addr16
out
cmc
lock
fistps
xor
mov
sub
mov
cmc
test
out
scas
outsl
js
pop
test
test
cmp
les
xchg
dec
ror
jno
test
in
sub
mov
add
mov
mov
stc
pop
fiadds
icebp
mov
push
div
and
cli
daa
int
push
icebp
imul
push
icebp
mov
out
dec
frstor
xchg
cwtl
adc
add
out
mov
or
push
test
insb
les
mov
ror
jp
in
sbb
imul
in
mov
dec
stc
int3
fidivrl
out
std
xor
les
popa
gs
push
mov
js
pop
cs
insb
aas
pop
ja
or
dec
mov
ljmp
xor
aad
repnz
mov
js
sar
clc
mov
mov
idivb
mov
inc
mov
shll
ljmp
cmc
sub
cwtl
jle
add
out
xchg
call
push
repz
sti
pop
shll
rolb
xchg
stc
jbe
iret
mov
adcb
dec
mov
aas
out
dec
jg
sub
out
out
jecxz,pn
ljmp
lock
adc
push
push
test
mov
mov
add
or
xor
jecxz
sub
ss
inc
push
pop
mov
arpl
pop
and
lea
aam
or
rcrl
xchg
adc
inc
imul
pop
loopne
pop
xor
cmpsb
shll
mov
add
jno
cwtl
jp
inc
sbb
cmc
sub
lret
mov
mov
sub
inc
pop
in
inc
loop
push
addr16
fidivrs
stos
pmulhw
add
inc
out
mov
add
push
pop
lods
scas
nop
pop
cmc
or
inc
imul
or
pusha
mov
stc
cmp
mov
not
and
sub
and
cmp
lea
stos
addb
or
and
popa
dec
sarb
pop
ds
jmp
cmp
test
fwait
cs
out
lahf
repnz
sbb
aaa
insb
aaa
ret
fs
pushf
jp
sbb
mov
pushl
mov
mov
ja
push
fs
outsb
test
rolb
jp
sahf
mov
dec
cmp
mov
and
dec
dec
test
inc
lret
inc
dec
fwait
xor
mov
scas
pop
mov
leave
cmpsb
lock
xchg
cmp
dec
es
sbb
or
mov
icebp
scas
jmp
or
sub
cld
ficoms
mov
cli
testb
test
movsb
insb
test
dec
and
cltd
inc
push
dec
mov
xor
in
mov
movsb
arpl
mov
mov
fcmovu
int
outsl
sahf
xchg
dec
addr16
mov
ret
fsubrs
js
jg
pop
xchg
lret
scas
inc
js
into
xor
out
cwtl
divb
lahf
push
dec
lea
enter
push
dec
pop
addr16
adc
pop
add
imul
add
mov
mov
mov
fucompp
mov
adc
rclb
inc
fiaddl
enter
mov
jno
lcall
cmpsb
cmp
les
xchg
pop
or
and
in
jmp
push
jbe
in
mov
mov
add
test
int
jno
fnstenv
in
pushf
jle
out
or
xor
les
jecxz
jno
mov
sbb
imulb
mov
dec
pop
adc
mov
pop
scas
setbe
addr16
dec
ljmp
push
je
push
hlt
jp
cmp
mov
pop
xorl
aas
ljmp
and
xchg
cwtl
pop
test
js
mov
sub
dec
mov
pop
adc
mov
mov
es
ss
call
pop
lret
jl
push
into
stos
cmp
stos
mov
push
adc
pop
sub
fwait
ror
aam
pusha
mov
jne
pop
pop
mov
lock
xchg
jb
pop
gs
push
add
dec
scas
mov
mov
cmpb
sbb
sbb
sbb
in
mov
pop
pop
fld
or
mov
push
shll
fsub
out
jg
int3
es
sarb
repnz
adc
incb
cltd
enter
fsubrl
fbld
arpl
jl
adc
lcall
insb
shr
xor
daa
xchg
mov
cmp
pop
sahf
push
in
lock
icebp
jle
shl
pop
jo
fdivs
and
lahf
dec
insb
into
andl
push
ss
pop
sub
int3
dec
enter
sub
jo
push
sub
jp
in
mulb
aaa
out
sub
scas
cmp
in
sub
in
enter
rcll
push
in
mov
out
jmp
xchg
test
jno
mov
rcr
loopne
xchg
jp
bound
lahf
hlt
mov
dec
jp
mov
push
stc
sbb
lods
fsubs
jle
les
and
or
in
mov
jae
cmp
lahf
outsb
jo
aam
mov
and
cltd
ljmp
sahf
jno
jb
mov
out
add
dec
inc
jg
inc
xchg
mov
repnz
mul
cmp
lea
dec
xchg
sbb
jno
xchg
sbb
jns
cmp
jno
push
xlat
sahf
nop
imul
popa
jecxz
adc
sbb
data16
in
leave
es
pop
pop
lahf
sub
mov
fldenv
divb
imul
add
in
cli
mov
les
jp
fcmovu
pop
cmc
xor
imul
xor
cmp
pop
cmp
cmpsl
jg
xor
adc
add
movsl
sub
hlt
shl
push
in
cmp
pop
mov
push
xchg
pushf
mov
mov
inc
and
aas
cmp
fbld
mov
push
ror
cmc
mov
dec
adc
pop
fwait
xor
or
cmc
int3
call
ret
daa
out
test
mov
mov
lods
mov
mov
jns
or
mov
push
inc
ja
mov
jb
push
inc
call
pop
out
push
cmp
loop
outsb
out
out
stos
shl
push
mov
mov
testl
setae
pop
jg
pop
and
jno
mov
sbb
mov
cmpsl
push
adc
out
pop
mov
dec
mov
insb
adc
push
test
je
out
or
repz
or
andl
push
cmp
dec
cmp
es
jns
pop
loope
push
aaa
sti
xor
sub
dec
aas
push
jge
push
inc
xchg
mov
idivb
movups
pop
mov
fcmovb
jno
push
mov
xor
sbb
fldt
fistps
sub
cmp
adc
push
mov
xchg
imul
sub
aaa
testb
mov
icebp
sbb
das
jle
js
hlt
ja
xchg
inc
cltd
test
dec
test
mov
sbb
mov
push
mov
mov
or
pop
push
push
es
sbb
scas
mov
or
push
mov
popa
icebp
rcl
in
and
daa
sbb
out
mov
xchg
or
cmp
adc
repnz
pop
dec
pop
icebp
inc
sub
sbb
stc
inc
rcll
push
fsubrp
stc
push
lds
xor
mov
sub
mov
in
inc
sbbb
je
lock
sahf
push
mov
xchg
int3
mov
mov
sub
adc
dec
data16
cmc
stos
lcall
decb
bound
das
sbb
cmc
xchg
mov
imul
xor
jae
aam
jecxz
mov
sbb
daa
push
mov
imul
pop
pop
jae
adc
sub
pop
push
xor
fucomp
lcall
je
inc
sbb
xor
push
dec
ljmp
sub
je
xor
out
es
repnz
adc
pop
mov
jge
popf
lahf
mov
imulb
pop
dec
jg
insb
add
dec
pop
push
into
xor
mov
xchg
orb
inc
arpl
sub
xor
inc
and
mov
sbb
dec
adc
mov
sti
xor
mov
mov
ret
push
sub
pushf
shll
jmp
out
dec
push
shlb
pop
pop
sub
icebp
jmp
test
sti
mov
push
popa
sbb
jb
ficompl
outsl
das
inc
jae
pop
mov
sbb
jb
mov
call
xchg
adc
sub
test
sahf
inc
sldt
sahf
fsin
aam
or
das
in
repnz
stos
mov
mov
rol
aas
adc
and
sti
lahf
loopne
push
xchg
xor
fiadds
push
shr
and
outsl
inc
das
gs
mov
subl
xchg
jmp
add
loopne
lods
jg
jns
push
cmp
out
dec
loope
xlat
push
sbb
fnstcw
scas
gs
lock
inc
lcall
xor
int
ss
enter
mov
mov
hlt
pop
icebp
cmpsb
xchg
es
ret
jbe
std
stos
in
push
jge
push
xorb
pop
inc
add
cmp
cmp
jns
push
adc
dec
sbb
mov
xor
jb
push
fbld
adc
aad
mov
or
mov
fwait
mov
mov
dec
aad
ret
push
sar
sbb
and
mov
sub
cld
jge
and
fiaddl
mov
insl
sbb
inc
xchg
push
mov
mov
dec
testl
adc
fdivrs
je
outsl
out
mov
cmp
decl
aaa
mov
mov
mov
out
idivb
mov
sahf
adc
xchg
pop
pop
cmc
imul
xorl
test
cld
push
lahf
and
pushf
lods
insb
aad
aas
adc
imul
dec
ficompl
ja
loope
loope
pop
fisttpll
mov
pop
jl
mov
dec
jle
cli
sti
pop
sub
xchg
rep
movsb
js
xchg
int3
ret
push
sbb
cli
bound
jp
pop
mov
hlt
jmp
adc
sar
mov
in
xor
data16
inc
sahf
xor
ficoms
xchg
clc
cmp
sbb
scas
push
sti
mov
mov
dec
xabort
cmp
fcompl
icebp
insl
jo
mov
stc
hlt
ja
mov
adc
iret
push
xchg
gs
pop
dec
push
es
repnz
push
or
sub
jno
js
decb
sbb
stos
push
jecxz
or
in
out
sub
ja
mov
mov
xchg
or
gs
and
mov
rcrb
test
pop
cmovge
or
jnp
lcall
xchg
jecxz
sti
mov
call
inc
fwait
clc
mov
lea
mov
sub
ret
adc
and
sbbb
ss
call
jmp
andl
fwait
mov
pop
lods
sbbb
xor
xchg
dec
cmp
call
movl
fldenv
aaa
dec
insl
mov
mov
ss
ja
repnz
aam
outsb
xchg
jp
cmp
jge
lds
ds
hlt
dec
jle
dec
arpl
xchg
xor
dec
scas
sbbl
fwait
lea
sbb
dec
push
loope
sti
xor
ds
push
and
imul
std
aaa
les
call
sbb
std
data16
pop
aad
add
jge
lret
ret
popa
cmp
loope
xor
cmp
pop
jl
pop
iret
sbb
ret
sti
xor
or
loop
cmp
es
adc
inc
js
jl
xor
sub
or
sbb
bound
xchg
lcall
or
inc
fmulp
xor
pop
fisubl
and
jbe
repnz
lods
rcll
xlat
int3
and
pop
popa
cmp
xchg
jns
aad
xchg
xor
sti
jl
lcall
popa
adc
pop
scas
jp
test
shll
push
jmp
mov
mov
es
push
int
jnp
xchg
lahf
cmp
movsl
lods
int3
rcr
das
sbbb
pop
mov
push
cmp
mov
cmp
mov
mov
icebp
xchg
subl
std
add
testb
pop
outsl
pop
call
das
ja
cmp
outsb
xor
jne
jmp
out
js
clc
jns
insb
cmp
out
jae
adc
in
je
sub
addb
mov
cmp
push
jge
or
jle
mov
sbb
sbb
shll
dec
fidivrs
scas
sub
xchg
sub
stos
iret
leave
cmp
push
dec
out
inc
roll
shr
icebp
outsb
rcrl
mov
shll
jp
push
stos
adc
xchg
dec
data16
pop
pop
inc
adc
inc
sbb
inc
xchg
outsb
popa
cwtl
mov
and
lds
and
dec
lods
sub
insl
lahf
add
ds
and
pop
addr16
xchg
mov
cmp
xchg
fmull
jge
or
ficoml
dec
ja
out
xchg
stc
cmc
js
dec
ss
push
pop
mov
das
or
xchg
pop
clc
push
jne
sahf
mov
loopne
enter
push
js
mov
sbb
push
test
pop
lods
cmpsl
sub
fnsave
stc
decb
add
cmpsl
adc
xchg
movsb
enter
mov
inc
mov
cwtl
mov
add
hlt
cmp
or
je
loop
xor
insb
dec
cmp
xchg
pop
rclb
dec
mov
cli
in
mov
in
jae
xchg
aaa
add
sub
cmp
jnp
arpl
inc
mov
push
lds
notb
inc
xchg
arpl
lock
outsl
iret
push
stc
popf
adc
jne
in
mov
xor
xchg
push
jo
pushf
iret
repnz
push
and
and
jnp
shl
fwait
jno
jne
ficoms
xchg
cli
xor
frstor
adc
and
mov
ljmp
inc
scas
sub
inc
or
cmp
idivl
pop
pop
imul
cli
sarb
loopne
inc
jp
mov
add
push
jnp
pop
cmp
scas
imulb
lahf
jl
outsl
add
sub
test
add
call
or
adc
ljmp
pop
adcl
push
lds
adc
lahf
push
mov
ss
mov
mov
pop
mov
test
dec
cli
les
xorb
push
xchg
data16
into
mov
scas
and
sbb
and
lods
jo
fwait
or
in
pop
push
or
sub
mov
imul
ret
jmp
jp
shll
or
loope
lock
lcall
sub
ja
xchg
ret
pop
mov
xlat
cmpsl
popa
xchg
addr16
les
dec
lods
cmp
cs
ljmp
adc
rol
jnp
pop
mov
push
pop
arpl
lods
int3
sti
daa
xchg
fmulp
repnz
mov
sbbb
dec
push
add
das
mov
shlb
xchg
cmp
shl
cmpsl
or
test
ss
mov
je
mov
xchg
sub
ret
test
pop
sahf
faddl
loope
pop
cmpsl
dec
insb
and
dec
pop
cmp
cmp
or
mov
push
rcll
or
je
into
add
jae
xor
push
jg
push
sub
mov
out
inc
cmp
jle
mov
movsl
insb
push
push
fstpt
mov
mov
push
ret
mov
mov
mov
sbb
aaa
xor
mov
clc
fwait
mov
out
fadd
jo
mov
push
and
ror
mov
sbb
pop
xchg
loop
ljmp
std
rolb
pop
inc
loope
repnz
xor
adc
inc
rcrl
mov
sub
xor
push
xor
adc
in
mov
adc
pop
sub
mov
aam
push
cwtl
xchg
pop
test
bound
loop
dec
push
jo
or
test
movsl
ss
pop
sbb
xlat
push
cmp
in
adc
lea
in
flds
ds
mov
sbbl
add
push
and
cmpsb
cld
in
arpl
xchg
outsb
adc
adc
fdivrl
nop
stc
fistpl
jae,pn
xchg
into
aam
out
pop
shll
xor
imul
loopne
out
sti
daa
mov
adc
insl
xchg
mov
cmp
test
shl
out
jg
push
movsl
pop
nop
fdivl
insl
pop
test
sbb
mov
pop
call
mov
data16
daa
adc
hlt
out
std
ja
ret
test
pushf
pop
fs
std
inc
outsb
loop
ficoml
outsl
cmpsb
push
mov
shll
shlb
mov
push
aas
add
ljmp
jmp
test
int3
leave
lea
adc
daa
mov
dec
test
push
adc
push
push
test
dec
mov
dec
call
cmpsb
test
push
out
mov
test
pop
data16
outsl
fstps
mov
das
xchg
fbstp
sarb
inc
jg
xchg
xchg
test
mov
mov
mov
pop
lods
adc
les
je
pop
and
pushf
nop
repz
and
ret
jns
dec
ljmp
insb
iret
ds
or
lock
roll
adc
mov
aam
and
sbb
icebp
in
movsl
imul
xchg
xlat
add
inc
in
push
outsb
nop
and
in
sbb
js
in
std
scas
faddp
es
dec
scas
into
or
inc
mov
jnp
outsl
ret
scas
aam
jp
mov
inc
pop
aam
out
mov
dec
movsb
add
and
pop
in
stos
sub
mov
push
xchg
sbb
jae
push
pop
rep
xlat
fwait
stos
mov
mov
loopne
je
test
pop
arpl
leave
lcall
fs
mov
out
shrl
xchg
jl
mov
in
mov
push
or
sbb
inc
subl
xchg
ret
jns
or
mov
hlt
xor
mov
sub
sub
in
lcall
cmp
inc
dec
outsl
rol
jp
imul
test
int3
les
rcr
inc
cmp
dec
jmp
movsb
mov
leave
mov
mov
daa
enter
jle
adc
push
repnz
scas
xlat
push
mov
sahf
mov
in
dec
xchg
mov
les
xor
int3
jle
pusha
mov
jbe
repz
sub
aas
pop
cld
dec
cmp
xchg
push
aas
add
loop
cmp
popf
out
or
mov
repz
and
push
cmp
stos
sub
sbb
out
jo
pop
cmp
fwait
xchg
pop
lock
pushf
mov
xchg
push
adc
or
jmp
mov
xor
lods
mov
sbb
sub
adc
jg
pop
mov
or
dec
cmp
bound
sbb
push
inc
daa
clc
xor
jmp
push
int
lods
or
push
in
icebp
pushf
xor
sti
mov
inc
xor
push
jae
push
daa
jnp
call
sbb
mov
scas
dec
push
test
lahf
cmp
mov
cwtl
mov
xchg
inc
pop
popf
stos
mov
sbb
pop
push
mov
sarb
fmul
daa
pop
and
dec
jl
add
mov
call
mov
push
test
fnstcw
jmp
pop
ret
iret
inc
int
ret
cltd
jbe
pop
cmp
mov
adc
enter
xchg
test
sub
add
imulb
iret
push
or
sub
lods
mov
ljmp
out
mov
stos
mov
jle
and
addr16
sub
and
mov
mov
mov
mov
add
jbe
stc
sbb
inc
inc
mov
mov
xchg
std
sub
push
subl
les
sbb
enter
push
push
mov
fcmovb
jns
or
dec
xchg
mov
or
adc
les
jbe
cmp
mov
sbb
test
daa
mov
dec
and
cmpl
mov
sub
xchg
cmpsb
push
shll
dec
cmp
pop
add
adc
fimuls
xlat
mov
aam
lret
test
jecxz
lahf
sbb
pop
cwtl
xchg
push
xor
andb
push
les
rolb
pop
jmp
cmp
mov
and
and
shlb
imul
mov
insb
push
mov
sub
mov
mov
mov
sti
mov
lds
jecxz
mov
or
push
loopne
fwait
call
push
mov
out
cmp
dec
xchg
enter
ficomps
cltd
cmpsl
fldt
das
gs
xchg
out
shlb
push
fstpl
dec
xchg
adc
orb
out
addr16
lods
push
hlt
imul
test
out
fwait
rcll
or
xchg
lods
lds
pushf
pop
sahf
pop
sub
and
bound
dec
fldcw
adc
inc
or
xchg
lods
xchg
shrb
and
mov
cli
add
adc
cmp
dec
xor
loope
stos
pop
gs
fwait
mov
xchg
inc
add
orb
pop
pop
repz
int3
int3
cmc
ret
cmpsl
cmpsl
sub
roll
dec
inc
into
mov
sbb
dec
and
jno
sub
and
or
in
pushf
or
cmp
outsl
dec
pop
sub
pop
xlat
jge
rcrl
insl
mov
mov
jno
sub
mov
push
insb
mov
cbtw
add
mov
fisubs
xorl
push
ljmp
inc
sbb
and
sub
lea
lds
xor
sbb
insl
mov
sub
mov
push
shl
in
imulb
shll
dec
push
and
int3
out
test
out
dec
gs
cmp
popf
mov
mov
mov
mov
or
cmp
inc
and
leave
aas
add
call
fsubrs
in
rcll
dec
xchg
xchg
push
push
or
fs
push
int
nop
push
add
cmp
sbb
xor
dec
mov
jae
xchg
daa
fadds
addl
lea
dec
imul
mov
fstl
in
das
fcom
ret
adc
mov
pop
dec
arpl
dec
mov
out
aad
sbb
idivb
sbb
jecxz
adc
dec
push
add
sbb
lods
adc
and
mov
or
fnsave
icebp
fwait
xor
sbb
pop
jne
out
or
fdivl
inc
lret
stos
pusha
xor
outsl
js
and
in
pop
dec
gs
das
aam
cltd
test
mov
cmp
add
push
xchg
testl
stc
test
frstor
mov
fwait
cmp
cs
mov
pop
jo
sub
imull
add
das
mov
movsl
in
sub
push
sub
test
inc
mov
ljmp
mov
mov
inc
sub
push
out
sbb
dec
test
cli
icebp
fldcw
lods
mov
pop
xor
popf
aam
push
xor
cwtl
ret
or
es
adc
cmc
push
pop
pop
divb
push
and
jmp
inc
sub
nop
stos
outsl
test
sbbl
lock
dec
test
mov
imul
cs
mov
rcr
xor
mov
cmp
jb
aam
add
test
repz
cltd
mov
jg
push
je
add
hlt
and
mov
jle
or
cld
add
cmp
push
add
adc
jb
sub
rclb
mov
data16
sbb
push
jle
sahf
mov
outsl
loope
movsb
repz
lahf
jmp
in
stos
int
inc
out
push
das
lret
xchg
or
sar
int
int
pop
mov
jecxz
jge
aad
int3
pop
mov
cmpsb
and
mov
in
cld
adc
cmc
cli
iret
dec
push
pop
outsl
and
out
xchg
cld
pop
je
sti
push
and
push
push
lea
iret
mov
pop
mov
ljmp
ret
sbb
in
pop
aas
push
shll
sbb
gs
or
inc
push
scas
and
mov
sub
call
xor
out
xchg
lods
push
xlat
sahf
mov
inc
mov
jmp
mov
movsl
mov
jmp
idiv
ss
scas
jp
sbb
push
and
loop
jbe
aam
scas
mov
icebp
jl
sarb
and
xor
out
or
into
addr16
outsl
aad
mov
es
add
inc
add
shl
popa
mov
repz
lret
lods
jge,pn
mov
pop
pusha
inc
mov
arpl
int3
pop
dec
pop
pushf
cmc
inc
cli
or
shrl
pop
and
push
pop
lods
xor
jle
xor
or
popf
lcall
pop
jle
ja
leave
dec
adc
sbb
jne
xchg
jo
adc
std
hlt
loop
inc
lock
xor
mov
shr
ret
sub
repz
jl
and
mov
outsb
adc
sub
mov
mov
xchg
mov
dec
std
push
and
xchg
add
add
ljmp
data16
test
inc
sbb
loopne
arpl
mov
mov
ret
xor
or
or
xchg
lcall
and
push
pop
cmpsl
out
mov
pop
push
lock
push
popf
test
loope
je
les
test
ja
mov
pop
sysexit
js
mov
testb
push
lock
fcoms
notl
jmp
push
pop
cmp
lcall
and
sbb
add
inc
leave
lods
pop
jae
sub
test
jecxz
pop
aaa
lret
pop
or
push
imul
lods
jp
cltd
test
and
cmp
cwtl
mov
inc
jl
cmp
outsb
xlat
sbb
js
fcmove
movsb
fcomip
popa
clc
fxch
sahf
scas
and
push
xchg
in
test
mov
mov
adc
mov
mov
popa
jecxz
xor
pushf
pop
jmp
or
cmp
jg
mov
outsl
out
or
dec
push
in
pushf
rorl
mov
loope
jbe
dec
iret
shrb
pop
mov
or
insl
xor
inc
mov
inc
ja
adc
repz
mov
es
push
xchg
test
mov
in
inc
mov
into
mov
lods
inc
push
icebp
mov
ljmp
mull
sbb
sbb
dec
dec
xcrypt-cfb
cmpsl
arpl
xchg
scas
out
push
cli
out
fucomi
mov
cmp
stc
in
mov
mov
jo
mov
daa
es
adc
cwtl
outsl
mov
sbb
push
cltd
sbb
jmp
mov
imul
outsl
push
lret
imul
add
stos
test
cmc
movsb
mov
test
add
pop
mov
jns
sub
mov
pop
mov
cmp
adc
outsl
dec
jecxz
mov
cmpsl
fcomps
jecxz
div
pop
fcmovu
rcrb
sub
flds
cld
jl
iret
sbb
hlt
jae
stos
dec
pop
adc
in
test
outsb
mov
push
jbe
inc
les
shl
add
int3
pop
lods
dec
bound
or
cli
outsl
loopne
pop
sub
pop
shll
mov
mov
shlb
ret
jnp
fadd
in
jns
mov
jbe
mov
outsb
aas
aam
in
ret
repz
repnz
jae
sarl
jb
lock
fisttpl
or
loop
and
adc
xchg
push
jp
push
ret
xchg
cmc
inc
or
mov
imul
adc
xor
imul
mov
pop
sub
rcl
xchg
pop
test
add
xchg
out
and
fisubs
mov
cmp
mov
out
stos
mov
les
push
add
adc
sub
out
and
clc
sbb
xchg
lds
mov
mov
adc
dec
xor
leave
pop
cs
jg
or
into
aad
and
repz
insl
inc
add
orl
xor
into
mov
fisubl
mov
jmp
and
in
sbb
sbb
bound
iret
mov
out
pop
jecxz
in
inc
and
jb
insb
mov
sub
push
fldl
movsb
cmp
push
aam
outsl
fisubs
mov
pop
dec
fcomp
ret
fs
subl
aaa
in
in
subl
call
pop
pop
mov
aas
jno
jnp
adc
fcoml
add
popf
arpl
pop
jno
pop
mov
jg
pop
push
sub
push
lods
test
mov
lret
rep
lock
stc
adc
sbb
sarb
femms
sub
xchg
loop
pop
shrb
mov
xor
jg
aas
pushf
dec
loopne
xorb
outsl
ret
fiaddl
std
ret
inc
pop
hlt
mov
cmpsl
aas
shl
fadd
cli
lahf
jecxz
stc
add
sti
mov
into
xor
mov
lds
pushf
dec
inc
call
inc
out
sahf
dec
fisubrl
nop
ss
insl
xorb
sub
xor
lea
insl
dec
sahf
or
int
sbb
bound
pop
cwtl
dec
ret
repnz
or
inc
pop
cmpsl
push
dec
and
fnsave
mov
mov
mov
in
lahf
jnp
mov
mov
add
shlb
dec
or
lods
test
enter
or
cltd
inc
out
aam
outsl
loopne
imull
sti
add
fidivrs
cmpsb
inc
mov
fsin
lcall
push
testl
movsb
subl
nop
push
and
jecxz
push
inc
jo
dec
jo
repnz
add
jno
dec
mov
or
inc
gs
popa
mov
ret
pusha
ja
sbb
pop
add
lahf
push
pop
outsb
sub
enter
xchg
repz
lea
mov
in
arpl
loop
mov
clc
jbe
or
sbb
mov
jle
jae
rorb
cmp
dec
pop
ficoms
or
and
mov
or
enter
das
add
mov
int3
sbb
adc
ja
bound
mov
sub
cmp
xor
dec
ficompl
mov
scas
lds
std
cmpsl
dec
sbb
lahf
pusha
das
je
dec
mov
movsb
sub
fistps
cmp
imul
sub
xchg
loope
pop
jp
andb
test
dec
lods
in
cmpsb
mov
push
jnp
dec
rclb
push
jmp
pushf
int
add
push
mov
testb
ds
push
movsb
mov
test
push
mov
mov
sbb
mov
cmp
push
cmp
dec
sbb
insl
xchg
aas
lea
pop
ret
call
gs
bound
or
mov
ret
xchg
sub
pop
mov
mov
jg
sbb
dec
mov
pop
ficoml
pusha
and
ljmp
jmp
rcl
cmc
push
lods
xor
fcoml
cli
push
mov
or
into
sbb
mov
cmc
dec
mov
imul
mov
sub
out
ljmp
jnp
hlt
cmpsl
add
lds
jecxz
outsl
pushf
test
mov
mov
pop
or
insl
sbbl
es
add
imul
in
jecxz
test
sbb
and
mov
test
mov
inc
idivb
xchg
imul
les
stos
es
std
jne
mov
xor
cmp
and
xor
popf
sbb
sbb
repz
js
and
pmulhw
and
loope
lahf
pop
loope
and
testl
jb
movsb
sbb
inc
mov
jmp
in
or
ds
pushf
inc
push
mov
fisubl
or
cmp
stos
movsl
sub
aad
lock
jnp
scas
call
into
or
aad
into
nop
cld
cld
mov
adc
push
mov
sub
jns
jae
in
cwtl
xchg
std
inc
add
cltd
dec
dec
pop
popf
pop
int
lock
adc
push
xor
push
outsb
stc
mov
inc
iret
enter
ds
lods
data16
xor
jne
lods
jb
mov
jmp
loopne
push
addl
into
inc
popf
aaa
inc
adc
ret
xor
mov
out
jno
pusha
frndint
fxch
lcall
inc
jmp
and
cmp
rcl
mov
scas
pop
pop
popa
rolb
incl
repnz
inc
inc
mov
xor
and
pop
addr16
rorl
xchg
outsb
dec
xchg
daa
xorl
cmp
lret
xchg
ret
out
stos
mov
dec
or
mov
and
dec
imul
jp
cmp
aas
xorl
ret
inc
stos
jp
test
sbb
movsb
cmpsl
mov
ficoml
rcrl
cmp
push
add
fnstcw
push
out
xchg
aad
fidivs
fwait
jp
jae
ror
ljmp
inc
push
inc
mov
out
sbb
jne
shlb
imul
dec
pushf
hlt
jl
stos
fsubs
lahf
adc
data16
aas
pop
popa
test
xlat
loopne
dec
inc
jbe
stos
cmp
mov
lds
test
jge
pusha
xchg
int3
mov
jp
add
dec
mov
pop
mov
adc
and
cmc
mov
mov
xchg
push
inc
call
adc
cmp
iret
sahf
and
and
xor
push
push
pop
mov
cmp
mov
lcall
cmp
pop
inc
sahf
insl
mov
fisttpll
mov
push
sarl
rcrb
dec
cmpsl
loop
clc
add
test
negl
stc
push
clc
test
mov
push
pop
fists
sub
pushf
jne
call
popa
xor
xorl
jns
push
add
dec
cmpsl
sub
pop
out
popl
leave
cmp
sbb
inc
es
hlt
pop
pop
into
ja
nop
out
loopne
dec
mov
cmp
lret
dec
mov
mov
imul
add
mov
dec
push
divl
shll
push
imul
lret
pop
ss
dec
fisubl
add
mov
scas
gs
insb
loope
outsl
inc
mov
sahf
lahf
dec
fwait
shr
addl
or
popf
or
in
mov
push
test
push
mov
aam
es
add
rdpmc
mov
push
or
les
add
mov
std
cli
jbe
cmp
adc
xor
or
out
cmp
cmp
mov
imul
ja
daa
orb
pop
lods
cltd
bound
cmc
add
jl
jb
sahf
xor
fs
xlat
stc
sbb
jnp
xor
outsl
shrb
fists
fwait
arpl
sbb
sub
mov
cmp
xchg
pop
loopne
mov
push
std
sbb
push
in
icebp
or
lea
jmp
push
repz
xchg
jg
jp
pop
lock
packsswb
in
push
mov
cmpsl
pop
icebp
dec
and
jae
stc
xor
push
and
lock
jnp
outsb
mov
lret
lret
ficoms
test
icebp
push
addr16
jns
lods
xor
push
sbb
sbb
scas
sub
or
movsb
lock
mov
hlt
mov
lods
fdivrs
pop
jp
mov
aas
call
pop
mov
mov
push
xchg
out
sarb
jo
jle
mov
jnp
lock
fsubr
add
or
popf
sbb
imul
xor
imul
lret
jnp
lds
and
jg
inc
pop
fsubrs
jo
xorb
cmp
xchg
xchg
cltd
or
std
cmp
clc
outsb
ret
lret
xchg
cmpsb
sub
mov
repz
jge
rcrb
mov
jb
aas
cmpsl
mov
jle
cltd
pop
insl
and
mov
loopne
jle
jns
mov
movsl
or
ret
sbb
cmpsb
mov
push
and
pop
sar
fdivr
pop
sahf
push
pusha
repz
dec
imull
sub
xchg
sub
pop
je
pushf
movsb
adc
lret
mulb
mov
cmp
add
mov
adc
lods
jae
iret
push
loopw
xchg
xchg
mov
testb
int
sysexit
jno
mov
xor
repz
xchg
dec
push
add
mov
and
loop
add
jge
andb
sbb
dec
dec
repnz
dec
mov
xchg
in
test
jl
out
add
xor
adc
push
fbld
dec
mov
xchg
mov
insl
lock
inc
and
pushf
js
cld
inc
imul
mov
mov
dec
or
xchg
adc
mov
or
xchg
sub
icebp
loop
jo
in
out
pushf
inc
cmpsl
aam
adc
out
fcomp
mov
mov
in
push
cmp
repz
sbb
cmp
dec
addr16
shl
cltd
jns
sarl
mov
or
push
pop
pop
in
mov
daa
movsl
pop
and
repnz
mov
lret
in
mov
sbb
and
aad
out
push
inc
sti
adc
mov
cmp
mov
dec
sahf
decl
pop
xor
lods
and
popa
int3
pop
cmpsb
cld
test
leave
cs
ss
pop
repz
das
fucomip
sub
add
shlb
push
inc
sbb
lret
and
xor
lret
and
add
jae
ret
push
xchg
pushf
dec
decb
and
jae
jbe
sbb
ret
cmp
in
rcrb
pushf
adc
imul
mov
ficompl
xchg
push
jle
stos
filds
sub
imul
enter
addl
sub
rol
push
sub
pop
fs
and
mov
in
inc
repnz
fldenv
mov
inc
aad
jns
xor
sbb
push
pop
pop
enter
sub
arpl
movsl
xchg
arpl
inc
imul
daa
jno
adc
mov
mov
pop
lret
ljmp
in
sub
in
adc
outsl
push
dec
xchg
pop
out
sbb
dec
rolb
cmpsl
loop
shrl
outsl
mull
jb
int
pop
sbb
into
fsubl
pop
ja
icebp
out
imul
scas
daa
jmp
jmp
aas
cmp
sbb
ja
push
mov
aad
outsl
push
mov
mov
inc
data16
lret
lret
scas
insl
test
sbb
dec
pop
out
and
xor
andl
loope
sub
add
fwait
aaa
and
jae
popa
call
std
cwtl
out
sahf
pop
lock
mov
pop
push
es
cld
arpl
aad
push
jle
pop
xchg
mov
dec
fsubr
jb
xchg
push
mov
jbe
jecxz
test
sbb
incl
aad
mov
jl
dec
push
ret
add
jp
mov
cmp
pushl
mov
incl
fsubrl
sub
lcall
inc
cld
js
mov
jne
sbb
aaa
cs
jl
jl
xor
cmpsb
movsl
inc
ljmp
jae
lods
cltd
fbld
lret
aad
jmp
dec
sbb
jmp
fstp
pushf
sarl
mov
scas
add
ljmp
inc
mov
push
xchg
jle
mov
icebp
dec
adc
sbb
fisttpl
push
insb
fidivrl
out
or
out
inc
imul
hlt
shl
ja
roll
imul
push
dec
adc
xor
sbb
ljmp
pop
and
loope
insb
data16
cmp
dec
ss
mov
xchg
sti
repz
push
movd
iret
lcall
jb
arpl
cmp
movsb
lret
pop
clc
dec
rclb
push
push
pusha
sub
in
fistpll
lock
sub
jno
mov
push
lcall
cmp
xlat
sub
pop
jle
cmp
xchg
and
xor
insl
or
stos
push
mov
jno
inc
lods
jge
inc
xchg
mov
popf
iret
lahf
sbb
jle
loope
xchg
lahf
test
push
test
inc
mov
dec
shl
fmul
and
lret
inc
loopne
stc
push
xchg
mov
sahf
lret
push
addl
add
jle
pop
jne
inc
mov
push
pop
cltd
in
movsl
in
std
push
aaa
andl
lds
mov
pop
ss
movsl
stc
inc
xchg
add
pop
mov
out
adc
dec
pop
push
dec
xchg
xlat
xchg
hlt
cmpsb
ljmp
add
xor
cmp
ljmp
pop
jns
mov
push
pop
add
pop
push
pop
xor
sbb
push
scas
push
in
rorl
icebp
jne
adc
aas
call
cmp
rcl
movsl
pushf
jo
aad
popf
pop
insl
imul
test
sub
aas
xlat
fwait
dec
mov
pop
and
pop
pop
sbb
fs
dec
jns
sbb
adc
arpl
sti
aam
mov
std
and
fsubrs
test
ret
sbb
in
loope
inc
lea
in
xor
inc
mov
mov
test
jb,pt
es
jne
adc
sbb
xor
aad
fiadds
daa
cwtl
dec
xlat
lcall
nop
in
repnz
pop
mov
push
mov
cmp
jl
and
jb
fiaddl
cmpsb
pop
iret
outsl
xor
out
cld
sbb
jp
adc
sbb
js
add
pop
int
mov
in
lods
jae
imul
mov
sbbl
repnz
mov
push
xor
add
and
arpl
push
popa
xor
push
mov
ret
jns
xchg
es
pop
mov
inc
stos
dec
js
inc
loopne
xor
pop
les
pop
cmp
push
xor
inc
add
pop
adc
std
rcll
cmp
das
sub
xor
xor
fists
leave
cmc
xchg
lahf
jp
pop
or
sbb
int
hlt
cmp
push
xor
xchg
out
test
or
or
jmp
mov
gs
outsl
loop
mov
mov
lahf
and
inc
int
outsb
xchg
mov
jb
push
aaa
pop
mov
adc
pushf
imul
loop
shrb
mov
and
push
repnz
rcr
stc
sahf
lea
mov
jbe
popa
pop
fiaddl
push
sub
ss
in
pop
pop
inc
pop
inc
scas
cwtl
incb
repnz
cltd
sub
pushf
cmc
add
dec
ds
out
in
stos
lea
cmp
jno
sub
insb
inc
out
sub
insb
dec
xchg
xor
cmp
and
ja
clc
xchg
fisttpll
ljmp
pop
jecxz
mov
push
repz
int
outsl
jb
pop
lds
lock
iret
push
imul
sarl
xlat
aas
lahf
shl
mov
mov
ret
add
lods
add
pusha
xchg
lcall
dec
rcrb
inc
pop
das
in
lods
out
and
sti
or
inc
in
sub
mov
lods
xchg
lds
pop
cmp
js
fwait
hlt
aas
mov
xchg
divb
repnz
mov
xor
clc
daa
das
pop
adc
stc
repnz
fcoms
mulb
sub
loop
jo
ljmp
sbb
les
cmp
sub
mov
iret
in
ds
popf
pop
pop
aam
subl
in
push
pop
pop
out
and
cmpsl
out
movsb
fldt
imul
into
push
cmp
or
mov
stos
push
inc
dec
scas
sub
sahf
and
mov
pop
sbb
push
mov
mov
pushf
ret
inc
repnz
xchg
cli
ja
xor
xchg
ficompl
jnp
pop
adcb
inc
inc
mov
push
mov
aaa
add
or
popf
xor
lock
inc
inc
lock
adc
filds
dec
lods
mov
jmp
lock
adc
popf
imul
fnop
adc
pop
and
shrl
ret
jl
sbb
gs
mov
scas
rcll
fucomp
cmp
insb
inc
mov
inc
clc
ss
insb
stc
pusha
clc
jmp
subl
add
orl
jge
mov
push
or
fs
or
sbb
push
xchg
and
stos
cmp
or
loop
add
ds
mov
popf
add
sbb
xor
xchg
lods
inc
fwait
mov
fsubl
dec
test
jg
sbb
cli
mov
pop
adc
add
out
hlt
lahf
adc
inc
ds
pop
outsb
sub
mov
fucomi
mov
xchg
jg
jo
inc
sbb
imulb
sub
test
xor
outsl
pop
add
push
adc
cmp
das
in
fcomps
jp
mov
in
insb
insl
lods
jns
sub
xchg
mov
cmpb
movsl
test
xchg
fildll
arpl
pop
sub
xchg
test
mov
adc
in
jecxz
daa
dec
sub
gs
push
mov
cmp
xor
mov
andb
add
fcompl
repz
sbb
xor
adcb
dec
xchg
nop
into
xchg
mov
addr16
jl
cmpsb
adc
pop
push
sub
imul
dec
xor
dec
dec
cs
enter
and
incl
movsb
or
leave
add
mov
rolb
inc
pop
dec
jp
sub
push
mov
bound
jbe
xchg
push
xchg
cwtl
jnp
scas
pop
pop
cmp
jecxz
idivb
cmp
push
dec
cld
adc
nop
add
adc
xchg
adc
imul
ret
mov
sub
pop
cmovle
mov
dec
add
sbb
mov
test
xchg
incb
in
xchg
and
push
xor
movsl
xchg
js
cwtl
call
and
hlt
jb
stos
leave
popa
addr16
and
repz
push
cmp
cmp
imul
xchg
and
push
pop
imul
je
pop
ja
mov
pushf
ret
sub
xor
and
adc
stos
cmpsb
insl
jnp
imul
pop
inc
ret
mov
icebp
sbb
lea
fsubrp
adc
dec
neg
or
dec
xor
ljmp
pop
adc
mov
and
xor
add
xor
inc
jmp
pop
xchg
lods
cmc
fisubrs
fisubrs
mov
fcomp
pop
loop
push
js
repnz
adc
fdivl
add
jno
xor
fisttps
adc
leave
pop
push
subl
insl
mov
insl
fs
ja
adc
xchg
dec
inc
das
sbbl
jle
sbb
jecxz
enter
xchg
or
mov
lret
dec
out
or
mov
addr16
dec
add
jmp
jle
and
add
or
ljmp
mov
mov
pop
dec
push
xor
pop
mov
and
addr16
hlt
shl
lods
sti
repz
sbb
out
push
jno
jno
scas
loop
mov
in
mov
stos
mov
mov
push
adc
popa
adc
lods
dec
cmp
repz
pop
inc
and
cmc
lods
jae
repnz
movsb
loopne
fwait
sub
and
pop
sbb
push
aaa
int
push
xchg
sbb
sbb
dec
int3
mov
pusha
cmpsl
rolb
xchg
subb
addr16
lea
lds
pop
lods
clc
je
and
repz
adc
outsb
mov
f2xm1
int
sub
data16
or
std
pop
out
jg
xchg
fisttpll
popf
sbb
lds
dec
sbb
or
cmc
pop
push
xor
inc
jbe
push
lods
pop
test
js
pop
mov
pop
stc
xchg
mov
mov
je
dec
out
or
lcall
out
sub
dec
push
mov
ficomps
mov
push
stos
add
pushf
dec
mov
add
leave
mov
rcrb
iret
mov
out
xor
mov
movsl
push
dec
jne
int
es
daa
and
outsl
add
dec
repz
je
mov
imul
and
mov
dec
dec
jl
mov
jns
jb
fcomip
cld
cs
test
in
movsb
sbb
ret
xchg
gs
adc
dec
add
popf
pusha
adc
or
sbb
jmp
arpl
jo
cmp
shrl
filds
cwtl
movsb
push
stos
push
dec
or
mov
shrb
mov
imul
fnstcw
shll
mov
loope
add
xorl
outsb
loop
movsb
inc
lds
cmp
cmp
push
pusha
jp
aas
in
mov
jle
fdivrl
adc
pop
cmc
pop
xchg
call
pop
lock
sub
mov
imul
and
addr16
pushf
aaa
jns
clc
ss
roll
push
push
inc
lods
gs
inc
roll
repnz
lods
mov
rolb
ds
xor
rorb
jl
ret
push
jmp
mov
pop
jp
ret
std
mov
mov
mov
dec
xor
out
jnp
mov
das
icebp
outsl
mov
pop
test
dec
sub
mov
mov
xchg
pop
lea
das
insb
out
xchg
xchg
addr16
pop
cmp
test
add
test
int3
gs
loopne
xchg
push
das
and
inc
dec
sarl
mov
pushf
xlat
insb
scas
mov
icebp
pop
clc
inc
in
and
test
insb
movsb
movd
xchg
out
sbb
das
icebp
loop
jl
mov
lods
push
mov
dec
xchg
cmp
inc
mov
icebp
mov
or
xor
xchg
repnz
in
mov
stos
popa
cli
xchg
adc
mov
inc
sbb
aas
push
shll
mov
rcrl
addr16
fidivrl
and
orl
or
and
dec
insb
shl
iret
mov
adcb
push
push
ds
xchg
filds
mov
scas
push
aas
xor
mov
or
jne
mov
enter
pop
inc
and
ret
std
daa
sbb
pop
dec
inc
push
push
dec
stc
mov
pop
mov
pop
xchg
ja
adc
call
loopne
cmpsl
xchg
hlt
popf
sbb
ds
add
es
lret
cmp
sbb
mov
outsb
leave
mov
jbe
pop
sbb
adc
pop
mov
push
fwait
enter
enter
int
mov
sahf
cmp
in
xchg
icebp
dec
jp
add
sub
dec
jns
mov
xor
mov
and
insb
xchg
stos
stos
mov
cmp
mov
pop
subl
push
sub
jecxz
inc
cmp
iret
sub
rclb
insb
out
or
jge
incb
mov
jp
ret
sub
cltd
add
imul
push
les
add
sub
popa
mov
jb
xor
aad
jmp
inc
sub
push
repnz
aam
data16
in
inc
pop
mov
popf
fmulp
std
jne
sarb
ret
in
push
in
and
mov
aam
test
pop
es
scas
test
pop
push
mov
mov
adc
inc
pop
mov
inc
xchg
mov
cmp
add
sbb
addr16
bnd
pop
mov
mov
enter
ja
imul
push
mov
push
cld
dec
dec
cmp
xor
and
dec
test
xor
mov
les
mov
cmc
lret
push
add
xor
jo
cmc
jne
fidivrl
cmp
call
bnd
and
fs
test
or
dec
bound
adc
sahf
je
mov
xor
ljmp
mov
or
or
mov
sarb
outsl
sub
push
sbb
xchg
addl
sub
bound
jns
aaa
imul
bound
call
std
add
imul
adc
std
push
add
jbe
and
sub
lods
sbb
jge
pop
push
pop
cs
pop
lods
ja
or
stos
fnstsw
stos
inc
arpl
gs
add
inc
xchg
pusha
enter
lret
xor
icebp
aam
ds
xchg
cmpsl
imul
mov
ds
adc
in
push
dec
mov
jno
push
sbb
sbb
dec
lock
imull
dec
test
sbb
jl
add
enter
mov
lret
mov
inc
rorb
mov
lret
jne
add
pop
lcall
mov
stos
jmp
pop
ffree
mov
pop
sub
lods
in
inc
cwtl
je
pop
ret
addr16
inc
pop
sub
mov
jecxz
outsb
add
jno
mov
adc
sub
xchg
or
repz
outsl
xchg
jl
mov
in
stos
add
fstpt
aam
fadd
sub
mov
or
dec
dec
daa
add
xchg
outsb
fildll
in
push
cmc
mov
fisubrl
cmpb
ja
shrl
imul
lahf
xchg
aad
idivl
xchg
mov
aam
subl
adc
addr16
les
outsb
mov
lahf
scas
dec
jmp
bnd
lods
mov
sbb
rolb
sub
push
add
sti
inc
xor
outsl
test
cmc
jae
jne
xor
xor
and
jp
repz
sahf
mov
mov
sbb
push
lahf
xor
out
push
jnp
das
dec
mov
stc
push
fistpll
jae
push
ja
pop
mov
lea
pop
movsl
pop
popf
mov
mov
jmp
jne
test
sbb
jbe
mov
ljmp
call
cs
gs
or
fucomip
dec
pushf
sub
lret
push
or
pop
push
mov
or
jecxz
rcr
push
in
clc
int
mov
stos
popf
pop
sbb
pop
cmp
inc
fstpl
and
sbb
leave
sub
andl
jbe
sahf
jbe
mov
jns
xchg
mov
ret
adc
xor
insb
repz
and
mov
insb
icebp
inc
les
pop
jmp
lds
pop
sub
mov
insl
aam
int
jnp
sub
xor
push
addr16
adc
stos
lea
mov
lea
push
stos
pop
pop
adc
dec
aas
mov
imul
pushf
stc
jb
mov
jmp
pop
add
push
inc
push
daa
repz
cli
or
push
sbb
into
nop
sarb
xlat
jae
push
sti
insb
leave
jmp
or
and
cmp
cs
in
and
je
pop
mov
in
mov
iret
mov
mov
pop
int
fstpl
dec
push
gs
and
pop
sub
div
popf
fistl
stc
xchg
and
leave
xchg
sub
sti
dec
pop
ja
outsl
and
sbbl
xlat
fwait
cmp
jl
lret
in
pop
ret
push
jl
scas
outsb
pop
dec
in
push
inc
fmull
mov
dec
cmp
mov
lods
cmpsl
jb
add
repz
outsb
and
out
mov
test
loop
out
outsl
cwtl
fldcw
out
in
dec
push
jbe
aam
push
fdivp
and
mov
and
xchg
adc
insl
cmp
jecxz
outsl
inc
sbb
cmp
in
push
or
push
jge,pt
dec
jbe
daa
outsb
pop
xor
stos
lock
out
push
call
cmp
cmp
push
pop
add
mov
sbb
rclb
insb
popa
mov
sub
icebp
in
push
iret
push
jo
push
int
dec
add
sbb
mov
dec
add
sub
push
jp
fstpl
push
adc
jae
loop
aam
cltd
add
mov
cmp
cmpsl
test
movsl
inc
or
fbstp
xor
movsb
pop
cltd
xor
pop
jl
jmp
inc
pop
pop
cmp
and
jg
mov
or
xor
pop
pop
jnp
jo
sub
xchg
pop
add
icebp
test
aad
lret
sub
lods
cs
data16
outsl
xchg
jb
jp
pop
dec
adc
jno
daa
mov
or
mov
in
outsl
pop
xor
scas
mov
sti
loope
dec
out
in
mov
xor
nop
iret
mov
pushf
pop
inc
dec
cmp
nop
ficompl
xchg
neg
arpl
cmp
lret
mov
mov
xchg
sbb
jo
cmovbe
int
pusha
pop
jmp
fnstcw
bound
lock
jae
inc
popa
loope
in
jmp
sub
xchg
adc
adc
xchg
test
pop
dec
pushf
sbb
mov
aad
fxch
push
mov
pusha
pop
pop
stos
das
fnstenv
hlt
jo
push
notl
insl
stos
in
dec
mov
pop
xor
push
pop
sar
mov
call
out
or
mov
jmp
stc
mov
leave
mov
jp
push
jo
js
rorl
jo
cwtl
pop
js
dec
jl
fwait
cmc
gs
push
addl
lcall
inc
jl
lods
test
jle
sahf
cmc
sbb
out
or
sbb
jbe
ja
pop
jmp
mov
dec
bound
int
fnstcw
sub
ficoms
jb
test
das
sub
mov
popa
popl
cmp
cmp
mov
mov
outsl
add
or
mov
arpl
stc
cli
arpl
inc
pushf
pushf
int
stos
fwait
cmp
imul
ja
into
ret
add
popw
iret
add
xchg
or
fdivs
cmc
xchg
shlb
dec
sbb
adc
jb
stc
xor
into
mov
das
push
pop
mov
xor
sti
outsl
aaa
rclb
push
cmc
mov
adc
fs
dec
jmp
sahf
xchg
xchg
cmc
cmp
sub
int3
cmp
mov
mov
pop
pop
jmp
sti
cmc
idivb
out
imul
jmp
dec
js
push
pop
stos
sbb
leave
aas
clc
push
shlb
push
sahf
lods
pop
fdiv
call
lock
scas
adcl
cs
mov
push
aas
push
or
lock
mov
fnstsw
mov
dec
dec
je
push
loop
mov
mov
jg
cltd
xorl
sti
ja
aam
addr16
push
sbb
out
xor
push
sti
loopne
paddsw
fsubl
in
pop
aaa
mov
mov
test
add
cld
das
adc
outsb
imul
mov
in
mov
sbb
cmp
adc
push
adc
aaa
and
and
test
push
cmpsl
ds
dec
ret
sti
push
int
mov
adc
aad
js
lods
sbbb
jnp
inc
insl
jo
cmp
add
xchg
lcall
rcrl
mov
hlt
or
mov
and
mov
xchg
or
sub
mov
cs
push
rcrb
repz
ljmp
stos
out
sarb
mov
paddw
nop
dec
aad
js
sbb
dec
mov
lea
cmp
sbb
sbb
shrb
and
fcoml
pop
adcb
repz
cmovge
cmp
cs
std
inc
out
insl
cwtl
push
mov
dec
jns
push
les
mov
sahf
daa
adc
rorb
out
cmp
push
es
push
push
push
push
jg
add
pop
mov
das
pop
cmp
fidivl
or
movsl
lock
lcall
xchg
out
pop
lods
add
jae
adc
inc
dec
dec
pop
aaa
adc
dec
push
mov
aad
cmpsl
int
insb
js
bound
sahf
pop
xor
pop
jp
stc
les
js
xchg
adcl
cmpsl
xchg
std
push
jp,pt
dec
and
push
cwtl
jecxz
scas
jg
sahf
lret
in
mulb
mov
lock
cmp
mov
push
xchg
mov
mov
orl
test
in
testl
shlb
outsl
sbb
out
decb
nopl
testb
jle
sti
outsb
mov
pop
call
push
pop
adc
shll
mov
add
or
aas
mov
lock
ret
test
outsl
repnz
xor
cmc
adc
sbb
mov
sub
or
cmp
xlat
mov
dec
lods
cmpsl
xchg
loop
add
xor
mov
dec
mov
out
out
cmpsb
imul
iret
in
adc
inc
mov
xchg
xor
mov
pop
mov
mov
cli
xor
xchg
imul
repnz
cmp
pop
dec
int3
cmp
adc
movsl
xchg
mov
push
stos
sahf
out
mov
cmp
gs
jg
xchg
arpl
sbb
cmpsl
mov
lret
repnz
imul
fcompl
into
iret
push
mov
aad
push
mov
push
cwtl
cmpl
arpl
pop
mov
or
jno
fstpl
addr16
sub
fwait
into
das
push
pushf
sbb
iret
test
push
shlb
incb
xor
push
and
or
sbb
test
enter
push
sbb
cld
dec
mov
arpl
jns
mov
sub
popf
lret
imul
and
out
cmp
inc
cltd
xor
sti
movsb
mov
xchg
jl
push
pop
and
in
loopne
push
inc
dec
fimull
sbb
mov
mov
pushf
adc
fwait
pushf
das
dec
xchg
xor
lahf
js
aam
addb
sub
mov
cs
mov
jecxz
into
pop
inc
popf
fdivl
shll
add
add
mov
push
adc
imul
fwait
orb
fsubrl
ljmp
nop
jl
addps
mov
xchg
shll
jns
das
sub
jnp
mov
pop
iret
cmp
sbb
stos
sbb
mov
insb
push
push
and
sahf
xchg
adc
fcmovnb
xor
sub
test
inc
pop
popa
xchg
nop
lods
mov
add
pushf
add
imul
imul
add
pop
sbb
cmp
cmp
aaa
and
mov
jp
push
data16
and
xchg
lret
xor
jnp
in
int
das
mov
cmp
add
and
mov
jo
int3
xlat
sbb
sbb
and
jmp
mov
push
sbb
test
pop
pop
dec
loopne
pop
imul
sub
jl
mov
pusha
call
stos
xchg
xchg
push
out
add
sbb
sbb
rorl
cmc
add
das
sub
push
mov
mov
ficomps
xor
jnp
push
xchg
xchg
cs
or
negl
push
out
jne
add
mov
subl
push
jne
enter
push
xor
xchg
push
out
aad
fs
enter
clc
dec
push
jmp
or
adc
pusha
jmp
add
addb
cmp
daa
xor
out
or
mov
adc
jns
imull
test
sahf
inc
sahf
fscale
data16
imul
stos
rcl
push
mov
push
arpl
mov
mov
or
sbb
hlt
ret
ss
mov
stos
sahf
stc
inc
mov
pushl
push
lods
sbb
lcall
pushf
xor
lret
cli
rolb
sbb
nop
jp
and
out
lods
push
mov
sub
add
jne
and
or
xchg
cmpsb
leave
jns
sbb
pop
sub
mov
cmp
sbb
in
je
js
push
jb
cmp
mov
int
insl
cmp
mov
xlat
pop
pop
sub
ds
int3
xchg
imul
xor
rcr
and
call
insb
cmpsl
cs
dec
cmp
push
test
shufps
sub
push
movsb
push
popa
std
jb
jo
addl
stos
mov
ljmp
rolb
mov
iret
push
add
mov
pop
push
scas
scas
lahf
into
xor
xchg
jne
mov
cli
lcall
in
mov
push
out
push
les
fcompl
mov
pop
rorl
and
cmpsb
test
lret
mov
lods
xchg
hlt
jae
inc
jecxz
mov
xor
push
xchg
lods
cmp
mov
fnstcw
cwtl
push
jl
mov
push
cmp
lock
mov
ss
mov
cmc
xlat
jbe
mov
pop
sahf
or
xchg
dec
jp
arpl
std
rorl
jmp
jp
mov
incb
pop
adc
int3
and
movsb
cmp
jl
xlat
push
sti
xor
inc
jne
mov
idivb
push
dec
cmpsb
idivl
outsb
aas
sti
dec
pop
inc
mov
push
adc
push
cmc
ss
mov
jb
aam
dec
xchg
jle
sub
fistps
pop
cmp
mov
add
mov
inc
scas
fwait
cmp
xor
sbb
mov
pop
js
xchg
inc
xor
mov
sub
push
das
xor
adc
mov
push
mov
mov
xchg
pop
fsubr
mov
scas
orl
mov
sbb
mov
out
outsl
pop
mov
pop
dec
mov
mov
lock
jp
popf
push
data16
inc
es
bound
xchg
std
cmp
and
dec
sahf
repz
int3
lahf
mov
mov
bound
adc
add
fldcw
cmp
or
jmp
cld
jae
cmp
dec
lock
fst
ljmp
aaa
cmp
mov
pop
sbb
pop
xor
dec
sub
popa
popf
adc
cmp
dec
jns
push
inc
dec
pop
mov
mov
pop
pop
mov
sub
xchg
mov
mov
mov
dec
or
pop
push
fcoms
push
fmuls
iret
mov
mov
xchg
adc
or
mov
mov
jle
pop
stc
clc
cmp
mov
cmpsb
adc
cmp
mov
out
dec
add
xchg
pop
mov
aaa
cltd
scas
mov
cmc
movsl
jnp
dec
lea
push
int
fs
sub
xlat
xchg
sub
cmp
inc
fstpt
addr16
add
push
in
lret
add
cld
enter
ret
mov
shlb
rcrl
clc
pushf
sbb
or
cli
jecxz
lods
cmc
lods
lea
pop
sub
push
sub
pop
xchg
fwait
mov
jnp
xchg
jmp
not
aaa
xchg
push
jns
jmp
xchg
addb
pop
das
fmul
shlb
sub
push
rorl
adc
add
jmp
push
and
add
push
jg
pop
xor
mov
sbb
add
ja
imul
sbb
out
xor
sub
repz
int3
aas
cmpb
mov
sub
mov
add
pop
cmp
push
sti
cmp
andb
mov
or
mull
out
lock
adc
push
dec
lods
mov
xor
cltd
or
xor
ror
in
or
lock
lock
aaa
or
shl
xlat
in
rclb
fstps
outsb
fwait
mov
cld
imul
outsl
scas
shrb
push
xor
int3
cmp
insl
fcmovbe
push
and
lahf
cmpsb
fdivp
and
loop,pn
loop
adc
inc
imulb
jns
lcall
mov
sbb
add
push
sub
ret
movsb
outsl
push
xchg
arpl
xor
into
movsb
mov
fildll
pushf
pop
push
pop
cltd
insb
sub
xchg
popa
dec
pop
and
movsl
mov
imul
clc
adcl
add
fsub
adcb
push
and
lods
arpl
in
int
outsb
popa
loopne
cli
outsl
ret
int3
shlb
cmpsl
inc
outsb
fdivr
cwtl
rorl
clc
mov
sub
test
push
daa
jmp
mov
adc
div
nop
add
andl
pop
pop
fisttpl
shrl
repnz
outsb
xchg
jg
pop
stc
pop
sbb
inc
hlt
inc
fs
pop
mov
ja
mov
fsubrp
std
jnp
sub
into
dec
scas
xchg
mov
sahf
outsl
outsb
dec
xor
ret
xchg
mov
pop
popa
es
adc
add
test
subb
push
out
lods
mov
mov
lock
mov
mov
sub
mov
mov
or
mov
stos
cmpsb
push
arpl
stos
movsl
or
or
in
jecxz
test
cmpsb
adc
aad
adc
jo
mov
mov
push
adc
pop
inc
push
add
and
test
sub
dec
repnz
fistl
in
xchg
les
popf
lea
fldcw
fists
xchg
ds
inc
xlat
icebp
and
sbb
int
xlat
movsl
xchg
push
int3
cld
sbb
pusha
mov
or
jle
pop
cmpsb
in
in
dec
cs
sbb
insl
mov
cmpsl
cmp
jg
mov
mov
xor
push
scas
lret
push
rcll
sub
addl
and
xchg
lock
stos
push
cmp
mov
dec
test
dec
cmp
xchg
movsl
lret
push
sub
or
out
sahf
stc
dec
mov
add
rolb
or
lds
testl
cmpsl
jo
rclb
or
xchg
test
ds
pushf
cmp
cmpsl
std
aad
lock
scas
nop
add
test
mov
xchg
aaa
aaa
pop
ja
push
scas
hlt
icebp
aaa
jne
mov
push
add
mov
cmpsl
cltd
lret
dec
fldl
pop
stos
lahf
cmp
shll
rorl
lcall
stc
adcl
fs
mov
cltd
scas
inc
inc
aam
sub
ret
mov
int3
and
sub
popf
cmc
cmc
pop
jne
mov
and
mov
out
pusha
scas
jo
inc
dec
adc
sub
cmc
inc
dec
std
gs
mov
imul
xchg
xor
sbb
dec
adc
mov
or
xchg
sub
iret
jle
addr16
cmc
xlat
jp
arpl
nop
mov
push
mov
push
adc
fmuls
icebp
jbe
pop
stos
je
lret
xor
cmp
jmp
jmp
pop
xor
frstor
gs
pop
xchg
sbb
loop
xchg
or
insb
pop
pushf
xor
lahf
icebp
call
int
leave
or
push
out
lods
add
pop
aaa
jnp
and
pop
dec
out
dec
arpl
mov
stc
frstor
insl
add
push
or
push
hlt
adc
push
ljmp
inc
inc
enter
fdiv
scas
lcall
ja
xchg
xchg
pop
sbb
cmc
mov
or
adc
fstp
mov
adc
sub
push
aaa
fisubrl
sahf
or
dec
adc
mov
aas
xchg
dec
jl
scas
or
pop
jno
fisubl
ljmp
sbb
insl
mov
cwtl
mov
ror
mov
bound
bound
mov
inc
pop
outsl
sub
shlb
jne
mov
mov
fsubs
jp
sub
and
xchg
mulb
push
push
xor
lods
loop
inc
push
outsl
jbe
mul
and
add
leave
repnz
mov
loope
aas
add
sub
icebp
out
mov
xor
popa
mov
push
je
fistps
je
xchg
lods
pop
push
mov
enter
aaa
xor
into
jl
and
push
and
xor
inc
adc
fbstp
orl
push
loope
sub
and
cli
jo
daa
adc
cld
ss
addr16
lea
sub
cltd
fwait
add
push
pop
cmp
adc
scas
orl
jge
or
pop
into
inc
lret
test
mov
into
std
or
fists
call
xchg
scas
aas
or
inc
cmp
sbb
mov
punpckhwd
xor
outsl
jb
in
mov
iret
and
mov
cs
fistpll
fdivrl
inc
sub
xchg
mul
dec
pop
pop
aad
add
mov
adc
cld
lods
fisubl
fisubs
jg
mov
and
loope
rorb
gs
ret
mov
aas
sarl
mov
aas
leave
in
lods
jmp
les
sub
mov
xor
dec
sbb
sub
jns
in
icebp
jnp
std
in
mov
nop
insl
clc
pushf
inc
pop
shlb
stc
and
xchg
inc
scas
mov
das
jns
xbegin
push
xchg
fbld
call
fstl
push
dec
leave
mov
xchg
in
push
cmp
cmp
lea
cmp
lret
xor
jecxz
sbb
fdivrs
lock
int
pusha
and
and
adc
dec
cmp
fsubrp
pop
cli
repnz
sbb
and
inc
mov
adc
lods
mov
mull
add
jae
repnz
stos
add
fdivrl
scas
test
mov
js
test
xchg
sub
push
inc
add
sbbb
lcall
in
rorb
sbb
sbb
pop
cwtl
ret
sbb
dec
push
adc
pop
add
pushf
rorb
push
and
xchg
mov
and
mov
dec
and
dec
jno
test
aam
xor
or
es
sbb
lea
sbb
jae
daa
aad
jmp
xchg
or
fcmovnbe
out
cmpsl
rcl
mov
mov
push
pop
fmuls
aaa
lret
mov
mov
xorb
sub
jo
jle
cltd
xor
aas
int3
cmp
pop
inc
test
dec
icebp
dec
jmp
aaa
mov
dec
mov
popf
and
ljmp
xor
lret
test
xchg
mov
pop
mov
nop
jge
jbe
xchg
cmp
jecxz
pop
movl
sbb
cmp
adc
push
lds
mov
je
mov
aaa
cmpsl
xorl
je
adc
loopne
cmc
sti
or
and
mov
pushf
pop
mov
jnp
sub
jle
and
dec
bnd
cmpsb
dec
sbb
mov
gs
dec
fsubr
cs
loopne
test
movsb
mov
fsetpm(287
mov
out
shll
pop
and
pop
popa
decb
push
push
js
lcall
sub
sub
mov
dec
lcall
pop
mov
mov
sahf
stc
push
pop
cmp
rorl
xor
cmp
push
cmp
fstl
das
js
stos
xchg
dec
xor
fisttpl
pop
cmp
pushf
outsb
push
aad
mov
sti
fwait
aad
inc
nop
lods
pop
test
scas
xchg
xchg
int
cmp
mov
push
outsb
fildl
xor
mul
fs
or
popf
daa
rorl
movb
mov
sbb
cmc
sbb
lret
mov
and
lock
adc
mov
fdivrl
lahf
fstpt
mov
lock
inc
xor
and
mov
xlat
mov
or
popf
dec
cmp
sbb
popa
sub
aam
loop
int3
jnp
push
mov
fsub
jmp
out
stos
outsb
pop
repz
cs
pop
dec
sti
in
cmp
lock
clc
andb
ja
mov
mov
and
inc
cmp
xchg
rcr
or
ljmp
sti
repnz
cmpsl
add
mov
inc
xchg
loopne
dec
cmp
cmp
addr16
sbb
ret
add
inc
aas
std
imul
fiaddl
inc
xorl
fadds
or
and
idiv
push
inc
ret
cld
mov
add
and
mov
in
sub
js
lock
stos
lock
mov
std
cld
insb
inc
sahf
jge
add
dec
std
int3
outsl
pop
add
mov
int
mov
inc
clc
sarl
imul
jae
sahf
subl
or
push
scas
movsb
sbb
fwait
push
ret
jle
xor
shlb
jnp
inc
pop
sbb
idiv
dec
sub
fs
pop
int
loop
xchg
out
and
cmp
cs
xlat
and
push
and
fistpll
cld
pop
into
push
push
hlt
aaa
fnstsw
xchg
or
and
fstl
pushw
jg
fistpl
ss
arpl
xchg
fldt
testl
push
xchg
fwait
lock
push
ficoms
cmp
dec
std
jecxz
stos
pop
aas
das
nop
jge
fnsave
lret
xor
mov
les
ficomps
mov
cmp
imull
hlt
test
outsl
loope
xchg
repnz
testb
mull
das
jae
aaa
fistps
cmc
jle
out
cwtl
add
daa
ret
xor
scas
jae
inc
hlt
jg
mov
aas
test
popf
mov
pop
mov
aas
movlps
jl
fwait
cmp
jo
js
add
mov
pop
stc
mov
mov
test
push
adc
cwtl
jle
jl
mov
aam
cltd
cmp
movsl
outsl
pop
mov
stc
mov
enter
je
mov
add
xorb
out
adc
mov
xor
das
int
adc
pop
push
or
pusha
cltd
outsb
addl
jb
dec
push
in
shll
dec
and
mov
adc
add
and
ja
and
and
ss
mov
fld
jno
adc
xchg
inc
sub
pop
or
sbb
xchg
jecxz
jp
jbe
into
mul
gs
add
mov
int3
mov
xor
out
fcmovnbe
nop
enter
xor
mov
sbbb
or
faddl
data16
mov
lods
fs
stc
scas
movsl
gs
lret
mov
ds
pop
shr
and
cli
aas
mov
cli
jecxz
in
movsb
pusha
test
ret
jecxz
sti
clc
xchg
daa
sbb
ds
in
jbe
inc
movsb
mov
pop
repz
pusha
mov
jb
in
fs
inc
shl
mov
cmp
jl
mov
pop
sbb
movsl
scas
and
mov
add
xchg
into
ds
sbb
nop
insl
cmp
cmp
lret
subb
cmc
fistl
pmaxub
mov
iret
jbe
icebp
mov
pop
push
pop
les
dec
cmpl
out
inc
dec
in
dec
cli
sarl
lea
jmp
mov
cli
mov
sub
fcomps
mov
cmc
push
jo
mov
movsb
sbb
push
ja
outsl
in
pop
and
push
dec
aaa
xor
adc
cmpb
lods
out
mov
mov
mov
push
lods
stos
lods
test
lods
movsl
mov
inc
xchg
jl
adc
xor
xchg
stc
pop
mov
ja
xchg
cltd
repnz
iret
sahf
xchg
movsl
xchg
cmp
xchg
and
ljmp
clc
fistpll
in
popa
shr
clc
or
iret
push
insb
mov
outsb
fdivrp
fbstp
fs
icebp
popa
xchg
xor
imulb
or
cmc
jle
dec
rcrl
pop
mov
std
sbb
scas
icebp
aas
mov
lods
xchg
and
rorb
mov
sub
fiaddl
push
pop
add
mov
pop
jle
mov
dec
jo
clc
cmpsl
xor
test
add
jnp
fdiv
into
insl
gs
loop
and
jbe
cmp
out
xchg
sub
popa
lds
mov
int
test
loopne
lahf
mov
ja
in
bound
xor
arpl
ror
push
icebp
aad
imul
int
xchg
pusha
fwait
push
out
test
das
sub
push
cwtl
es
daa
sub
subb
jns
or
ficoms
inc
cmpsl
int3
push
and
adc
insb
inc
sti
ds
pop
into
jne
sti
test
gs
lock
cwtl
outsb
mov
lahf
adc
ret
pop
or
lds
mov
ja
push
rcrb
xorl
cmpsb
cmp
mov
lea
fmull
mov
mov
inc
sub
adc
cmpsl
mov
out
push
add
adc
adcl
ret
mov
jno
mov
mov
sbbb
ret
fs
pop
cs
push
adc
fmull
pop
enter
mov
loop
mov
pop
ss
mov
adc
dec
mov
mov
jbe
push
jne
dec
leave
aad
mov
mov
mov
jmp
shlb
dec
jo
aaa
pop
cltd
in
js
fs
pop
push
je
jbe
cmpsb
arpl
icebp
in
icebp
mov
aam
and
clc
jl
shlb
push
mov
cmp
xor
dec
aad
das
sbb
hlt
push
xchg
jecxz
pop
cmpxchg
pop
imul
aaa
add
xor
movsb
jne
or
cmp
mov
repnz
push
push
lods
into
mov
popa
test
aam
aas
inc
mov
lret
repnz
fnstsw
xor
adc
mov
cmp
jg
sbb
jae
xchg
leave
dec
aam
lds
push
cmp
out
dec
mov
es
mov
xor
adc
push
lods
lods
xor
lahf
lahf
es
push
mov
pop
sub
cwtl
push
data16
mov
aas
ja
insb
push
ret
in
add
mov
ja
test
sbb
out
mov
les
lods
sub
inc
in
outsl
jae
je
test
mov
bound
push
lahf
pop
sub
or
ret
stos
daa
xchg
inc
inc
xlat
jecxz
lret
sub
cmpsb
and
sbb
lods
popa
xchg
lods
push
jb
mov
xchg
clc
push
icebp
notb
mov
add
mov
es
xchg
cmpsb
or
int
cs
sahf
sub
xor
or
jnp
pop
subb
or
scas
ss
enter
cltd
jle
cmp
dec
xchg
pop
inc
sub
xchg
adc
and
or
shll
sub
mov
adc
jecxz
hlt
inc
cli
mov
pop
sub
dec
cwtl
movsb
jns
mov
mov
mov
mov
inc
mov
loop
push
das
gs
jns
cmp
mov
add
ss
push
sub
pause
jb
add
jno
xor
frstor
and
stos
mov
imul
jb
lock
dec
cmp
jmp
test
sti
loope
mov
add
loopne
out
jbe
addr16
push
je
stos
out
push
push
sti
xor
add
into
jae
ja
xchg
clc
dec
fucomip
stos
push
mov
xchg
rcl
jle
lods
inc
or
sbb
sbbl
jg
ficomps
cs
scas
xor
pop
xchg
in
mov
shll
clc
aas
mov
sti
rol
hlt
lods
nop
xchg
push
enter
or
mov
mov
mov
cltd
pop
neg
push
insl
xchg
stos
sub
cmp
cmp
xor
repz
fs
arpl
sub
and
push
out
out
sahf
out
lods
pop
ljmp
push
clc
and
hlt
loopne
xlat
adcl
ret
mov
cs
ficomps
shll
ret
jne
dec
mov
ficomps
xchg
lret
pop
lcall
test
and
es
lods
push
ljmp
std
jge
sbb
sti
jge
mov
adc
mov
adc
inc
dec
jecxz
movsl
test
fisubrs
in
aas
jl
arpl
stos
sbbb
jbe
and
fdivrl
aas
sbb
imul
div
dec
shlb
pop
cli
mov
xchg
fcomip
mov
imul
sbb
cli
or
lock
ljmp
mov
push
and
mull
xor
gs
inc
fcoms
adc
jnp
andl
fstpl
dec
dec
imul
xchg
or
and
out
sahf
out
add
icebp
xor
push
push
inc
inc
movsb
sub
pop
push
or
movsl
neg
cmp
inc
xchg
xchg
mov
push
inc
mov
pop
mov
mov
ficoms
inc
fcoms
imul
std
mov
jnp
lods
mov
xchg
loopne
lds
imul
jo
add
sbb
lods
xchg
and
xor
es
adc
cwtl
jnp
call
mov
jmp
insb
mov
sub
stos
fdivs
out
std
loope
pop
stos
iret
xor
jbe
inc
clc
push
addr16
cmp
cld
lds
inc
mov
imull
test
out
cmp
mov
pop
icebp
aas
xchg
adc
daa
clc
dec
lock
loope
ret
fistpl
cli
test
lcall
std
xchg
pop
and
xchg
mov
sti
mov
adc
dec
dec
sub
cwtl
test
aaa
ja
push
push
mov
loop
push
into
pop
cmpsl
xchg
or
int
mov
inc
imulb
pop
cmp
in
dec
sub
push
test
mov
iret
fdivp
mov
inc
sarb
fsubrp
fcmovnbe
inc
arpl
inc
lret
cltd
hlt
popl
jne
filds
subb
aas
cmp
inc
dec
cmc
imul
cmp
pop
and
fcmovbe
sub
cmp
int
repz
sar
fstpl
mov
popa
lret
xchg
fxch
xchg
aas
loop
cmp
sub
adc
lods
inc
or
xor
ljmp
jb
or
iret
repnz
fisubl
mov
sbb
mov
inc
pop
hlt
adc
ja
jns
scas
aaa
aaa
and
jle
dec
pop
adc
mov
mov
cltd
push
pop
insl
push
push
or
fstpl
mov
push
sbb
mov
adc
fists
adc
xorl
ds
in
inc
mov
push
mov
adc
in
add
hlt
movsb
iret
jge
sti
jmp
jge
or
sub
imul
and
in
lcall
xchg
fldcw
sub
fstl
fildll
imul
jnp
push
sub
lret
push
repz
xchg
mov
xchg
and
dec
mov
pop
xchg
add
nop
push
cs
mov
sti
pop
nop
jecxz
xchg
hlt
mov
cltd
cmpsb
into
mov
pop
inc
push
inc
and
dec
imul
ror
pop
in
fisttpll
fisubrs
aaa
notb
cmp
xchg
cwtl
mov
push
int3
mov
lods
ret
jo
fnstenv
add
adc
aam
in
mov
mov
xor
adc
pop
mov
pusha
sbb
jb
dec
sub
fucomi
sarb
mov
sbb
mov
es
lods
loope
lret
push
flds
push
scas
inc
stos
dec
pop
jg
lret
cld
addr16
int
jle
mov
mov
fwait
shrb
inc
ss
ds
pop
scas
mov
lret
xor
pusha
mov
xchg
add
mov
js
sti
ljmp
test
mov
cltd
and
insl
data16
push
loop
and
and
les
jmp
add
jae
lds
lock
fs
cmp
jl
cmp
sbb
aam
inc
cmp
stos
dec
int3
aaa
cmp
and
js
rcrb
push
push
bnd
add
aad
xor
pop
aaa
cmpsb
loop
and
inc
test
inc
jge
arpl
mov
fstps
test
fsubrs
jnp
sub
fwait
in
cli
movb
sbb
jge
xor
sbb
xchg
bound
adc
xor
ss
mov
test
and
mov
rclb
mov
add
call
jp
mov
mov
add
in
mov
cwtl
in
cwtl
out
mov
stc
push
into
inc
fdivrl
xchg
lcall
movsl
or
dec
imul
outsb
popa
fcomps
mov
ss
adc
xchg
lods
xchg
int
fsubrp
stos
in
not
mov
sub
mov
xchg
jp
adc
loopne
enter
sbb
add
fisttpll
das
dec
mov
repnz
pop
outsl
push
ljmp
mov
pop
iret
outsl
mov
add
and
mov
movsl
popa
call
xchg
insb
xchg
inc
das
and
push
xchg
dec
sbb
loop
pop
jnp
dec
dec
jmp
add
mov
mov
sbb
adcl
decb
loope
pushf
mov
sahf
pushf
add
cmp
lods
jo
jmp
xchg
xlat
dec
mov
out
xor
ret
pop
jge
cld
add
repz
out
in
dec
adc
es
scas
out
inc
xor
xchg
in
imul
stos
cmp
inc
cltd
mov
les
or
sub
lret
sbb
jne
in
xchg
jl
pop
xchg
out
add
lret
scas
repz
out
xor
jbe
mov
xor
decb
into
mov
int
arpl
adc
mov
icebp
rcrb
aad
in
mov
repz
enter
inc
or
sbb
scas
add
insl
sub
jae
mov
mov
add
dec
hlt
xor
stos
std
jnp
pop
fwait
xchg
in
mov
mov
push
pusha
outsl
cmp
add
pop
mov
mov
push
test
adc
ss
push
or
add
ret
mov
fsts
imul
loope
pushf
shr
cwtl
xor
insl
pop
jne
xchg
xor
mov
orb
push
and
mov
out
incb
and
scas
rorb
js
mov
and
jae
imul
test
sbb
push
mov
std
std
sbb
js
lods
cmpsb
sbb
cltd
push
rol
push
out
and
shlb
loopne
pop
mov
jo
mov
icebp
cli
outsb
mov
xchg
data16
call
mov
mov
mov
xchg
test
mov
mov
shr
xor
cmp
inc
adc
outsl
int
int3
sub
and
xchg
mov
or
dec
cmp
fcomps
scas
mov
lock
xor
sub
cmp
cld
lods
mov
pop
inc
jne
or
push
cmp
jo
xchg
adc
jge
faddp
mov
xchg
inc
xchg
in
mov
fwait
pop
pop
rcrl
jne
and
cli
repnz
sbb
addr16
fs
sub
xchg
inc
lods
inc
mov
loopne
pop
cmp
push
aad
push
insb
ss
or
mov
add
and
in
gs
xchg
mov
outsl
mov
inc
fistl
popf
cmp
lods
std
push
imul
pop
mov
mov
ss
push
cli
push
or
add
stos
ljmp
adc
dec
mov
js
push
inc
sbb
cwtl
fidivrl
out
aam
lret
addr16
imul
lock
adc
lahf
mov
inc
adc
and
es
sti
dec
xor
jns
xor
bnd
sbb
insb
jno
test
cmpsb
ret
mov
dec
mov
pop
iret
lcall
in
mov
or
lods
lea
imul
jbe
shrb
inc
sti
js
and
fsubrl
push
cwtl
inc
jo
add
test
jmp
sub
call
cmp
push
lret
fldl
imul
movsb
in
cmpsb
outsl
mov
sub
adc
sub
mov
aaa
loope
xchg
icebp
inc
rorl
pop
cmpsl
jecxz
int
sbb
cli
mov
and
shr
shrb
movsb
in
mov
sbb
mov
ficoml
mov
push
xor
bnd
pop
ljmp
fxtract
int
stos
scas
enter
popa
lahf
mov
sarb
pop
andb
and
pop
dec
mov
sahf
insl
inc
xor
lret
in
mov
pop
scas
dec
mov
xchg
sbb
xor
sbb
and
adc
sti
cmpsl
push
incb
or
adc
mov
push
xchg
pusha
stos
and
in
ds
movsb
cmpsb
jecxz
test
mov
jae
jp
cmpsb
inc
mov
xor
mov
pop
imul
sarb
movsl
imul
push
fcmovnu
scas
mov
iret
inc
xchg
cs
mov
stos
and
arpl
sbb
icebp
jo
int
push
bound
sbb
sti
aam
xchg
jno
dec
mov
in
sub
das
pop
xchg
adc
mov
cltd
jb
outsb
xor
cmpsb
sahf
or
mov
push
popa
insl
xchg
repnz
imul
rol
test
repz
add
xchg
mov
stc
fidivl
and
aas
dec
cltd
pusha
ucomiss
jp
in
rcrb
loop
rcrb
dec
lock
je
adc
les
cmp
push
loopne
pop
fldenv
psubsb
hlt
push
mov
daa
leave
add
add
adc
shl
std
jnp
mov
and
fisubrs
sarl
mov
and
ss
add
test
icebp
int3
xchg
outsl
dec
repnz
jmp
jno
leave
pop
pop
mov
pop
sbb
pop
sbb
nop
lods
push
in
outsb
cmp
sbb
lret
stos
push
loopne
movsl
sub
ret
pop
mov
ds
pop
or
sbb
and
pop
xchg
push
mov
adc
dec
adc
xchg
push
enter
mov
adc
mov
dec
imull
inc
test
sar
xor
std
inc
or
pop
dec
mov
adc
pmaddwd
mov
and
aam
cmp
fists
ret
mov
rcrb
insl
xchg
nop
cmpsl
ret
arpl
jnp
ljmp
test
loopne
lods
outsl
xchg
sub
xlat
imul
cmpsl
bound
jne
outsb
or
or
xchg
shlb
stc
arpl
jne
sub
jl
pop
scas
dec
stc
push
daa
cwtl
pop
clc
adc
cli
iret
cmp
xor
dec
lods
out
add
mov
xchg
inc
lcall
nop
sbb
mov
mov
lods
lret
out
xor
pop
cwtl
rcll
pushf
jno
ret
push
in
into
insl
mov
dec
dec
test
outsb
xor
jp
cmp
cmp
out
fucomip
push
test
lds
xor
sub
xchg
inc
sub
sub
sbb
es
dec
insb
fmulp
shl
pop
mov
or
fildll
ret
inc
sbb
cwtl
ficoms
out
jecxz
out
inc
mov
sbb
lea
decl
ret
mov
xor
mov
pop
loop
dec
sub
loope
fmuls
sarl
addr16
ficoml
mov
add
decb
push
rclb
dec
enter
mov
or
fisttpll
inc
mov
movsl
mov
std
mov
out
jge
and
js
lock
loope
ret
decl
dec
test
ljmp
test
jl
sbb
fistpl
add
cwtl
dec
lock
sarb
mov
mov
insl
fimuls
iret
mov
ja
pop
cmpb
popa
push
cmp
ds
push
inc
cwtl
aaa
ficoms
xorb
fcomps
sbb
cmp
cmc
in
bound
out
sbb
push
cmp
push
and
sbb
and
shl
dec
dec
cmp
jecxz
inc
mov
push
dec
push
into
xor
jle
dec
sbb
jge
xchg
cmpsb
js
mov
loopne
jne
jp
sub
xchg
mov
fcoml
fwait
mov
xor
xchg
mov
fs
mov
pushf
arpl
xor
aad
mov
fmul
inc
call
sub
in
nop
mov
loope
ja
sub
xchg
loopne
pop
mov
sub
push
aas
ficomps
fwait
out
adc
lods
dec
adc
mov
cmpsl
movsb
gs
jl
cmp
inc
pcmpgtb
pop
nop
xchg
push
dec
mov
cmp
in
and
popa
ficomps
mov
aas
frstor
mov
loop
cmpsl
insb
daa
arpl
mov
mov
pop
in
fsts
es
int3
push
pop
sti
sub
scas
pop
xor
imul
sbb
fstps
lahf
sub
adc
outsl
aad
mov
sarl
cmp
ds
xchg
jbe
xchg
sar
jnp
into
or
out
xor
and
popa
mov
push
pop
das
xlat
lods
mov
jl
arpl
push
jbe
stos
jg
cmp
dec
popa
jl
inc
xor
icebp
dec
xor
test
pop
nop
test
das
sub
cld
xor
addr16
cld
xchg
cli
hlt
push
out
rol
nop
outsl
addb
fadds
sbb
pop
sbb
leave
xor
cmpsl
pop
in
xchg
popf
stos
mov
insb
push
stc
adcl
mov
aaa
xchg
pop
mov
fidivrl
fcompl
pop
clc
pop
movsb
xor
lahf
sahf
cmp
lret
aad
push
ss
mov
ja
mov
adc
mov
add
sbb
hlt
or
dec
aaa
fadds
mov
jo
arpl
repz
ret
mov
cmp
incb
adc
test
add
lcall
dec
jl
push
inc
pop
inc
dec
lret
mov
nop
inc
mov
bnd
adc
loop
out
jno
cmp
fxch
out
imull
push
stos
jne
mov
sbb
mov
jmp
mov
sub
mov
fimull
stc
outsl
pop
inc
xchg
into
adc
cmpsl
sbb
push
clc
cmp
lcall
xor
cs
dec
sub
push
push
movb
mov
loopne
push
push
push
jo
lods
and
scas
jg
pushf
push
or
repz
jo
in
imul
bound
cmc
loop
sbb
cmp
ja
fnsave
scas
inc
cmp
jge
nop
loopne,pt
cmpsl
push
sbb
inc
les
daa
push
fsubs
inc
xor
mov
mov
in
orb
xorl
rcrb
fisttpll
inc
and
mov
pop
mov
add
fwait
push
aam
xor
imul
push
mov
roll
pushl
stc
or
and
popa
dec
add
outsl
mov
xor
ljmp
mov
lds
xlat
je
dec
insb
sub
sub
dec
mov
pushf
xor
lret
jecxz
cmp
pop
or
imul
repnz
inc
adc
adc
mov
clc
cmp
pop
popw
fists
stos
sbb
fisubrs
xor
ret
adc
or
leave
dec
fwait
mov
and
cli
inc
mov
cmp
stos
adc
sub
cwtl
xchg
and
sub
or
lods
push
bound
and
cmp
adc
sbb
adc
in
pop
adc
xor
pop
and
lods
inc
cwtl
fwait
dec
sahf
cmp
mov
sbb
das
mov
jge
cli
pop
xor
mov
and
mov
sub
mov
adc
es
cmp
mov
pop
mov
addr16
setle
repz
cwtl
sbb
cmpl
fadds
pushf
xor
xchg
maskmovq
imul
jp
ret
mov
cltd
shll
sbb
ja
fdivs
popf
push
add
sub
dec
jae
shr
and
call
xor
enter
imul
fwait
sub
iret
test
imul
push
push
inc
out
out
sub
aad
sti
fstpl
ds
cmp
cmp
pop
mov
lcall
add
jae
mov
movsb
jo
call
stos
inc
push
cli
sub
pushf
pop
dec
idiv
xchg
mov
adc
pop
add
imul
xchg
mov
imul
adc
add
out
sub
lods
movsl
xchg
mov
push
inc
test
jnp
sahf
notl
dec
sti
jnp
outsb
lods
pop
xor
dec
ss
lock
or
loop
rcll
xchg
mov
push
push
push
jl
cmp
push
jle
pop
push
push
push
mov
push
pop
mov
push
push
gs
mov
mov
lahf
enter
sbb
scas
jecxz
push
ja
fwait
mov
in
stc
jge
jnp
or
dec
push
push
push
mov
adc
mov
repnz
sub
pop
dec
loope
lods
inc
fistpl
push
jbe
mov
icebp
mov
lods
xchg
push
int3
rcll
out
jb
dec
lods
jp
gs
mov
mov
pop
stos
lret
insl
cmp
lock
pop
lods
outsb
pop
scas
ds
push
lock
xchg
fisubrs
test
test
jns
ret
jmp
mov
out
sub
orb
push
pusha
pop
add
push
inc
iret
xor
pushf
mov
aam
jns
call
inc
cmc
dec
and
sub
adc
bound
mov
jne
jb
lret
mov
es
xor
push
mov
iret
fwait
addb
aam
or
scas
jmp
dec
cmpsb
mov
je
mov
ss
bound
shl
adc
add
xchg
out
js
test
mov
test
cltd
inc
push
lods
and
loopne
pop
andl
imul
ja
decb
int3
cwtl
xchg
pop
pop
and
xchg
or
rcrb
mov
insl
dec
test
in
movsb
mov
lods
cmc
aas
jp
out
jnp
push
cmp
push
cmp
xchg
jle
mov
scas
mov
sbb
enter
bound
aaa
inc
mov
int3
add
insb
mov
dec
cmpsb
xor
push
ja
mov
jge
ds
jle
movsl
gs
std
xchg
sbb
fimull
mov
enter
cli
insb
ret
xchg
sbb
jbe
repnz
mov
mov
stos
sub
lret
out
gs
or
pop
push
out
leave
jbe
and
inc
inc
scas
inc
lds
or
dec
dec
push
sbb
adc
outsl
dec
lret
mov
mov
pop
rcll
adc
cltd
adc
cmpsb
sbb
adc
outsb
cwtl
add
leave
dec
testl
ficompl
adc
dec
outsb
mov
push
push
mov
movsl
subl
xlat
pop
add
sbb
rcll
or
fnstenv
jecxz
pop
fstpt
cmpsb
out
and
pop
out
test
repnz
out
hlt
jmp
push
mov
push
add
rcl
icebp
mov
xchg
mov
loop
pop
mov
pop
pop
outsb
inc
jle
repnz
repz
push
mov
pop
fcomps
sbb
out
into
stc
test
insl
push
mov
test
jne
repz
nop
pop
outsl
fdivrl
cmpsb
cmpb
fwait
jbe
mov
and
jmp
mov
jecxz
in
fisubrl
inc
leave
cli
mov
push
cmpsb
bound
adc
loop
inc
or
push
shl
jbe
loope
mov
mov
mov
inc
clc
ret
jp
movups
push
adcb
mov
sub
aaa
pop
sti
cmpsl
cmp
jmp
jne
mov
xor
and
in
and
cmp
push
or
xor
or
stos
inc
pop
jae
inc
test
loop
fisubrl
ja
adc
mov
mov
jle
nop
xlat
adc
or
add
mov
je
js
mov
std
xorb
sub
pop
dec
stc
pop
popf
lods
and
sub
int3
mov
push
sub
mov
fxtract
int3
push
mov
mov
or
xchg
test
mov
fadd
inc
sbb
pop
stos
rcr
or
jmp
cmp
dec
hlt
cmp
xchg
mov
hlt
stc
movsb
push
adc
pop
addl
jle
mov
outsl
xor
or
jl
je
repnz
pop
les
movsb
xchg
int3
mov
or
test
gs
pop
and
je
push
mov
lret
xchg
inc
jb
enter
and
cmp
xor
dec
dec
sbb
shrb
and
pop
mov
mov
mov
or
stos
mov
xchg
inc
fucomp
in
adc
gs
fnstsw
sub
jl
leave
jle
mov
pmulhw
xchg
cmp
test
push
out
mov
mov
repz
jae
fistpll
xor
and
pop
jo
shlb
fidivrs
hlt
gs
mov
push
pop
xlat
cli
pushf
fldt
add
aaa
fdivl
lcall
ds
or
mov
add
mov
repnz
jno
or
imul
insl
adc
xor
dec
cwtl
xchg
jg
adc
imull
lret
dec
popf
or
movsb
std
add
repz
je
dec
jg
lea
nop
out
add
dec
jbe
daa
jb
daa
test
pop
cli
and
pop
pop
push
test
aam
jb
bound
imul
xchg
cmpsl
jle
bound
repnz
jnp
push
xchg
and
xchg
xchg
jmp
stos
pop
cmpsb
into
stos
pop
and
xor
and
inc
lret
xchg
pop
stc
mov
dec
lods
fisubrl
jnp
add
add
or
pop
push
cld
jae
lcall
loop
ret
das
jecxz
gs
pop
add
jg
cwtl
sub
cwtl
aam
in
xor
adc
dec
mov
sub
fbld
in
iret
sbb
mov
mov
push
in
adc
inc
mov
lcall
push
loop
pushf
or
jl
mov
add
mov
mov
xchg
pop
lcall
or
daa
mov
push
test
push
stos
inc
es
inc
pop
ret
lea
hlt
adc
push
sahf
jb
and
sbb
xchg
push
das
imul
mov
sbb
jae
adc
fdivrs
out
inc
mov
icebp
stos
std
inc
aas
and
outsl
mov
mov
pop
push
leave
jns
jns
push
add
adc
outsl
sub
mov
popf
pop
stos
or
jmp
mov
push
xchg
inc
cmp
shl
inc
stc
lahf
inc
and
lock
adc
sub
test
out
cld
aaa
push
or
mov
jbe
shrb
or
xlat
out
sbb
aad
lock
test
adc
inc
sbb
aad
cli
int
es
sti
push
lock
mov
push
divb
shlb
int3
icebp
mov
fidivrl
lods
scas
dec
lods
push
ds
inc
inc
dec
and
out
sbb
test
inc
pop
cwtl
or
jp
aam
sti
pop
sub
jecxz
outsl
xchg
and
insb
sarl
arpl
frstor
insl
fists
xchg
inc
pop
push
jo
sub
and
es
repz
jbe
loope
loop
or
xlat
xchg
and
pusha
ret
popf
mov
ret
in
sub
or
mov
cwtl
aaa
js
mov
add
xor
aad
fs
jnp
adc
dec
arpl
mov
jne
sub
mov
mov
test
pop
xchg
xchg
sbb
jecxz
push
mov
xchg
adc
mov
adc
aas
pop
repz
aaa
je
sbb
fsub
scas
stos
dec
cltd
or
rcr
pushf
jne
fildll
jmp
cmp
pop
jp
xor
gs
and
jne
jne
fsubr
dec
sbb
in
hlt
push
jbe
imul
mov
cmpl
dec
in
mov
clc
pop
dec
and
test
xor
xor
mov
iret
int
cmp
mov
fsubrs
xchg
test
sub
jecxz
pop
lret
movsb
in
movsl
mov
or
lock
jle
mov
cmpl
fadds
add
scas
jle
mov
aad
loope,pn
inc
aam
insb
mov
leave
mov
ret
in
push
mov
js
imul
and
mov
out
ja
into
xor
fs
jo
inc
mov
mov
xor
sub
jne
and
mov
imul
fadds
pop
sarl
clc
fs
daa
cmpsb
cmpsb
cltd
ja
cmp
fcoml
jecxz
jb
lea
cs
ja
cmp
xchg
push
pusha
pop
mov
lcall
mov
cli
or
jno
out
jle
sbb
pop
fnstcw
stos
out
push
ret
jl
or
in
mov
ficomps
and
cmc
mov
push
jl
inc
sbb
and
adc
or
fsubrl
mov
fs
dec
ljmp
xor
push
ljmp
movsl
int
xchg
cmp
mulb
dec
xor
movsl
dec
or
call
pop
dec
xor
pop
in
inc
mov
push
outsl
subl
pop
dec
xchg
xchg
aas
pop
lds
sub
adcl
add
mov
es
sahf
scas
out
xchg
xchg
or
ljmp
jne
int
inc
xchg
movsl
push
xor
xor
mov
or
rcrb
nop
in
mov
roll
xchg
iret
scas
out
and
inc
and
pop
out
mov
cli
scas
cld
mov
xorb
shl
bound
mov
movl
ror
add
mov
or
fwait
popf
out
out
shrl
icebp
popl
mov
jnp
mov
xchg
mov
aaa
cmpsb
mov
cmp
aam
out
stc
popf
jle
xor
sub
ret
sahf
iret
push
adc
lds
xor
add
and
sahf
loopne
pop
in
loopne
xchg
mov
mov
push
shrb
xchg
xchg
gs
mov
mov
dec
jnp
dec
rclb
clc
pop
pop
insb
lahf
out
mov
mov
jg
loope
out
sub
dec
mov
inc
subl
in
add
xchg
cmpsl
xchg
xor
cmp
adc
xchg
mov
mov
jnp
push
roll
cwtl
lret
push
mov
xor
sti
xchg
js
mov
jns
add
xchg
stc
push
mov
add
inc
mov
inc
loope
fstpl
aam
and
rorl
sub
or
hlt
sbb
cmpsl
stc
inc
mov
pop
mov
mov
lods
fs
pop
mov
sbb
push
cmp
int3
repnz
push
mov
loopne
and
xor
cwtl
cld
lods
dec
das
mov
dec
rorb
stos
movsl
mov
stc
test
xor
inc
icebp
dec
mov
inc
test
jno
int3
sub
aaa
mov
lret
rorl
loope
int
je
mov
xchg
addr16
jne
data16
jge
push
jae
stc
xlat
movsb
push
push
lds
icebp
sahf
ljmp
ja
xor
push
test
mov
leave
sbb
xor
pop
repz
pop
popa
xor
sbb
jmp
test
jb
push
mov
or
fstpl
shrl
mov
dec
push
in
cs
ds
mov
cmp
push
adc
lds
fimull
inc
add
xor
call
mov
pop
mov
rcrb
jo
or
addr16
xor
insl
std
dec
lcall
jge
jecxz
add
push
imul
cmp
dec
ficoml
lret
add
inc
add
outsb
imul
pop
mov
or
loopne
ds
scas
mov
mov
pop
push
xchg
int3
cmp
es
inc
or
fsubrl
je
mov
push
std
jmp
and
sub
mov
bound
add
mov
or
shlb
pop
mov
out
pop
cmpsb
cwtl
ss
xor
add
aaa
mov
and
aad
add
movsb
pop
mov
push
push
xor
add
inc
ljmp
pop
xlat
stos
dec
bswap
sbb
cmp
xor
sub
test
sub
jb
sbb
cmp
sbbl
push
arpl
stos
fisubl
dec
dec
out
add
into
mov
xor
inc
push
mov
subl
jmp
aas
in
dec
push
and
or
push
adc
inc
add
pop
push
pusha
hlt
and
dec
js
dec
push
cmp
insb
test
adc
sub
pop
dec
xor
push
arpl
testb
jge
mov
lock
pop
sarb
sti
xchg
sub
pop
in
rclb
push
inc
or
dec
popf
sbb
add
fcoms
dec
lret
and
data16
mov
jg
xchg
inc
ja
inc
push
jecxz
adc
lea
mov
jbe
adc
stc
and
jnp
mulb
out
push
adc
sub
xor
jnp
dec
jne
stos
nop
push
and
icebp
test
jbe
sbb
xchg
sarb
cmpsl
and
push
push
popa
es
pusha
outsl
pop
mov
jmp
and
mov
testb
and
mov
push
lods
dec
fidivs
lods
cli
jg
outsb
or
cld
lea
rol
dec
mov
in
and
or
or
lods
sub
and
cmpsb
nop
addb
mov
and
test
dec
mov
sub
mov
add
and
mov
inc
push
pop
cmp
cmp
out
xor
js
leave
shl
leave
roll
pop
enter
lock
cwtl
pop
cmp
fcomip
jge
icebp
xor
ss
test
push
mov
sub
into
mov
mov
stc
mov
outsl
push
div
mov
stos
xor
sahf
in
adc
cmc
jl
xchg
xor
jne
leave
sbb
inc
mov
cmp
mov
pop
lahf
cmc
mov
cmc
vmread
pop
outsb
cmp
into
jl
mov
scas
mov
push
xchg
dec
sar
pop
xchg
arpl
jecxz
push
inc
icebp
dec
lds
jp
je
popf
test
fidivrs
fldl
inc
jae
out
mov
mov
stos
pushf
popa
aas
push
and
repnz
ss
push
leave
mov
push
aaa
hlt
insl
push
sub
xchg
ja
inc
and
inc
lock
loope
jmp
loop
shll
xor
loop
pop
gs
jnp
push
or
mov
inc
fidivs
stos
insl
imul
sbb
inc
xor
mov
pop
mov
test
add
dec
jecxz
loopne
mov
adc
inc
mov
enter
mov
repnz
dec
aaa
mov
mov
mov
repnz
push
add
sbb
mov
cmp
les
cmc
xchg
test
roll
int
and
xchg
bound
rcrl
sub
sti
sarl
add
stc
test
test
popf
pop
test
rcl
jmp
js
stc
and
mov
push
jle
fcomps
loopne
cltd
pop
cmpsb
mov
loope
jno
clc
and
lods
jne
cmpsb
inc
cmpsb
push
dec
outsb
xchg
lods
imul
cmp
aam
inc
xchg
das
mov
fdivr
xor
push
cmc
mov
es
out
pop
pop
outsb
mov
bound
adc
test
pop
sub
lcall
fadds
push
add
outsl
ljmp
hlt
sarb
jmp
js
dec
rcl
mov
lds
jno
cmp
pop
outsl
mov
lods
daa
push
hlt
out
test
push
outsb
lea
jl
notb
push
lret
insb
mov
mov
xlat
gs
sbb
mov
add
adc
inc
cwtl
in
dec
mov
mov
imul
outsb
inc
test
or
sbb
in
dec
nop
xchg
stos
mov
pop
cmc
or
and
jge
fsubrp
dec
cmpb
cltd
movl
mov
add
cli
imul
in
insl
xchg
scas
push
and
and
fwait
sub
arpl
inc
or
les
push
andl
sbb
mov
push
fstpt
lock
dec
scas
and
pusha
push
cmpsl
mov
pushf
mov
mov
rclb
sub
insl
and
jecxz
push
sub
sbb
xor
cmp
ljmp
inc
or
cmpb
in
inc
pop
and
js
mov
or
jae
xchg
sbb
lods
cmp
out
xchg
lret
push
xlat
adc
pop
fs
mov
cld
ljmp
xor
jecxz
shlb
xchg
sarl
mov
inc
jbe
ret
outsl
in
popa
fidivrs
je
mov
xor
js
xchg
test
cmp
adc
cmp
ja
or
in
xor
mov
and
push
and
push
into
xor
jne
push
dec
jmp
dec
push
inc
fwait
xlat
ljmp
xor
fs
mov
jne
adcb
push
jne
push
or
negl
jb
jle
idiv
int
mov
lcall
mov
jge
fsubr
mov
jne
adc
lret
lret
inc
push
dec
dec
xor
mov
and
mov
cs
and
stos
lock
sar
fadd
or
add
push
repnz
cmp
mov
lea
add
inc
sbb
pop
or
push
xchg
jmp
scas
jmp
loop
out
mov
data16
xor
and
loope
test
pop
mov
add
scas
xchg
jae
lods
lea
mov
jmp
push
xor
adc
bound
aas
sarl
mov
call
int
fsub
pop
daa
push
icebp
jns
sbb
dec
xchg
repz
mov
pop
punpckhdq
scas
jp
aaa
cmc
out
dec
leave
loope
insl
sub
int
enter
hlt
mov
xchg
data16
test
addr16
test
fdivrs
outsb
cmpsb
and
in
rcr
push
push
dec
fwait
pop
pop
insb
or
jbe
sbb
xchg
je
ret
out
push
aaa
sub
call
stos
mov
test
mov
add
adc
rorl
dec
cli
xor
sub
jne
lret
test
or
jge
mov
fwait
mov
inc
popf
imul
xor
cmpsl
cmp
push
mov
sub
imul
sbbl
adc
push
scas
loop
hlt
addb
or
xchg
ret
dec
cmp
call
lahf
mov
add
int3
cltd
rorb
mov
jg
xchg
gs
dec
mov
das
sti
frstor
adc
je
aam
in
jle
push
aas
mov
imul
ja
or
or
gs
add
push
cmp
mov
std
mov
add
xlat
push
cmp
jb
fbld
dec
and
xor
testb
pushf
outsb
pusha
add
out
cmp
and
adc
mov
mov
inc
push
mov
test
cmc
pop
cmpl
mov
xor
push
divl
mov
pop
mov
movsl
cmp
mov
cmc
sub
pop
mov
xor
pop
cmp
or
sets
add
shlb
pop
gs
add
cmp
inc
jecxz
out
call
imul
push
sbb
cmp
cltd
aam
cmpsb
stc
into
lahf
xchg
add
pop
ret
insb
ret
mov
fwait
sbb
adc
adc
ljmp
les
xchg
mov
in
lea
popa
mov
adc
cld
mov
lea
hlt
int
das
jle
jge
or
jns
jle
int3
lcall
pop
aas
cmp
lds
popf
inc
out
inc
push
mov
outsb
pop
out
sqrtss
pop
stos
mov
outsl
sbb
rolb
cmp
mov
jmp
dec
sub
insl
test
rclb
aad
xchg
int3
xorb
lock
pop
imul
shl
pop
aam
push
mov
pop
dec
mov
push
sbbl
mov
out
cmovno
incb
sbb
cmp
pushf
pop
mov
es
fldcw
sbb
and
sub
fstpl
and
add
aad
cmpsb
jmp
or
test
bound
ret
push
bound
pushf
lods
shrb
in
pop
lcall
fsubrl
add
fistpll
loopne
pop
mov
and
xor
pop
in
pop
into
js
xor
insb
mov
mov
xchg
mov
xchg
scas
pop
stos
ja
int
sub
push
dec
dec
mov
xchg
lcall
loope
lret
icebp
push
pop
cmc
jecxz
js
mov
jbe
lret
sbb
ss
push
or
bound
sub
nop
in
sub
inc
xor
dec
push
pusha
neg
jmp
mov
ret
cmp
arpl
fnstsw
dec
test
cwtl
stos
and
cmp
ljmp
idiv
cmpl
sbb
data16
hlt
mov
jb
cmp
in
pop
fwait
push
rclb
inc
jmp
repz
xchg
push
test
pop
sbb
movsb
enter
sahf
jno
rorb
inc
out
sti
cld
fistps
xor
addl
data16
repz
sbbl
or
dec
ljmp
mov
or
sub
xchg
mov
and
cltd
inc
mov
aaa
mov
push
mov
mov
inc
dec
add
or
jg
daa
push
nop
std
adc
sti
sbb
jne
xlat
call
pop
shll
and
arpl
inc
das
rcll
xchg
pcmpeqd
lahf
mov
push
or
mov
lods
and
lds
pop
xor
repz
or
icebp
push
xorl
pop
sub
mov
out
mov
pop
gs
jbe
std
fnstcw
insb
mov
lret
fsubr
mov
jmp
dec
adc
jnp
lods
mov
aas
int
cmp
adc
xchg
out
mov
std
loope
divl
inc
ret
and
jne
ret
push
rolb
and
stos
lret
repnz
inc
pop
mov
fnsave
in
inc
cli
pusha
ret
push
movsl
loop
push
xchg
popf
mov
fstps
push
push
dec
stos
push
call
pop
xchg
loopne
fdiv
mov
ret
pop
out
cmp
xor
lods
pop
out
in
fs
pop
and
jo
jmp
stc
jp
add
fcmove
xlat
ljmp
inc
push
mov
pop
outsl
outsl
cmp
pop
push
ret
dec
stos
iret
mov
sbb
or
inc
add
movsl
xor
add
lock
dec
aaa
scas
std
dec
sbb
jne
pop
add
fsubs
in
enter
mov
pop
adc
inc
mov
push
mov
adc
popf
scas
jno
dec
sahf
adc
jo
xchg
and
jne
cmp
pop
fs
out
aas
mov
dec
jmp
or
in
sbb
leave
out
xchg
adc
dec
and
push
push
jge
data16
fsub
in
sbb
test
aad
mov
pop
scas
std
or
ror
test
sub
lret
pushf
sub
repnz
loop
rclb
inc
jg
rol
std
test
fistps
out
or
jl
pop
subl
adc
adc
sub
xor
dec
rolb
dec
or
mov
call
jae
mov
or
mov
push
pop
pop
js
mov
adc
mov
cmp
pop
aaa
cmp
lea
and
ja
dec
jge
jle
ja
sbb
les
fdivs
rcll
inc
nop
and
fcomp
jno
rorb
push
sub
divl
inc
test
and
in
pop
sbb
loopne
mov
lods
hlt
sar
aam
cmp
pushf
mov
jne
lods
test
inc
jp
sbb
adc
mov
in
push
loope
movsl
adc
insb
icebp
sub
aad
jb
jo
add
cwtl
int3
rcrb
fstl
mov
arpl
or
sarl
pushf
pop
cmova
add
daa
mov
ficomps
xchg
dec
mov
add
and
adc
or
xor
pop
push
out
add
adc
sahf
or
out
push
mov
sbb
adc
jne
mov
inc
and
cmpsl
imul
sub
pop
lods
outsb
jo
std
movl
outsl
cmc
lock
cmp
insl
pop
int3
xchg
xchg
or
in
mov
cmc
jnp
aad
jle
je
je
std
lea
leave
daa
pop
mov
and
and
test
push
stc
pop
insl
push
insl
pop
push
and
rorb
hlt
cmp
icebp
mov
in
scas
add
loope
test
pusha
push
lahf
enter
rol
add
sub
addb
imul
adc
inc
cmp
sub
jne
jae
push
in
pop
mov
pushf
sub
xor
hlt
mov
mov
aad
insb
dec
ss
mov
je
cmp
sbb
in
je
dec
movsb
inc
pop
pop
iret
insl
or
push
hlt
hlt
out
mov
xor
and
repnz
cmp
push
fs
mov
add
or
outsl
and
or
xchg
dec
jle
mov
hlt
jbe
cwtl
sub
out
addb
inc
lcall
mov
cmp
push
fstps
and
xor
xor
pop
push
repnz
popa
dec
mov
push
lea
insl
lods
mov
cmpsb
push
push
in
mov
mov
push
mov
data16
icebp
stos
aad
movsb
test
dec
cwtl
sub
insb
mov
xor
inc
outsb
cmp
scas
ljmp
xchg
mov
ja
lds
mov
push
xchg
jns
sti
cmp
jg
mov
mov
test
xorl
daa
pop
xchg
loope
out
pop
in
push
jb
aad
or
sub
sub
mov
lea
outsb
and
fsubl
loopne
out
or
pop
pop
dec
push
mov
rcrb
pop
roll
mov
aas
and
pop
push
and
shll
in
popa
inc
cmp
jb
shl
nop
outsl
cltd
mov
xlat
mul
mov
adc
jno
std
sub
or
push
or
into
sub
jge
jno
test
dec
lds
ret
repnz
in
xorb
repnz
popf
outsb
sub
gs
outsl
andb
outsb
movsl
push
icebp
jo
or
pop
xor
daa
adc
daa
ss
dec
mov
cmp
push
fcomps
sub
jno
or
andb
orb
mov
pop
fcoml
iret
mov
sahf
adc
mov
add
push
mov
repnz
cmp
mov
testb
movsl
xchg
cld
daa
push
dec
mov
mov
jnp
inc
or
ficoms
ljmp
push
in
mov
mov
adc
out
or
cmp
cwtl
xorl
sahf
mov
in
aas
daa
stos
scas
add
dec
add
test
movsl
sbb
les
pop
out
push
push
movsl
movsb
je
sbb
jg
adc
nop
adc
testb
sub
roll
ss
jge
jmp
sub
adc
out
es
jmp
mov
lods
jno
pop
jmp
or
cmove
cvtps2pd
mov
xor
icebp
lock
xchg
pop
adc
std
cmp
mov
and
mov
ret
stos
scas
hlt
xorb
aaa
imul
and
xchg
mov
and
and
and
jb
mov
xchg
ret
sbb
xchg
popa
mov
repnz
mov
insb
dec
sahf
mov
xchg
jne
cmpsl
pop
pop
sub
jo
shll
sbb
mov
cmp
jo
mov
test
fidivrl
subb
test
sub
mov
adc
mov
jne
mov
mov
test
cli
sub
test
popf
movsb
loopne
arpl
jg
cs
mov
push
repz
jmp
in
mov
inc
sarl
stos
dec
inc
jge
add
aad
outsl
push
ljmp
dec
xor
jnp
jl
pushf
mov
mov
sub
cmpsb
or
fimull
enter
inc
cwtl
jae
push
pop
or
inc
adc
cs
mov
rcrl
jo
inc
sbb
aaa
imul
mov
hlt
push
icebp
rcrb
cli
push
rcll
scas
dec
mov
mov
or
out
cli
jl
xchg
jo
insb
push
sahf
stc
insb
repz
xor
mov
mov
ljmp
divb
mov
mov
out
roll
pop
enter
fstpl
loopne
xchg
in
rol
jmp
cmc
call
add
lret
mov
int3
mov
hlt
call
lods
ret
into
iret
jmp
jo
inc
mov
xchg
xor
jnp
pop
cmpsb
or
mov
push
dec
clc
mov
lcall
imul
xor
pop
cmc
lea
xchg
test
pop
fcmove
and
stc
cmp
xlat
inc
je
aaa
pusha
dec
xchg
jno
outsl
loop
dec
ljmp
pop
dec
decb
or
mov
adc
ret
xor
into
and
cwtl
sti
mov
jns
cmp
clc
jno
inc
jbe
aam
cli
dec
scas
adc
int
jne
or
imul
js
mov
rol
out
out
mov
insb
mov
out
sub
ret
cmp
xlat
mov
outsb
jg
mov
cmp
imul
sbb
sti
loopne
dec
or
pop
fs
dec
aad
enter
je
mov
push
into
mov
mov
daa
test
jge
push
loopne
adc
add
std
dec
ret
aad
or
pusha
add
lds
mov
sbb
enter
imul
mov
test
daa
push
xor
mov
dec
mov
mov
mov
and
pop
mov
aaa
push
cld
push
cmp
arpl
dec
div
popa
fistpll
sub
decb
jge
sub
cmp
add
enter
pop
and
jge
mov
dec
xchg
fwait
mov
lret
stos
dec
add
outsb
sbb
fcomip
js
and
outsb
dec
push
sbb
mov
inc
jmp
test
jmp
dec
and
fldt
dec
dec
repz
dec
mov
pop
add
jns,pt
mov
lret
lret
push
push
mov
jmp
jbe
cvtps2pi
imul
ret
rcrb
xchg
xchg
jecxz
movsl
insl
cmp
jmp
addr16
outsb
sbb
mov
dec
ret
imul
int3
insl
sbbl
push
pop
or
mov
dec
mov
cmp
xchg
lea
push
pop
enter
xor
loope
mov
adc
sub
aam
sub
xchg
dec
jbe
fwait
cmp
mov
outsl
ss
cli
cmp
iret
xchg
repnz
pop
add
xlat
cmp
jl
push
jmp
negb
pop
add
xchg
push
mov
mov
cmp
aad
stos
ret
std
or
sub
jp
or
ja
jb
stos
adcb
dec
push
adc
mov
sahf
jecxz
xchg
cmpsl
cmpsb
sub
popf
xchg
nop
jb
sbb
mov
enter
js
into
lods
jae
inc
xor
gs
and
sub
push
mov
scas
jbe
fstp
pop
add
inc
scas
cwtl
dec
mov
dec
stc
and
cmc
inc
mov
add
cmpb
cmp
inc
add
push
jp
fldenv
dec
xor
and
xchg
jo
jno
jbe
pop
cs
adc
icebp
jbe
pop
popa
mov
lock
fwait
stos
mov
stos
jg
sbb
stos
ds
pop
sbb
adc
out
ficomps
xchg
mov
test
pop
adc
sbb
sub
mov
test
repnz
aad
es
fdivs
mov
sbb
inc
cwtl
je
inc
adc
arpl
int
mov
sub
adc
xor
in
push
mov
stos
xchg
mov
add
jle
hlt
and
addr16
push
sbb
inc
sub
nop
outsw
push
das
arpl
adc
imul
or
movsl
cmp
cmp
sub
push
aas
jle
es
in
bound
sub
mov
xor
lahf
repnz
cmp
push
mov
and
fistl
loopne
and
aas
cmp
jge
cmpb
jo
inc
fbld
jecxz
xor
cwtl
jo
leave
or
mov
cmp
dec
xchg
pushf
aas
inc
es
lds
fsub
fwait
xor
and
test
rolb
fwait
in
push
aad
pop
sbb
adc
jns
dec
call
mov
xlat
push
pop
pop
out
repnz
add
shlb
mov
dec
lods
popa
popa
loope
es
fiadds
out
jnp
pop
xor
pusha
sti
cmpsl
cmp
push
kmovd
mov
in
push
out
loopne
adc
mov
or
ja
dec
mov
sbb
mov
sbb
sub
mov
enter
add
xchg
dec
xor
or
inc
cli
mov
setg
hlt
rclb
or
push
mov
shl
and
sub
repz
jmp
mov
push
ljmp
jb
ret
imul
leave
pop
into
ret
sub
add
aaa
test
fwait
xchg
jo
add
pop
inc
stos
xchg
je
adc
in
mov
fsts
in
xchg
jmp
mov
lods
push
data16
inc
cld
test
ja
xorl
sbb
es
mov
rcrl
enter
out
in
push
jge
ljmp
adc
mov
mov
scas
insb
adc
push
sbb
dec
clc
jbe
out
movsb
lcall
les
pusha
xchg
fimuls
dec
cmc
aam
cli
mov
add
cmp
movsb
adc
loope
xor
inc
out
or
andb
jmp
pop
cli
push
mov
adc
xchg
ret
mov
sbb
out
fsts
jg
fdivl
mov
push
jmp
repz
lock
xor
loop
adc
mov
pop
sub
outsl
imul
mov
imul
fdivrs
mov
lock
push
add
pop
jmp
sbb
sub
jg
pop
sbb
sub
push
mov
scas
dec
jge
mov
fptan
or
mov
xchg
dec
and
dec
outsb
ljmp
pop
mov
jns
cmp
aam
popl
mov
xor
nop
jg
jae
les
xlat
jb
fs
fldenv
mov
out
fwait
cli
mov
test
in
gs
jg
pop
mov
jp
fsubrs
out
aas
push
dec
fidivs
mov
jne
fisubrl
sbb
mov
add
mov
fs
hlt
pop
imul
int3
ret
jb
jg
cmpsl
outsl
add
incb
jl
out
ljmp
mov
das
data16
inc
sbb
fwait
add
loope
jbe
cmp
dec
stos
popa
add
into
fsts
loope
mov
xchg
push
inc
stos
and
imul
loope
add
or
inc
pop
push
cld
pop
add
pop
jg
mov
sbb
sbb
jbe
daa
sub
jmp
ret
xlat
in
cmp
xchg
mov
cmp
mov
nop
xor
cmpb
push
xchg
pop
dec
cmp
cmp
loop
mov
ret
jp
add
leave
rcrb
cmp
push
stos
mov
loopne
sbb
dec
jge
mov
pop
arpl
pop
dec
sarl
icebp
add
or
pop
mov
out
cltd
insl
mov
fst
pop
or
push
push
and
sub
imul
lahf
in
enter
and
loopne
sarl
into
cmp
orb
and
xchg
lcall
dec
repnz
cmp
cmp
jb
lods
mov
and
sub
mov
pop
mov
test
test
xchg
push
cmp
stos
xchg
sub
jo
imul
jl
push
pop
adc
cmp
hlt
clc
mov
jmp
dec
push
jae
inc
cltd
std
mov
addr16
inc
popf
lods
pop
pop
dec
jecxz
mov
sbb
pop
dec
xlat
aaa
inc
rcrb
and
bound
scas
pop
push
ljmp
jbe
xchg
jnp
fsubrs
in
cwtl
movsl
scas
int3
call
add
jmp
lock
fidivrl
js
pop
sbb
addr16
stos
sub
pop
icebp
js
xchg
cmpsl
push
outsb
mov
dec
in
jo
jge
out
pop
adc
mulb
push
clc
xlat
pop
inc
sub
pop
xchg
stos
icebp
inc
sub
roll
outsb
scas
mov
jne
mov
orb
sbb
pop
sub
and
cmc
jb
repnz
mov
stos
and
in
xchg
clc
cmp
sub
call
into
cmp
out
cld
outsl
dec
sbb
js
ss
jl
add
loope
pop
leave
xor
int
mov
imul
push
sbb
pop
js
mov
pop
sub
xchg
jle
add
mov
ss
pop
js
xor
sub
lcall
shr
add
int3
mov
mov
cld
jg
pop
fstl
clc
lea
stos
std
xchg
nop
clc
add
call
cli
xchg
in
repnz
push
dec
test
xchg
popl
gs
sbb
or
test
adc
popa
push
mov
cld
lret
in
inc
jle
lods
test
and
dec
inc
xchg
lds
out
mov
repnz
out
or
push
push
in
xchg
mov
int
inc
mov
mov
mov
and
loope
ret
sub
and
mov
jle
cmp
and
out
cmpsb
fadds
in
push
aaa
xchg
pusha
ljmp
mov
mov
push
inc
jb
cltd
clc
das
cmc
hlt
fld1
xor
repz
xchg
push
popf
sub
sub
int3
adc
ja
jno
add
sbb
sbb
gs
pop
scas
mov
leave
repz
mov
jns
in
sub
je
mov
inc
lods
or
shl
sub
fadd
loopne
and
sbb
push
and
mov
js
loope
jno
jo
addr16
mov
rcl
inc
jb
sbb
dec
insl
insl
xor
test
clc
data16
repnz
xchg
lahf
pushf
push
mov
icebp
insl
pop
jecxz
fistpl
aad
ja
xchg
arpl
sbb
andl
call
cmpsl
loopne
lea
insb
rcr
dec
aad
movsl
pop
lret
sub
ljmp
push
not
mov
sahf
js
xchg
pop
mov
adc
fstps
cmc
jl
mov
into
dec
testb
push
xchg
mov
aas
jg
push
int3
aaa
je
push
pop
loop
frstor
inc
sub
popa
fwait
pop
pop
mov
out
nop
pop
aad
push
ja
faddl
mov
iret
lcall
leave
ret
addr16
repz
jb
jne
lret
loope
push
or
adc
or
mov
int
xorl
xor
and
in
xchg
mov
add
pop
mov
stos
pop
repnz
mov
dec
pop
push
dec
jge
sub
loope
push
adc
mov
addr16
xchg
pop
push
call
rcll
xlat
sbbb
shl
mov
popa
cmp
fildll
arpl
aas
dec
lahf
loopne
xorl
pop
push
enter
inc
jae
push
subl
mov
outsl
xchg
push
pop
xor
idiv
xlat
cmp
xor
rcl
pop
es
outsb
movsb
gs
cltd
inc
inc
out
nop
aas
ja
dec
stos
in
rep
mov
out
sbb
pop
sbb
pop
xor
mov
stc
push
push
dec
adc
lcall
cmp
lods
out
push
xor
insl
pop
cwtl
jno
rolb
cltd
popa
adc
movsl
xchg
cwtl
sti
sbb
test
cmp
adc
mov
cmp
out
sahf
jmp
lcall
stos
es
out
mov
sub
pop
adc
jl
fcmovnu
mov
mov
add
dec
shll
push
movsb
jno
scas
push
xor
mov
adc
lea
ljmp
lret
xor
lea
imul
push
rcr
pop
int3
stos
sbb
loop
rcll
aad
orb
pop
js
cmpsb
stos
scas
mov
mov
dec
test
sbb
jb
sub
xchg
mov
fwait
out
mov
aaa
jo
aam
mov
ret
cmp
xchg
lds
out
je
sub
pop
outsb
or
mov
inc
out
arpl
ja
xchg
and
mov
pop
jmp
pop
mov
mov
push
addr16
cs
test
pop
xchg
pop
mov
mov
sub
push
into
xchg
sti
test
leave
out
cld
fdiv
lods
pushf
adc
add
mov
xchg
insl
xchg
adc
mov
push
mov
push
jge
mov
cmpsb
aaa
adc
mov
pop
js
and
outsl
mov
gs
xchg
fs
scas
dec
dec
or
addr16
pop
xor
pop
cwtl
jno
test
lcall
loop
ljmp
gs
dec
inc
jp
jecxz
adc
mov
jnp
inc
in
jmp
fucomi
lock
nop
mov
mov
insl
scas
loop
repz
frstor
jno
mov
xchg
mov
fs
dec
lock
imul
ljmp
repnz
out
and
enter
xchg
aaa
dec
das
xchg
stc
jae
pushf
ret
frstor
fisttpl
aaa
dec
ds
fidivrl
ret
jle
and
hlt
add
popa
imul
mov
and
fisubrl
hlt
jge
inc
cmp
insb
repnz
pop
imul
jle
jp
aam
cmc
pop
adc
mov
dec
cmp
cmpsb
lea
and
es
sub
and
lods
sub
mov
fldenv
cli
sub
mov
cmp
enter
or
jp
sbb
sbb
mov
jae
add
mov
push
lret
stos
pop
int
out
sub
xchg
inc
orl
add
ds
out
cli
adcb
stc
insl
outsl
iret
int3
int3
outsl
sbb
cli
pop
xchg
xor
lcall
popf
xor
jae
repnz
xor
mov
stos
mov
jo
cmp
iret
lods
mov
shlb
aaa
stos
mov
insl
popf
sub
enter
imul
cmp
aam
daa
aad
mov
scas
lahf
call
add
add
mov
xor
add
and
out
add
xchg
mov
int
push
adc
and
add
push
lcall
add
sahf
jecxz
or
push
aas
subb
pop
fistl
mov
imul
int3
test
mov
mov
int
sbb
add
pop
push
jns
mov
in
xchg
loope
mov
sar
ja
std
jecxz
aas
adc
adc
mov
adc
call
mov
inc
pushf
mov
xchg
nop
shlb
lcall
lods
aam
shr
fcoml
or
and
sbb
sbb
test
stos
daa
cld
ss
adc
cli
stc
jns
xor
orl
push
lods
fs
inc
in
mov
aas
dec
xor
sbb
fisttps
loope
shr
int3
lods
imul
push
in
je
nop
enter
pop
mov
jecxz
test
push
es
sub
fs
mov
push
add
ret
inc
mov
mov
adc
mov
push
inc
push
cld
or
out
mov
lret
mov
jl
cmpb
arpl
push
scas
sbb
shrb
push
mov
sub
stc
add
jnp
ret
and
push
xchg
mov
fldt
lock
dec
and
out
rclb
mov
popa
push
aad
bound
lret
and
sub
cmc
dec
aam
cmp
insl
cmp
cmc
cwtl
add
and
into
mov
enter
mov
mov
sub
in
loope
sbb
pusha
in
lahf
pushf
mov
loopne
sti
and
icebp
add
filds
arpl
push
aaa
aad
xor
pushf
cmpsl
or
push
addr16
sbb
bound
cmpsb
les
movsb
fwait
in
aad
fs
cmp
cmc
arpl
js
out
jno
mov
mov
outsb
adc
or
call
ds
xchg
out
pop
jp
xor
lcall
lods
sub
das
sub
adc
into
out
dec
int3
cmp
sbb
inc
mov
cmpsb
ds
sbb
insb
mov
out
cmp
and
mov
dec
int3
sub
jle
jecxz
inc
lret
sub
pop
stos
std
gs
sti
ds
repz
xor
testl
cvtps2pd
inc
call
fcmovb
fwait
or
and
cmp
add
or
cli
rcrb
push
or
mov
movsl
sbb
sbb
fwait
xlat
pop
orb
call
rolb
mov
js
cwtl
or
xlat
lret
adc
subl
sbb
sub
shll
jb
jle
into
js
stos
in
mov
push
bound
jp
mov
cwtl
or
xlat
adc
cmp
inc
std
pop
push
out
push
mov
mov
out
in
pop
iret
inc
mov
aad
adc
in
jne
sub
repnz
sbb
incb
fsubrl
mov
cmpsb
adc
pop
xlat
sub
fldcw
imul
mov
aas
push
scas
adc
shlb
dec
and
lea
mov
pop
mov
sbb
loopne
std
jae
dec
jecxz
mov
sahf
dec
push
pop
lcall
movsl
negl
jns
mov
mov
addl
repnz
movsl
std
rcl
cmpsl
dec
test
orb
call
push
cltd
adc
and
test
adc
xchg
pop
fisubl
dec
ja
nop
xchg
fcoml
jecxz
jns
setb
or
lods
push
jbe
dec
movsb
lahf
jl
lcall
ret
jge
mov
out
arpl
loop
inc
in
outsl
mov
sbb
jne
outsl
inc
add
div
mov
outsl
inc
push
jle
lods
jmp
pop
iret
push
add
stos
insl
mov
and
sbb
enter
imul
jno
aaa
push
add
stos
mov
fnstsw
mov
sbb
ret
pop
movzwl
inc
cltd
out
jmp
into
pushf
lock
mov
or
sti
mov
cli
inc
dec
stos
enter
and
xchg
pop
push
cmp
push
stos
sub
test
movsl
stc
fidivs
xchg
adc
pop
jne
pop
es
arpl
xor
mov
pop
cmpsl
sbb
bound
push
bound
push
jge
sub
js
pop
mov
and
fs
shlb
jbe
addl
mov
inc
push
xor
add
rcll
arpl
mov
xchg
fisttpll
push
in
outsb
push
mov
inc
stos
jge
cmpsl
cmpb
mov
aas
xor
add
in
dec
pop
inc
stos
mov
or
inc
xor
jns
jnp
push
in
xor
cmp
aam
mov
bound
ss
push
jmp
js
cmpsb
mov
mov
jecxz
or
imul
pop
sbb
sbb
sub
arpl
dec
lods
or
ljmp
mov
xor
lea
repz
push
int3
fmull
lcall
sbb
in
sbb
mov
or
dec
adc
fstpt
dec
jp
mov
inc
hlt
mov
mov
xchg
repz
sbb
sub
lock
xor
jmp
xchg
popf
aad
add
cld
std
inc
dec
mov
imul
sub
lahf
call
xor
add
mov
cli
ret
int3
mov
in
jmp
push
mov
movb
mov
ret
lret
icebp
addr16
push
call
dec
in
sub
sarl
call
ds
xor
mov
std
loopne
adc
cli
cs
and
stos
and
push
mov
or
xchg
mov
in
sub
mov
and
and
roll
lret
xchg
iret
mov
aam
addr16
pop
out
sbb
js
fsubl
out
add
aam
loop
fildll
xor
cs
dec
pop
lahf
cs
popa
jl
ret
in
orl
btsl
inc
or
push
hlt
aas
icebp
inc
mov
ss
les
insl
pushf
sbb
jg
pop
xor
and
imull
out
jne
add
pushw
enter
neg
mov
adc
mov
xor
scas
loope
idiv
pop
inc
push
add
lret
loopne
add
sub
and
shrb
sbb
jne
or
jno
lock
das
popa
mov
mov
mov
cwtl
dec
fcomps
arpl
sbb
xlat
jo
lods
mulb
rcrl
outsb
fisubs
stos
scas
sar
add
imul
sbb
clc
jns
out
jle
xchg
fbld
fcoms
jge
mov
out
adc
ds
movl
dec
mov
mov
xchg
stos
daa
add
fdivrl
adc
out
nop
mov
inc
pop
sub
xchg
push
bnd
sbb
mov
xchg
xchg
sti
dec
dec
jge
mov
aad
shl
je
fistpl
xchg
outsb
mov
out
lret
test
push
call
inc
xchg
mov
es
aad
xchg
inc
jp
mov
lods
adcl
stos
xchg
and
bnd
fsubr
out
rcll
aad
jns
mov
adc
xor
sub
xor
mov
rclb
movsb
mov
outsl
les
adc
push
inc
enter
mov
popf
add
add
sub
inc
aas
imul
adc
mov
mov
into
call
and
cmp
mov
loope
lahf
pop
push
test
pusha
pop
rorl
ret
or
js
sbb
jecxz
mov
inc
pmullw
hlt
xor
clc
add
jnp
subl
jnp
imul
lret
sahf
ror
in
sbb
rolb
pop
and
push
into
loop
mov
jmp
pop
xor
jg
mov
xlat
cmp
sbb
pop
mov
loopne
out
ds
xor
push
push
cs
pop
movsb
adc
mov
mov
leave
pop
sbb
inc
jmp
jle
aas
pop
xchg
sti
sbbb
xchg
jno
dec
xor
fwait
sahf
or
xlat
mov
stos
dec
out
xchg
or
pop
in
mov
cld
aas
dec
sysexit
loope
mov
pop
notb
cmp
rorl
shrl
pop
test
or
cltd
adc
dec
je
call
sub
aam
mov
mov
aad
inc
mov
cmpl
lds
in
fidivrl
xchg
fwait
setg
gs
mov
mov
xlat
and
mov
sub
cmpb
sub
aaa
repnz
xor
lahf
imul
pop
add
mov
mov
in
js
mov
sahf
mov
cmovno
sbbl
dec
arpl
xchg
push
sbb
cmpsb
call
leave
aam
fisubl
sahf
push
test
xor
dec
in
fsubs
out
push
pushf
and
scas
mov
lds
pop
dec
cmp
je
pop
rcll
and
movb
sub
sbb
in
mov
and
dec
mov
push
adc
shrb
and
cmp
mov
mov
and
icebp
and
cmp
mov
sbb
push
mov
and
mov
jno
int3
lret
push
sbb
call
mov
jge
out
repnz
lret
lods
add
arpl
jl
inc
dec
xchg
lods
daa
xchg
test
cwtl
outsb
cmc
in
mov
xchg
movsb
mov
subl
outsb
push
aaa
fiadds
sub
out
scas
push
jbe
jnp
push
data16
fwait
insl
mov
repz
lock
movsl
dec
repnz
lea
ret
loope
lret
xor
aad
sub
add
push
mov
or
lods
popf
addr16
xor
cld
adcb
push
movb
or
insb
testb
int3
xor
bound
scas
js
loope
jno
xchg
imul
inc
add
int3
mov
adc
sub
das
arpl
sub
movsb
push
icebp
jo
gs
adc
ror
inc
sub
push
incb
sbb
or
mov
pop
lcall
addr16
pop
shll
mov
cs
lods
cmp
cmp
push
inc
sub
cmp
mov
push
sub
mov
pop
jno
adc
loop
add
fisttps
sub
icebp
aad
jp
cmp
push
sub
mov
fs
pop
inc
rorb
xchg
repz
ja
fsubrl
or
mov
push
mov
push
roll
xor
popf
xchg
repnz
nop
stos
sub
add
push
push
std
jmp
xor
imul
insb
out
out
scas
mov
and
shrb
xor
in
sbb
jp
xchg
sbb
jns
mov
imul
bound
outsl
xchg
popl
mov
out
call
pop
push
push
je
ret
mov
insb
outsl
stos
mov
std
xchg
not
mov
je
adc
inc
and
fisubl
jmp
jns
adcl
arpl
mov
cmpb
repz
jecxz
pop
add
gs
mov
pop
jmp
jge
jno
mov
sub
push
rcll
rol
arpl
and
clc
leave
gs
std
rclb
sub
push
int3
pop
pop
ja
in
icebp
pushf
mov
insl
add
insb
inc
fwait
insl
aad
movsb
std
push
or
lock
push
inc
adc
adc
lcall
xor
push
jne
pop
out
loopne
mov
jb
outsl
addr16
cmp
roll
jnp
adc
int3
aam
pop
cs
pop
cmpsb
sbb
pop
loopne
jne
inc
bound
xchg
outsl
lock
pusha
ror
xor
mov
xor
jnp
testb
test
sbb
push
pop
in
gs
pushf
fnstcw
fsubs
pop
mov
nop
pop
push
insl
sbb
fwait
pop
mov
je
add
push
icebp
in
lahf
in
pop
xor
mov
mov
std
mov
jbe
lods
jno
cmp
mov
mov
fdivr
add
sub
aas
loop
jg
mov
fwait
sbb
imul
xchg
in
pop
pop
hlt
add
sahf
aad
fstl
jae
lahf
and
bnd
or
add
aad
xor
xchg
lret
ss
xor
jle
sahf
int3
cmp
push
imulb
mov
stos
cltd
push
inc
mov
clc
push
ja
add
fldl
lock
ret
xchg
push
ret
inc
jmp
xor
rol
fidivs
nop
push
popf
xchg
and
lcall
arpl
mov
int3
out
imul
iret
inc
pop
ss
ss
pop
dec
scas
outsl
popf
pextrw
push
mov
sbbl
in
jle
imul
call
mov
testl
sarb
insl
fsubrp
add
and
scas
lds
or
sahf
jp
ljmp
add
sub
clc
or
outsl
int
sub
mov
insl
out
pop
sahf
dec
cmp
or
fcmovu
xchg
repz
mov
enter
and
xchg
data16
push
cmpsb
loopne
sbb
lcall
sti
jbe
jg
daa
push
inc
stos
sbb
outsl
ja
pop
loop
ficompl
mov
xacquire
sub
das
les
sar
rol
into
insb
or
aam
lock
and
movsb
lds
mov
jg
fistl
loop
bound
cmp
faddl
lds
mov
mov
cld
fisubrs
sub
push
mov
sbb
outsl
fnstcw
mov
mov
mov
mov
inc
jge
mov
push
leave
jmp
pop
sbb
outsb
mov
addl
cmp
clc
rorl
mov
icebp
leave
mov
cmp
or
mov
dec
test
mov
inc
daa
inc
in
movsl
push
int3
sbb
xchg
test
or
inc
insb
add
pop
sbb
decl
cltd
mov
pop
fsubrs
std
and
in
or
dec
pavgw
dec
mov
outsb
sbb
inc
iretw
or
jno
xorl
xor
sbb
imulb
push
loop
mov
and
stos
je
or
inc
fs
sbb
sbb
fnstenv
cli
repz
push
movsb
xor
mov
test
or
mov
insl
push
sub
xor
cld
cs
pop
fwait
daa
cmpsb
push
push
fists
repz
ljmp
rcrb
cmpsb
xor
fs
icebp
jb
xchg
mov
mov
call
lods
add
or
adcl
fisubrs
sub
jl
pop
fstps
lds
mov
loop
scas
sub
mov
push
xor
mov
inc
xchg
pop
mov
or
inc
pop
call
mov
cwtl
xchg
mov
jae
adc
push
les
mov
ds
imul
push
push
outsl
stos
jb
ds
repz
jecxz
roll
mov
inc
inc
loope
imul
mov
mov
add
mov
mov
sbb
rclb
inc
std
cli
pusha
icebp
jns
inc
dec
xor
lock
loope
imul
or
mov
fcmovne
shlb
sbb
cmc
mov
push
jle
pop
and
push
mov
fucomip
gs
xor
mov
adc
cwtl
dec
xor
lea
adc
aad
or
dec
inc
jmp
shl
xchg
mov
xor
xchg
rcll
push
in
shlb
repz
mov
sahf
mov
push
test
shrl
inc
fisttps
dec
cmp
sbb
nop
fsubrs
loope
scas
roll
sbb
mov
shll
arpl
shr
pop
outsl
mov
adc
sbb
xlat
lcall
jo
cmp
sti
or
push
pop
inc
inc
lahf
sbb
push
pop
xor
pop
mov
mov
es
ret
ja
add
or
and
aad
xchg
arpl
inc
xchg
shll
sub
pop
bound
cmpsl
das
jns
ja
mov
rol
mov
mov
mov
adc
int
repnz
adc
xchg
cmp
out
or
les
push
jmp
jbe
lea
stc
pop
cmp
sbb
push
adc
mov
sbbl
adc
and
dec
and
and
adc
and
xor
and
adc
movl
sbb
xchg
ds
mov
push
mov
jecxz
mov
adc
out
testl
xor
mov
hlt
jno
jmp
lods
jle
ds
sti
mov
cmp
lock
movsl
sbb
cmp
scas
push
push
outsb
ljmp
sbbb
pop
mov
notb
xor
pop
jg
push
hlt
adc
fs
mov
mov
in
sub
xchg
push
push
mov
jmp
sub
repz
sahf
dec
and
jp
enter
dec
pushf
pop
pmovmskb
rorb
sbb
push
add
push
xlat
inc
inc
jno
xchg
divb
stos
mov
scas
mov
jb
sti
and
das
adc
jno
bound
hlt
cli
insl
dec
aaa
test
mov
fldenv
mov
add
or
mov
adc
je
push
or
leave
xor
inc
push
or
mov
fs
jae
outsl
jae
sbb
popf
dec
out
rcr
adc
stos
mov
stos
flds
push
movsb
hlt
xor
mov
iret
lret
xchg
fldt
fisubs
aad
mov
lea
lret
add
call
imul
xchg
lods
scas
mov
scas
pusha
push
test
or
jecxz
push
sarb
mov
pop
pop
mov
mov
nop
fimuls
iret
cltd
xor
inc
cmp
ljmp
bound
test
push
jbe
dec
daa
cli
jae
aad
xchg
lahf
push
ret
aas
stos
mov
pop
out
push
loop
adc
cmpsb
int3
fwait
addr16
add
cwtl
test
int3
imul
inc
adc
ficoms
xchg
mov
ljmp
and
push
test
ret
pop
out
sub
add
inc
fs
lcall
cmp
mov
std
sbb
into
cs
jae
dec
test
mov
in
lahf
out
imul
scas
test
pop
or
jecxz
das
retw
pushf
sbb
pop
xor
cmp
push
lods
pop
mov
dec
stc
push
data16
cwtl
ljmp
fnstsw
leave
inc
sub
inc
sbbl
sbbl
bound
mov
sub
mov
sub
jmp
pop
pop
pop
pop
in
bound
int3
cltd
mov
adc
dec
mov
into
icebp
mov
dec
xchg
push
outsl
in
jmp
insl
cmp
xchg
clc
xor
jge
shll
push
mov
je
into
lods
sbb
orb
xchg
pop
pop
mov
dec
cmp
ljmp
pusha
in
pop
mov
dec
cmp
arpl
lds
cmp
mov
aad
xchg
dec
mov
xor
jge
or
pop
mov
ja
subl
out
xchg
dec
out
xor
fiaddl
inc
dec
xor
sbb
fldl
mov
outsb
iret
or
xchg
dec
shlb
push
mov
xor
repnz
xor
cwtl
mov
add
out
mov
stc
push
cmp
add
fldenv
stos
mov
insl
xchg
pop
pop
loopne
inc
cmc
push
pop
insl
out
outsl
pop
xchg
out
stos
jns
lods
outsl
mov
mov
or
mov
pusha
xor
test
sbb
ret
inc
jns
xchg
or
adc
aad
sbb
inc
repnz
jmp
jno
scas
cs
cmp
iret
lret
lods
adc
subb
insl
push
inc
sbb
inc
cmp
scas
or
sbb
roll
push
addr16
sbb
es
push
inc
loopne
dec
adc
fld
xchg
repnz
inc
push
or
mov
and
call
mov
xor
add
lret
insl
hlt
jno
push
jo
inc
pop
sbb
pop
jp
mov
mov
movsl
popf
mov
aaa
les
mov
adc
cmpsb
out
insl
ds
xor
sub
pop
jbe
imul
dec
sbb
adc
lret
jo
clc
pushf
xor
in
cmc
jns
gs
out
adc
aaa
movsb
jle
pop
xor
addr16
jns
mov
xor
mov
push
cwtl
aas
sub
mov
cmp
inc
lahf
mov
mov
sbb
out
stos
addb
aaa
jge
and
je
jne
cmc
imul
pop
and
dec
jecxz
out
pop
fdivp
mov
dec
inc
cli
jb
xchg
cmp
jg
icebp
mov
enter
sbb
aaa
leave
cmpsl
push
mov
mov
fcomp
insb
stos
pop
sub
rorl
fwait
sub
jmp
inc
inc
in
xor
mov
in
or
xchg
push
xchg
es
push
arpl
xlat
outsb
pop
xor
cmp
push
xor
push
pop
popa
enter
popf
sub
lcall
sub
inc
pop
mov
jb
mov
repz
dec
pop
or
or
scas
push
inc
or
push
lcall
and
in
test
inc
outsl
outsl
movsb
mov
sub
sti
xchg
shll
dec
push
ja
lcall
push
add
jl
and
pop
sbb
mov
sub
rcl
mov
push
fdivs
out
rcll
jne
neg
cld
adc
cmp
mov
xor
and
mov
int3
lret
pop
dec
jg
sahf
call
xor
xchg
mov
xor
xchg
jmp
mov
pop
mov
pop
mov
lock
scas
mov
sub
mov
int3
int
mov
xchg
mov
xchg
inc
sub
ret
dec
jmp
jmp
std
mov
or
sub
in
sbb
js
shlb
adc
mov
fisubrs
pop
loope
mov
aaa
push
orb
mov
je
scas
out
and
in
sbb
dec
mov
mov
mov
outsb
jbe
xchg
clc
dec
lahf
and
dec
sti
sub
arpl
sub
push
fdivs
inc
lahf
mov
xchg
mov
fldt
loop
dec
lds
or
lcall
out
mov
out
in
or
sbb
xchg
or
jnp
pop
pop
mov
mov
pop
or
jo
iret
jmp
cld
mov
mov
cmc
inc
push
icebp
pop
lods
jae
adc
cmp
sub
push
push
fdivrp
pusha
fiadds
fstl
mov
repz
inc
push
std
xchg
into
into
jnp
sbb
and
inc
fdivrs
sub
xor
daa
gs
or
fcoms
push
sub
and
lcall
and
fcoml
flds
add
inc
jo
fchs
imul
call
je
ret
gs
ud0
pop
mov
enter
push
and
inc
aam
or
les
cmpsl
leave
fidivrl
xorl
test
js
dec
aad
pop
pop
into
sub
mov
mov
imul
dec
add
jae
daa
xchg
frstor
push
loope
jge
in
sub
cld
aad
xor
cmp
xor
mov
xor
leave
aam
cmpb
mov
aaa
xchg
and
stos
fnop
std
mov
out
mov
dec
loopne
adc
dec
push
and
xchg
inc
vmovq
sub
int
lret
aam
ficomps
mov
loope
sbbl
outsl
dec
xchg
in
insl
jbe
xlat
outsl
jl
ljmp
in
stos
sbb
xor
fwait
dec
jbe
adc
pop
gs
stos
scas
fstp
fwait
push
mov
mov
jno
mov
adc
push
cmpsb
fcom
dec
push
inc
push
sub
mov
ret
sti
pop
dec
clc
mov
in
stos
and
aad
in
sbb
add
sbb
mov
call
scas
and
lret
inc
cli
mov
pop
jp
sbb
mov
or
jp
cmp
mov
iret
mov
outsb
push
outsb
inc
sti
dec
fwait
in
cmp
jne
mov
lret
cltd
rorb
lock
push
rorb
out
jmp
mov
mov
out
outsl
test
and
fsubs
mov
icebp
in
cmp
fbstp
call
mov
sub
mov
add
in
rcrb
aam
sub
jmp
jle
pop
cmpb
mov
or
jae
in
ret
lcall
mov
pushf
pop
mov
jg
mov
add
pop
fwait
cmp
bound
cmp
add
jno
sub
pop
movsb
sub
cmp
pop
mov
aad
aas
jecxz
lcall
outsb
data16
xlat
push
js
push
adcb
mov
scas
call
popf
loopne
xlat
in
jle
les
test
jmp
xchg
cmp
pop
mov
stos
sbb
jnp
mov
cmpsb
fcompl
cmove
mov
pop
xor
in
stos
cmp
mov
orb
or
inc
aaa
mov
xchg
adc
fs
in
rolb
sbb
insl
aam
mov
xchg
inc
or
stos
leave
repnz
mov
sub
jmp
aas
lret
int
pusha
mov
mov
inc
aad
jnp
cs
xchg
sub
mov
jge
adc
mov
lods
xchg
loop
lahf
sahf
jnp
sbb
mov
cli
inc
loope
mov
aad
sahf
fsubp
test
pop
cmp
sub
ss
xchg
cmp
cld
popa
imul
xor
test
adc
adc
mov
push
scas
subl
pop
jge
stc
fdivl
gs
pushf
cmpsb
cmc
xchg
xchg
shr
nop
xor
sub
fmuls
insb
add
lahf
mov
pop
add
stos
sbb
pop
push
loop
cmp
add
push
sbb
push
add
cmp
ss
mov
mov
aaa
xor
mov
sbb
xor
jnp
out
add
inc
jle
pop
sahf
fstpl
inc
out
mov
sub
mov
mov
push
ja
add
hlt
out
int
dec
fnstsw
rcr
shrl
adc
loopne
mov
jb
pop
insl
fs
push
xor
and
test
outsl
sbb
out
push
push
daa
mov
lret
js
mov
out
data16
and
mov
stos
fdivrl
pop
ret
mov
int3
pop
mov
and
xchg
cltd
mov
mov
lcall
test
in
xor
js
jmp
mov
or
jecxz
dec
mov
es
mov
enter
cmc
and
lods
xchg
fimuls
sub
add
inc
ret
sbb
push
cmp
push
xchg
pop
jp
ds
in
fisttps
stos
out
stc
jl
arpl
lahf
pop
push
dec
lods
in
mov
into
fnstenv
scas
add
ljmp
sarb
cltd
repnz
adc
fwait
mov
sub
stos
lahf
jp
jne
jae
cmp
jo
push
cltd
loop
fidivrs
pop
in
in
popf
addr16
cs
sub
fisubl
in
jge
cwtl
adc
std
leave
das
jge
cli
jnp
sbb
into
xchg
arpl
mov
dec
ljmp
cmpsl
repz
test
jecxz
add
push
aas
in
inc
jnp
jnp
adc
push
mov
bound
jmp
xchg
je
mov
mov
add
daa
sahf
out
push
icebp
mov
ret
and
fmull
push
popf
pushf
notl
rorl
adc
mull
int
imul
fistps
adc
and
inc
dec
loopne
jg
gs
adcl
fs
push
sbb
test
popa
js
and
jno
or
addb
nop
outsb
sub
mov
add
lea
adc
jo
adc
and
outsb
mulb
adc
pop
cmp
loop
sub
loop
adcb
sub
or
mov
popa
stos
and
adc
push
sub
jmp
push
fwait
jno
dec
xor
adc
leave
fists
mov
mov
lods
dec
pop
aaa
and
xor
std
xor
inc
mov
movsl
mov
addl
pop
mov
push
mov
sub
and
std
push
repz
ret
mov
inc
int3
mov
notb
imul
mov
mov
pushf
push
pop
sbb
xor
lds
das
dec
fisubs
mov
and
adc
leave
out
pop
and
adc
xchg
mov
mov
scas
mov
rcr
xor
lea
dec
cmp
push
ljmp
orb
insb
out
mov
rclb
jge
mov
data16
adc
popf
jle
xchg
out
push
inc
mov
dec
popf
popf
rolb
fstps
push
and
dec
xor
divl
push
dec
movsl
out
jnp
pop
mov
and
das
pop
inc
adc
add
xchg
test
inc
jno
jmp
mov
push
or
cmp
int3
mov
ja
outsb
mov
xchg
repz
jb
dec
je
rolb
add
pop
fs
jne
and
push
or
xchg
mov
nop
mov
and
mov
and
test
jae
sub
ret
out
rcll
or
fnstenv
or
sahf
lods
gs
xchg
dec
jne
out
jge,pt
fistpl
jmp
jge
es
lods
dec
clc
mov
or
int3
out
pop
mov
test
mov
dec
cmp
inc
xor
dec
pop
clc
mov
pop
lds
nop
adc
pop
jnp
dec
mov
push
sahf
pushl
loopne
andl
xchg
add
je
mov
roll
dec
addr16
cmp
mov
movsb
add
xchg
mov
aad
mov
in
pop
sti
pop
orl
out
lret
mov
push
in
mov
inc
dec
aas
dec
cmpb
dec
cmp
add
push
mov
mov
and
les
pop
xchg
les
fcom
jle
xchg
pop
fsubl
pop
iret
push
sbb
leave
jmp
jnp
rclb
test
je
inc
xchg
loope
out
movsb
mov
test
xchg
jmp
outsl
shll
jp
mov
add
popa
aaa
je
call
cmp
mov
mov
and
xchg
pop
xchg
jmp
daa
push
in
in
fistl
pop
inc
cmp
pop
nop
fsub
mov
and
inc
outsb
push
mov
test
push
pop
mov
push
adc
mov
daa
rorb
imul
jmp
sub
ret
adc
aam
dec
mov
test
xor
jp
pop
mov
data16
aam
or
in
mov
icebp
mov
sub
sbb
call
jle
hlt
push
xor
inc
jnp
clc
mov
and
pop
jg
mov
sahf
into
xor
sbb
push
push
push
pop
sar
mov
add
int
test
and
and
xchg
mov
adc
sub
sarb
sbb
add
inc
mov
lea
es
test
jmp
gs
jo
sub
pop
imulb
dec
push
cmpsb
push
scas
js
push
ss
xchg
stc
call
fsubs
fiadds
mov
sysenter
push
test
test
mov
sbb
cmp
shll
xor
div
push
mov
je
movsl
sub
cmpsb
sahf
push
jle
add
adc
inc
loope
rol
outsb
mov
ret
lahf
daa
in
repz
jae
jo
in
push
xchg
sub
pop
aad
lds
mov
repz
inc
xlat
int3
inc
fwait
mov
pop
xchg
push
xchg
fidivrl
push
mov
mov
mov
mov
aaa
xor
arpl
pop
xor
pop
cld
cltd
mov
insl
ja
mov
std
xor
xlat
pop
mov
xchg
xor
andl
int
cmp
lods
mov
test
shr
sub
mov
add
imul
fwait
cmp
lahf
scas
cmc
sti
cmpsl
push
ss
aad
sub
pop
pop
imull
push
xchg
cmp
cwtl
outsb
pop
rcr
mov
fistpll
out
in
maskmovq
testl
pop
push
mov
mov
fwait
arpl
ret
jb
das
movsl
jae
repnz
fistpl
jnp
nop
xchg
and
sub
mov
pop
aad
popa
mov
cltd
ja
rorl
je
ret
mov
dec
push
cmp
mov
or
cmpsb
push
lret
ja
call
mov
xchg
jle
sbb
notb
lock
mov
sbb
inc
int
xchg
jno
pushf
stos
xor
pusha
rcll
js
sub
and
int
jmp
mov
mov
xchg
sar
rorl
pushl
outsb
push
add
xchg
ja
mov
sub
mov
loop
ret
daa
imul
pusha
inc
add
lret
sti
aam
loope
inc
outsb
pop
in
test
fdivs
pop
js
nop
and
in
lahf
and
xor
fdivrp
mov
xor
xchg
sbb
add
fildll
lcall
mov
cli
out
mov
jge
fimuls
rorl
ret
xor
leave
clc
lods
test
mov
sub
les
mov
in
ss
jnp
and
ret
sarl
adc
cmpb
js
dec
dec
mov
xchg
push
pop
fistl
jl
push
out
mov
lret
mov
scas
data16
jae
pop
iret
sbb
jecxz
xchg
adc
xlat
aam
cltd
shl
push
push
pop
aad
jo
out
int
adcb
sub
push
sbb
mov
mov
nop
dec
movsl
and
mov
and
out
mov
sub
lock
cld
sub
cmpsb
or
pop
push
clc
test
push
sbb
mov
std
mov
xor
or
jnp
in
lcall
mov
shl
jp
fwait
mov
jmp
shrl
xchg
std
mov
lret
xchg
ljmp
jmp
inc
mov
cld
aas
cmp
mov
stos
aam
pop
aad
jg
pop
mov
pop
xor
mov
sub
xchg
stos
push
adc
fwait
das
in
mov
jmp
xor
sar
jl
pop
dec
mov
lret
out
xor
push
std
out
leave
xchg
sub
jecxz
sub
cmpsl
push
enter
leave
cs
inc
popf
mov
jmp
enter
scas
sbb
mov
xlat
or
test
out
lds
fnsave
push
nop
das
aas
dec
movsl
call
dec
inc
outsl
sbb
cmp
dec
fbstp
mov
notb
sub
push
adc
mov
fmull
iret
addr16
out
cmpsl
adc
sbb
mov
in
or
adc
jmp
dec
cmp
arpl
lret
das
nop
mov
jl
mov
or
and
xor
cltd
xchg
push
mov
out
or
inc
les
mov
mov
cmp
jae
scas
das
shll
arpl
sub
sub
sbb
out
lret
jae
sbb
pop
ror
fnstsw
test
ljmp
mov
or
pop
adc
out
lods
mov
mov
cltd
jle
pop
ljmp
jmp
xor
das
repz
cmpb
jbe
lods
cmp
aas
test
cld
sub
pop
adc
cmc
sub
insl
std
xor
inc
sarb
mov
cld
std
xor
push
mov
adcb
jno
nop
push
mov
mov
push
mov
leave
mov
fwait
nop
shl
icebp
iret
inc
fdivs
adc
mov
or
add
mov
sub
mov
flds
pop
daa
pop
pop
mov
add
leave
add
jecxz
lahf
ds
in
pop
xor
fcoml
test
and
mov
xor
out
aam
or
cmp
fbstp
fs
jmp
scas
scas
cli
outsb
int3
out
jmp
cmpsb
stc
xchg
nop
lret
lret
inc
or
xor
jnp
inc
sub
add
cmp
inc
in
cs
arpl
pushf
bound
lock
imul
ja
push
imul
ds
das
xchg
pop
into
mov
and
mov
clc
out
and
mov
xchg
adc
cmp
sub
lret
inc
adc
add
into
std
push
or
mov
sti
lea
hlt
test
js
movsb
in
fnsave
movsb
loopne
jp
jle
shl
inc
scas
imul
lock
test
sbb
push
sub
dec
cwtl
arpl
loop
das
jp
add
jp
jo
repz
mov
pop
lret
and
lret
pop
clc
cmp
mov
scas
shrb
xlat
and
enter
sub
sbb
mov
sti
push
sbb
pushf
dec
call
pusha
notl
loope
and
stos
cld
shll
mov
std
jmp
xchg
in
imul
in
mov
add
inc
or
fcomp
lods
push
sbb
jno
movsl
sbb
out
sar
fcomp
push
aaa
push
int
sbb
out
mov
negb
or
addr16
mov
mov
inc
jns
movsb
pop
lret
arpl
repnz
mov
je
insl
jno
xorb
int
idivl
imul
cwtl
xchg
loopne
mov
sbb
in
cmp
cli
cmpsl
pop
xchg
das
pop
add
pop
cltd
roll
test
out
mov
cli
push
data16
sti
adc
sti
pushf
rclb
test
pop
mov
cld
enter
push
call
aas
or
jb
movsl
cli
xchg
fwait
and
pop
ffreep
inc
add
mov
cltd
cltd
or
fistpll
cld
les
movsl
iret
or
inc
adc
pop
jmp
cltd
enter
out
stos
mov
addr16
fadds
inc
and
je
lahf
stos
xor
and
int
fdiv
jo
bound
push
cmpsb
push
mov
mov
je
or
loope
mov
stos
xor
xor
mov
leave
ss
or
sbb
test
jg
ss
xor
jns
cmp
scas
repnz
push
xorl
lahf
fnstcw
lock
fstl
fwait
shlb
int3
xchg
jno
loopne
push
sarb
xchg
jmp
and
sbb
je
xchg
rorl
sbb
gs
dec
les
jae
es
jb
arpl
mov
push
ret
xor
xorl
xor
pop
jno
jl
dec
inc
mov
pop
in
outsb
loopne
sbb
mov
xor
push
aaa
push
daa
fidivl
push
add
ret
or
icebp
add
sub
dec
and
inc
popa
add
nop
call
hlt
cmp
sbb
ss
sbb
dec
lock
mov
jbe
jns
lahf
xchg
sub
sub
rol
jne
inc
dec
jns
lahf
in
inc
cmp
jmp
sarb
mov
xor
inc
pop
cmp
call
subl
sbb
mov
arpl
xor
xchg
insl
jle
in
dec
hlt
jecxz
xchg
loopne
add
dec
or
push
lock
aaa
movsb
xchg
push
enter
dec
aad
mov
adc
pop
inc
adc
push
lfs
pop
adc
inc
lret
mov
bound
test
in
xlat
jae
xchg
mov
out
es
movsb
mov
aad
mov
or
adc
push
fwait
xchg
cmp
jns
mov
jne
hlt
dec
fdivr
inc
sti
sbb
movsl
mov
inc
sti
loopne
das
pop
jne
mov
add
xor
ja
lahf
and
std
xor
xor
ror
sti
ja
mov
add
adc
push
push
std
inc
mov
cmp
addb
or
inc
call
repnz
call
pushf
jle
jmp
fs
negb
ss
cwtl
arpl
mov
mov
add
scas
xchg
inc
pushw
xchg
pop
repz
mov
mov
inc
cmp
jno
adc
mov
mov
cmp
outsb
jbe
mov
mov
test
push
movups
pop
xchg
ret
sbb
adcb
inc
decl
xor
cld
lds
mov
jo
xchg
push
data16
fyl2xp1
adc
adc
test
dec
pop
cld
inc
add
lock
adc
hlt
sarl
fiadds
shl
pop
push
int3
or
jmp
dec
in
sbb
fdivrs
inc
jp
push
sub
mov
sub
add
xor
adc
fwait
loop
sbb
out
imul
icebp
push
sbb
aad
in
ljmp
mov
mov
xchg
in
mov
in
mov
xor
cmp
xchg
mov
mov
jns
in
pusha
lret
inc
sub
push
cmp
test
adc
int
push
out
pushf
lcall
mov
jbe
scas
shr
mov
es
iret
movsb
lods
sbb
add
sbb
xchg
in
pop
sahf
xchg
cs
cmpb
add
push
pop
or
in
divb
sub
lcall
xchg
sub
lahf
sub
ss
sbb
in
es
loop
test
rcl
cwtl
add
xchg
cmpsb
ds
xchg
bound
pop
das
push
stc
out
add
sub
pop
sub
test
rolb
in
daa
fadds
pushf
add
sahf
adc
aam
movsb
lahf
jle
daa
mov
push
out
popa
mov
dec
fs
fisubrl
xlat
shl
rolb
mov
cmp
jmp
aas
jmp
lods
ret
mov
lahf
in
jecxz
and
shrb
or
loop
inc
ret
push
mov
subl
xchg
fs
sbb
or
add
add
lods
mov
js
in
dec
insb
inc
incb
outsl
inc
leave
aaa
loopne
jl
arpl
orl
ja
cli
popa
enter
mov
int3
pop
loopne
mov
jbe
or
mov
in
lds
jae
nop
mov
pop
sbb
mov
sub
jo
test
test
aad
sbb
nop
inc
ret
mov
push
mov
incb
jo
xor
outsl
mov
dec
pop
ljmp
push
pop
mov
inc
cmp
dec
rorb
hlt
dec
jp
add
aas
cmp
lcall
adc
sahf
jns
test
mov
sub
es
into
outsb
insl
push
dec
mov
fucom
dec
iret
jl
hlt
xchg
sar
xchg
cmp
std
lret
mov
push
jns
adc
mov
mov
jecxz
out
mov
test
incb
mov
into
in
xchg
fwait
mov
rorl
ss
vmwrite
xor
lcall
mov
fsubr
std
les
add
or
nop
xlat
scas
and
scas
enter
mov
jl
xor
jmp
mov
loope
sbb
dec
iret
addb
fnstsw
in
sub
cs
or
push
jg
lret
or
mov
mov
cmp
fwait
das
mov
hlt
pop
sub
mov
or
jge
addr16
aam
mov
sub
xchg
bound
test
add
and
mov
mov
lock
sahf
cmp
xor
pop
in
enter
inc
adc
cmp
negb
add
xchg
fadd
gs
imul
loop
test
add
ljmp
cs
push
jecxz
addr16
and
pop
mulb
pop
inc
xor
cmp
jl
add
fisttps
bound
push
scas
push
mov
gs
cmpb
testl
mov
movsl
scas
pop
jne
push
int3
mull
or
adc
sub
and
dec
jmp
xchg
call
mov
lds
or
in
int
incl
fldt
push
insb
mov
popf
fwait
les
xchg
or
aas
jbe
cmp
cmp
std
cmc
push
sbb
or
mov
ds
jle
pop
setbe
jp
ljmp
stos
and
cmpsb
xlat
cld
faddl
push
insb
jmp
cmp
int3
xchg
shrl
out
cltd
mov
xor
lea
nop
and
stos
lods
repz
repnz
push
inc
lods
js
inc
fs
add
je
cli
pop
xchg
and
and
or
pop
add
pop
xchg
pop
dec
add
cmp
mov
fstpt
inc
jmp
dec
xorb
cmpb
mov
in
jmp
add
adc
lcall
adc
pop
dec
inc
dec
lock
ljmp
aam
xchg
dec
movsb
lds
push
or
dec
jns
adc
xor
mov
jno
aam
jns
into
jl
pop
inc
test
xor
xor
cmp
je
mov
xor
cmp
pop
loop
nop
jb
pop
sub
cmp
or
ds
lcall
push
inc
lcall
adc
sbb
je
sbbl
mov
out
or
lods
and
popa
aas
dec
int3
divl
mov
out
sahf
adc
push
inc
inc
out
out
mov
je
fxch
pop
into
bound
fisubs
sub
cli
mov
sbb
int
sub
aas
daa
mov
inc
xor
sub
js
and
test
stc
xchg
mov
lret
fmulp
scas
add
out
xor
mov
sub
test
add
pop
dec
rol
pop
mov
push
testl
jne
int3
jecxz
cmc
and
inc
mov
jmp
pop
jno
sub
lock
rclb
jae
mov
fwait
mov
ss
jns
pop
hlt
or
dec
mov
les
inc
imul
mov
sti
es
stos
pushf
jp
dec
jge
orl
gs
addr16
repnz
imull
pusha
roll
stos
or
sbb
push
movsb
mov
cmp
pop
ljmp
adc
insb
pop
mov
mov
adc
shrl
xchg
xor
out
daa
cmpl
adc
out
jo
scas
dec
cmp
sbb
sbb
fnstcw
cmp
sub
jecxz
cmpsb
or
mov
lea
push
mov
dec
scas
out
jo
faddl
in
outsl
pop
push
int3
outsl
inc
fadds
arpl
xchg
mov
testl
out
mov
jo
and
adc
jle
arpl
jne
stos
lods
jp
pop
sbb
mov
test
add
inc
movsb
pusha
rclb
xor
and
jns
std
jo
rclb
leave
push
mov
cmp
mov
inc
xor
ret
mov
ret
js
xor
fld
call
inc
insl
push
dec
mov
rcll
pop
adc
mov
es
iret
add
bnd
mov
popf
mov
fdiv
jnp
lods
outsb
jnp
jl
int
inc
stos
cmp
pop
adc
repz
lds
xlat
inc
mov
xchg
cmp
adc
mov
cmp
stos
sub
xor
dec
dec
pop
dec
xor
ret
lret
std
or
mov
andl
xor
int3
mov
jb
jns
xor
and
enter
aaa
and
xor
pop
pop
sub
mov
inc
sub
in
xchg
cmp
and
lods
mov
adc
iret
lret
and
and
fiadds
jmp
fwait
hlt
push
xchg
and
cmp
hlt
pop
imul
pop
std
dec
dec
stos
inc
sbb
mov
xlat
adc
pop
pop
dec
fnstcw
pop
imul
mov
jo
lock
aaa
add
pop
mov
or
repz
push
mov
dec
xor
jnp
xor
in
ret
int
cmpsl
sbb
or
vscatterpf0qpd
ret
scas
data16
xor
mov
jb
scas
das
lods
fnstsw
adc
ret
popa
call
mov
stc
sub
int
lahf
mov
faddp
cmp
push
mov
inc
xchg
adc
jmp
cmp
jae
in
and
scas
jmp
rorb
lods
mov
jl
adc
sub
pop
jecxz
add
xor
shlb
lods
sbbb
ljmp
cmc
dec
lahf
je
lds
shufps
xor
pop
add
insl
xor
testb
xchg
cmp
sub
jl
ljmp
outsl
jp
and
out
mov
out
mov
jl
mov
jne
add
xchg
lea
push
mov
mov
fsts
mov
cltd
cs
in
sbb
clc
icebp
xchg
out
mov
rcll
mov
jns
sbb
pop
lret
lret
sbb
mov
ret
imul
dec
inc
test
xchg
sub
xor
cmc
popa
fst
les
mov
cmp
cmpb
pop
jg
jns
ljmp
popf
cmc
mov
jo
fdivr
pop
lods
pop
cmp
lret
movsl
movsb
xor
rcl
sub
leave
xchg
scas
test
mov
sar
sbb
les
mov
int3
out
in
dec
stos
je
add
mov
mov
dec
leave
fsubl
sbb
cli
enter
cltd
ret
sar
xorl
pop
inc
jbe
stc
pop
xchg
push
adc
push
cwtl
dec
mov
shll
mov
sbb
iret
jp
out
cs
push
sti
lods
mov
adc
imul
jb
jecxz
test
sbb
neg
dec
mov
ret
mov
mov
xchg
add
jecxz
loope
dec
mov
test
or
mov
sub
inc
enter
adc
cltd
xlat
sbb
xor
adc
mov
push
push
add
repnz
cmp
mov
neg
cmp
sbb
iret
push
je
ljmp
jno
xchg
in
xor
xchg
stos
mov
sahf
or
aaa
dec
out
dec
sub
leave
lahf
in
out
imul
lahf
fstpt
sti
movsb
jbe
into
jmp
xchg
fmull
out
rcrl
mov
out
mov
lea
jle
out
inc
mov
push
hlt
addb
aas
popa
sub
mov
into
adc
scas
mov
andl
rorl
adc
adc
ds
adc
ficompl
mov
xchg
cmp
insl
or
movl
jmp
mov
pop
xchg
inc
stos
pushf
inc
mov
mov
inc
cmp
aas
shlb
jmp
outsb
aaa
ficompl
jmp
sub
pop
xor
lods
or
sbb
cmp
lock
adc
push
sub
fistps
mov
fstpl
call
dec
push
pop
push
push
inc
cmp
xchg
sbb
or
mov
mov
std
out
mov
in
insb
lret
imul
xchg
jae
js
pop
mov
movl
jecxz
mov
jns
arpl
jp
sub
inc
sbb
mov
mov
lock
add
mov
cs
jle
and
pop
sti
cmc
cli
and
fcoms
mov
and
insl
icebp
jmp
es
mov
add
dec
shl
adc
aam
push
out
repnz
and
inc
cmp
cwtl
jmp
lock
or
nop
lds
clc
lea
xchg
inc
add
roll
bound
xchg
add
aaa
imul
jg
push
sti
jbe
pop
sub
call
jns
stos
xchg
pop
lds
js
addr16
cmp
jb
frstor
xchg
dec
imul
mov
pop
push
sub
mov
loopne
pop
and
inc
mov
xor
fwait
insl
cmp
aam
cmpsb
dec
and
ss
aaa
or
mov
mov
push
imul
sub
sarb
xchg
cld
ret
fs
xchg
fdivrl
hlt
clc
js
jg
leave
and
cmpsb
pop
call
cmp
outsb
inc
push
cs
or
leave
or
xchg
data16
pop
cld
add
clc
cltd
lock
leave
fs
idivl
lock
test
jne
pusha
stos
xor
fwait
dec
shrl
out
or
cmc
dec
pop
repnz
cmpsb
mov
dec
cli
push
mov
sbb
adc
pop
ljmp
adc
cld
sbb
outsb
push
xchg
fwait
dec
out
aas
je
dec
and
lahf
jo
int3
fldt
dec
mov
sbb
xchg
mov
div
mov
dec
fnstsw
enter
inc
or
xchg
les
repnz
aad
mov
sarb
and
dec
out
adcl
jge
fwait
mov
inc
divb
fldl
cmp
xchg
mov
xchg
add
sahf
adc
out
mov
stc
adc
add
mov
xor
iret
lcall
xor
call
jge
sub
jne
lods
fists
cmpsb
sbb
xchg
scas
es
out
enter
mov
popf
xchg
adc
xchg
or
idivb
jnp
mov
mov
lea
inc
push
cmp
mov
xchg
jbe
sarb
jae
push
mov
dec
in
and
loop
scas
or
push
movsb
sbb
clc
cmp
dec
pushf
sbb
xor
mov
push
js
scas
mov
jbe
repnz
in
push
mov
xor
cs
jne
hlt
xchg
pop
mov
sti
fdiv
out
pop
imul
mov
test
jbe
out
mov
sbb
cmp
loop
or
or
jmp
push
mov
add
sbb
testb
and
cmp
fstp
insb
or
es
push
mov
jle
jmp
lods
rsqrtps
jle
jl
add
jmp
push
jmp
or
pop
scas
sbbl
or
gs
lods
sbbl
jbe
sbb
dec
movsl
cltd
pop
aaa
or
arpl
or
adc
mov
push
and
adc
mov
loop
ret
pop
xchg
fwait
jge
cli
mov
mov
pop
addr16
call
cld
xchg
fbld
fisubl
test
add
cmpsl
push
inc
fdiv
xchg
sub
add
out
jmp
outsl
popa
xor
jmp
mov
xchg
rcl
push
adc
push
add
mov
jle
in
loopne
stos
mov
loop
xor
mov
mov
icebp
mov
jl
xor
aam
out
adc
sbb
cmp
inc
movsl
out
repnz
mov
repnz
push
les
in
xor
ret
test
adcl
sbb
and
mov
push
cmp
sarl
das
and
sbb
arpl
out
fwait
pop
leave
jle
sti
aas
inc
test
fwait
jmp
into
mov
xor
mov
xor
in
pop
dec
pop
xchg
pushf
insl
mov
cmp
mov
dec
adcb
pop
fisubl
xchg
inc
cmp
xchg
pop
popf
stos
xchg
outsl
aam
push
mov
xlat
mov
divb
aaa
shll
lock
inc
push
ret
into
clc
dec
gs
repnz
loope
mov
sbb
into
cmp
outsb
add
stos
xchg
jae
mov
pop
dec
pop
mov
jp
scas
xor
movsl
and
jne
pop
dec
stc
jle
mov
mov
pusha
jge
sahf
test
add
sub
mov
jp
xchg
lret
imul
xor
in
repz
loopne
sub
xor
into
sahf
movb
push
ja
stos
out
pop
inc
xchg
es
sub
mov
xchg
insl
pop
das
jl
cltd
repnz
popf
mov
cmp
movsl
xchg
sbbb
ljmp
cs
leave
sbb
mov
push
jo
adc
repz
mov
and
jl
jne
test
daa
jle
mov
sub
in
jmp
test
push
mov
sbb
lods
sub
pushf
inc
mov
sub
lret
cltd
imul
stos
ds
test
sub
jno,pt
pushf
js
mov
dec
popa
sbb
mov
rolb
cmp
fcomps
mov
repz
jnp
pop
adc
or
dec
lahf
cmpsb
loop
push
push
or
xchg
sub
pop
fwait
add
call
inc
outsl
movsl
mov
enter
lcall
ljmp
dec
jbe
out
aas
mov
jmp
mov
shll
insb
sbb
fadd
push
add
aam
sahf
leave
xchg
lods
pxor
and
or
xor
dec
mov
fldenv
add
push
pushf
xor
mov
adc
lds
mov
cmpsb
xor
push
mov
outsl
mov
out
xchg
jnp
sbb
int
test
fwait
test
ljmp
xor
in
sub
pusha
ds
pushf
imul
sbb
js
mov
ja
mov
pop
add
jmp
sbb
mov
clc
movsb
cmp
add
and
out
sbb
cltd
xor
pushf
lock
jb
addr16
icebp
or
mov
out
add
mov
dec
pop
xorl
pop
jl
lea
mov
pop
mov
mov
lcall
fdivr
data16
push
frstpm(287
sbb
inc
jmp
mov
test
mov
cld
mov
iret
cmp
call
outsb
in
mov
cwtl
fwait
mov
jg
xchg
fsubrp
xchg
into
repz
movzwl
adc
pop
xor
xor
dec
xor
enter
or
addr16
lds
pop
stc
or
mov
mov
stc
stos
mov
or
jae,pt
mov
ds
outsl
fs
inc
xlat
xchg
sub
xor
mov
dec
addr16
mov
test
sbb
or
fsubl
fldcw
lret
clc
lods
inc
jo
cmpsb
test
jl
adc
cmp
xchg
push
std
in
inc
dec
leave
fdivp
faddp
mov
or
xchg
rclb
test
push
in
xchg
or
dec
xor
das
insl
scas
into
call
int3
mov
mov
mov
bound
notb
jge
cmp
insb
pop
loop
xchg
jb
jle
sub
ret
fadd
pop
bound
sub
leave
dec
jns
divb
inc
shlb
out
mov
sar
mov
mov
shrl
mov
add
psubb
enter
sbb
mov
inc
mov
push
into
in
out
cmc
testb
fisttpl
call
sbb
mov
rcrb
in
popa
add
mov
test
test
outsl
sub
jl
scas
js
and
jbe
stos
popa
rclb
std
mov
ret
lods
mov
ss
xchg
pop
iretw
mov
bound
mov
inc
aas
arpl
jbe
xchg
lods
or
setg
fidivs
cs
dec
mov
movsl
cmp
pusha
xor
test
cmp
outsl
push
rcll
sbb
push
or
jae
adcl
and
lds
shlb
inc
das
adc
pop
stos
je
out
aam
add
inc
imul
test
jge
and
mov
pop
loop
sbb
sbb
orb
sbb
aad
stos
mov
xlat
adc
lds
pop
and
and
mov
stc
cmp
and
add
push
jl
xchg
mov
mov
pop
or
sbb
ret
or
stos
push
aad
cmc
sar
inc
xor
call
add
sahf
inc
mov
pop
mov
xchg
sbb
test
inc
adc
clc
mov
mov
pop
popf
sbb
add
sahf
sti
sbb
loopne
push
pop
inc
loop
ljmp
inc
cmp
sub
adc
mov
nop
ljmp
jmp
jmp
fistpl
jbe
jge
pop
push
sub
fstl
lds
xor
es
fldenv
lahf
mov
out
mov
dec
clc
cmc
or
mov
out
and
shll
push
lret
adc
les
jge
int
or
aad
and
mov
mov
shrb
fistpll
test
shll
mov
push
in
movsb
ret
mov
jne
outsb
scas
push
imul
fisubs
scas
sar
lret
jnp
leave
pushf
adc
dec
pop
lock
fildll
sub
es
rcr
fwait
jmp
jno
mov
mov
mov
bound
ror
movsb
scas
mov
jns
cmp
fxtract
jns
clc
and
enter
movsb
cmc
cmp
sbb
flds
xor
dec
test
pop
loope
mov
aam
enter
sub
jbe
nop
out
push
xor
xchg
sub
fnstsw
rclb
fists
in
sbb
fwait
jb
subl
cwtl
xor
sub
push
dec
or
test
push
dec
mov
jg
lret
lods
jne
mov
mov
dec
mov
lret
mov
push
sahf
mov
adc
jp
or
dec
xchg
lock
mov
fstpl
push
jns
hlt
sub
fwait
call
scas
sub
js
ljmp
inc
jne
push
pop
out
mov
mov
adc
cmp
invd
inc
add
into
call
jnp
packuswb
push
push
int
xor
mov
js
outsb
outsl
mov
leave
pusha
xor
je
push
sbb
pop
pop
test
push
fdivrl
out
pop
nop
cltd
shll
loopne
push
xlat
and
push
test
cmp
fwait
ret
mov
bound
sbb
mov
push
adc
sahf
xchg
jle
xor
mov
add
js
inc
dec
rcl
jmp
push
in
push
jmp
in
sbb
pop
cmp
ljmp
fcmovnbe
lods
or
int3
sub
test
push
push
lahf
int3
jbe
mul
add
je
faddl
sbb
mov
mov
stos
lock
mov
out
sub
or
xchg
and
inc
jnp
pop
pop
scas
pop
cmp
or
vandpd
pop
mov
xchg
ja
dec
adc
pop
iret
fildll
lods
xor
pop
clc
push
test
scas
popa
lret
mov
test
and
cmpsb
mov
lret
lret
movb
das
sbb
xor
jecxz
loope
jb
mov
mov
lods
ja
out
and
dec
xor
imull
outsl
add
inc
push
arpl
mov
out
xchg
xlat
or
lock
es
sbb
dec
ficoms
or
fs
or
into
jno
mov
or
jo
fcom
popf
flds
push
push
loop
test
push
incb
sbbl
cmp
xor
pop
pop
jmp
push
xchg
xor
xchg
mov
movsb
inc
xor
jmp
push
ret
jne
xor
xchg
divl
and
push
cld
pop
incb
in
push
fistpll
pushf
xchg
jmp
das
idivl
push
stos
das
push
sbb
lret
and
mov
ljmp
repz
inc
imul
jp
push
xchg
fnstcw
dec
adcb
jnp
idiv
adc
sarl
xor
sbb
xor
int
push
fdivp
mov
jb
sbb
and
or
outsb
inc
leave
mov
lret
pop
idivb
ss
in
insb
xchg
cs
into
icebp
leave
pop
pop
xor
inc
mov
sbb
movsl
pop
sbb
add
shll
pop
mov
mov
xlat
push
sbb
and
in
jb
ja
xchg
mov
pop
push
outsb
mov
leave
test
cmp
sbb
mov
pop
lahf
pushf
xor
iret
fsubs
push
outsl
push
lret
shl
repnz
cmp
cmp
data16
inc
sti
and
pop
jmp
inc
enter
xor
mov
push
out
pushf
stc
cmp
in
jl
push
andb
jecxz
mov
int
mov
movsl
cwtl
dec
sub
push
cmp
dec
add
shlb
in
xchg
mov
push
xchg
ja
push
add
enter
mov
jb
popf
xchg
inc
jcxz
jnp
addr16
pusha
popa
push
dec
fwait
mov
dec
lds
jl
rolb
fldt
ret
jg
add
push
pusha
lcall
test
dec
dec
shrl
ret
mov
loopne
inc
mov
xor
test
int3
idivb
jno
mov
jb
adc
lods
loope
nop
stos
outsl
lods
das
cmp
or
mov
sbb
cmpsb
cmp
popa
fisubrs
jo
sub
in
xor
les
mov
xlat
imul
sub
les
imul
cld
stos
jno
xlat
pop
out
repz
mov
cmpsb
and
adc
xor
mov
mov
sub
or
into
xor
in
mov
mov
mul
lret
in
enter
jge
div
cmp
pop
hlt
pop
fldl
in
hlt
adc
outsl
lds
xor
inc
sub
out
push
add
add
es
xorl
xchg
mov
add
paddsw
jmp
dec
mov
adc
mov
and
ljmp
adc
inc
js
mov
sahf
dec
mov
into
ret
fwait
iret
sub
cmp
xor
mov
add
sarl
xlat
fcmovb
into
jb
push
mov
dec
daa
aam
push
mov
repnz
mov
add
loop
stos
inc
das
inc
mull
pop
pop
stos
sub
mov
ljmp
and
add
xchg
daa
insl
add
push
cs
mov
movsb
inc
jecxz
pop
shll
outsb
mov
scas
xor
testl
clc
sbb
xchg
mov
jl
mov
inc
xor
cld
movsb
mov
or
mov
xchg
mov
rolb
loopne
neg
xor
xchg
pusha
or
fs
rclb
pop
xchg
in
inc
and
xor
add
je
cwtl
pop
push
jno
sbb
add
xchg
or
push
mov
and
scas
dec
inc
mov
sub
pop
out
aam
cmp
jmp
pop
in
mov
into
jno
mov
adc
test
flds
inc
mov
inc
pop
cmp
jecxz
fldcw
adcb
push
insl
lods
cmp
lret
pop
xchg
ds
ds
in
mov
lret
cmpl
mov
in
push
jl
inc
adc
push
clc
ss
push
in
or
mov
mov
push
scas
out
and
or
cmp
jl
and
xor
pop
push
inc
push
in
mov
call
mov
outsb
sub
fcoms
enter
fs
je
lret
ds
lcall
sub
test
mov
push
sbb
repnz
sub
pop
inc
inc
mov
jg
sub
push
insb
xchg
aam
dec
or
loop
sbb
and
sbb
out
fisttps
sbb
push
movsl
stos
cmp
je
mov
adc
cmp
clc
sbb
loopne
dec
jno
dec
scas
iret
imul
sub
cmp
sub
loopne
mov
adc
inc
push
nop
sub
mov
into
inc
adc
inc
fcomps
jns
das
jbe
xor
adc
mov
mov
push
rcll
imul
in
pop
sbb
shl
mov
test
stc
sub
sahf
xchg
fwait
mov
xor
jo
mov
xor
mov
sub
pop
int
popf
mov
dec
jge
cmpsl
inc
jns
adc
xor
push
fisttps
push
mulb
iret
mov
inc
mov
int3
mov
nop
sar
movsb
xchg
lea
fmuls
mov
mov
in
adc
sub
and
sub
mov
out
jb
inc
push
xchg
push
add
scas
bound
lret
scas
rorb
mov
xchg
push
neg
mov
insl
pop
cmp
ss
xchg
ficoml
jbe
in
stc
inc
cmpsl
lds
mov
sbb
in
outsb
icebp
push
cmp
stos
sbb
out
jne
mov
mov
add
orl
out
lock
ret
push
xchg
ljmp
aam
outsl
add
xchg
mov
jge
xchg
mov
mov
mov
pushf
clc
popa
xorb
cli
test
sub
cld
cmp
and
mov
popf
cmpl
lcall
int
std
push
add
fildl
sbb
lods
xchg
push
and
pop
lret
aad
popf
or
test
fnclex
xor
flds
popa
mov
mov
aaa
mov
das
test
inc
xchg
jle
test
aas
push
push
jg
xchg
mov
cmp
loope
mov
js
jle
mov
xchg
cmp
xchg
pop
insl
pop
xchg
add
stc
daa
loope
scas
xor
or
sbb
and
cltd
add
test
mov
sub
ficomps
lcall
inc
lods
imul
xchg
add
out
loopne
lods
es
sub
loopne
arpl
fucomp
xchg
ja
adc
xchg
xor
xchg
sbb
rolb
push
adc
lds
sbb
adc
in
sub
xor
cwtl
fnstenv
jg
jns
fldl
shlb
xchg
push
insb
cld
mov
outsb
cli
and
jg
and
ja
movsl
and
push
xor
imull
mov
ljmp
inc
lcall
roll
ffreep
lcall
scas
nop
sti
cmpsl
setno
loope
jge
ja
aas
add
push
mov
lods
xchg
andl
fidivs
xor
inc
scas
or
xchg
enter
pop
loope
imul
std
push
jecxz
adc
sahf
dec
mov
mov
sub
mov
xorb
adc
mov
sbb
sbb
and
mov
mov
icebp
add
sbb
mov
test
xor
push
xchg
ror
daa
jge
in
loop
outsl
test
ret
imul
shlb
aaa
xor
mov
xchg
xchg
shrl
sub
and
arpl
addl
jmp
sub
push
repnz
mov
loopne
outsl
daa
leave
rcl
mov
lret
iret
data16
pop
out
mov
cmc
adc
push
pop
xchg
jge
or
int
mov
je
or
inc
push
ljmp
call
test
adc
aam
jo
aaa
xchg
xchg
stc
xchg
push
sub
sub
js
xor
icebp
hlt
xlat
add
mov
jbe
push
insl
popa
inc
inc
sbb
lods
xor
daa
cmpsl
and
xor
push
gs
enter
lea
movsb
rolb
adcl
mov
cltd
das
jecxz
idiv
cmpsb
mov
outsl
inc
pop
icebp
dec
or
lahf
cmpsb
addr16
aam
mov
lea
xchg
aaa
lods
xor
inc
loope
pop
stos
cmpsb
sub
frstor
daa
mov
mov
movsb
scas
mov
data16
dec
in
mov
xor
push
push
jle
in
cmpsl
dec
push
fbstp
fwait
popf
mov
mov
adc
xchg
push
test
pop
inc
in
adc
push
pop
in
faddl
dec
push
mov
ds
mov
cltd
fstpl
rcr
cmpsb
jp
sahf
jge
sbb
aaa
add
mov
outsb
mov
add
dec
sbb
inc
jge
add
lcall
dec
shlb
jnp
adc
xor
je
rcrb
push
add
add
xchg
mov
or
and
pop
mov
or
mov
aad
insb
inc
repnz
fs
and
cmp
fimull
and
cld
stc
out
jnp
lods
and
in
enter
add
jns
movl
jge
std
jne
xor
js
or
ss
ret
lcall
adc
iret
mul
and
cmp
in
mov
add
test
flds
mov
outsl
stos
push
aam
lock
les
imull
scas
mov
rcll
mov
cli
iret
mov
mov
add
lods
xor
xor
mov
hlt
adc
sahf
mov
dec
jnp
add
jbe
dec
add
mov
aaa
notb
and
jb
pushl
div
ret
inc
xor
mov
sub
xor
push
shlb
mov
je
inc
and
mov
and
adc
jl
mov
cmpsl
out
jl
aad
cli
sbb
pop
enter
adcb
sarl
lahf
and
sbb
cmpsb
pushfw
or
sub
clc
lcall
lcall
ljmp
sub
cltd
inc
pop
ja
cmp
cmp
lods
aam
shlb
fsubr
xchg
xor
push
fs
fdivp
inc
or
push
lea
xchg
xchg
sahf
dec
fldcw
xlat
ret
lret
dec
aad
mov
es
xchg
push
iret
sub
jecxz
and
cmp
orl
adc
lods
in
jp
dec
xchg
pop
or
lahf
nop
pop
jb
push
mov
stos
cmpsl
mov
inc
out
stos
ret
cmp
dec
mov
insb
fstl
lea
or
test
shlb
push
into
push
xor
mov
lock
push
adc
je
inc
in
hlt
push
xor
mov
push
cltd
add
out
inc
add
cmp
jmp
dec
mov
xlat
xor
or
cs
es
add
xchg
inc
lcall
test
sub
xchg
dec
push
mov
out
mov
inc
out
scas
adc
xchg
cltd
ret
add
aas
xchg
gs
mov
lsl
xor
cmpsl
mov
dec
imul
jle
sub
test
pop
iret
pop
std
imul
push
cmpsb
rdtsc
mov
out
xchg
lret
push
cmp
adc
cmp
pop
adc
and
test
jbe
xchg
push
sahf
inc
aad
xor
ja
sti
leave
ljmp
stos
mov
push
addr16
rcr
mov
ljmp
cmpsb
fwait
lds
adc
dec
stos
inc
enter
les
outsl
xor
shrb
xchg
adc
test
mov
sub
or
sbb
loop
pop
imul
xor
cmpsb
jmp
sub
inc
pusha
xchg
inc
into
jl
push
std
imul
cmp
push
inc
or
dec
adc
and
and
cmpsl
inc
jbe
jmp
nop
xchg
and
mov
or
popf
xor
mov
out
mov
xor
mov
inc
mov
push
adc
shlb
ror
or
out
orl
lods
or
adc
enter
enter
dec
mov
jbe
cld
jbe
inc
mov
imul
les
jp
aaa
mov
mov
out
arpl
nop
mov
stos
push
sub
inc
pop
arpl
lret
mov
ret
xchg
js
popa
mov
push
mov
gs
out
scas
pusha
cmc
psllw
push
das
icebp
mov
ret
mov
and
mov
mov
inc
fistps
cmc
aad
data16
push
add
sbb
test
mov
add
or
mov
jge
in
js
sar
cli
fidivrs
adc
or
adc
das
insl
mov
dec
cmp
push
or
adc
imul
dec
jmp
adc
jno
hlt
std
lret
repz
adc
test
mov
mov
pushf
mull
pop
push
les
xchg
scas
ljmp
outsb
int3
pop
xor
aaa
jmp
outsl
testl
gs
sbb
in
mov
push
cmp
mov
dec
idiv
cwtl
aas
cmp
inc
repz
mov
jg
xlat
loope
std
test
cmp
mov
movsb
mov
lahf
aas
push
stc
dec
pop
stc
xchg
das
add
sub
mov
std
loope
xor
cli
xchg
cmc
rol
mov
adc
add
and
shll
stc
add
lcall
inc
lods
and
jl
dec
ficoml
cmc
imul
mov
fistpll
lcall
pop
and
push
fs
mov
pop
ja
xor
fmuls
mov
cwtl
les
mov
lea
std
or
jle
mov
jl
fdivl
mov
sub
test
adc
mov
maskmovq
mull
jge
sbb
cs
jmp
xchg
lds
jbe
fisubrs
inc
mov
sub
jnp
popf
cmpb
decl
pop
arpl
push
sub
mov
lds
mov
jmp
scas
inc
aas
call
jne
or
and
fmull
loopne
mov
pop
xor
and
sub
ficoms
push
add
push
mov
jb
shlb
add
js
cs
mov
pop
sub
call
jmp
pop
arpl
or
xchg
mov
add
clc
push
out
xor
mov
dec
aas
push
nopl
pop
sbb
outsl
faddl
sarb
mov
adc
insl
xlat
jmp
test
iret
adc
add
pusha
into
push
xchg
or
data16
cmp
mov
mov
sti
cmp
xchg
fstps
aaa
dec
sbb
popf
adc
inc
sbb
xchg
push
mov
cld
std
or
pop
dec
call
mov
jnp
pop
test
arpl
sub
push
xchg
mov
imul
mov
pushf
fidivl
dec
jmp
decl
test
call
mov
mov
add
lahf
pop
sahf
stc
out
fildl
pusha
dec
push
dec
sbb
or
add
xchg
das
push
jge
imul
fistpl
sbb
push
jmp
mov
cmp
into
cld
jae
popf
aas
in
insl
push
stc
mov
xchg
mov
int3
ror
insl
je
xlat
jns
cld
xor
shrb
mov
outsb
test
jnp
inc
adc
stc
std
xchg
push
mov
pop
insl
arpl
sbb
xor
sahf
mov
outsb
cmpsb
xor
xchg
je
mov
lods
mov
pop
cli
out
hlt
cwtl
jp
push
adc
ficoms
mov
or
adc
mov
clc
popa
cmp
lods
jno
mov
cmc
push
daa
cmpl
and
fs
inc
loopne
push
mov
sahf
and
sub
inc
filds
insb
das
cli
test
in
push
pop
pushf
push
xchg
or
sbb
push
int3
xchg
lea
mov
push
shll
call
mov
loopne
mov
mov
stc
cmpsb
test
mov
stc
push
jno
lods
push
inc
test
fildl
scas
and
xchg
xor
ficomps
adc
dec
cmp
leave
sub
outsb
inc
xchg
repnz
adc
test
xchg
es
imul
adc
fucomip
popa
jns
in
scas
scas
shll
mov
xchg
aad
idivl
cmp
shll
mov
pop
jbe
xor
je
or
ret
jmp
ja
std
fildl
andl
test
iret
sub
inc
mov
cmpsl
pop
sti
loop
lret
cmc
xlat
daa
sub
cmp
ss
jae
pushf
dec
ret
jns
lcall
cmpsb
es
mov
or
jg
enter
mov
or
mov
lea
in
ucomiss
mov
mov
mov
dec
jo
xchg
in
movsb
and
mov
loopne
pop
das
std
dec
and
jmp
mov
or
jns
out
cmp
pop
inc
sbb
loop
jmp
mov
lahf
inc
sub
lret
mov
fisubrl
jp
mov
adc
rol
push
das
addr16
mov
xchg
push
xchg
aad
mov
jge
leave
mov
arpl
call
pop
xor
adc
lods
inc
mov
inc
push
jno
cmp
mov
pushf
and
in
push
mov
mov
mov
xorb
lods
xchg
es
ljmp
mov
lock
test
lds
inc
jne
mov
out
mov
push
mov
lods
daa
data16
or
imul
fldcw
xchg
cmc
pop
in
and
in
ds
int3
or
push
js
pop
mov
dec
int
push
mov
sar
fistps
mov
sub
cld
inc
mov
in
scas
icebp
sub
xchg
push
dec
sbb
jne
mov
loope
cmpsb
xchg
mov
push
mov
jns
xchg
push
push
fs
push
mov
push
in
xchg
push
hlt
int3
inc
les
add
ret
mov
dec
pushf
xchg
pop
or
fisubs
sub
cmp
pop
jmp
dec
jge
pop
xchg
fsubr
stos
dec
cmp
sbb
pop
es
and
cmp
or
imul
pop
push
push
sub
imull
xchg
js
mov
lahf
add
test
xchg
fbstp
mov
ficoml
icebp
loop
rclb
repz
mov
mov
jmp
testl
out
sbb
and
loopne
mov
pop
pop
fnsave
mov
mov
pop
adc
jmp
fstl
ss
cmp
xor
push
sub
lods
pop
fcoms
and
cld
icebp
push
mov
sbb
push
mov
popf
inc
pop
mov
fsin
jge
dec
jle
jno
or
mov
test
cltd
frstor
xchg
shrl
or
push
icebp
add
fcmovbe
call
cmp
mov
nop
clc
outsl
ss
and
fbld
and
sarl
dec
pop
fcmovne
ljmp
mov
loopne
push
xchg
ja
xchg
push
cmova
mov
add
add
push
jnp
int
inc
mov
xchg
lahf
inc
and
insl
lds
push
jns
out
cmc
std
out
out
cmp
pop
icebp
pop
mov
scas
shrb
notl
dec
jge
hlt
movsl
aad
movsl
mov
mov
sbb
xor
add
sub
xor
fdivr
push
mov
pop
dec
cmpsb
adc
push
lret
mov
sub
mov
push
sbb
nop
stc
int3
or
jnp
daa
cmc
dec
mov
sbb
mov
cmp
notb
cltd
fistl
or
in
test
std
leave
adc
dec
or
jne
inc
dec
push
fs
lds
or
mov
movsl
mov
inc
cmp
outsl
aas
and
and
jo
fdivs
cmp
les
sub
cmp
out
xchg
incb
xor
inc
jne
sub
sbb
adc
xchg
push
cmp
cli
shl
imull
ret
das
mov
cmp
push
and
xor
xchg
xchg
dec
dec
xchg
faddl
into
cmp
ret
inc
stos
ja
lret
ret
or
add
and
or
or
push
mov
icebp
stc
popf
add
xchg
mov
jmp
scas
data16
cmpsl
shll
scas
push
jmp
cmpsl
mov
clc
rolb
popl
in
repz
jp
jmp
jne
ss
fdivrl
and
pop
in
and
shlb
jno
loope
into
imul
mov
repnz
push
in
adc
mov
icebp
dec
cmp
lea
hlt
and
fcomps
inc
xor
rorl
aam
mov
mov
stos
cmp
add
cmp
inc
jae
push
xor
pop
or
adc
movsl
test
jae
repnz
lods
shll
insb
mov
movsb
mov
imul
lods
xchg
testb
mov
push
mov
sub
stos
enter
es
xchg
xor
dec
push
sbb
push
sub
mov
out
cli
mov
daa
jp
dec
sbb
jmp
jp
jns
sbb
orl
dec
sbb
scas
xlat
dec
sub
push
icebp
movsl
fcomps
sub
std
jbe
lahf
pop
sub
mov
imul
push
xchg
add
mov
xchg
add
and
push
xor
sbb
out
in
pop
mov
in
adc
push
jb
cmpsb
in
dec
movsl
push
adc
in
mov
mov
imul
sbbb
or
pushf
ds
pushf
jle
and
ja
ret
push
adc
mov
and
insl
lods
gs
push
cmp
sbb
mov
pop
imul
inc
push
cmp
push
and
idivl
cmp
push
push
sbb
jle
sbb
adc
jnp
in
cmc
gs
repz
outsl
push
inc
cmp
xchg
inc
mov
sub
decb
and
lret
in
push
cmpsb
sub
fnstcw
daa
xchg
in
bound
push
xchg
subl
and
dec
xchg
sub
sbb
pop
gs
xor
lock
cs
lods
mov
aaa
ljmp
cmp
push
pop
sbb
out
arpl
cmp
lahf
push
pop
and
loopne
push
je
push
insb
lods
test
add
xchg
pop
sarb
mov
sub
shll
push
xor
jnp
movsb
dec
out
and
int3
jb
push
sbb
xor
push
scas
test
mov
ja
sbb
cli
xor
icebp
incl
mov
out
stos
test
sub
pmuludq
add
insl
mov
test
rcrl
add
stc
sbb
xor
add
fwait
sbb
or
add
sub
fiadds
mov
out
inc
or
mov
pop
adc
mov
and
mov
cmc
and
inc
or
cli
shl
hlt
push
clc
inc
movsb
int
js
sbb
or
sub
dec
or
pop
test
or
dec
push
dec
cltd
jo
cwtl
mov
into
jo
insb
jp
aas
jg
std
or
cmp
femms
sti
icebp
pop
sub
cmp
fiaddl
inc
xlat
push
lds
into
mov
dec
out
insb
add
aam
dec
push
mov
xor
jl
inc
dec
jmp
int3
jmp
add
cmp
mov
fldenv
loop
popa
or
inc
mov
jo
mov
scas
sub
movsl
cli
sub
mov
mov
sbb
shll
push
jnp
inc
ljmp
xor
mov
inc
shlb
and
mov
in
cmp
ljmp
insb
int3
jo
jae
fcoms
idivb
repz
cli
sub
loop
dec
mov
and
rorb
push
add
stos
cmp
arpl
add
mov
add
cltd
mov
fstl
fsubs
xorl
fwait
jp
les
test
xor
loopne
lods
arpl
ror
movsb
or
sbb
pop
and
fs
add
gs
inc
stc
out
cmpsb
sbb
lret
fisubrl
xor
push
push
clc
mov
and
roll
arpl
mov
push
jns
pop
sbb
and
icebp
scas
push
rolb
js
test
and
fidivrl
push
dec
fcoms
sahf
jp
add
xchg
inc
cmpsl
add
lcall
outsl
orl
xchg
pop
daa
pop
xor
cwtl
imul
xchg
xchg
out
pop
push
insb
cmp
sbb
es
fisubrl
jne
cmp
enter
pop
popa
or
cli
sub
dec
loope
movsl
pop
dec
jb
lahf
sub
xchg
incb
inc
inc
and
mov
inc
xchg
cmc
fsubl
sub
loope
ds
in
in
or
popa
push
pop
in
cltd
out
and
jle
ret
and
xor
jl
mov
mov
scas
mov
mov
sbb
mov
int
lcall
jae
dec
dec
popa
jae
sar
imul
rcl
aam
inc
xor
jg
pop
fptan
mov
sub
sub
xor
push
push
clc
ficoms
idivl
fsubs
call
outsl
inc
in
push
movsl
jne
ret
aad
xchg
sub
mov
rorl
es
inc
rorb
daa
mov
and
xlat
pop
jno
pop
mov
xchg
mov
pop
scas
cli
test
rcll
adc
cld
mov
push
pop
lea
jecxz
push
dec
xor
sbb
pop
sub
outsl
xchg
mov
insl
mov
mov
push
shrl
inc
mov
rcl
aam
test
add
sbb
jg
dec
sbb
add
dec
sarb
and
xor
xchg
shr
jg
sbb
lock
mov
pushl
push
sub
dec
mov
push
and
pop
cmpl
negl
mov
add
imul
mov
stos
xchg
jb
mov
jg
aad
dec
enter
xor
cmpsl
mov
pop
push
int3
nop
dec
xchg
sub
xor
jmp
subw
pushf
das
cwtl
shl
pop
mov
stc
repnz
lahf
imulb
inc
adc
or
in
xchg
pop
cmpsl
cmp
add
int3
mov
sub
cmp
shll
cmp
jle
aad
pusha
cmp
jmp
xchg
movsb
mov
and
scas
or
push
sbb
dec
cmp
sbb
dec
push
das
pop
outsb
mov
decl
push
xlat
sub
enter
ret
mov
sub
in
test
outsl
or
fldenv
repz
cmp
fisubs
dec
or
fsub
xorb
in
repnz
dec
pushf
jno
mov
scas
jle
fbstp
mov
iret
inc
lods
sub
lret
out
mov
sbbl
dec
cmp
pop
mov
cltd
and
or
sub
sub
lahf
fnstenv
mov
shl
std
mov
inc
mov
inc
int
fidivrl
dec
jg
sbb
insb
and
vmovdqu
shlb
xchg
in
xchg
fldt
cli
or
bound
divb
lcall
leave
sbb
fistps
dec
mov
loopne
outsb
adc
fstpl
ljmpw
xchg
movsb
inc
or
jb
cmc
stos
dec
push
lods
xchg
mov
and
sbb
inc
cmp
or
sub
jl
aad
mov
and
test
or
inc
mov
push
xchg
jnp
sub
add
sub
lods
cmp
js
mov
ja
mov
inc
ljmp
jbe
xchg
cmc
mov
cmpsb
push
push
repz
ficoms
test
out
arpl
mov
arpl
inc
sbb
sar
and
call
movsb
inc
dec
jb
rorl
sub
pop
popf
push
xchg
les
fcoml
rcll
push
mov
jnp
xchg
cmp
fldenv
aaa
rcrl
mov
fbld
andb
enter
scas
push
cs
mov
push
and
movsb
mov
andb
add
rol
pop
lret
mov
jp
mov
add
cmp
add
lcall
repnz
movsl
mov
bound
lret
mov
das
fcoms
inc
je
in
in
mov
pop
xchg
ret
bound
pop
iret
sub
fists
push
into
rorb
xor
std
js
cwtl
mov
push
aas
lcall
sbbb
aas
push
lods
inc
xchg
pop
add
sbb
sub
int
outsb
shl
pop
sbb
in
fisttpl
mov
sbb
outsb
decb
mov
add
repz
push
sbb
ret
jp
dec
sahf
ss
test
mov
jb
into
mov
sbb
idivb
out
fwait
xor
cmp
fcmovnu
fbld
jl
add
push
sub
sbb
xor
pop
pop
js
adc
push
punpckhdq
add
adc
or
dec
sti
xor
lret
ret
ljmp
rol
movsl
imul
ja
jbe
mov
out
les
inc
lret
dec
add
sub
loopne
sti
aas
ljmp
sub
cmp
xor
sbb
leave
icebp
mov
lods
lret
in
mov
push
and
stc
addr16
xchg
or
pop
orl
inc
and
sarb
jnp
pop
jne
popa
loope
or
mov
xchg
insb
ret
adc
leave
and
andb
test
adc
jecxz
push
stos
sti
ljmp
les
pop
cmp
out
and
xchg
lret
out
lret
dec
xchg
sub
xchg
hlt
out
testl
adc
mov
xor
or
cs
inc
push
imull
jl
ret
iret
sub
push
sub
push
adc
lret
cmp
dec
fmul
cwtl
sub
mov
jmp
jle
pop
insl
and
jl
clc
sbb
xor
jecxz
iret
lock
xchg
lds
dec
testb
addr16
jo
test
repz
mov
xor
scas
fbstp
out
loope
rcrl
mov
mov
jne
popa
and
xor
jge
mov
jle
fisttps
add
mov
sub
into
cmc
adc
mov
mov
arpl
sbb
icebp
mov
lret
in
sbb
sarb
sbb
sbb
je
syscall
add
pusha
insl
jne
jae
jecxz
cmp
jmp
pop
mov
out
std
add
pop
lods
add
in
pop
ficoml
and
shrl
roll
sahf
decb
pop
ja
push
inc
sbbb
repnz
fs
loopne
and
inc
lret
lret
in
adc
jnp
pop
push
or
popa
ljmp
sbb
sub
stc
jne
pop
xor
ja
fimuls
push
xchg
and
pop
call
dec
cli
push
faddp
mov
testl
aaa
push
inc
sbb
adc
sub
sub
push
pop
movsb
aam
xchg
dec
cmpsl
cmc
js
adc
jmp
mov
insl
push
xlat
xchg
mov
cli
in
push
adc
sbb
push
adc
jae
mov
je
out
jge
mov
loopne
lahf
into
fs
inc
mov
sub
mov
xor
out
mov
or
sbb
cld
and
sub
mov
mov
cmc
adc
mov
pop
fidivrs
loop
inc
stc
and
cmpsl
aam
adc
lcall
xchg
mov
fcomps
pusha
cmp
int3
fisubrs
push
or
jb
cmpl
cmp
jle
sbb
das
cmp
dec
test
sahf
out
inc
idivl
mov
repnz
cmp
fiaddl
aaa
dec
add
bound
idivb
sub
icebp
jp
mov
roll
in
dec
add
int3
aas
int3
int
or
jne
mov
ljmp
jnp
out
mov
pushf
inc
and
mov
lods
xchg
fbstp
push
testl
imulb
sahf
jbe
in
xchg
jge
mov
mov
ljmp
cs
data16
dec
and
mov
lea
enter
dec
loopne
push
inc
mov
out
jnp
xor
jbe
add
inc
in
sbb
pop
inc
push
jno
sbb
pushl
jl
subb
inc
inc
into
xor
ss
inc
add
stos
pop
test
pop
lds
inc
aad
ror
ret
jns
test
imul
jecxz
pop
cmp
out
mov
shlb
push
pop
jp
push
fsubl
hlt
out
push
jge
or
mov
mov
fstpt
popf
pop
or
or
cmpsb
popf
lcall
xchg
xor
cmp
xchg
sbb
stos
jge
mov
xor
psllw
mov
aad
out
out
fidivs
sub
aaa
sub
xorl
fldl
add
jnp
xchg
sbb
sub
push
fimuls
popl
push
fwait
push
push
mov
ficoml
push
mov
pop
xchg
aad
fldt
mov
faddp
leave
push
mov
popa
sub
sti
dec
xchg
stos
sbb
push
dec
dec
mov
push
shll
in
aad
jns
inc
inc
jge
arpl
add
aam
clc
stc
or
mov
sbb
ret
jnp
cltd
neg
xchg
sbb
and
dec
mov
pop
sub
aad
dec
adc
sbb
cmp
mov
mov
xor
sbb
test
push
sub
or
xchg
sub
lock
insl
mov
push
push
dec
insb
sbb
jmp
aad
push
xchg
xchg
test
jbe
mov
insb
imul
arpl
das
adc
gs
dec
or
call
xchg
cwtl
mov
arpl
test
xorb
lahf
xchg
sub
gs
movsl
jp
xor
xchg
lret
mov
sbb
repnz
jl
cmp
push
fistl
push
leave
fwait
jo
lahf
notl
pop
enter
jns
push
or
xchg
ja
pusha
enter
jmp
jg
pop
dec
mov
push
adcb
iret
aas
jne
fnstenv
cmp
or
filds
dec
repnz
fdivrl
or
repz
fwait
negb
enter
test
xchg
jne
aad
cmpsb
icebp
cmp
nop
dec
pop
lahf
dec
std
lea
ljmp
int
ret
daa
mov
jp
iret
test
cmp
aad
cmp
mov
arpl
rcll
mov
or
fcomip
adc
add
test
lods
dec
rcrl
enter
xchg
push
lock
mov
adc
in
fildll
dec
mov
iret
scas
cmp
popa
lods
std
clc
cltd
jmp
adc
push
repz
and
fwait
pushl
outsl
cld
lock
aas
add
mov
pop
cmpsb
ja
roll
mov
pop
add
lret
add
add
jo
test
adcl
fisubl
cli
enter
movsl
std
mov
lods
sbb
sbb
outsb
movsb
inc
mov
fstpt
mov
sbb
mov
mov
arpl
cli
in
push
sti
movsb
mov
mov
out
pop
ret
std
push
arpl
sbb
or
xor
or
lahf
mov
rclb
push
ret
and
jns
bound
into
xchg
enter
outsl
cld
mov
daa
push
jl
cmp
int
bnd
mulb
dec
cli
mov
movsl
testl
jne
movsl
movsl
sbb
sbb
inc
sbb
mov
adcb
loop
and
outsl
cld
cld
movsb
sbb
cmp
push
jb
ss
push
ljmp
mov
jecxz
bound
mov
loopew
mov
pop
cmpsb
aas
rcll
adc
roll
jg
jg
push
dec
or
jl
sti
cmp
push
in
mov
out
mov
mov
fs
cwtl
jae
pop
insb
push
decl
testb
pop
sbb
jo
rcr
cs
aam
jae
pop
pop
mov
test
stos
or
cmp
stos
mov
addl
lret
xchg
adc
fstpl
or
mov
sahf
jge
inc
fidivrs
nop
lods
fisttpl
jne
mov
sbb
push
mov
stos
rolb
fcoml
push
pop
xor
jbe
cltd
aad
or
pop
jge
mov
stos
bound
pop
lcall
xchg
clc
pop
xchg
cld
loop
push
push
out
repnz
enter
or
aaa
rorb
mov
imul
ss
jecxz
pushf
cld
fnstcw
ret
sbb
pop
or
jge
lds
shrl
in
cli
cmpsl
jbe
daa
jle
mov
adc
jmp
mov
mov
scas
xchg
and
in
sbb
xchg
pop
and
pusha
sbb
cwtl
adc
in
sub
mov
mov
add
scas
ret
repnz
mov
mov
aaa
nop
mov
mov
stos
movsl
test
jne
mov
fsubrs
inc
push
cmp
insb
jb
push
mov
lret
stos
in
dec
ret
push
fcomps
clc
lock
cmpsb
jbe
shll
mov
iret
out
fdivp
push
cmpsl
popa
xlat
in
push
pop
test
out
das
jecxz
stos
dec
loop
cli
adc
adc
lds
sub
or
pusha
cs
and
ret
js
mov
sub
push
out
mov
mov
scas
insl
mov
mov
cwtl
sbb
xchg
mov
sub
fldcw
mov
nop
or
inc
gs
push
lods
movl
inc
xchg
mov
fsubs
push
mov
mov
fdivrs
leave
mov
add
dec
loope
add
pop
inc
jle
fstps
std
popa
xchg
mov
jle
test
fucomip
aas
mov
repnz
sti
je
into
or
aas
jmp
sub
adc
mov
js
scas
stos
das
lods
dec
popf
add
xchg
imul
pop
fsts
dec
jle,pt
xor
jg
mov
bound
xor
xchg
test
jmp
push
add
mov
stos
js
ds
pop
mov
rcrb
leave
mov
ss
ss
test
incb
mov
lahf
gs
mov
sti
xor
ror
adc
sbb
aad
adc
lods
dec
sbb
adc
cmc
stos
iret
jl
inc
push
and
sbb
add
xlat
mov
call
imul
sqrtps
insl
pusha
fnstenv
repnz
inc
stos
adc
xchg
cli
jb
fs
xchg
push
sub
or
insl
xchg
movsl
xchg
mov
lock
loopne
add
dec
lcall
or
push
insb
xor
mov
mov
dec
mov
pop
subb
xchg
xlat
orl
inc
sbb
sub
inc
daa
mov
ss
insb
jno
pushf
js
pop
andl
loopne
mov
sbb
push
push
adc
stos
inc
lods
sbb
les
imul
jmp
jno
mov
int3
imul
sub
subb
ret
popf
push
inc
jmp
in
pusha
jmp
xor
jns
fidivrl
xor
dec
mov
mov
xchg
adc
out
mov
mov
dec
stos
pop
imul
sbb
scas
jge
adc
inc
subl
add
loopne
inc
mov
test
adc
mov
int
pop
in
cmp
insl
adc
pop
mov
cmpsb
lods
cli
lret
sti
in
or
pop
cli
pop
jg
mov
call
decb
mov
sub
sbb
push
or
inc
stos
push
in
std
jl
shrl
jne
inc
mov
in
jge
jl
lods
pushf
insl
in
xor
leave
movsl
and
mov
sbbl
jo
fwait
mov
push
xor
fsubrp
dec
cmp
mov
mov
iret
sbb
jae
mov
xchg
std
cmp
jbe
xchg
push
rcr
adc
clc
push
cwtl
push
jl
pop
sub
mov
mov
lock
push
dec
loope
ja
rorl
mov
hlt
out
pop
imul
fiadds
cltd
in
xchg
inc
mov
in
in
xchg
decl
daa
add
cs
out
outsl
out
add
mov
or
in
stc
mov
sbb
and
addr16
repnz
jecxz
repz
jbe
ja
dec
divl
xchg
mov
shl
fidivrs
mov
fsubrl
ljmp
out
xchg
pusha
xor
imul
mov
push
scas
mov
rorb
lods
sbb
rcrl
pop
pusha
pop
lods
bound
mov
cmp
out
and
jg
scas
out
inc
pushf
addb
shl
mov
rcrl
pop
jns
sub
hlt
nop
rcrl
out
mov
orb
scas
mov
xor
repz
and
repz
fninit
outsb
jo
or
stc
mov
lret
mov
mov
addr16
std
or
ret
cmp
and
or
cmpsl
mov
inc
bt
jecxz
popa
cwtl
mov
out
mov
not
scas
adc
dec
jle,pn
jne
pushf
scas
pop
lahf
int3
cld
fwait
push
dec
sbb
mov
addr16
call
ljmp
cmp
scas
clc
xchg
mov
idivl
sar
scas
vcomisd
mov
mov
iret
xchg
cmp
mov
ss
leave
lcall
daa
movsb
scas
shlb
push
dec
enter
frstor
lods
mov
rcrb
pop
mov
in
out
negl
push
sbb
mov
out
push
pop
mov
cmp
dec
push
adcl
push
gs
jge
mov
lods
push
popa
push
mov
add
ficomps
pop
or
xchg
hlt
sbb
jns
arpl
test
pop
les
cs
push
cmp
es
in
aad
xor
xchg
and
clc
mov
pushf
dec
xchg
pop
lods
orb
and
roll
or
and
lcall
add
inc
adc
pop
mov
lods
pop
or
icebp
mov
or
inc
testl
pop
scas
inc
sub
adc
repz
sti
jo
pop
cmp
mov
shl
jb
lods
mov
call
pop
out
enter
in
iret
jnp
inc
dec
repnz
sub
pop
roll
daa
lods
mov
xchg
inc
jne
gs
pop
adc
push
js
mov
and
inc
xchg
imulb
stc
add
push
out
sub
pop
or
jb
bound
es
push
aam
fistpl
dec
mov
jmp
lods
sbb
push
cmp
lock
jns
xor
jp
cmp
jae
cmpsb
pop
dec
les
test
inc
mov
and
xor
cmpsl
jb
int3
xchg
dec
fcompl
cmp
inc
aad
mov
je
sub
cmp
mov
inc
cld
xchg
mov
xor
pop
dec
jecxz
dec
test
pop
jl
lods
mov
imul
mov
jb
push
daa
mov
gs
cmpsb
push
xchg
xor
cmpsl
sub
jmp
js
xor
add
add
jae
mov
xchg
orl
stos
pusha
jo
jno
pushf
fsubr
push
mov
adc
and
add
sub
ret
push
jnp
test
popf
jecxz
lret
jb
mov
fimuls
pusha
scas
jecxz
add
insl
pop
mov
sbb
lret
pop
faddp
test
in
fs
cwtl
adc
pop
int3
inc
mov
scas
push
popa
shr
dec
ss
push
mov
sbb
jbe
cmp
sar
lods
adc
push
mov
add
aad
leave
sbb
dec
add
clc
stc
test
lods
pop
sbb
jp
cmp
cld
enter
xchg
and
jnp
mov
test
shrl
sub
roll
add
arpl
fdivrs
repnz
or
fstpt
scas
cmp
scas
push
aaa
loope
sbb
pop
push
popa
or
push
popf
inc
loope
push
ficoml
push
inc
leave
les
popa
fcmovne
ud1
enter
push
jle
inc
jg
pop
pop
and
ja,pt
cmp
outsl
pusha
fs
std
ret
adc
add
cmpb
popf
lret
movsl
es
out
and
adc
push
vprotb
or
mov
push
fcoms
adc
lds
cmp
cmp
popf
in
iret
lea
sti
pop
int
and
gs
or
clc
sbb
jecxz
mov
mov
xor
mov
push
mov
test
push
loope
outsb
sub
xchg
xchg
out
push
lret
jecxz
jecxz
test
outsl
push
data16
aad
in
fistpl
mov
pop
xchg
test
scas
jne
sbb
sub
adc
or
add
int3
xchg
cltd
pop
mov
inc
inc
dec
mov
sbb
push
mov
call
loopne
cmc
out
sbb
out
xor
sub
push
xchg
mov
xchg
inc
rorb
pop
popa
sbb
xor
divb
sbb
sub
popf
add
gs
ja
sahf
xchg
or
sti
push
popa
and
pop
shr
insl
in
or
loope
pop
iret
mov
fildll
xchg
mov
js
xchg
pop
adc
and
lds
jbe
mov
les
stos
daa
inc
mov
jno
push
adc
sub
sbb
inc
xchg
pop
lret
je
outsl
ficomps
xchg
cmp
xchg
cld
cmp
scas
xchg
lcall
mov
xchg
fimull
pop
pop
jbe
imul
mov
add
add
lock
push
jb
fisttps
push
mov
mov
outsl
and
cmp
pop
ds
test
loop
ret
xlat
bound
arpl
or
imul
and
fmull
icebp
or
std
in
jl
imul
daa
icebp
outsl
movsb
sbb
addl
push
les
stc
sbbl
fbstp
lcall
lds
inc
adc
in
aas
call
xor
sbb
test
mov
insb
mov
sub
add
out
ds
jmp
push
mov
mov
mov
das
cs
arpl
iret
jge
adc
lahf
sub
inc
push
sbb
mov
lea
stos
cmpsb
into
or
xchg
insl
std
out
leave
jmp
add
sub
jne
xor
sahf
loop
and
xor
pushf
jnp
into
fisubs
jnp
and
xor
xchg
call
roll
push
pop
fldt
sbb
mov
lcall
xchg
and
ljmp
mov
cmp
dec
pushf
daa
out
ret
sub
dec
dec
dec
repnz
dec
sub
insb
pop
inc
hlt
mov
test
mov
inc
int
mov
inc
icebp
bound
dec
movsb
fsubrp
jne
ja
jl
mov
rcl
in
mov
or
mov
scas
xlat
pop
clc
push
ljmp
bound
outsl
mov
lea
movsl
xchg
mov
cmpsb
mov
arpl
ds
jmp
nop
xor
mov
mov
mov
fnsave
or
dec
or
aaa
lock
jnp
cmp
rorl
mov
mov
jge
cmp
cmc
push
sub
js
mov
enter
rolb
mov
mov
out
cmp
into
adc
ficoml
mov
mov
icebp
xchg
xchg
arpl
aaa
jg
inc
roll
adc
ret
push
int3
gs
pusha
mov
cmp
and
inc
jg
jnp
cmpsb
dec
or
stos
jae
cmpsl
and
dec
insb
je
jg
pop
mov
fstl
jecxz
insb
adc
rol
insb
push
mov
popf
ja
mov
inc
shll
jno
call
mov
hlt
popa
fimull
inc
cs
and
mov
rolb
sahf
push
movsb
mov
hlt
add
mov
jae
xchg
insl
cld
cmp
mov
mov
stos
inc
int
rcrl
pusha
loope
xor
int
mov
jns
test
mov
hlt
in
push
cld
ret
sub
pop
mov
push
stos
in
push
imul
push
addr16
mov
add
out
dec
fwait
out
clc
sub
icebp
dec
imul
mov
aam
push
les
jns
icebp
popa
cmp
popf
jnp
xchg
sahf
mov
outsb
inc
mov
sub
inc
das
leave
nop
cmpl
xchg
pop
xor
ds
jno
sbb
pop
pop
subl
leave
push
sarl
dec
xchg
jne
cmp
or
dec
push
jl
out
lods
fisttpl
push
cmpsb
lcall
sbb
ret
dec
out
lods
pop
cmpsb
push
or
jp
inc
pop
stc
cmc
or
push
divl
xor
lcall
mov
call
push
xchg
push
arpl
push
in
lret
hlt
mov
cmpsl
cmc
sub
insb
jbe
dec
test
pop
imul
mov
out
rcrl
push
mov
orl
mov
ds
ficompl
mov
inc
dec
push
into
mov
into
pop
nop
je
cmc
jnp
fs
ret
dec
mov
push
pop
iret
sbb
mov
sahf
insb
xor
push
mov
cmc
iret
or
pop
push
pop
sbb
jnp
fadd
mov
sbb
pop
cmc
fadd
icebp
or
test
push
lods
scas
lds
sbb
inc
sbb
pushf
out
or
ret
iret
imul
push
cmpl
div
cltd
cld
adc
mov
jmp
mov
xlat
push
bound
mov
xor
pushf
sub
or
loop
mov
je
daa
xlat
out
jne
dec
test
mov
adc
in
cs
push
and
adc
dec
inc
sbb
jbe
lcall
lds
stc
xchg
mov
adcb
out
ja
dec
adc
mov
sub
xor
jg
cmpsl
push
pop
add
pop
jl
cmp
jp
xor
and
adcl
xchg
imul
mov
nop
int
cmpsb
dec
jae
xchg
pop
ja
mov
dec
jae
iret
shll
inc
mov
movsb
and
xchg
lea
cltd
pop
scas
shrl
xlat
jbe
in
add
js
sbb
clc
jnp
out
cwtl
stc
or
and
and
popa
mov
das
ret
push
aas
xchg
xchg
xorb
popa
lret
mov
daa
mov
fsubrs
push
mov
stc
shl
icebp
sub
and
sub
rcrl
jne
mov
jnp
repnz
jge
daa
xchg
xor
jae
jmp
xchg
adc
andb
sub
inc
pop
sub
or
js
sub
dec
jns
inc
xor
test
lock
cltd
js
lea
insb
repz
xor
dec
fwait
enter
test
sahf
push
out
lods
xchg
cmp
xor
mov
stos
sbb
stos
push
push
cmp
out
in
pop
dec
inc
mov
or
add
jns
or
mov
shlb
outsl
mov
fsubs
loopne
aaa
mov
aas
mov
pop
sbb
pxor
lods
es
dec
aad
add
sbb
adc
rorb
or
push
pusha
inc
adc
leave
andl
dec
sub
out
cmp
sub
or
adc
into
and
lds
out
jno
xor
add
add
add
pop
cli
mov
stos
sub
popl
iret
lods
jbe
repz
pop
adc
mov
gs
push
scas
xchg
pop
push
cmp
int3
mov
mov
jnp
adc
and
xchg
mov
lods
notb
std
push
loopne
mov
pop
mov
cmp
mov
fmuls
loope
xor
cmp
addr16
movsl
ja
push
dec
cs
cwtl
ljmp
dec
xchg
scas
lahf
enter
cmp
nop
xor
mov
mov
ja
int
shll
or
stos
mov
mov
movsb
push
test
jmp
negb
fmull
enter
mulb
push
and
mov
imul
mov
jne
out
cmpsb
popf
sub
movsb
aaa
stos
mov
lods
das
insb
fldl2e
mov
xor
rolb
sar
jns
cli
data16
repz
ficoml
push
shrl
fdivrl
sub
addl
and
xchg
mov
je
popa
in
and
fwait
mov
ljmp
cmp
add
movsb
cwtl
push
loopne
jb
xchg
cmp
enter
xor
xchg
outsl
xchg
cmp
jmp
fisubrl
iret
add
rclb
lock
fstl
aaa
cmpsb
and
sti
xor
cmpsb
mov
aam
jg
in
into
pushf
xchg
enterw
dec
hlt
das
push
mov
push
cmc
push
dec
je
sbb
jbe
pop
push
int
inc
test
incl
jle
decb
decb
inc
sbb
mulb
adc
push
adc
adc
imul
inc
xor
lret
mov
add
mov
lret
and
insl
jno
mov
jmp
shr
xchg
xor
jo
or
mov
sub
or
push
add
cmp
sbb
sub
xchg
xchg
push
shll
sub
cltd
icebp
testl
or
mov
xor
into
lods
sub
pop
gs
rcl
dec
js
push
int
mov
call
adc
stos
dec
outsb
cs
cwtl
pushf
sahf
push
xchg
dec
jnp
mov
jp
stc
dec
cmp
push
das
xchg
ljmp
xor
xchg
lcall
and
scas
mov
inc
in
test
xlat
push
fistl
xor
lods
mov
push
lock
shl
in
rcrl
pop
sub
sub
jb
jmp
mov
movhps
pop
insb
jle
and
push
fistpl
sahf
lret
je
jg
jp
fnstcw
xchg
sub
loop
fldcw
push
scas
les
jecxz
pop
adc
add
lods
jge
test
sbb
lret
push
jmp
outsl
xchg
push
dec
xchg
fucomi
leave
notb
call
jmp
rcll
xchg
xchg
aam
shlb
jne
nop
stos
mov
xchg
push
xlat
lret
stc
xor
movsl
jg
jle
xchg
or
fstl
xor
pop
add
je
mov
xchg
mov
dec
fwait
inc
out
rcrl
and
int3
lock
pusha
dec
std
ds
and
stos
fcomps
sbb
fs
jns
clc
gs
imul
xlat
or
xorb
cmpsl
sbb
outsb
adc
iret
loop
adc
call
adc
lds
inc
cmpsb
mov
cmp
push
push
xor
jae
xlat
cltd
adc
inc
cmp
cli
insl
lret
out
lahf
iret
into
lds
iret
adc
sub
push
pusha
rorl
rol
dec
stc
std
sahf
mov
fucomi
sbb
add
loope
ljmp
mov
xor
les
das
add
sbb
adc
jno
aaa
mov
sub
mov
adcl
pop
xor
ret
es
inc
je
sbb
mov
out
lcall
addr16
push
adc
ss
out
cltd
or
jmp
ljmp
mov
inc
stos
cltd
leave
in
repz
inc
shlb
push
and
push
sbb
jb
int3
mov
sub
out
mov
arpl
enter
pop
dec
imul
jl
mov
xor
imul
sbb
pop
jbe
inc
jno
call
int
pushf
pop
rcrb
mov
daa
or
push
jp
aad
mov
dec
push
in
scas
stos
das
outsl
bnd
test
lods
adc
insl
adc
nop
dec
jae
xor
dec
push
out
out
jae
cltd
ret
out
jmp
movsb
jae
imul
daa
in
dec
test
jle
outsb
cmp
cld
idiv
pop
pop
flds
mov
movsl
fsubp
cmp
push
xor
adc
dec
sahf
imul
push
dec
fdivrl
jae
cmp
lahf
and
clc
inc
rcl
and
movsb
or
or
mov
and
add
lcall
jb
ror
mov
aas
cmpsb
xchg
test
sahf
movsb
test
leave
mov
adc
or
insb
in
rdtsc
push
dec
jl
cmp
dec
lds
fcompl
rorb
fdivs
push
out
cwtl
lds
je
sbb
lea
jle
or
push
enter
ret
lahf
cwtl
addr16
fcom
mov
cmp
imull
lcall
mov
fs
outsl
inc
insl
add
jmp
ret
xor
adcb
in
add
subl
mov
mov
adc
pop
paddsw
vmread
out
jnp
rcrl
mov
dec
push
daa
insb
packssdw
enter
sub
mov
mov
sbb
int3
lea
mov
add
nop
xadd
outsb
adcb
popf
loopne
iret
mov
lods
andl
xor
mov
ljmp
out
nop
pop
mov
fnstsw
jbe
xor
mov
dec
push
fstps
test
scas
mov
mov
test
pop
iret
cmp
js
out
mov
in
cmpsb
enter
and
xchg
or
cmp
xchg
ficomps
pop
fistpl
inc
lods
push
movsl
imul
loop
jmp
cmpsl
in
cs
cmp
sbbl
ret
dec
inc
mov
pop
jmp
dec
xor
and
test
enter
cltd
mov
dec
pusha
jno
xchg
mov
inc
fisubrl
lods
dec
cmp
subb
inc
arpl
xchg
jecxz
jae
mov
push
xlat
push
pusha
push
inc
test
add
bound
daa
jnp
xchg
xchg
ss
adc
mov
test
shr
mov
dec
push
dec
out
cmp
addl
mov
jno
jmp
repz
movsb
mov
and
add
ret
jecxz
xor
nop
shr
jne
add
fstp
stc
xor
push
lea
jge
sbb
sbb
in
mov
lds
and
ret
fistpll
lods
and
out
mov
cltd
sarl
mov
push
xor
mov
and
mov
lea
insb
xchg
push
imul
fisttps
or
lcall
cmpsl
cmpsb
sahf
inc
pop
sbb
sbb
std
rolb
outsb
sbb
rcll
mov
mov
loope
insl
or
xor
push
dec
fldt
jb
xchg
inc
xor
loopne
mov
call
push
adc
push
xlat
out
or
mov
pop
inc
push
and
xchg
xchg
adc
ret
xor
xor
sbb
scas
inc
test
cwtl
enter
aas
fwait
pop
jl
cwtl
fdiv
or
add
imulb
jo
lea
lret
fistpll
sub
cmp
add
mov
ret
jo
and
push
xchg
dec
jne
jno
push
mov
lcall
in
jo
mov
mov
pop
cli
push
lahf
dec
js
xchg
mov
ds
pusha
stc
nop
sti
cmp
popf
push
testb
add
push
dec
pushf
inc
test
or
imul
inc
mov
xchg
and
imul
inc
in
movsl
sahf
push
loop
ds
mov
loop
dec
inc
test
xchg
jg
xchg
jecxz
pop
xchg
sarb
adc
jb
outsb
je
xchg
daa
cwtl
aaa
or
int3
cwtl
pop
cmpsl
in
or
ljmp
or
xchg
test
add
push
push
rcll
mov
dec
popf
imul
and
cmc
pop
jmp
jmp
adc
pop
mov
xor
incl
dec
pop
add
movsl
aad
aad
cli
add
or
adc
insl
rorb
adc
addr16
mov
scas
leave
push
shrb
pop
sahf
adc
cmp
mov
xor
mov
cmpsb
dec
jne
pushf
sbb
aaa
jp
jnp
mov
and
jnp
xchg
out
aas
adc
and
push
sbb
or
xchg
jo
in
ret
fcomps
enter
in
xchg
aaa
sbb
or
and
jl
pop
ror
ja
jge
inc
or
ds
xchg
mov
cmp
and
gs
sbb
xor
cltd
gs
js
inc
push
out
cmpsl
scas
xchg
xchg
dec
cmc
jp
jmp
cltd
mov
mov
adc
clc
ja
lea
insl
add
pop
dec
sarl
mov
imul
into
dec
sbb
push
push
sub
cmp
xlat
xchg
repz
clc
out
stc
ffree
sub
clc
push
das
lods
pop
mov
fucompp
ja
fidivl
mov
adc
dec
cmp
adc
xchg
mov
dec
sbb
mov
cltd
fsubp
jp
mov
lret
test
sub
loope
sub
loope
cmp
and
xchg
and
jge
lods
xchg
in
inc
cs
push
js
xor
mov
or
repz
push
test
daa
out
xchg
inc
mov
movl
cmp
ljmp
gs
mov
adc
dec
js
out
in
std
ljmp
rclb
out
lea
repz
or
sahf
hlt
es
je
dec
bound
cmpl
dec
movb
loope
mov
push
lea
xchg
xorl
xchg
loope
fnstsw
sbb
push
mov
pop
and
nopl
push
mov
and
pushf
out
lds
cmp
fsubs
test
dec
dec
lods
jmp
jmp
pop
cmp
jbe
pushf
cmp
jl
cli
pop
dec
adc
mov
out
mov
inc
pusha
enter
mov
mov
sub
jmp
xchg
or
xchg
popf
mov
rolb
xchg
mov
stos
out
cs
pop
iret
aaa
out
je
push
movsl
push
pop
mov
aad
and
scas
aas
jnp
fiadds
mov
xor
stos
cld
stc
out
sbbb
sbb
push
leave
fs
jno
mov
in
into
ljmp
mov
push
dec
test
push
and
stos
mov
inc
repz
pop
cmpsb
pop
sarl
adc
sti
add
jmp
cli
cltd
lods
cmp
cltd
xor
outsb
lcall
xchg
enter
and
sub
jno
pop
sub
jle
int
rorb
or
jmp
inc
xor
hlt
cld
dec
mov
scas
jl
aad
mov
lods
xchg
inc
pop
xor
imul
xchg
add
adc
mov
or
pusha
add
aad
mov
std
adc
jb
les
mov
fbld
sub
mov
loopne
out
pop
dec
outsb
inc
rcrl
enter
pop
adc
mov
aam
rcrb
mov
push
cld
jmp
jl
dec
stos
lea
fmul
bound
out
sti
mov
pop
sbb
pushf
xlat
clc
push
or
mov
rolb
sub
adc
lret
pop
cmp
mov
arpl
test
stos
sti
scas
and
push
lea
xchg
xor
adc
inc
in
rcrl
popa
pop
add
pop
ss
push
daa
mov
fstpl
xor
sub
pop
pop
push
jl
dec
out
and
lret
push
negl
pop
mov
cmpsl
mov
fisubrs
adc
mov
jbe
mov
into
das
mov
dec
je
push
xchg
xor
out
fwait
mov
push
call
jne
jp
fsubr
dec
sub
pop
mov
in
lea
aas
dec
push
mov
inc
mov
cmp
dec
sub
fwait
pushf
pushf
das
dec
add
pop
es
insl
into
xchg
sub
cltd
add
push
arpl
add
mov
psubusb
gs
pushf
in
cmpb
xchg
fisubs
mov
mov
in
popf
cs
push
push
push
and
jo
mov
cmp
iret
push
jle
fwait
es
inc
sub
insl
fnstsw
es
sub
fidivrs
int
out
xchg
push
call
lahf
dec
or
loope
hlt
mov
xor
adc
and
xchg
ficoms
cwtl
enter
fsubl
arpl
jno
movsl
xor
out
lret
sub
and
imul
sahf
out
subb
and
xlat
mov
shl
xor
cmp
in
inc
mov
sub
jp
iret
mov
test
mov
mov
add
jmp
in
lods
test
or
lea
cld
roll
or
add
leave
test
daa
sbb
cli
cmpsl
ficomps
dec
cld
inc
mov
xor
out
jg
outsl
out
cmpsb
dec
mul
enter
rcrb
mov
mov
shlb
js
jg
sub
pushf
cmp
fsubrl
cmp
call
aas
leave
cltd
jb
pop
arpl
stc
les
scas
ret
push
movsl
lock
xor
insl
dec
insb
jmp
push
jns
and
cmc
pop
mov
xchg
in
fisttpl
cmpb
sbb
cli
push
mov
cmc
pushf
cwtl
add
loop
cmc
rorl
adc
daa
dec
sub
pop
fstpl
jae
repz
push
sub
adc
cmp
pop
loopne
int3
lock
mov
mov
imul
shll
mov
outsl
inc
outsl
sar
cmpsb
insl
xchg
test
xlat
insb
in
jb
repz
insb
imul
pop
sbb
dec
mov
les
insl
repnz
neg
jge
outsb
xchg
decl
aaa
xor
enter
mov
push
cwtl
xchg
and
lret
fsub
mov
push
sbb
fwait
lods
imul
insl
and
lds
mov
jecxz
add
das
stos
fiaddl
pop
xlat
imul
xchg
outsl
jb
mov
or
lea
pop
sub
int3
sbb
xorl
cwtl
scas
pop
mov
mov
cmp
rcll
divb
pop
mov
fsubrs
pop
pop
std
xor
xor
ret
mov
cmp
rorl
insb
or
dec
xor
scas
cs
jns
mov
cmpsb
xchg
adc
outsl
dec
sub
sbb
popa
out
fnsave
popf
lock
pop
cmc
es
xchg
dec
add
in
adc
cmc
sbb
das
jecxz
jo
add
sub
jne
ret
adc
xorl
push
inc
jmp
in
cmp
outsl
cmpl
fsubl
popf
jle
out
push
xchg
xlat
mov
xor
dec
in
xchg
push
fnsave
enter
test
adc
aas
xor
fwait
or
or
xchg
mov
xchg
jmp
pop
xchg
cmp
rorl
or
aam
test
xor
js
sbb
mov
out
xor
jp
aam
xlat
sbb
outsl
inc
ds
xchg
lahf
sub
or
rorb
sti
sub
in
xchg
idivl
popf
xor
xlat
scas
aam
ror
pushf
add
jbe
stc
rcl
inc
nop
cld
jo
in
jmp
movsl
xor
sub
pop
hlt
jne
xor
popf
jecxz
pop
in
dec
sub
test
jno
xchg
mov
pop
out
cmpb
popa
push
dec
mov
out
mov
lock
shlb
sub
in
sub
scas
dec
mov
shlb
cmp
in
xchg
lahf
sub
aam
shrl
inc
pop
test
loope
rcl
stos
cli
mov
dec
inc
popa
ret
and
incb
ds
ljmp
ss
and
and
into
cli
pop
jle
cmp
int
lahf
xor
repz
movsb
fidivrl
rcl
adc
scas
pop
movsb
lret
ret
pop
pop
movsb
ja
adc
inc
test
push
icebp
cmp
xlat
pop
ret
daa
mov
pusha
movsl
testb
push
aaa
and
pop
and
adc
add
jno
mov
cmp
push
addr16
push
call
lea
sbb
inc
push
xor
pop
subl
inc
shl
into
pop
fs
xor
in
push
les
mov
les
ljmp
aam
push
repz
je
jmp
jmp
cmp
jp
push
or
and
in
cmp
cmp
push
adc
sbb
ss
movsb
test
clc
adc
mov
mov
inc
lahf
neg
js
jge
adc
push
test
mov
xchg
dec
into
adc
int3
aam
enter
add
jl
shrl
cs
jns
enter
lods
ret
jp
je
inc
js
in
into
sarl
pop
pop
xchg
sub
imul
je
add
rcr
insb
int3
inc
ficompl
mov
fidivl
sbb
jno
aad
and
movsb
pop
xor
jmp
mov
aas
mov
in
ljmp
sbb
sahf
sbb
push
mov
pusha
test
or
dec
loop
subl
gs
ror
fucomi
jno
and
jge
and
jecxz
mov
mov
out
icebp
and
pop
enter
inc
test
fdivrs
out
jns
imul
jge
jge
mov
and
mov
jo
cli
adcl
push
stc
or
pop
xchg
xor
int
or
out
adc
jb
inc
jecxz
push
mov
test
fnstenv
xor
jae
mov
sbb
stos
push
cmp
cmp
nop
cmp
iret
fistps
mov
inc
aam
test
das
setnp
inc
sbb
fcmove
repnz
cmpsl
cld
sahf
mov
or
pop
call
je
aaa
mov
mov
in
test
aad
mov
test
out
xor
cld
push
fiaddl
int3
shll
call
fs
out
cld
xchg
les
mov
in
pop
fsubl
in
jge
sub
in
lds
dec
cmp
jp
pushf
sarl
sbb
enter
xchg
pop
int
xchg
xchg
mov
sub
xchg
jns
push
mov
pop
imul
divb
cs
mov
xchg
int3
int
ror
adc
movsb
push
fsts
cwtl
andl
xor
enter
push
and
int
mov
mov
inc
mov
mov
pop
iret
arpl
lea
inc
out
shrl
lret
pop
in
xor
mov
or
inc
dec
loope
insb
and
test
movsl
shrl
repnz
rorl
mov
add
adc
pop
jmp
ljmp
mov
lods
repnz
jmp
or
dec
fucomip
xchg
pop
jns
insl
adc
mov
out
mov
incl
stc
mov
in
xchg
and
inc
jae
in
xor
cmp
mov
call
and
xchg
push
sbb
mov
adc
pop
pop
jge
movsl
outsl
or
cmp
dec
mov
andb
test
push
sub
rcr
dec
stos
cmp
arpl
dec
sarl
shld
mov
mov
subb
aam
call
mov
lret
std
movsb
pop
dec
fdivs
out
cmp
push
fildl
cli
nop
mov
mov
clc
shrb
imul
addb
cli
cli
pop
fistpl
xchg
mov
pop
mov
fstp
dec
xchg
xorb
out
push
cltd
sub
xchg
pop
test
dec
jge
enter
or
pop
xchg
sbb
pcmpgtw
shrb
cli
push
add
ret
jp
cmpsb
fidivl
jmp
push
js
hlt
adc
push
xor
jmp
mov
fistpl
fisttpll
and
sbb
into
cs
adc
inc
cmp
push
adc
mov
fcompl
push
or
xor
cli
xchg
xchg
loop
jmp
pop
mov
sbb
out
pop
push
lods
push
xchg
jne
stc
sbb
jl
scas
fs
pop
jle
pop
sub
push
and
mov
lds
testl
dec
or
add
cmp
mov
cli
lea
mov
in
lock
ret
jno
add
ja
or
les
ds
ja
xchg
pop
pop
clc
int3
hlt
adcl
pushf
and
popa
mov
ljmp
push
mov
sahf
adc
sarb
jno
cli
add
ljmp
aaa
insl
movsl
test
arpl
movsl
test
push
or
push
lock
std
out
mov
aad
imull
mov
mov
adc
inc
lahf
fnstsw
mov
push
sti
jge
cli
lcall
bound
adc
cli
int
dec
push
inc
add
pop
mov
lods
aad
rcl
adc
xlat
jbe
inc
push
and
andb
mov
lds
ljmp
push
test
xorb
jnp
outsb
setae
jecxz
push
pushf
mov
fnstenv
je
jecxz
cltd
cmp
cwtl
xchg
testb
jg
clc
fildll
in
arpl
jl
add
or
push
mov
clc
nop
dec
adc
nop
das
in
push
lods
test
rcrb
aam
xor
push
out
xor
mov
mov
mov
ja
inc
dec
daa
sarl
xchg
xor
insl
das
mov
jo
mov
dec
sbb
inc
sbb
mov
jle
in
lahf
fistl
icebp
test
jmp
mov
not
sub
jo
sub
stos
push
bound
mov
jp
sub
sub
cmp
adc
sub
std
cmp
pop
add
adc
xor
out
adc
shll
out
xchg
ss
inc
shrd
sub
or
push
add
mov
scas
or
cwtl
fidivrs
pusha
xor
dec
xor
shl
icebp
lock
bound
pop
fucomp
cmp
insb
inc
shrl
jb
jae
or
jg
cmp
sub
inc
andl
cwtl
inc
or
cld
repnz
js
ficoms
and
scas
lret
push
cmp
lock
fdivl
dec
cld
fidivl
add
dec
in
mov
mov
pusha
stos
xor
push
loop
sbb
mov
stos
shll
mov
or
mov
rcrb
push
mov
stos
lahf
movsl
pop
out
mov
jmp
and
mov
xchg
loopne
aas
cwtl
in
lods
push
jne
cmp
aaa
or
jmp
jb
out
ret
je
mov
mov
jl
xor
mov
lods
cmpsl
mov
int3
hlt
cmp
movsb
out
flds
adc
push
mov
outsb
cmp
jbe
jecxz
stc
test
test
mov
mov
xchg
push
gs
and
dec
and
mov
mov
mov
sub
cmc
lret
loope
iret
in
jecxz
out
jl
je
ror
adcb
mov
pop
inc
stc
xor
incl
dec
and
sub
aaa
cmp
mov
cltd
pop
shll
sti
js
outsb
xchg
adc
repnz
call
mov
fists
push
test
cmp
mov
jbe
callw
loop
dec
mov
xchg
or
push
mov
lcall
push
xchg
pop
call
imul
and
mov
and
pop
js
shr
repz
imul
xchg
es
add
out
ficompl
xchg
lods
mov
xchg
fsubr
fwait
push
ljmp
out
cmp
cld
enter
pop
cmc
fidivs
lcall
adc
imul
add
cmpl
fisubl
ss
loop
jns
adc
xchg
cmp
jbe
jno
mov
jecxz
cmp
out
add
cs
fisttpl
cmp
mov
mov
and
add
aas
loope
mov
cmp
mov
pop
dec
loopne
mov
inc
mov
pop
ret
mov
push
lock
cmp
cmp
popa
das
ds
and
lds
cmp
into
pop
dec
xchg
repz
ss
pusha
lcall
out
cmp
andl
and
xor
sub
jne
pop
std
aaa
sbb
sbb
push
sbb
adc
hlt
addb
and
mov
inc
fstp
xlat
aaa
out
fs
lea
shlb
pop
stc
sbb
in
cmp
fcmovnu
inc
addr16
subl
leave
stos
inc
push
inc
push
sub
cmpsl
cmp
mov
clc
dec
in
jno
sbb
pop
in
xor
pop
cmp
lret
inc
enter
lea
cmp
stc
mov
jne
add
mov
and
push
mov
push
call
nop
out
ret
cs
xchg
cmp
adc
shr
push
jge
dec
fisubrs
pop
xchg
sbb
fpatan
call
sbbb
ja
scas
sbb
add
loop
fidivs
divl
jl
mov
stos
mov
jmp
dec
and
std
loopne
pop
pop
mov
xchg
mov
sarl
out
imul
adc
subb
and
pop
jns
fldln2
mov
sub
sbb
and
cmp
insb
pop
scas
ss
adc
dec
push
push
pop
pop
sbb
inc
mov
pop
lods
nop
or
xchg
adc
xchg
mov
and
pop
mov
or
lcall
je
mov
rorb
nop
bound
les
rcrb
mov
int3
aad
das
jne
mov
stc
sti
dec
mov
mov
std
sbb
les
xlat
mov
je
add
div
mov
incb
cmp
fnstsw
insb
add
in
imul
lods
out
xchg
addr16
aas
xor
push
std
insb
jnp
cmpsb
decb
decb
lods
mov
js
jg
imul
inc
inc
push
jg
lahf
sbb
mov
xor
xchg
push
mov
scas
int
jbe
push
add
mov
push
cmp
fdivrs
inc
xor
cmp
xchg
rorb
shlb
leave
div
jl
dec
push
ja
xlat
clc
adc
lods
and
dec
push
jmp
and
rorb
or
dec
adc
mov
mov
cmp
jl
push
fcom
mov
pop
decl
cmp
insl
cmp
add
add
les
push
dec
xchg
adc
mov
decl
leave
rorl
mov
fs
pushf
sbb
cltd
repz
jp
stos
mov
pop
pop
and
es
hlt
or
rcrb
les
jo
or
sbb
ss
push
scas
pop
adc
sub
shl
jb
dec
sbb
ss
faddl
call
in
popa
inc
mov
mov
or
cli
mov
in
cmp
movsb
push
xchg
cmp
push
dec
xor
imul
adc
ljmp
sub
dec
mov
popf
xchg
lret
loope
xor
je
fstps
loope
jae
dec
mov
mov
sbb
daa
sbb
fwait
xchg
mov
inc
fldt
jge
test
cmp
mov
lock
inc
scas
outsl
adc
cli
rcr
call
push
clc
cmp
dec
xor
mov
sbb
in
test
ret
push
pop
jp
xchg
outsl
icebp
pushf
xchg
roll
cmp
xor
imul
xchg
xor
jns
mov
mov
sub
lret
xchg
hlt
dec
cmp
inc
inc
sub
adc
push
mov
mov
sbb
incb
int3
loope
int3
xchg
push
je
and
add
add
sub
ficoms
movsb
pop
inc
cmp
add
add
mov
adc
inc
or
inc
je
inc
mov
fdiv
iret
or
cwtl
pusha
xor
lcall
xor
sbb
pusha
aaa
xchg
push
cmp
or
or
or
push
xchg
daa
lods
jg
ss
fstps
xchg
es
mov
cmp
mov
xlat
daa
inc
inc
out
mov
cmp
xchg
movsl
es
dec
pop
jmp
jae
or
and
adc
inc
mov
mov
out
cmc
add
pop
clc
mov
mov
iret
addr16
sarl
jg
jle
xchg
out
jmp
pop
aas
mov
jl
pop
pop
or
mov
pop
add
iret
in
pop
mov
outsl
fisubrs
or
jmp
shll
inc
arpl
loope
imul
ret
xlat
cmp
fdivl
inc
pop
push
and
xor
adc
push
xchg
outsl
fnstsw
sbb
mov
dec
and
hlt
push
in
ret
sbb
in
fbld
jecxz
sahf
sahf
fwait
in
push
pushf
inc
jns
pop
push
cmpsl
push
mov
inc
mov
shlb
repz
test
rcrl
scas
and
jp
out
push
out
iret
jle
xchg
repz
and
loope
fldenv
lea
mov
sbb
jg
xchg
or
push
stos
data16
aam
mov
sbb
add
mov
add
cld
sub
sbb
xlat
jnp
sub
notb
xchg
addr16
pop
mov
call
popa
sub
sahf
push
sub
push
xchg
dec
sub
sbb
clc
ror
cltd
cmpl
pop
adc
incl
cli
xchg
negl
sbb
lds
xor
fdivl
pop
mov
push
fisubrl
imul
mov
push
mov
push
sub
pop
dec
fidivrl
scas
call
lahf
orb
xor
jo
lret
sbb
adc
shrl
mov
in
add
enter
das
cmpsl
je
and
mov
pop
push
mov
pushf
je
sub
xor
sub
mov
sbb
lods
adc
xor
es
ss
cmpl
pop
scas
test
into
enter
test
test
lea
mov
dec
mov
or
mov
xchg
imul
aas
xchg
mov
push
pop
jp
dec
addr16
mov
push
lret
xchg
sbb
dec
std
addb
shrb
mov
mov
dec
push
mov
lcall
cwtl
push
inc
pushf
jecxz
mov
xlat
cli
cwtl
out
and
ret
adc
insb
fwait
fwait
push
fistl
xlat
lret
loope
sbb
mov
jne
add
pop
mov
xchg
xchg
pop
loope
and
xorb
adc
sub
fcoms
xchg
jbe
xor
jne
mov
inc
scas
dec
xor
inc
fildl
movsl
mov
jge
or
adc
iret
mov
inc
imul
adc
mov
call
inc
or
or
sub
lods
outsl
and
sub
push
and
jb
sbb
mov
mov
add
mov
adc
cmp
test
into
ret
clc
pusha
shrl
popa
jmp
shrl
mov
mov
lods
inc
mov
cmp
xorb
adc
dec
fisttpl
cmp
sub
cmp
fmuls
jno
xlat
aaa
lret
popw
xchg
mov
movsb
mov
or
and
loop
pop
mov
push
movsb
adc
adc
lds
jo
mov
jmp
sub
add
xchg
sub
mov
sbb
ja
notb
mov
addr16
xchg
test
dec
or
mov
jl
sub
rclb
sub
test
lods
adc
enter
addr16
out
add
imul
into
insl
iret
inc
xor
push
cmpsb
call
sub
outsl
xchg
pop
and
andb
sbb
shrl
cs
push
push
loope
test
jmp
ljmp
in
sahf
lcall
in
xchg
ud2
jbe
stos
mov
in
sbb
pop
outsl
in
push
scas
test
test
fs
iret
test
mov
add
lock
xor
push
fwait
xlat
sbb
sub
push
xchg
daa
pop
je
rorb
xchg
inc
insb
fwait
sub
movsl
pop
movsb
jge
adcl
dec
dec
movsb
mov
fcomps
push
mov
sbb
scas
into
pop
sub
imul
jp
mov
sti
pop
repz
fsts
test
iret
popa
sbb
sarb
or
imul
cwtl
mov
mov
les
mov
and
sub
and
mov
out
mov
stos
in
dec
cmp
roll
outsl
lds
mov
movups
jecxz
mov
adc
lods
shll
scas
loopne
jmp
cmpsw
insb
push
sub
ret
or
ljmp
ror
cwtl
int
cmpsb
push
adc
fwait
test
out
dec
pusha
out
mov
sbb
mov
sub
push
in
sbb
cmp
jl
sahf
xchg
lea
xor
xchg
adc
mov
xchg
add
jmp
iret
mov
fs
mov
jne
lods
cs
cwtl
xchg
enter
push
data16
psubsw
stos
adc
aam
lret
lret
call
mov
sbb
test
test
add
sbb
mov
add
loope
mov
mov
loope
aad
and
fsubrl
dec
adc
out
mov
push
xchg
cld
ja
push
xor
sub
mov
push
pop
fldl
inc
ret
lea
sub
hlt
data16
xlat
testb
test
out
ficoml
dec
sbbl
mov
lahf
add
repz
cmp
pop
jmp
push
movsb
cmc
popf
pmuludq
lea
cli
pop
in
mov
clc
add
jae
je
xorb
mov
push
jne
das
and
or
dec
repnz
outsl
jo
push
inc
adc
add
loope
jge
xchg
inc
gs
andl
stos
fs
cltd
aad
nop
inc
pop
lahf
neg
mov
ficoml
sbb
mov
push
or
push
sub
outsb
cmp
pop
sbb
push
or
insl
sub
lds
cmp
shlb
inc
pop
es
imul
push
xchg
icebp
jge
in
lock
orb
stc
mov
mov
cld
out
pop
iret
mov
jns
shrl
add
rcr
fisttpll
mov
insb
bound
adc
fdivrl
inc
and
push
ret
xchg
add
push
mov
jbe
xchg
push
cld
and
and
add
xchg
pop
cld
xor
xchg
das
std
stos
mulb
aaa
and
jmp
mov
push
ljmp
lret
in
push
push
jmp
cld
roll
jnp
fisubrs
out
insl
push
xchg
sub
dec
test
jno
fdivp
mov
ficompl
lahf
hlt
test
add
pop
scas
jmp
fwait
mov
sbb
sub
les
flds
nop
push
negl
cmp
fwait
adc
aaa
fcmovnb
sub
fidivrl
stos
mov
or
mov
xchg
mov
mov
mov
mov
jns
int
stos
iret
daa
pop
dec
add
test
inc
mov
mov
and
cltd
adc
test
repnz
xchg
pop
imul
pop
je
dec
arpl
xlat
ret
popf
data16
dec
pop
xor
or
sub
loope
xchg
jp
popf
out
sub
cld
and
mov
aam
shrb
mov
mov
addl
and
cli
shl
ret
addr16
loop
decl
sub
popa
jg
adc
cs
jbe
ljmp
mov
pop
scas
cmc
mov
xor
cmp
xchg
mov
testl
aas
iret
out
test
std
or
pop
sbbb
call
and
loop
notl
pop
frstor
dec
out
lds
lahf
out
lahf
sarb
push
and
sbb
out
xchg
add
stos
aas
mov
add
test
hlt
sub
iret
lock
scas
lea
cmp
push
mov
lods
mov
pop
stc
sub
out
mov
in
shl
fimull
aas
jns
mov
push
jno
jecxz
repnz
xor
push
into
and
lock
adc
mov
ljmp
lret
jb
jp
cmp
fbld
sub
add
fcomps
sub
jnp
dec
mov
mov
and
push
cmpl
mov
fadds
push
je
std
mov
sbbl
sub
loope
jbe
xor
mov
dec
add
or
jno
dec
sti
pusha
push
cli
sub
mov
mov
sub
cmp
outsl
mov
jecxz
lret
jmp
das
jl
js
lea
lret
jbe
sub
mov
sbb
pop
pop
insb
mov
fisttpl
repnz
cmpsl
scas
mov
jecxz
jge
adc
adc
pop
mov
icebp
mov
out
mov
xchg
xchg
iret
inc
mov
sahf
stos
sub
ret
jmp
lock
into
and
stc
or
pop
popa
mov
pop
pop
ja
push
inc
fcmovnb
sbb
jl
mov
dec
aas
pop
mov
fstps
test
fwait
push
jno
data16
out
pushl
mov
icebp
ficoml
cs
fnsave
mov
icebp
jmp
aad
daa
pop
out
ret
pop
scas
pop
out
inc
stc
idivb
clc
fcmovnb
idivb
fs
jno
test
cltd
xor
add
gs
rorb
fnsave
jmp
test
mov
arpl
xchg
insl
xchg
out
pop
out
cli
mov
cmp
dec
dec
std
mov
pop
xlat
push
dec
mov
xor
jecxz
ljmp
insb
xlat
sarb
xchg
aad
cltd
nop
mov
cwtl
inc
in
fs
xor
adc
mov
sbb
imul
imul
cld
out
iret
push
cli
arpl
mov
sarl
cmp
pop
into
mov
out
sbb
into
xchg
pop
xadd
les
inc
mov
enter
stos
in
fwait
lods
mov
popf
inc
mov
negl
shlb
pop
fstps
inc
sbb
les
jmp
sti
push
fisubrl
dec
lahf
xchg
flds
data16
repz
or
ret
mov
dec
fldl
push
pop
cmp
scas
ds
xchg
mov
arpl
or
addb
dec
cmpsl
lock
std
or
inc
pop
jg
and
lods
jge
sub
xor
pop
insl
fistl
sub
mov
loopne
aaa
insb
and
or
push
arpl
add
or
stos
jmp
push
push
lea
mov
jnp
pop
and
lea
imul
pop
xor
mov
mov
popl
push
cmp
out
jp
out
or
jb
mov
sub
adc
push
or
shlb
sbb
jno
imul
ja
sbb
jbe
scas
nop
mov
int
popf
mov
jle
sub
movsb
cli
fstl
xor
xor
xor
mov
arpl
adc
xchg
icebp
in
stos
notl
mov
dec
in
xchg
ret
add
xchg
dec
dec
lock
sbb
scas
out
xchg
lock
inc
insl
bound
sub
mov
popf
fnstsw
jmp
adc
push
lock
std
xchg
dec
mov
lahf
pop
jns
andl
pop
add
jbe
ret
fimull
mov
jno
mov
imul
ljmp
mov
icebp
cmp
insb
and
jae
or
test
pop
mov
sub
push
decl
adc
pop
movsb
xchg
jl
std
jmp
sbb
cltd
fiaddl
pushf
arpl
xchg
les
psrlq
jbe
rolb
dec
pop
pop
mov
cmp
mov
adc
mov
stos
inc
mov
pop
add
cmpsl
movsb
xchg
add
inc
mov
fadds
pop
mov
mov
inc
ret
ds
or
jb
daa
test
lret
test
lcall
shr
adc
arpl
adc
rcr
jns
mov
sbb
lock
mov
adc
enter
mov
rorb
and
fbstp
push
add
jne
sub
in
xchg
lds
pushf
xor
jp
add
push
add
pushf
dec
push
fsts
pop
outsb
push
rolb
mov
mov
inc
lods
int3
or
inc
pop
jno
xor
lahf
aaa
rcrb
mov
punpckldq
or
xchg
push
in
mov
cmc
mov
cmp
std
scas
inc
shrl
shl
shll
movsb
mov
mov
fwait
jnp
loop
push
sub
jg
decl
inc
clc
pop
and
imul
mov
or
xchg
sbb
imul
mov
push
popf
out
jle
pop
out
adc
sbb
cmpsl
and
inc
xchg
dec
push
nop
dec
fs
cmp
ds
std
rcr
arpl
xchg
pop
into
pop
pop
loop
mov
add
sti
mov
in
aas
pop
mov
jnp
pop
hlt
lcall
enter
cmp
cmc
pop
icebp
adc
mov
ljmp
sbb
shrb
rol
cmp
mov
fsub
out
mov
jecxz
xchg
or
push
fistpll
inc
mov
or
repz
lds
xor
push
jo
aaa
mov
inc
jns
repz
addr16
loope
into
mov
in
scas
mov
notb
adc
mov
pop
xchg
inc
sbb
cmp
sub
in
xchg
cli
xchg
fcoml
or
in
sbb
push
mov
adc
mov
mov
sarl
xchg
sub
mov
shlb
xor
rorb
in
fnstcw
emms
repnz
inc
or
lock
orl
mov
cmpsb
mov
shr
pop
push
fnstenv
insl
adc
popa
mov
mov
out
cmp
cs
roll
xlat
push
loope
in
mov
sbb
repz
das
mov
ja
mov
ljmp
or
dec
pusha
sbb
cmp
test
xchg
jle
lret
in
in
call
cmpsl
cltd
dec
pop
int
repz
jle
in
cmpb
adc
pop
jne
pop
sub
sti
les
pop
aad
pop
std
mov
mov
add
lods
lods
out
loop
inc
sbb
push
and
je
icebp
cs
pop
sbb
or
lcall
ret
mov
sbb
push
dec
mov
cwtl
pop
in
cmpsb
pop
mov
sbb
movsb
ja,pn
mov
inc
test
pop
fwait
inc
imul
add
fdiv
and
jne
out
shlb
cmc
pop
or
mov
pop
add
cmp
les
lcall
out
cwtl
inc
mov
mov
shl
ja
enter
adc
push
aaa
arpl
orl
mov
sbb
addr16
aam
dec
ret
repz
xchg
inc
adc
ja
push
inc
mov
pop
cmc
loopne
sbb
js
std
push
xchg
mov
xchg
inc
pop
and
sub
mov
cli
mov
inc
fsubr
test
push
fadd
xorb
call
xchg
or
jne
pop
cmp
jge
xchg
cmp
adc
or
fs
xchg
iret
fimuls
xchg
bound
cld
mov
sub
pop
imul
xorl
inc
clc
xchg
pop
sbb
cmp
mov
add
cmpsl
or
rcr
adc
ret
loopne
cmp
and
pop
xorl
icebp
scas
imul
add
inc
movsb
push
int
jbe
jns
xor
popf
in
mov
stc
imul
jns
push
mov
cmp
cmp
jg
fmuls
pop
and
mov
cld
add
test
mov
movsb
pushf
outsb
in
jmp
fldenv
test
inc
and
test
push
inc
inc
cmpsl
pop
fwait
jns
jo
popa
jno
jbe
int
adcb
add
out
add
mov
xor
inc
and
imul
rorl
lds
in
fsubl
ljmp
mov
iret
dec
and
cwtl
cltd
inc
sbb
test
inc
dec
insl
pop
xor
xchg
cmp
adc
out
sub
mov
push
jnp
sub
cmp
loope
jae
ljmp
inc
dec
cmp
test
popf
btc
adc
mov
or
popf
push
pushf
inc
out
ljmp
movsl
cmp
loop
aad
dec
or
and
lea
and
push
imul
mov
dec
jecxz
lods
push
mov
mov
xchg
cwtl
jmp
out
in
pop
xor
dec
mov
imul
xchg
orb
leave
and
lret
mov
ret
into
loopne
jo
cmp
clc
rolb
add
and
sub
cmpsl
mov
cmp
inc
pop
outsl
movsl
adc
leave
xchg
icebp
sahf
inc
inc
movsb
xlat
fs
les
lods
incb
imul
cltd
pop
dec
rclb
pop
loope
mov
jge
scas
in
in
xlat
lcall
push
rcrl
xchg
jge
out
mov
fcmovnbe
aad
pop
aam
push
adc
pop
in
iret
outsl
push
jmp
push
scas
xlat
ljmp
xor
push
mov
inc
add
mov
stos
and
mov
loop
mov
cmc
inc
mov
cltd
jnp
inc
jmp
mov
jb
pop
mov
pop
fstl
push
cli
std
out
insb
gs
pop
pop
cmp
ret
adc
js
shlb
xor
loop
in
mov
inc
lods
imul
jbe
repnz
mov
jbe
int
dec
aad
iret
test
movsb
jno
adc
fistps
xor
or
sub
mov
std
imul
xchg
mov
push
xchg
fisttpl
out
lea
in
aad
mov
idivb
sti
cli
nop
inc
icebp
outsl
or
faddl
inc
jg
arpl
add
xchg
scas
repnz
call
pop
xchg
pop
adc
cmp
call
mov
xchg
fdivrs
lahf
outsl
js
or
test
dec
inc
pop
repnz
dec
notb
hlt
jp,pn
ds
and
into
push
dec
mov
push
stc
adcl
stos
rcrb
sub
and
inc
stc
push
mov
mov
lcall
xor
imul
loop
in
iret
aas
inc
out
dec
add
int
int3
xor
hlt
sub
dec
pop
mov
sub
inc
push
dec
jbe
pop
and
mov
outsb
test
mov
in
in
jne
lea
sbb
adc
push
in
es
jl
fbstp
sub
and
int
inc
cld
lret
jg
cwtl
lods
jne
mov
pop
and
inc
cmpsb
shrb
cmpsl
sub
imul
sbbb
insb
cwtl
clc
lods
pop
cmp
shrl
inc
dec
adc
popf
pop
inc
jp
lods
movsl
inc
fisubrl
out
xchg
out
aad
lret
das
or
pop
stos
and
xor
xlat
cmpl
fwait
mov
in
mov
fs
icebp
adc
stc
sub
pop
jge
sub
push
push
dec
sub
sub
into
enter
clc
pop
imul
decb
lcall
out
iret
into
jo
lock
mov
xchg
mov
sub
dec
sub
daa
mov
jnp
sbb
sbb
xchg
ljmp
jno
stos
div
sub
mov
daa
stos
mov
cmp
push
cmpsb
ds
scas
mov
cmp
or
bnd
add
adc
xchg
inc
pop
enter
lret
jns
or
dec
inc
loop
test
jo
pusha
mov
sub
lcall
pop
jmp
mov
clc
cli
inc
add
pop
sbb
mov
jge
jne
or
jns
xor
adc
mov
xchg
adc
lcall
dec
fstpl
int3
shrl
lret
jno
je
and
push
pusha
popa
push
sub
push
ret
push
cmp
fwait
dec
dec
mov
xchg
outsb
mov
lahf
adc
xchg
push
insl
aaa
mov
in
push
push
stc
fwait
js
mov
or
enter
fidivl
stc
push
scas
fwait
cs
pushf
jmp
push
sbb
lea
jb
and
mov
daa
shrl
stos
pop
es
fcomp
xchg
inc
xchg
loopnew
jne
lods
cmp
gs
mov
mov
sub
inc
xor
ja
dec
pop
loopne
popf
mov
adc
rclb
lret
push
pop
cmp
sub
xlat
scas
insl
pop
mov
xchg
sbb
fdivrl
scas
dec
xchg
sub
adc
sbb
lock
in
pusha
and
testl
and
dec
daa
mov
ss
icebp
iret
cld
jb
lret
and
jmp
mov
jmp
jns
push
sti
push
loope
leave
sbb
faddl
add
jg
jbe
sar
test
sahf
pop
cwtl
and
and
je
arpl
xchg
xchg
pop
fisttps
ds
fstpt
sbb
or
fs
mull
pop
inc
sub
cmp
ret
test
xlat
in
movsb
es
push
push
jae
add
loop
jge
in
pop
into
fdiv
dec
repz
pop
adc
clc
mov
sub
push
mulb
xchg
cmp
push
adc
dec
mov
cltd
sbb
call
mov
xor
nop
lret
pop
jecxz
adc
mov
loop
scas
enter
dec
adc
dec
sti
add
push
xchg
adc
ljmp
jp
fnstcw
dec
push
daa
jbe
dec
mov
sub
daa
sub
pop
in
or
add
jae
xchg
dec
add
arpl
inc
repz
lea
or
and
int
sbb
roll
push
xchg
imul
pop
add
popf
fld
pop
icebp
fidivl
pop
cmp
popa
ret
test
jae
dec
add
cmpsl
shll
mov
mov
loopne
push
in
pushl
mov
stos
add
mov
cmp
cmpsb
adc
fldcw
mov
fwait
daa
mov
push
fs
hlt
pop
jb
cmp
pusha
mov
mov
aas
sarl
adc
or
jns
out
mov
fisubrs
mov
add
xchg
test
ret
cmp
cmp
push
in
fcomi
xchg
int3
pop
leave
inc
mov
add
fs
push
jbe
and
sbb
stc
push
push
out
sbb
sub
out
push
fisubrs
fnsave
pop
daa
adc
jbe
fwait
mov
adc
popa
imul
push
cmpsl
mov
mov
enter
jno
jle
sbb
sarl
fldl
ja
hlt
dec
xchg
outsb
mov
lret
mov
mov
pop
push
pop
fmul
pop
dec
cwtl
rclb
mov
xchg
testb
mov
and
mov
xor
into
pop
inc
gs
pop
sbbb
mov
ds
adc
fwait
mov
test
in
inc
pusha
js
mov
cs
ficoms
cmpsb
adc
and
add
aam
popa
imul
or
ja
jl
jne
mov
adc
insb
xchg
jns
shll
mov
fnstsw
stos
mov
mov
hlt
jmp
test
clc
sbb
hlt
outsl
inc
mov
out
inc
push
mov
in
push
push
sbb
fadds
aam
ljmp
in
jns
mov
push
mov
jb
jp
mov
push
or
jmp
adcb
inc
arpl
and
add
sub
pop
push
pop
insb
bound
pop
lock
inc
and
nop
rcll
jno
lcall
enter
xchg
jmp
sbb
or
outsb
and
scas
xchg
mov
adc
xchg
outsb
loop
lcall
lcall
adc
mov
push
test
pop
les
or
daa
cmp
cmp
mov
xchg
inc
jp
push
pushf
xor
icebp
xchg
pop
mov
sti
push
out
cmpb
les
pop
cmpsl
or
aam
ss
mov
lahf
jecxz
testl
cmp
test
pop
push
cs
rcll
jle
movsl
lret
mov
cmpsl
andb
jp
mov
sbb
lea
mov
mov
cmc
jbe
xlat
and
popf
jae
pop
call
or
out
ja
in
jge
aad
mov
aaa
mov
push
jmp
cmpsb
inc
fucomi
mov
ret
mov
jae
push
int3
out
push
or
push
cwtl
rcrb
mov
mov
lock
mov
clc
dec
mov
loop
xchg
cmpsl
in
mov
faddl
call
arpl
mov
cmpb
test
dec
mov
stos
clc
pop
add
flds
lods
movsl
jle
stos
out
push
xchg
mov
xchg
ficompl
inc
test
cltd
mov
mov
mov
flds
sbb
repz
jns
jle
jmp
push
mov
dec
push
std
sub
mov
hlt
jb
pop
repz
fnstcw
dec
popa
xchg
dec
jecxz
enter
dec
mov
add
mov
jecxz
jo
pop
orl
pop
jp
sbb
sbb
stos
fsubr
aad
in
mov
jae
in
xchg
popf
into
sbb
inc
mov
xabort
movb
rorl
jb
mov
es
clc
mov
add
cwtl
rolb
adc
cmp
pop
cwtl
cmp
cmp
jo
nop
jns
loop
and
or
mov
mov
or
mov
outsb
mov
call
mov
jl
jnp
sbb
bound
xor
ja
jecxz
out
pop
mov
pop
dec
ficomps
leave
daa
mov
imul
ljmp
mov
jp
test
adc
dec
inc
outsl
les
lcall
nop
xchg
lods
cmp
jmp
jbe
and
sbb
xchg
in
fisttps
add
inc
hlt
scas
push
jmp
push
add
xchg
std
fstps
lea
fucomp
jecxz
lods
fsts
mov
mov
call
movswl
mov
test
jg
aaa
lea
ja
dec
push
mov
fs
jecxz
mov
mov
call
roll
inc
hlt
inc
out
inc
sbb
sub
out
cmp
inc
mov
xchg
mov
push
sbb
repnz
sbb
xor
mov
or
jnp
xor
or
out
xor
dec
dec
sbb
scas
xchg
push
jnp
inc
mov
jle
inc
mov
js
dec
les
lods
in
jmp
cmp
jl
and
push
sub
sbb
dec
ret
push
rcr
in
jb
sub
gs
pop
mov
imul
mov
dec
dec
jno
insb
repnz
inc
xchg
fwait
imul
and
dec
lret
into
xlat
mov
cltd
sub
popf
or
jbe
pop
outsb
sbb
or
push
test
int3
or
scas
push
lea
std
cmp
and
and
shll
xchg
cmp
pop
cs
jae
addr16
lret
mov
js
nop
leave
insb
mov
fs
lds
ljmpw
push
fs
lock
or
insb
lock
mov
jb
inc
jmp
cwtl
sbb
inc
cltd
mov
mov
jns
adc
cld
in
je
ljmp
in
cmp
xchg
lcall
arpl
mov
setae
aam
adc
shlb
push
cmp
imul
jmp
mov
mov
cmp
adc
mov
lret
out
pusha
push
or
jg
dec
sub
cmpsl
sub
fistpl
out
inc
mov
xorb
fisttps
mov
dec
mov
in
fbld
movsl
imul
xlat
sub
mov
arpl
dec
jnp
push
xchg
icebp
stc
mov
xor
lret
in
xchg
enter
pop
in
jne
sub
xchg
xor
js
or
lods
ret
rcrb
jge
pop
dec
push
out
cwtl
int
add
mov
push
ljmp
dec
into
in
sub
xchg
pop
jnp
mov
cmp
xchg
jp
addr16
push
mov
add
out
pop
test
mov
test
push
fnsave
fcoms
adc
or
and
mov
stc
and
cmp
jp
xor
sbb
stc
cmp
fsubrl
cmp
sub
dec
mov
aaa
inc
pop
inc
mov
cmc
insb
insl
lea
mov
inc
mov
jne
fs
cmc
fiaddl
inc
inc
into
mull
xor
rcll
imul
push
jno
mov
movsl
dec
in
das
jg
or
in
insl
fiadds
jae
mov
jle
inc
cmpsb
pop
xor
lods
push
lods
jbe
mov
mov
mov
sub
jle
imul
jmp
lret
int
popf
lock
pop
push
pop
xchg
pop
fistl
popf
out
lock
cld
in
pop
mov
imul
cmp
es
ret
push
mov
cmc
cmp
aam
cmc
in
dec
pop
dec
gs
sub
adc
mov
sub
mov
stc
pop
and
jbe
jne
imul
xchg
mov
add
mov
jne
mov
stos
push
int3
mov
outsb
int
and
popa
in
imul
dec
dec
sbb
mov
ret
bnd
and
lahf
jmp
adc
push
gs
popa
test
mov
mov
data16
fs
pop
xlat
xor
iret
sbb
movsl
int3
gs
enter
pop
and
test
mov
lcall
dec
lea
dec
pop
cmp
mov
icebp
mov
fwait
mov
stos
xchg
push
aas
mov
jg
cmpsl
in
out
decl
pop
cmp
iret
aas
cmc
jl
in
and
mov
aam
jge
sbb
sub
fcom
loope
add
data16
and
cwtl
pusha
ret
roll
shlb
roll
sbb
aad
orb
pop
test
inc
and
jno
dec
loope
push
ljmp
shll
jae
fnstsw
jl
pop
scas
or
pop
jo
push
push
push
push
dec
xchg
sbb
rcll
movsb
hlt
ror
sahf
incl
hlt
pop
notl
fildl
mov
xchg
aas
imul
scas
and
movsb
xchg
std
lcall
jo
add
out
pop
loopne
mov
fcoml
dec
mov
and
sbb
int3
fisttpl
mov
push
pop
xor
lds
sahf
ja
js
xor
and
mov
adc
bound
mov
mov
pop
pop
lret
sbb
fstl
add
sub
or
call
mov
and
xor
push
inc
repz
popa
addr16
sbb
jle
icebp
inc
mov
xor
pop
in
int
mov
mov
mov
test
test
cmp
cli
popa
scas
fistpll
popa
dec
xchg
mov
cwtl
or
push
sub
jecxz
mov
les
fstpt
inc
sbb
test
sub
js
scas
xchg
push
jnp
in
adc
shl
inc
int3
les
ficompl
mov
jg
mov
fistps
pop
sub
and
jl
push
cmpsl
in
mov
xlat
inc
mov
xchg
aaa
xchg
call
in
mov
sarb
sbb
push
push
nop
test
shrl
jp
and
inc
hlt
testb
push
dec
adc
jns
sbb
arpl
ja
sub
pop
or
cmp
inc
pop
sbb
into
ret
lcall
adc
clc
jmp
test
cltd
test
jge
adcl
and
or
bound
and
jae
hlt
sbb
cmp
jge
mov
pop
adc
adc
cltd
leave
gs
cmpsl
sub
in
and
sarl
jmp
scas
insl
adc
aas
dec
pop
jo
mov
mov
ret
lret
jl
scas
sti
mov
fwait
ret
fimuls
sti
push
xlat
xchg
mov
dec
jmp
pop
push
clc
das
loop
inc
mov
stos
stc
fildl
pop
pop
mov
in
inc
out
arpl
movsb
out
sarl
mov
mov
xor
or
mov
icebp
fmuls
add
lods
xor
fnstcw
mov
fcoms
icebp
xor
jmp
mov
cmpsl
cmp
aas
mov
daa
push
insb
push
mov
addr16
fiaddl
rclb
xor
pop
js
int3
jno
stc
fists
stc
cmp
stc
xor
sub
fisubrs
in
lea
mov
sbb
orb
rcl
sub
xchg
mov
mov
rol
xchg
out
stc
hlt
lahf
out
out
xor
fmull
or
sahf
and
dec
sub
insb
add
jle
bound
outsb
push
js
inc
xchg
rol
pop
je
ljmp
add
add
movsb
lret
inc
enter
addr16
aad
dec
ds
fldt
mov
pop
inc
cmpsb
xlat
mov
and
loop
push
pop
xstore-rng
cmpsl
inc
ds
mov
add
mov
in
or
xchg
fdiv
sbb
test
popf
adc
pop
lcall
loopne
sub
and
sbb
mov
push
inc
lods
jg
cltd
ret
cmp
cmp
xchg
push
push
mov
mov
cmpsl
in
andb
adc
or
int3
jne
call
adc
stc
pop
jl
mov
testl
fwait
outsl
cwtl
mov
lret
pop
stc
jmp
ja
test
adc
test
sahf
pop
mov
mov
jnp
lahf
mov
test
insl
pop
mov
test
call
inc
xchg
xor
out
push
mov
sbbl
sub
add
mov
fsubp
sbb
jnp
ja
stos
cmc
in
sbb
dec
fists
lea
cwtl
es
push
xlat
js
sub
stc
cs
mov
mov
outsl
xchg
popa
xor
push
inc
mov
xchg
pop
xlat
dec
ja
jae
xchg
in
shr
adc
adc
dec
ds
les
in
and
aaa
fiadds
or
cmp
xchg
ss
sub
std
es
iret
lea
push
xchg
hlt
and
lea
iret
sahf
mov
mov
xor
cmpl
int
xchg
rcl
stos
lock
or
ja
jge
ret
or
add
xlat
mov
lcall
push
es
lods
xchg
pop
push
fcoms
stos
fisttpll
lret
std
xor
dec
daa
push
repnz
or
jecxz
ss
mov
mov
pusha
jecxz
pop
inc
stos
lea
aas
or
lock
xor
mov
popa
push
xor
nop
aas
mov
aaa
push
push
or
mov
inc
int
out
nop
sub
fisttpll
incl
pop
les
loopne
push
jle
enter
dec
rclb
dec
pop
xor
pusha
inc
dec
enter
dec
pop
leave
andl
lods
sahf
add
addr16
sub
mov
insb
lods
fmuls
mov
cltd
cmpsl
sub
lcall
dec
pop
cmpsl
mov
jo
out
xlat
push
lret
or
jnp
mov
movsb
iret
testb
xchg
jl
and
and
jb
xchg
outsl
decb
and
icebp
int3
js
xor
int
outsb
sbb
movsb
popa
mov
es
andl
clc
bound
jg
xchg
adc
into
iret
fcmovnb
mov
es
or
pop
sti
sti
cmp
fsubrl
insl
mov
fwait
insl
sub
insl
xor
adc
in
xchg
outsb
pop
jecxz
pop
scas
push
cmc
into
xor
xor
mov
in
dec
daa
xchg
in
leave
push
shl
inc
mov
mov
cmp
imul
fnstcw
dec
lods
out
int
mov
jecxz
jb
dec
or
xor
mov
mov
xor
bound
sbb
outsl
dec
imul
imulb
mov
sub
lret
dec
mov
push
ret
int
lret
sbb
lods
int3
sbb
mov
iret
std
and
pop
xchg
outsb
in
dec
and
cmp
rorb
push
iret
push
stos
ds
dec
enter
hlt
fs
mov
jecxz
mov
ss
movsl
inc
fs
xor
or
loope
adc
sbb
xchg
add
cmp
repnz
cli
rorl
aaa
int
dec
clc
das
bound
mov
faddl
test
mov
out
cmpsl
addr16
adc
sti
jge
add
jge
mov
sbb
jae
mov
sbb
and
ljmp
xor
and
in
clc
fwait
jnp
fsubrl
mov
decl
es
dec
sub
movsb
push
cli
jecxz
lods
cwtl
pop
aad
cltd
test
mov
out
gs
leave
stos
stos
les
jb
orl
xchg
sub
cli
xchg
and
xchg
insl
dec
subb
in
nop
pop
stos
orb
data16
mov
cmpb
cmp
popa
pusha
loope
or
movsb
cli
mov
gs
xchg
add
testl
cmpsl
js
and
icebp
cmp
ret
lods
mov
aas
jne,pn
push
mov
dec
xor
pop
mov
notb
jb
jl
lret
aaa
das
mov
adc
out
stc
inc
pop
shrb
jp
add
sbb
inc
adc
repz
mov
ljmp
and
cmp
jnp
add
push
push
sub
push
adc
fucomi
cs
aaa
push
mov
mov
cmp
ja
mov
mov
inc
fcompl
mov
xchg
das
add
enter
popa
and
mov
enter
into
frstor
arpl
pop
push
jecxz
sub
imull
inc
pop
sti
fwait
insl
jne
pop
mov
mov
not
pusha
lret
clc
pop
lea
int
pop
sbb
inc
adc
hlt
jle
fcoml
jg
icebp
mov
mov
and
pop
xor
cs
mov
insb
ja
popa
addr16
data16
sbb
out
lds
cwtl
and
arpl
pop
jb
inc
test
fdivl
insl
and
cmc
push
adc
xchg
mov
and
dec
mov
lock
mov
inc
mov
lcall
enter
mov
iret
ret
mov
dec
cmp
fstl
dec
jns
mov
push
or
test
pop
outsl
xor
push
push
pop
push
mov
xor
dec
imul
arpl
fnstenv
mov
in
push
pop
cmc
imul
mov
scas
jb
pop
push
sbb
fmul
pop
cld
push
mov
loope
mov
stos
xorl
mov
inc
xor
hlt
insl
lds
and
adc
xorl
jne
mov
jecxz
out
sbb
jno
popa
mov
test
adc
add
popa
pop
cmp
push
push
mov
imul
mov
add
cmp
cmp
bound
add
minps
cmp
sbb
mov
mov
jmp
xor
cltd
jne
lret
xor
addr16
sbb
test
jae
data16
imul
ret
pop
scas
data16
cmp
hlt
int3
mov
xchg
mov
test
movsl
fdivp
xchg
arpl
mov
add
add
adcb
lret
shll
addr16
test
pop
jne
xor
and
pop
push
inc
outsl
sub
pushf
dec
lahf
push
xor
pop
or
and
sbb
xchg
adc
leave
sbb
lods
add
xchg
dec
sti
jbe
in
cmpsl
mov
inc
int3
movsb
inc
ja
push
dec
sub
pushf
imul
arpl
bound
adc
fnsave
stos
cmp
mov
adc
push
out
int
cmpsl
ljmp
xchg
aas
inc
out
inc
xchg
mov
dec
jne
cmp
xorl
imul
add
push
lret
movsb
leave
pop
imul
clc
subl
sbb
sahf
iret
bound
fwait
out
iret
mov
pushf
cmpsb
ljmp
mov
aas
jmp
or
outsl
aaa
dec
mov
ret
mov
fiadds
dec
test
pop
cltd
jl
shlb
sbb
sub
inc
push
dec
hlt
mov
jecxz
pop
pop
or
repz
pop
and
fcomps
mov
dec
xchg
xchg
jecxz
scas
xor
push
stos
gs
iret
push
or
mov
push
inc
jp
scas
lahf
xchg
xchg
inc
in
stc
xor
mov
or
jae
pusha
and
inc
pushf
xchg
cmp
cmp
negb
dec
xor
aas
adc
sahf
loope
mov
les
pop
push
jnp
xor
cs
sahf
push
notl
or
fstpl
pop
shl
rcl
mov
push
push
and
lods
pop
cltd
cltd
dec
mov
xchg
loopne
xor
outsb
stos
inc
movsl
ja
mov
es
jecxz
sahf
dec
arpl
pop
jo
nop
lock
icebp
shlb
out
lods
ja
xchg
lea
adc
adc
mov
addr16
ljmp
inc
mov
push
js
lahf
jge
icebp
push
loope
jne
popf
into
in
xor
or
push
push
lods
cmp
cmp
outsb
fwait
scas
jne
ljmp
das
mov
aad
rclb
dec
pop
movsb
mov
mov
sub
sahf
sbb
cmp
mov
jmp
fdivs
stc
icebp
stos
xor
dec
out
stos
pop
pop
ds
cmp
hlt
or
push
rorb
test
pop
stos
mov
jle
insb
cwtl
fwait
jne
jbe
xor
xor
loop
lcall
cmp
sub
sbb
sub
pushw
dec
fldenv
sbb
fidivs
pop
cmp
sub
push
out
and
insb
sbbl
mov
jae
cmp
add
pusha
in
popa
lcall
push
push
and
data16
mov
lods
add
test
in
ret
mov
jae
cmp
pop
mov
cmp
int
mov
movsb
mov
push
inc
enter
push
int
jge
and
mov
xchg
lea
test
aas
xor
mov
xchg
mov
sub
adc
push
jbe
mov
out
mov
adcl
mov
xlat
pop
mov
sbb
jno
sbb
loop
mov
jmp
movl
test
lret
mov
fisubrs
divl
je
mov
cmp
jb
inc
mov
sub
fisubrl
xor
push
cmp
dec
add
push
xchg
pop
mov
sub
push
pop
dec
and
xor
fisubl
sbb
cmc
jno
lret
mov
sbb
push
int
dec
inc
cmp
adc
sti
sbb
mov
push
push
popl
test
daa
mov
les
loopne
imul
pop
test
cmp
jecxz
ret
je
lods
in
fidivrl
lods
leave
popa
inc
sar
gs
xchg
loope
sbb
mov
xchg
scas
and
pop
imull
push
ja
mov
sbb
mov
push
mov
xor
shlb
add
inc
inc
mov
and
lea
pop
pusha
ret
arpl
iret
mov
ror
into
add
ss
in
lods
xchg
popa
adc
pop
and
aas
das
mov
hlt
add
arpl
aam
lods
bound
cltd
sub
sbb
cmp
popa
popa
sti
sbb
scas
sbb
int
negl
mov
andl
mov
jecxz
mov
xchg
mov
stc
ficoms
jo
pop
sub
push
xchg
mull
ret
mov
mov
mov
arpl
icebp
dec
inc
xchg
xchg
cmp
orl
shrb
add
lret
cltd
das
cmp
ja
adc
mov
int3
fldl
adc
lea
cmp
cwtl
xchg
push
subpd
pop
mov
cmp
xlat
adcl
rorb
je
mov
insl
test
mov
fdivrl
icebp
pushf
out
std
mov
sbb
outsl
lcall
push
lods
test
shrl
xorb
dec
jle
fcomps
mov
or
repnz
movsb
data16
pop
lahf
stos
inc
mov
movsb
mov
lret
pop
jns
test
mov
stc
lds
fcmovne
add
adc
pusha
testb
js
adc
mov
add
sbb
push
cmp
fwait
sbb
shll
arpl
test
imul
xchg
je
ret
jbe
inc
arpl
ret
mulb
lods
push
or
sbb
add
inc
fsts
and
pop
jo
add
add
or
test
shll
nop
popa
adc
loope
pop
inc
xor
pop
pop
orb
or
pop
xchg
jmp
in
push
pop
pop
scas
stos
stos
or
je
inc
and
cld
aas
sbb
mov
bound
loopne,pt
mov
jae
gs
stos
popa
nop
dec
or
adc
jmp
ret
and
mov
or
stc
pop
add
sub
xchg
cmpps
mov
pop
mov
stos
loop
jl
jg
mov
push
cmp
xlat
leave
out
enter
sti
cmp
shrl
daa
es
push
lods
or
push
mov
es
out
in
dec
inc
std
pop
pushf
inc
loopne
dec
push
out
arpl
jnp
sub
dec
sub
jp
ficompl
sub
jle
scas
push
stos
jno
in
call
and
test
xor
mov
add
adc
out
cmp
push
jle
and
std
ret
inc
xchg
mov
mov
lods
dec
pop
outsb
popa
dec
ret
pop
xor
inc
adc
add
sub
mov
or
fldenv
jae
clc
fsubrl
mov
mov
popa
mov
testl
fs
pushf
sbb
out
xorb
idivl
push
push
scas
sbb
sti
scas
je
push
mov
mov
xor
cmpsl
dec
sarb
leave
xlat
lods
add
iret
rcrb
leave
lea
jl
out
clc
hlt
jbe
mov
ret
ret
mov
in
rclb
sub
mov
mov
jbe
popf
jnp
ss
incb
mov
je
xchg
addl
mov
fidivs
pusha
sub
xchg
push
or
stos
pop
add
movsw
cmpsl
cmpsb
add
mov
filds
push
inc
pop
sahf
mov
stos
inc
jnp
sahf
shrl
test
inc
in
loop
addr16
push
scas
repnz
xchg
mov
jmp
test
xchg
mov
jns
movsl
or
dec
sbb
mov
sbb
xchg
add
push
clc
mov
scas
cmpsl
xchg
mov
or
icebp
bound
push
in
rorb
mov
sti
add
fisubrl
push
inc
lea
fs
icebp
pop
repnz
xchg
mov
popf
cwtl
mov
ss
clc
pop
cld
or
shrb
test
ds
sub
pusha
iret
popf
push
mov
pop
sub
push
into
push
fsubrl
or
out
aas
pop
negl
cmovg
daa
mov
xchg
mov
inc
add
lcall
nop
dec
lock
jg
sub
add
xchg
jecxz
pop
jmp
lds
mov
pop
fistps
mov
fdivrs
fisubrs
mov
mov
push
and
add
mov
scas
cltd
jl
andl
inc
mov
insb
vmovshdup
test
pop
cmc
mov
inc
rcll
mov
push
ljmp
iret
xor
mov
mov
lods
loopne
jae
rcr
sub
aam
leave
inc
and
or
imul
mov
pusha
mov
test
mov
test
xor
mov
mov
jnp
pop
frstor
adc
mov
jns
loopne
repnz
aas
stos
in
mov
movsl
test
jbe
push
and
xchg
cmp
pusha
aaa
or
test
mov
iret
imul
push
inc
or
out
fcmovu
hlt
outsl
jnp
push
jg
mov
stos
mov
jbe
sub
pop
hlt
inc
cli
cmpsl
out
or
push
ret
cmp
cmc
arpl
int3
dec
lock
and
mov
dec
pusha
scas
mov
jae
jmp
xchg
rorl
or
xchg
add
mov
popf
mov
aam
mov
testl
and
dec
cmp
mov
jecxz
mov
mov
inc
jo
cmc
negl
outsl
pop
jmp
scas
dec
insl
je
jg
std
ds
das
and
loop
push
dec
addb
mov
loope
mov
cwtl
adc
popf
stos
inc
into
pop
lcall
xchg
test
jns
mov
mov
repnz
js
aaa
and
fwait
cld
push
sub
fnstenv
ljmp
mov
xchg
mov
ficoms
cmpsl
lds
xor
sbb
and
lret
out
in
mov
test
out
ss
ss
add
cltd
mov
jb
mov
dec
fiadds
test
cli
mov
sbb
jecxz
fdivr
repnz
je
mov
popa
adc
jns
out
dec
aas
and
and
adc
pop
movsl
lods
or
ret
or
and
enter
outsb
popf
inc
and
mov
pushf
lret
jmp
or
das
sub
insb
pop
xor
stos
data16
in
push
mov
iret
fmul
sub
loop
lods
mov
fcompl
dec
cmp
orb
das
jmp
xchg
fwait
mov
mov
lcall
imul
jbe
dec
jg
inc
mov
dec
je
mov
mov
pop
sub
or
div
or
icebp
dec
jnp
add
xor
mov
jo
mov
cmp
in
or
mov
test
nop
xchg
insb
out
jae
xor
ljmp
out
cwtl
mov
mov
bound
and
jo
sbb
xchg
push
jle
cmp
shrb
shrb
add
push
xor
sbb
xchg
and
adc
movsb
mov
in
in
out
clc
std
jp
test
mov
stos
lods
add
xlat
lods
jb
xor
mov
pop
mov
mov
lods
mov
jnp
enter
out
stos
mov
or
and
inc
adc
jle
push
movsb
add
inc
mov
push
dec
dec
inc
scas
xchg
mov
fs
mov
jle
hlt
jo
jae
cmp
cmc
dec
outsb
sub
repnz
clc
int3
ret
push
orl
pusha
add
mov
enter
out
or
pop
scas
mov
and
pop
push
pusha
xorl
adc
xor
add
sar
test
xchg
pop
test
add
xchg
into
sbb
bound
and
xor
ljmp
dec
or
call
pop
pop
or
int
ret
mov
out
leave
dec
xor
push
jae
sub
cwtl
leave
pop
xor
push
mov
addr16
push
cli
adc
shrb
inc
push
shll
dec
scas
mov
jbe
stc
inc
add
aam
leave
sub
loop
adc
dec
ret
and
int3
outsb
repnz
mov
fisubs
xor
xchg
add
decb
inc
daa
sbb
sub
lret
in
inc
adc
cmp
adc
xchg
push
dec
cmp
repnz
inc
pop
lcall
sub
add
jne
and
daa
into
push
xchg
movsb
jbe
mov
dec
cmp
pop
cmc
imul
fistpl
xchg
out
inc
xor
int3
pop
cmp
mov
cmpsl
xor
popf
adc
addr16
xchg
gs
push
cmp
bound
cltd
pusha
fmull
dec
std
fidivrl
ret
inc
popa
dec
je
stos
cltd
ret
out
xchg
cmp
lsl
je
lahf
pop
xchg
ja
sbbb
jg
add
sub
inc
cmp
mov
xchg
repnz
jl
or
in
ret
scas
jae
dec
je
rcrb
sbb
pop
and
sti
insl
out
out
jo
or
sbb
aad
push
dec
test
fnstcw
jmp
jle
ljmp
outsl
adc
std
jge
xchg
add
pusha
mov
popf
pusha
inc
sbb
test
inc
fildll
xor
mov
mov
jns
pop
push
push
shr
dec
jns
jb
xchg
insb
sbb
cmp
xchg
or
hlt
and
scas
pushf
add
mov
jge
cmpsl
cmpsb
cmp
add
mov
repz
xor
fcompl
cld
ret
and
popf
icebp
out
inc
aad
rolb
ss
ss
adc
btc
stc
mov
in
orb
xor
mov
inc
mov
mov
nop
sub
and
dec
cmc
test
insb
ljmp
xchg
sub
popa
mov
cmp
inc
add
mov
cmp
into
or
mov
push
jmp
je
xor
rorl
cmp
xlat
pop
push
add
cmc
pusha
movsb
inc
cli
inc
mov
in
xor
push
jno
sub
jl
int
popf
clc
inc
mov
cmp
jnp
out
cmp
sub
shll
shlb
or
fnstenv
ss
pop
xchg
inc
jb
insb
out
popf
popf
pop
mov
repnz
dec
cmp
in
push
and
xor
jo
xor
mov
cld
int
fs
adc
mov
pop
dec
aaa
or
cmc
push
dec
ljmp
adc
aad
movsl
rorl
es
es
lods
stc
sub
test
cltd
jo
fs
pop
idiv
test
inc
fldln2
mov
jge
mov
sub
icebp
push
inc
dec
sub
pop
repz
mov
in
sub
nop
sbb
and
fs
mov
hlt
and
out
jbe
pusha
scas
in
enter
xor
adc
jle
ret
sbb
dec
das
cwtl
fs
and
push
out
je
rorb
inc
mov
inc
mov
iret
pushf
les
aaa
push
dec
pop
cmp
mov
daa
push
xchg
nop
sbbl
xchg
push
and
xor
aad
push
cmp
mov
cmp
popl
pop
inc
mov
mov
aas
push
imul
lds
stos
and
inc
lods
in
xor
mov
cmpsb
fwait
bound
imul
dec
cmp
mov
loop
push
call
and
sbb
mov
into
sub
xor
cmpsb
mov
bound
mov
sbb
sub
ss
popa
clc
hlt
imul
and
movsl
xchg
pushf
jecxz
sbb
mov
pop
std
test
cwtl
repz
lret
ficomps
mov
sbb
xlat
inc
movsb
in
lahf
test
scas
shlb
sub
adc
mov
and
popa
xchg
push
xchg
lock
push
pop
mov
sub
mov
das
movsb
sahf
rcrl
sarb
pop
push
xchg
addr16
sahf
inc
cmp
adc
rorl
outsb
scas
out
js
or
aad
xchg
inc
or
mov
jns
xchg
rclb
cmp
out
test
mov
imul
mov
or
or
add
mov
jle
xchg
aam
fldl
lds
call
mov
mov
nop
dec
push
push
daa
ja
and
jae
ficoml
cmc
stc
mov
push
andl
subb
lea
popf
mov
stos
in
dec
sbb
and
insb
dec
mov
push
out
je
movsb
ss
mov
xlat
mov
xchg
and
dec
push
push
jmp
xor
cmp
out
xchg
es
ss
dec
or
xchg
mov
mov
in
lcall
or
hlt
sub
arpl
mov
add
xor
jmp
cmp
mov
xor
jg
add
sub
push
fwait
cmp
push
pop
jb
inc
mov
add
int
xor
pop
out
xor
mov
lea
fadds
rcl
arpl
push
subl
hlt
into
mov
stos
cmp
movsl
jb
xor
push
push
nop
jns
jnp
in
push
stos
test
push
adc
fiaddl
dec
pop
insl
popa
add
movsb
add
push
pop
adc
push
mov
out
sti
pop
outsb
lock
loope
aad
xchg
fiadds
mov
mov
pop
in
test
xchg
xchg
fwait
pushf
and
aad
mov
inc
jbe
xchg
mov
icebp
lods
pop
ja
xchg
jmp
and
mov
mov
jge
inc
insl
out
stc
sarl
jmp
ror
dec
shlb
test
mov
shll
jno
stos
push
out
out
decb
in
pusha
adc
shr
jae
pusha
in
test
dec
popa
jb
sub
xor
cltd
mov
les
frstor
mov
inc
cmpsl
dec
adc
test
mov
inc
push
sbb
clc
loop
test
cltd
mov
cmc
xor
sarb
mov
int3
lock
addb
adc
dec
jg
xchg
mov
jecxz
mov
in
das
je
xor
push
test
xchg
mov
pop
cmpsl
int
pop
mov
sub
scas
mov
sti
leave
pop
jecxz
lahf
stos
int3
cmp
sub
add
mov
in
loope
dec
ja
pop
cltd
mov
pop
inc
mov
xchg
movsb
fistpll
fst
mull
inc
lds
pop
inc
push
push
and
icebp
int3
dec
and
aas
xor
cld
ja
movsb
jb
push
sub
sub
pop
pop
jbe
loop
insl
adc
cli
out
jp
cmc
inc
imul
lods
mov
push
mov
sbb
add
push
cmpsl
cltd
jmp
add
mov
lods
or
ret
jbe
sarb
sbb
sbb
rcr
mov
mov
ss
icebp
fsubl
sbb
fs
and
out
xor
push
inc
mov
mov
xchg
sub
pop
cmp
dec
daa
lods
xor
std
inc
in
int3
aam
xchg
ret
popa
mov
and
inc
loope
lea
aam
mov
fdivrl
jae
je
push
sbb
cmpsl
push
mov
enter
pop
adc
and
flds
cmp
cmp
mov
arpl
push
loopne
movsl
imul
repz
push
daa
adc
call
lcall
loopne
xchg
xchg
dec
aam
loop
scas
fs
push
insb
nop
pop
xchg
notl
stc
pop
add
outsb
mov
mov
stc
adc
sub
or
and
add
dec
mov
mov
or
movb
xor
test
adc
nop
iret
ss
jo
add
add
int3
mov
or
sub
add
xchg
jbe
dec
clc
jb
sahf
push
lret
call
push
int
cld
out
sub
xor
mov
mov
mov
les
sbb
xchg
daa
and
lock
sti
or
jle
xor
xchg
jecxz
jle
shl
inc
adc
outsl
test
lcall
pop
cld
icebp
dec
inc
cmp
sub
cwtl
xlat
icebp
push
jne
sub
aad
aad
test
outsb
ficomps
fistpl
cwtl
mov
xor
sub
leave
ret
shl
sbb
je
push
je
adc
push
and
xor
inc
jo
ljmp
xor
jle
pop
fisttpl
xchg
decl
sub
sbb
push
loope
cwtl
or
ficoml
andl
xor
jo
dec
adc
lret
dec
bound
aaa
les
ret
mov
mov
mov
stos
popa
cmp
pop
pushf
dec
decl
lcall
fists
xor
jb
cmp
push
push
inc
or
sub
lods
pusha
fiaddl
push
repz
fildll
mov
or
cmp
xchg
jle
xchg
loop
ficoml
dec
mov
push
lret
push
cmc
popa
mov
mov
stc
xchg
loop
shlb
push
sub
les
inc
movsb
shll
sbb
dec
xchg
inc
jae
repnz
push
cwtl
lock
loop
cltd
in
inc
aas
js
mov
dec
dec
sbb
sub
inc
bound
inc
sub
xchg
mov
insb
xchg
cmp
dec
mov
inc
mov
jo
push
outsb
cmp
clc
cltd
hlt
push
aas
pop
add
sbb
ror
cltd
xor
pop
adc
fwait
mov
repnz
pusha
orb
inc
pop
gs
cmp
push
fbstp
repnz
out
loopne
jmp
cltd
insl
fistps
gs
scas
iret
in
jb
push
cld
dec
mov
mov
pop
mov
scas
orl
stos
dec
dec
push
rcrl
movsl
pusha
mov
xor
xor
sbb
sbb
scas
jl
mov
les
add
mov
jge
jae
jecxz
in
and
xchg
mov
lret
repz
fdivs
sbb
jae
scas
rol
subl
jmp
pop
inc
je
cltd
and
xchg
outsl
leave
ds
inc
insb
insb
sub
into
add
imul
test
mov
jg
or
add
xchg
es
sub
mov
cmc
mov
clc
in
inc
divl
scas
mov
mov
inc
lahf
add
mov
xchg
jb
ret
fidivl
sub
mov
adc
fmuls
mov
std
scas
pushl
ds
je
mul
push
aas
int
cmp
sbb
popa
push
mov
ljmp
or
stc
sub
inc
lock
or
xchg
push
push
lds
popa
cld
out
test
sub
jle
sbb
imul
sub
loope
cmp
push
push
push
mov
imul
bound
sbb
jg
sbb
lock
outsb
movsb
out
shrl
int
sub
pop
fwait
pop
pop
jp
push
jecxz
jbe
sbb
imul
lods
sub
inc
in
sub
mov
imul
jge
push
daa
fcoml
mov
nop
in
push
xchg
into
imul
stos
dec
incb
repnz
sbb
dec
push
ret
arpl
addl
push
mov
repnz
xchg
outsl
inc
ret
call
xchg
pop
aam
mov
cmc
inc
js
cmp
mov
data16
jg
mov
movsb
add
das
setl
jo
mov
aaa
data16
pop
fists
jae
mov
push
iret
mov
jp
xchg
jg
loopne
and
loopne
sub
sti
movq
mov
xchg
or
fsubr
aad
nop
ret
mov
aaa
sbb
and
adcl
or
push
jp
adc
push
sarb
hlt
call
sbb
fisttpll
adc
and
add
das
fnstenv
mov
andl
mov
cs
in
push
mov
push
dec
mov
adc
push
ds
test
fwait
push
pop
clc
cwtl
push
icebp
in
pop
pop
dec
sub
int
push
out
pop
mov
xchg
fadds
push
mov
xchg
cmp
sub
jbe
je
je
xchg
enter
mov
cmp
and
inc
pop
stos
int3
int3
ficomps
and
mov
filds
aas
ss
push
insl
sti
push
sub
mov
jo
inc
mov
push
push
scas
dec
imulb
dec
int3
rcrl
stos
xchg
dec
test
sub
and
or
mov
imulb
repnz
mov
in
jp
push
mov
push
mov
push
lock
pop
out
sbb
clc
mov
add
aam
cmp
out
cmp
mov
fistpll
adc
jl
popf
stc
shlb
xlat
bound
xchg
mov
and
lahf
xchg
imul
cmp
mov
pop
sub
fxam
iret
outsl
xchg
xchg
clc
sahf
ja
call
pop
mov
lock
pop
test
push
pop
in
in
bnd
out
sub
popf
push
jb
adc
gs
hlt
push
scas
inc
inc
bound
lret
stos
jge
out
cmp
loop
insl
sub
repz
icebp
add
stos
push
xchg
dec
xchg
xchg
pop
ficoms
ret
jl
int
mov
xorl
lds
and
push
mov
and
mov
lret
ret
mov
cmp
gs
insb
imul
in
mov
ljmp
int3
cs
mov
dec
fsubp
jle
negl
in
dec
xlat
stc
fs
and
push
das
stos
es
stos
scas
aas
lds
sub
inc
pop
popa
stos
sti
scas
push
daa
ficoml
push
popf
add
maxps
jno
shlb
mov
in
int
fldenv
je
stos
push
das
rclb
cmp
adc
or
sub
cmp
lds
in
hlt
insl
dec
dec
aad
push
loope
sbb
js
and
ret
vpsraw
jl
addr16
arpl
aam
push
or
push
lock
in
push
jbe
mov
push
jp
sbb
hlt
mov
repz
mov
sarl
sbb
enter
lahf
maxps
stc
cmp
stos
pop
push
sub
mov
pushf
popf
fnstenv
lods
test
mov
sub
jb
mov
ds
mov
les
push
and
shr
pop
adc
pop
clc
dec
test
jno
mov
pop
add
push
pop
cmp
xor
mov
test
mov
jbe
jns
mov
testb
and
or
and
inc
ss
push
lea
sbb
push
out
xorb
pop
loop
fsubs
mov
mov
out
cmp
add
or
jbe
add
aad
adc
faddl
push
outsb
mov
cmc
adc
stos
stc
jnp
add
sub
xlat
movsl
xchg
pop
into
repz
fnsave
dec
sub
pop
int3
cmp
cli
test
mov
jecxz
dec
in
xor
jb
jne
and
cmc
dec
imul
mov
fistl
mov
fstl
add
out
push
fidivs
es
out
push
ja
mov
pop
je
push
jmp
or
stos
sbb
xchg
pop
jg
pop
dec
fsubrl
je
rcrb
sbb
fdivp
fistpl
adc
cld
or
sbb
insl
arpl
cmp
mov
xchg
pop
dec
cld
jne
imul
in
out
or
cmp
pop
sub
incl
shll
cmpsl
jg
cwtl
push
jo
in
mov
sub
mov
test
nop
sub
fldl
mov
dec
dec
icebp
cld
and
adc
sub
pop
cmc
ds
sti
das
in
mov
into
es
out
imul
inc
sub
mov
cmc
mul
jmp
sbb
jnp
iret
mov
or
push
out
test
push
xchg
out
xchg
mov
push
mov
in
cltd
sub
xchg
xor
cmpsl
mov
cmp
and
mov
mov
call
jg
xchg
push
mov
jp
out
push
jnp
in
xchg
divl
jmp
cmpsl
rcr
jg
std
xchg
imulb
js
jb
fistl
xor
imul
jae
test
leave
dec
jge
xlat
dec
jmp
jg
push
add
stos
push
and
sti
cs
out
xor
push
ret
ret
mov
out
out
aas
cmp
push
call
lods
pop
xchg
ja
inc
in
cli
mov
pop
inc
shrb
and
cmp
xor
jae
mov
dec
mov
pushf
dec
pusha
in
cltd
xchg
leave
daa
adc
decb
cmp
xor
insb
sbbb
jl
push
sub
lods
add
out
icebp
jne
std
subl
cld
xchg
mov
inc
mov
movsl
or
cmpsb
push
aad
push
ds
movsl
shll
jmp
xlat
imul
xchg
inc
xchg
shrl
std
xchg
addl
dec
cmpsb
stc
dec
shlb
jle
aad
jne
push
jb
cltd
in
push
and
pop
mov
in
jb
jg
ja
or
inc
int3
ds
cmp
push
out
aas
sub
ja
xchg
scas
sub
add
rcrl
shll
xlat
xchg
xor
adc
mov
jp
inc
out
mov
mov
scas
add
shrl
pop
mov
dec
jl
mov
jecxz
mov
scas
xchg
loopne
or
inc
aam
push
push
fistps
cmc
lock
mov
pop
pop
out
int3
subl
cmp
xchg
ror
std
shl
fsubr
sub
insl
pop
pop
test
dec
popa
inc
jge
mov
cli
pop
lret
sti
das
in
mov
das
in
repnz
xchg
dec
std
sbb
push
mov
inc
jmp
inc
cmp
xchg
xchg
pop
insl
mov
xchg
xchg
in
jae
es
sub
pop
call
dec
jecxz
ja
xlat
cmpsl
pusha
xlat
mov
inc
inc
push
push
dec
xlat
dec
sahf
adc
popf
mov
test
movsb
popf
loop
cmp
jb
aas
and
fdivs
inc
lea
ss
push
aam
into
aam
lret
ss
mov
jmp
jp
pusha
or
or
cmp
fidivs
cmp
push
xor
stc
popf
jl,pt
shlb
pop
das
and
xor
loop
je
inc
cmp
xor
into
dec
and
arpl
sarl
push
push
jge
mov
repnz
lcall
xchg
ljmp
or
ss
xchg
test
push
mov
pusha
insl
dec
add
mov
jecxz
sarb
mov
enter
jge
je
xor
ljmp
int
repz
pop
sub
inc
stos
jbe
inc
add
js
ror
cmp
cmp
add
jnp
mov
mov
int
jns
in
mov
xor
call
hlt
aad
or
repnz
cmp
movsb
out
das
scas
hlt
arpl
lods
out
sub
movsl
test
mov
mov
jns
clc
mov
mov
mov
pop
sbb
push
jae
xor
jns
cmp
scas
scas
jnp
mov
lahf
jmp
fsub
push
inc
sub
push
sub
xor
mov
lret
ret
dec
lret
outsb
shrl
sub
and
es
adc
pop
mov
inc
lds
in
cmpsl
push
ds
xor
mov
aas
push
xor
pop
cmp
pop
xchg
and
xchg
sbb
mov
mov
lods
ret
dec
test
adc
sbbb
and
orps
in
sahf
sub
in
jecxz
xor
cmpsl
push
incb
jg
xchg
push
fwait
mov
xchg
test
stc
aam
lea
pushf
pusha
mov
orl
adc
fwait
cmp
pop
mov
fmuls
sub
pusha
dec
test
repz
shl
scas
cli
repnz
mov
inc
dec
dec
or
push
stc
jb
rcr
dec
dec
inc
and
adc
push
outsl
shr
mov
aaa
inc
xchg
xlat
scas
adc
jl
mov
mov
sub
mov
push
jge
pop
adc
jae
mov
mov
in
dec
outsl
sbb
push
repnz
lcall
add
inc
int
stc
movsl
lock
fildll
stos
cwtl
out
push
sub
fs
inc
lock
call
mov
loopne
jp
aad
mov
aaa
mov
subl
pop
lds
fsubs
cmpsb
je
adcb
stos
in
jns
cld
xchg
cmp
mov
xor
lret
out
insb
xchg
push
cmc
in
add
pop
jns
sahf
inc
xor
js
pop
pop
cmp
imul
xchg
cmc
arpl
lods
add
call
inc
ficomps
enter
jb
pop
clc
std
std
mov
xlat
pop
lods
mov
pop
inc
pop
jne
adc
les
xor
xchg
push
out
or
push
sti
rclb
int3
xchg
fnsave
cltd
int3
rclb
imul
mov
adc
cmp
xchg
jge
aas
xchg
or
popl
notl
pop
xchg
dec
stos
mov
call
mov
fists
sbbb
outsb
add
and
leave
dec
jns
xor
jne
inc
or
fimuls
iret
cmp
sub
cmpsb
dec
push
pop
push
mov
popf
or
sub
icebp
fdivrl
xchg
inc
cmp
in
stos
sub
stos
jnp
call
or
or
jg
and
sub
jno
xor
add
lahf
xchg
mov
leave
jp
cmp
inc
sub
mov
fistl
sbbb
test
mov
js
filds
push
jl
sti
or
xchg
push
pop
inc
leave
xchg
sub
ret
cmp
fdiv
ret
aam
mov
push
test
mov
inc
sbbl
fsubs
xor
es
sbb
ret
movl
add
cltd
mov
push
lea
xor
xchg
sub
es
fs
mov
mov
push
mov
iret
inc
jnp
sarb
lea
lahf
and
xor
fwait
push
jno
loope
out
subb
aam
mov
xor
jbe
and
and
adc
xchg
mov
add
inc
jae
pop
mov
pop
sbb
cmc
push
shl
dec
insl
pop
fstpt
mov
outsb
pop
mov
sub
imul
subb
leave
rcrb
das
cmp
sub
das
dec
jno
lahf
fldl2e
nop
scas
sbb
out
pop
inc
lods
cmp
int
push
adcl
cli
cltd
ret
cmp
imul
ret
test
ficomps
cmp
inc
jp
xor
jnp
roll
pusha
jmp
xchg
loope
xchg
shlb
addr16
and
mov
aas
pop
fwait
and
adc
pop
lock
inc
aas
testl
ret
cmpsb
pushf
pop
push
cmp
xchg
and
addr16
lock
xor
lcall
dec
rcrl
sub
inc
mov
sub
repnz
les
dec
inc
addr16
lea
js
movsb
mov
pop
out
mov
fldcw
jnp
dec
jp
fcmovbe
cltd
inc
adc
jne
out
clc
dec
xchg
cmp
cmp
mov
lds
lahf
mov
inc
fistpl
iret
jbe
fldl2e
scas
loopne
das
mov
or
aaa
adc
cmp
insb
and
mov
loopne
repnz
lret
dec
add
mov
nop
dec
cmpsl
loop
shlb
lods
imul
daa
test
adc
pop
adc
mov
das
push
call
and
mov
pop
xlat
mov
xor
push
repz
pop
es
aaa
gs
lods
push
or
repnz
fs
pushf
cmp
cmp
lret
lahf
pop
fldl2e
add
in
andb
mov
fdivr
insl
inc
push
jne
sub
lahf
ret
into
ret
sbbl
mov
ljmp
cs
outsl
mov
push
insb
mov
ret
subb
fwait
popa
clc
insl
mov
push
inc
dec
xchg
jbe
hlt
sbb
pusha
cmp
lcall
xchg
out
sbb
adc
cmpsb
sbb
addr16
fcoml
mov
ljmp
jmp
mov
adc
je
pop
push
test
arpl
xor
je
cmp
lret
jno
mov
jge
dec
fldenv
dec
and
jbe
mov
inc
inc
add
in
sarb
push
lcall
xor
cld
xchg
jns
fs
into
cwtl
insl
dec
xchg
mov
in
sbb
idivb
lods
add
or
lea
mov
imul
mov
push
pop
inc
int3
pop
add
adc
nop
fdivl
mov
sbb
dec
mov
xor
pop
mov
mov
add
jge
adc
roll
mov
pusha
add
pop
push
lahf
and
outsb
cmpb
mov
xor
inc
notl
rcrl
jg
in
ret
jg
dec
cmp
jl
loope
ficomps
xchg
push
popf
mov
inc
incb
or
jno
or
xlat
mov
stos
xchg
push
pop
sbb
roll
int3
sar
aam
cmp
or
mov
lock
xchg
jns
inc
outsl
aaa
mov
in
aam
fwait
xlat
xlat
xor
into
mov
lcall
lahf
ret
sub
push
pop
test
vmulps
cltd
aaa
cmpsl
dec
scas
movsl
les
adc
je
scas
mov
test
shrb
push
and
test
mov
mov
aam
xchg
sub
jno
lea
mov
add
mov
sti
int3
ljmp
sub
mov
push
loope
sbb
mov
imul
inc
das
mov
pop
nop
inc
cwtl
les
xor
cmp
sbb
mov
jno
xchg
shlb
rorl
mov
push
mov
out
jbe
cwtl
stc
testb
fsts
out
adc
pop
mov
inc
mov
pop
stos
addl
cmp
xchg
fwait
ss
shr
sub
icebp
xorb
mov
inc
cmp
and
movsb
icebp
mov
pop
push
out
rcrb
jp
sbb
pushf
push
sub
cmp
mov
jle
lock
ljmp
sbb
stc
or
sbb
lods
pusha
stc
inc
jb
sahf
pop
ja
bound
clc
int
or
sbbb
imul
sbb
xchg
or
xchg
add
in
jg
mov
or
popa
jecxz
aas
pop
jp
mov
leave
xchg
and
fwait
push
sub
cmc
dec
adc
out
push
repnz
lods
xchg
fidivrl
movsb
int
scas
mov
and
fdivrs
cwtl
adc
mov
pushf
addr16
mov
jge
shrb
pop
fsubl
push
orb
dec
loopne
xchg
out
imul
inc
jne
jno
push
xor
jge
push
pop
inc
mov
cmp
lret
in
adc
andl
push
xchg
ss
push
push
cltd
sbb
inc
ss
xor
jno
out
imul
sarb
testb
mov
add
daa
jnp
arpl
pop
lea
jb
jne
push
jae
outsl
pop
int
lret
or
jae
push
stos
jbe
notb
pop
in
inc
mov
inc
mov
adc
mov
js
pop
dec
fwait
push
int
rcll
inc
push
test
mov
loop
out
jno
das
xchg
mov
mov
icebp
imul
mov
xchg
push
xor
fsub
loope
daa
push
or
sub
push
bound
jb
jecxz
xchg
mov
std
jle
xor
cmp
or
imul
push
push
cltd
shl
fstl
jno
cld
adc
fs
popf
fdivrl
pop
nop
adc
jmp
sar
mov
add
cli
lahf
inc
gs
xchg
negb
jg
std
sahf
or
add
shll
shlb
js
sbb
int
adc
mov
fs
xor
add
std
pop
inc
push
push
flds
into
xchg
fstps
cmpsl
int3
mov
cltd
and
aas
ret
jbe
dec
sbb
lret
out
lock
rcrl
lcall
jae
dec
mov
dec
aad
sbb
xor
sub
mov
xchg
addr16
lea
inc
sahf
pop
arpl
ja
inc
in
or
in
jno
lret
xchg
movsl
add
fs
mov
cld
xchg
add
addl
not
adc
pushw
in
or
ja
dec
jg
and
aaa
fwait
and
fwait
int
push
mov
xchg
jge
cmpsb
imul
leave
mov
xchg
aad
lods
jae
repz
cltd
sub
sbb
sbb
jle
out
push
cmc
lods
jle
add
je
push
adc
mov
sub
dec
mov
sbb
cmp
add
dec
mov
inc
pop
mov
cltd
nop
addr16
and
test
and
cmp
loope
jmp
cmp
push
aad
in
mov
add
test
jbe
dec
or
cmp
in
push
mov
jle
mov
cmp
popf
xchg
xor
aas
push
pop
arpl
cmpsl
clc
fwait
jp
in
pop
jge
gs
cwtl
lods
cmc
push
sub
scas
push
scas
jmp
pop
out
scas
arpl
orb
in
ljmp
ljmp
inc
push
sbb
movsb
adc
adc
jb
add
nop
mov
pop
jbe
mov
test
daa
outsl
mov
sbb
cmp
dec
daa
mov
fwait
or
test
mov
addl
sub
jecxz
in
repnz
jle
lret
xor
std
mov
fst
lods
jns
xchg
repnz
fcmovnu
sub
jge
sahf
stc
out
dec
stc
dec
stos
call
sbb
pop
or
and
out
mov
out
roll
psllw
sbb
cmp
pop
adc
js
inc
out
and
mov
mov
mov
adc
das
sbb
fwait
inc
push
cmpsl
mov
filds
test
lods
lods
out
xchg
jp
cltd
xchg
call
outsb
mov
adc
loope
xchg
mov
cmpb
cs
inc
mov
cmp
call
int3
repnz
mov
sbb
mov
repz
neg
repnz
clc
jl
push
push
sbb
sbb
data16
fisubs
je
add
cmpsb
push
inc
jb
icebp
into
adc
adc
add
arpl
jbe
idivl
dec
outsl
rorl
sub
sub
imul
les
inc
movsb
lock
ret
pop
cmp
mov
xor
vmread
js
mov
loop
outsl
push
sbb
sub
dec
jg
out
mov
aas
dec
loopne
clc
cli
outsb
pop
test
inc
pop
shll
int
out
mov
cwtl
push
mov
test
pop
and
pop
xchg
mov
or
stos
lret
addr16
out
mov
sub
movsl
dec
lock
mov
sbb
adc
outsl
cwtl
aad
sti
mov
scas
mov
sub
fmull
lods
adc
ja
mov
pop
xchg
mov
xchg
outsl
out
cmc
gs
push
mov
movsl
sti
ljmp
rclb
lret
mov
xchg
cmp
inc
stos
je
outsb
pop
push
and
lock
or
rorl
pushf
test
out
aaa
enter
fwait
mov
cwtl
add
jecxz
jge
xor
mov
clc
jge
insl
add
jnp
loopne
in
imul
sbb
add
sub
fcomps
jl
jbe
andb
sub
pop
push
fildll
and
or
mov
outsb
incl
or
dec
mov
push
scas
aas
daa
push
or
je
xor
xlat
in
xchg
nop
test
scas
mov
xchg
scas
test
cmp
inc
in
lret
stc
bnd
shlb
mov
mov
std
pop
aad
pop
std
or
or
push
outsb
or
jecxz
nop
dec
ds
daa
mov
cli
inc
jns
in
jnp
mov
mov
cwtl
cmp
jl
add
adc
xchg
xor
adc
inc
mov
xor
test
popf
out
out
mov
bound
cld
mov
push
mov
notl
xchg
rolb
push
fistps
test
ds
xchg
jg
fs
push
and
faddl
incb
jo
mov
outsl
mov
fs
push
test
ja
fdivl
pushf
cld
sub
decb
xor
mov
sub
out
sub
add
mov
hlt
lds
loopne
gs
mov
dec
xor
sub
sub
push
jno
or
jb
xor
jnp
sub
and
jge
ffreep
in
addl
cli
pop
push
mov
arpl
aad
push
sub
pop
rcrl
mov
xchg
and
pop
jbe
or
xchg
sbb
dec
test
jae
dec
sahf
lods
sub
jnp
movsb
stos
out
adc
xor
cwtl
lahf
les
int
mul
sar
movsb
xchg
fld
cmpsb
test
xor
jle
xchg
lret
imul
add
mov
fstp
cmp
in
and
mov
cmpsl
or
jb
xchg
out
in
mov
adc
push
rcr
cmp
ds
xchg
or
mov
pop
inc
in
iret
pop
cwtl
push
lods
jp
pop
xchg
scas
jbe
sbb
mov
arpl
out
cmp
in
mov
lods
mov
imul
push
xor
adc
or
das
mov
mov
sti
ss
jecxz
jae
into
mov
cmp
arpl
outsb
orl
imul
imul
dec
mov
mov
dec
or
jl
and
cmp
das
stc
mov
mov
adc
cmpsl
sbb
xchg
and
mov
dec
test
and
shr
lea
loopne
test
xor
je
mov
push
das
xchg
pop
xchg
popa
or
or
push
sub
jae
mov
pop
add
outsb
outsb
inc
cmpsb
cmp
xchg
or
mov
lret
int3
cmpsb
loopne
int
jecxz
out
inc
push
sub
movsb
jae
loop
jle
aad
sub
pop
mov
pop
loopne
shr
mov
dec
dec
cmp
pop
test
dec
push
inc
loopne
popf
subb
add
fs
jmp
xlat
lock
call
imul
movsb
lods
into
or
fcmovnb
push
add
imulw
hlt
leave
ja
add
pop
fistl
test
addr16
lret
popf
dec
ss
loope
popa
mov
testb
jnp
dec
cmp
adc
loop
iret
aas
sahf
mov
jne
xchg
inc
sbb
insb
or
adc
pushf
mov
ds
std
out
adc
aas
or
rcl
lea
pop
test
jo
loop
xchg
xchg
fidivl
cli
xchg
xor
scas
adc
scas
inc
sbb
cmpl
xchg
ljmp
mov
xchg
dec
ficoms
shlb
mov
xchg
dec
lret
xchg
push
sbbl
dec
shrb
add
pop
adc
adc
pop
rorl
iret
push
insb
aad
push
adc
cmc
push
movsl
sbb
jecxz
cmpsl
xchg
mov
fs
jbe
mov
lahf
xchg
lods
ja
sbb
mov
jmp
adc
pop
fs
loopne
cltd
lods
cmp
int3
nop
ljmp
call
jns
scas
add
insb
aam
aaa
xorb
push
mov
stos
dec
xchg
inc
loope
rorb
pop
mov
add
incb
pop
add
xchg
es
ss
popf
test
push
shl
push
jnp
adc
inc
xchg
dec
mov
ficomps
lock
pop
pop
adc
xchg
mov
mov
in
or
sub
sbb
xchg
jo
loope
daa
aas
clc
dec
je
jns
fs
sahf
mov
mov
aas
xchg
mov
xchg
inc
mov
mov
out
sbb
cmp
lods
scas
jne
pop
mov
jg
and
int
add
leave
xor
lods
test
push
jns
or
call
mov
out
and
in
or
out
cwtl
in
and
out
xlat
mov
aad
or
stos
shl
gs
and
js
sbb
fbstp
js
and
xor
cltd
push
cmc
sub
not
fbstp
iret
je
mov
lahf
push
jl
pop
xchg
lcall
adc
cli
aad
sub
movsb
loopne
or
push
cmp
outsl
jmp
insb
in
in
into
push
lods
push
mov
and
pop
add
mov
dec
imull
dec
and
test
sub
pop
add
mov
jmp
adc
mov
xchg
pop
icebp
fnsave
jecxz
xchg
xor
bound
cmp
js
leave
shlb
pop
hlt
jae
out
decl
sbb
mov
hlt
and
xor
inc
js
inc
insb
cmp
loopne
out
decl
fs
push
out
pop
not
and
in
or
jae
dec
aaa
and
sub
sub
or
sbb
pusha
outsb
sbb
adcl
xchg
xor
mov
aas
jns
jge
and
jb
andb
and
cwtl
sahf
cld
outsl
pop
xor
dec
fsts
lods
inc
notl
push
push
mov
add
jb
jmp
mov
fsts
in
in
sahf
arpl
cli
stos
mov
mov
jmp
repz
mov
and
xor
and
out
xor
push
popa
add
sti
in
ljmp
gs
lods
cltd
add
int3
xchg
sbb
xor
push
fdivl
jmp
jb
push
push
push
dec
out
loopne
cwtl
sbb
subl
sub
clc
sbb
jno
out
ja
out
ret
and
cli
dec
sbb
mov
call
ja
out
lcall
andb
stc
loope
pop
bound
mov
sub
leave
lret
notl
dec
sub
or
and
loopne
pop
movsl
std
add
xor
and
cmpsb
mov
mov
js
daa
mov
iret
pop
adc
jbe
clc
mov
int3
out
sti
dec
add
frstor
mov
rcll
cmp
ljmp
fistl
scas
int
xchg
mov
das
lcall
aaa
cld
jecxz
mov
loop
xor
xchg
mov
pop
hlt
clc
push
xchg
clc
sbb
loop
cld
sub
notl
gs
xchg
mov
aam
pop
dec
xor
loopne
or
daa
insl
jae
into
aam
sub
repnz
es
leave
sarb
mov
sti
push
gs
shll
and
mov
fisttpl
xor
js,pn
adc
hlt
rcll
add
stos
lret
adc
fnstenv
jmp
daa
push
pushf
loopne
dec
xor
dec
mov
jge
mov
sbb
push
sbb
lods
cmp
jg
cmp
out
fld1
sbb
pop
shll
shll
pop
jns
sub
mov
rcrl
jnp
ljmp
popa
clc
in
in
ret
dec
sub
int3
mov
push
dec
push
mov
or
sarl
jp
push
sub
pop
push
lods
clc
add
int3
ret
push
inc
mov
xchg
mov
mov
gs
fisubl
sahf
mov
pop
gs
push
sbbb
mov
sbb
enter
jg
mov
fstpt
sbb
lret
inc
adc
aam
insl
jmp
jns
mov
lahf
jo
inc
sub
pop
test
mov
mov
lahf
popa
in
sbb
iret
xchg
in
imul
mov
mov
rclb
sub
iret
dec
js
sahf
xchg
push
addb
jno
xor
test
mov
lods
xor
lcall
outsb
lahf
hlt
xor
xchg
cltd
cmp
xchg
jl
stc
test
add
aam
flds
xor
pop
and
inc
arpl
or
out
into
cwtl
push
push
sbb
push
or
cs
fistl
pusha
lret
outsl
stos
sahf
xlat
sbb
mov
xor
pop
stos
push
sub
andb
cmp
jbe
iret
enter
lock
push
cmp
sahf
lock
cmpsl
push
out
jmp
lods
lcall
xchg
and
xchg
out
inc
lret
and
js
dec
xchg
xor
fidivl
dec
lods
in
mov
sub
push
test
push
aas
ds
or
mov
aaa
mov
inc
loop
lods
test
adc
aam
jo
inc
pop
out
call
pop
out
pop
xor
dec
dec
adc
pushf
sbb
dec
es
divb
mov
add
addr16
dec
cmp
or
jb
dec
inc
sub
xor
cld
xchg
mov
or
sbb
test
xor
xor
popl
in
jecxz
loopne
pop
push
cmpsb
stos
fs
or
cmpsl
push
mov
dec
mov
sbb
aas
into
adc
fbld
leave
inc
lret
or
fists
sbb
inc
push
lret
stc
inc
jl
adc
and
sahf
je
cmp
cwtl
loope
dec
aad
adc
fisttpll
repz
sarl
out
push
sub
adc
add
sahf
mov
ret
sbbl
clc
outsl
dec
dec
pop
push
fwait
push
clc
lods
push
sbb
negb
sub
and
mov
lock
push
pop
add
movb
mov
lea
mov
aam
inc
add
push
addr16
xor
mov
std
mov
pop
lds
sbb
pop
loop
push
lahf
xor
cmp
sarl
sbb
jmp
lods
popf
mov
mov
push
or
adc
dec
cmp
jbe
les
xchg
cmpsb
adc
xchg
sub
sub
sbb
mov
cltd
out
mov
pop
je
mov
sbb
call
aad
mov
dec
in
jbe
test
stc
movsb
popf
in
lahf
jp
inc
xchg
int3
mov
icebp
cmc
xchg
dec
test
mov
and
add
andl
sub
cmp
pop
lock
andb
lahf
inc
mov
cmp
aaa
jns
mov
cmp
addr16
inc
icebp
jmp
shl
mov
mov
push
out
xchg
inc
fwait
jb
mov
mov
fisubrl
ja
xchg
std
and
movsl
mov
popf
arpl
mov
cmpb
cmp
push
mov
jne
aaa
mov
mov
shll
aad
mov
call
fisubrs
iret
dec
adc
shlb
jg
jg
xchg
lcall
dec
adc
xor
xchg
fsubl
and
pop
mov
push
addr16
jmp
shrb
mov
data16
push
int
lret
fwait
fs
inc
es
jno
jb
push
es
mov
es
mov
jno
sbb
and
add
dec
cs
aam
xor
pop
push
inc
xor
iret
pop
movsb
iret
mov
mov
sub
movsb
clc
sub
mov
cmc
lcall
or
sbb
fs
pop
sub
mov
push
imul
in
test
inc
inc
sub
mov
inc
xchg
je
add
js
xchg
push
lea
xlat
push
add
cwtl
lods
rclb
mov
sbb
popf
sbb
cld
jmp
std
sbb
fbstp
jge
popa
inc
inc
movsl
loope
dec
stos
cmpsb
aam
push
dec
xor
test
dec
cwtl
sub
or
fldenv
sub
pop
loopne
xor
mov
and
push
pushf
cmp
lretw
sub
sbb
dec
mov
xchg
push
jo
mov
sub
mov
jne
push
into
negl
cli
movsb
leave
lcall
push
mov
dec
lret
imul
sub
or
dec
cmpsb
xchg
ljmp
outsb
cmp
loop
mov
ds
pop
sbb
mov
push
xchg
dec
lock
dec
sub
std
imul
cwtl
xchg
sub
aam
xor
movsb
xchg
rcrl
push
dec
fistpll
mov
movsl
xor
sub
mul
cmp
push
je
scas
and
cmc
mov
sbb
inc
xchg
mov
sbb
xchg
push
sbb
out
imul
aam
mov
ljmp
test
push
pop
sub
inc
fmuls
push
sbb
ret
fwait
mov
insb
push
int
fidivs
pop
lods
dec
xchg
push
lea
push
lea
es
scas
cmp
pop
adc
push
stos
fwait
ret
xchg
xchg
xchg
mov
xor
int3
sahf
enter
leave
lods
fs
mov
jle
sbb
addr16
inc
test
shll
sub
cmp
cltd
sub
aas
sahf
jnp
out
daa
or
or
ds
and
decb
and
loop
aad
pop
jne
jmp
mov
imul
inc
push
mov
xchg
push
add
repz
jb
push
lock
fdivrp
inc
mov
xchg
je
adc
add
stc
outsb
loop
lea
movsl
popa
pusha
jmp
sbb
imul
out
cmp
xor
insl
mov
sbb
pop
xchg
sub
jmp
cltd
push
int3
andb
adc
arpl
push
cmp
jns
pop
je
push
shll
shl
mov
lock
popw
ljmp
lret
fs
fldl
imul
xchg
ljmp
imul
in
inc
mov
lods
mov
int
push
es
js
bound
pushf
rcrb
xor
xchg
int
sbb
mov
hlt
stos
cmp
lret
dec
sbb
push
sti
cmc
in
and
testb
orl
lock
push
jg
std
repnz
mov
cs
cmp
pop
aam
ds
fdivs
clc
xchg
cmpsl
push
ds
add
orl
cmpsb
jge
push
ss
add
or
and
je
push
mov
cmpb
jle
xor
enter
adc
sti
inc
repnz
xchg
test
pop
push
sbb
fbld
xchg
xchg
fdivl
sbb
fwait
mov
xchg
mov
cltd
inc
sub
aad
xor
and
ss
mov
mov
mov
pop
dec
ss
xor
cmc
mov
sbb
mov
cwtl
jecxz
jl
ljmp
gs
daa
imul
pop
sbb
lods
mov
mov
pop
negb
fisubs
imul
dec
and
sub
xchg
or
mov
pop
mov
jbe
stos
adc
lds
add
add
aad
aas
insb
xchg
aam
mov
push
cmp
push
or
push
ret
push
xor
pop
sub
cld
pop
sbb
fldl
aad
js
mov
fsubrl
repz
jbe
mov
sbbb
and
pop
mov
jmp
test
scas
cmp
popa
es
scas
rcll
mov
les
vorps
jge
setb
cmc
mov
int3
sti
and
in
mov
mov
jbe
pop
mov
stos
outsl
and
xchg
pop
movsl
loope
arpl
cmp
lret
out
dec
mov
xor
movb
pushf
mov
lock
dec
jns
std
and
outsb
aaa
cmp
mov
cmpsb
and
push
xchg
cmpsb
pushf
sbb
add
and
ss
ret
cmpl
popa
orb
orl
in
les
mov
cmp
sub
je
das
aas
gs
xor
rcrl
xchg
pop
adc
pop
or
lock
jg
shrl
sarb
push
leave
and
push
mov
jp
or
iret
rcll
ljmp
fisubs
or
ss
and
inc
lock
mov
fcomps
imul
xor
or
xor
sbb
stos
mov
xor
mov
sti
je
test
repz
jae
cmovae
add
decl
imul
out
je
inc
rcrl
sbb
xchg
ds
sub
mov
out
gs
pusha
push
ret
xchg
fistpl
cmp
in
stos
in
mov
cwtl
xchg
xor
push
mov
mov
inc
shlb
and
pushf
fsub
sub
daa
dec
pop
fiaddl
lcall
loop
push
push
add
ds
test
mov
jo
xchg
lcall
mov
xor
sbb
mov
fnstcw
lock
push
push
dec
jmp
movsl
in
add
pop
jg
shll
xchg
movsl
mov
xchg
adc
jns
movsl
bnd
push
mov
scas
pop
in
jmp
mov
inc
ljmp
cli
daa
data16
mov
jmp
adc
jle
adc
pop
xor
xchg
push
push
test
loop
lcall
mov
fwait
out
ret
xchg
stos
adc
fcomps
mov
adc
jo
jmp
push
in
xchg
lds
lahf
jle
and
negb
movsl
xor
mov
lock
sub
mov
pop
jb
push
popf
bound
xchg
dec
add
shl
bound
add
jno
call
adcb
inc
out
jnp
pop
std
cli
mov
dec
std
cmpsl
sub
push
stos
rorl
cmp
inc
push
push
lret
sub
icebp
jp
mov
scas
rclb
xor
xor
stc
shrb
pop
fisubs
in
cs
pop
fstps
ret
cwtl
xchg
subl
sahf
cwtl
int3
mov
leave
bound
stc
out
gs
or
popa
sub
jecxz
mov
cld
lcall
xor
aaa
mov
xchg
add
xor
add
jg
imul
push
mov
mull
daa
mov
gs
lret
lret
imul
int3
and
fdivl
fcompl
test
lds
int3
testl
scas
xor
in
mov
sbb
push
pop
test
imul
dec
inc
rcpps
test
mov
out
out
mov
in
xor
loope
leave
mov
xchg
or
mov
fnstcw
aas
inc
std
jmp
call
shlb
imul
inc
mov
lret
and
int
idivl
jge
inc
push
or
mov
rorl
or
in
and
xchg
mov
sarl
fnstsw
sub
jae
dec
sti
or
bound
dec
lret
mov
mov
fwait
xorb
arpl
or
pop
mov
xor
test
dec
pop
dec
mov
adc
lods
pop
push
and
insl
xchg
xchg
in
pop
sbb
dec
jne
arpl
sub
sub
ss
test
xchg
addr16
adc
movsb
push
outsb
out
int3
mov
shll
or
inc
sub
notl
mov
dec
scas
pop
out
lret
inc
adc
adc
stos
lret
sbb
mov
testl
push
inc
cmp
and
pop
jnp
inc
sub
sbb
jns
cwtl
mov
pop
inc
ja
xchg
lods
aam
in
call
xchg
and
lahf
andb
insl
out
xchg
xchg
dec
jne
cli
inc
out
das
mov
adc
cltd
jmp
ror
push
jle
push
sub
in
aam
cmp
inc
and
add
aad
inc
jae
pushf
mov
sub
push
lcallw
cmpsb
and
jmp
or
mov
dec
cmp
mov
flds
dec
dec
je
mov
call
jb
test
outsl
and
xchg
bound
lds
push
sbb
lahf
fcoms
mov
push
fucomip
hlt
mov
cmc
sbb
aaa
popf
inc
subb
adc
xor
pop
add
std
pop
mov
js
add
scas
adc
jnp
shll
dec
mov
xor
sub
jge
loop
and
dec
jp
sub
mov
movsl
sarb
jle
xor
repz
es
lahf
pop
mov
ficoms
xor
xor
daa
mov
fstl
jl
dec
nop
pop
cld
cmp
and
fstl
dec
int
test
mov
outsl
mov
mov
inc
mov
outsb
int
lret
xor
cmp
push
dec
cmp
orl
sbb
shrb
sahf
xchg
push
sbb
fldt
cmp
add
mov
dec
icebp
test
scas
xchg
rcr
dec
ret
std
cld
cmpsl
ret
stc
fstpt
lret
xor
cli
cmpsl
mov
jo
out
pop
pop
data16
inc
inc
loopne
lods
sahf
or
orb
loopne
add
cltd
les
lods
cmp
jl
fildll
mov
jmp
pop
ss
mov
add
imul
mov
aam
sub
sbb
decl
pop
icebp
nop
jg
jbe
jne
xchg
out
cli
or
jnp
popf
fdivrp
dec
movsl
lods
scas
lock
pop
mov
mov
pop
mov
cld
daa
sar
ds
das
call
testb
std
sbb
push
sti
pop
mov
outsl
push
fildl
dec
pop
in
outsb
add
mov
dec
push
das
jae
mov
cmc
packssdw
in
outsb
jp
scas
fsub
add
sub
clc
iret
out
js
push
dec
jle
add
adc
test
out
xor
movsb
mov
add
imul
idiv
out
cmpsb
fwait
mov
pushf
cld
call
pop
fwait
cli
pushf
fildll
ret
ret
pop
addr16
idiv
and
jns
mov
inc
push
sti
loope
out
mov
fimuls
and
stc
test
incl
sub
repnz
jecxz
pop
fdiv
dec
adc
or
test
and
cli
lret
mov
jp
lret
dec
aad
push
fisubrl
je
lret
scas
add
sahf
push
icebp
lret
xor
lods
sbb
les
adc
add
or
ja
jecxz
sahf
xchg
jle
pop
mull
cmp
mov
add
lods
or
mov
pop
out
or
push
cwtl
and
fsqrt
and
xorl
insl
dec
sarb
xchg
lock
lahf
cmp
ljmp
adc
ja
jle
xchg
loop
popa
les
xchg
mov
xchg
xchg
mov
jo
push
and
dec
cmp
dec
jbe
out
dec
cmpsb
nop
fisttpl
adc
pop
roll
xchg
cmp
push
and
in
jg
push
daa
mov
cmp
mov
scas
out
inc
enter
jecxz
xor
movsl
std
les
mov
sub
cmpsl
or
outsb
mov
push
jno
mov
mulb
scas
jle
mov
out
add
or
ds
mov
popl
pop
push
add
out
psubsb
jb
mov
scas
popf
pop
jbe
push
mov
cmc
ret
xor
addr16
lock
mov
mov
inc
out
jne
sub
mov
ljmp
cmp
mov
shlb
iret
and
test
mov
mov
mov
mov
inc
push
ljmp
lock
mov
jg
fcomi
dec
shrb
out
std
lock
push
fidivrs
ss
fmuls
imul
in
mov
and
xchg
adc
jo
ja
stos
insb
lret
in
add
mov
push
mov
test
xor
cmp
mov
inc
jnp
jno
jmp
in
jne
xor
mov
sbb
icebp
popa
jecxz
lods
cli
xlat
fwait
movsb
out
mov
roll
pop
pop
pop
in
mov
in
inc
ja
fs
pop
imul
sub
xor
and
mov
cmc
ret
addb
jae
xchg
sbbb
jmp
jbe
mov
pop
call
outsb
jg
ret
adc
out
add
lock
or
lcall
sub
insb
inc
test
jp
inc
sub
fists
sbb
add
inc
cmc
addb
pop
nop
je
dec
call
lret
ds
mov
lahf
mov
int3
fs
sub
in
mov
push
pop
mov
xchg
sti
adc
jp
out
fabs
and
dec
sub
adc
cmp
lods
mov
inc
sub
subb
clc
sub
ret
or
sub
xchg
fnstsw
scas
jne
mov
mov
scas
clc
add
insl
xor
scas
push
inc
dec
mov
cmp
cmp
aaa
in
inc
call
sub
bound
and
xchg
fcomi
ljmp
mov
sbb
inc
cmp
mov
xlat
fstp
mov
jae
inc
dec
fcoms
mov
icebp
xlat
sbb
dec
and
adc
cwtl
sbb
aad
sti
fwait
pusha
mov
pop
cmp
jg
imul
ret
insb
adc
jg
pop
testl
fsubr
aam
lret
push
in
cwtl
mov
popf
cmpl
mov
jmp
xor
sbb
jns
inc
jo
adc
pop
adc
xor
pop
in
cmc
leave
mov
mov
dec
subb
jmp
mov
int3
loop
mov
and
inc
add
jmp
xor
ror
ror
stos
stc
pushf
add
orl
out
test
shlb
sub
or
fcmovbe
lock
mov
inc
or
int
fwait
movsb
out
fcompl
jmp
sti
lea
mov
fstps
cli
outsl
icebp
or
in
gs
cmp
jl
lods
aam
dec
add
pop
movsb
imul
fisttpl
sub
test
mov
lret
cmc
sub
mov
mov
scas
inc
repz
jbe
inc
pop
jle
in
xchg
leave
mov
pop
cltd
cli
lock
popl
js
and
xor
out
push
repnz
cs
inc
inc
int3
cmc
pop
lds
xchg
adc
mov
jg
and
sub
add
rol
xchg
mov
or
cmp
or
sbb
mov
test
or
cmpl
enter
pop
lods
jl
xor
xchg
pop
sub
cmpsl
cmpsb
pop
rolb
pop
xchg
addr16
mov
aam
lods
call
adc
enter
jo
xor
out
js
push
mov
xor
ja
jbe
inc
inc
push
cmp
jnp
or
or
sbb
das
jl
inc
es
inc
mov
sbb
and
pop
mov
xor
jp
sbb
imul
repz
push
xchg
push
fidivl
into
nop
sbb
popf
stc
sbb
nop
lods
pusha
ret
inc
incl
ss
inc
cmpsl
xor
int3
mov
pop
arpl
sub
popa
arpl
gs
adc
add
cmpsl
pop
icebp
or
sti
xchg
mov
adc
movsl
shl
dec
mov
shrl
es
jecxz
ret
loopne
jp
sub
popf
dec
jmp
outsl
addr16
cmpsl
pop
push
negb
cmc
loopne
and
out
mov
inc
adc
pop
cmp
sbb
cltd
enter
adc
xor
add
call
xor
test
push
mov
andl
ss
sbb
cmp
sbb
in
paddsb
add
mov
push
push
ret
out
jl
lret
sarl
mov
aas
inc
pusha
mov
dec
dec
lods
pop
into
test
jo
pop
sub
fildl
pop
push
add
sub
push
movsb
ret
andb
nop
xchg
pop
fs
shrl
adc
jp
fstpt
fwait
jbe
pop
xchg
mov
pushf
ljmp
push
mov
mov
cmp
clc
imul
and
sbb
aaa
xor
mov
dec
mov
adcl
cmp
push
or
or
dec
pop
xchg
push
adc
adc
lret
movl
test
mov
lods
adc
xchg
dec
pop
mov
or
xlat
rcll
ja
inc
cmp
pop
dec
add
adc
stc
psrld
cmpsl
sti
inc
or
dec
cmp
dec
cli
inc
out
dec
in
fsub
out
inc
repz
jecxz
xchg
inc
xchg
in
and
sarl
bound
add
in
or
sbb
js
mov
jg
mov
add
test
daa
out
add
mov
subb
out
mov
es
jmp
pop
cmp
insb
scas
shrl
rorb
dec
lock
add
sbb
push
fwait
sbb
nop
jne
and
fsubrl
sbb
imull
div
mov
sub
jecxz
mov
in
and
lods
add
mov
es
xor
pop
sbb
cli
or
sbb
je
mov
call
mov
jbe
dec
sarb
sbb
lcall
jb
fdivrp
xor
jne
pushf
stc
jae
out
stos
rorl
scas
idivl
xchg
popf
or
cmpb
push
dec
mov
mov
mov
xorl
jns
js
ret
xchg
pop
inc
push
js
pop
loopne
cmpsb
loopne
xchg
daa
add
dec
sbb
shll
lahf
xchg
fnsetpm(287
jp,pn
sub
mov
fsubrs
mov
mov
push
sti
popf
ret
js
scas
pushf
cmpsb
aas
subl
leave
rcrl
jne
mov
or
iret
shll
dec
mov
xchg
loop
div
scas
movsl
and
pushf
jbe
adc
push
cmpsl
iret
push
adc
adc
test
jge
mov
dec
mov
or
in
sahf
or
in
leave
mov
inc
xor
add
push
xchg
cmc
mov
aad
and
add
and
fs
sub
leave
xor
aas
xchg
xchg
or
xchg
inc
jo
fbld
cmp
inc
fldpi
dec
sbb
outsl
enter
pop
pop
pop
dec
and
movsl
or
lea
sbb
rcrl
cmp
loopne
mov
int3
mov
pop
or
popf
sbb
push
pop
stos
pop
adc
and
call
fadd
push
frstor
push
xor
aam
xlat
ds
data16
jge
push
sub
lcall
testb
inc
fidivs
sarl
lock
jbe
adc
fdivs
sub
and
pop
dec
or
push
add
int3
adc
mov
icebp
fldcw
jge
ja
jo
repnz
xchg
out
cmp
shrb
xchg
iret
dec
pop
in
xlat
push
push
popf
sbb
jns
stc
jle
or
insb
push
rorb
jecxz
inc
mov
cmpsl
mov
push
hlt
fidivl
rcrl
pusha
pop
or
negl
push
inc
daa
adc
das
sbb
and
scas
add
cmp
adc
lahf
xchg
sbb
cmp
jmp
ja
cltd
adc
mov
xchg
test
repz
mov
mov
xchg
jl
inc
or
scas
or
sub
dec
inc
or
sti
inc
repz
gs
xchg
and
test
scas
pop
inc
outsl
mov
stos
xchg
fiaddl
jne
cmovg
rcl
sub
jmp
pop
movsl
xor
cmp
in
fbstp
xchg
xchg
imul
daa
pop
and
cmc
movntq
js
outsb
adc
add
ret
out
lcall
mov
sahf
cmp
shll
xor
add
stc
pop
mov
call
add
pop
cltd
fisubrl
cli
clts
and
fsts
int
jecxz
mov
jnp
push
ficomps
mov
lods
and
and
addb
pop
inc
ja
add
in
and
pushf
fbstp
jne
xor
push
nop
out
mov
adcb
inc
lea
subb
lods
cmp
lcall
cmpsb
jecxz
fwait
dec
pop
shr
mov
daa
test
dec
fs
xor
mov
addb
and
mov
clc
notl
pushf
and
fsubrl
jmp
loopne
aas
or
jmp
mov
js
aad
xor
stos
test
loopne
fcompl
push
fwait
sub
pop
je
iret
out
mov
xchg
mov
and
fbstp
mov
enter
pop
bound
in
adc
outsb
push
or
out
stc
dec
addr16
mov
pop
mov
sbb
jns
mov
jns
lahf
stos
push
xlat
clc
fistpll
in
repnz
sub
jg
or
iret
fcomip
cwtl
ljmp
clc
push
cld
outsl
cmp
mov
xchg
in
jg
and
repnz
fcmove
cld
aam
jge
lock
inc
push
jl
pusha
mov
and
aaa
enter
jmp
ljmp
scas
mov
paddd
fcoms
ds
insb
inc
mov
les
jno
fstpl
outsl
cwtl
out
sbbl
cwtl
adc
lahf
aad
xor
sub
adc
adc
sbb
cmp
lret
shlb
divl
lahf
jp
ds
lret
xchg
test
push
and
pop
adc
enter
mov
test
les
jno
cmp
shrb
sbb
jae
mov
add
repz
ficoml
push
or
call
scas
sarb
push
cmpsb
xchg
in
dec
testb
cmpsb
add
mov
or
mov
jmp
leave
fwait
ljmp
scas
cmp
test
jg
jle
dec
iret
inc
mov
adc
adc
xchg
pop
adc
arpl
jo
cmp
dec
test
pop
xchg
push
andl
scas
mov
and
aam
out
jbe
fldcw
dec
nop
xor
mov
sarl
pop
inc
sub
fldt
stos
dec
scas
aaa
in
loope
mov
or
outsl
inc
xchg
push
shr
mov
sub
mov
xchg
mov
fildll
mov
int
out
lock
imull
pop
test
jmp
sbb
add
frstor
lcall
in
add
or
jbe
cmpsl
xor
mov
adc
adc
sub
loop
sarb
dec
ret
mov
ss
xchg
sbb
push
ss
pop
mov
lcall
dec
rorl
sub
mov
outsb
in
fs
lock
pop
ja
pusha
arpl
push
adc
lcall
inc
and
or
xor
inc
shlb
fwait
pushf
subb
inc
inc
mov
and
test
add
or
xchg
dec
pop
das
mov
hlt
fiaddl
data16
pop
mov
mov
insl
or
cmp
js
mov
inc
pusha
and
inc
dec
ficompl
popf
lock
popf
jns
cmpsl
add
popf
insl
cmp
sbb
ret
push
xlat
fistpll
inc
jp
sub
xchg
into
pushf
stc
xchg
decl
fdivr
shll
ds
pop
decl
xor
cmpsb
cwtl
lret
in
jg
vfnmsub231ss
pop
pop
xchg
mov
lahf
push
jnp
test
mov
dec
mov
mov
rcrl
test
sbb
dec
insl
push
das
pop
push
lcall
lcall
mov
popf
out
jge
push
push
stos
imul
aaa
fdivrp
jle
xor
sti
rep
lret
js
mov
jne
leave
cmp
adc
movsl
je
into
jp
adc
popf
loope
push
or
in
dec
pushf
adc
fwait
cmp
push
dec
ret
push
mov
pop
dec
mov
sub
mov
mov
mov
stos
and
cmp
lahf
insb
bound
out
dec
leave
fcompl
mov
pop
xchg
dec
pop
scas
dec
mov
xchg
add
xor
jle
dec
xchg
cld
fildll
mov
fistps
xchg
xchg
adc
xchg
daa
cmpl
ret
sbb
call
out
xlat
adc
in
enter
into
iret
jns
les
fisubrs
xchg
scas
out
push
xchg
adcl
mov
inc
lret
mov
mov
movups
loop
shl
in
mov
div
add
sbb
jg
subl
stos
dec
loop
push
scas
push
leave
jnp
fnstcw
cmp
xchg
lods
mov
mov
roll
mov
jg
popa
sbb
sbb
or
icebp
sti
mov
adcl
shlb
inc
movsb
jne
and
cmp
test
rol
in
pushf
push
bound
mov
xor
push
xchg
cmp
add
jnp
outsl
mov
add
imul
sti
xchg
inc
pop
mov
pop
xor
das
adc
inc
in
add
inc
jp
xchg
out
fwait
jae
nop
jnp
dec
fucom
fs
addr16
in
pop
movsb
xchg
sub
mov
popf
sti
ja
mov
inc
nop
pxor
ljmp
sbb
lods
sahf
sbb
ds
push
leave
mov
xor
mov
mov
push
mov
jne
repz
les
dec
mov
or
adc
mov
adc
repz
inc
aaa
daa
loopne
stos
jg
mov
repnz
test
xor
fildll
pushf
mov
fsubrl
scas
inc
mov
jnp
jno
aaa
sbb
in
and
ret
pop
add
test
jnp
and
push
lcall
out
lret
rcll
adc
mov
cwtl
jp
xchg
icebp
loop
dec
je
repz
fimuls
pop
mov
push
adc
shlb
xor
dec
lahf
lcall
aaa
push
pop
ja
pop
call
jno
mov
xchg
scas
inc
add
in
sbb
into
outsl
outsb
fs
jne
dec
inc
scas
adc
sbb
mov
sbb
inc
in
aam
rcrb
jns
or
lea
nop
int3
rclb
out
mov
dec
stos
icebp
out
fimuls
fs
xor
mov
mov
bound
std
daa
push
cmp
inc
dec
les
and
cmc
push
std
cli
jae
dec
inc
stos
and
cmp
sub
mov
push
mov
aas
ja
xor
popf
mov
cmc
stos
loope
lcall
lock
je
pushl
xor
jp
cmp
jmp
dec
scas
mov
jno
out
mov
add
pop
mov
iret
ljmp
sbb
int
mov
stos
push
cmp
adc
ficoml
jge
push
test
test
test
lock
hlt
imul
pop
mov
popf
mov
and
and
pop
cmpb
out
lds
loop
cltd
outsl
mov
sbb
adc
mov
xchg
xchg
inc
adc
mov
jne
fstpt
push
dec
test
js
cmp
out
out
adc
es
fidivs
cmc
dec
sbb
and
nop
xor
ds
mov
mov
outsl
sarl
or
out
cmp
xchg
jecxz
dec
push
jb
mov
push
lock
sub
ficoms
mov
dec
js,pt
cmp
lods
xchg
or
pop
loopne
xchg
or
xor
jb
aad
ja
push
mov
dec
test
pop
cmp
push
movsb
sbb
push
imul
in
xor
scas
repz
inc
jo
pop
in
test
idivl
and
addb
mov
fisubrs
adc
aas
shrb
dec
push
jnp
lret
jno
outsb
adc
pop
hlt
mov
ret
rclb
sar
sti
cmc
icebp
into
mov
and
bound
scas
outsl
pop
stos
jb
pop
push
push
jl
jl
addr16
flds
adc
out
testl
pop
scas
push
dec
cmp
mov
int3
repnz
out
sti
test
stos
mov
inc
xor
insl
test
or
and
push
inc
mov
cmp
jnp
cli
cs
lods
bound
in
xchg
das
mov
cmc
outsb
out
cs
aad
sbb
sbb
mov
pushf
sub
xchg
pop
pop
das
mov
adc
lret
push
cmpsb
mov
in
push
imul
cs
int
iret
mov
xchg
mov
shrb
ljmp
aas
xor
sbb
mov
cmp
pop
jno
call
fldl
lods
stos
xor
pushf
xchg
ja
and
test
mov
outsl
shlb
adc
loope
mov
adcb
je
fstpt
xchg
in
in
inc
sbb
imul
outsb
mov
mov
or
stos
daa
dec
dec
addr16
lret
iret
push
daa
lods
sub
cmp
lock
inc
sbb
in
cmp
imul
lods
mov
std
inc
mov
jno
ljmp
add
cmp
rcr
js
sbb
jmp
add
insb
in
popa
jmp
xor
loopne
mov
mov
mov
repnz
enter
addr16
loope
add
fcmovnu
stos
sub
mov
cmpsl
pop
in
jbe
lahf
lock
cli
scas
push
inc
jmp
orl
nop
cld
pusha
and
insb
or
gs
bound
add
xchg
jge
subb
push
addr16
add
fsubp
test
pop
fistpll
bnd
cvttps2pi
or
fs
in
add
sti
xor
add
js
xchg
xor
repnz
jg
mov
mov
xor
mov
mov
jno
cli
or
or
jo
push
sbbb
add
jge
out
sahf
xchg
jbe
mov
mov
fidivrl
pop
add
cli
int
int3
lds
cmp
push
mov
push
xor
test
and
js
stc
gs
push
mov
in
or
cmpsb
adc
cmp
cmp
inc
add
fcmovb
sbb
jge
cmp
movsb
leave
fiadds
push
testl
mov
jne
ret
add
rcrb
sbb
imul
loopne
stos
out
dec
cld
addps
or
xor
add
adc
into
mov
dec
push
aad
push
clc
leave
or
dec
lea
cmp
aad
fdivrl
fcoms
cmp
and
cmpsb
pop
jl
leave
addr16
mov
pop
jae
mov
leave
sbb
pop
mov
repnz
xchg
or
add
xor
in
jmp
inc
push
or
outsb
icebp
arpl
cmp
dec
mov
pop
sahf
jmp
lock
fcmovnb
xchg
mov
pop
xor
test
mov
add
mov
or
cmpsl
push
test
test
cmp
gs
dec
mov
adc
dec
mov
js,pt
xchg
dec
pop
je
sti
adc
mov
adc
mov
mov
adc
test
adc
jmp
pusha
adc
inc
es
mov
daa
push
insl
into
in
jo
and
xor
pop
dec
mov
mov
mov
test
icebp
inc
fsubrl
in
shll
or
push
fdiv
jnp
pusha
idivb
js
insb
repnz
jge
dec
ret
in
sub
inc
sti
xchg
scas
cmp
insl
pop
mov
incl
add
mov
pushf
sub
and
xor
cmp
fnstsw
xchg
jo
sbb
jp
mov
fistpl
or
das
mov
out
cld
loop
outsb
filds
pop
mov
jle
or
jg
sub
xor
out
jl
mov
mov
leave
loopne
lahf
xor
push
adc
xchg
arpl
push
sbb
outsl
dec
jb
fistps
push
push
rcll
pop
cwtl
xor
aaa
popf
dec
sub
xchg
push
mov
repnz
push
cmpsl
mov
sbb
jno
pop
ret
loope
fldcw
imul
lret
jmp
out
pop
add
loope
mov
pop
rorl
jmp
sti
jecxz
xchg
xorb
add
test
fstpt
pop
dec
adc
movsl
mov
adc
push
in
sti
or
aad
and
fxch
lcall
jmp
sti
loop
fdivrl
in
pop
popf
into
push
pop
fdivl
and
inc
push
push
in
xchg
xlat
and
and
icebp
mov
popf
fdivrl
mov
arpl
dec
enter
stos
dec
pushf
daa
lret
hlt
popl
push
or
fcoml
jo
dec
mov
arpl
mov
dec
cmc
lret
call
aaa
test
xor
mov
adc
and
push
stc
mov
popa
jecxz
arpl
js
outsl
cmpsl
mov
mov
ret
push
repnz
loope
push
jmp
inc
or
fdivp
and
out
in
adc
cmpsb
ret
adcb
imul
fdivrs
clc
mov
sbb
jmp
arpl
shrl
jl
cmp
out
xlat
push
mov
pop
into
push
outsb
sti
mov
fwait
mov
mov
and
mov
inc
int3
jbe
xlat
xor
lds
pop
mov
into
pop
fld
push
sarl
mov
idivb
inc
add
dec
sub
int
lods
mov
mov
mov
sub
inc
ret
xchg
mov
cmp
mov
jae
push
iret
out
arpl
cmp
add
lret
out
clc
jae,pn
cmc
add
push
pop
sti
movb
push
out
fcoms
mov
xchg
or
xchg
jns
dec
cmpsl
or
jb
ds
inc
dec
inc
cmp
xchg
sbb
or
and
and
jmp
sbb
dec
pop
mov
sbb
cmp
jg
adc
mov
lahf
imul
shl
insl
test
aas
scas
cmp
inc
hlt
mov
ljmp
in
popa
ret
sub
lds
mov
out
cmp
test
aam
or
mov
pop
pushf
fldcw
test
imul
repz
in
or
xor
ret
ljmp
pop
pushf
aas
stos
push
dec
adc
cwtl
pushf
sahf
shlb
add
mov
push
jb
xor
in
outsl
iret
or
adcl
sub
mov
mov
lea
xor
mov
test
je
pushw
mov
arpl
aaa
inc
push
push
push
mov
jmp
aad
or
push
or
xor
and
sahf
adc
hlt
adc
push
push
cltd
pop
fdivl
xor
inc
arpl
cmp
testl
adc
dec
mov
xor
orb
and
dec
test
adc
and
inc
sbb
pusha
pop
icebp
mov
cmpsb
dec
aas
movsl
push
mov
lods
pusha
mov
loope
repz
ljmp
or
or
jno
sub
rcl
ret
ljmp
dec
scas
push
rorl
aam
push
jns
cmp
addr16
jp
test
movsb
jnp
dec
mov
stos
and
int
mov
dec
lret
jne
xchg
pusha
and
cmp
sub
mov
das
mov
inc
outsl
insl
aad
mov
push
daa
mov
inc
dec
mov
imul
pop
hlt
pop
out
nop
imul
xchg
outsl
xor
mov
ror
push
sbbb
and
mov
fbld
loop,pt
sub
sbb
int
popf
xchg
jmp
push
cltd
daa
int3
ja
mov
push
mov
lods
idivb
ja
adc
xorb
test
jg
mov
ja
and
aas
inc
adc
divb
lods
add
cli
js
push
stos
jmp
sbb
jo
mov
cmpsb
ss
je
sarb
sbb
pop
jae
mov
cs
jnp
mov
sub
enter
sti
mov
movsb
inc
jnp
push
or
cwtl
scas
jne
cli
inc
movsl
out
mov
mov
push
jp
ret
cltd
or
xor
adc
insl
adc
and
addb
fisubs
pop
cmp
imul
js
fcmove
adc
push
lret
push
pop
insb
and
out
rcll
or
push
cmp
popf
sbb
sti
xor
lods
sub
sti
and
jge
push
xchg
aaa
mov
push
and
stc
and
inc
pop
inc
xchg
roll
sti
push
xchg
clc
mov
inc
mov
out
stos
in
ret
fimuls
push
aaa
fs
movsb
in
test
mov
mov
adc
insl
mov
inc
jp
push
push
ljmp
outsb
test
or
jno
jge
dec
push
fs
mov
nop
push
sbb
xchg
cltd
mov
repnz
xor
push
mov
popa
bound
bound
stc
mov
push
inc
js
jge
jmp
inc
xchg
out
cmp
jnp
pop
call
ret
and
int3
push
dec
xchg
jge
push
test
inc
and
and
ror
test
push
jns
loop
ds
and
xchg
pop
lret
ljmp
movsb
mov
inc
cli
mov
loopne
daa
jmp
jmp
outsb
sub
insb
jl
push
out
jle
lods
pop
sar
mov
lea
inc
mov
xchg
jmp
push
shlb
insb
xor
fisubl
test
xor
sub
rcrl
push
fnstsw
movsb
sub
sti
lock
mov
icebp
test
fmull
lahf
imul
aas
movsb
leave
inc
cli
or
pushl
mov
addl
mov
leave
ss
ret
cmp
push
out
dec
and
daa
or
mov
xor
pushf
in
jne
xor
es
add
push
arpl
push
jmp
repz
pop
adc
xor
pop
or
cmp
lds
and
nop
mov
sub
lret
and
jg
loop
clc
pusha
pop
push
lea
jbe
mov
pop
call
test
jp
lods
pushf
lret
pop
mov
jb
test
mov
stc
add
dec
subl
dec
sbb
cld
push
mov
or
xchg
iret
cli
xchg
cmp
iret
jl
mov
lock
sbb
daa
xchg
ljmp
movsb
or
mov
lcall
fwait
jg
lcall
mov
call
dec
int3
loop
or
jns
ja
lahf
adc
sti
lret
xchg
cmpsl
in
int3
inc
idivb
jmp
in
ret
stc
dec
pushf
dec
mov
out
bound
pop
pop
mov
xlat
mov
add
loopne
mov
dec
fiaddl
jmp
adc
mov
xor
dec
jg
ret
stc
and
stc
inc
pop
push
xchg
cmp
stos
fucomi
mov
repnz
fsubrs
xchg
jmp
add
loopne
hlt
dec
and
fisubs
in
scas
push
hlt
cmpsl
scas
sbb
sbb
or
cltd
xlat
sbb
and
stos
pop
sub
jb
adc
inc
pop
mov
mov
or
jne
pop
pop
loope,pn
mov
leave
or
xchg
testl
mov
mov
pop
xchg
xchg
adc
xchg
lcall
dec
nop
mov
mov
in
orl
xor
cs
sub
lret
sbb
lods
jmp
inc
mov
pop
add
movsb
or
pop
jae
lds
loope
jle
outsl
ljmp
xor
mov
mov
jno
pop
movsl
add
icebp
pop
cli
lret
jecxz
add
mov
imul
shll
xchg
stc
rcr
mov
push
adc
fdivrs
mov
adc
clc
mov
mov
pop
ja
cmp
mov
xchg
cmp
jno
mov
xor
fisttpll
sub
inc
mov
out
inc
negb
mov
fstps
or
xchg
cmpsl
push
push
and
lret
dec
bound
mov
adcl
mov
stos
push
imul
icebp
or
adc
in
xchg
push
or
xchg
fs
imulb
ret
bound
xchg
and
lahf
jbe
jo
mov
mov
cmp
lret
fdivrl
nop
sub
dec
out
mov
mov
notb
mov
push
and
out
or
movsb
imul
out
outsl
aas
negb
mov
clc
das
imul
mov
jp
and
push
cmp
cmp
cmp
mov
pop
in
jo
cmc
shlb
shl
fistpll
sbb
inc
dec
sbb
cmpsl
xchg
stos
xchg
fs
fs
shl
push
bnd
movsb
pop
push
jno
mov
xlat
je
loopne
popf
pop
mul
leave
xchg
rorl
arpl
xchg
pop
stos
insl
lahf
xor
sahf
or
test
or
cmp
std
int
rcrl
cld
and
hlt
push
jo
jo
imul
shrb
lock
or
add
int
cmpsb
cmp
add
mov
ret
fsubrs
xchg
push
es
jmp
mov
out
jmp
sbb
icebp
inc
movl
jo
cwtl
add
or
outsb
inc
iret
shll
into
repnz
push
js
xchg
fs
data16
cli
xor
xor
mov
or
rcrb
sarb
cwtl
data16
push
mov
adc
leave
fwait
pop
cmc
push
rcrl
dec
adc
ds
enter
fcmovb
mov
aam
or
xchg
mov
jle
and
mov
lea
jb
mov
push
psubsb
leave
in
jns
push
sar
in
ret
jmp
call
fisttpll
push
jecxz
dec
mov
xor
dec
lret
mov
call
jl
test
xchg
addr16
pop
inc
jge
call
inc
dec
fcmovbe
sti
movsb
mov
mov
divb
fsubrl
sub
adc
xchg
cmp
push
repz
or
jns
dec
mov
push
dec
hlt
dec
in
imul
imul
inc
mov
jns
lods
mov
jno
adc
call
outsl
inc
cmpsl
sub
addb
dec
xor
and
inc
jns
cmp
inc
xchg
cmp
cmpsl
loopne
inc
imul
jne
jae
arpl
mov
mov
mov
cld
sbb
xlat
sbb
or
ja
call
mov
pop
lods
xchg
pop
push
adc
lods
push
sub
jp
xor
lods
xchg
lods
xor
push
sahf
sub
add
repz
jbe
outsb
push
push
adcl
cwtl
aad
pop
mov
stos
shl
xor
push
hlt
xchg
aaa
xor
push
jns
sbbb
leave
mov
jmp
fidivl
inc
jecxz
xchg
cmpsl
push
inc
mov
xchg
pop
es
loop
pushf
mov
mov
push
int3
push
cmpsl
jns
push
jnp
xchg
xor
arpl
jmp
jge
adc
push
or
mov
jb
jno
sarl
loop
sbb
push
aad
xchg
ja
or
jno
ja
mov
lods
arpl
mov
faddp
cmp
push
sahf
push
scas
js
push
jmp
lock
push
pop
notb
loope
gs
sbb
ljmp
mov
mov
mov
stos
fsubl
dec
jge
test
xchg
leave
scas
sub
out
fdivr
divb
pop
push
test
cmp
test
xor
test
aaa
cmc
push
repnz
or
stos
outsl
pmullw
mov
in
popf
push
imul
ja
mov
jle
mov
orb
test
push
xor
in
ret
rorb
fwait
xchg
or
inc
xlat
push
sbb
push
mov
add
ds
out
sbb
cmp
mov
dec
or
inc
jle
add
fistps
ret
scas
movsb
out
enter
ljmp
dec
test
inc
dec
fildll
push
sbb
add
hlt
and
mov
mov
fwait
ja
push
fbld
loopne
mov
gs
jle
aaa
imul
pop
add
fs
jns
cmp
ja
push
dec
lods
stos
icebp
mov
mov
jbe
push
insb
jns
ja
or
test
mov
cmpsl
shlb
mov
pop
fs
pop
cmp
ficoml
xchg
cmp
jl
dec
enter
out
cmp
jns
movsb
jle
shrb
outsb
adc
addr16
dec
adc
sahf
imul
andl
lahf
aad
cmp
adc
dec
add
fistps
rolb
outsl
jne
and
dec
mov
push
bnd
and
sahf
add
cmp
int
popa
mov
mov
mov
movsl
leave
mov
leave
and
popa
addr16
stc
or
lret
movsb
sbb
test
pop
dec
fdivs
pop
dec
pop
inc
test
enter
push
mov
jg
sub
sub
jno
jmp
xchg
push
repz
bound
jp
sub
les
gs
loope
dec
jno
ds
mov
ljmp
dec
mov
fcom
js
push
enter
dec
andl
xchg
enter
mov
add
call
shrb
and
pop
dec
rol
ja
sbb
xchg
jmp
add
test
sarl
sub
sub
mov
fmull
sbb
xlat
sbb
in
fisubs
xor
rcr
in
push
inc
loop
fisttps
cmp
pop
pop
arpl
inc
jle
and
outsb
test
xchg
mov
ret
mov
psrlw
xchg
push
test
jmp
addb
jmp
loopne
iret
pop
mov
bound
bound
int3
pop
sub
or
add
inc
jl
adc
dec
mov
jo
fldt
xchg
fnstenv
outsl
scas
ret
sub
xchg
jl
xor
sub
sbb
pop
popa
leave
pushf
cmp
orb
adc
ret
shl
inc
shlb
push
add
out
testb
ljmp
push
jnp
stos
dec
imul
push
cli
aam
push
out
sbb
sbb
popa
fistl
in
lock
pushl
mov
mov
sbb
xor
pop
ljmp
pushf
cmp
sahf
pop
adc
push
mov
mov
mov
xchg
enter
aas
and
mov
ret
js
xor
push
dec
mov
mov
pop
pop
inc
iret
dec
sub
or
mov
lahf
das
add
push
fnsave
jecxz
push
mov
xlat
push
int3
inc
xlat
pop
pop
popa
cmpl
mov
sub
das
xchg
dec
aas
outsb
push
int
xchg
sbbb
pop
pop
pop
test
jns
mov
mov
aad
stos
xorb
loope
adc
fucompp
and
stos
xchg
bound
popf
shl
or
or
cmp
mov
arpl
je
or
sbb
mov
inc
ds
xorb
std
int
mov
jmp
jbe
movsl
loopnew
je
sub
fadds
sbb
mov
mov
cmpb
imulb
imul
shl
leave
fs
pop
popa
mov
xchg
inc
or
xor
lods
out
xchg
lcall
push
sub
inc
inc
aam
dec
cmp
sub
int
cmp
inc
pop
xorl
fdiv
xchg
or
incl
cld
enter
outsl
movsl
cmp
imul
insl
cltd
dec
add
xor
fistl
jl
and
in
jecxz
aaa
pop
jae
fdivrl
cli
mov
mov
mov
int
pusha
int3
and
mov
insb
mov
cmpsb
hlt
test
sbb
sbb
loop
sbb
xchg
push
jmp
mov
daa
sbb
inc
movsb
ljmp
into
mov
addl
ja
push
dec
adc
ja
push
mov
adc
jb
sbb
movsb
js
iret
scas
dec
pop
mov
add
xchg
pop
out
jecxz
xor
pop
addr16
jns
scas
stos
jl
sbb
sbb
rol
xor
fwait
loopne,pt
mov
sbb
in
test
decb
insb
ljmp
mov
int
and
testl
fwait
pop
in
xchg
lds
test
aas
inc
mov
xor
cmpb
inc
lret
and
sbb
pop
sub
mov
sbb
cmp
ja
pusha
xchg
shll
orl
jno
sub
clc
mov
add
inc
aas
jmp
pop
dec
mov
mov
shl
xchg
jg
adc
aad
xchg
jo
lahf
mov
or
scas
les
je
mov
fxch
filds
mov
mov
sub
out
mov
pop
adc
sarl
stos
jp
xor
sub
lods
inc
in
jmp
imulb
jo
data16
popa
sbb
mov
cmp
jle
pop
cld
popa
or
jle
js
sti
push
push
push
sub
fsubrs
mov
mov
sbb
repz
imul
outsb
inc
sbb
xchg
mov
aas
sub
scas
push
lahf
jbe
add
aad
mov
or
cmp
pop
int3
adc
push
xor
jle
mov
or
add
pop
btr
sbb
dec
mov
push
pop
sbb
ret
add
jae
iret
sub
test
xor
inc
and
test
scas
or
mov
push
test
mov
test
or
inc
inc
and
call
mov
mov
test
dec
ja
lcall
addr16
jno
dec
ret
or
jo
fisttpll
pop
jae
jbe
dec
jnp
mul
pushl
into
out
lea
test
add
rorl
lcall
or
jl
cld
xchg
mov
sub
repz
call
mov
push
mov
jecxz
mov
mov
mov
adc
push
sub
sbbb
notb
fldt
jb
jp
xor
inc
rol
ficoml
or
pop
test
lods
sub
xor
fldcw
pop
pop
jle
dec
dec
pop
or
daa
test
xor
push
xor
in
cld
divb
in
lock
sahf
lea
and
mov
std
mov
rclb
mov
xor
jo
push
rol
aad
pop
push
mov
adc
ffreep
scas
and
xor
push
jecxz
rep
push
ljmp
xor
call
imul
mov
pop
int
jge
xchg
dec
mov
cmc
sub
or
unpcklps
cmp
arpl
adc
jo
push
push
pop
jp
sbb
xchg
or
cmc
loop
lret
dec
out
loope
cmp
fwait
fs
add
mov
sbb
cmp
push
sbb
into
xchg
les
pop
loop
adc
rorl
rcrb
cwtl
sahf
les
cmpsb
hlt
data16
or
push
popa
xor
clc
mov
push
out
scas
cmc
cmp
loop
add
insl
mov
add
sub
xchg
pushf
inc
pop
push
jmp
or
icebp
jecxz
jae
out
ds
enter
negb
jb
lret
mov
or
daa
dec
pop
dec
push
jns
clc
movsb
std
xchg
lret
test
jle
pmulhw
sti
xor
fxtract
jle
outsl
mov
call
inc
mov
xchg
inc
imull
mov
in
push
push
js
cmp
and
dec
les
add
loop
pop
xor
pop
sbb
rorb
leave
sub
lcall
scas
js
cmp
into
push
jecxz
lock
dec
and
shl
imul
insb
mov
packsswb
ret
dec
xchg
dec
lds
and
ss
xchg
into
sti
lret
stos
stc
daa
lret
out
add
ds
enter
pop
adc
sbbl
or
xor
sub
icebp
popf
dec
les
pop
push
mov
pop
jnp
push
push
call
xor
pop
cwtl
and
xchg
xchg
fwait
xchg
adc
inc
inc
mov
fcomps
cmovge
cmc
fcmovu
inc
inc
sbb
popf
xor
test
mov
adc
push
push
cmc
mov
sub
jge
dec
pop
adc
mov
and
mov
test
jns
sar
leave
sub
mov
pop
or
pop
dec
push
sbb
mov
ljmp
push
add
jbe
push
xor
or
nop
rcrl
dec
adc
adc
jno
aam
or
adc
insl
enter
shll
inc
daa
xor
mov
or
add
and
outsl
cmp
sub
shlb
push
push
pop
mov
adc
test
gs
scas
mov
push
lods
lods
call
mov
out
mov
mov
iret
fwait
sbb
out
in
sbb
adc
out
cltd
fcmovb
fcompl
rcrl
ficompl
xor
ss
adc
roll
sbb
hlt
lds
xor
pop
clc
sbb
jae
jnp
add
jmp
ds
xor
shr
jo
jnp
push
jmp
mov
jb
sbb
ss
mov
punpcklbw
fcoml
movsl
movsb
stc
xchg
lds
mov
jae
or
cmc
fwait
pop
mov
or
arpl
mov
popf
pop
add
xchg
adc
not
inc
jle
sub
fldl
aaa
and
test
cmpsl
dec
push
cmpsb
stc
notb
pop
jo
popf
inc
notl
mov
cmpsl
into
and
ret
aam
aad
rorb
movsl
or
hlt
orl
enterw
jo
ss
lret
inc
sbb
je
cld
je
sbb
xor
xor
hlt
scas
fcoms
lret
pusha
pop
add
or
stos
lcall
imulb
cmp
lret
push
mov
mov
sbb
in
sbb
das
mov
xchg
push
pop
sub
xchg
call
scas
shlb
cmp
stos
mov
mov
js
addl
xor
push
inc
test
out
loope
mov
fstpt
push
hlt
mov
mov
ss
jne
daa
and
popf
pop
mov
pop
lret
ffreep
sbb
jmp
das
sbb
dec
inc
adc
mov
int3
stos
mov
frstor
pop
sub
mov
arpl
lods
mov
inc
insb
mov
jne
dec
imul
mov
cmp
outsb
call
js
cmp
out
mov
ja
xor
in
popf
es
jl
add
dec
pop
adc
and
xorl
pushf
push
sub
cmp
jnp
pop
add
into
pop
loop
cmpsl
mov
jmp
stos
rcll
xor
cltd
enter
jp
stc
xor
jne
mov
lock
cmp
fcomps
fwait
aas
outsb
out
push
and
push
pop
mov
push
or
jnp
shr
inc
jle
notl
jp
mov
pushf
jae
xor
pcmpgtd
jno
mov
and
pop
scas
movsl
aam
pop
dec
mov
loope
pop
fsub
pushf
jno
or
adc
mov
fstps
cmpl
arpl
sub
adcb
rolb
add
mov
cmpb
lcall
fldt
add
mov
std
jo
cwtl
repnz
out
incb
stos
shlb
popl
inc
cli
les
sahf
das
xlat
lret
cmp
in
scas
scas
int3
jge
fstps
and
dec
pop
push
setae
scas
pop
rcll
out
call
inc
cmp
sub
lods
scas
sbb
cmc
push
cmp
xchg
jp
testb
dec
mov
push
add
pop
test
shlb
testl
mov
movb
mov
fs
adc
test
mov
jl
dec
lahf
mov
notl
jle
das
pop
jecxz
cmp
sub
jecxz
xlat
iret
ret
sti
insl
jmp
das
mov
fldt
xchg
xlat
pop
jl
push
call
imull
std
mov
loop
mov
pusha
aad
imul
pop
int3
cmp
xor
push
pop
xchg
data16
pop
daa
fnstenv
push
jp
mov
jge
sub
add
jno
or
push
stos
nop
or
leave
nop
mov
arpl
xchg
rorl
cmp
notl
les
lods
es
cmp
clc
iret
push
sahf
xchg
add
mov
in
gs
and
cmp
int
mov
or
stc
in
cmp
sub
fs
jns
jno
dec
dec
in
mov
pushf
ljmp
jecxz
push
ja
aam
aas
in
hlt
push
cmp
xchg
mov
into
adc
fnstenv
pop
loop
repz
lea
ret
test
sub
loop
orb
lods
push
mov
mov
stc
rclb
pop
in
pop
xor
inc
or
test
push
push
aaa
je
faddl
inc
sub
dec
xor
vmread
dec
sbb
dec
inc
xchg
cs
daa
mov
xchg
cmpsb
cmpsl
out
or
clc
jno
xchg
push
rclb
stc
mov
xchg
sub
js
mov
and
popf
push
fnsave
fwait
mov
repz
xor
inc
push
das
mov
nop
rcll
mov
divl
inc
adc
es
stos
jb
inc
jp
or
je
adc
out
fadd
xor
mov
xchg
xlat
push
jg
out
push
inc
test
cwtl
and
test
mov
ss
cmp
dec
jecxz
xchg
cltd
sub
rcll
xchg
dec
mov
sub
mov
push
sbb
popf
rsqrtps
in
inc
jg
sbb
inc
mov
mov
lock
dec
pop
jle
jo
push
xchg
xchg
cmp
jb
or
imul
frstor
xchg
test
shl
insb
mov
or
adc
mov
pop
outsb
xchg
sub
fwait
test
out
clc
insb
fstpl
fcomi
int3
or
push
lods
mov
xchg
inc
jae
jle
lcall
lock
xor
mov
inc
mov
cmp
nop
push
sub
xor
dec
inc
mov
lret
arpl
xlat
ret
xor
sbb
xchg
cli
or
mov
fistps
push
repz
push
jmp
jge
jge
sbb
lahf
push
mov
push
imul
loope
aam
and
int3
out
mov
jo
push
ret
leave
mov
xchg
arpl
mov
repnz
push
sbb
jae
xchg
pop
jmp
mov
subl
mov
and
mov
loop
mov
cmp
ret
pusha
inc
fimull
pop
cmp
in
ja
test
jl
fildl
lods
xchg
je
test
daa
sub
hlt
inc
stos
lods
pop
rolb
xchg
pushf
pop
xchg
mov
pop
outsb
mov
hlt
pushf
gs
pop
jno
mov
in
xor
push
jae
out
pop
lcall
sbbb
adc
cmp
imul
inc
jb
jg
leave
outsb
xor
xchg
mov
xorps
int
dec
ss
out
add
inc
pop
or
push
push
es
insb
xchg
mov
mov
test
pusha
addr16
add
outsl
shll
pop
mov
jg
add
lods
sti
test
in
mov
das
jge
adc
data16
sbb
push
fwait
xor
ds
ja
insb
jnp
leave
push
push
mov
xor
inc
add
inc
or
cmpsl
subl
cmp
loope
decb
sub
or
xor
adcb
mov
lea
push
cmp
mov
cwtl
rclb
pop
pop
negb
ds
mov
jecxz
or
cmp
jmp
xor
cmp
jecxz
push
mov
movsb
imul
hlt
test
insl
cmpsl
push
jecxz
sbb
push
mov
mov
les
inc
dec
lcall
jo
add
fmull
test
int3
cmpsl
add
sbb
xchg
mov
lret
jl
push
dec
lahf
xchg
and
mulb
cmp
ja
push
nop
xor
cwtl
data16
jmp
dec
and
lods
ds
push
fidivl
insl
sub
insl
jmp
xor
push
in
into
mov
fwait
xchg
add
or
pop
pop
pop
in
out
jecxz
push
rcll
push
addr16
nop
out
mov
mov
xchg
push
inc
in
loop
and
inc
push
cmpsb
pop
jbe
or
mov
mov
dec
xor
adc
out
xchg
jecxz
je
jg
outsb
fldt
out
lret
add
sub
sub
mov
jae
mov
sub
mov
movsl
dec
mov
cli
cmp
mov
out
lret
sub
add
in
mov
mov
push
xor
das
pop
jecxz
das
ret
jne
aaa
ss
adc
adc
sti
mov
mov
lahf
gs
mov
fst
lods
pop
xchg
shrl
call
fyl2xp1
push
push
iret
cmpsb
repnz
aas
or
sbb
fnstsw
pop
daa
pop
stos
es
test
push
mov
daa
sub
mov
leave
subl
and
and
addl
test
or
popf
dec
test
out
push
cmp
pop
fistpl
out
inc
enter
loope
std
sbb
les
dec
xchg
std
mov
push
push
fisttpl
cwtl
or
test
mov
pop
scas
xchg
mov
sub
sub
pop
sbb
mov
xchg
adc
arpl
insl
mov
cmpsb
xchg
in
pop
pop
mov
jae
push
mov
daa
mov
mov
cmc
lods
jecxz
mov
das
stos
aas
popf
lea
mov
xor
popa
rol
enter
xlat
xor
sarb
cli
adc
cltd
lods
xor
sub
dec
sub
push
pop
lock
mov
or
icebp
mov
mov
jmp
mov
insl
shr
and
adc
mov
shl
pop
push
shrb
mov
sub
jns
adc
sbb
jo
ret
insb
mov
push
leave
mov
bound
mov
mov
test
jge
mov
in
pop
xor
pop
lds
dec
dec
in
arpl
sub
inc
cmp
outsb
std
or
das
sub
shlb
and
icebp
add
sub
jb
push
inc
test
add
movsb
pop
mull
mov
movsl
sub
leave
mov
jecxz
xchg
cs
mov
and
mov
cmpl
mov
adc
xor
jl
pop
cmp
data16
notl
rcl
inc
nop
call
push
jnp
cmp
ja
sbb
jo
sbb
sbb
out
push
mov
pushf
out
pop
pop
mov
test
loope
or
shll
stos
shll
mov
xor
xchg
lds
cmpb
ja
icebp
jecxz
xchg
out
add
push
xchg
shrb
sahf
dec
orb
scas
int3
and
movsl
xchg
cltd
pop
xor
decb
xchg
xchg
out
push
imul
mov
xlat
xor
in
int3
add
mov
push
jbe
scas
push
mov
call
test
scas
and
loopne
adcb
ds
dec
lds
ret
pop
jae
push
ret
ret
add
sbb
add
add
mov
je
lret
lods
lahf
bound
pop
jmp
loopne
jmp
out
xor
sub
nop
adc
sub
stos
xlat
shl
hlt
sub
jbe
xchg
cmpsl
scas
push
aad
js
xchg
into
leave
cvtps2pi
mov
and
hlt
mov
mov
ds
or
cli
imul
scas
cmpsl
outsb
jo
rclb
inc
stc
mov
pop
enter
cltd
out
les
in
sub
push
push
adc
pop
ljmp
sub
push
sub
jmp
xchg
mov
repz
and
dec
outsb
arpl
push
aaa
cwtl
mov
rcrb
aaa
jbe
data16
mov
icebp
loop
ds
iret
sbb
repnz
sbb
iret
mov
stc
pop
xor
xor
shll
lock
aad
dec
mulb
pop
mov
or
add
and
push
jmp
or
push
mov
mov
xchg
pop
lret
dec
cwtl
icebp
pop
lods
cwtl
mov
xchg
jns
sti
adc
stos
jg
mov
stos
std
clc
cli
popf
popa
iret
dec
jp
sbb
add
adc
mov
out
mov
sbb
loop
add
mov
ja
mov
jae
add
daa
fmul
fidivl
test
dec
dec
dec
cmpsl
lcall
mov
cmpsb
sahf
outsl
jno
xchg
mov
int
iret
aam
jns
in
gs
and
movsl
dec
aaa
push
imul
cs
pop
cmpsl
ja
inc
dec
dec
das
test
mov
aaa
sbb
lahf
mov
in
fcoml
fwait
test
ds
add
scas
sub
or
mov
aas
jns
adc
out
mov
jns
aas
shlb
add
das
in
leave
movsl
sub
repz
mov
dec
sbb
sbb
test
xor
dec
cmp
adc
aaa
cmp
push
xchg
mov
xor
xor
mov
popf
add
jecxz
xor
in
mov
xchg
ja
dec
out
scas
dec
xchg
outsb
aaa
repz
lea
jl
popf
fadds
mov
xor
in
inc
mov
inc
out
ja
addr16
lock
call
xchg
push
mov
push
mov
loop
mov
ja
repnz
add
cmp
cld
jnp
out
sbb
or
js
nop
js
mov
lret
stc
add
push
shlb
jnp
mov
mov
or
jg
xchg
fucomip
scas
push
jmp
pop
mov
jbe
fcomps
xchg
cmc
lret
in
lahf
negb
mov
xchg
sti
enter
fnstsw
fisttps
call
ds
cwtl
movsl
xor
inc
lods
lret
mov
les
aad
mov
cmp
sbb
rorb
mov
in
push
push
mov
mov
and
lods
pop
lret
push
push
imul
mov
xor
cs
cmp
shll
jg
out
add
test
cmp
xchg
adc
ja
imul
mov
aad
jnp
add
cmc
mov
xchg
rolb
jge
mov
hlt
decb
mov
lea
ret
mov
std
or
or
in
rol
push
xor
push
lcall
sbb
jl
pop
cmpsb
addr16
cmp
push
dec
ja
out
and
es
sbb
lods
mov
cmp
sbb
aas
sbb
jp
sbb
lret
jl
lds
nop
shrb
mov
mov
aaa
cmc
shrl
jne
psubd
js
rorl
mov
nop
fptan
jo
rorb
xchg
jno
jae
dec
add
aad
mov
jae
shll
out
iret
jb
xchg
in
xor
mov
xor
push
clc
int3
std
lcall
dec
jge
mov
in
in
stos
stos
mov
int3
stos
rcrb
sti
mov
cwtl
cmp
mov
call
int
jl
xor
outsb
jo
add
sbb
xchg
push
and
repz
pop
and
dec
mov
in
xor
cltd
cmpsl
xor
mov
lock
icebp
xor
jmp
mov
hlt
into
dec
cltd
adc
xchg
fwait
cmp
fbstp
sub
scas
sub
jg
push
mov
dec
out
cmp
jb
push
and
cmp
or
and
fldenv
xchg
lret
and
mov
mov
sbb
xor
mov
push
cmpsl
gs
xchg
pop
in
xor
es
mov
inc
popa
add
dec
fstpt
inc
je
int
je,pn
nop
aas
ja
push
fisttpll
mov
dec
ja
bound
and
inc
hlt
popa
flds
enter
and
mov
inc
push
pop
add
cwtl
bound
add
xchg
adc
mov
out
jb
in
cmpsb
mov
jnp
mov
movsl
sti
loope
mov
aaa
lds
mov
jbe
mov
nop
je
mov
ljmp
push
int
call
push
jmp
lds
mov
cmp
inc
mov
xlat
out
incb
addr16
push
adc
sbb
fldt
call
in
sbb
xchg
pop
cmpsb
aam
aaa
mov
sbb
call
jne
stos
inc
imul
test
sub
jns
xchg
jnp
lcall
mov
les
xchg
inc
scas
sub
pop
inc
outsl
mov
push
out
inc
xor
push
inc
clc
sbbb
in
jecxz
pop
mull
bound
rcrl
gs
shlb
pop
lcall
bound
cmp
stos
orb
jp
add
jg
out
js
jmp
push
pop
cmp
cmp
and
adc
inc
leave
inc
cltd
je
insb
clc
arpl
outsb
lods
jge
fldl
mov
fcoms
fwait
push
pop
pusha
adc
mov
lcall
jg
mov
adc
mov
sbb
pop
and
test
sub
jg
adc
icebp
insl
xor
sbb
mov
jle
ds
das
cltd
adc
mov
arpl
clc
shl
in
andl
cld
popf
jp
icebp
push
out
and
cltd
lock
sub
inc
js
jo
cwtl
sub
add
les
cmp
xchg
fildl
ficomps
push
fwait
mov
and
add
insl
ffreep
pop
fbld
dec
adc
push
mov
or
ds
sbb
addr16
loop
cmp
ret
push
dec
cmp
sub
dec
nop
stos
les
lods
aas
inc
dec
loopne
fdivs
fisttpll
xchg
xchg
and
in
jo
cmp
outsb
mov
lret
in
sub
subb
int3
ljmp
imul
push
push
aad
fisubrl
scas
dec
push
aad
and
xlat
mov
sub
mov
jg
xor
cmp
rcrb
ds
sti
imul
movsb
out
jns
sub
ja
inc
and
movsb
cs
sbb
dec
push
es
scas
adcl
leave
stos
repnz
mov
jecxz
jmp
jecxz
fiaddl
adc
stos
adc
das
inc
dec
push
or
sarb
aam
dec
cmp
xlat
xor
mov
out
icebp
jle
dec
pushf
mov
pop
in
adc
in
push
repnz
lret
mov
jge
sub
dec
f2xm1
mov
sbb
adc
add
insl
mov
push
mov
pop
inc
cmp
pop
inc
xchg
aam
xlat
cmp
sub
sbb
iret
push
mov
push
jle
out
mov
dec
and
cmpsl
cmp
loope
mov
inc
jl
and
imul
mov
push
or
cmc
dec
imul
scas
loop
aam
testb
or
les
sub
jg
push
lahf
inc
cli
je
adc
subl
push
jle
xor
jb
push
out
cmpsl
mov
clc
lret
jno
or
insb
roll
jne
inc
fldt
daa
push
bnd
mov
lret
adc
bnd
lahf
fldt
in
cwtl
lods
mov
fldl
xchg
xor
pop
fldt
mov
mov
jl
fstl
stos
in
pop
xchg
jg
xor
sub
jns
add
das
lret
cli
cmc
inc
cmpsb
js
enter
push
out
mov
int3
jbe
mov
mov
popa
cwtl
mov
cmp
cltd
loopne
test
add
xor
and
frstor
push
mov
divb
sahf
lods
push
dec
or
xor
ret
imull
adc
in
nop
mov
out
dec
mov
sub
xchg
insb
pop
push
mov
or
addr16
hlt
jmp
fadd
xchg
in
cmp
imul
rclb
adc
mov
testb
xchg
js
push
push
add
mov
adc
int
cmp
mov
or
icebp
aas
ret
push
sub
adcl
lods
in
push
xor
push
filds
pop
sub
jbe
je
mov
insl
ljmp
test
mov
inc
cmp
inc
mov
pusha
mov
sub
pusha
sub
xor
scas
cmc
jp
inc
iret
icebp
mov
mov
repnz
pop
add
push
fidivrl
loop
add
jmp
add
leave
push
cmp
lcall
movsb
mov
lcall
pop
sbb
enter
punpckhbw
popa
sbb
mov
or
enter
add
cmp
xor
hlt
mov
cld
dec
ljmp
pop
popfw
dec
cmpsb
pop
xchg
mov
xchg
dec
mov
mov
xor
mov
xchg
test
daa
and
hlt
dec
sbb
jge
ret
rorb
or
mov
add
stos
pop
sbb
cmpl
int3
mov
movntq
out
mov
dec
xchg
sbb
and
out
xchg
push
pop
scas
sub
dec
jmp
mov
fwait
jae
jg
les
testl
jbe
pop
mov
mov
loope
std
enter
push
push
push
test
out
mov
cmp
cli
fldl
popf
push
stos
add
mov
mov
js
and
xchg
movsb
cltd
out
mov
cmpsb
insb
add
lret
jns
scas
push
mov
xchg
aas
cld
dec
jg
jecxz
fsubl
lret
ud2
pop
mov
sti
jns
lods
xor
lods
andnps
fcompl
pop
jo
es
xor
pop
mov
inc
imul
push
gs
push
ss
pop
pop
mov
xlat
mov
ja
dec
dec
pusha
aam
mov
sbb
push
mov
push
dec
test
mov
mov
iret
sbbl
xchg
add
popf
out
cmpsl
int3
xor
call
push
mov
cwtd
jne
cld
rcrl
and
xchg
inc
fwait
test
filds
jg
fsubl
fnsave
lock
fistps
aad
or
jl
add
pop
dec
daa
daa
xchg
cli
add
movsl
xor
pop
scas
in
dec
in
fs
fldt
push
push
sbb
fistps
inc
cmc
dec
adc
cmp
cmc
adc
fwait
xchg
mov
aaa
lret
jmp
iret
xorl
pop
popf
outsb
pusha
xor
sub
and
sub
lahf
stc
std
xchg
lcall
rolb
adc
adc
sub
push
shll
and
filds
push
xorl
das
mov
sti
push
aas
adc
inc
popa
sbb
mulb
cli
mov
add
push
lods
lret
rorl
adc
sbb
xchg
dec
mov
rclb
arpl
popf
enter
jge
dec
jp
jo
mov
fstpl
movl
mov
gs
mov
push
pop
mov
jno
cmpl
push
add
add
ss
sbb
inc
lret
js
jo
dec
xchg
cmpl
call
push
pusha
mov
xchg
mov
aam
add
cmc
in
pusha
mov
cmpsb
ret
out
out
xor
push
dec
shlb
sub
out
cmpsl
dec
out
sahf
mov
inc
loop
into
cltd
cmc
leave
mov
xchg
sbb
gs
mov
xchg
sbb
fnstenv
push
mov
shl
ja
test
movsl
out
add
into
pop
dec
adc
cltd
xor
dec
outsb
icebp
call
ret
lock
xor
gs
negl
mov
in
pop
bound
cltd
dec
mov
cmp
xlat
mov
xor
cmp
push
cmpsl
lea
mov
xorb
lods
pop
imul
cmp
in
mov
lods
lahf
sbb
sub
dec
addr16
cmp
enter
xor
push
outsl
js
scas
adc
popa
lahf
shrl
insl
frstor
dec
mov
mov
push
jp
divb
xchg
adc
cmpsb
int
xchg
out
and
add
mov
dec
dec
xor
int3
loop
lret
xor
shrl
mov
mov
int3
sahf
push
mov
lods
pop
imul
fsubrl
lcall
lods
cmp
repnz
pop
int3
rol
and
jnp
or
imul
dec
inc
loop
cmp
es
or
bound
loopne
cltd
je
jecxz
sub
sub
daa
push
cs
test
lods
roll
mov
mov
adc
shll
gs
jne
mov
in
jb
sbb
xchg
or
sub
cmp
negb
jle
adc
stos
mov
mov
imul
pop
mov
mov
mov
enter
out
daa
dec
adcl
xchg
mov
nop
lds
popf
repnz
push
xor
pop
in
scas
xchg
sub
aad
sbb
out
lret
pop
xor
push
sbb
imul
ffree
sbb
rorb
rcrl
loope
sub
mov
enter
xlat
mov
and
cld
rorl
xchg
xchg
out
push
cwtl
ret
icebp
sub
pop
cmp
stc
inc
pop
nop
daa
mov
sub
sub
imul
es
cmpsb
mov
pop
popa
fidivs
or
ret
movl
lret
push
dec
cmp
gs
jne
out
xchg
mov
into
add
rcrl
mov
xabort
sahf
dec
imul
push
fwait
and
dec
cmpsl
add
les
shll
sbb
scas
jp
in
cmp
push
cmp
and
or
mov
jbe
and
popf
or
sbb
rol
sub
test
cltd
jne
dec
jne
or
enter
addr16
xchg
fnsave
test
inc
mov
sub
out
push
les
fs
lods
inc
shl
xchg
mov
and
int3
mov
sbb
mov
int3
mov
mov
xchg
and
pusha
es
cmp
mov
mov
sub
pop
movsb
jmp
push
lret
mov
popf
xchg
in
cmp
and
push
stos
xlat
sbb
imul
push
push
mov
dec
pop
add
adc
xchg
insl
enter
jle
sar
pop
push
clc
inc
psraw
ljmp
movsb
ja
pop
scas
push
dec
shll
lret
adc
mov
xchg
test
dec
or
sbb
les
outsb
les
adc
mov
std
sbb
cmp
mov
pop
leave
roll
andl
lcall
fisttps
add
ret
jle
inc
jne
out
jno
imul
es
shll
sarb
push
arpl
sub
insl
sub
rcrb
nop
movsl
jo
sbb
push
rclb
dec
xlat
xchg
cmpsl
fbld
jne
aad
xchg
lock
enter
pop
roll
popa
sahf
mov
xor
or
sub
pop
xchg
je
js
fdivs
push
jb
clc
stos
popf
lods
mov
cmp
xor
lods
pop
sub
movsb
cmp
pop
js
stos
cmpsb
sbb
and
adc
push
jnp
jns
sbb
divl
sbb
int
mov
jbe
inc
dec
in
push
daa
lcall
call
pop
out
push
call
add
out
or
leave
imul
nop
pusha
cld
stc
cltd
push
into
push
lahf
adc
cmp
shlb
test
push
pop
adc
fisubrl
mov
scas
jmp
mov
lahf
mov
jae
jmp
fidivl
lahf
rcrb
push
repnz
jmp
popa
ljmp
sbbl
mov
mov
stos
mov
xchg
xchg
sbb
jle
clc
addps
inc
movl
gs
int
push
push
popl
push
push
xor
out
xchg
push
addr16
jecxz
repnz
jno
scas
stos
and
jno
sub
lcall
les
and
fnop
or
mov
push
sbb
add
sbb
in
shll
mov
mov
mov
add
mov
mov
mov
mov
addr16
xor
and
addr16
adc
mov
leave
sbb
mov
mov
out
mov
xchg
subl
dec
cld
jp
aam
adc
stos
movsb
or
insl
or
andl
rolb
jp
inc
inc
nop
insl
dec
scas
pop
fwait
mov
test
fldt
pusha
push
jnp
mov
or
imul
xor
fwait
mov
outsb
push
mov
xor
ja
out
adc
das
mov
lea
sbb
mov
test
enter
add
test
push
sub
inc
add
or
and
adc
jo
mov
add
inc
add
cmp
cwtl
xchg
dec
jb
add
push
rcll
inc
rolb
xchg
aaa
popa
bound
mov
stos
arpl
inc
cmp
inc
out
sbb
cmp
pop
add
push
sbb
or
push
xchg
imul
lcall
pop
stos
xor
test
test
lea
pop
mov
out
out
and
mov
bound
dec
mov
lahf
and
jmp
xlat
enter
xchg
dec
push
jae
mov
lds
aas
adc
mov
add
mov
rorl
popf
out
fucomp
cmpsb
lds
inc
xor
dec
pop
xchg
ljmp
mov
out
mov
sbb
sub
iret
jl
jbe
test
xor
mov
pop
repz
sub
sub
add
js
mov
fidivs
icebp
fistpl
mov
cmp
add
dec
sbb
mov
mov
xchg
out
jmp
lods
int3
jne
adc
mov
inc
jp
mov
mov
ljmp
aad
js
sahf
add
lret
and
xor
dec
cmp
jg
pop
mov
js
cmp
jl
popf
sbb
xor
je
lcall
adc
rclb
lods
cwtl
out
pop
adcb
mov
xchg
lahf
jnp
ja
shll
sbb
pop
pop
mov
inc
enter
xlat
sbb
insb
pushf
mov
sub
push
push
inc
movsl
insl
scas
rolb
pop
sbb
aaa
xor
jmp
jbe
ds
xchg
test
popf
sbb
xchg
rclb
testl
je
dec
xor
sub
outsl
or
cld
int
fstpt
in
in
movb
mov
repz
fiadds
test
jbe
inc
and
test
xchg
add
mov
pop
push
rclb
pop
testl
ljmp
enter
ljmp
push
pop
adc
ds
sub
cmp
fstpt
jmp
fisubrs
pop
jae
lcall
and
mov
movsl
or
mov
mov
mov
mov
hlt
or
xlat
fwait
cltd
pop
mov
fists
leave
loope
sbb
lods
frstor
cwtl
cmp
sub
outsl
aad
mov
cmp
das
stos
or
stos
cli
cli
in
dec
jp
fcompl
ds
mov
jnp
lds
sbb
push
push
push
cmp
ds
in
pop
add
mov
mov
shr
push
xor
pcmpeqw
call
xchg
andl
aaa
fistpl
cltd
xchg
push
sub
xchg
mov
gs
cmp
ljmp
push
lret
mov
scas
sub
cmp
sbb
jle
imul
mov
xchg
mov
repnz
and
or
je
nop
mov
mov
pop
out
fs
dec
ds
sbb
push
popf
pushf
movl
iret
cs
icebp
adc
push
sbb
lret
mov
and
lcall
mov
repnz
cmp
or
mov
mov
sbb
dec
push
test
mov
outsb
js
lods
mov
loopne
ljmp
push
sbb
fs
cmp
into
pop
sub
aad
push
push
je
xor
stc
sbb
add
add
insb
and
movsl
push
xchg
outsb
inc
and
insb
push
jno
xlat
bound
jecxz
idivb
in
mov
cmpsl
enter
in
sbb
and
mov
fistpll
mov
mov
dec
icebp
or
repnz
dec
sbb
inc
mov
dec
sbb
icebp
sbb
and
mov
jp
or
in
inc
jno
push
xchg
fmuls
je
xchg
xchg
pop
pop
add
cmp
bound
int
dec
sbb
xlat
fidivl
sbb
pop
and
lcall
push
push
in
cwtl
pop
gs
cltd
ds
adc
pushf
jg
stos
sbb
adc
nop
cmpsl
and
mov
lds
lea
push
aas
ljmp
cmp
dec
adc
in
push
pop
mov
jnp
mov
xor
pinsrw
or
dec
cmpsb
testl
pushf
cmpsl
cs
add
inc
gs
inc
dec
dec
in
sub
dec
inc
lret
outsb
addr16
hlt
fwait
out
mov
push
mov
pop
push
dec
subb
out
scas
xchg
mov
loopne
inc
xor
clc
add
and
cmp
or
jbe
rorl
sbb
sub
bound
sub
inc
les
inc
push
movsl
data16
cmc
dec
add
jbe
rcll
orl
xor
rcrb
ja
movsl
hlt
stc
pop
imul
das
or
add
in
in
mov
xchg
rclb
ja
sbb
jecxz
pop
lods
inc
ss
push
xchg
mov
fidivrl
mov
lahf
ret
mov
out
pop
pop
xchg
push
fwait
add
test
fs
das
cmp
and
adc
cmp
negb
jno
lret
inc
jge
imul
out
xor
mov
in
nop
in
inc
sti
addr16
lret
and
test
es
fcmovne
repnz
loope
int
fxam
adc
test
mov
adc
popf
adc
js
ret
cmc
sbb
or
lock
cmovge
mov
gs
sub
ficompl
std
jbe
lcall
pop
add
jo
stos
int
scas
mov
mov
dec
scas
cmpsb
rcl
mov
inc
cli
xchg
bound
push
pop
or
daa
mov
ret
sbb
xor
cmp
push
fld
jge
inc
mov
pushf
shll
test
push
lods
xor
imul
xchg
push
movsl
mov
pop
jp
rolb
cmp
lahf
or
sub
pop
jge
ljmp
jno
cmpsb
sbb
mov
mov
xchg
cmp
xorb
xchg
add
loopne
dec
push
push
or
jno
xchg
sbb
mov
pop
ljmp
test
push
xor
ss
daa
sbb
pusha
sahf
xchg
push
jo
or
push
adc
xlat
adc
outsl
subl
cli
aam
mov
xchg
push
lds
add
aam
or
popf
lods
cmp
test
adc
push
pop
idiv
pop
mov
into
cmpsb
adc
xlat
jp
daa
mov
out
mov
scas
lds
inc
push
pop
jge
xchg
pop
in
inc
in
in
xor
push
fldl
mov
sbb
lock
lds
mov
test
or
fwait
xchg
pop
cmp
insb
int3
xchg
add
mov
add
sub
jb
jne
add
cld
je
popf
addr16
daa
mov
jecxz
lret
fadd
fistpll
hlt
add
adc
outsl
out
push
ret
pop
sub
push
es
hlt
stos
push
mov
mov
inc
mov
inc
mov
lods
sub
sahf
stc
lahf
mov
sbb
sub
mov
sbb
in
and
into
lcall
pop
imul
lcall
adc
cltd
dec
add
test
adc
sbb
and
pop
mov
or
push
inc
ret
and
notb
push
hlt
jmp
mov
lods
sbb
fcompl
and
cmp
dec
jle
mov
lock
stc
cmpsl
xor
sub
xchg
cs
mov
mov
dec
jmp
ss
ja
imul
push
roll
xor
sahf
popf
dec
in
mov
sbb
cmp
push
ss
in
pop
enter
xor
cwtl
mov
pop
ds
movsl
jnp
imul
call
mov
and
add
scas
mov
pusha
ret
in
outsl
mov
xor
cwtl
or
mov
cmpsl
mov
mov
cmpl
popf
test
int
stc
lods
int
or
xchg
dec
mov
fwait
stos
mov
mov
imul
or
cmp
add
cmpsl
fisubl
out
cld
test
add
scas
outsl
in
fxch
fldt
sti
and
test
adc
dec
lds
rolb
sub
hlt
mov
sub
sbb
mov
push
shll
jns
push
cmp
mov
push
and
inc
ds
sti
mov
movsl
popa
icebp
cs
cltd
mov
jmp
gs
inc
xchg
sbb
aaa
cmpsb
sbb
fs
ret
repnz
xor
pop
add
out
outsb
sbb
jle
jl
hlt
mov
jnp
mov
inc
in
inc
and
loope
push
inc
and
out
jnp
xor
jnp
or
pop
jp
outsl
sarl
mov
push
cltd
fsts
mov
lcall
pop
jge
mov
push
sahf
enter
add
jge
movnti
int3
ljmp
adc
aas
xor
idiv
mov
gs
pop
or
push
pop
adc
xorb
inc
inc
cltd
sbb
mov
dec
jge
test
aaa
test
repz
ret
cli
pop
push
rcrb
repnz
cltd
jge
fcoml
lret
int3
popf
pushf
xor
andl
inc
mov
dec
addl
push
fs
adc
int3
shlb
bound
inc
je
inc
mov
push
sub
xchg
and
push
pusha
jecxz
leave
add
lret
sbbl
lea
cmp
data16
push
push
inc
inc
xlat
inc
push
and
sbb
cwtl
mov
mov
mov
inc
cmp
xchg
imul
in
hlt
cs
adc
xor
insl
test
and
xor
mov
sub
add
js
rcrb
daa
xchg
inc
cltd
movsb
jge
and
lret
sarl
rcrl
pusha
in
and
sub
pop
mov
lds
int3
xchg
and
push
stos
pop
test
mov
fwait
sbbl
xor
cmp
pop
dec
ljmp
sub
cmp
mov
jge
sti
xor
mov
push
fisttpll
xchg
or
les
adc
xor
or
or
test
cmp
pop
sahf
mov
xchg
shrl
add
scas
cmp
shl
les
push
cmp
xchg
xchg
and
xchg
and
mov
js
aam
repz
insl
xor
adc
dec
adc
vandps
push
fsubs
bound
enter
lods
adc
add
sbb
add
xorb
adc
xor
mov
cmp
shlb
cmp
or
mov
dec
aaa
sahf
test
mov
mov
mov
and
pop
fsubrl
cwtl
fisttpl
arpl
leave
or
dec
repnz
je
mov
cmp
dec
or
sub
add
jg
rcll
sbb
jl
xor
inc
ret
into
sub
arpl
mov
sbb
add
mov
ja
sub
outsl
aas
outsb
and
ret
pop
jo
inc
pop
dec
pop
inc
pop
add
std
fcmovnbe
sbb
cmpsb
inc
out
cmp
daa
push
jbe
and
in
insb
sub
inc
scas
jmp
mov
sub
shll
pop
lahf
aas
inc
pop
pop
xchg
add
mov
or
inc
cltd
inc
push
dec
xchg
jl
rcrb
jge
sbb
sahf
sub
icebp
adc
shll
ret
mov
cmp
mov
or
loopne
in
push
pop
loop
xor
sbb
bound
cmp
inc
adc
scas
rol
xor
cmc
outsb
mov
sbb
or
xchg
adc
loope
jmp
outsl
add
insl
ja
out
jl
mov
xchg
out
roll
sub
add
std
cmp
jne
cmp
movsb
mov
mov
out
sbb
in
lea
jbe
lret
std
sbb
hlt
ja
insb
mov
pop
dec
pop
mov
lea
and
aaa
in
add
insb
data16
and
xchg
pop
dec
cmp
sbb
pop
leave
je
add
pop
movsb
xchg
stc
dec
leave
repz
push
mov
xchg
orl
lock
or
arpl
push
xlat
inc
add
xor
cmc
shrb
inc
pop
sti
push
xchg
rcrl
cli
adc
js
decb
jo
and
and
pop
loope
in
pop
in
in
rol
adc
xchg
xor
push
cltd
inc
adc
push
xlat
mov
jmp
fcomps
loop
mov
test
les
lock
fnstenv
xor
call
cs
mov
sbb
arpl
xchg
cmpsb
in
nop
sbb
js
or
jno
mov
scas
pop
dec
push
jle
test
jl
pusha
dec
pop
arpl
or
outsl
scas
inc
mov
inc
pop
or
imul
xchg
movsb
adc
in
test
fidivrl
popa
outsb
sbb
mov
mov
data16
outsb
negb
insl
outsl
es
outsb
sbb
in
pop
push
xchg
adc
pop
push
std
daa
scas
inc
rorb
loop
ret
ds
sub
pop
sbb
dec
add
adc
lret
lret
dec
scas
rcrb
lods
and
xor
or
arpl
cmpsb
sub
js
pop
pop
xchg
mov
dec
cmc
jmp
push
xlat
mov
mov
xlat
cmpsl
dec
sti
dec
ret
cmp
xor
cmp
cli
push
pop
cmp
and
mov
mov
test
push
movsb
lret
movsb
jmp
jns
repnz
jmp
or
mov
scas
pop
clc
xor
sub
cmp
pop
push
mov
cld
data16
pop
test
mov
dec
jns
push
incb
cmp
aas
jecxz
fildl
mov
das
mov
aaa
pop
cmp
adc
gs
mov
es
call
sub
stc
or
pop
andl
or
incl
cld
test
pop
addr16
scas
push
out
fwait
dec
in
hlt
out
dec
into
iret
testl
or
jg
aas
movsb
insb
or
mov
adc
es
decb
dec
jmp
stc
push
sub
inc
push
and
cltd
and
cld
cmp
push
adc
jae
adc
cmpl
sub
sbb
loopne
loope
faddl
imul
adc
loopne
test
and
data16
jnp
xor
lahf
jge
lock
sub
cmp
cs
pop
fcompl
or
cmp
jmp
xor
and
xor
adc
lea
mov
test
push
sbb
daa
jmp
push
sar
cld
pop
sub
out
fs
daa
jl
orb
sub
push
mov
out
pusha
mov
lods
or
pop
push
pop
mov
jb
sbb
loope
pop
popa
je
xchg
nop
test
aas
movhps
pop
inc
lods
js
push
adc
imul
in
fldcw
pop
cmp
icebp
mov
cmp
mov
push
aaa
stos
std
push
or
push
mov
push
test
je
jmp
push
out
nop
jns
mov
jne
fninit
adc
and
iret
mov
scas
and
add
pop
add
sub
adc
xchg
lods
js
fisubrs
and
sub
lds
inc
and
pushf
movsl
and
cmp
xlat
xchg
scas
xor
mov
or
push
int
leave
sbb
imul
adc
into
mov
je
sub
sbb
xchg
sub
arpl
cmp
in
mov
hlt
sub
push
lock
call
out
pop
in
call
das
je
push
add
cmp
test
arpl
pop
xor
stos
mov
mov
xor
dec
pop
jmp
std
pop
mov
mov
sub
scas
jno
fisubrl
mov
adc
jb
cmp
cmp
or
adc
call
cmp
movsl
mov
arpl
rolb
ss
jb
jns
xchg
push
std
inc
jecxz
xor
sbb
pop
adc
pop
sbb
jg
inc
dec
js
aad
sahf
cmp
outsl
leave
xor
xorl
pop
mull
pop
sbb
es
repnz
aaa
cmp
push
scas
sub
lcall
jmp
dec
jle
sbb
sub
sbb
mov
and
push
aaa
adc
fists
shrb
adc
dec
sbb
mov
movsl
cld
notl
rorl
pop
pop
sarl
inc
mov
jnp
in
nopl
jbe
push
cld
pushf
shrl
mull
idiv
sbb
mov
loop
or
cmp
mov
aaa
fwait
push
dec
and
cs
adc
movsb
inc
aam
mov
inc
mov
lret
lahf
push
daa
das
inc
mov
and
push
add
xor
dec
icebp
xchg
mov
dec
imul
ficomps
sahf
dec
and
push
push
mov
cmp
cld
idivb
jnp
pop
clc
out
fcomi
push
out
lcall
pusha
push
loop
aad
sbb
cmc
and
bound
inc
or
inc
aaa
lret
enter
addr16
sub
fsubrl
outsb
jae
dec
loopne
push
dec
enter
inc
inc
jo
js
pusha
jbe
add
mov
push
push
mov
ja
in
and
fcomps
mov
xchg
mov
bound
mov
jmp
dec
inc
shrb
jp
xor
lock
stos
loopne
add
mov
inc
or
mov
lret
push
lods
dec
mov
push
push
cmp
pop
mov
test
aam
and
and
mov
add
jle
rcr
out
mov
inc
cmp
scas
or
lret
outsl
cmp
nop
and
and
push
mov
cwtl
mov
mov
lods
add
fisubrl
out
push
insl
mov
add
std
out
add
or
loope
push
scas
in
shll
dec
lcall
out
loop
xor
scas
insb
into
test
push
scas
sub
repnz
inc
mov
imul
dec
jl
sbb
daa
movsb
xchg
sbb
push
cmc
dec
fdivl
pop
xor
lcall
rcrb
scas
or
fistl
into
js
sbb
std
mov
imul
or
and
rorb
shlb
outsl
mov
mov
sbb
mov
xor
fiaddl
scas
mov
push
fidivs
int
call
dec
adc
push
test
out
popf
mov
addr16
insl
jmp
imul
add
out
fadds
sub
mov
xor
jg
jbe
stc
aad
pop
aas
dec
fs
pop
jl
jmp
xchg
inc
xor
jns
rorl
adc
pushf
push
add
aam
int3
pusha
pop
xor
mov
cmp
mov
fadds
gs
repnz
fwait
gs
repnz
pop
pop
stos
rorb
inc
ljmp
pop
jg
outsb
push
dec
lock
in
in
cltd
sbb
pop
dec
push
jae
outsb
pop
aad
sbbl
fldl
xlat
jne
mov
ficoms
lcallw
inc
mov
mov
dec
pusha
lods
fwait
pop
push
test
imul
push
adc
cmpsl
xchg
add
pop
xchg
sti
xchg
dec
xor
jmp
loop
push
jle
pop
std
add
mov
mov
mov
jp
jmp
pushf
movsb
add
out
inc
repnz
repnz
mov
sbb
pop
dec
enter
and
mov
lcall
xor
testb
int3
pop
dec
xchg
lds
sub
push
mov
inc
mov
jg
xor
push
cmp
pop
shlb
cli
fildll
cli
popf
and
and
or
sbb
mov
mov
mov
mov
test
sarl
imul
insb
adc
outsl
mov
add
mov
inc
push
pop
fmul
pop
pop
adc
sbb
bound
xchg
outsl
xor
xor
xchg
jbe
xlat
int
pop
xchg
sub
pop
mov
pop
xchg
add
add
sbbl
fsts
mov
sub
punpckhwd
cltd
andb
lods
js
shll
lods
adc
pop
push
adc
pop
jmp
insb
dec
add
dec
repnz
iret
inc
inc
xchg
fs
imul
into
xchg
push
inc
movsl
inc
cwtl
pusha
test
mov
dec
push
je
mov
push
xchg
int3
mov
test
xor
and
jmp
pop
pop
sbb
mov
dec
dec
fmuls
jae
cltd
das
inc
dec
sbb
orb
jl
pop
and
aaa
data16
jecxz
stos
out
dec
mov
cmpsl
push
scas
mov
ljmp
test
pop
cmp
loopne
fmull
mov
sub
mov
sub
push
dec
shrl
test
sbb
cld
mov
fdivrl
movl
xor
lahf
and
cmpl
out
stc
push
out
cmp
pop
inc
scas
pop
sti
push
xchg
pop
push
push
in
xor
fistpl
lcall
aaa
and
push
stc
pop
icebp
and
cli
mov
xchg
rclb
mov
rcrb
push
fwait
sub
out
test
cmp
cltd
mov
aam
sbb
cltd
and
mov
push
movb
dec
subb
mov
push
lds
aaa
dec
ja
cmpsb
jge
xor
lock
jg
dec
adc
pop
jecxz
cmp
push
ss
lret
ficoms
inc
xor
mov
dec
and
incl
rorl
adc
jl
cmc
int3
insb
aaa
repz
and
adc
pop
std
stos
pop
sbb
les
mov
push
test
aad
daa
mov
mov
sbb
loopne
xor
sbb
mov
pop
dec
pusha
mov
push
xlat
sbb
in
mov
xor
popfw
cmpsb
das
insb
pop
mov
in
lods
push
inc
add
adcl
adc
cmpl
movsl
mov
sbb
push
mov
leave
dec
mov
mov
in
out
fwait
and
cmp
rcl
test
mov
push
push
ljmp
dec
xchg
lods
pop
fstpl
outsl
push
pop
add
test
test
dec
imul
ret
pop
pop
pop
cli
aas
mov
mov
sub
push
std
out
jle
mov
and
repz
xchg
and
call
jg
stos
push
cli
jle
not
jnp
std
loope
or
jnp
cld
or
jnp
lock
sbb
je
into
in
push
loop
or
xor
stos
xchg
pop
sbb
push
into
idivb
loopne
cmc
jae
mov
pushf
cmc
inc
pop
and
xor
mov
sahf
cltd
sbb
sub
and
cli
jg
sub
popa
lds
adc
mov
push
mov
mov
xchg
loop
inc
mov
lahf
aaa
cmpsb
add
andb
xchg
cwtl
mov
xlat
mov
mov
in
imul
cltd
cmpsl
loop
sbb
rorl
sub
push
fwait
divl
ljmp
push
cs
iret
in
cmp
mov
scas
movsb
mov
mov
lock
in
lahf
pusha
push
xchg
and
repz
popa
push
cmp
add
repnz
aas
pop
xchg
cmp
adc
lret
int
lahf
jge
outsb
adc
mov
fdivl
mov
xor
sub
test
mov
xlat
loop
imulb
ljmp
mov
lret
pop
and
int3
and
cmpsb
inc
push
xor
sbb
arpl
pop
mov
out
ss
sahf
sub
mov
inc
push
stc
les
sbb
pop
mov
push
pushf
cmp
xor
sarb
addb
add
nop
cld
mov
push
sbb
in
insb
mov
jne
jno
loop
mov
in
movsb
mov
js
mov
and
xlat
xor
mov
inc
mov
mov
dec
repz
mov
jnp
cmp
lcall
imul
inc
enter
jg
call
push
mov
xchg
mov
hlt
push
insb
pop
xchg
lahf
iret
pop
mov
or
daa
fcmovbe
scas
sbb
testl
cli
push
sub
iret
dec
pop
xchg
jp
insl
sahf
mov
insl
inc
std
push
adc
push
inc
inc
cmp
cli
pop
mov
jmp
lret
es
lahf
bound
push
or
pop
js
push
jecxz
jge
dec
loope
jmp
outsb
pop
jp
sub
cmpsb
mov
dec
cmp
mov
jle
jmp
inc
mov
dec
fiadds
mov
fwait
fnstsw
mov
nop
scas
mov
aad
adc
jmp
pop
and
mov
das
cmpsl
pop
and
ret
outsl
orb
outsl
push
and
inc
insl
jle
fwait
push
arpl
xor
xor
sti
dec
lods
mov
hlt
sbb
xor
dec
dec
and
fs
and
add
aaa
push
push
rorb
addl
add
and
push
es
push
shl
xor
mov
adc
inc
stos
lret
inc
mov
xchg
popa
cmp
addr16
call
dec
imul
ret
sbb
mov
xchg
test
xor
mov
cmpl
mov
int3
sub
and
aam
test
into
stc
jbe
cmc
mov
add
gs
callw
push
pop
int
xor
mov
xchg
and
sbb
jl
ret
popf
and
sbb
xchg
scas
pushf
inc
pop
cld
sbb
imul
cmp
mov
mov
dec
or
push
bound
mov
and
xor
or
insb
lret
call
out
cmp
xchg
out
sahf
mov
leave
push
jecxz
popf
repz
movsl
in
mov
inc
popl
movsl
stos
jmp
pop
xor
into
fisttpl
int
faddl
xchg
mov
cld
mov
adc
je
lea
push
rcrl
loop
int
jg
pop
mov
sub
adc
pop
hlt
push
jns
cmpsb
jbe
dec
stc
addr16
mov
out
pop
jl
stc
and
push
xor
pop
in
mov
cwtl
sub
lea
faddp
loopne
dec
dec
sbb
cmp
mov
cwtl
lret
or
or
mov
ret
or
mov
repz
push
push
aad
popa
sbb
add
ret
push
in
push
fstpt
push
sbbl
cmp
cmp
adc
mov
lea
jl
gs
out
loopne
mov
pause
test
jae
repnz
xchg
xor
js
sub
add
hlt
sub
in
ds
mov
fldenvs
sbb
mov
xor
jmp
jmp
fcmovnb
jge
arpl
sahf
in
push
xchg
and
mov
sbb
repnz
cmp
jns
push
mov
mov
cmp
and
xchg
mov
xchg
mov
int
inc
sbb
xchg
leave
jno
pop
sbb
outsl
les
sbb
loopne
lods
xlat
xor
fs
sub
lcall
pop
testb
in
std
aad
sbb
pop
xchg
jb
mov
push
or
jne
movsl
setle
push
push
pop
jne
cmp
sbb
mov
mov
xlat
bound
sbb
push
push
fists
scas
inc
cmc
jns
fldl
jbe
shl
push
cwtl
mov
orl
call
mov
or
stos
repz
xchg
pop
cld
loop
rcrb
outsb
pusha
mov
mov
insl
cmp
pop
jnp
clc
lahf
les
push
inc
in
dec
adc
jo
xor
jg
mov
insb
sbb
leave
pop
push
jne
pop
pop
mov
rcl
cmp
pop
hlt
pop
inc
out
or
or
xor
aad
lcall
dec
aam
xchg
cli
addr16
lcall
nop
sar
xor
sbb
and
dec
push
cmp
xchg
adc
jmp
mov
sub
pop
lock
pop
rcrl
inc
inc
fildll
push
insl
loope
inc
jnp
xor
xchg
stos
loope
xlat
cmp
ficomps
rolb
add
cmp
in
adcb
test
aad
jae
dec
add
lahf
lret
jmp
hlt
jge
pop
push
mov
or
fs
vmovsldup
pop
sbb
pop
and
mov
and
fists
inc
mov
stos
pop
xchg
nop
add
sar
vhsubps
cli
hlt
ret
inc
or
ja
mov
negb
lods
movsb
mov
enter
addr16
push
stos
sub
pop
jl
mov
sbbb
imul
mov
sbb
mov
loope
ror
mov
ret
cltd
mov
popf
mov
adcb
test
inc
ja
xchg
cmp
mov
jecxz
daa
in
lock
adc
push
cmp
mov
mov
push
sbb
cs
sti
int
mov
cmpsl
pop
int
test
xchg
mov
mov
push
notb
inc
push
icebp
iret
xchg
daa
nop
scas
pop
out
adc
jmp
out
dec
push
cltd
mov
cmp
loope
sub
aam
cmc
xor
lock
cld
sub
jl
inc
cmp
into
orb
xchg
out
xchg
inc
nop
orl
add
fsubrs
cmp
mov
or
lcall
pop
mov
mov
sbb
lret
enter
sub
outsl
inc
decl
pop
shll
nop
lods
js
mov
xorb
cmpl
xor
dec
dec
cmc
xor
mov
xchg
leave
scas
movsb
pop
mov
xor
repz
add
jg
mov
out
xchg
xor
or
lods
aas
mov
jmp
fstpl
push
xchg
adc
xor
xor
cmp
insl
sbb
xchg
pop
call
pop
xor
push
insl
ret
add
lds
stos
mov
into
push
cmpsl
mov
jnp
jo
popf
sub
mov
sbb
lods
mov
adc
and
dec
fstpl
jo
and
or
adc
mov
flds
pop
mov
adc
nop
bound
and
mov
ljmp
mov
popf
pop
fwait
xor
pop
imul
call
lahf
dec
subb
fcos
addr16
cmp
push
or
cmp
jl
es
pushf
cmp
ret
sti
adc
jns
into
pop
cmp
leave
pop
lahf
xor
adc
ds
pop
out
lcall
iret
in
lret
pop
aad
xchg
loop
lea
loopne
cmp
bound
leave
sub
add
mov
dec
ret
xchg
mov
movsl
out
sbb
sbb
lahf
or
inc
shll
mov
mov
jo
push
pop
sub
cwtl
jb
cwtl
lods
test
push
fdivr
test
mov
jecxz
divb
bound
jae
xor
add
in
popf
push
ret
fisttps
movsl
cmpsl
cmp
xor
int3
leave
jge
mov
in
mov
sbb
lds
popf
lea
rcrb
adc
loop
ja,pn
das
mov
push
sub
push
inc
outsl
or
loop
out
or
mov
sub
sub
rorb
jg
das
lods
push
loope
lds
in
fistpl
xor
arpl
pop
stos
addr16
cli
add
iret
out
icebp
sbb
cmp
in
mov
pop
test
or
movsl
movb
lea
push
jl
push
or
lret
mov
mov
mov
pusha
jbe
pop
mov
xchg
or
mov
add
insb
jo
ds
lcall
mov
outsb
inc
or
sub
pusha
add
mov
xchg
push
pop
xor
icebp
test
shrb
es
sahf
or
xor
mov
cld
in
jecxz
in
add
cmp
sbb
mov
repz
dec
subl
mov
sub
dec
inc
push
xor
and
pop
or
enter
popa
jle
adc
data16
cmp
scas
mov
test
jecxz
pusha
push
pop
and
out
sbb
das
enter
aam
imul
fsubrs
sbb
pop
dec
jl
int3
aad
push
fdivs
push
fwait
pop
jmp
cli
mov
outsb
sub
fidivrl
sub
jno
or
and
pop
fwait
sub
nop
dec
dec
sub
dec
nop
cmpsl
lods
xchg
jne
sbb
xor
xor
sbb
arpl
idivb
ret
inc
jb
mov
cmp
xor
inc
loope
pop
lock
sbb
mov
aas
add
or
cmpsb
leave
loopne
lcall
movsb
mov
fisubl
shrb
or
mov
dec
icebp
sti
popf
xchg
aam
lcall
rcll
inc
push
aad
jecxz
xor
xlat
mov
jno
add
btc
fmull
in
fcomps
lcall
jl
daa
loope
fmull
dec
shll
ljmp
pop
adc
js
hlt
dec
inc
hlt
push
cmp
jno
movsb
int3
outsl
jae
push
adc
mov
and
xchg
xor
jp
movb
xor
daa
mov
and
or
sub
push
jmp
fidivs
adc
xchg
jg
ss
jae
aas
jmp
outsb
ret
icebp
and
cmp
scas
push
mov
xchg
out
mov
fsubl
pop
rep
lahf
lret
lahf
push
cmp
inc
cmp
inc
xor
out
lock
xor
mov
jle
push
push
fs
xchg
mov
decb
addr16
sub
mov
sub
push
ja
cltd
xor
xchg
inc
push
dec
xchg
ror
sub
lock
in
cwtl
pop
into
lret
pop
or
push
scas
dec
aaa
xor
pop
mov
dec
test
sbb
fcmovu
add
js
cmpl
push
ret
popf
dec
and
dec
andl
mov
gs
fadds
jl
clc
lods
pop
and
dec
stc
sbb
clc
pop
mov
lods
cld
scas
and
repz
lahf
fistpl
xchg
in
inc
fisubrs
sub
fscale
mov
adc
mov
jns
orl
cmp
imul
shrb
sub
cmp
mov
sahf
sub
pop
push
fldenv
outsb
mov
gs
adc
cmc
out
or
nop
sub
or
cmp
sarl
xchg
hlt
add
out
mov
loopne
pop
iret
movsl
mov
es
mov
push
adc
repz
faddl
push
icebp
fisubs
jmp
dec
in
xor
mov
in
loopne
test
cs
pop
lret
cmp
clc
stos
neg
sbb
das
repnz
outsl
sahf
push
push
push
shrl
jecxz
sbb
lock
in
jmp
mov
and
and
in
fstp
icebp
xchg
in
or
mov
mov
mov
xlat
leave
jb
std
push
enter
pushf
mov
mov
decb
push
out
std
fsubr
repz
incb
aas
mov
pop
xchg
aam
mov
mov
clc
mov
iret
xchg
pop
std
fldcw
xchg
das
out
dec
mov
sti
add
ja
movsb
sub
mov
or
sbb
cmp
loope
sub
test
jno
and
mov
out
adc
or
out
push
test
rcrb
shrl
addr16
inc
cmp
pop
stc
test
fcmovbe
insb
inc
and
add
jno
rclb
out
mov
mov
push
insb
jne
mov
lods
and
lods
in
mov
mov
in
and
or
cs
push
mov
outsl
addl
sub
push
dec
inc
scas
lea
xchg
jecxz
lcall
stos
repnz
sub
jno
dec
dec
adc
or
or
cwtl
imul
or
stc
or
mov
mov
ss
or
sbb
jbe
inc
mov
sub
std
mov
jg
dec
outsb
inc
inc
mov
cmp
pop
repz
xor
jae
push
insl
movsl
dec
pushf
outsb
mov
xlat
iret
cmp
movsl
stc
mov
sti
pop
ja
jb
fwait
mov
dec
inc
jae
and
dec
daa
mulb
sub
insl
xchg
or
push
mov
mov
les
imul
mov
movsl
and
push
push
punpckldq
mov
xchg
stc
pop
adc
lret
and
bound
mov
mov
push
mov
cmp
pop
xchg
fdiv
xchg
adc
push
jb
jnp
push
push
xchg
insb
push
in
sbb
jp
and
xchg
decb
sbb
sbb
cld
mov
jge
sbb
or
cs
clc
in
loop
dec
lret
mov
and
addr16
and
add
mov
out
sub
lea
ret
mov
imul
repz
push
lahf
insb
std
jmp
or
scas
sub
std
pop
mov
cltd
jbe
outsb
xor
into
add
aas
push
mov
adc
sahf
cmpsb
js
adc
scas
xchg
pop
in
push
dec
divl
dec
pop
in
out
push
aad
cmovp
jns
jnp
dec
sub
add
xor
jne
mov
test
and
out
mov
loope
lret
test
dec
aas
pop
inc
and
cmp
arpl
dec
rcl
dec
jmp
shlb
adc
sbb
push
int
in
adc
sbb
cmpsl
dec
adc
mov
jns
aam
pop
add
cltd
sahf
hlt
outsb
gs
out
les
sbb
sub
fmuls
and
fisubs
mov
nop
cmpb
adc
lret
push
loopne
insl
cmp
and
in
xchg
arpl
movsb
fstpl
jecxz
pop
aas
xchg
out
inc
stc
dec
repz
sub
outsb
int
mov
push
stos
stos
std
mov
mov
lret
lret
sbb
jns
dec
add
add
add
jb
test
jge
dec
mov
loope
popa
push
jle
jb
pop
outsl
pushf
sarl
scas
sub
notl
ljmp
jno
sbb
arpl
cmp
cmp
mov
std
inc
push
out
xor
jge
mov
or
sub
mov
mov
mov
push
clc
sub
mov
adc
dec
in
jns
mov
nop
sahf
test
sarl
jg
inc
imul
jmp
in
imulb
xor
aam
cmp
rclb
adcl
sbb
stc
shrl
ss
mov
jns
sahf
imul
daa
and
repz
mov
xchg
mov
call
add
sub
test
std
popa
pop
jge
cli
stos
vpaddd
nop
inc
in
pop
pop
in
neg
adc
pop
ds
scas
xchg
pop
mov
movsl
dec
stc
in
jge
sub
mov
pop
mov
inc
dec
mov
icebp
xchg
arpl
lea
pop
pop
iret
aaa
in
mov
adc
scas
lahf
sbb
idiv
imul
add
mov
xchg
jmp
or
add
fcmovnb
cmc
adc
mov
stos
pop
adc
jl
sbb
jno
aas
dec
pop
decb
inc
xor
sub
mov
sub
mov
in
jne
addr16
or
mov
adc
nop
ficoms
lea
stos
sub
push
rorb
pop
test
add
icebp
dec
mov
shll
adc
inc
fsubl
test
imul
aam
xor
mov
cmc
pop
insb
hlt
mov
das
cmp
xlat
imulb
mov
ret
cmp
leave
iret
ja
sub
mov
into
clc
insb
fstps
fnstsw
cmp
or
ficoms
sub
adc
sti
mov
cmc
inc
xor
stc
outsl
popa
stos
sub
cmp
push
add
std
scas
xchg
dec
add
subl
in
pop
xchg
add
add
mov
mov
mov
nop
jle
xchg
test
adc
inc
fwait
mov
dec
mov
fs
out
or
stc
out
adc
sarl
ljmp
lea
gs
daa
jg
jo
test
mov
push
scas
cmp
mov
or
sbb
push
mov
icebp
enter
mov
add
cmp
mov
test
mov
mov
das
test
rorb
rorb
dec
rclb
pop
movsl
cmpsb
and
sbb
xlat
insb
mov
fnsave
js
add
jge
or
movsl
loope
fwait
mov
jmp
xor
jo
jle
push
rep
pop
mov
adc
cmp
mov
inc
aas
outsb
adc
pop
fstl
insb
jmp
iret
mov
hlt
loop
pop
lret
mov
fnstsw
out
aad
sbb
cmp
icebp
jg
jmp
mov
jns
fsubrp
xorb
sub
test
adc
cs
div
jecxz
inc
jb
mov
mov
divl
ja
xchg
sbbl
or
lret
fwait
lods
hlt
std
sahf
jmp
pop
cmp
adc
mov
in
fs
mov
stos
push
push
push
pop
pusha
movsb
out
mov
mov
hlt
mov
test
push
pop
fs
jae
cmp
test
cwtl
repnz
sbb
lods
call
sub
in
adc
cltd
sbb
sub
dec
xlat
or
mov
xchg
pusha
cmp
jecxz
in
in
nop
add
or
gs
cmp
cltd
mov
push
inc
jnp
mov
jmp
pop
into
mov
fdivs
push
sbb
mov
mov
lahf
xor
repnz
ret
rcrb
push
ret
movsl
cmp
nop
xor
jnp
cmp
dec
inc
cmc
mov
test
ds
mov
jno
imul
or
jmp
imul
mov
xor
or
and
pop
sbb
daa
mov
mov
inc
jmp
ss
push
push
stc
int
fmul
or
ret
jmp
test
aam
mov
call
test
movsl
xchg
jl
mov
inc
or
es
mov
bound
inc
fisubs
cmp
js
xor
jmp
ret
cmpsl
aad
or
icebp
xor
mov
sahf
cmp
fnstsw
sbb
xor
stc
cwtl
xorb
mov
push
ljmp
loop
fldl
stos
mov
pop
test
cwtl
mov
mov
cmpsl
loope
and
mov
mov
jno
shll
mov
xchg
jmp
pusha
mov
lock
ja
jae
ret
aad
call
mov
mov
jo
rorb
xlat
test
xchg
push
iret
dec
mov
lahf
mov
add
in
fcomps
xor
mov
sub
imull
lods
mov
ficoml
mov
sbb
das
push
shlb
ret
inc
ljmp
addr16
les
imul
outsb
lret
clc
or
and
mov
jcxz
out
std
xlat
jmp
push
cmpsb
fs
icebp
sub
mov
scas
addl
std
movsl
sahf
or
icebp
pop
gs
mov
mov
shlb
fsub
mov
cmp
addr16
or
repnz
or
stos
push
fisubl
cmc
mov
adc
mov
sahf
mov
jo
xchg
imul
mov
jge
pop
inc
arpl
lods
sub
mov
out
sbb
pop
or
dec
pop
sbb
fdiv
xor
inc
nop
lds
push
subl
lea
sub
mov
and
dec
data16
data16
jl
stc
mov
jle
cmp
xchg
out
in
mov
cli
in
cmpsb
insl
inc
js
or
sbb
ja
ss
pop
jecxz
jns
mov
add
mulb
xchg
lahf
lret
testl
out
pop
loopne
xchg
test
dec
mov
movsl
in
sbb
es
notl
ljmp
data16
xor
pop
mov
aad
xor
adc
jge,pt
cs
stos
scas
sbb
fists
fimull
cmp
cli
jmp
nop
or
loope
sbb
movsl
rcrl
xchg
fwait
xor
cmp
cld
sub
pop
xlat
cmp
xlat
fistl
xlat
and
cmp
lock
lea
cmp
sbb
add
test
mov
pop
stos
nop
sbb
fimuls
jmp
cmc
sub
jne
add
sti
mov
into
sbb
or
jg
lea
orb
dec
xlat
into
mov
cmp
push
pop
xor
in
daa
ljmp
xchg
adc
test
inc
sub
insl
popa
sbb
scas
sub
cs
loopne
inc
or
mov
dec
into
jnp
pop
mov
mov
mov
sbb
inc
jne
inc
ficompl
fcmovnbe
out
or
push
mov
les
push
mov
repnz
jecxz
nop
in
movsb
inc
mov
rorl
ljmp
add
xchg
rclb
xchg
loopne
inc
push
cmp
lds
pop
pop
jo
in
push
pushf
repz
cmc
cmc
mov
aaa
roll
imul
dec
mov
cld
mov
push
movsb
je
aas
xchg
lahf
xlat
pop
jmp
outsb
adc
mov
leave
mov
inc
int
les
or
in
cmpl
cmc
aam
xchg
lods
inc
rol
or
pop
jle
pop
inc
mov
insb
in
xchg
and
mov
dec
xor
push
sub
and
and
add
push
mov
aas
les
sub
fwait
imul
out
mov
mov
sub
mov
fstps
and
jb
leave
out
ret
jl
xchg
mov
lahf
pop
add
inc
dec
test
pop
and
movsl
push
mov
dec
sbb
pop
sub
scas
inc
idivb
test
iret
pusha
cmp
cld
insl
test
adc
mov
and
adcb
scas
push
inc
in
out
sbb
outsb
mov
xchg
mov
pop
push
mov
xchg
ss
fisubs
jbe
sbbb
push
jp
sub
dec
ror
and
sub
loopne
sub
jns
mov
gs
add
pushf
jns
subl
push
pop
stos
sti
jno
inc
xchg
jl
jbe
lea
xchg
jmp
mov
inc
mov
adc
imul
fisubs
es
daa
dec
fcoms
gs
adc
imul
mov
fmul
mov
cmpsb
push
pop
cmp
push
sub
xchg
push
les
mov
push
dec
shlb
push
jmp
shl
cmp
dec
mov
fisttpl
jg
stc
mov
jg
fisubrl
in
cwtl
loopne
int
jb
mov
adc
sub
stc
mov
adc
pop
cli
test
arpl
fxch
dec
cmpsl
lahf
mov
int3
out
cmp
mov
js
dec
sti
rol
pop
enter
fs
ljmp
sub
push
in
and
stc
mov
xor
rcrl
pop
push
fistpl
pop
and
adc
inc
mov
mov
push
cmpsb
xchg
mov
or
dec
mov
cmpl
dec
add
scas
mov
imul
ss
sbb
xor
xchg
lcall
sub
rcrl
sub
rorb
push
adc
pop
test
dec
or
push
inc
pop
cmp
sbb
mov
test
sub
sahf
test
dec
pop
jno
lds
and
fisubrl
push
xchg
mov
cwtl
mov
fistpll
sbb
adc
clc
xor
dec
adc
mov
add
push
mov
loope
addl
adc
xchg
js
ljmp
dec
mov
mov
in
jns
xor
cmp
movsl
and
nop
stos
sbb
aad
dec
mov
or
jb
mov
jge
ret
add
push
aaa
cmp
mov
jl
xchg
xor
fstpl
inc
sbb
iret
mov
adc
adc
nop
xor
push
sarb
mov
adc
or
subl
inc
dec
jb
icebp
cwtl
aam
jno
adc
je
int
mov
mov
mov
loopne
cmp
mov
xor
test
addr16
mov
aas
add
inc
mov
add
cmp
sub
das
xchg
mov
jno
clc
imulb
dec
fdivs
mov
xchg
loopne
sbb
ret
or
fistps
push
xor
mov
sub
sub
rolb
loop
sub
cltd
push
cld
jne
inc
nop
sbb
pop
push
fcmovnb
inc
stos
mov
jbe
jno
pop
jb
cmp
jecxz
push
xor
scas
xor
stos
aam
push
push
jge
inc
ljmp
out
jp
xchg
shr
inc
loopne
fwait
imul
les
ret
mov
pop
out
into
mov
or
iret
and
imul
lret
mov
push
shll
dec
xorb
mov
imul
aam
and
push
imul
scas
mov
daa
jmp
cmp
adc
pop
jl
dec
mov
int
mov
jl
dec
dec
insl
sub
daa
add
pop
push
push
out
mov
adc
mov
dec
sub
jle
stos
pop
jo
testl
lret
xchg
mov
data16
push
push
add
push
outsl
cli
add
hlt
and
dec
or
lea
aas
clc
nop
ds
sub
mov
gs
jg
clc
mov
out
lods
mov
inc
xchg
out
cmp
sbb
mov
mov
faddl
lea
mov
mov
cmc
daa
cltd
imul
clc
js
out
mov
loop
push
fwait
int3
xchg
fldt
cwtl
mov
lahf
sbb
pop
shl
dec
andb
scas
cwtl
jge
cs
lcall
fs
mov
clc
clc
mov
lea
loop
shr
adc
in
scas
mov
stc
icebp
scas
push
pop
aam
into
int3
push
dec
or
je
lret
pop
movsl
stos
mov
mov
jg
cmp
cmp
aam
mov
loopne
fcmove
add
pusha
popa
xchg
xchg
cmp
cs
and
jmp
lods
sub
sbb
fwait
out
mov
add
iret
and
xchg
cwtl
push
sub
outsl
fnstcw
jecxz
test
lds
test
mov
sub
sub
lcall
inc
xchg
mov
mov
test
xchg
sahf
or
sub
fildll
jge
fcomp
out
push
pop
fistpll
and
int3
fiaddl
mov
in
mov
fcmove
cmp
hlt
aas
mov
sub
jo
jae
mov
imul
xor
nop
dec
dec
dec
xor
sbb
into
cs
xor
jp
adc
repnz
lods
cwtl
add
add
sub
imul
mov
jle
test
mov
shr
push
aas
pusha
push
movsb
push
nop
and
mulb
mov
shrl
xor
or
cmc
outsl
daa
fstpt
xchg
aaa
sub
cmp
jae
nop
mov
cmp
cmpsb
fidivrl
mov
in
jns
xchg
or
lods
sbb
push
dec
xchg
jecxz
ret
jp
add
jecxz
cmp
addr16
rcrb
rol
pop
mov
dec
test
inc
clc
jecxz
push
jl
in
pop
out
sbb
push
sub
movsl
insl
arpl
out
mov
sahf
jg
loopne
lds
or
call
and
mov
mov
pop
adc
in
stos
mov
mov
nop
and
gs
dec
stos
mov
mov
inc
lret
push
es
adc
pop
imul
stos
loope
cmp
adc
test
addl
inc
cmp
xchg
push
jle
push
lea
jo
mov
push
rcl
gs
xor
push
pop
pop
lock
mov
sub
std
dec
ret
fimull
ret
adc
adc
jmp
vphadduwq
outsb
jecxz
scas
dec
cld
pop
xchg
cld
insb
shr
imul
arpl
in
in
jbe
xchg
int
pop
and
mov
ja
addr16
lock
ss
dec
jbe
pushf
add
sub
and
outsb
stos
mov
jge
pop
push
rcrl
sbb
mov
cmp
xchg
pop
sub
sbb
sub
inc
rolb
sbb
jae
xchg
cmpsb
dec
inc
sub
pushf
call
mov
outsl
mov
loopne
rorb
in
das
pop
out
out
and
ffree
inc
sub
daa
bound
leave
inc
icebp
sbb
in
loopne
bound
push
test
enter
ret
dec
pop
jecxz
mov
out
jb
imul
mov
stos
push
mov
out
sti
insb
movsb
loop
mov
shlb
in
stos
pushf
bound
notl
out
out
mov
mov
fnstenv
repz
in
pusha
popa
sti
xorb
sub
adc
pop
nop
ficoms
outsb
dec
mov
jnp
stos
jl
or
mov
ret
std
adcl
and
repnz
cs
hlt
mov
scas
int
xor
lahf
pop
xor
mov
incb
int3
pop
sub
bound
jge
scas
dec
fstl
dec
cmp
lahf
mov
pusha
adc
sbb
fcmovbe
mov
gs
push
xchg
mov
xchg
ds
repnz
mov
outsl
mov
jb
stc
mov
cmp
or
repz
into
or
cwtl
push
xor
lea
loope
rorb
jg
jno
mov
cmp
push
and
mov
xor
clc
jmp
in
imul
in
lcall
mov
xor
pop
xor
push
cmp
pop
mov
lods
decb
adcl
in
pop
jno
cmp
lahf
fnstcw
repnz
inc
mov
loope
sarb
mov
adc
sub
fstpl
sarl
pop
cmp
cmp
jmp
cmpl
mov
movb
testl
push
leave
fsts
cmp
sbb
inc
dec
mov
int3
notb
pop
jbe
push
xchg
lret
adc
sub
arpl
mov
jno
call
cmp
fs
movsb
adc
pop
mov
inc
roll
test
jae
ret
mov
sub
push
mov
pop
push
mov
pop
xchg
push
imulb
cmc
lods
jo
xchg
cmp
mov
mov
fstps
outsl
into
cmp
mov
clc
mov
mov
adc
sbb
mov
mov
pop
ja
push
shrb
fdivrl
out
xchg
jmp
int
scas
sub
jmp
xchg
inc
rclb
rorl
movsb
testb
in
jae
jnp
fstpl
cmp
pop
leave
movsb
mov
pop
gs
daa
jmp
adc
dec
fcmove
test
repz
mov
fcmovnu
fwait
or
insl
leave
fsts
arpl
jne
lahf
ds
fsubrl
add
cmp
bound
pop
push
lret
sbb
jb
int3
loope
pushf
xchg
inc
sub
imul
xor
test
adc
jo
iret
test
xor
out
dec
pop
movd
mov
lods
inc
jl
and
pop
add
leave
xchg
push
xchg
mov
xchg
sbb
or
xchg
lods
std
cmp
push
pop
pop
aam
shrb
inc
mov
mov
lock
pop
jmp
call
aaa
and
fs
mov
adc
or
push
dec
cmp
inc
sub
lcall
fdivrl
movsb
addb
sbb
jge
inc
jecxz
loop
jl
pusha
fidivl
cld
jecxz
push
mov
mov
iret
or
popa
add
sub
int3
fistps
xor
add
mov
int
dec
xchg
jne
adcb
inc
andl
test
pop
pop
mov
out
in
fwait
lock
xchg
cmpsb
mov
test
aaa
fdivl
sub
and
outsl
inc
sub
jbe
jne
mov
adc
inc
outsb
hlt
js
daa
mov
cmpsb
xchg
insl
bound
jae
inc
pop
sbbl
inc
dec
jmp
push
in
push
int3
pop
and
movsl
mov
aaa
mov
cmp
mov
mov
pop
cmc
pop
imul
ret
mov
xchg
test
popa
popf
mov
and
ret
rcrb
dec
into
pop
aas
mov
das
cs
xor
jp
test
repnz
pop
int3
mov
testb
repz
dec
and
or
lcall
mov
imulb
push
xchg
not
sar
pop
pusha
xor
adc
aas
dec
jae
sub
mov
rcrl
pop
push
and
sbb
fisttps
leave
out
enter
out
jge
nop
jl
add
dec
lods
jmp
fmuls
lock
jle
sbb
mov
cmp
aam
loope
scas
jecxz
add
xchg
test
loop
mov
ficoml
mov
test
add
sbb
mov
rcrl
xchg
orb
jno
xchg
cmpsl
pop
mov
je
xor
aam
jl
dec
jmp
pop
pusha
insl
push
dec
dec
mov
stos
mov
scas
pop
addr16
cmc
and
xchg
mov
push
lret
iret
cmp
loope
and
in
fwait
mov
push
inc
cmp
push
xchg
loop
js
cli
test
ds
xor
test
ret
cmc
sub
aam
inc
push
ret
std
mov
mov
xchg
xchg
clc
loop
rcll
xor
jp
sbb
push
add
out
xor
mov
pop
sbb
in
scas
mov
stos
inc
and
test
cmp
jl
test
pop
inc
inc
cmp
cmp
pushf
xor
fwait
mull
pushf
inc
xlat
ss
jb
or
xchg
ds
cmp
mov
mov
sbb
sub
and
lea
dec
leave
loope
pop
into
mov
mov
cmp
jns
sbb
jmp
mov
pop
or
cmpsl
mov
pop
outsl
movsb
int
out
sbb
xor
pop
sub
adc
in
sub
pop
sbb
sub
push
int
xlat
icebp
ja
mov
lret
lods
cmp
sbb
mov
and
test
adc
orb
or
pop
mov
push
dec
call
mov
cpuid
xor
repz
and
stos
ds
in
data16
lock
fists
pop
fidivs
inc
inc
mov
push
cmp
cmc
movsl
push
testb
mov
and
in
mov
or
std
add
fisttpll
and
mov
nop
lret
add
cs
push
push
push
mov
and
mov
and
stos
in
mov
xchg
sbb
or
out
xor
sbb
adc
lret
add
iret
push
push
enter
add
sbb
scas
sbb
pusha
jb
xchg
pushf
cmc
sti
cmc
insb
mov
pop
pop
or
mov
leave
cmp
cmp
mov
xor
jle
or
fcomps
sbbl
add
or
xor
scas
dec
leave
dec
ljmp
or
repnz
cmp
andl
xchg
lahf
xchg
sahf
outsl
cmp
ss
xlat
clc
insb
push
popf
nop
xor
lods
mov
push
mov
aam
ret
push
push
lods
and
ja
xchg
and
cwtl
xchg
int
imul
lods
outsb
notb
rcrl
out
mov
mov
mov
test
das
pop
cmpl
mov
sahf
push
pusha
leave
ret
mov
ret
push
addb
and
or
arpl
inc
data16
leave
mov
and
or
mov
data16
in
sbb
sbbl
add
push
add
add
or
pop
add
jo
lock
inc
andb
mov
addb
out
je
or
adc
push
nop
popf
out
push
xchg
aaa
rorl
adc
negl
lret
scas
cmp
lsl
xor
out
sbb
arpl
mov
xor
int3
dec
cltd
cmp
iret
jb
push
dec
fcmovnu
xor
xchg
adc
pop
iret
dec
rcl
mov
int
fwait
cmpw
sub
xchg
out
fisttpll
pop
imul
pushf
mov
lret
bound
xorl
sbb
push
adc
mov
inc
scas
and
fisubrl
hlt
sahf
jns
mov
sbb
cmc
lock
and
in
xchg
mov
adc
jns
inc
popa
inc
dec
and
es
dec
sub
sbb
push
mov
repz
outsb
enter
cmp
xchg
outsl
dec
shrb
cwtl
fsubs
fildll
lcall
lea
and
or
push
pushf
out
or
cmc
dec
jmp
sub
scas
imul
mov
add
vpmaxub
xor
mov
aas
dec
popa
into
jmp
cld
push
cld
inc
mov
stc
push
or
bound
scas
insl
inc
adc
and
dec
fisubs
push
sbb
scas
mov
fsubr
sti
mov
jmp
inc
inc
inc
out
lods
bound
xchg
jmp
ja
lret
or
add
out
and
or
and
subl
mov
pop
mov
jecxz
lret
add
cmp
xchg
icebp
sub
push
pop
xchg
ror
cmp
insb
repz
push
or
test
push
jmp
pop
pop
xchg
push
dec
mov
mov
mov
adc
call
aaa
dec
jb
stos
mov
push
xor
daa
mov
repnz
jle
mov
iret
cltd
sbb
pop
or
push
rorl
cmp
mov
fwait
inc
repz
nop
sbb
lcall
outsb
fs
mov
pusha
adc
stos
std
ja
sub
adc
cmp
stc
loopne
ja
jns
lcall
dec
jl
adc
lahf
adc
jno
insl
cmpsb
sub
jb
xorl
pop
sub
movb
sub
subb
nop
inc
jmp
or
insl
and
outsb
out
and
inc
repz
pop
lods
mov
arpl
push
cmp
jnp
pop
cmpsl
mov
fnstcw
mov
jbe
push
int3
cltd
add
cli
sub
add
mov
insb
in
aas
xor
add
pop
or
jbe
jno
jns
pop
jb
dec
pop
pop
movsl
fs
pop
int
lahf
add
jo
mov
addr16
xor
dec
les
and
outsl
and
adc
test
jbe
push
je
inc
icebp
addl
stc
test
and
in
out
std
jle
in
jae
cmpsb
xchg
xorl
dec
insl
repz
nop
daa
and
mov
mov
movsl
loope
les
inc
adc
inc
in
jge
dec
aam
mov
mov
popf
sbb
das
rolb
xchg
mov
addr16
inc
dec
push
sbbl
cmp
frndint
sbb
push
xchg
and
addl
mov
mov
add
sub
dec
sbb
and
mov
cltd
cltd
add
jae
ljmp
cmp
mov
adc
mov
stc
mov
adc
xchg
jbe
xor
mov
and
pop
jb
jp
push
pop
jnp
pop
lods
daa
xchg
dec
test
jl
movsb
jnp
and
fwait
adc
insl
data16
into
les
xchg
push
add
test
dec
lock
fidivrl
out
les
jno
sub
jnp
loopne
push
jnp
mov
add
xor
xchg
js
mov
dec
inc
push
push
popf
adc
jno
push
ja
mov
lcall
push
or
push
sahf
dec
pop
sub
adc
ds
stos
fdivrs
aad
jae
add
lahf
dec
adc
xor
pop
mov
cmc
xor
les
xchg
fstl
jnp
inc
push
aam
dec
push
pop
sbb
mov
jae
out
jle
aad
cmp
arpl
xchg
loopne
cmc
mov
jge
cs
push
outsb
push
call
add
daa
out
cmpsb
add
mov
out
jmp
scas
xchg
das
pop
fists
fstps
xor
xor
leave
fst
add
inc
in
aas
xchg
addr16
movsb
cmpsb
or
in
roll
sbb
movsl
fcoml
aam
dec
fisubs
xchg
xor
shrl
int3
push
insl
and
sub
js
daa
jno
jp
aad
pop
out
mov
jne
sub
lock
bound
mov
nop
pop
imul
fstps
gs
adc
and
xlat
fs
mov
or
js
xor
sub
loop
add
jmp
nop
add
pop
fstps
xchg
shrl
sbb
in
push
push
lods
jle
je
jbe
data16
sub
dec
mov
scas
pop
or
ret
pop
mov
xor
inc
xor
inc
add
mov
push
xlat
mov
int
loop
aam
inc
fwait
push
mov
push
cld
dec
mov
mov
enter
popf
stos
push
adc
icebp
cmpsb
jmp
cwtl
dec
xchg
aad
out
jmp
jnp
cmc
inc
imul
fwait
xor
es
repz
mov
xor
cmp
test
jle
ljmp
add
aad
fcomps
lock
and
xchg
jne
mov
jns
cmp
sub
std
mov
push
sub
lcall
xchg
sub
mov
mov
pop
or
pop
xor
xchg
lock
sbb
les
pushf
ficomps
dec
jne
mov
pusha
pop
mov
cmpl
xor
bound
hlt
mov
ds
jne
dec
fs
inc
mov
xchg
scas
mov
imul
push
out
mov
jae
adc
xchg
mov
push
out
rcrb
inc
lds
mov
popa
lods
push
or
push
out
mov
pop
mov
mov
lret
inc
pop
aam
cld
pop
push
out
in
adc
push
jmp
fnstenv
cs
inc
mov
sub
mov
sbb
mov
imul
gs
leave
push
jmp
push
jge
pushf
lcall
scas
sub
add
cmpsb
daa
fmull
sarb
jb
adcl
int3
xor
mov
cmp
pop
xchg
adc
popa
scas
shll
fiadds
in
and
mov
sub
outsl
mov
cld
int
inc
push
addr16
jp
ret
into
cli
rclb
out
xchg
xchg
mov
test
add
adc
adc
cwtl
cmp
sarl
jb
cs
in
lret
fsubl
aaa
jb
fadd
mov
test
and
bound
mov
mov
jbe
dec
or
adc
mov
addl
imulb
adc
xchg
add
loop
ret
pop
xor
xchg
lods
loope
stos
pop
add
xor
dec
repnz
jmp
stos
push
mov
push
stos
cwtl
push
cmpsb
std
or
cmp
inc
ret
loop
mov
cmp
rorb
das
lret
and
daa
mov
ret
xchg
mov
mov
mov
xlat
cld
or
stc
and
xor
push
xchg
in
enter
push
mov
cmp
ret
insb
sbb
test
xchg
lret
les
ret
mov
xorb
or
fsts
cltd
xchg
stos
insb
aad
push
in
push
mov
cwtl
addr16
xor
dec
or
mov
sahf
pop
mov
mov
loope
sub
pop
fmulp
test
inc
sub
les
adc
cmp
xor
mov
gs
int
mov
fmull
lods
shl
sti
outsb
sbb
loope
daa
pop
xchg
js
xor
inc
pop
dec
mov
push
mov
icebp
sbbb
arpl
shlb
sub
push
subl
or
les
mov
into
and
adc
push
xchg
add
sbb
sbb
cmp
arpl
mov
sub
js
push
push
pop
and
cmp
js
nop
pop
ds
dec
lahf
sbb
mov
xor
cmp
mov
sub
in
das
mov
lret
loope
pop
mov
int
repnz
add
xchg
lahf
stos
imul
nop
and
es
mov
xor
lock
out
xchg
ret
inc
lods
pop
sbb
sub
insl
xor
lods
fwait
cmp
mov
and
or
aas
xchg
pavgw
cmp
lods
and
cmp
rcr
inc
dec
inc
les
lcall
pop
jecxz
sub
pusha
sbb
xchg
pop
ss
aaa
fcomi
mov
ds
arpl
insb
loopew
sub
repz
push
jno
jo
push
jmp
mov
aad
shll
add
sub
imul
std
scas
mov
cmp
cmpsb
arpl
and
sub
outsb
cld
sbb
push
cwtl
push
cwtl
xchg
gs
ds
movsl
fmul
push
cmp
inc
push
lock
push
int3
rcrb
scas
sbb
sub
jl
ljmp
xor
lds
xchg
xchg
call
lods
xlat
aam
xor
push
loope
sbb
add
mov
movsl
out
sbb
data16
divl
movl
dec
jnp
xchg
sbb
dec
aad
movsl
or
popf
sti
jg,pn
sahf
push
negl
fbstp
mov
or
mov
cmp
sub
daa
in
sub
push
insl
lret
push
imul
pop
push
daa
in
aam
jae
outsl
bound
gs
stc
or
adc
fstps
mov
sub
adc
inc
pop
aam
or
sbb
enter
adc
stos
or
outsb
and
xchg
mov
enter
out
sbb
fnstsw
fwait
fs
pop
jl
sub
mov
jp
cmp
push
dec
jle
push
iret
xchg
cmp
xchg
add
mov
test
bnd
gs
cmp
jecxz
int3
mov
js
aaa
or
mov
addr16
es
jo
pop
sbb
rorb
adc
cmc
pop
sub
pop
outsl
cmp
lret
jle
and
pop
add
out
jp
push
push
movsl
insl
mov
cmp
sti
lahf
add
add
mov
push
test
sahf
mov
imul
add
test
mov
int3
cmp
xor
nop
ja
mov
mov
outsl
es
iret
xor
notb
pop
hlt
inc
dec
adc
jecxz
aad
aam
out
cmpsb
scas
and
jnp
cli
sub
jno
adc
scas
leave
mov
pop
sub
and
xor
syscall
mov
and
imul
push
sti
or
out
mov
nop
ret
xor
into
mov
movsb
and
or
movsl
cmpl
xchg
aaa
mov
jg
leave
call
leave
nop
mov
mov
pushf
mov
or
arpl
dec
cmp
cmpsl
jl
xor
jno
std
das
push
mov
mov
popf
in
cs
mov
or
cld
jb
xchg
mov
test
ja
dec
sub
insl
mov
mov
cmc
dec
out
pop
mov
push
mov
repnz
clc
in
push
sti
or
mov
mov
shlb
add
sub
movsl
mov
or
cmpsb
out
push
xchg
push
cli
push
hlt
add
lret
xor
roll
sbb
mov
jmp
in
mov
sub
cmp
imul
adc
or
or
add
mov
mov
jmp
stos
sahf
je
lds
add
sbb
hlt
jne
mov
clc
das
xchg
inc
pop
mov
ss
or
and
mov
enter
cmpsl
xchg
or
arpl
or
cltd
xchg
mov
push
cmpb
std
inc
xlat
cmpsb
gs
jne
mov
add
inc
mov
mov
cmp
faddp
pusha
inc
imulb
cmp
outsl
cmp
lret
sbb
insb
ficoml
inc
inc
andb
ds
lods
sbb
hlt
xchg
adc
inc
icebp
lret
push
clc
push
call
mov
dec
xchg
pop
shl
inc
data16
push
stc
loopne
outsb
dec
rol
fldt
xor
fnstsw
jbe
fcmovu
icebp
cmc
sbb
out
mov
out
xor
sub
pop
jnp
aaa
lods
add
lods
and
fs
cmp
adc
daa
stos
cmpsl
ret
aas
sub
cwtl
cwtl
test
sbb
les
setl
dec
aas
push
pop
lcall
inc
and
sub
stos
fwait
movsb
daa
cwtl
call
ljmp
mov
aad
or
or
aam
push
mov
leave
jmp
mov
and
pusha
mov
pop
nop
cmp
sbb
push
sbb
and
xorl
nop
sub
repz
mov
adc
repnz
and
insb
sub
or
add
fnsave
sub
je
lds
stc
pop
add
push
mov
and
ja
test
xor
mov
xchg
add
push
in
popf
rorl
mov
or
fidivs
dec
subl
enter
or
xor
xor
cld
fs
call
insl
jp
mov
xchg
sub
stc
sub
fnsave
mov
sbb
jns
rcr
lea
mov
bound
push
outsb
xchg
dec
lcall
imul
aad
cs
int
push
movsl
xlat
xor
and
mov
popa
mov
inc
pop
jl
xor
icebp
pusha
add
roll
divb
cltd
cmp
push
inc
pop
movb
pop
in
dec
lea
push
scas
and
jb
cwtl
int
cli
dec
pop
outsb
mov
subl
cmp
notl
int3
fisttpll
aaa
ja
aaa
outsb
cmp
aad
sbb
out
int
imul
cltd
test
sti
rolb
into
int
lahf
not
cwtl
mov
out
decl
xchg
insb
push
aam
imul
fs
sbb
mov
cmp
std
mov
xlat
addb
pop
popf
sub
and
ss
icebp
jge
and
and
out
nop
mov
add
int
cmp
mov
xchg
out
jno
dec
adc
incb
push
cmpsb
mov
dec
hlt
cmp
lea
push
fiaddl
xchg
ficoml
roll
jl
mov
ud1
jb
cmpsl
sub
ja
jno
lret
fwait
mov
jo
cld
gs
stos
or
int3
loop
cmpsb
cmpsb
out
xlat
arpl
dec
sti
jecxz
mov
repz
test
xchg
pop
fistpl
sub
adc
sbb
add
fdivl
xchg
jb
inc
sbb
in
cld
popf
jno
or
in
mov
jp
out
or
push
loop
dec
jo
loope
addb
inc
dec
cmp
and
jo
xor
pop
cli
mov
xchg
iret
push
xchg
dec
inc
mov
mov
nop
jae
mov
mov
xor
aas
jbe
inc
lcall
aas
mull
cld
push
xchg
dec
adc
xchg
pop
in
or
jg
inc
dec
pusha
jge
arpl
cmp
daa
sub
dec
mov
nop
loope
mov
xor
cmpsl
int3
sbb
movsb
pop
out
pop
xor
divb
xor
sub
les
iret
push
mov
loopne
es
xor
lahf
and
pop
out
push
mov
insb
shr
pop
mov
adc
test
push
xchg
repnz
popa
push
pop
dec
test
aad
ljmp
mov
mov
jo
fstp
out
nop
jmp
idivb
dec
ljmp
push
mov
jge
and
sahf
jbe
rol
add
out
jle
jae
fldt
sub
in
fcompl
cld
add
mov
or
mov
fiadds
jmp
mul
lds
dec
fs
adc
mov
jb
adc
jmp
dec
das
mov
ljmp
mov
mov
cltd
sti
mov
std
fucomp
loope
pop
int
jle
imull
mov
in
inc
imul
dec
leave
sub
in
gs
mov
adc
imul
sbb
pusha
xchg
aam
hlt
sti
sbbl
jmp
insb
std
jne
xor
pushf
mov
xchg
push
out
xchg
outsb
mov
adc
shrl
movsl
xchg
inc
aaa
cs
jb
loopne
cs
push
and
dec
das
dec
push
popf
mov
ret
cld
xchg
divb
jle
arpl
pop
pop
rolb
outsl
jb
in
mov
pop
orb
cmc
inc
sbb
jbe
dec
mov
and
std
cmpsb
xchg
sub
jo
movsl
or
jbe
rclb
fistps
cld
arpl
lcall
push
in
jmp
add
lds
or
pop
outsb
inc
jb
push
into
cmp
lods
push
sbb
pop
mov
mov
cmpsl
or
aam
cli
in
sbb
and
call
loopne
push
test
std
insb
cmp
out
std
xlat
lret
push
and
push
pop
sbb
lds
xor
jge
xor
push
cld
icebp
add
add
aaa
or
dec
jae
and
sbb
cltd
xor
mov
shrb
rorb
test
add
push
les
fincstp
xor
out
mov
hlt
andl
fisubs
fs
pop
and
shrb
lea
dec
popa
movsl
les
inc
lods
inc
jl
iret
nop
sub
jne
jbe
push
mov
rolb
fdivr
daa
fiaddl
or
das
or
push
lret
inc
scas
pop
jb
outsb
mov
lret
xchg
popf
xor
in
pushf
xor
in
andps
jo
pop
xchg
shlb
shrl
sbb
sub
lret
sti
in
push
je
xchg
in
push
shrb
fsubrs
cld
pop
addr16
cmc
sbb
daa
jbe
dec
repnz
int3
add
mov
sbb
xlat
sub
xlat
mov
movsb
lret
and
jmp
sub
std
cmp
xor
sarl
add
repz
dec
cmp
in
sbb
scas
movsb
test
shrb
cmp
out
push
std
in
jmp
pop
xchg
aad
mov
fs
xchg
cmpsb
cmp
mov
incl
jns
sti
fisttpll
lret
test
inc
daa
and
sbb
daa
movsb
fcoms
ret
ficompl
lret
sub
and
mov
packuswb
cmp
xchg
shll
daa
fsubr
loopne
mov
push
adc
outsl
mov
sbb
sahf
bound
mov
stos
and
or
jmp
mov
inc
mov
push
sub
imul
fwait
stc
fsubp
mov
cmc
dec
mov
xor
or
fnstenv
inc
std
lds
loope
nop
loope
lds
mov
jns
mov
into
sbb
inc
mov
lret
in
lcall
and
sbb
ja
ficoms
or
jge
test
aam
push
rol
in
pop
loope
mov
loop
fs
push
sbb
rcrb
add
popf
aaa
int3
pop
add
pop
inc
aam
movsl
adc
inc
mov
lods
xchg
scas
testb
mov
push
inc
mov
mov
insb
xor
xor
jle
aas
fidivl
into
fnstsw
dec
cmp
fdivrs
sbb
dec
enter
imul
add
pushl
sbb
jge
mov
cmpsb
mov
pop
sbb
popf
mov
std
testl
sbb
mov
repz
inc
lret
lcall
push
loop
adc
add
xchg
cmc
into
mov
les
jp
push
jo
hlt
lods
std
xlat
jge
cli
addb
jno
mov
mov
jb
lret
je
sub
cli
out
xchg
scas
call
jbe
push
ss
xchg
sbb
jmp
pop
inc
jle
das
xor
fs
and
xchg
lret
or
cmpsb
mov
ret
adc
sbb
hlt
enter
jge
mov
in
push
cld
jno
stc
xor
or
mov
adc
jp
call
adc
adc
xor
cmc
das
lods
ss
dec
imul
pushf
fnsave
movsl
lock
popf
jnp
sbb
inc
vpmovzxbq
repnz
mov
dec
das
lcall
cltd
adc
insl
xor
adc
dec
jp
mov
cmp
movsl
ljmp
int3
fistpl
cmpsb
adc
cmpb
dec
mov
jge
fs
test
cmp
mov
nop
fcomps
je
xchg
mov
lahf
stos
sub
push
aaa
popf
jbe
popa
pop
imul
push
or
lcall
sub
mov
ljmp
ss
lret
fwait
cli
orb
inc
rcl
adc
test
sahf
dec
repz
sarl
aas
div
imul
in
dec
add
pushf
notb
addb
stos
pop
adc
mov
and
in
jnp
add
adc
mov
push
inc
loop
jl
xor
inc
pushf
imul
or
pop
test
mov
lock
pop
popf
shl
call
das
cli
mov
std
pop
lahf
loope
add
mov
je
sbb
inc
cmpsl
inc
leave
test
push
lret
xchg
push
into
adc
fmuls
adc
roll
lea
jnp
idivl
repnz
mov
push
repz
stos
dec
icebp
test
cmpsb
fdivrl
sub
mov
lea
call
fstps
mov
fimull
and
sub
cmp
inc
jne
ds
and
inc
mov
jne
mov
insl
xchg
xchg
xchg
or
aas
popf
add
mov
cmpl
mov
mov
pop
xor
out
sarl
xor
xchg
subb
cli
das
mov
aaa
sub
mov
inc
scas
sbb
aam
xlat
mov
inc
xchg
arpl
call
addr16
test
nop
push
adc
add
jmp
cli
push
mov
push
lahf
push
int3
aaa
xchg
ja
lret
shll
neg
daa
in
mov
sahf
sti
mov
ret
push
xchg
pop
push
daa
push
in
inc
pop
pop
js
and
addr16
push
jnp
sbb
mov
mov
movsl
dec
xlat
movsb
mov
mov
pop
add
int
cld
xchg
fstl
loopne
iret
loope
enter
jb
fbld
ret
test
insb
icebp
jp,pn
pop
or
jg
cmpsl
aam
loopne
jge
or
mov
scas
mov
lods
int
sbb
rol
and
test
add
mov
push
fs
lock
ret
or
and
cwtl
mov
test
je
cmp
lahf
jle
mov
leave
inc
in
mov
mov
jae
cmp
push
xchg
and
mov
mov
inc
sub
stos
xor
sbb
jle
icebp
test
lds
stos
fistpll
das
shlb
imul
pop
mov
dec
ja
nop
ror
inc
ret
jmp
out
push
cmp
les
out
sub
cmp
aam
popf
dec
stc
sub
test
das
jge
jmp
and
cwtl
mov
and
xchg
jb
or
jbe
sub
lret
cltd
sti
leave
leave
mov
mov
pop
scas
or
int
and
jns
adc
iret
push
sbb
rep
mov
sbbb
sub
push
ficoml
jge
lods
shlb
inc
aas
out
stos
test
mov
or
push
and
add
mov
nop
mov
sarb
push
and
test
cld
mov
test
fmuls
push
outsl
out
add
cli
outsl
ja
fadd
cli
mov
mov
test
cmp
inc
mov
daa
fnstcw
sub
inc
adc
roll
jnp
test
mov
dec
ret
push
nop
sbbl
je
testl
xchg
push
adc
push
inc
orl
int3
or
aaa
pop
hlt
cmp
sub
add
pop
or
sbb
cmp
xor
jno
sbb
mov
xchg
mov
jbe
jo
aaa
out
cld
lods
jmp
sbb
bound
mov
and
push
out
dec
cs
xchg
cmp
cmc
insb
push
addr16
jb
ja
nop
and
stc
jle
scas
push
push
rolb
push
mov
push
jne
sbb
ret
mov
jmp
es
shrl
movsl
imul
je
arpl
sub
and
fs
in
xchg
and
jge
fdiv
hlt
mov
ljmp
cltd
out
jg
fildl
loope,pt
jae
jmp
sub
testl
pop
insl
pushf
mov
out
cmp
daa
push
sub
inc
jae
out
ljmp
cld
push
nop
rolb
std
jb
sub
push
addr16
inc
notl
lock
icebp
aas
clc
cmp
sbb
sub
jbe
mov
out
sbb
mov
xchg
hlt
loopne
mov
loope
mov
add
icebp
cld
add
xchg
and
push
mov
jle
dec
jmp
mov
sar
mov
adc
mov
mov
cmp
push
out
xchg
mov
inc
xor
sbb
adc
xor
jle
aad
sub
mov
adc
das
mov
dec
pushf
cld
lock
filds
pop
sarl
pop
outsl
test
xlat
cmp
fdivs
adc
stc
dec
add
xlat
or
sub
in
fcmovnbe
xchg
addr16
cmp
aam
push
out
lods
fistps
mov
mov
out
fistpl
jmp
pop
je
testl
mov
sub
cwtl
pop
lods
sar
sar
mov
fisttpl
xchg
arpl
fbstp
fs
out
pop
pop
jp
rorb
sbb
sub
pop
jno
or
aas
jge
arpl
roll
imul
sbb
pop
xchg
fnstsw
mov
mov
fdivrs
ja
pop
lret
mov
jo
jl
iret
fucomp
imul
incb
mov
mov
jnp
push
shrl
imul
call
lcall
test
ss
xchg
loopne
pushl
inc
rol
or
mov
inc
push
mov
mov
fsubs
fdivrl
ficoms
daa
shll
adc
fwait
sti
movsb
mov
add
je
jge
pop
mov
sub
jge
jae
push
jp
std
push
add
sarb
cmp
daa
std
popa
dec
lods
lahf
sbb
push
xor
jecxz
loop
mov
adc
mov
fs
test
pop
imul
cmpsl
cltd
sub
aaa
es
mov
insb
adc
push
ficomps
pop
hlt
lret
jmp
adc
adc
sbb
xchg
inc
pop
xchg
jmp
jne
outsl
ljmp
fidivrs
xor
aas
mov
cmc
mov
in
inc
addr16
push
lcall
nop
mov
xchg
xchg
xchg
jne
in
mov
mov
test
fstpt
jbe
test
sarb
fsubl
mov
ja
jge
movsl
and
nop
aad
mov
cmc
call
pop
mov
lahf
insl
xor
sti
dec
mov
sub
or
imul
push
jp
cmpsl
mov
jnp
or
dec
sbb
push
mov
mov
daa
push
pop
test
cmovg
mov
fcomps
cs
pop
out
mov
jg
cli
das
pop
xchg
mov
xor
pop
lds
movsb
sub
jp
or
fistpll
das
inc
pop
mov
stos
lret
sbb
je
outsb
lea
rorb
std
cld
and
sbb
ja
mov
jmp
sbb
jbe
cmp
pop
push
inc
push
out
sbb
pop
addr16
lret
pusha
aas
dec
testl
cmc
mov
pop
outsl
pop
lahf
push
loop
cmp
out
fmulp
movsl
sub
jo
test
shl
psubw
fsub
leave
pushw
jnp
or
andb
lahf
pop
das
mov
push
sub
imul
cli
cmp
push
test
mov
dec
insl
cmp
ljmp
lahf
test
decl
dec
fistpll
test
mov
push
pop
xorb
mov
xchg
jp
cmp
jmp
xchg
xchg
call
rorl
mov
imul
xor
std
outsb
mov
inc
scas
xor
iret
inc
ret
cs
cmp
xchg
in
stos
std
lods
insl
sbb
xor
sbbl
push
xchg
mov
hlt
movsb
ficomps
xchg
scas
and
out
push
loop
jae
aad
ror
dec
dec
mov
mov
or
push
sub
mov
call
dec
aas
outsl
push
outsl
pop
mov
aas
insb
out
dec
repz
mov
pop
or
pop
in
xor
int3
jnp
cmp
testl
ja
jns
mov
pop
iret
push
shld
pop
aaa
mov
mov
and
inc
in
xchg
pop
cmpl
ret
pop
popa
push
inc
out
inc
mov
jbe
pop
push
rol
pop
inc
outsl
cwtl
push
and
xor
pop
in
lret
sbb
mov
add
xor
cmp
movl
sbb
pop
clc
sub
mov
jle
ds
mov
cltd
sbb
xchg
sbb
adc
push
push
sub
sahf
mov
xor
jle
test
test
and
inc
scas
jb
jb
pop
test
sbb
mov
outsl
lods
ficomps
int3
inc
and
push
add
not
xor
pushf
data16
pop
clc
lcall
mov
adc
sub
and
movsl
cmpl
shrb
insl
or
adc
push
mov
or
movsl
test
mov
and
and
jge
lret
sbb
into
ja
sub
leave
xor
popf
arpl
push
pusha
xchg
cwtl
cmpsb
dec
leave
cmp
cltd
cmp
jno
mov
jp
sahf
test
dec
push
sarl
xor
fstpt
cmpsb
lcall
mov
icebp
mov
std
fistpll
repz
sbb
lcall
sub
adc
jp
arpl
push
dec
fidivl
sub
jbe
adc
xchg
test
icebp
test
ds
aad
rcrb
add
sti
into
xlat
cld
pop
mov
inc
mov
in
push
mov
inc
ja
mov
fdivrs
jns
add
mov
pop
cmp
inc
jns
cmp
pop
mov
jnp
jl
push
mov
and
cmpsl
add
mov
int3
mov
fidivs
jg
pushf
inc
fisttpll
or
sbb
mov
jb
mov
add
leave
mov
fbstp
push
xchg
lahf
mov
jle
shlb
inc
mov
lret
push
call
mov
inc
push
fiaddl
and
xor
cwtl
stos
cld
lahf
dec
add
cmp
xchg
lret
rcr
mov
sub
cld
js
jae
xchg
and
lahf
lret
xor
xchg
mov
enter
rcrb
pop
pushf
das
mov
fs
mov
adc
repz
cmp
jecxz
inc
loopne
mov
jmp
sarb
jb
or
addr16
js
enter
jle
or
cmpsl
out
shr
mov
xlat
into
sti
lahf
fwait
rcrb
stos
pop
jecxz
push
pop
mov
push
popa
dec
mov
cli
fisttps
out
test
inc
dec
sub
je
int
pop
jmp
and
push
add
jae
inc
push
scas
outsb
test
push
pop
out
add
mov
or
pop
cmp
inc
stc
rol
jl
std
test
insl
xor
lret
lret
incb
hlt
mov
xor
or
out
mov
pushf
push
xor
xchg
aas
cmp
aad
iret
adc
and
add
jp
leave
mov
ss
cmpsl
loop
rol
call
daa
xor
push
ficompl
xchg
mov
repnz
push
loope
outsl
pop
jmp
psubd
push
mov
scas
jl
inc
stos
sub
iret
jbe
fidivl
outsl
int3
adc
in
sbb
jno
icebp
jmp
icebp
jne
imul
fxch
fs
clc
adc
jge
cli
dec
pop
or
and
lock
mov
lret
jl
mov
incb
jge
sbb
xchg
jb
imul
mov
jno
mov
stc
fstl
inc
cmp
testl
jnp
or
add
mov
dec
xchg
adc
inc
fsubrs
popf
and
xchg
enter
insb
aam
mov
shll
cmp
jecxz
movsb
das
and
jns
aaa
idivb
adc
jbe
in
outsl
int3
xchg
nop
cwtl
lods
js
mov
js
repnz
rorb
xchg
ret
out
lock
ret
adc
jne
pushf
xor
daa
or
ffree
pop
xor
lahf
repz
adc
enter
test
xchg
sub
jge
ret
sahf
and
sbb
inc
mov
lods
jno
loope
lcall
inc
pushf
rorl
pushf
lahf
push
in
cmp
aas
lods
jne
xor
jp
mov
xlat
inc
data16
push
loope
rcll
inc
data16
loope,pt
pop
and
aaa
fs
jne
sbb
jp
adc
jge
imul
xor
gs
xchg
adc
hlt
out
pop
arpl
inc
adc
lahf
add
mov
std
inc
ficompl
xchg
or
mov
aad
pop
test
jl
jl
stc
loop
xchg
push
insb
inc
out
jmp
pusha
pop
ret
or
or
or
jae
fs
jne
dec
stos
mov
fwait
lret
lods
cmp
xchg
and
adc
inc
mov
inc
or
js
adc
shlb
jae
push
pop
pop
arpl
xor
in
cmp
dec
data16
lods
fwait
mov
cmp
jge
shlb
push
jmp
dec
mov
sbbl
fcmovne
movb
fdivrl
or
mov
repnz
mov
mov
cmp
xchg
test
sub
andb
aam
adc
adcb
mov
mov
idiv
icebp
and
xor
adc
push
fidivs
fiaddl
mov
test
jp
push
push
mov
mov
jle
jns
addr16
cmpsb
gs
fisubl
pop
inc
imul
mov
imul
xor
push
adc
and
popf
mov
sbb
sbb
movsl
cmp
in
out
inc
cli
and
mov
inc
xchg
into
jg
sub
mov
leave
jnp
fs
xchg
mov
leave
mov
mov
addr16
add
hlt
pop
and
movsl
mov
or
or
ret
mov
enter
fistpl
or
loopne
cwtl
mov
in
fldenv
aad
mov
push
lret
jg
jbe
mov
mov
or
int
test
test
sbb
enter
and
pop
popa
sbb
cli
pop
imul
and
pop
lock
bound
out
and
cld
daa
jnp
cli
daa
or
out
dec
repz
stos
pop
cmc
adc
aas
dec
pop
add
outsl
lods
ljmp
repz
cli
push
outsb
pop
push
leave
push
inc
mov
cld
xchg
icebp
xchg
lods
xor
scas
xchg
mov
out
or
and
imul
jmp
call
repnz
mov
push
fwait
sub
push
mov
fsub
xorb
cltd
xchg
cmpsb
jg
aas
test
fdivs
data16
negb
call
mov
xor
jb
cmp
popf
aas
js
daa
cli
inc
addr16
add
sub
mov
lret
movsb
aam
mov
mov
xor
aam
mov
dec
or
jp
adc
ret
add
ror
hlt
mov
push
roll
inc
sub
sbb
rcl
push
scas
push
cld
out
push
shrb
push
pop
mov
dec
jl
inc
test
dec
jmp
fidivrs
sbb
subl
das
cli
mov
push
dec
lret
jecxz
adc
sarl
pop
mov
adc
lahf
fistpl
xchg
mov
test
jbe
call
rorb
aam
sbb
pushf
cmp
xchg
aaa
mov
cmpsb
std
pop
loop
jo
fisubs
jmp
stc
int
jns
dec
or
ljmp
ficomps
call
rorb
test
jmp
mov
xor
icebp
jne
bound
dec
repnz
pop
or
test
leave
sub
xchg
aam
lcall
testl
je
and
outsl
cltd
mov
jecxz
and
and
prefetchw
or
jo
js
addb
sbb
shlb
push
cli
mov
lock
rorb
icebp
jl
inc
mov
icebp
cli
out
mov
adc
es
js
xor
inc
sub
jp
xchg
mov
int3
xor
cmpsb
outsl
add
add
push
lret
stos
push
pop
inc
xor
adc
fstps
pop
jae
mov
popf
stos
and
idiv
in
loop
adc
lahf
call
mov
lahf
sbb
rorb
lcall
dec
sbb
fisttps
lcall
jbe
cmp
mov
and
in
push
out
dec
lret
or
repz
cs
sub
loope
ljmp
pushf
cld
mov
adcl
lods
icebp
out
mov
into
add
or
push
ret
cmp
and
mov
insb
out
out
cmp
sub
mov
outsl
lret
out
ja
aad
dec
xchg
cmpsb
lods
addb
pop
leave
mov
pop
add
pop
pop
jno
sahf
jno
jns
int3
notb
icebp
stos
fisubrs
call
mov
hlt
push
jmp
pop
pop
fnsave
jns
jno
lcall
or
cmp
aam
ror
sbb
movsl
and
jbe
add
or
sub
lret
lahf
pusha
dec
push
mov
scas
pop
mov
or
pop
xchg
xor
cmp
mov
cmp
in
mov
mov
push
sub
arpl
inc
xor
test
inc
push
dec
mov
fisubrs
push
sub
jns
loope
xor
mov
movsb
pop
or
mov
inc
inc
push
test
std
scas
imul
or
cmpsb
fcomps
sbb
imul
xchg
mov
add
bound
xchg
div
mov
fadds
mov
shlb
mov
jbe
adc
out
or
jb
sahf
mov
pop
popa
iret
lods
popf
scas
ret
jge
push
test
mov
es
jmp
bound
xchg
fnsave
test
subl
dec
aas
fisttpll
in
jae
sbb
leave
push
loop
adc
xchg
or
xchg
and
lds
aad
pop
subl
insb
enter
mov
div
insl
aaa
and
ja
lock
cwtl
xor
addr16
or
loop
gs
xor
fisubrl
repz
jb
orb
and
outsb
movsb
mov
and
movsb
imul
mov
test
fstpl
add
adc
jbe
cmp
pop
aad
sub
int3
flds
in
sub
subb
mov
mov
test
pushf
push
adc
mov
mov
inc
out
leave
mov
mov
lock
fwait
leave
arpl
pop
xchg
rorl
fadds
cli
out
mov
data16
pop
repz
mov
dec
ret
addl
ja
pusha
shlb
xorb
lds
adc
jb
add
iret
enter
test
imul
mov
ret
jbe
mov
push
mov
jne
test
adc
loopne
jne
sub
inc
sub
aaa
push
mov
mov
cli
jecxz
out
loop
push
cmp
repnz
out
jl
or
inc
mov
adc
nop
lret
sbb
pop
dec
jne
or
and
pop
test
outsl
mov
lock
test
mov
or
popa
mov
out
mov
jg
jb
pusha
popa
rorl
xchg
jo
mov
ljmp
jbe
loop
inc
sahf
shlb
popf
dec
mov
scas
stc
stc
dec
xor
push
out
js
out
bound
imul
jnp
and
xchg
dec
adc
pop
sbb
cld
fbld
and
mov
jb
fsubrl
faddl
insb
dec
iret
push
shrb
pop
fldlg2
sub
orl
stc
jle
cwtl
xadd
or
das
pop
push
test
jecxz
popa
loope
orl
dec
rorb
ret
imul
clc
je
cmp
jmp
addr16
ret
iret
push
icebp
push
ds
cmp
dec
dec
test
andb
jbe
fmulp
cld
jge
ds
push
xchg
out
xlat
test
cli
push
bound
test
lods
nop
sub
mov
ja
bound
aas
jge
dec
pop
mov
cmp
pop
sbb
sbb
imul
les
ja
fcomip
mov
dec
pop
pusha
xrelease
pop
cmpsl
dec
sbb
xchg
jl
xor
mov
in
jp
aas
adc
dec
xchg
lds
pop
cmpsb
icebp
jb
call
cmp
aam
int3
mov
sbb
insb
sub
movsb
js
adc
shll
rep
xor
stos
mov
mov
and
flds
cld
mov
pop
mov
inc
pusha
xlat
push
aas
fadds
in
sti
ret
and
mov
jecxz
out
sti
outsl
sbb
sarl
rcll
cmp
adc
jecxz
pop
stc
dec
fldenv
add
dec
xor
ret
imul
fcomp
sarb
adc
cmc
pop
sub
stos
cmpsb
fstpl
aas
in
test
std
push
push
das
jnp
sarl
out
dec
imul
into
or
xchg
add
dec
fldcw
jmp
mov
mov
pop
sub
add
mov
push
mov
add
mov
dec
das
jle
xor
pmaxub
mov
and
stos
jbe
jmp
inc
dec
dec
xchg
leave
and
out
adc
mov
leave
pusha
in
push
bound
or
ja
je
or
mov
imul
lahf
in
insl
mov
cmp
iret
imulb
ret
mov
inc
push
mov
lea
push
push
iret
xor
loop
loope
ds
mov
mov
mov
fwait
les
scas
nop
xor
cmpsb
push
push
lock
pop
xor
idivb
adc
mov
jmp
icebp
jnp
jnp
cmp
xor
repz
shrl
call
call
mov
in
cmp
mov
les
xor
pusha
pop
and
dec
pop
idivl
call
mov
into
jg
stos
mov
mulb
in
addr16
pop
iret
insl
push
js
std
outsb
mov
cmc
stos
cmp
lea
or
mov
mov
inc
fmull
outsl
xlat
test
shll
out
lret
mov
pusha
adc
adc
cmp
rorb
adc
jns
or
fistpll
jle
jmp
cmp
movsb
aaa
pop
or
mov
out
mov
push
xor
push
addr16
sub
cld
cmc
out
fcom
popa
xor
decb
mov
mov
adc
add
xor
xor
adc
fs
in
loop
lret
in
rol
incl
in
into
loope
jne
sbb
sar
ficompl
pop
pop
push
sbb
mov
mov
outsl
stos
lods
std
or
jge
xchg
out
subb
insb
cmp
inc
or
loope
imul
xchg
mov
in
stc
js
sub
adc
add
push
mov
xlat
mulb
clc
sub
fcoms
pop
negl
out
mov
lret
pop
push
pop
or
push
cmp
adc
jne
mov
adc
xor
xchg
adc
repz
jb
mov
test
mov
lret
cmp
xchg
arpl
jge
adc
icebp
jg
idivb
jge
divb
add
dec
sbb
mov
or
das
and
push
inc
sub
cmc
in
not
fidivs
xchg
xor
in
in
add
ret
rcrl
stos
adcl
sub
pop
aam
fstpl
cmp
jl
lds
nop
adc
or
pusha
sbb
inc
mov
sub
or
pop
pop
sub
js
xchg
aam
nop
or
call
xchg
leave
popa
or
add
jns
scas
lret
pop
sbb
push
fcmovb
mov
jle
int3
push
sahf
mov
cltd
fists
insl
sbb
aam
push
sbb
rcll
mov
jne
nop
loopne
push
mov
xor
add
test
adc
pop
into
js
out
lock
inc
mov
scas
les
insl
test
ja
and
xchg
ffree
cld
jmp
mov
cwtl
mov
movsb
gs
stos
push
mov
and
stc
pop
pop
push
ficomps
or
dec
fdivrl
cld
adc
js
jb
adc
inc
icebp
sar
inc
lahf
and
jnp
insb
pop
xchg
jns
test
xchg
fcmovnb
xchg
out
dec
pushf
test
in
addr16
xchg
stos
mov
sbb
out
es
mov
shrb
jge
cmp
mov
push
xchg
fldl
faddl
mov
jns
mov
fildl
je
push
mov
push
es
out
mov
popf
cmpsl
adc
lods
sti
lods
mov
lds
cli
pusha
insb
arpl
dec
mov
cmp
xlat
icebp
jne
test
jne
or
pusha
shlb
enter
icebp
aam
cli
repnz
test
iret
lock
add
adc
cmp
cld
jg
ja
hlt
xor
xor
insl
xchg
cwtl
bound
xchg
lea
jg
sarl
imul
mov
dec
mov
not
jmp
outsb
fsub
xlat
dec
lods
xor
in
loopne
cmp
xchg
cmp
cmc
je
xor
push
dec
lds
outsl
in
and
nop
imul
mov
cmpsl
mov
xor
mov
ffree
filds
testl
mov
call
xor
int
ljmp
dec
push
pop
pop
mov
dec
mov
stos
loopne
pop
pop
jno
aad
and
outsl
fnstsw
lret
movsl
cmpsl
test
stos
es
mov
scas
push
jge
jmp
inc
or
mov
push
xchg
adc
mov
or
sbb
xchg
sub
mov
or
sahf
imul
dec
jb
xorb
ljmp
in
push
dec
mov
mov
dec
sbb
inc
pop
dec
pushf
mov
frstor
rcrb
fs
cmpsl
lahf
sub
cwtl
lret
mov
andb
out
stos
sub
subb
pop
fs
loopne
call
addr16
addr16
cmp
mov
jne
and
jge
clc
sub
or
pusha
std
pop
out
cltd
ror
outsl
xchg
inc
aam
stos
and
xchg
inc
inc
dec
inc
add
dec
cmp
cmp
daa
xchg
jne
fbld
xor
xchg
cltd
inc
xor
pushf
fsubl
cli
mov
in
popf
gs
sub
mov
push
sbb
dec
js
pop
cld
insl
lcall
or
jl
fwait
mov
pop
jno
mov
sub
jg
push
push
sar
jp
into
xchg
pop
jp
in
dec
test
mov
lods
cld
insl
sarl
inc
add
push
mov
push
or
xor
dec
jnp
test
fwait
cmp
sub
and
mov
shll
xor
inc
push
mov
leave
insl
cld
mov
push
test
xchg
lcall
sbb
push
loopne
outsb
cltd
push
or
mov
mov
inc
mov
insl
cli
shlb
push
cltd
xlat
and
inc
in
rcrb
sub
aas
lcall
pop
std
dec
push
leave
xor
dec
or
fildl
xor
mov
pop
pop
add
add
push
adc
cltd
imul
lods
inc
mov
mov
aaa
sbb
pop
cs
fwait
pop
js
lret
push
in
dec
out
movhps
adc
inc
inc
inc
xchg
loopne
xor
and
push
out
call
push
andb
and
fs
adc
ja
mov
inc
push
mov
cs
outsb
gs
lret
sbb
scas
jle
popf
adc
in
sub
fcmovu
and
mov
cmp
ljmp
xor
fsubr
dec
pop
or
pop
jnp
mov
addr16
cli
inc
jno
xlat
fstpt
xor
rorl
icebp
or
adc
pusha
fdivrs
aad
jns
add
sbbl
rcrb
pushf
sahf
clc
imul
ret
inc
in
mov
cmpsl
push
out
dec
cltd
into
mov
fistpl
imul
pop
or
jnp
fs
and
sub
pop
push
cmp
in
imul
inc
ss
push
cmp
out
cmp
push
aas
or
xor
out
adc
xorl
mov
xor
push
in
xchg
mov
mov
aas
inc
adc
mov
mov
aas
cmp
cmc
pop
stc
mov
and
sub
fbld
js
fs
pop
pop
inc
sub
mov
loop
cmpsl
mov
push
xchg
stos
cs
mov
jnp
sti
fstps
dec
xlat
adc
mov
jnp
cmc
mov
imul
loope
mul
ljmp
push
xor
push
sub
icebp
std
sub
shlb
outsl
mov
repz
push
mov
clc
xchg
sbb
mov
jecxz
adc
push
xchg
insl
ret
sbb
rcrb
imul
sti
out
mov
icebp
xchg
test
sahf
outsl
inc
cmp
mov
int
add
cwtl
clc
push
out
leave
jne
shl
fdivs
sub
out
mov
pop
sub
cld
dec
insl
or
push
lods
scas
pushf
scas
or
and
lret
notb
jae
cmp
jae
rcr
dec
jne
rcll
dec
fnstcw
js
mov
adc
inc
push
xchg
aad
sbb
daa
scas
mov
lea
dec
movsl
leave
adc
sub
sub
stc
mov
jp
or
aaa
sahf
push
jne
in
mov
sahf
mov
hlt
nop
out
dec
xor
jns
int3
out
std
add
xchg
popa
gs
popl
out
in
mov
gs
inc
leave
loope
lods
add
faddl
mov
int3
mov
fs
addb
int3
mov
mov
fs
int3
cmpsl
arpl
push
js
int
xchg
jno
inc
mov
push
aas
jb
mov
scas
daa
mov
push
into
dec
push
jecxz
push
cmpsb
aam
adcb
sarb
dec
negb
xchg
or
xor
jl
xchg
icebp
imul
test
jl
mull
jno
in
add
or
push
xor
inc
or
cltd
xchg
add
sub
pop
rcr
mov
sbb
aam
lcall
push
stos
lods
cmp
insb
cmp
cld
fstl
and
movl
adcl
andl
jo
inc
cmc
ja
scas
cmp
les
pop
push
cmc
pushf
je
xlat
inc
mov
aad
push
cmc
mov
pop
xor
jmp
ds
adc
pop
ret
pop
mov
inc
xor
in
es
cs
push
jae
jbe
or
dec
andb
stos
push
lea
sub
or
and
cwtl
sbb
rorl
pop
adc
pop
mov
mov
mov
fmull
xchg
xchg
xchg
pushf
test
jl
cmp
mov
jb
xor
into
outsl
jb
gs
fistps
cmp
xor
sbb
push
retw
inc
aad
pop
jbe
sarb
jae
rcrb
xchg
shr
jo
stos
add
add
adcb
test
fcomp
xchg
inc
xchg
xchg
leave
mov
sarl
out
sub
xchg
ret
sti
dec
mov
outsl
outsl
call
mov
xchg
in
inc
call
push
and
stos
bound
pop
cmp
ret
xchg
cmp
adc
aad
pop
cmp
sub
repz
aad
jbe
lods
sub
or
xor
mov
scas
cli
fistl
adc
or
jl
cmp
insl
xor
mov
xor
xor
add
mov
stos
sbb
test
push
cltd
loope
outsb
repz
fistps
ds
xor
mov
jno
vmovhps
sbb
fbld
fisubs
popa
lret
scas
push
hlt
lods
jl
out
hlt
pop
ficompl
lds
test
shlb
inc
xchg
lret
lahf
xor
outsl
fmuls
rol
daa
stos
addr16
loop
push
inc
rolb
mov
lds
jle
sbb
inc
add
call
andb
iret
push
adc
cli
dec
cmp
mov
scas
xchg
addl
xor
subb
cwtl
aad
nop
es
jne
lods
mov
push
in
mov
pop
mov
sahf
xor
sarb
jo
dec
inc
dec
rcrb
inc
inc
cmp
ljmp
cmp
and
sbb
or
rcrb
rcll
adc
dec
lret
sahf
xchg
clc
sbb
dec
and
dec
in
mov
or
mov
xchg
mov
jg
dec
test
push
cmp
push
mov
test
jbe
lea
mov
push
xor
iret
mov
mov
sti
cmp
push
stc
sahf
pop
js
jne
sub
inc
shl
xchg
xor
in
stos
xor
test
xor
lret
sahf
lret
mov
sbb
mov
call
cmp
xor
dec
movsl
mov
add
in
jge
xchg
lahf
insl
movsb
mov
jge
les
mov
lods
mov
lods
adc
and
out
rep
mov
popa
outsb
sbb
inc
dec
das
shl
adc
orb
lods
es
fs
out
nop
inc
lea
mov
fsubl
sub
insb
incl
lds
pop
mov
mov
cs
xor
lcall
dec
bound
lock
into
subb
jns
imul
lds
scas
faddl
hlt
pusha
push
loope
jns
enter
cmp
test
mov
xchg
or
int3
xchg
fimull
adc
dec
fcompl
subl
fcomps
fmuls
adc
fistps
movsl
test
add
push
lcall
data16
cmp
in
bound
in
rolb
inc
inc
mov
repz
cmpsl
cmp
add
loop
add
and
aad
in
out
les
xchg
jno
jns
sbb
adc
or
mov
loop
dec
mov
rcr
pop
lds
out
fdivp
cmp
xchg
lahf
mov
xchg
ja
shll
jl
add
andb
mov
insl
popa
add
hlt
adc
mov
test
sub
test
js
outsb
cmp
in
lods
lcall
js
pusha
pop
idivb
imul
lods
adc
mov
mov
mov
cli
in
fisttps
push
pop
in
idivl
in
pop
cmp
mov
inc
or
inc
movsb
pop
outsb
arpl
and
sub
dec
sbb
sbb
mov
idivb
xor
mov
mov
inc
pop
loopne
inc
mov
inc
jno
inc
ss
cmp
dec
jne
xchg
jne
nop
and
fisubl
rclb
mov
bound
rol
gs
adc
ss
cmpsl
jno
xchg
sub
xor
fsubl
faddl
and
push
push
sub
pop
dec
sbbb
call
in
dec
imul
mov
or
adcl
and
movsl
aas
mov
loop
fnstenv
into
mov
ficompl
out
sahf
xor
and
mov
add
push
addl
mov
add
add
add
xor
inc
sub
dec
mov
push
mov
leave
xchg
loope
test
ss
fcomip
test
fcompl
sub
in
into
movsb
incb
lods
inc
rolb
mov
repz
push
orb
add
int3
ficomps
lcallw
stos
sub
push
bound
cmpsl
sub
sub
xlat
mov
cmpsb
push
jle
mov
pushf
adc
xchg
inc
xor
mov
shr
cmp
xchg
xor
mov
orb
pop
sti
aad
jp
repz
shrl
aad
pop
adc
inc
mov
inc
enter
push
aad
lods
jns
add
mov
sbb
xor
add
nop
movsl
inc
test
mov
mov
jmp
fs
mov
xlat
sub
mulb
out
pop
das
inc
fldcw
mov
sub
push
mov
jb
and
test
insb
cmpsb
sub
out
loope
add
sub
xor
pop
mov
mov
ss
cwtl
stos
mov
cli
xchg
inc
cmpsb
ja
data16
clc
ds
lods
fstps
push
sbb
xor
aam
aas
pop
xor
inc
cmpsl
push
lcall
inc
xchg
aad
push
dec
sahf
jmp
lret
add
cmp
xchg
add
add
xchg
pop
xor
pop
ret
mov
sbb
mov
in
lret
rcrb
inc
xorl
sub
dec
lea
mov
mov
xchg
out
push
add
jno
sahf
cmp
xorl
lds
cld
fiaddl
jle
mov
sti
ja
ljmp
adc
into
icebp
lods
push
jne
scas
insb
popf
popf
sbb
stos
dec
add
adc
xor
xchg
and
dec
inc
insb
test
shll
push
inc
inc
xlat
jp
push
xchg
jmp
into
nop
mov
orb
out
dec
adcb
aas
or
imul
xchg
push
out
pop
inc
ret
popl
xchg
mov
dec
pop
xor
push
cmp
or
push
fs
lock
dec
jp
fildll
ss
jl
std
mov
jb
push
dec
add
ds
in
and
icebp
cmpsl
or
into
icebp
jg
pusha
sti
sbb
jl
lock
dec
and
int3
sti
xor
jno
lcall
cld
daa
mov
cmp
push
xchg
aaa
adc
fwait
push
lret
aaa
rorl
mov
ss
cwtl
pop
and
jns
jne
ret
add
insb
jns
std
fs
test
lret
mov
jnp
inc
aam
xor
lds
lahf
jnp
and
adc
adc
xchg
test
insb
fwait
dec
mov
adc
inc
mov
jmp
push
out
add
int3
mov
movsb
nop
mov
jae
daa
adc
or
and
xor
or
pushf
test
xor
clc
or
sbb
inc
ret
add
adc
push
inc
inc
pop
cld
push
pop
xchg
bound
fwait
mov
stos
xor
add
mov
insb
jne
lods
call
push
sti
adc
shl
loop
imul
stc
hlt
or
nop
pop
mov
subl
add
adc
and
cmovno
inc
inc
inc
daa
inc
sub
cmp
loopne
int
jmp
sbb
dec
lahf
xchg
addl
movsb
cmpsl
xchg
hlt
dec
loope
jae
jb
fs
gs
pop
or
out
sub
lea
sbb
in
inc
sbb
out
in
adc
cld
pop
add
fcom
push
nop
push
pusha
ffreep
push
cmp
dec
and
push
ljmp
insl
fcompl
mov
fildll
cmp
idivl
pop
outsb
clc
add
outsb
fs
aam
inc
xor
add
js
lahf
mov
flds
push
sbbl
mov
imul
adc
and
incb
pop
out
cmp
test
mov
push
xchg
out
mov
jmp
sahf
daa
js
jnp
fucom
fistps
mov
push
dec
xlat
addr16
cmp
popf
iret
mov
mov
ficoms
neg
jl
pop
mov
jo
popf
push
mov
lods
cmp
sbb
dec
adc
dec
pop
push
xlat
mov
xchg
add
xor
pusha
aad
fdivs
mov
sub
jbe
outsl
mov
jp
out
mov
movsl
mov
jl
sub
hlt
pop
test
adc
enter
cli
arpl
js
push
push
inc
jns
test
fucom
rol
dec
lds
ficomps
jbe
fs
sub
xchg
pop
in
pop
adc
out
sub
xlat
lret
ss
mov
jle
std
out
push
test
testb
mov
jge
xchg
mov
sub
xchg
or
sbb
test
sahf
iret
loope
sub
nop
dec
adc
adc
jns
jg
lret
leave
cli
cmp
cmpsb
mov
sbb
adc
aad
mov
mov
sbb
or
repnz
jmp
outsb
test
jg
out
into
dec
ret
ret
inc
mov
fidivs
xor
nop
lret
pop
nop
jo
xchg
pop
fsub
push
add
gs
jle
pop
cmp
repz
jns
jnp
mov
stos
int3
insb
mov
cmp
jno
int3
jne
cmp
cltd
stmxcsr
fildll
call
or
sbbl
add
mov
sahf
dec
mov
ret
or
mov
outsb
and
or
movsb
mov
adc
xchg
xchg
fldt
sti
xor
or
xor
mov
inc
jb
mov
add
mov
jnp
data16
mov
mov
sub
mov
sti
loopne
xlat
aad
mov
cltd
sub
lcall
out
inc
cmc
sbb
add
pushf
mov
test
jle
insl
stos
dec
xchg
fidivrs
mov
cli
and
ja
clc
mov
sub
ljmp
fwait
nop
test
mov
mov
inc
mov
loop
movsb
adc
push
lock
lea
or
mov
push
int3
fistpl
mov
cmpsl
push
jmp
xor
xor
mov
sub
or
push
sub
scas
stos
int3
fwait
mov
faddl
cmp
pop
sub
sub
pop
and
pop
data16
sub
cmp
call
out
jnp
mov
outsb
outsl
andl
pop
dec
add
inc
jg
push
push
lahf
jecxz
push
jmp
mov
ds
jmp
dec
push
dec
or
iret
lds
xchg
sbb
aaa
out
outsb
inc
sbb
jb
inc
sbb
fmulp
icebp
adc
jns
inc
fsts
clc
negl
jg
sbb
xchg
sbb
cli
add
xor
mov
testl
in
shrb
int3
insl
test
cmp
negl
std
push
xor
cmp
jge
testl
test
aaa
jp
fmulp
mov
stos
aam
shlb
push
lds
adc
divl
in
lcall
add
push
cld
push
push
jge
cwtl
and
jne
or
jp
xorl
push
jmpw
xor
iret
cmp
cmp
popl
loope
dec
xchg
sahf
inc
xor
push
ljmp
add
dec
rclb
xchg
icebp
icebp
jne
dec
or
test
xchg
adc
popf
add
xchg
lcall
bound
add
jnp
ljmp
mov
mov
mov
push
push
push
or
test
inc
xchg
inc
and
mov
pop
mov
mov
and
out
int3
fdivrl
int3
in
imul
out
pop
push
push
imul
mov
mov
cwtl
jno
mov
les
xchg
xchg
jns
and
adc
stos
xchg
adcl
pop
stc
repnz
jne
aaa
nop
std
jns
es
gs
sub
insl
in
mov
jmp
jb
pop
xorb
imul
push
sbb
adcb
lcall
sbb
jmp
adc
inc
cmpsl
push
inc
ret
xchg
fdivrl
icebp
and
sub
or
jecxz
mov
je
sbb
jbe
mov
mov
pop
leave
out
ds
movsl
jg
mov
xchg
movl
out
and
jbe
sbb
gs
cwtl
xchg
jp
repz
adc
mov
in
xchg
cmc
nop
xor
fcmovnu
push
jnp
outsl
ljmp
jle
sahf
and
cli
cmp
imul
addb
lds
sbb
cltd
push
mov
into
daa
xchg
fdiv
adc
leave
rolb
push
dec
or
or
add
mov
xor
cli
dec
out
dec
je
xchg
imul
loop
pop
in
das
lret
push
jmp
imul
and
lret
cld
push
movsl
std
addr16
add
stos
pop
dec
or
adcl
dec
add
es
adc
xchg
test
sbb
xchg
push
push
fistl
test
adc
add
outsl
movsb
nop
inc
cmp
jmp
pusha
xchg
popf
pop
jmp
enter
xor
xchg
sub
int
xor
mov
loop
mov
inc
push
add
sub
or
mov
in
inc
inc
loop
cmpl
je
xchg
mov
arpl
repnz
sub
lea
push
xchg
cltd
mov
push
stc
out
cmp
dec
xchg
imul
mov
ret
sub
scas
gs
mov
orl
push
mov
mov
aam
aad
and
xchg
cmpb
adc
divb
into
subl
add
bound
lcall
out
or
mov
repnz
fxam
hlt
push
inc
aas
mov
imul
cld
sbb
cmp
mov
xchg
sbb
scas
rclb
mov
aaa
cmp
adc
or
push
mov
and
cs
fstpl
adc
push
cwtl
rorb
lods
aad
pop
fldenv
ds
fs
mov
shrl
lahf
jno
mov
or
cmc
mov
jg
filds
outsl
sahf
ljmp
out
aad
mov
dec
push
in
pusha
shlb
mov
cmp
rcll
cmpsb
inc
iret
pop
mov
jl
das
or
insb
std
and
popa
sbb
sbb
leave
sbb
je
sub
lret
scas
cli
insb
sub
jmp
inc
and
sub
sbbl
rolb
fwait
and
loop
xlat
mov
mov
xor
flds
inc
mov
ja
jbe
xlat
ja
shll
aad
insb
xchg
jl
xor
cmp
pop
inc
stos
mov
fucomp
jae
hlt
cmp
mov
gs
fdivrs
xor
scas
and
mov
adcb
das
divb
je
das
lock
jo
jo
mov
popf
pop
xor
xchg
mov
nop
outsl
test
shlb
cltd
fs
clc
loope
push
inc
mov
ret
test
or
xchg
dec
xchg
xchg
aam
sbb
sbb
mov
rclb
mov
loopne
fsubl
mov
adc
pop
outsl
les
repnz
rorb
lcall
cmpsl
cltd
outsl
push
aaa
fwait
mov
hlt
sub
fildll
dec
push
jecxz
sub
stc
test
or
mov
jb
dec
movsl
jb
pop
aas
js
sub
paddb
sub
mov
or
mov
sbb
outsl
mov
or
inc
int
push
mov
cmp
mov
sub
in
or
xchg
xor
sbb
negl
sub
xor
shlb
dec
mov
dec
push
int3
jnp
aad
leave
lea
notb
shlb
stos
rcrl
mov
and
or
mov
ficoms
lcall
fidivrl
sti
cwtl
mov
and
out
adc
fwait
adc
neg
push
movsb
mov
fsub
xlat
pushf
jae
adcb
call
addb
out
insl
dec
cli
sar
or
push
xlat
dec
imul
push
sti
stc
xchg
mov
jno
add
inc
std
push
cmp
mov
loop
movsl
cltd
outsl
mov
ljmp
or
ficoml
test
pop
pushl
adc
in
pop
repz
mov
lock
mov
cli
mov
outsb
push
and
jae
jecxz
sub
cmp
jl
push
sub
lods
jp
imul
aaa
jnp
jmp
fildl
das
push
pop
out
lcall
add
mov
xchg
xor
mov
into
pop
aam
and
pop
cmc
ds
push
push
sti
jb
jl
cs
xchg
out
adc
mov
repz
jns
loop
arpl
imul
adc
sbb
add
or
rclb
daa
dec
bound
shrb
insb
std
fwait
ss
out
jbe
dec
xor
and
addr16
lds
fidivs
xrelease
pop
mov
test
pushf
lcall
jne
sub
mov
arpl
std
shl
frstor
sahf
popa
mov
lcall
jne
adc
je
fs
adc
cmp
in
sbb
data16
mov
jmp
cmp
pusha
adcl
and
insb
das
xchg
mov
mov
lret
fisttpll
pop
pop
cmc
lcall
jnp
out
dec
loopne
jo
xor
and
int
jo
int3
lret
pop
xchg
aaa
das
aam
xchg
mov
lods
mov
mov
test
xor
mov
sbb
roll
mov
jl
push
shrl
xlat
cmp
vfrczsd
dec
aas
jns
jmp
jmp
xor
loopne
aaa
popf
test
jmp
jae
fcmovnbe
lahf
push
mov
ficoml
jo
pop
rorl
xor
cmpsb
inc
lcall
hlt
das
cs
sahf
dec
push
lret
mov
test
cmc
add
cmc
dec
and
or
adc
jb
jmp
out
in
cmp
cmp
daa
movsl
ljmp
or
jnp
dec
shll
sub
pop
push
imul
test
lret
mov
and
mov
frstor
cmp
lcall
int3
ror
mov
sbb
shl
inc
or
adc
in
popa
cmp
sarb
lock
int
test
mov
dec
mov
push
leave
in
and
push
out
pushf
sarl
pop
dec
test
adc
inc
cwtl
daa
add
and
imul
mov
mov
nop
xchg
cwtl
sub
jmp
or
or
in
in
insl
int3
pop
or
cli
or
xchg
mov
cmpsl
lahf
shrl
xor
fwait
ret
mov
cmp
iret
inc
imul
lods
in
test
mov
cmpb
sbb
jmp
scas
pop
mov
lea
fdivrs
popf
and
xlat
sbb
popa
cmp
leave
out
bound
xor
mov
xchg
fwait
notl
data16
sub
js
adc
mov
testl
fidivrl
inc
jns
mov
mov
pop
mov
jle
and
fisubl
test
push
jp
mov
popf
cmpsb
mov
mov
pop
into
in
cmc
inc
sbb
mov
gs
sar
lods
js
jb
out
mov
push
inc
xor
andl
ror
std
orl
mov
push
and
enter
adc
mov
cltd
nop
xchg
es
jl
jmp
or
sub
fildll
ret
daa
pusha
roll
test
addr16
stos
cltd
andb
jl
xor
in
clc
jb
mov
ss
ficompl
in
pop
sarb
outsl
inc
lds
push
xchg
nop
bound
das
and
cwtl
cmc
add
sub
or
xchg
pop
dec
ja
push
idivb
ljmp
jmp
xchg
sbb
arpl
movsl
add
adc
jne
sti
pop
jp
pop
es
dec
lock
mov
enter
pushf
dec
jecxz
loop
or
inc
cli
nop
sub
aam
mov
stos
fsubrl
rcll
cmp
pop
jp
xor
int
mov
dec
adc
int
mov
push
jecxz
cld
xchg
das
std
inc
mov
sbb
in
mov
xchg
test
sub
add
mov
xchg
andps
shlb
cmp
sub
and
into
push
and
adc
lods
scas
inc
test
xchg
inc
shlb
outsl
pop
out
test
mov
xchg
aas
jno
das
jb
loop
inc
cmpsl
ljmp
or
leave
aaa
push
std
paddsb
xchg
and
sahf
popf
hlt
push
ljmp
inc
stc
cltd
int3
pushl
sar
push
mov
into
xchg
inc
test
xchg
and
jmp
push
jo
dec
pop
aaa
jo
ja
aam
jnp
mov
mov
and
leave
push
sbb
fwait
and
mov
inc
sti
mov
pop
movsb
push
out
fbstp
mov
add
and
and
mov
pop
ljmp
mov
nop
pop
loope
je
push
aas
call
fnstcw
movsl
shrb
sub
sbb
hlt
out
es
fistps
sbb
loopne
movsl
or
clc
jno
push
push
inc
add
in
imul
mov
mov
insl
imul
sub
mov
out
or
test
int
mov
jne
cli
pop
push
in
xchg
test
mov
dec
arpl
pop
rorb
mov
xchg
sbb
mov
hlt
xor
inc
rorl
xchg
scas
mov
jg
insb
cmpsb
sub
cmp
push
inc
mov
movsb
jo
dec
leave
add
les
push
sub
push
push
fnstsw
dec
add
and
aas
gs
loopne
aas
insb
gs
mov
fistl
loope
pusha
mov
outsl
outsl
ss
mov
sub
sub
xlat
and
out
push
loopne
and
mov
pop
loope
mov
push
repz
mov
movsl
xchg
xlat
dec
xor
sbb
jmp
mov
imul
mov
jbe
pop
mov
out
push
sub
pop
mov
sub
lret
jns
icebp
mov
pop
dec
aas
mov
js
lea
test
xor
xchg
push
adc
xor
mov
xchg
dec
jne
jne
or
add
cmp
xor
ja
cli
cmc
pushf
into
push
pop
pop
push
xchg
pop
clc
mov
mov
cwtl
mov
jl
xor
mov
int3
into
sbb
xchg
testb
outsb
aam
cvtps2pi
and
and
inc
clc
adc
xor
dec
cwtl
push
arpl
rcll
dec
xchg
or
cli
jecxz
xor
gs
inc
outsb
push
sahf
jg
std
fsubrl
pop
cmp
repnz
movsl
out
mov
cmp
hlt
push
mov
lahf
sbb
fs
dec
aam
addr16
leave
ret
std
adc
loopne
push
adc
jbe
inc
mov
scas
lods
xorb
xor
test
xlat
pushf
jns,pt
out
mull
sub
outsl
mov
out
pop
add
andl
pop
pop
sti
xor
mov
push
push
jmp
sbb
arpl
mov
cmp
or
mov
inc
imul
stc
lcall
leave
mov
sub
cmp
repz
sub
aam
dec
pop
mov
push
sub
aas
clc
sub
pop
shrb
pop
pop
mov
ffree
popf
xchg
clc
pop
jmp
stc
stc
enter
lret
mov
popf
pushf
in
sub
or
in
jecxz
adc
mov
pop
lea
lods
jmp
push
pop
xchg
mov
xor
xchg
jno
jl
out
xlat
push
mulb
aam
lcall
xchg
sbb
repz
mov
int
add
fs
divb
mov
add
jg
pop
mov
les
mov
dec
das
lcall
pop
out
mov
lods
ret
mov
xor
ret
pop
jbe
insb
movsb
push
stos
adc
jnp
ret
loopne
imul
pop
dec
aas
mov
mov
ljmp
jnp
or
fs
cmp
lcall
mov
jb
pushf
insb
push
pop
push
jae
es
sub
lods
scas
sub
sub
jg
push
repz
leave
cwtl
xchg
arpl
add
mov
mov
call
pop
inc
mov
inc
adc
pushl
pop
jp
adc
lret
add
ljmp
bnd
ficomps
mov
cmc
xchg
lcall
add
addr16
jb
jae
sbb
mov
sarb
shlb
js
testb
jp
mov
outsb
or
pop
and
push
aad
call
clc
lahf
stos
cmp
xor
xor
dec
jmp
jp
jo
or
jl
hlt
repnz
cmp
xchg
popf
mov
push
lods
push
mov
push
push
xor
adc
push
in
jp
and
fmuls
outsb
lcall
in
les
repz
into
push
repnz
mov
xor
outsl
xchg
jmp
jb
cmpsb
sbb
xchg
jo
mov
sti
mov
mov
cmpsl
cmp
pusha
outsb
adc
sbb
in
iret
ljmp
in
jae
jmp
lret
leave
add
les
sahf
push
mov
cmc
es
rol
cwtl
push
faddp
xor
aaa
jmp
imul
fstpt
mov
and
fistps
xor
jmp
rcrl
clc
pop
in
sbb
mull
and
cs
mov
popf
lock
push
push
xchg
test
outsb
jmp
leave
mov
stos
inc
lcall
mov
jg
xchg
jmp
sub
add
imul
ret
cs
xchg
dec
loope
addr16
leave
cs
cmc
xchg
je
jbe
or
ljmp
shll
dec
aam
cld
or
lret
xor
les
stos
sahf
into
scas
cmpl
or
mov
inc
mov
in
adc
mov
mov
pop
mov
lret
inc
or
sub
out
es
hlt
lock
dec
add
cmp
faddl
scas
or
sbb
push
push
aas
mov
int
aaa
sub
rol
adc
mov
xor
mov
scas
mov
or
mov
addb
xor
inc
ss
cmp
jo
stos
xchg
push
mov
lock
cli
test
aas
jns
or
push
pop
adc
outsl
inc
movsb
and
mov
adc
cmc
mov
dec
scas
lret
inc
sbb
push
dec
outsb
lock
aam
push
cltd
and
dec
cmp
jmp
or
das
xlat
xor
mov
sbb
and
mov
and
loope
mov
lock
inc
xor
lcall
ss
push
lret
fptan
fdivrl
xor
pop
jp
xchg
push
popf
aas
or
xchg
xchg
ds
or
mov
das
and
sub
cmpb
or
inc
xor
push
imul
mov
mov
js
faddl
out
insb
sub
cmp
je
stos
or
mov
push
mov
xchg
fwait
or
jo
pop
inc
int3
movsl
shll
ficoml
lods
fadds
pop
mov
popf
xor
jo
cmp
imul
fwait
and
rcl
push
fistl
ljmp
sub
pop
jbe
lods
jp
mov
adc
jbe
add
mov
pop
jecxz
cmp
scas
sbb
subb
mov
dec
pop
cltd
cli
and
mov
sub
cmovno
pop
ljmp
push
jo
dec
xor
and
mov
push
adc
lret
lret
divb
pushw
lods
inc
ja
mov
or
ja
sbb
fbstp
xchg
xchg
aam
cmpsl
repnz
sub
push
mov
repz
or
lea
jnp
adc
jmp
jmp
mov
outsl
jns
ja
call
imul
push
popa
mov
mov
testl
std
push
cmp
lock
mov
xor
outsb
popa
mov
push
jbe
addr16
xor
rcll
imul
ss
outsl
xlat
dec
in
outsl
mov
out
cmp
lods
xchg
adc
inc
xor
add
mov
lret
jb
scas
je
mov
push
lods
sti
jmp
xor
dec
push
mov
mov
leave
ljmp
mov
push
out
xor
test
loope
icebp
or
loopne
test
pop
out
cmpsb
cltd
pavgb
scas
mov
or
push
fstp
stos
in
popf
inc
pop
lcall
and
add
inc
fmul
fsubrl
nop
fisubrs
push
sbb
lcall
mov
lods
into
fidivrl
xor
stc
lahf
mov
pushf
jmp
in
dec
mov
add
aam
sbb
imul
and
xor
cmpsb
add
pop
rcll
pop
mov
or
jnp
js
lret
sub
xchg
cwtl
ret
fdiv
add
push
inc
xchg
push
lret
ret
arpl
cmpsl
mov
mov
lds
sub
testl
cmpsb
push
mov
jno
scas
mov
leave
cmc
push
jge
repnz
fsubs
sti
xor
add
stos
mov
push
adc
inc
aam
pop
lcall
pop
movsb
shrb
shll
inc
fsubr
or
pop
dec
jmp
fwait
and
mov
cmp
push
sbb
out
pop
xor
inc
hlt
sahf
rolb
mov
test
test
lds
or
push
ficompl
cmp
and
pop
or
lock
sarl
xor
mov
mov
in
shll
das
int
sahf
mov
and
adc
pop
mov
sbb
cmp
ss
fidivrs
imul
inc
xor
xor
ret
dec
out
push
add
mov
loop
mov
pop
repz
cmc
daa
jno
divb
xor
imul
aaa
leave
loop
dec
xchg
int
iret
pop
idivb
jmp
rcrl
pop
cmpsl
or
in
inc
jbe
inc
in
mov
mov
inc
ficoms
push
and
in
dec
mov
push
xchg
arpl
sarb
push
nop
sar
pop
test
in
push
mov
push
pop
stc
das
pop
adc
ret
push
mov
xor
sbb
pop
les
iret
or
dec
jmp
mov
pop
fwait
call
bound
movlps
mov
cltd
aam
and
movsl
inc
aas
sbb
push
sbb
sbb
add
mov
mov
ljmp
in
in
jo
pushf
and
jb
xor
mov
shlb
cmpsb
cwtl
out
mov
loope
gs
lods
push
outsb
movsl
pop
and
pushl
sub
jns
loope
push
sub
inc
inc
sub
lahf
iret
call
pop
sub
and
fsub
jns
notb
inc
add
dec
cmpsl
pusha
mov
ficomps
and
mov
fsubrl
pop
jae
xor
pop
or
loope
dec
ja
or
mov
syscall
iret
loope
pop
sbb
and
and
xor
or
dec
in
popa
inc
movsb
pop
pushf
push
insl
out
cwtl
rorb
cmpsb
push
push
aam
inc
fucom
mov
cwtl
pushf
xor
mov
pop
jle
and
lods
jecxz
in
xchg
daa
push
aaa
addl
sbb
adc
scas
mov
xchg
rclb
inc
xchg
xchg
in
jae
lcall
jl
lahf
std
xor
outsb
or
sti
lods
shlb
cmp
maxps
dec
jge
ljmp
mov
cmp
in
lea
and
ss
je
mov
shrb
dec
adc
popf
jnp
test
scas
or
or
add
clc
fisubs
es
pop
cmp
mov
popa
les
pushf
or
fdivs
mov
jae
jnp
and
sarl
xor
push
lahf
hlt
imul
push
test
scas
inc
out
dec
cmp
shrl
pop
jbe
or
cwtl
adc
add
xchg
cmp
mov
lods
and
adc
imul
in
xor
mov
outsl
cs
mov
jecxz
inc
jmp
popw
stos
jle
ljmp
add
test
mov
adc
rorl
jne
mov
cld
push
push
and
pop
div
cmp
popl
bound
jns
in
lds
imul
and
xor
xor
and
adc
loope
push
loop
aad
icebp
add
adcb
push
fwait
mov
out
xchg
dec
popf
fsubs
adcl
ja
in
sub
in
jp
lret
inc
xchg
js
xchg
ret
adc
insl
fcmovu
fildl
test
ljmp
mov
xor
lods
mov
in
or
in
push
pop
es
jnp
push
iret
inc
out
in
dec
lds
sbb
scas
movsl
out
repz
pop
loopne
inc
jg
out
out
ds
xchg
or
dec
fcomps
push
mov
jb
xor
aaa
es
mov
insl
or
jg
shrb
jle
cmp
in
imul
cli
call
cmp
dec
fstl
inc
mov
imul
mov
mov
aas
shrl
mov
xchg
stc
cmp
rcll
in
mov
movsl
ds
idivl
aas
pop
pop
cmp
jae
mull
push
jle
push
mov
lret
dec
sysret
pop
and
ss
mov
mov
mov
xor
mov
xchg
and
adc
sub
fincstp
add
and
mov
fbld
inc
repz
jmp
andl
cli
lret
addr16
sti
outsb
out
shrl
pop
jg
add
and
mov
xor
scas
filds
lods
pop
mov
insl
push
aad
xchg
inc
das
adc
adc
xchg
subb
mov
xchg
mov
push
fnstcw
data16
push
mov
mov
or
dec
add
sbb
mov
or
pop
lea
add
xchg
mov
push
mov
sub
pop
cmc
in
push
aam
popa
mov
aam
push
iret
dec
pop
jecxz
lea
daa
popf
xlat
mov
into
xchg
movswl
jmp
rorb
dec
pop
mov
inc
cmp
xor
aam
xchg
or
xorl
or
in
mov
mov
and
lcall
sub
cmp
pop
lods
and
fs
pushf
mov
mull
ljmp
mov
and
inc
mov
xchg
pop
fnstenv
jnp
ror
mov
cmp
or
lret
mov
mov
cmpb
sbb
rcrl
sbb
int
cmp
pshufw
lods
xchg
repz
in
and
adcl
jo
hlt
sarb
inc
pop
sub
mov
cmp
mov
bound
jle
fistpl
jp
inc
mov
jge
pop
hlt
mov
cmp
inc
lods
push
inc
xor
adc
sar
or
jl
adc
out
push
shrl
mov
clc
add
cmp
xchg
aas
cmc
sbb
rolb
scas
in
enter
movsb
or
and
mov
imul
xchg
cs
cs
sub
mov
mov
cmpsl
cmp
and
dec
push
shl
inc
pop
push
inc
jne
add
ja
xor
mov
nop
das
push
pop
and
out
fs
mov
and
sub
jl
loop
das
inc
call
push
and
rorb
cmpsb
iret
incb
insb
int
mov
mov
cmc
mov
dec
idivl
out
mov
call
out
push
xchg
mov
icebp
lods
fnstsw
fistpll
inc
mov
out
aas
sbb
mov
push
pop
stos
sti
sbb
out
je
das
xor
js
adc
jecxz
pusha
icebp
or
inc
dec
pop
shl
adc
xchg
mov
push
sub
shll
iret
adc
adc
dec
pusha
fdivrl
in
imull
adc
cmc
pushf
and
xor
popf
fnstenv
sub
cli
adc
dec
cli
add
push
xchg
call
andl
daa
pop
cmpsl
mov
imul
mov
mov
dec
out
call
sub
orb
fistl
ret
add
inc
mov
loope
push
cmp
ja
sbb
negl
xchg
dec
scas
jle
lahf
push
xchg
in
lret
into
fisubrs
pop
int3
jnp
and
adc
cmp
stos
add
cwtl
sub
insb
andb
lcall
test
sub
jp
pop
std
call
mov
push
aam
stos
shl
rol
xlat
jp
and
lock
jae
jmp
sbb
pop
push
sahf
lret
sbb
lods
dec
rcrb
inc
mov
inc
mov
outsb
and
mov
xor
xchg
cs
add
das
push
cld
add
and
xchg
pop
ds
nop
stos
inc
jne
fidivs
pop
mov
cmpsb
movsb
fcmovnu
push
lods
sbbl
inc
call
add
jnp
imul
fwait
das
dec
inc
call
lret
xor
jne
push
out
psrlq
pop
pushf
inc
mov
lcall
mov
fldl
in
mov
push
roll
mov
shr
jl
sti
xchg
ret
cmp
lods
lcall
jnp
add
ss
cltd
adc
jle
sbb
dec
dec
dec
fdiv
out
push
xchg
stos
dec
push
jl
mov
or
lret
push
mov
in
out
mov
xchg
fcomip
cmc
cmp
lret
dec
cmc
cltd
out
jp
fildl
decb
repnz
mov
pop
test
dec
stc
sub
xchg
data16
leave
stc
repnz
dec
lods
jne
inc
xchg
shl
mov
pop
loopne
xor
dec
subl
ss
aad
std
jl
int3
mov
jo
js
testl
adc
push
cmp
xlat
lds
lea
adc
sarb
sub
or
scas
inc
sub
std
mov
add
and
test
jae
inc
adc
xchg
mov
mov
or
repz
subb
cmp
sbb
sub
mov
push
cmp
int
mov
cltd
push
ret
xchg
shl
sbb
cmp
in
bound
inc
stos
pop
push
in
push
pusha
mov
jnp
jno
fsubrs
and
clc
inc
scas
loopne
and
mov
mov
mov
adc
mov
lock
icebp
pushl
fst
ljmp
or
test
mov
mov
dec
sbb
inc
clc
in
enter
adcb
mov
pop
and
mov
pop
je
fmull
popa
pop
shl
inc
mov
idiv
mov
mov
lahf
jmp
cmpsb
or
inc
jns
lahf
mov
dec
fistpll
xor
in
lret
push
int3
aad
aad
dec
scas
dec
sbb
loop
xor
icebp
test
imul
xchg
cli
jmp
cmp
or
jne
dec
lret
jmp
add
push
fwait
or
xor
or
ret
fnsave
in
stos
sub
mov
xor
daa
dec
sti
and
xor
pop
xchg
addr16
pop
xchg
sti
push
lods
xchg
sahf
xchg
ss
stos
adc
push
cli
jp
imul
mov
mov
fidivs
divl
stc
jno
cwtl
movsb
push
mov
xchg
loopne
mov
ja
mov
mov
lret
in
jo
mov
mov
test
sub
mov
add
dec
add
ja
push
les
mov
cmp
xchg
scas
lods
add
fldenv
inc
rcrl
ret
mov
je
sbb
stos
and
fs
and
sub
inc
and
adc
adc
pop
mov
cwtl
push
aaa
jmp
dec
sahf
xor
mov
xchg
sar
out
div
or
in
mov
mov
mov
aas
xchg
out
lock
dec
stc
fistps
cmpsb
movsb
dec
mov
cmpsb
rsm
jns
cld
cmpb
push
pop
lds
mov
je
call
sbb
loopne
outsb
rcr
cmp
hlt
aam
jle
sub
imull
out
sub
dec
jle
sahf
rorl
add
pop
divl
outsb
lods
pop
push
fistps
fdivr
and
pusha
ljmp
inc
push
pushf
mov
and
mov
sbb
xchg
aam
dec
fnstenv
shrl
mov
jne
jns
dec
jbe
rorb
test
mov
jae
xchg
mov
sub
sub
sub
ffreep
rdtsc
xchg
pop
sbb
cwtl
fidivl
movsb
ficompl
fsubrl
mov
insl
bnd
mov
mov
out
pop
mov
jle
out
cltd
dec
repnz
lods
repz
flds
mov
mov
cmp
ljmp
out
push
cmp
dec
push
jl
notb
xor
add
out
dec
pop
jnp
jg
mov
jno
cmp
call
dec
lock
cmp
push
insl
lock
sub
arpl
lahf
out
hlt
mov
aaa
mov
lret
pop
shr
sub
in
sbb
mov
mov
sbb
dec
dec
adc
fs
out
xor
fdivrs
xchg
add
fstpt
inc
stos
push
mov
pop
ja
inc
pop
call
sub
imul
dec
push
mov
or
fdiv
inc
xor
sub
mov
out
add
mov
jne
out
add
daa
les
jg
push
out
imul
push
mov
ds
insl
xchg
cwtl
jg
cmp
and
enter
notb
pop
push
jp
fucomp
movsb
popf
movsb
lahf
pop
cmp
scas
insl
or
mov
dec
sub
mov
stc
dec
cltd
pop
jns
push
mov
mov
daa
shll
rol
aad
idiv
pop
gs
mov
adc
mov
mov
dec
add
icebp
mov
outsl
or
dec
jmp
loop
push
dec
rorl
hlt
ss
subb
int
sbb
movsl
int
pop
pop
fimuls
xchg
stos
cwtl
dec
popa
jge
in
js,pt
mov
cs
test
iret
imul
or
into
bound
xchg
test
push
adc
ret
jle
cmp
mov
repz
push
jno
fldl
sub
sbb
add
push
or
out
adc
cmpsl
jp
xchg
pop
ret
pushf
pop
insb
jl
dec
nop
xor
in
das
in
into
lds
js
dec
xchg
shlb
add
pop
inc
data16
std
mov
dec
shrb
jl
add
and
popf
nop
sub
repz
call
sbbb
push
ds
and
lahf
dec
rcrl
int3
leavew
push
pop
jb
mov
fldt
xor
mov
add
nop
adc
mov
dec
pop
imul
outsl
sbb
sub
rol
cmp
out
mov
add
cli
and
fsubl
mov
out
orpd
mov
cmp
jno
and
and
mov
or
rorb
inc
sbb
dec
loop
lds
xor
sbb
scas
cmp
ret
into
dec
push
sub
repz
push
sub
sbb
pop
push
add
xchg
pop
scas
add
hlt
dec
loope
mov
add
jns
sbb
xchg
movsb
repnz
outsb
mov
gs
jg
inc
int
out
mov
and
je
sub
loop
adc
pop
iret
lahf
jb
add
push
xchg
in
inc
popa
pop
mov
push
fldenv
ljmp
imul
push
jg
arpl
test
hlt
add
addr16
or
leave
jg
inc
push
je
cmc
int3
iret
imul
jmp
sub
in
arpl
out
add
inc
incb
push
aad
jno
jmp
imul
fs
out
mov
insb
js
cmpsb
gs
mov
mov
jecxz
in
insb
cmp
lods
xchg
popl
sub
sub
and
int
jge
hlt
inc
sbb
mov
das
cs
sub
test
lret
orb
data16
pushf
and
imul
adc
and
push
sub
fiadds
lds
lcall
or
sub
sub
jl
aad
adc
pusha
mov
test
xchg
xor
mov
dec
pop
stos
inc
inc
sub
dec
dec
inc
sub
bound
fcoms
fstp
sub
push
je
mov
scas
mov
ret
and
or
push
sahf
rclb
popf
cmp
cmp
pop
push
mov
lods
pop
sub
sub
add
lods
outsb
xchg
inc
jns
lods
jl
lock
pop
jb
test
mov
mov
cmp
lcall
outsb
mov
push
push
adc
adc
aam
jge
cld
mov
jb
and
ret
or
inc
push
dec
inc
sub
ja
call
cmp
adc
subb
dec
push
adc
and
jae
pop
mov
neg
sub
je
push
out
sub
scas
mov
and
cld
fsubrs
pop
jmp
out
sbb
push
dec
dec
nop
mov
rcr
imul
out
icebp
rcrl
test
out
scas
bnd
jmp
lock
stos
inc
cmpsl
cs
mov
sbb
mov
aad
test
pushf
lods
add
mov
xchg
sub
or
pop
cmpl
sbb
divb
or
icebp
push
and
dec
add
or
mov
mov
js
sbb
lret
lods
inc
sub
aam
sub
flds
mov
dec
or
mov
dec
xchg
leave
js
cltd
fisttps
push
hlt
int
shrb
fwait
imul
into
pop
and
mov
jg
jo
fisubs
mov
out
lret
mov
xlat
lcall
mov
pop
jp
test
les
xor
rorl
jge
imul
lret
xor
mov
xchg
jo
popf
in
rcl
jl
xchg
mov
push
js
fisttps
fs
xor
comiss
dec
stc
in
daa
lcall
insl
mov
sbb
out
ret
movb
lahf
test
flds
and
hlt
outsl
mov
fcom
loop
adc
adc
lods
rcrl
dec
rorl
clc
test
xchg
ljmp
and
mov
repz
mov
scas
adc
popf
jns
lods
lcall
pusha
je
jo
insl
mov
int
std
repz
lret
mov
popa
aaa
inc
sub
ja
push
pop
fcomi
jg
std
mov
std
mov
in
dec
lret
xlat
sbb
stos
rorl
fpatan
cmp
sub
adcl
inc
or
jb
ret
jmp
lea
inc
out
cmpsb
mov
adc
inc
push
jbe
shll
sahf
ja
movsbl
ds
or
sbb
movsl
sahf
popf
sub
inc
cmp
bswap
xor
in
data16
pop
sahf
mov
or
aad
clc
cltd
pushf
ret
push
jnp
xor
sbb
pusha
or
pop
cmpb
jmp
dec
jmp
mov
rcrl
jo
fwait
sbb
sub
or
jmp
loopne
lds
fdivr
jg
sahf
inc
inc
test
and
xchg
fadds
dec
mov
mov
dec
mov
popa
pop
dec
jne
test
mov
scas
pop
dec
stc
std
dec
xchg
jp
inc
or
icebp
sub
pop
arpl
mov
xchg
jb
mov
sbb
jge
cli
mov
es
and
imul
es
and
xchg
enter
mull
daa
mov
xor
inc
sub
mov
in
cltd
adc
cmovg
cmp
std
mov
xor
es
or
pop
test
addr16
adc
xchg
adc
leave
mov
stos
sti
cmpsb
push
push
inc
jbe
outsl
add
mov
and
or
mov
daa
lods
lea
cld
push
mov
push
xchg
iret
into
loope
ret
call
jmp
adc
and
cmp
ret
das
jle
lahf
ss
mov
sbb
mov
push
mov
fildll
dec
add
mov
push
das
shrl
xchg
push
lahf
sbb
fistpll
test
mov
adc
mov
hlt
fdivrl
into
adc
push
inc
test
xchg
test
inc
cmpsl
xchg
aam
jmp
mov
lds
xchg
sub
int3
cmc
ret
ficoml
push
dec
sahf
dec
mov
test
pop
clc
arpl
mov
mov
mov
jp
call
sbbl
jg
xchg
xlat
inc
sbb
cmp
mov
mov
lock
cmp
jo
cmp
in
cli
add
push
aas
or
cli
test
mov
int3
es
mov
roll
repz
scas
test
xor
xor
int
jnp
mov
sbb
icebp
js
popa
ljmp
sub
stos
clc
cs
ds
jnp
nop
in
cmp
xchg
push
mov
addr16
add
pop
jp
cmpsl
xchg
fbld
dec
ljmpw
jecxz
in
dec
push
stos
xchg
jg
fwait
negl
das
bound
mov
or
pop
clc
or
add
pop
dec
bound
ljmp
pop
or
rep
or
inc
xchg
lds
repnz
cwtl
ficompl
pop
insl
cwtl
xor
cld
sbb
sbb
jbe
ss
jp
xor
nop
dec
imul
pop
sbb
mov
or
jg
data16
mov
sub
test
outsl
fisubs
mov
xchg
out
stos
test
xor
es
xchg
xor
adc
dec
std
push
or
sbb
and
ficoms
or
rcrl
rclb
outsb
out
mov
push
mov
fwait
pushf
sbb
mov
inc
addr16
xchg
dec
push
xchg
inc
adc
mov
mov
fdivs
iret
mov
mov
into
repz
dec
xlat
or
push
scas
movsb
jb
push
pop
pop
adc
add
aad
push
jl
pop
sub
adc
pushf
sbb
clc
cmp
dec
rcrl
jb
fistl
pop
jbe
call
cmc
fstps
sbb
ret
sbb
std
in
testb
or
outsb
mov
or
jb
cmc
dec
cmp
sub
jbe
mov
lods
jb
xor
or
dec
or
outsb
fsubl
repnz
cmp
jp
xor
xor
pop
ficoml
push
ja
mov
jb
insl
pop
inc
test
mov
jne
jno
xor
jns
outsb
jp
inc
subl
out
mov
ja
ret
test
test
xorb
repz
addr16
data16
and
aad
push
cmpsb
testb
push
decb
mov
and
mov
or
lock
or
test
xor
jb
dec
xchg
push
xchg
and
ja
mov
mov
adcb
ror
pop
cli
jbe
or
add
jae
sahf
xchg
add
movsl
add
addb
je
jp
cs
jle
pop
aad
or
add
aad
cmc
inc
inc
out
pop
add
repz
mov
cld
or
out
fwait
jnp
idivl
shlb
scas
xor
mov
loopne
mov
aad
call
popa
ret
idivb
mov
sahf
xlat
mov
cmp
jns
ret
insl
dec
inc
cltd
mov
imul
or
test
dec
mov
arpl
sbb
roll
cmp
xor
push
xchg
ljmp
popl
jg
mov
ss
mov
pop
ja
mov
pop
cmpb
pop
pop
pop
dec
and
sbb
test
add
mov
das
jmp
pop
add
xor
lods
lds
sub
push
or
dec
mov
jnp
imul
mov
mov
cld
adc
mov
xchg
jne
movsb
pusha
lock
mov
std
in
scas
jnp
push
xor
fists
add
stc
push
ljmp
fs
int3
mov
rcrb
xchg
lret
sub
xor
sub
fbld
mov
dec
add
add
mov
jo
test
sub
lock
adc
dec
mov
sbb
or
ds
sahf
inc
dec
or
pop
sub
jmp
fistpll
cltd
ret
xor
imul
adc
notl
xor
inc
adc
mov
fisttpl
push
inc
cmp
addl
mov
sub
pushf
sub
xchg
inc
test
push
aam
lcall
xchg
pop
mov
leave
sbb
dec
jl
leave
dec
movsl
cmpsl
and
lret
std
rorb
js
popf
mov
dec
stos
xor
pop
leave
push
mov
cld
int
mov
cmp
dec
out
vpshab
sub
out
test
fdivr
sub
mov
test
cmpsl
cmpl
insl
arpl
sub
bound
mov
mov
cmp
mov
iret
sbb
repnz
pop
adc
inc
dec
popa
jae
xor
xor
stos
faddl
out
dec
cmc
mov
lcall
ljmp
popa
std
inc
push
jb
andb
jmp
pop
cmp
test
lcall
int3
pushf
outsl
lods
stc
dec
add
in
dec
lock
into
jge
aad
sub
push
call
int
pop
xor
std
int
push
mov
mov
sub
popa
sub
lea
jle
mov
or
shlb
pop
testl
sbb
mov
sbb
sbb
lahf
inc
or
fnsave
cs
fimull
sbb
sbb
aad
lret
outsl
pop
lock
mov
ja
rolb
xchg
cmp
mov
enter
lahf
fisubrs
mov
into
call
sub
jge
adc
push
das
fs
int3
mov
or
std
sbb
mov
sbbl
jbe
fmuls
scas
loopne
or
addl
dec
adcb
and
repz
mov
sahf
inc
testb
jl
negl
fldl
pop
test
pop
out
jns
adc
xorl
push
xchg
push
xchg
push
mov
sbb
adc
xchg
push
mov
repnz
shr
jne
bound
gs
fsts
rol
xchg
sub
loopne
fisttps
cld
add
out
test
int3
xor
popa
cli
xlat
add
push
xor
push
inc
sub
pop
clc
pop
div
es
test
mov
xor
test
mov
arpl
cli
insl
mov
and
out
lcall
mov
notl
lds
jno
or
les
inc
dec
in
pop
lods
mov
mov
test
ja
pop
xor
dec
xchg
sarl
dec
es
cmp
push
insb
mov
ljmp
add
inc
xchg
lcall
xchg
test
lods
jp
xor
jbe
fcompl
mov
xor
movsb
or
pop
xor
cmp
pop
icebp
add
sar
js
sub
cmpsb
dec
xchg
xchg
mov
xor
clc
xchg
pop
xchg
call
pop
sti
dec
lahf
xchg
idivl
mov
bound
inc
sar
stos
fisttps
es
addr16
sub
sbb
push
cmp
jne
sti
cmp
xchg
divb
adc
and
jg
mov
push
hlt
jo
dec
loopne
mov
icebp
notb
ficompl
jne
adc
push
ljmp
cmpsb
ss
lahf
enter
rcr
xchg
xor
or
mov
cmpsl
gs
push
cmp
clc
subl
out
mov
cwtl
push
hlt
push
out
sub
push
outsl
frstor
ljmp
aaa
leave
dec
xchg
pop
xor
idiv
xchg
cli
in
pop
mov
xchg
fs
stos
test
rolb
inc
jbe
aam
lds
inc
ljmp
mov
mov
call
xor
ljmp
jne
insl
adc
push
fimuls
inc
cmp
push
xor
ljmp
mov
or
jbe
sahf
imul
stos
insl
push
push
aaa
pop
push
cld
enter
ja
adcl
and
test
and
test
ret
leave
ds
sub
imul
out
mov
add
iret
ds
inc
lds
adc
daa
rclb
xchg
test
outsb
push
stos
mov
cltd
daa
push
inc
push
lret
sub
dec
inc
adc
xchg
into
add
mov
das
cmp
aad
mov
jb
inc
xchg
inc
xor
stos
add
call
pop
mov
xor
call
and
dec
xor
sub
mov
push
rorb
adc
sbb
aad
insl
stc
jle
inc
fimuls
jge
cmc
loop
mov
pop
mov
mov
in
push
hlt
scas
mov
movsb
jecxz
adc
in
stc
out
daa
leave
dec
lock
ret
stos
mov
adc
orb
mov
xchg
mov
xor
sbb
jo
xor
ljmp
fcmove
imul
sub
movsl
mov
iret
std
pop
cmpsl
test
fsubrs
add
lods
int3
jge
arpl
loope
imulb
jl
jecxz
in
xchg
xchg
fidivrl
xchg
mov
clc
aad
jle
popf
test
inc
pop
push
fdivl
cmpsl
sbb
mov
xchg
push
out
hlt
xchg
jb
mov
adc
idivb
mov
mov
test
mov
enter
mov
decl
icebp
in
xchg
insb
jl
xchg
in
cmpsl
mov
push
cmpsb
loope
pop
subb
mov
push
lods
xchg
or
dec
arpl
fucomip
dec
push
xlat
ret
sub
dec
and
pushw
adc
shll
sub
cltd
adc
int3
ret
lods
jl
sarl
sbbb
adc
imul
jge
popa
lods
add
inc
xchg
mov
add
iret
jae
and
mov
repnz
insl
pop
jmp
pop
pop
lcall
xchg
jecxz
gs
dec
cmpsl
mov
iret
cwtl
push
in
mov
sbb
sub
call
xor
lods
inc
cltd
dec
mov
mov
and
test
daa
jmpw
sub
or
pop
push
idivl
cs
ficomps
pop
pcmpeqd
jns
adc
mov
dec
les
push
xor
lock
inc
add
pop
mov
inc
in
iret
cmp
mov
xchg
stc
sub
add
mov
jo
adc
mov
and
aas
or
test
mov
aam
add
jne
mov
sahf
fdivrs
jno
and
rclb
adc
test
xchg
negl
push
int
into
or
js
rcl
lcall
push
pop
xchg
jmp
gs
ss
mov
jno
mov
nopl
mov
sub
pop
cmpsl
jo
data16
sarb
cmp
aas
inc
fwait
jecxz
mov
into
sbb
ss
xchg
fs
jno
rcr
and
add
and
imull
cmpsb
ss
adcl
fistpll
pop
outsb
cmp
cli
loope
inc
ret
test
mov
jae
push
dec
add
push
aaa
data16
jo
dec
mov
out
stos
cmp
push
fstpt
jmp
mov
mov
orl
xchg
push
dec
inc
dec
push
dec
imul
lock
push
mov
push
int3
aad
ficoms
mov
mov
or
xor
pop
sbb
and
test
fucomip
out
in
outsl
and
out
inc
fcoms
or
fwait
cwtl
mov
sar
in
pop
jbe
andl
imul
xor
jmp
not
and
push
push
push
and
int3
loop
icebp
sbbl
jb
addl
xor
sbb
scas
lret
or
add
xchg
enter
cmp
outsb
addr16
dec
cs
and
dec
lds
sbbb
call
cld
ja
push
or
cmp
jbe
sub
mov
inc
or
add
xor
and
dec
adc
pop
adcb
dec
xlat
cld
sub
stc
sub
fmul
pop
scas
xor
pop
movsl
jb
icebp
jmp
sbb
leave
mov
push
pop
mov
out
inc
and
lods
adc
out
je
push
lret
push
shr
push
mov
ficomps
out
cli
jecxz
jecxz
sub
inc
mov
out
pusha
push
into
iret
jae
test
addb
sub
lahf
popa
mov
es
cmp
jmp
push
cmpl
fistpll
loop
jb
fdiv
popa
das
sbb
lret
ret
out
cld
adc
popf
sarl
inc
inc
imull
xlat
daa
or
mov
iret
pushl
jae
mov
jmp
fbld
push
push
mov
jmp
mov
pop
mov
and
scas
insb
sar
int3
arpl
inc
mov
outsl
out
add
xchg
gs
addr16
hlt
pusha
and
sbb
mov
jmp
mov
iret
fistps
and
test
imul
loope
into
or
push
add
push
add
pushf
jmp
mov
adc
dec
mov
ljmp
clc
daa
pop
popf
mov
test
sar
repz
cmpsl
ret
cmp
sbb
cmpsl
and
or
mov
in
daa
add
push
out
repnz
icebp
ret
push
pop
ss
rol
ds
lea
sub
cmp
inc
ljmp
push
or
fcmovu
xchg
sub
arpl
iret
jmp
outsl
int3
hlt
xchg
cmpsl
push
jnp
mov
jp
ja
repz
fidivl
mov
mov
and
add
inc
out
cld
pop
int
mov
aaa
movsb
sub
sbb
and
inc
daa
inc
stos
add
mov
std
pop
sbb
and
jbe
sub
push
xchg
sbb
cmp
and
ljmp
cltd
xor
dec
pop
ds
stc
leave
jp
push
sbb
xchg
rcr
mov
add
add
idiv
pop
xor
out
mov
fldcw
into
dec
xor
pop
adc
xchg
sbb
inc
cmp
lret
mov
test
mov
aam
lahf
ror
cld
jge
test
jbe
lahf
es
jo
fisubs
xchg
mov
testb
imul
mov
inc
repz
pop
or
inc
jp
inc
and
push
in
cmp
stos
call
mov
mov
dec
imul
scas
jae
fldt
fcoml
push
and
pop
lds
and
jo
mov
adc
mov
ja
push
jmp
cmp
scas
sti
out
lret
loopne
inc
fmull
std
cmpsb
enter
test
lret
repz
push
push
out
dec
push
mov
in
pop
xor
aaa
fisubl
inc
sub
jbe
mov
and
rcll
jae
adc
aad
stos
cmp
movsl
loope
loop
in
sbb
in
shl
inc
mov
and
mov
clc
jmp
pop
or
fldt
ja
notb
mov
cmpsl
neg
jl
mov
cmpb
adc
add
xor
lock
ret
flds
add
dec
sub
rorl
or
mov
dec
pop
xor
and
rorl
lret
sbb
test
adcl
mov
fld
mov
xchg
xchg
lcall
scas
scas
and
pop
insl
xchg
in
cmp
adc
dec
pusha
mov
in
in
mov
add
ret
add
xchg
dec
ret
ss
stos
enter
cs
adc
data16
adc
scas
mov
mov
lock
xchg
gs
pop
pop
movsb
imul
mov
xor
jle
cltd
lea
dec
xor
or
jne
or
inc
push
aad
bound
pop
dec
or
add
int3
lahf
rcll
mov
adc
cltd
adc
fbstp
imul
pushf
xor
es
adc
add
out
mov
dec
or
mov
aaa
nop
arpl
aaa
les
ret
sbb
xchg
jp
jge
xor
mov
inc
aaa
xor
imul
and
mov
inc
xchg
xchg
mov
stc
stc
shlb
xchg
neg
cltd
shl
inc
inc
inc
dec
stos
das
sub
push
jl
jl
pushf
outsl
jnp
sub
mov
pushf
sub
jb
lret
and
pop
mov
lret
fcmovnb
shrb
pop
aas
clc
inc
neg
ds
mov
outsb
stc
das
xchg
add
mov
in
hlt
xor
or
mov
xchg
scas
outsb
imul
and
icebp
jle
imul
mov
mov
aam
pop
cmp
das
jnp
xchg
add
mov
ffree
rcr
cld
xchg
pop
dec
xchg
sbb
push
int3
call
mov
jl
inc
xchg
sbb
xor
shlb
fwait
cmc
sti
push
lcall
out
scas
inc
push
not
fnstsw
jmp
std
push
push
insb
jmp
pushf
stos
or
mov
add
adc
hlt
pushf
jge
cmpb
xchg
mov
sbb
push
sahf
int3
cmpsl
daa
mov
fcmove
mov
pop
xor
and
cmpl
adc
pop
movsl
and
subl
nop
movsb
push
push
add
int
jge
pusha
mov
pop
sub
ror
rolb
mov
test
in
mov
jle
add
into
xchg
ljmp
dec
xor
xchg
addr16
jns
push
fstpt
mov
leave
fdivrl
xor
fwait
test
ss
in
mov
mov
xchg
mov
cmp
cmp
xor
sub
sub
rcll
jns
and
pop
jno
mov
lods
adc
or
dec
xchg
dec
lock
cmp
inc
add
lea
jb
rcrl
jg
dec
pop
sbb
stos
pop
clc
xchg
cmc
in
cmp
xchg
xor
mov
mov
ds
mov
mulb
mov
sarl
mov
vcomisd
in
cmp
pushf
mov
or
test
mov
insl
pop
mov
repnz
cs
ret
cld
jns
cmp
pop
push
jg
aad
sub
inc
and
shlb
push
sbb
cmp
cmp
mov
aad
or
jae
cld
call
test
lods
sbb
xor
outsb
push
icebp
jmp
and
pop
jbe
dec
dec
int3
or
adcl
dec
mov
fstl
inc
ss
mov
inc
lahf
pop
add
mov
lret
xlat
pop
aam
loopne
scas
sbb
push
adc
mov
or
sbb
dec
dec
movsb
into
mov
jbe
lret
inc
mov
test
lcall
in
popa
mov
hlt
xor
push
sub
lret
scas
scas
in
sbb
add
imul
orl
jecxz
dec
out
xchg
int
jbe
fmulp
adc
pop
jbe
push
sbb
movsb
sbb
fwait
inc
jno
adc
sbb
ja
jle
pop
mov
xor
lods
dec
scas
mov
adc
push
mov
das
add
shll
cmp
xchg
imul
int
stos
jl
pop
lea
add
addr16
sub
xor
jmp
or
xchg
fisttpll
clc
rcrl
mov
jno
mov
add
dec
popa
pop
cmc
ret
je
mov
out
dec
push
push
cli
push
scas
jae
repz
stos
repnz
in
mov
mov
outsl
js
bound
inc
scas
cmpsl
dec
xor
scas
dec
adc
push
jb
ret
and
xchg
add
lret
lods
shrl
cli
inc
movsl
sbb
sub
imul
int3
adc
fcomps
or
popa
push
mov
adc
scas
fwait
sub
loop
xchg
bound
xor
in
sub
dec
adc
cmp
nop
sub
push
and
cs
rcrb
sbb
fwait
nop
loope
mov
pop
and
mov
jl
subb
push
outsb
int3
mov
add
pop
fdivrl
push
jle
and
and
push
mov
or
xchg
jo
push
into
insb
mov
push
adc
push
iret
sub
jae
adc
mov
push
lahf
xchg
flds
lcall
aad
fsubl
mov
xchg
pushf
test
add
jne
rorl
sarl
mov
cltd
outsb
xor
lret
into
je
push
pop
xchg
sbb
leave
mov
pop
fs
lret
adc
or
add
xchg
in
pop
jbe
push
inc
ljmp
xor
sbb
rclb
inc
mov
fidivs
jmp
and
hlt
xorl
jge
jbe
cmp
in
dec
xor
inc
popf
cmpsb
xchg
mov
pop
push
push
pop
cmp
dec
mov
cmc
inc
sub
dec
mov
cmp
js
pop
mov
and
jmp
out
or
pushl
gs
mov
push
icebp
dec
ficoms
xchg
fwait
movsl
mov
mov
xchg
loope
lcall
pop
pop
mov
mov
or
fwait
sub
lahf
hlt
push
outsl
negb
pop
pop
jl
clc
int
push
dec
js
push
outsl
int
iret
mov
int3
push
adc
out
repz
sti
pop
aam
daa
xor
cmp
clc
pop
inc
out
in
addr16
mov
jg
fisubrl
sub
jb
add
add
outsl
jae
rorb
sub
mov
sub
scas
or
jecxz
fisubrs
mov
outsl
mov
inc
dec
int
lock
pop
mov
push
fsubrl
sbb
pop
outsl
lahf
mov
cli
inc
mov
adc
dec
loopne
pushf
xchg
sbb
adc
pop
adc
mov
jl
lods
adc
sbb
roll
insb
mov
fidivrs
lods
lods
cs
xchg
jb
ja
push
jl
pop
fisttps
in
mov
jp
in
and
sbb
aaa
mov
mov
xor
lods
mov
xchg
xchg
jg
jne
or
mov
sbb
xchg
mov
mov
pop
lods
ss
fisubl
orb
dec
xchg
fwait
cs
dec
aas
push
xchg
push
cmc
into
in
jb
inc
sbb
popf
fwait
jbe
and
cmp
das
inc
sbb
shrl
sub
shrl
xor
int
or
adc
push
xchg
into
outsl
sub
lods
outsl
or
popf
jecxz
and
jmp
mov
inc
add
push
popf
cmp
mov
mov
nop
jmp
mov
lcall
adc
mov
xchg
subb
fdivrl
sbb
push
cmpsl
sbb
jmp
add
jl
sbb
popa
call
pop
mov
inc
ficoml
jmp
adc
pop
mov
mov
aad
cmc
pop
fistps
mov
mov
mov
lret
mov
repnz
test
gs
cwtl
cmp
and
in
jg
jae
push
pop
data16
sbb
mov
call
and
dec
scas
das
and
pop
adc
inc
aad
mov
mov
mov
push
fisubl
pop
jecxz
jecxz
push
cmc
push
test
push
imul
mov
adc
cli
out
mov
add
push
adc
mov
test
jge
mov
sbb
enter
pop
jmp
adc
mov
sbb
mov
shl
cmpsb
ret
push
imul
mov
icebp
cs
inc
rclb
push
mov
lret
xchg
xor
mov
test
subl
inc
lock
sbb
insb
fisttpll
push
dec
mov
scas
das
leave
xchg
and
xchg
pop
ss
sarb
insl
jge
in
xor
int3
mov
dec
add
aas
aam
pusha
jl
das
repnz
and
xor
aam
cmpl
mov
mov
mov
mov
sbb
sbb
or
int
pop
sbb
pushf
cmpb
add
jle
hlt
jbe
fdiv
mov
push
in
cli
out
inc
xor
aas
pop
xor
jg
ja
int3
pop
fmuls
lock
aad
add
xchg
xchg
or
int3
sbb
dec
in
imul
fcmovb
iret
cltd
ret
adc
mov
leave
ljmp
dec
sbb
adc
jae
mov
sub
xlat
call
and
mov
iret
add
add
mov
shrl
clc
inc
ror
into
scas
xchg
addr16
pop
sub
sbb
popa
push
mov
divb
cmpsb
jne
in
jp
sahf
clc
cmp
pop
pop
sbb
sub
pushf
xchg
jno
mov
push
mov
or
cwtl
in
and
push
dec
xlat
sub
push
call
out
pop
xchg
pop
ret
pop
es
icebp
cmp
dec
adc
out
jp
xor
mov
inc
jle
pop
es
or
in
xchg
inc
mov
lods
mov
push
push
call
lahf
js
mov
clc
decb
mov
add
jl
cmpsb
jge
cli
iret
sahf
and
outsl
sbb
int3
aam
out
xor
mov
in
jb
xor
arpl
lret
mov
cmpsl
pop
adc
das
fcmovb
xor
cmc
adc
scas
jle
sbb
lahf
jne
test
adc
sarb
and
cmpsl
mov
jmp
ds
mov
pop
push
les
js
sbb
xchg
mov
test
jg
lea
repz
lods
xor
mov
inc
hlt
xchg
jbe
test
stc
stos
and
repnz
add
mov
and
mov
cmp
push
push
fldenv
push
into
or
lock
sarl
nop
cmpsl
popf
test
xor
mov
out
mov
lea
cmc
aaa
test
sub
xchg
divl
sub
fcomi
and
sbb
lret
cld
rcll
nop
push
into
mov
cmp
fidivl
aam
or
push
fdivs
inc
lods
lods
jg
pop
outsb
mov
mov
mov
bnd
test
dec
xchg
inc
push
push
shll
cwtl
adc
ja
lcall
mov
push
push
xchg
mov
int3
aad
push
andl
push
repnz
add
sub
jmp
jne
aaa
push
addl
push
or
clc
ret
stc
test
sbb
push
std
mov
jecxz
fsubs
outsl
jns
pusha
xchg
pop
inc
arpl
cwtl
lods
mov
mov
inc
or
outsl
adc
insb
xorb
jb
out
aam
push
iret
adc
loope
shrb
xchg
mov
nop
pop
rcrb
mov
xchg
push
jbe
movsl
mov
enter
pushf
or
sub
out
or
out
push
nop
push
enter
inc
sbb
mov
dec
pop
mov
shrl
inc
push
orl
xchg
jnp
shll
lods
lods
movsb
mov
fs
mov
das
mov
fisubs
in
jg
int3
cs
loope
das
js
jno
xor
andb
mov
inc
aad
xchg
clc
ja
add
les
dec
adc
or
adc
cltd
outsl
jnp
mov
nop
xlat
mov
or
pop
mov
add
jle
es
int
test
mov
lds
lods
in
jae
dec
repz
cmp
add
push
push
pop
or
dec
lret
dec
clc
xchg
pop
cld
dec
push
push
loope
cltd
xorb
fsts
subb
push
mov
ljmp
dec
mov
inc
inc
iret
sbb
mov
fcompl
daa
cmpsl
adc
fistpll
adc
or
push
lret
cmp
jl
iret
or
xor
ret
frstor
shlb
fidivrs
into
stc
pop
mov
inc
hlt
mov
push
inc
mov
imul
lock
pop
adc
mov
adc
aam
out
or
inc
lret
enter
xchg
int3
decb
mov
out
jno
push
cld
sti
mov
jp
out
mov
arpl
add
pop
cs
mov
mov
add
pop
cmpsl
std
inc
imul
add
lock
add
jmp
scas
add
push
xor
xor
insl
stos
jge
int3
pop
dec
jg
sbb
jo
jne
push
sbb
loop
push
pop
sbb
in
aaa
pop
mov
xchg
inc
add
and
rcrb
dec
jae
xchg
mov
cld
aam
ret
shll
shr
enter
mov
sbb
out
lods
add
jmp
stos
mov
mov
push
pop
mov
pusha
in
rcl
sub
mov
cs
inc
arpl
dec
inc
xchg
rcll
mov
sarl
fidivrl
scas
dec
push
aam
adc
hlt
sub
add
jl
in
pop
mov
mov
lret
sub
jecxz
loopne
xchg
repz
insb
addr16
and
loope
inc
and
test
out
shl
lock
jno
mov
dec
rorb
dec
cltd
loop
jo
mov
in
mov
hlt
mov
mov
mov
push
inc
add
mov
std
fiaddl
jg
iret
ja
sbb
or
add
inc
stos
inc
jb
push
pusha
inc
sub
xor
cmp
clc
pop
out
insl
dec
jo
in
repz
mov
sahf
subb
icebp
push
cmpsl
xor
stos
jle
loope
stc
dec
pop
jecxz
je
add
ficompl
lea
pop
xchg
mov
test
cmp
mov
stc
fdivr
enter
add
nop
xor
cmpsl
cmp
rclb
add
mov
and
ret
xchg
ret
cli
icebp
mov
imul
out
adc
pop
fwait
in
shll
lret
rcll
sbb
inc
rcr
clc
jp
popa
in
jo
sub
add
xor
sub
mov
sar
lret
repz
xor
mov
xchg
dec
stos
push
jge
dec
imul
fwait
pop
sbb
jb
loopne
faddl
mov
cmc
jecxz
rcr
fucomi
xchg
sbbb
sub
fldl
mov
stos
sub
mov
sub
fucomip
adc
xchg
pop
push
int
outsb
out
jecxz
xor
dec
sub
or
jecxz
mov
lods
dec
jne
mov
cmp
fsubrp
das
and
cmpsl
mov
imul
mov
dec
movsb
sbb
jl,pt
outsb
xor
imul
xor
sarl
mov
testb
cmp
add
or
xchg
and
or
imul
xor
pop
test
pushf
call
imul
loope
aas
fs
scas
and
lods
mov
or
xchg
ss
in
jmp
fwait
sti
xchg
test
ja
inc
adc
out
cmpsl
imul
sub
sub
cld
inc
and
movsl
pop
xchg
sbb
andl
lods
mov
xchg
cmpsb
sub
jnp
mov
dec
rcr
inc
fwait
cwtl
dec
aas
out
fisubrs
ja
stc
pushaw
int
cmp
cmp
xchg
xor
inc
es
aaa
test
inc
lret
dec
dec
call
sub
mov
dec
movsl
outsl
arpl
test
xor
insl
mov
jne
xor
mov
fcoml
ret
pop
out
pop
out
insl
sarl
icebp
dec
xchg
loope
cltd
pop
jo
mov
nop
jge,pn
mov
dec
ljmp
ret
inc
cmp
pusha
sti
ret
push
stos
les
adc
shlb
mov
mov
add
dec
cltd
sbb
outsb
fucompp
dec
cmc
out
in
jmp
dec
fcoms
test
fiaddl
and
push
negl
sub
orb
int
adc
mov
jg
lods
inc
or
stc
outsb
and
jmp
xchg
xor
sub
mov
movsb
nop
ficoml
push
push
stos
mov
in
add
cld
fisttpll
aas
iret
mov
into
mov
insl
or
iret
std
mov
dec
neg
out
rcr
xor
push
shlb
lret
cmpsl
add
pop
arpl
dec
push
imul
repz
bound
loope
repnz
stos
inc
xchg
jb
subl
xchg
data16
loop
jle
dec
or
enter
imul
movsl
mov
lock
pop
aaa
dec
inc
xorb
sarl
bound
fistpll
mov
dec
adc
mov
dec
and
lea
push
add
jge
mov
clc
repnz
lea
movsb
fdiv
data16
cmpsb
pop
add
pop
test
jo
into
cmp
js
pop
xor
in
cwtl
push
addr16
bound
adc
adc
and
ljmp
pushf
out
sub
mov
push
xchg
fwait
cmp
pop
mov
adc
jp
loop
test
stos
out
mov
jecxz
test
fnstcw
or
mov
repnz
inc
pop
push
clc
mov
fcoml
sub
scas
orl
js
shrb
movsl
shll
xchg
adc
into
xchg
test
push
xchg
jmp
add
sub
jle
add
lahf
dec
jb
jo
scas
leave
dec
arpl
rolb
cmpsl
dec
sbb
adc
es
cmp
shll
jb
loopne
jnp
mov
cmp
mov
cmp
lahf
push
imul
cli
cmpsl
test
mov
xor
clc
mov
je
jb
ffree
xlat
adc
subl
adc
sub
into
mov
fwait
and
mov
pop
addb
fcomps
aaa
cs
jle
jmp
mov
push
xor
cmp
or
sub
enter
jecxz
dec
clc
ffreep
lcall
sbb
cmp
adc
xorl
xchg
mov
pop
and
and
popa
jb
loop
ret
lret
mov
je
enter
mov
add
sub
push
xor
xchg
loopne
pushf
xor
jae
dec
inc
lds
data16
cli
ret
and
xor
popf
negb
pop
fisttpll
aad
cltd
dec
shll
aad
mov
xor
imul
je
jg
pop
mov
sbb
into
stos
iret
insb
jae
xor
jmp
jg
add
and
jbe
movsl
push
sub
in
mov
sbb
ss
cli
cld
mov
mov
jge
cmp
and
shl
pushf
mov
and
mov
fcoms
jge
jnp
mov
inc
mov
mov
loopne
inc
xor
sbb
mov
cmp
fcoml
push
in
iret
push
fwait
bnd
pop
push
arpl
xchg
shr
ja
out
xchg
inc
fdivs
idivb
das
arpl
in
rorl
pop
mov
jecxz
std
push
dec
adc
std
jge
add
stos
rol
adc
mov
xchg
push
mov
sbb
pop
imul
idivl
xor
aaa
in
popf
xchg
dec
xorb
xor
lcall
inc
push
pcmpgtb
bound
int
jbe
insl
into
cmp
or
out
mov
aam
aaa
pusha
test
lcall
dec
sub
nop
mov
cmp
adc
adc
mov
push
je
mov
mov
daa
mov
adc
xlat
insl
mov
nop
pop
or
sbb
dec
inc
cmp
movsl
jnp
mov
mov
push
lahf
movsl
fs
xor
rorl
cmp
adc
ds
mov
adc
popf
popa
loopne
mov
aad
scas
sub
push
add
inc
ds
inc
in
cmc
jp
insl
jle
mov
cmpsb
rorb
cwtl
push
fisubrl
push
sub
cwtl
mov
push
adc
ljmp
test
scas
lret
jge
iret
inc
shrb
movsl
mov
dec
test
add
sub
push
pop
pop
mov
xor
xchg
outsl
scas
pop
cwtl
inc
in
sbb
mov
cmp
adc
mov
jb
subb
mov
pop
pop
lahf
xchg
inc
fcompl
cld
inc
and
and
xchg
loope
sbb
dec
in
arpl
mov
arpl
mov
push
adc
push
inc
push
outsb
mov
push
test
pop
inc
into
dec
int
dec
fdivp
inc
fdivrl
jns
fsubp
mov
test
call
fs
pop
insl
mov
js
inc
ficompl
push
cmpsb
jmp
and
mov
ds
jl
xchg
and
stos
xchg
sarl
adcw
xchg
enter
mov
mov
js
rolb
pop
inc
cmp
lahf
dec
add
sbb
cmp
sub
add
cmpsb
adc
insb
je,pn
sbb
mov
xor
dec
cmpsl
jmp
sub
mov
shr
imul
outsl
mov
dec
jae
inc
imul
and
jmp
fs
push
xor
add
shr
adc
inc
jp
icebp
out
jb
jl
scas
and
scas
sbb
push
lret
enter
fs
lds
cltd
rcrl
popf
mov
dec
and
popa
rolb
enter
dec
jbe
fisttps
rcll
pop
or
fldt
hlt
lods
fbld
adc
ss
enter
outsl
xchg
lock
pop
gs
inc
fsubrs
idivb
xchg
aam
cmp
outsl
stc
dec
sarb
sbb
popa
outsl
mov
or
mov
add
mov
ror
jo
or
mov
ljmp
dec
dec
mov
daa
sbb
pop
ljmp
stc
je
mov
jbe
dec
or
dec
adc
xchg
lock
cmpsl
sarb
into
outsl
movsl
mov
inc
dec
mov
xchg
mov
xchg
imul
test
sub
add
movsl
inc
xor
pop
cmp
adc
cmp
sbb
inc
push
dec
pop
add
ljmp
outsl
jp
mov
movsb
negb
iret
fwait
mov
pop
cld
xchg
push
mull
adc
dec
lds
dec
jp
xchg
jnp
fs
jae
dec
es
and
lahf
mov
push
xchg
lock
or
jbe
fisubl
or
or
addr16
push
orl
test
int3
out
jbe
lods
popa
inc
xchg
fsts
xor
push
popa
fldl
mov
pop
rol
imul
xchg
mov
adcl
mov
jg
push
mov
std
push
pop
jb
shlb
mov
pop
nop
hlt
mov
out
pop
jp
in
pop
movsl
and
scas
xlat
les
clc
std
movsl
lcall
nop
fs
cmpsl
das
imul
daa
out
mov
sbb
mov
cmpsl
jge
aam
sar
pusha
sub
cmp
leave
xchg
ja
adc
sbb
or
mov
lret
add
les
clc
cmpsl
es
sbb
cmp
lret
add
mov
imul
jle
and
xchg
xor
outsb
cmp
mov
lcall
push
xchg
repz
sbb
xor
stc
or
ss
add
push
or
cli
ret
add
jl
mov
jnp
xor
xor
cmp
leave
jb
cmp
dec
inc
dec
lea
jbe
mov
js
cmp
out
push
iret
frstor
int
inc
jne
imul
fisttpl
pop
aad
stos
mov
sub
out
fiaddl
add
and
ss
add
dec
ds
ss
xchg
cmpsb
clc
test
dec
mov
es
fnstcw
sbb
jg
dec
cld
daa
out
xchg
pop
aas
mov
js
ret
aaa
out
jle
dec
cmp
jg
cld
xor
mov
pop
jnp
ja
lahf
loope
lahf
jno
jno
jno
jno
jo
or
add
push
sbb
lea
mov
inc
pop
mov
jnp
and
imul
jge
fmull
loopne
push
jle
filds
mov
push
std
repz
mov
mov
xchg
sti
daa
std
std
std
std
loop
sti
lahf
or
and
fnstcw
popa
aam
idivl
add
pop
in
inc
push
mov
cltd
xchg
adcb
in
sub
or
or
popf
popl
pusha
mov
or
and
sbb
sarb
lret
int3
stos
fs
jo
fnstcw
cmc
sub
testl
jno
cli
hlt
std
push
dec
ljmp
cmp
pop
mov
pop
jg
and
into
faddp
inc
adc
das
mov
sti
test
std
movsb
mov
push
aaa
ljmp
sti
mov
cmpsl
test
leave
xor
rclb
scas
icebp
dec
icebp
ret
xchg
rol
lcall
sbb
cmp
psubd
repz
test
loop
xor
aad
repz
mov
xchg
sbb
fs
pop
mov
repnz
inc
jnp
sbb
jb
xchg
shll
aaa
or
pop
lahf
or
jns
das
cmp
add
inc
rcll
out
ds
inc
and
xorl
fwait
imul
mov
mov
xor
loop
jnp
xor
lock
leave
test
xchg
ficomps
fdiv
icebp
inc
or
cld
iret
sbb
jae
xchg
insl
adc
xor
pop
fwait
mov
aam
mov
xor
inc
pop
xchg
xchg
psrld
adc
cmp
cmp
bound
adc
subb
push
loop
mov
out
pop
sahf
cmp
iret
mov
add
cmp
add
ret
jne
sti
in
jge
ret
sti
mov
mov
imul
sbb
add
gs
push
jl
dec
popf
pusha
mov
add
xchg
insb
add
rorb
scas
hlt
push
add
sahf
push
mov
push
cmp
adc
xor
ja
xlat
inc
shrb
sbb
cwtl
adc
and
or
adc
mov
sarb
lret
clc
push
insb
lahf
dec
fidivs
aas
push
push
mov
mov
mov
test
jae
rcll
call
fstpl
loop
and
cltd
mov
dec
mov
es
jne
jo
xchg
shlw
aaa
enter
xchg
ds
lahf
push
lret
jno
rorl
ja
xor
push
jl
das
outsb
sbb
push
xor
jo
sbb
and
gs
add
loope
fsubl
fdivl
jno
mov
lods
adc
cmpsl
addr16
or
lahf
or
add
push
jmp
int
ficompl
cmp
or
xchg
addl
inc
inc
dec
and
or
ret
push
push
inc
add
pop
loop
lock
rclb
jne
pop
add
push
imul
test
cmp
push
pop
sahf
xchg
pushf
clc
sbb
adc
xor
xor
sbb
lea
jp
mov
mov
mov
xchg
mov
lcall
cld
test
lret
mov
push
leave
xor
mov
sahf
test
jg
psubsw
pop
outsb
jge
mov
mov
sub
or
adc
cmpb
jp
mov
pop
pop
dec
imul
es
mov
xor
mov
fists
js
mov
dec
mov
cld
daa
push
ja
js
stos
or
push
ljmp
mov
mov
test
push
push
cmc
int3
pop
xchg
daa
outsl
mov
push
arpl
mov
sub
dec
fxch
push
into
inc
fwait
xchg
cmpl
out
pop
mov
sahf
jl
fdivrp
mov
dec
xchg
inc
in
popa
out
mov
call
xor
aad
or
mov
mov
inc
lock
inc
shlb
fdivrl
cmp
mov
xor
cmp
cmp
flds
pusha
sub
int
rolb
sti
jae
sbb
aaa
popa
mov
mov
sub
repz
loope
pop
mov
pop
cmp
test
push
mov
mov
testb
jle
mov
cld
mov
mov
or
xor
leave
xor
lea
lea
sbb
ret
or
cmp
nop
orl
addl
dec
mov
lret
lahf
xchg
pop
andl
pop
push
inc
jge
out
in
cmp
push
and
or
push
jnp
sub
adc
pop
clc
jmp
andl
mov
sahf
into
dec
dec
cmp
xlat
sti
mov
jg
dec
call
xchg
jbe
jns
dec
pop
or
push
push
pop
jmp
call
cmpsl
jb
add
sahf
sub
fistpll
ja
sub
out
repnz
pop
xor
jl
dec
das
mov
hlt
push
dec
cmp
cli
adc
and
jle
inc
mov
adc
in
xor
lds
rol
sbb
xor
int3
mov
add
mov
add
imul
mov
or
add
push
jge
jns
xlat
jne
push
push
lahf
mov
icebp
ss
xchg
call
rcrl
insb
lods
aad
mov
sahf
test
pop
sbb
push
fsubrl
in
pop
cmp
ljmp
cmp
nop
sub
jle
out
out
out
cmp
xor
stc
in
decb
test
push
movsb
pushl
mov
pop
jns
pop
cmp
lea
scas
mov
shlb
cmp
cmp
pop
xchg
and
fnstenv
leave
neg
outsl
negl
adc
mov
cli
xor
fld
jne
or
jg
cld
call
hlt
xor
sub
push
fwait
into
lods
divb
pop
iret
push
rcl
gs
mov
inc
js
daa
into
out
pop
fdivrs
into
testl
cmc
or
jae
jnp
push
test
sbb
es
jbe
fisttpl
sbb
add
mov
jp
divl
or
jg
pop
xor
pop
mov
sahf
fwait
inc
int
mov
push
cmc
fsub
fstpt
fs
and
sub
int3
mov
stc
mov
pop
test
aad
repz
sub
cmp
out
sti
movsb
repz
aaa
cld
sub
out
daa
cmp
xor
jmp
addr16
push
jmp
pop
sbb
arpl
outsl
popa
insb
lahf
fnstcw
mov
fs
std
xchg
sti
daa
divb
insl
dec
aam
addr16
paddusb
xor
pcmpgtw
cmp
mov
sbb
fwait
inc
ret
loope
shr
mov
mov
lods
mov
call
cmp
mov
out
fwait
push
dec
mov
mov
leave
lcall
mov
sbb
lahf
shll
jle
xchg
fmulp
mov
in
lock
mov
flds
rcrl
movsl
loop
push
stos
les
cmp
fistl
mov
cmp
stos
insl
or
push
and
dec
setae
xchg
dec
stos
arpl
mov
cld
imulb
mov
or
insb
mov
inc
sub
jae
push
in
jg
cltd
inc
mov
or
andl
jle
xchg
jns
push
pop
scas
cmp
in
pop
dec
icebp
ja
in
sbb
xchg
insl
int3
add
int
pop
xor
pushf
ds
pop
fwait
mov
sahf
ror
push
imul
or
xor
test
inc
sub
adc
ret
seta
cmp
sbb
aam
push
dec
add
jl
jne
lods
mov
pop
movsb
int3
testb
cld
and
xor
enter
push
xor
es
dec
les
mov
sbb
inc
int3
adc
mov
mov
xchg
insb
dec
je
ffreep
pusha
jae
sbb
push
bound
in
scas
imul
cmpsl
jae
push
xchg
sbb
mov
xchg
aad
xlat
adc
xlat
loope
sub
pop
pop
add
adc
bound
das
rcl
cmp
lret
pop
jmp
mov
in
lock
lock
push
mov
sar
movsl
jnp
cwtl
dec
insb
xor
pusha
xchg
xor
sbb
cmp
arpl
jge
dec
mov
cmp
fadds
sti
es
pop
lcall
test
jne
cs
cmpsb
pop
movsl
stos
movsl
sbb
lea
mov
mov
push
jecxz
shll
xchg
into
fs
divps
jbe
add
scas
mov
xchg
mov
mov
and
dec
popf
int3
lock
shrl
imulb
xor
dec
xor
ret
mov
jecxz
pusha
mov
xor
inc
xchg
xchg
sbb
mov
int
or
cld
push
xor
jb
xchg
into
aad
sub
inc
lods
sbb
xor
jbe
push
inc
lret
aaa
mov
sbb
or
pusha
push
into
popa
cmpsl
xchg
rorl
gs
je
cmp
mov
popa
aam
testb
int3
movsb
insb
std
mov
jnp
mov
dec
movsl
clc
shrb
call
jne
pop
xlat
xchg
xchg
pop
adc
mov
pop
test
pushf
or
leave
dec
push
outsb
xor
pop
sti
push
rorl
sti
xlat
imul
pop
xor
outsl
sub
inc
push
pop
xor
out
pop
push
cld
ljmp
fstps
xlat
lahf
mov
mov
push
or
cld
sbb
adc
or
pop
rolb
mov
cmp
push
bound
hlt
pusha
mov
cli
adc
xor
ljmp
stos
je
aad
add
sbb
pop
pop
pop
in
xchg
and
mov
jb
fnstcw
xor
stos
add
cld
jg
cmp
adc
imul
imul
push
test
ljmp
cwtl
ljmp
sahf
xor
or
lret
mov
jb
push
xchg
mov
imul
stc
fnstcw
adc
jle
hlt
add
mov
addl
cmp
push
and
inc
inc
xor
shlb
das
out
out
jno
and
add
popaw
decl
mov
loopne
je
subl
repz
pop
ljmp
pop
cwtl
mov
ds
mov
mov
int3
test
dec
lahf
add
fwait
adc
lods
xchg
data16
stos
outsl
dec
inc
cltd
out
jae
and
stos
or
mov
aad
out
mov
mov
hlt
sbb
mov
test
xchg
sub
in
xchg
jno
stos
pop
push
pop
mov
or
stos
loope
out
mov
aad
cli
xchg
push
cli
test
push
pop
jnp
out
or
cwtl
mov
loopne
jnp
ss
fistl
ficomps
xchg
sub
pushf
sub
jecxz
push
jmp
sub
cld
call
mov
sbb
mov
in
das
test
cmp
cmp
pop
div
jecxz
dec
pop
not
cld
loope
lea
scas
movsb
push
andb
inc
add
aas
cmp
add
sbb
mov
sbb
adcl
and
cmp
pop
fbstp
insl
stc
sub
mov
xor
testl
jne
push
lahf
adc
xor
xor
pop
nop
das
mov
fistps
jle
and
and
xor
mov
mov
inc
dec
pop
mov
ss
jg
xchg
jne
in
xchg
mov
xchg
incl
fsubrl
sbb
mov
sub
loopne
rcr
jnp
into
pop
mov
repz
shlb
cmp
notb
sbb
lock
cli
fistpl
loope
inc
out
xor
mov
mov
jbe
ljmp
push
or
movsl
cli
xor
jb
dec
adc
int
rorl
outsb
dec
push
ljmp
and
mov
jno
sahf
adc
cltd
push
sti
sub
fdivrs
pop
shl
mov
es
dec
jb
outsl
xchg
add
inc
lock
xor
test
push
cwtl
outsb
jmp
test
push
cmp
sbb
daa
pop
xlat
dec
sub
leave
int3
addr16
mov
jb
repz
aam
lock
push
mov
inc
add
adc
mov
or
icebp
jae
inc
into
out
mov
jle
jle
repz
mov
test
xor
negl
mov
adc
add
mov
push
arpl
fwait
mov
jle
test
xchg
stc
pop
mov
pop
mov
lret
push
leave
mov
jmp
jmp
fldcw
outsb
and
fildll
aad
outsl
movsl
je
inc
test
aas
add
push
subl
pop
sub
cmp
jno
mov
or
add
mov
and
and
jge
cwtl
or
mov
lret
xchg
daa
mov
scas
pop
xchg
sbb
lods
mov
mov
xor
mov
test
aam
les
add
add
pop
imul
leave
sbb
aam
jge
mov
push
jmp
dec
movd
dec
mov
inc
leave
jae
push
jb
arpl
imul
inc
popf
pop
fadds
inc
cli
repz
mov
xchg
adc
inc
imul
mov
adc
dec
fimuls
jbe
fbstp
scas
sub
stos
lahf
sbb
jle
and
fnsave
xchg
les
dec
jno
and
es
push
pop
mov
xchg
insb
das
in
xchg
xchg
sub
aaa
in
adc
fcoms
push
fwait
push
pop
pop
in
int3
out
xchg
stos
add
lock
pop
adc
mov
ds
lahf
pop
ja
and
pop
or
mov
in
loope
mov
push
inc
loopne
ror
adc
add
aaa
inc
int
pop
lods
movsl
cli
test
and
sbb
sub
sbb
clc
inc
loopw
mov
das
aam
loopne
shlb
push
push
jb
jno
insl
popf
jo
push
data16
sbbl
pop
xchg
add
fwait
jno
and
mov
test
sub
jecxz
jae
je
pop
pop
jo
sbb
jmp
in
inc
les
outsb
xor
lret
les
lock
mov
mov
cmp
cmp
xor
negl
loope
pop
into
jne
sbb
ss
pushf
push
mov
pop
pop
mov
cmp
xor
sahf
pop
mov
and
lods
pusha
adc
lcall
leave
push
xor
cmp
in
add
xor
loope
pop
jns
adc
lods
pop
ret
daa
mov
loop
fcoml
xor
xchg
in
or
cld
enter
xor
sbb
popf
sar
shl
iret
clc
mov
or
pop
test
mov
into
std
sahf
sub
dec
int
push
sub
movsl
mov
dec
xchg
imulb
jb
je
sub
push
fnstsw
inc
shrd
popf
adc
iret
ja
or
clc
jb
adc
cmpsl
addr16
cwtl
hlt
dec
not
mov
lea
push
into
aas
fwait
xor
mov
pusha
or
pop
and
out
push
out
les
lret
mov
shll
inc
cmp
dec
lcall
cs
lret
lea
mov
roll
bound
cmc
or
fwait
mov
stc
and
das
je
lea
mov
mov
lods
leave
fisubrl
adc
arpl
insl
or
push
pop
ljmp
daa
push
mov
xchg
stc
xchg
outsl
es
cmp
cld
arpl
sbb
popf
dec
fwait
loope
cli
sbbl
aam
ljmp
jecxz
push
add
in
push
bound
push
insb
mov
decb
push
inc
xlat
aam
xchg
add
test
mov
pop
rcrb
inc
or
mov
cld
push
mov
add
sarl
cmp
mov
adc
jl
push
dec
dec
mov
popf
jge
xchg
xchg
adc
aad
int
xchg
sbb
mov
xchg
loopne
jg
cli
jbe
in
lahf
fnstcw
mov
fs
std
lahf
mov
mov
call
and
addl
jno
imul
stc
scas
addl
dec
out
jnp
cmp
jl
les
mov
mov
sbb
andl
scas
cs
pop
xor
mov
cmp
sub
scas
xchg
test
pusha
cwtl
push
dec
mov
cmp
sub
pop
mov
xchg
push
stc
arpl
dec
int
ret
pop
xchg
xor
jp
das
xchg
fs
popf
dec
lcall
imul
movsl
dec
mov
rcll
inc
rol
mov
popf
stc
and
repz
sub
push
bound
add
in
pop
xchg
mov
bound
std
pop
ds
aas
jl
push
arpl
jge
inc
xchg
push
fimuls
and
scas
jo
push
cmp
sbb
test
aad
mov
in
dec
jb
loop
inc
jbe
xlat
and
sub
pop
lcall
iret
stos
xchg
xchg
push
pop
mov
or
rcrb
testl
push
mov
dec
movhps
dec
scas
jl
cmpsb
out
cmp
outsl
push
jo
daa
repnz
xor
rorl
cmp
test
inc
mov
pop
sbb
cmpb
mov
jo
out
mov
and
pop
jl
mov
cmpsb
es
mov
mov
ljmp
mov
add
sarb
sti
cmp
ss
dec
jmp
push
int
inc
xchg
ss
push
xor
loop
mov
xchg
fnsave
sbb
mov
movsb
add
mov
std
cmp
pop
pushf
adc
cmp
daa
sub
in
xchg
jp
sahf
addr16
add
les
jmp
ret
mov
fisttps
out
sub
mull
and
mov
les
or
mov
aad
lods
sub
jl
adc
js
xorl
notb
push
es
and
cmpb
addr16
movsl
add
push
in
lods
inc
cmp
xor
mov
lea
stos
loopne
enter
adc
dec
std
dec
mov
xor
test
push
leave
es
mov
sar
data16
mov
hlt
pop
cmp
sarb
adc
lahf
iret
rcll
sub
sub
pop
fwait
adc
push
insl
sub
jl
out
les
xor
jp
insb
das
inc
insb
mov
cmp
mov
aaa
cmpsl
leave
or
sbb
dec
adc
popfw
push
or
clc
mov
jecxz
pop
pop
pop
cmp
out
push
cmp
cmp
fbstp
fsts
test
pushf
push
fdivs
rcr
mov
add
lock
adc
xor
insb
mov
push
idiv
sbb
xchg
cmpsl
aas
sbb
xor
xchg
xchg
clc
sbb
lods
cmp
mov
movsb
inc
jno
xchg
cs
pushf
leave
xor
setno
add
loop
inc
sbb
fcom
sub
lds
cmp
mov
popa
sub
clc
movsl
cmpsb
pop
xchg
repz
loope
xchg
pop
push
int3
mov
cwtl
cli
mov
sbb
outsl
push
sti
stc
sti
arpl
lods
mov
jne
mov
pop
clc
jp
mov
leave
ftst
ljmp
push
fmuls
in
loope
jb
fidivrs
nop
nop
js
fucomip
lds
out
insl
jbe
xor
mov
dec
sub
lock
and
inc
adc
xchg
into
out
loop
shlb
push
imul
gs
dec
scas
xchg
lcall
lods
or
cmc
mov
lds
jnp
das
int
sub
push
out
cltd
lds
pop
dec
icebp
dec
push
pop
rorl
pushf
xchg
or
daa
xchg
in
mov
cmp
or
ret
or
jp
dec
add
xchg
das
lods
loope
jne
mov
jne
shlb
aaa
mov
repz
mov
lret
cltd
sub
xchg
adc
fadds
pop
jmp
cmp
pop
daa
and
xor
stos
je
popa
neg
fucomip
mov
daa
cmp
push
aad
mov
xchg
pop
mov
pop
inc
pop
pop
xor
push
mov
out
mov
aam
or
add
lahf
mov
xor
test
jg
loop
or
add
cmp
pushf
imul
adc
sbb
divb
jecxz
add
cmp
sub
cmpb
fisubrs
xchg
in
mov
xchg
pop
cmp
adc
data16
xchg
mov
jno
rcr
movb
mov
lods
mov
icebp
jb
xor
xor
popf
loope
sub
and
or
pop
dec
mov
lds
mov
repz
rorb
pop
dec
aaa
roll
mov
fldcw
mov
movsb
pop
out
or
jg
inc
cmp
sub
dec
cmp
sbb
fcom
ss
pop
mov
jl
mov
add
ror
lretw
dec
push
lods
push
mov
dec
jne
lods
rcl
popf
sub
dec
lock
daa
mov
push
and
fldt
jecxz
xor
nop
in
jns
scas
adc
mov
lds
sub
jne
test
or
paddusw
pop
sbb
adc
popa
push
pop
call
outsl
cs
psubsb
aaa
and
pop
ret
jbe
mov
fmull
dec
cmp
aaa
iret
and
pop
movsb
fs
jns
add
mov
pop
cmp
leave
xchg
leave
imull
pop
pop
xchg
stc
into
adc
and
mov
fwait
pop
mov
inc
cmp
mov
inc
xchg
jbe
adc
aad
sbb
pand
inc
mov
daa
sbb
int3
lods
push
popa
cmp
cmp
lcall
mov
jg
and
mov
sar
jb
xchg
dec
je
pop
mov
mov
pop
jp
mov
mov
jge
shl
orb
mov
lahf
fwait
xchg
sti
jne
pop
fdivp
pop
rclb
repnz
popf
push
push
jmp
xor
cmp
jle
movsb
rol
jbe
lea
mov
push
mov
in
mov
mov
xchg
sahf
sub
imul
sbb
cli
test
bound
mov
jmp
pop
sub
or
jge
pop
pop
mov
rcrl
lods
cmpsl
call
movsl
mov
lock
in
hlt
or
sub
lahf
xchg
xchg
scas
inc
cmp
sbb
ja
cli
lods
push
mov
lret
mov
insl
sub
cmp
mov
pop
and
jno
push
xorb
les
out
sbb
adc
xchg
mov
jecxz
xchg
fmull
cmc
sahf
mov
dec
mov
xchg
out
sub
in
and
jne
push
cmp
inc
sahf
into
icebp
sbb
adc
negl
jg
lea
sbb
ret
stc
imul
push
imul
pop
fcmovnb
inc
fidivl
mov
cs
shll
inc
mov
sub
sub
std
inc
inc
int3
sbb
inc
sti
stos
cltd
insb
adc
sub
bnd
dec
jbe
or
jns
iret
inc
xchg
adc
cmpsl
bound
fcompl
testl
mov
negb
dec
xor
xchg
fists
jae
lock
jge
ljmp
ret
xchg
enter
repz
into
lret
icebp
in
push
push
aam
inc
jl
mov
daa
xor
xchg
mov
add
pop
lahf
shrb
into
cwtl
mov
or
xchg
cmpb
lea
or
mov
repnz
aad
ret
sbb
cmp
sarb
sti
int3
out
inc
dec
cwtl
jns
movsl
stc
mov
pop
insl
int
xchg
aad
shll
movsb
inc
sub
cmpsl
std
iret
mov
lds
cmpsl
jb
in
xchg
adc
add
imul
xor
push
lahf
icebp
mov
aaa
inc
lret
xchg
mov
jae
repnz
jp
xchg
and
or
mov
ss
mov
dec
push
mov
jl
shr
test
int
shlb
fisttpl
push
out
loop
in
outsl
popf
mov
pop
cli
and
jb
cmc
cli
sbb
fmuls
out
cwtl
mov
xor
call
movsl
fmuls
xorl
add
jbe
stos
xchg
repnz
sub
iret
jmp
xchg
sbb
movsl
dec
lock
xchg
fildl
pop
push
sbb
stc
dec
jo
repnz
arpl
test
xor
jmp
lahf
je
repz
dec
fdivrl
pop
cs
leave
pusha
jne
leave
add
sahf
jo
add
int
sti
in
jae
mov
pop
inc
js
lcall
cltd
push
and
sbb
sub
jge
push
mov
jb
push
lds
ds
out
loope
jno
subb
jo
mov
icebp
test
pop
stc
jle
xchg
pushf
int
pop
mov
ret
or
lods
mov
mov
scas
inc
aas
in
rclb
add
cmp
movsl
daa
test
mov
imul
shll
loopne
flds
sti
add
pop
lahf
push
arpl
nop
movsl
adc
jno
or
je
adc
adc
scas
in
mov
mov
cld
sbb
ja
mov
daa
in
loope
xlat
rclb
xchg
clc
mov
push
loopne
insl
repz
sub
cwtl
pop
mov
xor
lahf
lock
jnp
sbb
call
mov
aam
fldenv
and
clc
lret
pop
movsl
mov
jb
lods
leave
dec
data16
cmc
xor
mov
iret
imul
aam
cltd
jecxz
lret
pop
inc
cld
int
outsl
xchg
dec
aad
ja
lea
jmp
inc
cmp
daa
push
orb
in
xchg
xchg
push
pop
movsb
test
data16
and
cli
jg
mov
xor
shrb
add
cmp
imul
int3
es
stos
out
xchg
lret
and
out
xor
fidivs
sub
cmpsb
shrl
pop
hlt
jge
leave
lds
add
xor
outsb
mov
pop
loope
xor
sbb
sbb
lahf
repnz
in
stc
dec
pop
negl
xor
cld
xchg
sahf
sbb
xchg
xchg
cmp
lret
ljmp
mov
nop
out
fistps
daa
mov
sub
jb
ljmp
jp
jg
jo
inc
es
sub
fcompl
movsb
nop
push
xor
mov
imul
movsl
imul
adc
fisubrs
in
push
inc
mov
mov
xchg
xor
mov
xor
mov
push
xor
enter
push
imul
in
fistps
sub
jae
mov
rclb
js
jno
push
jae
lods
adc
ds
inc
jle
mov
inc
pop
inc
testb
mov
sbb
movsb
sbb
daa
and
cli
pop
pushf
sbbl
cmp
sbb
xchg
xlat
or
pop
je
daa
movsb
in
mov
cld
or
idivb
cmp
fdivrl
out
xchg
jecxz
push
test
outsl
dec
jecxz
xchg
lds
idivb
jle
xor
xchg
movsl
out
popa
jae
cmc
jmp
aaa
fstl
pop
fiadds
xchg
jecxz
push
out
cmp
clc
mov
mov
dec
rcrb
push
in
arpl
pop
cmp
js
push
sbb
aad
jle
or
cmp
add
push
les
pop
pop
test
js
cmpsb
jb
jns
mov
aaa
mov
or
stos
out
and
les
or
cmp
cli
in
daa
push
in
jp
pop
fdivs
inc
jl
andb
jmp
arpl
sbb
push
cmpsb
pop
pop
push
mov
adc
pop
dec
or
or
dec
movsl
rcrl
ret
jne
addr16
inc
mov
lods
pusha
and
mov
into
hlt
and
jmp
mov
push
cmpsl
push
movsb
sarb
adc
shr
jmp
cltd
movsl
xorb
enter
data16
lods
cs
xor
popa
addr16
cmp
bnd
mov
bound
lret
sub
jg
mov
mov
sub
in
sti
pop
xchg
adc
mov
movsl
sbb
popa
sub
sbb
lock
fwait
sbb
ja
mov
js
enter
or
nop
dec
mov
lds
inc
aaa
lret
add
cltd
cld
jge
mov
jbe
adc
push
push
xchg
mov
mov
pop
roll
popf
or
mov
ljmp
enter
xchg
push
push
fstpt
in
mov
fchs
repnz
dec
adc
loop
pop
mov
cltd
fcmovu
hlt
jl
mov
setb
lret
xchg
pop
push
mov
insl
int3
repnz
push
lods
push
iret
mov
dec
ljmp
pop
dec
imul
xor
jl
xlat
pop
jle
imul
add
div
mov
pop
push
push
jnp
add
dec
stos
repz
cmp
jae
dec
je
fldl
mov
repnz
popl
xchg
mov
scas
ds
fsubrl
subb
orl
movsl
sbb
pop
mov
in
movsb
or
adc
pop
dec
shr
and
xor
pop
push
jnp
xchg
fimull
add
aas
dec
icebp
mov
mov
inc
add
std
and
in
dec
sub
and
pop
jp,pt
sarl
test
sarb
adc
iret
xchg
cmpsl
pop
mov
sti
mov
xor
inc
push
in
sbbb
sbb
jnp
fistps
mov
ss
inc
and
test
cltd
fcom
loop
mov
xchg
das
push
lret
fmuls
jb
test
mov
cltd
ret
lds
push
stc
or
cli
orb
jo
jbe
mov
pushf
in
jmp
popf
ds
pop
out
negb
mov
xor
mov
mov
push
adcb
fimuls
movl
sarb
xchg
xchg
les
push
std
fisubrl
sbb
pop
cmp
out
int3
xchg
or
es
insb
and
ret
idivl
xor
jbe
daa
imul
lock
add
mov
mull
js
lds
testb
inc
scas
xor
inc
mov
push
sbb
cmp
stos
jbe
ds
out
xchg
fcmovb
xor
lock
mov
std
inc
inc
cwtl
inc
test
push
xor
or
dec
cmc
push
loop
outsb
inc
and
ja
mov
cs
lahf
xchg
out
jne
fsub
or
imul
sarl
pop
mov
ret
loope
and
in
xor
xchg
mov
xor
mov
pushf
xor
mov
lea
push
mov
adc
jno
or
ja
les
mov
aam
test
and
adc
dec
sub
sti
fwait
or
icebp
mov
pop
fdiv
repz
mov
cmp
push
ja
and
sbb
leave
fstpt
dec
jl
iret
dec
mov
inc
test
fndisi(8087
lea
mov
mov
pop
fadds
inc
cmp
cmp
shrl
or
ljmp
loop
pushw
push
and
sbbb
xor
ja
imul
leave
in
pop
cmp
mov
and
jne
and
clc
or
mov
ret
pusha
and
sbb
dec
lds
cli
ja
popf
and
aad
xchg
fstps
repnz
fyl2xp1
cmp
shll
pushf
sbb
cmp
xchg
adc
jge
sbbl
dec
out
dec
mov
mov
rolb
in
adc
dec
push
repz
jae
ja
adc
loopne
mov
jp
int
mov
mov
loope
sbb
in
jg
and
adc
lahf
in
jl
push
sub
mov
repnz
sub
sahf
fstl
push
fcmovb
lods
inc
mov
loope
dec
or
mov
cltd
pop
rcll
lock
ds
inc
ds
cmp
adc
mov
hlt
push
cmp
adc
aaa
imul
dec
push
mov
popf
das
pop
xor
push
jp
cs
lds
and
loope
vucomiss
xor
mov
pop
jmp
mov
ds
std
xor
mov
loope
sbb
loope
or
aam
sbb
outsl
in
insl
cmp
mov
cmp
lds
mov
mov
push
xchg
shll
sti
adc
mov
aas
enter
lcall
iret
repz
imul
pop
addl
pop
outsl
mov
inc
fildll
xchg
negl
movsb
movl
ljmp
dec
cmp
insl
inc
xchg
pop
lods
ret
or
cmp
pop
mov
cli
pop
cmpsl
imul
lock
and
lods
push
and
ljmp
jle
jb
and
test
cmp
jbe
das
sbbb
fists
jb
adc
cmc
loopne
bound
test
mov
jo
adc
jo
cltd
or
push
lods
jo
lds
xchg
xor
ret
ja
dec
out
pcmpeqd
daa
push
add
into
aaa
ror
rcl
lea
push
mov
and
sti
jge
addr16
call
std
lds
je
inc
xor
ss
pop
or
mov
mov
fbstp
enter
xor
hlt
pop
icebp
ret
xchg
dec
xchg
shrl
adc
mov
xor
dec
imul
push
popa
adc
jo
dec
push
add
xor
push
lret
lret
out
and
pusha
sub
pop
push
loopne
pushf
xor
fidivrs
ja
insb
rorb
mov
ret
add
lahf
loopne
sub
dec
stc
pop
stos
sub
fistpll
xchg
in
xor
les
mov
inc
cmpsb
dec
and
movsl
mov
dec
mov
push
pop
lret
ss
shll
sub
rolb
add
daa
cmpsl
xchg
addr16
ret
iret
xchg
frstor
outsl
sub
and
and
out
dec
repnz
mov
sbb
cwtl
dec
js
adc
fldl
xchg
dec
mov
outsb
loope
fstl
or
repz
out
pop
adc
mov
mov
rcrl
outsb
cmp
dec
js
stos
dec
cwtl
aad
jo
test
int3
mov
pop
out
mov
xor
out
lods
dec
or
addr16
mov
out
dec
out
cmp
jg
je
mov
mov
push
push
xchg
mov
jne
call
pop
sbb
int3
lods
sub
int3
into
test
add
mov
js
push
and
push
xor
data16
push
mov
jno
push
sbb
cmp
sub
pop
sub
pushf
xor
cmp
and
daa
add
pop
cmpsl
or
inc
inc
jo
adc
shll
dec
dec
or
insb
lods
mov
mov
cs
gs
jmp
cmp
arpl
xchg
gs
xor
xchg
push
pop
lea
arpl
insb
lods
xor
call
cmpsl
testb
push
mov
inc
mov
or
addr16
pusha
xchg
adc
movsl
xlat
pusha
sbb
testb
fcmovbe
testb
aad
insl
cwtl
xchg
inc
stc
mov
gs
dec
mov
xor
orw
add
jo
stos
push
xchg
shr
movsl
jg
xor
in
fwait
push
mov
mov
stos
inc
mov
or
jne
lods
les
mov
push
xchg
and
push
cmpsb
scas
xor
loopne
pop
fbld
xchg
sarl
push
or
fsub
pop
mov
faddp
adc
sub
xor
scas
dec
mov
cmp
push
test
ret
in
mov
insl
inc
xor
mov
mov
mulb
test
lcall
push
sbb
or
push
in
cmpsl
lea
mov
push
jg
jns
andb
cmp
mov
push
fisubrl
ljmp
inc
pop
jbe
xchg
push
aas
push
xchg
add
mov
jne
fildl
dec
or
mov
cmp
lret
ret
mov
pop
clc
ja
bnd
cmp
and
jmp
inc
sub
push
hlt
cli
scas
imul
jecxz
adc
iret
rcrl
setb
mov
stc
dec
inc
push
push
push
in
adc
xchg
adc
scas
test
int
xchg
mov
or
ret
inc
loopne
cmc
pop
mov
or
ja
xor
imul
rcrl
pop
pop
mov
movsl
add
xor
push
and
ret
and
xor
rorl
push
xchg
insb
testl
dec
cltd
ss
push
sub
add
dec
sbb
jecxz
and
xchg
popa
addl
mov
lds
mov
sbb
repz
xor
popf
pop
jae
outsl
mov
aad
cmc
enter
mov
outsl
cli
in
jecxz
sbb
xchg
stos
add
aam
xchg
imul
xchg
mov
insb
cmpsb
sub
push
inc
push
in
jg
lahf
pop
out
pop
ret
sbb
idiv
mov
lods
push
xrelease
test
sbb
roll
lea
xor
sahf
push
xor
inc
filds
inc
and
cmc
daa
fdivrl
test
or
jge
leave
ret
xchg
enter
sub
xchg
inc
cmp
fincstp
nop
mov
aaa
and
rolb
mov
adc
jecxz
mov
pop
jo
scas
cmpb
in
fisubrl
mov
ss
insl
scas
sub
fwait
mov
ljmp
lret
mov
jp
inc
pop
out
movsl
pop
push
arpl
int
fstpt
movsb
mov
adc
mov
sahf
test
rorb
mov
ficoms
sub
ds
cld
xchg
or
mov
mov
xchg
or
xor
test
mov
sbb
movsb
mov
stc
imul
es
jns
and
xor
popa
sbb
and
mov
ds
popf
dec
int3
dec
test
fdivrs
call
call
adc
and
and
in
pushf
lods
popf
fidivs
ja
ja
test
ret
xor
push
jle
xchg
add
mov
daa
int
push
andl
int3
cli
jge
out
sti
sti
or
inc
fldt
ret
add
popf
lea
lods
adc
neg
xor
and
sub
mov
pop
mov
sub
fldt
mov
adc
adc
mov
inc
and
inc
outsb
mov
pop
scas
in
jecxz
into
jbe
in
pop
inc
mov
xchg
pop
sbb
pop
dec
stos
xchg
push
or
sub
lea
jle
inc
and
push
adc
and
int3
cmpsl
inc
mov
iret
fsubl
push
xchg
addb
jae
shll
or
les
repz
jecxz
cmp
mov
xor
in
ss
test
sub
sub
xchg
adc
push
xchg
pop
and
ljmp
daa
inc
in
mov
sub
into
bound
out
sub
xchg
xchg
cs
test
leave
loop
iret
lods
int3
testb
inc
js
popa
and
pop
cs
pop
cmp
sbbl
shlb
lock
pop
gs
inc
test
sub
imul
push
aam
xchg
movsb
push
cmc
pop
repz
je
js
sub
sub
clc
xchg
inc
out
ljmp
data16
push
jp
jle
jnp,pn
sbb
xor
mov
xor
and
in
add
sar
js
cwtd
add
loope
jbe
nop
mov
jns
aaa
push
or
nop
jns
jge
mov
mov
clc
pusha
fcomi
sub
inc
push
hlt
xchg
scas
and
inc
dec
insb
je
fldt
clc
nop
imul
xchg
inc
cmpl
rol
adc
int
lahf
adc
lds
mov
mov
adc
sub
adc
push
push
inc
lret
dec
jbe
mov
out
sub
mov
sbb
dec
fimuls
cmpsb
xlat
sub
and
jmp
mov
in
mov
test
pushf
mov
sbb
mov
das
cmp
jle
sbb
ja
insb
add
subl
cmp
mov
mov
pop
mov
stos
imul
or
scas
push
mov
inc
sarb
dec
and
push
aas
jmp
movsbl
push
icebp
pop
jbe
ja
mov
aas
ds
sbb
sbb
dec
inc
ja
xor
jg
mov
pop
xor
imul
add
xchg
rcr
add
ljmp
pop
pop
hlt
jg
scas
mov
std
pop
mov
lahf
inc
or
aaa
xchg
aad
jecxz
std
push
and
mov
scas
lahf
cltd
pop
fcmovnbe
mov
pop
lahf
les
std
outsl
dec
in
js
mov
rorb
add
in
out
iret
cmpl
inc
.byte
nop
pusha
call
jmp
push
ret
call
jmp
mov
add
sub
cmpl
mov
jne
lea
push
call
mov
mov
lea
push
push
call
stos
mov
scas
jne
cmp
jne
lea
jmp
push
imul
insb
insb
outsl
arpl
push
imul
jb
add
jb
jne
insb
push
jb
je
arpl
mov
or
je
mov
xchg
mov
lea
cmpl
je
push
push
push
push
call
mov
mov
add
push
push
push
push
call
mov
push
mov
add
pushl
pushl
push
push
call
mov
cmp
jne
incb
mov
add
pushl
movb
call
popl
push
push
push
push
mov
sub
mov
xor
or
je
js
lods
cmp
je
jmp
cmp
je
inc
dec
jmp
mov
jmp
cmpb
jne
and
rol
sub
mov
add
add
sub
jmp
pop
pop
pop
pop
jmp
mov
mov
add
mov
sar
rep
mov
and
rep
pop
push
push
pushl
call
add
cmpl
jne
push
push
pushl
call
mov
or
je
mov
xchg
mov
mov
sub
je
mov
shr
xor
mov
add
cmpl
je
mov
sub
shr
mov
add
add
mov
shr
cmp
je
cmp
je
cmp
je
jmp
mov
and
add
jmp
mov
and
add
jmp
mov
and
add
jmp
orw
add
loop
jmp
mov
mov
or
je
add
lods
or
je
add
mov
lods
stos
jmp
mov
mov
add
mov
test
je
add
mov
push
call
test
jne
push
call
mov
movl
mov
mov
test
jne
mov
add
add
mov
mov
add
add
test
je
test
jne
add
inc
inc
push
and
push
pushl
call
test
pop
jne
test
jne
push
mov
add
push
push
lea
push
push
jmp
and
mov
cmp
jne
push
mov
dec
shl
mov
mov
mov
add
mov
add
pop
jmp
push
mov
add
push
push
lea
push
push
jmp
mov
addl
jmp
mov
mov
mov
add
mov
jmp
mov
mov
add
push
push
push
push
push
pushl
push
call
pushl
push
movzwl
movzwl
lea
lea
lods
test
je
add
cmp
loopne
jne
push
push
pushl
andl
pushl
add
push
call
pop
lods
lods
mov
loop
call
pop
mov
push
add
pop
or
mov
popa
jne
mov
ret
push
ret
mov
lea
push
push
call
mov
lea
push
call
mov
lea
push
push
call
mov
mov
lea
push
push
call
call
add
pop
push
lea
push
push
push
call
push
call
imul
gs
xor
cs
insb
add
imul
jae
jne
gs
xor
fs
insb
add
jae
popa
addr16
outsl
js
add
jo
imul
dec
inc
inc
inc
push
and
push
dec
push
add
and
outsl
arpl
jne
and
je
jns
jo
imul
arpl
insb
and
je
bound
insb
outsl
arpl
gs
and
and
popa
insl
imul
and
jb
jb
and
and
imul
and
jne
and
je
bound
insb
outsl
arpl
gs
and
and
popa
insl
imul
and
jb
jb
and
mov
pushf
lods
or
je
xor
mov
shr
jae
xor
dec
jne
jmp
xchg
pop
ret
xchg
nop
add
inc
add
neg
add
pop
add
adc
add
addb
and
add
nop
push
add
sbb
add
add
add
push
add
and
add
add
and
pop
add
add
add
add
in
push
add
add
call
mov
mov
push
push
lea
call
test
jne
or
add
ret
mov
lea
push
push
lea
call
test
jne
or
add
ret
mov
add
ret
add
add
add
push
pop
or
or
adc
sbb
sub
cmp
pusha
jo
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
or
or
or
or
or
or
movups
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
push
mov
push
mov
push
cmp
jb
push
mov
mov
mov
inc
mov
mov
mov
mov
shl
and
or
mov
add
mov
mov
mov
cmp
jae
pop
mov
mov
mov
sub
shr
mov
sub
and
shr
add
pop
mov
pop
pop
ret
mov
mov
mov
mov
lea
mov
add
ret
sub
push
push
push
mov
push
mov
mov
xor
lea
xor
rep
mov
cmp
mov
jbe
xor
mov
mov
lea
inc
inc
cmp
mov
jb
mov
mov
mov
mov
mov
xor
mov
movl
mov
lea
mov
mov
shl
add
cmp
mov
ja
mov
mov
mov
add
cmp
mov
mov
jl
mov
mov
mov
mov
shr
mov
and
sub
add
mov
mov
mov
mov
mov
mov
shl
mov
shr
rep
mov
mov
and
rep
mov
mov
mov
add
inc
dec
add
cmp
mov
mov
mov
jge
cmp
je
pop
pop
pop
xor
pop
add
ret
mov
xor
test
jbe
mov
mov
test
je
mov
and
mov
mov
xor
mov
mov
lea
inc
mov
mov
inc
cmp
jb
pop
pop
pop
mov
pop
add
ret
push
push
push
mov
push
mov
cmpl
jb
mov
mov
inc
mov
mov
mov
mov
shl
and
or
mov
add
mov
mov
mov
cmp
jae
mov
mov
mov
sub
shr
mov
and
cmp
jae
mov
mov
shr
xor
mov
mov
jmp
cmp
jae
cmp
sbb
add
jmp
cmp
jae
mov
jmp
cmp
jae
mov
jmp
cmp
jae
mov
jmp
cmp
sbb
add
mov
mov
add
mov
mov
mov
sub
sub
pop
shr
mov
add
mov
pop
pop
mov
pop
ret
push
push
push
mov
xor
xor
lea
mov
push
call
mov
pop
mov
add
shl
add
inc
cmp
jb
mov
lea
push
push
call
push
push
lea
call
push
push
lea
call
push
push
lea
call
mov
pop
pop
add
pop
ret
mov
mov
mov
push
mov
lea
mov
movl
mov
mov
mov
mov
xor
mov
mov
mov
mov
mov
mov
rep
mov
stos
call
pop
ret
sub
push
mov
push
push
lea
push
push
mov
call
test
jne
mov
mov
rep
stos
xor
push
mov
call
mov
inc
cmp
jb
lea
lea
push
mov
call
test
jne
pop
pop
pop
pop
add
ret
xor
mov
call
cmp
jae
mov
mov
add
and
mov
inc
jmp
jne
push
mov
call
add
test
jle
cmp
jge
mov
dec
mov
inc
test
jg
jmp
cmp
jne
push
mov
call
add
jmp
push
mov
call
add
test
jle
cmp
jge
movb
inc
dec
test
jg
cmp
jl
lea
lea
push
call
test
jne
pop
pop
pop
pop
add
ret
lea
lea
push
call
test
jne
pop
pop
pop
pop
add
ret
lea
push
lea
call
test
jne
pop
pop
pop
pop
add
ret
movb
xor
cmpb
jne
inc
cmp
jb
jmp
movb
mov
lea
mov
rep
pop
pop
pop
mov
pop
add
ret
call
nop
pop
sub
ret
sub
mov
push
push
push
movl
mov
push
xor
test
mov
mov
jbe
lea
call
cmp
jae
mov
mov
mov
inc
inc
mov
mov
jmp
cmp
jae
add
mov
and
shr
lea
cmp
mov
jne
lea
call
mov
xor
push
call
mov
pop
cmp
jb
mov
mov
inc
mov
mov
mov
mov
shl
and
or
mov
add
mov
mov
mov
cmp
jae
mov
mov
mov
sub
add
shr
mov
mov
sub
and
shr
xor
push
call
mov
pop
mov
add
add
mov
mov
mov
xor
push
call
mov
pop
test
mov
je
cmp
jb
mov
lea
cmp
jb
mov
mov
shl
mov
inc
mov
mov
mov
mov
and
add
or
mov
cmp
mov
mov
jae
mov
mov
mov
sub
add
shr
mov
mov
sub
and
shr
lea
call
add
lea
jmp
cmpl
jb
mov
mov
shl
mov
inc
mov
mov
mov
mov
and
add
or
mov
cmp
mov
mov
jae
mov
mov
mov
sub
add
shr
mov
mov
sub
and
shr
add
cmp
jae
mov
test
je
mov
mov
jmp
mov
mov
lea
mov
mov
mov
mov
mov
inc
lea
cmp
mov
jae
mov
sub
inc
mov
mov
mov
cmp
jb
mov
add
mov
mov
jmp
mov
call
test
je
cmp
jb
mov
mov
pop
pop
pop
mov
pop
add
ret
pop
pop
pop
xor
pop
add
ret
add
inc
add
lock
add
inc
add
add
add
pop
ltr
sldt
add
add
jb
gs
xor
cs
insb
add
add
je
jb
arpl
fs
jae
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
add
fs
imul
add
pop
ltr
pop
sldt
add
add
add
add
add
mov
add
add
add
pusha
sldt
add
add
str
pusha
sldt
add
add
lldt
pusha
sldt
add
add
pusha
sldt
add
add
sldt
add
add
pusha
sldt
add
add
sldt
add
add
gs
xor
fs
insb
add
jbe
jo
xor
cs
insb
add
gs
jne
xor
cs
insb
add
jbe
jo
xor
cs
insb
add
jb
imul
add
imul
insb
add
gs
xor
fs
insb
add
gs
jne
xor
cs
insb
add
insl
arpl
xor
fs
insb
add
pusha
sldt
add
add
popa
sldt
add
add
popa
sldt
add
add
popa
sldt
add
add
sldt
add
add
sldt
add
add
add
add
add
sldt
add
add
add
add
inc
gs
gs
outsl
popa
jb
push
jns
add
add
addr16
jne
jb
push
popa
insb
jne
inc
js
add
add
jae
jb
gs
je
imul
gs
jne
jb
push
popa
insb
jne
inc
js
add
add
jb
jne
jb
push
popa
insb
jne
inc
add
add
jb
popa
insb
imul
arpl
add
gs
je
push
imul
inc
add
add
gs
jb
popa
jns
je
dec
dec
outsb
fs
add
dec
insl
popa
addr16
imul
dec
arpl
push
imul
add
js
insb
and
jb
imul
xor
and
arpl
imul
inc
sub
je
outsb
fs
insb
outsl
outsb
gs
and
ds
jae
insl
bound
js
insb
outsb
jae
and
outsb
cmp
push
sub
outsl
jae
data16
arpl
cmp
insl
jbe,pn
and
insl
popa
outsb
imul
jb
imul
xor
ds
popa
jae
gs
bound
fs
je
je
or
and
gs
xor
and
and
insl
gs
gs
gs
jb
push
inc
inc
and
jne
imul
and
jbe
jb
imul
xor
xor
xor
xor
and
or
and
outsl
arpl
jae
jb
jb
push
je
jb
cmp
ds
fs
outsb
fs
arpl
or
and
gs
outsb
fs
je
jae
gs
bound
or
and
and
jae
gs
bound
fs
je
je
or
and
and
and
gs
xor
and
and
and
and
insl
gs
jb
jae
data16
push
imul
inc
outsl
insl
insl
outsl
outsb
sub
jb
insb
jae
or
and
and
and
jb
imul
xor
xor
xor
or
and
and
and
bound
dec
gs
outsl
imul
and
xor
xor
xor
arpl
xor
or
and
and
and
addr16
addr16
or
and
and
and
and
outsl
arpl
jae
jb
jb
push
je
jb
cmp
ds
and
fs
outsb
fs
je
jae
gs
bound
or
das
fs
outsb
fs
arpl
or
je
jne
je
outsb
outsw
and
insb
outsb
jae
and
outsb
cmp
push
sub
outsl
jae
data16
arpl
cmp
insl
jbe,pn
and
or
and
arpl
imul
and
and
cmp
gs
gs
gs
jb
jbe
insb
gs
or
and
and
and
gs
gs
gs
js
arpl
imul
insb
or
and
and
and
and
gs
cmp
outsb
jbe
imul
or
and
and
and
and
inc
arpl
jae
cmp
jae
and
ds
and
and
and
jb
jno
gs
gs
jb
jbe
insb
gs
or
and
jae
arpl
imul
cmp
je
jne
je
outsb
outsw
ds
jae
gs
bound
or
add
add
add
add
add
and
sub
add
add
add
add
add
addb
add
add
add
add
add
addb
jecxz
or
jb
cmp
push
push
dec
adcl
adcl
mov
inc
cmpsb
jg
cs
or
incl
incl
mov
or
lea
das
mov
xchg
daa
leave
mov
incl
incl
cmpsb
test
cmp
push
push
dec
mov
inc
fwait
js
xor
add
add
lcall
lods
lea
das
scas
xchg
add
incl
mov
mov
xchg
es
dec
dec
orl
jle
dec
mov
jbe
inc
mov
jbe
inc
mov
adcb
je
cmp
pop
pop
sub
add
add
int3
int3
add
mov
jle
push
pop
xchg
xchg
lea
jns
cmpsl
stos
aaa
int3
cltd
cltd
add
ja
inc
sub
orb
jbe
inc
mov
jp
inc
mov
dec
push
xchg
mov
pop
in
int3
or
add
add
add
add
outsb
jno
xchg
xchg
mov
xchg
add
add
jge
aaa
orb
sub
loopne
pop
and
pop
push
and
pop
push
and
pop
push
and
pusha
push
and
pusha
push
and
pusha
push
and
pusha
pop
and
pusha
pop
and
test
pushf
xchg
fs
or
mov
or
and
ficomps
and
pusha
pop
and
push
das
shrl
mov
stos
xchg
xchg
or
cmp
popf
imul
jmp
and
pusha
pop
and
pusha
pop
and
pusha
push
and
pop
push
and
sub
cs
add
add
cmp
mov
pusha
pop
and
pop
push
and
pop
push
push
push
call
pop
pop
dec
push
and
repz
pop
and
pusha
pop
and
pop
push
and
pop
push
and
pop
push
and
pop
push
and
pusha
push
and
pusha
push
and
pusha
pop
and
pusha
pop
and
bound
and
outsl
xor
dec
pop
int3
mov
or
and
ficomps
and
pusha
pop
and
push
das
shrl
mov
mov
ss
shll
jmp
and
pusha
pop
and
pusha
pop
and
pusha
sbb
and
imul
mov
add
add
xchg
push
jne
ds
pusha
pop
and
pop
push
and
pop
push
push
push
inc
push
insb
das
xor
popa
and
lcall
and
pop
push
and
pusha
push
and
fs
cmp
adcl
jne
inc
mov
sub
pusha
pop
and
pusha
pop
and
pusha
pop
and
jo
cmp
jl
dec
mov
rol
sarb
xor
jmp
and
push
das
shrl
mov
adcl
push
xor
pusha
pop
and
pusha
pop
and
pusha
pop
and
jnp
dec
stos
test
xchg
jge
dec
mov
lea
jg
bound
add
add
xchg
push
je
cmp
jmp
and
pop
push
and
pop
push
push
push
mov
ss
cmp
pusha
pop
and
pusha
pop
and
bound
and
lret
cmp
dec
xchg
insl
insl
cmp
adcl
jb
cmp
mov
arpl
daa
pushl
cmp
push
iret
mov
mov
in
pop
pop
and
pusha
pop
and
push
das
shrl
mov
add
xor
pusha
pop
and
bound
and
mov
dec
lods
xchg
cmp
imul
pusha
pusha
or
add
add
cmp
mov
pusha
pop
and
pop
push
and
pop
push
push
push
mov
inc
jae
cs
pusha
pop
and
pusha
pop
and
bound
and
push
das
int3
jnp
dec
insb
fnstcw
add
int3
mov
or
sub
xor
push
call
mov
mov
and
ficomps
and
pusha
pop
and
push
das
shrl
mov
add
and
pusha
push
and
data16
test
cltd
jg
push
sbb
add
add
add
add
int3
int3
add
incl
add
add
xchg
push
jne
ds
pusha
pop
and
pop
push
and
pop
push
push
push
lret
sub
xor
pop
pop
and
pop
pop
and
imul
jmp
fcmovne
enter
add
stos
stos
stos
add
into
into
adc
add
add
jecxz
or
and
fisubs
and
pusha
pop
and
push
das
shrl
mov
pop
sbb
and
pusha
push
and
data16
test
cltd
jg
push
sbb
add
add
cmp
mov
pusha
pop
and
pop
push
and
pop
push
push
push
mov
push
push
sti
pop
push
and
pop
pop
and
pop
and
cli
xchg
data16
add
jecxz
or
and
fisubs
and
pusha
pop
and
push
das
shrl
mov
pop
sbb
and
pusha
push
and
data16
test
cltd
jg
push
sbb
add
add
cmp
mov
pusha
pop
and
pop
push
and
pop
push
push
push
mov
xchg
movl
push
and
pop
pop
and
xchg
bound
int3
stos
stos
sldt
add
jecxz
or
and
ficomps
and
pop
pop
and
push
das
shrl
mov
pop
sbb
and
pusha
pop
and
data16
test
cltd
jg
push
sbb
add
add
cmp
mov
pusha
pop
and
pop
push
and
pop
push
push
push
scas
mov
jmp
and
pop
push
and
pop
push
and
js
inc
xor
add
add
mov
mov
and
ficomps
and
pop
pop
and
push
das
shrl
mov
pop
sbb
and
pusha
pop
and
data16
test
cltd
jg
push
sbb
add
add
cmp
mov
pusha
pop
and
pop
push
and
pop
push
push
push
scas
lea
lcall
and
pusha
pop
and
pusha
pop
and
je
cmp
incl
jecxz
or
and
fisubs
and
pusha
pop
and
push
das
shrl
mov
pop
sbb
and
pusha
pop
and
data16
test
cltd
jg
push
sbb
add
add
cmp
mov
pusha
pop
and
pop
push
and
pop
push
push
push
scas
lea
lcall
and
pusha
pop
and
pusha
pop
and
xchg
mov
or
add
add
mov
mov
and
fisubs
and
pusha
pop
and
push
das
shrl
mov
pop
sbb
pop
out
pop
push
and
data16
test
cltd
jg
push
sbb
add
add
cmp
rcrb
lcall
and
pop
push
and
pop
push
push
push
scas
lea
cld
pop
push
and
pop
pop
and
pop
and
stc
xchg
insl
insl
addr16
popf
sbb
add
add
mov
ret
movsl
stos
xor
fisubs
and
pop
pop
and
imul
lea
mov
pop
sbb
pop
out
pop
push
and
data16
test
cltd
jg
push
sbb
add
add
cmp
mov
pop
pop
and
pop
push
and
pop
push
push
push
ret
cmpsb
stos
cmp
xor
and
pop
pop
and
pop
pop
and
jno
cmp
add
add
mov
ret
movsl
stos
xor
fisubs
and
pop
pop
and
push
mov
or
add
add
and
pusha
pop
and
data16
test
cltd
jg
push
sbb
add
add
cmp
mov
pop
pop
and
pop
push
and
pop
push
push
push
call
xor
andb
jecxz
pop
and
pop
pop
and
bound
jmp
cltd
jno
sub
add
add
cltd
ja
setne
push
mov
arpl
add
add
mov
mov
and
fisubs
and
pop
pop
and
imul
lea
mov
pop
sbb
pop
out
pop
push
and
gs
adcl
jg
push
sbb
add
add
cmp
mov
pusha
pop
and
pop
push
and
pop
push
push
push
test
dec
outsl
xor
and
pop
pop
and
pop
pop
and
push
xor
je
ds
jp
inc
bound
scas
mov
adc
mov
inc
je
inc
test
ds
jnp
inc
jbe
insl
jne
jecxz
or
and
fisubs
and
pusha
push
and
push
das
shrl
mov
add
add
fcmovnu
fildl
rol
ret
adc
ret
into
ret
pusha
and
pop
sbb
and
data16
sub
orb
pushf
js
xor
ret
into
ret
int3
mov
add
xchg
push
je
cmp
jmp
and
pop
push
and
pop
push
push
push
int3
mov
dec
jb
sub
loop
pop
and
pusha
pop
and
pusha
pop
and
data16
pushl
cmp
xchg
addl
push
push
jp
inc
scas
insb
das
xor
pusha
pop
and
pusha
pop
and
jno
cmp
adcl
ror
enter
mov
out
push
and
pusha
push
and
push
das
shrl
mov
add
push
dec
test
push
bound
and
lcall
and
fs
inc
cli
jle
dec
jg
push
push
push
xchg
inc
xchg
push
je
cmp
jmp
and
pop
push
and
pop
push
push
push
cwtl
jb
das
xchg
arpl
and
pop
pop
and
pop
pop
and
pusha
pop
and
pusha
pop
and
pusha
pop
and
pusha
pop
and
pop
pop
and
pop
push
and
pusha
push
and
pop
push
and
pop
push
and
pop
pop
and
gs
sub
push
xor
rol
jo
cmp
pop
push
and
pop
pop
and
imul
lea
mov
add
add
test
push
jae
ds
pop
push
and
pop
push
and
pop
push
and
pop
push
and
pop
push
and
pop
push
and
pop
push
and
pop
push
and
pop
push
and
pop
sbb
cltd
xchg
push
je
cmp
jmp
and
pop
push
and
pop
push
push
push
jg
jg
popf
jo
and
and
and
pusha
pop
and
pusha
pop
and
pusha
pop
and
pusha
pop
and
pop
pop
and
pop
push
and
pusha
push
and
pop
push
and
pop
push
and
sub
pushl
inc
xchg
mov
enter
arpl
and
pop
pop
and
push
mov
or
add
add
ds
pop
push
and
pop
push
and
pop
push
and
pop
push
and
pop
push
and
pop
push
and
pop
push
and
pop
push
and
pop
push
and
pop
sbb
cltd
xchg
push
jb
cmp
jmp
and
pop
push
and
pop
push
push
push
stos
jg
push
cmpsl
test
dec
jge
dec
mov
cmp
pop
and
pop
pop
and
pop
pop
and
pop
pop
and
popa
and
icebp
push
push
push
xchg
jae
inc
pop
js
inc
and
int3
int3
add
ret
stos
stos
xor
sub
pop
sbb
and
push
xor
stos
mov
add
cmp
mov
sbb
and
pusha
push
and
pop
push
and
pop
push
and
pusha
pop
and
pop
push
and
pop
sbb
and
pop
sbb
and
xchg
push
jne
aas
mov
push
and
pop
push
and
pop
sbb
push
push
aam
aam
sahf
jns
sub
dec
dec
sub
xorb
lea
cmp
mov
xor
xor
push
stos
test
or
add
add
add
add
lahf
lahf
sbb
push
pop
sbb
fs
sbb
imul
jg
add
add
orl
jae
ds
pop
sbb
fs
sbb
fs
sbb
and
pusha
pop
and
bound
and
arpl
and
fs
sbb
arpl
and
add
add
cmp
push
pop
sbb
arpl
pop
arpl
pop
arpl
sbb
stos
stos
stos
add
aam
or
mov
sbb
mov
ret
fcomp
or
pop
sbb
and
pusha
pop
and
data16
test
cltd
jg
push
sbb
add
add
incl
stos
mov
or
jg
adc
jg
adc
fisttps
pop
sbb
and
pop
pop
and
gs
test
cltd
jg
push
sbb
add
add
incl
stos
stos
incl
mov
jg
jg
adc
cltd
decl
xlat
xlat
repnz
mov
gs
mov
gs
mov
gs
mov
gs
mov
aaa
jg
jg
pop
sbb
and
pop
pop
and
fs
test
cltd
jg
push
sbb
add
add
shr
or
mov
repnz
mov
fs
nop
hlt
pop
mov
add
add
gs
pop
dec
out
mov
cmp
in
fidivrs
es
fiadds
out
rcrl
out
xchg
aam
decl
incl
arpl
jb
cmp
arpl
jmp
sub
test
cltd
jg
push
sbb
add
add
icebp
insl
xor
and
in
fidivrs
daa
in
fisttpll
out
mov
pop
push
in
sbb
in
insb
inc
xor
pushl
pop
in
ljmp
sbb
pushl
sub
in
xchg
cmpl
movsb
movsb
decl
cmpsl
xchg
push
jb
cmp
jnp
dec
scas
test
cwtl
jg
push
sbb
add
add
incl
outsl
arpl
ds
aas
out
mov
daa
in
iret
cs
ljmp
sbb
ljmp
sbb
incl
in
into
pop
dec
out
jb
fwait
hlt
pop
push
dec
jmp
fwait
cmp
jmp
xor
in
repz
ljmp
sbb
in
cmc
dec
inc
in
cmpsb
dec
cmp
bound
xor
add
add
incl
xchg
je
and
push
pop
pop
jg
pop
push
add
add
aam
incl
scas
mov
cmc
xor
xor
fs
aaa
out
cmpsb
cmp
in
loopne
sbb
ljmp
sbb
ljmp
sbb
ds
leave
pop
dec
out
jne
jl
sub
add
add
mov
push
inc
in
jb
sub
in
out
cs
ljmp
sbb
ljmp
sbb
cmp
in
fcoms
out
fwait
popa
push
out
pop
cmp
out
push
dec
lock
in
sbb
mov
push
xchg
mov
push
xchg
mov
push
jb
negb
push
inc
out
cmp
push
out
fs
dec
lock
cmp
in
hlt
xor
jmp
das
sbb
pushl
and
clc
aaa
and
lock
fwait
negb
add
add
cmp
jmp
das
sbb
cld
cs
cs
ljmp
sbb
pushl
and
lock
dec
icebp
cmpsl
jbe
icebp
addb
cmc
insb
mov
rep
insl
arpl
mov
out
scas
aaa
es
fsubrl
sbb
ljmp
sbb
ljmp
sbb
ljmp
sbb
ljmp
sbb
cld
xor
jmp
inc
das
out
fldcw
mov
or
je
decl
jge
out
das
fs
out
insl
dec
cmp
mov
das
sbb
ljmp
sbb
ljmp
sbb
cld
xor
in
lock
in
ljmp
in
out
and
out
and
out
and
in
xor
jmp
das
sbb
in
ljmp
sbb
ljmp
sbb
ljmp
sbb
incl
fs
icebp
jo
cmp
es
decl
incl
in
sbb
inc
out
inc
pop
dec
out
jp
inc
out
cmpsl
cmp
in
sbb
ljmp
sbb
ljmp
sbb
ljmp
sbb
ljmp
sbb
ljmp
sbb
ljmp
sbb
ljmp
sbb
ljmp
sbb
ljmp
sbb
pushl
sbb
cmc
cmp
in
stos
dec
cmp
jbe
inc
in
inc
jnp
in
sbb
stos
stos
incl
mov
negb
jl
repz
inc
xor
insb
cmp
in
xchg
inc
xor
in
mov
inc
das
in
iret
inc
cs
rolb
in
rolb
out
roll
dec
cmp
mov
inc
xor
ds
lock
lahf
xchg
hlt
sbb
add
add
incl
mov
lock
icebp
dec
jae
hlt
popa
fs
icebp
outsb
pop
push
icebp
jae
push
icebp
jae
push
icebp
jb
push
repnz
cmpsl
xchg
divb
lret
sbb
add
add
cld
pop
repz
add
incb
loope
inc
add
incb
loope
incl
loope
incl
lock
loope
incl
stc
loope
pop
loope
decb
jmp
cld
pop
loope
cld
ud0
cld
pop
loope
cld
pop
jmp
cld
pop
loope
cld
pop
jmp
cld
pop
loope
cld
pop
jmp
cld
pop
loope
cld
pop
jmp
cld
pop
loope
cld
pop
jmp
cld
pop
loope
decb
jmp
cld
pop
loope
incb
jmp
cld
pop
loope
incl
icebp
loope
pop
loope
incl
loope
incl
loope
jmp
add
loopne
loope
push
add
loopne
loope
pop
cld
pop
cld
pop
cld
pop
cld
pop
incl
inc
lcall
sar
inc
jg
cmp
pop
incb
clc
add
pop
incb
add
incl
jmp
add
incl
