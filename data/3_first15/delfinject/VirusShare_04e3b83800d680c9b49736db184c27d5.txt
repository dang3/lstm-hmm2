xor
add
add
add
add
add
add
add
mov
add
mov
add
add
add
add
add
add
add
add
add
leave
roll
add
add
add
add
pusha
or
and
add
pusha
or
inc
pusha
or
dec
pusha
or
add
add
pop
pusha
or
add
add
push
or
add
add
test
add
add
add
add
add
add
add
add
add
add
add
pusha
or
add
add
shlb
add
add
add
pusha
or
or
add
mov
add
sbb
add
int3
repnz
es
add
aam
add
xor
add
fdiv
add
cmp
repnz
dec
hlt
add
in
repnz
push
hlt
add
hlt
repnz
hlt
add
cld
repnz
outsb
hlt
add
add
add
jns
add
or
add
test
add
adc
add
dec
inc
push
dec
inc
dec
xor
cs
dec
dec
add
push
inc
push
dec
xor
cs
dec
dec
add
dec
inc
inc
push
xor
cs
dec
dec
add
dec
xor
cs
dec
dec
add
push
inc
push
xor
cs
dec
dec
add
inc
inc
push
push
xor
cs
dec
dec
add
inc
dec
dec
xor
cs
dec
dec
add
dec
push
inc
push
dec
cs
dec
dec
add
inc
push
xor
cs
dec
dec
add
dec
dec
dec
inc
push
cs
dec
dec
add
dec
inc
dec
xor
cs
dec
dec
add
add
fs
imul
add
add
je
jb
arpl
fs
jae
add
add
jb
jne
insb
push
jb
je
arpl
add
jb
jne
insb
inc
insb
insb
outsl
arpl
add
push
imul
jb
add
add
imul
jae
add
push
gs
insb
outsl
jae
dec
gs
add
arpl
inc
jb
popa
je
inc
popa
jo
jne
gs
imul
add
push
popa
je
insb
je
add
dec
inc
dec
jo
outsb
add
add
jae
jb
gs
je
imul
push
js
arpl
gs
add
add
je
inc
imul
jae
add
add
je
inc
add
add
je
jb
gs
gs
outsl
outsb
outsb
arpl
push
je
je
add
add
outsb
add
add
push
sbb
cmpsb
sbb
pusha
call
pop
mov
sub
lea
mov
cmp
je
mov
lea
mov
cmp
je
movb
mov
sub
mov
add
lea
add
pusha
push
push
push
push
call
test
je
mov
call
pop
mov
add
push
push
call
popa
mov
mov
add
mov
cmpl
jne
add
mov
jmp
mov
add
add
cmpl
je
add
mov
add
push
push
push
push
pushl
pushl
mov
mov
mov
add
call
pop
pop
pop
pop
cmp
je
add
jmp
push
push
pushl
call
lea
mov
lea
mov
mov
cmp
je
mov
inc
sub
cmp
ja
mov
cmpb
je
mov
cmp
jne
mov
shr
rol
xchg
jmp
mov
xchg
rol
xchg
sub
add
mov
add
sub
mov
loop
call
lea
mov
cmp
je
mov
sub
je
mov
lea
mov
lea
mov
cmp
je
mov
add
mov
jmp
mov
add
mov
xor
mov
inc
or
je
cmp
ja
add
add
jmp
and
shl
mov
add
or
jne
mov
add
jmp
xor
xchg
mov
cmp
je
lods
or
je
add
add
jmp
xor
shr
lods
or
je
add
add
jmp
lea
mov
lea
mov
cmp
jne
add
push
push
push
push
push
push
call
pop
pop
cmp
jne
add
mov
rep
sub
sub
push
pushl
push
push
call
push
pop
sub
xor
mov
cmp
je
inc
lea
mov
push
push
push
push
push
pushl
pushl
mov
add
push
call
pop
pop
pop
pop
add
loop
mov
cmp
je
popa
popf
mov
ret
popa
popf
jmp
mov
or
je
mov
add
cmpl
jne
cmpl
jne
cmpl
jne
jmp
mov
add
push
push
push
lea
add
add
push
call
pop
pop
pop
cmp
je
mov
add
add
xor
mov
cmp
jne
inc
jmp
mov
add
push
push
push
cmpb
jne
inc
mov
and
mov
movb
push
push
pushl
call
pop
pop
pop
pop
cmp
je
mov
mov
pushl
popl
add
inc
jmp
clc
ret
jmp
push
mov
mov
mov
cld
mov
movsb
call
jae
xor
call
jae
xor
call
jae
mov
call
adc
jae
jne
stos
jmp
call
dec
loop
mov
call
jmp
lods
shr
je
adc
mov
jmp
xchg
dec
shl
lods
mov
call
cmp
jae
cmp
jae
cmp
ja
inc
inc
push
mov
sub
rep
pop
jmp
add
jne
mov
inc
adc
ret
xor
inc
call
adc
call
jb
ret
pop
ret
push
call
ret
mov
adc
push
add
or
inc
cmp
add
or
ret
mov
add
adc
mov
cmpl
adc
or
push
and
rolb
add
call
enter
add
shl
or
dec
mov
jne
pop
sbb
add
mov
xor
fildl
or
sub
in
ljmp
jb
sub
or
add
adc
out
xor
inc
out
clc
dec
jne
pop
mov
bound
jp
mov
ret
pop
addr16
cs
ret
push
movzwl
mov
or
movl
jae
mov
mov
sbb
sarb
cli
sar
add
cmp
sbb
lahf
adc
loope
jno
data16
jb
jmp
inc
sub
sahf
clc
fistl
scas
mov
or
int3
shr
sahf
ret
inc
test
ds
add
in
push
push
jbe
jge
sub
jle
mov
xorb
int3
or
xor
aas
std
add
int3
dec
cld
sbb
pop
ret
add
shl
pop
pop
or
sub
cmp
jbe
mov
xchg
inc
cmp
mov
notl
jle
push
lret
inc
pop
or
call
mov
push
or
inc
cmp
jl
adc
leave
popa
fcomi
xor
inc
xchg
outsb
enter
test
or
jo
xchg
mov
push
pop
mov
sar
sub
les
jne
mov
shr
sbb
loopne
add
jbe
aaa
call
or
cmp
sti
inc
inc
shr
sbb
sbb
jbe
pop
mov
xor
adc
mov
test
push
sbbb
icebp
call
es
sub
push
lea
pop
call
cmp
icebp
xor
push
jne
lret
and
mov
lahf
and
add
push
clc
mov
inc
adc
sub
jl
cmp
or
orb
enter
mov
sbb
leave
cltd
dec
hlt
nop
push
call
movsb
data16
orl
push
in
inc
lock
shl
add
xor
dec
dec
into
cmp
cmp
push
adc
fdivl
push
sbb
mov
xorl
fcompl
rep
adc
retw
jne
inc
add
cli
cld
inc
mov
add
xchg
pop
mov
and
mov
adc
hlt
test
fwait
ret
push
les
mov
jbe
sbb
test
movsl
mov
sub
inc
add
movsl
inc
pushf
mov
add
and
leave
push
adc
jge
push
gs
push
jmp
and
or
cmp
or
movsl
sbb
into
pusha
or
divb
pusha
clc
lcall
push
sbb
push
insb
out
add
mov
fsub
mov
iret
push
sbb
push
repnz
scas
adc
add
test
cmp
sbb
sub
sahf
das
mov
inc
dec
inc
xchg
add
rorl
call
pop
cmp
je
sub
incl
setge
sub
clc
lea
xchg
hlt
shll
add
decl
mov
jmp
mov
inc
xor
xchg
jmp
sub
mov
lock
jne
leave
adc
push
mov
cmp
insl
sbb
fldl
test
fwait
push
aad
cltd
jle
mov
or
jmp
lock
in
rorl
sub
mov
xor
or
call
add
mov
add
sub
jp
dec
push
andl
sub
leave
loop
and
sti
dec
repnz
popa
mov
sub
pop
jge
dec
push
in
sub
pop
dec
pop
add
pop
jo
jmp
add
ret
psubq
ds
add
and
inc
adc
imul
nop
leave
dec
xor
dec
cmpb
cmp
sbb
rcl
inc
test
mov
addb
inc
adc
rolb
jle
cmp
icebp
icebp
iret
rorb
nop
stos
mov
shrb
int3
pop
outsb
sbb
movsb
jne
cmpl
lock
adc
jb
mov
orb
shl
dec
add
les
xchg
sbb
push
cs
sub
jb
xor
mov
mov
negb
rcll
rcrl
dec
jne
cmp
jne
dec
sbb
cmp
add
sub
add
popa
jecxz
iret
push
pushf
dec
sbb
jecxz
lcall
inc
mov
sub
mov
cmp
dec
mul
sbb
inc
outsb
addb
xchg
rolb
add
les
xor
fdivl
adc
jne
adc
add
pop
add
and
mov
rolb
add
add
jmp
dec
adc
mov
xchg
stc
out
in
adc
lds
cmp
dec
mov
leave
mov
fnstcw
jecxz
and
push
loopne
sbb
jne
loop
clc
mov
jg
push
fidivs
loop
pop
push
mov
fdiv
inc
or
pop
or
ret
jb
into
sbb
pop
and
or
mov
testl
jbe
xchg
movsb
in
adc
adc
insb
mov
mov
nop
add
daa
sub
xchg
jns
imul
pop
xor
popf
inc
adc
sahf
ret
sub
insb
jne
dec
add
xor
paddd
fisubrl
subb
lock
and
fcompl
movsl
jnp
mov
aad
fsubrl
pushf
aaa
or
jmp
sub
addr16
or
repz
mov
push
movsb
insl
rcrl
lock
out
mov
ds
ja
lods
and
pushf
adc
in
in
mov
insb
fiaddl
or
adc
mov
sub
jne
ret
and
dec
fdivrl
jp
pop
and
pop
sbb
stc
cmp
cld
out
xor
add
xchg
adc
je
lods
fs
cs
loopne
insl
push
fwait
stc
mov
movsb
mov
outsb
test
clc
jae
repz
les
cmp
dec
mov
cmp
sbb
push
push
push
iret
lcall
js
dec
jae
add
bound
and
ja
xchg
and
mov
xchg
add
push
or
cmp
lods
out
mov
mov
sbb
dec
dec
and
mov
test
mov
sub
int3
loopne
ret
loopne
cmpsb
daa
movl
adc
push
cli
mov
push
xor
fs
inc
pop
jge
pop
pop
jp
insb
jle
fsubrs
mov
push
clc
sbb
mov
lods
ss
or
xchg
jo
into
xchg
mov
mov
lret
clc
movsl
xchg
mov
lea
outsb
or
les
mov
fwait
mov
ficomps
add
sub
pop
sub
lret
push
dec
xor
jb
jne
push
mov
mov
cmp
mov
imull
pop
mov
cmp
fimuls
loope
flds
mov
push
xchg
shlb
les
xchg
aas
mov
jns
andb
sub
xchg
jb
xor
fstl
cmp
shll
xchg
stos
lcall
jge
sub
loope
in
inc
movsl
das
mov
fildll
and
sahf
arpl
mov
ss
mov
fistl
push
shlb
cmp
push
push
push
les
fwait
aam
rolb
inc
or
pop
int
test
std
lcall
shr
dec
scas
andb
fs
sbb
xor
jnp
leave
xchg
or
mov
and
in
xor
ftst
dec
mov
push
sarb
das
out
jecxz
add
popf
sub
xchg
jmp
pop
adc
inc
lret
xchg
jge
rcr
sub
mov
inc
into
jno,pn
test
imul
cli
adc
adc
ljmp
dec
iret
test
rorb
cmc
bound
hlt
ljmp
notl
in
jmp
mov
adc
nop
sbb
cld
inc
pop
mov
fnstenv
pop
loope
push
jne
lds
add
xor
out
sarl
mov
jbe
cli
jle
pop
fldcw
mov
sbb
push
mov
inc
add
inc
fistl
and
jno
out
sahf
call
cs
jge
movsb
mov
mov
pop
push
sahf
mov
mov
push
dec
das
pop
and
jge
fld
mov
enter
jbe
nop
mov
jb
inc
lods
sub
sub
ja
inc
popa
inc
dec
std
and
cmp
sub
or
adc
inc
fcomip
jb
aam
movsl
xor
push
push
mov
dec
and
fdivs
repnz
pop
test
stc
mov
scas
fidivl
mov
xor
stos
add
xor
stc
push
adc
fnstsw
stc
insb
shrb
push
imul
sub
push
xor
test
lods
pop
in
pop
add
dec
rcl
les
testb
mov
sti
jmp
repz
in
shl
gs
pushf
lret
sub
xchg
les
adc
mov
popa
xor
and
lahf
loope
sbb
lods
adc
fidivs
xlat
jo
push
loop
xchg
test
or
pop
xor
mov
mov
lret
rcr
stc
jb
mov
cli
mov
pop
out
lret
pop
mov
stc
rol
ret
adc
cmp
dec
jo
adc
xor
fs
movsl
subl
push
and
call
into
scas
pop
inc
lods
or
cmp
mulb
in
jecxz
fists
test
mov
out
or
in
imul
and
cmpb
fsubp
fs
addr16
inc
adc
jl
aaa
lcall
jge
jmp
xor
mov
test
xor
add
dec
pushf
jae
jb
add
jmp
jnp
sub
and
mov
data16
in
mov
rclb
dec
loope
push
nop
xor
jae
cld
mov
and
add
mov
aaa
in
in
imul
fs
rcl
mov
mov
xchg
in
jnp
negb
scas
jns
dec
loopne
add
add
inc
xchg
sbb
inc
test
push
mov
mov
jecxz
mov
mov
pop
xchg
sahf
pop
pop
call
test
push
add
imul
sub
inc
xor
je
xor
gs
mov
imul
xor
ss
push
or
xchg
jmp
test
cld
in
dec
into
adc
sahf
pop
xchg
or
ret
or
ds
adc
lods
lea
dec
dec
testb
orl
adc
ss
mov
fistps
cmp
inc
sub
lret
aaa
cmp
mov
iret
push
jp
iret
xchg
xor
jl
imul
jecxz
inc
rcr
mov
jl
adc
ja
mov
sub
in
xchg
pusha
xchg
lea
mov
pusha
push
jno
shr
adc
leave
mov
notl
mov
mov
inc
sbb
mov
mov
inc
jo
sti
loopne
lcall
jge
rcl
add
clc
sarl
icebp
nop
inc
icebp
fdivrs
lods
mov
xor
pop
sarb
aaa
les
push
hlt
mov
outsb
inc
add
das
in
call
sbb
fidivl
adc
cwtl
aad
sbb
ficoml
mov
pop
or
xchg
test
cli
outsl
push
xchg
lret
ficompl
mov
xor
leave
das
out
lea
jb
rclb
arpl
sbbb
push
testl
push
insl
fadds
and
xlat
shr
aad
fsubl
mov
dec
pop
jmp
add
xchg
aas
push
sbb
jae
movsb
enter
jns
int
sbbl
mov
loope
or
sub
daa
inc
sub
bound
xchg
out
or
sub
and
lods
inc
mov
xchg
pop
lret
int3
bound
aad
lods
inc
cli
push
add
and
dec
leave
push
pop
movsl
push
mov
xchg
mov
bound
push
sbb
jns
or
mov
fnstsw
hlt
pop
push
adc
ss
stc
push
sub
mov
mov
call
and
cli
mov
add
stos
in
adc
arpl
iret
push
xor
fwait
popf
mov
jmp
lcall
inc
jecxz
sub
dec
data16
dec
push
test
gs
lret
gs
sbb
in
mov
cmp
adc
gs
in
ret
aaa
daa
inc
imul
subb
mov
mov
enter
jge
test
arpl
dec
adc
stos
mov
sub
bound
jae
out
or
addr16
add
dec
ss
adc
ret
fcomi
sub
mov
lcall
sar
ljmp
icebp
fsts
outsl
push
mov
scas
inc
push
clc
sbb
mov
xchg
lods
jbe
js
ja
xor
mov
cmp
iret
js
sub
pop
sub
cmpsb
sbb
inc
xchg
xor
cmp
bound
jmp
int
xor
and
int
inc
pushl
mov
add
jae
aaa
xchg
jp
cmc
push
das
sbbb
ret
dec
mov
dec
imul
lret
mov
popa
pop
in
xor
mov
pop
xchg
jno
ds
add
jae
mov
pop
jb
ja
ss
sarb
push
dec
lock
mov
jo
mov
sar
stos
rorb
push
pop
fistpll
xchg
inc
aas
and
and
push
mov
test
xchg
mov
add
repz
incl
clc
jmp
cmpsl
inc
xor
pop
sti
push
iret
mov
enter
iret
mov
test
repnz
arpl
jg
out
js
cmp
jbe
in
lret
mov
mov
jge
cld
fcoml
stc
jmp
mov
push
add
mov
cs
xor
cmpsb
dec
call
shll
outsb
cmpsl
cmp
popa
fstps
addl
test
daa
mov
adc
jns
push
pop
mov
inc
pop
xor
out
add
mov
cmp
xchg
cmp
leave
fisttpll
sub
fsubl
pop
mov
stos
push
fcompl
int3
pop
adc
lret
hlt
test
jg
mov
out
cmovle
inc
and
or
in
dec
sbb
popa
xorb
mov
cld
insb
out
xchg
dec
inc
shll
out
or
arpl
and
ficoml
fwait
insl
xlat
pop
adc
lea
sbb
loop
mov
int
fnstsw
push
sbb
or
dec
add
dec
or
out
xchg
jl
mov
xor
pop
sti
bound
sub
loope
outsb
rol
mov
mov
inc
cmp
sahf
daa
pop
ret
and
andb
test
mov
mov
jl
aam
imul
sbb
imul
mov
add
jnp
scas
or
cmp
mov
inc
xor
mov
mov
in
int3
pop
aas
outsl
aam
or
rorb
xchg
or
pop
pop
adc
push
repnz
mov
in
push
mov
lods
ret
jnp
imul
dec
mov
repz
or
insl
in
leave
or
sub
cmovo
push
popa
scas
popa
je
scas
movsb
hlt
loope
pop
iret
pushf
imul
aam
inc
mov
cs
rcrl
sub
or
call
xchg
xchg
cmp
addr16
mov
lahf
aad
mov
in
xor
pop
mov
sbb
movsl
dec
in
nop
pop
hlt
insl
pop
add
push
adc
mov
adc
xor
mov
insl
and
jge
aam
sbb
pop
push
pop
rorb
pop
test
pop
mov
mov
cli
mov
push
leave
pop
mov
in
xor
into
std
jae
sbb
sub
add
pop
or
cltd
cmpsb
xor
jp
jns
rcll
adc
mov
mov
mov
or
orl
dec
aam
inc
pop
adc
rorl
out
add
pop
or
xchg
fs
jno
xchg
ficomps
sub
sbb
cmp
movsl
stos
sbb
fmull
inc
mov
xchg
xor
and
aad
cmp
mov
xchg
iret
sub
lret
sub
push
xor
rcrl
lret
jne
xor
decb
sti
iret
push
xchg
jmp
add
mov
sbb
pop
inc
inc
sbb
mov
inc
imul
gs
jle
cmp
lds
sbb
sbb
push
ret
pop
cld
orl
mov
adc
decl
sarl
xlat
xor
aad
ret
mov
pop
mov
mov
out
icebp
jp
adc
push
imul
daa
std
xchg
leave
push
les
sub
gs
aad
or
test
icebp
aaa
mov
data16
call
gs
jb
xor
sahf
add
and
test
pusha
stc
push
dec
adc
jge
mov
mov
shll
jecxz
test
lods
mov
cmpsl
cmp
mov
subl
in
rolb
mov
and
arpl
or
mov
or
iret
mov
test
je
hlt
push
in
mov
lret
ljmp
sti
xchg
mov
dec
andl
pop
out
addb
imul
push
out
in
sbb
and
in
inc
mov
or
add
sub
dec
xor
lret
cmpsb
mov
sbb
aam
leave
cs
jl
sahf
adc
nop
enter
lret
enter
xchg
sahf
xor
out
mov
ljmp
scas
mov
mov
dec
popf
in
sbb
clc
push
lcall
outsl
and
sahf
cmpsb
and
mov
js
lret
push
cld
mov
or
pop
jp
jle
sub
ret
int3
dec
mov
adc
mov
shlb
fists
pushf
aad
inc
lock
jge
and
aam
and
dec
je
imulb
cmc
and
push
cld
cli
js
lcall
loope
cltd
in
sub
orl
addb
mov
test
rcrb
mov
add
dec
sbb
xlat
jge
outsl
sbb
and
sub
in
and
into
sub
sbb
shlb
add
push
push
mov
jne
ja
stos
stc
dec
cltd
jle
sar
cmp
xchg
rolb
and
cmp
sbb
mov
out
aam
dec
xchg
into
test
or
and
aad
arpl
or
dec
scas
inc
jno
scas
clc
add
rclb
push
out
pop
enter
hlt
in
sbb
adc
dec
sbb
jnp
and
and
and
lods
and
dec
repnz
mov
les
add
jbe
mov
xchg
push
sub
lcall
jo
adc
push
cs
in
cmp
out
inc
pushf
inc
add
je
or
sbb
dec
sub
add
xchg
sbb
xor
scas
aaa
pop
push
fldl
dec
sbb
pop
mov
inc
rcrl
enter
sbb
mov
add
jecxz
mov
push
rol
add
xor
loope
addr16
xor
push
ss
in
cmpsl
push
repz
and
sahf
outsl
fnstenv
loop
dec
daa
xchg
mov
fwait
popf
push
aas
cltd
xchg
adc
mov
inc
pop
test
std
or
dec
xchg
inc
aad
and
out
addl
jns
enter
push
inc
aaa
movsl
lock
lea
mov
and
mov
out
or
imul
aaa
mov
jnp
inc
mov
pop
ljmp
cmp
test
sbb
or
mov
sti
fdivl
xor
mov
or
and
xor
jl
arpl
dec
cli
addl
dec
add
inc
out
push
cmp
cwtl
dec
mov
mov
std
dec
mov
inc
ret
add
movb
xchg
xchg
insl
sub
jo
inc
xchg
jg
mov
push
lock
push
jle
lds
pop
sub
push
ds
xchg
incw
and
xor
mov
outsb
inc
out
scas
sub
incl
and
mov
jb
jge
adc
stos
daa
repz
mov
hlt
add
cmp
int
es
into
mov
push
fnstsw
ljmp
and
sbb
pusha
clc
js
mov
mov
mov
or
pop
lret
jno
int3
lret
ret
hlt
xchg
push
add
mov
mov
push
test
push
jp
test
mov
dec
jbe
jns
cmp
push
aad
popf
icebp
cli
imul
fwait
shll
and
mov
inc
xchg
scas
imul
adc
test
add
mov
rcrl
fildl
inc
push
mov
sbb
xor
lret
data16
addr16
std
in
xlat
xor
xchg
xor
sbb
inc
daa
ret
and
jle
mov
dec
push
daa
negl
je
or
addr16
sub
fs
lret
xor
repnz
cmc
int
popf
dec
pop
mov
xlat
fcmovnb
and
xor
or
mov
push
dec
sahf
push
into
push
mov
mov
jb
subl
or
sarb
aaa
lds
cmp
pop
mov
std
adc
and
pop
nop
mov
jne
leave
mov
iret
fmulp
pop
mov
xchg
mov
pop
inc
mov
inc
mov
sub
xchg
insl
adc
xor
movsl
mov
mov
repz
xchg
mov
push
jge
lahf
dec
repz
xor
push
shrb
in
ja
push
xchg
outsl
orb
sub
sub
xlat
pop
pop
js,pn
pushf
or
or
mov
fmuls
iret
push
xor
xor
call
in
insl
inc
sbb
test
xchg
arpl
popaw
rcrb
sub
sub
push
shll
dec
push
adc
inc
mov
rolb
subb
shl
insl
pop
jns
and
pushf
sbb
loopne
cmp
leave
mov
cmpsb
lods
scas
stc
lahf
stos
sbb
sbb
rolb
inc
dec
and
xor
xchg
pop
add
jb
inc
fcoms
dec
push
imul
xor
jb
movd
mov
clc
js
nop
scas
inc
fmull
cmpsb
cmp
int
add
nop
inc
in
ret
push
mov
mov
adc
push
fxch
jmp
test
sti
js
xchg
movsb
sbb
push
sbb
call
xchg
mov
push
jae
sbb
addr16
int3
jmp
and
int3
movsb
iret
pop
mov
aam
adc
pop
stos
inc
sub
xlat
ret
add
mov
cmc
test
lock
clc
mov
cmpsb
cmp
ljmp
mov
dec
insb
xchg
xor
lret
nop
out
ljmp
cmp
push
ja
inc
frstor
push
pop
cwtl
adc
or
cmp
cli
sbb
xchg
sbb
add
xor
mov
mov
insl
outsl
shl
pop
dec
sti
sahf
ja
rcl
adcl
stos
inc
push
mov
enter
orl
mov
mov
shll
dec
insl
jns
loopne
sbbb
inc
cwtl
inc
icebp
cli
or
xor
mov
leave
xchg
stc
pop
call
enter
push
mov
pop
pop
notl
mov
and
sahf
jnp
xor
mov
sub
and
inc
stos
sbb
fisttpll
aad
or
mov
dec
ret
mov
inc
ljmp
mov
add
lcall
xlat
jle
mov
arpl
imull
mov
xchg
andb
aad
pop
addr16
and
jmp
gs
mov
adc
fcomip
mov
mov
and
push
mov
fstpl
pop
mov
fnstenv
int
add
sub
cmpsb
out
sbb
xchg
jo
movsl
sub
cmp
iret
push
stc
sub
fmul
pop
jmp
jge
enter
sbb
bound
fcomps
xchg
rorl
mov
adc
pop
mov
jnp
cltd
cmpl
lds
movsl
lods
or
xor
xchg
mov
push
cmp
nop
xchg
imul
push
out
mov
pop
dec
cmpsb
cmp
and
xchg
insb
sbb
aaa
fdivrs
sbb
scas
cmpsb
fbstp
fdivrs
sbb
out
xor
mov
bound
loopne
dec
ljmp
push
add
pop
and
and
push
cmp
and
adc
jnp
mov
and
imul
adcl
push
push
scas
lret
inc
inc
int
ljmp
js
xor
rcrl
ds
dec
arpl
inc
test
add
sbb
xor
dec
int3
mov
ljmp
fdivs
paddsw
sbb
cmc
ja
inc
lock
outsl
dec
outsb
fcmovnb
inc
fwait
sbbl
lea
sub
popf
lahf
inc
add
loop
in
add
sub
push
inc
lods
lret
pop
adc
push
push
adc
pop
jmp
ret
xor
lock
jge
stc
jg
jns
or
mov
vucomiss
jecxz,pn
add
mov
cs
mov
ljmp
fwait
movsb
iret
mov
fiaddl
jae
cmp
and
pop
cmp
lds
gs
dec
add
cli
cmp
sti
sahf
mov
sub
pop
xchg
fimull
fs
sbb
mov
push
lea
test
xchg
push
xor
mov
les
sarb
cwtl
mov
mov
or
movsl
in
arpl
xor
imul
pop
xchg
hlt
sbb
xorl
stos
xor
mov
mov
imul
imul
int
in
mov
fdivrl
xchg
test
nop
jo
xor
adc
dec
imul
int3
jge
cmp
pusha
mov
ret
fcmovu
cmc
ss
push
ds
lods
sub
psrld
addr16
push
cli
ds
push
mov
adc
movsl
sub
sub
cmc
pop
scas
shrl
sub
dec
clc
mov
xor
jno
pop
out
and
int3
sahf
int3
test
adc
push
nop
inc
fdivrl
mov
sub
inc
xor
cmc
fisubs
xor
andb
adc
dec
std
loopne
sbb
int
rcl
xor
in
add
stos
sahf
test
xchg
ds
mov
fldenv
sbb
ss
xor
cmpsb
mov
dec
ret
std
cs
inc
xchg
lcall
imul
push
adc
pop
push
insl
test
inc
sub
pop
pop
jp
lahf
jo
fld
data16
pop
adc
bound
mov
imul
std
xor
call
repz
dec
ljmp
aam
lock
or
popf
fs
incb
sub
repnz
sbb
and
sbb
pop
mov
inc
mov
mov
pop
mov
pop
dec
sub
imul
hlt
cmp
push
adc
jae
call
jno
rorl
inc
sti
inc
or
int
aad
dec
mov
gs
movsb
es
out
insl
mov
add
adc
pusha
fadd
lods
xor
cs
lahf
mov
push
and
pop
cs
push
inc
movsl
add
adc
jmp
sahf
or
pop
sub
test
add
jecxz
add
rclb
xchg
scas
lock
sub
mov
fcoml
xchg
test
jmp
fistl
scas
movsl
push
andb
push
jmp
xor
xor
aad
xchg
ss
xor
dec
outsl
push
mov
push
cmp
push
xchg
je
push
dec
sahf
scas
cwtl
ret
jb
mov
jnp
leave
jnp
jbe
nop
xchg
repnz
cmp
dec
jno
int3
inc
xlat
inc
mov
stc
jl
sub
and
stos
arpl
shrb
cwtl
xor
xchg
mov
and
add
lret
pop
out
cmc
sbb
in
mul
mov
jbe
cli
xor
insl
jle
sahf
test
arpl
mov
shlb
jns
int3
jp
ret
lea
mov
pop
cltd
lods
inc
fcomp
rcll
into
xor
lds
call
popa
rcr
nop
inc
xchg
mov
andb
es
fildl
push
cmp
pop
rcll
mov
add
dec
adc
push
push
xchg
gs
icebp
testb
jns
cs
lock
or
push
cmp
enter
outsl
or
mov
xor
cmpb
xor
mov
mov
jl
sub
pushf
xchg
push
or
out
pushf
leave
mov
pop
push
xchg
and
pop
xor
scas
push
sbb
mov
sar
push
sub
test
mov
out
movsb
mov
imul
add
cmp
xchg
jp
dec
lea
dec
push
idiv
inc
lods
xor
sub
inc
mov
ret
push
lret
jecxz
mov
push
in
loopw
lods
sub
and
lahf
out
shll
jl
sub
push
lret
lret
int
add
pop
or
jno
leave
cld
stos
sub
bound
dec
in
jnp
insl
sbb
pop
mov
xchg
js
push
add
mov
mov
xor
stos
jl
rcrb
enter
loope
dec
push
iret
fistpl
xchg
jg
shll
jp
sbb
nop
fcomps
dec
mov
test
adc
jecxz
dec
fldenv
lahf
pop
fists
xor
add
inc
or
mov
add
pop
sub
mov
sub
aas
pusha
push
ja
and
jl
adc
cmp
je
jo
or
ficoms
inc
sub
loopne
mov
cwtl
inc
or
pop
inc
fnstenv
push
sub
pop
sti
jbe
jmp
lods
in
dec
stos
pop
pop
xchg
jl
ljmp
ret
repnz
mov
hlt
xchg
ja
cmp
lret
out
push
xchg
fstl
push
js
incl
mov
jmp
mov
push
mov
and
xchg
pop
jbe
jecxz
icebp
mov
push
mov
xor
mov
inc
jecxz
inc
gs
xchg
bound
enter
push
rorb
inc
icebp
lea
stc
mov
loopne
js
or
jo
push
sbb
and
inc
mov
fdivrs
aaa
or
repz
cs
cltd
lds
clc
push
outsl
cmp
or
rol
adc
mov
icebp
repnz
scas
xor
push
scas
in
shll
pop
and
jg
and
and
cmp
in
sbb
or
insl
push
xchg
outsl
xchg
xchg
inc
dec
cmp
or
mov
xchg
nop
cltd
lea
jne
outsb
sub
fisubrs
bound
adc
icebp
or
test
stos
push
mov
pop
adc
and
fwait
mov
lret
fcmovbe
mov
add
fists
sbb
mov
addr16
roll
sub
dec
or
jo
in
xor
ret
jp
mov
out
lret
or
pop
jne
orl
mov
push
jne
shrb
stos
mov
or
lods
jl
and
pop
sub
push
lcall
sbb
push
fstpl
cli
mov
inc
dec
stos
incl
jnp
mov
and
pushf
cmpsl
and
test
sbb
mov
ficompl
mov
pop
enter
xor
inc
das
imul
ss
imul
jg
mov
inc
lret
imul
bnd
cld
dec
mov
in
bound
jnp
in
mov
mov
jmp
lcall
repnz
jo
xor
xchg
xor
push
sub
fcompl
ljmp
sbb
ret
mov
movsb
call
aad
cwtl
test
stos
lock
outsb
push
lock
lcall
mov
adc
test
mov
addr16
mov
inc
pop
push
add
lahf
add
push
into
mov
push
push
aad
push
adc
repz
adc
and
sub
xorl
mov
jae
fbld
xchg
shr
sub
xor
sub
pop
imul
sub
mov
fnsave
xchg
push
stos
in
leave
cli
in
pop
shr
lret
adc
and
lahf
dec
nop
inc
out
fnsave
inc
mov
ror
iret
stos
sub
test
pop
inc
jbe
lds
inc
jb
mov
jb
add
mov
sbb
or
ss
shrb
dec
inc
cmp
insl
sub
shlb
cmp
notb
xor
inc
jl
in
add
pushw
ja
or
sbb
fs
sub
test
xor
out
test
ja
shll
jmp
push
shrl
fistpll
push
cltd
movb
aam
subb
sbb
adc
inc
daa
cli
cmp
mov
movsl
lds
std
aad
xor
call
mov
mov
aaa
mov
negl
dec
cltd
adc
adc
push
loope
mov
jns
xchg
daa
and
mov
xor
insl
inc
aaa
dec
repz
lahf
mov
xchg
fisttpl
nop
jb
gs
push
scas
loope
loopne
mov
loopne
ds
sub
push
out
iret
shl
insb
in
push
inc
mov
push
mov
int
dec
add
fistl
jmp
push
jmp
push
cli
outsb
lods
fs
daa
inc
pop
sub
sbb
addl
lock
mov
in
lret
inc
dec
ss
and
add
mov
mov
push
adc
pop
add
sbb
push
test
jg
inc
sub
lods
repnz
jecxz
arpl
sub
cwtl
mov
jmp
sbb
jae
lahf
cmp
xor
test
aas
mov
xor
inc
cmc
loope
or
adc
sbb
mov
xchg
push
adc
sub
add
ss
inc
jne
icebp
jb
ficomps
std
push
cmp
stc
mov
adc
xor
or
cmp
out
fsubr
mov
ja
and
lahf
mov
test
cmpsb
inc
fwait
xor
inc
hlt
mov
mul
or
int
dec
fadd
dec
test
nop
mov
aaa
in
in
jo
add
fists
iret
xor
inc
movb
test
mov
or
sbb
rep
ljmp
cmp
dec
add
das
arpl
jg
adc
inc
icebp
or
push
in
out
fisubs
push
push
mov
popf
sbb
sbb
movsl
xchg
fnstcw
mov
push
pop
call
and
lds
inc
in
pop
lcall
in
outsb
cmp
pop
xor
and
gs
lcall
jg
xlat
movsl
into
mov
jecxz
mov
and
outsb
scas
dec
mov
popfw
outsl
scas
fwait
testl
push
push
add
repnz
adc
jge
sahf
jns
jp
jno
mov
je
push
movb
dec
mov
and
insl
sub
pop
jge
jmp
sbb
in
mov
cmpsl
icebp
pop
jnp
cmp
pop
mov
and
push
xchg
stc
repnz
mov
ss
sbb
push
mov
movsb
nop
stos
mov
rclb
inc
lahf
inc
lock
ljmp
insb
hlt
aaa
or
int3
sbb
push
sbb
movsb
inc
xor
mov
cs
mov
cmp
mov
lods
push
or
push
mov
adc
jo
divb
mov
nop
add
test
jns
xor
push
xorl
outsb
fs
pusha
in
pop
decb
pop
xchg
sub
pop
push
stos
xlat
call
adc
into
mov
or
jl
mov
or
xor
aam
push
inc
pop
mov
cmp
leave
add
xor
popf
bound
jb
mov
shlb
pop
add
mov
xchg
sub
jnp
inc
pop
cmp
cmc
mov
dec
xchg
fsts
fldenv
fisttps
cli
pop
addr16
jmp
fwait
lahf
push
icebp
adc
mov
mov
or
fisubl
mov
cltd
cli
nop
push
xor
es
add
mov
sbb
sbb
arpl
das
and
icebp
scas
sbb
or
setb
mov
sub
je
pusha
dec
mov
xor
and
adc
jns
pusha
mov
xor
lret
shrl
inc
out
pop
lds
repnz
inc
loope
mov
jp
cmp
inc
cmp
inc
divl
jmp
jp
das
lock
fnstsw
rolb
repnz
jmp
movsl
jno
subb
xchg
xchg
dec
push
iret
int3
or
icebp
cmp
pop
ss
lahf
and
ficoms
aam
add
roll
lods
xor
movsl
pop
add
leave
out
imul
push
movb
jns
dec
pop
popa
cmpl
xlat
in
shll
lahf
aaa
sbb
mov
add
es
cmpxchg
cld
orb
add
popf
or
push
add
fimull
je,pt
pop
sub
pushf
lcall
loopne
pushf
arpl
aas
leave
sar
push
andb
or
xchg
cmp
lea
mov
adc
adc
and
mov
sub
mov
test
imul
and
xor
lods
fdivrs
hlt
arpl
dec
inc
sbb
movsb
stos
push
inc
or
shl
mov
popf
xor
bnd
bnd
aas
mov
aaa
dec
lods
add
andb
cmp
pop
fdivr
jge
rcll
mov
popf
pop
xor
or
imul
pmulhuw
fldcw
jnp
mov
addr16
dec
push
inc
test
dec
out
aad
lcall
ret
push
add
jp
lea
out
push
rcrb
mov
testb
and
mov
xor
clc
mov
aad
imul
shrl
je
shll
call
inc
fnstsw
inc
scas
mov
xlat
std
inc
sbb
push
adc
stos
dec
dec
xchg
sub
inc
cmp
in
dec
in
push
cwtl
div
imul
pop
sahf
or
mov
sbb
gs
stos
jp
push
and
cld
imul
sub
sbb
mov
sub
mov
xchg
outsl
sub
adc
mov
insl
cmp
xchg
lods
push
inc
add
imul
add
add
or
test
mov
out
bound
pop
xchg
mov
dec
rorb
jg
lret
sahf
adc
aad
punpcklwd
imul
gs
and
jne
xchg
nop
lods
outsb
sub
andb
test
icebp
jg
fs
add
lahf
jle
mov
test
scas
inc
loop
xchg
mov
hlt
cmp
out
repnz
clc
lea
and
popf
mov
sub
inc
jg
jno
not
and
and
mov
enter
cmp
js
add
xchg
bound
jg
stos
mov
test
into
add
cmp
and
jecxz
sbbl
loopne
clts
cli
xlat
dec
lock
ret
cmp
sbb
cmpsl
js
add
aam
call
or
jnp
mov
jo
cmpb
imul
mov
mov
pop
xchg
or
cmpsb
xor
lret
rolb
lds
ja
pop
pushf
cmp
dec
jns
insb
lods
or
add
lret
ss
mov
out
pop
dec
shl
and
ficompl
push
jno
lods
insl
xor
mov
and
and
in
and
imul
dec
jg
pushf
push
fwait
lock
pop
pop
jb
mov
pop
rcr
cmp
loop
scas
push
push
jo
shll
loop
sbb
es
cs
and
and
movsl
jecxz
shl
add
pop
insl
aam
sbb
jecxz
scas
loop
fidivl
cmc
ljmp
aam
push
sbb
push
arpl
xchg
mov
std
fs
push
enter
cs
cmp
xchg
icebp
and
push
cmpsb
cmp
hlt
xchg
cmp
bound
mov
cmp
push
jno
or
xor
ljmp
push
int
test
pop
test
pop
mov
fs
pop
mov
loope
cmp
push
mov
pop
inc
aam
in
jns
jle
fimuls
sub
push
cmpsl
movsb
repnz
stos
xor
jecxz
inc
imul
les
cs
xor
sbb
and
insb
mov
and
dec
xlat
daa
fnstsw
pusha
inc
xchg
jle
push
jno
std
movsb
inc
jecxz
les
imul
insb
jmp
pop
fnstsw
inc
scas
jno
push
inc
aas
xlat
test
mov
call
sub
adc
mov
xchg
stos
iret
rol
in
inc
jnp
inc
idiv
xchg
fimuls
or
sbb
inc
sub
push
js
fwait
imul
cmp
addr16
mov
movsb
and
lods
and
push
inc
and
xchg
in
mov
sar
push
jecxz
xchg
xchg
dec
xchg
adc
cli
inc
inc
jo
daa
fs
add
into
xchg
cmp
push
mov
xchg
pop
popa
mov
sub
xor
std
popf
mov
mov
fadds
dec
inc
mov
sahf
jl
test
push
dec
mov
dec
int
and
inc
push
testb
push
call
dec
dec
xchg
xchg
adc
push
fimull
fwait
jmp
ret
imul
xchg
fiadds
mov
and
inc
mov
push
and
fdiv
jle
push
rorl
xchg
fwait
dec
mov
pop
push
repz
cmpsb
fnstenv
jg
xchg
out
cmp
movsb
jl
ret
or
ljmp
pop
sbb
mov
dec
xchg
clc
push
repz
dec
push
insl
aam
mov
shll
icebp
adc
in
sbb
push
outsl
insl
out
cmp
push
rclb
or
in
jbe
out
stc
cmpsb
cwtl
je
js
mov
aam
mov
cmp
xor
pop
sbb
out
and
jmp
push
or
mov
mov
sub
jae
push
jo
lret
adc
loope
in
add
xor
je
mov
aad
cld
nop
jp
adc
dec
popf
sub
insl
jg
movl
mov
jns
and
push
shl
sarb
push
sub
int3
stos
mov
fsubl
jns
pop
imul
cmpb
lahf
mov
mov
sbb
push
lds
jmp
iret
push
enter
addr16
mov
cs
shlb
mov
in
xor
mov
dec
icebp
outsb
adc
in
test
insl
test
repz
pop
add
mov
xchg
repnz
adc
sarb
mov
mov
mov
xchg
xor
aad
lret
sub
inc
add
inc
xlat
ret
pop
lahf
push
dec
incl
mov
cld
aaa
xchg
mov
add
daa
fnstsw
in
stos
ljmp
mov
cli
popf
clc
adc
xor
insl
mov
aas
sbb
mov
test
sbb
out
inc
push
dec
and
test
jns
daa
xchg
add
repnz
add
mov
shlb
pop
cs
lcall
dec
or
mov
pop
out
cmp
in
and
out
fmull
in
rcll
out
lret
jge
out
repnz
stc
test
nop
dec
xchg
mov
sahf
int3
pop
popf
mov
sbbb
jns
add
mov
mov
mov
xor
dec
add
jns
adcb
pop
imul
or
xchg
pop
mov
mov
mov
stos
lea
stos
xlat
xor
movsl
lahf
xlat
xor
mov
adc
push
mov
push
or
add
jp
inc
imul
inc
mov
outsl
sbb
jo
sbb
xor
lea
mov
or
push
mov
inc
lock
cmp
pop
cmp
and
jae
cmpsb
lods
push
imul
test
mov
push
pop
push
les
sti
pushf
xor
ja
pop
cli
xorb
rcr
out
and
in
pusha
pop
add
fst
bound
movsl
jae
mov
scas
inc
clc
and
dec
fisttps
repz
rcr
cmp
mov
mov
inc
jb
aas
pop
mov
loop
stos
push
bts
mov
in
pop
dec
xorl
xchg
push
add
dec
js
inc
mov
push
mov
jmp
inc
push
dec
shrb
push
and
testb
push
fwait
ret
out
dec
loopne
mov
jle
jmp
lock
enter
or
fnsave
pop
stos
fsubrl
fdiv
jbe
loope
xlat
jns
arpl
sbb
pop
mov
ja
adc
popl
sbb
mov
icebp
mov
pushf
divb
push
fcomp
mov
frstor
xchg
pop
mov
in
mov
dec
loope
imulb
stos
imul
or
fcoms
mov
jmp
inc
fwait
nop
gs
subb
mov
call
test
xor
push
dec
andl
enter
xlat
inc
aad
leave
scas
xor
sbbb
fs
scas
nop
pop
lock
adc
pop
jp
xor
xorb
sahf
fildl
in
lds
mov
lock
icebp
xorps
inc
negb
pushf
add
mov
mov
ja
js
popf
js
jnp
inc
mov
mov
dec
cmc
mov
pop
pop
ret
adc
mov
add
pop
notb
mov
cmp
mov
popa
int3
mov
stos
pop
fadds
subl
test
push
fadd
adc
iret
cmpsl
mov
pop
add
push
lahf
fists
cmp
movsl
jne
jb
test
cs
xchg
or
pop
add
outsl
lods
insb
sbb
xchg
inc
cmpsb
mov
xchg
stos
lret
hlt
mov
sbb
mov
sub
and
pop
push
addr16
repz
pop
movsl
gs
xlat
stos
push
arpl
in
cmpsl
xchg
adc
dec
mov
and
xor
test
pop
mov
fwait
setnp
cwtl
or
push
rcll
jo
xor
lock
push
cltd
ret
jb
call
inc
mov
jmp
lret
outsl
lahf
int
fdivp
fsubrs
add
repnz
aad
loope
jmp
jmp
dec
and
dec
inc
fdivp
adc
ffreep
mov
cmp
xchg
fstpl
inc
and
aas
adc
inc
outsl
popa
sbb
imul
and
test
icebp
movsb
xor
inc
push
mov
call
or
dec
lret
dec
or
mov
es
mov
push
ret
arpl
xchg
xor
jp
pop
test
dec
insl
in
jp
dec
mov
ud1
sbb
push
lahf
jnp
adc
pop
pop
out
cmp
jne
stos
test
jge
scas
push
inc
int3
loopne
dec
pusha
mov
aad
test
mov
lds
test
mov
aad
and
and
add
adc
mov
pop
lds
mov
or
fsubr
mov
icebp
xchg
sub
cmp
mov
xchg
jno
das
add
mov
faddp
dec
push
push
insl
iret
daa
add
sub
mov
xlat
mov
sub
int3
rclb
dec
inc
push
add
push
push
mov
daa
call
xchg
jae
pop
mov
bound
inc
inc
add
jae
lcall
lds
in
mov
enter
test
jns
movsb
xchg
mov
xorb
adc
divb
and
jg
jns
movsl
inc
pop
and
jno
testb
int3
jg
in
test
jge
jb
stos
pop
stos
in
imul
xlat
add
mov
std
pop
out
pop
outsl
mov
push
xchg
and
jl
fists
mov
sub
dec
push
jge
fnstcw
mov
push
xor
rclb
fsubl
outsb
lea
mov
cmc
push
inc
popf
shlb
mov
jle,pn
addb
mov
pop
jae
loopne
push
pop
jne
outsl
inc
adc
test
mov
jbe
sub
or
adc
repnz
les
sbb
lods
mov
rorb
xchg
push
lock
xlat
adc
and
das
push
fnstsw
add
cli
add
push
mov
and
retw
addr16
cs
add
lret
shrl
call
cmp
push
and
and
int
ficoml
lods
push
mov
ds
ljmp
das
leave
sbb
xchg
and
xchg
in
lods
iret
push
sub
add
and
jmp
add
dec
sub
out
hlt
movb
rorb
dec
icebp
dec
adc
mov
outsb
mov
pop
clc
fucomp
in
cmp
rcr
mov
pop
cmp
pop
sbb
push
sbb
std
push
jne
adc
inc
dec
and
ficomps
loopne
add
out
add
mov
in
into
rclb
sti
add
mov
inc
dec
icebp
sbb
fsubp
cmc
sahf
push
mov
adc
dec
out
lods
or
jne
je
xchg
test
push
xor
leave
popa
xchg
std
scas
movsb
lds
adc
test
xchg
add
aam
std
dec
dec
lcall
sub
add
sarb
jo
fidivrl
repnz
add
rcrb
mov
cli
bound
fsubrs
inc
push
mov
mov
push
xchg
push
in
push
pop
aaa
ficoml
sbb
dec
js
jno
shl
xchg
sbb
jp
fwait
iret
xchg
or
and
mov
mov
lahf
xor
scas
lea
shr
popa
sbb
aaa
das
addb
ret
add
lods
scas
fdiv
movsb
mov
sahf
push
cmp
lds
lahf
xchg
inc
lods
add
mov
push
and
lret
cmp
sbb
jecxz
jle
jp
ret
clc
imul
xchg
cmp
lds
lret
int
jns
pop
mov
jmp
std
cmp
jae
adc
leave
insb
mov
sub
and
and
add
adc
jns
incl
lahf
mov
xlat
xchg
push
ja
pusha
repnz
out
in
icebp
push
fs
adc
out
stos
sbb
out
push
adc
mov
lods
and
inc
and
xor
xchg
adc
push
loope
pop
xchg
cmp
jbe
dec
mov
sbb
call
rorl
jecxz
lods
xchg
orl
test
inc
aas
pop
jno
dec
icebp
out
movsl
sbb
jns
or
push
fmulp
js
lds
enter
push
push
adc
pop
xor
fstl
cmp
push
and
xchg
dec
jl
arpl
mov
or
adc
xorl
sahf
mov
js
inc
mov
adc
jnp
mov
jns
sub
mov
ss
daa
or
inc
push
mov
in
pushf
jecxz
jbe
movsl
cmp
ja
mov
faddl
int3
addr16
mov
jmp
and
mov
and
sub
add
loope
scas
sub
mov
mov
clc
ljmp
xchg
dec
mov
not
adc
insl
mov
lods
fnsave
inc
jl
cltd
out
nop
jo
mov
sub
push
or
push
icebp
mov
jae
mov
mov
push
mov
ja
add
mov
fisubl
mov
pop
jb
jge
mov
fisttpl
and
test
call
xor
lock
popa
popf
pop
dec
outsl
dec
and
rcll
push
mov
lahf
sub
test
cmpsl
cs
loope
dec
push
popf
or
jg
cmp
adc
lret
ljmp
or
sahf
sbb
leave
mov
stos
test
out
mov
nop
lds
int
pop
adc
notl
or
jmp
movsb
sbb
loop
jae
sbb
shrl
fs
or
mov
mov
or
mov
sub
pop
scas
push
loopne
and
lea
imul
sbb
push
push
outsl
pop
arpl
mov
inc
sub
push
das
imulb
fistps
pop
ss
push
jp
subb
test
jge
scas
bound
mov
stos
lahf
cmp
add
xor
jbe
iret
or
dec
add
xchg
cmp
into
jmp
loopne
xor
lds
icebp
cld
cmc
mov
xlat
cmpl
xchg
movsb
or
pop
in
pop
shrb
cmp
fdiv
pop
es
push
mov
std
repnz
cmp
je
cmc
lods
push
jmp
scas
js
push
and
push
cmp
push
repnz
mull
xchg
sub
jecxz
dec
jno
dec
mov
mov
ja
cltd
cltd
out
out
mov
mov
ss
outsb
jae
mov
sbb
push
idivl
clc
jle
dec
cmp
sub
sbb
push
cwtl
cmova
std
bound
xor
xor
or
dec
pop
mov
popf
cmp
push
mov
dec
in
push
cmc
lods
cmp
and
in
push
push
aam
mov
bnd
adc
pop
sub
mov
bound
mov
addr16
icebp
sub
mov
pop
out
ljmp
add
stos
xchg
imul
mov
push
pop
sti
jns
stos
pop
shr
test
jnp
imul
cmp
imul
insb
fldl
aam
sbb
fwait
cmp
mov
clts
dec
pop
or
test
loope
mov
insl
imul
or
inc
testb
xor
int3
sbb
mov
repnz
fisttps
sub
cltd
out
mov
pop
mov
sbb
sti
shlb
sub
push
inc
cs
pop
out
lods
and
xor
cmp
add
push
sbb
inc
dec
xor
mov
call
je
aaa
push
ljmp
std
aaa
inc
mov
insb
popf
jge
popa
xchg
cld
scas
dec
test
jbe
or
xor
cmp
sub
out
int3
push
inc
lock
sets
lret
cmp
jo
mov
pop
and
mov
movsb
and
mov
movsl
mov
fisubl
mov
or
stos
add
jmp
popa
rclb
mov
out
pop
or
jp
mov
cmovl
cmp
aaa
test
add
push
jmp
ljmp
inc
lods
or
pusha
outsl
cmp
orb
popf
dec
mov
mov
mov
xchg
out
imul
test
outsb
clc
subl
popf
sahf
push
push
adc
pusha
inc
pop
ret
int3
dec
hlt
ret
mov
bound
repz
push
imul
test
ja
loopne
stos
lret
nop
or
mov
jne
xor
jge
cmp
fsts
add
mov
insl
mov
pop
leave
pusha
sub
insb
andl
dec
aad
add
lahf
cmpsl
xor
hlt
push
fxch
pop
inc
in
popa
aas
lds
int
mov
cwtl
mov
inc
fldt
push
xchg
out
push
cmp
mov
sti
push
lods
and
fwait
mov
push
jecxz
push
xor
outsl
jbe
out
stos
add
es
sub
jno
sub
negl
push
xor
mov
mov
inc
xchg
dec
push
or
push
fisubl
test
les
push
cmp
dec
jg
mov
mov
enter
jne
push
mov
push
test
test
xchg
cmpsb
dec
mov
aad
insb
sahf
popa
mov
lods
dec
cmp
mov
sbb
dec
mov
xorl
pop
push
xor
fcomps
fsubrs
jbe
iret
xor
mov
xchg
and
aaa
cmpl
aad
mov
jl
jae
das
fsub
popf
nop
mov
push
or
imul
sbb
lea
test
dec
jmp
pop
push
notl
hlt
es
lahf
push
loope
pop
sbb
xor
and
add
xor
out
xlat
lock
mov
loope
nop
inc
push
rorb
sahf
sbb
aas
pop
dec
add
dec
pop
lea
adc
cmpsb
pop
push
push
push
out
rcl
inc
adc
mov
mov
in
test
leave
inc
test
lods
push
ja
in
icebp
addr16
dec
cmp
mov
call
mov
test
icebp
sti
dec
and
movsb
mov
jne
inc
leave
mov
ds
not
sub
adc
int3
dec
enter
adc
jle
in
ret
in
cmp
sahf
nop
or
xchg
sbbb
aam
ljmp
sub
cmp
loop
cld
mov
hlt
push
ljmp
ja
push
ljmp
or
movsl
shr
pusha
insl
xor
jle
mov
xchg
or
movsb
movsb
add
subb
mov
lods
xchg
xchg
jp
outsb
pop
adc
pusha
xchg
cmpsb
dec
mov
fs
push
cmpsl
test
negl
xor
adc
sub
mov
movsl
jnp
aaa
loopne
and
push
xor
testb
push
mov
or
aam
rcrb
sub
cmc
adc
cmp
outsb
movsb
les
lds
mov
mov
aas
fwait
adc
out
sub
into
pop
xadd
outsl
gs
stos
jmp
fcmovu
mov
bound
loopne
jne
or
sub
leave
les
xor
and
popf
push
in
mov
mov
imul
cmpsb
sub
jge
mov
call
nop
into
mov
ljmp
fstl
pusha
or
lahf
iret
ret
ficomps
cmp
fidivrl
insl
add
dec
aam
out
shll
push
dec
mov
mov
negb
xor
test
add
mov
ret
jo
mov
jge
ljmp
jbe
jb
gs
ljmp
jae
sar
rclb
jg
out
lods
lock
fs
js
call
int
add
inc
fs
call
add
les
ret
inc
stos
push
cwtl
cmp
and
cs
dec
add
cmp
jns
xchg
aas
pushf
jp
dec
sub
rcrl
xchg
and
pop
mov
mov
push
filds
sarl
xorb
adc
aas
inc
xchg
fwait
mov
outsl
into
call
imul
aam
mov
add
cmp
pop
mov
jns
ja
dec
mov
insb
lahf
lret
rorb
jl
push
xor
ret
xchg
cmp
cmpb
push
ffreep
imull
test
in
jno
fldt
aad
rolb
mov
add
popa
imul
xor
dec
pop
cs
inc
inc
aam
mov
mov
xor
hlt
std
mov
cmp
sbbl
jl
fistl
and
push
out
insb
pop
inc
add
push
int3
mov
inc
out
pop
xchg
aad
adc
notl
cmpsl
repnz
faddl
adc
add
fisubrs
xlat
cmp
adc
lea
rcll
enter
lcall
mov
aam
pop
ja
ljmp
mov
xor
push
stos
jl
call
ss
insl
pushf
mov
adc
or
jmp
jl
xchg
push
xchg
loopne
mov
or
adc
xchg
pop
add
xchg
fsubrl
lea
sub
cmpsl
rcrb
jo
out
loopne
movsb
shlb
cmp
out
test
xor
pop
call
test
mov
xchg
dec
aad
push
and
mov
xchg
std
jecxz
jecxz,pn
adc
loopne
rorb
add
or
mov
dec
insl
fcoml
sbb
dec
stc
mov
and
push
cmp
ret
jns
ficomps
sub
mov
or
lods
mov
daa
push
jo
inc
sbb
sbb
push
mov
inc
inc
je
inc
mov
lods
andl
pop
lcall
inc
jge
cmc
nop
out
loop
sti
mov
mov
adc
add
cmc
jne
push
mov
out
cmpsl
pop
push
and
mov
pop
clc
dec
pop
bound
xchg
or
fnstenv
push
xchg
pushf
jno
jg
inc
cmc
sub
dec
mov
sub
mov
pop
out
add
mov
xorl
mov
outsl
lea
movsl
in
jno
les
enter
cmpsl
stos
jp
imull
add
ss
sub
pop
clc
int3
addr16
divb
fbld
or
addr16
ret
setbe
dec
mov
adc
adc
jnp,pn
or
xchg
mov
test
cld
cmp
daa
cmp
sub
bound
ret
dec
enter
out
cwtl
int
mov
inc
xorb
mov
aam
insb
out
and
add
cmp
cmp
sbb
mov
xchg
loopne
clc
mov
mov
cld
xchg
mov
mov
das
mov
mov
sbb
push
cvtpi2ps
mov
push
adc
test
mov
fs
out
imul
cltd
dec
xchg
xchg
jge
ss
dec
jbe
aas
or
testl
adcl
mov
pop
push
pushf
addr16
ret
cli
cmp
bound
mov
out
cs
inc
jae
mov
mov
arpl
xchg
xor
inc
gs
mov
dec
cmpl
pop
mov
xchg
mov
cmp
and
mov
les
lahf
ljmp
movsb
fwait
jge
add
popf
inc
sub
jne
out
mov
mov
xor
and
test
repz
sbb
jl
cmp
rorb
add
jle
loopne
mov
mov
popa
inc
lea
lret
and
pop
shll
pop
xlat
in
xor
cld
jns
int
out
je
mov
dec
push
dec
add
daa
out
sub
mov
push
jmp
mov
icebp
xchg
xor
repz
notb
daa
insb
into
mov
imul
push
cmp
addr16
dec
adc
sub
je
jo
lcall
icebp
mov
aad
pop
loope
adc
arpl
gs
mov
mov
shr
fisubl
jne
movsb
enter
daa
into
jp
and
test
lea
xlat
adc
inc
cmp
pop
push
loop
inc
outsl
ja
and
shll
movsb
xor
adc
and
push
pop
dec
jp
jns
fcmovnb
xchg
and
aaa
adc
mov
jnp
shl
xchg
mov
sub
cmc
sub
mov
test
adc
add
add
daa
xchg
cmpsl
int
push
mov
push
cmpsl
mov
sbb
loopne
inc
inc
mov
popf
mov
stc
mov
dec
xor
shll
outsb
scas
sbb
pop
pop
popa
int
es
xchg
movhps
arpl
arpl
cmp
xor
lcall
mull
iret
lcall
int3
and
subl
push
push
xchg
fs
out
movsl
cs
fstpt
inc
mov
push
sbb
xor
cmp
push
jge
frstor
into
fs
into
jecxz
sub
sbb
mov
js
or
pop
cwtl
insb
mov
sub
mov
int3
adc
popf
push
cmp
add
inc
outsb
scas
out
shrl
inc
add
pop
cmp
sbb
mov
mov
mull
push
xor
roll
xor
mov
jnp
lods
push
aas
adc
aad
jne
repz
out
xor
repnz
cmp
cli
xlat
loop
jg
dec
shl
sub
js
mov
and
nop
mov
pop
rcrl
fists
xor
icebp
jp
pushf
js
push
jnp
dec
jns
sbb
ret
sbb
xchg
dec
jg
cmc
sbb
mov
in
dec
dec
or
loopne
mov
mov
pop
xchg
adc
lahf
std
fisubrl
xor
or
int
in
bound
addr16
xchg
outsb
pop
push
int3
mov
mov
mov
insl
cli
out
or
mov
lret
lcall
test
ret
inc
es
ret
jecxz
repnz
rcrb
and
push
pop
pop
mov
mov
movsl
xchg
std
sbb
and
iret
imulb
mov
xchg
pusha
jmp
xor
icebp
jb
mov
test
cwtl
movsl
enter
dec
sbb
jmp
icebp
sahf
sti
loope
inc
inc
xor
fwait
mov
push
push
sbb
test
divb
push
fs
or
js
rorl
js
jns
mov
jmp
dec
hlt
stos
and
daa
jbe
inc
inc
mov
lock
xor
out
add
add
test
cmp
sub
popf
lds
sbb
or
into
cltd
jo
cmp
mov
fsubl
mov
or
movsb
xchg
and
andl
test
std
lods
pusha
out
ss
cmpsb
mov
mov
dec
cmc
push
aam
or
sahf
sbb
mov
cltd
xchg
daa
test
sbb
dec
in
pop
ret
adc
popf
add
pop
imul
fisttpl
mov
roll
mov
test
or
jnp
outsl
movsl
and
pushf
dec
and
jg
rclb
adc
xchg
xchg
out
stc
lds
stc
xchg
pop
cmpsl
sub
add
push
xchg
movsb
push
cwtl
jecxz
or
push
hlt
test
mov
add
arpl
xchg
and
pop
mov
mov
sbb
call
fucomp
aam
popa
cmp
inc
mov
cmp
and
adc
and
aas
jbe
jmp
fdivs
jo
daa
int3
in
leave
push
and
jmp
jno
push
nop
lret
inc
cmp
sub
fwait
jecxz
sub
ret
clc
call
cmp
test
sub
pop
in
mov
jmp
cltd
or
mov
pop
cld
insb
aad
sbb
ret
jp
dec
mov
sub
pushf
fistpl
call
daa
sub
imul
jle
and
repnz
sub
imul
xor
sbb
mov
adc
mov
pushf
jnp
lret
in
xchg
xchg
push
pop
cmp
call
push
jnp
ret
dec
aaa
nop
jns
jle
popa
and
push
or
pop
je
enter
xchg
mov
fcomi
mov
loopne
adc
jge
or
and
jno
adc
jp
imul
xor
jb
xor
imulb
cmp
imul
and
mov
xor
addr16
cmp
in
addr16
pop
ret
cmc
sub
add
std
dec
cwtl
inc
add
mov
and
sti
dec
fisubrs
stos
call
loope
aaa
loop
or
pop
and
out
rcl
cmp
mov
push
loop
push
mov
pop
inc
adc
xacquire
jl
push
pop
loope
adc
xchg
stc
adc
or
cmp
dec
xor
add
push
push
inc
rol
adc
add
cltd
shrb
imul
push
xchg
cmp
jnp
lea
orl
xor
call
out
mov
lret
mov
test
fidivl
scas
out
adc
push
sahf
mov
ret
push
pop
int
sbb
xor
lret
inc
lret
pop
fcompl
or
scas
lds
repnz
fcompl
aaa
pop
cmpsb
faddl
in
adc
add
data16
cmp
xchg
xchg
add
cmpsl
scas
outsl
movsb
sub
lds
xlat
sbb
inc
inc
sbb
sub
cmpsl
mov
call
in
cmp
shl
dec
ss
lods
aad
and
daa
das
pop
clc
mov
enter
inc
mov
xchg
xor
aaa
cli
inc
and
shr
pop
ret
js
mov
jl
stc
hlt
ficompl
fsts
xchg
push
xor
adc
jmp
arpl
xor
push
xchg
add
je
cmp
shlb
push
or
mov
pop
adc
jl
jge
dec
inc
jge,pt
mov
jne
xlat
jno
lahf
das
movsb
adc
mov
dec
icebp
xchg
push
ds
imul
sub
popf
jns
roll
int3
je
mov
cmp
dec
lock
popa
jl
int
in
stos
cmpsl
rcrl
jnp
movl
pop
js
mull
or
lret
lock
inc
cmpsb
pop
xchg
sub
mov
mov
rol
lods
repz
cli
daa
push
inc
pop
push
out
cltd
push
sbb
sbb
stos
and
out
jle
cmc
testl
xchg
lock
ret
nop
fistps
xlat
push
inc
mov
test
dec
jb
into
pop
out
sub
push
andb
divb
aam
or
imul
mov
aam
rcrl
sti
inc
clc
push
mov
push
adc
sbb
pop
jnp
enter
pop
nop
movsl
xor
repz
insb
push
push
std
mov
inc
scas
out
rol
or
mov
lds
gs
or
fsubs
fnstcw
sbb
lcall
movsl
xchg
lea
inc
inc
push
jo
mov
cmp
sbb
dec
xchg
sub
pusha
loope
outsb
in
lret
dec
arpl
stos
shrb
gs
icebp
xor
bound
xchg
sbb
push
sbb
mov
xchg
sub
rorb
xor
aas
xor
mov
lcall
stc
insb
xor
shr
add
mov
ljmp
mov
imul
pop
xor
lock
dec
pop
xchg
out
pop
lock
mov
xchg
loope
or
sub
lret
movb
cmpsl
lock
lahf
cs
xor
mov
fwait
out
je
add
sarb
clc
xor
pop
jns
xchg
repnz
insb
add
sarl
cmpsl
mov
and
shl
fdivl
jle
js
pop
das
sti
insl
mov
add
cmp
push
mov
outsl
or
adc
push
xor
and
popf
add
or
aam
push
mov
out
mov
xor
shl
stos
inc
cmp
movsb
psllq
outsl
into
fnsave
int
mov
pop
xchg
xlat
lcall
and
push
fistps
movsl
xor
and
fsts
sub
xchg
stos
jle
push
pop
call
cmp
add
dec
ja
rorb
or
mov
adc
mov
call
mov
std
jbe
adc
loope
mov
mov
enter
mov
pop
inc
xchg
cmp
mov
push
jl
call
std
jnp
ss
mov
or
dec
arpl
add
sub
sub
iret
cmc
add
daa
in
mov
clc
lret
loop
fidivl
out
mov
cmp
push
push
out
sbb
xor
mov
xor
pop
jp
adc
loop
cmp
stos
outsl
mov
or
mov
mov
fadds
popa
in
out
mov
xorb
test
leave
or
in
ss
clc
adc
repnz
lds
jae
cmp
jmp
popf
shlb
add
push
cli
popf
dec
mov
movsb
rcl
inc
iret
ja
test
movsl
adc
jne
pop
jg
mov
xchg
cmp
jbe
daa
fiadds
or
jbe
xchg
lods
mov
dec
loop
adc
pop
sbb
aad
insb
pop
loop
negb
test
dec
into
mov
cmp
leave
pusha
inc
pop
mov
adc
pop
in
rolb
aam
jnp
clc
pop
arpl
lret
xlat
lret
mov
ljmp
clc
inc
cmc
lods
fmuls
inc
adc
add
out
outsb
dec
daa
push
inc
adc
or
fs
push
sub
in
fsub
dec
in
mov
test
ffreep
dec
mull
mov
cmpsb
mov
imul
repz
movsb
pop
pop
dec
sub
xchg
lahf
imul
js
fisubrs
sbb
push
ret
shll
mov
ljmp
add
loope
sbb
shr
stos
imul
rcr
mov
push
ret
ljmp
popa
mov
stos
inc
cmp
push
shrb
pusha
mov
insb
cmp
call
sahf
mov
jle
orb
add
cmpsb
addl
nop
push
push
xchg
repz
lret
xchg
lds
inc
cwtl
or
mov
sub
fs
dec
and
shll
sahf
dec
adc
jno
outsb
loop
mov
outsb
jecxz
sub
ljmp
enter
jmp
pop
sub
xor
rorl
sti
and
inc
les
mov
filds
std
or
loop
pop
mov
out
adc
mov
cs
movsb
mov
cmp
cmp
loopne
arpl
sub
adc
push
iret
jne
stos
outsl
xor
dec
loopne
lds
push
scas
sbb
mov
stos
loop
ror
add
loope
pop
sbbl
jg
incl
push
enter
pop
fadd
aam
loop
cwtl
fwait
lods
mov
mov
mov
test
xchg
fbld
pusha
leave
pop
jecxz
add
ljmp
lahf
jg
mov
mov
add
xchg
xchg
push
out
jge
aaa
imul
shrb
push
jns
loop
xchg
sbb
adcb
inc
cmp
adc
and
mov
jno
movsb
je
push
or
cmp
pop
rcl
lret
pop
sub
sbb
iret
and
pop
jbe
test
nop
aad
inc
loope
insb
xchg
repz
ljmp
lahf
inc
and
xlat
sbb
jo
or
add
lea
cmp
les
ja
insl
fidivs
out
mov
ret
addr16
fwait
xor
dec
pushl
cmc
sub
stc
mov
pop
dec
xchg
adc
loopne
push
fs
test
sbbb
or
push
loop
ds
int3
test
push
xor
scas
arpl
jmp
cmc
or
fs
push
mov
stos
addb
push
adc
xchg
dec
fists
stos
jmp
sbb
imul
cmp
sub
xchg
enter
aas
add
cs
enter
out
loope
add
push
lcall
lea
xchg
ficoms
dec
fisubrl
push
insl
inc
jno
mov
mov
cmp
push
lret
and
mov
push
mov
adc
cmpsl
aam
xlat
mov
mov
pop
loope
mov
and
stos
call
insl
cmp
cmp
cmp
xchg
ret
cli
cmp
cmpsl
adc
sti
adc
scas
lods
lock
scas
or
iret
fdivrl
adc
sbb
nop
xchg
xchg
cmp
mov
into
sbb
sbb
add
mov
xchg
and
in
fidivrs
test
lahf
sbb
in
and
loop
mov
xchg
xchg
cld
adc
lret
rorb
xchg
push
jno
or
and
adc
inc
hlt
xor
cmp
xor
xchg
add
sbb
pop
inc
mov
mov
jge
xor
mov
xchg
sti
sub
inc
pop
pop
pop
dec
jecxz
lret
imul
mov
cmp
pop
mov
mov
addr16
sbb
shlb
je
roll
aaa
jmp
dec
filds
in
outsb
dec
mov
imul
sub
sub
push
ret
scas
sub
aad
xchg
mov
sbb
call
and
hlt
jb
enter
inc
and
rorb
push
mov
fldt
repz
sbb
lods
dec
mov
and
xchg
sbb
dec
outsl
dec
mov
arpl
jne
mov
in
fcoms
push
add
mov
sbb
push
loope
pop
into
pop
scas
mov
int
aam
xchg
std
cs
mov
nop
cld
sub
or
inc
inc
scas
xor
pusha
cld
inc
add
in
in
imul
cld
rclb
ljmp
jnp
daa
xor
ljmp
call
rol
xchg
xor
mov
lods
xchg
mov
mov
movsb
dec
out
call
push
jp
add
es
jl
sbb
jae
les
sbb
fbstp
cmp
pop
add
fs
and
push
addl
push
add
jl
popa
hlt
cwtl
fistpl
mov
loopne
jecxz
stc
lahf
push
test
pop
pop
push
push
es
pop
into
sub
jmp
bound
ret
dec
out
arpl
mov
add
js
mov
fisubrl
mov
mov
sub
imul
movsb
jbe
fisubrl
out
adc
pop
xchg
jb
icebp
push
push
cltd
in
mov
pop
and
shll
outsb
lret
jp
repnz
ficomps
pop
sarb
xor
cmp
lods
jge
inc
add
iret
test
or
inc
adc
andl
push
lods
inc
mov
scas
mov
jl
inc
pop
inc
and
pop
loope
scas
loop
lds
loop
cmpsb
insb
cwtl
mov
arpl
icebp
dec
test
dec
int
out
pop
stos
sbb
pop
std
mov
inc
repz
or
xor
cltd
or
push
loope
arpl
push
mov
sbb
pop
sub
daa
adc
div
jnp
enter
or
fs
sti
fldcw
xor
ljmp
jb
cld
cmp
push
add
cmp
loope
jmp
loopne
jge
in
or
push
xchg
cmp
pop
mov
andl
mov
pop
in
xor
mov
out
scas
test
sub
jmp
decb
icebp
pop
sbb
out
lahf
pop
outsl
push
es
das
adc
fisubrs
sub
xor
mov
insb
push
push
ja
xchg
jae
jnp
xor
and
sub
aaa
lods
jae
push
movsb
and
mov
out
jecxz
test
outsl
imul
push
lea
sbb
sub
cmp
in
jmp
je
fimull
gs
mov
mov
pop
ret
lea
xor
in
push
mov
xchg
stos
xchg
ficompl
add
inc
cmc
inc
jmp
and
or
adc
dec
arpl
or
mov
fsubrs
inc
or
mov
sub
repz
push
repnz
ret
hlt
out
xchg
and
ja
sub
pop
outsb
mov
pop
add
pop
inc
dec
outsl
mov
mov
cmp
stos
inc
inc
cmp
jbe
push
jo
and
aad
jg
or
dec
cwtl
pusha
or
pusha
cmp
xchg
aad
icebp
sti
shrl
dec
insl
mov
sub
fdivs
movsl
movl
std
popa
scas
int3
les
push
adc
jmp
xor
stc
push
les
repz
stos
jge
pop
out
stc
in
fbstp
adc
push
pop
repnz
cmp
adc
mov
and
pusha
lods
inc
sbb
loopne
sbbb
cmp
arpl
xchg
arpl
cmp
mov
sbb
xchg
jg
cli
sub
sbb
inc
test
mov
mov
mov
ret
push
add
loope
shlb
dec
xor
push
sahf
xchg
xlat
jmp
dec
sub
ficomps
fadd
in
add
mov
jmp
xor
aam
mov
add
push
cmc
mulb
adc
jg
fstpt
or
pop
xor
mov
fdivrp
mov
lahf
or
mov
aaa
mov
stos
xor
cld
fxch
ret
sub
cmp
call
iret
xchg
outsl
sti
inc
cmpsl
pusha
push
scas
aad
pop
xchg
xchg
and
cmp
push
xchg
dec
cltd
push
fwait
pop
es
add
js
jg
jnp
pop
push
sbb
xchg
lea
out
sbb
popf
jno
mov
lea
cmc
aad
inc
out
sub
insb
or
hlt
push
gs
stc
int
sub
pop
das
xor
enter
mul
mov
sub
repnz
adc
sahf
push
pop
xor
sub
sub
and
adc
cwtl
cmpsb
inc
pop
or
cmp
push
sub
ficoms
fmul
push
cmpsb
testl
popa
rcl
sbb
and
inc
push
out
repz
loop
xor
add
inc
mov
sbb
pop
out
mov
adc
or
pop
mov
xor
ss
int3
loope
and
sbb
andl
das
test
test
inc
pop
insl
push
add
mov
mov
insb
stos
fistpl
push
stos
and
sbb
std
ljmp
fiadds
add
pop
jmp
mov
jecxz
sti
mov
gs
mov
fcmovb
iret
jle
nop
dec
sub
pop
pop
iret
nop
pop
mov
out
sbb
xor
sbb
cmpsl
sbb
mov
hlt
in
lahf
aas
cmpsb
xchg
dec
ljmp
popa
and
mov
neg
aam
cli
fsub
sbb
xor
mov
and
fnstenv
test
cli
dec
mov
fsubrp
leave
mov
sbb
dec
outsl
cltd
inc
pop
or
dec
mov
inc
sub
call
jmp
add
shll
sub
or
out
push
push
mov
cld
in
rorb
in
sbb
in
into
scas
mov
or
jmp
ret
jge
sub
int
rorl
or
mov
daa
in
pop
adc
sub
push
sarb
icebp
scas
pop
out
popf
movsl
mov
jns
lds
mov
aam
cmc
xchg
lret
mov
jmp
mov
leave
aam
rolb
mov
les
popf
sub
sbb
pop
adc
ss
lods
push
jno
hlt
mov
call
and
ret
xchg
test
mov
add
cltd
sub
mov
cmpsl
stc
jnp
aam
sbb
rcrl
std
mov
dec
lea
jge
leave
inc
mov
aam
pop
jmp
or
push
sbb
lods
call
dec
fildl
in
scas
rcrl
test
out
mov
jg
add
popaw
sbb
mov
cltd
xchg
test
rcrb
fimull
cmpsl
xchg
or
mov
call
lcall
push
pop
pop
enter
les
adc
dec
data16
mov
test
push
loop
aad
pop
add
addr16
inc
mov
push
xchg
adc
negb
adc
mov
xchg
jne
sahf
ljmp
test
mov
cmp
outsl
test
outsb
pop
sub
jge
test
jmp
aaa
aas
cli
pop
push
or
daa
ficomps
loope
xor
push
jns
test
xchg
mov
mov
cmp
xor
test
dec
jbe
push
push
sub
and
mov
leave
push
fdivl
aad
inc
inc
mov
xchg
xchg
cmp
or
and
add
arpl
xchg
jle
aam
fldl
mov
push
cmpb
mov
popf
adc
enter
cmp
push
dec
or
sarl
loope
sbb
bound
sar
jnp
fisubl
cmp
popf
jmp
push
adc
or
imul
adc
iret
mov
je
data16
push
mov
push
dec
fistl
daa
ss
xor
or
mov
jg
rol
lahf
adc
mov
xor
lret
xchg
jno
and
hlt
arpl
xchg
mov
or
mov
mov
cmp
xchg
sub
std
dec
scas
movsb
cmpsl
inc
jmp
dec
testl
repz
lock
repnz
jo
xchg
mov
xor
xor
sbb
test
pushf
nop
rolb
inc
jl
xchg
push
shrb
enter
int3
xlat
sub
lods
mov
xor
dec
mov
xchg
adc
decl
xchg
jns
mov
mov
inc
push
adc
lock
fsubrp
sbb
add
dec
pop
je
mov
xchg
mov
stos
xor
inc
out
fiaddl
paddusb
cmp
or
test
jo
dec
jnp
jnp
sbb
sbb
add
add
rcrb
and
cld
sub
loopne
xchg
aas
lods
sti
xor
xchg
ljmp
fsub
lea
fxtract
push
xchg
lret
mov
out
adc
repz
adc
pop
mov
leave
jno
fistl
cmp
popf
pusha
mov
outsl
imul
xor
iret
sub
aad
jg
fistps
dec
outsb
arpl
lods
jecxz
inc
add
dec
in
jl
sbb
mov
nop
xor
data16
sub
inc
out
and
mov
mov
cld
out
pop
cmp
call
movsl
icebp
xchg
sbbl
push
mov
mov
cmp
dec
ret
cwtl
xchg
hlt
lcall
sub
sahf
icebp
lods
and
cmp
js
lret
out
in
dec
movsb
mov
js
les
adc
es
js
sbb
lahf
shl
mov
je
push
dec
iret
insl
push
stos
pop
adc
aam
enter
lds
repz
popa
mov
arpl
add
jle
jne
cmc
jo
push
cwtl
cs
sbb
adc
dec
in
das
imulb
pusha
repnz
pusha
insb
add
adc
inc
fildl
dec
adc
cvtps2pi
fbstp
xor
push
lds
pop
inc
xchg
push
cmp
xor
pusha
and
and
lahf
sti
in
aas
rcll
fcomps
xchg
in
or
out
cmp
iret
sahf
fistpl
out
loope
xchg
in
or
stc
mov
push
dec
jbe
ud0
lret
and
push
sti
or
imul
sbb
mov
rorb
mov
xor
das
jbe
mov
pop
and
mov
cmp
lret
cmc
lods
jno
imul
cmp
sub
jge
in
in
popa
add
lds
mov
cld
mov
push
pop
call
jle
mov
jecxz
and
dec
push
lret
pusha
inc
push
pop
add
imul
out
ds
xlat
fisttpl
cmp
mov
test
daa
mov
adc
xor
jns
cmpsb
mov
cld
addb
movsb
cmp
xchg
push
imul
nop
repnz
adcb
cmc
pop
pop
jo
hlt
dec
lret
rcrb
fnstsw
sbb
pop
arpl
cwtl
mov
in
adc
mov
sub
cli
xchg
xor
mov
sbb
push
lock
cmp
inc
fcomip
add
pop
sbb
inc
add
cld
cmpsb
pop
insb
push
adcl
sbb
mov
xchg
lods
sbbb
insb
xchg
or
cs
fisttpl
pushf
xchg
and
pop
cmp
sbb
insl
pop
xchg
shrb
sbb
aad
sub
testb
lret
rcll
xlat
jg
ss
mov
jnp
in
jb
sub
test
fistpl
popa
push
test
or
lea
movsb
loop
or
aam
movsb
sub
stc
les
push
jno
pushf
loop
dec
jo
push
pop
mov
orl
push
orb
imul
mov
inc
pop
nop
outsl
adc
xor
mov
mov
imul
nop
mov
outsw
ret
icebp
call
test
adc
add
cld
lcall
in
sub
inc
mov
aad
mov
cwtl
stc
and
clc
jno
pop
pop
icebp
pop
lcall
arpl
cld
cmp
push
sarl
push
cs
jl
pop
aas
cmp
xor
or
sub
fldt
out
xchg
push
insb
mov
mov
cmpsl
add
sub
jp
ffreep
pop
iret
cmpsl
cmpb
push
xor
sti
shl
xchg
add
repnz
ss
call
loope
movsb
ljmp
cmp
insb
testl
jnp
xor
nop
enter
pop
popl
dec
mov
jae
into
adc
mov
sbb
or
shl
cmp
mov
pusha
scas
mov
and
push
mov
sbbl
xchg
adc
ficomps
test
enter
jle
imul
mov
test
aas
pop
sub
jo
scas
fisubs
je
aad
lods
clc
push
add
int
mov
andb
sbb
and
jmp
sahf
mov
jne
xchg
mov
push
push
les
arpl
rorb
jmp
add
ficoml
push
loope
add
xchg
mov
cmc
jne
push
daa
sbb
mov
movsb
xchg
mov
add
push
enter
pop
cld
popf
je
xchg
in
cmp
in
push
fs
push
adc
repnz
xchg
lret
fxch
jae
orl
cld
dec
push
aad
add
pop
cltd
vpcmpgtd
les
sbb
push
mov
clc
xchg
test
and
jnp
shl
mov
ja
scas
cld
add
stos
je
inc
inc
mov
arpl
dec
xor
insb
lods
pop
fbld
push
pop
out
xchg
fiaddl
int
leave
rep
push
add
jnp
cmp
addb
jl
and
jmp
lcall
testl
fs
pop
sahf
mov
in
add
int3
mov
fcmovne
ja
sarb
cwtl
movsl
cwtl
call
dec
scas
pop
fsubrl
push
fwait
push
out
inc
je
push
mov
shrl
jae
outsl
imul
cmp
std
jl
mov
push
mov
popf
cmp
mov
iret
adc
ret
add
lods
push
orl
out
dec
or
sub
cmp
mov
push
dec
ss
popa
inc
repnz
add
add
sub
mov
jmp
inc
inc
lret
scas
lods
mov
adc
hlt
loopne
pushl
jmp
mov
in
mov
negl
jns
xchg
or
aam
data16
lods
cs
mov
xor
mov
jb
ret
out
cmp
xor
cmp
push
insl
mov
cltd
push
jmp
out
and
mov
scas
add
jno
jns
push
mov
hlt
cmp
mov
cmp
fdivp
in
roll
gs
jp
jecxz
clc
add
fldl2t
mov
jecxz
pop
and
or
mov
int
push
xor
mov
and
and
xor
push
clc
shrb
xchg
mov
fs
out
ffreep
push
and
xchg
ret
dec
mov
out
xlat
or
xchg
pop
ret
dec
or
cmp
outsb
dec
test
add
mov
xchg
popf
push
outsb
adc
xchg
daa
loop
ret
jne
jg
pop
jbe
inc
xchg
xchg
pop
add
shll
mov
bound
je
mov
jno
sbb
fimull
pushf
inc
mov
out
adc
gs
mov
and
xchg
dec
fisubrs
add
lret
sub
push
stc
mov
lret
clc
fisttpl
fwait
dec
push
sarb
out
popf
push
push
sbb
inc
push
lcall
push
idivb
pop
stc
push
dec
loopne
sar
and
push
fdivp
adc
fs
inc
add
addr16
jp
hlt
mov
xchg
roll
addb
pusha
sbb
faddl
int3
loopne
dec
inc
mov
movsb
or
mov
int
mov
sbb
cwtl
xchg
ja
jns
xor
mov
dec
rclb
jge
jne
mov
je
out
jmp
int
sbb
or
push
add
xchg
call
cmp
jle
or
cmp
test
mov
repnz
and
pop
fiaddl
mov
or
dec
popf
in
dec
mov
test
das
lea
ss
ss
lea
or
call
mov
and
ret
aad
sub
mov
and
pushf
popf
das
push
push
push
orb
xchg
lock
mov
add
jns
fcomi
xchg
or
int3
int
jo
in
out
pop
inc
scas
push
push
sub
push
xor
fwait
pusha
add
jno
aaa
loopne
repz
mov
lret
xor
mov
nop
cmp
jg
mov
inc
sbb
shr
ret
jp
in
lods
adc
pop
lods
add
mov
push
pop
push
imul
add
xor
popl
dec
rcrb
ror
sti
add
leave
mov
rol
shl
sub
pop
xchg
sbb
jae
jp
in
lods
inc
lods
int
cmp
je
icebp
mov
inc
mov
adc
sbb
and
cmp
test
sbb
xchg
add
test
add
cli
loopne
loope
pop
add
sbb
sbb
test
hlt
jecxz
call
sbb
cld
ret
adc
fidivrs
push
xor
sti
pusha
test
cwtl
push
push
lcall
mov
movsb
mov
pop
mov
or
jae
std
mov
repz
nop/reserved
cmp
cmp
stos
or
dec
int3
pop
lods
jbe
enter
sbb
jnp
sahf
cmp
sbb
jle
arpl
jnp
inc
jle
out
arpl
enter
xchg
rolb
dec
nop
jmp
pop
jno
xchg
sub
paddw
and
pushf
lcall
jmp
scas
leave
xchg
adc
xor
ljmp
shl
fcompl
mov
clc
sbb
arpl
xor
adc
test
sub
fwait
pop
mov
lahf
jno
dec
mov
adcl
sub
into
lret
or
das
fs
sub
insb
fnsave
sbb
sbbl
divb
sti
xlat
mov
cld
rclb
int
jae
pop
repz
and
out
lahf
mov
mov
int
xchg
pop
test
call
lea
addl
imul
icebp
cmc
adc
mov
test
rcl
aam
mov
stos
dec
std
and
rorl
pushf
add
sub
mov
lret
pop
mov
or
mov
subb
cmc
call
jb
stos
push
or
scas
cld
add
fcomi
std
fs
mov
fstps
dec
popa
jo
push
daa
push
cli
pop
xchg
push
xlat
inc
insl
pop
mov
rorb
push
fiadds
aas
xor
add
mov
adc
mov
or
out
sub
or
popf
aas
or
cmp
or
xor
mov
pop
xchg
clc
call
jne
es
lods
icebp
js
or
cmp
sub
sarb
adc
adc
in
jbe
scas
test
mov
or
inc
pop
mov
mov
lret
mov
ret
mov
jge
out
repz
daa
outsb
inc
sbb
imul
xchg
xor
fxam
mov
cli
jns
in
ss
lods
pcmpeqd
or
adc
adc
dec
outsb
ljmp
mov
cmpsl
repnz
cli
in
dec
pop
ds
mov
mov
subl
clc
cmpsl
sub
push
out
xchg
inc
pusha
mov
cmpsb
adc
inc
xchg
into
data16
mov
imul
gs
adc
cmpsl
xor
nop
sub
xor
nop
jns
add
aam
inc
pop
lcall
mov
jbe
fwait
pop
or
cld
fldcw
cmp
sbb
pop
sbb
mov
imul
pop
ret
xor
negb
and
jae
adc
loope
sbb
pushf
std
push
cmp
scas
add
lret
lcall
push
js
loop
xor
fcoml
mov
dec
lret
mov
push
retw
xchg
and
or
jnp
fxch
jne
sbb
sub
fidivrl
add
cmpsb
dec
jo
loopne
xor
cmc
aas
test
mov
fcoml
mov
dec
mov
call
fidivrs
icebp
int3
mov
dec
popa
fwait
xchg
jmp
pop
in
es
sub
push
push
xor
or
adc
fmull
push
repz
aas
stc
inc
pop
cwtl
adc
or
jg
or
pop
or
inc
jno
jno
jae
scas
divb
lods
xlat
mov
imul
clc
pop
pop
insb
loop
sarl
dec
sub
js
pop
inc
rcrl
sbb
push
les
or
mov
add
inc
repnz
mov
pushf
cltd
push
inc
dec
ljmp
push
into
mov
pop
int3
shrd
dec
add
fildll
mov
cmp
sbb
outsb
lret
xor
adc
cmp
fidivl
mov
inc
mov
push
sbb
mov
sbb
cmp
and
xchg
int
inc
mov
pusha
pusha
in
cmc
and
xor
jae
int3
pop
mov
ret
popa
push
xchg
jle
mov
jp
push
fs
mov
popf
xor
push
xor
jbe
mov
inc
jg
stos
js
filds
sub
enter
insl
cmc
sub
outsl
fwait
jle
jg
jge
test
pop
cmc
hlt
push
add
sub
fs
cmp
adc
repnz
pop
mov
aam
cmp
aas
mov
jl
icebp
or
aam
clc
push
roll
shll
mov
and
xchg
ret
ja
loopne
ret
icebp
int
pushf
lcall
add
mov
pop
xchg
mov
cld
sbb
fistpl
int
cld
mov
js
idivb
sahf
mov
mov
or
mov
mov
mov
test
sub
xchg
lods
adc
xor
mov
xchg
adc
int3
and
fwait
ljmp
and
sbb
mov
fistps
xor
push
lret
sbb
inc
or
cmp
scas
and
enter
cmpsb
cmp
stos
jne
popa
cwtl
push
pop
ds
dec
add
out
ror
sbb
data16
cmc
cmp
std
out
movsl
ja
fistps
inc
data16
mov
jb
xchg
rorb
in
push
loope
shl
aas
dec
in
cmpsl
or
push
mov
negb
es
sbb
popa
push
bound
add
and
cmp
dec
and
inc
dec
add
fisubrl
sti
inc
and
lret
jp
sarb
add
cmp
jmp
outsb
pop
rcrl
push
xor
mov
or
int
mov
xchg
jp
dec
test
imulb
fdivl
and
jno
cwtl
jbe
mov
neg
or
fmuls
sub
jl
pop
mov
mov
ficompl
add
jns
out
cld
out
mov
inc
imul
pusha
add
cmp
jge
inc
pop
fucomi
adc
into
movsb
sti
mov
mov
and
sub
mov
fldenv
inc
jmp
repnz
arpl
add
jp
dec
pop
cmpsl
xor
leave
cld
loop
or
bound
mov
dec
or
cmp
daa
inc
in
inc
js
shll
ss
loope
mov
dec
cmpb
jmp
test
fdivrs
mov
call
add
mov
mov
sbb
shll
loopne
lods
pop
adcl
adc
inc
sbb
stos
mov
jne
push
movsl
cwtl
mov
test
test
ficomps
orb
push
out
xor
xlat
out
pop
aaa
scas
test
xchg
inc
and
or
fnstenv
adc
xor
jns
lret
imul
int
fs
push
lcall
jne
test
nop
xchg
sub
negb
and
pushf
aaa
push
xchg
test
pop
jp
mov
insb
lods
movsl
gs
icebp
add
xchg
mov
mov
cmpsb
ret
idivl
roll
jp
das
and
dec
fdivrs
out
scas
cli
mov
jno
arpl
xchg
push
fwait
addr16
insl
push
je
xchg
lods
sbb
mov
mov
push
lahf
xor
mov
test
sub
cmp
xor
in
sbb
aam
or
or
xchg
loop
pop
rcll
pop
push
bnd
sub
lock
fstl
cwtl
subb
lret
lahf
out
add
push
out
push
cmpsl
inc
in
out
jnp
movsl
adc
outsb
xor
cmp
cwtl
pop
mov
push
pop
sub
mov
jmp
inc
imul
add
sub
xchg
sub
ret
mov
mov
and
in
je
and
mov
out
inc
inc
cmc
mov
roll
jg
xchg
mov
in
cmp
or
ret
insl
sbb
cwtl
insl
imul
rcrb
push
popa
mov
fwait
and
mov
cmp
add
pop
dec
ret
shll
cmp
mov
push
mov
or
int3
addr16
gs
xchg
cmp
sub
sarl
and
repnz
pop
adc
mov
pop
scas
mov
xlat
lret
out
xor
cmp
mov
push
fisubrs
das
js
lcall
scas
sub
push
mov
into
xor
push
sbbb
aad
sbb
adc
mov
pop
data16
inc
loope
jg
in
pop
pop
pop
and
in
sbb
lds
pop
add
cwtl
leave
into
cmp
les
stc
outsl
aam
xor
adc
out
dec
fwait
ss
jge
push
dec
or
pop
sub
sub
mov
pushf
cmp
sbb
or
decb
fstpt
sbb
cs
sub
sbb
fadd
jg
xchg
es
lock
push
repnz
iret
ret
dec
sar
push
jns
add
adc
shll
imul
pop
fxch
das
xlat
cmc
or
adc
shll
in
or
stos
arpl
push
rorb
ss
jg
dec
fcoml
leave
addb
and
shll
test
jae
mov
testb
jbe
fcmove
add
add
cs
test
subl
fsubs
cmp
inc
repnz
push
scas
pushf
mov
or
lret
push
push
jb
test
repnz
sub
push
dec
roll
xor
xor
cld
push
imul
mov
notb
jne
xor
add
xchg
fsubp
adc
mov
sti
adc
push
imulb
mov
push
jecxz
jns
mov
aaa
dec
xchg
test
and
sbb
sbbb
xor
loop
shlb
and
iret
jo
pop
test
lret
and
or
movsb
xor
orl
pop
or
ret
mov
out
or
loop
xchg
pop
pop
dec
fsubrs
push
push
movsb
push
repnz
xchg
in
mov
test
filds
test
and
mov
negl
or
rcrb
cmc
ret
jp
push
into
nop
loopne
xor
cmpsl
pop
lods
sbb
cli
rclb
dec
jp
push
ret
mov
fwait
scas
sbb
nop
bound
xchg
stos
ds
adc
xor
xor
int3
mov
sti
mov
repz
or
andb
inc
sub
add
dec
lahf
inc
cmp
mov
xor
lock
in
jle
roll
dec
dec
pop
jnp
xor
std
ret
or
dec
mov
out
jmp
lcall
and
sub
inc
fistl
jge
jmp
repz
jl
add
pop
and
jg
mov
icebp
cwtl
rolb
sbb
repz
inc
mov
pop
sbb
xor
pop
sarb
pushf
cmp
xchg
mov
popf
cmp
sbb
test
dec
inc
xchg
aaa
push
xchg
adcb
sbb
xlat
mov
jae
fildll
sub
icebp
outsl
repnz
mov
fimuls
push
sbb
or
mov
clc
sub
pusha
cmpsl
push
jmp
sbb
ficompl
insb
push
jmp
stc
jns
imul
inc
out
dec
loopne
mov
pop
cmpsl
lea
outsl
cs
insl
fstpt
push
test
inc
enter
push
scas
and
push
xchg
jle
dec
fwait
test
popf
js
mov
push
lahf
repnz
and
jns
and
fdivp
mov
test
jmp
int
lcall
adc
mov
arpl
fisttpl
jo
stos
cwtl
es
xor
outsl
push
jne
cmpsb
cmp
jmp
jp
xor
jae
xor
movsb
insb
or
and
sub
add
into
mov
shlb
sub
out
push
or
daa
lcall
ret
mov
cwtl
js,pt
adcl
or
sarb
cmp
sbb
pop
jns
add
movsl
push
or
pop
fldt
in
das
lahf
push
movsl
push
inc
xchg
test
add
ss
arpl
scas
arpl
fldl
cs
adc
fdivr
hlt
adc
xchg
test
or
cli
fwait
in
xchg
adc
jge
ret
aad
cmpsb
shll
cmc
dec
test
addr16
psubq
mov
mov
rcr
cld
movsb
aas
inc
clc
mov
test
loop
pop
pop
jge
pop
in
adc
adc
push
inc
lea
mov
scas
daa
lods
ficoml
shrb
or
inc
stc
mov
daa
outsl
adc
call
push
insl
filds
push
movsb
fistps
ret
pushf
mov
jge
cmp
xor
or
jl
leave
mov
push
inc
pop
dec
popa
popf
or
scas
ljmp
test
pop
xor
in
inc
inc
loope
sahf
xchg
lahf
sub
movsl
or
xor
or
out
rcrl
pop
fsubp
nop
mov
popa
xor
and
push
pop
ret
or
and
aad
sub
loop
adc
in
mov
ja
in
xchg
popf
jno
ljmp
nop
and
adc
imul
int3
cltd
jb
imul
adc
sbb
xchg
push
mov
js
xor
dec
mov
dec
fistpll
pop
pop
mov
int3
mov
mov
imul
shrb
jb
mov
loop
fwait
and
in
scas
mov
es
mov
xchg
in
pop
push
dec
dec
cmp
push
ja
ljmp
inc
xchg
xchg
adc
sub
in
sub
int
insl
xchg
add
push
pushf
jnp
and
sbb
pop
lret
out
and
or
push
jecxz
pop
jnp
xchg
ret
pop
jo
mov
mov
sbb
mov
and
pop
cmc
pop
in
out
aas
mov
popa
fstl
push
ljmp
mov
cmp
in
sub
ja
push
in
mov
dec
mov
mov
fdivl
jns
imul
shrl
test
or
cwtl
push
andl
jecxz
lret
push
adc
scas
dec
add
ljmp
push
inc
lahf
mov
enter
outsb
lea
and
xor
sub
and
les
push
mov
pop
cs
ljmp
push
mov
inc
cmpsl
dec
mov
movsb
xor
shl
xor
cmp
add
cmp
mov
les
or
inc
rcrl
popf
rolb
fistl
pusha
popf
mov
pop
sbb
test
cmp
leave
push
dec
sub
test
mov
push
dec
scas
pusha
cmpl
ds
rcrb
rorl
inc
adc
test
push
out
mov
pop
and
inc
xchg
stos
outsb
mov
loopne
popf
mov
pusha
add
cli
sbb
cs
test
fldl
stos
cmp
push
mov
mov
adc
pop
add
xlat
dec
es
xchg
cld
ja
loop
in
mov
scas
scas
xchg
pop
and
cmp
sbb
or
cs
test
inc
icebp
fldcw
inc
loopne
or
test
scas
lods
iret
mov
and
aas
sbb
xor
sbb
push
and
in
xchg
inc
cmp
and
dec
mov
clc
adc
lods
pop
enter
mov
movsl
push
lcall
std
push
mov
dec
jmp
push
aam
push
push
insl
outsl
lret
cmp
nop
pop
pop
fisubrs
lods
movl
sub
outsb
jecxz
jmp
movsl
jae
adc
lods
test
cmp
dec
aaa
pop
fs
jno
shlb
je
jae
jo
jne
shlb
in
cmpsb
pop
sub
sarl
mov
test
xchg
orb
loope
cmp
arpl
inc
int3
xor
pop
fisubrs
int
push
lods
and
and
je
std
arpl
adc
adc
outsl
cli
fnstenv
dec
mov
inc
dec
fbstp
xchg
rorb
dec
faddl
or
or
xchg
inc
add
jne
test
cmp
jp
pop
cli
rol
and
xor
dec
in
inc
pop
mov
into
lods
inc
arpl
stos
loop
pop
loope
adc
mov
loopne
rcrl
pop
push
lret
cmpsl
mov
sub
mov
jo
cmp
fwait
mov
pop
push
push
cmp
sbb
pop
not
adc
or
sbb
inc
jne
mov
mov
into
pop
imul
jle
push
jne
or
mov
sbb
rcl
mov
sbb
jmp
inc
enter
mov
adc
hlt
into
dec
inc
jg
std
bound
lret
adc
push
inc
mov
jl
insl
add
inc
push
or
xchg
in
cltd
mov
and
rcr
xor
mov
mov
leave
insl
clc
or
push
lea
ret
mov
add
mov
inc
cmp
lahf
js
xchg
pop
mov
cmc
xor
mov
sti
cmpsl
mov
jecxz
jns
fmull
cld
imul
dec
jno
jg
fnstsw
stos
rcl
js
mov
mov
and
pop
sbb
pop
sbb
pop
fcomps
push
push
sbb
sub
pop
mov
pop
in
adc
jle
inc
push
je
in
add
xorb
lcall
mov
lcall
push
in
mov
call
orb
sbb
mov
mov
or
test
sub
jno
jp
pop
icebp
cmpsl
sub
lea
adc
inc
addr16
into
fildl
cli
clc
scas
sub
jno
shll
xchg
cmp
cwtl
inc
test
insl
shrb
sub
inc
pop
pop
sub
mov
sbbb
push
or
pop
pop
pop
gs
loope
ror
outsb
ret
icebp
adc
mov
mov
cmp
orb
rcll
repnz
shrl
imul
push
fisubl
aad
mov
jbe
cmc
scas
adc
xor
daa
pushf
sbbl
lcall
xchg
paddb
std
jecxz
mov
mov
mov
add
leave
std
add
sub
inc
test
js
pop
jae
aaa
lds
xchg
mov
xor
mov
push
sub
mov
xchg
xchg
fistpl
adcl
jl
lods
aad
dec
push
cmp
jnp
js
pop
dec
subb
out
jecxz
loop
cmpsb
outsl
inc
aas
in
cmpb
adc
cmpb
fcoml
mov
mov
sub
jae
lods
push
mov
mov
sbb
inc
shl
pusha
mov
sub
adc
push
sub
lret
sbb
pop
xchg
push
rcrl
inc
test
fucomp
repz
nop
in
add
jp
cld
cmp
rclb
add
test
add
popa
nop
es
and
xchg
mov
inc
je
mov
dec
sarb
pop
sub
xchg
mov
xchg
mov
cmp
dec
dec
dec
loope
rcll
stos
sub
mov
mov
cmp
sub
lret
inc
sub
in
or
cmp
push
push
nop
pushf
xchg
in
test
pop
mov
mov
sub
sub
adc
je
andl
cmc
lods
lcall
cltd
jae
scas
jle
jb
nop
lahf
jmp
xor
in
jp
stos
mov
repz
xor
inc
enter
adcl
xor
in
loopne
outsb
cltd
push
cld
sbb
ja
xor
pop
js
aas
add
into
mov
push
js
icebp
xchg
jns
test
adc
xchg
rorb
inc
mov
jo
or
sbb
mov
mov
out
mov
xlat
ja
inc
sub
inc
sub
mov
aaa
mov
sbb
push
leave
test
sbbl
das
cmp
add
fldl
fcmovb
loopne
daa
data16
js
xor
jecxz
jne
lret
out
sub
sbb
movsb
rolb
mov
ret
mov
imul
adcb
testl
cmpsl
xor
adc
icebp
sub
mov
pop
add
hlt
fildl
daa
add
mov
xor
xchg
xor
lahf
sub
sub
mov
mov
xor
addr16
xchg
mul
lds
jo
out
stc
je
in
cld
pop
or
subb
pushf
add
pop
fdiv
adc
xor
repnz
sbb
pushf
fbstp
fdivp
pop
mov
xchg
add
arpl
in
repz
and
xchg
test
dec
cmp
addr16
dec
stos
xchg
xlat
dec
mov
push
sub
push
fdivp
xchg
and
mov
shll
jge
rclb
and
pop
icebp
mov
adc
push
cmpsb
cmpsb
sbbb
rcrl
xor
jne
out
and
xor
enter
push
bnd
sbb
stos
lcall
loope
cmpsb
pop
insb
and
pop
mov
add
jecxz
jae
push
sub
inc
lcall
mov
jmp
int3
dec
inc
jecxz
leave
add
in
rolb
or
inc
lods
movsb
mov
pop
push
in
pop
sbb
lods
test
out
imul
add
scas
pop
fldenv
pop
adc
cmpsl
ret
dec
sub
and
int3
mov
and
pop
mov
jle
mov
jmp
pop
inc
test
test
call
lds
loope
mov
jns
adc
mov
inc
leave
decb
or
sub
xor
cmpl
mov
aaa
mov
and
repnz
bound
xchg
cmpsl
mov
negl
dec
loop
xchg
and
test
cmp
data16
jns
loopne
frstor
les
rclb
out
fisubrl
lret
cwtl
jns
aas
daa
sub
shll
test
add
add
mov
jns
sbb
hlt
xor
inc
jno
mov
push
clc
pop
jg
cmp
and
test
sub
xor
pop
mov
fisttps
scas
mov
jae
out
xor
insl
outsl
outsl
shlb
inc
outsl
xchg
shll
sbb
mov
sbb
adc
dec
out
dec
inc
dec
pop
adc
push
sbb
rclb
jns
push
cmp
sub
pushf
xchg
roll
mov
sahf
pop
and
mov
je
adc
mov
outsb
adc
cwtl
adc
push
mov
into
xchg
leave
test
cmp
inc
inc
jnp
pop
dec
push
sahf
adc
mov
adc
mov
sub
and
xlat
cmpsl
in
push
in
mov
push
xor
xlat
clc
push
xchg
sbb
xchg
scas
add
adc
out
les
subl
xchg
push
outsw
sbb
mov
mov
push
int3
and
push
push
rcl
push
arpl
jno
and
xor
jp
call
aam
cmpsb
xchg
pop
test
push
adc
sub
mov
call
jp
or
sbb
ja
nop
sahf
call
cmp
jle
pop
xchg
or
movsb
adc
sub
arpl
xchg
icebp
cmp
and
jg
mov
fistpll
push
or
inc
popf
mov
repnz
sub
cmpsl
adc
or
cmp
std
xor
sub
mov
lret
icebp
cmp
xor
add
mov
stc
sarb
push
testl
orl
outsb
call
rolb
loope
mov
nop
add
cli
mov
pop
aas
lret
dec
movsb
outsb
xchg
frstor
sbb
mov
lods
sub
int3
vldmxcsr
arpl
jbe
ret
mov
cli
push
cmpsb
test
sbb
push
ss
push
mov
xchg
adc
out
lcall
sbb
daa
add
mov
fimuls
scas
adc
add
jne
sub
sub
dec
lcall
setb
jmp
aas
mul
arpl
push
movsb
xor
or
add
fs
cltd
cmp
jmp
push
or
mov
mov
bound
lret
pop
mov
xor
addr16
xchg
fbstp
sti
jle
sbb
insl
sbbl
in
aas
xor
xchg
mov
mov
out
and
ret
add
divb
loop
jno
jae
sbb
sbb
mov
arpl
aad
gs
jb
enter
scas
or
jle
inc
pop
fildll
in
add
add
mov
ret
fsts
lret
add
inc
cmp
cmp
scas
outsb
aam
imul
sbb
and
fstpl
icebp
mov
sbb
jno
lds
les
test
or
aam
sub
inc
sbbl
out
dec
xchg
filds
mov
sub
jno
mov
andl
out
cmc
repz
xor
out
mov
pop
cmpsb
xchg
mov
sbb
repnz
sbb
cs
push
in
xchg
jmp
mov
fisttps
movsl
pop
and
push
sbb
shrb
lods
cwtl
push
inc
in
inc
mov
call
or
inc
lock
scas
xchg
in
out
cmp
xor
and
fwait
xor
lea
inc
stos
mov
sub
add
cltd
fldcw
pop
mov
insb
aam
xor
leave
lea
mov
mov
cmpsl
inc
and
dec
pop
int
daa
nop
mov
hlt
aam
mov
fmull
pop
xor
jae
fnstenv
into
dec
cmp
xor
pop
jg
enter
add
adc
pop
test
hlt
fwait
ret
xchg
dec
push
mov
cmp
xor
leave
adc
inc
sub
sub
dec
test
push
cmp
pop
pop
inc
fdivs
jne
fldt
pop
xchg
pop
inc
add
mov
and
cs
cmp
adc
cmp
scas
inc
sbb
xchg
add
aas
fists
mov
push
cli
pushf
test
mov
mov
iret
inc
cmp
mov
lods
mov
outsb
pushf
shlb
loope
jmp
adc
dec
mov
fnsave
mov
je
call
lods
add
imul
mov
mov
cmp
ret
mov
inc
aad
add
xchg
das
bound
test
mov
pop
mov
push
enter
mov
add
cld
adc
adc
sbb
stc
mov
cltd
fwait
jne
add
cmp
lret
xor
arpl
movsb
sub
jb
test
add
xchg
xchg
repnz
xchg
xchg
xchg
pop
pop
cmp
cmp
pop
dec
sub
mov
pushf
lahf
pop
and
sub
mov
inc
cmpsl
nop
inc
js
xchg
inc
sbb
dec
enter
sbb
mov
dec
arpl
lock
mov
jae
cmpsb
cs
fnstcw
jl,pn
xchg
inc
push
sub
cmp
inc
sbb
xchg
pop
jno
adc
xchg
repz
and
pop
movq
ffreep
add
sub
jne
mov
jae
add
sbb
push
aam
jno
inc
sti
in
dec
out
jnp
shlb
push
dec
in
ret
xchg
js
and
push
loopne
insb
xchg
repnz
cmp
insl
pop
mov
les
inc
mov
dec
ret
mov
xor
loop
mov
mov
hlt
addb
adc
pusha
addr16
xchg
outsb
je
out
rorl
or
mov
inc
repz
insl
lret
push
inc
push
dec
inc
jb
mov
mov
fs
mov
aad
insl
mov
ss
jl
cld
test
scas
mov
leave
jp
push
push
add
cmp
mov
fs
pop
jo
adc
mov
fisubrl
and
dec
mov
mov
pop
loopne
cmc
bound
enter
push
ficompl
jmp
dec
fnsave
mov
jnp
dec
stos
int3
jp
jns
push
sub
movsb
xor
xchg
cmp
sbb
clc
lock
icebp
fst
imul
jecxz
popf
xrelease
xor
ds
mov
js
and
lock
mull
loop,pt
dec
or
cmp
jecxz
jae
add
mov
push
cmp
or
sub
add
sbb
xchg
ret
sub
cs
xor
aam
nop
xchg
inc
shll
mov
into
ret
push
test
in
stc
mov
shrl
jecxz
cs
outsl
add
mov
pop
inc
cmp
pop
dec
and
sub
and
bound
mov
xor
jl
lahf
test
ds
pop
cs
sub
pop
mov
sbb
push
insl
mov
jbe
call
imul
iret
imul
or
in
arpl
scas
mov
lret
ss
add
cmp
fbstp
leave
lret
aam
xchg
xchg
mov
cld
mov
or
cmp
sub
inc
fldenv
movsb
pop
dec
adc
add
or
call
fmull
and
rcrl
jae
mov
add
inc
in
xchg
lcall
ficompl
call
mov
jns
ja
fwait
orb
nop
mov
sub
xchg
fcomp
cmp
neg
xchg
andb
pop
inc
rcl
sub
add
ds
test
ds
cwtl
sub
nop
pop
xchg
sub
xchg
je
mov
mov
imul
mov
arpl
fldcw
popa
nop
pusha
jl
shll
cmp
xchg
xchg
lret
mov
adc
mov
adc
imul
pop
jg
ljmp
mov
aam
call
aaa
cmp
jge
mov
mov
sub
sub
pop
sbb
mov
jp,pt
cld
mov
or
in
fwait
test
pop
jo
scas
into
xchg
imul
lods
mov
push
xchg
xchg
dec
push
push
push
adc
jecxz
lods
aam
test
cmp
sub
jo
in
in
in
adc
fcmovbe
mov
int
sbb
inc
sub
in
push
sub
mov
mov
mov
and
andb
cld
push
es
nop
shll
xor
dec
mov
bound
pop
jo
push
stos
jge,pt
lret
cmpsl
mov
add
negb
mov
jmp
call
fidivrl
mov
out
jnp
push
push
fdivl
rcrl
xlat
aam
fildll
sbb
les
sbb
push
add
gs
sbbb
sbb
sbb
dec
mov
imul
pop
pusha
adc
sub
outsl
rcll
outsl
add
loopne
xorb
mov
test
inc
into
lret
pushf
daa
in
cmc
pop
test
cli
sub
xchg
cmp
out
xor
lods
fdivl
outsl
sahf
adc
mov
inc
push
inc
pushf
push
cld
inc
push
mov
jp
cs
adc
repnz
stos
outsb
repz
fidivs
mov
lock
andb
mov
std
call
mul
clc
cmpsl
into
jge
jmp
and
push
pusha
jecxz
rcll
jmp
mov
es
xchg
ret
sbb
mov
lahf
mov
jo
aam
and
mov
xor
adc
or
pop
nop
inc
jmp
lods
jmp
pop
and
movsb
cmp
dec
inc
adc
insb
add
into
or
call
rorb
dec
mov
sub
xchg
sub
cmp
lret
xlat
fnstcw
lds
stos
test
loopne
pop
mov
popf
lea
jae
push
mov
sarb
mov
cld
imul
loop
aas
pop
inc
mov
mov
into
lds
scas
int
xchg
fstpl
arpl
xor
mov
mov
mov
jns
jbe
mov
xlat
aaa
cmc
dec
sub
enter
test
jg
mov
pop
lahf
stos
dec
and
cmp
lds
les
jb
pushf
sti
sti
in
scas
add
adc
dec
stos
adc
mov
push
cltd
dec
cwtl
int
ds
arpl
gs
test
dec
insl
xchg
mov
shlb
sub
addr16
leave
dec
push
jg
ss
fistps
push
push
add
fcmovbe
or
mov
jmp
xor
xor
je
and
aad
fcmovb
xor
push
mov
inc
jns
lods
rclb
out
lcall
fsubrl
xchg
xchg
int3
push
je
repnz
movsl
sbb
mov
test
sbb
dec
rcrb
xor
cmc
in
mov
imul
popf
aad
dec
pop
ds
es
adc
pop
sub
mov
xor
cmp
repnz
imul
pop
jl
in
xor
mov
rorl
loopne
or
das
test
adc
cld
nop
shrl
xchg
aaa
or
leave
aaa
xor
repnz
pop
lods
cmc
repnz
lds
movd
mov
aas
xchg
mov
les
mov
loop
mov
sbb
push
inc
push
push
lret
lods
out
push
jae
cmp
mov
xor
subb
and
sub
pop
addr16
add
cmp
mov
adc
frstor
aad
fisttpl
imulb
sahf
inc
shll
push
inc
inc
scas
pop
pop
aam
loop
cmpsb
xor
or
aas
cmp
xchg
ret
int3
sbb
sub
adc
fwait
mov
fs
mov
out
dec
push
shl
mov
inc
rclb
or
mov
ret
clc
outsl
add
inc
push
leave
add
cmc
sahf
inc
adc
jb
mov
cltd
ficoml
cmpsl
sti
mov
out
lods
bound
int
les
daa
sub
jns
cltd
cltd
push
test
add
icebp
adc
popf
lahf
dec
mov
fs
loopne
or
lods
push
mov
aad
inc
cmp
arpl
subb
out
test
pop
fistpl
or
or
es
je
push
sbb
jl
adc
lock
pop
movsb
mov
dec
repz
push
in
lock
and
inc
jle
loopne
popf
aaa
inc
push
scas
xchg
idivl
add
sarb
cmpsl
pop
fimull
add
std
mov
sbb
hlt
icebp
mov
xchg
mov
ds
pusha
adc
gs
xchg
inc
jb
push
and
mov
je
push
and
data16
scas
add
int
jns
adc
adc
scas
pop
ret
andl
jmp
xor
xchg
xchg
aad
ret
mov
je
and
jno
lcall
cmpsb
jae
sahf
lock
jnp
pop
movsl
and
out
out
shlb
cltd
mov
lret
std
hlt
rol
lds
arpl
cmp
fiaddl
subb
sub
mov
push
mov
inc
inc
xchg
mov
inc
adcl
or
inc
daa
xor
insb
fistps
not
mov
js
xor
push
bound
sub
std
stos
fidivs
sub
aam
iret
sbb
dec
mov
pushf
cmp
push
push
lods
dec
inc
xlat
inc
fbld
in
jns
mull
xchg
test
xchg
inc
add
cmp
leave
push
sahf
cld
test
insl
out
mov
xor
pushf
pop
cs
scas
inc
inc
cwtl
xchg
inc
sub
and
jecxz
das
out
enter
scas
rorb
test
sub
dec
sbb
adc
and
xchg
dec
sti
int
pop
lock
mov
mov
push
mov
adc
mov
cmc
mov
dec
out
lods
xchg
or
fimuls
inc
pop
jae
mov
int3
out
jl
loope
sub
sarb
hlt
push
shll
pop
sub
andb
aad
push
mov
stos
push
mov
xor
mov
or
jns
xor
loope
or
cwtl
pusha
jecxz
sbb
arpl
sub
repnz
lods
insb
xor
roll
div
stc
iret
rcrl
pop
icebp
jo
inc
mov
fs
mov
outsl
popf
mov
fwait
movsb
mov
scas
mov
or
gs
aam
add
xor
inc
sub
cmpsb
out
out
adc
cltd
add
add
sbb
pop
xchg
and
push
xchg
nop
ljmp
dec
dec
iret
lea
bound
mov
jp
jl
in
adc
in
fimull
lods
js
pop
cmp
fwait
jecxz
xchg
pop
xchg
mov
xchg
pop
inc
mov
mov
dec
dec
push
sbb
icebp
cld
cmp
aad
fwait
cmp
les
push
icebp
and
insl
mov
inc
adcb
or
mov
add
pop
data16
int
xor
leave
cmp
js
mov
inc
lret
repz
push
les
push
lods
int3
pop
out
mov
inc
push
ret
and
pop
pop
xchg
sti
into
mov
and
leave
hlt
loope
lea
lods
add
stc
pop
fldenv
stos
mov
das
sub
cld
push
mov
xor
ljmp
mov
or
sbb
ljmp
stc
shrl
cmp
mov
cld
jo
lock
jns
stc
push
movsl
je
mov
repnz
sbb
out
mov
adc
xor
sahf
cwtl
pop
mov
lahf
and
scas
out
mov
enter
lds
and
pop
and
int
lret
pop
lea
pushl
fbstp
xchg
iret
loop
in
fidivrl
mov
sbb
xchg
enter
das
and
test
xchg
es
and
lods
movsl
push
mov
pop
inc
aad
clc
mov
and
setae
adc
cmp
fsubs
lods
sub
lock
outsb
movsl
cmp
arpl
cmp
jecxz
mov
cli
xor
xchg
les
lea
or
inc
repnz
mov
sub
jo
cmp
pop
jne
int
or
popl
leave
dec
testb
add
push
lods
movsb
out
mov
adc
in
mov
pop
and
pushf
test
xlat
negb
call
jo
lcall
pop
pop
and
xchg
xchg
pop
lret
or
lret
mov
mov
test
mov
mov
fsubl
sahf
cs
jbe
cmpl
mov
inc
sti
arpl
pop
les
fnstcw
dec
das
add
fwait
inc
out
dec
mov
scas
or
je
jg
mov
cltd
xor
or
or
iret
call
insb
push
add
push
in
imul
cmp
mov
adc
es
mov
mov
stc
leave
in
or
dec
scas
test
fildll
in
repz
xor
in
mov
pushf
push
aam
mov
repnz
jmp
xlat
repz
iret
lahf
add
pop
jno
sbb
imul
iret
mov
and
xlat
jae
insb
mov
ljmp
dec
mov
mov
inc
cmp
inc
fwait
sti
push
cltd
push
and
xchg
cmp
mov
sub
add
xrelease
enter
sbb
and
jg
clc
mov
dec
mov
adc
lret
jecxz
lods
xor
aas
xlat
mov
push
sub
sub
cmp
xchg
push
sub
push
mov
mov
sbb
fstcw
dec
mov
stos
push
insl
and
shll
ja
mov
fistpl
hlt
cmp
out
data16
inc
aas
movsl
pop
fwait
pop
mov
dec
ss
sbb
inc
sbb
outsb
mov
lret
or
jecxz
pop
push
cmp
push
mov
add
xchg
jg
stos
fs
adc
mov
xchg
fldenv
sbb
and
and
ret
das
sti
imul
mov
push
push
or
sbb
js
jp
mov
dec
popf
adc
stos
or
test
jae
lret
sti
movsb
pop
push
lret
xor
xor
in
je
mov
inc
cld
dec
stos
cld
leave
rcrw
faddp
dec
int3
adc
fdivs
clc
and
fsubrs
je
cs
cmp
lea
out
add
push
fwait
cli
imul
cld
and
repz
addr16
imul
fcomi
sub
gs
out
push
popf
sub
xor
jbe
lods
loop
mov
fisttpl
dec
jl
mov
dec
inc
inc
sbb
icebp
es
pop
xor
fadds
cmp
fwait
int
sbb
arpl
fwait
inc
sarl
xchg
scas
adc
cmc
pop
ret
push
xchg
xchg
fcoms
pop
sub
inc
and
push
inc
sub
push
jg
ret
in
test
pusha
icebp
dec
sbb
jno
xor
aaa
mov
xchg
rolb
cli
cmp
mov
xchg
xchg
mov
pop
dec
and
pop
add
test
fbld
in
add
loope
testb
xchg
lahf
cmpsb
pop
inc
xchg
xchg
xor
push
sub
shlb
pop
lock
dec
adc
cmp
and
cltd
and
loopne
or
jne
mov
and
popa
or
xchg
aas
xorb
jb
dec
xor
add
jp
in
sbb
jp
es
adc
mov
cmp
add
and
inc
mov
dec
jp,pt
add
mov
cmpsb
inc
dec
inc
in
jp
xchg
fcomps
push
ret
into
inc
inc
sub
ss
lods
popf
ret
loop
inc
inc
xor
pop
in
arpl
leave
add
pop
push
mov
push
js
mov
push
testl
mov
out
iret
fisubrs
sub
push
mov
sbb
shlb
pop
sub
cmp
fs
aas
mov
popa
ljmp
pushf
lret
fwait
pop
and
adc
push
sbb
cltd
rcrl
inc
inc
dec
fucomi
inc
into
mov
push
adc
jle
stc
sbb
push
cwtl
and
jbe
loope
push
adc
out
inc
cltd
mov
mov
push
popa
inc
pop
das
pop
xor
jns
xor
or
adc
sub
imul
loope
out
pop
addr16
pusha
iret
and
fimuls
imul
aam
outsb
into
xor
xchg
aam
pop
mov
inc
cltd
adc
test
ret
ljmp
xlat
push
xchg
fldl
sti
cltd
repnz
outsb
pop
popa
add
mov
and
in
sub
aas
std
shll
jo
mov
sub
fstpt
jg
mov
mov
lock
mov
push
pop
jb
imul
arpl
adc
pop
push
addl
pop
in
cmp
scas
stos
pusha
and
subl
js
cmp
lods
fs
pop
or
push
fistps
test
fs
fs
pop
jg
sbb
jg
sti
lcall
or
xor
adc
push
aam
aaa
inc
aam
push
cmp
cld
dec
dec
cmpb
cld
outsl
in
push
dec
jmpw
sbb
movsl
sbb
sbb
test
inc
jmp
sbb
popa
push
lods
inc
adc
bound
mov
mov
mov
mov
mov
mov
mov
rcrl
sti
mov
lods
cmp
shrb
mul
push
call
mov
std
ss
fidivs
push
daa
fcompl
jp
adc
popa
xchg
xchg
clc
xor
sbb
movl
sub
pop
call
decb
leave
out
sub
ljmp
pushl
cmp
cmp
jns
jno
loopne
pop
movsl
fbld
addr16
data16
ss
outsl
jp
es
and
mov
mov
pop
sbb
sbb
push
rcrl
inc
cmp
push
jae
pop
and
insl
es
mov
int
outsl
lods
movsb
add
mov
cmp
push
mov
mov
or
mov
leave
jecxz
xchg
aam
mov
imul
nop
in
dec
mov
ljmp
int
lcall
jge
ja
je
push
cwtl
fnsave
xor
cmp
add
aad
mov
ret
pop
into
mov
and
xor
push
xor
fdivr
dec
loop
pusha
lods
adc
fwait
add
pop
jne
pop
inc
adc
cmp
and
xor
gs
or
pop
pop
sbb
or
sub
rol
loop
pop
movsb
pop
mov
dec
adc
cmp
mov
repnz
fldenv
scas
repnz
xor
sbb
and
addb
and
cmp
testb
enter
into
mov
testl
mov
mov
test
xor
scas
popl
pop
mov
inc
mov
push
mov
fucomip
pop
sub
adc
mov
repz
and
stc
and
aaa
repz
mov
add
cmc
sbb
cmp
sub
mov
mov
and
lea
mov
aas
stos
jl
shlb
stc
loopne
mov
inc
jecxz
xor
and
cmp
insl
inc
push
or
addr16
xchg
fwait
sbb
lcall
dec
int
push
and
pop
imul
out
psrld
inc
pop
cmp
fcoms
xchg
xchg
push
fwait
ss
sbb
mov
mov
imul
dec
mov
sub
add
ret
test
mov
pop
or
push
mov
push
scas
jle
ret
and
loope
jbe
mov
xchg
jo
jae
jecxz
imul
hlt
rorl
jecxz
pop
jae
mov
in
arpl
xchg
pop
and
pop
add
adc
push
jecxz
and
inc
sahf
das
push
mov
pop
mov
inc
xchg
or
daa
pop
push
outsb
out
into
fidivrs
sub
and
sbb
and
pop
jge
add
ret
fst
pop
ljmp
ret
insb
test
adc
dec
movsb
push
sub
ret
inc
jle
jmp
adc
xor
push
jp
cmp
icebp
xchg
and
fisubrs
aas
decl
mov
es
add
out
mov
je
inc
arpl
pop
clc
add
inc
push
mov
cmp
scas
jno
subl
out
scas
les
shlb
dec
testl
mov
mov
sbb
mov
ljmp
dec
lock
scas
mov
jne
hlt
popf
loop
mov
lock
scas
dec
mov
orb
cmc
and
mov
test
je
sbb
dec
mov
dec
inc
ja
mov
dec
xchg
push
popf
sti
mov
inc
jns
push
mov
push
out
mov
sbb
xchg
test
les
scas
push
nopl
addr16
test
and
jmp
mov
ljmp
cmp
bound
loopne
mov
pop
mov
das
clc
es
xchg
mov
ret
mov
arpl
xchg
ss
insb
scas
pushf
scas
ficompl
sarl
cmpsl
mov
sub
xchg
scas
adc
mov
adcl
dec
pushf
xor
mov
das
ds
add
push
and
mov
sub
push
pushf
adc
and
mov
mov
sbb
cmp
ljmp
sbb
mov
repnz
fwait
add
addl
mov
jnp
inc
cmp
call
int3
rcr
or
mov
and
or
test
jecxz
data16
jnp
pop
dec
push
out
cwtl
push
dec
fdivs
insl
shrl
jb
and
adc
xchg
and
imul
rcrb
sub
lods
cmpsb
lea
enter
ds
add
aad
mov
pop
or
shlb
es
sbbl
add
adc
push
mov
cmpsb
cld
jb
stc
cmp
pop
lret
jno
scas
fsubs
mov
idivl
cmp
test
push
fistpl
dec
scas
loopne
xor
rcrb
push
mov
pop
aaa
or
int3
push
lock
mov
xor
inc
cmp
sub
ja
jo
add
adc
xor
enter
stos
adc
dec
xlat
data16
out
cld
push
stos
mov
xchg
pop
into
push
mov
mov
jmp
sbb
mov
jmp
outsl
push
sbb
adc
ja
jg
hlt
or
xchg
das
into
dec
xor
pop
jg
out
dec
cmpsl
js
sti
aaa
icebp
xchg
sub
popf
rcll
pop
in
xor
or
xchg
lds
lret
les
adc
pop
xor
jle
out
pop
stc
sub
ljmp
push
mov
pusha
mov
mov
mov
out
imul
mov
add
call
push
orl
pop
fcomps
inc
jne
aaa
ja
cwtl
push
xor
add
mov
mov
add
scas
cmp
adc
je
mov
shlb
outsl
or
dec
lcall
repz
shrl
repnz
cmp
cmpsl
in
or
mov
testl
xor
or
scas
push
mov
mov
inc
pop
jnp
es
sub
je
sub
testl
aam
pop
inc
xorb
das
in
je
popf
fstpl
stos
data16
aas
in
or
cmp
or
adc
arpl
mov
aam
inc
dec
testl
push
imul
sysexit
cltd
mov
aaa
insb
push
test
sub
pop
lds
xchg
or
out
inc
bound
jnp
push
dec
inc
enter
push
inc
imul
into
and
movsl
cmp
cmp
pop
pop
decb
push
sbb
cmpw
jp
lahf
xor
jmp
repz
jl
cmpsl
out
sub
jecxz
push
cmc
push
push
xchg
int
push
push
push
cmc
pop
mov
push
sbb
mov
cmp
jge
add
xor
sbb
or
dec
cmp
and
xchg
push
pop
sub
loope,pn
xchg
cmp
pushf
mov
jl
jb
xchg
jno
mov
adc
jecxz
lods
mov
sbb
or
scas
daa
dec
xchg
xor
and
imul
mov
mov
insl
xchg
test
pushf
imul
xor
cmp
adc
push
cmp
push
sub
jnp
fxch
jae
frstor
nop
xor
push
inc
pushf
cli
call
push
xchg
es
pop
test
sti
jno
das
xchg
rorb
and
jae
insb
jb
and
scas
lahf
push
pop
shll
repnz
int3
mov
insl
aad
pop
cmp
jp
inc
out
daa
cli
data16
adc
inc
xor
int3
cmp
sub
adc
sbbb
push
inc
pop
cmp
dec
jns
dec
mov
xchg
sub
push
pop
pop
jae
out
das
xchg
jle
popf
add
adc
imul
mov
inc
cmp
jno
jmp
pop
xor
jns
out
movsb
jmp
mov
sbb
mov
inc
xchg
incb
jp
mov
sub
push
dec
jmp
mov
add
jmp
xchg
je
das
hlt
cmp
testb
mov
pop
lahf
fwait
pop
out
in
xor
outsl
das
lods
push
ljmp
cli
fisubrl
mov
lods
dec
mov
mov
repnz
xor
mov
adc
in
jmp
xlat
xor
aam
inc
dec
pop
or
mov
addr16
fiaddl
mov
clc
jne
cld
sahf
leave
cmp
call
mov
push
clc
test
mov
test
fstp
lods
gs
dec
mov
popf
push
pop
pop
clc
shll
pop
das
mov
leave
fldz
add
push
cld
sub
shrb
xchg
enter
pop
add
clc
pop
adc
leave
add
fs
mov
pop
movsl
sub
pop
sahf
movsb
pop
nop
rol
popf
pop
mov
loope
inc
adc
rorb
lds
neg
in
lock
andl
dec
push
popf
mov
push
dec
sub
inc
xchg
daa
pop
jmp
jle
cmc
dec
call
mov
push
inc
bound
mov
sub
mov
cmc
call
insb
sahf
xchg
mov
iret
dec
mov
and
jl
push
xor
loope
push
xchg
push
sbb
or
ss
lcall
xchg
lcall
jp
xor
dec
xchg
mov
or
mov
jns
or
dec
mov
jo
pop
fstl
xchg
aam
dec
int
mov
push
into
inc
dec
mov
jmp
bound
mov
or
xor
inc
fisttpl
imulb
and
out
cmp
sbb
pop
cmp
adcl
fwait
xacquire
sbb
push
stos
jg
inc
sarl
js
jp
inc
jns
lcall
mov
pop
pop
mov
sub
mov
insl
jl
mov
or
pop
push
cltd
arpl
inc
dec
add
sub
lcall
nop
mov
sbbb
push
jle
sub
fildl
and
push
movsb
fldenv
jbe
push
setp
sahf
call
mov
sub
out
out
popa
push
inc
das
aam
push
insl
lods
leave
or
pop
cmpxchg
das
hlt
mov
cld
addb
sahf
cmp
xor
lea
pop
in
pop
xor
out
out
mov
add
cmp
inc
out
jno
out
pop
fwait
test
lds
dec
mov
lcall
test
mov
inc
dec
mov
pop
nop
adc
mov
sbb
cs
dec
out
mov
or
stos
arpl
cmp
int3
jg
add
ret
test
vshufps
lret
jns
mov
jae
push
ljmp
ja
movsl
in
adc
sahf
sub
out
mov
das
negl
pusha
aam
jb
adc
fwait
dec
cltd
in
je
mov
push
insb
push
mov
cwtl
sbb
stos
loopne
sub
push
mov
sub
shlb
in
lods
push
sbb
gs
mov
sub
sbb
adc
push
pop
push
push
or
addr16
ja
xchg
mov
pop
jo
inc
int3
dec
fstps
and
mov
pop
cld
lret
out
add
push
ret
jle
sbb
adc
lahf
xor
jae
repz
adc
ja
push
mov
and
or
mov
inc
sub
mov
mov
jge
sti
xchg
cmp
sbb
call
les
notl
pop
and
mov
mov
call
or
inc
xchg
pop
lods
mov
das
xchg
test
xchg
mov
ret
mov
mov
fdivrs
jno
lods
lds
mov
inc
pop
jae
rolb
cltd
aas
movsl
lock
fwait
jmp
loopne
and
cmpb
insb
cwtl
and
mov
jb
push
jae
out
xchg
jg
stc
xchg
jnp
sub
and
fstl
pusha
xor
push
out
pop
addl
ret
adc
ljmp
js
outsl
mov
mov
xor
dec
orb
shlb
jp
inc
hlt
jbe
jp
or
inc
jbe
pop
out
out
or
mov
aaa
push
and
mov
mov
adc
aas
push
sarl
push
pushf
cmc
cmp
cmp
add
inc
jae
mov
loop
sub
in
xchg
pop
dec
cmpsl
aam
out
and
cwtl
rcrb
mov
push
mov
push
adc
jo
adcl
ds
mov
xor
push
cld
ret
cmpsb
adc
in
movsb
add
out
sbb
aad
lret
sarb
xchg
cmp
mov
mov
ret
xchg
and
pop
jecxz
adc
dec
jecxz
or
loope
mov
xchg
dec
cmp
cmpsb
fs
orl
mov
add
mov
out
sarl
adc
leave
mov
addr16
cltd
push
push
pop
or
decb
and
jmp
jbe
push
cmp
jae
push
pop
mov
test
or
ja
ret
cli
xor
inc
adc
int
div
dec
push
mov
cltd
das
pop
mov
outsb
lret
xchg
scas
je
mov
movsb
adc
inc
or
in
js
and
clc
dec
push
popf
mov
in
stc
xchg
popa
sbb
clc
add
pop
add
jbe
daa
in
xchg
ret
cmp
mov
push
adc
mov
popa
dec
imull
push
push
fwait
ss
movsl
mov
std
jne
xor
jmp
mov
pushf
adc
cmc
subl
jmp
into
sub
cmpsl
dec
call
sbb
int3
adcb
jecxz
and
pop
push
cmc
add
cli
pop
mov
in
test
rcr
mov
pop
inc
adc
lods
cmpsl
push
mov
adc
inc
cmpsb
sub
scas
mov
mov
jge
mov
push
xchg
jecxz
pushf
das
negb
cld
and
jecxz
adc
jmp
js
repz
sub
or
push
jae
repz
std
mov
je
mov
je
ds
pop
cmp
ja
push
push
or
int
lds
out
dec
adc
xchg
dec
fwait
imulb
fucomp
push
pushf
cs
push
jno
std
xor
hlt
jo
fstps
mov
out
rcll
add
mov
xchg
fwait
adc
sub
cmc
xchg
lahf
inc
dec
mov
lahf
insl
fdivl
lods
fldt
push
in
mov
out
mov
es
popa
notl
sbb
int
test
mov
iret
cmp
jg
push
cmc
fstl
ficoml
lret
leave
loop
dec
pop
pop
pop
sub
test
ss
rol
fildl
idivb
and
pop
xchg
jno
ret
jne
xor
jns
xchg
sub
cli
int3
inc
ss
gs
mov
dec
andb
sarl
fildl
mov
mov
push
cltd
aad
xor
inc
lret
mov
clc
arpl
mov
call
inc
cmp
stc
je
mov
and
call
pop
sbb
in
cs
leave
int
xor
mov
lahf
rolb
ret
add
xor
nop
pop
push
inc
xchg
lahf
inc
cmc
xor
nop
js
add
in
sub
sbb
push
sub
pop
cmp
xor
xchg
scas
fdivrl
pop
sbb
push
cmp
mov
pusha
lea
arpl
std
xchg
imul
js
pop
lret
cli
and
jns
in
and
popa
mov
test
ds
pop
jle
test
jne
xor
add
ret
aas
or
xorb
cmc
pop
mov
addr16
lcall
rorl
and
adc
aam
pop
popa
inc
xor
cmp
cmp
cmp
mov
out
icebp
imul
ss
dec
inc
xor
fdivr
outsl
adc
mov
inc
stc
das
xorb
insb
cwtl
cmp
aas
dec
mov
das
idivb
lock
sbb
lods
add
mov
jbe
mov
jnp
scas
roll
jecxz
repz
fnsave
jb
mov
mov
pop
and
push
and
daa
fisubrl
shlb
dec
dec
nop
out
xchg
rolb
fldl
xchg
ja
ja
movsb
mov
xor
ret
roll
stc
sub
lahf
jmp
into
pop
pop
cld
ljmp
into
out
mov
or
cmp
inc
out
out
aad
mov
xchg
or
loopne
mov
inc
sbb
subb
cmpl
popf
jp
add
lods
sub
xlat
inc
mov
insl
sub
pop
test
add
adc
sbb
push
pop
cwtl
notb
push
repz
xor
jne
out
mov
fsubs
mov
nop
or
mov
out
mov
in
ss
dec
xlat
je
push
cmp
adc
dec
dec
in
movsb
xchg
cltd
lret
xchg
cmp
jno
inc
in
mov
int
cmp
and
les
int
and
ja
mov
ret
sti
jo,pt
sub
aas
xchg
jmp
hlt
sahf
ds
xchg
push
je
mov
leave
cmp
pop
sbb
stc
mov
or
pop
lret
push
pop
out
ljmp
dec
sbb
or
hlt
leave
repz
inc
dec
lret
cmp
pop
call
daa
cltd
test
cmpsl
hlt
out
testb
jg
or
cmp
inc
dec
loopne
push
mov
les
adc
add
jbe
cmp
cmp
adc
scas
in
je
rorb
sti
or
stc
jle
jo
xor
adc
lret
movsb
punpckhwd
cmp
int
cmp
stc
js
mov
xchg
imul
sahf
mov
xchg
pop
mov
daa
das
or
cmc
and
xlat
nop
add
scas
or
into
js
cmp
push
sarb
cmp
ljmp
insb
subl
inc
pushf
popl
jg
loope
xor
adc
test
inc
addl
xor
sbb
or
in
mov
std
jge
enter
sbb
jp
add
in
sub
push
ja
repz
arpl
mov
xchg
xchg
push
xchg
mull
xor
pop
pop
lret
imul
aad
push
imul
lret
push
mov
mov
data16
add
dec
push
in
xchg
and
or
ret
mov
pop
pop
fmull
repnz
jno
fnstcw
sub
das
pop
jle
pushf
ja
inc
dec
sub
mov
loop
cmp
out
test
test
mov
pop
mov
cld
aas
pushf
and
cmpsb
cmp
lahf
xchg
jle
jno
xchg
dec
jge
repnz
je
das
and
dec
aaa
inc
lods
fisubrs
mov
push
sub
iret
ret
bound
fcmovu
std
dec
imul
pop
pop
mov
mov
pushf
inc
in
lcall
or
mov
cli
add
push
js
add
lods
push
push
cltd
insb
rcrb
push
xchg
les
fwait
inc
push
icebp
push
scas
dec
xchg
lock
scas
test
mov
cmp
fisubrl
out
mov
fildll
jge
test
movsb
sbb
dec
sub
jle
fdivrs
jno
dec
and
cmc
cmp
cmp
mov
data16
js
push
shll
jp
lods
mov
sbb
loop
pop
ret
frstor
out
cmp
mov
jns
push
sbb
sti
inc
cmp
pop
inc
jl
mov
xlat
imul
xor
cmp
js
shlb
cmp
insl
sbb
pop
popf
fbld
cmpb
pop
cli
imul
std
xor
and
or
test
test
shl
jbe
hlt
fistps
insl
adc
cmp
jmpw
cmp
xchg
xchg
jle
loop
call
and
popa
push
outsl
push
mov
dec
sbb
imul
out
sbbb
leave
sti
loop
sub
das
inc
sbb
dec
mov
sub
inc
sbb
pop
fcom
out
inc
inc
and
mov
jg
sbb
in
dec
out
mov
sbb
xor
imul
mov
and
lods
ja
fwait
rclb
rorl
mov
jno
jecxz
mov
pop
in
mov
mov
daa
adc
lods
movl
fabs
loope
notb
dec
enter
mov
mov
in
in
ljmp
mov
pop
adc
mov
rorb
sbb
mov
mov
arpl
sub
jae
mov
lea
mov
jnp
shrl
push
repnz
aas
fldl
shlb
bound
dec
or
jecxz
jle
cltd
pop
mov
cmpsl
rorl
mov
lock
sub
mov
movsb
aad
or
add
ljmp
js
xchg
ss
repnz
fs
pop
nop
out
pusha
pop
negl
mov
sub
movb
nop
mov
jge
mov
push
stos
lret
sbb
xchg
fnstsw
push
lods
push
jnp
call
cmp
rclb
shlb
xchg
adc
fnstenv
dec
push
mov
push
xor
sbb
jl
pop
push
xor
add
and
and
push
xchg
mov
xor
or
pop
rcl
mov
dec
sub
inc
jno
mov
xor
sahf
xor
inc
call
shl
push
int
inc
cld
jge
ja
enter
and
or
fs
mov
das
xchg
push
xchg
mov
and
sbb
xchg
dec
mov
stc
lods
movsl
jge
xor
lock
dec
add
iret
sub
pop
movsb
add
test
insb
inc
or
pushf
push
lods
push
mov
clc
cld
cmc
xchg
mov
push
or
rcrl
add
ljmp
cli
cmpsl
lods
mov
push
jecxz
jne
les
mov
movsl
into
outsl
or
repz
movsl
and
jg
sub
cld
icebp
inc
orl
xchg
mov
sub
adc
mov
iret
lock
lea
lock
daa
hlt
stos
mov
mov
out
les
or
popa
outsl
cwtl
xchg
mov
std
add
mov
aaa
jo
sub
sbb
in
pop
cltd
sub
jae
xchg
xchg
repnz
fsqrt
test
or
fdivrs
into
lods
push
notb
mov
jae
push
push
add
gs
shlb
aaa
jo
sbb
inc
in
cmp
or
sbb
pushl
and
xchg
cmpsb
stos
movsb
sbb
xchg
hlt
je
sbb
loope
stos
mov
mov
popf
pop
outsb
xchg
stc
push
or
fnstsw
dec
movsb
sbbb
mov
xchg
imul
sahf
xchg
xchg
push
mov
pop
jmp
mov
sub
and
sub
lcall
and
adc
xchg
xor
cs
bound
outsb
ss
fists
mov
jb
fcomps
and
mov
jnp
and
xor
clc
jl
add
fs
xor
fidivrl
inc
enter
lock
repnz
pop
mov
out
loop
ret
jle
inc
shrl
lahf
adc
imul
add
jp
cld
mov
mov
jbe
cmp
sbb
arpl
stc
sahf
loopne
adc
mov
cmp
aad
ja
sub
sbb
pop
es
lods
ret
not
out
jae
sbb
ljmp
test
and
and
mov
or
adc
sub
xchg
sti
das
jne
int3
mov
dec
dec
xchg
mov
shrl
xor
jnp
in
jmp
daa
shrl
mov
mov
mov
push
testl
stos
pop
hlt
out
pop
jo
icebp
jl
or
into
faddl
dec
outsb
dec
pop
dec
pop
movsb
ficoml
adc
or
mov
sub
dec
sti
sahf
and
xor
xor
mov
repnz
cmp
outsb
sbb
out
mov
xchg
or
xchg
mov
out
push
notl
repnz
outsb
mov
xchg
inc
cmp
out
mov
fistpll
adc
nop
xchg
cmc
adc
dec
dec
push
cld
jp
insl
adc
xchg
loop
push
jbe
and
scas
addr16
out
pop
push
rclb
push
cmc
inc
pop
fadd
je
insl
pusha
js
repnz
mov
push
add
gs
sbb
jnp
jl
and
xchg
imul
cmc
dec
jl
cmc
mov
and
gs
fildl
push
cmpsb
testb
add
jo
push
push
bound
mov
fldcw
cld
fiadds
inc
push
enter
push
push
outsl
jecxz
sub
and
sbb
movswl
stc
mov
xchg
adc
je
popfw
insl
mov
cs
cwtl
lea
addr16
cwtl
pop
sub
bound
inc
add
push
cs
lcall
pop
cwtl
xchg
jne
pop
aam
loop
mov
subl
aaa
int
in
and
out
insb
jbe
fs
fisubrs
and
in
aaa
fs
loopne
cmp
fstp
jl
and
push
mov
xchg
push
sbb
push
xchg
inc
jecxz
push
xor
cmp
mov
push
std
and
dec
jo
daa
cmpsl
aam
lods
shll
mov
mov
mov
cli
mov
sarb
push
xor
push
and
xchg
adc
outsb
shrb
pop
inc
xchg
sbb
pushf
push
mov
inc
or
ret
fwait
jns
mov
mov
inc
js
popa
movsb
jp
aam
pop
movsb
fdiv
mov
xchg
decl
adc
mov
add
push
mov
imul
es
gs
filds
ret
jl
es
ljmp
add
loop
jmp
call
add
and
push
push
pop
nop
jp
or
jge
test
or
lds
cwtl
xlat
push
in
test
mov
mov
xor
and
imul
stc
or
fcmovu
mov
cmp
scas
aaa
mov
in
aad
adc
jmp
movsb
mov
fsubrs
jmp
pop
xor
scas
hlt
and
inc
add
and
negl
test
je
sbb
jns
pop
stos
add
jge
jo
ficoms
fcoml
dec
mov
mov
sti
sbb
aam
daa
lods
test
popf
mov
dec
xchg
push
pushf
repnz
insb
mov
inc
lods
inc
add
decl
xlat
xor
fdivr
push
jne
xor
addr16
xchg
stc
jecxz
push
cmp
cmc
push
rcrb
jle,pt
data16
js
adc
out
mov
mov
dec
xchg
insb
adc
fsubr
popa
shlb
jo
movl
jnp
xor
push
add
add
mov
in
aam
or
clc
out
ja
or
scas
dec
inc
sbb
aas
pop
jo
xchg
and
nop
inc
pop
roll
popf
out
push
inc
cmp
js
mov
rol
or
cmp
inc
push
das
push
sub
lods
stc
clc
inc
inc
xchg
inc
jno
dec
and
ss
mov
out
sbb
pop
adc
cmp
jp
mov
into
in
popa
insb
repnz
ss
out
dec
ret
mov
rorl
push
inc
and
sarl
cmp
mov
scas
pushf
inc
sarl
stos
lock
out
adc
lret
pop
xchg
rcl
ljmp
cmpsb
adc
mov
xchg
ja
pop
or
mov
sbb
test
sub
add
adc
mov
loop
ret
mov
and
test
dec
pop
pop
xchg
fdiv
cltd
in
inc
out
rol
mov
xlat
test
mov
pop
ds
jmp
aad
adc
and
jle
push
dec
jp
jnp
pop
push
pop
mov
clc
dec
pop
sahf
or
push
xor
inc
out
mov
nop
mov
push
outsb
in
in
jb
jns
pop
lds
pop
enter
cmp
sub
jge
into
or
mov
sub
out
mov
fmull
sbb
out
push
inc
int
add
repnz
jmp
fisubrl
fcoml
scas
xor
scas
fidivl
and
dec
sub
adc
out
pop
mov
sbb
orl
shrb
xchg
xchg
das
mov
jl
and
insl
gs
mov
or
xchg
test
movsb
mov
jecxz
cmp
fucomi
and
in
push
pushf
cmpsb
sbb
je
je
out
data16
imul
in
sub
rcr
aaa
insl
popf
hlt
stos
popl
pop
fiaddl
lock
push
cs
sbb
out
push
and
sahf
nop
dec
loopne
mov
xor
mov
adc
push
mov
and
pop
loope
xchg
cld
mov
imul
cmp
dec
std
data16
push
push
jno
cmp
pop
pusha
xor
mov
sar
das
fcoms
adc
mov
xchg
inc
lea
xor
roll
jb
dec
xchg
cmp
push
pop
push
push
jnp
xor
pop
push
andl
mov
pop
filds
or
jmp
pop
and
loopne
loop
push
dec
add
bound
pop
stos
lahf
pop
ret
inc
js
stos
iret
aad
add
jle
sarb
sub
mov
push
pop
addb
adc
rorb
lret
cmpsb
inc
mov
mov
jae
or
and
fs
xchg
mov
in
mov
pushf
js
out
popf
jg
test
decl
xchg
jge
cmpsb
out
pop
push
push
inc
sbb
cltd
dec
xchg
js
ja
push
gs
inc
push
push
mov
test
repnz
dec
out
pop
hlt
cmc
in
add
mov
movsl
lods
mov
xchg
pop
ror
jecxz
xor
jg
cs
addr16
xor
xchg
lods
xchg
sbb
jl
mov
xchg
add
mov
adc
jbe
inc
test
xchg
sub
aam
sbb
mov
inc
in
fsubs
lea
xor
ds
add
jle
fmuls
cmp
sub
mov
mov
clc
jo
or
mov
maskmovq
sbb
cmpsb
pop
ljmp
pop
lret
sub
and
push
cmpsb
int
shll
push
jns
push
push
dec
addr16
lock
jns
loop
xor
mov
loopne
fdivrl
adc
cmpsb
cmpl
sbb
dec
mov
inc
add
dec
or
lret
mov
cmp
daa
cli
cmp
add
add
cmp
sub
and
mov
dec
popa
lods
aad
jno
inc
nop
mov
xchg
xlat
movsl
pop
in
mov
ret
xchg
ja
insb
mov
ljmp
imul
add
mov
decb
in
jbe
lret
aam
scas
pop
dec
lret
rcrl
mov
xchg
rcrl
adc
sbb
xor
add
mov
hlt
movsl
and
inc
out
cltd
mov
ret
dec
nop
ds
icebp
sub
cmp
sbb
adc
mov
movl
mov
int
xchg
adc
insl
push
bound
cmp
daa
xor
mov
sbb
dec
push
dec
inc
subb
mov
mov
subl
pusha
pop
test
call
pop
and
add
cmp
xlat
ss
sbb
cli
mov
cmp
add
dec
xor
jecxz
ljmp
divl
icebp
in
cltd
xchg
cmp
outsl
ss
and
lcall
fldenv
inc
jle
inc
xchg
xchg
xor
xor
dec
inc
xadd
test
cmp
dec
mov
shll
neg
les
imul
repnz
popa
ret
inc
loop
adc
in
into
aad
inc
mov
movsb
mov
cmc
xor
sub
or
push
cmp
cmpsb
xor
xchg
mov
lock
aas
inc
out
popa
mov
push
or
inc
in
add
push
cmc
loope
pop
inc
jecxz
outsl
idiv
cmp
xchg
fiaddl
push
arpl
ljmp
pusha
mov
and
adc
lcall
js
in
sarb
test
or
out
shr
mov
jno
mov
jb
scas
outsb
fdivrs
add
xchg
pop
mov
xor
jbe
mov
ret
or
fsubs
notb
adc
lea
or
push
out
repnz
ja
mov
iret
or
lock
adc
push
mov
and
pop
shlb
add
shlb
dec
test
push
aaa
lock
mov
enter
xlat
or
push
add
enter
jmp
push
mov
adc
inc
stc
xchg
add
push
sarb
xchg
dec
sbb
fidivs
mov
cmp
xchg
popa
and
es
popf
fdiv
or
jno
int3
and
insl
mulb
fnstcw
mov
rorl
mov
movsl
xchg
pop
mov
imul
add
xor
mov
or
add
out
shll
out
std
mov
jl
push
xlat
leave
lahf
rcrl
call
das
sbb
xchg
test
adcl
fisttpll
lret
cs
clc
mov
mov
mov
ds
cmc
test
lret
push
into
repnz
fwait
testl
xlat
xlat
add
lcall
jecxz
pop
mov
out
xlat
ljmp
addr16
jmp
daa
dec
imul
jns
mov
leave
cmp
xor
inc
negl
fwait
adc
mov
push
mov
leave
imul
add
fstps
bound
mov
lds
lds
sub
add
test
and
jbe
insl
dec
sbb
cmp
leave
mov
sbb
inc
jecxz
das
sbb
insb
into
pop
mov
das
jp
ja
ret
fistpll
inc
std
jmp
cmp
rclb
call
in
loop
call
mov
shll
xchg
pop
test
test
sti
jb
mov
adc
cltd
push
mov
sub
test
cltd
xor
sub
push
aas
xor
xor
xorl
add
ljmp
mov
adc
pop
xchg
dec
jg
mov
mov
push
add
adc
in
xchg
mov
mul
inc
mov
xchg
fucomp
adc
sub
scas
mov
inc
xchg
mov
orb
iret
movsl
lods
jp
cmpsb
mov
jl
outsb
shlb
fists
inc
lret
push
ds
pushl
jnp
add
loop
add
adc
mov
sbb
adc
sbb
add
jecxz
insl
pop
jp
mov
adc
lahf
jmp
ret
jae
push
test
mov
xchg
idivl
or
xchg
mov
hlt
pop
lahf
jl
daa
insb
push
xor
pushf
jno
lcall
sbb
outsb
sbb
lods
xor
mov
xchg
in
ret
add
pop
repz
mov
jns
aaa
sub
cmp
or
shll
push
jecxz
pop
mov
dec
or
gs
mov
mov
and
outsb
cmp
nop
add
dec
out
sub
mov
fldcw
lods
and
cmp
js
cltd
sahf
and
rcrb
push
push
icebp
jl,pn
loop
std
enter
movsb
incb
dec
popa
insl
xor
xchg
push
pop
push
sbb
loop
push
loop
mov
adc
in
jns
jmp
adc
pop
sub
loop
movsl
das
fidivrl
adc
mov
pop
mov
inc
out
ficoml
jecxz
ss
stc
and
mov
mov
sub
sbb
orl
ret
shrl
sub
and
mov
lret
adc
decb
jne
xchg
mov
clc
mov
stc
xchg
or
imul
adc
call
add
mov
rcrl
sbb
xchg
push
dec
add
lahf
xchg
pop
je
cmp
in
sti
lods
lds
xchg
mov
in
arpl
rcll
sbb
inc
mov
mov
in
push
in
mov
imul
inc
pop
in
shrb
xchg
inc
inc
or
push
cld
mov
in
xor
xlat
cwtl
repz
pop
aad
cli
jg
das
or
sbb
xlat
push
adc
push
xor
sahf
idiv
mov
mov
mov
cmc
mov
in
js
negl
mov
mov
cld
mov
or
xlat
out
jge
cli
int3
mov
inc
loope
imul
or
orl
imul
jae
fcompl
out
outsl
std
jne
out
mov
jg
inc
hlt
xor
or
mov
iret
cmp
lock
das
aas
cli
mov
daa
test
dec
in
lea
hlt
int
mov
stos
mov
or
mov
adc
and
cmp
in
sahf
push
fcompl
add
dec
add
stos
cmp
sub
jg
mov
repz
and
pusha
pop
add
add
push
inc
push
lcall
outsl
dec
jg
dec
xchg
push
pop
leave
jp
mov
leave
and
mov
adc
test
xor
sbb
cmpsb
or
gs
cmp
mov
out
call
leave
ret
sbb
mov
mov
pop
pop
xchg
inc
pop
lods
imul
dec
cmp
icebp
aam
jle
pushf
xor
in
repz
adc
lock
inc
insb
mul
sbbl
mov
js
dec
pop
push
xor
push
jl
int3
push
int3
jb
jae
jnp
loopne
and
pop
sbb
fsubrl
mov
out
shll
movsb
lods
sbb
movb
loope
jno
mov
shlb
aad
hlt
std
in
push
xor
rol
in
cmp
in
insb
sub
leave
ljmp
mov
mov
icebp
mul
dec
cmp
cmp
aad
or
cmpsl
sti
shlb
divb
push
xchg
test
test
push
push
repz
out
cmp
sbb
mov
inc
inc
cmc
add
mov
jg
push
sbb
sahf
pop
jmp
outsb
jb
ror
hlt
mov
out
setb
repnz
pop
lods
into
out
or
add
add
xchg
inc
fimuls
xorb
sbb
cld
sahf
and
adc
je
mov
mov
sbb
andb
jae
and
xchg
push
lds
leave
movsb
dec
jle
mov
cli
stos
or
outsb
xor
in
xchg
mov
test
inc
cwtl
lods
out
pop
fnstenv
sub
mov
mov
mov
dec
rcll
sbb
test
sarl
add
or
int3
ficomps
sbb
lds
push
push
sub
jg
sub
pop
jp
sahf
cmp
sbb
test
cmpsb
inc
movsl
xor
lcall
es
push
ds
inc
add
adcl
pusha
stos
into
add
sbb
adc
mov
pop
test
out
mov
shll
ss
rdtsc
mov
leave
or
testl
out
xor
fstpl
sahf
bswap
mov
leave
push
cs
add
hlt
test
xlat
and
jmp
mov
les
mov
pop
fnstenv
jecxz
mov
sbb
ret
mov
cmp
and
adc
sub
cli
mov
or
mov
imul
outsb
cmp
sarl
sbb
xor
push
ficoml
inc
outsl
dec
ja
push
or
ss
ljmp
add
repz
cmpsl
xlat
sub
int
mov
rcrl
in
fsub
xchg
fists
ja
pop
ds
aam
or
inc
mov
outsl
mov
stos
jbe
or
sbb
cmp
mov
lret
pop
push
pop
jmp
aam
push
xor
inc
arpl
rclb
mov
imul
sbb
mov
xchg
insb
push
or
xchg
and
add
dec
sub
mov
xchg
and
push
mov
adc
shlb
insl
xchg
mov
dec
out
pcmpgtd
popa
fld
out
jge
push
mov
or
xchg
cmp
icebp
frstor
xorb
daa
stc
cmp
ss
or
push
ds
shrl
mov
in
inc
push
xchg
loop
mov
mov
gs
mov
das
loopne
imul
mov
dec
sbb
pop
and
aas
cmp
mov
fadds
arpl
insb
jp
fsubs
pop
pop
je
pop
nop
mov
or
and
jbe
cmpsl
arpl
aaa
pusha
mov
mov
cmp
fmull
cltd
into
rcrb
cmp
xor
clc
mov
decb
or
hlt
mov
sbb
enter
repz
dec
bound
popa
fcompl
mov
pop
mov
out
aas
in
inc
add
mov
pop
pop
cli
push
incl
inc
movsb
sbb
sub
repz
pop
pop
cs
xlat
mov
mov
and
pop
xor
jge
push
cltd
and
jbe
mov
mov
mov
dec
jge
xor
into
stos
push
add
cld
popf
cwtl
loop
inc
push
mov
push
fidivs
rcll
xchg
mov
lret
fdiv
sub
std
cmp
dec
jae
mov
nop
xor
cmp
pop
cmpsb
stos
scas
decb
mov
mov
popa
lock
test
out
sbb
add
popf
movsl
mov
fadds
sarl
fsubrl
in
add
dec
sub
popf
jl
out
mov
or
adc
cs
push
in
mov
js
jb
or
test
xchg
notb
popa
cmpl
imul
daa
lods
inc
addr16
or
cmp
insl
int
xor
lock
adc
push
inc
sub
lret
mov
and
ss
inc
orb
pop
popa
or
imul
dec
push
push
xchg
ret
outsb
fsubrp
sub
pop
cmp
jne
movsb
adc
aam
cs
insl
in
addr16
pop
repz
inc
cld
add
pusha
repnz
addr16
jl
mov
mov
xor
and
popa
inc
clc
and
shlb
es
int3
test
mov
test
and
loopne
mov
mov
inc
inc
and
stos
inc
inc
push
cmp
sbb
aam
sbbl
push
fwait
jnp
jo
movsb
divl
inc
pop
dec
mov
add
arpl
cmp
sti
out
add
out
lret
jnp
cmp
iret
rorl
sbb
test
daa
pop
faddl
out
mov
sbb
hlt
adc
fstp
jecxz
pop
xchg
xchg
add
xchg
pop
rol
sub
mov
xchg
jns
popa
xchg
dec
out
cli
jne
jge
out
scas
outsb
out
pop
movsl
int
xchg
push
test
push
popf
stos
enter
popf
push
imul
mov
lods
imull
push
mov
pop
xchg
xlat
pusha
loop
dec
or
repz
mov
xchg
push
fsubs
test
rcl
scas
iret
mov
push
std
rolb
push
xchg
ret
mov
cmp
jge
popa
in
mov
adc
out
mov
sub
insb
ds
popa
pusha
xchg
gs
cs
sub
incb
mov
lea
mov
push
ficoml
icebp
std
popa
int
stos
fidivrl
add
cltd
xchg
sub
push
das
cmp
xchg
lret
add
xchg
xchg
pop
lret
mov
aad
lea
mov
push
mov
xor
inc
mov
push
cmp
mov
mov
pop
pop
push
jae
ret
es
loope
and
mov
lcall
out
push
test
push
rol
cmp
lea
add
xchg
inc
in
adc
into
arpl
and
hlt
or
ds
xchg
mov
or
cmp
mov
daa
daa
outsl
movsl
sbb
mov
je
pop
js
sub
fisttpll
mov
pop
mull
ss
lcall
add
and
jg
push
test
cmp
out
in
cmp
or
mov
movaps
xchg
test
sub
jecxz
push
xor
xchg
adcb
cli
sub
ljmp
fstpl
dec
xor
dec
dec
mov
adc
outsb
xchg
push
pop
mov
lods
cmp
ds
dec
out
jne
and
adcb
sarl
pop
rcr
or
xchg
test
nop
in
dec
repz
cmp
push
cs
js
xor
cmp
jnp
sbb
cmp
inc
and
adc
jg
xchg
aaa
cltd
stos
loopne
push
ss
out
jmp
test
and
lods
not
sub
out
add
adc
jnp
sbb
xor
in
cmpsl
mov
mov
push
lret
pushf
int
sub
aas
sbb
add
add
test
push
ljmp
ja
add
mov
inc
add
outsl
push
xor
test
lret
xchg
xchg
inc
jle
mov
inc
jno
ljmp
loope
adc
test
repnz
ja
mov
int
jnp
punpcklwd
inc
rcll
int
daa
cmp
mov
mov
enter
add
lcall
or
call
cli
dec
data16
lcall
dec
aaa
shll
mov
add
mov
cmp
stos
pusha
xchg
jge
xor
sbb
mov
jae
out
mov
shll
mov
pop
fwait
pop
xor
call
jo
push
imulb
sbb
mov
push
push
sub
xor
xor
sub
lods
jmp
scas
push
in
mov
mov
dec
les
int
jne
inc
xor
out
movsb
xor
sbb
imul
fildll
fimuls
mov
rclb
or
xchg
cmp
aas
aad
xor
mov
in
mov
mov
rclb
cld
cmpsl
orl
push
sub
dec
xchg
inc
or
xchg
mov
add
int3
daa
mov
push
pop
sbb
mov
addr16
sub
inc
jns
push
mov
mov
xor
popa
inc
mov
addb
sbb
das
push
cld
ret
mov
imul
into
push
std
dec
repz
loopne
loop
shl
mov
pop
loopne
hlt
jge
push
insl
xchg
sbb
fiaddl
jne
sub
fcompl
jne
iret
jb
cld
subb
adc
pop
push
scas
push
mov
lret
xchg
imul
in
out
je
cli
mov
xchg
shlb
addr16
mov
push
nop
xor
lods
mov
inc
and
or
test
pop
fwait
mov
adc
daa
dec
rclb
repz
cmp
inc
or
jle
insb
icebp
repz
pop
adc
rclb
mov
bound
pop
popf
into
addr16
cld
push
lahf
fsubrp
nop
mov
push
mov
and
sbb
mov
inc
lea
nop
push
loopne
cmp
pusha
xchg
imul
fsubrp
mov
pop
imul
jmp
adc
pop
das
ja
mov
mov
mov
ja
popa
sub
mov
and
scas
cld
push
into
cmp
dec
mov
jp
shll
pop
xor
push
sbb
xor
add
push
clc
lret
lds
mov
push
testb
push
icebp
lods
xchg
mov
xchg
je
cltd
gs
movl
mov
add
pop
xchg
cmp
insb
lea
push
data16
pop
iret
and
lock
repnz
sub
ljmp
imul
mov
in
pop
movsl
pop
sub
call
stos
std
fmuls
daa
lock
jne
imulb
fsubrp
rolb
pushl
dec
mov
dec
xor
hlt
fs
sbb
fs
jae
jae
xchg
mov
in
negl
sbb
sti
out
push
inc
xor
sbb
test
lahf
xchg
stc
inc
mov
jmp
and
fadd
js
mov
add
xchg
inc
jbe
xor
jecxz
scas
enter
inc
inc
test
mov
iret
roll
adc
pusha
sbb
jge
int3
ret
ljmp
addr16
addr16
int3
gs
aam
in
popf
lock
notl
adc
testb
mov
inc
dec
in
mov
add
lret
sahf
pushf
dec
rolb
jb
xchg
es
insb
ret
mull
push
in
sbb
sub
lods
xor
xchg
sbb
roll
sub
cmp
push
loop
movsb
mov
pop
dec
in
lods
mov
jl
lahf
push
jo
and
cmpsl
xor
inc
jg
mov
addr16
sub
inc
cmp
mov
jge
cmpsl
stc
rorb
insl
mov
dec
aad
xchg
xor
pop
adc
test
sbb
xor
sbb
jae
mov
arpl
lods
repz
imul
call
outsl
mov
inc
dec
iret
ljmp
imul
xchg
stos
mov
mov
cli
stos
lods
es
mov
sub
adc
pop
rcrb
sub
loope,pt
adc
cmpsb
mov
xchg
dec
jo
mov
xor
and
sti
outsb
push
push
int3
cmp
jnp
loop
pop
cmp
pop
push
sbb
mov
xor
outsb
dec
xchg
in
stos
or
pop
pop
pushf
or
les
xlat
pop
inc
icebp
sub
pop
fists
cmp
mov
mov
xchg
emms
add
push
lea
imul
sbb
xor
pushf
push
pop
pushf
jbe
add
arpl
out
sarl
clc
and
aas
mov
ss
mov
cli
leavew
sarb
aas
fcompl
outsb
push
out
or
mov
jb
push
imul
test
hlt
adc
and
into
jo
cmpsl
out
sub
add
pop
add
add
add
add
add
add
push
or
or
adc
add
or
repnz
push
add
add
add
add
add
add
add
repnz
pop
add
add
add
add
add
add
add
repnz
or
add
push
add
add
add
add
add
repnz
add
add
push
add
add
add
repnz
hlt
add
add
add
add
hlt
repnz
out
add
add
add
add
cld
repnz
ljmp
add
add
add
add
add
out
add
add
add
add
or
add
fiaddl
add
sbb
adc
add
jns
add
adc
add
loope
add
add
dec
outsl
popa
fs
imul
inc
gs
jb
arpl
fs
jae
push
imul
jb
je
arpl
jb
jne
insb
inc
insb
insb
outsl
arpl
jb
jne
insb
inc
jb
gs
js
je
jb
arpl
jae
gs
insb
outsl
jae
dec
gs
popa
jo
jb
popa
je
inc
popa
jo
jne
gs
imul
popa
je
insb
je
inc
dec
jo
outsb
push
jns
inc
jb
gs
je
imul
insb
inc
js
arpl
gs
push
popa
je
inc
imul
jae
inc
gs
inc
dec
outsb
je
jb
gs
gs
outsl
outsb
outsb
arpl
push
je
je
jae
outsb
add
xor
add
add
add
add
loopne
add
add
add
add
add
add
lcall
add
add
add
add
push
or
and
add
push
or
inc
push
or
dec
push
or
add
add
pop
push
or
add
add
push
or
add
add
test
add
add
add
add
add
add
add
add
add
add
add
push
or
add
add
rclb
add
add
add
push
or
or
add
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
add
add
add
add
add
add
add
add
add
add
and
add
push
dec
inc
dec
xor
cs
dec
dec
add
push
inc
push
dec
xor
cs
dec
dec
add
dec
inc
inc
push
xor
cs
dec
dec
add
dec
xor
cs
dec
dec
add
push
inc
push
xor
cs
dec
dec
add
inc
inc
push
push
xor
cs
dec
dec
add
inc
dec
dec
xor
cs
dec
dec
add
dec
push
inc
push
dec
cs
dec
dec
add
inc
push
xor
cs
dec
dec
add
dec
dec
dec
inc
push
cs
dec
dec
add
dec
inc
dec
xor
cs
dec
dec
add
add
fs
imul
add
add
je
jb
arpl
fs
jae
add
add
jb
jne
insb
push
jb
je
arpl
add
jb
jne
insb
inc
insb
insb
outsl
arpl
add
push
imul
jb
add
add
imul
jae
add
push
gs
insb
outsl
jae
dec
gs
add
arpl
inc
jb
popa
je
inc
popa
jo
jne
gs
imul
add
push
popa
je
insb
je
add
dec
inc
dec
jo
outsb
add
add
jae
jb
gs
je
imul
push
js
arpl
gs
add
add
je
inc
imul
jae
add
add
je
inc
add
add
je
jb
gs
gs
outsl
outsb
outsb
arpl
push
je
je
add
add
outsb
add
add
lret
js
mov
cmc
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
add
add
ss
add
mov
cmpl
jne
add
mov
jmp
mov
add
add
cmpl
je
add
mov
add
push
push
push
push
pushl
pushl
mov
mov
mov
add
call
pop
pop
pop
pop
cmp
je
add
jmp
push
push
pushl
call
lea
mov
lea
mov
mov
cmp
je
mov
inc
sub
cmp
ja
mov
cmpb
je
mov
cmp
jne
mov
shr
rol
xchg
jmp
mov
xchg
rol
xchg
sub
add
mov
add
sub
mov
loop
call
lea
mov
cmp
je
mov
sub
je
mov
lea
mov
lea
mov
cmp
je
mov
add
mov
jmp
mov
add
mov
xor
mov
inc
or
je
cmp
ja
add
add
jmp
and
shl
mov
add
or
jne
mov
add
jmp
xor
xchg
mov
cmp
je
lods
or
je
add
add
jmp
xor
shr
lods
or
je
add
add
jmp
lea
mov
lea
mov
cmp
jne
add
push
push
push
push
push
push
call
pop
pop
cmp
jne
add
mov
rep
sub
sub
push
pushl
push
push
call
push
pop
sub
xor
mov
cmp
je
inc
lea
mov
push
push
push
push
push
pushl
pushl
mov
add
push
call
pop
pop
pop
pop
add
loop
mov
cmp
je
popa
popf
mov
ret
popa
popf
jmp
mov
or
je
mov
add
cmpl
jne
cmpl
jne
cmpl
jne
jmp
mov
add
push
push
push
lea
add
add
push
call
pop
pop
pop
cmp
je
mov
add
add
xor
mov
cmp
jne
inc
jmp
mov
add
push
push
push
cmpb
jne
inc
mov
and
mov
movb
push
push
pushl
call
pop
pop
pop
pop
cmp
je
mov
mov
pushl
popl
add
inc
jmp
clc
ret
jmp
push
mov
mov
mov
cld
mov
movsb
call
jae
xor
call
jae
xor
call
jae
mov
call
adc
jae
jne
stos
jmp
call
dec
loop
mov
call
jmp
lods
shr
je
adc
mov
jmp
xchg
dec
shl
lods
mov
call
cmp
jae
cmp
jae
cmp
ja
inc
inc
push
mov
sub
rep
pop
jmp
add
jne
mov
inc
adc
ret
xor
inc
call
adc
call
jb
ret
pop
ret
push
call
ret
mov
adc
push
add
or
inc
cmp
add
or
ret
mov
add
adc
mov
cmpl
adc
or
push
and
rolb
add
call
enter
add
shl
or
dec
mov
jne
pop
sbb
add
mov
xor
fildl
or
sub
in
ljmp
jb
sub
or
add
adc
out
xor
inc
out
clc
dec
jne
pop
mov
bound
jp
mov
ret
pop
addr16
cs
ret
push
movzwl
mov
or
movl
jae
mov
mov
sbb
sarb
cli
sar
add
cmp
sbb
lahf
adc
loope
jno
data16
jb
jmp
inc
sub
sahf
clc
fistl
scas
mov
or
int3
shr
sahf
ret
inc
test
ds
add
in
push
push
jbe
jge
sub
jle
mov
xorb
int3
or
xor
aas
std
add
int3
dec
cld
sbb
pop
ret
add
shl
pop
pop
or
sub
cmp
jbe
mov
xchg
inc
cmp
mov
notl
jle
push
lret
inc
pop
or
call
mov
push
or
inc
cmp
jl
adc
leave
popa
fcomi
xor
inc
xchg
outsb
enter
test
or
jo
xchg
mov
push
pop
mov
sar
sub
les
jne
mov
shr
sbb
loopne
add
jbe
aaa
call
or
cmp
sti
inc
inc
shr
sbb
sbb
jbe
pop
mov
xor
adc
mov
test
push
sbbb
icebp
call
es
sub
push
lea
pop
call
cmp
icebp
xor
push
jne
lret
and
mov
lahf
and
add
push
clc
mov
inc
adc
sub
jl
cmp
or
orb
enter
mov
sbb
leave
cltd
dec
hlt
nop
push
call
movsb
data16
orl
push
in
inc
lock
shl
add
xor
dec
dec
into
cmp
cmp
push
adc
fdivl
push
sbb
mov
xorl
fcompl
rep
adc
retw
jne
inc
add
cli
cld
inc
mov
add
xchg
pop
mov
and
mov
adc
hlt
test
fwait
ret
push
les
mov
jbe
sbb
test
movsl
mov
sub
inc
add
movsl
inc
pushf
mov
add
and
leave
push
adc
jge
push
gs
push
jmp
and
or
cmp
or
movsl
sbb
into
pusha
or
divb
pusha
clc
lcall
push
sbb
push
insb
out
add
mov
fsub
mov
iret
push
sbb
push
repnz
scas
adc
add
test
cmp
sbb
sub
sahf
das
mov
inc
dec
inc
xchg
add
rorl
call
pop
cmp
je
sub
incl
setge
sub
clc
lea
xchg
hlt
shll
add
decl
mov
jmp
mov
inc
xor
xchg
jmp
sub
mov
lock
jne
leave
adc
push
mov
cmp
insl
sbb
fldl
test
fwait
push
aad
cltd
jle
mov
or
jmp
lock
in
rorl
sub
mov
xor
or
call
add
mov
add
sub
jp
dec
push
andl
sub
leave
loop
and
sti
dec
repnz
popa
mov
sub
pop
jge
dec
push
in
sub
pop
dec
pop
add
pop
jo
jmp
add
ret
psubq
ds
add
and
inc
adc
imul
nop
leave
dec
xor
dec
cmpb
cmp
sbb
rcl
inc
test
mov
addb
inc
adc
rolb
jle
cmp
icebp
icebp
iret
rorb
nop
stos
mov
shrb
int3
pop
outsb
sbb
movsb
jne
cmpl
lock
adc
jb
mov
orb
shl
dec
add
les
xchg
sbb
push
cs
sub
jb
xor
mov
mov
negb
rcll
rcrl
dec
jne
cmp
jne
dec
sbb
cmp
add
sub
add
popa
jecxz
iret
push
pushf
dec
sbb
jecxz
lcall
inc
mov
sub
mov
cmp
dec
mul
sbb
inc
outsb
addb
xchg
rolb
add
les
xor
fdivl
adc
jne
adc
add
pop
add
and
mov
add
add
add
std
jmp
dec
adc
mov
xchg
stc
out
in
adc
lds
cmp
dec
mov
leave
mov
fnstcw
jecxz
and
push
loopne
sbb
jne
loop
clc
mov
jg
push
fidivs
loop
pop
push
mov
fdiv
inc
or
pop
or
ret
jbe
mov
push
lods
mov
loope
sbb
adc
mov
fwait
and
cmp
sbb
lahf
fdivrs
sbb
jo
xor
xor
in
add
mov
repz
xchg
xor
movsl
pop
pop
and
cmp
push
sbb
iret
cmp
mov
and
sub
test
fisttps
mov
clc
mov
mov
outsl
lods
ljmp
add
xor
mov
cli
inc
inc
aaa
lret
dec
jb
stos
dec
mov
lea
shll
ljmp
out
stc
les
cmpsb
movsb
xor
pop
popf
jmp
nop
inc
and
cmp
negb
aad
aad
mov
mov
cltd
insl
sbb
xchg
pop
add
mov
aas
mov
std
jb
es
out
mov
jecxz
inc
pop
mov
sub
or
lcall
lds
jge
call
mov
insl
faddl
sub
loop
adc
popf
mov
sbb
mov
repnz
je
adc
jbe
and
push
jp
ret
jnp
repz
pop
and
cmp
inc
pop
jmp
clc
add
jge
outsl
insb
dec
mov
scas
movsb
out
sahf
push
je
iret
mov
xor
rclb
fwait
lea
in
pop
outsw
jae
ss
mov
add
push
lcall
mov
clc
icebp
lcall
sub
sahf
dec
mov
nop
push
sbb
or
enter
mov
sti
xchg
orb
repz
xchg
pop
jne
mov
and
pop
iret
jge
lret
in
scas
test
in
scas
sub
push
xor
mov
cmpsb
jnp
push
pop
cmp
sbb
inc
xor
mov
mov
mov
push
mov
fs
test
jecxz
sub
mov
stos
jl
imul
jmp
scas
int3
cmp
jne
xor
out
loope
test
out
cmp
pusha
ficoms
enter
sub
loop
mov
push
push
jl
div
push
push
pop
int
into
mov
sahf
cmpb
push
add
filds
or
jecxz
jle
and
sub
fistpl
test
test
or
mov
mov
ja
jne
cmpsb
fyl2x
lock
js
or
dec
nop
inc
aas
ret
or
out
es
aam
lods
mov
adc
or
cmp
jbe
push
xchg
repz
push
mov
adc
mov
mov
jne
and
inc
ss
and
sub
dec
pushf
pop
loope
orb
repz
jo
jp
fwait
repz
mov
pop
jbe
sub
and
out
jns
sub
and
mov
add
dec
outsb
loope
cli
mov
sub
and
jb
orl
cmp
jne
dec
into
loope
adc
arpl
dec
push
mov
int3
in
insl
nop
test
inc
add
movsl
clc
xchg
push
mov
pop
sbb
xchg
push
jg
lea
adc
imul
push
jbe
adc
sbb
sub
jle
lods
sub
std
gs
push
lock
ss
cltd
push
jne
fwait
push
fsubs
sbb
and
adc
push
push
jne
call
cmc
je
bound
xor
sti
inc
xchg
xor
cltd
mov
adc
mov
std
mov
lahf
daa
inc
push
xor
stos
sarb
test
push
daa
pop
lods
call
cmp
xchg
and
fbld
sbb
ss
outsl
rcll
mov
in
popa
sarl
and
dec
mov
mov
jns
pop
shrb
push
mov
out
lahf
in
dec
ljmp
add
jo
inc
mov
and
pop
or
xor
cwtl
imul
mov
xchg
jne
or
aaa
fidivl
adc
push
and
imul
mov
xchg
xchg
nop
adc
cmpsb
cmc
cmpsl
adc
pop
adc
cltd
inc
mov
or
cli
jl
cmp
xchg
outsb
sub
enter
cmp
aaa
mov
out
lret
xor
sbb
sbb
lret
mov
mov
push
fs
ljmp
dec
mov
mov
mov
sbb
and
enter
xchg
daa
shll
dec
lock
ja
and
cmpsl
roll
jp
movsb
pop
cwtl
fildl
inc
stos
or
insb
cwtl
call
mov
inc
jae
mov
stos
jge
sub
mov
imul
mov
sub
insb
cli
mov
mov
xchg
rorb
or
push
insl
push
xor
inc
repnz
lret
xchg
adc
add
loope
lret
lahf
divb
ljmp
add
ret
xor
int
cmp
rcr
ror
jp
movlhps
mov
adc
cmc
or
cs
mov
mov
cs
lea
mov
cltd
mov
mov
inc
add
mov
cmp
fstp
movsl
jl
mov
orl
adc
popa
test
pop
cmpsl
add
sub
mov
wbinvd
shlb
mov
sub
pusha
push
mov
scas
mov
pop
pushl
js
add
xor
loope
inc
negb
mov
sbb
push
push
stos
daa
lods
fs
jl
push
mov
test
inc
mov
adc
rcrb
roll
int3
and
sahf
daa
jae
mov
cltd
sahf
xor
out
rorb
or
mov
dec
dec
ds
add
cmp
mov
add
js
jl
adc
sub
xorl
pop
mov
mov
xchg
mov
shr
jle
aam
push
sti
xor
loopne
std
dec
pop
adc
mov
out
pop
fwait
sbb
in
mov
int
fcompl
sbb
mov
sbb
shlb
jecxz
popf
jmp
inc
movsl
in
imul
leave
bound
adc
adc
or
outsb
cmp
sbbl
pop
push
in
roll
inc
les
push
ficompl
test
loop
gs
shlb
pop
fsubl
push
repz
cmpl
pop
mov
ja
mov
loopne
mov
pop
mov
push
sbb
out
cmp
fistl
mov
int3
mov
in
stc
add
sub
rorb
das
stos
rolb
push
mov
das
mov
push
in
jnp
adc
and
jmp
shlb
sbb
sti
adc
adc
and
mov
arpl
out
pop
icebp
int3
jg
inc
jle
sahf
pop
add
xchg
sbb
xlat
test
sub
xor
jnp
xor
popf
and
cmp
and
lahf
ffree
scas
sub
xchg
mov
mov
imulb
inc
dec
pop
mov
loop
ficoml
push
clc
push
sarl
insb
push
leave
xor
fwait
andb
sbb
dec
mov
mov
jns
pop
popf
aas
pop
test
pop
aam
mov
inc
xchg
push
fwait
push
imull
adc
scas
addr16
mov
add
scas
mov
repnz
jle
in
xor
inc
cmpsb
or
test
in
out
roll
lret
outsl
fs
sub
mov
ds
add
mov
mov
mov
ds
clc
xchg
inc
xlat
mov
jecxz
or
popf
push
xchg
jnp
std
scas
dec
sbb
xchg
daa
xchg
int
push
mov
sub
insb
jns
jl
pop
dec
sub
gs
jbe
ficomps
xchg
and
pop
xchg
cmp
pop
xchg
add
rolb
out
cmp
andl
lret
mov
sbb
insb
subb
stc
lcall
cltd
lret
push
xlat
fdivrl
jecxz
jmp
mov
std
popf
push
in
clc
repz
inc
fcomp
mov
sub
pusha
into
adc
enter
xchg
jmp
sti
mov
or
stos
loop
push
rorb
and
repnz
add
aam
out
shrb
into
sti
jp
stos
mov
xchg
out
lock
mov
add
dec
sti
jo
pusha
inc
arpl
sar
aam
add
adc
mov
dec
es
pop
fimuls
cmp
add
mov
jne
mov
sbb
xlat
cmpsl
adc
mov
aaa
xchg
jl
ret
add
rcll
lods
cmpb
mov
testl
fadds
push
dec
and
lcall
scas
orl
dec
push
rcr
mov
sub
jge
lods
loop
push
fldcw
dec
and
push
rclb
adc
xlat
xor
daa
js
mov
mov
popf
les
xorb
daa
lods
dec
scas
ja
cmp
sub
pavgb
cwtl
bnd
jo
xor
mov
sub
das
shlb
jge
mov
cmp
call
int
lods
jmp
pop
jp
sahf
outsl
test
aaa
inc
test
aas
out
stos
mov
jle
std
mov
sub
xorl
jnp
inc
outsl
add
sbbl
dec
addb
sub
sub
dec
das
lcall
cmpsl
pop
in
jl
or
or
fs
pop
inc
xor
rcrb
fucomi
in
insl
push
js
cmp
xor
enter
pop
mov
jae
mov
aaa
cmc
mov
lea
push
sub
jo
fldenv
mov
sbb
and
mov
popl
ret
inc
nop
jmp
jb
std
shl
out
jnp
mov
sub
fwait
dec
cs
daa
xchg
out
jmp
sub
xchg
int
cmpsl
push
dec
aas
dec
out
bound
and
movsb
mov
sarb
jl
push
cmp
cwtl
arpl
repz
repnz
into
into
add
orb
lods
cmp
daa
nop
ds
mov
mov
int
cwtl
sub
sub
lods
push
adc
fdivs
sbb
xchg
push
or
arpl
adc
icebp
dec
ljmp
in
shr
cli
hlt
lods
xchg
add
fildll
ret
lcall
popf
stos
popw
nop
xchg
jge
lahf
fwait
jp
and
pop
popa
ss
out
xor
aad
xor
sub
dec
pop
xlat
decb
jmp
aad
mov
mov
jecxz
sub
popf
mov
in
mov
jae
test
xchg
addr16
mov
or
inc
or
mov
jge
pusha
xor
fwait
cmp
lret
cmp
imul
push
sbbl
cmp
arpl
fs
fstpt
lock
xor
fistl
jo
inc
jne
sbb
std
scas
fsubs
dec
adc
arpl
dec
dec
cltd
cmpb
jecxz
lret
cmp
jnp
stc
push
scas
jmp
leave
in
adc
cwtl
mov
mov
cmpsl
cltd
sub
push
inc
xorl
enter
cmpsb
ljmp
sete
or
aam
or
or
jl
mov
shrl
in
lock
out
inc
pop
aad
jle
gs
cmp
xor
xor
xor
xor
inc
cmp
add
pushf
add
fadd
test
push
std
sbbb
mul
cmp
cli
movsb
fiadds
iret
shll
outsl
incl
add
jl
lcall
icebp
js
sbb
popa
dec
mov
insl
mov
pop
cmp
cmp
add
les
std
or
jno
scas
and
cmp
add
pushf
push
or
pop
out
adc
xchg
je
inc
push
push
jl
inc
test
mov
cmp
push
fisttpl
add
dec
sbb
pop
fcmovu
popf
sti
outsl
cwtl
sub
iret
in
test
stos
cmp
ljmp
iret
fidivs
push
mov
sbb
xchg
pop
add
push
add
dec
adc
mov
popf
cmp
mov
sub
jbe
popa
sub
test
test
lret
ror
insb
xchg
inc
ficompl
mov
mov
mov
orl
jo
push
out
mov
fwait
adc
hlt
xchg
stos
aas
cmp
aaa
inc
cmp
sbb
sub
xchg
push
add
jle
mov
mov
xor
mov
push
out
lods
dec
incb
sarl
std
sarb
ficoms
xchg
loopne
sahf
cmp
incl
xchg
out
imul
lea
or
adc
inc
pop
mov
mov
bound
jl
lret
in
sti
outsl
xor
fsubs
pop
dec
outsb
fs
lea
out
push
push
cmpsl
sbb
adc
mov
xor
ljmp
push
stos
dec
mov
das
xchg
dec
push
popa
cmp
and
stos
ret
mov
jle
prefetchw
or
mov
sub
push
rorb
repz
adc
cmp
sahf
push
push
popa
ja
add
roll
out
sbb
dec
push
adc
adc
subl
out
mov
jo
lods
mov
sbb
sub
cmp
or
test
int
xchg
xchg
inc
jp
lcall
mov
and
sbb
adcl
and
and
std
or
cmp
sbb
xlat
or
hlt
jno
fsts
xor
xlat
inc
dec
and
add
pushw
jbe,pn
ficompl
clc
pop
or
cmpb
lods
xor
in
sub
xor
ja
arpl
cmp
insb
in
testb
lret
movaps
pop
jne
imul
outsl
sub
add
push
jae
adc
add
movsb
add
aad
add
cs
imul
xor
cmp
push
aaa
dec
jnp
cmp
outsl
out
sbb
addr16
add
aaa
in
jge
xlat
or
pcmpeqb
add
stos
das
int3
xor
loop
xor
push
aaa
in
das
into
mov
inc
and
loope
jmp
mov
in
sti
mov
dec
cld
pop
jmp
enter
push
xchg
or
in
push
xchg
mov
loope
sub
mov
inc
repz
sbb
or
call
jmp
cmp
mul
ret
cmpsb
push
mov
loope
mov
cld
add
aas
sub
push
or
sbb
jae
inc
ljmp
lret
pop
rcr
stc
ret
sub
fidivrs
enter
out
or
sbb
push
fst
out
jp
sti
dec
adc
pop
jp
sub
loopne,pn
xchg
inc
jns
cmp
xchg
push
test
or
sarb
xlat
fisttpl
mov
ret
cmp
cmp
cld
push
inc
xor
mov
cwtl
mov
sahf
out
mov
pop
mov
pop
mov
dec
subl
je
sub
fs
repz
cli
mov
movb
pop
pop
cwtl
lcall
cwtl
cmpsl
imul
fsubp
mov
dec
cmc
enter
mov
push
or
adc
pop
mov
mov
gs
jge
iret
mov
pushf
fdivrs
jmp
sbb
data16
push
and
jb
mov
inc
nop
xor
dec
mov
xor
cmp
pop
dec
ljmp
sbb
in
loopne
test
int3
out
or
imul
pop
xor
pop
sti
sahf
adc
and
cwtl
or
fs
dec
orl
sub
arpl
adc
inc
loopne
dec
push
sbb
pop
sub
xor
xchg
pop
stc
repnz
frstor
jo
les
sub
lret
insl
test
or
push
out
and
xchg
outsl
jno
cmpsb
mov
in
mov
inc
repnz
fldcw
loopne
push
sub
ss
lcall
mov
lret
xadd
sub
test
jp
call
gs
aam
daa
int
into
hlt
adc
adc
or
or
pop
xchg
lea
fsubr
dec
dec
cmc
add
lret
mov
sbb
loopne
fiaddl
cmp
clc
fbld
add
xchg
adcb
xchg
clc
or
xor
and
mov
xor
insb
rorl
lea
testl
adc
mov
je
cmp
repnz
dec
orl
cmp
cmp
hlt
mov
mov
and
mov
cmp
xor
jl
jecxz
dec
loop
inc
out
xchg
pusha
fmull
lods
sbb
in
mov
popf
adc
leave
jmp
rcll
leave
loope
test
inc
popl
insl
dec
dec
xlat
popf
ret
pushf
mov
and
jo
cli
int
lret
jnp
movsl
or
andps
shll
push
cmpsl
push
mov
insb
and
ljmp
jno
or
push
and
outsb
and
out
inc
add
pop
dec
test
xchg
jb
add
nop
jnp,pn
lock
pusha
popl
or
in
xlat
adc
mov
xchg
sub
add
mov
xchg
adc
and
iret
xor
or
in
dec
sub
pop
call
orb
pop
movsb
lea
fdivrs
jb
shl
loope
xor
cwtl
jmp
adc
mov
cld
cmc
aad
xchg
dec
jb
sbb
nop
dec
in
add
adc
cwtl
cwtl
sbb
and
jbe
pop
dec
test
stc
push
clc
jae
sbb
mov
sbb
or
adc
mov
push
add
dec
clc
movaps
aas
jmp
mov
sahf
jo
scas
inc
shlb
out
jle
out
stc
sbb
inc
dec
inc
dec
add
cli
mov
sbbl
lret
pop
stc
push
ja
xlat
dec
insb
jbe
div
sti
imull
mov
sub
add
push
xchg
mov
dec
jp
xlat
dec
mov
sbb
int3
lahf
sti
out
cmpl
lock
cmpsl
das
cli
adc
mov
popa
sub
sbb
mov
sbb
pop
out
push
mov
mov
sub
imul
insb
sbb
or
sbb
cltd
test
es
jno
subb
xchg
leave
push
adc
aas
xchg
xchg
fdivrl
mov
gs
in
mov
rcl
mov
fstps
fmuls
rcl
hlt
push
mov
aam
lods
adc
cli
rcrb
and
cs
or
push
int3
add
jae
xlat
and
xor
divl
adc
mov
push
jle
add
sub
jo
clc
dec
mov
mov
jl
cld
movzbl
mov
fs
in
aam
push
test
push
fcoml
jg
test
push
add
imul
mov
in
gs
clc
inc
add
xor
mov
sbb
mov
mov
jmp
push
add
mov
arpl
fs
js
jb
inc
aas
jp
cwtl
push
cwtl
daa
outsl
cmpsb
mov
push
inc
inc
rcrl
out
cmp
lds
adc
cmp
xchg
jo,pt
int3
adc
popf
jne
inc
xchg
mov
leave
fcomps
cmp
cmp
xchg
push
ret
push
loopne
jb
adc
sub
rdpmc
lea
jg
mov
into
mov
mov
movb
int
shrl
pop
jns
std
add
fucomi
jnp
out
popf
pop
dec
push
pop
pop
lret
push
mov
xlat
cmpsl
sbb
mov
andl
loopne
xor
stc
sub
sub
mov
iret
inc
into
mov
and
add
pop
xor
mov
out
cltd
aad
sbb
jl
bound
test
sbb
pop
push
mov
pusha
and
imulb
lret
mov
xchg
sbb
mov
mov
mov
dec
fmuls
enter
outsl
mov
dec
ja
jne
sbb
xchg
mov
aaa
jne
adc
push
cmp
scas
mov
dec
insl
hlt
adcb
in
enter
inc
stos
mov
int3
pop
adc
test
jne
xchg
xorb
sub
idiv
xlat
jmp
and
mov
jbe
mov
shl
mov
or
dec
stos
mov
jecxz
or
mov
mov
test
pop
imul
xor
sub
sbb
in
and
pop
jae
xchg
fsubrl
mov
addr16
xchg
popa
pop
and
push
jne
call
fisubs
add
push
xchg
test
dec
inc
mov
add
das
movsb
cmp
test
std
repz
dec
mov
cli
fistps
push
mov
call
imul
inc
or
ret
lea
outsl
add
int3
push
mov
cld
sub
or
inc
cli
xchg
movsb
test
repz
inc
inc
cmp
fadd
addr16
sub
shlb
sub
insb
lods
jle
movl
jae
adc
test
push
fucomp
jle
ficoms
pop
es
mov
ficomps
ret
mov
inc
sbb
test
repz
lretw
lret
cli
inc
sbb
sub
popl
ja
andb
cld
scas
jmp
jb
iret
iret
movsl
pop
inc
push
sub
and
and
xorb
popf
mov
and
std
stc
lcall
jbe
adc
jp
inc
add
xor
mov
repz
lods
dec
in
inc
cwtl
ds
ret
aaa
clc
add
mov
mov
xlat
ret
jnp
xchg
clc
or
cmp
cmpsb
xchg
stos
inc
mov
cmp
mov
pop
xchg
mov
and
lcall
push
call
and
push
cs
xlat
and
xor
cmp
push
sub
sbb
and
mov
pop
add
jmp
mov
loope
mov
push
mov
fiaddl
or
fists
clc
pop
imul
fidivrs
mov
mov
or
outsb
mov
inc
mov
das
daa
push
leave
pop
mov
xchg
and
cmp
mov
cs
arpl
scas
pop
fistps
add
pop
and
dec
and
and
arpl
push
xchg
sbb
fstpt
stos
mov
in
repz
mov
pushf
add
push
inc
xlat
out
test
pop
xchg
jae
test
jp
loopne
dec
jo
imul
divl
das
stos
out
xchg
out
pop
xor
repnz
pop
idivb
pop
xor
sbb
arpl
pop
inc
lahf
and
jnp
sbb
mov
int3
cmpsb
cli
sbbl
sub
orl
imul
mov
cmpsb
test
dec
adc
and
icebp
outsb
jmp
shld
stc
lret
xchg
outsl
iret
out
hlt
int
push
cmpsl
out
insb
nop
mov
xchg
jg
movsl
ljmp
dec
pop
push
mov
jmp
push
or
mov
test
out
lea
adc
xor
mov
out
add
jp
scas
in
push
push
shll
add
add
mov
negb
add
mov
movsb
out
aad
jg
mull
js
or
sbb
bound
adc
faddl
push
and
enter
xchg
xchg
add
stc
addr16
xchg
inc
test
loop
jno
fdivrl
movsl
inc
jae
and
ficomps
adc
push
insb
ljmp
xchg
dec
repnz
nop
jmp
popf
mull
lods
mov
sub
lcall
lret
fcomps
adc
inc
jae
sbb
push
push
push
shrb
pop
orl
inc
nop
mov
cmpsb
xorb
mov
pop
sbb
or
popa
xchg
es
xor
fildll
roll
cmpsl
stos
and
ficoml
es
adc
mov
or
repnz
test
dec
xorl
jb
cmp
sti
shlb
pop
mov
or
movsb
dec
mov
inc
mov
push
icebp
les
mov
mov
insb
pushf
lcall
xor
sbb
push
adc
lret
push
push
enter
movsl
push
js
lea
push
aad
cmp
dec
hlt
mov
pop
mov
loope
inc
dec
push
add
repz
jl
fisttps
cmp
subl
xor
insb
mov
mov
pop
xchg
scas
popf
jae
dec
push
cmp
ds
dec
or
add
faddp
lcall
mov
ss
xor
je
cmp
xor
mov
cmpsb
es
sub
dec
mov
fstps
mov
scas
aaa
xchg
sub
fimull
inc
xor
jle
and
daa
test
int
mov
push
inc
or
pushf
mov
mov
and
rcrb
mov
cmp
mov
push
adc
and
sarb
lea
mov
xor
xlat
std
adcl
mov
in
jnp
mov
and
je
test
outsl
aad
sbb
pusha
mov
push
sbb
addl
cmp
cli
xchg
scas
fists
js
sahf
das
adc
mov
ljmp
pushf
lret
xchg
in
pushf
xchg
push
ret
add
xlat
sub
xorb
cli
sub
mov
or
aad
inc
xchg
mov
cmp
mov
scas
xchg
push
cmp
lret
mov
inc
or
clc
sbb
mov
push
or
jmp
fsubl
stos
clc
sbb
jo
bound
in
add
fistps
shlb
js
xor
xor
aaa
loopne
and
pushl
je
push
aas
or
cmp
insl
mov
fiaddl
out
push
sub
das
loopne
enter
push
jbe
pop
int
loopne
jle
stc
inc
arpl
test
ljmp
dec
test
jle
inc
ret
lret
mov
inc
pop
jecxz
icebp
and
cwtl
sub
dec
cmpsl
xchg
dec
pop
mov
and
gs
mov
xchg
mov
lock
xorb
int3
fimull
dec
loop
sub
add
sbb
lret
fsubp
cmp
cmp
dec
imul
mov
cmpsb
cmc
cs
mov
push
mov
mov
rcl
mov
sti
mov
mov
mov
test
mov
incl
cmp
push
je
xchg
mov
test
add
rcrb
clc
and
mov
jle
dec
jmp
stos
imul
cmpsl
pop
lea
fwait
ss
lds
loope
cmc
cs
cwtl
stos
pop
inc
jecxz
das
pushf
orb
or
jecxz
mov
stc
xchg
cli
lds
or
lahf
adc
mov
ds
pop
test
mov
push
mov
or
out
jae
cmpsl
cmc
insb
push
cmpsb
cwtl
sbb
add
xchg
arpl
push
ds
daa
jns
call
inc
sbb
sbb
roll
cmc
pusha
push
xchg
mov
aas
or
or
movsl
out
lcall
dec
mov
push
xchg
sub
dec
insl
or
imul
mov
mov
mov
js
in
adc
mov
arpl
adc
sub
mov
or
loopne
mov
cmp
sub
cmpl
scas
fisubrl
aam
push
out
xchg
sub
test
mov
and
xchg
nop
push
ja
daa
mov
jle
aad
mov
dec
aam
or
cmp
aaa
mov
hlt
xor
subl
push
mov
fsub
and
clc
dec
lea
jg
cmp
decb
rorl
shrl
aad
mov
dec
mov
loopne
mov
popf
cld
out
pop
mov
cmp
or
cmp
jno
or
sub
sarl
cmp
sahf
aam
pop
lea
mov
adc
jne
pop
das
mov
or
jo
lods
mov
das
pop
or
inc
adc
and
or
lods
aaa
movsb
push
sub
mov
push
xor
aas
leave
inc
push
jg
aam
lods
xor
xor
in
jbe
loop
xchg
xchg
cmp
and
call
inc
mov
into
lods
cwtl
sbb
mov
sbb
mov
and
xchg
jg
jb
sbb
pop
lock
jg
imul
leave
loopne
push
ds
mov
dec
push
scas
rol
xor
fiadds
je
repz
daa
aad
cmp
std
rcrb
xchg
push
push
lock
fstpl
cmp
push
xlat
xor
add
fs
mov
mov
jmp
loop
jp
test
jo
insl
daa
das
xor
mov
push
test
imul
icebp
sarb
dec
repz
es
dec
repnz
imul
jne
mov
jg
push
loope
bndstx
and
pop
push
and
int3
int3
andb
cmp
mov
lock
sti
call
loopne
jmp
sub
fwait
stos
aaa
or
pop
dec
pop
mov
in
shll
mov
and
roll
out
xorb
mov
sbb
ss
cwtl
push
add
rcrb
movsl
xchg
inc
sbbl
pop
popf
adc
add
pop
out
sbb
in
push
loop
ret
loop
inc
lret
jge
push
and
fdecstp
sub
jecxz
shll
jge
aad
idiv
clc
cmp
sub
jb
iret
cltd
xor
mov
or
int3
outsl
movsb
add
jae
dec
jb
lods
shlb
cmp
in
mov
std
scas
cwtl
jecxz
imul
cli
or
xorb
or
pop
iret
popf
cmpsb
pop
pop
and
jae
xchg
negb
subl
out
je
push
push
dec
or
js
pop
xchg
ret
scas
xor
add
rcr
cmpb
sbb
inc
mov
insb
sub
cmp
orb
jns
out
push
es
add
and
adc
sti
and
fwait
xor
xchg
mov
or
arpl
sbb
stos
divl
ret
repnz
push
push
imul
int
cmpsb
sub
mov
js
sti
jl
xor
push
mov
push
dec
add
or
jecxz
jmp
push
scas
inc
mov
pushf
clc
out
sbb
sub
mov
iret
das
mov
ljmp
add
inc
ret
ret
lods
fs
dec
int3
ds
sarl
pop
push
adc
gs
lret
in
adc
leave
outsl
mov
cmp
and
lea
mov
and
xchg
cmpb
jns
sbb
cmp
jbe
mov
loop
pop
add
jl
jg
cld
sub
lcall
mov
mov
repnz
repz
push
lcall
lds
sub
mov
call
and
pop
adc
dec
cmp
enter
jp
loop
pop
cs
in
bound
push
add
inc
xchg
cmp
mov
mov
shrl
ret
mov
addr16
pop
aaa
and
fildl
mov
and
pop
lea
sub
pusha
incb
imul
mov
mov
and
ret
out
jge
stos
or
push
stc
pop
and
jo
loop
sbb
xchg
and
mov
pop
xchg
cmp
arpl
dec
dec
cmp
push
fisttpl
out
jmp
fs
mov
in
adc
add
loopne
mov
add
jo
and
jb
pop
or
sub
nop
sbb
mov
and
dec
sub
push
negb
mov
rcll
lods
add
aam
call
pop
inc
mov
mov
xchg
sbb
add
inc
pop
rcrl
sub
daa
fmul
add
stc
mov
rclb
cmp
sbbl
cmpb
or
test
dec
cmp
dec
xor
pop
clc
ret
pushf
inc
sub
ja
jg
lcallw
cmp
std
dec
inc
fwait
in
xchg
lss
in
inc
test
or
stos
adc
jbe
adc
in
outsb
fdivrl
ret
daa
add
pop
sahf
mov
and
popf
mov
xor
inc
cld
pand
movsb
and
ljmp
xchg
cs
xor
je
call
and
add
adc
and
sbb
mov
and
push
pop
test
cmp
bound
fldcw
test
push
mov
les
ret
cmpsb
scas
jnp
push
jno
fldl
sbb
cli
xor
dec
xchg
push
cmpsl
imul
mov
mov
or
inc
sysenter
mov
sub
pop
xchg
sbb
ficoml
sbb
stos
leave
adc
rolb
rorb
xchg
ja
sbb
jle
push
vunpckhps
sbb
and
jg
fwait
iret
cmc
sarl
mov
in
scas
sbb
push
data16
jae
repnz
lods
sti
and
subb
cmp
inc
adc
push
cmpsb
dec
rcll
orl
repnz
xchg
lods
mov
mov
dec
lret
mov
mov
jge
xchg
push
add
mov
mov
mov
push
jmp
ja
stc
in
in
inc
lahf
cmpsl
ret
lahf
dec
idiv
call
add
pop
cwtl
test
sti
rcll
insl
dec
xor
fsubs
loopne
nop
push
inc
and
xchg
add
mov
push
fdivs
and
xchg
stos
sub
cmp
sub
aam
testl
enter
sub
inc
sahf
imul
shll
lret
scas
push
push
lods
lret
iret
das
mov
int
and
popf
out
and
mov
ljmp
pop
test
aas
ret
xor
adc
inc
scas
lods
sbb
adc
stos
mov
lret
dec
push
lods
sbb
lret
stos
fidivs
push
cmc
adc
stc
and
push
test
movsb
adc
sub
fildll
gs
adc
in
jge
inc
rorl
shrb
jmp
in
repnz
push
je
mov
mov
mov
cmpsb
push
outsb
es
shll
sub
push
sub
or
jle
rorl
icebp
lret
jmp
sub
pop
sbb
cmp
ss
mov
xchg
aas
scas
mov
dec
push
call
lret
fstpt
jle
sub
inc
clc
jnp
xlat
ret
add
or
xchg
hlt
insl
xchg
lahf
xchg
and
adc
or
adc
cwtl
sbb
cs
jle
jns
and
fdivrl
and
int3
orl
in
je
jae
and
dec
pop
ja
sbb
mov
mov
test
hlt
jmp
inc
ja
inc
roll
movsl
sub
add
push
mov
ret
or
mov
push
mov
movsb
mov
or
hlt
es
sub
and
test
andl
adc
test
push
xor
or
stos
add
xor
mov
in
addr16
sahf
stc
in
cmp
out
or
xchg
xchg
lods
jl
fdivrl
mov
cmp
mov
sbb
jmp
clc
pop
or
lret
xchg
push
loop
test
imul
mov
sbb
xchg
iret
jnp
inc
lret
mov
jo
or
xchg
add
xor
aaa
inc
shll
lea
and
fildl
js
inc
scas
inc
mov
testb
pop
xchg
stc
shrl
cmc
vaddsd
and
cmp
test
xchg
mov
mov
data16
test
insb
movsb
arpl
xchg
inc
je
sarl
mov
in
repz
inc
and
leave
dec
mov
mov
jns
aaa
cmp
repnz
pop
outsb
fldl
movsb
sbb
push
stos
add
xchg
push
mov
into
mov
jle
adc
push
sub
jmp
mov
adc
pop
leave
loopne
pop
arpl
and
inc
inc
dec
and
nop
cmp
out
add
or
idiv
cwtl
out
fs
jp
adc
nop
outsl
rorl
dec
outsl
jno
scas
mov
cmpsl
xchg
aaa
and
jecxz
pushf
adc
popa
inc
test
scas
jnp
mov
mov
jmp
fisttpll
cmp
add
mov
or
mov
sbb
adc
inc
mov
jne
mov
jmp
jne
push
and
lea
push
in
movsl
ret
shlb
sbb
jmp
into
sahf
cli
push
loope
mov
xor
stos
mov
xchg
and
xlat
aad
add
icebp
xchg
rcll
push
mov
stos
aam
sbb
andb
ret
insl
adcb
mov
push
xchg
loop
fs
xchg
imul
sub
cmp
jecxz
out
roll
int
pop
mov
scas
test
aaa
out
jbe
ja
pop
xchg
mov
mov
popa
ds
dec
adc
cmpsl
fcoml
in
jns
mov
pusha
ficoml
cli
test
out
ds
sub
test
popf
mov
push
jg
mov
mov
stos
lods
xchg
dec
mov
in
mov
xor
mov
scas
ret
sbb
les
notb
sub
sub
mov
fistpl
cmpsb
call
dec
rclb
xor
dec
lods
cs
mov
popa
pop
out
jo
mov
lahf
lea
clc
cmpsl
sbb
cmp
lret
cmpsl
xchg
into
adc
insl
adc
mov
dec
fwait
jecxz
shl
int3
push
or
jb
xchg
mov
rorl
pop
shll
in
and
adc
inc
lds
in
add
andl
rolb
inc
mov
lea
mov
pop
lret
mov
xorb
jne
iret
inc
inc
xlat
int
sbb
adc
jno
in
pop
lds
test
mov
cs
ds
push
mov
jmp
insl
or
in
adc
aad
notb
stos
inc
popf
fcom
std
push
dec
push
cmc
or
cmp
aas
mov
jge
xchg
sbb
and
mov
mov
or
nop
in
add
fwait
lods
push
das
adc
iret
xor
daa
jns
shr
jo
fs
mov
push
into
adc
or
inc
sub
les
dec
shlb
mov
hlt
xchg
popf
push
call
mov
fistpll
cmpsl
push
lods
mov
mov
inc
cmp
pop
lods
int
pop
jp
les
xor
add
xchg
ret
andl
js
sub
out
jecxz
clc
sbb
fucomp
jge
dec
inc
or
sub
cmp
andl
imul
sub
sub
adc
pop
fs
adc
rcl
inc
and
stc
pop
lret
and
out
std
or
cmc
test
xor
out
ja
pusha
jg
rolb
sti
ljmp
mov
jne
push
xchg
xchg
hlt
mov
mov
sbb
arpl
mov
sub
ljmp
mov
push
pop
insb
pop
stc
ds
dec
mov
shll
pop
loopne
bound
loop
push
iret
movsl
ja
outsb
int3
or
sbb
dec
push
push
xchg
rorl
rcrl
xlat
xor
mov
loope
inc
mov
xchg
add
cmp
nop
adc
adc
adc
roll
inc
jnp
daa
sbb
jnp
stc
sub
xchg
adc
push
jmp
rorb
iret
lea
outsl
inc
scas
nop
les
add
mov
cwtl
data16
push
aas
cmpl
jbe
or
cmp
mov
mov
imul
fcomps
decb
cltd
and
jns
sarb
std
loope
sub
fwait
sbb
pushf
ja
mov
jns
cwtl
jle
in
nopl
cltd
enter
aas
pop
jecxz
pop
out
adc
loop
push
outsl
push
cmpsl
fstl
pusha
and
sbb
fwait
jnp
sbb
in
sbb
daa
push
mov
popf
dec
repz
push
push
push
jns
xchg
mov
jmp
mov
andb
sub
pop
add
jno
push
lds
mov
fsubs
inc
mov
test
mov
jae
arpl
das
sub
jbe
dec
xchg
sbb
pop
dec
imul
lea
out
jle
outsb
shlb
iret
hlt
rcrb
mov
int3
mov
ja
lret
lock
mov
stos
iret
cs
sbb
cmp
pushf
fisttpll
and
pop
fisubrl
out
or
mov
aam
dec
xor
cmp
xorl
loope
or
mov
add
dec
sub
and
mov
adc
and
cltd
test
xorl
movsl
loop
push
adc
push
lods
add
push
inc
sbb
insb
cld
adc
js
adc
push
outsb
lahf
cmpsb
add
pop
stc
fists
and
insb
pop
repnz
dec
movsb
lea
ret
cvtps2pi
mov
iret
js
adc
js
inc
add
cmp
sub
and
loopne
pushl
xchg
xor
dec
shll
sbb
adc
lds
das
imul
js
sbb
pop
cmpsb
add
push
pop
sbb
jg
pushf
in
sub
inc
jbe
xor
mov
faddl
mov
push
mov
jg
imul
std
or
repnz
arpl
call
dec
xor
int
adc
inc
jb
xchg
out
arpl
pop
lods
pop
sahf
mov
sub
mov
sub
push
pop
fisubs
inc
xorb
mov
mov
pop
mulb
and
mov
push
adc
and
cli
cmp
mov
fdivs
pop
cmpsb
cli
leave
popa
push
mov
clc
andl
xchg
fnstenv
rclb
pop
mov
and
jnp
push
add
rorl
xchg
int
xchg
sbb
sub
sub
inc
pop
adc
jl
pop
jecxz
jp
daa
adc
sbb
lds
dec
or
jp
push
dec
add
cmp
rol
ret
xorb
jmp
mov
mov
and
add
addr16
popa
mov
adc
push
cli
mov
daa
lods
jp,pt
adc
repnz
inc
mov
sub
inc
pop
fdiv
sbb
repz
sbb
push
pop
mov
lods
xorb
sub
dec
cltd
jo
dec
ret
xchg
xor
xchg
insl
xchg
out
xor
aaa
cmpsl
xchg
jne
push
xchg
xor
dec
pop
jae
jge
out
push
and
mov
adc
pop
xchg
sbb
inc
int
fsts
inc
insl
add
push
fldenv
mov
dec
dec
xchg
sbb
das
inc
test
and
mov
jnp
fadd
cmp
stos
stos
xchg
out
std
lds
sub
loope
and
ret
fiadds
sub
lahf
rcrl
shlb
push
fnsave
mov
icebp
test
int
sbb
inc
not
and
je
loop
mov
scas
or
push
cmp
lcall
decl
mov
shl
insb
xchg
jle
std
insb
mov
sub
repnz
fimull
push
mov
mov
ficompl
fmulp
in
jb
std
mov
xchg
dec
mov
pop
add
fnstenv
ficoml
out
testb
adc
ret
mov
mov
ret
adc
xchg
xchg
and
call
ficoms
outsb
jmp
imul
repz
cmp
shll
or
popa
cltd
cmp
pushf
ja
in
mov
lock
inc
adc
outsb
dec
movsl
push
add
rcll
dec
inc
cs
in
filds
sub
xchg
mov
cli
and
fmulp
jno
leave
mov
cmp
mov
inc
dec
cwtl
mov
xchg
hlt
jmp
pop
fcomip
sbb
mov
icebp
fstp
jg
jg
lds
jecxz
mov
and
rorb
dec
in
js
pop
cld
popa
xor
sub
cmpsb
pop
ret
mov
out
in
loop
aas
out
cli
mov
mov
xchg
and
int
jmp
test
cli
hlt
xchg
push
insl
add
out
sbb
cmc
push
pop
jg
push
or
cmp
adc
std
mov
in
jns
push
in
fs
pop
mov
sub
mov
gs
xor
call
js
enter
test
xchg
shl
and
mov
mov
pop
cmp
fidivs
sbb
out
sub
test
pop
fmull
outsl
test
cmp
jae
lea
push
test
cmp
adc
xchg
inc
cs
faddl
cmpsb
test
orl
pop
rclb
daa
ficoms
fneni(8087
cs
roll
add
or
xchg
les
clc
mov
mov
or
and
push
lods
xchg
les
mov
mov
pop
movsl
xchg
sub
mov
aad
cmpsb
jbe
push
mov
inc
lcall
dec
lahf
xor
aas
mov
inc
mov
add
push
pop
inc
push
lods
in
daa
int
pop
ret
shrb
or
scas
or
push
dec
sbb
lret
or
sub
idivl
dec
ficomps
xchg
mov
mov
shlb
cmp
mov
call
repnz
vmovups
in
push
fcom
xchg
mov
sbb
cmpsb
mov
stos
rolw
hlt
out
inc
add
adc
mov
pusha
loop
xor
mov
xor
pop
jnp
lods
or
sub
lea
jp
push
cltd
icebp
imul
xchg
jecxz
mov
and
fimull
dec
pop
pop
jne
cmp
mov
mov
push
rcrb
cmc
adc
jmp
scas
inc
cwtl
sub
call
fdivr
xor
pop
xor
ficomps
cmp
push
xor
bound
jb
paddsb
mov
sub
loop
sbb
out
cmp
lods
sub
inc
mov
mov
daa
mov
and
int3
add
mov
pusha
mov
inc
jo
sbb
mov
mov
xchg
dec
add
dec
incb
xorb
pop
mov
icebp
mov
lret
xchg
clc
stc
mov
pop
xacquire
fdivrs
stos
and
gs
mov
adc
pop
int
push
cli
stos
inc
sbb
mov
inc
rorl
jle
push
jmp
shll
add
cmp
lds
into
xchg
outsl
movsl
cmpsb
mov
jno
leave
cmp
xchg
nop
pushf
aaa
push
adc
subl
lods
ret
push
fdivs
cmp
sub
or
mov
aam
lcallw
and
lods
sub
mov
mov
push
movsb
sbb
cltd
cmp
pusha
xchg
xor
push
ja
jno
mov
cmpsb
negb
cmp
mov
ja
ret
adc
dec
xlat
std
and
sub
lret
push
in
mov
push
pop
add
or
divb
jb
cmpsl
adc
fisubs
ja
push
into
xchg
xchg
shlb
repnz
xor
xchg
mov
sbb
jmp
jecxz
jle
and
and
scas
shrl
push
or
scas
mov
shll
in
jae
xchg
cmc
jl
lret
notb
xor
sub
mov
mov
pusha
aad
popa
cmpsb
jge
xchg
sub
sub
or
lcall
jg
sub
ret
dec
popa
int
arpl
jns
inc
cmp
adc
dec
popf
xchg
sub
pop
and
mov
cmc
sbb
inc
or
cld
test
mov
mov
fadds
xchg
fisubl
cmp
sub
cmp
addr16
and
inc
lret
sbb
jne
sbb
addl
out
in
adc
lcall
push
jg,pt
pop
or
pop
cwtl
mov
aas
sti
fidivrs
pop
adc
popf
enter
push
or
ja
sub
daa
cltd
jae
mov
insl
xchg
orb
xchg
ss
nop
dec
sub
mov
leave
ffreep
shrl
jae
hlt
les
mov
push
inc
mov
jb
adc
loopne
sahf
hlt
mov
mov
adc
pop
pop
push
sub
or
iret
mov
mov
xchg
mov
mov
push
pushf
lods
faddl
nop
add
pushf
or
sub
clc
mov
out
mov
cmp
push
add
and
sbb
les
ja
ret
popa
add
dec
lea
mov
out
fmuls
jnp
inc
mov
adc
lahf
repnz
or
jno
nop
cmc
mov
mov
add
mov
es
xor
ret
push
push
leave
xchg
out
mov
out
popf
test
ret
and
jbe
jmp
leave
add
adcl
adc
jp
add
xchg
aas
mov
dec
xor
fwait
inc
push
shlb
and
andl
iret
xchg
push
xor
mov
cmp
push
mov
xor
lds
pop
inc
fsub
sahf
inc
mov
jno
fistl
or
movsl
insb
loopne
add
mov
andl
ja
and
inc
aas
dec
and
ds
xchg
push
push
cwtl
xorb
pop
xchg
push
inc
sbb
sahf
push
sub
mov
jecxz
push
or
les
pop
mov
popa
dec
out
mov
repnz
stc
pop
xor
inc
jne
fldenv
sub
pop
inc
add
mov
and
mulb
jmp
xchg
nop
and
xchg
or
fmull
addr16
inc
mov
sbb
inc
push
into
pop
inc
js
sbb
je
xor
mov
arpl
inc
push
jmp
xchg
je
xor
int3
jno
add
pop
jl
popa
xchg
add
pusha
lret
ret
pusha
mov
fists
jmp
pusha
inc
fs
jbe
inc
mov
inc
mov
jmp
test
jecxz
popa
xchg
ret
mov
stos
fwait
pop
jmp
inc
push
lods
push
outsl
test
mov
xchg
fsts
out
movsb
imul
add
outsb
cmp
ret
rorl
push
jecxz
mov
idiv
cmp
xor
movsl
cltd
fists
repz
in
andb
adc
mov
std
movsl
or
pop
jb
adc
int3
adc
imul
add
push
ret
std
addr16
inc
inc
das
adc
mov
jmp
cmpl
aaa
mov
popf
mov
inc
xchg
push
jge
inc
call
mov
or
out
xor
sti
cmpsl
loop,pt
mov
int
lea
push
inc
jno
jae
shrb
mov
jnp
stos
inc
sbb
lret
adc
sub
hlt
lea
xor
out
inc
ret
daa
pop
xchg
add
jnp
les
insb
sbb
or
adcl
mov
mov
xor
xchg
and
pop
mov
movups
push
mov
imul
cmp
cmp
adc
movsb
fmuls
cld
cmpb
shll
xorl
stos
push
insl
jns
dec
hlt
lods
mov
shll
jp
outsl
sbb
jmp
jo
mov
outsl
pop
stos
cwtl
xor
pop
popf
mov
mov
cmpsl
pop
cld
inc
lock
push
cmp
insl
cmp
inc
add
imull
pop
push
or
push
xchg
out
int
outsl
ficompl
incl
mov
shrb
xor
imul
or
cwtl
mov
xchg
pop
mov
repnz
sub
repz
sbb
rolb
stos
cwtl
fdivl
ljmp
inc
rcrl
jnp
ja
aad
jae
sub
pop
xor
cwtl
mov
into
mov
loop
dec
lret
inc
xchg
ja
xor
push
xchg
rcr
xchg
popl
cltd
ficoms
into
dec
arpl
bound
push
imul
sub
inc
aas
mov
mov
cmpsb
and
ret
inc
rcrl
add
or
sub
adc
xor
ljmp
inc
push
clc
cmp
mov
mov
push
jmp
lock
test
xchg
leave
or
sbb
and
add
mov
lds
popf
push
pusha
mov
leave
mov
jp
loope
aam
subl
adc
dec
aam
xor
mov
xchg
pop
push
push
aaa
and
dec
lock
aam
iret
push
popl
movsl
pop
mov
mov
xor
xchg
test
add
dec
ljmp
xor
cli
or
outsl
add
adc
push
nop
test
les
jae
add
mov
insl
push
cltd
pop
dec
mov
mov
mov
mov
nop
iret
mov
inc
mov
and
fdivs
aam
xchg
clc
xor
mov
mov
mov
inc
mov
xchg
push
dec
clc
push
xchg
cltd
xor
cwtl
iret
push
in
stos
xorb
test
testl
push
inc
or
fidivs
pop
std
and
push
and
or
packuswb
push
pop
cmpsl
sbb
mov
mov
adc
add
add
outsb
xchg
imul
and
push
es
push
push
rorl
insb
or
test
in
adc
sub
xlat
jo
and
testb
dec
sub
xchg
mov
inc
cmpsb
jb
inc
inc
lcall
cld
add
cmp
addr16
fstl
mov
xchg
dec
arpl
xchg
movsb
gs
insb
push
in
loop
lret
nop
push
inc
into
shlb
jno
sarb
out
shll
jno
pop
add
push
push
aad
mov
jmp
mov
mov
stos
xor
test
sbb
pushf
cwtl
xor
addr16
sub
jb
push
xlat
mov
icebp
ljmp
int
fxam
lahf
mov
fsubrp
ja
shll
xchg
jnp
jl
mov
xchg
xchg
push
dec
aam
jmp
daa
jle
aaa
adc
jnp
mov
insb
sbb
push
xlat
mov
test
aam
clc
xchg
sub
jp
mov
or
or
and
das
pop
std
push
ja
adc
pop
clc
arpl
adc
stos
push
sbb
dec
lods
enter
jle
es
std
fs
jle
nop
pop
scas
test
push
or
add
adc
lds
xchg
jmp
add
jno
mov
insb
rclb
mov
int3
mov
jecxz
add
enter
push
out
sub
es
push
xchg
push
and
aad
es
adc
cmp
daa
mov
mov
or
cmp
in
repz
dec
ljmp
or
mov
mov
popa
cmp
lock
lret
iret
add
je
incb
cwtl
movsl
push
fdiv
icebp
jno
jl
pop
cmp
inc
jle
rolb
sbb
popa
out
scas
imul
push
aaa
jo
push
aad
loopne
or
xor
aas
xor
std
push
adc
cmp
dec
pop
jmp
nop
lcall
push
sarl
fldl
outsl
in
and
mov
fldl
mov
pusha
stos
and
in
cmpsb
shlb
pop
adc
lahf
fistps
adc
jno
pop
adc
mov
aad
pop
leave
jnp
mov
push
fsubrs
lahf
mov
test
in
in
fwait
stc
mov
mov
jecxz
pop
xor
mov
pop
dec
mov
jae
adc
pop
pop
insb
xchg
inc
jbe
fs
lock
jns
jbe
pop
insl
gs
mov
popf
pop
in
mov
add
mov
push
adc
xchg
or
hlt
int3
fxch
andl
movsl
sub
xor
inc
push
cs
adc
push
push
orl
stc
ds
dec
xor
cltd
dec
pushf
adc
cmp
mov
imulb
ficompl
cltd
inc
shll
pop
clc
jnp
push
ret
mov
pushf
xchg
inc
hlt
movsb
xor
mov
subl
and
jecxz
pop
mov
sbb
insl
insl
in
cmpsl
fdivs
les
jno
out
xchg
ss
jae
jns
inc
in
push
bswap
xchg
lahf
xchg
add
lods
mov
inc
call
pminsw
imul
jge
std
adc
adc
popf
xchg
outsb
xchg
sbb
push
mov
inc
repz
push
mov
pop
es
loope
popa
pop
pushf
mov
imul
pusha
inc
mov
gs
jae
ret
sbb
inc
mov
mov
idivl
ss
mov
ret
test
jp
push
test
sbb
lcall
push
rorl
pushf
bnd
mov
pop
or
mov
mov
push
fadds
inc
xor
xchg
jo
mov
inc
test
aam
jne
and
push
sbb
stc
enter
jae
mov
std
pop
and
out
dec
ljmp
into
sub
pop
addr16
pop
inc
xor
les
mov
test
jb
inc
cld
jp
inc
xchg
xchg
and
sub
into
negb
bound
mov
mov
cltd
fs
sarl
dec
loop
pop
inc
cmpsl
enter
ljmp
scas
cwtl
adc
fsubrs
mov
push
mov
hlt
loopne
mov
dec
and
cmpl
xchg
imul
xor
push
stc
in
jg
mov
loopne
mov
aaa
xchg
aam
popa
adc
and
adc
int
insb
rcr
and
neg
xchg
movsb
adc
push
rcll
push
outsb
adc
mov
jb
inc
xchg
xor
add
out
xchg
pop
movsl
jnp
dec
nop
xchg
mov
or
shlb
sbb
jb,pt
jl
loope
movsb
movsb
pusha
or
loope
test
les
add
adcl
xor
clc
inc
repnz
or
ret
int
push
adc
xor
sub
xor
ljmp
pop
mov
mov
lock
bswap
in
cmp
sub
jne
mov
inc
inc
pop
push
xor
shrl
adc
scas
push
jecxz
decl
iret
sbbb
jo
jle
mov
dec
jno
gs
pop
adc
pop
cmp
mov
int3
out
xor
mov
rcr
enter
jb
shll
xor
sub
or
or
pop
fidivrl
sbb
lock
outsl
mov
add
jno
sbb
icebp
cmpb
pop
repz
fwait
inc
mov
jnp
and
pop
cmp
andb
mov
rcrb
pop
jne
mov
push
sbb
test
mov
push
xlat
addl
xor
enter
test
jmp
flds
repnz
xchg
and
adc
and
push
dec
inc
daa
mov
movsl
xor
fsub
ds
pusha
or
cli
daa
sub
cli
aas
lods
daa
jns
loope
mov
push
leave
adc
cmp
call
xor
daa
idivb
dec
inc
push
push
pop
mov
fadds
or
mov
xor
aam
adc
xor
mov
ljmp
adc
test
ds
pusha
cmp
push
and
dec
jne
lock
int3
stc
mov
ljmp
out
or
adc
jl
dec
outsl
jno
and
shlb
lock
lret
ret
mov
sbb
mov
ror
in
pop
dec
adc
pushf
sbb
pushf
or
orl
mov
xor
in
cmp
imul
pop
insl
stc
popf
in
xchg
pop
cltd
mov
es
add
in
das
ret
push
and
pop
pop
loope
js
std
add
sub
mov
hlt
es
pop
dec
pusha
push
xlat
pop
dec
shlb
cmp
pop
mov
xchg
imul
and
inc
dec
lret
aas
in
mov
push
test
push
xchg
repz
xchg
sahf
push
cli
repnz
aas
cmp
cwtl
je
jp
cmp
addr16
push
push
mov
sahf
mov
lods
jbe
adc
mov
cmp
es
mov
sbb
sub
out
dec
test
fiaddl
jle
into
repz
jecxz
jns
rorl
shll
xlat
xor
sub
sti
lret
mov
movsl
jmp
in
sahf
xchg
sti
jecxz
rcll
mov
loop
sub
mov
daa
push
xor
leave
jne
pop
mov
incl
mov
jb
sets
data16
fidivrl
pop
jnp
iret
insb
sub
ficoml
mov
and
loop
scas
inc
jl
sub
test
shrb
xchg
mov
out
stc
xlat
sub
iret
jae
ja
rcll
mov
test
inc
pop
out
les
mov
adc
cltd
lcall
sar
fsubs
mov
jno
in
or
jbe
jb
in
shrb
aam
subb
imul
sbb
mov
jae
jp
cmp
arpl
or
mov
jecxz
loope
cld
dec
subb
push
add
cmpsl
aad
ljmp
fsubs
mov
mov
lret
insl
mov
mov
flds
rclb
hlt
out
cmp
fnstcw
pop
jp
push
into
lods
aam
pop
or
pusha
rorb
outsb
mov
bound
add
data16
enter
sub
or
mov
adc
mov
sarl
fcomps
int3
or
pop
lods
mov
insl
or
xor
hlt
fcom
or
xchg
inc
push
adc
addl
fwait
push
mov
push
inc
or
in
pop
pop
push
lret
aas
inc
mov
sub
daa
lahf
push
add
lcall
or
dec
xchg
push
xor
push
cli
addr16
in
les
subl
das
cmp
movsb
sti
dec
sahf
mov
jb
push
fisubrl
adcb
cmp
mov
dec
scas
test
fwait
scas
pop
jbe
roll
and
sub
leave
mov
daa
out
and
cmpsb
lods
outsb
lret
out
in
roll
cmp
pop
cmp
inc
push
mov
cmpsb
push
add
movsl
orl
flds
adc
mov
push
cmp
pop
push
pop
nop
fcmovnu
dec
lds
lret
lods
pop
clc
adc
adc
push
std
jbe
mov
xchg
cmp
bnd
lds
lcall
xchg
sbb
rcrl
fdivrl
push
lods
scas
push
enter
in
int3
test
mov
aaa
xchg
mov
daa
inc
inc
or
pop
jecxz
cmc
mov
pop
out
ficoms
push
enter
arpl
mov
push
pop
jg
cmp
ret
inc
movsl
bswap
ds
iret
imul
cmp
imul
cmc
inc
pop
stc
push
out
xor
imul
pop
dec
push
adc
pop
mov
aam
mov
xchg
push
inc
std
fcomi
out
jp
sbb
outsl
sbb
aas
dec
xor
lock
lods
cmpsb
leave
xchg
dec
xchg
push
ror
mov
jle
dec
in
pop
lret
push
leave
rolb
mov
ret
cmp
adc
call
cli
sub
cmpsl
push
cmpsl
mov
fcompl
fdivr
xlat
subl
push
dec
cmp
and
inc
jo
out
or
fistl
push
jge
dec
cmpsl
pop
fs
imul
sbb
sar
lea
adc
mov
adc
std
inc
and
mov
insb
aas
fmul
subb
dec
sbb
or
adc
pop
and
mov
pushf
push
push
lods
and
xor
idiv
jl
adc
not
xchg
cmp
movsl
pop
clc
shlb
adc
int
leave
rorb
cld
xchg
mov
orl
jo
dec
pop
pop
or
fs
xchg
add
xor
pop
cmp
mov
std
in
ret
gs
test
cmp
and
loope
insb
adc
jns
cmp
clc
pop
nop
sub
add
into
xlat
stos
mov
sub
out
sahf
out
pop
js
bound
js
fistps
stc
dec
mov
push
jbe
adc
in
or
sub
adc
aas
mov
cs
mov
push
cmp
in
rcll
aad
fldcw
inc
push
addr16
rol
or
jo
sbb
or
inc
add
mov
cmp
cwtl
pop
jecxz
xlat
jo
leave
clc
dec
mov
sahf
xchg
mov
xor
push
add
iret
inc
add
outsl
aaa
lea
mov
inc
shll
mov
pop
pop
jmp
scas
sarl
sbb
mov
fnstsw
dec
cmpsb
and
dec
jno
out
fmull
shl
out
cmp
add
lea
xchg
stos
lret
lods
mov
hlt
popf
push
int3
in
test
cld
sub
shl
inc
jp
push
mov
cwtl
shrb
xor
mov
mov
in
les
loopne
cmp
movsl
out
hlt
xchg
cwtl
leave
jns
dec
ljmp
fst
cltd
mov
mov
jbe
sbb
add
and
jle
adc
xchg
fmuls
pusha
inc
pop
push
xor
xor
mov
jp
mov
xchg
stos
in
inc
daa
mov
pop
bndldx
out
push
loope
ja
xchg
pop
pop
hlt
daa
or
mov
sub
sbb
push
and
idiv
mov
in
aam
xchg
ss
xor
test
cld
and
push
icebp
add
mov
xchg
and
pop
enter
push
jp
jae
adc
or
mov
mov
mov
inc
iret
dec
add
movsl
mov
mov
sahf
dec
push
dec
xlat
xchg
add
addl
lods
shll
fsubs
jbe
xchg
imul
sub
imul
scas
mov
xchg
xorb
gs
adc
mov
xor
or
dec
loopne
lods
sub
fimull
mov
stos
or
cmp
mov
stos
out
jbe
mov
xor
iret
xchg
adc
dec
or
xchg
pop
fisubrl
adc
jne
stc
je
test
stc
mov
fs
lods
push
sbb
sbb
inc
mov
out
adc
enter
das
fcmovne
cmp
xchg
lret
fildll
test
jge
loopne
push
xchg
fisubrs
jae
add
xchg
or
imul
adc
inc
fisubl
push
jno
push
into
xchg
jecxz
mov
jo
cmc
add
sub
sbb
sbbb
int
pop
dec
pop
mov
jbe
mov
cmpsl
nop
cli
fcoml
mov
loopne
sub
popf
jmp
jnp
fsubrs
ret
lret
or
inc
and
hlt
lcall
enter
xchg
pop
cmp
inc
sub
mov
mov
std
or
push
cmp
sub
ja
push
enter
lods
repnz
jp
das
dec
mov
and
es
cmp
push
mov
lahf
push
es
sahf
mov
or
xor
rcr
ljmp
mov
mov
ret
or
adc
and
jne
dec
mov
enter
mov
loopne
add
push
push
add
push
ljmp
stos
push
sub
or
cs
add
adc
movsb
xor
iret
adc
fidivs
lods
inc
fcomi
loop
or
and
sub
sbb
es
ret
sarb
cmpsl
loop
pushf
mov
xchg
mov
and
inc
bound
cwtl
lret
les
jo
or
xor
inc
dec
mov
rcrb
mov
mov
inc
rorb
scas
xchg
lahf
add
xor
jns
fisubrl
jae
mov
cmp
xchg
sets
notl
aam
sahf
xor
gs
add
cmp
lret
sbb
mov
fs
adc
push
test
dec
icebp
mov
push
loop
int3
call
mov
push
cmpsl
jle
inc
movsl
dec
mov
dec
lods
or
arpl
xchg
data16
loopne
scas
ja
je
iret
cmpb
add
adc
sbb
rcrl
int3
xchg
mov
mov
add
push
pop
add
movsl
cmp
mov
outsb
push
sbb
bound
in
adc
mov
fwait
adc
gs
cwtl
mov
and
pop
pushf
in
sbb
repnz
mov
aas
pop
add
mov
adc
in
dec
shrb
sbb
add
movsb
sub
addr16
mov
dec
xchg
aad
shrl
clc
xor
jecxz
xchg
and
xor
pop
push
rcll
or
fptan
sbb
pop
adc
aad
jp
xor
and
mov
scas
dec
shlb
inc
or
lret
push
rorb
lock
mov
movsl
pop
mov
inc
sbb
in
xchg
xlat
jo
and
fnsave
and
sbb
aad
inc
loop
add
mov
sub
cmp
dec
fs
adc
ljmp
ret
fucom
es
roll
cmpsl
into
aas
pcmpgtw
dec
inc
push
push
cmp
inc
rcll
popa
out
mov
xor
inc
and
nop
mov
mov
cltd
inc
jl
pop
gs
int3
and
jae
jns
mov
loop
mov
jg
test
cld
mov
test
push
icebp
pop
mov
mov
ss
mov
jbe
mov
add
aas
into
jo
push
or
push
jnp
push
mov
stos
imul
fldl
cmp
js
je
rorb
repz
pop
into
jno
into
stc
or
jle
pop
pop
inc
shll
add
lcall
cmp
into
mov
pop
sbb
faddp
movsl
fadds
add
or
jg
nop
jnp
pop
lahf
aam
and
sub
neg
push
jbe
xlat
adc
and
dec
or
cld
popa
inc
xlat
mov
adcb
sub
pop
pop
add
mov
rol
mov
and
xor
movsb
xor
pop
arpl
lret
and
push
divl
ss
iret
scas
fisubrl
mov
cwtl
mov
lock
xchg
test
imul
mov
mov
mov
or
out
and
addr16
mov
and
push
add
jmp
popf
push
lods
loopne
fcmovu
test
ret
out
aas
mov
jbe
push
mov
bound
out
flds
mov
sbb
stos
lea
xchg
cmp
cmp
pusha
out
push
push
mov
shl
outsl
insl
xchg
dec
icebp
jns
push
cld
inc
icebp
inc
shr
sahf
jne
dec
cli
addr16
andb
pop
mov
insl
sbb
inc
cli
adc
ret
xchg
cmc
jbe
test
leave
dec
jbe,pn
xor
mov
ficomps
lcall
mov
mov
push
int
xchg
fistpll
addr16
push
ud0
das
adc
or
iret
cs
sub
aas
lds
mov
cmp
lcall
and
data16
fwait
fwait
mov
enter
aas
dec
fwait
mov
aaa
jmp
or
into
aam
test
aas
shrl
xchg
pop
sbb
incb
add
into
in
ja
enter
addr16
pop
js
mov
jns
xchg
lods
jnp
xor
sbb
out
push
scas
inc
inc
cli
outsl
cltd
dec
je
idivb
aad
in
loop
scas
out
push
dec
jp
xchg
test
mov
pop
aaa
fnstsw
or
out
test
xor
pop
mov
push
aam
push
jmp
mov
fiaddl
jg
mov
test
and
outsb
and
loop
inc
and
xor
lcall
add
ret
dec
mov
pop
mov
or
mov
or
aas
mov
inc
hlt
or
sbb
push
sub
push
icebp
adc
lcall
push
push
popa
in
push
adc
mov
pop
sub
popf
or
or
sbb
mov
xor
dec
stc
push
xchg
rorb
mov
scas
pop
add
sbb
bound
mov
adc
and
dec
loop
push
in
xchg
jl
or
sbb
gs
inc
jbe
inc
pop
les
cmp
shlb
stos
into
or
test
int
sub
mov
in
and
loopne
sub
xor
int3
xchg
jle
push
and
mov
jo
dec
and
clc
popa
aad
jecxz
sbb
push
push
inc
mov
add
das
push
stos
dec
sub
js
inc
dec
pop
mov
cmp
add
mov
fiaddl
jo
ds
jbe
xchg
dec
cmp
lahf
jns
dec
adc
push
xor
test
aaa
inc
mov
sarb
push
in
dec
sti
fs
mov
jl
jae
cmp
xchg
pushl
popa
mov
mov
call
mov
leave
cmp
out
adc
inc
mov
notb
into
cmpsl
jmp
sub
or
sbb
push
cli
push
gs
les
pop
mov
and
out
rorb
xchg
ljmp
fcomps
mov
imul
dec
in
roll
jge
fdivl
aas
mov
add
xor
xor
xchg
adc
movsb
pusha
mov
das
mov
jne
sub
cmp
and
jp
fcomi
shl
mov
cld
jecxz
sbb
sbb
clc
dec
loop
jecxz
or
mov
les
daa
adc
pushf
mov
popa
xchg
or
dec
js
xchg
mov
fdivr
aad
fnstenv
and
stos
cmp
dec
inc
lds
rclb
xchg
jp
pop
jae
jae
lods
dec
and
sbb
repnz
loop
jo
shll
rorb
movlps
aad
aas
int
sbb
aam
cmp
jecxz
xchg
jmp
loopne
rorl
xor
inc
jl
stos
fadds
sub
mov
adc
popf
ss
mov
arpl
aad
pop
cli
sbb
jmp
xor
or
and
xor
fsubrl
hlt
fsubrl
and
shlb
dec
jmp
jae
imul
dec
xchg
mov
call
pusha
imul
push
sbb
ret
inc
xchg
mov
sub
dec
out
insb
dec
jle
inc
push
xor
mov
sub
push
fwait
fs
pusha
stos
les
shll
in
in
aad
and
loope
sbb
cmpsb
repnz
outsl
rcll
outsl
rcr
ljmp
add
lds
sub
inc
jp
repz
jne
testb
in
mov
fnstenv
or
adc
push
arpl
jns
cltd
test
nopl
mov
cmp
std
lcall
push
push
enter
mov
jae
clc
gs
push
xlat
sbb
inc
repnz
mov
push
ja
inc
cmpl
sub
jo
adc
testl
hlt
and
pop
mov
and
in
repnz
and
pop
cmp
xor
mov
and
outsl
popa
ret
aaa
xorb
mov
xor
dec
sarl
mov
mov
cmpsl
cmc
lcall
imul
and
out
sub
leave
fisubrl
inc
mov
rcr
or
shrb
mov
repz
mov
push
mov
insl
enter
push
movsb
cmpsb
cmpsl
pop
push
icebp
movsb
mov
adc
gs
fsubrs
insb
rol
sti
hlt
and
adc
jno
xchg
cmp
xchg
jnp
pop
and
or
inc
jle
jmp
dec
mov
xchg
cltd
sbb
pop
jnp
jnp
shlb
pop
movsl
xchg
imul
sbb
in
jmp
add
push
mov
inc
jae
cmp
outsl
adc
mov
and
mov
inc
adc
cvtpi2ps
test
jge
scas
pop
or
int
inc
in
cmp
lock
xor
sub
add
ss
ret
cmp
push
pop
shl
addr16
dec
inc
sarl
jne
mov
leave
adc
pop
adc
int3
xchg
mov
and
mov
stos
notb
ja
inc
and
cmpsl
mov
push
xchg
dec
xor
cwtl
push
sti
mov
xchg
outsb
fnsave
subb
aad
mov
jl
dec
pop
and
mov
xor
dec
push
dec
jecxz
push
cmp
cmp
imul
xor
dec
xchg
xlat
or
testb
je
and
test
aad
ss
sub
push
dec
push
fidivrs
aad
popf
pop
ret
inc
scas
xchg
lods
daa
add
cmp
out
jns
inc
movsb
xlat
jl
sbb
aad
or
add
fcmovbe
adc
jne
insl
cmp
movb
mov
push
jns
cmpsl
daa
fsts
cmp
cmpsb
lret
lods
sub
sbb
jno
xor
pop
pop
addl
add
lock
cmpsl
xchg
lock
sbb
push
and
fidivs
loope
repnz
data16
repnz
or
gs
mov
cmp
popf
fucomi
idivl
shl
mov
bound
mov
mov
ret
subb
or
sbb
push
lods
jns
cmc
inc
pop
push
les
lahf
mov
or
ljmp
iret
popa
pop
xor
push
ss
mov
mov
sbb
aas
out
pushf
mov
das
imul
dec
adc
lods
js
inc
imul
pop
std
mov
inc
lcall
test
mov
or
in
xor
push
repz
add
jmp
in
scas
sbb
jne
or
or
shrb
mov
xchg
or
scas
mov
inc
push
xchg
addr16
mov
inc
and
pop
or
mov
sub
std
imul
scas
lcall
and
sbb
in
or
cmpsb
xchg
add
mov
popa
mov
mov
das
out
adc
aas
xor
dec
inc
mov
add
dec
out
es
pusha
ds
stos
add
mov
in
pusha
push
cwtl
pop
icebp
inc
lea
jnp
xor
mov
mov
sub
adc
sub
jne
pushf
popa
arpl
pushf
ss
cs
mov
mov
fldl
pop
test
in
cmp
dec
rcrb
push
push
roll
pop
aam
dec
stos
mov
pop
dec
pop
or
pushf
pop
data16
jp
cmc
loop
xchg
enter
rorb
pop
jle
pop
sbb
sti
dec
xchg
cmp
test
sarb
out
pushf
std
cmpsb
insl
jnp
pop
popa
lret
icebp
add
mov
sub
push
push
xchg
and
in
test
and
xor
rol
movl
inc
rclb
imul
in
js
cs
outsb
repz
or
movsl
into
and
notb
mov
mov
movsl
subl
fwait
sub
insb
gs
inc
arpl
test
lods
xchg
sbb
mov
in
inc
and
xorl
pop
outsb
daa
imul
add
filds
xchg
jb
dec
add
jg
xor
cltd
xchg
pop
sbb
and
lahf
cmp
mov
mov
sarl
fisttpll
sbb
fsubrl
test
rorl
roll
mov
pop
flds
adc
and
adc
and
loope
scas
inc
jae
das
std
xor
or
mov
dec
push
mov
lahf
inc
inc
fbld
mov
dec
mov
jg
js
pop
cld
jle
imul
xor
lret
jo
je
das
mov
sub
mov
repnz
iret
sti
jecxz
sbb
dec
fists
dec
test
knotb
jle
push
repz
adc
loop
dec
orl
or
xor
jp
stos
add
pusha
dec
gs
outsl
or
cwtl
mov
cmc
aas
data16
sbbb
std
inc
xor
clc
ret
out
hlt
movsb
loop
outsl
idivb
pop
call
test
cmp
ja
mov
jp
cmc
sub
ja
or
mov
inc
mov
xchg
pop
mov
dec
sbb
xchg
dec
ficomps
pop
les
lret
push
mov
xor
pop
and
in
mov
lds
push
cmp
jl
sub
hlt
or
outsl
sbb
aaa
insl
xor
fists
mov
stc
addr16
aaa
push
movsb
int3
sbb
and
jl
xchg
jbe
jmp
mov
shlb
mov
outsl
dec
mov
pop
inc
jae
lahf
adc
dec
or
xor
movl
nop
sub
and
jl
xchg
cmp
sbb
test
dec
enter
mov
adc
into
push
es
aad
clc
push
mov
dec
das
stc
shrl
mov
sub
pop
jp
hlt
mov
xchg
ja
js
mov
or
push
jl
out
int
hlt
and
in
call
jo
cmpsl
pop
xor
repnz
nop
fsub
movsl
ljmp
mov
roll
xor
xor
fs
push
inc
stos
cli
cwtl
pop
js
push
jle
rcrl
sub
or
dec
push
dec
or
jg
idivl
push
fstl
fcoms
mov
dec
ret
stos
divb
jo
pop
xor
sbb
cwtl
or
mov
adc
pop
movsl
and
dec
lcall
out
jae
sub
xor
xor
mov
and
les
scas
nop
push
mov
xor
or
mov
cwtl
or
add
dec
scas
loop
cmp
pop
js
enter
sub
jmp
cmc
inc
add
cmp
mov
fldl
or
pop
notb
loop
pop
lods
aam
stc
sbb
je
and
dec
sub
in
cmp
pop
sti
fs
pushf
mov
add
mov
sbb
mov
ja
stos
sbb
add
cmp
or
xchg
inc
arpl
jp
push
ror
imul
mov
loopne
icebp
pop
and
dec
or
or
mov
adc
xlat
fmulp
orb
xchg
in
jmp
adc
jno
cmp
cmp
mov
and
aas
ret
jae
pushw
or
movsl
pop
loope
xchg
push
lock
fsubl
inc
and
adc
mov
aam
ret
xchg
clc
mov
mov
mov
add
scas
push
lahf
dec
jle
or
das
lahf
pop
mov
xchg
push
dec
cld
stc
mov
push
in
cmp
mov
lock
pop
pusha
mov
mov
xchg
rclb
loopne
sub
loop
mov
or
adc
cmp
stos
mov
movsb
sub
shr
lahf
jp
xchg
iret
mov
imul
mov
dec
cs
jmp
rorb
pop
hlt
loopne
mov
adc
ret
into
push
les
test
outsb
cmp
fcoml
mov
lds
push
pop
js
sbb
imul
into
int3
mov
pop
inc
adc
mov
jecxz
jnp
lods
cmc
xchg
jecxz
hlt
sub
loopne
jl
sbb
dec
add
mov
or
hlt
repnz
lds
rolb
outsb
jnp
in
jo
sahf
dec
xor
in
and
mov
mov
dec
lods
adc
push
incb
fcoml
insb
add
test
test
stos
scas
testb
sbb
loope
push
adc
adc
push
adc
testb
movsl
lret
shlb
loope
jecxz
mov
shrl
hlt
aaa
pop
cmp
mov
imul
out
push
dec
sbb
mov
add
mov
jg
or
cmpl
stos
add
das
faddl
repnz
sbb
push
lcall
cmpsb
cmp
sub
lock
jl
imull
adc
mov
insl
xchg
outsb
pop
jecxz
lods
mov
das
sahf
shrl
pop
arpl
pop
xor
xor
dec
lea
out
movb
mov
shll
loope
push
jb
ficoms
add
std
inc
push
inc
das
adc
adc
leave
lret
movsl
sbb
mov
rcrl
cld
fldl
mov
in
jns
enter
sub
push
mov
or
movsb
adc
sbb
sar
mov
push
fimuls
pushf
popf
push
dec
mov
push
mov
jmp
pop
leave
test
jle
jp
pop
lahf
fidivrl
mov
sbb
call
mov
sbb
test
outsb
leave
cld
fidivs
cmp
push
lea
imul
lods
push
mov
dec
jle
xor
aad
repnz
movsl
push
loope
push
add
jmp
enter
push
adc
bound
test
ja
lds
and
add
shlb
pop
adc
add
inc
mov
mov
inc
xacquire
add
sub
jmp
orl
movsl
cld
rol
clc
adc
xor
daa
shrl
jmp
insb
repz
jns
in
mov
inc
fmul
test
js
into
imul
pop
inc
sub
jl
lea
cmpsb
pop
mov
cmp
lea
push
add
popf
inc
xor
test
adc
push
out
cmpsb
repz
outsb
xor
mov
stos
das
in
add
stos
outsb
add
push
popa
imul
stos
out
shrl
arpl
pop
push
popa
push
pop
paddusw
cmpsl
test
push
push
test
loopne
cmpsl
cltd
add
pop
inc
aaa
insb
pop
out
leave
aas
cltd
xor
mov
cltd
call
popf
movsl
jg
fwait
stos
lret
cwtl
and
sub
mov
inc
outsl
fdivrl
divl
repz
mov
mov
pop
xchg
imul
inc
xchg
sbb
es
leave
sbb
cmpsb
ljmp
jp
imul
push
out
aad
subl
fstps
fwait
fs
and
sbb
mov
push
aaa
xor
loope
cmc
repz
pop
iret
push
jle
hlt
add
sbb
jl
mov
mov
shll
outsb
rep
jb
test
adc
sub
add
in
jbe
sarb
ds
test
ljmp
adc
add
sarl
mov
dec
enter
dec
and
sub
dec
cmp
int
popf
ljmp
aas
inc
dec
fmuls
xor
and
jmp
push
lock
int3
push
hlt
clc
mov
in
popf
sbb
iret
xor
fs
popa
cmc
aad
repnz
add
or
and
xchg
or
and
push
xor
fs
mov
ja
imul
xchg
test
cmpsl
mov
cmc
sub
jl
push
push
stc
inc
out
in
cmc
repz
fsubr
xor
jb
push
push
cltd
cmc
cmp
popf
daa
mov
daa
cwtl
insb
sub
and
inc
into
mov
jge
aad
punpckhdq
mov
mov
jnp
inc
add
test
jl
sarl
cwtl
push
inc
push
dec
push
mov
pop
in
xchg
xchg
test
test
sub
fstp
popa
mov
or
push
dec
or
sbb
add
in
push
popa
xchg
sbb
mov
push
lds
adc
mov
test
out
test
and
jge
aas
shlb
addb
out
shrb
add
dec
cmc
adc
repz
lods
dec
jmp
andl
stc
std
push
data16
fstp
push
cmp
add
jb
scas
movl
int3
lock
mov
aad
pop
icebp
stos
pop
fsts
mov
jbe
xchg
jle
xor
mov
cli
fwait
mov
or
cmp
dec
inc
pusha
or
mov
rcr
sub
mov
jns
ret
mov
test
in
ret
mov
mov
int
pop
pop
sub
sub
jne
inc
pop
push
sbbb
out
sbb
aas
xchg
add
out
les
fs
es
xor
and
fildll
fs
xchg
lret
xchg
inc
bound
repz
insb
scas
push
fimuls
arpl
out
test
inc
ljmp
inc
jns
dec
dec
mov
shrb
cmp
dec
add
push
repnz
mov
jle
in
cmp
fistpl
inc
or
cmp
lods
and
loop
int3
pop
shlb
xor
pop
bound
les
push
inc
lret
cli
icebp
push
mov
out
cmp
adc
sti
sbb
mov
pop
imul
jl
mov
mov
xchg
push
push
mov
pop
mov
cwtl
inc
push
add
and
stc
scas
jmp
mov
les
cmp
dec
xchg
rolb
outsl
dec
inc
fbld
xchg
add
cli
xchg
js
push
iret
out
loopne
and
xchg
inc
sbb
gs
movsl
pop
fwait
pop
std
jg
shlb
outsl
hlt
mov
stos
psubb
xor
xchg
je
adc
in
and
sbb
std
lea
scas
adc
cmp
leave
shlb
pop
xor
pop
loope
adc
push
cmpsl
sbb
inc
dec
nop
cmp
xchg
rcrl
js
cmp
add
or
shr
aaa
inc
xor
cmp
out
xor
test
and
mov
lea
jg
out
inc
push
test
or
aam
popa
daa
xchg
jnp
cmp
out
mov
pop
cltd
hlt
cltd
xorb
xor
adc
cmp
sbb
pop
sbb
adcl
sub
aas
inc
xor
lret
xor
negl
fisubs
xor
mov
repz
out
or
nop
cmc
pop
ret
push
jae
dec
insl
mul
mov
js
sub
mov
lret
xor
jns
arpl
sub
pop
xchg
rcll
popa
xcrypt-ofb
cmpsl
stos
aaa
rclb
adcl
ljmp
insl
inc
mov
xchg
mov
cmpsw
pop
insb
test
ds
dec
mov
lock
fwait
repz
pusha
movl
stos
dec
push
or
mov
ja
push
jo
push
out
mov
fnstcw
xor
sarl
shll
stc
aad
cmp
addr16
aad
or
push
gs
bound
sahf
outsb
in
sbb
mov
lds
pop
outsb
mov
movb
cmp
pusha
sahf
pop
test
pushf
icebp
xchg
mov
popf
ja
dec
iret
xchg
xor
into
cld
and
test
push
aam
xor
cltd
cmpsl
jecxz
les
or
imul
pop
jp
fists
sbb
or
fdiv
push
iret
shr
sarl
jno
fdiv
dec
mov
sub
ja
into
scas
imul
rorl
lret
dec
jno
xor
repnz
pop
or
scas
sub
pop
lahf
and
mov
pop
popa
in
jmp
ja
sub
loopne
fidivs
jl
fimull
dec
mov
cmp
int
adc
gs
mov
inc
cli
addl
xlat
xchg
enter
adc
mov
and
cmpsl
jecxz
mulb
sub
in
mov
fistpll
xchg
pop
int3
fwait
cmpsb
push
mov
pop
test
es
cwtl
sub
dec
push
dec
ficompl
imul
frstor
out
jb
mov
inc
cmp
popf
insb
push
scas
xorb
dec
je
gs
jnp
filds
out
outsl
subb
pop
popa
mov
or
in
and
inc
repz
and
xchg
adc
cmp
ljmp
ss
jne
cwtl
pop
sub
enter
jmp
lock
dec
arpl
call
pop
out
int
cmc
mov
les
xchg
test
fsubrl
or
aas
sahf
push
dec
adc
adc
out
push
cmove
aaa
sub
call
stos
aam
mul
sub
lahf
cmpb
in
daa
aaa
mov
mov
add
sahf
cmc
xlat
add
mov
popa
lcall
lock
cwtl
gs
and
std
pop
inc
repz
xchg
outsb
sub
ss
and
notl
pushf
inc
aam
outsb
mov
in
pop
fisubrl
mov
clc
push
mov
cmp
inc
dec
adc
xchg
movsl
and
mov
icebp
mov
jae
sarb
dec
jle
insl
add
mov
and
xchg
or
add
push
xchg
xchg
pushf
mov
push
ss
rcll
sub
call
jne
xor
addr16
lret
fistps
cmpsb
lods
pop
push
lods
fs
cltd
cwtl
sti
mov
ja
xchg
fnstenv
sbb
sub
lods
dec
sti
pop
sti
mov
xchg
fisttpl
in
ret
xchg
cmc
bound
test
sbbb
xchg
into
and
pop
imull
or
lret
hlt
push
shll
insb
or
lret
push
loopne
or
imul
jno
out
pop
ljmp
pop
jb
cmp
rclb
into
cmp
adc
loope
pusha
pop
je
cmpsl
jne
cmp
sti
mov
pop
iret
fcomps
loopne
test
and
jnp
in
mov
in
ficoml
pop
and
sub
std
pop
dec
jne
xchg
shl
mov
jecxz
daa
outsb
in
adc
shll
xchg
rclb
rorb
mov
imul
jns
mov
inc
cmpsl
mov
mov
pop
shlb
xchg
js
or
cli
js
pop
into
jg
and
jg
in
outsb
insb
aad
sub
pop
out
push
or
jp
popf
in
cmp
sbb
xor
pop
fimull
xor
cmp
pop
mov
pop
repz
mov
jmp
lea
fldenv
pop
cld
out
inc
cmp
adc
adc
lods
sbb
test
mov
xor
sbb
mov
leave
cmp
adc
inc
jns
push
mov
inc
mov
xlat
packsswb
adc
pushf
rcrl
pop
sub
aam
icebp
pop
sahf
sub
in
fistl
std
sbb
adc
fdivs
sub
sbb
cltd
js
lcall
lock
nop
dec
mov
fwait
push
mov
mov
cmpsl
dec
lods
fnstcw
jp
dec
mov
test
pop
outsl
add
sub
enter
adc
loope
loopne
outsl
inc
mov
pushl
insl
jp
sbb
imul
loop
ud0
pop
stos
sub
js
fistpl
pop
aaa
push
or
call
xor
inc
add
addr16
sub
sub
mov
jo
mov
ficoms
int3
outsb
mov
lret
push
rcl
lods
ljmp
sahf
jp
inc
xchg
adc
pop
loopne
addr16
ret
or
add
ficompl
lea
fwait
sub
push
adc
ret
push
in
adc
or
or
clc
lcall
sub
lcall
dec
lods
or
test
popf
imul
fdivp
repz
pop
sub
shll
aas
stc
lock
push
mov
pop
ss
mov
inc
and
mov
mov
scas
pop
roll
in
pusha
jb
inc
push
cmpsl
jp
jae
mov
into
xor
push
add
mov
cwtl
adc
cli
call
mov
sti
xor
mov
cwtl
fmuls
cmpsb
push
movl
cli
mov
incl
imulb
jno
lcall
aaa
adc
push
pop
int
shrl
jno
jae
jmp
in
in
insb
adcb
inc
mov
pop
je
lds
sbb
lds
lods
mov
or
repnz
clc
and
cmpsl
and
lcall
ljmp
mov
in
and
sbb
shll
pop
pop
cli
or
sub
iret
cmp
outsb
jnp
imul
jne
out
xchg
xor
push
lea
pusha
jae
aad
sub
or
nop
push
xor
pop
mov
je
pop
cmp
adc
push
shll
lea
push
push
adc
dec
pushf
cmp
les
sbb
fmuls
in
dec
cmpsl
imulb
cli
inc
jne
xor
ljmpw
popf
outsl
pop
xor
inc
shl
adc
sahf
mov
inc
fdiv
inc
lret
fisubl
dec
mul
je
cmp
jecxz
stos
mov
repz
pop
and
mov
mov
sub
xchg
mov
mov
add
fwait
rcl
popf
xor
sub
orb
pop
clc
jne
xor
scas
pop
sahf
xchg
mov
xor
sub
lods
jo
aas
mov
mov
adc
mov
and
pop
jmp
pop
and
icebp
stos
xchg
cli
gs
or
xchg
js
mov
push
dec
dec
add
popa
mov
mov
mov
xchg
lret
mov
mov
jp
jo
pop
fisttpll
dec
scas
or
cmp
mov
sub
pop
adcl
cs
inc
repnz
mov
outsl
and
in
fsubrs
xchg
data16
loop
rcrb
bound
push
sbb
pusha
sbb
mov
cwtl
sahf
sbb
mov
add
imul
aam
stos
repnz
das
mov
das
ss
sub
sahf
mov
push
addr16
bound
out
push
mov
adc
mov
jb
adc
xchg
std
jno
dec
jg
sub
popa
xchg
insb
push
lcall
cmp
mov
in
pop
dec
mov
into
in
and
dec
test
movsb
add
inc
lcall
rcrl
xchg
mov
xchg
jb
lret
pop
sub
in
mov
inc
outsl
cmp
xor
pushf
call
and
mov
mov
mov
leave
add
jmp
adc
xchg
mov
sbb
jle
adc
js
and
scas
add
mov
roll
pushf
mov
arpl
dec
inc
shrl
cmpsb
pop
jne
decl
xor
ja
jns
cmp
sub
sub
mov
adc
and
les
dec
cmpsb
enter
cld
xchg
ds
pop
shrl
push
out
inc
movsl
mov
sbb
mov
std
in
into
lahf
rcl
sub
jg
arpl
aam
and
lods
fsubp
fimull
btr
and
insb
cmp
ret
jmp
xor
cmpb
lahf
popa
dec
and
mov
mov
jb
sub
mov
fmull
ret
pop
mov
push
xchg
test
test
sahf
mov
and
ja
sbb
push
jge
cmp
xor
fisubrl
daa
or
hlt
add
sbb
push
testb
sub
ja
cmp
movl
jl
sub
xchg
loop
jb
ds
and
add
pop
test
push
mov
jne
inc
push
add
dec
xor
xchg
add
or
cmp
scas
xchg
daa
int3
mov
ret
fwait
sub
inc
sub
lds
mov
mov
adc
mov
sarl
iret
push
aam
xchg
leave
mov
arpl
mov
dec
lcall
jbe
pop
pushf
add
adc
jl
test
dec
inc
jmp
pusha
sbb
int
lea
mov
add
mov
jle
jp
in
adc
cmp
xor
sti
imul
cmp
test
rol
in
clc
fstps
or
shl
mov
dec
sbb
fmuls
or
cmpsb
jecxz
pop
int
and
popf
inc
call
or
rcrl
icebp
adc
xchg
xlat
or
stos
aad
push
xchg
test
push
int
push
mov
jle
jne
push
push
test
in
jl
add
and
push
in
clc
xlat
push
cmc
jne
out
les
enter
or
mov
add
cmc
pop
xchg
jmp
xchg
mov
mov
das
and
stc
movsl
cld
xlat
inc
pop
iret
cmp
arpl
or
xor
and
push
inc
cmp
inc
aaa
push
sbb
aam
sti
mov
outsl
jge
sbb
mov
outsb
jecxz
lahf
cmp
and
push
sahf
ss
ds
das
inc
mov
mov
decb
popa
dec
mov
test
mov
cmc
aad
rcl
xor
mov
iret
pop
cmc
adc
lods
adc
adcl
push
in
jo
lds
jns
cmp
shrb
loop
sbb
xor
sub
pop
dec
xchg
lock
sub
xorb
mov
imul
mov
dec
cmp
outsl
xchg
addb
testb
mov
cmp
insb
adc
mov
jmp
adc
imul
mov
xchg
out
cs
mov
add
sbb
daa
faddl
push
lds
pop
xor
push
mov
jns
ficomps
mov
bound
ja
mov
movb
add
dec
push
retw
jmp
push
mov
jo
idivb
xchg
lret
jmp
incl
adc
sahf
daa
jo
sahf
pop
arpl
sub
xor
aaa
lods
cmp
add
jns
or
fists
out
mov
jp
mov
repz
mov
sbb
enter
testl
test
add
arpl
inc
popf
scas
mov
scas
ficompl
jbe
es
movsb
jae
stos
lcall
pop
push
sub
je
cmpsb
lcall
jbe
ljmp
cmpsl
test
fs
or
sub
rcr
stc
sub
ds
dec
add
jnp
fwait
ja
fwait
adc
xchg
inc
adc
and
cmp
cld
add
push
dec
bound
dec
xchg
outsb
pop
xchg
ja
or
dec
je
das
jl
mov
out
jbe
add
jp
sub
xchg
enter
xchg
inc
jnp
imul
pop
adc
enter
mov
adc
add
ret
push
and
mov
cltd
into
es
call
repz
jle
repz
jo
mov
loopne
scas
dec
push
adc
stos
push
xchg
test
lcall
insl
push
inc
mov
aam
pushf
cmpsl
shll
pop
lock
aam
loop
nop
sub
and
xor
sbb
push
jg
js
add
sub
lods
aas
cwtl
cld
lcall
inc
aam
adc
in
sbb
jle
imul
dec
fdivs
pop
pop
loope
xchg
jge
je
dec
fmull
push
pop
jne
add
and
notl
push
jb
nop
mov
lret
and
out
out
and
cmp
adc
cmp
shll
sbb
mov
push
popa
or
por
inc
imull
xchg
andb
jns
mov
mov
out
test
mov
gs
mov
mov
loop
inc
cmp
lcall
movsb
add
jge
jg
mov
or
dec
sbbb
int3
ljmp
push
pop
dec
cmpsl
je
jnp
fcompl
mov
arpl
scas
mov
push
hlt
mov
fisttps
idivl
dec
jecxz
negl
cltd
popa
push
loope
insb
stos
push
shlb
daa
out
jmp
sbb
xor
sbb
dec
mov
testb
sub
cli
inc
mov
jo
mov
adc
jmp
scas
in
cmp
pop
test
in
inc
xchg
cmpsl
sbb
adc
pop
xchg
inc
inc
inc
jns
js
loopne
fs
mov
out
push
in
mov
leave
sbb
inc
inc
imul
test
arpl
sbb
pop
fdivrs
or
or
cwtl
jno
fcoml
push
int
pop
jmp
sub
pop
and
jbe
fwait
xchg
fimuls
js
stc
orb
jo
test
dec
mov
loopne
ds
and
sbb
loope
push
add
fdivrl
and
add
mov
lock
xchg
xchg
lods
ljmp
push
xor
fs
jle
xor
ss
scas
adc
jno
pop
lods
notl
icebp
lock
push
dec
xor
inc
lret
mov
int3
lods
stc
pop
fldcw
outsb
jb
push
out
inc
push
inc
or
gs
fbld
jmp
inc
iret
into
add
sbb
pushl
test
cmp
fiadds
out
sahf
push
sbb
or
jle
sbb
mov
mov
cmp
pop
negb
mov
jl
cmpxchg
call
je
fiaddl
lea
fwait
pop
adc
mov
aam
mov
mov
filds
sbb
pop
sub
add
jg
dec
jmp
jae
pop
xchg
jmp
add
mov
mov
popf
ret
int
int
jle
and
jecxz
push
in
repnz
rcrb
xor
scas
cmp
inc
cmpsl
call
dec
hlt
push
push
push
mov
pop
add
out
mov
jnp
mov
pusha
fldcw
sbb
lea
xchg
addb
push
inc
std
xchg
into
les
out
fs
pop
jo
and
fs
mov
mov
or
adc
sub
in
dec
shrb
loop
and
or
mov
xor
outsl
jp
cmp
push
mov
sbb
sub
in
fadds
mov
clc
jg
xor
data16
shlb
daa
adc
nop
loope
lock
test
xchg
inc
mov
loopne
and
cs
mov
push
mov
xchg
adc
adc
jge
lods
jle
and
nop
mov
nop
loop
and
jge
xchg
icebp
shll
lods
into
aaa
mov
iret
inc
test
test
loop
rcll
or
xchg
mov
mov
add
imul
rcrb
push
lahf
mov
jge
dec
or
xor
nop
add
fdivrl
in
jmp
cmpsb
xor
orb
mov
ja
xchg
sbb
clc
mov
adc
jbe
pop
rcll
insl
icebp
push
add
fcmovne
mov
insl
add
iret
mov
pop
outsb
and
pop
outsb
fsts
and
xor
lds
cs
mov
xor
adc
cmp
das
fldenv
movsl
sbb
jnp
mov
mov
mov
lds
pushf
inc
fimuls
xchg
popa
cmpl
jae
jne
je
and
out
fwait
xor
bound
jns
ss
fwait
push
sbbb
repz
jecxz
sub
inc
push
lea
int3
cmp
arpl
cmp
lahf
pushf
addr16
mov
scas
xor
add
jp
xchg
xchg
lahf
mov
lock
sti
jno
xor
add
or
iret
dec
lods
add
inc
dec
imul
hlt
jne
jnp
in
mov
add
xor
sbb
sahf
popa
in
out
mov
bound
out
ljmp
push
das
frstor
jmp
iret
stos
jmp
lds
loop
xor
mov
addr16
jmp
lock
jb
sbb
movsl
int
and
adc
pop
ret
flds
mov
subl
out
jl
mov
ja
lods
mov
cwtl
ss
sbb
mov
adc
mov
mov
mov
pop
sub
mov
pop
lret
sub
lret
sub
inc
nop
mov
scas
cmpsb
pop
sub
lcall
cmpsl
arpl
lcall
push
push
lea
test
rolb
lods
outsb
xor
stc
and
sub
or
repz
fnclex
pop
pop
lds
loopne
lret
cmovae
insb
jns
xor
fisubl
fsub
mov
addl
js
lahf
or
das
xchg
mov
push
push
fs
lcall
add
mov
xor
mov
js
loopne
xchg
mov
sub
hlt
rorb
adc
pop
imul
mov
sub
inc
xchg
sbb
movsl
xor
jge
test
outsl
mov
fcmove
cmpsb
xchg
sub
dec
cmpsb
out
rcr
in
mov
jbe,pn
mov
popa
dec
rcrl
jae
loop
jecxz
cwtl
jae
cmp
sub
mov
in
lds
mov
inc
mov
xchg
mov
inc
cmpsb
mov
xor
xchg
lret
lcall
loop
repz
pop
push
fidivrs
cltd
sub
popf
aad
iret
mov
out
cmp
inc
jmp
adc
and
sbb
mov
icebp
jns
adc
and
dec
jns
out
popf
bound
mov
shr
stc
addl
insb
push
outsb
dec
dec
xchg
into
sub
jb
int3
sahf
dec
and
add
xlat
add
mov
jb
shr
xchg
shll
sbb
xchg
cmp
mov
adc
into
js
rcr
flds
cmpsb
inc
dec
jp
dec
fstl
add
std
or
and
dec
cltd
and
xchg
cmp
sbb
shrb
ja
push
cli
push
and
sbb
in
mov
mov
cmc
ja
mov
andb
mov
lcall
or
inc
std
inc
inc
pop
inc
mov
dec
push
push
and
xor
imul
inc
push
jl
ljmp
xchg
or
inc
xchg
push
scas
pop
mov
push
mov
mov
popf
das
mov
push
dec
lods
popa
cmp
dec
std
pop
pop
pusha
jl
iret
sbb
lods
dec
xchg
dec
mov
add
mov
pop
mov
roll
ret
sbb
lock
xchg
divb
pop
out
mov
repz
fwait
fldt
xor
adc
push
add
inc
popa
movsb
lret
lret
sbb
fnstenv
sub
dec
mov
pusha
pop
mov
cmp
mov
pop
aaa
mov
insb
or
std
ljmp
pop
jae
dec
es
hlt
movsl
std
pop
out
cltd
mov
dec
and
stos
iret
cs
scas
imul
jns
in
sub
imul
xchg
or
xchg
ss
fidivrl
inc
ds
cmp
xchg
lret
xor
jns
inc
stos
es
dec
rol
jecxz
mov
push
int3
inc
loop
jmp
cmc
les
rep
dec
sti
sbb
add
inc
in
mov
lahf
pop
aad
pop
mov
enter
std
xchg
imul
insl
mov
aas
sti
mov
mov
out
jnp
js
fnstsw
xchg
rcr
mov
loope
mov
loopne
stc
icebp
pushf
adc
loope
mov
mov
pop
test
outsb
mov
and
sub
iret
push
inc
int3
mov
mov
es
pop
fstpt
or
lahf
jo
push
outsl
outsl
cli
out
inc
sbb
or
insl
cld
dec
pop
and
xor
push
adcl
ljmp
sub
lahf
push
cmpl
call
xor
lock
jno
mov
cmpb
push
pop
sub
inc
fnstcw
jg
pop
hlt
sbb
cmp
daa
mov
popa
add
mov
mov
test
mov
insb
cmp
mov
or
inc
cltd
pop
mov
stc
das
aam
fsubrl
adc
dec
je
cmp
leave
insb
mov
pusha
mov
sub
xor
cwtl
ret
inc
mov
add
arpl
xchg
pop
lret
sub
into
scas
dec
popl
xlat
jp
inc
data16
das
notb
pop
adc
xchg
mov
lods
sub
xchg
cmc
inc
mov
decl
cmp
aas
pop
mov
js
loopne
in
push
sub
pop
cmp
lods
sbb
insl
add
bound
add
fcmovu
adc
test
sahf
daa
int3
es
sub
xor
imul
into
mov
push
icebp
mov
cmc
out
fidivrl
int3
gs
negl
or
add
or
loop
pushl
jg
das
mov
xor
cmp
xchg
mov
adc
cwtl
jl
fwait
pusha
cli
lock
test
imul
xor
and
aam
lahf
xlat
loope
pop
adc
fsubrs
ret
cli
mov
hlt
pop
lret
addr16
mov
jae
and
jbe
push
je
dec
cmp
mov
adc
push
push
jl
mov
ds
xor
pop
in
sbb
aad
dec
test
bound
push
fstpt
sti
iret
daa
mov
mov
ss
cmpsl
adcl
mov
cmp
repz
enter
sti
cmp
jbe
pop
insb
orb
mov
xchg
mov
ficomps
push
lock
imul
xor
adc
mov
jbe
std
sbb
push
pop
jmp
lret
mov
aad
jge
xchg
out
ret
repz
jge
loope
test
jbe
mov
jns
pop
and
test
test
je
inc
adc
sbb
sahf
leave
dec
pushf
jbe
dec
lret
xchg
roll
cmp
jecxz
add
fiaddl
pop
jbe
sub
in
in
cmp
add
mov
dec
inc
xchg
mov
jecxz
in
dec
xchg
jle
jmp
cli
fstl
or
fisubs
data16
enter
pushf
pushf
fsubrs
data16
lds
sbb
inc
ss
movsb
adcl
and
mov
sbb
fs
test
into
and
repz
push
les
inc
sti
xchg
les
fidivl
stos
mov
pushf
subl
inc
loop
lea
add
inc
dec
sbb
rorb
inc
or
pop
and
out
lret
sahf
subb
in
iret
cwtl
dec
rcrb
ret
jb
cmc
pop
in
xor
or
xchg
adc
inc
clc
je
stc
clc
pusha
cmp
sub
cwtl
sub
jbe
mov
adc
lcall
add
dec
sbb
sub
inc
mov
hlt
cmp
xor
out
inc
sub
arpl
repz
jge
ljmp
add
add
push
in
jecxz
sub
insl
jae
push
lret
ja
add
push
cmc
xlat
push
push
dec
out
popf
popa
fisubs
test
push
push
mov
or
fstpt
int
or
insb
xlat
xchg
xchg
adc
push
andb
lods
mov
jge
out
sti
mov
repz
inc
test
fisttpl
jne
pop
shr
stc
mov
jp
or
jns
std
xor
inc
test
mov
pop
pop
outsl
icebp
cmp
arpl
xor
fnsave
pop
sti
mov
icebp
dec
stos
adcb
jo
pop
push
out
pop
sbb
cli
add
out
pop
cs
rclb
mov
mov
movl
push
cltd
lcall
stc
fstl
lods
out
xor
xchg
stc
dec
cwtl
stc
cmc
out
das
inc
cmp
scas
cmp
cld
fucom
lods
addb
mov
loopnew
sbb
shll
push
shlb
push
jns
cmpsb
dec
aaa
and
int3
inc
lcall
nop
sbb
js
outsb
out
clc
and
outsl
push
sub
popf
arpl
lret
xchg
jns
sbb
push
dec
xor
mov
add
jg
dec
xchg
adc
mov
cmp
lcall
les
ja
adc
pop
ret
rcrl
ret
xlat
movsl
dec
adc
jge
dec
insl
sbb
std
int
sahf
mov
mov
lret
xchg
lahf
icebp
aam
mov
mov
mov
test
ror
pop
fcomps
xchg
mov
xchg
and
ret
out
dec
sahf
int
and
out
lcall
fsub
jb
js
fisubl
jo
dec
test
inc
rcr
lahf
inc
sub
xor
repnz
add
mov
fstpl
in
or
dec
mov
or
jg
imul
push
adc
daa
sbb
push
or
in
xlat
in
ds
and
lods
dec
sbb
fwait
cs
decl
cltd
sub
adc
jge
imul
cmp
jmp
dec
and
sub
and
xchg
aam
fwait
je
jg
int3
pop
dec
repnz
jmp
jecxz
out
ljmp
mov
xchg
xchg
outsb
push
inc
mov
mov
scas
pop
int
inc
dec
int3
test
inc
jle
je
push
push
lcall
scas
jl
xor
imul
lret
pusha
jg
mov
pusha
mov
leave
int3
push
adc
sub
rcl
adc
adc
and
sti
pop
mov
dec
loope
dec
cmpsl
pusha
sub
shrb
xor
sbb
dec
xchg
lods
lret
push
xor
out
out
mov
mov
bound
sub
int3
pop
push
mov
sysret
mov
sarb
cwtl
jns
mov
adc
test
sub
hlt
and
xchg
xchg
iret
xlat
pop
push
mov
cmp
cmp
dec
push
je
aas
je
imul
cli
pushf
push
mov
adc
sub
dec
mov
clc
add
mov
xchg
fisttpl
and
andps
or
icebp
stos
repnz
js
out
push
or
jl
adc
movsl
and
pop
sub
arpl
xchg
cmpsl
sti
sbb
lret
lret
sbb
mov
add
jno
and
mov
xchg
and
mov
les
loope
loopne
insb
xor
sbb
inc
mov
inc
sbb
orl
ret
sahf
stos
fidivl
mov
mov
je
lods
pop
je
jge
add
aaa
push
dec
xchg
mov
jns
mov
dec
div
sbb
xchg
mov
subl
push
adc
cmp
jge
pop
loopne
xchg
mov
adc
fisubl
les
mov
xor
add
mov
sbb
push
fimuls
out
inc
and
leave
movsl
inc
or
orb
mov
jecxz
dec
and
sub
lods
xchg
cltd
lcall
cmp
je
or
int
or
mov
ficoml
test
or
and
sbb
nop
mov
cmc
lret
push
daa
repz
sub
dec
dec
dec
movsl
int
sahf
iret
gs
ror
lret
test
pop
cwtl
mov
sbb
lds
ret
push
xchg
pushl
int
pop
sub
js
pop
jecxz
std
sbb
pop
das
mov
push
sbb
ds
jg
pop
inc
mov
ss
sub
or
jno
inc
sub
pop
sbb
push
fs
clc
cmp
inc
jae
fincstp
enter
mov
xchg
cltd
dec
int3
mov
dec
test
xor
push
sti
nop
jge
mov
dec
dec
push
cmp
in
ret
dec
cmpsb
xlat
jnp
inc
jne
mov
dec
or
cld
ret
adc
add
add
int3
sti
lcall
mov
inc
sub
ret
and
pop
fisttpll
popf
in
ret
cmc
pusha
movsl
lds
mov
sahf
jecxz
xor
loop
ljmp
dec
call
cld
xchg
fsts
xchg
adc
xor
or
in
jecxz
scas
jne
aam
inc
xor
rcrl
sub
fadd
inc
loope
jecxz
sti
lods
sbb
pop
push
pop
and
mov
sti
xor
cmp
mov
loop
mov
add
xchg
rorb
shll
jo
add
adc
push
jae
ljmp
lods
negl
lods
fsubr
enter
clc
dec
lahf
or
lea
mov
sbb
xchg
jo
sub
cmc
pop
and
or
or
mov
stos
into
insl
mov
jle
sbb
cltd
test
int
lcall
test
ljmp
add
cmpsb
in
popf
pop
aam
lods
repz
and
pop
cmp
dec
iret
jp
cs
pop
xchg
sarl
dec
call
dec
shrb
in
rol
push
stos
and
xor
sti
cmpsl
mov
or
jl
add
sub
push
cs
push
lods
xchg
hlt
js
sbb
leave
sub
imul
xchg
or
out
dec
stos
xor
fdivr
jnp
rol
add
imul
pop
mov
push
daa
jl
push
roll
rep
mov
loopne
jno
inc
cli
aad
movsb
mov
scas
pop
add
int
mov
imull
pop
in
adc
mov
cs
fldcw
movups
and
jbe
xchg
arpl
leave
push
scas
enter
stc
repz
mov
mov
push
lock
fistpll
enter
lahf
lock
or
lret
ficomps
xchg
inc
mov
xor
hlt
jnp
rcrb
xchg
push
and
repz
cld
sbb
cld
dec
ds
mov
es
ss
sbb
xor
lcall
fcoms
js
xor
sub
mov
mov
popa
dec
inc
popf
mov
test
inc
sti
xor
frstor
jl
in
cmp
test
sbb
push
push
lock
scas
fmul
cmpb
and
or
es
icebp
into
ljmp
iret
nop
mov
mov
test
inc
ffreep
fdivr
into
cmpl
les
scas
pop
nop
mov
int3
ljmp
xchg
dec
mov
xor
adc
mov
sub
adc
xlat
add
jbe
jbe
loope
push
push
push
lds
in
std
aad
lahf
insl
pop
jg
addb
cmp
inc
subb
pop
or
xchg
mov
outsl
daa
rolb
push
jl
das
es
xchg
jge
inc
pop
es
add
mov
lods
fistpll
jle
dec
push
in
inc
push
rcrb
push
dec
bound
filds
call
sub
call
out
mov
repz
js
das
je
pop
mov
and
sahf
push
pop
or
and
pusha
and
xchg
xor
jns
xchg
dec
sbb
dec
push
jns
inc
cmp
xchg
das
addr16
popf
mov
pushw
in
cmp
ja
xchg
xorb
mov
sbb
ret
and
and
test
adc
popf
orb
or
push
leave
in
das
outsb
ud0
fisttpll
clc
das
outsl
xor
lods
mov
mov
enter
lcall
jmp
jbe
sub
inc
xor
out
js
xchg
mov
in
lahf
imul
inc
xor
jb
pop
test
clc
imull
push
push
es
cmp
js
push
cwtl
mov
mov
or
lret
jecxz
int
adc
mov
xor
pusha
es
ljmp
pop
sub
fnstsw
mov
mov
inc
xchg
movsl
mov
adc
fdivrl
icebp
cli
jecxz
mov
adc
jnp
fcmovne
jg
pop
mov
xor
push
movsl
std
mov
jne
cmp
stc
shrb
sub
sahf
fstl
sub
mov
sub
lods
xchg
inc
xor
dec
xchg
or
incb
pusha
xlat
dec
push
ja
fstp
mul
ss
lcall
add
mov
add
out
dec
lds
or
shl
insl
mov
sub
mov
je
jb
mov
jnp
sbb
mov
pop
mov
data16
push
add
sahf
clc
enter
mov
pop
cmp
fidivrs
negb
push
not
push
out
ds
jnp
loopne
iret
rolb
into
cmp
pop
or
and
mov
add
adc
or
mov
xchg
out
push
inc
cmp
mov
popa
leave
add
mov
mov
push
movsb
enter
cltd
mov
jg
mov
in
sub
test
mov
mov
sarb
loope
push
dec
mov
cltd
movsl
lods
jno
cs
pop
fnsetpm(287
das
ds
jne
sarl
xlat
xlat
and
mov
pop
jle
push
fcom
mov
adc
and
push
and
sarb
movsl
jmp
cli
aad
xor
sbb
xor
add
inc
arpl
lcall
jecxz
mov
jg
sti
imul
stos
neg
test
cmc
add
daa
lea
push
lods
sub
rorl
sarl
pushf
aaa
fcmovu
mov
cmpsb
and
in
pop
fisubrl
inc
cmpl
int
hlt
out
jge
jae
es
shrb
jae
lea
xchg
push
push
xor
in
dec
shl
inc
inc
mov
jb
nop
add
xor
mov
or
push
ret
fidivrs
fwait
addl
sub
jecxz
dec
pop
xchg
xchg
bnd
loop
lret
adc
inc
and
ret
add
ror
popa
cltd
dec
mov
mov
add
sub
push
dec
sbbb
push
mov
push
rol
testb
pop
cs
mov
mov
popf
xor
dec
bound
dec
mov
lret
daa
push
jmp
je
mov
gs
jge
icebp
into
inc
mov
aad
pop
and
decb
jge
adc
jo
cmp
xchg
imul
das
daa
cmp
outsb
out
push
pop
outsb
adc
push
sub
mov
mov
pop
hlt
dec
fsub
out
push
std
cmp
xchg
call
push
scas
jge
sub
cmp
pop
jae
push
rcll
add
jbe
fstpl
int
lods
sti
pushf
fists
jl
call
adc
mov
out
bound
dec
ljmp
imul
cmp
pop
push
push
jl
pop
sub
push
sub
or
cltd
cli
push
mov
inc
add
and
push
loop
fdivrs
int3
lret
mov
in
sub
or
or
push
repz
push
mov
dec
jb
in
cmpsb
outsl
mov
add
lahf
loopne
add
dec
popa
popf
dec
popf
xchg
shlb
jo
ret
cmp
out
and
mov
shlb
shr
int
mov
inc
mov
pop
negl
add
mov
dec
mov
sub
xor
ja
subl
pop
jecxz
scas
test
mov
mov
inc
mov
daa
xor
jp
test
xchg
gs
jg
or
mov
add
cmp
and
data16
add
jp
mov
into
xor
addr16
mov
cmpsb
dec
sbb
mov
lods
out
push
jnp
imul
mov
jl
cmp
inc
inc
mov
jl
decb
cmp
inc
or
std
sbb
addr16
outsb
jne
xor
gs
scas
xchg
cmovge
ficomps
aas
sub
mov
mov
adc
repz
fnsave
in
mull
gs
sbb
mov
clc
pushf
xor
push
cltd
addr16
xor
loop
std
push
mov
mov
ret
or
mov
out
leave
cmp
sbb
cmc
out
add
pop
test
jae
out
cltd
cld
imul
call
rclb
outsl
xor
cmp
inc
aad
mov
xor
pop
xor
test
andb
push
cld
xchg
sysexit
inc
xchg
popf
jecxz
mov
adcl
add
mov
mov
and
popf
adc
jge
xchg
movsl
jp
or
inc
fwait
sahf
and
bound
out
pop
adc
lds
stos
cwtl
shl
addr16
push
fmull
leave
adc
ror
aad
inc
push
dec
out
adc
push
mov
in
pop
ljmp
or
xor
xlat
adc
andl
cmp
inc
and
outsl
sahf
push
pop
lretw
imul
popa
daa
sbbb
mov
push
les
aad
stos
fmuls
sub
and
mov
push
lea
int
movl
cmp
mulb
mov
loopne
push
and
mov
int3
pop
xchg
arpl
lahf
sahf
insl
pop
sahf
lcall
stos
ficoml
stos
adcb
hlt
xchg
aaa
gs
lods
mov
or
sbb
repnz
cmpb
out
add
mov
pop
adcb
outsb
jo
pop
fldt
enter
mov
mov
jae
xchg
and
sub
mov
mov
mov
popf
repz
jae
cmc
dec
iret
jge
jl
aad
out
lret
repz
jo
sbb
push
push
ja
adc
es
mov
jb
cltd
lock
mov
push
or
scas
xchg
mov
cmpsb
xchg
in
mov
xchg
add
pop
pop
mov
dec
sbb
shll
addr16
stos
and
shll
xchg
add
jo
cmc
sbb
xor
add
mov
and
test
leave
and
jecxz
ds
loopne
sub
or
sbb
mov
jo
lods
adc
stc
bound
inc
sub
inc
pushf
es
sahf
jecxz
dec
insl
lahf
push
and
fwait
adc
dec
mov
ret
nop
pop
loop
xor
clc
sahf
xchg
mov
dec
lret
push
repnz
out
sbbw
add
dec
xchg
mov
cmp
and
adcl
jns
sahf
dec
test
xor
mov
addr16
push
sub
pop
add
testb
add
adc
popa
js
and
cmc
adc
inc
mov
aas
ret
mov
dec
push
and
lcall
or
xchg
and
dec
rclb
outsl
bound
cs
jmp
xor
pusha
push
repnz
movsb
lods
adc
cmpsb
loop
mov
mov
test
movsb
sbb
test
mov
ret
mov
test
jecxz
cmp
gs
add
fs
or
pusha
enter
lock
rclb
stos
clc
es
push
jp
aas
sbb
pop
iret
sbbb
xchg
js
push
pop
xchg
xor
mov
mov
jbe
xor
sahf
shrd
mov
shll
jns
gs
gs
rcll
and
lods
sub
sbb
sti
rclb
cmp
ret
out
mov
lea
mov
dec
inc
jbe
das
sti
adcl
mov
rorl
addb
mov
mov
addb
jbe
push
out
sub
std
insl
or
mov
out
test
cmp
xor
sub
stos
cmpsl
jl
dec
test
cmp
mov
test
inc
ja
daa
jl
cmp
push
push
add
jno
clc
add
aas
rolb
inc
fs
in
add
mov
cmp
rorb
movsb
mov
push
lods
xchg
pop
pop
sbb
cwtl
add
add
icebp
fs
fdecstp
pop
mov
jno
lret
inc
jbe
call
out
and
int
dec
cmp
jp
lea
adc
or
movsb
mov
adc
test
insl
test
inc
std
out
and
bound
pop
orb
mov
jg
in
in
test
rcrb
mov
stc
mov
mov
fs
dec
lret
into
push
xchg
xchg
adc
notb
stos
das
out
cmpsb
add
stos
xor
pusha
lods
inc
cmc
movsb
push
inc
int
fdivr
cmp
jbe
int
loop
test
aad
xlat
ljmp
push
mov
mov
repnz
ja
iret
cmpl
test
inc
test
and
cmp
scas
cmp
inc
in
pop
shll
push
push
push
pushf
add
sub
pop
les
lahf
icebp
add
out
sbb
jle
inc
mov
mov
sahf
or
sub
outsl
lods
repnz
xchg
stos
inc
je
mov
test
jnp
adc
hlt
xchg
jo
lret
test
in
in
fwait
out
test
cmp
pop
negl
mov
fstps
or
push
pop
mov
adc
mov
mov
pop
mov
out
xchg
aas
loope
sarb
push
pop
inc
addr16
inc
push
and
jo
sub
insl
movsb
sbb
add
and
mov
push
mov
bound
jns
pusha
daa
xlat
call
push
andl
cmp
cwtl
fwait
enter
loopne
mov
push
movsl
adc
add
push
ret
jbe
sub
jnp,pt
xchg
mov
xorb
push
ret
mov
cmpsb
xor
in
stos
fwait
jo
daa
adc
aam
mov
sbb
cmpsl
mov
cmpsl
clc
in
xor
jecxz
inc
xchg
int3
test
pop
aaa
cmp
mov
shlb
daa
cmp
movsb
negb
stc
jb
data16
push
mov
sbb
insb
mov
mov
lret
imul
mov
sub
pop
adc
mov
sub
lods
push
mov
jbe
cmp
add
stos
push
mov
lret
jne
or
popf
xor
bound
jg
fldenv
add
scas
les
xor
sub
stos
fsub
jo
fcompl
iret
inc
mov
xchg
cmp
xor
sbb
lret
mov
jae
mov
fwait
pop
pop
dec
sbb
mov
call
pop
loopne
mov
and
mov
adc
sbbb
aad
out
test
mov
js
mov
in
pop
insb
insb
or
mov
testb
fiadds
fdivp
arpl
cli
and
out
fisttps
jne
push
je
mov
rol
or
sahf
imul
pusha
push
data16
dec
test
fsubrp
test
addr16
cmp
dec
sbb
pop
cmpsb
imull
push
fbstp
ljmp
in
push
or
xor
test
jno
push
adc
jp
jecxz
les
cmp
mov
pop
sub
adc
push
inc
int
movsl
xchg
cmp
jle
rolb
inc
mov
orl
aad
cld
pop
enter
stos
sub
lret
arpl
data16
into
loope
jb
int
pop
das
xor
leave
xor
call
stos
insl
lock
mov
enter
dec
mov
call
fistpll
idivb
or
insb
in
inc
pushf
or
inc
insb
xor
inc
movsl
ja
ja
mov
add
loopne
dec
repz
jl
sub
out
pop
fucomip
enter
pop
les
pop
mov
addr16
mov
xor
shl
mov
loop
pop
or
insl
inc
sti
cmpsl
inc
in
push
mov
insb
je
cmc
aaa
and
or
jge
adcw
in
xor
dec
jmp
jbe
mov
fnstcw
mov
popf
orl
dec
jmp
out
stos
push
ficoms
mov
mov
fistpll
xchg
loope
std
popf
xchg
mov
mov
mov
dec
shrl
int3
inc
imul
cmp
push
jnp
jecxz
ret
popa
aam
jno
jb
dec
inc
pop
mov
or
das
mov
pop
shrl
sub
adc
sahf
mov
cwtl
out
add
or
push
mov
dec
jl
sbb
mov
cmpsl
ljmp
dec
out
dec
mov
out
mov
imul
mov
stos
mov
add
jno
inc
addr16
pop
push
loopne,pn
cmp
xor
xor
xcrypt-ecb
cmpsl
dec
scas
stos
arpl
nop
scas
pop
repz
push
mov
add
popf
add
sar
clc
xlat
cmp
leave
mov
les
popa
push
cmp
gs
adc
fadds
sub
rcrl
shlb
cli
xchg
inc
mov
push
mov
insl
mov
and
pushf
sbb
aad
push
cs
popa
mov
sbb
and
lods
aaa
push
mov
into
cs
mov
out
call
je
xor
mov
jo
in
popf
mov
popf
sub
incl
outsl
in
cmp
jle
addr16
jne
inc
cwtl
xor
gs
adc
bound
cmc
mov
pushf
add
lds
inc
loopne
shrl
not
pop
shl
push
aam
scas
rorl
out
mov
push
andb
push
je
ds
aam
sbb
aas
pusha
shr
hlt
xor
mov
lret
and
xchg
inc
xchg
xchg
imul
rcr
xor
jl
lcall
sbb
and
pop
jno
lret
jae
and
dec
imul
rcrl
jae
movsl
push
jno
push
xor
jno
jge
cltd
adc
fwait
test
in
cli
fsubrp
loope
cmpsb
push
jb
cs
fcoms
out
imul
mov
add
jg
enter
mov
scas
fnstcw
jne
in
out
mov
ficomps
lods
fdiv
sbb
scas
insb
lods
addr16
push
jge
mov
into
popf
inc
mov
loope
inc
frstor
mov
add
fdivp
daa
out
inc
mov
or
out
in
mov
push
iret
push
lcall
fs
sub
data16
jno
inc
jecxz
jnp
jg
arpl
xlat
inc
xchg
outsb
imul
adc
jp
push
inc
ds
ret
stos
nop
pop
pop
jle
ja
fists
jmp
cmpsl
add
pop
mov
add
ds
bound
sub
pop
fcoms
jp
mov
test
lret
adc
nop
rorl
jg
test
inc
test
xchg
mov
pop
cmp
lods
mov
cmpsl
adc
popf
out
adc
xor
ljmp
sbb
add
push
inc
aaa
cmp
dec
adc
mov
push
push
into
ftst
sub
lods
rorl
cmp
cmpsb
lods
jnp
rorl
adcl
inc
sbb
or
push
stc
push
dec
push
pop
leave
stos
jge
push
sbb
pop
dec
pusha
sbb
loopne
push
sub
sbb
lods
xor
iret
aas
push
out
lahf
mov
sbb
call
mov
jno
incl
sub
sbb
pusha
stos
test
mov
push
push
inc
cmp
imul
iretw
inc
mov
notb
dec
loope
inc
sub
add
in
xchg
or
imul
sbb
sub
inc
pop
stos
mov
ds
addl
fldenv
mov
ljmp
jl
out
mov
sbbb
scas
mov
adc
xchg
das
add
mov
xchg
inc
imul
cld
aam
pop
push
or
sub
jnp
sahf
into
push
stos
sti
sub
aas
mov
push
pop
int
addb
ret
jnp
mov
nop
mov
xor
ljmp
cmp
and
xchg
add
adc
cmp
les
cltd
and
divl
mov
jge
mov
lret
sbb
dec
mov
or
adc
addr16
mov
cmp
in
inc
in
mov
push
scas
adc
pop
out
lret
testl
int
aad
push
add
pop
mov
testb
dec
or
cltd
aas
insb
pop
and
jmp
in
fmul
inc
pop
inc
pop
shl
in
inc
leave
scas
mov
jo,pn
ds
in
mov
cmpsl
inc
insl
jnp
es
jmp
lahf
fwait
sub
lret
test
mov
sbbb
fs
mov
add
jnp
lcall
dec
sbb
out
inc
outsb
push
fists
idiv
flds
pop
fdiv
mov
shll
inc
les
xor
stc
add
cmpsb
and
push
mov
lods
mov
pop
arpl
and
aas
or
mov
xchg
pop
fs
xchg
or
ror
inc
adc
pushf
pop
dec
sahf
inc
repz
and
add
call
sbb
shlb
mov
mov
add
pop
jbe
pop
loopne
out
jb
rcrl
aaa
shl
xchg
xor
insb
gs
dec
hlt
push
fsubr
sahf
jb
mov
jno
push
dec
movaps
test
xor
push
outsl
inc
xor
inc
frstor
mov
pop
push
mov
add
sbb
mov
lret
mov
shlb
loop
test
pop
mov
inc
inc
jno
int3
test
sbb
sbb
sbb
aas
outsl
pop
or
imul
xlat
js
pop
pusha
sbb
push
xchg
lods
inc
jno
jb,pn
cwtl
xor
ficomps
das
data16
fs
scas
addr16
inc
sahf
sahf
nop
add
lahf
push
and
inc
adc
ss
push
adc
cmc
std
cwtl
loop
aad
mov
pop
xchg
pusha
lret
push
orb
mov
pop
pushf
in
cwtl
insl
cli
push
orb
aas
pop
xor
jp
cld
cmpsb
out
xor
dec
jg
adc
xchg
enter
or
cwtl
jns
and
inc
ljmp
mov
fcmovu
inc
dec
sub
std
aaa
and
and
mov
mov
xchg
push
sahf
lods
dec
cltd
fs
leave
fisttpl
push
jle
adc
in
sub
gs
jecxz
lea
stc
lock
jle
cmp
int3
mov
xchg
sub
imul
pop
add
test
add
mov
add
je
xor
fldl
in
negb
or
or
loope
addr16
lods
adc
dec
sbb
xor
or
mov
outsl
or
xchg
lds
inc
das
shl
or
jl
popf
xchg
adc
jl
repnz
and
outsl
imul
lcall
pop
fs
roll
jnp
dec
add
lcall
sub
jne
pushf
xchg
mov
xchg
jae
xchg
mov
int3
adc
pop
pop
iret
dec
mov
inc
cmp
pusha
sbb
add
out
and
negl
popl
popa
adc
clc
aaa
sbbb
inc
adc
or
sti
sahf
fwait
gs
movsb
xor
xor
aas
loope
jae
or
iret
movb
xchg
clc
jo
mov
xor
mov
or
into
rcrl
ret
add
fsubr
jmp
add
mov
pop
mov
inc
ret
mov
leave
fildl
adc
pop
lcall
fidivs
mov
or
sub
imul
icebp
addr16
mov
add
loop
mov
lahf
mull
mov
xor
xor
cwtl
mov
stos
test
mov
mov
mov
shr
dec
bound
je
sbb
push
mov
xor
loope
fsubrs
daa
cmpsl
adc
loop
cmp
or
dec
outsl
dec
ljmp
dec
daa
into
push
lods
push
daa
cmc
loope
mov
and
lea
dec
jl
push
arpl
leave
call
nop
pusha
cmpsl
hlt
inc
xchg
pop
repz
in
aam
mov
lret
cmp
adc
xchg
pop
mov
insl
cltd
cmp
aam
jp
out
test
stos
xor
xlat
lcall
lcall
lahf
int
out
or
inc
fsts
imul
xchg
cli
cmp
xchg
cmpsb
push
das
push
sub
cmp
xchg
test
out
cltd
mov
inc
add
push
xor
pop
das
adc
push
mov
or
scas
enter
sub
call
mov
mul
pop
test
fdiv
sti
mov
loopne
popa
pushf
dec
mov
lods
stc
push
dec
pusha
in
ds
xor
or
add
sub
add
jg
adc
jnp
das
xchg
adc
clc
rclb
enter
or
fwait
leave
insb
les
xor
cmp
mov
xchg
adc
sbbb
fsts
ret
test
imul
loope
inc
mov
mov
rorl
mov
ret
test
movb
fnstcw
add
mov
hlt
or
out
movsb
xchg
mov
jb
aam
dec
add
pop
fstp
icebp
sbb
cltd
inc
inc
stos
and
imul
rcrb
and
cwtl
mov
fisubrl
mov
push
cmp
push
adc
adc
or
std
rcll
dec
mov
cmc
cwtl
adc
addl
add
mov
roll
lods
out
sbb
js
adc
add
mov
ljmp
add
dec
popf
nop
push
inc
testb
dec
sub
inc
or
pop
mov
sbb
pop
adc
xchg
inc
adc
mov
clc
xor
adc
jmp
cmp
roll
test
jmp
aas
xchg
daa
fsubrl
sbbb
pop
xorb
jecxz
add
cld
mov
mov
push
dec
pusha
push
adc
test
fisubs
adc
adc
mov
stc
mov
test
inc
push
insb
lds
push
pop
cltd
adc
aad
cmp
ljmp
scas
dec
xor
mov
out
lret
sbb
add
movsl
dec
sub
mov
imul
xchg
insl
sub
les
sub
add
mov
imul
stos
inc
or
pop
jnp
clc
test
cwtl
mov
and
adc
loopne
ficoml
aam
mov
jl
shrl
sub
into
daa
loopne
cli
dec
lret
mov
outsb
push
xlat
jg
out
adc
mov
xorb
call
inc
shrl
ds
ret
sbbl
call
dec
iret
ficoml
mov
popa
jbe
and
fsub
out
and
jp
shlb
inc
and
fnsave
popa
push
inc
repnz
repz
mov
pop
mov
in
lock
add
xchg
cmp
int
inc
rcl
or
ret
mov
mov
or
mov
mov
mov
xchg
idivb
dec
int3
mov
lock
je
fprem1
mov
insb
cmp
cmp
dec
roll
aas
add
sbb
dec
hlt
fst
mov
test
arpl
and
and
lock
xchg
xlat
pusha
jecxz
imul
mov
sub
or
xchg
cmp
loope
repz
add
iret
pop
xchg
add
ja
jle
fldpi
pusha
in
inc
and
fisttps
cltd
xor
mov
sbb
stos
mov
push
loope
and
mov
inc
jl
xor
in
adc
mov
and
out
sahf
mov
fucomi
cmp
sub
mov
jne
push
push
xor
enter
je
ja
push
sub
pop
inc
push
mov
cmpb
cmp
mov
fcmovnb
in
xchg
std
in
sahf
sarb
push
add
cmc
iret
out
push
pop
mov
out
pop
and
sbb
iret
add
das
inc
pop
xchg
repz
dec
test
jns
std
icebp
sti
out
ljmp
sub
cli
sbb
mov
loopne
cmp
and
lods
or
call
sbb
dec
add
add
mov
scas
std
jg
sub
icebp
push
push
xor
pop
insl
fnstsw
sub
sub
push
es
shlb
bound
les
aaa
sbb
js
mov
stos
or
loopne
movsl
pop
mov
sbb
fs
movq
adc
vaddps
inc
mov
mov
insb
push
sbb
cmpl
sbb
mov
dec
mov
shl
jmp
out
adc
xchg
repz
pusha
aam
or
dec
mov
push
sub
mov
push
mov
lahf
pop
pusha
divl
mov
sub
push
bound
hlt
cmp
mov
xchg
push
test
stc
out
lock
shlb
push
xor
pop
dec
fs
pop
movsb
jno
xchg
pop
out
repz
in
dec
daa
sbb
push
xchg
mov
add
inc
outsl
repz
insb
dec
sub
mov
fs
js
adc
adc
xor
stos
into
ret
push
jb
movsl
ljmp
insl
xor
ret
pushf
mov
xchg
sub
lcall
adcl
adc
fwait
push
jnp
push
popa
pop
lock
sbb
outsb
dec
jl
cltd
inc
faddl
shr
push
icebp
rcrl
push
mov
mov
mov
sub
out
pusha
push
xorl
ja
in
lods
popf
mov
inc
dec
out
aaa
xlat
iret
mov
es
leave
sbb
inc
xlat
adcl
stos
pop
and
sarb
int
mov
je
cli
test
mov
and
jp
lahf
xor
add
rolb
mov
mov
or
ret
lock
out
inc
in
push
dec
adc
xchg
xor
mov
dec
jb
pushf
aas
mov
push
icebp
pop
inc
lods
in
fcmovnu
inc
cmp
jmp
shrb
adc
dec
ss
mov
into
push
xchg
fs
xor
cmp
xchg
push
inc
in
and
pop
inc
fdivrs
dec
cmp
std
clc
movsl
ficompl
les
xor
inc
iret
data16
push
cmc
ds
add
stos
or
loopne
jne
mov
fisubrl
push
movsl
lods
sbb
pop
sub
xchg
and
mov
lahf
out
push
or
movsb
cmpsl
jl
dec
cltd
xchg
jo
bound
push
pop
pop
jp
xor
mov
arpl
movsl
imul
push
add
mov
xor
movsb
adc
or
int3
scas
sahf
and
push
insl
call
out
inc
jae
sarb
and
xchg
iret
test
leave
cmp
sti
clc
les
xchg
jg
addr16
adc
sub
mov
dec
jecxz
xchg
loop
rol
cmovae
loopne
xor
push
sbb
fsubp
ror
sahf
cltd
jecxz
je
mov
mov
cmp
not
sbb
lahf
hlt
fs
lret
fisubrl
rcr
xchg
jne
sbb
push
popa
mov
sub
imul
lret
test
xlat
push
adc
and
fdivl
movsl
dec
or
movsb
arpl
lods
xchg
cmc
or
push
xor
mov
jae
push
inc
cmc
stc
cmpsl
add
ds
scas
fidivl
cwtl
outsl
movsb
push
lods
xlat
cwtl
inc
push
stc
roll
add
cli
loopne
inc
aad
mov
pop
dec
sub
mov
mov
sbb
pop
push
and
jnp
cmp
out
mov
test
outsb
push
mov
add
pop
push
jo
cwtl
mov
ja
xchg
xchg
mov
cmp
into
aas
and
into
mov
sub
and
inc
repz
add
imul
inc
fs
cmc
dec
loopne
je
stos
int3
mov
insb
cmp
das
mov
jbe
fists
out
xchg
ds
loopne
movsl
sub
mov
jp
push
rcrb
fsubr
mov
ds
data16
subl
jecxz
stos
push
fidivrs
jbe
dec
fs
push
push
aad
push
cmp
lahf
pop
and
cmp
push
lock
xchg
in
inc
test
lods
jno
es
pop
xchg
js
sbb
test
mov
nop
cmp
xchg
mov
pop
or
and
pop
adc
mov
push
cmp
gs
mov
je
mov
jge
push
pop
cwtl
sarl
hlt
sbb
xor
ret
pop
mov
rcrb
xor
or
out
fistl
ljmp
cmc
mov
popf
xor
filds
call
add
push
in
aam
pop
push
jg
push
call
mov
iret
sub
mov
mov
jns
adc
or
inc
jnp
jmp
pop
data16
je
popa
lret
adc
cmc
and
add
in
test
push
insl
sbb
fisttpl
jb
adc
sahf
imul
mov
movsl
dec
pop
mov
pop
push
or
movsl
add
mov
xor
stc
adc
in
ret
cmp
pop
popa
sbb
mov
mov
dec
cld
xchg
divb
ret
mov
and
fwait
xchg
sti
push
inc
xor
arpl
fwait
sub
loop
mov
shlb
dec
into
sbbb
jg
pusha
inc
inc
gs
add
dec
enter
aam
mov
ja
mov
leave
push
jb
inc
sbb
dec
push
adc
add
stos
mov
addl
push
out
rol
xor
imul
cmp
cmpsl
and
loop
scas
add
sti
dec
nop
decl
mov
or
sbb
mov
dec
jnp
or
push
je
jb
push
les
cli
xchg
cmpsl
dec
cmpsl
xor
iret
repz
orl
test
ss
jp
sbb
and
xchg
ljmp
fiadds
and
inc
mov
les
mov
push
imulb
fnstsw
sbb
fwait
or
cli
and
call
cmp
xor
pop
call
fists
mov
sub
xchg
mov
js
loop
icebp
cld
gs
inc
push
pop
or
fsub
inc
inc
pop
xlat
cmp
inc
dec
fs
fisttpl
ret
jl
xchg
pop
movsb
in
arpl
sub
push
out
hlt
repz
push
push
jecxz
divb
push
dec
jmp
mov
lret
sbb
cmp
xor
jmp
cmp
fcoml
dec
inc
jecxz
addr16
js
insl
jae
sub
mov
scas
mov
test
push
cmpsl
push
testl
lods
insl
sub
dec
sub
fs
in
mov
jnp
push
idivl
inc
outsb
pop
cmc
sbb
push
gs
and
xchg
dec
xchg
xor
dec
push
ficomps
fucom
ljmp
push
jg
sub
dec
jecxz
rcr
adc
xchg
in
shll
out
mov
or
lock
mov
icebp
push
fwait
adc
scas
fdivrl
sbb
out
pushf
cmpsb
sahf
dec
push
push
movsb
test
ficompl
and
repz
xor
or
lds
xchg
in
jbe
rclb
imul
test
stos
sbbl
aad
inc
mov
in
aas
cli
dec
or
add
shlb
jae
scas
jnp
repz
fwait
mov
mov
xchg
inc
outsb
aam
into
jmp
pusha
ss
or
addr16
lock
pop
and
push
xchg
pop
adc
push
cltd
dec
dec
fisubrs
int3
and
dec
cmpsb
xchg
cmpsl
cmpb
or
pop
jl
jle
xchg
mov
jo
jae
es
jmp
mov
std
dec
dec
xchg
jmp
mov
shll
jns
push
xchg
xor
pop
and
fsubrp
stc
loop
adc
pop
push
push
inc
in
movsl
add
push
sbb
dec
add
movsb
pop
jns
add
sbb
je
sbb
sbb
xor
inc
rcl
sub
jmp
std
rcrl
cmp
pop
inc
mov
insb
jecxz
test
sbb
stos
int
mov
mov
cmpl
mov
das
daa
mov
sahf
imul
mov
idivb
xchg
xor
into
movsbl
xor
ficomps
ljmp
mov
mov
adc
imul
xlat
mov
mov
inc
and
jle
adc
lock
add
leave
add
mov
mov
aad
pop
sbb
jo
mov
incb
test
mov
out
push
fwait
mov
shrb
mov
sub
cmp
sbb
inc
push
clc
sbb
inc
pop
inc
xor
lea
daa
push
push
push
pop
lods
xor
or
call
sbb
cmp
rcrb
jmp
addb
sub
icebp
lahf
insb
enter
mov
xor
push
add
loop
aaa
inc
pushf
lcall
xor
adc
sub
cmp
jo
jnp
mov
lds
dec
fistpl
mov
xchg
xchg
jecxz
adcb
shl
stos
dec
fs
cmp
xchg
lods
inc
lahf
pop
popf
and
xor
pop
xchg
xchg
pop
mov
push
mov
inc
ficoml
xor
lods
shll
jbe
add
xchg
mov
rcrl
cwtl
inc
inc
adc
inc
fcoml
push
icebp
ss
and
jae
fisttpll
dec
mov
pop
repz
aam
lret
cltd
imul
jo
arpl
pop
divb
push
dec
stos
fldt
mov
mov
and
in
aad
pop
mov
rcrb
jne
ret
shl
pop
into
scas
mov
test
out
stc
fmull
addb
fistpll
call
in
cmp
pop
cmp
out
and
movsb
ja
scas
mov
subb
movsb
into
stos
lods
sub
inc
jne
sub
xchg
mov
repnz
fnstsw
jae
mov
xchg
push
push
push
test
out
pop
repnz
loop
push
pusha
sbb
sbb
fists
add
out
out
scas
nop
inc
jae
and
cmpsb
or
mov
std
js
cmc
aad
add
sub
xchg
gs
xchg
icebp
mov
das
jb
cltd
push
in
mov
mov
jne
push
sbb
lahf
idivb
bound
shl
loopne
xlat
iret
jle
mov
imul
pusha
sub
sti
add
rcrl
test
mov
xchg
cmp
test
scas
fstpt
push
push
test
mov
cmp
cld
adc
jl
fldl
div
out
movaps
xor
lahf
outsb
mov
dec
sub
hlt
idivb
add
mov
bound
ljmp
mov
loop
push
sub
dec
es
jb
mov
pop
ljmp
mov
icebp
mov
rclb
lahf
inc
cmpl
icebp
and
or
in
sub
sbb
pop
fadds
add
cmp
lret
xor
mov
lods
mov
insl
dec
scas
ret
cmc
call
add
sub
xor
push
rcr
movsb
fldl
je
outsb
jno
js
outsb
inc
jmp
rcrb
mov
mov
pop
clc
inc
imul
inc
cmp
mov
enter
movl
daa
mov
arpl
std
mov
cli
outsl
pop
cltd
cmpsb
and
and
pop
inc
movsb
add
std
bound
sahf
stos
pop
and
xor
icebp
and
aas
hlt
stos
dec
jle
clc
sbb
fidivrl
out
into
jbe
mov
mov
pop
pop
push
xchg
jge
shl
ds
fisttpll
jg
inc
bound
xor
jo
adc
dec
loop
scas
sahf
pop
inc
fnsave
stos
fadd
fwait
xchg
sbb
jno
push
jae
and
push
xor
push
test
int3
mov
int
cwtl
sbb
repz
mov
mov
divb
popa
lods
inc
es
mov
mov
aaa
test
xchg
clc
js
insb
test
mov
in
xchg
jecxz
sbb
cld
xchg
mov
mov
repz
adcb
adc
inc
outsl
or
movsl
inc
dec
aad
int3
mov
scas
or
subl
xchg
lea
mov
out
inc
inc
mov
xchg
stos
jecxz
sub
sub
dec
dec
movsb
iret
cld
test
testl
mov
pushf
xor
mov
popa
fsubrs
test
into
jp
imul
mov
stos
das
mov
loop
mov
jg
movd
ret
jbe
and
pop
inc
out
mov
mov
pop
dec
sbb
push
mov
fucomi
fwait
adc
push
mov
push
mov
xchg
xor
mov
shlb
push
mov
shll
push
add
mov
push
outsl
inc
mov
sub
loope
data16
sub
pop
adc
and
adc
test
xchg
inc
in
stc
stc
cli
push
pop
daa
jmp
movsb
inc
xor
jb
jne
push
daa
pop
cmpl
jmp
dec
pop
ret
ret
adc
call
inc
mov
cltd
jae
push
insl
int
sub
xor
jecxz
repnz
mov
pop
dec
stc
cltd
xchg
mov
lret
fisubrl
adc
sbb
leave
pop
call
enter
xor
ret
shll
mov
pusha
push
clc
loop
or
rorb
or
mov
insb
jne
cmp
add
insl
or
inc
xor
test
inc
jle
dec
lcall
vpminub
pop
cltd
mov
mov
adc
fnsave
js
push
add
popl
pop
inc
mov
or
adc
jmp
test
xor
push
std
xchg
fs
mov
mov
cmp
xchg
adc
cmp
dec
mov
and
hlt
sub
sar
fs
insl
iret
int
cmp
outsb
mov
mov
or
cmp
cltd
fldt
push
sti
mov
cmpsb
and
mov
dec
adc
pushf
add
sbb
sbb
sbb
fdivrs
mov
inc
inc
cmpb
inc
in
xor
and
and
imul
inc
lods
out
push
sub
xchg
inc
mov
popf
cld
int
ficomps
push
xchg
pop
scas
cmpsb
or
mov
inc
push
sub
jmp
pop
mov
icebp
aaa
cmpb
mov
jp
popf
out
and
mov
popf
cmpb
lods
into
ss
mov
in
sbb
mov
mov
jnp
cmpsl
jg
jno
pop
lock
out
mov
in
jle
js
dec
cli
outsb
mov
jo
std
mov
xchg
mov
push
int3
mov
xchg
push
hlt
jp
mov
mov
and
loop
lahf
pop
jno
into
cld
cmp
imul
stc
je
cmp
fldl
cmp
lods
sarb
gs
xor
jb
outsl
mov
popf
ja
divb
jl
and
sbb
mov
fistpll
mov
adc
push
mov
jecxz
insb
or
dec
mov
or
pop
cld
repnz
xchg
mov
xchg
jg
pop
adc
mov
xor
popa
add
jle
mov
inc
data16
fisttps
jns
push
fldt
stc
jae
fldcw
xchg
pop
mov
and
mov
fnsave
leave
test
sbb
lahf
outsl
pop
fcoml
xchg
jg
pop
mov
xor
inc
or
add
callw
mov
jle
arpl
adcb
mov
push
jl
orl
jl
mov
and
cmp
rolb
sub
push
mov
in
fidivrs
push
test
mov
clc
loop
mov
add
push
lea
scas
aaa
mov
adc
shrb
pusha
mov
mov
add
jmp
pop
scas
fnstcw
int3
jnp
push
jbe
movsl
sub
aam
jno
imul
inc
cmp
lds
jbe
jle
xchg
pop
insl
pushf
adcl
jge
mov
pop
std
call
and
jge
mov
and
rcrl
jno
dec
pop
dec
lods
sub
sub
mov
and
or
cmp
fldl
insl
inc
push
sti
das
xor
or
stc
xchg
mov
lret
dec
pushf
mov
mov
add
push
fnstcw
outsb
jne
insl
jecxz
in
cmc
insb
and
loopne
in
pop
cmpb
sub
xchg
loop
mov
and
xor
aaa
out
cwtl
and
lcall
imulb
dec
insb
call
cmp
jl
jle
xchg
mov
in
rcll
js
add
jg
movl
imul
and
xchg
mov
inc
mov
mov
mov
sahf
fmull
or
push
mov
aam
mov
call
push
lea
out
scas
dec
sti
scas
shl
mov
test
cmp
push
insb
jo
lods
iret
gs
pop
jle
and
mov
mov
jle
shl
add
loop
sahf
push
jl
imul
push
mov
add
push
mov
dec
pop
inc
xchg
push
popf
and
setle
cmp
lods
out
ja,pn
das
push
repnz
add
push
cmpsl
outsl
fiadds
fs
int
or
js
mov
cwtl
push
xor
mov
out
pop
mov
jp
rcll
and
push
imul
js
mov
adc
movsb
mov
pop
ds
mov
pusha
les
pop
jmp
pop
jnp
and
xor
push
pop
popa
pushf
ror
add
jb
mov
cmp
and
outsl
ja
or
lret
fsubrl
fs
adc
pop
sbb
in
sbb
jns
sub
mov
add
xor
ret
sbb
jmp
or
pop
aas
in
pop
xchg
lods
outsl
sbb
adc
dec
mov
push
iret
xchg
jnp
inc
sub
in
adc
jmp
imul
insl
mov
xchg
mov
aaa
inc
or
stos
pop
das
push
cmp
jb
jp
aaa
rclb
orl
repnz
jge
stos
add
cmpsl
test
mov
lods
pop
sti
les
pop
sub
sub
cwtl
dec
mov
test
push
outsl
cmp
repz
lock
adc
loopne
iret
push
cmp
jo
loope
sbb
jb
pavgb
pusha
ljmp
xchg
fldenv
mov
xchg
mov
xchg
xor
pop
cmp
push
ljmp
mov
mov
sbb
adc
mov
insb
test
addr16
push
xchg
lock
stos
push
adc
dec
sub
pop
mov
xchg
inc
adc
fs
gs
add
lahf
shrb
adc
js
jno
scas
fildl
rcll
das
mov
inc
fistpll
xchg
lock
jns
lahf
addr16
or
jecxz
loopne
jo
into
xor
adc
insl
jne
aad
in
clc
jbe
xchg
and
addb
addr16
in
xor
sti
fwait
mov
ret
fdivrl
clc
mov
inc
cmp
cs
mov
or
out
mov
lret
mov
mov
mov
decl
fisubrl
adc
lret
and
stos
and
mov
or
mov
jno
js
int3
in
shr
scas
insb
cmpsl
jle
jae
mull
fwait
hlt
push
test
adc
sub
test
mov
pop
add
test
pop
loopne
pusha
js
push
sub
btc
pop
lods
and
das
push
cmp
add
andb
push
dec
lock
imul
clc
xchg
and
nop
xor
mov
addr16
jge
mov
xchg
adcb
mov
adc
cli
xchg
inc
sbb
iret
pop
jl
and
ud2
cmp
repz
ja
xchg
or
push
popf
cmc
mov
stos
pop
lret
inc
xchg
xlat
scas
mov
insl
jns
mov
scas
aaa
push
adc
cmpsl
cmp
xchg
sarb
bnd
or
xor
test
or
shrl
ja
push
inc
call
cmpb
xlat
orb
or
push
lcall
pop
out
push
sub
xchg
jns
adc
dec
fcoms
lret
shl
push
aam
and
xchg
or
inc
mov
adc
and
aaa
sti
mov
mov
pushf
mov
xchg
push
xchg
faddp
mov
test
adcb
inc
dec
mov
add
push
ret
jne
das
jne
ljmp
sti
mov
dec
push
mov
es
mov
mov
jle
icebp
push
mov
subl
jmp
adc
xchg
push
sti
repz
cwtl
push
std
jno
mov
cmp
js
or
scas
call
inc
out
lods
ds
dec
repnz
shrb
arpl
mov
pop
insb
sbb
in
loopne
out
push
mov
sti
add
pop
pop
dec
out
mov
push
jge
mov
movsl
inc
jl
mov
sahf
fisttpl
and
aas
jne
sub
cmpl
popa
xorl
and
lds
cmp
aaa
test
or
sub
mov
scas
cltd
test
test
dec
stos
push
mov
xchg
push
and
cmpsl
jmp
sbb
mov
pop
mov
dec
mov
jmp
test
out
ljmp
sub
adcl
ret
jns
test
push
sub
fwait
test
lret
loope
mov
cwtd
dec
popa
addr16
push
imul
cmp
lds
test
jg
push
les
jb
stc
push
jae
sbb
mov
scas
xchg
mov
push
fildll
jp
pop
push
ss
inc
ret
out
jae
scas
xor
push
imul
repz
lea
ljmp
ds
pop
dec
inc
enter
arpl
and
gs
inc
xchg
cmp
dec
shlb
icebp
dec
std
and
test
in
stos
xchg
imul
lock
mov
aas
pop
mov
or
iret
sbb
push
das
sub
out
clc
je
outsb
lret
mov
nop
mov
jecxz
fwait
lods
arpl
scas
cltd
out
push
sub
cmc
ret
sarb
pop
jecxz
mov
inc
outsl
sbb
out
js
mov
push
imul
into
mov
movsl
lods
jae
and
push
outsl
lds
sti
repnz
mov
std
lret
andb
out
dec
jno
inc
adc
aas
jp
adc
fs
inc
or
cltd
push
mov
sbbl
xor
mov
and
fldl
std
and
std
mov
movsb
jns
mov
enter
mov
xor
into
and
repnz
or
sbb
sbb
nop
imul
lods
add
movl
adc
pop
cmp
push
xor
inc
sbb
xor
clc
hlt
pushf
jns
and
cltd
pop
jo
pop
icebp
nop
aam
add
dec
into
inc
pop
fldcw
dec
mov
fidivl
imul
rorb
add
out
sbb
ret
out
subb
loope
mov
push
rolb
rolb
pusha
int
rolb
push
cli
arpl
dec
leave
aaa
xor
inc
addr16
jne
aas
pop
lret
adc
mov
xchg
scas
pop
stos
popf
pop
adc
sub
fwait
test
leave
pop
adc
test
sarb
jne
mov
in
in
gs
push
pop
add
push
adc
outsl
ljmp
push
js
aaa
jle
imul
xchg
mov
pushf
and
mov
mov
dec
in
loop
loope
add
xor
cmp
xchg
dec
pop
and
add
xchg
adc
movsb
xor
jbe
xchg
outsb
mov
mov
shlb
push
sub
rcll
add
loope
sbb
fwait
push
or
mov
push
add
sbb
bound
aas
mov
popa
xor
sub
pop
push
bnd
xchg
das
adc
mov
jae
cs
pop
xorl
adc
cld
push
lods
mov
jle
mov
sub
mov
and
mov
mov
mov
mov
xor
xor
xchg
jmp
inc
aad
sbb
repnz
add
cmp
mov
jno
loop
jnp
mov
lcall
dec
push
jb
sub
or
pop
xchg
xor
clc
sub
sbb
cwtl
xchg
mov
imul
dec
in
inc
push
sar
jbe
adc
leave
test
rcrl
aas
mov
mov
loope
mov
andl
mov
and
sarb
inc
add
cmp
jl
icebp
and
cmc
xorl
je
and
jle
bound
and
inc
repnz
push
jnp
adc
mov
push
mul
dec
arpl
bnd
inc
jae
addr16
inc
inc
rclb
pushf
jno
cltd
ja
inc
cmp
lahf
mov
lds
xlat
scas
xor
or
rcll
fimull
jl
mov
xchg
rcrb
test
push
imul
loop
inc
push
scas
out
mov
aad
cmp
pop
lods
mov
sbb
fdivl
inc
mov
mov
cld
inc
std
or
sbb
mov
pop
add
push
and
adc
sarl
xchg
ficompl
hlt
js
add
out
in
inc
jp,pt
add
adc
and
or
cs
xchg
add
mov
aaa
ja
mov
add
arpl
int
sbb
mov
mov
xchg
leave
add
adc
popf
leave
adc
xchg
xor
push
add
popf
push
std
inc
add
push
out
roll
pop
out
jno
push
jg
ficoms
cli
mov
aam
shll
addr16
dec
in
lcall
pop
sbb
dec
push
adc
push
das
mov
decl
mov
loope
dec
popa
pop
add
mov
push
push
sub
into
xchg
mov
pop
dec
rolb
jp
sbb
fwait
xorl
jb
mov
loop
inc
or
and
adc
roll
in
jo
enter
xor
ret
sbb
add
pop
xchg
adc
imul
testl
pusha
iret
jb
jno
cs
rol
dec
shlb
or
pop
cmp
dec
scas
jmp
mov
les
mov
inc
add
pop
out
pop
orl
or
dec
fs
call
popa
sub
cs
dec
insb
imul
ret
and
xchg
xor
lcall
adc
rol
adc
mov
xchg
test
subl
or
mov
cmpsb
mov
scas
sbb
sub
jo
aam
in
mov
push
leave
and
es
xor
rolb
mov
adc
int3
xchg
xchg
cmpsb
mov
clc
fs
push
and
fcompl
dec
fildl
scas
mov
inc
hlt
aam
gs
sbb
cmc
pop
call
dec
ret
adc
or
mulb
xchg
imul
sub
inc
movsb
stos
cmpsl
mov
aad
int
jnp
push
aas
aaa
mov
pop
mov
xor
push
call
inc
and
or
push
mov
add
fidivs
jp
xchg
lods
xchg
mov
fildl
push
loope
aas
rcll
pop
imul
pusha
xrelease
inc
cld
lret
and
sub
dec
sub
test
push
loop
insb
push
lods
js
adc
popa
in
cmp
sub
inc
and
push
jge
rol
leave
pop
lahf
mov
adc
cmpsl
test
xchg
push
jle
mov
sub
jae
add
jle
jge
mov
mov
stc
push
cmpsl
dec
mov
pop
stc
lods
jg
loope
lahf
dec
arpl
out
xchg
idivb
push
sub
cmp
sub
rolb
arpl
test
fnsave
adc
and
orl
push
pushf
jle
push
pop
jno
adc
scas
pushf
cli
les
lds
scas
jp
cwtl
mov
or
mov
and
adcb
pop
mov
adc
cmc
or
jne
js
rorl
test
into
loopne
stos
push
shrb
pop
inc
mov
xchg
push
lods
or
imul
arpl
mov
pushf
fwait
jnp
cmp
push
icebp
mov
mov
shlb
jge
add
xor
jg
push
imul
or
or
jb
dec
loopne
dec
sub
outsb
dec
xlat
push
je
cli
imul
out
test
dec
js
jne
stc
mov
mov
inc
stc
jb
xchg
xor
mov
cmp
pop
loopne
xor
mov
lcall
sti
shl
cmpsl
outsb
push
lods
jb
push
pop
dec
jo
scas
mov
dec
push
push
mov
cmp
outsl
mov
iret
adc
cld
or
push
mov
add
lea
mov
loop
add
orb
movsl
insb
sahf
scas
mov
adc
arpl
pop
xchg
xor
pusha
hlt
popa
aas
hlt
jecxz
mov
adc
sub
imul
jg
rol
fsubl
xor
push
xchg
cmp
and
in
nop
ds
push
int3
lods
push
jge
dec
sub
jle
lcall
clc
mov
inc
sahf
sub
push
call
mov
pop
or
xor
aas
xor
cmp
lcall
mov
mov
mov
pop
xchg
iret
push
call
xchg
fs
lret
nop
into
add
ss
mov
fs
and
rclb
iret
decb
pop
xchg
ljmp
or
mov
fs
mov
cmpsb
nop
push
pop
daa
jg
aad
xor
xchg
stc
jecxz
inc
sub
push
rclb
and
mov
mov
adc
loope
in
dec
test
xor
jb
inc
movsl
jnp
push
imul
push
ret
cmc
sub
mov
testb
int
cmpl
and
cmp
mov
bound
cmp
cmp
loop
mov
sahf
push
sbb
mov
fcoml
push
cmp
xchg
inc
icebp
bound
rcrl
cwtl
push
sbb
mov
and
adc
nop
push
jbe
pop
loopne
imul
fs
mov
mov
shl
movsl
jbe
mov
xchg
xchg
or
pop
push
jbe
not
fnstenv
sub
das
jno
cmc
push
mov
add
xchg
pusha
push
or
xchg
addr16
daa
xor
add
xchg
dec
in
and
sbb
in
xchg
sbb
pop
sub
mov
lds
inc
in
je
mov
cltd
sahf
ret
fs
ss
packuswb
sbb
addb
dec
mov
or
cld
push
mov
push
xor
cmc
imul
mov
and
daa
push
dec
add
mov
pusha
lock
pushf
bound
mov
add
mov
jp
xchg
int3
outsb
enter
and
pop
ljmp
and
xchg
pushf
xor
aas
mov
mov
mov
xor
or
lahf
or
xor
sbb
add
call
lds
sahf
mov
sub
ja
cmp
ret
lret
push
or
inc
aas
mulb
gs
lock
xor
clc
sti
mov
aam
or
jnp
or
inc
or
test
and
test
imull
xor
inc
rcrb
cwtl
sbb
rorb
dec
dec
insl
cltd
sti
outsl
jnp
mov
xor
testl
imul
jnp
xor
mov
imul
roll
mov
sub
and
rol
inc
imul
mov
xchg
in
xor
xchg
inc
enter
add
mull
cmpsb
jb
xor
aam
movsb
cmp
mov
and
adc
div
fldl2t
scas
mov
push
sbb
dec
xchg
nop
pop
notb
por
movsl
mov
sub
push
inc
out
test
add
dec
push
test
push
pusha
addl
loop
mulb
popf
jmp
jecxz
stc
out
cmp
andb
push
aaa
add
sub
mov
xchg
pop
cmp
sub
mov
mov
push
scas
ds
inc
fcoms
lcall
mov
mov
inc
push
cmc
fmul
inc
fwait
mov
clc
pushf
add
xchg
leave
or
adc
hlt
sbb
lock
das
xor
repz
jne
pop
push
xor
xchg
lds
adc
aam
xchg
xor
xchg
mov
push
cmpl
jg
imull
inc
add
pop
and
insl
nop
and
aam
push
sahf
sbb
pop
lahf
jns
or
test
test
or
pop
in
dec
push
daa
int
inc
push
out
or
or
lret
mov
jb
push
shrb
lret
inc
data16
movsb
mov
push
pop
add
cmp
and
in
xchg
push
add
or
aas
mov
ror
mov
ds
in
lahf
lcall
fsubs
test
mov
add
aam
adc
das
sub
add
xchg
ret
icebp
insl
pop
dec
test
rorl
bound
add
adc
push
or
mov
push
outsl
and
add
sbb
adc
cmp
in
push
sub
clc
xchg
arpl
jecxz
gs
push
cmpsb
stos
sbb
xor
enter
into
and
cmc
insb
mov
ret
cmp
sbb
pusha
out
pop
in
sub
call
aad
push
sub
insb
call
daa
pop
cli
les
and
xchg
dec
fcmovb
add
adc
inc
jnp
jmp
bndstx
lock
mov
lcall
xorl
cmc
jb
add
inc
scas
outsb
jge
mov
mov
sub
sahf
or
or
fwait
int3
cwtl
imul
sbb
mov
adcb
mov
cwtl
push
test
int3
xchg
push
jnp
pushf
imul
or
sub
pop
mov
fidivrs
lea
xchg
shlb
xchg
xchg
div
jno
test
pushf
sbbb
inc
sub
lret
xor
push
leave
jge
rcll
push
scas
rcrb
inc
outsb
mov
mov
in
stos
mov
mov
inc
mov
ds
sbb
or
enter
gs
cli
in
xchg
out
cmc
or
fdiv
or
jnp
and
out
popa
adc
cwtl
hlt
pop
xlat
xchg
js
fcoms
sbb
imul
jmp
dec
test
leave
repnz
mov
push
daa
test
scas
adc
push
hlt
inc
adc
lret
andb
insl
imul
jl
cld
jp
inc
cmp
repnz
mov
int3
pop
outsb
sarb
arpl
hlt
sub
sbb
gs
jo
push
dec
push
cmp
dec
int3
xchg
push
inc
rclb
mov
xchg
hlt
test
lret
sub
aaa
sub
jl
xchg
or
inc
stc
out
add
ss
push
call
push
nop
cmp
pop
push
dec
int3
sub
mov
cld
mov
dec
xchg
orl
pop
inc
push
mov
loope
xchg
dec
je
negb
stc
xchg
cmp
pop
jmp
push
add
lret
repnz
sub
cmpsl
gs
pop
repnz
dec
push
fisubrl
test
add
sub
stos
icebp
inc
iret
jno
push
ss
std
loope
stos
cld
push
add
dec
mov
pop
ret
push
push
es
push
or
dec
out
pop
fildl
pop
cmp
sbb
mov
gs
jo
xchg
cwtl
adc
and
outsl
push
mov
mov
and
ljmp
dec
or
dec
imul
fdivrl
dec
dec
scas
sub
cltd
mov
in
pop
scas
push
pusha
jb
cwtl
xor
rcrl
test
mov
push
stos
roll
int3
adc
jbe
lds
xchg
add
jns
mov
dec
aaa
in
leave
fwait
sub
smsw
aas
bound
inc
dec
inc
jp
in
ja
mov
dec
lret
fcomip
mov
dec
repz
sbb
insb
cltd
xchg
popa
push
aas
out
dec
jmp
dec
push
jae
push
insb
cs
inc
push
imull
xchg
pop
pop
and
insl
cmp
clc
mov
clc
popa
in
xchg
or
inc
jns
pop
repnz
sbb
push
add
cld
bound
leave
inc
mov
xor
ss
mov
mov
dec
rclb
movsb
aas
rorl
jmp
sbb
add
lds
pop
insb
fs
popa
in
sti
xchg
lds
stos
xor
loope
add
jb,pt
push
scas
cmp
out
xor
mov
dec
stc
jbe
push
rcll
jmp
stos
enter
gs
mov
inc
fcomps
cs
out
nop
imul
fwait
repnz
popa
xor
jge
icebp
jno
addl
cmpsb
mov
lret
daa
cld
mov
out
imul
pop
cmp
cmpsb
lcall
ss
bound
into
xor
enter
jne
cmc
jmp
js
sbb
cmp
mov
push
ret
adc
lock
imul
jle
add
test
nop
repz
jb
pusha
stc
mov
jmp
mov
repz
xchg
das
adc
sub
and
xor
lret
push
adc
jns
insb
dec
cld
sti
gs
inc
call
movsb
sub
test
dec
in
push
dec
out
dec
mov
push
aaa
mov
add
jmp
and
bound
jns
lods
or
mov
xlat
pop
xchg
sbb
inc
sbb
push
je
push
pusha
andb
sub
adc
outsb
test
fildl
into
xchg
aas
and
data16
int
arpl
pushf
jbe
clc
jl
push
cmc
cmp
cmpsl
mov
or
daa
pop
xchg
rcll
or
int
pop
cmp
add
test
stos
daa
bound
mov
jae
mov
jl
notb
jno
roll
or
mov
dec
mov
inc
popa
arpl
pop
inc
ret
mov
in
cmp
lods
xchg
ret
jmp
fwait
int3
mov
movsb
fs
xchg
xchg
es
cwtl
push
fisttpll
test
push
add
xchg
arpl
arpl
das
in
imul
lret
popa
pop
or
pop
sbb
out
mov
mov
test
pop
push
out
push
xchg
jns
pop
insb
dec
es
jns
push
leave
sbbb
jo
iret
mov
sbb
mov
or
mov
mov
xchg
push
add
lock
pop
sbb
or
nop
push
lret
fisttpll
nop
add
leave
mov
pop
jmp
add
jg
push
stc
movsb
inc
jp
cmp
clc
xor
imul
push
mov
rcrb
cld
loopne
mov
inc
fistl
mov
or
push
push
mov
push
das
das
sahf
ficoms
sbb
fldcw
rclb
aam
mov
xor
push
inc
and
out
fsubrl
fdivrl
push
sub
dec
call
cmp
lahf
sub
scas
adc
addr16
out
sarb
push
and
cmp
xor
mov
inc
sbb
sub
imul
and
jne
push
and
push
insb
lretw
lcall
jg
jl
mov
push
mov
leave
addb
nop
pop
cmpsb
jge
xchg
invd
jo
xchg
adc
movsl
cli
cld
fimull
pop
repz
mov
ret
xchg
cmp
fs
sti
ljmp
stos
fbld
lds
sahf
or
jae
shrl
cltd
fildll
cld
in
xchg
mov
ret
mov
adc
je
loope
faddl
jnp
inc
jbe
and
sti
neg
aad
subb
mov
and
mov
push
stc
enter
addr16
dec
lods
out
int
sub
mov
mulb
mov
pop
adcb
into
xor
out
negb
adc
sar
enter
mov
mov
lahf
push
lcall
push
fstpl
sub
hlt
les
loopne
adc
pop
inc
in
xor
fucom
ret
lcall
jns
push
stos
push
mov
arpl
xchg
in
xchg
mov
sahf
popa
leave
jb
outsb
pop
pop
or
inc
es
leave
cli
repnz
mov
mov
xchg
shlb
jecxz
out
das
clc
cmp
and
xor
push
sub
mov
xchg
sbb
push
adc
stos
test
cwtl
nop
cs
lcall
repnz
add
and
or
cmp
mov
dec
daa
loop
shl
jo
in
push
insl
movsl
adc
ret
xchg
push
subl
cmpsl
pushf
mov
pop
push
inc
loop,pt
data16
out
xchg
add
mov
pushf
and
ja
cmp
bnd
daa
mov
sub
fld
jmp
add
loopne
fcoml
fldt
icebp
cmp
sbb
mov
lahf
popa
std
xchg
xor
sbb
push
les
pop
adc
xchg
in
ficomps
dec
jae
adc
or
jge
inc
fstl
inc
pop
popf
push
std
shrb
or
inc
jle
ror
out
sub
pop
cmc
jge
mov
cmp
push
mov
mov
or
xor
int3
xchg
mov
mov
imul
stos
outsb
jo
test
cmp
arpl
sub
jg
in
mov
push
rcl
and
xchg
push
mov
outsl
mov
fst
mov
and
shl
jbe
xchg
pop
add
adc
cmpsl
mov
cmc
pop
cmpsl
jns
out
ret
addr16
addr16
xchg
sub
fsubs
add
xlat
inc
pushf
push
push
pop
and
clc
sbb
pusha
cmp
push
test
in
rcrl
lahf
add
idivl
out
imul
mov
mov
in
or
mov
lea
mov
iret
mov
pop
nop
jp
xor
notl
scas
add
mov
add
mov
xchg
or
data16
in
mov
sahf
cmp
int3
lahf
mov
es
xor
xchg
mov
jl
pop
jae
js
cmp
sub
idivb
lret
xchg
mov
xchg
mov
data16
inc
mov
and
adc
pushl
mov
stos
notl
imul
mov
cmc
movsb
pushf
aaa
pop
faddp
push
mov
xor
mov
ds
sti
fdivrs
test
jnp
dec
pusha
sub
hlt
or
mov
jne
or
cwtl
imul
ficoml
imul
loopne
dec
shrb
leave
test
in
lret
int3
repz
inc
xchg
es
sub
jne
sahf
mov
add
call
dec
stos
xor
enter
enter
ja
das
out
xchg
pop
push
rcll
jecxz
pop
or
imul
inc
push
stos
mov
jno
jae
xor
dec
inc
rcll
pop
stc
jbe
es
fstpt
jne
rolb
cltd
ret
mov
xor
xor
push
icebp
fcomps
aaa
push
orl
fmul
push
sti
testb
subb
mov
xchg
inc
push
loope
icebp
mov
loopne
pop
inc
pop
jnp
or
mov
push
rol
ds
mov
test
mov
out
js
mov
or
out
clc
cmp
scas
xchg
jno
push
adc
aas
push
mov
push
int
ja
add
bound
mov
jl
mov
dec
out
mov
mov
fsubs
mov
daa
mov
dec
jmp
adc
das
mov
lds
gs
test
push
pushf
mov
sub
movsb
pop
movsb
enter
xchg
inc
mov
test
and
pop
rcrl
mov
and
in
jnp,pn
lea
sbb
sbbl
test
imul
inc
adc
cmp
cmp
mov
jle
dec
in
mov
testl
xchg
xor
push
sbb
cmp
fcom
add
sbb
lea
lods
outsl
outsl
pop
jae
push
pop
decl
mov
cmc
aam
lret
adc
fsubrl
les
cmp
jns
mov
pop
mov
cmp
lods
pop
add
cmp
xchg
shrl
jmp
or
xor
mov
add
mov
int3
daa
ja
repnz
ficompl
loop
in
mov
popf
push
lds
push
int3
sub
fcomps
or
xchg
sahf
repz
mov
insl
in
stc
xor
ds
ds
call
cmp
dec
jno
fsubp
pop
icebp
xchg
test
loope
push
adc
fisttpll
mov
inc
sbb
scas
rclb
mov
push
fisubs
scas
fsubrl
jg
dec
std
repz
or
int3
pop
das
pop
hlt
adc
cmp
xchg
rcrb
test
dec
pop
int3
pusha
sbb
push
inc
push
leave
cmp
icebp
int3
cltd
push
into
push
stos
jl
lock
rol
scas
das
and
adc
jmp
cmc
movsl
insb
adc
push
add
push
aas
out
stos
stos
ja
mov
sub
dec
aad
icebp
mov
mov
dec
pop
test
data16
int3
popf
in
into
test
lea
cmp
lret
push
or
pop
stc
aas
sub
ss
fimull
dec
das
xchg
les
jne
jo
bound
inc
clc
mov
stos
lea
inc
test
push
pop
out
dec
and
sarb
notl
dec
and
cmp
pop
pop
jp
dec
cmp
push
xchg
cmp
dec
clc
js
imul
mov
into
lahf
out
outsb
mov
movsb
sbb
add
xor
hlt
loopne
mov
test
mov
fiadds
xor
and
inc
hlt
popa
and
jne
movsb
je
adc
xchg
dec
cmpsb
imul
mov
mov
out
jb
mov
enter
pop
add
dec
pop
test
sub
hlt
adc
or
mov
or
jecxz
mov
push
push
cmp
or
mov
fdivrs
push
xchg
jmp
scas
popf
mov
loopne
add
add
dec
outsl
sub
call
js
dec
jmp
sub
test
rorb
mov
sbb
lcall
ud0
push
dec
xor
repnz
lock
mov
xchg
popf
add
cmp
jmp
sbb
in
jg
sub
pop
mov
pushf
test
xor
lret
add
jecxz
iret
or
call
cmp
aas
fisttps
mov
adc
xchg
lcall
lahf
mov
mov
xor
mov
adc
mov
mov
pop
icebp
inc
mov
jg
out
fldcw
out
les
jmp
add
add
mov
cltd
sbb
jns
lret
clc
orl
in
lds
inc
dec
mov
daa
testl
xlat
xchg
in
mov
cmp
mov
adc
andl
sub
and
and
inc
dec
or
push
add
add
add
add
add
add
add
push
or
or
adc
add
or
and
add
add
add
add
add
add
and
add
add
add
add
add
add
and
add
add
add
add
add
add
and
add
add
add
add
and
add
add
add
hlt
and
add
add
add
cld
and
add
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
adc
add
add
dec
outsl
popa
fs
imul
inc
gs
jb
arpl
fs
jae
push
imul
jb
je
arpl
jb
jne
insb
inc
insb
insb
outsl
arpl
jb
jne
insb
inc
jb
gs
js
je
jb
arpl
jae
gs
insb
outsl
jae
dec
gs
popa
jo
jb
popa
je
inc
popa
jo
jne
gs
imul
popa
je
insb
je
inc
dec
jo
outsb
push
jns
inc
jb
gs
je
imul
insb
inc
js
arpl
gs
push
popa
je
inc
imul
jae
inc
gs
inc
dec
outsb
je
jb
gs
gs
outsl
outsb
outsb
arpl
push
je
je
jae
outsb
add
xor
add
add
add
add
add
add
add
add
add
adc
add
adc
add
add
add
add
add
add
add
add
inc
or
and
add
inc
or
inc
inc
or
dec
inc
or
add
add
pop
inc
or
add
add
push
or
add
add
test
add
add
add
add
add
add
add
add
add
add
add
inc
or
add
add
rolb
add
add
add
inc
or
or
push
add
add
add
fs
add
bound
add
fs
add
bound
add
fs
add
bound
add
bound
add
push
add
bound
add
push
add
bound
add
push
add
bound
add
push
add
push
add
push
add
push
add
arpl
add
push
dec
inc
dec
xor
cs
dec
dec
add
push
inc
push
dec
xor
cs
dec
dec
add
dec
inc
inc
push
xor
cs
dec
dec
add
dec
xor
cs
dec
dec
add
push
inc
push
xor
cs
dec
dec
add
inc
inc
push
push
xor
cs
dec
dec
add
inc
dec
dec
xor
cs
dec
dec
add
dec
push
inc
push
dec
cs
dec
dec
add
inc
push
xor
cs
dec
dec
add
dec
dec
dec
inc
push
cs
dec
dec
add
dec
inc
dec
xor
cs
dec
dec
add
add
fs
imul
add
add
je
jb
arpl
fs
jae
add
add
jb
jne
insb
push
jb
je
arpl
add
jb
jne
insb
inc
insb
insb
outsl
arpl
add
push
imul
jb
add
add
imul
jae
add
push
gs
insb
outsl
jae
dec
gs
add
arpl
inc
jb
popa
je
inc
popa
jo
jne
gs
imul
add
push
popa
je
insb
je
add
dec
inc
dec
jo
outsb
add
add
jae
jb
gs
je
imul
push
js
arpl
gs
add
add
je
inc
imul
jae
add
add
je
inc
add
add
je
jb
gs
gs
outsl
outsb
outsb
arpl
push
je
je
add
add
outsb
add
add
incl
push
push
incb
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
add
add
ss
add
mov
cmpl
jne
add
mov
jmp
mov
add
add
cmpl
je
add
mov
add
push
push
push
push
pushl
pushl
mov
mov
mov
add
call
pop
pop
pop
pop
cmp
je
add
jmp
push
push
pushl
call
lea
mov
lea
mov
mov
cmp
je
mov
inc
sub
cmp
ja
mov
cmpb
je
mov
cmp
jne
mov
shr
rol
xchg
jmp
mov
xchg
rol
xchg
sub
add
mov
add
sub
mov
loop
call
lea
mov
cmp
je
mov
sub
je
mov
lea
mov
lea
mov
cmp
je
mov
add
mov
jmp
mov
add
mov
xor
mov
inc
or
je
cmp
ja
add
add
jmp
and
shl
mov
add
or
jne
mov
add
jmp
xor
xchg
mov
cmp
je
lods
or
je
add
add
jmp
xor
shr
lods
or
je
add
add
jmp
lea
mov
lea
mov
cmp
jne
add
push
push
push
push
push
push
call
pop
pop
cmp
jne
add
mov
rep
sub
sub
push
pushl
push
push
call
push
pop
sub
xor
mov
cmp
je
inc
lea
mov
push
push
push
push
push
pushl
pushl
mov
add
push
call
pop
pop
pop
pop
add
loop
mov
cmp
je
popa
popf
mov
ret
popa
popf
jmp
mov
or
je
mov
add
cmpl
jne
cmpl
jne
cmpl
jne
jmp
mov
add
push
push
push
lea
add
add
push
call
pop
pop
pop
cmp
je
mov
add
add
xor
mov
cmp
jne
inc
jmp
mov
add
push
push
push
cmpb
jne
inc
mov
and
mov
movb
push
push
pushl
call
pop
pop
pop
pop
cmp
je
mov
mov
pushl
popl
add
inc
jmp
clc
ret
jmp
push
mov
mov
mov
cld
mov
movsb
call
jae
xor
call
jae
xor
call
jae
mov
call
adc
jae
jne
stos
jmp
call
dec
loop
mov
call
jmp
lods
shr
je
adc
mov
jmp
xchg
dec
shl
lods
mov
call
cmp
jae
cmp
jae
cmp
ja
inc
inc
push
mov
sub
rep
pop
jmp
add
jne
mov
inc
adc
ret
xor
inc
call
adc
call
jb
ret
pop
ret
push
call
ret
mov
adc
push
add
or
inc
cmp
add
or
ret
mov
add
adc
mov
cmpl
adc
or
push
and
rolb
add
call
enter
add
shl
or
dec
mov
jne
pop
sbb
add
mov
xor
fildl
or
sub
in
ljmp
jb
sub
or
add
adc
out
xor
inc
out
clc
dec
jne
pop
mov
bound
jp
mov
ret
pop
addr16
cs
ret
push
movzwl
mov
or
movl
jae
mov
mov
sbb
sarb
cli
sar
add
cmp
sbb
lahf
adc
loope
jno
data16
jb
jmp
inc
sub
sahf
clc
fistl
scas
mov
or
int3
shr
sahf
ret
inc
test
ds
add
in
push
push
jbe
jge
sub
jle
mov
xorb
int3
or
xor
aas
std
add
int3
dec
cld
sbb
pop
ret
add
shl
pop
pop
or
sub
cmp
jbe
mov
xchg
inc
cmp
mov
notl
jle
push
lret
inc
pop
or
call
mov
push
or
inc
cmp
jl
adc
leave
popa
fcomi
xor
inc
xchg
outsb
enter
test
or
jo
xchg
mov
push
pop
mov
sar
sub
les
jne
mov
shr
sbb
loopne
add
jbe
aaa
call
or
cmp
sti
inc
inc
shr
sbb
sbb
jbe
pop
mov
xor
adc
mov
test
push
sbbb
icebp
call
es
sub
push
lea
pop
call
cmp
icebp
xor
push
jne
lret
and
mov
lahf
and
add
push
clc
mov
inc
adc
sub
jl
cmp
or
orb
enter
mov
sbb
leave
cltd
dec
hlt
nop
push
call
movsb
data16
orl
push
in
inc
lock
shl
add
xor
dec
dec
into
cmp
cmp
push
adc
fdivl
push
sbb
mov
xorl
fcompl
rep
adc
retw
jne
inc
add
cli
cld
inc
mov
add
xchg
pop
mov
and
mov
adc
hlt
test
fwait
ret
push
les
mov
jbe
sbb
test
movsl
mov
sub
inc
add
movsl
inc
pushf
mov
add
and
leave
push
adc
jge
push
gs
push
jmp
and
or
cmp
or
movsl
sbb
into
pusha
or
divb
pusha
clc
lcall
push
sbb
push
insb
out
add
mov
fsub
mov
iret
push
sbb
push
repnz
scas
adc
add
test
cmp
sbb
sub
sahf
das
mov
inc
dec
inc
xchg
add
rorl
call
pop
cmp
je
sub
incl
setge
sub
clc
lea
xchg
hlt
shll
add
decl
mov
jmp
mov
inc
xor
xchg
jmp
sub
mov
lock
jne
leave
adc
push
mov
cmp
insl
sbb
fldl
test
fwait
push
aad
cltd
jle
mov
or
jmp
lock
in
rorl
sub
mov
xor
or
call
add
mov
add
sub
jp
dec
push
andl
sub
leave
loop
and
sti
dec
repnz
popa
mov
sub
pop
jge
dec
push
in
sub
pop
dec
pop
add
pop
jo
jmp
add
ret
psubq
ds
add
and
inc
adc
imul
nop
leave
dec
xor
dec
cmpb
cmp
sbb
rcl
inc
test
mov
addb
inc
adc
rolb
jle
cmp
icebp
icebp
iret
rorb
nop
stos
mov
shrb
int3
pop
outsb
sbb
movsb
jne
cmpl
lock
adc
jb
mov
orb
shl
dec
add
les
xchg
sbb
push
cs
sub
jb
xor
mov
mov
negb
rcll
rcrl
dec
jne
cmp
jne
dec
sbb
cmp
add
sub
add
popa
jecxz
iret
push
pushf
dec
sbb
jecxz
lcall
inc
mov
sub
mov
cmp
dec
mul
sbb
inc
outsb
addb
xchg
rolb
add
les
xor
fdivl
adc
jne
adc
add
pop
add
and
xchg
out
add
add
add
add
jmp
dec
adc
mov
xchg
stc
out
in
adc
lds
cmp
dec
mov
leave
mov
fnstcw
jecxz
and
push
loopne
sbb
jne
loop
clc
mov
jg
push
fidivs
loop
pop
push
mov
fdiv
inc
or
pop
or
ret
jbe
mov
push
lods
mov
loope
sbb
adc
mov
pop
jae
push
mov
or
pop
enter
mov
pop
pop
inc
push
mov
ret
into
push
or
test
pop
and
xlat
rorb
outsb
negb
pop
mov
rcrl
adc
xchg
jle
stc
insb
dec
jle
shrb
iret
bound
fnstenv
mov
lds
movsl
gs
nop
pusha
int
mov
push
mov
scas
push
fcoms
jo
and
sbb
lcall
lods
mov
inc
adc
scas
cmpsb
push
loope
xchg
mov
push
add
aam
xlat
fcomp
inc
insb
pop
cmp
dec
mov
out
and
sub
arpl
iret
xor
pop
xchg
sbb
dec
xchg
cmp
or
pop
cmpl
push
or
pushf
dec
and
fnstenv
pop
cmpsl
pop
out
dec
or
jnp
sub
jbe
push
jg
stc
ds
bound
pop
xchg
push
rcrb
xchg
data16
or
je
out
into
mov
lock
mov
notb
inc
ljmp
xchg
push
mov
dec
inc
mov
cwtl
mov
pop
push
adc
mov
inc
fisubrl
or
lret
fisttpll
sbb
push
stos
scas
jbe
adc
lcall
int
mov
mov
lahf
sbb
int
pop
xchg
repz
or
pusha
lcall
adc
imul
xchg
push
pushf
sub
loope
xchg
lahf
movl
int
icebp
imul
ret
fimull
pop
dec
mov
cld
popa
cltd
sbbl
in
rclb
cmp
push
cmpsl
sbb
shrb
push
loopne
shll
mov
mov
sub
xlat
adc
popw
dec
cld
fcoms
les
bound
addb
jmp
jmp
popa
mov
mov
dec
lret
enter
mov
pop
out
push
dec
cmpsb
pop
xor
dec
xor
out
add
enter
xor
sbb
mov
mov
and
mov
pop
insl
add
sbb
xchg
xchg
jnp
lods
sahf
sbb
cwtl
cmpsl
je
mov
sub
sbb
xor
ret
pop
call
add
arpl
repnz
add
cmp
jge
pop
pop
roll
mov
jl
out
aad
cmp
outsb
dec
xor
scas
pop
nop
cmp
jmp
or
pop
dec
inc
outsb
or
pop
fiadds
and
insb
pushf
push
hlt
pop
test
dec
mov
push
mov
xchg
stos
dec
add
std
out
cmp
inc
lret
and
xchg
inc
out
add
or
pop
fisubrs
jmp
pushl
or
jne
or
mov
mov
test
xchg
je
cmp
mov
lods
lcall
mov
sub
push
pop
std
cmc
lret
jge
lret
loop
js
inc
jbe
adc
inc
mov
push
inc
test
js
add
data16
adc
pop
test
notb
xchg
mov
orb
dec
mov
xchg
rorb
hlt
jmp
jnp
xchg
mov
jae
imul
icebp
call
push
iret
push
cmp
mov
pop
and
cmp
jecxz
sbb
cltd
cmp
adc
jne
pop
mov
and
push
mov
lods
add
jg
neg
adc
imul
cld
jg
dec
xchg
dec
movsl
js
jo
repnz
idivl
lods
adc
lcall
mov
cmc
imul
mov
jno
sbb
pushf
adc
loopne
xchg
imull
ja
cmp
jae
or
add
cs
popa
out
or
mov
adc
dec
ds
cmp
dec
inc
adc
arpl
xchg
dec
push
jg
je
jmp
push
or
xchg
nop
jns
lcall
pop
insb
dec
inc
mov
sarb
jecxz
push
ljmp
pop
push
pop
out
imul
push
fs
jle
lahf
jb
dec
or
mov
aaa
sub
stc
xor
lea
test
ret
sub
push
pop
ret
xchg
mov
xchg
fiadds
and
adc
dec
andl
loop
lea
inc
and
xlat
jb
je
fldl
into
xchg
push
inc
push
mov
imul
xchg
mov
xchg
lcall
add
cmp
shlb
je
lret
js
mov
insl
sbb
add
scas
mov
hlt
jle
ret
ret
ret
sub
ds
inc
push
or
adcl
push
negl
inc
or
mov
jp
sub
scas
pop
insl
cmp
cmpb
dec
mov
sbb
jl
insl
sbb
sarl
sar
xor
jge
adc
push
pop
push
mov
push
outsl
dec
push
push
int3
xchg
js
aaa
adc
inc
imul
ljmp
mov
mov
das
rcrl
xor
cmp
pusha
inc
dec
and
xlat
dec
fs
xor
into
or
pop
mov
fadds
adc
in
mov
into
cld
std
sbb
ja
mov
lods
cmc
pop
push
mov
daa
add
int3
jmp
leave
xor
lcall
outsb
cs
in
xor
xchg
shll
icebp
add
mov
push
mov
bound
leave
stos
loop
pop
dec
adc
ss
or
cmpsl
mov
rcl
or
xor
xchg
js
push
xchg
pop
les
bnd
sub
push
cmp
stos
std
sbb
jmp
jg
fstpt
cmpsb
dec
out
cli
inc
push
int3
pop
push
and
jnp
mov
imul
out
jg
sub
jecxz
ljmp
sbb
popf
int
fistpll
in
mov
inc
mov
sahf
jmp
fcomi
cld
loop
jbe
orl
jo
mov
jmp
and
mov
outsl
pop
sahf
and
inc
xor
aad
js
mov
jmp
mov
ss
push
pop
gs
push
xchg
pop
cmp
xor
imulb
cs
fiaddl
iret
xlat
mov
hlt
je
xchg
jnp
hlt
lods
orl
xor
xchg
mov
sub
or
jge
test
jge
mov
repnz
push
pop
jg
mov
mov
cmp
xor
push
jg
mov
and
out
inc
hlt
lea
sub
xchg
or
xchg
dec
xchg
sub
or
outsb
push
xchg
pusha
test
lahf
xchg
cli
cld
cmp
jo
xchg
lret
test
push
pop
inc
dec
repnz
in
mov
add
ret
addr16
add
jae
inc
cltd
push
cmp
or
test
sbb
test
pop
sub
and
imul
andb
dec
jno
enter
std
sub
stos
jns
imul
daa
mov
into
sub
test
cmp
mul
iret
into
sub
lds
dec
pop
cwtl
sbb
inc
std
pop
mov
jbe
pop
dec
push
push
icebp
pop
out
lds
cwtl
xchg
dec
xchg
es
jl
add
gs
addr16
pop
or
lret
mov
daa
in
inc
test
sub
jne
cltd
imul
ss
or
xchg
cmp
imull
or
dec
xchg
sub
push
add
iret
fwait
les
mov
fdivr
sbb
mull
data16
push
inc
test
push
fmulp
jg
mov
test
mov
xlat
and
fildll
mov
les
add
repnz
adc
in
jns
push
lods
mov
repz
cmp
repnz
jnp
sub
xchg
insb
jb
ss
push
push
sub
jle
inc
aaa
mov
push
xor
arpl
mov
pop
mov
xchg
cmp
subb
int3
add
push
out
adc
jb
push
and
xchg
mov
sbb
dec
jg
adcl
sbb
sbb
cmp
lcall
negl
iret
xchg
xorl
sbb
and
lret
push
mov
loop
add
aas
add
hlt
mov
xchg
cwtl
fucomi
and
nop
sub
loopne
into
add
mov
mov
iret
pop
xchg
cmp
subl
nop
push
jp
jge
mov
inc
or
jne
lret
test
out
mov
insb
dec
mov
cmpsl
clc
js
gs
sub
xor
sub
leave
lea
out
subb
into
mov
push
leave
dec
cld
out
call
xchg
sarb
out
imul
jnp
outsl
sub
lock
jne
push
xchg
or
or
scas
jl
inc
mov
sub
mov
cmpsl
mov
cld
jp
ret
inc
lret
mov
test
cwtl
mov
leave
sti
and
sub
adc
mov
mov
fs
mov
xchg
std
bound
pop
aaa
sbb
mov
ret
arpl
iret
or
jno
adc
iret
mov
nop
dec
test
lods
cmp
xor
dec
ror
in
cmp
mov
lahf
in
pop
cmp
xchg
xchg
sbb
clc
lods
imull
mov
scas
or
ds
loopne
rcrb
mov
cld
pop
jmp
hlt
adc
and
jl
clc
push
xchg
ljmp
bound
mov
aad
mov
jns
arpl
mov
imul
mov
xchg
add
fidivs
mov
cmp
inc
ds
and
das
insb
jbe
jmp
dec
fcomp
jp
push
push
jl
mov
fiadds
mov
jb
sbb
fldenv
add
xchg
push
pop
icebp
mov
leave
push
push
idivb
fsts
int3
test
jb
addl
xchg
sbb
pusha
repz
mov
aam
xor
les
push
pop
add
subl
push
leave
inc
sbb
test
lds
cld
int3
fs
mov
or
jl
inc
adc
mulb
sbb
cli
icebp
fldcw
insl
pop
fabs
js
daa
into
shll
pop
fisttps
rcrb
daa
sbb
dec
push
xor
jnp
cmp
mov
icebp
sbb
and
pusha
jno
jl
or
jbe
pop
lret
jnp
adc
test
xchg
lret
adc
push
mov
stos
aas
cmp
and
or
ja
icebp
sub
sub
clc
cmp
xlat
mov
rclb
addr16
cltd
repnz
or
xor
inc
sub
xchg
aam
mov
mov
cmp
gs
sub
jp
sbb
std
pushf
lret
adc
xchg
and
stos
pushfw
das
js
xchg
mov
daa
cmp
jl
rcr
cmp
xchg
push
xor
jne
mov
imul
aaa
dec
jle,pn
fs
ror
push
aam
insb
dec
pop
jecxz
or
movsl
push
fwait
and
dec
lods
jno
jns
bound
ljmp
xchg
call
add
insl
lds
arpl
cmp
lea
ja
push
push
cmp
fs
jb
mov
xchg
lcall
test
and
insl
add
cmpb
mov
sti
andl
jmp
addr16
jb
add
cmpsl
dec
xor
in
dec
hlt
xor
jbe
jl
mov
nop
sbb
mov
mov
inc
notl
push
addr16
aas
mov
iret
dec
push
mov
in
sbb
jb
push
lret
fiadds
and
in
scas
lock
mov
cmpsl
add
inc
sub
pop
lret
xchg
add
push
mov
test
mov
sub
scas
jns
xchg
dec
test
cli
ja
adc
xor
pop
loop
loop
data16
pop
xor
push
subl
xchg
stc
or
push
nop
insl
and
adc
int3
xchg
adc
dec
cmpsb
xchg
jp
dec
xor
add
mov
dec
je
cli
fidivrl
dec
cltd
mov
xchg
das
mov
push
fxtract
lods
pop
mov
scas
inc
or
cld
repz
sbb
stc
sub
push
jl
jl
sbb
adc
ja
syscall
cmp
adc
mov
xchg
and
outsl
in
in
insl
fstpl
inc
cmp
aad
xor
les
or
cmp
idivb
movsl
or
adc
jge
cmp
adc
lods
fnstenv
jle
jb
or
mov
loopne
xor
es
xchg
imul
xchg
dec
les
jnp
cltd
out
or
icebp
insb
ds
mov
aaa
xchg
and
lea
xor
jns
add
jb
add
loopne
insl
sub
jnp
or
jo
ja
mov
stos
mov
imul
fildll
pop
xchg
lods
mov
daa
mov
js
stos
push
inc
scas
jmp
cmp
xchg
rol
mov
jno
inc
out
or
daa
nop
lret
add
bnd
nop
daa
in
cmpsl
js
adc
ljmp
and
ja
mov
inc
sahf
test
jae
aaa
popa
dec
outsb
cmp
shll
pop
in
xchg
shl
pusha
call
push
out
sub
adc
xchg
in
xor
mov
mov
fwait
rorl
lret
out
add
loopne
jno
lods
and
cmp
xor
das
sub
add
fwait
mov
dec
dec
sub
rorl
mov
dec
inc
enter
nop
xchg
movsb
mov
pop
ja
cmp
push
cld
add
das
add
pop
sub
stos
push
imul
add
sti
jb
sbb
bound
jb
mov
data16
dec
xor
sub
jns
sub
mov
stc
mov
or
orb
fdiv
out
and
data16
mov
scas
add
mov
imul
mov
sbbb
sbb
out
mov
adc
jnp
xorl
ret
popf
mov
push
jmp
xorl
push
add
push
xor
add
sbb
dec
lock
xchg
enter
cmpsb
nop
or
lcall
outsl
add
sbb
xchg
dec
imul
cmc
pop
pop
mov
inc
jo
lret
test
mov
add
aaa
arpl
scas
add
push
pop
cmp
xor
test
cltd
mov
sub
sbb
lods
test
jmp
xchg
cmp
jmp
mov
loop
mov
fsubrl
into
jecxz
cmp
bound
mov
movsb
fcomi
popf
jo
pushl
aaa
jnp
jns
repz
outsl
push
je
cmp
inc
lahf
xchg
add
sbb
add
addr16
inc
dec
xor
mov
roll
mov
lds
jg
outsb
imul
rorl
push
out
xor
lret
es
fsubs
adc
imul
sarl
fadd
cs
lods
stc
das
xchg
aad
roll
lods
add
adc
rcrb
fst
mov
addl
stos
lea
inc
jmp
into
pop
addb
jns
add
jnp
in
cmp
push
jecxz
ret
or
das
jb
filds
xchg
imull
pop
dec
dec
add
ret
jecxz
mov
mov
adc
into
fnstsw
or
dec
outsl
or
jmp
jmp
outsl
and
into
sbb
pop
mov
das
int3
mov
mov
pop
mov
mov
hlt
push
sbb
out
fcomps
loopne
cmp
mov
xchg
pop
inc
in
adc
xlat
sub
rol
pushf
aam
lods
adc
rclb
cs
mov
mov
or
fs
mov
aas
cmc
stos
and
enter
add
dec
shl
fwait
sub
fldenv
shlb
jp
ret
dec
scas
sub
mov
movsb
negl
adc
push
lock
test
xchg
pop
mov
in
push
push
cmp
pop
nop
stos
shrl
adcl
sub
and
out
mov
lcall
jecxz
imul
and
lret
or
cmp
pop
push
clc
jo
push
std
arpl
xor
pop
sbb
popa
movsb
lock
test
and
ljmp
arpl
lahf
imul
adc
inc
inc
inc
out
lcall
popa
stos
mov
or
out
mov
mov
cmp
mov
aam
mov
repz
or
cmpsb
lahf
add
pop
and
ljmp
mov
cld
mov
in
sbb
scas
adc
push
nop
adcl
inc
cmpsl
aas
push
push
add
out
out
adc
fs
cmp
mov
or
sub
sti
stc
jns
inc
pop
ss
fisttpl
sub
stos
mov
stc
push
ja
in
aaa
xchg
dec
adc
xor
lods
xor
fxch
sub
insb
pop
xor
jne
pushf
or
std
out
imul
xor
arpl
out
mov
add
xchg
mov
and
jmp
mov
dec
pushf
mov
sub
adc
imul
push
data16
push
jae
out
fisubrl
arpl
dec
scas
dec
sahf
fsubrl
sbb
sar
mov
pop
mov
xchg
xchg
sahf
push
xchg
jbe,pn
dec
test
mov
sub
lea
push
jge
push
vcmpps
js
mov
stos
jmp
pop
test
test
mov
xlat
or
add
test
pop
inc
popa
push
scas
loopne
mov
ljmp
pop
push
inc
fcomip
lret
je
test
jns
sbbb
add
push
push
ficompl
push
mov
jno
aad
in
pop
divb
and
outsb
or
adc
notb
push
xchg
pushf
mov
lahf
je
mov
dec
sub
xchg
or
inc
fnstcw
adc
movq
jbe
mov
dec
cmp
mov
test
shl
mov
iret
jno
push
ret
pop
les
push
push
pop
pop
lret
je
dec
andb
xchg
mov
js
push
and
cmp
and
je
jl
mov
ljmp
scas
test
lods
dec
rclb
cmp
sub
stos
popf
fldl
mov
adc
pop
sbb
mov
pushf
js
lock
pop
aaa
jp
adc
push
mov
mov
xor
xchg
cld
xchg
test
test
mov
adc
push
cmpsl
mov
add
enter
lods
pop
xchg
dec
jae
mov
push
lret
ljmp
cli
xchg
mov
adc
xchg
pop
inc
jns
cs
mov
xor
adc
xlat
lods
or
mov
mov
xchg
mov
rcrb
adc
or
mov
mov
cltd
pop
daa
or
and
and
xor
jbe
into
out
dec
fildl
sub
popa
shrb
mov
ret
mov
jmp
shll
or
mov
fwait
cmp
push
push
andb
fldcw
cli
mov
jo
movsb
add
int3
xchg
adc
and
sti
popa
lods
sub
mov
jb
xlat
jle
push
jmp
stc
adc
or
push
cmp
push
mov
adc
push
shll
in
aaa
into
minps
adc
out
pop
jge
mov
fisttpll
jp
test
in
mov
xor
xchg
bound
jmp
pop
mov
inc
and
dec
dec
je
lret
cmp
sbb
pop
call
push
loopne
mov
rcr
fs
sub
lock
sub
mov
aaa
mov
lret
mov
pop
aam
sub
pop
cmp
and
cli
xchg
xchg
fsubrs
inc
and
in
jecxz
out
push
and
lret
lods
jnp
xchg
arpl
addr16
jg
xor
pop
repnz
jge
lods
dec
add
inc
insb
cmp
loop
scas
jno
stos
in
ljmp
imul
mov
pop
nop
pop
lods
call
adc
nop
lret
push
push
cmp
pop
in
aaa
pop
es
dec
adc
jns
add
jmp
ja
pop
out
push
pop
dec
sbbl
and
pop
mov
roll
test
rcrl
jae
xchg
jle
mov
dec
call
dec
mov
outsl
xchg
mov
add
aam
test
cmp
jbe
leave
inc
sbb
sbb
cmp
sub
mov
fisttpll
push
jmp
mov
stos
mov
dec
hlt
lret
and
add
call
fldenv
cli
lea
xor
ja
jbe
inc
hlt
fsub
int
add
mov
shr
out
stos
push
pop
mov
daa
icebp
inc
pop
fsubrs
bound
int3
lods
pop
jmp
push
flds
dec
mov
clc
mov
cld
mov
mov
inc
mov
mov
cwtl
push
xchg
hlt
xlat
insl
sbb
adc
sbbb
fs
lods
loope
jnp
jo
mov
mov
aam
shl
mov
sbb
movsl
xor
pop
adc
cmpsb
xor
push
sub
imul
in
jb
xor
mov
jp
cltd
mov
divb
jb
cli
sbb
std
roll
xor
jne
lahf
gs
push
loopne
data16
pusha
mov
cmp
xor
dec
jge
icebp
js
insb
mov
mov
lock
pop
loop
rcll
lcall
jle
test
divb
sub
jns
nop
mov
mov
in
pop
xchg
push
inc
sbb
lret
push
scas
add
jl
mov
test
mov
mov
ret
repnz
or
jnp
jne
pop
stos
mov
cmp
xchg
push
sub
scas
scas
fs
jno
adc
aas
test
or
lahf
cld
jle
or
push
scas
cmpsl
test
xchg
outsl
jo
sbb
mov
cwtl
popf
cltd
or
jbe
out
mov
jne
and
mov
jp
ror
nop
in
int3
je
fstpt
test
outsb
nopl
sbb
mov
popa
xchg
jl
xor
js
add
jno
je
xorb
xor
adc
pushl
test
xlat
addb
pop
mov
rol
insb
mov
sbb
fisubl
nop
shll
mov
or
push
jb
and
cmp
xor
mov
sbbl
gs
insb
popf
ficoms
cs
sub
cmpsl
dec
adc
push
ljmp
xor
outsb
ss
mov
inc
mov
lret
sbb
xlat
sbb
xchg
mov
dec
jno
ret
cmp
push
push
xor
in
cs
rorb
cld
mov
xlat
ss
jae
mov
add
std
shrb
xchg
and
fadds
or
ror
jecxz
adc
in
shrb
call
xchg
movsb
cmpsb
inc
arpl
lahf
mov
and
jl
dec
fmull
mov
mov
daa
lret
mov
enter
test
xlat
aam
repz
xor
xor
addr16
std
mov
loop
ja
dec
xchg
aad
rcl
adc
push
xchg
scas
in
jb
jo
fimuls
sbb
stos
xor
lret
lods
push
movsb
sbb
add
dec
jp
pop
dec
adc
or
aas
adc
mul
aas
and
mov
jo
cli
mov
mov
lahf
inc
test
push
lods
or
cmc
or
ss
cli
incl
pop
add
mov
adc
jl
je
add
xchg
scas
js
fisttpll
pop
jecxz
cmp
pushf
pop
xlat
cwtl
sub
fmuls
in
mov
sbb
sub
adc
mov
and
les
push
cmp
iret
fdiv
sub
hlt
mov
stos
mov
xchg
jnp
and
mov
mov
aaa
sbb
ficompl
pop
cmp
or
push
inc
mov
pushl
mov
add
dec
lret
dec
sbb
fs
in
mov
or
flds
jle
cmc
adc
jle
sbb
lds
cmc
data16
xchg
std
in
inc
scas
mov
mov
dec
jp
jne
pop
lea
stos
aad
lea
jns
adc
inc
mov
push
or
add
jne
mov
xchg
stos
adc
loopne
mov
es
mov
adc
mov
lcall
xor
mov
inc
mov
mov
mov
mov
xchg
sbb
mov
fsubr
mov
pop
clc
int
mov
bound
imul
xlat
mov
push
pop
outsb
cmc
jns
ja
fcmovnb
bound
std
mov
mov
stos
sbb
cld
fs
sbb
shll
add
add
xchg
and
sti
sbb
mov
ds
mov
call
rolb
mov
stos
fwait
cmp
cwtl
lock
xor
fs
pushf
cmp
ja
call
xchg
stos
inc
cs
cmp
insb
test
imul
add
test
clc
pop
add
aam
push
lahf
or
sbb
push
push
in
popa
ret
dec
ss
arpl
sbb
insb
sbb
enter
push
stos
xor
mov
mov
mov
out
or
adc
aad
addl
call
mov
adc
cmp
dec
push
shrb
sbb
cmp
in
push
inc
iret
scas
add
sbb
daa
pop
test
and
xor
push
mov
push
fs
mov
shl
in
inc
sbb
out
jl
or
push
inc
mov
out
cmp
xchg
jle
and
mov
xchg
adc
push
inc
scas
js
xor
add
sbb
jmp
mov
push
into
in
cmpsb
ds
inc
xchg
or
dec
inc
repz
cmp
pushf
stc
pop
popa
and
cmp
testb
cmovle
je
imul
testl
adc
shl
orb
cmpsl
inc
ret
xor
ss
cmp
inc
sbb
stos
int3
jne
shlb
push
xlat
int3
mov
mov
insb
movl
mov
jg
gs
and
xchg
cmpb
adc
stos
je
or
jns
sbb
into
fwait
and
inc
jbe
iret
sbb
add
fcoms
dec
dec
sbb
gs
ja
add
inc
in
pop
pop
ficompl
nop
jae
in
test
mov
rcrb
cld
fisubs
decl
loop
xor
sbb
push
push
sti
enter
jge
clc
lahf
sti
gs
stc
mov
pop
jae
dec
sbb
aaa
push
push
inc
ds
mov
mov
jl
int3
andb
mov
mov
ret
cmpsl
or
mov
scas
push
jae
sub
out
decl
mov
jnp
jmp
ljmp
sbb
fstpt
jecxz
pushf
es
inc
mov
xchg
loopne
dec
out
push
insb
lret
fstpl
adc
cmp
mov
loopne
jno
int
aaa
xrelease
adc
dec
js
out
xchg
dec
jae
pop
sbb
popa
jbe
cli
popa
imul
or
daa
fdivrl
xlat
push
inc
xchg
ficomps
cmpsb
add
push
test
aad
clc
sub
in
addl
leave
cmc
repz
sbb
shlb
int
insl
out
adc
test
pushf
lret
int
push
and
jl
fdivrs
mov
inc
mov
sbb
jmp
mov
lds
es
pop
sub
dec
or
insl
pop
in
iret
repz
insb
inc
stc
add
cmp
adc
add
pop
add
xchg
xchg
dec
sbbl
sub
mov
jg
sbb
bound
mov
xor
rcr
mov
pusha
in
push
movsl
fwait
jns
cld
add
mov
adc
fidivs
rorb
cmpsl
test
jl
in
fs
or
mov
in
mov
outsb
push
test
adc
mov
mov
fld
fidivrs
xchg
dec
test
or
xor
or
mov
pop
in
dec
inc
ret
cmc
mov
sub
mov
push
test
lock
sarl
repz
scas
fstps
test
pop
add
inc
sub
mov
arpl
mov
sbb
cmp
and
pop
xchg
adc
dec
push
in
insb
jl
adc
xlat
sub
xor
arpl
ja
aad
sbb
sbb
dec
mov
xchg
pop
rsqrtps
cmp
addr16
scas
xor
cmp
xor
xchg
repnz
loopne
mov
jae
cmp
scas
sub
adc
lret
hlt
mov
popf
loope
push
cmp
and
dec
pop
hlt
mov
mov
mov
ds
rcrl
jae
rol
cs
sti
popf
aaa
mov
mov
or
pop
and
pushf
stc
imul
das
ds
push
mov
adc
std
popa
ror
fbld
shll
pop
xor
add
repnz
adc
sar
push
lods
clc
enter
mov
push
mov
xchg
adc
ret
lds
sbb
cli
cwtl
shll
sub
jg
push
stos
jecxz
divl
pop
rcrl
icebp
adc
xchg
notb
rorb
out
cs
xchg
add
bound
sub
stc
sub
xchg
push
push
pusha
push
push
sub
int3
rcll
push
cmp
cs
push
or
sbb
add
insb
int3
mov
cmp
out
mov
and
xor
out
dec
lret
inc
mov
popa
mov
fadds
jp
sub
testl
push
pop
mov
insb
das
mov
lcall
repnz
cmc
xor
test
fdivl
mov
pop
mov
int3
lds
lret
mov
ja
test
cmpsl
sbb
fwait
outsl
sbb
mov
call
ja
call
popf
iret
fsubl
test
sub
mov
data16
stc
dec
cmp
bound
mov
push
incb
cmc
stos
jge
jp
push
arpl
xor
jmp
jle
pop
dec
or
xchg
imul
aad
js
mov
xchg
dec
and
dec
cmp
mov
push
jg
aas
mov
jno
stc
stos
add
data16
xchg
lret
andl
push
inc
imul
add
leave
out
mov
sub
ss
inc
aam
or
cmp
sub
pop
jle
sub
sar
es
rcrb
test
in
jae
cs
sub
push
mov
das
aam
das
sbb
pop
fdivl
out
das
adc
mov
movsb
xchg
dec
divl
xchg
xchg
sti
cmc
xor
pop
inc
dec
jle
and
sbb
fildl
push
cmp
aam
mov
das
outsb
jno
rorl
add
rclb
lds
push
enter
sub
sbb
jae
lods
fnstenv
xchg
mov
inc
add
cmp
pop
lahf
insl
mov
fwait
es
or
je
fwait
mov
ja
xchg
adc
xchg
add
imul
fbld
xchg
pop
mov
sub
cltd
movl
cltd
add
push
add
cmp
ds
push
shl
ljmp
subb
bound
inc
fwait
cmp
ret
movsb
mov
xchg
popf
popf
mov
inc
insl
jle
bound
mov
push
scas
add
fsubl
leave
mov
fcomps
adc
mov
ret
push
mov
xor
fidivs
add
and
leave
data16
mov
inc
into
sti
stc
adc
pushf
push
dec
test
pop
adc
mov
mov
pop
clc
arpl
jle
lock
mov
sti
scas
sbb
arpl
mov
push
cltd
into
negl
sarl
mov
popa
insl
lods
xchg
out
sarb
fdivrs
sub
pop
cli
nop
sub
sbb
movsl
rclb
popa
push
test
add
adc
sbb
pop
push
rorl
imul
int3
sub
mov
adc
xchg
push
push
jg
mov
or
test
push
shrl
imul
ss
lcall
inc
int3
mov
pop
stos
jg
cwtl
mov
daa
sti
fwait
popa
jecxz
jg
mov
cli
pop
in
and
popa
aas
mov
rol
adc
pusha
inc
sub
dec
pop
mov
mov
inc
cmp
xchg
jl
orb
and
push
sub
cmp
roll
mov
notb
add
insb
leave
aad
add
push
push
adc
mov
lods
rcr
lea
sub
xchg
mov
daa
clc
ret
pop
dec
pop
or
mov
and
int
int
xlat
add
dec
sbb
cmp
addr16
sti
cmc
mov
or
jmp
push
xchg
loope
cmp
jbe
mov
fs
cmp
popf
xor
or
sahf
cmp
add
xchg
xchg
movsl
xchg
mov
xchg
lods
test
ljmp
jbe
bound
mov
pushf
sarl
mov
or
mov
outsl
test
pop
mov
pop
or
push
ja
ds
xor
enter
dec
mov
sbb
cld
dec
out
imul
ja
jecxz
movsl
je
push
sti
pop
mov
pop
ss
ret
pusha
pop
lods
sub
and
cmp
push
lahf
xor
in
sbb
fs
xlat
sbb
fldt
rcrl
hlt
jl
inc
push
push
aas
les
fldt
inc
push
mov
and
fsubs
test
les
xorl
push
out
or
into
or
addr16
xchg
inc
jnp
cmp
scas
imull
ret
mov
xor
ret
jp
or
cmp
dec
xlat
js
popf
mov
popa
scas
arpl
or
push
pop
jg
and
stos
das
and
push
push
xchg
pushf
lock
xchg
push
sbb
sub
sub
xor
das
out
mov
push
leave
xor
loop
ret
inc
bound
dec
jne
mov
mov
ss
lahf
sub
aam
or
xor
mov
in
mov
add
pop
scas
mov
inc
push
inc
in
push
jge
inc
jno
aas
adc
shlb
sub
xchg
in
inc
mov
fwait
xchg
or
mov
aad
cmp
adc
stc
sub
xor
pusha
mov
dec
xchg
dec
pop
mov
mov
out
xchg
sbb
rcll
inc
add
inc
cmpsl
pop
pop
stos
fwait
and
mov
imul
mov
inc
js
add
inc
adc
mov
stos
nop
aaa
cmp
ss
mov
push
jns
sbb
push
mov
out
sub
movb
xlat
push
ljmp
fimuls
pop
push
fidivl
lahf
dec
stc
add
repz
imul
movsl
repz
pop
push
icebp
je
icebp
pop
mov
push
mov
pop
sarl
cmp
mov
push
xchg
into
sub
into
cmp
ljmp
aad
push
push
mov
lock
or
xor
mov
dec
push
push
adc
mov
lret
mov
mov
aaa
roll
dec
cmp
xchg
inc
clc
or
pusha
inc
mov
repnz
stos
loop
and
stos
ds
les
sbb
mov
sub
mov
sarb
xchg
pop
aad
sbb
shll
add
pop
aad
sti
mov
sbb
and
cld
pop
inc
aaa
inc
cmc
pop
push
xor
jg
daa
in
cmp
xchg
iret
fwait
test
add
sub
pop
mov
loope
mov
int3
xor
dec
dec
int
mov
inc
xchg
sarb
add
pop
in
dec
int3
and
lret
mov
ss
lahf
adc
sub
cmpb
xor
pop
push
call
mov
xor
sahf
test
rcrb
movsb
lods
imul
mov
dec
fiadds
leave
jl
jl
jns
cltd
fcomp
stos
imull
jae
sub
ds
cmp
and
sbb
pushf
push
cwtl
jne
pop
dec
pop
sub
add
xor
lea
pusha
push
xchg
sub
lods
out
stos
pop
inc
jge
xor
jnp
cltd
ljmp
sbb
inc
pxor
sbb
add
inc
cmpl
add
inc
xchg
and
jb
fwait
dec
aam
xchg
outsb
ror
je
mov
icebp
sbb
out
lock
leave
mov
pop
jae
add
inc
je
popl
sub
or
ficoms
mov
xchg
pop
repnz
or
shr
or
mov
dec
dec
jecxz
fucomi
into
push
sbb
adc
scas
ret
push
cmc
jp
mov
cmp
jle
jb
inc
in
sub
dec
arpl
sub
fucomp
mov
dec
outsb
pop
cmp
sar
sub
cmp
xchg
loop
cmc
test
pop
shll
xor
jnp
jle
push
les
into
cmp
test
inc
out
jp
cmpb
xchg
out
mov
push
and
mov
int3
ret
mov
fdivs
mov
sub
mov
rcrl
mov
adc
clc
popa
stc
das
sbb
sub
cld
mov
push
xor
loope
pop
daa
mov
mov
lcall
ss
je
movsl
dec
aad
push
dec
imul
push
dec
push
mov
imul
movsb
add
aad
or
or
jbe
inc
cmp
popf
pushf
iret
add
fcomps
mov
or
jecxz
sbb
lcall
mov
sub
leave
xchg
mov
jmp
mov
clc
cwtl
repz
pinsrw
iret
add
pop
xchg
pop
flds
push
lcall
es
icebp
pop
sar
lret
aas
mov
mov
dec
repz
xchg
lahf
mov
xchg
and
xchg
add
mov
inc
cmp
or
dec
push
cmp
out
xor
mov
or
inc
cmp
dec
orl
and
sub
jno
arpl
outsl
cltd
mov
xchg
inc
cmp
fnstenv
sbb
sub
clc
jge
cmp
jbe
jmp
imul
pop
pop
aad
sub
mov
pop
stc
js
sub
sbb
sbb
pop
in
xor
out
cmc
mov
xor
xor
ss
push
nop
mov
lods
fstps
subb
adc
add
addr16
sbb
imul
testl
adc
sub
and
xchg
and
xchg
cli
int
xorb
mov
sub
sbb
loop
add
in
sbbl
lcall
sub
insl
jp
dec
es
loope
stos
fisubs
mov
or
ret
movsb
mov
sub
push
and
inc
push
lea
cwtl
fisttpll
std
mov
mov
pushf
sti
sbb
ret
xor
push
lcall
inc
push
push
pop
jle
dec
out
add
in
adc
or
in
push
adc
in
inc
jg
inc
inc
arpl
scas
mov
adc
sbb
cmp
mov
push
gs
fisttpll
xor
add
fstpt
pop
xor
or
push
test
fcomip
aam
sub
loopne
test
xor
hlt
imul
mov
cmp
fadds
mov
jmp
and
pop
push
ror
imul
sbb
and
xor
iret
push
leave
mov
cli
imul
xor
sbb
rcrb
sbb
es
test
dec
jle
adc
je
mov
fldcw
pop
xchg
push
or
xor
call
jb
mov
mov
or
enter
cltd
mov
stos
test
roll
xor
mov
aam
jnp
test
mov
rolb
cmp
ja
sub
inc
sub
jae
jecxz
dec
push
lods
jbe
aas
insb
je
in
cltd
gs
lods
mov
int
jno
fbstp
into
push
cltd
arpl
loope
and
fdiv
push
sbb
sbb
inc
sbb
push
xchg
pop
xor
adc
js
mov
cwtl
out
fsubrl
cs
scas
aam
adc
and
data16
and
ror
roll
mov
lock
push
sahf
es
xchg
xchg
or
mov
mov
in
or
or
and
mov
mov
inc
inc
jge
push
aaa
inc
loopne
xor
pop
test
addr16
jl
add
pop
dec
mov
jb
enter
xor
popa
es
mov
push
cmc
push
push
and
popf
and
ret
xor
stos
fwait
dec
addr16
shll
mov
or
cld
aaa
cltd
xor
fistl
cmp
sbb
sub
sti
xchg
cmp
icebp
mov
cmp
mov
decl
push
lret
add
nop
xchg
ror
ret
fwait
push
pop
push
jo
ds
scas
jns
adcl
popa
in
jmp
xchg
gs
ds
jp
mov
call
adc
dec
ret
mov
dec
sarb
sub
lcall
mov
jae
fstpt
mov
sti
iret
lahf
lahf
sbb
int
xchg
lret
push
dec
xor
xchg
call
movsb
gs
mov
mov
xor
ds
test
cs
mov
mov
adc
jg
lock
fildll
aam
mov
stc
fcmovne
ficoml
jg
das
inc
clc
scas
adc
push
inc
push
mov
jmp
push
mov
add
xchg
cmp
ja
pop
ljmp
stos
ds
loope
or
or
adc
insl
pushf
jb
mov
popa
cmc
movsb
pop
fldt
pop
jb
js
mov
or
test
lret
jle
hlt
sbb
daa
mov
sbb
outsb
or
call
std
add
into
into
jae
scas
jecxz
push
sbb
in
jno
sahf
sahf
sub
push
inc
add
fidivl
lods
scas
in
pop
mov
pop
mov
sarb
or
xor
xchg
and
push
rcrl
scas
or
fistl
cmp
outsl
xchg
xchg
push
test
dec
cli
ret
cmp
mov
sarl
mov
mov
push
in
mov
or
outsb
push
mov
popf
flds
or
adc
clc
mov
push
call
or
add
pop
push
out
sbb
mov
ds
cs
adc
adc
enter
hlt
jb
or
xor
test
out
or
sbb
mov
xor
fsubl
push
andb
xorb
fstl
dec
adc
scas
das
mov
test
push
adc
adc
lods
pop
jno
jge
lcall
movsb
cmp
or
xchg
pop
pusha
push
sahf
xchg
push
ss
call
xchg
jb
sbbb
lret
out
xor
adc
aaa
lcall
xchg
mov
loope
pop
clc
add
lret
mov
sbb
inc
data16
dec
xchg
and
add
inc
jnp
jg
je
jo
pop
dec
roll
ja
ret
cwtl
mov
xchg
clc
pushf
popa
scas
inc
dec
stos
bound
sub
mov
mov
pushw
xor
sub
and
test
je
xchg
jp
jno
xchg
xchg
gs
pop
iret
adc
dec
rorb
lret
sbb
cmp
push
mov
enter
int
mov
pop
pushf
int3
pop
stos
dec
rorb
adc
pop
adc
mov
insl
pop
loopne
ret
cmp
push
rcrb
mov
and
pop
test
or
cld
push
add
cs
sub
shll
jno
in
enter
jle
sbb
fldenv
cmp
subl
mov
outsl
jae
pusha
ljmp
fsubl
mov
leave
stos
pop
jecxz
orl
test
sub
xor
insb
xor
faddl
je
rcr
pop
or
stc
testb
mov
aad
inc
iret
sub
inc
xchg
notl
mov
xor
iret
stos
in
stos
ret
out
xor
fcompl
inc
int
pop
cwtl
pop
mov
stos
out
mov
mov
cli
pop
xor
shlb
mov
insb
xor
in
jbe
ss
xor
jb
int
pop
and
or
stc
jg
pop
or
jecxz
in
mov
out
pop
mov
jae
lret
mov
sub
dec
add
jns
out
shrb
or
scas
mov
hlt
sbb
jecxz
mov
das
push
pop
pop
xchg
adc
xlat
aaa
xchg
fistl
loop,pn
fnstsw
mov
xor
adcb
pop
inc
xor
bound
mov
andl
push
lea
std
or
mov
or
cmp
dec
xchg
or
pop
mov
cmp
mov
cmp
add
mov
push
es
mov
arpl
cli
add
jno
jns
inc
sbb
push
push
pop
pop
arpl
jmp
xor
and
xor
insb
dec
ret
push
fdivrl
mov
mov
in
sbb
pop
out
pop
ss
in
ret
cmpsb
data16
insb
gs
sti
add
mov
pop
std
adc
cmp
cmp
aas
sbbb
popa
sub
mov
add
inc
push
adc
pusha
sub
test
dec
mov
dec
enter
push
push
lcall
dec
add
and
pop
and
repz
test
sarl
jp
ljmp
sub
sti
std
cld
cmp
jnp
pop
mov
mov
sub
out
and
sbb
mov
lods
xchg
xorb
cmc
stos
sti
xor
adc
push
subb
subl
aaa
sbb
jbe
lret
insb
outsb
or
outsl
inc
pop
jp
mov
mov
cli
or
mov
jge
and
in
rolb
mov
pushl
imul
int3
subl
loop
daa
shlb
push
sbbl
mov
add
xor
sbb
xchg
or
fwait
push
and
push
dec
outsb
xchg
push
or
test
sahf
popa
or
pop
pop
loope
push
in
push
inc
lea
scas
mov
pop
leave
andb
lret
cmpsl
pop
push
mov
adc
push
xchg
mov
cmp
clc
jle
push
mov
sbb
xchg
in
add
jle
and
ret
sbb
iret
outsl
aaa
test
mov
mov
std
and
stc
push
xlat
fisubrl
cmp
out
adc
into
cli
aad
je
push
mov
shll
inc
cmp
add
push
loope
mov
xchg
les
dec
mov
rcrb
inc
hlt
push
stos
bound
mov
pop
mov
lods
aad
jnp
in
add
divl
sub
sti
sbb
xorb
test
mov
dec
jp
pop
mov
push
xor
fsubs
push
pop
cld
fcomi
stos
and
clc
icebp
stos
popf
lods
test
nop
test
xor
in
sub
adc
jbe
lods
mov
sarb
xchg
pop
icebp
mov
js
sub
dec
xchg
ljmp
popf
or
sahf
xor
cltd
jnp
sbb
jne
dec
insl
inc
enter
js
loop
lock
js
lret
repnz
cmpsb
jns
pop
cs
dec
test
sub
xor
mov
sub
test
imul
call
add
outsl
inc
pusha
outsb
sarb
adc
add
push
jns
lea
andl
enter
adc
lret
enter
xor
mov
pop
dec
pop
mov
pop
cmp
pop
outsl
sbb
insl
jns
mov
mov
jno
dec
setge
or
inc
ror
imul
bswap
out
push
stos
jp
movsl
xchg
pop
inc
xchg
int3
mov
mov
mov
cmpsl
lock
and
loop
cmp
and
test
mov
aas
inc
scas
aaa
add
in
pop
cld
mov
xchg
xchg
mov
jo
aas
fsts
mov
add
mov
orl
hlt
in
jl
sbb
adc
je
jb
jmp
and
xchg
mov
jg
pop
not
mov
sub
ljmp
call
mov
pushf
testl
sbb
ja
gs
loope
loopne
mov
sar
popa
dec
and
lret
mov
shlb
xor
ret
clc
lret
or
sub
add
cmp
fistpll
push
cltd
xlat
fs
lahf
ds
pop
dec
mov
lcall
sub
xor
inc
mov
mov
sti
call
xor
and
cmp
loope
adc
call
cmc
lods
sbb
fstps
dec
iret
cmpsb
outsl
pop
and
ret
sub
ret
rclb
mov
jno
mov
and
mov
outsl
sub
fldenv
jp
icebp
mov
aad
mov
add
pop
and
xor
or
inc
mov
cmp
sbb
push
shlw
outsb
test
lcall
jb
dec
fsub
or
dec
inc
lods
ljmp
aam
add
sbb
sarl
dec
jb
jno
imul
dec
add
negb
lods
fcomps
mov
mov
push
cli
aam
in
mov
cmp
popa
sub
inc
rorl
pop
outsb
je
jg
push
push
xor
mov
add
imul
or
jb
mov
dec
in
shrb
nop
loopne
mov
in
popa
pushf
push
jno
push
test
push
jns
inc
cmp
mov
dec
jnp
xchg
xchg
out
jns
roll
gs
cmpsb
int3
std
fistpl
adc
mov
test
cli
push
iret
mov
push
lods
or
cs
popf
in
mov
cmp
subl
fmulp
sbb
adc
fsubrs
mov
test
lods
jne
test
adc
cltd
jle
dec
pop
jb
xor
out
sahf
mov
sbb
test
fsts
adc
push
mov
xchg
pop
push
dec
inc
inc
movsb
roll
xorl
cwtl
mov
push
xchg
mov
cmpsl
sub
xchg
fld
xor
and
fs
jae
ret
mov
mov
mov
cmpsb
xlat
xchg
jb
xor
mov
lock
leave
xchg
lds
frstor
fldl
arpl
aaa
popa
cmp
out
and
clc
repz
jb
push
xor
fiaddl
mov
shll
mov
push
lea
mov
sar
arpl
loop
mov
ja
ret
aas
xor
xchg
sahf
mov
mov
mov
imul
xchg
dec
jo
pop
mov
sahf
aaa
stos
aas
js
dec
ret
cmp
insl
and
ljmp
scas
ds
aam
out
das
dec
adc
enter
imul
mov
xchg
push
cmp
stos
push
test
sub
pusha
mov
sbb
arpl
ss
jo
out
pcmpgtb
push
sbb
mov
ds
xor
fcmovb
push
outsb
push
popf
popf
sub
gs
stos
aad
mov
inc
sahf
fwait
inc
insl
ss
pop
push
imul
imul
dec
pusha
mov
pop
and
mov
and
loope
das
and
ds
xlat
or
and
movsb
or
mov
lods
call
shrb
cmp
stos
dec
rolb
les
add
inc
fyl2xp1
jne
xchg
dec
int3
and
decl
jns
pop
mov
lock
in
jecxz
dec
frstor
push
pop
mov
fcompl
test
subl
lock
stos
mov
mov
cmpsl
push
bound
adc
decb
cmp
adc
pop
bound
push
mov
shll
cmp
ja
jmp
mov
sub
xor
adc
jecxz
inc
clc
xchg
subb
pop
add
test
scas
or
jae
imul
jae
stc
pushf
pop
mov
std
add
cmp
lret
cmc
lock
or
and
cmc
dec
lea
pushf
std
add
sub
adc
daa
das
sub
dec
insb
sbb
scas
xor
dec
push
imul
div
push
addr16
jb
cltd
negb
xlat
mov
xchg
push
pop
repz
inc
sub
sarb
icebp
paddusw
and
enter
bound
xchg
or
and
inc
pop
bnd
xor
fsubrl
inc
cmc
mov
fidivl
adc
in
mov
adc
cld
dec
push
sub
ss
test
fxch
or
push
jg
pop
add
fmull
or
sbb
jl
and
jb
mov
std
call
test
lds
or
repz
js
mov
adc
mov
jbe
stos
dec
fs
ret
and
sarl
push
cmp
testb
pop
rcrl
out
gs
jnp
jns
adcl
stos
xchg
shl
filds
jmp
xor
cli
dec
cmpsb
popa
mov
jb
pushl
lret
lret
sbb
pop
xor
or
sub
mov
xchg
cmp
or
mov
imul
in
mov
mov
add
sti
mov
loopne
stos
lods
popf
mov
mov
subl
popa
mov
add
cltd
xor
js
negl
or
mov
out
push
ds
jp
es
inc
shll
sbb
rcl
inc
testw
and
push
popa
shrl
pop
and
mov
or
mov
adc
lds
jecxz
es
ss
pop
xchg
sub
stc
loopne
sub
popa
lock
fstpl
cltd
lret
lods
lcall
fidivs
mov
test
mov
inc
je
ror
sbb
pop
pop
fists
fsts
rcl
pop
xchg
xchg
mov
xchg
ret
mov
pop
hlt
pop
jmp
jo
orl
sbb
in
lahf
orb
outsb
lret
shll
dec
addb
popf
movsb
jo
fwait
les
sbb
add
adc
pop
inc
lods
cld
movsb
jp
pop
mov
data16
adc
jno
sbb
ss
aam
daa
push
sbb
and
sbbl
test
xor
scas
mov
mov
sub
add
pushf
xor
pop
mov
cmp
lea
addr16
aaa
mov
xchg
dec
pop
adc
and
cmpsb
jg
popa
stos
pop
jbe
push
adc
out
je
cmpsl
dec
sub
push
out
pop
cmpl
cs
or
fwait
push
add
mov
or
and
sbb
mov
mov
cltd
mov
dec
out
push
push
sub
lret
cwtl
jnp
call
and
cmp
inc
cmpb
mov
js
sahf
cwtl
mov
lahf
sub
dec
lret
sub
imulb
mov
ret
cli
or
daa
mov
push
xor
lret
dec
push
mov
sub
dec
ret
jecxz
rorl
in
mov
add
arpl
sbb
adc
scas
lds
sub
out
sbb
sahf
das
adc
fstl
cmp
sti
mov
push
fs
inc
je
mov
sub
pop
clc
jb
or
aam
sub
jl
leave
mov
fcmovne
mov
aam
and
pop
and
mov
mov
mov
pop
push
push
cltd
or
repnz
push
in
fdivl
lcall
mov
fmull
sbb
xchg
inc
in
imul
les
push
inc
sahf
dec
faddp
xor
aas
jae
inc
out
movsb
aam
lea
mov
call
dec
arpl
push
rorb
rcrl
pop
jmp
shrb
sub
adc
or
sub
push
and
mov
add
jmp
loop
push
push
jno
shl
lock
faddl
in
stc
pop
push
xchg
dec
cwtl
xchg
test
imul
mov
jmp
mov
sbb
lret
push
push
mov
popf
inc
mov
dec
mov
mov
sub
mov
jl
in
test
pop
ss
cmp
lea
push
pop
out
or
lea
pop
clc
stos
loopne
jnp
or
mov
lahf
pop
clc
push
mov
sub
and
mov
insb
outsb
addr16
sbb
jp
jecxz
jns
test
xchg
push
insl
sbb
notl
mov
ds
mov
inc
push
sub
bound
ja
mov
push
inc
push
or
and
ret
xor
add
sbb
call
mov
jne
fwait
popa
hlt
fisttpll
jb
int
xor
stc
and
imul
mov
mov
jecxz
jbe
mov
or
daa
cwtl
lock
adc
loope
mov
aam
and
jo
in
jae
lock
fstp
mov
mov
imul
out
cmp
dec
pop
xchg
enter
cli
inc
jo
cmp
fcmove
push
push
pop
stos
fwait
sbb
add
fstl
frstor
pop
dec
es
mov
das
and
jg
movsb
scas
cmp
mov
xchg
mov
ret
and
test
movl
in
pop
sub
out
nop
cmpsb
mov
cwtl
sti
jo
das
pop
lcall
or
inc
sbb
add
sti
jb
xchg
adc
mov
lahf
jns
mov
pop
out
or
add
mov
in
xor
nop
lds
bnd
mov
aaa
leave
pop
xchg
outsl
arpl
pusha
cli
mov
jecxz
cmp
jmp
pop
mov
sub
dec
leave
repnz
mov
repz
or
inc
popf
mov
push
imul
sbb
xorl
ret
cmpsl
or
incb
cltd
inc
loope
insb
lods
xchg
sbb
arpl
pop
dec
xor
sub
arpl
sbb
jp
pop
es
jmp
leave
xor
or
rolb
iret
enter
lods
es
iret
sub
or
rcrb
jp
cmp
mov
lret
fldenv
fidivrl
test
fs
pop
pop
int
push
add
notb
inc
cltd
inc
aam
inc
lcall
push
frstor
adc
fwait
cmp
stos
pushl
shl
ret
fwait
xlat
pop
mov
dec
push
xor
cmp
jp
leave
mov
mov
push
std
push
mov
dec
stc
sbb
sub
subl
mov
gs
cmp
daa
mov
sbb
xorl
sub
or
sbb
insl
mov
sub
test
push
mov
lds
adc
and
int3
mov
leave
scas
xchg
jmp
push
jo
hlt
mov
cmp
add
es
mov
mov
jge
clc
filds
je
adc
out
mov
popf
add
aas
pop
xchg
sub
and
sub
inc
std
mov
add
loopne
insl
fadd
inc
sbb
pop
adc
mov
push
xchg
or
dec
dec
aam
xchg
shll
lcall
mov
or
aad
xchg
push
inc
mov
and
jnp
outsl
or
popa
dec
and
or
sub
push
imul
mov
xchg
int3
mov
inc
notb
push
fsubl
in
sbb
outsb
push
aaa
or
mov
xchg
push
cld
push
in
sbb
and
xchg
repnz
lea
int
push
movsb
insb
mov
popw
inc
sarl
outsb
xor
mov
jp
dec
les
cmpsb
sub
sub
push
mov
pop
inc
adc
bswap
fisubs
movsb
or
inc
insb
fucomi
sub
mov
push
aaa
sub
adc
cmp
lods
push
cmpsb
inc
les
mov
lock
ljmp
jl
jnp
icebp
ss
sbb
push
mov
xor
nop
mov
out
insl
jg
jmp
xor
push
rclb
dec
rdpmc
add
xlat
xchg
ljmp
popa
lret
xor
mov
and
add
aam
pop
push
and
jle
es
cmp
mov
dec
sbb
aad
psraw
ds
jb
mov
hlt
add
dec
mov
jp
and
sub
jecxz
xor
les
or
mov
in
aad
or
jo
pop
icebp
jno
shl
mov
fmull
cmp
popa
daa
or
cmpsb
jg
push
jne
outsb
mov
fsubrs
sub
fstl
jns
jnp
sub
rolb
je
jl
adc
xorb
mov
mov
jecxz
outsl
in
jns
mov
ja
test
mov
push
cmp
xlat
xchg
xchg
xchg
repnz
cmp
iret
cs
ret
or
mov
pop
cmp
aas
mov
push
pusha
iret
add
and
cmp
pop
js
mov
xchg
gs
out
jmp
pusha
jl
gs
mov
jnp
sub
jg
inc
mov
scas
push
fildl
int
sub
push
pusha
adc
or
xchg
rcll
or
cmpsb
es
adc
jle
fildl
js
mov
rol
test
mov
jg
push
insb
sub
xchg
stos
push
jb
cmpsl
fstpl
stc
lock
movsb
adc
test
fldt
aas
cli
xchg
or
in
cmp
enter
add
dec
or
shll
jne
jge
rorl
out
xor
mov
inc
rcr
jecxz
mov
stc
ja
jo
cmpsb
sub
js
aas
mov
pop
iret
add
mov
sbb
fs
pop
fistps
int
xchg
sahf
xor
push
mov
xchg
add
jb
push
adc
inc
daa
xor
dec
xchg
scas
enter
imul
sub
jl
popf
dec
xor
rcl
stos
jg
loopne
adc
pop
xchg
mov
inc
and
cmp
inc
ja
xchg
test
out
xor
xor
pop
push
lcall
aam
je
push
shlb
jecxz
es
xor
add
in
idiv
pop
std
jecxz
xchg
or
xchg
pop
mov
insb
roll
pop
jbe
filds
mov
adc
lret
mov
sti
addr16
bound
scas
dec
push
nop
jmp
loope
sub
enter
clc
push
fs
or
hlt
sahf
adc
pop
jns
imul
cmp
pushf
mov
sub
sbb
push
pop
mov
loope
inc
adc
movsl
aaa
outsl
pushf
and
pushf
mov
mov
loope
push
push
lods
xor
out
inc
cmp
in
out
les
popa
mov
xchg
xchg
fcoms
repnz
mov
or
sbb
push
insl
mov
adc
test
xchg
shll
inc
movsb
repnz
push
cld
daa
jns
daa
mov
cmpsb
popf
fmull
mov
pop
pushf
adc
pop
aas
mov
pop
push
push
and
push
adc
jbe
cmp
inc
fadds
pop
or
dec
mov
cld
push
pop
jp
nop
movsl
iret
mov
or
outsl
roll
cwtl
sahf
out
outsw
shrb
ljmp
mov
add
bound
mov
xchg
and
xchg
lcall
xorl
jae
sarl
or
movsl
adc
push
jo
sti
sub
pop
inc
inc
lea
inc
and
jecxz
pushf
insl
inc
pop
xchg
inc
mulb
push
push
test
xchg
gs
and
andl
std
sbb
cs
cmp
and
js
xor
inc
push
cmp
mov
pop
or
test
addb
insb
inc
pop
mov
xchg
out
dec
dec
aam
mov
or
push
dec
int3
enter
push
arpl
test
push
add
mov
sbb
adc
and
jnp
xchg
sub
fisubl
xchg
insl
mov
outsl
add
jb
scas
out
jmp
out
cmp
inc
aam
les
hlt
adc
bnd
inc
fmull
int3
pop
out
mov
jmp
jne
jecxz
cmp
jp
adc
aaa
orb
sahf
or
cmp
mov
mov
jp
adc
std
inc
xor
xor
cltd
aad
mov
sbb
lea
addr16
jbe
jae
int3
push
pop
out
sub
ljmp
pushf
ljmp
das
cmpsb
inc
mov
add
lahf
jge
inc
dec
shll
lret
xchg
pop
xlat
lahf
inc
aaa
sbb
mov
mov
pop
ds
lock
ja
push
mov
sahf
popa
pop
push
cld
adc
je
jbe
mov
test
shlb
sbb
pop
js
and
inc
scas
xchg
es
daa
mov
jb
sbb
scas
or
inc
enter
shlb
gs
pop
cld
pop
lret
adc
loope
mov
mov
mov
jl
jne
mov
in
int
sbb
adc
out
movsl
mov
dec
je
sbb
imul
aam
sbb
mov
jnp
iret
pop
insb
or
dec
mov
jl
jno
jae
cmp
xlat
sub
and
adc
orl
pop
out
jmp
mov
icebp
sub
lock
xor
aam
in
rorl
or
and
inc
xchg
mov
jmp
leave
pop
insl
fsubl
clc
jae
lods
movl
mov
cmpsb
stc
jo
insl
mov
out
xchg
jle
push
popa
pop
in
push
popa
fisubs
leave
dec
lods
mov
mov
jmp
push
lock
sbb
mov
int
nop
push
lret
ljmp
xchg
mov
ljmp
test
adc
incl
xorl
ds
popa
add
cltd
sbb
mov
fistpll
add
pushf
mov
rolb
xchg
fdivs
push
das
mov
in
mov
lret
ret
outsb
sbb
push
xchg
into
repnz
jb
add
xchg
pop
xchg
ja
int
jecxz
lret
ja
or
pop
jmp
cld
mov
add
or
rorb
inc
mov
test
add
xchg
fs
and
inc
fadds
jae
sub
out
sbb
jp
shl
roll
pop
xchg
addr16
inc
loopne
push
aas
mov
icebp
push
cmp
test
push
cltd
enter
outsl
sub
and
sub
es
shlb
stos
cmp
in
push
xor
clc
int3
lahf
mov
mov
imul
push
mov
dec
fadds
scas
insb
jae
xchg
lods
push
lahf
stos
and
sub
fadds
call
pop
mov
push
ja
pop
lret
or
cmp
iret
pop
mov
outsl
push
xor
adc
dec
popa
push
mov
sbb
mov
push
aam
in
cld
mov
orl
mov
cmpsb
mov
jae
les
cmp
dec
cmp
mov
jns
or
dec
adc
data16
cmpsb
and
inc
mov
dec
andb
sub
lcall
fwait
add
mov
outsl
fisubs
jmp
fdivrl
push
ret
jmp
lods
or
cmp
pop
movsl
mov
rolb
xor
lea
sbb
dec
stos
fiaddl
mov
jbe
pop
mov
in
fadds
fiaddl
cltd
mov
out
dec
jl
add
jmp
add
jno
mov
xchg
leave
xor
jle
xchg
xchg
scas
jl,pn
sub
rclb
add
std
subl
cmc
cmp
sbb
mull
popa
sub
imul
add
addr16
adc
rorl
xor
imul
int
fdivr
dec
scas
mov
std
lods
js
test
dec
inc
add
orb
out
cmp
jns
dec
and
xor
sbb
outsb
mov
pop
sahf
jns
sbb
cmp
add
add
ret
sbb
cmpsb
mov
push
andl
movsl
xchg
nop
push
hlt
sbb
jle
es
lods
scas
ja
sub
pop
addl
jnp
hlt
popf
fsubs
lods
mov
les
sbb
out
scas
fcoml
lcall
sti
das
mov
jno
mov
or
outsb
add
cltd
es
inc
shrl
inc
jo
pop
mov
dec
ljmp
mov
scas
repz
ficoml
and
orps
cmp
ficomps
mov
adc
mov
xchg
stos
enter
adc
mov
data16
push
xchg
sarl
xchg
pop
les
jge
mov
loopw
mov
push
mov
jb
jmp
sbb
lods
push
adc
mov
das
jno
mov
pop
inc
push
rclb
dec
xlat
and
test
fwait
push
movsb
mov
add
cmp
pop
decb
imul
pop
daa
pop
xchg
ss
sbb
loop
jno
pop
adc
xor
daa
jno
nop
sbbb
lods
shlb
js
sub
int3
cld
xor
and
std
lods
push
xor
aad
daa
dec
mov
dec
mov
jb
pusha
xchg
imul
push
enter
sub
xor
inc
inc
pop
out
loop
pop
movsb
aad
jmp
ljmp
fwait
inc
xchg
inc
or
das
iret
mov
mov
jno
out
test
jle
push
add
fildl
ret
push
xor
pop
popa
jno
and
fidivrl
orl
sub
insb
sbb
insl
jle
dec
ja
push
cltd
test
subb
ficomps
mov
scas
mov
mov
inc
stc
scas
pop
xor
or
inc
sub
bound
loope
add
cmpsb
sbb
push
or
inc
cs
add
mov
dec
jmp
into
out
lcall
movsl
outsl
adc
sbb
jnp
mov
mov
add
inc
cld
mov
jmp
push
push
xchg
lcall
add
enter
ret
or
pop
pop
repnz
xchg
inc
jo
add
arpl
push
jle
jp
dec
xchg
mov
addr16
das
mov
dec
orl
xor
inc
inc
mov
in
mov
push
es
inc
push
mov
aam
jmp
pop
nop
push
adc
push
sub
ror
out
out
test
fsubrp
aam
imul
negb
and
stc
and
xlat
mov
movl
add
stos
sub
dec
lods
mov
in
ja
xor
mov
mov
fnsave
push
push
xor
lea
dec
daa
setp
mov
test
xchg
das
mov
ret
mov
adc
pop
mov
jne
mov
fisttpl
rep
xchg
or
inc
dec
ljmp
or
dec
clc
loope
lods
xchg
mov
nop
jle
sarl
cmpsb
mov
aad
enter
fidivrs
xor
mov
mov
push
aas
lock
add
mov
mov
mov
lret
adc
mov
loopne
xlat
mov
pop
insb
test
ret
stc
jae
jne
jns
mov
je
mov
sub
loopne
pop
fdivs
xor
test
inc
loope
add
jb
dec
jmp
cmp
test
clc
xor
test
add
sub
mov
popa
xchg
mov
inc
aaa
repz
push
imul
pop
pushf
adcb
jle
push
cmp
std
adc
out
sahf
bound
sahf
push
ljmp
movsl
fcompl
pop
je
in
out
xor
dec
out
xchg
aas
loope
push
inc
jb
dec
movsl
test
sub
mov
fidivs
cmc
and
not
and
daa
es
int3
leave
cwtl
xor
bswap
shl
jge
pop
push
in
inc
mov
scas
xor
fbld
inc
pop
out
clc
mov
and
lock
fxtract
jb
fs
and
mov
aas
pop
ffree
es
dec
rcrb
sub
cs
popf
scas
mov
push
mov
push
inc
push
jns
mov
jns
mov
andl
dec
lcall
push
cmpsb
adc
jle
mov
loopne
add
popa
ret
insl
jae
add
cmpsb
iret
xor
inc
in
inc
jno
mov
push
gs
arpl
push
pop
inc
lcall
xor
add
popa
jg
negl
or
aas
out
push
push
adc
mov
xor
fistpl
lock
inc
add
stos
jmp
jg
jl
fmul
fdivp
xlat
sti
mov
xchg
in
sub
xor
jecxz
jns
push
push
mov
cld
enter
test
scas
lret
es
test
test
inc
or
jge
mov
lock
mov
out
repnz
pop
popf
orb
fldcw
loope
hlt
imul
jle
imul
movsb
xchg
and
sti
mov
xor
jle
lret
inc
inc
push
sub
insl
lret
inc
or
and
adc
int
aad
jnp
test
jge
pop
or
cmp
or
mov
lret
and
sub
push
faddl
and
pop
add
mov
cmp
cmpsl
popa
inc
cmc
xchg
out
arpl
jle
xchg
lcall
inc
lcall
mov
movsl
push
adc
pop
movb
pop
add
stos
pop
addr16
cmp
dec
movsl
fcmovnu
sbb
icebp
pushf
or
xor
fistl
inc
rorl
pop
xlat
imull
dec
pop
sbb
repz
cmp
jl
push
fdivrl
mov
mov
mov
xchg
lret
and
cmp
pop
enter
sub
adc
cmp
jp
stc
rol
fiadds
cmp
fldcw
mul
adcl
and
sub
jns
dec
pop
insl
cmc
movb
mov
pop
or
sar
aas
stos
sbb
outsb
push
pop
jnp
pop
push
mov
insb
xor
add
sbb
mov
xor
std
cltd
xlat
mov
shll
xchg
in
sti
or
pop
mov
and
andl
ret
ja
cmp
test
pop
and
gs
in
add
adc
pop
dec
es
xchg
cmpl
mov
lods
imul
sti
mov
add
bound
out
cmp
arpl
sub
xchg
in
or
jg
push
or
xchg
ds
and
xor
xor
nop
mov
data16
loope
rolb
push
inc
test
cmp
orb
pop
mov
in
aam
fwait
cmp
and
bound
shlb
lods
rcrb
jno
scas
std
push
lock
add
aas
dec
push
jmp
push
push
div
adc
push
push
daa
cmp
xlat
out
sub
ret
adc
and
add
mov
adc
or
jno
dec
or
push
inc
lds
jne
fst
and
mov
rcl
add
leave
shll
pushw
mov
fcoml
fisubrs
xor
push
nop
push
sbb
sti
into
into
aaa
fdivl
je
jmp
test
ss
fstpt
les
outsl
or
xchg
out
xchg
add
sub
mov
and
adc
in
mov
fneni(8087
add
daa
sub
add
es
imul
pushf
xchg
mov
insl
mov
aad
mov
dec
mov
push
cmp
cmp
cmc
dec
scas
lret
and
repz
cmp
push
test
sbb
imul
fisubrl
loop
std
fistpll
inc
push
fcmovb
out
popf
mov
sahf
dec
xor
cmpsb
inc
mov
xchg
xor
push
xchg
divl
les
imulb
dec
sub
int
cli
imul
mov
loope
mov
imulb
xchg
xor
das
bound
bound
mov
fisubs
push
pop
pop
and
dec
mov
insb
call
push
incb
jb
cmp
xchg
dec
mov
lcall
dec
mov
fldl
loope
mov
jg
pushf
test
mov
and
idivl
jno
out
sbb
jne
pop
pop
stos
movsb
and
jmp
jp
std
mov
xor
inc
pop
push
stos
mov
clc
push
xor
pop
dec
lods
cld
dec
mov
jecxz
sub
cmp
imul
mov
lret
jne
or
push
jp
dec
sbb
popa
add
in
inc
fldenv
pop
mov
imul
pusha
mov
pop
test
filds
mov
dec
enter
outsl
hlt
jo
lock
ja
cmp
push
jg
cwtl
mov
pop
test
ja
mov
sbb
fnstsw
and
leave
sbb
push
mov
js
xchg
in
pop
cli
xchg
call
adc
or
cmc
loope
test
xchg
jl
mov
int3
ds
and
xor
cmp
jbe
pop
sub
pop
cld
sub
cli
addr16
pop
lcall
mov
xor
pop
sti
js
enter
sarb
or
out
repnz
xor
ja
shl
into
pop
pop
ror
or
aas
jmp
aam
pushf
fidivrl
xchg
jle
mov
idivl
mov
addr16
add
and
push
cmpsl
mov
push
decl
sub
mov
loop
and
ljmp
clc
jecxz
insb
jecxz
mov
aas
push
cmp
xchg
xor
dec
clc
insb
loop
ljmp
repnz
int
lea
in
inc
xor
lahf
mov
lock
lds
sbb
inc
xor
imul
shl
jmp
or
fucomp
sbb
dec
es
cmpsl
add
ss
push
xor
les
cmpsb
mov
ficoml
fs
pop
sub
lock
mov
decb
pop
xor
loope
add
repz
rcrl
xlat
or
push
addb
idiv
repnz
fnstsw
jo
cs
mov
sahf
xchg
jp
lahf
popa
mov
and
jg
mov
loopne
push
shr
push
mov
mov
xor
and
ret
sarl
fdivrl
lahf
aas
adc
insl
jge
pusha
push
push
lock
pop
lret
fidivl
inc
or
shll
or
in
int
repnz
nop
mov
int
push
lea
int
jmp
les
push
pusha
repz
and
and
dec
in
pop
or
adc
mov
add
pop
subl
imul
clc
cltd
mov
inc
mov
rol
ret
pop
pop
mov
jl
adc
outsb
mov
push
rcrb
mov
ret
adc
cltd
hlt
push
cmpsb
int3
push
pop
xor
adc
movsb
jns
test
adc
pop
xor
sahf
sbb
ljmp
and
scas
add
push
mov
jns
add
insl
sub
mov
out
aas
testl
loop
stos
pop
xorl
cli
or
test
and
into
js
cmc
pop
add
sbb
cltd
lea
cwtl
jbe
lods
sbb
jbe
mov
and
cwtl
add
cmp
xlat
push
push
sbb
sub
and
mov
adc
gs
or
cld
outsb
pop
add
pop
ss
je
sar
lods
pop
pop
dec
jne
mov
das
fsub
sbb
dec
lcall
xor
loope
adc
iret
xchg
pop
jo
adc
pop
xchg
arpl
rcl
adc
in
adc
mov
sub
xor
arpl
mov
lds
shrl
mov
or
stc
movsb
mov
mov
sbb
mov
rorl
jns
inc
add
mov
inc
cmc
lock
loop
jns
lds
sbb
popf
xchg
jg
cli
cld
xorb
sub
orb
jnp
jp
mov
mov
repnz
sub
xor
adc
mov
test
push
xor
aam
mov
xor
push
test
cmpsl
data16
pop
mov
push
inc
inc
scas
or
ja
xchg
dec
push
movsl
lods
js
adc
fsubrs
loop
rcrl
rorb
adc
mov
inc
lret
lea
xor
inc
cmp
xchg
aad
repz
xlat
popf
cwtl
das
mov
iret
insl
test
mov
push
dec
and
and
mov
test
dec
ret
repnz
push
xchg
aad
shlb
jnp
pop
xchg
movsb
jne
ja
mov
js
or
and
push
mov
push
fcoml
fwait
and
into
and
fsubrs
les
add
adc
and
mov
inc
ss
xchg
sub
out
out
cmp
out
pop
aas
mov
dec
add
into
out
sub
pop
sbb
add
into
add
and
mov
addr16
xchg
xchg
subl
aaa
mov
sub
int3
jbe
jmp
sbb
je
loop
pop
inc
add
ljmp
mov
bound
je
stc
orb
cmp
pop
push
lds
dec
fcmovnu
cmp
scas
xor
js
imul
aaa
lds
add
dec
cmp
imul
bound
ljmp
push
fiaddl
dec
sub
xor
bound
mov
aad
sahf
xor
pop
gs
addb
inc
aaa
push
dec
push
jno
and
mov
inc
sub
outsl
dec
movsl
xchg
ret
bound
dec
fwait
aam
jg
out
mov
insl
push
sbb
stc
inc
inc
or
lock
popf
std
faddl
xor
xlat
in
inc
out
sbb
pop
mov
mov
daa
cmpl
ret
inc
push
jne
jno
xchg
loope
dec
repz
push
add
rcrb
mov
sub
push
xor
cmpsl
xchg
pop
in
loope
mov
roll
push
jno
test
das
popa
fstpt
loop
or
orb
push
mov
dec
cmp
test
movsb
arpl
mov
psubw
push
lods
xchg
addr16
add
mov
xlat
push
jb
sbb
pop
into
jl
push
pushf
imul
sub
inc
push
xor
cmp
ja
xchg
popf
push
ja
xlat
cwtl
lock
out
inc
or
cmp
or
pop
xchg
jo
fsubrs
sub
cld
out
mov
ja
shld
test
sbb
sbb
imul
clc
cmpsl
mov
into
imul
imul
push
xchg
mov
pushf
xchg
jge
out
fsubs
loopne
ss
mov
cmc
mov
mov
push
inc
sti
movsb
mov
jmp
mov
dec
mull
imul
mov
cltd
ret
lds
sub
inc
ds
rcl
popf
sbb
xchg
pop
mov
std
repnz
loop
sti
mov
aad
dec
adc
sahf
or
rcrl
push
adc
pop
sub
pop
jge
jmp
test
jne
es
les
dec
mov
pushw
popa
adc
sbb
mov
in
mov
inc
pop
xorb
xor
push
pop
mov
add
movsb
cmp
insl
and
mov
iret
xor
inc
pop
test
adc
stc
sbb
jl
aam
cmp
out
sub
xorb
movaps
jno
enter
insb
pop
cmp
out
jnp
cmp
cmp
cwtl
push
aaa
enter
mov
mov
inc
mov
jo
fildll
push
arpl
adc
sub
pop
sbb
push
imul
inc
ret
push
out
fs
push
pop
cmp
lds
popa
mov
jg
pop
shlb
xor
lods
sbbl
xchg
and
pop
mov
lds
pop
inc
xchg
cmp
xor
jecxz
and
or
adc
jp
daa
xchg
loopne
fildll
into
int
test
out
sarl
xchg
outsb
out
insl
xchg
fsubr
fs
les
mov
mov
add
insb
xor
mov
inc
inc
incl
int
jae
push
mov
ss
pop
sub
cltd
movsb
sub
lds
scas
test
jns
mov
gs
cmp
dec
mov
cmpsb
pop
mov
mov
add
insl
adc
jb
dec
fisubrs
out
xchg
mov
cli
xor
adc
cmp
fldenv
add
imul
xor
daa
insl
out
outsl
mov
add
cmp
xor
mov
enter
aas
notl
lret
xchg
jle
sub
cmpsb
or
ss
mov
fwait
sub
mov
inc
pop
push
adc
inc
adc
mov
add
lahf
sbb
mov
mov
adc
jl
fisubrl
add
push
rclb
inc
ljmp
mov
push
cmc
adc
push
cmp
add
lods
sub
addl
xchg
mov
out
inc
pop
loopne
andl
rcl
nop
std
ja
jp
adc
cltd
ret
xchg
cmp
jle
adc
or
jae
xor
push
lcall
inc
jo
imul
js
cltd
mov
es
lret
mov
loop
xchg
inc
imul
inc
cmp
cmp
pop
lcall
test
hlt
push
lock
push
fdivs
ss
cld
and
mov
int
test
hlt
jno
insl
jbe
add
mov
sbb
mov
pop
pop
addl
xor
cmpsb
jg
fistl
test
lret
adc
aaa
iret
lahf
and
repnz
sbb
fwait
xchg
popf
xchg
inc
cmp
mov
cmc
push
insb
cli
roll
movsb
xlat
test
push
mov
mov
push
mov
cmp
or
add
jg
jle
push
shll
mov
cs
stos
enter
out
std
pop
clc
fucom
jge
mov
sbb
sahf
loope
mov
lods
cwtl
test
mov
sub
lock
sbb
movsl
das
push
ficoms
mov
mov
push
in
jbe
or
jl
sarb
add
or
stos
mov
daa
xor
jns
pushf
cmpsl
cmpl
cwtl
test
popl
push
cmp
sub
jmp
xor
add
sbb
jo
mov
inc
adc
inc
xor
jg
in
sub
jb
inc
notl
mov
pushf
popw
jmp
inc
jo
cltd
nop
push
and
push
andl
leave
out
and
xchg
pop
mov
pop
cli
mov
lea
cmpsb
lods
or
push
adc
jno
mov
fidivrs
jbe
jne
and
xchg
cmp
fdivp
sub
xchg
push
adc
dec
adc
jbe
addr16
cmp
outsb
inc
xor
mov
outsb
jp
dec
cmp
jle
mov
xchg
int3
int
sarl
or
jle,pt
lock
sbbl
pop
sarb
or
in
cmpb
jnp
push
fmul
jle
rcr
inc
aad
jge
out
out
loope
icebp
inc
push
mov
and
push
add
push
jl
mov
sub
sbb
int
or
jg
outsb
mov
cs
mov
cli
push
dec
dec
and
out
cmp
lea
push
jb
adc
shrb
pop
bound
xchg
pushf
mov
sbb
jge
jp
lahf
push
stos
loopne
xchg
and
rorl
inc
xor
rorl
add
mov
and
mov
dec
pop
xor
dec
fdivs
sbb
adc
ror
mov
cmp
rolb
test
xchg
mov
mov
cs
in
pop
mov
lods
repnz
dec
fisubl
es
or
sbb
sbb
es
jge
pushl
sbb
mov
mov
jo
sub
mov
push
ret
imul
mov
jge
je
in
popa
in
ffreep
mov
mov
lods
sub
lahf
sarl
cmc
stc
or
jecxz
pop
push
rolb
fadds
stos
sub
stos
andb
shrl
test
cmp
pop
repz
add
mov
sbb
stc
push
ss
js
stos
repnz
sub
jecxz
mov
cwtl
in
cli
lret
test
xor
sbb
xchg
int
leave
or
aam
pop
add
test
stc
sti
scas
mov
adc
sub
adc
jb
mov
xchg
cwtl
int3
mov
leave
jns
stos
mov
mov
xor
nop
test
push
rcrl
pop
ss
outsb
xchg
loope
dec
call
lcall
adc
mov
insl
movsl
imul
sti
outsl
push
xlat
mov
and
les
rcr
out
xchg
pop
rolb
mov
stos
test
addr16
cld
pop
fsubrl
icebp
xchg
lods
adc
scas
xchg
pop
sbb
scas
push
inc
mov
cmc
inc
xchg
test
or
mov
mov
adc
dec
jle
sbb
add
repz
lcall
loope
jae
stos
adc
sub
mov
pop
mov
cmp
and
dec
cmp
out
add
fcmovu
mov
pop
mov
sbb
pop
inc
out
sbb
xchg
gs
sub
lahf
mov
adc
nop
xchg
xchg
ret
mov
mov
and
pop
push
push
push
or
fwait
ljmp
cmp
mov
aam
lock
mov
mov
push
int3
adc
lock
clc
lahf
test
pop
jae
js
inc
js
mov
in
jb
sbb
imull
mov
fsubrl
cld
xchg
inc
push
daa
stc
dec
dec
stos
sbb
or
cmpsb
repz
pop
clc
mov
data16
mov
mov
fisubrl
js
push
mov
repnz
or
pop
cli
add
lret
repz
xchg
push
inc
das
or
rcrb
sbb
cmp
fnstcw
add
adcb
pop
mov
jge
into
mov
mov
push
mov
adc
inc
stos
lea
adc
mov
and
or
sti
ljmp
cmp
jle
xorb
fildl
jnp
pop
bound
sbb
rcll
sbb
test
fwait
ss
sub
gs
sbb
or
xchg
mov
loope
mov
cmp
pop
adcl
mov
lahf
mov
ss
mov
xor
dec
xchg
icebp
jno
cmp
daa
lret
dec
lahf
pop
jns
loopne
cmpsb
movsl
ja
pusha
stc
addr16
cli
sub
mov
and
lds
xchg
adc
jg
insb
adc
ljmp
pushf
test
or
cltd
mov
add
sbb
popa
orl
pop
mov
mov
xchg
sbb
popf
pop
sub
mov
and
xchg
sti
pop
sbb
jge
repnz
inc
aas
es
ljmp
adc
imull
ret
lods
or
jb
mov
sahf
lods
out
push
aad
stos
lret
mov
or
sbb
insb
aaa
fdivl
test
xchg
mov
inc
jae
leave
bound
cmp
xchg
or
in
jp
je
inc
mov
xor
fwait
and
hlt
repnz
gs
in
cmp
fdivrs
ret
hlt
mov
and
dec
dec
mov
mov
ss
sub
xchg
iret
clc
or
jnp
xchg
adc
cwtl
mulb
or
add
out
mov
shlb
sbbb
add
push
cwtl
inc
add
and
aas
movsl
inc
fstps
or
mov
xchg
imul
and
fadds
and
stc
popa
cmp
sub
mov
or
xchg
xchg
xor
cmpb
sbb
inc
xlat
lahf
lret
pop
pop
xor
push
aam
cltd
xchg
or
insb
inc
xchg
and
push
mov
mov
xor
sub
sbbb
mov
mov
test
mov
scas
jns
or
mov
xchg
popf
mov
std
jns
stc
frstor
ja
pop
pop
lahf
mov
sbb
ret
arpl
faddl
in
xchg
pop
mov
mov
int3
sbb
jmp
or
subl
das
call
pop
es
arpl
in
xchg
mov
sub
mov
jmp
mov
rol
sti
sbb
pushf
mov
mov
jmp
pusha
pop
pop
lods
outsl
mov
cmpsl
jle
sbb
push
decl
push
scas
rcrb
jmp
stc
lds
sub
mov
pop
test
frstor
jb,pt
jg
ss
test
push
sub
call
rolb
mov
adc
cmpsl
and
je
rol
xor
push
enter
or
es
pop
pop
or
pop
fdivl
sahf
idivb
fists
ret
clc
dec
and
lahf
jecxz
sub
push
or
inc
out
sbb
cltd
or
xor
xchg
jb
out
sub
out
inc
sbbl
hlt
and
pop
dec
push
not
push
nop
dec
out
mov
popa
ja
dec
mov
imul
pop
inc
bnd
mov
lret
enter
and
jg
sub
popa
dec
or
lcall
fwait
cmp
adc
lcall
lds
loopw
jge
jecxz
mov
mov
push
in
sub
loope
or
les
cld
lods
subb
addr16
icebp
cwtl
into
or
sub
outsl
stos
xchg
lcall
scas
xchg
adc
pop
push
test
xchg
popf
xchg
mov
inc
jp
fldenv
cltd
push
sbb
adc
loopne
mov
pop
imul
inc
cmpsb
jb
test
in
mov
dec
adc
stc
in
loopne
movsb
mov
stos
fmull
aad
filds
jae
repnz
mov
test
cltd
outsl
inc
pop
push
mov
pop
outsb
sub
add
jmp
sub
mov
sahf
push
sub
loope
sar
add
cmpsl
dec
loopne
adc
cmc
fadds
fs
jg
xchg
pop
scas
call
push
and
sbb
push
sub
xchg
adc
jmp
das
test
fisubs
mov
cmpsl
fistps
mov
loope
sub
les
xor
sti
jg
pop
cmp
lret
pop
les
pushf
cmc
jnp
in
mov
dec
xchg
into
xchg
aas
andl
adc
jnp
add
and
scas
dec
xchg
shl
or
ret
cmp
popa
mov
out
sbb
xchg
or
inc
mov
sbb
mov
or
jne
xchg
sbb
adc
movsl
in
ds
jo
add
and
cmp
in
cltd
stc
dec
sti
je
cmc
imul
mov
jg
negb
rcl
mov
mov
sahf
test
xor
xor
out
pop
xchg
arpl
or
mov
lret
mov
inc
inc
inc
mov
fidivs
movsl
fwait
jnp
inc
es
sub
and
shl
or
adc
ret
std
outsl
icebp
sub
lea
jno
mov
fimuls
jne
ret
jbe
xchg
popf
mov
jl
loop
negb
insl
int
lret
jp
loopne
xchg
sbb
jg,pn
cmp
dec
mov
adc
add
into
xchg
cmp
cs
test
mov
subl
jno
loopne
mov
lcall
sarl
push
loop
dec
mov
cmp
jp
repz
jmp
dec
gs
nop
test
imul
daa
out
insb
shlb
jae
pop
sub
sar
pop
inc
xchg
add
iret
add
xchg
cmp
jo
inc
outsl
dec
call
sbb
lock
adc
test
fldcw
mov
faddl
daa
adcb
mov
cmp
cmp
push
xor
rolb
je
mov
inc
lods
nop
add
leave
pop
pop
iret
fucomi
add
push
sub
inc
inc
sar
inc
movl
jo
mov
loopne
sbb
push
out
inc
and
mov
xchg
push
rorb
cltd
aam
or
jp
cmpb
call
ja
cmpsl
xchg
xchg
aam
fsubrs
scas
add
dec
and
or
into
ds
inc
cmc
pop
add
jno
mov
dec
and
add
add
xor
andl
pop
cmp
lcall
loope
popa
cld
outsl
xlat
test
lcall
push
lret
mov
fwait
pop
inc
out
xor
lret
stos
push
leave
sarl
je
cmp
arpl
test
mov
cmp
bound
sub
xor
xchg
push
aaa
imul
cwtl
xchg
jecxz
adc
cmp
mov
or
arpl
mov
push
data16
sbbl
pop
insl
js
push
jo
movsl
cmp
pop
scas
add
inc
xchg
cmp
add
sbb
jle
dec
jl
mov
leave
inc
or
cmp
loope
xchg
jae
fnstenv
mov
scas
stos
xchg
int3
add
nop
je
loopne
and
test
pop
ljmp
push
ficompl
jp
push
cmp
ret
scas
mov
sub
and
mov
dec
lret
jbe
cmc
cmc
je
xchg
in
repz
jmp
inc
jns
add
cmp
xor
fwait
dec
outsb
inc
clc
and
rcl
or
push
int
fldenv
adc
scas
mov
mov
jbe
clc
mov
jge
sub
lds
push
outsb
adc
mov
arpl
cli
and
and
lock
sbb
mov
inc
or
enter
jns
mov
xchg
pop
sbb
scas
xor
bound
jmp
add
fidivs
cltd
ds
add
inc
xor
dec
or
inc
iret
and
dec
adc
stos
adc
enter
xor
loope
loop
inc
and
stos
mov
cmp
sbb
fbstp
push
xchg
shlb
adcb
aaa
inc
inc
dec
mov
cli
and
fs
std
cmc
pop
adc
add
mov
xchg
pop
jmp
xorl
and
in
push
jg
xor
cmp
pusha
sbb
xchg
aam
sbb
out
xchg
ja
out
xchg
cs
and
dec
rcrl
or
or
xlat
pop
leave
inc
sahf
insb
int3
mov
mov
outsb
jge
or
push
sub
imul
das
inc
push
scas
or
stc
sbb
mov
xchg
add
pop
mov
push
mov
inc
pusha
les
cli
aas
aaa
dec
fwait
dec
in
jne
jno
dec
or
int
add
push
test
xchg
mov
daa
shlb
mov
jecxz
cmp
cmc
mov
out
pop
mov
or
lds
test
dec
movsb
cmpsl
repz
adc
addr16
cmp
xor
jnp
jno
data16
test
and
mov
mov
push
hlt
bound
mov
sub
lods
in
mov
push
pop
dec
ja
dec
ja
inc
int3
lock
test
push
inc
pop
push
add
inc
out
mov
int3
lods
mov
or
ljmp
jg
add
xor
inc
or
push
int
mov
jno
pop
test
mov
js
mov
sbb
cmp
add
pop
ja
mov
lods
mov
in
jecxz
lock
es
jns
out
arpl
lahf
decl
stos
into
mov
testl
jne
mov
mov
add
jg
pusha
mov
into
cwtl
mov
fidivrs
cmp
xor
cmp
sbb
cmp
ret
xor
cmp
repz
mov
sub
pushf
icebp
add
sbb
xchg
aad
shll
call
aas
repnz
jmp
lret
lea
adc
pop
cmpsl
in
cmp
std
cmp
jp
push
cmc
inc
push
jbe
push
pop
push
jno
and
mov
lahf
adc
xor
cwtl
xchg
cs
add
gs
push
rolb
test
jle
push
cmp
cmp
lods
push
ja
xchg
mov
xchg
data16
and
mov
jge
jmp
cltd
clc
popf
mov
std
sub
xor
and
fadd
int3
mov
out
mov
in
xchg
pop
xchg
lret
mov
fstpt
ljmp
jne
push
jle
movsl
out
cmpsl
loope
jg
cmpl
mov
idivb
jmp
scas
xor
xor
ja
jp
rclb
sbb
sarb
stc
outsl
xor
xchg
dec
inc
jbe
xchg
je
pop
mov
inc
std
pop
add
mov
push
sub
mov
add
xlat
dec
imull
out
xchg
cmp
mov
movsl
loope
out
sbb
pshufw
sarb
aaa
sbb
inc
sti
mov
mov
and
adc
into
xor
das
stos
jl
jmp
or
rorb
xlat
xlat
sbb
cltd
loope
test
adc
test
and
ljmp
pop
push
addr16
imul
ljmp
push
xchg
out
add
xchg
out
int3
or
add
out
jne
adc
insl
xchg
jg
and
xor
push
mov
add
push
and
pop
sub
cmpb
adc
outsl
jnp
xchg
inc
mov
int3
popf
and
or
mov
inc
cwtl
jge
clc
leave
les
dec
xchg
mov
pop
mov
pop
data16
mov
jmp
cmp
icebp
sub
bnd
repz
jle
sub
pop
lds
xchg
push
outsb
lret
pop
stc
mov
in
dec
dec
pop
and
rclb
jb
pop
push
mov
movsl
daa
subb
push
and
lret
pop
pop
mov
rcrb
mov
mov
push
push
lea
ret
test
movsb
mov
rcrb
testb
mov
and
mov
arpl
mov
mov
outsl
and
xor
iret
pop
fsubrp
pop
mov
jg
fsubs
cld
dec
xchg
sbb
mov
icebp
clc
or
notb
cs
fsubr
outsl
popa
add
xchg
ss
add
xchg
cmp
scas
jo
inc
roll
les
sbb
je
mov
mov
push
push
addr16
imul
pop
cli
incb
sub
fcmovbe
clc
enter
jo
loope
scas
test
loopne
arpl
test
mov
mov
pop
xchg
xor
jne
lock
jge
xchg
test
out
and
sub
lock
mov
push
fcmovb
mov
repnz
xor
mov
out
push
out
sarb
ss
xor
lcall
hlt
mov
rorb
mov
shr
pusha
mov
adc
dec
sub
pop
adc
mov
cltd
rcrb
arpl
fstl
xchg
into
lea
out
in
aaa
dec
lahf
dec
sub
sahf
js
loop
lret
fidivrl
adc
mov
sahf
pushf
push
loopne
mov
mov
fst
lock
cli
sbb
in
into
mov
setbe
stc
sar
mov
call
mov
or
shrl
aad
push
dec
sbb
or
pop
out
nop
xchg
dec
xor
gs
inc
adc
jl
jmp
mov
push
mov
xlat
test
mov
cli
test
push
les
inc
stc
rolb
bound
xchg
adc
pop
cmp
ja
loopne
mov
pop
lcall
mov
sbb
xchg
inc
jle
mov
dec
inc
vmovapd
dec
or
fcoms
jmp
inc
movsl
jno
xchg
add
iret
loop
xchg
xor
cmp
cmp
pop
xchg
add
out
cwtl
cmpsl
inc
ljmp
cld
lock
xchg
loopne
xchg
cwtl
mov
leave
cmp
jnp
sbb
mov
into
xor
mov
adc
xor
cwtl
sub
aam
add
add
aaa
xchg
push
rcll
test
out
cwtl
leave
js
lcall
out
jb
scas
mov
addb
lea
adc
popf
and
mov
insl
cltd
shlb
loope
enter
adc
cmp
add
jmp
dec
test
clc
pop
fisttpl
push
push
test
xor
pop
jo
int3
repnz
lock
mov
mov
push
cmpsb
jle
dec
push
xchg
lds
in
cwtl
jge
add
je
ret
outsl
subl
stc
subl
mov
and
mov
faddp
adcl
jno
shll
pop
cmp
pop
out
fsubs
mov
inc
icebp
iret
jbe
test
mov
scas
jo
test
xchg
ss
test
or
jbe
xchg
jp
sub
jns
mov
dec
mov
and
cli
std
pop
lahf
gs
imul
mov
bound
shrb
xorl
out
rcr
fwait
push
in
out
adc
gs
pop
das
out
bound
dec
les
stos
xchg
lods
inc
or
jmp
dec
push
cld
or
incb
pop
push
fistpll
popa
movswl
cmp
jo
hlt
cmpsl
fistpl
mov
in
push
push
pushf
leave
aas
mov
popf
into
push
sbb
aaa
in
add
jl
jno
fisttpll
js
lret
adc
fistpll
sbb
imul
xor
or
push
xchg
sub
xchg
sbb
ret
cli
aam
ficompl
sbb
clc
repnz
sbb
int
push
jmp
fisttps
add
add
mov
test
popf
in
mov
jp
out
jmp
hlt
or
cltd
arpl
push
dec
jb
mov
out
ds
lcall
push
mov
bound
arpl
dec
sbbb
or
stos
test
inc
js
add
mov
xchg
adcb
sahf
jl
mov
test
inc
add
mov
cmp
nop
sub
add
mov
popf
fcoms
push
mov
rcll
cmpsb
ljmp
cmpsl
mov
les
mov
gs
fldlg2
jbe
adc
xor
lock
orb
adc
lods
pop
andl
popa
mov
js
push
loope
mov
jae
mov
cmp
xchg
mov
xor
pop
inc
or
shll
jmp
and
sbb
outsb
nop
lahf
dec
arpl
cltd
sbb
das
fisubs
or
dec
mov
pusha
inc
imul
in
and
adc
into
fnsave
std
mov
loope
pop
mov
scas
ss
dec
leave
dec
mov
sub
psllw
lcall
cwtl
or
lret
cli
divb
into
or
ret
shl
hlt
dec
xchg
inc
add
mov
add
dec
ljmp
outsl
adc
pop
or
clc
insb
ss
adc
mov
sub
lcall
add
fdivr
insl
call
pop
xor
pop
dec
iret
or
pop
cmp
ret
cwtl
xor
in
cltd
or
adc
mov
lahf
aaa
adc
adc
adc
lar
and
jge
outsl
dec
in
mov
mov
xchg
arpl
jl
jle
mov
out
jo
addr16
add
cmp
pop
fwait
xchg
out
jno
pop
xchg
mov
enter
mov
out
fscale
push
scas
sub
adc
aad
fidivl
sti
data16
xchg
pop
cld
lcall
jbe
lods
fsubrl
mov
or
sub
aad
mov
out
jecxz
xor
insl
or
mov
shrb
clc
data16
movsl
cmp
call
and
outsl
cmp
inc
mov
movsb
pop
cmp
sbb
jl
sbb
dec
mov
mov
int3
test
mov
push
or
xchg
xor
mov
jns
into
adc
test
push
jge
push
rol
jne
pop
nop
sbb
lret
jno
loope
lock
fs
pusha
add
adc
cmc
sub
ds
daa
loop
xor
lahf
mov
jmp
jnp
push
jp
xchg
in
fmull
pop
aas
xchg
and
hlt
cltd
mov
mov
cmp
mov
sub
iret
imul
push
push
pop
addr16
pop
outsl
shrl
ficoms
xchg
xor
lods
mov
jecxz
test
scas
pop
lea
inc
ss
or
leave
pop
and
jbe
mov
sahf
inc
add
cmp
fidivrl
add
cmc
dec
call
fsubs
sub
xor
mov
lret
inc
mov
push
scas
jns
xor
shl
repz
xchg
mov
mov
inc
add
sub
mov
add
pop
sbb
in
arpl
mov
push
pop
push
jno
negb
xchg
imul
mov
sub
sub
js
mov
std
jg
ret
mov
movl
add
adc
inc
pop
mov
cmp
push
xlat
xchg
pusha
sbb
or
jecxz
adcb
xchg
or
cs
pop
xchg
cmp
ficomps
pop
pop
mov
xor
lock
push
ret
sub
ret
rorb
push
and
test
cmc
mov
jne
cmc
inc
xchg
pop
sbb
test
fcmovnbe
adc
mov
mov
mov
xor
jp
sahf
lock
frstor
lea
jns
fs
sub
and
loopne
outsb
arpl
ret
jle
loop
ds
aad
stos
into
jne
jno
jmp
incb
mov
in
loop
ljmp
lea
or
dec
fbstp
sub
stc
adc
fsubrp
cmp
sti
cwtl
pushf
int
cwtl
and
xor
cmp
mov
inc
cmp
scas
mov
add
sub
pop
mov
inc
mov
xchg
add
test
dec
adc
xchg
das
lods
cmpsl
pop
or
mov
jmp
push
and
ret
outsb
fsts
imul
aas
fidivl
xchg
jge
sbb
sbb
js
repz
add
inc
bound
je
adc
mov
push
lods
push
scas
outsl
mov
dec
push
jns
repnz
jecxz
jnp
push
xor
jmp
out
jb
scas
scas
push
test
push
add
ficoms
mov
ds
pop
push
jb
imul
pop
movsb
fildl
jnp
adc
dec
mov
jnp
sub
js
xor
cli
lods
xchg
lods
dec
subb
xor
in
adc
or
stos
cmp
pop
cltd
nop
imul
push
push
mov
jp
sbb
cld
xor
dec
cmpsl
push
pusha
fcompl
call
sub
and
sbb
sub
sub
into
xchg
dec
xor
fdivrl
mov
push
sbb
fdivl
repz
das
mov
pop
fimull
xlat
pop
sub
int
aad
aad
dec
cmp
push
scas
cld
jno
mov
loope
jmp
not
incb
jnp
clc
dec
mov
mov
adc
inc
fidivs
xchg
hlt
aaa
jecxz
add
mov
pop
ljmp
cli
mov
jbe
lahf
mov
sbb
test
sub
lcall
cmp
mov
pop
push
cmpsb
negb
fs
test
popf
jno
sahf
loopne
xor
fs
xor
or
inc
push
xor
jne
inc
mov
cmp
loopne
push
mov
cmp
sbb
mov
in
jge
inc
jl
insb
inc
dec
and
stc
scas
mov
jns
sbb
popf
cwtl
in
sbb
test
lea
dec
jge
ss
mov
in
xor
mov
cmpsb
jb
int3
aam
pop
aaa
pop
mov
push
lret
xchg
add
nop
xlat
imul
inc
js
mov
pop
dec
insl
faddp
adc
call
adcl
or
add
jae
inc
pop
ja
xchg
xor
sahf
or
out
ja
mov
sub
xchg
aaa
movsb
pop
sub
rcr
dec
out
push
stos
ret
nop
push
loop
imul
jp
test
mov
das
out
xchg
cmp
push
cmp
xor
neg
jl
loop
mov
push
sahf
cmp
jp
dec
sti
inc
out
dec
xor
push
push
adc
dec
push
fisubl
xchg
xchg
lods
cmp
adc
mov
pop
add
jecxz
in
sarl
mov
mov
dec
lods
push
cld
loopne
shlb
jle
jl
sbb
adc
jb
mov
fists
icebp
or
test
pcmpeqw
xchg
xchg
fistl
pop
fcoms
pop
loopne
jb
pop
movsb
and
pop
inc
add
jmp
cmp
push
cs
pop
push
scas
pop
repnz
dec
es
loopne
bound
inc
lahf
add
pop
sbb
dec
ret
push
jmp
cwtl
inc
cs
mov
sbb
jbe
shlb
xor
push
mov
das
fsub
and
aad
loope
lock
xchg
pushf
mov
mov
jge
inc
push
ud2
and
mov
jb
fs
mov
mov
dec
dec
jnp
push
lds
movnti
adc
enter
dec
push
test
sbb
xchg
xor
push
cmp
mov
addr16
movsl
jnp
test
inc
jp
sub
js
rcrl
in
addr16
sbb
mov
fisubrl
aad
jmp
pop
xchg
mov
rdtsc
or
dec
lock
inc
lahf
in
ljmp
shll
rcll
testl
testb
int3
xchg
das
fld1
adc
add
mov
fstps
xlat
frstor
faddl
xchg
push
mov
xor
lret
or
sbb
jno
mov
jg
mov
lock
sub
inc
movsl
popa
mov
dec
push
imul
mov
imulb
xor
push
rorl
mov
push
lods
mov
call
ror
mull
mov
das
in
mul
or
lret
xchg
daa
jecxz
xor
test
cmp
pop
pop
movsb
sbb
push
loope,pt
bound
pop
repnz
push
mov
jae
movsb
mov
adcl
insb
pusha
das
xor
pushf
sub
pop
push
dec
inc
into
adc
sbb
jne
arpl
mov
bound
mov
mov
testb
gs
aas
repnz
mov
mov
out
pop
mov
and
or
pop
in
rorl
xchg
mov
pop
cmp
ficoml
inc
push
pushf
push
xor
popl
lods
repz
jp
mov
sub
mov
insb
sbb
ret
xor
addl
inc
push
jle
jmp
or
std
pop
cmpsb
cli
push
mov
loopne
inc
pop
shlb
sbb
popf
shrl
ljmp
xchg
mov
fbstp
dec
mov
pop
xchg
mov
and
pop
call
fwait
pop
add
pusha
pop
mov
sbb
jg
adc
filds
and
push
adc
pop
and
data16
mov
mov
or
xchg
mov
jo
ret
mov
ds
ficomps
in
push
lret
mov
sbb
mov
cmpsl
daa
cwtl
push
sub
or
bound
cli
pop
outsb
lds
push
ljmp
pop
iret
sbb
fsts
dec
xchg
jno
and
xor
sub
lea
adc
pop
or
adc
loope
push
fldenv
div
outsb
add
int3
stos
mov
cwtl
inc
push
mov
jecxz
sub
aam
sahf
int3
repnz
mov
sub
pop
imul
jp
mov
lret
add
xchg
pop
shll
movsl
outsl
xchg
test
pop
int3
fsubr
idivb
jns
pop
imull
inc
cltd
jmp
sub
ljmp
cmp
dec
inc
push
push
stos
add
je
rorb
lods
cmc
jns
mov
loopne
pop
xor
mov
andl
mov
pushf
sbb
push
or
dec
mov
jno,pn
fisubrs
call
fcomp
int3
test
lods
mov
inc
mov
and
pop
movsl
sub
xchg
leave
inc
and
add
mov
or
inc
test
jge
and
pop
jb
ss
jns
loope
mov
daa
add
mov
push
movsb
sbb
cld
int
fistl
mov
je
outsb
push
sbb
in
sti
cs
push
cmp
into
mov
jle
mov
scas
es
shld
xlat
inc
push
and
jle
sbb
fwait
sahf
shll
outsl
and
xchg
clc
outsb
dec
and
mov
aaa
pop
es
jmp
lods
cltd
jle
in
dec
jo
lret
outsl
fcoms
and
and
xlat
sbb
daa
lahf
inc
daa
imul
cmpsl
jnp
arpl
in
into
inc
fucomp
dec
lods
ffreep
loopne
testl
fwait
mov
xchg
sbb
cltd
push
push
sub
adc
das
push
mov
fcompl
test
ss
rorb
dec
adc
out
pushf
lret
adc
push
mov
int
or
or
shlb
scas
daa
mov
mov
test
js
push
push
clc
ljmp
int
fcoml
adc
pushf
test
push
call
testb
in
mov
adc
pop
fsubrp
inc
fnstenv
test
hlt
push
js
lods
movsl
dec
shrb
rorb
shrb
xchg
call
push
loop
outsb
jbe
sti
mov
or
sbb
pushf
mov
loop
cld
das
shlb
clc
add
cwtl
cli
in
int3
add
cld
sarl
mov
dec
inc
or
or
pop
push
sub
xchg
insb
xlat
push
loope
mov
adc
pop
xorl
pop
push
stos
and
ljmp
lcall
inc
pop
ja
in
adc
lds
cmpsl
stos
out
pop
in
cmp
sbb
fldl
fucomi
inc
lds
shrb
ret
cmpsl
orl
jecxz
int
or
adc
add
cltd
mov
mov
push
mov
fnstcw
lahf
adc
jae
xchg
jmp
shlb
int
pusha
cli
jo
mov
popa
in
add
pop
fldt
scas
dec
push
outsl
push
rcll
push
mov
test
push
and
inc
push
add
test
pop
and
stc
jmp
push
nop
add
push
push
iret
pop
jle
ret
jle
mov
std
sti
int
adc
sbb
jno
mov
dec
not
stos
push
sahf
iret
int
stos
mov
push
jl
je
in
pop
cli
rolb
sub
std
mov
je
das
jle
je
jbe
sub
mov
xor
pop
nop
dec
jmp
es
jg
aad
cmpsb
loop
adcb
or
iret
sub
cmp
xchg
shlb
imul
loope
shll
popa
and
std
int
mov
imul
cmp
xor
insb
xlat
cltd
fidivl
push
mov
push
mov
pop
je
xorl
xorl
dec
mov
jle
pop
sarb
loop
inc
xchg
lret
push
pushf
xchg
adc
cmp
cmpsl
mov
inc
push
inc
inc
out
cltd
outsl
sub
sub
sbb
mov
inc
loop
cmp
shlb
imull
popf
mov
lea
push
outsb
adc
sarl
jae
call
jp
imul
lahf
cmp
sub
test
jmp
xchg
xchg
pop
xchg
cmp
push
xor
fmuls
outsl
dec
or
xchg
push
repz
scas
push
ja
popf
aad
stos
xor
pop
add
cmp
pop
or
sbb
fiadds
ret
mov
les
sub
and
clc
mov
mov
shr
neg
or
data16
ja
divb
scas
jo
lods
jg
sub
andb
sbb
push
cmpsl
stc
pop
jg
daa
sbb
jnp
sbb
and
dec
adc
enter
push
test
scas
xor
cmc
add
pushf
cmc
cmp
adc
sub
out
sub
jns
aaa
lret
mov
jecxz
cmpsb
in
mov
lock
inc
adc
push
cmp
scas
sahf
xor
jp
aad
mov
mov
mov
lds
lcall
les
outsb
dec
leave
jmp
push
fidivrs
sub
cmc
movsb
push
mov
cmp
repz
sub
jge
jp
movsb
movsb
imul
imul
or
in
in
and
into
out
shrl
dec
cmp
xor
cwtl
orl
test
out
mov
or
cmpsb
mov
push
dec
fdivr
cli
inc
dec
cmp
push
popa
cmp
test
pop
sub
lret
mov
adc
sub
sbb
sub
fildll
jmp
xchg
js
lds
cmp
adc
stos
mov
into
movl
out
xchg
fwait
jnp
mov
sub
cmc
mov
xor
xchg
arpl
iret
lcall
jle
sbb
in
cmp
fs
xchg
test
iret
xchg
pusha
jns
cmp
and
shl
mov
push
imul
push
dec
enter
fstpl
lock
psrlw
mov
cmpsl
aas
leave
ds
cld
adc
sbb
push
mov
test
rcrb
mov
push
outsl
stos
push
xchg
adc
xor
and
cli
shld
imul
cmp
xchg
mov
rclb
dec
sub
cmpsb
imul
ret
mov
popf
pop
ljmp
sbb
inc
fwait
mov
cli
xchg
lcall
push
and
movsl
lret
or
sbb
jne
cltd
and
dec
int
cs
shlb
sub
sbb
add
pushf
js
loope
cmp
and
scas
mov
push
scas
and
pop
sub
sbb
frstor
out
aas
sub
iret
fs
lock
inc
sti
mov
outsl
stc
mov
ret
fcoms
mov
cmp
push
dec
cmp
mov
mov
push
mov
test
xor
daa
das
dec
push
pop
gs
lahf
stc
lods
and
xor
js
and
movl
and
cltd
aaa
adc
push
leave
iret
popa
jne
mov
sub
sbb
add
cmc
insb
mov
ret
addr16
push
dec
out
lahf
scas
mov
insb
outsb
loope
and
fistpll
cmp
ror
add
mov
xchg
jl
fiaddl
sti
adc
or
adc
xor
push
sbb
out
jnp,pt
js
inc
pop
in
cmc
jae
xchg
or
jmp
test
cmp
test
inc
cld
insl
shll
scas
loopne
push
mov
mov
js
xchg
ljmp
cld
xor
or
pop
ret
mov
test
sbbb
outsl
push
popa
popl
je
jne
lret
fmul
xlat
push
imul
jb
fs
notl
jne
xor
adc
stc
cs
xchg
adc
pop
sub
insl
and
xor
and
sbb
inc
cmpsl
pop
movsb
mov
add
stos
sub
cmp
sbb
add
lea
lcall
push
std
xor
pop
sub
hlt
pop
pop
dec
sbb
jae
dec
pop
jns
sub
and
sti
inc
inc
jne
outsl
repnz
out
mov
sbb
shrb
mov
jno
cmp
dec
nop
decb
imul
jb
pop
mov
inc
push
push
mov
frstor
fs
jmp
ja
sub
jg
nop
adc
jmp
pusha
aad
pop
addr16
mov
add
xchg
stc
sahf
lret
test
jae
pop
out
jge
add
push
std
and
dec
xor
inc
or
lcall
jg
pop
cmp
jge
leave
push
aas
shlb
add
and
lods
inc
xlat
mov
inc
imul
lods
cmpsb
push
ret
push
cmp
push
out
ljmp
push
movsb
sub
aad
popf
xchg
adc
out
pop
subb
out
cltd
push
cmp
xor
inc
test
add
bound
stc
pusha
mov
arpl
test
nop
pop
add
add
sbb
pop
mov
imul
dec
and
mov
cmp
sbb
pop
jecxz
mov
jmp
mov
and
insl
inc
popa
dec
mov
addr16
mov
mov
ja
xchg
sbb
mov
mov
nop
aam
push
mov
mov
inc
push
int3
xchg
in
stc
mov
mov
leave
test
adc
lea
cmp
decb
pop
mov
sub
xchg
cltd
mov
mov
icebp
negl
adc
test
sub
insl
jnp
push
and
mov
inc
gs
cwtl
cmpsl
dec
int
or
inc
xor
mov
aaa
jmp
mov
add
sub
mov
adc
jb
mov
andnps
push
pop
pop
push
lret
pop
dec
in
daa
add
fdivl
pop
and
inc
shlb
jno
sub
mov
xor
mov
insl
fcmovbe
xchg
dec
inc
ds
sbb
stc
inc
mov
lret
dec
cld
xchg
les
out
scas
push
push
adc
lret
test
push
or
adc
out
mov
jle
scas
repnz
cltd
outsb
inc
push
fisttpl
in
sbb
jmp
shlb
gs
call
and
roll
add
push
mov
hlt
sub
lcall
pushf
adc
test
into
pop
push
sbb
lahf
out
ret
push
mov
jp
ja
jbe
mov
mov
cmp
mov
mov
dec
sbb
xor
inc
hlt
mov
jecxz
popf
and
shl
insb
mov
jmp
mov
lahf
jmp
xlat
popa
xlat
fincstp
rorl
leave
or
push
pop
jge
mov
or
add
mov
aam
cmpsb
es
cmpsb
stos
mov
imul
xor
adc
mov
pop
jae
cltd
jmp
mov
sbb
and
int3
into
enter
or
fcomp
sti
dec
mov
mov
int
out
fcmovb
les
push
pop
int3
pop
in
jg
jecxz,pt
loop
jle
cmp
out
popf
mov
gs
arpl
cmp
ror
inc
mov
fstps
mov
mov
fsubr
cmpb
pop
rol
mov
psubb
test
int
lahf
mov
mov
mov
push
cmp
or
fwait
je
negl
cmc
repz
shll
cmp
daa
jo
out
mov
repz
cmc
cmp
mov
cmp
faddp
dec
in
inc
xchg
sti
mov
push
in
pop
inc
dec
mov
sub
and
nop
add
and
dec
pusha
pop
dec
add
int
aad
faddl
jmp
repnz
sub
fisubs
pop
mov
hlt
pop
ds
cmp
and
push
push
xor
add
leave
mov
mov
and
mov
mov
push
rcll
sub
mov
pop
push
jg
bound
pusha
jecxz
loope
mov
pop
jecxz
mov
push
test
adc
daa
inc
cmp
in
aaa
in
pop
mov
dec
pop
repz
flds
ds
jecxz
sti
leave
xchg
or
mov
ja
rcrl
mul
hlt
dec
inc
pushf
mov
sub
push
xorb
in
push
ljmp
idiv
or
jecxz
dec
icebp
fwait
xor
leave
cld
sbb
and
add
add
mov
lock
int
bound
cltd
push
xchg
sahf
xchg
pop
add
ret
cltd
adc
jmp
addl
mov
std
cld
add
and
out
lret
nop
xor
lods
push
pop
dec
sub
mov
imul
movswl
sbb
xchg
push
in
lods
iret
test
xchg
lahf
dec
xor
xchg
out
push
imul
adc
xchg
jp
imul
and
pop
das
jp
popa
rolb
push
pop
in
addr16
mov
adc
mov
jecxz
or
mov
and
adc
addr16
popa
and
in
inc
mov
ret
xchg
out
mov
dec
jge
inc
ret
xor
push
or
inc
mov
std
enter
jne
ret
add
cmp
push
out
and
fsts
add
xor
and
pop
mov
decl
inc
mov
adc
call
adc
les
es
and
jecxz
xor
lds
sahf
in
inc
cmp
jns
in
call
pop
pop
xchg
pop
or
clc
mov
sub
pop
adc
jb
test
js
jo
incl
dec
aad
call
and
dec
mov
cmp
xor
mov
ja
cmp
aas
xchg
js
aaa
cli
add
jb
sbb
push
mov
mov
pop
push
dec
adc
mov
test
jbe
jae
push
ja
xchg
xchg
push
adc
mov
jne
loop
adc
mov
jnp,pn
out
inc
mov
xchg
stc
rorb
xor
jnp
fisttps
scas
jecxz
push
fbstp
imul
div
lret
enter
adc
movsb
jbe
or
dec
pusha
mov
sub
xchg
add
mov
mov
xchg
mov
jg
cmp
mov
jge
fistpl
lret
pop
iret
scas
clc
adc
push
cmp
scas
icebp
mov
arpl
sbb
cmp
hlt
shll
ret
repz
mov
divl
sub
xchg
cmp
nop
cld
int
leave
sbb
jno
push
loope
dec
je
mov
dec
push
xor
outsl
rclb
imul
push
jp
insl
icebp
dec
xchg
jge
es
and
sbb
ret
repnz
sbb
iret
add
inc
cmp
mov
jb
aas
or
add
shrl
jns
movsb
cwtl
xor
push
test
insl
add
dec
call
lods
subb
notb
mov
or
imul
shl
sub
mov
dec
aam
jecxz
stc
jl
cld
and
sbb
repz
jle
mov
leave
fwait
lock
jmp
mov
rorb
cs
enter
mov
nop
mov
out
mov
aam
or
mov
ljmp
xor
into
into
nop
cmpsl
in
sub
jg
movsl
repz
fsts
shr
loope
sub
sub
push
sbb
daa
mov
add
repnz
mov
add
inc
pop
fldcw
sub
jge
cli
inc
popa
lahf
adc
mov
lret
shll
mov
mov
ret
cmp
movsl
mov
enter
jecxz
or
outsb
add
or
cmp
push
mov
popa
fistps
in
dec
aas
stos
mov
je
icebp
loopne
pushf
sub
adc
sbb
push
xorl
aad
psubw
jns
pop
jmp
cs
adc
push
shl
and
gs
aam
ret
mov
ja
hlt
xor
rdmsr
notb
loope
add
or
setle
mov
xchg
imul
mov
sub
lret
inc
out
in
jo
or
jle
inc
mov
push
shrb
pusha
xor
mov
pop
in
sbb
js
adc
out
adc
push
jnp
test
loope
stc
xor
fldl
and
movsl
cmp
popf
les
add
shlb
mov
mov
loope
mov
jl
cld
cmp
loop
or
push
jae
pop
mov
dec
outsl
in
and
ljmp
in
mov
popa
repnz
decl
adc
setge
pop
cmp
clc
lods
pop
fs
cmpsl
pop
xor
imul
cwtl
dec
mov
sub
xchg
das
mov
gs
dec
dec
popa
popa
sub
rcr
mov
leave
pop
and
insb
sbb
daa
sub
sbb
shr
out
jns
loop
mov
mov
movsl
push
adc
pop
inc
cmp
gs
sbb
les
fsubl
insl
jo
inc
icebp
arpl
outsb
inc
mov
xchg
fs
cmp
adc
mov
jg
sbb
call
or
mov
into
cmp
loopne
outsb
and
std
shrl
mov
repz
push
cmpsb
mov
cmp
sahf
xchg
lret
sbb
adc
loope
jp
fimull
pushf
movsb
mov
xor
fldenv
pop
ret
jge
mov
sub
out
lock
cmpsl
fcoml
sbb
jns
adc
or
mov
test
inc
sbb
std
sbb
fiadds
dec
into
and
push
mov
es
inc
mov
or
out
xchg
lock
sti
aaa
scas
sarl
les
ljmp
mov
add
cld
xor
or
arpl
pop
lcall
arpl
fbld
rcrl
push
xchg
int3
inc
dec
or
or
popf
lods
sbb
leave
outsl
movsb
and
cmc
lods
xor
addr16
xchg
test
xor
sbb
xchg
cmc
pushf
sbb
into
aaa
cmp
mov
pop
lcall
inc
mov
xor
mov
out
sub
sbb
xor
pop
ljmp
incb
lds
inc
pop
adc
dec
and
pop
aad
push
inc
stos
loop
xchg
sub
mov
cltd
call
or
lret
sti
pop
aam
popf
out
clc
jb
pushf
or
jle
leave
jno
cmpsl
lcall
push
add
call
lcall
imul
sub
cmpl
imul
xchg
imul
cmp
in
xchg
lcall
xor
xor
lds
or
mov
push
lret
or
iret
fucomp
inc
lret
pop
mov
add
lods
rcr
and
jge
loop
cmp
lret
jns
xor
dec
in
dec
or
xchg
aam
mov
popa
mov
or
xchg
mov
imul
sub
push
xchg
jp
mulb
aad
and
insb
xor
flds
and
mov
adc
ljmp
xchg
xchg
push
pop
jmp
cmp
movsb
lock
mov
arpl
in
add
aas
pop
pushw
shll
sbb
addr16
jne
int
rcrl
imul
mov
adc
dec
loopne
dec
jb
adc
aas
movsl
cwtl
nop
sub
xor
mov
pop
or
mov
push
adc
inc
cmp
loopne
mov
fisttpll
sub
mov
mov
iret
lret
shld
xchg
push
sahf
xchg
dec
dec
mov
bound
mov
jge
adc
repz
ficompl
add
loopne
dec
sti
or
add
lret
push
jno
clc
push
repz
ret
cld
inc
stc
mov
pop
jl
lods
ret
out
fldl
sub
fwait
movsl
fcompl
jb
pop
sahf
sub
or
dec
dec
enter
and
push
dec
std
subl
pop
mov
pop
mov
xchg
jmp
push
cmp
fwait
and
or
idivb
cmp
adc
mov
rclb
mov
mov
sti
gs
sbb
repnz
sbb
xor
adc
mov
dec
imul
xchg
or
or
cld
mov
jne
pusha
and
jmp
xor
aam
xor
enter
in
aas
out
lcall
dec
xchg
insl
loop
adc
lret
push
mov
fisttpll
mov
xor
aas
adcl
push
xchg
cs
or
sub
mov
stos
fisubrl
jecxz
frstor
out
pop
xchg
dec
js
mov
out
mov
add
fcom
push
mov
pop
fyl2xp1
test
movsb
and
sbb
int3
jno
or
xchg
fsts
rcr
xor
arpl
arpl
cmp
ret
scas
jnp
aad
stos
sub
je
adc
dec
push
filds
xor
sub
jl
fimull
cmp
or
lods
mov
mov
popa
push
cmpsb
imul
aas
test
xor
sti
popf
fldenv
pop
mov
inc
mov
or
mov
jae
ja
out
movsl
fildll
in
xchg
mov
stc
xchg
movsl
sbb
jbe
pop
neg
push
cmc
jno
mov
pop
into
and
sbb
sbb
iret
roll
add
les
push
and
mov
loope
xchg
cmp
or
inc
dec
push
dec
mov
mov
lods
add
pop
movsb
outsl
loop
xchg
sti
stos
add
fisubrl
mov
std
test
shrl
xchg
lret
push
push
negb
jecxz
xorb
sahf
fs
cmp
jle
insb
int
sub
or
jl
xchg
das
test
add
sbb
jno
pop
dec
rclb
push
mov
add
or
or
in
fcoml
sbb
mov
aam
mov
cmp
cmp
and
push
jns
xor
add
jae
jae
dec
lcall
out
push
dec
xor
or
pushf
js
sbb
lods
push
iret
cmp
sub
and
repz
inc
leave
mov
cmp
shlb
es
sub
cmpsb
test
js
pop
and
out
inc
jns
push
dec
mov
sbb
pop
push
faddl
outsl
out
mov
in
dec
push
sbb
in
movsb
je
inc
ds
ja
cld
pop
lds
scas
mov
add
nop
sti
pop
xchg
dec
jmp
jl
mov
aaa
pop
aam
stos
ds
imul
fcomip
hlt
in
cmp
inc
jno
mov
pop
scas
inc
lods
xchg
int
or
lods
jle
outsl
roll
fwait
aam
sbb
lcall
sbb
nop
mov
aam
push
adc
cs
cwtl
cmp
adc
mov
in
mov
adc
push
mov
inc
rcl
call
pop
pop
cmpsl
adc
adc
sub
loope
shl
adc
mov
testb
mov
mov
repz
or
mov
inc
mov
xor
xor
add
or
inc
gs
popf
add
popa
aaa
ljmp
jno
sub
mov
add
aam
std
mov
push
ret
mov
push
rep
scas
mov
or
cmp
mov
xor
add
test
ja
sbb
inc
lcall
xor
xchg
add
mov
fcmovne
jp
lcall
ljmp
mov
les
push
loope
fs
aam
and
in
adc
mov
setb
or
dec
mov
and
mov
mov
test
add
pop
xchg
orl
xchg
ljmp
xlat
mov
push
pop
lcall
sarb
pop
mov
inc
pop
adc
sub
adc
cltd
xor
es
fwait
ret
ja
cmp
dec
jnp
aaa
dec
mov
push
push
adc
mov
or
push
lahf
and
sahf
jmp
outsl
sbb
mov
movsb
sahf
sbbl
sarl
jl
call
xchg
jmp
jb
mov
jg
push
mov
cmp
loopne
push
aas
mov
inc
fs
sub
xlat
gs
sub
cld
or
pop
inc
or
push
jmp
out
sbb
inc
popa
imul
add
push
ja
cwtl
xor
mov
jae
icebp
jne
push
addl
fdivr
cltd
gs
xchg
xchg
dec
repz
add
out
out
jmp
xor
dec
imul
mov
cmp
test
pop
cmp
pop
push
xchg
ficoml
out
or
pop
xor
shll
popf
jb
filds
imul
push
rcr
sti
jge
sti
jno
push
and
ror
imull
cmp
in
mov
cmp
cmp
xchg
sub
ror
dec
pop
outsl
inc
mov
aam
mov
inc
pop
jle
pop
and
stos
sub
sbb
insb
xor
in
dec
sbb
cli
xchg
push
inc
das
or
pop
xlat
mov
add
dec
ficomps
int3
roll
xchg
fs
call
push
daa
test
addl
into
enter
sbb
bound
js
mov
cmp
and
into
decl
fnstenv
push
outsb
add
movsb
mov
nop
sbb
outsb
jl
in
rorb
out
mov
das
dec
outsl
mov
sbb
rcl
filds
pop
arpl
pop
loope
loopne
out
das
mov
aad
mov
xchg
and
jns
or
jg
mov
mov
inc
xchg
pop
sub
jecxz
es
jmp
pushf
repz
jae
or
stos
pop
test
cmpxchg
xor
jno,pn
jl
fs
adc
addr16
lods
pop
jecxz
iret
add
lahf
push
mov
imul
rclb
aaa
add
shr
jge
test
mov
xchg
into
fisubrl
mov
mov
xor
orl
adc
decl
adc
jp
push
loopne
jle
lods
adc
loop
pop
pop
cli
dec
xor
stos
mov
jecxz
push
int3
dec
cmp
ss
std
cltd
test
ret
les
jns
adc
lahf
daa
stos
in
popf
mov
test
test
ficompl
pop
push
mov
fwait
mov
int
add
out
jge
dec
mov
stos
jg
test
xchg
push
outsb
loope
test
jl
test
inc
or
sub
rcr
sub
jmp
mov
hlt
xchg
sbb
pusha
repnz
sbb
xorb
ljmp
mov
dec
jnp
aaa
xchg
adc
cmpsb
pop
ret
cs
rol
cmp
lock
aaa
loop
loope
push
aam
in
dec
sbb
add
insl
sub
mov
or
fisubl
inc
mov
push
jle
cmovae
push
cmc
out
jecxz
mov
xor
xchg
jb
lcall
ret
daa
or
addr16
jbe
hlt
adcl
add
add
mov
ljmp
pop
shl
dec
mov
outsb
test
bound
xchg
sbb
ljmp
push
out
dec
out
sub
inc
outsl
cltd
sbb
cmc
sbb
fisubl
jecxz
xchg
xchg
ret
jne
pop
js
fprem1
popa
pushf
add
lcall
pushf
cmpsb
and
clc
scas
xchg
add
mov
jne
xor
push
shlb
out
loop
mov
jo
pusha
sahf
fcmovnu
fldl
sbb
in
addl
adc
addl
dec
xchg
mov
ja
adc
push
jle
inc
jno
push
scas
fsubrp
dec
nop
ret
push
and
add
mov
mov
mov
cmp
in
pop
jge
inc
mov
jmp
es
add
mov
das
sbb
arpl
pop
inc
inc
insb
int
adc
hlt
adcl
inc
mov
scas
lcall
adc
push
subl
sti
inc
test
and
sub
sub
pop
and
xlat
dec
mov
sub
ret
ret
dec
mov
mov
pop
subb
mov
in
addl
xchg
push
pop
sub
sahf
sbb
ret
mov
dec
cmp
and
jecxz
push
add
in
adc
loopne
shll
call
shl
push
cltd
xchg
or
movsw
mov
filds
and
negl
std
fs
jae
adc
es
gs
pop
lret
adcb
cmp
lret
mov
in
cmp
fimuls
inc
jo
outsb
or
cld
jno
sbb
xor
pop
stos
call
fldenv
pop
int3
into
add
shll
jle
push
scas
out
cmp
sbb
mov
adc
loopne
rep
jbe
pop
ret
jg
mov
mov
jg
outsl
inc
stos
xchg
sbb
mov
rorl
ds
rorl
push
xor
or
rorl
mov
outsb
out
bound
cmpsb
and
jae
push
pop
iret
in
xchg
mov
push
lahf
mov
xchg
xor
xchg
mov
xor
jo
rol
inc
mov
decl
xlat
int3
add
mov
add
xor
fprem1
adcb
test
clc
inc
loope
filds
roll
sti
sub
sti
pushf
gs
dec
xchg
mov
dec
and
cmp
add
dec
mov
loope
in
mov
or
mov
sub
or
mov
jb
mov
mov
push
push
inc
lods
jg
loop
or
push
aam
outsb
insb
xor
mov
pop
aad
jae
mov
and
into
ja
imul
xor
add
dec
outsl
loopne
pushl
cmp
pop
bound
jae
mov
pushf
das
subb
add
xchg
into
outsl
les
and
jg
daa
fistpll
loop
pop
push
cwtl
jne
or
xchg
lods
lods
push
jae
data16
xchg
mov
dec
push
push
mov
xlat
rcr
dec
jmp
or
je
aaa
jno
scas
jg
les
pop
stos
fdivrs
xchg
shrb
insl
mov
outsl
repnz
aas
adc
jge
xor
leave
pop
or
sub
cmp
pop
scas
cli
call
out
pop
imul
pusha
inc
mov
lahf
mov
repz
call
xchg
push
or
cmp
cld
stc
cmc
jb
test
jle
ror
test
add
bnd
mov
push
dec
daa
sub
sahf
xchg
add
xchg
pop
repz
pop
gs
dec
enter
in
jb
push
cmp
sub
jle
inc
aam
movsl
inc
lcall
push
ds
sbb
add
xor
test
fs
add
cwtl
test
sbbl
sub
test
fsubrl
pop
cmp
lds
xlat
enter
pushf
int
pop
cmp
jp
pop
mov
in
adc
push
xor
dec
mov
shll
mov
roll
pop
mov
push
hlt
aas
sbb
addl
mov
loope
lds
xor
fdivrs
imul
mov
mov
xchg
xchg
jae
pop
inc
mov
lret
fxch
cltd
mov
adc
sti
push
mov
xor
pop
insb
inc
pop
scas
aam
sub
insb
fs
mov
cmp
push
mov
push
hlt
cmp
jg
fwait
cmpl
fisubl
jp
xor
inc
add
lock
push
pusha
ljmp
test
mov
ret
dec
cmp
icebp
push
shrl
stos
enter
mov
and
rclb
jb
inc
jl
xchg
int3
js
pop
xchg
inc
dec
loopne
cmp
mov
add
adc
rorl
idiv
sar
xchg
aad
cmp
sti
xchg
mov
cs
or
xchg
jbe
leave
jbe
push
cwtl
jne
test
cmp
aam
xor
lahf
jo
push
inc
xchg
int3
xor
xchg
jge
mov
imul
mov
xchg
xchg
out
jo
lret
jmp
into
mov
andl
or
imul
repz
fmuls
cmp
loop
pop
jmp
out
icebp
lcall
shrl
cltd
testl
lcall
cwtl
jmp
test
cmp
insl
rolb
adc
fists
int
inc
jmp
push
push
outsb
std
pop
insb
fwait
cmp
push
adc
in
mov
mov
push
cmp
outsb
xor
mov
out
xor
sahf
push
inc
add
jle
pop
cmp
pop
push
pusha
ficomps
sub
mov
in
popa
lret
dec
sub
dec
mov
inc
and
jg
and
stos
rcrl
in
pushf
xor
imul
movsl
lcall
sbbl
pop
rcll
insl
push
mov
and
mov
lret
out
xor
mov
xor
xchg
xchg
out
jno
mov
lcall
jmp
xchg
add
push
cmp
std
stc
cmp
pop
jne
and
leave
test
loopne
push
or
sbb
xchg
lret
imul
outsl
clc
stos
xor
cmp
cmp
jecxz
add
int
dec
jbe
mov
sbbb
aas
dec
fsubl
pop
lea
pop
and
cmp
mov
das
stos
jge
or
jae
pushf
or
adc
fwait
das
lret
adc
add
inc
dec
cmp
lahf
sub
in
stc
inc
cmpl
adc
dec
outsb
mov
lret
and
rolb
cmc
dec
jae
push
xchg
movl
ja
xor
arpl
into
movsb
int3
mov
cs
sti
imul
pop
out
jae
fs
bound
and
lods
xor
xor
mov
inc
sbb
popf
push
ljmp
mov
fcompl
test
stos
mov
add
outsb
jnp
outsl
xchg
cmp
pop
jle
xchg
cli
inc
add
sarl
sbbb
insl
inc
cwtl
push
dec
les
inc
cld
loopne
adcl
ljmp
mov
enter
push
aam
mov
into
or
fnsave
cmp
xorw
mov
mov
pop
xorb
divb
cmp
jae
push
insl
out
mov
cmp
lret
imul
ljmp
mov
inc
lds
push
sbb
ret
dec
push
sub
std
jnp
sbb
movsl
outsl
stos
repnz
jno
or
mov
dec
cli
mov
loope
xchg
fcoml
inc
les
addl
mov
or
xchg
dec
mov
xlat
cmp
bound
fwait
xchg
in
adc
cmp
cltd
hlt
cs
popw
dec
push
mov
jne
fidivs
loope
and
add
jae
loop
pop
pop
rcr
jns
nop
and
push
and
mov
pop
clc
xor
loopne
das
ljmp
xchg
insl
daa
sub
int
xor
aaa
js
lods
fwait
inc
and
scas
xchg
xchg
dec
inc
pop
pop
in
les
leave
and
mov
std
lods
sbb
push
and
aas
dec
xor
inc
jnp
or
clc
lea
xor
xchg
add
and
loope
sub
rcll
sahf
xor
sarl
jle
out
data16
lds
mov
in
loope
lahf
pop
pop
cmp
dec
int3
sbb
mov
or
xor
xlat
sbb
aaa
dec
mov
xor
push
sub
xchg
jnp
mov
push
xchg
decb
jg
push
mov
rcr
popf
and
pop
aas
pop
xchg
pushf
mov
inc
xorl
xchg
dec
push
dec
mov
mov
inc
rcrb
xchg
lock
leave
cmp
cmp
or
loopne
mov
insb
out
daa
or
and
lods
cmp
jecxz
mov
fisttpl
dec
nop
aas
neg
test
sub
mov
test
je
xchg
jo
xor
ja
jbe
jbe
mov
xor
aaa
pop
jae
jle
sbb
lret
xchg
pusha
shl
and
mov
sar
insl
ret
and
pop
push
inc
stos
insl
add
clc
dec
adc
mov
filds
push
dec
adc
out
adc
adc
loope
roll
mov
push
pop
test
sbbb
or
dec
and
pop
repz
sbb
mov
push
mov
mov
xor
cwtl
or
jp
add
shl
mov
mov
rorl
sahf
dec
jmp
mov
popa
out
or
adc
mov
push
cmp
mov
push
adc
xchg
dec
cmp
leave
xor
cmp
subl
lcall
out
adc
call
push
loopne
push
in
mov
stc
ljmp
ror
add
push
dec
ljmp
push
mov
sub
test
xchg
insl
xchg
xchg
mov
icebp
push
or
dec
and
jle
repz
push
sub
adc
leave
push
jnp
pop
aaa
xchg
in
and
out
xor
cmp
mov
bound
pop
adc
nop
outsl
xchg
fcmovb
mov
jle
inc
mov
pusha
push
cmp
jo
mov
xor
pop
xchg
cmp
inc
mov
fs
repnz
mov
daa
mov
mov
or
mov
stos
lcall
test
frstor
sbb
mov
movsl
xchg
aas
test
test
icebp
lea
loope
mov
jl
lret
test
dec
scas
mov
mov
xor
mov
jecxz
add
scas
negl
mov
mov
fistps
mov
lcall
pop
pop
test
into
int
dec
xchg
push
pop
insl
arpl
and
dec
pop
push
jns
inc
mov
jecxz
stos
or
adc
sbb
jge
cmp
std
pop
subl
inc
or
xor
andl
fcompl
and
and
cmp
imul
add
loope
xchg
inc
fstpl
jle
shl
out
pop
adc
sub
dec
jo
mov
push
js
jl
aam
loop
nop
cmp
or
or
pushf
pop
pop
sub
add
push
mov
push
and
dec
or
xchg
lock
cmp
sbb
clc
cmp
xchg
mov
mov
mov
pusha
adc
loopne
adc
or
ds
dec
jmp
addb
mov
pandn
inc
xchg
repnz
sub
jge
cs
rorb
sub
int
or
adc
jge
jmp
inc
mov
push
sub
out
lcall
push
xor
xchg
adc
jnp
ss
fldt
jle
repnz
inc
stos
mov
mov
xchg
ljmp
cmp
xchg
or
xor
sub
push
loopne
movsb
cld
in
call
mov
adc
sub
cmp
adc
fsubrl
call
or
mov
ja
push
ret
aas
cmc
xor
adc
pop
in
add
or
inc
mov
imul
cli
out
mov
cmp
ret
je
popa
inc
inc
out
cs
inc
add
push
aas
sub
cmc
pop
fnsave
repnz
or
mov
ret
ret
add
mov
loope
xor
jge
or
mov
lea
stc
in
mov
lret
cmc
jge
test
daa
insl
pop
call
jns
rcrb
lods
jo
adc
xor
insb
aas
inc
in
jbe
mov
cmp
sbb
lods
dec
sub
movsb
mov
or
fsubs
push
or
mov
outsb
dec
jle
xchg
add
xor
mov
nop
jns
out
call
cwtl
mov
xor
ret
mov
jle
xchg
jae
rcrl
sbb
pop
lret
iret
xchg
imul
mov
sahf
mov
jno
push
push
repnz
imul
sarl
mov
mov
mov
mov
or
lret
ja
outsb
or
jbe
cwtl
loopne
sahf
mov
or
jnp
sub
shl
imul
adc
inc
xor
adc
mov
scas
adc
xchg
xor
std
inc
imul
mov
adc
test
inc
sahf
setl
xchg
lret
cmc
das
mov
mov
push
mov
jbe
xchg
fld
int3
test
movsb
das
shl
scas
movsb
xchg
lds
dec
mov
xor
shrl
ljmp
inc
outsl
jae
fwait
xchg
xchg
xor
adc
ss
int3
sbb
subb
orb
jle
bound
jecxz
jno
sbb
cs
sub
mov
popa
add
int3
outsl
cld
adc
mov
xor
loope,pn
and
jle
push
aas
xor
ss
push
les
cwtl
fwait
hlt
popf
pop
stos
push
movsl
stc
pop
xchg
iret
aad
xchg
dec
mov
js
mov
sahf
sbb
gs
adc
stos
sub
sub
mov
xchg
jl
lret
pop
jmp
push
jle
mov
jnp
or
xchg
loop
mov
es
pop
jns
out
pop
in
add
mov
mov
shlb
sub
inc
xor
test
mov
sbb
loope
stc
or
rcrl
jmp
loope
in
ss
mov
repz
mov
xchg
stos
pusha
push
les
jmp
loopne
sub
adc
divb
mov
enter
push
and
ret
mov
or
cmp
lret
jecxz
lret
pop
in
jle,pt
inc
cltd
ret
mov
repz
mov
mov
xor
pop
mov
outsb
js
lock
jne
jle
and
fldcw
push
push
cmpsl
leave
mov
and
add
fldt
lods
jne
sbb
jns
adc
pop
pop
sahf
pop
cmpsl
add
loopne
cmp
call
movsb
xchg
out
mov
imul
jle
scas
sti
stos
adc
push
xchg
push
lcall
mov
cmp
cmpsl
enter
btr
mov
sbb
jno
clc
fwait
out
or
push
inc
sub
cltd
repnz
lea
inc
jle
stc
sbb
mov
out
in
stos
into
sub
add
adc
repz
lcall
sub
adc
add
cmp
jne
xor
loope
mov
jge
mov
mov
popf
cmpsb
mov
fildl
xor
icebp
out
dec
aad
and
jle
movb
setbe
roll
add
mov
add
pop
sub
or
jecxz
rcr
repnz
je
or
jo
mov
bnd
loop
fdiv
popf
fiaddl
or
lcall
push
std
sarl
jnp
xchg
or
call
sub
mov
into
push
pop
mov
or
xor
mov
sub
dec
gs
xor
and
cmpsl
xor
rcrb
setnp
cli
dec
lcall
and
cmp
jae
out
sub
dec
sub
call
test
sbb
repz
test
adc
das
xchg
mov
idivb
nop
arpl
jnp
imul
movsl
mov
in
orl
popa
push
pop
out
loopne
cli
sbb
icebp
mov
or
xor
aad
fwait
cmp
mov
shl
push
jge
mov
cmpsl
xchg
inc
jb
scas
mov
out
lcall
or
das
or
add
xchg
call
jle
lods
dec
xor
inc
mov
or
jp
inc
pop
decb
std
push
jne
stc
xchg
xchg
andl
xor
fsubr
fisttpl
aad
xchg
xchg
ss
push
jns
ret
pushf
or
push
mov
sbb
js
and
xor
data16
leave
jmp
pusha
push
mov
adcb
or
push
in
fistps
mov
xchg
push
dec
pop
dec
cwtl
cs
lcall
xchg
jl
xor
dec
roll
int3
clc
cli
ja
in
scas
mov
and
mov
loopne
fwait
or
clc
testl
sub
in
ja
jbe
mov
sub
dec
mov
inc
out
mov
pop
cltd
outsl
pop
mov
jo
add
repnz
scas
push
arpl
ja
mov
or
pop
push
je
cmp
ss
pop
jae
pop
mull
jb
push
fdivr
out
adc
stos
dec
cwtl
mov
into
push
int
repnz
movsl
and
sarl
in
sub
mov
idivl
inc
xor
cmpsl
jno
mov
sub
adc
mov
pushf
mov
ret
hlt
fmul
sub
push
mov
push
sbb
das
cmpsl
pop
cmp
out
dec
fbstp
dec
jmpw
idivb
mov
int3
sti
dec
scas
sbb
cmp
add
aam
inc
imul
mov
jb
mov
popf
enter
fisubl
sbb
inc
pop
ror
dec
in
ljmp
xor
xor
push
or
jmp
test
add
pop
fidivrs
cmp
test
daa
sbb
lret
cltd
push
push
adc
push
hlt
shrb
or
pop
icebp
fimull
mov
mov
pop
dec
push
fadds
scas
sub
mov
stc
sbbl
scas
hlt
mov
jl
and
add
or
dec
sbb
scas
jp
add
dec
cmp
shrb
jnp
adc
jmp
jno
mov
lock
or
push
clc
inc
test
loope
mov
pusha
cmp
sahf
es
sub
jns
int
addl
loope
mov
faddl
insb
es
imul
rcrb
mov
adc
addr16
call
jmp
jecxz
aaa
gs
icebp
mov
mov
push
insl
fld
lock
cwtl
andl
mov
mov
sarb
or
ss
movsl
jle
test
and
out
fdivs
mov
adc
and
adc
cs
xchg
jne
cmpb
popf
out
adc
xor
xchg
push
mov
sub
mov
add
lahf
jmp
push
add
jo
xchg
mov
fimuls
push
mov
jnp
xor
test
cli
aas
icebp
jno
jle
dec
mov
int
adcb
cmpsl
dec
test
jl
push
inc
dec
xor
arpl
test
pop
inc
jae
lret
pop
sahf
and
xor
mov
shrl
or
sbb
xchg
fldl
jbe
pop
cmp
cld
out
cltd
jbe
and
mov
xchg
in
jo
sub
pop
sarb
sub
faddl
or
repz
daa
cmp
hlt
xor
cmp
sbb
mov
fldt
ret
jecxz
into
cltd
cmp
std
fiaddl
cmpsl
add
rep
add
mov
imul
jmp
sarl
testl
fstps
push
out
mov
add
int3
sbb
mov
sub
xchg
dec
test
test
in
xor
icebp
push
loope
or
inc
push
xchg
scas
pop
bound
xlat
fcomi
mov
std
not
inc
or
xor
mov
in
cmp
call
inc
push
sti
sub
repnz
scas
nop
punpckhwd
push
sbb
fiadds
lea
hlt
int
cmp
mov
ljmp
mov
push
xlat
imul
int
jo
dec
cmpsb
pop
and
mov
and
mov
lods
repnz
frstor
adc
test
sbb
sbb
leave
pop
or
stc
cmpsb
xchg
test
add
cmp
push
je
pop
pushf
daa
push
cs
mov
fadds
ret
aaa
bound
add
push
stos
dec
add
push
sbb
xor
dec
add
push
jg
cli
std
bound
hlt
jb
jecxz
mov
mov
fucomip
insb
xchg
pushf
nop
sahf
sub
sbb
or
outsb
fldcw
lea
lds
in
notb
js
fistpl
out
xor
xchg
sarl
sub
movsl
jmp
lret
bnd
pusha
lret
ljmp
in
stos
pop
imul
pop
push
lahf
push
pop
push
xchg
and
jecxz
shrl
inc
nop
xchg
outsb
sbb
sub
aad
xchg
add
repz
inc
adc
scas
pop
das
iret
lds
fidivl
divl
scas
push
loop
addr16
fidivrs
movsb
sahf
mov
push
je
adc
pop
lret
or
das
insl
mov
fxch
iret
test
dec
and
lret
popa
and
popa
xor
or
sbb
and
adc
mov
add
add
add
mov
fmul
sti
xor
jmp
ja
push
sub
in
cli
dec
mov
inc
shrl
add
mov
int
mov
aas
jne
jl
and
into
push
cld
fdivrl
and
mov
inc
xor
jp
xor
sub
jmp
cmc
and
in
addr16
js
popa
push
je
push
ret
xor
repz
dec
inc
daa
push
or
or
aaa
inc
call
sub
cs
mov
add
xor
ret
ja
mov
sbb
lcall
lods
pop
mov
imul
adc
scas
dec
imul
and
adc
mov
pop
mov
xchg
iret
mul
xchg
ficoml
fstps
mov
ret
and
lods
dec
and
mov
or
fnstsw
jmp
outsb
dec
jno
or
sub
shld
push
push
outsl
or
jbe
and
fidivl
xchg
mov
jo
pop
dec
jmp
lods
xor
pop
inc
repnz
aaa
rol
lds
jg
cmc
lock
int3
push
and
push
mov
sub
dec
stc
push
pop
pop
mov
jns
xor
inc
ficoml
xchg
sub
loope
mov
shlb
adc
adc
jl
dec
std
jle
iret
sub
mov
jge
scas
mov
mov
mov
fnstcw
outsl
int3
inc
push
clc
mov
add
ret
and
sub
sub
inc
mov
adc
dec
mov
jns
inc
sub
push
or
or
imul
pop
fldcw
dec
in
mov
aad
aaa
sti
push
stc
xchg
outsl
into
mov
mov
and
jnp
dec
jl
push
pop
rcrb
lcall
sub
loop
add
xchg
fnstsw
fs
std
xchg
xchg
cmc
clc
hlt
nop
test
addr16
gs
add
xchg
adcl
lahf
mov
mov
mov
int3
cmp
les
dec
adc
push
or
cmp
push
sbb
jg
pushf
jmp
add
aas
pop
xor
lahf
sbb
xchg
lret
and
int3
or
jae
sub
or
sub
mov
jb
mov
push
jge
mov
ret
pop
nop
mov
jb
mov
loope
insl
jp
mov
lock
jecxz
fcoms
aaa
stc
stos
loopne
shrb
jns
and
mov
pop
adc
ficomps
fldcw
fwait
sbb
cmp
icebp
pop
push
add
or
xchg
sub
mov
or
mov
loope
sub
push
jb
and
shll
adc
pop
and
jno
inc
mov
pusha
sub
mov
shrl
mov
outsb
scas
sbb
pop
inc
clc
inc
mov
xlat
xor
out
jg
add
pop
add
dec
popa
push
jb
mov
pushf
lods
dec
dec
lret
jl
sbb
div
jno
fmull
loop
movsb
in
push
fstpt
xor
mov
inc
push
in
sub
or
add
lods
scas
xchg
repnz
mov
cmp
push
mov
dec
or
mov
hlt
mov
call
lods
jnp
xchg
iret
mov
push
in
aad
inc
mov
out
push
mov
loopne
sbb
dec
lcall
pop
lahf
cmp
mov
cmp
push
inc
lds
subl
xchg
add
rorl
cmc
enter
push
fcoms
rcrl
hlt
pop
je
aad
ret
adc
std
mov
test
push
outsl
je
mov
fistl
mov
add
fdivrl
mov
xchg
adc
dec
insl
sbb
jl
xchg
push
dec
dec
arpl
dec
cmp
mov
test
push
repz
es
jno
movsl
loopne
inc
andl
lret
das
add
mov
and
push
or
cli
mov
mov
pop
push
xchg
xchg
lock
mov
lea
in
sbb
ficomps
ljmp
or
adc
jg
stc
adc
je
hlt
pop
test
and
ds
js
push
cs
nop
mov
pop
mov
pop
sarb
mov
cmp
fidivs
pop
inc
setle
sbb
stc
xchg
lds
xor
cmp
or
xor
or
jecxz
sub
in
dec
fiaddl
inc
arpl
icebp
gs
mov
fisubl
out
cmp
adc
sub
mov
jno
pop
sbb
dec
inc
sub
adc
and
mov
test
inc
test
ja
and
mov
cmpsb
ja
mov
xchg
or
out
pop
fisubrs
movsl
push
or
mov
cld
sbb
and
icebp
pop
and
std
in
mov
xor
pop
sub
mov
ss
lcall
xor
mov
dec
test
xchg
in
mov
pop
outsb
outsl
ja
out
in
dec
mov
dec
loop
jnp
shrb
cmc
push
xchg
inc
imul
clc
ds
xor
dec
push
cltd
rcll
xchg
out
andb
fcompl
lods
mov
mov
or
loopne
and
mov
adc
add
and
sbb
and
outsl
mov
xchg
stc
sub
sti
adc
inc
inc
das
mov
jmp
dec
mov
push
sbb
pop
out
and
mov
call
inc
int3
rcl
xlat
faddl
xor
lds
jl
add
add
rorb
inc
xchg
test
add
sbb
imul
sbb
jp
pusha
cmp
in
outsb
jo
mov
stos
jp
add
adc
xor
or
xchg
js,pn
outsb
sarb
sbb
lcall
mov
mov
and
adc
rorb
adc
pop
lods
in
mov
stos
pushf
popf
sub
outsb
push
cmc
ja
jle
xor
push
aad
mov
enter
fbld
mov
repz
popa
cmp
xchg
jbe
inc
adc
add
scas
dec
jge
cmp
xor
jbe
aam
call
pop
ljmp
jl
fldt
scas
inc
and
mov
add
cmpsl
cmp
imul
loop
pushf
push
add
fwait
rclb
ret
xchg
push
pop
xchg
iret
cld
pop
stc
insl
leave
lea
fildl
xor
mov
lea
adc
xor
sub
mov
add
xchg
mov
sbb
test
sbb
mov
scas
xchg
insb
lcall
mov
sbb
and
sbbl
dec
into
pushf
xchg
mov
mov
pop
push
loop
xchg
or
mov
or
cmpsl
mov
add
loopne
jmp
popf
lret
cmpsl
cli
mov
movsb
lods
dec
cmpsl
cmpb
jno
ss
insb
testb
aaa
push
sub
push
ret
mov
out
jns
roll
stos
mov
decl
cmp
aad
pop
push
dec
mov
xchg
fcom
sbb
cmpsb
adc
add
inc
repz
inc
jns
addr16
mov
pop
out
push
mov
lods
test
gs
mov
fidivs
ret
add
and
mov
subl
test
repz
jne
xor
dec
sub
int
stc
mov
mov
cmpsb
lea
dec
mov
bnd
dec
in
pop
xchg
inc
add
test
out
out
or
fwait
adc
inc
mov
cwtl
sbb
pop
sbb
jne
pop
ret
daa
js
push
xchg
pop
out
jb
orb
adc
cmp
push
jne
rclb
repnz
mov
xchg
stos
sub
mov
mov
lret
inc
jae
mov
jle
push
cmp
rorl
jmp
pushf
into
enter
cmpsw
add
mov
push
or
mov
ret
mov
es
xchg
push
adc
jp
jp
roll
adc
into
mov
repnz
jo
stc
push
fs
rolb
lock
popf
jmp
pushf
mov
nopl
jge
ja
mov
stc
mov
cwtl
add
movsb
pop
ret
inc
mov
inc
cmp
in
in
outsl
push
sti
sbb
dec
add
insb
or
in
lea
cmp
fnstsw
push
or
pop
xchg
mov
fidivl
in
outsl
mov
and
inc
xor
out
push
lock
adc
clc
fcoms
ljmp
stos
out
lcall
xor
mov
cmp
jnp
dec
lods
in
push
cld
xor
test
adc
jmp
xor
rorb
jns
xchg
ljmp
pop
rcrl
and
lock
mov
dec
add
sub
leave
popa
or
add
sub
mov
pushf
dec
xchg
jmp
movsb
sub
or
stos
leave
push
add
lcall
push
jmp
dec
mov
out
mov
aad
call
xchg
pop
sub
pop
pop
sbb
mov
sbb
xchg
and
pusha
outsb
and
pushf
fsubrl
inc
sub
pusha
push
sbbl
les
adc
bound
mov
es
lahf
mov
lods
sub
inc
ret
xchg
and
xchg
jl
pop
xchg
xchg
out
adc
loope
xor
lea
adc
add
xchg
lahf
mov
test
jno
sbb
mov
pop
sub
and
fdivp
mov
sub
into
or
out
add
cs
ret
or
movsl
mov
and
jmp
repnz
sub
fwait
loope
rcrb
mov
xor
rcll
in
mov
outsl
inc
outsb
pop
scas
pop
sub
cmp
and
in
or
in
pushf
mov
xchg
in
cmp
xor
in
mov
xchg
pmulhuw
mov
loop
pop
out
pushf
sub
mov
mov
push
aad
xchg
mov
pop
scas
jns
jmp
push
idivb
adc
or
popf
in
daa
out
mov
stc
test
push
in
bound
cltd
pusha
jl
adc
daa
gs
repnz
negl
dec
or
jp
adc
xchg
les
addl
jl
jno
ret
divl
mov
lods
adcl
das
and
inc
or
es
sahf
inc
test
fxtract
stc
fwait
pop
clc
subb
sub
out
xor
sub
xlat
leave
shrl
xchg
ljmp
je
movsl
pop
int
dec
push
mov
xchg
enter
mov
rcll
jo
mov
fnsave
lcall
aaa
push
out
and
jecxz
test
and
or
fsubrl
push
and
xor
mov
fdivrl
dec
mov
cmp
fsub
testb
in
and
out
fisttpll
xchg
add
repz
pop
loopne
and
jne
and
jbe
jmp
pop
sahf
cmc
cmp
cs
fistps
shl
adc
mov
gs
mov
into
inc
and
mov
jno
bound
or
bound
pop
out
add
hlt
movsl
fdivr
and
pop
mov
mov
inc
loop
es
mov
jnp
xlat
sarl
adc
adc
js
sub
lahf
sub
fdivrs
fildll
pusha
push
notl
dec
push
fcmovnb
xchg
or
xchg
sbb
mov
loope
mov
pop
push
push
mov
xchg
mov
loopne
xchg
cltd
test
add
jnp
mov
dec
push
jb
or
mov
jne
pop
subb
lock
jle
pop
mov
pop
fcmovne
mov
cltd
mov
xor
icebp
sbb
ljmp
pop
adc
fisubs
or
sub
jg
mov
mov
and
andb
cltd
bound
mov
cld
and
imul
adc
mov
mov
pushl
fbld
not
lds
push
mov
shrl
call
test
ja
jns
cmp
pop
jmp
sub
popf
stc
fdivs
mov
jo
out
popf
cli
fiadds
pushf
xchg
fucomp
fidivrs
push
adc
adc
ljmp
push
test
call
out
or
dec
add
jns
shrl
xchg
inc
push
dec
sub
hlt
shrl
push
xchg
popf
add
outsl
push
das
xor
xorl
jmp
xchg
pop
popa
testl
or
mov
dec
xor
jbe
mov
cmpsl
mov
popa
sahf
xlat
mov
adc
xchg
xchg
aaa
aad
push
sbbl
test
xlat
ja
aad
push
cmp
es
xor
fadd
xor
push
cmp
and
cmp
stos
and
dec
movsb
jp
aaa
outsl
or
ljmp
addr16
mov
mov
jl
sbb
jno
pop
jmp
std
shll
sub
inc
repnz
sub
ret
mov
mov
inc
addl
xchg
pop
arpl
dec
ljmp
cld
add
xor
mov
ret
pop
int3
fs
out
stos
fmull
das
mov
jge
pop
push
mov
insb
add
or
aaa
add
test
std
fcoml
lret
add
stos
scas
adc
mov
addr16
xchg
sti
xchg
mov
mov
mov
mov
cs
fwait
inc
pop
dec
lock
add
jle
jne
inc
sar
push
xor
daa
outsl
and
fs
out
and
push
imul
or
and
sarb
nop
das
add
mov
clc
adc
adc
adc
sub
lods
fidivl
pop
shlb
cmpsl
xor
mov
pusha
adc
xorl
inc
sub
xor
xor
stc
cmp
inc
stos
mov
hlt
jae
push
andb
fwait
pop
adcb
mov
cli
mov
out
mov
iret
xchg
add
sbbb
push
xor
xchg
jg
adcl
push
ja
clc
popa
jp
nop
cld
hlt
xor
mov
pusha
cmp
or
cld
xchg
add
add
fnsave
ffreep
and
or
dec
jb
pop
jge
push
fisubl
imul
out
mov
xor
jecxz
iret
cwtl
pusha
adc
testl
out
test
fcomps
fwait
out
cmp
jns
add
hlt
jnp,pn
adc
jno
pop
das
and
out
das
arpl
insb
mov
std
clc
mov
sub
lret
cltd
aam
mov
lahf
sbb
push
mov
pusha
test
shl
cmpsb
sub
loope
cmpsb
jns
cmp
mov
pop
jecxz
loope
pusha
or
jmp
fwait
lods
mul
dec
sti
outsb
iret
cmp
stos
popf
jle
push
ficompl
mov
add
add
ror
mov
inc
xor
pop
inc
inc
mov
aad
jle
adcl
sahf
mov
inc
and
sub
push
inc
test
push
leave
repz
add
add
in
dec
xchg
sub
inc
and
mov
fistl
pop
lea
add
out
mov
cmp
and
push
mov
xchg
mov
mov
decb
jg
stos
cld
dec
test
aad
xorl
popa
xor
sub
inc
test
int
in
add
push
jge
mov
lret
and
xor
mov
inc
pop
push
iret
lods
add
roll
dec
mov
add
repz
pop
sbbb
inc
arpl
dec
dec
pop
les
jno
scas
test
imul
mov
push
sbb
sti
ficomps
shl
rcrl
bound
pop
cmp
mov
sub
mov
xchg
imul
dec
cmpl
outsl
into
fwait
xlat
xchg
imul
lahf
in
aas
jae
xor
cmp
jae
and
in
xchg
jge
jl
inc
dec
sub
push
and
insb
aas
mulps
repz
cmpsb
or
jecxz
pushf
rclb
jge
enter
pop
xor
xor
push
jbe
mov
test
cmpsl
mov
hlt
sahf
xchg
movlhps
pop
jmp
les
mov
xchg
cmp
fs
out
jbe
sbb
sbb
popa
mov
jns
fwait
mov
out
xchg
aad
icebp
lods
insb
gs
jle
lcall
xchg
imul
pusha
insb
popa
addr16
and
jl
sti
and
movsl
mov
cs
ja
imul
js
repnz
push
out
push
loop
pop
inc
xchg
out
das
data16
stos
cmpb
nop
mov
dec
xchg
dec
jmp
or
jmp
jp
jo
aas
push
imul
iret
das
cmp
push
lret
adc
jg
jle
inc
and
shrb
stos
fwait
in
jae
ret
jmp
xchg
mov
adc
lea
and
rorl
or
jg
cmp
lret
dec
inc
pusha
cwtl
aas
test
movsl
jno
hlt
sub
and
lea
data16
movsl
pop
push
dec
or
push
mov
stc
ret
push
mov
test
add
test
mov
pop
xor
iret
incl
ret
inc
mov
add
test
pop
and
jecxz
xor
push
out
mov
pcmpeqd
insb
out
mov
push
and
add
ret
loope
cmpsb
outsl
ljmp
push
lahf
popa
sub
shrl
pop
pop
out
rorl
cli
mov
aaa
and
imul
dec
aas
adc
mov
cs
int3
xor
jl
in
adc
cmpsb
pop
movsl
sbb
jl
xchg
sub
lret
mov
imul
pushf
hlt
in
ficoms
out
pushl
roll
mov
lret
cs
and
xchg
addr16
or
cli
out
jecxz
sub
push
bound
lock
std
push
push
adc
dec
outsl
repz
hlt
aad
in
xor
popf
stc
mov
shlb
add
js
popf
mov
ljmp
xor
pop
insl
cmp
int3
or
pop
mov
fbstp
and
cmc
jg
xchg
add
lret
ss
mov
lcall
mov
cmp
andl
mov
mov
sbb
cmpsb
mov
test
rclb
movsb
xchg
jo
mov
popa
cltd
xor
sbb
in
arpl
xchg
notb
and
mov
jmp
dec
in
jle
cltd
jno
aad
fidivs
cs
pop
jl
psadbw
pop
enter
xchg
ss
pop
dec
mov
lret
adc
mov
pop
cmp
jne
int3
pop
push
mov
mov
mov
sbb
enter
push
int
push
jbe
loope
repnz
cmpl
pop
sbb
mov
xchg
and
push
popa
sub
jl
test
and
sub
sbb
test
dec
call
push
cwtl
fwait
sti
scas
sub
jecxz
loopne
mov
icebp
dec
lahf
and
inc
pop
in
add
mov
add
insl
test
aas
inc
decl
xor
adc
jnp
loope
das
fidivs
fdivrs
mov
popf
jmp
pop
psubd
roll
js
lock
sub
je
das
addl
cs
ret
rcl
sahf
in
push
in
in
mov
push
xchg
scas
pop
xchg
loopne
std
les
mov
add
lock
xchg
and
dec
jmp
je
xchg
pusha
out
xor
bndldx
xchg
adc
mov
sti
push
push
add
mov
repz
jp
fldenv
test
xor
inc
pushf
scas
mov
inc
push
subl
sahf
adc
cmp
hlt
jl
jge
movsl
divl
inc
in
rcll
cli
lcall
lret
mov
sub
jns
testb
adc
in
add
pop
mov
cmp
cld
adc
scas
and
mov
bound
pop
dec
inc
hlt
fnstcw
xchg
cltd
pop
xor
in
scas
aas
outsb
scas
int
cmp
add
jmp
push
xchg
dec
filds
imul
fnstenv
pop
sub
fcomps
orb
dec
repnz
lcall
mov
repnz
push
mov
xchg
pop
je
iret
cmc
jmp
jbe
jnp
shr
mov
in
pushf
rcll
mov
les
mov
xchg
aaa
xchg
pop
jno
movsb
cwtl
adc
or
repz
sub
fucom
xchg
shrb
test
mov
out
adc
xlat
xor
inc
out
dec
cwtl
scas
pop
imul
cmp
mov
inc
pop
add
jmp
cltd
hlt
lahf
push
adc
dec
lcall
mov
test
lods
jnp
pop
cmp
mov
int3
sbb
pop
js
sahf
add
add
int3
pop
nop
data16
les
icebp
inc
loop
mov
loope
mov
xchg
and
pop
dec
xchg
add
xor
push
xor
xchg
sarb
pop
icebp
fistpll
mov
sbb
stc
or
lock
and
les
add
dec
sbb
adc
push
cmp
cmp
ljmp
lahf
xor
testb
loop
jb
shrb
jg
fisttpll
lcall
arpl
jp
mov
lods
xchg
std
mov
xchg
popf
shlb
cmp
pop
outsb
cld
icebp
ror
das
mov
push
add
sbb
loop
stc
xor
mov
inc
in
jnp
imul
inc
movsb
adc
mov
or
xor
pusha
in
sbb
cli
in
lods
sub
inc
push
jge
jns
repnz
roll
insb
ljmp
sbb
dec
xchg
xor
js
pop
or
loop
inc
dec
push
push
mov
inc
pop
aas
imul
and
movsl
arpl
jnp
cmc
daa
out
insl
sete
out
mov
xor
inc
jno
xor
sbb
ljmp
leave
fwait
cli
aas
jmp
es
cmpb
cli
rclb
xchg
in
push
mov
add
insb
jns
adc
add
dec
adc
push
xchg
in
push
aad
adc
jbe
bound
cmp
sbbl
icebp
sub
sbb
test
mov
jecxz
rorl
std
sbb
pop
push
setnp
shr
add
xchg
add
ds
mov
inc
push
inc
in
jno
inc
shrb
ds
or
out
fwait
roll
and
mov
pushf
ds
dec
lods
ret
loopne
es
push
js
sti
ja
sub
jne
inc
jp
into
imull
cmp
out
nop
or
mov
adc
scas
stos
add
pop
mov
push
cmc
popf
and
push
xchg
jp
and
fildll
cmpsb
xor
dec
xchg
lods
jg
cmpsl
dec
pop
xor
pop
lds
cmp
insb
std
orl
mov
cld
xor
jb
pop
adc
repnz
sbb
aam
fs
xchg
push
or
xchg
jb
cs
xor
jg
xchg
or
hlt
sbbb
inc
das
inc
imul
fildl
jmp
fstp
xor
fs
fsts
cli
leave
and
in
or
mov
ds
and
and
jo
adc
push
push
mov
xor
ret
inc
into
sbb
push
rorb
jle
fisttpll
lahf
addb
rolb
xor
push
arpl
and
sub
jl
push
ss
push
add
sub
adc
push
ljmp
add
pop
mov
cmp
lods
enter
in
sub
aad
xor
shrl
inc
loop
push
out
nop
int3
test
cmp
push
daa
sbb
ret
inc
xor
scas
sbbl
xor
stc
pop
pop
adc
std
mov
pushf
mov
les
rorl
jae
stos
lds
addl
movsb
aad
movsl
cmp
xor
rolb
pop
fbstp
adc
mov
sti
cmpsb
int3
push
and
daa
fadds
je
inc
push
scas
stc
aad
outsb
pop
pop
sbbb
xchg
push
ds
sub
push
cld
cmc
jge
fbld
pop
fcmovne
jb
and
movb
fiadds
jmp
pop
movsl
push
fs
pop
xchg
inc
loop
jno
inc
aaa
scas
lock
pop
mov
xchg
lahf
into
dec
sbb
test
pop
negb
insb
rclb
xor
inc
jbe
mov
std
iret
repnz
pop
dec
push
and
sub
and
popa
jbe
out
es
into
jmp
mov
add
xchg
cmp
repnz
mov
ror
cmp
cwtl
xchg
cmp
inc
fwait
test
pop
cmpsl
sti
hlt
in
aad
lock
test
mov
xchg
leave
cmp
mov
test
pushl
adc
in
dec
sarb
xchg
sti
mov
ds
pop
lcall
orl
fnsave
in
jbe
xchg
push
insl
out
data16
pop
out
sub
ret
mov
pop
into
imul
dec
xlat
push
mov
inc
cmc
int
jnp
fisttps
cmp
cmp
mov
fs
jg
stos
pop
sub
icebp
xor
or
sub
lds
push
mov
and
lret
add
roll
lahf
in
jnp
mov
pop
mov
inc
xor
push
sbb
lods
out
vpmacsdd
inc
loope
js
scas
lods
call
pop
xor
scas
outsb
in
lods
rcrl
inc
dec
in
sbb
out
jmp
inc
scas
mov
test
or
pop
pushf
movsb
rcrb
iret
in
cmp
cmp
cmp
xor
pop
dec
mov
jb
inc
lcall
jle
sbbl
adc
es
or
dec
loopne
adc
or
mov
mov
jmp
imul
push
xchg
movsl
mov
sbb
and
mov
aad
cmp
add
ss
inc
into
js
lock
aad
cmp
push
into
movsb
mov
xor
cs
pop
movhps
into
cs
mov
lds
bswap
inc
nop
dec
call
jg
mov
push
cmp
lods
add
or
adc
je
push
mov
outsl
dec
push
push
je
dec
cmp
mov
es
cwtl
out
adc
mov
fs
push
sub
aas
mov
fwait
xchg
popa
cmp
jb
dec
aam
push
cmp
cmp
push
sbb
jp
in
add
jge
dec
jo
fwait
in
loope
incl
pop
dec
add
push
nop
cmp
aas
mov
mov
cs
adcl
mov
jno
cld
in
xchg
jl
enter
js
repnz
xor
mov
inc
inc
loop
push
adc
int
sti
cli
aas
inc
adc
pushf
pop
inc
test
fistpl
jp
cmp
and
push
jno
jno
pop
push
inc
pushf
test
vmovlps
incl
lahf
outsl
cmp
jp
xor
mov
add
jecxz
mov
popf
bound
cmp
or
push
mov
pop
movsl
mov
fs
pop
les
add
adc
ss
js
shll
icebp
cmpl
sbb
inc
mov
inc
mov
ds
mov
pop
hlt
les
push
test
sbb
add
mov
nop
bound
fisttpl
sub
sub
test
cmp
je
outsb
sbb
and
jae
cmp
aaa
add
mov
rcrb
xchg
lods
pop
jbe
push
push
cmpsb
xchg
jmp
or
lods
mov
or
fistpl
xchg
call
add
fwait
adc
cmp
orl
and
loope
cli
int
dec
das
mov
sbb
pop
lahf
aas
mov
les
mov
mov
pusha
andb
xchg
add
jmp
sbb
mov
add
addps
and
hlt
in
mov
jne
lret
push
repnz
iret
jae
mov
inc
pop
xchg
add
push
sub
inc
pop
jns
adc
pop
push
sub
ss
pop
pop
pop
scas
xlat
and
test
fisubl
or
dec
pop
mov
cs
jbe
pushf
dec
ds
lahf
mov
imul
scas
inc
adc
rcrb
addr16
mov
or
dec
xchg
sbb
int
call
fbld
mov
pop
push
fnstcw
xchg
fcomps
xor
sahf
out
cltd
pop
repnz
daa
push
sub
sbb
lea
cld
inc
xor
jmp
and
loopne
lcall
sarl
popf
mov
popf
pop
sub
shrb
outsb
movsb
test
rcl
jne
xchg
sub
and
push
sub
push
inc
xchg
inc
adc
aam
mov
test
fwait
leave
and
jl
in
xchg
mov
imul
out
ljmp
shrd
pop
mov
pop
and
xor
pop
cmp
push
daa
lock
lea
add
outsb
loope
dec
jmp
push
xor
jg
xor
add
pop
les
repz
xor
mov
shrb
dec
daa
lcall
arpl
outsl
dec
mov
push
push
jg
jl
lods
movsl
mov
jo
aaa
add
ss
xorl
pop
imul
mov
xchg
push
cmpsl
mov
lock
inc
leavew
jp
fwait
pop
popa
mov
cmp
xor
pusha
shll
adc
cli
cmp
push
add
xor
fsubp
mov
lret
mov
adc
je
mov
addr16
sti
sbb
sub
lock
scas
push
sarl
or
or
pop
inc
cltd
jb
mov
mov
xorl
data16
ss
and
xor
in
xchg
test
mov
outsl
aad
stc
lods
xchg
xchg
mov
dec
cld
jo
test
and
push
mov
add
pop
leave
sahf
xchg
inc
push
iret
loop
pop
dec
jae
inc
sub
popa
dec
lods
ret
ficomps
jno
mov
test
je
xor
out
jge
cmp
in
pop
fcoms
pop
and
aad
loop
cld
jb
adc
rol
loop
push
sbb
test
or
fmull
scas
or
jge
xchg
loopne
daa
or
repz
jno,pn
inc
std
sub
mov
in
xor
and
ljmp
mov
jecxz
push
arpl
cmp
movsl
push
test
sti
xor
mov
hlt
add
mov
ror
cld
imul
rcrl
adc
enter
loop
sbbl
pop
dec
call
cltd
xor
fidivl
hlt
adc
popa
mov
shlb
in
mov
pop
jbe
fldenv
mov
adc
cmc
xor
jno
adc
or
add
insl
jae
pop
std
sub
fsubp
and
cmp
in
outsb
mov
fwait
inc
loop
jecxz
add
leave
outsb
addr16
stc
stos
mov
cld
cld
sbb
dec
fwait
rorb
push
sub
mov
leave
in
and
rcll
addr16
lds
rcll
ret
in
push
outsl
stos
push
loopne
or
push
jb
popa
mov
add
repnz
clc
pop
xchg
enter
inc
sub
dec
mov
lcall
and
add
mov
ret
inc
push
sbb
imul
sbb
fmul
mov
xor
cli
sbb
popf
push
adc
fimull
mov
xchg
mov
add
add
jecxz
insb
cli
xchg
popf
daa
push
arpl
scas
mov
adc
mov
or
stc
ret
outsl
adc
sub
insb
cli
les
mov
push
shrb
inc
in
push
jmp
scas
stc
loop
jo
push
stos
xchg
jmp
loopne
push
es
and
loopne
outsl
orl
test
jnp
dec
and
dec
cltd
dec
mov
shll
cmpsl
push
or
movsb
lea
xchg
xchg
or
mov
pop
movsb
dec
xor
in
xor
fisubl
iret
scas
add
inc
mov
or
inc
inc
inc
iret
jmp
mov
inc
fstps
xchg
mov
movsl
inc
push
push
cmp
pop
popa
std
add
jns
adc
mov
xor
mov
mov
jl
ds
xchg
fmull
fwait
jb
imul
test
gs
ds
pusha
pop
xor
dec
loopne
test
test
xchg
pop
pushf
sub
subl
movsl
fistpll
imul
or
inc
xchg
jle
ficoml
imul
xchg
mov
and
mov
fldt
scas
ret
fiadds
les
fadd
cmp
push
in
add
ja
add
pushl
lahf
xor
mov
outsb
in
add
daa
aad
ja
dec
das
out
jb
sub
cwtl
dec
inc
adc
cmp
dec
fisubs
mov
push
stos
inc
or
mov
imul
sarl
cmp
push
cli
xor
mov
push
sbb
enter
cs
dec
or
pop
pop
cmp
or
push
jo
and
lret
xlat
lahf
in
filds
and
fstpl
mov
pop
sub
push
mov
inc
out
mov
int3
popl
rcll
and
testb
xchg
cmp
data16
rcrb
aad
xor
jne,pt
cmpb
int3
inc
pop
or
icebp
test
sub
ljmp
stc
daa
cs
stos
dec
pop
lcall
mov
int3
push
sbb
adc
ret
in
imul
sahf
mov
movsb
and
inc
mov
call
mov
or
xchg
inc
push
push
mov
push
fstpt
xchg
dec
aas
ldmxcsr
and
mov
sub
je
pusha
sub
mov
insb
mov
lret
push
nop
mov
dec
aam
cmp
stos
fidivrs
adc
jmp
adc
mov
les
mov
or
mov
in
pop
pop
les
or
aam
mov
jle
movsb
je
sbb
ljmp
xchg
hlt
out
mov
sub
jle
and
cld
add
in
leave
sbb
loopne
sub
test
loope
cmc
scas
ret
mov
inc
cmp
clc
movsl
mov
pop
jae
inc
lcall
loop
iret
mov
movsb
mov
insl
add
gs
loope
cmp
push
push
mov
cld
scas
cltd
add
aam
loop
repz
cmp
add
pop
gs
mov
pop
cli
inc
and
insl
add
mov
add
mov
and
cmp
cmpl
and
iret
stc
xor
rcrl
fs
xchg
mov
and
in
out
dec
mov
push
or
aam
data16
sbb
inc
jl
pop
jo
xchg
or
and
movsb
dec
sub
mov
pop
push
cld
adcb
mov
test
jg
in
mov
dec
sbb
or
test
out
jno
addb
int
push
sub
jne
sub
lret
sbb
xchg
pop
sbb
jl
mov
and
stos
push
mov
cmp
incb
jp
xor
das
iret
lret
sbb
loopne
aam
clc
dec
xchg
jge
sub
fwait
push
adc
xchg
push
sub
mov
sub
lret
mov
mov
bound
pop
lods
aad
repnz
push
push
dec
test
and
mov
daa
rol
mov
xchg
push
sub
insl
cmpsl
dec
sbb
jo
pop
xchg
les
rcrb
enter
aaa
and
jne
or
inc
or
adc
or
cmpsl
int3
pop
and
jl
andl
mov
in
cmc
fdivs
push
mov
push
out
dec
fcmovb
mov
xchg
sbb
cmp
cmp
call
sbb
xchg
rcr
mov
or
or
std
xor
repnz
push
xchg
cmp
ljmp
push
test
mov
fdivrl
xchg
sub
into
add
std
add
jmp
insl
xchg
add
push
sub
and
push
not
dec
ret
add
pop
mov
xchg
xchg
jge
bswap
inc
aaa
mov
movsb
sbb
xchg
xorl
or
scas
repnz
pusha
mov
push
add
push
mov
jno
mov
sub
mov
mov
shl
mov
dec
xchg
sbb
xchg
sahf
fcoml
cwtl
bnd
xlat
in
jl
int
sub
or
sub
xchg
out
dec
jge
mov
leave
mov
pop
aam
dec
fstpt
ljmp
aaa
enter
dec
out
pop
jmp
jg
shrl
push
lret
mov
mov
add
jns
scas
mov
add
repnz
ljmp
and
jae
es
repnz
aad
push
cmp
je
push
xchg
dec
std
ljmp
sub
mov
loopne
out
push
idivl
lods
sbb
jb
andl
pushf
and
ds
dec
sbb
cmp
push
jo
aam
and
pop
xchg
out
xchg
sbbl
bound
sbb
ss
push
int3
jmp
out
and
cld
pop
fadds
cmc
mov
repnz
in
into
lret
jae
ljmp
push
cmc
push
ss
lret
inc
pop
sbb
jp
outsl
pop
loopne
aad
sbbw
xor
push
mov
aas
xchg
test
leave
jne
and
mov
rolb
jne
xchg
mov
rcrb
adc
cltd
lods
test
xchg
rclb
jecxz
lock
jnp
xchg
pop
inc
jmp
insl
mov
leave
sub
xor
mov
push
xor
push
dec
lahf
xchg
xor
mov
aad
mov
movsb
test
push
jmp
inc
push
aaa
jg
pop
in
or
xor
mov
cwtl
jo
fsub
inc
fsubl
cld
stos
cli
jns
push
test
testb
lret
mov
jmp
js
int
fstpl
adc
call
jno
ret
jle
and
repnz
ret
xor
movsb
mov
adc
out
sub
jmp
bound
jmp
cmpsb
hlt
pop
bound
aad
mov
mov
rolb
push
flds
push
or
leave
shll
cmpsl
mov
and
pusha
mov
sar
in
clc
pop
cmc
pop
pop
cmp
or
add
cmc
jae
test
or
sub
outsb
ljmp
pop
sub
jge
add
aas
sahf
addr16
xor
mov
mov
sbb
icebp
icebp
pop
xor
fwait
xor
pop
sbb
adc
stos
or
testb
xchg
dec
or
test
xchg
sbb
jmp
or
decl
pop
cmp
push
jl
mov
mov
fadds
or
cmc
mov
popa
pop
cwtl
inc
inc
cwtl
mov
aas
cltd
test
inc
adc
dec
adc
fimuls
mov
shll
adc
mov
pop
fs
mov
dec
cmp
lret
aas
push
stc
mov
aaa
insl
cmpb
in
fwait
mov
jne
dec
shll
xchg
or
js
jmp
clc
add
add
add
add
add
add
add
add
push
or
or
adc
add
or
bound
add
add
add
add
add
add
add
add
bound
add
add
add
add
add
add
add
add
bound
add
add
push
add
add
add
add
add
bound
add
add
add
add
add
add
bound
add
add
add
add
add
hlt
bound
add
add
add
add
add
cld
bound
add
add
add
add
add
add
add
add
push
add
add
add
add
add
or
push
add
add
add
add
add
add
add
adc
push
add
add
add
dec
outsl
popa
fs
imul
inc
gs
jb
arpl
fs
jae
push
imul
jb
je
arpl
jb
jne
insb
inc
insb
insb
outsl
arpl
jb
jne
insb
inc
jb
gs
js
je
jb
arpl
jae
gs
insb
outsl
jae
dec
gs
popa
jo
jb
popa
je
inc
popa
jo
jne
gs
imul
popa
je
insb
je
inc
dec
jo
outsb
push
jns
inc
jb
gs
je
imul
insb
inc
js
arpl
gs
push
popa
je
inc
imul
jae
inc
gs
inc
dec
outsb
je
jb
gs
gs
outsl
outsb
outsb
arpl
push
je
je
jae
outsb
add
xor
add
add
add
add
add
mov
add
mov
add
add
add
add
add
add
add
add
idiv
add
add
add
add
or
wrmsr
or
and
or
xor
or
inc
xor
add
or
add
add
pop
xor
add
add
add
or
add
add
test
or
add
add
lea
or
add
add
xchg
xor
add
add
add
add
add
add
add
xor
add
add
add
xor
add
add
add
xor
add
pop
add
add
add
movsb
pop
add
mov
add
movsb
pop
add
mov
add
xor
add
mov
add
dec
movsb
pop
add
mov
add
push
movsb
pop
add
mov
add
bound
add
pop
add
pop
add
pop
add
pop
add
mov
add
dec
inc
push
dec
inc
dec
xor
cs
dec
dec
add
push
inc
push
dec
xor
cs
dec
dec
add
dec
inc
inc
push
xor
cs
dec
dec
add
dec
xor
cs
dec
dec
add
push
inc
push
xor
cs
dec
dec
add
inc
inc
push
push
xor
cs
dec
dec
add
inc
dec
dec
xor
cs
dec
dec
add
dec
push
inc
push
dec
cs
dec
dec
add
inc
push
xor
cs
dec
dec
add
dec
dec
dec
inc
push
cs
dec
dec
add
dec
inc
dec
xor
cs
dec
dec
add
add
fs
imul
add
add
je
jb
arpl
fs
jae
add
add
jb
jne
insb
push
jb
je
arpl
add
jb
jne
insb
inc
insb
insb
outsl
arpl
add
push
imul
jb
add
add
imul
jae
add
push
gs
insb
outsl
jae
dec
gs
add
arpl
inc
jb
popa
je
inc
popa
jo
jne
gs
imul
add
push
popa
je
insb
je
add
dec
inc
dec
jo
outsb
add
add
jae
jb
gs
je
imul
push
js
arpl
gs
add
add
je
inc
imul
jae
add
add
je
inc
add
add
je
jb
gs
gs
outsl
outsb
outsb
arpl
push
je
je
add
add
outsb
add
add
lret
js
fnstenv
fmul
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
add
add
ss
add
mov
cmpl
jne
add
mov
jmp
mov
add
add
cmpl
je
add
mov
add
push
push
push
push
pushl
pushl
mov
mov
mov
add
call
pop
pop
pop
pop
cmp
je
add
jmp
push
push
pushl
call
lea
mov
lea
mov
mov
cmp
je
mov
inc
sub
cmp
ja
mov
cmpb
je
mov
cmp
jne
mov
shr
rol
xchg
jmp
mov
xchg
rol
xchg
sub
add
mov
add
sub
mov
loop
call
lea
mov
cmp
je
mov
sub
je
mov
lea
mov
lea
mov
cmp
je
mov
add
mov
jmp
mov
add
mov
xor
mov
inc
or
je
cmp
ja
add
add
jmp
and
shl
mov
add
or
jne
mov
add
jmp
xor
xchg
mov
cmp
je
lods
or
je
add
add
jmp
xor
shr
lods
or
je
add
add
jmp
lea
mov
lea
mov
cmp
jne
add
push
push
push
push
push
push
call
pop
pop
cmp
jne
add
mov
rep
sub
sub
push
pushl
push
push
call
push
pop
sub
xor
mov
cmp
je
inc
lea
mov
push
push
push
push
push
pushl
pushl
mov
add
push
call
pop
pop
pop
pop
add
loop
mov
cmp
je
popa
popf
mov
ret
popa
popf
jmp
mov
or
je
mov
add
cmpl
jne
cmpl
jne
cmpl
jne
jmp
mov
add
push
push
push
lea
add
add
push
call
pop
pop
pop
cmp
je
mov
add
add
xor
mov
cmp
jne
inc
jmp
mov
add
push
push
push
cmpb
jne
inc
mov
and
mov
movb
push
push
pushl
call
pop
pop
pop
pop
cmp
je
mov
mov
pushl
popl
add
inc
jmp
clc
ret
jmp
push
mov
mov
mov
cld
mov
movsb
call
jae
xor
call
jae
xor
call
jae
mov
call
adc
jae
jne
stos
jmp
call
dec
loop
mov
call
jmp
lods
shr
je
adc
mov
jmp
xchg
dec
shl
lods
mov
call
cmp
jae
cmp
jae
cmp
ja
inc
inc
push
mov
sub
rep
pop
jmp
add
jne
mov
inc
adc
ret
xor
inc
call
adc
call
jb
ret
pop
ret
push
call
ret
mov
adc
push
add
or
inc
cmp
add
or
ret
mov
add
adc
mov
cmpl
adc
or
push
and
rolb
add
call
enter
add
shl
or
dec
mov
jne
pop
sbb
add
mov
xor
fildl
or
sub
in
ljmp
jb
sub
or
add
adc
out
xor
inc
out
clc
dec
jne
pop
mov
bound
jp
mov
ret
pop
addr16
cs
ret
push
movzwl
mov
or
movl
jae
mov
mov
sbb
sarb
cli
sar
add
cmp
sbb
lahf
adc
loope
jno
data16
jb
jmp
inc
sub
sahf
clc
fistl
scas
mov
or
int3
shr
sahf
ret
inc
test
ds
add
in
push
push
jbe
jge
sub
jle
mov
xorb
int3
or
xor
aas
std
add
int3
dec
cld
sbb
pop
ret
add
shl
pop
pop
or
sub
cmp
jbe
mov
xchg
inc
cmp
mov
notl
jle
push
lret
inc
pop
or
call
mov
push
or
inc
cmp
jl
adc
leave
popa
fcomi
xor
inc
xchg
outsb
enter
test
or
jo
xchg
mov
push
pop
mov
sar
sub
les
jne
mov
shr
sbb
loopne
add
jbe
aaa
call
or
cmp
sti
inc
inc
shr
sbb
sbb
jbe
pop
mov
xor
adc
mov
test
push
sbbb
icebp
call
es
sub
push
lea
pop
call
cmp
icebp
xor
push
jne
lret
and
mov
lahf
and
add
push
clc
mov
inc
adc
sub
jl
cmp
or
orb
enter
mov
sbb
leave
cltd
dec
hlt
nop
push
call
movsb
data16
orl
push
in
inc
lock
shl
add
xor
dec
dec
into
cmp
cmp
push
adc
fdivl
push
sbb
mov
xorl
fcompl
rep
adc
retw
jne
inc
add
cli
cld
inc
mov
add
xchg
pop
mov
and
mov
adc
hlt
test
fwait
ret
push
les
mov
jbe
sbb
test
movsl
mov
sub
inc
add
movsl
inc
pushf
mov
add
and
leave
push
adc
jge
push
gs
push
jmp
and
or
cmp
or
movsl
sbb
into
pusha
or
divb
pusha
clc
lcall
push
sbb
push
insb
out
add
mov
fsub
mov
iret
push
sbb
push
repnz
scas
adc
add
test
cmp
sbb
sub
sahf
das
mov
inc
dec
inc
xchg
add
rorl
call
pop
cmp
je
sub
incl
setge
sub
clc
lea
xchg
hlt
shll
add
decl
mov
jmp
mov
inc
xor
xchg
jmp
sub
mov
lock
jne
leave
adc
push
mov
cmp
insl
sbb
fldl
test
fwait
push
aad
cltd
jle
mov
or
jmp
lock
in
rorl
sub
mov
xor
or
call
add
mov
add
sub
jp
dec
push
andl
sub
leave
loop
and
sti
dec
repnz
popa
mov
sub
pop
jge
dec
push
in
sub
pop
dec
pop
add
pop
jo
jmp
add
ret
psubq
ds
add
and
inc
adc
imul
nop
leave
dec
xor
dec
cmpb
cmp
sbb
rcl
inc
test
mov
addb
inc
adc
rolb
jle
cmp
icebp
icebp
iret
rorb
nop
stos
mov
shrb
int3
pop
outsb
sbb
movsb
jne
cmpl
lock
adc
jb
mov
orb
shl
dec
add
les
xchg
sbb
push
cs
sub
jb
xor
mov
mov
negb
rcll
rcrl
dec
jne
cmp
jne
dec
sbb
cmp
add
sub
add
popa
jecxz
iret
push
pushf
dec
sbb
jecxz
lcall
inc
mov
sub
mov
cmp
dec
mul
sbb
inc
outsb
addb
xchg
rolb
add
les
xor
fdivl
adc
jne
adc
add
pop
add
and
in
add
add
outsl
std
jmp
dec
adc
mov
xchg
stc
out
in
adc
lds
cmp
dec
mov
leave
mov
fnstcw
jecxz
and
push
loopne
sbb
jne
loop
clc
mov
jg
push
fidivs
loop
pop
push
mov
fdiv
inc
or
pop
or
ret
jbe
mov
push
lods
mov
loope
sbb
adc
mov
pop
add
sub
mov
sub
mov
inc
mov
pushf
xor
adc
lock
into
fadds
inc
popf
sub
mov
sbb
push
cld
sarl
sahf
add
in
xchg
gs
je
into
out
pop
sbb
cli
fldl2e
or
mov
jecxz
cmp
xchg
push
loop
mov
aam
adc
push
outsb
xchg
loop
mov
lcall
je
pop
fwait
xlat
pop
sub
push
int
dec
jnp
outsl
pop
mov
push
cltd
mov
testb
ds
or
cld
testb
sbbl
lds
loop
lcall
xchg
int
xlat
shl
pop
lock
sub
jle
jl
cmp
cmpsl
popf
rorb
add
lea
in
jecxz
loop
pop
fucomip
pop
inc
xor
aaa
adc
popf
inc
and
jno
jge
sbb
sub
loop
in
subb
jl
int3
in
call
fadds
sbb
jg
mov
rorb
and
data16
jns
mov
mov
push
sbb
sbbb
mov
dec
mov
xchg
add
push
sbb
adc
ss
cmc
aaa
mov
xor
mov
xchg
mov
bound
pop
mov
lds
test
loope
cwtl
in
inc
mov
aad
lods
popa
xor
dec
mov
inc
adc
sahf
sbb
ljmp
dec
imul
dec
xchg
rorl
sahf
fsubr
cmpsl
xchg
inc
test
sub
sarb
insb
add
ljmp
out
and
adc
in
add
iret
or
mov
ret
and
cmpsb
notb
cs
mov
jbe
clc
sbb
jo
and
lods
adc
xor
mov
jl
and
xchg
mov
insl
sbb
xchg
popa
dec
les
mov
xchg
dec
adc
sub
daa
outsb
inc
stos
sti
push
cmp
pop
or
leave
dec
int3
xor
xor
js
jmp
cltd
sbb
fmuls
test
add
aaa
cmp
lahf
pop
push
push
shl
fmuls
dec
sub
pusha
gs
insl
add
xor
add
mov
inc
mov
pop
jp
lret
clc
xor
xchg
mov
mov
out
jne
xchg
jns
cmpsb
frstor
xchg
dec
stos
or
mov
enter
out
push
data16
inc
mov
sbb
push
and
cmp
fidivs
dec
mov
sbb
mov
inc
mov
mov
adc
clc
and
xchg
mov
xor
or
in
jnp
jl
pusha
cltd
xor
mov
cltd
xor
in
lock
imul
mov
es
les
leave
inc
mov
xchg
pop
outsl
adc
mov
sub
outsb
data16
ret
sbb
movsl
cltd
sub
ret
gs
jnp
dec
movsl
mov
xor
decb
mov
stos
testb
cltd
xor
or
cli
gs
push
push
hlt
test
cmp
inc
in
js
jb
jo
sbb
lret
mov
and
int
cmp
aaa
std
lahf
sub
mov
loop
dec
sahf
inc
iret
sub
pop
xchg
xor
repz
pushf
bound
or
xor
repnz
xor
cs
out
push
call
loop
out
sub
push
push
daa
test
jp
xchg
jo
xchg
mov
stc
test
pop
in
rcrb
push
leave
add
ds
jo
mov
jge
push
rol
xchg
and
jecxz
aas
popf
mov
inc
lock
lea
inc
and
xchg
xor
adc
rcll
xor
loop
cs
test
mov
ret
pop
popf
xor
mov
push
fs
pop
and
xadd
insb
jno
addl
or
mov
lret
cmp
je
xchg
inc
fdivrl
sub
pop
jmp
push
mov
adc
xchg
hlt
out
repz
mov
xchg
testb
mov
add
icebp
aam
fsts
or
icebp
jg
aaa
mov
add
pop
movntps
std
mov
shlb
inc
push
inc
iret
popf
arpl
ret
and
lods
push
sbb
ret
mov
in
in
scas
cli
fnstcw
scas
jl
cwtl
icebp
imul
push
addr16
jae
test
mov
inc
int
dec
add
mov
xchg
sub
mov
xor
stos
cmp
sbb
jbe
adc
fisttps
int3
into
inc
and
push
dec
pop
add
mov
xchg
negl
pop
out
mul
daa
mov
jle
addb
mov
imull
adc
and
cs
mov
jo
sub
fisttpll
dec
mov
mov
gs
mov
stc
inc
pop
push
out
inc
shrb
addr16
adc
adc
inc
pop
test
mov
jae
mov
pusha
add
gs
mov
vcvtss2si
mov
pop
cmp
push
xlat
mov
ret
sbbl
fdivrs
imul
stos
push
test
loop
adc
xchg
subl
jle
jg
mov
pop
test
sarb
test
push
out
or
lods
push
shr
sbbl
fwait
jle
mov
ss
inc
or
adc
cld
sub
fidivl
sub
pop
mov
cwtl
or
push
aaa
pop
nop
cwtl
addr16
loope
adc
sub
je
and
out
insb
mov
adc
test
cmp
neg
mov
mov
cmp
divl
lock
cltd
inc
pop
or
in
push
adc
dec
push
inc
jmp
xor
imul
mov
mov
pop
mov
inc
cli
mov
call
sub
in
add
xlat
fwait
jnp
mov
fsubl
scas
enter
aad
je
mov
test
xor
mov
outsb
test
jmp
or
or
add
aad
or
shlb
ljmp
pusha
loope
in
xor
push
sti
pop
rcrl
sub
dec
incb
stos
int
xor
mov
pusha
add
int3
movsb
test
addr16
mov
mov
adc
fstpl
in
int3
outsl
icebp
sbb
push
icebp
cmp
loop
pop
scas
sti
sbb
mov
mov
xor
fs
js
movsb
test
lcall
cmp
jae
rclb
in
add
imul
pop
and
xchg
inc
scas
mov
lds
cmovbe
xor
adc
push
cltd
test
mov
repz
xor
sub
xor
sbb
xor
fdivl
sbb
inc
mov
arpl
sub
sbb
adc
daa
xchg
xchg
lcall
cli
cld
push
out
inc
cmp
dec
inc
mov
loop
cmp
das
movl
in
cmp
push
sahf
lret
pop
fldenv
cld
lock
test
sbb
jb
sub
push
das
lcall
sti
pop
jle
jo
dec
adc
stos
movl
xor
inc
dec
dec
cmp
out
push
imulb
mov
mov
mov
inc
fdivrl
pop
es
mov
jb
sub
stos
popf
mov
je
imul
insb
pusha
scas
pop
adc
lods
or
xlat
mov
and
xor
ja,pt
insb
mov
sub
fsubl
mov
mov
ss
imul
dec
jae
adcl
fistps
cmpsl
inc
sub
push
ljmp
add
stos
shl
cmp
push
mov
lods
cmp
push
mov
enter
jmp
lods
pop
repnz
sbb
adc
arpl
cs
ds
mov
xchg
subb
adc
popf
in
lcall
arpl
pop
inc
leave
dec
loope
aaa
cltd
jnp
int
cs
xchg
pop
insl
cmc
in
test
xor
jmp
into
stos
xchg
test
decl
jecxz
mov
jecxz
and
fistpl
cmpsb
jae
cmpsl
in
lds
pop
pmaddwd
push
testb
imul
adc
loop
sub
inc
add
shlb
sub
aam
jg
lret
adc
inc
sub
jo
mov
imul
xor
jno
pop
cli
jno
scas
std
adc
mov
xor
push
mov
icebp
xchg
shr
pop
loop
jne
mov
lret
test
mov
dec
gs
pop
lret
mov
movsl
test
cmp
mov
cmpsl
repz
or
movsb
into
jbe
push
jmp
dec
sbb
imul
mov
push
in
push
dec
fisubrl
pop
cld
dec
inc
xor
xlat
cwtl
cmp
dec
shl
inc
dec
or
and
jno
mov
lock
xchg
mov
shrb
jno
aam
pop
stos
rclb
or
mov
lock
and
in
enter
gs
test
outsl
adc
fsubs
adc
outsl
fbld
mov
lret
repnz
test
cli
push
test
jp
pop
daa
aaa
inc
push
lds
dec
dec
mov
test
push
xor
cs
stc
pop
lret
out
jecxz
jo
cwtl
mov
pusha
dec
adcb
aam
outsl
std
popa
fnstcw
mov
or
repnz
mov
cwtl
int
nop
push
xor
lods
aas
adc
jno
jmp
adcl
mov
xor
cmpsl
or
add
imul
test
movsl
cmp
sub
jbe
sub
add
cmc
into
dec
lds
sbb
mov
adc
xchg
xor
pop
mov
and
aam
mov
mov
sub
daa
mov
cmp
mov
adc
xor
leave
sbb
mov
lahf
adc
repnz
xor
out
aas
xor
pop
xchg
in
loope
push
cmp
imul
sub
and
dec
flds
or
dec
scas
push
sbb
jns
js
gs
cmpsb
in
adc
xchg
test
xchg
movsb
push
nop
int3
mov
pop
mov
push
xorb
cmp
adc
shlb
cld
sbb
neg
push
xchg
lds
mov
fildl
bnd
arpl
cwtl
sub
xchg
and
dec
xor
sbb
fwait
in
outsb
test
pop
mov
rcrl
add
shll
repz
cli
pop
sbb
cltd
les
notl
sahf
cltd
lret
cli
push
icebp
sarl
lret
mov
les
jae
divl
pushf
aaa
jo
stc
enter
push
add
xor
add
dec
jbe
addr16
ret
add
pop
pop
or
inc
popf
repnz
outsl
xlat
xchg
push
adc
popf
imul
loope
sub
mov
fisubl
test
xor
lret
movsl
xorb
cmovnp
inc
test
arpl
dec
or
jp
testl
nop
fldl
pop
es
xor
lods
mov
push
jmp
imul
test
mov
fldt
arpl
push
out
mov
int
cmpsb
ds
stc
das
stc
xchg
jmp
dec
fld1
xchg
pushl
data16
add
fwait
xor
add
jne
les
sub
iret
cmp
lret
repnz
cmp
pushf
jge
stc
fldenv
mov
std
sbb
xchg
enter
xor
fistl
test
adc
mov
push
shr
push
jmp
pop
arpl
cld
or
pop
inc
push
sub
adc
mov
adc
popa
fcomps
movsb
and
cmpsb
mov
sub
pop
ss
loop
xchg
adc
inc
clc
pop
lea
mov
fldl
jecxz
jge
or
mov
cli
mov
outsb
sub
xchg
adc
ss
fadds
stc
aaa
imul
hlt
data16
addr16
call
mov
outsl
jecxz
leave
pop
or
mov
or
shr
xor
cltd
outsb
imul
pop
iret
add
mov
pusha
xchg
mov
jb
cmpsl
mov
and
and
dec
das
shlb
repz
pushf
cmp
sbb
add
test
jl
icebp
cs
cs
adc
sbb
lcall
mov
inc
mov
dec
out
dec
push
je
lods
insb
cwtl
mov
popf
jmp
xlat
in
das
std
sbb
jb
cmp
fisubs
inc
loop
mov
mov
mov
fwait
and
shll
sahf
loopne
aad
or
xchg
pushf
mov
lods
mov
mov
adc
push
subl
sub
insl
fiadds
cmp
mov
fnstcw
ljmp
jp
jno
dec
fwait
xchg
clc
xorl
popf
lret
sub
mov
fidivrs
mov
cmp
push
mov
enter
int3
inc
inc
or
imul
xor
into
mov
testb
add
add
pop
inc
jbe
pop
repz
adc
adc
mov
roll
push
mov
call
or
jmp
xchg
outsb
out
sub
mov
das
mov
pushf
push
cmp
sub
pusha
add
xchg
mov
in
in
lods
mov
mov
dec
cmc
sbb
jmp
mov
mov
pusha
scas
inc
push
mov
push
int3
mov
jbe
or
les
scas
cmp
loopne
sbbb
in
adcb
repz
movsl
or
push
mov
in
cwtl
outsb
jbe
cmp
and
push
popa
mov
cltd
xlat
mov
iret
cld
popf
pop
cmp
sbb
aaa
xchg
mov
mov
movsb
cmp
inc
add
jno
in
inc
pop
jp
insl
cld
add
shrb
and
inc
lret
or
jmp
pop
jge
outsl
xlat
jmp
sub
fcompl
cmpsb
sbbl
test
sarl
mov
mov
shlb
add
pop
aam
insl
pop
lret
mov
inc
outsl
popf
mov
push
popa
and
cld
xchg
rcrl
out
add
push
popa
addr16
aas
adc
mov
rcll
inc
push
adc
cmp
add
adc
insb
xchg
jecxz
mov
mov
mov
dec
cmc
add
and
mov
jg
jle
cli
aaa
mov
fwait
sbb
stos
xor
idivb
pop
mov
add
into
mov
adc
push
jg
dec
sbb
iret
add
sbb
pop
jecxz
fcoml
bound
ds
push
or
mov
repnz
repnz
cmp
push
fimull
test
jb
mov
mov
aaa
cmc
sub
stc
xor
inc
xor
fwait
daa
js
imul
push
adc
jge
jo
ja
fildl
mov
xchg
ret
aaa
addl
cli
xchg
mov
or
mov
sti
in
jle
dec
inc
rorl
stc
push
pop
push
mov
jb
jo
push
push
daa
test
bound
jl
push
xchg
out
jl
mov
sbb
int
mov
es
jae
add
in
popa
outsb
xchg
push
hlt
jmp
add
jle
imul
icebp
int3
mov
and
lea
scas
daa
lret
xchg
outsb
movsb
std
or
mov
mov
push
sub
inc
xchg
cmp
movsb
sub
sub
pop
daa
inc
adc
sbb
out
sti
push
add
idivb
imulb
sbb
ss
fnstcw
dec
mov
dec
enter
cmp
add
or
inc
in
jne
clc
icebp
sbb
add
xchg
push
xor
dec
lods
sub
add
xchg
js
in
dec
dec
cmp
lods
das
cmp
push
mov
movsl
arpl
test
pop
add
mov
mov
lret
fwait
js
xchg
sub
pop
and
sbb
cld
push
not
pushf
ja
loopne
sti
fcomps
inc
stos
mov
and
or
xchg
insl
lcall
add
mov
outsb
aam
or
mov
mov
or
lods
pop
mov
fisubrl
fstpt
or
ja
sahf
sub
sub
push
pop
sbbb
sarl
cltd
arpl
repnz
jp
sub
xchg
dec
movsl
dec
mov
inc
stos
xchg
js
jno
sub
mov
xchg
inc
push
aas
push
mov
and
cmp
xlat
out
stc
mov
sahf
xor
jns
push
aaa
lock
inc
fidivl
rcrl
in
and
aad
xor
dec
mov
int3
mov
lret
sbb
imul
roll
fwait
ljmp
or
cmc
ffree
std
mov
das
push
xor
mov
out
inc
adc
adc
hlt
in
arpl
inc
jmp
pop
ret
pop
lea
push
pop
test
mov
jbe
out
mov
push
leave
mov
fnsetpm(287
cwtl
xor
pop
aam
xor
into
sub
push
mov
lods
les
pusha
sahf
inc
mov
mov
fidivrs
push
adc
dec
lock
jnp
rcrl
mov
mov
xor
inc
mov
sbb
sub
mov
aam
xchg
sti
out
imul
sub
dec
imul
jb
mov
lods
push
add
mov
out
fsubs
sub
pop
xchg
fadd
pop
pop
pushf
insb
hlt
lds
hlt
out
or
mov
call
sbb
int
call
insl
cmp
add
push
ds
int3
mov
lcall
lret
addr16
add
fisubrl
bswap
test
call
iret
test
popf
icebp
mov
loopne
pop
sbb
push
cmp
enter
xor
stos
dec
mov
sbb
sub
testl
mov
pusha
repz
jecxz
out
enter
pop
insb
inc
call
icebp
test
jecxz
pusha
mov
inc
movsl
imul
fucom
pop
loop
dec
jnp
push
push
fadd
sbb
fcomp
and
push
mov
adc
jbe
sbb
sbb
pop
mov
test
insl
sub
and
aas
lock
hlt
cltd
cmc
push
push
mov
int
cmp
les
cmp
or
sub
loope
adc
loop
loop
repnz
lret
cmp
in
mov
push
jge
push
pop
sahf
push
gs
mov
cli
movsb
jge
imul
arpl
cltd
cmc
xor
pxor
lret
nop
xchg
pop
xorb
inc
pop
mov
loope
rorl
cmp
test
or
movsb
cmp
xor
jmp
lods
jb
shr
pop
xor
stc
push
sti
sub
inc
and
out
fbstp
lods
push
jle
cmp
int
cmpsl
cmp
scas
cmpsb
call
inc
sbb
cld
sbb
dec
test
xor
add
dec
push
or
add
lret
add
push
pop
add
out
fisubl
and
mov
aam
jmp
pop
ret
mov
movsl
add
fwait
mov
xor
xor
lcall
sub
arpl
pushf
mov
sbb
lods
ljmp
push
pushl
roll
pop
inc
cmp
shlb
xor
pop
fimuls
in
sti
movb
xchg
loop
fstl
andb
stos
out
shlb
mov
icebp
test
pop
add
dec
cmp
pop
inc
lods
mov
imul
mov
sahf
jl
mov
dec
pop
dec
fwait
test
xchg
or
jnp
xlat
mov
pop
es
mov
scas
sub
mov
pop
sbb
aam
fneni(8087
bound
dec
negl
arpl
add
inc
sbb
js
push
mov
bound
jnp
push
pop
mov
loop
mull
in
data16
int
add
fs
test
sbb
xchg
mov
lea
mov
xchg
sbb
lock
sub
pop
xor
out
imull
cmc
xor
sbb
mov
lret
add
inc
mov
jp
add
in
repnz
mov
mov
and
push
sbb
fstpt
test
cwtl
or
call
cmp
cmc
inc
sar
mov
xchg
and
iret
jp
ret
xchg
fiaddl
cmp
or
pop
sub
mov
inc
pop
mul
mov
mov
xchg
fcom
pop
pop
mov
dec
je
push
insl
adc
je
jmp
adc
push
and
addb
addb
pushf
iret
pop
mov
mov
sbb
jle
inc
mov
xchg
jge
jl
notl
and
inc
xchg
test
adc
push
imul
push
daa
adc
daa
testl
inc
sti
mov
lahf
jg
inc
inc
sub
ja
sbb
cwtl
pop
stos
mov
dec
jecxz
sbb
repnz
push
orl
xor
js
xchg
push
cli
inc
iret
cmp
jle
stos
push
jne
outsl
add
pop
fmuls
jge
test
test
cmp
rcll
les
cld
ljmp
sbb
jae
dec
add
std
sbb
rcl
arpl
lret
pop
pushf
mov
movsl
cmpsb
outsb
sub
push
sti
dec
mov
mov
adc
mov
push
xlat
andb
sbb
jl
push
daa
pusha
jno
clc
sbb
test
xchg
and
enter
outsb
ret
mov
cwtl
icebp
lret
dec
daa
outsl
out
cmpsl
push
sti
add
xor
cmp
in
jb
inc
repz
xchg
dec
mov
ficoms
mov
adc
andl
adc
mov
orb
inc
dec
jo
xor
adc
fidivrl
jae
jge
or
dec
inc
inc
icebp
xlat
lea
test
mov
cmp
jno
scas
xor
mull
cmpsl
aaa
jp
dec
adc
fwait
push
bnd
sar
dec
mov
jmp
mov
mov
or
div
test
xlat
pop
cwtl
push
xor
arpl
popa
jae
jge
mov
sbb
divb
mov
incl
jne
cmp
into
inc
or
std
lcall
fmull
pop
mov
dec
lock
repnz
arpl
sbb
sub
lcall
sub
jns
jg
add
cmc
mov
mov
stos
loope
sbb
sarb
enter
aaa
aas
je
mov
cwtl
lcall
inc
mov
pop
addr16
pusha
adc
insb
in
push
xchg
das
in
lds
out
and
in
jnp
mov
in
push
dec
cmp
iret
cmpsb
lods
iret
shll
into
loope
mov
mov
popl
fldt
ret
popa
popf
call
outsl
faddp
pop
mov
insb
repnz
fcmovnu
add
mov
loopne
cmp
cmp
mov
mov
adcb
or
xor
leave
in
and
cmp
cs
inc
sub
popf
mov
mov
adc
daa
sub
xchg
or
test
les
call
mov
dec
loop
mov
int3
fwait
xchg
scas
std
ret
jne
push
pop
jge
es
pop
sub
jnp
and
clc
test
or
jne
xor
xlat
sbb
mov
or
notl
aas
insl
sarb
push
inc
pop
fcomp
cmpsb
or
dec
fsub
imul
aas
aas
nop
out
rol
fldcw
arpl
lods
lea
adc
cmp
cmp
xlat
jle
cmp
mov
sbb
fcmove
test
mov
sub
std
pop
imul
aas
and
lea
jle
in
sub
jl
fcmovb
adc
adc
dec
dec
pop
cmp
dec
es
adc
adc
mov
mov
xchg
cltd
loopne
inc
pop
mov
aad
xchg
xor
sub
lret
xchg
mov
test
jge
or
mov
push
mov
xchg
stc
jne
jp
fcompl
jno
repz
sub
mov
or
sub
mov
fstpt
jmp
je
add
inc
push
shlb
mov
out
mov
stos
and
adc
dec
into
xchg
cwtl
mov
repz
sbb
sahf
mov
repz
mov
repz
mov
inc
cmp
pushf
xchg
sbb
xchg
ficoms
jp
out
outsl
sbbl
les
lods
mov
push
or
cmp
mov
mov
dec
and
mov
sbb
cmp
mull
sbb
add
or
sub
repz
dec
lods
adc
cmpsl
xlat
or
fisubrl
adc
ret
adc
jnp
ljmp
xor
rolb
xor
ds
push
and
movsb
inc
rcrl
sahf
pop
test
jne
les
dec
stc
lcall
jl
and
mov
adc
mov
push
movsl
cmpsl
dec
pop
lods
pop
in
cmp
and
addr16
sbb
jne
orb
push
pop
fcmovnu
loop
sbb
adcb
lret
jecxz
inc
ljmp
sbb
imul
shl
sahf
testb
xchg
xorb
jb
testb
add
decl
pop
lea
negb
mov
jle
pop
sub
xchg
xor
scas
xchg
popa
add
cmp
cmp
jmp
xor
fldl
les
fsts
pshufw
test
or
adc
out
loope
aad
cmp
orl
mov
int
jbe
pop
xchg
int3
fmull
arpl
lea
orl
jne
xchg
and
loope
call
faddl
xchg
fsubs
cmp
and
add
lea
insb
or
aad
or
mov
in
mov
subl
loopne
cmpsl
fcompl
lock
mov
je
mov
inc
sub
inc
cwtl
leave
cltd
lret
mov
hlt
adc
call
sbb
popa
cld
ja
mov
adc
gs
repz
push
int
xchg
and
daa
cwtl
adc
xacquire
or
shll
sti
cmpsl
stos
or
jo
xchg
adc
aas
xor
pop
stc
jmp
test
insl
sbb
incb
test
call
cmp
adc
int
rcrl
or
stc
pushf
inc
add
mov
pop
or
cmpsl
ficoml
lock
jg
xchg
out
mov
xchg
jge
mov
pop
in
icebp
jo
jg
and
jnp
jge
mov
fcmovbe
shl
mov
mov
xchg
mov
mov
and
ja
lods
cmc
dec
iret
and
xchg
sbb
daa
loope
or
clc
insl
dec
shlb
stc
mov
sub
stc
aad
xchg
jnp
add
xor
call
jmp
jmp
clc
mov
call
add
or
lret
pop
inc
jno
inc
dec
push
jnp
xchg
xor
or
jmp
les
sbb
inc
or
int
xchg
icebp
adc
enter
push
clc
int3
scas
ljmp
test
ret
pop
adc
adc
add
xchg
pop
xchg
xchg
bound
test
mov
push
xor
cmp
adc
mov
ss
push
or
insl
das
and
jnp
orl
add
or
pop
or
cmc
faddl
inc
sti
xchg
pusha
test
or
test
dec
test
ja
call
fs
adc
mov
cli
xchg
mov
add
or
dec
sbb
adc
dec
or
xchg
popa
mov
push
and
fldln2
lahf
cld
je
data16
mov
mov
jg
outsl
out
arpl
mov
shrl
push
xor
jae
dec
or
ja
movsb
or
mov
inc
test
arpl
subb
out
lret
push
dec
add
cmp
rorl
aam
jl
repz
in
jae
out
insb
rorb
wrmsr
cs
jecxz
fwait
test
test
adc
insl
leave
popa
lea
pop
fildll
ret
xchg
setl
sahf
mov
jmp
jmp
lea
lahf
and
push
or
push
sahf
pop
adc
ds
jne
scas
gs
std
out
pop
pusha
lods
aaa
stos
loopne
sub
and
test
mov
shrb
flds
fstpt
push
divl
movsl
invlpg
enter
stc
ljmp
scas
mov
mov
icebp
cmpl
cmp
inc
sbb
pop
jb
mov
mov
jmp
call
jmp
and
out
sub
test
adc
inc
adc
push
out
loope
test
int
push
pop
mov
clc
push
movsb
jo
aaa
mov
add
in
ret
add
nop
add
mov
push
ds
shll
arpl
lds
push
add
mov
fistpl
xor
mov
sub
cmp
pusha
out
mov
out
fsubrp
fsubr
xor
cmp
lcall
repz
andl
mov
in
incb
adc
adc
push
lods
xlat
dec
push
movsb
stc
xchg
or
sbb
pushf
xchg
inc
out
jo
xlat
and
cmp
mov
mov
inc
add
aam
dec
lcall
sub
sub
push
insl
mov
sti
mov
data16
pop
push
cli
ret
test
jmp
js
xor
mov
std
popf
ss
pushf
mov
pop
push
rcr
push
les
xor
or
push
xchg
ret
icebp
add
ret
stc
pop
lods
jmp
stos
outsl
movsb
jecxz
push
xor
sub
and
ret
inc
pop
jcxz
cmp
mov
or
sub
call
out
in
sti
jmp
adc
fs
scas
pop
into
shll
bound
jmp
stos
call
jne
mov
add
lret
push
mov
push
dec
jecxz
cs
pop
push
xchg
pop
xor
lahf
cwtl
mov
and
add
in
lods
loopne
mov
adc
pop
data16
mov
fdivrs
ret
scas
push
mov
pop
push
mov
push
dec
pop
in
aaa
push
mov
sub
xchg
out
das
stos
push
pop
xor
xchg
aaa
mov
dec
mov
test
lock
movsb
add
hlt
mov
adc
in
or
push
jg
ljmp
test
stos
jae
or
sbb
push
and
repnz
ret
pop
push
lcall
mov
fistpll
pop
push
clc
in
fnsave
aad
fwait
jns
sub
and
loope
icebp
frstor
adcl
inc
sbb
int
aas
mov
es
xor
in
test
mov
sub
outsl
sbb
movb
lock
mov
xor
int
pop
cli
push
push
mov
xorb
outsw
mov
pop
sahf
adc
inc
mov
xor
adc
xor
inc
leave
adc
or
xor
sub
hlt
test
in
out
jp
sbb
bound
cmpsb
push
mov
adc
out
mov
fadds
xor
add
cmp
orl
sub
out
stos
aas
add
jno
and
aas
pop
xor
xchg
das
adc
jne
popa
or
movsl
in
push
mov
xor
scas
inc
push
and
adcb
in
mov
pop
mov
addl
mov
out
stos
jg
addr16
icebp
popf
pop
dec
adc
out
adc
in
fwait
sub
mov
xor
dec
popf
fimuls
inc
pop
test
test
rcll
stos
rcr
mov
aad
inc
filds
xlat
cli
push
int
not
add
adc
shr
mov
cmp
xlat
rol
cwtl
decb
add
sti
sbb
push
pop
fld
pusha
or
daa
inc
pop
stos
cmc
push
rcrb
sub
stos
ljmp
mov
incb
xor
fisttps
sbb
gs
adcl
jecxz
adc
cmpsb
imul
inc
jne
btr
gs
cmpsl
in
mov
xchg
fdivl
inc
fwait
mov
mov
int3
ret
call
ja
enter
scas
mov
push
pop
shrl
ret
xor
sbb
loope
les
int3
push
cld
and
or
ja
jecxz
call
icebp
and
mov
sub
jae
lahf
test
mov
jl
aad
xchg
cmp
rorb
roll
test
pop
pushf
rcr
mov
hlt
gs
sub
mov
nop
mov
mov
and
lret
mov
inc
lcall
ja
popf
dec
push
sub
jecxz
lods
or
add
cmc
stc
mov
das
sbb
sbb
movsb
and
dec
adcb
sarb
or
decl
jno
pop
das
call
add
lods
inc
sub
inc
sbb
insb
fwait
jl
arpl
fisubrs
mov
popf
jno
dec
and
jb
movsb
sub
inc
xchg
mov
call
mov
scas
dec
cmp
and
enter
mov
int3
push
pop
pop
outsb
xchg
mov
pusha
or
dec
data16
mov
push
lods
fisttpll
call
jns
push
arpl
notl
lret
xchg
mov
xlat
add
ja
ss
mov
pop
mov
fidivl
ss
mov
add
mul
mov
sbb
add
ficompl
bound
adc
sbb
cmp
fsubs
sub
es
loopne
mov
imul
rorl
std
push
cld
addr16
and
xor
mov
fs
push
repnz
ljmp
shl
jo
mov
xor
pop
dec
xor
xchg
scas
mov
cmp
jbe
test
adc
daa
clc
pop
outsl
xor
lret
in
dec
add
or
imul
and
adc
jl
add
jg
popf
mov
mov
mov
push
inc
xchg
data16
push
pop
mov
jle
add
nop
mov
mov
pop
add
pop
stc
adc
inc
cmpsl
lcall
fbld
push
sahf
fdivl
rorl
and
mov
mov
xchg
aad
popa
inc
jl
sbb
clc
nop
push
cmpsl
cld
mov
lods
notb
pop
push
mov
sbb
in
lds
jge
xchg
and
jge
push
and
xor
inc
pop
dec
test
ret
stos
push
test
orps
sub
int3
subb
mov
gs
hlt
adc
add
and
lret
mov
pop
or
inc
addl
adc
mov
repz
dec
sbb
mov
mov
and
or
std
out
fdivr
mov
mov
and
popf
in
push
mov
dec
call
jbe
cmp
aaa
and
cmp
lret
xchg
sbb
jnp
sbb
and
jge
aad
mov
jae
push
roll
rcrb
out
pusha
movb
scas
and
rcrb
adc
push
addr16
icebp
pop
cmp
je
in
push
jle
dec
or
jae
lea
andb
xchg
rolb
pop
loope
rcrl
gs
jns
add
enter
mov
add
cs
gs
cltd
sbb
adc
scas
mov
faddl
aam
js
mov
mov
jnp
ret
mov
fsubrp
testl
addb
or
ljmp
jbe
pop
mov
adcb
adc
movsl
xlat
mov
xchg
sti
xchg
mov
iret
or
mov
xor
subb
or
push
inc
xchg
dec
and
xor
cwtl
add
push
pushl
lcall
loop
adc
and
sbb
fiadds
xor
or
stc
pop
pop
repnz
icebp
cmp
push
mov
jae
sbb
outsb
sbb
push
xlat
push
dec
pusha
sbb
repz
xlat
xlat
fildl
xlat
cld
stos
and
push
sub
lahf
pop
inc
movsl
shll
mov
mov
inc
pop
cmpsb
imul
sbb
xchg
insl
pop
add
jp
sub
cmc
sti
mov
insl
hlt
add
push
shlb
out
int3
push
jnp
mov
and
push
cld
xor
int3
pop
push
lods
icebp
cmp
mov
mov
cmc
je
add
shrl
gs
inc
mov
adc
or
mov
int
jb
ret
test
jmp
add
out
out
sbbb
ss
mov
push
mov
scas
sub
in
sub
mov
push
outsl
mov
inc
pushf
sub
fstl
cmp
jle
mov
xchg
mov
push
js
mov
mov
stos
aas
sbb
mov
sub
or
outsl
sti
mov
mov
aaa
out
mov
fwait
or
data16
scas
popf
pop
mov
jne
pop
and
stos
pop
dec
outsb
mov
mov
inc
movsl
mov
sbb
pop
sub
dec
daa
mov
push
lds
pusha
mov
push
hlt
pop
mov
test
adc
test
in
aas
push
shrb
hlt
psubsb
sahf
hlt
pop
cmp
jg
mov
inc
in
es
aam
out
daa
in
jmp
gs
jae
inc
test
outsl
dec
and
xchg
inc
outsl
mov
cmp
sub
jp
stos
mov
sbb
and
in
or
inc
aam
cld
jg
sbb
addr16
xor
test
cli
lds
repz
jecxz
stos
mov
mov
ficompl
sbb
xor
imulb
test
clc
lret
xor
bound
sub
pop
inc
shlb
lea
adc
inc
jnp
pop
and
outsb
in
mov
dec
andl
or
adc
les
mov
adc
cmpl
shrb
imull
cmp
ffreep
cli
sub
sbb
sub
mov
inc
and
das
inc
and
add
out
cmp
lret
jp
cmp
cmc
pop
jge
insb
pop
add
xor
jge
insb
shlb
enter
aaa
cmp
stos
leave
ljmp
loop
adc
push
orl
jbe
gs
hlt
add
rorl
jle
xchg
dec
out
pop
cmpb
push
testb
inc
push
call
push
mov
jecxz
imul
adc
adc
stos
stc
mov
jne
xlat
xlat
inc
add
cmp
xlat
mov
mov
xor
movsl
and
xlat
inc
cmpsb
mov
movsl
add
xor
inc
fchs
lock
ljmp
mov
es
mov
fldt
repnz
fimull
inc
insl
mov
leave
mov
aam
lds
outsl
xchg
in
mov
push
dec
xor
mov
fnstsw
in
lds
outsb
jne
lcall
mov
lret
or
mov
and
xor
data16
xor
aam
in
iret
or
or
push
sub
dec
cmp
or
sbb
add
idivb
add
adc
insb
sahf
cmp
lods
lahf
fidivl
mov
mov
jmp
cs
jo
inc
pop
mov
sub
pop
push
movsl
adc
out
pop
or
cmc
xchg
inc
mov
es
xchg
jae
mov
xchg
bound
adc
ss
cmp
pop
mov
push
in
jge
inc
imul
mov
bound
decb
and
mov
stos
mov
jns
orl
int
leave
push
push
adc
pop
ljmp
imul
sub
fcmovnb
inc
xchg
mov
and
insl
js
rcr
and
mov
sub
fadd
fcmovne
aam
xor
imul
sbb
mov
or
cwtl
add
and
jge
bound
test
sti
fsts
cmp
pop
adc
jnp
dec
adc
mov
dec
push
or
or
xchg
test
shrl
cmpsb
mov
dec
mov
aas
cmc
mov
sub
mov
push
dec
scas
mov
lret
sbb
jp
push
movsb
out
jnp
mov
cwtl
dec
stc
push
jge
and
xor
mov
or
insl
cmp
sbb
call
es
xchg
cmpsl
push
mov
xor
pusha
icebp
or
outsl
dec
js
pop
into
repnz
or
pop
xor
push
in
scas
adc
test
popl
or
xor
sbb
mov
sub
and
pop
in
ret
in
dec
push
and
pop
inc
sbb
loopne
aad
sarb
cmp
push
mov
imul
cwtl
and
mov
mov
mov
lea
xor
cmp
loopne
push
movsl
push
sbb
push
mov
fidivl
loope
or
mov
sbb
mov
adc
adc
inc
jbe
mov
js
fnsave
pop
je
add
lret
inc
repnz
lock
push
clc
and
sub
jmp
jo
mov
pop
mov
jb
rdmsr
xor
out
xchg
lea
pop
rorb
lret
inc
sti
outsb
push
loope
xchg
aas
ljmp
ja
loope
imul
enter
push
in
mov
inc
sub
pop
repz
push
push
loopne
scas
mov
aaa
dec
fcmovb
jge
mov
clc
mov
imul
cltd
pop
sbb
in
jno
dec
stos
xorl
imull
in
xchg
mov
inc
repz
cmpsb
dec
or
xor
outsb
lds
in
out
mov
push
mov
aad
xchg
movsl
enter
sbb
jl
test
aaa
es
and
or
mov
fstl
shl
dec
mov
inc
fstl
ds
sbb
lods
cmp
cmpsb
into
addr16
fidivrl
dec
adc
mov
xor
pop
popf
insb
xchg
fs
int3
aam
mov
out
cmp
jo
mov
dec
jne
outsb
pusha
insl
inc
push
sbb
mov
xor
insl
push
stos
data16
test
lock
enter
adc
movsb
push
pop
mov
mov
int3
jp
lock
pop
xchg
sarb
cmp
cmp
shl
fcmove
xor
test
out
sbb
cmovle
xchg
mov
popa
rcrb
jns
enter
sti
pop
jo
jecxz
cltd
push
adc
clc
push
jae
test
iret
aam
mov
xor
push
sub
jne
sub
hlt
pushf
mov
pop
and
ss
xchg
test
fistl
mov
adc
movsl
int3
or
lea
test
sbb
xchg
xchg
inc
int
push
out
jmp
iret
shl
daa
ja
xchg
or
lods
mov
mov
inc
pop
jns
shr
push
fbld
in
lock
sub
jecxz
push
sub
mov
jge
data16
and
outsl
cmpsl
test
in
dec
inc
in
push
and
or
dec
loop
mov
xor
dec
adc
lock
adc
lods
hlt
dec
push
mov
lahf
stc
pop
cmp
fmuls
iret
iret
push
mov
std
lcall
iret
xor
mov
jmp
fiadds
mov
inc
sbb
sbb
mov
jns
or
mov
and
xchg
xor
lds
sub
movsl
repz
out
push
jbe
sbb
inc
pop
cmpb
add
jle
mov
push
mov
repnz
test
mov
add
pop
xchg
ss
in
mov
and
inc
mov
and
stos
fsubl
scas
aam
push
repnz
daa
push
pop
hlt
lahf
fdivrl
fisubl
sub
and
lea
stc
push
jmp
in
mov
add
xchg
adc
into
dec
xchg
repnz
cld
out
ret
push
sub
mov
icebp
pop
cld
int3
and
adc
gs
loopne
inc
inc
push
cwtl
jl
sub
shll
andl
inc
icebp
inc
mov
fsubs
mov
jp
iret
dec
scas
push
nop
jl
dec
out
mov
mov
stos
xor
adcl
mov
inc
test
xchg
std
fdivrl
leave
pop
cmpsl
cwtl
shll
movsb
sarl
sbb
inc
mov
ja
push
jae
es
push
bound
dec
jl
sbb
das
sbb
xchg
mov
and
sahf
jecxz
push
inc
mov
jmp
dec
xchg
test
xor
and
mov
pop
jg
sbb
and
mov
xchg
orl
test
ja
or
dec
ljmp
sub
sbb
jb
sbb
mov
or
push
xchg
xchg
nop
shrb
jb
pop
rolb
xor
js
cwtl
mov
sbb
pop
push
inc
or
in
mov
in
data16
out
ja
xchg
adc
icebp
xor
bound
das
mov
inc
push
popf
mov
test
inc
je
popf
jg
orl
test
push
scas
sub
nop
push
hlt
cmp
sahf
dec
test
imul
rolb
lock
mov
aas
add
mov
in
add
push
or
daa
outsl
loop
xchg
movsl
xchg
push
lock
jnp
adc
aad
mov
in
push
mov
dec
mov
clc
cmp
or
xchg
jecxz
cmpsl
push
xorb
mov
ds
xchg
push
mov
sub
ja
add
movsl
iret
ret
stc
sub
xor
data16
outsl
pop
imul
xchg
jno
lcall
mov
jg
lods
xchg
aam
scas
or
shll
jne
fcmovb
mov
adc
push
mov
jmp
es
pop
xor
lds
int
jg
in
dec
ror
inc
push
inc
popf
push
adc
dec
cmp
dec
push
ljmp
push
push
fs
outsl
fistps
or
pusha
mov
and
and
jmp
sub
out
lcall
pop
les
aad
inc
out
fsubrs
cmp
enter
xor
sti
bound
popf
pop
pop
sahf
clc
aad
jae
mov
test
mov
out
mov
inc
stos
int3
out
je
movsb
push
add
aaa
and
sarl
and
aad
insb
sbb
mov
punpckldq
lock
xor
adcl
add
out
icebp
sub
jo
test
lea
fbstp
int3
mov
rorb
jne
aad
out
test
loop
cmp
adc
aad
setae
sbb
push
mov
fmull
and
outsb
int3
inc
andb
mov
push
and
out
mov
pop
pop
sub
insb
hlt
push
movsb
inc
push
or
je
bound
inc
or
arpl
dec
lcall
daa
das
or
movsb
fst
das
add
push
fsubs
mov
leave
nop
mov
push
clc
add
rcl
mov
and
popl
xor
jecxz
xchg
xchg
enter
xor
cmpsb
pop
das
popa
int3
shll
adc
les
cli
push
jo
sbb
or
loop
or
xor
leave
cmc
cmp
jmp
imulb
xor
lret
loope
scas
nop
movsl
dec
xchg
mov
loopne
dec
adc
repnz
addr16
addr16
into
ficoms
lea
xor
xchg
adc
sub
and
ljmp
or
out
pop
cmp
xchg
sti
pop
orb
push
in
mov
stc
and
js
mov
mov
dec
mov
sub
push
insb
out
js
pop
js
shll
push
ficoms
push
xor
push
scas
cld
add
sub
cmp
jecxz
scas
cld
loop
fxch
adc
es
jg
lds
sbb
cmc
xor
and
roll
stos
push
mov
popa
dec
loope,pt
pop
aad
hlt
data16
js
dec
pop
add
mov
mov
sbb
cmp
jae
ds
xor
jp
dec
fnsave
cwtl
scas
jns
jae
es
xorl
es
pop
clc
or
nop
pusha
mov
sbb
pushf
jge
stc
enter
idiv
scas
mov
pop
addr16
pop
lret
push
aas
pushl
inc
xchg
insl
push
xor
and
int3
cwtl
and
loope
jecxz
sbb
or
inc
lahf
jae
xlat
sarb
pop
insb
jmp
mov
sahf
ja
xchg
sbb
adc
loop
in
repnz
inc
int3
sbb
pop
out
cmpsl
jmp
add
sub
lret
xchg
mov
adc
imul
sbb
jle
adc
cmpsl
dec
inc
xor
jno
jae
sbb
add
loop
sub
ljmp
jnp
rolb
xchg
xorb
out
push
sahf
and
andl
mov
ljmp
add
ror
jge
push
out
mov
cwtl
xchg
std
sub
mov
xor
jbe
xchg
cltd
orb
sahf
pop
inc
fwait
adc
ficoms
aas
push
and
and
push
mov
call
dec
lret
or
push
sbb
adc
stos
mull
mov
dec
or
add
pop
sub
sbb
jne
dec
cmp
cltd
rcrl
cli
popa
cmp
adc
xchg
orl
scas
cmpsb
mov
lahf
and
and
out
js
les
cs
fbstp
adc
mov
inc
fcmovnu
lea
loope
push
popf
add
push
mov
jno
mov
sub
jmp
cmp
adc
iret
jecxz
xchg
mov
push
sbbb
mov
movsl
in
rcl
jl
daa
es
inc
sti
and
ret
imul
xor
dec
fsubl
sub
insl
dec
mov
inc
or
bound
movsl
or
lahf
jmp
ljmp
mov
cltd
or
in
push
mov
mov
add
out
xchg
fisubs
pop
add
lods
filds
mov
gs
push
mov
outsb
aaa
ret
xor
ljmp
fsubrl
mov
mov
push
leave
shlb
or
mov
inc
cmp
push
pop
popa
shll
ret
and
sub
add
jg
jnp
push
aaa
dec
push
fs
popa
mov
outsb
xor
pop
not
pop
or
mov
mov
and
icebp
mov
lahf
cmp
stos
into
dec
stos
mov
mov
xchg
xchg
stos
sub
xor
add
scas
push
add
cwtl
and
push
pop
shr
mov
cld
std
dec
mov
and
popf
insl
or
sbb
add
pop
ss
push
iret
dec
dec
popf
punpcklwd
pop
aad
push
into
movl
push
inc
sti
scas
jle
ja
repz
lret
lahf
arpl
shr
lret
fists
les
jmp
dec
test
daa
jno
cld
cmp
int3
xchg
sub
ljmp
out
sti
in
mov
inc
cmp
aas
rorb
push
lret
dec
loop
adc
ss
cmp
fstps
dec
and
cmp
push
xchg
mov
or
lock
or
outsb
dec
rorl
pop
push
add
imul
aas
out
push
js
ficompl
arpl
jb
jno
dec
repz
out
mov
ljmp
repz
mov
mov
jp
push
adc
cmp
pushf
push
in
fcomps
pop
shlb
loop
push
lods
mov
xlat
jl
pop
aam
imul
notl
std
out
sahf
lea
pop
mov
out
arpl
mov
sahf
jle
pop
xchg
mov
mov
xchg
pop
dec
call
daa
ss
xchg
nop
cmp
jae
mov
lods
fwait
mov
adc
cld
mov
aas
or
jmp
aad
cmpsl
xor
nopl
pop
mov
jb
shlb
iret
xorb
js
mov
loope
test
pushf
fadd
cmp
push
dec
out
mov
sbb
sbb
push
xchg
mov
cwtl
cmpsb
adc
aam
cld
outsl
jg
sbb
out
mov
jge
xlat
cmc
inc
and
sub
mov
fisubrl
jne
jnp
sbb
jb
ljmp
add
jb
dec
sti
pop
xor
mov
test
jge
and
mov
shlb
rclb
sub
cmp
lahf
adc
mov
jp
mov
clc
dec
fucomp
inc
enter
add
enter
insb
jge
arpl
aad
xor
xor
ss
fsubrl
cli
dec
dec
jnp
out
in
and
das
push
sarb
jno
imull
enter
and
cmp
mov
ret
hlt
pop
mov
in
cmp
push
xorb
leave
mov
jo
mov
mov
arpl
jecxz
sbb
movsb
or
jmp
int3
cltd
mov
xchg
addr16
adc
in
adc
mov
dec
lret
outsl
mov
sub
jmp
dec
dec
fsubrs
jp
mov
add
mov
js
mov
jne
sub
cli
pushf
dec
push
ja
xchg
xchg
xor
movsl
cmp
sbb
mov
pop
mov
test
mov
lds
push
dec
cmpsb
cmp
mov
inc
fadds
mov
dec
sub
mov
and
sub
leave
push
add
dec
mov
add
sub
sti
xor
into
mov
jb
mov
aaa
cli
lcall
jns
out
inc
lods
mov
inc
mov
mov
pop
hlt
sbb
mov
jnp
pop
aas
movsb
mov
sti
ret
sti
sbb
test
inc
movsl
cmp
push
repnz
push
pop
jbe
imul
pop
pop
sub
fs
repz
mov
int
ja
adc
repz
push
add
jmp
dec
pop
xchg
push
push
test
lea
rol
pop
pop
xor
inc
pop
ret
aam
je
rorl
mov
out
iret
bound
dec
jle
or
lcall
mov
or
lcall
mov
clc
sbb
ror
mov
out
dec
jg
and
push
insl
insb
mov
adc
xor
inc
or
jecxz
sbb
mov
mov
jg
push
mov
xor
sarl
add
sbb
mov
pop
scas
cmp
add
jae
sbb
mov
add
or
imul
and
sub
mov
mov
into
adc
xor
add
dec
mov
jno
add
mov
out
popf
sub
adc
or
dec
xchg
outsl
mov
rolb
orl
jmp
rorl
xlat
jmp
daa
js
rcl
push
inc
cmp
push
test
ror
mov
mov
or
xchg
xchg
in
outsb
es
adc
paddw
cld
out
das
dec
clc
out
imul
out
add
cmp
or
cli
add
into
data16
dec
inc
pop
out
mov
loop
lret
pop
sbb
imul
add
mov
clc
inc
mov
xor
fcmovne
imul
pushf
jns
cmpl
and
and
rorb
pop
cmp
push
sub
xor
lcall
arpl
and
or
xor
sarb
pop
jp
mov
ret
loopne
mov
lods
fidivrl
or
jae
adc
pop
mov
sub
popa
insb
call
mov
mov
test
scas
lcall
scas
sub
je
adc
loope
mov
mov
pushf
icebp
adc
ret
int3
imul
mov
jbe
pop
jo
enter
movsl
les
and
adc
movsl
rclb
mov
and
cli
lret
sbb
add
push
test
les
mov
cmc
aas
sbb
sub
fs
dec
in
mov
ss
add
and
out
cli
stos
jp
jl
loope
and
daa
lock
push
mov
jp
test
jmp
mov
lods
xlat
mov
cmp
xorb
xchg
lcall
lret
mull
adc
jecxz
sub
xor
popf
pop
push
dec
andb
or
fldl
mov
mov
out
jp
add
pop
dec
lods
aaa
scas
cmp
mov
bound
xor
int
ljmp
addr16
mov
cmp
and
add
xchg
sub
outsb
lcall
inc
sbb
das
cmpsl
jno
sahf
ljmp
mov
fmuls
push
fstpt
arpl
xchg
out
outsl
mov
jmp
mov
test
add
add
inc
lods
in
jnp
das
out
movsl
dec
add
mov
outsl
fdivr
and
sbb
imul
jne
ja
and
xchg
lret
jl
fdivl
lahf
dec
mov
mov
mov
lret
lock
pop
and
ror
movsl
mov
das
jmp
push
dec
xchg
jns
jno
loop
hlt
sti
xchg
pop
push
jmp
int
add
dec
cmpsb
or
mov
leave
jnp
adc
insl
push
inc
loop
std
xor
cltd
pushf
xlat
jp
mov
iret
cmp
out
leave
cmp
insb
rcr
addr16
jge
enter
fs
out
jecxz
js
push
adc
fadds
out
xchg
cmp
leave
sahf
inc
sbb
cmpsl
xchg
iret
add
testl
lret
jp
lcall
dec
push
inc
rorb
pop
addr16
pop
mov
sub
jno
jge
daa
mov
js
xor
mov
das
insl
dec
sbb
in
cmp
cmpsl
and
dec
ret
pop
out
dec
data16
mov
rcrb
pop
mov
test
push
cmp
inc
sbb
loopne
xchg
std
and
and
sti
mov
pop
mov
sti
jnp
and
mov
shrl
ljmp
addr16
adc
ficompl
push
pop
or
mov
ds
fcoml
and
dec
pop
add
and
push
push
pop
mov
jae
jl
outsb
dec
pop
jb
mov
jp
mov
xchg
es
cli
push
inc
mov
int
mov
add
or
imul
jbe
negl
inc
push
imulb
cmpsl
out
mov
loop
aad
icebp
xor
std
daa
mov
or
or
mov
fstpl
int3
lods
inc
jge
dec
data16
js
mov
sbb
lcall
sub
mov
push
cmp
mov
ret
pop
outsb
ficoms
adc
icebp
aaa
bound
xor
insl
inc
mov
or
outsb
xchg
sub
inc
imul
lods
out
dec
push
imul
jecxz
inc
rclb
fwait
add
sbb
xor
jo
in
repnz
jp
leave
cmpsb
add
test
ss
and
fldcw
mov
pop
sbb
mov
mov
xchg
xor
xchg
imul
lods
les
gs
loop
and
dec
pop
cmp
das
mov
fstpl
xchg
std
sbb
iret
push
cmp
out
xor
sar
andl
bswap
pop
lds
aam
and
cmp
loopne
pop
hlt
jne
stos
insl
cmp
repz
popf
into
clc
addr16
pusha
loope,pt
adcb
ds
jge
xor
mov
push
js
sub
mov
fsub
fsubr
shl
xchg
cmc
or
mov
add
int3
sbb
stc
jge
xor
ret
adc
sub
add
loopne
cs
int3
mov
jp
cmp
loopne
or
xchg
loop
jmp
add
jnp
mov
test
sbb
push
adc
bound
in
cmp
addr16
pusha
adc
push
lds
mov
xor
jg
cmpsl
add
mov
cltd
or
cmp
cs
shlb
add
and
mov
xchg
mov
gs
daa
xchg
push
in
cmpsb
jg
repz
fnstenv
lret
or
xchg
cmp
pop
push
sub
popa
or
xchg
jae
bound
sbb
in
or
push
push
inc
pop
ret
sub
pop
cmp
adc
or
push
pop
lcall
inc
test
ret
out
setb
lret
loop
cmp
stos
lods
bound
shlb
in
add
dec
rcrb
mov
push
xchg
and
lea
pusha
pop
mov
test
inc
sub
mov
cmp
cmp
pop
out
pop
mov
mov
push
std
xor
mov
jmp
xchg
cmpsb
xchg
mov
sbbb
stos
jle
rcrl
jmp
popf
imul
jge
in
xor
ficompl
xor
sahf
xchg
inc
push
mov
add
arpl
push
pop
xchg
sbb
xchg
clc
pop
inc
xor
nop
xor
lock
pushw
fld1
xchg
test
les
decl
xor
mov
je
add
mov
and
lods
aam
add
dec
sub
pop
push
jmp
push
xchg
cmp
mov
popf
sbb
imul
jno
aaa
aad
hlt
add
jg
aaa
popa
ret
out
push
fwait
outsb
push
mov
and
cltd
pop
xchg
xchg
dec
sar
jle
sahf
out
int3
clc
loope
jmp
arpl
and
mov
mov
xchg
fsubs
jp
shr
xchg
fcmove
aas
int3
pop
lret
adc
call
rcll
cmpl
fidivl
inc
cli
mov
imull
sbb
adc
les
cmp
xor
push
fadds
cld
pushf
sahf
xor
int
dec
cmp
push
mov
jnp
mov
ja
jnp
call
mov
lret
xchg
cmp
repz
das
leave
out
loop
movsb
out
sub
mov
jnp
pop
cmp
fsubrl
inc
mov
rcll
and
adc
loope
sbb
mov
mov
add
lods
push
in
cwtl
cmp
repnz
inc
lods
push
pushf
cmp
sub
imul
sbb
dec
mov
jp
lret
mov
xlat
dec
adc
jmp
xor
mov
insb
push
fwait
test
aaa
sub
adc
or
or
scas
mov
loop
inc
inc
notb
rclb
cs
repz
movsb
cmp
sub
adc
pop
push
aad
push
movsb
pop
pop
add
cs
outsl
pop
xor
popa
sub
inc
jecxz
das
and
into
inc
mov
inc
xchg
pop
sbb
push
aas
xchg
inc
mov
imul
imul
dec
sub
scas
jle
adcl
inc
mov
push
and
in
or
testl
iret
test
sub
movsl
and
lcall
and
and
mov
jo
push
push
sbb
dec
imul
xchg
inc
out
call
cld
aas
push
xchg
inc
aas
mov
mov
cmp
sahf
cld
ljmp
bound
xor
jnp
and
rcl
out
movsl
push
dec
les
dec
mov
jp
mov
dec
dec
push
loope
adc
movsl
insl
ds
lahf
and
iret
xchg
daa
sbb
jo
pop
sbb
lret
outsl
ret
push
and
dec
fs
cli
mov
mov
pop
nop
stos
xchg
xchg
mov
xor
jbe
ljmp
test
ja
dec
inc
ja
in
aas
xchg
lahf
ret
add
lods
ds
lret
jae
pop
out
push
and
ret
popa
mov
inc
out
xlat
int3
adc
xchg
insb
fisttps
xor
xlat
outsl
fs
fistl
out
push
pop
addb
fsubs
sub
add
arpl
mov
inc
push
popf
dec
jg
enter
ja
out
sub
aam
stc
pop
out
mov
jmp
cmp
mov
cmpsl
cmpsl
sti
lahf
dec
in
push
js
mov
adc
dec
fsubrs
mov
xorb
xchg
int3
or
test
cmpsl
mov
test
xor
mov
or
mov
mov
jl
outsb
insl
pop
out
ret
lds
out
xor
jae
das
xlat
lds
jg
pushf
mov
inc
jge
dec
jl
add
mov
sbb
call
rcrl
push
sub
call
daa
ss
jb
and
or
push
pusha
mov
mov
arpl
sub
jnp
pop
xchg
or
aam
mov
sbb
adc
cmc
lods
inc
jbe
cs
lods
out
mov
jg
push
xchg
addr16
andl
dec
mov
push
pop
xor
jns
rorl
pop
rcll
movsb
out
negb
jnp
push
jmp
cld
ret
xchg
mov
xchg
dec
lahf
rcll
xchg
dec
and
outsb
sbb
push
cli
nop
into
hlt
mov
imul
push
xchg
sub
bound
lret
adc
test
data16
push
mov
pop
push
es
stos
add
mov
push
popf
and
adc
clc
push
add
int3
sbb
sbb
xchg
pop
jmp
cmp
rcll
loopne
and
push
xchg
inc
ror
add
cld
push
out
jmp
add
and
lea
pop
loopne
fimuls
xor
lret
jle
pop
incl
mov
pop
cmp
xor
loop
fstpl
mov
or
out
mov
jae
dec
mov
daa
xor
mov
pop
test
iret
mov
mov
jb
stos
and
je
sbb
push
mov
xchg
adc
out
jno
lods
out
enter
aaa
pop
push
xchg
and
iret
lds
dec
outsl
std
mov
mov
jp
aas
ret
sbb
in
orl
imul
push
lods
mov
js
ljmp
mov
into
jg
xchg
or
or
mov
sub
or
sbb
jb
pop
cmpl
mov
in
pop
nop
xor
and
pop
jl
cmpsb
dec
push
add
rcrl
cltd
popa
pop
in
sbb
ret
mov
sbb
lret
and
cmp
or
jle
les
sub
mov
push
mov
es
fdivrl
ret
inc
mov
cmpsb
cmp
inc
pop
sub
dec
inc
xchg
xor
mov
imulb
xchg
pushf
mov
pop
xor
iret
enter
movsl
xchg
addr16
aaa
dec
xchg
aaa
gs
dec
fwait
dec
add
shrl
fisttpl
cmp
mov
jns
jbe
repnz
xor
mov
ds
lahf
add
xchg
cmovl
jno
addr16
mov
inc
insl
shrl
in
jno
dec
lcall
aam
repz
push
sub
sbb
sbb
cmp
imul
mov
addl
int
lret
push
faddl
xor
sub
push
mov
xabort
xchg
adc
pop
scas
inc
scas
mov
cli
add
jo
push
mov
aaa
jb
jl
or
out
mov
out
lcall
jne
adc
insl
scas
push
inc
mov
dec
mov
pop
sbb
dec
mov
cmpsb
loopne
mov
mov
gs
and
xor
push
jg
xor
xchg
pop
pop
or
xchg
lock
rorl
xor
aaa
mov
pushf
repz
mov
sbb
push
inc
js
add
std
les
jl
mov
rcrb
aam
mov
sti
stos
jo
mov
dec
push
mov
idiv
fisttps
xchg
sub
mov
into
inc
mov
call
jno
jbe
sub
imul
outsl
lock
add
add
mov
inc
xchg
mov
shlb
push
enter
or
xchg
fmuls
lock
sub
xchg
or
sti
add
loope
movb
out
fisubrs
sub
mov
cmp
mov
fisttpl
sub
push
cmp
jno
pop
jg
pop
bound
jecxz
dec
fwait
mov
xchg
aam
int3
push
inc
cmpsb
dec
scas
xor
test
in
aad
and
outsb
or
jmp
repz
rolb
dec
sbb
jae,pt
rolb
das
or
insb
push
jb
inc
or
sub
movsb
sbb
dec
in
fsubrl
add
les
inc
mov
sub
xor
sub
sarb
int3
xchg
dec
dec
mov
xor
pop
push
push
dec
and
sub
mov
add
dec
pusha
xlat
mov
movsb
add
shl
aad
adc
shr
bnd
jno
inc
push
sbb
and
xor
mov
or
into
out
seto
movsbl
mov
push
jb
pop
push
dec
sbb
lahf
iret
in
adc
lcall
enter
push
jnp
fwait
sbb
aaa
mov
add
mov
mov
mov
push
push
add
adc
xchg
loope
mov
jo
jnp
mov
xor
inc
ljmp
daa
pushf
jl
mov
repnz
sub
or
or
popf
arpl
aad
fisttpll
leave
xchg
push
mov
xchg
fnstcw
stc
push
ss
iret
sbb
filds
push
sti
iret
and
or
mov
cmp
fidivs
jmp
iret
cmp
dec
clc
loope
je
xchg
out
add
cwtl
es
sbb
lock
mov
iret
push
imul
adc
fisttpll
pop
cmp
shrl
aaa
cmc
test
pop
jbe
shr
jecxz
adcb
mov
fsub
out
cmp
mov
fimuls
jb
pop
bnd
js
xchg
push
mov
lods
and
ficoml
mov
mov
jl
fldcw
xchg
pop
xor
aas
pop
mov
mov
stos
call
dec
cmp
jle
sahf
add
pusha
aam
movsb
or
movsb
sub
push
inc
push
mov
sbb
mov
jbe
mov
mov
pop
bound
dec
xchg
mov
ss
fucomp
and
rcrl
shrb
xor
add
lds
int3
sub
shl
inc
shlb
fistps
xchg
dec
mov
aad
mov
outsb
popa
or
dec
jmp
std
inc
sbb
lock
arpl
sbb
adc
adc
loopne
div
pop
mov
pop
mull
rcll
iret
mov
add
inc
out
fistps
dec
mov
mov
cmc
inc
add
pushf
in
subb
fwait
cli
cmp
xchg
out
inc
addr16
pop
cltd
sbb
xor
mov
dec
push
lcall
and
inc
addl
loop
or
sbb
dec
in
and
mov
es
sbb
xchg
fiaddl
cmpsb
inc
je
ds
push
icebp
inc
mov
ss
lea
scas
jp
lea
iret
incb
jo
mov
mov
add
repnz
setno
enter
ljmp
fcoml
call
push
cltd
mov
jnp
xchg
les
dec
inc
and
dec
imul
enter
shrl
in
arpl
into
mov
lods
adc
pop
adc
mov
pop
movsb
push
xor
mov
ja
xor
jg
rorl
lock
jbe
lods
mov
lock
push
jle
xlat
adc
and
sbb
jb
pushf
mov
fcomp
ss
pop
and
fisubrl
rcll
cs
inc
sbb
inc
dec
mov
fucomi
push
pop
sti
shrl
dec
jp
cmp
inc
ret
cwtl
shll
push
pop
mov
je
call
in
mov
jl
pop
mov
xchg
cmpl
mov
lcall
aam
xor
ss
aad
mov
and
mov
loope
push
xor
cwtl
cmp
loopne
inc
sahf
inc
ret
push
out
mov
outsb
ret
nop
in
xor
sub
divb
inc
repnz
sub
dec
add
fists
sbb
shll
cmpl
xchg
shlb
adc
jne
lret
outsl
jl
lahf
and
mov
adc
lcall
mov
les
add
outsb
fcoml
data16
mov
mov
lret
fadd
mov
pop
lret
mov
pusha
push
pop
jmp
sub
data16
in
cmp
xchg
movsb
push
dec
sub
aam
test
or
lods
je
dec
adcl
imull
test
sbb
add
out
rorl
pop
pusha
cmp
outsb
lret
xor
insl
xor
cmp
and
test
inc
inc
test
repnz
mov
test
adc
outsl
repnz
dec
mov
cmp
aaa
mov
pushf
roll
sub
mov
sbb
sti
mov
sbb
fs
cli
or
and
or
push
sub
icebp
test
fistl
mov
cmp
xchg
jno
nop
aas
call
push
push
jle
lock
xlat
jae
adc
int3
sar
call
sbb
lods
jo
faddl
adc
xor
rclb
fldlg2
adc
loope
jnp
inc
out
f2xm1
popa
sub
leave
and
xor
dec
jnp
xchg
out
aaa
ficomps
movsl
mov
cwtl
dec
outsb
mov
scas
rcll
jb
inc
cltd
fstl
ror
xchg
jb
sub
fs
jo
ret
cmc
cmc
pusha
jno
mov
jo
popf
lret
sub
push
pusha
sahf
les
out
mov
dec
jecxz
lea
je
and
lods
push
rcrl
adc
adc
loope
inc
pop
mov
cwtl
or
mov
lcall
cmp
jp
out
mov
inc
pop
sub
xor
mov
sahf
out
mov
cmp
test
jg
xchg
pushf
insb
push
pop
fistpl
and
jae
cmp
mov
lret
test
push
push
mov
in
inc
test
ficoms
sub
aad
stos
push
sbb
xor
fadd
xchg
lods
and
add
stos
add
push
cmpsl
cmpsl
mov
scas
in
cmp
cld
and
iret
fwait
dec
stos
push
movsb
dec
mov
pop
bnd
sbb
loopne
add
fldl
dec
cld
loop
jp
test
nop
jmp
cli
pop
jne
or
mov
xor
pushl
rcrl
stos
xchg
add
ds
addr16
ds
mov
cmp
push
stos
sub
pop
xchg
jnp
mov
mov
xchg
enter
inc
test
idiv
in
movsb
xchg
adc
add
xchg
sahf
iret
int3
mov
sub
ljmp
inc
call
mov
iret
dec
sbb
lods
and
ljmp
cmc
mov
mov
mov
dec
mov
or
pop
cltd
pop
mov
fcompl
pop
cmpsl
add
cmp
bound
fadds
ret
in
and
adc
nop
pop
or
push
cmp
cmpsl
or
jmp
jnp
imul
and
into
adc
cld
lods
xchg
pop
cwtl
cmpsl
repnz
push
cmp
mov
sbb
out
in
cltd
adc
mov
mov
fld
add
xchg
cld
xchg
sbb
sub
fimuls
mov
in
xchg
cli
mov
test
stos
add
xchg
ja
or
inc
scas
mov
sub
lcall
popl
movsb
jl
and
lea
adc
pop
sbb
xchg
push
xor
scas
ja
mov
sti
inc
push
pop
pop
insb
arpl
xor
test
adc
clc
scas
mov
adc
shll
sahf
leave
jns
xchg
daa
cmpsl
subl
mov
jecxz
sbb
sub
inc
movups
jg
jno
pop
jmp
dec
add
test
or
sbb
in
xor
fwait
es
loop,pt
jmp
lret
shrb
inc
out
test
jo
xchg
push
fistpl
popa
js
mov
lock
push
pop
js
cwtl
mov
leave
or
mov
or
mov
dec
mov
jle
or
and
cmpl
jmp
insl
fldenv
cmp
sub
xchg
dec
in
xor
in
cli
test
xor
pop
mov
filds
movsb
push
and
repnz
insl
jle
adc
push
push
fsubrs
add
inc
iret
mov
mov
inc
sub
or
lods
shlb
mov
scas
movsb
fdivr
fwait
xchg
mov
test
xchg
cld
adc
sub
sbb
cmp
out
add
push
sbb
dec
in
adc
cmc
jl
loop
cltd
aaa
das
mov
call
xchg
lock
jp
dec
in
add
jp
or
movsl
add
cld
fwait
cmpsl
push
data16
xchg
popa
mov
cmc
push
dec
cs
mov
inc
jl
in
jns
repnz
ret
aam
and
jns
inc
xchg
sub
bound
test
and
gs
jo
adc
imul
and
enter
sbb
dec
mov
sub
mov
js
pusha
pop
mov
push
lds
lds
in
lahf
lods
inc
inc
sbb
in
cmp
and
arpl
mov
lods
cmpsb
test
xchg
dec
jg
call
lahf
js
lret
ret
stc
sub
mov
aad
sub
dec
jecxz
dec
es
and
pop
inc
shll
mov
js
xchg
lcall
ja
xchg
adc
dec
push
sbb
repnz
mov
enter
dec
mov
shlb
jge
cmp
pop
fsubp
iret
stc
jge
outsl
int3
jne
dec
js
pop
pusha
sbb
adc
dec
repz
and
in
pop
inc
rclb
popf
sub
xor
std
jns
int3
jecxz
sub
xchg
lea
jbe
jge
flds
arpl
movb
sbb
test
pop
xchg
mov
jnp
push
idiv
ret
aad
mov
movsl
dec
popf
adc
negl
push
push
mov
ljmp
test
cltd
sbb
jne
das
mov
xchg
in
mov
xchg
fs
sub
je
cmc
int
push
imul
mov
xchg
sbb
adcb
adc
push
inc
jnp
arpl
adc
add
fwait
rorb
cmpsl
pop
adc
jmp
lods
shl
imul
push
ret
xor
add
ljmp
sub
nop
xchg
sub
sub
mov
push
pop
sub
sub
add
push
pop
stc
sub
jmp
aaa
rcll
testb
cwtl
pop
inc
in
jae
cmp
xor
stos
pushf
jmp
fcompl
cltd
inc
test
scas
addr16
or
fdiv
pop
push
int3
xor
insb
push
pop
mov
jbe
mov
test
idivb
movsl
xchg
add
sub
dec
fimuls
movl
mov
pop
sub
popa
add
xor
pop
pop
notb
cwtl
push
imull
pop
mov
ljmp
xor
or
mov
cmpsb
mov
inc
cltd
loope
push
dec
jge
xor
or
in
and
pop
into
xchg
xchg
mov
roll
sub
xor
sbb
inc
rolb
adc
outsl
mov
loop
mov
xchg
push
inc
mov
hlt
inc
sahf
fdivp
push
mov
xor
jp
mov
jno
stc
mov
stos
in
pop
pop
cmc
cmpb
jle
in
out
mov
dec
js
inc
jge
in
or
outsb
loopne
je
lock
into
data16
out
das
call
imul
movsb
stc
inc
rclb
test
pop
jnp
out
push
xorb
xor
cli
cmp
ret
les
leave
stos
mov
clc
ss
rclb
sub
jmp
int3
mov
push
test
pop
cli
jl
dec
aas
xchg
ret
push
loop
add
imull
mov
mov
repz
cmp
dec
cli
ret
arpl
test
nop
inc
imulb
rcl
ret
add
xor
es
sub
jne
stos
pop
addr16
lods
lds
or
fs
cmpsb
pop
mov
adc
inc
push
cltd
mov
testl
out
jae
div
mov
data16
jle
mov
lock
xlat
fdivs
iret
adc
push
xor
adc
movb
pop
adc
inc
insl
pushf
and
into
add
idiv
xchg
adc
lret
test
fcomi
push
loop
mov
push
jge
mov
fcmovnbe
pop
jl
faddl
movsl
cs
cmp
nop
add
imul
add
lcall
decb
ljmp
je
lahf
sahf
cmc
inc
inc
mov
mov
jmp
adc
jge
cld
jecxz
inc
aaa
movsb
in
sbb
mov
inc
xchg
ss
pusha
mov
addl
mov
push
mov
mov
sub
in
dec
pop
inc
or
fiadds
bound
cmc
mov
push
push
xchg
cmp
dec
rorl
dec
xor
imul
in
sarb
pop
xchg
push
pop
sahf
mov
das
cmovle
popa
jne
mov
push
push
inc
add
jg
mov
loop
cmpsb
nop
andl
dec
sbb
iret
dec
aam
sarb
cwtl
ja
stos
or
cli
lret
adc
imul
cmp
cld
jmp
rorb
jbe
icebp
add
or
jge
and
insb
cmp
aad
fdivl
fisubrs
leave
js
lock
push
lret
das
cmp
xor
lea
movsb
and
and
bound
pop
or
push
dec
stos
shrb
push
scas
sbb
imul
mov
adc
test
inc
xchg
mov
inc
into
sub
out
out
add
das
test
or
lods
loop
pop
and
int3
or
lock
mov
jl
adc
xor
cmpl
and
jae
pop
insl
push
push
arpl
addr16
pop
pop
test
bnd
fnstenv
or
outsb
push
lahf
loop
pushw
stc
insb
das
lcall
out
cmp
loopne
mov
ss
or
lods
pop
inc
int
pop
and
jmp
scas
stos
icebp
mov
pop
jne
sbb
mov
mov
into
xchg
and
rcrl
incl
test
pushf
cmp
test
cmp
ret
mov
mov
pop
repz
adc
xor
or
mov
jbe
lahf
push
lock
fildl
into
pusha
ficompl
and
adc
sub
mov
xor
into
xchg
push
push
push
dec
mov
sub
sbb
fidivs
push
loop
pop
call
lods
lods
stos
jge
xchg
add
add
pop
sub
out
mov
mov
dec
les
clc
icebp
push
xchg
pushf
stos
ss
out
sbb
rcr
and
push
cmpsl
shll
xor
jno
je
adc
dec
test
mov
mov
iret
cmp
sub
adc
pushf
push
pop
aas
sbb
xor
aas
call
mov
adc
sahf
push
sub
jno
sarl
mov
pop
ljmp
pop
jmp
sbb
mov
jne
popa
addr16
sbb
or
outsl
fcoms
stc
fdivs
mov
push
scas
xor
out
lcall
pop
xchg
xor
pop
ficoms
push
jne
movsb
inc
daa
insl
mov
pop
add
and
ret
lret
loopne
or
xchg
roll
aas
aam
ret
bnd
subb
loop
lea
add
icebp
add
push
add
bound
out
push
dec
movsl
sbb
push
cmp
mov
fstl
inc
orl
jge
in
std
cltd
or
outsl
push
mov
sti
lcall
pop
rcll
loope
mov
aas
lock
add
cld
call
fcmovne
in
xor
add
rclb
and
push
cmp
adc
push
sub
jp
mov
jge
loop
fidivs
pop
int
push
fwait
outsl
push
push
std
scas
aas
cwtl
lea
adc
out
cmpl
nop
gs
mov
sbbl
int3
sbb
pop
adc
hlt
mov
xchg
jae
jns
mov
adc
dec
push
test
mov
mov
cmp
sub
cs
lods
das
pop
jae
mov
adc
adc
notb
mov
mov
push
rolb
push
mov
mov
add
aas
mov
push
push
push
movsb
xorl
in
inc
cwtl
jmp
aas
or
inc
out
arpl
loope
mov
addr16
shrb
jmp
adc
mov
jg
insl
in
sbb
sbb
jp
in
pop
rcrl
xor
sbb
jo
inc
mov
xchg
push
lahf
mov
lock
adc
cmp
pop
cwtl
test
in
push
fxam
mov
fsts
pop
aad
dec
pop
lret
or
jbe
xchg
dec
fucom
js
inc
jnp
popf
iret
shlb
cmp
mov
dec
and
lret
in
scas
fbld
test
in
cmp
call
cmp
dec
cmpsb
xorl
mov
xchg
xchg
xor
jb
cmp
repz
js
or
pusha
cmp
and
cli
in
mov
icebp
mov
ljmp
pop
mov
fstpt
inc
inc
mov
rolb
orb
push
dec
movsb
fldenv
test
mov
pop
mov
cmp
jnp
jnp
cwtl
stc
pop
jb
adc
cmp
mov
xchg
xchg
pop
mov
repz
je
gs
rcll
push
and
push
stos
lret
adc
mov
xchg
js
and
rorb
dec
stos
push
xor
mov
stos
mov
daa
push
xchg
sbb
dec
dec
add
fildll
pop
mov
jo
movsl
lea
ja
mov
jmp
cmp
mov
pop
mov
cmpb
scas
scas
xchg
mov
movsb
in
mov
mov
call
outsl
stos
or
and
xchg
sub
jge
cs
push
std
pop
outsb
faddl
mov
dec
xor
inc
adc
cmp
mov
mov
je
xlat
dec
cmp
outsb
outsb
movsl
cmpsl
mov
sarl
and
int3
test
adc
or
hlt
scas
xorl
fbld
rol
push
pop
mov
iret
mov
cmp
mov
loop
sarl
nop
test
xor
pop
ficompl
pop
test
aad
pop
add
pop
jne
shll
into
insl
jge
add
ror
xchg
fstpt
push
loop
daa
jmp
pop
mov
pop
sub
enter
adc
adc
cwtl
movsl
dec
fcompl
call
jmp
ss
pushf
xlat
jns
cld
test
test
mov
gs
mov
add
movsl
dec
enter
pop
adc
mov
je
in
mov
push
dec
add
jp
std
xor
push
jmp
bound
jns
js
mov
test
mov
jg,pn
ds
inc
jp
icebp
or
and
push
leave
insb
or
jno
adc
dec
addr16
sbb
mov
inc
fmuls
xor
cmp
daa
jmp
wbinvd
xchg
fs
mov
pop
test
mov
std
cli
mov
call
inc
dec
pop
rol
push
mov
pop
mov
sbb
push
loopne
adc
data16
mov
inc
pusha
xlat
jecxz
mov
jmp
lret
lods
cmpsb
xor
testl
repnz
icebp
addb
aad
push
jl
scas
mov
and
jb
cld
es
fimuls
out
and
xchg
mov
inc
subb
pop
push
dec
dec
testb
jp
inc
sub
jnp
mov
or
or
lods
mov
shlb
jno
fadds
mov
movsb
scas
fadd
es
je
adc
inc
mov
insb
adc
ret
xchg
cmpsb
mov
push
test
fildll
inc
shll
mov
push
dec
or
cmpsl
jb
inc
push
cmpsb
iret
inc
shl
lds
loopne
ja
adc
mov
mov
outsl
push
sahf
cmp
xor
add
xchg
xor
mov
ret
cli
scas
push
js
cli
xchg
add
or
pop
xor
pushf
ret
fs
pop
dec
cli
mov
cmpsb
push
push
xor
leave
xor
pop
adcb
cmpsb
mov
ds
lcall
in
pop
cmp
insb
pop
test
les
mov
jg
fdivs
cltd
sbb
mov
push
notl
push
jge
mov
pop
loope
cmp
jnp
insl
scas
xorb
xor
aam
mov
sub
dec
in
pop
inc
sub
adc
xor
mov
jo
jmp
movsb
out
std
lds
pop
jecxz
fisubs
or
call
mov
in
movsb
mov
mov
clc
lret
mov
mov
cmc
pop
aam
cmp
hlt
push
insb
mov
popa
xchg
xor
push
aas
pop
add
out
in
mov
pop
sbb
and
xchg
pop
pop
push
inc
adc
inc
cmpsl
je
hlt
inc
lret
aam
jae
dec
loopne
mov
aad
mov
mov
sub
addl
push
loope
inc
inc
sahf
arpl
jne
xchg
add
xchg
adc
lret
getsec
cld
jl
lods
rcll
test
mov
pop
pop
fdivp
stos
loopne
xchg
push
or
fdivrs
mov
or
test
dec
jmp
idivl
enter
out
outsb
fistps
pop
icebp
mov
push
adc
xchg
sti
adc
in
je
fldcw
enter
shlb
pushf
aaa
movsl
push
lcall
repz
fdivl
jbe
daa
cmpsb
subl
orl
dec
mov
and
jg
mov
mov
hlt
push
push
fs
shlb
push
xor
sub
lcall
int
mov
mov
fscale
out
pop
enter
jge
aas
mov
js
jecxz
xor
cmp
cmp
leave
xorl
add
ret
dec
adc
popf
nop
xchg
aas
cmc
aas
icebp
mov
lahf
ljmp
repz
out
mov
sub
es
fstl
mov
push
inc
pushf
mov
pop
pop
dec
scas
push
inc
push
rcrl
pop
pusha
dec
mov
mov
pop
sbb
bound
add
in
sbb
test
dec
insl
push
adc
aaa
mov
mov
mov
push
pop
hlt
fs
icebp
adc
stos
clc
push
test
pop
and
or
test
clc
bound
inc
xchg
sbb
push
leave
and
adc
mov
push
xchg
push
jg
mov
push
fistl
sbb
adc
jnp,pt
or
enter
sub
out
inc
add
or
mov
sbb
test
adcb
add
fnstenv
lods
ds
push
int
mov
xlat
push
imul
jae
or
mov
aaa
mov
jge
loop
faddp
push
mov
push
add
aaa
pushf
sbb
insb
or
rcl
mov
addr16
mov
popf
or
inc
test
push
mov
outsl
push
lar
shlb
mov
stos
push
sti
xor
jmp
je
jp
mov
sbb
inc
add
fidivrl
bnd
int3
movsb
pop
and
movsl
push
fimuls
dec
aam
orl
xchg
push
jge
and
sub
cmc
popf
incl
mov
jo
lret
popa
push
push
gs
fnsetpm(287
aam
mov
mov
jo
out
dec
cwtl
dec
imul
test
push
ljmp
into
sbb
pop
out
ljmp
lods
or
jns
movaps
jcxz
inc
cmpsl
push
inc
adc
jnp
ja
popf
test
movsl
mov
jb
dec
insl
into
xor
rcll
out
sbb
loop
mov
inc
cmp
lret
std
mov
mov
lahf
sbb
sub
paddusw
mov
push
int3
cld
xchg
xchg
jge
push
frstor
cmp
push
aad
xor
jae
ficompl
icebp
inc
push
cmp
push
or
inc
lea
mov
cli
mov
xchg
and
dec
bound
adc
shll
pop
mov
pusha
shl
test
push
js
xchg
faddl
movsb
dec
jle
xor
scas
mov
cmp
xchg
rcll
out
cmp
bound
mov
add
fwait
scas
lret
orb
mov
inc
sub
outsl
mov
aam
repz
inc
movsl
cmp
je
pop
cmp
pop
xor
call
data16
popf
jb
dec
insl
add
add
into
sahf
xchg
call
fnstcw
pop
popa
and
jp
jae
test
es
adc
leave
pop
push
sub
enter
clc
ret
sub
mov
shl
cli
mov
addl
dec
jmp
mov
mov
xor
cld
mov
inc
ret
in
or
outsb
aas
lahf
dec
insl
adc
dec
rcrl
and
out
je
pop
fdivr
scas
mov
js
dec
cmpsb
popa
idivl
mov
adc
stos
movsl
cmp
adc
cwtl
mov
sub
out
mov
ds
enter
mov
inc
iret
pop
dec
int
pop
loope
fdivrl
xor
daa
push
cmp
fildl
xor
inc
outsl
or
or
sub
inc
stos
mov
cwtl
lea
dec
es
or
movsl
std
das
xor
aam
call
push
int3
cld
imul
inc
mov
sbb
nop
in
add
jl
dec
pop
and
push
jbe
dec
cmp
pop
sbb
pusha
nop
adc
xor
mov
ss
in
mov
mov
push
arpl
loop
push
out
lea
sbbl
pop
mov
mov
jo
sbb
es
in
push
sub
cmpsb
and
mov
fsubl
shrb
and
dec
cmp
incb
mov
rorb
notl
sub
repnz
mov
outsb
xchg
push
sarb
test
inc
sub
scas
ljmp
and
ds
and
mov
and
hlt
mov
lock
and
mov
das
cmpsb
jecxz
and
loopne
cltd
sub
pop
ljmp
jle,pn
into
addl
push
in
lret
push
dec
dec
pop
inc
imul
sbb
push
dec
outsb
call
mov
jecxz
adc
pop
inc
mov
mov
dec
or
insl
in
and
adc
cmp
sahf
or
xor
push
add
fidivs
ja
enter
cli
inc
aad
call
jo
aaa
sub
pop
icebp
mov
xor
out
pushf
xchg
push
pop
xor
shll
in
xchg
ds
dec
push
mov
into
aam
push
adc
mov
mov
xchg
pop
and
cmp
cmpsb
jl
cmp
movsb
mov
pop
mov
mov
cmp
orb
mov
lods
movsl
out
out
leave
lcall
mov
mov
mov
outsb
inc
fnstenv
mov
rcll
dec
xorb
lods
jg
cmp
adc
cltd
es
repz
call
sbb
lcall
xor
push
andl
jno
fildll
cmc
lds
mov
je
rorb
sbb
cli
lahf
lods
sahf
icebp
push
sahf
jle
sbb
aas
imul
or
daa
sbb
xor
pop
cwtl
repnz
les
leave
les
mov
xchg
xchg
dec
mov
jge
inc
out
sti
rorl
mov
cmp
sub
cmp
jbe
test
jo
pushf
stc
pop
adc
les
and
popa
push
ja
shrl
int3
movsl
mov
dec
in
and
pusha
ss
mov
sbb
xor
inc
inc
lcall
xchg
xchg
xor
arpl
sbb
mov
shrb
ja
xor
shlb
in
lods
pusha
outsb
aam
cmc
inc
xchg
sbb
push
shrb
std
push
nop
lahf
push
clc
test
or
iret
xchg
add
cmp
les
mov
jl
call
and
add
lcall
nop
gs
cmp
out
sbb
lock
fnstcw
dec
addr16
testb
mov
mov
out
ja
pop
lahf
outsb
sub
int
add
into
ja,pn
add
shl
push
xor
shrl
lret
sti
enter
sub
sbb
inc
out
ja
xlat
daa
test
push
push
addr16
aad
mov
xor
or
mov
pop
jmp
dec
inc
cmp
mov
mov
jp
in
cmp
push
aas
pop
xchg
test
cmpsl
fadd
stos
mov
sbb
xorl
arpl
js
jae
es
dec
pop
sbb
or
pop
divl
xchg
mov
inc
out
and
pop
mov
test
xchg
std
cs
roll
inc
mov
push
push
pop
mov
into
push
lret
scas
bound
cs
cmpsl
push
jne
leave
push
sub
xchg
mov
dec
add
imul
mov
xor
cld
push
pop
out
mov
iret
xchg
or
shr
mov
mov
shll
out
test
xlat
bnd
je
push
fbstp
daa
mov
pop
add
mov
mov
push
std
lea
outsb
dec
dec
mov
fisttpll
xchg
stos
fcomip
adc
outsl
adcb
cmp
js
mov
mov
and
movsb
push
loope
mov
in
ficoml
jnp
movb
adc
fnstsw
dec
pop
dec
xor
push
push
add
pop
fbstp
rcrl
jnp
sahf
jnp
pop
pusha
mov
stos
add
shl
ljmp
xchg
add
cmpsl
mov
iret
cmp
push
inc
fucomip
add
mov
ja
fwait
or
pop
jno
enter
cmp
outsl
xor
insb
icebp
sbb
arpl
xor
fs
jecxz
icebp
push
sub
pop
mov
or
out
and
mov
mov
cltd
mov
adc
push
sub
rclb
sbb
lcall
add
lret
adc
pop
inc
ljmp
vzeroupper
add
mov
fisubl
pop
ds
fisubs
repnz
add
dec
push
in
mov
jno
mull
stc
adc
mov
dec
je
stos
xchg
pop
xor
mov
test
clc
push
xlat
in
shrb
sbbl
cmp
pop
aam
mov
adc
ja
loop
lret
push
imulb
lods
cmp
or
flds
dec
xlat
or
xchg
out
in
insb
sub
into
cmpsb
xchg
sub
inc
stc
and
and
pop
icebp
test
pop
mov
call
pop
and
rorl
jb
pop
push
cmp
mov
dec
dec
jg
jecxz
pop
cmp
xchg
in
insb
cwtl
outsl
add
in
lds
hlt
cmp
xchg
addl
repz
sbb
push
adc
ja
sbb
inc
add
stc
push
sbb
xor
pop
lahf
sub
adc
aad
stc
xor
jmp
lock
aam
inc
dec
mov
inc
test
insl
loope
xchg
outsl
add
pop
lds
inc
stos
or
mov
pop
cmc
mov
push
inc
and
and
lret
jb
mov
cmp
mov
or
loope
dec
aam
mov
xlat
leave
cmpsl
icebp
test
outsb
or
pop
test
imul
jmp
lock
mov
adc
shll
aas
xlat
mov
sub
inc
push
out
adcb
push
sbb
orb
adc
jle
jbe
cmp
lods
iret
aas
mov
mov
orb
push
imul
stos
dec
mov
jle
loope
mov
add
sbb
fisubrl
mov
sub
xchg
push
aam
xor
sbb
je
adc
bound
jp
pop
cmp
jge
sub
sub
pop
xchg
mov
pop
and
push
ffree
and
cmpsl
add
pop
cltd
push
in
rclb
in
xchg
inc
rorb
xchg
arpl
pop
mov
in
push
mov
cmpsl
cmpb
sbb
pop
xchg
or
into
dec
mov
mov
sub
hlt
mov
dec
and
movsl
add
push
test
xchg
push
test
adc
or
push
sbb
lock
popf
fimull
fstpt
add
cld
xor
leave
insb
sbb
mov
sub
loope
rcrb
ljmp
pusha
test
ret
mov
iret
fcomps
inc
cmp
adc
cmp
and
gs
sbb
cmpsb
xlat
sbb
popa
sarb
cmp
test
xchg
jmp
nop
cltd
lcall
adc
push
adc
xchg
aaa
addr16
imul
cwtl
sahf
xchg
add
dec
testl
in
mov
clc
mov
push
sub
inc
jb
sub
cltd
enter
sbb
and
mov
and
sub
add
ror
js
scas
adc
pop
adc
push
js
add
push
mov
cmpl
inc
pushf
add
mov
xor
pop
inc
jo
aad
sahf
xchg
lods
or
cmpsb
in
jg
sahf
test
jg
add
sbbb
gs
ss
and
fnstcw
xor
loop
test
sbb
mov
push
insb
jmp
cmc
mov
fcomps
out
xchg
icebp
test
les
shrb
cmp
or
and
insb
cwtl
xor
fadds
std
loop
mov
add
mov
lea
and
lcall
xchg
popl
mov
or
inc
fdivrs
jp
jo
mov
int3
dec
push
ljmp
cmp
out
aas
outsl
insb
ds
jo
or
outsl
data16
inc
jae
icebp
jnp
addr16
out
cmpsb
mov
inc
or
aaa
outsl
xchg
xchg
rcll
repnz
clc
sbb
insb
mov
dec
cmp
sub
mov
lret
hlt
inc
stos
dec
pop
push
out
iret
pop
jns
push
shrb
fildl
xchg
fwait
and
in
aad
jmp
push
popf
in
push
jecxz
pop
xchg
rcrb
scas
icebp
dec
ljmp
inc
testb
pop
cltd
sar
or
rolb
aam
push
xlat
xchg
jp
adc
sti
dec
push
push
mov
push
int
decb
in
out
jp
or
xchg
xchg
xlat
neg
dec
lret
pop
adc
mov
jl,pn
push
pop
inc
ss
sub
cmp
in
jo
stos
cmp
ja
mov
andl
into
ds
adc
jcxz
ficomps
mov
std
jb
imul
jnp
rolb
xor
insl
cld
out
inc
nop
hlt
stos
cmp
sub
xchg
testb
lahf
xor
dec
stos
jae
rcrl
push
push
xchg
insl
or
pop
imul
dec
jmp
pop
fnstcw
insb
lahf
jg
adc
fisttpl
cmpsb
mov
adc
hlt
out
pop
push
flds
iret
sti
inc
out
lock
jle
mov
and
pop
or
add
ja
adc
pop
push
mov
or
push
mov
xchg
mov
pop
aad
cmp
cmc
jo
jnp
cmp
sbb
cmc
and
push
in
jno
mov
orb
cmp
fdivrs
add
bound
orl
dec
sbb
sti
mov
jbe
and
data16
add
arpl
push
and
fnstsw
and
sarb
lcall
les
xchg
or
mov
mov
jp
jae
mov
add
push
cwtl
xchg
std
mov
push
nop
and
push
loope
and
and
or
mov
or
sbb
in
adc
mov
ds
xchg
das
scas
lock
pop
mov
mov
out
jns
sub
and
movsb
orl
insb
mov
in
ss
jo
out
ret
dec
test
mov
dec
nop
out
gs
add
cmp
inc
sar
pop
mov
adc
shll
inc
jg
or
or
leave
fcomps
shrl
cmc
test
sar
loopne
mov
and
cwtl
and
jg
call
or
mov
shll
xor
ds
lahf
pop
xchg
das
test
dec
xchg
in
test
shr
cli
lds
jp
cld
gs
adc
aam
sub
inc
incb
jae
or
mov
aad
nop
xor
xor
dec
cmpsb
xor
xchg
mov
or
lcall
sbb
add
inc
add
les
pop
push
shll
inc
and
or
cwtl
stos
mov
adc
shrl
cmp
in
andps
into
dec
lcall
scas
inc
ds
orb
jae
hlt
mov
sub
adc
fstl
mov
negb
rorl
push
sbb
imul
xchg
icebp
push
scas
mov
lahf
stos
pop
push
testl
notb
mov
xor
dec
comiss
push
dec
pop
cmc
lret
mov
xlat
aam
dec
push
mov
or
enter
push
adc
push
mov
jb
add
cmp
es
ss
lahf
sub
xorb
insb
push
xchg
cmp
pop
nop
and
dec
adc
mov
inc
mov
adc
pusha
das
jbe
xchg
lea
xchg
xor
mulb
and
xor
xchg
cwtl
cmc
mov
jecxz
xor
cs
add
sbb
leave
xchg
push
cs
add
jbe
pop
jp
sub
cmp
out
loopne
jp
cmp
movsb
and
lods
jp
ret
push
or
cmovnp
push
outsb
jnp
std
add
xchg
dec
mov
or
xchg
into
fnsave
and
fistl
push
push
subb
mov
mov
mov
pop
xchg
jbe
lea
outsb
rolb
not
in
or
daa
fistps
scas
mov
xor
and
jb
leave
mov
pop
out
lock
addb
enter
cld
stos
adc
inc
loope
push
mov
inc
push
ficoms
and
movsb
mov
mov
xchg
xchg
loop
sbb
and
enter
cmp
adc
pop
int
cmp
loope
mov
xor
ja
push
outsb
jle
fcmovnu
add
mov
data16
dec
xor
pop
scas
pop
mov
adc
mov
sbb
add
jbe
lret
inc
popa
aas
movsl
fwait
add
sbb
scas
in
or
sahf
enter
add
sbb
add
lret
mov
inc
pop
int3
and
cmp
rolb
mull
sbb
dec
pop
je
fidivs
fistpll
mov
nop
int3
mov
shlb
frstor
adc
cmpb
xchg
subl
mov
pusha
fcmovu
lods
repz
cmp
mov
out
push
sub
mov
nop
lds
ds
stos
mov
fs
or
xor
jbe
inc
add
pushf
mov
test
arpl
lods
and
test
inc
push
shl
clc
push
data16
mov
mov
inc
cmc
cmp
pop
xchg
sub
loope
mov
sbb
test
fiaddl
jb
push
repz
loop
and
lret
lret
inc
mov
xor
popf
xor
sbb
xchg
mov
and
xor
mov
dec
sbb
sbb
jle
push
mov
jl
sub
loopne
add
push
aad
inc
adc
stos
inc
loopne
das
aam
call
mov
push
jne
dec
inc
into
mov
gs
and
cli
push
mov
and
xchg
pop
xor
cmc
lods
scas
cwtl
into
cwtl
push
insb
cmpl
mov
push
aas
fldcw
dec
add
fs
jmp
insb
add
popf
mov
mov
jne
insl
jl
adc
fistl
scas
rcrb
fisubrl
data16
jge
pusha
lcall
inc
and
sub
divl
or
mov
out
gs
ds
movsl
jmp
push
inc
out
out
call
adc
popa
xor
out
mov
je
lods
xchg
inc
xchg
pop
leave
adc
mov
adc
inc
pop
mov
push
add
stc
mov
cmp
addl
jg
xor
mov
lds
cmpl
xor
shlb
outsl
fisubs
stos
dec
and
cmp
fs
push
cmp
testb
lret
xor
clc
pop
loopnew
jno
push
xchg
out
pop
inc
adc
fdivs
test
sbb
inc
xchg
adcb
and
leave
push
imul
inc
repz
pop
int
add
mov
shlb
fwait
in
mov
push
test
ja
in
fsts
mov
ficoml
inc
neg
sbb
loop
push
subb
mov
jl
or
out
enter
insl
into
or
mov
movsb
sbb
addr16
sbb
xchg
out
jmp
mov
shrl
fcoml
mov
jae
dec
sahf
push
dec
ljmp
mov
fnstcw
pop
movhps
xchg
cli
movsl
push
lods
pusha
outsb
test
and
fstpl
sbb
ret
in
cli
stos
flds
in
and
call
xor
mov
push
dec
imul
clc
inc
repnz
cmpsl
jp
dec
and
mov
repz
jns
pop
push
idivb
mov
pop
cwtl
adc
bnd
aaa
icebp
popf
xchg
xor
mov
lds
mov
cmp
fstps
shl
data16
pop
mov
or
fs
xchg
sarl
jae
sbb
rcl
mov
fistl
cmp
push
sbb
cmpsb
fwait
sub
sbb
mov
sbb
lea
or
sub
pusha
xor
clc
out
add
sbb
xchg
rcrl
leave
int3
out
mov
inc
js
ja
js
jg
xor
and
sub
push
adc
ljmp
xor
js
sbb
cmp
xchg
stos
cld
outsb
std
rclb
jo
xor
jecxz
popa
push
dec
cmpsb
xchg
cmp
push
rorl
pop
lods
or
xlat
cld
and
xchg
lret
leave
xchg
mov
adc
and
xor
ds
dec
mov
sub
scas
mov
sub
in
push
push
add
movsl
movsb
shll
xchg
adc
mov
pop
add
aas
cltd
pusha
jae
sub
and
lods
jecxz
mov
jecxz
sub
push
add
cmp
adc
mov
mov
daa
js
push
dec
xchg
xor
sbbb
sahf
insb
test
stos
pop
clc
cli
outsb
push
clc
out
jne,pn
dec
adc
and
push
repnz
lock
enter
outsb
pop
adc
mov
cmpsl
mov
enter
sub
mov
and
sbb
dec
sbb
jb
push
es
mov
hlt
cwtl
xor
inc
out
ret
lret
loope
fwait
jl
cmp
fbstp
push
and
iret
push
xchg
cwtl
jbe
sbb
cmp
rcll
cmp
lock
scas
cwtl
xor
mov
xor
xchg
cmpsl
hlt
in
inc
mov
loopne
lea
orb
mov
lcall
and
push
in
push
arpl
fdivl
test
adc
mov
shrl
xchg
push
xchg
cmc
adcl
or
lods
jle
add
cmpsb
outsl
repnz
mov
push
jge
xor
inc
ljmp
jmp
jle
addr16
test
mov
sub
mov
sub
dec
std
rcl
xchg
pop
fiadds
pop
mov
cmpsl
fiaddl
repz
loope
sbb
xchg
sbb
je
sub
pop
into
pop
in
cmp
nopl
mov
mov
xchg
jns
sub
pop
jg
pusha
test
test
outsb
shl
jnp
ret
xchg
rcr
mov
test
movsb
lods
sub
imul
in
mov
pushf
mov
popa
imul
pop
movsb
daa
inc
ljmp
mov
test
lcall
shl
jne
arpl
aad
push
sbb
clc
mov
fidivrs
fistpll
jns
sbb
pop
iret
bound
mov
push
lods
fistpll
mov
xor
popf
pushf
add
mov
je
out
and
addr16
in
cmp
sub
mov
in
xor
add
cs
xchg
mov
or
cmp
xchg
inc
fcomps
in
push
xor
dec
js
int
int3
cwtl
sbb
jb
pop
leave
push
inc
in
dec
pop
mov
cltd
jge
fsubr
cli
sub
or
push
jge
lcall
cmp
mov
in
jae
leave
mov
popa
add
mov
repnz
adc
hlt
add
sahf
pop
adcb
jg
stc
cmpsl
xor
cmp
or
mov
sar
aas
pusha
adc
adc
je
jnp
hlt
adc
int
sbb
cmpsl
lock
or
mulb
xchg
adc
into
or
ret
mov
mov
jo
inc
in
jo
jle
xchg
insb
pushf
inc
ret
mov
shll
push
pop
jb
or
push
mov
xor
or
push
push
inc
mov
roll
repnz
dec
cs
aad
imul
jbe
gs
xlat
sbb
inc
rcll
in
pop
pop
mov
mov
push
mov
inc
scas
mov
pop
dec
pushf
or
jo
add
das
mov
mov
xchg
pop
mov
out
popf
roll
dec
rorb
jl
mov
mov
push
push
lds
sahf
add
adc
jne
flds
xchg
dec
test
xchg
inc
stc
andb
add
xor
or
ffreep
movsl
jo
jnp
jno
cmp
push
mov
jne
pop
inc
mov
divl
jmp
inc
xchg
lods
mov
out
movsb
stc
jb,pt
pop
mov
jg
stc
std
cmpsl
ja
jp
popa
cmp
insb
or
mov
test
stos
stos
mov
xor
jg
push
or
jle
cwtl
movsb
sbb
xchg
inc
mov
xorb
cltd
loop
push
or
xor
out
mov
sub
movsl
pop
pushf
mov
dec
out
xchg
movsl
inc
movsl
push
stos
mov
cli
enter
les
lea
jle
jne
mov
pusha
sub
mov
inc
jmp
adc
inc
mov
mov
in
in
sbb
fiaddl
sti
pop
push
xor
jge
mov
aam
loope
mov
cmp
sbb
adc
mov
cmp
and
pop
data16
mov
sbb
mov
sub
notb
ret
faddl
xchg
mov
std
jnp
pop
es
add
and
std
ficoml
insb
jns
mov
aas
and
jne
add
mov
add
mov
jnp
cmp
lods
enter
mov
mov
sbb
mov
mov
mov
push
cld
mov
adc
pushf
sbb
add
cmp
xor
call
nop
adc
lret
xchg
aad
test
loopne
ja
in
cmp
jno
in
xlat
mov
sbb
fnstcw
push
cmp
pop
out
push
inc
lods
imul
xor
ds
ljmp
fs
mov
jmp
cmp
dec
inc
xchg
cmp
movsl
mov
popf
sar
fs
mov
sbb
daa
popf
sbb
xchg
sub
push
pop
ret
fld
pop
cmp
push
dec
push
dec
mov
aad
add
and
scas
aaa
int3
mov
jo
imul
sub
dec
add
lret
lods
inc
xorl
sub
fbld
and
lods
int
call
popa
sbb
dec
jns
and
pmaxsw
into
filds
mov
lods
cltd
addr16
pop
jmp
mov
xchg
loop
adc
subb
jo
into
mov
js
mov
inc
mov
jmp
inc
pop
mov
rcr
les
outsb
mov
sub
shll
lock
push
ret
push
incb
das
mov
or
push
mov
insl
insl
mov
sub
in
and
movsb
sbb
ret
adc
push
into
and
aaa
imul
jg
call
inc
push
in
push
cmp
mov
cli
push
jecxz
dec
stos
fldt
mov
jo
sub
stc
cmp
stc
push
sarb
mov
xor
ret
xor
sub
sbb
jge
das
clc
je
clc
sub
push
sub
aad
lea
jb
test
xchg
jl
xchg
cwtl
sbb
pusha
cli
xor
pop
insb
das
lds
jg
xor
push
jne
imul
hlt
dec
jae
and
rcll
out
shlb
adc
adc
outsl
sbb
cs
adc
gs
rep
sarb
daa
or
push
test
mov
in
aaa
mov
dec
jbe
mov
loop
pop
std
insl
iret
or
out
test
fisubl
sbb
jecxz
sti
das
fbld
dec
rcr
add
scas
sbb
lret
hlt
add
push
movsl
pop
rolb
mov
sbb
mov
cltd
leave
ds
push
or
lahf
inc
mov
clc
adc
repnz
push
dec
xchg
sti
in
cmp
mov
imul
sbb
test
push
sahf
ja
adc
fwait
js
add
outsl
insl
loope
mov
arpl
negb
divb
inc
adc
leave
cltd
mov
js
aaa
dec
jle
cmp
stos
sti
mov
mov
push
bnd
jnp
mov
mov
mul
jns
or
fdivrl
addr16
fs
sub
mov
push
and
jnp
mov
adc
pop
cmp
inc
int3
aad
push
outsl
sbb
cmpsl
ficoms
dec
addr16
push
push
imul
lret
xchg
adc
dec
lcall
fs
sahf
mov
shlb
test
cmp
dec
pop
popa
cs
nop
rcl
push
inc
sahf
pop
lea
xchg
icebp
dec
dec
mov
cmp
and
inc
pop
cmc
sub
pop
addl
jno
pushl
push
mov
jb
in
mov
ds
push
cmpsl
cli
xchg
daa
xchg
js
jl
je
xor
mov
ljmp
mov
lret
mov
sub
in
dec
inc
loop
rcll
les
sbb
push
inc
lea
repz
mov
and
pop
cmpl
dec
push
push
gs
imul
shlb
add
mov
out
lock
pusha
loopne
inc
lret
rorb
fwait
dec
insb
xchg
rol
test
test
insl
jbe
orb
sub
inc
and
daa
inc
aaa
in
jmp
mov
aam
in
or
pop
push
sub
mov
push
dec
rclb
push
fimuls
loope
add
sbb
int
dec
mov
add
int
pop
lea
jp
mov
and
imul
inc
call
xor
out
cmc
ret
icebp
js
pop
and
add
fadds
test
sbb
jno
push
sbb
mov
xchg
jp
hlt
hlt
jnp
imul
inc
insb
in
lret
dec
dec
neg
sbb
push
idiv
xchg
or
cwtl
and
sbb
pop
sahf
sarl
pop
arpl
fstps
mov
or
mov
aam
into
jbe
add
stos
jmp
add
pop
into
aas
adc
jle
aam
out
adc
lds
push
cld
scas
sub
and
decl
mov
pop
rol
dec
jge
or
xchg
lods
inc
inc
loope
nop
rolb
hlt
subl
push
xor
aam
movsb
jp
sbb
je
xchg
lock
insl
in
cmpsb
mov
or
adc
push
outsl
stc
ss
sub
adc
shlb
lods
bound
sti
cmp
in
gs
cld
rol
lret
xchg
addr16
xchg
sub
sbb
and
js
and
mov
fimuls
sbb
mov
inc
jns
aas
cmp
and
ret
popa
dec
mov
cmp
in
jg
stc
pusha
test
lcall
test
test
mov
jae
pop
aas
xchg
fwait
sti
mov
lods
xchg
popa
in
or
jb
sbb
push
lods
addr16
rcrb
add
jo
cld
mov
mov
scas
adc
pop
out
scas
xor
mov
dec
mov
or
cwtl
sbb
mov
subl
xchg
imul
leave
aaa
inc
je
or
xchg
out
negl
cmpsb
pop
das
adc
mov
dec
push
and
mov
mov
pop
sahf
jcxz
sti
out
dec
loope
movsl
mov
xchg
pop
dec
mov
mov
negl
jecxz
add
inc
push
rolb
jecxz
mov
ljmp
pop
sbb
mov
pop
mov
mov
sub
mov
inc
mov
pop
je
out
mov
dec
mov
inc
mov
push
mov
push
xchg
mov
loop
cs
je
fimull
jno
imul
mov
mov
and
push
scas
add
xor
mov
mov
pop
rorl
push
jl
push
cmovg
std
sub
sub
push
incb
lods
popf
popa
and
nop
push
leave
adc
mov
outsl
sbb
lock
xchg
les
dec
stc
jge
mov
add
int3
dec
mov
xor
loopne
mov
mov
push
shl
in
pop
jmp
jge
mov
loop
inc
cwtl
xchg
adc
sbb
pop
bound
outsl
outsb
adc
jle
cmpsb
lea
ljmp
sub
or
lcall
cmc
sbbb
push
sub
loop
scas
mov
and
jnp
cmc
arpl
pop
aas
ficoms
loope
cli
inc
and
cmp
fcmovnu
add
dec
das
xorl
iret
dec
and
je
js
cwtl
or
clc
or
dec
cmp
jg
mov
jg
adc
aaa
in
hlt
out
cmp
mov
imul
sbb
ficompl
xlat
adc
in
out
dec
add
jae
pusha
inc
movsl
aas
fdivrl
mov
push
insb
inc
adc
in
cwtl
jne
mov
jmp
in
icebp
sbb
and
cmp
int
testb
push
jecxz,pn
mov
aaa
adc
les
loop
les
push
mov
jl
mov
daa
fs
sbb
mov
cmpsb
outsl
lret
xor
movb
dec
aad
sti
cmovne
sbb
fwait
xchg
xor
imul
loop
hlt
or
cltd
mov
xchg
xchg
fidivrs
es
push
lods
movsb
and
sbb
cmc
pusha
jle
mov
or
xchg
pusha
push
dec
cs
dec
adcb
add
int
mov
fwait
test
lock
add
inc
fwait
mov
push
lods
mov
inc
in
cmp
ljmp
popf
pop
cmp
dec
int3
pop
adc
sbb
mov
jo
mov
decb
iret
inc
and
or
or
and
mov
push
movsb
mov
movsl
sbb
or
mov
add
mov
xchg
xor
add
jp
aas
mov
cwtl
and
leave
xchg
mov
and
mov
add
add
or
adc
jg
jecxz
mov
push
and
xor
dec
push
jbe
fadd
push
pop
shld
jo
cs
inc
out
xchg
push
pop
stc
leave
lods
pop
in
jle
shl
out
push
cmp
divb
mov
dec
cli
sahf
lods
pop
mov
mov
sarl
add
pop
push
jae
in
sub
iret
sub
mov
je
inc
pop
lret
nop
push
xchg
push
lret
rorb
iret
iret
cmp
outsl
adc
jno
std
sub
stos
xchg
pop
sbb
repnz
push
shrl
xlat
jb
insb
mov
mov
or
ret
insl
xor
lea
jl
sub
jo
adc
lock
pop
stos
mov
xlat
ss
push
lret
adc
dec
xor
imul
xchg
inc
pop
xor
lods
xchg
ja
dec
mov
call
ja
shrl
out
ret
mov
mov
inc
add
hlt
lret
es
mov
dec
sub
std
movsb
pop
data16
mov
xor
cmc
sub
sbb
adc
in
loopne
xor
and
add
mov
imul
pop
in
mov
jle
in
test
mov
imul
icebp
xor
or
mov
xor
out
jl
scas
icebp
xchg
adc
inc
xchg
mov
add
jp
mov
lds
cmpsl
sub
popa
pop
pop
mov
sbb
subb
cmc
testb
mov
xor
popa
outsb
cld
add
lret
add
hlt
sbbl
sbb
xor
mov
outsl
adc
bound
rcrb
sub
push
iret
mov
mov
test
xlat
push
int3
xor
adc
xor
ret
pop
push
pop
add
and
out
aad
lods
out
fbld
xchg
fs
mov
repnz
adc
xchg
mov
add
test
xor
xchg
mov
dec
je
sub
in
aad
dec
shl
xchg
daa
xchg
add
xchg
jp
insb
or
orl
adc
je
add
iret
cld
add
and
in
std
push
in
and
inc
imul
dec
inc
pop
sub
add
in
outsb
jns
imul
mull
ljmp
fdivl
add
mov
pop
cmp
mov
xchg
fidivrs
xchg
jns
xchg
cltd
cli
inc
sbb
sbb
push
inc
and
aas
inc
out
xor
fdivp
mov
test
pop
call
or
pop
push
mov
push
push
add
rcrl
imul
pop
dec
xchg
jne
mov
popa
add
rclb
dec
jmp
mov
lret
mov
add
test
xchg
out
cmc
push
mov
mov
mov
fistl
lock
dec
mov
notl
inc
ja
dec
out
sub
xlat
sub
sub
or
fcompl
and
adc
std
inc
popf
push
adc
movb
mov
xchg
and
data16
int
sbb
pop
pop
divl
gs
sahf
mov
fwait
aad
scas
xchg
daa
insb
push
cmc
mov
xor
mov
ljmp
add
stos
mov
xor
and
dec
sti
pop
out
gs
pop
and
popf
jge
lds
mov
test
cmp
jbe
in
mov
xchg
fsubr
inc
stc
pop
xor
insb
adc
dec
adc
push
push
sbb
ja
stos
sub
out
jno
cs
sub
stc
test
push
aas
imul
mov
cmpsb
mov
mov
leave
push
inc
or
fistpl
test
leave
fnstcw
fcoms
js
int
scas
mov
inc
popa
xchg
shlb
pop
cmpsb
xlat
in
idiv
negb
push
xchg
in
adc
cmp
pop
inc
test
scas
jae
xchg
scas
or
adc
mov
mov
leave
cwtl
adc
mov
jo
xchg
mov
cmpb
lret
fdivs
in
aaa
out
push
pop
loopne
cmp
aas
add
js
imul
les
pushf
leave
push
pop
jo
xchg
pop
call
je
loop
in
or
dec
mov
pop
shrb
mov
scas
fincstp
sbb
mov
mov
fcmovnb
sub
xor
cmc
adc
xchg
xchg
iret
arpl
jbe
loopne
dec
pop
daa
gs
xchg
mov
cli
lods
mov
dec
adc
cmpxchg
jne
imul
call
out
push
test
cmpsl
in
adc
addr16
negb
jno
pop
xor
lea
loopne
imul
outsl
in
push
ljmp
cmpsb
stos
int3
add
loope
xor
cmpsb
pop
ret
test
dec
lds
dec
loop
jg
cmp
cmp
je
cltd
mov
and
jnp
adc
push
jne
push
loope
cli
dec
push
sub
cmp
mov
xor
xor
pushf
sbb
aad
out
dec
es
test
addr16
inc
fidivs
and
dec
cs
and
and
dec
sbb
nop
cmpsb
cmc
iret
mov
lds
mov
jmp
out
imul
in
stos
xchg
in
xor
push
arpl
fwait
and
xchg
and
gs
push
add
pop
dec
test
fldenv
rcr
testb
push
pushw
loope
lds
rorb
test
inc
jno
pop
dec
subl
aam
mov
roll
lods
cld
mov
insb
popf
aas
xor
inc
aaa
mov
or
lret
or
lods
and
inc
xchg
push
jb
ficompl
mov
jmp
cwtl
jns
stc
fwait
mov
xorl
aam
nop
add
mov
push
lahf
ss
arpl
inc
and
mov
mov
movsb
cwtl
test
iret
call
mov
mov
and
je
cmpsl
xchg
lea
add
push
mov
insl
adc
mov
scas
xchg
popa
pop
jne
mov
fstps
aaa
cmp
ds
dec
clc
fwait
dec
jmp
mov
jo
loopne
jnp
fisttpl
jne
mov
aaa
out
movsl
insl
cmp
push
mov
roll
push
sbbb
pop
ret
subb
addb
mov
cmpsl
loopne
add
ds
in
add
cltd
mov
out
daa
sbb
and
push
cld
xor
pop
jb
in
and
in
pop
ds
out
mov
push
bound
inc
sahf
add
repz
movsb
and
ds
jle
xchg
test
mov
pop
ret
test
xchg
shll
cmpsb
and
mulb
movsb
cmc
xor
or
mov
pop
adc
lds
sbb
addr16
mov
aad
push
repz
dec
js
cmp
sub
cmp
mov
push
lea
sti
clc
pusha
adc
ds
sub
iret
mov
repz
or
xchg
mov
in
cmpsl
add
jecxz
in
mov
mov
addl
or
jb
xlat
out
add
push
add
aas
sub
movsl
mov
call
sahf
push
imul
mov
push
out
mov
hlt
push
push
ja
cmpsb
inc
test
jo
stc
jo
test
aaa
cmpsl
lds
mov
jne
jmp
jnp
out
add
mov
scas
sbb
lds
pop
lret
rclb
jge
stos
mov
hlt
push
xchg
cld
and
popl
or
sbb
repz
mov
loopne
or
add
cmp
in
mov
jle
loop,pt
ret
fnstenv
hlt
out
nop
adc
pop
dec
pop
xor
pop
lret
fcoms
sahf
add
cwtl
inc
mov
out
sub
xor
mov
mov
xor
ds
in
push
add
in
or
cmpsb
stos
ficoml
imul
cld
sbb
inc
mov
jg
xor
pop
popa
jecxz,pn
jb
fiaddl
cmp
inc
movsb
je
stc
cmpsb
pop
fwait
cmpsb
call
in
pusha
ss
jns
ud2
fiadds
test
mov
pop
xor
lods
loop
sub
dec
mov
push
jnp
jnp
lock
inc
dec
std
movsl
xchg
jecxz
pop
dec
pushf
stos
sti
test
roll
inc
scas
mov
fwait
enter
rcrb
lds
leave
cmpsb
xlat
jno
mov
out
and
sbb
in
dec
int
call
aad
push
rclb
into
mov
addr16
lret
jle
lahf
mov
jge
lcall
imul
les
daa
adc
dec
dec
test
test
adc
inc
shrl
aad
cmp
rcr
repnz
push
mov
add
mov
imul
inc
outsl
dec
jne
out
jb
fwait
inc
push
xchg
inc
dec
aas
les
leave
andl
adc
add
or
jnp
je
dec
push
adc
push
inc
enter
xor
push
lret
pop
jae
rcll
adc
imul
adc
cmp
imul
push
add
popf
or
stc
cmc
sbb
xchg
lods
jbe
scas
xchg
int3
jl
jb
mov
das
rorb
dec
or
aam
in
adc
popa
sub
cmp
dec
addr16
pop
xchg
inc
or
sub
cmp
sbb
in
cmp
sub
in
repnz
dec
dec
stos
les
shll
out
adc
test
ss
adc
jp
sub
pusha
xchg
in
adc
push
insb
cmp
push
cmpsb
dec
test
fnsave
pusha
lea
aam
push
les
xchg
outsb
sub
std
cmp
leave
mov
inc
mov
test
clc
cmp
jbe
fbld
push
pop
pop
push
iret
stos
xorb
cmovne
popa
pop
jge
aam
add
aas
adc
test
sub
idivb
sub
xchg
es
and
sub
repz
xor
jne
or
in
stos
sbb
push
xor
push
jmp
dec
ret
stc
sahf
fucom
add
icebp
ficomps
gs
and
es
adc
push
cli
test
push
mov
pushf
lret
xorb
outsl
mov
sbb
ljmp
sbb
mov
xchg
fcos
stos
std
jne
push
xor
cmp
std
adc
push
ja
mull
mov
lods
cmp
nop
pop
in
shrl
outsb
cmpsl
hlt
repnz
test
cmpsl
sbbb
dec
movb
xor
jb
test
mov
mov
mov
mov
aad
ss
inc
shl
adc
mov
outsl
je
enter
insb
xchg
xor
xchg
in
enter
andb
rcll
cmpsb
test
test
insl
jl
je
cmpsb
ljmp
push
sti
divl
insl
pop
nop
aad
out
cli
test
clc
loope
xchg
jp
pop
out
xor
mov
and
ficomps
popa
jl
sub
rolb
push
rdpmc
push
popf
jnp
divb
push
add
dec
and
pop
xlat
push
mov
dec
mov
push
jg
dec
lods
enter
stos
jp
or
bound
jp
aam
mov
inc
push
inc
addr16
jae
xchg
mov
mov
sti
andb
dec
mov
mov
cmp
fsubl
push
insl
xlat
xorl
and
mov
je
and
imull
pop
fwait
pop
cli
lcall
fbstp
stos
dec
aaa
xchg
rorl
lods
dec
add
push
repz
xor
sbb
clc
fnsetpm(287
shlb
push
add
movsl
inc
mov
out
sbb
mov
mov
adcl
xor
test
ffree
lret
into
mov
rol
test
or
adc
jno
xor
inc
and
xchg
and
dec
insb
sbbl
cmp
pop
test
stos
cs
mov
pop
rcl
xor
test
mov
xor
lret
xor
push
cmpsb
mov
push
push
and
hlt
xchg
jno
mov
pop
sub
mov
mov
push
xor
fnstcw
testb
sbb
sbb
sbb
pushf
gs
mov
pop
xor
sub
out
or
shrl
sbb
loopne
insl
xchg
lret
sahf
sar
push
adc
in
pop
sub
jp
mov
inc
xchg
aad
or
cs
push
push
or
mov
mov
push
repz
out
es
fistpl
aaa
add
out
xchg
leave
scas
cmpsb
fsubs
adc
add
mov
sub
cmp
out
test
add
insb
repz
and
sub
mov
iret
sbb
adc
enter
mov
or
scas
jge
pop
ret
stos
mov
fidivl
in
xorb
xchg
arpl
xchg
adc
xor
mov
repnz
sbb
lahf
clc
hlt
pop
sub
jle
adc
mov
inc
adcw
stos
cli
xor
mov
pop
ss
seta
xchg
cmp
adc
adc
push
mov
jb
mov
fcmove
add
mov
movsb
movsl
xchg
push
cmp
mov
insl
test
sbb
movd
mov
out
inc
jl
cmpsl
cmp
dec
xor
push
int3
sbb
jo
leave
cmpsb
sbb
and
jne
mov
hlt
mov
xor
mov
xchg
adc
and
jae
sbb
fsubs
mov
dec
inc
sub
sub
test
gs
arpl
mov
pop
inc
jge
mov
imul
mov
aad
mov
and
icebp
cs
enter
js
js
fldcw
xor
negb
xchg
sub
mov
mov
push
xor
addr16
mov
andl
cltd
bnd
jo
cmpsl
push
mov
mov
mov
jmp
adc
iret
fistpl
into
cmpsb
fwait
xchg
mov
repnz
sub
jg
lret
dec
inc
xchg
mov
dec
ret
lods
xor
dec
xchg
mov
mov
jge
mov
mov
pusha
sti
imul
mov
imul
or
mov
sahf
and
std
cwtl
imul
mov
sub
ja
jbe
into
leave
fisubs
in
nop
hlt
ss
inc
test
cmpl
nop
ret
mov
xchg
jl
push
jecxz
pop
mov
dec
ss
adc
fsubs
imul
and
test
lds
add
movsw
rcll
push
sub
sub
test
pop
inc
inc
jns
jne
cmp
ffreep
push
into
arpl
sub
xchg
in
mov
push
stc
mov
stos
jp
mov
xchg
pop
rclb
lahf
int3
es
repnz
adc
insl
filds
outsl
lods
xchg
lcall
or
add
lcall
xlat
rcrb
inc
lock
test
jl
int3
in
and
or
leave
das
or
filds
cmp
mov
sahf
sub
in
inc
xor
and
das
dec
fcmovu
aad
pop
push
clc
xor
pop
sbb
cld
or
dec
cmp
mov
lahf
imul
sbb
jno
and
testb
or
loope
jmp
dec
push
js
xchg
insb
mov
ljmp
mov
cltd
xchg
pop
inc
stc
mov
mov
ret
fbstp
mov
pop
fidivl
pop
jae
mov
test
add
aas
mov
fcoml
mov
xor
std
or
xchg
leave
ret
xor
mov
data16
cwtl
mov
pop
rcll
inc
int3
cmp
adc
mov
push
das
scas
test
cwtl
jb,pn
pop
cli
int
mov
mov
and
clc
imul
int
jecxz
or
js
sbb
popa
lods
push
rorl
int
push
mov
stc
pop
xchg
push
adc
inc
sbb
adc
sbbl
dec
stc
or
sbb
scas
ficoms
sub
xor
aaa
les
and
add
jns
cmp
pop
push
jmp
fadd
sub
adc
loop
jno
lds
enter
mov
popa
inc
pop
xchg
lods
ret
jp
inc
mov
push
cld
mov
sahf
jne
iret
pop
xchg
addl
fadds
in
inc
out
add
std
mov
aad
les
jmp
pop
xchg
mov
data16
movsl
mov
loopne
sub
mov
sbb
daa
jl
in
pop
xor
cmp
push
xor
sbb
xchg
xchg
add
loope
xor
mov
lcall
lods
sub
pop
inc
jno
cmp
aad
int3
pop
insl
push
lret
shrl
dec
xor
mov
js
mov
cmpsl
pop
outsl
insb
jno
pop
mov
fwait
movsb
test
arpl
bound
adc
dec
filds
and
icebp
push
add
or
and
cmp
shlb
mov
into
test
je
inc
aaa
ljmp
sbb
int
test
sub
cmpsl
mov
inc
popf
data16
popf
mov
mov
mov
cmp
xor
or
push
sbb
mov
xchg
jne
rcrb
fisttps
call
movsb
gs
daa
iret
repz
fcompl
xchg
icebp
sbb
mov
sbb
in
inc
repz
insl
lea
aam
stc
movsl
sbb
stos
fucomi
xor
es
xlat
pop
add
ljmp
std
add
test
cmp
cmpsl
pop
fldcw
jg
incl
addr16
repz
mov
fmul
mov
lods
adc
shrl
mov
mov
inc
jp
sbb
addl
jmp
mov
test
or
xchg
mov
lock
cltd
adc
mov
or
pushf
sub
dec
sbb
in
lds
insb
inc
xor
cmp
fistpl
adc
imul
mov
inc
imul
pusha
mov
inc
pop
cmpl
mov
mov
xchg
xor
cwtl
xor
stc
sbb
sub
out
mov
pop
lods
sub
inc
shl
out
inc
pop
mov
aad
push
jno
and
mov
in
aaa
jo
lea
mov
xchg
or
push
adc
and
ljmp
xchg
sub
pminsw
sub
mov
repz
push
enter
outsl
in
es
lret
cwtl
xor
in
das
mov
adc
adcb
xor
and
mov
call
jb
mov
push
and
or
sub
test
out
cmpsl
test
jo
pop
jo
fisubrl
nop
push
xor
pop
outsl
mov
scas
jle
xchg
mov
shlb
in
sbbl
pop
outsl
xchg
out
or
cltd
jbe
leave
push
aas
jl
leave
cli
sbb
or
mov
jmp
inc
pop
out
push
into
imul
stc
add
dec
push
rorb
jp
int
inc
inc
jge
cltd
aad
cmp
stc
sahf
fadd
xchg
pushf
ja
jne
mov
or
adc
bnd
xor
arpl
adc
pop
xor
jg
movsl
cmpsl
jae
andb
or
lea
fldln2
pop
or
imul
xchg
mov
mov
loop
scas
xor
cmp
cld
lret
fmull
lcall
mov
outsl
dec
jmp
out
xlat
cld
pop
xchg
sub
push
xor
in
mov
pusha
bound
push
push
sub
push
and
push
in
push
push
sbb
push
xor
cmp
xor
or
enter
shll
ljmp
cmp
ret
lock
or
aam
movsl
and
mov
mov
int
out
pop
test
mov
sqrtps
xchg
jae
mov
fstl
sbb
icebp
lret
leave
cltd
inc
sub
adc
xor
sub
cmp
sub
pop
leave
sbb
aaa
cmp
nop
mov
sub
dec
xor
pop
call
xchg
jl
push
fidivs
test
cmpsb
lods
cmp
and
dec
in
outsl
sbb
in
xchg
or
jmp
pop
dec
hlt
in
jb
jae
cwtl
addr16
push
pop
aad
loopne
sub
sbb
aam
in
insb
cmp
jo
xchg
push
dec
or
xor
mov
push
cmp
enter
loopne
in
addr16
or
jp
add
icebp
jg
sbb
ds
mov
jecxz
xor
in
fsubr
mov
pop
arpl
fists
inc
sbb
mov
push
dec
dec
icebp
ret
cmp
ljmp
inc
push
flds
ds
mov
dec
pop
mov
push
xor
enter
seto
jo
adcl
push
mov
xor
mov
sub
mov
or
in
or
lcall
add
mov
imul
mov
repnz
enter
pop
das
pushf
push
cmc
comiss
jno
ja
mov
adc
or
shlb
adc
jg
xchg
xor
xlat
and
mov
jo
subl
sbb
cmpsb
cld
mov
lods
outsl
cmp
mov
test
mov
sub
testl
aaa
mov
push
dec
inc
out
mov
in
pop
cmp
mov
push
mov
addr16
sub
mov
inc
pop
out
push
push
pop
pop
das
jge
mov
jp
jmp
jno
lret
sub
lret
inc
ljmp
cmp
mov
dec
filds
filds
fdivp
push
in
xor
mov
adc
sub
mov
es
xor
aad
cld
das
xor
test
ds
mov
jmp
lcall
fidivrl
xchg
rcll
mov
insl
scas
rolb
adc
fisubs
mov
dec
jbe
in
scas
test
xchg
lahf
orl
pop
into
mov
imul
push
xor
and
fldcw
mov
xor
lahf
mov
pop
orl
push
mov
shlb
sub
icebp
inc
divl
push
inc
push
sbb
nop
dec
fisubrl
pop
jno
in
lahf
pop
shrl
xor
sub
shrb
xchg
sbb
jl
pop
jg
incl
rclb
push
push
mov
pop
push
mov
inc
lods
aad
add
hlt
ja
sub
das
add
leave
incl
push
leave
mov
mov
mov
add
and
imul
fidivrs
test
addr16
stos
dec
je
rcrb
fbld
cmp
mov
daa
sub
add
enter
mov
sbb
fstps
mov
fsubl
xchg
lcall
iret
imul
pop
hlt
xor
ret
or
lods
push
arpl
xchg
invd
adc
fisubl
or
or
adc
pop
pand
int3
xlat
or
das
and
or
shrb
add
jle
ljmp
cmc
fildl
push
pop
pushf
cmpb
jnp
jno
loopne
jmp
sbb
lret
push
jge
and
push
mov
hlt
mov
incb
lods
sti
out
addr16
daa
stos
pop
mov
ds
aas
xchg
andb
cli
mov
mov
cld
mov
std
xor
out
pop
push
or
es
ljmp
mov
lds
lret
insb
cli
insl
leave
xchg
pop
cmc
and
inc
loop
repz
insb
pop
sbb
mov
dec
jne
insw
rol
jo
test
bound
aas
inc
fiaddl
cld
loopne
push
add
adc
ss
repz
push
xlat
enter
and
xchg
shll
xor
cmp
sub
aad
flds
inc
cs
fmul
movsb
add
sub
jns
pop
out
gs
test
dec
test
inc
in
pop
popf
mov
popw
xor
je
mov
inc
jecxz
mov
dec
js
or
xchg
jl
jae
call
sahf
insb
fistpll
adc
outsl
das
inc
ja
and
sbb
sub
sub
imul
je
ror
popa
aam
cli
jns
lahf
xorb
in
xor
cmp
jmp
mov
movsb
outsl
pop
cli
jecxz
cmp
loopne
inc
mov
sub
cltd
jle
gs
test
or
push
mov
ljmp
jl
sbb
sub
and
lds
ss
cmp
or
ljmp
outsl
sbb
jb
sbb
ret
mov
imul
xor
dec
xchg
mov
rorb
jg
lcall
fcompp
or
lods
mov
shrb
fsts
loop
and
iret
sub
dec
jle
psrlq
cwtl
cmp
push
inc
ss
sahf
add
add
xchg
mov
lea
test
test
xchg
test
or
inc
out
fs
stos
mov
or
cli
mov
pop
leave
repnz
sysexit
mov
fisubrs
bound
dec
mov
orb
xchg
jle
in
icebp
cmp
push
lock
out
fs
es
push
gs
cli
sbb
test
sbb
add
and
mov
inc
call
ffree
xor
enter
in
sub
add
int3
divl
adc
xchg
xor
jg
popf
cwtl
or
xor
out
mov
iret
lret
mull
arpl
jle
xor
inc
push
jb
scas
xlat
shll
mov
or
jge
shl
and
ficompl
mov
xor
mov
push
sbb
mov
or
imul
inc
push
inc
cs
push
adcl
ja
lds
imul
jno
mov
adc
push
cs
adc
mov
mov
cmp
and
sub
nop
insb
dec
jle
mov
lahf
cmp
inc
lock
lahf
cltd
sti
xor
sahf
aad
pop
pusha
sub
adc
mov
je
lock
inc
loopne
mov
mov
sbb
scas
pop
enter
xchg
ljmp
outsl
cld
add
pop
cli
es
sahf
adc
xchg
mov
and
in
aas
pop
xchg
mul
inc
push
call
xor
dec
inc
outsb
push
ja
aaa
shr
push
lret
dec
daa
mov
xor
mov
ja
inc
popf
imul
aaa
lretw
not
xchg
or
mov
push
cmp
cmp
jg
jne,pn
push
jge
sbb
ljmp
or
rol
fdivrl
inc
mov
mov
dec
sub
cmp
xchg
push
test
sbb
xor
or
pop
dec
inc
into
sub
and
lea
dec
pop
mov
add
clc
push
inc
mov
into
rclb
sbb
jecxz
mov
aaa
imul
or
mov
inc
and
xchg
mov
jge
aas
add
sbb
push
inc
fs
stos
ret
jb
dec
xchg
cmpsb
pinsrw
cmp
fimull
scas
bound
mov
rclb
mov
inc
inc
mov
into
fidivl
outsb
pop
push
shl
jmp
sub
sbb
mov
cmpsl
lock
imul
jle
xor
lods
mov
sbb
mov
scas
ljmp
test
std
icebp
add
sbbl
scas
pop
mov
scas
sbb
mov
enter
mov
shl
addl
dec
in
jg
and
jbe
pop
cltd
lods
aad
call
pushf
shufps
pop
hlt
ss
pop
fdivs
test
loope
iret
mov
sbb
int
daa
xchg
test
outsb
subl
aas
push
and
cmpsl
je
mov
push
daa
das
stos
mov
push
into
pop
in
pop
jb
mov
stos
mov
sbb
lods
sub
cmp
xchg
and
cmp
icebp
outsl
mov
mov
dec
pop
leave
insb
pusha
push
mov
add
mov
xorb
pushf
int
sahf
fs
sub
pushf
jb
sbb
icebp
jno
jno
push
or
insb
mov
push
xlat
in
xor
mov
lret
or
addb
cmc
inc
push
or
sub
js
ljmp
test
daa
add
and
ret
in
pushf
iret
aaa
or
test
imul
add
add
jecxz
xor
gs
mov
nop
and
insl
repz
dec
sub
xor
pop
mov
pusha
cmp
mov
xchg
adc
xchg
xor
test
lret
decl
ret
stos
xchg
loope
lods
mov
loopne
or
inc
sub
aam
movsb
aas
dec
jmp
pop
xchg
jnp
push
add
js
jb
aaa
push
push
mov
xor
pop
in
mov
jo
dec
mov
cmp
xchg
jb
cmp
outsb
jge
jge
cmp
add
sub
fldenv
inc
aas
loop
mov
movsl
pop
jo
pop
mov
lods
cs
and
dec
enter
add
aas
pop
mov
add
push
jmp
jge
arpl
lock
cmp
idiv
or
or
push
pop
es
ret
or
fmulp
movzbl
push
sub
push
out
scas
xchg
lods
xchg
and
bound
and
stos
xchg
jge
cmpsb
ret
pop
dec
and
push
lea
and
add
jo
adcl
mov
stos
pusha
mov
add
daa
jl
jecxz
enter
mov
fnstenv
dec
je
or
cmp
pop
fwait
sbb
dec
sarb
jp
xor
add
pop
cmp
or
cwtl
xor
stos
mov
add
mov
jl
fs
jbe
js
fdivl
lods
lea
sahf
sarb
fcoml
mov
repnz
lret
rcl
dec
fstps
test
test
inc
jns
lret
test
sbb
dec
dec
sbb
pop
lret
mov
push
imul
xchg
insl
inc
add
push
xor
jns
xchg
mov
xchg
mov
sub
bound
popf
inc
fistpll
xor
push
daa
cs
add
inc
inc
push
movsb
inc
inc
fsubrl
rclb
sbb
mov
and
mov
popf
dec
ret
cmpsl
fs
pop
fldt
loope
popf
xchg
or
js
bound
mov
scas
scas
cmc
cmpsb
mov
test
or
cwtl
jo
sub
inc
mov
mov
popa
clc
les
repz
pop
xchg
jecxz
sbb
incb
pop
test
xchg
push
adc
stos
xchg
dec
xor
mov
xor
adc
cmc
xor
aas
mov
adc
mov
xor
hlt
gs
stc
mov
or
cmpsl
repz
cmpsb
pop
xorl
xor
int
jae
mov
and
movsb
repnz
stos
jle
jbe
lock
xchg
jge
jns
cmp
or
std
ds
and
jl
push
arpl
lcall
mov
fstpl
movsl
in
xor
mov
orb
add
sub
sbb
jnp
mov
out
int
call
cmc
mov
arpl
int
or
jp
push
pop
or
loopne
cli
popa
jnp
push
pop
std
rolb
js
jb
jo
sub
jb
je
aaa
dec
cmc
add
mov
icebp
or
pusha
jmp
out
jae
pusha
dec
mov
rcrl
inc
jnp
ret
imul
push
pop
rcll
in
and
aas
ret
cmp
fstl
push
nop
mov
xchg
xchg
movsb
add
div
cltd
stos
xor
inc
mov
dec
xchg
inc
hlt
popa
push
inc
or
popl
mov
lock
lods
testb
fidivrs
jl
fs
push
ret
jo
or
test
xor
or
mov
loop
mov
jle
jbe
je
xor
pushf
inc
push
dec
push
push
jmp
out
pop
sbb
push
aaa
scas
sbb
jbe
mov
jno
shld
rcrb
mov
call
push
mov
into
mov
mov
std
jmp
icebp
add
xor
fdivl
inc
jne
out
inc
xor
incl
call
push
imul
movsb
not
jg
xor
fucomp
loop
push
xor
mov
aad
rclb
call
aaa
out
fistps
pop
and
popa
out
push
insl
xor
add
pop
add
jo
mov
loope
pop
outsb
adc
enter
jmp
test
outsb
ljmp
shrb
pushf
mov
pop
repz
rcll
pushf
cmpsl
popf
imull
inc
mov
loop
mov
inc
out
pop
lds
fs
push
inc
lahf
inc
or
scas
rcl
push
mov
loopne
pop
cmc
adc
rorl
pop
mov
negl
mov
xchg
int
mov
ja
xlat
sarl
adc
rorl
leave
pop
cmp
lea
bound
push
add
jg
jae
stos
in
push
add
mov
pop
push
mov
pushf
das
lea
and
movsl
sahf
fdivrs
jl
adc
gs
pop
sub
nop
inc
mov
jle
ret
or
mov
testb
adc
mov
and
out
repnz
cmpsl
and
adc
movsb
cmpsb
push
shrb
loope
scas
test
push
mov
es
mov
in
jns
movsl
dec
stos
add
cs
inc
push
jg
in
xor
jmp
mov
cmc
pop
pop
xchg
sub
mov
sbb
cmp
fcoml
xlat
xchg
stos
and
not
add
mov
imull
push
lea
dec
stc
lock
imull
mov
lods
mov
sbb
sbb
iret
pop
push
fbld
stos
dec
push
push
jp
aaa
jmp
fnstcw
mov
test
lret
sbb
sbb
dec
pushf
push
insl
and
jmp
or
mov
cmp
daa
lret
cmp
mov
pop
jecxz
and
inc
test
call
adc
test
cmpsb
rorb
leave
xchg
out
leave
mov
scas
sti
cmpsl
mov
sbb
cmp
sub
adc
mov
outsb
dec
repz
adc
mov
add
ret
test
cmpsb
data16
jae
arpl
aas
iret
xor
jae
lret
mov
inc
mov
xor
xchg
lods
adc
push
mov
test
jnp
xchg
jns
xor
and
pop
add
sub
shl
adc
rcrb
adc
xchg
popa
ficomps
jnp
sbb
out
mov
jne
jbe
dec
mov
mov
les
dec
dec
or
loop
xor
cmp
push
mov
loop
adc
add
imul
aam
xor
mov
push
shrl
in
xorl
in
inc
cltd
pop
into
sti
addb
xlat
xorb
push
adc
divl
jp
and
sub
push
daa
in
push
jg
subb
loop
inc
inc
mov
xchg
rcr
cmpb
dec
stos
xor
int3
mov
repnz
jbe
gs
int3
cmp
dec
test
imul
mov
jne
mov
bound
and
xor
mov
out
aaa
mov
pusha
ja
xchg
out
push
jo
stos
jecxz
or
sarb
jae
addr16
movsb
xchg
pop
mov
aam
fnstsw
popa
mov
rolb
lods
cwtl
xor
xor
iret
aaa
inc
mov
popf
scas
scas
movsb
add
pop
push
jl
push
ror
fldenv
push
dec
ret
mov
cmp
in
mov
dec
inc
in
mov
rolb
xor
inc
mov
mov
mov
jmp
mov
std
rorb
sbb
or
mov
xor
lods
cmp
xchg
mov
repnz
jo
push
xchg
mov
fsubrs
cmp
int3
fists
adc
cmc
leave
inc
in
jp
inc
cmp
int3
and
jle
lea
mov
addr16
fbld
cli
push
sahf
xchg
jo
jge
fiaddl
add
and
sub
sub
pop
and
insl
nop
movsl
xchg
lcall
xor
dec
lea
add
dec
or
jo
add
mov
das
les
sbb
and
jle
in
lret
mov
jo
push
rcll
repz
ljmp
jl
and
xchg
mov
sbb
leave
lret
adc
ljmp
ljmp
daa
ret
mov
std
mov
pop
imul
push
rcl
pushf
fdivs
lea
or
inc
loopne
in
sub
enter
cmp
jae
mov
inc
out
stos
leave
aaa
add
mov
push
into
cwtl
aad
jg
out
pop
push
pop
insb
lea
loope
loopne
add
ret
mov
ret
inc
cli
scas
dec
aaa
out
aam
sbb
jle
stos
mov
outsl
mov
rorb
jmp
imul
inc
cmp
mov
mov
mov
sbb
daa
mov
insb
rorl
add
leave
pop
nop
dec
stos
aas
popa
jne
mov
add
pop
jmp
cs
cmp
popa
xchg
fisubl
mov
mov
sbb
sbb
mov
fldcw
stos
stos
or
xchg
xor
xor
fisubrs
push
fidivrl
loopne
clc
jo
xor
mov
jns
xchg
push
enter
xlat
rclb
xlat
mov
mov
js
call
sarb
movsl
and
mov
cmp
jno
sbb
psrld
ds
xchg
dec
and
cmp
xchg
push
pop
push
cmp
sub
shll
call
repz
out
in
push
negl
paddsb
xchg
sub
pop
xchg
andl
addr16
or
sub
sub
gs
fnstcw
ret
cmp
dec
mov
loope
dec
jmp
mov
aas
and
pop
and
push
mov
adc
test
inc
rorb
sbb
mov
int3
inc
jge
pop
adc
leave
xchg
cli
jg
or
xorb
enter
push
out
pop
and
or
adc
sahf
mov
mov
push
fcomp
xor
ja
ret
cmpsl
or
mov
cmp
pop
pop
ja
fs
ljmp
aas
jns
faddl
add
loopne
aad
repz
repnz
lea
cwtl
adc
iret
or
loopne
jge
shll
cmpsb
fimuls
leave
cmpsb
jne
add
xor
std
xor
dec
int
sub
cmp
xchg
in
and
cmpsl
loope
and
jg
shlb
outsb
lock
or
in
xor
mov
in
lds
pop
pop
lcall
inc
mov
das
mov
nop
mov
mov
movl
mov
je
outsl
and
xchg
or
inc
xchg
mov
jecxz
push
aam
dec
or
push
cmpsl
call
jg
dec
pop
cwtl
sub
mov
dec
cwtl
xchg
cmp
add
sbb
std
jmp
dec
ss
mov
in
fstps
loopne
pop
stc
clc
xchg
push
out
ds
xor
insb
xchg
scas
jo
out
xchg
mov
aam
in
cmp
gs
sub
inc
pop
inc
jno
adc
push
ja
pusha
and
sbb
add
mov
inc
idivb
inc
into
jg
push
lret
lret
mov
or
ret
mov
xchg
cmp
pop
sbb
cld
mov
push
in
fisttpll
pusha
std
mov
mov
and
xchg
mov
sbb
arpl
xor
je
fcompl
or
jl
jnp
inc
je
pop
or
xor
ret
cmp
xchg
adc
sbb
push
negl
pop
jp
jns
adc
mov
xchg
pop
roll
and
sti
clc
mov
dec
pop
xor
or
mov
les
lret
pop
dec
test
and
ljmp
repnz
sti
jne
notl
fsub
int3
sub
outsl
fwait
or
mov
pop
cld
pop
jp
outsb
fnstenv
dec
adc
cmp
nop
gs
push
mov
dec
sbb
adc
and
lock
xorl
cltd
adc
mov
adc
pop
dec
cmp
and
inc
cmp
mov
or
mov
mov
push
mov
inc
arpl
popf
pop
cmp
xchg
call
or
insb
leave
or
dec
pop
loope
in
sbb
push
scas
sbb
loop
bound
sti
jmp
bound
fsubr
dec
dec
cs
cmpsb
push
pop
fdivrs
and
dec
popa
inc
adc
pop
and
jmp
inc
mov
jmp
sub
and
mov
bnd
andb
lds
test
push
sbb
pop
scas
stos
repnz
jo
add
sub
rcr
popf
mov
decl
sbb
push
add
outsb
adc
dec
jbe
mov
dec
push
decb
dec
incb
jle
addl
in
ret
adc
scas
loope
mov
fmuls
jle
andb
pop
scas
ss
dec
cltd
cmpsb
or
pop
xlat
sub
pop
mov
push
mov
cmp
test
xchg
fxch
dec
cmp
pop
mov
test
lret
push
int3
sbb
sbbl
fucomip
pop
loopne
add
xor
out
push
jne
jo
xor
add
mov
or
fs
jnp
insl
jmp
test
pop
loop
imul
clc
sbb
sbb
dec
test
shlb
subl
jns
inc
add
jmp
ja
jmp
adc
and
dec
push
xchg
jmp
cmc
out
pop
psubb
push
pop
xchg
int
pop
leave
or
call
pop
cli
or
out
xchg
js
sti
enter
mov
imul
fmull
xchg
jl
push
popa
jns
jbe
js
cmp
aaa
insl
out
in
addr16
ja
add
adc
add
rcrb
fldt
mov
fs
das
and
clc
jns
add
outsl
hlt
popf
insb
sahf
xor
pop
int3
mov
push
inc
ret
loopne
dec
stc
dec
push
ja
nop
push
stc
dec
xor
jo
xchg
lea
aam
cmc
inc
test
mov
inc
mov
adc
mov
ljmp
sti
fstp
cmp
aaa
xchg
mov
movsl
xor
arpl
jo
lock
push
cmp
add
inc
nop
xchg
addr16
mov
shlb
mov
adc
ss
inc
pushf
gs
xor
lcall
jmp
lea
sub
test
sbb
lods
sahf
cltd
mov
push
mov
ds
xlat
cli
and
fmull
bound
push
push
xchg
add
dec
pop
pusha
je
pop
adc
mov
and
mov
inc
leave
mov
hlt
sub
cmpsb
mov
add
out
je
lahf
insb
push
sub
push
sub
jge
lcall
fdivs
test
in
fcoml
xchg
leave
pop
mov
add
pop
out
ja
jmp
push
das
dec
push
js
das
mov
pushf
and
or
xor
ficoml
fdivs
sbb
mov
loopne
pop
cmpsb
xor
cld
test
push
adc
or
jp
mov
jmp
lods
std
push
and
ds
cmc
jae
fs
xchg
mov
xor
dec
cmpsb
or
pop
in
es
pop
popf
xchg
stc
pop
lock
mov
and
inc
jl
pusha
or
jb
pop
sbb
dec
je
decl
dec
xchg
mov
mov
lds
movsl
sub
loop
jnp
cmp
fsubs
jle
lods
jl
imul
testb
lds
adc
or
loop
lea
hlt
and
pushf
mov
sub
imul
into
les
lods
jge
mov
push
cs
pop
dec
pop
xchg
inc
movsl
cmp
cmp
xor
test
xchg
lods
jbe
push
fdiv
add
sbb
mov
add
fistpll
scas
into
sbb
jecxz
push
daa
jle
add
lock
ljmp
movsb
pop
in
ret
scas
mov
mov
jno
in
std
pop
dec
test
cmpsl
fsubr
mov
pop
test
push
jg
dec
cs
jne
icebp
mov
and
jne
adc
rcrb
es
sbb
and
daa
fs
stos
push
push
movsb
jp
es
pop
test
adc
cmp
jnp
imul
sbb
mov
das
lret
out
lock
mov
or
iret
pop
rolb
xchg
dec
loopne
jecxz
mov
jmp
fldt
fadd
shrl
add
sub
jae
loop
pop
sbb
mov
dec
xchg
jne
add
call
lods
xor
icebp
int
dec
push
outsb
inc
hlt
mov
add
push
insl
mov
ret
mov
inc
lea
dec
dec
sub
jne
pop
mov
pop
ljmp
orl
inc
mov
arpl
ret
call
add
into
add
es
filds
push
fadds
jmp
mov
pop
jo
cmp
test
ja
mov
aaa
inc
arpl
ljmp
dec
or
div
mov
movsl
loope
pop
test
ja
and
fsubrs
sub
sarb
add
scas
in
adc
push
xchg
push
and
mov
dec
ja
adc
std
fsubrs
pop
mov
out
aas
adc
pop
scas
jmp
loope
mov
ljmp
mov
mulb
imulb
int
sub
adc
hlt
je
loopne
ret
jge
and
adc
rorl
mov
lock
or
xor
jmp
xor
and
dec
pop
xor
pop
insl
ror
test
sub
in
jmp
stc
cmp
nop
dec
rcr
mov
lcall
jp
adc
push
rorb
outsb
iret
mov
popa
inc
out
push
out
mov
lahf
or
in
rolb
jge
lret
subl
lret
ret
dec
movsb
cwtl
cmp
push
pusha
mov
nop
rcr
ret
adc
mov
add
push
sbb
mov
and
ficompl
jae
mov
enter
adc
jle
repnz
shlb
imul
cmp
jg
or
insl
cmp
jg
pop
push
dec
mov
lcall
frstor
stos
gs
shll
push
mov
push
sub
mov
adc
out
mov
xchg
ss
ds
pusha
aaa
insl
out
outsb
in
xchg
or
fidivrl
mov
out
mov
sbb
sbb
int3
dec
fsub
adc
adc
loopne
mov
in
in
test
test
jle
jecxz
fidivs
out
or
xchg
xchg
aad
jmp
test
call
sahf
ret
jne
or
cwtl
icebp
aaa
jle
sbb
add
popf
jbe
jo
ja
popa
xor
and
ss
cwtl
sahf
push
and
pop
aas
mov
aas
push
repz
xchg
cmpsl
xchg
adc
int3
mov
fdivrl
into
sti
mov
lods
test
jle
xchg
ficompl
and
jecxz
lea
int
dec
cmp
add
popl
mov
mov
ret
insb
mov
xchg
mov
ret
in
mov
sbb
imull
out
ret
jo
pop
push
pop
jb
je,pt
daa
xchg
je
jnp
mov
mov
mov
add
push
mov
lds
sub
bnd
mov
ror
pop
rcrl
mov
add
adc
js
lods
cli
inc
stc
xchg
inc
or
imul
mov
jns
lret
mov
hlt
in
dec
and
sahf
lods
jl
stc
dec
hlt
fwait
mov
add
imull
in
daa
test
sbb
jecxz
dec
jnp
xor
adcb
mov
inc
ret
xor
inc
cmp
dec
jns
mov
or
rcrl
cmp
xor
add
xchg
not
mov
and
push
mov
xchg
gs
and
test
push
lock
dec
add
add
dec
pop
bswap
inc
pop
pop
in
std
enter
sub
mov
or
cltd
xor
loop
inc
shrb
or
fisubl
cmpl
mov
in
enter
lods
adc
add
lods
jae
shrl
push
sbb
gs
adc
fwait
insb
sub
sti
inc
jmp
inc
and
ja
sbbl
cltd
xchg
dec
dec
cld
inc
adc
cmp
jae
add
jmp
mov
push
rorb
ljmp
cmp
sahf
push
lock
adc
push
sub
adc
shll
insb
sbb
sub
cmp
pushf
xor
nop
lahf
mov
cmp
es
mov
jo
aam
scas
into
mov
insb
test
daa
and
add
lret
xchg
test
cltd
xor
push
lods
sbb
jae
or
mov
loope
loopne
mov
mull
cmp
cmp
jbe
movsb
xor
mov
jo
xor
jnp
jle
jp
inc
lock
gs
aam
outsl
dec
test
test
xchg
repnz
testl
xchg
ds
lods
mov
mov
out
adc
cmp
iret
lea
call
rorl
and
dec
call
or
lock
fwait
lods
sbb
and
dec
addr16
mov
sahf
insb
fstl
xor
jle
dec
mov
stc
pop
jb
xor
add
cmp
push
stos
fadd
fstps
xchg
lcall
mov
adc
jg
adc
into
dec
out
test
pop
jne
arpl
repnz
scas
adc
mov
data16
test
push
test
aad
jecxz
jo
cmp
push
adc
sub
adc
in
mov
jns
repz
imul
adc
repz
xchg
hlt
push
test
dec
mov
add
daa
push
sub
aad
daa
dec
push
inc
pushf
jb
sbb
rolb
pop
cmpb
into
in
cmp
pop
lahf
push
lcall
dec
push
into
in
pop
dec
push
or
rolb
pop
mov
les
xchg
push
and
jp
aas
or
xchg
sbb
xlat
fstpl
inc
ficoml
jecxz
xchg
outsl
jecxz
aas
subb
movsb
in
repnz
push
orb
faddl
lret
rclb
dec
sub
inc
push
lock
mov
push
imul
lock
sub
cs
std
jge
jp
mov
rcll
in
adc
jl
pop
jge
mov
xorl
add
iret
ret
push
or
scas
xor
xchg
gs
out
daa
call
lea
scas
je
pushf
and
or
and
inc
sbbb
jns
sub
outsb
orl
das
jae
jmp
fucomp
dec
fsubrs
jmp
sub
lock
hlt
dec
cwtl
pop
mov
imul
shrb
sbb
mov
sar
or
out
clc
movsb
sbb
xor
aas
roll
addr16
mov
mov
inc
xor
mov
cmp
jbe
rcrb
call
xchg
pop
insl
push
into
dec
mov
xchg
pop
jl
push
ss
xchg
fidivl
mov
inc
add
xchg
pop
pop
icebp
mov
fldenv
and
fs
inc
mov
push
sub
lock
mov
mov
stc
sub
pop
sbb
xchg
clc
lcall
js
std
mov
stos
cmp
ss
adc
adc
dec
ret
push
mov
aaa
stos
add
repz
jb
rcll
movl
mov
and
mov
mov
nop
xchg
xchg
loopne
inc
push
xor
mov
inc
sub
push
nop
ret
popa
js
sbb
rcll
xor
xchg
out
in
in
aas
popa
mov
or
jge
inc
cmpsb
lock
adc
in
in
sarl
adc
mov
dec
out
xor
inc
pushf
inc
mov
push
adc
xchg
dec
pop
andb
pop
popf
cmp
icebp
out
adc
fisttpl
int3
lds
test
dec
adcb
sar
bound
test
sub
out
jns
out
and
adc
rorl
jo
lds
cwtl
push
mov
popa
inc
pushf
jb
aad
xor
push
fwait
ss
add
mov
outsl
mov
fstpt
mov
repnz
jg
jns
inc
stos
repnz
dec
sbbl
cmpsb
subl
jmp
les
mov
int3
mov
mov
rorl
xchg
mov
leave
jbe
and
sub
insb
imul
mulb
ror
fldcw
and
and
scas
cmp
sbb
roll
mov
clc
xchg
mov
jl
mov
mov
shr
push
sarl
popf
or
inc
cmpsb
sbb
sub
stc
jl
stc
je
xor
add
icebp
xor
ret
fstpt
push
inc
out
sahf
dec
fs
ret
xor
inc
and
insb
xchg
ror
bound
lahf
xchg
xchg
add
out
gs
loopne
ja
cs
and
inc
loope
js
andl
data16
nop
popa
aaa
push
mov
lcall
mov
dec
push
xchg
out
popf
addps
enter
adc
dec
sahf
ljmp
lock
les
dec
xchg
ret
jmp
mov
mov
jb
sub
adc
ds
and
clc
orb
aam
in
fiadds
mov
push
cs
movsb
inc
fildll
leave
fstps
ljmp
repnz
addr16
loop
or
ljmp
inc
jno
sbb
mov
popf
out
mov
and
fcoml
sub
aaa
jno
and
push
sbb
xchg
sub
xchg
mov
adc
mov
imul
popl
sbb
inc
fucomip
xor
cwtl
ss
adc
push
cs
mov
arpl
xchg
cmpb
dec
into
or
js
mov
fbstp
cli
cmp
iret
mov
aad
negb
test
jle
adc
imul
mov
mov
push
xchg
dec
dec
mov
push
sub
fiadds
aad
adc
dec
aam
cmp
iret
sbb
adc
jge
cld
adc
aad
gs
test
js
fmulp
into
and
rorb
into
test
pop
mov
pop
aas
andb
push
sub
sbb
add
inc
cmc
jmp
imul
ss
cli
mov
jmp
mov
mov
xchg
movsl
mov
fnstcw
jbe
fimull
jb
test
mov
add
mov
insl
lock
inc
fnsave
lods
imul
pop
fadds
inc
fistpll
push
cmp
sbbl
inc
adc
xchg
pop
out
ret
lds
cmc
xor
std
pusha
add
sbb
out
mov
cli
cli
mov
sub
jg
lret
sub
jb
sub
lcall
xor
sbb
inc
call
sbb
cltd
fistl
mov
aas
and
pop
dec
jnp
shlb
mov
dec
mov
add
orb
bnd
adc
mov
stos
test
push
pop
sbb
adc
mov
aaa
in
jb
or
pusha
mov
decl
aad
fsubs
dec
pavgb
or
into
rcll
add
leave
dec
std
dec
int3
xchg
fs
adc
aam
je
sahf
jp
push
add
push
leave
into
mov
mov
loopne
xchg
repz
dec
popf
mov
test
xchg
push
pop
or
mov
adc
lods
loop
push
jb
adc
mov
popf
aaa
jge
sub
mov
or
mov
clc
fnstsw
jg
or
dec
cmp
mov
popf
jo
out
ret
mov
pop
lahf
ljmp
int3
inc
xchg
push
push
dec
clc
aaa
sahf
sti
mov
aad
insb
jge
sub
cmp
lock
mov
mov
leave
push
in
in
mov
dec
or
scas
jnp
popf
mov
inc
mov
or
xchg
jle
stos
js
loopne
mov
mov
pop
and
lret
xchg
add
xor
cmp
fxch
pop
dec
mov
and
add
mov
or
lcall
sbb
xchg
movsb
jp
in
rcll
mov
ret
nop
in
inc
call
rclb
aaa
mov
iret
stc
ret
mov
and
cli
and
and
pop
fsub
inc
pop
sbb
pop
pop
pandn
out
push
dec
cmp
stos
cmp
push
xchg
mov
shlb
inc
lret
and
or
xchg
pusha
popa
cmp
lea
out
pop
mov
push
daa
inc
mov
sub
rcrb
add
and
jno
cwtl
jae
je
movsb
cmp
push
dec
jl
lock
stos
pushf
and
push
or
add
sahf
jbe
sub
jmp
fsubr
sbb
dec
outsl
bound
mov
mov
mov
fistps
outsl
rorl
enter
das
dec
hlt
mov
js
push
pop
mov
dec
and
push
and
ja
test
fisubrl
xor
les
xorl
jge
and
fwait
sbb
pop
sub
stos
jle
mov
aad
out
or
add
cmp
outsb
dec
popf
hlt
test
push
out
xor
rcll
adc
mov
fsubrs
daa
movsb
mov
pop
fiadds
les
pushf
scas
mov
fisubrl
fldenv
sub
ds
mov
loope
xor
and
inc
int3
jno
adc
dec
jbe
mov
jns
les
clc
xor
cs
pop
and
insb
or
andb
ds
daa
stos
es
push
loopne
aaa
mov
das
js
imul
pop
fwait
add
xchg
aad
sub
add
xor
jb
loop
add
jbe
and
sub
in
xchg
and
pushf
jg
fcmovnu
push
pop
notb
mov
push
push
and
cwtl
lods
dec
pop
mov
lcall
movsl
push
cmc
or
jl
aaa
jp
lea
mov
xor
in
arpl
jb
mov
std
xchg
aad
ret
fs
push
les
dec
ret
xchg
movsl
addr16
add
std
cmp
fs
bound
test
jbe
xchg
adc
bound
pusha
push
inc
cmpsb
push
sub
je
and
shlb
sub
mov
test
inc
or
je
std
cwtl
xor
fcoml
pop
adc
mov
push
in
push
adc
in
fldt
jne
inc
jge
es
mov
es
pop
iret
popf
jge
sahf
inc
pop
repz
jg
int3
pop
clc
mov
and
scas
pop
stos
aas
popf
sbb
test
test
or
icebp
das
jmp
in
cmp
fdivrs
jno
jbe
push
fmulp
inc
sbb
xorb
iret
mov
jne
mov
movsl
pop
push
cmpsb
push
leave
aam
inc
aas
hlt
mov
movsb
jne
inc
jp
xor
mov
into
pop
xchg
bound
xchg
inc
mov
outsl
int3
movsl
mulb
sbb
sub
mov
in
push
add
mov
aaa
xor
sarw
leave
xchg
shll
or
sub
and
cs
ss
push
dec
nop
scas
dec
push
dec
imul
hlt
mov
aam
add
js
dec
push
and
push
shrb
packsswb
mov
arpl
in
xchg
iret
scas
xchg
out
adc
inc
es
mov
sub
xchg
not
adc
aaa
lret
push
rcl
pop
xorl
outsb
int3
clc
lods
stos
and
ljmp
mov
in
jnp
iret
loopne
nop
push
pusha
ja
dec
adc
sbbb
jnp
mov
sub
adc
mov
aad
and
add
sub
pop
je
cmp
pop
int3
mov
mov
outsb
xlat
test
jge
sbb
cmp
pop
add
jno
dec
pop
push
jl
mov
push
xor
xchg
pop
xchg
adc
mov
es
ficoml
nop
das
enter
push
add
negb
push
sub
mov
pop
pusha
dec
das
mov
ja
push
aaa
add
ret
mov
data16
jge
pop
add
lahf
pop
leave
fdivrs
pop
rolb
stos
add
in
adc
aad
push
sub
add
fiadds
lods
arpl
xchg
jp
popf
mov
in
shll
pop
jl
out
outsb
or
mov
ffreep
mov
cmp
mov
hlt
lret
mov
lds
add
test
popa
lds
adc
stc
dec
pop
outsl
out
jmp
mov
dec
aad
out
dec
div
or
ret
ja
fistpl
add
cmpl
sbb
lret
dec
negl
test
and
outsb
cli
cs
sbbl
mov
sub
jmp
sahf
inc
jo
xlat
jbe
aas
xor
jmp
movsb
and
cmpsb
pop
movsl
inc
fildll
iret
add
mov
aam
in
test
cmp
xchg
test
adc
xor
mov
loopne
sbb
pop
movsl
nop
stos
jb
xchg
dec
repz
mull
jnp
add
xor
hlt
mov
and
pop
dec
pop
addr16
arpl
xorb
dec
xchg
add
xchg
xchg
xchg
ljmp
sbb
mov
addr16
push
fwait
lahf
or
stc
jno
clc
das
xchg
mov
int3
adc
lock
stos
or
cwtl
pop
and
mov
int
add
fdivs
mov
int3
loop
imul
rcrl
cld
out
mov
xor
shll
daa
movsb
or
xchg
out
ret
adc
lds
sarl
pusha
fisttps
pop
es
jb
mov
aam
add
andps
xchg
cmp
je
ror
xchg
je
test
xorl
cmp
pop
and
in
rclb
ljmp
fdivrs
repnz
push
sbb
cmp
mov
dec
mov
aad
jecxz
push
sbb
jo
test
mov
and
mov
push
mov
sbbb
cltd
push
mov
repz
mov
push
lret
mov
inc
sub
addr16
mul
aaa
lea
cltd
pop
mov
jno
in
lea
jb
lret
loop
in
div
mov
cli
js
repz
sub
pop
test
popa
shlb
adc
jae
jle
push
jae
movsb
dec
xor
repz
jns
mov
pop
xchg
hlt
cmp
cli
xlat
mov
in
sbb
mov
rorl
pop
adc
fisttpl
inc
mov
rclb
mov
xor
shr
xor
and
ja
sbb
nop
movsb
aas
jne
fnstenv
cmc
rclb
sub
or
sub
or
call
mov
lahf
fists
push
subl
inc
js
pop
pop
mov
leave
popa
xor
fcmovnbe
mov
and
pop
js
cwtl
int3
jmp
stc
push
adcb
sahf
sbb
mov
push
ja
stc
sbb
sti
jge
xchg
push
stos
push
test
add
ficoml
mov
pushf
xor
imul
xor
mov
mov
loope
dec
inc
bound
call
pop
outsb
daa
insl
cmpsl
out
and
push
pmulhw
dec
imul
pop
and
jne
mov
cmp
cmp
test
sbb
fcoml
xchg
fdivrs
int3
popa
imul
lret
aad
clc
rcrl
cltd
movsl
push
fldcw
mov
sub
imul
sbb
sub
pop
cmp
in
mov
pop
test
inc
inc
inc
xlat
mov
mov
stc
push
cmp
mov
sub
int3
and
es
mov
and
mov
jg
sbb
jp
icebp
pop
adc
out
pop
imul
push
or
sbb
push
push
test
jae
add
shl
mov
test
sbb
adc
repnz
inc
shr
aad
outsb
mov
es
lock
add
popf
adc
subb
in
mov
imul
out
push
push
xchg
loop
push
pop
fnstenv
pop
xlat
cmpb
lret
adc
cmp
mov
mov
push
in
hlt
sub
fwait
dec
je
in
xor
and
shrl
addr16
aam
insb
out
stc
and
xor
push
xchg
test
movsl
lcall
imul
push
sub
loop
arpl
insl
adc
or
inc
inc
ret
sub
jbe
xchg
mov
scas
mov
pop
int
push
mov
cmp
xor
mov
xor
fsts
dec
out
inc
fldt
shll
cmp
mov
mov
int
pop
xlat
and
pop
xor
xchg
mov
inc
pop
xor
pop
xchg
xchg
xchg
inc
xchg
in
pop
dec
xor
je
ja
rcrl
shl
shlb
in
and
fnstcw
fiadds
mov
jns
and
and
push
cmp
inc
xchg
mov
fwait
jb
aaa
mov
mov
pusha
sub
lcall
adc
adc
loop
dec
clc
cli
dec
cmpsb
push
iret
mov
int
dec
ljmp
out
lods
mov
jbe
sub
mov
or
inc
jle
or
in
stc
test
mov
mov
mov
mov
xor
test
xchg
mov
arpl
aas
pop
mov
bnd
bound
daa
pop
lods
jnp
loop
rcr
loopne
out
or
shlb
dec
movsl
add
mov
and
or
out
inc
fdivrs
or
lret
dec
in
xor
sahf
mov
ljmp
sub
data16
and
fsubl
imul
jno
dec
pop
aas
adc
in
pop
sub
mov
aad
xlat
and
or
mov
or
adc
lods
pop
stc
div
dec
pop
mov
mov
stc
in
push
mov
pop
jmp
xchg
movsb
jmp
icebp
js
pop
mov
ss
jg
add
into
or
movsb
scas
pop
pop
xor
and
mov
mov
ret
cmpsb
outsb
inc
dec
sbb
sbb
cmpsl
xchg
adc
or
lods
in
call
lods
cmp
repz
js
fidivl
xchg
fs
aam
sub
movsb
or
or
sub
fcomp
xlat
cld
mov
add
jnp
mov
inc
pop
adc
stc
inc
into
sbb
jl
cld
in
jo
bnd
iret
fs
mov
lock
ljmp
add
mov
inc
mov
pushf
sbb
inc
nop
and
js
and
test
sti
pop
decl
lock
push
cmpsb
add
popf
pop
mov
push
stos
and
xchg
data16
xlat
mov
mov
in
mov
jno
rclb
mov
into
daa
insl
jmp
xchg
jecxz
clc
sbb
jl
repnz
inc
mov
cmp
mov
push
lcall
cmp
mov
out
ljmp
mov
test
xchg
inc
ret
jl
push
lahf
push
xchg
sub
add
mov
jbe
xchg
hlt
out
sbb
or
inc
mov
aas
fistl
sub
push
fdivrp
add
out
shrl
test
adc
lods
sub
pop
jg
insb
jns
xchg
push
dec
pop
mov
sub
mov
stc
jbe
ss
stos
lcall
and
scas
xchg
or
push
mov
jmp
xor
ss
dec
pop
sub
lea
xchg
cmp
das
fxch
mov
cmp
scas
imul
fs
rcrl
int
pop
imul
xor
loop
mov
sti
xchg
test
sub
mov
lods
xchg
xor
mov
jp
mov
jae
and
push
jge
adc
hlt
fdivrp
xchg
jns
jp
pop
lds
jb
or
fidivrl
mov
and
mov
jmp
cmp
cmp
dec
push
fcmovb
dec
cltd
subb
inc
popfw
movsb
xchg
xchg
std
ljmp
addr16
lock
inc
cmp
loopne
push
cmpl
sub
ret
jp
mov
mov
jb
mov
pop
das
in
dec
je
int3
sbb
jbe
fnstsw
jae
dec
pushw
movlps
mov
fidivl
int
pop
aad
mov
mov
aam
popf
lret
notb
mov
pop
addr16
jne
pushf
in
shrb
add
push
mov
aaa
stc
add
pop
push
stos
enter
push
mov
ficoml
in
iret
xlat
inc
stc
inc
arpl
mov
mov
clc
and
cwtl
and
dec
jbe
lods
cmp
mov
imul
adc
mov
dec
ljmp
fs
into
test
insb
jp
xorb
std
sbb
add
mov
sbb
lods
add
insb
sbb
sbb
xchg
subb
data16
ret
xor
das
ret
or
daa
jb
stc
mov
inc
loop,pn
sbbl
cld
cmc
out
sbb
and
call
test
popa
add
ja
sbb
cmp
dec
adc
not
bound
inc
jbe
and
lret
stos
sub
in
shll
xchg
aaa
stos
add
pop
cld
aas
in
sbb
test
mov
cs
fs
dec
push
and
dec
das
pop
sbb
lret
pop
loopne
ret
fimull
push
adc
adc
outsb
inc
inc
dec
lock
push
test
add
or
jno
xchg
jg
xchg
push
ds
mov
fmull
dec
imulb
add
cmp
mov
pop
mov
xchg
scas
fldt
jae
ja
int
orl
out
push
push
push
fs
jns
loopne
push
cmc
sub
test
ljmp
fisubrs
mov
sub
ret
sarl
lret
adc
xchg
iret
mov
outsl
mov
mov
outsb
sub
lods
repz
sbb
repz
xchg
jmp
cmp
cli
bound
gs
mov
jg
and
addr16
pusha
jecxz
ss
popa
fs
dec
mov
mov
jmp
icebp
lret
dec
dec
dec
testb
aaa
test
adc
sti
cmovo
adc
daa
mov
mov
push
aad
add
ret
out
pop
sbb
pop
cld
and
adc
adc
fisubrl
cmp
sub
stos
lods
push
cmp
rorb
icebp
pop
outsb
ljmp
subl
mov
jnp
cmp
jne
add
aaa
dec
hlt
pop
xchg
test
jo
push
sarl
mov
jnp
loope
jae
or
dec
jns
sub
aas
mov
xor
pushf
push
fsubl
pop
xchg
add
int
sub
outsl
and
imul
lea
and
mov
pop
out
aam
jl
mov
mov
xor
popl
mov
cmpsb
jge
inc
test
xor
mull
cmp
jecxz
movsb
cmp
test
inc
push
cmp
lock
inc
mov
int
inc
pop
mov
pop
rcrb
movb
lret
sbb
or
lahf
cmpsb
jno
inc
shll
pop
addb
das
jb
mov
inc
lcall
sub
mov
sarb
jmp
xor
mov
imull
mov
and
in
stos
jns
dec
repnz
fstpl
mov
mov
sub
aad
sbb
dec
loope
idiv
jns
mov
enter
fisttps
or
adc
xchg
lds
inc
mov
orb
mov
mov
fbstp
mov
fidivrl
push
inc
enter
jae
push
bound
shrl
mov
outsl
movsl
push
inc
loopne
icebp
sahf
loop
rcrb
cmpsl
mov
xchg
mov
test
push
and
mov
cmc
inc
ficompl
imul
test
jns
insb
mov
adc
pop
pop
add
mov
sbb
and
pop
mov
std
jo
cmpsl
sbb
jnp
outsb
test
or
std
mov
std
cmp
pusha
push
push
xor
out
cmp
rcll
pop
push
add
xor
es
dec
dec
out
aaa
pop
in
cwtl
xor
aas
pop
and
xchg
xchg
cmp
repnz
adc
adcb
repnz
test
dec
fists
jae
insl
sbb
fimull
push
mov
lret
dec
fidivl
mov
inc
arpl
les
xchg
cmp
jecxz
outsl
adc
mov
pushf
adc
jns
movsb
ret
out
rorl
or
lods
stc
pop
adc
das
jmp
dec
cltd
fidivrl
mov
arpl
test
xor
data16
fwait
mov
adc
mov
lds
loop
jae
mov
mov
insl
pop
mov
aam
pop
mov
fprem1
xchg
adc
lret
in
mov
xchg
push
das
addr16
add
inc
dec
lock
mull
sahf
loope
lea
xor
adc
jg
and
fwait
jno
sbb
fcoms
fiadds
scas
stc
pop
sahf
sbb
mov
bound
mov
jns
imul
jae
mov
repz
cli
stos
fcoms
and
sbb
mov
fldenv
xlat
popf
stc
cmc
and
mov
dec
mul
pop
pop
flds
mov
push
mov
ffreep
add
lods
mov
fisubs
jmp
xchg
insb
push
ficomps
aam
lcall
mov
pop
out
sahf
push
imul
popa
inc
and
mov
into
fsin
popf
xchg
sbb
sub
jae
fwait
jo
fisubs
test
mov
or
jle
outsb
jmp
lret
loopne
add
cwtl
int
out
loop
shr
int
repnz
pop
push
mov
bound
std
lods
rolb
jecxz
shll
out
es
arpl
pop
cmpsl
int3
aaa
xchg
enter
movsb
idivl
inc
adc
or
loopne
dec
shrb
xchg
out
inc
sarl
cmp
ret
mov
test
and
xor
jp
outsl
cld
push
repnz
adc
mov
arpl
out
mov
mov
inc
mov
inc
mov
inc
inc
mov
cs
shrb
mov
out
idivb
pop
adc
add
in
push
sbb
jl
or
mov
push
xchg
cmp
mov
lods
adc
mov
hlt
std
cld
mov
repz
xchg
arpl
dec
adc
loopne
xchg
cmc
push
mov
or
cmp
out
dec
in
sub
enter
call
repnz
fcmovnbe
daa
push
cmp
call
pop
xlat
mov
nop
dec
and
and
cld
rolb
jle
cmp
dec
test
jno
and
mov
ljmp
test
jp
mov
sub
mov
filds
xchg
cld
dec
ljmp
nop
mov
lret
imul
scas
mov
dec
xchg
mov
xor
push
repnz
pop
push
xchg
pop
cmp
xor
lock
and
repnz
adc
mov
shl
fisttps
cmp
pop
push
popf
xchg
adc
cmpsb
mov
sbb
push
gs
and
add
or
xchg
jne
cmp
test
or
pusha
sbb
adc
push
lcall
xchg
pushf
inc
fsubl
and
cmp
out
jp
dec
fisttpll
pop
adc
mov
pop
call
add
and
js
ss
and
ficoms
or
imul
shl
xchg
fsubr
xor
lea
dec
incb
rcll
cwtl
stos
inc
jnp
and
push
ret
xor
dec
jp
test
cltd
sbb
movsb
dec
adc
mov
sbb
scas
leave
outsb
mov
lock
std
gs
mov
mov
add
cmp
and
sub
dec
push
in
arpl
test
mov
shrd
mov
pop
push
scas
jecxz
xchg
pop
sbb
scas
jbe
movsl
test
cmp
out
lahf
or
addb
lods
mov
das
stc
cmp
xchg
je
popf
xor
fidivs
ja
pop
mov
fistl
popa
or
repz
cmp
and
add
dec
ljmp
pop
cmp
pop
inc
pop
fsub
pop
or
lret
xchg
cmpsb
aad
xchg
xchg
data16
and
push
dec
jo
pop
jne
mov
rcrl
imul
dec
inc
or
jb
loop
pop
push
enter
cmp
or
mov
pop
push
cltd
incb
inc
mov
std
sbb
mov
xor
mov
stos
ficoml
adc
inc
cmpsl
je
cld
fadd
mov
cmpl
mov
orl
jge
lcall
jne
xor
dec
jmp
lahf
mov
in
stc
xor
pushl
leave
repnz
jnp
out
scas
loope
lods
repz
xor
mov
jp
mov
adc
inc
js
pop
cmp
cmp
scas
sub
out
sahf
mov
mov
xchg
jmp
jo
repz
test
mov
xchg
movsb
inc
and
xor
in
cli
add
ljmp
inc
adcb
ss
push
cmp
xlat
adc
lods
mov
sub
jnp
xor
xor
fsubrl
inc
pop
lahf
cltd
test
cmp
mov
inc
pop
lock
push
mov
jecxz
sarl
add
ss
lret
addl
cwtl
mov
xchg
std
lods
cmpsl
jnp
stos
mov
or
lret
xchg
push
insl
sahf
sub
aam
mov
and
decb
pop
lock
mov
imul
and
notb
outsl
sbbl
and
pushf
shl
repz
mov
cld
mov
xor
ljmp
xchg
adc
sub
inc
and
setbe
and
imul
notb
pop
push
xor
mov
or
dec
in
js
repz
lret
cmp
hlt
popa
add
aam
adc
xchg
pop
and
jmp
xchg
pop
cmp
popf
mov
xor
aaa
cmpsb
add
js
test
outsl
aas
call
ret
mov
fdivl
mov
and
xor
js
int
sub
loopne
jle
bound
bound
add
arpl
pop
lea
and
lock
cld
jle
mov
sar
sahf
lcall
negl
rcll
adc
inc
xorb
add
aad
xor
push
pop
sub
fisttpll
pop
sbb
or
push
sbb
fdivs
aas
hlt
ja
ljmp
or
int3
aaa
out
mov
rorb
sbb
xor
loopne
fmull
jl
pop
movsl
fisttps
xchg
in
push
push
and
mov
out
popf
mov
inc
xchg
testb
ds
in
lods
dec
in
sbb
mov
divl
std
test
xchg
xchg
cs
mov
jge
xchg
jecxz
cmpsl
or
cmpsb
or
inc
mov
clc
stos
and
or
push
mov
fcoml
push
pushf
bound
scas
scas
mov
or
push
sbb
addr16
daa
xor
loopne
push
inc
fwait
push
faddl
pop
pop
xchg
cmp
ficoml
jl
out
fwait
dec
jne
rorl
ret
mov
push
aam
movsb
out
fnsave
or
sbb
std
add
ret
mov
and
mov
add
out
aaa
popa
cmpsl
repz
addr16
dec
xor
push
push
insb
pop
fldl
aaa
inc
pop
outsb
xchg
cmpsl
mov
rolb
xor
jp
sahf
mov
jle
pop
sbb
dec
icebp
inc
lret
mov
aas
popf
dec
push
out
es
pop
push
lret
loop
cli
cltd
add
gs
sub
ret
and
addr16
fxch
ljmp
out
sub
pop
and
mov
cmc
test
push
inc
in
repnz
mov
inc
xchg
jo
pop
jge
pusha
jmp
mov
in
mov
pop
int
adc
pop
sub
jp
dec
fprem1
inc
cmp
jo
pop
idivb
stc
pop
or
iret
push
cmpsl
jp
cmpsb
adc
jae
cmpsl
dec
mov
mov
dec
test
fsubrp
lret
repnz
cmp
negb
aam
ret
jo
push
add
inc
inc
jg
rorb
pop
inc
or
andb
pop
imul
sbb
mov
lds
xchg
sbb
fsubl
jecxz
dec
hlt
push
pop
fwait
add
xorb
sbb
and
mov
nop
in
out
aas
nop
or
adc
xor
aaa
jb
mov
addr16
test
cs
mov
xchg
movsb
aas
sub
aad
and
dec
inc
rcrl
jno
clc
or
mov
dec
and
hlt
movsb
pushl
fneni(8087
mov
aad
or
add
sbb
adc
mov
xchg
mov
repnz
mov
lcall
dec
xchg
mov
cmp
stos
addb
sbb
rclb
das
ljmp
sbb
jmp
inc
and
jb
add
loopne
lret
popa
vmovaps
enter
ret
shll
ffree
dec
movsl
test
sbb
inc
jae
dec
orl
mov
lret
cmp
mov
pop
sti
mov
push
mov
fstp
xor
pop
pop
mov
xchg
jecxz
mov
idivl
dec
inc
dec
fldt
jbe
sub
adc
jno,pt
dec
xlat
push
cli
mov
scas
jns
inc
lret
xchg
xchg
ds
xchg
pop
push
xchg
sub
cmp
inc
call
inc
imulb
outsb
pop
pusha
mov
cwtl
adc
imul
or
xor
movsb
mov
jl
fistpll
mov
jl
xchg
and
rol
ds
hlt
pop
mov
stc
movsl
xchg
mov
mov
xchg
mov
mov
cld
push
cmp
adc
push
xchg
dec
xor
sbb
dec
lea
dec
pop
adc
adc
ljmp
int3
jecxz
or
mov
cmp
cmp
or
push
repz
sbb
stos
jnp
leave
call
xchg
div
add
js
mov
cmp
lahf
cli
jo
xor
das
imul
loopne
jno
xchg
adc
push
inc
pop
xchg
pop
push
push
in
cmp
jl
js
mov
fildl
sub
lods
xor
xor
int
sbb
jo
cmp
mov
std
push
mov
lcall
add
lea
xchg
mov
mov
mov
push
ljmp
cmc
call
and
inc
xor
cmpl
addr16
aam
dec
cmp
int
int
xor
int
repnz
mov
shrl
xchg
nop
inc
cwtl
out
js
fldl
adc
mov
xchg
push
or
sub
xchg
fbstp
dec
mov
scas
pop
sbb
dec
push
sti
dec
adc
xor
sahf
adc
pop
ss
loop
imul
pusha
sbb
popf
loopne
lret
das
rcr
movsb
push
in
mov
fdivr
stos
adcl
mov
pop
or
jl
pop
mov
insb
mov
jae
push
dec
cmpsl
mov
cmc
scas
mov
jb
cmpb
jbe
cmp
fnstenv
inc
insb
stos
ret
xor
add
mov
mov
xchg
add
mov
mov
test
inc
push
cli
fs
imul
xor
in
xchg
fcomps
jg
inc
add
scas
cli
xchg
test
iret
out
mov
in
loop
mov
stos
mov
cmova
add
or
sub
dec
addr16
xchg
cmp
jp
pop
mov
pop
lods
int
xchg
adc
popa
test
and
push
pushf
or
pop
pusha
sbb
repnz
adc
xor
int3
xor
shrb
xchg
aam
add
repnz
mov
ja
dec
and
dec
sub
lcall
arpl
add
xchg
jo
sbb
and
pop
decl
cmp
mov
out
push
stos
pop
aad
sbb
test
lock
mov
pop
cmp
and
mov
fdivl
cmp
push
test
jg
jl
mov
rorl
xor
adc
std
rcrl
xor
sub
inc
cwtl
je
mov
dec
in
push
dec
lret
or
xchg
jae
pop
adc
push
test
sub
mov
orl
test
roll
frstor
xor
mov
xor
sahf
mov
mov
and
hlt
in
aad
mov
aas
arpl
lea
int3
and
mov
add
fwait
out
lahf
xchg
push
or
aas
imull
stc
mov
pop
xchg
das
dec
dec
movsl
xor
fists
dec
or
mov
push
fcom
scas
or
inc
xor
fsubs
pop
out
push
repz
and
leave
neg
xchg
mov
fimull
xor
jle
mul
jp
inc
sub
mov
rorl
int3
lods
mov
or
dec
ss
fstpt
pusha
enter
lea
into
push
mov
int
inc
daa
int3
mov
add
jae
or
rclb
js
inc
cmp
les
int3
mov
test
xor
and
cmp
sub
add
cwtl
mov
inc
adc
enter
pop
cld
jns
dec
fsubl
jbe
test
mov
outsl
mov
call
popa
cwtl
gs
filds
mov
pop
pushf
and
les
add
add
cwtl
push
ss
daa
add
enter
jae
and
call
add
int3
jge
cwtl
push
stos
sar
mov
ret
inc
cld
fists
mov
pop
jne
dec
jb
inc
clc
insb
inc
das
mov
rolb
pusha
pop
sti
fxsave
movl
sti
mov
lods
lcall
add
dec
sarb
lea
xor
fimuls
out
movsl
outsb
mov
outsl
pop
out
dec
int3
repz
es
jle
repnz
xor
mov
out
dec
mov
push
xchg
pop
in
out
dec
das
dec
and
mov
mov
and
aam
in
std
fwait
lret
dec
nop
xor
jp
push
jns
lret
mov
repnz
dec
jno
or
inc
rcrb
mov
lock
or
xchg
push
pop
adc
push
jp
cmp
gs
ret
push
out
loop
add
mov
sbb
or
insl
aad
pop
push
add
test
adc
dec
ljmp
les
mov
cmpsl
adc
mov
jno
repnz
out
and
inc
popa
mov
ficoms
sbb
popf
shlb
xor
popa
fisttpll
cwtl
dec
xor
pushf
repnz
pop
lcall
push
scas
mov
push
push
and
in
in
add
lea
fdivrs
mov
aas
sub
ds
sub
sbb
jle
loop
stos
add
ret
call
negl
mov
cli
mov
inc
lods
lods
xchg
pop
mov
mov
jp
push
mov
popf
sbb
data16
xor
or
cmpsl
fs
xor
jnp
jecxz
sti
aas
into
repz
cld
lret
cmp
comiss
scas
icebp
add
mov
adc
cmp
leave
fnstcw
xor
ror
bound
loopne
adc
addr16
cmpsb
lock
roll
push
fwait
cmp
ret
in
xlat
or
test
push
clc
inc
pop
or
insl
adc
icebp
into
in
xchg
inc
pop
inc
aaa
pop
pop
outsl
out
sbb
xchg
xchg
push
stos
pop
scas
cmp
test
or
pop
xlat
popa
outsl
popa
jmp
mov
jnp
stos
lods
jle
sub
popa
mov
sub
dec
call
xchg
leave
imul
lds
das
lret
test
and
or
mov
fbstp
dec
mov
pop
pop
in
icebp
inc
sbb
aas
mov
hlt
sub
dec
dec
push
add
mov
mov
sbb
bound
icebp
push
in
jns
rclb
push
leave
jg
pop
inc
pop
or
sub
jle
lret
mov
jo
ljmp
adc
mov
jbe
cmp
jns
jl
ret
pop
sub
stc
fst
push
jecxz
jbe
mov
inc
sub
pop
jmp
mov
and
sti
int3
dec
out
inc
ja
rorb
shl
incb
mov
testl
int
add
hlt
out
inc
add
sub
aam
or
mov
scas
adc
stos
imul
repnz
sub
cmpsb
xchg
adc
or
iret
int3
cmpsl
xlat
loop
mov
lahf
sub
call
push
pop
pop
lods
xchg
jp
repz
inc
xchg
xchg
cmp
mov
test
int3
mov
push
fmulp
mov
xchg
mov
jbe
sbbb
jp
jg
inc
arpl
pop
lcall
inc
fists
sbb
pop
adc
jmp
inc
and
loopne
sub
push
negb
sub
mov
mov
push
sub
push
es
jp
imull
subl
aaa
insl
ret
push
movnti
fldenv
imul
sub
cmp
add
stos
xor
insl
cmpsb
jns
xchg
cmpsb
sbb
add
add
push
lds
cmp
ja
das
js
pop
push
ret
das
cli
add
addr16
cmp
sub
pushf
iret
push
push
or
adc
insb
pop
inc
repnz
xor
mov
stc
fcomps
test
mov
adc
mov
popa
jae
shll
mov
ljmp
mov
cmpsb
sahf
fists
rclb
sub
insl
dec
arpl
out
fsubs
xlat
xor
scas
das
sbb
fimull
xor
out
repz
movsl
fadds
pop
push
mov
out
xor
stc
popf
pop
or
pop
int
int3
imul
pop
lcall
movsb
xor
cmc
jb
mov
fdivrs
xor
popa
push
xchg
pop
dec
outsb
cs
inc
jae
mov
call
and
in
dec
addr16
sbb
rclb
sub
rclb
adc
stos
xor
adc
in
jo
out
or
or
cmp
sbb
paddb
out
jnp
sub
push
or
sub
jecxz
jb
imul
negb
dec
xlat
aaa
pop
scas
fldcw
sbbl
mov
pop
idivb
testl
nop
sub
ja
push
xor
fildl
notb
dec
loope
cmp
stc
xchg
pop
xchg
fstpl
sub
sub
cmc
lret
inc
cmp
fsubrl
push
aaa
or
fcompl
or
push
jg
dec
das
mov
sub
loope
mov
sti
push
mov
mov
lret
imul
jb
cld
adc
fisubrs
test
cmp
mov
or
call
fs
jbe
mov
mov
cltd
cmp
test
movsb
xor
repz
pop
inc
sbb
dec
sub
adc
scas
mov
ret
popf
outsb
mov
pop
inc
or
pop
jbe
out
negb
pop
mov
adc
out
xchg
in
pop
mov
out
sbb
call
in
popf
popa
cmpsl
sti
or
adc
out
jae
sbb
sbb
insl
xor
dec
out
add
pop
int3
or
adc
scas
mov
push
mov
les
test
or
jg
mov
sbb
push
xchg
test
mov
popf
jmp
aas
jg
mov
fs
jg
pop
cwtl
test
movd
inc
icebp
lahf
mov
sub
int
sub
mov
stc
cmp
ret
and
push
scas
fidivrs
mov
dec
mov
mov
and
stos
cli
xchg
out
sbb
add
rolb
mov
pop
ficompl
mov
arpl
imul
pop
out
and
cmp
or
daa
cld
and
inc
jno
mov
test
std
gs
cmp
push
inc
stos
mov
stos
lods
es
ljmp
lahf
lods
cmpb
bound
stc
pop
roll
cmp
lds
mov
repz
adc
pushf
movsb
int
lret
push
lcall
cmp
dec
xlat
mov
pop
or
in
nop
shll
inc
push
lods
js
sub
into
sbb
mov
push
test
xchg
cmp
mov
lret
push
inc
ja
or
gs
ss
mov
sbb
cs
ja
inc
sbb
divl
jo
lret
aaa
push
inc
repnz
add
hlt
imul
scas
pop
cli
mov
pop
mov
jo
and
or
in
or
movsb
xor
in
int3
push
jno
sbb
enter
hlt
dec
add
and
pushf
jle
dec
fstl
sti
cmp
sub
test
xor
je
out
aas
dec
inc
loopne
outsb
adc
ret
add
cmpsl
xor
pushf
repz
jle
push
mov
dec
repz
xor
xchg
lret
imul
push
or
sub
sub
cmp
jae
mov
std
es
mov
mov
insb
cwtl
ljmp
addl
xchg
and
pushf
insb
outsb
cmp
xchg
insb
or
mov
lods
adc
test
mov
and
lcall
sbb
dec
scas
sbb
sbb
push
adc
cmc
mov
js
int3
xchg
arpl
mov
loop
jne
fs
fildl
mov
fs
jmp
scas
xchg
test
movsl
addr16
fdivrl
out
fiadds
sahf
push
clc
push
lahf
and
mov
xor
adc
pop
push
into
mov
repnz
pop
pop
adc
pop
gs
nop
call
mov
aas
cli
scas
mov
int
fsubs
lock
rolb
add
pop
add
add
add
add
add
add
push
or
or
adc
add
or
mov
add
or
adc
add
sbb
add
aam
pop
add
add
add
add
add
add
add
add
mov
add
push
add
add
add
add
add
mov
add
push
add
add
add
mov
add
or
add
add
hlt
mov
add
or
add
add
cld
mov
add
lldt
add
add
add
add
pop
add
add
add
add
add
or
pop
add
add
add
add
add
add
add
adc
pop
add
add
add
dec
outsl
popa
fs
imul
inc
gs
jb
arpl
fs
jae
push
imul
jb
je
arpl
jb
jne
insb
inc
insb
insb
outsl
arpl
jb
jne
insb
inc
jb
gs
js
je
jb
arpl
jae
gs
insb
outsl
jae
dec
gs
popa
jo
jb
popa
je
inc
popa
jo
jne
gs
imul
popa
je
insb
je
inc
dec
jo
outsb
push
jns
inc
jb
gs
je
imul
insb
inc
js
arpl
gs
push
popa
je
inc
imul
jae
inc
gs
inc
dec
outsb
je
jb
gs
gs
outsl
outsb
outsb
arpl
push
je
je
jae
outsb
add
add
add
add
add
sub
add
push
add
add
add
addb
add
xor
add
inc
add
addb
add
add
add
pop
add
add
add
add
add
add
add
add
sbb
add
sbb
add
add
add
add
add
add
add
mov
inc
add
inc
add
add
add
add
add
add
add
add
add
enter
cmp
add
add
in
add
add
add
xor
add
add
add
add
add
or
add
dec
loope
add
add
add
inc
add
add
inc
add
dec
add
inc
add
dec
add
inc
add
or
dec
add
dec
add
dec
add
dec
add
add
add
add
add
and
and
add
add
test
add
xor
sub
add
and
add
inc
add
add
add
add
add
add
adc
add
movb
mov
mov
add
mov
mov
add
add
test
add
mov
mov
add
incl
mov
add
test
test
add
incl
incl
incl
incl
test
add
movb
mov
mov
add
test
mov
add
mov
test
add
incl
incl
incl
incl
incl
test
add
add
test
add
incl
incl
add
incl
incl
add
incl
incl
add
incl
test
add
incl
incl
incl
incl
test
add
mov
test
add
test
test
add
test
test
add
add
test
add
incl
incl
incl
incl
test
add
mov
mov
add
add
test
add
incl
incl
incl
incl
test
add
mov
mov
add
add
test
add
incl
incl
incl
incl
test
add
mov
mov
add
add
test
add
incl
add
incl
add
incl
add
incl
add
incl
add
test
add
mov
add
mov
mov
add
add
test
add
incl
incl
add
incl
incl
add
incl
incl
add
incl
test
add
test
test
add
add
incl
add
incl
add
incl
add
incl
add
test
add
test
add
mov
add
mov
test
add
test
add
add
test
add
test
test
add
add
add
test
test
add
add
test
add
incl
add
incl
add
incl
add
incl
add
incl
add
test
add
test
add
test
add
mov
add
add
test
add
mov
add
add
test
add
incl
mov
add
test
add
add
test
add
test
test
add
add
incl
add
incl
add
incl
add
incl
add
test
add
test
add
test
add
test
add
test
add
test
mov
add
test
test
add
add
incl
add
incl
add
incl
add
incl
add
add
add
test
add
test
add
test
add
test
add
add
add
test
add
mov
mov
add
mov
mov
add
mov
mov
add
mov
mov
add
mov
mov
add
mov
test
add
test
test
add
incl
incl
incl
incl
test
add
test
add
test
add
add
add
mov
add
mov
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
test
add
test
test
add
incl
incl
incl
incl
incl
add
add
mov
add
add
add
add
add
add
test
add
test
test
add
test
test
add
test
test
add
test
test
add
test
mov
add
test
test
add
movb
mov
incl
add
add
test
add
test
add
mov
test
add
add
add
movb
test
mov
add
mov
test
add
mov
incl
incl
incl
test
add
mov
mov
add
mov
mov
add
mov
mov
add
mov
mov
add
mov
test
add
test
mov
add
add
test
add
mov
test
add
mov
mov
add
add
add
test
test
add
add
mov
add
mov
incl
incl
incl
incl
incl
incl
incl
incl
mov
add
test
add
add
test
add
add
add
add
test
add
mov
test
add
add
add
incl
incl
incl
incl
mov
add
test
test
add
test
test
add
incl
mov
add
test
test
add
mov
test
add
incl
incl
incl
mov
add
add
add
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
test
add
mov
test
add
incl
test
add
test
test
add
add
add
add
add
incl
incl
incl
incl
incl
test
add
mov
test
add
add
test
add
add
incl
add
test
add
incl
incl
incl
incl
test
add
mov
test
add
incl
test
add
add
add
incl
incl
test
add
incl
incl
incl
incl
test
add
mov
test
add
incl
test
add
add
add
incl
incl
test
add
test
add
test
add
test
add
test
add
test
add
test
add
mov
test
add
incl
test
add
add
add
incl
incl
incl
incl
incl
add
add
incl
add
incl
add
test
add
mov
test
add
incl
test
add
add
add
add
add
add
add
incl
mov
add
test
test
add
add
test
add
mov
test
add
incl
test
add
test
test
add
test
test
add
test
test
add
mov
test
add
incl
mov
add
mov
mov
add
mov
mov
add
mov
mov
add
mov
mov
add
mov
mov
add
mov
mov
add
mov
mov
add
test
test
add
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
test
add
movb
mov
mov
add
mov
mov
add
mov
mov
add
mov
mov
add
mov
mov
add
mov
mov
add
mov
incl
test
add
test
test
add
test
test
add
test
test
add
test
test
add
jg
aas
sarb
pop
rcrb
xadd
loopne
rolb
add
add
inc
add
inc
add
xadd
add
rolb
add
add
add
add
add
add
add
add
add
add
add
add
pavgw
add
repz
ud0
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
jmp
add
xor
add
add
add
add
or
add
add
mov
or
mov
add
add
add
add
add
add
add
mov
add
add
xchg
hlt
or
mov
hlt
or
ret
add
hlt
or
fcomip
or
add
add
in
hlt
or
add
add
sti
hlt
or
add
add
adc
add
add
cmc
or
add
add
daa
cmc
or
add
add
aaa
cmc
or
add
add
inc
cmc
or
add
add
pop
cmc
or
add
add
popa
cmc
or
add
add
jge
or
or
or
mov
or
sbb
or
int3
repnz
es
or
aam
or
xor
or
fdiv
or
cmp
repnz
dec
hlt
or
in
repnz
push
hlt
or
hlt
repnz
hlt
or
cld
repnz
outsb
hlt
or
add
or
jns
or
or
or
test
or
adc
or
dec
inc
push
dec
inc
dec
xor
cs
dec
dec
add
push
inc
push
dec
xor
cs
dec
dec
add
dec
inc
inc
push
xor
cs
dec
dec
add
dec
xor
cs
dec
dec
add
push
inc
push
xor
cs
dec
dec
add
inc
inc
push
push
xor
cs
dec
dec
add
inc
dec
dec
xor
cs
dec
dec
add
dec
push
inc
push
dec
cs
dec
dec
add
inc
push
xor
cs
dec
dec
add
dec
dec
dec
inc
push
cs
dec
dec
add
dec
inc
dec
xor
cs
dec
dec
add
add
fs
imul
add
add
je
jb
arpl
fs
jae
add
add
jb
jne
insb
push
jb
je
arpl
add
jb
jne
insb
inc
insb
insb
outsl
arpl
add
push
imul
jb
add
add
imul
jae
add
push
gs
insb
outsl
jae
dec
gs
add
arpl
inc
jb
popa
je
inc
popa
jo
jne
gs
imul
add
push
popa
je
insb
je
add
dec
inc
dec
jo
outsb
add
add
jae
jb
gs
je
imul
push
js
arpl
gs
add
add
je
inc
imul
jae
add
add
je
inc
add
add
je
jb
gs
gs
outsl
outsb
outsb
arpl
push
je
je
add
add
outsb
add
add
test
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
add
add
ss
add
mov
cmpl
jne
add
mov
jmp
mov
add
add
cmpl
je
add
mov
add
push
push
push
push
pushl
pushl
mov
mov
mov
add
call
pop
pop
pop
pop
cmp
je
add
jmp
push
push
pushl
call
lea
mov
lea
mov
mov
cmp
je
mov
inc
sub
cmp
ja
mov
cmpb
je
mov
cmp
jne
mov
shr
rol
xchg
jmp
mov
xchg
rol
xchg
sub
add
mov
add
sub
mov
loop
call
lea
mov
cmp
je
mov
sub
je
mov
lea
mov
lea
mov
cmp
je
mov
add
mov
jmp
mov
add
mov
xor
mov
inc
or
je
cmp
ja
add
add
jmp
and
shl
mov
add
or
jne
mov
add
jmp
xor
xchg
mov
cmp
je
lods
or
je
add
add
jmp
xor
shr
lods
or
je
add
add
jmp
lea
mov
lea
mov
cmp
jne
add
push
push
push
push
push
push
call
pop
pop
cmp
jne
add
mov
rep
sub
sub
push
pushl
push
push
call
push
pop
sub
xor
mov
cmp
je
inc
lea
mov
push
push
push
push
push
pushl
pushl
mov
add
push
call
pop
pop
pop
pop
add
loop
mov
cmp
je
popa
popf
mov
ret
popa
popf
jmp
mov
or
je
mov
add
cmpl
jne
cmpl
jne
cmpl
jne
jmp
mov
add
push
push
push
lea
add
add
push
call
pop
pop
pop
cmp
je
mov
add
add
xor
mov
cmp
jne
inc
jmp
mov
add
push
push
push
cmpb
jne
inc
mov
and
mov
movb
push
push
pushl
call
pop
pop
pop
pop
cmp
je
mov
mov
pushl
popl
add
inc
jmp
clc
ret
jmp
push
mov
mov
mov
cld
mov
movsb
call
jae
xor
call
jae
xor
call
jae
mov
call
adc
jae
jne
stos
jmp
call
dec
loop
mov
call
jmp
lods
shr
je
adc
mov
jmp
xchg
dec
shl
lods
mov
call
cmp
jae
cmp
jae
cmp
ja
inc
inc
push
mov
sub
rep
pop
jmp
add
jne
mov
inc
adc
ret
xor
inc
call
adc
call
jb
ret
pop
ret
push
call
ret
mov
adc
push
add
or
inc
cmp
add
or
ret
mov
add
adc
mov
cmpl
adc
or
push
and
rolb
add
call
enter
add
shl
or
dec
mov
jne
pop
sbb
add
mov
xor
fildl
or
sub
in
ljmp
jb
sub
or
add
adc
out
xor
inc
out
clc
dec
jne
pop
mov
bound
jp
mov
ret
pop
addr16
cs
ret
push
movzwl
mov
or
movl
jae
mov
mov
sbb
sarb
cli
sar
add
cmp
sbb
lahf
adc
loope
jno
data16
jb
jmp
inc
sub
sahf
clc
fistl
scas
mov
or
int3
shr
sahf
ret
inc
test
ds
add
in
push
push
jbe
jge
sub
jle
mov
xorb
int3
or
xor
aas
std
add
int3
dec
cld
sbb
pop
ret
add
shl
pop
pop
or
sub
cmp
jbe
mov
xchg
inc
cmp
mov
notl
jle
push
lret
inc
pop
or
call
mov
push
or
inc
cmp
jl
adc
leave
popa
fcomi
xor
inc
xchg
outsb
enter
test
or
jo
xchg
mov
push
pop
mov
sar
sub
les
jne
mov
shr
sbb
loopne
add
jbe
aaa
call
or
cmp
sti
inc
inc
shr
sbb
sbb
jbe
pop
mov
xor
adc
mov
test
push
sbbb
icebp
call
es
sub
push
lea
pop
call
cmp
icebp
xor
push
jne
lret
and
mov
lahf
and
add
push
clc
mov
inc
adc
sub
jl
cmp
or
orb
enter
mov
sbb
leave
cltd
dec
hlt
nop
push
call
movsb
data16
orl
push
in
inc
lock
shl
add
xor
dec
dec
into
cmp
cmp
push
adc
fdivl
push
sbb
mov
xorl
fcompl
rep
adc
retw
jne
inc
add
cli
cld
inc
mov
add
xchg
pop
mov
and
mov
adc
hlt
test
fwait
ret
push
les
mov
jbe
sbb
test
movsl
mov
sub
inc
add
movsl
inc
pushf
mov
add
and
leave
push
adc
jge
push
gs
push
jmp
and
or
cmp
or
movsl
sbb
into
pusha
or
divb
pusha
clc
lcall
push
sbb
push
insb
out
add
mov
fsub
mov
iret
push
sbb
push
repnz
scas
adc
add
test
cmp
sbb
sub
sahf
das
mov
inc
dec
inc
xchg
add
rorl
call
pop
cmp
je
sub
incl
setge
sub
clc
lea
xchg
hlt
shll
add
decl
mov
jmp
mov
inc
xor
xchg
jmp
sub
mov
lock
jne
leave
adc
push
mov
cmp
insl
sbb
fldl
test
fwait
push
aad
cltd
jle
mov
or
jmp
lock
in
rorl
sub
mov
xor
or
call
add
mov
add
sub
jp
dec
push
andl
sub
leave
loop
and
sti
dec
repnz
popa
mov
sub
pop
jge
dec
push
in
sub
pop
dec
pop
add
pop
jo
jmp
add
ret
psubq
ds
add
and
inc
adc
imul
nop
leave
dec
xor
dec
cmpb
cmp
sbb
rcl
inc
test
mov
addb
inc
adc
rolb
jle
cmp
icebp
icebp
iret
rorb
nop
stos
mov
shrb
int3
pop
outsb
sbb
movsb
jne
cmpl
lock
adc
jb
mov
orb
shl
dec
add
les
xchg
sbb
push
cs
sub
jb
xor
mov
mov
negb
rcll
rcrl
dec
jne
cmp
jne
dec
sbb
cmp
add
sub
add
popa
jecxz
iret
push
pushf
dec
sbb
jecxz
lcall
inc
mov
sub
mov
cmp
dec
mul
sbb
inc
outsb
addb
xchg
rolb
add
les
xor
fdivl
adc
jne
adc
add
pop
add
and
js
add
add
or
add
outsl
std
jmp
dec
adc
mov
xchg
stc
out
in
adc
lds
cmp
dec
mov
leave
mov
fnstcw
jecxz
and
push
loopne
sbb
jne
loop
clc
mov
jg
push
fidivs
loop
pop
push
mov
fdiv
inc
or
pop
or
ret
jbe
mov
push
lods
mov
loope
sbb
adc
mov
pop
add
sub
loope
sahf
cmpsl
and
sub
test
push
ss
inc
cmpsl
inc
inc
mov
dec
pop
add
jne
in
aad
ret
clc
jbe
jge
pop
dec
into
ret
dec
daa
push
loop
scas
std
lods
dec
mov
popf
mov
pushf
stos
fistpll
and
and
xchg
jmp
adc
sbb
stos
push
inc
inc
push
iret
or
in
push
sbbb
cmp
or
es
push
std
daa
or
das
xchg
lret
cmc
scas
mov
cli
xchg
push
je
adc
jno
data16
sub
insl
mov
sahf
orb
xchg
in
call
mov
leave
ret
out
repz
jno
enter
cmp
outsl
aas
mov
push
cmp
adc
and
dec
pop
and
xlat
repz
inc
pusha
out
imul
out
cmp
je
stos
mov
push
jb
mov
notl
outsb
xchg
mov
xor
add
push
sub
test
inc
test
sub
pop
mov
cmp
sub
pop
push
dec
mov
popf
mov
hlt
mov
push
icebp
inc
jp
or
sarb
cmpsb
jge
xchg
xchg
rclb
bound
cmc
inc
and
outsb
mov
dec
jnp
hlt
test
jne
mov
mov
mov
sbb
nop
cmp
xchg
repz
fbstp
outsb
icebp
insl
rclb
xor
insl
mov
fidivrs
out
adc
icebp
addr16
cmpsb
dec
les
mov
cli
pusha
mov
out
mov
and
cmovno
pop
aaa
pop
xor
out
shll
ret
and
sub
ja
pop
pop
cmpsb
or
mov
xchg
pop
test
jnp
out
dec
xor
fiadds
pusha
or
pusha
pop
xchg
or
and
in
out
jae
out
add
sub
outsb
popa
xor
cld
test
jge
xchg
push
jnp
jo
clc
cmpsl
in
pop
dec
jae
clc
mov
cmp
mov
aas
mov
mov
aas
dec
mov
sub
pop
jbe
scas
loop
lret
shll
outsb
pop
mov
mov
xchg
mov
faddl
jne
scas
ret
mov
pop
dec
test
imul
dec
push
or
jae
cmpsl
out
pop
rcll
aas
lcall
dec
int3
add
imul
outsl
push
jns
mov
adc
xchg
jp
rcrl
xor
cmp
scas
ss
push
scas
sbb
cmp
mov
and
out
jg
jp
xchg
js
lods
stos
cmp
addr16
xchg
mov
icebp
pop
sub
push
idivl
popf
std
mov
dec
jae
outsb
enter
ret
ret
adc
mov
dec
jmp
xchg
add
frstor
out
push
movsb
fstl
cld
adc
shll
sub
addr16
inc
nop
add
clc
call
mov
sub
iret
fisubs
mov
sub
xor
sub
andb
lds
andl
push
mov
or
mov
jl
mul
and
ret
scas
cltd
inc
fnstenv
das
nop
pop
fwait
cmp
incb
divb
mov
mov
xchg
pop
push
push
xor
push
dec
xchg
jo
sub
push
jno
inc
sbb
mov
dec
call
test
lahf
cld
in
repnz
pushf
imul
pop
movsb
hlt
xchg
insb
adc
cmp
push
in
out
mov
loope
mov
push
faddp
xor
inc
outsb
adc
cmp
cmpsb
mov
pop
inc
jnp
jmp
add
pop
push
or
xor
int3
jae
cmp
aad
jge
mov
pop
xchg
dec
aaa
dec
add
out
xor
xor
fwait
xchg
insb
aas
in
lret
push
or
mov
mov
testl
pop
aad
into
and
sbb
sbb
dec
ss
mov
ficomps
inc
mov
adc
nop
roll
xor
pushf
and
jnp
sbb
in
adcb
xor
sbb
aas
lea
nop
arpl
fcmovnb
mov
lret
cmc
out
lods
aas
subb
jmp
movsb
dec
pop
mov
jbe
mov
js
dec
into
loopne
lods
xchg
push
push
cmpsb
jmp
push
xchg
repz
sub
jns
mov
xchg
dec
lret
xor
pop
lahf
lea
int3
xor
mov
shrl
aam
movsl
stc
adcb
js
add
fistpl
movsl
pop
imull
xchg
sbb
scas
decb
sti
and
xchg
bnd
sbb
test
mov
std
scas
mov
test
mov
insl
adc
adc
jb
push
mov
mov
fisttpll
add
das
inc
mov
pop
add
xchg
pop
mov
mov
mov
sub
fwait
inc
lret
mov
add
dec
lds
imul
cmp
mov
mov
adcl
lcall
mov
and
mov
cmp
or
sahf
enter
dec
jecxz
push
aas
inc
push
cmpsb
test
lahf
jae
cmp
mov
pop
dec
insb
in
std
add
jbe
lahf
aas
push
adc
cmp
pop
jae
pop
sbb
inc
rorb
jae
in
pop
inc
enter
xchg
stos
xchg
add
mov
xchg
dec
jns
or
jno
outsl
or
test
arpl
ss
xor
xchg
aaa
cli
dec
pop
cld
addl
fcompl
mov
dec
clc
in
cs
int
int3
sbb
sub
sbb
xchg
add
xlat
inc
stos
dec
scas
and
pop
leave
andl
add
cmp
adc
or
xchg
push
pop
inc
idivb
cmp
out
fists
stc
arpl
pop
outsl
push
pusha
xor
dec
inc
add
pop
cmp
mov
pop
sbb
cmp
mov
sub
push
in
sbb
or
adc
aaa
cs
bound
fdivrs
mov
lods
fwait
std
repz
and
mov
ficoml
and
out
out
pop
outsb
mov
negl
mov
sub
adc
pop
lds
mov
adc
cmp
stos
sbb
pop
cs
ds
dec
icebp
subl
push
fnstcw
and
push
lea
cmp
scas
xor
adcb
pop
jle
test
cmpb
push
pop
inc
mov
and
jb
out
rorb
in
es
mov
adcl
xor
xor
mov
xor
sarb
mov
sub
test
pushf
pop
xchg
aaa
mov
testl
ret
push
jno
mov
sub
push
pop
movsl
scas
cli
push
inc
ret
in
sbb
and
jb
sbb
sub
mov
xchg
pop
or
insb
mov
in
mov
sbb
push
xor
aaa
insb
inc
lahf
hlt
jg
and
popf
fsubl
daa
mov
and
fwait
inc
push
cmpl
lahf
hlt
add
divl
mov
sub
mov
sahf
inc
jbe
pop
arpl
inc
aas
in
hlt
pop
jbe
jo
aas
mov
cltd
iret
push
adc
mov
mov
test
sub
fwait
gs
sbb
jp
cltd
xchg
mov
sbb
jnp
inc
sub
push
aam
xchg
cmp
hlt
fiaddl
lahf
ficoml
movsb
sarb
mov
sbb
pusha
mov
mul
out
jmp
in
and
cmp
lods
pmovmskb
sahf
gs
out
ljmp
dec
out
xor
loope
mov
lahf
mov
add
rorb
fimuls
fsubrs
adc
xor
and
jo
arpl
jns
and
movsl
pop
jle
js
pop
das
ljmp
out
leave
or
push
xchg
dec
xor
xor
addb
mov
jo
in
pop
push
adc
or
mov
xchg
xchg
mov
and
mov
insb
and
fcomp
push
into
loope
mov
adc
or
push
sub
pop
out
mov
jp
lahf
les
divb
jecxz
enter
cmp
mov
test
pop
push
adc
not
or
loop
in
fiadds
inc
repnz
pop
cmpsb
xchg
xor
push
jge
leave
push
dec
cld
sahf
addb
cmp
push
cltd
stos
mov
nop
mov
and
jnp
mov
xchg
mov
rclb
lret
insl
arpl
dec
arpl
inc
sbb
jl
pop
sub
or
clc
in
pop
aaa
mov
push
sub
sbb
and
or
xchg
push
aad
mov
mov
rcl
push
pop
xchg
stos
fsubl
mov
dec
add
or
sbb
std
sbb
arpl
rol
iret
inc
or
or
cltd
into
dec
lcall
testl
fwait
mov
movsl
mov
jp
push
fwait
je
insl
mov
jnp
idiv
jne
mov
pop
push
jmp
adc
cmpsb
pop
xorb
mov
pop
dec
je
mov
jb
sub
xor
fildl
daa
sbb
lea
data16
jle
sub
test
jg
jecxz
outsb
outsl
and
pop
addr16
pop
out
test
or
inc
loope
dec
adc
jb
lds
pop
mov
iret
jg
inc
aam
stc
push
sbb
add
mov
adc
insb
jb
mov
cs
xchg
gs
sub
fwait
and
ljmp
call
or
inc
sbb
pop
xlat
and
aas
imul
mov
movsb
jp
cs
fs
jle
xor
imul
aam
mov
inc
popa
mov
inc
mov
jg
jmp
pcmpgtb
and
and
xor
stos
bound
sub
aam
jl
jo
mov
lock
loopne
mov
sbb
jmp
mov
sub
pushf
std
insl
mov
cmp
pop
or
inc
inc
dec
cld
pop
aas
sbb
adc
repz
mov
stc
out
negl
jbe
jge
and
inc
mov
outsb
jnp
jmp
pop
xor
pop
sbb
sbb
test
icebp
cltd
dec
push
mov
cmp
fwait
xchg
mov
cwtl
jae
ret
mov
xchg
jle
and
into
push
pop
fisttps
sub
div
jl
adc
pusha
shrl
push
aaa
xor
sbb
xor
pop
pop
push
and
fsts
adc
jl
mov
pop
sub
cld
mov
jnp
sti
xchg
decl
and
cld
aam
enter
push
cwtl
outsb
dec
sub
in
jno
push
mov
or
sar
testl
xor
daa
sub
fistl
pop
push
mov
lcall
mov
adc
rclw
push
add
jle
sbb
mov
test
mov
jns
cmp
mov
scas
sbb
add
adc
push
dec
inc
pop
or
imul
in
mov
push
sahf
testb
xor
jle
or
push
cmp
or
enter
jmp
enter
jmp
mov
mov
scas
xchg
mov
jo
cmp
mov
notb
flds
dec
sbb
xchg
in
cmp
mov
xor
insl
arpl
lock
dec
mov
mov
popa
dec
fidivl
pop
shrb
das
dec
sub
iret
pop
lods
jecxz
cmp
leave
fucomip
hlt
mov
mov
in
sub
jmp
dec
mov
lahf
jmp
xchg
scas
adc
cld
mov
sub
jecxz
notl
mov
jne
popf
fisttps
dec
xchg
fists
add
enter
push
es
or
inc
jl
lret
and
push
fmull
and
jge
inc
add
lret
mov
mov
mov
pop
pop
adc
arpl
sub
adc
sbb
dec
and
mov
arpl
mov
cld
xchg
rorb
dec
rorb
push
push
jle
pop
scas
xor
sbb
jbe
enter
ja
xor
insb
dec
sbb
in
orb
int3
in
fistl
pop
mov
mov
xchg
idiv
call
jo
arpl
xchg
cwtl
stos
sub
scas
sbbl
add
mov
gs
push
xchg
cld
cmpsb
inc
cmp
cwtl
mov
cld
test
inc
push
xchg
or
xor
add
fs
test
cwtl
nop
dec
or
inc
jle
ret
pop
xor
sahf
mov
into
pop
mov
jnp
insl
add
dec
mov
cmpsb
lahf
jge
lret
sahf
int
and
aas
pop
push
dec
lea
or
cs
das
in
dec
ret
repnz
sub
sub
sbb
test
dec
xchg
or
jl
jle
xor
movsb
cmpsl
xchg
dec
faddl
push
sub
or
dec
addr16
jne
jns
jmp
scas
sbb
addr16
ret
call
dec
push
stc
mov
jb
das
pop
jmp
getsec
frstor
jmp
pop
push
into
aas
mov
jb
ret
and
xchg
loope
sub
test
loop
sbb
mov
add
mov
jecxz
addr16
or
scas
push
push
adc
or
int3
cmpsl
arpl
dec
cmp
xchg
sqrtps
xor
adcl
cmp
xchg
xchg
push
mov
aas
add
jmp
fdivr
mov
scas
fisttpl
iret
jne
je
push
mov
dec
pop
adc
sbbb
sub
xor
out
ljmp
jbe
ljmp
lock
adc
pusha
jmp
and
pop
ds
stc
je
enter
and
loope
dec
cmp
and
sbb
xor
fwait
mov
incb
pop
fiadds
sarl
inc
add
pop
mov
sbb
rcrb
sbb
xchg
sbb
out
jg
fisubl
cltd
aas
rcrb
gs
xchg
ss
adc
cmp
jmp
or
add
mov
pop
fisubl
or
lods
adc
jecxz
call
andb
xor
lcall
lcall
pop
adc
cs
das
jmp
addb
dec
xchg
arpl
xor
xor
adc
jo
pop
push
inc
jbe
adc
test
sub
std
adc
sbb
or
mov
call
pop
cmpb
mov
or
and
sub
jae
mov
push
jno
das
cmp
jne
popf
lret
sti
mov
xor
hlt
fdivr
pop
pop
je
pusha
jb
or
aam
push
loopne
inc
ds
cmp
sub
dec
cmp
push
inc
rorb
jmp
pop
fcompl
mov
enter
mov
lcall
ljmp
or
pop
loope
lcall
ja
cld
ficoms
popf
addr16
sub
adc
inc
clc
fstl
or
xchg
out
aam
mov
dec
add
adc
mov
mov
jle
mov
jg
or
stos
xchg
pop
jnp
push
and
xchg
lods
fdivr
cmpsb
dec
jo
push
add
aam
adc
cwtl
popl
pop
outsl
pop
enter
ss
ljmp
nop
inc
adc
dec
xor
jb
int3
mov
inc
ljmp
stos
jge
cmp
fwait
std
sbb
call
xchg
cli
fs
fnstcw
sub
pusha
pop
out
inc
push
jmp
mov
into
and
ret
and
pop
and
data16
loope
pushf
mov
xchg
push
push
repz
out
add
or
jb
inc
jne
add
add
data16
aaa
mov
pop
into
rcrb
es
inc
fidivrs
outsl
adc
or
jmp
push
leave
pcmpeqd
push
aaa
imull
add
sbb
mov
in
sbb
inc
sahf
push
popl
sbb
jns
pop
out
int3
and
lret
cmpsl
movsb
or
scas
push
jg
icebp
sbb
test
into
aaa
cmpsl
sahf
jle
mov
push
push
adc
mov
cmp
in
fldl
leave
add
lea
mov
pop
jl
pop
cmp
mov
aam
fimuls
fidivrl
inc
push
out
push
jle
adcl
insl
stos
ficomps
dec
in
imul
dec
cmp
jo
scas
push
sbb
sarl
adc
outsb
pushf
bound
je
or
mov
inc
mov
gs
insb
cld
cld
sbb
ja
sahf
xlat
sub
mov
pop
fiadds
decb
lods
int
jge
rorb
or
add
jbe
pushf
pop
movsb
rcll
loope
imul
jno
xor
pop
test
fwait
pop
outsb
jl
sahf
adc
xor
stc
into
cld
aam
xchg
sbb
xor
inc
dec
int
subb
cmpsl
call
pop
ret
in
dec
jbe
clc
sbb
loope
inc
fsubl
adc
ds
scas
adc
adc
lods
idiv
mov
lods
push
test
push
sub
fldl
or
mov
mov
test
mov
add
xchg
and
movsl
add
mov
sub
addr16
sub
xor
repz
xchg
jno
inc
and
xchg
adcb
ljmp
test
imul
pop
dec
push
es
dec
in
cmp
add
ret
or
cmp
xchg
push
mov
imul
daa
xor
adc
lahf
or
loope
sti
jmp
leave
mov
nop
xlat
dec
push
inc
call
lock
int3
xchg
xchg
and
outsb
sbb
inc
or
pushf
jae
xchg
iret
jmp
aam
adc
mov
ret
bound
or
and
andl
mov
mov
cmpsb
add
rcr
rorb
mov
fidivl
into
mov
xor
mov
into
sbbb
mov
jmp
ret
mov
sbb
add
xor
xlat
sbb
pop
shrb
or
pop
sbb
repnz
scas
pop
jne
add
add
jle
or
inc
add
jg
dec
dec
aad
mov
sub
and
sub
jmp
adc
outsb
aam
inc
mov
test
xchg
mov
mov
cmp
int
inc
iret
pop
jle
sub
std
pop
mov
dec
xor
fucomi
xrelease
cmp
push
mov
mov
ljmp
not
inc
adc
test
jae
or
sbb
mov
push
xchg
fwait
inc
fwait
or
das
hlt
lea
test
xorb
pop
xor
insb
std
adc
jne
sahf
lods
popa
xor
pop
or
push
lods
out
pop
sub
js
in
cli
mov
ds
jb
jge
mov
or
pusha
pop
gs
cmp
test
mov
pushf
pop
nop
popa
mov
xor
pop
jle
and
mov
pop
loope
arpl
insl
mov
inc
call
or
inc
push
mov
xor
or
roll
mov
add
icebp
fisubrl
stos
mov
cpuid
lds
into
lret
xchg
jg
jp
adc
imul
movsb
jmp
fs
mul
cwtl
rcrl
sbb
push
push
shrb
mov
or
in
cld
sti
sub
in
cld
pop
push
ja
sbb
data16
in
push
cs
mov
std
cmpsb
icebp
dec
jge
aad
pushf
add
test
cmp
subb
fcmovne
cmp
scas
addr16
add
cmc
pusha
mov
mov
mov
outsl
pop
mov
je
xor
mov
pop
lret
xchg
mov
int3
sbb
lock
ss
mov
inc
inc
push
sub
mov
inc
aaa
mov
addr16
sub
push
jne
mov
ss
aaa
dec
inc
das
fwait
cmp
gs
push
push
popa
out
jle
sub
jecxz
fistl
xchg
and
imul
pop
jecxz
and
jne
les
push
gs
pusha
out
movsb
xchg
mov
imul
fcmovnb
dec
mov
insb
dec
inc
pop
jle
xchg
push
or
lods
inc
cmp
icebp
mov
push
push
xchg
stos
mov
imul
adc
lahf
sbb
loope
xor
adc
add
cmovp
movsl
mov
jmp
and
shrb
mov
dec
mov
jo
mov
jp
test
rorb
ds
stos
inc
mov
mov
mov
xchg
out
or
mov
jne
jl
and
outsb
or
fisttpll
xor
mov
sbb
icebp
push
and
sub
mov
lods
movsb
push
pop
loopne
aas
pop
scas
mov
insb
add
loop
inc
add
sbb
and
mov
and
xchg
jecxz
jno
push
inc
push
or
and
pop
and
roll
dec
cmp
inc
sub
inc
enter
jbe
mov
aaa
mov
mov
pop
adc
out
adc
test
and
sahf
movsb
pop
inc
fidivrl
xchg
or
xchg
sub
mov
jecxz
insb
mov
test
jmp
xor
jge
std
mov
out
repz
xchg
mov
in
or
mov
jnp
pop
lret
or
jne
mov
and
rorl
cld
xchg
xor
ss
mov
es
dec
add
loopne
arpl
movsl
sub
rolb
mov
cmp
sub
xor
mov
xchg
jbe
sub
xor
jl
dec
pop
push
sub
orl
mov
jne
jns
in
fcoms
icebp
push
cltd
subb
in
and
lods
repnz
pop
data16
cmp
imul
or
mov
add
icebp
lods
inc
mov
mov
xor
mov
pusha
cmpsl
push
jge
push
ret
shll
or
in
or
pop
in
ljmp
adc
test
push
roll
jmp
inc
ffree
cmp
or
popf
mov
mov
jae
pop
xchg
rcr
enter
push
push
imul
lods
cld
xchg
mov
cmc
sbb
xchg
jecxz
xchg
loop
iret
iret
loop
repnz
xor
xchg
jg
xor
mov
rcrl
leave
sbb
arpl
popa
test
jne
jmp
loope
xchg
or
pop
xor
dec
stc
jle
mov
jbe
mov
negl
push
add
bound
dec
cmp
testl
scas
sti
int
xchg
sbb
mov
xchg
and
jg
ja
jnp
adc
ja
sub
push
pop
pop
rcll
out
jp
sub
imul
mov
jmp
xor
cmp
outsl
sarb
adc
mov
lds
cld
pop
mov
pop
out
jp
fnstcw
clc
mov
sbb
test
dec
sti
scas
int3
xor
call
movsb
mov
mov
ret
sub
mov
adc
mov
stos
or
hlt
test
mov
out
inc
sub
jmp
testb
add
int
outsl
xchg
lods
and
jbe
jnp
pop
mov
mov
repnz
mov
fldl
dec
out
andl
xchg
cmp
out
testl
adc
imul
push
ret
xor
push
js
dec
fwait
cmpsl
mov
lock
sub
pop
sbb
loop
les
lcall
repz
jno
dec
scas
cmp
cmp
js
clc
xor
jle
xchg
pop
out
scas
iret
mov
mov
bt
into
int3
jge
lock
sarb
addr16
add
and
xor
sub
push
repnz
add
ret
jp
xor
into
xchg
push
jmp
int
sub
jnp
adc
nop
push
adc
pop
xchg
xchg
jmp
push
mov
xor
jg
dec
add
cmpsl
xchg
xchg
sti
cmp
mov
jge
in
cld
mov
int3
daa
enter
test
pop
sbb
bound
and
mov
mov
test
cltd
stc
add
shlb
insl
jb
and
clc
push
or
xor
dec
mov
aad
fimull
mov
repnz
mul
push
and
iret
dec
push
outsl
bound
pop
psubb
adc
int
mov
mov
sub
pop
lds
add
lcall
add
cmpsl
xchg
sbb
jns
loope
popf
jnp
pop
stc
test
mov
out
mov
jae
aaa
sbb
jp
add
test
sub
ret
cmp
push
rcll
mov
xlat
push
xlat
jge
mov
data16
pop
push
orl
push
mov
and
add
leave
and
mov
pop
add
cmp
xor
leave
lahf
add
add
loopne
jl
xor
pop
ret
sub
jo
mov
pop
pop
mov
mov
ror
sub
addr16
xchg
pop
mov
jle
lahf
in
pushf
out
in
leave
pusha
mov
loope
mov
and
ret
out
mov
outsb
inc
jecxz
pop
cli
mov
sub
pop
sub
sub
out
imul
hlt
movsl
inc
mov
mov
scas
add
mov
add
adc
adc
cmp
fld
into
jnp
xchg
mov
scas
je
xor
xor
sar
leave
in
aad
mov
push
adc
jecxz
add
sbb
ret
push
sub
push
pop
shlb
xchg
repnz
push
repz
inc
das
test
das
sbb
xchg
push
sub
clc
pushf
cmp
dec
leave
inc
int
cmpsb
movb
pop
inc
xchg
bound
idivb
mov
cltd
int3
mov
jnp
frstor
fldenv
cld
jmp
jle
icebp
dec
in
pop
push
mov
movsl
enter
mov
stos
or
into
inc
xchg
rolb
mov
lock
nop
cmp
inc
or
adc
popf
jbe
arpl
adcb
jns
or
test
sbb
int3
sub
dec
jnp
pop
adc
inc
sarb
xchg
dec
daa
mov
xchg
xor
loop
popa
push
cmp
dec
inc
sbb
loope
js
fbstp
pop
out
pushf
sbb
xchg
inc
popf
and
lods
xchg
mov
loope
out
lea
lock
xor
out
mov
mov
pop
mov
mov
loopne
push
xchg
lcall
jp
mov
inc
pusha
into
xor
dec
lds
rorb
test
sar
sbb
loopne,pt
push
mov
movsl
jmp
add
out
jns
das
and
push
inc
lea
pop
test
aaa
xor
stc
notl
test
aaa
fstp
stos
les
into
mov
add
pop
add
rol
add
out
and
pop
ja
repz
cmp
sahf
mov
sub
dec
ss
add
rol
jb
adc
incb
push
psubd
mov
scas
cli
pop
aad
cltd
ljmp
jmp
daa
push
es
mov
mov
mov
xor
jecxz
aad
mov
pushl
outsb
std
push
inc
neg
aas
arpl
dec
cmp
lcall
aaa
adc
inc
and
or
xchg
inc
xor
inc
ds
cli
mov
popf
daa
or
mov
pushf
dec
cmpl
mov
out
jge
xchg
cmp
aad
sub
aas
insl
xor
adc
ljmp
lods
adc
dec
out
inc
mov
ret
add
adc
pop
jle
pop
xlat
int3
mov
ds
sub
mov
fsubs
test
and
inc
add
lds
sbb
or
or
fs
div
dec
push
and
lret
sbb
cmp
pusha
inc
outsb
push
cld
pushf
movsl
adc
push
movsl
adc
jp
and
dec
lds
out
cmc
fucomip
push
or
imul
xchg
lock
popa
cmp
adcl
xchg
or
out
ret
jle
enter
movsl
rcl
and
jl
lds
dec
dec
sub
in
fnstsw
pop
push
rcll
xchg
mov
mov
push
fdiv
cmp
test
stos
das
jae
jne
sbb
inc
push
pop
aas
js
and
push
sbb
lcall
aaa
sbb
jmp
movsl
jl
mov
outsl
pop
jecxz
iret
push
add
test
les
sub
push
scas
push
aam
add
push
cmp
dec
inc
and
arpl
loop
sub
rcll
lds
sti
inc
scas
cmp
xchg
mov
push
fstps
pop
sbb
xchg
dec
cs
jecxz
cmpsl
js
into
pop
stos
fists
xchg
pop
int
stos
inc
add
addr16
adc
sub
adc
pop
orb
shrb
xor
xchg
mov
pop
fsubl
fld
mov
mov
add
xchg
fisttps
mov
stos
pop
push
out
imul
mov
insb
cmpsl
inc
aad
orb
pop
loopne
add
fiadds
mov
cmc
push
stos
aaa
add
mov
loopne
jno
dec
push
hlt
xor
in
jo
js
mov
push
push
popa
sub
jns
jmp
mov
and
sbb
adc
mov
arpl
mov
je
ret
shll
std
mov
cmp
iret
in
jge
out
mull
push
dec
or
add
xor
js
sbb
mov
push
in
in
mov
sbb
into
mov
mov
cmpsb
mov
test
sbb
jl
andl
out
insl
add
cmp
negb
sbb
adc
lds
cmp
cmp
lret
imul
scas
xlat
sbbb
int
mov
inc
int
and
push
mov
mov
iret
pop
cmp
sar
xor
fdivr
in
sti
lret
pop
lods
cmp
nop
xchg
dec
add
pop
jnp
imul
andb
sub
test
loopne
insb
nop
sbb
popf
push
popa
cltd
shlb
pop
push
call
mov
es
push
stos
mov
inc
dec
pop
add
sub
pop
in
scas
pop
rorb
xor
repnz
or
fiadds
or
push
insl
data16
dec
cmp
jb
mov
mov
mov
les
mov
mov
jne
mov
sub
iret
and
lock
popf
pop
icebp
ffree
push
pop
mov
xor
aad
sbb
or
or
aaa
add
ja
pop
int3
gs
sbb
and
shl
lock
ffree
das
push
aad
imul
push
ret
insl
cwtl
add
popa
or
push
mov
loop
xchg
cld
scas
aam
lcall
xor
fwait
lock
cmpsb
adc
movsl
inc
aas
imul
mov
imul
cmpb
mov
mov
mov
imul
pop
fs
sbbb
mov
mov
push
ljmp
jnp
and
aam
mov
inc
popa
es
sahf
in
fs
push
xor
not
lret
loope,pn
xchg
roll
lret
jns
testl
int
xor
sbb
in
ds
mov
fisttpll
mov
sbb
push
movsl
shll
fwait
inc
xchg
emms
movsb
add
ret
hlt
xor
or
fidivrl
push
call
push
out
in
ret
sahf
xchg
or
sbb
stc
xchg
jb
ja
mov
dec
daa
std
adcl
shlb
dec
js
cmp
dec
mov
dec
or
cs
dec
mov
mov
pop
ds
cli
xor
fildl
cwtl
shl
jo
mov
movsl
push
out
scas
test
fidivrl
out
cwtl
mov
add
andb
cmp
inc
or
mov
mov
sbb
inc
pop
cmp
xlat
and
sbb
push
xchg
jns
int3
push
flds
sbb
sub
clc
js
mov
test
mov
cmp
inc
int3
loope
inc
adc
testb
lods
scas
clc
rol
rol
mov
add
mov
xor
xor
push
pop
inc
es
pusha
inc
stos
insb
xor
xchg
pop
in
dec
inc
ss
mov
fildl
mov
mov
xchg
sbb
jne
dec
jno
loop
inc
fistl
nop
shl
lock
mov
leave
pop
pushf
jne
cmpsb
jbe
sbb
cmc
and
mov
sti
dec
pushl
mov
xorl
popa
sub
push
xor
mov
repnz
jnp
jb
outsl
das
addr16
cmc
jne
xchg
mov
or
addr16
mov
les
repnz
in
in
loope
iret
out
xchg
lods
lock
mov
and
sbb
xchg
arpl
inc
jle
mov
stc
arpl
lcall
cld
gs
roll
push
xor
sub
jg
outsl
mov
add
les
sbb
icebp
outsb
dec
sub
or
mov
int3
bound
insl
int3
pop
sub
outsl
jns
js
sub
stos
sbb
ret
xchg
or
mov
push
mul
lahf
test
pop
imul
sbb
hlt
xor
cltd
push
out
sub
or
or
ret
lock
and
sahf
cld
xchg
das
dec
ret
jle
push
cmp
out
or
icebp
sub
cmp
push
iret
mov
add
dec
iret
aam
stos
andb
push
and
in
dec
xorl
cmp
sub
xor
add
pop
xor
in
push
ja
loope
dec
add
pop
iret
xchg
pop
jmp
sbb
xchg
aas
cmp
or
hlt
pop
lock
test
inc
popa
push
dec
loope
xor
ds
mov
scas
fwait
push
fs
or
rorb
jbe
push
dec
jp
adc
cmp
test
adc
filds
inc
jno
aam
pop
sbb
jb
xor
xor
cwtl
sbb
xchg
and
addr16
cltd
stos
ja
movsl
fstpl
mov
dec
mov
pop
adc
imul
or
data16
je
lcall
iret
iret
popa
jp
push
xor
mov
cmc
push
pop
dec
cwtl
aaa
mov
iret
inc
mov
inc
aas
jns
sbb
aaa
adc
mov
test
dec
repz
xchg
pop
ja
mov
insb
repnz
or
mov
mov
inc
fwait
stos
add
xchg
inc
mov
shlb
pop
lret
andl
inc
jmp
fs
cmc
jge
pop
push
xor
sbb
mov
adc
mov
jp
xlat
adc
adc
mov
je
addb
ret
test
push
dec
loop
xchg
popf
in
jo
inc
pusha
test
push
and
roll
jp
dec
movsl
popa
jp
fstpl
std
push
repnz
fs
cmp
mov
fstpt
xchg
sub
jg
pop
adc
xor
cmp
add
enter
xor
sti
nop
sar
sbb
js
adc
dec
pop
stos
jl
icebp
dec
sbb
mov
mov
mov
stc
push
jne
dec
cmp
imul
add
test
mov
loopne
jecxz
sti
jl
or
push
mov
xor
cwtl
lret
dec
sarl
jecxz
std
cmp
sub
cmp
ss
test
inc
mov
imul
or
enter
jp
int3
out
imul
add
aas
lods
sub
int3
cmp
insb
and
call
mov
cmc
push
sub
fisubs
push
addr16
mov
mov
aad
js
pop
push
insb
and
xchg
mov
or
and
mov
jo
movsl
cmc
xchg
insb
pop
adc
xor
lcall
jmp
add
fists
das
scas
faddp
dec
add
push
xchg
test
into
cmp
iret
mov
jno
cmpsb
xor
xchg
loopne
test
inc
push
test
inc
mov
lret
int
and
leave
pop
sti
and
jmp
add
xchg
dec
mov
mov
fmuls
flds
cs
ret
push
popa
mov
pop
ja
mov
movsl
pop
loop
leave
pop
lods
mov
daa
aas
sbb
jbe
pop
pop
les
sub
lea
cmp
mov
lds
clc
mull
movsl
out
or
lret
cmp
sub
inc
sbb
xchg
add
loopne
inc
mov
gs
dec
adc
lds
data16
mov
pop
lea
pop
aad
insl
roll
inc
mov
test
mov
call
out
mov
push
test
int3
lock
mov
add
fwait
into
push
notb
mov
cmpsb
in
fcomip
lret
popa
stc
or
fs
pushf
jl
das
aaa
out
xchg
out
cmpsl
or
aaa
jmp
xchg
out
push
jne
int
pop
fisubs
pop
xchg
jno
lock
imul
xor
imul
fsubs
pop
pop
pop
fwait
sub
jg
stos
mov
cltd
push
shrb
les
fnstenv
cmp
pop
test
or
cmp
sbb
sub
fnstsw
xorl
popf
or
and
mov
xchg
int3
insb
imul
nop
lahf
test
push
jno
popa
stos
shr
cmp
jb
jne
in
add
sub
rcll
push
cmp
dec
scas
inc
mov
cld
fsubl
test
rcl
mov
adc
jge
outsb
dec
mov
sbb
pushf
scas
in
daa
out
dec
xchg
pop
ja
popf
nop
das
jne
out
xor
pop
repz
push
xor
add
test
js
sub
popa
pop
and
and
loopne
adc
lret
es
test
popf
cs
mov
xchg
fcomps
jg
cmp
sub
outsl
xchg
jmp
add
stc
out
inc
mov
into
imul
and
sub
ret
push
sub
jo
pop
fsts
mov
or
das
dec
sub
cld
xor
xor
out
jl
jmp
adc
xor
adc
mov
arpl
sbb
arpl
sub
into
lcall
rcrb
pop
outsb
test
and
outsb
or
push
inc
aaa
icebp
addr16
shrb
dec
aad
lock
push
mov
fisttpll
push
mov
icebp
popf
mov
dec
mov
in
daa
andb
sti
mov
dec
push
push
push
aaa
inc
adc
pop
scas
adc
enter
cwtl
enter
data16
xchg
js
push
mov
dec
cmp
add
pop
je
and
imul
push
pushf
add
daa
push
inc
arpl
inc
sbb
cltd
sahf
jbe
push
inc
mov
xorb
sub
inc
jecxz
mov
mov
clc
cltd
cs
call
add
mov
repnz
xor
mov
scas
cs
lahf
pop
sub
and
inc
ret
cmc
or
mov
mov
push
pop
cltd
int3
dec
lds
sbb
push
push
mov
aaa
in
xchg
jne
sbb
jmp
sub
fldcw
cmp
xor
mov
and
jno
xlat
cmp
out
xor
into
sub
and
int3
insl
cmp
stc
aas
mov
mov
icebp
int
das
mov
or
push
fisttps
push
pop
dec
jo
dec
dec
fcomps
movsb
mov
push
iret
aam
sub
adcb
mov
inc
fistl
scas
daa
mov
mov
lock
inc
pop
in
pop
push
out
or
bound
dec
mov
jg
adc
aaa
pop
xor
or
dec
mov
cmc
inc
and
leave
or
leave
outsb
xor
scas
mov
cmp
mov
movsb
cmc
push
xor
andl
mov
sub
mov
or
xor
pop
rcr
cmp
jg
jle
mov
pop
pop
jge
popf
dec
rolb
xor
sub
xchg
ret
cmp
pop
lods
cs
push
add
or
out
or
cs
dec
movsb
out
xchg
in
out
test
loope
xor
pushf
xchg
gs
mov
pop
inc
jne
ror
pop
jno
xchg
jnp
push
in
lock
pop
mov
idiv
stc
les
clc
or
inc
mov
adc
jns
mov
int
or
dec
in
popf
or
xor
jmp
and
mov
fucomip
je
mov
inc
addr16
popa
nop
mov
mov
iret
call
pop
sub
cmp
and
inc
sti
sub
lret
jnp
arpl
xlat
add
jnp
loope
dec
lock
into
clc
popf
or
iret
add
or
lret
stos
jg
test
lcall
sti
jae
inc
out
flds
adc
mov
adc
xorb
sbb
xchg
jmp
out
cwtl
pop
outsb
sub
sbb
push
inc
push
icebp
lods
les
xchg
mov
nop
pushf
addr16
xchg
or
shlb
inc
inc
dec
inc
push
outsl
loop
sbb
cmpsb
aad
sbb
sub
mov
outsb
fdivl
xchg
sub
sub
pop
jno
inc
xchg
sub
sahf
cmpsb
adc
fldz
mulps
cmp
pop
aaa
mov
and
add
ja
cmp
imul
cltd
pop
inc
cmp
xchg
and
adc
aaa
xor
and
jae
fwait
gs
adc
mov
inc
jle
sbb
stos
xor
inc
and
add
jnp
les
adc
les
pop
or
cltd
cmp
and
dec
pop
adc
mov
mov
faddp
outsb
cmc
test
xor
jecxz
stos
insl
sahf
sub
cs
js
mov
pusha
addb
pop
cmp
mov
outsb
stos
pop
pop
in
push
jge
xchg
out
out
sub
push
loopne
jl
loopne
mov
pop
push
loope
sti
js
subb
lcall
pop
in
jnp
jo
adc
loopne
push
addps
inc
in
leave
cmc
sub
arpl
dec
in
mov
aad
test
fmul
jno
aas
gs
rcl
push
adc
sahf
mov
dec
ficoml
testb
sbb
push
cmp
fiaddl
jnp
pop
xchg
mov
xlat
sbb
jae
mov
fadd
addr16
std
pop
sahf
adc
cltd
lret
sbb
loopne
pop
test
add
mov
or
jge
shll
int3
pop
outsb
pop
adc
adc
sbb
sbb
fdiv
mov
jl
repz
iret
inc
iret
jb
es
cmp
test
sbb
lods
rcr
in
and
jg
cmp
sub
movsb
lock
and
popa
out
mov
dec
push
ljmp
jbe
outsl
pop
sahf
cmp
mov
loopne
imul
dec
mov
add
gs
mov
push
push
dec
scas
mov
insl
pop
in
sub
repnz
clc
ffreep
inc
dec
mov
and
push
or
inc
cmp
hlt
pop
and
add
aam
mov
adcb
jg
adc
int
popa
out
inc
loopne
xor
into
imul
enter
dec
int3
faddl
adc
dec
cmp
out
repz
fidivs
mov
jnp
jno
fldenv
or
fs
add
push
adc
ficompl
push
cs
insb
sub
inc
repz
scas
jb
and
in
rol
xchg
mov
insb
ljmp
jecxz
mov
lds
enter
aam
sti
iret
daa
push
test
pop
or
je
mov
in
lret
add
andl
mov
into
sub
ret
out
sub
cwtl
pushf
sahf
shlb
mov
in
adc
mov
push
and
clc
adc
out
or
cld
add
pushl
push
sub
and
int
es
int
and
lcall
mov
push
jecxz
fmull
mov
test
cmp
mov
pop
xlat
lea
rep
cmc
mov
and
xor
into
cmpsl
rcll
mov
sarb
mov
stc
push
xchg
sti
sub
mov
enter
lret
scas
mov
out
imul
add
mov
out
daa
mov
jp
adc
out
out
insb
subb
mov
cs
out
out
arpl
mov
mov
lods
add
lcall
inc
cld
int
mov
mov
enter
out
xor
mov
inc
sub
fwait
sbb
jnp
arpl
adc
jbe
jnp
std
mov
push
push
inc
cmp
ljmp
iret
cld
out
pop
dec
hlt
nop
lods
mov
jg
adc
jb
sarl
push
jge
fsubrs
cmp
arpl
dec
cmp
xchg
jbe
and
mov
mov
inc
fcmovnbe
cmp
adc
dec
push
dec
aas
cmp
push
ret
mov
xchg
jg
dec
mov
mov
daa
sub
or
dec
mov
iret
popa
cli
sbb
mov
rorb
jle
loopne
add
cld
inc
stc
sti
test
cltd
mov
dec
adc
ljmp
adc
outsl
jne
aas
add
xor
mov
and
sbb
mov
sub
pop
cmpb
mov
push
dec
or
and
call
sbb
in
cli
add
jnp
pop
jbe
xchg
fs
aaa
dec
cmp
adc
test
mov
inc
and
jecxz
cmp
pushf
lret
pop
mov
cmc
call
mov
int
jg
adcl
out
aad
dec
dec
xor
adc
dec
fistl
jb
inc
pop
cmpsl
sbb
mov
or
mov
jg
fisttpll
je
out
fisttps
and
mov
into
repz
pushf
inc
sub
pop
jnp
push
inc
bound
fstpl
cmpsl
mov
inc
sub
out
int
clc
or
jmp
xchg
xchg
movsl
xchg
mov
push
dec
call
xchg
jle
iret
pop
add
ds
adc
push
sbb
lods
movsl
test
arpl
sarb
push
fsubp
mov
je
mov
sub
push
iret
fisubrl
jle
mov
insl
jnp
daa
call
lods
xlat
xchg
push
xor
cmpsb
add
dec
jb
gs
jns
push
jbe
js
mov
fldt
test
rcrl
add
xchg
dec
cmp
cs
js
or
insl
iret
sahf
int3
fdivs
xor
cmpl
dec
lock
sahf
pop
cmc
sub
cmpsb
cli
inc
out
push
lret
xor
jmp
inc
inc
outsl
lahf
cmp
cltd
push
xor
scas
cmp
push
mov
jmp
mov
movsl
xchg
lods
push
bound
and
xchg
ret
sub
lahf
jbe
int3
rorb
cmc
adc
neg
neg
js
clc
jl
cmp
jnp
dec
add
push
mov
shrl
dec
push
in
mov
jle
mov
movsb
mov
jg
push
jno
mov
push
cmpsb
lea
sbb
dec
es
dec
pop
mov
mov
sub
mov
cmp
mov
fucomi
xchg
insl
jno
in
pop
imul
test
aaa
dec
pop
pop
movsl
jmp
push
movsb
nop
add
jecxz
stc
lods
lret
divl
loope
aaa
mov
add
xorl
cmp
rep
fcmovnu
icebp
sub
hlt
std
iret
test
add
adc
push
pop
imul
repz
aaa
fcom
cld
lods
cmp
mov
lret
sbb
cmpsl
push
shl
mov
les
dec
call
inc
inc
cmpsl
js
rcrl
fwait
sbb
es
fsubs
into
pop
cmc
push
push
sti
add
inc
cmpsb
lods
aas
push
mov
mov
cmp
int3
pusha
and
lret
shrl
in
sahf
jge
repz
in
jns
add
xchg
stc
ret
leave
or
out
xor
sub
lcall
sub
dec
fwait
push
mov
jecxz
mov
test
jns
xchg
add
outsl
pop
cs
cwtl
in
repz
push
mov
push
test
xor
cmp
ret
pop
and
and
stos
xor
std
mov
jle
movsl
mov
xchg
daa
pop
mov
mov
test
enter
mov
ljmp
inc
std
mov
out
loop
int
and
scas
sbb
dec
sub
ret
sti
mov
mov
sub
inc
push
push
cmp
xor
es
jne
ds
and
fsts
outsl
dec
lcall
nop
push
push
jle
add
vcmpneq_oqsd
daa
mov
push
inc
das
aas
out
pop
push
cmpsb
andl
je
fmuls
loopne
xchg
push
push
push
cli
js
movsb
popa
and
inc
aaa
fucomi
jbe
jl
mov
icebp
in
les
xor
mov
push
jl
inc
cld
xor
int
stos
or
in
or
inc
adcl
repz
jnp
scas
add
shlb
daa
push
in
lret
bnd
adc
mov
and
sub
inc
lea
lods
jbe
sub
inc
or
out
or
call
shlb
and
jne
stos
in
in
ljmp
fwait
mov
inc
pop
push
mov
iret
out
mov
cmc
dec
add
and
dec
clc
leave
dec
popf
dec
and
dec
mov
adc
jbe
pop
pop
adc
pop
adc
sarl
mov
cli
lcall
and
addr16
lret
arpl
or
sarl
mov
jmp
xchg
scas
and
jns
pop
movsl
mov
shll
addr16
int3
pop
test
cmc
xchg
xlat
xor
jo
adc
xchg
dec
nop
sub
push
nop
imul
add
sbb
and
push
xor
adc
pushf
or
cmp
xchg
dec
rorl
xchg
mov
fists
jl
test
int3
xor
jb
lods
mov
push
jmp
fdivl
roll
jle
cmp
sbb
xchg
fptan
fisttpl
lods
iret
sbb
test
mov
adc
xchg
cmc
push
jne
adc
inc
adc
sbb
mov
js
movsl
push
lds
sub
mov
sbb
push
call
loopne
nopl
stc
cmp
xchg
jnp
pop
repnz
xor
mov
sbb
es
push
mov
movsl
scas
imulb
lods
cmc
movsb
push
into
scas
inc
test
imul
imul
js
xor
sub
neg
sbb
mov
cli
mov
test
sbbb
adc
stc
pop
mov
dec
sbb
flds
out
mov
mov
into
xchg
test
ja
mov
rcrl
mov
shll
and
imul
fsubrl
adc
jb
sbb
into
jnp
xchg
sbbb
lock
ljmp
dec
out
push
in
outsb
push
mov
mov
test
cmpsb
sbb
pop
mov
pop
in
mul
clc
aas
push
cltd
js
jge
and
and
out
and
bound
loopne
or
dec
das
cld
sbb
mov
repz
cmc
mov
mov
out
insl
add
cmpsl
jbe
dec
and
push
dec
jnp
xchg
sub
arpl
pop
push
test
ret
sbb
divb
in
fstpt
movsl
sbb
xor
idiv
es
out
cmp
mov
mov
imul
pop
es
sahf
call
and
xor
shr
xor
mov
xchg
adc
pop
std
inc
jo
adc
sti
jl
mov
add
mov
pop
cld
mov
sub
xchg
lock
dec
or
pop
jp
xchg
mull
lahf
out
jmp
fistps
filds
jl
or
mov
int3
mov
add
inc
shlb
fs
and
fimuls
dec
ss
stos
pop
testl
jp
cli
in
push
inc
in
test
sbb
repz
xor
xor
fsubl
iret
int
and
mov
ret
ret
out
shlb
aam
clc
mov
lret
lahf
mov
xorb
jecxz
push
lea
insb
xchg
inc
mov
push
jae
pusha
pop
popf
mov
xchg
pop
inc
inc
add
cmp
jmp
cmpsb
daa
dec
pop
mov
adc
push
cld
ljmp
mov
pop
cmpsl
mov
scas
or
cmp
dec
lock
mov
mov
xor
pop
add
xchg
mov
test
mov
push
adc
sub
movsb
out
mov
jp
add
jg
stc
sub
cmp
inc
stos
inc
movb
or
pop
sbb
pop
sbb
pushf
fs
filds
movsb
sub
xchg
cmc
adc
cmp
notb
push
xchg
sub
and
sub
mov
lret
pop
ss
dec
adc
rol
js
jo
orl
xor
mov
jns
xlat
cltd
add
xchg
sbb
xchg
inc
repnz
or
dec
add
outsl
sub
jecxz
push
test
push
xchg
sbb
adc
xchg
sub
mov
or
cli
jnp
xorl
mov
pop
add
sbb
rorb
js
pop
scas
insl
or
in
or
js
insl
and
dec
stc
pop
xor
xchg
pop
mov
into
subl
mov
and
mov
mov
inc
and
sub
push
ss
std
lock
jno
jmp
xor
xor
jmp
inc
or
xor
or
adc
push
jne
out
fsubr
mov
ds
ljmp
ret
mov
pop
lea
sub
sarl
pop
jmp
pop
adc
xorb
fcoml
sub
pop
dec
sub
pop
fdiv
sub
imulb
out
dec
mov
test
stc
icebp
cld
call
add
add
push
shrb
in
pop
pop
stos
jmp
insl
dec
xor
inc
cld
add
mov
outsb
or
shrl
jl
dec
fsubp
mov
pop
lahf
das
test
cli
iret
mov
mov
xchg
sarl
cmpl
iret
lods
roll
dec
xchg
mov
leave
sarl
inc
xchg
sub
cmc
adc
insb
cmc
jle
xor
das
fsubs
cmpsl
in
cltd
xchg
sub
loope
call
cmp
cmp
andb
and
repz
nop
xchg
call
inc
enter
jle
dec
icebp
jmp
pop
pop
hlt
mov
add
mov
push
cmp
sub
sub
iret
jge
jmp
stos
shrb
add
das
cmp
rcrb
imull
add
outsl
xchg
repnz
jg
es
lahf
negb
dec
adc
ja
imul
xor
imul
jp
out
dec
neg
in
push
hlt
addl
jno
inc
sti
and
stc
pop
xchg
or
mov
inc
sub
or
jmp
push
and
stc
sub
out
xor
gs
sbb
dec
xchg
iret
fdivl
cmpsb
insl
jg
lahf
mov
pop
push
sub
push
fmuls
push
cmc
adc
pop
int3
push
inc
mov
rorl
rclb
aaa
cmpsl
repnz
pop
lods
lods
lock
pop
mov
xor
add
ljmp
add
test
pop
push
mov
adc
mov
fstpl
adc
mov
or
xchg
sub
inc
pop
inc
mov
mov
sub
daa
lret
les
adc
sbb
xchg
push
jb
inc
ss
imul
int3
cltd
adc
push
lods
cmpsl
fcompl
popa
test
jecxz
push
mov
and
adc
jne
insb
mov
insl
pop
dec
es
cmpsb
jnp
xor
sbb
scas
jmp
fdivrl
sub
jns
in
push
pop
push
dec
pop
lahf
xlat
test
adc
rcll
push
jbe
pop
add
and
popa
out
out
and
in
push
mov
lock
push
jne
bound
mov
outsb
add
lea
std
xor
mov
xor
jmp
adc
adc
fisttps
mov
inc
sbb
jns
rcr
fsubrp
ds
inc
fnstcw
repz
nop
mul
stc
adc
sbb
xchg
in
sub
sahf
repnz
xor
std
test
cld
cmp
fisubrl
add
lea
dec
xchg
ljmp
hlt
mov
adc
pushf
add
inc
lret
push
mov
pop
and
cmpsb
jge
inc
push
test
sbb
xchg
sub
jbe
xchg
mov
mov
xlat
popa
in
and
test
mov
in
out
inc
sbb
sbbb
lods
outsb
movsl
into
push
int
scas
add
pop
mov
or
cld
ljmp
loop
gs
sbb
leave
mov
push
xchg
aam
gs
adc
cmp
xchg
shrl
and
sub
fs
and
add
jae
sbb
jp
xor
jbe
mov
push
add
push
mov
jg
add
xor
cmp
push
pop
mov
fisubrs
add
mov
cmp
dec
fidivrs
fucom
pmulhuw
cmp
in
out
in
fistpl
cmp
test
xor
test
jb
imul
fdivrs
jp
ds
cmpsb
sbb
test
cmp
aad
mov
loopne
out
cmc
and
xor
mov
sti
int
in
test
in
xor
mov
outsl
jmp
dec
mov
test
mov
mov
xchg
pop
push
outsl
daa
ret
sub
mov
js
outsb
fidivrl
sub
pop
or
test
fidivl
or
cmp
inc
dec
mov
stc
dec
mov
cmc
xchg
stos
rclb
call
xor
pop
lcall
mov
push
fmul
repz
fimull
popa
ljmp
adc
cli
pop
in
sub
mov
int3
xchg
dec
imul
pushf
mov
dec
cmp
iret
dec
xor
cmp
nop
shr
mov
sub
out
ljmp
test
inc
dec
fnsave
mov
js
ret
mov
mov
jns
call
or
cli
iret
add
aad
stos
or
inc
scas
jo
sub
popa
scas
xchg
int
cmc
in
cltd
shrb
push
clc
pop
lods
cld
jmp
loop
mov
cmp
push
add
inc
push
add
dec
mov
add
loope
mov
movsb
ds
pushf
cmp
repz
es
sub
repnz
mov
xchg
lret
into
cs
pop
dec
pop
sbb
into
je
outsl
jl
mov
fidivrl
mov
mov
stc
cmpsl
fidivs
jb
push
les
mov
jno
loopne
les
mov
divb
xchg
fadds
xor
stos
aaa
adc
sti
loope
in
pusha
mov
xor
xor
movsb
sarb
in
or
adc
loopne
jo
leave
inc
or
jbe
fnstenv
mov
hlt
mov
rcrl
lcall
jge
push
loopne
stos
mov
les
dec
mov
add
ficomps
loop
push
sub
fdivp
int
negb
and
pop
int
repnz
inc
idivb
pop
cmp
and
adc
jnp
mov
jbe
stc
mov
lcall
push
add
mov
scas
lods
push
dec
push
xchg
cmpsb
je
dec
push
rol
xchg
loop
aad
ja
pop
push
fnsave
bound
dec
lret
jae
or
pop
movl
cs
mov
das
cli
or
loopne
mov
aad
negl
mov
mov
sarb
ret
pop
push
int3
or
and
ficompl
xlat
and
lods
je
int
push
sub
popa
mov
sub
jno
push
fisttpll
dec
dec
imul
mov
movsb
decb
insl
jl
sub
inc
mov
mov
adc
cmp
in
push
cmp
pop
test
fistps
mov
cmpsb
sti
nop
icebp
mov
mov
sub
cmpsl
lods
imul
out
dec
cmp
insl
add
add
xlat
inc
jp
pop
mov
fwait
mov
data16
adc
movsl
lcall
add
das
mov
shlb
shll
mov
out
xor
hlt
neg
or
scas
clc
loopne
js
xchg
in
pop
lea
bound
mov
pop
add
fwait
scas
aam
xchg
or
test
cmp
pop
sub
jnp
imulb
mov
fisubrs
mov
dec
dec
jp
xchg
mov
outsl
cwtl
push
icebp
mov
xor
push
jg
std
sbb
aam
mov
sbb
je
adc
push
in
das
imul
cmp
iret
flds
repz
aaa
fldl
sub
inc
popa
sub
dec
dec
sbb
incl
mov
lret
popf
nop
xchg
enter
js
inc
jb
pusha
mov
push
pushf
cs
cmp
lahf
push
sub
push
pushf
jge
add
mov
xchg
cmpsl
sahf
in
xchg
jl
sub
int
hlt
leave
dec
fwait
leave
push
call
data16
imul
sub
out
cmp
imulb
data16
aaa
pop
jge
push
sub
and
das
lret
adc
movsl
xor
dec
pop
les
inc
cli
shl
fdivs
adc
mov
sub
ja
ss
loope
aad
xchg
pop
test
cmc
push
jecxz
cmc
push
out
push
xchg
add
mov
dec
shr
aam
sub
cwtl
and
cmp
dec
maxps
aaa
xchg
xor
mov
xchg
xor
pop
arpl
fistl
mov
xchg
in
in
ret
stos
data16
cmp
mulb
dec
pushf
dec
or
xchg
lods
cwtl
push
xchg
sbb
repz
dec
leave
mov
sbb
xor
test
add
push
pop
pop
cwtl
in
add
xor
repz
cmc
adc
std
dec
orb
mov
stos
pop
addr16
call
mov
inc
mov
xchg
sar
jl
es
imul
adc
cmp
pop
out
es
jns
adc
pop
mov
hlt
arpl
inc
jns
adc
sub
or
cs
imul
adc
pop
popf
adc
ss
or
sbb
cli
inc
cmp
xor
iret
inc
lret
retw
or
into
stos
addl
pusha
jno
fbstp
jmp
xor
in
fsts
daa
out
xchg
leave
ret
test
imul
insb
sub
out
xchg
xor
sub
cwtl
ss
sub
sti
xor
and
cwtl
movsb
jmp
in
test
loop
sar
add
xor
mov
and
ja
sbb
push
adc
inc
jo
add
fwait
xor
adc
stos
mov
or
cmpsb
test
mov
les
rcll
xchg
inc
mov
mov
sbb
pop
lods
rorb
pop
inc
mov
sbb
es
jne
movsb
adc
daa
dec
or
jmp
xchg
push
jb
sti
dec
and
mov
cmp
xchg
mov
out
ret
lcall
push
jae
inc
inc
and
loope
ja
sarb
dec
cmp
sbb
push
sti
imul
sarb
xchg
xchg
xor
jne
in
mov
movsb
sub
push
repnz
dec
inc
stc
mov
sbb
outsb
sub
stc
push
pop
jne
test
scas
add
std
ret
jns
out
and
loop
mov
testb
mov
push
mov
ret
cmp
dec
mov
inc
jecxz
sbb
loopne
aam
test
int
call
push
adc
and
mov
add
es
xchg
and
sarb
mov
cmp
sbb
fimull
cmp
sbb
es
mov
arpl
je
sub
pop
orl
outsl
test
mov
inc
fidivrs
sbb
leave
in
out
into
xchg
mov
in
or
and
cwtl
mov
imul
les
add
dec
cli
xchg
pop
data16
call
leave
lods
cltd
dec
pop
mov
ss
xor
ret
adc
fdivrl
jmp
inc
lret
inc
mov
addr16
dec
sbb
inc
mov
cmp
lret
shr
cmp
insb
mul
sub
dec
icebp
pushf
sarb
inc
jg
idiv
jb
or
sub
lock
ds
std
sub
or
out
xor
lahf
lea
xchg
cmpsb
stc
cmp
xchg
mov
out
and
inc
xchg
int
mov
push
inc
sub
push
xchg
xor
repnz
scas
dec
jae
jecxz
in
mov
clc
jns
movsb
xchg
leave
add
jae
imul
in
pop
repz
xor
ja
push
xchg
leave
pop
lods
stos
roll
and
pop
pop
push
push
jg
sti
loop
js
sbb
xor
mov
fnsave
jmp
add
adc
add
inc
pop
xchg
xor
clc
pop
jno
inc
nop
scas
jns,pn
push
and
notl
dec
mov
dec
cmp
clc
jno
push
test
fisttps
xor
dec
fs
rol
inc
ds
push
inc
xchg
test
and
add
repz
hlt
adc
testb
das
cmp
jmp
mov
fnstenv
shll
add
jecxz
xchg
in
mov
jl
xchg
inc
mov
inc
addl
add
xor
xchg
jno
push
repnz
out
dec
es
and
mov
mov
jb
xchg
fisubrl
push
aad
test
daa
mov
or
and
lret
sbb
cmp
sbb
pop
mov
out
xchg
out
jne
sbb
sub
rorb
cmp
mov
jg
dec
cli
push
das
rcll
test
cmp
fwait
je
sar
mov
aaa
lds
add
cmp
sub
ja
inc
mov
cmp
push
rclb
cmpsb
aad
daa
sarb
pop
sub
mov
mov
adcb
push
gs
mov
jnp
adcb
rcll
push
mov
divl
push
adc
adc
arpl
jne
inc
jbe
xor
xor
rorl
aad
or
pop
jno
jbe
fisttps
lret
mov
setle
xchg
shll
pop
dec
dec
hlt
sahf
pop
dec
dec
ljmp
mov
ret
mov
xor
pop
out
cmp
jne
mov
in
or
pusha
sub
jmp
mov
addr16
sbb
hlt
push
dec
jnp
lea
fidivrs
sbb
test
js
and
scas
xchg
push
xchg
jecxz
dec
in
push
pop
pushl
setne
and
lret
hlt
sbb
pop
addr16
xchg
clc
call
shlb
scas
aad
inc
push
pop
dec
cmp
das
mov
lds
je
aaa
inc
or
in
and
iret
jae
gs
bnd
sub
mov
jns
cmpsl
in
jae
push
push
cmpb
xlat
add
pop
xchg
push
call
lcall
insb
mov
dec
cli
dec
mov
xchg
lods
rcl
jmp
rcll
repnz
testl
and
cmc
pop
mov
push
or
or
sub
loop
adc
sbb
and
inc
mov
push
cld
xchg
mov
jge
fdiv
or
add
out
cltd
or
inc
movsb
xchg
xchg
sub
adc
or
iret
xchg
jbe
addl
cmp
adc
rcll
sub
inc
sahf
xchg
push
mov
icebp
mov
gs
ficomps
sub
test
xor
and
xlat
or
xchg
sbb
es
fdivrs
xor
fwait
cpuid
movsl
rcr
fisttpl
call
push
stos
pop
pushf
sub
push
sub
mov
jecxz
xchg
aas
and
mov
mov
pop
cmp
adc
pop
hlt
sub
cmp
mov
inc
dec
inc
add
or
enter
je
or
filds
int
scas
in
cmp
in
ret
inc
mov
je
xchg
pushl
jae
mov
push
dec
sub
out
dec
xchg
pop
out
loop
jnp
imul
or
f2xm1
pop
js
dec
popl
ret
xlat
mov
mov
addr16
dec
sub
sbb
push
aam
rolb
mov
negb
push
addr16
popa
test
lods
cmp
dec
push
mov
mov
ds
sbb
arpl
pop
adc
rorl
jp
repnz
out
fisubl
es
sub
mov
cmpsl
cwtl
cs
xchg
enter
pop
push
loopne
sbb
pushf
xchg
jg
mov
xor
pop
push
and
sub
xor
out
xchg
mov
pop
cmp
xchg
mov
mov
jmp
adc
outsb
scas
push
xorb
movsb
jge
add
push
cmp
enter
int
mov
pop
and
dec
daa
ss
push
mov
fnstenv
sbbb
adc
pop
lock
and
xor
ret
mov
call
aaa
cmp
mov
inc
add
popf
xchg
div
add
andl
lcall
lcall
push
arpl
shrb
movsb
jp
and
lock
jo
sbb
dec
cmp
push
ljmp
ds
or
lods
je
scas
push
sub
imul
inc
fdivs
pop
dec
test
daa
repz
fstp
pusha
mov
cmc
bound
out
mov
dec
in
pop
out
lods
sub
je
jae
scas
mov
xchg
mov
dec
jnp
pop
mov
mov
das
andl
pushf
cmp
sbb
ss
aaa
mov
repz
mov
lods
adc
shll
inc
lock
outsb
andl
adc
push
lods
mov
xor
jbe
or
inc
lcall
sahf
pop
decb
je
fistpll
ret
dec
mov
cmc
mov
dec
int
lret
leave
and
mov
sbb
mov
dec
cld
movsb
lret
inc
lcall
les
daa
into
cmp
mov
loopne
jnp
cmp
inc
scas
fildll
push
sub
inc
xchg
sbb
out
and
sbb
rclb
sub
shl
sarb
jecxz
aad
movsb
jns
fildll
inc
xlat
dec
xlat
lods
mov
sub
repz
ljmp
mov
jg
cmpl
hlt
dec
push
pop
call
sub
xchg
or
call
cmp
mov
outsl
in
cmpl
jns
mov
and
pusha
jnp
cmp
jp
lcall
mov
sub
and
dec
fldln2
ret
outsb
hlt
cwtl
dec
fdivs
pop
aas
mov
xor
sbb
pop
inc
out
pop
fisttpll
and
mov
jbe
fcmovb
push
sbb
pop
pop
pop
push
dec
lret
or
inc
lahf
pusha
xor
pop
inc
fists
popa
jns
xchg
dec
mov
lcall
gs
lret
pop
ja
in
add
stos
or
sbb
push
aam
xlat
xor
lods
sub
inc
xchg
xor
leave
cmp
jno
jae
cmpsl
scas
lret
mov
loopne
and
cld
popf
add
repnz
call
fdiv
inc
in
out
pop
movsl
jbe
pop
cld
testb
js
mov
xchg
mov
xlat
mov
ljmp
les
repz
inc
or
outsb
jmp
or
daa
sbb
imul
or
mov
in
fisubl
push
jns
sbb
add
dec
test
mov
cmpl
lret
mov
xchg
ds
pusha
sub
inc
les
fsubrs
popa
js
into
mov
mov
xchg
cli
jle
and
add
arpl
shlb
in
cmp
sti
lret
adc
cmpl
mov
jmp
push
cmc
enter
mov
pop
jp
add
shlb
push
aas
pop
out
sahf
aam
movsl
subb
xlat
mov
jbe
addr16
out
sbb
cmpsb
pop
mov
insl
pop
mov
sub
cmp
stos
cmp
out
xchg
nop
icebp
aam
loope
mov
push
fstps
sahf
jnp
and
jge
popf
push
sahf
lods
mov
inc
test
mov
push
ficompl
mov
inc
jb
dec
loope
jne
push
sub
xchg
push
jle
mov
jo
int
mov
dec
mov
testl
mov
push
fcomp
mov
ror
pop
js
fldl
mov
mov
sbb
xchg
int
mov
fldl
adc
clc
xor
in
xchg
mov
in
mov
mov
ss
pusha
push
and
out
rcl
dec
in
adc
lods
mov
int3
aaa
lock
iret
je
mov
sbb
sub
pop
cmp
mov
sahf
mov
or
cli
xchg
fwait
xor
mov
adc
adc
dec
pop
inc
xchg
fwait
leave
out
xchg
xor
jno
dec
outsb
jns
ffree
dec
and
push
add
mov
or
outsl
push
mov
stc
mov
je
test
jnp
scas
jmp
push
aas
mov
cmp
mov
inc
sahf
jecxz
add
and
imul
pop
out
and
rcr
pop
pop
mov
mov
push
cmp
rcrl
mov
cmp
dec
lods
mov
ret
imul
mov
mov
pop
and
lods
inc
jo
adc
gs
push
sbb
aad
mov
scas
push
push
out
xor
dec
pop
js
stos
int3
test
dec
jl
ja
inc
xor
out
aam
das
cmpsb
gs
sub
dec
push
and
push
jmp
rcl
mov
mov
imul
test
in
xchg
popl
es
mov
cmpb
mov
sub
outsb
js
adc
out
test
push
jns
rolb
cmpsb
daa
jmp
pop
cltd
mov
fldl
movsl
cld
mov
jmp
outsb
inc
cmp
xchg
f2xm1
mov
leave
sbb
mov
add
ss
test
mov
xchg
sbb
ret
lcall
mov
std
or
mov
mov
sbbl
fcomps
cmc
aaa
xor
adc
or
cwtl
cmp
sbb
or
ret
lcall
mov
cwtl
mov
jno
fs
lret
inc
mov
xchg
movsb
int
pushf
jg
mov
or
xor
sbb
popf
xor
add
fisttps
int
hlt
nop
loopne
add
stc
shll
pop
cmpsb
jne
shll
ret
xchg
mov
repnz
outsb
cmpsb
mov
icebp
fisubs
jmp
ret
pop
adc
out
sub
jmp
push
lock
xlat
mov
mov
cli
cmp
mov
popf
roll
add
or
icebp
push
inc
jle
cwtl
daa
mov
dec
fsubl
out
int3
push
inc
cwtl
test
lds
mov
leave
jp
fwait
iret
mov
subb
fcomp
sub
push
dec
pop
mov
and
xchg
mov
mov
hlt
and
shrb
cltd
adc
out
add
mov
decl
test
mov
adc
and
fisttpl
std
adc
mov
or
jl
adc
iret
pop
in
add
inc
inc
clc
mov
xchg
pop
xor
sbb
lock
mov
bound
in
mov
leave
and
inc
ss
repnz
xchg
stos
sub
int
aas
or
add
pusha
cld
testb
xchg
push
mov
cmpsl
add
sbb
mov
sub
inc
popa
arpl
fcmovbe
insb
xor
insb
bswap
adc
jecxz
loope
test
repz
sbb
push
jge
icebp
add
or
mov
mov
push
cld
mov
push
mov
sarl
mov
adc
inc
rolb
stos
fs
mov
mov
insl
lret
sti
ss
xor
fs
iret
aam
xchg
pop
xchg
pop
jmp
cmp
pop
jle
mov
pop
push
pop
cmp
or
fcmovne
or
adc
inc
sub
dec
fdivrs
mov
push
dec
push
lock
loopne
sbb
dec
mov
push
loope
movsl
rcr
in
push
movsl
push
cli
pop
ds
pop
cmp
out
dec
in
in
sbb
pop
cmp
jns
fidivrl
xchg
sub
sahf
stos
dec
xchg
mov
xlat
nop
loope
sbb
test
mov
jb
pop
xlat
pop
adc
inc
mov
cmp
adc
lds
mov
js
fs
ds
scas
adc
jae
out
inc
movsl
outsb
sbb
in
pop
aaa
jmp
out
adcb
dec
gs
push
sbbl
arpl
adc
fisubrs
and
cs
xor
jnp
imul
fildl
mov
or
test
jmp
mov
sbb
fidivrl
mov
leave
inc
pop
xor
cmp
addps
loopne
in
adc
fnstcw
cltd
mov
adc
sub
fiaddl
mov
aad
lret
mov
outsl
jmp
repnz
add
push
and
dec
and
jae
roll
sbb
add
lret
je
call
test
aaa
jns
jg
das
sub
out
pop
mov
or
and
in
aam
mov
in
inc
inc
mov
stc
clc
stc
or
dec
jp
cmp
jnp
in
push
pushf
iret
jae
ljmp
jno
iret
in
mov
and
stc
js
cmp
adc
rolb
lret
xor
outsl
xchg
repz
cmp
out
xorb
dec
andl
addr16
sarl
xor
sub
sub
dec
das
jo
lods
aad
sbb
iret
out
push
and
lahf
xorl
hlt
aaa
lods
push
push
mov
insl
sahf
das
mov
mov
push
int3
dec
sub
and
hlt
xor
or
lret
je
and
lahf
lret
sbb
outsl
jl
lret
into
and
sahf
sbb
lods
xor
add
sub
sub
pop
push
mov
pop
xchg
pop
rcrl
js
sub
xchg
in
dec
call
pop
xchg
lock
push
pop
addr16
adc
push
xchg
pop
in
out
scas
mov
push
mov
xor
pop
mov
mov
call
mov
fwait
movsl
ds
lock
push
loopne
pop
push
lds
xchg
pop
dec
adc
pop
sub
mov
xchg
or
scas
fdivp
xor
sbb
lahf
mov
sub
lret
pop
js
or
sahf
mov
mov
ret
stos
rorl
in
lods
aad
push
mov
or
fistpll
cmp
dec
or
cltd
xchg
loop
push
int
sbb
dec
test
divb
mov
scas
loop
nop
loop
sbb
loope
pushf
add
dec
dec
icebp
in
and
popa
mov
pop
enter
shr
stos
bound
pusha
or
cmp
sahf
sub
movsl
push
insb
mov
mov
or
jnp
outsb
cli
jbe
pop
push
dec
adc
aaa
xor
adc
mov
ffree
and
or
dec
push
into
mov
dec
sub
ja
fdivrs
xchg
jbe
pushf
fstl
sarb
lcall
fnstcw
dec
sti
adc
lea
aad
js,pn
pop
lret
jno
lods
data16
inc
dec
fs
xor
or
ja
div
and
in
xchg
fistl
push
or
and
mov
mov
in
jae
xor
or
das
aas
sti
dec
pop
out
inc
icebp
push
imul
fcompl
enter
std
add
inc
and
imul
fdivrs
mov
lds
lret
cmp
inc
adc
lcall
sub
and
pop
shrl
stc
test
loopne
sbb
jg
lcall
cmp
xlat
cmove
sub
mov
ret
jle
adc
or
stc
inc
test
out
addr16
mov
ficompl
mov
gs
das
into
pop
pop
mov
in
adc
out
jmp
fdivrp
pushf
jns
cltd
jmp
mov
push
movl
sub
shll
aas
movsb
cmp
mov
out
xor
imul
cmpsl
fisttps
stos
or
lods
jbe
loope
sbb
sti
je
jae
enter
inc
nop
and
pop
add
pushf
sbb
push
jle
inc
pop
cmpsb
mov
pop
orl
cmp
stc
dec
nop
mov
cli
call
or
scas
dec
stc
pop
mov
std
xchg
add
rorb
jno
xor
xchg
xchg
and
and
mov
test
cli
mov
je
push
pop
mov
mov
mov
adc
sbb
daa
test
dec
jne,pt
shlb
bound
adc
inc
jae
shll
aaa
jne
dec
loopne
ret
aas
pop
xchg
cmp
inc
ror
rcll
insb
movsb
imul
rclb
repz
jae
movsb
fs
ret
adcb
es
lock
mov
xor
ss
addr16
xchg
aam
jns
or
push
orl
dec
xchg
mov
sahf
sahf
mov
mov
push
test
clc
lock
mov
mov
cmp
add
ret
pop
andb
xchg
add
mov
andl
jmp
sbb
das
loopne
aad
mov
and
cmp
stc
mov
sub
adc
fldenv
mov
les
data16
pop
lds
mov
pop
mov
dec
sub
cmp
pop
push
adc
fmuls
pushf
test
je
sarl
leave
ret
add
lds
shl
xchg
ret
dec
mov
dec
sbb
cmp
out
xor
pop
jl
mov
pop
les
cmp
add
and
or
sbb
pop
pop
dec
and
mov
inc
std
xchg
testl
fistpll
push
icebp
add
mov
mov
aas
lods
mull
outsl
call
add
dec
aaa
and
cltd
pop
adc
add
and
outsb
adc
cld
cmpsb
push
popa
and
jmp
pop
xor
pop
mov
add
leave
sub
gs
or
mov
dec
pop
cli
aam
incb
cmp
cmp
lds
sahf
loopne
sbb
add
cmc
sub
fsts
jle
sbb
leave
cs
cmp
mov
xor
and
roll
outsl
xlat
ja
insb
adc
push
data16
sub
cwtl
test
and
xor
mov
iret
in
xchg
movsb
ljmp
pop
push
xchg
mov
mov
sub
inc
fbstp
cs
aas
aad
icebp
nop
xor
es
mov
jecxz
jge
adc
loop
loop
scas
sub
jae
mov
imul
pop
and
dec
adc
jno
mov
clc
in
xor
mov
imul
jne
mov
data16
pusha
setnp
jbe
and
xchg
cmpsl
xor
mov
icebp
loop
lods
sub
add
ljmp
fs
fnsave
dec
inc
jmp
sbbb
inc
loop
fildl
mov
mov
std
pop
xchg
ss
cmpsb
out
cltd
imul
xor
scas
clc
mov
rcrb
mov
mov
adc
out
push
test
sbb
push
jp
fldcw
inc
js
pop
gs
xor
and
mov
push
lock
push
jecxz
add
ret
out
cltd
push
sti
jg
lret
mov
cmp
jnp
or
push
ss
icebp
cmc
ja
in
imul
dec
inc
dec
rorb
inc
outsb
lahf
aaa
pusha
cs
jae
scas
push
and
adc
xchg
adc
sti
inc
pop
xlat
xor
lret
push
xor
push
mov
cmpsl
push
stos
andb
mov
js
inc
cltd
shr
negb
add
jg
and
ss
pusha
xor
push
stc
xlat
loopne
cmp
push
pop
scas
insl
test
cmpsb
fwait
ja
xor
les
cmp
lahf
aaa
adc
std
mov
shll
jge
cli
push
sub
pop
xchg
stos
xchg
popa
dec
lock
movsl
test
sub
adc
or
jl
cwtl
push
jmp
fistl
mov
dec
and
jbe
test
in
sub
test
sarl
mov
cs
sub
cmpsb
mov
pushf
jo
and
mov
inc
bswap
and
mov
decl
mov
pusha
outsl
dec
lea
push
xchg
adc
movsb
fsubr
or
inc
add
xchg
das
mov
clc
in
jbe
cmc
fadd
push
mov
pushf
daa
and
popa
lret
je
int
aaa
cmc
sti
pop
mov
xor
dec
push
mov
decl
test
jp
hlt
cmp
test
mov
push
add
xor
data16
mov
mov
or
jge
add
mov
push
int3
clc
jecxz
stos
cmp
push
xchg
add
pop
add
dec
pop
and
aam
rcll
ud0
adc
shlb
popa
aad
sub
xor
shr
add
seta
inc
push
cld
lret
sub
cmpsl
nop
mov
sub
mov
push
and
mov
fwait
xor
add
into
pop
cwtl
jns
mov
aam
mov
pop
insl
ds
mov
jo
mov
mov
repz
inc
mov
jbe
shlb
mov
fcoml
addb
cmp
mov
mov
mov
loop
cmp
and
xor
sub
inc
sbb
insb
pavgw
std
dec
loopne
mov
lahf
mov
mov
icebp
aam
stos
xor
add
fstl
outsl
mov
adc
pop
cmp
push
jae
aaa
or
cld
xor
rorl
pop
jmp
or
xchg
xchg
mov
dec
dec
pop
xlat
xor
lret
mov
les
test
mov
push
ljmp
sbb
or
cld
mov
test
mov
push
arpl
inc
dec
mov
jge
sbb
push
push
pushf
cmp
imul
rol
test
sbb
in
xchg
add
xor
movsb
add
jmp
nop
pushf
je
push
lea
add
jmp
test
or
js
dec
push
mov
lret
out
lock
add
fwait
arpl
mov
push
les
cli
fwait
jb
mov
cmp
pop
push
xchg
xchg
xchg
negb
push
add
clc
popf
mov
xor
inc
mov
arpl
movsl
ficompl
and
mov
es
in
cmp
imul
fidivrs
mov
sub
xlat
mov
mov
sub
and
xchg
das
lcall
rep
popa
push
loope
in
mov
jg
fisttpll
repz
push
cltd
cld
inc
imul
in
test
imul
nop
es
mov
out
lcall
aaa
fwait
pop
mov
or
xchg
jg
inc
and
out
jge
push
sbb
out
rorl
mov
xor
inc
lock
nop
sti
inc
js
mov
push
in
dec
adc
ljmp
adc
sbb
xor
mov
adc
push
sub
in
cmp
xor
and
pop
fs
fisttpll
aad
pop
mov
imul
sbb
faddl
fsub
push
mov
fbstp
adc
dec
sub
and
ja
dec
or
sarl
fprem1
sub
outsl
mov
pop
xor
cmp
inc
and
add
sub
out
or
loopne
lods
imul
dec
dec
fidivrs
popf
pop
add
cld
push
sbb
mov
xchg
cmp
push
sub
mov
out
cwtl
sub
pop
xchg
jo
leave
mov
jb
icebp
arpl
cmp
inc
sub
mov
mov
adc
sub
cmp
dec
push
xchg
jl
out
or
dec
cltd
nop
addr16
leave
mov
push
dec
fisttpl
cmp
std
iret
adc
lea
mov
pop
dec
iret
and
add
push
orb
enter
mov
adc
pop
sub
adc
jb
in
addb
cmpsb
ss
xchg
add
or
jp
lret
add
dec
shr
imul
push
dec
out
jg
cli
scas
push
xor
mov
fwait
popf
push
scas
lds
and
fisubrl
add
out
dec
jle
sub
sbb
xor
mov
das
sbbb
jae
ds
cmp
xor
outsb
sub
ss
xchg
ficomps
je
xor
xchg
repz
jl
ds
sar
into
fimull
cwtl
cli
ret
push
filds
scas
mov
imul
stos
add
pop
dec
or
adc
cltd
popl
mov
insl
test
mov
negl
or
inc
sarb
xlat
hlt
imul
dec
mov
out
xor
ljmp
sahf
cmc
xchg
adc
sarb
mov
imul
jo
jnp
out
pusha
mov
dec
add
push
fcomps
in
inc
jecxz
cwtl
cmpsw
ljmp
sarb
push
pop
mov
repz
push
aad
xchg
push
xchg
mov
xchg
lret
sub
lcall
mov
cli
sti
gs
fistl
xor
sysexit
fs
cli
aas
je
jno
mov
dec
dec
inc
shr
aam
xor
pop
jp
xor
test
and
inc
test
movsb
inc
xor
push
std
std
aaa
mov
push
push
loop
arpl
push
daa
xchg
sub
adc
fstps
mov
subl
push
cmp
jno
pop
jecxz
or
test
data16
mov
pop
scas
dec
cmpsl
sbb
push
test
cltd
jae
mov
in
push
gs
pop
daa
lods
mov
and
shrl
int3
jg
xchg
inc
sti
fidivs
ja
mov
cmp
dec
mov
jnp
jns
jecxz
adc
ljmp
sbb
lods
dec
les
lret
xor
add
movsl
dec
dec
shrl
xchg
dec
stos
xorl
xlat
dec
dec
or
xchg
ljmp
leavew
stos
addl
sgdtl
in
ror
pop
movsl
gs
jge
negl
add
pusha
and
icebp
or
mov
mov
idiv
xchg
inc
push
jge
cmpsb
and
push
and
adc
test
xor
xchg
jecxz
test
mov
pop
gs
xor
mov
psubusb
xchg
mov
push
inc
inc
xor
or
in
push
cli
movsb
in
dec
std
lret
inc
pop
or
push
and
cltd
mov
mov
test
shlb
fucomp
cmp
lret
sbb
lods
mov
sub
lea
or
and
cmp
mov
aam
mov
mov
mov
fidivrs
pop
mov
add
or
mov
pop
mov
mov
xor
dec
fidivrl
repz
push
shlb
cmp
js
mov
shlb
or
je
push
fs
push
or
mov
jae
mov
icebp
fdivl
in
cltd
in
cld
sbb
dec
pushf
sbb
jge
andl
lret
sbb
and
sub
loopne
mov
cmp
cltd
subl
or
mov
dec
lods
cmp
je
adc
inc
adc
in
adc
mov
ret
out
sub
std
das
mov
insl
xor
movsl
stos
sahf
ss
pop
mov
pusha
movsl
js
inc
cmp
cmpsb
xchg
and
push
movsb
loop
fmuls
hlt
jae
in
jg
mov
and
pushf
pop
xchg
into
outsb
mov
lds
xor
cmp
outsl
push
in
sbb
scas
test
ror
push
fsub
jl
push
pop
and
xor
cmpsl
or
pop
aaa
mov
ljmp
daa
mov
lret
jne
stos
test
mov
dec
inc
fucom
clc
xchg
sbb
ret
cmp
xor
cwtl
cmp
fs
jle
sti
jno
or
mov
rcr
sub
and
out
icebp
mov
int3
cmpsb
xor
mov
push
loop
test
sub
repz
inc
rcll
int
pop
fwait
mov
aad
inc
loop
lock
and
inc
pop
xchg
xor
les
out
xchg
cwtl
loop
outsb
sub
mov
lds
inc
cltd
mov
pop
sti
adc
xchg
das
repnz
stos
sub
xchg
bound
push
mov
pop
dec
jns
pop
cmp
aad
dec
sbb
mov
aam
stos
dec
movsl
nop
loope
packuswb
adc
iret
pop
in
xchg
xchg
lret
shr
aam
push
push
lods
mov
fcmovu
cltd
xlat
jnp
enter
lds
dec
inc
fidivrs
filds
xor
inc
mov
jo
adc
pop
jo
je
outsl
pop
rorb
xchg
out
adc
xchg
fdivl
pop
sub
movsl
in
xchg
jg
sahf
insl
test
xorl
iret
aas
sbb
dec
adc
sub
sub
xchg
mov
or
adc
cmp
xor
loope
cmc
gs
cmp
hlt
or
rorl
inc
test
push
pop
rolb
into
jecxz
rcrb
insb
xchg
adc
push
clc
adc
dec
outsl
divl
icebp
mov
fst
dec
dec
or
aam
adc
dec
pop
xchg
subl
loope
mov
push
rclb
mov
mov
mov
jge
xchg
push
cmc
add
fisttps
mov
in
inc
mov
xor
repz
mov
or
int3
or
leave
sub
imul
aaa
mov
and
aaa
test
cmpsl
mov
mov
add
xchg
and
std
and
xor
loop
arpl
mov
scas
test
je
shll
or
cmp
pop
mov
cmp
jg
sbb
mov
insl
sahf
jno
pop
inc
lret
sahf
pop
add
mov
test
sbb
jge
sub
out
or
jns,pt
movsl
pop
jecxz
xchg
iret
test
fs
jle
roll
pop
dec
push
lods
in
movsb
and
pop
add
dec
shr
xchg
push
stos
in
inc
mov
push
mov
ret
jbe
cltd
or
sbb
and
pop
repz
je
out
lods
xor
xchg
add
mov
dec
mov
clc
push
cli
mov
aam
xchg
xchg
pop
jg
cmp
insb
sarb
outsl
push
cmpsl
push
mov
sub
test
scas
ljmp
clc
pop
mov
mov
lahf
jns
data16
sahf
es
rorl
cmp
int
adc
mov
lcall
fcoml
lock
inc
push
lods
scas
xchg
shll
cwtl
jg
or
lret
push
cmp
cmpsl
leave
jp
leave
mov
std
aad
xchg
inc
mov
orb
lret
mov
xchg
add
lods
out
pop
dec
out
cltd
adc
insl
fsubrl
inc
repz
lods
js
xchg
lcall
sbb
jne
outsl
repnz
fmuls
inc
popa
hlt
sub
cmp
cmp
cmp
push
mov
mov
gs
movsl
fs
notb
xor
pop
leave
mov
pop
mov
dec
sbb
mov
fwait
shr
or
push
das
sbb
fsubs
repnz
jno
das
pop
inc
mov
jns
in
xor
mov
sbb
imul
imul
or
fsubrp
xor
xor
nop
pop
xchg
ja
adc
es
xchg
push
mov
cwtl
or
jo
mov
inc
mov
or
mov
cmp
scas
cmp
ret
xor
insl
xor
pop
shrb
or
fwait
loopne
andb
enter
movsb
mov
das
jecxz
fs
sbb
adc
enter
mov
inc
ret
or
sbb
jo
dec
pop
xchg
mov
xor
sub
popa
sbb
jb
push
cli
stc
mov
sub
enter
sbb
mov
push
sbb
gs
jbe
pop
xchg
pop
stos
push
leave
stos
lea
mov
add
lret
pushf
or
xor
jb
fimull
jge
xor
mov
popa
mov
cmp
aaa
divb
les
sbb
sub
jle
ljmp
iret
test
scas
and
mov
call
test
dec
mov
lds
jge
call
icebp
sahf
and
xchg
fisubs
test
in
mov
ret
fsubp
and
cmp
push
cmp
in
xchg
shrl
jne
fnsave
and
lods
loopne
cmp
add
int3
cmp
sbb
cmp
pusha
stos
cmp
sub
cmp
jmp
sub
stos
ficomps
cmpsl
inc
out
push
or
and
nop
inc
test
aas
xlat
clc
or
sub
lret
push
cmp
cmp
jno
je
fsub
push
push
or
and
cmp
lahf
lods
xor
push
mulb
cmpsl
in
xor
xchg
shlb
push
sub
xchg
call
imul
mov
sub
shl
in
rolb
into
xchg
pop
in
repnz
sbb
push
das
sub
sub
mov
push
cmc
jbe
repz
icebp
inc
push
into
mov
idiv
cmpb
cld
mov
in
jecxz
dec
stos
cmpsl
hlt
sub
shl
mov
negl
inc
rclb
insl
mov
addr16
xchg
js
jno
pop
mov
jle
jns
or
fmull
es
and
dec
addr16
pop
lahf
push
jmp
mov
movsl
sarl
jle
jge
imul
mov
je
ret
imul
movsl
mov
sub
lret
push
loopne
jnp
ret
out
or
loope
add
mov
test
enter
fnstenv
inc
jne
and
pop
scas
sub
xchg
pop
int
sbb
dec
loop
sti
aad
mov
xchg
insb
xchg
fneni(8087
push
mov
cld
call
xor
sbb
repz
std
int3
dec
daa
lock
mov
cmp
cmp
cwtl
lock
movsb
sub
aas
mov
pop
mov
xchg
xchg
movsb
sub
notl
fisubl
jmp
lcall
movsl
inc
push
mov
inc
add
arpl
fcoml
inc
pusha
out
insl
aad
add
or
adc
xor
test
mov
in
lcall
cmpsl
mov
test
mov
cmpsl
mov
leave
icebp
inc
arpl
cmpl
icebp
pop
imull
call
aad
in
or
loopne
in
mov
outsb
push
sbb
rolb
in
mov
test
pop
dec
rcr
pop
jno
ljmp
aas
inc
xchg
cwtl
or
mov
insl
int3
repnz
cmpsb
dec
stos
inc
sub
iret
add
daa
stc
fnstcw
ljmp
outsb
xlat
mov
add
push
mov
inc
ficompl
push
jl
push
xlat
rcll
andb
sub
addb
inc
subb
ljmp
jp
jne
pop
jno
out
or
dec
push
jge
je
mov
arpl
jle
das
jbe
mov
loop
shlb
mov
insl
rcrb
mov
cmp
pop
lods
or
push
mov
int
std
inc
repnz
in
aas
icebp
into
push
mov
rcll
add
cmp
hlt
jecxz
lret
jae
fcmovnu
xchg
inc
push
dec
fisttps
outsl
or
mov
inc
push
pop
sbb
fstpt
in
mov
pop
add
sbb
ljmp
out
inc
sbb
out
xchg
adcl
push
add
xor
mov
in
mov
addr16
jno
pop
cli
mov
sub
popa
or
scas
push
in
adc
scas
or
in
pop
cmp
jo
sbb
pop
and
lds
sub
repnz
fsubl
out
xchg
rcrl
xchg
push
cmp
xchg
fs
fstpl
shl
sbb
js
je
jo
xor
sub
in
je
div
clc
sti
cli
mov
data16
test
xchg
lcall
and
jle
std
or
mov
adcb
xlat
push
xchg
or
lock
filds
and
jnp
daa
mov
cwtl
jns
pop
call
add
shlb
cmpl
pop
push
or
adc
stos
sbb
or
nop
or
insl
push
dec
fildl
insb
inc
mov
push
pop
call
fadds
push
sbb
lock
mov
stos
cmp
cli
popf
pusha
jge
mov
pop
orl
xchg
push
daa
jmp
adc
inc
lcall
sbb
out
jne
stos
and
jle
jnp
cmpsl
es
sbb
push
cmp
pop
movsb
xlat
lret
sub
test
das
push
pop
mov
xor
icebp
out
or
or
mov
loope
jns
sbb
lods
dec
dec
lret
jnp
in
mov
push
les
test
aaa
idivl
outsb
sub
and
les
mov
mov
nop
xchg
pop
xchg
out
pop
sbb
cmp
jns
fisttpll
xchg
je
inc
xchg
orl
xor
xchg
sar
pop
sub
push
dec
cmp
aaa
sub
cmp
mov
mov
lds
inc
gs
adc
mov
xor
xchg
call
adc
popa
lods
rolb
add
inc
and
je
xchg
mov
adc
pop
cmp
leave
rcrl
inc
cwtl
aam
bound
lcall
mov
dec
lcall
push
fsubl
mov
sbb
data16
xor
push
jge
repnz
add
jnp
sbb
xor
push
add
jge
incl
sub
push
gs
ffree
sub
into
aaa
jb
xor
sti
bound
inc
push
nop
or
int
loop
add
xchg
pop
xchg
lret
repz
dec
cmc
popa
js
push
mov
dec
add
dec
rcrb
cmc
push
aaa
fcomip
sbb
addb
push
clc
test
jb
movsl
mov
ret
cmpsb
mov
sub
scas
mov
dec
getsec
aaa
std
jno
inc
push
fnstcw
xchg
xchg
xor
in
mov
ljmp
jno
inc
jb
xor
add
addl
add
jmp
lods
jns
in
add
loope
sbb
push
cmp
cltd
cmp
lds
ja
xor
filds
shrl
popa
adc
ss
mov
mov
faddl
dec
add
lods
inc
pop
je
outsb
popf
sub
xchg
pop
dec
enter
je
lock
xor
jae
insb
mov
test
mov
lcall
or
sbb
movsb
or
ljmp
sahf
call
push
dec
inc
jmp
ja
into
or
rol
dec
shlb
xchg
cs
push
scas
lds
imul
mov
mov
repnz
push
rcll
inc
xor
adc
jne
rcrb
fnstenv
repz
in
ss
push
fs
mov
push
inc
shll
jl
and
jno
jbe
orl
repz
int3
shlb
and
push
adc
mov
out
iret
stc
stc
cld
mov
enter
mov
xor
pop
lds
jbe
pop
push
leave
cmp
push
ljmp
jmp
sbb
cmc
adc
out
lahf
sub
ljmp
xchg
lret
jp
jne
or
inc
or
inc
cmpsb
inc
sub
adc
sahf
mov
add
aad
push
popl
test
add
fcoms
pop
sar
ret
mov
cmp
dec
fbld
mov
out
sbb
daa
imul
cld
and
lahf
jne
outsb
cmp
sbb
sti
push
adc
and
xchg
pop
jmp
add
pop
xchg
cmp
pop
outsl
cmc
add
mov
and
jbe
sub
jl
adc
incl
outsl
add
call
push
inc
mov
sbb
mov
loope
hlt
addr16
push
pop
xor
pop
xchg
inc
sbb
jmp
dec
and
xlat
or
data16
aaa
sbb
cs
jl
or
jae
in
out
pop
xor
sbb
push
stos
jl
adc
fs
addb
add
in
adc
std
sbb
popf
jae
cmpb
stc
mov
aas
mov
ss
xor
jnp
sub
xor
push
jae
push
sub
jno
mov
dec
repz
sbb
dec
mov
cmp
in
sub
cmpsl
hlt
jno
and
js
add
inc
xchg
or
push
jecxz
sub
repnz
xchg
push
repnz
jle
jle
out
or
insl
stos
cltd
add
mov
sub
out
repz
mov
mov
inc
int3
mov
xor
xor
lea
add
dec
push
and
adc
in
ret
clc
dec
lds
sbb
sti
dec
xor
lock
and
push
rolb
stos
andb
jl
mov
lcall
or
inc
jno
mov
inc
gs
out
cmpsl
xchg
inc
jmp
push
fidivs
xor
jl
sbb
imul
cmpsl
neg
add
cmpsb
test
jae,pn
fwait
sub
orl
xor
xor
mov
addl
cltd
mov
and
sbb
xchg
pop
and
pop
repnz
and
xlat
push
xor
std
pop
sbb
add
sub
xlat
pop
adc
mov
fwait
jp
stc
outsb
add
add
mov
rol
jbe
pusha
popf
mov
xchg
fsub
into
fisttps
fldt
adc
pushf
movsl
rcrl
sahf
add
shll
cld
outsb
lcall
cs
adc
aad
mov
jmp
jnp
rol
inc
cmp
pop
xor
scas
xchg
pop
push
loop
adc
stos
lahf
ret
scas
ror
out
xor
lods
jle
fidivs
ret
adc
sub
sbb
push
mov
test
in
jbe
mov
adc
sub
insl
shl
push
icebp
hlt
out
ret
std
in
js
jae
orl
inc
mov
fists
xor
stos
cmp
mov
rcrb
xor
jge
outsb
xchg
xor
aam
pop
jmp
push
aad
lods
mov
pop
sbb
daa
mov
sub
mov
or
xor
push
sub
jns
sbb
jle
nop
xchg
sti
aam
loope
lcall
iret
popa
pop
cmp
dec
sahf
bound
jnp
mov
cmpsb
iret
cmc
pop
jb
jecxz
fwait
mov
jmp
out
jb
popa
and
push
in
pusha
xchg
lods
mov
cmp
lret
inc
aam
popf
sarl
cmp
ja
push
mov
pop
dec
adc
pop
pushf
ljmp
jmp
lea
movsl
mov
adcl
sahf
insl
dec
clc
push
and
sbb
push
jno
outsl
rolb
push
repnz
ljmp
cmp
adc
jl
in
sbb
hlt
lret
ret
addr16
inc
into
sti
shlb
sub
loop
add
sub
jp
es
je
cwtl
aas
sub
insb
out
icebp
add
cmp
mov
push
call
sub
lods
pop
ret
push
add
ja
in
adc
push
dec
imul
adc
pop
cmpsl
or
cltd
daa
data16
lahf
cli
clc
popa
mov
xchg
sub
loop
fmulp
sahf
in
adc
rolb
xchg
movsb
aad
xchg
mov
sbb
jl
arpl
fistpll
mov
fwait
xchg
ds
int3
jae
inc
ja
subb
mov
loop
loop
pop
andb
dec
scas
lods
jo
cmpsb
pop
mov
xchg
xor
shll
stc
xor
pop
jg
loop
outsl
sub
push
icebp
mov
add
js
push
lea
or
cs
rcrl
xchg
mov
xchg
jl
sbb
jle
inc
mov
jecxz
mov
push
push
jle
xchg
add
add
dec
incl
xchg
or
call
xlat
dec
in
dec
push
sub
int
sbb
rcl
adc
inc
jns
or
xor
mov
mov
leave
enter
bound
fcomp
ljmp
ja
jnp
adc
pusha
flds
cmpsb
dec
in
jnp
imul
in
xchg
jnp
repnz
mov
pop
imul
in
pop
sbbl
xor
dec
xchg
adc
inc
test
xor
testl
adc
mov
mov
in
test
aam
mov
pop
fisubl
dec
jbe
mov
decl
push
sti
push
jns
jne
pop
stos
mov
and
cmp
sub
or
pushf
add
mov
xchg
mov
ss
fists
fcomi
push
loopne
lock
repnz
lcall
adc
and
out
pop
pop
inc
insl
inc
pop
xor
out
in
or
xor
jo
mov
jnp
inc
loope
sbb
imul
out
xchg
nopl
outsl
sbb
rcrb
xchg
sub
add
shrb
stc
out
arpl
sbb
insl
out
cli
mov
arpl
add
cli
imul
add
jns
add
or
inc
cs
rcrl
cs
ds
leave
fnstsw
bswap
fistps
jl
mov
test
push
mov
push
dec
xrelease
mov
or
dec
xor
xchg
rorl
mov
ds
out
cmp
out
jo
pusha
dec
push
ror
sub
fiaddl
mov
pusha
cmc
lret
pop
rcrl
rclb
ds
scas
lret
scas
jmp
mov
pop
cmp
xchg
add
and
dec
xor
rclb
iret
call
sti
sahf
stos
mov
outsb
mov
adc
cltd
es
ds
out
xor
adc
mov
aaa
sbb
jno
int3
ss
sti
icebp
cmpsb
inc
fs
jo
mov
mov
lods
arpl
lea
mov
out
jge
adc
xchg
or
add
addl
dec
mov
push
aad
mov
xor
and
mov
decl
and
pop
sbbl
dec
lds
xor
jo
rolb
iret
stos
xchg
sbb
ljmp
test
gs
cmc
inc
lahf
ror
mov
imul
imul
jle
dec
xchg
mov
adc
fisubrs
mov
test
xor
push
mov
mov
insb
jecxz
loop
xor
or
and
shrl
cltd
pop
or
dec
ret
inc
fildl
stos
xor
jl
xchg
pop
jne
jbe
jl
push
mov
dec
mov
fidivrs
loop
jns
add
xchg
adc
daa
hlt
movsb
nop
gs
js
mov
in
mov
sbb
jne
imul
sbb
mov
jns
add
popf
adc
out
pop
out
sub
inc
int3
inc
sar
mov
dec
pop
cmp
sub
sub
std
pop
inc
dec
mov
xchg
push
pop
lock
push
addr16
pop
data16
cmpsl
or
cltd
xor
push
in
outsl
enter
fwait
jne
out
aam
xor
into
jae
add
out
cmp
jno
ficompl
repz
jge
or
jo
repnz
cwtl
fsts
enter
dec
cmp
and
mov
scas
dec
sub
lods
or
mov
mov
imul
push
mov
scas
psubsw
push
loopne
add
popa
xchg
cmp
cmp
lock
adc
dec
test
cs
cmc
hlt
cmp
sarl
iret
repz
fdivrl
mov
or
lods
jne
inc
inc
jmp
fiadds
add
cwtl
add
or
mov
imul
jge
push
mov
push
lds
cs
mov
xor
outsb
std
stc
daa
inc
fistps
mov
push
test
xchg
dec
std
pop
icebp
adc
cmpsl
xor
xchg
push
add
mov
jbe
inc
out
pop
dec
lds
mov
inc
xchg
sub
sub
psubq
adcb
stos
or
jge
call
xchg
es
pop
xchg
nop
out
pop
loopne
sbb
nop
xor
clc
pusha
push
cmc
adc
dec
outsb
mov
gs
es
das
lock
and
stos
cmp
stc
sub
cmc
sbb
sub
sub
je
xchg
in
or
test
add
sub
fmul
cltd
dec
sarl
sub
lcall
repz
lds
hlt
test
stc
adc
inc
outsb
inc
sbb
pop
mov
les
sbb
and
mov
lea
push
lock
mov
inc
jns
pop
add
shl
repz
dec
out
pop
inc
cmp
popa
sbb
lods
outsb
insb
std
ret
sub
pop
ljmp
mov
xor
push
pop
cld
xchg
pop
cmp
add
inc
add
sub
dec
out
pop
test
push
pop
jg
pop
cmc
stos
push
mov
in
stc
aaa
movsb
push
int3
rcrb
stc
xchg
insl
jno
outsb
sub
add
inc
or
jge
mov
jae
dec
test
mov
into
sub
in
xor
jb
inc
or
or
and
xor
cmp
mov
clc
push
pusha
div
pop
sbb
test
jb
xchg
dec
or
sub
mov
xor
cwtl
lds
push
ljmp
mov
add
mov
dec
loop
push
mov
icebp
push
in
iret
cmpsl
js
add
shlb
shrb
mov
mov
lods
es
sti
nop
adc
clc
mov
xchg
mov
adc
mov
sahf
or
push
or
cld
in
mov
fidivrl
pop
fwait
jmp
stc
loop
pop
jge
mov
sbb
dec
lock
jbe
xchg
out
mov
or
dec
mov
or
cwtl
lock
jg
sbb
sbb
xchg
mov
mov
xor
rcl
imul
cmp
outsl
shlb
mov
aad
cmp
clc
cltd
lcall
jbe
sub
inc
inc
std
in
dec
lret
pop
cmc
pop
pop
cs
mov
xor
push
lahf
or
in
ljmp
aam
push
aas
push
jae
mov
shr
xchg
mov
lret
cli
idiv
xchg
and
dec
imul
inc
lock
lock
pop
popf
jns
cmp
fisubs
or
push
inc
movsl
mov
mov
fisubl
jne
mov
insb
push
jno
mov
jnp
fsubrl
loopne
sbb
or
loop
popa
mov
lock
in
popf
jns
ss
sub
pusha
fstl
fisubrl
lret
dec
cmp
add
xchg
add
enter
fsubl
xorl
ficomps
adc
mov
fbld
sub
or
dec
push
js
stos
mov
inc
xor
loopne
leave
stc
mov
or
xchg
addr16
and
and
ret
insl
shrd
jb
jl
xor
out
jbe
scas
out
jg
add
push
jl
dec
icebp
push
out
jne
add
iret
out
aam
pop
pop
xor
sbb
jne
aas
cli
mov
lock
leave
jnp
repnz
xchg
adc
int
aad
arpl
sbb
dec
nop
je
cwtl
and
or
mov
adc
jecxz
add
mov
mov
bound
xor
mov
out
lea
ds
sub
aam
jp
mov
cmp
pushf
rcrl
or
imul
xchg
jp
lea
outsb
dec
inc
inc
in
out
mov
adc
test
push
outsb
inc
push
adcb
mov
mov
sbb
inc
sbbb
lea
push
icebp
rclb
je
jp
mov
jo
les
inc
inc
lahf
push
mov
inc
inc
shrl
xchg
sbb
gs
mov
stc
popa
cmpsl
mov
sub
xchg
movsb
aam
dec
insb
sarl
jae
pop
outsb
pop
insl
jbe
mov
xor
fstpl
jnp
movsl
movsl
xchg
push
nop
cmc
sub
jo
push
cmp
mov
in
jmp
sbb
and
dec
shlb
xorl
popa
sti
popa
sbb
inc
xchg
imul
clc
dec
test
dec
aam
das
cmp
mov
enter
and
cltd
sub
repz
xor
adcl
pushf
mov
jg
sahf
xchg
mov
pop
push
sbb
lahf
repz
dec
test
and
mov
pushf
dec
jle
scas
or
pop
push
or
movsb
daa
mov
js
jle
lea
jl
mov
cs
outsl
mov
cmpsb
adc
or
xchg
push
test
daa
nopl
fldt
jbe
xchg
and
pusha
jnp
xor
mov
fwait
or
scas
sbb
pusha
rcl
and
movsb
sbb
push
mov
xchg
aaa
sub
ret
adc
mov
xchg
sub
clc
xchg
jle
push
jbe
pop
in
push
scas
loope
js
dec
fildll
mov
mov
and
icebp
test
fisubrs
jb
jmp
add
jne
mov
sbb
mov
jns
lods
hlt
mov
sbb
fdivrp
movb
test
das
cmpsl
inc
push
or
outsl
and
mov
mov
stc
dec
out
xchg
xor
test
lods
mov
and
push
lods
test
inc
pop
fsubs
push
fadds
and
cmpsl
cwtl
mov
imul
test
or
xor
mov
scas
repnz
jp
mov
sub
cmovne
icebp
movsl
jno
dec
mov
lcall
je
or
sub
mov
std
incb
push
push
adc
inc
mov
cltd
and
mov
push
adc
push
in
push
dec
scas
loopne
inc
sub
imul
inc
pop
pop
je
pop
jb
cmp
leave
rcrl
sbb
lcall
daa
and
mov
daa
jle
out
add
xchg
xchg
aaa
inc
andb
jecxz
out
mov
adc
cmp
jae
mov
dec
sbb
mov
in
sbb
int
loope
xchg
stc
xchg
aam
dec
add
mov
jno
pushf
mov
int
popa
adc
xor
mov
daa
push
add
mov
push
push
pop
jne
cs
fists
dec
mov
push
hlt
cwtl
inc
or
arpl
aaa
add
call
jmp
rolb
adc
jge
dec
cmp
iret
mov
and
jp
das
scas
lds
jo
add
push
sti
cmc
xor
popa
dec
fimull
mov
mov
rclb
loop
movsb
lods
push
in
pushf
jnp
xchg
and
out
dec
lea
scas
jmp
xor
pop
test
loope
push
cld
inc
in
mov
iret
stos
sbb
inc
fwait
jnp
iret
test
fdivrp
dec
ret
cmpsl
and
pop
fidivrs
push
aaa
xlat
adc
mov
push
sahf
cs
dec
push
divb
icebp
sbb
std
jne
lea
flds
jo
sub
mov
test
mov
movsl
ds
mov
adc
bnd
aad
mov
data16
lret
pop
mov
popa
repz
divl
sub
cmp
scas
cmp
cld
mov
xchg
dec
adc
xchg
iret
jmp
push
pop
pop
xchg
and
popf
call
fiaddl
and
pop
mov
movsb
xchg
sbb
mov
mov
and
sbb
lock
mov
and
adc
pop
inc
clc
adc
shr
pop
loope
repnz
adc
les
shll
mov
pop
cli
adc
lret
xor
repnz
and
push
lcall
xor
inc
bound
ds
adc
mov
neg
daa
call
inc
shr
addr16
lahf
decb
pop
mov
jecxz
cmp
cmp
push
in
push
movsl
les
shr
in
xor
or
push
xor
jmp
je
loop
data16
push
pop
mov
inc
xor
mov
sarb
int3
push
xchg
jecxz
fcomps
xchg
mov
pop
loope
sub
mov
cmp
xchg
ret
movsl
test
xchg
dec
inc
mov
int3
mov
pop
aaa
sahf
jle
sub
xor
mov
ja
mov
pop
jne
mov
jle
cmp
jecxz
ffree
or
dec
jb
pop
mov
je
mov
jmp
das
andl
fdivrs
fcom
add
out
nop
and
call
inc
fistpl
lahf
sbb
push
mov
xor
mov
add
pop
or
mov
loopne
popf
insl
add
bound
es
inc
sbb
push
pop
idivb
gs
or
xor
push
repz
dec
sbbl
mov
sahf
ficomps
push
cmp
scas
stc
sub
pop
pop
pushf
stos
inc
xchg
mov
or
xchg
in
ret
xchg
nop
iret
in
jno
pop
movsl
andl
cmp
lahf
clc
cmpsb
dec
js
and
out
inc
insb
and
sbb
sub
dec
int
or
sti
std
popa
sti
mov
sbb
cld
pop
movaps
jb
mov
push
xchg
nop
mov
add
xchg
jle
lds
std
adc
dec
mov
lret
sbb
jle
and
outsl
iret
cmpsb
push
sub
arpl
xor
pop
mov
scas
cmc
lahf
xor
sbb
int
xor
fldt
loope
loopne
loop
arpl
push
and
xor
xlat
dec
les
js
xor
sbb
movsl
pop
outsb
ficoml
inc
data16
lret
addr16
movsl
shll
inc
dec
push
mov
inc
dec
fnstcw
mov
out
add
pushf
out
outsl
cs
mov
xor
dec
push
hlt
or
sub
pop
clc
jg
mov
jmp
add
aaa
jle
jne
lds
xchg
fisubs
ret
hlt
push
or
xor
sub
out
sub
in
add
and
gs
push
leave
jp
test
jge
lahf
rcrl
cmp
mov
jns
jnp
stos
xchg
push
cmp
jmp
fcoms
rcrl
outsl
jb
dec
scas
popf
xchg
cmp
cvtps2pd
push
fcomps
push
adc
sub
ret
sbb
lds
cli
movsb
sbb
push
mov
mov
lds
sub
xchg
push
ja
mov
push
add
sbb
loopne
cmc
push
ss
jl
add
sbb
adc
aad
aaa
fnstcw
andl
dec
mov
popf
sub
pop
sti
pushl
iret
dec
xor
mov
stc
pop
andb
std
cmp
daa
cmp
js
push
adc
test
push
std
cld
or
outsl
mov
adc
insl
xlat
insb
dec
or
sbb
iret
bound
dec
int
sbb
ja
or
mov
ret
fcoms
pop
push
leave
mov
ret
cltd
pushf
fadd
mov
test
outsl
dec
inc
jnp
xchg
js
insl
sub
mov
out
in
addl
insb
rorl
enter
mov
xchg
mov
or
jo
fdivs
push
repnz
pop
leave
mov
loope
ror
inc
aas
lods
daa
lods
shr
pop
push
xor
cltd
imul
stos
mov
push
test
xchg
inc
ja
out
push
cmp
stos
addb
xlat
aam
loope
imul
iret
inc
out
xor
xchg
clc
mov
xor
loope
ds
or
pop
mov
cmpsl
sub
outsb
mov
mov
sbb
loope
fwait
outsb
repnz
repz
in
cmp
outsl
cwtl
ljmp
ss
cmp
into
or
stos
mov
cltd
or
imul
fmull
adc
pusha
xor
mov
outsl
dec
xor
push
push
dec
xor
mov
sub
test
jae
adc
lea
arpl
sub
sti
pop
fldt
mov
mov
xchg
cld
decl
inc
lahf
jge
xor
push
stc
mov
insl
dec
mov
fidivs
mov
repz
mov
jle
ds
nop
dec
push
repz
dec
jbe
mov
push
add
xchg
testb
or
ret
scas
and
mov
jmp
cmp
or
push
adc
inc
pop
push
lret
inc
xchg
lahf
shlb
fisttpll
shrl
add
mulb
inc
sbb
aad
xchg
andl
fisubs
inc
cltd
mov
adc
mov
sbb
pusha
sbb
pop
lahf
inc
lds
sub
popf
ret
pushf
call
shl
mov
stos
xchg
pop
sub
ja
jge
adc
jbe
jo
mov
adcl
ljmp
cmc
add
sub
cld
push
popf
xor
mov
out
push
xor
inc
test
push
ret
testb
jge
insb
and
sub
pop
jmp
sbb
add
xchg
mov
xor
adc
and
int3
popf
mov
scas
jle
arpl
cwtl
cld
push
pop
mov
iret
sbb
mov
or
jne
testb
sbb
mov
xchg
std
xchg
rcr
cmpb
aam
pop
clc
add
cmc
loopne
adc
movsl
lods
push
pop
mov
add
add
dec
pop
fsubrp
enter
add
imul
add
imul
pop
or
icebp
mov
in
adc
add
sbb
inc
jb
repz
jecxz
cmp
or
dec
push
in
icebp
jnp
inc
stos
add
sbb
aad
cmp
nop
adc
sub
push
sbb
push
rolb
mov
notb
pop
jg
fiadds
movsb
adc
mov
add
mov
in
or
push
clc
idiv
js
and
xor
inc
push
js
jmp
jno
pop
mov
mov
stos
add
jb
or
sub
inc
jecxz
aas
imull
repnz
push
mov
cld
rcrb
mov
or
dec
push
arpl
xchg
sti
xor
pop
lret
les
xor
imul
cmp
iret
std
add
ljmp
jl
popf
outsb
jb
mov
mov
add
mov
scas
in
adc
aaa
mov
add
loop
std
mov
or
dec
jmp
inc
icebp
or
dec
ror
addb
loopne
sarb
add
js
push
stos
jbe
repz
pop
out
add
cmp
fldln2
cmp
lods
sub
xor
or
sub
cmp
mov
pushf
mov
das
add
cltd
mov
push
mov
or
bound
xor
mov
ljmp
les
mov
sahf
fwait
dec
cwtl
call
push
inc
mov
push
dec
mov
inc
add
jle
das
push
int3
fstpl
mov
or
jae
inc
stos
ds
mov
mov
dec
adc
xchg
hlt
fucom
sub
in
loope
ja
popf
test
loope
nop
inc
mov
lret
cmpl
xchg
lahf
push
inc
push
mov
mov
fdivrl
popa
iret
push
pop
stc
xchg
aaa
adc
adc
in
adc
stc
cltd
fs
adc
mov
shll
dec
gs
sub
fcmovbe
mov
lods
popa
cmp
inc
movsb
imul
imul
fcoml
sahf
fbstp
mov
jbe
mov
jno
out
mov
lahf
jg
in
jmp
addl
ret
adc
sbb
sub
add
mov
dec
or
cmc
adc
pop
jbe
rolb
inc
outsb
jl
addr16
std
aam
popf
movl
xchg
or
mov
test
mov
cld
xchg
rdpmc
sub
sbb
fstps
cmp
inc
arpl
adc
mov
mov
sub
ret
cmp
mov
rolb
mov
mov
add
cmc
loope
xchg
pop
nop
nop
insl
outsb
cmp
adc
es
insl
leave
stos
cmp
cmp
cmp
and
push
xor
jno
dec
movsb
aas
inc
imulb
inc
inc
sub
pop
xor
xchg
mov
cmp
ljmp
call
fists
lret
loopne
int
testl
out
mov
or
cmovge
mov
sti
cli
push
cld
cmp
mov
in
jnp
sub
sub
inc
gs
hlt
decl
in
movsl
mov
adc
pop
sub
lret
cmc
jge
jp
movsl
push
shrb
adc
inc
scas
inc
das
xor
cmpl
sub
out
dec
dec
test
jl
sbb
sbb
aaa
push
and
icebp
mov
int
rcl
jo
push
jne
lds
mov
cltd
fsincos
and
jp
sbb
cmp
push
cs
jg
jle
cld
push
and
inc
xor
sub
in
rcl
pop
adcb
xlat
push
jnp
add
jmp
cmpsl
pop
dec
jbe
sbbl
xchg
pop
ret
out
rol
add
testl
stc
adc
pop
in
ret
cld
out
repz
sbbl
cmp
push
dec
mov
mov
negl
pop
xor
mov
push
aas
xchg
pop
pop
mov
loope
pop
jl
and
mov
sub
mull
jle
dec
fldt
mov
call
andl
lock
cmp
or
div
div
adc
push
mov
cmp
cmp
enter
add
test
cmp
int
jno
shll
jmp
into
inc
out
xchg
popf
add
pop
or
sbb
jae
inc
jne
cmp
pop
insl
out
test
cmc
xor
xchg
fstpl
mov
inc
mov
sbb
je
lcall
scas
test
shlb
movsb
or
lret
add
xor
or
divl
clc
pop
aaa
test
xor
shlb
enter
sub
insl
and
xchg
inc
sub
adc
repnz
fcomi
bound
cmc
mov
sti
rcrl
adc
add
push
or
inc
xor
scas
mov
or
cmp
shrb
scas
negl
adc
jnp
loope
sarl
lea
add
scas
je
test
stc
xor
sbb
movsl
arpl
shrl
lea
movsl
sub
cmc
sub
stos
xor
push
hlt
mov
fs
or
imul
jg
inc
sahf
mov
sub
fsubl
rcrl
jnp
inc
negb
icebp
mov
jne
das
aas
pop
sub
push
dec
lods
dec
lds
mov
clc
and
imul
xchg
sti
cmp
pop
popa
hlt
jmp
xor
mov
lock
imul
sbbb
fwait
xchg
aad
jle
js
cmp
mov
fstl
je
cmp
cmp
inc
jbe
ljmp
inc
pushl
and
pop
ja
push
out
mov
jp
lock
jp
mov
cmp
fstps
mov
ds
lock
sub
sti
jecxz
clc
xor
test
pop
icebp
aas
dec
push
sub
cmp
ret
mul
xchg
push
call
psubusb
repnz
mov
cmpsb
loopne
lret
fsubrl
dec
cltd
lods
sbb
out
repz
scas
in
imul
out
dec
jmp
push
out
mov
mov
popa
cs
fldenv
mov
sbb
xor
pop
lea
cmpsl
pop
jle
pop
pop
ficoms
cmp
mov
pop
outsl
pop
cmp
ret
ss
pop
xor
dec
cwtl
roll
sub
or
push
scas
adc
mov
mov
lods
push
icebp
fcompl
mov
fst
and
push
idivb
mov
orl
out
mov
adc
jmp
push
xchg
sbb
leave
cmpsb
icebp
push
add
push
add
je,pt
ret
dec
sahf
je
fs
ljmp
in
jmp
leave
lods
mov
xor
sahf
rorl
adc
mov
lds
mov
push
cld
das
addr16
sub
push
mov
mov
call
xor
pop
adc
sbb
xchg
add
cmovp
jecxz
push
xor
cltd
push
les
add
push
imul
cmpsl
mov
add
inc
push
and
jbe
jl
and
cmp
in
stc
lret
adc
push
arpl
sbb
repz
sahf
incl
aaa
into
pop
daa
loop
pusha
mov
inc
loop
rcrl
in
js
das
int
cmp
into
sbb
addr16
mov
filds
adc
adc
rorl
sub
andb
lods
jne
jp
pop
out
ljmp
sbb
inc
push
test
vsqrtss
sarl
je
and
xor
push
mov
or
lock
movsl
dec
jp
outsl
push
enter
jae
lods
sahf
jo
and
sub
rcll
pop
mov
pushf
dec
dec
dec
clc
or
cmc
dec
lds
aas
mov
ret
adc
imulb
adc
and
pop
pop
sbb
push
sbb
mov
mov
loop
cltd
movb
adc
xchg
popa
int3
adcl
xchg
aas
aad
adc
mov
mov
fldenv
xor
and
int
jae
sbbb
or
adc
fcos
cmp
fs
es
xor
ror
aam
nop
push
xor
cs
mov
sbb
mov
outsb
js
fmull
faddl
sbb
cltd
jns
mov
push
sbb
das
dec
add
inc
jmp
sub
scas
cmc
pop
cmp
sbb
xor
mov
std
pop
std
stc
data16
push
fiadds
mov
das
repnz
and
daa
mov
int
mov
jb
add
test
adc
out
sarb
mov
ret
das
in
mov
fwait
sbb
jb
jo
cmp
pop
sub
sbb
mov
and
ficoms
sbb
pop
mov
dec
push
dec
lods
enter
mov
repnz
les
jmp
xor
hlt
test
mov
ds
mov
mov
movsb
ja
fcom
and
enter
lods
or
mov
inc
int
xor
mov
xchg
in
stos
sub
out
xor
scas
xor
hlt
xor
add
cltd
push
mov
cltd
pop
test
add
jge
stos
xor
ret
sub
sar
movsb
mov
xchg
mov
cmp
sub
adc
adc
sarl
and
icebp
jmp
mov
lock
jb
mov
outsb
push
inc
pop
cwtl
add
jle
push
das
jg
jl
call
pop
fwait
scas
mov
hlt
jb
push
shll
lcall
fimuls
dec
pop
jns
test
cmpsb
shrb
out
sti
std
sbb
test
adc
push
inc
sar
int
mov
cltd
dec
xor
push
mov
ror
xchg
popf
les
and
lods
or
add
push
inc
dec
mov
xchg
xor
bound
lret
sbb
jmp
hlt
pop
xchg
jne
xor
sub
mov
out
es
mov
jg
and
out
addr16
jne
jle
pop
jl
std
xlat
jecxz
xor
sti
cmp
jo
xor
mov
jecxz
shrb
lret
scas
cs
les
inc
in
test
int3
mov
pop
xor
push
dec
or
mov
daa
pop
mov
push
sub
jge
push
roll
pop
xorl
mov
push
call
add
xchg
xchg
adc
mov
lret
jg
aas
in
push
shlb
sub
jmp
cmpsb
pop
shrl
lcall
or
xchg
lds
push
or
sbb
dec
add
loope
or
add
push
fucomp
sbb
pop
jne
andb
imul
pop
dec
into
test
clc
mov
shll
mov
xor
sub
pop
inc
aam
mov
jno
and
adc
insl
or
lahf
mov
jl
xchg
fldl2e
aas
inc
vxorps
pop
clc
pusha
fld
imul
xor
loope
push
test
lods
push
popf
mov
add
in
lret
imul
fdivrs
cmp
jno
push
add
movsl
movsb
leave
out
or
imul
das
adc
cmp
movsb
inc
cmp
dec
out
outsb
into
fwait
sub
int3
in
lret
out
xlat
xchg
xor
jo
in
fwait
call
pusha
jle
push
andl
jns
jg
lods
mov
push
lret
and
lahf
push
mov
enter
add
inc
jp
and
add
pop
cli
or
add
add
mov
push
loopne
pop
xchg
cmp
fidivl
xor
lods
insl
pop
pop
xchg
and
add
popf
inc
cmp
rcrb
push
or
enter
mov
les
pop
lret
mov
jmp
mov
jo
jp
shlb
addr16
popa
push
cmc
push
push
xchg
mov
mov
cmp
add
daa
int
push
test
push
rolb
shrl
push
lods
or
push
sti
or
jnp
cmp
cli
outsb
or
and
add
or
aam
or
adc
fisttpl
adc
rcll
mov
ss
xchg
and
stos
xchg
dec
mov
push
jno
ljmp
outsl
xor
les
and
mov
cmp
sub
push
push
push
cld
dec
cmp
out
lret
les
push
jo
imul
add
test
cmc
outsb
sub
mov
cmp
jnp
incl
inc
aad
sub
movb
cmp
scas
adcb
pop
cli
fisubrs
orb
push
out
xor
mov
push
push
in
adc
pop
lcall
das
aad
xchg
rorb
cld
popf
pop
add
sarl
pop
or
pop
aaa
sub
test
mov
shlb
dec
mov
ss
mov
daa
outsl
adc
cmp
ret
pop
and
orb
sbb
and
ljmp
mov
aas
pop
nop
sbb
add
push
xchg
jl
shlb
xchg
cwtl
inc
mov
scas
rcll
hlt
arpl
sbb
pop
mov
push
sarb
repz
test
or
ret
pop
fists
arpl
adcl
aad
xchg
xchg
jae
inc
or
je
dec
scas
dec
sbb
or
decb
add
pop
pop
jecxz
out
mov
aad
add
pop
fs
dec
insb
cmp
cmp
cmp
addb
cmp
pop
test
sub
or
xchg
out
mov
es
add
dec
xor
mov
sub
dec
dec
nop
sbb
jns
sbb
and
lods
xchg
cmpsl
insb
inc
fmuls
and
adc
inc
out
mov
arpl
or
jmp
cmp
and
ds
imull
ret
and
inc
sub
in
insl
aad
popa
jbe
push
pop
addr16
push
sbb
jbe
movsb
insb
jno
mov
mov
mov
sub
outsb
mov
ret
call
enter
add
dec
jl
enter
leave
loop
xor
mov
aam
push
push
push
lcall
jge
test
sar
stos
in
stos
mov
aaa
sbb
push
lcall
into
dec
test
iret
jg
xchg
call
push
cmp
pop
loop
aam
xchg
mov
xchg
loop
fwait
sar
loopne
daa
hlt
fcom
adc
ret
insb
cs
sbb
data16
mov
push
test
jo
mov
ret
cmp
or
enter
popa
fldenv
jmp
stos
mov
imull
pop
insl
ljmp
pushf
add
mov
push
xor
es
loop
hlt
mov
test
dec
cmp
adc
xchg
popf
outsb
daa
movsl
imul
push
clc
fmuls
xchg
mov
cmp
ljmp
sbb
ret
sbb
adc
enter
div
cmp
nop
pop
inc
daa
xor
cs
or
push
add
inc
jmp
enter
jecxz
faddl
pop
inc
mov
dec
stos
inc
addr16
add
mov
gs
or
mov
hlt
inc
pop
scas
shrb
fldt
sbb
adc
mov
test
movsb
mov
xchg
pop
aad
sub
xchg
lcall
inc
xor
rcr
call
outsl
xchg
adc
fidivrs
outsb
rorb
sbb
lret
xorl
cli
xchg
xchg
je
lea
inc
dec
xchg
jb
mov
xor
lods
dec
xor
add
cli
ret
cld
jb
cmp
push
or
out
pop
inc
add
rorb
and
scas
out
fistl
std
mov
gs
insl
sub
push
mov
and
and
int
call
movl
cwtl
jbe
mov
pop
jle
or
repz
movsb
testl
jp
xor
xchg
or
pop
jb
xor
xor
jbe
mov
out
lahf
mov
xchg
or
pop
aad
sbbl
ret
sub
cvttps2pi
popf
inc
jbe
add
jo
add
cmp
adc
jb
xchg
stc
lods
ss
sub
ret
mov
test
dec
out
pop
jne
fldcw
cmp
sbbl
mov
loopne
shl
scas
add
add
imul
mov
sub
pop
jo
jp
je
inc
jne
popa
stc
sub
out
mov
add
cmp
fisubrl
inc
clc
iret
enter
int3
dec
mov
mulb
push
repz
imul
loopne
movsb
pop
pop
shlb
add
xchg
pop
fabs
test
rcl
cs
and
mov
cmpsl
push
mov
dec
rcrb
mov
arpl
addr16
push
call
mov
lcall
xchg
push
sbb
sahf
or
leave
pop
jo
aaa
push
cmp
das
inc
ret
inc
sub
xor
ja
out
lahf
add
xchg
loopne
pop
add
mov
push
jns
sub
in
jge
push
inc
shlb
hlt
push
xchg
lds
and
bound
push
mov
minps
mov
xor
je
mov
mov
mov
insl
jb
aad
jne
clc
sbb
xor
out
cwtl
cmpsl
fadds
pop
ss
out
jmp
arpl
push
mov
mov
bnd
dec
ret
fimull
pusha
and
and
or
int
fcompl
cmpsb
in
fcmovb
in
fwait
mov
sub
adc
lods
mov
jg
repnz
and
cmp
sahf
sub
xchg
or
fdivrs
adc
adc
fiaddl
push
scas
adc
mov
inc
jp
and
mov
mov
shrl
dec
add
pop
push
and
cmp
cld
jle
cld
ljmp
fidivrs
pushf
dec
push
sbb
loope
mov
push
dec
ljmp
inc
xchg
xchg
cs
xlat
mov
add
xchg
xor
frstor
inc
popf
mov
mov
mov
aas
adc
jmp
ljmp
in
insl
mov
std
mov
movsb
outsb
js
pushf
and
pushf
data16
sbb
adcb
adc
dec
mov
mov
movsb
test
call
dec
cmp
jno
iret
jb
out
popf
mov
mov
xchg
cmpsl
mov
fsubr
stos
pushf
pop
or
push
cmp
arpl
int
aaa
cwtl
sbb
mov
mov
sub
and
jmp
ds
jb
mov
mov
ja
or
clc
loopne
rcrb
mov
dec
jb
divb
sub
cmp
shll
jnp
out
mov
inc
mov
decl
inc
mov
cmp
mov
bound
push
dec
cld
add
fwait
pop
xchg
test
mov
out
push
aaa
out
xchg
std
in
out
mov
shll
out
xchg
loop
cmp
scas
and
out
dec
popa
insl
mov
and
push
test
dec
mov
xor
repnz
mov
jb
jmp
dec
jno
aad
pusha
push
inc
jle
inc
add
dec
sti
add
in
push
popf
ss
cli
mov
push
xchg
imul
dec
mov
adc
mov
mov
and
testb
xchg
cmp
push
ret
lret
dec
in
repz
or
push
mov
and
nop
mov
dec
scas
fisttps
cs
push
and
or
push
sub
test
mov
das
xchg
shrb
add
sbb
mov
xlat
xchg
pop
shrb
shl
sub
int
inc
cmp
nop
arpl
jecxz
rol
mov
test
ficompl
xlat
in
testl
call
push
arpl
push
jl
dec
aaa
dec
repnz
add
jnp
cmc
inc
and
jecxz
mov
ljmp
arpl
xor
xchg
xor
xor
jl
rcrl
mov
ffree
ds
test
add
int
stc
sbb
inc
in
adc
repnz
and
addr16
mov
cli
mov
out
addr16
enter
ljmp
insl
adc
sbb
jmp
and
jo
lock
mov
repnz
js
push
cmp
test
or
stos
mov
adc
mov
roll
sbb
mov
fidivl
jecxz
jae
sub
mov
stc
movsl
pop
popa
jnp
mov
inc
jmp
mov
gs
xchg
out
pop
lods
iret
enter
mov
xor
mov
nop
hlt
xorl
jae
inc
xchg
jns
int
xor
adc
scas
pop
pusha
jle
hlt
push
lods
bswap
insl
loopne
je
int
clc
jnp
cmc
push
insl
hlt
ja
xchg
mov
push
insl
daa
lods
or
add
and
roll
fisttps
int
add
xor
mov
or
lea
test
and
ret
and
mov
das
lahf
xchg
div
repnz
add
jl
enter
cmp
imul
sbb
out
iret
dec
imul
jne
sub
cmp
out
imul
lcall
or
dec
adc
dec
pop
mov
push
out
popa
inc
adc
adc
fnsave
jl
sub
adc
jle
cltd
data16
add
mov
inc
xchg
in
mov
xor
xor
clc
clc
jmp
mov
push
sbb
cltd
out
mov
mov
pop
pop
cmp
fldl
repz
loopne
or
and
jge
add
iret
jge
fiaddl
test
aad
loope
int3
ret
mov
add
and
std
popa
pop
adc
jne
imul
repnz
mov
inc
sub
scas
out
faddp
pop
and
in
cld
loope
push
mov
inc
nop
das
mov
rcrl
lods
cmp
stos
fsubl
xor
mov
jno
mov
lds
cmpsl
pop
lret
xchg
imul
sbb
push
mov
jecxz
mov
jnp
out
mov
mov
add
mov
jne
cmp
xchg
or
xchg
add
inc
xor
mov
push
sahf
ret
pop
cmp
or
stc
fwait
mov
jmp
xchg
in
cmc
sti
loop
scas
pop
in
push
enter
imul
xor
xchg
shll
and
cli
mov
adc
push
jo
and
cmp
cli
inc
sbb
in
lock
pusha
push
add
inc
xchg
stc
add
dec
lock
aam
adc
movsl
lea
shlb
sub
aam
or
sub
or
xor
push
shrl
cmp
shrl
imul
jg
int3
inc
les
ja
jge
xchg
jae
xor
sbb
mov
and
jg
or
pushl
nop
add
addr16
adc
int3
cli
lahf
mov
sarl
adc
and
stc
dec
cmc
push
in
jne
cwtl
stc
xchg
movsb
push
mov
sbb
les
cmp
pop
dec
push
pop
subb
divl
sti
dec
mov
mov
xchg
into
mov
or
add
adc
xchg
xor
xchg
fwait
mov
into
mov
mov
push
xchg
ljmp
ja
iret
js
mov
xor
and
sbb
aas
push
addb
arpl
mov
mov
loope
push
xchg
dec
rcrb
pop
dec
mov
into
inc
fdivrs
push
mov
mov
adc
test
sbb
jb
fcoml
add
or
daa
outsb
in
out
mov
dec
arpl
das
repz
mov
jno
imul
xchg
dec
push
sub
mov
inc
add
movsb
mov
mov
shlb
stc
fdivs
dec
xchg
mov
popa
out
dec
daa
dec
test
scas
mov
stos
dec
outsl
pop
xorb
and
xor
lods
mov
xchg
sub
cs
clc
sub
cli
in
inc
movsl
lea
ret
testb
mov
in
jle
rcll
and
mov
daa
imulb
test
in
sub
loop
and
out
out
addr16
or
scas
cli
adc
jo
mov
aaa
lret
scas
cmp
and
cltd
push
mov
and
outsb
scas
sub
and
nop
lds
pop
inc
jecxz
lret
inc
insb
jp
mov
pop
test
scas
repnz
out
push
cltd
jnp
mov
popf
cmpsl
sub
mov
repz
out
out
mov
jne
or
xchg
adc
mov
fidivrl
sbb
mov
and
es
xor
jno
lods
test
or
add
repnz
push
mov
ja
lret
jne
loop
rol
inc
leave
and
xchg
and
les
xor
loop
pop
in
sub
dec
push
jae
sahf
mov
adc
jns
mov
xchg
jl
mov
int3
xor
frstor
js
jl
pop
and
sahf
jne
popa
mov
xor
sbb
add
popf
int
xchg
and
mov
push
enter
fisttpl
mov
and
xchg
jnp
lea
jno
adc
pop
jnp
and
mov
ss
mov
and
je
stc
pop
lcall
cmp
dec
out
fadds
jg
in
stos
sub
mov
cli
lahf
lods
cmp
in
loop
pop
dec
ret
arpl
into
xchg
jo
imul
fiadds
or
xchg
into
inc
cmp
mov
dec
shlb
add
test
mov
and
pushf
sahf
push
movsb
bound
repnz
push
dec
ficoml
inc
jg
add
cmpl
repnz
cmc
cmp
push
adc
fiadds
pop
notb
xchg
ret
push
mov
mov
rdtsc
mov
jle
cwtl
ljmp
cli
pop
mov
loopne
mov
icebp
mov
ret
inc
lahf
pop
or
cmp
bound
mov
mov
adc
pusha
jmp
dec
pop
sahf
and
lret
mov
je
xor
inc
xchg
popa
mov
js
mov
pop
sub
inc
mov
jmp
movsb
jge
or
clc
mov
push
sub
inc
jo
mov
pop
mov
jbe
jb
int
outsl
add
call
jae
push
in
aam
fisubs
syscall
ficoml
push
aad
pop
adc
sbb
add
xor
dec
jae
adcb
iret
loopne
fadds
add
mov
adc
movl
stos
sub
add
incb
push
ds
test
adc
cmp
inc
repnz
nop
xchg
or
decl
xor
clc
mov
jge
dec
out
xchg
outsl
mov
pop
lock
adc
ss
negl
mov
rorb
daa
inc
pop
int
lds
int
call
hlt
roll
or
mov
mov
cmpsb
inc
xchg
insb
xchg
stos
push
mov
cmp
inc
repz
inc
dec
in
jo
inc
adc
dec
jp
pop
adc
mov
aas
cli
xchg
add
std
adcb
arpl
and
jnp
les
loopne
lods
ss
aad
sub
pushf
or
and
adc
in
mov
jb
rorb
std
mov
aaa
cmpsb
adc
adc
daa
shl
leave
jge
fstps
lahf
std
inc
or
xchg
hlt
jns
cld
shll
addl
push
dec
push
mov
insb
mov
iret
incl
adc
mov
mov
xchg
mov
aad
out
and
and
insl
test
lahf
inc
or
push
cld
and
aaa
lods
adc
aas
insl
pop
rolb
daa
daa
sbb
loop
cmpsl
push
fstpl
xlat
fnstsw
adc
or
cltd
push
out
sahf
and
or
pushf
and
pop
jp
into
jbe
push
pop
scas
lods
movsl
ficoms
mov
xchg
jo
shrl
fbstp
jnp
mov
sub
push
xchg
cmp
sbb
push
push
sbbb
dec
idivb
sbb
push
std
into
jo
repnz
clc
mov
inc
aam
aam
in
xor
sub
mov
xor
adc
lcall
sti
mov
and
add
sbb
mov
das
loop
mov
pop
sub
cmp
mov
mov
mov
xor
fsubl
push
mov
adc
xor
xchg
out
or
std
add
pop
fwait
mov
pop
mov
outsb
test
popf
xor
aad
dec
mov
mov
daa
xor
or
out
dec
or
sti
adc
mov
mov
xlat
jl
or
push
out
jb
inc
loopne
pop
addr16
push
mov
jle
fimuls
mov
mov
mov
les
pop
cmp
sub
dec
sbb
scas
push
loope
jnp
inc
sbb
xchg
add
mov
aam
sub
test
jne
push
mov
push
cld
pop
pushf
inc
xor
mov
add
ret
cwtl
mov
push
sbb
jg
jae
lret
mov
leave
inc
pop
jmp
mov
popa
sbb
jp
test
pop
idivl
add
addr16
fimull
or
mov
mov
mov
test
sub
mov
mov
jo
inc
popf
xchg
test
leave
adc
mov
int
nop
mov
jns
pop
mov
adcb
mov
mov
aad
arpl
insb
cltd
mov
lea
cmp
in
sarb
push
dec
aaa
adc
and
jle
cmp
xchg
sbb
push
pop
or
and
add
je
xor
std
sbb
mov
in
cltd
adc
add
mov
add
pop
push
iret
fstpt
shlb
in
dec
outsb
iret
pop
icebp
movsl
mov
ja
inc
dec
scas
js
lock
adc
mov
xor
out
aas
or
sti
aam
add
sbb
icebp
mov
mov
mov
pop
mov
mov
or
inc
movsl
or
push
stc
push
push
xchg
cmp
adc
sub
xor
out
cmp
add
hlt
jns
je
js
and
push
fidivrs
rolb
in
jle
jmp
add
push
aas
mov
enter
dec
xor
insl
repz
xchg
mov
mov
aam
adc
mov
or
adc
scas
jl
or
daa
ror
lock
inc
pop
arpl
jns
popa
inc
jnp
adc
and
add
cmp
je
cltd
insb
movsb
sar
addr16
push
dec
ret
insl
xor
or
push
push
mov
int3
subb
repz
inc
nop
leave
js
rclb
scas
movsb
push
js
stos
mov
loopne
push
xchg
insb
xchg
xor
sbb
enter
mov
adc
cmp
int3
push
in
jne
or
arpl
pop
outsl
shlb
jl
lds
sbb
out
gs
ja
stos
stos
repnz
xor
cmpsl
mov
scas
push
mov
test
imul
mov
mov
loop
nop
push
outsl
lock
dec
xor
sti
xchg
pop
xor
cmpsb
or
imul
pop
stc
sub
pop
int
enter
lock
ret
mov
pop
dec
test
sub
sbb
mov
test
jmp
mov
pop
scas
outsb
insb
mov
in
movsb
sbb
mov
jge
ret
dec
nop
sub
cs
lcall
fwait
lahf
inc
pop
out
adc
xchg
mov
mov
mov
sub
xor
xchg
push
hlt
repz
jns
jge
mov
jp
or
pushf
cmp
jl
int3
scas
popf
rorl
xor
fwait
lods
das
cmpsb
rolb
xor
xor
imulb
test
sbb
jle
jmp
ljmp
lds
adc
cmp
xchg
or
cltd
xchg
fcompl
rcrb
rclb
and
inc
nop
jae
lretw
push
cltd
cmpsl
xchg
inc
jbe
test
push
vxorps
push
mov
inc
ss
mov
or
mov
popf
out
xlat
or
out
dec
jge
lock
mov
cli
jnp
roll
sub
sbb
test
mov
leave
lods
adc
adc
jecxz
mov
aam
ljmp
out
daa
push
mov
jo
pop
stos
out
push
inc
imul
or
xchg
lods
loope
sbb
loop
outsb
pop
repz
inc
shll
lret
nop
lds
aas
sbb
xchg
in
dec
xchg
sarl
push
bound
cmp
jp
aam
data16
push
and
sub
sub
ja
fisubrs
test
sbbl
imul
leave
xor
adc
mov
int
and
cld
and
test
mov
mov
or
ss
jmp
fiaddl
loope
scas
adc
xor
aam
mov
cld
insw
sarl
inc
pop
pop
les
ret
adc
dec
out
outsb
aad
testb
sbb
sub
out
lods
mov
mov
insb
sahf
and
loope
adc
in
daa
sub
adc
les
and
insb
or
sub
enter
sub
int3
stos
xchg
outsl
mov
imul
mov
lret
sub
mov
xchg
adc
xlat
sub
mov
add
popa
test
or
hlt
mov
fdivs
pop
negl
xlat
inc
jb
pop
pop
add
xlat
outsb
sti
mov
ficomps
pop
test
stos
psrad
fdivrs
lret
sbb
mov
sbb
and
and
mov
ja
sub
or
sub
fstpt
stos
sbb
sti
icebp
ret
cmp
das
out
push
or
cmpl
mov
ret
fisubl
es
rorb
pop
arpl
sbb
dec
pop
stos
jp
dec
int3
fnstsw
mov
inc
sub
cltd
and
mov
outsl
cmp
enter
in
sub
mov
outsb
jge
loopne
test
je
gs
frstor
addr16
divb
pop
jbe
mov
dec
aam
mov
xchg
pushf
and
pusha
jae
mov
push
add
gs
adc
mov
in
pop
lret
incl
loop
loopne
push
in
sbb
pop
mov
ja
aad
xchg
and
pop
mov
repz
loopne
mov
fsubl
dec
xchg
pop
icebp
mov
adc
xor
xor
cmp
jmp
jmp
xor
fistpll
shl
mov
fisttpll
jmp
shl
mov
sub
addr16
add
cmc
dec
cmp
push
test
or
std
mov
sbb
cmc
cli
dec
mov
xor
jp
std
aas
xor
adc
sub
jp
jbe
sarl
pop
rol
lods
ljmp
fistpl
popf
and
aad
scas
and
rcll
mov
or
pop
fimull
xchg
test
pop
mov
xchg
scas
cmc
mov
jecxz
fwait
cmp
sub
daa
pop
sub
test
pop
and
lahf
push
test
idivb
mov
scas
dec
lock
push
scas
mov
mov
jb
lods
mull
cmc
inc
cmpb
je
pop
lret
cli
xchg
pop
out
loopne
in
push
imull
ret
ret
leave
outsb
negb
test
fs
orb
psubsw
ds
aad
out
or
imul
xchg
adc
repz
pop
test
ja
je
push
clc
out
jecxz
fidivs
push
add
inc
cmpsb
dec
cmp
push
stos
nop
push
xor
sub
sub
cmp
lods
popa
test
sub
testl
fmull
sbb
jmp
jl
sub
sub
es
std
sub
xchg
stos
pop
lahf
jle
mov
inc
xor
inc
xchg
ljmp
or
sub
pusha
mov
sub
mov
mov
cwtl
in
mov
xor
sub
js
xchg
repz
mov
in
in
cmp
nop
lret
dec
or
std
ret
inc
push
repz
add
loope
cs
pop
cs
mov
add
dec
jns
dec
ret
sub
out
test
insl
adc
scas
lcall
dec
lahf
push
inc
pop
mov
add
mov
das
push
adc
lock
mov
movsl
lds
push
lret
rorb
jbe
push
in
lea
xchg
iret
pop
inc
loopne
pop
mov
movsl
in
pop
sub
adcl
in
stos
data16
xor
jle
adc
dec
push
and
sub
xchg
icebp
push
mov
or
adc
loop
shlb
es
jl
jnp
lods
sbb
add
loop
mov
fidivs
pop
cmp
jecxz
test
inc
loopne
sbb
insb
cmp
mov
add
add
push
add
clc
cmp
xchg
add
stos
pop
inc
mov
inc
movsl
mov
rclb
iret
ret
xchg
test
and
inc
iret
clc
xchg
push
adc
xlat
ss
cmp
or
daa
lods
sub
imul
or
rcrl
leave
movsl
jge
scas
lret
push
fwait
xchg
adc
mov
jmp
mov
mov
movsb
frstor
ror
inc
inc
leave
xlat
outsb
push
and
out
std
inc
and
push
test
push
pop
or
fsubrs
jmp
pop
jb
fcomp
sbb
ja
sahf
jne
dec
cli
inc
inc
lcall
or
push
decl
into
mov
push
mov
mov
jbe
cmp
insb
insl
test
mov
rolb
adc
hlt
jle
cmp
aad
xchg
test
or
mov
or
je
xor
and
mov
add
imul
jl
shll
aad
push
jmp
push
ret
cmp
enter
dec
cmp
mov
mov
mov
dec
jns
pop
jl
push
mov
xlat
add
loope
sub
stc
fprem1
sahf
gs
mov
outsb
adc
ss
out
stos
in
test
dec
cmpsb
sbb
mov
enter
inc
ds
jmp
std
push
add
test
cltd
lcall
or
in
xchg
notl
push
cmpb
cmp
fstps
xchg
adc
mov
jns
subl
adc
cltd
sbb
jne
push
jle
leave
sub
mov
xchg
cmp
pushf
sbb
and
lods
jl
jmp
sahf
outsl
push
test
sti
and
jmp
mov
data16
jns
dec
dec
adc
mov
adc
push
jge
mov
mov
cmpsl
inc
mov
xor
or
fstpl
and
jecxz
cmp
cmp
icebp
pusha
sbb
mov
icebp
xchg
sub
mov
mov
lret
into
insl
pop
sbb
insb
bound
rcl
push
cmpl
xchg
iret
pop
push
xlat
mulb
sub
mov
dec
pop
adc
and
add
rorl
imul
cld
icebp
add
mov
ljmp
jl
or
fists
gs
test
cmpsl
add
lock
mov
ds
imul
sarb
inc
mov
rolb
inc
les
mov
or
fwait
cmpsl
adc
and
pop
add
pop
movsl
aas
mov
dec
xor
mov
add
cli
popa
shrl
cwtl
sub
fstp
ljmp
in
cmp
and
mov
push
fisttpll
int3
xor
adc
dec
or
or
mov
or
sbb
add
movsb
stos
loopne
lods
sahf
mov
add
inc
imul
lods
into
dec
push
jne
test
gs
aaa
loop
adc
fbstp
pop
or
sub
sbb
in
cmpsl
iret
pusha
push
negb
mov
add
pop
outsb
add
inc
sub
sbb
daa
out
cmpsl
insb
leave
lret
pushf
pop
jns
xchg
add
fnsave
dec
insb
fbstp
out
sub
loop
push
fcomip
cltd
add
stc
jmp
lret
cmp
sub
adc
jmp
lods
push
push
sarl
movsl
pop
push
mov
es
bound
out
jge
mov
orl
fists
xchg
sbb
pop
fiaddl
outsb
mov
xchg
scas
jmp
int3
in
insb
mov
and
push
subb
fisubl
jecxz
pop
sbb
pop
lcall
mov
xorl
pop
pop
adc
sbb
shlb
inc
fidivrs
arpl
rclb
test
or
mov
xlat
scas
xchg
cmp
jge
shrl
mov
dec
add
pop
scas
jno
out
pop
pop
sti
jge
out
and
fidivrs
push
fwait
aam
idiv
nop
cmp
xor
add
push
movl
or
push
movsl
call
icebp
mov
call
xchg
mov
or
mov
or
jle
gs
fucomip
inc
lods
insb
and
jo
lret
pop
cmp
sbb
lods
push
pop
sbb
mov
push
loop
int3
cltd
cmp
gs
sub
xchg
fldcw
jns
stc
in
adc
mov
pushf
out
gs
fdivp
or
insb
mov
sbb
loope
mov
jne
jmp
popf
cmp
ljmp
pop
loopne
in
sbb
shlb
dec
pop
pop
xor
enter
mov
inc
fnstcw
jbe
rcrb
out
sbb
fwait
adc
push
pop
mov
or
jp
sbb
push
or
sbb
push
inc
movsb
mov
add
test
shll
cmp
aas
push
lret
push
inc
je
repz
ss
cmp
mov
and
xor
mov
cmp
daa
dec
sub
inc
mov
cmpsb
repnz
std
das
sub
jb
bound
fbld
sbb
gs
out
aas
sub
das
inc
jmp
pushf
in
lods
add
in
lds
inc
lea
dec
add
nop
in
cmpl
ljmp
dec
lods
ja
shrb
cmpsl
add
in
aas
sbb
out
mov
jg
or
enter
das
out
mov
mov
repz
scas
xchg
iret
scas
rcrb
jecxz
mov
push
add
jmp
add
adc
pop
clc
sbb
cmp
add
inc
push
adc
repnz
pop
pop
cmp
test
lock
ret
jo
pop
daa
xlat
sub
cmp
loope
push
mov
rorl
test
lods
filds
outsb
or
andb
sbbb
pusha
pop
ljmp
mov
arpl
xchg
or
and
shl
aas
mov
jnp
cmpsb
lods
mov
scas
cwtl
xchg
jbe
push
push
xor
out
rorl
pop
notl
adc
fdivs
cmp
lret
pusha
leave
int3
jle
push
fldcw
and
push
xchg
sti
add
cmpsb
ja
mov
add
xor
dec
add
pcmpgtb
sub
insb
lods
icebp
or
aad
lds
sub
pop
jge
sub
lcall
stc
pop
mov
cmp
or
lret
xor
xchg
sub
pop
jb
and
pop
adc
add
push
leave
jo
jnp
mov
insl
mov
inc
pop
mov
mov
pop
mov
into
int3
and
add
or
pop
dec
sbb
pop
loop
mov
icebp
xchg
cmp
das
in
xchg
mov
xchg
fildll
pop
loop
gs
daa
adc
jl
adc
out
loope
out
pop
int3
jle
loopne
lret
mov
cmc
cs
xor
mov
dec
std
lret
out
xor
out
xor
mov
jnp
adc
outsl
dec
popl
push
in
js
or
mov
xor
cmp
aaa
int
mov
xchg
and
add
push
or
pop
test
in
lock
dec
faddl
pop
lods
mov
adc
outsb
cmp
jge
pusha
rcl
jmp
mov
push
mov
sub
ficoms
imul
popa
es
icebp
pop
cmp
cli
add
lds
outsb
stc
mov
mov
popf
jmp
or
mov
xchg
mov
out
lcall
sbb
arpl
mov
fmulp
xchg
add
lahf
add
push
mov
push
adc
loopnew
sub
stos
add
cmp
in
fimuls
push
aas
mov
arpl
rep
and
fs
lods
in
mov
xchg
call
dec
les
fcmovnu
aad
js
or
fwait
pop
ss
dec
movsb
mulb
repz
mov
adc
push
sub
cmpsb
xor
jle
mov
jle
cli
sti
sub
xchg
xor
scas
xlat
xchg
repnz
fidivrl
shl
out
in
or
cwtl
xchg
adc
jge
mov
push
ret
negl
add
das
and
dec
movsb
arpl
icebp
xor
inc
fisubrl
mov
popa
dec
sahf
mov
lods
and
mov
pop
or
and
fwait
fwait
sbb
mov
test
pusha
popf
push
lret
sub
inc
cmp
mov
push
bound
adc
sub
fistl
xor
push
push
ljmp
mov
and
xchg
push
mov
or
pop
jns
push
sub
out
scas
jle
or
adc
cwtl
cli
push
enter
adc
popa
fdivrl
cmp
iret
or
xchg
inc
sbb
mov
inc
out
lcall
mov
jno
jp
mov
xor
adc
sbb
sahf
dec
mov
popa
ds
jb
orl
jecxz
mov
ds
push
mov
xchg
inc
sbbl
insb
sub
adc
push
out
sbb
push
pop
fstps
push
in
subl
pcmpeqw
jle
mov
je
mov
ret
jl
sub
pushl
xchg
or
icebp
iret
sub
sbb
out
aaa
adc
lret
fs
lcall
data16
add
xor
jle
push
out
in
andl
cld
test
scas
mov
jns
repz
daa
push
aaa
rcl
and
push
mov
pop
pop
loope,pn
ss
out
in
pop
sub
jle
rorb
notl
jns
mov
pop
adc
jg
sub
pop
inc
out
cmc
push
dec
mov
pop
ret
daa
jmp
call
add
pop
mov
inc
ja
and
mov
and
cmp
cs
scas
movsb
adc
push
scas
dec
adc
jo
cmc
popa
ljmp
ja
in
pop
and
adc
dec
out
cmp
outsb
mov
ss
ja
pop
insb
jge
lahf
dec
xchg
fldcw
lods
dec
xchg
add
push
call
dec
jge
jge
jno
add
xor
jno
sbb
add
mov
cld
dec
push
les
sbb
sbb
sbb
sub
inc
xchg
jl
mov
cmp
fwait
insb
pop
add
mov
sbb
xchg
sbb
hlt
and
cmpsb
adc
sub
arpl
leave
inc
jbe
enter
ret
jecxz
inc
or
inc
fstl
adc
fistpll
sarl
loope
xchg
jecxz
aam
popa
sbb
loopne
or
mov
fldcw
ret
fadds
pop
pop
daa
push
mov
pop
add
test
add
pop
sub
pushf
rcl
loope
sub
sarl
pop
loope
adc
sarb
repnz
call
cwtl
pop
mov
iret
xor
push
inc
cmp
nop
ss
pop
lret
icebp
push
adc
lahf
imul
fnstcw
xor
mov
lock
lcall
push
and
inc
mov
ss
int
scas
jl
sub
mov
or
pop
cmp
sahf
pop
imul
inc
pop
xorb
push
das
sbb
int3
xchg
jo
notl
ror
xor
xchg
repnz
sbb
push
fstpt
mov
ss
and
cltd
stos
fildl
jecxz
jle
in
and
adc
mov
enter
shll
ret
out
xlat
xchg
jne
cmc
and
push
mov
in
cmp
add
subb
dec
cmp
mov
mov
xor
and
mov
mov
js
mov
mov
js
rcl
ss
xchg
in
mov
movsl
sahf
sbb
push
mov
jno
jo
mov
or
repz
test
mov
mov
mov
aaa
stos
jg
ss
xchg
mov
outsb
add
fmulp
push
dec
in
sub
popl
push
xor
cmp
jmp
jg
or
mov
mov
fstl
fstpt
or
imul
mov
cmc
mov
outsl
pop
out
out
xor
xor
push
popa
and
push
sbb
pop
out
clc
pop
and
sub
ret
std
inc
test
enter
lods
inc
mov
fwait
stos
cmp
dec
pop
and
add
dec
aad
inc
frstor
jecxz
mov
ror
iret
xchg
xor
or
aaa
add
aaa
xor
push
lahf
mov
mov
and
mov
mov
dec
adc
rcrb
or
mov
push
repz
add
aad
pop
dec
push
loop
add
adc
adcl
daa
jo
adc
or
daa
sbb
mov
ret
cli
mov
sbb
addr16
fildl
fcmovnu
call
sbb
out
fildll
pushf
cmc
rorb
imul
and
xchg
add
and
cmp
lea
mov
push
xchg
pop
inc
xchg
ret
mov
jb
stc
xor
sbb
pop
rorb
add
push
jne
xchg
in
movlps
and
sub
xchg
les
insl
in
mov
pushf
mov
mov
and
sub
pop
das
pop
jno
push
das
aam
addr16
jns
and
jne
in
imulb
rcr
or
jmp
mov
fwait
bound
lods
cld
inc
or
enter
in
imulb
add
jne
mov
js
adc
loope
call
test
cmp
orl
cmp
pop
jecxz
test
dec
jp
add
jl
inc
mov
in
lock
dec
add
push
sti
push
lret
cmp
orb
or
into
xchg
adc
movb
jmp
xchg
mov
inc
adc
jne
fldcw
mov
in
mov
cmp
mov
fstpt
push
jecxz
icebp
add
cmpsb
addr16
sub
lods
pop
scas
sub
aas
insl
cmp
push
test
popa
cmp
push
lcall
sbb
repz
call
inc
add
xor
cmp
push
push
test
inc
jp
add
decb
dec
das
add
cmp
mov
scas
push
imul
cwtl
les
lods
iret
pop
loopne
xchg
stos
inc
adc
push
ret
sahf
scas
subb
test
into
mov
mov
xchg
movsl
repz
data16
repz
xchg
int
in
icebp
aam
loop
les
ss
stc
push
sbb
test
adc
sti
mov
pop
imul
and
pop
sub
jne
stos
lret
imul
jge
push
idivl
jle
cs
push
test
cld
adc
xor
mov
cli
gs
pop
or
lock
dec
push
sub
in
lret
imul
lahf
movsb
test
je
jge
mov
and
stos
xchg
jbe
loope
shr
jne
mov
popa
xlat
scas
mov
mov
lcall
xor
sub
ficomps
xchg
loopne
leave
in
jle
mov
arpl
pop
xchg
icebp
pushl
leave
ljmp
ret
mov
lds
notl
pop
jecxz
stos
scas
inc
xor
pop
out
xor
stc
sbb
les
mov
mov
push
hlt
mov
jge
into
daa
xchg
inc
and
pop
sbbb
cwtl
sub
mov
mov
mov
xor
sarb
xor
mov
jmp
xchg
jle
rclb
shll
mov
mov
ds
and
ret
ljmp
and
and
mov
lock
rorl
inc
fisttpll
lret
ss
mov
mov
pop
ret
js
pushf
cltd
loop
fsubs
scas
ss
and
mov
ret
cs
xor
push
push
dec
addr16
fwait
or
mov
cwtl
repz
mov
cmpsl
lock
adc
das
cs
cmp
int3
stos
push
cmpsb
jecxz
testb
mov
sbb
mov
lock
or
orl
adc
clc
add
leave
push
xor
xchg
ds
fsubl
imul
std
bound
cmp
or
mov
dec
sub
inc
or
movsl
sbb
cmp
in
fsubrs
filds
jle
pop
scas
sbb
jecxz
pop
stc
push
lods
movsl
rcrl
shll
cmc
test
add
mov
sbb
mov
js
mov
mov
hlt
push
fdivs
das
push
inc
push
or
jne
daa
lods
loop
xor
jb
insb
push
test
fildll
jge
int
adc
fiadds
add
sbb
shlb
mov
daa
fwait
inc
sbb
rcrb
push
int3
mov
push
fnsave
xchg
push
insl
and
out
loop
mov
insb
sbb
lock
inc
or
add
and
repnz
movsb
stc
sub
ja
sarl
lock
and
fwait
ror
stc
outsl
sub
push
popf
jp
fnstsw
movsb
mov
ja
and
add
sbb
dec
xor
into
mov
loop
dec
fs
stc
push
repnz
adc
add
sub
inc
jl
sub
pop
add
sub
mov
std
mov
or
push
cmp
dec
neg
pop
insl
sbb
test
enter
leave
mov
mov
xor
xchg
out
pop
fnstenv
xchg
mov
ret
adc
lret
xor
sbb
mov
enter
pop
mov
out
movsb
in
fld
bound
loop
push
cmp
push
sbb
daa
push
sarb
jns
push
and
sbb
out
inc
pusha
xchg
mov
cmc
jg
mov
dec
sti
xchg
mov
xchg
jge
inc
push
test
or
xchg
mov
fs
dec
call
das
orl
xchg
jno
js
fdivrl
push
popa
jecxz
outsb
mov
notl
scas
mov
dec
add
sub
mov
mov
mov
pop
jecxz
pop
orl
popf
cmp
frstor
push
hlt
icebp
cmpsb
pop
jbe
test
push
xor
xor
push
outsb
adc
lods
adc
scas
movlps
in
enter
cwtl
push
sbb
xchg
mov
jmp
push
outsl
push
push
jae
mov
es
pop
lahf
fwait
add
fstps
push
mov
mov
or
add
and
call
test
outsb
push
pop
test
mov
mov
adc
insl
insb
lods
push
pop
inc
call
mov
sub
in
adc
jmp
bound
mov
pushf
std
out
cmp
aas
xchg
add
test
mov
pop
in
out
scas
mov
jno
or
sub
xor
ds
mov
sub
pushfw
sub
stc
mov
loop
cmp
daa
cmc
out
stc
loopne
mov
cmp
and
sbb
inc
into
sahf
adc
lock
dec
fwait
xlat
call
xchg
mov
ret
les
dec
shrb
xchg
fldt
mov
pushf
mov
add
pop
and
bound
mov
movsb
mov
movsl
push
sub
adc
loop
xchg
push
fsts
push
mov
movsl
fbstp
negl
or
xchg
adc
pop
mov
inc
adc
lcall
insl
push
dec
popa
fwait
xlat
cmp
inc
sub
je
sub
movsb
inc
fmulp
repz
or
lea
lcall
mov
dec
push
push
sub
inc
push
fbstp
pop
cmp
sarl
xchg
cmp
jo
sub
cmp
stos
mov
inc
test
push
test
repnz
aas
popl
mov
adc
hlt
movb
roll
add
jmp
or
sbb
sti
jmp
cmpsb
xchg
cmc
testb
sub
jae
ficomps
xchg
jbe
int
adc
sub
xor
std
pushf
adc
jl
cmpsb
jmp
test
add
iret
rclb
push
inc
adc
stos
fsubr
jge
pop
jmp
movsl
and
adc
adc
ret
add
mov
aam
sbb
loopne
sbb
fdivl
negb
mov
jbe
movsl
mov
mov
fdivl
lods
inc
les
jecxz
ret
ficompl
mov
test
pop
aad
xchg
test
jg
or
mov
mov
test
inc
pop
int
adc
inc
cltd
jno
sbb
nop
das
adc
dec
mov
fcoms
xor
nop
mov
pop
lods
adcb
js
pop
pop
popf
xchg
add
clc
xchg
cwtl
outsl
fcoms
mov
leave
push
aaa
mov
xor
mov
push
mov
mov
ret
or
pop
or
movb
sbb
cmp
aam
xchg
into
cmp
iret
pop
shl
lds
inc
pop
loope
cmp
and
sub
push
dec
pusha
fiaddl
cmp
ret
lcall
incb
ja
stc
push
mov
jno
imul
pop
imulb
pusha
cmp
pop
lret
fwait
mov
sub
fisubs
scas
mov
mov
pop
scas
or
cmp
shrb
xchg
mov
pop
or
fldenv
fisttpll
int
call
out
mov
daa
inc
cmp
sbb
shlb
inc
jge
mov
mov
add
aad
outsb
popa
sti
mov
loope
dec
rcr
xor
stos
and
scas
mov
dec
aaa
out
cmp
and
dec
cmc
xor
pop
adc
adc
bound
ljmp
xchg
out
repnz
cwtl
das
xchg
lds
enter
cltd
dec
movsl
loopne
push
xchg
lret
jle
pop
jnp
out
fnstcw
cmp
add
push
push
daa
mov
cltd
fcmovu
or
pop
ja
push
xor
sub
rol
negb
mov
xchg
pop
push
lea
cmc
mov
sub
sbb
sub
enter
loopne
cmp
xor
lret
sbb
push
and
push
enter
inc
pop
mov
push
andb
clc
push
jmp
fcmovnb
je
popa
sub
mov
repnz
sarb
or
imul
mov
inc
sub
cmpsb
std
or
or
sbb
inc
rolb
cmp
ret
mov
push
cltd
inc
call
nop
aaa
subb
mov
mov
adc
in
out
and
pop
pop
ficomps
mov
mov
icebp
sub
dec
jl
and
xchg
push
pop
jg
jb
enter
scas
jg
adc
sbb
or
push
xchg
cmp
bound
or
jmp
sub
jmp
nop
and
mov
mov
int3
inc
jne
cltd
adcl
fists
aaa
sub
add
es
js
jne
push
pop
movl
mov
nop
cld
cmp
jl
xchg
popa
jmp
ljmp
fsts
push
adc
xchg
daa
and
add
in
jmp
popa
call
repnz
mov
sbb
repz
fistpl
push
adcb
dec
jbe
stos
inc
dec
ljmp
adc
pop
lods
xchg
mov
mov
pop
in
sub
lret
xchg
sbbb
inc
push
mov
xchg
stc
jge
imul
je
scas
dec
cmp
insl
lahf
dec
out
push
mov
pop
jno
mov
pop
sti
les
sbb
loopne
dec
xchg
push
sub
sub
jg
data16
jmp
into
add
dec
add
pop
cmpsl
adc
test
incl
mov
mov
in
mov
jecxz
inc
jae
cmp
mov
imul
rclb
aaa
aaa
jmp
xchg
inc
xchg
sub
cli
insl
push
sbb
fwait
xchg
fs
test
xchg
or
xchg
outsl
xor
sub
icebp
mov
outsb
pop
cmpb
jecxz
add
sub
movsb
lea
cli
fdivrl
mov
fsubl
icebp
mov
dec
rorb
pop
lods
xchg
mov
xchg
adc
and
cmp
addr16
lcall
fs
in
pop
or
pop
popf
push
mov
dec
dec
pop
push
pop
mov
aad
test
rcrb
sbbb
bound
loop
int3
add
push
aam
es
es
adc
mov
ret
adcb
push
mov
jg
insl
adc
hlt
cmpsl
push
jns
int
sti
fldenv
and
test
jl
outsl
pop
movl
dec
dec
jbe
std
inc
mov
outsb
mov
add
inc
push
in
push
dec
xchg
paddb
xchg
clc
mov
sbb
push
mov
stos
notl
int3
ja
setne
inc
mov
mov
into
adc
adc
jle
out
mov
inc
int3
jmp
cs
fcomip
out
inc
cs
lods
cltd
sarb
push
jb
dec
pop
outsb
enter
inc
xor
out
mov
sbb
xchg
clc
stc
aad
std
jo
rdmsr
gs
add
mov
imulb
repnz
pop
repnz
mov
shl
jbe
enter
fldz
arpl
mov
cld
adc
lods
ds
aad
sub
mov
sub
cwtl
cwtl
sbb
inc
pop
xor
push
or
jbe
jnp
ds
leave
out
mov
mov
icebp
mov
inc
pop
out
adc
mov
xor
mov
sub
push
mov
test
sub
jbe
add
mov
sub
sbb
and
sub
iret
mov
mov
insl
call
jb
rcll
mov
jne
mov
xor
lods
in
mov
mov
ja
xor
push
cmp
mov
lea
xchg
jl
loop
loop
add
fcomip
pop
push
inc
cltd
mov
sbb
lock
inc
mov
ret
sub
fnsave
mov
jnp
iret
ds
lret
fldenv
dec
pop
sub
xor
pushf
mov
divb
push
addr16
lds
dec
jno
pusha
movsl
aaa
out
popa
cmp
aaa
jl
call
fs
call
ret
add
nop
sub
aaa
jo
iret
das
xchg
cmp
xchg
mov
aaa
xlat
arpl
dec
pushf
dec
sub
pop
xchg
mov
push
mov
rcll
lret
clc
je
push
cmp
mov
dec
test
mov
pop
sbb
pushl
inc
pop
mov
stc
ret
mov
in
pop
data16
cli
push
add
jg
shll
hlt
mov
adc
addr16
jge
test
xchg
sub
out
cmp
call
mov
xor
push
hlt
lds
cmpsl
or
push
mov
xchg
pop
mov
pop
data16
int3
imul
inc
filds
int3
push
add
pusha
mov
cmp
mov
jae
out
or
stc
rcl
rorl
cmpsb
jnp
pop
lods
jmp
not
in
mov
jne
sti
outsb
gs
fldl
in
mov
js
dec
xorb
push
out
stos
add
xchg
andl
icebp
or
adc
mov
out
jae
jns
cwtl
jge
scas
pop
test
cmpsb
adc
cltd
xchg
add
push
imul
test
daa
call
mov
movsb
pop
xchg
gs
sub
subl
inc
pop
pop
xchg
inc
jns
sti
movsl
cmp
or
mov
int
movsb
mov
jmp
imul
stos
push
jnp
scas
mov
inc
cmp
dec
push
xchg
out
enter
aad
pushl
and
and
or
xchg
inc
addr16
fidivs
cmp
hlt
ljmp
hlt
push
lods
outsb
xchg
int3
dec
and
or
icebp
movsb
sub
pop
pop
arpl
movsb
int3
cmpsb
mov
fildll
orb
adc
push
sahf
sub
mov
outsl
add
add
xor
adcl
jg
repz
jle
outsl
cmp
lret
mov
lcall
call
sub
popf
in
cmp
sarl
shl
add
js
call
shlb
add
test
mov
aaa
pusha
xor
push
cmc
in
pop
lcall
dec
cmp
sub
loope
and
jae
pop
dec
jg
pop
pop
adc
int
jmp
sub
jle
mov
xlat
out
in
inc
and
fwait
lret
cli
popa
and
jbe
xor
sbb
leave
and
sub
cmpsl
gs
jl
sbb
or
jnp
mov
ja
adc
dec
push
xchg
into
or
popa
cmpsl
dec
popw
pop
push
fwait
loopne
and
ficoms
ret
add
lock
lahf
adcl
mov
mov
imul
mov
cwtl
sbb
sbb
mov
pop
cmp
adc
fidivrs
push
jmp
jo
jl
xor
rcrl
push
sub
fistps
lahf
imul
pop
dec
jge
pop
xor
xor
inc
pop
lock
or
jge
ds
push
sub
ror
ja
mov
pop
add
adc
jae
data16
pop
inc
out
leave
fwait
pop
repz
jmp
cmpsb
push
out
push
sahf
push
sub
popa
in
dec
ficoms
cwtl
xor
movsb
cmpsb
cmp
dec
arpl
mov
daa
clc
push
cmp
fwait
inc
cmp
pop
jbe
push
ret
jge
dec
xchg
rcll
mov
shlb
mov
andl
ret
ss
mov
mov
imul
insl
loopne
jno
mov
pop
test
cmp
pushf
loop
add
mov
pop
js
fnstenv
movsb
inc
dec
sbb
xor
or
imul
scas
sti
push
movsl
sub
aas
sbb
jg
and
mul
sbb
cmp
cs
loope
mov
or
lret
xorb
rcll
push
mov
pop
imul
pop
xchg
das
and
cmpsb
stos
mov
sahf
xor
stos
xor
inc
sub
xchg
fsubrs
pop
xchg
test
imul
inc
push
hlt
ljmp
dec
shll
je
icebp
enter
stos
scas
xchg
add
xor
jnp
inc
mov
xor
jmp
xchg
cmc
mov
outsl
lea
in
int
xchg
push
mov
sub
inc
inc
cmp
sbb
mov
fistps
pop
out
adc
aaa
mov
cld
cmp
xor
inc
shrl
stc
pop
scas
daa
mov
sbb
sub
stc
push
or
push
stos
or
dec
jnp
cwtl
call
imul
fistl
push
scas
cmc
ja
or
mov
nop
push
stc
data16
jb
pop
sbb
sub
nop
mov
ljmp
pop
add
inc
xchg
es
movsl
push
in
sahf
or
add
dec
mov
pop
andl
mov
add
in
mov
ret
jne
push
push
xchg
sti
ja
out
add
into
cmp
mov
jbe
js
daa
pop
test
hlt
mov
lret
das
outsl
stc
push
mov
cmpsl
push
or
cmc
outsb
in
arpl
mov
mov
jo
ds
dec
rcll
insb
xor
adc
mov
and
lods
sub
sub
xchg
imul
mov
cmpb
repz
rolb
dec
cmpsl
fisttps
xor
aas
jbe
test
test
sub
imull
jb
movsb
jmp
push
adc
push
addr16
mov
outsb
sbb
inc
gs
arpl
push
jp
xor
movsl
das
xor
pop
addr16
mov
dec
jp
cmp
push
arpl
test
jo
xchg
test
loopne
xor
sub
int
jl
cltd
xchg
add
push
mov
cmp
pusha
jne
rorl
dec
lcall
push
dec
mov
sub
cltd
push
bound
mov
add
sbb
fdivs
mov
jecxz
in
lods
push
cmp
pop
arpl
inc
fldt
adc
cmp
lods
loop
sub
and
call
sub
jb
and
int3
in
cmp
xlat
call
push
adcl
sub
sarb
nop
xor
adc
aaa
iret
pop
mov
mov
add
push
dec
jmp
dec
mov
pop
xchg
jl
nop
jbe
ljmp
pop
sbb
addr16
pop
insb
mov
loope,pt
ds
add
pop
and
push
outsl
scas
mov
jecxz
jmp
cmp
stos
pop
pop
ds
jecxz
popf
push
mov
loope
dec
xchg
dec
and
vandps
lea
mov
cltd
lea
jbe
and
mov
cmpsb
sbb
push
js
mov
push
rcrb
jne
mov
xchg
aad
xchg
out
xchg
adc
mov
test
or
sahf
mov
pop
and
pop
int3
sub
cmp
mov
es
inc
push
andb
into
lods
jge
mov
stos
inc
dec
dec
sbb
push
daa
stos
push
cmp
mov
mov
fnsave
push
int
repnz
lahf
push
add
mov
jg
lcall
mov
or
mov
repz
lods
test
ret
mov
push
jns
fsubr
sub
cmp
cmp
sti
mov
xchg
cmp
insb
lods
out
daa
stc
cmpsl
ss
pushl
xor
jne
sahf
pop
and
jae
add
mov
cmp
leave
cwtl
push
adc
mov
adc
aaa
and
pop
sbb
xchg
dec
lahf
jl
mov
imul
lods
stos
lock
into
mov
fdivrl
roll
popf
and
popa
jbe
fwait
in
test
pop
clc
inc
cld
data16
repz
ret
mov
filds
fwait
inc
cmp
mov
fst
adc
lock
inc
inc
dec
loop
mov
lea
out
pop
xchg
mov
out
mov
lcall
mov
outsb
int
add
xchg
out
jg
filds
fwait
ja
hlt
flds
cltd
mov
mov
in
imul
scas
cmp
mov
neg
jne
mov
imul
mov
jno
push
fnstsw
int3
mov
scas
sahf
inc
ds
lret
push
leave
call
lahf
add
call
into
mov
jmp
mov
inc
call
repnz
ss
lea
lea
add
int
mov
int3
pop
mov
mov
in
ror
pcmpgtb
cmc
paddq
aam
push
cmp
mov
enter
lcall
lcall
in
andl
vminps
lret
adc
mov
decb
repnz
loopne
xchg
fdivl
add
jnp
cmpsb
cmp
pop
and
mov
mul
subb
adc
cmc
xchg
inc
or
out
mov
repz
pushf
cmp
push
push
xor
ljmp
sbb
dec
mov
dec
jae
jne
push
sbb
or
cmp
mov
std
dec
sub
outsl
ljmp
fists
lock
rcrl
inc
ljmp
iret
dec
jno
fcmovbe
and
dec
cmp
xor
fcoms
shrb
out
push
scas
mov
mov
adc
cmpsb
add
icebp
adc
ja
adc
icebp
repz
mov
ljmp
cmp
ret
dec
mov
or
mov
test
repnz
sbb
mov
mov
out
inc
les
jae
out
dec
insl
or
push
mov
jge
push
icebp
test
dec
sub
dec
mov
push
cwtl
xor
pop
adc
shld
push
mov
clc
lahf
and
push
add
jmp
stos
arpl
int3
in
arpl
popf
mov
addr16
lret
dec
inc
cmp
jb
mov
stc
in
mov
mov
aas
imul
pop
cmpsl
lds
pushf
inc
outsb
addr16
push
cli
add
cmpxchg
adc
mov
jecxz
lds
es
cmpb
add
imul
add
push
xchg
ja
aas
xor
gs
scas
mov
push
mov
and
call
jbe
rorl
stos
mov
jmp
cmp
lods
cmp
and
setg
icebp
or
xchg
ds
mov
inc
test
pushf
out
or
imul
test
dec
mov
xchg
mov
out
cmpsb
cmc
das
add
fwait
cmp
out
lahf
mov
insb
xchg
mov
mov
gs
les
pop
shrl
mov
xchg
add
fsubrs
shlb
call
xchg
add
scas
push
xor
das
adc
ja
pop
mov
andl
sahf
mov
ffreep
pop
or
push
pop
jo
mov
enter
xor
pop
mov
dec
outsb
pusha
pop
jecxz
xlat
movsb
inc
imul
xor
test
dec
enter
scas
call
ret
cmp
mov
loope
shll
loop
ds
nop
jb
cmp
incl
cmp
dec
adc
repnz
jg
pop
push
cwtl
data16
push
inc
pop
pop
mov
xchg
test
jl
mov
sarl
loopne
lahf
pusha
movl
pop
xchg
jb
fldt
mov
int
cs
add
push
cmp
fildll
jmp
jle
int3
cmp
pop
xlat
cmp
add
pop
jo
sarl
or
jo
mov
jle
out
mov
ret
adc
mov
les
push
jnp
pusha
mov
or
pushf
in
pop
sbb
scas
fdivr
fdivl
inc
or
pop
jl
mov
jl
out
mov
mov
inc
dec
iret
aas
or
bnd
jmp
in
loop
cmp
push
mov
sub
sub
mov
fldl
mov
add
sarl
ja
push
jb
and
jo
inc
icebp
adc
cmp
lret
pop
inc
dec
jle
xor
cmp
xchg
pop
addr16
sahf
scas
mov
mov
adc
ds
hlt
pop
sbb
rcll
mov
insb
cmp
fldcw
pop
insb
ds
adc
psubw
mov
jmp
xchg
jns
in
or
jb
pop
lret
fstp
mov
push
push
lret
jb
pop
lret
lods
cltd
jecxz
pop
loopne
lods
push
das
stos
ja
test
jle
dec
adc
add
xchg
cmp
mov
sub
adc
mov
sub
mov
adc
add
and
push
push
movsl
test
iret
sub
sbb
outsl
pop
outsl
jne
add
cli
cltd
ss
mov
pop
add
cmp
push
and
jb
push
xor
sbb
fdivl
add
lret
lock
sub
mov
mov
mov
ret
and
jle
mov
jl
mov
dec
fnstsw
movsb
cltd
xor
pusha
inc
cmpsl
js
sbb
pop
mov
idivb
sbb
or
repnz
pop
push
mov
inc
aad
stos
cmp
xchg
inc
mov
stc
xor
in
xchg
sub
stos
push
jnp
mov
pop
jl
stc
add
out
dec
mov
jb
sbb
leave
jle
adc
or
cmp
inc
ljmp
aam
fisubl
aam
pop
xor
outsb
add
orb
enter
adc
xchg
push
dec
xor
pop
push
xchg
mov
stos
pop
mov
ljmp
mov
sbb
in
xchg
mov
cmpb
ja
adc
inc
push
lret
test
mov
icebp
scas
rol
adc
add
ja
adc
idivb
xchg
add
pop
cmpsl
pop
or
iret
stos
in
shll
rcrb
in
es
mov
push
mov
in
mov
test
xchg
adc
mov
cmp
cltd
jp
les
adc
mov
pop
pop
pop
std
pop
pop
mov
xchg
sub
lock
or
imul
fwait
sbb
mov
mov
add
push
push
and
xchg
stos
aam
sub
and
insl
js
pop
faddl
dec
mov
or
call
mov
sbb
test
add
cmp
inc
mov
xchg
in
arpl
ja
lods
sbb
mov
enter
push
push
pop
pushf
push
push
outsl
aad
sahf
jnp
adc
sbb
inc
je
je
mov
sbb
dec
mov
push
stos
roll
imul
adc
inc
adc
fisubrl
or
cltd
aaa
add
shl
xor
push
lds
icebp
push
outsl
dec
adc
add
pusha
mov
lea
or
out
movsb
mov
clc
fldl
pusha
sti
jo
sarl
push
pusha
insl
ret
sbb
insb
lret
dec
inc
fisttpl
pop
into
fildl
push
addr16
fwait
adc
sbb
ret
jle
xchg
adc
ret
mov
xchg
call
or
push
mov
insb
mov
ja
repnz
jecxz
dec
aad
or
push
adc
dec
lret
aam
xor
adc
sahf
sahf
cli
adc
fwait
imul
and
push
sbb
xor
cmp
sbb
ret
sub
adc
sti
mov
pusha
pop
sbb
xor
xlat
sahf
cs
loop
mov
sub
mov
xchg
sub
repnz
push
gs
adc
jge
push
adc
daa
scas
adc
or
hlt
jp
mov
rcr
fmuls
mov
ret
sub
loopne
add
xor
cltd
out
popf
pop
pop
data16
idivl
out
cltd
and
lret
cmp
or
pop
jne
push
enter
ss
outsb
les
sbb
and
push
pop
movzwl
xchg
xchg
scas
cli
pop
xchg
dec
pop
jecxz
notl
jp
jnp
cmpsb
iret
outsl
mov
or
adc
sbb
push
or
rolb
jns
or
jne
outsl
xchg
leave
stc
stc
inc
test
loope
out
push
test
std
mov
in
push
pop
pop
mov
and
cli
add
cmpsb
lea
lret
mov
scas
js
ss
jmp
jecxz
lret
adc
mov
popf
fwait
enter
and
rcll
fimuls
scas
mov
repz
pop
dec
pop
pop
enter
or
andl
iret
cmp
and
sbb
movsb
jbe
test
mov
dec
sbb
pop
inc
in
push
ret
mov
xor
jge
sub
and
fldl
lahf
pop
lock
xchg
lret
out
jp
push
out
rcrb
jb
push
sti
push
mov
andl
test
popa
xor
mov
dec
sbbb
push
shrb
cmp
xor
adc
shlb
jo
sub
subb
test
or
int
xchg
push
xchg
mov
mov
mov
push
bound
fisttpll
cmp
test
insb
mov
add
xchg
fnsave
mov
clc
pop
fcmovb
mov
ss
aad
testl
cmp
mov
add
loop
sub
push
icebp
std
mov
daa
fadds
mov
loope
cmp
jle
ds
cmp
and
mov
insb
ss
xchg
scas
add
jo
mov
cmc
js
mov
dec
inc
add
outsl
mov
mov
sub
cmp
pop
les
ja
jg
jno
aas
in
mov
dec
testl
outsb
lahf
ret
pop
mov
roll
push
arpl
pop
movsl
daa
and
into
cmpsb
shl
and
add
movsl
sahf
adc
cltd
outsb
lret
jecxz
mov
loope
cmpsl
xchg
mov
enter
les
xor
jge
lock
gs
ss
push
pop
out
data16
les
adc
push
outsl
jo
adc
mov
inc
sub
fucomp
push
adc
loope
call
or
jecxz
jg
les
and
decl
lahf
cmpsb
ja
movsl
inc
fwait
jnp
cmp
out
lods
mov
dec
loopne
pop
sbb
or
pop
sub
adc
test
push
sbb
outsl
xor
shll
jecxz
adc
sbb
or
mov
imul
mov
scas
or
inc
mov
xchg
cmpl
mov
int
rcll
sub
cwtl
and
sub
cmp
adc
rcr
outsb
xchg
outsb
fwait
ret
lea
test
xor
mov
push
mov
cmp
or
mov
movsb
out
jmp
pop
ret
xor
push
int
stos
out
xchg
sahf
fwait
dec
iret
jo
inc
les
fnstsw
cmp
clc
mov
dec
adc
jmp
xchg
inc
stos
test
jge
mov
adc
mov
jne
and
pminsw
xchg
sarb
aas
or
adc
out
les
decb
daa
decl
push
sti
sbbl
lahf
mov
pop
sub
jnp
mov
mov
inc
jmp
push
add
adc
int3
int3
rcll
test
lcall
cltd
outsl
pop
mov
test
mov
and
adc
ja
xchg
ret
repz
inc
ss
decb
push
cs
sbb
jns
sub
fiadds
popa
daa
sub
pop
popf
or
xlat
mov
inc
inc
daa
add
push
add
icebp
gs
push
xlat
sbb
push
test
cwtl
sub
into
idivb
fs
and
dec
or
sub
test
xchg
ss
cmp
aaa
mov
adc
xchg
es
sub
lock
sbb
fildl
mov
sub
push
into
in
inc
sbb
or
ss
jno
lret
std
shll
mov
pushf
xchg
xor
sub
pop
xchg
and
into
adc
push
adc
fbstp
mov
mov
cmpl
jnp
sub
add
and
push
icebp
push
lahf
arpl
test
pop
fcoms
mov
jae
xchg
add
dec
cmp
xor
lods
inc
mov
ds
jb
jmp
insl
and
cld
lds
jg
cmpsl
xor
fnsave
scas
push
jb
xor
shlb
and
ja
mov
pop
adc
aas
in
ljmp
ja
aad
dec
adc
jo
cld
sbb
les
outsl
enter
inc
mov
push
push
sbb
pusha
in
fstl
jmp
and
fbld
fstps
add
lods
mov
ds
in
pminub
xor
push
mov
sbb
jae
gs
jb
jnp
or
lcall
push
cmpsb
cmpsb
jge
sub
nop
jnp
lret
sub
iret
popa
xchg
mov
in
adc
mov
pop
pop
or
outsl
out
adc
xchg
add
mov
pushf
cs
or
or
scas
cwtl
xchg
nop
fwait
movsb
out
or
mov
inc
jo
loop
ds
nop
push
or
fcomip
test
jmp
cli
mov
push
xor
cmpsb
fidivrl
xchg
fimuls
sbb
scas
mov
mov
lds
ficoms
cmp
andl
test
sub
jnp
or
xlat
test
jae
inc
xchg
movsl
adc
or
clc
out
mov
cmp
mov
shlb
mov
dec
movsl
inc
adc
adc
jg
popf
jle
movsb
cli
les
ficomps
aaa
addb
loop
or
in
push
jecxz
jno
xchg
stos
sahf
sbb
int
push
pop
and
inc
faddp
in
xor
std
push
and
cs
pusha
pop
pop
xor
mov
pop
mov
xchg
adc
jmp
stos
or
cwtl
xor
mov
data16
xor
dec
sbb
sub
jge
dec
inc
dec
hlt
clc
fidivs
sub
movsl
cmpl
popa
aas
stc
jno
ja
jle
movsb
pop
jp
and
cli
les
aaa
push
and
jmp
mov
sub
xchg
insl
fcomps
lcall
push
jmp
and
fucomp
pop
inc
pop
inc
or
in
stos
insb
fdivrs
cwtl
mov
adc
mov
and
pop
shrb
bound
bswap
xchg
popf
mov
sbb
pop
in
dec
lahf
jae
lea
adc
ret
cmp
add
or
fadd
push
pop
lock
sbb
dec
jnp
sub
ss
fnsave
pop
sti
imul
fsubs
push
out
dec
jo
pusha
icebp
mov
jp
adc
jb
sub
aad
fidivs
aaa
push
aaa
andb
lahf
cmp
pop
dec
les
ret
xor
int
mov
inc
pusha
or
sub
cs
enter
das
pop
dec
fwait
push
mov
lret
jle
imul
sbb
mov
repz
mov
xchg
adc
adcl
pusha
dec
mov
mov
fildl
clc
mov
add
jnp
inc
pop
sub
movsl
inc
loop
jg
stc
in
mov
scas
xor
fisttps
aam
fists
sbb
dec
rcrb
rcl
jno
daa
mov
dec
les
orb
mov
pop
jbe
in
mov
movsb
call
mov
cmpsl
decb
xor
popf
jle
sub
jo
dec
mov
adc
dec
das
in
add
add
xchg
mov
in
cmp
xchg
repz
sub
add
or
push
dec
gs
loop
or
mov
dec
jno
mov
frstor
fstpt
subl
stos
sub
movsl
dec
sub
movsl
xchg
clc
std
setp
pop
adc
jns
mov
js
xlat
imul
out
cs
dec
js
orl
xor
enter
mov
hlt
xchg
inc
mov
stc
mov
lds
out
dec
inc
adc
inc
xchg
xchg
push
cs
xchg
cld
sbb
ficomps
mov
imul
and
inc
jmp
lds
les
push
jns
rorb
push
dec
sarl
lods
ds
xor
jbe
cwtl
cwtl
add
insb
pop
pop
fnstsw
sub
out
mov
loopne
lods
and
pop
mov
pop
js
cltd
cmp
imul
jecxz
add
rcrb
mov
imul
xor
pop
outsb
test
in
xchg
xchg
or
nop
lahf
pop
mov
sub
jns
ja
inc
or
mov
xchg
inc
leave
add
ret
push
pop
nop
sub
inc
cltd
ja
lds
mov
inc
inc
test
dec
cltd
enter
adc
mov
add
scas
mov
loop
int
fwait
mov
outsl
imul
push
jl
adc
xlat
cltd
fptan
out
and
inc
imul
arpl
aaa
daa
dec
int3
mov
push
push
into
lcall
mov
mov
sahf
jecxz
push
fs
xor
ret
cwtl
xor
ljmp
insl
adc
pop
addr16
movsb
push
mov
jp
jmp
es
lret
push
fs
int
mov
icebp
push
clc
iret
inc
push
mov
xrstors
jecxz
int
mov
jmp
cld
lea
movsb
icebp
ret
out
sbb
mov
ja
push
nop
js
cmp
jbe
or
lcall
sti
dec
jmp
in
aad
jbe
mov
xor
adc
lods
push
mov
aaa
test
and
aaa
dec
mov
aam
xor
out
roll
ret
sbb
xor
pop
add
or
push
sub
push
lods
out
sbb
imul
cmp
cltd
mov
mov
stc
lcall
fcmovnu
inc
fcompl
cmp
jns
loopne
fdiv
push
xchg
fdivs
sbb
adc
xlat
sbb
jmp
pushw
and
stos
or
cmpsb
outsb
js
fisttps
stc
pop
test
mov
test
into
fsts
bound
or
and
and
push
push
inc
push
clc
mov
dec
cmp
cmc
adc
mov
aam
mov
inc
test
stos
cmp
nop
push
xchg
dec
jne
lret
popa
add
rclb
xor
mov
fwait
sbb
inc
sbb
imul
out
in
xlat
push
in
fdiv
xor
mov
sub
push
loop
cs
pop
int3
mov
arpl
sahf
daa
aaa
pop
inc
push
fwait
and
dec
mov
adc
pop
add
jae
pop
cmp
adc
push
adc
mov
data16
aam
je
lret
jns
fsubrl
jl
aam
ss
xchg
sub
inc
sbbl
mov
dec
dec
dec
pop
loop
in
andb
push
sub
jle
jns
lahf
imul
jle
cmp
loope
or
sbb
adc
sub
cmpsb
jbe
jnp
xchg
fwait
xor
shlb
push
mov
or
incl
mov
aad
sahf
pop
and
fwait
aas
pop
cmpsb
mov
pop
cmp
mov
add
int3
daa
pop
mov
jae
fcmovbe
arpl
sti
jns
fisubrs
mov
adc
adc
ljmp
xor
mov
cli
shlb
jb
push
outsl
mov
orb
cmp
inc
and
lock
mov
iret
out
je
jp
sub
ret
lods
mov
cwtl
sbb
xchg
leave
in
dec
lea
subl
lcall
je
inc
in
fbld
lcall
or
adcb
dec
or
ret
xchg
idivl
in
pop
pop
cltd
orl
dec
hlt
lds
or
adc
repz
es
aas
or
adc
pushf
lcall
add
pop
push
out
insb
xchg
imul
arpl
adc
jecxz
inc
mov
insb
adc
dec
andb
jb
ds
xchg
rorb
std
outsl
xchg
inc
xchg
mov
leave
bound
cltd
sbbl
inc
or
ss
pop
jle
mov
orb
test
dec
add
les
mov
outsb
jo
mov
mov
jmp
cmpsl
daa
test
xchg
inc
div
ljmp
nop
mov
xlat
addl
out
int3
inc
sarl
repnz
arpl
push
or
push
xchg
xorb
sbb
xchg
push
xchg
lret
cmp
xor
insl
in
stc
sub
sub
adc
lods
pop
call
mov
insb
mov
and
adc
inc
loop
pop
jae
call
push
mov
sbb
xor
and
movsb
fs
repnz
lcall
push
in
inc
es
add
mov
cld
bound
bound
pop
ja
mov
int3
mov
arpl
adc
adc
xchg
repnz
fwait
mov
lcall
jle
lock
lret
iret
jne
outsb
imul
inc
shrl
jmp
xor
xchg
adc
insl
dec
lods
nop
cmp
pop
aam
pop
mov
xchg
movsb
cmpsb
bound
jne
inc
and
jne
lds
sbb
jge
arpl
cmp
fs
aam
fisubrs
dec
out
aas
test
dec
sbb
sbbl
cmp
testb
shlb
imull
pop
daa
pop
outsl
sub
mov
scas
lcall
aas
mov
sub
mov
jnp
scas
outsl
push
inc
mov
xor
jo
lret
insl
xchg
rclb
les
cmp
inc
push
lret
cs
jecxz
adc
shlb
or
pusha
xor
push
pushf
nop
mov
adc
xor
xchg
adc
jg
sti
arpl
mov
das
pop
lock
lods
adc
mov
mov
xor
jecxz
mov
pop
ret
out
shlb
in
sbb
sub
cwtl
fistps
repz
pushf
adc
adc
js
in
mov
jle
mov
xchg
add
into
imul
jne
push
daa
dec
dec
loopne
sbb
pushf
bswap
imul
mov
xchg
fs
in
sub
cmp
icebp
mov
sti
inc
pop
repz
shlb
in
bound
xor
cmpsl
test
adc
mov
mov
xor
int3
cmp
cltd
ja
insb
outsl
adc
adc
int3
adc
mov
push
xor
pusha
sub
leave
or
leave
mov
mov
into
je
jl
pop
loope
fwait
dec
xor
das
xchg
dec
xchg
leave
push
jne
repnz
jns
lret
mov
cmc
jae
adc
repnz
add
inc
mov
jbe
inc
sub
jbe
add
lahf
test
scas
add
fwait
cmp
or
sub
mov
jle
jecxz
jle
inc
dec
pusha
in
xchg
clc
aam
outsb
adc
cli
int3
and
hlt
test
iret
int
push
aad
fiadds
sahf
jns
or
shrl
xchg
push
andnps
data16
out
push
or
push
stos
aad
nop
push
cmp
cwtl
mov
dec
out
sub
cltd
stos
mulb
or
sbb
stos
add
push
add
mov
ret
push
pop
sub
ret
xor
test
push
shrb
xchg
repnz
arpl
je
jns
mov
push
mov
or
mov
mov
movsb
pop
fmull
sbb
repnz
shrl
and
mov
jbe
cltd
add
push
xor
lea
call
adc
jmp
sbb
fisubrl
sbb
add
inc
xchg
adc
push
push
inc
xchg
push
jl
psubusb
dec
pop
sub
int3
dec
dec
in
mov
dec
jmp
adc
stc
sbb
xchg
or
rcll
in
repz
out
outsb
pop
push
mov
jns
hlt
and
subl
test
adc
sbb
or
stc
insl
sbb
inc
shrb
mov
sbb
dec
aad
imul
jl
test
addr16
inc
in
pop
mov
test
lock
add
imul
loopne
mov
pop
js
dec
addr16
sub
adc
mov
shl
inc
jns
mov
dec
lods
sub
xchg
sbb
mov
loopne
mov
pop
adc
sbb
mov
push
sub
mov
in
test
add
scas
or
pop
add
sbb
sub
subb
mov
adc
adc
int3
xchg
push
arpl
adc
jg
push
add
pusha
mov
push
or
xor
into
hlt
mov
cld
cmpsl
fimuls
add
test
xchg
mov
out
xor
mov
std
jnp
sbb
mov
lea
test
sbb
rcrl
iret
inc
xorl
pushf
cmpsl
inc
loope
scas
cs
test
cs
and
adc
outsb
in
popf
pop
sbb
and
cmpl
mov
jp
inc
mov
outsl
push
stos
xor
cli
jge
and
lods
mov
adc
cmp
push
cwtl
add
inc
pop
in
mov
pop
mov
cwtl
movsl
pop
daa
xor
cmp
mov
push
push
mov
insl
in
add
pop
test
mov
jns
popa
out
add
xlat
insb
out
lods
xor
push
insl
scas
out
jae
jge
mov
lods
xchg
sbb
sbb
adc
aas
cmp
mov
add
pop
ljmp
movsl
adc
test
in
sub
push
jp
daa
push
inc
cld
out
dec
imulb
push
pusha
sub
leave
fwait
xchg
sbb
mov
add
test
aad
jno
cltd
das
jge
inc
add
clc
and
inc
mov
fisubrs
enter
mov
repz
inc
fmull
lods
sbb
push
gs
push
mov
popf
clc
lret
mov
sbbb
dec
mov
mov
mov
cmpsb
test
jle
push
fsubrl
jne
and
cmp
mov
dec
push
and
pop
in
stos
dec
adc
add
push
imul
pop
lahf
shrl
lret
mov
popa
ret
or
push
arpl
sbb
xor
dec
in
fwait
add
fildll
aam
test
ljmp
mov
addr16
sub
fisttpl
jmp
stc
inc
mov
xchg
rcr
dec
outsl
sub
imul
push
mov
mov
and
dec
jbe
bound
mov
stos
inc
mov
xor
test
adc
insb
or
filds
add
pop
es
push
rcl
in
int
or
out
dec
int3
adc
mov
hlt
mov
cwtl
mov
jns
add
add
imul
push
cmova
pop
addr16
bound
lahf
cmp
loopne
xchg
add
cmpl
pusha
mov
add
mov
incl
mov
adc
test
out
cmpsb
movl
inc
mov
mov
sub
cmpsl
or
mov
mov
js,pt
add
push
mov
cmp
fldt
cltd
add
in
cltd
repz
sbb
mov
pop
push
cwtl
push
pusha
faddl
dec
xchg
dec
pop
cmp
pop
sahf
xchg
push
pop
icebp
fs
adc
shl
and
or
and
and
loop
jge
lea
jae
scas
addr16
fmull
in
lock
inc
xchg
cmp
cmp
jbe
bound
dec
inc
or
pop
mov
mov
sub
cmp
dec
cmp
add
pop
cmp
divb
cmpsb
cltd
fwait
sti
xor
xlat
mov
push
fistps
jae
push
xchg
fstl
mov
pop
mov
mov
inc
fnstenv
mulb
cmpsb
les
mov
xor
lret
xchg
and
sbb
pop
loopne
cmp
popa
pusha
and
je
cmpsb
xlat
and
mov
inc
and
mov
hlt
pop
add
xor
add
jge
loope
add
ljmp
cli
or
loop
dec
lcall
mov
inc
js
out
lahf
flds
jle
ss
je
and
pop
int3
or
mov
inc
pop
aam
std
mov
jecxz
sub
dec
or
pusha
popa
xchg
pop
sbb
testb
sbb
mov
stc
pop
lods
sbb
mov
insb
repnz
xchg
outsl
cmp
lahf
xchg
inc
imul
test
icebp
pusha
adcl
pushf
cmpsl
xchg
js
push
mov
and
mov
mov
xor
push
test
inc
push
into
xlat
or
out
test
cmp
adc
xchg
cli
icebp
fisttpll
rcrb
in
insl
jg
cmpl
aas
fsubr
aaa
add
into
popf
mov
shll
and
imul
xchg
cli
in
fisubrs
sbb
out
fwait
add
fimuls
das
ljmp
pop
shl
jno
pop
aas
pop
gs
loop
mov
iret
or
or
mov
jne
adc
push
or
push
lods
mov
in
loopne
mov
dec
or
repnz
or
call
xchg
jnp
dec
rcrb
loope
pop
imul
jge
nop
mov
ljmp
push
cmp
lods
dec
dec
mov
push
push
popf
mov
adc
push
mov
or
fwait
jp
aam
mov
sbb
inc
subl
cmpsl
jb
jmp
out
iret
fldt
mov
sub
sarb
jbe
out
repnz
sub
inc
push
roll
cmpsb
cs
sahf
movsb
and
negl
or
cwtl
add
stos
jno
adc
orl
mov
cwtl
aam
popf
sahf
jno
sub
movsb
js
lahf
test
push
jb
leave
xchg
fadds
into
imul
fldt
fstpt
aas
push
xchg
xlat
cld
xor
xlat
loopne
fldenv
and
mov
mov
and
into
sbb
jnp
jge
mov
lods
push
and
and
repnz
shrl
ds
dec
jge
xchg
scas
xchg
cmpsb
aas
and
xchg
jns
imul
stos
mov
insl
cmp
mov
in
adc
notl
adc
aam
inc
loope
dec
jmp
push
add
dec
imul
jge
into
sub
hlt
jne
or
lods
jns
mov
arpl
inc
jmp
cmp
add
sti
enter
adc
mov
iret
fimuls
call
adc
mov
int3
jnp
inc
aad
push
jecxz
dec
fcomps
flds
sub
cmp
mov
cmp
pop
jecxz
lods
inc
insl
imul
mov
clc
push
inc
mov
fstpt
ja
jge
enter
addr16
mov
jne
push
xchg
mov
ss
dec
fwait
adc
loopne
in
push
es
jecxz
aad
pop
xorl
push
frstor
sub
lock
cmp
xchg
mov
in
rcrl
push
scas
mov
adc
lahf
push
pusha
mov
xor
adc
xor
xor
and
cmp
enter
xchg
rol
enter
add
push
call
aas
mov
inc
leave
add
aaa
fldt
call
fwait
mov
add
jg
adc
pop
mov
mov
subl
push
add
dec
mov
push
pop
rcl
sub
adc
ja
loope
icebp
lret
enter
mov
push
movsb
jl
cmp
cmpsb
sbb
or
sub
push
lods
jl
lret
lods
jmp
rcrb
call
int3
loope
lret
or
aaa
mov
add
dec
outsl
popa
fs
imul
add
add
je
jb
arpl
fs
jae
add
add
jb
jne
insb
push
jb
je
arpl
add
jb
jne
insb
inc
insb
insb
outsl
arpl
add
push
imul
jb
add
add
imul
jae
add
push
gs
insb
outsl
jae
dec
gs
add
arpl
inc
jb
popa
je
inc
popa
jo
jne
gs
imul
add
push
popa
je
insb
je
add
dec
inc
dec
jo
outsb
add
add
jae
jb
gs
je
imul
push
js
arpl
gs
add
add
je
inc
imul
jae
add
add
je
inc
add
add
je
jb
gs
gs
outsl
outsb
outsb
arpl
push
je
je
add
add
outsb
add
add
add
add
add
or
mov
pop
add
mov
add
add
add
sbb
or
int3
mov
pop
add
hlt
or
aam
pop
add
mov
add
add
add
xor
or
fsubl
pop
add
mov
pop
add
or
in
mov
pop
add
or
hlt
mov
pop
add
or
cld
mov
pop
add
or
add
pop
add
pop
add
or
or
pop
add
pop
add
mov
add
fs
imul
add
add
je
jb
arpl
fs
jae
add
add
jb
jne
insb
push
jb
je
arpl
add
jb
jne
insb
inc
insb
insb
outsl
arpl
add
push
imul
jb
add
add
imul
jae
add
push
gs
insb
outsl
jae
dec
gs
add
arpl
inc
jb
popa
je
inc
popa
jo
jne
gs
imul
add
push
popa
je
insb
je
add
dec
inc
dec
jo
outsb
add
add
jae
jb
gs
je
imul
push
js
arpl
gs
add
add
je
inc
imul
jae
add
add
je
inc
add
add
je
jb
gs
gs
outsl
outsb
outsb
arpl
push
je
je
add
add
outsb
add
add
add
add
add
pop
add
bound
add
movsb
pop
add
bound
add
bound
add
movsb
pop
add
bound
add
bound
add
movsb
pop
add
bound
add
bound
add
bound
add
bound
add
pop
add
bound
add
bound
add
pop
add
bound
add
bound
add
pop
add
bound
add
push
add
pop
add
push
add
push
add
pop
add
push
add
push
add
arpl
dec
outsl
popa
fs
imul
add
add
je
jb
arpl
fs
jae
add
add
jb
jne
insb
push
jb
je
arpl
add
jb
jne
insb
inc
insb
insb
outsl
arpl
add
push
imul
jb
add
add
imul
jae
add
push
gs
insb
outsl
jae
dec
gs
add
arpl
inc
jb
popa
je
inc
popa
jo
jne
gs
imul
add
push
popa
je
insb
je
add
dec
inc
dec
jo
outsb
add
add
jae
jb
gs
je
imul
push
js
arpl
gs
add
add
je
inc
imul
jae
add
add
je
inc
add
add
je
jb
gs
gs
outsl
outsb
outsb
arpl
push
je
je
add
add
outsb
add
add
add
add
add
push
add
and
add
add
add
fs
add
and
add
fs
add
and
add
fs
add
and
add
and
add
push
add
and
add
push
add
and
add
push
add
and
add
push
add
add
add
push
add
add
add
and
dec
outsl
popa
fs
imul
add
add
je
jb
arpl
fs
jae
add
add
jb
jne
insb
push
jb
je
arpl
add
jb
jne
insb
inc
insb
insb
outsl
arpl
add
push
imul
jb
add
add
imul
jae
add
push
gs
insb
outsl
jae
dec
gs
add
arpl
inc
jb
popa
je
inc
popa
jo
jne
gs
imul
add
push
popa
je
insb
je
add
dec
inc
dec
jo
outsb
add
add
jae
jb
gs
je
imul
push
js
arpl
gs
add
add
je
inc
imul
jae
add
add
je
inc
add
add
je
jb
gs
gs
outsl
outsb
outsb
arpl
push
je
je
add
add
outsb
add
add
add
add
add
add
add
repnz
sbb
add
repnz
es
add
repnz
fdiv
add
xor
add
repnz
cmp
repnz
in
repnz
dec
and
add
repnz
hlt
repnz
push
and
add
repnz
cld
repnz
bound
add
add
outsb
and
add
add
or
add
jns
add
add
add
test
