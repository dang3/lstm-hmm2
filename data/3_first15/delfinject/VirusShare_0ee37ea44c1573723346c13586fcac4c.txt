mov
push
pushl
mov
xor
mov
push
inc
inc
outsl
insl
jo
arpl
int3
jmp
and
or
pop
pop
mov
adc
add
mov
loop
fistpll
inc
movaps
add
and
iret
or
or
dec
lret
in
mov
dec
rcrb
pop
outsb
imul
mov
call
xor
call
into
mov
fstl
or
pop
dec
sub
ss
inc
xor
or
xchg
js
iret
cmovnp
or
outsl
cs
dec
push
jmp
fbstp
or
inc
jecxz
push
cmp
xchg
in
test
pop
mov
jbe
aaa
iret
mov
in
scas
dec
pop
ljmp
sbb
push
cmpsb
or
xor
daa
subl
ret
pop
pop
aaa
xchg
mov
and
rcrb
cmpsl
in
mov
dec
pop
xchg
es
and
mov
in
pop
push
mov
insl
xchg
pop
imul
repnz
rorb
mov
pop
call
call
mov
jp
xor
pop
dec
push
in
push
cmc
shll
cmp
push
jne
jbe
pusha
mov
inc
push
or
sub
pusha
lret
lret
das
lock
addb
push
movsl
push
adc
adc
adc
sahf
push
pop
sahf
outsb
lock
bound
insb
or
mov
out
pop
xor
dec
addr16
dec
outsl
call
jg
orb
inc
dec
mov
sub
inc
mov
add
xor
aaa
jns
jne
add
sub
dec
add
xchg
sti
in
icebp
push
inc
movsl
dec
test
ja
mov
enter
mov
repnz
in
and
add
push
pusha
stos
sarb
xchg
addr16
and
loopne
test
sbb
ds
clc
outsb
fiaddl
xor
inc
push
or
out
inc
xchg
bnd
xchg
cli
fwait
cmpsl
pop
lea
mov
push
loopne
orl
popf
arpl
add
stos
ret
mov
pop
aam
xchg
fnsave
lods
test
inc
std
pop
xchg
mov
mov
stc
imul
fsub
xchg
mov
mov
and
stc
mov
xchg
imul
jns
adc
push
xchg
mov
inc
lods
insb
std
clc
cld
bound
lods
inc
repnz
push
mov
add
stos
fisttps
imulb
test
adc
sub
pop
insb
pop
iret
pop
jns
scas
clc
adc
roll
les
sbb
insl
sbb
inc
loop
idivl
mov
out
cmp
jnp
jge
ret
xchg
das
nop
mov
pop
push
dec
and
sbb
lret
mov
xor
lods
aad
push
inc
dec
repz
xor
push
and
or
les
pop
fwait
aam
flds
mov
sar
aam
imul
in
pmulhw
push
js
rclb
jmp
mov
mov
aas
inc
sahf
sub
and
add
jmp
mov
les
mov
ja
mov
adc
sarl
xchg
into
cmp
fsincos
or
mov
lods
std
test
mulb
in
cld
push
jne
pop
xchg
imul
pop
out
loope
gs
clc
addr16
jge
int3
pop
movl
and
imul
or
xchg
mov
push
xchg
jge
nop
xor
test
push
push
or
pop
fiadds
jge
pop
inc
sbb
mov
addb
and
movsl
jb
push
mov
mov
mov
insl
sbb
outsl
and
sahf
mov
jno
movsl
hlt
jb
mov
sbb
pop
push
or
mov
adc
sti
push
rcrb
push
jae
clc
dec
xchg
sub
mov
mov
jecxz
cmpsl
fsubrp
fwait
lods
sbb
lret
dec
enter
xor
scas
dec
mov
sub
adc
movsb
or
mov
leave
mov
scas
jg
adc
insb
cmp
int3
shll
jl
dec
lcall
mov
aas
push
int
mov
push
sub
jecxz
inc
sub
sbb
pop
pop
dec
push
popf
ja
dec
addr16
push
jnp
imul
push
add
fs
or
and
out
test
fimuls
lock
cltd
scas
push
sub
lea
repnz
mov
push
cld
or
ror
xor
mov
adc
push
xlat
das
cwtl
push
mov
xchg
rcrb
push
shll
les
fidivl
stos
and
dec
sbb
sbb
cmp
adc
adcb
add
sub
out
mov
push
test
push
fsubrs
movsl
lods
sbb
js
cmc
sub
scas
adc
ljmp
jne
pop
pop
inc
xor
xchg
out
notl
jns
popa
mov
or
aad
and
mov
cmp
sbb
pop
idivb
iret
into
fsubl
inc
mov
mov
hlt
mov
fsts
fcomps
add
sub
and
xor
iret
xor
push
aad
mov
xor
ret
test
cs
or
xchg
into
ja
dec
sbb
add
mov
subl
jae
mov
mov
cltd
es
pop
aaa
or
add
in
and
addr16
leave
in
out
inc
fimuls
push
test
push
cwtl
mov
sub
inc
pusha
rclb
cmpsb
mov
dec
jno
lcall
into
add
or
push
ja
cmc
add
jne
pop
jb
fimuls
or
orl
xchg
push
lcall
pushl
mov
lea
and
and
xchg
js
iret
aaa
in
jg
aas
mov
mov
addr16
fidivl
pop
and
mov
scas
mov
aas
loop
stos
and
mov
xor
adc
add
mov
cmp
sbb
push
xchg
das
jbe
xchg
mov
add
cmpsl
mov
sbb
dec
cmp
data16
movsb
pushf
ds
sarl
ficoms
pop
je
negl
xchg
pop
push
xchg
daa
in
out
arpl
cmp
xor
popf
idivb
add
insl
movb
icebp
std
pop
xchg
out
cmp
jns
sbb
lods
sbb
adc
and
imul
xor
test
into
cli
cmp
in
out
mov
cmpsl
out
shll
mov
aaa
aaa
mov
pop
test
lock
mov
mov
adcl
pop
inc
mov
jle
es
cmp
mov
xchg
shrd
out
jp
rorb
or
subb
test
ja
daa
push
mov
jp
fs
inc
push
adc
jno
iret
ficoms
testl
cmpsb
sbb
sbb
mov
jmp
mov
out
fcoms
mov
pop
dec
in
pop
leave
pushf
aam
or
pop
push
sbb
jbe
mov
mov
push
pop
xor
xchg
pop
ljmp
mov
jmp
dec
ds
adc
fwait
lock
push
fsubp
adc
add
call
fcomps
rcrb
mov
lret
sub
into
loop
dec
add
add
lcall
push
sahf
stos
push
pop
jmp
lret
dec
cmpsl
enter
out
push
arpl
mov
repnz
dec
and
int
mov
mov
sti
pushl
mov
and
popf
mov
push
mov
mov
add
jo
sti
popa
and
jge
and
or
jb
mov
fwait
cltd
dec
xchg
fnstenv
mov
adcl
loop
fwait
call
int
subl
push
ss
jmp
data16
fcoms
dec
mov
aam
xor
fs
xor
mov
scas
into
les
pushf
stos
rorl
mov
jbe
aam
sahf
cmp
push
lcall
cmp
mov
loopne
popf
or
inc
sahf
aaa
jno
ret
cmc
les
inc
mov
sub
inc
mov
es
pop
push
mov
jg
stos
in
add
sub
adc
xchg
out
fiaddl
sub
loopne
out
sub
sub
mov
clc
cmpsb
push
push
popf
xchg
mov
pop
jmp
xor
mov
es
xchg
mov
rcr
sub
movsb
xlat
inc
orb
xor
push
or
aam
xchg
mov
in
in
jmp
aam
je
dec
sarb
push
dec
lea
ss
push
cmp
dec
adc
xor
push
add
repnz
rcll
inc
dec
mov
push
decb
mov
in
cltd
mov
mov
orl
dec
add
mov
loopne
adc
sub
fnstsw
pop
rcll
ret
lods
inc
push
insb
incb
push
int3
jl
or
xchg
xor
xor
dec
arpl
pop
cmp
cmpsb
xor
jp
jae
sub
in
test
ret
or
test
push
pushf
mov
leave
es
mov
cmpsl
pop
fistpll
leave
adc
and
add
rorl
dec
iret
idivl
out
mov
sahf
inc
lahf
push
lret
push
dec
or
mov
mov
ret
fisttpl
and
jne
sub
aam
push
push
xor
mov
stos
je
out
inc
roll
jne
cmc
cmp
lea
add
mov
in
je
xor
or
mov
shl
outsl
in
data16
lods
jae
popa
jno
outsl
sub
not
in
and
jne
sub
shrl
aas
mov
popa
mov
mov
mov
ss
adc
jo
daa
loope
jp
xchg
in
das
out
cmpl
das
mov
cmpsl
loopne
mov
outsb
std
jp
addl
fimull
add
ftst
das
outsb
outsb
adc
js
test
pop
fisttpll
cmp
inc
mov
das
sbb
addl
push
orl
adc
sar
cmp
sbb
jae
xchg
mov
lods
jecxz
and
jno
fdivp
mov
jb
adc
jl
repnz
mov
adc
dec
mov
into
in
lcall
xor
or
fcomps
or
jo
and
or
mov
movsl
iret
jb
inc
out
or
mov
mov
jg
jnp
mov
sti
jae
adc
mov
dec
pop
mov
arpl
cmc
outsb
or
push
cmp
cmpsl
jae
lock
stc
shlb
mov
jg
test
push
xchg
sarl
and
in
xchg
inc
inc
ljmp
into
mov
in
xchg
pushf
mov
cmp
idivb
out
jg
ljmp
mov
mov
pop
jne
daa
add
or
movsb
or
push
mov
push
xor
xchg
es
cltd
imul
iret
mov
sahf
in
loopne
test
xor
ficomps
push
or
scas
scas
scas
loop
pop
and
inc
pop
lock
lods
add
sbb
invd
mov
fisubrl
xor
push
xchg
fsubrl
arpl
rcrb
jb
aam
fsubl
xchg
roll
jcxz
insb
fstl
scas
repnz
jp
shlb
dec
pop
mov
js
ficomps
cwtl
je
lret
add
daa
hlt
outsb
mov
pop
pop
scas
push
add
xchg
out
das
mov
adc
mov
roll
mov
push
push
sbb
rep
push
pop
mov
aas
xchg
xchg
jb
sub
mov
outsb
jbe
push
cmp
out
mov
psubb
clc
in
mov
sbb
push
push
loopne
test
mov
cmp
cli
or
das
mov
sahf
sti
and
and
fdiv
mov
xchg
dec
xchg
push
xchg
call
fstpl
mov
iret
pop
and
sub
or
or
inc
jecxz
adc
dec
dec
ss
out
popa
mov
xchg
shlb
cli
fnstenv
mov
sbbb
jae
sub
add
dec
or
cmpsl
push
cmp
mov
call
shlb
call
fnstenv
lret
add
mov
jae
arpl
movsb
popf
test
shll
cmp
push
int
sub
mov
or
adc
ret
fwait
aaa
sbb
mov
or
cmp
or
gs
push
test
sbb
push
inc
sbbb
int
pop
mov
or
call
out
loope
ret
scas
jb
mov
rclb
xor
mov
push
push
lock
sub
cltd
mov
inc
xchg
js
neg
and
ja
fwait
imul
xchg
fcomip
jl
imul
jae
adc
shlb
mov
repz
cmpb
std
leave
pop
pop
jne
cmp
mull
and
xor
scas
pop
add
add
jl
fwait
sub
push
ds
repnz
push
and
xor
movsb
xor
pop
add
ficompl
or
shll
mov
xor
scas
pandn
push
lds
nop
or
test
ret
and
sbb
sti
dec
add
pop
in
fisubl
xchg
push
lock
xor
stos
ror
or
or
push
mov
sub
outsl
push
je
lcall
and
push
push
mov
out
mov
scas
mov
movsl
cmp
ss
inc
lret
sbb
adc
cs
mov
and
and
sub
and
rcpps
push
sahf
push
fld
fidivl
lods
mov
add
cmpsl
jmp
cs
lea
aaa
fidivrs
push
mov
addr16
scas
fimuls
lret
fwait
in
mov
xor
and
inc
dec
pop
in
lds
test
add
push
jns
or
test
push
jb
popf
push
in
fbld
xor
adc
pop
jb
and
pop
sub
lock
xor
push
xchg
inc
insl
cltd
mov
xor
cli
inc
push
jbe
mov
or
icebp
idivb
mov
add
dec
call
and
lods
lock
sbb
cs
xor
cmc
shll
pop
jecxz
add
push
add
inc
pusha
xorb
mov
xor
pusha
mov
test
mov
and
pop
outsb
repz
jb
sub
movsb
cltd
xor
push
jp
aas
jmp
pop
adc
scas
xchg
cs
mov
aas
ds
xchg
dec
xchg
lea
sub
sub
mov
mov
jmp
out
fcomps
or
pop
iret
shr
add
and
inc
inc
cmp
jmp
stos
dec
push
fisubrl
in
repnz
addr16
icebp
out
mov
mov
in
xchg
pop
inc
daa
add
mov
aas
dec
js
les
mov
cli
int
inc
out
in
xor
or
arpl
adc
in
xchg
fwait
cmp
movsb
mov
dec
popf
aaa
fs
bound
xchg
fisubrl
cmpsl
xchg
lcall
std
arpl
sbb
jecxz
mov
jecxz
in
pop
or
xchg
dec
sbb
daa
or
mov
xchg
cld
pop
divl
lret
xchg
mov
add
dec
repnz
test
pop
jge
mov
push
sbb
arpl
icebp
push
std
sub
enter
es
fwait
inc
loop
ds
cmc
lods
push
xchg
or
dec
fimull
aad
xchg
out
xor
mov
fwait
dec
mov
mov
jecxz
add
in
inc
int3
push
sahf
shlb
add
xchg
or
gs
xchg
xor
fbld
push
inc
imul
ds
xchg
push
cmpsb
sub
push
mov
xchg
pop
repz
ljmp
lret
cmc
lock
cli
testb
lea
loopne
outsl
jge
mov
imul
cmp
testl
out
loop
aam
jo
leave
push
or
adc
mov
notl
mov
mov
imul
addr16
out
aas
icebp
sbb
dec
mov
scas
inc
inc
inc
ljmp
mov
dec
jecxz
ret
cmpsb
push
mov
sbb
push
clc
push
mov
mov
mov
sbb
jno
adc
cmpsb
sahf
cmp
jge
pop
sub
mov
popa
cmpsl
imul
daa
xor
out
cld
xchg
push
inc
mov
xchg
sbb
mov
mov
cmp
insb
jl
xor
xor
js
jmp
int3
pop
ror
popf
rep
jbe
mov
or
in
add
or
push
push
neg
dec
xchg
insl
xchg
pop
ljmp
sub
data16
push
cmpsl
sub
mov
adc
sahf
inc
mov
and
movsl
dec
pushl
sbb
mov
mov
les
adc
in
cmc
rclb
sub
inc
sbb
rorl
push
test
cmpsb
iret
pop
adc
stc
lcall
bound
pusha
dec
movsl
or
insb
mov
xchg
add
xchg
inc
scas
inc
lds
adc
data16
clc
sbb
or
cwtl
cmc
push
xchg
in
xor
inc
rolb
add
inc
addr16
xor
cmpsl
enter
push
cmpsb
pop
in
lret
sbb
dec
clc
data16
fucomp
movsl
js
mov
mov
mov
mov
clc
fsubrs
jge
cmp
inc
ljmp
cmp
pop
sub
push
out
imull
mov
jnp
xor
inc
inc
add
or
faddl
test
xchg
ds
add
add
popa
inc
rcrb
xchg
mov
jae
les
lods
clc
xchg
in
sub
test
pushf
scas
mov
ds
pop
clc
cwtl
or
or
jne
out
cmp
mov
cs
jns
cltd
loop
sbb
adc
xor
fstpl
jno
cmp
jno
or
cmpsb
aaa
sub
cmc
addr16
in
rcll
jb
and
sub
cmp
outsl
jge
push
jecxz
mov
pop
jo
sarb
mov
outsl
jg
addr16
mov
test
lret
rcrb
test
pop
gs
xor
fbstp
mov
icebp
dec
push
inc
bsr
inc
loop
fists
cmp
pop
fdivrl
jo
fstp
cmpsb
and
mov
insl
fwait
inc
loop
ss
jl
jle
sbb
sbb
add
adc
out
fwait
jmp
out
scas
adc
movsb
xchg
adc
cmc
out
xor
pop
xor
mov
ds
xor
insl
or
jmp
mov
cmpsb
inc
mov
movsl
aas
adc
lods
scas
inc
rolb
inc
and
adc
int3
cli
pop
pop
pop
xchg
enter
mov
mov
scas
test
sbb
std
repnz
je
jnp
and
cmp
pop
push
add
jmp
jnp
cmp
push
lock
int
jne
mov
mov
call
inc
xchg
add
add
test
cmpsl
cwtl
mov
mov
cmpsl
pop
clc
test
and
mov
popa
xorl
add
cmp
push
add
add
cmp
aaa
and
pop
roll
scas
les
std
out
andb
lds
bound
mov
imul
in
mov
sti
xchg
inc
and
out
and
push
pop
repz
push
in
push
aas
sbb
jae
aad
or
push
jl
pop
hlt
popf
mov
ss
push
sbb
push
inc
jp
pop
or
pop
push
xor
push
dec
lods
test
movsl
inc
insl
or
add
mov
into
fwait
adcl
adc
inc
lock
test
ljmp
cmp
sbb
sti
je
cld
scas
jbe
cmpsb
lods
enter
mov
nop
xlat
mov
jge
loope
cmpsl
enter
jo
xor
inc
int3
arpl
push
push
mov
mov
stos
fs
add
and
cmp
aam
jg
sub
jno
sub
jne
inc
cwtl
cmc
mov
jae
mov
sbb
inc
sti
xor
mov
cltd
mov
push
not
xor
stos
adc
rcrb
mov
sbb
add
stos
lea
adc
mov
repz
push
push
cwtl
inc
test
ljmp
xor
sbb
cmc
lock
and
dec
mov
rorl
nop
mov
pop
inc
fcoml
xchg
sub
cltd
add
inc
mov
fimuls
adc
xchg
mov
sbb
sbb
in
xchg
int
hlt
and
xchg
jp
dec
fisubrs
shl
insl
xchg
int3
push
adc
mov
movsb
fildll
in
push
ret
jae
ret
xchg
inc
iret
hlt
movsl
leave
mov
shrl
and
fimull
and
mov
push
xorl
arpl
mov
jp
push
push
test
push
imulb
pop
into
test
inc
hlt
push
fdivs
in
addr16
rorl
push
mov
repz
fwait
dec
dec
xchg
add
test
or
mov
out
repnz
inc
in
imul
dec
mov
pop
int3
xor
jno
lahf
fsubl
cmp
mov
cmpsb
loop
hlt
cmpsb
dec
aad
mov
xchg
cltd
scas
pusha
ljmp
jge
sub
add
and
shll
test
pusha
or
pop
stos
mov
pop
orb
ja
lcall
test
leave
pop
and
mov
jo,pn
scas
sub
pop
mov
push
sbb
push
pop
insl
mov
je
scas
adc
mov
fisubs
es
fsts
ret
ret
lods
inc
jl
scas
xor
jnp
or
call
clc
mov
mov
test
popf
rorl
sub
mov
mov
mov
push
jns
jl
fstpt
push
jne
dec
push
lret
aad
sbb
outsb
lock
bound
pop
pop
xor
jb
inc
aam
mov
je
push
mov
fwait
pop
outsl
inc
cmpsl
mov
mov
mov
mov
stos
sub
in
pop
lcall
dec
pop
jae,pt
jg
imul
movb
dec
push
aaa
cld
clc
adc
jg
sbb
xor
cmpsb
cmp
sahf
divb
incb
pop
lret
ja
cmp
xor
xchg
mov
cmc
inc
pop
and
mov
and
das
cmp
enter
sbbl
icebp
inc
push
push
dec
fiaddl
lret
jmp
xchg
lret
mov
int
dec
bound
lock
shrl
jo
xor
inc
jne
test
repz
dec
inc
xlat
dec
lods
adc
and
pop
jbe
sub
fldt
sti
mov
and
dec
adcb
mov
unpckhps
mov
mov
or
dec
sub
cmp
sub
xchg
and
call
cmpsl
xchg
mov
cs
mov
pop
int
insb
push
ret
xchg
jp
cmc
push
push
and
adc
inc
sti
ja
inc
call
shlb
orl
cmpsb
stos
cmpb
cmpsl
sahf
shll
mov
xor
dec
lahf
xchg
pop
pop
cmpb
inc
aas
dec
push
out
cmp
mov
dec
mov
xlat
loope
scas
cmpb
lret
pop
adc
mov
loop
pop
arpl
sub
xchg
push
pop
sub
popf
inc
stos
fisttps
int3
mov
movsl
pop
enter
jmp
ror
jnp
mov
int
arpl
dec
mov
push
xchg
xchg
pop
or
aam
push
test
inc
push
adc
std
rorb
ljmp
jno
sub
int3
mov
or
push
pusha
les
out
enter
daa
cld
cmp
fs
adc
jns
mov
pop
inc
popl
outsl
jecxz
sets
jo
add
cmp
icebp
imul
ret
lcall
in
pop
pusha
lea
shll
add
icebp
jg
or
lea
cltd
dec
and
mov
stc
push
xchg
xor
pop
adc
and
cmp
imul
fs
std
mov
loop
aam
mov
xchg
dec
or
xor
mov
iret
imul
sub
xor
push
ja
and
je
cld
faddl
test
sub
and
or
jge
imul
cmp
pop
pop
and
das
jo
jl
dec
test
cmc
ss
loop
mov
or
cmc
and
sbb
pusha
lods
cmp
das
sti
sbb
jg
xor
or
int3
out
jnp
inc
sbb
stc
xchg
mov
dec
mov
sarl
add
or
pop
fcmovnbe
fcomps
insl
xlat
add
addr16
cmp
mov
xchg
or
fstps
pop
push
mov
mov
mov
cltd
insb
icebp
cmp
scas
pushf
add
jnp
or
mov
cmpsl
cmp
push
pop
or
pop
fs
ja
pop
and
fmul
xor
jl
cltd
push
arpl
mov
push
mov
inc
lea
call
jb
std
xor
push
mov
lods
ficoml
pop
mov
jge
xchg
inc
popa
out
mov
push
insb
jbe
mov
inc
std
xor
dec
fdivs
inc
push
and
out
mov
cwtl
addr16
xor
xchg
sbb
lods
lds
mov
jle
lahf
sbb
addr16
lds
mov
adc
mov
nop
jb
and
es
pop
repnz
pop
xchg
pop
dec
mov
inc
daa
lea
mov
aas
push
cmp
inc
jmp
fnsave
mov
pop
mov
dec
cmp
ret
fcmovbe
clc
mov
ficomps
push
dec
mov
punpcklbw
cmpsl
push
xchg
sub
enter
mov
dec
shlb
pop
sarl
sub
mov
mov
in
jno
flds
push
add
lds
jnp
loop
cmp
pop
mov
mov
repnz
jno
jp
sub
cs
push
or
mov
xchg
xor
mov
lret
push
sahf
xchg
loope
pushf
ret
xlat
lcall
ja
jne
jb
enter
xchg
stc
arpl
sbb
lret
push
jl
jmp
in
pop
dec
mov
mov
jnp
ss
shlb
test
mov
dec
jae
fistps
movsb
cmc
ret
cli
add
cmp
fcmovbe
jo
nop
and
out
mov
jmp
movsb
mov
js
insb
adcl
mov
or
xacquire
loop
mov
jb
ds
jne
dec
add
daa
xchg
insb
ja
sub
popa
mov
sbb
push
shl
and
idivb
dec
mov
jl
sti
sbb
loope
pushf
lahf
arpl
pop
lods
cmp
sahf
add
arpl
xchg
leave
jge
popa
sbb
mov
mov
popf
pop
decl
jno
dec
mov
outsb
sub
cltd
xchg
in
inc
enter
pop
adc
and
sbb
add
and
sub
mov
adc
into
and
fs
mov
ja
out
cwtl
xchg
cltd
daa
rorl
xchg
cmp
inc
addr16
fsub
js
ret
xlat
sbb
sahf
in
inc
cs
mov
lods
mov
fs
insl
in
cmovle
mov
push
insl
or
jle
pop
mov
xchg
push
jle
mov
mov
sarl
lea
and
push
inc
push
jecxz
dec
and
jle
xor
inc
jl
iret
aad
sbb
das
pop
mov
les
cmp
push
adc
mov
sbb
rorb
cs
icebp
arpl
mov
enter
in
jae
mov
inc
data16
addr16
roll
or
sub
pop
dec
sub
in
sbb
cmp
xchg
jbe
mov
inc
cltd
pop
pop
repnz
je
fwait
dec
movsb
xchg
push
out
ja
das
xchg
jl
inc
lret
outsb
xchg
stos
cmp
test
push
cmp
aam
mov
mov
push
push
mov
xor
outsl
mov
mov
mov
sub
fcmove
jmp
leave
addb
jo
dec
data16
shl
inc
shlb
call
shrb
and
aas
inc
lock
mov
mov
mov
ds
xchg
xor
push
mov
iret
stc
and
dec
in
push
fildll
ret
js
jae
cmp
repz
lcall
mov
sub
dec
jecxz
xchg
into
push
sbb
jl
fildll
fstps
ljmp
jp
jno
test
adc
lcall
sbb
fcmovbe
add
xchg
add
lahf
fsubl
inc
jmp
mov
push
out
add
sahf
enter
lea
in
outsb
movsb
mov
adc
daa
fidivrl
imul
adc
imul
cmp
inc
xlat
xor
stos
xchg
push
das
movsb
scas
in
and
cmp
shl
loope
enter
lea
jle
push
pop
adc
jge
ficoml
push
inc
xor
and
pop
loopne
sysenter
shrl
add
ds
outsl
sbb
mov
call
test
lea
dec
cs
cli
pop
push
outsl
adc
mov
push
jge
push
nop
pop
mov
or
insb
ret
adc
popa
mov
lcall
jecxz
cs
into
cmpsb
cmp
es
in
nop
xchg
or
push
sbb
pop
mov
jnp
test
subb
add
xchg
nop
sub
hlt
fimull
adc
out
mov
xchg
outsb
cmp
outsl
push
mov
inc
daa
je
cmp
jl
mov
bound
and
and
adc
xchg
push
inc
stos
inc
mov
sbb
xchg
mov
sbb
sarl
gs
popa
data16
mov
inc
cmp
pop
flds
mov
orl
cwtl
xlat
sub
inc
fistpll
cmp
add
push
xchg
mov
pop
cmp
add
neg
popf
mov
cli
lea
xchg
mov
add
dec
jecxz
shll
mov
xchg
mov
hlt
pop
ret
pop
fwait
enter
or
xchg
testl
mov
and
imul
push
fwait
shr
cmp
insb
push
cwtl
sti
xor
xchg
pop
sub
inc
sub
jne
movb
mov
mov
cmp
inc
inc
jne
insb
fbstp
gs
clc
ja
fwait
jl
xchg
mov
subb
adc
lds
nop
out
mov
adc
cld
xor
cmp
mov
or
mov
push
xchg
fisubrl
jmp
or
sub
sbb
out
ja
insl
into
pop
nop
out
in
ret
sbb
pop
xchg
clc
fdivr
pop
out
jbe
push
popf
cltd
adc
push
mov
test
vbroadcastsd
ret
sbb
push
aaa
in
mov
out
ss
inc
mov
fs
div
push
movsl
ljmp
lcall
pop
ret
cmpsl
mov
outsb
cmpsl
add
inc
xor
je
cld
bound
ds
in
lods
scas
ret
mov
and
sbbb
add
cli
xchg
mov
jmp
repnz
sub
xor
sub
cmc
sbb
jg
sar
mov
xor
mov
gs
sbb
sub
gs
dec
or
jae
jo
fldcw
and
loope
mov
fs
mov
push
rcrl
jp
std
lahf
in
jp
push
push
sbb
pop
add
xor
cvtps2pi
addr16
rol
shl
andb
and
mov
lret
sub
jl
sbb
adc
push
pop
out
lahf
in
push
jb
xchg
cs
adc
into
push
mov
sub
inc
push
xor
icebp
adc
mov
fs
xchg
bound
jecxz
sub
adc
lcall
in
cmpsb
cmp
shr
imul
adc
and
pop
fsubl
mov
and
popf
into
cmpsl
dec
mov
xor
pop
insl
pop
aaa
jl
sahf
xorb
xchg
inc
push
mov
pop
push
aam
push
les
imul
out
xchg
pop
dec
xchg
test
push
arpl
add
iret
lahf
sub
push
out
insb
shr
fistps
stos
pusha
icebp
add
shl
inc
pmullw
xchg
ficomps
dec
sbb
into
loope
jb
ds
pop
ljmp
push
jns
inc
and
or
icebp
push
insl
xchg
sub
sbb
sahf
out
scas
ret
jno
outsl
pop
pop
test
aas
mov
popf
mov
cs
inc
inc
xchg
lods
add
fs
push
movsl
jp
mov
add
outsl
cs
xor
les
out
sti
cwtl
fwait
sbb
gs
mov
mov
cld
and
or
xchg
scas
cmp
pop
movsb
cli
ljmp
jns
sbb
push
andl
push
cmp
cmp
sub
jae
mov
xlat
and
and
out
inc
xchg
sbb
jge
jno
mov
ja
push
cwtl
mov
aaa
popa
loop
sub
pop
lods
call
pushf
insl
push
jbe
sti
lcall
dec
and
cld
mov
lahf
cltd
push
xlat
dec
jae
jnp
lods
repnz
jo
adc
out
cmpsl
les
push
and
jl
scas
xchg
or
cmp
icebp
sbb
push
inc
lret
call
mov
iret
leave
or
lock
out
add
push
lcall
xchg
std
mov
pop
imul
outsl
pop
inc
popa
or
add
inc
sub
scas
lock
popa
mov
xchg
add
out
test
add
call
cmp
mov
jns
addr16
int3
pop
cmpl
cmp
mov
mov
dec
or
cmp
or
andl
push
fisubrs
jns
pop
xchg
fldenv
imul
cmp
ja
xchg
rcll
pop
sub
mov
dec
enter
stos
iret
call
daa
inc
shlb
lcall
fldt
fldt
jle
and
outsb
mov
xchg
data16
sub
push
mov
mov
cli
jnp
fmuls
outsb
popf
add
adc
pop
sbb
ret
orl
jae
call
add
mov
jno
inc
sti
dec
test
or
fcom
out
in
fistpl
mov
mov
xchg
imul
sub
rorl
pop
mov
fdiv
dec
cmp
mov
xchg
sti
sbbb
sbb
enter
lock
es
pop
js
sbb
outsb
adc
stc
dec
dec
jne
sti
nop
mov
mov
inc
sbb
jnp
iret
or
push
out
xchg
jb
pushf
ret
xor
popa
cwtl
test
jmp
jno
clc
jns
add
pop
aad
in
cwtl
mov
mov
jnp
addr16
lahf
cli
imul
inc
pushf
call
loop
notl
mov
loop
mov
cmp
push
movsl
xchg
xor
push
imul
je
imul
ss
dec
into
test
mov
add
mov
pop
mov
mov
repnz
test
sbb
adc
ljmp
mov
mov
mov
push
sar
dec
xchg
push
and
call
mov
outsb
add
or
jle
rcrb
add
daa
xor
dec
mov
shlb
xlat
hlt
shll
sbb
daa
cld
mov
daa
out
pushf
push
insb
lods
popa
pop
jb
fbld
insb
cmp
sbb
arpl
mov
cmp
push
jecxz
popf
pusha
pop
data16
or
pop
jle
mov
dec
xor
sub
popf
scas
sbb
insb
push
add
mov
lods
and
int
in
push
insl
mov
sub
pop
lds
gs
mov
cld
xlat
pop
out
xchg
stc
or
xchg
movsl
dec
nop
dec
xchg
sarb
inc
mov
lods
cld
cmp
adc
sub
test
cmp
mov
sub
rclb
scas
jne
cmp
jb
cmp
fnstcw
adc
adc
cmc
adcb
loopne
enter
jae
inc
and
sbb
jl
push
in
pop
ljmp
xor
adc
stc
dec
cmp
jl
test
jmp
data16
sbb
pop
xchg
xor
in
sbb
inc
and
add
cmp
les
cld
notb
inc
xor
jnp
movsb
test
pop
out
rolb
jmp
mov
add
fcmovne
ficompl
xor
adc
inc
or
in
xor
insl
and
lss
pushf
pop
push
pusha
sub
xor
lcall
sub
pop
or
icebp
call
mov
lret
insl
sbb
enter
lock
xor
mov
add
jge
mov
pushf
mov
lea
mov
jae
es
push
add
je
stos
pop
jecxz
mov
adc
ljmp
fistpll
mov
mov
sbb
loopne
jno
in
adc
stc
cmpsl
xor
ds
mov
fs
push
into
xor
out
sbb
nop
mov
aad
push
adc
sbb
repnz
push
sbb
or
and
ja
push
mov
sbb
mov
mov
les
xor
push
push
pop
mov
int3
push
addl
or
stc
ja
fbld
mov
fwait
subl
dec
jecxz
jp
loop
aaa
push
cmpsl
pop
bound
mov
inc
add
fisubrs
icebp
insb
popf
loopne
jmp
xor
or
repnz
xchg
jnp
setg
lret
or
jnp
outsl
cli
outsb
fstp
mov
jle
adc
mov
pop
rcl
mov
push
fsubs
sbb
movsb
repz
clc
adc
push
int
imul
dec
lock
insb
push
cmpsl
sub
pop
cwtl
in
mov
sbb
outsl
dec
movsl
cmp
fisttpll
mov
lock
enter
xor
int
push
int
jb
jmp
and
je
std
icebp
rorb
mov
aaa
xor
pop
jbe
aas
ret
fwait
shrl
sub
mov
pop
inc
lock
jge
inc
xor
jmp
imul
imul
gs
addr16
sti
sbb
into
mov
stc
pop
ja
push
cli
nop
fimuls
jmp
push
pop
iret
or
cwtl
fs
int
pushl
iret
mov
fstpt
cmp
out
daa
push
lods
push
and
lods
sbb
jnp
lcall
negb
cld
jno
sahf
xchg
dec
nop
movsb
dec
mov
xor
addr16
ds
gs
sbb
or
push
mov
rorl
mov
dec
jns
clc
fists
repnz
cmpsb
add
bound
lea
mov
testl
in
mov
shr
mov
cli
and
add
nop
nop
xor
push
mov
fdivrl
cli
push
popa
dec
xor
int3
enter
ja
test
nop
inc
pop
cmpsl
cmpsb
mov
sbb
lcall
lea
inc
sbb
pop
bound
add
hlt
and
sub
sti
mov
dec
xchg
jle
out
cmp
cmpsb
xchg
mov
pusha
jae
cmpsb
into
mov
ljmp
adc
mov
int3
cwtl
xchg
jo
sti
sub
lds
mov
or
das
shlb
sbb
add
loop
aaa
adc
inc
mov
dec
xor
fstps
dec
aad
shr
xlat
dec
cmp
jle
fsubp
or
in
insl
xor
add
dec
mov
inc
add
outsb
js
pop
mov
rcrl
inc
out
jo
lret
push
sub
lret
jl
fisttps
jnp
pop
jae
int3
pop
push
cmp
inc
xlat
je
lods
scas
mov
daa
in
jg
mov
push
jecxz
mov
ljmp
jae
dec
cmp
aaa
add
dec
aad
addl
fwait
mov
dec
inc
mov
sbb
mov
push
leave
xchg
sbb
scas
fwait
push
jns
lahf
push
mov
xchg
cmc
push
push
push
add
mov
mov
out
aam
mov
ljmp
cmp
subb
andb
cld
mov
xor
iret
mov
pop
out
lret
sbb
mov
adc
xchg
filds
lret
push
cmpsl
dec
or
loope
or
scas
and
mov
lods
cltd
int
cmp
mov
jne
dec
jb
or
dec
cwtl
js
dec
mov
push
fsubr
inc
mov
add
inc
adc
clc
outsl
add
stos
or
outsl
inc
add
mov
jno
sbb
mov
mov
cwtl
jbe
xor
jnp
scas
insl
dec
cltd
and
mov
ljmp
in
js
sub
aas
adc
cmc
ljmp
sbb
insb
pop
sarl
lds
sub
add
aam
aad
orl
setno
and
stos
lret
lahf
sbb
js
adc
jmp
pop
and
movsl
xor
adc
mov
cmp
push
inc
inc
push
xchg
cmp
pop
mov
jno
sbb
jmp
in
fxtract
mov
es
jo
xor
mulb
jecxz
out
mov
enter
daa
test
ja
mov
fistpll
mov
jecxz
cwtl
pop
mov
inc
xchg
push
sbb
leave
ljmp
popa
aam
mov
scas
cld
jle
fiadds
mov
dec
cmp
je
daa
insb
fildll
adc
notl
je
and
jnp
shll
fst
loop
inc
cs
pop
xchg
sbb
and
iret
or
pop
dec
cmpsb
add
add
mov
out
cmp
add
sbb
in
icebp
or
out
mov
dec
inc
pop
insb
push
or
jg
icebp
push
nop
and
rcrb
push
out
aad
hlt
add
insl
pop
pop
rclb
inc
add
or
xchg
shlb
shr
or
insb
in
ss
or
or
leave
les
inc
sbb
xchg
in
pop
decb
or
mov
mov
dec
out
aaa
sub
sahf
scas
fcomps
and
popf
clc
jmp
dec
sub
insb
xchg
xor
shlb
pop
mov
in
mov
rolb
inc
push
rorl
ss
cmc
push
out
cmc
pop
sbb
pop
cmp
jge
negb
mov
xchg
xlat
and
int3
rcl
rorl
or
jmp
fcmovnu
pop
push
lea
test
into
daa
movsl
in
movsb
ds
cmc
movsb
mov
push
mov
cs
repnz
xorb
sbb
xchg
jle,pt
rorl
pop
fadds
xor
sahf
aas
pop
movsb
ret
jno
xchg
push
in
mov
jnp
es
arpl
js
mov
jns
popa
dec
ss
mov
mov
cmp
sub
push
sbbb
mov
ss
sbb
je
sarl
adc
loop
cmp
cltd
inc
xor
lods
and
xchg
jg
mov
jp
lods
push
movsl
jecxz
jns
iret
jbe
inc
outsl
ljmp
out
xchg
xor
and
repz
call
lret
gs
and
test
rolb
ja
scas
dec
and
and
fwait
mov
mov
mov
xchg
sbb
sbb
and
test
adc
jg
mov
out
notb
loope
and
cltd
cmc
and
push
movsb
lds
rcrl
fisttps
xor
mov
lods
add
icebp
add
aad
push
popf
fimull
mov
lds
and
in
clc
xchg
mov
fs
dec
push
cwtl
rcll
pop
or
fildll
fs
and
ja
aas
js
in
inc
adc
xor
lret
lods
push
test
sub
nop
xor
roll
add
push
ljmp
adc
loopne
mov
xor
xor
adc
dec
add
pop
or
jno
cmpsl
ja
mov
scas
push
mov
popf
lahf
jp
repnz
sbb
jno
mov
out
add
lds
mov
dec
sub
mov
mov
mov
pop
pop
sbb
das
jmp
popf
add
dec
std
nop
sahf
lahf
sub
sbb
cmp
out
mov
sbb
xor
lock
cmpsb
lahf
aas
add
popf
adc
mov
outsb
and
dec
cmp
mov
orl
andb
or
jae
dec
lods
jo
mov
mov
lock
cs
cmp
mov
test
pop
mov
mov
dec
nop
xor
mov
and
hlt
fstpt
nop
mov
movsl
jg
add
push
aam
adcl
cltd
xchg
stos
inc
fstl
dec
sub
mov
xchg
push
lret
mov
icebp
or
mov
arpl
push
xlat
add
lret
mov
cmc
sbb
or
lock
mov
and
xor
das
and
lcall
inc
push
repnz
dec
xchg
and
popf
sbb
ss
jg
ss
fwait
je
into
sbb
xchg
scas
jo
fwait
pop
std
dec
cld
mov
fcmovbe
cmpsl
push
cmc
jno
mov
pop
dec
fwait
or
ja
into
popa
aam
xchg
mov
outsb
xor
cmp
and
mov
push
push
popl
test
dec
sub
mov
cs
cltd
mov
mov
pop
dec
fistps
cmpsb
sub
cmp
pop
lea
or
stos
sbb
xorl
cmp
jg
ljmp
sbb
inc
adc
fisttpll
das
adc
icebp
std
cs
xor
add
data16
test
fs
imul
and
btrl
mov
push
addl
fisttpl
out
outsb
mov
negl
or
mov
or
inc
push
push
ret
push
xchg
mov
fsts
inc
adc
cmp
pop
jnp
std
aad
push
xlat
into
pop
fidivrl
bound
arpl
xchg
lods
es
cld
pop
cld
mov
inc
dec
mov
das
xchg
sub
fwait
mov
movsb
jno
pop
xor
sbbb
dec
pop
add
test
mov
les
repnz
xchg
cmpsl
rorl
and
mov
push
push
lahf
adc
cmp
ss
fs
xor
ja
bound
sub
jbe
clc
cmc
mov
fildl
pop
push
rcr
fucomi
pop
clc
pop
push
adc
sub
push
dec
jmp
adcb
pop
and
sub
daa
and
fdivrl
leave
clc
jmp
pushl
sti
jae
xchg
scas
xorb
pop
stos
repnz
imul
in
dec
dec
or
nop
daa
fcompl
inc
pop
daa
add
push
mov
shrl
mov
sub
xchg
or
and
xchg
imulb
sbb
inc
sbb
inc
inc
push
aam
push
inc
inc
adc
inc
push
cmp
sti
mov
outsb
psllw
xlat
lea
lret
inc
bound
push
inc
call
xor
iret
mov
leave
shl
lock
pop
adc
mov
inc
inc
add
xor
enter
dec
fiadds
jae
jno
or
sahf
or
out
rolb
popa
lret
push
lahf
outsl
sbb
fbstp
and
add
and
outsb
bound
sub
addl
dec
pop
ljmp
in
lods
mov
sbb
and
xor
stos
push
aad
call
xchg
jno
adc
sbb
mov
mov
cmp
loopne
in
std
arpl
pop
pop
rclb
pop
mov
jae
dec
add
adc
cmpsb
cld
mov
jae
ss
cmpsb
pop
or
push
shll
les
ss
sub
inc
outsb
test
mov
lahf
insl
mov
adc
jecxz
mov
pop
push
and
imul
xor
fistpl
mov
in
cltd
inc
stos
insb
or
mov
frstor
mov
and
push
pop
xchg
jp
inc
cmp
popf
mov
dec
pop
arpl
leave
pop
das
mov
push
xlat
mov
mov
adc
mov
xor
cld
push
inc
sahf
push
out
mov
insl
inc
jge
jl
mov
jns
shll
lock
mov
nop
out
ljmp
stos
stc
jge
into
rolb
loope
adc
loope
mov
loop
sbb
fildl
stos
out
jl
aad
xorb
add
sbb
and
cmp
push
push
outsl
shrl
mov
pusha
cmpsl
rcrl
mov
rcrb
out
xchg
xchg
notb
jge
shr
in
xchg
insb
adcl
movsb
dec
icebp
pusha
add
dec
test
dec
fcoms
dec
repz
lret
and
lods
stos
jnp
jecxz
jb
adcb
arpl
je
xorb
das
lahf
clc
inc
mov
inc
mov
jg
fwait
iret
xor
mov
or
and
sbb
pop
dec
mov
xchg
sbb
pop
adcl
out
fsubl
inc
dec
roll
sbb
cmp
inc
mov
mov
dec
loope
lock
xchg
in
lret
lcall
sbb
jmp
test
jae
gs
fnstcw
sbb
pop
dec
inc
cmp
out
mov
sbb
iret
lcall
loop
int3
rcll
pop
push
lods
inc
push
inc
out
loope
dec
loopne
pusha
call
int3
dec
lret
xchg
jo
xor
mov
pop
dec
into
out
stos
clc
push
call
out
les
insl
popf
lcall
pop
shll
cmp
shrl
les
ret
stos
adc
pop
lods
mov
stos
imul
repz
lods
nop
mov
loop
fisttpl
pop
push
pop
cmpsl
xchg
dec
cmc
loope
lds
nop
mov
pop
sub
mov
xchg
stos
movsl
andl
xchg
dec
dec
repz
dec
and
ljmp
sar
aam
aam
mov
shr
mov
pusha
adc
mov
xorb
jp
es
out
mov
add
pop
and
cwtl
mov
inc
inc
push
aaa
push
test
mov
out
out
imul
or
mov
push
jecxz
int3
testl
mov
test
data16
sub
push
and
sbb
xchg
js
inc
xor
xchg
sub
or
in
js
xchg
andl
xor
push
and
xchg
dec
push
cmp
mov
js
cld
int
stos
jbe
daa
pusha
ja
das
jae
jns
sub
and
add
jg
nop
and
fdivrl
xor
lods
cmp
mov
add
cmp
movsl
loop
andl
ret
mov
pop
aaa
xor
adc
xchg
bound
popa
cmpsb
dec
inc
jnp
mov
push
lods
shlb
fucom
or
xor
outsl
cld
aam
repz
mov
mov
cmpb
cmc
popf
pop
les
pop
xchg
cmp
pop
xor
cli
test
lret
jns
jbe
scas
mov
repnz
or
pop
fistps
loope
xor
fistps
movb
imul
mov
lret
in
xchg
xchg
clc
xchg
in
pop
sub
test
mov
inc
pop
lcall
xlat
movsl
mov
mov
add
das
and
into
jg
xchg
add
pop
cmp
in
lock
inc
mov
hlt
mov
lret
sbb
mov
sub
jns
movsl
xor
pop
cmp
aaa
push
aad
sbbl
sti
imul
adc
in
xchg
test
adc
clc
mov
inc
rcll
std
mov
clc
roll
cltd
cli
jno
movsb
fisubrl
xor
into
fisubrl
pop
jns
es
mov
adc
je
adc
inc
jl
xor
sbb
push
sub
jmp
or
sbb
adc
or
lret
xor
lods
or
int3
push
daa
inc
push
push
arpl
and
cmp
insl
push
pop
xchg
into
and
mov
loope
cmc
mov
into
out
test
imulb
mov
mov
add
adc
sub
or
mov
ds
push
sub
cmp
adc
outsl
es
test
adc
jg
pop
data16
pop
loop
out
fwait
pusha
mov
popa
test
loop
pop
sbb
mov
mov
lret
les
lods
in
jb
cmc
mov
inc
push
rorl
cmp
mov
xlat
cmpsl
gs
int3
shll
lea
cmpsl
sbb
sbbl
sub
xchg
lods
xchg
dec
xchg
movl
push
or
jnp
cs
or
jo
mov
scas
lods
xlat
mov
mov
outsb
push
pop
shll
shlb
movsb
out
test
sub
jl
aas
cltd
stc
or
idivb
pop
add
in
cmp
jo
jae
jg
popa
add
sbb
jg
out
fidivl
mov
pop
rcl
push
and
dec
xchg
xor
divb
cmp
popf
sub
cmp
jne
in
cs
lahf
adc
mov
jmp
cwtl
in
fisubrl
insb
icebp
add
inc
mov
push
inc
mov
xchg
loop
push
sbb
loopne
add
arpl
pusha
add
and
in
call
mov
shr
aad
push
mov
mov
mov
je
out
cli
mov
loopne
sahf
sahf
mov
out
sub
std
mov
inc
xor
ret
out
iret
testl
std
out
mov
and
fnstcw
and
adc
icebp
or
xor
rclb
ss
inc
std
dec
negl
ljmp
shrb
lahf
inc
enter
repnz
xchg
sbb
cmp
pop
fcoms
sbb
add
test
ret
jle
cltd
push
sti
lods
pop
pusha
jp
mov
or
push
lock
dec
push
adc
adc
pop
loop
mov
cmpl
pop
nop
cmc
ret
jo
lahf
and
cmpsb
or
out
dec
ja
fisubrl
popf
jge
sub
xchg
outsl
mov
js
lods
mov
jbe
cmp
xchg
lods
mov
incl
scas
lds
mov
bound
adc
sub
mov
test
sbb
arpl
fwait
jmp
pop
icebp
outsb
adc
cli
xorb
lds
icebp
or
daa
nop
sbb
call
aad
or
imul
pop
xor
push
xor
bound
inc
mov
and
pop
cmp
fwait
movsl
fistpl
daa
out
pushf
icebp
negl
adc
clc
stos
jmp
repnz
inc
arpl
dec
mov
jle
scas
fisttpl
in
cld
mov
pushf
enter
enter
mov
jbe
lock
sbb
xor
inc
sbb
cli
mov
popa
shll
hlt
and
cwtl
xchg
push
push
adc
adc
sbb
cmp
push
sub
inc
in
xor
adc
imul
mov
sarb
jne
fs
or
and
mov
ret
push
and
popa
std
jne
pop
loopne
push
mov
push
push
pop
addr16
mov
cld
sub
adc
ret
pop
hlt
int
loopne
jl
add
mov
arpl
sbb
dec
and
fwait
inc
iret
lock
push
mov
mov
bound
sub
mov
loopne
call
scas
cmp
mov
fimull
inc
jne
pop
jbe
inc
cmp
loop
lods
test
mov
stc
test
fidivrs
jo
dec
arpl
dec
sub
inc
push
orb
cltd
les
repz
jnp
call
cli
insl
cli
push
orb
and
fcompl
xchg
cli
fucom
bound
xor
mov
icebp
in
xchg
sub
jmp
adc
or
or
pusha
test
sbb
mov
adc
mov
mov
sti
jae
sbb
push
xchg
dec
xchg
pop
and
sub
lret
cltd
pop
mov
sub
pop
mov
ret
push
adc
mov
adcb
loopne
std
jb
push
std
adc
lods
pushf
adc
mov
js
int3
shlb
pop
sarl
dec
loopne
jae
jmp
movsl
repz
sub
std
stos
repnz
out
or
inc
adc
add
scas
jmp
jb
push
icebp
jle
aad
ret
loope
pop
push
adc
imul
push
cmp
inc
push
fldl
push
daa
jno
push
add
jno
out
test
pop
pop
xorl
or
cmpb
cs
push
add
push
loopne
push
mov
and
shll
jnp
lcall
clc
or
ss
call
mov
cmp
dec
mov
fldenv
cltd
xor
jb
mov
xchg
push
ss
and
sbb
scas
add
cmpsb
jl
loope
stos
pop
test
aaa
inc
push
jmp
cld
cmp
fiadds
adc
sub
mov
mov
jmp
xor
mov
mov
movsb
bound
inc
pop
jp
add
mov
mov
mov
or
add
mov
out
adc
int3
das
test
inc
push
add
pop
jl
xlat
cmp
add
hlt
push
inc
jnp
nop
leave
mov
hlt
stc
sub
add
or
fists
pop
push
xor
dec
int
mov
xchg
test
ficoms
ljmp
adc
sbb
bound
int
es
push
rcll
out
fadd
test
sti
or
mov
imull
cmp
inc
cmp
mov
mov
push
pop
in
sarl
push
push
lcall
add
loop
mov
loop
adc
movsb
xchg
sahf
call
adc
lea
je
iret
jnp
mov
adc
cmp
lahf
push
or
aam
fadds
jne,pt
mov
cmpsb
pop
ljmp
popa
dec
add
std
jnp
xchg
int3
test
inc
jbe
dec
stos
lret
sar
cmpsb
jecxz
dec
add
mov
ss
imul
loopne
mov
stos
cmp
out
out
test
sahf
nop
xchg
sub
shll
outsl
jnp
adc
jg
fmul
fidivrs
ficoml
add
lcall
mov
mov
pop
das
jno
out
mov
test
mov
mov
mov
ror
xchg
mov
je
xlat
nop
xchg
fldt
sub
stc
lret
cmc
and
xor
push
in
dec
addl
popa
jns
nop
mov
jae
je
notb
xchg
mov
jb
fbstp
inc
orl
lods
mov
pop
ljmp
cmp
and
mov
into
or
adc
pop
inc
iret
mov
test
mov
add
xlat
jno
lods
pop
and
dec
shll
mov
mov
repz
cltd
dec
ret
or
inc
or
popw
sar
pop
xor
cmp
iret
xchg
jne
les
and
mov
mov
test
insb
lret
inc
clc
outsb
rcll
rcrl
lods
add
aas
push
push
xor
loopne
pop
mov
add
xchg
je
or
jecxz
push
imul
inc
or
lock
rcl
inc
fisttpll
imul
cltd
fmulp
out
loope
loope
cmp
sub
aam
jo
cmpsl
and
test
icebp
fwait
cmpsl
sub
inc
adc
mov
xor
sbb
jns
sahf
sub
std
xchg
dec
arpl
or
mov
push
loope
and
js
pop
add
push
ljmp
fildll
pushf
jmp
xchg
ret
pop
jb
or
xchg
mov
cltd
sbb
scas
and
es
or
stc
xchg
cld
dec
pop
xlat
int
nop
push
ljmp
cli
rep
fisubrl
push
cs
aam
xor
xchg
fmull
nop
stos
or
cmpsl
and
add
add
inc
fnstsw
mov
push
into
sub
lds
ss
pusha
mov
mov
mov
cwtl
mov
lods
xchg
jle
cmp
shll
sarl
frstor
mov
scas
and
hlt
lahf
and
dec
das
fildl
push
jmp
push
pushf
je
adc
add
addl
shr
inc
mov
mov
push
jns
pop
into
xor
mov
leave
mov
adc
sub
push
sub
test
cld
and
rolb
roll
jl
jp
insl
call
sub
lret
xchg
jmp
dec
sbb
push
push
push
jae
sub
pushf
test
push
push
inc
inc
pop
insb
add
rcl
ret
mov
and
jnp
xchg
andb
cld
out
xchg
dec
mov
adc
push
incb
or
sti
out
js
sub
add
outsl
cmp
out
loope
mov
popf
dec
push
sub
in
pop
ret
jg
hlt
andl
sub
mov
mov
dec
cmc
inc
pop
xlat
pop
in
shll
lret
mov
test
aas
xor
pop
and
aad
xchg
rcl
std
inc
hlt
mov
dec
mov
cmpsb
cmp
cld
inc
xor
aam
pop
jbe
jo
jp
pushf
ret
nop
push
enter
adc
jl
gs
fsubr
insl
shl
cmpl
imull
cli
popa
lret
cmp
outsb
and
jno
imul
and
mov
push
mov
outsl
adc
mov
xchg
sub
cmc
dec
cmp
add
jg
add
repz
sub
sarl
repnz
in
or
int
xchg
fsubrs
push
nop
loop
test
cmp
in
lcall
add
add
shlb
dec
cmp
mov
stos
xchg
mov
decb
lea
hlt
xor
popa
test
adc
mov
adc
mov
push
mov
inc
mov
add
shlb
ret
outsb
dec
gs
stos
push
scas
push
inc
out
cmp
inc
xor
adcl
stos
bnd
pop
adc
fdivr
cmp
adc
sti
rcrl
arpl
std
pop
dec
xchg
icebp
dec
add
outsl
scas
mov
sbb
shlb
ret
arpl
dec
iret
andl
pop
xchg
adc
lock
inc
cltd
ja
mov
pushf
mov
sarl
popf
jp
inc
cmc
scas
and
neg
mov
imul
lock
popf
xchg
xlat
js
and
add
stos
mov
roll
dec
out
int3
addl
mov
lock
adc
jp
adc
mov
imul
push
mov
clc
xor
xchg
pop
mov
cld
mov
dec
out
mov
orl
loopne
int3
icebp
lret
or
popa
xchg
sbb
lock
mov
push
mov
repnz
std
divb
test
enter
mov
inc
bound
idivb
xchg
idiv
inc
fs
sbb
pop
stos
jp
fsts
or
pop
mov
add
pusha
push
iret
notl
pop
push
repz
or
outsl
mov
inc
mov
dec
sbb
mov
and
jmp
xor
xor
xor
pop
lcall
in
and
movsb
pop
mov
jecxz
out
stc
imul
push
jo
dec
in
xchg
pop
lahf
xchg
xor
fmul
sti
adc
in
nop
sub
lods
pusha
hlt
dec
sub
pop
imul
mov
mov
adcl
or
add
das
jbe
sbb
xchg
shll
xchg
cli
push
call
lea
mov
cltd
or
lock
mov
push
cltd
add
loope
mov
or
jne
vpmaxub
mov
and
fnstenv
push
and
loopne
loop
daa
mov
lcall
push
outsl
pop
cli
test
pop
xlat
out
xor
mov
addb
push
mov
clc
mov
test
push
mov
test
hlt
inc
push
loope
scas
into
xchg
imul
inc
pushf
enter
ds
aaa
mov
mov
loop
and
push
test
mov
rcrl
in
imul
les
iret
push
sub
or
fwait
xor
mov
mov
mov
outsb
in
and
jbe
sub
sub
popa
lret
sub
jae
jae
mov
mov
loopne
sbb
addr16
mov
dec
cmp
mov
test
jno
fwait
les
jg
and
jb
cmp
sti
cmc
imull
lret
inc
push
cmpl
divb
ds
cmp
aaa
jnp
inc
push
cmp
lcall
in
fistl
push
cltd
sub
inc
jecxz
ret
ret
mov
push
pop
and
pop
and
xor
out
lods
je
mov
mov
sahf
ss
int3
mov
loopne
pushf
cltd
sti
es
mov
cmp
pop
sub
jno
pop
in
xchg
fs
jne
cmpsl
mov
sbb
jb
lret
xchg
push
cmp
daa
xchg
cmp
test
jmp
leave
push
xchg
imul
lret
hlt
mov
out
pop
push
lahf
adc
decb
pusha
cltd
cmp
or
cmp
enter
nop
into
sbb
sub
leave
addr16
int
xor
sub
cmc
arpl
mov
adc
push
inc
movsl
test
xor
sti
or
cmc
test
jmp
add
mov
mov
mov
xchg
outsb
imul
mov
pop
out
jmp
pop
jle
pushf
iret
xor
cltd
jae
in
push
push
xchg
push
xor
push
pop
testb
or
rorl
mov
fidivs
les
gs
push
jmp
aad
adc
fst
enter
mov
in
inc
adc
not
add
inc
jl
fstps
or
mov
aam
cmp
sbb
cmp
or
cmp
cmp
sti
sti
mov
ds
dec
inc
jo
loop
test
mov
cld
or
dec
push
sbb
xchg
inc
iret
mov
push
mov
test
dec
mov
loope
and
jmp
fistps
sti
sub
lret
lret
sbb
adc
push
out
inc
lods
cmpsw
mov
mov
movsl
and
cmp
xchg
jae
push
gs
ret
repz
sarb
test
pop
xchg
into
dec
je
std
lds
movsl
out
outsl
sbb
xchg
out
leave
stos
jmp
xor
adc
popf
lret
fmuls
xor
jl
ja
xor
sub
push
dec
inc
jno
arpl
enter
dec
and
sbb
outsb
or
pop
inc
push
gs
cmp
int3
outsb
dec
jo
mov
mov
sbb
lods
repnz
xchg
insb
sbb
scas
fists
out
dec
add
lret
cs
movsb
fbld
push
mov
and
mov
nop
mov
fdivrl
popf
sbb
sbb
xor
int3
mov
add
inc
lahf
push
fildl
mov
imul
fwait
dec
movb
sbb
dec
jns
push
or
pop
fimuls
mov
iret
xchg
mov
sub
std
xchg
adc
enter
dec
shl
sbb
icebp
dec
push
and
jmp
in
push
mov
or
dec
ror
clc
gs
inc
mov
jnp
push
mov
and
adc
jg
and
outsb
mov
mov
loop
daa
js
pop
xchg
mov
enter
push
cs
inc
xor
fsub
mov
mov
mov
jno
add
dec
fidivs
pop
xor
cmp
idivb
andb
adc
repnz
movsb
xor
add
les
imul
in
mov
mov
sahf
shl
popa
sti
rcll
mov
call
sti
popa
push
pop
cmp
push
scas
stos
jns
xchg
xchg
jge
out
jl
jb
and
out
pop
push
pop
subl
mov
ss
rcrb
lahf
mov
imul
mov
test
dec
test
push
movsl
mov
into
into
mov
mov
cli
mov
push
out
and
lret
jns
push
cli
fisubrl
loopne
mov
fs
arpl
lret
push
jns
lods
sbb
mov
fdivrl
pop
mov
xchg
fyl2xp1
cmp
testb
pushf
mov
push
andb
pop
push
cmc
aas
or
xor
addr16
cli
jmp
jmp
jl
mov
cmp
rol
addr16
hlt
adc
mov
int3
sub
xor
mov
cmp
pop
bound
adc
and
xor
or
adc
loop
fwait
jae
sbb
lock
repz
or
aad
daa
push
xchg
fstpl
xchg
leave
fdivrl
loopne
lds
pop
push
out
das
add
cmp
ss
mov
sub
rcrl
test
ss
push
jp
leave
pop
sub
sti
cld
es
ret
inc
adc
and
loopne
and
sahf
sar
ficoml
dec
popf
ret
fwait
adc
loopne
iret
hlt
dec
and
leave
mov
add
jne
daa
mov
cltd
sbb
mov
testb
mov
out
gs
mov
out
inc
adc
xor
cmpsl
inc
push
inc
add
mov
lahf
icebp
push
mov
std
cmp
dec
leave
jle
jbe
iret
jo
sub
mov
pop
nop
or
sub
mov
cltd
out
jb
ja
out
adc
lea
jnp
rclb
cli
pop
mov
test
test
enter
jb
das
leave
add
mov
out
cmp
aad
sti
incb
mov
js
push
mov
fsubs
shrb
fsubrl
jp
hlt
pusha
or
dec
cmp
mov
in
rol
hlt
fs
int
test
das
mov
scas
pop
dec
jb
movsl
arpl
loopne
sub
repnz
movsl
add
ret
sbb
mov
and
xor
scas
pushl
dec
ret
dec
inc
sbb
les
jp
xchg
jae
xor
movsl
inc
pushf
adc
movsb
push
iret
js
ror
aaa
in
sbb
xchg
push
add
inc
test
push
xor
cmp
push
cmpsb
fildl
or
stc
mov
sbb
inc
pop
outsb
fwait
and
add
and
test
jp
pop
mov
mov
test
mov
lea
dec
sbb
aaa
sub
inc
sbb
cmpb
sti
pusha
movsb
jns
sarb
pop
lea
pop
jmp
mov
pop
movsl
xor
jne
je
add
inc
mov
in
mov
int
repnz
jp
rcl
cmpsb
fcomp
and
fsubl
jne
dec
xor
rcll
outsl
outsl
adc
out
fsubrs
pop
mov
sub
or
stos
dec
cmp
sbb
push
ss
fwait
pusha
lock
sbb
lret
mov
xor
lret
xlat
insl
inc
scas
xchg
push
add
fwait
adc
shrb
jo
stos
and
out
insl
aam
pop
mov
jbe
dec
loop
aaa
push
xchg
or
repnz
ljmp
xor
ja
mov
or
cltd
fdiv
pusha
loope
dec
dec
gs
fsubrs
xor
pop
and
call
mov
pop
adc
dec
ss
jno
faddl
imul
pushf
int
sarl
jle
cltd
sub
je
cwtl
xchg
ljmp
into
clc
test
fnsave
mov
mov
fsubrp
js
scas
push
mov
add
sbb
ljmp
imul
push
jge
outsb
dec
inc
mov
mov
repnz
mov
jno
xor
inc
out
aas
inc
out
mov
mulb
or
sub
out
ljmp
jns
nop
and
mov
icebp
cmp
out
ret
push
lahf
push
fisttpll
insb
pop
mov
inc
leave
scas
xchg
add
popf
push
stos
call
add
pop
outsb
add
mov
sub
lret
enter
sbb
arpl
inc
enter
mov
insb
mov
jb
pop
push
sbb
sub
popa
scas
mov
lods
neg
mov
cmpxchg
xorb
dec
inc
jbe
sbb
jo
bound
scas
aas
call
cmp
pop
imul
lret
xorl
jbe
pop
inc
sbb
or
test
scas
sbb
test
movsb
inc
dec
jge
mov
ljmp
xor
sarb
jp
push
int3
ficompl
pop
lds
repz
xchg
das
stos
cld
int
aam
pop
mov
jns
out
dec
dec
dec
and
pop
repnz
divl
pop
incb
dec
leave
mov
pop
push
sub
mov
cmpsl
jne
scas
push
and
jp
movsb
lret
mov
push
cli
in
pop
imul
or
or
push
outsb
mov
push
cs
fdivrp
pop
cmp
push
and
imul
rcrl
inc
shr
lret
hlt
lock
mov
cmp
or
mov
or
shrl
fadd
inc
fxch
xor
mov
aaa
aas
sbb
ljmp
or
add
popa
adc
or
insb
mov
cmp
into
pop
fidivrl
aam
xor
push
mov
cwtl
pop
jecxz
arpl
fucomp
out
cmpb
loop
clc
pushl
lret
mov
fnstcw
lods
push
xchg
mov
imul
mov
fstpl
adc
lods
je
add
icebp
ss
sbb
and
mov
adc
fdivrl
mov
cmp
icebp
push
enter
movsb
inc
stc
mov
dec
pop
cmp
popa
fsubrl
push
cmp
sti
lods
fldl
jl
lret
xchg
mov
movsl
mov
adc
push
cmpsb
sbb
sbb
inc
scas
in
sahf
add
sub
into
es
sbb
jo
mov
call
stc
xchg
dec
js
add
adc
add
shll
sbb
daa
add
clc
jae
mov
cmp
outsb
out
jae
sbb
shlb
adc
inc
mov
cmpsb
mov
repnz
jecxz
inc
int3
jns
in
test
jbe
pop
ds
xlat
push
ds
ds
pop
gs
dec
test
xlat
loop
mov
in
aaa
pop
dec
out
pop
jo
pusha
jg
in
sbb
aaa
insl
hlt
and
andb
jb
fs
outsb
adc
push
loop
add
fs
ret
test
jle
leave
adc
sbbl
decl
in
mov
out
inc
xchg
test
xor
loop
pop
in
xchg
sbb
sahf
add
es
adcl
cmc
pusha
sbb
and
cmp
sub
adc
std
orl
xchg
insl
mov
pop
aaa
nop
and
sahf
or
jmp
adc
pop
in
sbb
icebp
mov
leave
emms
jbe
sbb
push
outsb
xchg
cmc
repnz
xor
negb
cld
adc
push
repz
jle
sub
scas
dec
js
xchg
or
mov
fcoml
push
lock
jle
and
aaa
dec
cmpb
hlt
inc
rcl
mov
repz
pop
xor
mov
cmp
and
lret
cltd
test
daa
negb
out
sbb
or
pop
lret
ret
rcll
pop
das
inc
pop
popf
dec
dec
sbb
imulb
sbb
lcall
add
ret
ret
in
mov
nop
mov
lods
test
lret
jecxz
push
mov
sti
or
sbb
in
lahf
in
and
fwait
xor
int
jae
aas
addl
cmpsb
out
ss
fists
adc
dec
pushf
in
std
mov
and
and
movsl
jb
push
xchg
pop
mov
shlb
fcmovnb
gs
pop
sub
mov
orl
ds
lods
fcomps
mov
and
mov
les
mov
xor
je
iret
dec
push
ljmp
adcb
jns
xorb
push
jle
pop
push
idivb
cs
clc
mov
mov
jns
jo
fisttpl
pop
mulb
pop
mov
int
pop
or
ror
xchg
jbe
pop
adc
push
jns
je
xor
icebp
mov
xchg
pusha
rcr
int3
stos
inc
mov
xchg
mov
test
pop
push
mov
push
push
jns
loopne
repz
ficomps
adc
andl
out
push
imul
test
mov
fnsave
dec
lock
bts
ror
mov
lahf
jg
rorl
inc
lock
add
call
push
bound
dec
push
sti
sub
mov
fdivrs
dec
jmp
jmp
movsl
lcall
push
aam
out
inc
loopne
gs
jnp
daa
mov
xchg
dec
outsl
lret
lds
fisubrl
lods
push
add
test
inc
dec
fnsave
pop
push
mulb
loopne
pop
xchg
jge
inc
dec
lods
xchg
or
cmc
loop
fisubrs
repz
cmp
jmp
shr
xchg
lret
xchg
xchg
pop
sbb
cmp
and
jge
mov
adc
fistps
mov
jns
mov
mov
pop
cmpsl
and
and
xchg
stos
or
adc
and
mov
pop
ja
divl
ficomps
mov
mull
and
in
mov
jae
jnp
jge
mov
notb
xchg
adcb
inc
outsl
in
hlt
aaa
mov
fdivl
lock
push
xchg
mov
cmp
jbe
test
xor
jne
mov
stos
shr
aaa
cs
lock
std
xchg
ficoms
mov
dec
pop
fcoml
mov
and
js
pop
incl
xchg
push
cmp
jmp
sbb
inc
ss
jp
subl
push
ret
in
out
dec
fst
in
xchg
cs
push
mov
pushf
jae
rol
stc
mov
fcomp
or
push
pop
adc
jecxz
xor
add
cltd
iret
mov
decb
lea
nop
dec
hlt
adc
add
jns
xchg
insb
jmp
or
daa
enter
mov
add
mov
inc
and
lcall
dec
clc
ds
add
pop
lea
dec
dec
lcall
sbb
popa
mov
mov
mov
dec
sbb
mov
and
cmpsl
rol
xor
xchg
sbb
fcmovb
dec
shrl
add
jae
sub
fwait
inc
sbb
dec
mov
iret
das
fildll
gs
and
adc
and
mov
dec
cltd
ret
mov
hlt
mov
lods
out
or
mov
inc
aaa
dec
pop
mov
cmp
fisttps
mov
adc
icebp
add
mov
jl
in
inc
les
xchg
lea
in
cmp
dec
ja
cmp
call
out
mov
movsb
jle
aaa
xor
pop
fwait
jge
inc
adc
add
lahf
dec
lds
aad
movsl
cld
ljmp
mov
lret
add
push
rclb
cmpsb
adc
dec
push
dec
mov
cmpsb
aad
pop
dec
fstps
outsb
ds
mov
aam
bnd
fs
ds
cmp
sbb
mov
es
lods
jle
jmp
lcall
fidivrs
scas
imul
addb
or
mov
cwtl
adc
lahf
scas
lea
fldl
adc
ja
push
xchg
jns
leave
sbb
sbb
inc
cld
push
rolb
mov
fldenv
cmp
iret
faddl
jmp
xacquire
push
movsb
arpl
jle
insl
push
mov
xlat
mov
push
push
cmpsl
shl
test
add
out
dec
mov
je
inc
fnstenv
dec
fsubl
adc
imul
bound
xchg
je
adc
jo
xchg
jne
pop
adc
lods
adc
sbb
push
jo
pop
dec
dec
cmc
in
jne
ja
dec
mov
or
andl
aas
cwtl
mov
popf
mov
xorb
lds
andb
aad
sbb
mov
fistl
sub
sti
push
or
mov
mov
imul
pop
cmp
ljmp
inc
jae
sahf
shrl
mov
call
pop
test
dec
xchg
add
in
ja
add
test
call
sbb
cmp
mov
popl
xor
call
lea
xor
dec
mov
ror
fdivs
cwtl
loopne
xor
ljmp
adc
ret
addl
xor
aas
dec
adc
addr16
push
out
insb
cmc
aaa
cwtl
aas
push
dec
addr16
insl
movsb
int3
cltd
cmp
dec
loopne
std
inc
xor
push
xlat
and
and
pop
rcr
or
cmp
dec
adc
xchg
popa
mov
or
sub
es
xchg
imul
cmpsb
cmp
adc
mov
push
and
sahf
mov
rol
repnz
pop
nop
jne
sbb
stos
cmp
out
into
add
fwait
mov
pushf
cmp
push
pop
cmpsl
push
adc
pop
gs
dec
ja
lea
xchg
imull
mov
push
pop
mov
ds
mov
not
mov
push
push
movsb
adc
or
cmpsl
jecxz
loopne
das
cld
add
and
cmp
jmp
push
xor
dec
rcll
cmpsb
cld
mov
test
mov
lods
push
mov
addb
mov
mov
stos
mov
stos
xchg
les
xor
repz
adcb
inc
lods
ss
add
sbb
fstl
add
add
xor
xchg
rcll
sbb
xchg
loop
mov
into
int
faddl
bound
fcoms
add
pop
popa
add
insb
cmp
pop
dec
jnp
cmp
jnp
jecxz
add
push
test
adcl
sub
popa
inc
aaa
jae
test
pop
cs
and
cwtl
mov
xchg
xchg
rcll
mov
aaa
aaa
and
out
pop
mov
add
xchg
push
jns
pop
stc
movsb
xchg
xchg
fistps
jnp
pop
xorps
cltd
mov
lret
aad
hlt
add
lea
push
inc
push
pop
arpl
popf
movsl
andl
push
jo
inc
xchg
mov
sbb
dec
stos
xchg
xchg
inc
or
dec
push
pop
fnstsw
sub
test
loop
das
cmp
ljmp
jecxz
jl
cmpsb
pop
js
pop
shl
ret
pop
inc
enter
cmp
and
popl
jg
push
inc
mov
out
je
dec
inc
mov
movsb
outsb
popf
inc
in
icebp
jmp
iret
out
es
xchg
das
sub
leave
mov
fnsave
push
int3
dec
pop
mov
push
jnp
cltd
sbb
pop
inc
stc
push
inc
mov
mov
or
adc
mov
fcmovnu
shll
dec
adc
sub
out
mov
loopne
mov
orb
jmp
add
loopne
aas
lds
cmovle
mov
adc
xor
enter
xchg
inc
and
mov
data16
out
lret
in
sbb
pushl
and
pop
sti
push
in
push
mov
rcrb
xor
xchg
cwtl
inc
xor
iret
lea
xchg
sub
sub
je
outsb
cli
push
loop
lahf
sbb
lcall
push
inc
and
and
push
dec
and
inc
push
xor
jne
mov
cli
adc
pop
cmc
imul
sbb
ljmp
xchg
mov
inc
es
pop
test
mov
out
push
adc
pop
mov
gs
lds
ss
and
stos
test
jge
fists
lods
sarb
test
cmc
jl
repnz
aam
jns
lods
mov
mov
and
xor
ret
rorl
jae
ljmp
inc
lcall
mov
aaa
out
mov
dec
roll
dec
cmpsb
pop
jecxz
jbe
mov
or
orl
imul
rolb
or
shl
popa
push
out
pop
inc
fdivp
lods
and
addr16
pop
ljmp
mov
adc
and
mov
push
call
fcoms
loope
or
int3
mov
mov
adc
push
out
mov
ja
stos
cmp
pop
jnp
ja
xor
into
imulb
xor
in
repz
shrb
sbb
mov
sahf
lret
push
gs
mov
mov
sub
dec
mov
outsb
daa
aas
add
push
ret
mov
shrb
jmp
xchg
mov
lea
and
stos
mov
jge
repnz
jg
jecxz
pop
daa
or
mov
test
sub
std
dec
push
sti
push
pop
ja
out
dec
cmp
jb
jbe
dec
sarl
shll
outsl
fnstenv
xor
mov
xchg
mov
rcll
dec
test
add
dec
scas
ja
mov
push
jmp
cmp
stos
push
xchg
fwait
mov
pop
push
push
shrb
div
jle
lds
fwait
inc
adc
outsb
adc
fucomi
outsb
out
aam
cmpsl
scas
dec
fs
or
pop
ret
sub
or
pop
jp
and
jg
and
std
popa
popf
cwtl
jnp
jmp
call
mov
adc
mov
mov
mulb
dec
int
mov
mov
mov
stc
jl
das
jb
pop
dec
int
js
push
mov
mov
in
sbb
leave
mov
fmulp
jl
sbb
dec
aad
jbe
push
mov
pop
pushf
inc
add
pop
jno
nop
divl
imul
push
test
pop
insb
sbb
xchg
cmp
int3
mov
xchg
mov
jbe
pushf
dec
xor
into
pop
aas
mov
lret
push
xchg
scas
data16
movsb
jecxz
mov
inc
in
add
cwtl
sbb
mov
loopne
jp
lock
lea
xor
mov
cld
dec
sub
test
lret
dec
xor
enter
pop
out
cmp
adc
rcrl
xchg
jge
cli
push
add
mov
xor
movsb
sbb
shll
sbb
stos
mov
cmc
scas
pop
lahf
mov
out
jle
xchg
cmpsl
cmpsb
xor
mov
add
js
mov
cmp
xchg
mov
mov
ja
popf
xor
push
jmp
xchg
lods
xor
out
bnd
scas
ficoms
sbb
cmp
je
imul
push
jg
aaa
sbb
and
stc
leave
mov
mov
rcrl
nop
js
and
xor
cltd
gs
sub
mov
inc
fisubl
faddl
les
cwtl
insl
jmp
into
lods
xchg
repnz
or
mov
dec
xchg
mov
fst
push
call
add
jo
push
mov
lret
out
xor
xchg
aad
jns
mov
adcl
mov
mov
in
jmp
ss
mov
repnz
scas
cltd
xor
std
mov
sub
xor
popf
jmp
je
lret
adc
mov
jge
xchg
mov
icebp
jne
loope
jne
vmovshdup
bound
pop
sub
and
mov
fildll
pop
arpl
in
push
inc
cli
sub
xlat
jle
js
lods
fsubr
loopne
jae
push
push
lret
push
ret
xchg
mov
fcomi
jno
inc
add
mov
loopne
je
pop
pop
rorb
push
mov
xor
fidivrs
sahf
inc
dec
cmp
cmp
and
sub
push
out
cli
adc
adc
adcb
out
cmp
adc
jmp
sub
cmp
or
and
jmp
sti
xchg
cs
lahf
addb
mov
shlb
sarl
roll
pop
push
dec
add
pop
adc
fdivr
dec
mov
or
fistps
rol
test
into
data16
mov
sub
loope
or
and
mov
cmpb
push
add
scas
mov
xlat
cltd
adc
and
ret
lret
lods
cmp
pop
inc
jnp
in
cmpsl
insl
pop
ret
out
arpl
or
push
adcb
mov
mov
lea
imulb
ds
cmp
xor
mov
inc
test
movsb
aad
repnz
push
fwait
jmp
mov
das
xor
addb
dec
mov
xchg
adc
call
jbe
add
add
pop
enter
xor
arpl
dec
mov
xchg
adc
fsubs
push
mov
mov
sub
das
push
arpl
sub
xchg
or
mov
sbbl
inc
mov
sahf
clc
mov
dec
sub
pop
push
adc
icebp
shrl
cmpsb
out
int3
out
shrb
adc
cmp
lcall
movsl
lret
icebp
daa
and
mov
push
ss
jb
dec
jae
jno
cwtl
js
dec
sbb
cmp
xchg
adc
inc
loope
xor
dec
ret
xor
mov
js
xorl
and
xor
mov
xchg
mov
cmp
jecxz
sbbb
scas
cltd
mov
ficoml
push
jl
comiss
lods
add
loop
cld
jecxz
sbb
dec
and
out
mov
and
xor
fcoms
cwtl
outsb
or
daa
adc
pop
aam
or
or
pushf
pop
and
ds
xor
iret
loopne
mov
dec
cmc
pop
outsb
in
aad
cmpsl
pop
idivb
aas
xchg
gs
push
jg
arpl
pop
cmp
stos
xor
fadd
and
xchg
cmp
xchg
dec
pushf
jg
in
loopne
jmp
and
stos
les
xchg
cmp
outsl
sbb
xor
mov
mov
les
pop
out
loopne
repz
idiv
fstpt
add
xlat
mov
stos
pop
push
pop
outsb
int
pop
subl
sahf
jg
in
jmp
inc
test
mov
outsl
pop
inc
xor
stc
dec
inc
adc
aas
imul
push
cmp
cmp
cmpsb
dec
xchg
jne
stos
mov
notl
test
pop
std
cld
mov
mov
dec
fdivrl
lods
jnp
xor
push
dec
nop
mov
push
xor
inc
aas
imul
sti
arpl
mov
pop
pop
stc
and
fiaddl
ljmp
sub
in
andl
jno
pop
ret
cmp
xchg
test
cmp
cmp
aaa
jne
and
xlat
jbe
cmp
sbb
nop
scas
les
movl
call
or
xor
jnp
movsl
push
add
stos
push
and
incb
shl
cwtl
mov
mov
sub
hlt
mov
ret
iret
outsb
rorb
mov
inc
inc
add
inc
les
or
xchg
and
inc
pop
call
ljmp
pop
dec
mov
insb
pop
adc
shlb
dec
stos
sub
sar
sahf
sarb
addr16
adc
out
mov
cmp
pop
jb
and
sub
aaa
push
aaa
add
hlt
sub
cld
imul
test
sbb
andl
xchg
xchg
mov
pop
add
test
imul
outsb
mov
cmp
insb
inc
xchg
mov
and
lods
sti
cmpsl
out
ficompl
cmp
and
push
call
push
dec
cmp
mov
inc
inc
ficompl
mov
aam
sub
clc
leave
rcrl
imul
push
subb
enter
dec
fidivrs
sub
lret
xlat
pop
mov
cmpxchg
insl
cmp
pop
mov
mov
jmp
jge
inc
inc
cs
xorb
mov
lea
daa
fs
aaa
sbb
outsl
jl
pop
repz
scas
fbstp
sahf
xor
les
insb
mov
outsl
mov
hlt
or
pop
les
cmp
jge
into
jbe
xchg
sbb
adc
ret
clc
rcl
into
out
icebp
xchg
pop
mov
mov
and
mov
push
andl
dec
dec
pop
ss
push
mov
cmp
mov
cli
add
add
ret
mov
add
js
insb
mov
bound
dec
iret
imull
or
jne
inc
mov
inc
pop
push
add
jno,pt
sub
pop
lea
js
mov
mull
push
or
fists
sub
xor
adc
inc
into
roll
cmp
imul
jecxz
out
push
pop
mov
lods
repnz
out
sub
cli
jno
and
mov
push
and
pop
les
int3
cmp
cmpsb
cmp
dec
dec
rclb
mov
adc
xchg
jbe
add
shrl
push
cmc
hlt
mov
and
mov
loop
arpl
rcll
outsb
ljmp
shrl
pop
pop
xchg
leave
je
and
pop
mov
fs
nop
lods
fstpt
mov
push
lods
aam
xor
xor
scas
and
mov
nop
jg
sbb
adc
dec
push
inc
insb
cmpsb
daa
mov
xor
cwtl
sbbb
xchg
and
das
and
xor
sub
adc
jl
popa
pop
sub
pop
inc
or
jecxz
push
cmpsb
lods
xchg
pop
cltd
pop
or
out
and
lcall
psubsw
and
clc
push
shl
notb
call
inc
adc
jmp
jae
jg
loop
cmp
sti
xchg
jb
cmp
push
sbb
aam
lret
test
xchg
lahf
cmpsb
leave
sbb
sti
and
or
push
lret
cmp
or
aam
into
sub
pop
fs
jns
test
in
leave
hlt
cmp
mov
jecxz
data16
mov
outsb
in
jns
cmc
rorb
add
jl
hlt
pop
push
xchg
push
ja
fadds
and
es
mov
mov
lea
js
jbe
fmull
pop
inc
push
push
and
xor
inc
aam
add
in
sub
leave
sbb
js
mov
repz
jnp
dec
ror
insl
in
aam
lret
lds
adc
mov
push
or
cwtl
mov
repnz
sbb
outsl
jp
fidivs
sub
mov
pop
cld
ret
mov
cmp
jg
add
pushf
setg
inc
pushf
or
cmp
pop
dec
dec
push
xor
xchg
rclb
testl
pop
imul
aam
jle
mov
mov
outsl
arpl
lret
pop
movsl
mov
addr16
xchg
sub
jae
sti
xlat
cld
faddl
pop
jb
cmpl
divl
fistps
or
mov
aaa
dec
ja
inc
aam
adc
mov
fs
dec
jbe
fcmovbe
sar
outsl
inc
ss
rcrl
cmpl
xchg
or
lcall
cmp
push
add
or
iret
mov
jmp
cmp
outsb
push
insb
enter
push
mov
inc
bound
les
mov
mov
cmpsb
push
xchg
dec
stc
outsb
movsl
adc
sub
xor
push
xor
fsubs
insl
mov
test
sub
in
sub
jo
pusha
into
lcall
dec
std
cwtl
pop
nop
mov
dec
push
xor
outsl
dec
jb
add
gs
fidivl
test
lea
lea
ret
xchg
mov
sbb
cmp
int
cmp
rorl
js
push
sbb
rorb
sahf
in
jmp
cmpsb
xor
mov
enter
jae
sbb
repz
sti
sti
in
pop
faddl
jae
jle
add
test
fdiv
nop
ficompl
in
test
faddl
dec
pop
lods
js
lcall
std
xchg
mov
ret
fcomps
fs
xor
push
and
or
inc
xlat
sub
mov
fisubl
jnp
jge
push
pop
jecxz,pn
mov
loop
add
std
adc
dec
std
inc
test
jns
in
mov
pop
aaa
jmp
mov
sub
adc
push
loope
dec
dec
int
mov
sti
push
fisttpl
mov
adc
xchg
or
sub
imul
test
add
ret
rep
movsl
pop
fldt
xchg
idivl
xchg
mov
out
in
rolb
mov
dec
jmp
dec
test
mov
add
dec
add
mov
movsb
push
ljmp
movl
and
js
xor
cmp
std
mov
dec
clc
push
jl
push
jg
rcrl
clc
mov
xorl
push
movsl
stc
jns
sub
aas
lock
inc
inc
mov
mov
mov
xor
sub
cs
in
xchg
inc
xor
ret
outsl
bound
das
repnz
sub
xchg
pop
cmp
inc
aam
add
push
adc
and
sbb
enter
loope
push
lcall
push
and
pop
or
shlb
sarb
xchg
xchg
sbb
add
insl
das
int
popf
or
xchg
mov
rcll
xor
jle
xor
cmp
lret
in
repz
pop
mov
jl
sub
decl
add
scas
in
push
sbb
xchg
fmul
aaa
call
rcrb
lret
xor
jmp
dec
push
lret
inc
inc
mov
mov
mov
inc
dec
inc
insb
push
mov
in
pusha
sbb
mov
mov
aad
mov
xor
pop
add
fistpl
into
add
or
mov
or
mov
jle
pop
out
cmp
cmpl
imul
mov
or
les
nop
sbb
outsb
int3
push
dec
and
xor
or
inc
aam
and
movsb
cmp
call
sub
lret
out
mov
pushf
pusha
gs
je
pop
das
sub
movsb
adc
cmp
sahf
mov
int3
lods
pop
neg
jno
sbb
mull
or
cmpsb
mov
sub
js
inc
fdivrl
push
jg
mov
lret
cmp
adc
les
push
mov
dec
or
shrl
mov
imul
scas
mov
inc
ljmp
jle
out
sub
cmp
adc
sub
mov
and
mov
jle
cmp
pop
pushf
in
jecxz
mov
push
lret
mov
nop
inc
and
jp
xor
jle
int
mov
push
rcll
cmp
imul
inc
orb
sahf
xchg
or
mov
push
lcall
fstpl
or
cld
jp
pop
js
nop
push
jmp
insb
sbb
pop
push
jb
cltd
sahf
adc
rcrl
sub
cmp
repz
adc
fucom
push
hlt
cwtl
sbb
into
fs
sti
call
lods
aaa
pop
cs
call
jecxz
aam
int3
js
gs
inc
pop
testl
ret
enter
push
iret
xor
pop
shl
jg,pn
pop
data16
mov
push
xor
insb
push
mov
push
sub
lcall
rorl
test
imul
mov
mov
cltd
dec
leave
pop
stos
jmp
imul
sub
and
insb
out
repz
std
xlat
dec
test
loopne
push
fs
fwait
loop
rcr
aad
addr16
push
mov
stos
cmp
jb
adc
cmp
jno
enter
lcall
iret
lods
popa
inc
inc
test
sti
lret
jno
cli
cmp
pop
lods
or
mov
aam
fisttps
ja
fucomip
dec
xor
call
mov
and
lods
fwait
out
or
out
push
fwait
repnz
inc
pop
nop
js
sbb
push
int3
or
jns
bound
sar
sub
std
shll
pop
adc
or
mov
mov
mov
fistpll
bound
pop
test
data16
aaa
sub
or
scas
imul
push
dec
push
imul
lds
movsl
or
fbld
shl
inc
into
mov
movsb
mov
lret
scas
adc
mov
repz
pop
sarl
cmc
out
pop
mov
mov
rorl
stos
mov
dec
mov
cbtw
int3
jecxz
xchg
popf
dec
es
loopne
dec
lods
pushf
bound
fdivrs
mov
sbb
sti
in
addr16
sbb
xchg
adc
aad
es
mov
notl
int3
mov
cmp
xor
int3
mov
push
call
jns
fmull
int
sub
and
jns
clc
cmp
xor
sub
std
out
scas
movsl
jno
inc
or
xor
bnd
ds
xchg
int
fwait
sub
cmpsl
mov
xor
std
leave
jge
int3
es
dec
hlt
cmpsb
loopne
fsubrs
ja
push
into
lcall
dec
sahf
push
fnstenv
mov
test
cli
into
stc
jle
and
in
cmove
mov
xchg
inc
or
add
movsl
ja
push
jno
sahf
out
mov
dec
pop
inc
pop
fsub
pop
xor
jo
push
lods
mov
jmp
lret
cmpsl
cs
stos
mov
bound
dec
repnz
jecxz
xchg
and
sti
ss
mov
in
sbb
out
sbb
pop
pop
cld
xchg
jl
jns
imul
adc
xor
xchg
incl
ljmp
mov
inc
mov
xlat
push
fwait
scas
repz
icebp
mov
xchg
test
cmp
pushl
push
outsb
xor
jne
push
ds
mov
bound
cmpsb
xchg
scas
jnp
add
mov
push
mov
loopne
xlat
xor
jl
cltd
adc
lret
outsl
mov
sub
ja
out
shlb
mov
sti
inc
in
xor
mov
sub
jne
movsl
movsb
imul
movsb
adc
or
add
sti
add
test
ljmp
xor
stos
daa
or
dec
jae
fsubl
cmpsl
add
sub
mov
sub
or
popf
jge
push
icebp
pop
mov
shlb
mov
adc
push
inc
jp
idivl
fisttpll
fsubrl
std
mov
into
in
mov
adc
xor
push
and
lods
cmp
das
jmp
call
repnz
adc
lock
mov
mov
inc
push
xchg
nop
and
xor
mov
icebp
ret
clc
push
int
xchg
xor
cmp
cli
sarb
add
mov
jae
jbe
dec
nop
dec
loope
sbb
es
xlat
imul
add
jbe
subl
lret
mov
negb
dec
push
clc
xor
jae
push
pop
or
pop
lret
int3
jno
addr16
stos
call
xchg
fstl
loop
dec
push
push
pushf
jecxz
push
int
xchg
insb
iret
fisubrs
and
test
in
je
popf
je
out
repnz
xor
rorl
daa
mov
loop
push
lods
adc
int3
add
adc
push
es
push
xchg
in
ret
cmp
sarb
jge
push
and
fisttpll
shll
loop
aaa
loopne
jbe
repz
cmp
ficompl
xor
lods
scas
daa
lahf
push
dec
dec
ds
loop
xchg
push
mov
jg
dec
push
rclb
push
dec
mov
fistpll
loopne
mov
movb
ljmp
lcall
out
mov
loop
cmc
ret
dec
mov
call
adc
pop
xchg
jp
std
adc
ja
lock
jp
fwait
movsb
mov
sbb
push
cli
xor
fisubrl
mov
sahf
lods
cmp
sub
lods
ret
push
jle
pop
sub
mov
popf
ss
jo
add
lods
adc
mov
xor
xchg
movsb
roll
stos
pop
mull
iret
inc
pop
loopne
lret
mov
arpl
movsl
pop
push
mov
push
ss
fisubrs
sbb
roll
fmuls
inc
lods
js
add
or
xor
push
sahf
addr16
and
mov
int
fistl
mov
push
push
pop
pop
jl
pop
add
lret
sbb
mov
aad
jbe
popa
repz
mov
idivl
dec
icebp
pusha
push
adc
arpl
outsl
xchg
into
sbb
sbb
or
sbb
lock
fistl
fdivrl
iret
outsb
pop
or
sub
ret
jno
xchg
and
mov
mov
outsl
daa
mov
in
aad
lods
pop
test
push
imul
insl
flds
loop
adc
add
dec
xchg
xlat
out
mov
push
shrb
pushf
mov
jmp
sub
cmp
sub
gs
add
jmp
or
ljmp
jecxz
add
mov
enter
add
fistpll
cs
add
fadds
xorb
aad
push
addr16
jno
es
mov
imul
jns
xor
inc
sbb
mov
or
add
push
sbb
insb
xlat
outsl
cmpsb
cmc
adc
mov
adc
inc
push
enter
cmp
mov
push
in
adc
loop
inc
aam
pop
push
add
sub
add
jmp
fsubrl
xor
sahf
test
sub
cmp
push
scas
xor
xchg
call
add
cld
add
jmp
mov
xchg
push
add
ficomps
push
enter
pop
stc
jmp
adc
fisttps
mov
or
jecxz
jns
scas
sub
pushf
lea
jle
movl
fldpi
inc
lret
push
stos
mov
and
insl
cmp
ss
icebp
xlat
cmp
sbb
xchg
loopne
xor
sub
mov
into
pop
dec
adc
adc
test
push
pop
push
jno
je
mov
xor
lock
out
mov
mov
pop
call
mov
mov
repnz
mov
not
jl
lret
ss
outsb
mov
imul
dec
push
mov
addr16
dec
dec
jg
cmpsl
notb
es
cmp
push
xchg
mov
je
xchg
inc
lret
xchg
xor
inc
xchg
dec
xor
pushf
jo
lahf
mov
xchg
jnp,pn
mov
mov
cmp
lcall
pop
inc
lods
dec
fcompl
push
mov
lods
mov
xchg
cmp
movsb
repnz
cmpsl
jns
jp
clc
mov
mov
cmpsb
bound
mov
mov
xlat
cmpsl
jge
mov
mov
inc
push
cmpsl
ret
rcll
inc
idiv
sbb
enter
jae
push
cmp
js
dec
sbb
mov
sbb
cwtl
lock
leave
push
stc
in
cli
dec
adc
mov
push
nop
std
mov
outsl
sub
out
mov
xor
sub
or
mov
in
push
jle
cmpsb
lock
pop
mov
lcall
test
or
mov
xor
cmp
ja
adc
and
jmp
push
aas
xchg
in
xchg
push
mov
pop
mov
sbb
or
push
lods
loopne
dec
push
xchg
iret
loop
push
rorl
or
xor
aam
mov
cmp
lahf
jecxz
xchg
push
mov
push
fs
jae
xchg
pop
add
icebp
jmp
ljmp
or
subl
push
les
std
push
fwait
outsl
fs
sub
cmp
adc
dec
cmpsb
xchg
ljmp
pop
push
pop
jmp
pop
and
iret
inc
icebp
arpl
popa
dec
testb
out
fdivl
fdivrp
hlt
cld
push
inc
lods
insl
mov
mov
pop
xchg
mov
lret
sub
int
add
aaa
sarb
xchg
cmp
cmpsl
adc
icebp
and
icebp
pop
push
push
push
je
add
shll
int
pop
jne
mov
loope
xchg
jp
cmp
xlat
xor
adc
jmp
push
mov
mov
xor
into
lock
mov
mov
sbbb
aas
jl
or
sti
and
mov
xor
iret
testl
xchg
inc
cmpb
ret
sarb
cmp
sbb
add
jle
inc
push
dec
and
icebp
inc
push
sub
sti
and
xor
stos
repz
sti
add
sub
dec
dec
jg
add
int
lock
pop
fnstsw
into
inc
dec
and
les
adc
jno
mov
cmp
test
insb
shrb
loopne
or
out
scas
sub
test
gs
stos
dec
test
je
sub
mov
arpl
loopne
jbe
pop
shll
add
lods
adcl
sub
mov
xchg
inc
lods
cwtl
pop
fsubs
xor
fdivr
dec
xor
jo
ret
xor
out
andl
jbe
add
movsl
sub
pop
call
ja
dec
adc
pushf
sbb
pop
xor
fwait
in
push
or
scas
popa
das
pop
pushf
cmp
mov
ror
and
addr16
add
cltd
aad
pop
jmp
push
out
add
std
int3
or
daa
mov
pop
outsl
mov
sub
mov
cltd
test
mov
sbb
lds
cmpsb
push
jl
pop
or
xchg
push
jne
std
loope
je
cmp
mov
add
sti
fnsave
or
adc
cmc
add
out
subb
sbb
mov
scas
adc
mov
repnz
push
jge
packssdw
testl
fs
lcall
fidivrl
xchg
jge
icebp
ja
mov
loop
mov
adc
xchg
push
mov
dec
pusha
sbb
stos
add
mov
popa
jge
sbb
mov
adc
jge
push
mov
mov
xchg
xor
sahf
rep
in
call
inc
test
scas
int
mov
mov
arpl
sub
call
push
adc
xor
cs
fnstenv
in
in
cwtl
inc
insl
xchg
outsb
adc
std
les
ror
and
lcall
adc
mov
fcoms
xchg
int
icebp
mov
sti
pop
lds
movsl
xor
mov
push
stos
jmp
cmpl
stc
gs
mov
mov
in
jns
sahf
clc
sub
movsb
push
out
shll
outsl
movsb
lock
imull
or
cmp
or
or
insl
mov
ret
push
inc
cmp
pop
xchg
std
divb
cmp
and
jnp
je
and
inc
push
jns
xchg
fstpt
cmp
leave
push
sub
ja
add
push
dec
icebp
mov
mov
mov
aas
or
jmp
or
insb
lcall
inc
fwait
ret
sub
push
cltd
jp
imul
addr16
push
dec
or
aas
mov
xchg
xor
aam
adc
jbe
jne
imul
sbb
adc
test
ret
enter
xchg
ret
push
sub
sbb
xor
loopne
pop
adc
xchg
insl
and
stc
xor
or
jp
sbb
jo
lret
jns
lock
call
test
and
push
pop
inc
mov
addr16
out
sbb
pop
sahf
out
mov
pop
push
pop
daa
xlat
mov
mov
mov
jg
scas
inc
roll
ljmp
xchg
and
mov
shrb
xchg
lods
ret
int3
pop
mov
insl
rorb
and
push
dec
in
cmp
xchg
outsl
xor
jle
mov
in
xor
in
aas
pop
ret
loopne
sub
mov
and
or
jl
pop
xchg
jo
dec
lret
xchg
mov
hlt
js
mov
wrmsr
pop
sbbl
cltd
bound
lret
stos
jmp
and
jmp
and
fwait
movsl
jecxz
mov
pop
push
sbb
xor
push
mov
andb
addl
pusha
pop
and
jmp
mov
ror
inc
adc
ljmp
and
arpl
clc
pop
push
fmulp
fs
inc
inc
push
cli
jo
ja
inc
idivl
iret
sbb
dec
sub
mov
jne
out
sbb
mov
mov
sysret
into
mov
dec
insb
fisttpl
and
int3
loop
pop
outsb
jmp
cmp
cmpsl
mov
push
es
cmp
sub
popa
sub
push
sbb
xchg
fdivs
xchg
in
sbbl
shlb
mov
aam
mov
xor
cmp
add
fistpl
dec
mov
sbb
adc
cmp
lcall
dec
adc
out
xchg
sahf
push
push
outsl
push
hlt
add
shll
mov
aam
sbb
daa
mov
ss
dec
push
sbb
xor
stos
push
enter
xchg
push
loope
dec
mov
in
divl
insb
repz
test
out
in
lods
aam
push
mov
std
lds
jns
inc
dec
sub
sti
push
inc
mov
mov
scas
dec
fistps
leave
xor
mov
enter
lret
push
movsl
outsl
test
mov
push
hlt
pop
mov
mov
imul
sbb
push
ljmp
outsb
std
mov
pop
decl
pop
rolb
dec
jnp
jg
sbbb
add
mov
jle
mov
pop
xor
sti
stos
movsl
shl
push
aam
or
icebp
cmp
cltd
ret
outsb
bound
out
xor
arpl
adc
cmp
repz
dec
data16
and
fildll
out
call
adc
fcomps
mov
mov
pop
pop
cmpsl
cli
ficoms
adc
inc
xchg
lret
xchg
jp
movsb
dec
mov
fistpl
clc
loop
lock
fwait
push
xor
and
cmpsl
movsl
pop
in
or
insl
inc
fmulp
divl
push
mov
pop
inc
add
mov
or
cmp
xor
icebp
addr16
adc
inc
xchg
into
imul
sub
sub
inc
cld
cmp
in
mov
lock
inc
in
pop
sub
pop
pop
loopne
inc
lods
and
cs
mov
pop
xchg
push
cltd
and
xor
movsb
test
push
test
inc
lods
and
mov
ss
or
aad
daa
cmp
mov
push
mov
mov
add
scas
pop
adc
lahf
add
mov
jecxz
cmp
sub
jns
sub
push
or
or
clc
xchg
sbb
cmp
in
filds
sub
insl
sub
push
nop
push
push
push
add
or
arpl
mov
mul
mov
mov
dec
mov
aam
test
push
js
dec
mov
cmp
in
das
cmp
mov
leave
push
or
inc
jno
fs
adc
mov
mov
lock
add
rol
movsb
sbb
repnz
sbb
je
lea
sbb
in
ficompl
xchg
jno
adc
pop
jae
je
ficomps
mov
xchg
pop
repnz
jbe
fs
in
dec
mov
jg
jnp
in
add
sbb
lahf
xor
ljmp
subl
call
ss
or
gs
rorb
pop
sub
inc
sub
sti
test
sahf
and
cld
or
mov
sbb
fisubrs
aam
leave
scas
add
movsb
test
addr16
shrb
test
rcrl
xchg
ja
and
stc
daa
push
add
test
jo
scas
lds
or
test
addr16
lock
mov
add
cltd
push
or
addr16
fstpt
inc
pop
cmp
fisubl
mov
or
test
ja
xrelease
mul
dec
rcll
ret
scas
mov
jecxz
push
add
push
xchg
stos
arpl
nop
scas
pop
inc
ss
jb
js
insb
xor
xor
jmp
popa
test
in
inc
adc
aas
pop
push
jno
add
mov
lcall
adc
add
pop
repz
xchg
adcl
rcrl
push
mov
add
mov
call
iret
adc
pop
dec
or
cmpsb
mov
iret
mov
mov
mov
mov
sbb
dec
cmc
push
or
add
int3
jecxz
and
pop
test
mov
pop
and
add
add
jbe
push
jmp
dec
fs
les
mov
push
mov
cld
sbb
je
push
adc
jne
roll
or
pop
rcrb
push
sub
cmpsl
js
imul
dec
lahf
xchg
xchg
mov
sbb
pop
pop
arpl
xchg
push
dec
sbb
or
outsb
sbb
adc
sti
out
and
mov
jg
aad
cmp
std
lea
cmc
lret
sbb
xchg
frstor
add
and
aaa
cmc
pop
gs
fisubrl
cmp
leave
cli
out
xchg
fmull
es
sti
push
mov
jl
cltd
xor
xchg
jne
stc
mov
rcll
inc
jne
in
push
dec
fwait
mov
insb
out
inc
or
in
sbbb
outsb
dec
and
fdivr
jl
dec
insl
lahf
iret
lret
mov
mov
xchg
inc
push
daa
pop
mov
inc
or
adc
adc
cmpl
pop
nop
jp
cmpb
push
inc
ffreep
std
mov
add
test
test
pop
jne
cs
sub
sti
pop
dec
lods
xchg
pop
jnp
out
adc
and
ljmp
pop
mov
dec
push
mov
xchg
shrb
xor
mov
aam
insb
call
cs
push
movsl
out
sbbb
adc
pushf
push
nop
hlt
xor
jg
and
insl
xchg
lahf
shlb
jo
add
repnz
lret
xor
movb
imul
jne
pop
js
adc
rcl
inc
cmpsl
dec
cmp
nop
push
mov
imul
roll
mov
call
dec
xor
dec
mov
outsl
sbbl
and
aas
inc
in
sub
or
les
outsb
sbb
push
mov
sbb
js
push
xchg
fstps
or
orl
movsl
aas
ret
cld
imul
in
ja
jno
shlb
add
ljmp
jl
insb
and
data16
in
mov
scas
aad
pusha
adc
cmpsb
add
hlt
lds
in
push
mov
xchg
inc
cs
cmp
sub
std
pushf
cli
addr16
sub
lahf
add
arpl
add
mov
push
and
lret
mov
outsb
sub
mov
xchg
cmp
imul
out
pop
mov
es
lea
repz
cmp
push
jbe
pop
jns
cwtl
lods
xchg
dec
std
add
and
fsubl
jmp
aad
or
cmp
aas
ja
pusha
fsubl
push
xchg
sbb
dec
and
popf
imul
or
lods
mov
ja
jmp
out
xchg
or
sahf
xchg
pmuludq
jne
lods
jmp
sbb
iret
jg
fdivr
ljmp
insl
cmp
sbb
sub
add
lret
adc
or
jns
jmp
ljmp
incl
xchg
repz
je
push
push
or
push
fldl
sbbb
adc
and
sti
cmpsl
pop
test
push
popa
xor
jle
or
cmc
xor
push
sbb
cmp
ja
stos
pop
mov
out
sbb
sub
out
sub
fadds
push
and
and
clc
mov
out
xchg
jb
iret
pop
stos
cltd
out
pop
push
gs
sbb
cmc
int
test
dec
or
call
mov
js
ja
xorb
sbb
ret
lret
xchg
mov
sbb
lods
lahf
subb
add
jo
insl
adc
xchg
aad
cmp
push
or
call
push
fmul
in
mov
push
push
push
loopne
in
and
dec
lret
mov
sub
or
jle
fstps
std
xchg
push
imul
fnstcw
adc
dec
cmpb
cli
lods
push
pop
xor
and
pop
jno
mov
jmp
jmp
adc
fwait
pop
hlt
pop
push
lret
xchg
push
sub
pop
jne
nop
pop
jbe
lods
sbb
in
dec
lods
push
dec
xor
push
inc
sbb
jb
std
insl
xor
push
and
add
xor
imul
mov
out
es
cltd
cmp
sbb
cmp
jno
sahf
cwtl
jno
outsb
dec
notl
jge
imul
mull
jmp
push
ds
add
std
sbb
sub
xchg
adc
xlat
cmp
add
mov
mov
je
mov
call
lret
mov
cmp
or
idivb
cmp
cltd
and
sti
ja
neg
dec
fcmovne
jnp
mov
repnz
sti
fwait
xchg
dec
jnp
push
pop
mov
jl
out
testb
dec
out
sbb
inc
test
or
addr16
cli
outsb
testb
jbe
stc
pushf
hlt
jnp
xchg
jns
pop
mov
imul
inc
mov
push
outsb
xor
fs
ret
push
lods
mov
cmp
je
and
jbe
cld
jmp
or
aas
pop
dec
js
mov
insb
sub
shll
cmp
mov
jmp
xchg
push
jb
cmpsl
xchg
mov
mov
jmp
mov
add
test
mov
fcomi
sbb
pop
push
aas
test
or
insl
je
das
add
mov
jmp
push
mov
sbb
pop
sbb
xor
fcompl
xchg
inc
xlat
jmp
mov
inc
hlt
dec
mov
repnz
rcl
mov
fs
and
jl
pop
adc
xor
mov
fmulp
insl
arpl
into
loope
cli
mov
inc
popf
fnstcw
andl
add
pop
aam
sahf
mov
lahf
sti
cmpsb
hlt
arpl
and
stos
test
mov
push
arpl
bound
ljmp
xlat
out
dec
mov
cmp
sbb
and
xchg
mov
and
push
outsb
cmp
mov
iret
mov
lds
andb
mov
xchg
sahf
pusha
dec
mov
sub
nop
call
outsb
xchg
roll
or
mov
test
pushf
movsl
push
out
mov
test
das
mov
lds
in
xor
xor
add
inc
repz
adc
ds
mov
inc
in
or
mov
jp
jmp
cwtl
mov
or
daa
cmpsl
stc
pop
sbbb
negb
pop
adc
jecxz
adc
lds
lock
xor
lods
adc
xor
push
ret
and
jae
jl
pusha
in
push
aam
cs
xchg
add
push
mov
jg
cltd
adc
idivl
sub
ds
or
inc
sbb
pop
out
jp
pop
jae
jbe
in
addb
rolb
dec
pop
addr16
out
dec
mov
sbb
mov
je
xchg
call
jge
adc
cmp
dec
sbb
mov
mov
and
and
xchg
cmpsl
out
jg
int
jecxz
xorl
outsl
out
jb
sub
fsubl
dec
push
mov
push
sub
ret
xchg
xchg
sbb
fidivs
cmc
sbb
jmp
sub
mov
mov
imul
push
inc
mov
inc
pushf
pop
xchg
and
dec
popl
push
cmp
mov
movsl
add
push
and
out
fistpl
cs
loop
xor
xor
jbe
inc
push
inc
aaa
inc
loop
shll
lahf
bound
cli
jg
icebp
jecxz
jbe
out
fs
pusha
and
pop
add
std
orb
pop
lds
fdivs
and
icebp
mov
xor
adc
pusha
ljmp
jbe
adc
outsl
sbbb
inc
add
mov
inc
add
sbb
mov
sub
pop
lods
xor
movsb
jns
addr16
cmpsb
in
mov
or
push
jg
adc
movsb
test
ljmp
pop
imul
test
jnp
inc
jae
into
out
int3
xchg
rcl
and
fmuls
jno
cwtl
les
sbb
and
xor
imul
adc
data16
pop
out
cmp
cmpsl
and
int
sub
in
mov
dec
lods
fucomi
mov
hlt
push
rclb
test
stos
rcll
sub
jo
cs
lea
pop
stos
mov
add
dec
sub
adc
sbb
aad
in
outsl
mov
shrl
jle
and
scas
outsl
or
fistps
ja
add
in
ret
push
adc
iret
fsubr
aas
xchg
mov
inc
jns
mov
mov
jmp
adc
pop
xchg
adc
cmp
mov
pop
popf
enter
sbb
jne
push
mov
imul
or
or
jnp
into
fcomps
imul
mov
loopne
inc
jp
fwait
idivl
rclb
loop
stos
fwait
ja
jp
outsb
pop
in
pop
cmp
jl
fstpt
lahf
out
dec
stos
call
lea
inc
daa
mov
cmpl
faddl
leave
adc
push
xchg
data16
adc
insb
ror
stc
mov
ja
fnstsw
repz
inc
in
shr
rorl
mov
push
mov
cwtl
addr16
push
sti
sub
push
in
mov
lods
shrb
cmp
or
popa
jbe
es
mov
cmpsb
sarl
inc
mov
clc
lahf
imul
aad
ss
js
out
jmp
mov
cmp
and
jp
xor
hlt
jl
mov
sbb
out
ljmp
push
cmp
lea
fs
and
out
mov
shll
rorl
scas
scas
cmp
rorl
dec
imul
rorl
ret
xor
or
imul
sub
ja
mov
push
rcr
fsubl
sub
xor
cmpsl
fdivrp
sbb
or
push
jp
dec
lea
adc
out
jno
gs
addb
dec
add
repz
jnp
mov
sub
or
or
xor
pop
sbb
push
dec
js
xor
dec
leave
mov
aam
jns
mov
loop
jp
out
adc
loop
leave
sub
or
inc
fdiv
mov
mov
xchg
es
mov
cmp
jmp
pop
in
aas
xor
fwait
test
mov
cwtl
mov
jle
out
dec
push
jbe
addb
mov
pop
pop
mov
jo
imul
cmp
pop
movsl
pop
aas
iret
xchg
loope
jo
jmp
jo
push
inc
ret
xlat
add
or
fdiv
or
repz
into
cmp
mov
mov
inc
shrb
cmp
cs
ljmp
xchg
adc
out
outsb
push
inc
fsubrl
fsubr
lods
clc
das
in
xor
into
mov
mov
cltd
in
mov
out
into
adc
add
aas
in
inc
call
push
ret
fisttps
adc
in
out
cmp
into
xor
mov
and
ret
mov
pop
jnp
mov
xor
dec
jmp
jmp
shrb
push
jne
mov
test
inc
adc
pop
sahf
imul
fwait
and
jne
outsl
in
cmp
push
inc
je
cmp
cmpsb
cmpsb
popa
and
push
or
pop
pushf
lret
lods
lods
xchg
aam
aaa
clc
cmp
je
dec
or
pop
rorl
push
into
mov
sub
pop
cld
cmp
inc
fcmovb
fadd
adc
leave
xchg
in
sti
mov
mov
hlt
jne
mov
sbb
loopne
rclb
out
mov
repnz
jmp
das
stos
in
xchg
sti
leave
cmp
inc
dec
adc
add
loopne
jl
mov
mov
push
mov
popa
aaa
call
rol
cmpsb
js
mov
xor
mov
lcall
mov
or
fimull
xchg
push
xor
lret
imul
xor
mov
lods
aaa
xchg
mov
inc
pop
divb
mov
add
dec
cmpsb
inc
sahf
pop
testl
daa
fs
add
arpl
dec
fnstenv
adc
jbe
divb
inc
pushf
out
lret
lahf
pop
stc
mov
push
ret
arpl
push
sbb
xor
xchg
sub
cld
ret
mov
xchg
fsts
jg
pop
mov
add
xor
rclb
out
imul
lret
and
out
jno
aas
mov
xor
sbb
sbb
pusha
leave
adc
push
repz
add
xchg
je
mov
xor
in
gs
inc
test
ficoms
repz
roll
adc
repnz
bound
insb
roll
bound
les
or
pop
push
rcr
fs
imul
addr16
fwait
ja
leave
sbb
adc
or
and
xchg
cmp
cs
fidivrs
sbb
mov
or
pop
pop
xor
sbb
mov
adcb
add
xchg
xchg
inc
test
jmp
lcall
xchg
shr
mov
mov
fst
jl
ret
mov
in
dec
fs
out
adc
test
test
xor
dec
adc
pop
cmpsb
or
push
ss
cmp
loop
add
mov
sbb
and
xor
cwtl
dec
addr16
push
mov
jmp
push
add
mov
fucomi
in
or
das
rolb
and
adc
stc
dec
movsb
mov
mov
add
int
loope
jb
inc
push
jne
xor
xor
sbb
jle
push
cmp
hlt
fldt
aaa
out
xor
dec
lea
adc
rclb
aad
les
dec
icebp
mov
add
in
inc
jb
in
mov
cmp
xchg
jne
mov
push
pushw
pop
pop
jo
xlat
gs
pop
ds
hlt
hlt
repz
inc
mov
add
rolb
aad
push
leave
mov
daa
lret
mov
lahf
mov
xchg
or
aaa
mov
ret
test
stos
aas
xor
cmp
fidivl
push
inc
cli
xchg
cwtl
cld
add
aaa
push
movsb
jnp
sbb
movsl
adc
and
les
adc
xchg
les
bound
repnz
roll
mov
test
and
xchg
or
jecxz
mov
aas
aas
dec
movsl
mov
dec
bound
pop
add
xor
push
dec
loope
xlat
pop
pop
jmp
das
push
and
jecxz
loope
pusha
punpckhwd
pop
movsb
mov
nop
mov
sub
jmp
sahf
cs
scas
and
mov
add
push
xorl
push
lock
ret
ds
jne
or
notb
xchg
dec
dec
or
pop
pop
aas
out
and
inc
fbstp
mov
jns
pop
aaa
sqrtps
addr16
adc
dec
stc
dec
push
js
fists
cmp
cmc
iret
in
aaa
mov
ret
mov
mov
imul
pop
jno
pop
jmp
mov
push
jne
in
lret
repz
mov
xchg
and
pop
ret
mov
inc
lret
pop
sarb
mov
rcpps
sbb
xchg
aaa
roll
mov
lods
lock
pop
lods
inc
movsl
jne
lds
aam
push
cmc
jnp
ss
and
nop
dec
push
adc
gs
mov
decb
or
jnp
inc
loop
bound
pop
mov
xor
mov
adc
pop
dec
jmp
es
jp
or
or
negb
lahf
out
jle
pop
push
sub
adc
test
xor
or
inc
ljmp
dec
bnd
seto
xchg
sbb
cs
cltd
fs
loopne
fldenv
jp
pop
jbe
mov
cmc
jl
outsb
lods
outsb
or
aam
shrb
sti
push
xchg
ds
stc
dec
imul
icebp
dec
ljmp
push
addr16
pop
into
and
push
in
adc
push
xchg
mov
popf
fidivrs
lret
mov
cmp
inc
pop
inc
xchg
xor
clc
ja
mov
adc
mov
shrl
xor
movsl
leave
dec
test
or
loop
sub
aas
loopne
jns
leave
in
int3
lea
push
mov
mov
sbb
sub
es
xor
mov
sarl
cwtl
push
mov
and
jp
stc
stos
popl
push
push
fsubrl
fisubl
xchg
jecxz
mov
sbb
mov
hlt
loopne
xchg
cltd
pop
int3
mov
loop
repnz
aad
adc
fwait
sub
leave
xorb
ds
push
mov
jnp
push
mov
sbb
mov
in
js
jnp
cmpb
mov
mov
lret
cmpsl
loop
add
test
cmc
in
push
out
xor
adc
lods
pop
push
adc
or
push
cmp
pushf
mov
sub
adc
jne
and
pop
push
sbbl
repz
cwtl
aas
cs
add
inc
inc
cmp
inc
aad
stos
push
sub
fs
mov
mov
push
clc
cmp
test
outsl
and
push
int
xchg
cmpsl
aaa
sbb
imul
push
mov
adc
mov
mov
into
mov
mov
add
inc
inc
mov
outsl
mov
inc
clc
or
sub
shrl
jbe
jle
movsb
imul
fistpll
sub
xor
pop
mov
andb
stc
mov
rol
aaa
xchg
mov
test
into
cs
ficoml
pop
mov
mov
addr16
test
pop
and
inc
add
ljmp
nopl
fnstenv
jns
sub
xchg
addb
sbb
in
push
testb
xchg
push
fdiv
aas
shl
clc
sbb
jnp
cwtl
in
dec
jne
pop
in
jmp
push
mov
dec
or
sbbb
pop
push
or
pop
daa
xor
adc
add
push
ret
jl
gs
or
sarb
cmc
imul
push
out
orl
mov
push
xor
aad
call
sbb
lods
xchg
cmpsl
aam
rolb
fbld
in
lock
icebp
xchg
xor
inc
fincstp
mov
scas
push
mov
insb
data16
sub
test
test
pusha
loopne
pusha
inc
cmp
jae
add
aaa
jns
lods
imulb
or
jnp
mov
and
ret
cwtl
dec
jb
push
inc
or
xchg
mov
es
push
loopne
cmp
ret
mov
and
inc
mov
lcall
or
imul
stc
inc
cmp
int3
mov
push
mov
cltd
add
popa
cli
or
icebp
sti
push
pop
lods
jle
ficomps
popf
sahf
push
ret
sub
xor
fildl
inc
adc
cmp
test
insl
loop
inc
sbb
sbb
nop
inc
mov
ja
add
jmp
push
cmpsl
shll
std
les
adc
iret
iret
int
jecxz
mov
cs
jg
mov
adc
cmp
mov
je
xor
or
fdivs
add
mov
sub
or
out
dec
push
lret
adc
loopne
test
or
int3
add
sub
jae
mov
cmp
xchg
js
pusha
les
out
cmp
js
test
xchg
aam
rolb
mov
gs
stc
mov
arpl
sbb
cli
call
je
repz
sub
setp
jns
hlt
xor
push
mov
dec
cltd
jmp
dec
add
xchg
outsl
add
or
aaa
ret
mov
mov
outsb
loope
xor
jg
xor
pushf
push
mov
popf
jb
xchg
js
enter
fmull
fstl
cmc
xor
movb
stos
sub
push
jo
scas
enter
arpl
xchg
push
lock
icebp
xor
dec
mov
icebp
ljmp
add
jge
mov
lretw
add
aaa
cld
in
mov
inc
out
enter
addr16
pop
jbe
lock
and
push
int3
xor
sti
add
sub
outsl
or
xorl
push
and
hlt
mov
stos
mov
pop
jo
mov
mov
clc
sub
out
lahf
pop
movsl
mov
sbb
inc
ljmp
mov
and
les
sub
fsub
lds
or
dec
imul
pand
mov
and
addb
sbb
sub
dec
das
jbe
clc
lods
cmc
andl
mov
push
inc
mov
cmpsb
push
xchg
or
pop
rorb
and
add
mov
mov
pop
sbb
sti
xor
inc
mov
sbb
mov
jle
cmp
roll
push
test
jl
cmp
ror
push
dec
leave
icebp
xor
adc
ljmp
ficomps
jne
pop
hlt
lds
sbb
pop
jl
add
pop
sbb
mov
sub
mov
inc
pop
adc
outsl
out
int
jmp
mov
dec
inc
pop
mov
push
add
and
cmp
mov
aad
negl
push
push
inc
subb
cmp
out
call
add
nop
jno
inc
jb
push
mov
ficompl
xor
jecxz
ljmp
xchg
scas
in
inc
icebp
adcb
push
vcvtps2pd
sti
inc
xor
lods
aaa
push
sti
xchg
cmc
and
ja
dec
hlt
xchg
arpl
dec
cmp
inc
icebp
nop
lea
dec
js
sbb
sub
sub
nop
and
jb
mov
sarb
rorb
dec
pusha
in
loope
lea
dec
mov
out
adc
insb
cmp
rol
inc
mov
pop
and
sub
xlat
lcall
sbb
imul
pop
outsl
fs
and
insb
sub
test
push
adc
cli
mov
sti
cmp
push
cmp
xorb
in
pop
in
jecxz
or
lcall
test
mov
add
repnz
fs
roll
sbb
loopne
cmpsl
sub
xchg
push
inc
sub
adc
jnp
mov
das
data16
cwtl
or
enter
xlat
jp
insb
push
test
cmp
arpl
and
xor
xor
in
scas
shl
xor
aam
fcomps
push
es
or
push
push
xchg
lea
mov
adc
shlb
scas
daa
inc
ficoml
outsb
xlat
mov
clc
sub
mov
fs
cld
cmp
loope
icebp
popa
mov
jmp
test
int3
xor
outsb
fldenv
in
ja
sbb
and
jns
cmp
orb
mov
stos
xchg
test
pop
in
fcomip
leave
sbb
adc
insb
xchg
and
or
mov
fdivrs
push
and
in
add
sub
call
pop
cmp
aam
adc
ret
out
aaa
lret
mov
rorl
lods
jns
push
push
sub
xor
addr16
inc
int3
js
ds
stos
fstpl
adc
push
push
inc
imull
mov
mov
xchg
hlt
scas
cmpsl
lods
and
scas
mov
jmp
out
xor
adcb
mov
pop
push
sbb
add
out
mov
in
push
and
gs
andb
inc
xchg
push
pop
fwait
aas
lods
clc
iret
dec
out
pusha
shl
lret
cmp
xchg
sub
ret
idiv
add
shll
dec
xor
mov
insb
sbb
inc
sbb
inc
mov
push
or
mov
inc
xchg
jecxz
sub
mov
roll
loope
xchg
sbbl
or
inc
stos
insl
out
movsl
enter
jmp
and
lock
fisubrl
subb
pop
cwtl
cld
stc
fdivrl
sbb
jbe
es
jno
mov
rcr
dec
push
stos
bound
jmp
adc
mov
mov
mov
push
jns
adc
sbb
sarl
mov
jo
jne
ja
fidivrs
pop
cmp
lods
jp
in
push
shll
xchg
push
mov
loop
es
insb
ret
ja
lock
je
pop
jecxz
aas
jne
nop
adc
push
sub
mov
andb
dec
insb
push
mov
ret
jl
cmp
es
fdivrp
dec
jno
ja
ljmp
jns
fucomp
sub
fsubl
and
sub
sarb
daa
add
iret
sub
xchg
add
lds
push
movsb
mov
add
cmp
push
mov
jno,pt
or
cmp
cmp
sub
loop
lcall
lds
xor
and
or
test
sub
xor
lock
cmp
jae
xchg
mov
test
loopne
push
scas
jae
aam
xchg
add
push
add
cltd
loope
mov
insl
rorb
rcll
xor
in
leave
jb
out
jno
cmc
scas
cmp
push
or
push
jle
dec
ljmp
insb
sbb
dec
cmp
in
xor
adc
stc
add
leave
aas
repz
dec
jg
loopne
cwtl
push
mov
mov
test
arpl
dec
mov
xor
inc
jmp
ss
hlt
lods
mov
rclb
dec
sahf
adc
cli
filds
inc
cs
inc
mov
lcall
ret
xchg
sbb
push
stc
repnz
out
push
push
inc
lock
jne
arpl
mov
aad
and
mov
mov
into
loop
test
jno
mov
in
jae
sub
push
add
xchg
ror
mov
dec
in
adc
push
pop
out
cwtl
fwait
orl
xchg
rolb
sbb
sub
mov
orl
sbb
push
scas
push
bound
hlt
pop
hlt
adc
lock
dec
inc
aad
push
mov
mov
cmp
sbb
sbb
nop
mov
scas
fidivl
add
push
sti
dec
push
enter
push
jb
insb
out
leavew
adc
mov
or
andl
push
lock
test
arpl
mov
mov
mov
ret
jne
pop
and
jo
enter
popa
andb
pushf
xchg
mov
xchg
aaa
movsb
jge
lock
sub
jle
test
shr
fildll
fcmovnu
rclb
lcall
clc
repnz
push
pop
out
jg
inc
push
loope
mov
adc
mov
sbb
pop
les
iret
inc
jno
int3
idivb
pop
xchg
jg
cs
adc
ljmp
xchg
dec
clc
fstpt
adc
xlat
and
sub
mov
mov
pop
mov
pop
xchg
add
test
mov
jecxz
add
and
enter
int3
mov
insl
pusha
incl
mov
out
addr16
dec
out
mov
xchg
insl
fnstsw
mov
adc
inc
ja
insb
scas
mov
cmp
mov
out
jb
insb
push
pop
lret
movsl
clc
push
js
inc
add
lea
rorl
ds
repnz
inc
xchg
mov
adc
adc
aam
push
inc
repnz
pop
pop
pop
pusha
jle
fbld
adc
lds
fists
test
push
or
cwtl
add
mov
inc
sbb
cmc
adc
xor
dec
fwait
cld
adc
sbb
in
cltd
and
in
adc
mov
add
negl
rcr
add
mov
mov
fdivrl
adcl
ret
scas
mov
dec
outsl
cs
je
sub
pop
lcall
dec
cmp
sub
dec
mov
stos
ret
out
and
inc
mov
loopne
pop
pushf
outsl
sbb
adc
lahf
sbb
or
je
jne
push
mov
sub
xlat
popf
mov
jo
pop
mov
dec
data16
jl
dec
movsb
daa
sahf
jp
ret
ds
sbb
pop
shll
inc
addb
fnstenv
jg
adc
scas
js
jnp
test
lods
dec
insl
popf
loopne
enter
mulb
pusha
push
fwait
xor
hlt
mov
fmuls
mov
mov
xchg
inc
and
movsb
in
ret
xchg
and
in
adc
push
arpl
mov
adc
sub
ja
movsl
jp
imul
dec
push
arpl
call
pop
adc
push
je
mov
mov
pushf
push
cmp
clc
in
stos
xchg
rcll
mov
xchg
shlb
cmp
pushf
cld
pop
mov
xor
getsec
xor
push
cltd
ljmp
clc
and
lret
icebp
adc
add
dec
sub
sti
add
cli
jmp
ja
call
xchg
sbb
cmp
filds
mov
add
addr16
add
pop
movsl
add
sub
fs
mov
scas
sub
or
lock
mov
mov
dec
xchg
sub
adc
sub
loopne
sub
enter
ds
and
dec
shlb
rclb
fisubs
add
int
inc
jbe
xor
sub
lock
pop
stos
int
adc
pop
xor
mov
or
inc
aaa
mov
mov
push
dec
push
outsl
or
pop
and
inc
or
push
add
xor
outsb
xor
mov
pop
push
sarl
sub
or
mov
cltd
outsb
int3
xor
cmpl
pop
jae
mov
xor
jl
push
and
fcomps
in
mov
js
out
repnz
mov
push
push
inc
stos
rcr
xchg
push
jmp
movsl
sahf
es
cld
sub
aaa
je
or
cmp
inc
out
movsl
fdivrl
xchg
push
sub
in
inc
clc
mov
jno
das
call
fidivl
add
jge
mov
nop
subb
xchg
bound
inc
push
xor
dec
lret
movsb
das
adc
insl
pop
stc
ret
ss
in
mov
sbb
ret
rcll
xchg
xor
add
int
pusha
nop
loope
mov
pop
inc
int3
mov
clc
mov
and
fs
fs
aaa
inc
push
dec
and
inc
jae
pmulhuw
ret
lret
test
push
pop
xchg
cs
pop
cmp
add
pop
nop
in
pop
mov
nop
xor
leave
outsb
cltd
xor
test
je
cmpsb
xor
lods
sarb
jp
stos
cmp
cs
fs
or
jecxz
hlt
adc
js
inc
scas
and
dec
xor
lea
pop
xor
add
push
es
xchg
jo
test
xchg
cld
or
push
cmpsb
in
xor
lahf
or
mov
subb
pcmpgtw
outsb
mov
mov
pop
std
sbb
add
adc
fnstcw
pop
addr16
cmp
adc
push
cmp
sbb
out
sbb
insl
mov
mov
inc
mov
js
mov
leave
sub
mov
outsb
xchg
and
cmc
push
insl
out
jg
lahf
mov
test
sbb
mov
call
and
pop
xor
insl
call
and
test
pop
sub
cs
xor
cmpsl
dec
add
add
stos
cmp
adcb
popa
or
clc
movsl
or
jecxz
mov
sbb
push
pop
push
cmp
jns
mov
js
cmp
push
popa
jo
push
mov
rcl
xor
jae
scas
loopne
stos
and
pop
call
imul
push
stc
mov
test
insb
sub
add
push
and
and
jo
jmp
arpl
sub
fwait
fsub
and
jb
fwait
pop
fs
cmp
xchg
xchg
push
std
pop
int
stos
test
lock
je
pop
sbb
es
sarb
pop
out
add
push
sub
ds
sub
test
jl
fnstcw
xor
and
pop
pop
fsubl
mov
ficompl
dec
sub
cwtl
iret
push
insb
sub
outsb
ret
jp
dec
mov
ret
mov
fdivl
dec
mov
stos
popf
int
ds
inc
push
nop
pop
and
int3
shrl
mov
fiaddl
push
dec
loop
or
inc
in
or
stos
rcrl
aam
and
ja
sti
cli
mov
and
subl
dec
dec
enter
fisubs
imul
mov
inc
push
push
lahf
sar
jl
sete
int
sub
mov
scas
popa
mov
sub
subl
mov
xorb
jle
lock
xor
adc
dec
adc
leave
pop
popa
xor
in
test
pop
mov
adc
ljmp
xor
xchg
sti
dec
repnz
enter
xor
xor
cmpsb
xchg
mov
inc
xor
sbb
in
sbb
ret
push
fwait
insb
aas
es
in
pop
loopne
out
test
ret
ljmp
cltd
mov
adc
inc
std
ljmp
sarl
fsubs
in
dec
mov
push
or
mov
sbb
stos
mov
pop
and
test
movsb
sbb
add
sbb
jle
loop
dec
mov
mov
nop
mov
ss
aad
jle
lds
mov
xlat
add
pop
mov
inc
push
in
mov
fsts
nop
std
adc
imul
pop
mov
sub
and
adc
mov
pop
cld
or
push
and
aam
es
sub
jge
inc
xchg
in
test
sbb
mov
sub
jp
shl
jnp
dec
iret
pop
mov
push
mov
push
mov
test
aad
and
or
js
cmc
into
lock
fisttpll
jb
push
ficoms
loopne
bound
jg
push
jne
pop
lods
mov
orb
ljmp
add
jae
sub
adc
mov
push
push
lahf
xchg
push
push
imul
int3
not
jge
sbb
sbb
jns
mov
mov
xlat
pushf
mov
push
pop
or
ja
cmpsl
in
mov
push
adc
mov
push
jns
sbb
mov
outsl
fdivrs
mov
mov
pop
insl
rorl
fldt
mov
sub
lret
or
insb
mov
out
push
cld
pushf
popa
cwtl
into
cmp
fsubs
sahf
xor
xchg
sub
ja
jbe
cmpsl
stos
shlb
push
mov
int3
popf
stos
mov
outsb
out
or
scas
mov
scas
mov
mov
aam
clc
ret
lret
addb
pushf
call
add
fiaddl
pop
mov
xor
ficoml
popf
imul
mov
or
and
jge
iret
lcall
lret
inc
ret
pop
cmp
popf
inc
jl
or
fs
inc
mov
xlat
jge
jnp
cmp
les
js
sub
inc
xor
jmp
xlat
ret
movhlps
orb
ja
and
or
fcomps
dec
cltd
add
inc
push
rcrb
mov
aas
sbbl
sbb
inc
stos
mov
jg
sbb
mov
jecxz
dec
sbb
mov
lds
lcall
aam
std
push
int
movsl
aas
xor
push
fwait
dec
subl
les
jne
clc
fsubl
std
ficoml
fsubl
lock
movsl
aad
nop
fwait
int3
xchg
sbb
hlt
dec
pusha
xchg
dec
mov
and
and
cmpsb
xchg
dec
adc
fstpl
or
or
jmp
popf
jg
inc
hlt
pop
sub
leave
mov
xchg
xor
movsb
cmp
ja
sub
nop
repnz
pop
jbe
cmp
lret
jmp
jo
mov
add
xchg
inc
and
gs
xchg
enter
xor
test
insb
cmp
xchg
sub
pop
call
cmp
loop
out
sbb
int3
mov
lds
aam
cli
mov
and
into
rcrl
add
ss
and
jbe
mov
mov
loop
jmp
mov
add
inc
pop
jg
xchg
das
cltd
cmpsb
out
pop
push
xchg
and
mov
cld
cld
adc
or
or
adc
shll
fcomps
filds
mov
mov
fcom
sbb
pop
dec
fs
push
push
lret
adc
jge
cmp
adc
or
je,pt
xor
jmp
xchg
mov
jmp
mov
stc
aaa
adc
mov
mov
ret
les
xchg
xchg
add
inc
xor
outsb
add
bound
divb
cmp
cld
ret
xchg
lods
test
clc
or
dec
cmp
adc
mov
int3
dec
bound
int3
fdivl
adc
scas
bound
insb
mov
inc
hlt
cmc
sahf
add
sbb
sub
ret
lahf
pop
jo
aad
aam
repnz
sub
pop
adc
cmp
out
repnz
push
and
pop
or
and
inc
stos
mov
pop
add
push
or
mov
and
sbb
push
xchg
cwtl
aam
fnstsw
rcll
es
add
dec
jne
mov
jmp
in
push
jbe
outsl
push
add
push
sub
xor
add
loop
scas
adc
inc
dec
cmpsl
addr16
das
andl
icebp
int
bnd
mov
ja
mov
loope
add
mov
int3
pop
lret
add
test
sbb
xchg
lahf
adc
lret
out
pop
and
inc
aad
pusha
jnp
js
push
loop
lahf
push
movsb
push
ss
cmp
into
sti
mov
dec
fwait
jl
sub
fcompl
ljmp
adc
xor
aas
lret
mov
or
jecxz
sbb
push
and
xchg
cmp
push
xor
mov
ds
adc
iret
mov
popf
sbb
push
sub
movsb
callw
jno
aaa
or
jns
mov
sarb
mov
lahf
mov
push
loope
jmp
test
mov
xorb
inc
xor
adc
in
flds
int
xor
decl
jne
clc
xor
pushf
or
push
cmp
add
adc
sub
add
xor
inc
and
aas
int
sub
xor
dec
fisubrs
int
or
jb
adc
out
loopne
vsqrtsd
and
ss
cmp
pop
dec
nop
fldcw
cmp
in
xlat
lea
or
pop
ja
lods
jecxz
dec
xor
popa
movsb
mov
fbstp
push
lcall
inc
sbb
daa
sub
hlt
or
test
or
xchg
dec
mov
cs
inc
dec
mov
mov
inc
inc
xchg
cmc
cmc
inc
cmp
jae
adc
xor
stos
mov
cwtl
fildll
or
adc
mov
sbbl
push
aas
adc
jge
sbb
xor
movsl
shl
add
mov
subl
por
xor
sub
jnp
ret
jnp
test
dec
scas
not
fwait
rorb
dec
cmp
testl
mov
iret
pop
xchg
iret
popf
xor
fisttpl
inc
les
or
xor
push
imull
inc
xchg
mov
sbb
sbb
mov
xor
imul
xchg
push
imul
xchg
loop
call
fsubrs
adc
adc
inc
out
pushf
jns
jb
add
pop
test
jg
sbb
lods
inc
jns
pop
jae
enter
mov
push
dec
push
rol
cmpb
movsl
xorl
mov
test
es
add
mov
pop
fistl
mov
leave
mov
xlat
arpl
xchg
outsb
sbb
rcl
jnp
aaa
inc
xlat
sbb
xchg
fbstp
jle
or
inc
mov
and
testl
call
sub
or
pushf
rcrb
xlat
jl
mov
cmp
test
loope
xchg
add
add
add
inc
cltd
out
ja
jo
movl
std
rcll
aad
and
shl
cmp
fwait
mov
icebp
movsb
pop
mov
mov
mov
ss
cmpl
mov
push
fbld
fwait
fs
sbb
or
sbbl
xchg
scas
cmpsl
xchg
lcall
test
mov
sahf
ror
xchg
fistl
jo
lahf
pop
jo
iret
jo
call
imulb
cmpsb
push
and
xor
fldt
and
lahf
xor
mov
jae
and
or
fwait
sbb
aaa
lahf
in
mov
mov
clc
xchg
xor
imul
sub
inc
iret
fisttps
out
pop
mov
push
repnz
and
ret
lcall
sub
les
iret
jge
xlat
int3
fcomps
pop
test
int3
aaa
aad
int
dec
lret
cwtl
and
sub
bound
xor
arpl
in
sahf
cld
mov
add
xchg
add
pop
das
cmpsb
adc
leave
mov
or
xor
lds
outsl
or
xor
sbb
and
jle
sbb
inc
push
inc
jbe
inc
cmpsl
dec
enter
xchg
sti
repnz
mov
mov
es
jecxz
jmp
repz
xor
dec
insb
mov
jl
aas
inc
dec
shrb
gs
xor
movsb
cmp
sti
lock
sub
fldenv
mov
pop
jbe
vxorpd
xchg
stc
jge
pop
push
je
jp
lret
jl
cli
rolb
sahf
dec
mov
mov
sub
mov
scas
int3
leave
shrl
jmp
pop
testb
insb
mov
cld
pop
dec
out
sub
mov
mov
loop
test
std
fistl
in
or
mov
push
leave
add
fisubs
rclb
js
inc
out
hlt
movsl
sub
inc
pop
sbb
jmp
pushf
cmpsl
xor
icebp
or
jne
out
cmp
fmull
xor
icebp
adc
pop
es
dec
push
ret
cmp
mov
cmp
and
cmpsl
dec
inc
in
jmp
lods
and
lods
jg
sbb
pusha
lahf
pop
and
enter
add
das
or
dec
pop
inc
lods
dec
xchg
subb
add
pusha
imul
add
cmp
sbb
xchg
add
jae
ret
xchg
loope
mov
dec
xor
mov
filds
out
jne
scas
pushf
jno
pop
lret
bound
mov
into
mov
addb
pop
xchg
in
je
and
leave
pop
pop
je
push
mov
sbb
cmp
mov
ds
fcoml
jmp
push
mov
test
push
es
sbb
and
fdivrp
aad
mov
sbb
mov
dec
xchg
je
push
repz
test
inc
loopne
push
and
add
adc
imul
lahf
xchg
aam
test
sbb
sbb
iret
sarl
mov
mov
jle
xchg
inc
out
loop
push
sbb
xchg
and
dec
push
mov
arpl
jo
add
lret
push
in
ss
es
or
push
pop
xor
andl
mov
mov
xchg
mov
call
movsl
repz
cltd
dec
inc
sub
dec
repz
jb
bound
sub
std
jnp
mov
push
scas
out
mov
inc
notb
incl
mov
sbb
ret
ss
cld
repz
dec
mov
test
popa
jecxz
jle
sbb
movsb
xchg
mov
or
arpl
js
idiv
jnp
clc
inc
cmp
fldenv
jno
out
dec
sbb
aad
add
sub
cltd
cmp
std
test
pop
mov
push
jge
mov
mov
dec
in
shrl
xchg
nop
fsubrl
push
insb
fsubrl
dec
adc
loop
stos
xchg
dec
sub
xchg
cltd
adc
cmp
imul
aas
sub
xchg
adc
fs
clc
out
mov
cmp
stc
cmp
call
test
je
loopne
xlat
aad
inc
mov
cmc
loop
sti
or
test
pop
les
sub
int3
inc
lea
in
jl
mov
cmp
call
aad
jns
push
pop
out
inc
sub
inc
mov
and
aam
cwtl
xchg
jp
jl
jb
hlt
jae
add
jbe
in
ss
mul
lock
sbb
fisubrl
out
sub
or
dec
dec
inc
sub
inc
and
push
loopne
rcr
ja
mov
inc
mov
mov
out
stos
test
adc
fwait
adc
jp
aas
sub
aam
je
in
not
fmuls
mov
dec
cmpsb
ja
sarb
data16
lret
xchg
lods
scas
xchg
inc
outsb
pop
inc
mov
aam
push
jne
dec
sbb
or
xor
out
mov
xor
iret
scas
pop
lds
sub
nop
in
dec
lds
xchg
popf
sub
jmp
and
add
dec
jne
xor
loopne
mov
sub
addr16
in
ficompl
xor
xchg
test
imul
cld
fdivs
and
popf
mov
xchg
es
mov
adc
push
inc
or
bnd
arpl
int3
cli
out
test
jp
popa
lods
mov
push
outsl
lods
xor
insb
cmp
fcoms
in
stos
adc
adc
jne
in
fiadds
popf
cltd
mov
push
push
lcall
and
mov
push
xor
dec
movsb
xlat
inc
inc
shlb
out
outsb
xchg
or
scas
outsl
mov
repz
dec
push
jne
xor
adc
mov
push
adc
inc
dec
cmp
sbb
es
loopne
add
mov
inc
push
and
les
je
pop
sub
adc
mov
mov
jmp
xchg
negb
adcl
push
les
mov
jb
xor
push
iret
enter
test
mov
arpl
int
adc
ret
scas
fldt
lahf
sub
jmp
negl
push
inc
test
repnz
and
jmp
loop
xchg
dec
xchg
ret
lahf
sbbl
inc
dec
and
cs
add
cld
sarl
cmpsl
inc
into
lea
loope
insb
fisttpl
push
fcomps
and
outsl
add
sti
or
push
jle
dec
xchg
lahf
out
pop
push
dec
fstpl
rorl
xchg
sub
jbe
cmpsb
ret
and
push
mov
sarl
shlb
out
fld
jb
mov
insl
fwait
jo
outsb
imul
fsts
je
into
adcl
pop
fwait
loop
push
xchg
inc
or
push
push
mov
dec
cld
les
xor
imul
xchg
xor
add
popf
mov
pusha
hlt
push
in
dec
stos
lcall
xchg
arpl
inc
lcall
cmc
push
insb
sti
sbb
pushf
sub
lock
jnp
dec
lods
cmp
seto
or
aaa
mov
out
mov
aam
mov
lock
bound
cmp
inc
call
mov
in
test
push
rorb
xchg
mov
push
ret
out
arpl
fwait
xchg
movzbl
mov
jg
jb
adc
inc
das
outsl
add
adc
mov
or
call
pusha
or
pop
xor
std
mov
mov
ficomps
xor
ja
sahf
stos
xchg
repnz
call
xchg
cmp
sti
aaa
dec
insl
mov
cmp
std
test
and
cld
push
dec
inc
out
fisttps
or
or
fists
xchg
cli
xchg
mov
push
imul
adc
adc
add
shl
sub
adc
pop
dec
inc
pop
insb
cltd
cmp
sbb
jns
ljmp
testb
sbb
adc
pop
std
mov
addb
fisttps
outsb
iret
ss
mov
scas
xchg
jl
mov
xchg
fistps
ljmp
cmc
repnz
les
data16
stos
mov
adc
int
ss
mov
cltd
mov
dec
lods
pop
aad
jo
mov
stc
mov
lret
mov
xchg
sbb
xchg
jge
int3
loope
sarb
xchg
sbb
mov
pop
jge
jae
xlat
test
add
sbb
inc
mov
pop
addr16
cmpsl
xchg
out
shrl
mov
jo
and
inc
jno
add
cld
jne
decl
repnz
and
mov
pusha
lret
cmp
sub
push
scas
movsb
arpl
mov
enter
pusha
cmp
xor
je
mov
call
xchg
pop
inc
inc
adc
stos
lods
cmp
inc
pop
sti
iret
cmp
stos
xchg
ds
mov
int3
shr
cwtl
push
mov
test
adc
into
jp
call
cmpsl
adc
cmp
pop
shr
js
ljmp
outsl
mov
test
add
mov
in
imul
stc
fwait
adc
andb
inc
scas
inc
add
loope
pop
cltd
sbb
cmp
aad
mov
ficoms
xor
jae
add
and
add
xor
mov
or
adc
xor
push
lcall
xchg
jge
xor
and
dec
popf
int
hlt
aam
lret
adc
into
or
pop
test
pop
xchg
stos
cs
and
add
call
fldcw
aas
jecxz
or
cmc
cmp
in
pushf
nop
fldcw
xchg
hlt
testl
sub
xor
testl
xor
loop
jge
mov
adc
stos
sbb
test
mov
clc
cmp
mov
mov
ret
fwait
repz
mov
scas
push
pop
imull
jne
jmp
or
inc
in
cmp
aam
movsb
jno
mov
bound
adc
addr16
rolb
ret
jnp
jnp
sub
pop
mov
cmp
das
sub
test
mov
sbb
es
jb
enter
dec
shlb
jb
test
les
jg
iret
ret
repnz
roll
and
es
cmp
adc
mov
pusha
movsb
mov
jne
incb
pop
rorb
xchg
push
dec
ja
lods
int
es
insb
sbb
fiadds
dec
or
push
je
lods
adc
add
xchg
leave
shl
xchg
sub
popf
and
and
jne
cmp
push
ret
xor
pop
add
adc
cltd
and
pop
fwait
cld
inc
das
mov
loopne
xor
pop
js
and
cli
out
inc
or
ret
mov
xor
daa
jne
insb
les
pushf
in
cmp
into
dec
repnz
js
sub
adc
enter
jnp
push
gs
mov
lret
mov
out
mov
shrl
aam
jmp
jmp
jg
jns
or
and
sahf
jb
outsb
popa
xchg
jnp
movsl
mul
aam
mov
shlb
adc
mov
sbb
or
es
jne
cmp
enter
push
adc
push
sbb
and
sub
lcall
mov
cmp
xchg
mov
je
sbb
or
jg
or
fidivs
cmp
fsubrs
sub
jp
push
loop
push
pop
mov
jmp
paddusw
inc
push
pusha
aaa
pop
dec
pusha
ret
iret
push
xlat
push
lret
pop
daa
mov
and
fadd
sub
pop
loope
jge
inc
shl
xor
testl
out
cld
sbb
dec
jecxz
inc
sub
xor
inc
sub
sti
xorb
loopne
lock
and
das
mov
pop
scas
mov
jne
ss
cmpsb
imul
xchg
subl
movb
dec
mov
sub
fidivl
jge
jp
repnz
in
das
popa
dec
mov
cwtl
mov
sub
out
push
pushf
call
dec
and
sub
imul
lds
out
cmp
pop
inc
sub
push
add
orl
jns
stos
sahf
and
outsb
out
je
nop
adc
xor
or
aad
add
outsl
and
hlt
mov
test
jecxz
dec
adc
jl
jns
movsb
pop
xor
sahf
mov
and
pop
inc
out
mov
fsubr
hlt
out
fsubr
jno
test
push
stc
ror
mov
aas
push
out
out
out
push
cmp
cmp
xor
push
sarl
fmuls
xchg
sbb
adc
mov
stos
imul
lods
jle
xor
sub
push
cli
sahf
aad
das
cpuid
scas
cmpsb
push
roll
lret
jle
popf
sbb
mov
test
mov
sub
ficoml
mov
shrl
lahf
mov
cmp
testb
dec
xchg
fiadds
stos
mov
jno
lcall
mov
rcr
sub
data16
outsb
lock
test
fimuls
inc
mov
sbb
in
jnp
jle
jg
lock
cli
cmpsl
and
fsubs
mov
std
je
pop
arpl
idivl
push
es
es
cmp
mov
lcall
dec
fmuls
mov
xor
call
cmp
cld
dec
pop
sbb
dec
int
js
les
stos
or
lcall
jge
js
out
fdivr
dec
js
pop
cmovo
mov
das
arpl
push
iret
push
xchg
push
les
nop
ss
xlat
repnz
bound
icebp
jb
loop
out
fs
sbb
sbb
imul
jns
jb
push
xor
fsubr
aaa
int3
lock
cmp
cmp
mov
dec
sti
sbb
xchg
cmp
hlt
sub
cmpsl
jp
mov
and
xlat
addr16
pop
mov
jb
xorb
stos
mov
mov
jo
mov
mov
push
jp
pusha
mov
mov
mov
cmp
xor
enter
xor
pop
adc
in
inc
xchg
add
add
xchg
add
xchg
sbb
ficomps
fwait
xchg
popf
pop
pop
stc
ret
sub
jne
add
mov
sub
xchg
sti
push
cli
jmp
push
pop
or
xor
pop
xor
cmp
inc
nop
nop
adc
push
hlt
push
ja
mov
xchg
movsb
adc
mov
ud2
mov
outsb
sbb
fld
sarb
pop
in
addl
mov
lret
xchg
jmp
inc
std
jbe
xor
mov
in
daa
gs
mov
mov
push
mov
mov
scas
aaa
add
test
mov
aas
or
fs
fisttpl
add
mov
jmp
mov
movsb
repnz
mov
loopne
push
mov
ja
push
cmc
ljmp
adc
repnz
cmpsb
sbb
lock
cmp
adc
push
inc
mov
cmp
repz
mov
stc
mov
dec
in
cmp
cmpsb
xchg
insb
mov
cltd
jmp
xchg
mov
daa
xchg
test
push
in
cmpsl
jne
gs
shlb
stc
insl
cmpsl
jo
test
aad
imul
test
pop
sub
xor
pop
push
test
int
pushf
fwait
rcrl
inc
jb
inc
mov
in
sahf
mov
stos
movsl
ds
or
addl
pop
and
adc
xor
test
adc
int
xchg
adcb
ret
insl
popa
mov
xlat
mov
test
fsubrl
fistpl
stos
ja
and
xor
aas
mov
mov
push
mov
mov
dec
sub
loopne
ficoms
ret
inc
fs
ret
mov
test
hlt
jle
jnp
sub
pop
pusha
int
rorb
lods
enter
sbb
sbb
inc
jp
cmp
pushf
mov
adc
dec
lods
xchg
jbe
sub
or
mov
aam
or
fs
add
inc
or
int
ljmp
pop
jl
or
push
cltd
ret
insl
pop
pop
ret
outsl
into
lock
dec
lret
jl
xchg
in
pop
add
scas
pop
push
ror
lahf
mov
sub
insl
mov
fidivrs
push
scas
jmp
xchg
ljmp
lock
aas
mov
mov
into
mov
cmp
mov
cwtl
bnd
adc
xchg
imul
cs
sub
push
jo
dec
ja
into
cmc
jmp
shr
push
and
fdivrs
xchg
push
ficoml
push
mov
and
mov
popa
cmp
xor
bound
ss
rorl
and
push
and
mov
push
pushf
xchg
rcll
and
addr16
pop
xor
test
aad
push
popa
mov
and
lock
xor
sub
mov
stc
jbe
jecxz
sub
pop
jmp
mov
mov
jbe
inc
mov
or
jl,pn
pop
pop
mov
pop
push
add
pop
mov
sti
or
bound
push
ror
jmp
sub
sbb
aam
jae
push
xchg
negb
xor
or
sub
push
adc
sub
out
fsts
repz
sub
aas
es
xchg
pop
adc
mov
or
mov
cli
test
mov
mov
insl
std
or
adc
shrb
push
sub
lds
pushf
loope
xchg
ss
aaa
das
and
imul
test
lss
pop
jl
gs
mov
push
pop
fwait
das
pop
jbe
xchg
mov
adc
pusha
mov
or
insb
xchg
rorb
inc
jge
sub
jp
cmp
js
lods
sub
fadds
pop
in
test
test
movsl
cmp
add
jne
fwait
lret
xor
push
xchg
add
xchg
inc
fwait
sti
cli
and
movsb
push
jns
sub
ljmp
dec
aam
jle
js
jns
and
mov
mov
ljmp
arpl
cmp
mov
mov
pop
insl
sub
pop
xor
fadd
and
lahf
movsl
xor
repnz
ja
fidivrs
adc
sub
loop
fldt
mov
inc
in
xor
orb
sbb
into
pop
pushl
out
push
inc
cli
call
xor
loop
inc
jno
nop
mov
pop
dec
hlt
sbbb
mov
or
sub
out
cmp
pushf
data16
pop
std
pop
lds
repz
add
mov
addr16
clc
xchg
mov
sub
addr16
repnz
imul
jle
es
sub
cmpsl
ret
lods
mov
nop
push
mov
pop
sbb
xchg
aas
stos
bound
rcr
xor
mov
sub
mov
dec
insl
push
sub
enter
icebp
enter
inc
xchg
jmp
lcall
andl
pop
rorl
sub
pop
xor
adc
cmp
adc
mov
clc
push
cli
insb
mov
loope
mov
mov
xor
pop
imul
jecxz
push
jecxz
popf
adc
push
stc
sti
std
cmpsl
xor
sti
pop
mov
repnz
add
mov
xor
push
dec
cmpsl
jbe
data16
fwait
lods
in
outsl
pop
push
mov
out
pop
mov
sti
sub
ljmp
and
cmp
push
sbb
pusha
push
xlat
lods
movl
push
insb
inc
xor
mov
fidivrs
fdivrs
jge
mov
xor
fnsave
pushf
mov
jnp
imul
push
xchg
cmpsl
sbb
aam
jns
push
jp
mov
imul
aad
test
mov
sub
push
clc
jne
sbb
push
xor
push
pusha
mov
ja
push
stos
jbe
pop
or
lds
push
out
imul
jno
insl
xchg
xor
fists
loope
or
xchg
pop
sub
push
movsl
xor
cmc
jno
push
push
or
movsb
adc
fucom
mov
inc
mov
movsb
jb
cmpsb
fwait
cwtl
jne
jae
xchg
in
inc
xor
je
mov
fiaddl
or
test
in
pop
idivb
addl
mov
pop
ret
xchg
shr
or
dec
jnp
mov
test
test
popf
mov
das
je
shlb
das
mov
mov
inc
xchg
loope
sub
int
pop
mov
faddp
add
xor
ss
dec
dec
into
add
dec
sub
mov
nop
xchg
and
in
gs
fldt
shl
adc
fisubrl
arpl
pop
nop
fwait
xor
push
and
cmpsb
call
mov
xor
pop
movsl
lods
mov
push
adc
pop
inc
add
mov
int
pop
aaa
and
sbb
jle
pop
or
cmp
repnz
sbb
sbb
cmp
mov
sbbl
cmp
outsb
scas
and
arpl
es
dec
lds
stc
cmp
les
mov
movsb
dec
or
inc
lcall
arpl
inc
pop
xchg
test
pop
lretw
mov
shrb
aam
adc
adc
stc
mov
and
mov
popa
mov
adc
pop
and
dec
mov
push
aaa
data16
jmp
mull
sbb
xchg
add
in
jae
inc
or
stos
cmpl
ds
mov
fmull
inc
in
push
push
in
bound
outsl
ret
xor
stos
std
ljmp
mov
xchg
enter
pusha
push
jle
pop
adc
lret
dec
mov
and
insb
mov
and
loop
std
xor
push
jae
xor
pop
mov
mov
das
push
dec
dec
pushf
pop
insl
or
mov
imul
xchg
pop
in
mov
xchg
add
push
sbb
push
xchg
sbb
pop
mov
push
outsl
call
outsl
adc
sub
movl
cmp
sar
jo
sti
ss
xchg
dec
add
xor
stc
fldt
or
out
lahf
add
and
fstpl
and
xchg
mov
scas
int
notb
or
adc
decl
push
jbe
data16
or
pop
xchg
cld
pop
or
or
sbb
push
push
clc
out
and
sbb
xor
fnstcw
inc
rcr
mov
adc
mov
jne
pop
pop
mov
sub
jne
xchg
jle
adc
sbb
pushf
xchg
sahf
jne
mov
push
aam
movsl
sub
push
sub
scas
ds
shll
cmp
dec
cmp
stos
pushf
ljmp
cmp
cli
in
cmpsb
mov
pop
rcrl
popf
or
dec
ljmp
in
idiv
inc
mov
addb
fs
xlat
out
adc
out
dec
nop
mov
dec
or
pushf
pop
pushf
js
sub
out
daa
dec
movsl
adc
add
testb
sub
lret
pop
cmp
inc
hlt
xor
fidivrl
ds
insl
fcmovb
hlt
mov
insb
cmp
push
fisubrs
aaa
incl
aas
jle
fs
pop
dec
cmpsb
mov
cmpsl
inc
aas
pop
dec
xor
out
ds
mov
sub
aas
repz
insb
add
jg
ret
add
xchg
adc
aaa
call
nop
sub
inc
cmp
dec
frstor
add
test
test
les
push
push
dec
data16
adc
hlt
orb
cwtl
push
hlt
mov
jg
push
xchg
and
loope
dec
mov
pop
mov
pop
lods
mov
push
mov
hlt
cltd
dec
mov
sbb
inc
xor
faddl
adc
aaa
out
in
cmp
jbe
inc
outsb
inc
addr16
adcb
mov
xchg
mov
inc
ret
jecxz
cltd
pushw
cmp
aad
jnp
cmp
dec
xor
adc
xor
push
cmp
shlb
vucomisd
inc
mov
pop
lods
popa
add
cmpsb
xlat
jnp
jp
pop
jge
lahf
movsl
add
push
das
fstpt
mov
aam
test
push
mov
push
call
push
xchg
orb
push
outsl
mov
pop
test
lods
push
inc
mov
jnp
fists
pop
jg
cld
adc
sbb
or
cltd
pop
lods
js
mov
xlat
sti
jmp
je
fisubrl
inc
cmp
adc
loope
sub
xchg
push
shlb
lods
mov
adc
xor
or
push
jo
dec
inc
in
test
xchg
sub
cwtl
in
ds
hlt
mov
xchg
in
adc
fsubs
fiadds
bt
add
add
mov
lret
into
sbb
jp
cmp
jno
jg
ja
lret
movsb
mov
jns
cmp
adc
xchg
push
aaa
dec
fwait
lret
sbb
loopne
jno
push
hlt
add
add
popf
adcl
jb
cld
ret
pop
sbb
data16
outsb
pusha
mov
xchg
xchg
mov
dec
imul
out
inc
aad
xchg
addb
scas
mov
dec
sub
sub
jne
pushf
fstpl
push
icebp
dec
xor
cld
inc
sub
dec
sub
movsl
mov
mov
add
icebp
mov
cmp
nop
shl
fcomi
mov
push
jno,pt
sub
icebp
xlat
jne
lods
jl
mov
cmc
fwait
dec
setb
loope
pop
xor
test
xchg
fwait
push
adc
lock
fs
xor
js
aaa
push
and
xor
pop
cmp
dec
clc
mov
pop
mov
and
mov
push
icebp
push
add
pushf
dec
dec
xchg
negb
push
ret
pop
mov
test
mov
adcb
adc
mov
inc
jmp
adc
adc
adc
aam
mov
and
mov
call
ret
push
fidivl
test
fcmovne
shlb
rol
and
xchg
push
dec
push
dec
cmpb
test
inc
mov
jne
jns
push
addr16
fs
push
inc
popa
mov
and
mov
mov
ljmp
mov
outsl
lcall
cltd
imul
mov
jae
mov
int3
sbb
icebp
les
add
lahf
add
push
mov
test
imul
jge
jg
nop
xchg
aaa
adc
cmpsb
push
pop
pop
fisubrl
adc
or
pusha
into
mov
fldl
les
cmp
and
int3
sub
cmpsb
or
lods
xchg
test
adc
stos
aaa
push
sti
les
in
push
gs
and
mov
insb
cmp
mov
xor
cmp
mov
push
or
decl
mov
lret
pop
add
rcll
xchg
jbe
sahf
outsl
pop
mov
or
ss
xchg
test
mull
xor
or
and
out
adc
inc
mov
mov
xchg
in
jns
pushf
add
pop
cmp
dec
fstl
mov
adc
lahf
rolb
xlat
xchg
mov
jmp
sub
push
inc
rolb
pop
xchg
jle
pop
les
pusha
das
add
mov
mov
clc
push
sub
repz
lcall
push
sbb
es
sub
insl
or
jo
test
add
or
or
jae
sub
enter
cmp
outsb
sub
jle
and
xor
aad
cltd
add
rcr
push
ret
xchg
and
fwait
add
push
jmp
add
adc
int
inc
mov
cs
and
sbb
adc
inc
and
fmull
repnz
or
sub
pop
fwait
mov
lret
xor
insb
mov
xchg
mov
popa
cs
mov
cmc
mov
add
enter
jns
and
mov
cmp
in
cmpsb
jecxz
sub
repnz
addr16
imul
add
aam
mov
jmp
loopne
mov
icebp
xchg
sub
subb
idivb
ja
lods
mov
pushf
cmp
cwtl
inc
test
xchg
xchg
xchg
jbe
sbb
cs
jle
push
ss
pop
movsl
sbb
push
pop
orl
sub
aam
push
scas
xlat
jge
fisubl
mov
push
mov
insb
fdivl
flds
test
and
divb
adc
lret
sub
xor
jp
mov
pop
inc
daa
sbb
jl
repnz
rcrl
adc
mull
ss
imul
xchg
cltd
add
fistps
dec
cmc
and
fnstsw
ss
fnstcw
inc
cmpsb
jl
sti
add
jne
jge
xchg
jns
jmp
mov
or
repnz
test
test
gs
jecxz
fisubrs
sbb
xchg
testl
mov
aas
aad
rorb
adc
cltd
mov
loope
pop
movsb
add
mov
dec
dec
lret
mov
jecxz
aaa
popa
loopne
test
mov
imul
movsb
test
testl
imul
jg
sti
addr16
fwait
lods
lcall
testl
sbb
lcall
pop
mov
xor
cs
fdivp
mov
mov
vcvtsi2ssl
stos
into
movb
mov
mov
mov
inc
insl
pop
dec
or
jo
sub
inc
faddl
clc
mov
push
pop
xor
sub
mov
mov
imul
and
xor
jp
jns
mov
gs
iret
dec
mov
lret
add
das
cld
cs
add
pop
sahf
je
push
and
mov
or
inc
lods
cwtl
jae
scas
jbe
add
cmc
call
mov
jb
sub
ret
inc
out
popa
cld
pushl
aas
fwait
jb
sub
test
fwait
nop
xor
outsl
pop
push
push
sub
push
fld
push
or
lods
sub
mov
mull
adc
and
and
mov
or
in
mov
add
imul
aaa
or
xor
das
aam
adc
sub
or
jmp
in
sub
cmp
imul
aas
out
and
insl
mov
xlat
cmp
jnp
jl
shll
push
ret
test
adc
inc
xchg
lea
icebp
shl
push
mov
pop
or
pop
jo
mov
out
scas
pusha
sbb
fnsave
xor
mov
repnz
faddl
mov
push
cmp
lods
or
sub
xchg
outsl
xchg
fldz
mov
cmp
testl
shl
lods
jecxz
out
ljmp
adc
jbe
cmp
xor
sub
xchg
mov
sbb
aas
xchg
fisubrl
loop
nop
rcrb
mov
xchg
and
adcb
adc
pop
test
and
daa
enter
test
out
das
fstl
and
out
adc
fisttps
stos
lds
xor
mov
popf
jmp
stc
lret
dec
insb
jge
cmp
adc
mov
pop
mov
inc
add
and
sub
das
and
adc
sbb
dec
adcl
daa
push
lods
or
int3
xchg
test
xchg
pusha
movsb
iret
cmpsl
cmp
jl
int3
push
or
add
mov
sub
add
jl
jns
jns
aas
pushf
clc
fcomp
xchg
out
sub
cmc
mov
aas
xchg
mov
adc
sub
pusha
xor
or
pop
push
lods
jp
inc
clc
test
adc
sbb
xor
add
ret
nop
or
adc
popf
and
fisttpll
fmull
push
mov
loop
adc
gs
sub
add
push
xchg
xchg
je
cmp
stos
in
push
pop
dec
sub
inc
pop
addr16
test
adc
sub
xchg
les
mov
data16
aas
jae
sahf
xchg
mov
stc
push
push
inc
mov
scas
dec
cld
adc
out
fcmovb
inc
movsl
mov
scas
pop
xor
nop
and
dec
mov
bound
inc
add
int
add
mov
xchg
jbe
dec
add
pop
or
mov
sti
lock
nop
lret
lods
cmpsb
outsl
insl
pushf
jo
mov
pop
sub
adc
xlat
push
xchg
sub
aam
fs
mov
jo
adc
pushf
ret
loope
sarl
push
xchg
mov
les
xor
mov
mov
andb
or
sbb
xchg
xlat
add
ljmp
jg
push
lea
push
enter
stos
add
lods
mov
sarb
fadd
dec
iret
and
imul
cmp
xor
cmp
lods
pop
in
inc
mov
ret
jge
lea
lahf
es
pop
xchg
push
cltd
xchg
ficoms
imul
ret
cmpsb
xchg
sub
fsts
mov
fisubrl
popf
mov
mov
inc
aad
leave
lahf
cli
ss
cmp
dec
pop
sub
sbb
in
fdivl
push
ret
add
cmpsl
xchg
fnsave
int
cmc
sub
cwtl
xor
pop
dec
fsubrs
push
or
inc
xorb
imul
mov
and
adc
and
adc
jp
mov
cmp
loope
or
repz
mov
cmp
je
imul
in
mov
pop
push
push
sub
adc
cmp
repz
leave
das
lea
mov
imul
sub
sti
and
inc
mov
sub
mov
cmp
mov
push
stc
popa
lret
mov
jbe
mov
or
cmpsb
push
xchg
fwait
inc
dec
ss
stos
cmp
loopne
pop
jo
pop
decl
fbld
dec
shrb
add
hlt
imul
inc
aas
or
fdivr
xchg
hlt
xchg
orl
mov
ljmp
inc
inc
mov
or
stc
gs
xchg
add
data16
or
mov
int
mov
in
inc
and
test
inc
lret
cmp
loopne
std
mov
inc
adc
icebp
mov
dec
das
lds
test
pop
dec
add
mov
cmp
loop
mov
insl
cmpsl
pop
jns
ficoml
sbb
mov
xor
and
inc
cltd
in
adcl
mov
fs
and
xchg
mov
jae
pop
icebp
aaa
movsb
cmp
pop
iret
fsubs
cmp
mov
mov
dec
stos
and
arpl
lcall
addl
add
cmp
cmp
or
stos
pop
mov
mov
push
inc
ret
sub
push
in
mov
cmpsb
arpl
insl
push
xor
and
push
adc
xchg
inc
scas
rcrb
pop
ljmp
dec
xor
popf
lahf
jae
enter
mov
cmp
xchg
into
or
sub
pushf
dec
mov
in
scas
xchg
inc
and
mov
out
fisttpl
insb
data16
in
cs
pop
decb
in
test
lods
ljmp
imul
lock
into
imul
inc
mov
push
push
and
repz
fsubr
mov
hlt
adc
je
dec
lods
push
adc
xor
xchg
mov
sbb
pop
xchg
ret
adc
xchg
daa
mov
cmp
ss
adcl
jmp
ds
inc
fsub
fidivs
and
cmc
mov
iret
cmc
push
or
clc
aam
push
in
adcb
lds
or
ret
ja
in
outsb
and
jbe
out
adc
sbb
mov
cmp
xor
dec
stc
enter
add
xchg
dec
mov
outsb
js
xchg
outsl
lcall
lods
aad
test
add
sub
negl
scas
dec
or
clc
adc
cld
inc
sub
and
popf
pop
call
cltd
sti
int
inc
fstp
daa
mov
xor
shll
xchg
push
movsl
nop
aad
and
sbb
and
mov
cmc
mov
xlat
dec
mov
pop
xchg
rolb
jns
xor
add
lods
int3
sub
iret
pop
fwait
ljmp
xor
xor
out
mov
sbb
je
mov
mov
cmp
xor
in
mov
hlt
sbb
lea
in
sub
data16
xor
jo
pop
push
sbb
adc
xlat
cmp
int
jmp
dec
mov
sbbb
jp
scas
sahf
xchg
in
cmpsb
arpl
outsb
pop
add
mov
scas
fwait
shll
aam
int
mov
sbb
clc
movsb
xor
jle
add
ss
aam
xchg
cmc
ret
adc
sbb
or
sub
mov
mov
mov
mov
mov
or
les
into
mov
pushl
xor
popa
pop
mov
stos
stos
push
aaa
or
out
shrl
adc
ret
mov
sub
xchg
cli
xor
xor
and
push
push
stos
jg
iret
imul
mov
or
rolb
mov
rolb
sbb
ss
dec
cmp
dec
loop
outsb
push
movsb
jnp
mov
shlb
in
jmp
ret
cmp
movsl
mov
mov
xchg
jg
test
or
idivl
imul
mov
inc
or
push
dec
lods
add
je
adc
pop
repnz
push
mov
clc
iret
lcall
popf
js
push
ret
out
xchg
pop
jae
pop
mov
repz
xchg
xchg
sub
xor
adc
dec
pusha
jmp
imul
lret
pop
mov
sbb
lahf
jns
or
addr16
les
scas
outsl
rol
dec
ds
jnp
mov
push
and
and
pop
lea
fadds
in
sub
lcall
out
cmc
cwtl
push
inc
xlat
inc
aad
jecxz
push
mov
xchg
jg
dec
push
lods
out
ljmp
push
push
or
test
stos
inc
dec
xchg
mov
fnstenv
mov
test
bound
sbb
add
jns
jp
push
iret
repz
inc
push
popa
sbb
mov
call
movsl
stc
mov
mov
mov
push
movb
add
jns
xchg
dec
cmp
xor
lret
lea
stc
int3
aam
test
aad
or
or
pop
shrl
stos
xchg
xchg
mov
aad
pop
pop
pop
push
push
pop
inc
dec
lds
push
call
add
mov
cltd
mov
mov
pop
mov
push
jbe
jp
andl
test
pop
sub
cli
adc
mov
dec
inc
ljmp
rcrb
inc
xor
retw
aaa
adc
outsl
lret
call
ljmp
int3
sbb
int
xchg
repz
cmp
or
push
inc
addr16
inc
cmc
mov
push
xchg
out
cmp
test
xor
cli
lea
sub
sbb
xor
ja
and
mov
testb
add
sbb
xor
mov
fs
adc
cld
test
mov
insl
push
cmp
lds
ds
lods
and
stos
mov
popa
inc
icebp
out
xchg
push
hlt
or
roll
shll
dec
mov
mov
aaa
inc
in
fcmovne
add
cltd
push
cmp
adc
in
movsb
pop
scas
add
sub
cltd
repz
std
or
orb
stos
lods
iret
inc
pop
test
and
movl
xor
mov
cmp
dec
fwait
xor
in
jle
add
cmp
ficomps
push
mov
cwtl
jb
cs
in
xor
out
xorl
pop
inc
inc
lock
cmpsl
or
lcall
and
xchg
jo
sbb
dec
pop
cmpsl
daa
jecxz
mov
xchg
addr16
mov
and
dec
push
jl
sub
ror
inc
mov
shll
jmp
js
push
cltd
insl
pop
inc
lcall
mov
pop
dec
ja
div
gs
jno
xchg
pop
popa
cli
mov
mov
leave
jg
dec
pop
mov
sub
sub
orl
jbe
es
add
sub
adc
xchg
cltd
inc
jle
mov
movsb
jne
jmp
test
dec
orb
push
pop
inc
dec
fiaddl
sbb
popf
inc
hlt
shll
movsb
mov
in
mov
adc
jbe
into
addl
xor
or
cli
rorl
sub
sub
aam
cs
inc
mov
out
in
jb
add
lods
hlt
daa
aaa
add
jmp
hlt
xchg
decl
bts
mov
roll
daa
jno
cmc
mov
aas
pop
mov
dec
sub
pop
iret
add
es
jae
or
mov
dec
jg
mov
mov
lahf
out
jle
js
cmpsl
insl
xor
mov
ss
stos
addr16
mov
sbb
jnp
push
stos
int3
fiadds
xchg
xchg
repnz
inc
lock
mov
mov
xor
sbb
cmc
dec
lcall
pop
lahf
mov
sarl
call
or
mov
rcr
mov
adc
decb
inc
lcall
stos
adc
mov
jnp
cmp
mov
push
lcall
in
ds
flds
mov
cmpsl
jb
inc
pusha
adc
mov
and
fninit
cmp
and
dec
xchg
push
jle
inc
cmpsb
pop
push
mov
scas
int
mov
idivl
in
or
jg
clc
outsb
bound
movsb
and
sahf
sub
sub
std
lock
xor
rolb
mov
repz
mov
scas
xlat
lret
out
dec
adc
fnop
xchg
xor
hlt
mov
outsl
fwait
cmp
jno
outsb
mov
mov
sbb
out
xchg
push
jecxz
sahf
mov
dec
flds
hlt
sbb
push
popa
pcmpgtb
sbb
mov
neg
dec
ret
dec
jmp
inc
xor
outsb
test
and
mov
rorl
mov
or
les
xchg
mov
and
and
cmc
sbb
stos
shl
mov
dec
shufps
push
jle
mov
mov
sub
dec
xor
outsl
out
adc
adc
testb
jl
daa
xchg
xlat
mov
mov
cltd
inc
add
leave
and
jp
movsb
dec
mov
popf
shrb
cli
cs
inc
int
mov
lret
or
scas
jl
xchg
cltd
cmp
scas
fsubrl
je
sti
addr16
mov
push
xor
shlb
ret
pop
xor
sbb
mov
aad
push
adc
fs
xchg
mov
out
stc
add
ret
sub
scas
subl
aad
push
xchg
test
push
lcall
push
mov
jne
imul
mov
jbe
js
fisttpl
popa
xlat
addr16
mov
jl
js
out
stos
sub
pop
aad
js
pop
xchg
and
mov
outsb
loopne
imul
int
mov
adc
sub
or
decl
xor
and
inc
stos
hlt
orl
cmp
xchg
adc
jne
lock
insb
inc
xchg
jb
stos
sub
sbb
jle
dec
cmp
out
insb
push
inc
int
mov
add
xor
adc
inc
fptan
fldln2
dec
shrb
das
jmp
dec
out
stos
std
sbb
jmp
mov
aad
cmp
in
mov
dec
sbb
arpl
adcb
sbb
dec
loop
xor
cltd
xor
imul
pop
shrb
cwtl
jecxz
insl
int3
pop
sbb
out
fiaddl
in
leave
mov
jg
mov
int
adc
orb
mov
add
inc
hlt
lahf
dec
out
out
push
test
ss
sbb
inc
das
lcall
adc
pushf
aam
les
iret
popf
pushf
rorl
xchg
sbb
inc
cmp
lods
fnstcw
mov
xor
lods
bound
stos
or
dec
inc
and
adc
stos
rclb
push
movsl
fistl
pop
pop
in
push
gs
adc
loopne
mov
fcoml
and
test
inc
add
mov
pop
sahf
pop
xchg
inc
add
in
jae
add
and
loopne
push
jp
add
push
repz
mov
in
dec
sub
incb
xor
push
xor
mov
push
mov
cmp
sub
jnp
pop
in
ljmp
pop
add
jo
insb
and
dec
in
mov
push
in
cmp
inc
pusha
das
lret
sub
push
inc
sbb
dec
data16
adc
push
adc
xchg
sbb
test
insb
xchg
jno
sub
jo
push
mov
and
inc
fisttps
nop
xor
mov
ret
add
push
movsl
dec
icebp
cmp
xorl
je
sub
pusha
inc
mov
mov
pop
xor
jle
sbb
pushf
xchg
mov
adc
sub
std
les
mov
aaa
inc
mov
movsb
out
outsb
inc
sti
mov
jb
bound
push
sub
scas
jb
repnz
outsl
mov
push
xchg
stos
leave
mov
stos
xor
jmp
add
insl
sbb
sbbb
popa
sbb
lods
les
rol
sub
fmuls
cs
lea
enter
inc
or
sub
push
inc
mov
fiaddl
jb
lahf
pop
xchg
xchg
js
imull
push
pop
shlb
js
dec
leave
incb
stos
mov
add
shlb
inc
insb
clc
mov
xchg
addr16
inc
inc
jnp
movsl
fnstenv
addb
dec
dec
aam
pop
daa
or
mov
inc
sbb
in
mov
pusha
and
pop
jmp
outsb
stos
loopne
movsl
push
xlat
les
xor
gs
outsb
cmpsb
and
sbb
in
adc
sub
lods
push
xor
call
notl
ss
repnz
and
inc
repnz
sub
sub
push
mov
outsl
sbb
repz
adc
jp
and
pushf
or
sbb
cmp
mov
shlb
or
les
push
mov
jns
lods
fimull
and
mov
movzwl
je
gs
fwait
adc
sbb
in
push
sub
jae
xor
scas
stc
inc
loope
idivl
jl
gs
cld
es
mov
and
xchg
inc
sbb
jb
jle
xor
movsl
ds
cld
mov
mov
jecxz
mov
xor
mulb
call
outsb
mov
mov
fistps
lcall
dec
mov
je
pushf
icebp
je
das
dec
loope
mov
xchg
inc
sbb
push
cli
jae
test
adc
sahf
and
insl
pop
inc
mov
sub
ret
cmp
call
mov
fcom
adc
jge
leave
or
into
or
shll
popa
rorl
sbb
add
loop
in
lret
outsb
repz
lods
xlat
loope
cmpsl
mov
cmp
xor
lcall
sbb
lods
int
lfs
mov
push
or
ret
jne
and
ja
adc
mov
repz
mov
cwtl
xor
dec
orl
push
sub
mov
mov
stos
and
lret
xchg
in
lock
jl
xchg
add
mov
mov
daa
xchg
xchg
mov
mov
jns
test
pop
lds
xor
push
jno
lods
xor
push
push
sti
lcall
mov
sbb
inc
daa
add
xchg
sub
divb
mov
shll
lahf
jmp
shll
subl
xchg
sbb
or
pop
push
mov
rclb
stos
addr16
outsl
and
repz
dec
enter
jae
sbb
jbe
lret
std
inc
test
ret
mull
andb
repnz
test
adc
sbb
cmp
inc
mov
stos
cmc
fisubs
xor
andl
sarl
hlt
rorl
iret
xchg
or
xchg
icebp
mov
loop
inc
cmp
jae
add
pop
mov
aad
cli
add
sbb
fwait
lahf
cmp
cmpsb
cmp
fisubl
in
pop
and
mov
iret
sbb
test
push
xchg
mov
rolb
xchg
xchg
push
nop
enter
mov
adc
jmp
jp
cmp
mov
cmp
mov
xor
sbb
ljmp
pop
sub
ds
add
pop
daa
or
repz
and
lahf
or
daa
jecxz
xchg
repnz
pop
les
mov
subl
loop
hlt
fidivs
xchg
mov
push
mov
sub
mov
adc
repz
test
pop
mov
aas
adc
or
test
cmp
test
stc
in
xor
cmp
scas
shll
movsl
or
test
sarl
add
jecxz
cmpxchg
pop
xchg
lods
cmp
scas
std
addb
in
sub
add
xchg
aam
adc
cli
mov
mov
in
fs
faddl
addr16
push
aaa
fs
sbb
sbb
xor
and
cmp
ret
adc
stos
sbb
in
sub
adcl
outsb
fisttpl
stc
xchg
ret
rcll
pusha
adc
jnp
add
jg
loop
sub
sti
adc
movsb
in
sbb
lret
mov
xchg
sahf
sbb
cld
rol
pop
nop
jl
imul
sbb
cmpsl
nop
std
int
push
fcmovnb
push
jg
shrl
push
hlt
sbb
sub
idivb
sub
inc
adc
xor
jge
and
cld
add
into
fstpt
sub
mull
dec
gs
cmp
fisttpll
sbb
movsb
inc
mov
nop
ret
push
add
dec
xor
in
mov
imul
or
sbb
lcall
and
imul
adc
lcall
sbb
mov
test
test
sbb
xlat
sub
xchg
mov
xchg
xchg
cmp
cwtl
call
test
shr
adc
sbb
shlb
and
fadd
dec
jge
or
cmc
xor
call
sbb
clc
lds
dec
fists
cmc
push
imul
mov
adc
or
je
push
or
or
jmp
iret
push
sbb
push
repz
fnsave
jg
mov
pop
push
push
sbb
data16
in
lcall
jmp
inc
imul
xchg
and
roll
in
inc
mov
xchg
dec
or
dec
or
loope
cli
cmp
mov
sub
push
inc
shr
xor
mov
push
inc
ret
push
xor
dec
cmp
xor
mov
sbb
jb
dec
iret
sbb
sub
jb
sbb
xor
jge
xchg
faddl
shrb
pop
ret
push
push
or
outsl
pop
dec
xchg
jl
lahf
fwait
or
jne
mov
add
sub
inc
movq
sahf
xor
inc
pop
out
xor
xlat
sbb
xor
mov
sub
xor
scas
dec
icebp
pop
fmul
lock
pop
incb
mov
mov
test
in
mov
pop
sbb
add
sbb
daa
sub
cld
sbb
sub
dec
cltd
mov
xchg
mov
xor
xchg
mov
pop
mov
cmpsb
jns
imul
decb
sti
sbb
and
dec
addl
stos
jg
addl
cmp
mov
loope
mov
cmp
xchg
leave
mov
js
mov
cmpsb
pop
cmpsl
jge
xlat
dec
sbb
ret
movsl
xchg
xlat
adc
pop
sbb
dec
or
push
or
fiadds
adc
in
in
jnp
adc
incl
out
dec
testb
fbstp
es
and
push
adc
jg
les
fisubrl
pop
pop
pusha
hlt
loop
ret
mov
test
mov
dec
sbb
rclb
sub
std
test
add
pop
fmul
add
mov
mov
cltd
int3
clc
cmc
movsl
loopew
cli
fiaddl
outsb
and
xor
lods
sub
out
out
int
jle
outsl
movd
fld
pop
sub
cli
xchg
mov
addb
sti
stos
fucomip
dec
cmp
call
mov
rorb
fdivrl
mov
jb
daa
adc
jmp
push
loope
fistpll
push
stos
test
ljmp
jns
stos
data16
ret
cltd
out
push
fistpll
jbe
popa
jbe
repz
dec
repz
inc
sbb
outsl
pop
mov
loop
popa
divb
ror
and
cwtl
jo
cltd
push
clc
lret
and
adcl
clc
mov
bswap
adc
fnstsw
xchg
mov
out
lods
faddp
mov
xchg
lcall
adc
inc
sbbb
movzbl
push
cmpsb
cmp
pop
test
inc
mov
sbb
stc
xor
fcmove
jmp
sub
testl
roll
mov
xchg
adc
sub
and
xor
xchg
jmp
mov
test
lods
data16
ljmp
or
in
xchg
xor
adc
dec
and
jae
fdivrl
jg
add
fdivrs
je
mov
mov
jle
shll
inc
xchg
push
dec
sbb
fisubrl
outsl
pop
or
push
dec
push
lds
imul
cmpsl
mov
data16
sub
das
pushl
dec
cmp
inc
fmull
enter
mov
stc
fldl2e
mov
xchg
and
sahf
inc
in
mov
xchg
push
sbb
jns
rcrb
cld
outsl
scas
lods
enter
xor
outsl
paddsw
orl
push
sub
stos
hlt
jns
mov
sbb
lods
mov
cltd
pop
sub
cs
idivb
sub
inc
popa
roll
dec
ficompl
outsl
cmp
jp
fistps
outsb
pusha
cwtl
ret
fisttpl
and
mov
xor
int3
aas
insb
xor
mov
jb
push
fwait
add
cmc
dec
lcall
jle
jb
fistps
ss
dec
push
test
push
aas
push
lahf
inc
sarl
stos
fwait
mov
negl
mov
push
inc
jns
inc
mov
pop
lock
pop
xchg
xor
jne
je
repz
sub
orb
movsl
xlat
outsl
loope
aam
sbb
je
sbb
sbb
clc
lcall
mov
mov
je
push
fildll
in
or
mov
test
and
push
out
test
frstor
inc
fnstenv
inc
or
out
cmp
xchg
xor
lahf
xor
addb
sbb
daa
ret
sub
pop
xor
pop
out
push
sarb
lea
xor
jl
xor
mov
ljmp
mov
dec
add
or
out
or
sbb
mov
push
sahf
xchg
cld
insb
and
fsub
repz
add
pop
add
mov
mov
jbe
inc
sbb
sub
pop
jmp
test
and
sbb
mov
sub
sub
das
in
gs
repnz
xor
ret
mov
add
jnp
sub
daa
mov
adc
int
ja
shlb
js
sub
jns
js
sbb
sbb
dec
sub
sub
cvttps2pi
cli
movsb
inc
rolb
or
aam
sub
xor
rorb
popl
mov
mov
scas
loop
insb
shlb
es
in
jb
aaa
add
lods
int
icebp
inc
sub
mov
scas
add
push
push
mov
push
nop
stc
sbb
inc
cs
pop
adcl
pop
pop
lods
mov
sbb
test
pop
jge
call
aam
aas
mov
inc
into
dec
and
adc
idiv
lahf
jae
fnsave
xchg
jo
xor
movsb
cld
add
add
mov
fbld
mov
mov
stos
xor
cmp
roll
fcompl
add
rcrb
xor
shr
repz
and
das
into
shll
mov
jmp
mov
testb
popf
test
push
or
out
and
push
outsb
mov
cmp
sbb
and
jl
leave
stc
and
test
call
pushf
sub
sub
sub
mov
iret
aam
mov
test
xchg
lret
add
imul
addr16
mov
insl
cmp
adc
movsl
or
push
pusha
and
rolb
fadds
les
ret
cmp
or
jns
cmpsb
dec
in
lcall
in
lock
mov
xor
and
lods
sub
cmp
frstor
mov
xor
mov
inc
xchg
pop
pop
shl
pop
sbb
loop
mov
add
insb
inc
shlb
jbe
xor
adc
xorb
cli
in
popa
cmp
fwait
iret
xchg
rclb
xchg
or
imul
inc
xor
sub
pop
mov
xchg
jo
and
sbb
sbb
subl
jno
pushf
xor
mov
insl
mov
or
xor
cmp
cmp
pop
imulb
sub
mov
cmp
sbb
xchg
bound
test
faddl
hlt
xchg
insl
xchg
js
sti
adc
dec
fcoms
adc
add
daa
and
xchg
fnstenv
mov
jb
inc
lods
into
sti
cltd
mov
xor
loope
lcall
test
xchg
testl
cmp
inc
cld
sbb
or
rcr
cld
addr16
scas
adc
jo
sti
dec
daa
iret
addr16
lret
xor
aas
lods
icebp
inc
add
mov
mov
fsubl
std
mov
push
test
pusha
adc
xor
add
rol
inc
rcl
mov
ds
push
cwtl
dec
ficomps
jp
aam
sub
jmp
fistl
dec
outsb
subb
les
fsts
or
dec
outsl
int
and
daa
fimuls
push
mov
out
sub
cli
adc
adc
adc
iret
fadd
lahf
out
fsubs
icebp
adcl
xchg
popf
ret
les
clc
cmp
sbb
loopne
mov
add
daa
shl
pop
scas
push
ss
std
out
call
ja
dec
addr16
xor
or
mov
cmp
inc
les
rolb
xchg
adc
cmp
push
aam
iret
mov
lds
pop
jecxz
mov
lahf
cmc
dec
fs
fldcw
dec
push
es
mov
cmpsl
inc
jmp
imul
outsb
mov
cwtl
push
in
not
sub
and
cmpsb
mov
divl
lret
mov
sbb
clc
xor
sbbl
push
jg
inc
ret
dec
repz
mov
fisubs
add
add
pop
mov
mov
mov
shll
ss
cmpsl
fdiv
mov
sbb
or
push
or
or
and
imul
movsb
mov
fcoml
inc
fisttps
sarb
sub
lret
inc
test
inc
push
iret
stos
sbb
xor
popa
pop
sub
sub
adc
fwait
xchg
sub
fstl
xchg
push
and
ja
cld
addb
leave
insb
mov
js
push
pushf
sub
cmp
lahf
push
popf
pushf
in
jbe
jb
repz
pop
les
lods
sub
mov
inc
lds
add
repz
lret
faddl
lahf
es
cmpsb
push
vpmacswd
in
fsts
out
mov
cmp
fsubs
dec
sti
hlt
sub
push
ss
sub
arpl
sub
mov
or
mov
inc
dec
dec
or
mov
mov
xchg
push
sbb
inc
call
push
test
dec
sub
sbb
nop
xor
lds
out
loopne
repnz
mov
pop
icebp
push
mov
jg
sahf
rcll
mov
scas
or
jbe
mov
xor
imul
xor
inc
loop
dec
fdivrs
pop
loope
ret
cmp
aaa
xchg
fwait
cmpsb
add
cmp
scas
loopne
push
ja
mov
jo
repz
outsl
out
fstpt
cmpsl
jl
test
mov
fwait
dec
jl
enter
std
or
stos
stc
or
mov
cltd
sbb
dec
jae
mov
inc
cmc
rolb
mov
or
jle
adc
insb
aad
xchg
int
xchg
mov
pop
add
xchg
out
jo
daa
pop
pop
xchg
xor
loope
xlat
mov
xor
mov
leave
inc
pop
sub
stos
popf
sub
es
das
adcl
add
jg
cmp
mov
mov
lret
fisttpl
mov
mov
lret
test
into
mov
adc
push
mov
insb
ljmp
sub
mov
inc
ljmp
xor
mov
movsl
test
cltd
out
push
mov
nop
push
xor
push
xchg
ret
scas
sub
mov
adc
mov
std
shl
dec
clc
nop
rorb
loope
popf
repnz
ja
jo
aad
lock
cltd
xor
cltd
lods
mov
insl
add
push
ds
inc
mov
mov
inc
hlt
pop
daa
jge
subl
and
sbb
pusha
sahf
jg
and
in
xchg
lret
nop
add
adc
xchg
mov
push
or
cmc
dec
jmp
bound
outsb
ds
dec
shrb
std
dec
cmp
inc
fs
push
xchg
mov
aam
jp
sbb
js
repnz
outsb
out
sub
out
shrl
xor
imul
insl
test
rorb
popf
loope
je
fcomps
and
insl
nop
pop
rolb
cmpsl
test
filds
stos
mov
xor
jae
fwait
push
jg
adc
fwait
jle
mov
loopne
shl
cmpsl
clc
pop
movsl
cmp
xlat
fidivrl
sbb
into
shrl
xlat
sbb
sub
int
repnz
sti
jnp
pushf
movsl
out
push
int
cmp
js
lcall
mov
testl
js
repz
clc
imul
mov
arpl
pop
adc
adc
fwait
into
shl
cmp
movsl
cmpb
sti
cmp
mov
dec
outsb
incl
jmp
ja
push
jae
jl
pop
dec
jp
ret
mov
scas
push
add
rcrl
lahf
int3
and
xor
imul
ja
mov
add
mov
cltd
add
fbstp
mov
mov
xor
stc
push
bound
push
sarl
enter
nop
cmp
and
sar
mov
push
divb
bound
jne
dec
sub
scas
pop
push
js
jp
xchg
cmp
mov
add
sbb
aad
lcall
fdivrs
cmp
pop
in
sbb
insb
leave
adc
aaa
lods
dec
sub
xor
jns
out
pop
pop
leave
jecxz
and
mov
jmp
and
jp
lret
lret
push
lahf
loop
lret
insb
insl
ffreep
and
ss
cs
sahf
pop
or
add
xor
pop
sahf
mov
push
lds
dec
rorl
cld
jbe
or
mov
ljmp
pop
in
push
cmp
xor
or
mov
call
cmp
xchg
daa
add
nop
mov
xchg
and
out
pop
lret
loope
inc
or
hlt
mov
int
cli
and
inc
dec
cmpsl
imul
inc
rcl
cli
pop
push
jmp
pop
xchg
adc
ret
movsb
xchg
add
mov
pop
lods
and
cmpsl
test
iret
xchg
push
push
jp
dec
push
and
rcrb
mov
lea
cwtl
or
cld
pushf
cmp
inc
and
cmpsb
jbe
adcb
mov
jge
xor
mov
shll
daa
push
or
xchg
pushf
mov
adc
daa
fnstsw
or
rcl
out
pop
mov
loopne
scas
dec
repnz
push
add
pushf
push
es
in
sub
mov
repz
in
bound
and
ljmp
out
repz
dec
sbb
mov
pop
mov
pop
push
cmpsb
shlb
jo
cmp
mov
testl
mov
roll
adc
and
dec
in
dec
das
ret
mov
xchg
clc
pop
or
mov
sbb
mov
int
and
jns
leave
inc
lock
orl
outsb
stc
insl
popa
fistps
mov
add
rorl
mov
xor
stos
push
scas
jnp
jp
enter
cmp
or
scas
rolb
jmp
nop
into
nop
clc
inc
push
jl
js
xor
sar
and
pushf
pop
mov
lods
jmp
and
into
pop
mov
popf
mov
imul
or
and
mov
push
cwtl
xchg
adc
jl
bound
aam
daa
sbb
lods
push
dec
insl
mov
adc
xor
rcr
and
loop
subb
cmc
push
adc
dec
mov
nop
clc
push
or
fnstenv
jp
repnz
aaa
cmc
jle
pop
mov
or
mov
jg
cmp
cmp
je
inc
int
sbb
js
mov
adc
into
push
lea
outsl
sbb
dec
jb
in
mov
xlat
adc
js
lahf
add
adc
pop
and
pusha
xor
inc
arpl
je
mov
cmp
or
andl
loop
jb
stos
mov
mov
lea
lods
add
push
out
jnp
orb
addr16
lods
push
orl
jbe
insb
mov
outsl
shlb
push
pop
outsb
lcall
es
dec
mov
mov
xchg
or
push
aad
xor
dec
jg
cmpsb
lcall
cmp
mov
inc
test
mov
sub
mov
out
sbb
jg
cmp
dec
movsl
xchg
pop
insb
xchg
cli
in
dec
inc
add
cli
jge
aas
loopne
jge
dec
faddl
sub
mov
xor
xchg
push
jl
jno
push
popa
out
push
pop
inc
pop
ds
lock
ret
xor
add
ficomps
cmp
xor
loopne
out
out
pop
sub
xlat
popa
mov
notb
sub
and
cmc
mov
mov
sbb
inc
jae
leave
mov
push
arpl
push
pop
xor
jno
inc
mov
lahf
cmc
inc
jo
mov
sub
push
xchg
lret
lret
and
jp
repz
mov
or
and
aam
dec
je
push
scas
sti
mov
test
mov
push
push
dec
mov
pushf
jg
cmp
and
fildl
ror
ljmp
arpl
mov
dec
dec
es
pop
dec
inc
inc
addr16
pop
cli
or
sub
jge
outsb
or
insl
jne
mov
nop
or
out
or
adc
pop
pop
into
repnz
cld
lods
adc
enter
lea
fistps
loop
mov
cmp
inc
std
lea
jno
aad
cmpsl
xor
pop
bound
insl
inc
jae
lds
xor
adc
stc
cmc
sti
mov
in
lods
imul
imull
test
mov
push
mov
dec
push
push
loop
fnsave
out
mov
imul
and
add
int
mov
int
outsl
jge
lret
dec
xchg
mov
in
and
or
stos
mov
cmc
add
ss
mov
xchg
cmovno
loope
ja
add
leave
dec
pop
dec
pusha
sbb
jb
stos
sahf
mov
es
aam
popf
mov
aam
sbb
xchg
lods
out
xorb
imul
lcall
lods
mov
cs
loopne
inc
in
shlb
jo
imul
dec
js
cld
cmp
lods
jle
fcoms
jae
mov
push
fldl
movsb
pop
in
arpl
xor
push
jae
sub
out
adc
fbstp
call
xchg
pop
and
movsb
and
jne
frstor
mov
xor
scas
mov
pushf
mov
inc
mov
cmp
jo
ret
mov
mov
and
push
push
mov
hlt
bound
push
scas
jo
or
ficoms
pop
js
cmp
lea
sti
daa
hlt
dec
dec
sbb
pusha
lds
and
dec
movsl
ret
mov
push
in
fwait
or
sbb
pop
repnz
and
ljmp
inc
imul
fs
popf
inc
popf
aaa
call
insb
xchg
mov
stos
add
mov
or
push
test
aad
and
iret
push
fwait
repz
sub
cmp
int
push
gs
xor
adc
aas
add
lock
icebp
sbb
gs
mov
sbb
shll
gs
je
inc
stos
fs
dec
and
sbb
xor
mov
jl
aaa
mov
dec
cmc
pop
repz
adc
pusha
or
fucomip
dec
mov
cmpsl
rorl
js
and
dec
fs
and
sub
mov
and
testl
nop
adc
jge
sarb
push
add
outsl
and
push
hlt
jge
sti
xchg
fs
js
out
jno
icebp
imul
inc
out
fs
stos
fidivrl
fiaddl
es
or
cmp
add
insb
cmc
xlat
cmpsb
js
addr16
ljmp
out
add
nop
push
or
sarb
cmp
cmp
cld
mov
aad
jp
mov
ljmp
aaa
mov
push
dec
sbb
inc
int
addr16
jmp
pusha
pop
xor
scas
xor
sub
dec
push
mov
in
stos
aas
mov
pop
out
push
fcoms
push
mov
rcll
scas
rcrl
and
clc
sbb
popa
ret
enter
push
pusha
das
hlt
and
inc
xor
mov
cwtl
and
sbb
xchg
pop
cld
in
cmpsb
adc
push
addr16
ja
or
push
sub
lret
data16
das
fcomip
shlb
mov
jb
mov
cmp
andl
xor
jge
mov
add
jns
or
das
or
dec
daa
test
jo
dec
cld
cld
sub
out
or
popa
pop
out
ss
push
jl
jbe
js
push
mov
movsb
cltd
arpl
or
push
mov
jo
xchg
cmp
push
stos
leave
mov
mov
adc
out
in
outsl
pop
imul
fdivl
jae
push
push
insl
cmc
cmpsl
push
sub
jmp
sbb
xchg
cmp
xchg
xor
sub
adc
mov
cmp
aad
jb
push
imul
adc
and
dec
jle
popl
mov
jmp
push
xchg
adc
loop
cmp
popf
inc
div
and
pop
sbb
mov
in
leave
jg
jg
inc
js
icebp
dec
or
sbb
jno
inc
pop
jno
push
mov
mov
bound
in
les
fsubl
ret
es
or
cmp
and
enter
es
ret
jbe
add
movnti
ljmp
les
inc
aas
mov
rorb
fadd
xchg
mov
subl
mov
mov
fistps
mov
lds
sahf
into
repz
xor
xor
add
or
test
icebp
sub
cli
jo
mov
je
mov
leave
hlt
jno
es
mov
sbb
or
jno
mov
lahf
sub
sahf
pusha
sbb
imul
popa
lret
rorl
fnop
mov
add
std
adc
cmp
mov
jge
movsl
dec
out
sub
fst
leave
int
pop
jae
dec
imul
nop
adc
mov
mov
dec
lock
loopne
insb
int
xor
das
jmp
lods
push
dec
cmp
lock
rcrl
push
adc
jecxz
dec
cmp
leave
xorl
testb
adc
inc
jno
inc
stos
addl
push
jl
xchg
loop
bound
std
aad
shll
inc
push
sub
mov
ja
cmpsl
test
adc
sub
mov
mov
pop
scas
mov
nop
fisubl
fsubr
pushf
jo
stos
daa
jbe
add
cwtl
scas
xor
sub
out
or
gs
jno
lds
pop
cmpsb
cli
pop
mov
jecxz
inc
push
and
imul
xor
jmp
dec
jmp
inc
mov
fpatan
sbb
data16
and
dec
jle
sub
xchg
dec
jp
xor
pop
out
pop
out
cltd
mov
mov
and
stos
adc
pushf
lahf
xor
sub
inc
movsl
sti
push
mov
push
xor
pushw
push
jmp
outsb
sbb
gs
cmp
ret
fs
js
sbb
push
mov
dec
adc
ret
mov
js
adc
or
stc
pop
popf
mov
add
aad
xchg
insl
loope
inc
addl
dec
jmp
mov
add
mov
xchg
test
mov
int
jns
loopne
in
std
ret
mov
pusha
fldl
cld
xchg
fidivl
mov
jmp
sub
xor
rorl
sub
mov
mov
cmp
bndldx
out
mov
test
add
loope
pop
jge
push
or
cmp
movsb
imul
call
pop
bound
adc
xor
movl
mov
je
add
aad
jne
hlt
lock
jle
rclb
dec
div
scas
std
arpl
cltd
into
add
xor
sar
faddl
mov
imul
push
add
lods
push
loope
daa
repz
shr
dec
xchg
sub
dec
cwtl
push
pop
in
mov
or
sti
or
cli
roll
xchg
aaa
ljmp
divb
mov
andl
xor
mov
leave
inc
into
sbb
jl
dec
sahf
adc
push
jp
jno
sbb
add
or
add
dec
loopne
dec
insl
pop
push
je
cmp
cltd
iret
xchg
sbb
and
mov
mov
mov
push
cltd
and
cmc
jb
and
adc
push
dec
repz
add
jp
in
roll
dec
and
pushf
adc
pop
jnp
addb
xchg
dec
jg
push
mov
jne
push
out
fcmovnu
out
and
xchg
or
les
jecxz
cld
xor
cmc
mov
daa
jae
imul
jns
jg
bswap
inc
aam
sbb
lret
daa
inc
test
arpl
mov
frstor
bnd
mov
xchg
mov
fisttpl
inc
imul
test
int3
loopne
pusha
loopne
sbb
scas
stc
sub
mov
jb
imul
mov
sbb
aaa
js
and
lahf
js
cmp
int3
xchg
movsb
xchg
lds
in
push
and
loop
adc
mov
test
mov
loope
cli
and
sub
pop
jns
das
add
jle
dec
les
fsubrs
notl
or
push
lods
scas
jne
loopne
shl
mov
add
sub
js
imul
out
jne
cld
mov
add
push
mov
dec
push
icebp
bound
aad
mov
add
mov
xchg
dec
es
xlat
ljmp
clc
pop
orb
fildll
xlat
lock
addr16
cmpsb
ficoml
sub
out
imul
test
jno
mov
ss
ljmp
not
xchg
lock
xchg
xor
loopne
jl
arpl
or
jmp
out
in
cmp
mov
rdtsc
pushf
adc
popf
inc
je
shll
iret
arpl
repz
sub
jns
jmp
int
enter
in
testb
mov
xor
and
mov
pop
mov
test
in
aad
movsb
sub
fstpt
push
lea
push
add
pushl
mov
inc
dec
insl
mov
xchg
test
mov
or
or
mov
cmp
sub
out
mov
add
or
mov
inc
push
insb
push
icebp
or
mov
xchg
lods
cmpsb
sarb
lods
sbb
sbb
movsl
js
cwtl
jg
and
test
nop
adc
aad
push
push
add
jae
in
add
or
inc
jns
cmp
into
jns
dec
pop
xchg
cmp
ret
call
mov
lcall
adc
pop
cwtl
in
in
lods
sbb
rorl
arpl
xlat
test
adc
les
jl
cmc
xchg
cmpsb
push
mov
mov
dec
test
push
sub
add
mov
or
push
outsl
jp
leave
jae
ror
stc
mov
mov
mov
sub
popw
sub
xchg
cld
lahf
jb
mov
xchg
lcall
test
mov
pop
fs
cs
and
adc
loop
cmp
imulb
shll
repz
mov
repnz
jmp
cvtps2pi
dec
sub
mov
push
repz
xor
cmpsb
cld
repz
jne
out
in
nop
test
test
mov
dec
mov
sahf
push
sub
lds
xchg
mov
push
mov
icebp
jb
push
repnz
popf
pop
fdivr
imul
ljmp
sbbb
loop
fstl
clc
xchg
aad
jg
stc
cmp
add
cmp
xchg
insl
popa
and
xor
cmp
cmp
fxch
aaa
loopne
jnp
push
and
adcl
mov
push
das
into
push
xchg
cmp
jno
fisttps
xchg
push
clc
jmp
inc
ret
fidivrs
xor
push
add
inc
inc
mov
mov
or
scas
add
ret
mov
fstl
fs
outsb
jne
mov
je
mov
xchg
mov
add
pop
push
aam
and
and
or
adc
dec
outsb
jmp
test
push
arpl
dec
cs
sbb
arpl
out
into
cmc
js
ds
enter
sbb
lret
mov
test
adc
inc
out
fisubl
aas
div
push
xor
mov
daa
jnp
gs
mov
in
adc
in
sti
test
mov
lahf
mov
nop
push
stos
call
shrl
gs
jbe
push
repz
mov
push
out
sti
pop
xchg
xchg
jmp
xchg
and
xchg
ja
popa
inc
daa
cwtl
push
sbb
or
fldl
sub
sbb
aaa
xchg
js
fsubr
inc
popf
adc
es
scas
adc
lock
mov
rol
pop
roll
aam
addr16
sub
mov
jae
push
mov
add
mov
cmp
inc
lret
jecxz
pop
lods
arpl
rcrl
mov
outsb
cmp
pop
ljmp
lods
lea
sub
dec
int
fprem1
outsb
lret
mov
sahf
dec
or
fstps
push
add
loopne
inc
icebp
int
aas
cltd
lret
dec
sub
or
add
into
sbb
sbb
adcl
mov
scas
push
andl
sbb
mov
das
in
pushf
stos
sub
push
or
xchg
mov
jae
jmp
mov
into
lahf
xor
mov
fs
jmp
jmp
outsl
push
repnz
push
jle
sub
bnd
ret
mov
repz
adc
enter
aam
mov
enter
lock
hlt
outsb
mov
mov
mov
cmp
iret
xor
xor
lds
sbb
mov
fmuls
cmpxchg
aas
jg
inc
popf
xchg
mov
mov
adc
test
xor
iret
int3
daa
inc
jecxz
sbb
ljmp
and
cmp
in
into
cmc
addr16
pop
clc
and
dec
jecxz
out
adc
shrl
std
cmp
lock
and
das
push
sbb
call
sbb
push
rorb
push
dec
mov
inc
test
jp
popf
inc
pusha
enter
in
push
push
pop
push
lods
into
pop
mov
andb
imul
cmp
pushf
inc
cmp
clc
jno
pop
testb
pop
ret
add
mov
das
sub
mov
sbb
sahf
xchg
add
pop
and
mov
subl
xor
fisubrl
scas
std
fists
push
movsb
push
mov
inc
pushf
out
ja
adc
mov
js
mov
test
xor
push
or
fistpl
inc
outsl
mov
sub
xchg
fbstp
divl
or
leave
mov
loope
fisttpll
jno
sarb
fcomps
in
movsl
mov
rclb
pushf
mov
xor
sub
stos
xor
and
je
clc
clc
jecxz
clc
cli
mov
push
in
inc
xchg
push
or
jb
loopne
mov
xor
std
push
nop
in
imul
adc
shrb
or
test
jmp
sbb
in
lods
or
addb
ds
sbb
mov
and
rcrl
cmp
arpl
jne
retw
adc
test
cli
push
add
dec
adc
inc
mov
aaa
cmpsl
cmp
mov
das
stos
xchg
lock
push
and
dec
out
stos
sub
gs
cs
xor
aad
push
inc
jle
dec
cmp
push
enter
je
mov
ficompl
dec
inc
xchg
jp
iret
push
ljmp
sti
xchg
scas
cmp
dec
jbe
xor
lcall
push
or
scas
add
stos
popa
fidivrl
inc
pushl
inc
lahf
fisttps
mov
sbb
mov
das
cmp
hlt
push
subl
jae
jecxz
sti
popa
popa
mov
enter
or
data16
int
outsl
inc
push
cmp
dec
or
jg
fisttps
dec
push
fmuls
iret
sub
xchg
ds
mov
add
ret
daa
insl
mov
mov
mov
push
arpl
out
popf
jmp
inc
and
lds
inc
sbb
insl
mov
and
rorl
jne
rcrl
fidivrl
es
mov
and
aam
mov
and
rclb
int3
pop
mov
jmp
and
jb
push
mov
test
pop
or
xchg
movsl
psubw
hlt
outsl
aaa
adc
pop
das
and
mov
es
outsl
andl
xchg
test
sub
in
push
xor
xchg
cmpsb
lahf
fsubs
mov
lock
test
sbb
jge
test
into
sbb
cs
es
ds
into
mov
arpl
nop
inc
xlat
or
fildl
jb
mov
xor
mov
ficoms
negb
dec
scas
in
adc
lcall
mov
push
push
lahf
mov
inc
popf
test
loop
hlt
cmp
mov
popl
jns
pop
enter
push
add
mov
and
fsubl
hlt
inc
insl
int
xchg
lods
xchg
imul
inc
inc
lcall
insb
cmp
cmp
out
dec
jae
mov
inc
stc
jbe
sub
stos
ret
ss
fildl
in
stc
addb
mov
stos
aad
sbb
leave
inc
or
fcompl
adc
and
int3
in
fs
sbb
and
pop
adc
fprem1
adc
inc
lock
ss
ss
add
mov
popa
ja
ret
mov
pop
adc
or
stc
shll
movsl
scas
cmp
std
and
es
addr16
or
xor
lock
jae
and
mov
push
fdivr
sub
jno
cmp
xchg
adc
in
rorb
add
pop
sbb
push
das
aad
cld
sahf
js
popf
sub
lahf
mov
addl
int3
cmpsl
mov
and
dec
subl
xchg
xchg
pop
stos
cmpb
fcomps
mov
ret
mov
jb
insl
enter
cli
push
and
mov
dec
mov
lcall
mov
adc
popf
push
sbb
xor
xor
lcall
inc
dec
sbb
nop
ret
mov
pop
cmp
mov
pop
daa
popa
dec
cs
mov
js
push
imul
subl
inc
pop
je
movsl
jb
jb
insb
xor
dec
sgdtl
sub
call
mov
jne
push
and
cmp
mov
ret
fldenv
mov
xchg
or
daa
jne
adcb
jg
fbld
sti
cwtl
cmp
xchg
je
push
mov
pop
mov
mov
pop
jl
jp
add
dec
rol
arpl
js
in
push
push
pop
sub
and
jl,pt
ret
pop
es
lahf
bndldx
cltd
nop
push
and
mov
pop
sub
pop
je
mov
jle
and
movsb
push
pop
mov
les
outsl
mov
sub
xchg
cli
or
in
xor
inc
test
loope
xchg
sub
enter
pop
movsb
dec
ret
pop
nop
xor
pop
and
cmp
mov
and
inc
sti
aaa
jno
movsl
mov
cltd
xor
filds
inc
ljmp
insl
inc
sbb
ret
sbbb
lcall
rcrl
sub
jle
aas
and
push
movsl
rol
and
fwait
xor
jmp
jne
sbb
lret
mov
flds
in
gs
xor
setbe
out
mov
scas
rorl
addr16
or
ds
mov
sbb
fsts
les
and
test
jnp
in
fwait
lahf
push
jne
push
dec
leave
in
pop
push
mov
mov
pop
mov
cmovs
repz
popa
and
and
push
loope
sbb
imul
sbb
cli
lds
cmp
je
jp
call
push
dec
loopne
push
rol
jg
hlt
out
cmp
daa
int
aaa
rolb
imul
ret
dec
int
cmp
fs
push
cmc
adc
daa
cld
movsb
xor
mov
jo
call
fidivrl
movsb
cli
pop
jmp
or
rol
push
sar
jp
enter
in
dec
cmpb
movsb
pusha
dec
pop
ret
cmp
hlt
ja
push
adc
lds
or
adc
lds
nop
jp
dec
dec
adc
pop
push
pop
in
mov
ja
sub
jo
push
sar
jno
icebp
cmpsb
inc
cli
mov
sbb
loopne
jp
mov
bnd
cmp
aaa
push
mov
addr16
dec
lods
aam
xchg
xchg
pop
cmc
jno
adc
cmp
lcall
push
iret
cmp
xchg
pusha
jp
push
pop
popa
in
xorb
loopne
mov
mov
push
pop
jmp
xor
mov
sbbb
fdivrl
fcmovnbe
adc
mov
popf
imul
ret
daa
sarb
rorl
aaa
mov
cmpsb
enter
clc
mov
ficoms
cmpsl
jbe
mov
cmp
pusha
in
sub
sarb
jb
mov
xor
jno
sbb
sub
and
or
and
hlt
shll
xchg
xor
dec
in
std
jno
dec
xlat
incb
cmp
add
push
daa
mov
fidivrl
bound
out
dec
sub
outsb
les
dec
mov
and
jg
push
xor
mov
shrl
movsl
inc
jns
je
ds
cmp
inc
push
cmp
into
cltd
fsubr
mov
ja
rolb
bound
mov
push
das
jbe
mov
mov
orl
inc
aas
je
mov
jg
aaa
dec
divb
mov
aad
sbb
lahf
sbb
jne
mov
xchg
pop
loop
add
in
repnz
fwait
imul
testb
gs
mov
and
mov
sbb
test
in
test
loop
push
pop
sub
int
iret
dec
jle
cmp
loop
mov
mov
sbb
sbb
lods
sbb
or
cwtl
mov
sbb
cmpsb
xchg
pop
out
mov
jo
adc
cmpsb
push
xor
cli
cltd
add
add
xor
fwait
jne
fdivrs
jmp
out
movsb
movsl
int3
addb
repz
add
add
outsl
mov
inc
push
pop
hlt
add
repz
es
sahf
dec
mov
fidivl
data16
orl
subb
jne
jg
add
xchg
mov
hlt
and
sbb
xadd
sub
fsubrl
mov
cwtl
inc
cmp
in
in
cli
sti
in
xchg
add
in
xor
or
outsl
jo
xchg
je
or
fidivrs
int
mov
iret
out
adc
push
pushf
pop
je
dec
imul
ret
lcall
sbb
add
xor
push
addr16
add
mov
inc
mov
mov
push
and
mov
sahf
sub
mov
inc
mov
inc
pop
pop
add
int3
inc
and
rorl
data16
fucom
fdivrl
jmp
scas
mov
ds
and
inc
xor
sub
cld
push
int3
inc
lret
jmp
or
sub
or
dec
xlat
inc
dec
xor
ljmp
mov
inc
aas
popa
adc
mov
fnstsw
gs
push
or
mov
test
pop
xchg
jge
xchg
flds
xor
push
std
pop
xor
lods
lcall
and
aaa
jns
data16
and
fs
inc
dec
fdivs
stos
fildl
pop
movsb
pop
andl
add
cmc
sub
jle
aad
sub
jp
fwait
push
xchg
sub
adc
xchg
shrb
sbb
xchg
cmpl
pusha
bound
cmp
subb
adc
sti
xor
jbe
sysenter
sub
push
pop
pop
adc
pushw
push
lret
movsl
popa
call
lret
sub
push
xchg
dec
cmp
cli
pop
push
inc
aaa
gs
movsl
sub
sbb
pop
xor
cmpsl
xchg
xchg
add
push
xor
and
test
adc
mov
movsl
lahf
sbb
xlat
cmp
xchg
enter
sbb
cwtl
test
movsb
pop
js
mov
lods
imul
adc
sub
and
das
xchg
je
dec
inc
hlt
pop
cmp
adc
add
sub
xor
xor
adc
outsl
divl
mov
or
cmpsb
jb
xor
cmp
cmpsl
dec
gs
popa
inc
fucomp
popa
inc
xor
lcall
js
hlt
xor
call
mov
icebp
decl
add
jno
call
sarl
mov
shrb
pop
icebp
imulb
lods
mov
dec
pop
fmull
call
sahf
cmp
dec
dec
push
dec
pop
pushf
les
ffreep
mov
adc
out
shlb
push
or
push
dec
jge
ficoml
orl
push
out
sbb
push
rcrb
ret
adc
push
outsb
add
out
js
jns
pop
bound
push
inc
loope
push
lret
xor
ror
or
movw
lods
fstpt
andl
cld
jecxz
xchg
add
pushf
nop
loope
sub
cwtl
jno
pop
je
fwait
fwait
jo
in
pop
stc
enter
and
stc
adc
inc
fisubl
jg
xchg
aad
fcom
js
dec
cwtl
sub
gs
mov
pop
bound
es
and
xorb
sub
rorl
icebp
call
iret
sub
jns
xchg
mov
outsl
andb
jmp
pop
mov
pop
popl
pop
jno
pop
pop
inc
mov
orb
dec
and
and
add
mov
lret
mov
jo
sti
mov
mov
push
or
inc
or
mov
je
stos
cwtl
mov
movsb
paddusw
pop
movsl
jnp
pop
sbb
jl
rcll
int3
pop
rcrb
add
add
push
sbb
xor
insb
insl
movsb
pop
addr16
fistps
lahf
push
daa
jno
cmc
mov
pop
mov
jge
test
jne
push
dec
xchg
dec
insl
jle
push
cmp
sbb
popf
add
push
add
inc
mov
out
cmpsl
aad
pop
sub
in
jp
fstpt
add
xchg
outsl
cmp
inc
pop
pushf
sub
cmp
lea
out
lds
and
lock
mov
jo
jge
and
pop
aad
sub
add
pop
ret
pop
nop
hlt
xor
pop
pop
insl
dec
test
aam
test
ret
mov
lret
pushf
sbb
dec
scas
sbb
dec
xchg
xor
and
and
add
sbb
xlat
stos
insb
outsb
in
stos
xchg
jo
test
sarl
es
mov
pop
in
aam
pop
mov
bound
lret
sub
cmpl
scas
cmp
mov
ss
lahf
stc
push
rcll
out
hlt
or
push
jle
and
cmp
mov
or
incb
jmp
mov
rol
or
icebp
dec
loop
lret
repnz
ds
mov
or
mov
lods
push
mov
inc
or
repnz
or
push
sub
ficoms
jg,pt
pop
imul
ja
jo
lods
pop
mov
lcall
rorl
push
fisubrs
xchg
shrl
stc
test
dec
test
jnp
ret
xchg
cli
cld
mov
je
mov
cmp
cmp
xor
and
pop
scas
or
xchg
jp
repz
jg
pop
dec
out
mov
sahf
aaa
fdivrl
negb
into
mov
std
dec
sbb
add
rorb
xchg
pop
push
push
stos
mov
call
rclb
dec
pop
mov
inc
stc
adc
xor
and
xchg
pop
cmp
or
push
mov
scas
gs
lahf
fwait
cli
push
cltd
mov
rclb
and
subb
cltd
rorb
jg
ljmp
loopne
mov
xchg
mov
in
divl
movb
xchg
rolb
cmp
cmpsb
xchg
push
das
jb
into
inc
sbb
sub
incl
dec
in
pop
aam
aaa
pop
shlb
push
cld
test
out
pop
das
lret
cmp
mov
nop
mov
popf
cmpsl
jae
sub
or
xor
imul
movsl
sbb
cmp
fmul
xor
add
and
pop
and
test
out
mov
ja
lret
dec
add
and
sbb
icebp
cmp
sbb
cmpsb
cli
cmp
and
or
mov
imul
pop
add
ljmp
stos
or
sub
sbb
imul
jg
sub
jnp
jae
xchg
call
xchg
pop
fdivrl
cli
and
xchg
movsb
in
and
push
cmp
add
mov
std
sti
pop
xchg
xorb
sbb
pop
out
out
sub
mov
shl
ja
repz
pop
adc
sub
fisttpll
add
int3
ja
dec
push
out
cmpsl
imul
xchg
hlt
cmp
pop
popf
out
jae
xchg
push
loope
lret
loope
sbb
mov
movsl
jecxz
mov
sub
xor
shlb
pop
xor
lahf
and
shll
out
call
data16
and
test
push
int
or
out
ficompl
lea
fwait
div
outsb
hlt
or
cwtl
call
int3
lock
stos
push
mov
add
sbb
xchg
pop
jle
cltd
movb
xchg
stos
iret
lret
loopne
and
jmp
add
jbe
ficoms
pop
shrb
out
dec
mov
pop
and
cltd
stos
push
dec
mov
popf
mov
or
insl
lock
xor
xchg
inc
imul
daa
lds
or
dec
jnp
mov
and
add
or
cmpsl
loope
int3
scas
negl
dec
pop
inc
dec
leave
ret
js
inc
adc
fstpl
les
push
and
fsubrs
xor
mov
mov
push
and
jl
into
xor
adc
sub
cmp
test
les
stos
pop
daa
dec
push
jae
mov
repnz
popf
enter
pop
in
xchg
push
cltd
jbe
jmp
cli
scas
ret
adc
mov
and
int3
mov
cltd
aad
jne
push
jae
ret
test
flds
out
das
inc
adc
loopne
mov
cmp
xchg
into
sbb
in
popa
inc
ds
cmpsb
icebp
movsb
and
test
pop
test
ret
jne
jle
pop
fs
pop
dec
lods
adc
scas
xlat
push
jge
adc
testl
mov
sub
add
pmaddwd
mov
sub
in
cmp
fisttps
fldt
xor
or
insl
and
mov
and
xor
mov
push
and
sub
or
repz
test
repz
cmp
lahf
cld
icebp
mov
adc
jle
dec
sub
cmovo
popf
loopne
mov
mov
inc
push
mov
fiadds
inc
sbb
lahf
push
xchg
icebp
inc
fldcw
push
insl
dec
inc
and
movsl
mov
inc
sbb
xor
lahf
or
xor
scas
rcll
jns
pop
lods
jno
popf
repnz
push
pop
ret
sbb
lcall
fildl
in
repz
inc
mov
imul
adc
pop
mov
sub
leave
sbb
and
inc
loope
fwait
out
push
add
adc
iret
inc
add
xor
iret
dec
cmpsl
jp
mov
incl
push
emms
inc
mov
and
push
aaa
insl
cmpb
cmp
push
sahf
mov
mov
fcoml
loopne
cmp
ret
mov
rcll
out
imul
lods
dec
test
iret
jbe
fs
fdivl
cwtl
aam
mov
pop
pop
mov
xor
adc
insl
push
loopne
cmp
jns
jb
push
pusha
stos
jnp
shr
mov
jg
pushf
std
adc
imul
cmc
push
aas
and
and
out
cmpsb
sbb
sub
jecxz
nop
outsb
data16
les
lods
ret
sti
jno
sahf
fcomps
fstl
sbb
int
inc
in
dec
mov
pop
fldt
push
push
test
push
sub
xchg
into
dec
adc
xor
sbb
pop
cs
das
addr16
sarl
clc
and
or
mov
dec
xor
inc
add
or
outsl
xchg
fidivs
xor
daa
stc
and
and
sub
sub
pop
add
jbe
push
or
movsb
in
pusha
mov
movl
dec
pop
mov
leave
sub
out
in
pop
dec
jno
cmp
fs
xchg
rorl
inc
add
jmp
notl
dec
or
or
mov
dec
addb
pop
into
cmp
rolb
mov
sti
mov
in
mov
in
jb
xchg
mov
nop
shrl
dec
or
test
ss
fwait
mov
ljmp
int3
inc
push
pop
repz
pusha
pop
stos
jno
neg
out
jnp
pop
dec
or
xchg
into
mov
sub
lcall
es
adc
test
cmp
jmp
lea
insb
scas
addl
mov
adc
dec
cld
test
pop
push
cmp
mov
and
inc
xchg
cld
test
test
mov
js
add
jle
cmp
add
js
jne
cld
outsl
cs
subl
pop
fld1
test
fwait
xchg
push
and
xor
sbb
ret
xor
bound
add
inc
push
mov
out
mov
cwtl
pop
cmp
es
jle
loope
stos
push
dec
test
and
jbe
push
lcall
icebp
pop
cmp
rcll
push
adc
sti
js
dec
cmp
inc
pushf
shlb
add
jns
mov
and
or
out
shl
mov
add
jl
cmp
jnp
or
mov
pop
and
loopne,pt
rorl
xchg
aad
cmp
push
add
fcomp
repz
push
shlb
notl
je
jbe
aam
pop
fwait
aaa
sbb
mov
out
movsl
in
out
cmc
push
mov
outsb
cmp
test
sbb
fcomp
andl
pop
adcb
icebp
ficoml
or
mov
xor
add
sub
inc
arpl
xbegin
adc
cwtl
lds
roll
mov
cltd
dec
fwait
push
popa
jp
outsl
test
sub
arpl
jb
je
cmpsb
mov
stc
xchg
lock
sbb
int3
lret
sbb
shll
sbb
addr16
stos
jl
push
mov
sahf
pop
fwait
call
les
in
inc
mov
divl
and
push
add
fisttpll
mov
outsl
mov
roll
xchg
pop
xchg
ficoml
movsb
int3
jnp
cld
sub
mov
iret
das
int3
cs
shrb
add
rcrb
repnz
xchg
jl
jle
mov
je
push
jmp
mov
mov
in
xorl
xlat
sub
cwtl
fisttpll
push
lods
inc
push
sbb
inc
fdivs
cmp
not
repnz
mov
int3
pop
sub
out
and
lret
mov
push
cmp
xchg
mov
sarb
stos
mov
push
nop
aaa
mov
lea
push
sbb
pop
add
mov
mov
add
mov
sarb
jl
leave
xlat
pop
popf
push
enter
sbb
adc
fnsave
ret
lods
add
add
jae
xchg
dec
rcll
pop
inc
cmp
movsb
sti
jle
xchg
jnp
int
fnstcw
adc
adc
push
rcrb
icebp
or
call
into
sub
cmp
and
in
mov
subb
mov
loope
or
stc
addb
dec
clc
inc
xchg
xor
pusha
push
cwtl
inc
push
ret
cmp
loop
mov
xchg
mov
out
push
in
ljmp
mov
jbe
cmp
sbb
inc
xor
push
sbbl
add
sbbb
pop
adc
shll
ficoml
dec
pusha
fdiv
loopne
mov
xchg
push
mov
mov
xor
rorb
icebp
loope
and
faddp
inc
sti
sbb
xor
icebp
jmp
jge
cmp
outsl
popa
mov
mov
add
sub
arpl
sub
movsl
aam
cmpsl
imul
pop
loop
pop
outsl
enter
pop
nop
jns
jbe
mov
and
dec
add
jae
dec
inc
mov
and
mov
mov
cmp
push
ss
cmp
fadds
sub
test
dec
inc
fs
cli
aad
mov
xor
out
out
clc
jns
das
hlt
lret
jb
fadd
fidivs
mov
inc
and
sbb
bts
jl
xchg
xchg
mov
push
fsubrl
pop
fstpl
hlt
mov
pushf
xchg
insb
add
imul
loopne
jne
add
adcl
jae
dec
pop
inc
out
popf
imul
dec
pcmpeqd
sbb
pop
mov
mov
cvtps2pd
repz
or
scas
cmp
pop
xor
xchg
mov
movsl
fdivrp
push
jnp
mov
pushf
add
mov
stc
cwtl
rorl
mov
mov
mov
cli
js,pt
lcall
xor
push
lret
sub
adc
arpl
notb
dec
add
testl
jo
mov
in
adc
sbb
mov
jl
sbb
push
dec
inc
sarl
int
into
sub
jmp
mov
push
pop
subl
mov
rcr
or
in
dec
cli
push
pusha
jge
test
push
xchg
xchg
cmp
sbb
mov
pop
sub
cmpsb
xchg
xchg
scas
mov
push
aaa
out
or
sti
pusha
data16
add
int
or
mov
xchg
test
dec
mov
ds
and
ds
scas
fsts
pusha
push
sbb
xor
jp
scas
sub
pop
cmpsl
arpl
jle
jle
pop
fs
and
jo
rcl
cmp
add
inc
pusha
ret
in
and
inc
lds
icebp
dec
ret
mov
push
ret
mov
mov
mov
adc
cmp
adc
imul
dec
mov
ljmp
enter
ret
rcr
lock
pop
in
ja
lcall
gs
cld
or
push
int3
out
loope
add
mov
andb
inc
mov
dec
push
inc
add
rcr
insb
mov
stos
push
fs
fisubrl
mov
xor
jecxz
mov
xor
ret
pop
jle
ljmp
lods
and
push
scas
push
lds
inc
pop
test
adc
xchg
mov
rcrl
lds
jae
pop
sub
push
repz
pushw
insb
push
aas
xchg
pop
repz
aad
jl
jge
xchg
js
push
insb
push
ret
dec
out
movsl
fmull
fmulp
cmp
lds
and
in
jecxz
mov
mov
sbb
ja
int3
cmp
add
xchg
test
les
sbb
int3
push
test
rcrl
lcall
xor
push
jmp
sub
adc
sbb
sub
sub
lea
pop
push
inc
mov
dec
push
pop
pop
cli
dec
clc
cmc
mov
and
ret
inc
mov
in
aas
mov
push
ss
push
pop
pop
mov
or
xor
mov
inc
jle
dec
out
xchg
pop
xor
push
push
lock
adc
aaa
xor
mov
jb
cmpsl
push
mov
add
hlt
xchg
push
popf
cmpsb
lcall
add
cltd
sub
cmp
sbb
pop
or
push
xor
test
xor
cmp
jle
push
sub
cmp
scas
pop
xchg
shlb
ja
out
mov
aaa
xchg
xchg
ljmp
add
or
shrl
ljmp
das
in
dec
mov
out
jl
mov
scas
lahf
ss
mov
js
xor
dec
fcoms
dec
mov
bound
cwtl
pop
or
push
cmp
cli
xor
hlt
mov
or
popf
into
dec
adc
cmpsb
lds
sahf
mov
mov
repnz
aam
insb
hlt
iret
in
jo
ficomps
enter
sub
jmp
loop
pop
jns
cmpsl
test
mov
lods
xor
and
inc
mov
imul
lds
int
loop
jnp
or
in
movsl
sbbl
pop
dec
adc
ret
or
push
lock
push
push
daa
movsb
inc
add
jb
nop
into
scas
out
dec
in
mov
ret
cmpsb
aad
jg
inc
mov
adc
imul
dec
bound
rcrb
or
sbbl
scas
loop
call
lods
cmp
in
stos
mov
imul
hlt
or
mov
out
into
xchg
jb
pop
sub
jne
dec
int3
jge
pop
xor
adc
test
inc
push
push
imull
pop
adc
sbb
push
or
in
push
mov
cs
jae
mov
imul
movsb
fsubrl
test
pushf
jnp
jns
xchg
dec
pop
ds
adc
push
sar
sub
pusha
ror
vpavgb
mov
bound
shlb
lahf
push
mov
dec
mov
fnsave
lret
rcrb
and
cmp
cmp
lahf
mov
clc
test
roll
in
push
xor
imul
popa
inc
add
dec
bound
rorb
repnz
jne
mov
fstl
xor
push
push
lcall
lods
aad
lcall
mov
cmp
shlb
inc
xor
test
push
jo
fwait
cli
fildll
cld
popa
xlat
cmp
jbe
sbb
push
lea
and
ljmp
adc
jmp
scas
out
jns
or
int
stos
lea
add
pushf
push
mov
out
int
inc
pop
cmp
or
or
add
fnstenv
mov
xchg
popf
into
cmp
jecxz
sbb
sbb
and
or
cmp
jo
fucomi
xchg
stc
ret
loope
jnp
inc
pushf
out
dec
push
and
fadds
push
jbe
insl
dec
mov
mov
mov
xchg
xchg
mov
adc
xor
jl
fwait
loop
lock
aas
aas
mov
and
push
fidivs
ds
mov
mov
cmp
aaa
test
pop
dec
int
dec
jle
pop
insb
lea
outsb
lret
call
push
in
cmpsl
xchg
xchg
dec
push
fwait
adc
xchg
fwait
mov
or
or
mov
or
lret
xchg
jmp
es
aas
jae
push
jge
fxch
int
out
sub
clc
ret
leave
mov
in
sub
add
sbb
jp
xchg
inc
lret
xchg
into
sarb
sbb
cld
js
dec
in
sub
faddl
fisttpl
mov
pop
push
test
mov
in
sub
test
stc
rdmsr
dec
dec
and
mov
pop
sub
push
lcall
push
jmp
xor
and
lock
scas
push
cwtl
or
mov
dec
std
fwait
stc
dec
jle
mov
push
sub
xchg
xchg
sbb
adc
mov
cmp
push
incb
sbb
adc
add
mov
mov
pop
mov
popf
adc
outsb
jnp
int
int
test
mov
ror
and
pop
je
jecxz
int
rcl
inc
sbb
push
jmp
sahf
roll
pop
push
cmc
or
cld
adc
fwait
dec
sti
outsb
push
jp
iret
mov
pop
jp
add
jle
cmpsl
push
test
ja
push
dec
scas
insl
iret
imul
jae
inc
lock
mov
sub
dec
arpl
inc
gs
out
dec
push
fistpl
movsl
cmp
scas
stos
aas
insb
dec
pushf
xchg
push
movsl
lahf
into
cmp
fnsave
cmp
sbb
push
and
mov
movsl
gs
and
frstor
add
in
mov
mov
pushf
xchg
js
cmp
pop
sub
mov
aas
ret
xor
lret
insl
pop
ja
or
stc
lret
push
repz
xlat
fmuls
sarb
jle
lods
jo
or
xor
sbb
setle
jg
jne
mov
repz
jmp
fidivrl
lcall
inc
push
or
inc
xchg
jbe
cmp
lret
aas
bound
aas
inc
lods
dec
adc
bound
divb
ja
inc
in
cmp
test
and
xor
xor
push
cmpsl
mov
imul
imul
jnp
dec
aam
mov
imul
push
int3
xchg
mov
mov
jno
movsl
orl
cmp
or
xchg
scas
push
xchg
mov
lds
push
dec
pop
xchg
pop
mov
cmp
loop
adc
aad
xlat
push
rclb
fcompl
data16
jno
jno
sbbb
mov
xor
jge
lock
mov
sub
push
imul
xchg
xor
aam
xchg
pop
aad
and
mov
sub
enter
mov
shl
xor
mov
push
push
xor
sbb
xchg
imull
lcall
mov
mov
cmp
out
jge
movb
xor
mov
dec
mov
inc
ja
aad
fwait
mov
loopne
mov
iret
lcall
outsb
stos
loop
xor
bts
ret
sbb
das
adc
mov
xchg
and
mov
sbb
xor
xchg
adc
push
sbb
sbb
inc
sbb
lret
jp
mov
out
jmp
or
dec
xchg
mov
in
xor
int
daa
mov
rcll
mov
inc
inc
jnp
jne
jns
mov
imulb
jp
jmp
bound
add
add
es
cmp
or
mov
loop
cmp
stos
jmp
sbb
hlt
xchg
xchg
xor
movsb
push
lock
test
mov
mov
sub
jo
xchg
and
in
adc
pusha
adc
notb
lods
in
mov
pop
dec
std
mov
cwtl
mov
fs
stc
aaa
add
mov
jle
mov
and
cmc
rcrb
scas
cmpsl
movsl
int3
stos
lds
psrlq
mov
icebp
stos
push
fdivrl
loopne
cmp
sahf
push
jbe
mov
adc
add
stc
into
sub
cltd
rclb
mov
fs
in
inc
call
stos
push
jg
jl
cmpsl
jmp
shrl
test
inc
in
mov
lods
pushf
cmc
or
out
mov
cmpsl
cmp
addr16
cmpsb
mov
push
or
cli
or
mov
push
push
mov
fcoms
mov
scas
mov
xor
shll
popf
jle
cwtl
ljmp
insl
dec
pop
scas
dec
nop
pop
dec
mov
mov
stos
cs
shll
sahf
aad
leave
scas
xor
out
lods
or
dec
ret
or
cmp
cmp
cmp
or
mov
xor
bound
leavew
add
sub
adc
scas
lret
xchg
cmp
xor
cltd
xchg
xor
add
dec
std
stos
jp
mov
xchg
daa
adcb
clc
mov
call
in
sbb
dec
pop
fildl
out
add
sbbb
mov
fidivrl
sbb
xchg
adc
cmc
jmp
xchg
adcb
cmpsb
adc
rolb
call
or
sti
jnp
jg
adc
cmpsl
or
pop
lock
out
and
test
sub
rcll
push
faddp
sbb
shlb
cmp
fsubl
sbb
and
sub
pop
push
cmpsl
nop
cmp
and
lahf
popf
addb
mov
sbb
adc
dec
in
mov
push
mov
enter
mov
int3
and
pop
lcall
rclb
adc
adc
jo
imul
sahf
mov
dec
js
mov
scas
sub
int3
mov
pop
xor
fcom
mov
mov
jno
and
fbstp
loopne
jecxz
insl
scas
popf
scas
inc
pusha
scas
inc
pop
or
rclb
les
mov
shrl
cs
cmpsb
jmp
andb
push
push
insb
subl
cmpsl
movsl
out
call
scas
adc
mov
pop
push
jle
insb
lahf
mov
aaa
icebp
sahf
sub
xchg
sbb
sti
punpcklbw
cmc
scas
or
add
fs
pop
loop
sub
daa
or
mov
adc
in
mov
mul
mov
xchg
pop
fstps
int3
stos
pop
mov
dec
movsl
std
daa
into
les
sub
nop
xchg
jmp
push
loope
dec
mov
sub
inc
bnd
movsb
and
repz
inc
pop
mov
mov
out
stos
dec
jp
xor
lret
cwtl
dec
dec
mov
pop
stos
rcll
repnz
addb
cli
push
ret
enter
jne
stc
mov
aad
xor
arpl
out
jp
inc
cmp
std
test
out
idivl
mov
mov
ljmp
icebp
sbb
or
mov
fdivs
inc
fs
xor
popw
test
dec
lcall
push
cltd
imul
sbb
mov
les
icebp
insb
sub
insl
or
dec
dec
dec
and
sahf
mov
pop
cmpsb
aas
push
stc
and
xor
inc
out
call
xlat
aad
rcr
addb
out
pop
je
mov
popf
inc
rorb
adc
xor
jp
lcall
cs
lods
mov
iret
test
add
xor
es
jbe
push
sti
adc
adc
mov
xchg
mov
mov
mov
push
lea
push
sahf
inc
xorl
pop
in
lahf
lds
xorl
xchg
push
mov
push
jp
xchg
cmpsb
nop
out
and
ret
stos
icebp
lods
stos
fyl2xp1
in
lea
jge
dec
push
repz
into
inc
aas
xor
notb
repnz
adc
mov
push
fs
xor
dec
xor
loop
cmp
mov
aaa
dec
add
sbb
loope
popf
int
out
and
dec
int3
sub
test
mov
pop
inc
jmp
in
xlat
leave
in
or
aas
lds
es
mov
ret
call
fildll
sahf
nop
cmp
arpl
xchg
xchg
xchg
inc
add
jge
pusha
scas
jle
mov
pusha
dec
inc
fisubs
cld
cmp
out
mov
sbb
leave
aas
lret
cmc
nop
inc
dec
xor
mov
test
shrl
and
andl
inc
pop
mov
outsb
daa
adcl
adc
inc
fistpll
push
in
data16
xchg
movsl
mov
and
sti
jp
pusha
adc
mov
xor
mov
mov
and
arpl
stc
sbb
pop
inc
xchg
ljmp
push
rcrb
insb
sti
leave
jle
mov
sahf
fadds
in
and
stc
add
shrl
fs
stos
sub
cmc
mov
push
mov
cmc
jbe
xlat
xor
lret
push
mov
and
lods
xor
dec
stos
pusha
sub
pop
lcall
push
and
daa
adc
lods
add
jnp
test
outsb
sub
and
scas
push
pop
icebp
fwait
add
inc
push
fwait
movsb
cltd
inc
rcll
adc
das
jle
xchg
lea
fisttpl
lret
stos
mov
dec
cmp
jnp
or
dec
test
daa
lcall
adc
pop
jno
bound
or
cmpsl
pop
fsts
push
push
sarl
cmp
inc
es
inc
xchg
mov
push
lret
es
xchg
test
nop
add
sub
std
stos
push
cwtl
xchg
mov
lcall
jno
aas
mov
call
in
xchg
loope
adc
adc
test
imul
sbb
mov
jo
mov
out
sub
mov
ds
ljmp
je
push
inc
cwtd
jmp
ja
pop
pop
fiaddl
jbe
and
push
lods
enter
dec
add
or
fs
jmp
nop
inc
mov
jbe
mov
xor
movsb
add
xor
jle
add
add
pop
and
insb
fbld
sub
or
xor
nop
adc
cmp
shrl
rcll
pop
xchg
push
pop
adcl
mov
loope
dec
cld
iret
adc
sbb
cmpsl
adc
lcall
das
out
pop
imul
ja
lcall
and
jg
out
and
mov
jmp
scas
out
mov
cld
push
insl
cmc
rcr
or
cltd
testl
xchg
leave
push
adc
and
lods
or
pop
and
mov
shll
test
addl
cmp
push
jo
and
hlt
sbb
mov
sbbl
xchg
push
std
cwtl
sbb
notb
mov
mov
jmp
sbb
push
mov
jae
repnz
lcall
xor
jnp
xor
inc
fs
adc
fbstp
add
mov
or
jmp
adc
and
repnz
divb
cs
fmuls
sbb
repz
lea
int
sub
nop
lret
mov
sub
sbb
orl
ret
stc
mov
xor
adc
fs
push
movsl
pop
add
and
sbb
data16
outsl
add
mov
nop
push
call
data16
and
les
add
movb
insl
pop
das
or
and
roll
inc
fcmovbe
dec
scas
cmp
dec
and
jae
push
and
cmp
sbb
leave
sub
cmp
adc
stos
adc
cs
lods
pop
mov
repnz
lock
xor
or
test
pop
and
push
dec
lock
fs
stc
sbb
inc
pushf
inc
lahf
and
dec
fiaddl
callw
push
add
mov
jp
xlat
sarb
mov
adc
xor
push
sti
jns
stc
inc
jp
mov
repz
ja
sub
gs
popf
ljmp
bound
jo
das
fisubs
in
lods
or
jmp
sbb
mov
and
cltd
pop
adc
mov
adc
and
mov
add
xorl
xchg
leave
lcall
outsb
mov
sbb
jl
or
mov
jmp
shrb
fmul
cmpsb
push
dec
or
cmp
pop
cmp
and
xchg
fisubl
inc
call
test
mov
fs
pop
pop
pop
cmpsb
mov
cwtl
push
cmc
addr16
push
add
fld
and
shll
ds
and
xlat
xchg
push
mov
fadds
inc
rorb
mov
mov
call
call
push
mov
mov
movl
iret
pop
lds
sub
imul
add
mov
icebp
add
xor
addl
stos
jp
out
in
jge
mov
cmp
divb
mov
xchg
adc
ja
in
fstl
and
adc
xchg
fs
jg
outsl
mov
lcall
inc
shll
sub
lods
cmp
cmc
div
jg
lahf
in
xor
es
insb
cli
lods
cwtl
clc
negl
lods
jp
cld
dec
pop
mov
pop
jge
clts
loopne
outsb
adc
pop
push
pop
xorl
popf
scas
es
mov
xor
mov
bound
xor
inc
and
push
in
loop
mov
cwtl
int
adc
mov
and
je
fstl
xchg
adc
sbb
jnp
mov
lock
jbe
and
repz
inc
or
dec
push
out
lcall
or
popa
and
xor
mov
add
scas
xor
loop
scas
jns
adc
aam
movsl
sti
mov
xchg
ret
jg
pop
insb
shr
or
out
ljmp
add
xor
adc
lea
add
jae
ret
addr16
mov
add
sub
filds
push
lods
call
imul
hlt
sbb
cmp
adcl
and
into
push
mov
or
jmp
add
cwtl
ss
sbbl
and
inc
ljmp
mov
adc
ret
or
stos
stos
insl
lret
and
and
jl
and
sarl
xchg
lret
inc
dec
jge
add
loop
mov
and
in
cmp
fldl
es
mov
into
cmc
mov
ret
dec
fwait
repz
outsl
mov
shlb
cmp
das
or
in
mov
stos
mov
sub
clc
test
add
gs
push
iret
jmp
ja
xchg
test
inc
push
int
inc
push
adc
dec
out
fstpt
pop
ret
xchg
xor
and
daa
enter
sub
jnp
adc
out
sbb
push
and
mov
add
push
mov
cld
sub
fabs
in
dec
or
fdivrs
mov
cmp
pop
enter
aaa
test
aaa
mov
sub
pop
adc
sbb
imul
pop
ja
xchg
inc
push
mov
inc
inc
adc
xor
dec
jb
jne
mov
adc
bswap
ffree
push
add
fwait
push
je
ret
mov
rol
fmull
icebp
outsb
pop
lret
dec
ja
sub
arpl
or
cmpsb
mov
cmp
gs
or
or
mov
cltd
jmp
or
imul
jg
cmpb
xor
dec
enter
mov
or
sub
inc
nop
cmpsl
arpl
sbb
sbb
pop
push
je
lds
call
push
sub
and
js
xchg
sub
mov
and
push
sub
in
enter
jbe
lods
outsl
imul
movsb
sub
or
add
jbe
fadds
jge
iret
sbb
iret
sub
pop
mov
sbb
mov
dec
add
insb
lret
ja
sti
xor
mov
mov
shll
dec
pop
mov
cmp
xchg
pop
loopne
lods
sbb
dec
loopne
cld
aaa
mov
mov
mov
jmp
data16
into
inc
mov
outsl
dec
inc
sub
sbb
cmp
adc
mov
test
out
dec
jbe
or
shrl
push
jns
ret
cli
fsubr
test
xor
rclb
mov
and
loop
lahf
cmp
lret
lods
add
jp
lods
outsb
cwtl
push
cli
push
shlb
sbb
fadds
mov
xor
mov
inc
sub
ds
and
cmpl
xchg
jb
and
fidivrl
jne
inc
fcoms
out
into
and
cwtl
add
imulb
popa
lahf
fcompl
aam
aas
fdivrs
jl
stos
sbb
dec
pop
jo
hlt
xchg
loopne
push
rcll
ds
mov
imul
sub
sub
adcb
jle
mov
dec
add
lcall
pop
push
enter
mov
punpcklwd
jns
daa
inc
jae
out
mov
dec
lea
pop
push
and
jge
or
mov
jae
ds
mov
pop
in
movsl
sbb
mov
imul
add
xor
xchg
adc
shl
jl
repz
adc
call
frstor
sub
xlat
addr16
out
sbb
movsl
mov
dec
xchg
lea
enter
insl
mov
imul
ret
xchg
mov
xlat
xor
negl
imul
out
jno
push
pop
loopne
push
cmpsb
mov
pop
addl
lea
cli
push
pop
xor
loopne
cli
sub
imul
mov
aad
adc
add
scas
jle
xchg
sub
jg
movsb
popf
daa
cwtl
lock
or
dec
jle
sti
dec
adc
movsb
sbb
pop
aaa
inc
cmc
and
push
mov
xor
lods
sbbl
sbb
inc
fwait
jae
out
lret
fldl
jge
dec
lahf
outsb
lods
aas
es
or
mov
xchg
imull
mov
jbe
notb
cmp
add
fs
jb
lret
sti
mov
rcrl
or
xchg
xchg
xchg
frstpm(287
xor
mov
push
shll
cmp
adc
add
dec
xchg
cmp
repz
arpl
push
repnz
adc
ret
test
outsb
mulb
add
mov
pop
jge
push
in
outsl
xor
or
insl
xlat
push
mov
sbb
fildl
lret
lahf
out
aas
inc
xor
or
int
inc
fidivrs
sahf
inc
lcall
pop
outsb
lcall
shlb
mov
lds
jmp
and
ss
pop
outsl
es
out
add
out
or
cltd
mov
fdivrp
cltd
xlat
sbbb
mov
sahf
scas
xchg
mov
in
mov
cld
xchg
aas
mov
push
push
inc
dec
xchg
mov
testb
shr
in
sub
fchs
out
inc
mov
fnstsw
xchg
cmpsb
jmp
push
push
jle
test
adc
hlt
or
hlt
divl
notb
les
xchg
gs
test
mov
outsb
and
fcmovnb
sub
jo
add
nop
roll
das
adc
hlt
xchg
pop
dec
and
icebp
cmp
adc
push
xchg
push
cmc
push
xor
cmc
fcmovnu
adc
add
push
mov
cs
aad
fwait
cmp
xchg
jb
leave
sahf
dec
ds
xchg
mov
mov
cwtl
push
insb
push
ss
add
mov
vmulsd
xor
xor
xchg
fdivp
xchg
dec
aaa
sbb
push
xchg
out
test
test
mov
xor
push
pop
lcall
fimull
adc
adc
bnd
jbe
adc
stos
sub
pop
out
add
hlt
clc
push
fimull
dec
js
mov
pop
aaa
jp
push
adc
lods
dec
xor
or
fs
int3
push
test
jp
add
mov
or
shll
cmp
std
jb
pop
cmp
fldt
pop
xlat
pop
add
sub
psubd
nop
jo
jns
add
out
jg
fsubs
sbb
je
fldt
cltd
inc
cmpsb
bound
dec
or
mov
cmc
adc
dec
shll
xlat
test
ja
mov
outsb
cs
dec
cmpsb
mov
int
daa
cli
aas
inc
xchg
push
ss
test
sarl
or
pushf
or
adc
push
mov
enter
fldt
sub
add
inc
mov
stc
jne
iret
xor
shl
popa
mov
and
in
and
mov
imul
fildll
loopne
cmc
int
out
push
inc
xchg
mov
in
lods
mov
push
jecxz
stos
lcall
adc
ficoml
enter
int
out
jb
clc
dec
in
ficoms
pop
ss
lds
cmp
jns
adc
js
jecxz
outsl
fisubs
cltd
popa
adc
sbb
nop
je
cmp
adc
pushf
jno
into
sbb
in
sbb
sbb
xchg
fistpl
inc
xor
insl
mov
ret
inc
fisubl
testb
sub
aaa
push
in
aad
outsb
jecxz
loop
pop
clc
add
lods
das
lahf
fucompp
call
jbe
sti
xor
dec
dec
repnz
jmp
xlat
add
insl
scas
pop
test
and
out
mov
dec
loop
test
sahf
mov
mov
in
scas
test
ss
and
jp
dec
inc
cwtl
es
lahf
cmp
in
in
inc
movsl
insl
call
pop
sahf
fisubl
and
push
rorl
ret
jmp
lock
adc
addr16
and
jno
jmp
repz
lahf
pop
aaa
or
push
add
jle
out
hlt
jo
cmp
lret
and
lea
inc
mov
adc
inc
pop
cmp
adc
adc
sub
test
xchg
adc
push
sub
xchg
js
std
mull
out
repz
int3
mov
or
add
loopne
outsl
cmp
out
cmpsl
and
pop
or
dec
je
xchg
js
stos
sbb
in
inc
fcomi
aam
add
push
xor
les
adc
dec
popa
xor
cmc
loope
cmp
repnz
cmp
lock
outsb
in
clc
xchg
in
sahf
sub
sahf
roll
mov
jno
test
mov
inc
arpl
bswap
ds
mov
adcl
test
jno
xchg
test
in
loope
test
data16
dec
iret
mov
mov
mov
adc
xor
jnp
xor
shll
mov
sahf
in
and
testb
cmpsb
adc
sahf
mov
jnp
fildl
daa
and
pop
jecxz
add
pop
std
imull
ss
jno
sbb
js
repnz
rorl
jge
in
sbb
mov
mov
movsl
and
jbe
mov
inc
and
lds
xor
xor
test
pop
inc
mov
push
imulb
xchg
in
or
pop
and
xor
jl
cmpsl
stos
loop
mov
inc
test
xchg
insb
mov
in
xor
sbb
sbb
cmpsb
jg
mov
add
pushf
imul
clc
icebp
xor
iret
or
ljmp
std
pushw
adc
lret
in
jecxz
or
inc
sub
dec
out
push
jo
mov
bound
push
repz
dec
mov
push
jmp
arpl
mov
inc
outsl
cwtl
push
xchg
add
loope
repnz
movsb
imul
jo
mov
lret
and
adc
aam
pop
int3
pop
push
sbb
adc
or
sub
ss
pop
xchg
push
enter
mov
cmc
rclb
dec
xchg
xchg
stos
inc
jbe
mov
jns
add
test
sub
xchg
xchg
mov
test
adc
into
xchg
push
cmp
mov
ret
loopne
imul
jg
pop
cld
das
sbb
adc
scas
pop
xchg
aas
inc
sbb
jle
sbb
pop
mov
sub
adc
mov
mov
leave
gs
pop
xchg
adc
hlt
jg
jne
push
cmc
mov
pushf
sbb
fisttpl
jmp
xchg
imul
test
mov
cli
jae
sbb
sbb
xchg
outsb
jmp
cmp
lods
xchg
pop
mov
pop
out
rcrb
mov
add
and
sbb
shr
out
sbb
pop
push
cs
mov
sarl
lahf
push
push
test
push
testl
pop
dec
cs
or
push
jl
in
iret
cmc
call
or
and
stc
shll
mov
and
insl
sub
aad
push
inc
xchg
push
inc
in
push
cmp
mov
add
push
iret
lcall
dec
fwait
dec
push
pusha
insb
dec
fimull
in
inc
mov
imul
push
xchg
int3
test
loop
mov
test
cli
outsl
xor
scas
jge
jg
xor
inc
ja
and
jno
mov
xchg
and
fisttpll
inc
fisttps
pop
icebp
loope
movsl
repnz
sub
sub
dec
dec
shrb
fld
push
fadd
sub
xchg
mov
rcl
xchg
mov
adc
popf
and
mov
movsb
pop
xchg
push
pop
out
xor
testl
frstor
cmp
loope
or
and
mov
std
scas
inc
test
insb
mov
jge
into
jmp
add
ret
fld1
popa
fs
leave
cmc
push
sub
xlat
out
add
repnz
xor
pop
orb
mov
pop
repnz
mov
jg
fidivl
jo
imul
mov
nop
pop
aam
sub
pop
cltd
pushf
lock
push
mov
insl
sbb
scas
inc
push
sahf
in
and
fs
mov
in
cmp
and
in
lods
int
push
out
add
mov
cmp
xor
pop
jne
leave
test
cltd
in
lret
outsl
dec
mov
int
mov
hlt
add
mov
leave
push
adc
and
gs
cltd
std
xor
xor
mov
pop
push
mov
out
dec
sbb
push
jl
lds
fmuls
daa
mov
pop
sti
clc
lahf
pop
pop
movsl
in
jle
xchg
mov
sti
movsl
std
and
lcall
cmp
rclb
push
test
hlt
xchg
call
call
or
negl
imul
cld
mov
mov
outsb
sub
popf
jae
mov
jo
sbb
movsb
jbe
dec
sti
pop
cmp
mov
cmpsb
lods
fs
bswap
cwtl
and
js
sub
mov
ror
and
mov
jo
shrb
jl
lret
ret
cli
cli
in
mov
push
shrb
mov
data16
sti
jnp
in
jle
xor
das
mov
inc
xchg
dec
repz
mov
mov
sub
xchg
sti
and
lcall
mov
mov
mov
test
mov
sub
mov
inc
rcrb
shlb
mov
dec
nop
mov
cmp
xlat
in
xchg
enter
lea
inc
inc
add
xchg
call
ss
cmp
pop
shr
out
shrb
xchg
ss
fistpll
push
jae
push
in
xor
dec
mov
cmc
dec
dec
adc
xchg
mov
adc
mov
scas
inc
into
adc
push
fiadds
popa
mov
cmp
mov
sub
xor
stos
jle
mov
pusha
jo
ja
mov
sub
mov
mov
testb
divb
popf
pop
push
add
and
scas
insl
cmp
xor
mov
jno
cmp
add
inc
std
fistps
xchg
sub
shr
fcmovnb
and
ret
inc
xor
fndisi(8087
or
test
enter
mov
bnd
divb
or
ret
shrb
int
subb
addr16
ss
cmpsl
rep
fsub
adc
or
and
out
adc
push
sbb
dec
lock
xchg
popa
ds
mov
mov
jge
lock
repz
std
addl
shll
dec
testl
stos
in
mov
mov
jb
mov
add
mov
inc
int3
add
mov
ret
sub
inc
pop
mov
pop
clc
inc
cmpsb
pop
adc
mov
sub
shrb
icebp
enter
dec
xlat
inc
mov
inc
jmp
mov
or
push
arpl
loopne
jno
jns
je
xor
xchg
lods
stos
jle
add
jl
pop
mov
xchg
and
mov
es
sbb
jo
adc
icebp
stc
push
mov
data16
add
int3
or
shlb
and
inc
push
sub
mov
adc
adc
loope
dec
cmp
inc
cltd
in
hlt
mov
push
sub
xchg
insb
inc
andb
mov
test
sub
inc
incb
out
sub
xchg
sbb
scas
pop
adc
test
addb
mov
xor
movzwl
adc
sbb
xor
dec
sbb
mov
pop
mov
in
adc
stos
mov
jno
insb
mov
jg
mov
adc
push
insb
push
popf
mov
nop
jne
adc
jns
cmp
xchg
movsl
loopne
sar
add
aaa
add
outsb
outsl
add
in
outsl
mov
out
out
orb
icebp
sub
xchg
xchg
cmpsl
adc
jnp
lcall
fdivrs
loopne
mov
xor
mov
out
iret
mov
cmp
ret
fcmovu
push
aam
pop
or
in
fimuls
into
cmp
das
xor
test
mov
mov
mov
shrl
mov
aaa
jno
jb
vpextrw
lds
xor
cmpsl
xchg
into
fidivl
fcmovbe
dec
aam
mov
fnstcw
sbb
bound
push
adcl
out
and
aaa
nop
or
jo
adc
hlt
addl
push
and
mov
andl
movsl
mov
js
sub
in
cli
mov
cmc
hlt
dec
mov
sahf
cmp
sbb
sub
das
movsl
pop
imul
mov
aas
dec
jg
pop
push
and
dec
test
cmc
das
clc
sarl
pop
popa
into
fiaddl
cmpl
notb
gs
ficoms
and
inc
std
dec
mov
insl
fistps
sub
jns
jle
shll
sarl
in
jbe
fistpll
loopne
imul
sub
js
cmc
hlt
xor
mov
push
outsl
testb
outsl
adc
mov
test
pop
mov
mov
pop
mov
xchg
test
and
loopne
mov
test
adc
xchg
adc
jae
hlt
pop
mov
mov
xchg
and
enter
fnsave
mov
rcll
iret
jae
push
fdiv
inc
fdivrl
mov
dec
add
xchg
sbb
xchg
cmp
or
test
adc
sub
roll
fadds
xchg
insb
cmp
lahf
push
xchg
pop
data16
gs
std
pop
pop
cmc
scas
adc
adc
mov
xchg
mov
mov
pop
add
fimuls
in
xchg
inc
mov
cmp
rcr
in
mov
ljmp
sbb
ljmp
sub
push
push
mov
jl
test
test
fstps
sub
in
fwait
stos
and
dec
int3
cli
jo
std
cmp
or
mov
sbb
lret
xor
fisttpll
dec
pushf
call
push
cld
sti
xor
dec
add
aas
insl
mov
and
add
loopne
inc
mov
sar
nopl
adc
pop
lods
int
ficoml
out
clc
sub
test
in
push
movsl
xchg
push
push
gs
in
rcrl
clc
xchg
push
imul
push
test
mov
aad
sub
add
cmp
lock
add
pop
cwtl
jp
daa
dec
pop
movsl
mov
test
jp
jb
pop
add
scas
outsb
sbb
sub
imull
arpl
inc
pop
cmp
jmp
add
fisubl
mov
xchg
insb
call
jnp
test
in
lods
xchg
adc
or
adc
fwait
adc
aam
ret
xor
loope
mov
js
fldenv
sub
jg
scas
sub
insl
jp
movsl
xor
outsb
scas
nop
adc
jecxz
std
adcb
imul
or
dec
mov
sbb
sbb
nop
xchg
pop
add
mov
jns
add
sub
dec
cmp
push
lods
mov
push
cs
xor
clc
cmp
mov
push
daa
xor
lahf
xchg
jl
popl
jbe
mov
fwait
rorb
mov
je,pn
xor
je
adc
pushf
and
or
fmull
test
xchg
mov
inc
fdivs
clts
xchg
cmpl
flds
enter
imul
out
shl
fcmovbe
arpl
mov
mov
mov
sbb
dec
test
rcll
das
or
stos
loopne
sbb
outsl
int3
data16
cmpsb
cltd
lock
lock
in
insl
out
std
data16
inc
and
clc
and
mov
mov
hlt
sti
jl
cmp
stos
sarb
lret
leave
dec
push
xor
test
xor
jne
out
shrl
fcmovu
imul
daa
daa
stos
leave
mov
jmp
movsl
dec
adc
aas
ret
daa
fwait
sbb
jg
mov
daa
xorb
xchg
dec
lret
adc
mov
lods
and
adc
cmpsb
xchg
mov
cmc
sbb
mov
xchg
mov
pop
ljmp
rclb
pop
push
pop
xor
add
add
mov
xchg
repz
lock
inc
rorb
cmp
inc
pusha
repnz
lcall
in
sbb
inc
xlat
add
xchg
pop
pop
je
and
in
sahf
iret
cmp
inc
mov
mov
pop
arpl
jne
pop
pusha
bound
mov
fistpll
and
addb
popa
insb
shlb
enter
lahf
das
cmpsl
scas
xchg
xchg
aam
adc
jmp
add
mov
lret
xchg
imul
lea
mov
stc
shrl
mov
imul
cld
addb
dec
in
mov
test
out
cmc
mov
jmp
xchg
dec
loope
jp
or
add
les
push
int
sbb
roll
inc
jl
jmp
loop
mov
in
stos
roll
aaa
add
hlt
out
inc
ss
std
nop
jecxz
add
ds
jle
sub
pop
xor
or
dec
imul
clc
jmp
pushw
loop
jge
in
iret
fnstenv
repnz
stos
or
cmp
fstps
sub
jge
lahf
mov
pop
xchg
fists
pop
sub
xorl
cmp
or
sub
dec
dec
scas
or
and
adc
mov
pop
mov
mov
push
inc
out
mov
push
mov
mov
mov
pushf
xorb
jb
jg
adc
dec
jge
ds
mov
jns
cli
fidivl
cmp
push
dec
ljmp
adc
faddl
stos
clc
jle
push
shll
lcall
sbb
imul
pop
pop
ss
push
add
push
add
rcl
jnp,pn
mov
or
mov
sbb
push
icebp
xchg
sbb
sbb
aaa
and
hlt
push
or
fnstcw
loop
scas
lods
imul
out
pushw
sbbb
fists
sti
mov
stos
divb
out
out
lcall
dec
in
mov
addr16
inc
lret
mov
sbb
xor
or
mov
xchg
decl
jbe
mov
shlb
jecxz
lret
mov
js
es
loope
cmp
out
nop
ds
aas
imul
and
sbb
mov
pop
fwait
mov
sbb
and
shr
iret
mov
jecxz
sbb
push
cmc
andb
rcr
test
mov
push
jne
push
movsl
pushf
mov
mov
mov
push
jne
ja
nop
shlb
data16
push
fistps
jno
pop
shr
rcrl
mov
test
jmp
rorl
cmp
cltd
adc
aas
jne
sbb
pop
fsubrs
add
dec
test
cmc
add
cmp
aam
or
mov
inc
imul
mov
xor
outsl
mov
jb
mov
outsl
lds
popl
lds
shr
pop
scas
lret
fisttps
ret
mov
xchg
ret
test
aam
inc
aaa
cmc
stos
loop
adc
outsb
push
ret
fsubrs
hlt
mov
or
pop
pop
jp
mov
dec
imul
ds
hlt
orl
aad
or
test
xchg
lret
sub
inc
xor
mov
sub
aad
push
mov
sbb
addr16
dec
addr16
lods
ror
cmpsl
mov
jb
pop
and
fldenv
xor
enter
dec
sub
outsl
sub
xor
rol
popa
adc
lret
in
adc
rcrb
inc
lret
rcrb
lcall
and
push
ret
lret
les
movsl
movsb
mull
repz
push
dec
mov
sub
rolb
add
ffree
or
mov
addr16
lidtl
testl
insl
shl
popf
aaa
mov
xor
ja
popf
lret
mov
cmpsl
cld
jmp
daa
outsl
outsb
push
scas
cmp
sub
pop
fdivrl
out
lods
xchg
pop
mov
out
pop
push
cmp
test
xchg
cs
mov
stos
mov
lds
or
inc
push
pop
cmp
jge
cwtl
test
push
cmp
addr16
popa
push
sti
push
pop
fidivrs
aam
fmull
pop
adc
movsl
stos
sub
into
pusha
lock
jne
adc
and
imul
add
push
cmp
xor
sbb
std
xor
dec
outsb
lcall
sub
fsub
lds
in
fcoms
outsl
stc
xor
mov
shl
and
cmp
mov
mov
out
cmp
mov
cli
fsubs
or
add
jle
mov
adc
pop
lret
jle
scas
mov
jecxz
iret
fwait
pop
fnstcw
pop
mov
jae
fnstenv
loop
inc
lret
inc
pop
enter
push
mov
mov
mov
dec
push
outsl
fwait
out
loopne
std
aad
pop
dec
test
pop
test
push
or
mov
and
mov
js
popf
inc
adc
push
mov
testb
popa
fidivrs
pop
push
stos
adc
movsl
popa
into
mov
jle
xchg
sub
jae
or
fs
or
imul
loopne
hlt
stc
push
or
dec
jne
stc
jbe
aad
adc
cmp
push
pusha
mov
pop
sub
call
inc
pop
daa
push
mov
nop
push
loopne
add
lock
sub
lcall
into
adc
mov
sbb
or
cmp
js
jo
mov
cmp
mov
cmc
push
xor
push
sbb
call
cltd
jecxz
movsb
lds
popa
fisubs
insl
stos
mov
xchg
ret
pop
jmp
mov
cmpsb
cltd
xor
in
mov
mov
mov
xchg
ja
rol
pop
lahf
repnz
add
es
xlat
and
std
lds
js
pop
loopne
out
xchg
cld
movsl
imul
ret
loope
and
pusha
jmp
daa
mov
cmp
outsb
cltd
and
loopne
nop
mov
mov
mov
addr16
das
ljmp
push
movl
xchg
les
jmp
adc
arpl
rol
sti
js
sub
outsl
add
fildll
inc
jp
aam
add
pop
cmp
push
cmp
pop
mov
shlb
add
loop
push
pushf
cmc
dec
lods
ret
push
pusha
stos
push
out
push
or
insb
and
negb
in
xlat
data16
rorl
mov
sub
jp
mov
push
inc
pop
imul
inc
inc
mov
arpl
lahf
lcall
adc
xor
mov
ljmp
lods
dec
jno
push
in
cltd
inc
pop
dec
out
push
push
mov
add
mov
xchg
in
xchg
mov
cmp
mov
je
mov
stc
pavgw
subb
jecxz
cmp
pop
int3
js
xor
dec
sbb
lret
mov
sbb
push
pop
cmp
lcall
or
loop
sbb
sbb
dec
mov
fcoms
ret
lahf
scas
mov
sbb
cmp
add
pop
mov
stos
xchg
jp
in
sahf
call
jnp
dec
xlat
inc
lcall
mov
mov
lahf
sbb
das
mov
ljmp
pushf
cmpsl
and
sbb
fsubrl
and
pop
hlt
cmp
and
daa
bound
movsl
daa
and
sub
add
dec
cmpl
outsl
inc
jne
imul
pop
pop
iret
mov
push
adc
repnz
adc
mov
loopne
lods
ja
in
faddl
out
xchg
lea
add
das
stos
mov
pop
xchg
call
popf
insl
inc
js
xor
dec
aas
out
cmp
jns
call
adc
cli
dec
icebp
xor
jmp
mov
push
js
push
lds
shr
repnz
mov
shr
stos
add
stc
stc
sbb
aas
or
pop
cld
xchg
cmc
fistpll
in
loopne
pop
inc
jns
in
aas
sub
mov
cmp
shrl
mov
in
imul
ret
pop
cwtl
xchg
ljmp
dec
into
fs
lret
push
loop
inc
pop
addr16
cmpsb
or
leave
pop
lahf
sub
dec
out
mov
mov
or
inc
mov
mov
popa
push
mov
jmp
xchg
ret
pop
mov
dec
call
pop
jmp
dec
mov
cmc
imul
xor
test
mov
adc
aad
movsl
or
sti
std
add
push
mov
test
cmp
scas
sarl
cld
inc
movsb
data16
push
gs
out
int
push
or
mulb
inc
cmp
xorl
movsl
sub
xor
add
inc
jae
mov
cs
pop
nop
ret
loopne
rcl
iret
iret
aam
sbb
jnp
dec
cmpsl
add
mov
xchg
sbb
andl
int
mov
add
js
stos
inc
xchg
and
insb
xchg
mov
jmp
jp
adc
ret
popf
push
setb
or
inc
and
cmc
repz
dec
or
inc
pop
movsl
faddp
cmpl
inc
mov
mov
out
lret
pop
inc
lar
sbb
fnsave
cmp
mov
sub
inc
or
dec
loope
sub
adc
hlt
cmp
lock
push
imul
repnz
xor
rcr
in
sub
pop
xor
mov
in
ljmp
xor
mov
ds
imull
loopne
adc
cld
mov
out
rorl
daa
xor
shl
jnp
add
sbb
fimuls
int
in
repz
ds
and
pop
sub
cmp
push
fsubrs
hlt
enter
popf
mov
xchg
xchg
dec
stos
cmp
jo
js
fsubrs
pusha
mov
inc
mov
ljmp
loopne
dec
xor
and
gs
mov
test
cmc
cmp
inc
shll
mov
and
cmpsl
mov
push
push
mov
ss
pmaxsw
sbb
xor
pusha
xor
cmp
push
shll
ss
push
xchg
das
fst
iret
or
mov
decb
stc
lcall
mov
daa
xor
mov
addr16
icebp
in
aad
mov
jge
inc
in
mov
test
jbe
hlt
cmp
inc
push
mov
je
dec
xor
sbb
and
aas
lock
cmp
loope
and
test
jae
lods
bound
stc
jg
or
outsl
jle
xor
dec
int3
sub
pop
inc
sbb
leave
out
fdiv
mov
daa
in
mov
or
cltd
sbb
cmpsl
push
add
ror
mov
stos
call
into
fisubl
leave
in
aad
cwtl
jmp
mov
scas
dec
lods
adc
movl
ror
int
imul
jecxz
outsl
rorb
repz
das
push
aad
ljmp
ror
cs
sub
rcr
push
xor
sub
imul
push
cmpsl
sbb
mov
jle
cmp
push
icebp
xchg
sbb
movsl
xchg
push
and
adc
lds
movb
pop
fs
sbb
fcmovu
arpl
out
dec
andb
pop
out
nop
push
shrb
movsl
ss
jns
insl
arpl
rcrb
out
pop
jl
jle
cmpsl
js
mov
or
push
iret
pop
hlt
pop
and
pop
dec
lcall
add
imul
loopne
lcall
pop
sub
mov
or
repnz
aam
clc
cld
cmp
sub
xchg
mov
pop
push
jns
pop
push
rclb
mov
mov
push
mov
adc
les
xor
lret
test
ss
cmp
sub
roll
push
or
les
xchg
mov
je
pop
adc
daa
outsl
mov
push
fiaddl
loopne
push
inc
mov
sahf
mov
in
inc
iret
xchg
out
inc
xor
xor
sbb
pop
test
inc
outsb
fildl
inc
gs
test
imul
push
jl
in
or
xor
mov
mov
push
sub
jbe
aad
or
or
xchg
rcl
and
daa
mov
movsl
gs
and
stos
aaa
xchg
fcoml
inc
aas
mov
cltd
xchg
push
ljmp
adc
cli
mov
jae
aaa
pop
mov
xchg
mov
xchg
push
xchg
xor
pop
and
mov
popa
jle
push
pop
movl
mov
aam
pop
fstl
roll
mov
sti
lods
dec
imul
cs
ljmp
mov
leave
bound
dec
mov
pop
fistl
xor
inc
mov
mov
and
add
ljmp
xchg
outsl
mov
or
lcall
das
std
xor
outsl
pop
jnp
mov
and
adc
xor
push
std
loope
out
jecxz
testb
lods
out
pop
pop
cmpb
sub
xor
mov
into
sub
xchg
cs
push
repnz
cli
cwtl
push
or
es
adc
ljmp
aam
pushf
mov
aad
repnz
mov
lock
stos
lods
pop
dec
insb
shl
inc
fnsetpm(287
xchg
sahf
adc
mov
aam
pop
popa
pop
fidivs
fisubrs
sub
shlb
xchg
hlt
mov
movsl
push
and
xor
shlb
cwtl
xchg
sbb
and
dec
movsb
stos
mov
jbe
cmp
mov
pop
sbb
flds
mov
cmpsl
mov
sti
loopne
cmc
jae
jg
push
movlhps
dec
arpl
jg
outsl
dec
mov
cmp
clc
je
sub
lahf
fmuls
jl
pop
mov
ss
mov
idivl
mov
icebp
mov
daa
repz
xchg
in
push
fdiv
adc
dec
jno
or
dec
cli
cmp
shr
test
mov
ret
adc
das
dec
jb,pt
push
aam
out
inc
lret
repnz
ret
movsb
cmpsl
add
cmpsl
scas
repnz
popf
and
hlt
scas
daa
rcr
out
call
js
adcl
xchg
mulb
call
xchg
push
es
lcall
testl
cmp
cmp
shrl
mov
sti
jle
cmp
cmc
sub
out
xor
mov
jg
mov
std
jge
adc
cmpsb
cs
rcr
mov
and
push
mov
out
mov
jg
sti
push
jl
add
pop
jecxz
lahf
fwait
insl
in
in
aaa
pop
dec
jns
adc
sbb
and
clc
mov
loope
and
jl
mov
imul
data16
std
mov
fcom
fimull
fucom
popf
mov
pop
xchg
pop
out
add
iret
ret
enter
xor
fwait
adc
lret
test
adc
or
mov
sub
fwait
dec
data16
jno
bound
out
lahf
enter
add
in
jne
dec
jnp
jno
sbb
imul
pop
mov
push
adc
xchg
pushf
rolb
jno
dec
testb
dec
test
movsl
scas
or
mov
aaa
or
or
loope
inc
enter
adc
xchg
std
xchg
adc
push
inc
pop
ss
sahf
mov
sub
or
mov
sbb
sub
es
mov
sbbb
mov
jne
int3
ss
ds
pop
pop
dec
pop
mov
outsl
jbe
into
movsl
loope
pop
mov
xchg
mov
mov
and
scas
jecxz
and
add
mov
aaa
xchg
cmp
orl
repz
imul
lock
mov
xor
xor
mov
and
cmp
sbb
xlat
and
fimull
xchg
pop
sub
jmp
jns
xor
imul
adc
xchg
add
out
mov
push
aad
push
out
push
lcall
push
pop
cli
iret
in
sbb
imull
daa
movsl
sbb
jg
fdivrs
push
aad
adc
add
cld
push
dec
hlt
vmovapd
pop
pop
sbb
outsb
in
mov
pop
jp
cmpsb
fimuls
xor
mov
and
sub
fisubs
jae
out
incl
mov
adc
sub
sub
and
mov
loop
in
lods
in
sti
cmp
push
and
or
mov
shlb
xor
lret
sahf
enter
fdivl
aam
fmull
pop
dec
je
cmp
stc
xchg
int3
fisubl
fisubs
nop
fnstcw
add
stc
lods
cs
inc
pop
sbb
cmp
xor
shlb
out
aam
inc
or
sub
out
int
sub
inc
ficoml
in
pushl
dec
popf
fsubl
or
dec
mov
pop
test
xchg
xchg
xor
jnp
mov
or
jg
inc
jae
adc
mov
mov
jl
cmp
mov
shl
clc
sbb
cmp
mov
mov
ljmp
aas
adc
inc
jne
mov
insb
jmp
orb
xchg
data16
leave
test
lods
jnp
xor
sbb
lods
data16
xor
les
nop
jl
je
sbb
aas
mov
jno
lahf
push
rorb
pop
inc
jbe
push
sti
push
ss
add
stc
insl
push
movl
fcmovnbe
xchg
pop
sarl
daa
fistpl
mov
and
or
push
fidivs
push
fstps
or
pushf
push
xor
pop
push
andl
rcr
adc
jecxz
jecxz
jns
pushf
xchg
pop
movsl
dec
xor
scas
in
xchg
mov
mov
int
xor
lock
repz
loop
sbb
jno
sar
mov
mov
cmpsb
xchg
xchg
addl
stos
loop
add
jge
jae
push
mull
aad
faddl
push
out
pop
pusha
in
push
jo
ljmp
outsl
outsl
clc
pop
imul
movsl
ret
in
ja
cmp
or
shl
out
xchg
mov
dec
mov
add
cltd
ret
orl
pusha
test
xchg
sarb
push
dec
sub
andb
jge
pop
jecxz
lahf
int3
mov
sbb
shrb
aad
xorb
call
in
inc
jmp
xor
and
xchg
dec
xchg
inc
lods
das
nop
ljmp
or
in
or
daa
cmpsl
cli
iret
fsubs
add
lods
pop
pop
push
hlt
decl
pop
out
jae
repz
dec
sbb
fsubl
sbb
dec
movsb
or
jns
out
imul
movsl
addr16
inc
loop
cmp
xchg
rorb
xlat
shlb
std
jl
ror
pop
cmc
imul
daa
cli
insb
imul
xor
dec
dec
or
mov
sbbl
adc
std
inc
mov
in
cli
adc
dec
popf
les
sub
in
fstl
test
lret
cwtl
pop
or
cmp
mov
cwtl
clc
jbe
stos
fistpll
jg
sbb
adc
jne
adc
scas
lods
xchg
inc
jo
mov
lret
daa
test
insb
scas
jno
push
call
out
call
jne
or
cli
jbe
sbb
and
popf
xchg
outsb
pop
ljmp
or
or
push
inc
push
ret
add
jno
outsl
add
lock
les
xor
pop
fbstp
push
out
in
xor
lahf
cmp
sahf
adc
inc
cmc
fwait
inc
fadd
rcll
loope
clc
cli
xor
scas
pop
xor
push
lahf
and
mov
and
xchg
pcmpgtd
jmp
sub
out
mov
call
in
pop
jne
pop
hlt
adc
xchg
daa
adc
mov
out
cmp
jnp
mov
sbb
inc
data16
addr16
mov
lret
cltd
shrl
push
jne
arpl
les
jle
and
mov
add
popf
scas
push
jle
rolb
es
jge
imul
and
inc
scas
cmpsl
sub
testl
adc
jae
mov
es
push
in
push
xchg
icebp
das
xchg
jecxz
dec
push
inc
sub
push
gs
xchg
repz
ret
imul
mov
and
pop
mov
rcll
sbb
mov
fadds
cmpb
frstor
imul
call
adc
add
jge
cmpsl
xor
fwait
leave
jns
and
repz
add
xor
xchg
jno
and
aad
jmp
sbb
jno
fldl
pusha
test
insb
jmp
jge
decb
mov
mov
cmp
pop
sti
out
in
stos
orl
adcl
push
mov
rclb
fs
sbb
negb
xchg
jp
call
add
stos
aas
ret
sbb
push
fcoms
aam
push
dec
cld
push
xchg
or
inc
xchg
sub
std
arpl
pop
ret
push
push
dec
push
popl
xchg
cmp
pop
dec
pop
test
rcr
push
inc
xor
js
js
mov
lods
cmp
mov
loopne
fistl
mov
repz
sub
pop
movsl
push
paddq
movsl
scas
repz
out
pop
cmpsl
pusha
mov
add
arpl
das
mov
sti
ja
add
jmp
in
jg
dec
add
xor
add
push
stos
mov
movsl
popa
or
or
jmp
adc
jo
mov
subb
lock
stc
mov
adc
fdivrs
adc
xlat
mov
shr
ret
das
scas
movsl
cmp
mov
out
sbb
and
jl
xchg
aad
dec
xchg
in
mov
aas
push
jo
js
add
sbb
sar
push
inc
adc
std
sub
adc
xor
mov
mov
pop
lea
sbb
mov
jmp
in
test
xor
push
rcrl
and
dec
and
xor
fbld
cli
imul
mov
repz
or
pop
ljmp
cmp
bound
push
xchg
popa
add
dec
cmpsb
imul
jl
mov
addb
or
pop
sbb
inc
sub
or
scas
cmp
jnp
aaa
jb
xor
imul
mov
es
loopne
pop
cmpsl
and
hlt
test
dec
jo
push
xor
or
push
pop
fmuls
mov
test
test
notl
or
cmp
mov
dec
iret
xor
mov
ljmp
mov
imul
dec
pop
sub
push
or
mov
add
clc
mov
push
inc
jno
lcall
sub
inc
ret
fsts
imul
jb
pop
adc
out
mov
or
ret
dec
jno
pop
hlt
ficoms
inc
inc
add
and
mov
inc
xor
push
xchg
sbb
fbld
ja
data16
adc
bound
add
fwait
into
mov
subl
mov
shll
sub
mov
or
pop
cltd
add
loope
outsl
pop
xor
shufps
jbe
in
out
stos
fisubrs
adc
mov
fnstenv
shlb
loope
movsb
fistps
rol
sbb
ds
ss
pop
loope
dec
je
shll
in
arpl
cli
cmp
orb
out
pop
addr16
push
js
fstps
push
mov
jno
mov
xchg
mov
dec
movsb
scas
push
clc
rcll
jae
xsha1
cmpsb
iret
ficomps
pop
xchg
ret
mov
dec
aas
cltd
out
stos
rolb
add
inc
test
shll
in
negl
leave
push
and
out
leave
mov
or
mov
ds
mov
ret
arpl
mov
or
cmp
movsb
push
mov
notb
insb
scas
inc
mov
mov
fs
mov
mov
mov
dec
mov
xchg
pop
aaa
jo
or
and
pop
shlb
dec
push
inc
int3
mov
cmpsl
cltd
jb
daa
mov
loope
hlt
out
adc
push
fldl2e
sbb
lods
es
icebp
and
ja
fs
dec
cmp
pop
sarl
pop
lcall
insb
mov
lahf
das
xchg
outsb
add
xchg
adc
inc
sbb
dec
mov
fildl
test
add
dec
xchg
mov
xor
add
mov
adc
xchg
aad
stos
test
cmp
scas
cmpsb
mov
push
sub
push
sbb
jecxz
aas
int
adc
ss
popa
jns
popf
pop
pop
inc
mov
outsb
into
repnz
cmp
push
mov
xchg
dec
lahf
or
xor
add
cwtl
mov
add
lods
shlb
mov
out
cmp
es
xor
js
test
outsl
addl
lods
scas
js
push
sub
fisubs
push
mov
movsl
xchg
lock
div
xchg
test
xor
rcrl
bound
cmp
stos
sbb
push
mov
xchg
mov
lds
insl
sbb
pop
mov
mov
je
sbb
xchg
and
xor
inc
stos
les
lock
int3
pop
or
push
cld
loopne
lret
lds
in
push
popa
mov
pop
and
mov
sub
stos
imul
gs
outsl
rcll
mov
adc
push
div
es
addb
ret
ret
leave
push
push
jg
mov
aaa
aad
jo
inc
pop
inc
adc
out
fdivs
adc
jge
push
xchg
push
mov
arpl
adc
sahf
test
pop
sahf
push
je
scas
cmp
test
sbb
shrb
mov
sbb
push
lds
mov
inc
fwait
and
fildll
sti
cltd
sarl
int3
lahf
loope
fstps
dec
aaa
imulb
cli
aad
movsb
sbb
imul
mov
ficompl
scas
mov
inc
cltd
stos
add
adc
lahf
clc
mov
out
or
cmpsl
and
mov
inc
sub
jne
inc
push
lret
in
repz
push
mov
mov
out
ds
mov
inc
shl
in
pop
sub
cmpsb
shl
push
mov
xor
test
xor
loope
push
enter
shr
dec
push
rorb
movsb
xor
into
popl
add
andb
push
fcom
inc
mov
inc
imul
dec
sbb
jl
xchg
in
mov
repnz
mov
shrb
lcall
pop
mov
mov
cmp
xor
movsb
jg
negl
pop
in
pushf
arpl
pop
jne
inc
in
sbb
mov
insb
fsubr
sbb
aaa
sbb
pop
idivl
push
int
outsl
add
pushf
and
les
pop
mov
jnp
ret
cmp
sbbb
mov
repnz
gs
cltd
cmp
enter
pop
sbb
mov
imul
jmp
jns
mov
cmp
dec
bound
inc
sbb
in
imul
push
xchg
and
rorl
inc
insl
mov
lods
ret
test
clc
xor
repnz
dec
cld
jo
or
cmp
mov
outsl
jle
jnp
mov
sbb
in
ret
cmpsb
enter
lahf
mov
rorb
mov
lds
add
lret
cmp
add
jge
sbb
lret
js
xor
aad
dec
dec
ja
pop
mov
subl
out
test
dec
push
and
cmp
js
mov
jp
push
sub
xchg
insl
stc
mov
repz
sti
xor
jns
sbb
and
adc
fadds
mov
sbb
fs
push
lcall
lret
pop
cmpsb
sbb
and
mov
cwtl
sbb
lea
fcmovbe
clc
sub
dec
es
push
push
adc
pop
xchg
test
scas
popw
mov
cld
loop
test
jl
add
popf
dec
or
pop
push
aad
scas
inc
mov
pop
jge
es
xor
mov
jp
sub
jg
emms
xor
clc
sbb
mov
push
subl
ret
inc
stc
mov
jle
les
shrl
call
sbb
imul
ds
jge
sub
loope
sub
or
outsb
scas
int
xchg
iret
cs
sub
test
ret
sarl
push
mov
and
mov
mov
pop
adc
and
mov
sub
popa
outsl
cmp
mov
loopne
lcall
inc
pop
inc
and
lahf
jp
mov
out
test
outsb
sub
flds
cmp
jno
inc
mov
cmc
imul
in
sub
dec
mov
mov
das
gs
popa
mov
mov
fldl
or
fcoml
lds
aas
pop
push
adc
mov
dec
push
lahf
xchg
pushf
and
cmp
mov
cmp
int3
and
mov
and
ljmp
rcrb
pop
popa
pop
aam
add
repz
dec
loope
sub
jns
inc
pop
cmp
push
data16
cmpsb
jle
inc
sti
mov
gs
stc
out
stos
into
fimuls
and
shrl
dec
xchg
and
loope
pop
cmp
lds
gs
cmpsl
in
jg
jecxz
mov
gs
negl
and
sarl
xor
dec
jg
xor
lea
andl
loope
and
lock
sbb
out
mov
loopne
outsl
subb
cs
pop
dec
push
dec
cmp
pop
adc
fstp
xchg
mov
mov
dec
mov
cs
stos
inc
in
xor
jne
loopne
and
loope
arpl
cmc
push
test
rclb
jp
jmp
cmp
dec
pop
adc
mov
add
and
stos
add
pop
imul
sbb
and
cli
mov
cmp
inc
jne
je
rol
les
and
repz
cmp
jno
mov
mov
ss
mov
xchg
cli
or
mov
mov
stc
int
popf
gs
jbe
movsl
lock
xor
cltd
xchg
push
add
into
es
ja
popf
mov
insb
and
hlt
rcrl
popa
lea
sub
lods
pushw
cmpsl
or
sub
stos
sbb
cli
xchg
into
cmp
and
push
cs
cs
pop
or
mov
out
dec
pop
dec
adc
movsl
add
mov
and
inc
mov
ss
pop
cwtl
ficompl
inc
sbb
idivl
xchg
push
aaa
lahf
mov
mov
pop
or
pop
pop
mov
xchg
sbb
int3
push
cmp
jb
flds
xchg
icebp
push
inc
xchg
xor
lds
cmp
mov
fwait
into
xchg
gs
inc
or
dec
repz
pop
enter
push
mov
dec
je
or
outsb
arpl
in
pushf
lret
xchg
scas
imul
push
icebp
cmp
test
pushf
pop
mov
mov
ss
loope
icebp
leave
or
je
sbb
cmp
pop
mov
enter
femms
fildl
pop
loopne
add
xor
push
add
or
mov
enter
inc
add
adc
fwait
outsl
push
jmp
mov
rcrb
cs
fsub
inc
pushl
aas
mov
or
sahf
push
mov
cmp
cmpsl
in
cmp
jns
xor
mov
fs
push
xlat
shrl
push
pop
pop
push
push
jl
dec
in
sahf
int3
inc
xor
push
aad
bound
subb
cmp
mov
inc
out
cld
cmp
fnstcw
inc
jno
lods
das
jp
push
mov
mov
outsl
mov
in
jg
pushw
addr16
lods
mov
sub
fnstenv
mov
cli
sub
push
cld
ljmp
push
xor
mov
sub
dec
jle
pop
jae
loopne
outsl
fs
stos
lods
mov
ja
mov
adc
call
test
xor
repz
leave
gs
bound
dec
stc
and
cmp
clc
dec
nop
aad
rorl
cmp
fwait
xchg
rolb
pop
cmp
stos
outsb
lret
mov
inc
outsb
divl
in
pushf
sbb
mov
outsl
loop
jp
mov
mov
and
mov
adc
sub
js
call
mov
or
jl
xor
sub
xchg
cbtw
or
xchg
outsl
or
pop
cmp
cmp
arpl
sahf
dec
subl
sub
cmp
lock
and
pop
push
mov
mov
addr16
pop
jno
lock
test
mov
in
in
aam
fnclex
sbb
icebp
xor
popa
lods
mov
push
loope
inc
test
mov
cmp
xor
iret
jb
inc
outsb
add
cmc
pop
test
mov
mul
inc
and
push
jmp
outsb
xchg
int3
or
imul
add
fldl
mov
lock
cmp
test
sahf
icebp
scas
addr16
fldcw
loop
pop
test
sbb
aad
pop
or
add
xchg
iret
xchg
and
bound
mov
push
dec
push
sbb
xor
mov
ss
or
mov
std
enter
xchg
pop
mov
in
test
push
imul
rcrb
cmp
sub
das
jp
out
xor
movsl
xlat
mov
dec
push
lods
mov
lea
dec
add
xchg
out
mov
push
xchg
outsb
es
lret
and
fwait
subb
mov
sbb
xchg
cld
xor
adc
pop
je
or
xchg
and
pop
mov
jge
cli
and
xchg
ret
ffreep
inc
sarl
das
push
sbb
or
fisttpl
jmp
insb
clc
stc
lods
pop
cmp
xlat
jnp
push
mov
fwait
int3
test
mov
adc
and
sub
notb
cmp
daa
ret
jnp
in
das
jle
ret
test
jno
pop
call
xchg
faddl
test
sub
dec
daa
mov
sub
and
sub
andl
inc
mov
js,pn
sbb
cwtl
sar
pop
rorb
sbb
jl
add
pop
mov
xchg
jnp
lret
pop
or
or
mov
mov
or
fldcw
mov
cmp
sub
dec
pop
into
push
sub
test
and
jb
imul
mov
sub
xchg
enter
or
test
daa
sbb
ja
sub
aas
sub
and
shll
sbb
push
and
dec
mov
mov
push
or
and
mov
lret
das
fmull
pop
leave
cmp
test
or
sub
sar
imul
cmpsb
mov
or
pusha
int3
int3
mov
jno
lds
sbb
push
push
out
xor
or
mov
push
rorl
out
insb
mov
addr16
mov
stos
ret
push
jae
mov
movsl
imul
ds
jge
cld
cwtl
das
xchg
jge
xchg
xchg
js
jg
lcall
int
rorl
scas
push
pop
mov
in
cmovns
mov
mov
inc
cltd
lea
negl
pusha
mov
xchg
stos
xor
mov
sbb
inc
xchg
mov
adc
pop
and
and
ficompl
jae
mov
cwtl
cmp
ljmp
lea
jae
and
jb
or
nop
push
and
test
aad
and
add
in
mov
inc
dec
lods
xor
fsubr
out
out
push
popa
mov
adc
movsl
stos
or
jbe,pn
adcl
out
movl
mov
mov
ja
jne
sahf
fidivl
jnp
or
dec
mov
and
bound
sub
mov
jb
rorl
outsb
lahf
push
inc
or
jmp
cmp
cmp
lods
movsl
push
and
xlat
lcall
add
jo
cmpsl
rcrl
mov
adc
mov
adc
ret
xchg
stos
xor
ret
in
insl
dec
fcomp
int3
mov
xor
dec
cmpsl
addr16
pusha
dec
aam
add
dec
enter
xchg
xchg
xchg
cmc
xor
mov
xor
test
mov
jecxz
lret
mov
inc
push
out
loop
subb
sub
fs
pop
in
into
imul
mov
xchg
bound
test
daa
xlat
fnsave
adc
nop
mov
ds
adc
inc
mov
out
push
mov
dec
cld
xchg
add
push
dec
cmp
mov
cmpsb
iret
mov
nop
xor
mov
lret
xor
cmp
ss
inc
int
hlt
add
add
cmp
dec
xor
not
dec
xor
cmp
mov
mov
call
xchg
dec
sub
mov
imul
lods
jg
pop
dec
or
ljmp
mov
iret
push
out
and
mov
scas
mov
cmp
ret
lahf
push
jo
repz
and
mov
loop
jb
sub
data16
insl
scas
cmovs
pop
test
lcall
mov
stos
cmpsb
push
jl
repnz
loope
inc
mov
pop
mov
aaa
test
lret
push
lds
mov
enter
bound
lods
cmp
mov
ffree
movsl
fwait
adc
mov
mov
mov
dec
xor
xor
bound
fidivrl
cmp
mov
stc
and
cmp
push
xchg
lods
sbb
pop
lea
ss
aad
mov
test
pop
and
jle
mov
fistps
js
addr16
inc
mov
inc
test
orb
sbb
or
nop
frstor
int
pop
out
push
fwait
pop
adc
mov
lahf
test
mov
xchg
mov
jle
dec
add
insl
movsb
mov
push
or
lret
pop
in
andl
cltd
pop
mov
ret
jno
repz
cmp
jne
sbb
push
hlt
rorl
pop
cli
cwtl
xor
aam
xor
stos
ficomps
in
call
xchg
and
and
or
mov
sbb
shl
pop
ja
adc
push
mov
popa
inc
push
push
xchg
loopne
mov
fcoml
xchg
xor
pop
nop
std
lods
cmpsl
outsb
add
addl
or
fxch
xchg
stos
insb
leave
outsb
sbb
cmp
ret
fisttpl
popf
or
dec
enter
fisttpll
jecxz
data16
cwtl
cmp
loop
cmp
jp
push
mov
mov
outsb
xor
nop
xchg
and
dec
das
leave
fcomps
insb
push
stos
cmp
mov
mov
push
lret
push
hlt
mov
dec
es
jmp
inc
mov
and
out
or
mov
inc
mov
call
fcmovbe
pop
lea
pushf
dec
pop
nop
or
daa
orb
jae
cld
and
movsb
dec
xorl
shrd
dec
cmp
mov
cmp
jo
dec
xchg
rorl
cld
fstpl
je
sub
xchg
inc
inc
or
mov
je
jne
aad
pop
or
sbb
mov
pop
jo
push
jno
jb
dec
rorb
push
pop
test
leave
push
outsl
inc
das
cmp
dec
lahf
mov
and
in
push
hlt
call
in
push
or
sub
mov
pop
sub
movsb
ds
mov
jb
sti
inc
clc
pop
shrl
adc
push
sbb
cmp
fbld
out
roll
push
xchg
add
arpl
mov
fidivrl
mov
sbb
xchg
lock
xchg
cmp
int3
inc
shl
cmpsl
pop
mov
mov
ds
inc
rcll
dec
and
callw
jne
mov
popa
and
mov
add
jae
pop
xchg
icebp
xchg
aas
sbb
inc
dec
adc
loopne
stc
bound
cltd
mov
mov
in
icebp
gs
call
mov
push
jnp
test
aaa
sub
mov
cmpb
push
in
js
loopne
pop
jb
loop
xchg
or
lds
dec
insb
lea
leave
cmp
or
gs
push
lcall
push
or
out
mov
test
mov
cmc
js
xorb
int3
lds
push
adc
stos
insl
cmp
cld
inc
mov
add
or
xor
cmp
pusha
lea
pop
enter
jecxz
nop
popf
inc
ror
xor
mov
cmp
or
mov
xor
adc
test
add
nop
cmp
ljmp
sub
add
ficoml
repz
ljmp
outsl
sbb
xchg
mov
andb
cwtl
dec
fsubrp
mov
jge
movsl
inc
dec
pop
and
pushf
inc
lret
enter
cs
adc
and
cwtl
xchg
add
jo
and
xor
add
pop
fstpt
jp
les
xchg
cwtl
mov
daa
icebp
daa
add
aaa
jbe
adc
mov
push
push
lcall
sbb
dec
push
movsl
push
push
jmp
sub
in
add
pop
leave
rep
mov
int
xor
scas
std
gs
fcoml
sti
ljmp
shlb
jl
enter
sbb
lcall
inc
jne
sub
enter
pop
out
cmp
add
sbb
dec
jge
and
movsb
xchg
outsl
loop
inc
cmove
jl
pop
inc
xor
pop
cmp
sahf
fstl
es
push
cmp
xchg
in
arpl
mov
sarb
outsb
mov
imul
call
cmp
pop
dec
imul
dec
and
out
sti
js
test
test
ret
cli
push
xchg
mov
mov
leave
pop
fsubrl
push
loop
or
dec
add
inc
hlt
fsts
sbb
adc
xor
outsb
aaa
data16
js
std
xor
jmp
lahf
xchg
cltd
push
stos
lock
jns
dec
insl
mov
ficoms
mov
and
or
scas
adc
lods
push
pop
or
cli
sbb
out
push
mov
rcrl
dec
xor
inc
sbb
xor
mov
pop
or
lret
rolb
adc
gs
dec
test
lcall
mov
lods
lods
pop
pop
outsb
mov
lcall
lea
loop
out
sbb
and
repnz
sub
jl
cmp
sub
mov
fcos
mov
lahf
es
xchg
fs
outsb
mov
mov
sbb
xchg
mov
mov
cld
mov
pushf
stos
inc
pusha
lods
adc
sahf
lret
clc
pusha
pop
loope
inc
stos
and
push
push
add
ficoml
adc
daa
pop
push
mov
sti
mov
or
jg
fisttps
adc
mov
dec
push
bound
cmc
das
sbb
in
jb
pop
sub
mov
lcall
dec
sub
movsl
xor
loopne
cmp
scas
dec
xchg
or
daa
mov
pop
dec
dec
fnstcw
xchg
fstl
sub
push
and
lods
dec
out
fwait
stos
test
jecxz
mov
xchg
xor
push
rcll
xchg
dec
push
lcall
jecxz
or
add
mov
rolb
pop
push
cmp
sbb
cmp
btr
push
bound
fisubrl
pop
int
mov
orl
imull
and
aaa
jo
mov
xchg
mov
cmp
xchg
mov
sub
mov
ret
fs
data16
fdivl
sub
jmp
in
xchg
jle
xor
arpl
insl
jbe
pop
shlb
push
mov
in
daa
sub
pop
popf
dec
xorb
dec
jle
insl
push
stc
lahf
and
cmp
add
xchg
sar
add
lods
iret
mov
push
std
test
sub
inc
movsl
dec
and
pop
enter
or
push
jp
cmpsl
scas
sub
push
scas
cmc
std
push
inc
xor
push
loop
and
add
push
stc
ffreep
xor
fdivp
out
fdivs
scas
fdivr
notl
sti
aas
pop
nopl
cli
pushf
fstps
adc
and
sbb
push
pushf
jo
popf
je
mov
xchg
adc
cmpsl
adc
insl
add
and
sahf
mov
je
ficompl
jno
inc
xchg
ret
xor
inc
fdivrs
pop
cmc
aam
and
sub
mov
inc
mov
dec
into
push
out
mov
and
ret
test
test
test
arpl
pop
push
add
sbb
mov
loopne
and
popa
adc
or
push
jp
ret
mov
pop
jmp
sub
repnz
fptan
jae
jne
push
ss
int3
into
xor
dec
mov
sbb
mov
jo
xchg
mov
mov
dec
adc
test
push
add
repz
cmp
imul
sbb
and
dec
jns
dec
jp
mov
int3
jae
pushf
mov
inc
cmp
dec
shlb
popa
scas
test
cwtl
xchg
andl
cmc
out
xorl
xchg
fcompl
sahf
pop
xchg
and
lods
and
femms
call
xor
jns
mov
js
mov
enter
cs
arpl
mov
aam
and
jecxz
std
pop
mov
imul
mov
mov
pop
js
in
xchg
icebp
cltd
or
rcrl
sahf
sbb
out
sub
push
push
orb
xchg
pop
adc
push
idivb
push
gs
scas
dec
mov
out
push
inc
dec
adc
icebp
lcall
icebp
repz
adc
inc
push
xchg
dec
lret
rcrb
scas
int3
xchg
adc
mov
jns
ljmp
aas
cmpsl
je
outsl
fwait
lahf
and
lahf
stos
aas
aaa
and
mov
xchg
es
ret
cld
adcb
jg
pop
imul
out
xor
imul
rcrb
push
ret
sub
in
bnd
into
mov
iret
inc
bound
sbb
or
ret
add
jne
mov
cli
insw
cmp
mov
xchg
popf
cmp
mov
hlt
mov
adc
aam
call
cs
movsl
lock
ljmp
mov
cmp
inc
adc
in
pop
dec
outsb
cwtl
push
sub
mov
pop
lcall
push
push
mov
dec
les
adc
and
loopne
leave
pop
decb
or
sub
push
std
sbb
mov
xchg
mov
repz
xchg
je
mov
mov
dec
mov
fmulp
and
pusha
xchg
push
aaa
and
pop
aad
mov
xor
jecxz
ja
dec
hlt
fidivs
ds
mov
sub
imul
mov
stos
pushf
or
mov
pop
sub
pushf
sahf
mov
scas
push
aam
xor
or
jb
cli
sub
es
sbb
ret
lret
dec
fisubrs
xchg
js
mov
push
rcrl
sbb
out
dec
push
mov
or
sbb
or
jae
cs
and
or
inc
in
mov
mov
faddl
rcll
sahf
mov
sub
push
xchg
mov
xor
inc
sti
cmpb
push
bound
ss
sbb
pop
cmp
stos
imul
andl
lods
popa
bound
insb
sub
or
stos
sub
hlt
push
push
stc
mov
test
mov
rclb
test
xchg
clc
jo
lods
addr16
lods
mov
imul
outsl
and
mov
cmpb
in
mov
pop
rorb
adc
mov
dec
xchg
sub
push
jle
icebp
js
lods
fstps
test
sbb
scas
movsb
push
out
jbe
xor
pushf
inc
cld
inc
stos
mov
mov
mov
mov
aad
rol
xlat
xor
or
daa
out
lds
mov
xchg
and
loop
test
push
je
in
rcr
and
mov
clc
lret
dec
and
xchg
or
cmp
data16
sub
jns
lcall
dec
xor
sar
inc
push
push
testb
jl
test
or
lock
stos
add
add
mov
pop
in
icebp
xchg
sbb
leave
cmc
adc
adc
cs
repz
ret
lret
xchg
cs
mov
mov
or
leave
stos
sbb
aaa
and
mov
int
mov
mov
ss
cltd
aad
or
push
mov
js
sbb
jb
inc
mov
fs
mov
adc
xor
fisttpl
clc
mov
adc
xor
push
mov
cmp
xchg
xchg
jge
jb
int3
std
lahf
sub
push
sub
xchg
repnz
sub
mov
jecxz
pop
pop
dec
popa
xor
in
lcall
mov
test
fldt
std
scas
adc
int
mov
xchg
add
pop
pop
cmp
mov
cmp
or
out
stos
hlt
dec
mov
inc
xor
fbstp
add
and
inc
jmp
sbb
pusha
fidivs
test
dec
cld
popa
lock
xchg
fists
scas
add
inc
aam
xchg
pushl
mov
or
jo
mov
aaa
cwtl
cmp
fmull
or
xchg
mov
cmpsb
jnp
sti
pushf
dec
not
pop
xchg
std
test
push
xchg
jb
leave
icebp
sbb
in
sbb
xchg
aam
ss
mov
inc
into
dec
mov
cmc
add
test
xor
mov
rorb
inc
test
repnz
call
jns
in
sub
pop
push
xor
inc
sbb
cmpb
scas
and
jl
cld
push
lods
lock
xorl
xor
dec
add
jecxz
or
rcrb
push
pop
stos
mov
mov
dec
jle
jne
mov
adc
ljmp
dec
sbb
addl
popf
push
imul
and
out
rolb
clc
or
add
les
repnz
icebp
add
les
sbb
mov
cltd
inc
dec
mov
imul
adcb
push
subb
add
xchg
xchg
movsl
sub
mov
nop
stc
mov
or
sub
dec
xor
rclb
sbb
testb
cmp
xor
lret
xchg
mov
out
add
fbstp
leave
cmp
movsb
adcb
std
idivb
sti
mov
imul
adc
repz
in
inc
jae
test
pop
push
dec
cmp
xchg
pop
or
ljmp
addl
cwtl
lods
mov
sbb
adc
mov
repz
mov
mov
mov
sahf
push
fwait
inc
pop
xchg
loope
xor
insl
cwtl
scas
js
notb
arpl
dec
jo
fsubrs
push
fisubl
cs
inc
mov
jns
lahf
lds
test
push
loope
int
or
dec
inc
insl
icebp
aad
or
pop
cmp
sbb
lds
je
push
pop
les
dec
mov
add
sbb
inc
xchg
or
cmc
jmp
mov
inc
into
jno
xor
addr16
pop
data16
popa
movb
jg
dec
mov
data16
pushf
mov
adc
mov
push
and
jge
and
lea
fwait
dec
mov
sti
into
aaa
sub
and
gs
pushf
mov
sbb
popa
loopne,pt
movsl
hlt
test
mov
gs
pop
daa
push
movsb
sbbl
cld
and
mov
lea
pop
pop
out
into
ja
jbe
cmp
or
cmp
pop
arpl
cmc
adc
mov
in
sub
hlt
int3
jmp
jno
lods
adc
cmp
add
imull
mov
test
aad
aad
and
nop
aad
ss
ret
data16
leave
xor
xor
hlt
cmpsl
scas
dec
arpl
sti
xchg
icebp
xchg
add
inc
stc
out
outsl
jg
rorl
aad
repz
mov
sbb
push
cwtl
push
mov
mov
xchg
pop
xchg
loop
daa
sti
jno
in
shlb
std
pop
push
xchg
and
adc
jne
ja
mov
test
mov
dec
loop
adc
mov
ja
shll
pcmpgtw
fiadds
mov
sub
xor
cmpsb
jnp
pop
sub
rcl
imul
jmp
stc
push
cld
push
loope
dec
jns
popa
cwtl
add
pop
xor
pop
in
jge
mov
jg
imul
lods
jecxz
sub
push
sbb
in
push
subl
sub
in
lods
lret
mov
mov
add
notl
imul
cmp
xchg
sbb
int3
sub
movsb
jg
out
pushf
cmpsl
push
in
mov
shrl
mov
jecxz
out
mov
jp
orb
xor
imul
xor
push
sub
inc
mov
mov
ret
hlt
xor
lret
add
jne
imul
mov
mov
xchg
fidivrl
jecxz
ret
add
mov
sbb
sbb
inc
push
sti
adc
ret
adc
mov
mov
cli
ds
arpl
push
fsubr
es
and
scas
jb
add
jo
push
fdivr
leave
test
cli
sbb
lahf
jns
out
daa
hlt
das
maxps
mov
xchg
lods
outsb
inc
lds
dec
imul
fists
push
and
loope
int3
cmp
iret
xchg
mov
mov
loope
inc
or
loopne
mov
cmpsl
pop
xchg
push
jne
mov
lods
adc
aad
addb
inc
loope
pop
sbb
lret
adc
data16
xor
js
dec
pop
stos
outsl
cli
dec
and
in
or
push
subb
xor
add
les
xor
lock
add
mov
xchg
jbe
mov
daa
and
imul
push
xchg
popf
les
xchg
std
into
or
mov
and
adc
nop
out
pop
lods
inc
sub
mov
jmp
je
mov
push
lahf
in
mov
mov
imul
lock
and
shll
testb
dec
push
fnsave
fldcw
ficoml
add
or
lods
imul
je
clc
jl
sub
add
test
sahf
inc
int3
or
sub
stos
fnstenv
sub
xor
int3
mov
cmpsb
sub
jg
ror
cmpsl
clc
mov
repz
nop
cmp
jo
outsl
cwtl
dec
hlt
add
sub
xchg
mov
xchg
mov
add
daa
stos
insl
rclb
mov
mov
adc
dec
ret
mov
push
shlb
sub
push
mov
push
test
nop
imul
jne
ds
xlat
ret
pop
fs
mov
adc
and
in
inc
sbb
mov
rcrb
sti
sub
mov
pop
enter
in
mov
aas
out
in
xor
mov
loope
aam
lds
ja
jmp
inc
adc
cld
jbe
loope
mov
cmp
push
push
sub
fwait
fwait
pushl
inc
daa
repnz
repz
lock
inc
aaa
add
adc
sub
pop
popa
aaa
and
push
test
sbb
sub
inc
or
insb
rcrl
fbld
mov
out
jg
das
test
sbb
add
insl
push
xlat
arpl
sub
pop
outsb
repz
ds
mov
mov
xor
movsb
addr16
fscale
sbb
movsb
push
in
sub
lcall
mov
in
lea
fld
in
icebp
cli
nop
sti
adc
jbe
xchg
stc
cld
and
fistl
dec
es
push
pop
cmp
out
test
mov
lcall
push
repnz
loopne
jno
fldenv
adc
xor
subb
leave
xlat
sbb
or
sarl
fsts
xchg
and
mov
insl
fsub
jl
out
mov
leave
sti
push
and
std
xor
or
out
push
xor
mov
jno
mov
ss
or
dec
mov
lods
dec
lods
add
lods
inc
stos
hlt
xor
movsb
popf
pop
aaa
into
fwait
dec
xchg
pop
andb
xor
jbe
fdivrs
and
stos
hlt
test
stc
repz
pusha
xchg
xor
hlt
aam
xor
mov
sbb
jne
and
dec
inc
mov
pop
insl
enter
cmp
dec
xor
push
mov
pop
insb
data16
daa
mov
and
and
or
and
addr16
fcoms
jle
sbb
sbb
add
adc
xor
jns
inc
and
outsb
daa
int
icebp
sbb
pop
dec
push
xor
sbb
mov
arpl
jmp
aas
mov
call
mov
aaa
scas
xor
pusha
outsb
jecxz
subl
std
das
push
pop
lcall
test
push
nop
sbb
mov
add
sahf
push
fcoml
sbb
ficomps
push
mov
push
sbb
mov
lods
push
insl
fnstcw
hlt
lock
mov
int
ja
mov
pop
mov
push
xor
xchg
leave
mov
out
fwait
lea
repz
das
ja
pop
popf
es
xchg
sub
into
icebp
movsb
pop
push
lods
push
xchg
push
aaa
adc
xchg
popf
mov
pop
push
mov
sbb
incb
jb
pop
jg
jb
and
test
sub
sbbb
js
in
xchg
mov
das
jbe
loopne
jns
jmp
loope
mov
negl
sbb
in
mov
mov
ret
xchg
dec
and
or
inc
cmp
enter
int3
call
cltd
scas
stc
cs
es
or
xchg
jno
ficompl
mov
mov
and
lret
mov
mov
dec
arpl
adc
push
gs
xchg
ret
sti
jae
cmc
rcrl
inc
icebp
or
xor
inc
push
dec
adc
cmc
jmp
out
sbb
jl
ret
xchg
cwtl
and
mov
cltd
data16
dec
xor
push
adc
divl
dec
add
pop
cmp
mov
jmp
and
test
pop
cmpsl
and
sub
or
cmp
jbe
add
into
jnp
xchg
or
mov
test
iret
sub
arpl
test
adc
mov
call
mov
lret
js
push
std
std
mov
push
test
dec
push
lods
inc
xchg
xchg
adc
mov
sti
ds
stos
cmp
xchg
andl
mov
cmp
movsb
cmp
push
popa
add
mov
rorb
mov
xor
shl
sub
jp
or
int
dec
loop
scas
out
mov
dec
sbb
arpl
xchg
jno
inc
xchg
add
fstpl
pushf
in
decl
pop
cwtl
test
cmpsl
and
arpl
cmp
ret
lods
nop
xor
cmpsl
adcb
sub
fwait
inc
adc
aaa
fstpt
sbb
lret
xchg
in
mov
ffreep
int3
mov
aaa
inc
mov
pop
and
fsubrp
out
xchg
aam
pusha
xor
in
loope
add
jno
inc
cs
mov
jle
xor
lods
outsl
mov
xchg
mov
mov
and
mov
push
or
out
mov
nop
mov
sub
push
dec
arpl
lret
leave
dec
mov
fadd
fcoms
cmpsb
shll
es
addr16
jmp
mov
xor
jb
push
mov
filds
aas
jmp
in
or
adc
imul
fidivl
mov
insb
sbb
stos
adc
adc
sti
xchg
cmp
out
js
stc
sbb
xor
jo
inc
inc
pushf
lcall
repnz
repnz
mov
sbb
and
pop
in
outsl
dec
ja
dec
sbb
mov
adc
sub
push
push
xor
loopne
inc
dec
push
sbbl
int3
fiadds
lea
sub
sub
sub
add
push
fdivrs
insb
mov
add
xchg
faddl
cli
push
rcrb
lods
les
fstpl
and
mov
sbb
repz
mov
outsb
scas
xor
std
test
cmp
mov
sbb
cli
mov
and
inc
in
shl
sbb
and
xchg
aam
movups
mov
mov
inc
cmp
adc
lret
cmpl
loopne
pop
fidivrl
mov
and
cltd
fsubrl
cmp
into
and
test
mov
lret
push
ror
lods
test
or
adc
jp
mov
fldenv
xchg
sahf
xor
or
loope
lahf
loopne
dec
push
pop
pop
fucomip
repnz
ret
add
fistps
add
mov
mov
add
test
add
jne
adc
xchg
in
repnz
and
mov
enter
bound
loop
xchg
fildll
sbbb
add
out
lea
mov
pop
dec
loope
pop
jl
or
sbb
xor
mov
lds
push
inc
imul
xchg
lods
fwait
mov
insb
fisttps
inc
mov
imul
addr16
mov
mov
adc
cmp
jp
mov
push
mov
fsubrp
inc
xlat
push
test
js
mov
sbb
stos
xor
cmp
sbb
mov
xor
xchg
adc
xchg
add
mov
lret
bound
es
fnstenv
jb
negl
addl
push
ret
xor
sub
push
xchg
xchg
and
jmp
pop
stc
in
lds
sahf
pop
jge
dec
cmpsb
mov
shrb
adc
lahf
adc
push
xor
je
jnp
decb
subl
ss
jge
les
push
xchg
mov
jo
stos
mov
sub
inc
loop
fnsave
aas
jne
dec
cmp
stc
movsb
mov
mov
xchg
scas
inc
divb
je
in
xchg
sbb
pop
mov
add
push
out
xor
lods
push
sti
mov
cmp
shlb
jo
push
mov
cmp
int
cltd
ret
aaa
scas
in
jae
dec
or
stc
and
outsb
cwtl
in
aas
lret
mov
jmp
and
test
mov
jge
pop
movsb
pop
push
sti
icebp
push
pushl
imul
xor
out
negl
ficompl
mov
addr16
loopne
mov
cmpsl
mov
inc
inc
mov
mov
dec
add
les
add
ss
jbe
in
xchg
xor
out
loop
mov
xchg
adc
andl
mov
cs
sbb
dec
push
rcrb
std
adc
adc
in
sahf
outsb
xchg
add
lock
inc
sti
push
cltd
gs
sarb
cmp
cmp
aad
jbe
loop
and
cli
and
jns
int
cld
cmp
test
pop
cmp
jb
jl
icebp
hlt
cmc
cwtl
outsb
icebp
mov
xor
test
mov
lea
push
aad
imul
jle
pop
mov
mov
movsl
arpl
call
lcall
jmp
fsubrl
flds
mov
loopne
add
fsubrl
jecxz
xchg
and
dec
pop
aas
popa
jne
out
ds
pushf
movsb
pop
clc
xchg
nop
stos
and
dec
fdivp
sub
out
shl
adc
cmp
inc
popa
stos
pop
xor
adc
push
clc
daa
adc
pop
xlat
repz
sbb
pop
push
jp
mov
sarb
cmpsl
sbb
cmp
jl
scas
js
ss
sub
or
mov
mov
push
xchg
mov
xor
ror
xlat
clc
sbb
mov
push
xchg
mov
add
xlat
imul
push
cmp
push
xor
fs
push
icebp
lods
nop
inc
cmp
xchg
aaa
out
fwait
xchg
sbb
in
aas
or
das
ret
push
popa
pusha
imul
jno
inc
jae
or
add
push
adc
jl
shl
movb
push
and
push
dec
ror
mov
adc
ds
push
pop
pushf
dec
sub
push
mov
or
out
das
imul
mov
mov
sti
jo
cld
push
dec
call
sbb
test
xor
iret
cmp
dec
aaa
sub
aas
and
repz
xchg
arpl
jle
sub
rcll
xor
jae
rcrb
jbe
les
addl
call
mov
inc
fsts
incl
rcrl
sub
imul
cmc
xchg
adc
push
mov
cli
notb
insb
lret
js
aad
jns,pt
ret
bound
gs
push
jmp
das
lods
mov
pop
jo
pop
mov
jns
add
push
ljmp
xchg
ljmp
out
and
and
fstps
repz
loope
cmp
nop
movsl
aad
mov
pop
mov
jg
sbb
scas
push
frstor
roll
int
cli
mov
nop
inc
and
fmul
sub
push
jno
fsub
push
xchg
mov
lcall
pop
addr16
jecxz
sub
mov
cmc
pop
scas
push
bound
cmp
enter
leave
ljmpw
mov
push
es
xor
das
mov
sub
push
adc
add
mov
lahf
insb
sti
lahf
adc
popa
aaa
sbb
and
jno
add
pop
outsb
jo
mov
pop
lods
push
sahf
xor
push
mov
xor
sub
and
sahf
insb
insb
leave
jge
loopne
or
out
cmp
dec
repz
push
incb
popa
cmp
out
stc
jge
loopne
mov
lods
cmpsl
adc
in
dec
inc
test
lea
jae
pop
pushf
stos
cmpsb
addl
outsb
ja
jo
cmp
ret
mov
sub
mov
ret
sub
idivb
jl
xchg
popaw
add
outsl
aas
pop
push
mov
fs
pop
rorl
adc
movsl
mov
sarb
push
sahf
or
cmp
loope
jb
xor
addb
and
add
lcall
push
mov
xchg
and
enter
push
mov
cmp
into
push
inc
ljmp
mov
mov
loop
jne
lock
sbb
shrl
ret
jle
fsubr
push
push
sbb
repz
das
cmp
sbb
scas
popf
sbb
loope
outsb
pop
ss
shr
pop
in
mov
adc
jno
add
lea
add
mov
xor
scas
jne
dec
mov
out
sub
sub
pop
pop
pushl
xor
and
ror
lds
out
loope
rolb
xchg
sbb
idiv
out
js
test
fiaddl
insb
loop
sarl
sahf
scas
push
mov
add
movsb
sbb
lods
sub
movsl
clc
add
xchg
push
stos
ret
push
inc
outsb
arpl
idivl
mov
and
jns
test
pop
in
or
inc
sub
add
addl
push
daa
lea
mov
iret
call
pop
xor
movsb
add
rcrl
ljmp
mov
rcrl
popf
fldenv
or
mov
je
jl
test
mov
daa
test
dec
popa
or
into
mov
fisttps
inc
inc
cmp
pop
xchg
push
ljmp
lock
arpl
sbb
or
pop
adc
push
pop
aad
pop
cmpsl
push
pop
popa
jb
into
add
jae
pushf
sbb
imul
lea
jg
add
je
out
test
or
mov
inc
into
cmp
cltd
dec
jno
nop
dec
xor
xchg
lcall
fstpt
movsb
mov
adc
push
pop
push
push
pop
mov
ret
cli
pop
cli
sar
adc
call
icebp
cmp
in
pop
lahf
or
sarl
sub
gs
rcll
pushf
sub
rclb
pop
sbb
add
sbb
xor
lret
ja
mov
mov
jo
test
ficompl
push
imul
mov
test
popa
and
add
jbe
xor
lahf
into
mov
fstl
ds
idivl
jb
cmp
rcll
xchg
dec
mov
inc
push
xor
lock
jae
jle
xchg
jne
pop
push
sarb
xor
dec
pop
pop
scas
ja
adc
imul
imul
ret
repnz
sbb
sbb
pop
jno
pop
add
cmp
into
sub
mov
pushf
ljmp
mov
pop
mov
jmp
lods
insb
sub
mov
jp
cwtl
and
js
scas
inc
jne
mov
sti
mov
jmp
jp
dec
scas
lret
xlat
or
and
gs
pop
mov
aad
xchg
and
cmpsl
and
pop
push
shlb
mov
mov
mov
sub
nop
adc
je
sbb
adc
fdivrs
or
imul
sti
push
ljmp
call
fsubrl
inc
xchg
mov
jae
cltd
nop
sub
mov
mov
dec
xchg
pop
sub
mov
in
inc
xor
pop
sub
xchg
cmpsl
movb
test
rcll
or
cmp
repnz
dec
pop
in
ss
push
cwtl
add
lock
gs
lahf
mov
xchg
and
inc
data16
hlt
ss
int3
ja
outsb
out
in
xchg
pop
cmc
adc
sbb
imul
aam
mov
jbe
shll
insb
mov
dec
add
lds
xchg
or
outsb
push
loop
mov
test
adc
jge
enter
call
fiaddl
sbb
mov
fld
and
popa
out
push
aad
mov
stos
lock
mov
cs
pop
outsb
xor
int3
loopne
bound
in
roll
mov
js
adc
push
add
and
push
xor
xchg
pop
inc
and
xor
outsl
pop
ret
lret
out
out
cmp
lods
sbb
jg
mov
jns
fwait
jge
hlt
inc
jl
inc
sbb
jmp
push
sahf
mov
adc
dec
popf
cs
jg
lret
out
and
scas
mov
outsl
push
xchg
jb
repz
or
clc
push
popf
out
out
inc
dec
mov
ja
xor
jb
test
mov
cmp
outsl
dec
pushf
fwait
xchg
outsb
jge
xchg
icebp
rcll
rcl
pop
bound
es
adc
pop
clc
ja
and
out
fcoms
pop
in
inc
push
cmp
dec
jecxz
xor
inc
mov
in
sti
mov
sbb
pop
sub
imul
outsl
out
aam
ret
cmp
and
cmp
incb
inc
mov
mov
in
mov
arpl
push
mov
jbe
jb
xor
xor
push
fcmovu
mov
xchg
adc
mov
xor
xchg
mov
shrb
adc
jp
or
hlt
imul
adc
ljmp
cmp
pusha
dec
inc
mov
iret
sbb
push
add
jb
pushf
ret
loope
stos
out
js
sbb
adc
mov
dec
aad
sub
adc
and
mov
xchg
dec
push
adc
jnp
fwait
push
jb
jns
into
jp
mov
xor
int3
mov
sub
pushf
loopne
das
jno
nop
in
cmp
shrl
inc
xor
mov
pushf
fstps
outsl
rol
fcmovne
mov
pop
in
jmp
dec
imul
ss
test
test
movsl
lcall
data16
sub
lock
xchg
dec
in
jl
jne
lock
xchg
or
daa
iret
mov
fbstp
repnz
mov
cmpsl
incl
int
std
rcll
pop
lods
les
mov
imul
and
cmp
cmpsb
lods
jns
mov
jno
jmp
jl
int
push
in
cmpsl
pop
fdivrl
movsb
movsb
test
dec
out
push
xor
arpl
or
jb
cmpsl
sub
inc
in
int
stos
sub
adc
stos
loop
bound
lcall
mov
loope
sbb
xlat
test
lret
mov
icebp
xchg
gs
mov
mov
negl
fcom
fildl
sbb
push
shll
mov
dec
mov
subl
push
push
test
cs
adc
dec
sub
dec
pop
sbb
in
xchg
movsl
mov
adc
and
xor
mov
sti
cmp
fcmove
popf
ss
pop
insb
push
or
ret
xor
pop
pop
into
mov
mov
xchg
push
xchg
pop
add
test
cmp
loop
or
mov
fsubl
xchg
mov
repnz
jp
xchg
adc
out
leave
add
mov
imul
sub
mov
mov
iret
push
mov
jl
jo
jne
sarl
push
hlt
and
push
xchg
push
lods
mov
ja
pop
mov
movsb
movsb
les
out
cs
mov
add
mov
and
jecxz
pop
scas
int
in
aas
adc
loop
add
lds
inc
cmp
mov
imul
xchg
ffree
jmp
dec
outsl
mov
scas
mov
test
xchg
inc
or
lods
movsl
dec
test
dec
ret
or
jbe
das
imul
sbb
xchg
cmp
push
jno,pt
clts
daa
push
lock
push
je
jnp
add
jne
dec
shl
mov
movsb
test
movsl
jp
mov
cmp
or
sahf
xor
stos
mov
mov
push
psrlw
or
icebp
dec
adc
lods
cltd
or
sub
sbb
xchg
jge
push
add
fmull
loopne
fcmovb
mov
rcrb
inc
movsl
inc
addr16
outsb
pop
jo
push
xor
push
sbb
and
scas
and
nop
adc
adc
mov
push
in
jbe
setae
cld
fwait
aaa
jae
xorb
mov
jb
or
push
pop
lahf
ljmp
jo
out
movsl
xor
jnp
or
cmp
push
lret
xchg
xor
cmp
cmp
push
lods
adcl
mov
cmp
aam
lahf
mov
leave
mov
mov
mov
aas
or
xlat
xchg
mov
icebp
xchg
and
inc
aaa
insl
pop
ljmp
fimull
sub
leave
lret
push
xchg
andl
pop
lahf
adc
inc
fnsave
and
ja
lahf
cmp
out
shll
cmp
inc
mov
sub
cmp
je
dec
idiv
ret
add
inc
mov
dec
adc
insb
lods
push
outsl
fwait
sub
inc
cmp
add
inc
mov
jae
mov
repnz
stos
push
xchg
data16
daa
out
mov
fiaddl
inc
in
pop
test
mov
inc
in
or
outsb
add
jns
or
mov
cmc
insl
dec
pop
fs
pop
mov
xorl
in
and
cmp
cli
mov
fisttpll
loopne
mov
fcmovnb
pusha
xor
xor
imul
mov
sub
mov
mov
jne
fwait
negl
fprem1
inc
lret
push
insl
and
lahf
add
inc
out
jns
push
sarb
push
iret
out
adc
sti
icebp
xchg
jns
ror
lcall
shll
fmulp
or
imul
out
sbb
nop
je
mov
cmpsl
cld
repnz
push
mov
cmp
pushl
push
mov
sub
repz
pushf
lahf
sbb
imul
xchg
out
loopne
or
mov
dec
inc
jge
push
gs
jecxz
xchg
cmp
aad
and
addl
inc
pop
xor
mov
jnp
and
movsb
sbb
push
sub
out
push
lret
mov
aam
xchg
idivb
mov
nop
mov
loopne
out
push
stos
add
mov
mov
xchg
outsl
mov
aam
add
ss
int
mov
pop
stos
stos
push
lret
add
mov
xor
pushf
popf
xchg
ds
pop
lock
sbb
shl
mov
shrb
mov
xor
inc
mov
dec
xlat
push
outsb
xor
xor
xor
fs
mov
in
adc
mov
repnz
mov
test
test
add
sub
jg
or
lret
addr16
and
roll
into
pop
push
bound
scas
lahf
fs
dec
push
pop
sahf
push
inc
cmpsb
out
lea
in
shrb
xchg
arpl
leave
movsl
rorl
and
test
les
out
dec
ror
mov
inc
mull
repz
sahf
std
mov
gs
sti
test
gs
and
cmp
jecxz
rolb
sarb
pushf
pop
mov
mov
imul
mov
push
scas
inc
loope
movsb
enter
or
stc
add
sbb
fmull
addr16
arpl
cmpsb
mov
rcrb
leave
mov
adc
in
jg
loope
fadds
jl
pop
iret
mov
xchg
shlb
inc
insb
dec
pop
je
jmp
sub
cmpsl
popf
xor
aad
dec
mov
aam
dec
inc
jb
inc
daa
sbb
ljmp
mov
cmc
es
or
push
lds
mov
outsl
jbe
mov
dec
add
or
sbb
int3
xchg
push
mov
inc
push
or
lahf
xchg
stos
shll
cs
push
dec
push
xchg
mov
or
jne
scas
pop
iret
lds
in
and
cmp
fbld
jge
sub
out
jmp
gs
jg
call
push
pusha
lds
subl
popa
lods
pop
aam
xor
insl
subl
add
push
movsb
addb
arpl
andb
push
aas
inc
push
cwtl
sbb
push
aaa
in
fwait
into
jbe
jnp
data16
jb
cmp
fiaddl
fcoml
mov
divb
test
push
scas
push
or
cmpsl
adc
xchg
ss
sub
fidivs
inc
icebp
mov
or
jno
aaa
push
dec
int
jge
inc
out
int3
mov
sbb
sub
data16
xlat
shrb
sub
imull
cmpl
mov
sbb
mov
adc
mov
subb
xchg
ret
pop
adc
stc
test
inc
sub
test
jp
gs
jge
iret
les
xchg
or
in
out
push
andl
dec
add
lods
call
mov
or
cmp
adc
outsb
push
std
inc
xchg
xorb
mov
mov
mov
popf
shr
mov
push
jge
jle
xor
sbb
jecxz
push
mov
adc
es
sbb
pop
pop
adc
out
das
movsb
xchg
loop
xchg
push
mov
out
lahf
adc
movsb
mov
int3
cmp
pusha
sti
in
sbb
and
repz
push
cmp
fisttps
push
shll
test
aaa
dec
outsb
jl
or
hlt
icebp
ss
icebp
mov
adc
mov
test
xchg
mov
std
push
pushf
pop
cwtd
cltd
in
sahf
pop
lret
ret
and
addl
xchg
sub
jg
mov
xchg
xchg
sbb
cltd
add
mov
adc
ss
or
lret
pop
fs
jle
or
adc
inc
and
sbb
std
add
push
or
xor
push
daa
les
cmp
dec
mov
test
dec
ljmpw
je
lret
adc
jo
lahf
outsl
in
add
pop
jmp
jns
test
lahf
out
movb
mov
jb
lods
pop
inc
pop
push
push
pop
jge
repnz
addl
mov
call
or
sbb
iret
shrd
cmpsb
call
pop
lahf
mov
cwtl
ret
hlt
out
movsl
cli
adc
mov
ret
or
jb
sbb
add
cmpsb
nop
fadds
stos
sbb
sarl
mov
cli
add
lret
push
inc
imul
loopne
xchg
sub
push
jns
fcomip
nop
adc
pop
iret
or
adcb
dec
fs
mov
jge
outsl
and
inc
rcl
jge
push
push
cmpsb
cmp
dec
jae
xchg
cmp
shll
xchg
aas
insb
adc
imul
and
mov
sbb
mov
mov
fisubl
aad
adc
stos
cmp
insb
dec
std
mov
test
int3
imul
xor
adc
rclb
stos
je
mov
lods
adcb
rep
sub
and
jns
imul
push
stos
nop
mov
jno
cmp
scas
mov
mov
test
mov
vpminsw
out
jp
xchg
je
lret
mov
ret
pusha
adc
mov
shrb
cmp
jnp
dec
in
cli
xchg
lods
cwtl
stc
popa
outsl
testl
jns
data16
pslld
or
aam
mov
fistl
adc
fdivrl
mov
push
lcall
cmp
out
and
fimull
btr
xchg
dec
or
subl
sti
pushf
bound
fcompl
xlat
sarb
aam
in
call
out
dec
movsb
pop
aam
test
cmp
sbb
add
inc
pop
test
pop
pop
pop
push
aad
pop
sub
ds
enter
out
add
and
test
dec
gs
ss
repnz
push
dec
sbb
mov
adc
mov
clc
push
jmp
push
repnz
push
or
sbb
xor
mov
int
or
cmp
xchg
adc
sbb
insb
xchg
int
or
mov
and
jno
and
notb
jnp
or
xchg
jge
xchg
cmp
orb
stos
and
push
sahf
or
dec
je
jne
lret
outsl
sbb
adc
cltd
stos
and
adc
push
lock
jg
cmc
add
and
cmp
iret
popa
push
lcall
sub
jb
and
sti
mov
add
mov
jge
or
cmp
adc
clc
sti
xchg
jp
lahf
sbbl
fcomp
cmc
and
lret
jp
mov
xor
jbe
push
imul
mov
inc
adc
bound
jb
cmp
pop
mov
cmpsb
pop
jo
jno
inc
data16
pop
jg
sahf
rorl
repz
cmc
aas
ljmp
mov
test
imul
lds
push
in
jb
push
je
pop
hlt
aaa
nop
insl
jae
aad
sub
push
mov
xchg
pop
js
scas
je
jb
int3
repnz
out
inc
sub
gs
adc
push
jno
cld
div
mov
aaa
rorb
es
scas
pop
xor
inc
cwtl
xor
jae
in
push
push
jecxz
popa
jb
xor
das
inc
ret
sarl
and
arpl
mov
mov
cmp
jecxz
cmc
paddb
xor
jne
xor
jb
mov
ds
es
push
adc
shl
loop
dec
mov
mov
dec
call
xor
push
ljmp
mov
fxch
sbb
rcll
jno
pop
hlt
addr16
push
sub
hlt
cmp
out
rclb
xchg
add
mov
repnz
ljmp
fwait
push
mov
pop
pop
push
inc
icebp
aas
out
inc
out
mov
orl
ljmp
fldcw
ljmp
pop
aam
repz
add
xor
cmp
test
xchg
in
std
call
xlat
sbb
mov
sub
imul
sub
stos
rcr
xchg
push
imul
dec
orb
or
jmp
cmp
sub
add
daa
xchg
sub
mov
inc
inc
xor
fcomps
push
inc
push
jg
jae
sar
pop
lock
testb
std
and
jb
xor
repz
pop
xchg
jl
jmp
out
hlt
out
cwtd
or
and
dec
xchg
insl
xor
cmp
and
mov
jg
out
cli
sub
or
dec
sub
fs
push
pop
out
xchg
sbb
scas
push
lea
lret
inc
inc
lahf
sbb
xor
test
xlat
dec
cwtl
arpl
cmp
sub
push
xor
nop
mov
push
sti
in
pusha
sbb
xor
addr16
call
sbb
and
fcmovbe
dec
adc
pop
pop
ret
sbb
icebp
popa
arpl
enter
mov
shlb
xlat
popf
test
push
rcrb
mov
ret
mov
jb
pop
frstpm(287
jne
mov
mov
addr16
add
and
sahf
sbb
adcb
cmpsb
orl
imul
mov
pop
mov
int
mov
or
outsb
fimull
adc
cmp
pop
jge
or
inc
xchg
push
mov
or
addr16
add
sub
jp
add
jne
adc
std
mov
jns
nop
push
mov
and
clc
stos
cmpsl
add
cmp
negb
pop
lret
in
lret
cmp
pop
lods
sub
inc
xor
jae
inc
jmp
or
xor
or
test
jmp
push
dec
inc
xchg
and
mov
jno
rolb
push
adc
sahf
out
rolb
mov
scas
and
push
and
leave
int
sbb
out
rcll
dec
in
adc
cmp
push
jl
call
mov
dec
jno
push
inc
mov
cli
jne
out
pop
je
data16
std
mov
cwtl
arpl
or
and
mov
sbb
add
inc
sbb
and
cmpsb
sub
and
cli
jmp
aad
mov
dec
addr16
cmpsb
test
stos
iret
aaa
call
sub
testl
mov
in
mov
out
daa
lods
xchg
in
fcmovb
lea
iret
out
mov
iret
repz
test
xchg
fdivs
adc
scas
mov
ljmp
sti
cmpl
out
xor
pop
in
and
add
cmpsl
int
imul
jo
gs
sub
xor
fdivl
pop
outsl
mov
xchg
jne
repnz
leave
cmp
and
bound
fisubrl
es
push
gs
fwait
pop
jne
pop
lods
mov
jl
aad
test
jmp
and
loopne
adc
cmp
push
fisubrs
popa
jo,pn
lods
fnstenv
out
adcb
cwtl
jnp
cmp
inc
fisubrl
lret
sub
scas
cmp
pushf
out
pusha
xor
test
fsubrl
mov
jmp
push
stc
mov
jno
in
push
std
hlt
andb
cmp
fld
jae
jo
sbb
cmc
pop
stos
aad
fdivrs
add
push
out
lret
mov
mov
mov
inc
lds
negl
xorl
dec
sbb
call
popf
in
out
and
fwait
add
fdivrs
dec
lds
test
cmp
cwtl
flds
sbb
repnz
xchg
sub
adc
mov
icebp
popa
ljmp
lret
push
in
jno
sarb
push
fiadds
lahf
arpl
pop
sub
aad
inc
es
add
mov
inc
sub
enter
stos
out
out
pop
int
jae
ljmp
inc
fldt
pop
mov
xorl
dec
cmpsb
mov
addr16
add
stos
lcall
sbb
loope
mov
fwait
add
rcrb
adc
out
add
lea
aad
aas
sub
ss
into
rorl
daa
call
nop
push
inc
insl
imul
ret
in
pop
lahf
aaa
dec
lret
imul
bswap
cmp
or
push
ret
movsb
aaa
xchg
jle
or
sub
lcall
push
ja
cmp
nop
or
jo
xor
inc
das
and
out
mov
and
mov
adc
and
pop
add
enter
xor
mov
mov
loope
adcb
std
inc
stc
xlat
and
xchg
pusha
lods
clc
nop
add
shl
arpl
aaa
push
mov
fcom
jl
aad
int
inc
add
mov
jmp
sarb
fimuls
cmp
inc
and
movsb
in
jmp
xor
mov
divl
jg
test
pushf
lret
mov
mov
push
int3
xchg
arpl
arpl
iret
xchg
cmpsl
mov
stc
jae
mov
mov
repz
je
add
inc
ja
jns
mov
sbb
xchg
adc
dec
push
andl
aas
adc
mov
or
mov
cmp
xor
lock
ret
mov
mov
dec
shll
test
mov
test
lret
jno
push
add
push
out
pop
xchg
cmp
mov
mov
imul
mov
aam
inc
xchg
sbb
push
cmpsl
sahf
test
popf
adc
jo
cli
pop
sbb
inc
mov
cmpsb
jbe
rcrl
xchg
es
add
loope
jae
jbe
mov
mov
sbb
movsb
lret
fnstenv
inc
push
sti
xor
cmp
stos
xor
lret
pop
lods
add
xor
outsb
aad
mov
add
mov
mov
ss
hlt
js
inc
js
lea
mov
pop
mov
inc
push
push
nop
xchg
push
shl
aas
fs
inc
cmp
or
and
xor
sub
loope
inc
clc
dec
pushf
arpl
push
mov
cmpsb
cmp
out
sar
icebp
cmpsb
xchg
push
cwtl
dec
movb
js
lods
lcall
call
sub
cmp
and
pop
xor
in
mov
add
inc
addl
aam
jb
sub
out
out
mov
popa
xor
xor
jnp
dec
cmp
lods
dec
dec
mov
or
xchg
mov
cmpsb
ret
mov
fisubrs
jae
test
int3
push
lea
xor
mov
pop
sbb
push
vorps
int
das
mov
aas
gs
ficomps
in
push
pop
shll
flds
rcl
sahf
push
jno
test
jo
out
mov
pusha
xchg
jge
sahf
sub
push
out
jae
inc
mov
inc
xchg
xchg
mov
loop
insb
mulb
test
aam
push
pop
aam
cmpsb
out
mov
aas
loopne
and
mov
sbb
xchg
cli
mov
shll
jo
sub
movsb
xor
cld
mov
mulb
jne
mov
sub
shld
mov
fldcw
repz
shlb
cmp
clc
rclb
pop
sbb
jb
mov
sbb
jae
je
mov
inc
xchg
jb
adc
push
dec
out
shlb
pop
lcall
pop
out
push
stos
jg
sbb
in
imul
sub
out
mov
mov
cwtl
ja
dec
mul
and
jp
mov
xor
and
les
or
clc
aam
scas
stos
cmp
xor
jl
xchg
add
xlat
cmp
xorb
dec
fistpl
adc
inc
leave
ret
leave
pusha
mov
in
dec
scas
aad
imul
dec
iret
sub
sub
test
out
mov
inc
fs
imul
inc
pop
and
xchg
inc
jmp
fwait
sti
add
mov
adc
imul
adcb
dec
in
xchg
popa
push
addr16
inc
jmp
js
stos
jnp
adc
dec
loope
mov
dec
jo
dec
pcmpgtb
jmp
cmp
jge
push
jns
shll
add
ja
mov
mov
mov
jb
out
jae
cmp
mov
adc
sbb
movsl
inc
lcall
push
aaa
pop
inc
jecxz
div
ret
cmpsb
pop
sti
mov
int
pop
cmc
lcall
jb
repnz
xchg
inc
in
jbe
into
ja
jo
push
negb
add
add
lods
arpl
lock
sub
push
mov
fsubrs
fadds
pushf
mov
pop
jb
mov
inc
mov
dec
int
loopne
jno
insb
and
push
pusha
clc
push
jne
mov
push
clc
pop
mov
and
enter
push
xchg
inc
mov
rcll
fwait
out
inc
out
push
ficompl
lret
pop
and
in
stos
std
pop
in
cmp
ud2
into
not
aad
loop
and
movsl
cmc
xchg
jns
pop
pop
mov
lods
mov
stc
out
or
ss
add
lahf
imul
sbb
fmuls
jns
pop
pop
inc
sbb
bound
loop
dec
mov
cmp
mov
add
or
ret
push
aad
mov
rorl
adc
out
pop
push
push
enter
test
pop
pusha
dec
nop
xchg
ficoms
or
cmpsb
adc
into
sub
imul
int3
outsl
lods
jl
lcall
stos
aam
dec
sbb
in
mov
cmp
js
sbb
push
jae
jae
popf
movsl
xor
xor
xchg
cmp
aad
xor
inc
mov
lock
arpl
pop
out
daa
add
add
fisttps
decl
pop
mov
loop
pop
xor
gs
adc
push
je
mov
unpckhps
mov
pop
xchg
out
hlt
pop
inc
add
sbb
lock
jmp
or
mov
xchg
mov
push
subl
xor
push
pop
test
cmp
jg
cmp
pop
add
mov
inc
loop
sbb
out
sub
gs
mov
and
cld
aad
cmp
xor
inc
inc
mov
xor
ret
push
cmp
xchg
adc
xor
xor
mov
insl
mov
xor
cwtl
mov
dec
mov
mov
mov
jae
imull
xor
lea
cs
jbe
adc
mov
fnstsw
cmp
lock
fbstp
rcrl
leave
fsubp
xor
scas
jae
fcoml
xor
adc
outsb
mov
mov
lea
sahf
sub
sub
dec
or
cmpsb
out
inc
lods
add
lret
or
mov
icebp
test
jbe
mov
dec
dec
jg,pn
push
imul
sbb
mov
jno
js
les
or
shll
outsl
push
push
push
scas
fcompl
std
sbb
outsb
mov
jge
mov
leave
std
in
test
jmp
mov
adc
inc
std
sub
or
mov
mov
scas
testb
js
and
ret
jno
xchg
rorb
jne
repnz
int3
les
add
int3
gs
inc
jl
aad
int
ds
push
jp
mov
pop
dec
push
inc
mov
add
or
cmpsl
pop
jl
or
fldl
ret
adc
xor
or
movsl
iret
mov
ja
call
clc
xorl
mov
insl
ficomps
push
dec
out
xchg
shlb
mov
pushf
data16
pop
rol
jle
je
cmpl
hlt
lods
lods
decb
mov
sbb
flds
add
loop
push
pushf
push
imul
rcl
inc
mov
cmpsl
or
xorb
jne
mov
cmc
cltd
js
push
mov
sbbb
sti
jmp
inc
push
mov
jbe
loope
stos
xor
xchg
out
lret
sbb
jne
andl
fcomi
xchg
stos
jl
imul
stos
outsl
pop
mov
xor
xor
stc
imul
xorl
pop
mov
ljmp
adc
xor
or
in
inc
inc
mov
mov
outsl
inc
cmp
aad
inc
mov
jg
adc
test
mov
xchg
push
and
adc
xorb
mov
jb
sti
or
insl
fsubrs
fisubs
sbb
mov
lret
xor
out
sub
ljmp
push
and
ds
and
lcall
in
mov
cmp
or
pop
jns
jo
pop
xchg
push
jecxz
sbbl
push
inc
or
sarl
aad
pop
in
in
xchg
and
lahf
std
sahf
mov
cmp
pop
sub
cli
lods
out
cmp
or
aam
repz
sbb
ret
jbe
mov
adc
pop
mov
and
add
cmp
cmp
shlb
push
adc
data16
je
fdivrs
addl
inc
jb
xchg
movsb
inc
ret
mov
cmp
pop
dec
test
addr16
dec
sub
or
stos
test
dec
div
lock
sub
sub
icebp
inc
pop
and
jecxz
and
dec
adc
call
push
pop
in
into
dec
in
movsb
mov
xchg
push
dec
adc
adc
dec
shl
mov
call
mov
scas
cmp
mov
aad
dec
ss
clc
mov
fldcw
mov
add
xor
inc
scas
pushf
xchg
leave
bound
and
or
gs
fdivrl
mov
sbb
ds
push
std
outsb
xor
mov
push
movsl
dec
pop
push
sbbb
jmp
dec
in
lret
roll
adc
push
nop
pusha
cwtl
inc
data16
flds
pushf
cld
inc
jnp
fsubr
push
inc
sbb
gs
xorl
pop
sub
les
xor
rcrb
fisubrl
cli
int
enter
cmp
add
mov
movsb
and
jp
jge
xor
fldt
test
jge
fwait
std
or
out
shrb
mov
sub
sub
adc
and
push
aas
daa
test
and
movsb
inc
inc
sub
lea
mov
mov
adc
and
adc
mov
lods
enter
stos
mov
sub
ljmp
fucomp
sub
dec
inc
mov
popf
pop
jns
ss
or
aam
stos
aaa
movsl
test
fiadds
mov
and
adc
or
and
sbb
orb
push
andb
sub
or
inc
inc
cmp
pop
add
ret
jnp
push
int3
fists
inc
add
test
add
cmp
mov
flds
outsl
mov
jmp
push
test
leave
inc
mov
mov
sbb
jmp
and
ficoms
jo
xor
loop
pushf
cltd
inc
push
mov
mov
flds
xor
adc
fadd
rorl
in
xor
mov
lea
pop
push
gs
inc
aas
fwait
xor
jbe
inc
sbbl
ss
test
sbb
arpl
sub
adc
outsl
shll
out
inc
scas
sbb
mov
push
dec
mov
and
cltd
sub
xchg
sbb
sub
pop
or
mov
fnstsw
ds
cwtl
aad
pop
int3
push
mov
mov
enter
aad
lsl
jo
stc
scas
lods
jb
xchg
pop
jne
fmull
cwtl
sub
out
sub
dec
xor
cmpsb
mov
jp
icebp
popa
outsl
daa
scas
xor
dec
mov
int3
or
sub
mov
jnp
bound
cmp
arpl
xchg
icebp
inc
iret
mov
dec
int
or
jo
je
jns
jne
mov
push
xchg
add
lods
inc
or
rol
cmpsl
adc
scas
stos
xor
lea
pop
lds
cltd
sbb
int
das
scas
pushf
out
dec
popa
xchg
jns
dec
in
jo
fidivs
xor
pop
push
jmp
ficoms
add
mov
lret
sbb
add
aaa
lret
sti
out
hlt
cwtl
cld
cmpsb
mov
mov
jmp
test
mov
add
pop
lahf
cltd
cli
pop
call
or
sbb
lcall
pop
mov
int
test
dec
cs
push
out
test
inc
movsb
out
xchg
xor
aad
adc
pop
cltd
and
cltd
sub
roll
aam
jb
jnp
imul
and
inc
cs
loopne
xor
sub
adc
xchg
fsubs
inc
insl
push
dec
into
loop
push
imul
aaa
outsb
mov
mov
xlat
lock
xor
sbb
mov
pop
dec
sub
push
inc
mov
xchg
xchg
push
sbb
adc
repnz
or
cmp
push
inc
popa
pop
movsb
lods
jle
mov
xchg
lret
loop
push
jnp
pushf
dec
arpl
push
std
sub
leave
pop
repz
sbbl
or
sub
daa
pop
jns
mov
mov
cmp
cli
or
jns
sub
xor
and
adc
stc
mov
scas
cmpsl
jmp
ret
inc
std
lret
icebp
in
cmc
out
adc
cli
ret
jl
mov
adc
stc
dec
ficoml
mov
shll
fsubr
jecxz
push
roll
mov
pop
cmpsl
sarb
ffreep
sbb
cmpsl
xchg
insb
clc
adc
ja
iret
xchg
sub
jp
in
int3
outsl
fs
aaa
pop
jmp
in
aam
or
jns
xchg
push
fsubrs
js
stc
jbe
in
or
stos
imul
mov
xor
jge
add
pop
stos
stos
xor
xchg
dec
sbbl
clc
mov
xor
or
push
lods
test
test
push
sbb
push
cltd
jp
aam
insb
push
andl
mov
or
scas
jb
es
rcrl
sbb
aam
cmpl
push
sbb
mov
sbb
push
dec
test
mov
in
adc
push
mov
fidivrs
into
mov
push
and
shlb
daa
xchg
inc
in
cmpsl
push
out
divb
loopne
jle
mov
lods
mov
jnp
mov
rolb
mov
and
jbe
adc
fisttps
lret
orl
ret
into
lcall
cs
mov
mov
jbe
sub
mov
mov
adc
bound
dec
xchg
mov
dec
cmovs
test
jnp
xlat
sub
fwait
mov
jle
in
sbb
xor
stos
push
xlat
jnp
mov
jno
push
pop
js
cmp
push
pop
les
roll
sbb
loope,pn
pop
ds
mov
loop
aad
mov
icebp
mov
sti
aam
jb
popf
jp
xlat
mov
mov
aaa
inc
movsl
jb
or
sbb
pop
sbb
jnp
lcall
xchg
sub
jg
xlat
fcmovne
lods
inc
shrl
jl
sbb
jle
add
or
pop
push
out
cs
mov
fwait
lret
les
inc
sbb
mov
out
popf
push
movsb
mov
pop
inc
dec
add
out
pushf
jb
pop
jno
xor
lea
and
sub
mov
xchg
sbb
nop
sti
mov
and
ja
out
dec
fcomps
push
mov
push
loopne
mov
push
sub
lret
inc
dec
aaa
xchg
xchg
dec
mov
lahf
mov
and
mov
int
push
fsubrs
imul
mov
aad
pusha
ret
mov
movsb
repnz
mov
lcall
xor
scas
icebp
mov
lcall
repnz
sub
xchg
inc
shll
adc
insb
loopne
fists
jge
mov
sbb
jge,pt
movsl
insl
sub
fs
psubusw
push
mov
jae
mov
and
add
mov
lret
lea
jle
data16
push
int
std
mov
fs
cmp
scas
je
jp
enter
es
imul
adc
cli
jp
nop
clc
icebp
repnz
pop
jmp
mov
std
inc
push
lea
pop
cmpsl
mov
mov
xor
pop
push
lret
adc
in
loopw
pop
cltd
sbb
sub
mov
pop
int3
test
fnstenv
jb
dec
jge
ja
incb
adc
nop
stos
mov
xchg
sbb
fwait
testl
and
jle
ret
cmp
inc
jo
cld
or
mov
push
lds
outsl
sub
rolb
push
sarl
loope
icebp
sub
push
mov
xor
pop
mov
les
cmp
js
lret
cmp
mov
loop
mov
pop
inc
sbb
mov
mov
mov
rolb
fldcw
loope
pop
and
sub
outsl
pop
sbb
sub
mov
jmp
xchg
xchg
dec
xchg
pop
xor
mov
cltd
shl
lea
mov
sbb
push
int
inc
cmp
and
imul
or
mov
movsl
sub
test
pop
es
push
cmp
lret
fidivl
cmp
jae
mov
push
mov
pop
jbe
test
les
and
nopl
aad
adc
std
adc
imul
das
or
mov
je
stos
lea
roll
push
add
lret
ja
cmpl
int3
xor
xor
incb
int
sbb
jbe
sub
lods
cmp
and
movsl
sbb
cmp
ss
rclb
stc
dec
dec
sarb
icebp
xor
pop
or
or
lods
push
pop
push
jg
inc
pushf
mov
jmp
pop
mov
xchg
push
cmp
push
fcmovbe
push
push
add
or
mov
push
stc
ror
xorl
xchg
scas
mov
imull
xor
and
cld
sahf
mov
scas
call
xlat
out
jne
and
pop
cs
cwtl
jp
sti
xorb
cmpsl
dec
or
push
add
rcrl
rcrl
fisttps
push
insl
iret
inc
jl
cs
lock
add
in
pop
popa
mov
rorl
addl
fwait
ss
fistpl
rorl
cmp
ss
stos
or
fs
sub
cmp
sbb
jg
and
dec
cmp
iret
fsubrl
imul
xchg
push
mov
push
lret
pushf
cwtl
lahf
sbb
lret
imul
arpl
sub
and
inc
adc
call
xor
test
inc
fimull
inc
ja
sti
rcl
adc
faddl
insb
pop
cmpsl
aas
xchg
lcall
push
fisubrs
pop
mov
aaa
push
idiv
dec
scas
das
or
pop
pop
xchg
loop
es
jl
inc
adc
dec
pop
or
out
bound
lret
push
jge
pop
daa
lret
push
mov
jns
jp
jno
call
outsb
jbe
mov
std
mov
fldl
orl
push
jb
arpl
les
cmpsb
cltd
setl
out
jecxz
pop
cmp
adc
je
xlat
push
mov
mov
pop
push
jmp
repnz
test
pop
out
cld
cltd
mov
mov
xor
lret
mov
lock
mov
cmp
into
or
pop
out
jg
arpl
fsubrs
xchg
dec
cltd
es
test
jmp
jne
xor
out
lods
rcrl
aas
sub
mov
movsl
les
and
jno
ds
dec
outsl
push
lret
mov
js
lock
fwait
arpl
xchg
arpl
mov
movsb
ss
mov
pop
inc
xchg
cmpsb
or
in
cltd
fxch
test
fwait
xchg
inc
mov
mov
movups
xchg
add
in
daa
push
pop
fistpl
daa
xchg
jno
and
cwtl
xor
pop
mov
jns
mov
fs
dec
dec
in
and
xor
fdivs
push
loopne
mov
aad
das
add
stos
sbb
test
pop
movsl
and
dec
jno
pop
cmpsl
roll
fists
mov
mov
mov
das
aad
cli
and
bound
jns
xor
xor
mov
in
cmp
rclb
sbb
ja
jbe
popa
cli
enter
repnz
repnz
lahf
or
sbb
sub
jno
xchg
loope
in
fs
xchg
xor
lret
insl
daa
stc
adc
sarl
cmp
xlat
std
push
nop
stc
sub
and
jo
push
jle
sarb
or
cmp
adc
mov
lods
fdivrp
pop
sub
inc
stos
mov
in
sub
test
dec
out
bound
xor
lods
sbb
sub
and
imul
sti
sarl
push
cmp
jl
mov
ljmp
pop
ds
mov
shr
xlat
test
andb
outsl
arpl
or
adc
mov
xchg
mov
fcom
das
ret
mov
stos
xor
and
movsl
mov
mov
movsb
dec
sahf
mov
jnp
clc
push
sarb
mov
pusha
cmp
inc
fadd
in
lret
fsubrp
inc
aas
sbb
int3
repnz
aas
or
int3
mov
sarb
jmp
andb
jae
sub
aam
jo
mov
popa
stos
roll
lret
das
cmp
dec
es
adc
std
cmp
jns
adc
cltd
imul
push
loop
mov
push
mov
sti
aad
mov
les
sub
mov
add
in
push
popf
mov
inc
and
xor
fwait
pop
mov
xor
mov
adc
call
mov
aaa
and
subl
cmp
ljmp
outsb
insl
or
xchg
cwtl
and
repz
scas
lret
idivl
imul
insb
and
inc
pop
sti
push
in
subb
lret
stc
std
test
data16
cmpsb
or
adc
ljmp
add
pop
xor
pop
push
sub
sbb
std
push
in
stos
fadd
shl
push
xor
repnz
mov
sbb
mov
xchg
fwait
das
sub
bound
jl
pop
ljmp
sbb
or
sub
cmp
movsb
push
nop
jmp
xchg
push
les
mov
fnstcw
leave
xchg
add
stos
iret
or
loopne
ret
stos
dec
lret
ds
dec
and
adc
jg
ret
sbb
clc
cmp
xor
mov
or
xor
outsb
mov
sub
fidivrl
stos
lret
mov
xor
mov
sbb
loopne
xchg
mov
les
push
out
or
enter
cmp
shr
xchg
mov
xchg
mov
cld
inc
rcll
ds
sbb
les
in
mov
loope
mov
cwtl
mov
xchg
gs
std
jl
ret
cmp
loop
xchg
adc
jbe
lcall
push
movsb
cltd
lahf
scas
pop
dec
pop
rorl
or
leave
cmc
prefetch
or
jle
sbb
sbb
add
push
sbb
jb
mov
and
jb
std
imul
aam
push
repnz
xor
xor
ror
jecxz
cld
test
cmp
out
and
mov
aam
out
xor
inc
out
sub
into
xchg
loope
lahf
out
sti
jne
or
sbb
int3
out
jns
jle
cmp
bound
jg
jg
aam
mov
bnd
pop
pop
or
jbe
sbb
mov
lahf
loope
inc
testl
jmp
cmp
mov
js
pop
nop
and
jns
lds
iret
jo
ret
aam
pop
loope
sub
inc
outsb
mov
int3
dec
lahf
bound
nop
mov
cmp
mov
xor
ljmp
sti
mov
stc
jp
mov
pop
jno
ljmp
and
mov
in
inc
pop
xchg
dec
daa
in
jnp
insb
orl
xchg
subb
cmp
movsl
shrb
and
jnp
popa
out
adc
or
pop
sub
xchg
cmp
jnp
lea
nop
pop
movsl
daa
sti
scas
and
mov
mov
cmp
adc
pushf
lods
mov
jg
pop
or
push
pop
and
aaa
iret
push
inc
jge
ja
leave
mov
std
jp
add
xor
inc
out
sti
jns
push
sub
mov
cmp
lock
cmpsl
test
arpl
int
ficomps
push
xor
inc
dec
or
out
jns
test
sbb
mov
jge
push
pusha
repz
jle
lods
mov
jp
mov
adc
popa
lods
loope
sbb
add
sub
cld
xlat
pop
fildl
pop
cmp
mov
dec
sbb
loopne
mov
aam
pop
and
imul
mov
jge
clc
dec
inc
xchg
cld
xorb
cmp
adc
mov
mov
sub
pop
jnp
and
sbbb
in
scas
lcall
fndisi(8087
adc
cmp
and
test
int3
dec
ds
icebp
mov
gs
sub
push
hlt
or
adc
mov
iret
mov
xor
fists
xchg
push
jecxz
aam
inc
sti
adc
lret
sarl
push
dec
daa
mov
inc
std
sbbl
dec
dec
fs
lcall
xchg
mov
adc
xchg
add
mov
addr16
dec
imulb
mov
adc
push
shll
jae
xlat
jo
arpl
test
ror
xchg
ljmp
pop
pop
shll
pop
sti
ret
add
mov
push
jno
repz
daa
and
lods
xchg
xchg
fstl
scas
jmp
jle
iret
sub
push
outsb
xor
into
push
std
movsb
cs
or
es
push
cli
rcrb
mov
imul
inc
add
aaa
sub
cmp
idivl
lret
adc
pop
xchg
int
sbb
les
mov
xchg
inc
out
cmc
pop
mov
inc
adcl
adc
cs
xchg
pop
in
adc
aad
aad
cmp
aam
mov
mov
sbb
dec
jb
fdivl
sbb
xorl
pop
mov
mov
xlat
xor
mov
cs
inc
or
push
cmpsb
out
lock
mov
and
adc
cmc
sbb
bound
sub
rcl
lock
sub
add
or
clc
fucomi
gs
cmp
scas
cmp
add
adc
dec
xlat
ret
mov
enter
mov
and
push
push
and
pop
adc
mov
xor
inc
cmpsb
lods
repz
js
out
sbb
idivl
lcall
jmp
ss
jg
pushf
loopne
lret
push
lahf
mov
jle
jb
jbe
arpl
pop
jle
cmp
cmp
mov
mov
jne,pn
fdivrs
mov
jl
fisttpll
outsl
fldln2
popf
testb
pop
push
insl
xorps
mov
lret
addb
mov
jecxz
mov
jae
pop
xchg
inc
push
dec
xor
dec
sbb
jge
or
cmc
outsb
mov
clts
orl
cmpsb
mov
mov
push
inc
mov
int
sub
inc
mov
neg
jl
or
inc
popa
mov
aas
cmp
sti
inc
fdiv
daa
sar
testb
lods
cwtl
ret
jg
sbb
repz
xor
rcr
push
insl
sub
insl
lcall
xor
lahf
pushf
repz
mov
jge
std
test
sbb
inc
dec
out
addr16
bound
cmp
dec
mov
mov
leave
repnz
sub
mov
add
fwait
std
adcl
add
jo
nopl
std
sbb
sub
ss
cltd
pop
pop
cmp
mov
in
pop
fnsave
and
movsl
pushw
adc
sahf
mov
or
outsl
ds
cli
xor
insb
out
aas
lahf
out
dec
outsl
mov
xor
int3
addr16
test
add
sahf
mov
stos
imul
push
popa
sub
icebp
jg
jo
sbb
in
jne
sti
lcall
inc
int3
push
not
je
ror
mov
jle
out
mov
push
ss
and
movsb
push
std
mull
adc
cmpsb
mov
jmp
jl
in
out
mov
neg
cmpb
add
imul
inc
aad
mov
push
push
icebp
and
test
xor
shl
pushfw
xchg
test
sbb
sbb
push
lods
jle
xchg
loop
test
outsb
inc
outsb
xor
sbb
pop
jecxz
out
enter
and
dec
imul
scas
push
ljmp
push
lods
aaa
pop
sub
jns
jns
pop
jns
xchg
mov
mov
clc
push
or
cmp
dec
je
fcmovu
sti
mov
addr16
mov
dec
rcrb
dec
mov
dec
test
aas
out
sarb
jnp
and
test
jle
dec
dec
mov
mov
jno
mov
popf
jbe
fsubl
cmp
add
pop
iret
ljmp
jg
push
pop
loope
mov
mov
daa
subb
fwait
pop
or
clc
fs
aas
or
adc
aad
mov
sar
xchg
ja
clc
add
repz
pushf
dec
add
xlat
cltd
push
xlat
and
lret
add
add
je
mov
aaa
xlat
js
sbb
daa
lods
add
fs
and
fimuls
mov
xor
mov
add
test
fistpll
add
sbb
ds
int
sub
mov
jns
dec
jge
or
adc
mov
mov
mov
fmull
xor
and
aas
les
in
or
sub
fsubrs
mov
sub
mov
aad
clc
enter
mov
mov
pop
fwait
daa
loop
sti
fidivrl
lds
call
sbb
jge
loopne
dec
pop
mov
pop
mov
mov
rcl
or
ds
ret
xchg
in
cmp
cmp
rcr
jecxz
mov
vpshld
aas
aad
sbbb
jle
xchg
pop
dec
cmp
mov
sbb
jb
mov
adc
mov
jno
call
or
iret
inc
mov
loopne
cmp
push
bound
pop
aaa
scas
out
mov
push
jp
pop
hlt
push
xor
cmpsl
jecxz
mov
lcall
mov
lods
jecxz
and
repz
test
xchg
stos
pop
mov
pop
aaa
imul
lcall
call
mov
imul
cmpsb
pop
cltd
mov
mull
cwtl
xor
aas
mov
fs
pop
jno
xchg
arpl
fwait
mov
pop
xchg
xchg
js
insb
push
pop
fisubl
iret
clc
push
data16
pop
push
ficompl
mov
pushf
pop
lahf
cli
add
cltd
rol
dec
mov
fstpl
lods
jae
push
mov
jne
sub
fs
into
roll
lock
fucom
sbb
cld
xor
xchg
mov
mov
push
es
mov
xchg
sub
jnp
vmptrld
inc
mov
popa
dec
jo
orb
fst
adc
out
cmp
sti
fsubrl
inc
dec
xchg
into
aaa
and
cmp
xlat
decl
sbb
sarb
popl
sbb
mov
enter
jge
jecxz
pop
ret
adc
leave
imul
aas
fidivrs
fs
pushf
es
mov
shlb
fnsave
ljmp
add
sbb
cmpsl
lea
sub
sub
es
cmc
xor
jge
jb
and
data16
pop
sti
icebp
pop
sbb
pop
jnp
out
ja
adc
xchg
xor
push
push
aaa
pushf
loopne
gs
cmp
add
xor
clc
mov
mov
and
dec
aam
lock
out
xorl
push
jo
mov
jp
xchg
outsl
inc
push
iret
mov
push
fs
bound
xchg
jno
pop
and
mov
stc
jle
orb
mov
lock
ror
mov
lcall
push
aaa
into
ljmp
shrl
dec
cmpsl
mov
scas
ljmp
inc
and
cli
insb
dec
call
fisubl
xchg
push
iret
or
loopne
ret
pop
lret
out
out
adc
rcrl
add
jmp
lock
bnd
mov
aam
sbb
add
pop
sbb
mov
fdivr
cli
fldt
xor
je
pop
push
mov
fsub
das
sar
or
gs
scas
mov
mov
add
and
sbb
arpl
ret
imull
push
mov
aad
jp
in
push
inc
rcll
sbb
mov
leave
inc
out
mov
and
rclb
xchg
and
jl
pushf
xchg
out
das
dec
daa
loopne
push
xchg
sub
rorb
insl
cmp
fsubs
clc
sahf
out
xor
xor
xchg
insl
dec
push
xor
sbb
cmp
xchg
xchg
aad
lahf
ja
ja
rolb
sbb
inc
fistps
pop
adc
cmpsl
xor
cmp
add
pop
dec
lret
mov
sti
scas
xlat
mov
and
das
pop
sarb
sbb
add
xchg
lods
and
addr16
cmp
or
into
ret
and
gs
and
xchg
rolb
jno
int
out
mov
shl
enter
mov
int3
mov
add
and
mov
jge
mov
lods
push
out
cwtl
stc
xchg
xchg
pop
shrb
icebp
sub
xchg
dec
or
pop
cld
mov
jne
cltd
mov
mov
loopne
outsl
cmp
int
outsb
rorb
loopne
cmpb
decl
push
cmp
mov
outsl
xchg
mov
pop
jmp
xchg
insl
stc
fistl
fs
scas
jne
dec
js
mov
test
xchg
adc
scas
mov
pop
xor
dec
aam
lods
mov
and
aas
lods
mov
or
jnp
pop
xor
leave
subl
clc
mov
mov
push
imul
iret
pop
nop
sub
mov
mov
adc
jge
xor
or
fstpl
or
fwait
dec
packuswb
cmp
push
push
pop
imul
adc
pop
xor
inc
cld
or
addb
fwait
fs
jo
std
shl
gs
cmpsl
lahf
dec
jge
mov
iret
lahf
jp
sbb
add
mov
in
jp
xlat
lret
outsb
jge
inc
lcall
adc
dec
loop
lock
dec
xchg
xchg
mov
jp
jecxz
push
aad
inc
or
inc
jecxz
xor
mov
ja
pushl
mov
mov
jmp
pop
jns
xchg
cmp
ja
cld
fldl
jp
cmp
xchg
xchg
adc
jmp
pop
push
dec
xchg
fildl
aad
adc
dec
jnp
out
pop
loop
mov
cld
cmc
adc
mov
push
pusha
pusha
mov
inc
dec
pop
jae
pusha
jb
clc
ds
adc
push
addb
mov
dec
ficompl
sub
fstl
repz
cmp
imul
mov
jb
xchg
and
loop
jae
pop
mov
adc
sub
fwait
sub
pop
and
pop
jecxz
lret
mov
adc
cmp
clc
in
cld
push
popa
cmc
jbe
incb
fcomp
lret
lods
sbb
jle
mov
clc
jmp
adc
adc
lea
fimuls
cld
aaa
push
mov
sub
rorb
adc
mov
fwait
dec
jmp
or
int3
pusha
sbb
nop
int
mov
fbld
dec
inc
push
or
outsb
out
cwtl
pop
imul
lods
mov
mov
in
scas
clc
loop
in
mov
pop
adc
iret
add
daa
inc
out
sahf
jne
out
cld
push
lahf
inc
jo
js
pop
pusha
ds
jae
jbe
mov
fs
and
scas
pop
mov
repnz
push
xchg
or
xor
mov
sub
shl
pusha
cli
xabort
push
push
pop
sub
lods
test
fsubl
xchg
ret
out
push
mov
test
adc
or
sbb
push
push
fdivs
or
add
test
xor
mov
mov
xorb
or
push
mov
push
lds
cmc
push
mov
imul
jb
arpl
mov
pop
and
mov
pusha
imul
cld
repnz
shrb
cmp
cli
pushf
shlb
or
data16
mov
mov
pop
pop
test
imul
add
pop
aas
mov
cmp
movsb
loop
mov
or
push
pop
aaa
jge
xor
call
jmp
adc
pop
or
lock
pop
arpl
xchg
int3
or
or
pusha
inc
fdivr
pop
xchg
pushf
das
and
pop
push
pop
mov
int3
stc
clc
cmp
xor
mov
cld
xor
pop
lds
add
cli
rorl
hlt
inc
pop
mov
and
pop
bnd
pusha
mov
decl
mov
or
pop
sbbl
add
call
out
sub
js
leave
or
jmp
xchg
test
inc
adc
cmp
sub
jbe
inc
inc
arpl
loope
xchg
fst
in
jl
xor
clc
push
sub
sub
xor
fcompl
and
repz
pop
inc
sub
and
stos
push
lods
imul
push
jl
cmp
mov
std
adc
push
xchg
cmp
jno
cwtl
jmp
mov
and
jp
nop
in
imul
mov
cmpsl
push
sbb
test
and
popl
mov
movsl
jge
sub
aad
sub
mov
push
in
add
or
pop
push
mov
fcomi
imul
shrb
cmp
insb
testl
adc
sbb
dec
lret
out
ss
inc
shlb
xorb
xchg
mov
lahf
leave
jbe
rol
lret
adc
das
fmuls
inc
int3
inc
fisubs
fistl
inc
clc
xchg
int
xchg
push
and
xor
jns
imul
fisubrs
or
jne
cwtl
scas
dec
mov
or
andl
sbb
mov
mov
mov
xlat
mov
xchg
rorb
lods
mov
inc
rclb
jae
dec
shll
ffreep
xchg
cmp
inc
jmp
addr16
cmp
mov
out
and
push
lcall
aas
and
adc
clc
loope
scas
call
or
fcmovbe
adc
jbe
jg
and
inc
sarb
pop
cmpsl
mov
fimull
inc
inc
jne
mov
mov
test
in
scas
insb
pop
xlat
jno
inc
mov
sbb
pop
cmp
loopne
das
out
xchg
mov
lret
cld
fidivrs
xchg
adc
mov
lock
cmp
mov
cmp
mov
sar
xor
push
add
mov
jnp
or
jne
mov
clc
adc
ljmp
call
cmp
mov
lds
jb
mov
sub
pop
inc
inc
dec
loop
out
mov
and
pusha
insb
inc
lcall
cmc
cmp
xchg
xchg
pop
add
js
int3
xchg
inc
rolb
pop
out
jo
inc
or
and
sub
scas
pop
sub
subl
repnz
aad
nop
mov
mov
cmpb
lock
loope
fimull
xchg
sbb
sbb
cmpsb
sub
pop
iret
test
jbe
add
testl
clc
rcll
sub
mov
sub
and
inc
pop
mov
in
mov
test
aad
in
ljmp
inc
andl
ss
jg
jo
notl
push
cmp
and
aas
lds
inc
mov
mov
in
push
std
pusha
xchg
jle
movsl
adcl
lods
and
lods
mov
dec
add
shl
aam
lods
pop
int
mov
mov
frstpm(287
stos
push
fmul
xchg
cmp
iret
sub
add
adc
fwait
add
jnp
clc
cmpsb
push
call
pop
lods
pushf
and
add
pop
and
push
mov
sti
push
pop
pop
lcall
fisttpl
les
push
arpl
test
xlat
stc
pop
mov
insb
roll
std
int
mov
and
rorl
fs
dec
gs
cmp
test
pusha
aaa
and
mov
andl
sbb
sbb
testb
repnz
jp
mov
mov
inc
jmp
pop
lcall
dec
in
dec
pop
nop
dec
lods
sbb
lret
dec
lock
idiv
inc
bound
aam
std
cmp
dec
sbb
pop
mov
hlt
lods
icebp
out
xchg
out
mov
std
int3
xchg
test
stos
andl
test
nop
popa
fidivs
sbb
cld
clc
sarb
inc
mov
inc
jecxz
inc
fs
mov
inc
fisubs
inc
dec
js
dec
dec
addb
stc
push
xchg
pop
ljmp
jl
stos
clc
inc
cmpl
adc
cmp
push
out
movsl
arpl
mov
out
sbb
mov
loope
imul
pop
ja
sub
jbe
sub
push
add
loop
mov
dec
or
sarb
fidivrl
imul
cli
shll
ja
or
mov
arpl
or
mov
xchg
outsb
in
jno
add
mov
xlat
jecxz
in
fwait
outsb
loop
pop
sbb
ficoms
testb
adc
or
or
pop
lods
or
adc
repnz
mov
xchg
jle
inc
xchg
xchg
pop
mov
jo
or
sub
mov
or
lock
or
jg
push
push
adc
or
leave
xchg
outsl
pop
cmpsb
xchg
flds
lods
test
mov
pusha
fnstsw
aaa
adc
mov
xchg
loop
mov
aas
das
and
push
or
fnstenv
sarb
pop
ds
cmp
xchg
ja
or
sub
or
pop
and
rcrl
fabs
je
test
pushf
push
repnz
iret
jns
sub
xlat
pusha
cli
dec
adcl
pop
xchg
icebp
rolb
insb
jno
rcr
push
cli
push
mov
fmul
repz
jge
dec
pop
jp
lret
xor
test
cs
adcb
cltd
dec
cli
scas
addr16
ljmp
les
or
mov
adc
dec
jo
add
jbe
and
xchg
inc
inc
jns,pn
popa
dec
adc
mov
ds
or
cltd
dec
mov
mov
fstps
divl
push
mov
fistl
cwtl
mov
ds
mov
sbb
xchg
sahf
stos
and
mov
add
insb
or
repz
xchg
jl
lcall
and
sbb
cmp
daa
dec
js
jne
popa
out
jno
jp
add
mov
cld
or
inc
add
int3
gs
shrl
and
scas
sub
into
xchg
fstpl
and
inc
cmp
dec
mov
dec
lret
mov
icebp
popa
movl
jmp
and
mov
fnstsw
lret
aaa
inc
cltd
mov
hlt
imul
clc
push
cmc
insb
aad
adc
sbb
mov
inc
imul
sbb
scas
cmp
sahf
cs
pop
dec
int
mov
mov
sbb
xchg
inc
int
inc
dec
adc
call
pop
rolb
add
sbb
mov
push
jae
push
mov
hlt
loopne
arpl
lret
fincstp
dec
scas
loopne
add
addl
sbbb
pop
les
mov
test
adc
cmp
cmp
inc
mov
cmp
mov
lods
ljmp
addr16
arpl
dec
push
or
xchg
push
mov
popf
mov
loop
adc
ss
mov
mov
rorb
and
lret
adc
pop
cmp
js
outsl
cmpb
xchg
mov
stos
xchg
and
push
xor
aas
inc
mov
or
jmp
insl
pusha
or
fadds
subl
mov
fdivl
nop
dec
dec
push
loope
popa
lret
inc
add
nopl
add
cld
cmp
lods
into
gs
and
add
fmul
push
pop
sbb
sahf
cmpb
int
in
mov
sub
or
pushf
cltd
mov
jmp
mov
sub
jb
add
and
cmp
mov
add
icebp
scas
rolb
mov
cmp
pop
leave
push
adc
scas
push
leave
inc
or
jo
insb
fs
arpl
icebp
inc
sub
fwait
jne
mov
shrl
fld
or
mov
outsb
das
xchg
clc
jge
pushf
inc
testl
sub
inc
out
mov
push
dec
dec
fisubrs
jbe
mov
jns
call
jno
sbb
cmp
outsb
xchg
sub
fimull
jg
arpl
das
add
mov
fwait
popa
dec
mov
cmp
dec
adc
lods
lods
sub
jmp
sbbb
and
insl
pop
inc
sbb
test
add
add
int
ret
or
push
data16
sbb
lret
in
fwait
icebp
mov
mov
add
rclb
mov
sub
xchg
fmul
xchg
loope
ljmp
or
add
cmp
inc
cmp
mov
mov
jecxz
fbld
stos
sbb
inc
mov
sbb
jb
clc
push
aad
jnp
cmp
sbb
cmp
jp
enter
push
mov
cmp
mov
lahf
aam
xchg
pop
repz
add
lea
int
leave
push
daa
dec
out
mov
or
push
mov
sbb
imul
and
test
leave
in
xor
pop
dec
roll
mov
jbe
fidivl
sahf
fidivl
das
or
out
mov
in
ss
mov
pusha
fcompl
in
lods
cmp
lock
popf
pop
and
loop
ja
dec
fcoms
pop
xchg
mov
or
call
cmp
mov
adc
popf
in
xor
in
les
shll
repnz
jle
mov
xor
decl
shll
adc
dec
pop
push
lods
add
mov
push
dec
sub
xchg
adc
dec
mov
adc
aam
sarb
cmpsb
dec
mov
pushl
sbb
lahf
dec
syscall
mov
outsb
jo
scas
jbe
es
loop
insb
fs
dec
testb
pop
xchg
sbb
shld
pop
mov
jmp
lret
test
or
sub
sub
addr16
fsubs
lods
sub
loope
xchg
popl
push
dec
push
sahf
jb
std
sbb
push
push
pop
out
mov
pusha
cld
add
lahf
mov
push
stos
addr16
cltd
or
mov
mov
das
outsb
sbb
pop
shrl
aam
xorl
push
imul
xor
jl
adc
xchg
icebp
and
push
fistl
dec
lahf
lahf
dec
dec
or
es
out
sub
and
mov
jne
rorb
sub
dec
stos
mov
data16
adc
cmpb
aad
mov
lret
jmp
push
or
jl
add
clc
fisttps
pop
sbb
fwait
xchg
mov
fcmovbe
and
sbb
pop
mov
push
mov
jp
sahf
lea
in
xor
cmc
mov
test
jae
inc
out
jp
int3
or
pop
add
mov
cli
push
mov
out
sti
fisttpll
pop
and
mov
adc
ljmp
les
sbb
je
jg
pop
mov
mov
cmpsb
call
and
mov
xchg
in
insb
fs
dec
and
xor
gs
jle
sahf
mov
xor
and
bound
arpl
and
lret
xlat
cmc
or
or
icebp
data16
shr
mov
mov
xor
clc
xor
mov
test
jp
jo
dec
inc
fidivrl
sub
and
rolb
clc
inc
cwtl
dec
call
mov
leave
cmp
inc
pop
or
addb
adc
jb
dec
xchg
fadds
pop
fwait
cmp
sar
sahf
arpl
mov
jae
mov
nop
roll
stc
adc
sub
jns
mov
adc
into
pop
sub
test
arpl
sbb
xchg
fnstcw
stos
stc
or
mov
repz
mov
add
rorb
int3
jns
ficoms
xchg
mov
jge
mov
sbb
incl
sbb
add
in
and
iret
je
cmp
xchg
aad
int3
and
and
sbb
push
xor
orl
cli
xorb
sub
fcmovb
fcmovnbe
sbb
les
fbld
pop
push
rcrb
cmpsb
cld
or
cmp
lds
xor
or
data16
pop
in
in
fdivrl
sub
fcoml
jmp
add
nop
ljmp
sub
mov
mov
fs
pop
add
mov
push
mov
dec
addb
pop
pop
mov
xchg
je
lahf
call
je
test
fistpll
pop
sub
mov
pop
xchg
jb
jp
test
ret
jns
scas
loop
push
xor
xchg
xchg
inc
adc
ljmp
adc
loopne
mov
subb
cmc
cmp
jnp
pop
xchg
xor
xchg
xor
ret
mov
inc
inc
in
push
jnp
sub
mov
xchg
sub
clc
mov
adc
ljmp
adc
mov
daa
lock
sti
loope
ret
lahf
jecxz
pushf
rcl
xor
das
cmp
insl
stc
mov
mov
cli
mov
and
fcomip
add
ja
cld
aam
dec
shlb
lret
adcb
clc
push
mov
dec
sub
sbbb
fiaddl
jo
sbb
cmpb
les
divl
cmp
stos
cmpsl
bound
movsb
rcr
mov
push
push
xor
sbb
pop
mov
add
mov
lret
imul
rol
into
fdiv
ljmp
inc
cmp
push
pop
xchg
mov
jo
aas
mov
mov
and
shll
clc
push
cmp
inc
lods
pushf
mov
add
cmp
sub
inc
sahf
push
nop
je
dec
push
inc
push
jbe
call
adcl
adc
mov
das
rorl
ja
jno
fadds
jbe
dec
sti
out
jne
sbbl
iret
inc
testb
dec
jecxz
je
xchg
call
stos
adc
and
imul
xchg
ret
fs
imul
add
orb
arpl
lods
and
cmp
andb
mov
push
lea
xor
ret
js
mov
add
repz
xchg
cmpsb
insl
leave
dec
mov
stos
xchg
pop
ret
dec
push
shlb
enter
repz
gs
xchg
jae
inc
popf
cmp
cmp
shl
jmp
test
fildl
adc
test
xchg
stos
jl
shll
aam
xlat
dec
test
push
push
ja
fstpt
mov
push
sbbl
push
or
pinsrw
fistpl
push
in
stos
dec
int
xchg
and
lcall
mov
mov
adc
stos
insb
shlw
push
fldenv
jne
and
aam
aaa
lock
xchg
cli
pop
out
mov
and
jle
addl
jnp
aad
lods
lcall
pusha
push
fistl
jnp
sub
push
mov
mov
add
nop
cltd
mov
cmp
fcoms
daa
mov
movsl
mov
and
pop
frstor
lea
repnz
pop
out
xchg
xor
iret
lds
sbb
in
or
sub
add
push
mov
push
xor
sarl
sbb
popf
lcall
jne
cmp
adc
pop
dec
in
outsb
mov
js
cmp
fistl
aas
adc
loope
mov
movl
movsb
data16
add
daa
pop
addr16
lods
or
push
or
push
cmp
xchg
mov
dec
jb
pop
pusha
dec
mov
mov
movsl
add
adc
sub
andl
xor
stc
push
pop
mov
leave
and
jecxz
scas
orl
add
aam
mov
mull
inc
mov
lock
mov
cs
movq
ja
cmp
adc
jbe
jns
push
js
push
inc
cmp
add
push
mov
out
mov
pop
hlt
jle
out
and
les
ror
pop
xchg
sbb
dec
pop
cmpsl
andb
xchg
insl
push
mov
inc
or
stos
push
mov
cmpsb
iret
ja
scas
xchg
adc
call
mov
sbb
ret
adc
fwait
and
pop
or
cmc
enter
xchg
pop
faddl
push
sub
int
ret
pop
sub
cmp
push
mov
shlb
call
test
sub
pusha
mov
aad
jmp
popf
rorl
cmp
aam
out
lods
movsb
inc
sub
mov
pusha
jle
das
add
test
mov
mov
sbbb
push
pop
hlt
xchg
repnz
in
inc
cmpsl
and
nop
push
mov
xlat
pop
dec
jmp
outsb
mov
sub
lds
add
push
xchg
inc
or
ret
push
jne
add
xchg
aad
push
mov
outsl
adc
adc
outsb
xchg
in
push
dec
stos
push
pop
cmp
ljmp
push
in
test
adcl
lods
hlt
adc
dec
sub
fisubs
inc
mov
adc
imul
mov
cltd
cmp
xor
notb
mov
in
jmp
dec
dec
mov
repz
inc
cmc
pop
stc
dec
xor
outsl
sub
dec
add
xchg
ja
sbb
sub
lods
xor
sub
sahf
mov
inc
inc
rcrb
in
push
cmpsl
imul
lods
bound
inc
fisubs
cmpb
or
arpl
sub
jae
loopne
jae
adcl
add
shll
cltd
aaa
adc
sub
xor
ret
mov
jae
push
loopne
hlt
outsl
loop
dec
cmp
out
loop
pusha
shlb
mov
xchg
mov
imul
mov
lods
aad
fldcw
sbb
ss
shl
loopne
lea
ror
pop
loop
fisttpll
jp
cmc
push
ds
fimull
stos
out
sbb
xlat
inc
push
mov
repnz
cmp
xchg
xor
xor
iret
xor
es
addr16
js
mov
pop
out
mov
pop
sub
repnz
sbb
sub
movsb
orl
push
or
and
mov
aas
push
dec
dec
xchg
xchg
std
icebp
pop
mov
pop
pop
sub
pop
lods
xchg
inc
cmp
mov
sub
sbb
push
xlat
sub
mov
pcmpgtb
jmp
sub
sub
scas
pop
or
into
pop
dec
push
lcall
mov
jmp
jb
add
xlat
dec
dec
loopne
pop
outsl
stos
add
cli
pop
push
xchg
mov
insb
int
push
xor
xchg
sbb
pop
push
imul
adc
jg
xor
jb
addr16
enter
stos
pop
and
cwtl
enter
mov
je
and
outsb
xchg
xor
push
aad
sarb
sub
cmpsl
dec
inc
sub
dec
sbb
jecxz
lret
movsb
dec
sbb
stos
fwait
ss
or
add
es
cli
inc
into
iret
daa
sti
mov
aad
addb
pop
add
ja
mov
in
outsl
or
mov
es
repz
xor
lret
xchg
popl
mov
cmp
add
pop
in
jle
sbb
nop
add
jne
inc
stos
ret
jbe
in
ss
and
push
mov
ret
sub
pop
or
pop
in
mov
xor
repnz
push
mov
adc
rclb
xor
shrl
pusha
mov
mov
pushf
popf
mov
jns
jp
mov
sbb
in
icebp
imulb
mov
push
movsb
jbe
cmc
pop
jmp
dec
cli
sahf
stos
mov
add
gs
xchg
stos
jae
scas
pop
dec
dec
lock
pop
in
pop
add
xchg
pop
pop
adc
jae
mov
fsubl
jmp
popl
pop
into
jmp
cmpl
sub
ljmp
imul
push
negl
and
mov
push
mov
mov
jmp
pop
repnz
push
divl
mov
test
mov
shrb
jne
hlt
mov
dec
push
or
push
push
leave
mov
inc
dec
faddl
insl
test
leave
movsb
ja
pop
in
push
shl
pop
test
xor
adc
pop
scas
mov
and
cmp
mov
out
iret
mov
jo
in
loop
cmp
scas
adc
mov
mov
jge
out
addr16
mov
mulb
call
jl
pop
cmp
insl
or
ss
cli
cmp
cmpsb
nop
and
int
rcrb
and
jns
inc
adc
push
fs
cwtl
mov
addr16
leave
dec
ljmp
pop
inc
jb
in
mov
lret
fsubs
das
aaa
mov
cmp
lods
in
shl
push
adc
jb
inc
mov
stos
adc
and
hlt
aad
inc
and
or
dec
enter
add
mov
fiaddl
jo
cmc
xchg
push
je
cmc
sbb
xchg
mov
loopne
mov
cwtl
fcmovnbe
lds
add
insb
push
and
and
mov
and
arpl
sbb
das
mov
dec
cmp
sbb
or
mov
sbb
loopne
cmp
and
sarl
gs
pop
push
xchg
xor
int3
stos
dec
popl
dec
mov
pop
mov
jb
xchg
pop
jmp
push
add
outsl
and
lods
cmc
jle
and
mov
sub
adc
sub
addr16
loopne
fsubl
jne
loope
insl
fdivrl
shlb
mov
and
jl
scas
repz
inc
and
mov
cmpsl
iret
push
popl
jb
movsb
fwait
cmp
xorb
push
sbb
into
xor
lahf
push
int3
cmpsb
push
pop
int3
mov
xchg
mov
nop
and
ljmp
jg
aas
pop
mov
xchg
outsb
mov
divps
sub
dec
dec
lahf
push
mov
imul
mull
addr16
push
das
add
xchg
jg
cmp
int3
loop
inc
push
ret
test
xor
push
pop
push
cmpsb
push
cmp
sub
dec
into
sbb
pushf
mov
rcl
cltd
lock
out
dec
loopne
cli
loopne
jb
or
xchg
ret
fildll
cmpsl
xchg
or
fs
cld
xor
in
rorl
scas
in
aad
jnp
push
movsb
int3
sarl
jae
pop
mov
sub
cmc
arpl
sbb
lock
pusha
stc
aas
cmpb
cli
push
cmp
xchg
pop
adc
test
add
mov
xor
pusha
add
mov
inc
dec
cmp
lcall
lock
add
or
jg
mov
pop
loop
insl
inc
out
jbe
addr16
stos
cmpb
iret
test
dec
insb
push
cmp
int3
imulb
push
imul
lods
sbb
mov
jb
mov
imul
add
cltd
sub
loop
xlat
ss
test
pop
mov
adc
jge
add
xor
pushf
aas
and
outsb
and
jns
jmp
mov
jne
dec
lock
lahf
pop
xchg
mov
mov
pop
mov
mov
or
sub
dec
inc
out
or
mov
aas
sbb
and
ret
pusha
cmc
call
mov
test
scas
push
inc
add
push
frstor
ja
insb
stc
fld
mov
lret
std
pop
xchg
inc
loopne
mov
sub
pop
jmp
jns
xchg
push
fstl
in
test
aam
pop
add
or
sub
dec
pop
jecxz
pop
test
into
adc
sbb
daa
in
mov
popa
in
or
pop
loopne
jmp
sbb
aam
orb
or
mov
xchg
aaa
aad
jge
jb
add
stos
or
cmc
sub
push
in
and
aas
into
adc
inc
stc
pop
jns
xor
xor
push
cwtl
cmpb
aas
test
fs
fwait
out
lahf
cld
jne
icebp
mov
test
cwtl
cmp
pop
mov
sahf
scas
inc
dec
popf
jge
jge
testl
dec
mov
aad
fcoml
bound
icebp
call
das
mov
sti
pusha
add
cmp
push
test
adc
sbb
out
pandn
inc
test
mov
mov
xlat
inc
lret
dec
shr
in
popa
loopne
enter
aaa
dec
push
dec
add
in
pushf
aam
movsb
lock
sbb
cmp
dec
fs
sub
sub
dec
dec
je
mov
adc
ds
cmp
pop
popa
add
xor
xchg
sbb
hlt
mov
int
mov
ss
mov
push
sub
cmp
mov
loop
push
leave
push
arpl
jmp
out
lock
cmpsl
jbe
fimull
pop
mov
repnz
cmpl
xor
daa
in
or
test
imul
or
mov
movsb
fstps
out
movsb
jns
nop
push
jb
jp
jecxz
roll
sbb
xchg
cmp
shrb
insl
mov
fmull
call
js
sbb
inc
cld
cmp
mov
sbb
jb
sbb
arpl
and
push
mov
dec
inc
das
adc
xchg
pushaw
dec
shrl
lret
jns
xor
hlt
cmp
jae
repnz
mov
and
fucomi
int3
rol
jbe
jns
jecxz
lea
inc
inc
mov
sbb
mov
mov
push
and
mov
sub
jecxz
sub
and
mov
lods
fidivl
roll
push
out
inc
scas
aas
pop
adc
stos
outsl
fdivrl
ja
stc
fmull
or
push
fsubrl
xor
mov
pop
inc
mov
mov
mov
daa
ret
out
imul
iret
repnz
repnz
jge
test
jmp
fistl
dec
mov
push
mov
xor
sub
fsubrl
js,pn
js
mov
xchg
mov
test
jle
cli
or
sti
sbb
xchg
mov
push
push
dec
mov
dec
mov
or
test
loopne
push
and
rcrb
push
subb
ret
push
adc
das
sbb
jle
gs
inc
fistl
fistpl
cmp
pop
loope
outsb
lock
mov
aam
cmp
mov
xor
inc
cmp
pusha
sbb
mov
cmc
xchg
cmp
adc
inc
out
cmp
aaa
subb
xchg
cs
and
jns
mov
push
add
mov
or
adc
cli
aad
mov
mov
mov
rep
dec
xor
push
xchg
mov
js
and
lahf
xchg
or
insl
mov
push
xor
out
ss
fildl
xchg
shl
sbb
xor
cmpsl
mov
ljmp
cs
add
fbld
dec
mov
xor
js
inc
xor
inc
or
dec
imul
sbb
ss
sbb
pop
dec
in
jmp
pop
jl
sbb
adc
popa
mov
popa
mov
lea
test
push
inc
loop
mov
cs
jmp
aam
mov
clc
out
rol
sub
dec
dec
mov
pop
mov
shll
adc
in
int3
ja
mov
mov
imulb
movsl
xchg
push
lcall
mov
xchg
loopne
xchg
jne
and
xchg
add
adc
fnsave
in
movsl
pop
dec
call
sbb
mov
roll
into
dec
push
mov
stos
jle
xchg
arpl
pop
xchg
scas
dec
sub
mov
or
sahf
repz
scas
lds
insl
outsb
scas
pop
mov
push
sbb
scas
lcall
pop
int3
push
pop
out
cmpsl
pop
gs
jne
xchg
out
pop
and
fiadds
xchg
sub
mov
mov
or
int
jne
ror
pop
xchg
fsubrs
mov
xchg
or
adc
pusha
add
cltd
stc
add
test
mov
mov
mov
sub
or
loopne
iret
or
dec
or
in
cmp
aas
out
push
pop
mov
cmp
dec
loop
jmp
out
into
aas
fsubr
push
push
loope
mov
adc
push
sahf
xchg
pop
mov
sub
insl
in
mov
mov
adc
lcall
jl
jl
sub
add
cmp
add
push
test
lret
ret
mov
addr16
mov
iret
and
test
xchg
jnp
jbe
lds
lret
dec
repnz
ljmp
lods
mov
lcall
jne
inc
mov
fcoml
es
push
ret
push
and
fdivs
push
fcmovnu
push
adc
in
push
lahf
xchg
lods
aaa
js
sti
popf
push
and
inc
in
push
ds
and
push
pop
cli
enter
in
inc
in
loop
shlb
pop
cmp
mov
lea
jge
mov
inc
push
mov
es
scas
cld
push
lea
cmp
jl
mov
ret
int
imul
and
or
inc
jmp
jbe
or
out
stos
dec
and
inc
and
imul
pushf
xchg
mov
cmp
mov
push
xor
pop
in
rclb
mov
or
push
aam
sti
popf
mov
dec
hlt
fistpll
add
rorl
dec
nop
shrb
cmp
aam
cmp
dec
outsb
cmpsb
movsb
and
imul
jns
mov
jg
popf
mov
mov
cs
nop
xchg
push
sarl
cmp
movsl
hlt
ja
cld
or
dec
sti
inc
nop
es
je
push
mov
subb
pop
je
sub
sub
pop
pop
fwait
mov
mov
in
mov
shr
aaa
inc
filds
cmpl
push
cwtl
pusha
insb
movsl
or
mov
adc
adc
les
inc
fwait
into
cwtl
imul
xchg
push
ljmp
ja
test
shll
jecxz
stc
mov
insl
shrl
fnstcw
lods
icebp
stos
mov
mov
lahf
sub
jg
add
add
movsl
ret
xor
mov
aam
gs
stc
and
inc
push
shlb
adc
mov
cmp
adc
xor
adc
movsl
shlb
pop
mov
shll
mov
dec
cmp
daa
sbb
mov
insb
int
sahf
cmp
sbb
dec
cmp
or
pop
fwait
xchg
into
jecxz
sbb
push
out
inc
aaa
and
mov
lahf
mov
add
jb
pop
gs
mov
push
movsl
pop
pop
xchg
jae
repz
ja
sbb
and
cld
in
fs
cmc
lods
mov
pop
sub
clc
adc
inc
out
fcmovne
jmp
cmc
sub
movsb
jmp
in
pop
pop
cmp
add
xchg
icebp
sub
ljmp
mov
adc
cmp
ret
xchg
in
pop
idiv
lret
pop
cmp
ljmp
add
mov
push
imul
cmp
mov
and
out
dec
insl
or
sahf
fsts
inc
mov
mov
sub
mov
fbstp
cmpl
hlt
xor
dec
in
mov
and
mov
cmp
nop
lods
adc
in
xor
std
adc
popa
cmpsl
ljmp
popa
clc
inc
mov
or
jno
js
lds
sarb
adc
ja
inc
test
mov
cmp
fwait
mov
mov
mov
xor
test
leave
sub
lock
lcall
lds
dec
sbb
jbe
jg
mov
stos
outsl
leave
dec
mov
aam
pop
mov
jb
sbb
fsts
mov
dec
and
mov
jmp
cmp
xchg
xchg
and
fsubr
push
sub
xchg
int
ja
cwtl
aam
aad
mov
inc
mov
adc
jge
and
xchg
test
iret
xor
pop
decl
dec
xor
pop
fcoml
icebp
popa
insl
push
subb
mov
fwait
or
into
mov
and
dec
mov
cs
cs
pop
xchg
call
mov
mov
inc
inc
je
fadds
xchg
xor
xchg
scas
inc
test
pop
fldenv
cmc
push
fidivl
pop
andb
into
movsb
xchg
mov
xchg
ljmp
mov
stc
pop
cmp
or
ret
and
int3
mov
mov
ficomps
lods
loope
mov
push
jae
ficoml
loopne
or
push
add
mov
xorl
icebp
push
out
pop
adc
push
dec
push
mov
pop
pop
lcall
mov
es
int3
mov
sub
xchg
jecxz
lods
ret
dec
fmul
sub
loope
mov
jp
pop
mov
mov
shlb
popa
add
dec
mov
cmc
adc
pop
lods
push
xor
xchg
roll
dec
loop
ret
fdivrl
icebp
xchg
stos
cmp
dec
and
bound
movsb
lods
cmp
mov
sub
in
add
mov
jmp
mov
pop
loop
adc
xchg
loopne
sub
fstps
or
imul
jg
push
cltd
adc
lret
cmp
add
ljmp
fdivrl
shlb
jb
sub
mov
inc
pop
dec
repnz
sarl
and
ret
pop
xchg
jle
or
mov
mov
sbb
xor
call
jmp
inc
add
mov
push
xchg
in
pop
sub
cmp
loope
pop
dec
jns
push
add
mov
xor
sahf
test
icebp
adc
cld
mov
adc
adc
xchg
cmp
jnp
mov
jne
mov
pop
xchg
mov
jg
lret
cmp
cmp
cmp
scas
mov
stos
lock
aas
bound
cmp
scas
add
js
push
or
jbe
adc
push
paddb
sbb
imulb
xchg
push
fsubs
aad
movsb
mov
imul
push
push
push
scas
add
pop
sarl
jecxz
cmp
cld
lahf
xchg
sub
sahf
stos
addl
jecxz
imul
lea
stos
fidivrs
push
adc
pop
out
and
out
call
push
ret
xchg
fisttpll
lods
push
adc
sbb
gs
cmp
loope
mov
insb
hlt
data16
pusha
or
in
push
adc
repz
aaa
test
negb
clc
add
ds
push
adc
cmp
jbe
notl
xor
cmc
lods
lret
push
jmp
jo
test
pusha
xor
sbb
inc
repz
mov
jl
roll
shl
dec
xor
in
sbb
popl
test
mov
hlt
adc
mov
add
test
out
scas
call
out
dec
jo
add
cltd
fnstsw
mov
mov
push
clc
or
push
mov
jnp
mov
jnp
into
jp
add
push
mov
roll
inc
rcrb
js
xor
sahf
lahf
adc
xor
jg
cmp
add
inc
push
cmp
out
decb
dec
cmp
jecxz
push
jle
xchg
insl
popa
iret
cmc
cmp
add
add
je
xor
hlt
daa
repnz
subl
repz
cmp
adc
sbb
leave
xor
call
and
cmp
fwait
sbb
sarl
adc
mov
daa
dec
rclb
in
cmp
mov
cmp
popf
ss
push
dec
or
dec
xchg
add
pop
sti
scas
adc
enter
adc
xchg
ja
into
std
fidivs
bound
push
mov
outsl
mov
jge
mov
aaa
in
sbb
loop
sub
jae
subl
popf
push
or
sbb
fwait
jno
xchg
inc
ret
cmp
xchg
jl
inc
cmp
lods
mov
xchg
jns
pop
adc
cltd
mov
insb
aaa
push
inc
adc
lods
mov
cmp
pusha
bound
je
add
xchg
or
addr16
subb
sbb
dec
scas
push
lock
push
rcl
mov
add
gs
or
pop
jo
sub
mov
shrb
fstpt
lahf
mull
xor
scas
sub
fists
call
ret
xchg
jecxz,pn
mov
enter
push
mov
mov
xchg
push
inc
lds
sqrtps
pop
mov
jbe
and
xchg
xchg
ret
lds
mov
sub
or
push
mov
and
mov
daa
daa
frstor
sti
popf
mov
mov
mov
push
movb
xor
js
xor
cmpsl
mov
sarb
out
jbe
jmp
je
jecxz
adc
jb
pusha
push
sub
mov
jo
cmp
dec
popf
fcmovne
push
sub
cmp
jb
lds
in
mov
movsl
inc
mov
andb
mov
pop
sbb
xchg
mov
psubsb
sub
mov
pop
pop
jmp
push
les
cli
fadds
shlb
inc
inc
pop
testl
push
dec
jge
mov
and
xor
cmp
adc
sbb
push
xchg
mov
out
pop
insb
mov
and
pop
cmp
adc
ret
movl
rorl
cwtl
dec
inc
dec
clc
int3
mov
leave
pop
sub
ret
xchg
add
and
js
cli
icebp
jne
stos
cmp
and
mov
call
jp
xchg
fwait
dec
ficompl
mov
inc
xor
sbb
popf
jg
and
or
and
loop
mov
fsubs
and
imul
in
xchg
add
sbb
lods
popa
inc
add
mov
push
dec
mov
push
cmp
cmp
das
add
cmc
xchg
lcall
aas
dec
add
cwtl
push
cmpl
push
fstl
enter
dec
scas
fstp
daa
xlat
pop
push
das
stos
xor
sbb
sbb
xchg
pusha
or
leave
mov
int
lahf
imul
mov
shl
cmpsb
and
enter
leave
and
mov
lock
imul
mov
xor
sahf
mov
das
sub
in
sub
repz
sbbl
lods
push
imul
mov
ret
int3
push
cmpsl
imul
sbb
push
cmp
push
xor
dec
stos
mov
sbb
jne
or
test
lock
dec
sahf
test
les
movsl
out
lods
into
mov
push
cmp
jmp
pop
insb
outsb
loop
pop
sub
xchg
or
ss
inc
cmp
cli
or
nop
sub
je
imul
fwait
sbb
out
lea
push
sub
push
push
subl
push
in
je
sbb
repnz
outsb
dec
je
mov
cmc
dec
test
xor
inc
or
adc
bound
sub
jmp
pop
xchg
lods
xchg
xor
out
ret
pop
add
imul
sub
sti
cli
add
mov
push
cli
stos
cmp
and
dec
mov
lods
pop
push
aaa
loope
mov
or
pop
out
icebp
push
dec
pop
fucomip
imul
mov
fisubrs
cmp
mov
roll
mov
lret
pop
xchg
sti
inc
cli
xor
out
icebp
adc
fsubrl
mov
add
pop
clc
into
and
dec
pop
lcall
fsubrl
mov
lea
pop
orb
dec
mov
push
xchg
data16
ja
inc
sbb
clc
xchg
pop
or
das
enter
lods
xlat
mov
int
xchg
push
push
mov
add
push
cld
push
in
loopne
dec
and
addb
jle
lcall
ss
xchg
xlat
aam
movsb
in
add
nop
xchg
out
mov
or
les
cwtl
out
lock
lret
and
cmp
jmp
pop
icebp
imul
mov
mov
push
xchg
idivl
push
out
jge
lds
imul
mov
test
lret
je
push
pop
and
inc
pusha
adc
xor
push
xchg
push
xor
call
je
cmpsl
in
sbb
dec
jl
imul
jbe
fwait
imulw
cmp
pop
clc
push
inc
movl
inc
addl
ss
lods
pop
repnz
or
lods
jl
data16
out
ds
inc
cs
es
jo
mov
je
sbb
push
jo
pushw
mov
movsl
cmp
loope
jmp
xor
mov
mov
movsb
leave
mov
shlb
push
adc
ds
pop
mov
xor
hlt
sub
sbb
xchg
in
gs
push
mov
mov
subl
xchg
mov
cmp
iret
inc
sbb
jl
inc
out
adc
es
jg
sub
push
xchg
fistl
push
pop
mov
xchg
and
out
ljmp
xchg
mov
xor
xorl
xor
mov
xchg
gs
and
loopne
xor
call
addr16
fxam
test
xlat
in
mov
jmp
out
nop
jne
std
out
and
fs
push
insb
popa
scas
jo
in
mov
xchg
test
ret
sbb
lret
push
leave
out
into
and
sbb
popf
mov
jge
jnp
adcb
dec
scas
mov
sub
mov
insb
icebp
mov
in
mov
and
jge
or
push
hlt
or
dec
jns
inc
outsb
mov
outsl
insb
fcmovu
lret
jmp
cmp
ficompl
push
push
push
inc
fistpl
addl
js
loope
arpl
push
jno
dec
mov
mov
push
lods
shr
or
sbb
lea
cmc
adc
pop
adc
mov
dec
xor
loope
mov
jmp
pop
mov
insl
or
js
inc
mov
xchg
cmc
imul
sbb
mov
inc
sbb
fucom
sti
dec
xor
cmp
inc
push
adc
add
test
xchg
jae
inc
leave
int
jl
dec
popa
testb
jle
pushf
lods
loop
and
dec
in
notl
subl
in
xchg
jle
and
icebp
aaa
xchg
dec
jbe
push
adc
testl
ret
rorl
hlt
sbb
cmp
mov
xchg
ret
pop
arpl
sbb
inc
jnp
hlt
ja
outsb
cmp
lock
mov
dec
sub
pop
ds
in
out
xlat
notb
dec
jnp
and
test
add
pushf
gs
mov
sbb
loop
adc
test
sub
out
je
mov
icebp
dec
mov
loope
mov
sub
fnstsw
adc
aad
out
and
test
adc
imul
cmp
scas
or
mov
jp
sbb
je
push
mov
xchg
fisubs
sub
sub
pushf
inc
xchg
cmp
push
fistpl
gs
test
es
in
dec
js
pop
insl
addps
pop
popa
pop
sbb
cwtl
outsb
pop
lcall
jg
ret
rcl
int3
sbb
jbe
lock
cmpsl
in
push
mov
pop
sbb
outsb
push
inc
sbb
jne
repz
pop
sbb
dec
lahf
test
pop
jp
jmp
mov
pop
popf
cli
lds
add
sub
or
mov
or
jge
adc
insl
sahf
cmp
js
nop
xlat
cmp
cmp
orl
sub
mov
roll
sbb
xchg
mov
pop
push
mov
adc
test
mov
add
insb
add
dec
addr16
xor
mov
outsl
arpl
popa
dec
fsubl
or
outsb
adc
jmp
mov
out
xor
cmc
dec
mov
mov
mov
mov
nop
nop
nop
arpl
stos
xor
inc
adc
clc
rorb
mov
mov
fs
or
pop
in
jno
pop
gs
pop
jo
movsl
popf
adc
and
jno
shlb
push
or
xchg
in
loope
jno
mov
ss
and
xor
xchg
and
shll
add
pop
dec
lods
adc
push
xor
icebp
push
les
scas
loopne
ficoml
mov
push
and
mov
pusha
push
mov
adc
adc
mov
outsb
je
push
mov
cmpps
cltd
inc
add
sbb
scas
mov
test
cwtl
cli
pop
lods
jmp
in
aad
push
push
addr16
mov
sbbl
jl
and
pop
sub
sahf
xor
mov
inc
mov
dec
call
mov
insl
jae
sub
lea
xchg
or
insl
mov
pop
ficomps
sti
add
and
mov
or
fistpll
adc
xchg
xchg
loope
mov
push
cmpsl
bound
mov
add
push
rorb
sub
pusha
scas
aam
cwtl
dec
roll
xor
cmpsl
mov
xchg
out
in
push
ret
sbb
push
loopne
jnp
std
in
insb
and
sar
mov
push
pop
or
inc
mov
cli
sbb
cmp
popa
jbe
adc
cmp
jmp
mov
push
xor
mov
enter
push
xchg
jl
add
dec
movsb
rcrl
loop
ljmp
lcall
mov
pop
pop
fmul
xor
loope
xchg
fnsave
xchg
xor
inc
js
inc
sbb
inc
pop
nop
inc
add
xor
add
pop
xchg
xor
pop
push
fs
jmp
pop
push
outsb
clc
push
or
sub
loopne
lods
add
popl
inc
test
repz
lea
xlat
jbe
into
bound
dec
mov
mov
lods
lcall
fdivl
mov
shrl
ss
int
jle
movsb
dec
push
pop
push
lahf
xchg
push
cltd
fs
mov
and
mov
loopne
out
cld
mov
and
lret
inc
rol
fiadds
mov
sub
pop
in
push
ror
add
inc
sub
xchg
pop
les
out
lret
fstpl
push
stos
mov
test
push
mov
shrb
cmp
sub
push
or
cltd
ss
movsl
push
pcmpeqw
jb
pusha
subl
xor
lcall
in
xchg
jmp
fdivrl
adc
lret
adc
bound
mov
pop
and
jge
test
and
aas
jge
sub
pop
and
enter
faddl
xor
aam
dec
js
stos
repnz
xchg
cmpsb
pushf
or
je
jb
xor
sub
cmpsb
cmp
rclb
dec
or
pop
and
insl
aaa
pop
pop
movsl
mov
fwait
push
out
clc
repnz
push
sbb
mov
cmpsl
mov
loop
fsub
in
push
add
fwait
mov
mov
sbb
dec
inc
iret
cmp
les
nop
mov
inc
int
idivl
shl
xorb
dec
gs
fucomp
sbb
pop
negb
cmp
int3
jnp
xor
xor
insl
and
sub
mov
cli
cmp
cmp
and
mov
rcrb
cmpsb
mov
mull
cmpsl
imul
lds
sbb
jns
sbb
dec
sub
testl
popa
fmulp
sub
ljmp
sub
cmp
xor
or
jb
mov
addr16
in
fiadds
test
pop
add
mov
mov
imul
popf
ljmp
loope
loope
popa
jg
inc
push
mov
pop
inc
cltd
popf
push
es
pop
jmp
in
or
dec
mov
aad
and
cmc
rorl
nop
or
jne
sbb
test
dec
cs
mov
repz
es
cmpsl
into
out
insb
xor
dec
pop
and
in
xlat
or
xor
mov
sbb
ds
dec
mov
orb
mov
je
js
stc
cwtl
and
lods
call
sbb
jno
xchg
cmpsb
push
cld
push
and
jns
jp
movsb
mov
sub
add
cmp
or
mov
add
jl
repnz
cwtl
push
and
cld
pop
pop
xor
jo
adc
icebp
dec
push
es
xor
push
or
adc
adc
arpl
jle
pop
in
push
add
push
daa
pop
mov
and
aas
push
popa
cld
pop
sahf
jmp
push
movsb
sub
fcomi
setl
push
dec
add
add
fldenv
cmp
enter
mov
insb
xchg
aaa
push
out
cmp
test
push
fs
jmp
mov
mov
jns
nop
mov
pop
xlat
in
mov
ss
xchg
xchg
in
pushf
dec
jge
ds
enter
lret
mov
xor
mov
outsb
sbb
dec
cmp
or
dec
sti
pop
inc
cmp
shrl
scas
xor
push
stc
push
lcallw
imul
push
inc
movsl
jge
ljmp
divb
call
loope
xchg
sub
adc
pop
lahf
fcmovne
mov
outsb
cld
loop
mov
push
push
test
dec
test
arpl
mov
add
mov
adc
bound
add
jmp
stos
mov
in
pop
in
std
dec
ret
int
subb
aas
xchg
pop
aad
and
cwtl
pop
in
cmp
adc
inc
dec
push
scas
aam
mov
jns
loop
imul
add
pop
xchg
push
jnp
shlb
repz
cli
in
test
pop
and
into
je
xor
mov
stos
cmpsb
pop
push
xchg
mov
pop
mov
repnz
mov
js
sbb
jb
loope
cltd
dec
data16
xchg
add
sub
test
mov
mov
mov
sbb
adc
aad
jae
jp
mov
repz
aaa
add
mull
pop
cltd
sub
inc
int
jl
inc
mov
xchg
inc
pop
dec
xchg
pop
test
imul
add
imul
test
std
lcall
dec
sbb
push
aaa
bound
push
sbb
pop
xchg
movsl
sub
jb
std
jmp
mov
cwtl
lea
push
les
sub
negl
js
data16
or
lods
fdiv
orl
fbstp
mov
push
ds
jmp
hlt
shll
sbb
dec
call
daa
mov
xor
push
inc
xchg
fs
adc
aad
and
popa
jmp
stos
cmp
sbb
orl
xchg
mov
sub
xor
dec
or
psubusw
sbb
or
cld
inc
inc
mov
sub
jp
ficomps
ds
push
fbld
push
xor
aad
stos
and
rorb
ds
rclb
push
adc
xlat
and
xchg
dec
test
les
jmp
bound
scas
or
jae
roll
stc
ljmp
ja
xchg
jge
data16
inc
jns
clc
cltd
add
and
and
loop
jnp
in
push
push
cs
pop
push
add
mov
fimuls
rorb
push
les
shlb
fldt
repz
stos
jle
sbb
cs
roll
fs
ret
fmul
sarl
pop
jae
cmpsb
data16
hlt
addr16
dec
idivb
add
and
cmpsb
and
cmpsl
cmpsl
pop
loopne
lds
mov
jmp
pop
loopne
xor
or
repz
pushf
out
inc
dec
jo
fstl
xor
ljmp
sarl
jle
and
jb
push
jle
jb
add
rorl
mov
cmp
stos
ret
orb
test
and
and
and
mov
sub
inc
xor
pop
out
mov
sarb
mov
xor
mov
mov
add
out
cmp
imul
sahf
add
test
xchg
cmp
cmp
mov
pop
jmp
mov
call
hlt
inc
lret
sahf
fnstsw
mov
aad
or
adc
cmp
adc
insb
xchg
loopne
sbb
and
mov
sbb
cwtl
jmp
xor
and
mov
mov
sub
jno
aam
test
inc
mov
sbb
pop
jle
bound
mov
cmc
jg
sbb
sbb
add
shlb
cmp
mov
out
push
ret
test
ja
add
setb
lea
mov
mov
mov
cmp
test
rcrl
push
xlat
or
int
shlb
mov
xchg
xchg
cld
add
lcall
mov
stos
fcoml
xchg
add
push
mov
fwait
in
call
push
sub
push
inc
sbb
pop
inc
in
adcb
int
popl
repnz
add
adc
cmp
inc
in
add
adc
inc
jmp
push
adc
or
inc
xor
xchg
mov
dec
mov
sub
cmp
mov
mov
outsb
xchg
sbb
subl
or
sahf
push
sub
mov
mulb
enter
jb
dec
inc
insb
lret
and
pop
ljmp
mov
fldl
mov
xchg
lret
mov
cli
inc
imull
cmp
lods
sbb
inc
mov
mov
add
adc
sub
push
jnp
insl
and
das
push
pop
pusha
daa
rorb
xor
and
out
ret
push
mov
mov
pop
setb
mov
sarb
fs
pop
into
movsl
inc
movsb
inc
xchg
mov
or
jmp
push
mov
les
dec
sbb
mov
pop
ret
daa
cld
rcrl
lea
sbb
xchg
shll
jno
sub
pop
add
cltd
das
sbb
outsb
sahf
mov
sub
out
push
arpl
inc
popf
jne
inc
pop
test
hlt
or
push
add
arpl
fsubr
jg
push
dec
cmp
jge
xor
fsts
ljmp
lds
cmpsl
movsl
lcall
and
insb
push
push
shlb
pusha
aam
dec
fcompl
pop
jne
loop
and
mov
sbb
pop
pop
ja
push
mov
xchg
or
cmp
pushf
clc
fisubs
jbe
mov
test
xchg
mov
mov
jmp
push
jmp
mov
mov
push
sbbl
mov
sbb
js
jne
es
popf
sbbl
popa
lcall
mov
add
xchg
gs
in
addr16
inc
idivb
bound
sub
stc
xlat
addl
iret
mov
adc
xchg
cmp
in
sub
hlt
in
lea
or
movsl
jg
out
add
fisubl
repnz
or
loopne
mov
ret
in
lret
idivb
push
sbb
scas
dec
xchg
pop
in
out
call
out
ss
dec
paddusb
inc
xlat
or
xchg
adc
imul
mov
aam
ds
or
dec
test
push
mov
fwait
jl
push
mov
xor
cmpsl
mov
pushf
leave
mov
inc
stc
std
leave
lock
xlat
add
sbb
in
adc
mov
add
dec
scas
sbb
decb
repnz
fsubr
repnz
es
xlat
adc
mov
add
lea
outsl
lods
insb
xor
cmp
test
pop
aaa
ret
or
jae
adc
push
cwtl
xchg
scas
dec
dec
or
push
lea
incb
xor
xor
fisubs
daa
out
push
pop
push
pop
push
imul
arpl
sbb
leave
xabort
js
xorb
lret
inc
mov
jge
mov
jne
add
imul
xlat
push
cmc
bound
cmp
mov
ds
fwait
xor
popa
cmc
inc
mov
icebp
mov
cld
mov
sbb
rolb
mov
fildll
lcall
popf
push
pop
loop
rcr
dec
ret
mov
cmp
fdivl
sbb
push
mov
push
sbb
dec
push
push
pop
fdivrs
inc
insl
popf
insl
push
cwtl
jns
dec
mov
cmp
mov
or
sub
incl
mov
insb
xor
data16
imul
mov
cmp
xor
addr16
mov
sub
test
dec
xlat
shl
mov
sub
push
dec
xchg
adc
lods
sti
and
ds
mov
hlt
fists
sarb
or
ficoms
sub
icebp
addl
inc
xchg
dec
addb
das
mov
test
shl
xchg
outsb
stos
sbb
call
in
adc
out
and
ss
push
jl
fstps
cmp
fs
and
data16
hlt
lcall
call
dec
jge
cmp
mov
or
push
cmp
lds
lods
shrl
cmp
scas
gs
and
xor
xor
pause
jae
xchg
repnz
clc
test
push
xchg
pop
dec
lcall
push
xchg
adc
movsl
push
out
cmp
ret
test
rcll
cli
push
out
jnp
test
insl
mov
lahf
mov
push
lods
sti
out
inc
movsl
jle
adc
mov
mov
sub
rcr
cmp
mov
push
jle
iret
ljmp
xchg
js
js
lock
js
enter
daa
shrb
popf
ja
mov
xchg
inc
in
inc
je
movsb
inc
popa
aad
sti
leave
xlat
adc
or
stos
int3
mov
je
lcall
fidivl
rcrb
insl
in
int3
jb
cmpsl
mov
ficompl
xor
xchg
outsl
pop
fmull
xchg
adc
rclb
lcall
addr16
and
xchg
js
in
fistps
lea
clc
jp
cmp
xor
std
jae
push
lods
and
stos
or
std
mov
decb
in
cmpsl
js
push
imul
mov
cmc
mov
inc
fidivl
push
push
arpl
jecxz
std
dec
adc
outsl
adc
ret
sub
add
xchg
gs
xchg
xor
scas
dec
jbe
or
jmp
mov
ds
adc
jbe
sub
sbb
xchg
push
lods
cltd
sub
aas
hlt
in
cmp
xor
movsl
in
ljmp
iret
push
pusha
aaa
pop
insl
pop
jbe
sbb
sarb
stc
mov
int3
sahf
xor
imul
stc
and
and
add
mov
pushf
xchg
dec
pop
lock
cmp
cmp
push
popa
iret
add
add
inc
and
pop
sub
lods
jae
dec
data16
or
int
mov
mov
jge
mov
clc
ret
mov
fildll
adc
roll
stc
jnp
aaa
cmp
mov
sub
mov
xorb
dec
out
adc
mov
test
ret
ret
cli
jo
dec
ds
mov
mov
mov
stc
iret
scas
iret
mov
pop
lods
insl
mov
fisttps
pop
push
fnstcw
or
lock
aas
cltd
hlt
xorl
mov
or
js
in
pushf
sub
push
mov
add
loopne
xchg
push
cmp
jle
mov
jl
stos
fistpl
hlt
push
fsubrl
pop
adc
pop
cmp
mov
cmpsb
divl
cmp
in
adcl
pop
xchg
data16
jno
mov
ds
movsl
sbb
mov
jo
stos
push
add
add
cmp
loop
loope
repnz
mov
and
xchg
cmp
cmp
js
ss
pop
mov
pop
les
jle
inc
bound
cmc
mov
outsb
pop
add
clc
mov
iret
jnp
inc
in
divl
xlat
mov
adc
adc
js
call
adc
jno
cmpsb
pushf
les
sti
sbb
scas
adc
int
push
cmp
insb
mov
lock
hlt
imul
jecxz
insb
ss
testb
repz
xor
loopne
cmp
pop
mulb
pop
mulb
pop
daa
jmp
mov
push
fucomip
cmp
mov
sbb
pop
gs
adc
clc
loop
call
push
sbb
clc
inc
jmp
add
enter
push
scas
jbe
xchg
xchg
and
cmp
rclb
lret
adc
fbld
sub
add
pop
pop
dec
sub
shrl
pop
pop
or
lods
inc
lret
mov
fwait
xor
div
mov
xor
and
lahf
or
mov
icebp
inc
idiv
xor
cmp
cs
out
mov
xor
mov
sbb
les
arpl
cmpsl
in
or
pop
jbe
jg
outsb
pop
lods
pusha
mov
jg
repnz
leave
add
cltd
das
adc
out
xor
cmpsl
jle
outsl
sbb
fsubrl
inc
xor
jae
inc
mov
xor
mov
rorl
cwtl
inc
and
lds
mov
xlat
pop
icebp
popf
scas
aas
mov
xchg
int
aad
orl
xchg
mov
sbb
mov
xchg
or
nop
out
enter
mov
xchg
sbb
pop
in
jecxz
and
xor
loop
mov
xchg
push
cmp
jg
les
and
out
cld
into
movsb
inc
ret
jns
and
lar
inc
call
loop
inc
lcall
push
pop
xchg
stos
cmp
cmp
ret
pop
movsl
add
mov
into
outsb
jne
adc
xchg
popf
fs
aad
fcomps
sub
aaa
adc
xchg
add
out
cmp
lahf
sbbl
cmp
out
push
les
push
dec
pop
xchg
cltd
jl
insb
aad
rclb
and
pop
int
mov
xchg
sub
test
pop
mov
in
add
dec
mov
sbb
jae
xchg
push
sub
dec
push
push
push
iret
adc
pop
fcmovb
stos
cmpsl
mov
push
js
inc
jne
je
loope
lahf
sarb
gs
mov
sahf
shl
mov
sub
loop
adc
push
cltd
test
jecxz
push
lods
xor
or
mov
loope
cmp
inc
mov
mov
scas
mov
pop
mov
jmp
mov
mov
ds
hlt
scas
pop
xchg
mov
sahf
insl
mov
add
pop
into
lods
push
cmp
aas
sbbl
mov
or
pusha
cs
mov
sbb
pop
push
push
addl
mov
and
test
lods
out
xchg
jbe
divb
daa
hlt
inc
xchg
adc
and
mov
cmc
lret
push
xchg
std
ja
push
adc
dec
in
mov
push
xor
loope
xor
mov
mov
js
sarb
hlt
arpl
add
loope
cli
gs
push
outsb
xchg
leave
dec
xor
jg
test
pop
sub
jecxz
cltd
or
fcompl
mov
mov
mov
mov
fisubrl
rolb
push
sub
jbe
push
mov
sub
jecxz
sbb
or
insl
mov
inc
sub
mov
shlb
dec
add
js
adc
fisttpll
out
mov
clc
inc
inc
inc
js
lock
adc
push
pop
loop
pop
cld
rorl
xor
call
sub
imul
inc
fwait
outsb
shll
and
lods
pop
fwait
xor
cmp
sbb
icebp
cmc
ror
pop
cmp
sbb
xor
push
adc
mov
cmp
xlat
sub
add
add
rclb
fs
push
jge
sub
rorb
add
fsubrs
push
adc
and
fcmovb
das
dec
mov
call
stc
mov
pop
mov
and
mov
cli
stos
mov
icebp
scas
cli
mov
push
jge
xchg
xchg
int3
mov
jmp
psraw
cmpsb
push
js
ja
jmp
jb
sub
sbb
or
rcrl
imul
ja
fs
xchg
lds
cmpsl
sbb
sbbb
fcomi
lcall
test
dec
int
jo
xchg
arpl
cmpsb
or
in
jle
inc
jmp
pop
jp
sbb
sbb
pop
lods
out
mov
scas
icebp
push
mov
add
xchg
divb
mov
push
cmp
adc
loop
inc
mov
push
sbb
adc
inc
out
cmpsl
mov
cmp
pop
mov
fidivrl
rcrb
dec
aas
stos
xlat
pop
cmc
cmp
clc
cmpsb
jno
and
mov
call
pop
repnz
daa
rcl
das
int
cltd
popa
sbb
adc
imul
mov
add
fwait
push
and
ds
inc
mov
pushf
sarl
sub
add
out
sbb
dec
cltd
fcompl
jns
mov
adc
fildl
fwait
mov
cmp
inc
ficoml
push
fldt
ljmp
fsubrp
das
add
push
mov
jnp
rol
je
mov
mov
scas
xchg
mov
movsb
adc
push
adc
lahf
jge
dec
mov
push
add
cmp
stos
imul
outsb
push
pop
clc
aam
outsb
jle
pop
cmp
lret
imul
imul
int
push
insb
test
lcall
cmp
aad
popa
push
add
mov
lods
fisttpl
dec
sub
stos
mov
test
pop
add
pop
test
adc
dec
jmp
mov
push
outsl
cli
dec
sbb
xor
negl
mov
insb
leave
cs
nop
add
add
cmpsl
aas
imul
mov
cmpsb
stc
aas
in
push
fdivs
pop
fildl
call
int
popf
cltd
and
jnp
sub
enter
scas
fucomip
pop
std
sti
cltd
xchg
dec
jbe
cmp
xor
outsl
outsl
sbb
or
cmp
xor
lds
sbb
xchg
cmp
mov
frstor
xchg
pop
cld
or
jo
xor
sub
mov
jecxz
loopne
inc
mov
jne
data16
xor
jecxz
and
add
rolb
loop
test
cmp
cmc
mov
sahf
xchg
jnp
cs
xlat
inc
inc
ds
xor
hlt
sarb
jae
lcall
loopne
lret
jns
mov
loope
or
xchg
movsb
push
cmpsl
mov
mov
loop
cwtl
xchg
mov
or
or
dec
sbb
push
test
cli
stc
enter
repz
fisubrs
call
xor
jno
adc
adc
ja
adc
movsl
mov
xorb
dec
daa
cmp
cmc
pop
jle
add
pop
pop
int3
pop
jl
loopne
cltd
testl
in
mov
lods
mov
das
test
stc
sbb
inc
imul
push
ss
mov
push
loope
shr
lds
jmp
cmp
aam
jnp
andb
push
mov
sub
xchg
jg
dec
movsw
fs
inc
adc
inc
fnstcw
lret
mov
test
push
loop
push
fstps
inc
and
dec
fimuls
and
mov
push
lods
push
iret
cmp
outsl
cmpl
xor
sub
movsl
rolb
arpl
or
out
xorps
cmp
jo
and
loop
test
divl
inc
push
push
imull
dec
xchg
adc
hlt
and
sbb
fisubl
aam
subb
adc
jae
mov
mov
mov
insb
add
ss
lcall
push
daa
das
pusha
int3
push
dec
aam
pop
stc
sbb
mov
jl
sbb
rclb
jo
out
push
jge
dec
inc
out
or
mov
fcmovnbe
aam
aad
add
fistpl
out
inc
movb
dec
jle
rol
mov
into
mov
rcl
sahf
aam
adc
in
jp
mov
push
sbb
addr16
nop
jo
rcll
mov
bswap
lcall
xchg
inc
ficoml
test
inc
lock
loopne
push
or
pop
add
inc
lret
sbb
sbb
mov
jle
popa
in
insb
pop
xlat
in
movaps
xchg
jnp
cmp
outsb
sub
leave
pop
aad
cmp
add
adc
clc
mov
inc
fdivr
sub
loop
pop
cmp
fldl
sub
mov
jle
push
daa
pop
stos
bound
adc
in
rolb
push
dec
lahf
jb
cmpsl
icebp
push
popa
ljmp
int
xchg
je
loopne
pop
cmpsb
push
fsubrl
inc
mov
xor
popf
jo
push
sahf
inc
xchg
sub
cmp
aaa
mov
les
jnp
add
mov
mov
lods
out
sbb
fsubp
mov
mov
ficompl
inc
ds
mov
lods
lret
mov
in
push
adc
sbb
cmp
add
outsl
outsl
lret
and
add
xchg
dec
out
pop
xor
es
shlb
fcomp
movsl
int
aad
inc
data16
repnz
sub
xor
push
cmp
pop
pop
lret
test
xorb
sub
or
jno
inc
and
lret
dec
ljmp
and
lods
xchg
cwtl
insl
call
sub
mov
clc
pop
into
fs
mov
mov
les
sbb
scas
fldenv
loope
adc
jle
mov
xchg
push
test
insb
imul
movsl
pushl
out
ljmp
xchg
and
mov
pop
into
push
cwtl
push
push
xchg
lods
sub
mov
xchg
sub
sbb
jle
jae
clc
xor
lds
lods
pop
push
push
dec
pop
mov
int3
or
cmp
fcompl
sub
xchg
inc
lods
sbb
mov
fidivrs
sti
scas
xor
inc
daa
mov
mov
aam
add
mov
addr16
dec
cmpsl
andb
push
fisubrs
mov
lahf
icebp
xchg
mov
loope
jo
or
pop
mov
mov
add
and
ja
push
imul
loop
fcoms
cmp
sti
fcom
cltd
in
mov
xor
jmp
ja
in
iret
test
mov
mov
cmp
jge
movsb
incl
sub
pop
ljmp
movsl
jmp
xor
mov
pop
mov
jns
scas
jbe
dec
sbb
ds
adc
lret
jmp
inc
cmc
mov
insl
push
mov
cld
or
rcrb
inc
inc
shll
sbb
xor
xor
mov
jecxz
cs
fidivl
adc
push
in
fsubl
adc
aaa
push
sbb
cli
cmp
xor
lretw
sub
pop
and
lea
mull
xor
or
mov
inc
sbb
mov
testl
mov
sub
sub
jle
cmp
and
jo
in
push
roll
movsb
lahf
jge
dec
lock
pusha
adc
and
and
dec
push
jmp
sbb
cmp
mov
sub
add
shrb
adc
repz
fsubrs
mov
rcrl
add
movq
mov
jb
jg
adc
jo
roll
sub
ret
mov
shrl
and
xor
sub
sbb
pop
xchg
popa
loop
mov
jno
jno
push
or
cli
std
scas
push
or
ljmp
hlt
pushf
cmpsb
repnz
fdivrs
lcall
add
in
sahf
pusha
imul
movsb
insb
outsl
push
scas
outsl
movsl
in
mov
cmp
paddusb
scas
cmpsb
or
adc
jnp
cmpb
or
jbe
call
push
sbb
stos
push
ret
idiv
scas
or
sbb
scas
aad
or
sbb
out
xchg
aaa
imul
mov
shl
inc
lods
lods
push
data16
mov
mov
or
cltd
lods
imul
imul
jo
mov
cmp
lock
notb
add
dec
mov
jnp
and
pop
nop
nop
andl
std
es
int
jb
cmp
lock
ret
or
and
in
push
cmc
cmp
test
pushf
adc
fistpl
push
mov
sbb
lods
adc
mov
inc
adc
aaa
cli
clc
mov
pop
stos
xchg
cmp
cmpsb
gs
pop
push
ret
stos
addr16
jl
jnp
test
dec
sub
cmp
add
jmp
mov
inc
clc
fidivrl
xchg
leave
cmp
ljmp
mov
fmull
nop
mov
cli
cwtl
and
mov
mov
sbb
nop
mov
add
sub
lds
daa
hlt
xor
or
jecxz
aad
mov
rorl
and
fisubrs
addb
aam
mov
or
xchg
es
lahf
nop
jmp
xor
fmulp
sbb
pushf
in
mov
xchg
lods
fwait
jne
loopne
xchg
pop
and
mov
xchg
xchg
push
les
cmp
test
mov
pop
out
dec
popf
pop
push
pop
and
pop
bnd
pushf
jecxz
sub
inc
adc
sahf
lods
inc
imulb
xchg
mov
push
movsb
pop
loope
xchg
sub
mov
stos
push
dec
and
adc
nop
add
pop
jns
out
jb
lret
popa
ror
jp
push
js
jle
jge
stos
inc
xchg
or
cmpsl
mov
mov
dec
push
add
inc
pop
dec
clc
xchg
inc
shlb
pop
les
inc
jecxz
sub
data16
mov
lods
adcl
mov
mov
dec
sbb
sbb
inc
cmc
iret
cmpsl
xchg
jne
jecxz
jnp
das
jns
jns
push
imul
aas
or
ret
cltd
xlat
pop
fisubl
inc
movsl
mov
dec
xor
and
jne
negb
sti
push
loope
ss
test
jo
in
cmp
loop
or
popa
jnp
mov
dec
jns
jo
mov
lcall
ljmp
mov
cmp
mov
incb
stc
jp
mov
cmp
mov
iret
insl
sub
jmp
enter
or
imul
and
mov
mov
xor
loopne
xorb
imulb
jae
mov
out
add
push
int3
jbe
pusha
xchg
outsb
jp
fdivl
fnsave
sbb
dec
sahf
push
rcrl
dec
fs
xchg
mov
cmp
mov
sbb
jmp
icebp
jae,pn
bound
xchg
clc
lea
lret
add
dec
xor
jle
les
out
aad
add
fstps
jbe
sbb
inc
dec
aad
clc
pop
jecxz
adc
mov
cld
arpl
xor
bound
loope
pop
inc
jbe
or
outsl
aad
ret
pushf
xchg
repz
lods
add
rolb
dec
adc
stos
repz
idiv
or
and
sub
xchg
out
mov
loope
dec
xchg
sbb
xor
or
cmp
mov
lods
sbb
out
cmpsb
mov
jle
js
push
sub
add
imul
sub
std
or
call
dec
or
xor
push
jle
xor
fdivr
dec
cmp
lret
imul
xor
iret
dec
xor
mov
rclb
xchg
sar
aas
rcrl
fimull
stos
bound
cmc
xor
dec
inc
inc
pop
adc
xchg
data16
and
in
add
fwait
xor
pop
pop
sti
mov
cmp
es
out
repz
fdivrl
sbb
daa
inc
iret
dec
and
loopne
pop
sbb
mov
test
cmp
call
ljmp
scas
nop
push
adc
mov
popf
mov
adc
mov
popa
sbb
jg
adc
pop
push
dec
cli
movsl
and
add
jp
lcall
pop
ss
sub
jle
mov
popa
call
jbe
in
jg
cmpsb
in
add
outsb
gs
adc
cmc
mov
fcmovnb
fucomi
xchg
mov
mov
inc
inc
xor
lret
lds
cmp
in
inc
roll
jno
shl
movsb
arpl
xchg
xchg
out
sbb
mov
xchg
fldt
cltd
adc
inc
inc
cmpsl
dec
jo
push
pop
lods
out
push
iret
dec
imul
jnp
pop
sti
jne
js
cltd
fsubr
js
outsb
and
outsl
add
aam
bound
or
inc
add
je
dec
mov
xchg
loopne
subb
adc
test
jl
mov
jae
stos
and
negb
bound
jns
mov
mov
in
in
aaa
in
call
aam
and
cmp
add
fsubrl
pop
push
add
xor
mov
inc
jg
pop
lds
lods
push
in
orl
add
and
test
flds
aam
add
rcrl
lcall
insl
mov
clc
xchg
insl
mov
add
and
add
cld
mov
dec
push
mov
adc
loop
xor
cmpsb
cmpsl
sbb
cwtl
and
icebp
test
lock
cwtl
adc
xor
mov
bound
sti
pop
ja
ja
xor
mov
ja
mov
enter
in
fwait
push
xor
out
fcmovbe
pop
jo
sbb
shrb
sarl
lea
subb
mov
xor
push
mov
stc
in
xor
iret
insb
and
push
in
ret
sbb
int3
mov
pop
ret
outsb
or
push
pushf
mov
add
outsb
fwait
cmpsb
xlat
pop
ret
int3
arpl
push
jp
aad
rclb
sti
cmc
mov
into
push
cmp
cmp
pushf
mov
addb
xor
cmp
imul
sbb
pusha
or
sbb
jmp
inc
mov
loopne
sub
cmpsl
pushl
ret
pushf
pop
cld
mov
insl
mov
stc
popf
adc
gs
insb
loope
mov
into
xor
out
adc
add
dec
cmp
shlb
lods
std
repz
mov
mov
pop
cld
pop
jmp
mov
or
out
push
imul
out
inc
mov
push
lea
sub
jb
lcall
stc
fistps
push
inc
stc
mov
add
xchg
or
and
jmp
lods
cmc
mov
jae
fcmovu
repnz
repnz
loop
mov
ficoml
and
cli
movsl
adc
mov
or
fcomps
jg
into
das
fwait
mov
jbe
fisubs
into
mov
rcr
jp
xor
xchg
xchg
mov
outsb
fstpt
pop
adc
scas
scas
insl
mov
ja
leave
imul
adc
loope
sub
xchg
icebp
sub
int3
mov
pop
mov
jg
push
out
push
cmp
aaa
ret
pop
in
out
sti
dec
pop
loope
pushf
insl
pushf
cmp
rcr
xlat
lea
push
fs
adc
xor
lods
inc
movsb
mov
mov
inc
outsl
shll
outsb
adc
cs
or
fs
cwtl
cmp
test
and
int
lahf
mov
insl
sbb
loopne
lea
inc
push
ds
je
sarl
push
shrb
mov
mov
cmp
mov
inc
fsts
cmp
inc
or
jg
fisubrs
mov
pop
pop
or
icebp
inc
jmp
push
inc
add
nop
lret
jg
or
movsb
xor
cmpsl
das
dec
fisubrs
push
pop
call
xor
xor
aam
pop
repz
mov
test
ds
xchg
and
xchg
iret
lret
mov
adc
out
fcmovnu
dec
adcl
mov
arpl
mov
sahf
adc
popl
ret
fdivr
jmp
insl
cmp
decl
pusha
pop
mov
xchg
and
or
cmp
repz
insl
inc
in
fcomps
popa
getsec
out
pop
mov
repz
inc
cmp
rcr
jl
rcrl
add
pushf
pusha
inc
cltd
push
shlb
lods
inc
stos
das
popf
int3
add
rclb
sub
sub
out
orl
push
test
or
mov
pushf
data16
lds
fistpl
movsb
je
xor
push
sub
je
jb
stos
aas
push
cltd
inc
sub
pop
lahf
pop
inc
shr
jle
xor
lret
sub
pop
and
fnstsw
mov
mov
inc
jno
repnz
sbb
xchg
and
xchg
stos
and
jge
push
mov
mov
or
inc
addl
pop
ret
nop
cld
rorl
cld
sbb
jne
xlat
sbb
mov
lcall
push
rorb
test
sub
iret
lock
stos
iret
inc
add
int3
mov
fisttps
add
inc
js
jle
pop
jmp
push
mov
add
dec
pop
mov
mov
mov
sub
loop
pop
jmp
dec
mov
pop
call
add
xchg
jp
pop
ljmp
jmp
cwtl
push
aas
pop
pop
mov
addr16
pop
mov
outsb
imul
mov
and
add
mov
ja
fs
cmp
bound
sti
sbbl
mov
xchg
mov
pop
dec
jmp
imul
dec
mov
push
adc
xor
cmp
jl
inc
push
jnp
jge
fwait
in
sbb
pop
xor
sarb
or
fdivp
out
push
sub
pop
xchg
fs
cltd
lcall
mov
pop
incb
stos
mov
stos
mov
push
dec
lret
add
jecxz
ret
adc
das
lcall
scas
outsb
or
mov
ret
cli
test
pop
aas
test
cmpsl
adc
push
pop
stos
mov
insb
sahf
and
mov
cltd
dec
adc
dec
cmp
cmp
bound
outsb
sbb
mov
jmp
jns
in
jp
sub
and
xor
adc
push
repz
daa
popa
cmpsl
and
out
aam
push
cmp
cmpsb
dec
aam
xchg
fdivrs
add
cmp
or
xchg
shll
dec
sahf
sbb
lret
outsb
jp
insb
add
mov
imul
or
mov
jbe
bound
sbb
and
add
aad
jp
jg
out
test
mov
xchg
int3
scas
sub
fs
lock
push
cld
addr16
xchg
repnz
dec
lret
or
or
or
adcb
test
add
or
mov
mov
test
add
sbb
insl
ss
mov
mov
ljmp
inc
xor
lcall
fidivrl
gs
xchg
inc
std
sbb
xchg
lcall
or
mov
ljmp
push
mov
xor
lds
jg
or
inc
pop
xor
fs
cmpsb
and
jb
je
xchg
jecxz
rcrb
faddl
and
lret
mov
jns
jb
int
in
arpl
jno
and
pop
je
mov
sub
clc
outsl
test
cmp
lret
sub
cmp
fcoms
js
sbb
xchg
hlt
rclb
pop
stos
and
jae
xchg
imul
pop
sbb
and
out
or
mov
orb
sarl
pusha
mov
add
js
in
fiadds
dec
fldcw
sbb
sbb
cmpsb
pop
push
and
lahf
adcb
mov
es
bound
roll
test
adc
loopne
out
es
and
ret
addl
xchg
sub
loope
inc
cld
mov
jae
ljmp
ja
data16
pushf
mov
dec
test
aam
clc
imul
mov
int3
push
movsb
sahf
pusha
test
cmpsb
pop
mov
and
cs
call
adc
dec
mov
rcr
cmp
jle
sub
decl
jg
jne
xchg
or
xchg
cmpsb
test
and
dec
pop
and
cltd
add
sti
int3
push
adc
cs
sub
or
outsl
jecxz
enter
nop
scas
add
ret
bound
push
lods
jl
test
mov
sub
pop
daa
and
xchg
pop
call
mov
mov
mov
stc
ret
mov
test
pusha
aad
sub
and
das
mov
jne
dec
adc
jnp
and
sti
mov
xchg
pop
dec
mov
insl
sub
jle
cwtl
loop
cmp
sahf
ds
add
aad
rorl
or
fs
in
xor
inc
cld
dec
out
in
inc
mov
cmp
test
sbb
lods
mov
or
mov
mov
hlt
insb
rclb
xchg
lods
ror
fst
mov
cs
adc
jae
push
lret
add
jno
lret
test
mov
cmp
jle
add
push
mov
std
test
outsb
push
ret
inc
call
mov
iret
nop
testl
mov
jno
push
or
xor
add
stos
jne
repnz
in
icebp
mov
adc
jl
cmp
int3
mov
repz
enter
scas
test
jmp
xorb
lret
adc
flds
jge
jmp
inc
add
rol
pop
mov
mov
and
and
cmpsl
fs
sub
stc
sbb
xchg
mov
lock
sbb
push
lea
rolb
cs
hlt
mov
out
and
subb
adc
jbe
mov
stos
movsb
out
pop
aaa
xlat
inc
outsb
nop
push
cli
push
js
test
add
mov
sbb
cmpsl
and
fsubrs
mov
push
into
cmc
lahf
push
shl
mov
push
mov
fistps
pop
cmp
sti
out
sub
and
out
mov
pop
das
jb
xchg
mov
push
div
mov
push
aaa
dec
add
enter
es
xor
push
inc
sub
adc
cmp
mov
ret
or
in
mov
mov
sub
jge
cmp
mov
fwait
sbb
cmp
pusha
movd
mov
mov
mov
add
imul
int
fnstenv
js
mov
sub
mov
add
es
inc
test
outsb
loopne
and
mov
jg
in
js
cmp
mov
pop
lret
bnd
lcall
ja
bnd
add
test
push
adc
sub
addr16
sbb
push
fcmovb
dec
push
xorb
sub
cmp
fsubrl
mov
lret
fdivrp
clc
stos
lahf
adc
and
in
mov
pop
loope
xchg
into
je
xchg
in
xor
incb
xchg
lds
fprem1
xchg
jno
movsb
jg
sbb
pop
xor
mov
dec
xchg
out
stos
cmp
mov
mov
push
jecxz
xor
inc
lahf
lock
xor
pop
jb
push
or
js
mov
roll
ficoms
stos
repz
in
mov
bound
pusha
push
xchg
cmp
sub
xor
dec
add
or
cmp
push
lods
sahf
xchg
mov
add
sub
xor
mov
inc
clc
pop
push
sub
rolb
mov
ja
sti
mov
adc
aam
test
stc
lock
sbb
add
xchg
sub
jl
popf
aam
js
dec
xor
stos
mov
cmp
inc
cwtl
out
cs
adc
and
pop
ja
xchg
add
jns
lret
test
stos
push
or
cmc
sub
mov
mov
lods
in
xchg
xchg
dec
mov
mov
shl
call
xor
nop
mov
push
xlat
inc
popa
out
stos
clc
fnstenv
fnstcw
ficompl
mov
out
inc
movntq
fs
nop
mov
es
and
ds
sub
xchg
mov
incb
call
mov
sarl
push
lret
fbstp
or
cli
jnp
cltd
xchg
popa
sub
jmp
movl
pop
cmp
xchg
imul
rorb
arpl
int3
sahf
fidivl
add
or
mov
push
aas
loope
cmpsl
cmc
push
adc
push
shl
xor
xlat
sbb
push
fcoms
sbb
inc
mov
inc
mov
data16
test
add
jno
insl
pop
push
subl
enter
hlt
int
mov
mov
adcl
sti
xchg
or
push
in
aam
adc
insb
mov
pop
adc
pop
enter
js
test
popf
fwait
add
sub
dec
inc
jo
stos
jo
sbb
dec
and
call
scas
popa
mov
sarl
popf
cmp
test
jg
adc
add
push
rorl
jl
mov
hlt
adc
pop
adc
popa
mov
mov
imul
stos
or
stos
fidivrs
sbb
push
dec
xchg
add
mov
push
push
ljmp
sub
popa
sbb
cltd
sub
pop
movsl
je
add
sub
pushf
mov
addr16
call
xor
jno
add
popf
dec
add
sbb
divl
push
lods
sbb
xor
les
out
or
cmc
pop
mov
lds
push
pop
test
insl
mov
lret
mov
sbb
orb
rorb
mov
mov
loope
popf
inc
jnp
inc
insb
adc
pop
test
push
in
fidivl
test
pushf
fsubrs
bound
out
mov
jp
test
inc
adc
ljmp
push
jbe
mov
sbb
push
pop
or
clc
popa
int3
stos
arpl
mov
fs
and
enter
imul
or
jl
push
sub
jne
mov
sbb
inc
cwtl
cmp
ret
push
pop
add
mov
scas
ret
dec
cmp
add
lock
xchg
xchg
scas
cmp
js
push
lds
adc
pop
lcall
sub
std
push
shll
dec
inc
xor
pusha
cwtl
mov
hlt
mov
push
movsl
pop
stos
mov
int
pop
push
sarl
test
js
push
in
pop
mov
rcl
xlat
cli
inc
add
loop
xor
cmpsb
ljmp
imul
lods
test
fsubr
cmpsl
jbe
fists
push
lds
push
out
loop
int3
xchg
sahf
pop
xchg
sub
out
jnp
push
aaa
sub
xchg
mov
jae
push
test
shrl
cmp
mov
cmp
aad
out
sbb
push
out
xlat
icebp
xor
lds
jnp
inc
cltd
stos
and
enter
sub
mov
js
mov
jge
jb
sbb
arpl
jno
push
andb
enter
push
hlt
adc
js
and
vmread
sbb
xchg
in
add
push
adcl
mov
imul
and
fimull
out
into
in
std
jns
fisubrs
xor
fs
cwtl
shr
or
adc
or
cmp
mov
mov
bnd
xchg
cmp
imul
fdivs
jle
cmc
mov
insb
xchg
cmp
xchg
insb
imul
push
out
cli
adc
stos
sti
mov
int3
inc
push
inc
pop
test
and
xchg
rclb
mov
lods
lds
cmp
aad
rcrl
leave
adc
mov
or
rcll
mov
push
loop
daa
xchg
adc
test
test
sbb
mov
sbb
outsl
xchg
inc
sub
sar
push
sub
inc
cwtl
and
inc
add
jl
divb
mov
push
mov
mov
lods
and
xor
lret
mov
pop
out
mov
test
xchg
dec
cli
insl
pop
shrb
pop
inc
testl
inc
out
xorb
ss
shlb
repz
aas
icebp
pop
lods
mov
rclb
pop
mov
push
mov
cli
mov
sub
dec
mov
daa
add
mov
lret
cmpsb
sub
pop
adc
add
nop
nop
adc
adc
cli
js
mov
in
mov
in
test
mov
or
push
int
cmp
outsl
sbb
hlt
inc
mov
test
repz
hlt
iret
ds
sbb
mov
ret
in
jo
mov
push
mov
outsl
mov
addr16
sbb
out
ja
mov
inc
frstor
nop
testb
call
mov
rcrl
std
scas
incb
adc
pop
mov
cltd
jmp
sub
lock
mov
xor
mov
mov
jnp
mov
lock
adc
cltd
lcall
lret
out
push
push
sub
outsb
push
int3
pop
xor
sub
dec
push
cmp
mov
adc
dec
sub
push
xchg
addr16
push
pushf
inc
stc
cmp
xor
sub
mov
pop
in
adc
push
push
fwait
adc
fcomps
dec
pop
xchg
dec
jecxz
cmp
pushf
je
jl
cltd
out
xor
push
dec
and
outsl
loope
xchg
stos
push
push
push
cli
test
popf
inc
dec
pop
or
sub
sub
inc
pop
pushf
xchg
inc
xor
jg
jo
sbb
xor
ret
xchg
lock
or
enter
add
ljmp
dec
sti
cmpb
fimull
arpl
cli
xchg
inc
dec
leave
add
lods
in
sub
xchg
fldl2e
mov
push
mov
repz
stos
out
in
push
dec
cmp
es
push
mov
ret
jo
xchg
ds
xchg
dec
inc
cmp
daa
cmpsb
sbbl
push
test
cli
icebp
test
je
call
dec
inc
push
pandn
popf
jl
mov
add
mov
test
sbb
cmp
sbb
xor
jecxz
aad
out
loope
iret
int
xor
dec
outsb
sbb
inc
xor
push
pop
call
push
mov
ret
jl
and
lahf
pop
mov
icebp
inc
les
dec
jae
inc
movsb
test
out
fcomps
cltd
adc
pusha
pop
xchg
std
mov
and
jo
adc
pop
outsb
out
fstpt
and
mov
aam
mov
mov
inc
pop
pop
add
push
sbb
add
cmp
andl
rcrb
inc
data16
push
subb
mov
loop,pn
mov
lahf
dec
sbb
dec
cltd
sti
sub
jp
adc
leave
ljmp
movsl
mov
clc
gs
inc
test
push
notw
mov
inc
int
int
scas
aaa
jae
adc
xor
fiadds
shlb
dec
addb
mov
dec
jne
mov
dec
jnp
clc
xor
pop
addl
clc
add
add
inc
jns
jb
jp
and
cmp
cwtl
in
push
rcrl
adc
pop
pop
sbb
dec
stos
xlat
icebp
xchg
cmp
push
pop
out
jge
jl
ja
push
mov
ds
sbb
push
aad
sub
mov
add
jl
iret
int
cmp
mov
repnz
aas
inc
dec
lret
mov
cmp
sbb
movb
jle
cmp
out
out
daa
cmp
add
push
popf
push
into
inc
nop
stos
fcmovu
loop
xor
jnp
mov
and
push
repnz
xchg
xchg
mov
mov
movsb
in
out
and
bound
xchg
cmp
test
orb
jg
xor
jp
sub
jge
loopne
mov
mov
loope
test
aas
sub
not
jmp
mov
dec
mov
outsb
pushf
cmpsl
pop
xor
sub
in
mov
test
je
mov
mov
cmp
data16
repnz
cmp
dec
sahf
je,pn
scas
cs
push
pop
jae
iret
andl
and
jmp
cli
imul
ss
daa
sarl
in
mov
mov
int3
shr
mov
sub
lea
dec
add
xchg
mov
lret
jecxz
and
jmp
das
jle
test
add
inc
mov
lods
iret
or
hlt
cmp
sbb
sahf
adc
decl
fiaddl
insb
or
xlat
adc
pop
inc
int
and
add
mov
jecxz
js
dec
cmp
add
mov
cld
iret
lock
cmp
or
inc
mov
icebp
sbb
mov
cwtl
and
movsl
das
or
sub
xchg
inc
into
mov
int
xor
icebp
push
sub
sbb
jg
push
mov
gs
out
mov
test
adc
icebp
loopne
lea
mov
orb
mov
mov
pop
call
inc
inc
jne
shll
add
outsb
cmpsl
jecxz
ffree
lods
lahf
and
xor
gs
rcrl
int3
mov
inc
mov
push
loop
icebp
insb
lahf
es
clc
cmp
jg
and
or
loopne
int
popa
push
push
insl
and
sbb
fldenv
and
pop
mov
nop
adc
pop
test
xor
lahf
mov
cs
push
dec
push
inc
in
mov
push
jb
dec
stc
in
xlat
xor
lods
lods
or
jne
sbb
mov
lret
subb
out
or
inc
ret
mov
outsl
cmp
xor
scas
inc
cmpsb
mov
mov
and
out
test
and
jl
inc
inc
pushf
sbb
and
data16
mov
sbb
and
add
aas
jb
sub
add
arpl
sub
mov
jne
fistpll
repz
adc
pop
cmc
ja
insl
mov
and
inc
test
out
cwtl
jp
push
fists
mov
out
inc
cld
cmp
cmp
insl
pop
jp
je
jbe
jl
arpl
mov
mov
ret
mov
mov
cli
xor
cmp
jns
and
push
enter
pushf
ret
sahf
stos
out
and
movsb
jmp
sti
fstpt
mov
repnz
mov
or
adcl
adc
push
push
push
in
lea
lds
add
ja
sub
fiadds
or
adc
jns
dec
out
pop
fnstcw
push
xor
cmp
jnp
fs
xor
and
dec
jo
xchg
push
sub
cmp
mov
lahf
sbb
pushf
dec
cld
dec
xchg
cs
mov
pop
jge
jge
mov
push
or
mov
xchg
cmpb
lods
fisubrl
push
adc
fs
cltd
jno
cmp
imulb
gs
test
pop
push
pushf
outsl
das
ss
pop
lock
inc
and
xlat
fidivrs
enter
in
loopne
or
lock
xor
mov
xchg
mov
sub
popa
dec
daa
movaps
sbb
into
outsl
lcall
bnd
fwait
mov
pop
or
dec
mov
push
xor
push
out
loop
or
push
mov
adc
dec
mov
mov
int3
es
out
push
sarb
add
call
icebp
aad
sub
jo
lahf
js
jl
lcall
sub
push
popf
jo
mov
rorl
push
xchg
cmp
jl
fidivs
mov
mov
and
aaa
ds
jecxz
dec
rcrl
push
ret
out
repz
cwtl
push
xchg
or
dec
sub
pusha
movsl
ja
pop
scas
mov
sbb
stos
push
icebp
int3
shl
int
mov
mov
and
into
or
pop
out
adc
or
cld
in
jge
mov
bound
and
dec
sbb
push
sbb
movl
dec
ja
xchg
jns
sbb
pop
sub
xchg
movsb
dec
xor
or
mov
push
or
lock
paddusw
jb
pop
aas
je
jno
mov
pop
lret
leave
xchg
jno
or
inc
jmp
jmp
mov
test
fabs
mov
xor
fisubs
mov
test
fs
aam
arpl
subl
pushw
mov
xchg
pop
mov
outsb
test
mov
fistpl
mov
adc
lds
lds
adc
dec
hlt
aam
and
movsb
or
icebp
or
dec
mov
int
dec
sbb
and
ja
loope
xor
inc
sbb
aam
push
aas
pop
pop
mov
sub
or
jo
adc
adc
mov
xor
dec
fisubl
adc
jp
in
xor
and
sub
mov
xchg
push
cmc
and
sub
push
mov
into
xchg
aam
add
or
stos
ljmp
cmp
jmp
xchg
cs
or
pop
inc
fimull
test
cltd
mov
jp
adc
cs
pop
mov
enter
dec
xchg
xlat
ss
add
mov
adc
jne
idivb
testl
rorb
mov
adc
test
sub
and
clc
push
mov
aam
clc
xchg
repz
ficompl
xchg
sub
movsl
xchg
insb
add
cmp
mov
jecxz
ret
push
jno
pop
dec
fisttpll
ljmp
sub
ret
cmp
pop
int
sub
cmp
popf
add
inc
in
xchg
mov
imul
lea
jae
add
loopne
es
add
testl
pop
arpl
sahf
pop
daa
insl
ret
adc
ds
fldl
fdivl
adc
xchg
ret
inc
enter
popa
js
push
mov
sarb
push
sbb
int
push
cmpsb
and
sub
das
fbld
jae
push
out
repnz
into
pop
jae
aas
vandps
sahf
and
cli
negb
pop
scas
notb
mov
adc
fiadds
or
mov
shlb
aam
scas
push
cmp
jb
rcrb
xchg
add
mov
rcl
push
dec
dec
fidivl
mov
inc
mov
jmp
push
inc
lahf
pop
dec
dec
data16
sbbb
bound
dec
and
fwait
js
test
dec
test
in
cwtl
shl
xchg
sub
das
jns
mov
fisubrs
dec
dec
pop
and
rclb
popf
mull
mov
push
jmp
in
fucomp
orb
daa
jmp
cmp
adc
loop
and
out
and
loop
outsb
popa
cmp
and
cmp
les
inc
jle
outsl
subb
rclb
push
mov
cltd
xchg
cld
nop
adc
sbb
mov
adc
lods
fcoml
push
mov
dec
xchg
xchg
push
clc
ljmp
rcr
add
pushf
out
add
movsb
ljmp
decb
dec
cmpsl
in
repz
inc
ljmp
jmp
rcrl
in
fs
jl
lcall
jo
mov
push
cld
adc
inc
jmp
roll
jb
sbb
mov
add
fwait
jae
loope
xor
pop
add
in
cmp
outsl
arpl
mov
mov
out
loopne
xor
adc
mov
push
inc
lods
mov
jecxz
mov
lret
pop
dec
dec
dec
adc
pop
mov
sti
sbb
cwtl
movb
dec
dec
sahf
mov
jo
pop
jmp
mov
sbb
jae
shll
pop
jnp
icebp
pop
mov
add
jge
sbb
in
mov
push
lcall
rorl
add
jb
dec
mov
mov
in
push
test
xchg
push
jge
fabs
jns
sub
xor
lods
push
movsbl
jae
and
filds
mov
fwait
rorb
push
lahf
outsl
jecxz
or
data16
notl
dec
rolb
fsubs
in
movsb
mov
popw
das
and
and
mov
sbb
sub
and
inc
loopne
cmp
imulb
pop
imul
fildl
jnp
sarb
dec
dec
jb
push
test
std
mov
push
sub
out
movsl
mov
jo
xchg
jnp
jno
iret
jbe
ret
imul
pop
cld
int
sbb
sbb
hlt
sbb
std
testb
cld
hlt
or
inc
xchg
mov
inc
stc
and
dec
xor
inc
test
aas
xchg
xchg
ljmp
data16
dec
cmp
inc
jp
pop
jmp
cmp
push
ja
or
aad
jle
mov
jle
adc
lea
mov
push
arpl
pop
or
jecxz
jo
je
shll
insb
xor
lods
dec
mov
movl
call
jp
sbb
mov
sbb
cwtl
pop
pop
adc
jge
test
sub
sti
sti
jge
cmp
mov
insl
push
loope
mov
and
cmc
cmpb
cwtl
insb
fcomps
jne
aas
ds
cmc
cmpsb
pop
stos
xor
test
or
aad
jnp
aaa
fsubrl
cltd
push
lret
mov
out
lea
or
add
mov
mov
mov
imul
sub
enter
arpl
movsl
sub
jns
cmp
jecxz
test
mov
ljmp
mov
ds
jae
xchg
in
mov
adc
inc
mov
xlat
and
cmp
test
sbb
cmp
pop
jb
out
inc
jne
jae
sar
lret
jle
adc
sub
mov
rolb
mov
loope
xor
dec
fucomip
mov
pop
icebp
pop
repnz
subl
in
fidivl
cmp
stos
push
sub
or
fstpt
int
test
jmpw
xchg
mov
mov
iret
sbb
out
and
jl
xor
xchg
int3
addr16
or
jnp
pop
add
add
je
fxam
daa
inc
cmp
in
js
xchg
jns
mov
cmp
aaa
out
mov
test
lods
mov
es
sub
push
cli
mov
nop
int
shll
cmp
xorb
mov
ret
imul
sub
psubq
cmp
and
mov
jnp,pn
jl
push
push
data16
lret
inc
pushf
adcb
movsb
pop
xchg
jl
rorl
subb
ror
pop
test
jb,pt
mov
mov
and
shrl
sbb
in
loope
aas
adc
fstpt
out
adc
add
dec
mov
mov
mov
add
hlt
xchg
inc
fwait
repz
xor
in
jl
sub
addr16
mov
jae
hlt
or
or
imul
nop
sbb
sbb
dec
rolb
dec
in
pop
cli
jp
xchg
daa
pop
and
mov
int3
mov
mov
mov
sbb
mov
mov
add
cmp
and
jae
cmc
bound
xchg
jns
bound
orl
mov
mov
and
inc
loop
xchg
cld
lods
mov
xchg
inc
and
inc
fwait
adc
imulb
adc
sub
mov
push
cmpsl
sbb
les
pushf
pop
aaa
imul
sub
popaw
inc
jg
lahf
or
mov
scas
fisttpll
loop
push
inc
sbb
aam
andb
jns
scas
pusha
xchg
push
imul
ret
push
adc
fwait
fs
or
adc
jg
iret
insb
cmpsl
and
lods
lock
push
js
dec
and
pop
scas
push
mov
inc
jp
pop
outsl
sub
mov
subb
lods
mov
lds
lret
nop
inc
fcmovnu
repnz
imul
in
arpl
xchg
imul
sbbl
dec
jmp
pop
out
xchg
adc
ret
push
out
jmp
mov
and
ffreep
test
in
mov
sar
lods
enter
or
inc
add
cmp
std
ret
push
mov
and
push
movsl
mov
sub
stc
leave
cmp
add
cltd
adc
bound
mov
or
pusha
imul
jg
negl
add
pop
mov
xor
lds
or
and
push
ret
loopew
loope
test
mov
call
dec
dec
dec
xchg
sub
clc
sub
cmp
mov
jne
out
lcall
add
dec
dec
cmp
out
aas
push
mov
and
jbe
cmpsb
leave
daa
xchg
movsb
rorl
into
cmp
cmp
and
jae
mov
xor
addl
sub
test
pop
fwait
mov
dec
mov
pop
dec
and
popa
ljmp
scas
inc
dec
push
inc
out
adc
inc
shll
sti
fisttps
push
ret
sbb
jb
push
xor
pop
sbb
dec
xor
add
mov
shlb
jecxz
stc
push
dec
cs
add
mov
inc
idiv
stos
nop
jmp
mov
pushf
pop
ja
lods
jp
jge
mov
sub
mov
test
push
test
mov
nop
shlb
mov
pusha
mov
rclb
fstps
xchg
xchg
insl
xchg
mov
test
jnp
jle
lret
push
jnp
cmp
push
fildl
mov
cmp
pop
xchg
and
sbb
iret
xchg
cmpsl
mov
iret
inc
popa
js
ja
cmc
in
mov
repnz
scas
jle
and
inc
push
xchg
mov
xchg
ljmp
jns
xchg
dec
ja
rcrl
shlb
stos
add
or
and
pop
mov
mov
and
cltd
inc
flds
mov
inc
sahf
roll
or
dec
jl
inc
les
dec
test
xchg
nop
enter
pop
out
xor
lods
in
std
dec
push
adc
std
lret
xor
popf
push
loope
or
sub
pop
sbb
push
mov
xchg
mov
out
rolb
mov
xchg
mov
lods
push
mov
jmp
xchg
cli
mov
fbstp
leave
jle
jo
lock
xchg
xor
insl
je
add
aam
xchg
add
push
xchg
sub
push
push
push
lret
push
fdivrl
imul
dec
jno
cmp
hlt
adc
icebp
sub
sti
insb
xchg
adc
cmp
popa
rcrb
jbe
xor
bound
inc
push
hlt
sbb
cli
pop
ret
daa
adc
ja
call
mov
scas
in
jg
pop
aam
mov
aaa
push
sahf
jge
negb
jp
inc
sbb
pop
dec
pusha
ret
adc
pop
pop
adc
xchg
mov
test
adc
movsl
popf
hlt
pop
hlt
shl
mul
xchg
mov
cltd
push
push
push
es
into
daa
xor
adc
test
xchg
mov
inc
imulb
ds
dec
pop
xchg
xor
adc
notb
jae
jo
pushf
pusha
out
cmp
out
lods
enter
lods
inc
fiaddl
aam
addb
cmp
pop
jecxz
and
fnstcw
push
jnp
inc
mov
sub
add
mov
mov
insl
jle
orl
jo
xor
nop
and
sahf
std
inc
shrl
out
lds
cmp
add
jne
inc
dec
enter
stos
and
or
or
cmp
sub
outsl
cmp
push
sbb
into
pushf
jne
or
mov
lods
out
cmp
stos
inc
lods
scas
pusha
xchg
pminub
add
jo
xchg
je
nop
mov
shll
addr16
sarl
imul
std
adc
inc
adc
cmp
cmpsb
nop
jnp
unpcklps
sbb
sub
shll
push
xor
or
arpl
inc
and
add
stc
test
stos
push
ror
test
inc
lret
mov
pop
xchg
lahf
test
inc
daa
lret
repz
in
aas
loopne
pop
add
mov
or
hlt
inc
fcmovu
sbb
idiv
lods
outsl
fdivrs
mov
jmp
aam
test
popa
shlb
xor
add
scas
incb
out
push
imul
in
repz
pop
sti
mov
sahf
subl
push
outsl
adc
or
mov
out
cwtl
adc
push
jnp
cltd
rcl
pop
inc
xor
adc
sbb
rcrl
pushf
or
daa
fists
repz
adc
icebp
inc
cltd
or
lds
sbb
adc
idivb
into
ljmp
dec
je
xchg
adc
in
pop
aam
mov
inc
inc
ficompl
scas
mov
push
or
push
sub
push
add
hlt
and
jecxz
fwait
sub
dec
out
or
sub
in
aad
scas
call
movsl
stos
pushf
data16
jl
idivl
addb
int3
pop
jae
into
outsb
movsl
ffree
lods
lods
cmpsl
mov
fcompl
jnp
cmpsl
and
pop
into
out
mov
in
cmp
sbb
int
dec
adc
jle
popa
les
int
out
outsb
pop
test
mov
mov
hlt
sbb
outsl
push
movsl
lret
lret
outsb
jle
xor
inc
or
flds
mov
mov
fildll
mov
xchg
stc
push
roll
icebp
dec
xchg
sub
adc
cmp
xorb
ds
sub
mov
clc
push
sbb
divps
fucom
pop
jo
shl
or
loope
push
sub
cmp
push
jb
sub
scas
or
mov
out
lods
xchg
ret
cmpsb
mov
andl
imul
xlat
sbb
es
pushf
push
cmp
outsb
jge
mov
jo
mov
jle
push
shll
fnstcw
stos
andb
ret
pop
adc
or
stc
cmp
imul
xchg
popa
mov
inc
addb
nop
and
xchg
sbb
jle
mov
pop
cmp
leave
cmp
and
ret
lods
leave
jg
lret
xor
es
in
int
adc
fcompl
dec
pop
aas
sub
mov
ret
pop
pop
fsubrs
jno
cltd
mov
adc
xchg
cmp
dec
fwait
mov
imul
pop
add
cwtl
fxch
lret
fmuls
xchg
loope
loop
cld
leave
dec
mov
js
sub
popf
or
cltd
mov
and
mov
sub
mov
adc
ret
xchg
mov
add
dec
loopne
xchg
lods
nop
fstpl
cmpsb
inc
data16
es
lret
mov
push
xchg
or
test
icebp
enter
and
dec
ss
xor
outsb
mov
pop
pushf
mov
xchg
pop
or
push
mov
out
xchg
sub
mov
adc
mov
dec
mov
jo
lods
mov
insl
xchg
stos
mov
cwtl
lret
sbb
and
inc
and
cmpsb
cmp
sbb
roll
and
xchg
xor
pop
dec
xchg
stos
or
mov
xor
xor
orb
xor
mov
in
loope
cmc
lock
lds
mov
aam
js
pop
jg
cmpsl
jl
fsubr
enter
cmpb
stos
adc
pop
lret
outsl
pop
mov
add
xchg
mov
les
nop
push
jmp
and
xor
loop
ljmp
jae
xor
xor
sub
xor
fs
mov
fisubs
xor
mov
sbb
dec
icebp
leave
lods
scas
popa
mov
fidivl
fists
imul
lret
lock
push
or
sub
xchg
mov
ficomps
cld
mov
sub
int3
sti
lods
mov
and
loope
outsl
and
or
mov
dec
jne
mov
movb
cmc
rclb
insb
xor
xor
dec
push
test
in
lcall
sub
inc
fwait
mov
clc
dec
push
mov
jns
mov
test
test
jecxz
into
xchg
cmp
push
test
nop
xchg
ret
xchg
adc
scas
cld
js
cmpsb
cmp
mov
inc
jbe
shrb
jbe
stc
sub
mov
dec
cmpsb
sbb
les
xor
ret
ret
lods
in
adc
popa
mov
cmp
push
lods
inc
fcomps
jl
push
int
cmc
xchg
aad
iret
pop
pop
mov
pop
sub
mov
lret
pop
pop
movsb
pop
imulb
mov
adc
jns
pop
jb
jno
loop
mov
or
and
adc
out
xor
nop
pop
sti
cmc
mov
push
imul
mov
sub
mov
or
lock
jl
cs
inc
fs
add
aad
psrld
imul
dec
ret
jae
hlt
nop
xor
test
movsb
xchg
jbe
mov
fs
inc
or
les
dec
outsb
fs
adc
insl
data16
in
cwtl
adc
xchg
mov
iret
sbb
imulb
daa
jnp
decb
das
int3
lea
sub
cmp
and
jge
push
int3
jp
xchg
pop
mov
call
int
inc
pop
dec
lea
push
inc
mov
fsubl
or
ss
ds
push
insb
fadds
pop
ret
roll
sub
mov
out
push
fstps
adcb
imul
pop
xorb
icebp
mov
adc
hlt
mov
clc
cmp
stc
and
mov
sbb
int
cmc
out
add
cmp
sbbl
shlb
or
push
sbb
fsubr
dec
andl
std
call
lods
mov
push
xchg
xchg
adc
mov
rclb
stos
push
mulb
pop
cmpsl
xchg
sti
es
jecxz
mov
mov
inc
sub
cmpsl
testb
mov
sub
daa
or
fisubl
push
push
mov
or
jnp
pop
cmp
jno
mov
pop
fwait
mov
loope
int3
mov
lea
fwait
outsb
fstpt
pusha
cmc
push
mov
out
push
movsl
jae
mov
dec
cltd
push
es
adc
sbb
and
cltd
leave
mov
cmpsb
movsl
mov
out
xchg
xor
mov
loop
push
sbb
jge
pop
gs
mov
jecxz
in
pop
pop
jmp
push
sub
imul
xor
lcall
ret
loopne
shlb
stos
aad
dec
loopne
or
cmc
adc
es
jbe
or
pop
iret
inc
vhsubpd
jns
jmp
xor
push
testb
out
or
and
pop
jne
push
aam
adc
xlat
xor
mov
ror
adc
in
add
loope
sbb
fs
xchg
std
cmpsb
out
jbe
ret
pop
loop
aad
lsl
test
xchg
in
andps
leave
jge
pop
push
lods
inc
and
lods
scas
cmpsl
cmp
rcr
xor
inc
sbb
mov
and
shll
rcrl
pop
pop
mov
fldenv
fs
xchg
aad
mov
push
sub
cld
push
bound
and
iret
ja
test
ret
hlt
lds
insl
pop
stos
cs
jbe
pusha
daa
lods
jle
dec
adc
mov
int3
mov
jne
inc
sar
jecxz
pop
mov
ret
sahf
movsb
mov
cmp
mov
cld
fidivl
cs
jns
jo
pusha
addr16
rcll
xchg
jne
or
pop
pop
cli
scas
xor
cltd
test
mov
loope
icebp
repz
mov
pusha
xor
pop
andl
sbb
push
fcmovnu
ret
sahf
xchg
test
scas
push
sub
xor
fsubs
cmp
loopne
dec
xchg
iret
lods
pop
xor
arpl
mov
aad
in
pop
fbld
dec
fcoms
mov
js
pushf
xor
js
insb
dec
fmuls
test
push
add
fldcw
movsb
and
das
lock
ficoms
pop
cmpsb
adc
adc
movsb
bound
pop
mov
fistps
clc
xor
in
out
js,pt
dec
mov
jns
inc
mov
jg
shrl
jle
dec
mov
test
dec
fs
mov
jecxz
testl
sbb
mov
mov
xchg
out
or
lahf
cmp
dec
adc
js
aad
dec
mov
icebp
mov
sub
xor
dec
repnz
dec
jmp
adc
test
imul
lock
mov
sub
push
dec
clc
xor
jno
fidivl
sbb
mov
mov
or
jecxz
pop
pop
push
mov
xchg
mov
mov
pop
sub
inc
repz
jge
imul
jmp
xor
imul
xchg
push
int3
orb
jnp
jno
inc
mov
xor
mov
es
js
outsl
sbb
test
adc
cmp
inc
xchg
ljmp
push
aad
pusha
lahf
std
pop
or
cmp
xchg
stc
scas
scas
bound
push
pop
pop
ret
push
aam
mov
xorl
adc
sub
add
gs
stos
addr16
les
xor
pop
add
js
push
jp
push
jge
push
mov
out
mov
add
pop
insl
push
sub
add
stos
test
and
stc
les
push
cld
ljmp
add
mov
arpl
pop
fildll
push
xor
jg
gs
adc
ja
add
rol
leave
sbb
ds
test
imul
sbb
call
mov
pop
cmp
mov
or
inc
das
mov
jg
inc
insb
xchg
mov
jbe
fdivs
mov
fsubs
dec
testb
int3
adc
jmp
ficompl
and
es
scas
ss
mov
iret
pop
test
stos
push
das
or
scas
adc
sbb
and
in
out
or
xchg
or
lea
xor
mov
push
dec
fildl
aad
scas
iret
inc
aaa
adc
ljmp
aad
jo
daa
rcr
test
jecxz
add
mov
sbb
outsl
rcll
enter
out
cmpsb
mov
inc
mov
cmpsb
cmpsb
mov
mov
mov
ds
xchg
xchg
or
fstl
cmp
pop
sub
xor
mov
cmpsb
and
mov
mov
jg
inc
xor
sub
loopne
arpl
lahf
adc
rcrb
xchg
xor
aad
mov
loopne
and
xor
mov
inc
enter
adc
dec
dec
dec
jae
push
xor
dec
outsl
lret
rcrb
adc
aad
mov
sbb
mov
loop
jmp
sbb
jnp
pop
ficomps
inc
xor
xor
push
cs
shlb
lods
jle
call
leave
lret
fsubs
pop
or
lods
popf
sub
push
sti
aaa
cmp
mov
popa
pop
fstpt
daa
dec
cmpsb
inc
inc
cmp
push
push
popl
mov
dec
lret
lahf
adc
outsl
dec
loop
or
sub
out
lds
out
hlt
inc
adc
and
imul
dec
xchg
mov
sti
fsubrl
adc
pop
loope
jne
jge
cmp
pop
addb
mov
jge
int
lret
loopne
jb
xor
xor
mov
adc
adc
jmp
out
sbb
or
arpl
punpckldq
popf
add
adc
ret
jp
fsincos
xchg
mov
nop
pop
test
test
in
cmp
fildl
nop
int3
and
pop
xor
mov
inc
bound
ror
pop
sahf
sub
sub
rclb
push
push
cmp
cmp
fbld
flds
daa
lock
or
mov
scas
dec
pop
and
jae
and
sar
mov
lcall
jne
dec
fsubrl
imul
fnstenv
mov
jg
stc
or
scas
subb
xchg
loop
fmull
pop
sbb
pushf
xor
cltd
aam
xor
loopne
lcall
and
cmp
sub
pop
out
mov
xchg
mov
mov
rolb
sub
jns
mov
push
mov
inc
jecxz
inc
lods
inc
das
and
scas
push
lret
push
mov
subb
mov
ljmp
inc
cld
mov
mov
out
inc
mov
push
call
rep
mov
stos
out
nop
and
and
push
adcl
push
aaa
push
mov
add
jns
test
mov
fstpl
pop
test
aam
fdivr
fadd
push
mov
popa
lods
cli
pop
pop
fwait
pop
test
adc
mov
xchg
jbe
imul
out
mov
add
mov
push
fcomip
add
fsub
mov
xor
or
loop
lods
pop
mov
bound
ds
and
scas
stc
addr16
and
shll
imul
test
enterw
inc
xchg
push
imul
ljmp
cld
dec
pop
repnz
rorb
or
cmc
jns
cli
repz
dec
ss
jbe
xchg
fadd
cltd
dec
jmp
sbb
fists
xor
mov
pushf
add
test
mov
jbe
jmp
imul
in
mov
adc
loope
loope
pop
call
mov
add
add
sub
inc
pop
mov
adc
popf
test
jge
lds
loope
push
fsubl
pop
or
leave
lods
dec
repnz
add
adc
test
xor
movsb
inc
add
mov
pop
mov
hlt
stos
sub
scas
stos
mov
in
xchg
repnz
sbb
es
push
lret
jmp
mov
push
mov
in
adc
test
lret
js
enter
stc
das
sbb
mov
nop
push
iret
push
cmp
mov
ficoms
push
jnp
pop
mov
sti
mov
ljmp
mov
jbe
sbb
shll
js
out
lret
add
rcl
enter
shrl
jb
and
jp
xchg
lods
inc
je
cs
sbb
lock
int3
movsb
scas
jns
insb
jno
leave
add
bnd
pop
stc
pop
or
fsubl
int
subl
sbb
add
push
jl
cmp
test
pop
mov
fucomip
adc
fs
gs
cmp
or
scas
jb
icebp
dec
pop
sahf
mov
adc
aaa
hlt
push
mov
inc
or
call
std
xchg
aas
jg
in
mov
mov
add
push
jnp
imul
cmp
push
mov
enter
jns
dec
mov
jecxz
add
sbb
or
xchg
int3
inc
sub
loope
cmpsb
popf
mov
ds
popf
pop
fldcw
sbb
and
shll
mov
cld
fdivl
add
out
icebp
xchg
mov
mov
in
xchg
aas
dec
sbb
sbb
cmpsb
jp
push
loop
cmpsl
pop
mov
ret
add
cs
cltd
stos
imul
sub
pop
mov
outsl
cs
push
ja
push
push
in
mov
fistpl
and
daa
mov
dec
push
push
inc
sub
adc
shll
jge
test
lods
mov
or
pusha
dec
in
cmp
test
jge
popf
sbb
pop
stc
mov
les
pop
adc
test
cwtl
pop
pop
addb
xor
imul
es
bt
fisubrl
dec
mov
scas
mov
test
xchg
ja
add
test
es
mov
add
insl
std
add
sub
cs
add
out
int
or
sub
outsl
in
imul
dec
mov
jg
inc
cmp
push
mov
leave
jg
push
int3
add
cld
cmpsl
and
in
aaa
xorl
cmpsl
mov
dec
cmpl
push
movl
inc
cmp
orl
bound
sub
pop
shrb
fs
fsubr
push
push
pop
mov
mov
jmp
xchg
rcll
add
pop
imul
and
cmpsb
mov
adc
xchg
pop
subb
cmp
out
add
jmp
mov
inc
push
movsb
xchg
fs
gs
or
push
adc
in
ss
lods
mov
in
mov
xor
sub
call
jle
hlt
push
bound
dec
xor
xor
sub
push
mov
data16
adc
jl
rcrl
iret
lahf
mov
cmpsb
cmp
aaa
pop
pop
adc
pop
arpl
push
shr
adc
in
gs
jno
cmp
aad
push
dec
and
adc
lret
sub
test
cmp
icebp
scas
ss
xchg
jns
add
cmpsb
adc
aam
mov
aam
adc
enter
loop
lds
and
rcll
add
stos
rcrb
cmpsb
imul
cmc
xor
out
fcom
xor
inc
jmp
jno
ja
sbb
mov
outsl
inc
pop
stc
or
pushf
sahf
inc
sub
adc
and
mov
add
mov
fwait
sbb
push
je
or
loope
into
jns
inc
adc
sub
nop
lcall
test
cmp
test
loopne
test
pop
jg
xor
js
fnstsw
xchg
adc
dec
insb
filds
jb
repnz
push
mov
adc
push
fidivs
sbb
mov
loope
rclb
mov
mov
and
push
mov
xor
sub
cmpsb
movsl
popf
adc
sahf
enter
popa
mov
pushf
push
ja
daa
xchg
aaa
test
jg
xchg
sub
mov
fstpl
sbb
aaa
ret
in
sub
imul
add
outsl
sbb
jnp
xchg
outsb
movsb
dec
mov
fbld
or
push
inc
out
mov
mov
push
shl
cltd
xchg
xchg
xchg
data16
data16
sub
sbb
test
mov
adc
mov
jl
mov
out
aad
scas
pop
ret
mov
mov
inc
cmp
push
nop
es
ja
pop
cs
mov
pop
decl
jge
js
outsl
hlt
das
add
popf
mov
cmp
in
out
sti
scas
ja
adcb
cmp
jae
dec
aam
mov
dec
clc
mov
mov
or
test
pop
imul
scas
inc
mov
mov
jg
sub
adc
imul
arpl
and
cmp
sub
leave
jge
test
cmp
aam
inc
mov
push
dec
pop
pop
fdivl
sbb
iret
test
sbb
and
add
lret
repz
adc
test
jno
push
outsb
push
mov
pushf
loope
push
xchg
hlt
mov
and
mov
ss
xor
cmp
jmp
scas
fmul
jns
jo
in
cmc
push
xor
out
xchg
sbb
pusha
ret
jns,pn
pop
ljmp
jmp
cmp
mov
adc
and
daa
fwait
stos
add
cmc
popa
xlat
mov
mov
xchg
clts
xchg
enter
pop
xchg
lret
mov
push
xor
mov
lret
shrb
and
push
mov
rorl
and
icebp
adc
mov
std
hlt
fwait
cmp
movsl
sub
lcall
mov
lea
pop
movsb
xor
push
add
fdivp
insl
xchg
jl
xlat
movsb
mov
cmpsb
mov
push
xchg
sarl
lock
popf
mov
out
jp
es
aad
and
dec
jne
inc
enter
pop
fcoml
mov
mov
ss
stc
cmpl
mov
push
xchg
add
mov
pop
dec
pushf
scas
jle
sti
push
out
hlt
in
inc
out
sahf
mov
pop
outsb
mov
in
stos
cmp
stos
sarl
jbe
xor
xor
aaa
gs
pop
leave
arpl
cld
stos
push
in
xchg
test
testb
shr
inc
cli
imul
mov
xchg
lcall
mov
cmp
cli
pop
xor
scas
mov
xchg
fdivrs
pushf
inc
mov
ljmp
dec
lods
or
jle
js
sti
mov
icebp
or
xchg
jmp
mov
rcll
fs
inc
mov
xor
inc
adc
push
bound
pop
or
push
clc
loope
inc
rep
push
xchg
mov
leave
jecxz
xor
dec
adc
imul
dec
mov
andb
es
cli
cmpsl
or
and
sbb
lret
lds
adc
lea
test
dec
sbb
mov
xchg
sbb
fidivrl
rolb
pop
ja
adcl
and
hlt
clc
mov
xor
pop
pop
shr
mov
fistps
lahf
adc
in
mov
inc
out
data16
pop
int
mov
stos
lds
xchg
test
test
test
testb
jg
mov
cmp
pop
mov
adc
sbb
cmp
lret
int
mov
int3
xor
or
jmp
fcompl
imul
cmpsl
sbbb
pop
cmpsl
xor
in
and
int
or
scas
ljmp
pushf
mov
aaa
dec
lods
cltd
push
cmp
test
cwtl
test
popf
pop
nop
push
je
xchg
cltd
lods
loop
movsb
mov
repz
and
xor
fidivs
adc
nop
icebp
iret
add
sub
jg
jae
cltd
daa
sbb
hlt
enter
das
in
aam
mov
pusha
xchg
and
sub
inc
add
test
imul
sub
lcall
fdivs
outsw
push
inc
inc
shl
sarl
movsl
and
in
xlat
ficomps
lea
adc
xchg
and
xor
fbstp
shrb
xchg
loopne
les
test
lret
inc
dec
dec
iret
lods
push
inc
mov
cmp
adc
into
outsl
or
pop
mov
adc
lock
outsl
sub
loop
or
sub
lret
push
pop
cmpsl
pusha
ret
movsb
ret
rclb
mov
imul
adc
and
lret
loopne
push
adc
ficompl
push
xchg
rcrb
xchg
emms
lock
mov
mov
xchg
stc
movsl
arpl
roll
mov
in
out
xchg
in
push
fxch
clc
lret
idivb
sbb
in
dec
mov
mov
xor
jmp
gs
mov
xchg
pop
adc
pop
sbb
adc
mov
xchg
insb
pop
jo
inc
cmp
insl
fcoms
push
sbb
mov
je
jp
cmp
rorl
xchg
testl
xchg
cmp
repnz
popa
jg
pop
push
arpl
cmpsl
and
fcmovbe
xchg
fsubrs
sbb
jo
adc
mov
sub
jne
push
jmp
icebp
inc
inc
push
sbb
cli
sbb
rol
xor
mov
ss
jbe
or
in
jns
iret
out
int3
stc
in
dec
push
pop
xchg
out
bound
pop
in
lret
pop
mov
ss
and
sbb
clc
xor
mov
ret
fnstsw
faddp
push
mov
jp
mov
mov
out
inc
mov
sub
testl
xchg
loope
push
mov
in
pop
jmp
jmp
movb
adc
add
adc
xor
mov
lret
cmp
mov
push
out
popa
dec
cmp
pop
pop
mov
fisubs
pop
adc
pop
mov
xor
leave
iret
jbe
test
andb
pusha
inc
jg,pn
rolb
jecxz
mov
and
push
jno
xchg
add
rclb
stc
pop
cwtl
jmp
pusha
or
nop
aas
push
insw
imull
jb
jp
jbe
push
decb
fincstp
jle
cwtl
push
cmp
xor
lods
xchg
fidivs
jnp
enter
xchg
add
loope
push
add
mov
mov
cld
dec
out
push
int3
cli
add
cmp
mov
mov
int3
inc
pop
adc
es
sub
jno
popf
sbb
lcall
pop
std
inc
test
jne
scas
scas
call
xor
xchg
hlt
jmp
icebp
add
jno
or
sub
aam
aam
or
pop
dec
inc
jmp
lods
xchg
mov
incb
loope
cmp
out
mov
nop
mov
cmpsl
test
add
iret
popa
push
mov
inc
push
pop
lods
add
jge
or
insb
adcb
test
xchg
dec
lock
xchg
sarb
mov
lahf
dec
jo
inc
push
sub
mov
mov
in
and
repnz
adc
notb
in
lahf
fmuls
bnd
xchg
jp
lods
into
pushf
loopew
mov
adc
cs
cmp
push
adc
out
adc
push
jb
mov
leave
test
mov
mov
test
js
sahf
and
or
gs
push
push
hlt
lock
int3
cmp
or
add
cld
rcl
mulb
rolb
sarl
push
and
negb
cld
sub
push
jp
pop
icebp
imul
fs
jbe
push
push
outsl
popa
xchg
xchg
cmpl
clc
test
ucomiss
cmp
in
mov
cmp
loop
pop
pop
inc
adc
dec
push
xchg
jbe
ret
pop
inc
out
cmp
pop
mov
aam
mov
test
clc
cwtl
pop
sub
mov
add
test
in
xor
xlat
dec
arpl
shrb
insb
adc
jns
inc
pop
push
cmp
arpl
data16
movsl
sub
cwtl
push
pusha
inc
pop
and
or
sub
sub
cli
sbb
pop
mov
add
push
pop
adc
aad
mov
cmp
pop
mov
into
rol
sbb
jge
and
adc
andb
loope
sub
mov
aad
data16
sbb
fisttpll
mov
repnz
dec
mov
inc
cmp
xlat
cmpb
adc
es
jmp
ret
inc
sarl
xchg
les
or
jb
mov
cmp
rorl
rcrb
jno
dec
enter
add
cmp
jae
testb
jb
hlt
clc
push
mov
mov
fimull
cltd
stos
icebp
aad
add
sbb
xor
xlat
jg
fs
pop
ret
or
jo
mov
es
rcrb
add
sub
dec
mov
sbb
inc
xor
xor
or
adc
jns
cld
fsubs
out
test
adc
nop
add
mov
fmuls
inc
push
jp
movsl
outsl
adc
jo
aas
mov
mov
mov
in
mov
jae
mov
clc
loopne
inc
push
mov
adc
xlat
push
fwait
dec
mov
dec
aas
cmp
out
loope
pop
mov
add
shll
andl
mov
and
pop
xchg
push
out
mov
js
push
xchg
pop
mov
fnsave
xchg
aas
stc
into
or
adc
lods
mov
fistl
lret
iret
dec
cld
push
cld
mov
jle
and
cmpsl
mov
sub
and
stc
cwtl
int
xor
add
dec
mov
jle
push
outsl
push
pop
int
dec
mov
push
push
mov
or
mov
jo
mov
cmpsb
add
pop
push
js
bound
out
fdivrs
push
faddl
mov
pop
or
out
icebp
push
add
pop
pusha
pop
and
add
mov
test
aad
inc
mov
out
jecxz
js
push
mov
and
add
add
jp
mov
sub
out
lret
xchg
into
push
enter
sub
pop
add
xor
lds
dec
dec
ficomps
inc
stc
cwtl
sub
test
cmp
xchg
jmp
ss
jae
pop
aad
lock
xor
jecxz
xor
iret
jae
xchg
jnp
ss
shld
addr16
jne
mov
cmpsl
insl
out
jl
aaa
jo
pusha
and
dec
test
pop
movsb
stc
dec
fwait
push
out
scas
add
mov
ror
cmc
xchg
mov
out
xchg
scas
xor
jo
sti
pop
pop
out
or
cmpsb
gs
in
or
pop
jno
push
fisubrl
xchg
mov
in
pushf
mov
scas
sub
leave
mov
or
inc
fdivs
arpl
sub
cwtl
addr16
daa
std
negb
leave
int3
mov
jbe
ficoms
xlat
xchg
cmp
pop
mov
xor
xlat
inc
jo
icebp
insb
decl
push
test
shll
push
add
cltd
scas
jge
adc
pushf
sub
dec
cmc
fnstenv
cmp
jp
jg
sub
and
adc
popf
dec
add
cmp
scas
mov
mov
or
fnstsw
or
jg
je
cs
outsl
clc
rcll
mov
lcall
mov
jae
jns
aad
xor
sub
mov
mov
add
cmp
movsb
mov
lods
pop
add
lods
cld
jns
adc
xchg
and
add
and
or
and
and
inc
cmovge
adc
aas
ja
cs
divl
test
leave
and
lods
sbb
js
mov
jmp
fs
pop
rcrb
imul
mov
cmpsb
in
decb
mov
and
jb
stos
push
mov
adc
orb
add
andl
ret
out
and
test
inc
adc
or
sbb
xchg
push
sbb
mov
out
xchg
mov
inc
jnp
mov
bswap
icebp
mov
loop
ljmp
dec
mov
cltd
mov
out
insl
or
daa
insl
cmp
jmp
xchg
cmp
jbe
mov
insl
sbb
insl
popa
xchg
push
dec
out
pop
mov
adc
scas
pop
adc
aad
test
data16
add
clc
sub
negl
sbb
mov
aam
fsubrl
leave
iret
and
pop
pop
out
dec
mov
cmp
addb
test
mov
jle
or
xor
in
jno
lret
adc
adc
xchg
dec
ljmp
mov
addl
imul
loope
push
mov
hlt
sbb
push
mov
clc
stos
xchg
mov
push
loop
lods
nop
push
xchg
jp
lods
dec
jnp
mov
pop
adc
push
jmp
pop
es
fsub
jae
pop
movsb
sti
dec
xchg
mov
js
lds
popfw
pop
inc
ljmp
mov
repz
add
pop
push
imul
out
pop
inc
sbb
int
lahf
push
scas
jge
je
jno
fwait
jp
cmp
and
das
loopne
pop
cli
pop
push
sbb
cmc
insb
mov
fcomp
xchg
negb
adc
hlt
movsl
mov
mov
sbb
pusha
out
addl
outsl
andb
inc
adc
sbb
adc
push
xor
xchg
add
lcall
push
xor
repz
cmp
icebp
mov
xchg
jbe
adc
fsubr
shlb
test
mov
jmp
xchg
fnop
or
mov
movsb
pop
imul
push
dec
adc
ss
and
sti
inc
jnp
dec
or
pop
shrl
ljmp
iret
push
sbb
into
leave
jmp
pop
test
ja
or
adc
xchg
outsl
push
ret
sti
mov
mov
cmp
mov
jg
scas
ja
dec
and
and
orl
mov
dec
push
cmpsl
push
es
fs
test
pop
sbb
mov
out
out
insl
jbe
loopne
adc
dec
in
outsl
and
cmp
add
imul
roll
or
cmpsl
mull
in
test
fildll
jmp
test
test
fildl
or
xchg
ds
xchg
xlat
push
mov
ret
iret
push
inc
daa
das
add
repnz
ret
push
in
test
sbb
enter
lods
cmp
lods
div
push
movsb
lahf
pminub
roll
popa
cmp
pop
test
lods
outsl
inc
sub
xchg
add
pop
orb
push
push
inc
and
jae
hlt
movsl
push
xchg
das
sbb
pop
popf
test
jb
int
add
in
adc
idivl
ja
arpl
shrd
push
push
stos
inc
iret
roll
xchg
nop
fsubl
mov
jbe
sahf
xchg
pop
mov
mov
pop
popa
mov
and
cltd
add
imull
add
ss
sti
mov
and
mov
xchg
mov
mov
mov
and
dec
cli
xchg
mov
dec
orb
push
jle
mov
xchg
ja
xor
or
adc
sbb
movl
xchg
dec
movsb
mov
out
adc
jb
mov
mov
jp
cmpsb
push
addr16
addr16
sbb
ret
mov
gs
aaa
cmp
add
test
and
scas
inc
sub
shlb
arpl
jnp
or
mov
push
test
push
mov
iret
dec
pop
int3
push
imul
roll
inc
icebp
xor
mov
int
imul
fildl
inc
jl
pop
mov
sahf
lret
adc
pop
sbb
xchg
sbb
jp
pop
jecxz
roll
jg
aad
int
sub
or
jl
adcb
adc
inc
or
mov
fldl
dec
fistps
jmp
sahf
test
dec
fs
pop
pop
or
pop
je
sbb
push
dec
jns
jo
mov
arpl
into
or
es
mov
in
pushf
mov
inc
dec
and
adc
inc
and
lods
fsubs
daa
mov
jmp
or
jmp
or
mov
fimull
imul
push
sbb
or
dec
sarl
jge
pop
mov
pop
xchg
clc
iret
jne
imul
and
lods
addr16
cmp
push
pop
add
push
jecxz
mov
por
enter
das
movsl
dec
mov
pop
movsb
roll
cltd
push
ds
mov
push
dec
stc
mov
loope
mov
jb,pt
cli
arpl
mov
sub
dec
in
add
fildll
inc
rcl
pop
sbb
sbb
pop
data16
xor
push
adc
mov
std
outsl
in
lahf
repz
call
adc
pusha
sbb
mov
inc
cmp
inc
push
jnp
xchg
sbbb
adc
sahf
push
pushf
test
ss
icebp
lea
cmp
cs
jmp
add
mov
jecxz
int
les
fmuls
pop
push
jb
arpl
xlat
fnstsw
ja
sub
xor
push
sbb
sbb
sahf
xchg
sub
sbb
sbb
inc
andl
cmpsb
mov
sub
adc
mov
jo
insb
push
addl
insl
sbb
or
xor
dec
mov
and
pop
mov
sub
dec
les
stc
es
add
pop
daa
fnstcw
cltd
imul
sbb
pop
loopne
xchg
fs
popa
xchg
cli
sbb
cmp
cld
ss
push
mov
rolb
push
mov
lret
xchg
jg
pop
or
cmp
and
jnp
in
insb
jnp
xchg
add
pop
pop
das
dec
int
rorl
insl
mov
daa
inc
sub
cwtl
es
cmp
pop
fwait
push
xchg
mov
aam
fnsave
ja
add
cwtl
mov
lret
jns
stc
jg
push
dec
mov
lret
test
sub
add
out
adc
mov
imulb
ds
cs
icebp
outsb
jnp
mov
in
jg
push
inc
ret
mov
imul
rcr
adc
jb
sbb
mov
dec
roll
pop
jb
adc
jne
xchg
sub
shlb
or
jmp
mov
cmp
testl
pop
flds
lock
bound
xchg
xchg
jo
cmpsb
fimull
insb
cmp
push
dec
cmp
decb
nop
mov
iret
xor
shlb
subl
fisubrl
xchg
loope
mov
rcll
test
mov
add
out
popf
sbbb
pop
inc
add
jo
call
xor
mov
lret
mov
jb
and
add
out
mov
cmp
enter
lcall
scas
lock
into
loope
stos
insl
mov
mov
mov
cmp
mov
flds
jl
sbb
push
push
mov
adc
adc
pop
jle
push
jp
std
and
sbb
push
sbb
rorb
imul
or
push
dec
shrl
insb
data16
les
imul
inc
or
cmp
inc
mov
adc
inc
push
mov
ffreep
movsb
mov
imul
pop
sbb
inc
sbb
mov
xor
in
cmp
add
xchg
shrb
clc
jmp
pop
mov
lods
mov
shlb
cs
fsub
or
sub
adc
scas
cmp
push
dec
popf
push
testb
pop
pop
add
lret
aas
sub
into
mov
outsb
jb
lods
xor
es
loopne
pop
mov
mul
mov
movb
xor
add
add
or
ljmp
insl
or
nop
jne
ror
or
imul
pop
push
cmp
into
outsb
nop
pushf
mov
cli
push
lahf
fimull
fnstenv
shl
ja
dec
and
add
test
or
pop
jge
mov
xchg
inc
mov
lea
dec
xchg
lock
nop
pop
mov
repz
or
roll
sbb
xchg
jle
or
div
popa
insl
xor
adc
cmp
push
lret
lret
stos
cmc
loop
test
flds
das
std
loop
fs
ja
jbe
cltd
jns
test
sarl
fdiv
incb
pop
decb
push
sbb
bound
idiv
sub
pop
mov
sbb
shll
shll
mov
les
ja
arpl
xchg
xchg
and
mov
in
daa
mov
lds
xor
sub
es
xchg
xchg
cwtl
sysexit
mov
pop
fisubrl
in
inc
adc
and
mov
iret
and
and
pop
mov
xor
test
aam
les
add
sbb
sti
fisubrl
pop
push
xchg
jecxz
push
inc
push
mov
out
mov
or
adc
pop
lahf
adc
fcomps
push
and
imul
hlt
mov
adc
or
xchg
sub
dec
js
fistps
pushl
xor
jne
cltd
lcall
out
cmp
sar
fcoml
repnz
fnstsw
in
inc
add
sub
sbb
mov
addr16
jmp
push
sbb
mov
daa
mov
sarl
and
ljmp
imull
into
push
stos
inc
jbe
dec
movsb
jnp
push
jl
sub
aad
cmpsb
repz
xor
cmp
pop
sbb
lea
rcrl
cmpb
fs
push
push
daa
jmp
and
xchg
out
test
cmp
mov
cmpsl
push
pop
mov
pop
js
cmp
aam
loopne
pop
jo
repz
cmp
or
in
push
xor
mov
mov
shr
pop
aaa
push
orb
into
jecxz,pn
in
mov
rcr
ss
fisttps
inc
and
std
pop
outsl
rcrl
or
or
hlt
ja
pop
pusha
rclb
xchg
pop
push
fnstenv
sub
xchg
enter
add
int3
sahf
test
dec
push
cmp
mov
pop
and
pop
mov
mov
pushf
xor
mov
inc
shlb
pop
in
in
and
or
pop
lahf
inc
ret
push
add
loop
stc
cmp
stos
lcall
test
repz
rorb
pop
xchg
cmp
dec
jns
jp
adc
lahf
aam
push
out
or
mov
xchg
inc
dec
push
or
pop
push
jo
mov
jbe
test
mov
mov
xchg
jbe
fs
pop
out
js
mov
push
stos
xchg
into
and
ljmp
add
jb
add
xor
lret
or
or
subps
test
pop
adc
adcl
mov
pop
pop
mov
push
xchg
sbb
sub
pop
inc
and
xlat
and
xor
ds
mov
movsl
dec
rcll
aas
iret
jle
out
xor
addr16
jg
jle
cmp
xor
shlb
mov
mov
push
xchg
add
jbe
or
pushf
mov
pop
push
outsl
pop
shll
fdivl
xor
sti
in
xor
leave
shr
dec
popa
sbb
mov
fwait
mov
push
movsb
mov
repz
jae
lods
outsl
push
into
sarl
movsbl
insb
jg
lret
mov
inc
pop
ret
xor
sbb
clc
xor
or
or
cmp
cmp
xor
pop
fsubs
and
mov
fidivrl
mov
cs
mov
xchg
cmpsb
mov
dec
imulb
loope
sub
inc
jg
dec
xor
test
xchg
lock
cmpsl
pop
or
hlt
prefetch
test
outsl
jae
sub
rcrb
mov
loop
mov
dec
dec
jg
lds
leave
cmpsl
test
es
ds
movsb
mov
ja
test
loopne
rol
jb
insl
xchg
add
leave
adc
outsl
sub
scas
insl
loopne
pop
jg
dec
xor
test
mov
cltd
loopne
jmp
jb
int
xchg
hlt
and
fmuls
sbb
jg
mov
xchg
adc
outsl
add
insb
jbe
push
inc
jo
bound
divb
sar
add
sub
adc
xchg
xchg
pop
or
repnz
jg
insl
push
cwtl
add
jns
and
push
jle
cmpb
mov
mov
mov
cmpsb
jne
and
mov
inc
out
jb
jecxz
or
pushf
lock
in
mov
test
decl
test
cmpb
mov
sbb
lods
add
add
ret
shr
les
jno
cli
ljmp
sqrtps
xchg
sub
mov
leave
fsubr
xchg
xchg
ss
int
lret
jmp
sbb
dec
rorl
in
mov
and
adc
pop
pop
or
leave
push
arpl
push
daa
push
inc
shlb
je
pop
repz
daa
ss
leave
clc
jp
pop
in
xchg
inc
loop
lds
jnp
loope
ret
push
add
das
dec
fsubl
in
mov
xchg
mov
rcr
cmp
inc
sub
adc
push
sbb
cmp
cmpl
adc
test
hlt
ret
and
or
call
dec
adc
dec
xor
popa
cmp
cmc
in
int3
pop
dec
dec
pop
adc
sub
cmpsl
and
jnp
cltd
rolb
cmp
daa
in
or
push
ja
push
xor
sbb
idivl
jno
xcrypt-ecb
cmpsl
mov
cmp
pop
lods
and
call
dec
test
mov
and
add
imul
outsl
dec
filds
push
mov
leave
add
pop
dec
insb
xchg
test
aas
dec
push
test
outsb
test
repz
addr16
daa
test
add
add
add
jmp
ss
push
cmc
hlt
std
and
pop
movsb
shrb
idivl
inc
imul
jo
inc
mov
or
and
xor
and
mov
mov
dec
jp
mov
out
cld
push
insl
pushf
sub
in
into
cmp
cwtl
lcall
icebp
push
mov
or
ja
lds
mov
test
sub
lahf
in
xchg
sub
and
mov
insl
adc
ljmp
xchg
flds
add
mov
mov
out
pop
stos
aas
jge
stc
out
popf
test
cmpsb
pop
cmc
imul
fbld
cmp
xchg
imul
fisttpl
lock
sub
or
sub
sbb
mov
std
mov
inc
sub
push
ja
sub
add
fstpt
sbb
into
in
adc
cmpsb
cltd
aaa
imull
lret
aad
mov
inc
stos
sarb
cld
inc
xchg
pop
adc
in
das
mov
xchg
sub
push
shlb
mov
int
cmp
fstpl
in
jb
and
lcall
xor
loopne
sahf
int
push
in
fwait
cmpsb
push
fbstp
cwtl
xchg
cmp
pop
fcmovnbe
ret
inc
js
push
iret
das
and
rorl
mov
sub
pop
dec
popa
lds
fisttpl
and
jnp
adc
lea
sbb
int3
movsb
das
aam
lock
mov
push
test
call
mov
mov
sub
pop
fdivrs
int3
dec
addr16
pop
test
sbbb
ja
and
mov
lahf
xchg
faddl
inc
in
jo
sbb
sarl
testb
pop
mov
lret
out
cmp
and
aas
bound
mov
insl
call
mov
dec
mov
xchg
inc
jmp
loop
mov
fisttpll
lret
in
mov
aas
xchg
inc
pushf
jae
insb
idivb
in
mov
sub
add
pop
lods
insb
mov
sbb
clc
pop
into
jae
mov
pop
cmp
into
jge
cmp
pushl
xlat
adc
and
test
aas
mov
insb
insl
lods
je
jmp
sub
jecxz
das
aam
addl
xchg
aad
lock
xchg
lret
and
dec
push
fwait
xchg
ljmp
mov
cmp
mov
inc
lret
jns
cs
sub
iret
sub
ljmp
aaa
rcl
lret
insb
xor
call
out
xor
inc
adc
pop
cmpsl
fisttps
movb
lahf
sbb
adc
pop
out
inc
and
aad
xchg
dec
icebp
into
cs
or
aam
cld
cltd
jo
pop
jmp
pop
dec
pop
cmpl
int3
pushf
ss
insb
pop
sub
or
add
jp
aam
jne
jnp
jno
or
xlat
cli
out
iret
scas
rcll
cli
in
mov
pop
scas
jne
pop
xchg
push
in
dec
jmp
fs
in
sbb
mov
sahf
sti
test
mov
scas
fdivp
test
notl
xorb
push
or
outsb
andb
in
shr
pop
fbld
add
and
adc
cltd
add
jg
andl
je
popf
imul
insb
cltd
jmp
rorl
xor
jo
push
pop
inc
xor
adc
mov
or
pop
sub
scas
mov
arpl
int3
nop
aad
paddusb
imul
cmp
enter
aad
mov
add
mov
pushf
cmpl
bound
xchg
xor
or
fs
test
dec
adc
cld
pop
and
jmp
out
int
insb
insb
mov
daa
push
mov
mov
lds
rcr
pop
sub
fmull
ds
mov
mov
pop
push
push
add
push
xchg
nop
inc
sub
cmpsb
dec
or
movsb
jae
inc
mov
push
adc
cmp
and
push
pop
mov
test
mull
lods
jns
clc
mov
jg
cmp
mov
mov
sub
loope
js
xchg
xor
popa
push
cld
push
addr16
ficomps
dec
inc
shl
mov
push
loop
push
fucomp
scas
pop
sub
aaa
fdivr
divb
pop
xchg
scas
push
xchg
ja
loop
imul
jae
xchg
daa
sarl
dec
push
aam
fs
in
jne
sub
frstor
shl
mov
add
push
add
and
test
fisubs
jb
lret
shr
xchg
add
out
sbb
aas
adc
xchg
xlat
out
mov
aad
mov
inc
xchg
das
cld
je
inc
pop
and
aad
mov
xor
jns
mov
sub
mov
in
cmp
or
jae
push
les
inc
sbb
dec
fiadds
out
aas
jl
push
cmp
scas
adc
pop
mov
or
mov
fidivl
test
les
add
add
insb
jmp
insl
mov
mov
push
xor
sub
popa
repnz
mov
das
shll
jmp
aam
push
mov
xor
lret
adc
jg
loopne
sub
sub
mov
aad
ljmp
and
xor
or
push
cmpsb
mul
lds
insb
or
stos
aas
jbe
mov
inc
or
ret
jp
leave
fucomi
add
dec
mov
sahf
aam
mov
jg
xchg
or
fnstenv
pop
fdiv
inc
sub
fnsave
scas
lahf
jnp
push
cs
loopne
outsl
and
arpl
mov
in
mov
or
xchg
arpl
xor
adcl
das
setle
test
add
mov
cmpsl
loopne
loope
sbb
cwtl
xlat
mov
mov
mov
xchg
ret
faddp
jo
test
out
fmuls
fwait
push
jbe
ror
fidivs
popl
enter
lahf
out
cmp
mov
sub
inc
das
cmp
mov
xchg
jle
les
push
pushf
scas
sahf
dec
dec
mov
aas
iret
add
dec
nop
and
cld
ret
in
xchg
in
xchg
imul
je
movsl
pushf
push
lock
cmp
xchg
ljmp
sub
shlb
ret
fisttpll
inc
pop
mov
add
and
aaa
xor
movsl
mov
clc
sbb
test
sahf
sarl
mov
add
aad
push
push
not
mov
sub
ds
jne
adc
jmp
or
xlat
push
mov
dec
aas
mov
xor
inc
cwtl
dec
fisttpll
mov
nop
jecxz
mov
pop
inc
sbb
fdivl
mov
sub
mov
dec
or
or
ret
xchg
mov
mov
sbb
xor
pop
jmp
or
movsl
test
cmpsl
inc
test
mov
xchg
inc
pop
in
notb
or
ljmp
lret
in
clc
int
push
jno
pop
divb
into
sub
das
pop
dec
pop
mov
movsb
mov
lahf
adc
pushf
jge
dec
push
stos
or
dec
dec
in
push
fisttpll
inc
inc
sahf
inc
cwtl
mov
fidivrl
xor
push
jo
xor
outsb
jb
jbe
std
jl
aaa
cmp
or
cld
xlat
les
push
ljmp
loope
mov
add
add
ds
aas
pop
clc
insl
adc
cltd
cmc
pusha
sar
popf
ret
lret
lret
sar
loop
or
inc
mov
jnp
xor
cmp
dec
jo
in
cmpsl
imul
sbb
fldcw
adc
rcll
sub
rcr
mov
dec
jecxz
out
int3
subb
add
push
xchg
push
mov
jne
inc
cmpsb
or
dec
or
inc
mov
aas
lods
addr16
adc
out
sbb
sbbb
jecxz
jmp
push
cltd
enter
imul
cltd
sbb
xchg
addr16
imul
je
dec
nop
lahf
dec
mov
jmp
test
cmp
arpl
inc
dec
popf
push
jno
mov
inc
mov
mov
jmp
and
out
sbb
push
adc
cmpsb
mov
lret
shlb
mov
pop
daa
jnp
mov
ds
dec
sbb
out
dec
or
cmp
mov
pop
and
fsts
pop
add
mov
cli
movsl
jo
pop
test
js
adc
push
jne
push
je
lahf
fs
inc
and
stos
push
je
add
sbb
push
movsb
dec
dec
std
lret
lahf
jge
cmp
mov
or
fs
push
jb
inc
repz
cmp
nop
int
sub
hlt
pop
fisubl
sbb
cs
nop
pop
push
push
dec
xchg
or
fs
and
mov
les
loope
rdtsc
iret
test
je
xchg
jmp
lds
sub
cmp
mov
hlt
xor
inc
push
in
sbb
mov
sbb
test
mov
push
xchg
subl
mov
or
pop
jnp
mov
jg
jnp
lret
mov
outsb
or
lods
imul
fsts
aam
lods
or
xor
shl
xchg
mov
aam
jb
into
mov
fucomi
push
sub
pop
mov
pushf
jmp
pop
sbb
popf
xor
aaa
mov
nop
addb
xor
xorl
jbe
push
cmp
cmpsb
push
cmc
pop
iret
sti
sub
pop
push
jno
js
pop
mov
fsubs
fmull
add
and
inc
adc
stc
fisubrs
jae
push
out
in
xchg
cmp
fistpl
ret
xchg
stos
out
aaa
call
clc
int3
ljmp
and
jp
pop
aam
es
cmp
sbb
dec
mov
push
jb
jbe
data16
mov
les
mov
add
mov
cmpsb
ja
xlat
pop
mov
mov
mov
xchg
cli
mov
add
mov
pushf
cmp
and
xchg
fdivl
and
ljmp
pop
dec
ljmp
mov
adc
repnz
testb
jne
aaa
xlat
lds
movsl
lods
add
dec
jmp
xor
dec
mov
inc
sbb
or
js
inc
push
insl
fucomip
sbb
outsb
inc
mov
cmp
test
clc
stos
stos
test
test
scas
jg
xchg
pop
inc
aam
movsl
cs
pop
out
mov
mov
bound
add
jne
adc
sbb
mov
jne
clc
orl
jge
movsl
insb
outsb
mov
shlb
adc
lock
ljmp
push
mov
imulb
rcll
push
mov
mov
mov
cmp
ds
jg
addr16
sub
jmp
pop
mov
cld
xor
aam
push
pop
in
lods
and
fdivr
and
mov
dec
enter
xor
sti
dec
js
out
sub
jmp
sub
jae
mov
enter
or
in
out
lea
jnp
clc
xlat
cmp
stc
orl
dec
xchg
bnd
push
addl
int3
fildl
out
dec
test
dec
pop
pusha
divl
fisttps
jg
ss
dec
pop
cmp
jns
and
sub
push
sub
or
push
mov
or
sbb
ds
dec
jmp
cld
xor
and
cmpsb
sti
gs
or
or
in
ljmp
enter
mov
cmp
lock
insb
ljmp
xchg
popf
cmp
rcl
daa
lret
fwait
imul
pop
dec
sub
fdivrp
add
jnp
mov
mov
inc
daa
or
sbb
lods
sub
mov
js
ljmp
ret
jg
mov
dec
sahf
mov
inc
push
mov
add
sub
xchg
das
outsl
pushf
mov
jb
repz
mov
xchg
popf
in
adc
imul
cmp
and
xchg
lea
mov
rorb
xchg
movl
sub
out
insl
mov
fstl
mov
mov
jo
mov
jl
jp
inc
movb
hlt
push
dec
xor
loope
movsl
mov
nop
xchg
gs
dec
loopne
call
xor
push
sub
or
ret
icebp
je
insl
xchg
mov
adc
bound
insb
push
sbb
rclb
shlb
mov
fstps
outsl
push
jge
mov
int3
call
xor
xor
sbb
or
pop
and
in
and
sbb
in
out
add
jns
stc
addb
mov
in
jo
insb
movl
dec
out
push
out
vshufpd
leave
imul
bound
pop
decl
mov
adc
cld
cwtl
sub
or
dec
xor
loopne
add
andb
sub
pusha
outsb
jl
stos
push
das
adc
aaa
addr16
movsb
imul
and
jo
lods
movsb
cmpsl
jo
repz
pusha
int
insl
jno
in
xchg
loope
dec
in
and
mov
push
mov
or
arpl
je
mov
add
inc
mov
out
cmpsb
jmp
scas
mov
push
mov
dec
add
insl
mov
clc
sbb
pop
pop
mov
nop
dec
mov
mov
mov
pop
mov
iret
in
shr
push
push
outsl
push
mov
into
dec
imul
aad
mov
mov
adc
jmp
and
lret
orb
mov
xor
cld
xchg
jecxz
test
lds
pop
mov
arpl
pop
push
std
jne
pop
adc
lods
es
jle
adc
mov
push
mov
ljmp
push
aas
iret
push
mov
push
jp
pushf
int
fistl
jmp
icebp
mov
imul
enter
jmp
cmpsl
ds
mov
rcll
push
shl
jb
ds
inc
fs
out
add
aad
mov
mov
in
mov
aad
cmpsl
rclb
sbb
push
adc
adc
icebp
and
pop
je
jae
sbb
repz
and
adcb
movsb
push
xor
punpcklbw
sarl
sub
xacquire
leave
stc
fcomip
inc
fimull
and
jnp
dec
lahf
push
cli
dec
ljmp
rcr
adc
or
test
ss
out
mov
mov
inc
cmp
mov
out
loopne
sub
clc
jmp
sbb
and
push
loopne
shlb
or
shrl
add
pop
movsl
rep
xchg
test
mov
pusha
lret
bound
pmulhw
cmp
clc
ret
mov
in
pop
push
add
into
imul
fnstcw
cmpsl
stos
cld
jecxz
jle
mov
int
cmp
loopne
int
and
enter
pop
pop
dec
je
xchg
popf
sbbb
xchg
aas
loopne
cwtl
sbb
mov
cmp
or
sub
repnz
hlt
insb
push
cmpl
or
add
xor
cmp
xor
add
pop
or
xor
and
push
pop
testb
insb
add
fnstsw
cli
adc
sbb
fs
xchg
xchg
notb
sub
jl
add
push
inc
adc
lods
out
addb
arpl
pop
mov
xchg
fisubrs
outsl
xchg
ljmp
dec
mov
fdivl
jp
test
icebp
or
mov
mov
rorb
stc
pop
stos
jne
mov
out
imul
pop
ds
lods
pop
dec
inc
cld
cwtl
xchg
aam
out
aaa
xchg
xchg
cmpsb
dec
xor
mov
rcrb
icebp
enter
push
outsb
shll
add
mov
mov
sbb
bound
clc
jg,pn
sbbl
addr16
pop
sbbb
aam
jno
shlb
push
and
roll
pop
add
filds
xchg
std
sbb
imul
adc
les
push
push
loopne
aaa
xchg
movsl
xchg
test
inc
outsb
mov
sub
out
in
in
xchg
cld
sahf
adc
pusha
int
shll
xor
std
jbe
vpaddd
lock
ds
pushf
dec
mov
cmp
aam
add
sti
ficoml
xchg
test
push
add
adc
push
mov
mov
xchg
outsl
out
adc
cmp
scas
pop
mov
les
packuswb
pop
into
test
sbb
scas
pop
xchg
je
and
mov
cwtl
xchg
pop
cmc
xlat
int
dec
movsb
ja
pushf
cmp
fwait
add
push
push
jl
aaa
inc
rorb
push
mov
mov
xchg
push
jo
lods
imul
fld
mov
daa
jae
xor
pop
nop
inc
and
in
sub
or
icebp
repnz
sbb
lahf
sub
dec
ret
imul
arpl
outsb
test
adc
xor
call
cs
stc
add
test
sbb
xor
fwait
sbb
mov
fwait
add
inc
adc
rorl
out
sub
pop
jecxz
add
aas
jl
cmc
xor
and
shl
fisttpll
lds
pushf
xchg
mov
scas
cld
loop
jle
mov
mov
adc
shlb
mov
jle
arpl
xor
or
imul
dec
icebp
shr
out
mov
jnp
data16
cld
lahf
shl
shlb
adc
loopne
stos
paddsw
out
scas
adc
dec
test
lcall
pusha
stos
inc
sahf
pop
shll
out
or
sbbl
sbb
sbb
inc
inc
mov
xor
sub
jmp
test
sti
aam
jbe
cmp
pop
xlat
push
fsubrl
sub
fwait
test
inc
dec
test
cmp
stc
jne
outsb
mov
jae
nop
sub
mov
jns
test
cld
dec
xchg
testl
popa
xor
insl
jl
sbb
test
pop
dec
aad
test
imul
dec
das
sbb
jnp
gs
ja
jmp
push
or
jne
data16
shlb
dec
rcrl
pop
xor
push
push
xchg
fistpl
les
mov
cltd
adcb
imul
ret
aad
mov
insl
lds
dec
insl
inc
es
add
cli
into
js
fcmovnu
lock
or
push
fisttpll
push
fisubrl
pop
cmp
push
jnp
sub
jl
leave
addr16
insl
add
cmp
mov
ss
scas
aas
xchg
movsb
repz
inc
and
lock
and
dec
mov
pusha
jmp
mov
sbb
outsl
dec
pop
push
pusha
fs
or
lea
scas
call
push
dec
insl
pop
aaa
fwait
adc
or
aas
cmp
nop
and
stos
sahf
das
lahf
mov
lahf
sbb
popa
dec
push
sti
mulb
or
fiaddl
jg
loop
lcall
add
cmp
fwait
out
push
or
and
ds
adc
pop
cmc
jne
inc
pop
add
xor
aas
outsb
test
xor
sbbb
xor
fnstcw
fndisi(8087
addr16
pop
push
xor
test
ss
lcall
sahf
ja
push
les
mov
jp
hlt
push
xorl
cs
sbb
andb
into
add
bound
sbb
out
stos
shlb
in
popa
fistpl
bound
rolb
add
cmc
xchg
mov
out
sbb
inc
xchg
fstpl
pop
fs
lock
cli
test
insl
in
mov
stos
ret
add
sahf
lock
mov
jo
pop
pop
or
mov
push
pop
stos
xor
rcrb
test
inc
jmp
jg
shlb
sub
mov
jmp
jge
cli
mov
xor
jmp
jb
cld
mov
movsl
xorb
lret
mov
es
leave
inc
mov
adc
push
jbe
subb
repz
hlt
jmp
mov
dec
dec
test
scas
xor
rcrb
push
iret
or
jo
jno
subb
cmpsb
adc
cmp
shrl
jmp
cmc
sbb
push
or
push
or
outsb
sbb
mov
push
xchg
adc
sbbb
inc
imul
cmp
mov
stos
mov
out
pop
and
and
fwait
pop
es
xchg
xor
aad
shlb
and
and
in
aaa
sbb
lret
sbb
xchg
xor
cmp
aam
adc
outsb
push
popl
inc
push
and
mov
jle
inc
ds
inc
pop
pop
mov
popf
add
es
fwait
iret
cmp
jmp
xchg
mov
xlat
sub
pusha
add
dec
inc
rcll
xlat
icebp
fwait
pop
pop
lcall
movsl
out
and
push
mov
ljmp
pop
add
add
mov
jo
les
jns
data16
bound
jp
dec
push
jle
call
cmp
or
data16
or
and
mov
mov
add
mov
jbe
insb
push
subb
mov
loop
test
xlat
pop
iret
enter
push
or
repnz
sub
add
iret
sub
add
pop
sub
jp
jmp
mov
dec
sbb
xor
jp
cmpsl
jg
mov
les
cmp
out
sub
iret
rcll
adc
fists
pop
sahf
repnz
pusha
mov
aaa
jmp
push
sarl
repnz
fsub
sbb
xchg
outsb
inc
lret
adc
xchg
mov
add
xchg
push
sarl
jp
pop
xor
pop
scas
xchg
push
adc
fstl
pop
mov
pop
pop
shll
pop
adc
add
addl
dec
fiaddl
aam
shrl
add
ja
das
pusha
subl
cmp
leave
mov
mov
jb
mov
aam
cmp
mov
jmp
mov
cmp
lods
stos
push
cld
jo
inc
push
call
mov
cmpsb
ss
mov
mov
push
test
fistps
ds
adc
xor
stos
adc
repz
xchg
mov
dec
jp
xor
incb
gs
xchg
cmp
or
ficoms
pop
fs
lcall
repz
sub
lahf
testb
pop
dec
mov
adc
cltd
pop
and
push
cmpb
pop
ds
icebp
fisttpll
sbb
jecxz
or
cltd
lods
jle
jle
push
and
insl
xor
cwtl
daa
mov
fcoms
dec
mov
fs
pop
in
dec
mov
movsl
mov
mov
dec
test
scas
mov
cmp
dec
and
adc
xchg
xor
bound
out
jp
adc
dec
and
je
pop
ficompl
lcall
imul
in
sbb
arpl
dec
xor
mov
pusha
sub
dec
sbb
dec
cltd
das
pop
int3
ja
dec
pop
push
pop
std
stos
xchg
or
fisttpll
testl
outsb
fwait
or
es
pop
ja
cmpsb
mov
mov
negb
or
lret
cli
mov
bound
cmpsb
fs
and
insb
jb
mov
pushf
cli
mov
mov
imul
repz
insl
mov
loop
inc
push
mov
cmp
sub
jne
aam
jno
inc
mov
cmp
aaa
add
stos
in
and
push
fcomps
mov
cmp
mov
rcr
adc
ljmp
cld
cmp
jb
adc
test
jle
xor
mov
scas
xor
push
insb
inc
pop
repz
int3
pusha
ficoml
aad
pop
sbb
xchg
inc
xor
pop
movsl
icebp
sub
pop
sbb
shrb
rol
lods
xor
popa
xor
aam
lock
jae
sbbl
jl
jge
and
jno
shrb
sbb
in
test
lock
filds
icebp
push
mov
data16
jo
sahf
pushf
and
ret
filds
push
push
push
clc
loop
out
imul
push
sub
aad
aas
test
and
in
and
ret
xor
fnstsw
sbb
inc
cld
imul
sahf
cmpsb
adc
inc
pop
es
adc
insb
les
mov
cmpsb
lock
and
cmpb
sbb
and
in
orb
xchg
jecxz
fldenv
hlt
into
stos
mov
xchg
lret
outsb
mov
adc
mov
gs
xchg
les
clc
fnstenv
xor
rcll
in
mov
int
lods
mov
sub
stc
sbb
lret
cmp
xchg
pop
arpl
or
and
ret
popa
inc
das
sub
roll
inc
or
xor
pop
pop
jge
daa
mov
push
lret
mov
jno
and
insl
sbb
push
jecxz
inc
sti
aam
jl
and
jnp
dec
jns
lods
xor
push
xchg
loopne
or
jb
mov
push
test
push
xor
je
inc
dec
adc
in
mov
xor
cmp
loope
sub
shll
repnz
dec
mov
mov
int
gs
and
loope
sub
ret
sub
jns
fstps
fiaddl
push
out
insb
sahf
loope
xorl
push
scas
ret
push
fadds
mov
lret
cmp
adc
inc
cwtl
mov
inc
fcmovu
pop
jge
icebp
pop
push
roll
xor
mov
call
dec
lock
mov
push
pop
fcmove
dec
jmp
adc
push
dec
mov
lods
lock
xchg
jge
push
xlat
jle
cmpsb
inc
pop
mov
sbb
aad
fs
sub
mov
inc
into
fistpl
fmull
xchg
push
inc
in
cmp
sub
mov
and
bound
sbb
pop
push
xchg
cmpsl
roll
mov
rorb
fistps
outsb
sub
test
scas
mov
clc
popa
or
leave
mov
or
xchg
fwait
jmp
pop
fcmovu
aad
loopne
mov
rorb
lret
cmp
add
popf
xchg
aam
pop
mov
je
sub
push
pop
pop
cli
mov
pop
mov
bswap
es
rcr
or
and
mov
xor
test
call
aas
push
repnz
mov
adc
cmpsb
cmp
out
push
pop
jns
add
sarb
cmp
push
add
dec
ss
popf
adc
sbb
mov
shlb
cmp
push
outsb
clc
int3
loop
ss
iret
push
out
js
repz
lcall
jbe
push
mov
cmp
mov
fdivp
xlat
mov
or
inc
repz
sahf
mov
mov
mov
jae
xlat
shrb
insl
movsb
inc
or
and
push
outsb
into
in
mov
cmp
adc
test
push
movsb
test
in
or
ss
xchg
adc
pop
sub
aam
ficoms
andl
cmc
mov
sbb
jl
or
nop
insb
out
fs
mov
and
test
test
cmpsl
out
mov
gs
jnp
inc
sub
fistpl
das
aam
fs
jno
data16
into
gs
fstl
clc
imul
sub
pop
fisubrl
ret
mov
aam
xor
fcoms
in
xchg
sbb
lods
dec
das
mov
and
stc
mov
add
sbb
sub
aaa
aad
iret
mov
inc
sbb
xor
shrb
daa
pop
out
lock
mov
pop
adc
push
sbb
push
fmul
rorb
stos
push
lret
nop
icebp
daa
xchg
into
sar
cmp
push
hlt
aam
es
inc
js
pop
push
mov
mov
jnp
mov
adc
std
mov
lahf
inc
orb
push
js
xchg
mov
mov
pop
lods
jns
cltd
mov
xchg
repz
pop
sub
push
adc
fisubl
inc
xorl
push
in
clc
inc
push
popf
push
ret
lods
out
aad
mov
push
dec
scas
stc
lret
ret
pop
loope
mov
dec
jo
test
or
es
insb
mov
scas
orb
daa
add
pop
lahf
sbb
push
fimuls
push
imul
pop
call
or
mov
jns
loop
or
mov
frstpm(287
ss
sti
imul
das
jp
in
out
idivb
add
sub
inc
out
dec
and
cmp
subl
jecxz
mov
lods
pop
lcall
or
loop
fcmovnbe
int3
jl
inc
aaa
mov
addr16
cli
mov
inc
mov
test
push
pop
xchg
mov
pop
push
mov
sub
or
ds
jns
push
lahf
jmp
push
inc
jmp
das
cmp
ss
sarb
mov
insb
test
ss
es
movsl
mov
gs
jne
fisubrl
pop
test
lahf
out
mov
lcall
stos
lret
xchg
or
sbb
rclb
ret
pop
pop
sti
clc
sub
push
xor
out
popf
cs
mov
mov
pop
or
sbb
and
adc
sarl
dec
xor
xor
xchg
sbb
mov
inc
addr16
imul
lcall
rclb
lods
mov
popf
rcl
or
mov
lea
push
sbb
pop
loopne
mov
dec
mov
stos
jae
dec
cmp
mov
out
xchg
or
jle
or
bound
push
test
cli
push
push
mov
pushf
cmp
popa
icebp
jne
ss
test
push
imull
inc
adcb
inc
pop
or
stc
test
pop
rcll
cmp
mov
jge
push
xlat
and
imul
loope
mov
push
add
add
add
sub
into
scas
xor
mov
sbb
lea
lds
data16
jae
out
and
je
repz
adc
dec
jmp
lret
pop
push
mov
xor
aaa
xor
xchg
sbb
in
jmp
ljmp
sbb
stos
cs
fucom
mov
pop
push
dec
sub
or
out
push
hlt
xchg
add
arpl
div
or
xor
in
in
and
mov
call
es
movsb
add
aad
lods
test
sbb
pushf
ds
adc
aam
pusha
xor
jmp
test
jmp
mov
pop
ljmp
mov
sbb
imul
out
repnz
xor
inc
fsubl
pop
inc
ja
jnp
mov
mov
jge
pop
cmp
outsb
std
mov
dec
ss
cmpsl
xchg
pop
scas
lods
jne
lret
bound
in
sti
xchg
inc
cmc
bound
mov
clc
mov
mov
ret
test
leave
lock
hlt
push
inc
cmp
dec
sub
sub
fcmovne
sub
lock
pusha
push
aas
sub
imul
or
and
mov
lods
sbb
push
stos
mov
mov
pop
imul
push
cltd
pushf
mov
out
push
into
push
jb
dec
cmp
popf
fldl
xor
imul
and
mov
dec
ljmp
dec
int3
jmp
test
jmp
sub
inc
cmp
xchg
xchg
lds
cmp
into
and
or
or
ja
outsb
hlt
popf
inc
push
ljmp
out
stos
movsl
je
sub
outsb
mov
cmc
lahf
inc
pop
fwait
leave
imull
sub
dec
loopne
movsb
add
add
cli
and
fidivs
out
js
das
enter
xchg
pop
mov
aad
flds
sbb
test
sub
in
cld
xor
lds
hlt
adc
pusha
jb
mov
lret
xor
push
dec
fbld
jae
push
mov
push
leave
in
into
pop
sahf
popa
stos
popf
js
inc
fcom
add
or
call
and
das
and
push
jns
cli
xor
push
ss
push
movsl
push
xorl
ret
sbb
jns
mov
jne
es
insl
pop
pop
out
cmp
test
scas
subl
mov
lock
mov
ds
bnd
pop
fwait
mov
sub
dec
mov
test
sahf
loop
std
ljmp
or
hlt
adc
mov
adc
ds
jmp
add
ret
lock
dec
mov
testb
or
jge
inc
lock
and
sub
cmp
push
or
sub
adc
popl
add
mov
lock
shlb
xchg
add
lret
xor
xor
adc
daa
enter
add
add
mov
js
pushf
outsb
test
xlat
into
int3
adc
sbb
clc
dec
popa
test
or
mov
mov
and
hlt
dec
shlb
lret
xor
out
and
inc
aas
cs
data16
cmpsl
push
andb
lds
inc
not
cmp
sbb
cld
sbb
xchg
adc
int3
jb
pushf
pusha
xor
pop
dec
xchg
loop
daa
sub
mov
add
movsb
ja
icebp
push
jle
pusha
pop
iret
dec
mov
int
inc
stos
push
jbe
shll
sti
jbe
aas
mov
imul
mov
dec
out
into
mov
loopne
mul
rcll
add
mov
adc
push
mov
les
cltd
ljmp
mov
add
ljmp
and
test
pop
push
adc
ret
mov
mov
aad
cmp
arpl
push
or
sub
je
push
jnp
aam
pop
cmp
inc
int
cmp
xchg
notl
sub
popa
fldcw
rcrl
jmp
sbb
inc
adc
cwtl
jne
ret
add
cmp
mov
mov
sbb
leave
flds
mov
lds
repz
cmp
imul
and
dec
adc
mov
adc
ljmp
or
cmp
or
add
sub
rcrl
int
aas
mov
inc
pop
js
ficoml
and
sub
ss
ds
fucomi
inc
test
hlt
aad
sub
cmc
xlat
inc
enter
jno
mov
add
dec
adc
ror
sbb
pop
jae
xchg
pop
loopne
comiss
push
pop
and
shll
adc
js
stos
out
out
outsb
mov
mov
jne
mov
push
dec
mov
dec
lahf
jno
daa
push
push
cmp
xchg
icebp
iret
xlat
inc
scas
and
je
xor
pop
and
outsl
jno
test
addr16
es
adc
aas
pop
arpl
fwait
dec
andb
or
pop
hlt
inc
sbb
shl
sti
or
push
arpl
pushf
sub
data16
je
sbb
pushl
inc
sbb
sbb
outsb
es
cld
cmp
pop
pop
jmp
in
lea
fisubrs
xchg
mov
mov
xchg
jne
icebp
std
shll
outsb
ret
daa
and
dec
clc
ret
je
sub
mov
mov
stos
cmp
scas
dec
aaa
loop
ficompl
sub
and
aam
add
dec
cld
sarl
lock
jmp
cmp
pushf
adc
push
cmc
fwait
sub
mov
jnp
ss
inc
pusha
mov
sbb
lock
test
jnp
or
je
popf
aaa
inc
push
adc
and
mov
push
jbe
jne
sub
mov
rclb
or
sahf
jbe
sub
enter
in
out
sub
add
mov
or
sbb
in
sbb
cmpsl
addb
add
xchg
jae
mov
in
xor
mov
stos
jnp
faddl
and
pusha
push
mov
xlat
or
add
cld
rorb
xor
ror
jne
mov
and
sbb
jns
xchg
loopne
cmp
push
fwait
test
push
and
xlat
pop
mov
xor
mov
fildl
cld
aas
push
ucomiss
cmp
ds
xchg
lret
adc
cmp
xlat
inc
rcll
icebp
enter
jmp
dec
imulb
lret
cmp
inc
iret
pushf
push
xor
into
orl
and
adc
mov
shll
jge
inc
mov
mov
mov
daa
adc
rolb
pop
scas
lret
jno
inc
and
sub
stos
and
dec
add
mov
stos
cmp
add
xor
das
jbe
fimuls
gs
xor
push
dec
gs
leave
jmp
imul
loope
rcrl
inc
ds
mov
pop
dec
add
sbb
imul
jb
cmpsl
cmp
pop
xchg
pop
test
push
leave
orb
popa
inc
xlat
and
xchg
insb
cld
jmp
mov
aaa
dec
pop
lret
mov
cmc
jo
je
enter
fisttps
xor
xor
mov
inc
jae
in
imul
mov
jmp
frstor
popf
pop
push
insl
pop
and
mov
push
push
mull
test
lahf
mov
paddw
mov
in
cwtl
mov
or
mov
xchg
mov
out
push
mulb
sbb
adc
int
xor
add
aad
addr16
paddw
cwtl
fldt
scas
dec
ret
mov
test
shlb
mov
lret
inc
movsb
cltd
ja
or
pop
popa
jno
push
cmp
pop
outsl
push
enter
shl
inc
dec
mov
clc
fcmovb
dec
sbb
fcompl
out
aas
pop
imul
cmpsb
mov
sbb
xchg
xchg
xchg
orl
add
sbb
add
mov
or
xor
and
xlat
jp
and
cli
ja
nop
pop
fisttpll
sbb
sub
in
cmc
jmp
enter
mov
xor
in
negb
orl
xchg
je
inc
scas
jp
mov
add
shrl
sbb
jns
jl
sub
jno
inc
add
lods
xor
and
jo
mov
push
push
hlt
mov
fcoml
push
cmpl
in
ljmp
sub
decb
enter
mov
pop
adc
aam
cmp
shr
add
mov
jne
jp
cmpb
mov
or
gs
adc
aam
mov
sbb
repnz
adc
xlat
pop
mov
cmpsl
clc
jg
fnsave
pop
inc
incb
jns
and
ljmp
loope
loop
jg
jge
sbb
dec
mov
cmpsb
in
and
call
dec
frstor
mov
add
dec
push
lcall
or
jno
outsl
in
jg
adc
mov
fidivrl
push
jge
cwtl
cmp
xor
sub
jmp
icebp
dec
lcall
movsb
jbe
sbb
mov
jmp
adcl
push
jp
das
aaa
jns
push
sbb
pop
shrl
mov
push
lods
and
mov
or
jp
pop
mov
fs
mov
lret
push
aam
ret
aaa
fisubrl
mov
shlb
rorl
push
cmp
loope
sub
jnp
fisttpl
mov
add
or
repnz
inc
jmp
test
ja
les
addr16
sbb
test
lods
jbe
lea
movsb
cmp
dec
pop
pop
int
cmp
pop
push
daa
stos
test
and
addr16
int3
addr16
adc
xchg
inc
mov
mov
cmc
es
out
xor
mov
jne
cmp
out
test
out
repz
enter
ret
lret
xchg
lret
jge
dec
nop
push
std
inc
or
inc
mov
xor
inc
imulb
adc
loopw
lock
mov
jo
sbb
mov
adc
fwait
adc
in
adc
pop
insb
js
aaa
mov
push
xor
push
outsb
inc
xchg
mov
pop
lea
cmp
scas
lcall
sub
or
mov
out
cmp
movsl
mov
mov
lods
mov
fistpll
jl
mov
add
inc
sarb
push
popl
xor
stc
mov
mov
int
sbb
pop
rcl
adc
clc
pop
pop
ret
push
cmp
mov
mov
cmpsb
das
xor
xorl
les
in
jb
xor
dec
and
pushf
in
inc
xor
cwtl
addb
ret
cmp
inc
rcll
adc
inc
push
jnp
ret
push
repnz
cmp
jge
mov
ss
divb
adc
flds
aad
and
or
mov
and
lock
test
mov
fnstsw
or
inc
std
mov
mov
aaa
push
scas
movsl
enter
es
or
add
ficomps
arpl
inc
and
or
enter
mov
addb
insb
or
imul
aas
and
jl
jg
into
sbb
jl
enter
or
fstl
in
sub
daa
leave
adc
loopne
inc
jno
sbb
push
push
lods
and
popw
dec
mov
cmp
fsubr
push
dec
dec
xchg
xchg
inc
std
sub
mov
jle
or
sub
mov
stos
cmp
fsubs
sub
sti
pop
mov
push
divb
test
or
jae
iret
cmp
sbb
push
cld
push
mov
popa
add
mov
mov
adc
cld
xor
pop
lods
inc
mov
shrb
loope
imul
lds
jne
aaa
fcomps
movsl
aam
hlt
stc
cmpsl
std
xchg
mov
jle
mov
push
loope
push
adc
shr
push
insl
enter
cmc
xchg
push
push
lcall
and
push
sub
mov
jne
fs
mov
lret
pop
test
jbe
push
mov
imull
cmp
ds
jecxz
scas
stos
insl
or
or
paddusb
movsb
and
pop
mov
push
ficoml
in
lods
jge
movsb
leave
pop
sub
inc
jb
dec
cmc
xor
not
dec
cwtl
sbb
xchg
insb
or
sub
xchg
cmp
pop
sbb
sbb
sbb
popa
xchg
xor
lahf
xchg
mov
insb
addl
outsl
out
cmp
fs
pop
xor
sbb
jle
movsb
pop
ljmp
sbb
pop
xor
fcoms
mov
mov
adc
mov
sti
mov
pop
rcll
lods
pop
xlat
inc
cmp
in
push
ljmp
pop
test
shl
push
mov
jle
call
cmc
sub
push
pop
cmp
xor
outsb
sbb
push
jge
sbb
cmp
mov
add
sbb
out
in
sbb
subb
ljmp
imul
sub
xor
cmp
shlb
cmp
outsb
cmp
fs
sete
and
adc
in
push
pop
je
pop
and
push
popf
add
mov
shl
pop
add
into
mov
mov
push
inc
or
fldl
push
mov
sub
dec
push
fmuls
aaa
cwtl
pop
push
ljmp
inc
cmp
pop
fcomps
push
inc
and
mov
pop
andl
push
sub
pop
es
in
sbb
push
mov
inc
call
push
out
enter
cmpsb
jnp
sbb
jmp
test
cmpsb
push
int3
cld
sbb
push
addr16
in
sub
aas
out
jnp
repnz
ret
cmpsl
test
mov
clc
leave
and
sahf
ret
nop
and
mov
out
pop
or
sub
pop
orl
jno
inc
jnp
xor
mov
test
jge
arpl
cmp
mov
mov
test
pop
lret
scas
cmp
sub
loopne
xor
xlat
adc
dec
sbb
test
mov
push
stos
es
mov
mov
int
jbe
aad
add
sbb
movsl
mov
xchg
mov
push
sbb
outsl
mov
jecxz
scas
daa
das
mov
nopl
cmpsl
imul
pop
sbb
xchg
into
sahf
cmc
mov
outsl
lcall
mov
test
xor
stos
inc
or
hlt
in
xor
stos
stc
mov
cltd
test
lock
rcr
fcoms
and
js
sti
es
shr
addr16
or
mov
ds
pop
push
sbb
sbb
jno
testb
test
xchg
or
inc
fimull
pop
insb
test
aad
xchg
out
mov
arpl
mov
bound
pop
xchg
out
xor
stc
push
iret
mov
inc
pushl
lods
and
mov
jecxz
iret
into
mov
into
push
ret
mov
xor
in
mov
sahf
mov
jo
jmp
aam
outsb
andb
imul
cmp
mov
cmp
ljmp
push
inc
inc
mov
inc
fistps
push
ret
sub
inc
nop
test
or
insb
or
jp
hlt
popa
pop
jae
pop
mov
adc
xor
mov
aas
rcrl
xchg
int
mov
mov
dec
cmp
cmp
cmpsb
ret
fucomi
jecxz
lods
nop
cmp
sub
mov
adc
mov
mov
insb
jmp
pop
push
ljmp
orb
adc
sbb
imul
lods
push
dec
stc
iret
or
fcmovnbe
loop
xor
imul
repnz
pop
aam
das
out
pop
mov
inc
nop
faddl
cld
mov
imul
ret
lock
movsl
fnsave
sbbl
bound
adc
movsl
sahf
sub
xchg
cmp
jle
cli
add
stc
iret
push
pop
mov
mov
mov
mov
ja
push
stc
cmp
mov
and
adc
mov
sub
rcrl
xchg
push
fmulp
or
sub
cmpsl
cmp
in
or
pop
fsubl
pop
pop
adc
imul
ljmp
push
imul
pusha
out
dec
sti
fldenv
mov
or
lock
dec
cmp
rcr
in
xor
fimull
mov
fildll
mov
xor
outsl
inc
call
cs
dec
lahf
fbld
rcr
cmpsb
int3
and
std
or
aas
add
cmp
pop
fdivs
dec
dec
cld
ds
stc
cmp
jo
mov
pushf
fwait
in
sbb
roll
sahf
xor
call
pop
scas
sahf
sbb
xchg
gs
cmpsb
lods
repnz
in
sbb
or
ljmp
iret
inc
dec
mov
push
mov
test
cmovg
xlat
iret
mov
icebp
sub
aam
into
xor
arpl
sub
mov
xchg
pop
mov
lret
push
pop
imul
movsb
pop
fisubl
sbb
aam
or
icebp
popa
sbb
jno
ljmp
pop
lds
push
mov
lcall
cmp
in
es
pop
loop
sbb
pop
int3
jg
adcb
shlb
enter
movl
sub
jg
cs
push
enter
mov
out
mov
cmp
jmp
xchg
inc
adc
inc
repnz
icebp
pop
mov
addb
inc
push
les
push
sub
loope
inc
push
mull
xchg
imul
sub
jbe
adc
jno
js
jb
ss
and
push
lret
leave
scas
jns
cld
shlb
xchg
insl
in
fbld
pusha
lahf
orb
fwait
lock
mov
mov
xchg
dec
addr16
adc
cs
lea
cs
scas
out
pop
mov
pop
or
mov
js
ret
mov
pushf
test
pop
ret
xchg
cwtl
or
inc
or
scas
int
movl
inc
cmp
in
push
pop
add
aas
inc
xchg
inc
or
mov
or
add
xchg
inc
fstp
mov
jae
sti
movsl
nop
xor
dec
cmp
cli
stos
xchg
mov
insb
shrb
rcrb
sbb
and
hlt
out
jo
xchg
test
fwait
mov
cmp
sub
and
dec
mov
mov
stos
sub
jbe
or
lret
push
fiaddl
ss
mov
aaa
sub
adc
dec
loopne
mov
lods
sti
xchg
sbb
cmp
jg
test
outsb
imul
lret
lcall
add
leave
mov
inc
lods
jecxz
dec
pusha
pop
ret
insb
or
fidivl
push
lods
add
xchg
jp
xchg
scas
and
ffreep
xorl
xlat
cmp
int
pop
push
xchg
movb
push
mov
xchg
jnp
inc
js
fisubrs
test
jge
xorb
into
mov
dec
xor
add
sub
inc
imull
jmp
stos
sbb
add
sub
pop
cwtl
testl
insb
repnz
jmp
and
cmpsb
cli
stc
and
ret
popa
xor
repz
andb
cmp
and
ljmp
popf
and
daa
test
js
test
enter
in
inc
dec
cmpsl
and
mov
sbb
insl
test
bound
adc
adc
leave
xor
ret
jmp
push
add
pop
or
xchg
frstor
aad
pusha
xorb
xchg
mov
sbb
pop
sahf
xlat
imulb
cwtl
mov
je
je
insl
cltd
mov
lea
push
cltd
clc
jg
stos
adc
dec
dec
pop
call
cmp
inc
lock
in
cld
pop
in
rorl
xchg
dec
jno
sbb
mov
pop
aas
mov
movsb
pop
aam
lret
out
sbb
jg
and
mov
fistpll
out
cli
mov
pushf
add
add
imul
pop
sbb
test
pop
inc
ret
cmpsb
mov
nop
sub
sbb
std
pop
insb
in
sahf
adc
call
popf
les
repnz
jle
mov
insl
cmp
das
ret
add
shlb
jns
mov
inc
mov
in
mov
dec
jnp
xchg
fcomi
arpl
xchg
stos
dec
and
mov
push
shlb
pop
mov
sub
adc
js
stos
xor
xlat
cmp
je
out
mov
xor
and
test
push
hlt
xchg
mov
decb
ss
faddl
sbb
mov
nop
ret
mov
inc
mov
xchg
outsl
cmp
add
jbe
test
adc
jge
sub
fs
rorb
aam
jle
shlb
xorb
aad
dec
dec
ret
sbb
cld
and
mov
add
adc
lret
aad
imul
out
loopne
aam
testb
xchg
inc
push
xor
aas
inc
dec
pop
lea
repz
or
mov
or
pop
in
xlat
imul
mov
into
shlb
repnz
mov
dec
aaa
test
fwait
lods
popf
and
mov
mov
and
movsb
sbb
jg
pop
ljmp
dec
rolb
std
shrl
addr16
sbb
sub
loope
mov
cltd
push
xor
fs
sbb
test
outsb
aas
je
xchg
xor
hlt
xchg
dec
push
sbb
in
insl
inc
push
aad
js
mov
dec
and
inc
add
rol
stos
sub
aas
adc
xor
pxor
xchg
jge
icebp
pop
push
subb
les
push
jb
sub
xchg
jb
iret
pop
test
dec
in
inc
pushf
cmc
mov
jb
outsl
lahf
add
mull
sub
mov
in
or
arpl
add
pop
jle
jg
cmp
lahf
loope
adc
mov
out
daa
pop
sbb
enter
xor
pop
ret
add
jge
dec
cmc
fimuls
test
xchg
int
int
push
popa
jecxz
sub
push
sbb
push
in
loop
loope
inc
insl
pop
or
cmc
xlat
and
scas
push
js
mov
loop
in
fwait
pop
nop
cmp
iret
mov
push
lods
sub
mov
jge
sub
mov
inc
fdivp
dec
jno
sub
movsl
mov
cwtl
mov
aam
movsl
inc
add
jecxz
and
push
cmpsl
mov
sub
xchg
nop
sahf
and
mov
xchg
xor
jg
dec
push
aam
test
jecxz
lret
cld
popa
popa
xorl
fadd
jp
dec
jbe
jnp
imul
xorl
je
dec
divb
dec
jecxz
enter
cwtl
jle
mov
xor
rcrb
dec
mov
fldcw
pushl
daa
fiaddl
mov
jg
mov
imul
xor
mov
dec
scas
sbb
mov
xchg
out
outsb
dec
rcr
mov
addr16
mov
jne
jne
cmpsb
and
inc
dec
xchg
icebp
fstpl
push
ja
push
hlt
add
and
es
inc
repnz
sub
jae
mov
ret
xchg
push
testb
addr16
inc
cmc
stos
xor
out
test
pop
sub
arpl
jmp
cmpl
jecxz
sub
fsubl
std
aas
cltd
fdivrs
es
lods
test
xchg
loop
stos
inc
push
add
cmp
inc
sub
out
xchg
push
cmp
cltd
dec
xchg
sbb
push
cmp
cmp
bound
aas
jbe
out
std
mov
inc
dec
xchg
out
cltd
js
fsub
scas
xchg
pop
incl
dec
jecxz
stos
and
and
into
sarl
decb
jle
ljmp
xchg
das
scas
mov
push
je
clc
pop
mov
cli
xor
dec
shlb
dec
scas
mov
fmulp
cs
dec
push
in
ret
or
stos
mov
ss
jns
dec
xchg
int3
mov
push
fmul
repnz
add
dec
aam
inc
adc
inc
cmc
test
mov
shlb
mov
sti
jnp
out
add
das
inc
popa
xchg
in
jo
les
rcrl
out
in
pop
hlt
jnp
sub
call
outsl
int
pusha
or
into
push
loopne
iret
add
movsb
ljmp
xor
sub
mov
movsb
mov
xchg
mov
pop
dec
popf
xor
lock
ds
inc
mov
xor
ret
stos
in
cld
aaa
sbb
pushf
inc
add
dec
adc
pushf
shl
and
jg
xchg
daa
sbb
jle
loopne
dec
and
lds
imul
jmp
inc
out
aaa
fdivrp
inc
mov
loope
scas
sbb
pop
loopne
ret
loop
and
adc
jb
mov
add
inc
mov
insl
push
pop
cltd
pop
jp
dec
fstp
add
inc
mov
pop
fs
adc
sbbb
xorl
outsb
dec
mov
jg
and
fisubrs
and
mov
int
and
or
pop
xlat
sti
cmpl
lahf
loopne
add
push
in
pop
mov
pop
xchg
lcall
jecxz
outsl
push
mov
mov
jge
shrl
pop
sub
pop
pushf
cld
adc
pop
fs
xchg
div
jg
mov
jle
inc
out
mov
jge
cli
addr16
repz
fnstsw
inc
test
ds
jp
pop
push
fistl
or
pop
mov
fwait
cmp
push
or
xchg
push
iret
out
mov
mov
lds
fcomps
push
imul
pushf
mov
das
iret
insb
xchg
int3
pusha
pop
cwtl
sbb
fimuls
adc
mov
jp
dec
cltd
movsl
dec
insb
pop
sbb
cmp
xchg
mov
pop
and
add
mov
std
sbb
dec
and
ret
sti
xchg
jne
js
mov
sar
in
shl
std
inc
out
in
xlat
mov
ds
push
push
mov
sbb
pop
push
loop
xchg
fs
pop
add
test
out
ljmp
push
cli
dec
shlb
inc
stos
std
lret
cmc
push
aad
enter
cmc
dec
sbb
lock
ljmp
push
pusha
add
lock
jb
adc
sbb
and
out
mov
jno
pop
dec
inc
push
mov
lods
loope
xorl
mov
gs
adcl
popf
sbb
call
xchg
es
push
inc
les
and
lret
mov
jnp
fistpll
inc
loope
out
sub
mov
xchg
pop
fwait
insl
mov
adc
mov
push
cmp
popf
decl
cmp
dec
leave
daa
fcmovnu
and
sub
pop
cltd
stos
call
ljmp
nop
push
pushf
popf
push
mov
push
dec
mov
ret
push
jne
mov
movsb
adc
leave
push
mov
rolb
sub
jo
sub
xchg
adc
and
fstl
sbb
jo
pop
subb
jp
in
js
movsb
mov
loop
divb
arpl
jnp
std
das
and
push
sbb
mov
gs
add
adc
pop
pusha
int
or
push
xor
into
pop
mov
xchg
dec
and
jae
pop
xchg
aas
pop
aaa
aaa
pop
fldl
inc
lret
pop
aad
jg
adc
push
imul
xor
xchg
xor
popa
jecxz
addr16
dec
ret
cmp
push
dec
jnp
mov
sub
jb
subl
fcoms
mov
jns
pop
stos
scas
fcoml
fisttpll
fdivrl
call
shll
or
xchg
int3
fs
out
or
adc
in
frstor
flds
add
rol
aad
int3
sub
inc
cld
out
cld
jle
mov
icebp
pop
or
pusha
ficoms
add
jle
cmp
fstpl
add
jno
cmp
icebp
mov
fcmovb
lahf
pop
mov
mov
popf
aad
adc
add
jnp
mov
mull
imul
jae
andb
cltd
adc
inc
sbb
and
mov
xor
mov
in
loope
pop
mov
scas
dec
loope
leave
fwait
or
adcb
lods
push
das
lods
inc
add
nop
jno
adc
sub
cltd
push
cltd
stos
cmpsb
icebp
or
adc
inc
js
cwtl
arpl
je
leave
push
stos
xor
cli
popa
rorl
mov
lret
mov
aad
pushf
mov
or
dec
daa
sbb
lret
sub
xor
ret
sub
imul
inc
into
jnp
and
push
stc
and
adc
jmp
int3
pop
sbbl
mov
mov
loope
sub
mov
sub
add
cwtl
out
loope
inc
push
lret
scas
push
xchg
and
mov
xor
push
into
mov
cmp
sbb
adc
in
daa
loop
sahf
adc
cmp
outsb
lret
shll
aad
or
negl
sub
cli
adc
inc
sub
es
data16
insb
push
cld
adc
outsb
repz
mov
push
or
xchg
jmp
and
and
cmc
jmp
mov
add
mov
pop
add
dec
inc
decb
pop
int3
add
xchg
ss
fstp
cmpsb
imul
decb
inc
lods
cltd
lods
mov
add
mov
add
dec
cmp
fsubrl
leave
mov
rcrb
fistpll
adc
in
decb
add
xchg
xor
cmp
and
hlt
xchg
xor
mov
inc
fst
data16
es
jmp
fisubrs
dec
stos
pop
xor
cmpsl
std
xor
imull
sub
loope
or
inc
pop
jle
flds
fs
fdivrl
mov
fcoms
cmp
add
pop
cmp
aad
gs
repnz
imul
and
inc
std
jno,pt
push
push
test
dec
xchg
fistpll
and
aaa
cli
mov
popf
inc
in
sub
mov
int
or
inc
push
jb
lods
cmp
inc
pop
testb
fsubl
mov
cmp
push
es
or
inc
or
aas
movsl
adc
test
or
pushf
jne
pop
sub
outsb
shl
std
sbb
test
nop
test
andl
ljmp
fdivr
pop
incb
inc
mov
lds
mov
jmp
les
popf
mov
xor
push
and
dec
call
xor
add
in
pop
out
cmp
std
ljmp
or
xchg
cmc
daa
pop
add
inc
or
in
shrb
push
mov
xor
test
out
arpl
push
sar
mov
outsb
sub
pop
dec
leave
stos
fsubs
enter
jbe
dec
fcomi
call
xor
jl
inc
addr16
mov
sub
shl
pop
lret
fwait
push
ret
and
rcr
daa
fnstenv
add
xchg
hlt
xchg
xchg
push
inc
sbb
inc
popf
jmp
cmc
cmp
test
mov
xor
pop
jg
xchg
mov
fsubl
in
inc
je
jno
leave
movsb
cmp
call
or
imul
pushf
aad
xchg
addr16
adc
push
push
outsb
or
add
mov
pop
cmc
jo
and
dec
movsl
movsb
fdivl
add
inc
or
jmpw
push
jo
leave
xchg
push
test
pop
pop
pop
dec
xchg
and
pusha
aad
clc
pop
or
arpl
lods
add
cwtl
dec
call
mov
mull
xor
out
fisubrl
inc
dec
jecxz
fs
daa
inc
jp
mov
cmpsl
icebp
sarb
cmp
pop
repnz
mov
pop
fnstsw
cmpsb
leave
aaa
mov
insb
loop
sub
icebp
insb
adc
add
cld
jno
xorb
push
adc
and
push
fmull
notb
xchg
jnp
mov
icebp
scas
dec
int3
loope
xor
out
popl
cmpsb
sbb
mov
rclb
vhaddps
cs
faddl
cmp
or
sub
mov
adc
dec
inc
cmc
icebp
inc
push
lret
test
cltd
jo
push
mov
add
rcll
add
fiadds
outsb
ljmp
add
lods
mov
sbb
shll
mov
xchg
mov
sbb
js
in
pop
loope
pop
push
insl
pop
out
jge
scas
js
mov
lds
or
movsb
pop
dec
cmp
pushf
pop
sbb
jne
jge
xorl
push
or
add
sub
sarl
dec
loope
xchg
cmp
in
fcmovnu
mov
lods
pop
jl
dec
adc
stc
mov
ss
pop
mov
xchg
sub
stos
ss
mov
cmp
jne
loop
mov
adc
sbb
mov
enter
sub
jmp
or
rclb
jno
shll
jecxz
cmp
loope
dec
nop
loopne
pushf
stos
hlt
adc
lock
fsub
or
and
mov
dec
std
imul
xor
bound
or
ljmp
jo
je
adc
idivl
adc
dec
or
or
xchg
jns
int3
cmpsb
dec
mov
sub
lods
mov
mov
sub
xor
pop
adc
pusha
adc
cs
repz
mov
mov
loope
mov
cmp
call
arpl
scas
inc
push
clc
and
sbb
ja
mov
mov
xor
dec
iret
imul
int
xor
mov
and
insb
enter
jo
icebp
fstpt
sub
enter
fisttps
ficoms
fwait
test
dec
dec
negl
pop
int
rcrb
lret
add
addl
cmpsl
jbe
inc
and
cmp
push
mov
aaa
sbb
dec
sub
gs
das
mov
push
mov
loopne
and
dec
pushl
repz
mov
mov
orl
into
dec
mov
jge
lds
xchg
out
movsb
sbb
lcall
arpl
data16
icebp
jmp
out
pusha
pop
scas
push
cltd
aam
cmp
add
inc
roll
dec
mov
push
mov
insb
dec
xor
jne
push
jl
fadds
aad
jno
test
or
movsl
std
adc
xchg
pop
adc
fs
mov
xor
sti
xchg
cmp
cmpsb
push
repz
mov
subl
cmp
jmp
test
push
insl
dec
shrl
scas
fnstsw
sbb
xchg
push
aas
out
jo
negb
pop
mov
sti
sub
arpl
mov
cmpsl
mov
adc
repnz
push
mov
scas
jp
ljmp
push
mov
push
mov
dec
fisubl
loopne
or
icebp
xchg
int
jo
or
jg
loope
add
xchg
divl
add
popa
xor
jb
aas
or
add
or
dec
or
push
rcrl
xorb
jb
pop
outsb
pop
fists
icebp
into
mov
push
add
add
add
adc
stos
or
out
or
xchg
data16
test
xor
stos
adc
hlt
lock
mov
inc
mov
sbb
inc
lock
pop
sbb
mov
add
sub
movsl
mov
test
lods
adcb
sahf
inc
aaa
fxam
das
je
and
or
or
jp
jnp
sbb
mov
pop
scas
pop
lret
lea
loopne
pop
out
and
lea
lret
mov
stc
mov
popf
cld
adc
cwtl
and
mov
pushf
mov
inc
pop
xor
icebp
ja
sub
popa
push
or
in
test
out
movsb
cmp
dec
dec
dec
jmp
sbb
test
cmp
outsl
mov
xor
enter
sub
rorl
popf
dec
into
test
ss
adc
shrb
xlat
ljmp
dec
xor
push
loope
and
pusha
lret
jne
lods
sub
cs
xchg
mov
pop
jle
les
mov
punpckldq
rcll
dec
sub
push
inc
xor
out
add
fistpll
xor
add
inc
and
outsb
stos
repz
cld
cli
cmp
fbstp
popa
push
and
cmpb
xchg
jle
pop
mov
movsl
lods
mov
pop
adc
push
inc
outsl
insb
ja
in
inc
out
pop
pop
xor
adc
das
and
push
cs
mov
push
pushf
bound
shll
jbe
inc
dec
add
movsl
aad
addr16
fistps
pop
add
mov
push
pop
hlt
xchg
push
pop
aad
mov
xchg
into
lret
fcompl
insl
dec
sysenter
stos
lahf
movsl
lret
xchg
or
imul
sti
fnstsw
cmp
rcll
shll
xchg
cmp
fiadds
cmp
addr16
lret
mov
adc
adc
outsb
ret
addr16
mov
in
dec
xor
or
lock
test
xchg
cmp
hlt
arpl
mov
fisttpll
ss
mov
pop
adc
ljmp
xchg
ret
into
or
jmp
add
clc
sub
nop
out
mov
mov
repnz
imul
pop
imul
ret
xor
cmp
mov
or
jp
xor
jmp
fsubr
pop
imul
pop
popa
std
add
in
inc
shrb
sbb
stc
das
sbb
cmp
sbb
ficomps
xchg
mov
daa
push
fildl
sbb
fstl
rorl
mov
loop
mov
jp
mov
jns
sbb
inc
mov
cmp
ror
push
sti
les
addr16
sub
sarl
test
ljmp
push
sub
ja
lea
fnsave
out
fdiv
push
xchg
mov
dec
repnz
dec
pop
sbb
cmpb
outsb
and
push
mov
push
pop
loope
rolb
or
cmp
stos
jb
arpl
pop
xor
lret
pop
shll
push
ja
cli
or
test
add
pop
js
in
sub
jnp
xor
add
and
ret
into
sub
aas
xchg
loopne
adc
faddl
and
mov
push
xchg
inc
mov
dec
mov
les
es
dec
movsb
shr
push
mov
lahf
mov
mov
addr16
shlb
lea
xchg
pop
jns
dec
jno
add
adc
jo
fnstcw
cmp
lock
into
fsubrl
xchg
in
or
mov
xchg
sbb
mov
imul
sub
pop
stc
xor
call
push
movsb
dec
mov
adc
ss
adc
add
push
add
insb
in
cwtl
hlt
and
mov
inc
aas
push
iret
fdivrs
xchg
mov
adc
mov
mov
mov
sbb
push
dec
fcoms
sub
addr16
ds
hlt
sahf
or
pop
jmp
movsl
imul
scas
add
inc
fistpl
lea
xor
cmp
js
ret
xchg
scas
addl
cld
dec
fsubs
push
rcrl
mov
aam
fwait
loop
sub
pop
jae
pusha
add
push
xchg
xchg
call
xchg
fadds
pop
jl
sbb
data16
sahf
xchg
push
push
push
aad
mov
mov
mov
sbb
iret
jo
inc
movsl
mov
sbb
fldenv
sbb
sub
mov
inc
xchg
mov
xor
out
aaa
push
fwait
aad
inc
adc
or
add
xor
mov
or
push
xor
sub
out
adcb
sbb
inc
dec
aas
int
imul
mov
imul
pusha
xor
fucomi
push
jbe
or
push
roll
test
cmp
pop
inc
cld
aaa
or
out
sub
pop
or
sbb
lods
cmpsb
jb
movsl
mov
add
lea
sub
pop
bound
hlt
xor
fiadds
decb
ficoms
stos
cmp
inc
mov
and
outsb
repnz
outsl
popa
mov
push
dec
and
int
imul
inc
in
lret
clc
and
lret
cmp
adc
mov
cmp
sbb
push
stc
or
inc
movsl
das
ja
push
push
cmp
movb
push
inc
pop
pop
mov
pusha
cld
mov
into
push
push
mov
ds
mov
es
cmp
int3
adc
loop
and
xchg
shll
adc
arpl
fs
scas
inc
jae
leave
bound
popa
pushw
pop
push
ficoml
xor
in
aas
fisttps
and
out
push
sub
cmc
xor
cwtl
jmp
subb
sub
cmp
arpl
jnp
dec
addr16
jb
mov
add
ds
mov
loope
out
cmp
add
or
mov
mov
nop
mov
stc
lret
pop
pop
shll
adc
inc
sti
test
pop
jmp
and
rcpps
jae
cmp
ret
aas
bound
stos
bound
pusha
xchg
sbbb
mov
sub
outsl
lahf
xchg
push
negb
subl
inc
mov
inc
imul
and
inc
push
subl
inc
inc
arpl
pop
ret
xchg
outsl
arpl
push
lea
jp
mov
fldcw
les
imul
pop
lock
adc
jge
test
insl
xor
imul
sbb
push
aaa
mov
pop
pop
jle
pand
inc
ljmp
adc
cmp
fwait
pop
cmp
iret
cmpsb
dec
jle
add
aaa
mov
roll
or
mov
fs
xchg
lock
sub
mov
aaa
inc
mov
and
pop
and
mov
pop
mov
fsts
or
push
pop
test
aam
pop
lods
ret
cmp
mov
xchg
in
mov
paddusb
cmp
push
scas
test
xchg
cs
jmp
and
ljmp
scas
sub
cli
ret
fwait
loope
sbb
inc
mov
xchg
mull
loopne
jge
mov
jo
ljmp
and
test
and
mov
add
inc
sub
popa
pop
pop
pop
and
mul
jmp
and
les
cwtl
aas
cld
sti
and
pop
sub
hlt
movsl
scas
fmulp
push
into
and
mov
ja
loopne
enter
dec
bound
inc
inc
lret
nop
lds
push
in
jge
subl
movsl
pop
adc
or
fsubs
xor
lret
inc
xchg
out
scas
pop
cltd
enter
repz
in
mov
inc
ja
sbbl
add
outsb
or
iret
mov
jecxz,pt
lods
scas
insb
fisttps
sbb
fbld
mov
jmp
jge
fucomip
aas
insb
push
xchg
xchg
mov
push
rcrb
rcl
inc
sahf
mov
push
push
add
jp
push
lods
sub
aad
add
or
js
movsl
mov
mov
inc
scas
ficoml
sub
pop
xchg
xchg
jns
xchg
repz
sbb
jg
dec
adc
fldz
stos
shl
aaa
lret
cmp
fcomps
xchg
cltd
mov
push
dec
pop
dec
rorb
jbe
mov
icebp
add
popf
rolb
daa
add
pop
jl
test
fwait
adc
mov
or
push
mulb
mov
push
cmp
mov
les
ljmp
jo
jae
xor
xor
fisttpll
mov
popl
andb
ret
fwait
ret
cmp
ss
push
stc
pop
cmp
lods
push
add
cld
dec
icebp
cmpsb
addr16
repz
mov
ljmp
cmpsl
xor
in
jae
xor
jecxz
sub
cwtl
popf
call
lea
into
ja
int3
lea
outsl
adcb
sahf
dec
xchg
sub
mov
lcall
aas
movsl
ja
cmc
or
jge
pop
sahf
jns
xchg
mov
jg
int
dec
je
jecxz
arpl
test
ss
pusha
inc
clc
in
jg
or
loopne
cwtl
shll
xchg
pop
sbb
pop
pushf
into
in
xchg
mov
or
lds
inc
mov
pop
scas
daa
push
out
lock
dec
and
sbb
mov
lahf
sbb
and
push
imul
out
int3
inc
mov
dec
jl
movsb
adc
sbb
lcall
mov
inc
cmpsb
aam
mov
inc
subb
pop
inc
rolb
lret
imul
cs
das
fwait
sahf
mov
xchg
push
sub
cli
mov
jle
lret
jbe
or
loopne
sub
sbb
scas
cmpsl
xchg
jb
dec
pop
ljmp
iret
and
cld
addl
xchg
popa
inc
jmp
mov
sbb
jo
sahf
push
clc
cmp
out
fists
xor
mov
pop
shl
pop
adc
lods
cmp
rclb
jmp
pop
loopne
aaa
in
scas
mov
sub
and
sahf
fnstcw
popl
and
hlt
jb
adc
lcall
addr16
shll
dec
inc
xchg
push
popf
jmp
stos
dec
mov
xchg
cs
pop
push
cmp
push
lds
mov
sub
push
ret
sbb
ds
insl
sub
cmp
inc
dec
inc
pop
addr16
fldpi
std
pop
mov
cwtl
mov
mov
sub
aad
xchg
insl
push
ss
in
mov
addr16
sub
in
in
xchg
lods
xchg
mov
int
jo
sbb
sub
repnz
xor
cwtl
lods
inc
fimuls
push
pop
loope
mov
lock
lock
jmp
inc
leave
lret
add
out
call
mov
mov
sub
add
or
pop
mov
mov
imul
jbe
leave
cwtl
cs
cmp
test
mov
push
sub
push
mov
mov
out
mov
lea
xchg
dec
inc
jnp
pop
dec
or
sub
pop
xor
scas
popf
and
sub
in
xchg
js
jecxz
in
jne
repz
xchg
xor
pop
arpl
in
adc
mov
sbb
stos
dec
pop
lea
add
push
dec
icebp
sub
es
or
cli
pop
push
mov
hlt
lcall
xchg
sbb
sbb
stos
fimull
std
mov
es
push
orl
clc
xchg
movsl
mov
cmp
aam
mov
add
nop
mov
push
fistps
lret
addb
inc
adc
popf
add
out
or
jne
jmp
dec
repz
aaa
clc
out
lea
push
adc
les
mov
jg
loopne
dec
mov
sbb
sbb
ret
dec
jno
sub
popa
fldt
test
inc
imulb
call
ss
fiadds
pop
sub
jno
inc
jb
xor
and
lret
daa
int3
mov
sub
mov
movsb
and
xchg
or
imul
or
stos
loopne
pop
mov
jecxz
inc
mov
fs
scas
mov
sbb
sbb
inc
pop
mov
push
sub
jge
cli
stos
xor
jne
lret
les
mov
pop
push
sub
adc
jnp
dec
xlat
scas
iret
inc
jp
test
int
lods
test
xchg
xor
stos
xchg
xor
push
popf
push
sub
push
mov
testl
adc
push
jmp
loop
cmpsb
in
dec
jbe
cmp
add
xchg
and
pop
ljmp
sbb
je
or
sti
jle
mov
cmpsb
stc
or
lcall
cmpsb
scas
or
pusha
imul
adc
insl
fucomp
sbb
mov
xchg
jno
outsb
cmp
xchg
js
in
gs
lods
mov
jge
adc
aaa
lea
fs
adc
push
dec
and
test
and
imull
cmp
ret
mov
mov
decb
int3
aam
shlb
inc
pusha
xchg
xchg
push
lret
cmp
and
mov
mov
fstpt
fcompl
arpl
pop
pushf
loop
xor
sbb
add
mov
pop
cwtl
bound
jmp
pop
adc
ror
pop
sub
push
lret
or
mov
push
push
ljmp
imul
icebp
adc
and
pop
mov
rolb
xchg
sbb
addb
add
sahf
outsl
test
jecxz
mov
adc
mov
jmp
and
jecxz
mov
in
sub
push
xchg
pop
push
mov
add
push
pusha
push
out
sbb
leave
leave
mov
and
xchg
rolb
cmp
ret
int3
mov
push
enter
pop
adc
rcl
lahf
out
or
mov
mov
arpl
loope
es
dec
test
inc
stos
mov
rolb
and
inc
test
mov
push
or
sahf
mov
mov
out
int3
pop
cld
cwtl
in
repnz
loop
mov
jp
hlt
and
cmpsb
shr
mov
sub
pcmpgtd
lods
push
dec
jbe
xchg
dec
mov
cmpsl
imul
mov
mov
xor
andl
testb
negl
mov
xchg
jecxz
inc
stc
jecxz
inc
test
testb
test
sbb
outsb
pop
lods
bound
push
dec
mov
fwait
xchg
es
es
xchg
add
test
pop
mov
ds
adc
call
and
sbb
mov
add
cmp
lret
xchg
jne
push
outsb
mov
mov
mov
shr
fldl
test
aad
pop
xchg
enter
lcall
and
or
add
mov
addl
add
jo
mov
cltd
ss
mov
mov
mov
xchg
sbb
mov
xchg
cmc
mov
jle
lods
lcall
sub
ds
test
mov
cmp
dec
or
mov
enter
mov
jnp
divb
mov
mov
mov
pop
lods
mov
ja
sahf
pop
fsub
movsb
test
push
sar
pop
fcmovnu
cld
pop
stc
push
xchg
sub
add
ljmp
shrl
and
xchg
xlat
fwait
dec
sub
sarb
adc
jecxz
ret
fcmovb
push
popf
or
fcoml
and
les
rolb
sbb
jnp
pop
pushf
fimull
and
nop
testb
popa
adc
sub
test
ja
and
jmp
out
fdivrl
in
pop
clc
mov
std
inc
mov
push
add
out
mov
fadds
adc
mov
and
cltd
enter
jne
out
imul
jecxz
insb
shlb
loopne
sub
and
pop
push
pop
push
mov
fisttpll
andb
pop
jecxz
mov
and
loope
pop
outsb
sub
and
popa
or
push
ficompl
rolb
fsts
lret
pushf
call
jno
jle
divb
jns
xor
in
int3
lret
es
push
lret
imul
mov
lods
cmpsb
outsl
mov
adc
cs
cmc
pop
fwait
int
sbb
fdivrs
push
rcrl
sub
mov
push
ljmp
dec
cs
sbb
push
test
fwait
call
and
mov
and
mov
lea
ljmp
or
mov
pusha
or
add
testl
in
push
rolb
outsl
cltd
push
fnstsw
sub
ret
mov
cmp
insl
push
out
cmp
aas
sub
dec
lds
push
fistpll
mov
push
in
icebp
inc
std
wrmsr
and
xchg
fistl
xor
test
ret
sbb
mov
shlb
or
dec
mov
popf
xor
cmp
test
pop
xor
test
xchg
and
jmp
push
icebp
mov
test
cmpsl
inc
jae
mov
jo
mov
cld
adc
dec
mov
jmp
inc
std
out
xor
cmpsb
cmp
push
push
imul
test
jp
add
adc
test
dec
and
sbb
cmp
in
jb
sti
in
loopne
jbe
dec
push
or
in
jg
in
sbb
dec
loope
pop
inc
jl
mov
jns
out
mov
loop
lcall
outsb
add
arpl
stos
imul
sbb
rorb
cltd
sti
hlt
loopne
sti
aam
push
jno
inc
xchg
cmpsb
call
out
bound
ret
test
daa
test
mov
and
ret
call
cmp
lret
adc
mov
xor
inc
iret
ficompl
dec
dec
ljmp
std
shrl
xchg
cmp
push
outsb
xor
cmpsb
inc
and
push
fbstp
je
repnz
lret
cwtl
lods
add
cs
xchg
fiaddl
scas
add
repnz
adcb
shl
jns
and
loope
call
xor
iret
clc
dec
rorb
xchg
xlat
int3
cmp
mov
cmp
shr
push
in
mov
stos
iret
xchg
test
mov
push
dec
pushf
mov
testl
dec
aas
lods
jnp
mov
aaa
mov
dec
lea
mov
sbb
sar
mov
pushl
shlb
hlt
sbb
jmp
dec
lahf
fs
xchg
push
add
and
push
and
bnd
xchg
sbb
daa
mov
into
lcall
lret
dec
ret
loop
pop
adcb
inc
js
int3
data16
lock
cmp
sub
pop
pusha
subb
insl
pop
jnp
push
into
push
inc
add
ss
cld
mov
sbb
sbb
mov
jg
imul
or
xor
sbb
pop
loope
or
daa
mov
shl
pushf
jb
jbe
out
xchg
adc
dec
repnz
sub
or
push
mov
jg
sub
fsubs
lods
cmp
ljmp
sbb
push
mov
dec
insl
fdivrl
addr16
cmp
pop
stos
mov
out
data16
push
jae
or
sub
lcall
push
lret
pusha
sub
mov
push
jo
inc
ljmp
mov
xchg
add
jecxz
rorl
ja
inc
loop
inc
jbe
addl
xchg
cltd
shrb
inc
cs
xor
stos
push
mov
test
sti
jb
sub
mov
xchg
cmpsb
mov
je
mov
jae
jae
push
fsubr
jle
mov
lcall
and
mov
in
movsl
and
xchg
or
test
repnz
jl
in
pusha
xchg
movb
adc
add
jbe
dec
scas
decl
cmpsb
loope
mov
xchg
inc
std
jae
sbb
and
enter
dec
in
dec
inc
inc
mov
enter
call
hlt
xchg
cmp
sub
mov
lea
outsb
xchg
mov
notl
mov
pushf
adc
dec
sarl
sub
test
lods
xor
inc
cmc
popa
cs
jl
scas
shlb
roll
mov
ficoml
adc
mov
sahf
insl
push
in
jle
and
cmp
add
lods
cltd
mov
and
sbb
push
hlt
loop
dec
xor
mov
shl
inc
or
mov
lret
insl
pushw
aas
mov
enter
mov
das
dec
fucomip
xchg
xor
rolb
cmpsb
in
mov
xor
rorb
bound
outsl
or
out
mov
or
lahf
or
or
add
xchg
adc
ss
inc
xchg
or
jmp
jns
mov
jl
sub
out
push
lcall
push
mov
adc
loope
aam
loop
and
cs
cmpsl
cmc
popa
cmp
jnp
stos
xlat
xchg
xchg
push
pop
adc
pop
mov
call
sub
call
pop
mov
xor
mov
popa
pop
loop
or
sub
xchg
sti
rol
ret
iret
or
ljmp
jle
stos
cmc
je
sub
jmp
test
push
sub
push
adc
in
sbb
lods
lock
xchg
jo
bnd
cmpsl
fisubl
mov
out
push
inc
inc
aaa
mov
pop
inc
stos
xchg
mov
insl
in
push
mov
int3
arpl
movsl
outsb
inc
sbb
pushf
mov
sbbb
aam
aas
mov
cmp
adc
icebp
xchg
loopne
push
popa
push
or
xchg
shld
rcll
sub
jnp
out
sub
imul
sti
ret
fcmovnb
sbbb
cmp
outsl
rcr
jg
cmp
sub
cli
mov
fwait
rolb
sub
xchg
inc
in
cld
push
xchg
xor
pop
imul
xchg
xor
sub
imul
jl
stos
cli
insl
push
mov
mov
jl
fcomps
mov
dec
xchg
pop
into
mov
xchg
push
outsl
repnz
mov
xchg
pusha
mov
adc
fldenv
sbb
sub
push
add
mov
inc
cmpsl
add
mov
gs
movsb
ds
xor
test
loop
aad
fisubs
jl
ficoms
mov
dec
cwtl
jge
or
popf
test
ss
jnp
in
jecxz
dec
out
and
xchg
test
sbb
repz
in
mov
xlat
ljmp
bnd
out
mov
arpl
pop
mov
dec
fimuls
int3
xchg
or
push
test
and
fisttpl
out
je
out
jno
mov
loop
popf
lahf
out
pop
js
stc
rolb
xchg
xchg
add
xchg
inc
decb
stc
dec
and
adc
jmp
in
dec
shrb
and
out
lret
fiaddl
pop
adc
jno
or
xchg
mov
out
and
jnp
lds
push
jecxz
ret
in
insb
testb
addr16
out
dec
je
aaa
stos
in
adc
test
fwait
add
imul
dec
jns
sahf
mov
pop
fst
stc
mov
sahf
mov
xor
adc
test
mov
xchg
sub
xor
adcb
pop
mov
or
xchg
jmp
aam
mov
mov
sbb
gs
adc
lret
ficompl
dec
jae
out
or
lds
sub
je
xchg
test
mov
in
adc
dec
in
repnz
in
lcall
lock
dec
lods
stc
shl
dec
cmp
int3
mov
push
xor
loopne
call
jmp
mov
cmc
mov
jae
cwtl
inc
dec
mov
cmp
cmp
out
fdiv
addr16
pop
test
lods
pop
je
jbe,pn
push
test
push
push
sub
mov
push
incl
outsl
inc
mov
dec
js
or
push
jle
mov
xor
psubq
cmp
mov
pushf
push
out
fwait
mov
fucomp
leave
es
dec
rcl
push
mov
and
scas
into
cltd
dec
sub
inc
xor
stos
sbb
sti
cli
dec
movsb
sub
jecxz
hlt
fs
jae
hlt
pop
dec
hlt
mov
cmpsb
outsb
daa
sbb
jg
test
xchg
cmc
ja
mov
jmp
mov
lea
popf
lret
push
rolb
sub
sub
loop
xor
or
cwtl
hlt
mov
jns
push
ljmp
lahf
xor
dec
push
inc
inc
lret
clc
inc
xor
sbb
stos
and
dec
fcmovbe
ja
pop
gs
pop
dec
mov
addr16
xlat
inc
cmp
xchg
stos
negl
cmp
xchg
mov
sbb
adc
sbb
xchg
cmpsl
cmp
sbb
xchg
fdivr
cmpsb
jns
rorb
push
fs
ljmp
pop
movsl
add
mov
dec
sbb
cwtl
mov
aam
stos
cmpsl
pop
push
sub
ss
test
xor
xchg
mov
jne
push
jne
sti
into
popf
cwtl
mov
pop
in
pop
cwtl
pop
rcl
mov
mov
push
fcmovne
xor
pop
fdivrp
in
aam
ja
and
push
xchg
pop
test
inc
ljmp
mov
add
push
xchg
stos
std
fwait
jmp
mov
ret
sub
xorl
jns
sub
inc
xchg
add
insl
test
pop
fdiv
inc
rorb
dec
push
mov
mov
inc
jae
aad
inc
inc
jmp
jge
adc
xchg
cmp
test
fistl
cltd
inc
jecxz
xchg
cli
rolb
mov
sahf
and
in
cld
stc
cs
pop
dec
aad
mov
imul
pop
shr
dec
jne
or
fnstenv
mov
test
lret
jnp
add
xchg
cmc
add
bound
mov
mov
cmpsb
imul
int3
mov
ror
sbb
cmp
jmp
icebp
ljmp
xchg
inc
ja
mov
leave
loop
in
and
dec
test
enter
sbb
xor
iret
popa
mov
outsl
mov
nop
es
mov
dec
xchg
fnstenv
shrl
lcall
sub
xorl
popa
stos
lea
push
mov
mov
xor
push
loope
icebp
and
cmp
data16
mov
ss
inc
bound
std
pop
jne
test
push
push
mov
nop
push
iret
jge
fwait
data16
jmp
inc
pop
or
repnz
filds
mov
jno
sub
add
stos
imul
cmpsb
sub
repnz
ret
jmp
mov
jns
lcall
arpl
mov
fcmovu
mov
xor
mov
add
or
dec
in
cmp
cli
mov
fsts
sub
mov
ficoms
fsubr
pop
and
imul
stos
repz
adc
jp
fnstcw
jp
mov
jg
or
sbb
push
es
lods
dec
std
repz
mov
ljmp
cmp
mov
adc
xchg
in
ljmp
lret
xor
mov
inc
cld
xchg
lahf
dec
sbb
leave
push
gs
inc
dec
mov
scas
inc
sub
add
cmp
ljmp
or
aaa
jg
and
lods
cmp
cli
push
jp
xchg
scas
cwtl
push
not
add
loopne
ja
in
popf
xchg
add
shll
insb
aaa
cli
fldt
sub
jg
scas
xchg
jnp
les
dec
inc
add
je
lret
mov
fstps
or
xor
js
push
testb
subb
sbb
adc
mov
dec
and
daa
outsb
repz
leave
pop
popf
cmp
sub
hlt
fiadds
or
add
fdivl
push
fsubs
andl
dec
jp
jno
jno
and
loope
push
add
test
outsb
insb
ss
test
push
dec
cltd
addr16
lret
inc
movsl
xor
lret
iret
pop
push
frstor
mov
cmc
mov
shll
mov
imul
movsl
xor
call
fldt
xor
pop
shll
je
test
aaa
mov
lods
push
cmpsb
call
scas
cmp
jmp
or
pusha
rorb
cmp
loope
dec
or
dec
rorl
dec
in
xchg
xor
cmp
xchg
mov
lock
dec
pop
dec
dec
fs
push
imul
out
sbb
fcmove
mov
insb
stos
push
mov
jno
push
in
call
cmp
or
xchg
xchg
adc
dec
repz
je
sub
xchg
arpl
arpl
lock
add
mov
imul
add
xor
and
mov
cltd
int
into
push
push
js
pop
jnp
jg
addr16
pushf
sbb
or
push
pop
aam
or
pushf
repnz
iret
cmp
xor
and
inc
add
lret
jnp
mov
rcrb
lea
dec
iret
subb
fwait
in
into
mov
popa
mov
mov
jge
pop
loope
out
out
in
lret
sbb
rolb
xchg
jbe
loopne
xor
pop
mov
add
xor
xchg
push
loopne
or
add
cmc
shrb
mov
sbb
dec
add
into
mov
push
iret
es
pop
pop
and
xchg
add
add
cmp
addr16
sub
push
mov
ljmp
sbbb
jne
lahf
je
jns
dec
inc
fwait
mov
and
pop
dec
dec
aas
int
jne
sub
bound
and
add
inc
mov
shlb
stos
inc
mov
fcmovnbe
mov
add
loop
notb
push
pop
dec
int3
xor
and
lock
addl
fs
test
pusha
xorl
shlb
xchg
mov
es
xchg
fidivs
sbb
fmulp
data16
mov
daa
sub
inc
sbb
mov
mov
stos
mov
xchg
jg
sub
mov
mov
or
hlt
sti
jecxz
inc
inc
mov
pop
rclb
cmpb
scas
idiv
lock
outsb
cmpsl
mov
add
adc
insb
sub
lock
or
xor
push
dec
sub
arpl
mov
into
xchg
or
jp
loopne
or
and
sar
in
out
fisttps
call
xor
fldt
cli
cmp
or
pop
mov
out
cmp
inc
lock
rcr
push
jmp
jbe
sbb
mov
adc
aaa
jb
in
aad
sbb
dec
sbb
fbstp
mov
dec
xchg
ret
sub
imul
jl
sub
cli
cli
xchg
fwait
mov
lea
addl
push
mov
push
sahf
jle
mov
mov
xor
xor
lds
mov
imul
mov
adc
test
pop
lock
push
ja
notl
inc
xor
add
int
jp
cmp
push
lods
aas
fwait
xor
jae
mov
cmpsl
jnp
imul
jecxz
ret
insl
pop
mov
push
test
jae
adc
nop
pop
loop
bound
sub
shlb
dec
aad
jle
rcll
dec
or
cmp
push
push
cs
ss
ja
fs
ficoms
cli
pop
popf
push
das
mov
cli
hlt
xchg
jo
and
mov
adc
inc
pop
mov
subb
cmc
push
jp
mov
lret
mov
mov
mov
xor
xchg
inc
mov
or
aas
es
bound
leave
jno
add
lock
inc
push
push
scas
jp
push
lods
xchg
mov
jno
mov
in
lock
push
add
and
sarb
stos
into
xor
test
shr
and
mov
xor
imul
loop
sbb
mov
push
lret
ret
lock
lods
bound
mov
aam
adc
mov
jle
sbb
mov
fimuls
jmp
push
mov
sarb
mov
and
fmul
mov
sbb
cmpsb
movsl
aas
stos
inc
leave
je
daa
lea
add
mov
sbb
scas
dec
dec
sub
and
pusha
xchg
inc
jg
xchg
mov
or
adcb
rcrb
shl
cmp
ret
inc
pop
imul
jmp
movsl
jns
sbb
jp
rolb
mov
cltd
jne
ficoml
xchg
scas
mov
mov
adc
testl
jbe
out
cmp
add
popa
jle
mov
xchg
jb
jmp
out
ja
and
lahf
xchg
mov
mov
int3
mov
lret
outsl
mov
pushl
pop
jbe
mov
and
push
sub
pop
or
insl
lret
push
pop
test
pop
or
push
pop
xchg
push
and
les
cmc
dec
iret
sti
push
xchg
lea
mov
movsb
dec
andl
inc
jmp
int3
cmp
xchg
insb
mov
lock
clc
push
jg
and
lea
or
mov
gs
ret
sub
jno
xlat
inc
lock
daa
xchg
std
nop
sbb
loopne
sbb
repz
cmp
cld
popa
movsl
mov
inc
mov
cmp
pop
push
mov
popa
gs
jno
lahf
push
or
push
addl
mov
pop
adc
idivb
push
cmp
xorb
pop
mov
and
jb
push
inc
add
inc
or
pusha
or
jmp
enter
stc
pop
cmp
stos
pop
mov
repnz
subl
repnz
mov
shrb
and
xchg
repnz
and
mov
push
dec
test
fsubr
dec
mov
pushf
lods
out
xorps
int
inc
inc
clc
mov
sbbl
rorb
push
in
popa
loopne
xchg
dec
out
cwtl
sti
push
sub
dec
jb
scas
inc
imul
dec
adc
adc
push
andl
mov
lahf
sbb
repnz
test
ja
sub
leave
out
pop
push
and
iret
inc
push
push
fcoml
popa
add
sbb
cli
and
pop
aaa
in
cmc
mov
inc
in
and
jns
insl
adc
adc
xor
add
ds
jnp
push
mov
mov
popa
inc
xchg
pop
repz
into
les
inc
es
sbb
or
xchg
sbb
push
pop
imul
movsb
mov
cmpsb
mov
sub
mov
das
push
push
and
jmp
xor
inc
xorb
mov
test
fisttps
mov
inc
outsb
or
add
popf
cld
cmp
cmp
dec
inc
sbb
loopne
mov
dec
loop
adc
pop
gs
cmp
xor
ficoml
jae
lret
xchg
cmp
mov
fs
adc
mov
jp
sti
div
and
pop
les
adc
cmc
xor
mov
sbb
dec
push
lret
int3
and
and
sbb
insb
pushf
pop
add
cmp
add
fdivs
aas
cltd
jb
cmp
cltd
pop
xchg
in
sub
mov
jno
or
add
cli
js
pop
push
rorl
push
ret
shll
setno
xchg
jnp
dec
shrb
jge
inc
sbbb
movsb
push
dec
push
push
nop
movsl
mov
shlb
push
sbb
fwait
icebp
sbb
je
dec
int
notl
cmp
pop
outsb
mov
jmp
sub
stc
and
mov
dec
gs
xchg
mov
insl
ret
mov
jns
jne
mov
add
mov
jp
xlat
hlt
dec
inc
mov
sahf
cmc
insl
scas
pop
jnp
jb
test
in
cld
mov
pop
adc
ret
ds
cmp
xor
fwait
shrb
jo
loopne
push
push
jo
lahf
mov
lock
mov
ja
add
cmpsl
popa
xor
mov
sbb
cmp
mov
int3
pop
test
iret
ja
subl
mov
mov
loopne
mov
adc
mov
push
pop
sub
inc
insl
fwait
cmpl
jno
add
push
incl
pop
out
cmpsb
adc
xchg
mov
add
ficoml
stos
stc
xchg
push
mov
push
add
pop
push
test
cmpsl
lret
mov
int3
inc
mov
out
xchg
inc
jp
nop
lock
jb
xor
jge
jg
aas
cmp
adc
leave
lahf
xor
pop
push
outsb
int3
sbb
scas
xchg
rorl
or
cmpsl
movhlps
hlt
dec
insb
xor
jecxz
mov
jmp
rolb
gs
add
ret
jae
imul
and
cmc
dec
ja
in
add
scas
and
orb
lret
dec
sub
xlat
aas
fst
jg
xor
cld
sbb
ror
stos
pop
jmp
popa
sub
dec
fnstsw
dec
pop
scas
mov
sbb
int3
js
add
jno
repnz
mov
mov
test
mov
aad
dec
repz
pop
lret
mov
cmp
and
lods
iret
xor
jle
push
out
pop
or
scas
or
adc
stos
mov
jmp
jns
data16
cmpsl
scas
js
adc
push
enter
addr16
imul
cmp
sub
loopne
ja
add
out
add
cmp
xchg
lock
gs
pop
mov
lods
in
les
mov
pop
mov
daa
notb
add
call
lcall
xchg
imul
cmp
addr16
ret
jo
imul
dec
test
and
int3
jbe
inc
sbb
outsb
xchg
or
add
or
or
dec
sbb
fstpl
icebp
jns
or
fimull
and
test
outsb
stos
xor
jnp
mov
mov
test
add
mov
dec
add
push
int3
mov
xchg
jg,pn
push
mov
mov
in
out
bound
call
loope
mov
xor
push
mov
adc
pushf
sbb
rcrb
mov
outsl
iret
subl
insl
movsb
fcomp
outsl
mov
push
data16
jmp
xchg
mov
cmp
cmp
ret
jg
push
jne
loope
dec
in
mov
ret
xor
mov
pop
lea
inc
mov
sub
and
sub
adcl
and
outsl
fs
out
clc
enter
sbb
mov
sbb
loopne
xlat
fbstp
cmpsl
sbb
pop
popa
dec
xchg
in
les
push
fwait
jecxz
inc
pop
pushf
test
fistpll
and
mov
add
je
add
ja
lret
cs
popa
lret
pop
ret
mov
jmp
dec
pop
jae
sub
repnz
cmpsb
stos
adc
scas
call
ja
and
int
sub
stc
jg
movb
push
test
mov
enter
lock
imul
mov
xor
xor
xchg
push
add
out
bnd
sbb
sahf
jge
mov
inc
cmp
xlat
add
rorb
sub
repnz
mov
hlt
psraw
or
filds
sbb
mov
xor
test
ret
xlat
xchg
lock
shrb
push
or
pop
jb
iret
mov
dec
mov
pusha
xchg
stc
cli
sub
mov
adc
sub
into
xlat
mov
ffree
inc
xor
clc
dec
sbb
add
xor
xlat
add
leave
loop
inc
pcmpgtb
xchg
cmp
popf
jae
mov
and
jg
mov
xchg
xchg
hlt
std
sbb
cmp
shlb
mov
out
ja
fisubs
shrl
dec
pop
mov
and
in
test
fsubs
ds
out
mov
lock
lock
pop
movsl
fs
cmp
add
pop
in
pop
clc
ljmp
jae
out
lahf
cmp
loope
lret
movsl
mov
sbb
fidivrl
fdivrl
imul
cmp
jp
mov
incb
jns
jge
imul
lea
je
aaa
fdivrs
scas
lods
jmp
in
mov
mov
lcall
cwtl
mov
sti
inc
xor
xor
inc
out
pop
and
aam
and
shrl
ss
mov
rclb
mov
mov
cmp
sub
loopne
inc
test
loope
ret
rolb
fcomps
inc
sti
fstpl
daa
out
mov
mov
push
and
inc
xlat
jo
scas
test
pop
in
push
icebp
out
lock
ret
outsb
cmp
es
lds
mov
mov
imul
jmp
add
dec
jg
std
dec
aaa
jae
stos
and
es
out
cmp
lock
sbb
adcb
and
cs
dec
repnz
pop
gs
xchg
out
popf
and
xor
push
insb
repnz
pop
lods
xchg
push
dec
inc
inc
enter
test
mov
xor
mov
push
mov
test
add
test
lds
lock
cmp
ja
or
cmp
adc
and
inc
test
inc
fs
adc
lcall
test
pop
and
mov
bound
and
das
das
ret
ror
xor
mov
loope
jge
lds
xchg
cmp
arpl
mov
std
pop
push
stos
iret
mov
xorb
jne
insb
shll
jnp
pop
sbb
iret
int
or
jbe
adc
pop
ja
dec
stos
xchg
mov
sub
jnp
mov
or
xor
enter
jecxz
fs
rcl
and
popa
jo
aad
xchg
ljmp
sbb
das
push
pop
les
xchg
mov
xor
jge
int
cli
loope
pop
aam
cmp
cmp
out
mov
mov
or
mov
cltd
inc
imul
cmpsb
call
pop
pop
test
cmp
and
outsb
test
mov
cmp
loope
repnz
xor
lcall
fucom
scas
mov
mov
inc
cmp
dec
sub
cmpb
out
pop
lods
and
sahf
jp
jnp
adc
lret
mov
insl
add
loopne
jns
loop
xor
mov
push
loope
mov
fsubr
fdiv
push
scas
add
ficoms
push
ficoms
mov
shrl
mov
jo
insl
jne
add
addb
lock
scas
fisttpl
outsl
lret
fsubrl
negl
ss
test
sbb
pop
cmc
sbb
push
push
xchg
divl
ds
fisubs
jmp
loop
xchg
xchg
fldl
inc
movsb
loop
shlb
outsl
add
jl
test
inc
jbe
gs
inc
aad
lock
xchg
adc
fs
jae
jl
inc
cmp
xor
rolb
mov
or
movsl
sub
ja
mov
adc
dec
sbb
fsubs
xchg
pop
sar
inc
and
mov
adc
frstor
popa
pusha
dec
shll
inc
aad
imul
loope
mov
gs
in
dec
lods
lret
cmpsb
dec
add
cmp
inc
add
adc
shll
out
mov
sahf
fimull
sbbb
dec
mov
sbb
ret
xchg
add
leave
add
adc
inc
nop
push
lods
clc
insb
shr
mov
mov
lods
inc
pushf
outsl
xchg
pop
and
cmpsl
xor
jns
subb
dec
mov
jbe
pop
or
in
cmpb
inc
mov
sahf
ds
jne
out
sti
repnz
xor
repnz
rcll
push
test
pop
ljmp
mov
mov
mov
aas
in
mov
movsb
xor
mov
sub
mov
push
jbe
movsl
sbb
sub
sub
shlb
xor
jbe
cld
mov
inc
mov
pop
mov
adc
inc
sub
xorl
js
popf
push
pusha
mov
pushw
jge
cmp
pop
sub
lods
add
push
in
popa
call
in
sub
sbb
add
loope
subb
dec
pushl
ret
scas
or
test
jae
adc
mov
adc
or
popa
cltd
mov
in
xchg
call
clc
mov
subl
xchg
sub
out
repz
jo
adc
movsb
dec
adc
pop
ret
fisttpll
push
clc
test
mov
nop
arpl
xchg
xchg
in
aam
or
aad
mov
mov
int3
mov
mov
inc
pop
xchg
push
fildll
in
mov
inc
je
test
add
test
sahf
cmp
sub
adc
or
aaa
inc
fs
test
fwait
loopne
lods
mov
inc
mov
test
mov
push
in
lock
add
js
cli
and
inc
pop
ja
iret
fidivs
jns
mov
sbb
outsb
ds
lds
mov
ss
add
and
rcpps
iret
aad
lahf
mov
push
into
addr16
lahf
idivl
test
hlt
push
pop
xor
mov
adc
mov
cli
rorb
in
sbb
or
jbe
mov
out
inc
cmp
in
ja
adc
scas
jg
scas
push
nop
cli
jmp
test
fucompp
adc
dec
orb
hlt
movl
outsb
pop
xor
push
je
shl
mov
and
jne
add
pop
jns
addb
fsub
mov
push
lea
mov
sbb
pop
lahf
leave
jecxz
test
mov
xlat
mov
hlt
mov
lock
in
rcr
add
repnz
cmp
rcr
adcl
repz
cltd
aad
mov
popf
add
jbe
push
call
cmpsl
das
push
add
xlat
insb
pop
and
test
adc
ja
xor
sbb
frstor
lock
cmpsb
or
mov
xor
and
call
iret
or
or
popa
in
lock
xor
jl
addr16
jbe
mov
iret
testb
aas
data16
cmp
ss
pop
push
pushf
in
xor
add
ja
sbb
adc
xchg
jo
pop
add
fst
das
jle
mov
and
nop
cld
cmpsl
pushf
popa
mov
cmp
fidivrs
jnp
out
sbb
fsubrs
sbb
lea
xchg
hlt
ja
sbb
adc
in
popa
jmp
xor
cmp
arpl
jae
pop
jmp
mov
aam
dec
rolb
jo
jle
dec
mov
pushf
add
mov
mov
dec
jns
outsl
sub
jecxz
mov
cwtl
push
fnstsw
mov
dec
ja
pushf
mov
cli
popf
loopne
shrl
sbb
je
cs
mov
jb
adc
cmp
lret
jne
push
outsl
push
or
imul
je
push
orb
jbe
es
pop
dec
push
mov
sbb
mov
aaa
inc
inc
push
pop
pop
xchg
xchg
repnz
shlb
fwait
pop
adc
nop
sbb
aam
fucomi
xchg
sarl
or
fidivl
cmp
lret
cwtl
pop
mov
cmp
push
in
imul
xchg
cld
xchg
dec
cmp
scas
cli
addr16
pushf
pushf
jp
scas
and
mov
adc
cmpsl
sub
sti
fwait
push
outsl
sahf
cmp
inc
rcrl
dec
outsl
mov
sbb
lods
bound
mov
mov
xor
nop
test
aas
inc
and
lret
fnsave
inc
lods
jbe
sbb
dec
iret
icebp
subl
insb
mov
in
imul
jle
lahf
inc
aad
xchg
pop
into
out
mov
push
sbb
and
pop
gs
mov
movsl
outsb
xchg
lahf
cli
loopne
cmpsl
jle
sbb
sbb
xchg
arpl
dec
les
cmpsb
cs
inc
aaa
push
inc
mov
gs
xchg
or
add
aaa
jns
out
push
jns
mov
jo
sbb
pop
jnp
mov
push
pop
cmp
out
add
in
nop
and
dec
addr16
call
jle
loope
pop
or
cmp
out
mov
mov
inc
aad
cmpsl
lock
cmovle
adc
inc
dec
jecxz
loop
mov
xlat
and
dec
sub
stc
sti
pop
mov
jecxz
insl
cmpsb
pop
repz
mov
scas
ret
push
jle
xchg
push
ret
adc
je
mov
dec
sub
out
and
add
xor
inc
out
maxps
cmp
out
rorl
addr16
sbb
iret
test
cld
mov
add
mov
scas
jge
jnp
mov
or
xchg
cmc
or
mov
cmpsl
and
push
adc
adc
jmp
shrl
push
or
xorb
and
sbb
inc
xchg
pop
dec
or
sbb
das
out
mov
sub
xor
dec
test
lods
cmp
sub
pop
mov
pop
dec
and
orl
add
mov
dec
les
pop
out
sub
stc
lods
pop
cmp
fdivrs
pushf
stos
sub
shrl
sbb
sbb
push
sub
or
mov
pop
in
lcall
or
jae
fistps
aas
movsl
es
shll
inc
add
sbb
fwait
pop
pop
cmp
test
and
mov
jecxz
adc
scas
pusha
jno
dec
aad
inc
je
jp
in
in
push
pop
imul
stos
fnstcw
add
sub
int
das
nop
inc
repz
xchg
pop
pop
fmul
pop
enter
outsl
and
cs
clc
pop
les
xor
in
and
ror
mov
adc
cmp
inc
pop
and
or
or
xchg
add
scas
mov
incl
lcall
loop
out
lahf
bswap
fcmovnu
jp
cmpsb
fimuls
pop
jb
in
xchg
mov
insl
clc
pop
xor
cmp
je
mov
and
div
icebp
mov
leave
adc
sbb
lcall
icebp
fistl
add
inc
lds
sub
xchg
iret
daa
out
sub
mov
xor
div
andl
subl
cmc
test
pop
or
pop
cmp
test
pushf
test
cmp
pop
test
mov
dec
sub
and
js
dec
and
out
sub
or
push
mov
rclb
xor
mov
out
arpl
push
cmpsl
xor
into
in
cltd
jns
push
sahf
sub
jb
ret
jp
das
pop
inc
jb
push
add
stos
cmc
shlb
dec
push
dec
xchg
in
sti
dec
or
cli
mov
je
mov
and
xor
mov
xor
push
mov
mov
arpl
or
inc
mov
test
xchg
mov
xor
insb
sbb
sub
mov
pushf
sbb
cwtl
bound
out
fmul
or
int
sbb
scas
push
jp
adc
jge
jne
pop
sbb
js
cli
adc
push
aas
mov
out
pop
pop
sbb
mov
enter
mov
jae
fnstsw
outsb
lea
scas
int3
cs
inc
dec
gs
test
inc
pop
xlat
int
shl
jbe
pop
inc
push
sbb
iret
data16
cmpsb
aam
jne
ret
inc
mov
sbb
add
push
incb
or
mov
jo
mov
cltd
dec
sub
xor
je
inc
lret
pop
push
push
and
dec
sahf
xor
jg
sbb
ss
stos
in
push
loope
ret
inc
imul
andb
or
xor
xchg
add
cmp
push
lret
leave
add
ss
lcall
sub
mov
xor
arpl
mov
xchg
mov
aam
ja
iret
inc
and
xor
sbb
or
into
pushf
pop
mov
xchg
fs
lds
dec
nop
imul
cmp
aaa
aad
sub
mov
xlat
je
fisttpll
pusha
xor
mov
fsubrl
adc
mov
aas
push
cmp
test
pop
stos
sbb
gs
mov
pop
mov
or
leave
sahf
stos
jecxz
mov
lret
out
inc
cli
xchg
out
xor
ds
leave
cltd
sbb
test
mov
lea
ret
cmp
add
mov
sbb
sahf
stc
jle
ja
add
enter
and
jl
test
sbb
sbb
fcoml
pop
xchg
adc
movsb
aaa
sub
repnz
addl
loop
sbb
fdivrl
sub
into
lock
jge
ljmp
popa
mov
mov
sub
pop
push
and
jb
out
mov
sbb
fisttps
mov
xchg
xor
xor
shlb
sbb
lea
inc
dec
xor
pop
iret
enter
or
and
push
bound
lret
mov
stc
in
lcall
cmc
aam
xchg
scas
es
stos
push
cs
xchg
xor
pop
or
jnp
lcall
sub
jbe
cmc
mov
mov
dec
nop
enter
ret
mov
loopne
outsb
xchg
mov
mov
and
xchg
lods
push
decb
out
rcrb
loopne
jle
dec
jp
cs
or
mov
sub
gs
idivl
js
mov
mov
inc
jnp
xor
mov
xchg
testb
push
ja
jl
lahf
loop
xor
out
mov
and
movsl
cmc
dec
dec
cmp
fisubrl
xor
es
movsb
into
xor
push
sbb
data16
arpl
in
aaa
or
sbb
dec
mov
inc
or
test
sub
xchg
int
jbe
imul
jmp
push
data16
sti
loopne
out
movsb
insl
into
cmp
cli
xor
xor
sbb
pop
sub
fcoms
ja
jge
and
jns
das
popa
or
sub
repnz
inc
pop
xchg
xchg
mov
ret
fcmovnbe
cltd
fisubl
xor
mov
push
mov
test
rcl
pop
jmp
fwait
push
pop
fmul
xor
inc
lret
movsb
inc
inc
pop
ljmp
jno
add
jns
loope
in
aad
mov
insl
mov
imul
inc
lret
add
mov
imul
sarl
daa
mov
icebp
aad
into
outsl
popf
dec
mov
adc
cld
lods
pop
stos
loopne
mov
sub
shrl
mov
lcall
and
push
call
nop
roll
inc
call
fwait
les
xor
ljmp
shll
ret
daa
xor
and
mov
or
lret
lods
push
into
dec
add
mov
or
out
nop
int
xchg
mov
sub
mov
lds
jae
pusha
sub
stos
push
iret
ficoms
or
mov
ja
mov
dec
sbb
and
mov
push
outsb
adc
shr
mov
adc
mov
mov
or
jbe
inc
inc
jbe
imul
jecxz
in
mov
pushw
sbb
pop
js
addl
jmp
mov
stos
cli
sub
movsb
rolb
or
inc
sbb
stc
mov
push
jnp
out
sbb
stc
adc
scas
sub
test
stos
pop
sub
cmp
lods
out
lcall
jmp
cmp
dec
pop
fiadds
mov
adcb
xor
ss
push
inc
in
adc
dec
cmp
out
lea
pop
cmp
jg
mov
jb
xchg
pusha
lea
shlb
xchg
in
xchg
push
lret
movsb
inc
xchg
aas
mov
inc
mov
cmc
lods
sbb
cmp
add
adc
aaa
xlat
mov
xchg
aaa
gs
push
addl
roll
pop
dec
rolb
fstpt
andb
jns
enter
pop
pop
js
mov
imul
ret
aaa
cmpsb
dec
xchg
sti
pop
and
in
lcall
cli
cli
daa
adc
xchg
call
shr
and
lods
out
adc
mov
bswap
imul
push
enter
adc
dec
in
xor
rolb
shrl
dec
in
cmp
scas
loop
inc
pop
filds
roll
test
es
setle
popf
mov
mov
and
lret
nop
sub
pusha
push
scas
pop
nop
adc
gs
lock
push
cmpsb
cmp
daa
mov
mov
aad
xor
push
incl
adc
pop
lds
xchg
push
negb
js
mov
and
xor
ret
or
sbbb
outsb
or
push
jp
ret
dec
inc
inc
and
mov
rcl
dec
fcomps
add
jp
mov
add
add
out
test
dec
jne
xchg
repnz
or
sub
inc
subb
popf
pop
stos
hlt
in
dec
daa
mov
aas
mov
xor
pusha
pop
adc
aam
cmp
cmpsb
hlt
xchg
jbe
pop
ret
or
cmp
add
add
scas
loope
std
sbb
cs
dec
mov
dec
mov
xchg
ret
into
stos
and
mov
cmc
pusha
cmp
push
js
iret
pop
leave
ljmp
daa
xor
ljmp
mov
cltd
and
repnz
popf
mov
fisubl
dec
cmp
rcl
or
sbb
mov
cmp
dec
pop
loop
mov
jl
in
push
stos
into
mov
loope
jno
nop
jmp
jbe
popa
add
push
stc
xchg
sub
fwait
aam
jns
fistl
and
mov
xchg
movsb
sub
gs
data16
inc
adc
aad
sub
push
pop
insb
xchg
xorb
mov
fninit
leave
mov
mov
shll
test
cmp
insb
js
xchg
fwait
test
mov
ret
cmp
adc
out
xchg
pop
dec
ss
xor
loopne
xor
jbe
or
mov
mov
aam
xor
mov
test
inc
ror
pop
lahf
insb
mov
mov
testl
insb
icebp
push
inc
insl
outsb
mov
sub
sub
mov
sti
jecxz
leave
pop
das
mov
mov
in
mov
imul
lret
fs
mov
data16
jae
fdivp
rcrb
xlat
dec
adc
inc
arpl
movsl
out
xchg
jns
mov
out
jnp
test
lret
clc
pop
or
out
inc
dec
orl
aaa
mov
adc
test
ret
fwait
imul
dec
lods
fsubs
repnz
ret
push
cmp
pop
jecxz
cmp
inc
dec
mov
bound
pop
cwtl
hlt
popf
cmc
loopne
sarl
mov
push
sbb
es
inc
inc
or
idivb
xor
inc
bswap
ljmp
dec
jg
test
dec
scas
cli
add
repnz
stos
or
lds
fnstsw
add
dec
push
stos
into
fcoml
sub
adc
jbe
into
pop
sbb
fmulp
mov
mov
xor
mov
lcall
sbb
fisttps
icebp
push
cmp
mov
test
mov
loopne
loopne
cmp
or
xorl
pop
sbb
pop
push
sub
ja
xor
jbe
jle
adc
faddp
add
scas
fnstenv
inc
mov
and
or
dec
notl
lods
outsb
push
sub
test
fisubs
mov
arpl
push
pop
js
aam
ret
pop
xchg
mov
sub
mov
arpl
rcr
into
cmc
mov
pop
adc
sub
outsb
mov
inc
pop
mov
adc
test
cmpsb
add
aad
and
xlat
je
movsl
sbb
hlt
or
pop
jg
adc
aam
loop
mov
lock
mov
dec
jb
cmpsl
xchg
out
lds
inc
sahf
and
jle
fnstsw
mul
xchg
sbb
pop
inc
imul
cmp
addr16
mov
cmp
add
mov
pop
insl
nop
fisttpl
fmull
add
test
rorb
pop
stos
ljmp
mov
addr16
lcall
shll
push
int3
or
mov
outsb
loope
inc
xor
leave
ret
or
adc
aad
add
or
fnstsw
lods
in
or
ret
mov
pop
icebp
fnsave
in
std
inc
in
jl
adc
std
jne
negb
and
mov
loopne
or
and
out
adc
stos
jmp
sub
inc
cld
outsl
dec
pop
ret
int
fidivrl
shrb
sub
shrl
add
cltd
outsb
jbe
adc
enter
lret
and
in
pop
sbb
lahf
stos
jo
mov
aaa
cmpsl
movsl
mov
sub
jg
inc
mov
push
pop
jo
xchg
rcrl
lods
das
dec
dec
and
mov
out
and
inc
sbb
mull
mov
sub
fldt
fndisi(8087
or
xor
cli
in
call
jne
je
sarl
xlat
movsl
out
lds
or
or
fwait
cmpsl
sub
lods
in
jb
push
mov
adc
lahf
xchg
sub
push
sub
les
jnp
aam
cs
mov
jl
inc
add
dec
lock
adc
mov
push
popf
sub
repnz
notl
shlb
cwtl
mov
imul
add
out
push
popf
shlb
rep
imul
add
add
jnp
mov
insl
mov
sbb
bound
sub
clc
leave
add
enter
dec
jl
rcl
cmp
dec
je
sub
dec
das
push
push
aam
loope
imul
leave
add
xor
stos
out
ss
or
scas
movb
fbld
xor
in
outsl
loope
push
mov
dec
xchg
inc
mov
xchg
lret
test
cmp
or
cli
les
cmc
push
cmp
aaa
fwait
pop
lret
cmpsl
cmp
or
adc
add
xchg
ss
imul
mov
jg
cmp
xchg
lahf
jmp
or
jp
xchg
cs
pop
or
int3
dec
mov
or
jecxz
push
loop
shl
xchg
mov
xchg
pop
mov
jb
scas
dec
or
sbb
pusha
lock
cmp
xchg
dec
movsb
pop
loop
sub
pop
and
mov
push
arpl
aad
into
test
mov
push
and
ficoml
fmuls
into
inc
cwtl
leave
andb
jmp
jb
mov
rcrb
dec
call
xor
push
dec
add
iret
dec
push
xchg
es
addl
dec
aad
sti
xor
stos
scas
outsb
dec
dec
inc
sbb
pop
imul
cld
shll
iret
icebp
or
repnz
push
cmp
jmp
push
lahf
pop
mov
rorb
out
vpmacsdd
jmp
fistps
pop
sub
mov
ret
in
cmpsb
enter
mov
push
stc
and
es
data16
bound
pop
lret
sub
mov
sub
sub
call
inc
shl
inc
pop
or
jbe,pt
sub
sbb
pop
testb
inc
cmpb
mov
jae
sub
push
pop
add
pop
sub
pop
ret
dec
loopne
movsl
inc
fwait
mov
or
loopne
or
aam
stos
ljmp
xor
test
xchg
xor
scas
mov
mov
xchg
xchg
mov
lahf
mov
mov
sub
pop
lea
cli
fildl
xchg
sti
add
popa
inc
sub
iret
lahf
inc
imul
repz
adc
dec
mov
dec
ss
xchg
xchg
subl
leave
sbb
inc
fdivl
scas
pushl
rolb
subl
pop
mov
pop
dec
les
dec
mov
enter
addl
or
push
cmp
cld
mov
mov
push
je
fldcw
stos
jl
fimuls
fs
fcmovb
inc
sbb
fsubp
add
push
fcomps
inc
fisubrl
mov
pop
mov
insb
pushf
dec
sbb
add
mov
pushf
arpl
cmp
dec
adc
outsb
adc
inc
sahf
dec
lret
jb
sbb
imul
mov
mov
xlat
sbb
xchg
mov
jne
rep
jl
and
mov
lock
or
sahf
hlt
xor
push
outsl
loop
cmpsb
data16
addr16
fdivp
aam
fildl
lahf
inc
pop
xor
aad
aaa
stos
leave
insl
ss
ds
in
in
mov
ss
fcomip
fs
sbb
rcl
aad
or
mov
push
lahf
pop
jmp
ja
int
addb
mull
xor
inc
int
xchg
push
dec
fwait
jmp
mov
aas
push
mov
rcr
cwtl
xchg
adc
push
pop
cs
aam
sahf
xlat
stos
in
leave
les
or
mov
pop
xor
and
es
call
dec
sbb
xor
into
aaa
lret
out
xchg
sbb
xchg
out
imul
mov
hlt
in
imull
adc
xlat
pop
mov
jns
inc
insb
xchg
mov
xor
cmp
jmp
inc
pushf
mov
ss
daa
and
cld
jnp
adc
adc
rorb
xlat
mov
nop
mov
mov
fidivrl
jns
cmc
sub
mov
cmp
adc
xchg
out
bound
ret
cmp
cli
jecxz
mov
mov
mov
sub
fisttpl
cmp
popf
jbe
arpl
mov
xchg
lock
frstor
add
sbb
mov
andb
jnp
adc
je
mov
clc
dec
lcall
scas
mov
daa
imul
shll
add
into
gs
xor
and
and
loopne
data16
mov
mov
ret
xor
dec
pusha
lahf
ss
imul
aas
pop
push
es
lods
add
xchg
shrb
aaa
cwtl
mov
dec
ds
inc
iret
add
push
divps
cs
cli
dec
or
inc
xchg
push
daa
lret
std
jae
xchg
stc
sbb
mov
inc
ret
mov
scas
fs
imull
imul
not
test
adc
adc
xlat
mov
les
push
ljmp
jbe
pop
lcall
lods
add
mov
scas
lcall
popf
fnstcw
movsb
add
pop
dec
lds
add
fstp
daa
cmp
popf
push
inc
jecxz
popa
loope
jecxz
sub
testl
push
inc
jb
mov
rclb
pop
enter
in
scas
fprem
js
aad
push
sub
add
js
xchg
aam
jae
pop
aas
sub
jmp
push
sbb
jp
adc
std
outsb
xlat
popf
xchg
lods
testl
dec
das
xchg
mov
les
xchg
mov
adc
jmp
pop
push
add
pop
inc
cli
int
ljmp
mov
adc
lea
xor
hlt
fs
hlt
iret
mov
push
mov
mov
stos
jmp
lea
fists
out
mov
outsb
jae
jns
xchg
fisubl
mov
adcb
repz
js
xor
push
jg
lcall
int3
jecxz
inc
fidivs
inc
mov
xor
adc
ret
in
inc
jp
adcb
dec
jnp
bound
or
lock
rorb
push
mov
sar
xchg
mov
shll
xchg
into
push
jo
xchg
xor
jmp
push
imul
outsl
jb
notb
dec
mov
insb
cli
addl
outsb
xor
std
dec
aaa
and
cmp
pop
xchg
aad
xor
clc
push
xchg
sahf
ret
mov
pop
xchg
or
or
sahf
push
adc
ja
push
and
inc
repnz
popl
mov
dec
cld
push
or
cwtl
int3
es
add
popf
and
jb
test
cmp
dec
andl
jbe
lsl
and
clc
push
pusha
rolb
push
or
xchg
add
jg
lea
mov
sbb
push
test
xchg
pop
xor
cmpsl
inc
jae
mov
push
pop
in
push
dec
xchg
lcall
je
adc
pushf
test
mov
inc
loopne
cwtl
sbb
test
cmp
sbb
mov
aam
pop
aas
xchg
negb
iret
mov
adc
mov
enter
ret
inc
aas
in
scas
leave
test
pop
repz
testb
ret
jmp
jbe
add
and
xor
or
stos
inc
loopne
mov
add
ss
adc
inc
sbb
insb
jg
lods
test
ret
test
mov
enter
pop
dec
or
jmp
sbbb
mov
sbb
or
sarl
jl
mov
xchg
and
adc
inc
fwait
fwait
sub
adc
pop
push
push
xchg
test
leave
jl
aad
stos
into
repnz
and
xchg
pop
test
xchg
push
das
sbb
int
mov
sti
pop
jno
imul
sbb
pop
scas
sub
addr16
xor
les
adc
jno
and
js
scas
aad
jne
jns
sbbb
xor
push
fimull
pop
adc
stc
call
xor
mov
gs
mov
lea
xor
test
addr16
out
jmp
push
cmc
push
ret
and
in
shll
into
xor
cmp
or
jge
pop
fstl
add
and
adc
inc
mov
mov
popf
add
pop
xor
das
fbstp
ret
jae
outsb
mov
and
mov
inc
and
pop
add
addb
insb
into
sub
insl
enter
cltd
sub
mov
daa
iret
out
sub
roll
adc
mov
jg
mov
or
mov
ret
ljmp
xlat
xchg
fcomp
daa
loop
lods
ss
xchg
jecxz
add
or
pop
daa
pop
pop
push
push
add
pop
imul
jb
push
lods
test
movsb
stos
sahf
add
jg
outsl
or
xor
cli
push
insb
ret
cs
lret
mov
jg
lea
and
ret
inc
jae
or
aaa
jae
sub
mov
mov
sub
sbb
movsb
bound
xor
mov
jmp
mov
fisubrs
ret
stos
mov
push
and
push
jmp
dec
stc
cld
jb
mov
push
repz
xchg
rorl
xchg
mov
pop
movsl
iret
rorb
loop
mov
push
pop
mov
pop
add
adc
lret
push
das
jbe
sub
addl
sbb
mov
fs
add
inc
cmc
fcoml
mov
cs
insb
or
mov
adc
loope
gs
cmc
push
xor
add
aad
sbb
pop
pop
in
icebp
mov
or
sbb
pop
xor
mov
and
push
mov
outsl
ret
jmp
sub
mov
mov
ret
dec
sahf
lahf
inc
add
lcall
fists
test
aam
pop
or
mov
adc
and
mov
xchg
scas
or
mov
icebp
dec
ss
xchg
jecxz
out
sti
js
mov
jp
inc
or
or
in
xor
lock
jmp
jno
jmp
mov
xchg
push
dec
bound
xor
jl
fwait
or
mov
and
jl
xlat
clc
xchg
add
icebp
fdivl
dec
push
popf
hlt
stos
adc
into
xor
jbe
mov
jge
out
out
xor
adc
sti
pop
jne
inc
cmp
mov
dec
fdivp
mov
sub
push
sar
push
shlb
or
sbb
arpl
push
popf
or
sbb
ljmp
pop
rorl
jo
xor
push
dec
stc
pop
dec
pop
popf
push
cmp
mov
jae
or
or
jmp
and
out
dec
mov
mov
int3
es
dec
mov
sub
mov
test
or
aam
je
daa
je
ret
push
out
mov
mov
jecxz
idiv
ds
sbb
mov
cmpsl
xchg
xchg
push
arpl
dec
xor
dec
daa
pop
and
xchg
dec
add
shrl
sub
fmul
lods
cmc
in
or
push
pop
mov
mov
jmp
fdivrs
ret
inc
pop
inc
sbb
shrb
jmp
or
fdivs
call
leave
mov
sub
cmp
outsl
dec
sahf
sahf
imul
rcrl
jbe
cmp
outsl
fnsave
cmc
sbb
xchg
inc
cmp
aaa
out
cmpsb
lock
cmp
lcall
sub
jecxz
in
scas
jmp
jns
add
int
push
repz
addr16
cmp
dec
pop
loop
sbb
push
iret
nop
movsb
mov
sarb
and
cs
aaa
idivb
inc
outsl
lods
mov
xor
push
jecxz
and
adc
push
add
iret
jae
pop
test
in
xlat
sbb
or
out
xchg
daa
dec
int3
adc
aad
or
andb
fsubp
into
mov
xchg
arpl
lret
pop
jle
cmp
push
clc
lahf
cmp
or
and
fidivrs
add
fdivl
out
adc
sub
push
js
imul
fsub
fwait
mov
jp
fsubs
int
xor
arpl
jmp
mov
inc
js
dec
int3
and
mov
jg
lret
jl
pop
xor
xor
sub
or
xor
lret
iret
sub
adc
adc
outsb
test
lcall
push
pop
lds
push
add
fcmovnbe
cltd
daa
dec
dec
add
jb
and
mov
cmp
ds
cmpsb
dec
icebp
imul
faddl
mov
mov
mov
dec
sub
lods
add
jle
sbb
pop
mov
push
sbb
mov
mov
cltd
mov
gs
iret
out
xor
popa
ja
leave
out
pusha
xlat
mov
pop
imul
sbb
popf
fidivrs
shll
mov
pop
pop
fs
cmc
sbbl
adc
fsubl
adc
mov
mov
cwtl
es
je
dec
cli
repz
inc
sahf
push
push
out
test
pop
mov
adc
mov
push
lret
sub
mov
add
dec
fists
mov
insl
js
into
push
jnp
cld
fisubs
shll
add
adc
lds
insl
es
insb
shll
xor
std
inc
inc
movsl
repnz
loopne
add
lret
mov
imul
icebp
repz
dec
mov
loop
loopne
mov
dec
subl
popf
adc
jmp
es
cli
inc
shll
lcall
sub
movsl
mov
pusha
mov
mov
mov
xor
pop
and
pop
ficoms
fs
dec
jae
dec
sub
sbb
xor
inc
adc
in
in
mov
dec
and
cmp
push
clc
test
lret
fcompl
xor
xor
xchg
dec
repnz
movsl
js
pop
dec
xchg
xchg
push
fs
add
inc
in
sbb
adc
and
sahf
data16
pop
lds
scas
das
mov
push
lods
mov
add
ja
sbb
shll
jno
lret
lods
sub
xor
out
inc
out
xor
xor
jb
enter
ja
xor
mull
mov
rol
cld
xchg
ficoml
and
mov
and
leave
xchg
mov
sbb
movsl
arpl
popf
pop
iret
sub
in
jo
and
inc
aaa
dec
rcr
sti
xor
and
adc
xchg
lret
ds
dec
jmp
mov
mov
pop
mov
lods
mov
xchg
popa
and
mov
xor
xchg
xlat
dec
sbb
mov
push
jl
add
push
mov
movsb
ret
and
sti
loope
xchg
int3
aas
gs
and
push
sbb
lret
pop
jge
and
and
into
sub
adc
dec
cld
cmp
notl
pop
dec
inc
scas
xchg
mov
and
lds
test
daa
repnz
xor
cltd
je
loope
xchg
cmpsb
push
arpl
push
pop
mov
mov
xor
lods
mov
insb
pop
push
loopne
std
aas
loop
xchg
jmp
sub
push
sbb
in
xchg
xor
cwtl
notl
xchg
sub
pop
test
and
into
mov
into
lahf
outsl
lods
js
xchg
jo
add
push
repz
adc
in
sti
int3
arpl
jo
icebp
pextrw
std
test
je
adc
lcall
and
push
mov
push
and
fnstsw
movsb
or
movsb
test
shrb
test
sub
dec
stos
xchg
test
or
mov
xor
lock
push
ds
push
out
inc
out
aam
in
lahf
mov
push
and
mov
js
imul
icebp
pop
xchg
ds
sbb
pop
xchg
push
xchg
lcall
pop
xlat
push
add
ret
xor
ret
loope
pushf
dec
jno
lret
sbb
dec
sbb
dec
out
pop
fcompl
xchg
add
sbb
or
divl
dec
inc
sub
sti
fcmovne
push
int3
fs
and
cmp
pop
jl
mov
test
loope
inc
leave
sbb
and
lahf
cmp
sbb
mov
roll
cmp
js
jo
sbb
imul
test
fidivl
shll
dec
pusha
stc
arpl
mov
mov
xor
mov
fcmovnb
add
jge
daa
das
scas
pop
std
and
aad
xchg
inc
addr16
xor
lahf
jnp
cwtl
push
add
ds
test
les
push
cmp
imul
mov
push
xchg
lock
mov
sub
fucomip
aaa
out
ret
pop
arpl
fwait
xor
sub
mov
stos
lea
lret
cmpsl
stos
punpcklwd
imulb
loope
cmp
loop
add
insb
or
icebp
cmp
inc
shl
sbb
shll
lock
cmpsl
xchg
inc
test
xchg
fstpt
jg
lds
cwtl
pop
mov
sbb
out
add
dec
push
loopne
into
popa
sub
scas
lcall
ja
add
out
les
and
imul
jae
and
hlt
xchg
pop
repz
dec
mov
inc
pop
sbb
dec
sub
xchg
cli
inc
sub
add
xchg
pop
or
aad
dec
repz
subb
pop
bound
sbb
in
pop
mov
aas
mov
shll
jg
pop
dec
sbb
test
dec
dec
mov
in
jns
scas
push
xor
inc
hlt
mov
int3
loope
idivb
addl
mov
iret
andl
dec
shlb
or
xor
repnz
les
test
pop
mov
push
mulb
nop
add
sahf
gs
les
lds
cmp
push
jae
repz
imull
jbe
push
ret
mov
mov
sti
add
scas
lock
dec
or
gs
in
cmpsl
in
fcoms
addl
rorl
fs
sar
arpl
sub
inc
and
push
inc
fisttpll
addr16
xor
mov
nop
mov
pushl
or
or
dec
dec
mov
cli
sbb
or
hlt
mov
test
jnp
mov
mov
mov
fisubrl
jno
push
sub
ds
pop
cwtl
xlat
sbb
stc
fildl
xor
jmp
inc
out
aaa
out
xchg
stos
fsts
fbld
sbb
shlb
jns
mov
cld
outsl
add
in
mov
mov
scas
dec
mov
test
adc
movsl
fnstenv
push
mov
stos
clc
xchg
add
in
hlt
loop
sub
push
pusha
jae
arpl
mov
mov
out
sub
pop
int3
pop
fimuls
psubusb
fsubp
int3
mov
sarb
mov
push
test
inc
push
adc
adc
jnp
ja
sub
test
xor
cmp
cmp
jne
and
lcall
adc
std
sti
xchg
xchg
popf
mov
inc
gs
mov
pop
xchg
aam
rol
adc
mov
mov
pop
push
mov
mov
lret
push
repnz
or
inc
inc
xchg
cmp
lret
lock
jmp
js
call
dec
dec
or
pusha
mov
lahf
nop
repz
inc
mov
in
fs
inc
mov
repz
ja
xchg
xorb
or
pop
cmp
sbbb
cld
mov
add
jbe
cmpsb
cld
push
jae
sub
aaa
mov
xor
imul
mov
cltd
sub
repz
mov
inc
movsl
mov
pop
and
shlb
out
fisubl
lcall
mov
mov
fmull
insb
icebp
pop
jle
je
je
sub
daa
idivl
adc
js
mov
insb
ret
ror
prefetcht2
jnp
ret
repnz
add
data16
inc
in
inc
or
sub
push
xor
repnz
pop
dec
ret
mov
add
cmp
test
iret
xor
push
test
and
adc
sub
xor
enter
push
setb
cmp
das
cld
jbe
mov
inc
jmp
popa
out
xor
mov
es
inc
and
outsl
stos
rcrl
daa
dec
pop
sbb
mov
mov
test
stos
mov
push
pop
rolb
sbb
sbb
rcrl
dec
sub
mov
fisttps
or
push
sbb
dec
sub
push
popa
inc
lret
arpl
test
and
xchg
stos
add
adc
aam
stos
scas
mov
test
pusha
xlat
push
jbe
add
inc
dec
test
pop
aad
lret
push
or
add
inc
in
cltd
add
fldt
popf
int3
fisttps
into
dec
push
aas
mov
dec
gs
lcall
lds
call
movsb
add
ja
out
xchg
test
or
testb
dec
movsl
xchg
mov
jbe
ds
mov
dec
push
xchg
mov
mov
pop
push
in
jno
sub
or
jp
xchg
mov
and
leave
dec
int3
adc
push
adc
ror
mov
pop
int3
lea
mov
or
rorl
mov
aad
or
fcmovnbe
add
inc
jno
push
pop
test
mov
fisubs
shll
push
mov
mov
popa
ja
int
xchg
dec
add
cmpsb
rcrb
sub
iret
jmp
push
mov
jnp
or
cmp
adc
sti
sarb
fidivrl
xor
dec
or
sar
or
sub
xorb
int3
mov
scas
cmp
loopne
xor
shll
arpl
cmpb
mov
mov
sub
and
loope
lods
loope
cmp
mov
push
xchg
pop
add
das
repz
sti
loopne
dec
xor
xchg
dec
sub
shll
push
sub
adc
je
and
jl
aas
loop
mov
sub
jge
jae
inc
aam
neg
ja
test
push
sti
sub
jp
movsb
add
xchg
or
cld
or
aam
cmc
in
inc
stos
pop
outsb
loop
fldl
icebp
add
pushf
xchg
dec
ror
scas
lods
push
pop
js
dec
push
sub
mov
inc
cli
mov
test
sbb
jecxz
call
cmp
mov
movswl
pop
jmp
testl
jge
mov
or
test
loopne
fsincos
cli
ret
insb
and
mov
or
mov
aam
xchg
cmp
pop
fcompl
loope
mov
test
sub
add
nop
or
repz
stc
and
mov
rcrb
mov
adc
and
or
dec
and
and
out
inc
push
scas
adcl
xchg
push
sub
bound
frstor
enter
dec
mov
xchg
adc
test
inc
je
pop
cmp
popa
popl
sbb
insl
cli
sbb
pop
xor
push
outsl
clc
xorl
pop
sub
int3
pop
xchg
jle
add
lahf
jg
test
xor
stc
das
mov
imul
mov
loope
cltd
scas
adc
test
adc
mov
adc
lret
cmp
jp
adc
mov
inc
pop
dec
cmp
add
loopne
add
mov
pusha
pusha
hlt
sbb
shrl
in
outsb
in
lds
dec
push
inc
push
xor
add
or
dec
mov
imul
sti
mov
stc
enter
ljmp
out
add
dec
iret
lret
or
xor
les
or
mov
pop
pusha
hlt
mov
or
ficoml
dec
sbbl
mov
mov
and
pushf
xchg
add
sarl
std
inc
cmp
mov
inc
xchg
xor
repz
jns
or
ljmp
popa
add
mov
sbb
cmpsb
repz
in
pop
push
pop
sti
pop
aam
push
int
or
push
stos
cmpsl
mov
add
out
xlat
ds
push
out
sbb
fs
inc
fistl
es
out
lods
dec
lret
inc
out
pop
inc
add
outsl
aad
outsl
jmp
jmp
imul
jecxz
fimull
insb
popl
sub
ja
insl
notb
test
mov
xchg
mov
js
jl
lcall
jbe
adc
es
ljmp
mov
jle
inc
adc
push
aas
inc
or
jge
rcrb
push
mov
cld
sub
out
lret
xchg
pop
pop
push
shrb
push
lahf
cli
pop
out
pop
adc
jb
jb
mov
mov
cs
jnp
jge
inc
in
push
xor
movsb
jg
mov
into
dec
xchg
pop
cmp
or
inc
or
xor
dec
cmp
sahf
push
fisubs
ret
or
lds
push
fs
sahf
sub
sbb
xchg
test
mov
pop
pop
and
and
or
push
push
xor
inc
ret
loope
lcall
dec
fdivs
xor
pop
cmpl
xchg
inc
sbb
lcall
andl
mov
repz
es
popa
jmp
das
mov
mov
push
rorl
xchg
imul
in
bound
and
mov
movsl
fldt
into
add
jle
jbe
dec
add
fimuls
push
fistps
xchg
dec
and
xor
nop
adcl
rorb
pop
outsb
xchg
sub
jb
daa
fcoml
repz
sahf
jnp
xchg
xchg
pop
mov
cmp
mov
xchg
xor
pop
ds
or
loop
and
hlt
cmp
imul
scas
in
push
test
mov
aam
mov
mov
sub
hlt
and
popf
xor
inc
jo
cmp
mov
mov
pop
pop
cli
add
mov
int
xchg
pop
add
adc
add
test
jecxz
xchg
add
jns
flds
inc
rorl
or
sbb
mov
sub
adc
lcall
mov
pop
adc
push
ljmp
out
lcall
or
sub
jb
sub
push
nop
sarb
mov
xchg
insb
jg
mov
xchg
mov
cltd
and
cmp
dec
jae
xchg
mov
xorl
and
mov
ss
mov
mov
scas
sbb
mov
lods
arpl
sbb
call
jecxz
ret
or
cltd
xchg
jge
mov
jp
mov
sahf
bound
cmc
or
addr16
and
lods
pusha
jnp
inc
pop
lock
or
cs
iret
mov
add
xchg
sbb
ror
cmpb
pop
iret
test
push
shll
sub
xchg
sub
gs
xchg
push
aam
mov
scas
jbe
test
lcall
cmc
sarb
sub
ror
stos
mov
shr
add
orl
mov
clc
mov
inc
lea
or
cwtl
imul
fnsave
and
stos
inc
sub
sbb
jno
loop
push
xchg
imul
jne
mov
out
pop
pop
gs
jmp
jmp
aaa
inc
int
lods
jbe
into
or
enter
cmp
or
shll
mov
dec
jo
pop
lahf
leave
sbb
addl
out
jnp
stos
cmp
sbb
sbb
inc
fldcw
mov
dec
daa
dec
subb
and
jle
or
movsb
xorb
aas
rorl
mov
outsl
shrl
sub
rcrb
fisttps
jl
hlt
std
sub
shll
mov
xlat
out
fwait
pop
mov
lret
sub
sub
sbb
xor
es
mov
sub
loop
sub
sub
nop
lds
fucom
stos
lds
xchg
jge
out
lods
push
rcrb
ljmp
test
ljmp
push
push
int
test
sbb
out
or
fcoml
dec
hlt
xchg
push
mov
clc
push
lahf
jl
or
push
adc
mov
lods
cli
and
dec
pop
mov
insb
std
jnp
pop
cmp
or
outsb
jge
pop
push
das
shll
stc
jp
sbbb
mov
push
stc
jge
bound
jmp
dec
push
jg
scas
mov
pop
dec
dec
xchg
out
movsl
or
test
or
push
stos
jae,pn
les
sbb
stos
cltd
adc
sub
into
imul
lods
insl
int
cmpsl
pop
push
inc
into
mov
scas
jle
out
mov
mov
roll
pop
cmc
xchg
in
xor
mov
adc
xchg
sbb
stos
aas
lods
pop
lret
inc
push
dec
cmp
sbb
ljmp
shrl
rorb
push
dec
iret
mov
dec
cmp
and
icebp
jno
sbb
je
xchg
jb
push
pop
dec
flds
out
sub
ja
and
mov
mov
rorb
and
insl
mov
pop
mov
mov
stos
arpl
xchg
xor
dec
cwtl
lock
lock
xchg
adc
cwtl
xchg
xor
sbb
push
cmp
pop
jecxz
pop
jae
mov
dec
std
jmp
out
sbb
mov
bound
xor
inc
dec
cltd
xchg
call
adc
dec
and
stc
mov
out
mov
sti
stos
mov
xchg
je
roll
sbb
mov
test
test
mov
pop
iret
mov
cld
das
insb
sti
xchg
pop
mov
dec
xchg
jae
test
mov
xor
enter
cwtl
int3
cmp
dec
fistpll
jmp
pop
test
xchg
in
fwait
rcl
add
test
inc
fs
jl
mov
pop
out
lret
mov
pop
repz
int
fwait
movsb
lcall
xchg
cmpsl
les
xchg
ret
pop
cmp
sbb
mov
stos
roll
jmp
hlt
addl
cli
ljmp
test
inc
fcmovne
lret
pop
mov
gs
pop
lds
mov
inc
add
xchg
add
xchg
ret
or
stos
sar
popa
pop
test
cmc
rcr
jge
push
data16
popa
pop
aaa
orb
dec
test
mov
jmp
add
or
sbb
mov
jae
lret
out
adc
or
test
int
mov
dec
daa
add
adc
xor
xchg
inc
loopne
lods
cmp
fwait
jno
lret
cwtl
add
loop
mov
ljmp
push
repnz
popf
popa
xor
mov
sub
inc
jge
stc
cmp
shlb
cmpsb
cli
test
cmpb
iret
pop
cltd
dec
fsubl
push
xchg
pop
or
add
mov
xor
sbb
cltd
lods
sub
cmp
sbb
clc
in
mov
pop
mov
cli
pop
aaa
ds
push
hlt
xchg
inc
in
in
enter
pop
dec
add
imul
mov
xlat
inc
push
or
outsl
add
mov
sub
pop
mov
mov
adc
xor
xchg
dec
pop
lret
mov
mov
jo
cltd
rcll
dec
fdivrs
out
fildll
nop
xchg
and
and
into
movsb
push
cld
mov
mov
jecxz
aaa
hlt
inc
les
jbe
sub
in
pop
and
fs
lret
dec
stos
xchg
je
and
dec
fbstp
push
sbb
ret
cltd
adc
es
pushf
divl
loopne
sbb
subl
inc
jae
dec
out
xchg
lock
lods
mov
push
iret
cmp
push
push
test
dec
sub
repz
cmp
es
movsl
les
lea
test
dec
nop
add
sub
push
xchg
mov
mov
add
sahf
outsl
addb
and
inc
dec
ret
push
notb
sbb
lret
imul
lods
jae
add
stc
aas
jmp
scas
mov
in
scas
sub
xlat
cltd
pop
jg
test
lods
inc
mov
xchg
scas
mov
xor
pop
insb
leave
daa
push
xor
ds
mov
xchg
scas
test
and
mov
in
push
fwait
cli
push
mov
sub
and
cltd
pop
enter
dec
push
pop
cmp
xchg
xchg
sbb
loope
leave
mov
leave
sbb
ss
daa
xchg
sub
insb
jns
addr16
and
leave
sti
cmpb
sarb
jmp
sub
ljmp
mov
jbe
cmp
push
sbb
pop
push
imul
mulb
mov
dec
jno
xlat
ficomps
pop
stos
mov
rcrl
and
pop
in
div
popa
or
adc
cmp
loopne
addl
pop
pop
add
inc
mov
and
xor
pusha
lret
dec
inc
lea
shrb
lcall
jns
add
and
es
out
ret
mov
push
xchg
dec
cmp
cli
test
imul
sbb
lea
pop
pushl
lods
lret
add
cmp
sahf
push
jno
push
int
and
and
shrl
rclb
mov
jl
inc
insb
cwtl
lcall
or
dec
xor
mov
out
lcall
imul
wbinvd
push
inc
add
std
jmp
shlb
and
scas
sbb
test
lcall
push
fildll
movsb
xlat
jge
lods
mov
lahf
add
mov
cli
pop
enter
pop
lret
ljmp
mov
adc
xchg
repz
jo
roll
movsl
jae
enter
jb
popa
cmp
push
lods
add
inc
add
push
sub
adc
pop
pop
dec
mov
jmp
push
ja
aad
test
or
inc
cs
imul
mov
movsb
jmp
dec
or
les
imul
cltd
sub
inc
jmp
push
mov
push
cli
frstpm(287
clc
loopne
or
fs
aad
xor
cld
inc
out
jecxz
icebp
je
mov
loop
clc
pop
jl
gs
jne
sbb
js
pop
lret
cmp
mov
sbb
mov
jecxz
fwait
inc
clc
fcmovb
fmuls
lea
xchg
mov
cmp
add
pop
lea
mov
cld
sahf
pushf
out
insl
test
or
cmpsb
cmp
or
mov
loope
stc
aaa
xlat
addr16
nop
rol
push
pop
mov
cld
pavgb
sub
cmp
inc
repnz
mov
mov
repnz
push
stos
mov
cwtl
insl
shll
loop
das
dec
jb
mov
jmp
cli
mov
mov
test
inc
pop
andl
ss
insl
ja
xchg
push
add
mov
mov
xchg
pop
mov
test
push
addr16
dec
sbb
jne
mov
data16
cmp
pushf
adc
insl
addl
xor
js
stc
hlt
icebp
mov
xchg
ficoml
inc
xor
cmp
ret
push
mov
mov
fs
mov
pop
fwait
pop
movsb
push
push
popf
rcrb
mov
sti
jl
in
or
lret
in
xchg
sub
fnstcw
or
push
cs
mov
xlat
addb
dec
mov
xor
adc
in
gs
adc
cmc
aas
mov
pop
loopne
js
or
ljmp
scas
xchg
pop
inc
jbe
inc
push
xchg
xor
ljmpw
xchg
popf
loop
sub
popa
or
es
nop
cmp
out
push
outsl
jge
adc
dec
lods
xor
dec
lret
mov
jb
ficoml
dec
mov
stos
insl
fdivrs
pop
xlat
push
js
pusha
shrl
sbb
push
push
jns
out
xor
push
pop
outsb
lock
movsl
es
shll
lahf
add
mov
mov
iret
daa
inc
inc
push
test
pcmpeqd
or
and
add
mov
dec
scas
and
mov
fcomps
sbb
cmp
leave
movsl
mov
stos
daa
xchg
dec
pop
sub
roll
jnp
push
adc
sbb
loope
mov
jae
mov
push
inc
leave
sub
fisttpl
push
push
pop
push
sub
xchg
adc
push
push
sub
pop
mov
rcll
mov
outsb
mov
jp
mov
ficomps
in
pop
xor
jnp
int
shrl
lahf
xchg
bound
lds
mov
xchg
icebp
stos
sub
popa
mov
sti
xchg
das
push
cmp
in
push
ja
jns
push
out
adc
hlt
or
cmpsl
lcall
outsb
inc
dec
ljmp
jmp
negb
sub
int
mov
or
dec
cmp
sub
popf
mov
inc
sub
cli
mov
popf
push
testb
aas
lods
pop
and
rcr
es
sub
stos
pusha
fiaddl
cli
orl
mov
out
adc
or
js
cmp
loopne
jp
add
xchg
bound
call
fwait
fs
sbb
mov
and
fs
stc
jnp
mulb
rorb
insb
in
popa
rorl
clc
loope
mov
aam
cmp
addr16
push
jge
decl
fsubrs
push
mov
les
push
or
mov
cmp
aad
aad
mov
jg
iret
cmp
pushl
cmc
in
xor
lcall
sbb
iret
and
fnstenv
push
divl
je
js
lock
std
imul
cmp
pop
adc
out
jns
jecxz
test
pop
out
out
in
xlat
and
cmp
add
scas
jl
adcl
movsl
mov
fiadds
cmp
push
cmp
dec
aas
push
dec
iret
cmpsb
out
jbe
imul
out
out
mov
and
dec
int3
cmp
add
int
xor
std
in
repnz
cmp
mov
and
sbb
jge
popa
icebp
jno
leave
pop
add
cli
fisubl
insl
fistpll
mov
bound
rcll
mov
iret
test
adc
pop
and
stos
jle
add
fistpl
cmp
sar
lret
sbb
jmp
lods
jge
daa
pop
sbb
add
out
into
jg
in
jg
inc
fdivrs
mov
in
test
xor
push
sbb
jbe
add
stc
adc
dec
out
mov
sti
int
adc
and
div
lret
dec
ja
inc
jne
sbb
pop
sub
inc
rolb
jp
fisttpl
lods
sub
inc
call
or
push
and
xchg
loopne
loopne
std
xchg
mov
ljmp
push
mov
ret
cmp
fcompl
sub
dec
nop
push
icebp
sbb
jae
mov
jnp
jns
add
push
test
mov
shll
ljmp
push
pushf
das
push
mov
inc
jne
testl
sub
fisttps
mov
lock
rolb
xor
add
dec
push
dec
mov
cltd
pop
test
lea
lcall
push
cmp
cwtl
testl
rol
dec
jae
push
jmp
cs
add
xchg
cmp
push
fcomi
hlt
or
aad
jp
int3
dec
mov
leave
cltd
and
stc
cmpsb
sahf
mov
adc
cmp
xchg
jecxz
roll
cli
pop
cs
add
jge
roll
fldenv
adc
fwait
cmpsl
push
jg
cmpsb
cs
sarw
orps
outsb
dec
push
adc
in
xor
adcb
add
push
jno
jg
mov
aad
add
outsb
daa
sub
sahf
push
dec
cmp
cwtl
addb
iret
add
mov
mov
xchg
bnd
aam
js
ror
aaa
out
xchg
adc
into
imul
out
add
push
adc
sarb
divl
nop
js
test
mov
inc
xor
adc
ficoms
adcb
push
js
sub
add
mov
aas
dec
hlt
mov
pushf
xchg
fdivp
pop
cmpsl
out
in
add
pop
popf
inc
add
jle
jmp
push
or
data16
mov
imul
aaa
fists
dec
push
xchg
bound
call
cmpsb
mov
jp
repz
jo
lret
add
xchg
mov
cmp
arpl
stos
pop
repnz
mov
xlat
and
cmpsl
mov
and
push
sbb
and
js
push
out
jp
aaa
aad
lcall
sub
adc
pop
pop
jo
cld
xchg
fiaddl
notb
pushf
or
scas
cwtl
inc
int3
mov
cmp
xor
mov
loope
std
cmpb
out
sub
mov
insl
cmp
jne
xor
cmp
xchg
enter
pop
into
mov
cmp
dec
sub
mov
lret
out
hlt
stos
cmpsl
pop
sarl
and
ret
in
les
test
incl
xor
sarl
jge
imul
ret
ds
ja
lock
arpl
fistl
sub
xchg
jnp
shlb
mov
std
and
mov
mov
pop
out
sub
cld
out
push
test
cmpsl
mov
add
mov
mov
push
cltd
mov
and
incl
sbb
int
dec
cli
fnstenv
ret
frstor
inc
cs
mov
push
pop
mov
neg
shl
xchg
and
dec
out
push
dec
inc
push
arpl
cwtl
lods
sub
dec
addb
fs
and
jo
fstl
negb
add
pusha
xchg
iret
lret
dec
loopne
mov
mov
incb
jl
aad
or
adc
scas
test
or
movsl
cmp
inc
adc
les
das
push
jl
push
pop
mov
bound
sub
test
std
push
cmp
out
xor
dec
dec
cld
imul
mov
sarl
xchg
int
jp
sbb
jmp
jo
cs
out
cmp
dec
std
inc
mov
jecxz
into
push
aam
jbe
xor
jbe,pn
push
aam
insb
fmul
sbb
lods
testl
cmc
jo
jg
repnz
mov
jnp
mov
pop
lea
sbb
bound
into
xor
ja
daa
adc
mov
fs
cmpsl
cmc
xor
pusha
jg
sahf
xor
jbe
mov
cmpsl
mov
hlt
and
fs
sbb
lcall
xchg
sub
push
pop
adc
mov
pop
paddd
mov
dec
xchg
test
sbb
ds
fsub
cwtl
dec
add
sbb
push
nop
cwtl
insb
aam
adc
fnclex
ljmp
cld
shr
aam
mov
negl
inc
inc
sub
cmpb
adc
jmp
pop
xlat
in
test
pop
int
scas
lods
mov
ljmp
mov
les
dec
mov
mov
bound
pusha
push
mov
outsl
inc
cli
and
sahf
ds
mov
dec
lds
push
jno
fsubrp
adc
adc
fdivrp
sbb
dec
mov
insb
cs
negl
jns
adc
add
mov
leave
push
scas
sbb
aaa
arpl
das
mov
jg
stos
jecxz
js
subl
mov
inc
shrl
in
out
pop
cmpsb
jns
ret
aam
test
ret
cmp
push
pop
xchg
and
xchg
std
scas
and
cmp
pop
xor
sub
cmp
out
jb
mov
and
inc
cmp
fistpl
and
popf
in
inc
or
sarl
fstpl
mov
jne
push
push
into
std
jns
push
and
sbb
mov
inc
fimull
jmp
jne
push
mov
dec
xor
or
dec
ret
and
icebp
sub
leave
aam
cmp
ret
loop
push
xor
jg
xchg
mov
ret
inc
dec
pusha
addr16
clc
push
rcrb
cwtl
dec
sub
lds
les
pop
out
xchg
clc
adc
cwtl
ds
add
pop
sub
pop
ret
das
clc
push
pop
mov
inc
out
mov
dec
mov
ror
divl
mov
icebp
pusha
sbb
mov
sbbl
sbb
dec
or
add
mov
sub
fcmovnu
sbb
jp
lret
jp
mov
cli
mov
sbb
push
lds
and
stos
cwtl
and
mov
inc
or
jle
mov
test
dec
push
adcb
fsubrl
pusha
fwait
sti
int
in
or
xchg
bnd
and
add
repnz
or
jno
testl
jns
dec
lods
loop
sahf
adc
stos
mov
inc
cmp
mov
stc
mov
lods
dec
or
or
push
cmp
testl
clc
ret
mov
addl
xchg
inc
fidivrl
sbb
lods
popa
cmp
jne
bndldx
jnp
gs
add
adcl
icebp
or
sub
or
andl
fstps
movsl
sbb
daa
stos
stos
jle
pop
mulps
stos
sbb
es
je
outsl
subb
adc
or
pop
pop
mov
adcb
push
sbbl
mov
inc
sub
mov
cmp
cmc
pop
call
or
xchg
sarb
sub
outsb
pusha
push
test
in
lret
xchg
es
cmp
wbinvd
insb
sub
xor
sbb
pushf
mov
push
stc
nop
fwait
xchg
test
lock
jnp
adc
popa
mov
sbb
fstps
pop
aam
jge
ja
xchg
mov
imulb
add
or
icebp
pop
inc
adc
scas
xchg
cmp
mov
push
or
sub
push
jns
add
loop
mov
repz
pop
add
push
xor
sbb
jecxz
das
iret
cwtl
sub
mov
cmp
pop
sub
jb
leave
in
into
insb
lds
mov
and
sbb
cmp
sti
lock
mov
pop
mov
scas
in
push
mov
idivl
pop
mov
bswap
add
out
mov
jne,pn
stc
inc
adc
mov
cld
push
daa
cltd
cmpsb
sub
je
jb
xchg
xor
mov
pop
push
sbb
push
push
loop
fsubrp
cld
xor
push
gs
clc
push
jb
xor
sub
add
mov
insb
sub
stos
or
ficompl
jne
lock
inc
fadds
in
mov
ljmp
mov
loopne
pop
mov
pop
adc
pop
fnstsw
out
test
push
ja
cmc
mov
push
repnz
scas
jno
aad
pop
lret
popa
jae
sub
mov
mov
or
sbbl
lea
inc
pop
jecxz
mov
repz
cmpsl
movsb
cmpsl
lea
jmp
negl
mov
testl
int3
roll
add
xchg
jne
fwait
push
adc
pop
cmp
bound
lcall
push
and
idivl
leave
pop
or
jb
cmp
fstpt
mov
add
movb
pop
and
outsb
cld
jle
inc
imul
imul
or
aad
in
lock
or
inc
cltd
push
lods
push
and
negl
and
movsl
ds
jl
cmpsb
adc
into
pop
xlat
add
fwait
std
or
jl
aas
stos
sbb
push
call
movsb
sbb
push
or
dec
or
fidivrs
imul
jns
jecxz
push
and
mov
push
jge
push
sbb
mov
rcll
xchg
mov
lcall
pop
cmpsl
stc
outsb
rdtsc
adc
xchg
ljmp
push
pop
inc
sub
test
std
aaa
mov
ret
fwait
loop
push
jmp
pop
imul
inc
ficompl
and
cmp
push
clc
popf
je
decl
daa
ds
lret
add
enter
fs
fsub
lahf
jo
rclb
and
into
adc
sbb
sub
cmp
xchg
hlt
adc
mov
mov
pushl
pop
adc
ret
push
mov
cwtl
cltd
mov
lods
fwait
cltd
dec
cwtl
pop
xchg
imul
out
sbb
jp
ret
sti
fsubrp
and
lods
out
sub
or
dec
or
mov
mov
adc
push
adc
adc
clc
aaa
inc
sub
sbb
sub
lret
shll
dec
sub
adc
cs
mov
enter
cmp
ss
push
movb
add
mov
out
imul
push
add
js
cmp
push
out
sbb
shll
adc
repz
mov
fnstenv
mov
lahf
repz
js
fsts
lret
imulb
jne
push
dec
xchg
sbb
jo
jg
jnp
adc
mov
mov
imul
aad
fildl
add
loope
fs
sbb
leave
mov
mov
push
mov
mov
dec
cmpsl
jecxz
pushf
lcall
sub
pop
loope
inc
xchg
jae
add
mov
ror
lods
fisttps
sub
in
arpl
in
xchg
push
movsb
xchg
sbb
inc
xchg
scas
repnz
mov
cli
or
xchg
or
stos
or
les
jge
mov
out
filds
popf
call
cmp
movsb
cmp
dec
cmp
test
sub
inc
sbb
icebp
pop
das
or
and
fsubrl
xor
rorb
cmc
mov
test
xor
iret
aam
iret
popa
pop
rcll
xor
popa
mov
jg
lods
inc
pop
ja
ss
fs
dec
lahf
adc
in
pop
lods
add
inc
jbe
sbb
dec
bound
ds
repz
mov
mov
mov
in
cmpsl
mov
dec
jb
mov
out
add
jle
add
enter
inc
sbb
loop
and
mov
jno
push
aas
sub
shlb
addr16
lahf
cmc
test
adc
fiadds
lods
das
sbb
arpl
push
sbb
cmp
fstps
xchg
cli
lcall
pop
aaa
fxch
scas
fs
mov
sahf
adc
out
stc
addr16
ds
popf
sbb
xorl
jmp
out
gs
adc
mov
adc
in
icebp
adc
ss
add
js
out
xor
push
inc
adc
jbe
in
aas
and
mov
push
jae
sub
dec
xor
out
add
xchg
lret
sarb
cld
adc
mov
sbb
addb
mov
dec
out
mov
sub
std
xor
das
je
pop
mov
vcvtusi2ss
loope
sbb
out
push
or
xchg
call
insl
xchg
sbb
adc
lds
add
out
int
sbb
inc
pusha
xchg
aad
mov
shll
push
lret
mov
push
stos
scas
add
pop
pop
sahf
dec
jmp
ret
outsb
int3
cmpsb
pusha
clc
dec
shrl
xchg
pop
leave
ds
sub
popf
stc
mov
push
cwtl
jl
rcl
adc
pop
out
jo
xchg
adc
dec
popf
scas
fstpt
cmp
rclb
sub
ja
cli
xchg
fldt
lds
rcr
fsubrs
pop
aam
int3
daa
and
or
das
adcb
xchg
mov
lods
inc
or
ljmp
cmc
fstps
xorb
cld
push
adc
es
xlat
test
fwait
push
pop
inc
push
jmp
ljmp
scas
xchg
or
loopne
jecxz
sbb
and
dec
fsub
mov
clc
and
lea
ja
or
xchg
cmp
fwait
mov
mov
cmp
aas
std
mov
lret
stos
dec
shrl
push
ret
mov
xor
jns
clc
mov
add
push
xchg
movsl
jbe
shrb
and
lds
pushf
jecxz
leave
arpl
cs
jmp
mov
outsb
sahf
xchg
add
ret
cmp
int
inc
sub
inc
shll
jne
pop
ret
adc
pop
movsb
inc
or
adc
adc
out
inc
int
or
jl
pop
or
inc
sbbb
adc
and
loop
insl
jns
xchg
xor
cmpsb
dec
test
das
jb
mov
xlat
cwtl
cli
nop
sub
outsl
or
rcrl
lods
fninit
cwtl
add
or
loop
add
aam
pop
or
leave
push
xchg
push
jo
xchg
cmp
jmp
ss
pop
adc
mov
loopne
dec
insl
daa
mov
aam
xor
fildll
aaa
pushf
and
jbe
outsl
or
mov
xor
subl
or
mulb
xchg
cli
pop
jl
sarb
mov
shrl
cli
push
arpl
out
daa
mov
popa
outsl
in
push
jb
ljmp
pop
subb
mov
xchg
inc
std
lret
clc
pop
mov
xor
aaa
cmp
inc
add
xchg
and
loopne
shlb
inc
pop
jbe
out
fwait
iret
orl
or
daa
mov
js
sbb
outsl
scas
xchg
in
pop
dec
sub
lret
xor
fcmove
mov
jg
cmpsb
mov
xchg
mov
pop
pushf
jno
mov
add
add
in
arpl
mov
jmp
bound
ja
dec
sbb
sub
lcall
ljmp
mov
adcl
push
cld
stos
xlat
push
cld
aad
pop
nop
push
out
cmp
mov
stos
inc
mov
movsl
stos
xchg
inc
jnp
xchg
mov
push
and
fimuls
shr
dec
out
inc
dec
inc
in
cmp
jae
jbe
push
sti
mov
fisubrl
test
dec
add
or
mov
js
loopne
mov
fistps
pop
add
inc
rdpmc
ds
mov
neg
jae
lahf
add
clc
cmp
pop
scas
aaa
jl
xchg
dec
cmpsb
xchg
push
popf
mov
inc
loopne
cmp
jae
inc
and
jecxz
mov
scas
aas
jmp
pop
mov
adc
lock
loopne
cmp
xlat
xchg
xor
sbb
jns
shlb
pop
cmp
sbb
xchg
mov
jbe
jne
adc
inc
xchg
dec
aad
cs
sub
adc
cltd
andl
jne
addr16
out
insl
or
jmp
shlb
push
sub
cmp
and
fdivrp
mov
xchg
mov
into
aam
sbb
test
and
push
out
sub
mov
fcmove
adc
inc
orb
inc
sub
sbb
jbe
jg
sub
and
imul
adc
fwait
adc
pop
pushf
jbe
add
and
jp
roll
sbb
aas
sbb
adc
pop
jnp
shrl
icebp
adc
je
popa
daa
jp
shlb
cmpsb
pop
xor
fwait
pop
stos
pop
in
stos
jecxz
mov
mov
inc
inc
ds
adc
mov
rorl
loop
mov
push
dec
or
sbb
jne
mov
div
mov
leave
push
jle
xchg
popa
lds
pop
xor
movsl
adc
cmpsl
es
pusha
add
test
sbb
mov
clc
int
adc
pop
pop
hlt
mov
mov
inc
enter
xchg
mov
xorb
jns
push
test
xor
call
and
cmp
gs
sbb
sub
mov
lea
sub
aas
xor
push
jp
addr16
sub
mov
sti
lds
pop
call
add
shlb
loope
fisubrs
js
shlb
int
push
sbb
pop
cmp
dec
shll
mov
mov
sub
jecxz
jle
repnz
shl
or
push
xchg
popf
dec
mov
xchg
mov
outsl
rorb
xchg
loop
lods
mov
movb
ljmp
sahf
xchg
mov
xor
test
aas
repz
outsl
jecxz
push
push
push
ss
mov
pop
pop
jecxz
jne
xchg
add
test
lock
cmp
int3
aas
int3
fnsave
mov
mov
sahf
sbb
sbb
and
inc
js
call
in
dec
in
insb
dec
mov
xchg
aas
jb
mov
or
mov
in
ret
lea
lret
adc
xor
in
xchg
shl
orl
sti
add
sarl
mov
xor
iret
enter
lds
mov
xchg
push
data16
cmc
pop
push
out
sti
in
mov
mov
sub
jmp
dec
in
jecxz
xor
sbb
jmp
adc
cmp
mov
sub
lds
jg
inc
aas
loop
inc
jecxz
mov
xorb
cli
xchg
js
scas
jb
faddp
es
cltd
mov
stos
push
push
call
imul
repnz
movsb
leave
insb
fdivr
mov
call
les
xor
rorb
or
sbb
xlat
aaa
les
xchg
ljmp
dec
inc
outsl
xor
mov
jmp
or
mov
sub
fbld
mov
jge
inc
out
iret
jno
std
sbb
sub
pop
arpl
adc
mov
xor
pushf
or
pop
ljmp
mov
mov
test
lcall
test
dec
lcall
aam
xor
scas
jb
inc
outsb
pop
daa
push
push
outsb
inc
iret
call
pop
in
lods
enter
sbb
ss
mov
xor
or
push
lahf
jge
cmp
sbb
call
mov
scas
stc
repnz
or
push
mov
pusha
out
push
inc
std
adc
jge
pop
xlat
in
pop
mov
sti
jg
adc
jae
outsl
out
pop
loop
inc
aam
cli
movsl
cld
hlt
cmp
aaa
lar
dec
mov
loop
and
fisubs
fldt
pop
add
imul
push
sbb
in
mov
daa
movsb
imul
cmp
roll
aam
or
rorb
int3
push
jecxz
mov
int3
cmp
leave
mov
sbb
sbb
out
sbb
pushf
xchg
je
jae
jmp
adc
fs
addr16
lret
cmp
rcrb
push
outsb
and
mov
pop
xchg
pop
jb
cmp
lock
mov
push
push
adc
ja
inc
cmp
aam
mov
xchg
int3
mov
inc
arpl
xchg
std
add
push
lret
xchg
test
xor
pop
mov
adc
pop
push
inc
rorl
xchg
cmp
clc
cmp
imul
mov
out
cwtl
lods
mov
adc
imul
or
xor
repz
in
jne
iret
xchg
clc
jecxz
fstl
out
cmp
test
lods
add
add
repz
lock
cmp
sub
cmp
or
lret
pop
inc
aas
sarl
cmpsb
cmpsl
lcall
ljmp
shl
cwtl
loop
jb
jg
inc
daa
xchg
pop
aaa
aaa
insl
add
popl
or
push
outsl
fisttpll
add
shlb
mov
in
fisttpll
mov
addr16
jae
sti
pop
cwtl
inc
mov
test
inc
iret
adc
shrb
lret
push
sbb
pop
aaa
jecxz
jge
imul
fimull
mov
lret
mov
outsb
into
pop
test
mov
jns
repnz
xchg
jns
mov
jb
mov
cltd
fs
xor
xchg
jmp
push
sbb
mov
jecxz
pop
add
inc
mov
push
jmp
je
out
pop
push
push
jno
mov
jb
jle
jle
out
and
sbb
scas
push
jp
push
inc
pop
sbb
ret
jp
pusha
mov
push
gs
les
pop
xchg
or
push
aas
pop
sbb
cwtl
or
shl
sbb
xchg
jnp
and
push
adc
js
or
add
sbb
sub
jbe
vmovupd
dec
jns
fsubrl
jl
scas
cmp
stos
pop
push
pop
jg
sarb
sarb
xor
jns
cmpsb
rorb
js
int
out
jo
pop
clc
xor
inc
ja
mov
xlat
mov
push
xchg
stos
xor
out
jb
adc
add
call
cld
into
or
shlb
fisttps
insl
insb
movsl
sahf
mov
lods
and
insl
les
mov
dec
movsl
xchg
sti
dec
xchg
out
adc
shll
addr16
mov
mov
test
imul
sbb
ss
test
xlat
jp
mov
cmp
push
hlt
adc
mov
xor
cmp
cmp
pop
enter
cmp
sub
xchg
bound
ljmp
gs
hlt
in
sub
jns
jge
push
movsb
sub
cmp
xchg
imul
or
in
mov
loop
cmpsl
ja
cmp
nop
mov
test
mov
jmp
mov
in
jns
cmp
push
mov
cmp
xchg
mov
cmp
add
xlat
push
cmp
mov
mov
xchg
gs
push
in
test
add
jb
lock
ret
es
shll
aaa
ror
jno
dec
sbb
xor
in
popa
fnstsw
ds
xchg
ds
adc
mov
ja
pop
popf
push
sbb
sbb
xchg
fucom
mov
jecxz
jno
lahf
xchg
fnstsw
jnp
sbb
test
add
xchg
dec
sub
mov
pushf
and
das
mov
jg
xchg
dec
or
xlat
xchg
mov
subb
jno
mov
loope
add
ret
xor
cmpsl
ja
adc
bnd
xor
inc
out
jg
pusha
sub
adc
or
jo
cmp
je
xchg
je
sbb
out
stos
gs
sti
pushf
sbb
pop
cmp
sub
in
out
xlat
mov
adcl
ss
cli
mov
xor
in
pop
inc
xor
adc
xchg
and
int
ja
jbe
icebp
push
out
test
push
punpcklbw
decb
fcmovb
test
lods
jno
pushf
mov
orb
xor
dec
mov
push
in
xchg
nop
add
add
lcall
cmc
ret
xchg
jnp
mov
lea
push
xor
lds
add
cmp
ja
cmp
shl
jmp
lods
pop
inc
roll
mov
mov
ja
mov
hlt
sub
lods
pop
and
test
xor
lret
fmull
adc
dec
xor
addr16
mov
jns
fiaddl
sub
adc
or
mov
or
jnp
aam
data16
jp
and
sbb
cltd
mov
out
xor
push
fmuls
sbb
xchg
cmp
out
jns
imulb
into
dec
comiss
push
lods
push
lock
shrl
cwtl
add
pop
scas
xchg
lret
jmp
fwait
push
push
pop
jo
iret
pop
jne
pop
mov
mov
adc
dec
ret
lds
lret
dec
fiadds
ja
mulb
std
adc
cs
fcom
sbb
mov
repz
ss
jb
mov
jg
dec
xchg
imul
xor
sar
push
add
lcall
and
dec
pushf
jmp
sub
sub
adc
shlb
leave
xchg
shl
out
in
cmpsb
shr
clc
lahf
es
dec
das
mov
dec
lods
data16
sub
jne
cmp
sbb
cmp
adc
sub
cmp
jge
repz
sbb
ret
add
stos
mov
das
mov
jg
and
and
push
jb
les
shrb
pop
sub
fcoms
icebp
inc
stc
or
mov
dec
inc
pop
sbb
imul
leave
or
jbe
sbb
aas
jb
cmpsl
sbb
mov
xorb
jbe
pop
or
xchg
jecxz
and
mov
lods
dec
lock
stc
ud1
pop
pop
adc
dec
push
xchg
or
enter
push
xchg
add
adc
jno
hlt
mov
fs
xor
leave
cli
int3
sbb
ljmp
pushf
adc
jne
or
lahf
jnp
mov
sbb
xor
mov
mov
xor
push
ljmp
imul
inc
mov
call
xchg
lret
roll
cmpsb
pop
mov
xchg
stos
dec
clc
xor
and
dec
mov
adc
inc
idivl
addl
adc
dec
jl
push
push
push
int3
jge
mov
jbe
mov
push
jl
cli
adc
xchg
stos
cmp
das
xor
xor
bound
or
in
movsb
fwait
insb
sbb
add
xorl
popf
xchg
mov
or
cmp
dec
mov
sub
xbegin
push
shrb
sub
fcoml
push
push
leave
xchg
lods
jg
sub
std
sbb
push
and
pop
cwtl
sbb
add
cmc
pop
xchg
jecxz
dec
subl
cli
inc
lahf
dec
adcb
negl
mov
clc
iret
pop
mov
imul
stos
and
jge
ret
cmp
and
lods
bnd
add
lods
xchg
mov
dec
ljmp
pop
frstor
sub
mov
adc
and
int3
xor
outsb
dec
rorb
data16
jl
inc
push
lcall
cwtl
jae
add
jo
or
and
test
shll
mov
push
and
sbb
push
pop
lods
lods
out
loope
pop
xchg
bound
jns,pn
jmp
into
pop
mov
pop
call
pushf
rcl
negb
xchg
add
cmp
mov
mov
dec
mov
fld
and
cmova
xchg
mov
cmp
clc
adc
jge
sbb
mov
sbb
xchg
aaa
sarl
xor
ret
jae
sbb
mov
jge
outsl
sbb
add
mov
repnz
push
aaa
movsl
mov
insl
sub
xchg
fldl
add
test
add
xchg
sbb
pop
xchg
mov
adc
sbb
and
pop
pop
loopne
mov
cmp
pop
jle
xchg
mov
fsubr
hlt
or
dec
push
out
mov
rolb
sbb
cmc
dec
aaa
test
ss
adc
and
in
mov
push
aaa
dec
xchg
in
dec
jge
data16
mov
sbb
ret
rclb
mov
mov
sub
inc
sbb
mov
add
mov
push
fs
scas
clc
cmpsb
mov
movsl
adc
into
xor
xchg
pusha
mov
jns
mov
aam
ds
test
ja
pop
pop
dec
xchg
pop
cltd
repz
imul
mov
jp
xchg
leave
push
jle
movsb
push
adc
hlt
loop
xchg
mov
mov
pop
jb
pop
mov
add
aas
sbb
sti
loope
mov
or
mov
push
cmp
and
cmpsb
sbb
mov
pop
mov
addr16
stos
push
lods
push
cli
adc
cmp
out
enter
aaa
push
ljmp
pusha
cmp
jae
ja
mov
xchg
stc
sti
jnp
xlat
mov
cmp
es
sbb
cmp
rcll
or
sti
xor
jmp
popa
movsl
xchg
iret
inc
pop
push
inc
fdivrs
insb
out
xchg
xor
call
mov
ret
out
and
push
les
decb
iret
jb
bound
push
jne
cmc
test
adc
mov
jmp
fldcw
push
subb
scas
inc
hlt
jns
pop
inc
jecxz
or
or
inc
addb
es
in
jns
jl
add
pop
push
sti
add
outsl
mov
ss
inc
fcomps
filds
leave
xor
and
icebp
jnp
inc
hlt
cs
rcr
dec
iret
lret
in
rcr
idivl
ds
inc
in
popf
pop
or
lods
adc
jmp
cmp
popa
xlat
cmp
inc
mov
jecxz
in
mov
outsl
clc
xor
sbb
rorb
cld
adc
in
inc
jle
rolb
cmc
orl
decl
push
sbbb
and
sbb
ret
in
shr
mov
or
shll
in
clc
lahf
icebp
popf
mov
ljmp
jnp
mov
dec
cwtl
or
or
mov
push
imul
add
and
jg
or
in
clc
insb
xchg
cltd
pop
inc
popa
mov
dec
xchg
sbb
pextrw
mov
mov
sahf
push
das
icebp
push
outsb
mov
or
mov
shl
add
insb
mov
sarl
push
mov
aaa
adc
xor
cld
popa
shlb
or
in
adc
sti
cmp
cmp
rol
adc
sub
jmp
sti
loopne
mov
loopne
cs
sbb
pop
pop
in
clc
xchg
or
idivl
adc
inc
pop
xchg
add
into
mov
out
dec
ficompl
push
outsb
divb
mov
push
mov
mov
sbb
adc
mov
xor
push
sbb
fwait
xor
and
mov
jmp
or
inc
fistps
push
xor
rorl
jbe
sbb
adc
mov
jb
mov
movsb
jbe
insl
jb
cwtl
sti
xor
out
sbb
int
lds
pushf
or
lods
in
jl
xor
or
iret
push
ret
rcrl
pop
adc
dec
fildl
aas
dec
and
fdivs
adc
movsb
push
dec
cmp
inc
nop
adc
push
or
pop
loopne
push
jnp
imul
pop
jnp
pop
mov
jge
shr
nop
filds
lahf
xchg
push
dec
inc
lret
adc
pop
ret
pop
aaa
ds
mov
lods
cmp
mov
sub
inc
mov
sbb
add
sub
mov
cmc
inc
jae
and
sti
mov
add
dec
fst
sti
push
cwtl
scas
add
fmul
lea
push
out
lret
cmp
push
dec
sub
or
mov
call
jne,pn
adc
sub
rcll
js
dec
adc
push
filds
sbb
fs
xchg
xchg
fs
add
mov
fidivs
cmc
sub
dec
cmp
jno
inc
fdivrs
enter
loopne
scas
mov
sbb
loop
int
pop
stos
push
enter
push
out
adc
sbb
cmpsb
jge
lret
out
fimuls
cmp
mov
or
mov
je
inc
sbb
adc
out
mov
loope
inc
sbb
in
cld
sarb
xor
rcrl
jg
push
mov
adc
dec
std
mov
mov
into
and
mov
and
inc
cmp
xor
loop
lods
cmpsb
imul
add
xlat
adc
insb
andl
jecxz
test
imul
pop
jb
mov
fsubl
inc
jb
aas
icebp
add
hlt
xchg
jns
sbb
or
leave
fsts
or
call
xchg
fs
rorb
inc
add
ret
xor
sbb
out
add
cli
cmp
hlt
mov
xchg
push
cmp
in
ds
mov
insb
pop
cmp
shll
push
mov
mov
mov
outsl
add
icebp
test
mov
lahf
pop
sub
lods
dec
jmp
and
cmp
xchg
lods
sub
enter
sbb
xor
push
xchg
imul
push
sti
cmpsb
pop
clc
fisttpl
shll
inc
in
cmp
ds
stc
xchg
rolb
dec
arpl
sbb
xchg
push
xor
rolb
add
jo
sub
testl
cmp
inc
lahf
mov
push
add
in
xor
push
lock
push
dec
cmc
fdiv
into
nop
mov
xor
dec
jle
repz
mov
add
les
mov
push
inc
mov
out
mov
inc
divb
mov
lock
mov
pop
add
adc
je
inc
out
push
imul
sbbb
mov
stos
pop
jo
sbb
pusha
jae
ds
call
push
mov
or
sub
sub
xchg
scas
inc
ljmp
iretw
cmpl
add
mov
addr16
pop
out
stos
insl
dec
jecxz
rcr
repnz
loopne
lahf
les
mov
push
aam
outsb
push
xorb
shlb
xchg
push
adc
lcall
sar
fldenv
mov
outsb
ljmp
add
add
enter
cld
lock
xchg
test
mov
ret
or
roll
push
xchg
dec
mov
fcomp
xchg
lret
jmp
std
cld
sarl
adc
pop
add
loop
stos
outsl
pop
out
sahf
xchg
clc
or
lock
pusha
or
xor
xor
int3
mov
leave
imul
stc
add
and
dec
ss
in
rdmsr
xchg
shrl
jbe
push
cmp
negb
or
and
fisttpll
xchg
mov
mov
jne
inc
cmp
lds
dec
stos
pop
aad
fldl
out
movsb
iret
pop
out
xchg
idivl
fisubl
jae
adc
dec
addl
bound
ret
mov
add
push
lods
xchg
mov
jl
push
mov
xchg
mov
movsb
subl
jmp
mov
in
inc
adc
into
and
dec
and
loope
xchg
in
adc
popf
clc
jmp
inc
repnz
cld
push
jno
sub
add
scas
movsb
add
fcoml
leavew
bound
dec
xor
mov
lods
push
psubsw
push
pop
clc
dec
movsl
push
popf
sarl
push
pop
jae
adc
lds
enter
cli
mov
xchg
pmullw
dec
pop
mov
rcrb
cmc
imul
rcll
pop
mov
push
lahf
sub
mov
dec
pop
movd
scas
divl
dec
mov
icebp
aad
fistpl
mov
les
adc
inc
ret
push
pop
fsub
xchg
or
in
fs
jmp
jno
ret
jo
xchg
sbbb
adc
in
mov
push
and
arpl
or
mov
insb
lock
pop
inc
or
fsub
cs
dec
mov
cltd
dec
aas
test
mov
jmp
dec
repnz
or
js
mov
dec
jl
xor
xor
and
jecxz
lock
mov
and
ret
xor
nop
in
adc
sahf
out
push
cmpsl
sub
repz
mov
push
jg
ljmp
xor
fwait
adc
push
xchg
sahf
jmp
stos
xor
cmc
dec
mov
xchg
outsl
cwtl
imul
cmp
push
and
push
xor
negl
dec
addl
inc
pusha
xchg
xchg
mov
rorb
pushf
mov
mov
inc
hlt
and
lea
ret
add
dec
je
jmp
es
sub
mov
les
jo
mov
sub
xchg
call
sbb
mov
shl
pop
pop
addr16
movsl
das
or
sub
jl
mov
mov
lahf
cltd
dec
and
stc
cmp
jmp
add
xor
je
jge
dec
ds
push
fs
sbb
scas
fisubl
xchg
sbb
rcrb
cs
jg
add
rol
sti
in
pop
and
adc
or
push
jle
mov
aam
sbb
aaa
sub
xor
scas
push
mov
mov
sti
adc
inc
arpl
add
fimuls
dec
fcmove
mov
xor
mov
fsubl
adc
fwait
inc
lret
or
jnp
ja
dec
fiadds
jecxz
mov
or
xchg
ss
roll
xchg
adc
and
mov
jo
lods
or
mov
mov
add
add
add
adc
add
add
add
add
add
addb
add
cwtl
add
addb
add
pusha
pop
add
pusha
or
orb
add
add
adc
add
add
add
add
add
add
add
add
add
add
add
addb
add
add
addb
add
dec
add
addb
add
jo
add
adc
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
or
xor
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
sbb
or
xor
add
adc
add
add
add
add
add
add
pop
or
xor
add
adc
add
add
add
add
js
add
mov
add
add
lock
addb
add
sbb
add
sub
add
cmp
add
push
push
add
pusha
push
add
jo
add
nop
push
add
mov
add
enter
addb
fadds
add
call
add
addb
add
sbb
add
xor
add
inc
pop
add
add
add
adc
add
add
add
add
add
add
add
mov
or
rolb
add
adc
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
add
push
or
rolb
add
adc
add
add
add
add
add
add
add
add
ud2
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adcb
add
add
add
add
add
add
add
add
add
adc
add
adc
add
add
add
add
add
add
pop
or
rolb
add
adc
add
add
add
add
add
add
add
add
sbb
add
add
add
add
add
add
add
add
add
add
add
sbb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pusha
sbb
add
add
add
add
add
add
add
add
add
add
inc
sbb
add
adc
add
add
add
add
add
add
push
or
rolb
add
add
add
add
add
add
add
add
add
push
or
rolb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
rolb
add
add
add
add
add
add
add
add
or
loopne
add
adc
add
add
add
add
add
add
add
and
or
rolb
add
add
add
add
add
add
add
and
add
add
add
add
inc
add
inc
add
push
add
add
add
add
add
add
dec
add
add
add
add
inc
add
inc
add
inc
add
dec
add
add
add
add
add
inc
add
dec
add
push
add
push
add
inc
add
inc
add
add
add
add
inc
add
inc
add
dec
add
inc
add
add
add
add
inc
add
dec
add
add
add
add
add
inc
add
dec
add
add
add
add
pop
add
inc
add
inc
add
add
add
add
inc
add
add
add
add
add
dec
add
add
add
or
inc
add
add
inc
add
add
dec
add
add
add
add
add
or
add
push
add
dec
add
add
dec
add
add
add
add
or
inc
add
inc
add
push
add
add
dec
add
add
push
add
dec
add
push
add
pop
add
add
dec
add
push
add
add
add
add
add
dec
add
push
add
inc
add
dec
add
add
add
pop
add
inc
add
add
push
add
or
dec
add
inc
add
inc
add
dec
add
add
add
add
push
add
dec
add
add
dec
add
dec
add
push
add
inc
add
dec
add
adc
add
add
add
add
or
sub
add
inc
or
sub
add
push
sldt
nop
or
xor
add
mov
sldt
loopne
add
or
add
xor
add
pop
or
xor
add
orb
xor
add
test
add
rorb
add
clc
or
cmp
add
and
add
dec
or
cmp
add
jo
add
cwtl
or
cmp
add
rorb
cmp
add
call
sldt
adc
add
cmp
add
adc
add
add
add
add
add
add
or
add
and
add
add
add
add
add
add
add
add
add
sbb
or
cmp
add
adc
add
add
add
add
add
add
sub
add
add
add
add
add
add
add
add
add
sub
add
adc
add
add
add
add
add
add
or
add
or
pop
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
or
add
cmp
add
add
add
add
add
add
add
add
add
add
or
or
sbb
add
add
add
add
add
add
add
add
and
or
mov
add
add
add
add
add
add
add
add
aas
or
faddl
add
adc
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
or
add
inc
or
addb
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
xor
add
add
add
add
add
add
add
add
add
push
or
dec
add
add
add
add
add
add
add
add
push
or
int3
add
add
add
add
add
add
add
add
or
add
or
in
add
add
add
add
add
add
add
add
or
add
push
or
mov
add
adc
add
add
add
add
add
add
or
add
pop
or
push
add
add
add
add
add
add
add
add
add
cmp
movsb
add
add
add
add
add
add
or
orb
add
xor
sbb
add
adc
add
add
add
add
add
add
pop
or
adc
add
adc
add
add
add
add
add
add
or
add
pop
or
sbb
add
adc
add
add
add
add
add
add
or
add
or
or
add
push
add
add
dec
add
dec
add
add
add
inc
add
dec
add
inc
add
dec
add
inc
add
add
push
add
push
add
add
adc
add
add
add
add
jg
add
jg
add
jg
add
or
cmp
add
add
add
sub
add
push
or
add
js
add
adc
add
add
add
add
add
add
or
adc
add
adc
add
add
add
add
add
add
or
add
or
adc
add
adc
add
add
add
add
add
add
or
add
or
adc
add
adc
add
add
add
add
add
add
or
or
adc
add
adc
add
add
add
add
add
add
add
js
or
adc
add
adc
add
add
add
add
add
add
add
nop
or
adc
add
adc
add
add
add
add
add
add
or
adc
add
loopne
add
and
add
dec
repz
sub
add
test
add
jl
add
js
add
mov
ret
add
pushf
push
add
lock
add
add
pop
add
add
adc
add
sub
add
je
add
xchg
pop
add
push
xchg
add
andb
mov
pop
add
or
add
fmull
add
add
add
in
add
fcomps
add
add
add
into
add
add
movsl
push
add
push
add
cmc
push
add
add
pop
add
or
les
or
les
add
or
sbb
or
clc
das
or
add
add
xchg
loope
add
or
movsb
or
mov
or
add
add
aam
or
add
add
clc
or
add
add
sbb
add
cmp
add
pop
nop
or
add
add
js
or
add
add
pushf
nop
or
add
add
jo
or
add
add
pushl
or
jo
or
test
add
inc
or
test
or
add
add
call
mov
add
add
decl
or
xchg
mov
add
add
ljmp
or
pushf
mov
add
add
decl
add
or
add
add
ljmp
add
or
add
add
decl
or
imul
gs
xor
cs
insb
add
add
add
dec
outsl
popa
fs
imul
add
add
inc
gs
jb
arpl
fs
jae
add
add
add
push
imul
insb
insb
outsl
arpl
add
add
jb
jne
insb
inc
jb
add
add
gs
jne
xor
cs
insb
add
add
add
push
jns
inc
jb
gs
je
imul
add
jbe
jo
xor
cs
insb
add
add
add
push
gs
jne
jb
push
popa
insb
jne
inc
js
add
jne
gs
xor
fs
insb
add
add
inc
gs
gs
outsl
popa
jb
push
jns
add
add
imul
insb
add
add
add
jb
popa
insb
imul
arpl
add
jb
imul
add
add
jb
jne
jb
push
popa
insb
jne
inc
add
add
outsl
insb
xor
cs
insb
add
add
add
push
popa
jae
dec
gs
inc
jb
add
add
add
insl
arpl
xor
fs
insb
add
add
add
pop
push
jb
arpl
outsl
jne
gs
jbe
outsb
je
add
add
adc
add
add
mov
push
or
jle
push
inc
scas
clc
add
loope
add
pusha
adc
in
ljmp
push
aaa
mov
shl
sbb
push
pop
js
mov
push
aam
adc
inc
fadds
enter
xchg
cld
loopne
sub
xor
test
in
add
movl
or
cmp
clc
cltd
jne
push
in
call
mov
imul
or
mov
pusha
add
jns
shl
or
notl
add
and
enter
add
push
sbb
pop
pop
add
rcrb
pop
ret
xchg
stos
mov
outsl
lock
out
add
rorl
mov
repz
jae
pop
outsb
cmp
cld
clc
shr
imul
cmp
mov
shlb
iret
sbb
mov
stc
cmp
cmp
sub
sub
fdivrs
out
xor
stos
jecxz
or
add
imul
cmpl
lea
icebp
icebp
jmp
lock
cld
fdivrs
rolb
pushl
add
negl
and
adc
add
push
or
push
outsl
add
test
je
adcl
adcl
dec
pop
add
xchg
push
fsub
rorl
stc
enter
adc
iret
cmpl
adc
iret
cltd
mov
mov
add
sbb
or
inc
jl
dec
add
decl
adc
clc
adcb
stc
add
dec
or
test
sbb
jmp
pop
cmp
sub
test
filds
insb
mov
xorb
or
dec
inc
sub
call
in
int3
or
cmp
xor
cmp
setl
push
mov
movsb
mov
push
jmp
filds
inc
jg
mov
mov
jmp
icebp
pop
sbb
and
jmp
inc
shr
pushf
push
xchg
and
mov
jge
push
jg
cmp
mov
or
int
or
sbb
jae
xor
test
je
fcomps
push
cld
inc
cmpl
mov
jb
add
mov
xchg
mov
xchg
jmp
stc
icebp
stc
iret
inc
enter
mov
cmp
pusha
jne
sbb
mov
xchg
push
push
pusha
pop
pop
enter
and
loop
mov
enter
aam
inc
cld
iret
inc
and
or
mov
in
std
pop
xchg
or
lock
mov
push
inc
cmp
adc
cmpsl
fmuls
pop
fsub
loop
inc
jl
pusha
or
arpl
in
push
hlt
add
adc
adc
adc
bound
push
lds
sub
push
add
out
dec
data16
and
nop
jns
je
test
sub
hlt
mov
adc
cltd
or
repnz
jo
jmp
adc
pop
lea
add
add
or
loop
fsubrl
adc
add
orb
loope
hlt
jo
js
das
insb
out
sbb
jl
mov
in
shl
add
push
aaa
lahf
push
movsl
fwait
lods
and
in
pushf
or
ljmp
filds
sahf
inc
lret
inc
cmc
add
leave
add
cmp
rcrl
xor
fbld
sub
add
and
inc
xchg
and
xchg
xchg
xchg
and
xor
shr
add
sbb
lock
cmpsb
xchg
lds
cltd
pop
add
gs
add
dec
pop
fnclex
inc
mov
add
jp
jb
inc
mov
and
sbb
pop
adc
or
es
add
gs
jmp
xchg
cld
dec
inc
jbe
fdivrp
jg
xchg
loop
hlt
add
push
cmp
ja
sub
nop
lock
sbb
or
or
or
add
test
mov
int3
dec
add
adc
push
push
gs
mov
add
inc
add
mov
stc
mov
adc
jo
jmp
adc
xor
fdiv
imul
dec
push
and
add
push
add
push
call
mov
and
lea
lret
push
inc
mov
aas
or
add
mull
cld
cltd
push
or
movsb
andb
repz
pop
dec
xchg
or
xor
pop
pop
push
inc
test
test
popl
jo
mov
xor
or
test
sahf
loope
adc
or
mov
or
dec
mov
rorl
mov
outsb
les
subb
xor
das
inc
mov
aas
dec
sbb
inc
inc
pop
inc
cmp
inc
or
adc
xor
test
roll
add
fwait
inc
movl
sub
xor
jo
adc
and
mov
sub
jo
or
repz
pop
inc
push
push
push
push
push
call
sbb
inc
adc
lea
inc
inc
cmpsl
rolb
in
in
in
push
or
jbe
sbb
repnz
lods
stos
add
cmpl
add
jae
test
mov
addl
inc
xor
repz
out
pop
adc
outsl
add
popa
or
in
jmp
sbb
call
test
sbb
je
push
jne
dec
push
dec
data16
push
stc
in
dec
cli
call
sbb
inc
je
sub
int3
enter
fisttpl
inc
pop
and
mov
cmpsb
add
mov
mov
mov
xor
and
call
idiv
sub
xchg
stos
sub
cltd
or
lds
xor
leave
pusha
sub
test
inc
cmpsb
jnp
mov
fldl
leave
jne
int3
ja
add
icebp
test
push
push
and
push
lea
push
cmp
mov
sbb
enter
push
aas
movntps
or
call
outsl
jp
add
mov
dec
push
jns
xchg
adc
inc
cmovnp
icebp
add
movb
jmp
mov
inc
addr16
xorb
push
sbb
sbb
and
mov
dec
cmpsb
xor
add
pop
pop
pop
pop
ret
out
cld
std
pushf
call
jmp
adc
push
add
mov
dec
xchg
jmp
push
stos
cld
cmp
jle
jb
dec
sti
xorl
fnstsw
ret
mov
sub
ret
jmp
pop
lods
push
jne
lds
cmp
int
rcrl
adc
lods
inc
mov
mov
jmp
hlt
cltd
and
icebp
cltd
push
or
rcrb
or
xor
dec
cs
inc
adc
jge
mov
test
arpl
adc
add
clc
cmp
jge
sbbb
movzbl
rolb
push
cld
sub
je
dec
or
xlat
jne
sub
jbe
pop
or
xor
adc
push
add
push
pusha
inc
jmp
pop
pop
xchg
mov
xor
mov
inc
xor
sub
std
pop
jecxz
push
mov
push
aas
add
jbe
push
push
call
pop
mov
pusha
aas
push
lcall
jle
aas
mov
lret
push
inc
insb
loope
dec
loopne
jae
or
cmp
mov
add
pop
movsl
sub
inc
jnp
or
jno
mov
or
cmp
xor
ret
add
pop
mov
inc
pushf
add
lock
push
push
inc
xchg
in
mov
mov
jge
in
es
dec
enter
push
dec
pop
and
pusha
lret
xor
dec
push
hlt
push
fs
or
cmp
test
mov
push
fistps
mov
in
jo
sbb
inc
je
mov
inc
jne
adc
adc
fildl
mov
lret
sbb
nop
cli
cmp
jne
push
stc
jmp
fidivrl
inc
lock
loopne
sub
pushf
dec
dec
mov
in
in
pop
inc
mov
sub
lret
ljmp
xlat
repnz
cmpb
pop
inc
mov
push
je
add
or
es
push
cmovle
inc
into
jle
test
sahf
and
push
push
push
push
call
sbb
dec
aaa
mov
add
aad
cmc
sbb
inc
or
adcl
fstpl
inc
inc
mov
fsub
shlb
je
enter
mov
jmp
push
inc
adc
into
jge
mov
jne
int3
testb
mov
idivb
jg
test
and
jmp
pop
mov
inc
dec
ds
push
inc
xor
cmp
mov
push
ret
stos
xchg
add
mov
sub
lods
popf
lea
push
pusha
in
repz
xor
sub
arpl
sbb
dec
or
push
inc
sub
repz
pop
sub
test
inc
sbb
js
inc
cmp
orb
jl
or
add
jb
cwtl
push
jae
xor
jbe
jnp
mov
adc
pop
test
sbb
adc
sbb
pop
xchg
in
gs
push
pop
imul
test
movsl
scas
std
es
pushf
insb
mov
subb
xor
pop
outsl
cmpsb
dec
cmp
push
jbe
insl
jae
bound
sbb
jo
insb
imul
sbb
gs
jae
adc
fsubrl
pop
push
push
arpl
pushl
xor
outsb
iret
je
bound
sti
imul
sbb
andb
frstor
jmp
jbe
mov
dec
in
sti
stc
popa
addr16
inc
outsl
cmp
cmp
je
data16
cmp
int
cmpl
push
dec
nop
mov
push
fs
mov
push
sbb
inc
sahf
je
test
push
insb
sbb
jl
imul
iret
hlt
arpl
jae
jno
jne
fwait
lret
insb
pusha
jo
inc
rcll
xchg
adc
imul
or
adc
lods
dec
outsb
data16
adc
and
jecxz
fs
pop
inc
sbbl
jns
push
xchg
mov
pop
xorb
ret
and
or
and
dec
cmc
xchg
add
pop
xor
or
xor
in
and
jns
dec
xchg
test
adc
shll
jl
sbb
or
sbb
add
je
and
jl
sub
mov
xor
movsb
mov
call
jae
xor
call
jae
xor
call
jae
mov
inc
mov
call
adc
jae
jne
stos
jmp
call
sub
jne
call
jmp
lods
shr
je
adc
jmp
xchg
dec
shl
lods
call
cmp
jae
cmp
jae
cmp
ja
inc
inc
xchg
mov
mov
push
mov
sub
rep
pop
jmp
add
jne
mov
inc
adc
ret
xor
inc
call
adc
call
jb
ret
sub
mov
popa
ret
add
add
nop
or
or
add
or
add
bound
add
add
add
jo
or
je
or
mov
lea
mov
mov
mov
movb
add
sub
mov
xor
ret
mov
popl
add
push
push
push
push
push
push
lea
mov
push
mov
push
push
pushl
push
mov
add
mov
call
pop
mov
push
push
mov
mov
add
mov
mov
mov
add
mov
mov
add
mov
add
lea
push
push
push
call
pop
pop
add
mov
push
mov
mov
add
sub
mov
mov
mov
call
pop
xor
cmp
jne
mov
push
push
mov
add
push
call
mov
pop
pop
pop
pop
pop
pop
jmp
add
sahf
dec
add
dec
add
sahf
dec
add
dec
