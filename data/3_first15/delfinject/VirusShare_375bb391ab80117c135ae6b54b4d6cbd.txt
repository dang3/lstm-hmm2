jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
push
add
mov
push
call
testb
je
movzwl
mov
add
pop
ret
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
push
add
mov
cmpl
jne
push
push
call
mov
cmpl
jne
xor
mov
jmp
mov
mov
mov
mov
mov
xor
mov
add
mov
lea
mov
mov
mov
mov
mov
mov
inc
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
add
pop
ret
mov
mov
ret
mov
push
push
add
mov
mov
call
mov
cmpl
jne
xor
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
pop
pop
ret
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
ret
mov
push
push
push
push
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
cmp
jne
mov
call
mov
mov
mov
mov
mov
add
jmp
add
cmp
jne
mov
call
mov
mov
add
mov
mov
cmp
jne
mov
mov
call
test
jne
xor
mov
pop
pop
pop
pop
pop
pop
ret
lea
push
push
push
push
add
mov
mov
mov
mov
mov
mov
mov
cmp
jb
mov
mov
add
mov
add
cmp
jb
cmp
jne
mov
mov
add
mov
mov
sub
mov
cmpl
jne
mov
call
jmp
mov
mov
add
mov
add
cmp
jne
mov
mov
sub
jmp
mov
add
mov
mov
mov
mov
add
sub
mov
sub
mov
mov
lea
mov
call
test
jne
xor
jmp
mov
jmp
mov
mov
mov
mov
cmp
jne
xor
add
pop
pop
pop
pop
ret
nop
push
push
push
mov
mov
cmp
jge
mov
jmp
add
and
mov
push
push
push
push
call
mov
mov
test
je
mov
mov
call
test
jne
push
push
mov
push
call
xor
mov
pop
pop
pop
ret
nop
push
push
push
push
mov
mov
mov
movl
push
push
push
push
call
mov
mov
test
jne
add
and
mov
push
push
push
push
call
mov
cmpl
je
mov
mov
call
test
jne
push
push
mov
push
call
xor
mov
pop
pop
pop
pop
ret
nop
push
push
push
push
add
mov
mov
movl
xor
mov
mov
add
mov
mov
mov
jmp
mov
mov
mov
mov
mov
cmp
jb
mov
mov
add
cmp
ja
cmp
jae
mov
mov
mov
mov
add
cmp
jbe
mov
push
push
mov
mov
push
call
test
jne
movl
mov
call
mov
mov
mov
cmp
jne
xor
mov
cmpl
je
mov
mov
mov
sub
mov
add
pop
pop
pop
pop
ret
mov
push
push
push
push
add
mov
mov
lea
lea
lea
mov
mov
and
mov
add
add
and
mov
mov
mov
mov
sub
mov
mov
mov
jmp
mov
mov
mov
mov
mov
add
mov
mov
cmp
jae
mov
mov
mov
cmp
jbe
mov
mov
mov
cmp
jae
push
push
mov
sub
push
mov
push
call
test
jne
xor
mov
jmp
mov
mov
mov
mov
cmp
jne
add
pop
pop
pop
pop
ret
nop
push
push
push
push
add
mov
lea
lea
lea
mov
mov
add
and
mov
add
and
mov
mov
mov
mov
sub
mov
mov
mov
jmp
mov
mov
mov
mov
mov
add
mov
mov
cmp
jae
mov
mov
mov
cmp
jbe
mov
mov
mov
cmp
jae
push
mov
sub
push
mov
push
call
test
jne
movl
mov
mov
mov
mov
cmp
jne
add
pop
pop
pop
pop
ret
mov
push
push
push
push
add
mov
mov
mov
mov
add
and
mov
mov
jmp
mov
cmp
jg
mov
mov
mov
mov
call
cmpl
je
mov
mov
add
mov
mov
sub
mov
cmpl
jne
mov
call
jmp
mov
mov
mov
cmp
jne
mov
mov
call
cmpl
je
lea
mov
mov
call
cmpl
jne
lea
mov
mov
call
xor
mov
add
pop
pop
pop
pop
ret
mov
push
push
push
push
add
mov
mov
mov
lea
mov
add
and
mov
mov
jmp
mov
mov
mov
cmp
je
mov
cmp
jne
mov
cmp
jne
mov
cmp
jle
mov
mov
sub
mov
mov
mov
add
lea
call
cmpl
je
lea
lea
mov
call
cmpl
jne
lea
mov
mov
call
mov
xor
mov
jmp
lea
mov
mov
call
cmpl
je
lea
lea
mov
call
cmpl
jne
lea
mov
mov
call
mov
xor
mov
jmp
mov
mov
cmp
jne
mov
cmp
jg
mov
mov
mov
call
mov
cmpl
je
mov
mov
mov
add
mov
mov
mov
sub
mov
cmpl
jne
mov
call
jmp
mov
xor
mov
add
pop
pop
pop
pop
ret
nop
push
add
mov
lea
and
mov
add
and
mov
mov
cmp
jbe
mov
mov
sub
mov
call
lea
mov
mov
call
mov
test
je
lea
mov
mov
call
mov
mov
mov
mov
cmpl
je
lea
mov
call
jmp
xor
mov
add
pop
ret
mov
push
mov
push
xor
push
push
pushl
mov
push
call
cmpb
je
push
call
mov
call
mov
call
mov
call
push
push
call
mov
cmpl
je
mov
mov
xor
mov
inc
cmp
jne
movl
mov
mov
mov
mov
mov
mov
mov
mov
movb
xor
pop
pop
pop
mov
push
cmpb
je
push
call
ret
jmp
jmp
mov
pop
pop
ret
nop
push
mov
add
cmpb
je
xor
push
push
pushl
mov
cmpb
je
push
call
movb
mov
push
call
xor
mov
mov
mov
jmp
push
push
mov
mov
push
call
mov
mov
mov
mov
cmp
jne
mov
call
mov
call
mov
call
mov
mov
cmpl
je
mov
mov
mov
mov
push
call
mov
mov
cmpl
jne
xor
pop
pop
pop
mov
push
cmpb
je
push
call
push
call
ret
jmp
jmp
pop
pop
pop
ret
nop
push
add
cmp
jne
mov
mov
mov
mov
mov
cmp
jg
cmp
jne
test
jns
add
sar
mov
xor
mov
jmp
test
jns
add
sar
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
pop
ret
lea
push
push
mov
mov
mov
jmp
mov
mov
cmp
jb
mov
add
cmp
jb
mov
mov
mov
mov
cmp
jne
movl
xor
mov
mov
pop
pop
ret
mov
push
push
mov
sub
lea
mov
cmp
jl
mov
movl
mov
call
pop
pop
ret
cmp
jl
mov
or
mov
mov
mov
pop
pop
ret
incl
mov
sub
mov
and
sub
add
call
ret
mov
cmp
jl
or
mov
add
call
ret
cmp
jl
mov
or
mov
add
andl
ret
push
push
push
mov
sub
mov
mov
and
cmp
je
movl
mov
and
sub
mov
xor
test
je
movl
testb
je
mov
sub
mov
sub
mov
mov
cmp
je
movl
mov
call
add
mov
pop
pop
pop
ret
push
push
push
mov
xor
mov
test
je
and
add
add
mov
test
jne
mov
mov
call
mov
mov
add
add
andl
mov
pop
pop
pop
ret
lea
push
push
push
push
add
mov
mov
xor
mov
call
mov
cmpl
je
mov
mov
mov
mov
add
mov
lea
sub
cmp
jg
mov
sub
mov
sub
cmp
jge
mov
mov
sub
add
mov
mov
call
jmp
mov
mov
sub
lea
call
mov
test
je
mov
sub
mov
call
mov
mov
mov
add
mov
add
cmp
jbe
lea
sub
call
mov
mov
call
mov
mov
add
pop
pop
pop
pop
ret
push
push
add
mov
mov
mov
mov
mov
mov
add
sub
mov
cmp
jg
mov
test
jns
add
sar
mov
mov
mov
cmpl
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
cmp
jl
mov
mov
call
test
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
pop
pop
ret
nop
cmpl
jle
cmpl
jge
movl
jmp
mov
or
mov
mov
mov
add
call
xor
mov
xor
mov
ret
mov
push
push
push
add
mov
lea
movsl
movsl
mov
call
lea
mov
mov
call
mov
test
jne
xor
jmp
mov
cmp
jae
call
sub
add
mov
add
mov
add
cmp
jae
call
add
mov
add
cmp
jne
sub
mov
call
subl
mov
mov
mov
mov
mov
add
pop
pop
pop
ret
lea
push
add
mov
mov
lea
call
cmpl
je
mov
call
test
jne
xor
jmp
mov
pop
pop
pop
ret
nop
push
push
add
mov
mov
mov
lea
mov
call
cmpl
je
mov
call
test
jne
xor
jmp
mov
pop
pop
pop
pop
ret
lea
push
mov
xor
mov
test
jns
add
sar
cmp
jg
mov
mov
mov
cmpl
jne
inc
cmp
jne
mov
pop
ret
lea
push
push
push
push
add
mov
lea
mov
mov
mov
mov
mov
cmp
jle
mov
mov
mov
mov
cmp
jle
mov
mov
mov
mov
mov
mov
cmp
jg
mov
mov
mov
cmp
je
mov
mov
jmp
cmp
jg
mov
call
mov
cmpl
jne
mov
call
test
jne
xor
mov
jmp
cmp
jg
sub
cmpl
jge
add
xor
mov
mov
mov
add
mov
or
mov
mov
mov
add
mov
incl
sub
add
jmp
mov
call
mov
mov
mov
sub
cmp
jl
mov
add
xchg
call
jmp
mov
mov
cmp
jne
mov
mov
mov
mov
add
mov
mov
andl
mov
mov
mov
or
mov
mov
mov
add
mov
incl
sub
add
mov
add
pop
pop
pop
pop
ret
push
mov
add
push
mov
cmpb
jne
call
test
je
cmp
jle
xor
mov
jmp
xor
push
push
pushl
mov
cmpb
je
push
call
add
and
cmp
jge
mov
cmp
jg
mov
test
jns
add
sar
mov
mov
mov
cmpl
je
mov
add
mov
mov
andl
mov
mov
mov
mov
cmp
jne
mov
xor
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
or
mov
mov
mov
add
mov
incl
sub
add
call
jmp
cmp
jg
sub
cmpl
jge
add
xor
mov
mov
mov
add
mov
or
mov
mov
mov
add
mov
incl
sub
add
call
jmp
mov
call
mov
xor
pop
pop
pop
mov
push
cmpb
je
push
call
ret
jmp
jmp
mov
pop
mov
pop
ret
nop
push
mov
add
push
mov
xor
mov
cmpb
jne
call
test
jne
movl
movl
jmp
xor
push
push
pushl
mov
cmpb
je
push
call
mov
mov
sub
mov
mov
mov
test
jne
movl
jmp
decl
mov
and
sub
sub
test
je
mov
sub
mov
cmp
jl
test
je
movl
jmp
mov
sub
mov
mov
cmp
je
movl
jmp
add
mov
mov
mov
call
and
mov
add
mov
mov
cmp
jne
sub
add
cmpl
jle
call
xor
mov
call
jmp
mov
mov
test
je
and
cmp
jge
movl
jmp
mov
orl
jmp
mov
mov
mov
cmpl
je
mov
cmpl
je
mov
cmpl
jge
movl
jmp
mov
mov
add
mov
call
mov
mov
call
mov
mov
xor
pop
pop
pop
mov
push
cmpb
je
push
call
ret
jmp
jmp
mov
pop
mov
pop
ret
mov
push
push
push
push
add
mov
add
and
cmp
jge
mov
sub
mov
mov
mov
and
mov
add
mov
cmp
jne
mov
jmp
cmp
jle
mov
sub
mov
cmp
jne
sub
add
cmpl
jge
add
sub
mov
jmp
mov
mov
testb
jne
mov
mov
mov
add
mov
call
cmp
jl
mov
add
mov
or
mov
mov
mov
add
call
jmp
mov
jmp
mov
sub
mov
cmp
jne
cmp
jg
sub
add
cmpl
jge
mov
add
add
xor
mov
mov
sub
add
mov
mov
and
or
mov
mov
mov
jmp
call
mov
add
mov
mov
testb
jne
mov
mov
mov
mov
cmp
jle
add
mov
sub
jmp
mov
call
sub
cmp
jl
mov
add
mov
call
jmp
add
mov
add
mov
mov
andl
jmp
mov
mov
test
je
and
add
mov
mov
mov
call
test
je
mov
add
mov
jmp
xor
jmp
mov
sub
add
mov
mov
and
or
mov
mov
mov
add
pop
pop
pop
pop
ret
nop
push
mov
add
push
push
mov
mov
cmpb
jne
call
test
jne
xor
mov
jmp
xor
push
push
pushl
mov
cmpb
je
push
call
mov
mov
call
test
je
mov
jmp
mov
call
mov
mov
sub
mov
and
sub
cmp
jge
mov
cmpl
je
mov
mov
xchg
call
mov
call
mov
mov
xor
pop
pop
pop
mov
push
cmpb
je
push
call
ret
jmp
jmp
mov
pop
pop
pop
pop
pop
ret
lea
push
push
mov
test
jle
mov
call
mov
cmpl
jne
mov
call
jmp
xor
mov
mov
pop
pop
ret
lea
push
test
je
call
mov
test
je
mov
call
jmp
xor
mov
pop
ret
mov
test
je
test
je
push
mov
call
pop
or
je
mov
ret
mov
jmp
mov
mov
call
or
jne
ret
mov
jmp
test
je
push
mov
call
pop
or
je
mov
ret
lea
mov
call
ret
push
push
mov
mov
and
cmpl
je
mov
mov
call
test
jne
call
mov
jmp
cmp
ja
xor
mov
mov
xor
mov
mov
call
pop
pop
ret
mov
and
mov
jmp
ret
push
mov
call
mov
pop
ret
push
push
mov
mov
mov
cmp
ja
je
sar
js
rep
mov
and
rep
pop
pop
ret
lea
lea
sar
js
std
rep
mov
and
add
add
rep
cld
pop
pop
ret
sub
fistpll
fwait
pop
pop
ret
mov
push
push
mov
xor
mov
cmp
jb
cmp
ja
and
cmp
jne
mov
call
mov
test
jne
mov
call
mov
test
je
mov
call
jmp
cmp
je
mov
call
mov
pop
pop
ret
mov
push
mov
mov
mov
shl
mov
mov
sar
js
rep
mov
and
rep
pop
ret
nop
push
push
push
mov
push
test
je
xor
xor
mov
mov
inc
cmp
je
mov
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
jne
mov
inc
cmp
je
cmp
je
test
je
jmp
test
je
sub
cmp
ja
cmp
ja
lea
add
add
mov
inc
test
jne
dec
je
test
jge
jmp
inc
jmp
neg
jle
js
pop
sub
jmp
inc
mov
inc
jmp
mov
mov
inc
test
je
cmp
jb
sub
sub
cmp
jbe
sub
cmp
ja
add
cmp
ja
shl
add
mov
inc
test
jne
dec
jne
neg
pop
xor
mov
pop
pop
pop
ret
lea
jmp
mov
push
xor
push
call
cmp
jne
push
call
and
cmp
je
cmp
jne
mov
mov
pop
ret
nop
push
mov
add
movzwl
mov
lea
push
push
push
push
push
call
test
jne
xor
push
push
pushl
mov
movl
lea
push
lea
push
push
push
push
mov
push
call
xor
pop
pop
pop
mov
push
mov
push
call
ret
jmp
jmp
mov
and
mov
and
or
mov
mov
pop
ret
add
inc
push
push
inc
push
inc
pop
inc
outsl
jb
popa
outsb
fs
inc
gs
jo
imul
push
dec
popa
jae
push
popa
insb
jne
add
add
fninit
fldcw
ret
mov
test
je
mov
mov
call
ret
cmpb
jbe
push
push
push
push
call
ret
nop
cmpb
je
push
push
push
push
push
push
push
call
add
pop
ret
lea
push
push
push
push
call
add
pop
ret
lea
cmpb
jbe
push
push
jmp
ret
lea
test
je
mov
cmpb
je
cmpb
jne
movsbl
inc
inc
jmp
add
add
ret
mov
cmpb
jbe
push
push
push
call
push
push
push
push
push
call
pop
pop
pop
pop
ret
nop
cmpb
jbe
push
push
push
push
push
call
pop
ret
push
push
cmpb
jbe
push
push
push
push
call
pop
pop
ret
mov
mov
testl
jne
cmpl
mov
mov
je
cld
call
mov
test
je
call
test
je
mov
mov
cmpl
je
call
cmpb
jbe
cmpb
ja
lea
push
push
call
cmp
pop
je
mov
mov
mov
jmp
mov
mov
mov
cmpb
jbe
cmpb
ja
push
lea
push
push
push
call
cmp
pop
pop
pop
je
orl
push
xor
push
push
push
mov
push
push
push
push
mov
push
push
push
push
call
mov
call
pushl
mov
mov
mov
movl
add
call
jmp
jmp
call
mov
mov
mov
mov
jmp
mov
ret
mov
mov
mov
testl
je
mov
movl
push
push
push
push
mov
add
call
call
pop
pop
pop
pop
mov
ret
mov
mov
movl
call
mov
mov
mov
mov
andl
cmpl
je
mov
call
call
xor
add
mov
pop
mov
mov
pop
pop
pop
pop
mov
ret
lea
call
mov
mov
mov
mov
call
pop
mov
xor
pop
mov
pop
pop
call
jmp
ret
xor
mov
mov
add
mov
call
ret
ret
mov
push
mov
mov
mov
cmp
jg
je
cmp
jg
je
sub
je
sub
je
dec
je
jmp
add
sub
jb
je
jmp
cmp
jg
je
sub
je
dec
je
dec
je
jmp
sub
je
sub
je
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
and
mov
call
pop
ret
mov
testl
jne
cmpb
ja
lea
push
call
cmp
je
mov
cld
call
mov
push
push
push
push
call
mov
cmpl
mov
mov
je
mov
test
je
mov
call
test
je
mov
call
mov
test
je
call
mov
mov
mov
mov
jmp
xor
ret
lea
xor
lea
mov
mov
mov
movl
mov
mov
ret
lea
xor
mov
test
je
mov
cmp
jne
mov
mov
ret
mov
cmp
je
cmp
jne
mov
mov
ret
push
mov
add
push
push
push
mov
mov
test
je
mov
mov
mov
xor
push
push
pushl
mov
test
jle
dec
mov
mov
mov
mov
cmpl
je
call
test
jg
xor
pop
pop
pop
mov
jmp
jmp
call
call
call
pop
pop
pop
pop
pop
pop
ret
push
mov
add
push
push
push
mov
mov
test
je
mov
xor
mov
mov
xor
push
push
pushl
mov
cmp
jle
mov
mov
mov
inc
mov
cmpl
je
call
cmp
jg
xor
pop
pop
pop
mov
jmp
jmp
call
call
call
pop
pop
pop
pop
pop
pop
ret
movl
movl
mov
xor
mov
mov
mov
mov
call
movb
call
ret
push
push
push
mov
mov
mov
mov
mov
cltd
idiv
add
xor
mov
mov
mov
mov
cltd
idiv
mov
dec
test
jne
mov
mov
mov
and
mov
xor
mov
mov
shr
dec
test
jne
pop
pop
pop
ret
mov
xor
xchg
neg
sbb
inc
mov
mov
mov
pushl
pushl
mov
mov
rep
pop
pop
leave
ret
ret
mov
push
cmpb
je
cmpw
jne
cmpl
jbe
mov
call
push
lea
push
push
push
push
call
push
call
push
lea
push
push
push
push
call
push
call
pop
ret
cmpb
jne
push
push
push
push
call
pop
ret
add
incl
add
add
push
push
push
push
mov
mov
cmpb
jne
cmpl
je
mov
mov
xor
mov
call
cmpl
jne
cmpl
je
call
call
xor
mov
cmpb
jne
cmpl
jne
xor
mov
call
cmpb
jbe
cmpl
je
mov
test
je
mov
call
mov
mov
cmp
je
test
je
push
call
call
cmpb
jne
call
cmpb
je
call
cmpl
jne
cmpl
je
call
mov
push
call
mov
mov
mov
mov
rep
jmp
pop
pop
pop
pop
pop
ret
mov
call
ret
nop
popl
jmp
ret
mov
test
je
movl
mov
dec
jl
lock
jne
push
lea
call
pop
ret
nop
push
push
mov
mov
mov
test
je
movl
mov
dec
jl
lock
jne
lea
call
add
dec
jne
pop
pop
ret
nop
test
je
mov
inc
jg
push
push
mov
call
mov
pop
push
mov
call
pop
pop
jmp
lock
xchg
test
je
mov
dec
jl
lock
jne
lea
call
ret
nop
test
jle
push
add
and
push
call
pop
movw
add
pop
mov
movl
ret
xor
ret
nop
push
push
push
mov
mov
mov
mov
call
mov
mov
test
je
mov
mov
call
mov
call
mov
pop
pop
pop
ret
mov
push
mov
mov
call
pop
ret
nop
xor
test
je
push
cmp
je
cmp
je
cmp
je
cmp
je
add
jmp
inc
inc
inc
mov
pop
sub
jmp
ret
lea
push
push
push
mov
xor
repnz
jne
not
pop
add
pop
pop
jmp
ret
test
je
mov
ret
test
je
mov
test
je
push
push
push
mov
mov
mov
mov
add
cmp
je
call
mov
mov
mov
add
call
pop
pop
pop
ret
call
mov
mov
jmp
ret
test
je
test
je
cmp
je
cmp
je
push
push
call
pop
pop
jmp
push
push
push
mov
mov
push
mov
add
call
mov
mov
mov
mov
call
mov
mov
mov
add
call
pop
mov
test
je
decl
call
pop
pop
pop
ret
mov
jmp
mov
jmp
ret
push
push
push
mov
mov
cmp
je
test
je
test
je
mov
mov
sub
ja
add
push
shr
je
mov
mov
cmp
jne
dec
je
mov
mov
cmp
jne
add
add
dec
jne
jmp
add
add
pop
and
je
mov
mov
cmp
jne
dec
je
cmp
jne
dec
je
and
and
cmp
jne
add
jmp
mov
sub
jmp
mov
sub
jmp
pop
cmp
jne
cmp
jne
shr
shr
cmp
jne
cmp
pop
pop
pop
ret
mov
test
je
mov
inc
jle
lock
ret
nop
test
je
ret
add
ret
mov
test
je
mov
dec
je
push
mov
mov
call
mov
mov
mov
push
mov
call
pop
mov
dec
jl
lock
jne
lea
call
mov
pop
mov
ret
lea
jmp
ret
mov
push
push
push
mov
mov
xor
test
jle
mov
test
je
cmpl
jne
sub
add
push
mov
call
pop
add
mov
mov
movb
jmp
mov
call
mov
mov
test
je
mov
mov
cmp
jl
mov
call
mov
call
mov
pop
pop
pop
ret
mov
mov
jmp
ret
push
mov
add
push
push
push
mov
mov
mov
cmpl
je
xor
push
push
pushl
mov
mov
mov
call
xor
pop
pop
pop
mov
jmp
jmp
call
mov
mov
mov
cmpl
jne
pop
pop
pop
pop
pop
pop
ret
mov
mov
mov
mov
ret
mov
push
mov
add
mov
xor
push
push
pushl
mov
mov
mov
call
xor
pop
pop
pop
mov
push
mov
cmp
jne
mov
mov
mov
jmp
mov
mov
cmpl
je
mov
mov
cmp
jne
mov
mov
mov
mov
jmp
mov
mov
mov
cmpl
jne
ret
jmp
jmp
pop
pop
pop
ret
push
mov
add
push
xor
mov
xor
push
push
pushl
mov
push
lea
push
push
push
call
lea
lea
mov
call
mov
lea
call
mov
cmpl
je
xor
xor
pop
pop
pop
mov
push
lea
call
ret
jmp
jmp
mov
pop
mov
pop
ret
push
mov
xor
push
push
pushl
mov
incl
jne
mov
call
mov
call
mov
call
call
xor
pop
pop
pop
mov
push
ret
jmp
jmp
pop
ret
nop
subl
jae
movb
movl
movl
movb
movl
call
test
je
call
call
movw
movw
movw
call
mov
call
mov
call
and
cmp
je
call
and
cmp
jbe
movl
jmp
call
call
mov
jmp
call
call
mov
call
mov
ret
nop
jmp
mov
jmp
mov
jmp
mov
jmp
mov
push
push
mov
push
push
call
mov
mov
pop
pop
ret
lea
mov
ret
mov
push
push
call
mov
test
je
cmpl
jne
mov
call
mov
call
mov
cmpl
jne
mov
call
jmp
mov
push
mov
push
call
pop
pop
ret
mov
mov
mov
test
jne
mov
mov
ret
call
mov
push
call
test
je
ret
mov
ret
push
call
test
je
ret
mov
call
ret
nop
push
mov
xor
mov
push
call
mov
mov
mov
xor
mov
xor
mov
call
mov
mov
call
pop
ret
lea
push
mov
xor
push
push
pushl
mov
incl
xor
pop
pop
pop
mov
push
ret
jmp
jmp
pop
ret
mov
subl
ret
push
mov
xor
push
push
pushl
mov
incl
xor
pop
pop
pop
mov
push
ret
jmp
jmp
pop
ret
mov
subl
ret
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
xchg
call
ret
nop
push
mov
xor
push
push
pushl
mov
incl
xor
pop
pop
pop
mov
push
ret
jmp
jmp
pop
ret
mov
subl
ret
push
push
push
mov
mov
or
je
mov
or
je
mov
mov
cmp
jbe
mov
cmp
repz
je
mov
cmp
jb
cmp
ja
sub
mov
cmp
jb
cmp
ja
sub
cmp
je
movzbl
movzbl
sub
pop
pop
pop
ret
nop
push
mov
add
push
push
push
xor
mov
mov
mov
mov
mov
mov
call
mov
call
xor
push
push
pushl
mov
xor
lea
call
mov
call
test
jle
mov
mov
mov
movzbl
cltd
idiv
xor
inc
decl
jne
cmp
jle
sar
jns
adc
mov
fildl
call
mov
cmp
jg
mov
call
test
jle
mov
mov
mov
call
push
mov
pop
mov
cltd
idiv
mov
incl
mov
call
xor
mov
mov
movzbl
mov
cltd
idiv
mov
incl
mov
cltd
idivl
mov
xor
mov
mov
mov
and
jns
dec
or
inc
xor
mov
mov
movzbl
add
shr
xor
xor
mov
mov
and
jns
dec
or
inc
test
jne
lea
mov
call
mov
lea
call
jmp
lea
xor
mov
push
mov
pop
sub
call
mov
lea
call
inc
decl
jne
mov
mov
call
xor
pop
pop
pop
mov
push
lea
mov
call
lea
call
lea
mov
call
ret
jmp
jmp
pop
pop
pop
mov
pop
ret
lea
push
mov
add
push
push
mov
mov
mov
call
xor
push
push
pushl
mov
mov
call
mov
push
lea
push
mov
call
push
call
mov
lea
mov
call
xor
pop
pop
pop
mov
push
lea
call
ret
jmp
jmp
pop
pop
mov
pop
ret
mov
push
mov
add
push
mov
lea
push
mov
call
push
call
cmp
je
push
call
testb
jne
lea
push
lea
push
call
lea
push
lea
push
lea
push
call
test
jne
movl
mov
pop
mov
pop
ret
push
mov
mov
call
inc
setne
pop
ret
test
je
sub
mov
ret
mov
push
mov
add
push
push
push
mov
mov
call
xor
push
push
pushl
mov
mov
call
mov
lea
call
mov
mov
mov
mov
call
mov
cmpl
jbe
mov
jmp
mov
lea
push
sub
push
lea
call
add
push
mov
mov
push
mov
call
push
push
call
mov
mov
call
xor
pop
pop
pop
mov
push
lea
call
ret
jmp
jmp
pop
pop
pop
pop
pop
pop
ret
nop
push
push
push
mov
push
push
mov
push
call
mov
push
mov
push
call
mov
push
mov
push
call
mov
push
call
mov
cmpl
je
push
call
mov
pop
pop
pop
ret
lea
push
mov
add
push
push
push
xor
mov
mov
mov
lea
mov
rep
mov
xor
push
push
pushl
mov
xor
jmp
lea
mov
call
mov
lea
call
inc
mov
test
jne
mov
mov
call
xor
pop
pop
pop
mov
push
lea
call
lea
call
ret
jmp
jmp
pop
pop
pop
mov
pop
ret
mov
push
mov
xor
push
push
pushl
mov
incl
xor
pop
pop
pop
mov
push
ret
jmp
jmp
pop
ret
mov
subl
ret
add
mov
ret
lea
push
push
mov
mov
call
ret
push
movzwl
add
mov
mov
pop
ret
mov
shr
mov
ret
nop
push
mov
add
push
push
push
mov
mov
mov
call
xor
push
push
pushl
mov
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
inc
nop
nop
nop
nop
cmp
jle
cmp
jle
or
test
je
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
xor
mov
lea
xor
mov
call
lea
xor
mov
call
movl
movw
lea
push
lea
push
push
push
push
push
push
push
mov
mov
call
push
mov
call
push
mov
mov
call
test
je
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
movb
xor
push
push
pushl
mov
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
movl
lea
push
mov
push
mov
mov
call
test
je
lea
push
push
lea
push
mov
xor
push
push
mov
cltd
add
adc
add
push
mov
push
mov
mov
call
test
je
mov
mov
call
cmp
jg
cmpl
je
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
add
mov
push
push
mov
mov
push
mov
mov
push
mov
push
mov
mov
call
mov
cmpl
je
lea
push
mov
mov
push
mov
push
mov
push
mov
push
mov
mov
call
test
je
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
mov
add
call
mov
mov
movzwl
sub
sub
jb
inc
mov
lea
push
lea
mov
mov
push
mov
mov
add
push
mov
mov
add
push
mov
push
mov
mov
call
test
je
lea
push
mov
mov
call
push
mov
mov
push
mov
mov
add
push
mov
push
mov
mov
call
inc
decl
jne
lea
push
push
lea
push
mov
xor
push
push
mov
cltd
add
adc
add
push
mov
push
mov
mov
call
test
je
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
mov
call
mov
lea
push
mov
push
mov
mov
call
cmp
sbb
inc
mov
xor
pop
pop
pop
mov
push
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
cmpb
jne
push
mov
push
mov
mov
call
jmp
mov
push
mov
mov
call
ret
jmp
jmp
nop
xor
pop
pop
pop
mov
push
lea
call
ret
jmp
jmp
pop
pop
pop
mov
pop
ret
push
mov
xor
push
push
pushl
mov
incl
xor
pop
pop
pop
mov
push
ret
jmp
jmp
pop
ret
mov
subl
ret
push
mov
xor
push
push
pushl
mov
incl
xor
pop
pop
pop
mov
push
ret
jmp
jmp
pop
ret
mov
subl
ret
jmp
mov
push
mov
xor
push
push
pushl
mov
incl
xor
pop
pop
pop
mov
push
ret
jmp
jmp
pop
ret
mov
subl
ret
push
mov
add
push
push
push
xor
mov
mov
mov
mov
mov
call
mov
call
xor
push
push
pushl
mov
movl
mov
call
push
call
mov
mov
add
add
mov
add
mov
mov
mov
dec
test
jb
inc
mov
xor
mov
mov
add
mov
shl
add
mov
add
mov
mov
call
mov
lea
call
mov
push
lea
mov
call
mov
pop
call
test
jne
mov
mov
add
mov
add
add
movzwl
mov
mov
mov
shl
mov
mov
add
xor
push
push
mov
cltd
add
adc
add
mov
add
mov
mov
jmp
inc
decl
jne
xor
pop
pop
pop
mov
push
lea
mov
call
lea
mov
call
ret
jmp
jmp
mov
pop
pop
pop
mov
pop
ret
push
mov
add
push
push
xor
mov
mov
xor
push
push
pushl
mov
mov
call
push
call
test
je
push
call
mov
test
je
push
call
mov
cmpl
je
push
call
mov
test
je
lea
mov
call
lea
call
mov
mov
call
mov
mov
call
mov
push
call
call
xor
pop
pop
pop
mov
push
lea
call
ret
jmp
jmp
pop
pop
pop
pop
pop
ret
mov
push
mov
push
push
push
push
mov
mov
call
xor
push
push
pushl
mov
xor
push
call
test
je
mov
call
mov
inc
test
je
push
push
call
mov
test
je
mov
call
mov
mov
mov
call
push
push
call
test
je
mov
call
xor
pop
pop
pop
mov
push
lea
call
ret
jmp
jmp
mov
pop
pop
pop
pop
pop
ret
push
push
mov
call
mov
push
call
call
sub
cmp
jae
xor
mov
pop
pop
ret
mov
push
mov
xor
push
push
pushl
mov
xor
pop
pop
pop
mov
push
ret
jmp
jmp
pop
ret
or
add
nop
inc
inc
add
add
inc
add
inc
add
aaa
inc
add
inc
add
add
inc
add
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
add
inc
add
inc
inc
add
add
add
inc
add
in
mov
push
push
dec
jne
push
push
push
mov
call
mov
xor
push
push
pushl
mov
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
call
mov
mov
call
mov
mov
call
mov
mov
call
mov
mov
call
mov
mov
call
mov
mov
call
mov
mov
call
mov
mov
call
mov
mov
call
mov
mov
call
mov
mov
call
mov
mov
call
mov
mov
call
mov
call
lea
call
mov
call
mov
lea
call
mov
mov
call
jne
call
cmp
jne
mov
mov
call
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
lea
push
mov
mov
mov
call
mov
push
lea
push
mov
mov
mov
call
mov
pop
call
mov
lea
push
mov
mov
mov
call
mov
call
push
call
mov
lea
push
mov
mov
mov
call
mov
call
push
call
mov
lea
push
mov
mov
mov
call
mov
call
push
call
mov
lea
push
mov
mov
mov
call
mov
call
push
mov
push
mov
call
mov
mov
lea
push
mov
mov
mov
call
mov
call
push
push
mov
call
mov
mov
lea
push
mov
mov
mov
call
mov
call
push
push
mov
call
mov
mov
lea
push
mov
mov
mov
call
mov
call
push
push
mov
call
mov
mov
lea
push
mov
mov
mov
call
mov
call
push
push
mov
call
mov
mov
lea
push
mov
mov
mov
call
mov
call
push
push
mov
call
mov
mov
lea
push
mov
mov
mov
call
mov
call
push
push
mov
call
mov
mov
lea
push
mov
mov
mov
call
mov
call
push
push
mov
call
mov
mov
lea
push
mov
mov
mov
call
mov
call
push
push
mov
call
mov
mov
lea
push
mov
mov
mov
call
mov
call
push
push
mov
call
mov
mov
lea
push
mov
mov
mov
call
mov
call
push
push
mov
call
mov
mov
lea
push
mov
mov
mov
call
mov
call
push
push
mov
call
mov
mov
lea
push
mov
mov
mov
call
mov
call
push
push
mov
call
mov
mov
lea
push
mov
mov
mov
call
mov
call
push
push
mov
call
mov
mov
lea
push
mov
mov
mov
call
mov
call
push
push
mov
call
mov
mov
lea
push
mov
mov
mov
call
mov
call
push
push
mov
call
mov
mov
lea
push
mov
mov
mov
call
mov
call
push
push
mov
call
mov
mov
lea
push
mov
mov
mov
call
mov
call
push
push
mov
call
mov
mov
lea
push
mov
mov
mov
call
mov
call
push
push
mov
call
mov
mov
lea
push
mov
mov
mov
call
mov
call
push
push
mov
call
mov
mov
lea
push
mov
mov
mov
call
mov
call
push
push
mov
call
mov
mov
lea
push
mov
mov
mov
call
mov
call
push
push
mov
call
mov
mov
lea
push
mov
mov
mov
call
mov
call
push
mov
push
mov
call
mov
mov
lea
push
mov
mov
mov
call
mov
call
push
mov
push
mov
call
mov
mov
lea
push
mov
mov
mov
call
mov
call
push
mov
push
mov
call
mov
mov
lea
push
mov
mov
mov
call
mov
call
push
mov
push
mov
call
mov
mov
lea
push
mov
mov
mov
call
mov
call
push
mov
push
mov
call
mov
mov
lea
push
mov
mov
mov
call
mov
call
push
mov
push
mov
call
mov
mov
lea
push
mov
mov
mov
call
mov
call
push
mov
push
mov
call
mov
mov
lea
push
mov
mov
mov
call
mov
call
mov
mov
call
lea
push
mov
mov
mov
call
mov
call
mov
mov
call
lea
push
mov
mov
mov
call
mov
call
mov
mov
call
lea
push
mov
mov
mov
call
mov
call
mov
mov
call
lea
push
mov
mov
mov
call
mov
call
mov
mov
call
lea
push
mov
mov
mov
call
mov
call
mov
mov
call
lea
push
mov
mov
mov
call
mov
call
mov
mov
call
lea
push
mov
mov
mov
call
mov
call
mov
mov
call
push
mov
mov
call
mov
push
mov
mov
call
mov
push
mov
mov
call
lea
mov
call
mov
mov
mov
call
push
push
push
push
push
push
mov
call
push
mov
mov
call
mov
call
test
je
jmp
jmp
push
lea
mov
mov
call
mov
call
push
push
mov
mov
call
test
jne
jmp
jmp
push
push
push
mov
mov
call
test
jne
xor
mov
mov
push
push
push
push
push
push
push
mov
call
mov
push
push
mov
mov
call
test
jne
movl
push
push
push
push
mov
call
push
mov
push
mov
mov
call
mov
push
mov
mov
call
xor
mov
push
push
push
push
push
mov
mov
call
test
jne
movl
movl
push
push
push
push
mov
call
push
mov
push
mov
mov
call
test
jne
cmpl
jne
mov
push
mov
mov
call
push
push
push
mov
mov
call
xor
mov
mov
mov
call
mov
mov
call
mov
mov
mov
mov
call
mov
cmp
je
push
call
cmpb
je
mov
jmp
xor
mov
call
mov
mov
call
mov
mov
mov
call
mov
call
lea
push
mov
call
mov
mov
pop
call
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
lea
mov
call
mov
mov
call
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
lea
push
mov
mov
mov
call
mov
mov
call
cmpb
je
mov
push
lea
push
call
mov
mov
call
mov
call
call
mov
mov
call
lea
push
mov
call
mov
mov
pop
call
push
lea
mov
call
mov
push
lea
mov
call
mov
mov
pop
call
mov
call
xor
pop
pop
pop
mov
push
lea
mov
call
ret
jmp
jmp
pop
pop
call
add
decl
add
add
outsl
imul
add
decl
add
add
ja
insl
outsl
push
add
decl
add
add
js
ja
arpl
aaa
add
decl
add
add
addr16
outsb
outsl
push
add
decl
add
add
outsl
jo
addr16
cmp
decl
add
add
push
js
imul
decl
add
add
bound
gs
aaa
xor
add
decl
add
add
jns
js
push
cmp
add
decl
add
add
outsl
fs
insb
outsl
xor
decl
add
add
outsb
outsl
jbe
xor
add
decl
add
add
jbe
jbe
jo
xor
add
decl
add
add
outsb
imul
add
decl
add
add
outsb
popa
je
aaa
xor
add
decl
add
add
fs
outsb
outsl
imul
add
decl
add
cmpsl
push
mov
add
add
add
decl
add
add
pop
scas
je
pop
mov
mov
add
decl
add
add
sbb
add
decl
add
lods
push
mov
add
add
add
call
add
xchg
inc
popf
pop
mov
push
mov
dec
lods
dec
mov
add
add
decl
add
sbbb
popf
push
mov
pop
add
add
decl
add
sbbb
popf
push
mov
pop
add
add
decl
add
mov
push
popf
push
mov
pop
add
add
decl
add
add
push
sahf
push
mov
mov
mov
decl
add
add
pop
scas
inc
movsb
dec
mov
decl
add
add
push
mov
pop
xchg
add
call
add
add
push
mov
push
lods
inc
mov
add
call
add
add
fs
inc
adcb
scas
pop
add
call
add
add
inc
mov
jge
pop
mov
add
call
add
add
inc
test
pop
mov
add
add
call
add
add
inc
test
pop
mov
add
add
decl
add
add
push
pushf
inc
stos
pop
mov
add
decl
add
sahf
push
mov
pop
mov
mov
add
call
add
add
pop
lods
dec
test
push
mov
add
decl
add
add
inc
mov
add
decl
add
add
pop
mov
push
lods
pop
addb
call
add
mov
cmpsb
pop
test
mov
push
scas
pop
mov
mov
add
call
add
add
push
mov
pop
stos
jp
inc
mov
decl
add
add
push
mov
pop
addb
call
add
add
inc
movsl
dec
mov
inc
lcall
inc
lcall
add
add
pop
mov
jge
add
add
decl
add
add
push
mov
add
decl
add
add
push
lods
inc
mov
inc
addb
decl
add
add
inc
lcall
jnp
add
decl
add
add
pop
mov
add
decl
push
scas
jg
push
mov
inc
addl
add
call
add
add
push
mov
inc
stos
jno
insl
add
add
call
add
add
push
mov
inc
mov
inc
test
incl
add
add
incl
add
add
decl
add
add
push
mov
add
decl
add
add
pop
mov
add
incl
add
add
data16
decl
add
nop
push
stos
inc
mov
mov
push
add
add
decl
add
add
push
mov
dec
mov
incl
add
.byte
movsb
add
add
add
add
add
add
add
xor
add
mov
add
add
add
orb
add
addb
addb
add
xor
add
push
add
xorb
add
js
add
add
add
add
add
push
roll
call
add
add
add
add
les
add
add
add
add
add
add
rolb
add
add
call
add
add
add
add
add
add
add
add
add
fadds
add
or
add
or
add
in
add
add
add
add
add
add
add
add
add
adc
add
xor
add
add
add
add
add
add
enter
xor
add
pop
add
addb
add
add
add
add
add
add
add
add
add
dec
add
add
add
adc
add
in
add
add
add
add
add
add
add
jo
add
pop
xor
add
add
in
add
add
add
out
add
sbbb
add
add
add
mov
add
mov
add
add
add
add
inc
add
add
add
dec
add
dec
add
add
inc
add
dec
add
inc
add
dec
add
inc
add
add
xor
xor
add
add
add
add
add
add
add
add
add
add
add
addb
add
add
add
mov
add
mov
mov
rolb
addb
add
add
add
incl
incl
add
incl
incl
incl
add
incl
mov
mov
mov
ja
ja
ja
ja
ja
ja
ja
xchg
push
addb
push
addb
push
addb
push
addb
push
addb
push
addb
push
addb
push
addb
push
addb
push
addb
push
addb
push
addb
push
addb
push
addb
push
addb
push
addb
push
addb
push
addb
mov
mov
ja
ja
ja
ja
ja
ja
ja
xchg
inc
inc
inc
inc
inc
inc
inc
add
add
addb
inc
inc
inc
inc
inc
jo
pop
jo
xchg
inc
inc
inc
inc
inc
inc
inc
jo
pop
jo
xchg
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
addb
ja
ja
ja
ja
ja
mov
mov
mov
add
incl
add
add
ljmp
add
add
add
add
add
add
add
add
add
rolb
add
add
add
mov
add
mov
mov
rolb
addb
add
add
add
incl
incl
add
incl
incl
incl
add
incl
mov
mov
incl
incl
incl
incl
incl
incl
incl
mov
inc
inc
lock
inc
addb
ja
mov
mov
add
add
incl
add
incl
add
add
add
ja
push
add
add
add
add
cmpsb
lret
xor
scas
lret
cmp
mov
ds
into
and
lret
push
out
fnsave
or
ds
ret
xor
xor
test
std
ret
aas
mov
arpl
popa
lahf
push
out
sbbb
in
jmp
adc
or
and
add
out
adcl
mov
jnp
mov
fmull
subb
sub
push
std
xchg
and
ss
mov
test
in
ret
adc
and
dec
xchg
arpl
lock
js
pop
xchg
pop
ret
pop
mov
inc
and
cs
jb
push
lock
mov
jo
inc
add
inc
and
xchg
lahf
aad
outsb
dec
leave
lea
and
leave
mov
inc
loop
nop
int
dec
nop
loope
push
mov
push
int3
in
inc
sub
dec
cwtl
les
imul
or
cmp
cmp
jge
adc
or
ja
into
mov
dec
rorb
pop
mov
test
mov
sub
jmp
mov
mov
mov
pop
stos
inc
mov
sahf
jge
test
sbb
inc
stc
leave
xchg
jg
mov
mov
jo
inc
pop
inc
lcall
iret
out
dec
xor
mov
cmp
fcompl
int3
cs
stc
nop
rorb
and
cmp
jnp
and
xor
and
mov
std
negb
cmp
add
in
sti
repz
mov
pop
sub
sub
jno
fstpl
push
cmpsl
sbb
push
lods
push
sahf
sarl
cmp
mov
movsb
inc
fwait
leave
lods
inc
jge
roll
sbb
fsub
push
jecxz
mov
lcall
adc
jl
pushf
in
mov
pop
mov
pop
mov
jbe
gs
std
fidivs
leave
lret
jbe
mov
push
mov
lcall
jle
mov
add
and
fnstcw
push
add
out
inc
movlps
ror
mov
notb
xor
addr16
in
por
push
lock
push
les
mov
mov
pop
fldcw
adc
fwait
iret
sub
sahf
jb
cmc
pop
out
or
fdivl
xlat
push
popa
mov
stos
inc
inc
imulb
jne
mov
adc
dec
inc
mov
xor
fidivl
jae
mov
addr16
jo
insl
sbb
add
jge
add
inc
pusha
mov
cmpsl
jmp
jae
enter
pop
scas
jno
js
adc
mov
mov
lcall
mov
data16
bound
push
pop
icebp
insl
pop
lea
aaa
into
jbe
jo
loopne
inc
call
xlat
sub
into
xor
mov
sub
push
popf
inc
xchg
jg
jl
cmp
out
aam
adc
inc
pop
je
test
sbb
adc
dec
imul
dec
dec
out
ret
jno
mov
add
loope
std
xor
mov
ret
mov
fs
in
adc
les
adc
pusha
pop
sbb
pop
stc
int3
adc
cmpsl
pop
adc
mov
imul
sahf
cmp
rcrl
test
sbb
sahf
adc
pop
fiadds
jmp
inc
roll
lcall
orb
outsl
mov
mov
push
sub
adcb
scas
movsl
and
mov
jg
mov
inc
and
mov
push
xor
sub
add
jmp
aad
lea
ljmp
mov
and
jmp
pushf
inc
mov
sbb
mov
dec
repnz
push
cs
dec
shl
push
movsl
sbb
pop
pusha
dec
lds
in
push
cli
add
mov
dec
pop
or
cs
int
cmp
cmp
push
xor
in
xchg
push
push
cmp
bnd
imul
add
rcll
jge
mov
add
test
ja
and
lods
or
int
lret
jmp
cwtl
adc
lods
loopne
outsl
dec
pop
movsl
jae
sbb
sbb
cmc
out
movb
mov
data16
xor
aaa
stc
subb
cmpsl
and
test
arpl
pop
push
and
icebp
leave
cwtl
outsl
adc
add
inc
lcall
ljmp
push
and
rcr
fimull
and
jp
imul
fs
cmpsl
repnz
or
loopne
add
cmp
iret
rol
add
adc
xchg
push
aam
cs
mov
and
out
sub
jl
push
pop
mov
clc
mov
mov
mov
dec
sub
xchg
repz
jne
lods
ja
pop
popf
rcrl
push
iret
xchg
ret
ljmp
aaa
pop
xor
fbld
and
add
pop
mov
cmp
sub
or
mov
fcoml
and
jmp
lret
mov
outsl
aad
dec
dec
xchg
les
xlat
mov
inc
hlt
fldcw
shrb
push
clc
pop
rorl
dec
icebp
xchg
cmpsb
and
cmp
js
cmp
mov
outsb
movsl
pop
ss
mov
fistps
mov
pop
mov
test
popf
es
inc
dec
push
mov
xor
lods
ss
cmp
mov
mov
jecxz
jns
pop
test
mov
jns
inc
jle
clc
stc
inc
movsl
add
dec
add
or
mov
fisubl
sbb
sar
push
dec
push
mov
dec
stos
shlb
jg
inc
movsl
pop
push
ja
cmp
xchg
inc
mov
int3
push
jg
lock
iret
call
lods
jle
mov
frstor
push
cmp
pop
out
cmp
xor
push
cli
aas
clc
sarb
cld
mov
or
out
xor
insl
add
stc
movsl
sbb
mov
push
adc
insb
mov
xchg
mov
aas
sbbb
repnz
jmp
shr
mov
xchg
mov
jmp
jmp
adc
gs
pop
mov
adc
scas
pop
mov
lret
shrb
sarb
popa
clc
inc
scas
and
sbb
stos
cmp
hlt
out
push
movsl
pusha
or
in
addr16
jmp
mov
shrb
out
movsb
shr
fstpt
int3
lds
xchg
mov
mov
jmp
cmp
data16
cld
sbb
test
repz
test
xchg
push
sbb
sti
pop
pusha
inc
gs
loopne
jae
std
push
cmpsb
notb
jmp
xor
insb
shr
sbb
xor
cmp
dec
xchg
and
sub
push
lock
and
lods
out
cmpsl
push
push
xchg
pop
mov
push
xchg
mov
out
hlt
repnz
data16
imul
jae
adc
adcb
into
movsb
fwait
xchg
dec
push
inc
xor
mov
lea
loop
jno
out
jmp
sbb
adc
outsl
push
fsts
repnz
xchg
xor
fisubrs
ret
sbb
lods
lods
jle
push
mov
shrl
add
xorl
adc
or
dec
nop
std
stos
jo
div
into
jg
js
in
je
testl
jno
inc
inc
sti
sbb
imul
cmc
aaa
push
in
jle
dec
int
push
js
cli
add
cli
mov
hlt
rolb
push
mov
test
add
mov
aaa
nop
push
out
add
and
dec
push
jp
lret
pop
or
pushf
stos
sub
adc
mov
orb
repnz
aaa
leave
fsubl
xchg
pop
and
idivb
mov
push
cs
movsb
xchg
sti
dec
jns
ror
mov
push
push
cmpsb
mov
lods
fdivl
push
jle
push
cmc
xchg
jnp
les
pop
adcb
fs
cmp
mul
pop
in
lds
cmpb
add
test
inc
cmp
lret
xchg
dec
lea
mov
or
stc
std
mov
sarb
push
pushf
push
outsl
mov
mov
or
mov
ljmp
jbe
jl
adc
fisttpll
pop
loopne
gs
pushf
lret
sbbl
dec
lcall
mov
stc
rcrl
adc
sub
mov
shl
xchg
pop
jb
inc
adc
cmpsb
jge
loop
sbb
jo
orb
call
in
xchg
mov
push
cltd
loopne
sub
mov
sbb
fidivl
in
nopl
or
jnp
icebp
lret
sahf
cli
sub
lcall
call
fnsave
vpmadcswd
jl
mov
popa
sbb
xchg
mov
lret
addr16
addl
jp
ds
fsubrl
or
mov
fidivl
and
jnp
push
mov
fcomip
jl
mov
mov
clc
mov
xchg
pusha
sbbb
movsl
shll
call
xrelease
push
cwtl
add
es
insb
ret
xchg
aas
or
loop
push
sub
push
push
push
aad
mov
or
aam
jge
fstpl
fidivrl
push
enter
and
inc
push
xorb
xor
dec
jmp
popf
sbb
pop
mov
test
popf
mov
lcall
add
lods
sbb
pop
or
adc
push
jp
hlt
mov
pop
or
inc
mov
xchg
and
or
sahf
cli
push
mov
pop
adcb
xchg
iret
repnz
mov
mov
lods
mov
data16
mov
je
xchg
cmp
notl
push
adc
jbe
cld
fdivl
in
clc
jge
push
cwtl
or
imul
lret
add
pop
mov
out
mov
jp
lock
push
popf
sbb
inc
ja
jns
xchg
push
sbbl
mov
xlat
jo
idivb
jmp
jae
ret
rcr
add
adc
or
fdivr
cmpl
mov
jnp
push
xor
scas
andb
loop
jecxz
sbb
xchg
jno
out
scas
jo,pt
pop
pushw
mov
shrb
std
fisttps
rcrl
or
stos
out
push
or
test
adc
xor
pop
and
mov
daa
add
xor
mov
mov
sub
pop
loop
sbb
mov
xchg
ss
lods
pop
scas
addr16
lea
xchg
xlat
in
out
addl
push
mov
pop
int3
imul
xor
lcall
push
sub
inc
cmp
jb
xchg
dec
lock
insb
mov
sahf
call
mov
stc
mov
jg
or
rorl
cmp
jne
mov
les
daa
outsb
gs
loopne
out
lods
leave
push
fsubs
jo
aam
jbe
sbbb
add
ret
push
test
sbb
lret
xor
and
cmc
lahf
mov
test
xorl
jp
pop
stc
in
ljmp
jo
popa
shll
and
xor
mov
adc
pop
loopne
nopl
cmp
pop
inc
call
pop
push
sub
sbb
pusha
cmpsl
jnp
lret
jnp
mov
or
iret
mov
call
daa
fsts
and
xchg
into
popa
enter
icebp
or
imul
inc
int3
rorb
xchg
mov
mov
mov
xchg
data16
push
jecxz
sub
jle
mov
pop
cmp
andb
jbe
xchg
or
stos
loope
insl
xchg
sbbb
paddsb
jne
ret
pop
or
mov
and
stos
cli
add
movsl
fstl
push
pushf
push
imul
and
adc
div
xchg
mov
pop
sbb
cmc
push
ficomps
je
cmpsb
dec
cmp
imul
test
pop
push
ljmp
dec
shll
loop
ja
xor
lret
adc
add
stos
movhps
sarb
or
xchg
outsb
cs
loop
push
push
sub
shrb
sbb
insl
fcoms
scas
ret
sub
jp
mov
cmp
idivb
out
pop
out
and
lcall
rorl
idivb
jmp
cmpsl
pop
jns
mov
test
pop
jl
pop
mov
dec
inc
mov
inc
das
sub
dec
push
mov
jge
adc
mov
lahf
jmp
pusha
xor
fisubrl
jo
addr16
das
xchg
xchg
xor
popf
mov
pop
inc
dec
lcall
mov
fisubs
lahf
imul
push
rcrl
mov
push
pop
xor
icebp
and
cltd
inc
xchg
loop
add
jb
popf
jp
mov
sbb
scas
xor
push
push
lock
mov
push
pop
mov
mov
ret
and
jge
sti
repz
loope
xor
jnp
jae
out
pop
data16
mov
out
rclb
pop
scas
insb
jl
imul
jle
adc
outsl
dec
cmp
pop
cmp
dec
aad
lret
imul
xchg
mov
mov
pop
imul
xor
mov
adc
push
std
popa
mov
adc
mov
and
sub
inc
rcll
xchg
dec
xchg
arpl
pop
push
xchg
xchg
roll
iret
and
push
pop
std
jmp
je
fdivrs
add
mov
test
lods
xchg
out
fidivrl
jle
outsl
and
mov
gs
push
xor
mov
popf
mov
add
cmpsl
jo
out
js
mov
int
xchg
sub
mull
cmp
pop
mov
xlat
sub
out
popf
sub
imul
hlt
adc
lret
jg
movsl
mov
inc
xor
insl
test
xchg
jge
rorb
adcb
roll
insl
and
mov
mov
sbb
rclb
mov
or
les
fldl
ss
push
subb
test
out
push
and
test
dec
mov
xchg
lock
divps
mov
xchg
jl
clc
insb
jl
jecxz
ja
push
lods
out
or
lock
loope
out
stos
dec
clc
add
mov
sub
es
add
stos
push
xchg
insl
inc
popa
sbbb
fisubl
insl
shrb
lds
sub
push
inc
ficoms
iret
lret
js
lret
add
mov
das
dec
test
das
das
jle
lds
and
dec
lds
enter
les
cmp
in
add
movsb
lods
insl
jge
adc
scas
dec
push
adc
repnz
jns
daa
lcall
sub
mov
je
mov
into
add
cmp
push
in
dec
imul
pop
stc
sbb
inc
scas
jmp
dec
cmp
jp
adcb
out
scas
dec
and
bound
arpl
and
fisttps
dec
das
cltd
stc
jo
push
call
stos
out
xor
sub
subl
push
aas
add
fisubl
dec
adc
frstor
movsb
push
mov
pusha
jp
jg
shrl
mov
fldenv
or
jae
mov
push
and
movsl
lods
cmp
call
inc
bound
out
fcoms
dec
out
pushf
mov
cmpl
aaa
es
arpl
mov
sub
out
fsub
push
shr
andb
aas
sbb
jb
jo
dec
dec
pop
call
sub
das
push
lcall
out
lock
stos
mov
daa
push
and
js
out
int3
test
aas
cmp
inc
in
mov
shr
xchg
out
mov
aam
mov
adc
pop
aaa
pop
clc
hlt
xchg
lea
mov
inc
dec
lds
in
cmc
outsl
in
push
pop
repz
and
jmp
xchg
mov
iret
push
into
add
mov
arpl
ds
pop
jbe
sbb
sbb
jge
inc
in
mov
mov
mov
imul
call
jle
inc
mov
jle
dec
gs
jl
pushf
lods
mul
mulb
dec
imul
lds
push
push
xchg
cld
jl
fistps
push
imul
pusha
pop
loope
add
cmp
lret
push
aad
sub
mov
roll
dec
cmp
out
dec
cmp
dec
mov
sbb
popl
lds
push
ja
mov
push
push
push
or
sbbl
mov
mov
es
movl
pop
pop
mov
nop
xchg
xchg
jmp
je
push
stos
pop
mov
aaa
or
add
push
cld
push
pushf
cltd
icebp
imul
in
dec
std
cmp
xchg
xor
push
xchg
and
push
xor
or
in
pop
add
in
sub
sbb
pusha
sub
sub
cld
pop
push
jge
mov
int3
sbb
addr16
std
imul
xchg
add
push
mov
mov
jns
imul
cmp
push
out
lods
loop
movsb
ljmp
cmp
cltd
test
jmp
mov
cmpl
in
or
int3
xor
mov
mov
xor
mov
in
adc
jmp
jmp
rdtsc
int3
or
lcall
push
leave
daa
lret
clc
add
adc
pusha
jecxz
mov
mov
rcl
and
inc
push
stos
push
mov
mov
mov
insb
xlat
outsb
mov
push
nop
push
cmp
mov
push
imul
jge
adc
popf
mov
xlat
subl
loop
ret
lcall
lds
xlat
push
filds
dec
hlt
pushf
push
test
sbb
loope
and
mov
cmp
in
stos
push
sbb
add
rclb
fildl
jg
cli
and
inc
ja
mov
int
pop
shrl
nop
jno
icebp
mov
add
add
in
das
dec
cmpsl
xchg
add
adc
pop
loop
pop
push
xchg
repz
stos
mov
sbb
pop
dec
mov
cltd
mov
loop
sub
push
and
sub
fdivrl
clc
or
aam
in
xchg
or
js
in
shrb
popf
test
mov
push
clc
ror
inc
sub
je
xchg
push
imul
push
loopne
or
in
nop
insb
inc
in
push
xchg
jg
cmpb
cltd
out
sbb
and
mov
push
test
test
addr16
inc
in
rcll
pop
pop
lret
push
mov
out
pushf
ja
cmc
jno
mov
cs
xchg
scas
inc
stos
add
cmp
and
push
cmpsl
cmp
sbb
mov
adc
xchg
and
add
enter
out
adc
push
out
loop
mov
fwait
mov
xor
aaa
int3
cmc
outsb
mov
inc
and
jl
push
aam
pop
cmpsb
insl
fdivl
xor
gs
loop
xor
add
adc
sub
mov
out
ds
test
sbb
cmp
in
dec
addr16
lds
lds
nop
pop
mov
xlat
jg
ficompl
dec
mov
xchg
fimull
movsl
jne
push
jmp
je
aad
mov
dec
and
cwtl
inc
mov
aad
movsl
push
hlt
inc
jp
shrb
sub
and
js
xchg
sarl
movsl
xor
sub
mov
scas
mov
dec
leave
orl
cmpb
mov
test
mov
add
gs
lcall
mov
rcr
and
and
lock
add
pop
lock
push
xlat
in
in
popf
sarb
push
mov
cltd
pop
sbb
sub
roll
loopne
fidivrl
in
loopne
adc
xor
dec
loope
ds
lcall
pop
mov
mov
jg
inc
or
movsb
pushf
stos
pop
bound
xor
push
movsl
or
adc
pop
aad
pop
xchg
sti
sahf
mov
test
mov
dec
pop
jns
push
mov
outsb
jbe
xchg
fwait
pop
mov
lea
dec
xchg
les
fcmovnbe
in
imul
popf
and
lea
sub
outsb
push
scas
and
mov
xchg
mov
pop
std
nop
test
inc
scas
push
ret
xchg
dec
movsl
dec
xor
dec
jg
mov
cltd
sub
cltd
popa
test
mov
xchg
mov
ficomps
lcall
push
scas
inc
jp
or
adc
dec
push
add
jmp
xor
aam
imul
enter
adc
push
popf
xchg
lods
xlat
rclb
pop
add
mov
or
dec
mov
mov
mov
push
movsb
add
data16
mov
lods
mov
popa
dec
pop
cmp
add
rorb
sbb
and
test
fwait
call
fwait
sbb
mov
mov
scas
push
push
jmp
cmp
mov
mov
mov
mov
xchg
cmc
sub
imul
sub
xchg
xor
pop
stc
aaa
jmp
dec
mov
imul
jae
cmp
cmp
mov
lea
mov
push
in
push
lods
pop
das
jno
insl
mov
popa
aas
push
xor
sub
sub
add
aam
out
xchg
xor
mov
fnstenv
and
repz
or
gs
jecxz
jmp
xchg
stc
hlt
dec
sahf
int3
mov
sbb
dec
mov
icebp
shlb
hlt
mov
out
and
mov
and
add
sub
rcrl
out
loope
outsl
dec
inc
sub
aas
push
aas
pop
lods
inc
mov
inc
cmpsl
outsl
cmp
arpl
into
pushf
scas
dec
dec
cmpsb
ds
mov
fwait
outsl
dec
out
sub
fsts
fsubp
sbb
hlt
xchg
shll
int3
imul
movsl
js
ljmp
mov
aam
push
out
jge
cmpsb
xor
out
sbb
push
mov
test
pop
cmp
inc
push
sbb
push
mov
push
jg
fs
xchg
imul
and
je
das
pop
jge
icebp
adc
inc
xchg
push
adc
add
sub
imul
fmull
fwait
test
push
mov
movsl
ss
jae
pop
sub
shrl
test
movsb
cmp
call
in
test
ja
inc
adc
outsl
lcall
movsb
sahf
popa
sbb
cmp
fdivl
hlt
bound
cs
adc
mov
lods
pop
push
pop
mov
xchg
shrb
xchg
jge
xor
scas
pusha
lahf
mov
or
xchg
dec
lea
out
es
cmp
fs
mov
loopne
ds
xchg
push
repz
cmove
cmpsb
push
scas
mov
pop
lahf
pop
mov
arpl
cmp
inc
lahf
movsl
pop
mov
mov
out
lea
mov
imul
sub
mov
test
stos
inc
out
stc
add
push
adc
cmpsl
test
scas
push
aas
fisubl
sub
mov
or
sbb
pop
lds
enter
mov
dec
aam
mov
mov
psubusb
pop
push
jno
fisubl
inc
sar
pushf
push
xor
or
loope
pop
imul
fldt
cmpsb
mov
ret
mov
leave
jl
mov
scas
fs
lahf
sbb
jl
fiaddl
dec
xor
insl
cmp
xor
int3
add
stc
inc
dec
cmp
jmp
mov
pop
adc
mov
sbb
subl
fnstcw
shlb
mov
andb
rcrb
add
je
xchg
and
adc
cltd
push
ds
mov
inc
mov
jmp
sub
inc
lahf
sub
pusha
sub
adc
add
push
out
hlt
fldenv
inc
sub
xchg
and
mov
in
orl
adc
jle
outsb
pop
dec
add
scas
bound
lock
xchg
inc
xchg
lods
setle
sti
fs
mov
std
shlb
adc
adc
ret
in
mov
adc
xchg
mov
and
sub
dec
cmc
cmp
xor
cmp
jg
mov
mov
stos
pop
mov
cwtl
push
mov
push
and
mov
dec
lea
das
and
loope
movsb
shl
fsubs
idivb
fcoml
dec
jmp
ret
in
aam
dec
cmc
jbe
push
fisubrs
sub
push
mov
pop
ret
mov
lods
mov
mov
push
popa
mov
clc
into
flds
mov
lret
fwait
inc
mov
and
sub
lret
or
sub
test
xor
jmp
leave
cmp
mov
sbb
adc
fsubrl
sbb
add
dec
adc
cmpsb
mov
loopne
loop
pushf
mov
in
mov
mov
frstor
lret
test
cmpsb
add
mov
xchg
mov
or
ret
popf
data16
fldt
icebp
dec
out
lret
test
pop
loope
arpl
sbb
or
mov
xchg
jno
and
jno
das
rcl
lods
xor
adc
cmp
stos
jnp
repz
cmpsb
xchg
and
lds
dec
fdivl
xor
dec
call
iret
iret
jg
aad
into
push
xchg
movsl
jp
xchg
push
mov
cmp
scas
push
rolb
dec
ret
inc
or
mov
pop
movsl
sub
repnz
cmp
mov
sub
pop
mov
fldt
repnz
mov
aaa
insl
inc
push
stos
dec
cli
dec
fwait
sbb
aaa
xchg
mov
xchg
sub
arpl
mov
xor
xor
fwait
inc
dec
xchg
inc
imul
popf
push
dec
fidivrs
es
sbb
test
cs
pop
mov
sbb
fdivl
and
push
stc
fisubrs
aam
leave
enter
pop
fldl
fldt
cmp
sub
add
es
out
xor
and
lods
pop
mov
fidivrs
aas
push
ja
add
cli
lods
and
mov
and
insb
andl
aam
push
push
sarl
cmp
xor
jbe
push
jmp
xchg
xor
cs
js
stos
jbe,pn
and
jns
repz
sti
aam
nop
mov
mov
adc
imul
stos
xor
dec
adcb
pusha
repnz
not
sub
pop
scas
jecxz
aaa
pop
dec
movsb
rclb
cwtl
pop
inc
add
cmp
ja
dec
lret
push
insb
xchg
bound
sub
pop
or
sbb
cmpsl
dec
push
popf
outsb
cmp
test
inc
movsb
es
shlb
fprem
add
xor
bound
pushf
adc
out
mov
arpl
adc
data16
push
and
fidivs
out
rcrb
sbb
push
stos
add
fldcw
mov
cmp
stos
dec
faddl
scas
movsl
push
lods
dec
in
mov
arpl
sub
out
sbb
sub
pop
inc
mov
xor
movsl
add
sti
pop
int
push
sti
inc
mov
into
std
push
mov
dec
lret
test
inc
adcb
xorl
jmp
lret
mov
jnp
sbb
pop
xacquire
jle
mov
movsb
and
es
cmp
jp
dec
push
jbe
mov
push
out
add
jmp
cmp
sub
sar
ret
or
mov
sbb
imul
in
and
lds
dec
dec
inc
jl
or
sbb
push
push
hlt
stos
adc
jle
test
stos
push
sub
and
pop
adc
cwtl
and
xchg
mov
pop
nop
es
xchg
imul
cmp
in
les
mov
out
sub
call
test
gs
pop
je
js
aaa
cli
jecxz
jb
es
push
dec
lods
xor
adc
push
and
dec
add
pop
sbb
imul
adc
imul
xchg
fs
xchg
xor
insb
push
out
subl
test
pop
test
dec
lcall
jo
xchg
subb
adc
mov
stc
lret
mov
cltd
sbb
movsl
dec
out
and
arpl
mov
xor
cltd
jecxz
push
pop
xor
push
pop
jne
int3
jo
adc
sub
sbb
xchg
insl
ljmp
idivb
inc
xchg
mov
mov
pop
stos
push
jns
sub
cmp
stos
imul
fmuls
cld
or
sub
pop
lods
dec
pop
xchg
jb
iret
sub
test
adc
in
jno
js
sbb
psubb
sahf
inc
cmc
jl
pop
rcll
jecxz
jle
sarl
lret
movsl
imul
adc
ds
mov
push
jg
popl
and
cmp
cs
xor
cmp
xor
cld
pop
push
add
pop
jb
test
pop
cwtl
fistpll
fldl
out
dec
jbe
inc
and
and
mov
dec
jp
xchg
xor
mov
mov
mull
jbe
outsb
mov
fdiv
cli
fmuls
or
lods
outsl
jecxz
xor
pop
jge
push
mov
push
jg
and
inc
push
outsw
movsl
out
mov
lods
ljmp
dec
mov
insb
adc
mov
mov
jge
cli
push
fdivrl
add
inc
add
call
push
rorb
pop
icebp
xor
sbb
cmp
jmp
mov
sub
cmp
mov
xchg
mov
push
movsb
xchg
jmp
xchg
dec
mov
or
push
test
cmc
push
pop
and
xchg
ja
lods
ja
pop
push
nop
lds
insb
xchg
fs
mov
or
loopne
xchg
mov
add
std
insb
jecxz
sub
xchg
test
popa
sub
adc
scas
in
add
mov
cmpb
fs
sti
imul
shl
inc
cmpsb
popf
push
cmpsb
stc
out
inc
adc
lea
jb
add
dec
imul
jg
frstor
out
pop
pushf
aas
in
pop
ret
sub
sub
enter
or
test
ret
and
insb
lahf
jo
cmp
lock
subl
scas
xchg
cmp
fucomip
cmp
mov
dec
mov
aaa
pop
fidivs
jmp
sub
add
ficomps
pop
hlt
fcoml
sub
and
test
lcall
push
std
or
icebp
push
popa
stos
push
stos
xchg
push
mov
sub
sub
mov
cwtl
cmpsl
cmpsb
jnp
jg
rcrb
js
aas
xchg
bound
js
nop
sbb
and
out
je
sub
testl
mov
pop
or
xchg
jle
fnsave
stos
mov
mov
test
mov
xor
cmc
push
pop
je
mov
jl
pop
push
push
pop
add
dec
xchg
imul
popf
jge
sub
movsl
out
shrl
ret
or
xor
sti
shll
divb
inc
xor
lds
jne
lods
pop
mov
ljmp
cmp
add
xchg
and
adc
push
or
repnz
pop
popf
or
mov
jae
fsubl
outsl
fildll
aad
push
xchg
cmp
or
loopne
or
or
push
pop
ret
das
shrd
push
pop
mov
or
in
mov
clc
add
clc
mov
push
daa
push
mov
xchg
mov
popf
cwtl
cmc
ret
xchg
outsl
cmpl
xchg
stos
arpl
and
xchg
popa
inc
rclb
movsl
inc
inc
push
mul
jle
clc
adc
icebp
outsl
imul
and
mov
mov
orl
pop
mov
mov
sti
imul
dec
rcl
jmp
mov
repnz
mov
or
dec
mov
in
inc
jmp
sub
icebp
jne
movsl
lret
xlat
cmp
sar
fnstenv
push
pop
xchg
in
push
sahf
mov
andl
aad
cld
scas
popa
dec
mov
test
xchg
je
mov
std
pushf
jns
mov
mov
mov
bnd
pop
xor
push
test
mov
jg
push
rorl
push
out
or
sub
loope
inc
push
std
aad
xchg
out
out
adc
in
cmp
in
mov
dec
push
inc
cmp
shrb
cmp
das
int3
lods
shl
fxch
cmp
lds
and
fcompl
test
shll
cmp
mov
roll
inc
stos
icebp
adc
rcrb
xlat
stc
mov
je
int
mov
hlt
xchg
jg
xchg
sbb
pop
pop
cwtl
call
pop
xchg
adc
cltd
roll
lcall
shll
sub
ss
dec
js
xchg
jns
sti
add
int
sti
es
inc
imul
dec
int
xchg
dec
sbb
int
sub
dec
mov
in
pop
rorb
mov
aam
push
or
push
outsl
mov
sub
das
jp
into
dec
mov
in
or
and
outsl
pop
and
dec
cmp
pusha
sub
and
cmp
dec
insl
push
loop
fs
lret
push
push
cmpsl
out
test
mov
cmpsb
inc
adc
jecxz
adc
cmc
fsubrp
push
and
mov
adc
mov
imul
inc
xor
iret
or
dec
fwait
pop
sub
jp
fnstenv
shll
insb
jmp
jp
mov
adc
jmp
sbb
jnp
xor
mov
lds
fisttpl
shrb
jns
imul
idivl
outsb
lea
mov
mov
xchg
imul
pop
cmpsb
xchg
push
pop
push
fiadds
xchg
mov
dec
mov
xor
pop
mov
aaa
out
mov
jb
sub
mov
and
and
sub
aam
cmp
jmp
in
sahf
fcmovne
add
pop
fsub
mov
cmpb
adc
jge
fisubs
and
out
push
test
dec
mov
mov
sbb
or
pop
and
jmp
hlt
ds
jne
into
or
sub
push
pop
in
lock
cltd
scas
mov
pop
lret
push
mov
add
popf
adc
pop
mov
out
xchg
cmp
xchg
ret
xlat
subl
stos
into
movswl
insl
insl
add
mov
mov
push
xchg
mov
cmp
cmp
std
and
pop
xchg
lret
shrb
sub
shll
xlat
shll
into
cmp
lods
push
ss
jle
or
testl
bound
mov
popa
fwait
mov
lcall
mov
mov
cmc
sub
test
mov
inc
jp
adc
jmp
iret
in
adc
les
movsl
jmp
mov
das
xchg
dec
push
cwtl
aas
adc
les
mov
pop
js
mov
push
pop
js
and
sub
xchg
repz
pop
cmp
in
jmp
jle
ret
mov
in
jbe
mov
adc
add
pusha
int
mov
out
or
push
mov
dec
or
jb
xchg
push
fs
mov
rcl
test
jno
inc
call
push
mov
xchg
sub
repz
out
sbb
es
and
scas
pop
inc
stos
inc
push
mov
fmulp
repnz
sbb
lods
stos
pop
add
add
push
cmpsb
push
sbb
push
xchg
pop
popa
cmpsb
icebp
and
xor
dec
out
xor
inc
cmpsl
cmp
shlb
add
out
sub
sbb
jbe
cmc
adc
sub
jge
fldenv
cmc
xchg
dec
or
jl
outsb
cli
ljmp
mov
les
xchg
jo
stos
push
xchg
in
xlat
fdivrs
adc
cmp
test
lcall
sub
cmp
fiadds
add
fimull
aad
mov
sub
mov
test
fnstcw
mov
or
nop
dec
mov
jno
add
pusha
stc
ja
int
add
jnp
aam
adc
mov
icebp
arpl
mov
and
mov
sub
mov
inc
movsb
jmp
subl
ss
xor
adc
ret
leave
vpcmpeqw
sbb
fisubs
xchg
jle
bound
aad
cmpsl
push
or
aad
pushf
in
add
enter
mov
gs
test
pop
leave
cmp
xor
in
inc
xchg
inc
ja
loop
js
mov
cmc
cmpsb
jle
rorl
stc
xlat
mov
inc
or
jbe
lcall
push
in
cltd
mov
sbb
lock
leave
sub
mov
cmp
push
jae
xchg
cmp
movb
addr16
cmp
push
mov
int
push
xchg
xor
lods
dec
mov
adc
test
ds
into
push
arpl
pop
iret
jmp
pop
mov
mov
or
ds
idiv
xchg
xor
lahf
push
cs
push
xchg
pop
and
jbe
mov
sahf
inc
out
cmpsb
xor
mov
aad
clc
pop
test
cmpsl
sbb
imul
and
cmpsb
inc
xchg
dec
out
pop
xchg
sub
repz
mov
dec
push
mov
inc
dec
sbb
inc
popf
sbb
cmp
jge
popf
dec
imul
int
fcomp
and
add
lods
mov
push
xor
icebp
daa
or
ret
shrb
outsl
imul
das
xorb
sbb
lods
gs
jmp
push
fbld
fimull
fsubl
pop
xchg
xor
sbb
sbb
test
or
dec
shl
jne
xor
iret
andl
sbb
stos
sbb
jbe
js
jae
out
ss
mov
negb
xchg
stos
inc
into
jecxz
lods
lea
test
xchg
test
push
add
shrb
dec
mov
xor
repnz
and
test
dec
scas
dec
ret
xchg
sub
inc
inc
mov
popa
mov
int3
dec
data16
data16
and
sbb
icebp
scas
add
cld
push
stos
aam
push
jmp
es
test
fnstsw
mov
inc
fbld
cmp
stos
jb
mov
add
out
pop
xor
pop
test
adc
rclb
shl
lcall
sub
and
cmp
cmp
or
xor
push
sub
sbb
jl
pop
rcr
outsl
mov
icebp
mov
cwtl
mov
cmp
push
mov
out
ss
xchg
pop
clc
sub
test
xchg
and
xor
loopne
sbb
cmp
dec
push
mov
dec
xchg
inc
popa
pop
mov
sub
lcall
pop
pop
and
into
and
movsl
sbb
leave
out
mov
bound
adc
mov
xor
xchg
push
ljmp
mov
xor
push
lcall
add
pop
push
jo
fisttps
dec
pop
or
or
stos
mov
iret
outsl
loope
xor
mov
rol
inc
shlb
dec
adc
lods
cmp
jecxz
pop
mov
adc
mov
test
sbb
or
cs
and
xor
push
dec
jge
js
clc
mov
pushl
repz
imul
mov
xor
iretw
loopne
out
arpl
mov
stc
dec
and
in
push
cmpsl
in
neg
arpl
jns
jo
mov
mov
or
les
fisubs
je
lds
pop
push
jg
push
sub
push
push
lods
jne
int
cli
xor
push
ljmp
inc
mov
aaa
cmp
push
pop
jnp
test
mov
cmp
fadds
orl
outsb
test
adc
in
jbe
inc
sub
sub
jp
sbb
push
xchg
or
test
xor
cmpsl
mov
sbb
and
imul
fnstsw
iret
push
jae
sbb
lds
mov
int
mov
xchg
lods
pop
aad
lret
cli
xor
scas
xor
shl
cmp
adc
pop
in
and
pushl
xchg
jnp
pop
xor
sub
sbb
dec
insl
call
jmp
xchg
push
add
rolb
jns
cmp
stos
call
mov
mov
test
jp
out
push
lds
pusha
adc
fisttpll
dec
std
daa
cmp
cltd
bound
push
orb
rol
repz
mov
into
jmp
fstps
mov
mov
test
push
mov
pop
mov
test
inc
stos
in
push
jbe
insb
xchg
aaa
sarl
mov
rcrb
iret
and
jecxz
fs
xor
and
and
jnp
outsb
cltd
adc
mov
add
sub
cltd
inc
rolb
jb
mov
ja
sti
and
mov
jg
jle
gs
or
mov
clc
sub
lock
pop
stos
sbb
mulb
push
mov
lret
pop
lock
cmp
repz
adc
dec
adc
inc
loopne
ljmp
lods
pop
xchg
outsl
fs
mov
adc
movsb
sti
add
mov
je
in
and
lahf
inc
cmc
jecxz
movb
adc
pop
inc
fstpt
std
scas
dec
jg
dec
mov
push
in
call
jo
ja
fcoml
das
jmp
stos
das
jge
popf
test
inc
sbb
push
insb
jg
jecxz
les
cmp
inc
adc
out
xchg
and
dec
les
shr
jbe
pop
shll
mov
in
shlb
cmc
loope
stos
test
adc
xchg
inc
sub
out
push
xlat
mov
mov
cmpsb
int
xlat
mov
sar
xlat
xor
add
roll
inc
les
in
add
add
adc
insl
cwtl
push
xor
test
xor
inc
pop
adc
je
jbe
cs
mov
dec
fcompl
in
cbtw
jle
ljmp
shrb
mov
mov
mov
push
int
or
fldcw
movsb
lds
jno
test
push
pop
dec
add
lds
sub
sbb
jnp
dec
sbb
lods
mov
lods
mov
xchg
movsl
jle
dec
pop
mov
jle
adc
inc
stos
inc
scas
add
jge
mov
xorl
mov
int
out
into
xor
es
jmp
push
fstpl
fstpt
and
mov
sub
loopne
push
dec
sbb
push
push
pop
adc
adc
mov
scas
inc
sbb
leave
das
fnsetpm(287
cmp
mov
mov
clc
into
je
fcompl
ljmp
sbb
mov
bound
arpl
mov
gs
cli
mov
negb
pop
push
sbbb
hlt
loop
pushf
shll
cmpsb
pop
test
scas
insb
inc
sub
add
or
jl
stc
lret
outsb
cwtl
pop
mov
sbb
imul
rol
cmp
mov
test
stos
notb
mov
popf
xor
mov
test
aad
sub
xchg
add
scas
cmp
sti
inc
pop
mov
push
daa
and
fistpl
mov
mov
aas
or
sarl
xchg
or
and
bound
push
mov
jmp
xor
push
lds
ret
xor
mov
loope
inc
cmp
or
inc
xchg
push
cwtl
ss
xlat
mov
push
es
jecxz
call
cmc
aam
pop
mov
pop
mov
aam
cld
fcoml
hlt
jns
movb
dec
push
xchg
and
sub
loope
or
and
das
stos
pop
cmpsb
out
adc
or
mov
popf
insb
lcall
inc
roll
mov
movsb
in
in
and
xlat
jmp
scas
xor
or
sub
sub
mov
fs
repz
pop
or
notb
mov
cmpsl
lret
sub
data16
cmp
addr16
pop
aaa
lahf
xchg
std
out
add
test
mov
push
pop
mov
je
pop
pushf
sub
xor
outsl
push
mov
sub
cmp
ss
push
leave
or
and
adc
adc
fistpl
in
pop
inc
out
sub
int3
mov
fcoms
mov
pop
dec
or
scas
out
jno
sbb
imul
xor
aam
xor
cmp
pushf
ficoms
push
xor
test
sub
xchg
xchg
mov
insl
shl
mov
add
or
and
lock
cmpsl
mov
pop
xor
popa
add
push
pop
cmpsb
repnz
arpl
scas
mov
add
mov
sbb
push
pop
stos
cmpsl
cmc
andl
aam
sahf
dec
movl
mov
adc
dec
and
push
push
shrl
mov
cmp
imul
pop
mov
lods
fwait
dec
subb
xor
sub
jno
mov
in
xchg
pushf
shrl
ret
dec
push
imul
jno
icebp
mov
sbb
push
lods
xchg
mov
call
test
sub
outsl
mov
addr16
mov
aam
mov
mov
stc
scas
push
mov
lcall
add
dec
xor
dec
add
push
rcrb
and
lret
movsl
sti
sbb
xor
hlt
jg
xor
xchg
inc
jnp
and
orl
aad
test
shrl
jp
bound
scas
mov
cmp
out
sub
pusha
mov
adc
xor
addr16
lods
fnsave
jge
lods
adc
sub
repz
stc
mov
out
push
fstpt
dec
sbbl
mov
in
mov
sti
sbb
jbe
adc
push
mov
out
or
addb
and
xor
sub
aaa
inc
stos
jb
push
neg
mov
add
adc
ja
stc
in
cmp
shll
ficomps
lahf
addr16
mov
push
loop
pop
in
pop
lods
dec
sub
fisttps
add
or
mov
cmp
sbb
out
push
fildl
and
lcall
insl
lods
pop
adc
cmp
push
cmp
shlb
sbb
mov
movsb
and
sbb
or
xchg
insb
scas
ficoml
xchg
jb
pop
cmp
push
mov
cmp
fisttps
mov
test
xor
mov
jmp
cld
mov
loopne
add
repz
jmp
test
jns
push
lcall
inc
mov
jnp
std
lret
fsubp
clc
into
out
mov
shlb
push
lods
sbb
add
outsb
popf
add
inc
cmpsb
dec
xchg
aas
jmp
dec
dec
popa
loopne
sub
aas
int
repz
and
adc
adc
add
fistpl
fadds
nop
outsb
xchg
iret
sub
loop
cmpb
add
push
xchg
cmpsb
dec
stos
rorl
mov
pop
add
sbb
lds
mov
aad
or
outsb
and
cmp
in
pop
xchg
aad
push
decb
xor
push
push
fsubs
lds
mov
cmp
cld
adc
mov
xchg
xor
inc
lcall
push
fsubrl
fnstenv
adc
pushf
inc
mov
mov
fistpll
dec
aam
cmp
rcrb
mov
jl
mov
add
sub
nop
lods
mov
cmp
cmp
in
dec
jnp
pop
cmc
cwtl
push
mov
dec
mov
imul
repnz
jne
cld
mov
dec
rolb
iret
lods
cmp
cmc
shrb
lret
or
scas
push
push
sub
je
add
fisttps
jmp
test
insl
jnp
sub
push
in
lods
jne
xchg
cmpsb
mov
jge
je
test
dec
mov
je
cmp
leave
sub
ss
or
push
mov
mov
repz
jl
daa
loopne
adc
push
adc
es
jae
iret
cs
mov
fidivs
les
stos
iret
enter
ds
mov
and
call
loop
cltd
inc
mov
aas
mov
lahf
in
insl
aas
fdivrs
xchg
jae
mov
mov
popa
outsb
cld
push
jbe
jb
dec
or
mov
ljmp
addb
aam
fstpt
popa
mov
pop
bound
mov
mov
daa
loope
fisubrl
mov
cltd
pminsw
inc
stos
mov
push
negl
js
push
ret
ljmp
push
sahf
adc
sub
xchg
xchg
cmp
sbb
ret
into
and
sub
push
cli
cmpsl
mov
mov
fisttpl
dec
cltd
cwtl
push
imul
jbe
xlat
cmp
daa
push
mov
lret
xor
lock
loopne
insl
int3
hlt
adc
xchg
in
inc
insb
aas
mov
int
sarb
shrb
push
fimull
pop
shl
icebp
or
pushf
cld
ds
cmp
pop
mov
lret
inc
mov
pop
mov
lcall
cmpsl
jno
mov
dec
add
test
jbe
outsb
xor
and
iret
xor
fstp
dec
int
fwait
adcb
les
push
xchg
inc
sar
test
or
jno
test
pop
testb
in
enter
fstl
dec
fwait
pop
ret
ret
push
lods
movsb
push
push
sub
jb
ljmp
push
sub
xor
push
mov
cli
sub
fcompl
push
inc
mov
mov
std
xchg
pop
cmp
sub
pushf
jne
out
fisttpll
bound
addr16
adc
imul
aam
jle
sub
lods
int
rcl
insl
lods
pop
lods
cmp
push
ss
add
lock
lcall
sub
arpl
adc
cld
setnp
mov
pop
mov
rolb
sahf
test
sbb
cmpsl
jg
fndisi(8087
popf
bound
gs
addr16
cmp
jmp
pop
fmull
xchg
xlat
mov
call
or
or
ret
mov
mov
aad
mov
or
and
icebp
inc
dec
mov
inc
cmpsb
push
ret
in
cmp
mov
push
cmpsb
test
lahf
lret
cmp
sbbl
js
lds
loop
adc
shlb
daa
xchg
ret
es
pop
jl
jno
fsubs
push
xor
add
push
dec
cli
pop
js
xor
dec
sub
cs
jae
loop
xchg
adc
inc
test
loop
add
dec
popa
mov
cmp
push
jmp
cmp
pop
outsl
out
mov
xchg
les
or
repnz
cmp
lock
cmpsl
inc
inc
cmp
shrl
push
test
clc
and
sub
pop
mov
in
dec
mov
jp
js
ja
icebp
and
pop
popa
popf
jge
pop
out
adc
cmp
test
mov
mov
sbb
mov
jge
lar
pop
cltd
iret
cwtl
out
sbb
dec
xchg
gs
lret
inc
adc
leave
cwtl
movzwl
leave
xor
es
repnz
dec
in
fisubs
jo
scas
in
int
dec
insl
xor
or
lcall
mov
imul
cs
andb
xlat
pop
clc
bswap
sbb
enter
out
xor
jbe
ret
sub
dec
psubusw
divb
xor
ja
add
push
mov
pop
xchg
or
inc
adc
popa
lcall
jno
and
cmp
outsl
loop
iret
cmp
out
and
cmpsl
sub
inc
mov
mov
add
and
cmc
imul
pop
jns
jb
jmp
add
pop
jnp
dec
sub
loop
mov
loop
cmp
shll
pop
call
clc
out
inc
jp
mov
cltd
and
aas
fmull
pop
jmp
pop
mov
dec
fxch
gs
push
lahf
jbe
in
sbb
cmpsl
push
xchg
add
xchg
pop
inc
mov
iret
add
push
mov
jne
xor
pop
mov
cmp
decl
rolb
cmp
sbb
aam
ret
insl
and
or
mov
push
call
jmp
cmp
sahf
lret
dec
mov
xor
jmp
sub
roll
test
jmp
or
cmp
mov
push
adc
mov
call
cmp
cld
and
test
rorb
push
lods
jno
mov
inc
lods
pop
aam
testb
or
pop
xchg
or
sub
jno
fadd
adc
push
push
jecxz
xchg
stos
dec
mov
sbb
xchg
pusha
sahf
imul
xor
jecxz
nop
mov
mov
and
test
decb
fs
das
loope
inc
adc
push
mov
push
mov
push
test
mov
dec
jo
push
and
insl
mov
shll
xchg
push
jecxz
fstps
ret
adc
mov
iret
sub
push
mov
js
jbe
push
repnz
inc
mov
pop
xor
lods
or
sub
out
lea
ficompl
add
mov
sti
inc
rcl
aaa
adc
aaa
cltd
popf
cmp
pop
mov
sti
push
mov
stos
jb
test
ud0
loop
pop
jecxz
ljmp
cmp
aad
and
das
ret
mov
dec
orb
inc
mov
xor
push
inc
lret
idivb
dec
mov
sub
ret
dec
loopne
aas
cmpsl
inc
out
jnp
insl
repz
jle
cmpsb
pop
leave
dec
scas
jp
push
out
dec
jmp
xchg
insl
jl
xor
push
pushf
sub
cmp
dec
or
mov
xchg
xor
push
and
stc
rorb
push
lods
pop
paddsw
iret
xchg
arpl
pop
out
test
push
scas
xor
xor
push
mov
jp
in
fsubp
mov
xor
xchg
es
jbe
mov
and
add
mov
jns
push
mov
lret
pop
xchg
decb
mov
push
aad
scas
dec
das
and
mov
add
mov
das
ror
pop
out
testb
pop
xor
inc
jo
pop
int
fnstsw
imul
dec
lcall
sbb
mov
mov
pusha
cmpsb
pop
outsb
sar
popf
jnp
xchg
mov
jg
fisubs
lret
mov
fcomps
cmc
aaa
push
lret
pop
fistpll
adc
ds
movsb
dec
add
push
movsb
mov
mov
add
push
pop
repz
cli
mul
cmp
lock
push
mov
mov
pop
xor
push
mov
loope
dec
mov
testl
lds
ret
xor
sub
jbe
enter
cmpl
test
inc
daa
xchg
dec
sub
xchg
adc
jg
das
and
add
xchg
rorl
fidivrs
push
mov
ret
mov
xchg
push
mov
aaa
add
pop
lea
int3
pop
xlat
repnz
cmpsb
or
ljmp
ss
lds
cli
and
sbb
add
add
xor
mov
clts
mov
in
push
sahf
repnz
push
jae
popa
outsb
and
mov
aaa
fdivrs
out
loope
pop
mov
push
fnsave
inc
lahf
xchg
xor
pop
dec
sahf
inc
jnp
es
jle
rcrb
arpl
push
mov
icebp
sti
fidivl
xor
es
add
cwtl
cmp
jmp
stc
xchg
xor
cmpsl
push
stos
imul
xchg
jl
popf
test
mov
mov
adc
sti
xchg
inc
outsb
and
jbe
xchg
cmp
ret
adc
jg
inc
sub
cs
out
mov
xchg
adc
xchg
lret
fptan
jns
jp
shlb
xor
ret
adc
sbb
cmp
pop
push
xchg
jo
cli
sbb
aaa
mov
popa
in
iret
fmulp
aaa
repz
out
push
stc
sbb
xor
arpl
mov
ja
push
pop
test
sub
insl
pop
add
cwtl
int3
arpl
mov
scas
inc
adc
inc
xchg
mov
outsb
add
push
mov
sbb
xor
xchg
jbe
mov
repz
dec
mov
cmp
nop
inc
adc
fisubl
and
cmp
call
dec
movsb
push
mov
push
lret
push
jae
out
or
xchg
push
psadbw
mov
sarl
and
sub
int
scas
push
mov
jb
mov
dec
cmc
ret
lcall
movq
pusha
cltd
xor
lcall
int3
in
lret
adc
adc
pop
notb
call
popf
stc
add
inc
or
stos
outsb
mov
sub
mov
jmp
mov
adc
jl
std
sub
ror
fnstcw
adc
push
pop
movsb
mov
lea
cmp
mov
aaa
fbld
cwtl
mov
mov
mov
and
inc
call
mov
gs
nop
mov
sbb
imul
push
mov
scas
imul
movsb
pushf
pop
rolb
xchg
xor
xchg
mov
test
bound
inc
stos
lds
test
mov
jne
in
jb
jae
aaa
in
das
xchg
pop
shr
inc
lahf
inc
sbbl
mov
and
pusha
lret
jp
shrl
insl
mov
jp
out
pop
mov
fidivrl
loope
mov
push
sbbl
push
xchg
mov
sub
es
popa
aam
sub
cmpb
ret
jge
mov
repz
cmc
movsl
cmp
ljmp
xchg
jmp
cs
xor
mov
and
push
xor
repnz
aam
adc
addr16
lahf
jl
and
rcll
test
lret
inc
mov
push
scas
push
aad
adc
pop
aad
data16
cwtl
mov
mov
mov
out
xlat
bound
or
push
test
in
lahf
outsb
xchg
hlt
sbb
pmullw
xchg
arpl
pop
ret
aaa
out
test
mov
push
mov
imul
inc
in
dec
hlt
jmp
popa
jb
xlat
push
adcb
stc
mov
dec
sbb
negl
adc
mov
mov
jbe
xor
sub
inc
mov
shll
lds
dec
cmp
xor
cltd
dec
mov
jmp
iret
mov
js
xchg
mov
ss
iret
fmull
test
hlt
push
mov
adc
lcall
adc
sbb
lods
inc
mov
xchg
lret
push
cltd
pop
mov
cmp
push
testb
jbe
xor
addb
cwtl
sbb
out
cmpl
int
jne
testl
mov
pop
loop
xor
nop
mov
lods
dec
mov
adc
xlat
inc
lods
push
mov
movsb
stc
add
mov
jmp
xor
imul
mov
push
stos
inc
fcom
fisubrl
fistpll
inc
mov
jp
jbe
fistpl
out
cmp
inc
out
xchg
fistpll
dec
idivl
aas
mov
jno
test
and
fnsave
outsb
mov
int3
push
in
leave
mov
mov
cmp
andl
push
mov
cwtl
dec
imulb
addl
cmpsl
les
sbb
inc
mov
ret
jle
push
pop
fsubs
sub
and
leave
push
aad
sar
leave
popa
dec
add
xchg
lahf
outsl
int
ret
sahf
popa
test
sbb
into
sbb
cmp
popa
pop
cltd
xor
cmp
push
mov
mov
xchg
cltd
icebp
or
mov
loope
adc
pop
sbb
lahf
daa
xchg
mov
jl
xchg
test
fnstsw
dec
cmp
divl
mov
out
inc
notb
sub
out
andl
outsl
mov
push
mov
dec
mov
xor
or
pop
push
ds
pop
iret
xchg
scas
int3
imul
or
jnp
xchg
test
dec
push
inc
daa
dec
cmp
lea
sub
or
ret
into
fimuls
movsb
mov
push
js
sub
or
mov
decl
pushf
sarl
test
movsb
push
pop
insl
cmp
and
jnp
das
xchg
sahf
cwtl
jecxz
aas
pop
lret
push
push
lock
loope
cmp
hlt
push
lret
sbb
pop
fcomp
or
sub
xchg
jo
xchg
in
scas
scas
jne
push
xor
push
ja
cmpsb
andb
mov
mov
mov
insb
cmpl
jmp
sbb
push
push
or
lcall
decb
mov
add
push
inc
and
xchg
add
aad
fwait
adc
aas
dec
jge
mov
push
sbb
pop
adc
outsl
push
and
cmp
mov
dec
jecxz
jge
and
lcall
mov
xor
dec
add
dec
xor
scas
and
nop
scas
xor
out
rorb
in
mov
loop
in
mov
ficomps
sbb
or
push
cltd
fdivl
and
mov
arpl
das
mov
ds
sbb
dec
lret
xor
jne
fdivl
mov
lret
mov
sub
inc
leave
bound
inc
out
cmp
push
and
sub
cmpsb
addr16
dec
ret
sub
lret
xchg
or
sti
pop
sbb
movsb
jnp
repnz
cmpl
adcb
ret
jo
pop
loopne
lea
jbe
xor
mov
mov
sbb
imul
mov
loopne
sub
adcb
mov
mov
mov
xchg
jp
push
jp
xchg
mov
stos
push
inc
fst
dec
nop
adc
das
mov
add
aad
sahf
add
in
adc
pop
flds
and
mov
push
fisubs
jp
or
mov
push
hlt
mov
sub
or
or
dec
mov
stc
push
jno
mov
out
mov
test
lock
sub
dec
sub
cmp
push
mov
outsl
sbb
rcr
pop
out
ja
sub
notb
outsl
outsl
push
mov
mov
dec
inc
test
jae
lcall
pop
scas
cs
test
rclb
cmp
and
mov
pop
lahf
xor
popf
and
jmp
jns
in
in
mov
adc
mov
out
std
or
cmc
and
sahf
loope
push
insb
pop
lret
jns
int3
dec
sub
push
push
aas
lcall
clc
sarl
xchg
mov
outsb
outsl
setge
mov
mov
lcall
and
mov
in
ss
scas
lods
clc
pop
icebp
cs
lret
ret
xor
cmp
insl
movsb
into
andb
xchg
mov
bound
divl
lock
or
sub
fsubrs
cmpsl
mov
cmp
dec
mov
or
fiadds
cmp
fldl
push
pop
or
mov
mov
dec
jge
mov
xchg
je
jb
push
add
push
aas
dec
incb
mov
icebp
loopne
pop
xchg
test
sub
add
xchg
fnstsw
ret
and
push
testw
lret
popa
pop
mov
adc
scas
xchg
data16
cmpsb
push
mov
add
clc
fcoml
push
push
frstor
add
arpl
pop
dec
daa
push
ja
jns
imul
outsb
add
mov
add
inc
lods
in
cltd
pop
pop
cld
loopne
loope
lret
outsl
cld
lcall
add
aad
mov
xchg
rolb
add
and
rol
push
subl
jns
adc
and
icebp
sbb
and
jo
sbb
dec
sbbl
push
xchg
mov
mov
movsb
scas
hlt
js
mov
cli
pop
pushf
xchg
inc
scas
push
sub
adc
xor
adc
cmpb
lahf
adcb
xchg
lret
divb
inc
sbb
fistpl
cld
pusha
jmp
sub
pop
jns
dec
stos
addl
sub
dec
pop
xchg
xchg
repz
xchg
or
pop
mov
lret
mov
push
movsb
test
sub
sub
inc
sahf
inc
mov
sub
out
inc
iret
xor
sbb
xor
mov
mov
rcrb
xchg
in
ljmp
mov
jle
movsl
push
int
outsb
mov
lret
in
ja
adc
nop
or
sub
sub
mov
in
popf
ds
dec
repz
mov
int
in
dec
sbb
mov
jl
in
fstpt
inc
add
test
mov
pop
movsl
outsb
movsb
push
not
push
cltd
and
pop
mov
mov
mov
xchg
jo
inc
mov
mov
mov
mov
out
mov
or
subl
sub
inc
sub
pop
fidivrl
mov
dec
sbb
rolb
push
sub
ljmp
push
js
xchg
jns
pop
loope
jge
push
push
jmp
inc
outsl
push
movsb
sbb
mov
in
lret
pop
lret
rol
pop
xor
and
ss
push
ss
push
pop
sbb
aad
xchg
inc
daa
hlt
xor
pop
sub
popf
push
scas
arpl
mov
sarb
push
test
and
clc
shr
push
test
ficoml
ret
in
in
cld
lods
xlat
hlt
lock
rorl
aas
les
out
scas
mov
push
stos
or
mov
add
movsl
and
fst
inc
mov
rcr
or
and
xor
gs
lahf
and
mov
test
pop
cmpb
cmp
aas
mov
and
fisttpl
and
les
cwtl
xchg
inc
lea
inc
mov
in
cmp
popf
push
and
jnp
add
fnsave
mov
inc
cmp
lret
mov
lahf
mov
int
jg
insl
sub
mov
or
es
inc
push
sbbl
mov
lods
fiaddl
pop
int
adc
mov
fisubl
iret
roll
aad
jp
pop
lods
les
das
out
xchg
cwtl
call
cli
fcmovu
bound
cmp
cmp
stc
or
movsl
out
fisubs
aas
push
in
ds
ss
out
sub
sub
pop
rclb
ss
mov
subb
call
jns
jg
cli
jmp
and
clc
jmp
push
mov
or
sar
inc
sub
out
ficompl
pusha
outsl
lcall
js
jmp
push
dec
les
jle
imul
popf
push
es
fwait
insb
js
and
mov
xchg
and
adc
fwait
mov
sbb
cwtl
push
adcb
add
dec
das
decl
jae
and
pop
xorl
mov
pop
inc
imul
xchg
sub
xchg
add
clc
leave
outsl
aam
mov
dec
fwait
repz
push
inc
jmp
xlat
xchg
out
fs
aas
xchg
and
lcall
jno
ret
loopne
cli
xchg
repnz
pusha
mov
fsubrl
push
jp
jl
daa
cwtl
xchg
xchg
xor
out
ss
cmpsl
push
cmpsb
or
xchg
aas
xor
add
imul
or
push
lea
xlat
es
insl
add
lods
xchg
imul
shl
xor
lcall
addr16
sbb
fsubl
sarb
adc
fstpt
mov
sbb
mov
xorb
adc
shll
xorl
nop
or
cmp
and
test
out
add
dec
and
in
aaa
pop
push
xor
cmp
dec
fstl
pushf
cmp
fldcw
ret
into
push
jle
je
arpl
stos
shll
mov
lret
mov
orl
test
mov
test
stc
pop
lock
inc
add
sbb
test
push
daa
mov
fdivs
push
sbb
mov
ja
push
mov
jae
inc
dec
pusha
inc
pop
pop
or
dec
sbb
push
loop
fs
mov
sti
add
inc
loop
mov
stos
and
mov
adc
aaa
sub
pop
dec
cmp
xchg
aas
xor
adc
cmp
xchg
imul
mov
pusha
dec
or
cmpsb
lret
push
sbb
xlat
sbb
xchg
or
dec
ljmp
xor
shl
pop
popf
in
add
cmp
fstp
divl
xchg
mov
pop
sbb
mov
sbb
sbbb
outsb
mov
cmp
xor
int3
mov
jns
cmpsb
sub
cmp
adc
inc
leave
pop
sbb
test
lret
fstpt
mov
and
cmc
and
jne
mov
stos
pop
addr16
mov
or
and
and
lds
lea
fimuls
mul
cmp
push
call
js
ds
sbb
mov
mull
testl
inc
mov
sub
xchg
and
stos
jp
push
sbb
jne
mov
jno
push
sub
mov
je
inc
mov
xchg
push
or
scas
pop
fildll
adc
jle
dec
add
push
fwait
xchg
push
stos
imul
jmp
mov
stos
ror
lock
cld
repnz
jp
cmpl
in
fs
and
pop
dec
dec
mov
les
in
pop
cmpb
es
mov
out
add
cmc
aam
aad
repz
cmp
outsb
mov
xor
mov
es
or
clc
xchg
push
sbb
and
and
aas
aam
xor
and
push
mov
inc
loopne
adc
ret
clc
mov
push
push
xchg
cld
das
decl
cwtl
ja
enter
pop
dec
rcll
mov
mov
xchg
sbb
pop
call
mov
sbbb
gs
enter
sbb
mov
loope
mov
test
jno
mov
rcr
push
mov
push
mov
mov
mov
sub
xchg
pop
test
sbb
lods
inc
jae
or
jnp
bound
andb
add
or
out
fsubrl
rcl
push
jl
fldt
fstl
sbb
inc
aaa
pop
sarb
jns
int3
divb
loopne
mov
sbb
cwtl
sub
or
mov
loopne
inc
lock
mov
incl
stos
mov
popa
gs
jae
ret
cs
lods
pop
test
jnp
xchg
jns
rolb
inc
sbb
rclb
jb
insl
out
loopne
dec
jmp
pop
jmp
dec
inc
shrl
outsl
push
cli
mov
loop
pop
cs
pushf
pop
scas
dec
or
sub
lea
dec
cmpsl
inc
pop
xor
fstl
test
outsb
xor
push
jbe
mov
je
jae
cmp
jae
bound
or
ljmp
lahf
xor
xchg
or
mov
fcoml
sbb
xchg
jne
pop
jns
pop
jns
push
xchg
dec
dec
xchg
push
popf
xor
hlt
push
outsb
xchg
pop
test
add
dec
pushf
and
leave
xor
popf
or
rcrb
or
sarl
icebp
sub
imul
cli
mov
and
fldenv
pop
ret
xchg
or
sbb
cmp
xchg
inc
add
or
cmc
jo
pushf
pop
adc
jle
jecxz
pop
fwait
mov
insb
cmp
cmpsl
shlb
fidivrl
sbb
push
mov
inc
repnz
ja
cmp
insb
sbb
xor
pop
adc
data16
out
cmp
sbb
out
push
scas
xor
lock
lods
mov
sub
mov
dec
mov
enter
mov
mov
mov
std
jnp
in
push
sti
mov
adc
push
popf
mov
adc
mov
mov
cltd
mov
add
mov
movsl
push
mov
mov
in
cmpsb
xor
arpl
ds
mov
iret
fldcw
pop
push
and
jo
idivl
jne
inc
loope
push
call
lret
in
mov
push
add
outsl
outsl
gs
in
sbb
or
xor
outsl
daa
sbb
pop
cmpsl
mov
gs
jae
loop
sti
add
mov
cmp
lock
lds
cmpsl
xchg
in
roll
jne
cmp
jbe
ja
sub
mov
ficompl
mov
sarb
cwtl
push
aam
test
cmp
lods
dec
sub
movsl
scas
cltd
inc
mov
sbb
insb
and
mov
mov
movsl
dec
xchg
push
sub
or
lahf
push
mov
cld
stos
cmp
mov
xchg
xchg
imul
sbb
aam
push
xchg
inc
adc
mov
into
ss
insl
loopne
xlat
fs
dec
sub
cmpsb
in
sarb
cmpsl
pop
daa
inc
xchg
jnp
sub
cmp
into
or
cmp
dec
push
nop
test
out
or
push
out
push
hlt
pop
add
push
pop
aaa
test
push
mov
inc
add
cmp
cmp
fsubs
cmp
pop
test
or
push
maxps
lds
jmp
flds
sub
shll
jge
test
fildl
aaa
mov
loopne
call
cmp
adc
add
sbb
xchg
shl
inc
nop
add
xchg
test
add
inc
xchg
in
mov
or
test
or
call
lods
movsl
nop
cmp
imul
movsl
adc
jo
dec
shlb
mov
inc
mov
dec
push
jo
sub
jecxz
mov
loopne
add
scas
jb
dec
lea
scas
ja
dec
mov
cmc
sub
dec
or
sbb
lahf
sbb
ret
outsl
push
mov
and
insl
jge
fnstsw
inc
or
push
lods
pop
test
pop
pusha
addr16
sarl
lds
out
or
loop
or
imul
mov
sbb
or
add
dec
test
push
rclb
int
sub
xor
pusha
xchg
daa
je
imul
and
ds
jnp
repz
mov
iret
loopne
shrl
mov
arpl
push
mov
fdivl
or
pop
movl
mov
inc
loopne
iret
scas
pop
ja
xor
test
aam
add
push
inc
cmpsb
out
jae
mov
xchg
jne
push
movsb
pop
outsb
mov
dec
cwtl
cwtl
push
mov
mov
and
inc
mov
movsb
lods
popa
test
js
mov
movsb
jnp
inc
sbb
rclb
cmp
add
add
scas
cmp
sub
jmp
cmpb
adc
test
add
int3
js
insl
xchg
iret
and
add
mov
mov
pop
sbb
stos
push
sbb
xor
xchg
fisttpl
ret
push
cmp
negl
lcall
xor
dec
dec
mov
jbe
dec
jo
cmp
jne
xor
xor
insl
jle
ficomps
inc
mov
lock
shlb
cwtl
adc
scas
pop
pop
fdivl
nop
imul
push
push
adc
mov
add
push
test
lret
adc
clc
push
mov
xor
jne
out
cmp
popl
mov
mov
cmp
adcl
adc
gs
in
push
pushf
imul
jne
cld
push
mov
dec
xchg
fadd
xor
aad
push
xor
fnstsw
jno
mov
nop
scas
jb
adc
add
adc
or
adc
fists
add
mov
arpl
and
push
inc
pop
stos
dec
mov
fisubrl
push
and
out
cmp
dec
cwtl
pop
ljmp
ss
mov
pop
pop
stos
sbb
leave
or
aam
and
popa
xchg
scas
aam
fistpll
dec
xor
sub
xor
mov
cmp
leave
test
imul
sbb
mov
stos
fdivrl
xchg
dec
xchg
aaa
xlat
push
mov
jle
outsl
xchg
jmp
inc
mov
ds
mov
dec
sbb
mov
in
push
fcom
jne
xor
push
scas
pop
sbb
lods
inc
cmp
push
mov
mov
push
or
scas
fnstsw
xchg
mov
scas
jne
fiaddl
imul
insl
lahf
int
in
and
jnp
addr16
shlb
repz
sbb
enter
add
int
jmp
aaa
testl
ss
iret
pop
inc
or
loop
inc
sahf
movsb
xor
adc
repnz
add
into
mov
out
and
es
das
aad
or
mov
fdivrs
sub
aas
scas
iret
fists
sbb
and
in
lods
addr16
lea
mov
push
and
cmpsl
scas
popl
xor
rorb
out
jne
ss
ja
or
pop
mov
mov
cmp
xor
loopne
xchg
pop
or
stc
jae
es
pop
adc
xchg
insb
inc
add
ja
test
test
mov
loope
sbb
jne
fmull
stos
shrb
push
rcll
mov
mov
pop
mov
repnz
outsb
mov
or
mov
fcoml
xor
pop
inc
lret
and
jno
movsb
push
fnstenv
stos
and
fidivs
push
sahf
imul
cmc
xor
add
mov
das
push
shll
xor
xchg
subb
stos
inc
xchg
gs
rclb
push
call
sahf
into
adc
dec
movsb
cs
or
xor
repnz
addr16
or
ljmp
test
clc
jg
adc
push
sbb
insb
dec
clc
popa
aas
pop
mov
out
xchg
bound
dec
mov
shr
mov
jecxz
das
je
fs
fildll
pushf
enter
jecxz
fildl
frstor
add
mov
mov
xchg
xlat
xchg
sub
sub
and
adc
cmp
sub
das
jp
adc
pop
imul
cmp
xor
xor
cmc
std
cmp
or
xor
and
sbb
adc
mov
mov
xor
pusha
neg
cmp
pop
adc
nop
jne
sbb
cmp
mov
inc
add
imul
push
push
sahf
or
or
or
push
or
lds
loop
pop
popa
adc
xchg
shrb
dec
mov
mov
pop
das
aaa
insl
inc
sbb
repnz
xor
push
cli
shrl
sbb
mov
jmp
clc
mov
in
arpl
scas
in
test
push
inc
dec
daa
jb
jb
enter
test
in
cltd
and
jbe
je
mov
jecxz
xchg
pop
inc
or
mov
fnstcw
push
jmp
sbb
jl
adcl
or
adc
aaa
push
dec
inc
xchg
xchg
cs
adc
xchg
pop
outsb
adc
mov
lock
sub
stos
scas
jns
dec
dec
out
les
and
lods
pushf
adc
int3
aas
insb
sbb
aad
repnz
mov
mov
shll
ss
negl
xor
xor
rcll
repz
imul
push
push
xchg
aad
jae
mov
jle
pop
adc
and
xchg
mov
in
sarl
xor
flds
mov
clc
lahf
adcl
imul
das
sub
cmc
xor
inc
adc
push
pop
mov
pop
sbb
stc
lds
lea
cmp
ss
ret
cmp
sahf
imul
sarw
ret
fisttps
in
jae
mov
fmull
mov
inc
inc
mov
aas
lcall
popf
leave
mov
insl
jb
pusha
lahf
jecxz
adc
or
sbb
xchg
outsb
std
sahf
xchg
xchg
popf
mov
fistps
xchg
fldcw
mov
aaa
cmp
js
inc
movsl
cltd
popf
pop
movsb
jmp
sbb
push
jl
mov
pop
jne
int3
push
adc
push
ja
cmp
inc
js
stc
lods
push
adc
xor
nop
pop
sub
mov
cmpsb
pop
push
mov
call
cmc
jo
cmpb
sti
adc
inc
imul
push
scas
push
aaa
sub
mov
lea
gs
dec
fs
jl
imul
and
adc
mov
mov
mov
fcoml
xor
dec
xchg
rclb
xchg
inc
xor
sub
mov
notl
lds
fnstcw
add
outsb
lods
repnz
stc
lods
dec
stos
jmp
fistpll
pop
pushf
pop
xchg
push
mov
xchg
daa
ret
sub
adc
fimuls
sbbb
cmp
mov
mov
inc
jecxz
pushf
pop
in
add
int3
push
imul
pop
out
xor
cmc
jg
pop
bound
cmp
cld
insl
pushf
enter
and
xchg
hlt
push
cmp
aaa
cmp
pop
and
mov
sub
mov
cmp
cld
mov
mov
scas
pushf
loopne
xchg
arpl
add
inc
inc
jmp
jg
add
jbe
push
jno
cmp
out
arpl
dec
stos
in
push
insb
repnz
mov
test
jmp
xor
call
cltd
mov
jmp
fwait
cmp
js
lods
add
dec
imul
call
mov
xchg
in
lret
nop
lret
loop
jo
dec
inc
xor
pop
jno
es
mov
push
insl
mov
adc
mov
outsb
mov
das
fnstsw
loopne
jns
fiadds
lods
mov
out
cmp
nop
repz
mov
push
push
scas
inc
cs
xor
not
std
ss
fwait
jmp
jecxz
pop
cwtl
lret
pop
mov
adc
rclb
mov
stc
push
mov
stos
xchg
sti
cmp
arpl
push
xchg
and
push
push
repnz
lock
and
and
lods
jmp
outsb
pushf
jmp
dec
and
fistpl
mov
push
dec
push
mov
mov
push
frstor
mov
dec
inc
or
popf
jnp
push
pop
push
stos
mov
pop
dec
jl
std
shll
dec
data16
pop
add
push
insb
idiv
loope
adc
push
push
cmc
rcrl
inc
sti
add
outsb
pop
hlt
adc
dec
push
jns
outsb
mov
pop
mov
pop
int3
jae
jmp
in
mov
in
pop
pop
das
mov
cmp
sbb
out
mov
push
sbb
aaa
xlat
cmp
sbb
aad
cmp
arpl
das
dec
imul
xchg
lret
insl
sbb
cmpsb
cmpsl
mov
je
and
fwait
xchg
popf
and
sbb
dec
fisttps
nop
cmp
push
add
mov
sbb
adc
pop
sub
mov
movsb
jecxz
mov
sarb
cmc
jecxz
xchg
add
pop
insb
mov
ret
ja
push
or
xor
data16
push
in
lods
outsl
dec
es
bound
push
add
push
js
aad
and
mov
repnz
repnz
xor
ss
or
out
ret
mov
ficoml
push
pop
out
and
cmpsl
aas
ljmp
sub
cwtl
loop
jp
inc
es
add
and
pop
aad
cmpsb
sbb
adc
xor
mov
or
add
jl
mov
rol
insb
es
jecxz
ss
jnp
enter
push
sti
xor
sub
movsb
mov
xchg
xor
fcoml
mov
push
mov
jge
das
mov
js
jg
or
fldenv
push
loopne
push
pop
fmull
lahf
push
jmp
mov
jmp
out
jl
dec
or
push
aam
jae
inc
test
dec
mov
cmp
mov
adc
xor
outsl
mov
repz
push
jb
or
arpl
pop
pop
pop
rcrl
call
mov
and
cmpsl
pop
adc
jbe
xorl
add
inc
out
adc
lock
or
mov
lret
iret
ja
push
repz
push
mov
pop
and
push
daa
stos
negl
jo
xor
aas
mov
ja
lcall
mov
fidivrs
add
jbe
jmp
out
mov
adc
sbb
mov
loope
hlt
add
sub
movsl
fs
cmp
mov
enter
or
add
pop
fwait
xor
xchg
out
icebp
mov
popf
stos
fwait
pusha
mov
test
sub
aaa
sub
mov
pusha
xchg
xchg
aad
cltd
cld
ss
sbb
or
insb
inc
jns
in
mov
rcrl
mov
xchg
je
pop
dec
lock
mov
inc
sbb
push
lock
arpl
inc
movsb
push
push
stos
xchg
mov
push
xchg
int
add
idivb
push
lret
pop
orl
mov
int
dec
mov
jl
xchg
or
fcomps
cmp
cmc
and
mov
mov
sub
lret
pusha
sub
mov
ja
mov
pop
mov
scas
lock
dec
dec
cmp
or
cmc
pop
loop
popa
fsubl
sub
xchg
mov
cmp
es
mov
dec
jbe
adc
sbb
push
jb
es
cltd
rcrb
ret
xor
sbb
out
inc
pop
lahf
dec
jne
xor
stos
adc
bound
pop
push
mov
mov
loope
stos
dec
ljmp
dec
cmpsb
sbb
vfrczpd
xlat
ret
dec
cmc
push
push
sahf
inc
fisubs
cli
xchg
adc
mov
dec
pop
out
shlb
xor
loopne
mov
inc
mov
sarl
psubq
test
push
std
pop
mov
adc
jnp
adc
nop
inc
xchg
xor
push
mov
push
jnp
mov
call
es
inc
fcoml
int
mov
push
shlb
dec
mov
or
adc
mov
sti
and
mov
das
gs
test
test
cmp
popa
mov
dec
out
jno
aas
stos
call
imul
das
test
push
and
inc
aas
les
movsl
push
sub
cs
jl
xchg
jge
or
in
jle
xchg
and
into
jle
int
sbb
add
push
add
mov
dec
mov
xor
test
pop
pop
enter
lods
mov
hlt
push
sub
testl
inc
mov
inc
or
shrl
jne
jbe
pop
loopne
lods
push
jp
add
test
stos
jg
dec
push
add
xchg
jb
scas
dec
insb
xchg
xor
xor
mov
outsb
or
in
repnz
sbb
into
cmc
mov
adc
sti
jmp
xchg
icebp
push
dec
sahf
insb
fcomps
adc
js
dec
sub
pop
sub
xor
inc
mov
xor
in
les
test
aas
and
xor
push
mov
decl
ret
fwait
js
push
call
lds
pop
fsubrs
fldt
icebp
sub
out
pop
push
xlat
ds
sub
mov
cmc
or
movsl
outsl
in
sub
pusha
mov
dec
xchg
jmp
aad
mov
aaa
out
or
nop
dec
xor
repnz
add
movsb
push
cmc
clc
cmp
push
mov
dec
lcall
adc
stc
gs
pop
sbb
sti
arpl
outsb
mov
dec
ds
push
mov
or
in
cmp
inc
mov
outsb
mov
arpl
stos
bound
push
mov
insl
xchg
mov
loope
fucom
scas
sbb
bound
pop
movsb
push
and
cltd
cmp
out
stos
mov
cld
bound
adc
int
mov
aas
lds
popf
popa
xor
jle
pusha
dec
cmp
jp
inc
cmpsb
or
lds
xor
mov
lock
adc
arpl
sub
movsb
xlat
paddsw
inc
addr16
dec
mov
loope
fxtract
cmp
pop
je
es
mov
hlt
pop
push
aad
cmpsl
cs
dec
cwtl
push
pusha
pop
add
jge
sbb
xor
push
int
loop
jno
rcrb
outsb
sub
jae
push
push
ret
inc
stos
push
roll
mov
fbstp
test
inc
sub
loopne
or
inc
pushf
sbb
add
stc
pusha
xchg
push
mov
push
xlat
arpl
mov
xchg
sub
mov
mov
dec
cltd
adc
fbld
fwait
nop
dec
test
jno
dec
pop
adc
dec
scas
mov
fildl
jmp
or
int
xor
dec
mov
bound
repz
mov
mov
mov
inc
xor
sbb
sti
sub
xchg
shrl
push
xlat
xor
jno
mov
mov
sub
mov
xchg
outsb
in
hlt
add
cmp
lds
aad
add
xor
add
loop
jge
fwait
push
sbb
jl
ret
mov
fstpl
cmp
data16
ret
jne
ja
dec
mov
mov
test
cmpsb
jmp
js
xor
fimuls
cmp
and
sbb
lods
mov
fists
fadds
gs
inc
repnz
icebp
lea
jns
movsl
jne
adcb
jp
stos
jg
adc
push
into
cmp
xchg
cmp
push
insb
in
sbb
and
sbb
popa
xchg
sbb
cmpsl
pop
mov
dec
mov
push
pop
addr16
jo
rorb
lods
lret
jmp
rcrb
cld
and
std
cmp
sti
pop
mov
les
pushf
push
and
and
les
push
loopne
popf
fwait
pop
adc
xor
insl
rcl
push
test
outsb
nop
in
pop
sti
int3
popa
icebp
cld
add
enter
jg
test
lds
in
iret
ds
xchg
gs
daa
andb
mov
cmp
fldl
aad
jnp
sbb
clc
or
loopne
fldl2t
int
cmpb
jo
inc
mov
scas
rolb
rolb
push
pop
sar
lcall
sti
adc
int3
ljmp
xor
mov
mov
std
mov
shrb
pop
nop
dec
mov
and
mov
jge
mov
add
iret
and
dec
das
and
adc
sahf
mov
inc
mov
mov
sbb
inc
push
sub
mov
mov
popf
dec
out
lret
loop
sbb
aas
fcoml
aad
pop
lock
mov
int3
dec
js
filds
loop
push
lods
and
xor
sub
jo
lods
rorb
xchg
xor
xlat
pop
xchg
bound
sub
xchg
mov
stos
ret
cmp
sub
adc
dec
push
xchg
sbb
fldenv
push
pop
sbb
aad
mov
adc
cmp
xorb
mov
pop
add
aas
jb
jg
dec
test
out
in
aaa
sti
push
push
and
scas
call
push
cmc
repz
imul
mov
sti
xchg
jge
inc
mov
push
in
sbb
stc
adc
mov
cmc
dec
sti
mov
test
pop
mov
mov
test
je
adc
push
fwait
pop
cmpsl
push
int3
popf
sbb
cmpsl
push
xchg
in
dec
les
fisubs
lea
bound
pop
pop
or
xchg
push
out
pop
xchg
pop
mov
xor
cmp
rclb
jmp
add
pop
lds
jmp
data16
push
jae
lret
mov
lds
jae
dec
sbb
loope
sbb
aas
and
add
cmpsb
xchg
xor
into
sbb
fdivrs
fwait
cmp
sub
std
sbb
dec
mov
ss
insb
cltd
out
jo
stos
add
repz
std
push
negb
xor
dec
jbe
js
inc
mov
mov
fistpll
lahf
mov
mov
enter
jns
sbb
clc
lock
jns
xor
arpl
push
mov
lret
js
pusha
aaa
fadds
pusha
xor
gs
sahf
in
iret
sbb
jg
dec
lret
sbb
or
mov
push
loope
cmpsl
cmp
filds
aam
dec
aas
jae
fwait
testb
adcb
fistl
and
inc
sbb
gs
push
aaa
jbe
and
mov
xor
cwtl
iret
lds
fsubrs
cmp
pop
dec
xor
pop
daa
mov
sbb
mov
pushfw
pusha
xor
lret
adc
and
cmpsl
imul
scas
fsubrs
mov
cli
notb
test
pop
pop
cmpsl
rorb
jno
pop
lock
movsl
mov
or
movsl
int
out
cs
jb
sub
sub
out
xchg
insb
push
xor
pop
rcll
imul
adc
out
adc
xchg
js
mov
sbb
inc
movsl
out
push
jbe
icebp
cmpb
inc
fwait
bound
mov
xchg
outsb
loopne
cltd
and
adc
xchg
pop
dec
push
cmpsb
sub
adc
js
lea
jle
adc
jbe
movsl
and
cwtl
addb
pop
filds
sbb
outsb
adc
icebp
pop
xchg
bound
arpl
ret
mov
into
or
insb
jmp
pop
rep
repz
daa
adc
sbb
inc
adc
aaa
sti
sub
cmp
xor
mov
adc
cmp
lds
jmp
xor
cwtl
pushfw
scas
movsl
pusha
lret
dec
or
jg
pop
mov
jp
aaa
adc
pop
pushf
mov
mov
pop
loop
adc
aaa
dec
lods
xchg
int
fiaddl
fs
ret
sahf
popf
dec
sbb
call
popa
sub
aam
fwait
add
ja
aas
pushf
aaa
mov
xlat
mov
pop
popf
xor
loope
mov
std
jle
jo
dec
repnz
push
adc
pop
xchg
push
fdivrp
rorb
push
fildll
and
mov
inc
jle
es
cmp
mov
push
je
xchg
pusha
mov
mov
push
std
push
push
pop
mov
outsb
mov
outsl
daa
adc
inc
dec
and
ss
mov
xor
insb
and
adc
sbb
sbb
popa
jl
sbb
ret
sahf
cli
in
and
mov
cmpsb
adc
jmp
adc
mov
xor
inc
imul
sahf
xor
xchg
push
mov
call
cmpsl
stos
adc
xchg
ljmp
mov
call
cmpsl
push
mov
jp
and
mov
cmp
fnstsw
jno
inc
mov
lahf
outsl
push
xchg
or
pop
pop
out
dec
dec
push
cmc
mov
jo
adc
xor
test
stos
fldenv
push
cmp
cltd
adc
mov
cmp
ss
xor
pop
lods
adc
fwait
and
mov
int3
jne
fucom
adc
mov
in
dec
add
outsl
outsl
or
popf
xchg
dec
cmp
or
arpl
test
jmp
cli
shlb
addl
jecxz
fldt
or
sub
add
mov
pop
pop
mov
cmpsl
xchg
sbb
into
xchg
or
adc
jns
aam
ja
xlat
sbb
sbb
iret
xchg
aad
push
outsb
push
cmp
xchg
stos
inc
pushf
addr16
in
repnz
xchg
movsb
dec
push
push
mov
mull
sub
arpl
xchg
pop
sbb
and
cmc
push
daa
cltd
fs
sub
cmc
movsb
sbbl
popf
sbb
xor
inc
xchg
mov
test
fs
sub
test
lret
and
add
xchg
cmp
add
cltd
les
dec
iret
mov
jg
bound
sti
xor
pushf
xor
mov
lea
mov
lods
mov
pop
jg
mov
pushf
outsb
cmp
adcl
js
and
sahf
mov
add
lret
sahf
in
sub
push
jo
testb
mov
lea
out
js
cld
inc
mov
inc
xor
outsl
out
push
sbb
std
sbb
ret
sub
mov
dec
inc
mov
sbb
test
inc
cmc
mov
dec
hlt
in
stc
mov
movsb
jns
xchg
out
xor
fadd
inc
cmpsl
push
xchg
xor
push
xor
lods
sbb
xchg
jbe
push
xor
out
outsb
mov
xchg
in
push
jbe
adc
pop
test
mov
daa
fstps
fldlg2
push
lock
xchg
jb
stos
jno
mov
sarl
jbe
push
inc
mov
jmp
inc
mov
movsb
add
cmp
insb
jno
sbbl
mov
cmp
xor
shlb
lock
pop
jns
sbb
rorb
push
lahf
dec
popa
pop
in
iret
push
bound
pop
sbb
adc
push
sbb
pop
dec
in
sbb
ret
rcrl
in
mov
stos
andb
sub
mov
callw
out
enter
adc
push
adc
fildl
xchg
repz
jbe
loope
add
fisubrs
jno
imul
lods
inc
pop
adc
test
sub
jnp
insl
int
imul
mov
xor
inc
push
cmp
call
fwait
sbb
jge
fistl
popf
sbb
sub
jo
cmp
loopne
repz
adc
sti
cmp
mov
mov
add
loope
popa
cltd
ret
dec
lret
popf
loop
add
into
jp
xchg
xlat
sub
mov
and
pop
repnz
cmp
lahf
test
dec
aaa
cmp
ljmp
push
hlt
in
add
push
inc
jae
popf
mov
adc
stc
pop
sub
adc
cld
in
jns
cld
ret
push
cmpsb
std
mov
in
test
xor
xlat
int3
dec
stos
adc
out
std
and
sbb
orl
jbe
lcall
cld
movsl
and
push
mov
xchg
ljmp
push
pop
in
mov
call
xor
inc
mov
cmp
pop
mov
adc
push
adc
scas
mov
jno
pop
mov
loopne
sbb
fisubrl
dec
stc
jbe
or
pushf
imul
fistl
push
fnsave
into
enter
cmp
mov
sub
outsb
shrl
add
ds
stos
jmp
mov
pop
scas
dec
pop
or
aas
inc
lret
daa
loope
das
jnp
jl
aas
addl
in
xor
mov
dec
xchg
and
jecxz
and
imul
movsb
lret
out
sbb
leave
push
dec
fisttps
inc
lahf
add
sarl
out
jp
jae
sbb
sbb
fildll
add
xor
in
sbb
imul
dec
jge
sahf
dec
in
cmp
cmp
xchg
jns
out
xchg
cwtl
data16
mov
pushf
dec
add
inc
stos
aam
movsb
inc
mov
mov
repnz
or
dec
and
mov
mov
xor
leave
popf
push
xchg
inc
sbb
cltd
jae
sbb
xor
dec
sbb
iret
ret
push
mov
mov
ja
sbbl
scas
xor
out
xchg
arpl
pop
pop
or
pop
xchg
pop
add
mov
mov
add
adc
push
mov
in
inc
jno
adc
adc
in
and
add
jbe
imul
rorl
ficoml
and
cmp
jo
mov
les
mov
jle
lock
jns
mov
or
mov
ja
fwait
xchg
or
inc
cmp
data16
cmp
mov
leave
fcoms
add
pop
ret
add
sarb
leave
icebp
frstor
insl
out
mov
mov
mov
call
ja
inc
popa
adc
xchg
add
push
test
inc
lret
mov
and
dec
dec
outsl
repnz
popa
mov
add
subl
mov
shll
stc
mov
cmc
insb
leave
xchg
dec
popf
dec
dec
mov
sbb
adc
and
mov
push
pusha
mov
inc
cltd
mov
pusha
das
frstor
fbstp
and
adc
xor
cmpsl
sub
and
and
aaa
divl
mov
xor
sub
pusha
sub
mov
loopne
push
push
in
aaa
cs
push
and
xor
int3
push
sub
aam
push
rorl
loope
add
aad
sub
jbe
movsb
inc
sti
rcll
xor
in
xor
pop
xor
test
ficoms
rorb
xor
lods
pop
hlt
fisubrl
dec
mov
xchg
pop
jb
insb
jbe
addr16
xchg
int
fstl
mov
pushf
in
and
or
xchg
pop
fstl
push
mov
push
les
int3
cltd
imul
dec
mov
sub
adc
es
lcall
aad
imul
jno
cmpsl
or
xchg
and
out
mov
jge
leave
cmp
fs
data16
movl
inc
and
mov
inc
je
adc
ret
daa
xchg
aas
int
out
lea
cmp
das
cmp
jne
mov
idivl
in
and
push
cwtl
sbb
sbb
pop
enter
scas
fstpt
mov
cmp
or
stos
dec
scas
sbb
int3
pop
ret
xchg
sbb
or
mov
sbb
das
in
mov
in
insb
mov
jnp
pop
inc
xchg
outsb
push
cltd
sbb
mov
dec
mov
mull
loope
mov
xchg
sub
dec
mov
mov
jmp
dec
enter
mov
mov
inc
fcomi
jp
ja
std
sbb
mov
mov
dec
enter
or
in
adc
sbb
fs
xchg
or
test
lcall
mov
cmp
insb
mov
add
dec
cmp
inc
fsubrl
mov
in
jne
sub
cli
push
xlat
test
mov
test
push
pushf
out
fadds
xor
or
mov
cmp
push
out
xor
pushw
outsb
fdivl
ret
enter
or
out
and
testb
fistpl
xchg
inc
sbb
pop
cmpsb
loop
cmpsl
xor
and
adc
sub
push
add
mov
test
sub
lock
pop
add
xlat
fcompl
repz
mov
dec
pop
mov
outsb
push
cmpsb
mov
inc
mov
push
mov
test
inc
push
xchg
scas
cs
outsl
xor
dec
fs
bound
mov
insb
jge
mov
dec
mov
test
and
dec
xchg
aaa
ja
sub
adc
sbb
xchg
xchg
dec
cmpsb
push
in
test
lods
outsl
add
popf
sub
dec
and
and
xchg
fmul
les
aad
sub
sub
xor
lea
les
mov
or
aas
outsb
sbb
ss
xchg
shl
popf
enter
pop
xchg
ret
or
xor
jno
stos
subb
lret
faddl
jg
add
out
jbe
es
shlb
fcoml
push
pop
fimuls
mov
add
and
push
pop
sbb
bound
push
roll
push
inc
mov
mov
sbb
push
mov
rcrb
jl
cwtl
cmpsl
stos
xchg
inc
pop
lods
push
mov
adc
sub
ss
pop
pop
je
inc
jmp
popf
xor
fnstcw
clc
mov
sub
push
lcall
dec
or
xor
adc
loope
insb
jp
in
cmc
and
mov
in
pop
mov
aas
iret
xchg
call
push
jmp
fbld
stc
pop
loopne
in
sub
xor
sub
test
loopne
inc
push
or
sbb
mov
orl
jmp
cli
lds
cmpxchg
aad
mov
push
mov
aaa
lds
push
pop
ret
sub
xchg
dec
mov
xchg
dec
out
in
mov
adc
mov
cmp
inc
lret
pop
jns
and
ja
je
push
mov
inc
aaa
or
fs
lds
add
pop
pop
imul
lods
mov
ja
sbb
sub
jo
out
jns
inc
adc
or
xor
add
ss
addr16
inc
mov
xor
dec
cmp
stos
hlt
and
in
ret
adc
mov
jecxz,pn
mov
cmp
sbb
inc
inc
imul
lcall
pop
loope
cmp
cmp
es
shl
mov
enter
movsl
or
pop
comiss
test
jle
add
addb
ljmp
adc
int3
lcall
data16
dec
xor
xchg
dec
xor
pop
test
les
fyl2x
cmp
push
insl
mov
outsb
mov
dec
sbb
ss
ds
test
xchg
nop
adc
popa
idiv
adc
add
pusha
jecxz
aad
arpl
scas
movsb
icebp
ret
sahf
dec
test
popf
test
mov
dec
xchg
ja
adc
pop
add
jmp
into
push
sub
xor
adc
pop
xchg
push
scas
dec
in
std
repz
nop
aam
mov
xchg
cmp
and
loopne
pop
out
popa
mov
xor
rorb
into
jle
movsb
inc
or
test
pop
test
cli
cmp
push
ss
push
lods
in
loope
jmp
rcrb
lret
sub
lahf
xor
sub
rclb
push
and
xor
cltd
pusha
scas
sbb
inc
dec
dec
push
inc
cli
xchg
xor
add
icebp
lret
cmp
cmpsl
rep
and
int
dec
mov
pushl
adc
pop
std
movsb
pop
popf
push
and
loopne
xchg
repnz
cmc
int3
cmp
cli
jo
pop
enter
cmc
dec
fcmovbe
adc
sbb
nop
jle
jns
test
push
mov
jne
cmpsl
and
es
in
out
shlb
sub
inc
pop
push
mov
scas
xchg
mov
or
scas
jp
push
aad
cmove
sbb
addr16
data16
mov
sub
dec
xchg
push
lds
dec
cwtl
leave
movsl
add
adc
push
mov
dec
in
mov
rolb
sub
iret
pop
sub
bound
xchg
je
sbb
insb
int
jmp
pusha
mov
inc
movl
mov
insb
cmp
mov
iret
and
leave
adc
adc
stc
cmp
ss
fcoml
ja
inc
sbb
dec
iret
adc
cmpsl
test
add
mov
or
mov
neg
pop
push
cmp
dec
push
pop
cltd
test
hlt
push
mov
scas
adc
sub
pop
dec
jnp
sti
stos
sub
leave
or
inc
stc
aad
mov
pop
aad
pop
ds
int3
out
js
cmp
add
mov
xor
mov
stc
add
imul
bound
dec
push
int
loop
jp
mov
sarb
dec
inc
outsl
pop
mov
pop
and
mov
xchg
sbb
ja
jmp
fwait
dec
pop
ljmp
ljmp
cmp
loopne
pusha
jnp
out
or
aas
xchg
lret
int3
bound
cmp
in
outsl
push
cmc
adc
mov
loope
fmul
mov
es
stc
cmpl
mov
imul
xchg
xchg
in
movsb
js
lahf
daa
js
inc
xchg
movsb
roll
mov
dec
mov
arpl
pusha
movsb
je
cwtl
testb
test
xor
mov
shrl
dec
mov
nop
push
or
fcomps
popa
pushf
push
fsubrl
add
jnp
jo
loopne
dec
xchg
add
xlat
push
mov
adc
mov
xor
les
mov
mov
imul
stos
arpl
pop
mov
sub
out
sub
clc
jmp
xor
fdivrl
in
fists
jecxz
int
adc
sar
xor
mov
xor
mulb
cmp
pop
and
add
pop
das
jge
jbe
jae
sar
outsb
xor
sbb
pop
test
add
mov
leave
loop
or
stc
shll
repz
push
test
js
shlb
and
xchg
ss
mov
cmpsl
mov
sub
aam
sub
jbe
push
jp
je
push
stos
dec
and
pop
jl
pop
inc
rclb
lahf
rorb
mov
jae
lods
repnz
mov
scas
jg
mov
imul
xor
icebp
pop
inc
push
jl
stos
fcoml
movsl
andb
shll
cmpsb
xor
push
and
inc
cs
push
aad
mov
hlt
cmp
and
sub
mov
arpl
dec
push
mov
out
ljmp
add
or
sbb
rdpmc
inc
mov
xchg
jp
fwait
imul
stos
sbb
fs
leave
sti
jge
jo
std
push
stos
cbtw
cmp
aad
sub
cmp
pop
decl
sti
inc
jb
mov
sbb
sub
mov
push
jno
cmp
push
data16
cmp
mov
in
pop
popa
push
rcr
mov
je
dec
sbb
cmp
or
aam
fstpl
inc
adc
out
lds
hlt
add
xchg
test
test
lret
in
iret
insb
das
sti
mov
or
test
das
movb
pusha
dec
stos
dec
movups
pop
pop
outsb
aam
sbb
xchg
jmp
xchg
pop
cmpsl
fdivr
or
jbe
jne
jb
cmp
xorb
jecxz
jg
iret
xor
sbb
daa
shll
sti
movsb
adc
xor
flds
repz
in
jno
push
xlat
fistps
jp
mov
leave
push
inc
add
call
rcrl
jne
mov
xchg
push
push
sahf
iret
add
or
scas
out
push
mov
and
in
jno
mov
sbb
in
mov
adc
hlt
or
add
cmp
mov
pusha
lcall
pushf
mov
jge
nop
sbb
cmp
inc
mov
js
int
or
xchg
ja
cltd
jns
or
mov
mov
and
aas
std
mov
out
ret
xchg
push
xchg
leave
mov
mov
xchg
xor
xorl
jo
jp
mov
cmpsb
pop
pusha
les
test
mov
mov
out
xor
push
popl
add
orb
cltd
mov
sahf
cmpsb
push
imul
xchg
cmpsl
mov
xor
subl
add
ds
in
loope
pop
and
push
inc
jae
mov
aad
hlt
in
hlt
dec
mov
and
push
aas
mov
inc
adc
xor
xor
fldenv
insb
popa
insb
cmp
jnp
aas
pushf
or
pop
xor
fbstp
mov
mov
push
jns
mov
call
adc
cmp
cwtl
jnp
mov
enter
sbb
cs
sbb
sbb
xor
and
sub
movsl
fisttpl
repz
outsb
inc
leave
add
jmp
inc
into
rcr
pusha
movntq
popa
mov
insl
cmp
cwtl
movsl
inc
cmpsb
add
or
ja
xchg
repnz
ss
cwtl
push
cmpl
mov
pop
push
adc
push
fildl
jmp
out
fcmovnu
xchg
dec
sbb
sti
lret
inc
cld
icebp
mov
jp
inc
mov
lcall
xchg
das
adc
mov
inc
adc
jmp
sub
leave
sub
cmp
in
cs
jp
mov
xor
ret
xchg
jecxz
repz
pop
mov
adc
popf
aam
jbe
inc
in
xchg
cmp
andb
cmc
call
and
cmp
push
push
jbe
jle
cmp
inc
ds
les
mov
test
mov
push
adc
test
pop
jne
mov
push
xchg
aas
sahf
jmp
inc
idiv
fbstp
adc
stos
je
jne
pop
and
arpl
pop
xchg
fwait
inc
sahf
loope
mov
sbb
mov
push
das
inc
lods
or
jg
jge
repz
lahf
and
out
xlat
push
out
jge
loop
dec
fwait
daa
inc
mov
dec
mov
popa
lret
and
sbb
shlb
sti
pop
lds
pushf
lods
xchg
xchg
mov
pushf
fs
jno
sbb
mov
adc
arpl
ds
xchg
movsl
out
sub
lret
and
sarl
sti
pop
pop
pop
mov
fs
fnstenv
jbe
jmp
add
xor
add
cmp
push
mov
push
sbb
jmp
push
mov
cmp
add
pop
mov
jb
and
push
cmp
sbb
cmp
mov
xchg
mov
add
movsl
shrb
aad
sbb
mov
lahf
aam
xor
inc
clc
pusha
cmp
dec
inc
cs
movsl
std
std
mov
stos
and
xchg
int
xchg
pop
xlat
cmp
data16
jns
dec
cmp
inc
stc
cmp
pop
fwait
cmp
movsb
sbb
cmp
jmp
or
pop
cwtl
in
or
dec
inc
cltd
xor
in
test
inc
insb
cmpl
and
jg
cmp
daa
js
push
mov
test
dec
mov
push
add
xor
pop
sahf
int3
ss
icebp
das
pushf
mov
cmp
cli
sub
and
cmpsl
int
xlat
in
fcmovbe
mov
movsl
add
pop
xchg
or
mov
aaa
enter
xchg
push
daa
mov
in
jg
icebp
pop
in
adcb
out
adc
cmovno
mov
and
gs
inc
xchg
loope
hlt
popf
sahf
jge
aas
cmpb
cmp
sub
lods
call
repnz
cmp
call
pop
adc
mov
pop
dec
push
scas
inc
aam
rcrl
jo
fistl
mov
add
fwait
outsb
lcall
xor
mov
pmaxub
out
das
push
in
mov
inc
mov
push
icebp
push
mov
clc
or
mov
mov
rcrl
inc
pop
repz
insb
xchg
inc
or
fwait
leave
sbb
dec
mov
and
repz
sub
cld
add
cmp
clc
cltd
cmpsb
mov
dec
fsubr
jecxz
pushf
cmp
fsubl
or
sub
add
fisttpl
and
negb
dec
iret
adc
into
fs
aas
mov
gs
or
fcmovnbe
cmp
or
pop
inc
cs
ret
nop
jge
inc
scas
inc
in
jbe
fcom
test
pop
ss
mov
mov
jae
stos
addr16
test
sbb
dec
cwtl
je
lret
hlt
lods
lret
mov
scas
out
rcrb
xor
dec
push
lcall
les
mov
insl
xchg
add
cmp
dec
fcomp
add
pushf
push
test
pop
xchg
inc
xlat
lret
push
lods
add
popa
test
xchg
mov
adc
xchg
mov
stos
jo
fsubr
push
cmpsl
dec
push
sub
es
pop
add
popf
movsl
stos
fs
imul
or
lcall
sub
nop
jle
incb
popa
pop
addr16
push
ret
cmp
pop
in
cmp
adc
jo
and
popf
cmp
jmp
imul
stos
mov
push
push
cmp
loopne
dec
cld
pop
or
sbb
int3
loop
dec
sbbl
scas
jne
adc
xchg
hlt
jp
jno
push
dec
das
jle
ret
push
mov
sahf
pop
test
jns
mov
adc
loope
shlb
jg
dec
pushf
shll
sahf
popa
push
shlb
sub
mov
mov
xor
daa
ja
or
xor
outsl
sub
je
sub
sbb
mov
nop
in
out
mov
cmpsb
mov
repnz
das
adc
add
jecxz
sbb
idivb
int
lock
sub
add
pusha
test
push
leave
cwtl
xor
insl
add
leave
pop
rorb
call
pop
pop
fdivrl
dec
adc
sub
mov
hlt
push
and
push
loopne
mov
imul
in
idivb
inc
in
pop
mov
enter
sbb
pop
jno
aas
aad
lods
inc
mov
sbb
lock
dec
lcall
xchg
sbbl
nop
mov
inc
add
dec
push
mov
mov
sbb
mov
notb
loope
jb
dec
dec
mov
scas
ss
mov
mov
mov
cwtl
imulb
mov
out
insl
mov
adc
lods
push
mov
into
cmc
ss
cld
out
int
aam
push
jae
jb
sub
jo
mov
inc
shll
addr16
lcall
loop
or
jb
ljmp
test
das
jmp
push
ret
xorb
xchg
pop
scas
xchg
cmp
mov
jge
pop
pusha
movsb
push
dec
pop
lret
xchg
enter
mov
lcall
in
cmp
pop
dec
sbb
jnp
cld
lret
gs
dec
es
add
mov
shll
cli
mov
ss
mov
out
push
data16
mov
pop
lea
sub
jl
mov
pop
rclb
adc
pop
mov
sub
cmpsb
xchg
cmp
sbb
cs
lahf
mov
mov
push
inc
pusha
shl
mov
out
xchg
outsb
mov
sbb
scas
pop
cmp
mov
mov
stos
js
adc
insb
addl
pop
ljmp
call
popf
mov
and
sub
sbb
and
hlt
adc
push
mov
outsl
scas
aam
iret
mov
int3
sbb
sbb
xor
add
insb
add
outsb
aas
iret
sub
hlt
inc
and
cs
mov
divl
stos
hlt
xor
push
jae
rorb
int
jecxz
jb
repz
ret
lods
jo
xchg
inc
loop
into
jge
add
push
jmp
in
out
push
out
xor
push
push
cmp
jnp
pop
pop
cmovs
cmp
test
xchg
adc
inc
pop
push
cli
stos
mov
jge
mov
popw
fwait
movsl
divb
mov
ret
xchg
imul
xor
ljmp
sbb
jp
aam
icebp
xor
test
jno
pop
loope
mov
pop
add
xlat
or
cmpsl
hlt
inc
mov
cmp
imulb
add
hlt
fwait
mov
cmp
mov
shll
sarl
inc
and
pop
add
adc
subl
sbb
sub
inc
push
fdivl
mov
sbb
adc
orl
mov
nop
sub
mov
sub
sub
mov
dec
xchg
out
adc
fs
orb
inc
filds
push
adc
and
push
repz
ljmp
test
adc
insb
push
cmpsl
iret
jg
sbb
push
pushf
jl
leave
sbb
xlat
shll
ficoms
pop
or
addl
jge
mov
andl
sbb
enter
fwait
add
push
clc
add
je
out
xchg
in
add
out
ret
fwait
rcll
movsb
daa
jge
pop
nop
xchg
scas
rcr
xchg
fldl
push
aaa
adc
jge,pn
orl
xchg
xchg
lahf
loop
push
pop
pushf
mov
enter
int3
or
sbb
mov
loope
clc
addr16
mov
fnsave
ret
mov
cld
mov
cld
ja
jae
jp
pop
repz
adc
nop
xchg
in
jae
push
or
call
les
inc
fstpl
and
pop
lret
push
scas
notl
das
inc
jge
arpl
sbb
xor
dec
mov
xlat
test
xchg
pop
add
xchg
dec
inc
push
inc
aaa
ds
out
cmpsl
dec
loope
pop
xchg
insb
mov
or
adc
xchg
sbb
inc
mov
call
jmp
shlb
pop
push
rcl
push
cmp
or
xchg
or
sbb
or
ret
js
jnp
pop
popf
jbe
icebp
sarb
repnz
jo
negl
jl
cmp
lret
xor
ss
jne
jle
jge
push
inc
inc
ss
popf
fcompl
out
test
addb
push
xor
mov
out
hlt
imul
mov
sbb
pop
adc
out
fbld
sbb
loopne
aas
xor
aas
int3
jge
cmp
jns
testb
or
arpl
push
mov
dec
jg
movsl
jge
or
das
or
push
or
fnstcw
in
dec
xchg
pop
inc
mov
mov
xchg
orb
clc
test
cmc
pop
xchg
enter
dec
or
dec
or
sbb
adc
push
adc
mov
neg
and
pop
dec
enter
pop
jle
inc
mov
sbb
test
mov
mov
int3
pop
jae
sahf
mov
dec
mov
mov
push
sbb
inc
loope
jne
stc
xchg
loop
pop
out
push
push
aaa
pop
in
pop
ret
popf
int
jmp
sub
lods
stos
cs
testl
or
in
adc
ss
pop
or
pop
jno
add
mov
in
jae
adc
outsl
jmp
vunpcklps
sbb
decl
test
pop
daa
fistpll
outsl
adc
adc
ret
mov
repz
jecxz
out
out
adc
lods
dec
sbb
add
ljmp
pusha
dec
test
mov
pop
push
int3
sub
jmp
pop
sbb
cmpsl
push
mov
jbe
ja
xor
clc
pop
shlb
sbb
test
push
mov
pop
adc
cs
pop
pop
mov
sbb
mov
push
dec
add
inc
leave
leave
jno
insb
andl
xchg
xchg
push
in
or
jmp
and
aad
mov
jne
mov
pop
inc
xchg
push
jecxz
add
incl
repz
sbb
pop
leave
cmp
xorl
lods
repnz
fnstcw
pop
mov
xlat
rorl
aas
inc
loopne
int
imul
cwtl
and
cs
daa
in
dec
sbb
sub
cmp
test
adc
aaa
adc
dec
adc
mov
jbe
mov
and
jl
sub
pushf
daa
loop
mov
cwtl
ja
stc
jnp
dec
stos
push
inc
sub
iret
shll
lret
push
push
shl
cli
test
pushw
das
xor
inc
fwait
mov
push
fs
test
pop
fcmovbe
push
movsl
and
jae
leave
repnz
inc
dec
mov
cmp
adc
inc
cmpsb
lret
push
push
movsb
inc
mov
test
orb
test
mov
iret
cs
jl
loopne
xor
and
fistl
ret
aad
ret
xor
pop
mov
jp
mov
mov
push
sbb
mov
xor
cs
leave
out
push
pop
idivl
adc
loope
push
rcll
xor
shll
xor
sbb
ss
mov
ret
ds
push
insl
aaa
nop
fdivl
sub
jae
bound
hlt
movsb
imul
pop
outsl
sarb
in
sahf
pop
mov
push
jns
rorb
mov
jae
stc
pushf
loopne
addr16
inc
repnz
sub
out
dec
dec
mov
rcrl
cmp
ljmp
popa
pop
out
out
shll
ds
and
mov
jne
or
mov
xorb
mov
mov
and
je
mov
lret
mov
out
cmc
xchg
push
pop
sbb
push
test
xchg
mov
push
repz
rcll
jb
jmp
fisttpl
dec
adc
xor
dec
ss
add
jmp
add
adc
cmp
push
mov
pop
popf
ret
xlat
mov
das
mov
dec
pop
addr16
gs
clc
pop
sbb
popf
xchg
loopne
push
fwait
je
sbb
dec
stos
lret
cwtl
ss
jno
inc
or
and
xor
dec
icebp
pop
pusha
xchg
std
mov
jb
data16
bound
loopne
xor
xchg
pop
mov
shll
das
adc
mov
pushf
cmp
lock
sub
inc
add
jmp
mov
stos
mov
mov
and
nop
insl
arpl
push
movsl
lcall
ljmp
xchg
dec
lods
adc
push
out
adc
mov
dec
cmpsl
sti
adc
mov
sti
dec
aad
rcll
clc
mov
rolb
lcall
outsl
or
jle
xchg
jge
lret
xor
icebp
ret
stc
aas
mov
rolb
jo
clc
dec
iret
and
sub
and
into
movsb
outsl
cmpsb
push
pop
fidivs
int
lret
in
add
mov
xchg
insb
lahf
jecxz
add
sub
pop
repnz
adc
ds
or
and
dec
add
mov
in
jg
push
pop
jb
xor
add
mov
pop
shll
mov
cmp
pop
out
cmp
ljmp
pop
scas
inc
outsl
add
int3
test
mov
sbb
dec
add
sbb
pop
mov
push
stc
lock
dec
mov
jecxz
in
sub
xchg
sub
sub
mov
push
je
jne
xchg
xchg
jne
jns
sub
sbb
mov
jnp
imul
in
lret
xchg
test
test
mov
cmp
std
mov
outsb
fwait
cmp
push
and
scas
jne
shlb
inc
mov
lds
lret
xor
push
out
add
pop
cld
inc
mov
int
push
add
aaa
ret
cmp
xor
pop
in
and
pop
mov
xor
pop
pop
out
fimuls
int
cmp
in
jnp
aad
std
push
sub
add
cmp
imul
add
pop
fdivrl
push
mov
add
in
adc
pushf
popf
out
ret
adc
call
popa
xchg
loopne
sub
lods
inc
sbb
mov
mov
andl
jp
pop
stos
mov
mov
cmp
and
sbb
outsb
jnp
imul
dec
mov
lods
push
bound
inc
sub
mov
jns
cmc
or
sub
sahf
xchg
sahf
enter
outsl
lea
enter
push
push
xor
xor
cltd
mov
or
xor
stos
addr16
fsubrl
rcll
sbb
adc
pop
fistpl
cmpsb
xor
mov
insl
xchg
fld1
mov
mov
and
cli
cmp
pop
xor
ja
subb
cmp
lret
pushf
cli
fisubrs
clc
cmp
xor
pop
adc
icebp
and
stos
call
jns
lock
push
inc
jg
xchg
cmp
xor
jae
dec
mov
mov
push
xor
mov
or
dec
mov
pop
inc
cld
fidivrl
or
cmpb
ret
push
push
add
or
and
cwtl
jmp
out
push
pop
pop
loop
int3
gs
mov
cmp
out
mov
mov
jmp
stc
push
loope
test
pop
iret
jne
or
mov
cld
inc
mov
in
mov
out
dec
bound
pop
pop
push
jecxz
loopne
push
cli
xor
cmp
dec
gs
and
fmull
data16
mov
stc
sub
add
lock
ret
inc
ja
cli
pop
fnstcw
and
pmullw
sub
dec
dec
pop
insl
push
push
scas
pop
cmp
push
push
dec
adc
bound
sbb
push
and
adc
jmp
ljmp
jg
call
insl
notb
push
push
xchg
adc
rclb
pop
stc
aas
or
pminsw
insl
call
test
xlat
popf
push
movsb
push
rcl
jae
movsl
pop
sub
jl
into
mov
lahf
and
imul
fdivrs
out
and
adc
je,pt
mov
test
mov
mov
les
sbb
xchg
js
arpl
or
bound
inc
push
adc
mov
sbb
or
les
push
jecxz
or
adc
shlb
in
inc
xabort
movsb
sbb
jp
popf
lret
repz
xchg
pop
icebp
dec
aad
cmp
adc
popf
ljmp
or
decl
jg
out
lret
pop
push
sub
adc
in
aas
jecxz
sub
jl
subb
push
out
hlt
dec
arpl
adc
mov
jns
popa
xchg
out
sahf
or
inc
xchg
das
ja
cmpsb
lret
clc
bound
andb
push
mov
incb
mov
xor
cltd
inc
in
pop
arpl
mov
push
xchg
inc
mov
pop
add
cmp
test
mov
dec
pushf
mov
ds
scas
out
and
and
push
dec
test
fiadds
mov
stos
mov
mov
mov
pop
mov
push
push
out
push
in
adc
in
and
movsw
cmc
sbb
push
xchg
xor
test
mov
les
sti
and
in
mov
fisttps
fs
push
adc
dec
fwait
mov
jno
push
mov
mov
cs
ffreep
xor
push
stos
inc
test
sub
pusha
in
xchg
dec
enter
cmp
sbb
sub
inc
push
jbe
cmc
add
into
xchg
inc
insb
popf
fldl
cwtl
inc
sbb
mov
dec
mov
lret
jmp
cmp
aam
mov
add
lds
inc
or
lds
mov
inc
fnsave
inc
mov
in
inc
push
cmp
jb
out
or
setne
jmp
inc
hlt
sti
and
ss
cmp
arpl
dec
js
pop
movsb
add
jmp
stos
shrb
ret
mov
sahf
sarb
loope
call
cld
inc
pop
das
int
push
push
in
pmulhuw
pop
adc
test
push
sbb
movsb
cltd
push
push
fldcw
mov
pop
jmp
les
insl
incl
and
ret
leave
jns
testl
aas
lret
and
shrl
insb
stos
loopne
jnp
insb
das
lods
shl
add
inc
stos
jl
jecxz
test
pushf
push
push
pop
roll
push
pop
xchg
outsb
outsl
stos
jge
inc
cltd
or
lods
sub
inc
mov
push
and
movsb
cmp
mov
cld
pusha
xchg
into
ss
inc
mov
push
lods
outsb
or
mov
lods
push
adc
pop
in
imul
fstps
scas
addl
in
xor
aas
sub
subl
movsb
push
adc
aad
cmp
inc
leave
out
pusha
push
cmp
xchg
fildl
loope
pop
aaa
mov
bound
rcll
aas
xlat
mov
daa
int3
xor
aas
movsl
sub
add
popa
jg
sbb
or
or
das
inc
mov
ss
daa
testb
cmovb
cmp
sbb
pslld
inc
lock
repz
aas
adc
jnp
in
dec
push
mov
xor
sub
cmp
movsl
xchg
ja
lcall
enter
adc
ljmp
pop
push
mov
or
dec
push
add
imul
jns
outsb
imul
jp
scas
mov
mov
push
pusha
fcmovne
test
adc
enter
iret
aas
movsl
or
divb
ret
mov
add
mov
xchg
sub
pop
sbb
dec
cmp
cmp
mov
pop
adc
iret
mov
mov
mov
cmp
arpl
lahf
cltd
ds
mov
jbe
enter
int3
push
into
cmpl
mov
movl
lcall
loop
notl
addr16
push
mov
xchg
pop
ds
mov
out
in
mov
sbb
arpl
not
cmp
add
cmp
cmp
loop
and
and
inc
add
imul
mov
insl
jb
cld
mov
lcall
adc
jecxz
test
pop
cwtl
hlt
data16
inc
mov
jbe
mov
jo
and
cmp
dec
cli
mov
add
xor
jnp
sarl
pop
or
repnz
pusha
xchg
jae
aaa
in
ds
mov
inc
adc
std
mov
ret
dec
lcall
push
fnstcw
mov
sbb
sub
mov
xchg
jbe
push
jp
sbb
pop
mov
hlt
sub
ljmp
fldcw
les
ficoms
xor
int
loopne
jo
adc
nop
fsub
xchg
scas
dec
in
pop
pop
jle
fstpl
leave
aas
and
addr16
mov
mov
push
repz
xor
sahf
xor
xor
fsubrs
data16
xchg
mov
cmp
out
sub
ds
mov
xor
push
push
movb
mov
push
cmpsb
dec
push
mov
adc
inc
scas
jg
mov
scas
dec
loop
mov
pop
ljmp
movsl
cmc
xlat
mov
xor
jo
or
shll
js
mov
jp
pop
incl
push
xchg
jmp
sub
out
loope
fwait
negl
lds
xor
and
ds
fdivs
rorl
cli
fstps
iret
dec
dec
sub
mov
scas
xchg
sbb
add
fwait
mov
js
loope
pop
and
sbb
xchg
movsb
fsubrl
int
push
in
or
mov
lock
xchg
mov
push
in
loope
sub
inc
mov
in
push
or
popa
pushf
outsb
insb
divl
xchg
and
adc
sub
inc
int
daa
iret
int
stos
jne
out
fisubrl
rcrb
leave
xor
jge
lret
in
xchg
lds
mov
pop
outsl
xchg
dec
fwait
aad
mov
aas
push
mov
jge
pxor
dec
pop
cmp
jne
in
repnz
popf
dec
gs
cwtl
das
sbb
mov
test
cwtl
xor
bound
dec
out
fsubl
stos
jo
jp
xchg
mov
clc
mov
gs
sbb
jnp
outsb
inc
mov
nop
lock
pop
test
or
pop
cmp
bound
mov
push
sub
ss
stc
mov
mov
popa
sbb
sbb
test
xor
rcrb
leave
call
or
adcb
and
or
jl
pop
sbb
mov
fildl
cltd
test
test
scas
test
jl
aas
addb
icebp
adc
es
push
mulps
pop
jnp
in
lahf
add
sarb
ja
add
in
in
mov
sbb
int
sbb
mov
cmpsl
push
dec
xchg
cmpl
loopne
mov
out
mov
bound
shll
and
loopne
pop
mov
ds
fisubl
xor
push
insb
cmc
dec
mov
movsl
xchg
add
popa
movsl
icebp
dec
hlt
inc
in
mov
ficomps
dec
icebp
dec
loopne
adc
mov
jecxz
push
mov
out
adcl
jne
lret
push
mov
in
rclb
cmp
es
in
xlat
fcomi
mov
add
mov
cmp
cmp
je
ret
sub
sbb
mov
es
loop
lea
jge
or
xchg
pop
push
fs
cltd
repnz
xlat
lds
subl
aam
xor
xor
mov
pop
fisubl
ret
or
push
loop
in
jbe
xor
outsl
mov
inc
testb
adc
inc
mov
adc
jo
push
jo
aam
or
stos
push
cwtl
je
leave
mov
dec
adc
push
movsl
popa
divl
call
cltd
test
dec
popa
in
out
cltd
imul
inc
xchg
dec
dec
mov
mov
mov
dec
aam
imul
es
pusha
dec
cmpsb
inc
mov
dec
mov
push
pushf
pop
push
push
pop
xchg
into
fidivl
test
sti
mov
inc
jmp
subb
sub
mov
dec
push
jecxz
sarl
add
cmc
test
xchg
jno
fcoms
cmpsb
daa
testb
xchg
dec
rcrb
arpl
sbb
add
fists
mov
mov
adc
pop
popa
sbb
mov
sbb
adc
dec
pop
add
dec
test
xor
pusha
das
push
dec
sahf
movb
in
std
mov
cmp
outsl
movsl
or
jecxz
lock
add
rcl
xchg
sub
jmp
int3
out
mov
cld
xor
lret
inc
mov
inc
mov
test
sbb
sbb
leave
or
cmpsb
int3
in
mov
dec
sahf
mov
xchg
dec
fidivs
adc
xchg
in
in
arpl
dec
xchg
bound
mov
loopne
outsb
scas
push
sbb
in
sub
aad
xor
jp
jl
sub
test
cwtl
xchg
jg
ss
jbe
gs
xorl
out
shlb
cltd
pop
mov
dec
gs
jb
int
sub
dec
fucom
sbb
test
popf
push
pusha
imul
or
sub
jnp
mulb
add
cmp
pop
outsb
xchg
push
fsubrp
cmp
add
push
loop
insl
pop
into
adcb
out
jne
xchg
xor
xchg
xor
inc
mov
inc
cs
jnp
jecxz
adc
negl
jnp
add
in
movsl
loop
popa
cwtl
neg
push
mov
push
into
hlt
ja
ret
dec
pushf
inc
mov
pop
inc
shl
pop
lods
sti
inc
pushf
sub
shlb
cmpsl
dec
mov
fistpl
int
out
pop
call
fidivrs
int3
inc
pusha
mov
adc
sub
je
push
fidivs
xchg
out
int
lds
jno
cmp
jecxz
xlat
lds
push
adc
inc
mov
xchg
and
imul
push
or
sbb
cltd
pop
arpl
dec
mov
loop
jmp
or
nop
push
xor
cmp
dec
fistps
sub
push
and
pop
sarb
adc
ret
enter
fsubs
mov
loope
ja
cmc
push
call
mov
outsl
inc
jmp
imull
push
divl
add
divb
add
inc
adc
add
jge
cmp
mov
hlt
sub
xchg
jp
push
movsl
popf
pop
pop
inc
test
push
lret
or
lret
dec
xchg
out
and
lahf
or
in
xor
orl
in
dec
mov
sti
xor
and
adc
xchg
pusha
cltd
and
adc
mov
mov
in
xor
sbb
xchg
xchg
push
shlb
or
cmc
cmpl
sahf
lcall
cld
mov
mov
ds
inc
mov
outsl
ljmp
mov
mov
test
mov
inc
mov
mov
fnstcw
xchg
xor
aaa
or
sub
xor
jle
inc
xchg
pushf
stos
sbb
ficoms
pop
dec
mov
push
stos
jmp
jae
clc
sbb
std
dec
mov
lret
mov
jae
bound
addr16
imul
pop
out
jnp
xchg
insb
mov
faddl
sub
cmp
mov
mov
stos
lea
xor
and
into
xor
je
adc
pop
jg
cmc
xchg
pop
leave
loopne
out
mov
test
lcall
xor
jb
rorl
adcb
lret
jnp
andl
jnp
mov
cmp
inc
enter
jo
aas
xchg
lds
incb
lds
dec
loope
scas
pop
hlt
xchg
fisttpll
rorb
mov
dec
pop
add
inc
ljmp
xor
cli
pop
add
add
jae
into
int
nop
insl
sub
dec
push
or
mov
imul
or
mov
sti
flds
pop
adc
inc
jp
inc
push
fistl
mov
lods
stos
or
or
imul
pushf
push
and
jb
adc
aaa
xor
adc
pop
adc
movsb
out
jnp
and
cmc
adc
adc
rcl
mov
adc
xor
jle
inc
out
pop
adc
or
jmp
pop
ja
lea
xchg
cmp
mov
push
notl
cmp
cmp
or
add
dec
mov
jle
sub
leave
jns
cmc
sbb
testl
outsb
xor
inc
mov
lret
ja
rcr
lock
or
xor
xor
push
pusha
fisubs
jae
mov
adc
push
mov
xor
pop
pop
and
sbb
outsb
outsb
inc
dec
aam
adc
push
test
dec
cmpsb
adc
frstor
int
inc
popf
adc
dec
vmulpd
pusha
inc
add
mov
fistpll
pop
mov
pop
pop
mov
lock
xchg
adc
mov
fucomp
das
and
ret
sbb
sarl
add
cmpl
xor
outsl
shll
adc
xchg
bnd
cmp
and
lret
out
stc
pop
or
fbld
dec
and
cwtl
insl
inc
int
shll
mov
jae
sbb
and
scas
mov
negb
jmp
addb
les
sti
pop
dec
sarl
dec
ja
stos
lea
outsl
mov
enter
addb
adc
and
mov
imul
cld
dec
lahf
pop
mov
testb
lcall
arpl
add
or
ret
cli
pop
and
je
mov
xlat
xchg
adc
mov
pop
mov
pusha
mov
mov
je
xor
stc
gs
push
cltd
dec
lcall
xchg
dec
fildl
mov
adc
mov
push
sbb
push
inc
arpl
in
popf
push
push
int3
adc
pop
cwtl
orl
orl
jbe
dec
int3
andl
and
fs
jl
aaa
mov
fld
bound
stc
jmp
fldt
cmp
test
adc
xor
scas
and
jle
or
pop
ret
lcall
pop
dec
pop
sub
add
cmpsb
cmp
adc
pshufw
aad
jg
dec
pop
xchg
out
sbb
dec
mov
popf
lods
fisubl
ds
repz
gs
cld
adc
push
insl
loop
fists
mov
jns
cmpsl
sbb
add
repz
daa
xlat
and
je
cwtl
sbb
sbb
adc
jg
loopne
mov
or
add
insb
pop
bound
jl
stos
jp
shrb
push
pop
dec
in
inc
cmc
push
cmp
xchg
push
jp
mov
lds
aaa
fists
addr16
push
rolb
shll
adc
dec
pop
test
cmc
add
dec
stos
repnz
cmpsb
xor
or
in
jg
test
outsl
jg
push
fstpt
ffree
pushf
cmp
sahf
div
xor
shll
in
and
imulb
daa
maxps
xchg
add
mov
loope
mov
add
jo
inc
sbb
cs
negb
xchg
movsb
pop
decb
cltd
popa
mov
hlt
insl
loop
mov
shrl
daa
iret
scas
ds
xor
sub
out
xorl
and
repnz
mov
punpckhdq
or
das
pop
mov
add
ret
push
xchg
lds
je
addr16
fsts
movsl
lea
insl
or
mov
dec
mov
jno
repz
cmpl
push
adc
sbb
mov
fldl
mov
inc
aam
pop
xchg
jle
inc
jb
stc
imul
movsb
mov
jb
loop
lock
fimuls
ret
into
sbb
pop
or
sub
sbb
ljmp
pushf
dec
cmp
xor
dec
int
enter
jle
fucomip
sub
movsl
cmp
mov
sbbl
mov
stc
int
jno
mov
push
lret
lcall
leave
into
jb
and
pop
ds
push
or
cmp
mov
add
cmp
push
add
or
jmp
inc
xchg
add
xchg
xchg
ja
inc
xor
mov
fiadds
push
cmpsb
inc
cwtl
insb
lret
insl
dec
push
and
adc
jne
lret
fisubrs
gs
lds
jno
out
pop
push
or
outsl
pop
jecxz
mov
push
ret
arpl
inc
insb
int3
sub
pop
mov
icebp
bswap
enter
jl
jae
dec
fdivs
add
js
movsl
mov
ds
pop
scas
into
sbbb
enter
std
mov
pop
inc
pop
dec
mov
sub
xchg
outsb
rolb
mov
scas
dec
ljmp
dec
imul
cmpsb
stos
pop
stos
iret
sub
mov
movsl
dec
repnz
pop
shll
negb
in
xchg
test
hlt
ret
and
int
inc
xor
ss
and
and
dec
fxam
sbb
and
leave
movsb
dec
ret
int3
lret
cwtl
xchg
dec
cmpsb
jg
test
mov
in
sti
sub
jmp
xchg
jg
arpl
aaa
ja
sbb
pop
outsb
loopne
les
js
push
xchg
rolb
in
lds
cmp
mov
pushf
cltd
lea
shrl
adc
out
arpl
dec
xchg
dec
insb
cmp
xlat
fildl
cld
rcrb
jb
ljmp
mov
xor
mov
xor
sub
sub
popa
jae
addr16
push
clc
int
addl
in
xor
divb
lods
adc
int3
fmull
out
addl
pop
shr
xlat
fsubl
push
dec
psubw
jbe
xor
leave
jo
pop
adc
inc
cmp
xor
lock
jge
rcrb
int
jae
in
mov
mov
add
push
in
sti
hlt
sub
mov
and
sbb
je
or
pop
xor
sbb
jae,pt
jg
movsl
sub
add
add
int3
clc
lea
outsb
pop
and
js
jp
ja
cmp
mov
push
test
fistpl
push
add
repz
imul
ds
pop
loope
xor
loope
and
pop
lea
repz
loope
inc
incb
fadd
jnp
cmpsl
add
addr16
mov
dec
sbb
jnp
jno
jo
push
jnp
jg
push
ljmp
nop
mov
inc
test
cltd
lret
cmp
and
call
outsb
adc
xchg
xchg
sbb
repnz
adc
in
dec
mov
lcall
cltd
inc
pop
enter
mov
or
lahf
jg
mov
testb
pop
add
bound
cmp
in
sarb
lods
jmp
xchg
mov
or
sbb
xor
imul
cmp
call
mov
fcmovu
mov
stos
in
out
xor
xchg
sbb
and
mov
mov
dec
loop
xchg
sub
xchg
decl
push
aas
xchg
repz
push
jle
pop
adc
adc
or
dec
push
sti
shlb
xchg
sbb
dec
data16
mov
out
icebp
add
sub
js
jge
sarl
mov
ds
lret
aad
push
push
stos
test
xlat
imul
pop
les
inc
shlb
cmc
and
dec
push
or
in
pop
push
cli
mov
into
clc
push
sub
xchg
mov
incl
xor
pusha
xor
xor
mov
fstl
inc
mov
xchg
ret
rolb
pop
mov
dec
fistps
fists
movntps
idivb
xor
jmp
mov
mov
push
mov
mov
push
insl
dec
mov
lock
mov
sbb
mov
inc
enter
jne
loope
shlb
mov
lcall
dec
addb
dec
xchg
sbb
jne
sahf
cld
test
mov
test
cld
lods
popa
mov
inc
aas
mov
sbb
fadds
pop
inc
nop
orl
dec
in
cli
aaa
sti
pusha
and
addb
enter
loopne
icebp
sbb
sbb
lds
xchg
je
xor
sbb
icebp
jb
notb
cltd
fidivs
cld
or
and
leave
jo
int3
jmp
ja
add
hlt
inc
test
out
xchg
cmp
test
call
xor
aaa
cmp
cwtl
insl
push
cltd
mov
mov
jbe
cmp
incl
clc
or
jnp
std
push
inc
mov
clc
ljmp
mov
jnp
mov
jno
movsb
dec
mov
jge
daa
aas
stos
mov
mov
in
in
lcall
xchg
jg
popa
in
xor
imul
in
and
xorl
das
sti
adc
lods
lea
addl
mov
inc
push
out
popf
mov
js
pop
sub
jg
lea
push
pop
in
arpl
lret
dec
xchg
xchg
bnd
test
cli
sbb
push
cmpsl
movsb
filds
xlat
dec
aaa
enter
pop
lods
adc
xor
popf
hlt
out
push
sbb
aas
inc
inc
rcll
aas
iret
adc
xchg
stc
dec
fstl
xchg
std
call
cltd
inc
hlt
mov
shlb
and
push
les
icebp
cwtl
insl
mov
xchg
xchg
mov
nop
push
mov
out
and
xor
loope
jp
js
mov
cwtl
mov
pop
daa
scas
cmp
add
mov
jbe
in
jbe
cmp
pop
ret
inc
add
lea
repz
cli
ret
adc
dec
lret
cmp
fwait
jno
cmp
mov
cmp
sub
adc
out
push
sbb
rcll
sub
mov
xchg
mov
movsb
or
fstl
xchg
out
sbb
and
and
sahf
mov
mov
add
je
xor
repnz
pushf
sub
cwtl
out
xor
iret
sbbl
out
add
loop
sub
sbb
in
mov
adc
or
add
bound
addr16
pop
fmuls
sarb
movsb
hlt
outsl
mov
shrl
faddp
shrl
hlt
inc
jmp
imul
push
in
ret
ss
in
fstpl
mov
insb
pusha
pop
pusha
jno
mov
sti
add
xchg
out
lds
xor
adc
mov
mov
sub
and
enter
insb
inc
aam
sub
add
dec
xchg
sahf
fsubr
pop
dec
mov
add
cs
jmp
ret
lds
inc
cld
pusha
push
jbe
ret
push
movsb
insl
inc
jmp
in
imull
inc
pop
shlb
xchg
ret
jle
dec
test
in
ljmp
call
fsubs
push
fsubrs
jbe
xchg
jge
jmp
xchg
jae
lcall
repz
hlt
ds
aas
ret
lods
nop
xchg
lods
xorb
insl
js
mov
aam
push
mov
pop
movsl
and
cmp
push
repz
add
sbb
out
fincstp
sub
inc
inc
mov
out
xor
fldenv
lea
ret
add
icebp
cwtl
call
ret
fimuls
ljmp
orb
add
insl
loope
fisttpll
inc
call
inc
pop
shlb
aaa
mov
sbb
jns
cmp
loopne
arpl
sbbb
aad
or
imul
and
push
xor
pop
into
scas
mov
mov
xchg
adc
cmp
scas
or
push
pushf
movsb
roll
sar
inc
jnp
cmc
outsl
cmp
add
push
jns
sub
mov
std
add
cmp
cwtl
mov
pop
mov
sub
cmp
in
dec
jne
gs
dec
mov
jae
inc
test
test
xchg
push
fsubl
data16
movb
dec
mov
mov
add
arpl
roll
cmp
popf
mov
in
psubw
outsl
cmpsl
imul
stc
sti
js
iret
fsts
cli
and
push
xor
push
mov
sub
sbb
pop
mov
sahf
addr16
sub
mov
and
and
int3
imul
call
sub
sub
sbb
mov
out
lods
pop
dec
test
sub
dec
adcl
sbb
mov
xchg
outsl
imul
sbb
adc
xor
shll
pop
pop
cmpl
bound
xorb
dec
lahf
jns
rclb
sbb
insb
jp
jno
push
scas
aam
icebp
sub
lcall
add
in
sub
pop
cmpsb
adc
pop
out
and
adc
dec
sbb
in
sbb
add
mov
xchg
popf
adcb
pushf
call
xchg
lods
cltd
pop
out
add
jp
xor
mov
dec
iret
mov
mov
xor
add
in
sarb
imul
and
pop
ljmp
xor
add
dec
and
test
stos
push
hlt
loopne
scas
cmp
sbb
es
cmpsl
inc
jo
or
aaa
add
and
mov
xchg
sub
push
lahf
pop
dec
cmp
test
jg
cmp
xchg
xchg
sub
loopne
mov
adcl
sub
aam
adc
mov
aad
mov
jecxz
jecxz
xor
jmp
loope
lcall
sub
push
xchg
push
sti
mov
fs
pop
jmp
or
add
mov
or
xor
inc
mov
jg
cmpsb
jecxz
fnstsw
jl
cwtl
out
dec
add
xlat
pop
dec
mov
lret
dec
mov
aaa
das
inc
ljmp
dec
ja
repnz
add
fs
add
jle
xchg
rcl
rorb
aad
out
push
adc
inc
jmp
jae
push
orb
mov
mov
jle
mov
mov
add
fiaddl
out
fdivrl
push
mov
in
arpl
and
sub
int
sbb
xchg
mov
pop
xor
jae
mov
pop
xchg
or
pop
hlt
mov
repz
xchg
movsb
outsb
adc
out
dec
pop
scas
sub
stc
mov
out
inc
xchg
inc
push
sti
or
pop
pusha
icebp
test
loopne
xchg
cmc
add
xlat
fwait
je
adc
cmp
cmpl
dec
jno
dec
cmp
xor
in
bound
mov
xor
push
push
dec
and
adc
out
xchg
fdivrs
xor
fsubrs
adc
fcoml
mov
xlat
sub
xchg
movsb
mov
aas
insl
call
pop
movsl
dec
sub
jg
mov
cwtl
xor
rcl
mov
push
rclb
dec
test
xchg
xor
mov
adc
push
stos
dec
push
or
pop
mov
jae
jnp
lods
pop
xor
mov
fs
xorl
shl
mov
push
dec
mov
fiadds
psubsb
mov
sahf
and
cmp
cli
je
jl
dec
add
lcall
lret
xchg
movsb
push
aaa
cmpb
sarl
in
mov
clc
fidivrs
jmp
loope
xorl
sbb
addb
jp
xor
aad
cs
mul
jns
cltd
imul
inc
loop
lds
aam
loope
sub
mov
in
fs
mov
xor
sub
mov
in
hlt
sbb
xchg
cmpsl
cmp
push
ljmp
mov
incb
xchg
insb
shll
dec
mov
cltd
outsb
fcomps
jnp
pop
mov
mov
call
pop
cli
mov
adcl
push
adc
adc
aad
insl
cmc
loope,pt
insl
stos
xor
mov
jmp
push
fcmovb
sbb
jne
xchg
or
dec
lds
gs
jo
in
inc
mov
mov
aad
and
cli
xor
addr16
push
add
sbb
xlat
pusha
in
xchg
hlt
push
push
ds
sub
push
in
popf
mov
pop
and
test
sbb
outsb
cmp
andb
stos
xchg
adc
inc
popa
out
push
in
jo
pushf
je
inc
scas
scas
cli
lea
popf
out
imul
adc
adc
sahf
jge
testl
cmp
imul
and
aaa
jns
aam
cli
es
rclb
pop
mov
sbb
aad
inc
mov
xchg
jns
xchg
inc
or
int3
xor
jo
sbb
shlb
ja
xchg
jmp
inc
ja
fcmovbe
js
jle
adc
mov
sbb
call
or
orl
cld
or
xor
inc
dec
stos
mov
push
mov
fisubrl
sub
push
adc
mov
repz
or
cmpsl
mov
push
call
repnz
xor
das
fistpll
jnp
xchg
mov
cmp
sbb
adc
inc
sub
sbb
sbb
iret
les
cmp
pmuludq
roll
jnp
call
scas
out
dec
push
aas
js
or
and
cmpb
jne
xor
scas
icebp
pop
xor
cld
mov
push
push
daa
fs
nop
leave
inc
imul
push
insb
xchg
scas
ficompl
inc
movsl
loopne
sahf
mov
add
ret
shll
jns
cs
sbb
test
mov
mov
push
movsb
stos
pop
and
jecxz
in
push
mov
mov
inc
mov
xor
mov
pop
jnp
xlat
cltd
sbb
jo
adcb
mov
insb
add
fwait
and
or
fs
lods
test
push
cwtl
test
jle
jge
jp
pop
xacquire
ljmp
les
cltd
cmp
cmpsb
mov
int
push
je
mov
mov
pop
mov
xor
aaa
sub
or
fcmovnu
mov
xchg
stc
xor
aas
sbb
call
mov
pop
cmp
inc
jne
fbld
sbb
out
insl
xchg
pop
pop
mov
xchg
mov
testl
call
mov
sub
jnp
cmpsb
jb
movl
pop
lods
loopne
jae
jbe
xor
push
fistl
mov
iret
xchg
test
mov
sub
cmp
pop
movsl
dec
dec
repnz
jb
mov
and
pusha
fdiv
pop
jl
iret
mov
mov
lret
xorl
je
sbb
xor
testl
sub
inc
aam
mov
mov
adc
iret
dec
push
dec
cli
mov
and
test
aas
sarl
xor
add
push
mov
dec
xor
sub
xchg
stos
divl
ret
loope
fnstsw
mov
jg
out
jge
mov
jo
add
jecxz
jns
xor
movsl
into
gs
nop
mov
push
imul
push
ficoml
cmp
pop
push
inc
movsb
sbb
inc
dec
shll
daa
dec
pop
lahf
jns
insb
stos
loope
imul
or
out
movsl
xchg
cmc
std
sahf
jmp
testb
adc
loop
sbb
test
mov
mov
jl
jne
fwait
add
shl
sbb
xchg
sbb
ret
cli
mov
mov
jle
mov
cld
push
mov
insl
mov
jno
mov
mov
jl
ljmp
mov
popa
ret
fwait
xor
xor
jbe
jmp
shll
mov
es
push
sbb
cmp
les
cmc
xor
sbb
cmp
cmp
or
insb
jb
mov
roll
rcr
mov
sbbl
fdivrl
jb
out
hlt
or
repnz
xor
sbb
daa
add
and
les
daa
int3
sub
out
insb
sub
and
pop
xlat
xor
cmp
movsb
lahf
loop
pop
loope
mov
or
inc
and
xor
cmp
xor
cmpsl
pop
movsb
mov
rolb
fstpl
cmp
mov
pushf
pop
rorb
insl
add
xor
jg
cmp
or
roll
aas
jmp
inc
mov
fwait
jne
mov
inc
test
out
movsl
mov
nop
pop
xor
popf
bound
dec
fs
dec
inc
xchg
or
jae,pn
adc
cmp
leave
or
popf
and
xor
mov
and
testl
iret
das
movsl
arpl
cli
pop
pushf
fs
and
or
jae
xor
imul
fsubp
push
popf
hlt
sub
lret
xchg
sbb
xor
into
and
cmp
stos
lret
push
xor
lret
inc
pop
mov
or
pop
icebp
pushf
jge
pusha
mov
jno
inc
enter
in
in
cmp
leave
inc
sbb
outsb
and
iret
add
cwtl
dec
push
adc
mov
add
push
shlb
mov
in
cmc
inc
cmp
decb
dec
and
mov
xchg
inc
push
pusha
fldcw
je
movl
ret
push
jl
cmc
fwait
data16
repnz
sub
xor
mov
push
rcl
inc
leave
lock
xchg
int3
push
sbb
cmp
or
repz
sub
roll
sbb
mov
es
lret
call
dec
rolb
xorb
lret
icebp
add
int
jecxz
fiadds
jecxz
aad
xor
lods
lds
cmp
push
fimull
mov
add
add
ds
iret
xor
lods
leave
jns
jnp
les
sbb
xor
mov
xor
jl
loop
xor
mov
faddl
stos
out
mov
je
loope
lods
or
aam
mov
mov
lret
sub
gs
pop
out
mov
loop
jnp
push
dec
cmc
orl
xor
mov
dec
repz
dec
fdivrl
dec
xor
out
jmp
push
xchg
fwait
sub
sub
xchg
inc
and
sbb
add
dec
pop
test
xchg
inc
mov
pop
ret
cltd
adc
lret
push
movsl
inc
pop
xor
andl
xor
adc
dec
mov
mov
adc
mov
jecxz
mov
ss
lret
xor
ljmp
xchg
in
cmpsb
dec
pop
inc
xchg
xchg
or
xor
dec
das
mov
adc
jns
mov
imul
cmpsl
push
out
or
inc
pop
push
pop
xchg
out
mov
add
je
leave
adc
push
push
imul
mov
ficomps
bound
sub
jo
mov
jmp
pop
push
mov
adc
ret
dec
into
movsb
insl
pop
out
mov
loopne
outsb
mov
pop
mov
or
sub
xlat
test
mov
mov
fnsave
repnz
and
push
mov
inc
scas
fidivs
out
cmpsb
jmp
addr16
dec
ljmp
fs
push
data16
in
fwait
shrl
popf
xor
xlat
test
andl
cmp
push
leave
icebp
cmp
roll
mov
xchg
push
mov
push
int
dec
es
roll
outsl
out
dec
repnz
inc
push
repnz
jno
xchg
xchg
jnp
cmpl
int
mov
cmp
jb
add
out
dec
add
in
pop
push
sbb
sbb
fidivl
push
int
xor
dec
clc
xor
sti
stos
out
das
fwait
ljmp
arpl
aaa
sbb
test
inc
jnp
cmp
fdivr
pop
mov
mov
je
adc
repnz
cmp
mov
sbb
fcmovnu
cmpl
lods
and
jmp
loop
sahf
shrl
test
mov
and
push
push
hlt
xchg
sub
arpl
outsb
sub
xchg
add
int3
jo
xor
and
jecxz
push
clc
cmp
mov
adc
mov
push
mov
sub
fs
jbe
insb
push
adc
mov
in
sub
aaa
leave
imul
adc
push
xor
pop
inc
and
daa
mov
adcl
mov
xor
jge
lock
mov
shrb
xor
push
sbb
pushf
mov
jnp
daa
enter
inc
es
xor
dec
xchg
aas
fstpt
xchg
adc
sbb
adc
mov
ficoms
dec
mov
out
mov
sbb
mov
subb
sarl
jl
sub
push
int
mov
sbb
gs
pop
pop
ljmp
cmpsl
sahf
push
icebp
mov
mov
xchg
sbb
adc
inc
aad
in
xor
sub
mov
ja
bound
push
popa
out
aad
sbb
sbb
fisttpl
es
js
rclb
in
cmp
outsl
push
flds
lret
cs
push
jmp
lcall
xor
subb
daa
jmp
andb
outsb
in
mov
add
pop
adc
inc
sub
aas
cmpsl
jmp
out
das
add
dec
pop
repnz
cmp
lock
cmp
vpmulhuw
test
dec
mov
or
mov
cmp
lcall
jecxz
sub
ds
popf
jne
xchg
jae
push
pushl
out
inc
pushf
sbb
orl
aam
sub
jge
nop
jp
xchg
das
mov
shrb
insb
dec
stc
call
ret
lea
mov
mov
outsb
pusha
jo
scas
pop
mov
jnp
push
dec
js
fidivs
xchg
jecxz
xchg
outsl
cwtl
hlt
adc
decl
xchg
push
in
jno
aas
inc
test
lcall
insl
push
and
xor
or
dec
mov
clc
imul
jmp
adc
dec
sahf
in
or
fs
data16
push
add
repnz
fxch
dec
pop
xchg
jne
aaa
cmp
pop
jae
fidivrl
mov
aad
push
std
mov
insb
dec
mov
push
lcall
sar
mov
and
cmp
and
xchg
fwait
daa
inc
inc
andb
daa
clc
mov
popl
nop
in
into
aas
cmp
inc
cmp
std
pop
ret
push
cltd
and
aas
cli
scas
pop
xor
stos
xor
ja
sbbb
lcall
insb
mov
ljmp
push
cs
inc
lret
jo
fbld
ljmp
fnstcw
add
push
push
dec
and
js
add
pop
movsl
mov
imul
int3
test
adc
push
sbb
or
aas
xchg
fmull
xchg
jecxz
and
ffree
cli
dec
and
mov
out
in
pop
pop
inc
stos
stc
dec
push
jne
mov
in
leave
mov
cmp
sbb
cmpl
or
pop
pushfw
ja
mov
add
call
mov
add
lds
in
push
addl
cli
inc
jne
cmp
pop
pop
dec
je
test
push
fcmovne
nop
and
ljmp
sub
adc
dec
dec
xor
or
jo
pop
popf
push
js
addl
popa
ret
mov
jb
mov
add
mov
xchg
lret
iret
jb
or
cli
sbb
mov
repz
aad
shlb
lock
jb
imul
jo
cmp
mov
push
xor
and
add
jb
out
mov
loope
fmull
in
inc
inc
repnz
sbb
fcompl
dec
mov
in
cmpb
adc
out
xor
adc
xchg
aad
mov
cmp
loopne
cmp
jns
sub
mov
or
mov
insl
aad
and
sbb
lods
shlb
pop
aas
dec
test
nop
addr16
pusha
fisubs
sar
sbb
push
outsl
orl
push
cmpb
adc
into
mov
pushf
jecxz
icebp
fisubs
cmp
inc
data16
sahf
jne
clc
in
push
cmpl
mov
push
lock
add
fldenv
je
out
mov
out
mov
mov
add
xchg
inc
jbe
lods
mov
insl
lea
loope
mov
pop
fisubs
lds
or
jmp
ret
push
lahf
inc
sub
adc
mov
ljmp
les
into
and
jp
xlat
jg
and
in
sub
cmp
std
lods
popa
popf
inc
sbb
jne
je
das
mov
xor
pop
ss
add
ja
ficomps
lock
mov
pop
leave
lret
sarl
je
outsb
or
mov
aad
sbb
add
ret
rcll
pop
sahf
gs
lods
add
mov
pop
mov
insl
mov
popa
aad
cli
jne
cmpsb
inc
ljmp
push
push
shll
push
lock
xor
addr16
pop
jle
enter
and
mov
aaa
lds
pop
mov
mov
jl
subl
mov
inc
mov
adc
fdivl
inc
jecxz
repnz
pop
mov
xor
cmpsl
pop
push
fs
cmpsb
out
ds
push
imul
inc
pop
pop
adc
loop
int3
sub
xor
cmp
ja
das
cltd
xor
jg
mov
push
hlt
es
xchg
sbb
dec
inc
mov
jae
inc
xor
add
xchg
in
jle
cld
imul
lsl
aam
test
cmp
xchg
ret
sub
cmpsl
dec
insb
notb
fsubrl
or
cld
inc
mov
pop
ret
mov
xchg
dec
pushf
dec
sub
sub
or
xor
xlat
mov
mov
pop
mov
outsl
push
loopne
sub
add
sub
cmp
mov
aaa
fstpt
dec
negb
lret
xchg
test
pushf
mov
fidivrl
repnz
sub
jae
int
adc
push
movsb
scas
dec
stc
loope
jb
cmp
das
filds
or
stc
add
pop
out
mov
loopne
mov
imul
jg
xchg
lods
xchg
cmp
jno
adc
push
gs
in
add
aaa
cmpsl
sbb
or
push
sarl
adc
or
inc
loop
cmp
data16
es
cld
popa
outsl
sub
popa
shl
push
loop
xor
shl
jns
push
sahf
out
cmp
ja
pop
inc
shld
cmp
sahf
jae
icebp
sub
mov
sub
int
jmp
cmp
sti
in
push
mov
gs
outsl
cwtl
xchg
adc
fwait
gs
loopne
mov
lods
add
test
js
fnsave
inc
xor
inc
add
test
pop
mov
sub
push
fwait
xlat
dec
lret
xchg
inc
mov
inc
repnz
and
xor
arpl
test
mov
les
jle
outsl
fs
nop
and
pop
mov
or
cwtl
xchg
push
data16
xor
orb
pusha
sbb
aas
xor
push
loope
lcall
fimull
mov
xchg
pop
pop
mov
in
pop
dec
rcrb
jecxz
cmp
imul
into
pop
push
icebp
push
pop
in
jo
inc
leave
lret
xchg
loope
jo
push
in
push
rorl
xor
ss
ss
add
cmp
mov
lret
nop
hlt
sbb
inc
mov
cld
jp
push
add
xchg
mov
push
jl
adc
sub
mov
enter
mov
jecxz
mull
push
and
ret
cwtl
inc
sub
iret
notb
mov
sub
es
std
xlat
cmpsb
and
push
aam
mov
and
mov
cmp
rcl
roll
mov
inc
scas
sub
cmpsl
sub
das
arpl
in
repz
incl
imul
dec
sub
cs
sub
mov
call
es
cmp
pusha
mov
nop
sbb
movsb
adc
jle
xchg
ss
ljmp
push
les
jmp
out
mov
out
sti
pop
into
push
icebp
mov
lods
ljmp
outsb
ljmp
sti
stos
outsl
outsl
lret
hlt
jge
and
and
sbb
mov
or
adc
lods
mov
inc
cld
and
mov
les
jmp
cld
out
or
or
cmpsb
stos
fisttpll
mov
and
cmpsl
test
scas
fwait
sub
inc
mov
arpl
ds
jecxz
mov
mov
pop
jp
test
adc
inc
or
mov
repnz
inc
fdivl
or
ljmp
shll
imul
es
lods
push
imul
dec
add
or
pop
rolb
cmp
push
aas
cmc
push
jbe
sbb
movsl
fbstp
icebp
adc
or
movsb
jge
pop
pop
cmpsl
xor
push
fmulp
cli
jle
pop
repz
push
sub
jnp
push
mov
or
sbbb
xchg
test
mov
shlb
imul
lahf
insl
adc
dec
ljmp
ss
add
add
shufps
jmp
cmp
cwtl
leave
lds
mov
or
orb
or
lahf
add
popa
sahf
repnz
pop
xchg
test
push
jp
push
fcmovne
cmp
and
popa
jmp
out
out
cmp
out
jecxz
push
arpl
jl
xchg
adc
fldt
lods
into
jl
jo
lret
lcall
pop
xor
mov
push
lods
movsb
cltd
ret
fs
das
into
jl
outsl
mov
leave
mov
cmp
sbb
push
das
imulb
fs
sub
fwait
imul
test
outsl
dec
add
imul
jo
ljmp
mov
dec
ss
inc
xchg
into
stc
dec
ret
xor
cmp
lret
pop
adc
leave
lahf
scas
cmp
cmp
xchg
mov
pop
xchg
sub
jo
pop
sub
dec
loopne
pop
cmpsl
jae
mov
fsub
mov
data16
movsl
addr16
xchg
clc
jecxz
cmpsb
or
inc
pop
and
push
bound
push
pop
or
add
xor
pop
pusha
das
mov
dec
push
mov
mov
xchg
adc
push
mulb
ljmp
xor
mov
lret
lret
fcompl
xor
mov
scas
jb
push
jae
stos
lock
mov
add
es
lods
scas
enter
aam
lods
mov
ljmp
pop
pop
adc
pusha
sub
mov
out
sbb
dec
test
insl
fcmovne
xchg
test
dec
std
xor
ds
mov
insl
xchg
out
pop
popa
pop
lret
imull
push
lock
mov
sbb
inc
aas
sarl
out
daa
xchg
in
push
or
cld
ss
pushf
xor
push
and
stos
inc
data16
push
push
pusha
mov
es
sub
inc
mov
shll
jo
inc
test
ret
ds
mov
xchg
jmp
icebp
popf
pop
push
xor
mov
mov
or
test
xor
push
jmp
mov
sbbl
add
arpl
jl
cld
clc
cmp
scas
addr16
lcall
movsb
push
pop
es
popa
jmp
xchg
insl
bound
mov
jecxz
neg
add
stc
cmp
xchg
pop
outsl
sti
sub
mov
shrb
shll
sub
adc
add
jnp
loop
xchg
and
int3
sub
shlb
cmp
imul
cwtl
lahf
jmp
clc
lds
dec
arpl
in
int3
addr16
ds
int3
sarb
iret
and
add
repnz
add
mov
push
ret
call
push
loope
sub
jp
mov
mov
pop
push
add
dec
cmc
dec
lea
sub
aad
jb
pop
lcall
sbb
xchg
dec
xchg
dec
scas
ficoml
ss
aaa
mov
scas
add
dec
pop
mov
lods
mov
into
mov
pop
jae
outsl
push
ljmp
icebp
add
cmp
sbb
pushf
mov
rcrl
xor
mov
sti
push
rcrl
sbb
test
inc
xchg
sahf
push
mov
inc
hlt
or
stos
stos
mov
ffreep
xor
jle
jne
add
testb
leave
and
movsb
pop
lock
iret
xor
nop
repz
std
sbb
xchg
js
sub
sbb
pop
je
dec
lock
cmp
jp
mov
mov
pop
sbb
fcoml
mov
testl
xchg
ret
leave
arpl
mov
test
push
cmp
fdivr
add
repz
jmp
pop
cli
pop
loop
add
das
push
pushf
rep
push
pop
shl
outsl
xchg
pop
jecxz
jbe
jbe
xchg
sbb
aaa
pop
mov
mov
out
jle
inc
jns
test
sbbl
pop
mov
pop
mov
sbb
or
and
popf
je
xchg
pusha
push
cltd
jg
test
pop
es
mov
push
test
xorl
pop
mov
mov
cltd
and
fs
xor
push
out
fs
add
push
jecxz
out
lahf
push
nop
and
sub
and
inc
stos
jnp
adc
jns
or
mov
stos
fdivrl
jbe
je
push
ja
cmp
test
negb
inc
gs
lods
xchg
dec
mov
fldenv
ret
arpl
das
repz
mov
jmp
icebp
mov
push
add
aaa
xor
add
fisttpll
or
xchg
push
and
pop
jg
adc
lret
dec
or
fwait
test
pop
jg
push
sbb
inc
xchg
add
pusha
mov
mov
fidivs
roll
sbb
mov
xchg
cmp
mov
dec
aad
mov
jecxz
rcrl
pop
jmp
adc
adc
mov
push
out
add
and
loope
push
mov
jp
lret
sub
xor
aad
sub
imul
xor
push
jp
movsl
ja
dec
sub
mov
cld
insb
xchg
arpl
cmp
arpl
pop
jo
shl
dec
fnsave
lret
inc
fwait
dec
mov
jecxz
lret
nop
and
adc
sbb
fwait
sub
sbb
push
push
or
aam
cmp
psubw
bnd
xor
outsl
mov
lods
push
and
out
xor
cmp
and
cli
and
ja
ret
inc
pop
inc
jp
movsb
loop
push
loop
xor
cli
jno
out
xlat
testb
aaa
out
xorl
mov
rorl
mov
inc
add
std
xlat
pop
mov
sti
ja
or
mov
sub
xchg
jmp
ds
lods
dec
scas
or
jecxz
push
xor
icebp
dec
shrb
adc
inc
bound
js
jmp
out
addr16
mov
mov
adc
or
push
jb
sahf
pop
icebp
sbb
mov
pop
mov
xchg
movsl
dec
cli
mov
scas
cmp
adc
pop
fmull
es
lret
ljmp
push
in
sub
cmp
xor
popa
lds
aad
xchg
insb
cs
pop
iret
fwait
jg
inc
push
negb
stc
popf
test
sub
xor
adc
cs
push
pop
mov
lods
and
adc
cltd
in
or
cltd
sub
in
or
xchg
xchg
jg
cmc
fmuls
leave
test
repnz
lds
sbb
repnz
xchg
push
shlb
add
sub
cltd
push
mov
movsb
jnp
hlt
repnz
cmp
bound
fsubl
mov
mov
ret
arpl
lcall
or
xor
pop
mov
add
jg
cwtl
std
jl
hlt
xor
jae
cmpsb
push
out
aam
sti
cmc
inc
push
imul
xchg
rcll
inc
adc
fsubs
subb
inc
jge
mov
repnz
or
push
popf
data16
add
fstpt
iret
mov
imul
xchg
iret
je
jl
or
int3
ret
sbb
inc
sub
int
icebp
sub
sub
in
insb
xor
ljmp
addb
popa
mov
lea
cwtl
push
lcall
repnz
fdivrp
jbe
lock
inc
cmp
cltd
repnz
mull
ja
clc
insl
cmp
out
adc
stos
sbb
xchg
adc
mov
ja
pusha
inc
mov
imul
loope
js
fcoms
push
lods
fcmovu
cmp
dec
mov
ja
inc
adc
or
pop
mov
cld
pop
inc
push
adc
inc
mov
dec
sub
adc
shl
cmp
fstpt
push
sub
test
push
sahf
inc
scas
push
push
test
iret
in
fsubrs
mov
pop
test
lret
pop
movsb
push
push
lds
mov
pop
test
in
mov
mov
jp
mov
fsubl
mov
shll
mov
loope
fwait
stos
add
lock
sub
push
fiadds
fnstcw
push
pop
cli
or
cmpsl
pop
jne
lret
cmp
mov
clc
in
mov
mov
fistps
aad
push
loope
stc
cmp
push
cmp
jne
push
and
xor
jbe
in
jnp
fbstp
ret
jecxz
jl
jnp
out
pop
adc
dec
sub
rcrl
xchg
test
push
mov
and
pop
inc
fiaddl
sub
cwtl
addr16
or
mov
push
lods
jne
arpl
shl
pusha
mov
and
inc
imul
add
and
pop
sahf
push
hlt
add
pop
enter
mov
xchg
fwait
mov
pop
test
negl
dec
div
popf
push
mov
cmp
jne
mov
xor
cmp
clc
add
popf
pop
rolb
mov
mov
lret
movsl
jno
cltd
jp
sbb
push
jle
jae
or
jb
jl
and
rcl
dec
inc
lea
ds
daa
lock
sarl
sub
aas
repnz
das
push
mov
clc
or
hlt
or
out
pop
xchg
pop
mov
add
clc
bound
pop
adc
hlt
or
gs
test
sar
dec
sbb
popa
xchg
sbb
test
add
dec
les
stc
loop
adc
push
fbld
sahf
push
mov
call
popa
mov
test
cmp
pop
jbe
leave
push
mov
out
xor
lods
mov
in
test
out
in
lea
in
mov
call
or
add
xor
inc
lea
cs
inc
mov
cmp
sub
fldenv
dec
push
lea
cld
adc
ljmp
sbb
repnz
cmpsb
icebp
repnz
jp
jmp
lret
push
xchg
sbb
add
jmp
jno
push
sub
insl
sbb
arpl
or
add
orb
enter
inc
mov
addr16
scas
inc
xchg
dec
add
imul
add
mov
mov
test
hlt
cmp
jle
lds
cli
pop
xchg
dec
xorl
mov
cmp
mov
inc
movsl
xor
add
jno
aad
out
jge
stos
dec
lcall
add
fstl
sbbl
xor
cld
enter
jl
jae
sub
mov
arpl
gs
mov
sbb
fstpl
mov
loop
push
push
cmc
das
insl
outsb
ljmp
sbb
sbb
xor
jne
cmp
adc
outsb
stc
insl
mov
xorl
fidivrs
push
imul
scas
les
ss
or
push
and
add
out
pop
sub
mov
sub
stos
rol
cld
jl
in
pop
sub
cmp
sti
or
xor
ficoms
insb
shl
adc
pop
push
call
outsb
or
push
test
sahf
inc
sbb
mov
movsl
xor
mov
pop
orb
test
cwtl
cld
xchg
aaa
mov
dec
add
jl
int3
mov
test
aas
iret
int3
mov
jne
mov
mov
mov
pop
repz
push
and
and
out
push
lea
dec
lea
fwait
xor
mov
dec
mov
outsl
out
inc
movsb
dec
jle
outsl
add
mov
repnz
mov
jmp
xor
push
scas
and
cmp
lods
mov
add
dec
cwtl
cs
xchg
mov
sahf
sti
dec
out
test
cmovl
add
sub
mov
repnz
xchg
jno
sbb
loopne
sbb
sbb
mov
idivl
iret
pop
inc
aad
mov
sub
jecxz
in
jns
idivl
fbld
int
or
bswap
xchg
cmpl
fnstsw
shll
mov
sbb
mov
call
je
cli
prefetchw
insb
mov
loope
mov
jo
add
jo
inc
mov
push
cmpsl
test
and
sub
jns
sub
fs
push
lods
push
jp
or
in
xor
push
pop
mov
dec
xchg
ret
sbb
sahf
sbbb
jo
pop
jb
inc
dec
mov
addr16
xor
pop
outsb
dec
mov
sub
adc
xchg
aad
xchg
enter
sti
dec
insb
outsb
cmp
into
sbb
into
jne
mov
repz
int3
pop
ficompl
dec
mov
lea
jno
repnz
or
jp
dec
or
xchg
jns
mov
cmp
or
addl
push
add
push
pop
enter
adc
lock
and
arpl
outsb
mov
outsb
rorb
sub
mov
jo
loopne
js
jge
in
pop
cmpsb
jle
jo
iret
xchg
or
dec
mov
inc
daa
mov
push
jle
mov
push
vmptrst
jecxz
adc
loop
adc
outsl
js
inc
call
mov
dec
data16
sahf
pop
or
adc
push
orb
dec
outsl
jno
or
pop
mov
adc
les
mov
xchg
adc
ds
xchg
insb
xor
pop
mov
test
or
js
adc
jno
fldl
xor
sub
les
lahf
sahf
fdivs
pusha
subb
adc
movsb
sub
bound
pusha
push
int
add
sub
mov
roll
inc
lcall
sarb
je
mov
sti
mov
mov
mov
cmc
adc
lock
movsl
clc
pop
inc
cwtl
xchg
icebp
aaa
sahf
inc
test
in
and
cltd
arpl
and
jo
jae
and
stos
mov
push
mov
mov
mov
das
mov
mov
insb
cs
add
aad
sbb
xchg
jle
mov
scas
mov
mov
xor
sub
xchg
js
fstpl
stc
cmp
popf
imul
pop
jge
sti
add
popl
sub
cmp
or
add
in
sub
movl
push
fidivl
adc
mov
adc
mov
aas
dec
mov
push
dec
divb
xchg
loope
insl
cld
cmpsb
les
out
arpl
mov
lock
pop
sub
lods
sarl
jo
xor
adc
mov
ja
add
add
jmp
push
outsb
ja
sub
sub
mov
iret
dec
sbbb
push
mov
adc
movsb
jecxz
dec
dec
xor
jl
dec
jg
cmp
movsl
cmp
aam
imul
mov
imull
cmp
xchg
sti
or
ret
adc
pop
cmc
lea
and
jecxz
js
and
test
jp
mov
jno
cmpb
and
push
jg
test
mov
cmc
sbb
add
adc
xchg
mov
mov
inc
cmp
pop
aad
into
enter
or
add
lock
loopne
jl
jmp
push
test
lret
jnp
xor
adc
add
xchg
stc
cli
mov
add
cmpsb
stos
pop
and
insl
xchg
cmp
rcrl
xor
mov
inc
popa
icebp
bound
inc
loop
test
pop
mov
dec
adc
sahf
lcall
dec
push
xchg
gs
mov
cld
stc
outsb
xchg
sub
mov
mov
stc
mov
call
xchg
cld
jp
fwait
nop
push
loopne
jae
push
mov
dec
leave
test
mov
bound
test
lods
pop
int3
adc
fcos
mov
stos
lods
pop
mov
push
cltd
jnp
sub
dec
insb
inc
mov
cmp
adc
dec
ja
xchg
dec
test
es
jl
scas
data16
data16
js
jno
aaa
lcall
jbe
ja
dec
aam
sarl
xchg
jns
std
add
rcrb
arpl
xor
addl
in
xlat
outsb
icebp
adcl
test
outsl
dec
mov
lds
inc
mov
push
add
jno
ds
and
rorb
mov
repnz
mov
sub
popf
cld
daa
ret
dec
popf
dec
sar
cmp
add
mov
sbbb
jle
fs
push
xor
imul
rcll
jns
sub
das
test
lock
test
cmp
scas
cmp
push
test
cmc
adc
out
loope
data16
movsb
subl
in
adc
inc
xchg
push
das
cmpsb
xrelease
mov
mov
jo
or
sarl
jl
inc
rcrb
scas
or
aam
lea
sbb
inc
xchg
test
sub
cmp
lret
xor
rorb
out
sbb
adc
xchg
iret
xor
or
mov
out
test
out
ds
test
repz
stos
lret
out
call
out
pop
inc
xchg
lock
daa
sti
sarb
mov
lret
daa
fcmovb
add
jo
gs
pop
mov
xchg
mov
ret
aad
test
daa
roll
dec
pop
ljmp
xchg
xchg
pop
mov
pop
scas
pop
lods
push
stos
add
ss
pop
inc
xchg
and
push
mov
push
popl
xchg
xor
fwait
push
out
cmpsb
dec
into
test
orl
cs
adc
ljmp
push
test
incl
hlt
mov
loopne
push
pusha
out
mov
sub
jb
gs
xchg
pop
lock
mov
jl
dec
stc
dec
add
sbb
fwait
jb
mulb
loopne
xor
sbb
lahf
xor
dec
dec
add
cmp
mov
or
jbe
icebp
adc
sarl
pop
xchg
lcall
push
push
imull
xchg
and
sbb
nop
or
sub
jmp
rorl
xor
in
cmp
mov
iret
in
enter
pop
mov
repnz
xor
insb
in
flds
aad
inc
bnd
mov
sti
jge
pop
push
mov
jmp
sahf
outsl
lock
decl
mov
mov
pop
mov
mov
outsb
enter
test
and
aaa
rcll
mov
dec
pushf
jmp
and
mov
mov
inc
or
push
pop
clc
inc
ret
sbb
mov
mov
xor
fmull
adc
cwtl
fwait
mov
pop
popa
dec
sub
jae
mov
pop
out
sub
push
push
pop
pop
sub
leave
leave
test
fwait
rol
push
add
inc
jp
dec
jmp
push
or
std
and
stos
icebp
or
xchg
test
test
stc
outsl
inc
inc
lcall
cltd
repnz
mull
jmp
sub
repnz
mov
mov
loopne
mov
and
xor
cs
lret
outsb
pop
push
fldl
out
lds
push
jo
mov
push
fwait
mov
inc
adc
mov
xchg
daa
js
adc
sbbb
cmp
jb
stos
test
test
lea
leave
mov
xchg
icebp
xchg
sub
adc
and
mov
cli
cmp
sahf
scas
cmp
jl
mov
mov
jg
dec
jbe
sbb
or
cmpsb
pop
lahf
mov
jne
jbe
xor
fs
adc
leave
flds
sub
jno
cs
add
in
enter
ss
dec
fists
jbe
cmp
iret
sub
adc
or
test
jo
scas
fsub
fnstcw
mov
mov
arpl
outsb
das
adcl
pop
pop
and
aad
push
jl
jmp
cli
das
cmc
icebp
movsb
cmp
sub
mov
jne
mov
xor
xchg
or
repnz
xchg
or
int3
lock
sub
iret
mov
aad
or
sub
pop
clc
mov
jmp
push
repnz
add
push
data16
aad
insl
mov
leave
xor
cmp
test
int
jl
test
adc
lds
mov
lea
lds
sbb
mov
out
pop
xlat
lea
shlb
mov
pop
mov
jb
sbb
lods
and
rcrb
mov
je
pop
sahf
lahf
lds
xlat
cs
fisubl
dec
cvtpi2ps
push
inc
or
add
aas
mov
xor
cmp
jns
cwtl
mov
push
pop
add
stos
cld
jp
xor
sbb
jae
or
leave
imul
test
pop
fcmovnu
mov
cwtl
out
out
int
sbb
into
xlat
jl
mov
xor
nop
and
adc
jg
add
dec
sub
xchg
clc
roll
int
pop
cltd
cwtl
pusha
dec
aad
pop
push
sub
mov
cmpsl
xchg
pop
ja
adc
dec
lds
add
jp
stc
sbb
sbb
lods
sbb
gs
imul
xor
js
inc
sbb
add
cmpl
jg
lea
neg
jns
inc
rolb
jmp
mov
in
or
mov
rcl
jb
fisttpl
inc
and
pop
sbb
add
xor
jp
pop
cmp
hlt
imul
call
stc
ja
xorl
inc
ss
cld
adc
pop
and
pop
adc
sub
mov
mov
sbb
cld
dec
sub
outsb
outsl
mov
gs
add
mov
inc
test
ljmp
gs
sub
jmp
cmpsb
aad
dec
incb
int3
push
lahf
push
inc
and
mov
pop
jl
xchg
jo
cmp
push
imul
cs
mov
repz
sbb
mov
adc
rcr
orl
in
cmp
push
jae
mov
push
inc
bnd
shll
add
lea
xor
xor
pop
pop
aas
fistps
mov
mov
add
push
jl
add
fwait
shl
clc
hlt
inc
fwait
lret
and
mov
inc
dec
or
sbb
sub
imulb
ficomps
xorw
jl
testl
and
hlt
imul
mov
or
icebp
or
cmpb
iret
imul
push
adc
xchg
cmp
mov
or
jno
in
push
inc
cli
test
push
pop
addr16
pop
test
les
shll
fisttpll
sarb
cmpsl
sbb
mov
scas
xor
cmpl
test
sub
loope
xchg
fwait
mov
mov
jae
test
sub
je
inc
xchg
and
lahf
cmp
push
mov
cmp
rcrl
mov
sbb
pop
rcl
call
cwtl
mov
dec
dec
add
sub
test
adc
testb
jo
jns
stos
cwtl
fldl
add
or
add
add
pop
test
jae
add
xorb
push
inc
sub
scas
sub
ret
rcr
jl
pushf
in
dec
fcmovu
aam
mov
fcomip
nop
jg
aaa
mov
add
mov
not
adc
adc
mov
in
cmc
scas
jno
mov
xchg
cmp
xchg
sub
lock
fcmovbe
xor
xor
test
add
dec
in
xorl
movsl
cmp
insb
cmc
cwtl
rorb
sub
mov
sahf
sub
mov
pop
and
frstor
push
cmpsl
repnz
mov
pop
insl
repz
adc
lahf
test
mov
jne
cmp
or
cmovp
lcall
rcrl
pop
mov
aas
or
repz
and
jmp
aaa
inc
outsl
pop
jbe
pop
or
cmpsb
dec
pop
push
jle
popa
adc
or
adc
hlt
push
cmp
inc
cmp
jno
call
push
sbb
loop
dec
cmp
repnz
push
movsl
cld
cmpsl
jp
xor
and
jno
aam
and
adc
out
sbb
pop
inc
cwtl
imul
outsb
fmuls
arpl
cmpsl
js
inc
scas
inc
mov
push
jb
ja
push
dec
shr
lahf
pop
xchg
mov
aaa
mov
adc
stos
push
test
push
arpl
addb
dec
mov
ret
shll
jmp
je
stos
pop
lods
and
jb
scas
adc
jl
hlt
insb
ds
lds
int
xor
inc
cltd
aas
loope
lock
test
mov
mov
jl,pt
jg
test
add
mov
and
lret
sub
je
aas
lds
xor
push
int
cmp
mov
scas
dec
daa
cltd
sub
repnz
add
movsb
sub
add
cmpsb
mov
lock
addr16
push
pop
std
or
sub
sub
push
adc
hlt
jno
mov
mov
adc
pop
mov
jae
pop
sub
out
lret
cmpsl
jns
push
inc
pop
mov
mov
and
jge
jo
adc
xchg
mov
lods
dec
stos
xchg
test
mov
pop
lret
add
xchg
xchg
xor
cmp
mov
int
xor
rorl
cmp
test
jno
jns
xchg
xchg
mov
std
mov
cmpsb
movsl
orps
and
mov
mov
push
cltd
jo
add
mov
cmp
pop
lds
or
push
xor
or
cmc
in
mov
xchg
dec
pop
insl
aaa
aam
lret
subl
cmp
bound
lahf
push
jb
pop
mov
or
in
shlb
sarl
ficoml
or
and
adc
push
clc
les
lds
daa
aam
xor
das
es
out
ds
xchg
test
and
mov
inc
clc
dec
add
or
movsl
mov
or
in
mov
mov
test
lock
mov
mov
or
dec
adcl
push
ficoml
dec
hlt
add
xor
aaa
enter
std
sbb
ficoml
imul
jbe
mov
xchg
pushf
pop
adc
outsb
andl
jo
cwtl
dec
mov
dec
in
jg
lds
ret
jg
xor
test
xor
je
clc
lea
cmpl
add
adc
add
ret
pushf
jbe
dec
mov
and
and
mov
mov
sbb
cli
es
sub
testb
into
sbb
xor
xor
xorb
mulb
add
sub
loopne
pop
sub
iret
and
or
mov
icebp
out
lods
daa
daa
lods
pop
lods
loopne
inc
pushf
mov
mov
stos
addr16
shr
jns
cmp
cmp
mov
or
inc
mov
pop
test
mov
inc
pop
icebp
and
cmp
mov
daa
out
push
pop
sbb
inc
loop
out
shrb
push
mov
mov
jae
outsb
sahf
and
inc
imul
mov
xchg
adc
xchg
dec
mov
repz
fisttpll
rol
adc
into
icebp
dec
fadd
cltd
sbb
mov
ljmp
roll
std
inc
xor
nop
fidivl
pushf
subb
xor
mov
jmp
mov
pushaw
movsb
pop
xchg
or
fst
aaa
lret
ljmp
in
call
shrl
repnz
insl
mov
sbb
sub
test
out
fisubl
dec
loopne
cld
or
sub
jge
gs
clc
xor
stc
sbb
mov
xor
clc
pop
call
sar
sbb
mov
xchg
call
inc
incb
jne
pop
hlt
out
stos
pop
fnsave
inc
pop
mov
xorl
xor
outsb
popf
std
sub
push
inc
jae
adc
adc
or
bound
xor
pop
aam
or
mov
or
dec
push
js
fucomp
outsl
fstpl
add
inc
xchg
pop
xor
sbb
push
stos
xor
add
pusha
jb
frstor
pushf
call
insl
out
icebp
push
daa
xor
or
and
cmp
sub
push
cmp
out
ljmp
dec
lret
mov
out
inc
mov
dec
dec
jg
outsl
dec
mov
xorb
and
mov
cmp
aad
cmp
mov
inc
xor
mulps
lret
inc
cmp
and
inc
push
outsb
mov
das
sbb
aad
mov
es
jns
repnz
mov
insl
cli
pusha
cltd
cwtl
fidivrs
dec
xor
sub
outsl
inc
jne
push
pop
push
testl
fucomp
xor
push
cmc
inc
or
incl
pop
adc
stos
clc
ja
leave
in
movl
cmpl
pop
aaa
jp
rorl
mov
xlat
adc
daa
pop
inc
shll
stc
fimuls
ficompl
outsb
xor
loop
imul
and
jbe
std
fldenv
sbb
cmp
cmp
jmp
xor
cmp
jno
jle
negb
dec
cmpsb
sub
adc
les
cli
xor
mov
pusha
cmpsb
inc
les
xchg
add
fstl
cmpsb
int3
mov
push
call
add
iret
cli
dec
adc
dec
jbe
arpl
mov
jmp
xor
popa
lret
jno
jp
scas
add
jmp
fists
pop
out
cmp
adc
inc
mov
sub
mov
outsb
jbe
out
pop
sub
into
or
cmpsb
xchg
scas
add
mov
std
repz
jno
js
xchg
sub
mov
pushf
ficoms
dec
inc
push
jl
ficoms
mov
lods
fistpll
pop
pop
dec
es
jmp
mov
sub
jne
lret
cli
shll
pop
repz
or
xchg
and
cmp
jl
cmp
pop
imul
adc
mov
inc
mov
into
sub
cmp
stos
pop
ljmp
dec
outsl
dec
jecxz
or
or
cli
push
dec
cltd
jge
adc
xor
jnp
loop
pop
shrl
adc
pop
lret
fcoms
pop
dec
sbb
pop
ret
movsl
inc
mov
or
pushf
sub
inc
inc
test
test
iret
ss
push
mov
pop
push
lret
jmp
mov
xlat
mov
popf
pop
mov
jg
inc
stos
cmp
pop
lcall
jne
jl
lcall
test
xor
popf
dec
push
mov
mov
jo
insl
jbe
test
scas
xor
add
mov
pop
mov
and
lds
cmc
sub
aaa
call
sarb
or
cmp
popa
out
sbb
popa
or
lock
fdivs
shll
adc
dec
stos
xchg
push
xor
es
push
cmp
lret
ja
js
fdiv
out
or
adc
xor
push
in
push
sbb
stos
sub
or
jge
cli
cmp
fs
jge
adc
jnp
mov
les
testl
cmpsl
aaa
adc
jbe
push
mov
ret
movsl
out
repnz
fwait
inc
mov
les
xlat
test
xlat
pop
repnz
xchg
dec
fstpl
pop
loop
addr16
xor
pop
xchg
inc
fimuls
insb
int
cltd
mov
mov
pop
repnz
fistpll
add
xchg
shll
imul
add
adc
insb
push
lods
inc
mov
js
inc
push
mov
and
das
sarl
popa
shrb
leave
push
shl
sub
or
and
mov
jbe
and
or
add
loopne
adc
in
sbb
or
and
ret
jnp
arpl
jecxz,pn
hlt
mov
mov
pusha
or
mov
lock
ret
cmp
xor
in
and
mov
lahf
test
or
out
call
arpl
jle
push
add
andl
mov
shrl
push
pop
fbld
fidivrs
dec
xchg
subb
fisubrl
pop
xorl
dec
mov
movsb
nop
jns
jno
sub
sti
xchg
push
popa
xchg
jp
push
inc
sbb
cmp
jecxz
decb
xlat
loopne
out
jno
mov
push
push
mov
xor
fdivp
movsl
insl
inc
mov
mov
mov
cmp
mov
ret
xchg
adc
cltd
imul
adc
iret
xor
sub
sub
mov
aam
in
or
insl
int
icebp
jb
cmpb
sub
sub
inc
ja
shll
leave
pop
cmp
and
push
fisubrl
rorl
test
dec
xorb
aas
adc
stos
loope
jne
xor
leave
inc
push
jp
lock
or
sbb
aam
fcmovnb
sub
clc
pop
arpl
sub
js
cwtl
repz
sub
icebp
xchg
cmp
mov
bound
rol
mov
mov
stos
inc
add
sub
xchg
sub
mov
out
inc
mov
xchg
jb
mov
jae
mov
mull
nop
popf
mov
jg
mov
and
mov
push
test
scas
iret
ss
sbb
sub
adc
push
enter
insb
jb
pop
mov
add
addr16
icebp
dec
cld
leave
cmp
test
cmp
xor
push
jmp
clc
fstps
lea
shlb
jle
lret
ds
sbb
stc
pop
les
xchg
push
xor
or
and
icebp
sub
xchg
xchg
jge
pop
lcall
pop
adc
add
sub
out
xor
or
fiadds
lcall
repz
das
lock
mov
cmp
or
fisubrs
mov
jno
push
and
outsl
or
inc
scas
dec
scas
in
mov
decl
dec
out
jae
cld
sub
push
mov
js
xchg
insb
dec
fstl
fwait
jp
inc
test
dec
pop
and
mov
test
xchg
dec
mov
pusha
lods
out
inc
out
jnp
cmp
lds
sbb
xchg
or
scas
fdivl
fcoms
lahf
out
cmc
or
mov
insb
repnz
in
push
pop
and
and
cli
ds
cmpl
shll
ja
out
leave
popf
cmp
test
pop
or
cmp
stos
push
out
adc
imul
mov
dec
sbb
stos
inc
cmpsb
push
jp
add
inc
mov
sub
push
sbb
pop
xor
xchg
pop
int3
fsubs
and
divb
hlt
stc
push
inc
lea
jge
icebp
stc
xor
cmp
dec
addr16
cs
lock
in
lock
pusha
jle
dec
dec
test
xchg
sbb
insl
cwtl
repz
cli
inc
mov
mov
or
sbb
mov
xchg
gs
jmp
pushf
adc
xrelease
sub
sub
xor
mov
int3
pop
incl
xchg
inc
test
pop
hlt
add
sbb
sbb
je
push
outsb
dec
int3
cltd
imul
subb
shl
fiaddl
and
sub
in
push
inc
call
and
jb
js
and
cmp
inc
mov
loop
stc
jle
dec
icebp
add
inc
lods
jge
adc
and
icebp
adcl
fidivs
add
mov
inc
popa
dec
psrld
jge
je
mov
imul
add
stos
jecxz
add
cmp
lret
shll
imul
lret
rcl
pop
aam
xchg
scas
ja,pn
jb
scas
dec
out
jb
pop
mov
pop
andb
int
mov
lock
or
jg
pusha
pop
cmp
lcall
popa
popf
js
push
pop
mov
sbb
repnz
popa
data16
enter
ds
jnp
and
add
sub
iret
jnp
add
test
fildll
jmp
jne
call
mov
pop
mov
aaa
scas
dec
push
je
lret
out
fs
lret
ss
scas
xchg
add
adc
cmpsb
or
lock
out
ds
inc
loope
add
cmovl
pop
movsb
dec
push
ret
ja
mov
push
scas
push
lret
fdivp
ret
std
sbb
jo
cltd
push
mov
cmpl
mov
lock
mov
sub
ljmp
fimuls
jle
pop
into
sub
gs
movsl
sbb
sub
inc
sahf
je,pn
and
loop
dec
pop
xchg
inc
jbe
mull
xchg
jns
nop
inc
test
jecxz
hlt
push
shll
in
xor
inc
call
into
xor
push
xchg
jno
pop
pop
scas
push
lret
add
popl
mov
sbb
cli
je
sbb
or
lods
and
push
dec
inc
or
ss
jo,pt
xor
mov
sbb
sbbb
jae
testb
out
pop
mov
and
lret
stos
jge
nop
push
jns
push
call
push
sti
int3
xchg
pop
imull
leave
loopne
push
sub
ret
fsts
push
jecxz
ljmp
arpl
add
rcll
je
repnz
add
push
pop
mov
mov
mov
push
inc
xchg
pop
into
ss
push
dec
fwait
jno
mov
ret
fs
cwtl
inc
xchg
test
push
fdivrl
xor
xchg
fsubrl
lcall
scas
pop
ljmp
int3
cmc
push
and
mov
rep
push
daa
pop
ret
cmp
push
inc
mov
cmp
pop
fldenv
and
mov
and
test
inc
aad
addb
pop
addb
xchg
out
icebp
jp
das
gs
ret
pop
addb
imul
icebp
mov
fiaddl
bound
stos
push
mov
incl
hlt
nop
xchg
sar
dec
mov
mov
scas
scas
fbld
daa
cmp
cs
insl
sarb
sub
aaa
fcompl
sub
or
fs
adc
sub
mov
inc
cld
mov
sub
cld
xor
xor
adc
pop
dec
mov
push
decl
and
jne
sub
jle
dec
outsl
xchg
push
popa
xchg
xchg
mov
popa
add
cs
xchg
sub
mov
push
addr16
cmpsl
sbb
scas
frstor
xchg
lds
lfs
sub
lret
add
adc
lea
jecxz
adc
pminsw
fisubl
nop
adc
pop
out
sub
mov
sbb
push
ljmp
dec
inc
and
and
add
shrl
inc
adc
repz
call
inc
push
adc
add
pop
adc
push
mull
js
lock
in
rcr
mov
fbld
mov
arpl
fsubrl
in
adc
add
fwait
rclb
add
xchg
xchg
in
dec
call
pop
loope
lea
cmp
dec
lret
sub
mov
lock
mov
sbbb
add
icebp
mov
stos
loope
push
gs
sbb
mov
inc
cmp
inc
scas
enter
inc
test
jno
pusha
pushf
popf
mov
insl
pop
add
in
int3
pop
add
pop
jecxz
mov
cmp
pop
loope
or
or
mov
inc
adc
dec
add
mov
push
adc
sbb
pop
add
repnz
dec
mov
outsl
add
sub
sub
addb
add
push
pop
push
shrb
inc
pusha
imul
pop
mov
xchg
icebp
push
pop
jge
gs
aam
outsb
mov
aas
push
arpl
mov
lret
leave
repnz
ljmp
pop
sbb
sub
or
sbb
add
jne
fdivrs
enter
or
in
cli
push
add
movsb
fcmovu
pop
popa
push
jge
std
sub
cmp
cmp
mov
call
in
hlt
or
mov
ret
or
jb
push
push
mov
loope
decb
push
jp
pop
rorl
push
sarb
xor
rcll
xor
cmp
push
jp
adc
loope
add
add
dec
ret
shrb
cmpsl
push
pop
mov
out
aam
xor
fs
xor
add
popf
call
cmpb
iret
pop
fwait
push
movsl
adc
push
mov
stos
arpl
sbb
and
dec
mov
lea
sbb
pop
xchg
je
xchg
lahf
out
add
dec
cmp
cmp
cmp
xchg
add
and
mov
enter
out
inc
repz
inc
loopne
adc
lods
paddusw
xchg
cli
mov
sub
and
inc
jne
or
lods
iret
call
adc
jnp
rorb
jl
inc
mov
out
out
fs
jp
movsb
push
cmp
cwtl
push
or
xorb
or
fs
hlt
mov
sbb
daa
dec
push
dec
neg
cmc
pop
cmpsl
shll
jno
cmp
push
jge
sahf
fxch
fidivrs
call
add
xchg
sbb
clc
jb
enter
fcomps
ret
int
sbb
xchg
xchg
test
and
mov
arpl
pop
bound
stos
data16
fisubrl
addr16
out
push
mov
mov
mov
or
pop
sbb
int3
in
push
dec
faddl
dec
jo
in
lods
and
cli
shll
push
pop
fwait
sbb
push
xchg
test
adc
cmpl
rorb
jnp
loop
dec
cwtl
dec
in
repnz
std
je
arpl
cmp
add
xchg
fidivrl
adc
std
jnp
jge
out
push
jecxz
sub
lds
addr16
int3
sub
roll
jg
pop
sub
mov
push
pop
mov
ss
or
add
push
mull
shll
pop
xchg
fiadds
pop
lock
adc
iret
shrb
xchg
inc
fcomp
lds
pushf
popa
add
outsl
lret
clc
sahf
dec
ret
or
push
cli
jp
js
je
pushf
mov
fwait
lods
pop
mov
movsl
aaa
pop
mov
jl
xchg
mov
lods
jecxz
dec
js
mov
arpl
or
imul
dec
jg
xchg
push
bnd
pushf
out
stos
and
popa
xor
sbb
sub
stc
sub
push
roll
sub
mov
shlb
jecxz
xchg
loopne
nop
out
jl
mov
add
add
jl
sub
mov
pop
stc
mov
or
outsb
mov
iret
mov
outsb
mov
inc
decb
out
mov
scas
fisubs
iret
xor
cld
dec
mov
mov
ss
sub
jae
call
xlat
out
mov
hlt
inc
xchg
je
mov
int3
push
cmp
xchg
inc
icebp
mov
or
je
xchg
sbb
roll
mov
lret
andb
or
cld
xchg
jnp
mov
out
stos
jb
sbbb
test
mov
adc
popf
lock
mov
clc
pop
mov
pop
mov
inc
mov
je
insb
daa
sub
sbb
xor
lock
aas
mov
mov
mov
inc
gs
xchg
pop
imul
mov
sarb
pop
and
icebp
out
fistl
arpl
jmp
cmp
test
mov
or
cwtl
xor
int3
subl
stc
xchg
je
mov
in
xchg
or
imulb
loope
push
rcr
ljmp
lret
pop
adc
in
pop
loopne
and
pop
mov
leave
dec
cmp
lret
cli
addr16
jnp
lret
test
idivl
fdivs
jo
lods
or
jl
popf
mov
xchg
or
popa
adc
js
popa
and
add
loopne
inc
repz
push
jae
ret
xor
stos
push
cld
sbb
jns
pop
or
push
mov
adc
dec
sub
movsb
pusha
int3
outsl
incl
mov
and
es
or
pop
inc
gs
xor
sbb
cmpsb
hlt
mov
mov
lcall
repz
clc
jbe,pn
xchg
mov
out
or
fdiv
pop
inc
sarb
pop
and
lahf
jnp
nop
mov
jbe
cwtl
leave
mov
daa
nop
aas
jmp
arpl
shr
mov
clc
sub
jge
mov
push
pop
xchg
stos
cmp
xor
or
mov
insl
cs
test
popa
cltd
push
stos
add
enter
popf
push
popa
int
popf
mov
outsb
movsl
xchg
aaa
fdivr
lret
pop
and
cmc
aas
inc
scas
rolb
and
cmp
lret
cmc
in
pushf
fstl
mov
ss
mov
mov
les
popf
mov
out
test
nop
sub
xchg
stos
xlat
sub
cmpsl
xor
jae
cmp
cmp
dec
sarl
jg
mov
in
mov
rcrl
loope
push
aas
xor
mov
mov
fidivrs
or
sti
in
jb
sub
das
stc
icebp
in
push
mov
or
adc
hlt
mov
or
rclb
mov
push
mov
cli
jno
cmpsl
nop
sub
lock
and
les
xor
in
mov
cmpsb
sub
int3
lods
arpl
push
xchg
lret
fisubrl
mov
aas
ret
sub
scas
int
pop
out
lret
jp
popa
pop
ss
push
rcl
sbb
or
xor
jmp
loopne
pop
and
imul
jb
loopne
dec
int
dec
inc
cwtl
and
popa
dec
push
xchg
jp
or
pop
xchg
pop
mov
addr16
imul
in
push
test
movsb
inc
out
sahf
popf
mov
leave
mov
lret
iret
cmc
out
test
imul
pop
lods
out
sub
shlb
rcrb
icebp
mov
adc
inc
fistps
stc
sub
fwait
lahf
mov
icebp
sub
movsl
fbstp
push
xchg
xchg
enter
push
and
mov
in
jno
adc
in
fisttpl
fcoms
and
sbb
leave
int
push
insl
inc
lret
mov
jo
pop
test
and
adc
aam
jp
or
pop
cs
adc
in
scas
cmp
loop
shr
nop
jo
sbb
mov
in
insb
jle
cmp
jnp
out
clc
out
fs
ds
aad
cli
mov
out
mov
xchg
scas
aad
lods
mov
push
ss
inc
lea
hlt
mov
push
and
icebp
push
sahf
dec
push
mov
fadds
lds
xor
xor
jg
in
push
cmc
xchg
scas
mov
out
jl
jbe
sub
pop
nop
dec
aam
xlat
add
aas
jae
ret
cld
mov
mov
cmp
aas
clc
loop
mov
inc
sbb
mov
push
rolb
mov
test
flds
std
sahf
mov
lods
xchg
pop
push
das
push
xor
movsb
sbb
mov
adc
movb
jno
out
loopne
inc
jle
xor
loop
fsubrp
and
jne
push
out
fisubrl
lret
fs
sub
clc
rclb
lods
scas
fcoml
out
cltd
stc
push
or
sbb
loope
push
add
or
pop
stos
jge
fcomps
sub
addb
rolb
hlt
and
cmc
jo
mov
fldcw
imul
loopne
inc
xchg
lahf
mov
pop
sbb
adc
cmp
fwait
xchg
push
inc
fwait
ret
sbb
aad
mov
push
es
rcrl
jbe
out
add
xchg
sub
lds
push
fs
push
cmpsl
sub
subl
xchg
loope
loopne
push
iret
icebp
jmp
cmp
push
inc
sbb
clc
mov
jae
xor
xchg
icebp
jmp
xchg
cs
mov
pop
mov
sbb
sbb
stos
test
mov
inc
loopne
inc
xchg
je
lcall
xor
lahf
in
aam
jl
iret
mov
lods
pop
sub
mov
fwait
mov
in
xorb
lock
je
lret
or
mull
sub
xor
out
mov
outsl
mov
mov
pusha
mov
ljmp
lcall
jmp
fs
lods
fiadds
stos
cs
xlat
mov
mov
movsb
pop
fs
sbb
adc
xchg
out
sbb
adc
aad
pushf
mov
push
js
das
rorb
aad
xchg
xor
stc
stos
or
and
jo
or
xorl
push
jbe
pop
fs
cltd
mov
andb
jl
jg
xchg
dec
cmp
lahf
loop
pop
inc
push
je
xchg
push
adc
shll
mov
lods
loopne
mov
aad
mov
push
cmc
cs
push
imull
data16
push
mov
lock
mov
lea
dec
sbb
sbb
nop
sbb
mov
pushf
mov
and
add
or
divl
adc
mov
inc
mov
jno
lods
repz
mov
or
cmpsl
pushf
stc
pop
pop
jns
ficoml
addb
cwtl
adc
je
fildll
fs
dec
push
cmp
push
in
rcrb
or
jbe
aas
inc
test
sub
insb
leave
xor
inc
iret
cmp
cmp
cmp
ljmp
fstpt
sbb
or
inc
dec
add
outsl
push
cld
js
in
sbb
sbb
adc
jo
cltd
andl
jo
jnp
fmull
cs
test
out
mov
and
push
cmpsb
jmp
jle
int3
dec
jl
mov
mov
push
scas
aad
shrl
push
dec
push
pop
leave
fincstp
push
dec
rcrb
popf
sbb
jp
rcrb
aad
cmp
shlb
mov
and
or
and
dec
jge
cmp
insb
mov
lods
sub
jo
hlt
mov
lods
mov
mov
fnstsw
fstpt
inc
mov
xchg
inc
clc
scas
sub
inc
mov
push
rcl
sub
mov
pop
cmp
sub
cmp
mov
into
jecxz
int3
ret
dec
test
adc
sbb
in
jle
lds
pop
mov
rclb
sub
popa
push
aad
je
pop
lea
push
add
push
dec
lahf
stc
and
call
in
pop
pop
and
jbe
mov
mov
sub
mov
xlat
sti
adc
adc
les
add
and
adc
fsubr
push
mov
xlat
pop
jmp
rcll
lods
xor
into
fcoml
cltd
rorl
pop
adc
xor
cltd
push
jecxz
jbe
push
pushf
xchg
lcall
stos
mov
out
pop
jle
shlb
cld
xchg
jl,pt
add
jns
inc
mov
dec
push
shll
test
jbe
inc
xchg
mov
pop
xchg
jl
inc
mov
idiv
cmp
cmp
sbb
push
rcr
stos
cli
test
xchg
pop
stos
adc
loopnew
cmp
jo
dec
mov
stos
xor
stos
pop
pop
imulb
cmc
repz
mov
dec
cmp
fwait
rcrb
movsb
mov
sub
stc
mov
test
cld
pop
fstps
push
jns
lods
add
adc
test
scas
and
inc
cli
pop
repnz
cmp
mov
jno
or
scas
sub
jae
sbb
gs
movsl
mov
movzbl
repz
rcrl
out
out
insl
lret
inc
mov
clc
adc
fstl
inc
lds
rcrb
dec
pop
or
push
ljmp
adc
mov
outsl
cli
mov
inc
in
jnp
or
mov
mov
jns
cmpsl
pop
xor
mov
adc
push
jno
dec
push
mov
xchg
pop
inc
aaa
add
xlat
adc
jmp
xchg
leave
cmp
or
xor
inc
ja
mov
sbb
or
je
xchg
andl
in
out
xor
xchg
adc
mov
fiadds
in
in
adc
dec
and
dec
jl
imul
jns
cmp
mov
push
cmp
mov
sahf
mov
push
cmpb
mov
or
inc
mov
pop
test
mov
mov
je
xchg
insl
shlb
sti
and
cmpsb
subb
je
pop
bound
inc
arpl
jge
cmp
or
add
clc
test
sbb
cmp
int3
insl
mov
xchg
push
or
out
cmp
push
or
negb
mov
xor
adc
add
dec
popa
subb
inc
fisttpl
dec
arpl
inc
mov
mov
and
out
or
fnstcw
cmp
sbb
jge
inc
xor
pop
add
pop
test
ljmp
roll
xchg
icebp
movsl
clc
cmp
mov
inc
call
inc
and
cmp
cmp
shll
addr16
sahf
jb
cs
and
ret
push
jle
xchg
sti
sarl
add
pop
insl
push
test
push
push
cmp
insb
xor
stos
dec
inc
outsl
jmp
mov
sbb
dec
sarb
mov
push
arpl
xor
jnp
test
call
lret
push
mov
lods
mov
ficoms
ja
sbb
out
leave
xchg
fs
stos
push
inc
xchg
js
jo
jnp
cli
js
int3
movsb
jno
adc
dec
fs
pop
jge
movb
roll
push
mov
in
imul
xchg
xchg
mov
inc
cmp
stos
jbe
scas
cmp
adc
jno
popa
in
stc
push
mov
cli
arpl
or
push
cmpsb
ljmp
mov
mov
sub
mov
jne
repnz
fisubl
add
arpl
cmc
gs
cmc
push
cltd
int
in
or
insl
out
push
mov
nop
sub
pop
nop
xchg
sbb
iret
fisttpl
cmp
inc
scas
fcmovnb
aam
fs
cmpsl
fstp
mov
call
inc
xchg
push
xor
cmp
imul
data16
and
lds
and
rol
push
int3
int3
or
jne
mov
adc
jo
clc
scas
popf
in
adc
jecxz
stos
jns
cs
jg
push
out
cli
inc
movsb
cmp
jp
dec
push
jne
lret
jg
or
jno
sub
add
pop
dec
sbb
mov
dec
mov
lea
xor
in
aaa
out
sbb
fsubrl
dec
mov
xlat
test
shrl
push
icebp
pop
inc
inc
xor
je
mov
jle
pop
filds
cmpb
pop
mov
or
ret
js
or
adc
notb
cmpl
cmpsl
mov
xlat
fstpl
repz
push
sahf
mov
pop
inc
fcmovnb
jbe
jae
and
dec
pop
loopne
dec
repz
fmul
insb
mov
xchg
mov
pop
lret
xor
fisubrs
rolb
mov
out
imul
adc
std
jle
mov
ljmp
mov
ss
mov
jp,pn
jle
mov
out
cwtl
mov
in
inc
xchg
js
xchg
mov
inc
jae
hlt
gs
jmp
mov
xchg
inc
dec
movb
adc
xor
inc
inc
add
mov
xchg
dec
jmp
mov
jno
sub
rorb
loopne
inc
pop
cwtl
sti
jno
jae
out
mov
pop
push
filds
andl
sbb
jae
pop
test
and
and
mov
imul
pop
xor
push
pusha
mov
pop
ljmp
mov
push
subb
mov
es
lahf
aaa
aam
push
fistpl
jmp
lods
pop
fisttpll
call
mov
orl
sahf
popf
jb
fidivrs
pop
inc
leave
sub
ret
jae
pop
std
fwait
imul
cmp
stos
inc
sub
sub
sti
loope
mov
dec
aam
pop
or
sbb
mov
dec
xor
push
add
mov
mov
pop
xor
rclb
dec
cmp
aam
pop
push
adc
scas
ljmp
mov
xor
cmpsl
fdivrl
fsubs
lret
and
cltd
negl
pop
cmc
ja
sub
xchg
push
xlat
call
adc
pop
sub
mov
adc
ret
xor
jo
into
adc
repnz
mov
pop
xchg
add
xchg
xorb
ds
cltd
dec
lcall
jo
adc
push
mov
lea
lods
add
cmp
hlt
push
adc
int
jl
jmp
add
in
std
push
aad
mov
xor
shrl
ljmp
ds
sub
movsb
sti
sbb
xchg
movsl
mov
jns
mov
dec
mov
xchg
jne
cs
mov
and
sarb
cmpsl
add
cs
xchg
push
mov
rclb
test
cmpsb
call
sub
dec
in
out
leave
pop
adc
enter
pop
popf
jmp
sub
daa
sub
into
out
adc
aam
aam
push
jne
je
fdivrs
out
pop
jnp
out
cmpsb
insb
out
sub
cltd
bound
sub
inc
cmp
popf
add
fdivr
sbb
lods
and
or
dec
test
or
adc
pop
or
push
lods
xor
sbb
pop
in
aam
pusha
cmp
in
rclb
xor
lcall
call
ds
jae
push
call
xor
loopne
cmp
cmp
mov
dec
bound
and
orb
fsubs
mov
xor
les
or
lds
mov
pop
in
push
andl
adc
xchg
mov
xchg
cmp
and
mov
add
jl
sub
mov
add
es
scas
xchg
adc
mov
loop
in
cmpsb
add
pop
mov
pop
nop
mov
mov
push
and
lcall
jle
pop
push
pop
jno
mov
je
mov
notb
aaa
leave
cltd
inc
inc
mov
es
fidivl
push
nop
cmp
dec
insl
sub
fmul
jae
sub
shrb
push
pop
xor
xchg
and
cmp
fmuls
push
loop
fsubs
cld
filds
std
xchg
xor
pop
test
or
mov
sbb
ja
cld
ficoml
mov
mov
sahf
push
xchg
mov
inc
push
enter
push
dec
sti
std
mov
repnz
addr16
ds
xor
pop
lock
sbb
add
xor
stos
xchg
repz
pusha
int3
xchg
add
clc
ljmp
push
cmp
pop
and
lds
je
sbb
fists
jl
int
insl
mov
xor
ja
xor
or
gs
mov
mov
sbb
mov
repz
testb
imul
cmp
jecxz
sub
ljmp
in
xor
push
sbb
out
add
adc
nop
cmp
sub
adc
push
clc
popf
clc
and
sbb
jle
ljmp
push
and
loope
repnz
int
sbb
iret
jp
in
mov
and
mov
aam
pop
jle
scas
inc
cmpsl
mov
movsl
mov
sub
cmp
decl
lahf
lahf
add
sbb
dec
aam
lcall
mov
into
jnp
sbb
das
shrl
je
inc
std
add
or
or
cltd
das
pusha
push
pop
enter
test
outsb
call
cmp
int
imul
cltd
out
out
xor
pop
fldenv
cmp
repz
and
mov
xor
inc
xchg
data16
pop
or
mov
sar
insl
inc
and
xchg
push
xor
cli
mov
decl
mov
and
decl
scas
push
daa
daa
xlat
ret
lods
add
adc
fildll
jb
push
sub
jge
data16
insl
leave
or
push
mov
ret
and
mov
pop
repnz
rclb
push
push
cs
lahf
enter
frstor
fs
pushf
orl
int3
iret
xchg
cmp
push
icebp
cmp
or
push
dec
push
imul
lock
sarl
aad
mov
ja,pt
insb
aas
addr16
loop
lret
inc
cld
nop
sti
stos
sbb
popa
jge
jne
mov
test
dec
pushf
xchg
mov
testb
sahf
lds
popa
jne
sbb
cli
mov
mov
ret
xor
dec
shlb
ljmp
dec
rolb
fdivrl
enter
xor
aam
mov
rclb
imul
test
lret
out
jmp
xlat
gs
and
test
lahf
dec
sbb
insb
push
and
nop
flds
into
cmpl
push
mov
les
jno
clc
test
dec
js
mov
mov
xchg
lds
std
sbb
xlat
mov
or
and
cmc
mov
mov
pop
cmp
jns
and
mov
adc
adc
mov
pop
nop
divl
dec
into
push
out
hlt
aam
add
jl
push
sbbb
ret
loop
jbe
xchg
les
pusha
mov
adc
xchg
push
jp
add
lahf
lcall
xchg
mov
dec
mov
pop
divb
movsl
pop
push
icebp
add
inc
sarl
cmp
and
call
dec
addl
mov
loop
aam
inc
lea
js
loope
inc
jnp
jbe
outsb
addr16
nop
add
pop
fnsave
jl
data16
inc
or
xchg
pop
shrb
adc
jp
lret
dec
push
adc
xor
aas
xchg
sub
rcl
push
incb
xor
lock
sub
pop
sarl
call
in
cld
xchg
clc
mov
lods
lahf
es
push
cmp
arpl
call
in
testb
imul
andl
jecxz
outsl
cmp
push
arpl
ljmp
out
dec
aam
and
fs
sbb
adc
cmpsb
scas
jo
lahf
sub
ret
ds
in
leave
push
cmpsl
fs
mov
pop
mov
add
fstl
dec
sub
push
adc
outsl
in
adc
icebp
loope
jmp
sub
out
fcos
mov
adc
push
mov
hlt
xchg
push
mov
stos
push
daa
jl
lea
and
cltd
out
mov
popf
sub
test
push
jns
lods
cwtl
pop
push
ljmp
lcall
mov
aas
push
jecxz
add
push
aam
shll
les
lret
xchg
add
cmp
xchg
and
sub
inc
ljmp
xor
insl
cld
sub
loop
call
push
stos
xchg
sbb
cli
into
stos
dec
fs
pop
out
xchg
inc
test
xor
inc
xor
xchg
push
sub
push
inc
ljmp
adc
pop
push
fst
les
push
inc
lods
push
mov
stos
add
jne,pt
inc
add
js
sbb
sub
or
adc
enter
ret
sbb
loope
xlat
xor
mov
aad
cmpsb
sbb
and
push
sub
clc
test
nop
jmp
jno
xor
mov
ret
push
scas
add
jle
lcall
push
adc
adcb
pop
mov
xlat
inc
sub
mov
movsb
pop
bound
bound
js
inc
loope
test
dec
cmpb
int3
lret
jns
repnz
sub
pop
mov
lods
sbb
lds
lds
pusha
push
xor
stc
jne
shrb
cli
sub
xchg
push
fildl
out
mov
pop
and
out
inc
push
sub
lahf
lcall
lcall
push
ret
jae
inc
scas
fsubr
js
sub
dec
jnp
int3
pop
adc
in
in
xchg
repz
in
bound
lret
cli
into
jge
push
and
cmpl
sbb
mov
add
cs
std
pop
add
jo
push
cwtl
aaa
dec
or
sub
add
in
icebp
pop
je
ss
in
xchg
popf
in
test
or
divl
xor
ds
mov
lock
popf
xchg
shlb
mov
cmpsb
xor
cmp
insl
dec
int
inc
in
mov
mov
sahf
push
cld
lods
jno
lret
pop
mov
sbb
jne
test
out
fildl
cmp
push
pushf
add
cs
mov
jp
lcall
lcall
imul
aas
lcall
mov
call
into
es
fsts
insl
sub
arpl
dec
xchg
inc
shlb
inc
mov
popf
les
fisubl
mov
bnd
pop
leave
lea
dec
mov
flds
mov
mov
aam
ja
movsl
or
mov
jp
hlt
scas
lahf
scas
lahf
test
insb
jns
inc
nop
jecxz
xchg
mov
dec
mov
pop
push
outsb
jp
jmp
loope
mov
or
xchg
orb
xor
in
repnz
lods
ljmp
sbb
in
pop
roll
mov
cmp
sbb
sub
incb
jb
adc
push
shl
fnsave
sbb
sbb
loopne
xchg
pop
mov
jmp
pusha
sbb
xchg
inc
cwtl
leave
fldl
adc
cmp
xchg
jae
stos
mov
clc
bnd
inc
xchg
enter
jo
xchg
fistpl
imul
shll
mov
pop
and
leave
aam
sbbb
shlb
sahf
rorl
jmp
int
push
in
cmp
aas
loop
adc
pop
loopne
je
fwait
scas
repnz
test
sti
ds
pusha
and
mov
adc
cltd
cmp
jle
addr16
xor
aam
negb
lcall
xchg
mov
pop
and
mov
js
and
test
les
cmpsl
inc
xchg
fsts
xlat
or
lea
ds
insb
aas
mov
bound
pop
dec
cmp
fildl
or
scas
nop
stc
cmp
loope
xchg
sbb
aam
dec
pop
out
daa
xor
hlt
stc
call
pop
mov
jo
and
push
int
mov
in
push
mov
ds
or
mull
lods
ror
mov
lret
stos
and
xchg
add
cmp
fnstcw
pop
dec
popf
ss
push
fistl
cmpsl
and
sub
and
fdiv
mov
cs
pop
data16
das
mov
or
dec
fs
ret
mov
in
es
inc
int
test
or
add
or
mov
outsl
int3
dec
or
fs
ljmp
mov
scas
nop
out
fdivrl
sub
pop
sets
sub
jle
sub
and
or
in
ja
push
or
outsl
xchg
xor
xorb
rol
popw
test
lret
and
adc
cmpsl
xorl
orb
lods
aaa
not
shll
push
mov
roll
xor
pop
cmpsl
jo
xor
mov
mov
out
ret
xchg
lcall
dec
xchg
pop
mov
adc
xchg
nop
inc
mov
lods
xor
shlb
dec
jb
loop
fdivrl
cmp
js
pop
mov
ret
shlb
add
mov
pop
push
jle
mov
movsb
int
push
push
movsl
pop
aas
sti
adc
imul
xor
sti
sub
and
sbb
push
cwtl
inc
fucomp
lcall
inc
mov
or
and
add
push
xchg
in
pop
and
dec
mov
xor
or
pop
inc
into
lock
pop
push
pop
notb
iret
jbe
and
or
push
cmpsl
in
movsb
loopne
jb
pusha
mov
sbb
or
loopne
test
gs
les
cmc
or
aad
jo
clc
nop
test
cltd
push
lcall
imul
sub
inc
int3
mov
stos
imul
pop
inc
jl
mov
adc
fcomi
and
fsubl
adc
jg
notl
xchg
int
or
add
jl
xor
das
mov
cmp
cmp
es
add
scas
push
out
push
das
sbb
test
repnz
in
imul
pushf
push
mov
movsb
adc
inc
adc
out
insl
and
daa
cltd
lea
mov
pop
push
cld
mov
loope
inc
jne
push
inc
bound
dec
orb
inc
mov
arpl
and
movsl
int3
mov
mov
inc
and
push
les
lea
adc
les
lods
push
scas
fistpll
push
mov
loope
mov
push
dec
and
push
and
add
fs
iret
pop
bound
shlb
icebp
cld
insb
or
cwtl
lret
les
sub
movsl
jo
xlat
or
pusha
dec
mov
mov
xchg
dec
sub
notl
aad
cmp
jno
sahf
js
mov
adc
sub
push
pop
out
and
rcrb
js
xor
stos
fisubl
enter
and
mov
push
push
cmp
mov
dec
mov
xchg
or
fidivl
cmc
inc
dec
and
dec
jbe
mov
outsb
fidivrl
xchg
cwtl
push
daa
ja
cmp
inc
incl
push
cmc
cmp
push
insl
inc
cmp
mov
pop
loope
sub
xchg
test
xchg
cmp
xlat
adc
dec
lret
xchg
ret
ret
sub
rorb
inc
imul
push
loope
lahf
jae
pop
std
loop
lcall
out
lcall
fsubrp
jge
icebp
adc
loop
clc
test
push
test
lahf
and
pop
pop
cld
cmp
cli
pushf
cmp
es
jno
dec
or
jecxz
popa
sub
sub
push
outsl
push
sub
mov
push
shrb
repnz
cmp
dec
sbb
jecxz
inc
adc
cmc
int3
pop
add
aad
add
pusha
fisubs
orl
popa
aam
add
test
or
vaddsubps
jns
sub
test
xchg
pop
jg
popf
sahf
xchg
inc
cmpsb
xchg
iret
inc
bound
xchg
adc
mov
pop
mov
inc
or
movsl
out
inc
lcall
cmp
mov
addl
or
inc
push
jmp
popf
mov
or
lods
sbb
add
js
aaa
das
lret
cmp
jl
fcmove
fcom
rclb
and
pop
into
psllq
ret
sbb
add
mov
cmpsb
push
xor
cmp
xlat
divb
jae
popa
pop
push
xor
pop
in
fcomps
cmp
jno
scas
jno
mov
test
push
leave
mov
mov
cmpsl
dec
and
shl
stc
nop
dec
enter
call
fimuls
push
xor
or
repnz
lret
ja
push
loopne
lret
pop
cs
fdiv
push
mov
and
push
dec
testb
es
filds
imul
sbb
jnp
loop
pop
clc
push
aad
pushf
xorl
ret
jg
jl
push
insb
iret
dec
ljmp
rorb
in
sbbl
mov
mov
shlb
xchg
cld
adc
aaa
mov
dec
rcrb
or
test
mov
xchg
pop
inc
sub
push
push
ss
mov
cld
cmp
mov
addb
mov
andb
push
add
insl
jbe
and
jp
ret
cmp
ja
xchg
iret
pop
inc
out
andb
hlt
adc
mov
sub
les
loopne
je
jns
xor
push
mov
fdiv
movsl
in
in
decl
mov
js
ficomps
inc
xor
xor
stos
into
sub
mov
lret
pop
xor
xlat
jo
xchg
mov
cs
push
movsl
mov
and
and
mov
lds
sbb
pusha
lahf
xor
mov
xchg
mov
mov
mov
leave
mov
cltd
adc
aas
and
jno
es
sbb
xor
or
mov
in
jmp
xchg
frstor
add
mov
les
cmp
popf
test
flds
or
sbb
add
add
xchg
fisttpl
push
lret
test
inc
mov
out
fwait
test
out
popf
mov
mov
std
pop
in
ja
fmul
adc
mov
sbb
lcall
and
push
add
cmp
sub
js
ret
test
xchg
dec
rorb
out
xchg
out
pmuludq
sub
mov
mov
mov
shll
xchg
or
in
pop
add
mov
mov
inc
jmp
int
or
jg
or
aad
scas
js
stos
jns
jnp
pushf
mov
mov
mov
out
xchg
ljmp
repz
outsl
cmp
pop
mov
scas
sahf
call
mov
xor
jl
shlb
jle
mov
and
out
cmp
add
xor
test
jno
loope
sbb
sbb
aad
pop
inc
in
xchg
lahf
aaa
call
popf
movsb
cs
or
ja
icebp
xor
in
stos
loop
jmp
sahf
mov
test
jmp
movsl
pop
adcl
and
xor
dec
into
clc
mov
sub
stc
std
cmp
cmp
daa
xchg
mov
mov
sub
rcrb
xor
push
push
jg
jno
xchg
sub
add
pop
push
inc
mov
adc
sbb
push
movsl
mov
inc
popa
xchg
mov
std
pusha
inc
sbb
jecxz
outsb
push
or
mov
mov
push
lret
ss
inc
jmp
sbb
mov
dec
and
xor
std
adc
inc
and
and
sbb
jle
in
push
dec
call
clc
scas
adc
ror
daa
push
push
jecxz
mov
pop
jg
stc
daa
ret
inc
frstor
xchg
inc
cltd
negl
jbe
pop
jns
add
outsb
shlb
pop
mov
lret
imul
jmp
pop
push
xlat
lods
and
insb
aas
sbb
xchg
cmp
fdivrs
enter
dec
arpl
daa
mov
out
adc
fs
lcall
jl
andb
rcrb
enter
enter
mov
ret
stc
int3
sub
lods
pop
sbb
cltd
pusha
in
sub
add
mov
outsl
mov
xchg
jno
dec
bound
pop
mov
or
mov
mov
xor
in
add
sub
xchg
aaa
push
shll
inc
es
pop
ljmp
filds
dec
pop
add
xorb
adc
cmc
add
or
push
pop
xor
sbb
mov
iret
setle
mov
out
dec
sub
pop
jbe
and
jbe
sub
rclb
sbb
push
jmp
push
push
pop
mov
inc
faddl
mov
xor
pushf
fs
xchg
pop
inc
ss
test
dec
rep
in
pop
loop
fdivs
es
rcll
call
int3
popa
xchg
in
xchg
jno
imul
decl
roll
pushl
cmpsb
add
subl
and
je
sbb
mov
outsb
and
lret
popa
rcrl
test
lods
movsb
and
mov
push
cmc
adc
pop
outsb
sbb
jae
xor
cmp
pop
lds
ja
cltd
sbb
int3
xchg
xor
fnstsw
addr16
inc
int3
adc
push
mov
sbb
fldcw
or
xor
out
out
cmp
fidivs
inc
sbb
int
dec
push
xor
enter
je
jb
out
out
inc
lock
aam
sahf
mov
sub
push
pop
mov
lret
lahf
test
jo
jg
jae
imul
fisubs
mov
or
pushf
dec
and
fidivrl
fisubrs
rcl
pop
push
rcrb
push
sbb
dec
fisttpl
mov
insl
mov
out
popa
cmp
or
mov
imull
fldenv
nop
cs
insl
inc
xchg
outsb
shl
pop
cmpb
cmpb
mov
lods
push
xchg
inc
push
sbb
add
and
xrelease
in
mov
cmpsb
sbb
jbe
mov
test
cmp
lods
subl
inc
inc
dec
dec
sub
imulb
pop
out
out
or
adc
jbe
sbb
lea
fdivl
or
add
adc
shll
push
mov
xchg
clc
jae
out
push
sbb
data16
lock
xor
testb
nop
insb
shll
dec
push
divb
cmp
and
dec
pushf
adc
mov
flds
xor
jo
movsb
dec
iret
in
ret
and
pop
cld
iret
mov
mov
jmp
sti
fcoms
push
fprem1
into
sbb
xchg
sbbl
xor
adc
push
sbb
pop
or
jg
into
jnp
testl
ret
cmp
ss
jno
hlt
mov
and
jne
dec
cmp
scas
imul
inc
jmp
lods
mov
roll
bound
xchg
cmp
mov
inc
addr16
daa
sbb
jge
and
push
lret
es
push
and
cwtl
sub
insl
into
jno
dec
push
in
pop
movsb
aaa
mov
rorl
sbb
clc
pop
out
push
sub
enter
push
ss
iret
in
popa
inc
bound
sub
adc
pop
sbbb
mov
loop
dec
filds
lea
jmp
inc
daa
sub
sahf
dec
ja
test
daa
cmp
repz
out
arpl
sti
outsl
hlt
dec
repz
cwtl
and
xchg
int3
pop
push
int
push
adc
mov
cmpsl
in
in
cmp
pop
or
lock
cld
ret
mov
sahf
mov
adc
mov
jns
test
enter
fwait
fwait
mov
test
sbb
lcall
pop
aam
jo
addr16
push
jmp
sub
mov
cmp
push
and
scas
test
push
ret
push
lds
lods
leave
inc
adc
push
adc
sbb
out
xor
pop
xchg
mov
or
sbb
push
push
icebp
and
adc
stos
cmp
sarl
fiadds
stos
push
pushf
xlat
mov
xor
js
arpl
xchg
push
dec
cmc
jecxz
movsl
mov
ss
push
insl
or
imul
lahf
enter
mov
mov
ss
cmp
popf
xor
mov
push
loopne
lods
rcl
fsubl
movsb
stos
int3
sbb
fnstcw
ljmp
push
or
sbb
ja
std
add
cmpsb
sub
adc
jle
pop
pop
daa
mov
scas
imul
iret
push
jge
daa
sub
insb
lcall
mov
cmp
pop
push
loope
inc
je
push
mov
mov
xchg
outsb
sbb
repnz
sub
cmpsl
mov
pop
add
sub
aas
push
lock
fdivrs
dec
jb
mov
fisubl
int3
push
push
aas
test
out
in
loop
add
fst
push
imul
xor
stc
inc
ret
jg
mov
jle
and
push
loopne
jo
std
dec
jp
ja
jmp
xchg
lods
out
mov
and
adc
push
and
pop
ficomps
lcall
xor
xor
cmc
mov
imul
shrb
pop
jmp
sahf
cmpsb
daa
pop
push
sub
not
cmp
pop
cli
or
xor
xor
cld
ret
pop
dec
adc
fadd
pop
pop
mov
incl
rcrb
test
adc
jno
inc
xor
mov
pop
nop
dec
test
add
cmp
cmpsl
push
cmp
mov
lds
popa
add
aas
cmc
adc
sbb
mov
fsubrl
ficoml
dec
push
rcrl
test
in
call
xchg
adc
pop
jecxz
mov
lock
add
xchg
dec
push
xor
jne
mov
inc
aaa
into
push
mov
jecxz
xchg
adc
jns
dec
jle
pusha
sub
cmpsl
inc
and
mov
dec
xchg
dec
sbb
mov
lahf
movsl
loopne
mov
cmp
cmpb
mov
push
push
roll
jmp
jmp
stc
aad
inc
sti
mov
push
shr
jns
push
lcall
fcompl
addr16
decl
das
leave
data16
cmpl
sbb
imul
sub
lcall
notl
enter
pop
pop
cmc
push
lods
jb
decb
jno
cwtl
jo
loope
mov
xor
data16
daa
fsubrl
cmpb
adcl
lcall
inc
rorb
js
in
xor
sbbb
lahf
in
sub
loop
in
rorl
adc
push
js
out
bound
inc
daa
xchg
sti
mov
fdivrl
gs
fisttpll
xor
dec
xor
dec
test
sbb
sbb
push
sub
test
shlb
adc
scas
jne
insl
in
or
lret
outsl
in
ret
sbb
aam
adc
adc
sub
out
stc
fwait
push
out
testl
into
sti
mov
cmc
je
mov
cmp
sti
imul
out
popf
gs
pusha
push
xchg
push
ljmp
mov
insl
insl
jo
mov
out
sbb
imul
xchg
iret
xchg
cli
pop
dec
rsm
pop
int3
adc
movsl
dec
jae
std
or
js
lret
push
ficompl
inc
pop
or
out
add
mov
jecxz
enter
pop
pop
xchg
out
lret
cli
adc
nop
loop
loop
push
sbbl
sub
lahf
or
push
cmpsl
jge
fmul
push
and
push
lock
mov
or
jle
push
push
movsb
sub
test
mov
movsb
xlat
movsl
pop
xchg
in
sarl
dec
xchg
sbb
and
imul
ret
cmp
pop
call
cs
into
mov
jle
inc
cli
inc
and
in
pop
sbb
sub
mov
rcl
std
cmp
stos
addr16
jbe
dec
negl
sbb
das
pop
inc
cli
xchg
push
lea
fwait
jle
gs
jmp
popf
in
enter
nop
insb
adc
pop
push
pop
mov
and
mov
aaa
data16
dec
mov
ja
push
cmpsb
js
mov
xchg
ljmp
sbb
or
inc
xchg
jle
add
je
lret
iret
out
xor
sub
push
clc
fs
push
or
sbb
cld
sub
dec
cwtl
cmp
mov
dec
push
mov
dec
clc
imul
inc
hlt
js
outsb
push
popf
imul
scas
sub
test
int
dec
scas
push
xchg
jp
ret
cmpsl
mov
mov
inc
inc
mov
sub
sub
sbb
cmp
int
mov
ds
test
into
outsl
iret
arpl
ja
add
leave
sub
or
dec
gs
adc
test
aas
cmp
popa
pop
test
testb
shll
mov
stos
mov
outsb
sub
in
mov
in
sub
mov
pop
jge
mov
lods
pop
push
inc
push
mov
addr16
xor
ss
sub
dec
fsubs
inc
mov
adcb
mov
and
and
mov
jno
int
xchg
sbb
pop
in
gs
in
push
jmp
shl
xchg
mov
sarb
xor
scas
pop
rclb
or
mov
je
loope
sub
mov
jmp
mov
adc
imul
cli
dec
inc
jmp
cmp
pop
stos
rclb
push
aad
xor
loop
test
cmp
sbb
adc
fucomi
push
call
jne
push
and
cmpsb
xor
and
inc
rcll
andl
test
std
jnp
or
pop
dec
and
aaa
mov
test
jne
inc
mov
call
lret
mov
dec
xor
mov
inc
push
and
decb
sti
mov
ljmp
ja
movsl
bound
adc
rol
out
xor
jmp
xchg
or
not
cmc
xorb
arpl
in
in
or
loope
ljmp
jb
push
andl
dec
and
push
jge
dec
push
mov
push
or
xor
pusha
push
int3
dec
cs
out
sbb
mov
dec
out
mov
ret
jbe
out
sbb
aaa
movsb
sub
adc
add
cmpsl
xchg
scas
inc
loop
xchg
cli
cld
adc
sbb
jp
div
clc
movsb
ficoml
fdivp
popa
sbb
enter
aam
cmp
jmp
mov
ds
adcb
or
push
mov
xchg
int3
repnz
bound
cmp
mov
xchg
mov
stos
mov
repnz
pop
in
push
sub
xor
int3
add
xor
inc
mov
pop
addr16
stc
cmp
push
jge
repz
mov
dec
dec
add
xchg
adcb
cmp
mov
jmp
fs
mov
mov
mov
pop
push
pusha
xchg
outsl
cmpsl
xchg
notb
insb
cwtl
int
dec
stos
nop
lock
sbb
mov
bound
out
loopne
aad
test
std
ss
call
push
inc
lods
sub
sti
sbb
add
mov
mov
mov
push
out
lock
lret
aaa
jge
push
loope
fidivl
xchg
insb
cltd
mov
push
js
mov
push
in
call
inc
xchg
dec
adc
mov
stos
popa
jge
push
xor
lahf
xor
divb
lods
mov
sub
push
lret
xchg
lret
ror
jae
xchg
jb
sti
sbb
aam
lret
lods
push
sub
xor
mov
aas
out
fiadds
jp
cs
xlat
sub
ret
mov
mov
and
mov
push
insl
xchg
push
ds
sbb
inc
xchg
lds
xchg
in
sub
sub
jo
inc
pop
hlt
add
push
aaa
cmp
push
lods
clc
mov
cwtl
ljmp
sbb
and
cmp
jb
adc
lret
cmp
pop
xchg
rcll
mov
pop
cmp
inc
cmc
hlt
icebp
sbb
fdivrl
dec
xlat
in
mov
xchg
addr16
cwtl
mov
mov
mov
test
and
adc
push
push
inc
sahf
scas
icebp
sbb
mov
pusha
fldenv
jnp
sub
test
scas
dec
rolb
aad
shl
dec
xor
and
add
sub
fcom
into
fmuls
lds
popa
hlt
fstpt
xor
aas
add
incb
loop
push
idivb
sub
sub
or
pop
ret
je
jno
jns
push
scas
pop
jb
adc
mov
jns
cmp
jne
mov
inc
hlt
mov
out
fs
mov
movsl
mov
pop
lcall
outsb
lret
pusha
cmp
addr16
mov
icebp
mov
sbb
cmp
jl
pop
test
mov
aaa
jmp
xor
lahf
xchg
mov
dec
mov
lock
sub
stc
jb
push
or
aaa
mov
inc
dec
stos
mov
fs
pop
leave
ret
shl
pop
inc
pop
adc
mov
dec
and
lock
xor
in
or
aas
aad
add
jnp
cmp
cs
loop
pop
int3
push
enter
jle
xor
sub
imull
pusha
adc
ds
xor
outsb
clc
push
fistpl
mov
pop
mov
bound
fs
push
jo
call
rcrl
pop
vpackssdw
nop
scas
jg
leave
jmp
push
repz
adc
out
cmpsb
pop
lds
add
sbb
ljmp
adc
mov
sub
sti
adc
pop
cmpsl
add
sbb
adc
mov
pop
xchg
out
or
dec
push
xlat
push
push
sub
xor
orl
mov
ds
data16
sub
sbb
nop
mov
addr16
mov
bound
imul
movsl
iret
pop
out
mov
std
hlt
orl
hlt
jge
pmuludq
ds
bound
adc
jo
dec
add
lcall
pop
pop
mov
lds
pop
fstps
mov
and
iret
repnz
js
sbb
cmp
cmp
scas
fwait
nop
jg
xchg
cmpsb
jne
xchg
push
mov
jecxz
mov
aaa
jb
outsl
dec
xchg
add
sub
bound
cmpsb
aaa
or
out
outsb
andl
dec
push
jne
push
cld
out
sbb
popf
mov
mov
xor
xor
mov
and
std
mov
js
in
sub
out
mov
inc
movsb
rcr
aaa
mov
and
adc
in
mov
add
add
mov
push
outsb
imul
mov
lea
inc
pop
leave
push
xchg
insl
jbe
aam
inc
lods
add
subb
add
push
push
mov
fisttpl
fs
fbstp
nop
pusha
rorl
add
push
inc
lcall
insb
jmp
rorl
loopne
icebp
shl
xchg
push
sub
hlt
out
jno
hlt
jge
into
mov
jbe
scas
icebp
pop
pushf
or
popa
inc
jne
sub
mov
data16
sbb
imul
rol
sub
sbb
push
jns
fs
shlb
pop
add
sahf
mulb
cld
pop
movsb
in
enter
ljmp
xchg
pop
cmp
add
cmp
repnz
popl
push
cmp
and
xor
lea
shl
sub
dec
sarb
jecxz
or
addr16
or
mov
in
sbbl
fucomip
jne
jg
push
lea
lret
lcall
inc
cltd
jo
inc
xchg
inc
cld
jle
push
cld
push
movsl
std
add
jle
cmp
je
cmp
inc
mov
inc
and
jnp
dec
mov
jo
adc
test
adc
jecxz
mov
jg
jge
mov
clc
mov
adc
push
inc
fs
mov
hlt
shrb
aas
flds
add
cmpb
je
mov
xchg
jns
in
lahf
lods
lret
push
aad
dec
mov
push
jge
in
hlt
pop
xor
das
cmp
pop
jno
in
arpl
jae
adc
lret
fwait
out
xor
lea
orl
in
mov
rol
inc
xor
dec
ja
mov
ret
testl
sub
cltd
dec
mov
outsb
int3
add
jo
je
ja
jp
xchg
xor
bound
sub
popw
and
xchg
fwait
dec
jbe
mov
mov
nop
adc
test
dec
xchg
xchg
xor
std
inc
and
push
clc
in
or
daa
lcall
bound
gs
add
sbb
mov
ds
xor
std
mov
idiv
add
pop
daa
jbe
aam
add
mov
sbb
int3
bound
sub
and
dec
enter
sarb
cmpsb
pop
scas
pop
hlt
fiadds
es
dec
fists
cmp
cmp
insb
in
or
push
add
cmp
inc
js
sub
ja
sub
scas
cltd
pslld
cwtl
fdivl
repz
stc
enter
aaa
or
fidivl
cli
mov
mov
jge
mov
xlat
imul
divl
gs
push
xor
pop
stos
mov
xchg
xchg
mov
js
inc
push
fwait
xor
mov
jecxz
pusha
push
divb
aas
inc
push
cld
jae
repnz
stos
out
les
sbb
adc
xor
enter
fnstcw
int
sub
push
clc
lahf
jne
add
rclb
test
repz
loope
pop
cmp
xchg
ret
jno
jge
mov
mov
mov
push
push
insl
cmpsb
mov
push
ja
pushf
xorl
xchg
mov
jle
insb
gs
mov
pushl
js
shrl
es
xor
sub
sarl
test
aam
xor
sub
cmp
mov
lret
push
popa
int3
insl
add
lock
jnp
insb
xchg
sti
push
mov
cmp
enter
ret
es
jae
cmp
mov
inc
fisubrl
dec
not
or
lods
insb
scas
mov
dec
int
nop
fcompl
insl
aas
mov
push
inc
xchg
inc
jbe
cmp
add
imul
daa
or
or
add
sbb
fcomp
cmp
les
aam
xchg
add
enter
mov
icebp
or
outsl
cli
cmpb
enter
movsb
int
bound
pushf
sub
jns
and
mov
mov
mov
jl
mov
sbb
andl
and
out
jbe
dec
ja
pop
inc
sub
mov
jo
cs
sbb
cmpsl
sub
icebp
faddp
push
and
in
mov
mov
sbb
jmp
adc
sarb
xchg
bound
clc
and
push
cmp
add
in
dec
lret
add
lock
aaa
xchg
mov
mov
jmp
inc
sub
jne
into
lret
push
lahf
jb
push
jae
mov
pushf
cmp
xchg
push
gs
scas
push
and
movsb
jo
push
sub
and
xor
jmp
or
push
bound
sar
sar
lahf
add
sti
sub
dec
pusha
stos
sub
or
adc
adc
push
insl
lret
cmp
jl
xchg
xchg
cld
or
inc
and
and
pop
xchg
cmp
and
pop
cmp
mov
inc
lods
pusha
cld
sbb
pop
jo
mov
fstp
push
mov
dec
sub
mov
xor
cmp
xchg
ja
test
cmp
cli
lock
adc
dec
les
xchg
mov
sub
or
ljmp
jns
aaa
xchg
aam
jns
fisubrs
inc
or
test
push
xchg
xchg
sbb
popa
mov
lea
subb
mov
pop
dec
pop
lcall
iret
faddl
mov
scas
arpl
imul
filds
dec
mov
fistpl
mov
or
add
out
push
stc
rorb
or
lds
pop
and
iret
xlat
in
fs
mov
or
cmp
mov
movsb
sbb
mov
push
sub
mov
lahf
inc
sti
mov
add
mov
in
pusha
mov
dec
jb
jecxz
adc
lahf
mov
xor
sti
ret
xor
jae
daa
sub
jnp
aaa
cmp
nop
or
lcall
and
mov
pop
into
mov
pop
cld
mov
movsb
jmp
mov
add
jg
cs
in
pop
mov
xor
mov
sub
pop
mov
xlat
test
xchg
std
repnz
into
pop
mov
fbstp
jno
sbb
mov
subb
push
stc
and
out
and
sbb
push
lret
push
call
sbb
push
in
sbb
dec
mov
cld
jb
or
pop
testb
jno
cli
cs
adc
jbe
add
int
dec
cmp
xor
mov
leave
outsl
xor
loopne
xchg
gs
jp
mov
add
adc
aam
divb
cmp
data16
xor
dec
daa
adc
pop
lods
jl
cmp
icebp
cmp
push
cmpsb
cmp
addr16
js
dec
xchg
inc
fiaddl
mov
aas
pushf
pop
fidivrl
xchg
push
je
xchg
int3
pusha
nop
sbb
pushf
fs
mov
xchg
inc
clc
push
mov
in
mov
xchg
roll
sbb
insb
sub
bound
fnstsw
inc
inc
scas
push
lcall
mov
loope
mov
pop
inc
test
scas
movb
out
rolb
add
faddl
jg
test
dec
popa
push
scas
cli
popa
gs
sub
pop
into
pop
aam
xchg
adc
and
sti
clc
inc
dec
lds
out
pop
movsb
dec
imull
push
pushf
jle
pop
jmp
push
xchg
fwait
jb
inc
xlat
jle
sub
mov
or
fsubrp
push
sbb
inc
sahf
lret
lahf
mov
adc
sbb
dec
cmc
mov
xchg
mov
adc
shll
push
and
push
stos
into
and
inc
jge
and
adc
int3
mov
mov
xchg
flds
orb
dec
inc
cld
xchg
fbstp
pop
dec
jb
jbe
or
test
and
insb
sahf
cmp
out
loope
lods
add
aad
pop
sbb
push
xor
adc
mov
daa
inc
addb
cmp
ja
xor
mov
nop
cmp
rorl
mov
mov
fstpt
loope
mov
pop
jb
mov
pop
mov
and
mov
push
rorl
or
mov
lea
push
sub
mov
into
imul
push
cmp
movsl
mov
int
or
enter
and
and
nop
cli
push
jns
call
lods
ds
or
iret
pop
sbb
out
es
mov
xchg
dec
cmp
cmc
adc
stc
aas
cmp
or
movsb
fildll
or
push
add
ss
imul
pop
leave
and
pop
cltd
mov
push
push
jns
shlb
dec
in
mov
or
sti
inc
lcall
jno
mov
shrl
stos
into
and
inc
adc
sub
push
sub
lret
or
mov
inc
add
aad
xchg
les
hlt
pop
add
xchg
and
rcll
sbb
push
xchg
and
sti
xlat
cmc
push
sti
dec
les
movsl
pop
dec
aaa
stos
dec
xchg
roll
mov
in
cwtl
mov
rcl
or
pusha
mov
push
insb
mov
pop
xchg
inc
xor
outsl
fdivrl
mov
sub
sbb
xor
cmp
leave
lds
push
out
push
jnp
arpl
popf
in
movsb
mov
push
mov
sbb
or
mov
in
test
fcoml
movsb
inc
jge
ffreep
mov
aad
inc
mov
pop
je
push
adc
daa
xor
test
jl
insl
stos
scas
fwait
repnz
ss
loop,pt
push
imul
mov
hlt
sub
fldenv
dec
push
call
adc
jo
sub
js
imul
or
aaa
repz
imul
xor
fs
hlt
je
shll
ret
insl
arpl
leave
test
push
mov
pop
sbb
jle
jg
jne
dec
sbb
ficompl
out
hlt
mov
mov
popf
jo
mov
sub
aaa
xchg
sbb
imul
add
sub
pop
data16
clc
cmp
cli
shrl
xchg
cmpsl
jle
xchg
lahf
icebp
test
lods
push
js
fs
js
sbb
jo
movsb
in
and
push
outsl
jae
xchg
dec
and
mov
mov
sbb
divb
mov
cmp
jl
mov
bound
push
ficomps
xchg
add
push
mov
or
dec
cmp
daa
or
fstpt
fxch
mov
xor
and
add
push
fs
orl
sbb
xchg
xchg
add
dec
add
jp
xchg
push
rcrb
mov
mov
test
test
aad
insb
call
lahf
pushf
ja
cmp
sahf
mov
and
jo
in
xchg
pop
push
aaa
test
rol
cld
or
clc
orb
mov
mov
ss
adc
popf
mov
or
repnz
xchg
add
or
mov
push
xchg
clc
pop
push
inc
xchg
xchg
xor
movsb
fcoms
mov
inc
jnp
aas
and
int3
stc
insb
test
test
mov
push
in
popa
inc
arpl
mov
mov
lahf
push
test
fistpl
call
mov
lret
mov
mov
aaa
adc
iret
adc
cmp
sbb
push
bnd
cltd
mov
pop
pop
dec
push
mov
sub
cli
or
add
iret
scas
mov
mov
inc
pop
mov
dec
xor
cwtl
sbb
inc
adc
xchg
jb
movsl
scas
and
rorl
pop
fldcw
pop
cld
in
dec
nop
lods
xor
fdiv
jno
or
lods
add
dec
imul
in
shlb
xlat
sub
adc
jmp
insl
sarb
and
xor
inc
xchg
out
fisttps
add
test
cmpl
lock
jge
data16
cwtl
lret
dec
xorl
or
sar
repz
in
xchg
sarb
inc
lods
and
neg
push
mov
jecxz
sub
imul
testl
or
inc
adc
or
xchg
adc
cmp
and
push
push
lods
xor
fscale
xor
fnstenv
mov
leave
inc
jmp
mov
jp
push
ljmp
sub
xchg
popa
stos
dec
icebp
push
and
sahf
inc
out
pushf
xchg
xor
hlt
xchg
and
dec
sbb
xchg
loop
pushf
movsb
mov
push
cmpsl
mov
not
mov
mov
cmp
in
ja
lods
lods
seta
orl
jl
in
mov
out
xor
lret
xor
jb
push
ljmp
orb
aas
jnp
lcall
fdiv
cmp
imul
jle
jle
or
or
mov
mov
es
pop
sbb
cmp
lods
negl
ficompl
inc
sti
jo
adc
sub
dec
mov
movsl
xor
cmp
mov
sub
mov
push
int
xchg
mov
repz
push
sub
into
jl
or
out
and
repz
add
push
ficoms
mov
dec
xchg
stos
loopne
push
fs
sub
mov
push
pop
dec
pop
js
cli
ja
pusha
notb
mov
loope
stc
xchg
arpl
mov
pop
mov
clc
xchg
div
jp
cmpl
ds
cld
iret
ret
sbb
in
jmp
pop
int3
popf
in
je
and
sbb
sbb
sub
push
in
xor
mov
dec
enter
inc
push
test
mov
mov
pop
jb
lds
pusha
lods
dec
test
push
out
out
jo
or
xchg
cmpsb
inc
sarb
xchg
pop
js
inc
test
mov
sub
test
testb
and
out
sub
sarb
cmp
das
sub
sbb
mov
cmc
aad
push
sbb
mov
add
adc
xor
mov
test
mov
jns
lcall
icebp
inc
inc
mov
loopne
push
ja
outsl
in
nop
lods
jmp
push
mov
pushf
gs
pop
push
push
stos
push
push
cmp
addr16
imul
jl
jns
ffree
mov
xchg
mov
loopne
jmp
jp
enter
cmpsb
out
pop
rclb
sbb
out
mov
out
movsl
dec
fcos
add
cmp
xorb
rcl
xorb
cmp
jge
gs
lret
cmp
lret
addb
xor
arpl
adc
mov
test
xchg
mov
sbb
inc
lods
add
inc
mov
sbb
push
mov
imul
nop
push
pusha
mov
ret
cli
xchg
test
cs
lret
cmp
xor
stos
adc
cmp
pushf
aaa
pop
pusha
mov
jg
sahf
mov
mov
inc
xchg
inc
mov
enter
pop
fisubrs
and
push
out
inc
or
rcrl
jle
fcmovnu
jp
and
inc
push
mov
and
xor
pop
lret
xor
rorl
jo
push
lret
and
cmp
inc
xlat
hlt
xchg
sbb
js
popl
jle
inc
insb
incw
sub
or
aad
addb
nop
or
ja
addb
mov
popf
aaa
inc
loop
push
ljmp
imul
rcll
push
in
nop
jg
sarl
mov
in
mov
je
insl
clc
dec
aam
subb
into
pop
fidivl
sub
inc
mov
mov
adcl
inc
movsl
pop
ret
cmp
clc
test
outsb
sarl
ds
or
push
cmpsb
pop
aas
sbb
stos
pop
sbbl
movsb
xor
cmp
and
add
repz
sbb
loop
call
add
out
scas
sbb
xchg
add
push
fsubl
inc
enter
xorb
push
pop
mov
das
mov
sbb
or
mov
dec
enter
lods
movsb
push
in
out
mov
insl
xlat
sub
sub
pushf
test
jno
pusha
stos
outsl
xchg
add
mov
jle
xor
sbb
sbb
jo
imul
xchg
xchg
shlb
pop
xchg
add
push
rep
std
push
sarb
andl
fidivrs
sarb
cmc
pushw
jo
jb
sbb
fdivl
inc
mov
stc
pop
mov
mov
mov
imul
pop
out
push
mov
push
pop
orl
jb
jb
mov
jmp
jge
add
add
pop
std
push
out
and
add
push
pop
mov
adc
add
dec
mov
scas
in
lds
adcb
xchg
aam
sub
xchg
mov
dec
movb
imul
ret
xor
outsl
nop
push
xchg
pop
lock
jb
dec
icebp
push
fsubl
mov
jecxz
adc
mov
outsb
mov
push
inc
adc
or
cmpsl
popa
add
mov
and
mov
xor
and
xor
imul
jp
roll
xorl
frstor
cmp
insl
xorb
movsb
pop
loopne
cmpsb
inc
fisttps
pop
xchg
aas
stos
inc
shr
int
mov
cmpsb
push
mov
mov
cmpsl
ficoms
and
in
icebp
loopne
xorb
cli
jae
pushf
clc
je
negb
and
cmpsl
inc
xchg
and
jae
and
xchg
mov
out
add
loope
mov
fcompl
gs
idivl
sahf
cltd
das
call
pop
les
ds
fs
lret
or
leave
push
shll
pop
out
cmp
or
lret
aas
test
arpl
mov
dec
test
inc
movsl
hlt
xchg
insb
dec
arpl
aam
cmp
cs
jp
test
insb
xchg
cmp
jmp
and
sub
cmp
or
cmp
xor
xor
jb
adc
insb
loope
jmp
loopne
imulb
sahf
rcrb
fdiv
adc
push
push
mov
pop
xor
ja
js
jnp
bound
stos
insb
mov
jg
sbb
ja
push
jmp
sbb
rcrl
pop
into
xor
xor
aaa
mov
mov
fidivl
inc
mov
xchg
ja
xor
popa
sti
sub
push
movsl
sbb
add
sbb
aad
stos
dec
in
lea
je
xchg
enter
xor
cmp
fiadds
test
mov
les
push
daa
in
mov
sbb
or
inc
icebp
and
add
or
sub
out
cmp
jle
insl
out
pminub
clc
mov
jae
sahf
xchg
fisubl
scas
ficomps
pop
cwtl
js
insl
ljmp
push
lahf
sahf
mov
repnz
repnz
ret
mov
xlat
daa
clc
cmp
adc
and
add
movsl
jp
mov
cmc
mov
aaa
ret
lcall
sub
gs
data16
or
or
cs
sbb
lcall
mov
cmp
daa
sarl
shll
aad
in
es
repnz
fdivrs
call
and
dec
rcrl
and
dec
mov
out
std
sub
int
lret
xor
movsl
pop
mov
jge
dec
xchg
popa
lods
xor
inc
mov
daa
sub
push
out
fstps
in
adc
aaa
int
lods
cmp
fistps
in
std
add
push
int3
xor
mov
push
stos
inc
push
arpl
scas
stos
pop
out
js
movsb
stos
iret
xchg
lds
call
in
fisttpl
in
push
cmpsl
sbb
adc
fidivl
ficomps
mov
sbb
aaa
repz
fcompl
push
loope
adc
insl
lret
orl
mov
ja
cmp
jb
imul
mov
ja
mov
pusha
je
mov
push
shl
fcmovne
adc
std
addr16
jo
mov
jnp
add
push
dec
in
imul
xchg
jb
add
push
icebp
mov
in
out
vpsubw
filds
loopne
sti
imul
ja
pusha
xor
je
jbe
and
jae
jno
pop
dec
cmp
cmpsb
sbb
test
shrl
popa
cmp
shlb
ret
lcall
call
xor
sub
pop
mov
inc
xchg
push
pop
pop
xchg
jnp
pusha
movsb
outsl
in
ds
in
xor
aad
cmpsb
pop
loopne
cmpsb
shl
cmp
push
xlat
das
ret
sub
daa
cld
sub
or
cmp
push
mov
adc
add
adc
sbb
sbb
andl
imul
outsl
xchg
jo
outsl
xchg
je
inc
mov
pop
mov
dec
mov
jno
jae
gs
js
push
sahf
jne
jne
jo
daa
rclb
push
mov
pop
stos
pop
lods
push
mov
push
xchg
dec
mov
mov
mov
out
xor
push
mov
imulb
ljmp
cmp
jmp
loope
out
div
jmp
fsub
and
icebp
add
ret
xor
or
cmp
push
incb
fbld
enter
addr16
xor
mov
mov
mov
dec
incb
mov
xor
and
jo
xchg
imul
lods
xor
cmp
inc
lds
ja
es
scas
or
sbb
and
xor
mov
inc
fwait
jo
pop
popl
jo
push
lods
inc
lea
insl
xchg
add
mov
inc
mov
test
sti
push
jecxz
loopne
imulb
in
mov
ret
lret
adc
or
inc
pop
inc
or
rorb
fildl
rolb
mov
xchg
test
cs
dec
inc
dec
jecxz
mov
clc
jg
pop
pushf
cld
outsl
movsl
pusha
mov
sbb
sub
das
cmpsb
inc
lock
pop
mov
jbe
xchg
jecxz
mov
lret
adc
jge
pop
pop
add
ud2
orl
inc
cwtl
mov
jns
int
jl
popf
mov
cmp
xor
enter
lret
dec
imul
lea
mov
and
push
mov
jae
ja
or
test
aas
ljmp
xor
lret
fldenv
rorl
leave
imul
inc
jl
sbb
or
loop
inc
call
fidivl
fistl
dec
cwtl
xor
je
mov
lods
push
mov
arpl
negb
leave
cmp
scas
popa
jmp
cmpsb
sub
insb
imul
and
je
add
sbb
xchg
jo
and
aam
and
outsb
in
popa
fidivrl
cs
push
fucom
in
fldl
int3
out
xchg
icebp
enter
adc
adc
or
cmp
les
mov
mov
mov
aas
ds
insb
fwait
jle
dec
mov
les
adc
dec
out
inc
scas
sbb
mov
stos
pop
sahf
ljmp
adc
fiadds
jmp
daa
mov
roll
and
loop
movsb
jo
sbb
jg
cmc
mov
add
shl
dec
xor
out
inc
inc
hlt
iret
or
cwtl
stos
mov
cmp
jl
fidivrs
jl
dec
lcall
push
adc
in
pop
and
pushf
bound
mov
mov
dec
sahf
push
mov
xchg
inc
lret
out
fdivrs
mov
cli
mov
push
adc
hlt
sbb
lret
sahf
aaa
or
push
sub
lret
adc
ds
or
lock
xor
push
aam
mov
add
add
mov
aad
repz
test
mov
sbb
dec
lea
jne
sbb
psraw
clc
inc
shrl
divl
repnz
shlb
dec
cmpsl
insb
mov
sub
ds
jo
or
jb
sbb
mov
sbb
cmp
cs
imul
pop
mov
dec
lods
push
push
or
jne
add
pop
adc
jg
adc
andl
fldt
in
icebp
sbb
cwtl
jle
sbb
pop
jecxz
stc
or
xor
and
adc
das
in
mov
sti
add
and
inc
pop
xor
inc
mov
sbb
das
stc
and
xor
dec
shrl
pop
mov
inc
cmpsb
xor
push
jl
cltd
inc
test
push
sbb
cmp
aaa
xlat
cld
shrl
push
andb
jl
push
cmp
adc
mul
pusha
mov
sahf
and
sbb
or
outsb
xchg
outsb
xchg
in
sar
sti
xchg
adc
pop
xchg
xchg
or
pushf
jmp
and
lods
mov
dec
repnz
and
push
mov
xor
dec
ret
adc
push
cmp
je
push
dec
mov
push
inc
pop
aaa
xor
es
cmp
mov
popf
adc
or
adc
push
and
ret
dec
lock
mov
mov
daa
out
rorb
xor
daa
cld
push
in
mov
xchg
int
inc
movsl
dec
scas
js
ds
test
pop
adc
xchg
add
sub
aas
shlb
aas
test
lcall
jg
xor
imul
push
xchg
adc
sbb
xor
and
rcr
cli
loope
or
dec
lahf
dec
mov
pop
mov
xchg
scas
enter
fdivrs
test
or
lcall
push
add
sub
fs
sub
pop
mov
or
cmpsb
lods
mov
out
stos
scas
jo
sbb
test
mov
jno
push
xor
mov
mov
leave
into
fsts
addr16
xor
cmpb
in
pop
test
je
cmp
sbb
inc
test
subb
loopne
movsb
arpl
pop
iret
push
mov
cmp
jl
add
sbb
test
lret
insb
mov
xchg
jno
daa
fdivs
jmp
mov
out
fs
push
rcrb
xor
sbb
outsb
out
sbb
mov
ret
lretw
or
cmpsl
cmp
and
insb
cmpsl
jb
pop
mov
push
lock
ljmp
and
inc
cmp
mov
inc
cli
pop
and
mov
jo
push
xchg
icebp
sti
xor
insl
pop
jno
mov
mov
push
cmp
aad
test
fwait
cmc
aam
dec
mov
mov
mov
add
xor
repnz
cmpsb
jae
or
test
push
push
repnz
xlat
sub
into
jnp
es
int3
add
xchg
push
adc
inc
outsb
cmp
add
lock
add
pop
mov
jns
lahf
ds
andl
lods
xchg
lea
call
cmp
push
pop
push
outsb
pop
pop
dec
popa
dec
push
push
imul
addr16
mov
ds
das
xor
lahf
jns,pn
xor
inc
sub
xlat
mov
mov
faddl
rcll
fmull
push
roll
out
inc
int
cld
or
fdivrl
enter
sbb
fstpt
jno
xchg
test
pop
inc
js
add
pop
sti
shlb
push
fsubrl
imul
adc
xor
mov
into
push
das
mov
shll
mov
stos
es
xlat
stos
cmp
jbe
xlat
mov
ds
cs
in
xor
fwait
add
cli
sub
push
in
in
jmp
xchg
jg
insb
cwtl
outsl
cmpb
cwtl
or
sub
dec
stc
dec
sbb
aaa
mov
nop
sbb
pop
ret
out
sbb
sbb
daa
cld
add
int3
adc
pusha
cwtl
jae
jne
popa
pop
inc
scas
push
das
lock
aaa
aaa
sbb
aas
xchg
aaa
jecxz
int
aas
incb
loopne
hlt
pop
std
adc
sbb
adc
or
call
mov
mov
insl
lods
inc
xchg
pop
mov
lea
test
mov
fs
pop
cwtl
dec
mov
rcl
jl
mov
jge
mov
inc
jns
pop
jl
jo
xor
loopne
cmc
insb
in
pushf
xor
ss
enter
jae
enter
xor
test
arpl
shr
inc
fnstenv
adc
sub
popf
push
sbb
sbb
out
ljmp
data16
dec
lods
pop
mov
fdivrl
jnp
rdpmc
or
adc
xlat
jns
push
fcomp
mov
repz
mov
mov
dec
xchg
addr16
cmp
stc
test
pop
dec
jmp
sub
sysenter
lret
inc
ljmp
rorl
inc
add
pop
aad
sub
or
sti
sub
loop
fidivs
lretw
fs
push
mov
loop
decb
scas
push
repnz
jno
sti
inc
mov
mov
lods
cwtl
je
pop
nop
out
filds
into
scas
insb
and
scas
outsb
cmp
movsb
dec
arpl
dec
or
dec
mov
mov
int3
sahf
push
sub
mov
inc
fdivs
mov
or
bound
je
sub
fsubl
into
sub
add
adc
stos
jle
xor
push
add
mov
movsb
int
shlb
aam
dec
fs
outsb
out
roll
loopne
aad
andb
xlat
movsl
and
push
daa
inc
adc
mov
jae
clc
xchg
add
add
xchg
bound
jae
lret
scas
push
stos
pusha
cld
xlat
repz
xor
cmpsl
test
fidivl
adcb
inc
outsl
mov
xlat
lods
scas
shrb
in
jmp
lcall
pop
call
das
out
xchg
mov
dec
ds
lret
mov
xor
xchg
je
push
pop
push
mov
push
fcmovu
into
add
nop
sub
sbb
sub
adc
popa
mov
mov
mov
pop
movsb
pop
mov
push
mov
push
push
push
hlt
or
adc
sub
ljmp
push
leave
xor
add
add
cmp
aaa
sarl
out
push
xor
add
sbb
push
push
loop
cmc
loope
cmp
add
incb
adc
rorb
lea
jg
js
and
xchg
pop
test
pop
xorb
ret
jbe
push
mov
adc
cs
das
mov
sbb
lock
mov
mov
and
dec
loopne
out
push
fnsave
lss
pop
mov
lahf
pop
pop
push
mull
dec
imul
inc
ret
mov
imul
push
jp
insb
imul
icebp
int3
pop
divl
cli
xor
cmp
sbb
mov
pop
cmc
or
add
ftst
enter
ret
or
or
sbb
sarb
mov
mov
dec
stos
dec
mov
and
shll
rcll
aad
and
call
cbtw
push
insb
jmp
push
stos
pop
scas
adc
popa
mov
outsb
sbb
xchg
ds
mov
xchg
inc
hlt
and
call
adc
sbb
and
sbb
push
xlat
jge
adc
sbb
xor
stc
das
std
and
sbb
add
sbb
sbb
or
add
sub
bound
jns
jo
je
jp
sub
add
or
or
push
jecxz
fmull
loope
leave
or
cmp
cmp
sub
xor
adc
xor
adc
adc
add
adc
sbb
sbb
push
repnz
or
and
clc
cmp
xor
mov
push
nop
fs
pop
andb
pop
mov
dec
mov
gs
mov
cltd
pop
xchg
jg
pop
addl
push
loop
mov
sbb
xchg
inc
mov
imul
jp
inc
test
push
xchg
stos
jae
dec
addb
mov
test
pushf
fs
popa
cmpsb
inc
xchg
push
mov
arpl
jp
pop
jecxz
iret
xor
mov
xorl
ret
xor
mov
mov
leave
add
aam
fisubs
cld
adc
jl
jle
ss
shrw
push
pop
xchg
xchg
jbe
inc
in
fldenv
enter
out
shrl
int3
jb
das
ret
and
lds
push
std
das
and
adc
adc
hlt
add
pop
negl
cld
and
add
stos
or
rol
rorb
mov
movsb
add
mov
xchg
dec
mov
pushf
inc
test
dec
xchg
dec
aam
les
rclb
adc
in
fldt
rolb
or
adc
xor
into
sub
sub
push
movsl
pop
nop
push
test
push
movsl
dec
mov
dec
mov
mov
sbb
outsb
sarl
insb
fildl
xchg
fs
jbe
insl
cmpl
lds
lahf
xchg
fs
push
mov
cmp
and
aas
mov
lret
fisubrl
sti
and
les
mov
inc
mov
xchg
imul
mov
jne
pop
xchg
and
pop
xchg
push
lock
insl
leave
xor
pop
cli
cmp
rcrl
sarl
ret
fdivrl
shlb
cltd
sub
pop
adc
add
adc
movnti
adc
or
dec
les
shlb
sub
and
adcb
push
cwtl
dec
mov
inc
mov
xor
pop
pop
sub
aaa
pop
xor
gs
loopne
out
add
pop
cli
push
fsubrs
add
bound
insb
aaa
loop
push
das
push
outsl
and
push
xor
stos
stos
xchg
gs
jge
arpl
mov
inc
inc
aad
popf
push
mov
and
jae
rep
dec
lret
bound
jp
mov
insl
xchg
mov
leave
jne
lods
mov
icebp
xor
jne
xor
cmp
out
pop
stc
insb
cltd
jecxz
inc
mov
xchg
hlt
sarl
aam
into
movsl
clc
test
popa
out
aad
cld
lahf
push
xchg
cmp
mov
roll
into
and
mov
xor
cmp
std
jl
pusha
and
add
push
cmc
jle
pusha
lret
in
insb
stc
in
loopne
cmp
sbb
inc
jae
and
test
or
arpl
sub
add
cmpsb
push
scas
gs
scas
add
sbb
mov
push
mov
in
repz
fsubrs
out
loopne
nop
sub
sbb
inc
lods
arpl
pop
nop
jp
pop
mov
push
lods
pop
xchg
pop
mov
jnp
scas
adc
push
mov
jne
dec
stos
push
mov
push
cmpb
mov
dec
ljmp
and
sub
ds
sbb
add
cmp
cmp
and
and
xor
pop
stos
xor
pop
xchg
jl
jo
pusha
lea
jle
js
bound
bound
insb
mov
xchg
pop
fistps
iret
xor
sub
and
ss
cmp
sub
repz
ss
adc
sbb
or
or
adc
or
push
pop
pop
rolb
in
ret
pop
loopne
mov
inc
mov
push
xchg
push
cmpsb
imul
mov
mov
out
lock
in
or
lods
lock
popf
cs
in
in
and
scas
ret
arpl
lds
xchg
lods
jbe
push
mov
outsl
mov
sbb
inc
add
inc
xor
insb
scas
je
daa
xchg
pushf
cltd
inc
or
sbb
popa
and
and
fildl
lds
push
add
cmp
or
push
and
or
and
scas
push
sub
adc
dec
inc
sbb
lahf
jl
jl
pop
fwait
and
insb
pop
ss
fs
dec
sub
sub
push
push
cmp
push
js
xor
sbb
leave
adc
fidivrl
or
push
sbb
je
cmp
ljmp
sub
fldt
xchg
mov
sub
or
xlat
sub
loope
push
mov
dec
mov
or
xchg
cld
scas
inc
mov
dec
xchg
or
jns
sbb
adc
adc
sbb
push
repz
daa
testb
push
int3
adc
sbb
add
daa
fistpl
addr16
pop
cmpsl
dec
cmp
push
lcall
dec
push
pop
push
push
mov
push
imul
xlat
pop
fwait
sbb
mov
mov
jbe
mov
imul
jmp
sbb
js
and
aad
lret
and
es
dec
test
jg
dec
fwait
dec
mov
xchg
xchg
cmp
jle
add
push
cmpsb
push
stos
push
fldl
daa
push
ret
add
sub
or
and
sub
sub
xor
sbb
fiadds
sbb
in
repnz
clc
or
pslld
cmp
sarl
int
rcll
inc
stos
dec
mov
dec
mov
inc
testb
inc
adc
shrb
xchg
sub
pop
xorb
inc
mov
mov
clc
adc
loop
loopne
mov
subb
pusha
rolb
cli
adc
arpl
fs
jae
sbb
mov
xchg
cmc
adc
test
and
scas
scas
les
jae
test
dec
lods
pop
mov
out
xor
shl
jbe
out
add
cmp
sub
test
mov
inc
leave
or
es
or
jle
pop
mov
inc
mov
dec
leave
insb
xchg
adc
enter
stc
sub
or
jle
adc
cmpl
and
sub
addr16
aam
fiaddl
aaa
adc
mov
xor
cmp
mov
push
sub
add
push
push
test
dec
pusha
xchg
cmpsb
pop
scas
bound
or
lods
pop
mov
xor
out
sbb
psraw
enter
into
add
in
data16
out
fcoml
rclb
movsb
push
cmpsb
push
cmpb
cmpsb
push
mov
imul
lea
jns
mov
jo
xor
js
dec
push
imul
dec
mov
adc
es
xor
xor
movl
lret
roll
into
push
jmp
mull
jle
sub
outsb
out
pop
fstpl
outsb
shrl
push
lods
jbe
jbe
pop
mov
or
xor
add
adc
sub
sti
or
push
adc
out
cmp
jmp
loopne
cld
cmp
add
in
negb
in
jmp
xor
lods
inc
mov
dec
mov
pop
scas
pop
mov
jge
pop
ret
sub
xor
pop
lods
xor
ret
xor
pop
loopne
out
fldt
aad
stc
sub
pop
lea
imul
cld
xor
mov
add
mov
inc
mov
test
out
jbe
pop
jns
mov
pop
jo
mov
pusha
popf
dec
mov
dec
dec
xchg
jl
pop
stos
dec
popl
xor
or
xor
insb
xchg
dec
fnstcw
int
out
cmp
pop
lods
push
int
stos
pop
test
jae
popa
fldt
shll
mov
jl
push
subb
fwait
pop
fsts
pop
jmp
loope
shll
ret
and
enter
cmp
and
cs
shlb
push
fistl
fadds
rcl
cmc
add
add
xor
jecxz
xor
leave
sub
push
nop
mov
pop
mov
loop
movsb
arpl
jle
stc
mov
and
fisttpl
std
in
int
int
lock
or
sbb
xor
adc
fisttpll
in
fisubl
stc
cmp
add
imul
cmpsb
jl
and
jno
add
push
orb
fwait
push
test
fistpll
iret
cmp
out
jl
or
adc
or
pop
lock
pop
popf
pop
mov
mov
jl
gs
xorl
add
cltd
fisubs
push
movsb
movsl
lea
pusha
ljmp
add
mov
jge
jo
jb
add
pushf
sub
adc
sub
inc
addb
les
dec
lods
or
push
xchg
mov
push
popl
mov
and
movsb
pop
xchg
inc
mov
cmpsb
dec
movsl
insb
popf
leave
loopne
divl
loop
iret
add
pmuludq
inc
test
in
loop
call
sbb
cld
ljmp
repz
sub
ds
and
into
jle
aas
and
bswap
pop
idivb
adc
xor
movsl
push
lods
arpl
arpl
dec
pushf
push
xlat
jl
and
lcall
pop
cli
rcl
clc
lds
cmc
push
cmc
fcomip
or
out
sub
xor
ss
sbb
jo
js
xchg
jg
rcrl
jno
dec
mov
je
test
jo
inc
imul
addb
push
mov
outsl
movsl
push
mov
push
andl
out
jns
cmp
sbb
movsl
sbb
push
inc
inc
shll
cmc
jns
pop
mov
inc
icebp
jb
push
shlb
pop
movsl
mov
cwtl
inc
popl
pop
mov
dec
pop
mov
or
addl
jmp
daa
xor
cs
inc
cli
pop
incb
add
in
cmp
test
push
insb
enter
ljmp
sbb
imul
and
push
jmp
ds
xchg
sub
push
mov
xchg
add
fcmovbe
insb
lret
jmp
jl
xor
adc
cmp
fnstsw
or
aaa
ljmp
sbb
cmp
sub
xchg
push
jne
popf
push
pop
xchg
outsb
mov
inc
mov
sarl
popa
jo
mov
stos
inc
mov
jle
or
jnp
outsl
ret
popa
in
pop
cmpsb
imul
stc
insl
cld
adc
clc
add
cs
jae
or
sbb
ss
insl
in
das
rcrb
dec
nop
push
mov
out
jmp
xchg
mov
push
cltd
pop
mov
cwtl
push
mov
push
stos
cmp
lock
add
jmp
icebp
inc
mul
sbb
xlat
out
push
add
sbb
jmp
sti
fistpl
cmp
sbb
adc
adc
sub
and
inc
in
in
xor
jae
cmp
dec
andb
push
sahf
outsl
sahf
sub
cwtl
fs
add
xor
cmp
and
rorb
xor
xadd
or
imul
xor
sub
push
insl
fisubrs
cwtl
andl
fistl
mov
aaa
mov
pop
push
js
jno
jnp
xor
or
in
mov
or
into
add
adc
sti
sbb
lods
ljmp
or
test
mov
sbb
pop
popf
dec
enter
mov
jp
and
test
addr16
cltd
pop
xor
enter
lds
adc
out
mov
in
sti
add
mov
cmp
aam
and
loop
jmp
jb
fs
sub
js
js
jae
into
mov
mov
outsl
lahf
push
std
sbb
sub
test
lds
fnstcw
aaa
aad
int3
ja
pop
sbb
in
fdivrl
ret
sub
pop
and
mov
push
sub
xchg
pop
mov
pusha
imul
push
inc
lods
mov
mov
insb
test
push
cwtl
inc
fwait
sub
push
mov
push
mov
and
adc
sbb
cmp
lds
icebp
push
xchg
lods
cmc
inc
cld
or
push
push
in
loop
subb
jne
lods
dec
mov
ja
scas
outsl
data16
dec
fsubl
xchg
jne
inc
movsl
outsl
mov
mov
in
cmp
jmp
sbb
imull
lock
in
rol
add
clc
sub
das
mov
fidivs
sub
xor
sub
aas
testb
mov
pop
lock
cs
insl
lahf
adc
leavew
jne
xchg
add
sbb
pop
ret
dec
divb
fisubrl
clc
xor
in
adc
rcrl
aad
rcrb
jbe
push
inc
jnp
popf
mov
xchg
ret
push
iret
jnp
fwait
test
movsl
push
scas
dec
mov
cmpsb
adc
movsb
and
adc
push
mov
mov
or
sbb
push
cld
pop
stc
outsb
dec
lock
cld
jns
ds
sbb
int3
pusha
mov
jp
push
scas
inc
xchg
mov
mov
inc
lcall
addr16
mov
jb
into
add
pushf
adc
adc
and
aas
loope
call
fbld
testl
fcos
jmp
in
cs
loopne
cmp
cmp
inc
les
cmp
ss
ficoml
jecxz
aam
out
adc
das
fbld
pop
xchg
aam
daa
in
mov
jns
mov
jns
jp
inc
loope
rcll
popf
push
stc
ss
rorl
cmp
fcomp
and
ss
sbb
and
fisubrl
jle
ret
adc
adc
roll
shlb
mov
mov
jb
cwtl
inc
dec
lahf
sahf
aam
inc
jno
add
lds
call
pushf
pop
dec
mov
mov
mov
push
mov
lods
aas
xorl
dec
lds
call
jb
add
xchg
repnz
ret
adc
lea
gs
pop
jecxz
mov
sbb
adc
dec
mov
stos
lcall
jl
sub
hlt
mov
add
push
iret
insb
stc
or
sub
add
cmpsb
jg
cs
lcall
test
push
adc
cmp
cmp
sub
int
daa
rdmsr
or
jae
dec
mov
pusha
mov
inc
sub
sub
adc
outsl
out
sarb
shrl
adc
dec
cmp
jmp
test
adcl
jmp
mov
jmp
test
gs
mov
outsl
arpl
popa
orb
mov
pop
ja
shrl
jae
xor
lods
push
xchg
fs
jne
add
mov
xchg
loopne
scas
negb
rorb
ficoml
sub
add
and
pop
fdivs
sarb
outsb
std
aaa
call
ds
stos
aas
fdivl
roll
fnsave
fisttpll
fists
outsb
mov
xor
adc
mov
ss
scas
jbe
inc
add
je
rcrb
xor
fldl2t
sbb
fxch
aas
sbb
jno
mov
dec
cmpsl
xor
cs
call
and
xor
sbb
inc
mov
addr16
xor
cmpsb
bound
mov
inc
jle
push
mov
inc
jae
xchg
or
cmp
jl
in
ja
addr16
mov
push
stc
pop
shrl
mov
adc
sub
inc
xchg
xor
mov
out
imul
fisubs
cmpsb
mov
mov
inc
cmpsl
pop
xchg
imul
jne
jne
bound
pop
xchg
loope
cmp
shlb
arpl
enter
int3
jge
enter
daa
xlat
es
xor
push
shr
lods
negb
mov
jmp
cmp
or
rorl
in
add
or
es
and
cltd
outsb
fwait
pusha
stos
int
js
inc
mov
sbb
in
push
xor
inc
in
mov
das
lods
and
xor
shlb
hlt
insl
std
sbb
add
sbb
sub
bound
cltd
xor
mov
mov
dec
fwait
jle
jp
push
adc
pop
insb
addb
out
xchg
jne
jo
shll
push
xchg
inc
cwtl
xchg
mov
icebp
clc
enter
and
sbb
push
mov
les
enter
fisubs
xor
sbb
dec
mov
cmp
sbb
pop
mov
cli
fmull
jnp
data16
pop
aas
mov
ljmp
je
clc
aam
decb
and
sar
adc
pushf
cmp
add
fimull
and
call
sub
cltd
sub
stos
ret
xchg
or
pop
andl
in
mov
adc
xlat
inc
cmp
test
inc
sahf
movsl
mov
inc
jns
subb
je
push
mov
dec
stc
outsb
mov
push
mov
xchg
inc
mov
push
test
jbe
imul
stc
or
xor
inc
xchg
inc
in
insb
xlat
jne
or
arpl
outsl
xchg
or
push
jne
or
mov
inc
stos
scas
xorl
scas
adc
ss
mov
movl
cli
lea
sbb
daa
cli
and
pop
movb
fnsave
xor
or
sub
lods
mov
sbb
adc
subl
adc
adc
lahf
ljmp
and
js
popa
out
add
jnp
repnz
add
pop
mov
ds
xchg
or
enter
jo
or
ds
imul
das
mov
push
xor
clc
or
sbb
jae
and
or
imul
lcall
fwait
stos
ret
dec
xchg
lahf
jnp
pop
gs
in
push
mov
orl
addr16
sbb
push
mov
cmpsb
push
mov
jbe
adcl
xor
sbb
push
ljmp
cmp
aam
sti
push
stc
popa
mov
cmp
push
hlt
pop
fdivs
ret
mov
inc
sarb
or
push
sbb
js
sub
out
sub
mov
imulb
hlt
pop
not
cld
fwait
cmpsb
push
aad
ds
xlat
jge
push
das
push
roll
popf
cmp
pop
push
leave
xor
inc
lods
jge
into
mov
lcall
push
stos
add
insb
mov
mov
js
insb
mov
fidivl
dec
rorl
or
push
xor
pop
test
dec
sarl
push
jge
inc
pop
xchg
jle
es
inc
mov
jnp
inc
arpl
dec
push
mov
pop
xchg
pop
push
xchg
insl
inc
add
lods
dec
cld
in
mov
lea
inc
sub
sbb
or
jmp
loope
lret
adc
int
repz
adc
js
sbb
jnp
pavgb
insl
mov
cmp
cmp
pop
mov
sub
sub
inc
test
cmpsb
jnp
pop
mov
ret
xor
xor
aaa
call
pop
fnstenv
loopne
rcrb
sahf
xor
mulb
mov
xchg
sub
imull
xchg
and
sbb
push
loopne
and
jmp
inc
loope
pop
mov
mov
push
jbe
ljmp
lea
dec
lea
movsb
dec
cwtl
fs
fmull
popa
mov
dec
out
mov
in
inc
test
sbb
inc
lcall
inc
movsl
mov
pop
scas
js
pop
push
outsb
inc
xchg
push
icebp
arpl
outsl
cwtl
subl
ljmp
jp
jg
test
or
jp
cmpsb
push
push
std
cmp
pop
in
adc
das
iret
and
and
in
cmp
out
aam
or
aad
jmp
scas
add
sbb
adc
aas
or
das
mov
out
xchg
pop
aam
cli
cmp
or
mov
inc
mov
rolb
cwtl
jg
pusha
xchg
dec
cli
test
push
sbbl
jns
push
addl
cmpsb
sub
fnstenv
dec
cmp
add
and
pop
pushf
fs
sahf
stos
push
jge
pushf
push
ficoml
mov
mov
mov
jle
mov
nop
mov
jno
mov
xchg
dec
pop
nop
inc
js
jb
insl
pop
stc
fs
jae
outsl
shrb
cld
adc
movsl
sti
push
pop
mov
es
jge
sub
jnp
rorb
jne
push
lods
sahf
js
popa
mov
scas
arpl
jb
inc
mov
call
insb
and
leave
sub
or
ret
adc
std
xor
cmp
clc
das
lds
xor
notb
icebp
add
std
push
out
repnz
adc
add
add
cmp
aaa
mov
pop
fwait
cmp
add
add
or
add
add
outsb
outsl
jbe
jb
outsb
imul
jo
jae
add
push
jns
je
insl
add
adcl
je
or
dec
dec
push
jns
je
insl
add
push
imul
add
xor
add
inc
popa
je
xor
add
inc
popa
je
xor
add
add
add
add
and
add
add
call
add
adc
add
add
sub
add
xor
add
rcll
loopne
xchg
mov
pop
lds
xor
jmp
shrl
cli
xchg
push
mov
test
or
push
sbb
mov
add
movl
add
sub
lahf
test
scas
popl
sarl
xor
mov
or
xchg
jle
mov
test
sbb
pop
pop
add
cmp
xchg
xor
lahf
lods
cmpb
inc
add
test
xor
loopne
or
loopnew
sbb
pushf
or
add
xlat
lret
js
lds
lds
mov
fcmovu
xchg
jmp
cwtl
jns
push
jmp
sub
and
push
add
scas
xchg
out
sub
cwtl
out
mov
test
mov
repnz
enter
mov
push
pop
xchg
inc
cmp
or
lods
mov
jo
loopne
in
sbb
adc
outsb
stc
movsb
ja
jp
and
pop
mov
arpl
dec
stc
mov
xorl
or
aam
cli
nop
xor
cmpsb
aad
mov
adc
das
mov
or
pop
cmp
dec
add
popa
mov
xchg
incl
cmpsl
xchg
sarl
int
dec
imul
mov
out
push
leave
cmp
sbb
ror
stos
hlt
in
mov
pop
pop
xchg
inc
iret
add
lock
imulb
lock
add
cmc
jb
sbb
push
dec
sahf
xlat
lret
js
mov
mov
and
fisubl
int
push
cltd
lods
je
lret
jb
aaa
sub
rcrl
add
cmp
gs
test
xor
xlat
adc
les
cmc
fsubrs
xchg
fiadds
xor
dec
cwtl
adc
rcrl
stc
imulb
xchg
push
ret
xchg
mov
inc
jno
dec
push
lods
stos
pop
inc
sbb
popa
add
cmpsl
and
fsts
das
and
xchg
sbb
mov
jmp
cmp
mov
subb
stos
pop
mov
sub
jge
mov
xchg
push
jmp
mov
mov
dec
or
std
add
mov
shrb
mov
push
xor
inc
sub
mov
mov
inc
pop
fwait
dec
pop
andl
mov
sarb
bound
dec
dec
mov
inc
mov
sbb
mov
jbe
subl
mov
jle
mov
fists
arpl
inc
jb
inc
add
cmp
sub
pusha
ja
mov
pop
shr
shl
addr16
mov
fnstcw
ret
fwait
mov
inc
into
add
mov
lea
les
iret
push
adc
mov
call
inc
dec
mov
jl
and
pop
out
push
lods
dec
call
pop
shl
dec
inc
add
call
push
into
repnz
fucomi
pop
inc
mov
mov
clc
or
xchg
jae
test
adc
sbb
movsl
mov
xor
jb
imul
into
repnz
add
inc
jge
dec
push
ljmp
loope
aam
adc
cmp
mov
rcll
dec
test
repnz
jb
jecxz
xor
mov
pop
cmp
iret
add
sbb
or
dec
test
jbe
xchg
stos
scas
and
test
adc
insb
mov
ss
in
jp
cmp
adc
jmp
dec
lds
or
stos
ret
sarb
jg
add
ret
inc
fdiv
mov
stos
inc
in
ror
jb
mov
and
push
mov
rsm
jnp
cmp
das
and
push
push
mov
mov
xchg
add
outsb
jl
mov
imul
cmpsb
and
negl
fucomip
scas
pusha
cmp
nop
in
or
outsl
inc
gs
dec
fcmovnb
psllq
push
adc
sbb
mov
ds
cmp
out
filds
lods
lock
daa
cmp
loop
fisttps
insl
sub
leave
rolb
mov
movsl
and
sbb
dec
push
fiadds
jmp
cmp
sbb
xchg
mov
sub
or
mov
outsb
lds
mov
icebp
in
lret
int
push
ficoml
stos
sub
xchg
pop
in
jns,pn
idivl
xor
out
jbe
adc
jae
sub
in
and
test
std
jmp
in
add
dec
lock
test
push
inc
popf
mov
scas
sbb
cltd
add
stc
and
jbe
inc
ds
hlt
inc
xor
mov
stos
mov
jae
fldenv
andb
add
cmp
sub
mov
cs
xor
xchg
std
mov
outsl
mull
out
cmpsb
fnop
push
lock
sub
mov
lods
popf
arpl
xchg
add
sub
jns
loope
fists
sbb
dec
ffree
dec
cmp
cmp
pop
sbb
push
xor
jne
add
inc
addr16
je
in
push
lcall
mov
push
mov
and
adcb
pop
fs
mov
clc
out
dec
in
insl
sbb
dec
xlat
xor
push
test
add
iret
sub
cmpsl
lock
or
movsb
xchg
push
aam
xchg
jns
scas
ja
out
sar
push
popa
add
push
mov
inc
jne
ror
add
mov
scas
fstpl
adcl
xchg
out
pop
mov
rcrl
iret
in
sahf
dec
cmp
jb
enter
adc
xchg
ret
and
or
xchg
jno
outsl
jne
mov
mov
iret
push
popa
into
leave
xlat
jbe
xor
inc
ss
pop
test
add
push
adc
clts
fsts
stc
outsb
jne
loope
fucomip
xor
dec
in
iret
aas
mov
xchg
mov
scas
mov
push
das
pop
sbb
loope
pshufw
dec
or
ja
mov
mov
mov
fildll
jp
mov
inc
js
scas
mov
shrb
and
mov
sub
mov
ss
in
out
in
and
pop
inc
xlat
cmp
or
rcrl
sub
cmpsl
ljmp
pop
test
ret
outsb
stc
movsb
ja
in
nop
stos
inc
popa
cld
pop
jb
call
inc
dec
mov
lods
das
and
add
cli
lock
cmpsb
add
cmc
dec
xor
mov
stos
pop
mov
iret
add
add
cmp
sub
mov
rcr
or
or
add
loop
pop
mov
mov
inc
sbb
xchg
xor
je
push
pusha
pop
push
adc
cmovb
and
sbb
sub
loope
fcomip
aad
adc
cmp
sub
mov
sbb
es
mov
jmp
and
add
subl
shrb
and
mov
sub
mov
ss
in
out
in
and
pop
inc
xlat
cmp
or
rcrl
sub
cmpsl
ljmp
pop
test
ret
outsb
stc
movsb
ja
in
nop
stos
inc
popa
cld
pop
jb
call
inc
dec
mov
lods
das
and
add
cli
lock
cmpsb
add
cmc
dec
xor
mov
stos
pop
mov
iret
add
add
cmp
sub
mov
rcr
or
or
add
loop
pop
mov
mov
inc
sbb
xchg
xor
je
push
pusha
pop
push
adc
cmovb
and
sbb
sub
loope
fcomip
aad
adc
cmp
sub
mov
sbb
es
mov
jmp
and
add
subl
shrb
and
mov
sub
mov
ss
in
out
in
and
pop
inc
xlat
cmp
or
rcrl
sub
cmpsl
ljmp
pop
test
ret
outsb
stc
movsb
ja
in
nop
stos
inc
popa
cld
pop
jb
call
inc
dec
mov
lods
das
and
add
cli
lock
cmpsb
add
cmc
dec
xor
mov
stos
pop
mov
iret
add
add
cmp
sub
mov
rcr
or
or
add
loop
pop
mov
mov
inc
sbb
xchg
xor
je
push
pusha
pop
push
adc
cmovb
and
sbb
sub
loope
fcomip
aad
adc
cmp
sub
mov
sbb
es
mov
jmp
and
add
subl
shrb
and
mov
sub
mov
ss
in
out
in
and
pop
inc
xlat
cmp
or
rcrl
sub
cmpsl
ljmp
pop
test
ret
outsb
stc
movsb
ja
in
nop
stos
inc
popa
cld
pop
jb
call
inc
dec
mov
lods
das
and
add
cli
lock
cmpsb
add
cmc
dec
xor
mov
stos
pop
mov
iret
add
add
cmp
sub
mov
rcr
or
or
add
loop
pop
mov
mov
inc
sbb
xchg
xor
je
push
pusha
pop
push
adc
cmovb
and
sbb
sub
loope
fcomip
aad
adc
cmp
sub
mov
sbb
es
mov
jmp
and
add
subl
shrb
and
mov
sub
mov
ss
in
out
in
and
pop
inc
xlat
cmp
or
rcrl
sub
cmpsl
ljmp
pop
test
ret
outsb
stc
movsb
ja
in
nop
stos
inc
popa
cld
pop
jb
call
inc
dec
mov
lods
das
and
add
cli
lock
cmpsb
add
cmc
dec
xor
mov
stos
pop
mov
iret
add
add
cmp
sub
mov
rcr
or
or
add
loop
pop
mov
mov
inc
sbb
xchg
xor
je
push
pusha
pop
push
adc
cmovb
and
sbb
sub
loope
fcomip
aad
adc
cmp
sub
movsl
fnsave
pop
dec
sbb
daa
inc
jmp
push
cmp
cmpsb
jmp
and
push
in
inc
jno
js
mov
out
jecxz
push
jp
in
cs
add
push
fs
addb
lods
out
lock
sub
push
ja
out
pop
mov
iret
popa
negl
ljmp
cmpsl
decb
sub
inc
pop
lcall
push
out
push
leave
xor
dec
cmc
inc
jnp
xor
into
cltd
add
cli
lock
cmpsb
add
cmc
dec
xor
mov
stos
pop
mov
iret
add
add
cmp
sub
mov
rcr
or
or
add
loop
pop
mov
mov
inc
sbb
xchg
xor
je
push
pusha
pop
push
adc
cmovb
and
sbb
sub
loope
fcomip
aad
adc
cmp
sub
mov
sbb
es
mov
jmp
and
add
subl
shrb
and
mov
sub
mov
ss
in
out
in
jno
pop
inc
xlat
cmp
or
rcrl
sub
xchg
cmp
data16
lods
ja
cmp
sbb
rcrb
or
hlt
leave
mov
mov
stc
xor
es
sbb
dec
sti
add
cmc
or
daa
push
call
jnp
cmp
stos
lds
mov
sub
std
lahf
ss
lock
or
rcll
push
mov
cmp
cld
mov
xor
es
inc
movsb
aas
adc
add
sti
popf
negb
adc
hlt
push
push
inc
mov
clc
sub
loop
loopne
insb
adc
dec
cmpsl
enter
cld
jle
lock
cmpsb
or
pop
sbb
push
jle
xor
loopne
and
aaa
push
cli
push
test
adc
or
fisubrs
jnp
jmp
mov
inc
icebp
in
out
inc
in
and
inc
xlat
stos
dec
xor
scas
rcrl
sub
cmpsl
sbb
loope
lret
jbe
movsl
ja
out
xchg
stos
shll
pop
jb
push
inc
push
mov
loop
inc
and
cmp
xor
add
and
jle
fldcw
out
pop
xlat
sbb
shll
add
sub
repnz
ret
xchg
pop
sarl
incl
pop
jno
outsl
gs
mov
jle
inc
mov
sub
push
test
add
adc
inc
add
fcomi
and
sub
loop
or
mov
je
loop
sar
mov
scas
cmpsb
sbb
fwait
sbb
lret
mov
outsb
mov
ljmp
insb
push
adc
inc
incb
xchg
mov
push
sbb
aaa
cmp
repnz
out
xor
pop
push
xlat
sbb
or
ret
std
mov
repz
sub
out
ret
mov
push
ja
ds
leave
push
test
inc
push
call
out
cmpsb
lea
cld
xor
cmc
lcall
jae
push
pop
sub
shrb
xor
adc
movsl
add
rorb
mov
cmp
mov
inc
sub
sub
dec
cs
jl
sub
shr
fistps
mov
pop
jbe
stc
dec
sbb
mov
ds
enter
subb
xchg
nop
dec
cwtl
push
mov
xchg
aad
stc
add
cmp
sub
pop
ficoml
popf
dec
xchg
scas
xlat
cmp
xor
out
dec
adc
jp
add
or
mov
dec
addr16
insb
or
add
pop
and
xor
sti
xchg
add
nop
shrd
or
mov
out
movsb
in
and
dec
xchg
or
add
and
pop
cmpsl
dec
sbb
mov
ret
aad
or
in
out
mov
arpl
sub
mov
fistpl
and
xor
push
ret
mov
or
stos
jbe
pusha
lods
add
sub
xor
popa
js
fdivrs
pop
sub
mov
push
clc
lcall
dec
xchg
mov
outsl
jmp
adcl
cld
enter
mov
mov
lods
pop
jmp
hlt
stc
and
movsl
cs
cld
push
cmp
gs
jle
inc
xchg
ret
or
or
and
sub
mov
in
push
leave
mulb
dec
imull
faddl
pop
mov
mov
iret
test
adc
mov
test
pop
lahf
inc
repz
dec
xor
cmp
pop
cmp
iret
or
mov
pusha
push
mov
lea
repz
adc
out
sub
push
ret
xchg
aam
testl
dec
test
test
loop
mov
sti
xor
push
jno
xchg
cmpsl
stc
lea
xor
out
xchg
addr16
cmp
mov
jmp
xchg
mov
bnd
jge
pop
inc
sar
enter
dec
popf
mov
into
mov
mov
adc
dec
mov
lahf
cmp
mov
jb
or
xor
xchg
out
mov
jg
fs
push
sub
pop
into
into
rcll
loop
dec
popf
jp
icebp
fwait
out
adc
inc
xchg
ja,pt
pop
inc
dec
or
jp
out
int3
fwait
xor
mov
xor
adc
in
and
xor
push
jecxz
sub
mov
push
test
mov
jno
or
gs
xor
int3
xlat
and
or
fisttpl
or
nop
mov
out
insl
in
sub
xchg
bound
dec
std
push
aaa
lret
pusha
inc
xchg
mov
dec
cmp
adc
adc
mov
sbb
in
push
mov
sahf
cmp
fisubs
or
loope
mov
pop
fisttpl
adc
push
fstpt
add
jp
and
xchg
mov
insl
int
stos
out
jns
fbld
loope
in
and
mov
dec
loopne
jge
cmc
movsb
lods
pop
jb
xchg
sbb
pop
movsl
lods
adc
aad
imul
pop
jecxz
add
andb
mov
sbb
aaa
mov
and
sbb
cmp
jmp
aam
cli
insl
mov
xchg
cli
pushf
mov
jl
cmpsl
push
xor
mov
push
test
dec
cmp
add
nop
adc
cld
fcoml
mov
movsb
inc
ffreep
fs
clc
fs
loop
cmpsl
cld
nop
sbb
dec
cld
lock
andb
pop
jp
dec
imul
mov
push
add
fcoms
jg
out
cmp
mov
in
pop
icebp
inc
arpl
pop
jle
lea
mov
jae
pop
mov
lahf
xor
ss
lea
xor
push
push
pop
pop
adc
add
mov
xchg
insb
dec
dec
xor
ds
sbb
shlb
sub
or
imul
sahf
fnsave
jg
jno
jne
lret
clc
mov
es
mov
adc
hlt
pop
fdivl
push
push
aaa
jb
and
xchg
pop
mov
xchg
mov
push
xchg
sbb
shll
xor
jae
fwait
mov
mov
xorl
jle
dec
mov
adc
add
out
fldcw
jno
jae
push
in
and
xlat
dec
dec
divb
xchg
mov
and
out
push
popf
sub
cld
adc
sbb
cmc
dec
sbb
addr16
xor
rcll
xchg
push
andb
dec
ljmp
stos
pop
sahf
jge
adc
push
dec
mov
loope
jecxz
in
pushf
sbb
mov
ret
mov
ss
xchg
lcall
pop
xchg
push
mov
sbb
sub
lahf
scas
hlt
xor
pop
sahf
sahf
mov
pop
negl
and
scas
push
mov
repz
dec
ja
dec
sti
in
add
lock
mov
imul
mov
cmp
cmp
mov
jae
push
jnp
in
cmp
icebp
ja
mov
push
cmp
or
vcmpss
sub
lahf
adc
test
lock
arpl
data16
popa
cld
out
sbb
shrl
mov
lahf
xor
repz
fwait
icebp
imul
push
insl
or
mov
sub
jmp
sbb
mov
or
ret
mov
ret
in
adc
pusha
add
push
push
sbb
jbe
les
sub
js
push
mov
push
stos
mull
lcall
dec
lock
dec
xorb
loopne
cmp
pop
jmp
ds
sbb
cmpsb
movsl
sbb
movsb
imul
rorl
mov
add
jmp
and
inc
push
hlt
dec
add
aad
dec
add
scas
data16
xchg
outsl
push
jge
push
pop
mov
push
mov
jmp
lret
and
push
xor
xchg
push
mov
mov
pop
cmp
push
sbb
rcrl
out
sti
xor
fidivrs
out
mov
call
mov
push
xor
inc
cmp
mov
sub
lret
fxsave
pop
call
imul
pop
repz
sub
test
mov
ror
xchg
jbe
push
shrl
js
pusha
jae
and
or
rcll
mov
lock
icebp
in
mov
mov
rcr
push
into
mov
out
push
mov
jnp
mov
mov
pusha
fistl
add
imul
icebp
or
lret
or
rclb
out
lahf
daa
scas
icebp
ds
in
in
mov
dec
add
sahf
jp
pop
aam
sbb
cld
push
clc
mov
push
pushf
pop
cmp
scas
mov
ret
pop
ret
movsb
xchg
adc
mov
stos
popf
mov
out
fsubs
push
add
cld
or
rcrl
xor
jns
ljmp
leave
icebp
mov
dec
push
stc
movsb
ja
xor
stos
jns
mov
pop
jge
xchg
sbb
loopne
jge
icebp
cld
jg
jne
insb
into
cltd
add
imul
call
mov
cmpsl
push
fcmovnbe
in
push
xchg
sub
dec
imul
cmp
ss
add
in
pop
xor
sysret
sarl
mov
fidivrs
fs
inc
jge
inc
xchg
cmpsb
sbb
pushf
test
ja
andl
shrb
xlat
dec
test
sub
adc
dec
mov
cmp
outsl
addr16
sub
test
xor
cli
mov
lcall
cmp
xor
mov
push
add
cmp
cmp
cmp
push
and
imul
mov
xorb
cmp
and
cmpsl
cmpsl
cmp
aad
dec
xchg
sahf
rolb
fnstenv
jg
inc
stos
cwtl
repnz
xor
loop
vandnpd
jnp
in
nop
stos
inc
mov
mov
test
mov
jl
and
cli
aam
in
xor
jl
sub
pop
mov
xchg
dec
imul
je
xchg
ret
fldl
inc
dec
push
xor
xchg
cli
add
inc
addb
sbb
fndisi(8087
pop
gs
loope
push
mov
stos
cltd
popa
aas
lds
xchg
inc
nop
lahf
dec
jns
jle
lds
lds
outsl
rcl
mov
es
sub
loope
jecxz
shll
popf
scas
jg
into
mov
sti
jbe
xchg
pop
das
in
sbb
cmp
std
and
inc
cmp
mov
dec
lods
and
dec
jne
rol
pop
std
inc
mov
lods
cmp
inc
cmp
pop
pop
push
les
pop
jg
cltd
inc
jl
jmp
mov
or
pushf
scas
adc
flds
sub
jmp
xchg
dec
and
test
lds
mov
pop
das
je
insl
push
mov
fcoms
dec
mov
stc
mov
inc
daa
out
jbe
dec
cmpsb
add
mov
lea
add
mov
sbb
cwtl
sbbb
ret
mov
cmp
mov
mov
gs
mov
lock
test
or
inc
sub
arpl
and
ficoml
lock
xor
in
push
cmc
repz
mov
or
sbb
ret
mov
cmc
or
lock
call
or
fdivrl
lahf
and
pop
fidivl
jnp
cmp
in
rorb
jb
fisttps
cwtl
push
dec
mov
jmp
dec
mov
outsl
sub
mov
hlt
pop
dec
mov
ret
shlb
sub
sti
dec
fildll
mov
into
cltd
jb
ret
sti
hlt
mov
xchg
sbb
mov
xor
and
in
push
pop
gs
sbb
xchg
or
outsl
inc
sub
loop
mov
dec
adc
fcmovne
fucomp
js
repz
stos
shlb
aaa
push
or
les
out
iret
pop
cmpsb
in
cs
adc
gs
adc
ds
int
inc
inc
xor
add
insl
bound
adc
lods
add
hlt
stc
mov
jecxz
mov
aad
adc
cltd
sarl
nop
std
jne
mov
push
add
xchg
lret
decl
add
out
mov
stos
out
lock
dec
sub
mov
mov
lret
mov
mov
rorl
mov
test
pop
pop
fldpi
pop
sbb
adc
andl
push
pop
orb
xchg
dec
pop
loop
mov
es
sbb
mov
inc
popa
xchg
cmc
notl
insl
lea
mov
or
and
or
xchg
mov
inc
dec
cmp
iret
aam
dec
cmpsl
xchg
repz
push
xor
cwtl
cmovp
or
pop
mov
divb
sub
scas
or
jo
int
jno
adc
mov
push
gs
ret
daa
cmp
jae
inc
add
outsb
sahf
pusha
pop
mov
pop
jle
out
leave
jp
scas
imul
or
aad
jmp
lret
cmp
sub
or
cltd
mov
sub
outsb
inc
int
fcomp
adc
xchg
cwtl
mov
scas
push
push
xlat
push
mov
jle
jno
push
ja
mov
aaa
clc
push
enter
mov
cwtl
pop
push
repz
jno
add
or
dec
lds
pop
mov
mov
sub
pop
xchg
lcall
or
lcall
leave
jae
call
inc
arpl
mov
cmpsb
adc
das
daa
pop
repnz
add
xor
mov
jo
rcl
into
aaa
cmpsl
pop
shll
cmp
ret
jge
push
cmp
xchg
sti
shlb
aaa
push
or
call
xchg
cmp
lret
adc
aaa
xchg
in
adc
movsb
imulb
out
push
loopne
popf
iret
mov
jae
or
mov
popf
cmp
push
xor
mov
sbb
mov
aas
mov
jno
cs
dec
repnz
lds
and
dec
xchg
negl
mov
cmpsb
in
sub
cmp
subb
sar
cli
jo
loop
jl
gs
pop
aam
push
mov
mov
cmpsb
mov
insb
pop
sub
sub
xor
xor
xlat
jecxz
jmp
out
fwait
xor
push
dec
out
mov
imul
mov
or
adc
popf
jle
adc
cmp
jbe
insb
lea
or
sbb
jle
mov
lcall
inc
mov
popa
push
pop
nop
mov
adc
orl
outsl
loop
pop
mov
mov
inc
sbb
xchg
xor
je
push
pusha
pop
push
pop
adc
test
jmp
sbb
pop
or
aam
lret
lock
sbb
scas
mov
lods
rcll
jb
stos
stos
fmull
ja
div
mov
mov
js
push
mov
gs
icebp
movsb
jb
popf
jne
push
ljmp
jle
push
xchg
mov
ja
test
lds
xchg
sahf
pop
adc
push
mov
mov
